sub
stos
jbe
sbb
dec
ret
js
in
and
aad
mov
dec
and
cld
cmp
insb
je
jnp
pop
xchg
bound
inc
and
jg
dec
adc
adcl
push
imul
dec
add
jmp
sbb
lcall
mov
loop
push
in
in
outsl
and
mov
cwtl
add
scas
pop
jno
out
mov
dec
xor
lods
cs
jbe
leave
xchg
and
out
arpl
lock
lds
fidivs
rolb
inc
enter
loopne
cmp
pop
imul
push
aad
inc
stos
nop
pop
cmp
mov
pop
inc
imul
add
pushf
xor
test
sahf
add
dec
scas
jae
and
subl
pop
and
adc
outsl
scas
add
mov
roll
faddl
mov
push
jnp
scas
fiaddl
out
push
dec
or
push
sbb
mov
jle
nop
ret
in
lret
aaa
loope
push
add
sbb
cmp
je
nop
xor
inc
test
xchg
xor
push
push
mov
shld
push
dec
cltd
cmp
xchg
push
pop
mov
test
sbb
incb
mov
sbb
repz
orl
arpl
add
movl
jmp
lea
jne
lea
shl
mov
stc
add
bt
pushf
test
movzwl
add
mov
shl
mov
jmp
test
cmp
pushl
popl
clc
call
dec
stc
sahf
jle
nop
stos
es
sti
add
xchg
inc
in
jbe
push
clc
roll
cli
xchg
or
int
xchg
sbb
jnp
pop
adc
cmp
and
pop
clc
mov
mov
xchg
or
sub
mov
cmpl
mov
sbb
push
out
ret
xchg
cmc
ds
jbe
mov
cltd
jb
int
cwtl
mov
inc
imul
jo
stc
pusha
adc
and
dec
movb
pushl
pushl
pushf
shl
pusha
not
jmp
into
cmp
jge
nop
jmp
bndldx
pop
in
lcall
ds
loop
repz
rclb
aaa
aad
mov
lea
inc
sarl
and
call
ja
movsb
cmc
cmpsl
adc
xor
fisubl
xchg
push
sar
and
mov
imul
jb
push
cmp
lahf
lods
xor
xchg
adc
jbe
jo
incb
mov
mov
imul
ja
loope
mov
jmp
adc
iret
fildl
fisttpll
popa
sbb
repz
les
mov
scas
push
and
insl
jo
jo
jmp
mov
jbe
sub
add
xchg
fdiv
inc
mov
and
test
sbb
cmpsb
cmp
int3
out
addr16
aam
out
je
mov
xchg
test
or
add
push
mov
sbb
jp
es
ffreep
stos
lock
push
inc
imul
mov
lcall
mov
nop
mov
data16
dec
ja
or
dec
stos
cmp
sub
add
mov
add
mov
add
fstl
aaa
ret
addb
mov
mov
andb
jmp
inc
iret
aaa
fdivrl
nop
call
dec
mov
lods
xchg
and
jbe
adc
cwtl
mov
add
xchg
adc
jnp
pop
or
adc
cmp
mov
test
fs
sub
mov
stos
test
ret
push
jnp
in
mov
imul
add
pop
gs
mov
and
scas
mov
and
dec
push
rolb
xchg
add
add
add
and
add
imul
add
add
add
add
add
test
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
scas
add
sub
add
xchg
add
add
add
add
jmp
call
clc
mov
shr
bt
mov
pushl
bt
cmp
pusha
mov
lea
je
jmp
neg
cwtl
adc
mov
test
push
push
pushf
shl
mov
pushf
pusha
call
dec
mov
lock
xchg
push
add
and
xchg
pusha
adc
push
adc
cmp
flds
dec
jge
mov
fisttps
mov
in
ja
fldl
jbe
sub
and
adc
inc
push
ret
addl
mov
rclb
mov
jae
stos
mov
xor
mov
ret
dec
adc
mov
out
adc
stc
jmp
fs
jp
nop
mov
add
shrl
push
pop
adc
aam
dec
imul
ror
adc
or
and
je
outsl
idiv
mov
jnp
out
dec
sub
testb
jno
rclb
stos
outsb
arpl
add
lods
lea
push
jno
xlat
sbb
push
repz
cmpsl
or
fneni(8087
insl
test
and
push
pushl
movl
mov
pushf
pusha
movl
pushf
lea
jmp
les
jp
nop
pop
cli
lds
movsb
cmpsb
das
sbb
fiaddl
sub
shll
dec
inc
adc
fisubrs
xor
fsubrl
bound
sbb
mulb
xchg
or
xor
inc
leave
cmc
lods
in
xor
push
inc
insb
outsb
test
idiv
adc
xor
mov
test
push
cld
mov
dec
push
xchg
cmp
lock
dec
mov
js
int
add
sub
js
sbb
pop
push
fucomp
in
aaa
xchg
jno
insl
jnp
repz
aaa
leave
add
stos
cmp
pop
call
clc
sub
ljmp
hlt
loope
arpl
mov
push
decl
arpl
decb
bnd
pop
int
stc
mov
mov
jmp
add
js
nop
fidivrs
lea
bound
movsl
lods
pusha
fcoms
mov
aam
leave
das
mov
je
imul
jge
mov
dec
mov
ret
adc
cmp
dec
in
push
adc
std
xor
bound
mov
cmp
int3
push
insb
inc
pop
xchg
cmpb
mov
dec
fabs
xchg
cltd
jle
or
jp
pop
jbe
in
jo
cli
add
lods
pushl
popl
pushf
push
pushl
ret
push
lock
std
std
mov
or
hlt
xorb
mov
sub
pushf
mov
pop
pop
ss
cli
cld
sub
adc
dec
mov
pop
les
jmp
sub
test
sub
sub
inc
ss
mov
xchg
push
push
mov
xchg
dec
xchg
js
bound
enter
filds
pop
int
lock
fnstenv
hlt
pop
dec
mov
inc
sarb
lret
mov
dec
or
xchg
fldt
sbb
push
repnz
pop
sub
xor
xchg
fnstsw
add
lds
mov
mov
call
mov
sbb
and
mov
mov
mov
aaa
jg
dec
icebp
pop
jmp
and
dec
xchg
mov
popl
push
js
nop
sbb
insb
xchg
mov
aaa
test
adc
jae
popf
je
testl
push
add
out
scas
cmpsb
repz
repnz
sbb
pcmpgtw
jo
cs
inc
in
mov
inc
jmp
ja
mov
add
mov
cmp
fidivl
mov
cs
je
sub
pop
ljmp
mov
lods
push
clc
addb
repnz
maskmovq
testl
sbb
cli
lahf
jbe
nop
stos
xchg
mov
lock
adc
push
cltd
int
adc
sub
cli
add
mov
fidivl
movsl
or
out
movl
sub
into
or
int
rclb
test
and
inc
xor
fcomps
add
in
insb
int
scas
adcl
push
jge
sub
ljmp
or
xor
popf
addr16
fsubrl
sub
pop
lock
jbe
nop
bound
xchg
mull
pop
sub
jmp
subl
xor
bound
mov
xchg
andb
jbe
nop
cmp
orl
sub
flds
mov
std
ss
ss
scas
nop
mov
jge
xchg
sbb
sbb
ret
stos
out
pop
mov
loope
jns
push
stos
cwtl
xchg
decb
jl
insb
or
lcall
leave
out
or
movsl
xchg
lret
sti
shlb
sub
in
mov
syscall
roll
insb
lret
out
aam
subl
xchg
or
cli
movsb
jb
incb
xor
jae
punpckhwd
push
arpl
rorb
bt
pusha
jmp
repnz
movsl
mov
in
imul
mov
stos
add
ss
nop
mov
cmp
adc
out
sbb
mov
push
dec
movsb
je
nop
sub
lods
mov
fsubrs
push
inc
xchg
mov
incb
out
xchg
je
nop
and
xor
mov
shr
stc
sahf
je
nop
stos
inc
scas
fcmovnb
outsl
popf
cmp
out
aad
xchg
mov
jp
xor
je
nop
xchg
cli
cmp
xor
in
cli
jecxz
jp
ds
push
popf
outsb
out
fildll
xor
and
outsb
sub
inc
dec
out
movsl
or
imul
stc
testb
repz
adc
jne
mov
int3
sbb
push
xchg
add
push
mov
pushf
and
dec
div
lods
jmp
fmul
lock
xchg
adc
mov
rcr
sub
lea
mov
xchg
lods
bt
xor
push
stc
call
pusha
pusha
push
mov
call
lea
je
stc
push
cmp
cmp
lea
pusha
call
cmc
pushl
sub
test
clc
bt
cmp
pushf
jmp
cld
mov
cmp
and
pop
test
sbb
aaa
jp
sub
adc
cmp
loope
jns
xor
dec
movsl
or
or
and
ss
hlt
shll
cld
jge
dec
sti
xlat
das
cmp
lret
pmaxub
mov
in
dec
and
add
outsl
sub
xor
popa
nop
mov
pop
jle
or
pop
movsb
mov
ret
xchg
jbe
inc
enter
nop
ret
fucomip
push
mov
push
pop
push
adc
sti
out
xchg
mov
test
add
xor
inc
mov
dec
sarb
lret
mov
js
les
fbstp
push
add
and
xchg
xor
jnp
mov
and
insb
imul
mov
insl
lods
and
or
inc
dec
scas
xchg
pop
in
das
xlat
frstor
ljmp
inc
adc
and
jb
pushf
stc
jmp
sub
jb
nop
add
dec
xchg
pop
or
stos
jg
fsts
insb
in
xchg
imul
lock
xor
pop
lret
pushf
es
adc
mov
cltd
mov
and
mov
or
call
pusha
movl
pushf
pusha
lea
jmp
pushl
popl
pushf
pushl
ret
mov
nop
xchg
push
clc
add
test
jne
ljmp
popa
xor
fdivrp
jmp
inc
pop
enter
cmpsl
dec
nop
and
cltd
mov
mov
pop
test
inc
inc
rolb
iret
add
cmp
mov
inc
mov
nop
jp
add
out
mov
icebp
sub
daa
jp
mov
cs
mov
vpsrld
mov
cmp
cmp
ret
stos
repnz
sub
adc
adc
xchg
jae
pusha
aad
lock
loope
xchg
mov
iret
cmp
cltd
enter
push
push
fcom
push
adc
dec
rcrb
in
ja
int3
mov
into
and
sbb
lods
ss
lock
xchg
imul
jne
xor
inc
out
clc
aam
adcb
sbb
ljmp
popf
out
dec
and
mov
out
ret
fldl
push
sti
and
lret
arpl
lahf
cltd
ret
mov
jge
push
stc
jno
nop
add
sub
xchg
and
je
mov
mov
inc
mov
inc
leave
in
mov
or
add
pop
xor
jmp
pop
sbb
aad
aaa
in
outsl
sub
fisubrs
in
jge
nopl
cmpsl
jmpw
mov
imul
jmpw
jge
jp
xchg
cld
orl
pop
mov
pop
in
stos
imul
roll
xor
nop
ds
dec
pop
inc
out
pop
test
lds
sub
sbb
fs
push
pop
jnp
sbb
jl
fs
test
jae
dec
add
sbb
jns
jecxz
int
push
mov
aas
inc
lods
jne
mov
and
add
cmpsb
xchg
sbb
pushf
movl
jmp
iret
ja
jno
nop
sub
int
cmp
jge
jno
pop
mov
pop
jno
nop
call
and
fstl
movsl
scas
flds
mov
xchg
pop
mov
popa
aam
loopne
lock
test
push
pop
inc
dec
mov
inc
sub
mov
outsl
lock
in
repnz
mov
inc
mov
jae
repz
lock
scas
ljmp
cmp
jge
fs
push
out
xlat
push
jo
nop
dec
mov
fadds
push
popa
lret
push
and
or
daa
push
decb
ja
lds
loopne
mov
movl
pushf
pusha
pushf
lea
jmp
dec
jno
jo
nop
and
jno
and
fcoml
ds
sub
cs
cmpsb
mov
into
sub
addr16
fadds
aaa
sub
cmpsl
add
jns
test
xorb
xchg
clc
xchg
daa
xor
and
push
shrb
xchg
adc
in
mov
xor
add
push
and
lea
xor
sub
in
jne
shrb
cmp
xchg
rcr
sbb
outsl
lock
push
mov
enter
jb
inc
mov
movsl
xor
daa
and
outsl
cli
mov
dec
mov
inc
aam
inc
mov
push
jg
push
sub
test
and
mov
jp
test
sub
sub
jns
pop
dec
cmp
add
mov
jmp
cmp
andl
ret
lret
mov
lahf
push
call
loope
dec
xor
jns
imul
ja
mov
cmpsl
mov
add
fildll
std
adc
test
lret
jl
shrb
sti
movsl
jo
cmc
movsb
lods
dec
jle
sar
mov
ret
aas
call
ret
gs
and
sarb
jl
push
sbb
push
xchg
addl
mov
xlat
cmp
or
movsl
push
xchg
mov
dec
pop
aad
movsb
jo
push
xor
movsb
push
or
test
mov
sbb
mov
sahf
inc
lret
mov
sbb
xchg
repz
and
rclb
xor
add
mov
mov
cmp
pop
cmpsb
push
fiaddl
ljmp
jno
xlat
xlat
pusha
sti
in
stos
aad
std
xchg
ret
jmp
inc
jge
sbb
sub
inc
or
cwtl
scas
and
inc
adc
adc
lods
xchg
jl
out
push
repz
sbb
ret
ja
pop
xchg
mov
call
cmp
inc
insl
xor
pop
sub
call
mov
xor
or
pop
and
outsb
lock
pop
sbb
mov
mov
sub
aam
push
dec
flds
dec
js
and
xchg
dec
roll
mov
sbb
push
decb
int3
and
sub
out
and
lea
pop
or
sbb
jnp
push
or
xchg
push
pop
lea
mov
sbb
push
sub
push
mov
repz
lcall
lea
jbe
pushf
pusha
lea
ja
stc
add
pushf
or
jmp
sub
sub
xadd
mov
dec
mov
adc
mov
cmc
call
add
pushl
or
clc
sub
clc
rcr
shr
bts
bt
pop
mov
shrd
add
push
add
lea
shl
mov
call
pushf
lea
jae
call
pushf
xchg
adc
pushf
btr
mov
pushf
test
sub
pushf
rep
pushf
not
mov
push
movb
pushf
lea
jmp
pushf
lea
je
cmc
call
call
cmp
mov
lock
mov
inc
mov
push
sar
inc
stc
addr16
mov
shrl
sar
add
inc
xlat
jecxz
inc
fwait
int
std
xchg
cmc
push
mov
into
mov
mov
xor
and
sahf
cld
cld
into
or
bound
lcall
push
inc
sub
jp
add
gs
es
sbb
pusha
shr
sbb
add
xchg
test
add
inc
and
add
je
add
fs
jne
jns
push
pusha
inc
call
jb
imul
loop
xchg
push
sbb
pushf
daa
insb
jne
pop
or
filds
sbb
or
cmp
push
cltd
xchg
dec
push
xor
mov
adc
ret
aad
sub
in
sbb
adc
mov
mov
inc
xchg
fstl
mov
adc
loope
aas
std
imul
fs
fldl
ljmp
cmp
in
out
cmpsl
jno
insb
not
and
inc
movl
movl
jmp
movl
pushl
movw
pushl
pushl
popl
mov
pushf
push
pushl
ret
addb
lock
test
adc
dec
aad
stos
adc
mov
push
mov
pop
sti
push
mov
sub
rcrb
out
ficompl
dec
or
lahf
insl
clc
xchg
nop
push
mov
adc
fwait
cwtl
fldcw
and
sub
movsl
fcoml
xchg
lahf
mov
neg
loope
sbb
sub
adc
cmpsb
add
fildl
leave
push
jnp
stos
xor
mov
adc
out
int3
bswap
bswap
mov
pushf
pop
jmp
dec
cmc
xor
movb
dec
push
bt
call
adc
jmp
adc
nop
xchg
push
cmp
xor
in
sbb
mov
nop
jle
push
and
test
add
dec
push
and
or
negb
cmpsl
mov
cmp
mov
popf
test
xor
push
in
pop
jns
xor
imull
ljmp
jmp
pop
cwtl
jmp
gs
aam
dec
jne
mov
sub
cs
dec
push
push
jg
add
enter
int
rol
add
ror
bswap
pushf
clc
mov
rcr
mov
movb
repnz
jmp
cmp
push
pusha
lea
ja
jmp
ja
push
dec
pop
add
add
lahf
cmp
and
sbb
sbb
sbb
clc
lret
add
cmp
icebp
std
pop
and
xchg
push
inc
enter
fidivrs
gs
jmp
xlat
jno
lahf
sub
xlat
aas
vrsqrtss
dec
mov
xchg
and
adc
add
add
test
or
cwtl
setne
call
lea
call
push
push
mov
pushf
push
pusha
mov
lea
jmp
out
jno
push
pop
ret
iret
cltd
ret
bound
pop
cmp
mov
mov
sub
fidivl
pop
arpl
cs
es
lret
lods
clc
xchg
pop
mov
pop
sbbb
lods
iret
inc
and
push
out
xchg
insl
jns
pop
cli
dec
jno
mov
mov
xchg
dec
ljmp
mov
xchg
xchg
ret
mov
mov
push
icebp
add
je
mov
add
out
popa
sbb
test
push
sti
push
fwait
xchg
jnp
adc
lods
movsb
xchg
or
xor
mov
nop
mov
insl
cmp
out
nop
xor
cmpsl
jo
cltd
fisttps
dec
inc
fstp
dec
fistpll
or
sahf
pop
and
aas
xorb
bound
loopne
gs
cmpb
jg
negl
mov
adc
pop
or
cmp
test
jp
ljmp
arpl
xor
cwtl
pop
arpl
mov
xor
or
mov
nop
jecxz
or
sarb
push
mov
xlat
lock
jmp
lcall
mov
inc
jge
mov
push
fistps
insl
shrb
jmp
nop
jg
out
ds
je
jmp
data16
in
lret
adc
pop
bt
out
jecxz
xlat
xchg
cmpsl
sub
mov
cmc
sbb
cmp
mov
jl
dec
shl
lods
fdivl
loope
jnp
push
test
xchg
adc
add
sub
pop
lock
imul
popa
imull
rclb
cmp
aas
mov
lock
cmpsl
test
sarb
xchg
push
mov
mov
jge
add
gs
push
leave
js
mov
rolb
and
hlt
push
mov
inc
jo
xlat
pop
in
repnz
lods
icebp
js
cmpsl
dec
scas
fwait
and
mov
mov
jecxz
add
mov
nop
out
lea
dec
js
xlat
popa
fwait
push
and
push
js
clc
sbb
outsb
push
je
sbb
popf
xchg
sti
adc
addr16
int
ret
dec
cmpl
dec
xchg
icebp
push
mov
pop
stos
xor
and
mov
add
es
mov
imul
sbb
lods
out
push
dec
and
test
aaa
pop
sub
pop
dec
in
mov
int
stc
jg
jmp
cmp
dec
pop
stos
sti
push
outsl
jle
test
nop
add
insb
pop
and
mov
sub
fsubrp
adc
and
loope
mov
fs
notb
sbb
cmp
fcoms
cltd
mov
mov
pop
and
lods
pop
cmp
add
xchg
daa
add
fdivrl
jae
cmpsl
and
in
adcl
nop
subb
pushl
mov
fidivl
mov
in
cmp
sub
pop
add
jbe
in
jno
pop
or
rorl
je
or
test
add
add
fs
pop
xchg
pop
or
hlt
sbb
jae
hlt
lods
cmp
or
outsl
gs
mov
pop
sbb
mov
sbb
mov
rcrl
int3
sbb
add
xchg
sub
sbb
outsb
int
dec
push
mov
fdivrs
loop
mov
aad
insl
int
fistpl
dec
daa
icebp
pop
inc
insb
jno
add
subl
pop
test
lahf
fs
stos
out
pushf
xchg
xchg
pop
fdivl
movsl
dec
out
loope
fldenv
ret
call
mov
jge
les
jns
mov
push
cs
jnp
jnp
shrl
mov
inc
insl
jecxz
push
or
cli
pavgw
lret
sbb
inc
das
int
fdivrl
jecxz
pop
xchg
clc
sbb
call
adc
pop
ret
xor
push
mov
and
call
ror
stc
movl
not
movb
cmc
pushf
xor
cmc
pushf
neg
cmp
bt
push
push
mov
cmp
cmc
cmc
add
call
adcl
aaa
and
cmc
mov
sbb
lcall
inc
sbb
jb
xor
lods
mov
lcall
hlt
aas
cmp
or
sbb
xor
and
pop
scas
call
ss
rcr
addr16
aad
loop
dec
aad
popa
leave
cs
bound
dec
or
add
sbbb
add
test
add
sbb
lea
mov
clc
clc
call
imul
fs
fs
in
clc
test
lret
inc
mov
rorb
cld
mov
mov
xchg
in
leave
and
xchg
repnz
push
mov
inc
jne
int3
mov
jbe
bound
push
mov
adc
iret
je
inc
enter
shrl
jl
and
fidivrs
lock
or
mov
ds
mov
repnz
mov
dec
xor
arpl
nop
mov
push
fildll
push
js
clc
xchg
sub
cmp
sub
push
pop
add
push
lret
lock
xlat
mov
repnz
fildl
pop
mov
and
mov
lock
movsb
into
sub
stc
subl
ljmp
xor
push
andl
xchg
xor
or
cmp
inc
push
mov
dec
call
xchg
adc
and
aaa
in
cmpsl
stos
ljmp
fwait
xor
pop
xor
std
mov
icebp
sbbb
mov
adc
loopne
push
jge
lret
dec
call
ret
mov
mov
inc
pop
mov
push
cld
inc
xchg
aam
dec
loopne
push
mov
sbb
inc
iret
xor
nop
aas
fiaddl
faddl
cmp
insb
repz
hlt
nop
xchg
test
mov
xchg
xchg
or
jnp
inc
sub
lcall
dec
xchg
mov
ljmp
jnp
leave
sbb
inc
ja
fsts
fidivl
lcall
scas
push
sbb
enter
add
jl
daa
mov
not
pusha
cwtl
lea
call
sub
mov
adc
or
or
cmp
popa
lock
out
pusha
adc
cmp
xchg
outsl
sub
adc
movl
pop
lea
mov
out
sti
inc
jnp
cld
adc
jmp
push
fsubrs
insb
mov
rorl
shrb
imul
jp
jno
dec
pop
adc
jmp
sbb
mov
jbe
mov
dec
int3
cmpsl
lock
cmp
nop
inc
rorb
cmc
or
mov
dec
and
nop
out
and
leave
adc
xor
inc
lret
mov
mov
jp
sub
adcb
jl
ljmp
jno
inc
xchg
lods
jecxz
mov
push
outsl
out
dec
adc
xor
sbb
sbb
inc
sbb
inc
into
pusha
sti
jae
fwait
xchg
add
xchg
pop
xchg
push
lods
xor
repz
or
cmpsb
repnz
push
and
stos
sub
aaa
mov
mov
lock
scas
mov
loope
cmpsl
lea
je
pushf
xadd
rol
rol
mov
push
add
movzbl
movsbw
movsbw
add
mov
call
jmp
pusha
lea
ja
not
not
mov
inc
jmp
lea
pusha
lock
cmp
movsl
out
sbb
or
and
and
mov
xchg
mov
pop
xchg
fcoml
mov
adc
das
cmp
cmp
pop
testb
jmp
fcmovbe
out
cli
sbb
xchg
add
sub
push
xor
sahf
fadds
ret
int
clc
aad
cs
fsubl
ss
bound
jge
cmpsb
lock
sbb
call
movw
pushf
lea
je
test
sub
jmp
push
pop
dec
pop
lock
push
rcr
inc
mov
in
fnstsw
mov
into
enter
popa
mov
mov
jne
push
pop
mov
lods
pop
es
xchg
add
lods
in
mov
std
adc
sti
pushf
mov
adc
dec
jl
adc
cli
lret
push
mov
dec
mov
lahf
push
dec
sti
lret
add
push
mov
jle
sbb
ret
repz
jl,pt
popf
inc
push
or
mov
pop
lock
xor
pushf
pop
adc
jno
xchg
fidivrs
jae
decl
les
mov
sub
push
repnz
movsl
or
xor
in
mov
out
cmc
inc
or
sub
mov
sub
popf
or
push
jge
sbb
cmp
pushf
ret
jae
inc
dec
outsl
adc
dec
pop
sub
dec
lea
dec
shl
mov
and
add
pop
mov
xchg
lahf
and
test
add
adc
test
sbb
push
jns
lock
ja
mov
xor
and
sub
enter
sbb
cli
cmp
stos
mov
jnp
scas
sub
mov
cmpl
and
sub
adc
mov
andb
xchg
scas
fcmovnu
mov
cmp
clc
aad
aaa
sub
mov
push
imul
inc
movsl
and
fldenv
push
dec
addr16
adc
push
sub
mov
add
dec
iret
xchg
xchg
test
aas
jg
das
inc
or
xchg
mov
and
lods
sub
sub
or
jae
fisubs
jge,pn
pop
arpl
mov
mov
insb
imul
cltd
sub
add
and
push
jle
insl
jnp
fstp
enter
pop
in
xchg
and
stos
iret
repz
and
dec
daa
pusha
and
mov
pop
adc
inc
sub
movb
insl
ret
pop
cmp
push
stc
push
fldt
cmp
and
xchg
or
and
mov
pop
and
aam
cltd
or
loopne
lods
aaa
sub
push
xchg
ljmp
pop
mov
push
or
loopne
push
stos
rclb
xchg
mov
loopne
mov
pop
ljmp
scas
add
in
sub
cltd
push
mov
ret
add
xchg
mov
into
das
xchg
mov
xchg
fsts
push
rolb
xchg
sbb
mov
sub
adc
fistpll
add
in
mov
sub
push
stos
or
in
push
addr16
add
in
push
stos
pop
ljmp
js
mov
jmp
xchg
roll
insb
in
in
xchg
pop
adc
or
scas
das
xchg
mov
xchg
cmp
push
loop
or
adc
repz
pop
add
in
insl
xchg
std
adc
ds
fists
pop
xchg
fsts
pop
and
mov
adcl
xchg
adc
fisttps
enter
leave
in
dec
out
shrb
arpl
orl
jge
lods
add
in
scas
xchg
aas
adc
pop
xchg
cmp
xchg
mov
or
mov
sbb
mov
xchg
adc
or
rcrb
call
adc
xchg
outsl
add
in
dec
xchg
fcoms
imul
add
adc
lods
sbb
add
adc
or
push
mov
xchg
add
pushf
xchg
in
adc
call
test
dec
adc
ljmp
lods
xchg
dec
adc
or
ds
sahf
xchg
das
add
adc
or
repnz
push
ljmp
insl
in
cmp
or
pop
mov
in
jmp
bound
orb
fcoml
outsb
xchg
push
adc
fcoms
mov
dec
ljmp
fdivrs
lahf
cmp
or
pop
push
in
test
sub
rcll
pop
xchg
in
adc
out
outsl
pop
xchg
incl
pop
in
cmp
cltd
dec
out
repnz
arpl
insb
xchg
sbb
mov
sahf
xchg
lsl
cwtl
xchg
leave
adc
rcrb
or
rcl
insb
xchg
insl
add
adc
sbb
add
ret
xchg
dec
adc
or
int
dec
xchg
scas
add
scas
xchg
sub
mov
test
jae
addl
in
pop
xchg
lods
adc
or
scas
or
and
xor
dec
or
ljmp
stos
or
lods
xchg
adc
enter
test
xchg
or
xchg
sbb
lods
add
lea
mov
sub
test
arpl
or
pushf
xchg
sub
xchg
mov
pop
or
or
cwtl
xchg
jmp
ljmp
or
int
push
xchg
mov
paddsb
or
adc
mov
jecxz
jl
mov
in
xchg
dec
adc
or
scas
cmp
jp
mov
stos
xor
mov
in
mov
std
xchg
add
lahf
xchg
or
cwtl
or
pop
cltd
ret
in
xchg
xchg
cmp
insl
xor
je
fmull
outsl
in
aas
push
pushf
xor
cwtl
ljmp
push
jp
mov
lahf
shr
mov
xchg
fstl
dec
or
pop
mov
sub
add
stos
cld
fisttpll
and
ljmp
popf
cs
scas
mov
mov
stos
sub
ljmp
pop
add
in
fcoml
into
das
mov
in
mov
xchg
ljmp
out
ja
imul
stos
aas
cs
and
jne
stc
jle
aad
dec
outsl
cs
adc
sub
adc
mov
and
rorb
jae
cwtl
push
sbb
out
inc
ret
jo
fistpl
nop
or
or
out
mov
fs
and
sub
jno
int
decb
mov
jne
or
js
adc
sub
inc
aad
push
in
and
sahf
ds
push
jbe
aaa
sub
jle
cmp
in
cld
bound
jg
sub
xchg
leave
and
mov
mov
jmp
jg
cmp
mov
push
inc
inc
imul
sbb
sbb
mov
lods
mov
leave
adc
ss
add
sti
and
push
mov
and
aam
pushf
pop
push
clc
push
push
pop
movsl
xor
les
and
out
xchg
cmp
es
adc
andb
inc
sbb
mov
sbb
inc
sbb
data16
inc
or
and
mov
and
outsb
sti
sbb
xor
pop
out
in
movsl
lahf
and
xchg
fists
imul
outsl
aam
xchg
adc
and
fsubr
dec
adc
shl
aas
cld
sub
test
cmp
movsb
ss
jne
testb
mov
and
enter
jmp
in
gs
sub
push
mov
jbe
xlat
fmulp
orb
jo,pt
test
sbb
mov
or
imul
sub
lret
or
jae
dec
pop
sub
and
lret
or
mov
jno
lods
lret
jnp
push
cmpsl
sub
dec
or
or
or
in
sbb
imul
mov
and
sarb
aad
mov
and
rcrb
push
add
je
sub
lahf
jns
mov
pop
pop
adc
flds
and
cmp
mov
lret
shll
sbb
shl
and
in
cwtl
test
or
daa
movsb
push
and
flds
in
frstor
sub
push
lea
or
stc
mov
repz
std
inc
mov
xor
cmp
cmp
lret
sbb
lods
stos
and
mov
and
rcr
mov
and
sub
daa
inc
push
lods
and
push
mov
lea
inc
fisubl
jns
rcr
inc
fwait
sti
bound
fildl
cs
clc
pop
nop
insl
xchg
sti
sub
sbb
mov
xor
and
xchg
and
pop
lds
scas
lea
pop
in
jmp
and
jnp
addr16
push
and
dec
popf
lcall
inc
cs
xlat
mov
fldpi
xor
or
push
jbe
and
or
mov
sub
push
movsl
pop
push
mov
sbb
outsl
loopne
and
push
xchg
mulb
mov
daa
mov
fcmovnbe
into
and
imul
jbe
adc
pop
inc
cmp
xchg
sub
push
mov
dec
movl
fdivl
push
and
shrl
andb
xlat
xchg
or
and
incl
repnz
add
lods
xchg
iret
out
pusha
add
pop
mov
mov
std
and
cwtl
je
and
push
iret
xlat
or
cmp
xor
sub
add
mov
jmp
movsb
jg
icebp
out
cmp
shll
mov
xchg
mov
and
sub
push
mov
xor
adc
icebp
cmp
xor
sbb
inc
sub
jmp
std
push
or
or
shlb
cmp
gs
div
fcompl
cmp
jns
xor
fsubrl
sub
pusha
shr
cld
and
or
and
add
mov
sbb
lock
lret
cwtl
ja
sub
loope
inc
movsb
add
jecxz
dec
clc
jmp
out
rolb
js
loop
xchg
fidivs
aam
and
jle
pop
stos
xchg
and
out
addr16
dec
push
pop
xchg
js
mov
loope
ficompl
enter
mulb
das
lret
inc
fcompl
rcll
mov
cpuid
xor
out
ljmp
xor
adc
cltd
bound
int3
arpl
sub
push
lods
and
xchg
push
and
ret
sub
and
pop
lahf
test
add
ror
jae
jmp
mov
and
fidivl
jp
dec
mov
imul
inc
lea
or
push
and
repnz
ret
dec
cmp
sub
aas
enter
ret
push
test
daa
in
or
push
and
loopne
mov
and
inc
dec
jle
dec
das
lcall
sub
data16
and
sbb
ss
scas
adc
lock
int3
and
cmp
pop
inc
fisttpl
jns
fs
and
push
cmpsl
ret
movsl
and
pop
mov
push
sbb
fisubrs
repnz
and
addr16
js
cmp
pop
fwait
pop
insb
sub
stos
sub
and
jb
inc
and
repnz
mov
cmp
dec
dec
pop
sub
jecxz
cmc
imul
and
fs
mov
mov
mov
add
xchg
scas
call
fsubp
and
loop
push
pop
lcall
outsb
push
inc
das
insb
adc
ja
adc
ret
sahf
mov
jp
rorl
xchg
inc
and
rol
and
mov
xlat
jmp
lds
cmpsb
dec
jo
push
inc
mov
out
sub
xlat
iret
leave
dec
pop
sub
in
ret
outsb
cmp
jbe
and
add
and
popa
push
lret
dec
xchg
push
in
dec
and
jno
and
push
push
lea
out
add
mov
scas
stos
mov
jp
sub
push
in
or
and
xor
mull
sub
nop
jg
jae
rep
cmpsl
cmp
mov
arpl
mov
mov
imul
fsubs
sub
dec
enter
icebp
test
mov
flds
or
push
and
jne
xchg
jmp
inc
inc
call
pop
mov
jae
add
out
dec
bound
cltd
inc
sbb
push
repnz
and
popa
sub
sub
stc
movl
jae
sub
fdivrl
insb
shl
pop
xorl
lods
das
and
adc
and
fdiv
mov
fldcw
and
push
sti
mov
sahf
push
call
sub
cmpsb
fsts
mov
mov
adc
and
mov
and
cs
push
mov
movsb
xchg
sub
xchg
and
pusha
and
hlt
mov
and
pop
popa
inc
ja
nop
shlb
jg
repz
cmp
daa
jle
or
mov
and
cwtl
adc
mov
xchg
and
mov
and
xor
clc
faddl
pop
and
mov
and
inc
mov
out
cmp
das
dec
sahf
xchg
xchg
xor
jmp
and
sub
cmp
enter
out
jmp
cmp
jnp
dec
dec
or
sbb
jecxz
fcomp
push
inc
rdtsc
pop
leave
add
inc
rorb
and
add
xor
fcmovu
das
test
push
int3
push
mov
mov
mov
xchg
push
clc
in
cmp
lods
pop
test
imul
mov
inc
movsl
mov
xor
sub
stos
repz
out
dec
sbb
jle
in
bound
iret
lods
dec
and
pop
into
dec
jp
and
rolb
ror
xchg
scas
or
add
imul
and
bound
pop
cmpsl
mov
mov
cmp
movsl
ss
ljmp
fdivr
push
lods
sub
cmp
pushf
inc
cltd
outsl
je
mov
test
lret
in
lods
mov
pop
xchg
bnd
mov
outsl
sub
mov
adc
sub
cmp
xor
insb
lea
ss
pop
adc
cmp
dec
popa
add
loop
cld
data16
jle
pop
or
rcrb
cs
adc
jp
inc
sub
and
out
lcall
lea
sub
and
inc
jo
or
arpl
or
inc
xor
and
cmp
lds
jl
xchg
cmp
ja
sbb
fidivrl
jmp
stos
lret
push
and
or
mov
sti
and
dec
aam
in
push
ljmp
inc
stos
lea
ffree
mov
in
jecxz
insl
dec
sbb
xor
outsb
out
and
xor
and
push
cltd
addr16
and
xchg
mov
ss
mov
and
xchg
pushf
fadds
subl
xor
in
sub
mov
pusha
cmc
push
out
cli
int3
and
sub
orb
mov
pop
or
cs
fwait
outsb
jb
adc
adc
jmp
xchg
xor
loope
jecxz
sbb
lret
mov
and
lods
dec
inc
push
cwtl
cmc
lods
xor
movsb
jg
adcb
and
jecxz
lds
inc
cmp
and
add
sbb
aad
repnz
jo
pop
mov
in
test
sub
mov
dec
sub
mov
hlt
add
jbe
cmp
int
out
das
xor
out
sarb
test
repnz
arpl
es
inc
and
outsb
mov
aam
mov
ror
lods
and
leave
mov
ret
outsb
adc
into
daa
mov
or
ds
xchg
jp
and
lea
mov
clc
and
xor
mov
and
sub
test
cmp
push
and
mov
sub
add
lods
out
push
icebp
cmpsb
sub
jae
repz
mov
push
pop
dec
and
ja
pop
jge
push
test
fisubl
mov
jmp
jae
mov
inc
xor
das
movsb
mov
fcompl
lods
shrb
sub
jnp
sbb
jae
aad
add
int
add
or
cmp
jmp
lods
pop
icebp
jl
nop
movb
scas
ljmp
test
adc
sub
ds
sbb
add
lea
adc
sbb
pop
pop
mov
rolb
shll
mov
and
roll
and
fisubrs
and
call
cld
movsl
dec
and
je
xor
and
add
or
xor
lcall
mov
outsb
jbe
and
push
pop
cmp
enter
mov
mov
jns
fsubrl
or
and
sbb
aaa
fcmovnu
xor
push
cwtl
sub
aad
or
adc
cmpsl
je
outsl
out
fnstenv
dec
lea
mov
fisttps
dec
loope
and
stos
rorl
data16
sub
aad
clc
stc
sub
and
sti
int
mov
pop
sbbb
pop
dec
mov
and
and
xchg
pop
push
lods
xchg
and
xor
popa
arpl
dec
mov
mov
dec
out
int
pop
lods
add
pusha
arpl
xchg
push
andb
lods
xor
flds
add
mov
popa
scas
fs
orb
in
fcomps
or
ljmp
adc
cwtl
insb
push
sub
jl
jo
xchg
bndldx
daa
das
and
dec
repz
inc
clc
vminss
loopne
jp
mov
jbe
sbb
das
mov
mov
cmpsb
mov
out
mov
sub
mov
out
and
popf
scas
xor
loop
adc
sbb
adcl
xor
adc
push
pop
jle
pop
xor
or
lods
and
xchg
dec
and
stc
mov
sub
fldenv
gs
mov
clc
pop
sub
jl
ret
sub
mov
ror
mov
and
xor
sbb
add
pop
fistpll
into
inc
xchg
scas
fdivrl
cld
in
sub
fstpt
idiv
and
or
or
mov
mov
pop
testb
xor
inc
or
xlat
and
jb
insb
pusha
push
fldl
testb
and
mov
and
stc
inc
adc
repnz
jmp
dec
ss
mov
das
aaa
mov
or
and
out
dec
daa
mov
insl
pusha
cmp
sbb
sti
sub
iret
lea
pop
mov
xor
rcll
fadds
jno
xor
outsb
and
je
rcll
outsb
cld
add
icebp
add
dec
repnz
pop
xor
shlb
and
jae
stc
and
mov
stc
inc
or
aad
mov
and
xorl
adc
push
inc
jmp
sub
in
adc
jp
adc
imul
cmc
cmp
jl
lcall
outsb
das
iret
pop
pop
insb
inc
adc
push
cmp
mov
and
les
test
dec
jle
cmp
int
jp
push
and
push
dec
adc
xor
and
mov
sbb
cmp
inc
leave
int3
xlat
sahf
and
addr16
xchg
test
repz
dec
in
shll
cmpsl
jo
ret
xchg
push
and
xchg
popf
and
push
xor
rolb
push
mov
cli
inc
mov
mov
push
fisubrs
cwtl
les
cmp
or
sub
mov
into
or
mov
subl
jb
mov
hlt
enter
and
xchg
in
mov
mov
mov
movsl
subb
imul
lret
es
sahf
loopne
mov
ss
and
mov
xor
and
es
sbb
xchg
cli
cmc
sub
das
jns
mov
cltd
inc
or
sub
sbb
cmpsl
sub
sub
and
pop
fst
cmp
jl
pop
imul
sub
xchg
mov
lods
and
hlt
in
push
in
repnz
ficomps
and
fmuls
and
sahf
cwtl
out
sub
lcall
cli
sub
xchg
mov
jp
sbb
clc
and
mov
pop
cmovae
idivb
jp
add
mov
and
sarl
add
sub
outsb
mov
pop
jecxz
out
aad
xor
movsb
stos
pop
fsincos
inc
and
adc
lock
sub
pop
or
mov
repnz
add
and
test
ficoml
mov
pop
and
mov
arpl
add
adc
and
lahf
shll
mov
jno
inc
mov
xchg
add
jmpw
cmp
sarl
inc
cmp
sub
negb
mov
pop
and
inc
int
ss
and
fdivr
cmpsb
and
pop
popf
notl
and
movsb
imul
xchg
repz
xor
sti
hlt
icebp
call
push
xchg
or
sbb
loopne
cwtl
cmc
repnz
push
jg
ss
ret
xor
jb
jae
cld
test
sub
dec
xor
movsb
outsb
mov
sub
iret
sbb
add
mov
mov
mov
add
adc
and
push
inc
pop
and
xchg
cmp
mov
sahf
mov
daa
and
inc
pop
and
xlat
movsl
stc
cmp
push
jns
and
dec
add
fildl
ss
aad
add
and
mov
and
ss
gs
insb
leave
mov
xlat
arpl
repz
and
imul
add
xor
sbb
iret
sub
pop
sbb
mov
fs
dec
in
add
or
and
push
and
sbb
sbb
in
xchg
and
pushf
pusha
in
adc
in
repz
push
and
adc
mov
and
inc
out
andb
or
movsl
and
add
cmp
dec
lods
xchg
pop
cs
pusha
daa
sbb
out
pop
push
mov
and
pop
test
call
xchg
sub
mov
and
xchg
adc
cmpsb
push
mov
mov
inc
add
add
cli
and
into
int
push
loopne
andb
jno
ljmp
mov
mov
add
push
inc
bound
sbb
mov
leave
xchg
popf
pop
lods
inc
mov
and
fs
into
push
pop
insb
stos
test
xchg
and
adc
cltd
sbb
pop
dec
pop
and
call
mov
fwait
test
loop
and
xorb
and
and
adc
jle
and
cmpsb
sahf
test
or
jge
jae
das
xchg
insb
mov
sub
and
cwtl
sbb
fdivrs
mov
and
dec
jl
imul
cli
mov
dec
sahf
pop
and
mov
scas
les
loopne
icebp
clc
push
xor
dec
or
ja
es
xor
pop
lock
js
jae
mov
aad
idivl
xor
adc
cs
cs
xchg
dec
mov
mov
or
clc
lods
or
sub
cmp
and
fnstsw
sbb
adc
and
scas
sub
inc
in
jae
adc
fdivrl
and
subb
scas
gs
add
sbb
and
or
cli
mov
dec
and
xchg
push
inc
adc
sub
mov
dec
cmp
cld
dec
and
sub
mov
repz
aam
mov
in
xor
call
popa
dec
add
gs
add
jg
pop
daa
outsl
outsb
pop
and
pop
push
mov
or
add
or
rcrl
lcall
push
dec
and
mov
fsubrl
repnz
inc
das
push
std
jmp
xchg
jp
and
lods
mov
inc
lret
loop
sub
push
cmp
ja
nop
and
lock
mov
je
mov
push
and
xor
int3
mov
push
or
outsl
imul
cmp
push
shl
ret
xchg
insl
and
repz
mov
pop
leave
sbb
jnp
and
or
incl
push
clc
and
cmp
pop
sub
jecxz
jp
mov
add
cmp
mov
xchg
cmp
sub
sub
jno
mov
test
mov
mov
arpl
and
leave
adc
push
adc
mov
call
fiaddl
inc
or
cltd
and
loope
pop
pop
and
ljmp
jg
js
inc
sub
adcl
ljmp
mov
dec
imul
dec
scas
xchg
cmc
jbe
nop
sub
test
push
inc
sub
cmp
lcall
andb
arpl
mov
add
mov
fimull
and
gs
lods
adc
sub
or
sti
aad
cmp
and
push
sub
sbb
enter
pop
and
shl
sahf
std
lds
repz
fcomip
loop
cmp
jb
stos
mov
cli
mov
adc
test
lea
dec
pop
push
filds
movaps
dec
popa
and
adc
xor
stc
push
and
cmpb
pop
mov
sbb
clc
out
ljmp
lcall
adc
push
lret
mov
and
leave
and
fcmovb
xorb
out
dec
movsl
and
mov
lret
and
cwtl
scas
loope
pusha
mov
pop
sub
push
lock
ret
js
mov
and
add
cmpsb
repnz
mov
sub
jl
adc
lock
pushf
fidivrs
cwtl
cmp
mov
xchg
lret
cmp
dec
outsb
and
and
xlat
sub
xor
and
insb
xchg
push
and
cld
outsb
sub
test
push
and
xor
and
fsubs
lcall
or
jne
es
mov
mov
dec
cmp
test
jo,pn
sarb
insb
and
or
fs
adc
lods
mov
aam
cmpsb
and
mov
orb
pop
popf
jge
ja
data16
outsl
xchg
lret
xlat
and
and
and
icebp
bound
sub
roll
jl,pn
pop
or
xchg
std
sarl
push
lods
jg
bnd
fisubs
scas
test
repz
push
js
sub
es
pop
insb
cmp
jl
add
mov
hlt
jno
and
mov
cmc
mov
xor
jb
mov
jae
mov
jbe
and
insl
push
xchg
adc
pop
add
cltd
imul
rcrb
pushf
test
insl
xchg
mov
xor
jmp
and
xchg
lds
fadd
dec
adc
insl
fldcw
cmp
xchg
dec
int
lods
out
sarb
or
and
sub
and
adc
and
shrl
push
push
pop
out
data16
imul
pop
xor
ss
les
lock
sub
cmp
jg
cmc
imul
mov
cmp
outsl
ss
and
andb
cmp
jmp
add
adc
cltd
subb
mov
lret
cmc
mov
cmpl
ficomps
push
call
and
sbb
stc
ret
xchg
test
and
clc
inc
scas
cmp
and
mov
ja
xchg
das
loope
je
rcpps
push
push
fucom
pop
rclb
push
xchg
fistpl
shlb
xor
and
and
xor
icebp
and
or
lea
mov
xor
repnz
push
cmpsb
es
adc
fs
or
lods
and
dec
xchg
xlat
cmp
xchg
fisubl
es
lcall
scas
sub
sub
aam
adc
mov
lods
pushf
cmp
cli
push
cmp
cmp
scas
mov
sub
sbb
or
ss
and
jle
andl
scas
and
cmp
sub
lods
arpl
cmp
pusha
sti
sub
xor
lock
sub
lods
cmc
hlt
sbb
and
stc
push
insb
inc
fidivl
push
inc
mov
stc
pop
das
and
inc
dec
mov
jo
popf
or
stos
and
stc
xchg
addb
and
push
or
rcr
repnz
mov
push
mov
and
int
sub
insb
dec
sbb
jp
inc
cmp
mov
and
push
dec
and
sub
shrl
inc
mov
ljmp
sbb
insb
adc
and
js
and
sub
sub
jae
ret
out
sub
xor
mov
sbb
fadd
daa
mov
ret
or
lcall
int3
adc
sub
add
xor
push
push
push
imul
call
jae
lods
pop
cs
mov
xchg
dec
and
cmp
int3
sbb
imul
or
inc
shll
mov
jl
or
mov
jae
repz
push
nop
rcll
fwait
mov
adc
test
mov
movlhps
out
es
cmp
jmp
sbb
cmp
lods
and
xor
dec
pusha
repz
mov
xchg
and
iret
mov
fiaddl
es
arpl
test
and
mov
outsl
and
jmp
xor
loop,pn
sub
pusha
movsb
mov
xor
and
rcrb
or
fidivrs
in
js
fidivrl
lcall
sub
sti
jb
jns
push
mov
mov
xchg
imul
pop
ffreep
fs
arpl
lret
test
dec
mov
cmpsb
and
push
fidivs
add
mov
and
rorl
cmp
lods
cli
aaa
popa
cli
push
xor
jb
and
mov
dec
cltd
dec
inc
and
into
cmp
cmpsb
repnz
xchg
leave
adc
imul
mov
sbb
and
ss
sub
sbb
pushl
fstpl
add
inc
fcmove
cmp
and
xchg
sub
sub
push
xchg
adc
sub
stos
push
loopne
cmp
push
cmp
sub
sub
enter
out
mov
sarb
imul
and
mov
std
and
inc
in
cmp
pushf
mov
imul
mov
cmc
and
dec
pop
and
xor
movsl
sub
pop
in
hlt
in
sbb
aam
pop
das
xor
and
sbb
and
inc
mov
shll
roll
cltd
dec
fs
push
push
jo
push
or
outsb
jp
pop
mov
idivb
sub
sahf
cmp
sub
leave
popa
jb
add
aas
mov
and
mov
inc
inc
and
xor
and
les
lods
out
mov
mov
aam
add
push
lret
nop
out
gs
and
data16
sub
add
pop
push
jne
sbbl
cltd
popf
pop
iret
and
and
fs
lret
in
nop
xchg
in
test
popf
inc
cmp
insb
pop
pop
and
rorb
jnp
out
out
pop
shlb
push
adc
pop
in
jno
call
lret
sahf
nop
cmp
or
subl
jle
in
push
scas
jb
sti
dec
popf
adc
and
mov
xchg
xchg
movq
and
das
jecxz
adc
push
jge
adc
add
and
mov
test
push
test
sti
and
lea
xor
outsl
lock
shrb
sub
test
fwait
sbb
mov
aad
mov
std
sub
sub
push
mov
pop
into
jo
jle
lret
jns
ds
push
stc
add
mov
imul
test
dec
push
push
test
sti
jno
mov
push
xchg
mov
shll
cs
xchg
add
call
sbb
sbb
test
test
cmp
arpl
and
inc
jae
sbb
loopne
or
mov
lods
ljmp
jno
and
lea
push
cmp
nop
insb
dec
cs
idivb
test
fsubl
fbld
push
jno
and
ja
orb
add
mov
les
sbb
jle
and
jnp
ds
pop
xor
and
dec
mov
and
cmp
mov
lods
add
cmpsb
xor
aas
mov
testl
mov
repnz
ret
sub
outsb
push
aam
mov
pop
jns
faddl
jae
hlt
cmp
sub
icebp
scas
fisubs
pop
mov
pusha
test
popa
or
sub
outsl
push
add
xrelease
jnp
mov
jp
push
xchg
xchg
cmp
fsubrs
les
je
movsb
mov
xchg
fnstenv
daa
out
pop
mov
and
cmpb
rcll
in
lods
dec
sub
add
or
mov
pop
vcvtss2si
movsl
push
pop
cmp
js
mov
mov
gs
mov
jns
and
jmp
push
and
xchg
push
cmp
fdivrl
or
insl
mov
adc
push
movsb
lods
mov
cwtl
and
cmp
lods
repnz
push
sbb
xlat
pop
xchg
push
lods
out
ret
sahf
cmpsl
pushf
sbb
push
push
dec
mov
cmp
sub
xchg
xchg
jo
call
pop
sub
adc
mov
lea
jno
sbb
sbb
rclb
int3
lret
andl
mov
adc
pop
and
movsl
pusha
int3
dec
clc
repnz
pushf
mov
add
aaa
psrlw
pop
xor
enter
xchg
sub
inc
leave
imul
test
stos
je
sbb
jmp
pop
nop
and
inc
int3
and
sub
inc
jbe
cmpsb
and
nop
pop
sbb
mull
and
movsb
push
arpl
sbb
jne
or
mov
or
imul
mov
xor
insl
add
outsl
jae
movsb
pop
sbb
std
test
jmp
cmp
fnstsw
jns
addr16
sbb
dec
rcr
test
jne
sbb
inc
mov
iret
add
out
es
outsl
jae
ljmp
insb
jecxz
insb
aas
lock
lret
divb
out
dec
jo
leave
inc
and
scas
xor
pop
test
push
lret
ljmp
stc
dec
and
sub
cmc
jo
xchg
push
lods
xchg
pop
jle
insl
enter
xchg
push
and
insl
aas
or
push
mov
ja
fidivrl
ss
mov
insb
jne
sbb
mov
push
inc
or
add
clc
cs
insb
arpl
add
inc
out
push
repz
repnz
mov
xchg
outsl
cmc
mov
insb
pop
adc
pop
mov
sub
testb
sub
xor
jae
xor
dec
fidivs
pushf
sbb
xchg
cmp
icebp
mov
and
mov
jecxz
das
fsubl
jg
dec
bound
lods
dec
sahf
sbb
stc
mov
add
icebp
jb
and
fsts
add
ret
lods
jl
bnd
call
stos
scas
and
mov
hlt
aam
lods
mov
mull
daa
pop
cmp
xor
xor
xchg
pushf
out
ret
jecxz
mov
mov
mov
out
aad
nop
mov
in
and
imul
dec
push
jg
insl
sub
fs
adc
sub
adc
mov
and
enter
arpl
xor
adc
or
cs
scas
mov
add
rcrb
outsb
jne
jecxz
and
jecxz
repz
inc
add
pop
outsb
test
and
idivl
sub
jb
push
aaa
inc
lret
xor
xchg
inc
adc
jp
fwait
stos
or
insb
inc
leave
arpl
and
lock
daa
xchg
adc
xor
cmp
sti
and
jo
push
stos
les
ljmp
sbb
pop
jne
pop
loope
iret
and
xchg
inc
sahf
inc
clc
sti
xor
aad
jge
out
adcb
bnd
in
and
aam
ja
sub
ss
or
mov
or
push
cmpsb
enter
adc
and
mov
in
mov
or
and
mov
inc
push
adc
sub
and
mov
or
mov
jnp
repnz
pop
femms
sbb
divb
cmp
mov
xor
aad
jae
lds
dec
sub
sub
sub
in
cltd
sub
repz
cmp
mov
adc
test
mov
imul
xchg
or
popa
std
push
es
cli
das
dec
mov
sahf
push
and
cmpsb
outsl
lock
lcall
jae
or
push
push
mov
inc
fsts
sub
inc
in
lock
mov
adcl
loope
pop
jmp
ds
push
mov
mov
pop
push
mov
add
pop
and
rcrl
xor
or
pop
inc
fmull
xor
adc
cmpsb
repz
fisttpl
out
int3
mov
lods
jmp
loopne
jbe
sarb
dec
push
hlt
jae
inc
inc
cs
dec
xchg
sbb
or
and
hlt
iret
leave
and
or
xor
fs
and
imul
mov
std
sahf
mov
cli
fstps
es
sti
add
jbe
cmp
es
test
shll
jle
das
jbe
mov
push
fbstp
xor
fwait
int3
sbb
sub
jl
push
ficompl
cmp
lcall
nop
cmp
jns
lock
or
mov
mov
ja
xor
sub
inc
lea
js
sbb
addr16
jl
cltd
and
adc
les
insb
and
jle
xchg
lods
mov
sbb
das
shll
pop
inc
pushf
push
and
pop
outsb
repnz
xchg
cmpsb
cli
adc
sub
push
mov
xchg
xchg
cwtl
shlb
cmc
xchg
in
ret
lcall
popf
sbb
fstl
push
outsl
mov
xor
cmp
jb
mov
into
popf
or
xor
xor
cs
push
je
push
decb
adc
and
and
add
sub
mov
inc
jb
or
adc
mov
int3
jae
cli
movsl
stos
in
cs
lcall
sbb
stos
pop
cli
mov
mov
and
push
pop
push
jae
out
adc
xchg
sbb
imul
hlt
addb
lahf
sub
sahf
cmp
and
jb
insb
push
sbb
test
frstor
iret
xlat
scas
shlb
push
dec
sbb
rcl
je
xchg
xchg
dec
imull
in
xor
cmp
movsb
mov
in
sbb
pusha
mov
xchg
pop
cli
in
sub
sub
push
jb
push
in
pop
cmp
shl
mov
and
stc
push
dec
and
roll
js
fsubs
and
pop
inc
mov
cmp
int
and
mov
insb
adc
and
sbb
out
je
fidivl
push
mov
mov
adc
sub
jmp
dec
pop
dec
sub
cld
dec
and
and
shrl
and
sub
xor
sti
and
add
ret
xchg
insl
in
cmp
xchg
ljmp
jg
cmp
cld
mov
in
pop
outsl
lds
sub
and
fsubr
in
cmc
xchg
loop
jns
hlt
pop
add
and
jnp
adc
xchg
pop
sbb
sbb
out
ret
or
into
mov
mov
add
int3
jp
mov
pop
sub
or
push
rdmsr
sub
daa
or
insb
in
into
cli
or
push
es
and
les
mov
sub
repnz
xchg
leave
and
push
jne
push
test
adc
inc
loop
rclb
test
ljmp
add
stc
cmp
repnz
dec
xor
sbb
mov
sub
pop
jl
jne
lock
scas
js
movsl
jbe
mov
and
and
pop
jp
and
cld
adc
outsb
xor
cs
mov
add
call
test
cltd
fisttps
movl
insl
fistl
sub
pop
and
jns
xor
aam
push
imul
mov
and
outsb
dec
inc
cli
scas
imul
cmpb
cli
ds
repz
inc
cli
xor
shlb
dec
es
repnz
data16
and
sbb
xlat
and
jbe
cmpsl
pop
js
and
push
inc
lods
shrl
xchg
ret
xchg
daa
push
cltd
fs
push
hlt
push
bnd
push
push
dec
and
cli
call
cmp
aaa
and
out
and
insb
adc
loope
push
add
bound
xchg
imul
mov
out
daa
scas
ret
xor
mov
sbb
jb
or
mov
sbb
mov
sub
test
data16
adc
adc
mov
sbb
or
push
jl
daa
dec
mov
repnz
and
add
add
ret
rcr
xor
xchg
mov
sub
and
fidivl
dec
mov
ret
dec
and
xchg
add
pop
and
xor
cmp
movsb
arpl
sahf
mov
test
sub
pusha
in
stc
cmp
ret
dec
xchg
negb
mov
and
pop
stc
mov
cmp
sub
xchg
adc
xchg
jno
arpl
repz
dec
jnp
ss
sbb
dec
aam
and
add
ds
lea
xchg
aas
fstps
sarb
cmp
mov
jno
mov
cli
fwait
rol
and
cmpsb
fisttpl
into
push
fbld
es
and
or
mov
mov
popf
sub
and
inc
push
ljmp
es
push
maskmovq
imull
test
xchg
pop
push
jp
jl
fwait
cmp
cltd
jecxz
sbb
mov
stos
and
les
dec
cmc
push
sbb
mov
imul
or
xlat
mov
out
sub
sbb
xchg
call
mov
jb
movsl
addl
xor
pop
cmp
test
and
dec
push
push
pop
cwtl
push
mov
test
lods
and
jmp
pusha
and
mov
ljmp
inc
jae
gs
mov
lods
mov
out
fidivrl
pop
adc
xor
add
cmp
push
rclb
je
arpl
xchg
dec
test
shrb
adc
popa
and
mov
sub
or
push
frstor
dec
sbb
jo
fdivp
aad
push
scas
xor
and
jne
aaa
ds
ja
cli
inc
mov
stos
sub
test
mov
je
mov
xor
aam
pop
jnp
fldcw
inc
and
or
shrb
and
repz
mov
cmp
push
sub
shll
loopne
rcrl
fdivrs
or
sub
xchg
scas
sbb
fidivs
out
data16
pop
into
mov
mov
cltd
loopw
cmp
xchg
inc
add
cs
and
jo
mov
gs
hlt
mov
dec
and
int
mov
sub
lahf
mov
sub
lcall
and
rcrl
jecxz
cs
and
aaa
mov
icebp
aad
cmp
sub
xor
sbb
or
loope
or
pop
xchg
test
outsb
fldl
push
push
jmp
xchg
adc
or
xor
inc
shrb
sub
and
rcr
xor
and
not
out
repnz
pop
aad
and
sub
mov
cmp
lea
jb
pushf
lea
jne
adc
shl
shl
mov
stc
movsbw
not
mov
sub
call
jmp
movsbw
setg
lea
pushf
movl
call
push
jl
sub
xor
adc
bndldx
imul
adc
daa
inc
xor
mov
stc
mov
test
cwtl
in
fs
outsb
sbb
xchg
ret
mov
pop
sbb
cli
push
cmpsb
lods
mov
and
sbb
dec
scas
cmp
mov
mov
and
jg
sub
nop
jge
mov
cwtl
filds
cmc
fwait
add
into
adc
push
aaa
sbbb
dec
out
sbb
nop
add
in
aaa
inc
int3
adc
scas
loopne
arpl
pop
fcmovb
mov
pop
ret
adc
fidivrl
scas
mov
adc
jecxz
shrb
push
xchg
mov
and
fbld
insb
or
out
lahf
aam
aad
inc
clc
pop
xchg
jmp
ret
xchg
pop
push
sarb
and
xchg
cli
loope
out
negb
iret
cmp
js
in
insl
mov
or
nop
pop
adc
cmpsl
jb
test
faddl
shlb
outsb
repnz
or
ja
ret
mov
push
test
cmp
push
dec
insb
in
mov
outsb
lods
imul
and
jae
in
test
sub
jb
mov
in
add
sbb
xchg
outsb
lods
inc
out
int3
and
inc
jae
loopne
insl
cmc
pop
loope
or
mov
mov
and
daa
pusha
ror
pushf
jmp
mov
pusha
mov
lea
call
sbb
mov
xor
jo
adc
add
sbb
xor
jle
add
popf
add
sbb
lock
xchg
fs
and
sub
lds
xchg
aam
out
leave
fldenv
push
aam
push
les
stos
cmpsl
test
and
xchg
fsubl
in
test
and
imul
test
cmp
mov
inc
or
dec
xor
lods
inc
jno
sub
push
fmuls
or
xor
int
fistps
push
sub
xor
xorl
jne
jmp
pushf
lea
je
jmp
jmp
ss
sub
nop
aaa
rcr
jmp
fildl
aas
jae
pusha
mov
jecxz
dec
push
xor
cmpsb
enter
call
out
stc
add
jge,pn
sbb
lock
cmpsb
testb
pop
inc
xor
pop
cmp
inc
pop
call
jmp
inc
push
and
ret
push
xchg
negl
int3
or
sbb
adc
cld
mov
mov
cmpb
add
push
lea
call
push
mov
push
lea
jmp
lea
movw
mov
pushl
jmp
movb
jmp
jmp
cmp
sub
jmp
movb
call
dec
mov
sub
nop
gs
jne
or
rorb
fsubl
fldenv
mov
adc
xchg
mov
dec
adc
xchg
push
pop
scas
mov
ret
dec
ljmp
inc
push
aaa
add
cs
inc
add
insl
cltd
and
hlt
fcompl
add
pop
fyl2x
jmp
mov
lret
aad
out
xlat
faddl
fisubs
scas
out
jnp
adc
pushf
pusha
lea
jmp
std
std
jb
lock
jle
add
cmp
mov
jmp
lea
daa
fiaddl
jne
popf
mov
adc
dec
cmp
mov
mov
jb
scas
mov
and
lock
mov
sub
stos
adcl
dec
sar
push
mov
loope
rcll
push
ja
ffreep
cmc
sub
inc
xorl
roll
andl
add
cltd
sahf
and
es
xchg
pop
addr16
leave
arpl
lret
mov
dec
outsl
arpl
inc
insb
insb
outsl
arpl
xor
add
lock
or
mov
or
popf
inc
and
mov
xor
add
lock
dec
repnz
mov
jge
jge
xchg
nop
pushf
mov
out
jae
jb
sub
cltd
test
jb
mov
add
jle
cmp
test
ljmp
ljmp
cmp
jno
test
fs
mov
jl
xor
cmpsl
ss
test
das
sub
idivl
and
xchg
daa
inc
adc
bswap
mov
push
cmp
push
clc
and
clc
cmc
add
pusha
pushl
lea
jmp
pushf
call
push
pushf
inc
jmp
and
jo
lock
jl
orb
int3
xor
insb
mull
loop
push
in
out
imul
xchg
pushf
jno
fcompl
scas
sub
jg
cltd
aas
adc
jnp
xor
pusha
cmp
mov
jmp
dec
insb
divl
lret
inc
shr
pop
dec
gs
sbb
js
inc
inc
jle
test
das
pop
popa
int3
pop
or
test
push
mov
inc
sub
adc
test
icebp
fadds
lock
jb
js
imul
mov
stos
in
addr16
push
ret
mov
xchg
call
aaa
mov
pop
std
ja
aaa
inc
rorb
cld
negb
ljmp
in
loope
mov
xlat
imul
cmc
add
pop
xor
dec
xchg
aaa
insl
ret
mov
xor
cmp
in
inc
movsb
sbb
aam
ret
shll
scas
je
popa
and
xor
or
popl
push
pushl
ret
jmp
leave
mov
and
mov
test
ljmp
jae
aaa
dec
rorb
push
popa
adc
insl
shll
stc
test
outsb
push
lret
inc
sub
pop
xor
cs
sarl
leave
out
outsb
mov
cmpsl
mov
mov
push
les
and
mov
inc
lods
mov
iret
scas
fs
dec
ret
cld
es
push
sub
cmp
scas
fs
push
adc
popf
bound
cwtl
decb
repz
or
dec
sti
ret
pop
into
js
es
sub
js
outsb
mul
mov
fs
rcrb
pop
movsl
rcrl
test
das
cmp
dec
roll
sbbb
or
pop
sbb
add
mov
jmp
jmp
int3
add
and
movsb
add
mov
shl
adc
inc
call
adc
and
icebp
enter
push
addr16
rcr
inc
or
mov
and
push
scas
fwait
addr16
aam
jecxz
push
aaa
adc
and
inc
icebp
jnp
jo
ret
into
cmp
rorl
dec
xlat
shll
clc
sbbl
push
jbe
insb
pop
shl
sbb
sti
jne
inc
pop
xor
cmp
inc
xchg
je
cmp
int3
aaa
adc
adc
jp
cmp
adc
mov
shrl
les
or
addr16
je
adcb
mov
sbb
pop
add
dec
lock
js
shl
sti
jecxz
nop
push
sbb
scas
ja
sub
divl
xlat
mov
nop
sti
pop
subl
sub
lahf
enter
inc
jp
sbb
cmp
xor
push
pushf
loop
pop
repz
lea
cmp
jb
mov
stc
cmpsl
jecxz
in
inc
mov
and
int
ja
adc
into
mov
cmp
pop
insb
and
inc
cmp
lock
aad
mov
mov
mov
pushf
mov
inc
jae
movzbw
push
mov
add
and
jmp
lret
repz
and
nop
movsb
pop
lret
push
push
ljmp
aam
mov
js
xchg
or
pop
orl
or
pop
lret
int3
ret
and
jecxz
pop
pop
test
lea
mull
dec
es
sbb
mov
pop
mov
or
test
stc
mov
mov
mov
mov
mov
mov
enter
popa
dec
lret
jne
xchg
mov
stos
adc
cli
ffreep
lods
adc
leave
cs
pusha
out
mov
nop
jp
and
mov
lret
lea
decl
inc
cmp
mov
sbb
mov
mov
es
cmp
fiadds
je
lret
inc
arpl
insl
pop
and
nop
push
in
sbb
lods
mov
mov
inc
xor
dec
jae
repnz
sahf
adc
lret
fisubl
pop
xlat
out
lahf
cmpsl
lods
aas
nop
icebp
sbb
scas
insb
push
insl
ret
nop
or
les
insl
insb
sbbl
in
loopne
insl
adc
add
gs
push
lret
and
add
leave
add
sub
inc
push
mov
mov
jecxz
cwtl
dec
add
or
pushl
mov
mov
mov
pushf
mov
pusha
pushl
ret
imul
stc
clc
add
push
pushf
movb
pushf
lea
jmp
das
push
cld
and
nop
or
loop
clc
arpl
test
stos
inc
jp
push
movsl
add
mov
mov
adc
ljmp
cwtl
sbb
repnz
dec
sti
lds
xchg
mov
frstor
sub
fcoml
and
sub
cltd
ffree
sub
adc
dec
mov
inc
or
jl
lret
addl
rorb
cmp
nop
stos
xchg
subb
insb
push
mov
rorl
mov
jmp
orb
cmpsl
rcrb
scas
or
sbb
ss
fidivl
cmp
push
pusha
add
mov
outsl
fidivl
adc
shl
es
loop
xchg
push
sbb
pop
in
sub
push
adc
pusha
pop
adcl
push
pushf
in
push
fsubrl
push
cmpsb
dec
sar
fisubs
adc
lods
or
inc
and
add
adc
add
mov
add
je
pusha
push
pusha
pushf
adc
pushl
pushl
mov
mov
lea
jmp
call
das
add
and
nop
jecxz
pop
and
out
sbb
mov
pusha
arpl
inc
outsb
push
lret
outsl
aas
arpl
mov
push
aas
sbb
stos
adcl
movsl
pop
or
and
pop
or
repz
jmp
sub
mov
push
in
std
xchg
lods
jns
jo
sub
dec
or
outsb
repz
jl
loope
mov
and
jb
sarl
pop
or
xchg
loope
or
adc
and
mov
aad
sbb
jae
pop
subl
dec
xor
pop
lock
in
or
test
jge
mov
or
pop
mov
ljmp
push
ficompl
cwtl
mov
aam
pop
mov
out
adc
and
pop
dec
inc
mov
scas
test
cmp
mov
mov
subb
ss
arpl
mov
mov
imulb
jmp
lea
jb
pushf
bt
bt
bt
cmp
pusha
lea
jae
or
mov
btr
ror
movsbw
mov
call
scas
push
cld
push
lock
or
iret
pop
jecxz
mov
in
mov
push
sahf
mov
mov
mov
xor
pop
subb
push
cmp
lods
sub
xor
cltd
and
or
in
inc
addr16
sti
pop
sub
add
add
push
add
cltd
movsl
inc
out
outsl
cltd
xor
ret
ds
aad
or
dec
lret
mov
loop
das
addr16
mov
add
sub
mov
mov
loop
das
cltd
mov
jecxz
jnp
dec
iret
pop
popf
subb
ja
jge
daa
mov
cmpsl
sub
sub
inc
orb
jb
sub
push
jne
jl
cmp
js
rorb
shl
scas
and
dec
mov
loopne
dec
xchg
push
cmp
ja
and
mov
push
sar
test
mov
or
mov
fcmovnb
popf
repz
imul
add
aam
pusha
push
pop
sub
ja
pop
pusha
cmp
in
out
ss
sbb
mov
mov
inc
int3
adc
and
push
mov
bound
lret
call
mov
sbbl
fimuls
cmp
movsb
sbb
icebp
jl
ds
cwtl
repz
int3
ss
dec
jge
imul
loope
in
jl
or
pop
pop
and
lds
add
pushf
icebp
cmpsl
ss
inc
mov
xchg
seta
daa
aad
inc
mov
xchg
test
lock
jne
xor
xor
inc
and
mov
lfs
mov
xchg
imul
adc
mov
adc
fmull
imul
call
pusha
movw
lea
jae
cmc
bt
sub
call
mov
jmp
dec
sbb
sbb
nop
not
mov
icebp
mov
mov
pop
aaa
dec
or
dec
out
aam
lock
rcr
or
sbb
nop
sbb
add
xor
ds
dec
jb
out
jb
pop
mov
in
xlat
sbb
nop
jecxz
jmp
sahf
out
popf
test
fnsave
outsb
idiv
mov
aas
int
inc
xchg
lea
pushf
adc
pop
in
xor
mov
push
pop
in
pop
aas
jae
jne
mov
lds
aaa
or
sarb
cltd
insb
movsl
ret
pop
jne
loopne
and
jb
mov
push
shll
gs
add
fstl
dec
mov
cltd
out
push
test
sub
mov
insb
adc
mov
and
ficomps
add
push
je
lock
fmuls
dec
mov
leave
nop
cmpb
fld1
test
sbb
fsts
fsts
das
inc
lahf
sub
aad
stos
fs
cmc
push
dec
cmpsb
adc
fidivl
mov
jae
testl
cld
iret
data16
mov
jmp
fldt
cmp
loope
shlb
ds
ds
enter
repz
inc
test
inc
pushf
lods
cld
movsb
push
aam
sbb
sub
loop
fidivs
and
xor
cmp
lret
adc
fs
xor
popf
xchg
hlt
cmp
mov
vprotw
xor
and
push
imul
addb
mov
stos
adc
inc
xchg
insl
jnp
insb
push
lea
jne
jmp
movsl
iret
je
lock
sbbb
mov
mov
mov
mov
popf
pop
cwtl
aam
insb
xchg
jecxz
mov
shlb
cmp
icebp
repz
pop
and
xchg
or
mov
stc
jl
or
jb
jo
dec
outsb
ret
add
push
inc
xchg
xchg
jecxz
into
push
mov
rcl
xor
cmc
rclb
push
cmp
and
pop
aaa
sub
addr16
cmp
mov
jg
sub
sbb
decl
lret
frstor
lods
pushf
clc
neg
cmc
xor
cmc
bt
not
push
clc
clc
jmp
sbb
cmpsb
sbb
nop
mov
mov
out
stc
mov
pop
loope
in
jae
scas
mov
push
jge
enter
xor
mov
and
pop
cmp
mov
mov
lret
in
enter
sti
nop
test
or
xor
in
in
enter
sti
sub
pop
mov
add
xchg
cmp
mov
inc
add
bt
clc
jmp
neg
jmp
dec
adc
sbb
nop
or
mov
test
fucomip
xor
cmpsl
rcrl
or
rorl
ret
jle
ret
nop
imul
sti
stos
sti
test
sub
ja
inc
or
cld
jecxz
xor
loop
and
rcl
stc
neg
push
jmp
imul
insb
add
nop
dec
adc
cmp
jno
outsb
pop
test
test
xchg
repz
xor
imul
xor
cmp
mov
hlt
push
sti
jo
stc
mov
sbb
or
jae
aaa
hlt
int3
jnp
cmp
sub
mov
push
xchg
fmulp
mov
sbb
scas
leave
adc
gs
stos
push
xchg
cli
push
xchg
jmp
jb
mov
add
cmp
inc
pushf
lea
jne
dec
mov
movzbw
not
movzbl
sub
inc
cmc
or
mov
call
jmp
adc
imul
jo
subb
mov
nop
cmp
add
mov
adc
outsl
cs
lods
les
in
fadd
sub
jb
cmpsb
adc
and
imul
lret
sub
jecxz
int3
inc
outsl
sbb
movsl
je
sub
xor
sbb
cs
pushf
arpl
fcomp
movsb
mov
fcoms
push
rorl
mov
fimull
sbb
lock
and
dec
xor
test
pop
pop
repz
pop
bnd
shll
jae
add
jns
sahf
movl
jnp
dec
mov
mov
cli
icebp
add
out
mov
sbb
in
bound
pusha
pop
jb
push
xor
in
fdivp
push
jb
cli
or
scas
or
divl
in
and
lods
ret
jmp
sbb
xor
push
and
icebp
xlat
jl
lret
shlb
cwtl
hlt
mov
mov
mov
lock
leave
push
popf
jmp
pop
daa
jae
inc
jne
or
or
outsb
dec
addr16
sti
test
mov
es
mov
adc
sub
push
push
pushf
push
filds
lret
add
adc
xchg
lods
aad
fwait
iret
mov
iret
or
xor
dec
pushf
sub
clc
pop
pop
adc
mov
push
std
gs
fstpt
mov
test
nop
imul
es
add
mov
loope
pop
xor
jp
or
loope
mov
and
test
scas
mov
adc
in
pop
in
adc
or
sub
push
push
in
jecxz
sub
sahf
mov
dec
jecxz
mov
leave
pushf
iret
in
sub
dec
mov
pop
sbb
adc
jecxz
xor
mov
sbb
or
std
ss
test
repnz
call
pushl
lea
call
push
lea
jb
pusha
pusha
pushf
pushl
ret
movl
pushl
pushf
jmp
sarl
ficoms
lock
ljmp
in
pop
add
push
jbe
sub
iret
ret
mov
addr16
das
jecxz
jle
add
jle
mov
out
cmp
add
int
cmp
mov
inc
ja
pop
cmp
into
out
aas
sbb
jo
clc
sbb
fistps
loopne
push
mov
es
jmp
cmp
dec
push
mov
pop
shr
xor
jo
jae
out
adc
sbb
or
std
and
lret
pop
cmp
arpl
scas
jae
dec
jb
push
lock
and
xchg
dec
push
fisttpll
mov
mov
mov
mov
scas
xor
jne
mov
fld
lea
repz
push
lcall
stos
jo
repz
inc
cs
popl
aas
paddusw
addl
add
jg
jmp
out
pop
lods
xchg
clc
pusha
lds
lcall
fwait
es
movzbw
lea
pop
pusha
pushl
ret
movb
call
pusha
pushf
lea
je
jmp
sub
movw
mov
pushl
popl
bt
cmp
cmp
call
data16
lock
sbb
adc
xor
inc
xchg
jp
jo
in
ret
push
lcall
scas
addr16
insb
movsl
jg
movsl
xor
jge
and
movsl
in
imul
jle
in
das
xchg
and
imul
mov
outsb
scas
sub
pop
lcall
adcl
cmc
cmp
stos
aas
adc
fistpll
outsl
pop
xchg
mov
inc
jno
cmc
popf
lahf
sarb
xchg
xchg
mov
xor
dec
outsb
push
ficompl
inc
xchg
sub
int3
adc
pop
cwtl
add
bswap
movzbw
pop
pusha
pushl
ret
mov
movsbw
movl
pusha
pushf
jmp
clc
std
in
adc
nop
clc
push
sbb
push
ffree
mov
mov
cmp
aaa
mov
or
loopne
cmpsb
mov
nop
adc
sbb
xchg
cmp
add
imul
aas
dec
mov
xchg
inc
or
and
repz
out
and
xchg
push
cwtl
imul
add
out
xchg
sbb
or
and
pop
hlt
xchg
aaa
inc
push
sti
or
std
push
inc
out
push
mov
jnp
sbb
or
leave
lock
mov
inc
es
mov
pop
js
outsl
jle
push
jmp
das
sbb
es
sbb
inc
out
cmp
pop
aaa
mov
pusha
pop
mov
jne
push
test
divb
fdivrs
je
mov
jle
ror
push
mov
jl
cwtl
push
leave
ljmp
add
inc
dec
jle
nop
jp,pt
cs
fsubl
jecxz
hlt
test
test
jp
mov
sbb
divb
into
test
or
push
dec
int3
push
arpl
in
mov
jle
mov
in
sub
shll
adcl
nop
imul
mov
adc
test
popf
xchg
out
or
nop
xor
fildll
jle
adc
pop
daa
jno
add
cmc
in
out
cmc
lock
dec
inc
subb
movsb
nop
xchg
int
arpl
inc
ret
out
mov
sbb
outsl
popw
aam
mov
ss
mov
mov
add
pusha
adc
nop
insb
daa
xchg
fisttpll
jae
leave
xor
dec
stos
mov
inc
push
or
inc
adc
in
ret
dec
icebp
lods
push
inc
push
rcrl
outsb
dec
fistpll
xchg
aam
mov
jb
pushf
loopne
pop
int
xchg
cmpsl
xor
stc
xchg
ret
and
pop
sbb
mov
mov
sbb
xchg
pop
outsb
mov
insl
and
jae
scas
xchg
mov
mov
dec
lcall
out
push
sti
popa
adc
mov
sub
pop
ja
outsb
mov
nop
adc
pop
ret
subb
subb
mov
mov
add
ficompl
mov
mov
scas
adc
dec
ret
fucomp
jae
jp
leave
orb
daa
gs
fsubl
sar
adc
in
sbbl
inc
inc
add
xor
fldenv
in
sbb
mov
mov
pop
stos
shll
arpl
shrl
mov
enter
aam
jnp
jo
les
gs
adc
loopne
lock
leave
xchg
lods
popf
jp
scas
fwait
lds
ret
loopne
cmpsb
jnp
roll
pop
arpl
in
inc
mov
jmp
ffree
in
xchg
lcall
push
mov
mov
sbb
imul
pusha
mov
jmp
jmp
jecxz
repnz
nop
pop
in
mov
dec
pop
and
xlat
ret
out
stos
or
and
jo
xor
jg
pop
in
dec
sub
xor
cltd
push
leave
popa
movsb
ss
push
mov
fnstcw
xchg
push
mov
adc
mov
std
xchg
mov
outsl
inc
std
stos
xchg
add
or
xor
stos
mov
lcall
mov
push
loop
push
jnp
daa
jecxz
fidivs
mov
push
pop
mov
sub
int3
mov
cmp
sub
stc
lahf
cmp
arpl
mov
lea
je
movsbl
jmp
aas
xor
fiadds
jle
jb
in
fildl
mov
es
adc
lock
mov
cmp
bound
das
int
fldl
inc
mov
pushf
push
or
sub
xchg
jne
gs
push
or
pop
and
jge
aaa
data16
mov
or
outsb
aaa
or
loope
mov
xchg
jge
and
gs
mov
data16
lods
aam
in
push
mov
filds
push
adc
call
lock
lock
sbb
scas
stc
gs
jp
push
js
mov
data16
lea
xchg
mov
add
xchg
add
xchg
add
xlat
inc
or
mov
cld
or
nop
push
jbe
lods
xchg
test
int
and
lods
pop
dec
repz
jg
mov
dec
aam
add
mov
mov
leave
xchg
push
or
fisubrl
test
dec
dec
xor
push
or
mov
jg
dec
adc
inc
cmpsb
int3
adc
pop
inc
cmpsb
xchg
fcmovnu
in
lahf
cli
dec
jo
add
nop
enter
popa
insb
xchg
jecxz
aaa
and
xor
mov
lods
sbb
stos
adc
dec
imul
push
cmpsl
shr
rcrb
xor
xchg
adc
add
ss
mov
test
int
nop
sub
push
mov
cmp
xchg
dec
ljmp
fmulp
pop
push
mov
mov
and
js
and
push
clc
jge
imul
xchg
dec
xchg
cmp
mov
imul
or
add
mov
pop
aam
add
dec
std
decl
fs
call
push
lea
jne
lahf
lahf
not
mov
pushf
lea
jmp
lea
call
pusha
adc
pusha
pushf
jmp
movb
clc
test
pusha
call
sbb
push
lock
repnz
cltd
bound
popa
int3
aaa
jecxz
inc
cmp
jno
daa
jo
pusha
cmp
dec
lret
movsl
into
fldl
mov
xor
mov
scas
add
pop
out
fcompl
sbb
jmp
inc
into
ljmp
in
sub
out
std
mov
cltd
mov
sbb
xchg
mov
sub
jbe
cmp
icebp
xor
mov
jns
mov
mov
inc
imul
clc
arpl
sbb
pop
and
mov
bt
or
push
push
pusha
movb
lea
je
bswap
call
pusha
movl
push
movb
push
pushf
lea
jmp
cmp
cmp
mov
lea
jae
pusha
pusha
pushf
push
lea
jmp
lea
ja
setp
add
call
inc
add
lock
test
or
insb
push
jg
xor
mov
scas
lret
add
xor
aad
imul
pop
jmp
ljmp
stos
mov
cmp
ficoms
stos
repz
or
jo
stos
xor
popf
and
sbb
sbb
push
add
test
adc
jnp
lods
hlt
pop
inc
loopew
in
mov
xchg
dec
lcall
lea
je
push
call
xchg
or
xchg
cli
add
test
mov
or
add
or
lods
sbb
lahf
lcall
sbb
movsl
jg
adc
es
scas
push
jge
xchg
out
js
add
push
scas
xchg
jle
ljmp
or
mov
and
insl
stc
xchg
aam
ret
sub
pop
test
sub
add
lock
adc
inc
stos
orb
pop
adcl
inc
rorl
fidivrl
into
pop
imul
int
or
inc
pushf
notb
push
jno
ret
loopne
das
sub
or
push
xchg
lea
xchg
jbe
cmp
push
mov
push
xchg
lea
stos
sti
and
in
xchg
cld
mov
jo
push
push
stos
fsubs
push
mov
pushf
movb
mov
movsbw
call
fadd
imul
sti
and
mov
outsl
mov
mov
scas
gs
ret
inc
cmp
and
pop
mov
or
nop
lahf
movsb
xchg
hlt
popf
sub
bound
out
scas
ljmp
cli
lret
xchg
aaa
push
adc
sti
xchg
sahf
jns
inc
cmp
xchg
test
mov
insb
fbld
cld
lods
cwtl
xor
cmc
dec
stc
cli
leave
cmpsb
lock
add
dec
fdivrl
fldlg2
test
pushf
int3
sub
ret
xor
bound
add
sbb
push
push
ds
sbb
lock
sub
scas
flds
jns
or
and
insl
mov
add
ss
and
ss
test
inc
or
les
test
cmp
add
push
lret
adc
xor
stos
and
cmc
xchg
cmpsb
pop
cli
test
or
jno
push
mov
in
fidivl
lret
cmp
pushf
imul
or
push
lret
cmp
mov
dec
das
je
loope
das
push
fdivrp
jmp
mov
daa
outsl
ficoml
nop
outsb
dec
aam
jmp
mov
inc
test
ljmpw
jno
cld
fisttps
lock
or
pop
push
and
cmc
ds
pusha
ret
push
add
ret
sbb
lret
test
scas
xchg
push
push
inc
sbb
call
jae
shl
adc
and
jmp
movsb
call
pusha
clc
cmp
jmp
sbb
or
nop
not
pushf
cmpsl
sar
enter
xor
xchg
push
fs
pop
nop
mov
pop
sub
sbb
mov
xchg
insb
les
or
xorb
xor
inc
or
push
mov
jmp
fists
ja
xchg
mov
cltd
cmp
sub
pushf
sbb
test
xchg
gs
push
cltd
into
adc
pop
add
loope
inc
sub
pop
cmp
mov
pop
add
fimuls
jb
add
addr16
lcall
aas
out
pop
call
lea
ja
pushf
pushf
inc
pusha
not
jmp
les
or
nop
movl
sahf
jmp
inc
test
pop
dec
push
sarb
pop
in
sbb
lret
xor
mov
in
mov
movsl
jo
loop
inc
ja
insb
popf
ss
addr16
cltd
test
mov
inc
daa
add
daa
idivb
daa
sub
cmpsb
jp
adc
insb
loop
sub
dec
and
repnz
insb
adc
loop
test
jle
ja
push
or
nop
adc
js
mov
rorb
mov
cltd
mov
les
outsl
xchg
or
lock
xchg
outsl
fistpll
jno
add
or
fcmovnb
addr16
xchg
sbb
xor
fs
jne
test
shl
bsf
pushf
xor
shrd
rol
btr
mov
shr
ror
pushf
shr
add
movb
mov
bt
mov
test
pushf
lea
jmp
dec
jns
or
nop
sub
sti
adc
adc
adc
test
lret
pop
lods
fstp
jnp
ret
jmp
mov
or
mov
jns
mov
iret
mov
cmp
xchg
jno
lods
pop
sub
rol
mov
aaa
mov
inc
out
mov
shrb
mov
orb
inc
mov
js
data16
aam
mov
mov
dec
cmc
cmp
push
test
call
push
mov
pushl
ret
pop
fcmove
pop
lock
aad
mov
push
popf
data16
push
aas
cmp
jo
sti
or
xchg
or
les
subl
jmp
imul
or
ficoml
or
aaa
jb
cmpsl
sahf
aad
loop
sarl
pushf
push
xor
add
das
adc
sarl
ljmp
ds
dec
push
cmp
dec
fcoms
or
lock
add
dec
xchg
pop
mov
decb
je
call
pop
xchg
cs
nop
inc
adc
xor
iret
xor
popf
jge
dec
aam
mov
in
dec
gs
adc
sbb
out
mov
addb
div
mov
and
dec
jbe
cltd
and
pop
gs
cmc
fcoml
rcll
popf
jge
adc
aas
mov
ja
in
stos
pusha
ljmp
adcb
pop
jge
mov
mov
lret
xor
pop
inc
or
jo
jge
popa
mov
js
test
jmp
xchg
popa
jl
sarb
sarb
push
pop
xor
adcb
jo
jnp
xor
movsb
into
add
push
sbb
jno
sbb
daa
xchg
daa
inc
sbb
subl
add
and
notl
pop
xor
nop
push
push
inc
or
adc
clc
icebp
mov
sub
push
jb
sub
or
adc
cltd
dec
test
adc
cmc
cmp
cmpb
jnp
dec
cmpsb
cmc
mov
add
inc
sti
in
sbb
insl
stc
bound
orb
les
mov
fiadds
adc
inc
insl
outsl
or
pmulhuw
inc
push
mov
dec
xor
inc
xchg
data16
rcr
movsb
pop
pop
call
sbb
inc
rolb
lea
ret
inc
lds
jg
and
push
or
and
cwtl
popf
and
push
mov
lcall
push
test
add
sbb
add
add
add
add
add
dec
sbb
add
sbb
add
add
dec
sbb
inc
ljmp
scas
mov
dec
sbb
mov
in
cli
pop
dec
divl
fmull
or
ja
and
and
and
mov
push
cmp
pop
jp
cmp
into
out
jmp
movsb
out
jp
cwtl
xchg
push
mov
leave
popw
dec
das
xor
xor
aaa
jns
cld
outsb
mov
jmp
loope,pt
enter
add
push
push
fsubs
mov
iret
xchg
push
or
push
lcall
push
push
mov
ffree
push
jp
xchg
fdiv
adc
fnsave
push
movsb
leave
rorl
in
bswap
sub
push
push
pop
mov
in
daa
cmpsl
xor
sub
ja
mov
push
test
lret
pop
ret
outsb
stc
jae
decb
outsl
jmp
inc
cmp
inc
icebp
in
hlt
pop
shl
out
mov
xlat
or
fdivrs
sbb
mov
aam
cmpsb
shrb
inc
cltd
adc
cli
xor
fisubrs
mov
sbb
xchg
inc
adc
pop
js
dec
lcall
clc
pop
mov
push
pop
sahf
dec
inc
jge
add
cmp
push
movsb
cld
inc
mov
push
mov
lock
sahf
inc
ss
cmpsw
jno
outsb
push
mov
adc
or
fstpt
push
adc
shrb
mov
xor
and
roll
enter
ljmp
mov
and
fcmove
inc
add
fwait
icebp
mov
movl
fldl
push
xor
enter
lret
aad
xchg
adc
xor
incl
in
xchg
sub
cmp
ffree
mov
ds
cmc
xchg
inc
xchg
dec
xchg
std
call
push
cli
fcmove
sub
xor
xchg
out
and
xor
jbe
adc
mov
push
mov
in
mov
or
add
push
push
xor
push
push
cwtl
nop
and
fs
inc
sbb
xchg
xchg
inc
add
inc
cmp
inc
jb
add
aam
push
mov
icebp
or
inc
and
dec
lds
iret
and
or
sub
and
jne
mov
popa
data16
aas
sbb
or
mov
nop
xchg
cmpsl
push
jp
xor
cmp
shlb
enter
mov
sub
pop
hlt
popa
dec
out
insl
xor
jns
cmpl
pop
pop
lods
inc
inc
loope
pop
bound
rcrl
fimull
adc
jns
test
lahf
mov
pop
xchg
out
popa
jo
add
out
iret
testl
loop
pop
mov
sub
gs
pop
jmp
sub
arpl
push
cmpsl
sub
das
rclb
cli
jb
lea
nop
xor
or
call
fbstp
mov
lret
nop
or
inc
pop
push
jmp
pop
in
ljmp
dec
xor
inc
cmp
in
push
adc
push
mov
cltd
cmpsb
inc
xor
std
or
inc
sahf
out
sahf
cwtl
iret
mov
push
mov
sub
arpl
jmp
add
sbbl
clc
mov
jg
fs
dec
mov
lretw
aaa
dec
aas
and
dec
adc
movsb
add
push
sub
cmp
movq
call
adc
nop
pop
fs
lds
jle
pop
inc
mov
jno
in
push
add
sub
scas
mov
pop
insl
scas
out
fstl
out
or
mov
dec
std
mov
mov
mov
mov
xchg
cmp
dec
lods
mov
leave
fsubl
sbb
xchg
lods
mov
dec
or
cmp
stos
and
mov
jo
cmp
pop
mov
dec
out
mov
scas
iret
and
mov
mov
jp
lret
and
mov
jbe
or
out
fidivs
or
shll
cmp
arpl
xchg
push
into
notl
adc
ret
call
pusha
into
cmc
call
aam
lret
fnstenv
outsl
mov
push
sub
rcrb
pushf
movsl
lock
insl
jecxz
ljmp
jg
lods
pop
jnp
jbe
dec
jne
push
push
insl
and
jno
lea
add
mov
aaa
pop
xchg
pop
mov
stc
xor
mov
xchg
push
repz
pop
popa
fs
lahf
cmpsb
and
mov
or
ss
in
icebp
push
sub
push
push
mov
and
loopne
ret
sbb
and
pop
mov
cld
loopne
add
xorb
mov
scas
xor
sahf
sub
push
jmp
sarl
lock
cmpsb
insl
inc
mov
xorl
cmp
loop
fxch
ds
and
cwtl
call
subl
dec
call
cmp
mov
fucomp
mov
inc
cwtl
stos
and
ja
mov
sbb
insb
add
icebp
dec
sbb
bound
lock
mov
stos
in
les
fdivrl
pop
in
scas
mov
loope
jb
mov
ret
lods
mov
movsb
lahf
cli
out
lods
inc
lods
jmp
xchg
das
adc
fldenv
lods
jnp
dec
ss
leave
in
fs
cmp
xor
rorb
rcl
adc
push
iret
jne
imul
sub
push
jo
or
negl
std
int
xlat
popa
insl
sub
mov
clc
jo
add
jnp
daa
ds
ret
jns
clc
xor
ljmp
dec
pop
sbb
inc
lret
pushf
jne
imul
iret
dec
or
lods
imul
cmp
xchg
sbb
pop
adc
adc
jns
mov
mov
repnz
or
js
dec
cmp
mov
jmp
testb
pushf
cmp
jp
jle
bound
inc
add
cmp
hlt
cmp
fsubrl
insl
dec
and
std
lret
xor
lods
cwtl
jle
das
add
push
or
sub
test
pop
stc
push
hlt
push
lahf
pop
sahf
adc
mov
sbb
jo
mov
fs
push
fwait
sbb
xchg
xor
add
jo
test
ja
xchg
movsl
push
daa
ror
notl
mov
insb
adc
xchg
mov
lahf
xchg
sbb
out
lea
or
mov
je
inc
addr16
jno
mov
sbb
movsb
lea
mov
adc
xor
push
mov
and
jb
movsb
pusha
jbe
xor
sbb
aas
xchg
xorb
mov
sbb
inc
aas
nop
fsubrl
push
jle
in
push
jmp
xor
ljmp
pop
xchg
inc
popf
push
loop
mov
rcrb
sti
shlb
arpl
cmpsl
pop
psubb
bound
ljmp
push
std
jo
inc
sub
push
imul
fsubrs
xor
fstpl
xor
push
mov
mov
xor
cs
or
cs
loope
push
imul
inc
outsl
xchg
notl
push
push
mov
mov
mov
adc
nop
push
aaa
and
test
je
dec
rcl
fdivr
out
repnz
cld
in
cmp
repz
addr16
cmc
sahf
ret
adc
push
jae
push
mov
xor
xchg
ds
adc
call
inc
inc
cmp
or
loopne
imul
popa
and
mov
inc
pusha
lock
dec
mov
gs
pop
mov
fbld
sbb
loopne
testl
aas
cld
dec
bound
push
jbe
adc
xchg
or
stos
pop
mov
push
push
push
lret
ljmp
jg
vdivpd
popf
fldt
jne
push
cli
or
ror
adc
test
repz
es
cs
sbb
fwait
pop
into
bnd
mov
xor
mov
ds
repnz
jo
sub
and
mov
sub
jae
or
pusha
jg
sub
pop
enter
xor
push
dec
out
jae
in
dec
xor
add
push
inc
xchg
jmp
jp
lods
xor
sub
leave
mov
ja
out
push
xchg
push
jns
test
and
and
leave
push
fxch
leave
inc
in
std
and
sbb
out
adc
inc
push
sub
fwait
aad
pop
addps
fs
shlb
rol
gs
ds
out
or
idivl
inc
jmp
xchg
xor
jnp
jo
imul
xchg
or
iret
cmp
mov
pop
pop
das
lcall
imul
leave
aaa
inc
in
nop
pop
enter
lahf
sub
push
push
movsb
cmp
push
mov
shr
xchg
testb
mov
push
or
ja
das
test
popa
incl
pushfw
jo
pop
push
sub
jae
jp
xchg
in
or
pop
mov
pavgw
shl
mov
cmp
dec
pusha
mov
rol
push
dec
out
push
xorl
xchg
add
adc
or
mov
imul
jg
sub
insl
dec
ret
add
cmpsl
push
pop
scas
movsl
mov
mov
nop
lock
lret
cmpsl
cld
cs
mov
or
inc
test
mov
shlb
xor
xor
outsb
movsb
dec
xchg
or
lock
jns
popf
dec
inc
out
cltd
or
divb
fimull
inc
mov
xchg
es
shll
inc
xor
call
cmpsl
cmc
add
mov
call
pop
popa
jecxz
fnstcw
addr16
mov
div
xchg
sbbl
inc
aam
push
sub
mov
push
and
insb
mov
xchg
xor
jb
rorb
shll
dec
dec
xchg
mov
icebp
ljmp
xor
lock
in
mov
fsubrl
movsl
aas
mov
popf
cwtl
test
jle
cli
scas
jge
mov
lea
bound
std
je
lods
mov
xor
lahf
mov
ss
jp
sub
or
in
jns
mov
aam
sub
notb
sbb
mov
mov
cwtl
vmread
in
and
inc
rolb
fdivrl
shlb
loope
call
adc
insl
inc
or
stos
in
movsl
and
mov
cmp
cmpsb
lahf
mov
neg
das
pop
ja
inc
gs
add
rcl
pop
lock
sbb
mov
out
fsubs
arpl
int3
add
fldcw
xchg
push
cwtl
mov
jmp
xor
fsub
and
sbb
lret
imul
ja
ret
call
out
mov
mov
out
mov
cld
mov
mov
sbb
cmp
adc
sbb
sub
ret
iret
push
jnp
mov
push
stos
arpl
test
pop
stos
add
add
test
out
nop
xchg
or
rorb
and
mov
xchg
pop
mov
cmpsl
xor
cmp
sub
sbb
out
dec
scas
inc
cld
xchg
mov
lret
sahf
push
add
mov
subb
mov
gs
lret
xlat
pop
lret
jg
iret
jl
inc
dec
movsl
push
js
gs
stos
lods
fwait
and
jl
inc
out
cmpsl
xchg
cmc
lahf
or
jnp
xchg
aad
shrb
xor
and
mov
inc
inc
and
jp
cmp
pushl
lea
jmp
pushl
lea
pushf
jmp
test
pushl
neg
movb
movw
call
bswap
lea
pushf
movl
call
lea
jbe
ror
inc
bts
dec
mov
pushf
inc
jmp
mov
btc
movzbw
call
mov
inc
clc
out
nop
dec
push
sahf
addr16
mov
cmpsl
mov
in
iret
outsl
stos
test
push
les
ret
xor
mov
dec
aad
scas
pushf
mov
mov
add
out
sbbl
xlat
imul
push
jo
mov
sbb
jb
stc
rcrb
movsb
sbb
xor
dec
push
push
inc
cmp
jl
add
push
pop
test
data16
cmp
xchg
lcall
push
idivb
arpl
ret
cmpb
enter
and
add
xchg
arpl
out
nop
outsl
dec
push
loopne
push
ds
aam
mov
jmp
xchg
adc
mov
or
imul
push
cmc
or
jae
xchg
dec
fs
jmp
das
push
push
sti
mov
or
xor
mov
mov
xchg
push
inc
bound
sarb
insl
aam
inc
pop
outsb
ss
out
stc
decl
pusha
test
pushl
repnz
pushf
mov
lea
jne
cmp
mov
movzbl
bsf
sub
btr
rol
bt
mov
clc
push
stc
test
sub
test
push
pushl
stc
pushl
popl
cmc
call
movb
jmp
mov
lea
xchg
call
lea
jb
pushf
cmc
cmp
pushf
call
pushf
pusha
lea
je
jmp
pusha
lea
je
pusha
jmp
pop
scas
push
cmc
out
nop
pusha
mov
sarb
scas
jp
mov
inc
pop
push
xchg
cmpsb
mov
push
dec
aad
arpl
mov
push
into
lea
fldt
sbb
pop
cltd
inc
mov
sub
add
lods
xchg
ljmp
pusha
int
sub
cmpsb
push
jbe
scas
xchg
ljmp
faddl
dec
xchg
mov
mov
adc
push
lea
pusha
push
lea
jno
call
call
push
jecxz,pt
out
nop
out
lret
dec
cmc
jmp
mov
cmp
gs
cmp
cmc
out
nop
hlt
pop
cli
push
adc
cvtps2pd
iret
pop
fs
pop
bnd
lock
in
push
lret
ss
repz
nop
popa
call
mov
je
flds
inc
aaa
call
push
je
out
nop
sub
mov
jb
test
nop
push
jnp
cmc
out
nop
sub
xor
or
loope
cmc
frstor
cmp
gs
dec
push
popa
out
nop
rclb
insb
cmp
mul
imul
test
mov
addr16
repnz
stc
sub
add
xchg
jmp
or
xor
std
incb
out
sub
pop
popa
cmp
decb
popa
pop
shrl
and
jg
add
and
or
mov
sub
and
daa
sbb
and
sbb
idivl
leave
scas
and
aam
mov
subb
mov
and
dec
jmp
ljmp
lcall
out
mov
pop
add
fisubrs
mov
loope
xchg
inc
insl
pop
add
ja
in
ja
outsb
mov
rolb
dec
jg
push
xbegin
add
rep
in
jg
xor
add
mov
cmp
inc
jnp
das
ja
iret
mov
out
mov
loope
dec
push
mov
ret
outsb
mov
sarl
idivl
xlat
xchg
and
inc
cmpsb
sbb
test
sub
or
call
mov
cwtl
inc
std
mov
and
test
cmp
sub
imul
pushf
add
pushl
lea
jmp
je
add
out
nop
or
adc
xchg
aas
imul
cmp
jb
mov
mov
popa
cmp
dec
jno
in
jp
in
push
rcrb
adc
sbb
inc
aam
jne
sub
dec
xlat
push
push
sub
or
jne
jl
adc
mov
mov
js
andb
sub
add
aam
ret
rcrl
dec
cs
neg
call
pushf
lea
jne
cwtl
pusha
not
movb
movsbw
mov
call
add
cmp
mov
jmp
or
lods
repnz
nop
mov
cmp
jno
cmpsl
mov
xchg
push
nop
mov
shll
aas
aas
arpl
mov
or
fldl
pop
mov
sub
inc
daa
or
pushf
dec
add
cmc
mov
addl
ljmp
adc
lcall
pop
sbb
hlt
fwait
arpl
das
pop
cmp
mul
nop
arpl
push
sarb
xchg
out
nop
xchg
sar
test
cmp
lock
or
mov
dec
pop
mov
mov
mov
pop
xor
jecxz
mov
cltd
xor
xchg
movsb
in
iret
gs
mov
and
and
push
adc
inc
xor
js
in
bnd
add
inc
addr16
insl
mov
fldcw
xor
divl
loope
leave
aaa
cmp
dec
xchg
xchg
lahf
inc
mov
aaa
mov
mov
addr16
aad
icebp
out
nop
push
adc
enter
sarb
adc
ja
and
nop
pop
inc
ds
or
push
dec
xor
or
mov
dec
cmpb
sub
stos
mov
sbb
sub
mov
mov
sbb
ret
fistl
push
sbb
jnp
mov
jmp
mov
mov
inc
cmp
outsb
cmpsl
mov
cld
rcrb
test
das
inc
nop
sub
sub
cli
xor
pop
xchg
jp
js
std
xchg
shlb
adc
pushf
je
lret
pushf
fsubrl
add
int
add
and
scas
pop
mov
dec
xchg
xor
ds
cs
cmp
lods
or
dec
lock
xchg
pop
jnp
movsb
mov
push
dec
or
rorl
jnp
addr16
adc
jmp
mov
and
xchg
test
fcompl
cmc
lock
fadds
jb
test
pusha
jmp
pushf
add
pushf
ror
push
shr
movb
movb
pusha
jmp
pusha
pusha
mov
pushf
mov
jmp
bt
cmc
sub
bt
pushf
or
pusha
lea
je
call
lea
bts
movsbl
mov
pusha
clc
pusha
test
cmpb
mov
lea
jne
adc
sub
aad
mov
test
add
rcl
pusha
pushf
sar
mov
stc
movb
pushf
test
push
call
clc
sub
push
test
bt
cmp
jmp
lods
push
cli
out
out
nop
push
loop
inc
insb
mov
jae
dec
test
scas
push
lods
cmp
loope
mulb
mov
dec
sahf
movb
xor
mov
add
les
xor
pop
pushf
lea
mov
xchg
lea
or
mov
push
adc
sub
mov
lcall
rol
inc
outsb
sbb
test
enter
loop
ds
xor
jae
je
push
xor
int3
inc
jnp
cmpsl
xor
jno
or
adc
jbe
and
adc
dec
inc
ret
movsb
lret
aam
jmp
jl
push
stos
cmp
jnp
nop
mov
add
iret
adcl
ret
outsb
jg
add
or
mov
inc
in
dec
mov
rorl
sahf
mov
jb
arpl
cmpsb
lcall
leave
push
repnz
nop
cltd
in
push
sub
cs
cmp
push
aam
jl
shlb
popf
imul
push
jb
or
imul
mov
sub
mov
pop
lods
or
ljmp
or
sbb
cmp
add
sub
movsl
inc
out
jecxz
xorb
dec
stos
lods
pop
xor
add
sub
out
ss
xchg
enter
sbb
push
mov
dec
enter
sbb
in
jp
pusha
in
xor
stos
pop
cmp
sbb
mov
dec
and
out
push
push
insl
dec
hlt
pinsrw
in
xor
cli
push
sub
mov
out
cmp
int3
mov
jg
xor
mov
push
sbb
jge
adc
in
cltd
push
push
sbb
dec
mov
mov
add
cmp
pop
sub
adc
sbb
lods
mov
test
mov
mov
addr16
xor
sbb
add
jge
sub
outsl
push
out
push
or
psubd
cmp
dec
lret
out
daa
add
out
mov
mov
arpl
arpl
pop
sub
pop
push
or
or
rcll
lret
sub
je
xchg
out
cmp
fsubr
out
dec
ror
jge
push
jecxz
add
dec
mov
pusha
stc
ljmp
repz
arpl
pop
stos
dec
bound
sub
imul
mov
xchg
jge
dec
stos
inc
je
adc
mov
out
and
or
int
xor
push
lock
xorb
jge
lea
sbb
and
test
mov
xor
call
add
popa
out
inc
push
lea
pop
mov
jmp
push
adc
cmp
mov
out
push
xor
out
lea
fidivrs
imul
dec
stos
cmp
lods
dec
dec
and
sub
loopne
dec
ljmp
push
xor
inc
fisubrl
movsl
and
mov
sub
stc
push
leave
in
xchg
sbb
or
shll
fbstp
sub
arpl
into
mov
xor
cmp
iret
mov
cmpsl
in
add
lods
pusha
push
shl
cmpl
push
pop
loop
popf
jmp
imul
adc
aaa
sub
pop
push
cld
lahf
ret
or
subb
mov
lods
int
xor
aas
add
push
imul
leave
arpl
xchg
ret
lods
insl
mov
test
dec
push
mov
or
inc
out
sub
push
inc
in
sbb
or
subl
leave
adc
arpl
outsb
out
stc
out
or
push
and
je
imul
dec
push
lret
xchg
in
cmp
scas
jl
mov
test
push
and
stos
cwtl
int
fsubl
nop
jl
imul
mov
dec
push
sbb
mov
insl
dec
out
hlt
dec
sbb
xchg
lods
aam
int3
mov
and
dec
mov
in
push
aad
add
push
out
jle
cmp
mov
dec
dec
xor
test
fbstp
fcoml
loopne
and
movsl
cli
in
push
dec
mov
scas
mov
dec
mov
je
push
xor
insb
push
arpl
js
and
pop
push
sub
adc
stos
iret
xchg
in
sbb
or
xor
mov
push
arpl
push
in
xor
xor
jbe
xor
adc
incb
mov
mov
pushf
ret
movsb
repz
cmpsl
sub
push
std
loope
scas
or
sti
xchg
imul
je
cmp
insl
mov
in
sbb
sub
add
repz
nop
imul
or
sahf
adc
imul
push
xlat
sub
in
nop
sbb
xchg
sub
je
loop
loop
mov
jle
sub
mov
add
jmp
mov
bound
int3
push
lods
jnp
sbb
insb
lods
imul
lods
in
stos
outsb
mov
or
dec
mov
mov
fstl
or
or
inc
mov
cmpsl
push
out
xchg
enter
or
jecxz
fbld
sub
dec
mov
pop
adcb
imul
bound
stos
xor
or
and
mov
add
sub
sub
sbb
stos
sub
sub
fs
out
or
pop
outsb
add
pop
sub
mov
sub
repnz
pop
and
outsb
in
sub
pop
cmp
dec
adc
dec
adc
sbb
shrl
dec
subb
add
sbb
inc
push
out
mov
outsl
xor
sub
ret
jmp
mov
cli
fwait
je
adc
loop
xlat
int3
mov
fisubrs
jge
sbb
xchg
sub
fadds
arpl
shll
pop
shll
in
adc
int
dec
adc
adc
sub
repz
jp
push
fldenv
xchg
aam
and
xor
mov
insl
imull
pop
push
call
or
sahf
mov
icebp
testl
shrb
loop
adcb
push
pusha
lods
movsb
fisubrs
cmp
jnp
scas
stos
push
ret
aaa
imul
lret
insb
adc
push
xchg
in
cmpsb
scas
jecxz
das
inc
ds
aaa
sub
cmc
insb
sbb
movl
push
xchg
dec
add
push
pop
sbbb
push
stos
inc
sbb
xchg
pop
loop
cmp
sub
movsb
imul
jne
movsl
lret
jne
and
loop
outsb
inc
ja
cmp
sbbl
pop
cmp
fisubrs
fidivl
push
out
rcr
repz
scas
xor
sahf
dec
push
stc
ret
or
push
les
jmp
pop
sub
gs
out
xchg
mov
inc
jl
out
push
insl
push
pop
rorb
popf
sub
je
lahf
and
push
shlb
xchg
add
mov
sub
and
sub
sub
sub
fldenv
inc
push
mov
scas
call
adc
sub
movsl
mov
enter
icebp
adc
or
int3
cld
cmpsl
sub
shlb
int
mov
push
or
xchg
mov
dec
sbb
jns
nop
enter
mov
stos
aaa
sub
or
push
imul
test
lea
and
mov
or
pop
data16
ljmp
push
out
pop
mov
nop
in
ret
call
or
scas
dec
xor
mov
lret
jns
std
pop
and
outsl
movsl
or
push
ret
dec
aad
hlt
or
das
dec
repz
dec
out
mov
fiadds
push
call
mov
mov
mov
int
adc
jo
in
cmpsb
jp
pop
in
adc
insl
pop
cwtl
inc
stc
mov
lods
or
pop
pop
pop
test
das
out
adc
dec
cltd
in
das
adc
dec
jp
out
sbb
adc
test
loopne
jp
outsl
enter
push
mov
sub
adc
cmp
sbb
adc
pop
in
or
ds
sbb
sub
stc
sti
fcmovnbe
and
mov
cs
jg
xor
arpl
adc
adcb
inc
fmul
mov
xchg
ret
in
jl
push
aam
cwtl
test
sti
push
into
cwtl
repz
shlb
lea
pusha
cwtl
jno
arpl
xor
ss
loop
pop
fmull
xor
add
inc
sub
jb
sbb
out
jge
xor
call
aaa
cmp
stc
sub
insb
stos
mov
leave
adc
sub
sub
push
sbb
dec
dec
out
sub
ret
push
into
add
and
inc
scas
dec
mov
pop
in
add
out
fimuls
stos
sub
gs
loop
dec
sbb
adc
and
xchg
mov
and
push
shll
sub
sbb
test
xor
sub
div
je
scas
push
call
xchg
and
dec
push
dec
insl
push
lock
dec
ret
or
scas
inc
bound
cmp
in
jp
lahf
insb
push
pop
dec
inc
and
mov
lods
sub
sub
les
or
xor
sub
adc
das
sub
out
ret
xchg
test
insl
pop
and
cs
movsl
push
and
sub
xor
shrb
subb
stos
xor
scas
lods
push
mov
imul
imul
push
jns
call
add
insl
enter
add
into
and
lods
sti
push
stos
cmpsb
cmc
arpl
jecxz
clc
dec
rcr
popf
call
iret
and
fdivrp
jns
pop
shr
aad
andl
push
sbb
mov
cwtl
sub
stos
imul
lods
mov
adc
shld
cmp
jecxz
imul
sbb
cmp
mov
pop
mov
sbb
lods
icebp
fdivl
push
sbb
js
je
sub
cmp
out
xchg
aaa
outsb
inc
adc
mov
stos
add
in
hlt
sub
and
out
scas
mov
mov
inc
out
into
fbld
xchg
add
ret
pop
out
sub
xchg
flds
popf
sub
push
call
mov
sub
ss
xor
movsb
sub
and
adc
cmc
add
addr16
push
lea
dec
push
sub
xchg
jne
dec
cwtl
das
or
scas
sub
arpl
shlb
push
xchg
out
cli
sub
ret
sbb
into
dec
adc
cmp
stc
outsl
pop
ljmp
inc
arpl
fs
or
cmp
fwait
clc
push
loop
bound
mov
and
jne
xor
dec
push
lret
loop
cld
push
repz
xchg
shrb
pop
cmp
mov
out
xor
xor
lret
aaa
sbb
sub
mov
loop
adc
cmp
xor
cmp
or
sar
adc
mov
and
cmp
enter
adc
inc
mov
scas
stos
or
out
in
cmp
ljmp
int
into
inc
adc
enter
ret
jno
adc
lock
cmp
adc
mov
push
dec
arpl
jp
outsb
add
sub
sbb
xor
sbb
in
mov
scas
into
push
repz
push
loop
in
jbe
aas
sbb
xchg
stc
sub
outsb
push
sbb
xor
push
out
in
scas
push
std
mov
scas
ljmp
int
imul
push
call
mov
stos
jle
sub
mov
push
xchg
mov
add
mov
ljmp
push
and
mov
sub
xchg
mov
icebp
sbb
daa
pop
add
out
imul
out
or
xchg
mov
imul
dec
or
cmp
xor
or
mov
adc
loopne
jecxz
cmp
mov
into
cs
adc
out
seta
xor
test
pop
leave
clc
insl
stos
stos
jg
and
jbe
int
shl
mov
aas
dec
shlb
jno
xchg
sub
mov
add
jl
sub
lahf
push
or
jns
repz
xor
xor
cmpsb
and
sub
cmp
lret
adc
and
stos
dec
in
xchg
int3
mov
jmp
out
mov
imul
push
mov
stos
xlat
mov
sbb
lea
aad
stos
sahf
add
lods
push
and
lcall
push
fnstenv
mov
scas
adc
mov
stos
and
ret
movsb
test
inc
loop
lods
mov
sub
mov
ss
add
sub
leave
sub
into
imul
mov
xchg
mov
repz
leave
in
jmp
pushf
mov
inc
add
adc
or
aas
mov
shll
loopne
dec
ret
test
out
fldcw
sub
jg
mov
or
outsl
into
adc
scas
ret
sub
add
mov
sub
loop
inc
pop
adc
push
mov
ret
cmp
fwait
xor
adc
lcall
sub
xchg
mov
scas
push
ret
sbb
dec
mov
mov
xor
fists
pop
rcll
insl
pop
jns
outsl
dec
stos
jl
pop
sbb
dec
sub
adc
dec
mov
or
adc
adc
mov
jg
xchg
subl
jl
mov
sub
mov
mov
movsl
sub
in
insl
push
sub
cs
aad
mov
dec
mov
push
roll
lods
int3
mov
out
inc
mov
lds
mov
push
out
addl
std
stos
lahf
test
xor
mov
sbb
scas
loop
ds
push
imul
out
push
fldcw
push
mov
jp
les
xlat
dec
in
in
and
jb
mov
out
cmpsb
xchg
mov
inc
aad
mov
xchg
and
or
insl
xor
in
mov
out
sbb
cmpsb
push
adc
shr
jge
push
test
xchg
mov
out
sbb
arpl
out
insb
xchg
dec
pop
sbb
xchg
insb
xor
or
or
dec
dec
mov
push
or
mov
sub
jns
rcrl
scas
loop
je
ret
adc
mov
sub
inc
sub
jge
into
in
mov
stc
cmp
ljmp
xchg
dec
push
lods
in
scas
push
sub
push
bound
sbb
and
popf
jmp
sub
in
movsl
lods
stos
jl
imul
sub
push
pop
cmpsl
add
push
adc
push
mov
jbe
arpl
sbb
and
loope
or
sbb
dec
sbb
je
movsl
xor
scas
imul
inc
fwait
sbb
mov
push
mov
iret
inc
stos
add
jnp
jecxz
leave
int
leave
imul
fs
lcall
aaa
push
lcall
cwtl
push
int
mov
into
leave
aaa
cltd
ljmp
int
xlat
andl
mov
adc
sub
pop
cmp
push
icebp
and
adc
jo
int
xchg
push
mov
cmp
sbb
scas
std
cmp
or
ret
cs
out
sbb
xchg
or
into
sub
mul
push
ljmp
dec
mov
sti
xchg
ret
dec
inc
cld
dec
sub
xor
mov
pop
lods
arpl
ret
push
mov
and
les
loopne
cmpsb
jo
or
jne
in
sub
or
adc
shl
in
adc
xchg
out
cmp
xor
dec
cmp
add
mov
and
xchg
push
cltd
sub
inc
cld
adc
ret
adc
shrb
push
sub
xor
jecxz
out
enter
stc
fiaddl
out
dec
add
rcrb
mov
dec
and
aas
call
and
sub
scas
mov
lea
dec
fcmovb
ret
dec
mov
arpl
int3
sbb
imul
lods
pop
mov
mov
jle
inc
cmp
int3
loop
and
cmpsl
shrb
dec
mov
dec
jg
xchg
sub
fidivl
stos
and
in
pop
mov
and
scas
adc
or
sub
outsl
sub
les
lods
mov
mov
or
or
lods
cmp
mov
ficoms
insl
loop
cmp
adc
in
mov
pop
push
dec
push
jmp
add
xor
inc
adc
adc
pop
and
jnp
xchg
mov
test
mov
cmp
ret
push
test
or
scas
aas
scas
or
repz
rcl
cmp
loop
mov
push
push
adc
mov
mov
pop
add
js
mov
testb
daa
sub
jp
ret
mov
pop
ret
sub
mov
pop
push
cs
dec
ljmp
mov
inc
and
mov
push
xchg
stos
sub
orl
xchg
dec
dec
loop
inc
push
or
hlt
int3
lret
sbb
out
jecxz
jecxz
adc
add
sub
addr16
rorl
scas
mov
jmp
cmc
orb
push
or
stos
das
out
or
pop
in
push
subl
add
or
sub
push
jno
scas
dec
xchg
inc
out
sub
imul
out
mov
jecxz
into
push
sub
pop
outsl
sub
mov
fs
push
sbb
in
int3
out
mov
or
ret
ret
dec
sbb
orb
ret
sbb
xchg
fucomip
sbb
push
sbb
scas
dec
push
sub
popf
dec
out
or
arpl
out
mov
cmp
lods
xchg
arpl
js
insl
pushw
sub
outsl
ljmp
sub
dec
mov
cs
push
les
aas
dec
imul
dec
ljmp
jecxz
sub
movl
daa
sbb
or
imul
cli
inc
test
mov
movsl
scas
and
cmp
test
jns,pt
decl
push
cmp
es
xor
adc
and
movsl
and
ret
pushf
adcb
iret
or
mov
adc
loop
sbb
lods
dec
icebp
addr16
imul
movsb
xchg
or
mov
xor
arpl
sbb
leave
shll
sub
sub
fldl
push
adc
loopne
dec
sarb
push
insl
imul
addb
insb
movsl
add
mov
jmp
or
stos
lods
push
or
sub
fldcw
cwtl
stos
jb
and
cltd
or
mov
inc
mov
pop
push
scas
add
push
mov
mov
xchg
mov
adc
pushl
mov
mov
add
sub
divb
lods
mov
out
loop
adc
insl
fsubrl
xchg
sub
cld
scas
cmc
xchg
ljmp
gs
add
add
in
xchg
fcoml
fiadds
fisubrl
mov
and
dec
test
loope
xor
outsl
add
pop
cmp
mov
lods
or
sub
sub
orb
mov
sub
or
call
sub
or
jle
sub
dec
dec
and
push
dec
adc
mov
lret
enter
mov
imul
ljmp
sahf
sbb
imul
inc
fwait
inc
xlat
dec
andl
outsb
cmpsb
aad
dec
in
test
push
adc
das
add
push
jmp
mov
lcall
das
lock
js
scas
fstpl
ret
push
cmp
push
adc
test
ror
mov
ret
inc
fs
clc
add
cmpsb
or
add
push
sub
shll
call
outsb
out
dec
movsl
out
imul
aaa
sub
stos
mov
in
in
ficomps
sub
fucomi
cs
in
arpl
add
lret
subb
jl
mov
xor
push
pop
xor
pop
cmp
stos
xor
xorb
mov
and
ljmp
dec
push
adc
in
adc
call
ret
push
xchg
mov
jmp
jmp
call
adc
mov
mov
insl
xor
imul
inc
add
mov
lods
add
lea
out
lahf
mul
inc
adc
push
or
or
ret
xchg
sub
mov
inc
mov
ret
add
xchg
scas
sub
xlat
popf
push
aaa
dec
ljmp
pusha
sub
mov
or
lret
insb
pushf
sub
inc
cli
or
in
mov
or
adc
mov
push
lds
pop
insb
dec
pop
sub
scas
scas
mov
shrb
mov
leave
imul
mov
or
jl
lods
sbb
arpl
push
ljmp
addr16
mov
push
cli
out
in
mov
in
sbb
mov
and
push
adc
and
sub
push
or
pushf
icebp
scas
bound
xor
rcrb
sub
mull
into
xchg
rcrb
call
jns
inc
in
sbb
mov
lahf
test
xor
pop
icebp
dec
cltd
in
adc
push
add
and
outsb
call
sub
mov
or
adc
sti
pop
dec
push
enter
and
insl
mov
pop
add
and
out
enter
outsb
hlt
fdivs
loop
inc
add
lock
mov
loop
pop
push
jg
shrl
push
xor
hlt
jecxz
movq
mov
lods
stos
ja
cmp
fcom
adc
iret
push
and
icebp
mov
roll
lods
inc
push
pop
in
fmulp
popf
gs
leave
sub
push
std
repz
mov
mov
imul
push
into
lods
add
test
aas
jl
add
sub
or
test
test
outsb
xor
sbb
mov
add
or
das
test
pop
lea
pcmpgtd
jl
popa
mov
sahf
imul
out
rcrb
mov
insb
outsl
or
loop
lret
sahf
mov
arpl
cmp
mov
push
push
jge
mov
out
in
int3
scas
push
dec
dec
xor
stos
cmp
add
insl
push
push
scas
pop
cmp
fisubrs
repnz
sbb
and
xor
lods
aas
sub
pop
setae
and
sub
mov
mov
push
and
sbb
test
adc
sbb
into
or
add
inc
cmp
sbb
push
lea
ljmp
nop
and
sbb
shrb
jl
jbe
sbb
and
xchg
mov
dec
leave
popa
cld
cmp
cmc
adc
stc
mov
mov
subl
mov
sbb
lcall
test
or
pushf
ret
and
arpl
jg
sbb
sub
mov
or
out
jge
arpl
add
fimuls
out
pop
arpl
push
push
scas
popf
sbb
jge
xor
scas
rsm
mov
in
sbb
push
je
cmp
fimuls
mov
cmpsl
cmp
mov
outsl
dec
adc
pop
mov
bound
mov
adc
jle
fisttpl
test
std
or
dec
arpl
loopw
jl
push
jle
imul
test
in
and
fdivrs
jp
loop
sbb
call
sbb
pop
fcomi
out
mov
pop
les
or
xchg
sbb
xchg
ss
sub
fsubrs
in
sbb
scas
imul
out
mov
scas
cli
mov
fstpt
ret
push
loope
push
or
and
test
fwait
pop
adc
mov
xor
push
mov
lods
pusha
mov
roll
sbb
inc
lret
imul
das
dec
ds
add
mov
movsb
dec
mov
pop
shrb
in
sti
sbb
adc
sbb
xchg
notl
popa
mov
das
inc
loop
push
test
jns
pop
sbb
arpl
arpl
out
jg
mov
mov
in
sub
roll
sbb
sar
add
mov
or
cmp
rorl
xor
lahf
out
scas
inc
and
fstl
pop
xor
push
out
cmpsl
or
lea
and
xchg
mov
dec
xchg
scas
pop
push
jmp
int
fs
sahf
jle
or
xor
jmp
dec
stos
cmpsb
mov
sbb
mov
out
inc
xor
ror
mov
sub
sub
pop
and
lods
or
adc
test
sub
popf
xchg
imul
subb
js
sbb
insl
test
push
shrl
pop
fmul
call
xchg
mov
sub
mov
add
js
and
xchg
stos
mov
mov
addr16
sub
xchg
mov
jmp
jne
add
movsb
inc
add
int3
or
call
dec
int
push
push
adc
sub
pop
or
mov
test
mov
push
out
mov
arpl
subb
loop
pop
sub
xchg
mov
mov
ret
ret
xchg
lea
sub
xchg
and
jl
push
pop
xor
cmp
cld
xchg
sub
pop
icebp
mov
push
xor
pop
sub
outsb
cmp
in
sbb
inc
push
ret
push
xchg
mov
or
sub
add
mov
adc
aam
int3
stos
lods
xchg
sub
jno
push
stos
sbb
stos
sub
pop
lret
imul
rclb
and
or
mov
pop
insb
stos
sub
xchg
mov
mov
je
call
jecxz
in
cmpsl
out
in
sub
es
adc
pop
push
jl
outsl
fisubrs
xor
inc
loopne
sbb
inc
pop
add
arpl
das
scas
stc
cmp
jl
je
xchg
out
adc
cmp
and
jle
scas
xor
jg
imul
sub
int3
or
das
cs
mov
dec
stos
aam
add
ret
xor
push
cwtl
cltd
inc
gs
mov
mov
lods
sub
sub
xchg
mov
sbb
das
jno
mov
roll
ret
cltd
sbbl
sbbb
and
and
or
jecxz
xlat
addr16
dec
xor
jb
jmp
dec
sbb
in
xor
sbb
mov
ja
fmull
hlt
pop
dec
sub
jmp
dec
dec
pop
fcomps
mov
rcll
sub
mov
sbb
rcrb
popa
pop
mov
aaa
scas
push
jl
push
sub
je
mov
pop
xor
sub
adc
int3
push
mov
fcompl
or
sub
or
or
loope
dec
xchg
sub
mov
sub
in
push
and
and
dec
mov
ficompl
or
mov
stc
adc
push
imul
or
xchg
and
lds
mov
mov
imul
out
mov
xchg
test
xor
int
fidivrl
xor
shrb
test
pusha
mov
shrb
fsubr
outsl
mov
in
cli
jecxz
rcl
leave
push
mov
mov
mov
and
sbb
cmp
jmp
jp
in
mov
adc
push
arpl
int3
mul
jo
sub
dec
loopw
inc
dec
add
scas
fisttpll
xor
and
cmp
aas
fisubrs
push
mov
cmp
insl
or
dec
xchg
hlt
bound
sub
mov
cmp
das
scas
jl
incl
mov
mov
push
lds
jmp
mov
test
or
pop
jne
and
dec
xchg
rcrl
fwait
mov
mov
or
lret
push
adc
sahf
leave
mov
subb
out
mov
movsb
fs
sub
cmp
xchg
add
les
mov
ret
dec
sbb
sbb
add
push
out
sub
mov
mov
push
jl
out
repz
mov
adc
cmp
insb
cmpsb
out
jecxz
mov
jbe
movl
insb
and
loop
inc
into
or
out
in
icebp
or
sbb
push
and
add
xchg
push
and
jecxz
jge
enter
in
or
cmpsl
jle
cs
aas
out
adc
sub
aas
or
jnp
jmp
or
popl
xor
dec
xor
jecxz
pusha
out
adc
xchg
imull
in
shrb
bound
insl
movsb
call
test
int
mov
sub
cwtl
stos
imul
add
mov
sub
push
inc
and
or
fisttps
stos
arpl
daa
mov
adc
cmpsb
dec
ret
dec
sub
xor
sub
das
push
lods
inc
ss
dec
popf
fcoml
enter
mov
mov
es
or
in
subl
mov
imul
add
push
or
mov
outsl
ljmp
xchg
jnp
dec
das
mov
jecxz
mov
lods
jno
outsb
fmull
movsb
adc
pop
mov
mov
add
xor
jg
xchg
je
scas
lret
pusha
nop
sbb
aad
sti
push
out
mov
and
iret
stos
in
mov
mov
xor
out
xchg
repnz
and
push
cli
push
sub
and
mov
iret
arpl
scas
call
test
xor
std
rorl
sub
mov
js
lods
mov
mov
fmul
adc
add
mov
or
mov
mov
adc
jns
hlt
ss
fisubrs
ret
mov
or
lods
lahf
test
add
dec
stc
pop
ret
and
mov
adc
arpl
bound
pop
iret
out
mov
push
pop
lcall
or
out
ret
in
mov
les
jge
xor
int
std
rorl
mov
xor
sub
jnp
xor
fmuls
cmp
mov
sbb
lcall
ljmp
stos
arpl
adc
pusha
arpl
leave
sub
dec
in
cmp
sbb
adc
adc
dec
or
inc
and
push
mov
inc
inc
mov
out
iret
xchg
sbb
xchg
das
out
mov
jecxz
sub
mov
orl
lea
adc
imul
pop
repnz
insl
mov
push
xchg
mov
cmp
rep
insb
inc
orl
xchg
sub
push
sbb
and
dec
imul
sbb
clc
sub
push
jge
or
ljmp
sub
push
push
sbb
daa
xor
fiadds
bound
dec
scas
insl
pop
jno
sub
aas
in
jb
mov
test
adc
cli
fldt
or
xor
push
jecxz
adc
sahf
xchg
outsl
insb
sub
stos
add
jle
jge
adc
scas
pushf
sti
dec
js
lea
ds
icebp
dec
dec
mov
jno
dec
pop
cmc
movsb
add
sbb
icebp
push
dec
adc
pushf
cld
push
test
pop
ret
outsl
dec
adc
shr
das
jns
add
int
scas
mov
ds
pop
aad
out
stos
push
cltd
repnz
sbb
frstor
or
pop
ret
push
subl
lret
stos
sub
test
pop
mov
filds
insb
pop
dec
sub
sub
test
f2xm1
scas
int
stos
push
ret
or
mov
call
push
sub
scas
and
sub
adc
sub
lret
cmp
jecxz
inc
dec
scas
push
xor
loop
pop
ja
ds
push
dec
xchg
in
cmp
adc
xor
pop
lea
jecxz
aad
aam
outsb
pop
fists
and
push
xor
mov
and
sarb
out
call
pop
jg
orl
inc
fsubrl
sub
or
sbbb
out
mov
adc
movsb
sub
jge
xchg
mov
push
sbb
dec
call
ljmp
mov
cwtl
scas
mov
jae
repnz
and
test
cmp
dec
out
aad
push
and
sub
pop
jbe
into
mov
inc
mov
gs
loop
sub
iret
adc
mov
mov
sub
imul
and
mov
adc
into
mov
add
addb
mov
out
xchg
push
inc
cmp
cmp
jmp
ja
cmp
testl
pop
sub
into
insl
mov
sub
mov
sbb
and
outsb
cmp
sbb
sbb
in
imul
pop
jecxz
jl
pushf
mov
dec
jg
ret
sub
mov
push
add
and
mov
fsubs
jmp
mov
xor
adc
in
shl
outsl
je
iret
jno
pop
or
loop
popa
es
roll
mov
sub
sub
dec
jecxz
scas
ret
mov
cmpsl
clc
out
sbb
loope
imul
xchg
fildll
pop
outsb
dec
stos
lock
jecxz
in
push
adc
test
pushf
pop
das
mov
shll
push
sub
js
lcall
sbb
cmp
mov
inc
push
aam
mov
out
mov
flds
imul
sbb
aas
and
push
xchg
and
scas
popf
mov
iret
adc
in
jnp
test
or
or
fimull
sub
mov
dec
jg
pop
scas
and
sbb
jle
out
imul
push
outsb
sub
mov
mov
cmp
test
ds
push
adc
mov
sub
arpl
shlb
out
adc
sub
outsl
mov
xor
or
xor
call
fsubs
in
lcall
scas
leave
out
xor
or
add
addb
movsb
lods
ret
mov
outsb
inc
mov
in
faddp
sub
aam
imul
pop
jecxz
loopne
dec
inc
and
lods
push
imul
inc
jge
enter
imul
sti
rcr
aaa
dec
cmp
dec
sbb
mov
insb
push
sub
mov
fstps
or
adc
add
leave
mov
and
and
jecxz
mov
popa
xchg
pop
call
xor
in
test
jl
scas
movsl
jnp
mov
adc
stc
dec
dec
or
mov
push
adc
imul
xor
push
push
orb
jo
sub
lods
jge
mov
arpl
add
insb
cmpsl
adcb
dec
stos
repnz
sbb
mov
push
aam
gs
loop
rolb
lods
aad
push
adc
clc
inc
rcl
xor
repnz
ljmp
push
sub
xor
in
adc
mov
imul
lret
pop
pop
push
dec
adc
mov
dec
in
loop
int
pushf
adc
daa
and
jge
mov
shlb
adc
sbb
lods
dec
dec
inc
and
imul
pushf
ret
in
arpl
pop
mov
test
mov
add
in
mov
dec
test
arpl
mov
mov
adcb
shrb
or
scas
jp
and
sub
test
iret
aad
dec
xor
sbb
sub
out
sbb
scas
mov
bound
jae
enter
jl
mov
lss
das
xchg
stc
lock
or
lea
sub
sbb
les
call
insb
jle
loop
ret
cmp
and
mov
in
add
jnp
inc
shll
dec
jl
dec
push
jmp
mov
or
popf
fldt
xor
sbb
pop
mov
adc
sbb
sub
push
cmp
in
push
xchg
scas
add
dec
out
lret
test
or
sbb
mov
xor
scas
movl
pop
xor
dec
or
daa
sub
or
int
dec
adc
pushf
jns
mov
in
lret
jmp
rcrl
clc
or
cmp
out
pop
xchg
addb
mov
ret
sub
push
mov
test
sub
pushf
in
xchg
pop
out
filds
stos
xlat
roll
dec
shlb
imulb
out
sub
mov
mov
pop
or
cmp
ret
fldenv
or
sub
pop
xchg
sub
lcall
mov
scas
or
ret
fldl
in
sti
aaa
adc
and
mov
push
push
xor
dec
sbbb
mov
int3
adc
sbb
mov
dec
jne
dec
or
inc
stos
loope
out
in
sbb
cmp
insb
adc
int3
mov
mov
icebp
or
jecxz
adc
mov
scas
lds
dec
cmpsb
dec
stos
iret
cmp
add
notb
or
rcl
inc
dec
xchg
loop
cmp
jl
in
jnp
sub
or
pusha
xchg
int
push
inc
dec
filds
sub
cmp
rcrl
mov
cs
pop
or
jl
xchg
ja
xlat
sbbb
shll
add
push
outsl
push
nop
mov
mov
lcall
out
test
adc
xor
or
test
and
pop
jp
ret
push
cmp
add
mov
dec
mov
xchg
aam
mov
sbb
sbb
out
inc
mov
loop
lahf
outsl
out
in
fcompl
call
adc
push
ret
mov
cmp
and
xchg
lods
sub
into
out
mov
stos
or
aaa
jmp
jnp
test
and
pop
and
cmp
xor
or
jmp
arpl
es
scas
lods
test
jmp
lods
insl
mov
add
cli
push
out
out
mov
stc
sub
dec
les
xchg
sbb
dec
lds
dec
bound
fwait
add
ret
sub
sti
jbe
mov
push
cwtl
pop
push
stos
mov
out
cmp
sbb
or
push
clc
inc
add
insl
test
lods
xchg
add
dec
addl
sub
xor
push
test
insl
pusha
mov
in
mov
xor
aad
jnp
inc
add
imull
sub
nop
sbb
jns
test
out
mov
int
arpl
mov
dec
or
or
stos
jl
stos
or
sub
cmc
mov
mov
cmpb
das
or
push
mov
inc
into
mov
xor
lds
or
inc
scas
adc
insb
jp
jecxz
inc
int
mov
jg
mov
or
add
cmp
push
pop
daa
push
inc
shlb
mov
jmp
fs
push
stos
cmp
mov
sub
mov
insl
lcall
push
adc
pop
imul
fsubrl
sbb
and
sub
pop
adc
and
arpl
aam
pop
imul
orl
cmpsb
scas
pop
insl
arpl
xor
mov
fcompl
mov
orl
ja
mov
stos
add
jne
int
popa
in
lret
js
mov
shlb
ret
ret
shlb
outsb
jne
pop
insl
insb
adc
adc
dec
mov
imul
aad
add
das
push
fnstsw
ljmp
jl
outsl
pop
mov
into
pop
arpl
repnz
push
dec
je
mov
pop
test
xor
enter
imul
sub
push
add
negl
xor
loopne
and
pop
sub
add
and
out
into
pop
or
jne
and
enter
scas
shlb
xchg
leave
sub
lret
dec
icebp
sar
ret
in
mov
pop
sbb
jge
add
les
sbb
or
cmp
lods
xchg
out
mov
shlb
jo
or
xchg
mov
into
dec
js
dec
or
cmpl
jle
fisubrl
mov
loop
dec
add
ss
cltd
mov
out
sub
sub
adc
push
mov
push
insl
pop
aam
shr
mov
jb
decb
lahf
sub
mov
bound
insb
stos
and
dec
push
sbb
sub
jo
adc
clc
sub
mov
sub
cs
mov
dec
daa
stc
lds
lods
fldcw
inc
jle
out
fcoml
decb
lea
test
sbb
cmp
pushf
sub
outsl
push
ljmp
inc
int
mov
repz
imul
mov
stc
clc
dec
cmc
adc
int3
orb
mov
xchg
fcoms
stos
sub
fisttps
mov
in
imul
insl
push
shrb
ret
mov
mov
pop
mov
mov
jns
mov
cld
push
or
cmp
and
push
adc
addr16
cmp
mov
dec
dec
ljmp
outsb
je
pop
out
dec
divl
roll
mov
sub
hlt
bound
sbb
faddp
and
pop
loop
jmp
sahf
lock
xchg
data16
in
mov
jmp
dec
sub
or
sbb
or
in
or
jle
mov
mov
or
lods
xor
nop
add
push
push
or
inc
xchg
adc
lock
insl
js
mov
hlt
xor
sub
jl
repnz
enter
mov
adc
popf
or
add
negb
dec
jge
mov
out
push
jne
sbb
mov
int3
int3
pop
test
adc
pushf
loope
pop
testb
or
in
cs
je
in
out
sub
jmp
lods
icebp
cmp
sub
adc
xchg
xchg
pop
in
in
clc
push
das
xor
imul
pop
mull
push
mov
sub
std
fcoms
das
dec
in
sub
sub
jnp
push
cli
mov
popf
adc
mov
jl
ds
stos
shrl
lods
outsb
cltd
out
mov
call
mov
lcall
hlt
out
into
inc
mov
outsl
mov
repnz
nop
nop
sbb
sub
jl
pop
adc
loop
sbb
mov
imul
or
fimull
mov
xorb
ss
iret
ret
or
loopne
or
adc
ret
pop
lea
mov
jne
ret
adc
push
test
xchg
cs
ss
or
aaa
pushf
and
push
adc
stos
mov
imul
cmpsb
ljmp
jl
rcll
xor
fistpl
and
les
les
ret
ss
jmp
adc
or
or
inc
add
jl
into
mov
sub
or
fidivrs
movsl
cmp
test
inc
mov
adc
dec
ds
mov
inc
jno
mov
or
mov
outsb
jmp
std
scas
addb
sub
or
ret
xorb
dec
loop
loope
push
mov
push
jge
in
xlat
scas
jge
or
push
pop
arpl
push
cwtl
sub
imull
das
or
xchg
pop
subl
mov
add
repnz
push
cmpsl
mov
mov
arpl
mov
mov
sub
repz
sbb
mov
cmpsb
inc
pop
das
or
pop
cwtl
sub
call
imulb
in
dec
mov
mov
mov
aas
shrl
cmpsl
sbb
inc
lea
cmp
into
dec
or
inc
sub
adc
mov
lods
sbb
mov
leave
jo
ret
dec
adc
fcmovbe
sbb
stos
jp
loop
sub
inc
dec
inc
loop
jmp
adc
or
hlt
sub
popa
xchg
add
or
xor
imul
mov
out
pop
adc
fs
mov
scas
ss
mov
lea
mov
sbb
mov
das
out
stos
sbb
cmp
js
int
out
int
arpl
addr16
jge
addb
or
cmc
repz
cmpl
pop
addr16
pop
dec
or
fistps
sub
xor
pop
fwait
mov
sbb
pop
movsb
dec
dec
or
adc
add
sbb
repz
sub
imul
insl
mov
xchg
aas
imul
scas
pop
test
insl
out
and
jno
into
test
loop
in
xor
popf
js
shl
pop
in
stos
push
lods
push
dec
cltd
xor
lods
mov
push
jp
sub
movsb
scas
adc
lods
ret
rorl
and
addps
jge
lods
mov
in
dec
mov
ljmp
push
clc
mov
cmpsl
std
outsb
int3
repnz
add
fbld
and
xor
test
movsl
mov
mov
je
inc
push
mov
push
mov
aas
lahf
xor
and
ljmp
adc
scas
xor
lcall
pop
fdivrl
push
sar
mov
icebp
push
imul
xchg
insb
jne
cmovns
adc
sbb
sub
in
fcmovnb
das
xchg
jp
cltd
scas
or
imul
pop
push
push
xlat
cmc
hlt
sub
rcrl
out
out
push
dec
push
jl
mov
push
test
sbb
pop
sub
into
sti
dec
mov
xor
jge
ja
aad
int
gs
sbb
xchg
cs
test
sti
mov
popf
mov
mov
shl
push
push
sbb
cld
dec
ret
add
jecxz
sub
repz
scas
push
int3
pop
adcb
ror
lods
mov
imul
insl
cli
dec
jno
sbb
std
mov
test
jmp
dec
mov
or
pop
lret
loop
sub
out
es
sub
dec
mov
or
ret
ljmp
gs
sbb
push
dec
adc
sbb
cli
ret
insl
subb
in
or
insl
arpl
mov
out
decl
gs
mov
mov
in
mov
sub
pop
inc
and
test
arpl
arpl
xchg
push
stos
add
sbb
into
movsb
in
add
mov
jne
pop
mov
adc
dec
mov
and
adc
push
push
mov
imul
jecxz
sti
out
adc
mov
push
loop
cltd
jl
int
shrb
ret
ret
fisubl
or
and
add
adc
test
jecxz
sub
xor
cmp
jle
mov
mov
aam
cmp
loop
arpl
xor
push
shll
arpl
adc
pop
lea
dec
xchg
sbb
mov
jns
mov
into
push
in
insb
and
jl
lods
lahf
sub
or
mov
sbb
lds
mov
xor
js
idivl
xor
adc
inc
add
fistl
dec
push
mov
inc
xchg
push
lcall
arpl
subb
imul
or
das
outsb
add
imul
cmp
outsb
sbb
cmpsb
insl
dec
outsl
stos
clc
imul
into
push
iret
int
nop
add
mov
cmp
stos
sahf
pusha
mov
adc
ljmp
jmp
shll
lods
pop
sub
icebp
iret
mov
loopne
sub
test
fdivs
add
jl
xor
inc
xor
test
arpl
adc
dec
pushf
mov
push
stos
mov
jmp
in
add
scas
popf
lods
repnz
loop
loop
movsl
push
sbb
mov
xchg
sub
jno
add
xor
pop
ret
enter
sub
push
push
and
arpl
or
insl
lcall
sbb
dec
dec
ljmpw
sub
mov
xchg
cs
aad
test
roll
aas
js
cmpsb
call
mov
or
insb
loop
lahf
push
fimuls
adc
fimull
mov
add
dec
ljmp
sub
mov
fs
dec
jle
inc
or
jnp
fsts
xchg
inc
out
out
xchg
push
fisubrl
cmpsb
mov
pop
xor
leave
lret
cmp
jne
add
mov
ret
insb
adc
mov
sbb
fnstsw
subb
and
orb
adc
xchg
rorb
push
or
sbb
lret
adc
ret
rorb
fsubrs
test
sub
add
mov
xlat
ror
adc
jge
orb
into
ljmp
push
out
cmp
andb
out
in
sub
lds
scas
push
loop
lea
stos
aam
mov
ljmp
mov
lods
add
lock
stos
out
in
adc
rolb
adc
add
pop
aas
lea
sub
lret
pop
mov
xlat
sahf
pushf
dec
dec
adc
dec
mov
nop
sbb
sub
and
xchg
outsl
xlat
ret
enter
or
insl
xchg
jl
mov
dec
int
mov
sti
xchg
sub
add
sbb
sbb
and
inc
in
sub
jmp
sbb
mov
sbb
push
xchg
push
or
in
sbb
in
sub
int
arpl
in
mov
adcb
lret
inc
shrb
loop
bound
sub
out
rolb
jecxz
out
pop
cmpb
fildll
xor
aam
call
dec
mov
xchg
scas
xlat
rorl
mov
dec
or
scas
scas
pop
out
sub
adc
jg
and
inc
sub
pop
or
repz
sub
in
mov
fsubl
add
add
sti
or
scas
adc
iret
test
sbb
sub
arpl
xchg
in
push
xor
cs
cwtl
adc
jo
out
btr
aaa
sti
icebp
inc
insl
enter
cmp
mov
adc
incl
js
pop
stos
jmp
outsb
enter
cmp
stos
lcall
mov
js
dec
paddd
sbb
and
arpl
sbb
sub
adc
out
in
push
jmp
ljmp
repz
sbb
fcmovbe
xchg
icebp
jne
or
addb
sbb
cmp
mov
int3
push
ja
jns
push
xchg
xchg
test
jge
push
fiaddl
xor
out
and
les
push
jge
xchg
movb
sub
fs
stos
cld
outsl
sub
pop
mov
push
scas
aam
lds
pop
push
popf
sahf
and
xchg
or
sbbb
out
mov
gs
inc
cmp
jne
int3
jl
std
add
insl
add
leave
ret
icebp
mov
mov
pop
or
scas
jmp
insl
push
imul
dec
ret
imul
cmp
or
dec
lahf
fcompl
jmp
dec
test
stos
mov
fistpl
in
addr16
add
arpl
out
xor
add
cld
decb
clc
aam
mov
adc
and
fs
jo
adc
fstpl
int3
insb
jge
lods
inc
sbb
mov
out
in
adc
clc
jmp
adc
scas
sub
pop
std
adc
pop
mov
jbe
enter
push
pop
out
push
pop
es
and
jecxz
adc
add
mov
daa
insl
shr
jl
insl
mov
xor
sbb
mov
aad
lods
mov
arpl
test
sti
aam
loop
stos
mov
dec
loop
dec
sub
jl
pop
xchg
mov
cmp
mov
sbb
sbb
movsb
mov
outsb
or
inc
xchg
test
or
mov
sbb
xchg
cwtl
mov
add
adc
fimull
out
imul
decb
push
adc
or
jnp
dec
jmp
mov
stos
jge
adc
adc
scas
das
sub
out
pushf
stos
mov
dec
dec
sbb
in
inc
cli
fwait
xchg
mov
aam
outsb
mov
jmp
out
mov
hlt
mov
dec
repz
xchg
lahf
enter
sub
popf
into
ret
outsl
inc
pop
dec
scas
ret
in
pop
sub
test
cld
cld
push
mov
imul
loop
sub
or
adc
mov
nop
adc
dec
and
pushf
jo
out
add
push
sub
fldcw
loop
sbb
dec
lds
popf
mov
gs
outsb
pop
jno
or
lret
das
xchg
add
adc
pop
jbe
dec
je
adc
xor
fbld
xor
lods
xchg
dec
mov
sbb
sub
loopne
out
pushf
ret
stos
sub
sub
adc
shl
mov
or
push
in
or
mov
popa
ret
jmp
jecxz
push
add
out
push
push
jl
mov
rcl
arpl
fcoms
dec
fs
in
push
in
loop
scas
loop
je
cld
push
mov
sub
lods
stos
outsl
rolb
sub
mov
sti
mov
notb
sub
mov
inc
pop
dec
loopne
dec
push
pop
push
add
xlat
or
fsubl
outsl
mov
xchg
into
mov
in
adc
sbbb
ret
mov
jecxz
mov
popa
dec
scas
adc
mov
cwtl
int
sbb
pop
ret
sub
sub
movsl
rol
loop
aam
outsl
pop
add
imul
arpl
sub
nop
cmpb
imul
jne
iret
outsb
sub
insl
push
add
sub
popf
add
jbe
call
subl
js
cld
mov
stos
loopne
dec
fstps
or
dec
fsubp
xchg
jmp
or
in
mov
xchg
xchg
xchg
dec
imul
add
out
add
mov
xor
xor
jmp
add
inc
ret
fdivrp
push
mov
adc
aas
sub
rorb
in
mov
in
subl
inc
aas
push
pusha
adc
je
adc
cs
adc
cltd
sub
outsb
int
shlb
cwtl
das
add
arpl
les
mov
and
repz
push
js
in
and
arpl
int
fisttpll
jno
dec
stos
sub
inc
mov
loop
xchg
lcall
int
mov
mov
dec
out
sub
in
jecxz
lods
fsubrp
iret
outsl
mov
movsl
or
out
mov
inc
mov
sbb
jle
xchg
ljmp
leave
xchg
mov
xor
insl
int3
test
mov
ljmp
orl
in
bnd
adc
sbb
dec
imul
mov
mov
call
cs
rclb
out
sub
gs
shl
enter
out
data16
fadd
jb
test
std
fs
cmp
fisubrs
fisubrs
popa
push
jne
outsl
sub
xchg
add
mov
lret
pop
mov
icebp
andl
rcrb
jmp
sub
push
outsb
in
pusha
cmp
push
add
in
sub
dec
mov
pop
loopne
jne
out
mov
cltd
jo
fisubrs
pop
cvtdq2ps
std
cmp
out
outsb
mov
testl
call
cmp
stos
jb
add
xchg
mov
arpl
lret
imul
lcall
dec
popf
adc
fidivs
enter
stos
mov
das
mov
sbb
fnsave
cltd
mov
out
in
adc
ljmp
loop
push
add
filds
jg
scas
jbe
int
rep
lods
mov
mov
loop
sub
xchg
nop
into
in
aaa
inc
imul
inc
push
repnz
je
push
jle
xchg
pop
pop
out
jecxz
mov
jl
xchg
mov
sbb
pop
jp
sub
jg
fldcw
cltd
ret
mov
incb
lea
insl
xchg
addr16
out
ret
jp
pop
gs
pop
arpl
dec
jmp
cmp
rol
ljmp
or
nop
jo
adc
das
adc
in
dec
jl
lods
xor
sub
add
in
das
mov
xor
addr16
xchg
cmovge
pop
adc
sub
fwait
into
out
ret
inc
arpl
stos
imul
add
sub
movsb
lea
mov
out
mov
call
test
insb
test
dec
aad
and
sub
in
mov
sub
adc
xor
xchg
sub
or
pop
arpl
cmp
outsb
stos
sbb
insb
in
imul
sti
xchg
js
scas
cmpsb
push
jne
out
arpl
push
push
insb
jp
sarb
sub
jle
fiadds
adc
jmp
adc
movsl
or
dec
mov
dec
pop
sbb
mov
loop
stos
into
xor
xchg
jg
mov
das
xchg
push
or
dec
or
out
sti
loopne
mov
or
or
xchg
jle
xchg
sub
pushf
sub
stos
in
sub
in
push
mov
dec
repz
mov
fld
mov
jl
inc
js
add
imul
cld
pop
sub
ret
icebp
outsl
push
pop
jecxz
fldl
outsb
arpl
and
test
cmp
sbb
sbb
out
imul
in
arpl
mov
outsb
ss
dec
fcoml
jmp
insl
dec
adc
loopne
or
sbb
push
adc
mov
jno
pusha
clc
mov
and
js
push
aam
rcll
ja
push
or
fmul
or
or
cmp
mov
rorl
xchg
jnp
mov
mov
into
ret
popf
andb
in
sti
lods
jmp
fisttpl
pop
ret
dec
add
and
add
push
or
adc
sbbb
or
out
mov
iret
adc
adc
adc
popa
add
shl
outsb
sub
cld
rcl
out
imul
fcmovnu
xor
sub
test
stos
imul
lcall
or
lea
jbe
and
xchg
ret
and
clc
mov
arpl
loop
sub
mov
xchg
pop
int
hlt
call
and
or
in
loop
cmp
cmc
inc
or
or
sub
stos
dec
sub
or
jmp
xchg
subb
mov
mov
xlat
stos
sbb
aad
movsl
lods
stos
out
sub
dec
test
cltd
fidivrl
xor
pop
lret
test
mov
sbb
test
or
pushf
out
cwtl
mov
mov
mov
mov
lcall
mov
push
insb
jnp
outsb
adc
jbe
subl
outsb
movlps
jb
xchg
push
mov
mov
mov
sbb
scas
scas
stos
inc
add
fdivp
scas
das
inc
inc
cmp
push
adcb
outsl
mov
xor
addr16
loop,pn
mov
adc
fisubrl
cmp
sub
xchg
push
rol
or
or
js
dec
ljmp
and
xor
mov
subl
xor
sbb
mov
sbb
test
adc
and
xchg
and
sbb
and
adc
jno
mov
cmovg
xor
and
imul
xchg
xchg
inc
ret
mov
mov
lods
cmpsl
enter
arpl
ficomps
and
ret
ret
subb
mov
dec
fmul
test
jbe
cltd
mov
mov
sbb
jae
aaa
pushf
mov
movsl
xchg
push
dec
out
or
int
jecxz
jge
or
nop
adc
push
data16
sahf
pop
imul
or
clc
lret
mov
ret
sbb
and
add
pop
sub
pushf
iret
adc
repnz
dec
sbb
out
mov
mov
pop
das
or
and
das
jg
add
ret
push
or
sbb
lea
lds
enter
scas
fwait
xor
leave
stc
add
aad
or
cmp
dec
insl
lods
pop
pop
xor
stos
push
imul
adc
dec
dec
or
mov
and
cmp
jnp
andb
adc
pop
mov
dec
fisttpll
pop
sub
sub
stc
rcrb
cli
in
pop
movsb
add
out
sbb
arpl
cmp
fwait
sub
sub
lods
or
xlat
sbb
push
fdivs
les
into
andl
lods
orl
push
imul
jbe
jns
or
insl
je
adc
xor
xor
mov
adc
push
lcall
stos
out
sub
mov
into
mov
loop
scas
push
in
lcall
shrl
fstl
call
adc
pop
jb
movsl
je
cs
pop
imul
xlat
out
sub
sub
aas
jb
push
insb
or
enter
pop
es
aad
pusha
dec
scas
xchg
push
adc
scas
add
fdivs
aam
push
call
in
mov
xchg
scas
gs
int3
das
mov
adc
sub
mov
mov
icebp
cmc
sbb
mov
pop
xor
mov
call
fs
test
bound
aaa
lods
imul
stos
stos
js
cmp
les
in
pop
pop
ret
outsb
in
dec
out
dec
cmp
inc
and
push
sbb
stc
movsl
add
stos
arpl
mov
dec
push
int
adc
mov
push
test
aas
lods
mov
adc
stos
movb
mov
mov
je
mov
shlb
test
test
jmp
shr
push
fldt
mov
mov
cld
scas
add
addr16
dec
adc
imul
sbb
mov
out
out
fs
pop
movsb
ret
or
outsb
je
xchg
jecxz
pop
out
sbb
push
sub
cli
pop
sbb
pop
rcrb
arpl
jle
popf
scas
adc
mov
aaa
sub
fidivl
imul
loop
sbb
mov
shrl
mov
imulb
arpl
fsubl
xchg
xor
dec
xchg
jmp
mov
cld
cwtl
push
push
loopne
in
test
adc
mov
xchg
ffreep
dec
mov
lea
mov
xorb
or
icebp
and
sarb
enter
and
xor
pop
mov
mov
sub
sbb
dec
ds
push
cmp
in
pop
mov
or
fisttps
mov
and
mov
mov
lock
push
ret
stos
outsb
xor
jle
int3
sub
push
stc
sub
ret
lea
mov
lock
mov
jl
fs
pushf
sbbb
mov
arpl
sbb
and
pop
push
leave
lahf
imul
into
cmpb
adc
bound
out
adc
mov
movsb
pop
arpl
nop
out
jecxz
or
mov
ret
mov
dec
push
mov
push
je
push
test
insl
adc
test
call
fidivs
mov
xor
jecxz
adc
int
js
enter
aas
sub
xor
fmull
dec
in
sti
imul
ret
xchg
into
loop
sbb
scas
push
or
lods
jnp
in
sbb
ret
dec
out
fdivr
mov
adc
adc
pop
pop
in
push
dec
push
cmp
xchg
jl
in
xlat
adc
mov
and
aaa
sub
or
sub
outsb
in
movsb
out
pop
mov
fiadds
loop
inc
arpl
ret
jb
jo
out
out
mov
ds
dec
scas
loop
inc
push
xor
pusha
cmp
mov
mov
test
jo
xchg
dec
mov
push
cmpsl
inc
push
sub
xchg
jecxz
ret
mov
push
dec
sbb
movsb
insl
lods
arpl
outsl
sub
out
outsb
mov
mov
scas
xchg
imul
loop
push
jl
push
pop
adc
adc
push
push
push
out
pop
push
gs
jge
or
je
in
stos
jmp
sub
loop
mov
lret
int3
lds
stos
pop
jge
jg
mov
mov
xor
enter
sbb
std
cmc
mov
out
mov
arpl
mov
xchg
push
xchg
jle
out
xchg
push
stos
push
mov
or
pop
cli
lods
cs
pop
lods
or
insl
ret
js
sub
scas
jl
daa
das
sub
aam
aas
inc
insl
lods
sbb
sub
mov
lods
and
fs
pop
ljmp
jge
jecxz
ret
xlat
lret
imul
rsm
je
arpl
dec
fldcw
mov
inc
ret
test
cwtl
enter
cmp
xor
imul
outsl
jecxz
nop
mov
lahf
into
or
jmp
add
das
orl
adc
inc
call
push
dec
lods
das
mov
adc
inc
cmp
sub
lea
test
outsb
dec
sbb
mov
fucomp
aas
testl
into
push
push
repz
fcom
nop
pop
insl
xchg
arpl
jmp
mov
in
pusha
rol
dec
jl
sbb
into
je
cs
adc
xor
cli
mov
in
iret
cs
out
fldl
pop
ret
in
push
out
add
arpl
dec
and
pusha
push
and
inc
xchg
pusha
sub
fcmovb
arpl
mov
cmpl
pop
arpl
cmp
sub
aam
push
pop
jno
xor
sbb
and
in
arpl
sub
subb
sbb
and
cmp
imul
xchg
fstps
dec
adc
and
es
lods
jl
or
dec
leave
mov
iret
rcrl
lods
nop
push
sbb
mov
or
xchg
pop
addb
ficoms
sbb
ss
cmp
mov
jb
push
xchg
test
cmp
mov
add
mov
sub
bound
int
arpl
cmp
outsb
jge
popf
out
mov
lds
dec
push
stos
sbb
xrelease
xor
mov
or
push
xchg
insl
xchg
stos
arpl
imul
sub
cmpsb
mov
arpl
sahf
push
outsb
lds
arpl
mov
push
andl
insl
and
test
call
fldenv
cmp
repz
sub
jo
das
enter
mov
dec
push
mov
in
fiadds
and
pop
nopl
insb
fs
push
repz
ljmp
sarl
dec
inc
jne
mov
and
popa
xchg
arpl
sub
xchg
jl
pusha
jecxz
push
adc
add
shlb
add
ret
das
push
into
push
add
notb
aas
push
mov
jmp
lods
stos
out
out
xor
xchg
je
xchg
mov
and
fs
loopne
scas
push
push
loop
mov
or
iret
loop
sub
stc
enter
addr16
pop
aam
nop
aaa
int3
fucom
jno
repz
aas
lahf
clc
sub
aad
inc
inc
ficompl
xor
add
xchg
in
add
arpl
jb
stos
outsb
xor
ds
add
push
arpl
sub
lods
lea
mov
in
cld
sub
rol
push
arpl
jecxz
sbb
ja
test
lock
mov
inc
lcall
je
in
push
ret
or
test
insb
mov
fs
push
mov
outsl
dec
je
xchg
iret
dec
pminub
xor
add
adc
test
cmpl
setge
adc
fs
repz
or
sbb
sbb
sub
dec
add
rolb
dec
out
sbb
xchg
test
shll
or
repz
add
xchg
sub
lcall
add
lret
out
ljmp
loope
cmpb
xchg
popf
imul
sarl
sub
in
or
mov
sub
test
and
stos
sub
xor
jl
shll
jge
inc
lock
push
mov
xor
in
sti
sub
fsubrs
lods
mov
adc
dec
sub
out
xchg
mov
mov
push
out
mov
adc
das
adc
mov
jle
jnp
xor
daa
xor
daa
sbb
xchg
and
dec
fcmovb
sbb
jge
loopne
dec
stos
push
rolb
insl
jge
pop
push
stos
ds
in
movsb
pop
push
push
adc
je
mov
adc
loop
loopne
pop
jae
sti
mov
scas
sbb
ljmp
subl
cmp
lods
mov
adc
add
daa
adc
aaa
lods
out
call
das
sub
pop
add
mov
or
or
cltd
xor
repnz
arpl
mov
out
jecxz
ret
and
arpl
je
jmp
xchg
adc
pop
sub
mov
out
std
das
dec
push
sbb
and
in
jnp
testl
mov
pop
sub
cld
subl
add
push
outsl
mov
fisubl
sbb
mov
sbb
and
arpl
jmp
fwait
push
push
int
and
insb
push
pop
cmp
mov
arpl
imul
scas
push
and
ss
and
add
cs
and
mov
stos
dec
mov
sbb
jb
jp
stos
imul
cmp
lds
leave
inc
add
push
adc
ja
and
stos
out
jle
mov
xchg
mov
lods
imul
jno
insl
jg
aad
sahf
outsb
fistpl
loop
les
pop
xchg
adc
shr
mov
in
stos
sub
mov
mov
scas
lods
sbb
mov
sbbb
repnz
jnp
lcall
push
std
mov
dec
imul
and
xchg
push
dec
push
sbb
add
in
jno
push
loop
sub
out
ret
insb
and
ljmp
in
arpl
je
into
sub
mov
outsb
call
or
and
imul
enter
in
sub
mov
or
shrl
mov
sub
inc
in
adc
jns
data16
movl
xor
imul
xor
arpl
lods
fisubrl
std
mov
insl
mov
scas
leave
or
mov
add
js
ja
lret
es
leave
mov
pusha
rcr
add
addl
xchg
dec
in
mov
sub
ror
dec
movsb
enter
pop
mov
cmpsl
mov
or
imul
mov
jns
repz
out
sub
scas
add
shlb
movsl
test
mov
xchg
adc
xor
imulb
pop
fldt
dec
leave
pop
push
repnz
cmp
sub
scas
adc
cli
movsb
out
int
jl
or
mov
test
int
jnp
iret
xor
arpl
add
std
test
insl
dec
jnp
shll
mov
push
xor
inc
cmp
mov
sub
mov
fxch
arpl
jge
sbb
fs
jnp,pt
mov
sbb
in
push
add
adc
push
inc
roll
lods
sub
push
jmp
pop
mov
adc
push
aam
out
stos
inc
je
sbb
les
add
push
std
and
adc
and
push
std
cli
sahf
mov
mov
sbb
mov
adc
or
sub
mov
arpl
cli
cmp
xor
xchg
xor
ret
shr
or
test
sarb
sub
pop
xlat
das
lcall
flds
sub
aas
mov
decl
jp
dec
arpl
fdiv
cmp
iret
in
outsb
out
pop
lahf
out
jg
lcall
aas
cmp
cmp
jbe
cmpsl
arpl
jl
push
lods
mov
int3
dec
out
sub
cld
adc
inc
jg
out
jl
arpl
dec
fldt
into
addb
shrl
dec
in
xchg
xor
out
inc
sbb
adc
xchg
lock
into
pop
cld
xsave
gs
inc
pop
ljmp
ljmp
aam
push
pop
ret
push
mov
rorl
mov
xchg
sub
inc
loop
push
call
sbb
sub
mov
and
insb
loop
push
xchg
xor
sub
jl
pop
xchg
leave
dec
xchg
lods
orl
adc
adc
and
sahf
sbb
sub
jbe
sub
mov
repz
aam
jns
loop
mov
push
out
sub
int3
push
dec
mov
mov
cli
loope
mov
mov
jle
loope
mov
test
push
mov
mov
adc
xor
cld
stos
loop
inc
sub
or
les
scas
xchg
adc
mov
popa
push
pushf
rcl
sbb
insl
lds
nop
test
xchg
dec
mov
xor
test
popa
sub
jmp
mov
sub
mov
std
push
sbb
sti
pusha
call
iret
int3
xchg
insl
mov
stos
pop
xchg
mov
aad
sub
jp
in
in
cs
int3
out
mov
stc
push
sbb
xchg
inc
sahf
aam
lods
dec
lret
in
mov
cmp
push
ljmp
push
jmp
xchg
dec
adc
push
mov
xor
adc
int3
int
scas
scas
add
adc
mov
push
rcll
or
jge
mov
ret
xlat
mov
jmp
adc
shrb
pushf
in
jo
ret
sub
lret
pop
mov
sub
mov
insb
and
sub
mov
sub
dec
dec
sub
bound
icebp
adc
jbe
addl
jl
fistpll
mov
mov
or
int
stc
sbb
sbb
sub
scas
in
out
into
scas
jl
cmc
out
mov
bound
lods
dec
jge
xor
test
or
out
ret
cmp
decl
scas
dec
mov
pusha
stos
mov
lret
add
aas
mov
adc
das
test
sub
loope,pt
test
add
imul
mov
and
xchg
or
adc
push
add
mov
arpl
mov
ljmp
stos
mov
mov
push
xor
push
in
or
push
in
xor
enter
mov
sub
fcomps
addb
cwtl
into
xchg
jo
mov
push
jecxz
ficomps
adc
mov
out
jmp
and
push
pop
inc
test
and
mov
pushf
dec
push
adc
dec
dec
or
push
jecxz
popf
stos
nop
pop
imul
lods
jecxz
push
sbb
jl
mov
iret
leave
cmp
push
loop
dec
adcb
js
add
into
xor
ret
dec
inc
in
adc
shrl
scas
stos
sti
fisubrl
out
insl
sbb
or
imul
sub
lcall
sub
imul
push
test
js
outsb
fcoms
mov
je
lock
lret
idiv
out
dec
xchg
fsubs
or
imul
fmul
and
jo
jmp
sahf
adc
sti
sbb
sub
push
mov
gs
push
pop
mov
and
push
xlat
std
mov
call
and
pop
paddsb
inc
mov
cmp
xchg
fisubrs
ret
and
lret
sbb
dec
out
xor
lock
lea
mov
add
loop
and
out
and
and
outsl
test
int3
sbb
and
cmp
loopne
je
fbld
enter
ljmp
pop
aam
pop
inc
fs
out
adc
fpatan
sbb
cmp
outsb
dec
jo
dec
loop
jno
sub
lea
fistpll
xor
vmwrite
sub
cmpsb
xchg
sbb
cs
sub
es
jmp
and
and
inc
outsb
out
enter
ret
sbb
outsb
imul
arpl
pop
xor
loop
mov
movsb
lahf
mov
aam
out
xchg
xor
inc
push
scas
int
add
jecxz
out
cltd
shlb
lods
cs
xchg
mov
out
dec
mov
int3
or
sub
dec
stos
in
popf
sbb
dec
inc
shlb
mov
inc
ret
dec
push
adc
ficompl
out
gs
enter
push
sub
lods
dec
rorb
dec
cmp
mov
fsubl
pop
dec
lcall
push
pop
icebp
pop
cmp
mov
dec
jecxz
push
jp
lods
nop
cmp
jnp
inc
xchg
and
or
inc
nop
mov
into
push
mov
loopne
mov
adc
dec
cmp
xchg
insl
adc
mov
sbbl
sbb
adc
mov
sarb
jecxz
out
push
adc
add
test
sub
mov
sbb
int3
adc
pushf
and
fiaddl
movsb
mov
adc
xor
mov
add
mov
adc
outsl
add
sbb
movsb
mov
adc
xor
shl
sub
js
xor
movsl
ja
or
inc
push
lea
call
mov
push
inc
and
add
incl
insl
push
in
ret
push
sahf
ret
mov
icebp
inc
loopne
rorl
lds
dec
movsl
cmpsb
dec
in
inc
or
rol
aad
jns
test
ret
outsb
mov
fisubrl
insb
pop
cli
xchg
push
push
sub
sbb
cmp
pop
inc
xor
sub
sub
ret
ljmp
sub
adc
jbe
or
aad
sub
imul
push
out
outsb
adc
dec
mov
cmp
mov
orb
sar
adc
mov
loop
divb
int3
or
sub
dec
data16
push
cli
mov
adcb
comiss
das
pushf
out
mov
mov
xchg
lods
pop
mov
imul
lock
sub
es
cmp
imul
in
add
xchg
pop
adc
push
loope
sub
mov
mov
stos
lret
push
or
push
sbbb
scas
into
imul
cld
xor
sub
xor
xchg
dec
mov
dec
test
sbb
sbb
outsb
dec
pop
dec
cmc
stc
and
push
mov
and
neg
push
sbb
mov
sub
mov
lods
shrb
loop
xchg
add
adc
lret
cmp
mov
in
push
js
mov
outsl
arpl
popa
mov
adcb
imul
mov
xor
jecxz,pt
mov
jg
andl
mov
cltd
scas
sbb
push
scas
adc
movsb
jg
imul
sub
mov
push
iret
adc
add
lea
or
das
pop
mov
jmp
pusha
push
into
loopne
xor
ficoms
sub
ficomps
and
das
sub
push
mov
cs
decb
stos
mov
data16
or
movsl
out
or
arpl
ret
inc
in
out
les
sbb
aas
les
or
adc
and
shl
cmpsl
aaa
arpl
sbb
fsubrl
jbe
jb
in
idivl
imul
arpl
cmp
sub
jecxz
fs
push
or
cmp
adc
inc
out
xchg
mov
sub
jge
fisubs
outsl
aas
jg
xchg
jns
adc
sbb
scas
jg
sub
test
std
mov
scas
mov
in
les
and
inc
fwait
or
lods
ret
sbb
test
lret
pop
push
imul
shrb
aam
xchg
popf
movsl
subb
loop
iret
mov
mov
ret
add
daa
mov
out
mov
add
bound
int3
rcrb
push
insb
leave
or
dec
ret
adc
pop
xchg
daa
incb
push
adc
out
outsb
xlat
inc
push
sahf
rclb
push
in
dec
push
cmp
pop
mov
mov
xchg
push
push
cwtl
push
add
es
mov
in
insl
adc
cmp
shll
dec
jp,pt
loopne
cld
outsb
push
outsl
pusha
pop
mov
push
push
hlt
xchg
arpl
dec
in
into
mov
xchg
mov
mov
mov
nop
pop
and
sbb
loopne
add
fisubrs
hlt
lods
test
insl
mov
add
sbb
lods
rorl
jge
leave
out
dec
aaa
addr16
fimull
sub
cmc
mov
into
or
dec
lcall
mov
repnz
xlat
pop
ret
inc
test
stc
push
stos
or
int
pop
stos
cltd
push
scas
insb
insl
mov
adc
iret
cs
popa
orb
adc
adc
fdivl
test
cmpsb
lods
sub
push
xlat
out
push
out
cmpsb
xchg
and
pop
or
xchg
sahf
xor
movb
pushf
dec
xchg
inc
arpl
packsswb
aas
in
push
aam
push
leave
fcmovu
sbb
mov
leave
subl
or
xor
push
mov
cmp
es
cli
mov
data16
push
sub
xor
dec
pop
add
dec
jg
push
out
jmp
jo
outsl
add
sub
push
pop
imul
ret
add
aam
call
mov
stos
scas
icebp
xor
jb
sub
xor
sbb
out
sahf
into
sub
or
xchg
popa
adc
inc
flds
gs
mov
aas
or
xchg
jge
out
push
adc
and
jmp
test
negl
mov
sub
inc
ret
arpl
sub
shl
sub
loop
and
scas
and
imul
or
mov
das
out
or
lahf
sub
fsub
xchg
cmpsb
test
ret
ss
popf
adc
ljmp
sbb
call
xor
sub
add
adc
jae
in
dec
popa
scas
stos
in
or
sbb
out
iret
mov
scas
insb
cli
or
pushf
mov
adc
cmp
int
inc
and
push
insl
pop
mov
lret
fbld
and
ret
lods
cmp
imul
outsb
jo
xchg
push
push
adc
and
insb
sbb
insb
dec
xchg
cmp
scas
pop
sub
cli
mov
mov
sub
dec
push
adc
mov
jle
stc
sub
push
lret
repnz
sbb
aam
std
or
and
jecxz
lds
sbbl
pop
out
sub
shr
or
or
adc
cwtl
push
cld
push
sbb
fs
stos
arpl
dec
pop
das
into
cmpsb
mov
arpl
dec
ret
push
fisubs
or
test
arpl
pop
in
add
sbb
dec
jmp
and
je
fsts
adc
jno
sub
movsb
and
sbb
mov
or
lods
loop
pushf
xor
rorb
cmp
push
out
inc
push
stc
fistpl
insb
clc
jp
xor
push
cmp
hlt
mov
loop
lret
das
ljmp
into
dec
adc
push
mov
adc
hlt
data16
or
add
add
sbb
roll
push
mov
sbb
out
mov
push
lods
ret
or
push
dec
xor
mov
repz
dec
scas
lods
stos
pop
aam
mov
sub
sbb
out
sbb
lcall
jns
or
mov
xchg
lds
out
xchg
inc
inc
and
mov
pop
loop
stos
arpl
adc
dec
mov
mov
jmp
dec
in
xchg
imul
notl
mov
or
orb
mov
stos
xchg
jp
out
fs
iret
or
fdivrl
repz
punpcklbw
mov
out
out
arpl
pushf
push
pop
and
imul
or
ljmp
cmc
mov
loopne
or
stos
push
push
not
fdivl
dec
and
fstl
out
push
scas
outsl
ret
push
nop
or
dec
sti
test
sub
fucomp
jecxz
fcompl
push
inc
test
imul
or
adc
mov
and
jmp
dec
sbb
das
dec
in
add
sbb
and
arpl
mov
pushf
in
lods
sbb
push
iret
in
sbb
jb
scas
adc
ljmp
sub
push
shrl
inc
mov
ja
push
outsl
add
jne
scas
xchg
stc
jle
out
insl
shr
std
ror
sbb
adc
inc
sti
push
mov
out
jne
sbb
or
fcoms
add
aaa
stos
mov
imul
out
out
repnz
imul
sub
sarb
dec
mov
push
add
faddp
imulb
loop
cltd
pop
out
ds
add
inc
pop
js
out
addr16
sub
sub
inc
push
mov
cmc
xchg
test
dec
shrb
repz
dec
aam
mov
leave
das
pop
push
ret
push
lahf
ret
loop
in
mov
scas
mov
or
out
ret
mov
test
jge
fwait
adc
jle
and
sbb
sbb
loop
inc
push
fisubrs
mov
sbb
in
out
scas
xor
or
cld
mov
aam
xchg
ucomiss
or
mov
xchg
or
add
call
in
cwtl
mov
push
mov
xchg
sub
imul
mov
cwtl
jp
add
xchg
adc
hlt
mov
fistl
dec
out
inc
push
imul
lods
pop
and
xchg
fcoms
and
jo
push
sbb
sub
mov
push
pop
pop
mov
sahf
out
push
adc
mov
psrad
sbb
pop
xchg
jecxz
pushf
mov
pop
mov
outsl
imul
xchg
clc
sub
out
xchg
fdivrs
push
sub
sbb
imul
fwait
dec
stos
push
test
or
and
iret
add
jmp
aaa
dec
cmp
adc
or
decl
sbb
jns
or
mov
mov
popf
or
rol
jmp
cmc
cld
gs
mov
pop
and
das
sbb
and
enter
test
test
dec
mov
mov
insb
and
mov
mov
sub
int3
mov
or
mov
dec
lret
dec
push
das
loop
imul
xor
and
mov
cmc
arpl
imul
jg
das
test
out
repz
and
sbb
arpl
out
mov
pushf
jbe
out
outsb
add
ret
mov
sub
ret
cmp
arpl
cli
rorb
jmp
or
pop
dec
adc
ficoms
xor
mov
lea
cmc
or
xlat
cli
ja
or
fimull
sti
adc
pop
pop
cmp
pop
je
cltd
dec
dec
lods
mov
or
dec
ljmp
or
sbb
test
adc
inc
sbb
push
cmc
test
movsl
mov
jns
xchg
mov
scas
aam
pop
mov
insl
push
out
xchg
fs
jge
popa
add
adc
pop
mov
pop
sub
or
jbe
mov
push
ret
stc
movsl
int3
out
aad
mov
into
loop
cmp
std
sahf
lahf
into
imul
push
arpl
stos
ret
sub
add
out
lods
mov
in
push
out
and
fnsave
test
in
xor
stos
xor
xor
fistpl
sub
scas
in
pop
mov
or
movsb
ret
mov
mov
enter
in
mulb
sub
mov
ljmp
jge
push
fstpl
cmp
inc
add
stos
shr
mov
stos
shll
aas
mov
add
or
popa
scas
call
orl
xchg
sub
lods
adc
mov
std
push
mov
sub
sub
dec
out
into
adc
add
lahf
mov
cmp
adc
scas
add
xor
into
adc
ljmp
loop
xlat
push
mov
or
mov
sub
lahf
mov
sub
cmp
mov
iret
adc
cmp
jle
mov
dec
add
cmp
adc
stc
dec
adc
fwait
sub
out
mov
imul
adc
push
or
jp
iret
scas
fsub
stos
adc
sub
aam
xchg
sbbb
dec
pop
mov
scas
subl
xchg
out
jl
sti
pop
cmpl
xor
add
xor
fmulp
jecxz
xchg
dec
dec
or
fstl
cmpb
out
cmp
mov
mov
cmp
xor
or
xchg
mov
stos
sub
xchg
data16
or
adc
add
ret
dec
sub
mov
or
mov
int3
sub
mov
imul
scas
mov
adc
dec
aam
pop
or
in
dec
adc
out
mov
push
out
mov
loop,pn
or
push
mov
add
ja
xchg
pop
fidivrl
cmp
mov
ss
shll
inc
fiadds
mov
sti
es
cmp
repnz
push
out
sub
or
into
enter
adc
inc
add
daa
mov
lret
add
or
mov
das
dec
fimull
push
jns
mov
out
mov
pushf
sub
pop
cmp
and
xchg
mov
sbb
jge
lods
dec
jp
inc
lods
jnp
jl
scas
arpl
mov
mov
dec
xor
adc
sbb
jne
loop
mov
test
mov
mov
repz
insb
adc
test
xchg
in
push
inc
add
or
and
jbe
outsl
dec
mov
popf
mov
jl
clc
jb
cs
aas
into
les
or
mov
adc
fiadds
mov
xchg
outsb
mov
mov
pop
push
scas
or
fucomip
fs
lods
stos
stos
mov
cmp
or
test
mov
test
adc
std
je
dec
pop
mov
in
dec
push
adc
lock
or
inc
popf
imul
and
ds
fmull
mov
dec
mov
pop
test
jnp
stos
push
and
sub
pusha
push
mov
pop
push
nop
call
fisubl
or
aas
and
and
outsb
imul
adc
and
bound
xchg
mov
or
or
dec
cs
dec
cld
push
mov
ret
imul
mov
dec
popa
sbb
stos
mov
movl
rorl
xchg
push
sub
data16
outsb
adc
cmp
jge
or
mov
ljmp
rolb
add
jle
sub
loop
mov
xchg
xchg
loope
dec
jl
faddl
jge
pop
add
scas
aas
push
fsts
ds
mov
in
cmp
addl
ljmp
or
push
adc
lahf
push
or
or
rcll
insl
adc
cmp
push
ret
and
and
sbb
dec
xchg
adc
mov
nop
aas
adc
cmc
in
mov
ret
lods
leave
or
setb
cmp
add
adc
stc
and
adc
mov
sbb
or
or
andl
push
pop
mov
ret
out
lcall
dec
or
dec
or
dec
mov
and
lahf
cltd
out
xchg
cmpsb
test
xor
scas
cmp
xchg
mov
adc
xlat
inc
lahf
sbbb
xchg
flds
outsb
adc
adc
out
ljmp
jl
bound
mov
scas
aas
push
or
cmp
mov
pop
test
cmp
scas
cli
outsb
lahf
sahf
out
pop
shlb
mov
mov
xchg
dec
ret
sarl
xchg
in
sub
inc
push
xor
shlb
scas
jl
dec
loop
mov
push
and
jbe
fisubrl
xor
mov
out
nop
and
rsm
mov
sub
idiv
enter
cs
add
push
adc
add
lods
fs
adc
addl
sbb
pop
push
or
sub
int
arpl
adc
dec
imul
sub
jo
mov
add
shlb
lahf
pop
insb
sub
adc
das
in
mov
pop
out
xor
jge
sbb
jge
insl
loopne
out
and
lcall
and
stc
repz
and
in
or
sbb
fld
movsb
push
jecxz
mov
mov
outsb
inc
or
xor
cli
xor
ss
outsb
adc
mov
sub
test
xchg
movsb
jnp
mov
popa
or
mov
mov
sub
decb
stos
mov
mov
jmp
test
mov
push
repnz
leave
sub
loopne
iret
xor
sub
fisttpll
push
adc
inc
inc
mov
jl
jmp
sbb
scas
sub
push
pop
js
xor
ljmp
addb
dec
xchg
or
icebp
jb
add
jno
jp
das
lds
pushf
daa
movsb
inc
popa
test
insl
xchg
test
aas
or
and
lock
mov
repz
nop
or
xchg
pusha
xor
mov
loop
sbb
mov
cmp
mov
dec
ret
and
sub
adc
mov
ds
das
push
rorl
push
imulb
mov
cld
sahf
push
pop
insl
clc
in
arpl
lret
jecxz
sub
hlt
cwtl
ds
push
and
and
adc
movsl
in
aam
loopne
ret
inc
push
outsb
dec
test
xor
mov
mov
xor
outsb
sub
pop
cmp
cmc
jbe
push
pop
popf
add
loop
repz
insl
push
push
jl
imul
jmp
or
es
enter
jg
stos
mov
sti
or
jmp
cmp
outsb
dec
into
daa
sbb
mov
das
xor
xchg
hlt
or
inc
or
enter
popf
push
jmp
mov
or
mov
mov
cmp
add
in
ret
stos
test
inc
pop
lret
scas
fcoml
ret
sub
subb
lret
stos
arpl
pop
cltd
das
push
push
xor
and
sub
mov
push
out
pushf
sarl
sub
jp
fnstcw
into
sub
sbbl
adc
push
scas
dec
adc
ja
pusha
mov
and
pop
lods
sub
int3
dec
addb
test
push
pop
dec
in
testb
out
jecxz
push
lods
dec
jmp
sub
sbb
dec
sub
cld
push
dec
in
xchg
mov
gs
notb
sbb
repz
rorl
cmp
fwait
test
mov
mov
gs
ret
or
adc
push
mov
sub
fs
out
jge
jle
sbb
stos
dec
sub
mov
push
pop
lcall
gs
lcall
cmpsb
and
or
and
and
nop
xorb
sbb
mov
mov
pop
enter
mov
popa
andl
jg
mov
stos
dec
or
ja
mov
outsl
aam
aas
adc
inc
adc
sbb
cmp
scas
fdivrl
dec
and
loop
mov
sbbl
mov
or
mov
ja
les
sbb
or
mov
adc
xor
and
adc
adc
mov
mov
out
adc
into
adc
or
jmp
aam
sbb
adc
and
mov
push
lds
ljmp
aam
js
ds
addr16
in
loop
cmpsb
pop
mov
scas
mov
or
jne
push
fsubrs
mov
push
or
mov
add
out
pop
sahf
arpl
cld
out
mov
imul
test
aas
and
lock
les
das
fsubrl
imul
imul
pop
cmpsl
adc
hlt
lret
and
imul
in
pop
dec
sbb
mov
cli
into
add
leave
jns
cmp
insl
ret
xlat
cmp
dec
mov
jecxz
lods
add
mov
dec
lahf
cmp
arpl
sub
mov
xorl
orb
sub
outsb
mov
cmp
jge
push
dec
sahf
clc
test
pop
loop
int
imul
stos
lods
or
popa
das
sub
ret
scas
sbb
or
sub
sbb
adc
rorl
in
or
test
adc
ret
jnp
arpl
and
lods
xchg
jl
scas
shl
leave
adc
cmpsb
mov
jl
out
xchg
pop
repz
cmp
xchg
pushw
mov
les
mov
xchg
jmp
push
imul
pop
jno
lods
push
mov
mov
mov
iret
subb
xor
sahf
push
and
aam
arpl
inc
or
add
mov
sti
pop
mov
push
scas
adc
out
and
xor
adc
ret
xor
sub
iret
lods
je
or
adc
jnp
cmpsl
lret
push
jne
int
inc
test
and
outsb
in
jle
xor
addl
iret
sbb
les
pop
or
or
add
mov
arpl
ret
dec
mov
out
xor
adc
cmp
aas
iret
dec
adc
stc
stos
adc
int3
xlat
adc
mov
jns
mov
lods
es
or
xchg
dec
mov
in
dec
stos
sub
adc
sbb
pop
lods
or
pop
dec
push
out
out
js
aam
roll
push
movsb
pop
mov
push
lea
adc
out
imul
push
push
sub
dec
outsb
andb
adc
sub
mov
out
jecxz
incl
ljmp
adc
fmuls
imul
dec
ret
cmp
in
dec
pop
cld
lret
dec
jb
mov
push
dec
stos
das
and
jge
push
adc
sub
enter
inc
stos
jge
outsb
jno
mov
and
das
mov
ja
insl
rcrb
scas
inc
jmp
ds
sti
out
lret
test
outsb
sbb
inc
lods
dec
mov
jge
out
push
addr16
sub
in
pop
clc
out
cmp
in
das
lods
inc
or
mov
aas
arpl
sbb
in
xchg
bound
xchg
mov
fsts
push
adc
dec
mov
pop
mov
sub
pop
or
pushf
lret
pop
bound
out
lret
in
fists
lods
mov
outsb
das
stos
xchg
mov
jne
test
hlt
jecxz
imul
sbb
mov
ret
cwtl
mov
sub
sub
gs
pop
cmc
fisubrl
pop
nop
add
lea
adc
sbb
mov
push
sub
push
rcll
arpl
sub
dec
enter
and
xor
outsl
je
test
xor
shll
mov
test
pop
sbb
sub
mov
stos
pop
aam
xor
sub
out
mov
in
imul
jmp
mov
leave
or
jb
push
fmul
inc
pushf
mov
sti
push
out
sbb
mov
sbb
push
mov
xor
inc
push
push
push
sbb
cltd
inc
and
fnstenv
and
adc
cli
ljmp
or
xor
out
loope
aaa
data16
or
push
imul
xor
cs
xchg
sub
arpl
push
and
mov
out
or
jecxz
xrstor
dec
or
mov
jmp
sahf
pop
mov
fstps
insl
sbb
push
mov
adc
leave
outsb
dec
das
dec
sub
xor
ficoms
xor
dec
fwait
xchg
sbb
lds
ret
imul
bound
roll
mov
push
imul
iret
xor
ret
lea
pop
test
arpl
and
sub
or
adc
jg
lahf
lcall
in
pop
dec
cltd
icebp
and
push
sbb
mov
scas
mov
outsl
movsl
out
fists
mov
pop
in
add
xor
or
fsubrp
ljmp
dec
int3
jl
pop
push
add
push
pop
sub
daa
xor
xor
fstpl
sub
ror
adc
inc
pop
mov
loop
mov
adc
mov
test
shll
sbb
dec
pusha
sbb
enter
lcall
stc
xor
sub
add
test
xchg
add
or
js
test
mov
mov
dec
adc
repnz
addr16
or
xchg
in
dec
aam
and
imul
stos
sbb
push
mov
rol
ret
xchg
loope
scas
shrb
inc
addr16
mov
sub
and
adc
stc
mov
cmp
sbb
test
decl
aad
es
lock
inc
stos
lcall
fsubs
pop
mov
push
jle
insl
fs
sub
test
leave
and
scas
ret
rcll
add
inc
stos
arpl
in
sub
in
push
mov
iret
sub
adc
test
loope
sbb
push
sub
jecxz
sbb
mov
mov
mov
sub
xor
cmpsb
push
dec
call
dec
pop
xor
dec
xchg
push
stos
clc
and
cld
xor
mov
addr16
ljmp
push
sub
sbb
movaps
test
mov
and
xor
mov
fwait
xor
pop
mov
inc
sub
lock
sbb
or
or
enter
sub
subb
repnz
movsl
mov
ret
loop
stos
adc
mov
mov
cmc
jnp
sbb
outsl
sub
repz
push
cwtl
adc
stos
imul
jle
jnp
mov
and
or
xor
pop
sbb
js
sar
das
ljmp
mov
dec
int3
push
test
push
arpl
adc
cmp
leave
add
or
jg
repz
out
jno
nop
xchg
sbb
outsb
loop
adc
fwait
pop
adc
cmp
stos
mov
fsubl
sti
jb
arpl
aaa
jnp
adc
cmp
insb
loop
sbb
cmp
mov
pushf
or
mov
nop
xchg
ficomps
pop
jne
mov
stos
repnz
pusha
add
out
sub
test
loopne
dec
xchg
pop
ret
fwait
ret
push
push
push
popf
mov
je
js
scas
jecxz
adc
aaa
scas
out
sub
mov
mov
fnsave
js
pushf
adc
arpl
ret
ret
bound
mov
add
inc
out
lea
adc
lcall
popf
clc
jno
out
or
sub
jge
out
into
pop
mov
fldenv
and
or
fsin
outsl
mov
xchg
or
push
pop
ret
adc
mov
lods
iret
or
sar
data16
das
or
or
adc
das
dec
ret
push
adc
dec
scas
adc
xor
push
dec
sahf
adcb
cwtl
dec
add
lods
add
adc
inc
add
pop
addr16
pop
outsb
lds
lret
mov
pop
mov
sbb
or
push
push
adc
cltd
dec
add
add
xlat
adc
nop
test
gs
jg
mov
outsb
test
adc
test
fsub
cli
add
stc
popa
adc
xor
or
sub
arpl
adc
ret
xchg
add
sbb
ds
inc
inc
pop
stos
add
adc
jmp
adc
dec
cmp
stos
in
mov
and
daa
out
mov
ljmp
dec
stos
adc
fisubl
loopne
xlat
sub
pop
outsb
fcompl
add
cld
dec
ljmp
out
into
mov
int3
outsl
mov
jl
in
ds
jge
adc
fildll
mov
mov
das
cs
out
dec
xor
xor
dec
stos
insl
push
xor
dec
inc
pop
xchg
sub
insb
orb
out
cmpsl
sbb
dec
adc
mov
sub
xchg
jbe
push
test
lea
jns
jbe
test
xchg
lret
xchg
xor
add
dec
addr16
stos
sub
pop
push
lods
sbb
mov
mov
in
out
lods
or
call
and
aad
mov
ds
stos
or
ret
sahf
xchg
adc
out
scas
jl
std
out
scas
jp
fucomi
inc
in
outsb
addb
cmp
cmp
jmp
bound
dec
mov
and
adc
inc
nop
cmc
cmp
fisubrs
or
add
and
adc
inc
and
adc
in
mov
out
pop
push
or
stc
sub
dec
mov
test
sub
hlt
in
outsb
pop
add
pop
pop
lea
and
scas
mov
adc
repz
mov
in
dec
fdivrl
lods
fildll
jl
inc
sub
andl
fmull
sub
test
incb
stos
pop
push
add
or
sub
mov
jns
and
dec
sub
scas
dec
repz
clc
in
inc
jecxz
test
dec
push
rcll
imul
push
dec
sub
jge
push
sub
arpl
xchg
sub
int
cmp
loopne
out
call
xchg
outsl
test
aas
out
cmp
jg
push
divb
sbb
fs
stc
mov
in
stos
sub
adc
xchg
into
lret
pop
adc
js
das
pop
enter
lcall
scas
fwait
adc
add
out
test
arpl
cltd
repz
push
int3
test
dec
sub
push
movsl
push
push
jns
xchg
cmp
in
stos
or
shr
es
imul
dec
outsb
fwait
hlt
cmp
shlb
sbb
adc
sub
lcall
and
lea
in
lods
es
outsb
push
mov
out
cli
adc
xchg
inc
test
imul
loop
std
push
sub
mov
fs
rcr
or
or
sti
pop
sub
jbe
int3
jnp
cmp
or
push
cmp
xor
dec
mov
pop
and
sub
add
xor
int
jl
icebp
sub
loop
mov
das
dec
inc
push
out
add
arpl
mov
ja
and
sub
call
jo
jns
insl
aaa
lcall
adc
scas
sahf
lcall
jle
insl
es
lods
add
mov
mov
adc
enter
stos
mov
adc
pop
mov
push
adc
dec
fwait
adc
cld
clc
sub
mov
ret
stos
xchg
mov
inc
jg
mov
add
dec
cli
icebp
inc
mov
mov
out
scas
xor
push
mov
insl
mov
push
jae
adc
insl
push
sub
push
push
xor
call
cwtl
jns
scas
jne
or
ljmp
stos
data16
mov
dec
sub
xchg
mov
stos
adc
dec
in
arpl
outsb
out
scas
out
ds
dec
in
test
lea
mov
repz
leave
pop
xchg
jno
sub
pop
mov
add
or
pop
inc
cmc
lods
mov
aam
insl
pop
mov
or
fisubrs
aam
fisubrs
mov
lahf
dec
adc
lret
pop
add
ret
les
mov
ret
mov
out
adc
int3
push
mov
in
xor
dec
sub
pushf
icebp
cli
sbb
jg
mov
pop
adc
pop
inc
or
or
movsb
pop
sub
adc
xor
mov
pop
insb
rolb
imul
xlat
and
cmp
pop
sbb
popa
imul
jle
mov
xor
pushf
mov
mov
cmp
sub
mov
sub
dec
ret
mov
in
sub
dec
ja
inc
add
mov
loop
ds
loop
ficoms
outsb
push
adc
subl
jne
add
pop
aad
or
inc
dec
sub
or
push
nop
fdivl
outsb
cli
add
cld
jecxz
or
out
in
inc
fsubr
insb
fs
out
ret
sbb
push
push
fcmovnbe
leave
into
das
mov
inc
add
push
adc
fwait
jp
stos
xchg
sbb
stos
sub
popf
adc
mov
inc
dec
loop
pop
mov
inc
int3
add
mov
ja
ret
loop
es
incb
icebp
ja
jp
add
add
movsb
pusha
loop
fsubrp
mov
jmp
push
lcall
adc
in
xor
adc
add
pop
in
jecxz
and
enter
stos
inc
scas
pop
push
lcall
mov
xlat
mov
jge
jl
out
push
inc
loop
and
ror
sbb
and
fisttps
es
fcmovne
sub
sub
pop
push
push
mov
repnz
dec
out
jmp
sar
push
cld
push
pop
jno
jmp
and
ds
sub
inc
jle
sbb
push
int
and
mul
sbb
cmp
mov
xchg
test
je
call
sub
cwtl
ret
pushf
adc
test
movsl
aam
into
cwtl
cli
mov
dec
gs
xchg
mov
xchg
sub
out
jne
sub
mov
cmovg
fildll
or
jge
xor
out
ljmp
filds
in
and
mov
add
cld
xor
push
in
xchg
jecxz
push
ret
xor
ret
adc
arpl
ss
arpl
xchg
adc
xor
adc
into
xchg
stc
adc
jmp
and
shl
repz
mov
or
sbb
pop
mov
iret
jg
cmp
sub
ret
jge
arpl
in
push
das
jl
das
scas
xchg
cltd
sbb
and
xchg
in
sub
or
repz
cltd
cmp
jl
xor
cmovnp
xor
ss
lcall
or
cmp
outsb
dec
pop
push
ret
xchg
sbb
in
pop
dec
push
dec
xchg
inc
push
mov
fsubl
cmpsl
ficoms
adc
popf
jo
jge
mov
lahf
xchg
and
adc
popa
ljmp
rorb
add
dec
mov
fistl
pop
and
and
xchg
sti
adc
mov
cld
shr
andb
push
mov
imul
sub
mov
dec
xchg
pop
iret
ffreep
sub
scas
pop
jle
ja
push
stos
mov
data16
fmul
call
dec
lods
mov
in
pop
or
mov
lds
cmp
mov
or
das
call
pushf
daa
test
or
push
sub
pop
bnd
xor
jg
inc
pop
inc
sub
fbld
test
sub
stos
mov
and
aam
mov
cmp
sahf
xchg
add
dec
or
das
mov
out
dec
loop
arpl
out
int
out
mov
pop
jecxz
jecxz
je
mov
aam
sub
xor
add
aas
lods
jecxz
adc
dec
pop
xchg
in
leave
push
push
lods
add
out
mov
inc
add
add
pop
adc
cmc
xor
out
aam
stos
cli
mov
mov
movsl
test
iret
call
loop
sub
repz
loop
scas
sbb
imul
stc
rorl
sbb
lods
mov
lds
in
divb
pop
push
fsubrl
dec
cs
push
insl
out
pop
stos
arpl
cmpsl
out
pop
mov
das
dec
dec
xchg
scas
sbb
xor
adc
ficompl
leave
gs
in
sub
xchg
jo
sub
jl
divl
add
imul
jg
mov
adc
sub
cmp
adc
or
insl
lcall
or
addb
push
pop
fs
int
pop
cmpsb
push
mov
push
or
cmp
scas
out
nop
dec
cld
dec
leave
js
and
or
xor
jecxz
popa
pop
stc
push
das
ficomps
stos
in
scas
adc
cwtl
ret
and
xlat
decb
pop
sub
adc
mov
nop
enter
push
sub
aad
imul
mov
stos
pop
fiadds
mov
xor
xor
iret
inc
imul
stc
add
push
xor
push
subb
push
mov
adc
adc
jge
mov
fcoms
arpl
mov
insb
adc
xchg
cmp
outsb
pop
xor
insb
stos
fs
insl
insb
inc
in
mov
jae
pop
loop
or
lahf
cmpsb
mov
repz
leave
adc
mov
sub
adc
clc
cltd
dec
mov
insl
ja
dec
dec
or
xor
push
es
pop
dec
jle
out
and
pop
sbb
adc
cmc
pushf
push
jecxz
subb
add
lods
les
sub
xor
and
or
movsb
sbb
loop
clc
push
push
mov
sub
fwait
insl
out
outsb
outsl
pushw
insb
repnz
jmp
ljmp
outsb
aas
es
std
into
pop
add
lods
mov
or
mov
rorb
mov
fwait
sub
xorb
or
sub
xchg
dec
sbb
test
dec
in
push
and
mov
sbb
rclb
dec
leave
into
cs
mov
test
out
in
sbb
mov
scas
push
shlb
out
sti
mov
inc
das
sti
sub
pop
pop
arpl
insb
outsb
push
loop
sbb
dec
xor
inc
xlat
enter
push
scas
cld
cmp
dec
or
sbb
xchg
test
arpl
add
je
hlt
outsb
lea
jge
push
nop
outsl
jle
mov
test
or
dec
lcall
sbb
or
popf
scas
add
insb
pop
sub
push
inc
inc
and
sub
and
mov
outsb
ret
xchg
pushf
jp
push
xor
outsl
xor
add
andb
jg
add
mov
mov
pop
pop
dec
mov
jne
xor
lret
dec
sub
cmpsb
mov
adcl
cli
std
insb
mov
push
vpcomub
jg
insb
fmul
int
out
test
out
ret
lock
mov
pushf
imul
or
adc
out
add
sbb
dec
test
loope
xchg
or
test
imul
mov
outsb
mov
fstpl
lret
ss
pusha
rorb
lods
shlb
push
mov
lea
outsb
cmpsl
sbb
pop
mov
dec
and
pop
mov
lods
je
or
or
enter
loop
out
sbb
mov
jmp
jl
fsts
arpl
leave
cwtl
add
std
iret
mov
insb
mov
mov
or
out
sub
or
and
cld
mov
lcall
mov
shll
jecxz
adc
inc
shll
pop
out
sub
arpl
dec
arpl
inc
out
leave
mov
mov
and
scas
pop
sub
cld
data16
mov
sub
mov
lret
jl
orb
mov
and
test
xchg
sbb
adc
mov
scas
pop
in
adc
cmpsb
sub
inc
dec
icebp
cs
push
movsb
sbb
in
in
imul
imul
loopne
dec
lret
jmp
push
outsl
in
sbb
sub
mov
imul
or
lret
xchg
fldt
ret
or
out
or
pop
outsl
push
stos
notl
xchg
lods
nop
or
add
inc
mov
or
mov
mov
sbb
and
push
or
popf
loop
subl
xor
loop
jo
insl
xor
jnp
jb
cmp
add
out
out
test
mov
mov
add
mov
sub
jne
sarl
sub
mov
xor
cmp
xor
mov
imul
les
or
xchg
arpl
sub
jecxz
ret
or
jge
mov
sbb
add
cwtl
dec
push
cmp
repnz
dec
mov
mull
sahf
xor
mov
orb
dec
mov
inc
pop
arpl
je
adc
arpl
xchg
pop
dec
shr
push
cwtl
out
scas
in
out
adc
fsub
and
mov
jne
out
insb
sti
arpl
hlt
arpl
in
fisubs
lods
lcall
out
adc
jge
sti
hlt
aam
sub
les
jecxz
or
das
out
pop
push
or
dec
ret
mov
outsb
push
shrl
mov
out
mov
pop
push
dec
add
adc
pop
pop
imul
stc
aam
push
lret
sar
xor
out
ja
push
cmp
cld
jbe
jecxz
jmp
adc
shlb
mov
dec
mov
lret
push
lcall
rol
add
fadds
outsb
sub
mov
insl
in
lods
out
adc
mov
add
and
pushf
jg
xchg
sbb
push
adc
lods
sub
in
js
mov
sbb
loop
repnz
pushf
ret
sbb
les
jp
jecxz
out
das
imul
mov
out
sub
cs
out
mov
arpl
adc
mov
arpl
pop
int
insl
imul
jmp
sub
mov
or
lret
jg
test
adc
lds
mov
neg
std
xchg
sub
stos
insl
inc
xor
adc
out
das
mov
cmp
mov
sub
imul
fldl2t
xchg
outsl
fsubr
adc
mov
or
mov
jmp
das
cmpsl
adc
dec
outsb
or
movsb
ficompl
loopne
or
cs
in
mov
int
stos
push
mov
xor
test
xchg
sub
add
ret
xchg
xor
daa
pop
imul
add
js
out
push
push
jl
xchg
dec
inc
mov
jnp
int3
ret
lret
sub
push
sub
cmpsl
jmp
mov
xchg
lods
cmpsb
scas
popl
ljmp
jle
or
mov
adc
sub
scas
inc
mov
sbb
rol
adc
sub
pop
jns
scas
in
loop
imul
lds
ja
jge
xchg
test
push
dec
sbb
sbb
filds
mov
lods
rcll
dec
cwtl
adc
jae
das
ljmp
sbb
mov
xchg
fs
popa
dec
scas
aaa
push
lods
pop
push
scas
out
sub
cwtl
xor
fisubrs
push
inc
test
ret
push
mov
sub
or
shll
and
out
xor
in
push
shrb
ds
out
lods
movsl
mov
stos
sub
gs
dec
cmc
sar
outsl
or
pop
cmp
arpl
and
inc
scas
or
pop
enter
lahf
dec
push
fs
mov
jbe
adc
arpl
lahf
iret
dec
leave
add
arpl
add
into
cmp
popf
out
push
arpl
sbb
sbb
in
xor
loop
and
call
outsb
loop
jb
pop
inc
fiaddl
push
sub
lahf
ret
outsb
xchg
xor
jle
fs
dec
xor
fcmovnbe
sbb
sti
rorl
dec
mov
lods
in
jne
xchg
mov
pop
xchg
and
sbb
or
inc
push
jecxz
push
sbb
jns
sub
test
pop
or
xchg
insl
sub
fdivl
or
inc
stos
push
and
arpl
sub
int3
shld
xor
orl
movsl
add
stos
ror
jns
les
test
adc
lahf
jecxz
pop
adc
xchg
pop
mov
lcall
pop
xor
sub
mov
adc
add
mov
mov
sbb
pop
adc
imul
jno
push
or
arpl
das
push
xchg
mov
sub
dec
iret
xchg
dec
int
outsb
arpl
out
sbb
cmp
push
lods
adc
xchg
dec
icebp
ss
xchg
or
mov
cmp
mov
adc
sub
xor
mov
add
pop
hlt
pop
in
mov
loop
cmpsb
int3
push
add
in
adc
sbb
mov
mov
pop
scas
jl
or
xlat
adc
std
cli
and
xor
mov
cmp
ret
xlat
mov
sbb
shlb
mov
les
or
pop
push
and
sub
ret
jge
sub
ret
imul
int3
das
sub
push
sub
lahf
cmp
test
jge
xchg
mov
adc
jecxz
adc
outsb
stos
fadd
adc
or
movq
adc
push
cs
cmp
stos
add
or
das
enter
dec
shr
sub
dec
lret
arpl
in
adc
cmpsl
add
mov
dec
nop
outsl
xor
pop
mov
lcall
jge
rolb
hlt
mov
xor
shll
push
into
sbb
push
inc
sbb
das
imul
adc
or
int
lock
inc
ljmp
pop
out
repz
nop
push
popa
mov
ficoms
movb
dec
inc
jb
sahf
enter
out
sub
andps
sub
or
mov
lcall
imul
outsb
ficompl
xor
subl
dec
push
lods
dec
pop
cmpsl
insl
or
adc
lds
xor
outsl
lods
dec
pop
push
push
and
in
mov
je
subb
sub
pusha
sub
inc
loope
mov
clc
enter
or
sbb
lcall
in
aaa
adc
push
cwtl
and
mov
in
loop
stos
addr16
cmp
xor
inc
dec
in
int
sbb
sti
push
sub
int3
push
pop
rorl
or
dec
lret
or
inc
mov
mov
pop
stos
scas
dec
xchg
ret
imul
mov
shrl
inc
ret
repz
push
push
outsb
mov
mov
js
adc
xor
xchg
arpl
iret
lcall
fs
push
ret
or
mov
stc
jecxz
repnz
xchg
sub
cmpsl
loop
adc
xor
sbbb
iret
arpl
popf
out
cli
sbb
lods
adc
add
adc
cmp
insb
dec
xchg
cmp
push
sbb
sub
sub
scas
xlat
xchg
mov
jp
scas
sub
push
dec
sub
iret
and
inc
jno
xchg
lea
in
std
lcall
sbb
aas
lods
sahf
sub
adc
inc
ret
dec
xchg
das
add
xchg
movsl
jl
add
inc
das
out
mov
jae
cltd
pop
cmp
scas
push
scas
jl
loopne
dec
mov
js
or
xchg
scas
mov
into
mov
or
jle
mov
lods
and
sbb
push
inc
mov
pop
outsl
push
xor
stos
aas
adc
inc
dec
xchg
jg
mov
push
cmp
rcll
data16
inc
popa
adc
pop
push
loope
push
scas
cmp
in
hlt
repnz
into
jg
imul
inc
outsb
xor
enter
push
mov
sub
js
sbb
test
dec
or
pop
ret
int
in
sub
xchg
or
ficomps
xchg
dec
data16
dec
adc
add
pop
into
aam
test
ret
adc
daa
cmp
mov
out
xchg
mov
leave
imul
daa
fld
lods
xor
rcr
call
push
adc
jo
les
push
pop
cmp
jp
in
fs
packsswb
je
gs
imul
movsl
outsb
or
jne
xchg
in
test
xchg
lahf
mov
lret
out
dec
cmp
or
test
scas
cmp
das
push
in
pushf
lods
mov
adc
bound
in
adc
les
pop
jle
sbb
add
pop
mov
push
mov
out
mov
cmp
push
mov
sub
scas
popa
cs
xlat
scas
stos
add
or
jge
fcoml
int3
xor
push
out
jno
andb
dec
jmp
push
scas
fcomi
and
clc
scas
insb
add
sub
pop
dec
lods
jmp
or
jp
fstps
or
mov
push
call
idivb
add
push
push
pop
push
rorb
in
cmp
xlat
repnz
jmp
or
sub
mov
push
nop
in
adc
cmp
adc
adc
mov
adc
xor
xor
pop
int
insl
dec
push
arpl
scas
negb
xchg
loop
mov
pop
sbb
ss
leave
jmp
outsl
fldcw
lods
lods
inc
test
test
arpl
mov
sbb
add
push
push
push
or
inc
pop
push
lea
mov
dec
lods
dec
mov
cmp
les
mov
outsl
dec
add
xchg
call
dec
pop
push
sbb
jmp
outsb
test
aas
ret
dec
add
pop
push
lods
xor
jmp
das
push
arpl
dec
cwtl
fcmovne
mov
cs
or
mov
fwait
sub
pop
mov
push
inc
sub
adc
or
mov
dec
push
dec
mov
cmpsb
adc
jg
or
sbb
fldenv
mov
mov
jl
cs
inc
out
adc
lcall
mov
mov
sub
addr16
es
mov
int
adc
out
jg
iret
ja
repz
std
mov
mov
adc
fs
sub
addr16
out
xchg
xor
adc
sub
arpl
adc
fwait
imul
and
dec
leave
add
call
push
xchg
add
xlat
dec
or
aam
repnz
or
repz
js
jecxz
mov
nop
adc
sahf
cld
jbe
imul
cwtl
sub
lods
mov
shll
push
ret
loop
mov
sbb
and
jo
rorb
xchg
cmpsb
xchg
push
adc
insl
sbb
mov
jne
push
lahf
dec
adc
rcrb
push
enter
lcall
mov
and
imul
scas
stos
mov
pop
cmp
mov
andb
fcompl
push
into
push
mov
sahf
sarl
rcll
mov
clc
shr
and
pop
out
mov
sbbb
lcall
iret
jmp
push
mov
das
mov
jmp
cmp
cmp
inc
push
xchg
out
outsb
push
test
mov
jl
and
stos
xchg
fidivl
int3
pop
paddsw
and
scas
xchg
int3
or
test
sub
pop
call
mov
or
popl
iret
sbb
fdivrp
pop
cld
sbb
and
mov
pop
or
ret
out
sub
call
adc
je
imul
rcr
adc
sahf
or
xor
adc
sub
lods
mov
mov
add
cs
mov
cvtdq2ps
dec
ffree
jbe
sahf
mov
clc
xlat
enter
cmp
adc
ret
mov
jbe
mov
mov
or
dec
xchg
mov
mov
popf
cmpsb
ljmp
roll
dec
mov
test
push
mov
lods
cmp
mov
das
dec
stos
or
or
jecxz
leave
imul
adc
mov
loopne
cwtl
scas
mov
cmp
int3
lret
dec
into
imul
push
sub
push
mov
xchg
dec
aas
pop
lods
xchg
add
or
cmp
movsb
mov
add
insl
dec
inc
popf
lods
xchg
mov
es
sbb
pushf
push
jecxz
pcmpeqb
sbb
sahf
or
pushf
cmpsl
mov
das
mov
or
int
jmp
sbb
mov
cmp
pop
sub
lods
mull
inc
stos
outsb
clc
pop
pop
ret
push
sub
arpl
xchg
mov
pop
push
stos
mov
mov
jmp
add
lock
and
sbb
out
cmpsb
addl
and
insb
ret
bound
jns
imul
jle
inc
rcr
fdivrs
fsubl
mov
das
insl
xor
les
incb
sbb
and
insl
adc
sbb
mov
mov
and
scas
pop
mov
dec
ret
mov
scas
lea
xchg
out
out
test
push
or
imul
out
inc
notl
mov
lea
inc
or
ret
push
xchg
outsb
in
xor
jmp
test
pushf
xor
dec
push
sub
xor
dec
mov
pop
in
stc
mov
pop
push
xchg
aas
cs
aad
jecxz
arpl
mov
out
mov
out
fst
lcall
xchg
adc
imul
sti
add
xchg
push
sbb
das
out
sub
test
mov
dec
adcl
adc
dec
sub
mov
xlat
roll
jecxz
sub
mov
shrb
out
loop
out
fsubl
out
adc
push
or
adc
int
in
dec
sub
out
iret
mov
pop
cmp
repnz
push
rcrb
xor
pop
inc
sub
mov
lcall
or
stc
mov
and
adc
je
mov
out
lods
xchg
popa
lods
or
rorb
add
ds
mov
roll
xchg
pop
adc
cmp
insl
or
cmp
lcall
jbe
mov
js
mov
cmp
orb
es
push
sub
outsl
movsl
or
cltd
adc
sbb
test
push
cmp
lea
push
xchg
loop
xor
outsb
adc
xor
fimull
add
sbb
outsl
subb
jne
and
adc
ret
push
mov
push
jmp
pop
sub
scas
inc
fistpl
outsl
pop
mov
mov
inc
cltd
sub
nop
push
lret
jb
out
cltd
push
inc
leave
lods
arpl
mov
out
je
sar
out
stos
jl
in
cmp
ja
or
add
scas
xchg
mov
shr
sub
xchg
add
dec
fidivl
xchg
pop
sub
outsb
xchg
or
push
popl
iret
mov
dec
jnp
push
jb
ficompl
in
dec
scas
and
xor
out
arpl
or
iret
ret
into
mov
ret
mov
fdivr
sub
enter
jb
repz
shrb
sub
cmp
ret
cli
cmp
jg
test
ljmp
pop
jo
ljmp
or
mov
js
outsl
sub
jecxz
cmp
cmp
mov
sbb
incl
jle
mov
dec
in
adc
jae
cmp
and
loop
ret
push
pop
mov
ds
in
popa
adc
fs
cli
add
add
repz
sub
aaa
xor
imul
ret
das
pop
jno
add
dec
stos
outsb
dec
and
test
jle
insl
or
adc
mov
pop
adc
in
push
rsm
aad
cmp
cltd
fs
pop
fcoms
in
into
cli
cmp
mov
inc
addr16
mov
or
in
dec
pop
add
xchg
mov
repz
mov
adc
daa
pop
int3
inc
sub
adc
sbb
dec
add
and
insb
sbb
cwtl
xor
push
mov
jmp
imul
sub
mov
cs
and
hlt
or
shlb
bnd
xchg
shr
popa
sbb
sub
jle,pn
movsb
nop
or
and
stos
roll
cs
mov
cs
out
rorl
cmp
cmpsl
push
adc
xor
or
pop
push
int3
in
fbld
outsb
mov
push
adc
mov
insl
adc
in
in
js
mov
xchg
xor
adc
cmp
gs
mov
push
nop
call
repz
sarl
pop
push
outsl
push
xchg
adc
xchg
add
mov
roll
or
inc
jmp
test
and
add
stos
mov
dec
dec
and
out
add
ja
ror
jns
loop
gs
insl
int3
mov
scas
sub
ljmp
xlat
insb
xchg
sbb
ret
cmp
test
fsubl
or
aam
lock
xchg
sbb
mov
adc
stos
rcrb
arpl
movsb
in
imul
cmp
imul
pop
pop
or
or
adc
movsb
and
xor
add
push
arpl
pop
mov
jecxz
inc
ret
xchg
rorb
or
xchg
imull
sub
loopne
int3
or
jecxz
xor
stos
out
and
adc
dec
or
fwait
cmp
add
imul
add
call
je
rcrb
dec
jl
adc
sbb
lods
add
sahf
sub
shll
je
cmpsb
ret
stos
push
mov
jnp
popf
scas
dec
int3
scas
push
push
cltd
outsl
ret
mov
cmpb
iret
xor
lock
sbb
pop
loopne
lret
in
dec
das
dec
call
mov
or
subb
xor
mov
and
insb
bound
jbe
sub
jge
inc
add
out
add
adc
dec
push
or
mov
lret
cmp
loop
mov
lods
insl
stos
cwtl
mov
js
iret
ljmp
arpl
adc
fldt
mov
adc
adcl
mov
sahf
out
enter
aam
jecxz
inc
push
adc
xor
loopne
adc
shll
push
mov
or
push
cs
push
mov
repnz
or
stc
adc
dec
test
je
insb
cs
sarl
dec
adc
enter
int3
mov
xchg
rcrl
sbb
into
ret
outsl
pop
arpl
je
scas
and
push
push
mov
stos
clc
fistpl
adc
push
cwtl
xor
push
mov
stos
lea
add
or
pop
mov
sub
clc
mov
cmp
call
mov
das
push
dec
xor
lods
mov
cmp
or
push
icebp
mov
sub
sub
push
pop
addr16
arpl
xlat
nop
loop
or
shll
xor
movb
mov
sti
mov
loop
xchg
adc
loop
push
push
mov
imul
add
out
pushf
lock
sub
out
ret
pop
adcb
daa
sbb
adc
cli
stos
in
pushf
xor
xchg
xchg
stos
outsb
mov
pushf
lds
sbb
jl
insb
shl
adc
or
cmpsb
rcll
cmp
leave
jge
xor
es
hlt
adc
cmp
jg
jnp
cmp
imul
lods
fimull
add
sub
and
call
mov
mov
sub
pop
sahf
out
add
mov
rolb
loop
ds
jge
mov
arpl
dec
mov
and
out
xor
mov
imul
int
arpl
add
xor
mov
cwtl
pop
test
leave
mov
or
inc
jle
scas
leave
add
inc
mov
mov
or
dec
rcrb
sbb
dec
scas
xchg
jne
mov
push
or
add
inc
add
push
imul
cmp
sbb
out
inc
insl
into
test
out
mov
sbbb
movsb
xchg
lahf
cmp
stos
shrb
imul
sub
mov
jmp
push
aas
cmpsl
test
push
and
sub
imul
pop
xor
mov
sub
scas
orb
adc
xchg
adc
mov
sub
dec
pop
jbe
or
sbb
shrl
leave
faddl
xchg
ret
fldpi
sub
mov
decl
cmpps
mov
jecxz
fcmovnb
lods
stos
sbb
add
adc
stos
cli
movsb
jae
inc
dec
xchg
xor
stos
pop
pop
sub
pop
mov
xchg
pop
mov
das
push
outsl
xor
insl
testb
test
or
or
xchg
outsl
push
mov
inc
adc
dec
fldt
in
das
push
jge
xchg
and
adc
cmp
sahf
sub
into
cmp
nop
mov
out
sarl
arpl
aad
sub
cs
int
arpl
or
mov
add
pop
sub
inc
jbe
or
mov
in
pusha
stos
cli
dec
out
add
adc
lcall
mov
sbbl
sbb
loop
arpl
or
jmp
xchg
push
faddp
sub
add
sub
push
test
imul
push
int3
js
outsl
sbb
and
insb
dec
sub
cmp
and
jl
jge
insl
inc
das
gs
outsl
enter
push
add
mov
pusha
add
inc
fildl
inc
test
sub
xor
loopne
mov
dec
push
fs
xor
push
stos
jbe
sbb
je
mov
mov
shrb
inc
andb
cmp
fisubrs
psubsb
push
inc
sti
movsb
cwtl
push
insb
sub
or
ljmp
mov
and
add
mov
loopne
pop
sbb
jmp
cmp
arpl
add
inc
out
cmp
arpl
jecxz
scas
mov
and
mov
lods
cmp
jecxz
das
mov
mov
push
xchg
arpl
fs
jg
mov
bound
dec
mov
out
outsb
dec
stos
push
or
sub
sub
mov
xlat
addr16
ljmp
xchg
push
mov
or
scas
sub
jl
lret
ss
loop
xchg
xor
push
flds
sub
sub
mov
jo
push
dec
pop
pop
dec
add
call
add
add
push
scas
sub
mov
call
mov
les
dec
loop
mov
call
arpl
pop
cmp
mov
dec
ret
pop
fisttpl
sub
loopne
lcall
mov
insl
pop
roll
mov
cmp
dec
sub
imul
stos
clc
adc
ljmp
mov
bound
push
loop
and
or
test
cltd
icebp
scas
lcall
mov
outsb
xchg
frstor
dec
mov
pop
cmp
ret
mov
addr16
movl
pop
vcvtdq2pd
dec
pushf
add
enter
lret
out
das
out
lods
inc
jecxz
lcall
ret
and
sbb
cld
mov
into
aaa
in
repz
sub
mov
dec
test
mov
pushf
push
and
push
push
hlt
sbb
jle
push
sub
je
negb
js
or
dec
sub
or
push
int3
stos
arpl
add
aam
or
dec
xchg
sub
call
decb
pop
ss
vfrczsd
inc
cmp
dec
push
out
in
rcl
ljmp
movlps
xchg
cltd
cmpsl
xchg
xchg
outsb
imul
xor
and
rorb
out
cli
in
clc
dec
rol
adc
test
stos
dec
mov
pushf
fwait
xor
test
lahf
lods
push
push
cmp
std
cmpsl
dec
imul
scas
sub
pushf
mov
or
bnd
jl
arpl
inc
jnp
mov
lret
sub
xor
xor
stos
add
sub
add
pop
push
scas
scas
mov
push
dec
sub
orl
loop
fnsave
push
jecxz
push
xor
arpl
cld
into
addl
lods
aam
in
ja
jecxz
addr16
mov
xor
in
int
mov
xor
mov
adc
shrl
in
jle
mov
and
rolb
popf
scas
mov
out
xchg
movb
inc
call
sub
jnp
mov
cmp
rclb
imul
dec
add
push
adc
xor
adc
bound
lock
out
push
in
sub
xor
lret
mov
jbe
jg
repz
jne
scas
adc
sub
sbb
aam
cld
mov
cmp
test
mov
stos
aaa
add
leave
cs
sub
scas
out
push
in
xor
scas
xor
lcall
pop
push
pop
sub
stos
decl
pop
mov
mov
or
ficompl
sti
adc
cmpsb
cmc
mov
inc
add
xor
ds
mov
mov
mov
mov
iret
test
sahf
cmp
mov
out
adc
lcall
outsl
sbb
mov
xor
or
ret
dec
fs
sbb
xchg
int3
js,pt
call
or
xchg
repz
scas
rorb
add
fisttpll
add
or
in
jo
add
mov
mov
imul
mov
cmp
enter
imul
pop
pushf
push
pop
jl
es
movsl
mov
sbb
mov
stos
pop
or
repnz
adc
aad
cltd
out
adc
inc
and
and
sbb
inc
or
cmp
add
jl
add
jmp
cwtl
dec
sub
pop
and
outsb
ljmp
push
inc
stos
in
fdivr
lods
jns
jecxz
arpl
cmp
mov
enter
fldcw
push
cmpsb
and
lods
add
add
dec
mov
cmpsb
inc
out
or
push
xchg
sbbl
test
sbb
and
andb
aad
repz
mov
nop
pop
outsl
adc
sbb
test
sti
push
jle
dec
add
sub
das
sub
shrb
dec
cmp
out
fmuls
arpl
arpl
push
dec
sub
or
xchg
test
push
jle
loop
icebp
es
sbb
adc
push
lods
pop
lods
or
xor
mov
ficompl
stos
cmp
rcll
jecxz
push
test
dec
xor
and
arpl
adc
pop
sub
push
loop
cwtl
push
insb
test
sub
sub
in
push
jl
scas
call
mov
in
imul
hlt
das
outsb
lret
push
jl
sub
adc
lahf
and
xor
mov
imul
xchg
in
xor
das
and
test
jo
adc
sub
ret
dec
pop
frstor
int
jb
xor
test
pop
test
xchg
test
adc
jl
shll
mov
in
push
repz
cwtl
arpl
in
outsb
dec
adc
pop
out
push
inc
inc
ret
inc
add
sbb
push
aam
ret
adc
sub
mov
pop
sbb
test
ret
adc
out
mov
push
and
je
out
or
push
pop
inc
add
enter
dec
push
or
enter
out
out
setp
add
add
pushf
aad
mov
das
dec
stc
out
lods
inc
les
xor
mov
push
push
in
and
push
scas
sub
imul
in
stos
outsb
inc
bnd
lods
sub
jns
cmp
cmp
pop
adc
in
xor
pushf
rcll
dec
add
mov
std
stos
sbb
scas
andb
out
sub
xor
push
daa
test
scas
xor
fs
or
jne
std
orb
jmp
scas
les
dec
jg
les
loop
fisttpll
lea
mov
mov
std
adc
adc
xchg
jo
dec
adc
xor
imul
sub
mov
mov
cmp
js
add
les
dec
inc
int
sbb
adc
arpl
pop
nop
xchg
imul
mov
stc
mov
push
iret
add
dec
ds
adc
xor
adc
aam
decl
sti
or
in
xchg
test
cltd
dec
popf
mov
aam
jmp
sbb
leave
add
sti
out
shr
lods
insl
arpl
lcall
call
in
into
mov
mov
out
xchg
dec
dec
loop
sbb
pop
shlb
and
ljmp
loop
lds
jl
sbb
leave
adc
mov
mov
cmc
push
scas
icebp
jb
cs
lcall
ss
push
popa
or
and
aaa
pop
sbb
and
sbb
out
push
or
sub
loope
push
dec
stos
sub
cmpsl
cmp
cmp
dec
cmpsb
pushf
ja
mov
dec
clc
mov
pop
stos
mov
imulb
je
leave
into
lods
arpl
xor
mov
mov
adc
mov
adcl
or
ljmp
push
sub
mov
insb
mov
lcall
adc
sub
xchg
movsl
and
adc
xchg
xor
lock
and
mov
pop
xor
ret
in
mov
ret
mov
sbb
arpl
imul
arpl
bound
mov
cld
ljmp
loop
dec
mov
imul
xlat
mov
in
jo
and
dec
add
and
jl
mov
push
push
xchg
loope
mov
popf
mov
sub
xor
adc
dec
cmp
pop
mov
adc
jl
cs
cli
push
call
stos
out
out
mov
lahf
dec
stos
es
fisubrl
fcoms
pop
push
repz
stos
jne
jl
inc
push
jle
xchg
or
push
push
stos
scas
inc
test
mov
add
mov
push
or
cwtl
jbe
xchg
outsl
dec
adc
imul
pop
jbe
dec
inc
ret
imul
ss
clc
dec
outsb
mov
lock
jbe
and
adc
jg
dec
ljmp
dec
cmp
push
jle
ret
fwait
in
sub
add
and
sbb
mov
xchg
add
mov
cmp
subb
arpl
or
das
ret
ret
out
int
xor
push
loop
add
sbb
pop
dec
or
dec
sub
cmp
adc
insb
popw
and
xchg
in
sub
or
stc
dec
arpl
mov
xor
sahf
int
and
mov
mov
sbb
jle
arpl
pop
out
push
arpl
and
and
leave
rorl
mov
out
arpl
dec
or
sub
loop
mov
xorl
or
cmovae
push
test
xchg
add
or
outsb
test
push
sbb
adc
sub
mov
cli
pop
pop
lcall
add
sub
sti
sub
out
out
or
xlat
mov
pop
stos
xchg
out
out
cmp
push
xor
outsl
mov
sub
mull
mov
adc
push
cmp
or
adc
jecxz
aam
push
dec
xor
mov
mov
inc
sub
push
inc
sbb
nop
fs
lods
sbb
xchg
je
scas
push
arpl
out
sub
or
mulb
fmull
lcall
dec
test
in
adc
mov
push
push
out
adc
jecxz
and
icebp
imul
out
or
faddp
in
add
outsb
adc
imul
arpl
cli
mov
rolb
adc
pop
ljmp
sub
loopne
sub
adc
rorb
push
adc
sbb
mov
mov
stos
shlb
lods
into
xchg
fldlg2
mov
add
stos
inc
imul
sub
sub
popf
sub
mov
inc
repz
aaa
loop
pushw
shll
pop
movsb
adc
pushl
xor
loopne
and
ud2
cmpsb
out
dec
pop
or
push
mov
enter
push
sub
cmp
or
adc
mov
xor
pop
daa
cmp
and
or
fcoms
jge
adc
pop
sti
xchg
insb
ret
sub
data16
popf
and
ljmp
sub
ds
mov
sahf
jne
sub
scas
dec
test
cs
aam
in
enter
ja
or
pop
push
jl
stos
sarl
stos
cld
sub
ret
mov
aaa
fldenv
xor
fdivr
sbb
adc
movsl
xchg
sub
test
xor
lods
inc
mov
test
insb
mov
shl
sub
jns
arpl
adc
jb
mov
lods
push
aaa
and
test
daa
push
and
aad
int
arpl
cmp
or
sti
stc
xchg
xor
out
aas
cld
push
das
sarl
xchg
sub
loope
mov
and
pop
out
sub
jl
cwtl
mov
dec
fiaddl
repnz
dec
cmpsb
push
stos
adc
scas
xor
loop
jb
xor
dec
jge
stc
pop
add
sub
sbb
push
aam
sub
andl
or
jae
inc
je
and
outsb
insl
push
imul
or
gs
sub
orl
adc
imul
movsl
sub
aas
sbb
arpl
std
xor
dec
pop
popf
cmp
push
dec
ret
and
test
daa
cmpsb
jmp
repz
xchg
iret
lods
jmp
ss
movsb
mov
test
add
mov
mov
jns
dec
test
dec
mov
sub
lea
pop
adc
inc
mov
dec
lret
mov
loop
stos
inc
repz
movsb
js
cmp
lahf
and
sub
bound
jbe
lahf
add
stos
stos
shlb
xor
sub
fistps
mov
xchg
inc
mov
pushf
fucom
lret
sub
push
repnz
stos
inc
stos
in
shrl
mov
arpl
jg
push
push
xor
mov
and
dec
lea
lcall
imul
int
test
add
sti
cmp
repz
pop
icebp
scas
sub
adc
in
std
into
stos
add
sbb
insb
movaps
adc
adc
push
push
scas
mov
pop
mov
out
push
scas
ret
imul
xchg
sub
aas
fisubs
dec
lret
mov
jmp
add
xor
and
mov
pop
imul
loop
lea
outsb
mov
icebp
insl
lock
loop
cltd
or
les
dec
arpl
arpl
stos
mov
lods
das
xchg
xor
fisttps
jle
imul
out
movsl
pop
jmp
sub
sub
and
mov
jo
insb
mov
ret
arpl
cmp
dec
jns
push
xchg
out
sub
xlat
jb
data16
enter
cmpsb
push
movsl
loopne
shlb
arpl
or
out
jecxz
mov
out
es
sbb
push
lods
in
xchg
cmp
sbb
test
stos
arpl
ret
push
push
xor
mov
pop
mov
dec
adc
jnp
in
mov
or
mov
out
jle
out
repz
loop
cwtl
sbb
cmp
jl
lret
sub
cmp
or
shrb
scas
mov
in
push
mov
add
cmp
imul
xchg
dec
pop
lret
outsb
call
pop
dec
mov
and
les
ja
or
jle
or
or
sbb
rcrl
or
dec
mov
push
mov
fwait
and
add
pop
push
or
jecxz
dec
icebp
in
dec
stos
out
add
nop
xchg
out
neg
scas
mov
mov
or
xchg
ljmp
push
pop
dec
ss
sahf
jae
adc
pushf
mov
roll
in
mov
inc
adc
test
sub
adc
loop
stos
arpl
arpl
cwtl
imul
out
fimuls
or
xchg
icebp
leave
and
lret
leave
sub
jge
xchg
mov
arpl
nop
cli
out
sub
pop
loopne
inc
and
xchg
dec
add
adc
mov
test
test
xchg
fs
jbe
jmp
scas
or
or
mov
arpl
xor
js
sbbl
xchg
jo
scas
adc
sbb
jecxz
adc
test
xchg
fimull
mov
adc
mov
cltd
int
stos
fists
push
arpl
pop
fs
sbb
std
cmp
or
pop
sbb
or
adc
jo
arpl
sub
and
in
or
insb
shl
shrb
gs
jge
mov
or
mov
push
stos
mov
adcl
repz
scas
inc
pop
cmp
out
insl
cmc
sbb
dec
data16
in
out
cmp
sbb
adc
test
cmpsb
out
sub
out
sub
outsb
jb
sub
cli
mov
pop
mov
mov
adc
movsb
xor
add
shrb
mov
stos
pop
sub
dec
stos
cmp
adc
jg
adc
rsm
mov
das
stos
add
adc
cmp
jbe
insb
jecxz
nop
add
insl
or
jecxz
adc
jg
mov
push
arpl
ret
mov
sbb
xchg
lret
mov
int3
xchg
and
repz
out
push
mov
or
dec
sub
jo
mov
dec
jg
cld
xchg
sub
in
mov
roll
adc
lods
jg
dec
dec
out
insb
arpl
orb
lahf
js
test
mov
les
xchg
mov
in
xchg
adc
ret
fs
push
test
adc
and
lods
scas
cli
lods
jge
push
or
rol
add
js
inc
mov
test
ss
add
pop
lahf
cltd
push
in
inc
jnp
cmp
ret
cld
mov
mov
or
out
outsb
sub
cmp
mov
js
pop
jne
outsb
lcall
or
mov
scas
sbb
cmp
stos
mov
mov
shrb
in
adc
test
dec
cmpb
sub
push
leave
dec
into
xor
rclb
dec
push
aas
mov
cltd
fildl
loopne
jb
fisttps
js
sub
dec
dec
inc
loop
arpl
out
test
cmpsb
push
scas
sbb
or
imul
lret
scas
or
push
dec
mov
and
xchg
popf
xchg
stos
insb
and
lea
fdivrl
push
cmp
mov
mov
pop
jmp
and
lret
fwait
lock
jno
adc
mov
or
adc
inc
mov
push
scas
adc
adc
stos
call
pop
rorb
xchg
and
out
jmp
inc
pop
mov
fcompl
arpl
lods
adc
sbb
push
add
xor
sub
add
jne
inc
jecxz
mov
mov
arpl
cmpb
dec
iret
das
in
addr16
pop
ret
daa
cli
arpl
fimuls
outsb
adc
and
cmp
rolb
in
shrb
dec
sbb
sub
into
iret
and
rcll
scas
xor
sbb
mov
fistpll
adc
ljmp
jno
lods
hlt
sti
out
lahf
dec
sti
ds
sub
or
push
mov
pop
dec
sbb
inc
insl
lcall
repnz
les
mov
sbb
dec
mov
lret
pusha
cmp
jl
bnd
fidivl
mov
test
rcrb
insl
sbb
and
popf
lods
das
push
in
sbb
mov
cltd
lods
or
rcrl
popf
adc
jb
dec
rorl
push
out
insb
or
insl
pop
inc
jecxz
dec
stos
push
sbb
cli
mov
ljmp
xchg
je
xor
and
sub
adc
aam
sub
imul
shrl
dec
mov
pop
invd
enter
xor
in
sub
add
fwait
out
adc
push
jle
or
shrb
add
mov
or
and
inc
ret
lahf
outsb
arpl
jmp
mov
lea
lcall
loope
mov
xor
cltd
mov
jo
int3
inc
pop
xor
pop
in
mov
push
in
mov
loop
popf
push
pushf
loope
mov
jge
insl
mov
or
fcomps
popf
dec
mov
bound
mov
inc
jnp
adc
imul
stos
in
orl
and
and
sbb
mov
or
cmp
test
sarl
dec
cmp
cld
or
les
xchg
sarb
xor
mov
out
dec
xchg
pop
adc
push
xchg
sbb
or
add
xchg
sub
xchg
out
mov
scas
jbe
adc
dec
lcall
dec
mov
mov
sbb
pop
mov
stos
int
out
incb
jne
add
int3
loop
mov
push
loop
push
xor
xor
add
push
jge
xchg
outsb
xchg
mov
mov
xor
mov
add
insb
xor
or
pop
ret
cmpl
sbb
leave
push
push
mov
dec
decb
jp
jge
mov
pop
cltd
push
mov
ficoml
test
lods
stos
in
rcr
fists
imul
cmp
or
xor
out
mov
push
jmp
xor
and
adc
imul
mov
mov
push
lret
sub
inc
jg
and
sbb
and
stos
outsb
inc
call
jno
mov
mov
adc
push
fwait
mov
test
insb
pop
nopl
out
xchg
add
clc
mov
sbb
mov
push
sub
lcall
leave
lods
in
imul
call
push
lea
in
mov
or
and
add
mov
lcall
cmp
shlb
ret
xchg
adc
out
ror
jmp
inc
das
push
or
xchg
jmp
imul
imull
popa
push
mov
in
mov
mov
dec
push
xor
pop
outsb
sub
movsl
pop
or
adc
aam
mov
add
sub
jns
mov
cmp
sahf
ret
fildll
xchg
sub
sti
jno
test
dec
add
rolb
jge
push
add
arpl
and
stc
sub
pop
loope
imul
xchg
loopne
and
pop
sbb
xor
adc
sub
lret
mov
movsb
repz
cwtl
shlb
stos
mov
outsb
or
ja
dec
out
cmp
mov
mov
out
loope
sub
outsl
ret
xchg
mov
add
aad
sbb
sbb
out
imul
in
jo
or
mov
adc
arpl
imul
shrb
jl
in
or
sahf
mov
orl
mov
inc
and
iret
xchg
sbb
cmpsb
push
iret
cmp
imul
sub
push
pop
lods
add
sub
shlb
or
mov
dec
inc
out
popf
pop
ret
fld
out
in
push
or
sub
mov
test
adc
shrb
arpl
out
xchg
test
outsb
lcall
sub
leave
scas
cmpb
add
pop
scas
sbb
lcall
out
and
sub
adc
push
mov
call
push
pop
lea
das
mov
dec
jge
repz
scas
pushf
pop
mov
dec
out
sti
fsubrl
out
aas
and
call
cmp
jge
sbb
mov
dec
stos
in
imul
int
push
cmp
xor
fidivrs
outsb
sbb
stos
mov
jno
fwait
stc
add
or
sub
loope
xlat
jb
test
iret
ret
or
dec
leave
pop
sbb
jns
push
add
fsubrs
xchg
fstl
lds
mov
mov
xor
dec
gs
rcrb
mov
or
cmpsl
pop
sub
call
cltd
stos
notl
stos
sbb
jp
adc
xchg
popa
sub
aam
jge
mov
pop
pushf
sub
insl
inc
push
jmp
out
out
test
and
adc
subl
loop
imul
addr16
jo
setb
dec
sti
arpl
lods
push
das
int
sub
les
or
rolb
inc
arpl
mov
or
xorl
xlat
aam
dec
sbb
mov
sub
stos
ficoms
fidivl
jmp
aas
or
loop
jg
int
inc
mov
adc
scas
inc
mov
sbb
push
mov
cmp
inc
xchg
lds
mov
push
hlt
adcl
dec
and
add
addr16
das
pusha
aas
xchg
iret
adc
orb
pop
jb
stos
scas
imul
inc
stos
push
and
roll
xlat
lret
test
adc
pop
add
xchg
push
sub
mov
or
ds
adc
and
loop
dec
xchg
cmp
pusha
bound
sbb
fsubs
mov
push
sub
sub
pop
mov
cmpsb
jo
out
add
cli
or
mov
arpl
push
mov
ja
or
out
insl
test
xchg
mov
mov
cmc
cmpsb
jmp
push
sbb
daa
shll
pop
cli
icebp
sbb
and
arpl
mov
xor
pop
or
sub
jl
fmulp
icebp
add
xor
bswap
arpl
cld
cmp
mov
icebp
or
or
sub
or
xchg
and
out
scas
jl,pn
mov
ffree
cld
jnp
mov
in
daa
and
movsl
fwait
sub
mov
in
ret
mov
or
sub
adc
and
test
mov
or
arpl
fdecstp
sub
or
andb
dec
jl
mov
aam
dec
dec
stos
sub
xor
leave
loope
bt
into
jecxz
dec
fldenv
out
lods
sbb
aas
insb
outsb
jne
push
lods
xchg
mov
lods
mov
xchg
mov
xlat
sbb
ficompl
out
and
das
dec
fs
mov
mov
out
stos
cwtl
scas
sbb
push
imul
in
ss
push
repz
cmpsb
push
or
fcoml
pop
add
sub
or
jp
enter
sbb
and
sbb
andb
mov
repz
or
sub
daa
shrl
mov
dec
ss
out
adc
adc
test
outsb
stc
sub
fbld
mov
js
mov
mov
in
sti
jmp
lahf
pop
test
in
sub
jmp
dec
xor
subb
hlt
sub
subl
mov
xlat
xor
adc
adc
mov
push
push
fwait
xchg
or
pop
fists
cmp
or
jl
mov
or
and
xor
and
or
out
sub
stos
jecxz
out
adc
or
pop
rcrb
push
xchg
imul
test
adc
cli
ret
jle
lea
sbb
cld
push
xor
and
pop
jge
mov
inc
mov
loope
jmp
jmp
mov
and
or
dec
dec
insb
xor
insb
add
ret
addb
xor
out
repz
out
adc
pop
arpl
adc
push
in
in
sub
and
ja
pop
add
sbb
xor
arpl
pop
push
iret
inc
in
outsb
out
adcb
scas
mov
imul
in
add
mov
dec
jecxz
fsubl
jp
lahf
arpl
jl
adc
fs
or
ret
leave
mov
test
sub
jbe
ret
lods
imul
adc
scas
fidivrl
scas
mov
fwait
mov
push
push
add
adc
mov
mov
cmp
pushf
dec
test
outsb
mov
ret
int
in
cmc
or
mov
pop
inc
mov
scas
loop
cmp
scas
lahf
lea
jbe
push
mov
hlt
je
fstpt
test
fscale
sbb
fstpl
inc
inc
cmp
pop
ljmp
dec
ljmp
xchg
mov
mov
add
clc
pop
roll
and
mov
sbb
xor
mov
sbb
and
fcoml
adc
pop
lods
and
mov
mov
mov
sbb
clc
mov
jmp
dec
lds
lods
mov
pop
dec
or
sbb
dec
cld
push
dec
add
stos
hlt
lock
cmp
into
int3
push
enter
mov
push
arpl
out
out
in
push
pop
xor
and
sub
das
mov
xor
inc
mov
sub
in
out
out
sub
dec
test
shrb
sub
scas
das
mov
out
jecxz
subb
sbb
mov
outsl
nop
adc
xor
js
xor
mov
mov
shlb
lods
adc
inc
adc
loope
dec
fnstsw
movsb
sbb
mov
int
inc
cmp
adc
mov
sbb
loop
cmp
cmp
add
fwait
lods
sbb
xor
mov
sbb
scas
fbstp
add
lods
sub
sbb
test
lret
shrb
xor
outsb
sub
out
mov
add
dec
lods
and
xchg
jo
sub
or
push
xchg
and
les
cmpb
xchg
subb
and
arpl
loop
arpl
xchg
out
mov
and
imul
push
adc
mov
mov
mov
fsubrs
lcall
cld
pusha
and
lods
xchg
xchg
adc
add
lods
or
imul
ficomps
jmp
mov
dec
push
sbb
rcr
dec
add
sbb
in
adc
mov
or
lcall
rcr
xor
mov
or
adc
test
aaa
inc
mov
mov
dec
imul
enter
loop
mov
stos
inc
mov
adc
cltd
mov
xlat
pop
mov
stos
scas
loop
shr
push
aam
pop
out
sub
xor
dec
add
adc
dec
insb
std
mov
add
inc
jb
lahf
xchg
outsb
shl
mov
jno
sub
adc
adc
mov
test
pop
xlat
stos
das
ret
sub
cmp
dec
cmpsb
add
push
gs
adc
lods
sarl
dec
xchg
repz
orb
fcom
push
sbb
xchg
mov
or
iret
arpl
push
push
mov
fimull
popa
scas
insl
sub
push
out
ds
xchg
jmp
adc
pop
add
add
or
lea
sub
or
sbb
insl
into
add
outsl
pusha
das
xor
push
cld
dec
test
jecxz
mov
cmpsl
lods
add
js
cli
push
das
or
or
ret
add
jle
inc
std
xchg
push
fdivrl
test
push
or
in
cmc
push
out
cs
retw
ja
add
xor
dec
fwait
push
hlt
sbb
and
popf
mov
dec
ret
push
pushf
or
stos
adc
xchg
sub
adc
movsb
out
bnd
mov
loop
mov
push
and
jl
mov
mov
loop
mov
mov
scas
or
std
jmp
mov
out
or
repz
mov
cmpsl
sbb
and
xchg
lahf
push
jge
sbb
or
push
adc
int3
pushf
push
adc
cmp
push
cmp
sbb
or
outsb
cmp
cwtl
push
sbbb
ret
outsl
sub
inc
adc
mov
repnz
sbb
mov
out
arpl
dec
inc
imul
lds
xor
jnp
and
adc
lahf
mov
sub
pop
or
cmp
add
mov
or
xchg
dec
roll
push
xor
repz
add
cwtl
dec
xor
in
adc
sbb
dec
and
ret
psrad
loop
pushf
adc
insl
out
mov
add
sbb
push
stos
outsb
rep
addr16
arpl
in
faddp
jnp
jecxz
pop
lods
fldenv
aaa
test
lret
insl
push
xor
jmp
lahf
sub
push
add
or
mov
dec
ret
repnz
lret
adc
lea
dec
jmp
out
dec
jbe
mov
outsb
xor
pop
jecxz
inc
cmp
sub
mov
stos
sub
mov
ffreep
mov
xchg
loope
adc
jmp
mov
mov
adc
sub
test
ds
arpl
mov
rolb
lahf
sbb
jnp
mov
push
push
stc
andb
lcall
jne
in
out
loop
cmp
rcll
in
sub
mov
push
popa
popf
pop
je
into
cmp
sbb
push
sti
add
mov
fs
push
sbb
mov
outsl
repz
cld
sbb
pop
andb
adc
imul
fcmovne
push
enter
mov
mov
rcll
fsubrl
call
fsubl
cmp
push
outsl
mov
inc
hlt
adc
push
nop
dec
inc
repz
or
sub
adc
hlt
je
out
mov
enter
dec
mov
aas
test
sub
scas
lods
aaa
dec
push
and
mov
das
and
cmp
into
test
ret
or
loop
jl
dec
xor
sarb
imul
cmp
out
sub
fists
fcmovb
xor
popf
test
add
lock
andl
mov
in
cld
jnp
sbb
je
mov
xchg
enter
cmc
sub
mov
or
mov
out
scas
pavgw
inc
mov
sub
out
ljmp
xchg
push
pop
sub
jb
subb
dec
or
push
in
push
fisubs
sub
adc
aad
and
out
mov
jo
xchg
loopne
ret
outsl
adc
cmp
sbb
xor
in
arpl
jmp
rcrl
or
or
lock
jge
mov
fistl
iret
lret
add
xchg
and
pop
jl
or
xchg
sub
mov
int
xchg
imul
insl
shrl
adc
outsb
mov
push
dec
mov
imul
and
cwtl
lret
dec
into
lods
sub
or
jge
and
mov
cmpb
decb
xor
sarl
loop
stos
jbe
or
push
xor
loop
test
pushf
aad
ds
sub
fsubl
sbb
mov
xchg
scas
mov
and
add
adc
xor
jp
mov
push
fisttps
into
adc
pushf
frstor
hlt
inc
adc
push
loop
arpl
pop
scas
frstor
sub
sub
jecxz
push
or
or
lods
mov
ret
pop
outsb
mov
jmp
mov
ret
adc
sub
shll
xor
cmp
dec
jecxz
out
mov
xchg
divb
dec
es
roll
stos
pop
insb
scas
icebp
sbb
and
pop
dec
or
ret
pusha
adc
fs
dec
pop
dec
mov
test
xor
mov
xchg
lret
cltd
inc
mov
xor
or
cmp
or
fisubrl
mov
xchg
aas
dec
sub
adc
ret
push
pop
test
fdivrl
lods
add
jge
xor
loop
jl
nop
ss
and
icebp
out
call
loope
aad
out
dec
cmp
in
pop
call
and
push
jp
data16
test
mov
or
sub
scas
lods
xor
lods
pushf
scas
ret
lret
xchg
xchg
push
in
cs
adc
xchg
movsl
push
mov
mov
lcall
imul
stos
inc
stos
in
stos
shll
in
sbb
mov
add
stos
dec
stc
sub
lea
enter
arpl
adc
pop
mov
imul
test
add
inc
cmp
cmp
lret
jecxz
pop
dec
stos
mov
clc
inc
mov
adc
and
mov
rcrb
pop
movsl
stc
nopl
mov
or
mov
das
jne
mov
xor
cmc
or
push
mov
push
enter
stos
jl
and
fmull
mov
scas
pusha
scas
rorb
outsb
fidivrl
cld
xlat
pushf
out
repnz
imul
sub
dec
iret
cmp
mov
xchg
push
outsl
jge
sbb
pushf
or
fnstenv
imul
mov
jno
add
iret
jne
dec
ret
sub
sti
ljmp
out
ret
fnstenv
adc
imul
arpl
sub
sub
push
lahf
or
inc
sub
bound
mov
xor
sub
jp
imul
add
dec
mov
cltd
das
enter
dec
arpl
sub
out
clc
xchg
mov
fsubs
lahf
aad
sub
fsubr
loop
in
nop
push
dec
repz
push
ljmp
out
mov
xor
push
add
sub
std
inc
insb
inc
xor
xorl
lret
pushf
sbb
ret
scas
xchg
push
mov
or
pop
rcrl
push
mov
sarb
mov
and
lods
cmp
dec
ret
scas
or
pop
mov
sub
or
repz
lret
stc
or
int
mov
pusha
or
mov
push
push
pop
test
mov
push
arpl
imul
cli
inc
pop
sub
xor
pop
push
fs
push
stos
ret
fbld
or
cmp
mov
test
repnz
int
mov
data16
push
mov
int
mov
jl
sub
lea
jo
mov
aad
into
into
arpl
xchg
adc
ficompl
lahf
cmp
fisubs
pop
jecxz
or
push
mov
decl
shll
mov
mov
imul
pushf
insb
mov
cs
test
out
sbb
jge
ja
jecxz
imull
mov
test
fxtract
arpl
sbb
and
xchg
ret
or
mov
mov
insl
sub
emms
dec
jb
pop
mov
das
xchg
les
jg
xchg
jmp
and
mov
out
add
sbb
out
lret
ret
stos
sub
shrl
dec
sub
call
out
paddd
cmp
mov
lds
jecxz
aam
imul
stc
or
sbb
sub
inc
nop
fistl
lods
dec
test
aam
add
test
xlat
dec
movsl
push
sub
shrb
mov
dec
add
sub
lea
sbb
fimull
xchg
mov
inc
add
mov
out
jecxz
pop
pop
and
sbb
mov
xor
sub
xchg
sbb
imul
fwait
jl
rolb
add
mov
inc
push
adc
cli
push
ljmp
or
aas
pop
repnz
mov
jecxz
mov
lods
sub
or
insb
ljmp
jle
or
int3
stos
into
lret
arpl
gs
jmp
ret
pushf
fsubrs
add
iret
nop
stos
outsb
rcll
ljmp
lods
push
inc
out
sub
lret
adc
aad
push
dec
mov
mov
fsubrl
pop
sub
enter
add
adcl
das
inc
adc
cmp
and
fldenv
int
xor
imul
add
popa
pop
ret
ret
test
jl
pop
mov
sbb
sahf
mov
imul
push
push
out
cmp
arpl
xor
imul
push
arpl
int
cmp
sbb
out
jge
sbb
xchg
pushf
lds
add
mov
cmc
sub
repnz
push
xor
inc
ljmp
iret
testb
adc
dec
iret
stos
in
in
jmp
adc
inc
repnz
sti
sub
call
scas
mov
out
push
in
cmp
rcrl
inc
adc
and
das
mov
push
sbb
mov
movsb
aas
in
add
xor
push
iret
int3
push
out
cmpsl
add
aad
imul
leave
mov
and
ljmp
aad
loope
shrb
add
sub
sub
imul
add
jmp
mov
mov
stc
mov
adc
jns
push
loope
sub
mov
mov
in
fstpl
insl
fimuls
stos
insb
repnz
jecxz
in
lcall
scas
mov
cmpsl
dec
push
inc
aad
or
sbb
aam
data16
push
mov
out
test
sbb
dec
cmc
sub
out
mov
clts
adc
repnz
mov
scas
sub
xchg
out
in
loop
push
push
mov
and
add
push
and
das
inc
inc
shrb
std
je
xor
pop
mov
mov
push
ja
or
mov
add
pop
inc
adc
scas
rorl
lods
jl
or
dec
shlb
stos
cmp
loop
xchg
adcb
adc
dec
jecxz
outsb
mov
cwtl
cld
mov
sub
outsb
sbb
andl
push
dec
sti
push
stos
adc
xor
xor
mov
dec
out
pop
push
fs
test
inc
xor
jmp
subb
push
nop
aaa
or
cmp
aam
inc
imul
test
adc
push
push
sbb
push
outsb
adc
pop
mov
pop
push
mov
and
sbb
mov
lcall
mov
adc
addb
inc
fs
or
ljmp
sbb
js
cwtl
stos
pop
fsubrs
ret
out
stos
sbb
arpl
mov
int3
movsl
insl
loop
jecxz
es
mov
scas
pop
sub
inc
out
push
or
jecxz
scas
adc
mov
sahf
imul
ret
in
ss
mov
cli
cmp
dec
lods
stos
aas
xor
add
mov
mov
sbb
test
add
fs
push
enter
adc
sbb
inc
xor
out
insl
insl
dec
iret
and
inc
ret
dec
sub
mov
add
xchg
shr
mov
push
imul
flds
mov
in
mov
xchg
add
stos
sub
dec
mov
aam
or
cmp
movsl
inc
add
mov
cmp
adc
leave
lea
scas
adc
fwait
adc
mov
je
fiaddl
rcrl
mov
or
cmp
jecxz
mov
xor
cmp
pop
push
and
push
addl
dec
push
mov
aad
das
addl
cmp
jo
adcl
lcall
loop
xor
jbe
sbb
dec
sub
sub
jecxz
xchg
mov
cs
pop
fidivs
dec
fidivrl
lods
add
push
add
sbb
sub
int
mov
sub
inc
jbe,pt
or
or
add
mov
je
movsb
xor
outsb
jne
push
fidivs
mov
or
jg
int
insl
adc
aam
jns
cltd
addb
das
sub
mov
loop
dec
inc
es
sub
push
xchg
shl
out
pop
ss
dec
xchg
push
sbb
cld
push
das
push
mov
fnstsw
lods
loope
das
dec
add
mov
sbb
and
mov
shll
push
idivl
jecxz
int
mov
add
sbb
inc
cmp
xchg
stos
in
sbb
dec
ret
and
xchg
or
jnp
test
das
int
ss
into
rorb
lea
int3
inc
imul
add
rorb
adc
jle
ljmp
sub
lods
add
pop
xor
into
and
fmulp
and
push
xchg
dec
push
out
loopne
push
or
repnz
mov
repnz
cmp
adc
popf
pop
mov
test
arpl
dec
jb
mov
push
dec
inc
out
add
mov
pop
enter
fisubs
cmp
fstl
scas
lahf
xor
and
imul
push
or
or
dec
push
or
ljmp
push
in
daa
jmp
or
xchg
fiaddl
popf
outsb
outsb
inc
push
iret
outsb
lahf
xchg
jb
outsb
sbb
sahf
mov
das
mov
xchg
mov
sub
xor
gs
jecxz
adc
int3
ljmp
data16
lea
lods
jns
add
repnz
es
leave
xor
cmp
pop
adc
cmp
outsb
dec
and
and
adc
push
test
in
mov
sbb
dec
movsl
xor
mov
fnstsw
stos
int
cli
in
xor
jb
push
xor
es
out
lds
data16
out
mov
mov
out
mov
mov
or
ret
rcll
je
and
roll
or
jge
and
and
popf
xor
sbb
addl
push
outsb
sbb
sub
scas
sub
data16
scas
mov
in
shlb
rorl
xchg
pusha
or
xchg
mov
test
cs
xor
push
jg
adc
xchg
and
jo
in
xor
ljmp
cmc
insb
or
push
cmp
mov
hlt
dec
dec
or
adc
lods
aas
add
imul
mov
ret
loop
xlat
and
xor
xor
movsl
push
imul
or
pop
adc
pusha
sub
in
sbb
and
push
in
jl
adc
jnp
insl
and
dec
jne
jmp
mov
out
adc
fcmovu
sti
out
or
dec
push
sub
insb
addr16
lods
gs
inc
outsb
pushf
or
mov
push
dec
call
icebp
stos
rcrl
and
outsl
outsb
or
jl
repz
shrb
pop
fsubrs
rorl
xor
out
ret
stc
in
adc
inc
xor
movsl
outsb
cmc
cmp
test
dec
divb
jge
loop
xchg
in
xor
arpl
push
dec
loope
test
in
mov
aaa
scas
mov
scas
push
mov
inc
xor
ja
lods
stos
and
mov
inc
inc
ret
in
outsb
stc
cld
sub
loop
or
pop
xchg
sbb
add
in
sub
jne
sti
int3
push
sub
pop
jecxz
dec
lods
mov
les
and
arpl
mov
jne
test
sub
xchg
popa
pushf
fisubl
cmp
or
rcrb
into
and
cs
or
dec
ret
das
sub
ret
loop
scas
inc
sbb
sbb
arpl
mov
ret
hlt
arpl
int
out
xor
sub
lea
test
sub
and
mov
sub
hlt
push
aam
jnp
daa
xor
or
xchg
lcall
or
mov
pop
and
push
out
arpl
icebp
sub
jne
cs
das
sbb
cmpsl
cmp
sar
pop
lods
arpl
sahf
imul
repz
cmp
sbb
es
std
ljmp
sub
fmul
adc
push
xchg
frstor
in
mov
loop
pop
push
jge
jbe
and
jo
stos
dec
shl
leave
dec
insl
adcb
xor
lods
repnz
lret
outsb
adc
leave
xchg
mov
in
pop
jbe
jecxz
mov
or
push
ret
and
test
into
sbb
adc
frstor
or
mov
mov
ret
xchg
enter
dec
dec
jecxz
movsl
lock
in
fmulp
xor
push
or
inc
clc
or
out
jbe
cltd
xlat
loop
mov
loop
dec
push
stc
push
sahf
mov
xor
cmp
mov
imul
pop
insb
and
sbb
addr16
push
lds
icebp
in
adc
stos
and
xchg
shrb
dec
popa
mov
xchg
addl
idivb
insl
cmp
inc
mov
mov
shlb
loop
cs
dec
outsl
or
in
sub
mov
into
sbb
das
adc
or
cmp
test
fistpll
or
add
sub
jno
or
sub
stc
mov
imul
adc
adc
pop
and
enter
jge
arpl
dec
arpl
mov
jle
adc
mov
popf
call
xchg
enter
inc
push
sahf
cmp
sti
pop
and
stos
or
mov
xchg
scas
in
mov
mov
xor
or
mov
adc
mov
mov
shrl
imul
inc
xchg
jecxz
add
cmp
adc
adc
inc
mov
jecxz
insl
mov
test
scas
mov
sub
add
sub
ret
and
sbb
sub
xor
jo
jo
scas
xor
push
hlt
pop
sbb
ljmp
aam
sbb
test
ja
arpl
dec
push
xchg
hlt
je
pop
push
into
cld
mov
mov
cmc
add
xor
dec
xchg
sbb
test
dec
sub
push
mov
mov
out
dec
gs
jo
movsb
shll
dec
lret
sbb
mov
jmp
jl
lds
loop
xchg
xor
sub
sbb
pushf
insl
jle
inc
loopne
lret
mov
aam
cmp
mov
add
mov
bound
adc
and
xchg
inc
sbb
and
in
scas
mov
in
pop
or
shlb
add
cmp
pop
xor
xchg
arpl
adc
lcall
and
fs
subb
outsb
rcll
rcrl
frndint
insl
pop
and
pop
popl
xchg
jnp
test
pop
sub
out
xchg
imul
push
lea
dec
pusha
mov
xchg
outsb
and
and
enter
xchg
in
int
mov
sbb
add
xchg
xchg
outsb
enter
and
stos
pop
or
mov
cmp
imul
outsl
sub
in
add
outsb
sbb
and
xor
mov
mov
push
or
jecxz
sbb
mov
mov
je
sub
sub
mov
subb
and
lods
xor
dec
stos
pop
or
inc
cs
mov
movsb
fisubl
outsl
loop
and
hlt
sub
jl
inc
sub
or
mov
dec
dec
xor
inc
cmp
dec
xor
call
adc
and
push
and
jmp
scas
jne
out
mov
sub
mov
or
dec
stos
sarb
dec
push
cmp
pushf
push
pop
fistps
add
test
loop
loop
stc
in
push
or
lahf
ret
dec
inc
in
add
lds
lret
add
js
ret
daa
adc
popa
xchg
into
sbb
and
push
dec
mov
leave
fstp
int3
outsb
inc
loop
sbb
sti
inc
mov
add
in
addb
push
lret
pushw
dec
xchg
ret
push
lds
sbb
mov
sub
adc
repnz
fcmovb
scas
cmc
sahf
cmp
imul
out
jecxz
or
js
iret
repz
and
insl
dec
aad
jl
xchg
ss
xchg
jmp
and
dec
xor
mov
inc
icebp
arpl
pop
fstpl
jmp
js
xor
cmp
xor
and
jne
mov
push
mov
pushf
adc
xchg
jecxz
adc
adc
push
pminub
or
sub
movl
mov
or
lods
sti
adc
xor
mov
dec
in
ret
ret
jle
pushf
or
mov
lcall
push
jo
loope
test
loop
sbb
inc
stos
dec
nopl
adc
xor
ret
jne
scas
dec
sbb
push
mov
inc
or
adcl
movsb
and
out
jnp
pop
divb
stos
dec
inc
dec
pop
test
or
sub
into
sarb
stos
push
jecxz
mov
lods
mov
xchg
andb
ds
lock
mov
push
inc
cld
or
jno
ret
xchg
arpl
or
pop
xchg
out
jg
arpl
jecxz
arpl
or
pushf
icebp
imul
outsb
pop
pop
and
cmpsl
scas
fs
and
xchg
xor
mov
test
add
mov
pop
loop
add
out
or
outsb
ret
sbb
add
imul
cmc
or
mov
leave
leave
xchg
outsl
out
mov
xorl
xchg
push
sbb
jecxz
arpl
cmpsb
xchg
push
push
dec
mov
sub
mov
sbb
imul
insl
sub
out
mov
insl
out
dec
sbb
ret
inc
outsb
not
clc
insb
adc
repz
ret
imul
inc
test
xor
add
push
push
sbb
je
sub
fdivrs
push
mov
int
stos
push
gs
dec
leave
mov
xchg
arpl
out
sub
int
add
push
jbe
jle
mov
or
jecxz
sti
loop
repz
add
jle
scas
andb
mov
aam
test
iret
mov
lock
mov
jne
lret
popa
lea
fisubs
adc
add
mov
outsl
inc
jge
or
push
or
cmc
fsubs
push
add
xchg
out
ljmp
out
jmp
imul
sbb
add
cmp
and
sbb
out
sub
rcll
out
sub
sub
out
cmp
clc
ja
xor
mov
mov
out
push
jecxz
xor
sub
imul
mov
mov
mov
jne
pop
adc
push
stos
cmpsb
mov
add
sub
lods
in
jo
loop
xchg
push
sub
push
pop
lahf
xchg
push
lods
js
scas
out
mov
xchg
cmp
mov
dec
add
push
cmp
stos
xchg
sub
cs
xor
addb
pusha
mov
mov
mov
xchg
mov
lds
push
or
inc
mov
adc
frstor
imul
sub
daa
sub
aam
sbb
and
ds
lahf
int3
cwtl
out
stos
inc
bound
out
mov
loop
stos
mov
call
arpl
mov
in
adc
or
push
adc
push
out
arpl
or
sub
inc
mov
sub
sbb
and
sub
imul
nop
fists
ds
ljmp
dec
mov
loop
mov
leave
jp
pusha
push
loop
mov
insb
xlat
or
arpl
sub
mov
push
stos
dec
jae
fimuls
push
sub
out
sub
mov
push
push
addb
and
xor
xor
dec
xchg
add
imul
pop
cs
pop
mov
call
in
dec
pop
stos
jle
mov
repz
out
add
test
imul
negb
xor
out
push
adc
jne
mov
sub
lods
pop
test
or
cs
push
imul
xor
push
mov
mov
fs
out
ret
call
ficompl
xchg
dec
fstps
addb
jl
pushf
cmp
sub
mov
lods
stos
mov
cmp
imul
das
ja
jmp
or
add
sbb
mov
popl
dec
jns
mov
jle
jp
or
filds
aas
in
test
enter
ret
sub
pop
or
out
push
sbb
adc
pop
and
lea
and
stc
sahf
cld
sbb
and
in
jmp
dec
ja
out
or
sti
pop
dec
out
add
inc
xchg
xchg
xlat
sub
fnstsw
inc
mov
push
pop
pop
adc
insb
test
and
or
sahf
in
xchg
and
test
ja
sub
xchg
mov
movsl
scas
ficomps
dec
shll
pop
xchg
in
fs
sbb
fistl
sub
movsl
ret
pop
lcall
movl
out
ds
mov
xlat
inc
adc
push
push
into
jo
adc
push
movhps
test
or
jp
test
jne
imul
arpl
imul
outsl
adc
xchg
or
stc
inc
ret
inc
in
sub
bound
loop
fcoml
repz
iret
in
out
scas
mov
cmp
imul
sub
add
adc
sbb
or
cmp
add
addl
adc
push
adc
push
sub
sahf
dec
aaa
cmpsl
into
fnclex
test
push
fidivs
xchg
add
loop
cli
es
jp,pt
add
jge
ja
dec
sub
sbb
jno
outsb
mov
outsl
adc
in
ljmp
ret
stos
cltd
cmp
icebp
dec
dec
ja
adc
pop
sbbb
adc
push
dec
or
push
sub
int3
or
pop
lret
cli
jle
scas
mov
stos
dec
shrb
adc
pushf
out
insl
sub
lods
pop
mov
jecxz
pop
pop
pminub
adc
int
pop
sbb
setno
aad
out
dec
scas
add
das
mov
and
repnz
add
sti
add
adc
mov
pop
xchg
sbb
jbe
setne
pop
dec
mov
ja
adc
push
test
xchg
scas
jl
leave
test
bound
imul
lods
jp
arpl
cld
int3
xchg
out
bound
scas
mov
ds
mov
sbb
mov
divb
and
cmp
out
test
mov
inc
add
es
arpl
cs
push
xchg
adc
mov
cmpsb
and
inc
cmpsl
les
dec
insl
add
addr16
mov
sbb
mov
aaa
xor
adc
xchg
jg
in
mov
adc
push
imul
adcl
outsb
xor
mov
imul
cmc
dec
inc
loop
mov
mov
mov
jnp
add
in
dec
out
inc
sbb
adc
sub
dec
mov
and
ljmp
or
ret
imul
aad
arpl
insl
jo
das
cmp
pop
mov
out
dec
add
sub
push
jp
pushf
or
sub
push
in
inc
or
lods
pop
popf
call
push
cmp
arpl
ret
pusha
les
ret
fidivrl
cmp
insl
dec
jmp
jl
add
mov
loop
out
clc
pushf
cmp
adc
adc
mov
mov
inc
rorb
mov
add
sbb
cltd
xchg
jo
sub
in
mov
dec
xor
insl
sub
or
push
rcrb
repnz
scas
mov
rcrl
adc
arpl
outsl
sub
adc
stos
cs
push
loop
jne
jnp
sbb
push
test
mov
loop
push
ljmp
sub
mov
and
fcoml
sub
push
xor
and
push
sbb
and
sub
sbb
push
adcl
jmp
inc
pop
sub
shrb
lret
bound
dec
or
mov
je
pop
call
arpl
jns
pushf
aad
xchg
cs
jnp
sub
pop
push
mov
nop
enter
jbe
out
enter
sbb
push
sub
pop
repnz
xor
push
sbb
mov
pop
sub
and
addl
pushf
sbb
jp
cmpsl
jne
shlb
cwtl
inc
ljmp
popf
insl
push
sbb
inc
xor
imul
subb
in
fdivl
jne
push
insb
insl
or
push
dec
mov
stos
jl
mov
push
pop
fmul
mov
ja
mov
stos
sub
or
mov
fwait
or
lods
lcall
or
dec
lcall
jo
mov
loop
int
pop
ret
push
popf
ret
loopne
out
out
or
fld
push
ja
inc
test
rorb
cmp
out
loop
lcall
mov
dec
mov
enter
dec
sub
in
imul
dec
mov
mov
mov
add
or
bound
ja
ret
dec
fs
cmp
add
test
adc
xor
dec
pop
or
lahf
mov
mov
imul
push
sub
jo
xor
sbb
mov
adc
std
scas
arpl
mov
mov
arpl
xchg
adc
sub
adc
mov
out
push
arpl
sub
in
cmc
scas
leave
shrl
pop
xor
pop
out
pop
std
mov
inc
mov
in
sbb
repz
jb
das
popl
arpl
iret
arpl
out
aad
dec
aaa
or
xor
sub
mov
aaa
jo
jecxz
sti
daa
pop
add
ret
rcr
jecxz
mov
mov
loop
sub
mov
xchg
fidivrl
and
jecxz
jl
xchg
fisttpll
decl
lcall
inc
adc
repnz
sti
das
into
pushf
or
repz
xchg
sub
enter
cmp
cs
xor
jle
or
roll
sub
je
push
and
mov
popa
and
push
ljmp
pop
xlat
push
mov
mov
scas
mov
pop
jle
leave
outsl
inc
nop
or
loopne
push
gs
mov
add
or
lods
fcmovnbe
aas
cwtl
arpl
cwtl
dec
add
or
aam
outsl
in
fidivs
movsl
mov
mov
dec
arpl
dec
sbb
jp
lods
in
mov
stc
mov
and
adc
xor
adc
fidivs
movsl
mov
lret
jl
mov
xor
cltd
fs
aad
sbb
sahf
and
cmp
scas
add
pop
imul
out
lret
adc
test
add
push
adc
mov
ljmp
jl
xchg
in
and
inc
inc
pop
arpl
push
std
mov
outsl
test
outsb
add
sub
rcll
fwait
out
sub
sti
lock
into
xchg
out
pop
xor
jbe
xor
and
popl
add
adc
ret
xor
test
pushf
mov
ss
das
cmpsb
sbb
push
mov
scas
in
pop
mov
test
add
dec
gs
notl
mov
dec
dec
cmpsb
or
ret
ljmp
out
push
int
or
or
into
stos
mov
inc
mov
mov
sub
xchg
arpl
xor
shl
and
pop
ss
into
cmp
enter
dec
jle
add
sbb
or
test
adc
aas
fisttpll
cli
loop
cwtl
movsb
test
dec
dec
daa
add
cwtl
or
out
ret
adc
jmp
sbb
idivl
push
imul
inc
mov
push
imull
mov
push
js
mov
call
sub
add
int3
sub
movsl
or
or
xor
push
stc
arpl
or
cwtl
mov
push
pop
push
add
inc
mov
les
cmp
in
pop
mov
cld
xchg
sbb
loopw
cli
push
pop
hlt
push
mov
pusha
ljmp
cmp
mov
pop
int
lods
enter
jecxz
mov
xchg
clc
pop
sub
and
ret
imul
ljmp
jno
popf
dec
push
shr
into
pop
fisubl
add
les
add
push
in
mov
test
stos
je
sub
pop
dec
dec
je
or
addr16
sub
lds
cmpsb
push
or
and
mov
inc
sub
gs
mov
sub
js
imul
inc
xor
inc
out
and
lea
jl
daa
and
sub
pop
lds
push
inc
sbb
jg
repnz
rcr
add
repnz
arpl
pop
out
dec
mov
stos
pop
in
fists
int
pop
in
ljmp
sbb
sub
mov
stos
cmp
insl
loopne
and
stos
in
pop
test
cli
test
test
mov
repnz
lods
scas
adc
add
push
arpl
int3
outsb
fcoml
jge
paddq
add
test
cmovle
jg
ficompl
add
jne
das
mov
lea
mov
xchg
adc
push
sub
push
mov
fucomip
lea
inc
rol
scas
dec
stos
out
jecxz
in
out
lods
xchg
repz
sub
mov
inc
lock
sbb
in
or
mov
addr16
mov
lods
push
ret
sub
fcoml
jge
push
pop
pminsw
mov
jp
xchg
xchg
popa
into
lods
dec
enter
pushf
dec
jecxz
out
imul
shlb
mov
dec
push
jnp
sub
imul
inc
out
clc
in
dec
insb
ret
xor
outsb
mov
sti
test
add
out
or
dec
dec
push
mov
mov
pop
mov
in
mov
lds
sub
aad
or
add
inc
ret
mov
xor
test
sub
xor
outsb
sub
push
inc
or
fwait
pop
sub
xchg
xchg
das
push
sar
outsl
ficompl
in
scas
push
repz
or
jecxz
popf
stc
lahf
fsubr
jle
mov
stc
leave
mov
sbb
dec
call
data16
adc
add
cli
insb
or
leave
pop
or
jo
into
adc
sub
test
sub
mov
call
bound
int3
adc
push
or
adc
mov
sbb
lods
aam
or
jl
dec
stc
in
es
sbb
mov
mov
sbb
insl
inc
adc
sub
mov
call
bound
mulb
call
rolb
or
popa
lcall
lods
sub
ret
idiv
std
sbb
and
xorb
or
jl
jmp
sahf
in
adc
ficompl
mov
cmp
je
sbb
xor
cltd
in
cmp
or
push
sbb
and
push
sub
cmp
clc
sbb
xchg
dec
adc
lcall
js
adc
xor
std
test
lahf
sub
sub
imulb
icebp
add
dec
int
jl
or
loop
pop
fnstcw
dec
int
pop
icebp
orl
mov
test
ret
mov
pop
pop
ret
pop
jno
xlat
cmp
gs
out
xchg
scas
push
add
lret
adc
into
dec
scas
ret
imul
mov
dec
or
insl
xchg
xchg
mov
adc
fs
jb
dec
scas
sub
jp
sbb
dec
outsl
sbb
add
ret
cwtl
jge
xor
rcrl
xchg
enter
jge
es
popa
jno
test
mov
push
enter
imul
inc
xchg
divl
scas
int3
out
ja
adcb
pop
dec
test
rorb
ret
sub
and
mov
setle
cmp
bound
pop
lock
pop
push
out
xchg
cmp
in
into
insb
cs
inc
add
fsubr
push
sub
das
mov
xor
inc
int3
inc
adc
shll
pushf
push
sub
xchg
stos
jmp
xchg
mov
scas
lret
mov
or
call
out
mov
inc
test
arpl
mov
cmpsb
mov
mov
dec
or
jne
sub
aad
push
in
mov
fsubrs
mulb
mov
ja
mov
data16
dec
jl
xor
popa
out
pop
inc
jo
scas
orb
rolb
mov
sbb
push
iret
js
jl
pop
sti
push
jbe
fbld
dec
sbb
lret
lcall
out
sbb
mov
or
mov
call
sub
int
aam
mov
sahf
sub
into
imul
sti
adc
jge
ret
adc
mov
aaa
cmp
mov
inc
lcall
adc
push
mov
roll
loop
sub
fnstsw
mov
adc
bound
scas
sub
int
adc
push
loop
jbe
sbb
and
jno
cmp
paddd
adc
icebp
mov
sub
fsubrl
push
subb
fwait
mov
out
sub
mov
cwtl
adcl
push
in
test
shrb
rcl
icebp
lret
sbbb
jge
insb
je
or
mov
in
adc
or
sbb
mov
cmp
adc
cmc
or
add
outsb
push
adc
push
out
jl
mov
into
cmp
test
and
outsb
mov
mov
aam
bound
add
stos
and
dec
pushf
ret
jno
addr16
mov
cs
mov
sbb
stos
fs
ret
lea
enter
pop
int
subl
xchg
mov
inc
inc
popf
sbb
arpl
cmp
mov
pop
pop
cwtl
jp
dec
mov
aam
jge
into
andb
cmpsl
sub
mov
sub
pop
test
inc
dec
xor
jp
out
jecxz
dec
adc
add
mov
sub
lods
pushf
adc
stos
xchg
pop
in
mov
lahf
jno
in
xor
movsb
loop
jb
adc
push
mov
sub
adc
int3
test
dec
push
iret
lods
jmp
and
xor
cmp
xor
into
jnp
aam
ret
dec
arpl
mov
mov
dec
imul
add
subb
mov
fists
into
es
out
inc
fdivs
inc
add
arpl
push
ss
or
imul
stos
iret
jp
std
sti
hlt
into
das
stos
scas
stos
outsb
or
stos
inc
addr16
shrb
xchg
or
rcll
inc
imul
or
enter
movsb
ljmp
mov
in
xchg
sub
imul
sbb
push
jmp
leave
pop
or
sbb
std
sti
and
xor
rclb
cmc
mov
fnstcw
jg
sbb
mov
mov
in
xchg
call
mov
ds
inc
sbb
and
mov
call
cwtl
mov
or
ljmp
into
cmp
push
lahf
rorl
or
mov
shlw
xor
in
xlat
adc
out
adc
daa
xor
inc
aad
xchg
mov
fs
es
push
add
push
push
lds
pop
push
and
sbb
add
mov
scas
adc
aam
dec
lret
scas
sub
mov
xor
data16
adc
scas
mov
ret
xchg
sub
mov
xor
jle
call
stos
inc
push
scas
or
mov
insl
into
imul
scas
adc
ja
cs
inc
sbb
xchg
jnp
pop
f2xm1
xor
insl
sti
mov
test
mov
and
push
arpl
jno
lods
adc
jne
cs
jo
adc
push
lods
pop
aad
ds
fdivs
sub
dec
or
mov
inc
or
shlb
ret
dec
dec
push
dec
aas
add
das
ficoms
and
test
mov
pop
loop
movsb
insl
push
dec
jecxz
xor
adc
ret
das
mov
in
fsub
inc
add
mov
icebp
add
xor
inc
xor
dec
mov
sub
push
nop
scas
out
inc
inc
ret
stos
iret
rcl
and
cld
dec
loop
or
jno
push
mov
mov
imul
or
test
sbb
sbb
mov
mov
adc
mov
shr
pop
push
xchg
pop
mov
in
pop
mov
lret
lea
push
sub
cmpsb
push
sub
cmp
call
mov
lods
andb
add
outsl
lods
jnp
dec
int3
int
or
and
fistl
cmp
sub
dec
mov
push
into
push
xchg
push
testl
xchg
mov
es
push
lods
lds
dec
mov
out
ret
imul
popf
loop
inc
mov
or
lret
out
push
das
aam
sub
xor
mov
add
ds
jecxz
mov
push
stos
sbb
dec
xchg
adc
jp
push
push
sbb
cmp
add
sub
sbb
and
dec
pop
pop
jnp
mov
jb
rorb
dec
mov
jge
aad
pop
scas
inc
hlt
pop
ret
add
movsb
pop
mov
in
pop
fs
cld
cs
lods
imul
xchg
leave
orb
or
jmp
sbb
adc
dec
shrb
xchg
jo
sub
dec
mov
add
lods
add
cli
fs
xchg
add
mov
cwtl
fnstenv
dec
sub
mov
stc
lods
cld
dec
and
mov
adc
arpl
repz
or
mov
pop
adc
sahf
mov
add
fs
cmpsl
xor
into
nop
test
lret
push
jge
adc
sbb
or
cltd
sub
mov
test
mov
sub
loop
xchg
add
mov
mov
ljmp
push
mov
dec
add
mov
dec
arpl
bound
adc
or
mov
int
loop
repnz
mov
test
subb
adc
call
jno
push
mov
in
cmpsb
sub
lahf
out
lods
int3
mov
push
inc
push
in
repz
sub
sub
jnp
iret
out
push
pop
mov
out
cmpsb
sub
mov
stos
imul
push
in
js
stos
sbb
stos
jo
test
lret
shrb
jecxz
fdivs
aaa
push
jle
daa
dec
jb
arpl
sub
repnz
or
js
out
push
sub
sub
out
out
arpl
push
repz
cli
mov
imul
dec
loop
outsl
push
push
std
xor
or
sub
pop
cmp
add
mov
mov
xchg
push
pop
xchg
lods
pop
add
jb
stos
out
ficoml
pushf
sti
mov
imul
and
das
adc
sbb
jl
iret
movsb
fsqrt
mov
pusha
xor
sub
fisubs
cli
jecxz
ret
dec
cs
push
aam
scas
lcall
mov
push
pop
mov
out
sbb
push
and
loop
movsl
push
sub
dec
hlt
mov
adcb
ljmp
adc
xor
inc
sub
fcompl
sub
mov
sub
adc
adcl
sbb
cmp
loopne
lcall
lds
adc
dec
xor
into
and
paddsb
or
mov
sti
mov
push
ds
pushf
adc
test
jmp
int3
dec
aam
jmp
shr
xor
xchg
jge
or
adc
and
and
sbb
jg
mov
cs
ret
in
adc
fsts
xorb
mov
jmp
mov
jb
test
jl
xchg
loop
aas
jne
ficoml
mov
sub
jecxz
hlt
dec
dec
movsb
stos
arpl
rclb
scas
jp
pop
dec
push
sub
ljmp
in
cmp
mov
or
scas
adc
add
outsl
xor
leave
add
push
sbb
xor
mov
add
or
inc
mov
cmp
sub
and
dec
cmp
mov
mov
lods
cmovl
push
sub
pop
jo
insl
fisubl
mov
sub
and
outsb
rorl
xorl
leave
or
sbb
in
push
popf
cmp
scas
pop
mov
sahf
jo
add
inc
inc
mov
or
xchg
neg
pop
cmp
dec
mov
loop
iret
aas
push
inc
sti
imul
jg
ds
and
repz
sbb
jb
das
sbb
add
fisubrl
inc
fstpl
jbe
subb
or
push
loop
iret
and
gs
loop,pn
into
dec
fsub
out
ja
lods
and
mov
mov
out
mov
arpl
iret
add
aam
dec
mov
mov
jno
adc
loop
fistps
adc
mov
adc
pop
sti
sub
repz
cmpb
loopne
enter
jl
push
cld
out
loop
push
adc
sbb
push
dec
mov
xchg
test
and
lret
aad
std
test
push
fdivrs
sub
xchg
jp
insl
cmp
out
insl
icebp
arpl
mov
ja
out
mov
in
or
mov
bswap
in
sbb
mov
in
mov
scas
dec
or
rcrb
add
mov
mov
push
cs
scas
sub
mov
insl
rclb
lahf
sbb
dec
outsb
lods
aam
or
lods
fisubrl
mov
ss
scas
adc
jnp
jmp
aas
repz
sbb
loop
cltd
ficoml
pop
mov
xor
push
mov
xchg
scas
adc
aaa
add
dec
or
or
mov
mov
lcall
out
pushf
subb
out
jge
arpl
pop
mov
jecxz
rep
mov
push
mov
xor
ret
insl
mov
jge
fmuls
ret
pop
xchg
xchg
ret
lcall
ficoml
inc
popf
lods
enter
jmp
xor
shlb
push
into
or
lcall
push
adc
mov
popf
push
loopne
add
lods
mov
out
fsubrs
in
push
sub
sub
fisttps
or
jl
sub
pop
lcall
pop
sub
or
adc
lret
in
dec
lods
stos
pop
dec
ret
ret
and
mov
or
mov
test
pop
rcr
inc
insb
mov
push
sub
push
aas
in
adc
ljmp
adc
xor
cli
push
pop
mov
cmp
mov
adc
arpl
enter
sbb
roll
or
jge
push
adc
jae
sbb
jl
xor
icebp
sub
adc
scas
loopne
or
sub
push
ret
gs
ret
xor
mov
sub
sbb
and
je
das
dec
mov
adc
push
xor
dec
cld
out
push
dec
fsubs
push
imul
scas
ljmp
sbb
sbb
dec
jge
cld
outsl
das
lods
inc
dec
and
or
push
dec
push
sub
ret
ficoml
hlt
push
and
sbb
add
cmp
cli
aas
cs
xchg
out
mov
adc
imul
test
lods
addr16
stos
xchg
or
mov
les
add
sub
cmp
or
out
dec
adc
inc
xchg
std
in
mov
dec
icebp
dec
repz
outsb
push
inc
sbbl
mov
push
sbb
and
xor
into
add
imul
dec
or
fisttps
cmpsb
adc
push
cmp
xchg
lea
loop
pop
push
xor
loope
dec
adc
mov
and
sub
imul
xor
in
or
ss
push
shlb
arpl
or
test
and
jo
and
inc
das
sub
outsl
sub
iret
add
pop
adcb
dec
adc
or
cld
pop
outsl
mov
pushf
js
leave
fsts
out
sbb
and
test
push
pushf
or
sti
sub
jmp
popa
push
imul
dec
push
int3
out
dec
adc
mov
pop
mov
sub
arpl
out
add
sub
xchg
push
sbb
scas
std
mov
fcomps
sub
dec
scas
js
shr
call
inc
inc
mov
xchg
jge
insl
mov
int3
imul
shlb
sahf
jp
jae
nop
mov
in
popl
sub
inc
inc
popf
push
test
rcll
mov
in
pushl
dec
lret
and
daa
push
in
test
pop
pop
mov
out
out
pushl
lods
mov
sbbl
insb
dec
stos
sub
mov
cmp
loop
push
sbb
pushf
inc
sarb
mov
cs
loopne
sub
mov
mov
mov
in
or
je
ret
push
and
inc
add
push
into
xor
in
mov
jp
sbb
mov
inc
sbb
jecxz
sub
adc
add
daa
out
in
ret
imul
mov
inc
sub
jle
mov
ljmp
mov
test
out
sbb
push
pushf
mov
ss
in
adc
fildl
leave
je
shrl
addr16
sbb
stos
pop
out
mov
stos
dec
mov
xchg
es
ret
push
fs
mov
jb
xchg
pop
test
adc
mov
and
ret
insl
mov
ret
sbb
add
pusha
and
add
mov
out
sbb
inc
push
or
std
ret
popf
dec
in
xchg
cld
movsl
rol
push
mov
pop
sbb
mov
out
mov
dec
aam
jl
xchg
or
adc
cmpsb
add
pop
push
out
lcall
mov
sub
mov
repz
aas
mov
add
dec
out
rep
sub
scas
jo
lods
xor
imul
orb
add
inc
fwait
or
movsl
lcall
xor
call
int
xor
and
sub
ret
scas
push
loop
dec
mov
lods
inc
mov
mov
mov
jle
sub
rorb
dec
sar
into
add
out
push
pushf
pop
loopne
lea
test
push
jl
les
out
scas
lock
mov
dec
xchg
inc
stc
shr
int3
in
addl
andb
int3
fidivs
enter
js
iret
sub
mov
vpcomud
mov
lds
mov
jle
sub
pop
dec
loopw
adcb
fwait
int3
stos
popa
pop
loop
lahf
push
into
stos
les
pop
sub
cld
xor
push
pop
mov
mov
ret
outsb
adc
repnz
cwtl
insb
arpl
adcb
dec
stos
addr16
sbb
fstl
push
stos
sub
mov
enter
jle
mov
das
or
mov
adc
scas
xchg
leave
loop
cmc
pop
push
cs
mov
inc
sub
movsb
mov
or
mov
sub
sub
in
pop
push
loope
add
xchg
ret
insl
pop
inc
adc
movsl
add
xor
cld
andl
cmp
push
in
mov
in
stos
aam
dec
sbb
inc
loope
stos
imul
mov
xchg
ss
out
sub
sbb
pop
mov
insl
adc
mov
andl
cmpsl
xorb
outsl
sub
outsb
leave
cmp
jne
mov
insl
jge
dec
test
mov
dec
nop
inc
and
icebp
mov
sbb
mov
mov
lret
in
call
leave
cld
fiaddl
mov
imul
mov
sub
mov
add
dec
xor
mov
sub
inc
jmp
mov
outsb
out
out
loopne
xor
pop
test
add
xchg
or
mov
push
stos
in
add
aam
inc
out
ret
fidivrs
jge
lods
push
adc
ficompl
sub
mov
scas
loop
add
and
imul
pushf
shrb
cmp
insl
insl
pop
sub
inc
popf
mov
mov
mov
and
out
xchg
insl
mov
fldlg2
push
dec
adc
push
inc
clc
adc
out
decb
rcrl
xor
pop
add
sahf
roll
push
fwait
imul
stos
sub
imul
ret
add
std
or
ljmp
xchg
stos
rorl
cwtl
adc
xchg
out
outsb
lods
test
mov
fld
xor
cmp
ds
mov
xchg
outsb
lcall
or
jg
mov
scas
mov
fwait
ljmp
xchg
add
or
inc
es
ds
cwtl
adc
outsb
in
adc
fs
jnp
sbb
ljmp
stos
and
sub
mov
cltd
push
push
inc
cmc
and
add
adc
push
insl
adc
pop
push
mov
int
mov
or
jge
adc
mov
jbe
insl
fdivs
adc
out
dec
ret
dec
stos
or
pop
ret
jecxz
test
inc
imul
out
xlat
sub
enter
cmp
arpl
aad
imul
movsl
sub
outsl
mov
int
sub
sub
dec
rolb
out
jecxz
arpl
inc
cmp
dec
addb
or
add
or
lods
mov
enter
cld
sbb
loope
inc
cmp
sub
mov
cmpsb
sbb
sub
sbb
bound
dec
push
sub
sub
dec
mov
or
jmp
sbb
mov
shr
repz
arpl
outsb
cmc
leave
out
sbb
loop
arpl
stos
or
push
pop
lods
mov
fsubl
loop
push
das
mov
lret
ret
jl
mov
ja
lods
inc
and
jge
add
sbb
sbb
out
mov
fcompl
lea
fbld
loop
inc
outsb
das
arpl
or
inc
mov
test
mov
rolb
adc
sub
jecxz
add
push
mov
leave
cmpsl
xchg
jb
and
lahf
mov
jmp
into
pop
shrb
xchg
ljmp
adc
inc
sub
out
aam
jmp
leave
in
push
loop
imul
push
js
mov
lea
scas
add
mov
aam
das
dec
stc
loope
outsl
xchg
mov
aam
dec
sbb
out
or
dec
adc
out
fs
and
add
dec
inc
je
cmc
add
mov
jmp
push
aam
mov
pop
daa
pushf
ret
mov
pop
movsb
pop
sbb
mov
out
adc
ficoms
mov
stos
mov
xor
lods
push
mov
jno
or
ss
mov
enter
adc
push
lds
mov
inc
das
das
movd
shll
adc
xor
mov
fmull
fisttpll
fimuls
fistpl
dec
pop
cmpsl
mov
lahf
sub
mov
jnp
mov
andl
in
sbb
add
pop
imul
outsl
ja
ficoml
stos
sub
out
fiadds
into
push
dec
adc
lods
push
insl
xor
rcrb
int
xchg
scas
in
inc
leave
push
mov
add
xchg
gs
dec
cwtl
push
insl
sub
lea
jge
ljmp
sub
and
adc
lock
xor
sub
ja
hlt
xchg
outsl
or
xor
iret
lret
or
adc
popa
adc
subl
sbb
repz
shrb
out
add
cltd
daa
push
sarb
rorl
push
sbb
cwtl
inc
pop
mov
fs
push
iret
adc
aas
add
xchg
ja
jle
xchg
int3
dec
push
or
sub
les
imul
ja
cs
xlat
mov
outsb
cmp
mov
pop
addr16
sub
sahf
jne
je
fsubrl
xchg
sbb
jle
test
imul
subb
stc
aaa
mov
dec
lcall
sbb
ficompl
lahf
stos
scas
bswap
adc
frstor
fcomps
mov
rcr
out
dec
aaa
or
xor
scas
andl
out
jge
arpl
inc
push
outsb
mov
out
pushf
sbb
mov
xor
mov
fldlg2
in
dec
lods
arpl
mov
imul
imul
mov
clc
sub
push
pop
jmp
mov
mov
sub
aam
xchg
fmuls
arpl
and
pop
andb
in
xor
loope
xor
mov
cmp
pushf
push
fstps
lods
fisttpl
loop
push
push
repz
jbe
sub
inc
or
mov
in
pop
inc
ljmp
mov
jle,pt
out
ljmp
xchg
dec
xor
sub
push
dec
dec
sahf
cwtl
test
dec
adc
clc
test
mov
addl
imul
cld
cmp
mov
xor
and
adc
push
ljmp
loop
jg
xor
orl
sbb
sbb
xor
outsb
stos
mov
clc
mov
cmp
mov
adc
and
xchg
or
repz
mov
mov
mov
sub
jne
nop
cmpl
sub
dec
popa
sbb
xor
dec
popf
call
dec
dec
xchg
pop
les
dec
loop
aam
cltd
fcoml
in
cld
push
test
das
arpl
add
in
cmpsb
mov
mov
in
sub
push
ret
in
pushf
imul
into
cltd
outsl
ljmp
lret
xchg
jl
ds
add
stos
leave
pop
add
scas
in
adc
sbb
cmp
or
xor
mov
sub
ffree
mov
mov
imul
jecxz
test
sbb
roll
adc
mov
sub
cmpsl
sub
insb
out
jmp
test
mov
adc
les
dec
inc
lods
mov
sbb
adc
stos
loop
out
jge
ret
imul
dec
and
pusha
add
clc
loop
push
out
sub
ror
es
in
add
mov
push
sbb
arpl
and
sti
in
or
mov
adc
fsubrs
sub
enter
mov
xor
sub
cld
jg
fsubl
dec
or
jae
aam
push
mov
inc
mov
push
or
mov
pop
test
dec
and
adc
repnz
mov
test
pop
scas
or
cmc
pop
lods
test
loop
ret
lahf
and
dec
xchg
test
fsub
xor
mov
loop
movlhps
push
imul
shrb
ds
push
clc
test
les
in
dec
add
or
push
mov
cltd
jecxz
cmp
arpl
fsts
add
mov
mov
dec
cmp
scas
add
mov
sub
test
and
test
cld
es
mov
dec
mov
punpckhbw
mov
mov
scas
adc
jl
pop
lahf
addr16
fimuls
rolb
scas
dec
and
push
mov
adc
ja
or
jo
pop
mov
sbb
adc
dec
mov
cmp
jae
pop
idivl
loop
adc
inc
std
mov
or
jl
dec
dec
mov
test
nop
and
xor
jecxz
aaa
popf
cmp
adc
push
outsl
test
outsl
test
pushf
cltd
outsb
stos
pop
pop
repnz
xchg
ljmp
orl
jb
adc
mov
push
leave
out
out
outsb
mov
adc
lods
dec
sub
aam
mov
push
jp
sub
dec
mov
xorl
sbb
das
dec
xor
out
into
inc
arpl
ja
adc
jo
enter
add
arpl
jne
in
or
xor
add
and
mov
push
jno
out
aad
adc
bnd
ret
and
pop
xor
lods
sbb
mov
ret
or
lcall
fsts
adc
xchg
mov
and
mov
addps
test
sub
fdivrl
ja
sub
scas
mov
inc
in
outsb
jg
jl
xchg
lret
in
repz
sbb
mov
out
mov
sub
xor
arpl
pop
aas
int
or
loop
push
jbe
lea
mov
shrb
leave
insl
pop
arpl
stc
sub
cmp
jl
popa
orl
out
jl
xor
into
xchg
call
pop
sub
popa
or
in
add
stos
out
and
xor
out
push
xor
dec
outsl
rcrb
enter
sbb
add
mov
xor
lcall
sub
push
bound
or
ret
rcll
call
inc
test
repz
sbbl
cs
adc
mov
ds
mov
xor
in
test
arpl
adc
movsb
push
add
jmp
and
test
mov
or
mov
test
dec
rclb
jp
or
xor
push
pop
clc
movsl
cmp
mov
dec
inc
cltd
movsb
xor
or
pop
adc
pushf
daa
outsb
in
out
insb
movsl
xor
inc
scas
in
pop
sbbl
mov
xor
cmc
loopne
fisubrs
xor
stc
out
loop
jle
mov
fisubs
ret
out
pop
scas
sub
sbb
mov
mov
add
test
mov
in
sub
pusha
mov
xor
sbb
add
adc
or
arpl
adc
dec
mov
js
or
or
mov
arpl
leave
mov
jmp
mov
mov
stos
sbb
stos
scas
lds
cld
pushf
stos
sub
mov
std
or
and
incb
dec
mov
das
pop
mov
dec
dec
inc
push
sub
xchg
mov
cmc
arpl
mov
lea
pop
ret
test
mov
jle
scas
pusha
in
shrb
loope
xor
mov
jo
lea
mov
sub
ret
ja
test
movsl
dec
lds
jecxz
sub
adc
inc
mov
xor
arpl
sti
in
jns
xchg
sahf
mov
fnsave
jb
sbb
mov
lcall
adc
xchg
xchg
enter
jge
nop
add
pop
cmp
mov
add
into
inc
sbbb
out
adc
mov
in
lret
jmp
imul
dec
repz
push
aas
xchg
xchg
arpl
dec
imul
nop
arpl
enter
or
cwtl
sbb
mov
imul
or
lods
movlps
cmpb
or
movsb
push
xlat
mov
pop
inc
jp
jle
sub
lods
loop
insb
xor
stos
insl
inc
push
add
das
in
pop
jg
adc
stos
fs
cmpsb
sbb
mov
sub
dec
mov
add
inc
and
push
scas
cmp
adc
push
insl
mov
orb
mov
into
lods
jecxz
outsb
lcall
hlt
xor
aam
mov
sub
jl
jle
inc
pushl
sbb
xchg
xor
sti
outsl
or
pop
sbb
pop
or
inc
sbb
and
jno
cmpsb
push
into
loopne
sub
sbb
adc
ds
pop
inc
jne
aad
imul
sub
inc
loop
leave
push
add
mov
gs
outsb
mov
jge
or
adc
xchg
arpl
cmpb
xchg
mov
push
inc
sti
outsl
mov
in
cli
lods
icebp
jb
dec
push
outsl
add
mov
jle
add
push
cmp
pop
sbb
std
xor
stos
in
inc
xor
push
push
jo
push
fucom
jle
out
out
jmp
pop
fsts
iret
mov
or
scas
int3
pop
mov
out
xchg
xchg
stc
orl
std
out
mov
ja
lcall
outsb
xor
cli
and
xchg
and
add
cwtl
sub
outsb
mov
lahf
or
pusha
js
xor
nop
std
adc
adc
movsb
int3
adc
adc
mov
inc
xor
stc
imulb
sbb
insl
aaa
xchg
pop
adc
add
lcall
in
xchg
and
mov
out
push
pop
inc
inc
mov
or
jl
sahf
mov
insl
xor
lahf
je
adc
outsl
sti
lahf
mov
add
jo
add
leave
ret
in
push
cwtl
push
dec
sbb
adc
add
mov
repz
jle
push
sbb
mov
mov
sbb
mov
inc
dec
imulb
ret
xor
or
mov
cmp
mov
cmp
adc
push
inc
rolb
in
sahf
outsl
scas
in
addr16
jb
sahf
mov
add
cmp
shrb
loop
out
rcl
arpl
mov
movsl
push
in
ret
mov
mov
pop
xchg
adc
jp
add
mov
pop
sar
or
sub
hlt
fstl
and
add
cmpsb
sub
and
cwtl
in
mov
dec
pop
jge
add
cmp
aad
test
push
jecxz
mov
dec
stos
out
cltd
das
arpl
pop
mov
bound
jmpw
cmpsb
arpl
add
dec
push
and
fsubs
or
push
sub
dec
lods
in
push
jb
mov
cmp
jecxz
std
sbb
push
fisubrs
and
stc
inc
stos
flds
stos
enter
daa
out
mov
fs
fdiv
add
mov
mov
in
pop
jp
outsl
dec
insl
xor
sub
shr
pop
popf
xor
pop
or
arpl
mov
out
xlat
pop
sbb
shl
mov
fldl
fimuls
adc
fcmove
xchg
cmpsl
xlat
insb
mov
test
inc
cs
lret
or
scas
adc
add
int3
insl
inc
ficoms
stos
aad
outsb
push
int
xchg
and
dec
mov
mov
xchg
mov
dec
cmpsb
sub
shr
out
ds
lcall
and
mov
cld
pop
ljmp
call
push
pop
cmp
lcall
mov
inc
mov
lahf
lret
in
imul
or
imul
das
aam
cmc
out
outsb
mov
push
mov
cmp
repnz
dec
push
mov
sub
push
pusha
enter
adc
and
sbb
mov
outsl
rcl
sub
mov
ss
pop
sahf
sub
scas
mov
cmp
cmp
cmp
adc
insl
das
push
dec
push
sub
pusha
sbb
or
mov
add
or
mov
lods
xlat
dec
call
pop
aad
scas
xor
das
in
fst
dec
in
or
xor
sub
mov
scas
cwtl
pop
sub
inc
dec
cmp
pop
icebp
inc
push
fimuls
test
fiadds
xor
mov
pusha
sbb
push
dec
fistpl
inc
push
mov
mov
scas
xchg
jp
jle
inc
out
push
dec
lods
test
arpl
mov
sub
dec
test
insl
ret
lds
sahf
cwtl
lea
gs
sub
addr16
sub
or
sbb
and
jge
or
movsb
and
adc
iret
and
mov
popf
mov
dec
adc
addr16
cmc
jl
and
sbb
cs
cmp
push
imul
fisubl
inc
mov
sbb
xchg
lods
or
mov
nop
mov
enter
scas
ret
decb
sub
test
sbb
add
xchg
and
mov
sub
lds
sarl
imul
scas
popw
mov
insb
mov
pop
adc
sub
pop
mov
mov
in
jg
sub
aas
xchg
movsb
cmpsb
and
push
hlt
scas
dec
cltd
out
cs
stc
nop
imul
xchg
push
mov
das
scas
rolb
stos
mov
mov
jno
mov
mov
push
push
stos
test
mov
add
in
adc
into
pusha
in
enter
enter
stos
in
and
bound
jno
lea
inc
bound
push
je
xchg
xchg
popf
mov
jne
imul
or
adc
rcll
gs
push
add
sbbl
js
les
out
in
cmp
test
dec
jl
xor
push
mov
mov
roll
nop
mov
inc
cwtl
push
dec
mov
xor
or
inc
in
outsb
mov
rclb
ret
aaa
loop
xor
pop
scas
and
sub
lahf
lock
into
call
ror
sub
insl
push
mov
mov
xor
sbb
out
fsubr
push
mov
inc
jmp
or
mov
das
enter
sub
dec
je
sub
pop
dec
cmpsl
xchg
js
push
mov
push
into
mov
ret
pushf
ficompl
subb
jecxz
pop
inc
das
adc
out
in
add
push
jmp
inc
outsb
gs
sub
jno
push
imul
sbb
je
sub
in
mov
push
dec
js
dec
xchg
rcll
insb
and
push
les
std
mov
outsb
loop
sbb
sar
loope
add
jno
jecxz
fs
add
add
ss
leave
or
sub
sbb
pop
shrb
jns
out
std
sub
mov
mov
pusha
mov
shrl
or
lret
xchg
sub
insl
inc
mov
test
bound
sbb
jmp
mov
or
ret
xchg
mov
mov
test
stos
icebp
stos
push
xchg
scas
jmp
or
adc
sub
or
dec
mov
lods
int3
jne
dec
cmp
into
out
jecxz
sbb
and
fnsave
dec
push
pop
and
bound
ret
ret
mov
mov
sbb
or
jecxz
cmpsb
mov
cmpsb
and
in
inc
fmul
sbb
add
and
lock
or
or
inc
adc
int3
dec
push
sub
dec
add
in
sahf
lret
outsb
adc
sub
aas
cmpsl
out
mov
lods
arpl
mov
and
sbb
xor
loope
test
scas
fcmovu
es
repz
rclb
lods
sbb
jl
sub
dec
rcrl
dec
jne
imul
lods
pushf
and
popf
sbb
pop
test
adc
pop
adc
add
scas
sub
ljmp
sahf
dec
insl
jl
sub
fstpt
sbb
jno
jecxz
iret
out
mov
adc
sti
add
mov
loopne
es
and
dec
scas
inc
sub
cld
jl
or
xchg
sti
dec
loop
ja
outsl
add
xchg
arpl
sbb
cmp
jge
lods
inc
outsb
sub
lods
pusha
dec
xor
mov
sar
mov
out
pushf
loopne
mov
das
aam
loop
stc
adc
mov
or
dec
in
into
jbe
lock
leave
jns
cli
mov
mov
adcb
add
outsl
out
outsb
jle
out
addl
loop
ficompl
sub
or
arpl
jo
push
out
adc
adc
outsb
fstl
mov
push
xor
orl
jge
arpl
mov
setb
out
or
pop
fs
movl
mov
in
fisubrs
daa
mov
fs
mov
and
jb
xchg
aad
mov
mov
ss
mov
jns
sub
in
aam
lods
push
movsl
js
sub
adc
ret
in
xor
lods
arpl
int
adc
jne
dec
add
out
aas
pushf
stos
mov
lods
pop
push
xor
xchg
push
xchg
fisttpl
mov
sub
add
xor
adc
or
sub
xchg
out
repz
lods
lret
scas
xchg
or
pop
ret
pop
push
out
enter
adcb
xlat
into
push
add
test
add
cltd
fistpl
jne
sub
jbe
imul
sub
fucomip
fidivs
sub
or
in
mov
mov
stos
bound
sub
shr
mov
stos
sub
mov
jo
das
stos
mov
stc
fwait
or
jecxz
pop
jbe
mov
mov
xor
outsb
mov
outsb
in
leave
loop
lcall
dec
cmp
adc
xor
pop
repz
add
out
push
out
or
xor
ljmp
or
mov
leave
sub
sub
cmp
inc
out
sbb
imul
outsb
adc
mov
fidivrs
popa
scas
int
lods
aaa
push
mov
sub
jle
or
sub
cli
out
jno
jnp
adc
bound
mov
mov
sarl
sub
push
call
out
outsb
outsb
std
push
lods
icebp
pop
xchg
adc
lcall
jge
and
lahf
daa
mov
or
jl
scas
outsl
insl
int3
arpl
mov
lods
sub
icebp
fimuls
xor
sbbl
in
insb
iretw
dec
xchg
sti
lea
fwait
adc
fs
mov
jmp
jle
jnp
xor
inc
lcall
mov
and
xor
in
loop
insb
push
cmp
jle
ljmp
sbb
sti
dec
add
das
mov
ret
sub
xor
add
jge
inc
cld
iret
imul
ret
xor
xor
out
loope
imul
jp
mov
dec
dec
and
ret
sub
cvttps2pi
xor
push
int
inc
out
mov
insl
test
jle
mov
in
je
pop
mov
mov
or
mov
dec
adc
fcmovnb
test
sub
outsb
add
int3
or
out
pop
and
fstl
pop
test
dec
mov
mov
fisubrs
leave
jo
mov
arpl
xor
lods
leave
adcl
or
mov
pop
loopne
sub
fistpll
fisubrs
and
out
cmp
lret
test
mov
ljmp
into
sub
cmp
push
dec
cmpsl
sub
inc
pop
xorl
pop
mov
sahf
fistl
outsl
mov
leave
inc
outsl
jl,pn
sub
mov
push
lods
jge
cs
add
scas
sarl
insb
lcall
test
jns
fs
dec
dec
out
movb
das
xor
and
and
andb
adc
fsubrl
lea
sahf
leave
xor
mov
lret
fists
sub
loop
mov
and
fstl
and
outsb
mov
test
das
out
mov
or
in
stos
mov
cmp
mov
into
outsb
fsubrs
mov
jle
lods
mov
jge
scas
je
pop
lods
or
and
push
sti
dec
or
scas
enter
push
push
ljmp
xchg
and
push
mov
jno
push
jmp
cmp
sbb
or
or
push
scas
nop
add
jno
test
xchg
xchg
in
pop
pop
mov
int3
stos
dec
sahf
out
or
push
leave
bound
add
xchg
test
scas
pop
jmp
shl
jbe
in
out
or
enter
mov
dec
pop
ja
into
in
inc
or
sbb
pop
sub
js
mov
sbb
lods
stos
add
mov
mov
push
push
outsb
lods
or
test
or
lahf
jecxz
xchg
jmp
ret
dec
jl
in
in
sbb
sarl
or
jl
cwtl
movsb
in
adc
xor
outsl
ficoms
test
push
lods
ret
ret
or
lods
cmpsl
jo
out
cmp
and
aas
inc
mov
add
mov
mov
lahf
push
adc
outsl
sbb
mov
add
outsb
sub
sbb
xlat
cs
pushf
pop
cmp
sbb
and
push
jl
sbb
sti
repz
mov
push
les
je
in
xchg
ficompl
int
xor
int3
cs
or
rol
jecxz
mov
das
adc
iret
sub
cld
es
out
adc
out
xorl
rorb
repnz
xchg
imul
mov
adc
insl
push
and
jmp
call
call
and
push
ljmp
adc
or
aas
lods
xor
leave
or
cwtl
inc
mov
sub
rolb
mov
mov
mov
push
ficompl
scas
out
cmp
and
lods
stos
jl
outsb
ljmp
loop
leave
push
int
fsubrl
mov
mov
xchg
mov
outsl
fisttpl
add
mov
add
call
loopne
cs
mov
scas
and
js
sbb
lods
call
or
mov
mov
popf
mov
je
jle
or
jge
adc
out
mov
mulb
adc
movsl
in
jns
push
cmc
stos
cmp
xchg
xor
repz
ret
and
push
inc
insl
sub
ret
je
jecxz
add
adc
and
cmp
sbb
sub
out
scas
jno
push
pop
xchg
in
es
pop
stc
scas
insl
je
and
jl
push
add
imul
clc
sub
xor
lods
add
inc
sub
cmpsl
push
ljmp
adc
pop
dec
lret
dec
xchg
iret
or
fisubl
dec
je
pop
imul
sti
bound
sarl
stos
aam
imul
imul
inc
jmp
sbb
fisubl
ret
in
test
dec
ja
into
out
out
xchg
hlt
jp
jo
insl
sti
and
xor
adc
adc
outsb
stos
mov
and
and
xchg
or
iret
ret
adc
cmc
cmp
int3
sbb
sub
or
pop
test
es
arpl
cltd
in
scas
sahf
iret
ret
arpl
and
int
push
cmpsb
sub
stc
hlt
cmp
shrb
or
in
xor
sub
das
in
sbb
test
int3
pop
pop
into
cld
gs
loop
sub
or
cmp
mov
in
adc
aas
loopne
mov
dec
xchg
adc
mov
stos
jmp
outsb
mov
push
ret
cli
icebp
adc
sbb
decb
jmp
mov
mov
dec
push
pop
and
stos
pop
push
push
and
push
jge
fistpl
lea
orl
fsubrp
shl
mov
mov
fildll
data16
sub
or
fmulp
mov
ret
sub
sbb
or
out
jbe
jecxz
mov
outsb
cmp
popf
and
adc
insl
mov
xchg
bound
or
bndstx
mov
add
inc
call
lds
sbb
sbb
mov
push
lcall
pop
xchg
inc
out
add
or
icebp
push
cmpl
and
ret
in
add
adc
push
pop
out
lds
dec
testl
aad
xor
sbbb
aas
push
fdivs
insl
mov
movsb
mov
in
pop
inc
repz
mov
and
push
mov
fldt
adc
sarl
sub
jl
cmp
outsb
rcll
sbb
pop
push
dec
fisttps
movsl
test
sbb
inc
push
sub
ja
cmp
jp
adc
pop
scas
or
iret
imul
ret
jnp
inc
sahf
loop
jl
call
push
dec
jle
sub
icebp
jne
das
enter
jg
pop
out
cmp
insb
in
hlt
push
in
push
femms
scas
je
daa
in
or
push
filds
add
jge
xchg
or
mov
push
test
jbe
mov
lock
mov
dec
xchg
lea
imul
rorl
adc
addl
aam
mov
push
outsb
or
adc
mov
sub
out
enter
xor
scas
push
jnp
out
mov
sub
mulb
jmp
cmpsb
popf
jno
cmpsl
add
shrd
jge
jmp
test
add
cmp
enter
outsl
dec
test
ds
shr
adc
in
mov
in
push
dec
into
lods
push
or
cmp
or
mov
scas
sub
fadds
jmp
call
push
mov
scas
arpl
xor
call
xor
and
bound
sti
test
adc
dec
leave
scas
outsb
dec
pop
sub
ret
and
arpl
imul
and
divb
popf
push
dec
insl
jl
or
xor
psrld
mov
imul
adc
xor
aam
icebp
ljmp
sbb
mov
jmp
sub
imul
les
cmp
insb
add
stos
into
adc
inc
cmc
addl
call
cmp
pop
in
mov
aas
sub
or
into
shlb
fdivrs
loop
pop
push
xchg
mov
sub
ret
cwtl
pop
sub
xor
roll
or
sub
pushf
stos
jge
in
sub
xchg
sbb
in
in
and
nop
lods
or
or
sbbb
adc
jne,pn
xor
adc
inc
repz
test
cs
cld
out
xchg
enter
pop
arpl
dec
bound
sub
loop
xor
dec
mov
arpl
insl
es
lea
xor
stos
lahf
clc
sbb
int
pop
xchg
das
test
out
fidivs
mov
imul
add
pop
sub
xor
pop
movl
mov
stos
aam
sbb
fnsave
in
cmp
leave
jecxz
pop
es
pop
sbb
arpl
insl
inc
adc
pop
dec
xor
insb
ljmp
lret
sbb
mov
push
cmp
sbb
mov
xor
fs
pop
inc
ljmp
loop
test
pop
mov
popa
jnp
arpl
sarl
fnstenv
sub
sub
test
das
dec
inc
adc
ja
in
push
out
addr16
cmp
add
mov
mov
dec
mov
mov
iret
or
jmp
mov
dec
mov
and
or
daa
out
add
shll
cld
jge
mov
and
sbb
mov
shr
in
push
push
mov
dec
scas
in
lret
orb
fs
xchg
ret
mov
mov
stc
or
data16
rclb
push
mov
imul
or
and
cmp
shlb
ror
jno
pop
push
iret
mov
incl
xchg
push
lea
int
push
adc
xchg
push
jmp
dec
mov
outsl
fs
mov
push
arpl
imul
mov
addr16
mov
xor
mov
add
dec
push
decb
jecxz
adc
push
sub
cld
mov
in
les
jecxz
test
or
sbb
and
pop
je
sbb
adc
push
insl
mov
stos
jne
int3
adc
adc
or
jge
adc
xor
arpl
mov
ret
add
das
push
pushf
pusha
cltd
sub
lods
add
cmpsb
lods
or
dec
xchg
xor
xchg
mov
mov
int3
aad
mov
sbb
or
push
in
cs
sarb
pushf
add
mov
push
insl
sub
jne
sub
sub
sub
push
pop
test
decl
clc
outsl
lock
inc
xchg
mov
xor
stos
outsb
xor
sub
xchg
scas
add
out
mov
sub
pop
adc
pop
push
stos
mov
adc
psrlw
cli
ss
test
dec
clc
pusha
out
push
imul
add
push
sub
sbb
ret
adc
sbb
shll
in
int
cmc
pop
ljmp
fs
lcall
jecxz
arpl
mov
sahf
dec
lea
and
adc
ret
es
in
adc
push
and
sbb
mov
push
imul
pop
pop
in
in
loopne
sub
shl
or
xchg
push
scas
mull
leave
xchg
pop
movsb
adc
push
lcall
outsb
lahf
lea
sub
cmp
stos
andl
das
adc
adc
cli
push
sub
test
mov
jl
pop
xor
mov
xchg
fstpl
add
sub
lcall
and
or
ret
pop
cld
test
sbb
mov
or
stos
push
in
in
stos
pop
adc
mov
mov
pop
test
or
pop
loope
enter
push
inc
into
repz
das
imul
mov
stos
cmc
or
icebp
aaa
xchg
and
stos
stos
adc
push
adc
cmp
cmp
sub
jl
les
stos
xchg
shl
xor
test
push
pushf
popa
adc
pop
bound
jecxz
stos
pop
sbb
jge
lods
je
mov
dec
push
mov
mov
mov
inc
mov
popf
scas
inc
cltd
pop
jnp
insb
sub
mov
pop
push
pop
js
arpl
push
inc
or
out
dec
adc
ljmp
std
nop
push
pop
mov
mov
sti
dec
lock
ret
and
xchg
push
mov
mov
jb
sub
adc
xlat
mov
cs
nop
arpl
push
rcrl
jae
lcall
and
arpl
push
jl
pop
xchg
inc
sbb
loopne
push
imul
and
add
sub
pop
aas
fsubrp
lret
mov
pop
bound
and
push
psubd
movsl
push
ret
gs
jmp
push
sub
adcb
push
push
push
mov
cmpsl
scas
sub
xor
stos
out
cmp
loop
mov
cli
jmp
js
and
or
out
sub
jl
subl
dec
and
xchg
loopne
lods
sub
stos
ja
in
mov
or
sbb
or
mov
jge
outsb
scas
pop
mov
and
sub
lcall
test
int
sub
mov
mov
adc
xchg
or
shrl
je
fildll
jne
cmp
clc
scas
les
push
int
ljmp
mov
imul
aas
adc
and
mov
jecxz
push
jp
push
lods
ret
inc
rcl
pop
inc
adc
lea
jecxz
in
or
shr
insl
sbb
xlat
sub
xor
push
sbb
test
out
mov
mov
xor
or
lret
or
pop
stos
repnz
pop
stos
adc
outsb
sub
push
out
sbb
xchg
or
mov
iret
imul
jmp
rcrl
and
mov
xorb
dec
scas
mov
dec
and
daa
sbb
fwait
cmp
sub
jl
or
push
ret
mov
mov
pop
call
mov
insl
add
das
mov
mov
lahf
add
or
inc
popa
dec
add
in
jp
jb
icebp
in
insb
mov
pop
out
das
push
mov
xchg
ficompl
fisttpl
test
sub
jne
imul
imul
loope
loop
gs
in
fwait
lret
cli
sub
scas
leave
sub
push
mov
xor
or
rorl
xchg
insl
or
xor
aas
cmp
scas
cmp
mov
out
arpl
xchg
insb
in
cld
sub
inc
loop
push
adc
test
mov
jg
loop
sbb
sub
inc
call
enter
stos
sbb
rorl
pop
cmp
fistpll
insl
jns
out
mov
add
out
push
pop
xchg
and
sub
adc
lcall
mov
xchg
push
mov
pop
in
arpl
mov
push
mov
shlb
sbb
cltd
arpl
and
sub
call
sub
pop
dec
sbb
mov
stos
mov
add
pushf
sub
insb
clc
scas
and
xchg
ret
lods
mov
out
cwtl
cmp
jecxz
mov
mov
mov
in
jecxz
mov
adc
sahf
pop
or
imul
jno
push
mov
shlb
int
cltd
outsl
add
dec
mov
or
jmp
or
dec
loop
mov
mov
xor
mov
sub
fldenv
adc
push
mov
sub
shrb
and
ds
sbb
and
not
xlat
sbb
push
test
call
xchg
mov
xchg
lods
mov
xor
inc
mov
dec
add
cmp
xchg
and
scas
int
sub
push
sub
adc
cmpsl
xor
jge
sti
add
push
ret
adc
outsl
xor
shr
popa
push
mov
dec
stos
das
out
mov
or
push
mov
jge
scas
cmpsb
enter
or
cs
push
cmpsb
xor
out
mov
test
shrl
arpl
xor
cmp
mov
in
iret
out
cmp
jl
lods
xchg
aam
sarb
pop
aas
sbb
dec
cmpsb
sub
mov
mov
push
insb
sub
dec
fists
dec
cmp
ljmp
mov
arpl
mov
jl
and
ret
in
push
push
hlt
fsubl
mov
insl
or
add
jno
xchg
mov
insb
ret
push
arpl
or
mov
aam
and
xor
scas
sub
cmpsb
cmpl
xchg
scas
in
ret
xor
pop
mov
mov
das
jo
add
mov
ret
cmpsb
sub
or
pop
or
je
cmp
into
push
adc
xor
lods
add
jb
orl
fptan
jg
insl
push
popf
leave
sbb
or
pop
ret
xor
inc
and
lods
mov
mov
sbb
push
push
scas
adc
lahf
dec
sub
sbb
jne
sub
stos
div
pop
fmuls
mov
leave
repz
test
in
mov
jmp
xchg
out
xor
add
pop
pop
cmpsb
mov
sbb
or
push
ljmp
sub
lods
int3
out
cmp
mov
or
cmp
mov
xchg
in
sub
outsl
sub
aaa
push
jge
ljmp
cmp
push
stos
mov
sub
dec
stos
into
testb
rorb
outsb
outsl
and
pusha
stos
add
sahf
push
dec
sbb
clc
jl
imul
add
or
outsb
repz
xchg
push
stos
scas
subb
and
shlb
sbb
out
xlat
cli
mov
xchg
or
sbb
dec
daa
sbb
adc
fisttpll
aam
or
xchg
in
repnz
push
mov
or
sar
mov
adc
sbb
sbb
test
pop
inc
adc
jbe
sbb
fisttpll
mov
push
push
int3
dec
and
sbb
nop
xor
dec
push
movsb
int3
insb
jbe
stos
mov
outsb
xlat
xor
cltd
out
out
shll
jp
loop
aas
push
sub
dec
and
and
jge
sbb
sub
repz
sub
mov
mov
push
add
test
mov
cli
into
xlat
fsubrs
nop
jle
incb
in
fs
mov
bnd
ss
das
push
cmp
fdivr
sbb
mov
pushf
aad
lock
out
insb
dec
scas
adc
inc
inc
and
cli
lret
icebp
inc
sub
cmp
pop
gs
push
call
je
lds
arpl
xchg
jne
push
mov
push
add
mov
or
mov
push
pop
pop
sub
fstl
adc
or
or
shlb
daa
jle
dec
insb
scas
gs
adc
dec
adc
outsb
lahf
mov
mov
jns
adc
push
dec
outsb
data16
test
shr
shrl
rclb
adc
jno
ds
adc
and
out
es
and
inc
ja
mov
dec
jle
sub
popf
data16
jno,pn
test
sti
jno
jg
jmp
scas
mov
mov
sbb
mov
fs
mov
mov
cwtl
out
sahf
or
stc
push
out
and
mov
sbb
movsl
xor
jl
loop
fisubrl
ret
movsb
sub
mov
xlat
in
or
call
out
cmc
dec
out
shll
add
call
roll
mov
in
jmp
daa
mov
dec
in
xchg
xor
sbb
dec
sti
push
test
loop
in
inc
fcoml
scas
push
mov
adc
push
pop
insb
sub
jge
mov
call
add
adc
adc
sbb
xchg
imul
xchg
js
jl
jne
add
pop
sub
aas
mov
out
push
cwtl
add
xchg
pop
insb
push
fxch
dec
nop
mov
adcb
pop
pop
fs
push
ret
mov
and
scas
iret
or
outsb
outsl
add
stos
pop
fistpl
dec
shlb
mov
sub
into
setp
push
lods
fcmovnbe
inc
xchg
iret
out
xchg
xchg
loop
lcall
xor
add
mov
cld
and
add
jns
lea
es
lock
pop
movsb
fstpl
mov
mov
push
xor
xchg
repz
pushf
adc
fimuls
in
loop
mov
out
adc
mov
add
add
mov
xor
jmp
sub
imul
repnz
push
adc
adc
rep
jp
push
call
scas
fldt
dec
push
pusha
and
cs
or
adc
or
mov
loopne
xchg
insl
ret
push
ret
sub
adcl
inc
sbb
out
sub
fdivrl
out
in
pcmpgtb
ret
in
xchg
or
insl
ret
mov
sbb
sub
mov
ret
fs
jg
imul
sub
jns
cs
outsb
jb
mov
lea
mov
inc
or
cmpps
mov
jb
in
or
cmc
leave
ficomps
mov
mov
add
cmpsb
pop
lret
outsl
imul
adc
adc
lods
mov
cmp
or
dec
mov
scas
xor
call
scas
lret
jecxz
fmul
adc
sub
sbb
fnstsw
mov
scas
pop
out
fidivrs
lods
dec
scas
test
fstl
mov
or
sub
shll
jg
sub
jbe
lahf
lcall
mov
sti
mov
fimuls
sub
dec
testb
and
and
add
loop
sbb
mov
mov
imul
stos
aam
inc
sbb
fs
mov
addr16
subb
mov
ret
loop
je
add
rclb
shlb
lcall
push
imul
imul
xchg
or
dec
shrb
add
popa
add
push
and
pop
out
mov
fildll
push
mov
cmpsl
rcr
inc
cmp
loop
mov
cltd
lods
clc
je
lret
insb
and
sbb
push
sbb
aam
or
in
adc
ss
stos
push
imul
jecxz
je
in
pop
outsb
jmp
sub
sub
jns
mov
arpl
sbb
imul
movl
test
mov
ss
add
pushf
adc
and
pop
lock
and
mov
mov
mov
and
test
xor
mov
push
mov
pcmpeqw
pusha
scas
pop
or
pop
sub
add
jge
nop
jp
jbe
mov
mov
add
mov
or
and
xchg
jbe
loop
xor
xor
push
bnd
xlat
insl
scas
int3
mov
pop
jno
adc
pop
push
lods
out
mov
arpl
mov
or
or
ret
mov
sub
arpl
add
das
push
repz
pop
xchg
mov
and
imul
xor
cld
or
mov
adc
inc
fs
xchg
xchg
imul
jge
insl
adc
mov
out
cmp
xor
fsubs
mov
dec
pop
or
enter
sub
xchg
dec
adc
enter
imul
push
dec
xor
adc
scas
push
mov
jl
push
ret
ljmp
sub
outsl
or
popf
sub
decb
movsl
push
sub
imul
pushl
dec
adc
test
outsl
mov
lods
cmc
out
mov
dec
cmp
sti
mov
fwait
push
out
scas
sbb
add
imul
stos
sub
sbb
les
push
jmp
cmp
cli
sub
mov
adc
sbb
movsb
xchg
adc
mov
sub
ljmp
add
sahf
adc
pusha
loop
cli
sbb
int
xchg
or
adc
icebp
shr
dec
or
cmp
loope
sub
andb
je
scas
cltd
xor
lods
sub
ljmp
movsl
stos
mov
out
in
mov
ljmp
xor
inc
jecxz
lock
adc
add
xor
into
add
stos
jge
pop
mov
mov
leave
cmpsl
jns
push
pop
into
lcall
adc
ret
add
nop
dec
mov
pop
pusha
mov
or
and
dec
jne
cli
inc
lret
lods
outsb
sub
xor
add
add
cld
or
or
push
out
add
ret
push
arpl
clc
out
lock
ja
mov
push
popa
mov
inc
ds
arpl
push
add
mov
aad
scas
mov
sbb
es
mov
inc
or
xchg
dec
sub
xchg
fdivrp
xchg
sahf
push
leave
sub
rolb
dec
push
and
into
cmp
ljmp
lods
mov
orb
lret
xchg
mov
mov
bound
repnz
scas
ds
pop
shlb
leave
int
insb
scas
push
jmp
dec
fwait
nop
sub
enter
andl
stos
loop
dec
sbb
fs
or
ret
sub
loopne
mov
shrb
xor
cmp
adc
rcr
mov
add
inc
dec
or
sub
daa
xorb
sbb
add
xlat
jmp
insl
mov
test
pusha
std
jecxz
fs
or
lds
sbb
mov
lea
sbb
mov
push
lcall
aam
in
in
mov
xor
xor
movsl
insl
lret
imul
dec
arpl
mov
orb
imul
mov
mov
sub
mov
pusha
in
out
mov
or
imul
imul
stos
cltd
movsl
jge
adc
into
stos
lahf
ljmp
add
pop
sbb
fs
adc
out
sub
arpl
sub
mov
sub
adc
mov
sub
call
or
xlat
fldcw
add
loopne
das
test
inc
mov
jnp
imul
mov
ret
lcall
cmp
sbb
xor
push
adc
jmp
int
adc
push
mov
mov
xor
in
xchg
ret
loopne
cli
sti
xor
adc
out
adc
push
mov
daa
out
jecxz
sbb
pop
push
popf
mov
inc
xchg
add
mov
xchg
or
and
mov
dec
rol
push
fs
cld
sub
dec
push
xor
imul
dec
inc
gs
sub
arpl
pop
outsb
sub
test
ret
in
mov
lahf
push
pop
jg
imul
lcall
imul
imul
jnp
adc
les
loop
mov
es
out
imul
lahf
sub
ss
stos
add
push
gs
scas
sbb
mov
jl
or
aas
mov
mov
or
mov
in
cs
add
jnp
push
imul
mov
jecxz
mov
add
and
enter
add
adc
mov
mov
je
dec
adc
sub
xor
loop
out
jbe
pop
aas
mov
xlat
mov
ljmp
insl
je
xor
jl
or
in
dec
scas
cltd
ret
sbb
imul
push
sub
fwait
das
jo
das
inc
add
imul
dec
pop
sarb
stos
in
xlat
shlb
dec
jno
mov
out
das
das
pop
mov
sub
xor
iret
or
jge
rcll
insl
ret
jnp
in
cmp
fsubrl
or
sub
and
xor
imul
mov
insl
fs
or
jmp
sub
xor
mov
mov
ret
mov
loop
std
xor
int
xlat
mov
lret
jge
lock
icebp
aas
data16
add
or
call
lea
into
mov
mov
fcmovbe
xlat
pop
sub
mov
stos
sub
inc
cmp
xor
sbb
outsb
add
sbb
fcomi
jne
mov
jg
subb
cmp
enter
mov
push
dec
fwait
nop
test
dec
lret
xchg
imul
push
sub
sbbb
loop
int
pop
shlb
popl
aam
or
dec
sbb
das
push
pop
je
sbbb
dec
xor
loop
out
push
int
repz
and
add
data16
mov
sub
mov
sub
pop
imul
rorb
js
mov
arpl
ds
sub
lods
mov
das
push
xchg
mov
pop
mov
cmp
inc
sbb
adc
test
add
repz
push
jl
pop
out
xchg
push
xchg
sbb
adc
xchg
push
es
push
jo
sub
dec
mov
push
mov
ret
xchg
sub
faddp
mov
popa
test
out
call
sub
int
or
or
sub
iret
or
out
push
sub
int
and
lahf
sbb
sbb
not
mov
push
in
lea
repz
pop
subl
mov
insl
and
imul
mov
out
cmp
mov
push
jb
lret
fmuls
aaa
mov
rol
movlps
das
or
fdivl
add
jle
and
loop
push
sbb
and
les
and
sahf
sbb
sub
insb
xor
sub
cwtl
test
scas
mov
push
adc
mov
or
je
mov
pop
fisubrl
push
leave
adc
out
push
push
jecxz
jns
sub
push
clc
jmp
inc
mov
cs
mov
sbb
arpl
adc
in
into
adc
mov
test
lea
nop
xor
repz
stos
mov
fwait
insl
push
and
out
rcrb
sub
je
enter
sub
lods
adc
inc
sub
sbb
sub
add
dec
test
insb
or
push
cmp
pop
dec
int
push
and
out
in
std
pop
imul
mov
and
call
adc
push
pop
cmp
out
mov
mov
popf
lds
out
dec
movsl
xor
and
jl
js
test
ret
scas
sub
or
data16
scas
adc
test
jne
aas
ret
fidivrs
test
add
fstpt
loop
pop
inc
int
mov
sub
sbb
cmp
cmpsb
jb
or
lods
cmp
in
out
nop
lds
lods
xor
in
imul
xor
sbb
movsb
xor
loop
jmp
add
cltd
lods
paddsw
push
outsb
leave
mov
add
insl
or
push
into
scas
les
mov
or
ljmp
shlb
and
popa
into
pop
rcrb
outsl
les
dec
ljmp
and
sbb
pop
push
xchg
je
in
popf
sub
int
out
sbb
cmpsl
cmp
shlb
fs
and
adc
sub
fldt
pop
pop
outsl
ret
dec
or
test
xchg
nop
sbb
arpl
out
mov
or
repz
mov
and
lods
in
scas
xor
or
adc
or
clc
fcomi
stos
dec
sub
std
outsl
mov
xchg
mov
mov
sub
int3
and
sbb
imul
adc
xor
xor
loope
sub
dec
mov
xor
js
mov
jno
push
mov
outsb
inc
popa
repnz
mov
pop
nop
xorb
test
sub
sub
xchg
insb
inc
sbb
pop
dec
xchg
push
sub
or
and
call
dec
sbb
sub
mov
mov
add
mov
imul
or
inc
adc
sub
in
mov
add
or
jbe
sbb
mov
sub
pop
mov
mov
push
jns
or
push
push
cmpb
xor
adc
push
add
sahf
lods
inc
sbb
stos
shll
or
mov
pop
loopne
loop
cmp
scas
aaa
and
mov
lret
pop
cs
and
jg
arpl
movsl
sub
xchg
and
ljmp
add
addr16
adc
imul
js
mov
or
je
insl
mov
sub
mov
xor
fs
insb
addr16
xchg
dec
imul
cld
pop
adc
sub
pushf
subl
out
insl
rcrl
test
mov
or
xor
xor
cld
mov
mov
push
or
dec
dec
shrb
push
dec
rorl
push
jg
push
sub
scas
loop
cmp
dec
pop
or
sub
push
int3
mov
clc
arpl
push
sbb
imul
mov
subl
push
repnz
mov
andl
mov
enter
add
cmp
mov
add
add
je
movsl
std
pop
out
adc
test
xchg
push
cmp
xor
imul
lock
add
sbbl
sub
mov
mov
xchg
xor
mov
orl
dec
out
roll
add
xchg
aam
lret
test
imul
pop
xor
imul
jge
rcl
fdivl
and
stos
outsl
jne
int
sub
mov
fcomps
mov
xchg
pop
into
in
js
xchg
into
xchg
cmpb
push
or
imull
stc
out
inc
cmp
arpl
lods
arpl
add
in
hlt
fisubs
jmp
aam
mov
mov
arpl
sub
int
push
or
test
sbb
out
sbb
add
adc
add
pop
lret
sub
sub
mov
sub
ret
mov
adc
ret
dec
fsubs
sub
or
sbb
mov
rcrl
and
inc
push
xor
aas
pop
and
and
mov
subb
lcall
test
iret
cmp
arpl
mov
cld
aas
sub
xor
xchg
cmp
outsb
in
xchg
sub
jmp
mov
xlat
mov
std
imul
pop
in
pop
adc
xchg
clc
or
xor
sub
sub
sub
sub
lods
mov
sub
or
xchg
pop
loopne
lods
icebp
test
fs
sahf
push
test
into
sub
or
xor
jo
mov
rorl
fwait
call
pop
xor
adc
clc
lods
jbe
adc
or
jns
adc
fidivrl
shrb
leave
mov
ret
xchg
mov
test
ljmp
jg
fisubrl
jne
lods
mov
sbb
mov
imul
push
sbb
add
sbb
test
pop
out
lods
push
mov
lea
pop
nop
jmp
sub
int3
or
lahf
imull
pop
push
jns
aad
ss
fadd
jmp
mov
test
hlt
mov
push
or
sub
xchg
mov
or
fsubp
xchg
pop
sti
loop
sbb
scas
iret
fs
or
dec
dec
push
mov
stos
test
in
dec
outsb
cs
cltd
pushf
sbb
and
mov
sub
nop
fcompl
inc
shll
sub
dec
inc
mov
fldenv
sub
imul
outsl
xchg
and
and
sub
mov
adc
add
inc
mov
lods
repz
xchg
and
iret
sbb
cs
aam
add
out
fsts
and
mov
jl
into
cmp
bswap
or
scas
push
push
dec
ret
adc
in
and
in
pushf
or
sbb
dec
mov
ljmp
rorb
ret
and
sub
jg
fistl
out
in
scas
into
push
dec
lock
shrl
mov
dec
out
add
adc
mov
enter
cwtl
in
pop
or
pushf
lds
sti
ljmp
fnstenv
cld
pop
fcmove
xchg
xor
mov
sbb
and
cmpsl
add
pusha
movsb
fsubr
popf
cmp
fsubs
arpl
int
jecxz
popf
in
adc
sbb
mov
or
inc
out
fimull
aad
or
jns
or
imul
xchg
inc
xchg
jno
outsb
inc
push
mov
sub
in
add
jl
imul
ret
test
addl
stos
mov
fbld
and
popf
jecxz
push
int3
and
and
cs
push
jo
sub
hlt
and
mov
mov
ldmxcsr
sub
stos
sub
repz
scas
lock
sbb
dec
sub
loop
adc
pushf
adc
cwtl
dec
mov
push
jle
xor
xchg
scas
and
sub
call
dec
enter
or
jge
jb
stos
shr
inc
mov
push
arpl
jle
adc
or
test
xor
fmull
jecxz
xor
scas
jnp
sbb
sbb
push
lods
jb
adc
insl
ret
ret
inc
in
cmp
sar
jae
lods
scas
cs
xor
out
xchg
imul
dec
insb
insl
stc
in
out
dec
jmp
jns
xchg
in
add
mov
push
adc
jge
out
cld
lcall
arpl
imul
pop
sbb
mov
sbb
es
adc
stos
add
adc
cs
sbb
sti
or
adc
push
xor
push
stos
mov
xor
js
dec
out
mov
xor
jl
negl
test
loop
cmpsb
mov
aam
hlt
ret
fwait
xchg
arpl
push
sub
fs
mov
sti
icebp
call
pop
cmp
mov
push
jmp
loop
arpl
pop
mov
push
xchg
lods
jno
into
stos
es
int3
jae
in
aam
lret
cwtl
or
popa
mov
dec
lcall
xchg
jo
dec
xchg
xor
shrb
into
sbb
iret
daa
lcall
in
mov
adc
outsl
add
mov
sbb
dec
cmp
ja
sub
pop
arpl
test
mov
pminub
jle
push
jo
mov
mov
push
sub
repnz
pop
ret
test
dec
jno
jmp
cmpsl
xor
mov
imul
jbe
test
arpl
scas
rorb
jge
and
sti
int3
lods
lods
int3
or
jo
push
xor
or
lahf
out
xor
pop
test
in
sub
test
push
push
xchg
xor
xor
ret
test
ljmp
jns
enter
orl
scas
subl
and
cmp
enter
add
mov
or
jnp
pop
loope
insb
or
out
int3
call
in
arpl
jo
xchg
ss
mov
dec
adc
movsl
inc
xor
add
pop
in
outsl
push
push
aad
jl
int
lea
dec
stos
cmp
add
inc
test
mov
ss
imul
mov
imul
sub
mov
xchg
js,pn
and
xchg
rcrl
cmp
aad
mov
sbb
inc
cltd
mov
and
xchg
and
ret
sbb
mov
sub
mov
inc
popf
push
add
arpl
push
or
out
scas
mov
or
dec
jl
mov
mov
loop
and
sbb
push
cld
mov
in
out
ja
subl
adc
call
dec
jl
jo
dec
add
test
test
and
sbb
repz
dec
inc
mov
scas
adc
xchg
ja
mov
or
xchg
mov
arpl
pop
sub
xor
cs
mov
fsubrs
mov
mov
xlat
sbbl
in
or
add
sbb
test
add
subl
in
into
sub
push
ret
sub
push
sub
in
test
mov
cmp
insl
push
xchg
mull
and
arpl
mov
xchg
dec
adc
xorl
and
std
dec
test
lcall
adc
js
mov
mov
in
enter
adc
loopne
int
push
aam
mov
imul
mov
adc
mov
dec
xor
adc
daa
adc
mov
idivb
lahf
ret
or
add
ret
sbb
mov
push
insl
shlb
lahf
and
outsb
repnz
mov
in
ret
or
les
pushf
std
ret
insl
pop
or
sbb
es
jo
les
jl
and
push
push
cs
push
in
mov
es
test
cltd
in
push
sub
shlb
add
mov
push
rcrb
sbb
sbb
sub
insb
pushf
and
add
repnz
out
sbb
xor
push
outsb
jmp
fdivr
fsts
or
ficoml
fwait
in
add
adc
push
sub
sub
cmp
arpl
jl
repnz
xorl
push
adc
je
adc
adc
lods
sahf
mov
mul
test
or
dec
orb
stos
xor
rep
add
mov
dec
dec
outsl
int
shlb
cltd
loope
pusha
push
sarb
push
or
mov
sub
jge
push
rorb
jmp
mov
stos
scas
dec
arpl
sub
in
xchg
inc
adc
outsb
xchg
ret
nop
push
clc
jb
or
and
pop
popa
rorl
or
add
or
stc
jl
mov
sbb
adc
rcrb
push
mov
aam
push
out
dec
add
mov
push
inc
add
sub
mov
or
or
xchg
rolb
xor
push
ret
aas
adc
sub
mov
sub
or
jecxz
mov
add
sbb
enter
cmp
inc
or
push
pop
dec
dec
mov
pop
or
xchg
ret
cwtl
or
inc
push
leave
enter
mov
xor
inc
mov
adc
add
dec
out
scas
push
dec
imulb
subb
mov
out
out
aas
rcrb
cmp
and
sti
adc
outsl
mov
sub
mov
sub
push
pop
mov
sti
popa
jecxz
dec
shlb
lds
lcall
xor
movsb
or
call
mov
push
orl
sti
push
cli
push
pop
movsl
out
mov
mov
sub
loopne
aam
sub
xchg
jl
test
lret
cmpsb
mov
xor
and
xchg
lods
subb
aam
pop
inc
add
lea
cwtl
add
ret
insb
fcmovu
notb
sub
rorl
cs
into
out
nop
call
repnz
fiaddl
dec
dec
jecxz
mov
hlt
jg
enter
or
repz
jo
test
scas
fs
pop
out
cltd
cwtl
arpl
push
out
mov
orb
push
stos
pop
shll
addr16
outsb
outsb
gs
ffree
shl
jno
imul
fidivrl
cmp
fimull
xchg
ret
movsl
mov
or
mov
mov
into
sbb
or
cwtl
out
test
out
lods
mov
scas
push
int
idivb
in
fistpl
dec
mov
adc
mov
js
addb
xor
mov
in
mov
and
test
mov
test
xor
and
jne
aad
int3
imul
jl
xor
xchg
sbb
and
popa
test
xor
loop
outsb
lcall
out
scas
fcoms
insl
sahf
in
lret
jb
ret
lods
pop
push
cld
inc
jecxz
mov
ret
arpl
xchg
aaa
push
std
in
or
pop
popf
mov
push
cmp
xchg
sar
pop
out
movntps
les
sub
movsl
and
sub
scas
int
aam
adc
ret
outsl
lods
outsb
clc
sub
and
iret
arpl
or
or
push
mov
or
lods
in
lcall
cmp
popa
dec
inc
fsubr
mov
adcb
fcompl
push
mov
and
pop
ja
mov
xor
std
fs
je
arpl
enter
nop
xor
sti
push
js
lods
or
fwait
mov
lods
bound
data16
outsl
adc
repnz
sbb
mov
lods
iret
cmp
into
out
stos
decb
add
add
sbb
and
stos
mov
ret
out
ds
xor
push
mov
mov
or
sub
lods
pop
mov
stc
stos
dec
sub
push
je
inc
das
mov
sub
fwait
shll
out
adc
cmpsb
jne
jmp
aas
enter
mov
dec
cs
andb
or
xchg
dec
adc
jl
fldcw
jg
mov
iret
add
adc
sbb
push
cli
sbb
outsb
sub
mov
je
fildll
fcomps
and
mov
into
sub
push
repz
loop
pop
mov
je
fsubrp
call
call
dec
test
out
or
cmpsb
test
scas
mov
push
cmpsl
add
add
mov
in
adc
xor
imul
sarb
jae
shrb
jmp
xchg
test
push
ret
inc
lock
dec
or
or
repz
stos
jb
mov
loop
rcr
push
insl
sbb
imul
into
and
push
adc
test
insb
fisttpl
push
push
scas
inc
and
or
scas
mov
xor
cmp
jge
insl
fimuls
add
xor
inc
adc
jae
push
jne
sub
je
xor
mov
loopne
cltd
movsb
fsubrp
popf
ret
mov
push
or
pushf
loop
loope
data16
dec
ficomps
xchg
cmpb
dec
inc
sahf
dec
sub
jle
jecxz
dec
out
pop
adc
add
stos
add
add
and
lods
stos
insl
sbb
xor
test
shrl
pop
ret
inc
fisubrl
into
addb
pop
out
add
adc
lcall
add
push
or
icebp
ja
filds
out
cmp
sub
adc
cmp
int
das
adc
dec
out
out
gs
daa
enter
sbb
jo
hlt
sub
jmp
adc
pop
std
stos
lahf
arpl
repz
in
loopne
shrl
daa
adc
enter
scas
addr16
call
ljmp
and
adc
loop
sub
outsb
push
mov
dec
insl
or
jmp
sub
xchg
or
roll
in
inc
sub
jle
test
scas
into
popa
adc
add
mov
sbb
or
shrl
lcall
push
and
or
sub
insb
test
push
aad
and
rclb
add
std
fidivs
mov
scas
test
mov
xchg
and
cmp
std
jl
fsubrs
imul
sbb
mov
cwtl
out
scas
fstpl
xor
fsubrl
mov
jnp
pop
inc
mov
pop
aam
fisubl
and
loop
mov
cmpsb
outsl
mov
imul
imul
mov
fxch
test
sub
cltd
mov
jns
ret
xchg
sahf
mov
and
or
lods
scas
dec
fwait
push
cmp
sub
in
adc
mov
adc
jmp
rorl
push
ret
insb
inc
arpl
ja
arpl
sbb
cmp
pusha
pop
ret
aas
mov
xchg
push
test
dec
iret
in
sbb
cmp
adc
mov
xor
push
popf
ret
or
jnp
dec
pop
ret
out
cmp
mov
adcl
sub
ss
sub
dec
fisubs
sub
daa
into
push
or
test
adc
int
or
ljmp
insl
xchg
jo
inc
rorb
inc
mov
stos
out
adc
dec
pusha
push
stos
out
stos
arpl
es
into
adc
pop
scas
rorl
sbb
add
mov
mov
mov
xorb
xor
lcall
mov
mov
jmp
dec
mov
mov
xor
add
push
fs
mov
add
dec
loop
cmp
push
add
mov
fwait
stos
iret
subb
dec
stos
sub
cli
gs
sub
cs
enter
out
lods
scas
inc
nop
xchg
out
out
jne
add
pop
jmp
int3
lods
mov
or
or
mov
repnz
xor
negl
mov
sbb
arpl
jl
add
adc
sahf
sub
jle
arpl
ret
sbb
mov
jl
sbb
adc
out
test
xchg
pop
inc
mov
sub
out
aas
lret
imul
test
into
js
das
pop
adc
scas
ret
les
stos
shlb
xor
push
or
sbb
insl
test
gs
mov
adc
mov
lods
xor
sub
jp
idiv
mov
insl
dec
out
sub
mov
dec
jl
dec
fsts
into
in
out
stos
insb
sbbb
fcmove
mov
mov
out
mov
sbb
lods
add
shll
adc
sub
mov
js
in
add
fsubrs
sub
jne
andl
xchg
jecxz
popa
dec
lret
insb
rclb
sbb
clc
stos
mov
sahf
arpl
adc
popf
fincstp
out
out
lea
sub
jnp
mov
and
loopne
out
stos
xchg
dec
inc
jp
in
mov
loope
mov
ficompl
mov
sub
mov
lea
arpl
fcomip
test
dec
xchg
sbb
sub
push
push
mov
out
je
and
pop
and
xchg
stos
lret
lret
stos
mov
mov
or
xor
xchg
lahf
sub
mov
popa
jnp
iret
loop
adc
add
call
imul
test
in
push
scas
dec
lea
jae
shl
lods
outsb
out
fidivs
cs
imul
adc
inc
stc
add
enter
adc
xor
xchg
sbb
adc
clc
arpl
aad
cwtl
dec
lret
sub
mov
jge
sbb
outsb
dec
ss
lods
mov
arpl
stos
push
xor
jl
stos
add
add
sub
or
shlb
mov
sub
stos
shll
scas
sub
sub
lret
push
int
adc
aam
pop
add
lock
repz
or
mov
cmpsb
adc
cmp
sbb
pushf
stos
xor
push
push
outsl
and
test
or
lock
sub
in
adc
icebp
jns
cmp
repnz
or
mov
xchg
out
scas
xchg
fbstp
call
xor
loop
cwtl
add
or
cld
jmp
sub
loop
loop
ret
dec
in
out
out
outsb
inc
aas
out
xor
cmp
xlat
mov
pop
mov
outsl
lods
push
jge
push
or
adc
scas
sbb
in
sub
ret
xchg
paddsw
mov
pop
jmp
test
aaa
jl
mov
jecxz
xchg
sub
call
arpl
sbb
jb
mov
std
or
adc
pop
push
and
adc
jge
mov
xchg
sahf
leave
jge
pop
or
cmp
sbb
bound
sub
data16
xor
or
pop
add
push
push
shrl
out
int3
add
shlb
or
mov
mov
pop
js
roll
loop
ficomps
test
inc
add
and
mov
or
sub
dec
push
imul
dec
fsincos
pop
lods
push
dec
mov
test
mov
mov
sub
and
pop
loopne
xor
mov
dec
ret
imul
xchg
mov
fidivs
inc
mov
mov
cs
int
shll
adc
imul
mov
cli
sub
or
gs
mov
xchg
inc
fnstsw
in
stos
lret
xchg
andb
fs
lret
imul
call
or
pop
mov
arpl
dec
icebp
mov
and
sub
push
iret
in
xchg
or
xchg
ret
jg
scas
cwtl
fdivrl
fmulp
ljmp
sub
insl
sub
add
int
add
adc
fucom
lret
dec
and
sub
test
mov
mov
cmp
sub
or
inc
inc
cld
jb
ja
scas
insb
hlt
adc
xcrypt-cfb
cmpsl
and
sbb
and
repz
jecxz
test
mov
enter
pop
lret
outsb
call
out
cmp
adc
lods
js
xchg
pop
inc
out
lods
jno
dec
arpl
dec
shrb
into
sti
and
out
sbb
fidivrs
adc
je
cli
and
mov
mov
sbb
out
inc
or
lods
ret
mov
scas
push
xor
lds
ja
fcoms
add
cmp
imul
push
enter
sti
scas
pop
push
mov
js
mov
push
mov
outsb
scas
add
es
xor
test
dec
mov
inc
jp
insl
mov
sbb
ja
clc
imul
scas
sbb
jo
popf
xchg
dec
pop
mov
jns
dec
adc
or
or
ret
xchg
in
ljmp
je
fiadds
loop
ljmp
adc
fistl
mov
sarb
mov
or
push
mov
add
in
out
and
lods
lcall
or
rol
xor
xor
mov
dec
jb
push
jmp
xor
fsubs
jnp
sti
sbb
stos
out
fnstcw
arpl
data16
call
fcoml
adc
push
sub
xor
xor
sub
mov
adc
test
repz
or
fldcw
rcrl
int3
in
push
or
add
in
test
incl
mov
push
dec
mov
sub
int
pop
lea
adc
in
andb
insl
arpl
cld
inc
fs
test
clc
sub
cs
rcl
or
scas
into
sub
fnsave
dec
pop
inc
adc
in
cld
adc
push
push
sub
jmp
mov
mov
test
adc
stos
aas
sti
sub
xchg
inc
pop
adc
shll
jnp
out
xor
push
sub
lret
sub
sti
adc
fidivs
repz
out
pop
jg
sbb
xor
cmp
jl
push
jmp
or
clc
and
ret
xchg
dec
jp
lahf
orl
adc
mov
movsl
sbb
xor
imul
sub
cmpsb
cmp
xchg
adc
insb
dec
push
dec
popa
adc
fsubs
adc
repnz
sub
into
out
ffree
xor
mov
rcl
push
jmp
push
out
int
faddp
xchg
jl
movaps
ljmp
scas
outsl
sbb
adc
das
repz
cmpsl
sbb
dec
xchg
fbstp
scas
push
or
xchg
push
imul
imul
cmp
call
add
mov
pushf
add
push
push
sub
mov
inc
clc
jo
andb
adc
adc
lods
xchg
pusha
pop
in
push
aam
insl
and
adc
nop
cmpsl
and
pop
xchg
aas
cmpsb
adc
decb
xchg
push
sbb
stc
lds
push
cmp
mov
dec
xchg
movsb
sbb
xchg
sub
jae
jo
fidivrl
dec
mov
mov
and
push
or
scas
ret
and
int
dec
push
movsl
or
stos
cltd
adc
xlat
cwtl
fimull
scas
test
sbb
xchg
hlt
mov
sbb
iret
loope
sub
lods
or
loope
dec
fcmovu
repz
sub
and
movsb
outsl
addb
mov
outsb
adc
xchg
xor
shrb
sahf
orb
movsl
push
xor
push
or
jg
test
add
inc
popf
ficoms
call
outsl
les
adc
xchg
mov
js
outsb
or
mov
mov
ret
lea
cmpsb
add
xor
test
cmp
arpl
push
out
push
stos
imul
or
insl
mov
test
dec
inc
mov
scas
out
js
faddl
mov
xor
fsubrs
sub
leave
loop
insl
pushw
sahf
mov
jns
out
fs
lods
adc
cmp
arpl
and
fistpl
xchg
aaa
xchg
push
ret
es
or
ds
imul
add
push
and
dec
bswap
cmp
inc
push
sub
scas
xor
push
std
add
cmc
jg
and
outsb
fldcw
jp
dec
fidivl
movsb
orb
mov
xor
mov
pop
int3
xchg
test
in
mov
imul
sbb
pop
lret
mul
cmp
add
es
test
out
or
scas
push
mov
mov
add
sub
push
test
int
xchg
push
ljmp
aaa
push
loopne
rcrb
sbb
jecxz
stc
clc
dec
or
scas
negl
lods
cld
xor
mov
mov
clc
mov
dec
incb
out
add
and
adc
adc
popf
cltd
enter
stos
sub
fsubr
ret
lahf
imul
outsb
shll
or
dec
loop
ja
push
mov
adc
jbe
adc
fnstenv
ljmp
loop
pop
aaa
movsb
scas
pop
mov
sub
push
add
sub
hlt
jmp
stos
or
sbb
hlt
add
ret
lcall
and
push
push
or
aaa
test
sarl
sub
loopne
call
mov
dec
movsl
mov
subb
jle
mov
cmp
or
push
add
fistpll
decl
outsb
mov
ret
sub
cltd
push
dec
subb
orb
lods
sub
fwait
shr
sub
sub
cwtl
mov
arpl
push
mov
jns
out
mov
arpl
fsubr
outsb
stos
jo
insb
iret
arpl
push
sub
sub
les
sbb
test
arpl
pop
pop
jle
cmpsb
sub
mov
daa
push
dec
sti
mov
and
cmp
push
adc
inc
out
dec
fwait
subb
sub
jo
inc
dec
sub
movsb
jnp
adc
dec
adc
repz
fidivs
scas
push
js
movsb
loop
ja
push
scas
stos
or
inc
mov
mov
insl
add
xlat
outsl
subl
sub
xor
sub
sbb
fidivs
gs
imul
push
push
xlat
enter
int3
inc
adc
and
mov
jno
scas
mov
dec
sub
adc
nop
inc
jmp
outsl
xchg
arpl
mov
jge
mov
adc
pop
imul
add
ljmp
mov
in
push
xor
lahf
out
insl
rcrb
add
and
pop
xor
stos
aam
ja
mov
stos
outsb
inc
cmp
jmp
mov
mov
insl
mov
rclb
test
dec
rcll
mov
sub
adc
stos
clc
call
xor
insb
mov
push
ret
outsl
cmove
in
out
inc
arpl
sub
out
int
ret
jbe
imul
xor
inc
data16
cwtl
rcl
orl
mov
mov
push
mov
test
mov
dec
aam
imul
adc
out
arpl
cs
or
outsl
ret
inc
sub
test
pop
les
jge
insl
je
push
scas
cmc
and
pop
push
rcrb
mov
sub
int
sub
out
lods
mov
push
arpl
and
test
xlat
and
sub
shll
mov
cmp
fstpt
stc
mov
ret
or
loop
mov
out
hlt
jbe
outsl
ficompl
movsl
mov
stos
dec
jle,pt
ljmp
cld
push
fsubs
jae
out
or
sahf
in
cmp
aam
or
push
push
xchg
jp
outsb
adc
dec
mov
and
outsb
outsl
mov
lea
pop
sbb
mov
out
sub
pop
jnp
imul
sahf
and
loopne
cltd
jne
jmp
arpl
push
or
lods
ret
repnz
ret
or
ds
ror
cmpsl
inc
addr16
subl
cmpsb
jmp
ret
inc
dec
adc
xor
sub
jne
lret
fisubs
sbb
mov
out
pop
ret
int
jl
or
mov
mov
dec
and
mov
insl
test
out
insl
cmp
mov
insl
adc
sub
mov
mov
cld
adc
int3
jae
lods
sbb
sbb
cmp
insb
mov
scas
aas
jb
imul
insl
ljmp
mov
out
jecxz
lcall
push
lods
std
lea
dec
in
sbb
pavgw
in
adc
xor
or
cli
test
loop
cmp
insb
sbb
mov
mov
mov
sub
mov
push
ret
in
sub
jns
mov
adcb
add
xor
add
stos
fwait
jecxz
pusha
add
outsb
repnz
rol
mov
stos
hlt
in
int
loop
arpl
sbb
out
adc
cs
or
inc
adc
push
out
fistl
out
and
mov
dec
test
arpl
xor
or
sbb
je
les
in
push
or
lahf
ret
scas
push
push
jmp
stc
jmp
hlt
orb
test
clc
enter
test
cld
mov
in
js
cli
orb
test
out
adc
pop
cmp
and
sub
leave
xor
add
adc
aam
push
push
dec
xor
mov
and
outsb
ja
xchg
ljmp
mov
or
inc
sub
dec
ljmp
mov
scas
dec
add
stos
hlt
jnp
or
ljmp
inc
dec
mov
loop,pn
sarb
repz
add
lea
or
xor
mov
cmp
outsl
addr16
mov
sbb
mov
jle
out
push
sbbl
and
adc
std
cli
mov
dec
jecxz
out
shr
mov
pop
push
in
push
adc
int
dec
mov
mov
sti
cli
mov
clc
inc
out
xor
imul
push
js
loop
mov
repz
test
sub
xor
daa
sub
mov
adc
iret
lcall
adc
addr16
sub
jl
sub
leave
mov
cmpsb
push
sub
je
shr
rep
lea
sub
sub
ret
test
ljmp
sti
push
jle
out
gs
jecxz
mov
es
ret
or
outsl
cs
sub
lea
or
jecxz
sbb
add
dec
stos
sub
bound
pop
jmp
cwtl
aad
int
inc
ret
das
scas
xchg
or
ficompl
sti
sbb
mov
jg
mov
in
out
dec
mov
sub
xor
imul
add
cmc
test
out
adc
or
in
adc
xor
lret
pop
sub
or
fcoml
mov
out
in
jge
push
incb
push
ss
test
test
in
jmp
out
dec
xchg
push
fstps
loop
cmp
push
sub
inc
int3
mov
mov
shrb
loop
fstl
sbb
adc
sbbb
nop
insl
fs
push
adc
jns
repnz
pop
test
mov
insb
aam
addr16
inc
push
mov
out
mov
mov
or
mov
sub
jne
adc
add
call
and
or
clc
jecxz
mov
push
push
sbb
repz
subb
cmp
lcall
or
add
scas
add
jl
gs
jge
hlt
call
or
dec
fs
out
repz
adc
aas
dec
incb
pop
jb
imul
jl
imul
push
inc
mov
std
adc
aaa
mov
jo
repnz
ret
cmp
in
adc
rcll
xor
insl
pop
aam
mov
out
adc
and
outsl
repnz
pop
int3
dec
dec
mov
loop
leave
out
lds
ljmp
sub
sbb
sub
xor
stos
sbb
cmp
into
loope
mov
clc
sti
orl
adc
cwtl
arpl
insl
jb
pushf
sahf
out
mov
mov
adc
incb
or
subl
imul
out
test
sbb
out
scas
aaa
sbb
pushf
insb
xchg
pop
xor
or
sub
stc
and
lds
pushf
cmpsl
mov
jmp
lods
mov
rol
pop
cs
repz
push
cmp
inc
adc
cmp
test
push
sub
sbb
popa
fs
xchg
sti
mov
clc
mov
movsb
sub
pop
cmp
cwtl
push
ret
push
jecxz
jge
ret
inc
dec
mov
add
sti
cmp
push
arpl
sub
pop
mov
scas
das
jle
out
dec
insl
imul
ret
into
inc
adc
inc
cltd
add
shl
test
and
shr
mov
sub
imul
pop
adc
dec
inc
pop
dec
and
aas
add
cli
into
rolb
aas
add
out
or
lods
jle
push
cs
mov
cmp
adc
ret
call
mov
in
push
mov
pop
mov
sarb
sbb
mov
xor
pop
push
add
add
in
xchg
loop
dec
es
push
fmull
lods
add
mov
cwtl
lea
pop
sub
frstor
sub
dec
in
int
insb
inc
arpl
xchg
in
add
xchg
incl
inc
test
mov
jmp
or
and
or
ret
loop
rcl
lcall
xor
xchg
mov
or
enter
inc
xchg
adc
inc
and
cs
outsl
cld
push
dec
mov
ljmp
push
and
nop
ss
mov
fisubl
or
loop
xchg
fs
sub
push
outsb
or
lods
adc
cmc
jmp
movsb
xchg
outsl
xor
test
and
and
aas
imul
rol
jl
stos
sub
xchg
lcall
getsec
or
xor
stos
fldenv
mov
insl
js
out
ret
mov
icebp
add
mov
movl
mov
mov
adc
and
ljmp
sub
add
lret
rorl
sub
test
push
add
in
les
mov
movsb
enter
mov
jb
mov
outsl
inc
lods
arpl
arpl
shrl
adc
call
push
jecxz
imul
xor
mov
sub
mov
in
push
jnp
scas
cs
xor
xchg
mov
int3
pushf
test
ret
xlat
sub
lret
movsl
xchg
mov
dec
xor
sub
mov
sub
rol
jl
or
into
mov
mov
subl
lods
mov
or
outsl
dec
pop
sahf
scas
or
inc
jmp
out
sub
repnz
adc
push
in
mov
sub
into
fsubs
sbb
cmp
xchg
dec
push
js
sub
lahf
jmp
in
lds
aam
push
imul
and
mov
lcall
mov
fisubs
mov
fwait
sbb
push
fcmovb
sub
jge
lcall
and
in
mov
add
enter
push
aam
dec
pushf
add
mov
add
in
outsl
lods
adc
xchg
loopne
inc
dec
jb
mov
xor
lcall
scas
subb
mov
les
sbb
lcall
push
out
push
aam
out
mov
shlb
sbb
fwait
out
add
ljmp
arpl
es
sub
add
xchg
in
lods
inc
or
cs
mov
sub
dec
fldl
inc
pop
adc
push
cmpl
or
adc
je
test
repnz
and
cmp
sub
lret
dec
stos
or
cld
lcall
cmp
gs
push
push
cmp
dec
add
ds
xchg
mov
sti
xor
cs
push
lahf
adc
mov
lret
ficoms
inc
mov
cld
pop
or
pusha
mov
and
xor
adc
sub
add
mov
jnp
mov
and
sbb
imul
jo
pop
fidivrl
cmp
and
mov
arpl
dec
mov
enter
out
adc
and
arpl
adc
push
repz
das
rcr
cmp
aam
loop
cmc
pop
mov
js
pushf
shll
dec
mov
sti
gs
xlat
in
inc
push
pop
fwait
jmp
js
adc
sub
push
xchg
sub
stos
cmpsl
leave
or
scas
sub
in
inc
cmp
test
jo
dec
inc
xor
stos
push
out
adc
dec
dec
stos
sbb
scas
ror
add
arpl
adc
mov
or
and
out
arpl
aaa
bound
scas
fimull
popf
push
test
adc
or
int
pop
out
mov
repz
add
arpl
push
or
push
xor
dec
mull
xchg
jle
fldz
or
jnp
ljmp
scas
imul
xchg
dec
mov
lods
mov
or
sbb
adc
arpl
dec
xchg
push
notl
ret
push
imul
imul
jno
lcall
sub
adc
fs
andl
mov
mov
mov
xchg
pop
adc
xchg
lods
je
add
ret
ret
and
imul
mov
or
mov
push
orb
insb
xor
dec
icebp
cmp
and
out
dec
call
das
lret
jg
lahf
mov
or
mov
scas
inc
outsl
or
das
test
add
andb
and
cmp
stos
mov
shrb
xchg
outsl
sub
or
ret
dec
mov
mov
or
push
jmp
pusha
mov
shr
outsb
scas
dec
dec
dec
arpl
mov
out
and
movsb
push
dec
or
mov
lds
mov
inc
loopne
mov
out
stos
fcmovnb
outsb
loope
pop
lahf
ret
out
mov
aad
out
outsb
fildl
ss
arpl
out
and
sub
ljmp
dec
xchg
xchg
push
sub
push
mov
dec
sub
mov
mov
dec
ljmp
repz
jg
insl
in
loop
and
rorb
mov
ja
out
jl
or
fsubrs
jecxz
aas
mov
jnp
stos
sub
and
cmp
stos
divl
in
in
arpl
loopne
cmp
mov
fwait
das
or
je
leave
sub
jae
sbb
xor
test
sysret
or
xchg
in
fucomp
int3
inc
push
stos
adc
sbb
or
mov
out
fistl
dec
repz
test
and
clc
cmp
jecxz
inc
mov
xlat
in
add
cmp
ret
subl
add
data16
ret
add
shrb
push
mov
test
les
loop
cltd
push
orl
or
lea
in
sbbl
shl
xor
adc
lea
push
adc
lcall
mov
xlat
dec
xor
dec
push
outsb
adc
push
mov
mov
xchg
sub
mov
cmp
adc
jecxz
add
stc
imul
jp
sub
add
mov
dec
out
and
cmp
adc
xchg
scas
cmp
ss
jg
adc
push
scas
adc
cmpsl
xor
arpl
or
ljmp
lods
repz
or
pop
in
push
insl
xlat
mov
sbb
or
clc
test
jmp
adc
push
and
sbb
pop
jle
mov
ret
rcrb
add
mov
outsb
movsl
out
test
lcall
dec
adc
insl
jmp
insb
push
inc
cld
fiadds
loop
outsb
cs
and
comiss
daa
das
pusha
xor
sbb
subl
pop
mov
outsl
and
scas
pop
pinsrw
daa
adc
test
sahf
cmpsl
adc
faddl
mov
add
pop
daa
dec
sub
adc
push
scas
loopne
cmp
insl
mov
loop
push
sahf
or
iret
pop
das
jmp
mov
out
push
mov
and
add
sbb
in
jl
stos
xor
sub
and
adc
loop
dec
jg
cmp
jecxz
in
sti
sub
leave
or
sub
nop
test
lea
lret
outsb
in
movsl
or
mov
pop
mov
and
adc
andb
xchg
jmp
pop
fwait
out
jge
add
daa
push
dec
dec
jb
insl
and
mov
mov
mov
lods
cwtl
mov
mov
sub
iret
jge
rorl
push
fsubrs
shr
push
add
dec
int3
sub
loop
fcomp
sbb
mov
add
xchg
jmp
or
mov
cs
sub
lahf
cmpsb
ljmp
in
inc
jmp
xor
xor
or
jnp
lret
push
sbb
out
cs
push
ficomps
or
xor
outsb
cmc
cltd
push
mov
push
sqrtps
dec
imul
cwtl
xchg
push
jae
jmp
push
das
jle,pn
push
ljmp
enter
in
adc
fisttps
lret
mov
push
setne
les
xor
mov
or
enter
iret
mov
pusha
cmpsb
xor
scas
pop
clc
mov
sbb
mov
iret
ja
xchg
add
out
je
or
inc
cwtl
ret
or
xor
in
in
pusha
pop
mov
andb
sub
add
push
adc
clc
fcomps
ss
pop
jecxz
insb
push
inc
out
push
and
out
lea
and
dec
aas
jmp
push
sub
mov
loopne
sbb
jbe
das
aaa
in
sub
xor
loop
inc
fwait
mov
sbb
in
xor
imul
stc
std
sub
addb
mov
cmp
xchg
adc
lods
icebp
popf
pushw
pop
jle
mov
sbb
out
mov
dec
push
sbb
adc
mov
int3
call
jge
pop
xchg
jno
paddsw
or
es
xchg
pop
outsb
mov
mov
or
xor
out
stos
inc
push
jecxz
shlb
insl
jl
sub
xchg
test
inc
out
jmp
out
loop
notb
outsb
xchg
inc
or
cmpsb
xchg
test
jecxz
mov
dec
lret
push
sub
repz
imul
loopne
jo
mov
ret
mov
or
stos
outsb
xchg
cmp
dec
scas
and
scas
mov
aas
scas
cld
sub
jmp
push
scas
push
or
pushf
mov
into
push
lahf
dec
iret
and
data16
std
das
push
enter
in
out
ljmp
loop
inc
popa
lret
push
subl
push
sbb
jne
and
cmpsb
sbb
in
stos
or
or
insb
rcrl
or
out
mov
and
jbe
andl
iret
xor
in
sbb
mov
das
scas
cltd
ja
cmp
aam
incb
sub
sub
mov
sub
out
dec
cwtl
xchg
or
and
sub
in
push
mov
insl
mov
lods
mov
int3
or
sbb
mov
je
das
or
add
cmp
xchg
sub
mov
stos
stos
inc
and
aas
jl
mov
in
test
movsl
arpl
popa
dec
sub
out
sbb
cmpsb
les
je
push
adc
xchg
dec
notl
scas
adc
jmp
arpl
jne
cmp
insl
jae
pop
cld
mov
in
push
push
arpl
addl
xchg
pop
shll
loope
jl
in
rep
add
addr16
or
movsl
xchg
into
scas
in
dec
xchg
mov
adc
arpl
daa
subb
ss
and
in
scas
lea
mov
negb
int
scas
push
test
dec
sub
stos
jne
imul
or
lret
lahf
xorl
push
das
push
sti
in
lcall
cld
mov
fcomip
or
ljmp
lret
sbb
sub
push
pop
push
imul
add
movsl
out
sbb
imul
sbb
dec
pop
sbb
stc
ret
lods
inc
or
stc
cmpb
pop
push
outsb
ret
es
out
pushf
pop
cmpsb
ret
int
fmull
mov
enter
xchg
bound
adc
push
dec
movsl
je
sub
cmpsl
mov
imulb
or
mov
dec
fdivl
push
sbb
lds
fcoms
xchg
xor
sbb
out
in
jge
push
cs
and
sub
mov
xchg
subl
loop
adc
jp
pushf
fs
mov
test
add
jecxz
stos
enter
mov
pop
loop
mov
push
cs
fisubrl
imul
andb
mov
push
pushf
inc
sub
push
lcall
jle
cmpsb
call
push
push
and
aam
sub
push
sub
push
adc
pop
das
mov
insb
push
pop
lahf
test
outsb
jge
in
xor
ret
jns
xor
outsb
pop
inc
push
test
adc
mov
fld
pop
dec
push
in
enter
lods
push
or
jecxz
dec
adc
ret
fimuls
or
icebp
jecxz
out
mov
std
hlt
inc
imul
fs
loopne
sub
inc
mov
jecxz
push
ljmp
shll
out
test
push
enter
into
out
sub
push
jecxz
cli
mov
out
mov
or
insb
std
mov
push
in
in
add
pop
cs
mov
mov
ret
cmp
das
mov
add
sbb
mov
int3
test
arpl
arpl
sbb
push
add
stos
out
sbb
jb
repz
sbb
mov
cwtl
aaa
mov
fs
stc
inc
lods
mov
mov
stos
xor
push
leave
movl
push
pushf
stc
adc
outsl
pop
je
dec
mov
sbb
mov
arpl
outsb
rorl
mov
cmp
xchg
pop
and
fwait
iret
sub
insb
or
mov
movb
cmp
mov
scas
aam
or
scas
cs
sbb
sub
sti
inc
outsb
lret
in
ret
push
packssdw
cli
adc
xor
dec
ds
and
icebp
sub
dec
enter
push
adc
push
mov
push
mov
mov
imul
mov
enter
xchg
sub
pop
inc
test
jb
add
pop
cmpl
pop
fistl
imul
jmp
or
aam
mov
xor
aad
push
sub
mov
js
aaa
pop
push
and
aad
out
inc
sub
test
mov
and
jecxz
je
xchg
sbb
icebp
int
mov
sub
jno
cltd
jmp
push
filds
adcl
or
jl
popf
push
arpl
pop
xor
xorl
inc
pop
shl
xor
ljmp
lods
stos
adc
out
test
mov
test
jne
lcall
and
jecxz
aam
mov
add
stos
stos
xor
ret
movsl
out
mov
arpl
cmp
sbb
arpl
jge
outsb
dec
push
aaa
test
into
mov
or
mov
flds
enter
bound
loope
stos
scas
in
js
lea
adc
add
inc
mov
sub
sub
pushf
rorl
xchg
sbb
adc
in
lods
insl
mov
loop
sti
mov
mov
push
loop
test
rcll
fistl
int
pop
les
mov
or
lods
ret
test
mov
adc
xor
rcrl
enter
loope
and
scas
in
out
lea
sbb
js
iret
push
xchg
inc
pop
pop
nop
shrb
mov
and
fidivs
sub
inc
inc
ja
lods
add
dec
aam
stos
push
mov
xor
jb
dec
test
xlat
and
jl
loop
push
pushf
xor
pop
xor
jecxz
sbb
jnp
push
stos
sub
ja
mov
std
xor
pushf
jbe
dec
sub
in
push
or
insl
ret
gs
test
mov
or
sub
xor
push
es
cmpsb
cmp
shr
jnp
int
mov
popa
mov
std
icebp
mov
and
mov
mov
mov
arpl
test
push
dec
xchg
jmp
add
fistps
xchg
lods
push
adc
push
mov
add
test
mov
pop
xor
pusha
lods
and
mov
and
adc
and
movsb
sbb
adc
mov
sahf
mov
scas
sbb
and
xor
sub
pop
arpl
das
ret
aam
cmp
adc
shll
adc
fnsave
vshufps
inc
mov
push
fnstenv
sub
sub
push
das
out
sub
push
cs
push
adc
shlb
mov
mov
stc
ret
dec
mov
mov
add
or
js
arpl
out
mov
lret
adc
sub
add
adc
jg
sub
scas
je
pushf
xchg
or
sub
daa
sahf
mov
inc
lods
jmp
mov
mov
out
cmp
cmp
stos
cltd
adc
arpl
and
dec
sbb
push
arpl
fmul
add
mov
pop
sbb
xchg
mov
ret
in
xor
jmp
push
mov
sbb
aas
and
out
inc
shr
insb
mov
pop
sub
rorl
outsl
lret
push
push
in
cmp
aam
pop
mov
adc
dec
adc
sbb
mov
mov
jl
xchg
scas
adc
xchg
pusha
mov
sub
mov
mov
add
xor
fwait
mov
and
movsl
in
rorb
dec
sbb
and
leave
or
mov
in
mov
enter
mov
mov
push
ds
ss
inc
xchg
sbb
and
in
repnz
or
jno
and
mov
fildll
xor
aaa
push
mov
in
push
out
scas
aas
icebp
push
pushf
mov
ret
jmp
out
insl
dec
mov
gs
jmp
loopne
mull
shlb
lcall
mov
xchg
sti
mov
sub
imul
sbb
icebp
xchg
inc
mov
and
push
dec
out
push
mov
mov
popa
push
stc
sub
jge
jnp
int
fstpl
cli
and
mov
imul
mov
imul
mov
adc
imul
shll
xor
imul
enter
and
xor
xor
lods
pop
ret
filds
into
cs
cmp
stos
out
add
adc
jno
rcrb
dec
das
sahf
out
push
cmp
cltd
adc
mov
push
mov
adc
dec
test
arpl
out
scas
and
stc
inc
fwait
push
dec
out
jnp
in
aam
mov
pop
pop
dec
push
fs
push
adc
call
mov
jl
jge
pop
or
cmp
scas
nop
sbb
inc
push
push
jmp
mov
cmpsb
pushf
daa
or
mov
je
movsb
dec
dec
fs
movsl
dec
jbe
jo
lods
jmp
cmp
mov
xor
adc
scas
dec
xor
mov
lahf
cmp
mov
lcall
dec
mov
insb
and
add
push
adc
xor
dec
or
mov
test
into
stos
jge
test
push
loop
sub
ja
outsb
adc
adc
into
xchg
mov
test
push
jge
xor
ss
lods
push
test
sub
mov
test
ret
scas
cltd
inc
mov
and
xchg
in
adc
cmp
sbb
js
cli
loop
cmc
es
adc
imul
mov
pusha
cmp
push
sbb
or
out
call
or
call
mov
adc
popa
jp
in
xor
test
je
in
int
cmpsl
adc
les
pop
sbb
insb
add
mov
pop
out
insb
stos
push
mov
lea
lods
jmp
jl
push
or
test
lods
scas
push
push
idivb
xor
inc
jge
fimull
dec
ret
test
xor
adc
sub
add
push
add
stos
add
int3
cwtl
adc
or
lods
in
adc
mov
arpl
icebp
push
in
mov
lret
pop
push
cs
sub
fisttpl
inc
dec
imul
ret
movsb
jmp
push
adc
add
xor
loop
ret
imulb
push
lret
or
adc
dec
movsb
fstps
sub
stc
fcoml
loop
rorl
jecxz
mov
dec
data16
leave
mov
scas
je
mov
mov
cs
les
lcall
addb
sbb
add
add
cmpsb
mov
dec
in
scas
in
push
leave
cld
mov
xchg
sbb
mov
loopne
cwtl
or
mov
testb
add
aam
shrb
or
into
push
push
fldcw
imul
or
mov
stos
pop
push
int3
loopne
arpl
or
mov
xchg
idivl
fldcw
push
fmul
loop
push
rcrb
leave
mov
outsb
outsb
test
pop
lods
into
insl
in
mov
add
and
movsb
stos
lods
or
inc
xchg
mov
dec
mov
cmp
ret
mov
scas
mov
frstor
push
jne
xor
push
sbb
adc
cmp
stos
sub
push
add
add
xor
imul
cwtl
arpl
lcall
jg
push
test
xor
adc
out
jae
imul
sub
mov
mov
test
imul
insl
adc
dec
filds
xchg
lods
ljmp
dec
das
out
add
mov
mov
in
mov
jbe
and
add
aaa
int3
dec
scas
adc
mov
sub
or
mov
das
sub
scas
outsl
imul
cli
ret
ffree
popl
je
in
sub
sub
or
xor
or
add
dec
lods
jb
sub
add
movsb
sub
test
sub
mov
add
jb
push
mov
leave
insb
faddl
stos
test
adc
fs
and
dec
les
and
out
inc
lahf
and
scas
pop
push
cmpsl
sub
dec
roll
lods
xor
push
lea
enter
sbb
ret
test
arpl
and
xor
fdivrl
repnz
mov
imul
out
xlat
xor
out
sub
dec
xor
add
popf
cmp
inc
dec
out
dec
sti
arpl
into
pop
mov
out
test
movsl
aad
jnp
adc
mov
mov
lahf
xor
and
outsb
adc
lret
xor
pop
jb
arpl
jle
mov
adc
decl
in
aam
ss
dec
xor
jmp
add
and
mov
mov
cmp
adc
adc
adc
sub
in
je
inc
stos
push
or
test
sbb
add
pusha
rorb
test
xlat
lcall
fdiv
jge
dec
pushf
push
stos
ret
scas
and
jb
jle
imul
stos
adc
push
adc
and
popf
sub
jns
arpl
out
cmpsl
out
mov
aaa
xchg
dec
adc
enter
icebp
in
sub
mov
mov
stos
pop
and
pusha
push
imul
outsl
inc
jg
cmp
je
mov
jl
out
mov
fs
call
sub
mov
scas
fsubrs
jb
insb
dec
pushf
mov
inc
push
arpl
inc
loop
sub
cmp
mov
iret
lret
mov
xor
add
or
sub
xor
sbb
dec
imul
loope
dec
aad
scas
cmc
pushf
insl
fimull
inc
leave
jg
int3
aas
add
imul
scas
jge
sub
xchg
or
pop
sarb
loop
fists
add
repnz
cmpsl
stos
jmp
jl,pn
out
mov
lar
adc
lret
add
pusha
lea
rclb
mov
fidivrl
cmp
enter
sbb
repz
xchg
cmp
pop
sub
imulb
xor
jnp
aam
jns
filds
out
sbb
push
and
int3
int
sub
mov
cli
dec
and
outsb
out
and
out
xorl
jne
and
xor
cmpsl
or
insb
mov
push
push
sub
mov
jp
push
lods
stos
imul
or
lahf
arpl
add
das
mov
pop
sbb
and
jno
cli
mov
outsb
mov
into
mov
pop
sub
in
push
cltd
inc
cmpsl
clc
test
jno
xchg
call
repz
lods
push
icebp
dec
mov
cmc
mov
add
in
das
cld
xor
mov
push
cmp
in
xorb
sub
mov
out
stc
imul
add
adc
and
cmp
sub
fisubs
loopne,pn
or
out
outsb
xchg
je
outsl
or
rcll
pop
pop
jns
mov
dec
in
jle
icebp
jmp
cmp
jnp
mov
sub
jl
xchg
sbb
and
lcall
stos
sub
mov
push
and
lods
pop
add
cmc
inc
pop
mov
subl
add
inc
sbb
mov
dec
das
add
or
mov
popa
adc
and
push
inc
adc
adc
jp
or
jne
es
mov
push
sub
xchg
xor
cmpsl
and
hlt
cmp
cmp
fnstcw
loop
xchg
push
insb
xchg
iret
mov
or
pop
aam
mov
xor
mov
je
pusha
push
lods
dec
negb
jg
into
mov
mov
add
out
mov
rcrb
adc
int
jge
adc
adc
jbe
xchg
in
sub
repz
mov
call
dec
and
rolb
xchg
dec
in
popf
mov
movswl
mov
loop
xor
jecxz
jbe
movsl
orb
jo
adc
repnz
push
sbbl
pop
sub
aas
movsb
xchg
cmp
mov
xchg
loop
arpl
in
sub
sub
inc
or
lret
sub
inc
adc
push
fcmovu
dec
popa
iret
xor
push
flds
fs
and
push
mov
mov
or
loope
iret
popf
adc
mov
cli
mov
pop
or
pop
inc
test
add
fs
stos
xor
jl
ljmp
cmp
xor
outsb
sub
mov
pop
jmp
nop
or
imul
sarl
in
out
jecxz
lea
mov
pop
cmpsb
dec
sbb
cmp
loop
stos
cmc
nopl
jmp
stos
xor
arpl
pop
arpl
mov
or
ret
and
movsb
push
aam
out
scas
lcall
adc
mov
movsb
adc
cld
nopl
sub
dec
sbb
pop
inc
xchg
mov
sysenter
daa
xor
pop
inc
out
clc
loop
xlat
pop
cmp
test
jbe
outsb
fs
sub
or
ds
mov
sub
dec
into
mov
imul
adc
test
les
dec
mov
gs
aam
or
fadds
stos
cmp
dec
jns
pop
in
movsb
jle
outsb
imul
das
pop
add
mov
pop
mov
cs
loop
ret
je
shll
mov
inc
dec
arpl
gs
add
das
arpl
test
add
inc
ljmp
sub
push
std
sub
loop
lods
push
push
mov
insb
aas
int
mov
sub
cmp
sbb
jl
cs
sub
insb
push
sbb
scas
sub
fisubrs
mov
cmp
xor
mov
cmpsl
pop
iret
lods
das
sub
shrb
mov
jns
lcall
repz
cmp
xchg
cmp
mov
dec
mov
in
and
ret
sbb
add
in
bound
jecxz
arpl
sub
mov
int3
or
lret
arpl
push
adc
stc
mov
adc
mov
inc
ret
mov
cmp
lods
pop
shrl
out
xchg
fisubrl
cmp
or
scas
dec
mov
dec
test
scas
xchg
push
in
jl
cwtl
movsb
outsb
pop
test
insl
sbb
stos
addr16
call
ljmp
dec
fisubl
dec
and
adc
fdivrl
ds
lods
in
sub
dec
enter
xchg
idiv
mov
or
and
insb
xchg
sbb
andb
mov
xchg
cli
popa
mov
mov
aad
insl
or
xor
std
test
push
inc
dec
leave
mov
inc
loope
out
dec
mov
mov
outsb
xlat
ljmp
enter
jge
lods
sub
clc
movsb
test
into
xchg
cmp
lock
dec
and
test
mov
rcr
adc
enter
loop
inc
ja
cmpb
addl
in
dec
int
sub
adc
mov
jnp
es
and
std
adc
xchg
mov
jl
adc
push
das
sub
loope
imul
adc
inc
cmc
mov
jmp
inc
jecxz
sub
cs
ret
push
jmp
cmp
cmc
arpl
and
js
or
loop
lret
pusha
xchg
jne
and
dec
add
outsb
cltd
mov
jl
push
lds
and
ret
push
outsb
lods
or
jno
scas
push
mov
test
cmp
scas
pusha
dec
dec
out
scas
and
ret
or
jl
into
arpl
adc
int
xchg
mov
stos
adc
sbb
xchg
sub
jge
outsl
mov
sub
out
in
scas
subb
jnp
das
psubsb
lods
lcall
addr16
test
mov
testb
loope
sub
loop
stos
out
add
cmp
ret
sub
inc
iret
out
pop
cmpsl
popf
add
pop
decb
mov
and
repnz
movsb
or
mov
fmuls
ret
dec
sbb
pop
mov
jns
test
das
sub
or
out
adcl
mov
mov
arpl
loop
xchg
dec
mov
in
out
push
adc
int3
add
cmp
or
mov
fimuls
push
adc
in
jp
inc
cwtl
and
adc
stos
and
jecxz
hlt
and
dec
fimull
rorb
and
xor
sti
pushf
lods
lea
filds
and
cmp
inc
enter
mov
lea
and
or
dec
sub
dec
cmp
loop
imul
dec
adc
aaa
addr16
std
jecxz
je
cmp
pop
dec
in
insl
mov
loop
mov
mov
adc
push
addr16
je
xchg
mov
push
jmp
push
insb
jns
sbb
out
cmp
arpl
fldl
sarb
test
xor
std
pop
imul
fimuls
mov
ljmp
stos
scas
das
insb
inc
loope
orb
cmp
sub
aam
dec
xchg
fwait
or
mov
adc
mov
cmpl
adc
scas
jo
mov
cld
jmp
mov
mov
roll
jecxz
and
leave
test
mov
or
in
les
push
xchg
adc
jne
sub
adc
mov
push
out
scas
push
std
popa
out
xchg
div
scas
fdivs
scas
lods
shlb
adc
add
je
imul
out
shrl
mov
add
or
sbb
sbb
push
iret
divl
pusha
scas
fimull
or
je
push
dec
jecxz
std
push
or
imul
sbb
push
push
add
call
dec
inc
shl
jp
inc
add
mov
insl
mov
adc
xchg
mov
arpl
fistpl
stos
push
mov
les
imul
push
mov
scas
enter
add
out
sub
test
repz
or
dec
dec
mov
js
leave
ficoml
push
push
lret
inc
and
leave
mov
sub
sub
scas
jecxz
call
repz
dec
shrb
mov
aaa
add
das
and
adc
adc
or
arpl
push
out
pop
jecxz
pop
imul
push
in
xchg
add
int3
and
arpl
out
out
pop
loope
das
jns
scas
test
mov
jo,pn
js
push
push
inc
aas
inc
imul
cltd
test
mov
dec
das
stos
rcpps
dec
mov
outsb
push
in
fcmovu
loop
loop
pop
push
in
popf
inc
test
jne
mov
arpl
lea
or
sub
stc
cltd
xor
xor
insb
push
and
out
sbb
xor
add
imul
mov
jmp
int
arpl
out
loope,pt
pop
sbb
inc
in
or
lcall
mov
test
mov
cltd
xor
sub
cmpsl
push
dec
mov
es
loopne
xor
sub
mov
adc
sub
test
rclb
gs
mov
dec
fidivrl
stos
fs
fnsave
aad
in
sub
ret
jecxz
xchg
enter
and
sub
fstp
sub
outsl
xor
out
xchg
scas
sub
cld
jne
sbb
or
sbb
push
mov
push
jmp
mov
stos
push
enter
or
or
mov
push
lds
ret
pop
adc
or
sub
jne
sub
mov
js
repz
jmp
dec
ljmp
mov
cli
out
mov
stc
mov
out
xor
sbb
mov
lods
cmp
push
mov
lea
stos
and
imul
lret
mov
enter
xchg
inc
sbb
js
in
sub
sub
and
int3
addr16
inc
test
push
xchg
ljmp
cmpsl
mov
push
nopl
leave
add
inc
imul
into
fsubs
add
outsb
xchg
or
ret
xchg
in
pop
adc
fdivrl
insb
fsubrl
arpl
ret
jecxz
ja
and
rcrl
and
pop
out
outsb
mov
mov
jne
sub
adc
mov
fwait
clc
aad
stos
mov
xchg
jmp
in
insb
loopne
dec
outsl
xchg
cld
cmc
imul
outsb
bound
imul
mov
dec
or
int
dec
dec
mov
jns
jecxz
pop
push
pushf
stos
scas
sbb
mov
imul
push
jle
pushf
sahf
or
ret
in
dec
sti
mov
loop
inc
adc
push
xor
lock
mov
or
or
outsb
adc
ds
in
add
xchg
xor
mov
ljmp
adc
push
pop
jnp
out
popa
ret
push
fcmovnbe
mov
outsb
dec
lahf
mov
in
iret
mov
mov
dec
add
test
sub
mov
imul
shlb
push
or
and
repz
std
fdivl
mov
jmp
sbb
push
cld
mov
insl
pop
mov
mov
and
mov
fs
out
insl
pop
cmp
pop
mov
push
cmovs
adc
mov
sub
dec
adc
jl
call
hlt
push
arpl
loopne
lea
ret
stos
out
jle
cwtl
dec
mov
ror
loop
xchg
dec
push
fists
and
dec
mov
adc
jle
dec
and
mov
cltd
dec
shlb
in
adc
lret
cmc
xchg
xor
xor
push
xor
fstpl
mov
pusha
push
jecxz
fcmovnb
xor
inc
imul
jge
add
lods
mov
push
mov
cmp
lcall
incl
imul
dec
jg
and
and
fdivr
jbe
cwtl
lahf
cmpsb
mov
xor
mov
or
mov
jbe
imul
aam
dec
mov
das
dec
cld
ja
push
jns
cmp
jmp
ljmp
call
repz
xchg
mov
xchg
inc
add
xlat
in
in
or
jl
xchg
fisubrl
cmpsb
clc
sub
push
pushf
lds
inc
dec
in
ret
lret
fs
aad
dec
in
out
jecxz
lock
and
cs
mov
mov
pop
or
mov
mov
stos
scas
adc
repnz
add
in
stc
test
ret
dec
mov
cmp
jo
into
add
or
xchg
mov
adc
pop
movsl
add
adc
js
xchg
repz
stos
scas
jbe
fisubl
adc
pop
jg
and
mov
mov
and
sbb
jp
pop
add
add
je
sub
stos
fstl
shl
inc
wbinvd
mov
push
mov
fldenv
popf
sbb
rorb
mov
call
int
dec
out
xor
movsl
lods
jp
insb
repz
push
lods
inc
adc
lea
ss
iret
push
pushf
movl
push
inc
out
inc
cmp
int3
scas
mov
adc
stos
dec
xor
sbb
dec
mov
add
inc
adcb
inc
out
jle
sub
pushf
or
inc
cmp
enter
je
push
sbb
jge
popa
mov
adc
mov
lods
xchg
test
ljmp
or
repz
jecxz
inc
out
adc
std
xor
aaa
lahf
cmp
adc
mov
sub
test
xor
sti
or
xchg
dec
adc
xor
lods
dec
cmp
outsb
aad
mov
mov
cmp
cmpsb
orb
inc
or
or
xchg
push
add
mov
pop
scas
or
std
mov
sbb
dec
nop
int
xchg
mov
dec
sarl
lods
and
jg
and
sub
pop
lcall
push
lcall
out
loop
jbe
dec
jb
in
push
push
repz
int
sahf
js
les
ret
inc
xor
cli
inc
cmp
or
push
push
fs
cmpsl
pop
sub
arpl
dec
inc
mov
and
stc
arpl
lahf
mov
inc
test
dec
in
mov
pop
mov
sbb
cmp
arpl
daa
out
jge
lcall
in
fcompl
scas
mov
test
int
sbb
cwtl
cmpsb
sub
add
sbb
mov
cmpl
sbb
sub
inc
lret
jne
mov
ficomps
ljmp
xor
insb
add
cmp
arpl
and
xlat
mov
adc
dec
push
push
faddl
mov
mov
jae
inc
addr16
and
cmpsb
iret
or
into
jl
xor
loop
xor
andl
adc
insl
lret
xchg
mov
or
rcr
or
inc
and
sub
add
lahf
pop
push
xor
and
in
lods
cmp
arpl
outsl
gs
movq
imul
push
push
ror
jbe
dec
cs
mov
dec
in
mov
add
add
sbb
adc
int3
xor
mov
add
ss
fimuls
dec
mov
jnp
and
cmpsl
arpl
loop
dec
ret
out
xchg
cmp
iret
sub
movsl
pushf
push
or
cwtl
or
sub
mov
aam
mov
dec
sahf
push
adc
lret
adcl
mov
sbb
add
mov
dec
stos
sbb
or
dec
push
sbb
ret
outsb
rorl
pop
cld
stos
mov
pushf
fimull
jg
cmpsb
fcos
aam
rclb
cmp
cltd
arpl
ljmp
movsl
xor
repz
and
dec
xor
jl
mov
sub
stc
sahf
in
inc
cltd
push
das
sub
sbb
mov
push
or
andb
loop
jo
dec
push
mov
insb
pop
enter
cmp
wbinvd
xchg
cld
jge
scas
jmp
push
fdivs
mov
or
in
jno
iret
mov
add
xor
daa
nop
adc
jne
cmp
data16
insl
add
push
addb
scas
loop
insb
push
jecxz
cli
test
fld
int
push
lret
in
or
and
jb
jecxz
bound
pop
lock
dec
xor
sbb
xor
arpl
outsl
xchg
xor
imul
adc
or
sahf
mov
jl
pop
das
cld
scas
sub
or
mov
adc
icebp
mov
or
and
push
or
cs
lret
xlat
loopne
jb
lods
or
inc
imul
addr16
pop
ljmp
sti
pushf
repnz
ret
cs
out
adc
jne
gs
sub
mov
dec
loop
mov
lods
push
call
push
rcl
repz
stos
or
add
mov
or
dec
les
mov
push
mov
inc
test
inc
ljmp
sub
xchg
pushf
inc
pusha
das
into
sub
in
das
es
ljmp
mov
lret
je
imul
movsb
or
aaa
mov
jecxz
jl
je
repz
pop
xor
sub
mov
addr16
outsb
jmp
or
je
outsb
mov
jle
cmp
mov
arpl
push
insl
xor
or
and
outsb
repnz
je
mov
push
repz
pop
cmpl
outsl
repz
push
call
sub
xor
pop
rorb
and
or
or
pop
adc
mov
shll
lret
mov
out
repz
push
cmp
xchg
dec
out
out
mov
push
hlt
inc
sbb
shll
lret
cltd
jge
call
into
int3
xchg
fs
loop
mov
lret
sub
in
dec
xchg
adc
fisubrs
cmpsb
add
sbbb
rclb
mov
and
xchg
in
xor
xor
inc
outsb
jb
mov
push
out
int3
cwtl
ffree
dec
jecxz
add
xor
fildll
mov
mov
cs
sub
mov
xor
jecxz
lods
imul
push
repnz
xor
imul
sbb
adc
ss
sbb
mov
mov
xchg
sbbl
sub
movsl
xor
xchg
dec
cltd
rcl
outsb
mov
add
subb
lods
cmp
sub
pop
repnz
sub
fldt
out
sub
cmp
adc
sub
sub
sub
sar
or
xchg
test
stos
mov
mov
mov
popf
fiaddl
movsl
or
or
jmp
mov
add
mov
sub
mov
and
cli
jl
xchg
fnsave
ret
mov
mov
adc
or
inc
ret
jbe
iret
pop
mov
mov
adc
in
xchg
mov
pushf
loope
sbb
mov
fs
mov
push
mov
call
pop
mov
ret
xchg
push
outsl
pop
adc
mov
and
dec
es
jo
xchg
insl
xchg
out
jecxz
imul
into
mov
scas
cmp
cmp
leave
ds
aam
out
sti
or
out
xchg
xchg
leave
and
cmp
sub
std
inc
out
or
jge
shl
xor
mov
pop
mov
inc
dec
fidivrl
enter
xor
adc
add
call
dec
mov
or
repz
mov
out
mov
cmp
xchg
jns
push
jmp
cmp
movsl
rcll
mov
clc
out
in
push
rcll
dec
xchg
pop
repz
andl
adc
mov
dec
in
pop
pop
or
repnz
cmc
in
cld
enter
lret
das
xor
or
xor
dec
cli
js
scas
mov
xor
xchg
xchg
loop
in
mov
mov
pop
dec
enter
insl
mov
out
lods
mov
sub
dec
out
ficomps
sbb
fildl
fldcw
out
std
mov
shrl
lods
add
sub
adc
adc
nop
pop
mov
mov
sbb
push
inc
jb
scas
scas
cld
repnz
arpl
mov
addr16
sbb
fildl
add
dec
push
mov
sub
lock
into
sub
sub
cwtl
lods
push
arpl
stos
sub
dec
add
add
adc
lcall
test
or
nop
out
sbb
int
inc
shl
mov
sti
push
jecxz
xor
jmp
mov
in
or
pop
sub
sahf
faddl
loop
and
xchg
cmp
int
lods
roll
fisubrl
in
mov
lahf
pop
mov
cli
sub
sar
or
push
mov
sub
mov
push
insl
or
xor
adc
loop
daa
insl
jp
xlat
les
fwait
rcr
or
push
jecxz
mov
add
mov
jmp
in
stos
jp
mov
mov
pop
int
xor
ret
push
int
seta
loop
pop
push
pop
outsb
mov
mov
outsb
push
sub
scas
push
or
pop
ss
cmp
mov
sahf
xorb
dec
and
xor
and
out
outsb
pop
mov
test
dec
dec
in
cmp
sub
lock
sub
aam
sub
enter
loop
clc
push
xor
pop
pop
rclb
das
inc
mov
test
dec
xchg
push
add
iret
aam
push
jecxz
pop
sarl
mov
sbb
fwait
mov
push
dec
pop
or
dec
jle
test
adc
fldenv
iret
adc
add
sbb
jp
jecxz
mov
jl
rcrl
pop
arpl
sub
test
add
inc
js
nop
push
sub
enter
scas
push
adc
outsl
mov
test
ret
mov
arpl
adc
xor
xor
xchg
xor
xchg
jle
imul
aaa
js
sahf
dec
push
push
mov
arpl
and
popa
jmp
nop
int
test
pushf
xor
loop
adc
outsl
loop
out
lret
push
pushf
insl
fcoml
pop
add
insb
leave
add
mov
or
jmp
fsubrs
dec
minps
sbb
mov
push
clc
test
sub
jmp
imul
cmp
mov
sub
sti
lds
mov
push
iret
cs
dec
lock
imul
adc
shrb
movsb
ret
dec
xchg
cmp
jl
mov
scas
std
pushf
xchg
insb
mov
bound
pop
mov
mov
push
pushl
mov
sbb
andl
sbb
popf
mov
sbb
stos
sub
or
mov
fildl
test
push
and
mov
in
jge
lea
movsb
adc
in
fs
es
jb
cs
scas
hlt
jp
lods
xchg
cmp
repnz
das
out
ds
mov
add
icebp
mov
inc
cltd
or
mov
sub
stc
jns
repnz
jge
out
scas
fistpll
xchg
stos
sbbb
dec
pop
add
rclb
mov
push
jns
xchg
int3
out
sub
lret
sub
sub
xchg
jmp
imul
mov
std
pop
aam
adc
sbb
cmp
dec
stos
arpl
xor
add
inc
xchg
or
add
dec
inc
test
dec
adc
repnz
daa
imul
inc
xor
pop
in
sbb
mov
stos
adc
and
mov
js
sub
arpl
into
xlat
dec
jg
dec
stos
loop
imul
dec
pop
and
out
dec
mov
in
xor
add
adc
adc
imul
mov
dec
call
stc
jns,pt
sub
stos
mov
int
ret
dec
fsubrl
inc
cs
cs
insb
lret
jns
mov
sbb
or
imul
stos
fwait
sub
jmp
dec
sbb
xor
fdivr
fsubrs
jo
insl
mov
dec
pop
stos
int3
movsb
std
sub
mov
imul
in
mov
in
leave
ds
arpl
jecxz
popa
aas
out
sub
test
scas
aam
in
stos
pop
in
cmpsl
iret
mov
cltd
fisttps
xchg
xchg
je
lods
sub
ret
sub
in
pop
cmpsl
adc
pop
and
bound
cmp
push
in
xor
pop
loop
lea
mov
cltd
push
add
dec
popf
js
push
adc
daa
add
hlt
ror
cwtl
add
sbb
mov
scas
scas
and
ret
aad
sub
ret
xchg
xlat
arpl
das
int
sub
hlt
popa
add
mov
cmpsl
out
adcl
jg
shll
roll
mov
rcll
jecxz
icebp
or
pop
mov
popf
std
fadds
jle
stos
aad
loop
sub
dec
cwtl
sub
iret
xchg
xor
or
adc
mov
scas
or
mov
pushf
test
into
jno
lret
int
mov
xor
push
mov
sahf
jecxz
mov
ret
xchg
or
or
aaa
pop
sub
mov
pop
adc
nop
in
jbe
jns
fidivrl
outsb
xchg
ja
arpl
repnz
push
or
das
mov
sbb
mov
cs
sub
scas
cmp
mov
mov
cli
pushf
in
push
inc
scas
fisubs
cmp
out
fs
filds
scas
loop
bound
std
icebp
adc
test
sub
insl
jecxz
enter
mov
mov
outsb
or
and
lds
sbb
adc
mull
test
outsl
cmp
shrb
es
add
nop
sbb
test
arpl
adc
push
adc
sub
popl
lea
das
cltd
imul
out
add
push
outsl
test
out
fidivrs
aad
push
in
das
push
sub
dec
add
jle
scas
sub
jl
sub
sub
out
int
xchg
test
enter
out
or
xchg
aam
out
mov
stos
jl
sbb
out
or
and
cwtl
lahf
bound
xor
mov
inc
mov
mov
fcomps
scas
push
addr16
clc
mov
insl
out
inc
add
shll
mov
out
add
das
add
test
pop
jecxz
out
jmp
and
ret
or
fisubrl
leave
sti
push
subl
adc
jg
ss
mov
inc
mov
mov
or
notl
sbb
outsw
or
fsubl
cs
mov
mov
jge
xchg
leave
fs
jle
dec
das
mov
das
adc
ljmp
add
movsb
sbb
xor
cmpsl
and
adc
pop
in
jp
int3
cwtl
or
jge,pn
xor
add
stos
xor
jecxz
push
adc
insl
xor
scas
adc
push
test
pop
in
popa
add
dec
cmp
xchg
adc
cmp
arpl
lcall
mov
mov
mov
xchg
sub
out
and
jbe
xchg
sub
pop
leave
dec
aaa
loop
pop
lods
idivl
sub
mov
imul
dec
fcmove
fsub
add
adc
sbb
ljmp
sbb
roll
xchg
scas
xchg
pop
ret
loop
mov
loop
inc
mov
mov
je
repz
and
or
idivl
test
out
and
call
sub
jns
pop
rclb
pop
scas
mov
jl
jl
out
sbb
push
bound
xchg
mov
cltd
add
mov
sub
jl
in
ja
enter
ja
and
fiadds
or
movsb
loope
sub
adc
jecxz
adc
inc
lret
and
outsb
ret
popa
dec
arpl
add
adcb
lods
decw
push
dec
int
scas
loope
mov
push
int
sub
mov
sub
xchg
add
insl
pop
sub
and
mov
sarb
outsl
stos
cwtl
fistps
sub
push
int3
jne
outsb
mov
gs
and
and
xchg
aaa
pop
xchg
mov
int
xchg
mov
and
arpl
daa
mov
imul
lods
mov
dec
push
xchg
ret
dec
in
sbb
jmp
pop
sub
mov
enter
mov
lret
inc
sub
mov
fcmovbe
pusha
je
dec
arpl
std
lods
out
andb
daa
lahf
mov
inc
sub
scas
ljmp
out
add
into
xchg
dec
in
jbe
adc
movsb
cwtl
or
dec
push
mov
dec
mov
mov
xor
adc
lret
jmp
pop
adc
out
imul
push
xchg
mov
repz
add
rorl
stos
sbb
and
cmp
orb
push
frstor
mov
and
test
lret
and
dec
or
mov
shrb
call
iret
test
mov
or
fmull
out
jg,pt
mov
sub
pop
add
sti
add
cmpsb
mov
inc
mov
rorl
adc
xchg
cmp
imul
aad
in
sub
insl
xor
subb
ds
lret
sbb
scas
popl
scas
fcmovb
out
pop
popa
xchg
sbb
in
inc
sahf
stos
loopne
sub
sbbl
pop
pop
in
iret
cs
mov
popa
test
aam
ret
insl
sti
das
inc
icebp
or
jmp
sub
pusha
call
nopl
addr16
pop
ficompl
imul
shrl
sarb
ja
push
shlb
in
sub
jmp
int
or
ficoms
imul
mov
pop
xchg
test
clc
call
adc
dec
xchg
fistpl
mov
cmp
dec
sub
loop
push
push
sub
cmc
jb
sub
or
xlat
push
jno
jecxz
pop
mov
jns
pop
stos
inc
mov
mov
xor
ret
inc
push
arpl
sub
mov
scas
fidivl
mov
mov
jecxz
fsubrs
bound
stos
andb
pop
notl
sub
and
repz
insl
inc
shr
es
dec
cmpsl
lods
dec
mov
fidivrl
and
lret
je
add
and
ret
jo
push
in
pushw
xchg
cmc
mov
adc
cwtl
mov
push
arpl
mov
ret
sti
mov
xchg
sub
inc
lods
out
scas
adc
fstpt
daa
out
int3
or
rclb
outsb
sub
insl
sub
sub
sub
xor
and
mov
test
stos
sub
mov
dec
cs
cmp
je
mulb
out
insb
or
sarl
jb
inc
jl
jp
sub
sub
lea
outsb
and
mov
xor
pop
push
dec
adc
loop
test
xchg
arpl
sub
sub
or
cmc
lods
andl
lret
sbb
arpl
sub
mov
imul
dec
sbb
push
sub
pop
clc
xchg
out
mov
dec
adc
fisubrl
outsl
adc
mov
sub
lock
mov
mov
adc
das
mov
mov
outsb
adc
xor
add
outsb
out
out
jg
jl
xchg
sub
or
mov
mov
lods
daa
push
insl
pop
cmp
and
pop
fdivl
pop
dec
jns
or
add
aad
jnp
adc
push
rcrb
jecxz
pushl
out
jl
mov
test
mov
clc
adc
test
retw
fs
cs
dec
and
stos
xchg
lods
imul
jmp
lahf
cwtl
inc
sahf
jnp
or
pop
mov
push
push
mov
and
xlat
lahf
or
mov
adc
in
iret
repz
pop
push
stos
jg
aam
mov
test
rcrb
ret
imul
adc
push
repz
fwait
xchg
inc
mov
test
mov
and
inc
enter
mov
int3
shrb
in
test
sbb
mov
adc
push
shll
and
pop
xor
push
test
sub
lcall
and
rorb
call
int3
aas
scas
or
mov
pop
inc
xchg
xlat
push
adc
fcmovnb
mov
cli
sub
jae
jmp
int3
loop
mov
call
ret
pop
aam
sbbl
xor
notl
adc
mov
out
or
sub
icebp
push
fwait
loope
outsb
dec
jle
cmp
clc
xlat
and
mov
cmp
cmp
inc
test
jmp
pop
mov
dec
cmp
outsb
mov
mov
mov
imul
scas
in
imul
in
push
cwtl
mov
add
rclb
mov
repz
cltd
pop
scas
cli
mov
jmp
cmc
and
add
push
fidivrl
fdivs
popa
sub
fwait
arpl
adc
mov
sub
xchg
inc
fldt
add
cmpsl
sbb
fldenv
dec
pop
add
jo
and
dec
in
mov
lods
add
lret
sub
pop
andl
stos
jg
and
inc
jo
mov
adc
dec
sbb
dec
adc
scas
and
das
das
push
inc
popa
out
pop
adc
loop
dec
js
sub
sub
xor
cs
arpl
push
insl
inc
xor
sub
mov
shlb
pop
adc
push
call
adc
add
mov
mov
xor
lea
iret
es
out
js
das
sarb
into
adc
jp
loop
sbb
mov
mov
and
mov
sbb
outsl
xchg
mov
dec
jg
dec
cltd
dec
imul
subl
pop
stc
xor
int3
leave
adc
push
sbbb
loope
outsb
arpl
inc
arpl
ret
xlat
outsb
rcr
mov
xor
or
pop
cmp
imul
cwtl
icebp
lods
lret
imul
xchg
stc
xor
mov
push
or
or
shl
sub
push
stos
outsb
icebp
xor
imul
into
dec
sbb
cwtl
ss
adc
into
add
test
in
js
sub
push
in
lods
push
xchg
sbb
out
arpl
icebp
push
call
adc
sarl
jns
scas
dec
sub
sbb
inc
mov
and
leave
test
dec
mov
adc
lods
push
adc
rorl
mov
and
je
cwtl
popl
sub
sub
insb
rolb
adc
loop
dec
push
mov
leave
sti
or
fcoms
mov
xor
shll
fld
ret
mov
iret
imul
arpl
js
rclb
or
and
fldl
sub
ds
mov
icebp
sbb
xchg
mov
pusha
ret
cltd
and
sub
and
mov
or
jo
adc
nop
mov
jg
adc
pushf
popf
push
or
repz
mov
sub
arpl
inc
aam
mov
sub
or
inc
mov
sbb
xchg
jp
jecxz
cltd
lea
fisttpl
mov
imul
jl
and
repnz
iret
test
sbb
dec
mov
sub
mov
lods
or
lods
movsb
jecxz
lcall
sbb
mov
or
into
test
jge
or
lock
xor
lds
out
mov
movsb
cltd
xor
movsw
adc
push
int3
fimull
or
test
mov
cwtl
dec
int
mov
ficoms
pusha
add
inc
sub
mov
out
lods
or
mov
push
sbb
imul
and
or
mov
repnz
mov
pop
or
jg
inc
icebp
lea
cmp
mov
sarb
cli
arpl
mov
scas
arpl
stos
sub
pop
push
adc
stos
add
mov
mov
adc
pinsrw
mov
inc
cltd
mov
or
pop
arpl
jecxz
pushf
icebp
out
adc
insl
sub
insl
push
jecxz
push
mov
or
xchg
imul
adc
fdivrl
adc
mov
lea
mov
imul
loop
pop
std
push
dec
mov
push
jecxz
and
imul
xchg
aam
stos
sbb
sti
push
and
movsb
dec
push
xchg
jo
sub
int
adc
push
cs
push
sbb
mov
out
popf
fucomp
mov
js
pop
or
xchg
xor
mov
inc
sbb
adc
adc
pusha
stos
mov
arpl
bnd
inc
arpl
lret
xchg
or
repz
ret
lcall
call
mov
inc
arpl
mov
sub
movsb
ja
add
adc
ljmp
dec
pop
mov
sub
aad
add
dec
mov
arpl
in
or
xor
xor
pop
pop
mov
fsubrs
test
push
mov
jb
xchg
inc
sbb
mov
inc
or
pop
ret
cvtdq2ps
in
aas
mov
outsb
mov
mov
adc
xchg
adc
andl
sub
mov
enter
dec
sub
adc
adc
jg
movsl
fs
inc
dec
or
mov
pop
dec
sub
dec
lea
xchg
adc
dec
lods
xchg
das
enter
popf
lret
dec
push
out
xchg
daa
and
insl
lods
add
hlt
xor
stos
mov
mov
arpl
or
jge
aaa
xchg
fsubrs
xor
and
je
scas
push
dec
inc
mov
jp
arpl
xor
cli
inc
push
xchg
sbb
and
dec
push
jp
sti
add
in
adc
add
mov
sub
xchg
sub
je
pop
push
cs
enter
out
push
add
sub
cs
sub
xchg
cmpsb
add
mov
or
cwtl
sub
andb
unpcklps
sbb
xor
jge
shrb
lods
and
jns
xor
sahf
pop
xchg
fsubs
imul
sti
arpl
cs
cmovle
xor
leave
sub
outsb
mov
add
lret
adc
andl
xchg
adc
aad
cli
add
std
adc
inc
aad
lds
jle
out
mov
lods
frstor
lret
mov
insl
jle
movsl
out
outsb
jo
stos
sub
push
int3
jl
dec
pop
or
sbb
adc
cwtl
in
imul
adc
inc
cwtl
fldcw
mov
xchg
out
xor
movsl
ljmp
and
pop
imul
pop
sub
sub
pop
stos
push
push
data16
or
das
out
enter
mov
out
test
scas
dec
mov
arpl
mov
xchg
arpl
iret
or
mov
mov
cmc
arpl
stc
out
add
ret
push
sub
adc
cmp
add
or
xor
pop
call
movsb
subl
mov
dec
into
sbb
adc
and
add
add
lods
ja
fcompl
push
mov
adc
or
gs
mull
outsb
fsubs
mov
outsl
in
imul
push
xchg
pop
cmp
arpl
xor
xlat
push
and
testl
cmpsb
stos
sahf
jo
sarl
xor
or
fiaddl
lret
repnz
repnz
xor
sub
sbb
inc
rol
xchg
out
sarb
inc
xchg
adc
ror
movsb
cmp
jle
push
xor
fsub
gs
add
popf
sub
mov
inc
orl
cmp
or
repz
or
mov
outsl
out
xchg
inc
scas
inc
insl
dec
arpl
mov
loop
push
repz
mov
out
ret
lcall
push
scas
xchg
testb
mov
stos
fildll
fisubrl
in
shll
outsb
and
cs
sbb
mov
notl
xchg
andb
aaa
dec
les
or
mov
jp
loop
or
pop
sub
fwait
jo
int3
cmpsl
add
pushf
sub
push
push
popf
scas
insb
adc
jae
lcall
sub
inc
pusha
repnz
cmp
fmull
loop
adc
decb
jmp
and
insl
pushf
fwait
add
sub
fdivrl
imul
out
mov
or
mov
add
mov
cmpsb
mov
ret
xchg
out
lds
ljmp
push
dec
out
sahf
popf
mov
test
and
sub
sub
sbb
pop
adc
pop
inc
xchg
ds
jns
icebp
in
dec
fsubrl
mov
sbb
dec
cmpsb
lret
inc
ss
xchg
imul
aaa
rcrl
lret
inc
in
or
dec
ret
fcmovnbe
arpl
or
int
or
fildll
orb
loope
out
int
in
cmp
stos
out
mov
fcoml
mov
aaa
imul
or
xchg
fsubrs
cltd
insb
add
stos
jb
inc
push
insb
repnz
or
outsl
xor
aam
fsub
loop
xor
aas
dec
cli
pop
lock
mov
add
mov
nop
mov
or
aam
dec
cmp
mov
test
fnsave
lods
mov
cmpsl
jge
add
cltd
lss
sub
inc
push
pop
in
enter
shll
adc
incb
or
xlat
in
rep
push
fstpl
push
insl
sbb
insl
stos
movsl
insl
cli
int
popa
shlb
scas
jmp
scas
sbb
push
xor
rolb
sti
jns
mov
push
push
lea
sub
mov
aas
lods
aam
fdivl
or
mov
or
insb
add
pop
xor
jecxz
mov
repnz
test
push
fwait
inc
cwtl
sub
push
jo
mov
pop
outsb
movsb
lret
pushf
jmp
push
jmp
mov
xor
mov
push
adcb
push
jae
jg
or
bound
sub
rclb
mov
or
insb
rcll
add
push
leave
dec
adc
sbbl
daa
insl
loop
sbb
or
stos
out
cmp
add
jnp
fcmove
jle
je
inc
push
ret
mov
sub
ret
dec
push
adc
repnz
dec
call
mov
mov
outsl
in
scas
and
call
int3
jl
mov
in
out
fcmovnb
push
xor
les
push
pop
movsb
push
stos
mov
dec
xor
dec
imulb
cmc
sub
out
xchg
out
mov
roll
sub
jo
xchg
test
gs
dec
push
dec
imul
mov
or
fisubs
xor
add
orl
sti
movsb
jg
push
mov
push
stos
aas
ljmp
into
fmulp
mov
and
loop
pushf
pop
push
into
pop
insl
outsb
test
lret
js
jns
lods
sub
mov
xchg
sbb
out
andl
lret
arpl
int
adc
lods
push
add
stos
sub
hlt
cmp
pop
mov
pop
or
adc
xchg
dec
adc
imul
aad
data16
inc
test
xor
lock
or
ret
ja
adc
subl
pop
xchg
call
les
push
scas
in
mov
rcll
or
mov
mov
out
fisubs
dec
flds
and
inc
fcomi
lods
std
test
dec
lods
mov
aam
lea
loop
or
dec
sub
dec
adcb
cmp
xor
repnz
sub
das
lret
sti
lea
xor
xchg
mov
mull
mov
cmp
ret
jbe
dec
stos
or
outsb
arpl
mov
fcmovnbe
sub
mov
mov
std
out
lahf
repz
dec
xor
adc
dec
ljmp
add
adc
lock
pop
push
add
lahf
push
pushf
shrb
and
xor
jmp
inc
dec
mov
sub
and
adc
dec
lahf
in
sub
test
xor
mov
iret
jp
cmpsb
adc
dec
std
lahf
dec
sbb
jbe
scas
xor
cmp
inc
mov
dec
cli
dec
loop
fisttps
loop
pop
sub
repz
fisubrs
dec
fs
xor
jo
mov
outsl
adc
jnp
sbb
aam
push
dec
insl
jecxz
ss
jg
imul
adc
add
into
dec
push
cmpsl
or
test
adc
push
jecxz
sbb
xchg
repz
xor
std
xor
lea
stos
xchg
scas
mov
jge
inc
mov
push
add
fdivs
insl
mov
dec
shr
test
cs
mov
cmp
and
in
xchg
xlat
out
ret
ret
mov
in
std
mov
inc
sub
imul
push
or
jne
out
jo
or
add
jmp
jge
jl
jmp
xchg
repnz
xchg
lods
mov
insb
pop
test
sbb
adc
out
or
inc
lcall
xor
cmp
jnp
sbb
pushf
fldpi
arpl
enter
mov
sbb
adc
push
repnz
sub
ljmp
fsubrl
jecxz
imul
adc
xchg
lods
xlat
insb
push
or
ljmp
ret
jns
mov
sub
cmp
mov
pushf
rorb
mov
out
dec
jl
xchg
fdivr
outsl
scas
das
dec
or
insb
fucomi
clc
pop
arpl
xchg
in
mov
out
mov
mov
sti
xchg
jmp
mov
adc
pop
xor
and
push
icebp
mov
loop
fmulp
xor
scas
adc
lea
push
loop
aad
adc
loope
pop
sub
mov
pop
sub
pop
sub
dec
pop
sbb
loope
mov
jbe
in
stos
je
sti
adc
cwtl
xchg
mov
jg
sti
popa
xor
jno
sar
cltd
push
arpl
xchg
mov
sbb
subb
mov
mov
jge
pop
pop
cmpsl
lods
insl
data16
cmpsl
fsubrp
rolb
jo
scas
pop
mov
cs
mov
lcall
mov
test
dec
mov
test
call
sub
inc
movsb
daa
in
cmpsl
ljmp
xor
sbb
ret
stos
test
test
into
xorb
ret
out
in
lahf
add
add
xor
test
mov
push
sub
dec
in
je
xlat
xor
test
sub
fs
xor
rclb
pop
push
in
dec
xchg
push
ljmp
lea
jle
cld
subl
dec
stos
push
adcb
ljmp
inc
xor
mov
push
out
adc
push
dec
shrl
jp
scas
push
enter
or
push
fsubp
adc
lret
cmpsb
out
mov
stos
pop
jg
xchg
adc
sub
sbb
cs
add
jnp
inc
mov
out
push
insb
int
add
je
ror
in
iret
stc
push
jecxz
sub
or
cld
ret
lcall
inc
aas
xchg
pop
push
imul
cmp
inc
fsubr
outsl
popf
dec
jl
mov
enter
loop
imul
ss
scas
loop
mov
mov
imul
imul
sub
sub
dec
fcompl
imul
cmp
out
xchg
fadds
arpl
sbbb
cmp
std
sub
in
lods
je
xor
rol
mov
out
or
cmpsl
mov
push
in
imul
sbb
adc
adc
inc
into
cmp
sbb
in
mov
add
sarb
mov
ljmp
insl
mov
repz
lock
lahf
cmp
add
jns
stos
cmp
mov
arpl
jnp
adc
xchg
scas
popl
and
movsl
shrb
pushf
xchg
arpl
sar
mov
xor
rorl
xor
push
dec
sbb
loop
dec
enter
in
lret
ljmp
mulb
mov
jecxz
rorb
popf
enter
mov
xchg
or
lret
fisubl
scas
jle
mov
aam
sbb
imul
rcr
jo
ret
mov
ffree
cmp
pop
in
imul
ret
or
inc
mov
mov
pop
aaa
clc
mov
sub
push
stc
rorl
mov
js
jae
and
sti
arpl
and
icebp
fdivl
or
lea
ret
shrl
mov
enter
cltd
loop
cwtl
sbb
mov
fdivs
jl
les
stos
outsb
xchg
mov
loopne
stos
arpl
cmp
ret
adc
lret
mov
add
sub
test
xchg
sub
shlb
out
sub
push
insl
leave
dec
jmp
push
sub
rolb
xchg
add
mov
les
loope
das
dec
jmp
outsb
or
movsb
imull
mov
fbld
ljmp
leave
or
add
loop
outsl
js
jg
adc
adc
nop
and
dec
xor
jg
lret
in
xchg
or
inc
jo
dec
cs
out
cltd
cmp
fistpl
dec
sub
pop
xchg
mov
sub
mov
std
sbb
popa
push
maskmovq
mov
mov
int3
loop
movlhps
aad
out
sub
divl
lods
insl
add
scas
aam
mov
xor
push
shll
add
int3
hlt
into
test
add
adc
gs
faddp
adc
cmp
or
sbb
add
call
cs
cmp
sti
sbb
aas
cli
push
cmpb
in
fs
insb
es
in
push
shl
out
push
adc
sbb
cwtl
mov
dec
pop
mov
filds
xchg
mov
or
es
mov
sbb
repnz
test
xchg
std
dec
lcall
shll
pop
dec
cmp
imul
sub
mov
addb
or
arpl
mov
jns
aas
lcall
mov
or
push
sbbl
cmp
adc
or
jno
jecxz
stos
jbe
cli
addl
xchg
mov
enter
out
pop
cmp
outsb
mov
jo
arpl
fistl
and
lock
mov
sbb
lods
or
xor
loope
mov
pop
repnz
xor
or
ja
mov
shr
js
mov
pop
imul
enter
add
pushf
fldcw
push
and
lea
jnp
cmp
jle
aam
ds
mov
lahf
mov
arpl
cmp
xchg
int
jno
mov
xor
jle
loop
mov
ret
aas
xchg
and
xchg
fbld
out
mov
jmp
dec
daa
sub
pop
xchg
sub
push
outsl
jo
mov
lds
in
mov
mov
ja
test
clc
ret
ficompl
dec
or
jecxz
pop
outsl
or
jns
jmp
adc
lcall
mov
ret
or
imul
faddp
in
xor
adc
lea
stos
add
outsb
test
loop
insb
int3
sub
gs
xchg
mov
test
xor
js
jecxz
arpl
mov
in
in
iret
or
sub
fs
mov
adc
test
sub
out
pop
dec
arpl
sbb
xor
push
in
cmp
scas
push
xchg
sbb
jl
mov
xor
sub
in
cmpsl
rorl
sbb
mov
or
fsubrp
cmpb
or
roll
inc
ja
imul
fdivl
inc
xor
mov
jnp
adc
push
xchg
jl
push
mov
add
xchg
lock
sub
into
and
aam
imull
call
stc
sbb
mov
sub
adc
add
scas
inc
adcb
aad
outsl
in
jns
sub
fimuls
mov
arpl
jo
sub
mov
dec
cmp
sbb
xor
scas
repnz
ja
sbb
pop
jge
or
mov
mov
dec
mov
mov
push
xchg
scas
sbb
and
and
rcrl
pop
int3
aam
adc
push
testl
js
rcrb
xor
jecxz
adc
sbb
sbb
repz
pop
pop
lods
mov
sbb
pop
cmp
xorb
jle
loop
and
push
in
arpl
imul
jmp
and
insb
sbb
arpl
mov
xor
mov
or
xor
mov
scas
je
imul
mov
push
pop
sbb
call
arpl
or
inc
rcl
dec
dec
data16
cmp
push
movsb
orb
pop
fmuls
mov
fisubrs
xor
or
test
xchg
fs
shrl
adc
dec
std
sarl
and
arpl
xchg
int3
sub
out
dec
pusha
mov
lock
sahf
sbbb
or
cmp
iret
and
lret
or
or
shlb
jb,pt
lds
push
fcmove
inc
jmp
sbb
sub
jle
cwtl
nop
or
das
push
imul
xor
mov
sbb
dec
adc
fisttps
pop
cwtl
repnz
mov
inc
lahf
sbbb
add
insb
dec
xor
sbb
cmp
test
xor
pushf
sub
jne
ss
inc
push
dec
test
incb
clc
mov
or
subb
les
test
out
iret
dec
lret
xor
sbb
fidivs
mov
adc
cltd
fidivrl
adc
std
xchg
loop
xchg
pop
movsl
orb
or
pop
xchg
push
cmp
xchg
or
sahf
sub
mov
pop
pop
in
pop
fst
inc
test
xor
adc
in
stos
out
outsb
add
repz
xlat
or
stos
mov
out
je
jno
ret
fwait
jb
je
or
dec
aam
fwait
lods
mov
mov
imul
sub
rcrb
popf
or
test
push
addr16
pushf
fisttpll
loopne
ss
wbinvd
dec
rolb
sbb
or
in
cltd
out
pop
xor
xchg
imul
stos
outsb
push
lods
sbb
fisubs
mov
out
loop
or
and
push
or
fbld
je
push
jp
dec
scas
adc
mov
inc
enter
cmp
loop
mov
xchg
and
lock
fsubr
loop
movsl
dec
dec
int3
inc
and
mov
insl
pop
xor
mov
sbb
add
xchg
sub
pushf
mov
into
sub
pop
xchg
subl
xchg
adc
int3
or
ret
scas
scas
cs
call
push
inc
sub
iret
xchg
lahf
test
mov
andb
xor
dec
jno
subb
ret
cmp
push
jnp
xchg
add
add
out
testl
or
lahf
push
xor
mov
dec
adc
cmp
std
ror
mov
ds
mov
dec
stos
mov
jbe
sub
lods
jmp
ret
stos
mov
sti
mov
ret
add
adc
add
sub
mov
jle
fdivl
stc
jge
insl
mov
out
mov
lods
sarb
dec
mov
ret
test
ljmp
add
ret
or
repz
inc
test
push
or
pop
ret
xchg
jns
mov
hlt
cmp
push
mov
add
daa
adc
jmp
les
mov
das
push
out
fidivs
inc
mov
popf
pop
adc
mov
addr16
mov
jo
ja
add
sub
fcomps
mov
insl
in
sub
out
pop
rclb
dec
cmpsl
dec
call
std
jecxz
mov
dec
adc
adc
jmp
dec
sbb
movsl
push
sbbb
inc
sbb
fstl
enter
push
inc
pop
data16
repnz
ret
or
jecxz
push
adc
call
test
outsl
jle
and
ror
hlt
mov
xchg
cmpsb
push
fisubrs
loop
rcr
push
pop
ss
jne
sbb
pop
pop
inc
xor
stc
mov
fmull
mov
push
inc
pushf
sbb
sbb
and
or
add
dec
xor
es
insb
sub
or
sub
sub
lret
scas
out
and
int
loope
jl
jns
dec
in
insl
xchg
pushf
sub
mov
mov
lea
or
add
sub
pop
adc
mov
cltd
ret
push
jl
inc
and
dec
mov
push
lods
ret
cltd
xor
or
andl
and
test
pushf
ss
cwtl
adc
test
jns
mov
test
lock
imul
incl
or
cmpb
stos
xor
and
jmp
int3
sub
jecxz
push
out
adc
jl
je
pop
pop
in
push
xchg
out
ret
jp
loop
xchg
test
adc
or
insl
ret
push
pop
in
push
mov
or
jmp
fnstenv
loop
dec
lahf
inc
and
mov
outsb
repnz
add
into
cli
in
int
in
dec
lods
mov
push
add
xor
sub
and
mov
pushf
ret
outsl
mov
xor
insb
jnp
mov
pop
in
fidivrl
stc
les
adc
or
or
add
add
mov
ficoms
push
push
push
rcr
sahf
dec
adc
dec
scas
xchg
inc
std
pop
dec
cli
int3
addr16
pop
sub
ljmp
mov
push
pushl
or
xchg
xlat
stos
enter
push
pop
out
sub
addr16
out
jl
cmp
mov
and
cmp
imul
sub
das
pop
xor
cmp
or
pop
ret
int
adc
add
call
lea
xchg
pop
stos
popf
int3
nop
sub
leave
stc
stos
adc
in
mov
or
cmp
scas
in
push
sub
xchg
lcall
scas
das
or
jno
mov
push
mov
sub
ss
rorb
divb
lcall
fidivrl
push
push
or
xchg
inc
push
imul
jnp
push
int
lret
sbb
push
add
push
xchg
sbbl
scas
mov
push
out
ds
cld
push
sbb
jg
dec
mov
push
out
addr16
arpl
outsb
push
out
outsl
mov
add
pop
or
fcmovnbe
mov
sub
fstpt
xchg
outsb
dec
adc
add
or
add
adc
lea
ljmp
adc
sub
and
jl
lahf
pop
out
fcmovnu
and
imull
or
fadd
int
in
jl
xor
mov
add
gs
jmp
inc
mov
sbb
sti
mov
arpl
mov
cmp
arpl
cmp
mov
fsubl
adc
sbb
test
push
imul
push
or
mov
mov
jo
sub
sub
sbb
push
scas
inc
inc
xor
sub
cltd
adc
mov
fwait
in
jns
hlt
push
jecxz
scas
or
cwtl
stos
arpl
push
inc
add
and
enter
and
dec
mov
stos
or
out
pop
mov
mov
mov
or
dec
out
insb
inc
test
mov
push
fs
enter
and
pop
arpl
out
mov
les
cmp
xorl
pop
xchg
sti
loop
push
movsl
mov
outsl
xchg
xor
sahf
mov
inc
or
sub
cmp
jnp
scas
outsl
adc
xor
push
and
jb
insl
fsubl
inc
sbb
ljmp
fmull
pushl
out
adc
bound
mov
arpl
xchg
jno
fisubrl
jl
mov
sbb
and
push
inc
std
sub
loopne
pop
into
rcr
xchg
xchg
push
mov
adc
jecxz
sub
or
lret
pop
and
into
jl
dec
dec
push
test
add
ds
bound
mov
js
nop
enter
or
insl
ret
xchg
lret
sub
jecxz
sub
or
adc
sti
xor
faddl
push
xlat
jle
ja
call
adc
in
testb
ljmp
sahf
out
mov
hlt
and
xor
movsb
lock
xchg
sub
sub
xchg
stos
shll
or
dec
je
dec
imul
scas
ljmp
lock
fs
pop
imul
repz
or
adc
mov
jne
in
mov
lock
sbb
and
mov
leave
and
dec
xor
insl
push
arpl
push
out
enter
pop
aad
xchg
das
lock
cmp
out
out
out
repz
mov
leave
pop
lahf
lods
test
or
ret
ret
mov
inc
lods
ret
ficoms
sbb
jnp
es
fildll
or
scas
jmp
adc
cmp
outsl
int
xchg
fcompl
iret
xlat
cltd
xchg
sub
outsb
stos
je
test
scas
mov
loop
xchg
add
dec
movsb
jmp
push
sub
mov
fisttps
jecxz
sub
mov
jo
je
into
cmp
or
outsb
mov
sbb
ret
mov
sbb
and
mov
sub
dec
jle
stos
mov
mov
aad
punpcklbw
outsl
js
iret
jl
scas
lods
pop
dec
mov
data16
jmp
or
sti
out
jge
mov
dec
bound
mov
orb
cmpsw
int3
mov
out
sub
outsb
xor
out
cmpb
in
adc
sub
sub
test
aaa
push
mov
or
jl
mov
insb
shll
test
unpckhps
pop
aas
jmp
bswap
enter
jecxz
arpl
push
insl
sub
adc
adc
or
push
inc
stos
mov
loope
adc
fs
fisttpll
int
xchg
dec
adc
xor
in
imul
insb
and
out
adc
daa
scas
mov
push
out
mov
mov
clc
outsb
push
xchg
adc
lcall
and
iret
jno
out
dec
xlat
push
insb
daa
lcall
add
rcr
push
loopne
jl
adc
loope
adc
mov
loop
fnstenv
push
in
enter
mov
or
add
ret
and
mov
iret
sub
push
int
cmpsb
push
out
mulb
and
jecxz
test
or
incl
mov
or
call
xchg
pop
mov
dec
loop
jecxz
shlb
lret
mov
inc
mov
xchg
fwait
mov
xchg
xor
arpl
mov
int3
push
sbb
or
lods
imul
addr16
pushf
mov
adc
mov
xor
lcall
out
sub
push
lods
dec
lahf
sub
xchg
xchg
sbb
sbb
out
movsl
cmpsb
xchg
shll
cs
sbb
cmp
adc
das
mov
sub
repnz
or
shrb
or
and
lods
inc
pop
pop
add
dec
sub
daa
popf
aad
shrb
jg
sub
mov
sub
scas
out
shrb
xor
lahf
add
test
call
xchg
scas
sub
or
xchg
sbb
dec
push
movsl
adc
sub
xchg
sub
pop
ss
or
pop
sub
push
dec
or
mov
xor
jg
lea
enter
orl
lahf
dec
ret
in
or
repz
mov
sbb
xor
and
dec
fldcw
enter
outsb
add
lret
add
jne
shl
jg
dec
repz
cs
mov
mov
and
inc
repz
sbb
adc
adc
in
js
stos
lods
push
arpl
bound
lahf
mov
outsl
das
stos
mov
sub
sub
aas
fbld
ljmp
jg
lods
xlat
sub
lea
sub
shrb
int
in
ja
out
mov
stc
mov
lret
test
insb
scas
call
nop
push
sub
jge
fisttpll
arpl
sub
outsb
pop
xor
scas
adcb
int
dec
mov
dec
adc
xchg
ret
mov
add
xor
daa
aam
adc
cmp
mov
pop
mov
sbb
and
scas
loop
lret
mov
das
ret
cmpsb
pop
sub
ja
mov
loopne
or
adc
mov
stos
pop
dec
stos
and
xor
push
jecxz
cmpsl
arpl
sub
sub
inc
lret
fnsave
outsb
sub
nop
dec
sbb
xchg
call
fmul
shrb
subl
jge
stc
test
or
cwtl
out
test
testl
jns
out
jb
mov
fcmovb
mov
shrb
and
adc
jmp
push
jno
imul
imul
xor
push
sub
adc
mov
xor
push
insb
adc
and
out
test
fucom
sub
mov
outsb
mov
dec
lcall
jge
lods
add
cmp
xor
and
lods
jno
out
sbb
scas
test
sub
repnz
sbb
mov
dec
add
sub
arpl
xor
xor
add
mov
adc
inc
push
cmp
or
mov
popf
jge
or
add
ficomps
negl
in
popf
jmp
int
cmp
lods
pushf
insl
inc
cmp
stc
movsl
in
sub
repz
or
jb
add
adc
pop
push
push
push
adc
inc
outsl
mov
cs
push
jl
sub
push
jecxz
sbb
out
ret
dec
pop
ss
sbb
sub
enter
int
sub
in
xchg
dec
sub
mov
jnp
js
stos
or
dec
add
aad
out
sub
add
mov
stos
jecxz
or
pop
fsubrs
adc
push
push
subl
xor
arpl
push
out
enter
scas
arpl
push
inc
scas
test
aam
int3
dec
int3
or
insl
test
sbb
in
pushf
xchg
in
mov
dec
add
sbb
clc
mov
add
sub
mov
mov
mov
sahf
push
add
seta
dec
lcall
pop
lea
push
stos
arpl
test
push
sub
or
adc
mov
mov
xchg
mov
pop
cltd
test
fsubrs
sub
adc
mov
out
lods
dec
in
test
cmp
dec
dec
insl
jne
out
js,pn
in
es
xchg
outsb
stos
enter
leave
stos
outsl
xchg
sbb
or
lods
shlb
lods
jecxz
cmp
sbb
mov
hlt
lcall
andl
and
sub
push
mov
cmp
adc
mov
ret
add
jne
adc
push
mov
and
aad
bound
xchg
add
lds
jmp
ds
lret
iret
aad
push
mov
lcall
aaa
dec
into
or
stos
mov
lods
roll
mov
mov
fs
cmc
or
mov
fs
cld
popa
adc
sbb
subb
pusha
pop
mov
adc
jb
stos
add
mov
sbb
stos
sub
stc
dec
mov
or
sub
orb
or
adc
mov
into
add
xchg
rcll
or
jl
enter
or
insl
mov
pop
jmp
stos
mulb
xchg
inc
xor
daa
adc
repz
sub
repz
and
inc
scas
test
sbb
rorl
pop
ficoml
fisubl
cwtl
mov
add
push
or
add
fistps
or
lods
ret
divb
mov
mov
fsubrp
loop
hlt
pop
push
sahf
fidivs
mov
leave
mov
add
mov
push
ret
iret
sub
mov
es
jmp
push
mov
orl
outsl
cmp
imul
out
pop
fisubl
pop
adc
sub
sub
mov
enter
sub
mov
sbb
lahf
ljmp
jnp
adc
mov
movsl
inc
imul
xchg
adc
xor
mov
mov
mov
outsb
pop
and
sub
int
push
adc
loop
inc
push
mov
ret
pop
ret
cmp
outsb
jl
arpl
ret
adc
sub
sbb
jno
xorl
lods
mov
jmp
jno
stc
int3
push
out
cmp
adc
jno
jbe
add
rcl
push
out
pusha
test
out
leave
xor
imul
loop
and
insb
leave
add
sub
push
aam
movsw
xlat
push
fucom
in
jg,pn
ss
mov
sub
dec
push
jl
or
dec
mov
fldenv
dec
loop
and
jns
or
mov
movsl
jo
test
dec
mov
push
scas
sti
cmp
xchg
iret
pusha
arpl
inc
int
enter
out
xchg
aam
sub
arpl
out
imul
mov
stos
mov
adc
aaa
shll
push
push
dec
imulb
dec
je
push
sub
adc
or
outsl
or
mov
xchg
das
jecxz
or
js
xchg
daa
mov
arpl
mov
dec
movsb
inc
aas
loopne
rolb
cmp
adc
sub
pop
movsb
lods
rorb
into
push
mov
scas
insl
push
or
mov
mov
mov
mov
test
repz
lds
mov
scas
adc
repnz
and
xchg
add
outsb
xor
jo
test
ret
adc
push
jle
inc
sub
das
fdivr
add
or
stos
lods
mov
pushf
mov
mov
sarb
or
xor
cmp
jb
ret
xor
xchg
and
cmpsl
adc
pop
in
sub
and
les
popf
cmp
xor
ret
add
adc
fisubl
inc
das
jecxz
les
and
pop
add
add
test
sbb
and
cs
out
mov
imul
or
jmp
lea
test
lret
fstpl
test
lea
pop
dec
jge
mov
adc
bound
jp
sub
sub
add
outsb
inc
pushf
ret
sti
push
mov
add
sub
inc
arpl
sub
mov
inc
iret
rclb
xor
mov
adc
iret
push
adc
dec
stos
mov
movsl
adc
fisttpll
lret
pop
cmp
dec
out
lret
mov
and
push
inc
int3
mov
xchg
sbb
and
xor
dec
aam
and
mov
insb
xlat
or
mov
dec
inc
out
andl
add
xor
imul
arpl
mov
enter
out
push
mov
out
imul
jl
or
mov
sub
pop
dec
call
dec
sub
cs
cmp
les
ja
out
dec
sub
lods
add
iret
cmp
cli
stos
arpl
mov
adc
ret
and
subb
jl
jns
dec
leave
sbb
add
mov
repz
push
push
mov
out
outsb
cmp
mov
push
jmp
cmpl
aaa
sbb
int
jo
sbb
lods
dec
outsl
enter
adc
pop
sbb
cwtl
dec
push
aas
or
lcall
loope
and
pop
outsb
xchg
push
xor
ficomps
repnz
outsb
das
adc
jnp
and
out
dec
icebp
out
cs
movsl
out
lods
and
mov
rcr
in
loop
cmpsl
push
rcl
mov
popf
sub
mov
ret
sub
sbb
sti
mov
add
jecxz
cmp
dec
dec
loop
inc
xor
fisubs
scas
add
popf
mov
adc
jne
push
sub
shrb
imul
test
iret
jb
pop
add
lea
insl
lea
push
fs
add
pop
imul
movsl
in
ret
mov
cs
outsb
jo
sbb
das
push
enter
push
jmp
or
cmpsb
int3
dec
hlt
imul
je
pop
aas
arpl
push
lcall
stos
cmp
jl
into
es
and
or
or
fsubrl
or
int
mov
mov
mov
dec
je
xor
fstpt
mov
into
in
cmpsb
sub
jecxz
jl
mov
outsl
les
scas
sub
xchg
jg
sub
inc
das
scas
pop
mov
mov
xlat
add
ret
sbb
outsb
arpl
pop
ret
lods
fbld
or
insl
push
pop
jecxz
mov
or
out
mov
adc
pop
xchg
imul
mov
or
or
leave
scas
stos
aam
lcall
in
fidivs
int3
stos
jl
pop
sbb
int
stos
test
jbe
aad
arpl
xchg
in
popf
and
sub
sub
or
bound
popf
lods
add
outsl
sbb
ljmp
das
ret
arpl
mov
imul
out
lods
pop
mov
ret
imul
sub
adc
inc
outsb
imul
fsubs
and
mov
imul
and
or
popa
scas
dec
adcl
dec
fs
ja
cmpsl
inc
mov
and
scas
mov
sbb
setbe
sub
inc
mov
in
rorl
push
cmp
rcrl
addl
and
mov
mov
pusha
cmp
scas
sub
cmp
and
add
ja
sub
mov
lods
shrb
jnp
mov
sub
divb
scas
and
mov
lock
sub
pushf
inc
cmp
mov
lcall
and
mov
add
sbb
dec
mov
and
dec
imul
xchg
subl
inc
repz
jo
and
nop
popa
icebp
xchg
hlt
xchg
jmp
in
je
jnp
adc
mov
push
aaa
mov
xor
or
xchg
push
retw
xor
pop
adc
repnz
sub
icebp
push
je
cltd
sbb
mov
popa
test
out
lods
ja
cli
push
outsl
scas
das
and
repz
and
push
jecxz
xor
and
lock
jns
and
das
aas
add
cmpsl
push
xor
enter
jecxz
pop
sbb
cs
xor
and
ficompl
cld
aam
mov
push
dec
xor
lahf
sbb
stos
jae
jge
sahf
imul
sbb
mov
into
inc
and
adc
jecxz
dec
and
add
and
adc
mov
mov
sub
or
push
js
adc
pop
cmpsl
movsl
in
lea
xlat
mov
xchg
mov
lea
int
fiaddl
nop
sub
and
mov
xor
and
mov
push
into
roll
sahf
fisubrl
push
jle
jmp
dec
xchg
xchg
mov
push
loopne
sub
aaa
sarl
mov
ds
out
das
sbb
and
rcl
scas
mov
ss
rorb
cmpsb
mov
xchg
jo
je
clc
lea
dec
fistpl
fiaddl
pop
in
cs
scas
mov
push
lret
repz
fcompl
and
push
roll
dec
nop
rorb
stos
ret
pop
push
pop
loope
and
jl
jmp
lods
cmp
add
push
and
push
adc
popf
push
cmp
sub
xchg
adc
sub
jo
inc
pop
js
cmp
mov
das
xchg
ficoms
push
push
cmpsl
fidivl
and
sbb
add
mov
sbb
outsl
cmp
ret
and
cmp
sbb
cwtl
push
and
test
fsubrp
stos
and
mulb
cmp
data16
and
pusha
dec
xchg
jns
xor
pop
adc
mov
and
and
inc
cmc
xor
or
xor
ljmp
jmp
das
or
cli
jnp
mov
rorl
push
mov
mov
mov
mov
data16
push
cmpsb
out
cmc
push
and
push
mov
xchg
and
push
xchg
fsubs
push
fidivrl
mov
mov
lods
clc
outsb
icebp
mov
and
stc
xchg
xor
jecxz
dec
js
nop
adc
sbb
push
xchg
shr
adc
pop
add
hlt
fistps
roll
std
mov
andl
dec
ljmp
in
cmp
ja
and
cld
add
and
stos
cmp
adc
stos
adc
pop
movsl
inc
jl
dec
insl
and
in
jo
sbb
push
xchg
add
and
cltd
inc
sbb
loope
jp
scas
stos
imul
dec
add
cmp
cs
dec
push
sub
xchg
andl
pop
loopne
jnp
push
and
dec
lret
fiaddl
subb
push
fs
mov
mov
push
shll
and
std
fisubrl
xor
mov
jae
push
roll
loope
int
bound
sub
cs
fisttps
mov
and
push
jmp
and
sti
mov
das
roll
mov
mov
xor
add
negl
push
mov
mov
dec
push
fsubl
adc
sub
and
cmpsl
cld
sbb
cli
sub
and
sub
in
cmp
add
ds
mov
fs
sub
sarb
das
add
mov
dec
stc
sub
cmp
xor
inc
jbe
fucom
pushf
inc
xchg
sub
gs
sub
and
mov
or
pop
mov
test
cmp
lahf
push
in
adcb
popf
push
out
adc
lods
out
pop
jle
and
cmp
les
mov
lods
mov
pop
dec
sbb
and
cmc
call
and
aas
mov
test
inc
ljmp
mov
sub
xlat
mov
adc
aaa
dec
add
jl
mov
inc
pop
or
pop
ret
xchg
xorb
ljmp
lcall
movsb
push
stc
jne
test
mov
fwait
lcall
lcall
sti
push
adc
mov
test
fistpl
xor
dec
push
pop
pop
sub
cmp
xchg
ret
cmc
jno
cmpsb
and
adc
cmp
mov
inc
das
lock
xor
fsubs
out
sbb
dec
adc
dec
mov
and
data16
clc
cmpl
mov
pop
sbb
into
aas
cmp
xchg
fsubs
loopne
shlb
ds
int
rcrb
mov
dec
and
lods
data16
or
push
mov
jge
mov
repnz
adcb
fs
hlt
mov
loopne
clc
movsb
push
insl
cmp
leave
stos
and
adc
aas
and
push
pop
out
dec
mov
mull
xchg
out
cmp
and
sahf
movl
xchg
aam
mov
and
sub
inc
xor
jp
shrl
dec
fisubrl
popf
pop
in
and
mov
insb
xor
and
mov
sub
cmp
push
pop
sub
mov
sbb
scas
out
in
jmp
and
mov
jns
repz
mov
sbb
jecxz
gs
dec
mov
call
mov
aaa
and
jmp
mov
cmc
mov
add
dec
and
mov
pop
aam
cmp
push
popf
fidivrl
shlb
and
sub
in
in
xor
dec
and
xlat
popf
and
int3
adc
and
fmulp
xchg
mov
outsl
mov
cmp
andb
mov
add
inc
pop
push
and
ss
pop
jns
inc
sti
xchg
imull
enter
mov
test
xor
and
mov
adc
pop
mov
je
arpl
and
cmc
ret
fildll
ljmp
adc
mov
pop
push
ja
mov
in
adc
and
xor
jge
fbld
lret
js
outsl
bound
lahf
and
iret
cmp
adc
fstps
loopne
push
mov
push
jno
mov
adc
xchg
dec
shll
sbb
xchg
adc
mov
or
mov
lods
and
add
xchg
in
dec
stc
and
cmp
je
out
nop
outsl
push
lock
or
inc
ret
and
in
and
cmpsb
std
pop
and
jne
ljmp
dec
bound
mov
adc
ljmp
testl
inc
dec
mov
sub
and
movsl
push
mov
sub
push
fidivrl
mov
xchg
xor
in
push
xchg
test
sbb
loope
jecxz
scas
sub
mov
add
push
mov
fisttps
and
push
int
xchg
fisubrl
mov
adc
and
and
or
sbb
cs
clc
ja
mov
repnz
cld
fsubrs
sahf
xchg
mov
popa
and
lods
cltd
sub
and
loopne
jle
mov
int3
xor
adc
shrl
in
aad
pop
mov
xor
ja
idivb
lock
decl
push
sbb
aam
loopne
clc
test
cs
insb
push
or
pop
lds
adc
cwtl
or
xchg
and
mov
xor
sub
ja
adc
out
cmp
test
and
mov
int
mov
cmc
cltd
xorl
pusha
mov
jp
jae
in
fdivs
push
std
enter
sub
cmp
in
sarb
jecxz
bound
lods
or
xchg
and
test
xlat
and
paddsw
push
jnp
and
out
sbb
mov
mov
cli
shlb
aas
sub
dec
in
ja
xchg
pop
mov
pop
loope
cmp
arpl
gs
jnp
mov
aas
movsb
jb
cwtl
stos
cld
and
mov
pushf
cmp
test
fwait
subb
fadds
jl
rolb
jnp
ret
dec
sub
adc
iret
fstpl
rorb
mov
mull
fwait
jne
lahf
jno
push
inc
push
mov
add
pop
imul
mov
push
js
jl
and
mov
mov
std
faddl
cmp
fldt
daa
dec
and
cld
xchg
or
adc
dec
pop
cmp
das
ljmp
or
sti
xor
int
ret
iret
xchg
cs
cmpsl
data16
insb
repnz
sti
jg
sub
cmp
xchg
rcll
mov
fcomps
add
mov
adc
and
je
cmp
jno
flds
inc
and
sbb
mov
jp
mov
cmp
jle
pop
jns
ficompl
pop
out
and
gs
movsl
mov
inc
test
out
push
and
notl
pushf
cmp
sbb
dec
lods
aad
fcoml
xchg
inc
testb
and
enter
dec
xor
jp
sub
inc
and
or
add
and
jmp
hlt
mov
insb
adc
jo
and
or
mov
sub
sub
out
stos
mov
mov
lods
clc
repnz
and
xchg
mov
and
clc
pop
fpatan
ret
rcll
and
adc
jg
pop
sub
jl
push
cmp
or
rorb
xchg
xchg
lcall
add
aaa
sub
sbb
xor
in
shrb
adc
inc
imul
lea
inc
and
fisubs
mov
outsl
scas
sbb
jb
and
xchg
mov
xchg
and
pop
push
pop
mov
stos
pop
das
cwtl
sti
repnz
pop
pop
test
arpl
nop
incb
cli
adc
sub
xchg
into
pop
jb
push
adc
sub
in
mov
aas
cmc
and
clc
add
push
mov
mov
jecxz
lcall
sub
jle
cs
leave
js
inc
ret
insb
inc
aas
pop
jo
add
je
cmp
inc
xor
sti
pop
and
daa
cmpl
mov
push
push
or
in
cli
in
pop
lods
dec
push
and
mov
ljmp
mov
xchg
and
or
adc
scas
icebp
es
sub
hlt
outsb
mov
call
xchg
sbbl
mov
shll
inc
popf
and
enter
jnp
jae
jg
cs
daa
scas
ret
scas
andl
dec
pop
fbld
insl
jnp
xlat
jo
cs
mov
xchg
cmp
or
loop
xor
loope
and
mov
and
iret
xchg
imul
std
xchg
sbb
sbb
shrl
mov
and
lret
cmc
cmpsl
add
push
lods
sbb
push
jne
imul
xor
imul
sub
and
sub
jle
adc
popf
std
push
ret
mov
and
movsb
push
adc
xor
mov
or
fldcw
jecxz
sbb
add
jns
lds
mov
mov
mov
xorb
stc
inc
and
cmp
lods
add
aaa
and
mov
jae
lret
mov
add
mov
xor
adc
sbb
dec
call
lahf
sub
ret
and
or
lods
ret
pop
sub
jno
pushf
and
push
pop
dec
mov
arpl
pop
loop
fimuls
or
adcl
repnz
and
and
repnz
in
les
pop
or
xchg
outsb
and
sub
mov
lcall
dec
aas
pop
add
ret
mov
pop
or
pushf
pop
and
sub
cli
adc
adcl
lock
mov
sub
and
mov
mov
scas
andb
dec
outsb
lock
jne
repnz
mov
int3
inc
gs
add
and
push
nop
and
pop
out
mov
jmp
jb,pt
mov
test
dec
cmp
sub
pop
lds
test
gs
xchg
or
inc
and
xor
roll
add
inc
jp
cs
call
out
push
or
pop
dec
and
mov
adc
test
mov
and
aaa
sbb
lahf
and
stc
push
xchg
and
add
and
inc
add
mov
mov
push
cs
clc
dec
ret
xchg
in
adc
dec
xor
sub
cmp
pop
test
mov
mov
and
mov
dec
adc
aaa
out
pop
adc
popf
mov
xchg
loope
xor
movsl
inc
or
mov
mov
xchg
jp
and
push
inc
shr
test
adc
xchg
fcoms
ja
or
dec
or
and
dec
pop
sbb
dec
sub
and
enter
push
mov
and
adc
in
ss
call
decl
sub
or
shll
mov
dec
cwtl
pop
xchg
pop
ja
popa
and
std
jmp
divb
sub
cmp
and
inc
fnstcw
js
popf
xchg
test
add
or
push
inc
xor
mov
jp
inc
cmp
sbb
int3
cmpsb
scas
push
out
jns
je
pushf
and
cmpsl
in
xor
push
imul
out
das
adcb
add
cmp
sub
sti
lods
ficoml
xorb
and
dec
sti
push
jle
xchg
add
jo
daa
mov
mov
and
pop
add
leave
jecxz
xchg
jmp
sbb
add
mov
das
pop
and
lock
jl
js
and
xor
xorb
xchg
int
cmpsb
in
and
jno
and
jns
lret
dec
push
and
cwtl
cmp
scas
mov
and
inc
test
mulb
lods
gs
mov
outsb
cmc
and
pop
imul
and
iret
mov
and
stos
inc
es
ret
insl
dec
hlt
popa
xchg
and
pop
push
xchg
popa
adcl
cmp
xchg
aas
outsl
dec
repnz
fidivs
adc
sub
inc
xchg
add
jle
sti
and
movsl
outsl
xchg
sbb
sub
xor
xchg
movsl
mov
lea
loope
cmpsb
adc
jp
add
cld
out
movsl
test
and
xchg
push
fneni(8087
pop
in
and
mov
mov
and
dec
mov
sbb
dec
sub
add
leave
mov
and
dec
dec
hlt
sahf
imul
push
sub
sti
int3
mov
es
add
mov
mov
scas
stc
jmp
and
aaa
movsb
imul
fcmovbe
ja
and
mov
ret
testl
push
jge
aaa
cwtl
cs
add
fdivr
xchg
add
cs
incl
jle
add
and
mov
pop
mov
js
in
mov
push
mov
mov
cs
out
mov
mov
sahf
and
jb
imul
jge
inc
addr16
fwait
enter
sub
int3
fldt
and
inc
loopne
stos
add
or
aad
movd
push
testb
adc
lods
adc
jge
ret
push
hlt
push
add
mov
les
mov
int
xchg
in
mov
outsl
cmp
bnd
icebp
stos
push
pushf
data16
shll
adc
xlat
pop
jl
sbb
not
es
cmp
xlat
stos
sbb
jl
in
lcall
cwtl
gs
cld
add
mov
cs
loop
lret
dec
int3
mov
fwait
pop
and
add
fs
imul
insb
push
or
subb
or
scas
std
iret
inc
in
and
out
lahf
insb
pop
xchg
jae
je
sub
mov
cmp
and
lock
mov
and
or
cmp
aaa
pop
scas
mov
in
and
pop
movb
xor
mov
jg
or
mov
add
push
arpl
mov
cmpsl
je
rcrl
mov
sub
imulb
xchg
push
pop
sbb
sbb
or
int
mov
data16
jo
mov
clc
and
ljmp
loope
pop
and
aad
and
cmc
iret
loopne
and
cmp
sbb
dec
sub
setb
popf
add
mov
sub
xor
jp
fdivs
inc
outsb
test
leave
and
mov
pop
cmpsl
mov
and
fcomps
movsl
inc
and
and
mov
cmp
inc
and
push
push
sub
sbb
les
hlt
in
push
push
pop
lods
stc
mov
mov
xor
or
dec
rcll
sbb
pop
lods
out
xor
addr16
ret
pop
cmp
push
pop
lea
mov
cmpsb
aam
scas
xchg
popf
and
or
fs
shll
inc
fidivrl
push
inc
mov
icebp
or
push
fs
lea
pop
mov
outsl
insb
xor
jb,pn
jg
mov
dec
scas
lea
add
and
jmp
test
ds
outsl
sub
test
mov
movsl
inc
repnz
and
cmp
pop
stc
xlat
movsb
daa
insl
mov
mov
push
jnp
sub
mov
aas
sbb
cwtl
das
jg
jnp
jl
sbb
mov
and
and
mov
cli
iret
and
cmp
fcomp
and
test
push
aaa
jns
jno
mov
mov
xchg
aas
add
jmp
and
adcl
aaa
add
xchg
call
dec
xorl
xchg
lahf
dec
mov
and
xor
cmp
push
add
sbbb
cmp
cmpb
sbb
andl
dec
pop
ljmp
arpl
jmp
call
inc
or
repz
push
push
addr16
push
adc
or
push
and
cmc
jo
clc
sub
mov
or
cmp
cli
push
mov
insb
fnstenv
loope
js
scas
and
in
push
popf
add
mov
cmp
lret
xchg
scas
inc
lcall
mov
mov
shll
pop
cmp
sub
inc
xor
mov
mov
ficoml
sahf
jp
and
or
xor
xor
or
and
jb
int
mov
fldcw
sub
or
and
enter
movsl
cmp
xchg
add
test
mov
cs
mov
xor
and
lret
mov
mov
sbb
and
inc
xor
out
lcall
jle
je
scas
in
pushf
push
and
lret
push
cmp
mov
cli
inc
mov
in
xchg
pop
mov
gs
stos
enter
push
in
cs
jns
mov
mov
enter
sub
shlb
mov
arpl
xchg
and
and
fmuls
ljmp
lock
push
gs
dec
sbb
mov
jge
repnz
fdiv
les
test
mov
pop
out
ret
jae
cmp
dec
xchg
icebp
mov
jnp
es
xor
pop
into
push
xchg
and
xchg
scas
cmpsl
pushf
jl,pn
and
inc
shlb
loope
cli
aaa
arpl
ljmp
je
sub
xor
movsb
mov
sbb
movlps
rolb
mov
fldenv
mov
add
cli
jecxz
push
mov
inc
into
and
movb
mov
rcr
and
loope
xchg
rcrb
and
or
cmp
mov
fdivp
push
xor
in
and
notb
jp
and
ret
lret
inc
and
ss
bound
pop
pop
and
jns
adc
xor
mov
and
xchg
pushl
lcall
xchg
xor
sub
xchg
sbb
pop
fs
and
mov
cmp
adc
add
test
sti
jae
pop
dec
pop
push
fldt
pop
stc
in
mov
aas
ss
std
and
sbb
call
push
js
sti
scas
out
xchg
mov
and
sub
dec
and
xor
inc
jb
iret
inc
cmp
lret
fcom
pop
ljmp
jge
mov
cltd
add
mov
xorl
fsts
mov
sbb
std
push
in
stos
cli
scas
jle
fdivl
repz
xor
dec
jecxz
dec
stos
pusha
loope
and
or
and
or
and
test
cmp
jbe
add
lret
and
jge
movsb
and
pop
fs
subl
cld
jae
jge
icebp
lods
inc
xor
and
push
mov
repnz
and
and
and
test
andb
and
in
and
pop
mov
pop
xor
push
and
cmc
jno
and
dec
mov
stc
ss
mov
rcrb
dec
arpl
daa
sub
in
cmp
leave
or
icebp
loopne
cmp
add
mov
rcrl
and
rcr
jne
sub
and
and
mov
inc
xchg
test
adc
js
out
xor
andb
repnz
jno
xchg
jae
mov
nop
mov
and
push
jae
xchg
adc
out
push
cli
xchg
in
dec
lods
mov
and
sub
pop
and
lcall
dec
mov
loope
mov
xchg
and
out
cld
leave
dec
hlt
testl
and
inc
addl
ret
xchg
sub
lock
or
icebp
pop
scas
loope
or
jae
nop
sti
mov
stos
inc
cmpsb
ret
imul
mov
mov
insl
lods
and
jo
mov
scas
mov
sbb
arpl
push
lret
jns
mov
rclb
add
push
scas
imul
and
mov
push
cmp
mov
in
nop
pop
clc
cmpl
pop
or
jecxz
rcrb
rorb
mov
js
sahf
jle
jp
push
and
sub
je
mov
lahf
ja
data16
dec
cmc
mov
sub
mov
push
ja
negb
mov
mov
sub
and
push
adc
enter
fs
jnp
mov
inc
sub
and
lds
or
xchg
push
enter
dec
subl
cmp
mov
inc
sub
add
mov
and
shlb
stos
jg
cltd
cs
shll
test
jp
lcall
xchg
jns
adc
inc
and
sbb
pop
xlat
lret
rclb
aas
mov
and
paddsb
test
pop
outsb
sub
into
lea
scas
adc
and
xor
repnz
dec
popf
les
and
mov
sub
cmp
cmpb
add
cmp
aas
add
sub
inc
xlat
lods
inc
mov
pushf
test
mov
int
sub
aaa
jnp
xchg
jl
and
sub
out
cltd
jle
adc
in
push
push
cmp
sub
jne
and
rcrl
add
fisubs
incb
sub
sub
dec
and
popf
fmuls
fldt
jns
loop
roll
pop
sarl
inc
cmp
stc
js
into
cs
lock
sub
dec
aaa
mov
out
and
imul
sub
mov
pop
cmp
sti
pop
cs
in
jmp
pop
sbb
and
je
ret
sarl
and
and
jmp
and
cmpsb
mov
outsl
xor
xor
mov
mov
inc
clc
cmp
add
jg
and
cmp
xchg
stos
sbbb
xchg
pop
and
xor
test
cmpl
sub
sbb
adc
sub
sbb
gs
je
and
dec
icebp
xor
and
inc
mov
adc
stos
shl
mov
mov
lret
or
dec
dec
cmp
in
mov
jp
jle
shlb
and
cmpsl
adc
and
scas
push
test
mov
push
call
jne
orb
std
dec
sub
stos
mov
pop
call
and
iret
jmp
negb
cmp
lods
out
mov
clc
shl
aam
jnp
jae
fistpll
sub
sub
sub
call
inc
mov
and
sub
and
outsl
dec
cltd
and
mov
cmp
mov
movsb
push
mov
and
and
test
and
sub
pop
stc
inc
and
jmp
mov
sti
daa
lcall
push
cmc
out
xor
cs
dec
dec
or
mov
jnp
and
das
leave
data16
or
and
insl
js
add
inc
sbb
jno
sbb
out
sbb
pushf
fldcw
test
pop
jno
loope
out
mov
das
les
mov
push
mov
and
adc
xor
and
daa
mov
sti
jns
and
jl
in
adc
repnz
les
push
add
and
es
ret
shrb
dec
into
ja,pt
fadds
and
imul
adcl
and
or
iret
dec
and
inc
sub
and
adc
and
loop
cmp
insl
fidivrl
inc
imul
adc
or
mov
out
sahf
loop
and
dec
loope
mov
and
push
mov
and
mov
sbb
daa
xchg
jl
push
pop
and
call
xchg
loop
adc
cmp
mov
mov
cmp
sub
and
sub
xor
call
mov
int
shll
pop
sub
xchg
or
ljmp
inc
cmp
ficompl
shlb
and
cli
lea
xchg
or
jno
push
sbb
test
and
mov
mov
inc
decl
cmp
pop
jmp
xchg
and
push
and
scas
dec
and
in
sbb
lret
push
and
jl
add
mov
iret
sbb
in
jg
repz
aam
and
xchg
sarl
andl
ret
push
ljmp
push
sub
inc
mov
pop
xchg
pop
jbe
insb
inc
mov
test
jnp
sub
and
add
mov
dec
mov
pushf
cmp
nop
add
les
aas
dec
cmp
mov
add
and
lcall
fs
pop
cs
aas
cmp
jae
mov
push
into
xlat
data16
and
aaa
arpl
inc
orl
or
jbe
subl
xchg
aad
fistpl
and
push
ret
int
jne
fsubrl
mov
fwait
cmp
add
lods
imul
ljmp
jno
sbbb
imul
imul
pop
pop
das
jbe
cmp
fisubl
leave
cs
push
dec
xor
push
sbb
addb
cmp
xchg
call
pusha
sahf
ss
pop
jg
dec
xlat
sbb
lods
into
jecxz
fcoms
jle
fstpt
push
xor
mov
imul
enter
jmp
cs
cld
rclb
fldl
and
test
add
xlat
push
repnz
lret
jnp
xchg
mov
push
jle
and
inc
out
jge
maskmovq
testl
faddl
xorb
aam
xchg
inc
xchg
stos
addl
xchg
mov
sub
fs
negb
cmpsb
jb
in
pusha
lret
cmp
mov
pop
ret
mov
inc
pusha
sbb
sub
jae
jle
adc
dec
fucom
cmpsb
stc
mov
mov
cld
mov
dec
dec
sub
xchg
pop
stos
cmc
sub
in
pop
aad
je
jmp
adc
pop
notb
dec
sub
shlb
push
pop
mov
aam
dec
adc
jb
mull
jmp
sub
and
sbb
iret
pusha
inc
add
int3
add
dec
notb
add
push
fidivs
mov
mov
mov
push
push
lahf
js
xorb
add
and
sti
shll
aad
movsb
cmpsb
dec
mov
and
jns
out
and
sbb
jnp
es
lock
xchg
add
nop
and
mov
cmp
add
cmp
jmp
and
push
cwtl
out
cmp
lds
es
sub
fbstp
dec
inc
inc
stos
andb
in
add
adc
mov
push
cmpsb
or
sbb
inc
jno
push
xor
and
jp
ljmp
cmp
pop
cli
in
fisubrl
and
stc
xor
jge
sub
dec
sub
jmp
push
mov
leave
xor
out
or
or
inc
sub
test
js
mov
ljmp
mov
adc
sbb
orl
jae
aad
inc
in
pop
ret
sbb
adc
outsl
inc
faddl
mov
movsl
mov
imull
in
lea
add
mov
xchg
sbb
or
ljmp
xor
movsl
cmpsl
scas
pop
icebp
and
pop
sub
or
mov
sub
cmp
and
loop
jl
lret
test
in
push
scas
push
jecxz
xor
pop
sbb
shll
mov
sub
push
nop
mov
sub
les
push
inc
jno
mov
int
cltd
stos
sub
and
pop
movsb
mov
push
ja
cmp
sub
or
fidivs
pop
adc
sbb
cmp
mov
mov
cli
cmp
movsb
lds
inc
mov
fsubr
xchg
arpl
pop
leave
leave
mov
and
test
dec
mov
test
sub
mov
inc
and
and
bound
cltd
xor
sbb
sbb
mov
jns,pn
out
inc
mov
and
cli
sub
sbb
pop
push
jbe
mov
mov
test
push
sbb
cli
shl
mov
insl
nop
and
gs
add
out
sub
pop
repnz
xchg
mov
sub
sub
cmc
stc
cmp
cmp
mov
aas
aad
jl
add
hlt
out
mov
and
fildll
cs
and
sbb
inc
shrl
push
ret
jle
sarl
and
cwtl
mov
outsb
mov
sub
or
fwait
movsb
and
add
pop
shrb
and
push
mov
and
test
sub
jnp
insb
xchg
fstpt
mov
xchg
clc
shlb
in
cmp
xor
lock
lea
cmp
xchg
jg
std
add
lahf
inc
and
subb
sub
nop
ss
mov
cmc
and
lcall
dec
fdivr
insl
and
subl
sub
mov
int3
test
lcall
push
and
mov
sub
xchg
pop
jnp
dec
or
mov
and
mov
into
inc
push
fimull
push
cmp
mov
hlt
cli
mov
mov
sub
add
and
sbb
sub
test
mov
mov
push
sub
into
sbb
add
or
outsl
cltd
and
push
mov
and
inc
sbb
test
xchg
int3
insb
mov
and
fildll
mov
andl
and
push
mov
cmp
mov
cwtl
pop
scas
cli
das
push
mov
sub
sbb
xchg
hlt
mov
test
and
inc
fs
or
pop
inc
out
sub
push
sbb
jmp
out
outsl
xchg
sbb
push
xor
add
out
cli
lea
inc
jl
popf
lods
and
fs
add
mov
xor
and
jge
pop
insl
inc
cltd
and
jl
repz
push
inc
and
jne
sbb
inc
icebp
outsl
cltd
xchg
test
mov
cli
leave
lret
add
jmp
lds
or
fadds
and
cmp
mov
jo
push
xor
iret
xchg
test
fists
sub
sbb
addr16
jbe
push
in
orl
add
xchg
sbb
loopne
mov
adc
pop
or
xlat
lock
sub
iret
sub
and
sub
cmpsb
pop
xchg
jge
xchg
or
and
sub
aas
push
ljmp
dec
adc
cli
dec
and
mov
in
cli
cmp
hlt
clc
iret
dec
and
ret
push
push
and
adc
es
in
out
and
mov
sbb
popf
mov
orl
in
out
xor
cmp
bound
xchg
mov
or
pop
xchg
js
orl
ret
rclb
je
movsl
test
and
jo
bound
adc
das
ja
movsb
or
jmp
sub
scas
and
xchg
mov
fidivs
cld
cli
jp
add
sub
filds
in
pop
and
mov
inc
lret
push
sbb
push
sub
rorl
cli
out
mov
mov
xor
sub
mov
sub
xchg
int
clc
or
dec
and
jg
lcall
or
and
leave
mov
xor
xchg
and
or
jns
xchg
adc
dec
sub
and
mov
add
vcvtsd2si
dec
inc
dec
xchg
in
sub
mov
imul
jl
lock
mov
cmp
movsb
filds
mov
mov
sarb
push
bnd
and
or
imul
inc
ficoms
jb
enter
sub
fisubl
mov
lods
and
aam
lea
cmp
jnp
and
jno
add
push
addr16
lods
sub
xor
lock
dec
dec
and
in
push
sub
pop
mov
mov
cmp
dec
test
lods
aam
aas
leave
imul
cmp
in
xlat
mov
cmp
xchg
and
jnp
mov
inc
outsl
jmp
and
shl
push
adc
mulb
xchg
and
mov
sti
jnp
sub
dec
scas
mov
fwait
xor
add
scas
jmp
push
add
xor
sub
and
daa
enter
inc
mov
leave
dec
ljmp
jae
adc
xor
push
cwtl
xor
lock
lret
mov
pusha
and
lods
mov
and
mov
mov
loop
shlb
jbe
ret
movb
and
jp
rclb
iret
mov
mov
and
andb
js
call
mov
or
lret
leave
loope
sbb
push
mov
stos
pop
mov
mov
xor
out
and
sbb
dec
and
stos
insl
sub
fs
adc
and
mov
xor
sbb
mov
aad
dec
outsb
xchg
adc
cltd
gs
sub
mov
mov
and
leave
add
cmp
sub
cld
dec
mov
and
adc
fnstenv
adcl
shr
into
shlb
cmp
sub
inc
push
scas
and
lods
mov
insb
pop
repz
imul
shrb
loopne
mov
jmp
idiv
scas
xchg
cmp
xor
ljmp
dec
cld
int
lcall
fs
mov
scas
stos
popa
xor
dec
in
and
inc
cs
sub
out
imul
jp
xchg
xor
and
mull
and
xlat
lods
mov
addb
inc
outsl
dec
lea
pop
loopne
pushf
add
xlat
and
sbb
mov
and
out
cs
sarb
movsb
imul
icebp
ret
jge
mov
cli
movsb
cmp
or
and
popl
push
xchg
xor
jmp
push
mov
jnp
mov
jmp
jmp
leave
sarl
and
out
jne
jae
ficompl
adc
fisubrs
cmpsb
sbb
and
xor
in
mov
xchg
sbb
push
andb
xchg
push
pop
pop
dec
adc
and
lret
lods
push
cmp
aad
lods
stc
enter
dec
fs
dec
popa
or
mov
push
mov
push
out
pop
pop
sbb
hlt
aam
cmpl
loopne
cli
pop
dec
sbb
scas
and
pop
bound
test
push
sbbl
jae
cs
inc
lock
inc
push
and
neg
adc
movsl
xchg
and
xlat
insl
dec
push
js
stos
and
jmp
xchg
and
jbe
jb
sub
sbb
in
sbb
cs
fs
or
push
mov
push
gs
adc
imul
dec
mov
and
pop
push
insb
lods
and
cwtl
es
cmp
jb
push
cmp
pop
mov
shll
cltd
into
and
sub
enter
and
lea
loope
inc
inc
fadds
imul
icebp
sub
mov
mov
cli
ja
clc
lds
test
enter
mov
loop
sbb
add
mov
dec
adc
pushl
outsb
cmp
cmp
les
or
cs
aad
pop
and
add
in
and
mov
cmp
cmp
push
mov
xchg
imul
and
addr16
pusha
int3
or
out
shlb
adc
outsb
jg
push
mov
fisttps
sub
or
das
mov
mov
arpl
jns
jbe
mov
lods
test
sub
movaps
pop
mov
out
outsl
fldenv
inc
loopne
mov
dec
and
repnz
mov
and
xchg
push
testb
es
cmp
test
xchg
lods
aas
and
adc
mov
push
pop
sahf
xlat
or
addr16
mov
jmp
adc
mov
inc
rorb
jne
and
loopne
mov
and
fisttpll
iret
out
mov
outsb
loopne
jne
inc
cli
mov
fwait
mov
stos
add
and
imul
and
test
mov
and
movsl
jp
repz
vpshlb
cmp
pop
mov
cmp
push
sahf
enter
xor
out
aam
sbb
les
push
add
lahf
sub
mov
and
cs
jge
add
and
repz
xor
sub
adc
push
pop
push
xchg
mov
imul
je
xor
lcall
out
push
and
mov
repz
test
jnp
mov
jle
cmp
fidivrl
and
xchg
stos
sti
mov
xorb
ret
out
in
adc
stos
mov
jg
sbb
cmp
sbbb
pop
mov
xchg
mov
push
and
stos
cmp
ret
jp
aam
inc
sahf
and
leave
clc
adc
rcll
inc
int3
mov
imul
sub
jmp
in
in
mov
cmp
lods
in
inc
cmp
daa
mov
and
pusha
and
or
and
inc
rorl
add
stos
popf
lds
test
jp
and
or
imul
stc
and
add
jae
lea
icebp
sbb
cwtl
fs
mov
or
jge
xchg
dec
inc
test
pop
push
rcrb
fdivrp
mov
iret
xor
sub
push
jb
jo
and
sub
andb
adc
sbb
push
jnp
jo
sub
xlat
cmp
out
nop
and
test
lods
mov
jno
shlb
and
xchg
or
mov
scas
daa
cli
out
int
and
pop
push
cmc
fs
xchg
push
add
sub
jmp
sub
inc
jnp
push
xor
insl
jns
or
pusha
xchg
and
test
inc
and
call
adc
fnstenv
insl
cmpsb
and
bound
iret
in
fs
sub
mov
dec
cmp
add
jnp
cmp
mov
adc
add
jmp
mov
test
lea
fistl
mov
push
out
cmp
or
mov
mov
sar
and
sysret
rorl
pop
subl
or
cmp
rcll
bound
push
mov
sbb
cmp
dec
inc
and
jb
gs
pop
adc
cs
mov
jno
movsl
nop
and
sub
jo
push
mov
je
jl
sbb
popf
push
sub
mov
fistps
mov
scas
addr16
shll
and
test
xchg
and
push
dec
cmp
dec
pop
or
test
loop
test
lret
aaa
and
or
mov
sbb
mov
shr
imul
popa
stos
mov
std
mov
cli
imul
cld
int
xor
fcoms
and
movsb
xchg
mov
insb
outsb
ja,pn
insl
mov
test
and
sbb
sbb
loopne
pop
mov
mov
adc
jmp
and
pusha
inc
mov
inc
jp
dec
mov
pop
and
fdivrs
orl
nop
cmp
fs
and
dec
clc
add
rorb
xor
rolb
pop
xor
scas
out
and
daa
lcall
push
dec
lds
mov
aam
xchg
xchg
pop
sbb
cmp
jbe
and
mov
xchg
and
xor
les
adcl
call
inc
movsl
mov
push
mov
pop
mov
es
mulb
arpl
mov
xchg
mov
pop
sub
cmp
outsb
and
call
jl
mov
aas
cltd
jg
add
lods
mov
mov
inc
or
mov
and
addr16
jp
aas
xor
popa
aaa
sbb
cmp
xor
and
pusha
hlt
push
loope
xchg
sbb
mov
test
lret
jle
addr16
mov
fwait
or
dec
add
add
lock
sub
out
pop
cs
sub
mov
adc
and
gs
pop
xchg
cmpb
xlat
pop
in
sub
andl
sbb
mov
and
dec
in
jno
sbb
xor
mov
in
data16
div
sub
dec
jg
push
push
pop
addb
push
adc
pusha
fsubrs
mov
inc
pushf
je
and
jmp
cmp
cld
outsb
cs
inc
and
or
subl
je
mov
xor
mov
out
sarb
and
les
pop
cmp
fldenv
out
fdivrl
leave
mull
push
and
dec
sahf
push
cmp
stc
sub
xchg
es
movsl
and
ret
jge
iret
les
or
xor
inc
adc
in
leave
push
mov
jae
mov
jnp
add
stos
mov
mov
into
dec
ljmp
imul
and
mov
and
sbb
mov
in
sub
scas
das
cmc
pop
mov
mov
loop
sarl
call
stos
bound
sub
stc
aas
and
xchg
out
sub
and
sub
add
xlat
adc
das
pop
mov
mov
outsl
xchg
and
sub
movb
lock
jge
inc
jmp
and
loope
repnz
sub
flds
inc
outsl
sbb
mov
mov
mov
lock
rorl
pop
outsb
push
adc
test
mov
xor
cld
repz
or
adc
xchg
pop
cltd
cltd
sbb
hlt
aam
bnd
xchg
shl
xchg
rclb
jl
movsl
push
das
cmp
mov
and
cwtl
inc
adc
cmp
das
andl
mov
repnz
lock
iret
mov
push
int3
adc
lods
inc
imull
push
mov
fnstsw
idivl
out
movsb
push
shll
and
cli
rorb
jo
imul
mov
push
cmc
jle
sub
mov
mov
push
out
mov
jbe
add
pop
pop
xlat
and
ljmp
les
xor
out
je
in
inc
jae
pop
les
faddp
sbb
sbb
xor
lods
and
fsubs
insl
lahf
inc
fbstp
gs
ret
divb
push
lcall
push
sbb
jl
ret
push
mov
add
cld
mov
and
dec
xchg
jmp
pop
rcrb
pop
and
loop
and
cmp
lea
jne
outsl
and
sahf
lods
into
and
sub
xor
xor
test
stos
dec
int
inc
sub
icebp
jmp
add
push
and
mov
es
roll
or
ds
push
pop
sbb
xchg
mov
mov
mov
cs
jno
int3
lds
icebp
sti
mov
inc
cmpsl
and
push
and
out
push
lret
pop
jo
adc
mov
and
rolb
jg
and
mov
sub
mov
lahf
xor
shlb
inc
mov
inc
sbb
ret
lret
sub
movsl
mov
arpl
aam
jbe
aad
pop
mov
push
inc
hlt
sub
push
xor
fistl
mov
and
mov
test
push
insl
les
cli
ja
dec
jle
xchg
cmp
and
cmp
out
dec
call
rep
adc
aas
mov
push
add
divb
xlat
inc
pushf
in
nop
sub
and
and
loope
aam
sbb
jl
mov
inc
call
roll
adc
xchg
cmp
mov
outsb
sub
jne
cmp
lock
movsl
xchg
xchg
add
das
and
and
mov
pop
jge
cli
add
mov
mov
std
or
lcall
xchg
shll
pop
pop
inc
and
mov
xor
lock
dec
xor
addb
mov
pop
out
and
test
and
cmp
and
pop
jb
and
pop
adc
xchg
xor
sub
mov
ja
out
sbb
sbb
lcall
mov
repz
loope
sub
and
clc
arpl
dec
fisubrl
daa
dec
in
adc
and
hlt
pop
repnz
sub
inc
out
xor
and
mull
push
cmp
sbb
sub
aad
test
jmp
gs
imul
movsb
xor
jp
lcall
leave
cs
sub
and
jo
mov
insb
out
and
sbbb
popa
sub
cmp
pop
or
movl
scas
inc
sti
call
in
repz
and
cmc
test
subl
jmp
inc
cmpb
int
push
testb
and
jbe
add
sub
aam
ret
pop
popf
lods
xchg
cld
dec
fs
and
sub
cmp
cmpsl
out
jge
insb
aaa
inc
jmp
paddusw
mov
jno
arpl
outsl
jns
cmp
xchg
mov
andb
xor
inc
xchg
xchg
and
sub
sub
cmp
jns
mov
stos
test
and
xchg
sub
and
shrl
flds
or
cmc
imul
in
out
mov
add
loop
mov
and
cwtl
decl
push
jnp
int
incb
or
jl
cmp
adc
push
cli
iret
gs
sub
lea
flds
and
cltd
cmpsb
and
push
and
insb
mov
xchg
iret
push
mov
addl
adc
and
cli
rcr
or
jnp
sbb
mov
cmp
cs
sub
mov
sub
mov
or
out
mov
lods
and
out
aas
pop
ljmp
or
mov
xchg
xchg
sbb
imul
mov
jl
mov
aas
test
pop
and
ret
push
adc
leave
jnp
fcompl
xor
insl
cmc
shll
imul
repz
in
mov
sbb
dec
cmp
scas
mov
xchg
fisubs
sbb
in
push
dec
jne
in
xchg
fsubs
pop
fwait
bound
and
add
push
fs
test
aad
mov
lods
adc
mov
sahf
lods
and
andb
dec
scas
shrl
xor
xor
sbb
jae
inc
in
inc
sub
pop
out
outsl
sbb
push
push
fildll
and
push
add
arpl
mov
aam
test
sbbb
out
rcll
sbb
and
andb
xchg
jno,pn
stc
jb
mov
inc
fldt
mov
rcrb
adc
cmc
js
mov
mov
shll
xor
push
cmp
and
test
xchg
and
insl
cltd
xor
movb
test
inc
dec
cmpsb
mov
jns
add
inc
cmp
enter
and
add
shlb
popa
add
arpl
jbe
xchg
mov
in
test
xchg
and
adc
cli
xchg
int3
adc
add
enter
push
sbb
repnz
adc
dec
in
push
nop
xchg
jns
sar
and
lret
fs
ret
pop
aas
push
movsl
add
cmp
lods
xlat
aam
cltd
and
add
test
lods
frstor
jl
fiaddl
inc
mov
repz
mov
sub
dec
adc
nop
push
sub
outsb
pop
aas
xor
and
lock
sbb
inc
sbb
fisubrs
sub
push
xor
lock
std
cmp
lahf
je
mov
cmp
or
ljmp
jecxz
int
lock
pop
lock
adc
xor
test
shlb
lahf
pop
in
xchg
in
repnz
mov
movsl
repz
clc
xor
fcomip
imul
fcomps
cmp
fsubrl
jg
mov
out
cmp
mov
cmp
cmpsb
sbb
cs
shrl
mov
andb
and
inc
jg
fisubl
aad
or
sbb
push
in
or
and
out
sub
mov
cmp
icebp
mov
inc
mov
insl
into
aad
and
xchg
lret
fimuls
gs
mov
mov
jp
cmp
and
cli
cld
sti
pop
push
add
xor
insb
fsubs
cld
imul
pop
test
cs
decl
jne
inc
cli
push
in
jl
sub
arpl
in
sub
mov
mov
xor
and
das
aam
rorl
test
sarb
xchg
and
mov
fistpll
jmp
adc
add
xor
and
or
push
and
sub
mov
xor
sbb
mov
push
int3
xor
sub
ja
sbb
push
outsl
sbb
add
test
mov
movsl
and
stos
add
mov
jmp
jae
or
test
test
aaa
ficompl
incb
std
mov
and
push
je
and
ret
in
popa
inc
int3
lods
cmc
and
lods
add
ret
jns
rorb
jmp
and
les
mov
jno
das
sub
hlt
or
dec
insl
and
push
pop
iret
fsubs
dec
add
mov
jns
or
inc
sub
lcall
and
orl
mov
sub
dec
cli
add
xchg
mov
inc
pop
and
insl
jns
push
and
dec
loope
nop
iret
xchg
inc
sub
or
xorl
xor
sbb
hlt
xor
ds
rorb
sbb
bound
ljmp
ficomps
xor
and
jne
leave
jae
mov
ret
mov
and
notl
dec
insl
jecxz
push
mov
mov
push
xor
cwtl
cmp
dec
mov
mov
cld
cmc
push
jns
jmp
out
fidivs
jnp
lods
and
jle
and
loop
dec
cmp
outsl
adc
rcrl
xor
cld
int
dec
sbb
sub
mov
jno
fld
and
mov
out
and
cli
sub
xorb
cld
xchg
mov
and
les
or
mov
sub
dec
dec
and
push
push
xor
int3
sbb
fsub
cs
repnz
outsl
mov
xchg
rol
xchg
repnz
and
test
pop
cmp
and
aaa
inc
cli
push
lret
sub
push
test
jae
negl
shr
shl
cltd
and
sti
pusha
call
rorl
jns
xchg
stc
loop
mov
and
and
ret
cld
loopne
lods
fsubs
test
mov
cmpsl
aam
mov
test
sub
leave
imul
rclb
in
sub
jl
lods
cmp
or
les
pop
shll
and
fldenv
int3
call
mov
inc
enter
push
movsb
mov
inc
jo
sbb
subl
mov
push
and
testb
rol
insl
pop
and
adcl
scas
xchg
sbb
mov
test
fdivl
andb
mov
inc
stos
in
add
rcrl
push
push
pop
jnp
out
lods
sub
mov
pop
push
std
fidivs
arpl
test
addr16
xchg
imul
fcompl
jnp
arpl
lret
or
and
and
and
inc
data16
pushf
cld
bound
and
js
pop
movsl
mov
out
in
into
mov
adc
or
fdivs
lds
cmc
lods
inc
pop
imul
rcrb
mov
mov
nop
lcall
les
push
sub
je
iret
sub
int
xor
and
movsb
mov
xchg
lahf
outsb
clc
mov
xor
jg
sub
stos
mov
pop
data16
fs
loopne,pn
inc
lea
insb
cmp
and
mov
adc
xchg
cmp
jns
push
xchg
and
gs
sub
push
call
jp
negl
cld
push
in
cmp
pop
insb
test
shl
sbb
mov
or
mov
jo
stc
subl
jae
and
mov
sbb
and
xchg
mov
and
jg
inc
sbb
repz
insl
out
les
mov
clc
dec
test
push
jb
and
jmp
lods
dec
cmp
scas
xchg
lea
and
adc
inc
adc
outsl
xchg
scas
sub
and
xor
fdivrl
stos
inc
ret
int3
scas
pop
push
and
or
ret
sbb
mov
dec
jb
push
cltd
jmp
mov
cmpb
pop
add
repnz
stos
jbe
adc
add
mov
mov
and
inc
mov
and
dec
loop
add
cmc
pop
leave
add
daa
ficompl
dec
xchg
in
pop
std
jmp
and
and
je
push
hlt
mov
and
dec
mov
enter
pushf
xchg
and
or
or
les
js
mov
inc
lods
pop
scas
iret
mov
dec
or
ror
lea
cmpsb
dec
pop
out
push
or
and
cmc
pop
mov
xchg
dec
push
les
lret
sub
adc
or
and
xchg
inc
and
inc
rorl
and
push
and
push
pushf
nop
sbb
add
cs
out
pop
cli
lret
mov
int3
xor
and
mov
sub
sbb
mov
sbb
push
bound
stos
sub
scas
add
into
mov
hlt
and
fidivl
cs
das
xchg
loope
lock
insl
add
add
jo
mov
mov
xchg
dec
or
dec
in
negb
loope
cs
mov
and
cld
lods
pop
push
hlt
and
into
dec
xchg
xchg
mov
inc
and
and
push
and
adc
repnz
pop
push
push
stos
pushf
cltd
mov
push
dec
jo
mov
and
push
sub
xor
inc
jle
idiv
fnstcw
and
int
jne
sub
and
mov
mulb
hlt
repz
stos
and
in
test
mov
bound
cld
sbb
loopne
popa
cs
mov
aas
sar
push
pop
and
cmp
push
fnstcw
and
mov
and
fwait
add
cmp
dec
jnp
mov
mov
sbb
sub
lds
mov
dec
sub
and
xor
lret
mov
stc
push
inc
nop
enter
dec
sub
negb
bnd
lahf
arpl
pushl
sub
faddp
test
shll
shld
push
frstor
pop
orl
sub
and
fnsave
and
popf
xchg
into
xlat
pop
pop
insl
ds
and
fiaddl
pushf
call
icebp
pop
pop
mov
mov
mov
pop
mov
stc
xlat
and
lods
adc
and
stc
andl
and
idivb
cmp
jo
ret
lds
adc
sbbb
sbb
jmp
sub
xorl
cwtl
add
xlat
fcompl
push
mov
add
cli
mov
cmp
icebp
fildll
and
popa
inc
leave
dec
ficoml
and
cmp
popa
mov
and
sbb
add
xor
outsl
jmp
lahf
and
gs
out
shrl
cmc
and
sub
jg
andl
pop
test
aad
cs
and
fsubrs
adc
mov
add
test
out
push
ret
and
pop
pop
or
push
movsl
scas
sbb
sbb
aaa
inc
mov
adc
adc
or
add
mov
sub
rcll
testl
push
in
test
aad
mov
jne
and
push
rorl
xorl
inc
jb
mov
lahf
pop
xchg
call
mov
outsb
insb
sub
les
aaa
shlb
cmp
push
push
mov
pop
ret
mov
outsl
scas
ret
mov
mov
repz
leave
and
mov
lds
pop
and
sbb
pop
fdivrl
cmpsb
aam
add
sahf
fsts
dec
imul
test
xor
xlat
inc
jge
shrb
inc
inc
cltd
int3
jmp
dec
jbe
fidivrs
repnz
outsl
cli
mov
scas
jl
xchg
cs
add
je
push
xor
or
or
idiv
push
stc
shrl
fstl
data16
pop
push
scas
shrb
mov
movsl
cmpsl
cmp
pop
jnp
sti
lods
rcr
clc
in
repnz
lock
sub
insb
xor
fsubs
jae
dec
adc
mov
and
cwtl
cmp
and
xchg
pop
das
gs
ds
scas
inc
out
push
iret
das
out
adc
dec
mov
push
adc
repz
jno
lahf
and
adc
dec
imul
xor
push
or
mov
cli
sbb
lods
pop
loope
mov
lds
and
jmp
mov
adc
iret
nop
pop
dec
movsl
push
and
xchg
dec
es
outsb
or
and
or
xchg
pop
pop
mov
in
andl
shlb
sub
add
jp
arpl
sub
push
pop
jae
std
es
and
fnstsw
ret
dec
adc
push
mov
faddl
into
aas
pop
insl
jg
aad
and
cmpb
xchg
and
push
test
and
sbb
pop
mov
push
scas
cmp
xor
pop
cld
fwait
sub
dec
lret
test
jns
lahf
xchg
lock
jo
and
outsl
jne
fldl
loop
std
mov
jecxz
add
sub
ds
push
das
in
mov
test
mov
xchg
jbe
and
xor
and
fistpl
sahf
inc
mov
sbb
ljmp
add
movsb
and
cmc
test
sbb
ja
insb
and
addb
push
sbb
mov
loopne
push
ja
and
mov
xor
call
lahf
sub
ret
loop
pop
xchg
test
mov
and
push
inc
or
inc
rolb
imul
decb
shlb
les
movsb
pusha
xor
pushf
sub
sbb
mov
jns
adc
xchg
mov
bnd
out
jnp
shrb
inc
cmp
arpl
mov
inc
sarl
pop
jo
cmp
adc
and
out
bound
lods
jno
fisttps
enter
and
je
sarb
add
pop
push
jge
cmp
rolb
xchg
icebp
and
inc
sbb
push
push
pop
add
sete
xlat
sub
cs
pushf
xchg
sub
frstor
inc
add
neg
sub
mov
pusha
and
insb
ret
mov
cmp
mov
enter
jne
fistps
mov
fwait
loopne
stos
add
push
or
nop
sub
mov
scas
insb
mov
ljmp
xor
mov
ds
mov
push
jecxz
inc
fldcw
xor
sbb
cmp
sbb
lahf
fwait
mov
and
in
cs
xor
add
xor
bound
push
jnp
lock
or
ret
sub
shl
imul
idiv
mov
in
xchg
cli
iret
push
or
repz
out
cwtl
lods
dec
in
ljmp
mov
pusha
mov
cmpsl
fimull
jb
stos
cmp
pop
xor
jl
out
ds
xor
in
sub
jmp
and
in
aad
pop
and
rclb
clc
fwait
xor
dec
and
inc
iret
or
leave
lods
and
cmp
call
and
jo
inc
pop
cmp
dec
enter
lea
and
jle
or
mov
and
stc
ss
scas
and
dec
mov
shll
repz
lock
push
cmp
and
dec
shlb
xchg
jb,pt
jmp
sub
and
pop
mov
add
pushf
and
push
mov
aam
push
mov
sub
sub
and
xor
cmc
xchg
sub
fmul
sub
test
aad
xlat
cwtl
repnz
inc
and
imulb
loope
jb
cmp
push
mov
das
sub
data16
dec
mov
or
sti
and
test
pop
scas
fs
jo
lret
shl
popa
dec
insb
push
xchg
cs
std
test
pushf
int
cmp
ljmp
cmc
mov
adc
xor
xchg
add
cmp
xchg
jmp
jnp
cwtl
pop
inc
mov
lahf
jp
dec
and
or
mov
cli
push
inc
insb
stos
sub
adc
dec
out
cmpsb
inc
dec
and
push
aam
jno
inc
dec
mov
xchg
adc
aam
adc
push
lret
cli
sub
sbb
inc
fdivrl
insb
xor
pop
dec
into
jmp
nop
xchg
jp
cmp
mov
mov
cmpsb
jnp
sub
sub
enter
mov
pop
xor
adc
leave
setg
ljmp
test
bound
and
or
cwtl
outsl
xchg
int3
mov
xor
cmc
fdivrl
lock
pop
mov
sbb
mov
pop
dec
cmp
xchg
rcrb
cmp
or
jns
sbb
loope
dec
scas
adc
cld
jl
ret
scas
mov
frstor
fistpl
push
and
bound
cmpsb
hlt
loop
sub
xlat
pushf
pop
and
sbb
push
sti
xchg
adc
sub
and
push
lods
mov
push
inc
fsubrp
xor
popf
idivl
ficompl
inc
add
adc
xor
inc
cli
sub
mov
outsl
adcl
lret
test
sub
or
add
sbb
mov
movntq
out
ja
jmp
stc
cs
stos
adc
pop
cmp
lds
popa
push
inc
mov
and
sti
and
sbb
fucomi
mov
sub
adc
cmp
xchg
sub
mov
jp
and
push
cltd
stos
aam
pusha
and
cmp
sub
xor
xchg
clc
inc
inc
adc
enter
data16
jnp
rolb
and
mov
and
mov
iret
push
lret
mov
mov
mulb
sub
sbb
mov
das
push
xchg
cmp
and
lahf
repnz
cmp
pop
dec
dec
mov
xchg
stos
leave
xor
ficompl
out
les
and
repnz
add
or
mov
jecxz
pushf
or
adc
mov
in
sbb
add
inc
and
ficoms
adc
push
mov
add
dec
inc
cli
hlt
cmp
mov
xor
mov
jg
sub
add
mov
mov
xchg
out
fidivrl
and
push
dec
mov
xchg
std
xchg
sub
mov
cwtl
negl
enter
imul
sub
cmp
pop
std
sbb
mov
jnp
iret
jp
lahf
ds
data16
repnz
add
pop
and
outsb
jg
pop
repz
into
mov
or
lea
push
mov
and
je
pmaxsw
and
and
and
les
push
xor
jecxz
xor
ljmp
outsl
ljmp
adc
add
sbb
and
arpl
nop
and
jmp
mov
notb
and
movsl
rcll
add
scas
gs
xchg
add
cld
mov
jnp
jnp
sub
push
inc
inc
and
jb
and
sarl
in
and
mov
and
sub
jl
out
push
or
cmp
sub
fildll
mov
sahf
iret
repz
inc
jecxz
arpl
or
sbb
stos
sbbb
pop
and
and
test
dec
and
ja
repz
add
mov
frstor
popf
inc
fiaddl
fs
fwait
sub
pop
push
and
mov
jge
outsl
sbb
inc
push
mov
int3
xchg
adc
pop
imul
push
xor
dec
mov
dec
and
movsl
sub
xor
mov
lods
add
and
sbb
fldenv
scas
sti
pop
and
test
adc
push
es
das
mov
into
and
imul
and
loop
dec
and
shlb
dec
insb
cmp
xor
fwait
sbb
pop
cmp
in
jmp
push
inc
and
nop
shrb
das
mov
mov
test
in
pop
rolb
add
iret
mov
mov
and
adc
in
pop
add
xor
jno
jmp
ja
xchg
imul
push
lahf
mov
in
cli
add
stos
dec
mov
and
xchg
stc
or
out
and
nop
loop
cmpsb
and
cli
repz
xchg
mov
lods
and
cmp
cmpl
pop
sbb
bound
and
cmp
and
arpl
enter
adc
add
push
movsl
shrb
gs
subb
jo
and
pop
mov
and
mov
in
adc
jg
sbb
outsb
and
repz
inc
dec
loop
andb
mov
push
movsb
sbb
pop
push
dec
in
andl
inc
mov
popf
pop
add
pushw
and
out
fistps
and
mov
xlat
mov
push
js
das
mov
stos
stc
shrl
imul
popa
push
and
adc
sub
addl
add
insb
sub
and
fbld
cmp
subb
and
shll
push
sbb
fisttpl
insl
pop
push
aam
fsubl
loopne
xchg
mov
mov
ret
jno
stc
dec
lds
mov
push
xchg
and
nop
jne
in
and
inc
mov
cmp
int3
stos
push
adc
mov
sub
shlb
and
cmpsl
cltd
or
and
sub
movsb
pop
sahf
xor
mov
aaa
adc
and
enter
sub
mov
and
movsb
jbe
sbb
mov
inc
std
inc
and
arpl
push
out
aaa
and
scas
nop
fisubs
lods
xchg
shll
repnz
cmpsb
cmc
les
jnp
mov
pop
sbb
xchg
cmp
inc
adc
adc
add
out
or
and
add
inc
in
pushf
mov
sub
mov
movsb
aaa
test
sub
inc
pusha
jno
ret
iret
loopne
and
scas
je
fisttpll
or
mov
sbb
cvtpi2ps
or
shll
sbb
add
and
push
stc
xchg
andl
and
cmp
push
mov
and
stc
fcmovne
test
and
sahf
xchg
xchg
orl
adc
lods
insl
scas
and
lods
js
lock
mov
dec
xor
sbb
mov
or
and
into
pushf
popa
sbb
js
xchg
ss
call
adc
lret
adc
or
adc
jae
cltd
ficomps
and
xchg
das
pop
pop
je
and
mov
cmp
out
pusha
decb
dec
adc
sbb
fisubrs
mov
mov
fnstsw
or
inc
stos
and
cmp
and
outsb
out
cmp
in
cmp
sub
lcall
pop
in
and
xchg
int3
pop
adc
mov
in
roll
xor
jp
pushf
out
shlb
mov
leave
xor
pop
pop
mov
dec
and
insb
xchg
pushf
and
mov
subl
sahf
and
sbb
lods
stc
in
iret
pop
ja
sub
cmpsl
mov
and
imul
dec
and
sti
pop
dec
in
push
and
movsb
jge
leave
outsl
and
call
iret
and
pusha
stc
stos
in
xchg
aam
in
inc
popf
cmp
pusha
sub
lret
pop
arpl
and
out
sub
int3
dec
and
push
sbb
and
fsubp
add
push
xchg
inc
loope
and
jb
test
mov
adcb
int3
add
jge
rclb
fildll
push
jbe
cs
cs
sbb
mov
mov
push
hlt
testb
xchg
out
and
pop
and
andl
jl
push
out
push
lcall
and
popa
aas
mov
ds
cwtl
das
inc
mov
testb
sbb
and
clc
push
iret
adc
xchg
adc
mov
fildl
cltd
and
dec
mov
add
and
jbe
and
movsl
pusha
xlat
push
shll
stc
and
push
nop
cli
or
subl
stc
and
xchg
push
movl
jae
nop
gs
pop
fwait
dec
cmp
es
cmpsl
out
mulb
or
jmp
and
pop
add
outsb
test
ljmp
cmp
inc
mov
sub
inc
jo
or
rcrl
push
and
pop
inc
ret
xchg
and
pop
and
jae
ror
cs
loopne
fidivs
dec
fwait
cmp
lods
ljmp
sub
lret
rcll
in
sbb
and
movsb
mov
movsl
jbe
lcall
nop
pop
ljmp
adc
pop
xor
sar
aaa
jnp
xor
sub
or
push
hlt
sub
mov
and
sbbb
and
sub
outsl
and
xchg
inc
sbb
dec
mov
enter
mov
icebp
dec
push
notl
mov
and
ret
jmp
inc
movsl
sbb
inc
and
inc
pop
fsubl
mov
jmp
sub
ds
data16
lods
inc
lret
push
int3
and
test
and
js
in
ret
ljmp
bound
xchg
mov
lods
outsb
rolb
and
mov
sub
adc
mov
inc
sub
scas
sub
sub
and
xor
mov
jg
sbb
jbe
pop
mov
and
popf
inc
cmp
rcll
test
and
lods
stc
insl
push
mov
and
lock
and
dec
fdivrl
push
jmp
pushf
cmp
cmp
and
add
ret
mov
and
rolb
popf
push
mov
stos
cmp
lcall
and
cltd
push
and
shll
aaa
pop
mov
jl
xchg
dec
ret
mov
daa
jmp
out
mov
outsb
jbe
ja
mov
iret
add
roll
push
imul
inc
hlt
push
sub
out
and
xchg
test
movsb
mov
lcall
and
dec
cmpsl
sub
movb
pop
and
jbe
loope
fldcw
jecxz
jo
lock
js
xor
and
sbb
mov
test
pop
add
xchg
int3
data16
shlb
push
jg
dec
pop
inc
into
imul
sahf
jae
fsubrs
xor
lds
cld
jmp
mov
hlt
pop
sub
mov
push
test
ja
in
int3
aad
mov
jbe
js
clc
hlt
shlb
adc
xchg
cmp
fsubrl
jle
cmpsl
int3
and
out
adc
xlat
imull
andb
les
ror
push
and
dec
aad
adc
xchg
jnp
lcall
push
and
xor
aaa
and
inc
push
add
scas
pop
lret
ror
sbb
mov
ret
mov
or
jo
scas
and
xor
push
lahf
or
sbb
test
in
and
int
outsb
iret
repz
roll
mov
push
mov
sub
into
mov
inc
and
or
sub
testb
push
mov
lea
jno
insl
and
lock
mov
sub
mov
out
xchg
insb
in
inc
mov
and
out
push
arpl
in
ficomps
inc
repz
insb
xchg
push
sti
outsl
inc
and
in
fsts
and
adcb
movsl
push
jae
xlat
pop
mov
push
and
mov
popf
and
cmp
lea
dec
popa
and
pop
sbb
stc
push
daa
xor
imul
cmc
push
cwtl
xor
int
and
dec
xor
out
push
lock
test
pop
jnp
and
das
rolb
or
jae
js
mov
add
and
aaa
push
adc
aad
cmpsb
insl
jp
xchg
push
cmp
scas
mov
sbb
and
push
cmp
sub
ficompl
cli
add
jb
rclb
stc
and
std
dec
sahf
or
nop
mov
pop
dec
and
repz
out
loop
and
hlt
in
push
or
cwtl
inc
and
out
and
dec
bound
and
fwait
out
cmp
xor
scas
cld
ret
and
fsubl
sub
movsl
out
divb
ficoms
and
stc
shl
xchg
sub
xchg
or
sub
push
sti
ret
sbb
mov
and
cwtl
lahf
mov
add
pusha
fs
outsb
inc
and
dec
ficoms
pop
and
ret
and
mov
and
or
sarl
into
dec
and
push
dec
icebp
pop
mov
and
sahf
loop
insl
sti
push
sub
sub
xor
mov
adc
loopne
int
loope
or
fbstp
scas
cmp
call
inc
ja
mov
cs
test
aaa
jl
push
clc
outsl
and
in
mov
pop
cmp
repnz
pop
ljmp
mov
std
xchg
and
xchg
ret
push
and
pop
xor
jnp
push
and
in
xor
pop
ja
jb
adc
add
fs
push
cs
popf
cltd
rclb
xor
lret
mul
in
and
mov
insb
mov
out
stos
ss
sub
and
mov
sahf
gs
mov
jnp
mov
dec
sub
repz
mov
sbb
and
out
xchg
lods
aam
xchg
repnz
push
jmp
les
out
mov
cmpsl
and
call
icebp
jne
push
aas
testb
je
xchg
cmp
and
jae
cmc
and
adc
cli
push
sbb
jl
mov
mov
outsb
push
insl
dec
cld
and
je
inc
outsb
mov
nop
jne
std
and
mov
fimull
rcll
xorb
fldcw
and
mov
dec
stos
sahf
fcmovnu
pop
movsl
lds
sbb
cltd
addr16
lods
xchg
bound
std
movsl
enter
add
and
ficompl
sbb
pop
jns
cltd
popf
js
sub
cmpsb
dec
enter
sbb
mov
test
in
inc
and
and
jmp
stc
fsubrs
cmp
mov
and
roll
scas
out
lcall
aam
push
shl
push
jb
aas
sub
mov
cli
or
mov
fisubrl
das
pop
adc
mov
and
pop
xchg
inc
pushf
and
ret
and
out
dec
iret
dec
idivl
or
mov
add
in
or
aad
js
xchg
cltd
popa
and
gs
sub
repnz
call
in
lds
leave
dec
push
iret
pop
and
push
mov
mov
insb
cs
mov
push
mov
jge
and
or
enter
andl
sbb
int
in
pusha
and
scas
test
iret
mov
cmp
add
mov
jae
xor
decl
hlt
int
mov
je
and
pop
mull
cmc
insb
imul
xor
cmp
dec
pop
xchg
aas
dec
jns
outsb
jno
xchg
lea
out
aam
and
negb
pushf
sub
jmp
inc
cli
xor
add
mov
inc
xor
and
int3
xchg
dec
add
out
fs
cs
cmpsl
mov
mov
out
mov
cli
das
push
pop
add
in
push
insl
repnz
and
mov
imulb
mov
sub
add
fistl
dec
and
and
fists
lret
cmp
or
add
cmc
xchg
mov
xor
in
aas
add
dec
movsl
mov
mov
popa
sub
jnp
xor
test
and
pusha
inc
js
sahf
and
sti
iret
cmpsl
dec
jne
cli
fmul
and
std
sar
cmpsb
adc
out
jno
in
and
xchg
testb
push
movsb
pushf
and
cli
adc
and
mov
cmp
sub
cli
insb
or
sbb
xchg
and
imull
sub
mov
mov
push
xbegin
ljmp
js
bound
idivb
jae
add
or
sub
jge
cli
or
outsb
sub
testb
stc
fcompl
and
jo
inc
cmp
xchg
aas
mov
sbb
loope
dec
add
mov
add
cld
pop
pop
repnz
and
xchg
sub
cmpsl
and
out
repnz
and
push
lret
aad
cmp
lds
jmp
add
and
push
xchg
sahf
inc
push
sub
mov
test
icebp
inc
xor
jp
jle
pop
mov
dec
int
inc
sbb
and
jl
movsb
and
shrb
cs
xchg
mov
in
test
cmp
or
sti
cmp
sbb
lea
loopne
shlb
mov
mov
xchg
out
lds
sbb
push
loop
xchg
das
testl
push
in
and
aam
lret
xchg
cmp
jecxz
repz
and
push
leave
rcl
call
cltd
and
mov
aad
sub
out
lock
pushf
jo
xor
xchg
push
sub
in
scas
addr16
lods
mov
les
in
dec
jo
jo
xchg
test
mov
jle
and
je
cmc
and
cmpsl
out
shrl
mov
xor
repnz
mov
cs
das
rolb
and
mov
or
or
xor
iret
icebp
or
hlt
cmp
mov
mov
out
xlat
sub
pop
lret
sub
test
mov
and
ds
icebp
cmpsb
xchg
leave
mov
fbld
mov
xchg
outsb
andl
pop
mov
pop
and
mov
imul
xor
push
test
cs
mov
mov
mov
push
push
sbb
movsl
xchg
and
lea
icebp
and
xor
adc
lock
dec
adc
shl
xchg
sbb
fstps
je
push
sub
insl
lahf
cwtl
and
fldcw
cli
and
xor
pop
movd
pop
vmovsldup
sub
pop
add
add
imul
shll
mov
xchg
jns
dec
push
dec
jne
dec
and
sbb
xchg
xor
ss
mov
mov
cmpsb
inc
clc
popf
lcall
dec
rol
stos
test
sbb
and
pushf
out
out
arpl
and
divl
int
xchg
add
sub
out
and
aad
popa
icebp
xchg
xor
bnd
aaa
push
jo
pop
xor
xor
jp
loopne
inc
cs
cmp
and
inc
mov
pop
mov
pop
outsb
sbb
repz
stos
jnp
sub
or
mov
add
jmp
aam
in
mov
push
es
jnp
test
fld
sub
jbe
and
rsm
sti
mov
pop
and
stc
ljmp
add
subl
mov
cmp
sbbb
xchg
xchg
jg
mov
pop
and
outsb
daa
stos
inc
mov
and
int3
dec
testl
aaa
cmpsl
mov
xchg
dec
std
jb
aad
mov
and
rolb
or
dec
push
cmp
mov
dec
and
test
mov
cmp
add
and
push
xchg
xchg
push
inc
sub
xchg
jnp
and
add
in
cmpsl
pop
ss
xor
sub
mov
or
imul
jnp
push
mov
or
add
and
sbb
inc
pop
push
and
adc
out
adc
addr16
cmpsb
mov
scas
sub
jno
or
inc
xchg
sbb
push
outsl
add
add
stos
imul
lea
sub
stc
lods
rcrl
push
nop
or
and
es
aam
out
jp
pop
stc
hlt
dec
shlb
and
loopne
and
or
aad
dec
lahf
xor
push
jb
or
dec
pop
cwtl
inc
and
cmp
outsb
pop
shlb
fdivl
dec
movsl
xor
lods
insl
cmp
pop
mov
pop
lcall
ds
ja
jae
sbb
mov
push
dec
mov
sbb
cld
and
dec
dec
sub
fwait
mov
mov
and
add
mov
sahf
rcll
test
popf
and
pop
mov
pop
fs
jmp
and
add
out
and
je
jb
add
in
sub
dec
dec
into
and
and
sub
movsb
cmp
push
push
ja
mov
call
or
inc
lea
sbb
outsb
xor
sti
mov
adc
or
sub
jae
xchg
pop
xor
enter
scas
and
inc
sub
jbe
ret
lret
out
cmp
sub
adc
and
mov
scas
and
pusha
inc
sub
add
sub
mov
rolb
inc
icebp
imul
enter
sub
adcl
mov
test
jbe
stc
dec
mov
test
or
std
push
lds
adc
sbb
insb
bound
mov
add
jae
adc
dec
sub
xchg
and
jnp
pop
roll
and
repz
call
lcall
sub
mov
cmp
mov
pushf
sub
add
call
aaa
out
ss
mov
dec
inc
inc
sub
ret
insl
lret
and
adc
adc
fucom
jp
inc
mov
repz
xlat
mov
subb
rclb
rcrl
push
pop
and
mul
scas
leave
imulb
mov
call
jb
in
dec
cwtl
dec
push
scas
stos
mov
cli
cmp
aas
sub
lock
adc
xor
mov
sub
out
cmc
push
in
push
sbb
loop
adc
ss
jl
jg
ret
imul
and
icebp
leave
inc
adc
sbb
jno
inc
push
je
movsl
mov
call
rolb
push
lods
test
cmp
or
mov
test
cmp
mov
es
clc
mov
lods
jns
mov
mov
pop
mov
add
scas
lcall
cmp
pop
sbb
sbb
xchg
and
mov
and
cmc
and
mov
jge
and
mov
and
pop
pushf
mov
mov
or
dec
insb
and
mov
scas
fnstsw
orl
mov
xor
jnp
xchg
in
mov
xchg
mov
dec
cmp
xchg
pop
and
sbb
dec
push
outsb
and
jnp,pt
pop
cmp
and
jmp
neg
orb
iret
sub
loope
inc
mov
int3
outsl
nop
and
js
and
adc
xor
pop
mov
lock
mov
int3
and
cwtl
sti
push
jno
xor
and
out
mov
cli
outsl
and
inc
jb
lret
inc
mov
cmpb
cli
fmulp
inc
push
sub
shrb
pop
test
mov
add
and
ljmp
popa
xchg
insl
lock
push
xor
mov
sbb
add
jns
adc
sub
aad
mov
jmp
push
lea
insb
jnp
int
push
das
dec
push
or
outsl
js
cmp
iret
and
daa
jl
push
test
fnop
cmp
mov
lahf
scas
sarb
ss
and
mov
lcall
or
sub
xor
lods
cmp
xchg
mov
sub
stc
orb
add
push
and
inc
sti
push
push
cmpl
repnz
push
cwtl
clc
sub
popw
addr16
sub
sub
pop
mov
movsb
xchg
sub
and
jae
dec
and
mov
andl
adc
cs
fsubrl
mov
xor
imul
into
cwtl
sarl
and
lods
and
and
jl
and
fdiv
mov
mov
adc
and
es
dec
fiaddl
clc
xchg
and
or
inc
and
loop
popf
pop
lret
push
hlt
add
cmp
pushl
or
rclw
add
stos
popa
test
sbb
popl
jle
xor
add
jae
test
out
test
sub
jns
sbb
cmpsl
andb
pusha
mov
pop
jl
push
aam
test
dec
test
lret
push
out
pop
sbb
sbb
data16
mov
enter
inc
and
cmp
xchg
sub
sub
roll
jle
movsb
and
lret
cli
cmpsl
cmp
pusha
xchg
add
mov
cltd
rcl
dec
push
push
sbb
pusha
gs
and
xor
movsl
xchg
and
inc
ret
or
enter
adc
xlat
aad
shl
mov
lea
fdivrp
and
jbe
or
jmp
cmp
ljmp
adc
mov
lods
pop
pop
push
mov
clc
and
les
jo
adc
xchg
or
cli
int
jae
sbb
sbb
mov
and
icebp
xchg
pushf
mov
mov
and
mov
loope
popa
pushf
mov
mov
adc
mov
mov
inc
roll
sbb
sbb
mov
outsb
aad
jne
test
mov
pop
int
xlat
add
push
jg
adc
hlt
data16
cli
into
and
mov
mov
pop
std
or
mov
movsb
sbb
testl
mov
out
jp
rcrl
jecxz
cmpsl
push
insl
lock
xor
scas
and
daa
lds
rcl
jno
lahf
sub
test
daa
das
and
ss
or
aad
pop
in
mull
lahf
into
imul
push
cmp
outsl
dec
or
je
cmp
lcall
mov
mov
and
and
cmpsl
mov
and
xchg
clc
push
adc
out
dec
sub
std
stos
repnz
jle
pop
sub
sbb
sbb
shrl
repnz
test
push
push
sbb
repnz
test
xchg
lds
and
xor
sub
push
sahf
in
inc
mov
movsl
leave
je
ficoms
aad
push
adc
cmp
loopne
insb
arpl
jae
jno
dec
dec
mov
leave
dec
sub
and
push
pop
xchg
sbb
and
in
subb
or
mov
sub
repz
push
das
mov
iret
push
dec
and
inc
stos
jno
sbbl
xchg
cmp
fldenv
jbe
mov
mov
nop
cmp
cmp
add
inc
cmp
xor
int
lret
sub
sti
jnp
and
push
xor
mov
cmp
inc
xchg
addr16
subl
fdivrp
fs
dec
cmpsl
addl
jb
and
js
idivb
sbb
je
jbe
mov
mov
test
lds
and
cltd
lods
shrb
and
adc
xchg
sti
jge
and
jnp
daa
adc
ja
cmc
xor
cld
addl
cmpsl
and
out
cwtl
pusha
sub
jno
movb
das
lods
mov
mov
sbb
sub
iret
push
pop
adc
add
in
jno
rorl
dec
cmc
xchg
xchg
ljmp
pushf
push
dec
adc
sbb
ret
cld
add
mov
and
lods
test
dec
push
and
jp
xchg
es
push
aas
inc
and
out
mov
and
shll
test
sub
add
adcl
xor
sbb
stos
adcb
dec
pop
cmp
and
das
inc
or
and
cld
pop
int
pop
cwtl
daa
sub
fisttpl
sub
push
jo
and
pop
adc
xchg
mov
cmpsb
cwtl
rcrb
sbb
lahf
mov
adc
jbe
sar
les
out
shrb
xchg
and
es
or
and
lret
sub
outsl
cltd
sub
arpl
and
out
popa
shl
sahf
mov
sub
and
xor
inc
jle
pop
inc
jge
lock
andl
out
fists
bound
mov
ja
mov
and
fwait
sarl
or
pop
dec
push
fbstp
popf
sub
mov
or
mov
or
fsubl
inc
push
and
xchg
xchg
out
sbb
cltd
jp
sbb
arpl
test
and
xor
stos
nop
add
mov
ret
aas
dec
in
sub
jp
leave
mov
push
inc
xchg
xor
cli
loopne
inc
les
pop
and
sub
ret
shr
xor
mov
xor
pop
jbe
sub
mov
jl
das
jnp
pop
sub
push
xor
jns
arpl
and
aas
cmp
and
cmc
push
or
mov
dec
sub
outsb
xchg
xchg
pop
adc
cmp
int3
mov
fildll
xchg
icebp
push
sahf
cli
aas
push
lret
jecxz
add
and
xlat
cmp
dec
pop
pushf
jmp
jb
pop
sub
and
jl
cmp
das
ret
xrelease
gs
push
adc
mov
setle
and
test
inc
fsubrs
fwait
and
pop
add
and
rcrb
sub
sub
xchg
test
in
mov
pusha
scas
cmp
cmp
adc
mov
sub
test
jg
xchg
and
jmp
xor
jnp
push
and
icebp
mov
push
data16
dec
and
sub
loope
mov
pop
movsl
int3
inc
into
add
call
xchg
mov
adc
test
xchg
insl
je
pop
scas
mov
and
mov
fcoms
sub
sbb
and
cwtl
in
push
pop
nop
mov
sub
clc
dec
push
and
sub
pop
jbe
jmp
sub
inc
out
ljmp
or
and
sub
test
aad
push
push
xchg
jl
fbld
adc
and
movb
and
mov
mov
inc
add
hlt
pop
repnz
sub
mov
test
cwtl
repnz
add
and
pop
and
fimuls
mov
or
sbb
mov
in
insb
ret
dec
scas
pusha
jne
mov
sbb
adc
mov
inc
stos
subl
pop
int3
fsubs
inc
and
shll
mulb
and
lahf
or
and
mov
aam
mov
popf
cs
out
fs
inc
xchg
sub
cmp
fidivs
push
fidivrl
adc
push
mov
jns
jno
push
bound
ficoms
pop
iret
cmpsl
xorl
idivb
mov
cltd
popa
sub
das
inc
enter
ss
and
push
push
sbb
xchg
outsl
sar
mov
or
and
add
lcall
sub
mov
mov
xor
aad
add
cmp
mov
and
repnz
sahf
sub
pop
jnp
adc
das
or
xlat
and
sub
push
js
fiaddl
and
xor
and
and
sub
cmpsb
xchg
pop
push
inc
icebp
cmp
sub
lods
ja
xchg
sbb
push
push
push
inc
and
fwait
inc
or
adc
test
cli
jg
lods
mov
enter
and
jne
je
cmp
jns
nop
sbb
adc
push
push
ret
jmp
mov
hlt
pushf
mulb
jbe
sbbb
pop
jo
and
ljmp
and
movsb
and
xchg
sub
rcrl
jae
fnstcw
mov
xor
push
or
pop
fdivl
call
mov
jo
push
and
mov
scas
xchg
cli
clc
or
bound
sbb
and
scas
push
shll
outsl
mov
movsb
xor
repz
and
movb
fisttps
jo
jge
dec
sbb
and
data16
lret
and
mov
pop
push
daa
sub
and
lcall
and
loope
xor
sbb
jle
emms
inc
and
or
jge
push
sub
dec
fisttps
cmp
sbb
push
cmpsb
frstor
stos
mov
xchg
pop
test
outsb
and
or
inc
adcb
and
sbb
push
repnz
int3
and
aaa
inc
sub
lds
gs
sti
movsb
nop
xchg
popa
inc
cmp
and
and
dec
adc
stc
scas
shlb
lret
inc
cmp
movsb
mov
add
mov
cmp
push
cltd
xlat
push
xchg
pusha
ja
mov
andb
xchg
xor
lods
test
sbb
out
xor
and
mov
inc
adc
mov
and
pop
jbe
jl
and
push
mov
shr
scas
sub
adc
leave
ja
xlat
lret
xor
mov
inc
in
and
addr16
dec
int3
add
and
sbb
sub
lds
call
sub
adc
add
loop
push
mov
cs
jno
in
dec
sub
adc
or
mov
cmc
jl
int
pop
out
mov
ret
push
xor
stos
sub
add
xchg
daa
outsb
scas
loop
jne
and
xchg
mov
mov
cmp
add
imul
dec
adc
out
and
add
std
ror
fisttpl
push
inc
adcl
shll
fdivrl
lock
push
xor
dec
cmpsl
and
or
jae
mov
add
inc
pop
pushf
sub
jp
aas
and
dec
into
decl
mov
xor
pop
and
stos
imul
and
aam
push
jmp
sbb
ficompl
jb
ds
sub
xor
dec
mov
and
mov
inc
pop
push
dec
and
je
pop
mov
jp
and
xor
add
sub
sbb
loope
jns
inc
mov
aad
inc
shlb
leave
scas
and
adc
sub
sub
xor
jp
add
and
sbbl
lea
insb
sbb
mov
adc
pop
and
dec
inc
out
insl
adc
in
adc
and
repz
jl
shrl
stos
dec
push
loope
stos
sbb
mov
push
repnz
mov
add
add
loope
stc
and
mov
sub
cmc
dec
and
sub
pop
xor
and
adc
mov
cmp
int3
shrb
pop
and
dec
fiadds
cmp
outsl
jne
and
dec
dec
xchg
pop
push
fcmovnb
into
add
xchg
cs
rorl
push
sub
sti
push
xchg
shrb
mov
imul
inc
sarb
xor
pop
dec
test
and
cmc
mov
xor
incl
popf
inc
inc
sbb
and
push
ficomps
data16
cmpsb
or
inc
fstpt
sub
xchg
clc
dec
and
adc
pop
jbe
cmp
cwtl
lret
fldt
inc
lock
mov
sub
push
or
mov
adc
sub
jb
fcompl
mov
call
mov
ret
std
or
out
fsts
push
ret
lock
lret
and
jne
mov
enter
out
ret
and
xchg
call
cld
divb
xchg
push
dec
inc
jae
dec
and
jo
sub
add
pop
jns
in
adc
stos
mov
and
leave
xor
jo
sbb
cs
repnz
movsl
or
and
sbb
loope
xor
lcall
and
add
and
adcb
cmp
test
push
lahf
enter
nop
cmp
es
mov
adcb
dec
ja
mov
pop
and
popa
scas
and
xor
cmp
adc
lock
or
fistpll
and
movsl
push
js
lods
addr16
lock
test
and
dec
ja
adc
pop
loopne
and
sti
mov
sub
add
sub
and
dec
mov
mov
aas
stc
insl
cmp
and
aaa
mov
and
and
mov
mov
and
push
shlb
inc
pop
cltd
dec
mov
pusha
dec
cli
incl
cmp
fdivl
jns
cwtl
pop
and
pop
cld
enter
and
std
aaa
pop
shl
add
fsubl
push
cmpsl
and
sub
xchg
push
and
adc
push
and
cmp
int3
push
test
out
push
mov
mov
push
sbb
fistpll
mov
and
push
dec
movsl
or
pop
negl
cmp
sub
call
icebp
and
hlt
aas
addr16
inc
add
bound
add
mov
lret
pushf
loopne
frstor
imul
aaa
ficoms
jl
cmp
add
add
mov
fisttpll
cltd
lahf
into
outsb
push
lcall
mov
fwait
xor
inc
add
inc
ljmp
ds
scas
out
leave
mov
test
or
mov
mov
std
repz
add
mov
test
cltd
out
cmp
in
xorl
ljmp
sbb
sub
lahf
lods
inc
dec
or
bound
lea
mov
dec
pop
and
cmp
into
push
mov
insb
fcomp
test
and
mov
imulb
mov
xlat
and
or
mov
pop
sub
scas
push
out
sub
lods
rcll
outsb
mov
mov
xchg
clc
push
xor
jmp
stos
fiaddl
add
mov
and
bound
mov
inc
sbb
test
sub
popf
and
je
or
sbb
cmp
sub
and
cmpsl
jp
jbe
sbb
test
pop
jmp
jno
rcll
sbb
and
sbb
cmp
test
sti
or
lcall
sbb
pop
jl
in
idivb
scas
mov
mov
adc
daa
dec
or
cmc
dec
sti
pusha
mov
and
mov
ret
leave
cmp
mov
xlat
and
icebp
and
push
cmovs
fs
sub
mov
into
les
sarl
popa
cmp
idivl
and
cmp
imul
arpl
jb
sub
sub
add
mov
outsl
jmp
mov
pusha
ret
test
mov
popf
dec
incb
adc
shlb
jno
sub
nop
pop
lods
cmp
movsl
scas
in
jg
loope
repz
pop
and
and
sub
lret
lods
cmpsl
daa
cwtl
test
ja
and
cmp
or
sti
xchg
push
lds
repnz
adc
fxch
movsl
lds
push
out
jno
popf
sub
and
sub
push
pop
mov
ret
push
stc
lods
ret
pop
mov
mov
call
and
xchg
dec
pop
cmpb
pusha
sub
es
pop
roll
xchg
cmp
hlt
and
mov
and
inc
mov
sbbl
fs
in
add
xchg
add
orb
and
jae
out
inc
leave
dec
fwait
shrl
cli
or
bound
and
add
ljmp
daa
leave
xchg
jo
xchg
cmp
mov
repz
adc
or
push
mov
pop
leave
xor
in
repz
cwtl
loop
and
or
dec
and
ret
popf
pop
and
mov
gs
scas
loop
jbe
aam
mov
in
cmp
sub
adc
cmc
in
in
lock
or
push
fs
xor
and
xchg
or
pop
cmp
xchg
int
fstps
icebp
fildll
imul
push
imul
fdivl
push
mov
mov
aad
das
popa
orb
sub
sbb
test
andl
ljmp
inc
lds
mov
mov
inc
insb
pop
ficoml
and
cmp
mov
bound
pusha
addl
rorb
pop
adc
inc
mov
sub
mov
daa
push
jns
adc
inc
scas
scas
and
enter
sub
iret
xchg
scas
rol
js
fwait
and
aaa
jmp
push
test
in
cmovb
push
jp
add
inc
popa
and
out
and
lods
cmp
inc
jb
lods
aaa
and
divb
and
dec
inc
cmp
mov
or
cmp
bound
push
icebp
and
notl
add
rclb
jp
dec
xlat
rolb
sub
mov
mov
andl
jl
mov
inc
cmp
push
insb
adc
repnz
and
and
outsb
mov
and
mov
fwait
in
add
sbb
push
add
and
cmc
mov
jbe
jecxz
xchg
add
fistpl
cli
xor
pop
and
fdivrs
and
xor
lret
lock
in
add
and
pushf
cmpsb
sbb
lahf
or
and
xchg
stos
shll
inc
cmp
jg
or
xlat
and
push
call
inc
and
jbe
sbb
sub
daa
pop
je
imul
mov
and
sbbl
and
stos
push
ficoml
sbb
and
in
inc
xor
mov
mov
test
push
and
jp
mov
mov
inc
and
shlb
and
fdiv
lods
lea
cmp
sbb
xchg
inc
icebp
cld
aad
imul
jmp
gs
cwtl
and
dec
mov
xor
jp
ds
stos
xchg
fbld
leave
roll
pop
xor
mov
push
and
xor
mov
test
cmp
les
mov
fucom
fs
mov
and
sbb
scas
lods
shrl
mov
loopne
test
add
and
sbb
mov
pop
xor
ljmp
div
mov
adc
xchg
jns
cltd
pop
addr16
mov
scas
lods
and
mov
insl
ja
and
dec
arpl
mov
and
inc
jb
addr16
int3
and
push
add
sub
outsl
sbbb
mov
shlb
and
adc
insl
fs
push
loope,pn
out
lret
movsb
and
mov
and
cmp
subl
adc
xchg
mov
pop
push
scas
and
and
push
push
cmc
pop
push
mull
xor
lods
and
scas
mov
mov
test
fisubl
test
and
pop
sub
mov
xor
js
and
inc
sub
stmxcsr
lds
dec
fldcw
jmp
loop
push
movsl
mov
jno
in
gs
xchg
insb
push
pop
mov
les
pop
pop
dec
dec
cli
inc
shrb
lods
and
shll
sbb
dec
inc
add
dec
xor
pop
nop
std
int3
dec
and
xchg
adc
xor
mov
push
hlt
scas
test
ds
and
popa
orl
xchg
and
repnz
xchg
std
scas
lods
repnz
pop
lods
or
es
jae
mov
inc
imul
pop
das
adc
sub
dec
popf
movsl
sub
insl
sbb
loopne
adc
xchg
inc
or
mov
push
and
leave
loope
and
scas
pop
mov
popf
in
cld
mov
mov
pop
lock
adc
and
and
loop
mov
lret
dec
dec
andb
pmaxsw
push
mov
jecxz
mov
fwait
int3
sahf
das
and
popa
stc
sbb
ror
inc
and
mov
cmpsl
ficompl
int
push
stc
sub
xor
adc
shll
test
dec
test
push
or
and
mov
and
lahf
mov
rorl
mov
imul
lds
scas
cs
mov
or
sahf
pop
js
sbb
and
lret
stc
aad
je
test
clc
mov
jne
rol
mov
xchg
pop
data16
sub
push
inc
jns
aaa
or
and
sub
dec
and
mov
mov
stos
xor
push
jnp
test
xchg
stos
fmull
and
add
popf
and
jb
cmp
imulb
mov
mov
repnz
sbb
leave
adc
dec
lock
pop
dec
jmp
cmp
or
cs
mov
push
aas
aaa
and
xor
sbb
and
sub
and
mov
aam
insb
mov
ret
pop
stos
sbb
adc
jg
mov
outsb
scas
add
jne
push
xchg
pop
fwait
push
pop
xor
imul
sub
test
mov
mov
std
mov
stc
fistl
sbb
cltd
dec
pop
jmp
test
les
stos
cmp
jae
jle
pop
sub
jns
push
sbb
cltd
aas
lret
fdivl
and
rcrl
sbb
ss
sub
jg
push
jno
fwait
xchg
and
adc
jae
cs
ja
popa
dec
xchg
imul
cmp
lcall
jb
push
cmp
adcl
jg
and
popa
ret
mov
sub
sub
cmc
ljmp
stos
hlt
rcll
and
push
out
movsl
mov
pop
mul
jl
cmp
sbb
inc
lods
inc
cmpsl
sub
and
mov
pop
test
mov
jno
sarl
aaa
sub
insb
scas
leave
mov
ret
dec
jmp
shll
push
and
cmpsl
scas
dec
das
mov
stos
mov
mov
adc
and
xchg
jb
in
cltd
and
mov
das
and
cmc
mov
shll
ss
cmp
stos
scas
adc
sub
mov
and
jo
cmp
add
add
je
mov
popf
and
sbb
fdivl
push
push
jge
icebp
lahf
lods
inc
jg
imul
push
and
stc
mov
outsl
decb
iret
jbe
mov
andb
add
enter
mov
inc
dec
loope
mov
stos
test
mov
cwtl
imul
and
iret
mov
xchg
jmp
mov
push
scas
in
adc
dec
sub
and
and
por
repnz
jns
jnp
xor
das
sub
or
je
js
add
inc
and
nop
call
adc
fstps
out
in
push
mov
and
adc
mov
and
stos
push
xor
cmp
sub
cli
sbb
dec
stc
or
mov
dec
scas
push
and
nop
xor
je
aaa
jne
out
inc
std
sub
and
lahf
xchg
popa
clc
daa
pop
and
xor
and
pop
cmpsl
xchg
adc
fisubrs
pop
pop
inc
or
fnstenv
mov
sahf
je
xor
jl,pt
flds
and
dec
mov
outsb
jbe
aam
arpl
and
push
push
jg
mov
loope
inc
movsb
scas
or
fld
cld
pop
and
gs
jp
and
sbb
mov
sbb
or
sub
cmp
mov
inc
pop
sar
pop
sub
sahf
test
cmp
imul
sub
cltd
lods
mov
int
shl
test
in
test
filds
and
push
sbb
mov
test
mov
out
mov
jo
push
push
sbb
mov
loopne
repnz
mov
sub
lcall
jae
dec
lds
xor
gs
inc
sub
inc
cmp
movsb
and
sbb
inc
lret
sbb
mov
sub
sbb
fidivl
imul
sub
cmc
or
xor
out
jns
jb
sub
mov
enter
sub
cmp
int
arpl
push
test
and
sub
sbb
push
int
test
or
xchg
mov
mov
addr16
push
jnp
dec
push
inc
xchg
cld
push
or
jp
insb
jb
bnd
dec
fwait
xchg
and
dec
add
pop
mov
and
bound
pushf
and
shl
mov
and
mov
jl
inc
lret
or
inc
ret
and
mov
ss
imul
jne
sbb
mov
add
and
aas
push
pusha
and
out
dec
xchg
test
repnz
pop
mov
rolb
and
xchg
sub
outsb
xchg
and
mov
jp
ret
and
popa
jecxz
push
push
lock
imul
sbb
lahf
and
push
sub
inc
mov
lcall
and
and
and
or
and
push
into
pop
leave
lea
outsb
inc
mov
jns
jg
mov
movsl
add
and
roll
or
push
and
and
mov
sbbb
lret
fcomi
jb
fisubl
xor
and
dec
inc
mov
sub
test
mov
pusha
cwtl
sub
test
movsb
mov
and
gs
sub
sbb
sarl
and
inc
out
ret
leave
pusha
mov
imul
or
fdiv
mov
mov
pop
pop
xchg
dec
and
push
push
inc
dec
test
and
cmp
lret
push
and
sbb
push
mov
loop
xor
pusha
mov
or
repz
add
and
dec
mov
cmpsl
jnp
pop
shrb
or
mov
negb
adc
sbb
or
out
shlb
popf
and
cmp
mov
and
scas
push
jb
and
call
push
bnd
loop
and
arpl
outsl
aam
pusha
jb
jle
gs
sub
xchg
scas
mov
push
fistpl
clc
jge
pop
sti
mov
test
mov
outsl
decb
and
rclb
sub
xchg
push
push
outsl
pop
shrl
add
pop
sub
lds
cmc
lods
add
aad
fxch
add
cmp
inc
es
lods
cwtl
xchg
cmp
and
cli
sbb
push
test
addl
inc
pop
or
in
iret
pop
test
les
mov
pop
cmpsb
clc
cltd
or
and
xor
jp
mov
xchg
push
test
and
enter
out
cli
push
sbb
adc
stc
out
mov
inc
cmp
nop
inc
es
imul
mov
out
mov
lcall
pop
loop
out
addl
ljmp
aaa
inc
popa
cs
fadd
or
dec
and
data16
inc
push
and
stos
adc
and
sti
fdivl
adc
insl
imul
mov
xchg
ljmp
mov
bound
push
into
pop
loope
fisubrs
mov
sarb
cld
ja
and
xabort
ljmp
out
in
pop
mov
dec
and
loop
fcoms
lret
cmp
pop
cmp
jnp
adc
stos
mov
int3
imul
sahf
cmp
in
bnd
add
sub
out
cmpb
inc
and
sti
xchg
adc
fbld
sbb
fisubs
cmpsb
out
ja
nop
in
and
test
push
sub
lcall
sbb
lret
roll
in
mov
dec
lea
sub
mov
mov
sub
and
loope
dec
in
mov
add
loopne
and
add
std
add
mov
mov
cltd
in
and
adc
sub
xor
jns
in
sub
lcall
cmpsb
cmc
rcrb
call
clc
arpl
and
or
cli
mov
aas
mov
fsts
mov
adc
jae
add
lret
mov
sub
xchg
adc
fcomps
lret
mov
push
outsl
add
pop
and
sbb
and
add
push
and
gs
mov
scas
inc
inc
es
pop
out
addr16
aam
and
stos
and
aaa
and
mov
jle
and
inc
xorl
xchg
adc
ficoms
mov
xor
and
jne
xchg
cmp
jae
sub
sub
sbb
push
cwtl
test
movsb
cs
and
mov
and
std
pop
inc
push
fldt
add
and
pop
sbb
adc
subb
and
out
lret
or
sbb
cmpsl
dec
mov
repnz
adc
sbb
xchg
pop
popf
xchg
and
into
xor
add
outsl
fdivrs
and
mov
pop
je
or
sbb
add
and
or
mov
dec
pop
xor
xlat
and
pop
jl
shlb
clc
and
icebp
jp
xor
dec
and
roll
xchg
pushf
pop
or
lea
out
roll
cmp
cltd
sbb
aaa
pop
sbbb
dec
push
xchg
mov
and
sub
inc
jle
shll
mov
loop
jl
mov
leave
shll
pop
rolb
jo,pn
xor
insb
mov
imul
lods
dec
mov
sbb
or
xlat
and
ljmp
in
and
out
mov
repz
jns
roll
inc
and
stos
jl
loopne
jle
inc
mov
jmp
repz
and
les
lea
lahf
add
fs
inc
lret
and
pop
xor
adc
and
and
sub
mov
xor
cmpl
pushf
outsl
and
adc
sbb
aam
cmpb
out
jo
jle
push
and
adc
push
jnp
test
dec
adc
and
and
and
push
adc
dec
push
mov
and
and
inc
fidivrl
cmp
movsb
clc
mov
add
mov
mov
lret
cwtl
push
add
ss
or
lea
inc
je
cli
insl
in
fsubs
clc
xor
lcall
lret
cmp
out
sbb
addr16
and
aad
xchg
loope
push
inc
and
push
jbe
nop
add
sub
lods
outsb
pop
shll
shll
scas
mov
cmp
inc
nop
test
push
into
ljmp
xchg
or
and
dec
dec
cmp
xor
jp
sbb
ljmp
sbb
jae
in
cwtl
sub
mov
jmp
inc
out
and
adc
and
fsubrl
sbb
mov
pop
sahf
mov
frstor
xor
or
jmp
add
loope
lahf
insl
and
stc
fisubl
jbe
je
lahf
and
ret
popf
xchg
cmp
rcr
add
stc
push
icebp
lret
scas
dec
add
scas
jmp
ficoml
mov
aam
sbbl
les
sub
xor
sub
jle
lea
mov
add
sub
mov
stos
and
cwtl
insl
ja,pt
fldt
cmp
test
testb
fs
push
adc
sub
add
sbb
adc
mov
in
pop
decl
and
lds
or
add
xchg
lahf
and
and
and
ret
in
test
xor
mov
inc
cmp
movl
cs
enter
repnz
shlb
dec
sub
mov
sarl
out
add
mov
aaa
pop
pop
xor
cld
and
shl
dec
sbb
arpl
clc
fldcw
and
test
stc
mov
mov
push
pop
sbb
or
out
fildll
push
mov
sti
repnz
les
dec
cld
dec
cmpsb
xchg
and
js
mov
inc
popf
add
bound
aas
repz
jbe
movsl
or
mov
roll
inc
ds
add
lods
addr16
push
jle
scas
dec
aaa
clc
and
sarl
scas
inc
pop
and
dec
ret
pop
lahf
xchg
adc
xor
fstpl
jb
and
cltd
sbb
xor
and
test
push
push
jo
mov
sub
dec
out
mov
mov
mov
cmp
std
dec
pop
adc
fneni(8087
fdivrs
inc
jecxz
and
adc
cmp
data16
out
inc
lock
xor
mov
mov
in
repz
mov
data16
or
dec
in
sub
xlat
nop
jg
call
mov
into
mov
aas
xchg
push
aam
push
mov
imul
xchg
push
lcall
fiaddl
dec
sbb
outsl
sub
andl
clc
xchg
and
fidivl
push
add
cwtl
dec
leave
pop
sbb
adc
and
cs
cmp
mov
jae
nop
adc
xorb
mov
xchg
jmp
inc
mov
pushw
fldcw
repnz
dec
inc
clc
and
leave
mov
mov
repnz
xchg
int
jae
andl
adc
addl
and
fmul
sub
scas
dec
enter
popf
imul
add
lock
ds
mov
and
das
and
lds
pop
jmp
roll
out
add
les
mov
fsubs
loopne
popf
xor
adc
sub
push
ss
sbb
and
sbb
fisttpl
sbb
sarb
fidivrs
cmp
cs
dec
outsl
pusha
and
mov
or
nop
lods
add
mov
bound
sti
andb
or
mov
outsl
ss
shr
int3
rclb
dec
sub
add
daa
pop
pop
shr
aaa
and
xor
enter
cli
cmp
jmp
adc
movsb
jnp
call
das
cli
mov
and
js
scas
xchg
inc
push
subl
push
and
fldcw
int
jge
int3
icebp
push
mov
and
js
dec
mov
xchg
sub
push
mov
loope
mov
test
out
or
cld
xchg
cmp
mov
dec
xchg
mov
repz
jo
adc
jns
hlt
sbb
enter
xchg
and
xor
and
fldlg2
pop
xchg
pop
aad
repnz
stc
and
sahf
scas
or
stos
xorb
dec
inc
mov
aas
adc
and
add
insl
cld
pop
lods
jo
nop
arpl
mov
push
and
je
loope
into
push
add
pop
sbb
fisttps
lds
add
iret
or
in
je,pn
pop
pop
dec
movl
loop
clc
xchg
lret
outsl
or
and
scas
in
js
sbb
cmp
shrl
and
leave
iret
and
mov
xchg
xor
sub
pop
int
sub
sub
and
mov
rorl
or
lret
ja
aad
sub
loop
or
and
sub
test
shl
mov
mov
repnz
jmp
filds
pop
sub
inc
dec
push
mov
sub
mov
pop
fidivs
loopne
push
outsl
and
int3
xchg
lret
scas
jnp
aam
and
add
clc
push
sarb
dec
or
pusha
mov
int3
mov
xor
scas
jns
and
enter
inc
sub
xchg
shrb
loopne
mov
arpl
das
jmp
mov
negl
orl
push
xchg
or
adc
fs
cs
subb
cmp
repnz
sub
out
xchg
ret
push
ljmp
rcll
cmp
pop
add
mov
mov
xchg
push
push
in
mov
popa
and
pushf
adc
addr16
inc
and
and
xchg
aaa
mov
sbb
jl
and
inc
test
pop
lea
and
fnstsw
or
dec
mov
dec
lea
mov
jl
icebp
cs
inc
outsb
imul
ss
pop
and
aas
mov
fwait
jnp
std
cs
fstpt
das
dec
and
push
ja
dec
mov
push
iret
jecxz
test
xor
xor
and
and
lds
cmc
mov
shll
or
jmp
sub
ss
outsb
lock
dec
mov
into
sub
test
je
andl
mov
imul
fnsave
lcall
adc
push
jg
pop
sbb
push
enter
dec
mov
sub
std
clc
mov
push
or
jle
dec
shrd
imul
push
and
dec
gs
adc
in
adc
cmp
imul
xor
xchg
mov
lods
insb
sub
add
adc
filds
dec
data16
leave
es
and
jle
mov
and
dec
inc
dec
dec
jge
mov
cs
movsl
mov
repz
and
push
jbe
xor
ljmp
dec
and
push
jne
repz
mov
daa
inc
sub
sub
stos
leave
push
and
pop
or
or
jmp
or
add
cli
pop
push
add
push
shlb
cmp
mov
dec
jge
xchg
ljmp
mov
add
push
add
insb
lcall
in
and
mov
mov
xor
cli
mov
lock
and
sti
lahf
sub
ret
fstl
and
dec
shlb
mov
xchg
js
jns
pop
push
loope
daa
push
icebp
adc
in
cs
fcomi
or
mul
add
stc
mov
push
adc
push
imul
fistpll
pop
data16
imul
cmpb
fnstcw
inc
jecxz
movsb
iret
lods
lret
sbb
xor
lcall
imul
xorl
int3
inc
cltd
and
or
jge
push
ror
adc
fwait
cli
mov
repz
cld
fcomip
stc
xchg
lahf
test
dec
dec
xchg
mov
nop
sub
and
pop
out
test
or
jb
arpl
and
rcrl
test
and
adc
cmp
imul
js
cmp
or
adc
cmpsl
inc
xor
and
xchg
add
and
mov
mov
push
push
jo
cmpsl
push
jp
ror
ret
xchg
mov
rclb
shll
sbb
pop
xchg
and
dec
jo
and
cmp
icebp
pop
ficomps
loope
subb
sti
es
sbb
sub
gs
mov
mov
and
sarl
pusha
sbb
popa
popf
and
sub
pop
adc
je,pn
inc
mov
jmp
mov
and
les
in
daa
inc
ja
push
mov
and
test
cs
orb
push
dec
sbb
cli
and
or
pop
mov
xor
jmp
fcomip
xor
xchg
jns
inc
dec
popl
imul
and
nop
das
in
cmp
lret
mov
or
mov
bnd
shlb
jg
out
cltd
adc
ja
dec
lods
jnp
sub
fnsave
sbb
pop
jns
fadds
jl
cltd
or
and
mov
sub
and
les
and
dec
jbe
or
mov
test
ret
push
push
and
fdiv
adc
mov
lods
jmp
clc
addr16
popa
adc
test
xchg
fisttps
and
cmp
and
call
arpl
and
cmpl
xor
and
pop
addr16
pop
repz
push
inc
aaa
dec
or
icebp
stc
inc
and
ret
xchg
sub
adc
sarl
add
imul
mov
jne
push
cs
dec
push
add
jge
mov
ficompl
outsl
test
sub
mov
push
in
std
and
cmp
fcomi
or
dec
dec
adc
xchg
movsb
and
cmp
xor
lock
or
icebp
cs
iret
and
xor
inc
cmp
lahf
and
in
jl
jae
sbb
or
and
into
xor
and
fdivr
andl
mov
cmp
or
fs
mov
or
addr16
mov
sbb
in
repnz
mov
gs
and
cmpsl
lea
fisubl
test
inc
dec
loopne
add
pop
sub
out
imul
sbb
and
or
andb
mov
aad
add
sbb
imul
pop
xor
out
mov
les
push
leave
lds
daa
shll
mov
mov
pop
imul
cmp
cltd
jne
and
test
cmp
push
or
xchg
xchg
and
in
xorl
adc
repnz
repz
and
loop
inc
out
dec
cs
add
pop
pop
and
popl
xchg
mulb
lock
add
popf
out
lea
pop
mov
sub
fs
or
xor
and
test
and
insb
imul
mov
and
fmulp
mov
and
mov
jb
in
sub
addb
jns
cli
push
lret
cli
shrb
push
xchg
push
sti
and
into
repz
stos
cmpsb
ja
test
and
and
jge
dec
push
inc
pop
xchg
and
xchg
lock
and
fucomip
inc
sti
in
cmc
and
and
xor
fchs
fisttpll
stos
push
sbb
cwtl
jb
stos
jnp
inc
pop
das
and
popa
or
outsb
dec
fiadds
out
adc
and
rclb
mov
mov
sub
fsubs
lret
ret
mov
mov
and
push
inc
int
push
adc
mov
mov
add
mov
scas
lods
and
stos
mov
test
stc
and
rorl
and
jb
outsb
iret
jnp
push
and
and
out
sbb
and
xchg
sarl
stc
movsl
and
pop
or
jl
and
mov
imul
shll
and
shlb
das
inc
mov
push
adc
and
fsubl
xlat
in
ja
pop
test
out
jo
cs
dec
outsl
loop
xchg
push
fildll
stos
fsub
sbb
mov
enter
add
xchg
cld
and
mov
or
mov
sbb
cli
inc
loop
pop
adc
cmp
mov
out
mov
adc
mov
scas
jl
shrl
enter
sub
pop
and
sbb
fildll
push
lahf
mov
and
mov
movsb
pop
jns
push
ja
xchg
push
sbbl
fs
mov
enter
push
call
mov
mov
adc
mov
inc
xchg
pop
adc
xchg
stc
adc
inc
and
push
pop
in
and
or
lds
cmp
in
sub
jecxz
adc
push
rorb
sti
and
pusha
addl
xor
xor
jns
bound
push
inc
sub
enter
out
sub
fcomps
mov
arpl
dec
dec
mov
test
fwait
lahf
psubsb
sbbl
out
sbb
mov
mov
xor
push
aaa
dec
loopne
sbb
pop
in
adc
push
mov
dec
icebp
bound
jns
add
scas
jbe
and
xlat
into
test
and
test
sub
aaa
add
jae
shr
push
and
or
dec
cmp
mov
into
out
mov
cltd
and
inc
mov
fwait
adc
pop
add
inc
mov
sahf
push
jae
test
and
mov
cmp
cmp
dec
cmpsb
popf
push
dec
dec
and
xchg
xorps
cmp
sub
mov
lock
sarb
adc
xor
ret
xchg
lods
lahf
ljmp
cmp
std
scas
push
lods
mov
jg
and
push
hlt
das
or
adc
call
mov
pop
ret
je
inc
jns
pop
push
lcall
ret
enter
sbb
shr
in
pop
aad
mov
xor
xchg
and
pop
xorl
dec
pop
xor
stos
movsb
xchg
fyl2xp1
inc
sub
lods
and
test
push
notl
int
push
sub
mov
jns
xchg
aad
imul
gs
cmpsb
mov
push
or
test
lahf
or
sub
leave
mov
std
pop
jae
sbb
mov
mov
enter
fucomp
mov
adc
or
sbb
cs
sbb
cltd
lods
cmp
dec
mov
mov
mov
and
pusha
addr16
shll
ret
pop
lcall
and
cs
jae
push
cmp
and
jne
bound
aam
sub
sbb
mov
test
cwtl
jge
jmp
repnz
int3
ret
and
adc
popa
cmpsl
aad
sbb
fbstp
jno
mov
sbbb
sub
push
pop
ds
pop
imull
jle
repnz
mov
mov
sub
incb
je
dec
dec
or
mov
jmp
daa
mov
pushf
dec
dec
cmc
push
sub
xor
lret
add
lods
xchg
cwtl
test
xchg
jnp
sub
das
and
js
and
cli
iret
xchg
lea
ret
fnstenv
sahf
arpl
cmpsb
ljmp
sub
ret
inc
shrl
push
cmp
lret
push
push
and
dec
adc
pushf
jl
mov
leave
cmp
cmpsl
xchg
popa
mov
and
xchg
dec
sahf
ljmp
add
es
scas
addr16
push
jg
insl
pop
push
repnz
jecxz
sub
loop
ljmp
mov
pop
and
scas
or
in
mov
or
and
mov
fmull
and
push
shrl
insl
cwtd
bound
jo
repz
dec
xchg
ret
or
std
inc
sbb
and
add
add
bound
push
and
cmp
sbb
and
movsb
dec
mov
out
hlt
and
addr16
je
push
cmp
or
scas
sbbl
sub
loop
pop
jno
or
addb
or
adc
ja
imul
dec
push
ret
pop
push
test
ret
or
fcompl
sub
fcmove
xor
ja
inc
sub
push
mov
sub
movsl
lret
add
xor
inc
jno
jno
xor
and
pop
pop
mov
or
in
dec
lock
out
cmp
data16
mov
mov
jae
cs
insl
pusha
and
test
jns
cli
repnz
jnp
mov
and
push
mov
and
sbbb
sbb
dec
xor
scas
xlat
push
mov
movsl
push
out
cld
and
lods
jg
aas
mov
cli
ss
dec
push
les
ljmp
pop
push
mov
cld
dec
call
cmp
add
aas
pop
jecxz,pn
adc
jnp
mov
sub
enter
repz
aaa
mov
inc
jge
adc
jnp
adc
frstor
pop
lods
jmp
repnz
add
test
jne
cs
mov
fwait
ret
mov
add
push
and
mov
sub
cwtl
out
dec
into
test
push
and
mov
mov
mov
dec
and
inc
push
pop
mov
popa
ja
jecxz
mov
add
lea
xor
inc
out
xor
rol
jns
dec
mov
mov
cmp
mov
pop
dec
and
and
mov
mov
mov
push
push
and
dec
mov
xor
and
mov
and
inc
mov
in
movsl
frstor
mov
icebp
hlt
test
fisubrl
or
cmc
pop
jmp
jle
and
and
test
sub
int3
imul
xlat
and
mov
sub
sub
sub
sub
ret
jp
sti
pop
inc
sub
mov
adc
pusha
jmp
jbe
cmp
dec
and
or
arpl
aam
dec
xchg
cmp
push
orl
rcr
adc
cli
sbb
aas
add
jecxz
roll
xor
repz
lahf
pop
sarl
in
dec
xchg
and
pop
jb
mov
jne
push
and
clc
cmp
js
mov
mov
popf
stos
and
fs
jle
sub
ljmp
jge
nop
jae
and
leave
ja
mov
dec
stos
jp
lahf
fst
cmpsl
jecxz
and
mov
pop
push
mov
adc
jge
push
and
jns
sub
xchg
insl
sti
in
pusha
test
mov
std
inc
mov
iret
inc
jae
push
mov
sub
push
xchg
pop
daa
mov
and
arpl
pop
sub
xor
lea
loop
sub
bound
in
cwtl
push
jnp
sub
inc
jl
or
or
js
push
gs
mov
mov
lahf
adc
insb
sub
shlb
fcom
and
pop
sub
jb
lcall
push
inc
scas
push
ret
test
jbe
inc
ljmp
add
and
test
dec
je
inc
nop
and
cmpsb
sub
out
js
and
xor
push
pusha
jl
mov
push
sbb
aad
cmp
call
stos
fstl
and
mov
pop
mov
aad
pushf
adc
ja
fsub
dec
jmp
and
inc
insl
pop
lret
mov
jno
sub
xchg
pop
ljmp
sbb
xor
and
scas
push
out
xorb
jo,pn
in
sahf
push
dec
and
xchg
push
cmp
mov
loop
cmp
lret
or
movsl
cmp
stos
push
enter
and
mov
roll
dec
sahf
cli
insb
sub
popa
sub
push
sub
xor
mov
push
andl
mov
ljmp
movsb
repz
cltd
ja,pn
mov
mov
loopne
lods
test
movsb
fs
mov
xor
push
data16
fistps
mov
mov
add
incl
jge
pop
inc
out
adc
xchg
dec
xor
mov
sub
in
mov
push
pop
mov
mov
cmp
and
add
sbb
mov
and
pusha
popf
or
sub
xor
sub
xchg
addb
xchg
jnp
sub
insl
sub
js
arpl
ljmp
mov
test
sub
cmpsb
push
cmc
fwait
hlt
adc
sbb
sub
jl
inc
lods
push
imul
out
and
les
cs
or
repnz
cmp
std
push
and
lock
aas
jo
inc
dec
add
sub
sub
movsb
lods
pushf
lret
addr16
test
and
pop
insl
aaa
and
outsl
into
inc
dec
lret
ret
xchg
hlt
or
dec
fstpl
fistpl
and
jne
sub
mov
fwait
inc
cs
add
push
xor
es
out
cli
xor
mov
enter
ret
fistpl
rorl
clc
iret
xchg
pushf
out
and
add
scas
cmp
and
popf
mov
sub
xor
loope
fucom
and
pop
cmp
push
xchg
push
lahf
out
push
pop
fs
paddsw
jg
dec
push
out
pop
pop
std
into
and
popw
adc
fsubs
loop
add
mov
mov
jg
mov
xchg
or
dec
mov
jle
jle
stc
sbb
cld
outsb
add
mov
scas
fbstp
mov
mov
scas
xchg
fisubrl
and
and
sbb
and
loopne
and
lock
jb
daa
ja
cmp
sbb
mov
arpl
repnz
adc
cli
sub
sub
loopne
push
xor
jp
stc
cmovb
insl
xor
pop
mov
pop
shl
outsl
test
dec
insb
mov
xor
mov
cmp
jno
jg
push
in
inc
sbb
jl
in
or
sbb
inc
mov
or
add
js
dec
jno
jae
stos
in
and
pop
scas
and
lods
jne
jp
and
and
lmsw
inc
xor
popf
mov
pusha
aam
lret
push
inc
stc
enter
and
sub
adc
and
mov
and
sbb
xchg
jnp
and
aaa
mov
cmpsl
and
jge
cmp
popf
and
mov
scas
jl
dec
add
ds
pop
jmp
repz
inc
mov
and
push
imul
dec
pop
mov
xchg
push
inc
arpl
cld
scas
frstor
mov
les
in
int
shl
add
repnz
sub
mov
and
mov
and
jnp
movsb
add
mov
dec
sahf
or
xchg
mov
inc
or
lcall
mov
adc
cmpsb
es
aas
jno
push
mov
and
je
fbld
push
and
mov
cli
xchg
inc
inc
lods
pop
cmpsl
xchg
pop
and
out
stc
je
xlat
xchg
and
pause
jbe
sbb
push
jo
addr16
and
fwait
rcl
hlt
xor
and
mov
dec
loopne
sub
or
xchg
push
jae
shlb
fidivs
shlb
jle
pop
in
jae
jbe
inc
sbb
jmp
je
mov
adc
cs
push
andb
icebp
insb
insl
mov
jmp
fnstcw
or
fisubs
or
out
push
mov
outsl
dec
scas
loope
pop
int
scas
jno
gs
test
cld
cwtl
gs
mov
lds
lods
repnz
mov
pop
jl
les
cmpsb
lret
pop
in
mov
sbb
push
inc
outsb
outsl
enter
rcrl
fisubl
stos
sub
mov
out
jle
fnsave
or
sbb
and
dec
movsb
mov
insb
out
ja
sub
push
sub
sub
and
dec
sbb
and
mov
and
jecxz
mov
icebp
jle
inc
fwait
add
jnp
ljmp
cmp
lahf
mov
push
cmp
mov
xchg
orb
and
and
stos
and
adc
fs
pop
jns
shrb
inc
mov
outsl
xchg
sub
bound
and
fcmovbe
mov
or
inc
jbe
push
pushf
out
and
pmullw
sbb
adc
add
dec
push
and
js
and
cmp
les
lods
xrelease
jmp
mov
xchg
fldt
or
sub
es
jnp
mov
inc
enter
loopne
pushf
sub
addr16
sub
and
mov
jl
repnz
dec
iret
sub
ret
ja
mov
sub
or
mov
pop
lods
and
int
mov
fdivr
out
add
out
push
movsb
mov
pusha
and
sub
in
ret
in
sub
jo
mov
pop
pop
mov
jno
push
jecxz
sub
imul
pop
ss
icebp
shrl
cwtl
lahf
adc
xor
cs
cltd
stos
ss
jecxz
jg
insb
pop
pop
lret
into
lahf
inc
xchg
adc
inc
add
mov
call
adc
xchg
mov
mov
stc
in
or
stos
arpl
sbb
lret
mov
mov
push
push
clc
add
inc
inc
cli
cli
int3
xchg
dec
jg,pn
stos
dec
and
xorb
push
out
call
lds
sub
sbb
pop
push
stos
mov
cli
and
xchg
mov
pop
gs
and
xor
and
roll
sahf
add
sub
mov
and
mov
pushf
enter
bound
jns
pop
dec
subl
push
inc
jmp
in
push
jbe
and
pop
mov
mov
int3
rorl
outsb
dec
out
test
stos
and
sub
add
dec
mov
xchg
mulb
test
dec
cmp
out
and
push
lea
inc
xchg
and
mov
and
inc
hlt
sub
mov
xchg
inc
cltd
xchg
and
push
mov
outsl
lea
scas
and
arpl
mov
cmpb
pushf
push
data16
scas
sti
lret
and
hlt
mov
xchg
fcmovnb
fsubrp
cli
dec
xor
jge
rcll
push
sbb
dec
daa
mov
sub
and
sub
sbb
adc
add
nop
out
jmp
out
mov
cwtl
aam
and
je
push
das
xchg
mov
sbb
and
add
iret
cwtl
jle
and
jae
push
or
and
sub
test
inc
mov
inc
xchg
dec
push
ret
xchg
and
xchg
fsqrt
and
cltd
adc
stc
das
bound
cmp
nop
mov
aaa
ret
adc
xor
incl
hlt
imulb
and
ds
orl
mov
fcoml
out
insl
lods
dec
repnz
popa
ret
or
imul
inc
xchg
das
pop
ret
dec
adc
push
fstp
mov
sub
mov
scas
jge
jo
out
adc
xchg
add
fbstp
sbb
loope
test
scas
insb
loopne
je
and
mov
add
and
sbb
pop
repz
or
loop
pop
jnp
mov
sbb
out
push
fxtract
out
mov
and
shlb
sahf
jns
sub
popa
add
inc
sub
dec
enter
and
ret
and
in
mov
and
data16
mov
pop
push
ja
and
mov
sbb
test
cmpsb
scas
or
xor
popf
ficomps
xor
cmp
loopne
bound
mov
mov
call
mov
xchg
arpl
jl
fsubl
pop
pop
dec
inc
jb
dec
lods
add
in
lret
cmp
lret
and
or
and
fwait
cltd
sub
dec
mulb
js
sub
lea
inc
jno
sbb
enter
sub
dec
frstor
ss
xlat
data16
and
push
adc
and
jo
dec
inc
and
fstl
mov
dec
popf
pop
lods
sub
lea
repnz
push
mov
dec
inc
jle
xchg
jno
mov
pop
dec
cmp
pop
sub
inc
sub
xchg
aas
add
push
add
and
rcl
pushf
xchg
lret
addr16
popf
mov
and
push
aaa
sub
jle
mov
ret
loop
add
adc
lods
out
and
jns
pushf
sbb
inc
popa
mov
push
and
gs
fisubl
imul
and
fstl
out
sbb
and
lahf
test
mov
fldt
jnp
in
cli
dec
xchg
and
pop
aam
mov
pushf
jecxz
movb
aam
xor
out
and
add
in
lods
mov
pushw
sbb
cs
scas
sbb
call
mov
xor
pusha
sub
jge
and
stc
rcll
mov
loopne
imul
xchg
jecxz
cmp
enter
shll
adcl
sub
lea
sahf
sub
adc
xor
jo
jle
cmp
stos
xchg
xchg
cvtps2pd
and
add
push
cmp
xchg
push
adc
aaa
cs
sub
and
loopne
sub
mov
sub
inc
and
adc
push
pop
frstor
pop
sbb
adc
mov
test
dec
xor
fwait
lods
mov
leave
jae
dec
or
and
repnz
pop
mov
scas
push
cmp
push
mov
xchg
rep
pop
xchg
roll
lcall
pop
mov
mov
inc
dec
xchg
shr
aam
negb
jg
cmp
pop
add
movsl
sbb
add
pop
popf
and
xchg
inc
fs
lcall
les
jge
lea
lret
pop
push
and
fwait
in
cmp
sbb
aad
jb
imul
aaa
add
adcl
sti
pop
push
push
mov
and
xchg
or
and
jp
shlb
andl
mov
xchg
cmp
push
loope
orl
aas
push
xlat
mov
xor
lods
fiadds
and
mov
jmp
or
popa
jnp
dec
jb
das
int3
test
and
rolb
add
adc
je
cli
adc
fsts
outsl
and
push
pop
or
cmp
es
pop
xchg
or
push
test
mov
and
imul
inc
xchg
lods
sub
shlb
stc
sbb
fmuls
or
push
sbb
mov
inc
and
out
jmp
leave
hlt
mov
in
les
jb
xlat
pop
out
pop
cmp
fcomi
cmp
xchg
repz
sub
inc
jmp
jae
cmp
jmp
pop
adc
pop
popa
fsubr
sub
and
insl
lds
xchg
sbb
testl
or
aad
sbb
add
stos
clc
scas
xchg
in
xor
dec
cld
outsl
inc
lcall
fcoms
mov
std
call
loop
sahf
and
lret
rol
xchg
xor
repnz
push
and
les
andl
sahf
xchg
lods
cltd
popa
add
and
andb
xor
hlt
fnstcw
push
pop
int
cmpsl
cmp
aas
fildll
pusha
mov
and
ja
ret
inc
int3
jg
mov
decl
add
sbb
loopne
and
andb
es
decl
or
cs
mov
pop
in
and
in
out
nop
push
std
lret
test
jge
adc
mov
fadds
shr
insb
and
cltd
fwait
popf
pusha
in
push
cmp
hlt
push
inc
jns
mov
jo
es
enter
sub
mov
shlb
jp
xor
and
fdivs
push
mov
mov
lcall
adc
arpl
out
stos
xor
shrb
int
mov
jae
push
inc
les
and
push
xchg
icebp
push
pop
cld
and
sbb
cmpsl
and
push
sub
aas
cmp
push
sbb
or
jp
gs
xchg
mov
addr16
pop
cmc
inc
test
xor
ja
push
mov
push
ret
add
inc
adc
clc
inc
frstor
shrb
or
andl
stc
leave
mov
fwait
in
push
rolb
push
push
and
push
jbe
and
pop
xchg
mov
mov
rcr
and
push
dec
lcall
repnz
dec
xchg
xchg
cmp
sbb
and
cmp
movsl
xor
jae
and
jo
cmp
or
lahf
out
lods
sub
pop
scas
js
jo
cwtl
ss
mov
aaa
cmpb
insb
es
jge
scas
fcoms
add
insl
mov
in
leave
data16
lods
sub
mov
sbb
push
addr16
outsl
push
aas
sbb
fwait
pushf
xchg
mov
mov
aam
clc
das
sub
fidivl
cmp
nop
dec
sub
pop
inc
and
and
mov
jmp
dec
xchg
pop
adc
rcrb
xchg
fs
and
and
iret
xor
adc
cs
leave
icebp
sub
pop
and
lods
shr
lret
cli
addb
dec
hlt
jnp
and
push
in
addl
lcall
sbb
movsl
pop
mov
mov
fimuls
and
push
mov
dec
and
xchg
stos
hlt
orl
jmp
imulb
into
sub
popa
push
testl
lea
shrd
jne
jg
jnp
out
sub
shlb
addr16
clc
jbe
stc
and
lahf
inc
pop
ss
das
push
aam
and
inc
iret
fidivrs
lea
outsl
cmpsb
in
jb
push
and
jbe
and
add
cltd
fists
into
push
mov
pop
and
test
mov
lock
in
xor
dec
inc
or
and
movsl
pop
and
andl
jne
sahf
cmc
mov
loop
xchg
or
ficompl
and
jecxz
cwtl
jnp
dec
out
cs
mov
and
fisubs
cmp
xchg
out
into
shrl
scas
aam
push
and
jae
cmpsb
or
and
push
popf
outsl
jno
jne
das
mov
in
push
ja
cs
nop
push
int
movlps
es
cli
sti
xchg
inc
pop
mov
xchg
clc
stc
cmp
jl
cli
dec
rol
and
inc
cmpsb
push
mov
push
add
fiadds
fstl
pop
and
fiaddl
pop
jo
xchg
pushf
dec
push
cmp
cmp
push
add
or
movsl
jbe
inc
in
bnd
and
adc
fisubrl
je
andb
lea
or
pop
stc
lods
mov
inc
stos
sbb
or
orps
push
sbb
test
addr16
push
cld
inc
jb
sbb
add
mov
cmp
dec
mov
mov
mov
and
lret
test
insl
mov
push
pushl
and
and
lock
push
lcall
sub
fistl
adc
inc
jo
sub
and
xor
shlb
mov
sbb
xor
and
ja
frstor
test
and
push
lds
xchg
sbb
adcl
jg
clc
push
scas
ffree
push
sub
inc
lea
cmp
pop
adc
daa
and
pop
cli
mov
sbb
imul
pop
xchg
adc
popa
and
cltd
ds
addr16
stc
mov
imull
mov
and
inc
inc
mov
outsl
ss
sub
mov
sbb
mov
push
jbe
push
mov
test
xor
mov
aam
xchg
adc
mov
lods
xor
and
addb
and
cmpsl
int
nop
pop
stc
xchg
and
cltd
test
cmp
inc
and
call
aad
push
and
rorl
mov
int3
and
fiadds
and
lret
jl
jecxz
lods
inc
rorb
in
fdivp
fnstsw
or
outsb
mov
sti
mov
jbe
sub
add
inc
and
loop
scas
push
or
jle
jge
lock
jno
dec
mov
data16
outsl
mov
add
dec
js
pop
xchg
cmp
mov
pop
out
mov
inc
jecxz
jl
lock
jnp
shll
adc
and
clc
int3
add
jne
and
lahf
inc
je
data16
and
mov
cmpsl
and
pop
and
push
and
adc
xchg
sub
mov
sbb
and
enter
push
iret
sub
or
mov
pop
xor
xchg
mov
mov
mov
adc
clc
leave
cmpsl
and
and
pop
dec
dec
xlat
stos
and
inc
mov
or
push
fidivl
cmp
sbb
and
and
out
loopne
leave
sbb
in
inc
lret
sti
shll
ja
push
test
xor
sbb
insl
xchg
test
inc
cltd
shlb
insb
sbb
testb
fisubrl
dec
dec
and
inc
ds
push
mov
pop
sbb
mov
mov
mov
pop
and
xchg
cmpsb
mov
in
rcll
inc
bound
or
jo
xor
and
daa
jmp
imul
adc
imul
ljmp
ret
aam
mull
popf
scas
add
lahf
fs
cs
mov
bnd
std
aad
dec
cwtl
and
push
inc
jmp
aam
cmpsl
add
das
jb
hlt
in
popf
dec
and
enter
lods
andb
push
movaps
pop
jnp
sub
sti
fistpll
push
jmp
or
leave
dec
and
sbb
out
sub
add
int3
jne
and
xchg
jmp
and
icebp
mov
jge
enter
and
pop
xchg
push
pop
ret
or
xchg
and
js
lcall
lcall
jge
movsl
loope
xchg
cmpsb
push
pop
cs
xchg
jns
jno
dec
and
xchg
and
push
pop
jl
test
cli
outsb
sbb
xor
mov
sub
sub
and
iret
xor
aam
nop
and
rcll
mov
call
hlt
sub
pop
sarb
or
mul
mov
ljmp
int
bound
xor
jg
and
jae
out
and
inc
jle
lahf
ret
insb
test
fdivr
dec
sub
insl
adc
jo
mov
mov
xchg
and
cwtl
xchg
lret
push
xchg
pusha
dec
sbbb
push
es
fcmovbe
jnp
mov
out
sub
jge
rol
and
test
xchg
repnz
sub
mov
xchg
cmp
int3
loop
jp
lret
cmpsl
and
les
rolb
cmpsb
cmp
adc
shl
lock
sahf
movsb
rcrb
push
xor
and
xchg
inc
dec
jle
mov
sbb
repnz
subb
dec
or
movsb
and
sub
and
notl
jg
flds
or
leave
pop
push
xchg
sbb
sbb
fwait
loopne
cwtl
or
mov
scas
xlat
jmp
sbb
mov
ljmp
inc
xchg
in
gs
mov
sbbb
ss
jg
and
dec
add
mov
xor
and
jp
and
mov
sub
sbb
xor
es
lods
cwtl
lods
fnstsw
sub
cmp
rol
fbld
sbb
add
arpl
mov
aaa
mov
test
add
and
push
adc
mov
and
xor
and
repnz
cmc
xor
xchg
sbb
popl
cmp
mov
cltd
sbb
jmp
adc
mov
test
addr16
loop
push
aaa
xorb
jl
std
add
outsb
pusha
xor
ja
imul
fstl
pop
je
outsb
out
outsl
jne
sub
mov
std
fnstsw
fwait
xor
and
push
int3
pop
sub
out
int
test
jne
sbb
inc
sbb
or
lds
cmp
xchg
xchg
or
and
sbb
fsub
jne
mov
mov
and
xor
subb
mov
and
mov
mov
mov
dec
cs
add
jne
sub
shr
pop
mov
jge
lret
adc
rolb
xchg
mulb
js
adc
ret
cli
and
mov
xchg
jp
lret
sbb
int
iret
in
jno
mov
and
sbb
add
or
and
cmp
inc
imull
imul
xchg
sbb
fldl
aad
pop
in
mov
and
stos
add
sub
mov
pusha
jp
mov
in
xchg
leave
das
push
inc
pop
and
in
sar
ficomps
sub
adc
cmp
dec
pushf
mov
push
mov
inc
push
sbb
mov
jecxz
fsubrl
fbstp
repz
insl
ror
xor
dec
sbb
stos
inc
inc
and
pop
sti
xchg
xor
imul
shl
loope
and
add
and
ret
aam
xchg
sbb
mov
or
repnz
cmpl
fnsave
es
push
xchg
lods
dec
fimuls
pop
ljmp
jb
jp
mov
sbbb
add
and
inc
imul
fwait
test
dec
aad
repnz
jmp
lahf
and
xchg
hlt
jb
lock
and
sbb
sub
dec
lods
mov
cli
dec
add
adc
jmp
shrb
mov
stos
jnp
push
mov
das
dec
dec
int
outsl
pop
sahf
js
scas
lret
xor
jle
iret
outsl
loop
repnz
fnstcw
cmpsb
sbb
inc
push
ret
popa
cmp
mov
mov
xchg
inc
insb
push
fimull
mov
and
lods
adc
and
stc
ret
xor
ja
dec
fs
and
mov
lods
and
arpl
push
aad
xor
or
fs
dec
sub
xor
mov
sub
and
or
add
jae
and
ret
sbb
imul
movsl
cltd
inc
adc
sub
fstpt
xchg
lods
push
mov
sbb
loope
push
jbe
cmpps
mov
lahf
loopne
adc
repnz
adc
push
dec
dec
loope
ljmp
popa
and
lods
gs
sahf
or
lret
dec
and
push
xor
int3
and
mov
and
inc
sub
xor
jle
orb
pop
sub
push
enter
xchg
cld
fbld
xchg
scas
adc
inc
xor
mov
sbb
cmpsb
out
js
out
cmc
sbb
dec
ss
mov
dec
rolb
lds
dec
inc
fisubs
cmpsl
into
xchg
aas
popl
out
and
and
hlt
mov
imul
lret
ljmp
das
in
mov
lock
inc
cltd
ret
rclb
pusha
outsb
push
sub
call
scas
or
and
jno
enter
jbe
stc
and
jge
cld
mov
arpl
mov
jbe
out
mov
test
mov
mov
or
push
cmpsl
xchg
add
dec
and
dec
out
ds
lods
pop
and
mov
mov
repnz
and
out
jp
cmpsl
dec
cmp
cmp
xchg
push
in
push
pop
leave
mov
jmp
call
leave
in
and
loopne
mov
shr
lcall
or
fwait
and
cmp
inc
aaa
pop
fimull
sub
cmp
push
ret
mov
xchg
mov
outsb
fdivrs
stos
mov
mov
add
and
js
push
mov
inc
insl
xchg
test
cltd
pop
mov
rcrl
std
jge
dec
fcmovnb
andb
cmpl
xchg
dec
subl
mov
leave
adc
imul
fldl
or
les
lahf
pop
insl
cmp
inc
lea
cs
xor
or
jg
jae
xchg
pop
cs
into
aam
sbb
sbb
add
xchg
ficoml
imul
das
xor
mov
lcall
sbb
or
in
test
mov
mov
and
lahf
push
sbb
pop
je
add
sahf
stos
cli
nop
fstps
lcall
out
dec
out
js
stos
lock
sbb
outsb
xchg
xorb
cli
aaa
xchg
and
mov
xchg
pop
out
je
aas
jp
cmc
and
inc
popf
call
and
shrl
mov
or
push
mov
mov
and
shrl
pop
cmpsb
mov
in
test
and
inc
add
sbb
pop
das
dec
popa
push
pop
stos
cli
pushf
mov
mov
xchg
jmp
mov
cs
push
add
and
and
pop
popf
and
sub
icebp
and
fwait
jge
mov
push
leave
int3
fs
lret
loope
movsb
inc
xchg
outsl
call
sahf
and
mov
and
add
lea
ds
xor
popa
sti
in
imull
cmpsl
test
mov
rclb
push
repnz
dec
cmp
and
daa
loope
and
pop
stc
cmc
fcmovnbe
and
add
call
mov
ljmp
push
test
outsl
jno
adc
iret
shll
push
leave
adc
jne
call
push
test
add
loop
mov
dec
dec
das
adc
mov
xchg
and
sub
out
cli
int3
in
sub
push
test
jecxz
ficompl
sub
loope
and
pushf
xchg
out
mov
hlt
scas
std
inc
and
ljmp
cli
sbb
lock
imul
xlat
xor
and
and
push
jae
push
push
inc
dec
and
push
ret
mov
in
outsl
mov
sub
movsl
xchg
inc
movsb
aam
and
jo
cs
xchg
wbinvd
jmp
das
lods
sbb
and
mov
and
ret
cld
add
push
xchg
sub
dec
and
sarb
leave
lret
je
in
in
mov
push
pop
jl
sbb
movsl
push
mov
dec
mov
add
dec
jno
and
pusha
cmp
fs
sub
and
or
inc
fcoms
sub
int
test
sub
or
cmp
cltd
and
popa
scas
and
jno
mov
in
jmp
mov
fldlg2
jl
pusha
mov
push
loopne
xchg
mov
mov
fisttpll
out
jb
and
and
out
inc
mov
sub
pop
inc
mov
imul
shlb
xchg
and
adc
and
or
push
and
shlb
sub
and
mov
and
inc
call
and
bound
mov
dec
rclb
test
jbe
sbb
sbb
xsavec
in
and
cli
add
movsb
mov
and
mov
pop
and
jo
cld
cmc
xor
xchg
mov
in
xor
cmp
cmp
popf
icebp
and
aas
pushf
in
add
cmp
stos
mov
scas
xlat
inc
lcall
addr16
lods
and
mov
and
adc
and
jecxz
jnp
int3
and
loopne
jne
cmpsb
stc
test
mov
or
pop
sahf
mov
jb
or
imull
cmp
push
rorb
inc
scas
push
inc
inc
mov
ja
adc
fistpl
mov
or
xchg
xchg
xor
mov
push
test
repnz
xor
fidivl
mov
rcl
and
lahf
mov
lcallw
adc
and
aam
stos
clc
std
pop
mov
daa
xchg
adc
inc
sbb
negl
xchg
imul
mov
cmp
or
inc
and
sbb
push
sub
mov
push
std
and
mov
fcmovnu
xlat
leave
shll
dec
jbe
ds
cmp
mov
pop
cmp
fisubs
clc
rcr
and
fisttps
dec
imull
andl
xchg
sbb
gs
sub
sub
push
call
mov
les
ret
and
icebp
imul
scas
sub
adc
pop
mov
or
mov
push
and
adc
sub
mov
cmp
push
pop
sbb
dec
cmp
addl
pop
mov
jp
and
pop
mov
sarl
and
je
stos
xlat
mov
pop
cli
pmaxsw
mov
insl
sub
add
rcll
lea
cltd
adc
aam
jmp
popf
xlat
xor
sub
cmp
out
testl
lahf
in
test
mov
push
sub
xlat
popf
pop
and
push
pushl
jb
fidivl
push
sbb
or
xchg
lods
pop
push
pop
imul
and
ficoms
rolb
repz
and
xchg
inc
dec
jns
and
aas
pusha
and
aam
ds
xchg
jmp
push
je
cs
pop
and
cmpsl
imul
and
sbb
inc
cltd
or
loope
js
push
add
leave
adc
fldcw
cli
inc
in
pop
and
jno
pop
daa
xchg
mov
rorl
fisubrs
push
in
out
adc
and
lods
cmpsb
mov
add
sbb
fdivrs
lods
nop
jns
test
sbb
mov
movsl
out
scas
scas
jge
mov
insb
cmp
cs
icebp
xorl
cmp
bound
inc
movsl
or
and
dec
inc
fisubl
lea
ret
mov
xor
pop
push
fdivrl
leave
cs
lods
mov
cmpb
fs
and
cmc
cli
add
or
lret
ja
lret
pop
loope
sbb
scas
inc
movaps
dec
loopne
cld
cmp
sub
ret
dec
sahf
and
rcll
and
and
jecxz
mov
test
mov
sub
mov
and
insl
sahf
test
or
popa
jns
push
sub
and
out
jle
xlat
cmpsb
inc
push
cli
cmp
sub
fistps
movsb
scas
int3
dec
push
ja
shrb
and
sbb
gs
and
pop
sbb
pop
dec
sub
pusha
mov
cmc
out
inc
and
push
lds
and
xchg
mov
adc
in
cli
add
sub
cmc
adc
movsl
jns
and
jmp
rolb
or
pusha
frstor
aam
sub
and
jns
data16
mov
or
dec
sub
jae
pop
sarb
adc
aad
adc
and
jne
mov
test
and
push
or
mov
aad
cmc
inc
sub
repnz
std
les
xchg
mov
and
cmc
rcrl
ret
stc
mov
icebp
or
imull
aas
mov
and
adc
mov
jmp
cs
cmp
pushf
aaa
xchg
sbb
push
pusha
and
add
jmp
and
jl
push
adc
sbb
fsubrp
sub
cmp
xchg
mov
sub
daa
enter
loop
cmpsl
and
fcomps
mov
or
inc
push
dec
ljmp
test
insl
cmpsb
and
add
jae
fistpl
xchg
stc
pop
inc
xchg
inc
and
mov
mov
and
shll
xor
mov
sbb
sub
push
cmp
and
push
data16
mov
cs
rorl
ss
shl
pop
jg
repz
pop
sbb
insb
into
jnp
out
adc
xchg
mov
imul
scas
mov
lcall
cmp
push
push
in
hlt
mov
xor
clc
outsb
and
fisubl
fimuls
aas
and
push
xlat
cmp
sub
aaa
mull
dec
xchg
cs
fistps
into
test
and
test
sti
fs
pop
and
daa
cli
mov
ss
insb
or
inc
test
push
leave
add
lret
and
int3
rcl
cmp
jle
mov
loope
and
arpl
mov
andl
xor
push
stos
and
loop
pushf
and
scas
inc
fisttps
lret
hlt
repz
inc
shrl
cmp
mov
stos
and
lds
mov
add
enter
add
or
cwtl
add
into
push
aam
pop
inc
sbb
pop
cs
sub
jge
lret
mov
mov
pop
push
fcmovu
push
mov
sbb
popa
outsl
xchg
outsl
jl
outsb
sub
in
mov
rcrl
loop
add
sbb
push
cmpsb
nop
pop
lds
or
sti
xor
push
mov
repnz
xchg
and
add
xchg
mov
stos
pop
cmp
jnp
daa
icebp
in
in
or
mov
divl
cmpsb
pop
shlb
add
pop
inc
mov
mov
std
cwtl
repnz
lods
and
stc
push
or
loope
inc
js
sub
sub
cltd
mov
pop
and
jno
lahf
cmp
adcl
xchg
mov
sub
sbb
cmp
cwtl
cli
shlb
js
mov
stos
push
and
mov
mov
and
add
nop
mov
test
push
mov
repz
inc
jle
and
movsb
hlt
jge
pop
ds
cmp
pop
roll
sub
mov
test
call
rorb
and
mov
pop
xchg
ret
call
stos
fcoml
sub
insl
lock
and
dec
or
cli
or
jle
repnz
in
sbb
loope
push
scas
mov
adc
mov
mov
push
in
sbb
dec
jo
inc
xchg
jecxz
or
pop
xchg
andl
sarb
enter
sbb
stos
and
rol
xchg
ret
and
inc
popa
jb
in
sub
xor
and
push
xchg
and
xchg
adc
and
imul
sub
or
ja
jle
mov
adc
jns
push
lret
and
sbb
sub
inc
mov
mov
mov
cld
fmull
lds
jbe
inc
das
jg
xchg
sub
add
and
and
in
fimuls
int
cmp
mov
xchg
rclb
stos
xchg
pusha
ljmp
xor
std
mov
outsl
add
sti
das
insl
sub
sbb
pop
sarb
imul
sar
xchg
scas
das
mov
adc
and
pop
adc
mov
lods
ret
fisttps
mov
sub
push
lret
dec
les
insb
dec
out
popa
push
and
cs
jg
cmp
into
or
hlt
aam
push
aas
insl
or
add
add
and
addr16
outsb
and
sub
jecxz
and
sbb
jl
sub
lret
xchg
cmpsb
ret
leave
jmp
and
jb
leave
fnsave
xchg
and
inc
mul
and
mov
mov
fwait
sbb
mov
pop
xchg
nop
imul
jae
out
cs
test
jmp
and
es
cmp
adc
mov
mov
sub
fsubl
pop
repz
cmp
aam
dec
lock
repnz
loopne
xchg
push
mov
xor
and
scas
xchg
data16
dec
add
shrb
ss
out
cli
and
push
out
pop
pushf
mov
les
adc
in
fadds
js
imul
dec
subb
pop
arpl
lcall
mov
dec
xor
push
sarb
int3
mov
xchg
push
je
inc
adc
sub
orb
or
and
and
fdiv
cmp
cmp
pop
daa
scas
and
and
jne
xchg
testb
gs
movaps
lods
and
adc
sbb
and
in
mov
cli
rcrl
xor
incb
insb
xor
dec
sbb
mov
dec
adc
jo
push
push
in
and
mov
mov
in
repnz
scas
mov
ljmp
lods
repz
jnp
sub
jb,pn
movsb
je
pop
inc
ret
daa
xor
pop
imul
ja
mov
fcoml
out
mov
add
test
cli
das
pop
fs
sbb
jl
inc
xor
cli
data16
sub
int3
inc
jo
sbb
and
xchg
fisubs
jg
push
loopne
cs
push
rcr
sbb
cmp
fwait
push
mov
jp
fdivr
or
and
outsb
mov
subb
lea
xchg
adc
dec
je
jbe
xchg
xlat
lods
mov
or
daa
leave
test
inc
div
sub
sbb
add
out
mov
mov
loop
cwtl
adc
xor
and
or
popl
inc
sub
ffreep
cli
adc
jno
sub
js
or
or
test
cmp
xchg
and
push
das
scas
pushf
push
mov
push
in
cli
aad
sti
in
hlt
sub
and
push
loop
and
or
nop
into
dec
sbb
and
or
out
sbb
out
push
pop
push
cmp
ljmp
sub
insb
mov
and
lods
mov
je
out
and
ljmp
ret
sub
call
mov
sub
out
or
sub
int
mov
fisubl
js
or
cld
push
xor
fcom
and
outsl
jl
dec
cwtl
mov
mov
cld
lock
and
movsl
dec
jmp
bound
das
cmp
shlb
loop
fistps
lret
pop
mov
add
and
and
rcrl
add
sahf
mov
inc
cmp
sub
xor
lods
jge
mov
mov
jno
fistps
push
out
and
push
inc
ja
test
and
jb
scas
sub
jne
push
or
leave
sub
loopne
repnz
mov
das
lret
jns
and
in
inc
mov
add
xchg
adc
pop
mov
cmpsb
or
or
push
lret
aad
cmp
sub
add
mov
adc
xlat
arpl
cltd
outsb
movsb
and
fbld
mov
xor
push
jns
cli
pop
push
inc
mov
add
push
inc
or
sub
rcl
gs
dec
mov
movsb
dec
and
mov
bound
xor
bswap
rcrb
push
xchg
sub
call
and
lods
es
test
repnz
outsl
int3
and
loopne
xchg
mov
int
pop
xchg
push
and
dec
sahf
mov
and
inc
inc
jle
cmp
cli
xchg
xlat
and
mov
cli
addr16
fisubrl
mov
and
inc
add
js
addb
test
and
addr16
sbb
mov
stos
ljmp
imul
and
outsl
lret
push
test
dec
repnz
lret
dec
adc
std
cmp
scas
dec
xchg
popa
sub
adc
repnz
mov
push
data16
xchg
dec
and
cmp
xorl
and
test
adc
cmc
and
enter
lcall
and
mov
mov
and
ds
mov
imul
jge
and
or
das
and
ret
shl
sub
mov
mov
faddl
lods
adc
dec
jp
fisubrs
pop
popa
daa
jns
rclb
inc
mull
leave
cmpsl
sbb
fistpll
sbb
scas
cmpsl
sbb
iret
jne,pn
jno
or
xor
mov
repz
leave
pop
push
xor
pop
pop
cmp
add
xor
and
call
orl
dec
xor
sbb
fmuls
mov
xchg
fnsave
mov
pop
and
add
sahf
std
add
dec
sub
test
adc
test
negb
mov
fimuls
xor
aad
popf
pop
inc
hlt
outsb
cmp
mov
and
or
inc
leave
fimuls
loopne
or
adc
cmpsl
jne
and
and
inc
jb
lock
cmp
sahf
and
bound
fsubl
pop
xchg
and
sti
or
fldt
mov
jle
movsb
leave
mov
rclb
xchg
xchg
cs
fsubl
jns
cs
jne
and
dec
adc
ja
fadds
lret
sub
mov
mov
dec
mov
and
mov
lods
dec
or
xchg
js
pop
mov
pop
push
loop
mov
ljmp
push
fsub
cmpsb
jb
push
test
and
jno
cwtl
dec
mov
xchg
inc
dec
push
out
pusha
push
and
add
and
cli
fs
out
sti
mov
pop
repnz
stc
pop
mov
cmp
nop
lcall
scas
es
and
sub
hlt
ret
and
ds
ljmp
mov
scas
xchg
xchg
cmpsb
sahf
cmp
sub
and
repnz
leave
jae
shlb
cli
lds
inc
fsubrl
scas
mov
jae
add
push
idivb
pop
inc
inc
or
push
dec
jnp
sbb
loope
scas
or
lds
movsb
mov
insl
sub
imul
inc
dec
lcall
sbb
push
movsb
das
and
loop
adc
sub
inc
dec
cmp
cmp
xchg
and
mov
inc
xchg
rcll
inc
cld
sahf
aam
mov
subl
and
repnz
cmp
adc
fistpll
and
cmp
and
xchg
ja
icebp
jecxz
mov
enter
clc
and
push
sbb
or
jp
push
mov
mov
test
incl
pop
or
jno
push
pop
xchg
and
mov
aas
jnp
pushf
cmp
mov
mov
push
pop
shlb
setle
cltd
ror
pusha
and
mov
sub
jp
jns
and
imul
sub
or
cs
cmpsl
mov
dec
int
adc
xchg
sub
jbe
and
lret
test
lcall
push
fdivrl
flds
icebp
in
subb
sbb
sbb
mov
and
sub
jmp
dec
jp
xchg
pop
cmp
cmp
and
xor
fnstenv
jb
mov
movsl
or
cs
pushf
jae
and
and
jl
and
mov
test
adc
xor
scas
and
cmp
outsl
ds
mov
add
nop
and
mov
out
ret
dec
sbb
stos
rcl
hlt
cmpsb
and
mov
lds
cmp
pop
mov
repz
and
and
cli
xor
int3
popl
mov
jg
sub
sub
fisubl
mov
pop
sub
and
into
sub
adc
add
or
imul
out
and
pop
push
lcall
xchg
lret
and
push
sbb
ficompl
fistl
out
sub
aaa
mov
out
fidivl
jmp
push
stos
sbb
dec
pop
mov
mov
sub
rcrl
negl
mov
sbb
popa
or
rcl
mov
push
xchg
and
insb
lahf
sub
outsb
push
jae
sub
push
lret
jno
sub
and
test
xchg
movb
sub
mov
insb
das
loop
movsl
dec
ss
out
stos
cmp
call
and
sbb
stc
sub
in
lock
int
mov
das
repz
mov
shll
add
stos
or
inc
aas
fs
test
jmp
push
sti
and
clc
add
sub
aam
and
leave
mov
and
fs
xchg
jbe
rcrb
jge
jl
cmp
movsl
fmul
inc
scas
and
dec
test
fidivs
inc
xor
in
xorb
sub
xorb
sti
adc
push
sbb
cltd
rcrb
sub
shrl
call
pop
mov
and
xchg
movsb
pushf
and
pop
pushw
pop
daa
push
and
les
xor
and
add
dec
lods
add
call
inc
xchg
jnp
sti
and
pusha
aam
or
and
mov
lahf
cmp
ror
and
mov
dec
push
jmp
cmp
add
mov
xchg
sub
mov
add
popf
adc
and
cli
cmp
data16
sbb
sub
stc
jle
xor
mov
adc
sti
nop
pop
and
push
sub
in
lock
out
add
dec
mov
mov
xchg
arpl
call
test
arpl
in
sbb
pop
repnz
and
dec
or
and
jae
push
or
ljmp
adc
out
icebp
and
sbbl
push
insl
jp
scas
jo
ficompl
xchg
dec
or
data16
and
andb
scas
cmp
jno
xchg
dec
inc
and
adc
xchg
mull
leave
push
pop
ret
pusha
mulb
loop
repz
mov
fs
and
adc
mov
scas
mov
push
popa
pop
jle
and
add
cmp
int
and
fildll
cmc
lcall
jmp
sbb
int
mov
call
xor
pop
push
push
cwtl
and
data16
and
cmp
xor
and
cmp
inc
into
jb
xchg
scas
push
enter
and
and
mov
sub
and
cmp
xchg
push
and
test
addb
mov
pop
sbb
push
sbb
xor
scas
push
jns
sub
mov
enter
sub
and
jmp
dec
and
arpl
and
jbe
or
popa
mov
ja
xor
nopl
test
sub
outsl
adc
sbb
lods
out
je
scas
mov
adc
les
outsb
dec
jmp
dec
pop
xchg
add
cmp
nop
cmp
and
mov
sub
adc
fwait
add
add
or
xlat
repnz
pushf
xchg
and
addr16
testb
and
aaa
xor
jg
mov
push
mov
mov
je
sbb
mov
push
mov
outsb
ret
insb
dec
jne
fs
add
inc
add
imul
stos
push
jecxz
sysenter
out
mov
lcall
scas
sub
test
xor
xchg
cmp
or
push
fucom
pop
rorl
cmp
sbb
dec
mov
xor
data16
xchg
das
repz
call
jg
cli
push
iret
pop
popa
das
loope
sarb
repnz
stos
push
dec
mov
inc
cwtl
inc
je
daa
les
lcall
lahf
and
xchg
sbb
xchg
add
add
shrb
aas
mov
and
clc
add
xchg
fimull
mov
stos
imul
pop
xor
adc
rorb
insl
out
enter
inc
ret
sub
call
sbb
push
and
push
sub
dec
dec
or
and
leave
scas
mov
pop
out
and
repnz
insb
inc
loope
dec
iret
cmp
daa
mov
adc
sub
icebp
mov
and
in
xchg
enter
pop
jae
jmp
aad
test
cmc
and
ljmp
jecxz
dec
xorb
xchg
mov
jmp
imulb
xor
and
lods
lea
mov
aam
call
jmp
adc
out
adc
and
jge
inc
fsubl
cmp
int3
cmp
fwait
and
fsubrp
xchg
mov
and
and
ja
cmp
mov
cs
test
cmp
cmpsl
and
jle
mov
fnstenv
decb
and
dec
js
and
pop
lahf
popf
repnz
daa
shll
mov
mov
iret
xor
mov
add
les
jo
fidivrs
in
jmp
jae
fstpl
sahf
ret
dec
mov
and
mov
out
arpl
cld
iret
jl
or
adc
cli
shlb
inc
push
and
mov
and
mov
mov
adc
rclb
and
xchg
jno
cli
ds
and
jns
mov
test
stc
and
out
test
pop
popa
dec
and
jp
nop
xchg
sbb
sub
and
cmp
mov
pop
repz
ds
lds
jmp
or
inc
ljmp
fs
bound
out
mov
cwtl
mov
sub
ret
fcmove
push
jbe
cltd
fdivrl
fcmovb
movsl
fistpl
in
push
stos
sbb
and
or
mov
xor
cmp
std
loope
outsb
jns
sub
mov
leave
lods
cld
mov
sub
mov
aad
sti
xchg
push
ret
and
pop
inc
and
loop
clc
xor
loope
dec
sbb
add
sbb
mov
jmp
inc
and
mov
mov
and
dec
jmp
fldl
in
inc
or
int
cmp
xor
outsl
leave
movsb
and
push
push
push
and
mov
or
test
or
bound
clc
sbb
mov
mov
mov
mov
pop
sub
test
lds
jno
xor
cmp
push
cltd
int3
sub
push
call
add
and
dec
add
mov
arpl
repnz
sub
pusha
and
lods
sub
int
xor
jb
inc
sbb
in
or
bound
xor
xchg
sub
and
test
sub
icebp
lods
dec
push
push
mov
pusha
lods
or
jae
jl
and
jbe
pop
les
and
dec
mov
xchg
push
and
fs
dec
in
xor
lret
dec
and
out
jne
aas
or
lcall
xlat
or
and
add
rol
lock
or
aaa
int3
in
adc
jns
adcl
out
jmp
aam
cmp
mov
and
aad
jb
ds
jns
and
scas
fldcw
cli
outsl
push
inc
add
mov
jmp
and
pop
mov
cli
adc
lcall
dec
cmp
ret
popf
xchg
jo
xor
pop
sbb
iret
cmp
push
and
lret
dec
sbb
dec
inc
mov
test
ja
mov
lahf
cmp
inc
dec
cs
dec
sbb
int3
ss
mov
jg
jge
pop
repnz
and
mov
mov
and
addl
sub
and
mov
xlat
jo
and
or
xor
lcall
push
jmp
shlb
mov
mov
clc
and
cwtl
pop
fiaddl
dec
dec
data16
inc
stos
test
and
sbb
call
and
cmp
sbb
mov
xchg
push
and
adc
sub
and
xor
pusha
dec
or
inc
inc
mov
out
pop
pop
push
jae
cmp
sub
mov
orb
adcl
add
sbb
ljmp
scas
adc
mov
and
repz
and
shrl
jb
and
adc
add
jmp
cmp
cs
adc
add
aam
and
mov
fs
rcrb
fbstp
xor
sub
and
push
inc
mov
js
push
fsubrs
pop
fimuls
pusha
sbb
xor
add
xchg
aas
dec
pop
mov
lcall
mov
test
mov
lcall
sarb
dec
shll
movsl
xchg
arpl
dec
pop
lods
sbb
and
popl
cmc
repnz
mov
xor
or
add
je
mov
xor
push
and
cwtl
lret
or
adc
das
mov
jl
sub
fdivrl
out
jle
inc
and
cmp
fstps
test
mov
add
lock
jmp
xchg
sub
repz
sahf
dec
inc
adc
xor
lods
push
enter
sbb
test
ds
cmpsb
out
nop
and
adc
mov
fwait
outsb
out
popf
xor
xor
jae
repz
inc
cmpl
cmpsb
inc
push
cmpsl
xchg
scas
add
bound
lods
mov
xchg
jmp
xorl
cmp
or
xor
pop
fcoml
dec
imul
lea
and
mov
and
inc
loope
mov
pop
push
pop
mov
sbb
jne
cs
dec
and
mov
xchg
push
mov
and
aam
mov
inc
imul
xlat
dec
and
and
adc
jle
cmp
push
jnp
push
jg
icebp
mov
cmp
mov
sub
inc
dec
popa
outsl
mov
or
and
xor
ret
inc
xchg
sub
sub
les
fbld
inc
movsb
and
push
imul
cmp
adc
or
lods
dec
push
sub
push
lcall
jnp
mov
mov
mov
pushl
popf
lds
and
jge
mulps
outsb
push
ss
xchg
int3
jecxz
inc
sbb
aam
xchg
sti
add
mov
or
shlb
jae
push
cltd
or
insl
pusha
add
xchg
sub
popa
je
jns
push
mov
stos
jnp
enter
subl
mov
pop
ret
jl
add
mov
jbe
and
mov
and
movd
cmp
adc
xorl
sub
cltd
fwait
mov
popf
mov
imul
push
cmp
push
mov
and
jle
icebp
in
aaa
aas
dec
and
sahf
add
and
mov
xlat
inc
dec
xchg
pushf
cmpsb
mov
out
and
sahf
aaa
test
adc
sub
jg
ret
ret
adc
dec
xor
pop
sub
push
outsb
pop
and
aam
test
fadds
pushf
and
imul
pusha
push
cld
and
test
fcmovbe
adc
xor
sar
popa
nop
and
into
cmp
int
mov
mov
testl
cmc
pop
and
mov
xor
popf
mov
sbb
sbb
sbb
aad
push
cmpsl
sub
xor
jae
enter
lods
and
mov
das
sbb
pop
sbb
pop
fcomps
cmp
imul
sti
movsl
and
inc
mov
and
xchg
adc
call
fbstp
mov
clc
fcomps
jecxz
dec
fists
stos
and
out
pop
movl
adcl
sbb
sub
cmp
es
pop
and
sub
and
push
pusha
sub
out
xor
jp
cs
dec
leave
cmpsl
lahf
pop
mov
push
fsubrp
mov
xchg
pop
mov
jbe
cli
mov
das
mov
xchg
push
inc
adc
fwait
and
and
mov
out
adc
loope
pop
sbb
and
push
dec
mov
and
pop
pop
jp
and
repnz
jmp
repnz
f2xm1
test
mov
push
clc
aam
cmpsl
mov
fisubl
cs
test
dec
xor
nop
int
loope
mov
and
sub
dec
lcall
fsubp
sbb
pop
outsl
das
mov
cli
cmp
push
subl
add
js
xor
adc
and
sti
sub
cld
cmp
in
lret
add
es
jae
dec
subb
xchg
dec
sbb
lds
daa
and
ja
sub
adc
xlat
or
add
aad
cwtl
mov
das
sbb
jae
mov
pusha
jnp
xchg
loopne
scas
cld
add
movsl
sbb
sub
inc
mov
adc
jo,pn
xchg
neg
and
mov
push
xor
pop
jl
mov
xchg
mov
enter
insl
add
or
shrl
inc
cmpsl
stc
and
les
push
sbb
mov
es
cltd
stc
cs
shr
icebp
pop
leave
and
call
push
ret
add
push
sbbl
dec
movsl
ljmp
dec
enter
iret
push
adc
sub
dec
sbb
mov
push
fmul
and
mov
sti
and
jo
jecxz
mov
xchg
and
insl
pop
cmc
sbb
loope
lods
test
mov
pop
les
dec
push
shll
mov
sbb
xchg
and
pop
xor
sub
and
pop
loop
fsubs
stc
cmp
imul
or
dec
shll
cli
pop
inc
popa
cmpsl
adc
or
outsb
and
roll
and
int
or
sub
popf
and
movsb
aad
lcall
idivb
dec
and
addb
and
pop
push
movsl
sbb
sbb
aas
xchg
loopne
decl
dec
mov
lea
das
adc
gs
jb
inc
idiv
mov
pop
adcb
and
int
ror
sbb
scas
and
bound
add
mov
jne
cltd
mov
add
dec
xor
push
inc
jns
mov
mov
sub
pop
popa
and
shll
mov
arpl
mov
pop
cmpsl
and
test
mov
add
push
xor
adc
sub
add
and
mov
test
les
xlat
outsb
dec
lods
leave
xchg
call
lahf
imul
and
cs
add
mov
fldl
andl
xor
inc
xlat
cs
fwait
pushf
fstl
mov
addr16
mov
and
cmp
aaa
pop
mov
jl
outsl
add
inc
cld
xor
ret
movsl
mov
mov
mov
outsb
jno
jne
enter
ret
fwait
inc
add
sti
imul
jb
out
pushf
fldt
mov
mov
push
jl
sub
inc
ja
dec
mov
lds
and
dec
jo
loopne
mov
jecxz
icebp
jbe
inc
sbb
adc
outsl
les
dec
cmp
or
lahf
into
fiaddl
data16
imulb
push
mov
and
push
enter
jle
into
or
xchg
push
fdivs
addb
loop
xlat
imul
add
gs
dec
push
fcomps
test
and
jne
ss
idivl
mov
sub
sub
push
stos
jg
mov
pop
xchg
mov
out
push
ss
mull
push
xchg
sbb
push
in
or
comiss
cld
cmc
lret
gs
and
shrl
sub
sub
jp
push
jmp
leave
and
push
dec
rorl
ret
fistpl
insb
into
dec
shr
xlat
inc
cmpl
out
or
bound
pop
push
sahf
enter
cmp
adc
sarl
jg
jp
xchg
repz
outsb
xor
mov
shll
mov
pop
lret
sahf
push
pop
sub
int3
mov
xchg
cmp
cltd
xchg
add
or
push
lea
sbb
popf
cmp
jecxz
xchg
ret
xor
sarb
call
xchg
int3
daa
dec
sbb
push
or
sub
push
outsl
cmpsl
arpl
mov
and
mov
subb
mov
adc
lods
inc
inc
sti
and
test
cltd
lds
and
adc
repz
and
xchg
xchg
clc
pop
cmp
mov
daa
cmp
scas
lret
jnp
loope
adc
jbe
add
push
mov
jae
in
and
jnp
loope
comiss
outsb
mov
and
cmp
stc
push
cltd
inc
cltd
push
insb
fcmove
cs
fs
and
movsb
cmpsb
insb
xor
jno
xchg
mov
xchg
sub
push
test
insb
fistl
adc
jecxz
pop
inc
and
in
mov
test
rolb
popf
adc
cmp
ret
inc
nop
mov
fidivrl
repnz
cs
or
hlt
and
mov
add
and
cmpsb
ljmp
call
cmp
and
das
jmp
pop
xor
push
cmc
sub
ret
jns
js
test
and
movsl
in
xor
cli
fldcw
jo
pop
adc
xor
and
or
nop
and
add
pop
out
loope
sbb
popf
scas
xchg
jg
mov
sbb
lods
cld
jnp
push
insl
pop
test
ljmp
add
shll
mov
out
cmp
int3
mov
push
js
je
into
sbb
inc
sahf
in
lret
mov
and
in
xor
mov
push
inc
xchg
or
int
cs
sub
movsb
fbstp
jae
and
push
and
ljmp
and
jl
ljmp
repnz
sbbl
and
xor
sbb
sti
mov
insb
dec
cmp
xchg
ret
pop
ds
jle
in
and
cmp
adc
add
mov
rolb
fldl
jns
sbb
icebp
cwtl
sbb
jecxz
stos
mov
inc
in
mov
dec
sub
sub
add
dec
insb
xor
mov
sub
push
jbe
in
and
test
repnz
inc
sub
jno
inc
adc
pop
ret
repz
lods
and
jae
mov
push
enter
mov
mov
add
pop
and
jbe
cmp
data16
call
icebp
je
mov
add
sub
mov
fnstcw
and
jp
cmp
and
pop
aaa
adc
cs
mov
jb
xchg
dec
sbb
adc
push
jne
insl
mov
ljmp
mov
shl
add
and
imul
push
lea
mov
cwtl
xor
and
dec
jle
cltd
fcmovnu
arpl
dec
sbb
fwait
xchg
and
pop
lcall
jecxz,pt
cli
and
sbb
xor
pop
and
pushf
dec
int3
rcll
and
data16
and
icebp
jg
leave
push
mov
into
pop
movsl
and
ljmp
mov
imul
shrb
test
into
and
or
and
in
dec
and
sub
add
pushl
fisubrl
jno
sub
and
push
mov
sbb
jbe
cltd
mull
mov
popf
push
sbb
add
jae
out
ja
push
sbb
outsl
sub
and
push
mov
and
inc
in
pop
ss
dec
out
mov
add
addr16
mov
insb
and
test
orl
rolb
movsl
cmp
fadd
xchg
scas
and
loopne
repz
ja
dec
add
push
dec
stos
push
sub
call
push
testb
popf
cmp
std
jno
jo
dec
dec
lea
mov
mov
mov
and
lahf
mov
and
ffree
inc
xor
push
insl
push
out
sbb
and
outsl
mov
inc
jb
jne
and
cs
and
add
xor
sub
sbb
lret
fimuls
mov
mov
and
call
dec
frstor
insl
bound
jle
fwait
push
daa
xor
cmc
mov
and
add
and
test
cmp
aas
mov
jnp
and
inc
das
cmp
sub
stos
movsb
insl
cltd
sub
jne
enter
flds
dec
cmpsb
movsl
push
mov
mov
xchg
enter
stos
daa
push
xchg
icebp
or
dec
adc
push
dec
cli
sub
inc
lods
fdivl
jg
mov
stc
cmc
jns
ret
adc
push
inc
nop
icebp
dec
cmpsb
fsts
cmp
notb
aad
add
pop
shl
mov
sub
addb
and
fstl
push
insb
cs
jae
int
or
scas
cmp
dec
inc
lahf
jns
ret
xchg
stos
adc
dec
or
test
cmp
add
aaa
add
jo
scas
pop
mov
xchg
push
out
sbb
enter
scas
mulb
dec
cld
adc
jae
and
mov
jle
xchg
sub
in
and
inc
mov
and
xor
and
les
inc
push
sarl
push
jne
inc
lea
sub
cmp
gs
dec
roll
and
sti
int
pop
sub
insl
hlt
test
or
mov
and
aas
cwtl
dec
and
xchg
pop
push
xor
mov
daa
push
push
std
and
ja
sbb
je
dec
inc
add
sub
outsb
lret
cmp
adc
and
subl
out
out
mov
pushf
mov
test
jecxz
cltd
jo
push
pusha
sub
and
loop
out
xor
add
and
add
cmp
es
subl
xchg
shl
and
mov
lea
je
cmpsb
adc
cs
packssdw
and
push
mov
ds
addb
lret
in
cs
outsl
mov
jns
repnz
lea
dec
sub
rcrl
shrb
xor
call
add
push
xchg
lods
insb
in
in
in
sbb
fs
mov
stos
jne
and
mov
sub
outsb
inc
iret
movsl
sub
hlt
repnz
adc
mov
cmpl
or
mov
pop
inc
leave
and
test
push
and
and
out
jbe
sbb
inc
scas
push
mov
push
movsb
jge
cmc
and
ficoml
and
adc
lock
test
mov
rcl
xor
loopne
repnz
lds
in
and
pop
lahf
xchg
dec
out
data16
xlat
or
sub
loopne
jg
outsb
mov
fsubrs
pop
cli
adc
inc
insl
adc
sub
push
cmp
popf
and
mov
pop
sub
dec
push
push
mov
sbb
xor
cli
lcall
test
sub
adc
xchg
stos
int3
and
movsl
pop
or
lcall
outsb
xor
aad
cmp
xchg
outsl
cli
and
enter
mov
gs
sub
sbb
xor
les
int
leave
and
pop
pop
and
rcll
and
insb
adc
jne
in
test
pop
jp
or
mov
mov
sub
std
jl
int
dec
in
sbb
scas
and
mov
out
psllq
push
mov
lock
sti
stos
cli
lods
pop
xchg
mov
and
jp
jmp
testb
inc
cmp
jge
add
lods
arpl
aam
int
popf
and
rcl
fs
xor
sub
push
divb
and
sahf
jge
pop
loopne
mov
adcb
jbe
aaa
push
xor
insb
mov
call
sbb
out
inc
jo
and
loopne
movsb
and
pmullw
int
and
mov
push
mov
movzwl
push
decb
mov
orl
xchg
pop
xchg
aaa
add
or
push
pop
cmc
arpl
imul
mov
stos
jae
push
dec
sub
jne
ljmp
lret
pop
shrb
and
adc
leave
push
in
js
dec
sub
clc
dec
iret
push
mov
and
cld
dec
dec
cmpsb
mov
push
dec
jno
dec
sub
mov
pop
jne
inc
push
push
cs
std
mov
adc
adc
mov
mov
xchg
das
das
lea
push
cmp
in
test
es
push
out
jge
repnz
jb
and
rorl
and
add
ljmp
dec
js
outsl
sahf
lods
xchg
jb
sub
mov
mov
cmp
lcall
and
xor
pusha
das
movsl
push
cmp
jo
aam
mov
and
arpl
push
mov
sub
loope,pn
stos
adc
jmp
pop
scas
cld
and
cmpl
and
stc
and
or
inc
loop
push
and
lret
popf
xor
aaa
push
pop
cmp
mov
and
rcrl
ret
cli
and
jmp
testb
jne
loope
dec
lods
cmp
jbe
subl
rolb
xchg
movsb
xor
sub
jb
and
mov
ss
lods
and
pop
mov
cmp
and
insl
xchg
cmpsb
mov
mov
sarb
and
nop
xchg
vcvtpd2dqx
inc
cmp
scas
pop
leave
mov
rcl
jno
enter
dec
cmp
add
mov
adc
imulb
sbb
xchg
dec
xor
lods
push
inc
lock
enter
sbb
cltd
ss
sbb
mov
arpl
fdiv
jbe
push
add
or
popl
mov
js
adc
leave
sub
lods
gs
and
jle
mov
mov
xchg
hlt
pop
and
lcall
and
cwtl
icebp
ficompl
mov
jns
dec
mov
imul
jb
or
and
mov
rcrb
pop
imul
ret
push
enter
out
and
mov
jae
scas
jne
clc
jbe
mov
mov
and
adc
jle
cwtl
imul
pop
movups
rcll
sbb
adc
pop
std
adc
pop
fucomi
pop
dec
cmp
and
jnp
jmp
sbb
dec
add
lock
mov
push
xor
popa
cmpsb
imul
repnz
dec
and
out
jg
xchg
adc
jmp
adc
shll
jae
jle
sub
mov
xchg
imul
mov
mov
js
or
push
insl
cmp
sbb
cpuid
pop
in
lods
jp
and
sub
clc
cmp
pusha
dec
sub
loopne
pop
movsl
lods
fldenv
add
loope
test
and
adc
jnp
sbbb
aad
push
mov
and
stos
subl
xor
std
inc
and
leave
xchg
rcrl
and
ss
mov
je,pn
adc
mov
push
insb
cmp
repz
outsb
icebp
push
jbe
and
sbb
inc
cli
in
sub
imulb
xorb
in
repz
cmp
pop
adc
jnp
and
ss
and
les
jmp
and
sub
ret
add
inc
outsl
pop
lea
jbe
aam
xor
dec
popf
pop
cmp
lods
pop
cmp
stos
xor
sub
pop
jge
inc
adc
inc
or
in
out
push
jo
inc
fidivrs
out
mov
sub
into
or
jb
pop
adc
mov
and
xchg
add
jne
push
and
push
sbb
and
cltd
test
push
push
and
in
imul
pop
and
sub
xchg
insb
cmp
jle
jno
add
in
xchg
mov
sbb
mov
jle
and
inc
adc
cli
mov
jnp
in
and
dec
int
or
movsb
movl
xchg
iret
icebp
mov
stos
imul
and
fstpt
inc
jno
shrl
mov
sahf
jns
sbb
sub
mov
adc
or
cli
sub
andl
cmp
stc
fwait
adc
aaa
fs
scas
clc
insl
nop
inc
and
push
test
arpl
repnz
out
push
adc
or
or
pop
lds
jl
inc
or
mov
arpl
ret
mov
inc
inc
mov
xchg
xchg
adc
test
sbb
dec
ljmp
and
and
cwtl
jnp
pop
or
push
xor
mov
and
xchg
dec
and
mov
call
test
dec
lds
loop
xchg
addr16
xchg
adc
and
xchg
dec
loopne
lret
push
shlb
mov
filds
aad
and
mov
int
xchg
add
sahf
adc
popa
fwait
je
and
mov
and
fnstsw
and
jmp
mov
insl
fildll
es
pop
and
bnd
loopne
mov
insb
xchg
test
or
pop
sub
test
cli
adc
loop
dec
loopne
test
mov
mov
push
mov
dec
lds
popf
mov
ljmp
adc
addr16
adc
mov
lret
sbb
cmp
pusha
xor
out
pushf
enter
inc
xchg
imul
and
pusha
xor
scas
xor
ljmp
dec
rclb
jne
out
sub
dec
and
mov
je
mov
or
mov
in
lret
mov
pcmpeqb
pop
and
stos
adc
shlb
xor
cmc
repnz
rcrb
xchg
add
pop
and
aam
add
call
icebp
cltd
repz
sub
cmc
push
adc
lret
fcoms
imul
fisubl
fdivrl
stos
aaa
and
insl
out
inc
and
push
add
sbb
in
and
addr16
fldl
xlat
mov
outsb
shlb
dec
cmp
insl
ds
add
pop
imul
jnp
notl
add
and
cmpsl
test
and
je
std
xor
mov
outsb
dec
xchg
and
adc
pop
ret
outsl
cmp
rolb
lock
xchg
mov
pop
fwait
xchg
outsb
insb
mov
int3
or
mov
popf
cs
add
sarl
je
pop
jecxz
sbb
and
adc
movsl
sbb
test
mov
sub
mov
cli
pop
out
pop
sub
or
push
cli
lret
mov
and
pop
mov
and
jecxz
jno
mov
push
out
stos
pop
push
cmp
sub
dec
and
sar
out
dec
mov
and
enter
cmpsl
cltd
push
and
xchg
ds
xorb
xor
aad
int
xchg
shrb
gs
test
and
xchg
mov
jl
mov
cmp
ja
inc
pop
aam
dec
out
push
adc
insb
outsb
popf
jns
jo
lods
mov
add
inc
xor
push
std
adc
sbb
jl
in
and
cwtl
mov
cmp
ljmp
push
mov
dec
stos
jo
outsb
sub
jmp
and
and
in
notb
and
add
dec
or
aam
add
popf
mulb
mov
fs
test
int3
and
xor
and
jge
sbb
inc
xchg
xor
jecxz
dec
push
mov
sub
pushl
cmpsl
andb
outsl
and
ja
stos
fucomi
mov
xor
sub
mov
jne
movsb
pop
dec
pop
or
sti
inc
cs
mov
and
test
pushf
mull
insl
and
dec
sarl
cli
and
pop
mov
and
cmc
cmp
cwtl
hlt
xor
add
mov
sbb
stos
cwtl
jnp
and
inc
das
cmpsb
cmp
or
loopne
pop
and
leave
inc
adc
out
les
orl
cmpsb
sub
clc
push
mov
xchg
mov
fidivl
sub
imul
cmpsl
and
bound
ret
stc
mov
repz
nop
cltd
and
pop
sarb
and
hlt
rcr
sbb
mov
cs
and
jnp
xchg
sbbb
sbb
dec
bound
aaa
push
and
push
incb
inc
fsubrs
ret
pusha
adc
and
fadd
andl
sub
fstpt
lcall
and
mov
inc
icebp
and
sahf
stos
mov
and
lods
inc
incl
fidivl
xor
or
shlb
leave
and
lret
sub
bound
push
pop
push
push
sub
mov
push
mov
sbbb
and
and
clc
jle
pusha
test
outsl
int
cmp
lds
movsb
cmpsl
pop
push
lods
cmc
mov
pop
test
dec
movsb
push
fsubrp
cltd
and
pop
mov
loopne
lahf
pushf
test
jl
sti
jmp
pop
sbb
push
inc
or
and
pushf
jge
dec
and
jo
andb
and
xchg
xor
mov
mov
shl
mov
xor
cs
jl
push
sbb
push
in
call
in
mov
sub
cmpsb
push
and
out
push
dec
mov
arpl
mov
jbe
mov
sub
and
faddl
and
in
adc
and
sub
mov
sub
or
in
mov
push
jo
xchg
inc
and
pop
xchg
mov
cmp
and
mov
icebp
push
and
jb
push
jbe
add
dec
and
xlat
cmp
pop
pushf
and
fsubs
mov
shrb
jbe
cli
jl
and
mov
ret
and
adc
xor
std
and
mov
add
and
outsl
aad
inc
adc
fsubl
xchg
imul
pop
push
sub
push
out
and
test
fdivr
mov
repnz
adc
iret
ds
or
mov
mov
mov
fcmovu
mov
sbbb
mov
xchg
sub
sbb
cs
jle
outsl
lock
add
xor
rcrb
ss
sub
outsb
repnz
pop
dec
mov
into
sbb
adc
sub
and
add
andb
xchg
dec
je
loope
je
dec
and
lcall
mov
push
cmp
in
repz
mov
stc
and
sbb
int3
push
adc
fwait
stos
nop
sub
pop
jno
push
push
cwtl
and
aad
testl
sub
mov
lods
aad
push
or
xchg
jg
jecxz
sbb
pop
and
shll
sub
or
add
stos
aad
pop
push
jae
sub
push
pusha
mov
insb
xchg
dec
or
jmp
dec
sbb
mov
enter
sub
sub
mov
cmp
add
jnp
xor
repz
loope
push
mov
and
jmp
stos
add
dec
pop
add
sbb
jmp
imulb
xor
xchg
and
mov
push
or
cltd
pushf
aam
or
push
sub
sbb
or
and
cmp
inc
sbb
adc
jl
pop
push
shrl
ficoms
sbb
cmpsl
cmpb
adc
mov
aaa
mov
dec
inc
dec
mov
jnp
sub
dec
cwtl
pop
in
iret
sti
pop
ss
sbb
inc
popf
decb
and
xlat
dec
mov
mov
xchg
cmp
outsb
pop
faddl
xor
or
lock
xor
inc
push
popl
and
jge
sbb
ret
sbb
out
cltd
and
fnstsw
aaa
nop
das
xchg
push
lea
or
in
jne
ja
iret
repnz
scas
dec
test
add
adc
fldenv
aas
mov
cmpsl
push
sbb
jno
and
mov
repnz
hlt
push
imul
jle,pn
adc
and
lods
mov
test
sbb
push
test
ljmp
and
push
push
push
adc
and
hlt
xchg
and
ds
sbb
ja
push
movsb
orl
push
ljmp
stos
lods
bound
mov
or
les
jae
cwtl
cmpsl
dec
inc
std
jle
ret
adc
pop
inc
inc
jle
lods
movsl
sbb
shrb
ficoms
jo
and
popf
mov
lods
and
or
pop
xchg
push
pop
popf
fbld
sbb
xchg
mov
mov
and
dec
inc
movb
in
adc
sbb
dec
inc
and
sbb
and
and
and
cmp
cmp
sbb
xlat
mov
jnp
int3
sahf
ret
dec
repnz
xchg
adc
mov
pop
cmp
jle
loop
inc
dec
jbe
and
js
sbb
leave
aaa
out
filds
cli
lock
add
hlt
and
data16
loope
and
sbb
ret
adc
sbb
repz
loopne
insl
jp
jno
mov
int
cltd
xor
lds
out
push
pop
and
test
and
icebp
adc
cmp
ffreep
lret
lds
movsb
and
add
mov
sub
sarb
pushf
rcrb
and
ljmp
lea
adc
jns
scas
inc
cmp
cmpsl
enter
sub
inc
push
mov
arpl
xchg
jbe
or
imul
lods
push
sbb
sub
push
out
aam
loope
stc
mov
mov
outsb
xor
and
jnp
iret
rcr
xchg
and
jp
cmp
cs
icebp
sub
cwtl
and
pop
and
mov
and
fcomps
sub
adc
aaa
push
xor
sti
and
pop
push
sub
fisttpll
xchg
xchg
and
xorb
cmp
and
addr16
sbb
daa
push
sbb
and
notl
out
test
fidivrl
mov
jp
mov
dec
imul
adc
jecxz
cmp
inc
pop
add
lret
lock
and
in
sbb
pusha
popf
shlb
add
or
or
data16
je
inc
movsl
add
ss
sub
cmp
and
adc
sbb
push
addr16
inc
sub
xchg
cmp
repnz
lcall
mov
sarb
sbb
xor
lds
mov
movb
fiaddl
or
mov
pop
mov
sub
in
negl
addr16
sbb
aam
sbbb
aad
and
movsb
xchg
xchg
cmp
gs
adc
sub
lcall
jp
call
add
push
pop
movsl
mov
shlb
stc
subb
xor
and
aam
or
adc
jo
push
dec
add
sbb
push
or
scas
pop
jae
mov
and
shrl
and
lds
push
sbb
enter
cs
jnp
adc
lods
add
and
mov
adc
fistpll
test
fs
cmp
scas
xor
xchg
and
frstor
inc
xchg
enter
jmp
cmp
push
pop
cs
mov
popf
cmpsl
sahf
mov
and
pushf
dec
jb
jecxz
adc
fisubrl
out
add
push
push
and
test
dec
sti
push
sub
push
je
pop
and
insl
shlb
gs
xchg
jo
lea
cli
mov
mov
sbb
mov
xorb
loop
add
loope
jmp
push
and
xlat
cmp
and
lock
js
loopne
inc
fs
and
repz
dec
xchg
push
and
push
int
cmpsb
lahf
mov
and
push
mov
cmp
lods
mov
add
insl
push
add
jg
adc
pop
cli
sub
xor
and
hlt
mov
loope
mov
mov
inc
jle
and
es
lahf
out
fcoml
and
hlt
push
icebp
push
ds
and
iret
mov
repz
or
sbb
in
and
and
push
sub
xchg
and
mov
inc
and
mov
rcr
xchg
cmp
sbb
or
outsl
and
mov
pusha
or
or
and
sbb
loope
adc
scas
or
js
xchg
andb
cltd
or
dec
leave
mulb
in
lcall
add
sub
and
push
mov
scas
movsb
sub
mov
sarl
jmp
sub
ret
xor
arpl
push
xor
inc
adc
and
jmp
mov
sbb
add
cmpsb
adc
adc
xor
mov
lahf
mov
xor
jae
or
sub
and
xor
mov
jae
int3
in
mov
mov
addr16
out
fcmovne
jle
inc
sub
mov
mov
push
test
in
lods
shlb
lret
mov
popf
add
mov
fnstcw
popa
cltd
dec
pusha
xor
sub
dec
and
xor
and
inc
sub
and
sub
insb
xchg
sar
sbb
push
nop
arpl
and
jbe
mov
and
test
dec
fsts
lret
iret
les
and
mov
fidivl
repnz
cmpsb
stc
lcall
out
mov
mov
pop
scas
cld
add
sub
mov
icebp
and
dec
mov
bound
add
push
stos
xchg
pop
jno
and
aaa
repz
pop
cld
lock
sub
jl
shrl
or
xlat
cmp
popf
mov
cwtl
push
mov
aam
and
cltd
jmp
and
fisttps
cmp
adc
out
sub
xchg
test
sub
leave
cld
mov
std
pop
sbb
add
lret
cmp
enter
aad
pop
xor
inc
or
in
setg
out
lea
lock
insb
pop
adc
jle
subb
add
nop
rolb
cs
mov
sub
mov
fs
push
stos
mov
dec
repnz
fcomp
out
and
mov
imul
mov
in
push
xchg
and
lcall
and
test
sub
mov
fwait
mov
jne
sbb
xchg
fimull
roll
adc
pop
add
xchg
and
adc
out
gs
imull
push
mov
sbb
mov
sub
test
cmc
mov
and
gs
mov
divb
pop
data16
inc
sbb
pop
and
pop
and
rcll
aad
insb
jmp
and
xchg
jns
mov
andl
jecxz
and
add
subb
adc
inc
shll
dec
repnz
pusha
stos
or
cs
fbld
and
mov
testb
test
add
cmp
mov
fs
and
and
cmp
jnp
and
or
imul
xor
cmpsl
xchg
and
and
or
xchg
jne
sbbb
xor
mov
and
in
pop
mov
xor
sti
insl
inc
cmp
outsb
and
dec
mov
shll
and
fld
aaa
mov
dec
int
xlat
test
mov
pusha
pop
scas
cltd
xor
sti
jp
push
cmc
outsl
pop
and
xor
fisubrs
adc
jae
mov
dec
jmp
mov
pop
jnp
rcrl
pop
shlb
or
mov
add
xchg
inc
stc
push
scas
iret
push
mov
rcr
fdecstp
xor
and
movsb
inc
and
and
insl
xchg
lret
sti
and
mov
test
dec
xor
lods
int
cwtl
scas
mov
jbe
stc
pusha
and
aaa
dec
pop
mov
cli
push
sub
ret
or
xchg
xor
fisubs
ds
xchg
push
and
movsl
addr16
cwtl
bound
and
fdivs
jle
and
push
loopne
in
das
sub
xchg
fmull
and
xor
loop
in
sbb
or
outsl
sbb
mov
loopew,pn
in
loop
out
jb
lahf
xchg
and
cld
mov
in
adc
mov
cmp
mov
sub
jno
and
mov
sbb
cmp
sub
les
insb
sahf
and
sub
sub
xor
ret
inc
pop
dec
mov
and
ds
je
jecxz
movsb
and
push
xor
xor
mov
and
pushf
pop
test
sti
inc
and
sbb
and
mov
lcall
cwtl
lds
xor
rcll
loopne
and
cmp
inc
in
or
out
inc
pop
cmp
cs
pusha
sub
mov
dec
rorb
out
lret
out
and
sub
push
mov
iret
jns
mov
out
enter
sub
lret
push
popa
sub
arpl
xchg
jb
mov
and
push
push
cmovne
pop
jp
and
lcall
xor
or
repnz
xchg
mov
xchg
lret
dec
dec
adc
cmp
pop
fadd
and
call
icebp
repz
or
mov
das
mov
push
fcompl
mov
pop
and
mov
push
inc
inc
cmp
lods
ret
loopne
xchg
adcl
mov
and
xor
stos
loop
outsb
mov
push
mov
fwait
mov
addl
mov
insb
imul
push
push
ss
out
jne
cs
mov
xchg
sti
push
fildl
in
aad
sbb
pop
and
js
and
push
sbb
xor
ficompl
add
and
xchg
dec
xchg
cmp
xor
inc
and
cs
mov
ss
mov
insb
and
into
movsl
and
sarl
fdivs
xchg
imul
sub
pushf
mov
les
lcall
cltd
out
shll
push
int3
mov
popa
mov
mov
test
pop
and
push
sbb
dec
lret
dec
adc
stos
mov
inc
and
and
pop
xor
imul
and
push
sbb
and
adcb
outsb
pop
xchg
mov
leave
call
int3
xor
jp
fistpl
pusha
stos
and
call
pop
aaa
xorl
mov
and
mov
cmp
mov
int3
out
sub
mov
sbb
movsl
lods
and
sbb
add
sub
mov
out
pop
arpl
ficompl
data16
cmp
shr
sub
sub
test
arpl
push
jle
add
mov
lea
loope
aam
and
ja
push
pop
popa
fs
and
sub
sub
dec
mov
mov
inc
in
aaa
int3
bound
mov
ficomps
push
cmpsl
mov
jb
mov
jnp
mov
adc
mov
push
loopne
pop
loop
mov
and
and
jns
sub
cmpb
xchg
and
mov
daa
jns
push
and
push
das
xchg
cmc
push
mov
push
clc
cs
sbb
mov
xchg
mov
cmp
sub
jnp
subb
mov
and
mov
std
js
iret
mov
sahf
cvtps2pi
dec
les
insb
fnstcw
lcall
pushf
pusha
and
jno
hlt
mov
inc
mov
and
adc
jne
cli
insb
inc
mov
push
mov
mov
and
dec
xor
and
cld
movsl
or
out
and
xor
out
sub
inc
loopne
and
mov
xor
into
lret
mov
xchg
clc
pop
adc
insb
lods
sbb
addr16
or
cmp
and
dec
inc
inc
cmp
jno
adc
cmpl
sub
sbb
jo
and
xchg
or
or
mov
push
and
push
add
repnz
imul
push
out
frstor
cld
mov
or
jno
adc
cmc
and
imul
push
mov
add
push
mov
andl
mov
or
adc
xchg
jg
ficomps
and
sti
dec
mov
popf
int
loopne
sub
jbe
dec
movsb
das
lods
dec
inc
push
leave
lock
mov
mov
cmp
jne
cmp
cmp
mov
loopne
sahf
add
lock
push
lcall
and
lds
repnz
push
and
xchg
or
and
and
sahf
adc
pusha
push
and
lret
std
cmp
sub
jp
ljmp
mov
fisttpl
jl
adc
jnp
sub
dec
mov
sub
sub
outsl
dec
mov
sub
shlb
lea
arpl
xchg
inc
movsl
jbe
cmp
and
inc
repnz
cmp
push
mov
sub
out
xor
fimull
repnz
cli
les
enter
lret
cmp
out
jbe
and
jns
adc
and
inc
add
inc
cs
fcoms
das
xlat
pop
cmp
and
and
and
outsl
inc
xor
adc
adc
add
lock
pop
test
jno
mov
fwait
add
enter
mov
loope
ret
test
test
cmp
lret
pop
aas
std
mov
add
sbb
dec
push
jle
cmp
dec
inc
cmp
cmp
push
fs
jmp
and
sbb
call
fcmovnbe
xlat
jmp
cmp
pop
xor
xor
ret
shrl
sahf
and
jg
push
outsb
pop
lcall
dec
adc
nop
lahf
fmuls
test
or
addr16
xor
loop
and
lcall
and
push
pop
fiadds
mov
and
in
mov
lahf
mov
push
into
clc
out
je
shll
cmpsl
sub
xlat
stos
scas
add
mov
cld
and
mov
or
in
inc
pop
cmp
dec
dec
int
andb
cmp
sub
iret
and
jge
cmp
inc
xor
sub
ja
inc
sub
push
leave
pop
adc
pop
dec
int
sarl
sarb
insb
addr16
dec
cs
iret
ljmp
push
adc
push
push
xor
mov
mov
and
jbe
xor
and
dec
xor
cli
ja
lods
sub
outsb
and
leave
fs
testb
xor
mov
lret
sahf
lea
push
aam
and
sub
rcrl
addb
movaps
and
daa
add
sub
int3
fldcw
mov
fdivp
into
shll
outsl
stc
xchg
scas
pushf
mov
subb
add
pop
inc
cmp
cltd
xor
lods
decl
mov
adc
es
xchg
leave
je
and
push
pop
in
sbb
and
mov
xchg
dec
daa
fbld
or
mov
inc
cmc
aad
push
popa
xor
rcll
mov
scas
dec
jmp
sbb
cwtl
jl
jnp
sbb
and
jg
mov
dec
mov
out
pushf
inc
int3
sub
in
mov
adc
test
add
testb
jmp
aas
dec
mov
fsubl
add
hlt
push
loope
adc
and
dec
lods
adc
int3
mov
sbb
fisubrl
test
aaa
adc
push
sti
test
and
inc
jne
hlt
clc
popa
and
ds
xor
push
xor
out
test
sub
xor
sub
bound
pop
je
or
or
sbb
ret
xchg
adc
push
adc
sbb
iret
movsl
jnp
push
insl
jbe
and
jo
cmc
outsl
mov
and
push
xchg
or
dec
cmpsb
push
fidivrl
sub
icebp
mov
push
js
sub
and
cld
push
jbe
fs
cli
movsb
dec
cmc
es
outsl
adc
jmp
and
xorb
sbb
es
sub
mov
adc
mov
sbbb
popa
icebp
mov
sub
and
popf
jle
mov
inc
fisubl
dec
push
es
in
sub
mov
add
adc
cmp
or
ret
or
sub
pop
mov
loopne
and
mov
pop
and
int3
jle
out
mov
dec
jns
inc
inc
xchg
xchg
pop
and
sbb
nop
jg
and
ljmp
lret
or
cmp
mov
out
mov
pop
rcrb
out
aas
and
push
push
xor
sub
lods
xchg
and
sarb
or
add
or
lcall
mov
arpl
lods
test
mov
and
das
sub
setne
or
and
mul
lods
dec
and
popf
mov
movsl
inc
and
inc
mov
iret
and
scas
daa
aaa
mov
repnz
xchg
insb
enter
mov
cmpsl
add
jp
and
jl
cmp
pop
jmp
leave
and
cmp
das
mov
jl
mov
jno
ret
test
pop
adc
and
scas
mov
outsb
fistl
out
add
xchg
repnz
imul
je
push
jnp
mov
jmp
mov
mov
outsb
mov
push
dec
xor
add
pop
jge
lret
cmp
push
jecxz
and
das
xor
cmpsl
sbbl
test
mov
push
add
and
mov
jae
and
mov
pop
and
fs
sbb
fimuls
pop
xlat
jmp
insl
add
fadds
sbb
and
fcomip
and
lcall
bound
push
jmp
sbb
and
in
add
mov
cli
sbb
nop
clc
in
sub
movsl
repz
cmp
dec
sbb
dec
xchg
fsubr
lods
and
add
mov
imul
andb
and
mov
xchg
or
gs
adc
cltd
hlt
mull
xor
add
sub
aad
sub
shll
fistps
mov
insb
pop
aam
dec
daa
js
mov
xorl
xchg
and
push
push
dec
and
in
mov
repz
mov
ret
jno
dec
scas
inc
mov
mov
fistpl
add
sbb
jmp
inc
adcl
repz
gs
or
jns
fcompl
rcrb
sub
stc
shlb
xor
arpl
incb
xor
int3
cmp
sub
cmp
cmpsl
outsl
fldenv
xlat
xchg
lea
fwait
xorb
and
and
push
daa
pop
adc
pop
repz
icebp
sti
sub
test
mov
scas
ss
mov
rcrb
and
cmpsb
jae
pop
aam
and
daa
dec
cs
ret
sub
lcall
push
sbb
jmp
mov
test
stos
adc
test
pop
sub
js,pt
insl
sub
iret
pop
sub
adc
fnstcw
and
and
les
lods
add
mov
xchg
inc
push
push
fsts
xor
inc
cli
jnp
xor
mov
out
and
jmp
mov
loope
nop
dec
xchg
ljmp
add
or
and
pop
xchg
ds
sbb
pop
cs
test
fucomp
dec
stc
loope
in
bound
out
sub
mov
je
xchg
inc
push
hlt
mov
add
fdivl
push
movsl
jns
and
mov
xor
inc
inc
popf
or
cmpsb
dec
push
mov
stos
cli
loope
scas
sub
mov
sbb
rol
sub
std
push
cmp
push
mov
cmp
xor
clc
movsb
lret
fisttps
sub
push
pushf
sbb
mov
and
xchg
mov
xchg
popa
ret
sub
xor
sbb
and
int
dec
sub
and
sbb
xchg
movsb
sub
arpl
mov
je
mov
insl
add
or
cld
fs
push
cmp
sbb
nop
push
loopne
or
mov
and
out
adc
daa
lds
cmp
push
pop
repnz
mov
in
mov
and
cmp
adc
cmp
mulb
and
cltd
out
ret
jle
sub
sub
sub
std
subb
inc
xor
push
fsubr
and
sub
shll
clc
mov
mulb
jbe
jmp
fdivrs
loope
and
dec
pop
lret
push
sbb
inc
adc
mov
fcompl
sub
mov
and
dec
push
popf
gs
or
xchg
leave
pop
add
xor
sahf
icebp
add
fdivp
aas
fidivl
sub
inc
jae
scas
pop
ljmp
xor
and
or
and
daa
bnd
inc
push
sbb
mov
negl
and
and
mov
outsb
cmp
movsb
pop
and
sub
fldcw
adc
push
xchg
sub
inc
test
inc
jne
mov
push
std
push
call
sub
dec
lods
andw
cmpsb
cmp
cld
or
cmp
cs
out
lock
pop
and
and
sbb
xor
fstl
fucomi
lahf
dec
hlt
cli
and
aad
cs
lods
orl
pop
xchg
adc
into
aaa
push
sahf
and
loope
rcr
mov
je
sbb
roll
and
sbb
in
or
mov
dec
divl
jo
popa
mov
fldenv
mov
pminub
and
cs
cli
imull
pop
pop
cs
and
data16
les
or
cmp
sbb
adcb
inc
adc
scas
cmp
and
sbb
out
xor
or
jae
fsubrs
sti
and
pop
fldlg2
adc
dec
fisubrl
mov
mov
pop
mov
mov
mov
jno
or
insl
push
loope
sti
jmp
in
fwait
inc
scas
adc
out
mov
xrelease
fstps
pop
xchg
mov
and
jns
add
and
dec
mov
negb
add
jmp
lea
subb
popf
loopne
arpl
mov
in
clc
mov
jge
jl
and
lret
sti
int3
sub
insl
and
mov
and
test
and
or
pop
mov
sub
cmpb
mov
push
jge
stos
pop
adc
mov
testb
cwtl
sbb
adc
arpl
xchg
test
dec
hlt
insl
daa
inc
jnp
jno
cmc
mov
sbb
add
sub
das
ds
and
or
xchg
and
mov
dec
or
dec
int3
ret
js
loopne
inc
filds
cmp
mov
push
andb
push
lods
call
mov
imul
adc
xchg
cli
push
pop
and
leave
sub
cmpsl
dec
orl
test
and
sbb
mov
pop
and
fcoml
pop
mov
or
sub
bound
xor
or
inc
add
out
cmp
cmp
inc
test
insl
movsl
ja
mov
je
cmp
jo
or
mov
xchg
test
popf
push
scas
aaa
push
ds
incl
mov
cld
sub
sbb
dec
add
ss
jmp
and
lcall
lret
xchg
push
pop
cmp
lds
push
and
dec
mov
sbb
lret
pmaxsw
jle
enter
and
inc
inc
mov
sub
add
and
repnz
movsb
jne
das
push
ljmp
ljmp
jle
cmpsb
push
fcmovbe
and
sbb
cmpsl
jmp
insl
mov
sti
or
xor
xchg
test
fimuls
shlb
xchg
and
dec
outsl
in
mov
mov
adc
aas
bound
pop
mov
pop
shlb
inc
push
push
inc
adc
mov
and
mov
outsl
and
adc
mov
inc
outsl
sub
hlt
shrb
fs
arpl
sub
jmp
push
mov
jl
scas
pusha
jnp
aas
add
push
mov
mov
cmp
lods
sahf
in
hlt
mov
and
xor
imul
popf
dec
and
adc
cli
cmp
xchg
call
icebp
shll
sbb
and
mov
and
sbb
es
dec
pushf
cld
and
lds
bswap
and
and
jl
pop
and
out
ret
inc
jnp
in
adc
and
mov
outsb
pop
push
xchg
jne
sbb
or
out
test
dec
and
adc
imul
and
xor
and
sbb
pop
test
std
jbe
notb
dec
pop
cmp
dec
sub
psubq
cmp
in
jecxz
jp
and
loopne
inc
xor
cli
and
bound
in
repnz
aam
data16
add
jbe
mov
push
icebp
popf
pop
das
lods
dec
and
scas
dec
cmp
ds
stc
and
xlat
adc
dec
xchg
pop
and
ljmp
mov
dec
aas
lcall
dec
inc
push
and
js
loopne
cmp
in
mov
mov
lds
clc
xchg
test
fidivl
aam
stos
lahf
movsb
scas
pop
sbb
shlb
pop
rcr
out
cmp
popf
and
add
test
sbb
sub
inc
aad
or
add
mov
add
cwtl
xor
xlat
pop
cs
lock
leave
and
icebp
enter
out
pushf
mov
add
test
sbbl
mov
push
and
ror
shrl
adcl
and
test
dec
cmp
mov
das
pop
xchg
mov
sub
not
and
cmp
cmp
daa
add
jle
inc
aam
js
xor
sub
loop
add
xor
push
andl
inc
ficompl
xchg
int3
pusha
sbb
ret
aam
cmp
nop
cmpsl
sub
sbb
jb
cs
mov
and
push
test
lock
int3
push
and
xchg
lods
sti
imul
mov
and
ljmp
and
dec
add
out
and
arpl
pop
mull
pop
sub
in
xor
or
xor
lods
add
add
dec
decl
jmp
loop
cwtl
fisubl
cmpsb
fldt
in
jmp
add
mov
inc
and
arpl
scas
lcall
enter
cmpsb
ret
mov
push
jecxz
pop
jno
ljmp
xchg
adc
push
and
shll
cli
and
insl
inc
mov
or
daa
stc
inc
pop
call
dec
xchg
int
nop
fisttps
push
and
mov
adc
fsubrp
and
cld
sbb
pushf
leave
pop
xor
xchg
xlat
sub
xchg
push
shrl
sub
mov
mov
sbb
add
ret
and
adc
mov
dec
pop
jbe
call
in
popf
jne
test
jae
inc
or
cwtl
sub
add
sbb
loope
test
scas
mov
mov
mov
sub
into
cwtl
rorl
mov
pop
dec
cs
and
loop
idiv
lret
outsb
sub
and
mov
pop
sbb
mov
xchg
pop
and
popa
fsubrl
sub
xor
push
adc
int
push
test
and
aam
mov
dec
stos
push
and
ja
call
mov
fimuls
push
and
add
sbb
and
sbb
mov
sub
mov
daa
aam
lds
jge
inc
dec
outsb
and
pop
flds
jl
push
dec
enter
and
lret
es
stos
and
add
sbb
sbb
cmp
or
and
insb
out
xor
dec
call
lahf
inc
and
push
push
enter
sub
and
shrb
dec
mov
arpl
sbb
dec
pop
out
xor
jp
push
and
inc
jecxz
and
shrl
mov
and
out
out
leave
mov
push
cld
mov
pop
and
loop
cmp
shr
ret
sbb
inc
sbb
cwtl
leave
add
int
mov
jg
pushf
sub
and
and
std
aaa
and
enter
stos
and
cmp
adc
xor
ficoml
lahf
adc
mov
loop
leave
dec
subl
insl
mov
out
ds
das
push
std
mov
inc
divb
and
rorb
test
xchg
jnp
ss
movsl
out
cmp
and
jecxz
adc
les
fsub
jle
repnz
or
mov
insb
and
lahf
add
adc
outsl
fisubl
jle
jg
add
scas
pop
loopne
and
inc
mov
cmpsb
adc
cld
fmuls
and
imul
addr16
mov
pop
pop
lcall
mov
jle
negb
sbb
pop
adc
shrd
or
cmpsb
clc
xorl
fisubrl
jp
and
mov
sub
mov
jne
push
dec
pop
out
scas
inc
insl
sbb
fcomps
cmpsb
push
addr16
aad
sub
xchg
mov
shll
pop
mov
and
jp
clc
test
push
leave
sub
sub
shll
sbb
jns
inc
inc
jle
sub
dec
inc
pop
jnp
mov
cltd
mov
pop
ret
push
jne
scas
sbb
in
cmp
in
cmpsl
cmp
mov
cmp
repz
add
or
xchg
and
or
mov
and
ret
mov
mov
mov
rorb
xor
add
enter
sbb
aas
or
sub
scas
js
xor
mov
mov
arpl
mov
and
cmpsl
shrb
outsl
pop
pop
jmp
jecxz
xor
jbe
and
add
xlat
call
pop
and
dec
stos
sub
pop
mov
mov
push
imul
xchg
and
fsubs
xchg
jg
in
add
das
and
push
imulb
sub
fs
or
movsb
xor
inc
imull
or
cwtl
fidivrs
add
sub
rclb
push
js
cs
ljmp
and
dec
cmpsb
lds
lahf
jno
cltd
jae
and
xor
and
fwait
xor
inc
cli
mov
out
mov
movsb
dec
stc
cli
stos
gs
and
adc
sub
push
add
sbb
xor
daa
pop
mov
fnsave
into
les
pop
mov
sbb
ljmp
fcomps
dec
push
and
mov
push
jae
movsl
dec
inc
cmp
cli
xor
xchg
sub
adc
mov
fistpl
movsl
pop
push
jb
sub
push
sub
imul
push
pop
das
es
loope
mov
and
mov
mov
and
movb
dec
imul
add
mov
or
lret
sbb
loop
cmc
cmp
xor
push
bound
lret
jnp
mov
jae
popa
aad
mov
out
pop
push
ret
jle
cli
pop
sbb
and
int
mov
ds
dec
pushf
cwtl
and
repnz
and
mov
and
mov
and
sbb
das
shl
and
mov
jo
stc
popf
call
pop
cltd
lds
and
mov
out
ja
shll
sub
dec
in
xor
jg
dec
dec
jno
cmp
mov
inc
and
jle
dec
and
mov
clc
and
int3
negl
xor
jp
and
arpl
cwtl
iret
test
and
jmp
mov
pop
arpl
lahf
jbe
insl
js
cmp
jno
test
and
ja
and
adc
out
push
test
mov
insl
repnz
sub
and
push
xchg
fidivrs
pop
or
push
add
push
rol
mov
jns
sbb
and
xor
ljmp
out
aaa
dec
repz
sbb
or
xchg
and
int3
adc
fistps
mov
mov
dec
sub
std
mov
xchg
fisubrl
xor
push
lds
push
sub
sti
enter
and
loopne
xchg
and
and
and
or
adc
push
arpl
ja
cmp
hlt
cli
fisubrl
dec
sub
sub
addb
lds
jo
dec
js
xchg
mov
cmp
in
fistpl
sbb
and
cmp
out
and
out
fldenv
imul
xorl
mov
adc
push
push
mov
gs
in
fmul
mov
fs
mov
or
fwait
sub
dec
sti
mov
mov
out
mov
and
test
test
negl
jo
sbb
mov
aaa
aad
and
lds
push
and
dec
xor
jp
stos
ljmp
rcrb
pop
sti
scas
out
mov
pop
sub
dec
add
ds
adcl
lods
xor
sbb
sbbl
scas
pop
sbb
dec
and
icebp
shr
cli
dec
dec
cli
pushf
jle
sbb
pop
mov
sub
stos
jmp
cmpsb
cmp
cli
cmp
mov
sbb
pop
aam
xor
popf
rolb
xor
mov
jge
call
inc
aad
test
push
cmc
test
and
faddp
in
cmpsl
flds
outsl
and
jo
mov
addb
cwtl
add
jp
push
test
pop
clc
and
xchg
xor
and
mov
scas
mov
movsb
sar
test
dec
push
xchg
repnz
mov
imul
in
fiaddl
inc
cmc
cs
xorb
enter
fcoms
mov
or
mov
dec
jnp
gs
das
aaa
cltd
scas
or
and
js
and
inc
cmpsl
jge
iret
and
mov
movsb
fldcw
and
mov
ss
pusha
cmpsl
mov
xchg
cmp
push
adc
in
mov
and
push
imul
and
add
dec
and
jne
and
sub
xchg
aad
sub
and
out
adc
hlt
nop
outsl
and
ds
insl
iret
pop
add
and
ljmp
call
out
adc
sbb
out
mov
fmul
ret
jno
sub
cmp
insl
cs
inc
jo
mov
cmpl
sub
jne
stos
sub
data16
and
scas
ret
jo
mov
sbb
cld
pushf
and
fstl
lds
cmpsl
push
sbb
dec
push
and
loop
adc
cmp
push
push
xor
and
repnz
sahf
xor
out
and
adc
rolw
insb
mov
int
cmp
sub
pusha
and
sti
aaa
andb
lcall
xlat
cmp
inc
rcll
scas
inc
pop
sbb
and
mov
mov
fidivrs
push
jg
adc
sub
out
dec
xchg
clc
iret
loopne
lods
test
lret
and
shlb
pusha
lret
xchg
xchg
sub
mov
arpl
cli
mov
in
and
pusha
andb
sub
mov
xor
cmpsb
and
inc
sub
push
dec
mov
jne
shlb
pop
and
arpl
pop
inc
lahf
mov
test
jo
pavgw
mov
cmp
cwtl
adc
sub
sub
pop
push
ljmp
adc
cmpsb
les
sti
inc
push
adc
out
sarb
stos
mov
imul
icebp
popa
lea
je
mov
mov
dec
mov
mov
xlat
int
and
scas
adc
and
sbbl
jl
ffree
cli
inc
out
inc
ret
sub
adc
xchg
dec
dec
leave
jo
popa
mov
pushf
dec
insb
lods
jne
dec
xlat
mov
and
add
dec
and
and
scas
push
jle
popf
out
jmp
movsb
pusha
mov
mov
dec
mov
dec
inc
popf
movsb
xchg
pushw
and
jno
lock
cmp
sub
push
sub
sbb
cmp
int
mov
test
jae
dec
sub
xchg
ss
xor
das
fcompl
cmp
sbb
push
push
out
cli
imul
or
dec
mov
dec
lcall
jns
push
leave
jmp
inc
add
push
pop
shll
pop
test
clc
pop
lods
mov
lods
bound
pop
sbb
cmp
inc
and
cmp
cmpsl
iret
out
and
mov
push
and
loopne
and
shlb
fwait
and
inc
std
sub
add
bound
jecxz
xchg
ret
cli
lods
dec
leave
mov
mov
and
rcll
in
and
add
out
or
ss
and
or
and
rcrl
dec
int3
sbb
and
jnp
push
and
mov
adc
sub
fists
and
leave
jmp
sub
fmul
add
pusha
lea
aad
stos
and
rcrb
or
shlb
sub
pop
jb
clc
cmp
fnstsw
jno
and
mov
adc
fidivrs
sahf
inc
cmpsl
aam
mov
dec
jb
lahf
fnstcw
sbbb
test
push
pop
je
pop
lret
sti
lods
dec
sahf
loopne
and
into
in
decb
aam
dec
aad
dec
or
fsubs
pop
in
sbb
mov
inc
mov
mov
stc
das
add
hlt
and
jmp
mov
sub
das
sub
in
cmp
and
popf
js
cmp
cs
xchg
xor
adc
inc
cmpsb
shll
aad
loope
jl
lcall
lods
xchg
and
adc
es
test
mov
lods
or
sbb
mov
sub
mov
insb
push
push
cltd
jns
nop
out
xchg
and
and
outsl
out
ja
clc
hlt
int3
insb
xor
ds
adc
fwait
test
xchg
cs
adc
sub
and
or
repnz
inc
or
or
and
loopne
cmpsb
sahf
fsubl
dec
mov
mov
popa
ljmp
and
xchg
imul
or
test
xor
sbb
loope
cld
adc
jae
cmpsb
das
cs
inc
push
repnz
dec
in
mov
rcrl
and
loop
roll
cmp
and
push
dec
fimull
mov
out
inc
rorl
loopne
sahf
xor
and
xor
sub
add
push
int
fisttps
mov
pop
enter
push
jae
mull
jb
and
popa
mov
fwait
adcb
je
sbb
cs
fisttpl
dec
test
jnp
insl
lds
add
je
movsl
add
sbb
push
and
and
pop
lret
push
outsb
cmp
dec
add
mov
gs
repnz
and
push
sub
jnp
mov
sub
cmp
inc
mov
dec
inc
inc
sub
sub
imul
les
fdivp
jbe
and
test
inc
leave
xchg
dec
sub
mov
cmp
sub
lods
jp
sub
scas
repnz
les
pop
loopne
xchg
insb
ja
push
sbb
dec
cwtl
cmp
insl
push
fs
cmp
sub
pop
ficompl
loop
mov
and
rcrb
and
mov
pop
mov
fsubrs
mov
inc
mov
imul
sub
scas
outsb
dec
pop
xor
jne
jnp
mov
fwait
ret
add
inc
mov
mov
xor
push
xchg
repnz
out
and
clc
test
sub
cmp
ljmp
in
dec
sub
fsts
push
cmp
cmp
popa
jecxz
push
iret
lock
cmc
repnz
and
fsts
and
inc
cmp
push
ss
jl
dec
xchg
popf
into
dec
and
in
mov
xchg
lods
mov
sub
loopne
mov
cmc
into
lcall
xor
pop
and
in
and
sub
lock
data16
jno
ja
stos
and
jbe
ss
stos
repnz
and
repnz
iret
out
xchg
and
imull
scas
mov
js
xor
out
xor
sub
call
add
mov
xor
jp
mov
inc
mov
mov
out
xor
mov
insb
dec
xchg
repnz
xchg
movsb
and
gs
dec
sub
out
icebp
push
adc
call
mov
inc
inc
cltd
scas
out
and
mov
repz
and
cmp
or
nop
sub
and
js
inc
jmp
divb
xchg
in
add
xor
sbb
out
push
or
fs
cwtl
lods
and
mov
data16
lods
cmp
and
lahf
ljmp
mov
scas
inc
cmpsl
loop
add
test
dec
movb
divb
subb
sbb
dec
push
xchg
dec
cmpl
das
or
and
xchg
mov
and
cli
jnp
into
rcll
dec
loope
out
adc
sbb
xor
mov
jnp
mov
xor
adc
add
mov
or
jmp
mov
test
clc
das
inc
xchg
fisttps
cld
and
loope
jae
outsb
inc
mov
add
iret
dec
jmp
adc
fldcw
mov
cmp
nop
pop
jno
xor
mov
xchg
test
or
cli
xchg
cltd
mov
sub
stos
lret
sbb
movsb
sti
push
xor
jns
es
mov
jnp
addr16
and
sbb
and
lret
dec
mov
and
ret
repnz
jae
loope
inc
test
jge
adc
mov
cmp
movsl
insl
adc
mov
and
cmpl
jle
addb
inc
pop
mov
repnz
sbb
and
cs
sbb
cld
dec
ss
adc
dec
pop
shlb
and
lcall
movsl
ljmp
scas
ss
adc
cmp
and
push
iret
imul
sbb
dec
push
jbe
outsl
pop
cli
out
cmp
cs
and
mov
addl
movsb
add
fs
fistpll
shrl
outsl
push
dec
push
ja
in
mov
jne
or
mov
jae
push
jae
cmp
loopne
ds
mov
cmp
lcall
jl
incb
mov
xchg
sub
and
mov
aas
and
lret
and
mov
mov
mov
ljmp
cltd
pop
arpl
pusha
pushf
push
pop
sub
ret
xor
and
inc
gs
leave
enter
subb
clc
das
rol
jmp
mov
aad
push
jbe
xchg
into
mov
test
shlb
jl
push
push
hlt
adc
jae
push
lods
push
or
dec
lods
bnd
or
and
mov
sbb
adc
fucomip
and
pop
xchg
icebp
negl
dec
mov
lret
cld
in
push
into
and
pushf
cmc
data16
icebp
addr16
test
jmp
cs
nop
add
mov
aad
sub
imul
mov
outsb
call
xor
fs
cs
jge
arpl
jmp
imul
mov
out
jnp
in
test
jbe
mov
int
mov
mov
popf
add
lcall
jl
jnp
jecxz
imul
xor
enter
xchg
pop
adc
add
pop
jae
cs
ss
rep
pop
das
dec
into
cmp
jo
adc
inc
fsubr
and
imul
and
inc
pop
lcall
push
inc
push
pop
lods
fistps
call
pop
cmp
mov
cli
clc
sub
lret
sbb
stos
xor
dec
pop
adc
scas
and
mov
lahf
out
lret
movl
cmp
sbb
cld
or
aad
into
loop
push
cmp
and
in
sub
mov
cmp
jp
lcall
leave
ret
sub
je
and
loopne
mov
and
sub
push
mov
loop
ljmp
in
sbb
and
hlt
scas
add
mov
cmpsb
repz
dec
outsb
shll
movsb
dec
je
xchg
stos
jecxz
pusha
xor
mov
cmc
jmp
and
lret
insb
cmp
divl
lea
jnp
pop
popf
or
sub
popa
xchg
sub
add
pop
int
and
or
xor
out
test
bound
in
and
andl
mov
nop
and
and
mov
subb
and
push
out
and
pop
fwait
test
sti
repnz
mov
cmp
loop
and
scas
dec
push
pop
xor
xchg
mov
push
add
enter
and
sub
stos
add
movsl
mov
scas
jmp
mov
sahf
mov
mov
or
push
roll
and
iret
and
pop
adc
lods
jmp
push
xor
data16
mov
xchg
push
and
ja
and
push
daa
dec
es
frstor
mov
lods
pop
cwtl
and
daa
push
and
dec
in
psllq
dec
and
and
jmp
xchg
hlt
and
shll
and
jns
sbb
imul
pop
lods
dec
and
push
mov
or
stos
or
and
adc
mov
faddl
in
pop
inc
insl
and
loope
and
jge
xchg
lea
sbb
inc
push
sbb
loope
mov
scas
sub
lea
cs
dec
and
cmpsl
mov
pop
dec
xor
inc
pop
xor
clc
mov
mov
lret
and
mov
addr16
and
mov
roll
and
xor
push
lret
lods
mov
fisttpll
jno
sbb
insb
cmp
sub
imul
les
in
cltd
test
iret
or
adc
push
sub
call
push
mov
push
xchg
mov
lret
dec
xchg
inc
xchg
xchg
xorb
aad
and
and
pop
std
in
xchg
das
sub
cmp
add
mov
pop
shlb
pop
aaa
aad
and
aam
xor
jnp
adc
jl
inc
cmp
dec
push
enter
sub
int
sub
pop
cmp
pop
jbe
inc
push
mov
pop
or
dec
addr16
add
and
out
subb
mov
loopne
repnz
add
push
aaa
dec
scas
andl
inc
pop
in
push
and
cmp
scas
shrl
das
and
fs
and
mov
mov
xlat
xchg
repnz
pushf
sub
xchg
addr16
and
or
jl
adcb
ret
and
inc
adc
addr16
and
pop
mov
and
xchg
jne
stos
pop
mov
fucomip
testb
sbb
sti
imul
push
cmpsl
outsb
and
test
lret
sbb
les
xchg
and
cmp
adcl
jo
and
jecxz
pusha
mov
fbstp
push
addr16
sbb
dec
cmp
imul
adc
push
add
and
dec
sub
pop
xchg
pop
pop
and
into
xchg
push
inc
adc
mov
sbb
mov
imul
add
arpl
push
or
js
pop
mov
cmc
and
inc
dec
sub
clc
pop
jmp
outsl
dec
inc
and
lahf
stos
dec
xor
and
and
xchg
aaa
mov
and
xor
sbb
ret
dec
andb
repz
cmc
jbe
mov
icebp
gs
bound
xor
jp
cmp
inc
and
and
leave
movsl
xor
pop
and
rcrl
mov
insb
lahf
test
dec
popa
loope
and
jb
leave
and
xor
push
lods
sbb
sbb
int
in
shlb
and
dec
dec
mov
in
and
bswap
pop
dec
jmp
and
xchg
cli
and
xchg
sub
insb
dec
negb
push
jp
add
push
lea
cli
ret
popf
mov
loope
push
test
xor
or
or
movsl
pushf
int3
jns,pn
push
mov
push
mov
jnp,pt
mov
sub
jle
vpaddq
mov
pusha
test
add
ja
push
gs
pop
cmp
mov
sti
icebp
mov
adc
mov
loopne
decb
hlt
mov
fldl
les
pop
adc
inc
daa
mov
dec
and
xor
adc
xor
inc
fisttps
lock
cwtl
xlat
and
or
dec
into
mov
stos
cmp
outsl
or
das
js
jmp
and
push
iret
xchg
ret
xor
adc
jle
lcall
das
ja
jno
fimull
mov
xchg
fdivp
sbb
out
mov
push
jns
icebp
adc
and
lods
mov
negb
addr16
jg
dec
loopne
and
or
nop
dec
in
adc
inc
leave
es
adc
stos
push
or
cmc
and
inc
ds
mov
push
test
inc
ljmp
sbb
cs
negl
in
or
aad
dec
jae
insl
sub
ds
ret
mov
lretw
fsubl
mov
push
movsl
mov
mov
add
mov
xchg
inc
stc
push
repnz
cld
sbb
or
aam
insb
outsl
pop
cs
jmp
sub
sti
fisttpl
xor
and
or
aas
and
lret
sbb
cmp
and
int
fsubs
add
rorb
jl
dec
inc
popa
and
xor
and
jb
fdivrs
inc
and
movsl
movsb
scas
mov
mov
mov
loope
push
popf
je
or
jp
test
cmp
push
push
into
and
sbb
stc
push
loopne
cmp
sub
and
push
cmpsl
dec
lds
stos
cmp
add
test
dec
xchg
lret
sbb
cmp
adc
or
nop
inc
clc
insl
cltd
add
adc
imul
andb
shll
aas
xor
jns
sub
dec
inc
jo
iret
enter
and
sbb
aaa
and
mov
popa
xor
clc
ljmp
and
loope
push
inc
sub
out
and
pop
lods
cli
mov
mov
and
mov
adc
pop
dec
and
jl
jo
pop
pop
and
popa
cmp
or
icebp
dec
aas
and
add
movsb
and
mov
fbld
mov
addr16
mov
mov
aaa
popa
les
inc
jl
dec
mov
adc
dec
in
stos
repz
mov
sub
cmp
outsb
jl
cmpsl
jne
dec
sub
ss
sub
add
imulb
pop
movq
push
fadds
out
std
icebp
adc
sahf
add
mov
and
call
jae
stos
pop
sub
mov
jecxz
inc
or
das
mov
jnp
dec
cmp
sbb
fcomi
outsl
and
add
in
addr16
mov
cli
scas
imul
ss
mov
push
and
faddp
into
jb
sbb
adc
stos
xor
cld
jmp
push
sub
jae
and
push
aas
mov
add
push
call
and
and
adc
insl
int3
clc
fbld
xor
jge
stos
dec
xor
ljmp
daa
mov
and
scas
and
mov
mov
sbb
sbb
aad
cltd
mov
sub
xchg
sub
push
adc
jp
cmc
cmp
mov
sti
rclb
pop
push
jae
shll
inc
pushf
insb
icebp
movsl
xchg
cmp
outsb
cmp
enter
or
repz
mov
and
push
jmp
add
and
mov
pop
fs
sub
cmpsb
roll
lods
sbb
mov
popf
push
and
fcoml
negb
jl
cmp
add
push
dec
and
lret
aam
jb
popf
frstor
pop
cwtl
fs
and
xchg
jge
adc
inc
mov
sub
jg
and
lret
xor
faddp
aaa
xchg
fisubl
nop
adc
and
bnd
and
pop
mov
push
das
pop
int
sub
enter
dec
icebp
mov
addr16
mov
dec
lods
and
xchg
out
xor
orb
daa
or
jmp
inc
xor
xchg
cmp
dec
in
dec
jmp
push
xor
cs
add
and
idivb
aaa
sub
ret
adc
fsts
fs
push
jns,pn
out
mov
and
xchg
cmp
fsts
sub
imul
sub
jecxz
repnz
ja
lods
cs
jo
mov
out
stc
add
mov
and
adcl
push
and
es
int
out
mov
mov
jne,pt
sub
in
or
and
mov
xchg
gs
bound
mov
outsb
call
jg
jae
inc
insb
mov
ret
push
cmp
call
push
and
jo
adc
add
and
adcb
fistps
loope
lret
ljmp
mov
rclb
push
xchg
mov
rorb
pop
inc
je
jp
mov
adc
cld
loop
pop
nop
cmp
shr
cmp
aaa
mov
cmp
rcll
pushf
rcrb
popa
sbb
sub
xor
decl
cs
stc
out
jo
outsl
push
and
sub
cmpsb
mov
or
pop
and
mov
jb
dec
test
fimull
sbb
loopne
mov
popf
mov
and
and
and
fimull
popa
inc
shll
andb
loopne
adc
in
dec
in
loop
or
cld
push
and
cmp
fs
test
and
cltd
mov
sti
scas
add
stc
cli
and
xor
test
dec
ljmp
enter
sub
push
or
shlb
sahf
sti
mov
arpl
push
jbe
cmp
test
test
mov
sahf
xchg
movsb
sbb
sbb
or
and
xor
rep
add
add
das
cwtl
rorl
xor
test
and
ss
cmp
mov
dec
mov
add
jne
out
mov
push
xlat
and
pushf
cmp
icebp
repnz
adc
push
sti
and
jnp
and
ret
sbbb
push
xor
and
or
outsb
push
inc
and
jne
xchg
mov
fwait
and
mov
and
lahf
js
and
mov
mov
and
mov
repz
scas
cmpb
mov
fbld
cmpl
and
dec
movsb
lock
in
xor
das
sbb
add
scas
adc
sub
std
mov
ss
jp
jg
out
sub
arpl
lods
into
jmp
jl
pop
fcoms
mov
add
popa
push
jp
sarl
lcall
test
movsl
aad
and
xchg
mov
mov
lods
jb
aad
ret
lock
stos
push
sbb
pop
pop
adc
and
lahf
sarl
out
jae
bound
testl
sbb
gs
dec
aad
pop
jmp
adc
xchg
mov
xor
jp
out
xchg
inc
xor
movl
pop
push
and
shl
dec
mov
cli
insb
cli
cmp
sub
or
push
and
test
inc
and
cmp
pop
sbb
and
in
ds
scas
mov
add
mov
inc
xor
repnz
lcall
lret
jp
pop
sub
pop
bound
or
cli
imul
pop
jo
sbb
push
adc
popf
leave
roll
bound
sub
lret
sub
and
mov
inc
push
jmp
int3
sbb
and
jns
and
outsl
mov
mov
and
jne
mov
push
sub
add
leave
mov
call
mov
inc
cmp
and
in
xchg
dec
inc
shlb
and
and
fsubs
daa
cwtl
sbb
lea
cmc
mov
and
xchg
cmpsb
mov
fmuls
jne
in
pop
and
pop
adc
and
inc
and
js
xor
mov
iret
loop
sub
inc
addr16
jg
jno,pn
sbb
mov
xchg
push
nop
rcll
jbe
adc
inc
adc
lods
fs
and
cmp
jno
dec
aam
je
nop
sbb
xchg
pop
es
and
out
add
lret
ljmp
pop
jle
pushf
repnz
mov
push
inc
cmpsb
xchg
lahf
sbb
push
and
xorl
jo
ret
daa
adc
and
faddl
mov
lahf
insl
ds
jo
add
loopne
xchg
and
mov
sbb
loope
in
scas
cld
sbb
scas
push
adc
std
xlat
dec
cmp
notb
pop
mov
and
loop
jo
lret
scas
and
loopne
jmp
pop
mov
hlt
bound
sbb
push
dec
sub
fisubl
lcall
ja
fs
cs
sub
adc
adc
cmp
and
sub
push
ljmp
adc
int3
test
into
sbb
les
sub
or
dec
hlt
and
pop
jo
inc
mov
pushf
push
pop
push
push
fsubs
and
scas
ret
jnp
and
mov
xchg
stos
andb
sbb
pop
test
shlb
or
push
push
pop
xor
addr16
inc
pop
inc
push
and
push
test
scas
sub
fidivrs
arpl
js
inc
cmp
pop
test
in
paddusw
adc
push
jmp
pop
adc
pop
scas
sbb
xor
add
repnz
xor
dec
stos
sub
xchg
lds
lock
pop
adc
cmp
pop
and
and
aas
jmp
mov
leave
and
rcl
mov
clc
pop
pushf
push
bound
and
mov
aaa
icebp
and
stos
inc
xlat
jae
ss
and
or
test
cmp
insb
outsb
cs
jno
jne
shr
and
mov
or
add
jmp
ja
xchg
jl
stos
xchg
test
push
std
in
push
aas
jae
ds
sub
sarb
pop
idivb
jecxz
stc
data16
ret
xor
mov
and
je
pop
and
mov
int3
jl
lods
cli
xor
jg
push
cmp
addb
adc
and
imul
ret
jne
and
cmc
jo
jbe
and
sbb
aas
in
lcall
mov
pop
and
int3
sbb
fistl
out
stos
adc
or
pop
lret
and
imul
out
sbb
repz
cmp
mov
jl
and
mov
jo
clc
sbb
and
sub
xchg
and
or
adc
and
test
xchg
roll
aad
mov
add
and
push
sbb
cmp
aam
sbb
outsb
and
mov
loopne
push
sub
xchg
clc
or
mov
dec
roll
sub
dec
pop
and
jmp
imul
sti
xor
sbb
and
add
or
lea
mov
pop
aas
popf
mov
jg
ret
push
and
xor
pop
xlat
jge
sbb
and
stc
add
push
stc
inc
and
ficoms
fyl2xp1
outsl
and
adc
and
lret
adc
add
scas
ss
pop
and
add
fiadds
push
shlb
test
mov
cmpsl
xor
dec
cmp
in
mov
pop
adc
daa
nop
mov
or
and
je
adc
popl
xchg
lcall
lahf
jne
cwtl
adc
push
jnp
pop
cmpsb
hlt
das
sbb
in
and
stos
popa
inc
and
cmp
adc
fldenv
add
aas
jo
and
clc
mov
and
lret
jbe
push
and
ss
adc
cmp
and
or
inc
mov
add
stc
jmp
adc
and
fisubrs
nop
and
iret
push
shl
add
and
ss
data16
sbb
sbb
test
ds
fisubs
stos
orl
mov
or
loopne
jp
inc
movsb
int3
pop
leave
pop
jae
inc
jl
jge
inc
and
and
fmull
lcall
jo
rcl
jnp
lock
xchg
xchg
pop
ljmp
or
stos
loope
mov
and
xlat
fisubs
mov
cld
js
jae
fwait
push
xchg
mov
xchg
iret
insl
and
and
loop
je
lret
das
dec
cld
cmp
xchg
in
movsl
imul
leave
shl
mov
and
popa
adc
int3
and
jle
pop
scas
inc
mov
std
aad
sub
and
fisttps
and
ja
stos
and
jp
xor
or
hlt
xlat
push
push
xor
and
arpl
xor
je
pop
mov
push
lock
inc
and
xchg
sti
mov
movb
mov
and
lret
in
cmp
or
mov
leave
jbe
and
add
pusha
and
sar
sub
xor
sbb
aaa
push
inc
and
negl
sub
cmp
rol
out
sub
pop
arpl
jge
add
mov
sub
cmpxchg
and
and
in
xor
push
mov
lea
repnz
addr16
and
ja
sbb
jo
and
test
enter
sbb
aas
iret
pop
and
mov
and
pushf
into
fidivrs
add
daa
sub
mov
mov
les
jge
mov
loop
push
andb
or
add
loope
jne,pn
aas
fidivrl
fwait
cmp
test
ret
in
test
jnp
fs
sbb
xchg
ja
ret
test
push
and
and
out
or
cwtl
dec
rorb
and
lret
mov
cmp
push
lahf
fs
or
lock
mov
xor
scas
sbb
out
out
pop
lahf
popf
ljmp
mov
cs
dec
fwait
and
jg
jo
pop
and
mov
dec
jae
cmp
mov
sub
jle
sbb
lcall
jno
push
icebp
xchg
mov
mov
aad
repz
mov
sub
clc
sti
sub
ficompl
data16
mov
and
sub
mov
mov
andb
not
sub
cmp
sbb
in
rcrb
xchg
and
cmpl
sub
mov
out
mov
inc
jp
cmp
inc
pop
jae
leave
push
sbb
fcoml
and
and
insb
jg
dec
fimuls
and
popa
mov
andl
xchg
lret
movsl
int3
cmp
jmp
test
and
inc
mov
inc
mov
sbb
bound
jns
out
fsubl
and
fucomi
inc
xchg
mulb
loopne
ret
cmp
insl
add
push
inc
int
mov
inc
popf
sub
sub
pop
cli
jge
xchg
insl
adc
fistps
sub
add
inc
and
sti
ja
push
or
push
and
mov
cmpsl
and
sub
jb
cmp
addb
add
inc
inc
or
cs
sbb
xchg
jmp
dec
mov
mov
cld
sar
push
mov
lods
xor
rorl
adc
lret
outsl
fs
and
push
mov
test
imul
xacquire
hlt
xor
scas
and
jne
cmp
jmp
cmpsl
sub
push
push
stos
das
jbe
xchg
or
and
js
xchg
mov
sti
mov
ror
jns
and
cmp
add
out
push
xor
push
jno
push
repnz
xchg
mov
push
mov
dec
push
pop
stos
inc
adc
sub
lods
adc
mov
dec
stc
and
xchg
mov
dec
and
push
nop
mov
dec
aas
inc
and
out
pop
insl
and
ds
dec
and
movl
add
and
testl
and
leave
negb
inc
ret
ljmp
mov
sbb
jo
nop
pushf
bound
mov
out
adc
push
jns
push
adc
or
sub
jg
scas
add
and
loopne
pop
movsl
nop
repnz
sbb
sub
sub
push
dec
inc
xor
and
loop
xchg
outsb
lret
jle
adc
cmp
jge
push
xor
mov
sti
xchg
sahf
fisubs
loopne
popa
cs
add
mov
and
and
push
mov
int
lea
test
enter
out
and
lret
ja
imul
mov
in
mov
ds
or
pop
mov
mov
fdivrp
ss
mov
lds
dec
inc
fxch
mov
cltd
pop
jmp
outsb
ja
in
push
insl
pop
and
push
dec
jno
and
xchg
cmc
mov
in
push
jo
into
lea
pusha
ret
sub
mov
jns
and
lds
add
sub
stos
sub
xchg
shrb
sbb
int3
add
mov
pop
jnp
and
cs
push
cmpsb
call
xchg
out
scas
subl
repnz
and
xchg
jns
lds
sbb
xchg
xchg
imul
and
push
test
and
scas
xor
icebp
mov
sti
add
add
pop
mov
test
add
fistpl
out
fimuls
shlb
xchg
aaa
inc
fiaddl
push
jbe
and
add
out
and
outsl
pop
in
fisttpll
ljmp
outsb
sarl
and
or
mov
fwait
test
je
imul
and
sbb
mov
enter
adc
fisttpl
dec
jns
lea
sub
insb
dec
dec
daa
jecxz
xchg
nop
lock
subl
and
push
repnz
fcmovnbe
lahf
and
xchg
xor
and
aas
mov
or
pushf
and
mov
pop
aaa
out
and
xlat
test
adc
jmp
out
xor
imul
sbb
mov
mov
lcall
leave
and
push
int
and
and
scas
xor
nop
and
xchg
sub
dec
lahf
xor
rorb
and
ret
cli
fwait
shll
xchg
aam
cmp
sbb
fistpll
test
std
pop
xchg
lea
mov
nop
idivl
dec
and
scas
jp
sahf
xchg
inc
pushf
leave
or
leave
pop
insl
movsb
cli
test
sub
aaa
mov
xchg
and
push
movsb
lcall
and
testb
dec
ret
push
js
mov
sahf
lea
and
or
add
outsl
sahf
dec
fs
xor
xchg
push
dec
pop
sbb
and
mov
add
cmp
pop
cmpsl
mov
dec
sbb
cmpsb
aam
fcoms
xor
dec
jle
sub
and
mov
xor
pop
out
mov
push
adc
lods
repnz
dec
or
and
pushf
mov
sbb
cs
cmp
xor
push
cltd
rol
pop
aaa
clc
and
push
test
mov
fstpt
pop
dec
inc
leave
xor
pop
add
daa
loopne
repnz
cmp
pushf
aas
add
jecxz
iret
jmp
mov
cwtl
call
push
xor
and
or
xchg
adcl
cmpsb
sub
push
daa
and
rolb
adcl
decb
popa
nop
ds
and
icebp
lods
cli
je
inc
mov
inc
sub
outsb
stc
loope
and
mov
mov
ret
xor
and
movsl
adc
and
adc
out
sbb
cli
and
sbb
xorl
lcall
insl
sub
lret
inc
dec
int3
in
ret
and
in
fmull
xchg
cli
xor
cs
push
mov
xchg
mov
push
cs
inc
sbb
loope
hlt
inc
scas
gs
jl
cld
push
mov
sub
addr16
pop
testb
pusha
sub
inc
cmc
loop
push
or
xor
xchg
jb
push
mov
and
mov
cld
sub
lcall
popa
addr16
sub
and
pop
and
inc
jl
mov
hlt
sub
and
pop
xchg
shr
push
ja
sbb
adc
test
int3
and
loopne
sbb
loop
leave
sbb
cmpsl
jp
sbb
xchg
jmp
and
pop
inc
mov
mov
into
pop
inc
shlb
in
mov
out
cmp
fs
out
arpl
rolb
jb
cltd
popa
push
xchg
and
xchg
or
pop
into
insb
and
aam
movsb
jns
mov
jno
enter
sub
cld
sub
sub
jbe
and
xchg
mov
cltd
and
pminub
inc
push
cld
insl
mov
and
mov
mov
mov
pop
xchg
repnz
and
test
hlt
addl
lahf
sub
xchg
test
pop
sbb
loopne
fucomip
push
icebp
jp
mov
push
mov
repnz
or
and
cmp
aaa
adc
or
test
ret
data16
adc
xor
frstor
dec
sbb
outsb
xor
in
adc
mov
push
mov
and
xor
and
cmpsb
mov
inc
test
cmp
pop
fstpl
and
add
das
and
idivb
cmp
lods
inc
lock
dec
test
xchg
sbb
cwtl
mov
cli
dec
fcompl
pop
lock
lahf
mov
mov
ss
leave
and
pop
test
pop
pop
and
mov
es
lahf
push
shrb
ljmp
dec
sbb
lcall
push
push
inc
test
sbb
xchg
in
mov
mov
mov
jne
clc
flds
push
or
cli
mov
pop
aas
jg
and
rclb
test
idivl
imul
sub
jno
xchg
andb
add
xchg
and
dec
gs
in
sub
int
clc
xor
sub
jbe
inc
sub
ljmp
mov
and
mov
addb
dec
rorb
and
pop
cwtl
or
cmp
ficompl
repnz
sbb
add
adc
and
in
dec
repz
sub
rorl
dec
fstps
inc
int
mov
pop
and
xchg
cmp
clc
and
add
and
sub
ljmp
test
xor
jae
pop
push
xchg
inc
add
addr16
out
push
and
jg
fildll
and
aaa
sbb
mov
and
cld
add
fldcw
sti
cmp
cmpsl
test
mov
repnz
add
mov
xchg
inc
push
jnp
pop
lcall
in
sbb
scas
xchg
cmc
cltd
add
jnp
add
jb
and
sub
cwtl
inc
mov
jmp
cli
xchg
inc
or
sarb
sub
iret
add
cs
sub
or
jmp
and
and
and
fsts
push
jecxz
int3
and
and
and
lods
cmp
mov
outsl
loopne
pop
jecxz
dec
mov
imul
call
mov
cld
ds
aas
inc
pop
pop
cmc
call
push
ljmp
cmp
and
pusha
adc
fs
push
jae,pn
lea
xor
shrb
pop
adc
ret
imul
movsl
lods
in
insl
and
cwtl
jp
and
push
ja
inc
cmpb
sbb
mov
pop
repnz
aad
and
pop
sub
xchg
stos
sub
and
loop
mov
xor
int3
outsb
dec
cmp
add
and
sahf
mov
js
and
push
xor
out
jle
and
inc
push
jb
int
mov
negl
outsl
xor
stos
xorb
sub
add
test
popf
or
aam
push
sub
mov
mov
loope
fdivs
mov
or
sub
ja
orl
cld
imul
popa
in
pop
lret
sub
cmp
test
and
daa
inc
daa
fwait
sub
sub
test
lcall
mov
mov
dec
rcl
pusha
xlat
mov
and
adc
mov
test
sub
jle
or
or
stos
out
or
lods
stos
cmp
ret
mov
repnz
mov
xchg
and
ja
cs
mov
clc
and
and
aas
adcl
stc
mov
mov
jb
push
cmp
insb
xlat
xchg
cmp
cmp
and
inc
mov
aaa
ljmp
inc
push
hlt
and
fnstenv
mov
lret
mov
das
sub
enter
cmpb
test
mov
and
divl
push
dec
pushf
les
out
cmp
or
es
push
in
fistpl
fsubr
xchg
fstps
icebp
pop
inc
cmp
scas
mov
lret
repz
lock
push
dec
xor
subb
sbb
pop
and
imul
data16
sub
dec
sub
sub
cwtl
pop
pushf
jg
inc
call
fmul
enterw
inc
fcomi
fcomps
scas
xor
imul
test
out
mov
jns
and
push
mov
mov
dec
in
ljmp
cs
imul
jbe
loop
xor
stos
ja
push
pop
push
cli
push
imull
repnz
or
cmpsb
sub
push
cmp
sbb
sbb
aad
push
sub
push
jns
xchg
gs
sub
mov
jmp
inc
scas
ljmp
pop
ret
repnz
and
cld
loop
insb
in
push
and
aas
mov
cmp
push
xchg
push
je
sub
mov
xchg
add
inc
sub
mov
jb
repz
ror
mov
shll
stos
sub
inc
pop
out
push
fwait
and
ret
and
add
jp
add
clc
out
hlt
and
aam
fs
dec
push
push
fs
mov
xor
imul
jge
sub
inc
std
or
popa
int3
pop
gs
push
cmpsl
mov
test
ja
adc
pusha
jno
outsl
jg
and
jb
dec
push
mov
andb
mov
push
and
mov
and
test
jg
and
rolb
dec
daa
imul
jmp
in
cvtdq2ps
mov
mov
and
sbb
incb
xchg
clc
jnp
fwait
mov
das
cld
leave
xor
and
fsts
dec
cwtl
xor
iret
jnp
fists
pop
xchg
and
je
pop
sub
insl
inc
mov
pop
push
lods
cli
push
mov
imulb
repnz
cmp
add
sbb
popa
pop
test
and
shlb
sub
push
mulb
nop
mov
push
mov
ret
and
mov
pop
out
lds
mov
add
pop
jp
rolb
mov
hlt
xchg
xchg
cs
bound
insb
movsl
xchg
frstor
or
xor
or
in
ret
jecxz
jbe
mov
pop
and
fisubrs
or
jo
and
and
pop
xacquire
or
jge
add
push
and
jno
xor
out
lods
in
cld
fsubl
inc
mov
dec
dec
and
xchg
loop
nop
pop
addl
popa
adc
or
stc
fwait
sbb
ret
imul
test
adc
jno
xor
xor
jmp
add
inc
loop
js
push
sbb
sub
cmpsl
rcr
outsl
movsb
loopne
jecxz
cs
xchg
ja
adc
incb
or
pop
cs
lret
sbb
cltd
dec
and
adc
mov
mov
jp
jmp
sub
inc
rorl
jae
sub
pop
and
pop
in
flds
xor
lret
inc
cmp
mov
test
or
ss
and
sub
sub
jns
and
ja
xor
enter
sub
adc
shlb
scas
outsb
arpl
les
jbe
sub
mov
test
and
addr16
dec
jb
adc
mov
test
mov
jle
repnz
aam
dec
loop
aaa
cltd
xchg
jg
sub
fsubrs
call
icebp
enter
push
cmpsl
mov
mov
and
sub
ljmp
pop
addr16
lcall
mov
mov
out
pop
ret
mov
xchg
cmp
jno
nop
sbb
outsb
inc
pop
jne
cmp
and
adc
and
push
in
adc
out
jge
test
push
push
mov
lea
and
and
lret
fistl
icebp
jo
dec
mov
mov
and
mov
cmp
xlat
sub
xchg
inc
pushl
test
lret
nop
add
aaa
imul
aad
pop
add
test
mov
sbb
jg
movsb
fsubr
xchg
jno
and
fucom
sbb
call
sub
mov
shr
mov
je
loop
mov
das
popa
sub
add
push
shrb
and
push
dec
and
hlt
adc
mov
mov
cwtl
shlb
clc
inc
mov
dec
and
stos
stos
lea
and
pop
ret
pop
iret
sahf
out
sub
idivl
out
cmp
inc
insl
mov
stc
aad
ss
xchg
icebp
jl
gs
mov
cmpsl
pushf
xor
xchg
sti
or
leave
loopne
in
and
add
pop
sbb
or
cs
mov
scas
icebp
and
mov
aas
jbe
lea
sub
into
lds
ja
in
sub
scas
mov
repz
mov
sbb
or
mov
stos
mov
inc
jge
and
daa
int
test
mov
pop
add
outsl
outsb
pop
aam
addr16
popf
out
sub
push
add
sbb
scas
out
jge
and
or
outsb
mov
test
and
push
lock
push
jb
and
cmpb
push
ljmp
jge
xor
xor
push
sub
xor
and
xchg
dec
ja
push
and
push
fcoml
daa
enter
addr16
stc
cmpsb
xor
add
test
mov
out
jmp
es
and
mov
ja
das
rorl
or
dec
pop
xchg
repz
adc
mov
push
push
movsl
and
subb
sub
and
insl
xchg
inc
pop
mov
push
mov
push
leave
add
aam
cmpsb
lods
mull
sbb
xor
cmp
push
and
nop
int
pop
push
in
repz
mov
and
cmp
fdivp
aaa
and
ds
into
incb
imul
mov
mov
shll
and
mov
fldl2t
and
sub
mov
fdiv
clc
mov
jmp
and
sarl
xchg
popa
jl
aaa
sub
sbb
loope
cld
mov
movsl
je
inc
sub
xchg
iret
jg
call
and
xlat
pop
xor
and
ret
daa
inc
loop
aad
das
lret
push
mov
pop
mov
dec
sbb
and
dec
push
rcrl
pop
ret
mov
rcrb
mov
xor
sub
mov
int
sbb
sub
xor
filds
repnz
push
ja
insl
icebp
mov
packuswb
test
insb
or
fs
push
and
cmp
sub
pop
push
mov
insl
aam
and
stos
xbegin
and
mov
outsl
shll
out
and
and
scas
ficoms
lret
test
add
mov
rcl
and
cltd
imul
jl
sub
inc
mov
dec
lds
or
insl
lret
lea
and
fidivs
mov
arpl
das
adc
test
enter
inc
lock
sub
and
mov
or
adc
sub
cmp
adcb
cli
movsl
sarb
enter
dec
xchg
sub
into
aas
inc
cmc
loop
cmp
inc
sahf
mov
jmp
add
scas
add
fs
and
ljmp
inc
add
into
sahf
adc
and
lds
mov
loopne
jne
aad
mov
fwait
xchg
pop
sbb
ds
inc
imul
or
test
shll
fdivrl
pop
fldt
mov
xor
adc
repz
add
push
xor
std
int
sub
mov
cmp
ja
test
fisubrs
and
inc
lods
jg
pop
and
adc
arpl
jmp
fdivrs
and
sub
and
adc
insb
negb
int
cmp
cmpsl
cwtl
sbb
cmp
mov
pop
pop
subb
and
fidivrl
and
bts
cmp
fs
dec
and
inc
sbb
inc
and
fnstsw
sbb
lods
add
aad
and
mov
gs
and
inc
sub
xor
jp
mov
or
pop
test
pop
pop
and
or
hlt
popa
stos
mov
insb
xor
dec
imul
xor
jae
jecxz
es
add
sbb
lret
in
arpl
xchg
xor
mov
mov
rcr
lret
dec
sub
jmp
add
stc
mov
jmp
mulb
aad
cmp
fdivl
aam
imul
arpl
jl
push
and
xor
iret
sbb
and
enter
lods
and
push
fiadds
mov
loope
outsl
andb
fcompl
sarl
loopne,pt
icebp
cltd
xchg
cs
clc
and
popw
xchg
lods
out
or
or
test
ret
and
lahf
rclb
adcb
iret
lods
mov
rcrb
dec
in
pop
imull
loope
push
sub
jb
or
add
and
mov
mov
cwtl
adcb
and
push
loopne
push
add
dec
fnstsw
jp
repz
pop
cwtl
sub
mov
outsl
adc
shl
cmpsb
jno
movsl
repnz
test
and
scas
fsubrl
imul
rcll
int
ret
and
out
arpl
repnz
sbb
and
es
daa
or
dec
and
popf
nop
add
push
pop
and
inc
test
out
adc
adc
ds
sub
and
imul
mov
jnp
sti
cs
inc
push
and
setl
jae
sub
imul
out
insl
adc
jnp
fsubl
stc
mulb
pop
and
sti
mov
xchg
or
fdivrs
repnz
iret
out
scas
sarb
mov
xchg
js
mov
jmp
or
mov
push
jp
and
loop
adc
and
sbb
push
nop
mov
mov
mov
lods
sahf
xlat
stos
inc
cmp
cmp
sub
jg,pn
jle
and
fmulp
test
cmp
nop
movsb
hlt
jno
push
ja
popf
sahf
mov
add
jae
iret
mov
or
insb
and
inc
and
sbb
sub
mov
add
adc
lea
xchg
lds
sbb
adc
mov
xchg
push
cs
pop
and
addl
daa
and
ds
mov
rcrb
lods
shlb
and
cmp
in
mov
xor
andb
enter
sub
cmp
shlb
ret
dec
cmp
arpl
and
sub
test
and
btc
push
shrl
fs
mov
mov
repnz
pop
jbe
ljmp
xchg
int3
gs
das
cmp
sbb
and
cmpsb
cld
xchg
icebp
pop
addb
js
mov
mov
or
mov
repnz
and
xor
jl
inc
or
add
ret
fstpt
and
add
out
and
jbe
jne
dec
cmp
sub
push
in
add
aad
sbb
mov
inc
gs
cmp
test
sbb
adcl
and
shr
xchg
loope
xchg
jg
mov
or
xchg
and
sub
xor
loope
push
popl
jle
and
das
lea
in
aad
cs
cmp
and
jno
pop
scas
out
and
sub
push
adc
push
adc
loopne
imul
add
lcall
ss
mov
sbb
cmp
fimull
mov
sub
imul
push
xchg
dec
inc
lret
stos
adc
inc
in
xor
out
mov
imul
sbbb
enter
adc
lea
mov
repz
dec
lea
xchg
jnp
inc
jo
inc
leave
aaa
stos
je
and
sti
inc
mov
insb
and
and
and
adc
mov
das
jg
sbb
xchg
insb
ss
imul
enter
sbb
test
rcrl
dec
and
rcrb
adc
pop
jmp
and
inc
cmp
std
lcall
dec
mov
or
and
fisubrl
cmp
in
and
inc
stc
jbe
repz
sbb
cmpsl
dec
je
outsl
and
or
jb
sar
mov
cli
mov
and
jbe
ret
ss
repnz
push
inc
cld
sti
cmp
xor
test
sub
sbb
mov
dec
sub
and
mov
daa
fcomp
inc
pop
in
and
das
xor
cs
dec
xor
jmp
and
cwtl
and
xchg
das
jo
or
loop
imul
xor
iret
sub
mov
imul
jmp
push
les
mov
dec
ret
mov
xchg
sub
push
mov
or
add
xor
pop
out
lea
and
lods
add
jbe
cmp
loop
mov
cmpsb
cmp
nop
push
xchg
shll
and
ss
scas
push
or
outsb
sbb
sub
xlat
std
andl
jg
ljmp
cmp
bound
mov
or
fisubl
mov
loope
xchg
mov
xor
mov
pop
and
test
cmp
int3
mov
es
jge
and
cs
and
adc
xchg
cmp
and
mov
sbb
loope
repnz
mov
insl
out
cld
and
ljmp
and
daa
loop
into
xor
and
sub
icebp
ljmp
and
mov
mov
xchg
popa
pop
and
sub
xor
xchg
rcr
inc
mov
dec
dec
inc
das
lods
sub
divl
sbb
les
stos
inc
sub
lods
lods
mov
mov
outsb
or
ss
push
lahf
cmp
mov
loopne
pop
call
pop
mov
fidivl
jmp
popf
dec
add
and
xchg
scas
xor
and
and
add
in
inc
add
lret
imul
push
and
mov
adc
int
jle
lods
pusha
cmp
sub
sub
shrl
jns
cmpsl
fsub
inc
sub
lods
rcrb
lahf
lods
push
mov
arpl
lcallw
mov
test
xchg
xchg
sbb
mov
scas
out
sahf
mov
and
repnz
js
les
cmp
xchg
add
sbb
mov
push
rcr
cmp
adc
icebp
push
mov
and
add
mov
orb
and
pushf
xchg
mov
addr16
cmc
nop
inc
aaa
or
pop
inc
sub
xorl
lods
fnsave
pop
inc
pusha
outsb
into
sub
jne
mov
mov
fwait
out
insb
add
mov
cld
push
out
cmp
sbb
test
loope
mov
insl
sub
std
mov
sbb
ja
inc
cmp
push
pop
daa
pop
cmp
jecxz
push
pop
hlt
lock
das
xorb
outsl
ljmp
sub
lea
and
cmpsl
cmpsb
cs
lret
and
iret
fstpt
not
pop
cli
pusha
repnz
adc
xchg
fsubs
enter
fs
jle
cmpsl
mov
addr16
mov
xor
and
sahf
mov
in
and
mov
jmp
or
push
fmull
jnp
stos
push
sub
aaa
dec
ret
and
xlat
dec
imul
xchg
fiadds
and
cmp
out
lds
pop
subb
aad
sub
push
scas
fsubrs
sub
lcall
inc
int
and
leave
mov
mov
sbbl
and
dec
into
xor
jp
and
sbb
inc
or
int
lock
sbb
jae
in
and
scas
daa
mov
mov
ljmp
rcl
orb
jp
stos
dec
test
jmp
data16
ror
mulb
das
cltd
push
cmp
mov
ljmp
xchg
or
loope
loopne
mov
ljmp
int3
cmp
push
xchg
scas
leave
cmpsl
inc
mov
jns
jb
cmpsb
stos
mov
addb
sbb
loop
jne
dec
xor
pop
and
fbstp
outsb
mov
mov
and
and
ret
nopl
xchg
push
and
shlb
in
scas
out
mov
xor
sbb
mov
and
cwtl
pop
das
cmp
popf
mov
lret
or
arpl
and
sbb
es
rclb
aaa
fxam
push
mov
xchg
ret
pop
push
lea
jno
cs
xchg
sub
pop
push
inc
and
jbe
cmp
jl
mov
inc
and
stc
adc
pop
and
lret
dec
int3
mov
jae
add
add
cmp
movsb
cli
xchg
ds
rorb
pop
or
cmpsb
or
test
ljmp
mov
cmp
lahf
sub
test
pop
bound
push
lods
cmp
cmp
sti
and
imul
jo
xor
mov
xchg
add
fidivrs
mov
push
fadd
int3
sbb
loope
lea
push
or
mov
adc
cld
mov
add
aaa
dec
sarb
xchg
or
pusha
cs
scas
jmp
fwait
pop
loop
lret
loopne
imul
and
loope
pop
mov
jmp
nop
sahf
in
jno
popa
push
outsb
or
xor
orl
inc
or
mov
sub
push
sbb
movsb
rclb
push
ja
test
test
inc
cmc
dec
or
xor
push
rcll
and
mov
pop
mov
faddl
sar
and
cmpsl
lds
and
xchg
xchg
and
jno
lock
into
repnz
loop
sub
and
idivl
mov
andl
jae
test
stc
mov
and
xor
dec
jg
xor
pop
xchg
lcall
ss
aam
add
sbb
jbe
jmp
jmp
cwtl
jge
enter
hlt
and
es
outsl
dec
in
adc
and
out
jg
lods
push
mov
mov
adc
in
lods
xchg
and
js
dec
and
xchg
pop
enter
iret
xchg
jbe
jecxz
call
icebp
dec
aad
adc
add
cmp
mov
xor
mov
add
push
xchg
mov
rclb
ret
xor
jl
mov
test
pop
push
sub
addr16
xlat
mov
mov
outsb
and
mov
pushf
fwait
jge
sbb
add
lcall
inc
rorb
out
out
aaa
and
addr16
std
test
and
sbb
iret
xchg
ja
cmc
pop
pop
push
sub
cmp
mov
sbb
xor
negb
sub
jl
add
int
lahf
mov
and
mov
mov
outsl
das
dec
dec
jg
xchg
sbbl
mov
pop
adc
aam
fsubs
pusha
xchg
lea
and
repnz
mov
es
loope
and
cmp
push
aaa
mov
cli
clc
in
jmp
and
and
add
dec
and
or
and
push
and
cwtl
leave
lea
sbb
je
and
mov
xchg
aad
xchg
loopne
and
shrl
sub
repnz
cmp
jnp
and
inc
pop
into
jbe
inc
shrb
popf
pop
addr16
rcl
aas
jmp
aaa
adc
dec
and
sarb
xchg
jne
or
mov
push
push
add
sbb
mov
add
xor
shlb
test
adc
imul
and
pop
cmp
int3
xor
cmp
cmp
jne
or
lea
adc
jns
mov
popf
cmp
cld
mov
sub
sub
divl
mov
and
push
adc
pop
mov
fimuls
cli
cmpsl
repz
and
cltd
jb
jmp
outsb
pusha
addb
mov
and
sar
lcall
mov
ret
sub
test
test
add
cltd
pop
xor
fldenv
call
jns
cmc
dec
popf
and
ds
add
and
mov
cmpsb
fs
cwtl
cmp
jnp
mov
and
js
add
jnp
movsb
push
mov
enter
icebp
fstps
jns
cmpsb
pop
xacquire
push
sub
jno
lahf
ja
mov
xor
call
pop
cmp
mov
and
imul
mov
jg
std
stc
cmovae
lea
or
nop
call
orl
adc
or
idivb
jle
ja
jnp
sub
inc
ljmp
div
bound
shrl
xchg
cli
rorb
out
adc
sub
pop
ret
jmp
lods
fnstcw
fcoml
mov
and
scas
push
mov
xchg
mov
or
mov
xchg
sbb
loope
jns
scas
sub
stc
mov
xchg
cld
or
and
pop
outsl
pushf
dec
mov
and
pop
cltd
loopne
and
loop
adc
lret
sbb
shrb
aam
out
sub
xchg
and
push
popa
outsb
pop
dec
sub
inc
xchg
and
stos
xchg
push
inc
test
cmc
xchg
adc
pop
sbb
rcr
jbe
mov
das
ja
mov
inc
sub
or
pop
rcll
and
pop
loopne
fisubs
mov
jge
jmp
ja
cmp
lods
jne
inc
and
xor
jl
jnp
and
std
and
xchg
out
in
and
sub
popa
stos
fldl
aad
and
cltd
add
and
add
jnp
xor
and
lret
xchg
add
mov
sub
mov
push
xchg
arpl
pop
pop
and
mov
test
fimull
imul
mov
aad
sti
out
ljmp
mov
dec
out
repnz
sub
push
xchg
dec
popa
dec
sub
pop
and
addr16
adc
dec
icebp
in
fwait
aas
and
and
add
jns
mov
and
pushf
mov
das
fwait
arpl
push
inc
aaa
stc
int3
fs
and
sbb
dec
ret
repnz
lods
adc
dec
fldl
sub
pop
out
outsb
adc
xchg
jne
lods
repnz
xlat
jecxz
fwait
lret
mov
movsl
add
and
push
ljmp
out
mov
fsubrs
and
or
int
sub
dec
lds
lret
cmp
mov
dec
push
lock
sahf
pop
sbb
inc
arpl
cs
adc
lahf
push
xchg
pop
sbb
jle,pn
cmpsb
ss
add
xor
adc
push
sub
mov
inc
mov
jg
jmp
bound
in
jne
cs
or
and
dec
rcrl
and
push
mov
and
mov
and
sbb
shrb
popa
popf
stos
daa
ficoms
mov
push
and
int
mov
sub
sbb
cmp
mov
dec
cltd
pop
sub
xchg
ret
adc
jo
sub
sub
xor
jp
inc
lcall
cmp
pop
mov
imul
xlat
cli
cli
sub
and
xchg
cmpsb
insb
mov
cs
jle
mov
mov
push
inc
loop
sbb
test
xchg
sub
cmpsb
jnp
adc
jle
lret
and
dec
test
flds
shrl
movsl
push
and
repnz
jp
cmp
popf
mov
push
aam
xor
mov
inc
test
xchg
sub
lea
enter
in
sbb
imul
inc
push
push
adc
mov
fsubp
adc
sbb
outsl
and
sbb
inc
test
mov
sbb
or
add
cli
push
fbld
and
je
fdivr
sub
or
push
mov
ds
add
lock
lret
dec
fldenv
test
outsb
xchg
gs
in
mov
push
sub
ljmp
lret
push
add
and
sub
mov
loope
test
or
cmpsb
cmp
aam
pop
dec
imul
mov
arpl
push
iret
das
jno
pop
xchg
mov
xchg
sbb
xchg
push
xlat
lcall
and
mov
lods
mov
mov
and
or
stc
cmp
and
rorb
fsts
call
stc
cmp
hlt
fisttpll
das
cmp
push
and
sub
sbb
fsubr
and
cmp
bound
jne
and
or
or
into
fisubrl
jae
cltd
push
mov
movsl
pusha
and
cmp
xchg
ret
mov
jbe
insl
out
mov
mov
and
lods
aaa
push
scas
mov
dec
sbb
mov
mov
scas
frndint
dec
fsubs
imul
jnp
and
pop
or
les
lret
sub
pusha
cmp
aam
sub
or
mov
test
repnz
mov
and
and
movsl
pushf
and
jle
adc
sbb
mov
int
xchg
push
rcr
cwtl
lahf
mov
clc
sub
mov
dec
cmp
test
mov
or
pop
or
popf
sbb
inc
jmp
loopne
pop
jmp
mov
ja
and
jne
lds
fs
pop
inc
icebp
add
xchg
and
jecxz
and
loope
movsb
in
enter
lods
adc
xor
sbb
mov
or
loop
dec
jmp
mov
mov
cs
negb
xchg
inc
and
adc
imulb
call
and
arpl
sub
pop
enter
jmp
sub
add
xor
sbb
sti
outsb
and
lods
jmp
ss
out
pop
ret
bnd
and
xor
movsb
xchg
fsubs
xchg
sub
jae
call
mov
inc
cmp
sub
adc
and
dec
xchg
addr16
dec
and
movsl
aaa
inc
mov
repnz
repz
ret
mov
and
out
fstpt
outsb
je
loopne
mov
int
ds
dec
dec
xor
add
lods
imul
and
adc
out
jle
adc
lret
cs
push
sub
add
fcmove
and
xchg
clc
and
out
jecxz
inc
in
lock
cmpsb
push
xor
jo
and
fildl
and
pop
sub
lahf
leave
imul
add
push
and
jg
movsb
aaa
pop
int3
mov
andb
fdivrs
xchg
test
imul
and
jg
mov
or
sub
fistpl
les
push
cmp
or
mov
xchg
lret
pop
fisubrl
xor
mov
out
cmpsl
stos
jle
add
and
and
fsubp
out
sbb
add
mull
cli
mov
sbb
lods
and
popa
and
cmp
fldcw
or
movsl
xor
jp
xor
and
xchg
test
pop
lock
jl
into
shll
leave
and
inc
dec
sub
jge
jbe
xlat
and
call
test
aam
jp
leave
nop
and
jns
jne
repz
add
pusha
sub
inc
stos
and
fistps
in
cmpsb
and
decl
das
jmp
mov
and
cmp
aas
and
lea
insb
aam
mov
and
pop
test
push
sub
inc
and
xor
xchg
cmpsb
jge
and
jnp
mov
sub
pop
lock
imul
outsl
cwtl
xchg
push
fisubrl
sbb
sub
mov
mov
stos
xlat
push
faddl
mov
add
push
pop
test
jg
and
cwtl
test
sar
or
xchg
dec
mov
xchg
sub
leave
pop
movl
sub
push
insb
and
rol
push
into
mulb
adc
imul
jmp
and
jnp
loopne
jb
mov
or
cld
gs
inc
or
xchg
iret
ret
adc
fld1
xor
cmpsb
data16
sbb
mov
fildll
sbb
clc
xor
je
push
sbb
adc
sub
adcl
and
and
lods
loopne
jecxz
cmp
sub
pushf
and
mov
pop
push
es
jb
inc
out
call
sbb
leave
ds
jae
pop
xchg
xor
pop
xor
stc
ljmp
sahf
cmp
pop
and
test
mov
jae
push
and
inc
add
jno
cmpsb
adc
aam
fdivrl
sbb
cli
in
jb
insl
and
sub
xchg
call
add
jg
dec
mov
or
mov
arpl
and
inc
hlt
cld
data16
jl
cmp
dec
mov
sarl
sub
fisubs
or
sub
and
mov
int3
jb
push
dec
nop
and
mov
pop
ror
ljmp
popa
mov
xchg
and
xor
and
movsl
cmp
inc
nop
pop
cltd
int
insl
ljmp
test
sub
cld
ja
and
test
xor
cmp
and
enter
nop
cmp
add
test
push
xchg
leave
clc
inc
jecxz
cmp
dec
and
dec
nop
in
sub
dec
lret
jmp
inc
add
mov
jp
test
mov
icebp
pusha
sbb
ljmp
dec
mov
and
loop
sarb
pop
mov
in
mov
dec
jne
pop
sub
cmpsb
rorb
mov
arpl
bnd
movsb
jp
mov
push
push
mov
psubw
push
jo
add
sub
repnz
sbb
sbb
arpl
pop
gs
sub
aam
bound
and
sbb
cmp
and
jle
mov
cmp
hlt
add
add
movsb
jne
stos
and
xlat
fdivs
inc
aam
jns
xchg
and
cmp
jl
pop
xor
sbb
sbb
popf
and
jle
inc
fstl
lods
hlt
cmp
mov
and
mov
rorb
jae
call
loope
push
mov
pop
iret
out
stos
lods
test
cmp
or
std
dec
sub
fcmovnu
dec
mov
jo
pop
call
lret
dec
cmp
scas
pop
repnz
adc
sbb
adc
lahf
xor
nop
xlat
push
stc
fs
into
data16
or
cli
cmc
ret
pop
inc
jg
imul
or
mov
pop
and
outsl
and
push
mov
cmp
xor
je
testl
mov
and
inc
add
jns
pop
int3
in
insb
lret
cmp
shlb
test
sub
sub
jmp
rol
and
ret
cmp
out
jo
outsl
mull
inc
jle
sbb
xchg
mov
aad
dec
inc
xchg
lahf
mov
add
imul
xor
jp
aaa
push
inc
cmpsb
pop
leave
dec
sub
shll
out
daa
dec
cmp
lock
and
dec
jecxz
mov
mov
jae
pop
and
sbb
push
inc
and
xchg
and
shll
and
repz
sub
aaa
inc
sbb
test
inc
pop
sub
mov
fucomp
scas
mov
and
iret
add
jae
lea
adc
and
xchg
rorb
inc
mov
mov
jge
pop
inc
cmp
mov
push
in
sub
nop
cmpsl
je
add
lret
repnz
subb
scas
mov
pop
fiaddl
mov
test
mov
aaa
jno
orb
add
fsubs
jg
frstor
mov
lock
xor
and
stos
out
xor
imul
mov
cmp
jns
xor
ret
mov
xor
push
xor
and
js
pop
mov
and
mov
pushf
psubusw
cmpsb
pop
movsb
sbb
mov
sub
lahf
cmp
push
cmp
xor
push
mov
inc
in
cmp
lods
fbld
lea
and
ficomps
dec
ljmp
pop
push
sub
cmc
xchg
int
add
and
pop
movsl
and
adc
aad
imul
inc
lds
bound
rcrb
scas
push
clc
push
insb
shll
mov
ret
loopne
adc
sti
iret
fdivl
xchg
or
and
mov
xchg
push
sbb
adc
or
rcrb
aas
cmp
mov
and
cwtl
in
and
mov
cld
sbb
daa
ret
movsl
dec
das
pop
mov
out
cs
and
and
jmp
cmp
loopne
cmc
push
fistpl
mov
sub
and
popa
mov
add
xor
sub
lods
int
mov
arpl
push
and
sub
push
ja
add
filds
lods
cltd
and
push
xor
into
sbb
and
push
sbb
mov
shll
mov
inc
add
pop
pop
xchg
mov
mov
and
sbb
in
cmp
into
dec
cmp
mov
mov
shlb
fcomp
cmpsb
cltd
dec
pop
jmp
adc
pushf
xor
out
jns
insl
cs
and
es
sub
inc
cmp
dec
jne
and
push
insb
jbe
loop
mov
adc
jb
test
push
push
push
lea
and
out
adc
and
pop
ret
repnz
scas
mov
and
sub
xchg
cmp
mov
outsb
dec
adc
xor
xchg
call
icebp
add
lcall
adc
imull
lods
scas
jnp
addr16
cmp
in
aaa
and
mov
jl
mov
inc
pop
into
lret
negl
and
movsl
inc
and
xchg
and
fwait
pop
mov
popf
add
push
ja
and
ljmp
and
imul
and
or
push
mov
dec
and
add
xchg
push
xor
and
dec
jae
test
mov
sub
in
xor
aam
jns
jb
inc
push
and
mov
popa
data16
jno
loopne,pn
bound
and
int3
lds
fbstp
push
and
jo
cs
xchg
fadd
sub
push
cmp
dec
and
pushf
mov
mov
adc
cmp
dec
dec
ljmp
xchg
xor
lahf
mov
mov
scas
cmpb
fisubl
cwtl
dec
mov
or
pop
ud0
and
testl
or
sbb
in
push
aad
ja
gs
xor
cltd
ret
icebp
cli
jp
arpl
lret
adc
call
popf
mov
insb
sbb
pushf
out
and
movsb
aas
xor
mov
mov
sub
lock
in
cs
stc
pop
jecxz
int
xchg
jmp
outsb
ss
sub
add
lods
and
iret
bnd
jnp
pop
jge
cmp
xor
and
lea
xor
sub
imul
andb
mov
inc
mov
pop
cmp
jno
or
mov
cmpsl
mov
stos
dec
and
xchg
dec
mov
and
mov
pusha
and
push
pop
mov
and
je
stos
and
mov
and
sar
leave
inc
jmp
pop
and
dec
mov
xchg
xchg
adc
pushf
addr16
stos
ret
xor
or
imul
push
mov
sahf
mov
and
je
dec
and
lret
and
adc
or
or
mov
add
push
mov
fcos
dec
std
cmpsb
mov
lods
ja
jno
clc
pop
mov
xchg
cmpsl
push
and
or
cli
dec
cmp
xchg
sub
pop
fisubrl
out
stc
mov
sbb
dec
pop
imul
push
and
shll
out
into
or
push
jbe
jno
pop
fisubs
or
pop
lods
dec
insl
sbbl
pop
inc
ljmp
and
bound
cld
jne,pn
mov
mov
cmp
lea
push
int
insb
mov
adc
fnstenv
fmull
jle
movsl
cmp
jmp
add
js
and
add
and
fs
jne
aas
sbb
loope
mull
in
and
xor
xor
test
and
jle
xchg
cmpsb
and
pop
js
adc
loop
push
dec
lret
pushf
std
add
push
pop
push
and
dec
sahf
std
xlat
sub
sub
xor
ja
jle
jo
xchg
pushf
jne
and
sub
cmp
js
movsb
xor
or
ja
imul
xor
and
test
sbb
sbb
loope
loopne
insb
jb
mov
scas
xchg
jno
jmp
dec
and
inc
stc
loop
xchg
pop
inc
and
int3
testb
inc
and
in
je
mov
movsb
jmp
mov
add
and
xchg
jmp
cs
mov
xor
add
enter
inc
sub
arpl
mov
out
es
out
mov
movsb
xchg
repnz
dec
push
fisttpl
sbb
out
dec
push
pusha
lods
jl
jle
sub
cmp
jns
out
les
xchg
shll
fcmove
mov
pop
and
cmp
icebp
cmp
call
sar
aas
and
aaa
mov
and
xlat
push
insb
leave
and
cld
and
rcrb
in
pusha
jl
xor
and
adc
cmp
popf
fucomp
pop
aas
mov
outsb
stc
lods
shlb
subl
pop
fwait
aad
out
and
xchg
imul
dec
push
and
or
lods
or
test
popf
sub
adc
std
sbb
jecxz
les
loope
stos
xchg
lods
and
pop
push
jle
cmp
ret
ds
dec
sahf
sbb
push
mov
mov
adc
in
sub
xor
test
pushl
arpl
sub
lock
push
and
into
mull
shll
cmp
ja
scas
je
sub
and
in
addr16
cs
jno
sbb
push
jle
in
ret
cmp
mov
sahf
push
jmp
cmp
cld
iret
and
stos
sbb
and
cmp
pop
dec
lea
out
sbbb
and
adc
and
mov
insl
fmuls
sub
xchg
xchg
sbb
and
inc
ds
lods
leave
sahf
and
xchg
xor
dec
and
ja
and
push
push
mov
orl
outsl
pop
mov
popa
jno
out
shrb
mov
pop
repz
fwait
in
and
push
movsw
dec
add
mov
stos
cmp
inc
and
and
and
xlat
jmp
shlb
icebp
or
int
mov
repz
aam
and
shll
subb
shlb
inc
mov
outsl
or
ds
int3
call
in
ficomps
mov
cmpsl
mov
add
mov
scas
xchg
cli
fsub
mov
in
cmp
mov
sti
and
push
test
int3
or
in
faddp
rcl
push
and
jp
xchg
arpl
mov
or
mov
add
sbb
popa
das
xor
dec
dec
ss
and
dec
and
xorl
cli
cli
ret
test
stc
sub
jle
cmpsl
in
gs
xchg
xor
das
hlt
adc
and
sbb
cmpsb
and
xor
jno
jnp
sbb
int
push
je
pop
cs
ss
out
add
mov
cli
das
lcall
jae
int
sub
xor
jnp
mov
dec
cld
wbinvd
nop
inc
fisubs
push
xchg
mov
xor
push
loop
hlt
repnz
arpl
and
jns
gs
andl
test
inc
dec
loope
push
mov
int
or
jmp
xchg
popf
add
pop
adc
cmp
mov
les
outsb
pop
jo
int3
dec
aas
mov
lahf
and
enter
or
leave
sbb
xchg
and
scas
pop
pop
int3
mov
mov
pop
stc
ss
lret
mov
std
pop
int
and
add
push
xchg
and
cmp
aam
dec
mov
cmp
rcll
shlb
pop
sub
and
clc
push
inc
stc
add
and
lds
jg
mov
jmp
xor
mov
pop
lret
ja
mov
out
and
add
and
fwait
mov
and
cmpsb
pop
and
mov
push
repnz
cmp
rol
inc
sbb
and
xchg
cmpsb
sbbb
fldenv
sarl
lret
xlat
test
pusha
jecxz
and
int
sub
clc
shlb
push
xchg
pusha
adc
out
sub
sub
lds
stos
jns
setns
pushf
add
and
adc
aad
mov
scas
mov
mov
arpl
jno
jbe
mov
test
test
sub
xchg
push
sbb
lcall
nop
xor
call
rorl
dec
mov
add
jecxz
cmp
or
cs
aas
mov
and
and
out
mov
inc
cs
pop
jmp
sub
test
decb
ret
push
xchg
nop
adc
sbb
and
inc
jge
mov
outsb
aas
sub
mov
insb
and
and
roll
imul
pop
rcrb
or
out
and
addr16
push
sahf
mov
fidivrl
adc
sbb
cmpsb
dec
and
mov
daa
ret
je
and
mov
cmp
add
jecxz
movsl
sbb
or
out
and
sbb
inc
and
insb
mov
loop
cs
test
dec
jg
xchg
xor
push
and
into
outsl
rcrl
fcoms
dec
inc
imul
out
imul
lcall
out
push
loope
adc
cmpsb
sub
and
sbb
cmpsl
mov
mov
incb
push
fidivl
xor
adc
je
test
and
mov
and
rorl
out
and
sub
iret
repz
sbb
cmp
hlt
shrb
fistpl
lock
scas
adc
xor
jp
pop
or
sub
jb
dec
pop
jmp
mov
insl
and
fwait
mov
imul
cmp
mov
add
dec
pop
push
cld
add
and
in
iret
aad
scas
nopl
pop
out
sub
jl
ljmp
and
hlt
pop
push
and
and
cmp
mov
cs
xchg
sarb
in
cmp
pop
lea
movsb
push
and
mov
mov
mov
xor
and
add
test
repz
int3
xchg
pop
push
andl
mov
cmpsl
mov
push
and
sbb
jb
cs
and
hlt
pushf
out
add
popa
test
and
inc
dec
lods
test
mov
add
lahf
ljmp
dec
int3
sbb
fisubs
movsl
ret
ret
popf
sub
in
cmc
dec
add
cmp
divl
outsl
cmp
movl
movsl
mov
and
cwtl
data16
and
leave
xchg
das
mov
pop
outsb
mov
inc
adc
shll
push
and
push
sbb
jecxz
cmp
xor
mov
jnp
test
test
sub
cli
bound
add
inc
lret
leave
and
stc
mov
jmp
iret
pop
nop
cwtl
dec
call
loope
flds
sub
mov
pop
dec
pop
std
sbb
adcl
ljmp
rcrb
mov
in
add
or
dec
and
inc
jnp
faddp
bnd
dec
adc
and
fadd
xchg
push
movsl
or
add
mov
out
jo
and
mov
sub
push
xor
push
shlb
aam
adc
idivl
xor
mov
add
cld
fisubrl
mov
push
and
scas
popf
xchg
xor
push
and
in
and
loop
dec
fs
and
fistpll
insl
test
imul
xor
shr
dec
sahf
addb
popa
xchg
inc
loop
jle
call
xchg
negl
cs
notb
int
xchg
and
mov
xchg
fildll
push
out
push
ja
popf
sub
lds
test
jo
pop
push
fldl
jg
and
loopne
je
mov
mov
mov
sbb
push
inc
or
scas
inc
xchg
in
outsb
mov
frstor
push
sahf
and
or
mov
and
sar
in
and
js
add
push
sbb
xor
and
jns
mov
jl
es
xchg
mov
ret
and
add
mov
and
lock
jbe
aad
mov
test
push
pop
mov
push
sub
cmp
out
jns
lods
mov
and
mov
popa
sbb
rdtsc
sbb
mov
test
inc
pop
mov
cmp
fisubl
inc
call
push
int3
and
push
clc
dec
add
push
sbb
jne
adc
jmp
rcrl
in
addr16
pop
in
and
push
aaa
jne
hlt
jl
int
sub
pop
and
dec
adc
inc
sbb
clc
mov
mov
or
pop
jo
mov
cmp
inc
xlat
add
push
test
jmp
repz
adc
scas
es
std
outsl
mov
xor
fmull
and
xchg
jp
inc
and
das
pop
cmp
xor
pop
jecxz
and
lock
std
xor
mov
shrb
mull
xchg
hlt
jo
xor
add
cs
dec
xor
stos
adc
imul
add
adc
scas
fmuls
push
jne
imul
dec
adc
sub
dec
and
imul
dec
xchg
mov
sub
mov
and
dec
xchg
mov
pop
dec
ret
stos
xchg
and
pop
je
outsl
and
sub
out
rcl
out
mov
pop
das
cmp
and
push
aad
and
and
xlat
jae
fiadds
dec
sub
and
leave
in
cmp
fcompl
and
lcall
bound
sbbl
das
push
cmp
repz
test
adc
adc
push
pop
pop
int
shrl
jge
stos
mov
mov
mov
and
imul
and
nop
inc
dec
aam
xor
fs
sbb
and
shrb
xor
inc
lods
jge
and
inc
pop
jle
int3
jg
pop
and
rorb
fisubrs
mov
loopne
outsl
sbb
ret
enter
orb
add
mov
out
repz
pop
sub
mov
mov
xor
mov
and
mov
sbb
cmc
pop
fistps
adc
int3
dec
in
in
mov
sbb
pop
fidivrs
sbb
pop
fld
mov
inc
jmp
jno
and
fst
lock
sahf
and
mov
jb
xchg
inc
lods
lahf
lods
iret
sbb
jbe
adc
cmp
mov
test
rcr
jno
jp
mov
xchg
pop
stos
push
push
and
push
and
insb
and
jge
in
lods
mov
mov
mov
mov
stc
push
and
jb
pop
and
push
nop
jmp
sbb
push
imul
aad
fbld
out
sti
loopne
hlt
xchg
and
and
xchg
in
addl
cmp
aad
popf
xchg
mov
dec
je
mov
jl
ljmp
or
ljmp
inc
cld
xchg
cwtl
inc
ret
adc
xchg
lret
push
fmull
out
and
xchg
pop
and
add
outsl
sbb
sbb
mov
push
and
ret
sbb
xchg
dec
fwait
xchg
sbb
sub
stc
sub
insl
movb
out
xchg
inc
mov
insb
and
enter
lret
cmp
inc
fsubrl
sbb
popf
shll
dec
pop
sahf
and
push
test
push
and
dec
jle
cmc
cld
inc
dec
and
push
sub
and
stos
fisttps
dec
lods
movsb
add
test
push
or
add
out
and
jp
push
pop
sub
push
loopne
or
xchg
hlt
dec
jnp
pushf
test
lds
sti
inc
loope
adc
xchg
addr16
stos
pop
xor
rorl
in
lcall
push
lods
lret
shrb
add
mov
jae
les
jne
lahf
and
mov
ss
and
inc
pop
test
out
shrb
cmpsb
jmp
jbe
mov
sub
and
or
adc
aaa
cltd
mov
adc
pop
out
aad
loop
test
adc
and
pushf
les
decb
out
xchg
lahf
sbb
and
lcall
xor
xchg
lret
aas
and
xchg
add
ret
loopne
and
hlt
cmc
xlat
ja
mov
and
mov
and
and
or
mov
inc
inc
in
jg
and
fstl
mov
inc
outsb
addr16
jne
es
mov
out
imul
bound
dec
push
frndint
sub
div
add
test
push
std
or
and
xchg
mov
and
pop
cltd
jl
cmp
shll
sub
cmc
je
lock
and
xor
adc
call
add
les
jns
in
data16
add
cs
and
inc
mull
jg
cli
daa
xchg
pop
cmp
in
adc
mov
fsubs
xchg
sub
inc
shlb
xchg
and
or
jne
and
sbb
mov
mov
and
jl
fiaddl
and
stos
out
fwait
and
pop
lods
shlb
das
xchg
inc
add
or
push
cmp
sbb
inc
daa
andb
in
aas
aad
jnp
cmp
push
cmp
cmp
sbb
jp
cmc
jmp
sahf
leave
or
pop
cmp
fisubs
insb
cld
dec
decl
fsubs
inc
mov
jmp
push
fs
jge
push
dec
fisttpll
aas
in
push
je
pop
push
and
out
js
repz
test
or
cmp
stos
vmaskmovpd
push
and
out
mov
and
and
cmp
sub
cmp
aam
outsl
push
das
xchg
fs
lret
push
pop
sub
sub
jge
or
inc
nop
sahf
sbb
fs
sbbl
fisubrs
popf
imull
jb
or
sarl
test
insl
push
pop
sub
and
test
push
fsubrs
and
or
mov
leave
dec
and
or
repz
icebp
ror
push
inc
and
in
add
push
mov
sub
xchg
fs
mov
jmp
movsl
xor
jnp
rcrl
das
lret
movsb
sbb
js
and
mov
adc
fstps
cmpsb
sahf
jbe
and
fsub
jno
fstpt
xacquire
xor
xchg
push
rorl
stos
xor
jo
and
pop
sub
leave
and
rorb
pop
xchg
nop
repnz
cmp
and
fbld
cmp
pop
into
imul
popf
ljmp
xor
insb
lea
rorb
or
hlt
or
and
or
out
and
nop
mov
movsl
sbb
fisubl
insl
iret
cmp
adc
pusha
sbb
outsl
rorb
cmc
mov
push
push
sbb
adc
mov
cmc
sub
shlb
hlt
cwtl
test
and
fwait
push
xchg
adcl
xor
and
sbb
lods
lret
stc
fsub
sbb
jge
mov
mov
and
or
mov
mov
pop
and
popa
lods
inc
mov
xor
push
mov
aam
shll
shrl
sub
add
adc
mov
and
push
jle
pop
mov
xchg
jb
test
daa
xchg
repnz
loopne
sub
incb
call
iret
in
inc
pushl
and
inc
pop
daa
ljmp
arpl
pop
repnz
xor
sub
andl
xchg
sub
mov
out
shrb
mov
cltd
dec
jmp
pusha
dec
mov
dec
sub
cs
and
aad
or
loope
repz
mov
inc
and
add
sbb
push
test
mov
push
pushf
and
ret
out
test
iret
sub
dec
ljmp
clc
dec
rorl
or
pop
movsl
adc
push
and
sub
pop
iret
and
roll
js
mov
adc
popa
imul
sub
jecxz
lds
sub
cmpsl
inc
mov
dec
or
adc
enter
das
leave
and
pop
sub
je
out
and
adc
dec
into
add
jle
imul
jbe
push
cmp
inc
out
push
and
jae
xor
std
stc
aas
or
test
dec
add
push
and
xchg
fwait
cmp
andb
jmp
iret
aad
xor
pop
dec
sbb
and
pop
inc
mov
mov
ja
mov
sbbl
pop
mov
xlat
into
push
in
push
adc
es
sub
and
imul
push
mov
jnp
bound
fwait
inc
imul
and
cmp
ljmp
neg
rcrb
rorl
and
pop
cmpb
addr16
lahf
push
adc
das
movsl
test
jl
and
xchg
jns
cmp
and
inc
sub
and
jp
and
xchg
inc
sbb
into
leave
jl
jmp
cmp
xchg
jae
fbld
shll
dec
xchg
sbb
mov
subl
jbe
push
insl
xchg
repnz
je
or
mov
mov
sbb
push
scas
mov
jmp
stos
pop
cmp
sub
push
mull
cmp
jmp
idivb
repnz
outsb
and
add
cli
cs
aam
and
popf
cmp
ljmp
jb
xchg
xorb
or
lds
and
push
aad
fisubs
call
out
and
imul
cwtl
int3
mov
sbbb
mov
bound
push
sti
insb
movsl
lods
and
cs
add
mov
push
je
pop
mov
sub
sbb
dec
xor
pop
call
sub
mov
push
out
jnp
loopne
and
js
or
cmpl
inc
clc
out
iret
and
mov
xor
fnstenv
icebp
test
cmpsb
nop
sbb
push
jae
jno
dec
adc
mov
into
and
push
out
scas
push
adc
lods
jge
cli
inc
stos
pop
stc
enter
adc
mov
jnp
push
and
inc
jg
dec
pop
js
and
data16
and
and
cmp
xchg
push
stos
rcrb
pop
inc
push
aam
pop
cs
movsb
and
test
xchg
and
mov
or
imul
mov
push
ret
jns
adc
dec
and
or
movsl
push
shr
insl
and
pop
imul
or
cmp
sbb
cli
les
in
inc
fisubrs
cld
rcll
adc
sub
dec
movsl
xchg
or
das
pop
jo
mov
jnp
inc
gs
imul
cmp
mov
push
outsl
and
lret
aas
icebp
and
out
imul
in
lock
int
std
inc
pop
xchg
and
jae
sub
xchg
fnsave
and
aas
pop
inc
ja
aaa
add
mov
ret
and
dec
pop
push
and
push
fcompl
aam
loopne
lcall
mov
andl
imul
inc
xor
movsb
xchg
cmp
xchg
loope
shrb
imul
rcpps
lret
das
mov
add
ret
rcl
mov
ljmp
jp
clc
xor
cmp
inc
and
or
sahf
xchg
sbb
nop
mov
adc
mov
arpl
scas
add
pushf
cltd
test
sbb
out
sub
mov
or
data16
lods
ds
nop
mov
leave
sub
mov
and
je
fs
sbb
sub
stos
and
call
icebp
std
and
and
add
jne
mov
outsl
xchg
inc
xchg
dec
pushf
sbb
sbb
and
mov
jl
mov
adc
ret
sti
and
adc
dec
fnstsw
lea
mov
and
pop
repz
fwait
lea
cmc
add
and
imul
push
push
out
and
test
add
dec
mov
inc
and
fildl
lods
inc
iret
and
pop
insl
outsl
push
cmp
daa
push
cmpsl
jecxz
jmp
andl
sbb
call
test
and
add
mov
inc
ss
loop
jg
ret
pop
or
ja
or
inc
shrb
xchg
imul
push
rcrl
outsl
xlat
sub
aas
sub
add
in
data16
je
push
mov
mov
test
fisubrl
push
stos
in
dec
notb
lcall
mov
shlb
push
pop
or
and
sbb
inc
mov
sub
xchg
sub
mov
xchg
xor
jp
loopne
inc
and
mov
mov
movsb
mov
insb
or
dec
and
mov
jnp
mov
out
shll
sbb
pop
sbb
and
mov
scas
mov
mov
cmpsl
repz
inc
rcr
and
pop
lock
or
fimull
and
stos
in
sbb
cwtl
add
mov
and
aam
cli
adc
push
or
lods
sub
or
xor
jb
jmp
inc
sti
cmp
jne
gs
or
scas
adc
in
pop
addr16
cmpsl
test
xchg
in
xor
and
mov
inc
and
sub
push
imul
or
in
xchg
mov
in
fwait
ja
mov
sbb
mov
rorb
sbb
pop
add
jmp
cmpsb
in
push
sub
cmc
sbb
setbe
add
faddl
cwtl
pop
pop
jnp
and
das
add
mov
test
xorps
or
fcmovnu
cmp
sub
insl
cli
fildll
xor
jno
stos
push
mov
xchg
sbb
frstor
adc
add
inc
sbb
lods
daa
sub
xchg
iret
stc
push
sahf
dec
and
fsubs
shlb
repz
inc
push
xchg
popa
test
es
xchg
das
in
adc
and
push
ds
sub
pop
fbld
jns
xorl
push
ljmp
xor
bound
cld
and
mov
push
jle
inc
inc
int3
loopne
ret
cmc
cmp
imul
movsl
mov
pop
sub
int3
in
je
ljmp
push
daa
cli
jge
sbb
stc
dec
or
mov
pop
sar
jnp
daa
sub
add
or
and
mov
test
and
loop
mov
lret
dec
leave
cmp
cmp
mov
add
in
popa
fildl
xor
out
addl
gs
out
stos
and
mov
jno
pop
movsb
cs
push
pop
ja
cwtl
lret
movsl
stc
and
jo
push
inc
push
cmp
adc
and
mov
cmpsl
mov
mov
lds
leave
aas
and
add
stc
ficoms
pop
jle
jmp
jnp
push
lret
sbb
cmp
pop
add
mov
dec
and
pop
daa
push
and
or
mov
bnd
bnd
and
enter
and
dec
dec
adc
std
outsb
and
xchg
test
sub
dec
pop
mov
stos
or
and
cmp
and
ret
xchg
subb
xor
int3
sub
and
mov
jb
add
fistpl
bound
or
jno
cmp
and
imul
mov
mov
mov
xor
arpl
mov
loope
xlat
and
or
pushf
mov
fisubs
mov
mov
push
add
faddl
jmp
pop
leave
add
outsb
inc
push
mov
lods
cltd
jmp
jne
sub
mov
fwait
add
imul
imul
pop
out
and
mov
mov
iret
and
scas
std
ss
xchg
dec
pop
lcall
pop
fiaddl
mov
lock
and
jnp
lahf
sub
daa
shrb
stos
mov
pushw
pop
xchg
cs
and
dec
ss
jbe
or
orl
and
pop
push
fcmovu
mov
addr16
pop
loop
je
pop
inc
mov
sbb
sub
jbe
push
push
sub
sbb
and
es
in
xchg
pop
and
pop
add
mov
stos
lret
fucomp
add
in
and
sbb
fistpll
sti
insb
test
cmp
dec
jg
and
and
les
jl
cmpsl
lcall
das
stc
and
setns
subb
pop
dec
out
shll
jnp
xchg
and
sub
dec
pop
clc
subl
mov
ret
xchg
push
out
in
adc
jle
shrl
mov
popf
cmp
repz
cld
add
dec
xchg
xor
xchg
stos
lods
cmp
push
ja
and
dec
jnp
jmp
lea
jge
add
mov
cmc
aam
adc
popf
into
insl
ret
cmp
sbb
bound
xor
push
xchg
sbb
testl
int3
and
clc
xchg
push
cmp
fiadds
lock
cmpsl
out
inc
outsl
scas
jb
int
insl
mov
imul
and
xlat
jo
inc
sub
push
sti
mov
push
cmp
popf
sub
addb
les
and
push
ljmp
mov
dec
jns
popa
mov
sub
jmp
inc
jb
jg
or
cmp
jp
lods
out
js
int3
test
ret
jbe
and
loopne
xor
flds
or
push
lret
ljmp
xor
sub
mov
fcomip
scas
fwait
xchg
and
pop
cmpsb
shrl
fs
mov
and
push
mov
lods
or
and
xor
jo
out
pop
hlt
test
jmp
ret
addr16
pop
push
pop
and
mov
pusha
popf
das
xor
mov
bound
sub
or
mov
imul
jge
ret
repz
cmp
jns
ljmp
jo
sbb
push
cli
xchg
sbb
repnz
xor
and
sbb
lock
dec
scas
cs
mov
inc
imul
jnp
repnz
iret
mov
sbb
addr16
and
fwait
cmp
int
pop
cwtl
mov
outsb
push
and
adc
push
rcrl
sub
popa
lock
sub
jg
outsl
xchg
imul
ljmp
sub
push
movsl
inc
fildll
jg
inc
and
cmp
mov
and
mov
or
jmp
adc
sbb
aad
loopne
or
push
jecxz
sti
fildll
sbb
mov
test
inc
outsl
pushf
xchg
inc
and
icebp
and
push
mov
ds
mov
mov
pop
and
dec
rcrb
mov
mov
pusha
push
mov
sub
adcl
and
das
sbb
sub
inc
sub
and
inc
data16
cmp
jbe
and
and
fisttpl
nop
and
push
xor
xor
cmp
cs
pop
lods
dec
inc
ljmp
lcall
fimuls
cmp
xchg
mov
jmp
loopne
jo
jmp
call
dec
scas
dec
aas
jmp
daa
jg
mov
outsb
xchg
and
push
jbe
pushf
loop
adcb
mov
dec
and
sub
add
pop
mov
inc
add
test
adc
and
mov
mov
sub
and
mov
xchg
and
fildl
inc
xor
out
and
pop
mov
mov
dec
es
dec
or
jns
and
sub
adc
cmp
jmp
jno
lock
pop
and
adc
popa
lods
and
lds
sub
flds
shlb
pop
cmp
cmp
pop
adc
mov
repz
cld
fcomps
adc
mov
imul
pop
xchg
mov
or
mov
cmp
push
sub
inc
sbb
mov
mov
andl
pusha
or
shll
rcr
movsb
dec
imul
sbb
cmp
dec
and
loope
mov
cmp
cmp
shll
sub
aad
and
mov
and
ret
and
sarb
sub
sub
in
pop
xchg
movb
jge
out
or
jp
and
mov
xorl
outsl
popa
sbb
jp
and
push
sbb
cmp
scas
out
in
rol
pop
in
test
lock
and
push
frstor
setl
call
and
push
std
mov
add
into
and
js
mov
sti
xlat
repz
sub
jmp
aam
jge
cmc
test
fmulp
mov
js,pt
ss
sub
aad
cmpsl
std
scas
inc
outsl
ljmp
inc
mov
and
in
cmp
mov
es
xchg
pop
incb
nop
and
mov
pop
test
les
add
push
jnp
hlt
sub
xlat
and
popa
daa
dec
das
into
in
in
fbstp
cmc
mov
pop
idivl
add
push
decl
mov
cmp
cwtl
xchg
inc
push
jnp
repnz
stos
or
mov
and
dec
ds
inc
imul
pop
and
inc
adc
cmp
outsb
cmpsb
sbb
push
and
bound
push
lock
scas
movsl
cmp
and
dec
adc
lods
jne
and
in
hlt
ficompl
dec
inc
or
decl
jno
outsl
dec
mull
or
mov
hlt
mov
and
call
dec
or
dec
jb
xchg
adc
cmpsl
bound
mov
and
divb
xchg
jae
daa
stc
and
fwait
mov
mov
push
mov
fnsave
add
js
mov
sbb
push
sbb
jmp
inc
dec
mov
mov
mov
test
sbb
iret
ret
scas
and
sar
jne
push
and
adc
dec
push
inc
and
mov
inc
and
loop
aam
lret
fisubrs
cs
lods
push
xchg
mov
and
xchg
andl
push
popa
leave
and
aaa
mov
mov
inc
daa
in
int
fdivs
sub
filds
cmpsl
lods
movsb
jp
push
mov
and
ja
inc
shll
test
leave
popf
or
and
or
sbb
repnz
loopne
sub
mov
call
adc
rol
push
sbb
inc
inc
cmp
sbbb
add
mov
or
call
in
iret
and
push
rclb
jns
cltd
loop
scas
pusha
outsb
and
lahf
sub
das
xor
sbb
jns
xchg
dec
push
or
scas
push
daa
and
fidivs
rcrb
inc
btc
xor
jbe
and
mov
loopne
and
push
add
sub
out
add
lods
and
cwtl
popf
repnz
clc
adc
push
xchg
xor
pop
pop
add
and
cmp
out
int3
sub
ss
sbb
test
sub
add
mov
fimuls
lods
push
pop
pushf
inc
cmp
and
movsl
lret
es
movsb
jl
sub
xchg
push
pop
adc
cs
mov
outsb
cmp
and
mov
adc
jae
add
jmp
add
in
out
test
mov
lods
dec
std
pop
or
and
addr16
cmpb
and
adc
pop
xchg
or
cmp
add
shl
mov
and
and
sbb
test
movsb
das
fsubrs
dec
lahf
jbe
sub
cmp
mov
es
fsubl
xchg
and
sub
fdivs
dec
inc
call
je
stos
cld
shll
and
xorb
gs
push
and
jnp
in
inc
inc
pop
mov
repnz
mov
and
jnp
dec
repnz
stos
inc
mov
fsubl
inc
dec
out
mov
and
cs
and
push
sbbb
pop
scas
xchg
test
dec
outsb
and
icebp
adc
fnstcw
loop
inc
fbld
sub
dec
pop
fadd
and
shll
xchg
insb
mov
es
decl
movb
imul
mov
scas
in
sub
pop
sbb
jo
addl
push
inc
and
xor
and
das
and
notl
dec
negb
cltd
aam
fwait
lds
xchg
mov
les
fs
pop
sub
xchg
lock
push
loopne
adcl
sub
push
mov
pminub
xchg
cmpsl
lret
and
outsl
or
jb
and
addr16
mov
pop
lds
jl
jno
sub
sti
test
and
call
and
bound
adc
push
dec
outsb
and
xchg
test
and
dec
and
in
fsubl
jbe
cmc
mov
and
flds
jb
push
mov
and
mov
or
jle
jnp
into
scas
das
andl
mov
js
and
jg
ficomps
iret
aaa
int3
lock
lods
push
out
fsts
jb
cmpsb
lea
push
mov
std
sub
pop
call
sub
cld
stos
adc
call
jo
insb
stos
outsb
mov
dec
and
adc
cmpsb
push
insl
dec
aas
imul
nop
fwait
mov
gs
add
dec
movsl
int3
and
aaa
jno
pop
mov
cmp
xor
xchg
cmp
adc
and
inc
movsb
jae
shll
in
and
lahf
ret
loop
pop
xchg
add
fsubrl
push
rep
test
jp
jo
push
mov
test
or
and
ficompl
loope
fbld
scas
inc
dec
popf
and
sub
mov
jb
jns
dec
sbb
mov
cld
and
loop
push
xchg
lret
xchg
mov
inc
mov
mov
ljmp
and
push
adc
xor
mov
xchg
jp
cmp
das
jns
sub
push
push
fbstp
je
xor
cmp
inc
ja
mov
mov
loopne
test
cwtl
in
jns
les
push
lods
sbb
and
jg
mov
mov
lret
sqrtps
lds
xchg
das
adc
and
popl
and
int
in
scas
enter
dec
shrb
fiadds
insb
insb
cmp
lods
shll
and
inc
sub
mov
xchg
jns
xchg
pop
and
stos
scas
enter
dec
sub
cs
notl
mov
arpl
sub
incb
mov
and
pusha
adc
jmp
sbb
lods
cltd
test
mov
repz
repnz
fistps
dec
into
xchg
adc
inc
xchg
sti
call
icebp
rcrb
out
aas
stc
sub
sub
loope
mov
or
xlat
and
sbb
sbb
and
es
or
adc
cmp
ret
inc
into
sub
inc
fcmovnb
fstp
adc
sahf
outsb
sub
xchg
jne
mov
scas
cmp
cmpsl
add
das
push
inc
ja
and
enter
std
mov
sub
scas
aas
mov
imul
nop
xor
and
or
inc
hlt
cmp
sub
cmp
repz
out
mov
daa
imul
sbb
add
stc
repz
enterw
jno
cs
mov
hlt
and
pop
das
sbb
and
adc
pop
dec
jae
and
in
imul
stos
xor
lcall
negl
rcrl
and
inc
pop
dec
mov
mov
or
clc
xchg
aam
sub
mov
and
stos
sahf
cwtl
sbb
repnz
and
or
testl
sti
enter
in
xorb
and
sbb
xchg
add
popf
gs
mov
ret
pusha
jp
add
inc
mov
xchg
pop
and
out
shrl
dec
sub
decb
mov
push
mov
cmp
add
add
mov
popf
mov
xchg
mov
and
xchg
fcomip
repz
fnstenv
dec
dec
cmp
and
pop
xchg
ret
and
sbb
sbb
xlat
adc
add
loopne
lea
clc
aam
mull
inc
popf
ss
and
sub
push
call
add
mov
jnp
int3
cli
fimull
push
sub
sbb
and
lods
outsl
data16
jb
adc
pop
pop
andb
or
jnp
and
ucomiss
xchg
mov
fsubrs
fimull
dec
pop
imulb
and
pop
cmc
pop
dec
cli
cld
mov
in
xor
adc
xor
clc
and
jo
jmp
and
jnp
xor
fisubrl
loopne
cmp
xchg
shl
loope
cltd
arpl
push
addr16
iret
mov
es
fldcw
mov
push
in
jno
jle
push
mov
cmpsb
inc
and
cmp
push
lea
les
lods
and
sbb
stc
and
imul
jecxz
fisubs
lods
push
sbb
jbe
sbb
scas
out
into
jo
test
add
iret
ds
cmp
subl
mov
add
sahf
push
and
imul
inc
xchg
jnp
insb
dec
cmpsb
jmp
and
cmp
mov
iret
faddl
pop
movsl
dec
xchg
addb
fildl
mov
xchg
sub
out
cmpsb
dec
push
push
jl
sbb
int3
cmp
mov
sub
rorb
mov
xchg
jb
mov
scas
push
and
cs
push
lret
insl
jge
arpl
lods
pusha
std
lods
ret
cmpb
repnz
popa
rorl
out
mov
inc
fnstcw
pop
ja
inc
or
and
sub
sti
jmp
mov
push
sub
test
mov
adc
imul
shll
test
imul
sub
mov
mov
sub
and
sbb
cmc
mov
pop
fcompl
repnz
in
fcmovb
sub
jne
repnz
ljmp
mov
shlb
imul
pusha
mov
inc
and
xor
xchg
jns
add
and
fs
enter
sub
sbb
shrb
pop
sub
jmp
jno
cmpsl
jbe
in
mov
test
mov
sti
out
xchg
xchg
das
adc
test
lods
hlt
or
mov
and
mov
dec
ret
and
out
dec
push
mov
xchg
popf
xchg
adc
and
pop
test
and
aas
xchg
adc
dec
add
jle
mov
jge
sbb
addr16
sbb
or
and
mov
inc
jl
lods
and
inc
stos
inc
cld
ret
cmp
cmp
adc
sub
mov
and
jne
adc
fwait
sub
add
int3
jns
imul
cmpsb
js
xor
pop
mov
call
xchg
and
push
dec
xor
test
mov
and
adc
arpl
cmp
das
loope
stc
jmp
fisttpl
xor
lods
and
data16
xchg
cs
and
ss
sti
jg
mov
sub
inc
cwtl
and
adc
insb
fmuls
and
mov
shll
or
lea
and
pop
mov
or
push
jge
stos
sbb
repnz
and
lds
and
xchg
clc
mov
sti
fisubl
mulps
or
aad
push
pop
mov
scas
and
push
dec
add
pop
fidivrs
mull
shlb
lahf
dec
dec
sbb
outsl
push
daa
and
out
aad
in
xor
gs
push
cmp
sub
imulb
push
jp
ret
orl
insb
pop
push
mov
jecxz
pop
add
sbb
pop
shll
dec
dec
and
or
cwtl
fldcw
pop
and
sbb
fbstp
cmp
push
sti
and
repz
in
rcll
inc
dec
xchg
lds
stos
iret
outsl
fcompl
jae
sub
mov
fdecstp
mov
fidivrs
jmp
stc
aam
sbb
fwait
popf
imul
push
addr16
and
jge
pop
and
int3
mov
push
imul
jge
xor
pop
push
and
jb
push
pop
mov
addb
cmp
cmp
das
repnz
and
insl
sti
popf
arpl
js
pop
pop
sbb
mov
sarb
xor
sbb
xchg
sub
push
pop
inc
sbb
sahf
daa
push
lret
popa
in
sub
call
movsb
xor
bound
mov
cli
jmp
dec
mov
and
jnp
adc
das
and
bsr
imul
mov
inc
jmp
inc
out
repz
and
mov
les
mov
push
jno
movsb
xchg
mov
xchg
nop
bnd
pop
mov
and
scas
test
mov
fdivrs
jns
xchg
fiaddl
mov
and
dec
jl
nop
adc
int
xchg
cld
insb
es
cmp
cli
hlt
fcompl
inc
xchg
pop
mov
and
sub
ficoml
sarb
test
ficoml
repz
ficoms
aam
and
mov
xor
and
sub
mov
call
pop
mov
mov
ret
xlat
loope
cltd
inc
scas
stos
inc
jae
mov
cs
xor
cs
and
mov
xchg
and
pop
loope
shll
jnp
das
lret
fistps
cmp
sub
cmc
xor
out
shll
insb
dec
dec
aam
ja
xchg
and
xor
jnp
and
inc
lods
mov
mov
push
ljmp
movsb
inc
or
and
mov
js
and
add
pop
fisttpll
or
mov
out
xor
and
mov
ja
fs
incl
pop
hlt
inc
and
cmp
xchg
movsb
out
pop
jb
fs
adc
ja
lret
sub
dec
add
clc
cli
jnp
and
adc
and
fnstenv
and
stc
inc
jns
int3
es
lcall
fildll
in
and
rolb
movsb
and
arpl
push
dec
cmc
and
mov
dec
leave
and
jb
pop
push
loop
and
out
ret
sub
lods
out
dec
xchg
mov
mov
repnz
addr16
aas
int
and
dec
or
fstpl
pop
dec
mov
outsl
pop
call
and
fnstsw
mov
lods
push
mov
lods
pop
xlat
mov
dec
gs
cs
pusha
and
push
cs
jl
mov
or
push
xlat
hlt
stos
fstl
adc
outsb
movsl
push
fdivl
adc
cmc
pop
fwait
cld
das
and
movsb
andb
int
insl
push
sarb
shrl
cli
call
sub
dec
leave
int3
and
xchg
lret
pop
fimuls
push
out
pop
cmp
jecxz
ror
lock
sub
cmpsl
sbb
inc
lods
push
mov
and
ja
mov
test
cld
cs
jg
xchg
pop
jns
dec
into
pop
cmp
push
adc
mov
xchg
sub
jge
je
sub
mov
lcall
jnp,pt
mov
sbb
imul
gs
sbb
jnp
dec
sub
movsl
icebp
mov
lcall
and
loop
fwait
cmp
outsl
pushf
inc
out
test
and
cmp
cmp
out
testb
dec
and
adc
sub
push
or
js
inc
or
in
iret
and
and
sub
pop
cli
or
fisubs
insb
and
and
pop
pop
test
or
into
push
lea
mov
in
xchg
and
mov
arpl
repz
jae
shll
cs
stos
cmp
and
mov
jge
jmp
movsl
sbbb
add
xor
pop
sub
int
sub
xor
pushf
and
adc
int3
sub
fdivrs
push
fsubrp
call
and
xor
jb
out
sub
and
test
and
pop
pop
mov
sti
xchg
adc
and
popa
repnz
jp
rclb
mov
dec
mov
mov
and
or
std
jae
enter
mov
filds
repnz
nop
mov
cmpsb
jnp
push
add
das
or
and
js
xor
and
cmp
pop
adc
fsts
and
push
orb
enter
push
outsb
fsubrs
xchg
stc
xchg
fists
and
adc
mov
add
sbb
cmpsb
stc
mov
sub
nop
insb
jnp
lea
and
sub
and
push
leave
and
xchg
xor
push
ljmp
sbb
add
inc
ljmp
les
stos
test
mov
jae
frstor
mov
ret
and
adc
pop
aas
xor
cwtl
movsl
pop
dec
fisubrl
pop
or
insl
push
mov
mov
pop
gs
and
fsub
jecxz
dec
push
scas
into
out
push
mov
mov
adc
dec
mov
xchg
out
push
pop
adc
add
stos
loop
and
add
xor
cmp
std
test
insb
jne
and
stc
aas
sahf
pushf
add
shrb
xchg
or
test
repz
sub
and
fwait
adc
add
cmpsl
ja
inc
push
ret
add
test
inc
dec
or
fisubl
lock
scas
sbb
cmp
xchg
and
das
cmpb
push
fnstsw
sub
loop
inc
cltd
mov
push
and
sub
or
mov
mov
je
pushf
mov
xor
call
pusha
jmp
and
xor
lods
pop
jns
in
and
inc
adc
add
mov
cmp
mov
mov
arpl
cmp
loope
scas
fisubl
mov
pop
xchg
push
pusha
adc
cltd
cwtl
and
lods
sbb
and
mov
and
dec
out
and
adc
sbb
cli
xchg
xor
push
lret
icebp
pusha
nop
arpl
movsl
data16
mov
mov
nop
xchg
scas
add
test
cs
pop
enter
fsubrs
ret
cmp
icebp
adc
and
int3
leave
fdivrs
outsb
lahf
add
jne
and
jmp
fwait
dec
add
and
imul
push
jns
and
out
or
mov
std
xor
hlt
dec
cmpb
sub
movsl
out
and
lea
enter
inc
sbb
jmp
aaa
and
xor
test
lret
lahf
inc
shlb
dec
addb
cmpsb
and
int
mov
mov
pop
and
leave
je
xchg
jl
adc
fcomi
pushf
fsubrs
or
sbb
je
push
jmp
pop
inc
or
or
enter
mov
outsl
xchg
mov
pop
mov
add
cmp
clc
pop
notl
ficompl
test
dec
sub
cltd
stos
mov
call
and
popf
xchg
push
daa
xchg
and
subl
cmpb
aad
and
add
and
sub
stc
xor
jp
div
inc
pop
and
in
leave
mov
and
movsb
mov
insb
adc
sbb
pop
out
lods
cld
inc
and
add
mull
sbb
mov
lsl
cmp
push
pop
dec
and
movsl
pop
stos
repnz
sti
sub
jnp
fs
js
jbe
enter
cmp
xchg
dec
aam
jns
popf
jle
scas
and
data16
xor
or
jae
sahf
jge
nop
sub
dec
mov
rcll
jae
fisubs
mov
pop
outsl
scas
and
dec
jb
es
mov
sbbb
pop
and
mov
and
mov
data16
mov
sbb
incb
and
add
pop
lea
cmpsl
jnp
and
mov
mov
cmp
push
or
adc
stos
mov
orb
jnp
out
clc
jbe
inc
rorb
or
and
push
xor
aaa
or
iret
xchg
xchg
adc
ss
mov
rcrb
mov
jno
jmp
xchg
xchg
jg
and
and
ss
imul
push
add
lods
mov
inc
mov
call
cld
jg
test
popl
push
mov
cmp
out
jb
adc
add
xchg
shll
and
lcall
and
cli
cwtl
in
xchg
test
add
jle
cli
dec
xor
test
loop
and
add
ret
stc
adc
movsl
push
push
dec
push
push
and
sub
and
mov
and
fildl
and
pop
sbb
loope
fsub
scas
and
ljmp
and
loop
push
dec
mov
loopne
and
push
test
and
mov
jnp
lret
lret
cmp
testb
dec
and
xor
sub
or
lds
test
sub
sub
sbb
jmp
xchg
sub
outsb
mov
lahf
jmp
add
adc
movsb
push
pop
and
push
jno
and
mov
cwtl
popl
or
mov
push
and
les
int3
fstpl
fisubrl
and
mov
lahf
xchg
jmp
mov
adc
ja
jp
sbb
dec
and
and
in
dec
js
lret
xor
add
mov
and
inc
cltd
daa
xlat
jmp
jno
sbb
fwait
inc
jns
movsl
push
inc
mov
outsl
mov
scas
rclb
and
arpl
sbb
sub
movsb
sub
test
add
lcall
pushf
adc
and
xchg
lods
jge
pop
mov
ss
repnz
and
dec
pop
mov
xchg
arpl
push
pop
sbb
add
cmpsl
and
iret
call
aas
push
jns
mov
sub
pusha
mov
xchg
sbb
out
cmp
and
not
aaa
fistpll
jae
inc
sub
pop
and
mov
gs
mov
shrl
outsb
icebp
push
cld
jne
cmp
pop
mov
and
aad
add
dec
popa
imul
enter
mov
mov
test
inc
lahf
mov
and
std
aad
pop
fcmovnb
fdivrl
sub
sub
test
jbe
and
inc
xor
cld
leave
and
xchg
rcrb
enter
fscale
sbb
fsubr
push
lahf
inc
push
inc
and
cs
imul
jg
adc
dec
sbb
subb
mov
add
imul
scas
cmp
adc
and
js
push
and
jp
inc
inc
inc
in
leave
stc
lods
mov
mull
clc
je
ficompl
xchg
push
dec
add
xor
stos
stc
sub
pop
std
ljmp
and
inc
and
cmp
xor
cmp
adc
cmp
adc
jp
and
mov
gs
mov
aad
repnz
movb
dec
sub
mov
rorl
push
fwait
jbe
and
dec
outsl
dec
dec
xchg
lods
sub
mov
fs
or
push
push
push
sbb
cmp
sbb
shll
scas
jmp
sub
sbb
jb
and
repnz
dec
cltd
pop
iret
stos
and
sbb
and
aad
push
sbb
mulb
xor
xchg
xchg
dec
shrb
and
fs
test
ficomps
cli
and
outsb
ss
cmpsl
call
mov
jb
jmp
lds
addr16
and
and
clc
mov
push
repnz
lcall
cli
jnp
into
test
sub
mov
ja
mov
sbb
stc
xchg
pop
inc
jl
daa
mov
stos
sub
cmc
pop
push
or
xor
addb
jecxz
and
pusha
mov
test
push
xchg
mov
or
repnz
cmc
js
push
sub
and
jno
add
jae
fldcw
andl
jno
shr
jp
and
xchg
fcoml
sub
inc
mov
jb
sub
scas
mov
lcall
sbb
cli
test
iret
das
nop
cmp
and
mov
jns
fucomi
and
pushf
hlt
outsw
lcall
adc
jl
ljmp
shlb
rcll
sbb
mov
jbe
sti
jae
sbb
inc
test
ret
dec
xchg
adc
push
cmc
fdiv
in
insb
movsl
sub
dec
insl
pop
inc
ficoml
xor
jl
xchg
mov
test
inc
fcomi
push
and
cmp
pop
cmp
scas
cmp
mov
out
or
std
pushf
dec
and
xchg
push
dec
mov
shlb
mov
xor
cs
into
fadds
mov
and
cmp
dec
imul
jmp
aas
ret
sbb
sub
loopne
mov
daa
push
jmp
jo
sub
stc
and
mov
shld
and
adc
add
cmp
or
popf
notl
scas
loop
and
loopne
xchg
fsubs
mov
mov
incl
jae
into
inc
in
and
nop
xchg
dec
mov
imul
push
pop
mov
add
mov
sahf
push
rolb
and
pop
push
sbb
xchg
and
xor
jb
inc
xor
and
and
and
iret
and
push
sub
and
mov
shl
sub
mov
test
and
shrd
sub
jl
and
out
insb
in
lods
push
cmp
adc
add
mov
dec
xor
loope
inc
repnz
mov
sub
mov
and
icebp
mul
jae
jbe
iret
jle
scas
sub
xor
push
pushf
lock
addr16
mov
sub
xchg
or
roll
ret
cltd
cmp
and
stc
repnz
jecxz
sbb
mov
mov
inc
sbb
add
dec
imul
add
or
mov
out
and
lret
or
std
test
add
sahf
dec
cwtl
push
mov
pop
pop
outsb
jno
jae
and
cmp
lahf
inc
cmpsl
xor
leave
mov
shll
xchg
sbb
and
pop
cli
daa
sub
or
cmp
dec
sub
cmpsb
pop
lds
push
into
lods
cs
push
stos
arpl
call
cmpsb
ffree
imul
add
lcall
out
adc
cmp
repnz
in
mov
inc
mov
in
cs
and
pop
fisubrl
mov
sub
pop
pop
dec
je
push
int
out
mulb
mull
cli
pop
rcrl
mov
rolb
imul
and
fwait
insl
sub
ljmp
jp
mov
popf
pop
leave
push
and
and
cs
sti
mov
mov
insb
jmp
and
scas
out
and
sbb
or
push
and
push
imul
sbb
xchg
jl
in
jo
sub
sbb
mov
ret
sbb
xor
add
pop
xchg
dec
scas
pop
and
loop
mov
pop
and
shr
inc
and
mov
js
push
lea
mov
and
add
adc
out
push
xor
dec
call
in
mov
pop
ss
popa
xchg
cmpsl
sub
loopne
outsl
xor
or
jb
inc
push
and
sahf
push
subb
mov
out
mov
ss
stc
andb
test
cmp
and
rolb
inc
dec
pop
das
iret
xchg
pop
bnd
bnd
daa
mov
lock
cmc
push
jb
xor
movsb
aad
mov
in
jmp
mov
lret
jns
and
mov
adc
jbe
inc
sets
aam
cmp
lcall
lds
cmpsb
and
xchg
push
xor
mov
pop
fwait
stos
push
jae
ds
sub
push
loop
repnz
dec
and
lods
pop
stc
jb
mov
call
mov
push
dec
nop
and
push
jbe
adc
lea
fwait
sbb
mov
in
pop
stos
and
pop
sub
xlat
ljmp
push
bound
xchg
inc
out
or
fstl
jae
scas
mov
movsl
and
ret
dec
adc
out
cmp
sub
mov
loopne
std
jnp
mov
xchg
jge
or
cmp
pushf
imul
xor
jl
mov
adc
sahf
sub
cmpsb
pop
mov
and
pop
jae
in
xor
loope
loop
mov
mov
inc
adc
cmp
and
push
pop
dec
xor
shrl
inc
xchg
pop
add
and
in
mov
fcoms
es
jo
jl
sub
fucomip
sbb
movsb
cmpsl
js
push
ja
xor
cmp
and
and
test
sub
popf
pop
or
dec
in
cmp
mov
xchg
dec
xor
mov
lret
inc
xor
out
mov
and
dec
shll
in
sub
js
sub
arpl
add
pop
cli
mov
or
pusha
nop
pop
mov
and
iret
push
and
adc
cmpsb
xorb
shlb
adc
mov
push
mov
and
test
mov
test
sub
jmp
into
push
or
mov
adc
dec
out
and
popa
lods
cmpb
fbld
out
cmpsb
repnz
les
mov
or
sarb
mov
sbb
push
in
cmp
lea
mov
add
scas
fisttpll
stos
hlt
pushf
das
and
add
and
and
inc
aaa
push
and
loope
jne
stos
adc
or
fnsave
sub
mov
outsb
add
xor
out
fiadds
and
push
xor
sbb
je
mov
fs
push
std
sti
inc
jae
push
jmp
mov
jbe
fs
aad
inc
out
mov
sbb
loopne
stos
loope
and
fs
jns
div
pop
push
or
shrb
cs
cs
sub
inc
jg
and
mov
and
test
sub
and
aam
je
loope
and
ret
sbb
lea
xchg
xor
and
cltd
imul
mov
inc
cltd
push
adc
sbb
das
adc
sub
mov
dec
and
sub
movsb
idiv
xor
dec
xchg
sbb
bound
lock
enter
mov
stos
gs
dec
and
sarl
and
fnstenv
and
mov
dec
ret
pop
je
cs
pop
inc
repnz
pusha
mov
xorl
inc
pop
push
lods
enter
repz
jge
outsb
sar
mov
aaa
push
sub
rcl
push
mov
js
lahf
mov
and
and
mov
loop
negb
and
add
dec
inc
and
and
ffree
fs
add
jge
cld
or
mov
jge
fsubl
adc
je
int3
divb
jb
insl
xchg
jae
cmpsl
cmp
xor
mov
addr16
add
add
aas
les
and
sti
lock
mov
push
mov
call
and
dec
aaa
ds
xchg
xchg
jnp
pop
adc
rorb
in
out
cmp
mov
hlt
add
icebp
aas
mov
dec
add
imull
dec
cwtl
ljmp
push
or
dec
aaa
mov
cmc
fiaddl
test
test
adc
fnstcw
jbe
repnz
push
push
xor
ja
push
rorb
xchg
loop
movsb
push
js
push
adc
sub
lods
and
adcb
and
mov
js
mov
cli
ja
dec
sub
out
std
pop
xchg
sbb
js
pop
xor
push
jb
and
sub
add
sub
sub
cmp
pop
mov
int
lock
lea
scas
ret
fsts
cltd
and
fmull
add
and
divb
jo
push
inc
popl
push
xchg
mov
jle
xrelease
shll
scas
and
es
sub
cld
fyl2xp1
and
xor
dec
lods
nop
sbb
xchg
cmp
xchg
daa
fwait
and
loop
push
add
and
push
sti
cmp
arpl
mov
fcomps
sahf
jg
push
popa
sbb
ret
sub
push
push
sbb
inc
jle
mov
lods
hlt
jle
and
sub
and
jle
mov
and
ja
dec
jo
mov
aad
fninit
and
sub
sbb
test
add
mov
out
push
and
push
push
xchg
lds
outsl
shlb
sbb
pop
dec
and
push
and
add
icebp
and
lret
inc
cmp
sub
or
cli
rclb
nop
or
sub
sub
sub
jge
inc
ja
xor
push
rcrb
inc
push
arpl
sbb
add
inc
mov
sub
pop
push
inc
test
pop
and
dec
lods
in
bound
mov
xchg
out
adc
lahf
push
dec
inc
ljmp
pop
inc
mov
add
push
js
inc
jne
aas
push
and
cs
aad
mov
jecxz
cmp
and
addr16
and
pop
or
and
in
jl
push
jmp
pop
jbe
inc
push
and
arpl
and
jg
add
or
scas
mov
push
mov
add
repnz
jle
and
jg
out
push
adc
repz
mov
std
sahf
cli
lock
arpl
dec
jecxz
sti
xchg
je
inc
sbb
fdivrl
inc
jl
mov
cs
cltd
push
xor
jp
in
hlt
es
jns
sti
repnz
lahf
mov
fcoml
cs
cmpsb
mov
imul
shrb
mov
adc
or
fdivr
cmp
mov
hlt
mov
and
inc
mov
or
out
jecxz
cld
sbb
sub
test
mov
adc
out
ret
jl
pop
je
stc
add
and
inc
or
out
and
xchg
mov
cmp
sbb
inc
rolb
aad
nop
fsts
lea
jo
adc
jmp
out
xchg
push
inc
cmp
mov
int
and
insb
and
pop
dec
dec
cmp
mov
or
mov
and
sbb
cli
data16
in
xchg
cmc
scas
pop
push
repnz
pop
leave
shll
jns
dec
xorl
push
pop
mov
pop
inc
inc
jmp
pop
cmp
pop
add
inc
pop
lea
icebp
lds
fdivs
cmp
imul
xor
lods
sub
jge
scas
add
int3
outsb
inc
and
push
lret
faddp
or
movsb
cmpsl
or
outsl
dec
insl
and
jb
adc
mov
cmp
test
push
jmp
jle
stos
sti
iret
aam
test
and
mov
push
add
sub
xchg
out
stc
sub
lea
icebp
in
and
xor
cmc
in
and
sub
mov
mov
mov
dec
aad
shr
jle
jnp,pt
inc
xor
das
ret
or
add
lahf
js
xchg
inc
inc
dec
mov
outsl
push
adc
fldcw
jno
cmpsb
xor
xchg
push
inc
jmp
cs
fwait
mov
xchg
mov
bound
gs
addl
lods
mov
mov
mov
test
push
and
cwtl
fimull
in
nop
jnp
pop
das
sub
std
mov
inc
inc
and
out
shll
hlt
sbb
push
cmp
mov
in
xchg
andl
jecxz
ljmp
mov
sbb
pop
orb
int3
in
jae
out
inc
sub
fs
ret
int
cs
fsub
jno
loopne
mov
lahf
insl
fisttpl
cmp
jo
mov
lock
mov
dec
pop
rcll
pop
sbb
loope
jmp
scas
and
or
cli
insl
outsb
dec
and
dec
inc
sub
xchg
and
ljmp
lcall
lret
and
or
or
pop
push
and
mov
sub
shl
adc
dec
popa
sbb
and
xor
repnz
inc
imul
repz
push
movsb
fists
inc
pop
mov
fstl
ja
mov
call
test
sub
fistpl
outsl
pop
fsubp
and
sub
mov
and
lods
decl
jae
and
adc
inc
aam
inc
xchg
cmp
mov
insb
sub
test
inc
cmp
jae
call
mov
scas
ljmp
and
or
sub
and
xor
or
cmp
inc
enter
cmc
ja
mov
arpl
jmp
mov
dec
insb
cli
loopne
cmp
mov
and
or
push
and
mov
and
mov
fdivrs
inc
ret
lods
inc
les
cmp
pop
mov
ret
rcll
call
and
gs
xor
mov
mov
dec
push
xlat
jnp
jnp
pushf
cmp
shlb
stos
adc
and
adc
cmp
sub
popa
xor
js
jl
out
pop
adc
andb
mov
push
outsb
push
sbb
jne
insb
and
fwait
jecxz
and
dec
in
imul
mov
out
push
les
mov
hlt
std
mov
and
fstpt
clc
inc
dec
andb
xchg
mov
sub
and
pop
jecxz
pop
pop
lock
and
pop
xor
inc
sbb
mov
cmc
lahf
in
dec
and
data16
pop
jmp
mov
inc
adc
cli
sub
jg
dec
dec
pop
and
mov
adc
or
cs
sub
mov
imul
lds
pop
mov
and
cmpsl
or
and
and
in
adc
or
jmp
notl
inc
dec
xchg
repnz
stos
fsubrl
and
sahf
shll
jle
add
and
cmp
push
and
xor
jo
pop
out
inc
sub
in
sub
fcmovne
xor
jp
lret
int3
inc
or
inc
pop
pop
push
sub
and
out
mov
insb
and
orb
daa
mov
addl
sbb
sbb
sbb
in
and
add
repz
dec
lret
inc
mov
xchg
jge
ljmp
and
out
jmp
negb
pop
adc
and
or
dec
mov
fs
lods
mov
xor
sub
ljmp
int3
cs
lahf
push
movntps
sbb
jl
dec
cmpsl
or
jae
outsl
movsb
sub
jb
shll
movb
ss
push
negl
pop
sbb
aam
sti
shrb
mov
and
sbb
sub
dec
inc
clc
movsl
xchg
sub
inc
daa
in
sub
leave
adc
cmc
mov
fwait
xor
inc
add
cmp
pop
cwtl
and
xchg
dec
jnp
jg
das
and
xchg
or
push
sub
rcl
sahf
inc
xchg
mov
aam
mov
sub
cmpsb
add
xchg
push
leave
push
jno
mov
and
and
pushf
push
ret
or
adc
add
lods
adc
mov
dec
test
sbb
jp
sbb
xlat
mov
popf
sub
and
inc
push
and
hlt
pop
stc
push
testl
aad
and
xchg
xchg
stos
push
inc
and
mov
andb
mov
inc
cli
pop
push
ret
sub
fstl
xchg
adc
or
repnz
jo
jbe,pn
fldenv
mov
or
js
push
and
sbb
fld
and
incl
mov
shll
es
inc
mov
and
dec
aas
push
fistl
pop
mov
xor
loop
dec
insl
lret
scas
testl
push
call
loopne
and
push
in
shll
adc
sub
xor
subl
jbe
lea
add
mov
cli
xchg
movsb
sub
jae
ja
sub
mov
loop
test
add
or
repz
stc
mov
push
loopne
push
xchg
mov
rorb
jnp
sub
inc
pop
and
inc
mov
jmp
mov
and
sub
ror
mov
jae
and
sahf
lock
mov
push
jno
push
aaa
imul
sub
lea
inc
xor
stos
scas
inc
inc
sub
sbb
lods
addl
or
and
subl
test
push
psubusb
jb
ljmp
out
pop
ret
lcall
outsb
fwait
sub
mov
sub
jae
cmp
adc
pop
cltd
lahf
cmp
push
and
icebp
jmp
stos
and
mov
jg
mov
sub
xlat
mov
push
and
int
sbb
mov
or
jl
sub
jg
rorb
imul
fnstsw
push
mov
outsb
xorb
and
mov
vmread
and
lods
sub
out
jno
cmp
and
clc
push
dec
jle
shrb
sub
mov
in
stos
and
push
jb
jecxz
ja
sub
cld
push
ret
test
mov
xchg
dec
and
lahf
inc
pushf
sub
bound
test
daa
ss
loop
jmp
and
fwait
sbb
xlat
and
mov
mov
imul
jp
sbb
imul
or
push
mov
imul
in
notb
pop
mov
xorl
fiaddl
int3
dec
dec
lea
and
cmc
shll
cltd
out
push
shlb
negl
cmp
stc
mov
sub
and
xchg
repz
gs
mov
jp
dec
jnp
mov
arpl
clc
test
rorl
lcall
dec
enter
mov
fcoml
repnz
fisubrs
mov
and
mov
inc
aam
mov
and
int3
pause
and
add
test
inc
sub
stos
sahf
sub
das
xor
repnz
pop
xor
lea
push
das
pusha
aam
fiadds
fsubs
out
sub
movsl
dec
sti
xor
test
jge
movsb
and
sahf
pop
xchg
int3
cld
adc
jp
inc
fisubrs
pop
push
xchg
outsl
xchg
push
mov
lods
adcb
add
cld
out
popa
and
clc
sti
fucom
fldt
and
iret
into
rcrb
push
dec
xor
xchg
mov
dec
pop
pop
jo
push
daa
xchg
mov
in
arpl
push
dec
xchg
and
les
and
mov
dec
jle
and
dec
aam
pop
inc
xchg
das
repnz
adc
loopne
sbb
mov
add
fldcw
mov
enter
rorl
ret
jno
scas
xor
jns
push
push
jmp
sub
cli
enter
and
or
inc
xchg
pop
mov
sbb
lcall
mov
lret
js
aam
outsl
sub
push
gs
out
popa
cmp
pop
push
jb
sub
cmc
leave
and
ljmp
sub
fwait
and
fimull
pop
add
jae
pop
scas
xor
or
ja
repz
and
movsl
and
lret
dec
jo
sarb
mov
sub
push
or
sahf
mov
int
sbb
loope
xchg
push
scas
and
mov
sub
sbb
aaa
movb
out
into
xchg
and
loop
and
and
fiaddl
add
xor
loop
mov
adc
subb
sbb
mov
incl
cmp
clc
mov
sub
repnz
movsb
xchg
outsb
push
ja
mov
xchg
and
int3
out
mov
sbb
clc
loopne
and
addr16
pop
mov
and
push
imul
shlb
push
jno
addr16
aam
cli
and
mov
sub
and
cli
add
lret
out
sub
xchg
add
mov
pushf
mov
mov
push
adc
pusha
hlt
and
sub
ljmp
jns
push
adc
and
jl
cmp
and
frstor
arpl
test
adc
jnp
mov
jge
sub
add
out
adcl
and
cmpsl
adc
xchg
inc
xchg
imul
test
push
mov
dec
icebp
and
movb
and
xor
xchg
and
aad
and
aaa
mov
and
pusha
movsl
clc
inc
insb
shll
ljmp
frstor
xchg
imul
dec
in
jne,pn
fcoml
mov
cmp
and
out
test
and
jne
add
jbe
push
sub
cmpb
daa
and
cmp
in
dec
jmp
push
xchg
xor
rcrl
fsubs
cmp
or
and
mov
xor
xor
fimuls
mov
je
data16
cmpsb
test
shll
push
jg
xchg
in
pop
and
sbb
sahf
fsubs
scas
mov
imul
and
loopne
or
in
and
test
insl
sti
cmp
out
adc
in
sub
cmp
sub
out
and
fcmovb
divl
dec
and
lods
bound
js
and
mov
mull
inc
cmp
and
or
cli
aad
push
or
nop
sub
cmp
fs
push
mov
out
pop
and
add
mov
insb
jp
and
dec
mov
imul
or
xchg
out
push
ret
js
sbb
in
daa
and
jg
scas
and
arpl
mov
popf
call
xlat
shrl
dec
mov
xchg
sbb
jno
jg
outsl
movsb
dec
and
mov
cmpsl
add
jmp
outsl
stos
aam
mov
jl
fs
lcall
and
xor
inc
pop
jge
inc
outsl
lods
and
mov
int3
push
pop
adc
push
cwtl
jae
fiadds
mov
cmpsl
sbb
lock
and
daa
mov
data16
sub
inc
int
push
pop
cmp
pop
popf
pop
mov
aam
xor
mov
and
out
mov
jle
and
lahf
dec
xchg
and
fwait
adc
and
outsl
daa
scas
iret
in
sbb
and
stc
xor
das
and
adc
xchg
mov
and
jmp
mov
cwtl
lods
push
popa
jnp
push
dec
and
jno
or
lcall
cli
shll
and
jl
xchg
adc
xchg
or
push
cs
jno
jae
mov
xchg
in
push
andl
push
push
pop
push
adc
and
fsubrs
flds
pushf
stc
leave
jae
cmp
sub
dec
bound
dec
cmp
std
sub
imul
call
push
inc
and
imul
lods
add
xchg
push
lcall
sub
pop
add
jbe
and
test
shll
and
adc
add
es
sbb
inc
and
push
div
loope
xchg
ss
xor
inc
popf
add
jmp
and
mov
insb
mov
repnz
imulb
in
mov
in
int3
mov
and
daa
js
mov
and
std
add
add
lea
shll
sbb
out
ret
enter
or
sbb
cli
cli
js
in
call
arpl
testb
loop
test
push
inc
lret
cmp
shll
out
dec
jecxz
cmp
lret
scas
dec
in
cli
push
cli
xchg
scas
out
adc
andl
mov
andb
sub
lods
rcll
dec
cli
out
rcrl
loopne
cmp
lock
cwtl
leave
push
int
jp
into
ss
xchg
mov
pusha
xor
dec
fisttpl
je
jns
es
sahf
cli
dec
cmp
aaa
mov
sbb
sub
jae
mov
sub
ss
push
imul
loop
mov
out
mov
sbb
sub
das
mov
in
xor
cwtl
das
dec
loop
xorb
adc
jmp
xchg
cli
sub
inc
cmp
xor
pop
and
es
cmpsb
lock
daa
push
or
ret
cmp
subb
fcmovnb
add
and
push
jnp
and
mov
cmpsw
jmp
xor
and
in
cli
jns
jo
aaa
mov
and
lock
cmp
and
jle
mov
mov
int3
sbb
jmp
adc
cmp
stos
add
lods
cmpsl
inc
add
mov
in
mov
push
mov
xchg
sbb
out
imul
shl
mov
cmp
lods
sub
push
fnsave
scas
jecxz
cli
es
mov
add
pushf
and
lock
shl
fisttpl
ds
sbb
stos
into
hlt
adc
mov
pushf
jmp
divl
shlb
cmp
ret
jecxz
mov
outsb
rcll
movsl
int
push
arpl
mov
outsl
movsl
enter
pop
xlat
rolb
lcall
insl
jmp
xchg
in
mov
out
aas
mov
inc
das
out
mov
pop
pop
xor
lods
mov
orl
inc
sub
js
adc
pushf
jo
jo
or
scas
pop
out
mov
rcrl
xchg
shl
int3
jno
sub
mov
xchg
dec
xchg
or
sbb
hlt
and
roll
fcmovbe
nop
aam
loope
jbe
mov
push
int3
daa
inc
adc
dec
scas
sbb
push
lods
jmp
mov
mov
and
sub
subb
or
xchg
popf
int3
shrl
pop
sub
mov
add
mov
sbb
in
loopne
adc
cmpsl
aad
sub
mov
xor
mov
pop
insl
shr
imulb
or
mov
ss
cmpsl
sti
dec
adc
pop
mov
jecxz
int3
xor
lods
adc
lcall
es
push
xchg
fsts
push
xchg
in
dec
add
jo
sarb
push
add
lock
fst
sub
and
push
sub
notb
dec
xor
xlat
loopne
mov
adcl
add
inc
ljmp
xor
rcll
in
cmp
ret
add
sahf
mov
imulb
mov
ds
pop
xchg
aam
and
fwait
test
add
testb
cs
cwtl
or
out
pusha
int3
ficoml
rep
sbb
sbb
pusha
pop
xchg
mov
rcrl
insb
and
rcl
push
lods
jmp
ljmp
sub
loope
jno
aam
cld
fcmovnbe
and
in
mov
rol
inc
lock
shl
sbb
jmp
hlt
aam
push
in
shrb
inc
in
in
out
cltd
neg
aas
cs
nop
fstl
or
or
mov
push
and
sub
sub
push
sbb
shrl
or
ja
lods
push
lods
xchg
push
call
out
dec
out
sub
scas
mov
jne
add
push
jne
lods
fcoml
sbb
sbb
mov
aas
jmp
adc
mov
jl
test
mov
cmp
sub
dec
in
mov
mov
sbb
loop
in
xor
push
xchg
cmpsl
in
lods
mov
pop
jg
xchg
dec
imull
pop
shlb
inc
lods
pop
ljmp
pushf
mov
add
push
and
xchg
aam
je
sahf
or
js
cli
fcmovnbe
ret
mov
fmull
sub
repnz
ja
insl
minps
adc
lcall
repnz
loopne
push
and
mov
movsl
pop
xlat
add
add
fmuls
aas
inc
sbb
cltd
ljmp
add
leave
inc
add
xor
stos
ret
or
adc
mov
cs
scas
test
mov
sbb
xlat
in
jb
fcmovne
rclb
sub
insb
cli
push
insl
test
add
mov
pop
and
dec
xchg
daa
sarb
repz
scas
scas
mov
xchg
fstp
fsubs
mov
movsl
xor
test
in
inc
in
jno
repnz
add
sub
aas
dec
movsl
cmp
ret
xor
shrl
in
pusha
add
sub
movsb
dec
adc
pop
repnz
pop
in
out
add
repnz
int3
insb
insl
insb
jae
in
adcl
sub
dec
cmp
setp
lods
ljmp
jb
sub
push
js
ljmp
dec
cmp
push
or
ja
out
mov
rcl
push
test
in
xchg
and
idivl
sub
or
sub
sarl
hlt
sub
stc
lock
mov
lret
and
jmp
xchg
push
loop
repz
inc
xchg
sarl
ss
cmp
push
insb
insl
xor
jne
call
xchg
mov
jno
cli
aad
cmp
repnz
sar
sbb
and
in
push
mov
mov
outsl
mov
cmc
lods
fs
mov
lds
js
xchg
add
rol
adc
insb
leave
push
pop
ret
mov
cmpsb
rcll
inc
or
call
fs
sub
mov
push
test
imul
mov
dec
rcrl
cmc
mov
testb
outsb
cmp
mov
mov
mov
pop
pop
aad
dec
insl
inc
rolb
test
add
pop
mov
inc
and
push
aam
jmp
repnz
movd
cmp
inc
daa
je
dec
add
pusha
xchg
iret
jbe
dec
ja
sub
dec
adc
in
push
and
mov
cltd
mov
mov
in
insb
hlt
add
xchg
jecxz
push
xchg
ret
lcall
loope
insl
or
ljmp
xchg
bound
cmp
ficoml
ret
xor
int3
into
hlt
loop
iret
out
xor
sti
int3
sbb
mov
xchg
xchg
add
inc
insl
int3
mov
pop
dec
imul
pusha
jae
loope
rorl
pop
jmp
dec
out
enter
adcb
pusha
les
mov
rorl
scas
movsl
jmp
addb
cli
stc
mov
xchg
adcl
add
ret
fisubs
lock
aaa
jp
push
add
fninit
in
cmp
xchg
scas
adc
aam
shrb
lds
xor
fwait
imull
mov
test
test
mov
mov
or
fnstsw
sub
shrl
xor
inc
out
fwait
ret
mov
test
add
adc
mov
ljmp
xor
insb
or
dec
add
mov
sub
out
jo
pushf
lock
jne
and
lahf
add
loopne
aam
fdivrl
icebp
cs
insl
adc
mov
lods
add
in
aas
jno
mov
push
inc
dec
xlat
loop
ljmp
mov
adc
push
enter
test
negl
clc
adc
and
adc
loop
outsl
push
call
rcrb
shll
fs
add
push
das
repz
sbb
xchg
insb
out
mov
mov
hlt
pop
aaa
addr16
mov
pop
adcb
arpl
push
sub
insb
jmp
mull
mov
mov
mov
clc
cmp
imul
sub
sbb
in
popf
sub
repz
orb
push
add
rclb
fcoms
jle
or
or
xchg
pop
ret
lret
das
fldt
add
and
xchg
nop
daa
in
out
mov
and
nop
pop
jmp
inc
or
cli
into
int3
inc
mov
adc
adc
jmp
mov
or
adc
jmp
mov
or
shll
mov
stos
lods
ret
lea
fstps
ret
pushf
mov
lret
mov
movsb
insl
ret
out
cwtl
decl
faddp
adc
and
pop
das
das
cltd
mov
xor
sbb
add
dec
imul
mov
mov
sti
mov
mov
adc
xchg
or
scas
jno
sub
ljmp
lret
jnp
inc
push
and
jne
imul
push
or
xchg
push
ja
lcall
lcall
sahf
mov
cmp
and
pop
cs
les
imul
push
out
ss
pop
cli
insl
aas
or
repnz
sbb
mov
and
push
rorl
mov
cmp
adc
sub
lret
inc
xlat
or
and
in
sar
add
in
add
subb
push
add
ret
dec
xchg
loop
xchg
imul
mov
mov
add
pop
rorb
loopne
cmp
loop
stos
sub
js
jmp
in
aaa
and
sub
sahf
inc
pushf
lcall
shl
stc
sub
aam
in
sub
xor
arpl
fnstsw
shrl
xlat
push
cltd
insb
fldcw
mov
lods
insb
pop
cmp
ret
das
push
sahf
xchg
mov
xor
ret
lea
stos
in
dec
aam
lcall
lret
pusha
mov
in
sbb
xor
orl
push
sub
xchg
cmp
mov
js
sub
jecxz
sub
xor
pop
add
jle
fmull
mov
dec
sub
cmpsl
or
xor
aaa
fwait
mov
mov
fdivrl
inc
out
out
fmull
mov
aam
mov
rol
stc
xchg
adc
and
jne
loop
or
cli
cmpsb
mov
pop
sti
int3
shl
repnz
and
dec
scas
mov
les
dec
jno
rcr
adc
ljmp
dec
in
ljmp
xor
add
sti
dec
iret
cs
or
mov
adc
cli
cmpsb
loop
int3
sarl
xchg
jge
and
roll
imul
enter
icebp
pop
or
pop
stos
and
xlat
sub
push
add
repz
xchg
in
in
or
xchg
ret
lods
push
in
lds
fsubr
dec
ret
dec
insl
aas
loope
ds
push
in
xchg
dec
out
icebp
push
push
push
xchg
sti
mov
into
out
sbb
out
imul
rol
outsb
cltd
das
not
fnsave
pop
adc
jp
lahf
and
in
hlt
jle
push
lods
mov
out
xlat
fsubrs
int3
fistpl
js
shrl
das
cmp
sbb
add
sbb
lods
mov
stos
lret
stos
pop
mov
jp
mov
push
pop
and
jmp
cmp
mov
xor
aad
mov
ret
mov
push
in
mov
inc
mov
roll
xchg
jo
insl
adc
dec
xor
xchg
or
jb
nop
movsb
leave
xor
adc
out
mov
cmp
xchg
imulb
lret
stc
add
orb
mov
aam
mov
inc
dec
lcall
jge
xor
jnp
dec
icebp
leave
in
sub
xchg
scas
test
das
ljmp
xor
call
xor
xchg
fdivs
cltd
mov
int3
push
xor
pushf
push
jbe
push
add
aam
mov
shl
lret
movsl
push
jmp
dec
or
sbb
fstl
movsb
or
jne
repnz
jg
ret
outsl
xchg
sbb
adc
rcll
push
outsl
loopne
lea
cld
das
jbe
ret
dec
sub
stc
push
inc
and
xor
jecxz
inc
stos
dec
mov
cwtl
mov
insb
cmpsb
mov
pop
mov
ds
dec
add
or
cs
repnz
fistpl
in
push
sub
fadd
lods
xor
hlt
loopne
sbb
mov
or
and
rol
xchg
setno
das
iret
aas
lcall
mov
cmpsb
pop
push
test
addr16
dec
add
in
and
push
outsl
pop
mov
js
cmp
es
in
xor
push
loop
daa
cmp
jle
loopne
testb
sub
xchg
repz
sbb
mov
cmp
cmp
test
cli
cmpsb
xor
sub
cmp
xor
cmp
dec
stos
movsb
xchg
shl
out
lcall
hlt
outsl
cs
insl
mov
inc
repz
push
mov
cs
add
ret
sahf
jge
into
outsb
les
mulb
std
fimuls
fsubl
mov
in
add
popa
outsl
test
mov
outsl
popa
xor
dec
bnd
jl
sarb
sub
inc
mov
sbb
mov
in
jno
inc
cmpsb
add
dec
push
inc
pop
dec
jnp
imul
xor
dec
xlat
imul
pop
xor
mov
pop
testb
dec
pop
sub
xchg
xor
bound
xchg
icebp
in
rorl
pusha
mov
add
xor
jmp
fisttpl
and
cmp
hlt
popa
in
sub
andl
sub
jp
mulb
pop
cmp
sub
mov
data16
popa
gs
mov
sti
into
pop
stc
pop
insl
iret
or
rol
pop
mov
lcall
jmp
call
ficompl
mov
and
outsb
sahf
imul
push
lahf
jae
inc
sub
ficoms
sbb
fdivl
dec
or
dec
std
loopne
or
pop
int3
dec
sub
jmp
sbb
scas
or
out
jmp
nop
lret
cmp
nopl
mov
fistpll
adc
mov
sbb
and
shll
pop
cmpsb
sub
xchg
mov
movsb
pushf
sbb
lret
sbb
mov
cmp
push
cmp
fidivrl
xchg
scas
adc
fs
in
popa
cwtl
xor
cmp
xchg
adc
shll
adc
cwtl
mov
outsl
ds
bound
fists
out
mov
cmp
inc
xor
cli
mov
addb
sbbl
adc
xchg
test
test
sub
loope
mov
adc
pop
into
mov
ret
push
js
inc
and
add
bound
in
rcrl
js
and
or
jo
ljmp
or
cli
mov
scas
testb
sahf
pop
cltd
pop
dec
add
and
scas
mov
sbb
xorl
in
sub
fucomi
inc
xorb
test
dec
nop
subb
push
ret
repnz
repnz
xchg
out
lcall
ss
and
jge
push
enter
mov
xchg
add
roll
leave
movsl
fnsave
sti
and
sub
push
repz
mov
outsb
inc
and
ror
mov
sar
sub
inc
insb
sub
xchg
xchg
mov
lock
orb
in
fwait
lahf
push
testb
in
out
outsl
aas
xor
cs
ficoml
sub
pushf
sub
shr
sbb
pop
enter
fs
lods
push
lret
lea
inc
lock
cmpl
sub
mov
xor
inc
popl
and
testb
nop
inc
roll
mov
jg
dec
sti
je
lcall
push
fs
and
ret
pop
sbbb
dec
aaa
mov
ljmp
repnz
jae
out
out
sub
ret
push
in
enter
outsb
sbb
push
push
and
fcmove
mov
aam
mov
rolb
add
xchg
add
mov
sahf
imul
decb
jnp,pn
loop
in
lods
dec
ja
shl
sbb
cmc
or
jg
mov
cs
dec
mov
sbb
in
pushf
in
jb
daa
push
mov
push
xlat
movsl
cltd
pop
int3
subb
inc
sbb
adc
lods
cs
shl
jg
fucompp
xor
rolb
and
test
cmp
xlat
sbb
ljmp
in
and
jbe
add
sub
arpl
rcrl
cld
pusha
mov
push
jns
leave
adc
les
mov
je
es
ret
push
and
pusha
and
cmp
mov
in
mov
push
test
stos
es
fwait
repz
pushf
sbbl
add
out
mov
fdivrl
or
and
inc
pop
or
in
push
lcall
push
cmp
push
pushf
outsb
add
popf
sub
js
in
aam
mov
dec
mov
xor
pop
pushf
mov
icebp
outsb
lret
mov
cmpsb
adc
ret
or
or
pop
xchg
subb
lods
cli
push
aam
xchg
inc
sahf
xchg
cwtl
add
push
mov
ljmp
hlt
dec
test
sbb
add
shll
mov
insb
jae
mov
repnz
add
or
in
and
jle,pt
mov
cmp
adc
insl
xchg
and
sbb
xchg
lock
xchg
mov
or
push
sarl
bound
dec
divl
hlt
cmp
push
pusha
jb
das
ror
mov
adc
in
sub
loope
icebp
jb
xchg
mov
popl
out
pop
lahf
fs
jmp
in
test
dec
stos
fiaddl
cwtl
movsb
dec
sub
sahf
push
xor
jmp
ljmp
jl
or
jmp
jmp
mov
and
mov
lcall
cs
gs
xor
inc
jmp
in
jge
mov
test
testl
jmp
scas
cmp
and
sub
pop
jle
inc
push
into
mov
mov
in
xor
loope
jb
pushf
cmp
scas
jno
dec
fidivs
rcll
push
add
mov
push
outsl
ret
mov
dec
lods
sbb
dec
rcll
inc
fisubl
xor
aaa
fnstcw
test
ret
pop
in
xchg
pop
jmp
pusha
pop
lds
cs
rolb
lea
push
ret
dec
pop
divl
mov
or
orl
push
push
insl
xchg
stos
mov
add
or
inc
out
pop
xchg
jns
or
popa
ret
push
dec
xor
lock
lret
xor
rorb
lods
loopne
out
lods
shll
mov
mov
mov
fs
int
lods
xlat
mov
lcall
mov
push
inc
shl
pop
add
mov
shll
leave
xchg
mov
push
adc
mov
sub
scas
mov
ljmp
aam
mov
loope
jbe
pushf
cmp
in
ficoml
cmc
sub
imul
lods
scas
push
in
iret
imul
pop
repnz
ljmp
imul
sbb
arpl
mov
jecxz
push
fcomp
pop
cwtl
push
inc
mov
mov
xor
or
sbb
mov
jecxz
in
int3
sahf
xor
xchg
or
rcr
orb
pop
mov
dec
jne
cs
jb
lods
push
ret
out
pop
aad
jmp
lret
shrl
push
jmp
mov
push
pop
out
or
call
and
push
hlt
pop
push
mov
inc
cli
insl
xor
testb
hlt
popf
gs
ss
sbb
xchg
jp
scas
and
test
mov
mov
and
pop
rcll
mov
leave
push
in
into
je
dec
and
jl
in
dec
inc
push
mov
mov
adc
jmp
add
jo
and
fldlg2
mulb
dec
lahf
aas
cmpl
rclb
and
mov
pop
enter
xchg
lds
push
mov
pop
mov
xchg
cmp
pop
stos
push
add
jle
shrb
hlt
scas
in
inc
xor
mov
or
in
nop
ret
sub
xchg
or
pop
stos
ds
sbb
mov
in
mov
lods
sub
push
les
jecxz
mov
sub
ja
and
icebp
ret
lcall
ss
cmp
and
sub
mov
adc
jmp
pop
mov
rcll
aas
xchg
or
cmpsb
push
and
jbe
sub
in
push
sahf
aad
sbb
repz
mov
std
in
shrb
es
push
sbb
rdtsc
ret
jmp
push
rorl
in
dec
pushf
or
sbb
fisubrs
push
icebp
stc
jmp
cltd
fsubr
dec
push
and
fstpt
gs
and
mov
cwtd
adc
push
outsl
adc
outsb
xor
inc
inc
ret
imul
adcb
addr16
les
and
cmp
inc
pop
lods
fcmovnb
aad
jg
sbb
aaa
aad
shll
adc
and
push
pop
cmpsl
fdivl
xorb
mov
mov
sub
mov
mov
int
out
rclb
push
push
lods
push
scas
sbb
adcl
movsb
mov
outsb
xchg
sub
iret
mov
or
out
jmp
aaa
lods
dec
jmp
add
das
mov
fimull
mov
shl
jle
jo
or
ja
ret
rol
xor
and
xchg
lds
notb
sub
xchg
jge
sbb
jns
ljmp
xor
and
into
xor
xchg
aad
cmpsl
and
outsl
cmp
push
pop
mov
data16
into
hlt
push
or
jp
out
cltd
pop
popf
xchg
jecxz
pop
das
sti
rol
sarl
jmp
in
enter
mov
call
in
pop
mov
out
cmp
test
decb
mov
imul
negb
sarl
lock
push
add
or
fcoml
ljmp
out
mov
push
push
lcall
cmp
pop
rol
mov
loop
jmp
pusha
out
sub
inc
repnz
inc
loope
dec
sbb
movsb
mov
lock
js
pushf
cmp
pop
pushf
mov
mov
lret
push
add
jecxz
and
mov
fidivrl
mov
or
fsubr
das
add
jle
fdivr
dec
rep
xor
jecxz
push
arpl
jle
ret
mov
xchg
pusha
out
imul
lods
aas
inc
push
push
bound
add
les
insl
mov
fucompp
pop
mov
ret
mov
xchg
pusha
mov
jne
xor
or
faddl
test
loop
jnp
cmp
rcrb
and
rclb
xchg
mov
pop
mov
repz
adc
out
and
inc
push
shlb
nop
push
lret
or
cld
xchg
sub
fdivl
imul
stos
gs
jae
jmp
mov
sub
out
sbb
cmp
jbe
push
fldcw
in
or
loopne,pn
dec
pop
jae
sub
sbb
jg
mov
lods
xchg
sahf
adc
aaa
mov
push
cli
mov
inc
dec
cmc
cmpsl
xchg
xchg
in
sahf
cwtl
and
not
push
adcl
test
mov
insl
mov
les
iret
lods
vmwrite
cli
call
dec
adc
push
imul
icebp
pop
dec
shl
mov
or
outsl
mov
in
stos
pop
mulb
jb
add
mov
imul
mov
addr16
shr
cld
mov
call
stos
test
xchg
cltd
dec
sub
or
or
daa
add
in
dec
repnz
pop
in
and
cli
jae
mov
das
in
mov
sbb
jmp
jns
or
jl
dec
xor
into
sub
adc
adcl
cwtl
push
sbb
jno
mov
addr16
addr16
dec
add
sahf
sbb
cmp
xor
adc
adc
and
iret
sahf
push
mov
pop
sub
mulb
mov
enter
ret
cmp
clc
loopne
pusha
sahf
or
stos
mov
xchg
loopne
push
add
pusha
lock
in
dec
cmc
cli
inc
ljmp
mov
icebp
in
cmc
pop
jae
dec
sarl
js
ret
gs
cmpsb
jo
lods
mov
add
jae
sahf
push
lods
mov
ret
pushf
push
mov
or
adc
imul
xor
pop
pushf
loope
int3
test
rclb
push
and
scas
cmp
sub
mov
adc
inc
jmp
fisttpl
fidivs
divl
mov
jmp
jecxz
sti
mov
mov
sub
movsl
jmp
jge
push
daa
in
xor
mov
xchg
cltd
push
lock
xchg
pop
leave
push
cmp
insl
sbb
imul
and
cmp
call
xchg
ljmp
in
push
mov
and
shr
ljmp
jne
out
test
jo
mov
sarb
pop
xchg
cmp
notb
dec
xchg
mov
pusha
push
scas
inc
sub
lea
lcall
mov
xor
enter
xor
jmp
adc
sub
jns
scas
outsl
dec
movsb
fdiv
jmp
aaa
sbb
cli
xlat
icebp
mov
cltd
fists
sbb
push
jae
insl
enter
pop
inc
jno
inc
or
stos
xchg
or
pushf
imull
fmull
pushf
imull
cmp
jae
adc
pop
shll
pop
das
lcall
mov
mov
scas
mov
lods
imul
andl
push
imul
pop
push
leave
ret
dec
aam
add
jne
pusha
mov
push
out
pushf
mov
mov
pop
ret
js
bound
lods
sbb
mov
es
pop
xchg
fidivl
icebp
imul
jecxz
in
push
jmp
test
or
jne
movsl
push
ljmp
rclb
and
outsb
in
mov
into
inc
rorl
mov
dec
mov
test
xor
add
fiadds
lods
jne
testl
inc
fidivl
aam
mov
out
mov
pop
xchg
jno
add
mov
mov
pop
fists
inc
pusha
xchg
dec
add
mov
lret
cmpb
scas
add
sarl
add
mov
js
inc
pusha
add
mov
cmpsb
rcrl
stos
mov
testl
pop
add
dec
jge
cmpl
movsb
and
inc
scas
fidivrl
jns
imul
and
or
in
dec
xchg
push
into
jecxz
sub
lods
addr16
lock
mov
mull
in
xchg
out
in
sub
test
cmp
in
jnp
mov
push
xchg
jnp
add
hlt
test
push
xor
lret
ficoms
jns
mov
or
fmull
mov
aaa
mov
inc
cmpsb
lock
push
in
sub
xchg
jo
inc
xor
and
push
aam
add
out
jl
aam
ret
pop
dec
cltd
enter
sub
xor
je
xor
jnp
mov
adc
adc
imul
xchg
cmp
mov
cmp
pop
mov
or
adc
pop
mov
push
cmp
push
mov
and
add
sti
or
jle
dec
aas
sbb
out
loop
cld
imulb
ret
xor
inc
mov
adc
xor
ret
or
imul
inc
movsb
mov
popf
cwtl
aam
fsubrl
dec
mov
push
repnz
aaa
lea
xchg
sahf
dec
fcmovnbe
faddl
push
rorl
push
cmpsl
test
insb
or
dec
hlt
dec
movsb
inc
mov
in
push
dec
push
aas
inc
pop
dec
add
dec
mov
push
mov
shll
or
fucomip
lret
arpl
mov
mov
xchg
std
jle
and
cli
mov
inc
test
xchg
push
xchg
add
and
mov
mov
jecxz
pop
outsl
mov
cld
iret
rcr
jnp
mov
mov
sbb
stc
pop
scas
stos
hlt
push
xchg
or
xchg
push
mov
mov
add
add
pop
flds
xchg
aam
pop
xchg
dec
adc
jge
in
cmpsb
push
sahf
addl
data16
test
insb
cmp
mov
sub
jmp
ja
pop
pop
adc
enter
jmp
mov
sub
cli
cmp
test
sbb
idivl
jmp
imul
cmp
fistpll
xchg
pop
enter
inc
cltd
mov
mov
pop
ja
cwtd
jg
xchg
repz
add
push
pop
sbb
or
out
lods
icebp
jmp
or
mov
push
call
pop
fimull
and
jne
out
ja
xor
insl
or
cmpb
cmpsb
in
dec
or
shrb
shll
stc
or
xchg
arpl
push
frstor
pusha
ljmp
scas
sbb
jo
call
addl
mov
lds
lds
aam
loop
dec
cli
lcall
inc
or
aam
cmpl
or
pop
dec
or
ja
sti
sub
add
int3
test
cmp
pushf
std
mov
adc
cmpsw
outsl
and
xchg
repz
sahf
lret
rcl
pop
mov
addb
xlat
mov
popa
shl
mov
jae
add
push
jns
cmp
test
jge
mov
sahf
iret
addr16
xchg
fidivl
cld
cld
sbb
loop
dec
mov
imul
and
loope
inc
push
mov
lahf
scas
jge
xor
inc
insb
and
mov
pusha
rcrb
pop
out
or
loop
push
shl
inc
mov
mov
add
jbe
mov
das
rcrb
test
cld
sti
adc
cmpsb
ds
stos
xchg
inc
cmpsl
js
fwait
push
xchg
subb
xchg
pop
mov
bound
scas
or
lret
stc
mov
iret
out
ret
cli
jb
push
and
ss
mov
aas
xchg
adc
in
adc
lret
jl
or
les
adc
ror
loop
fwait
jo
sub
lahf
push
fstps
and
ret
push
test
mov
lret
iret
mov
adc
jmp
mov
jmp
int3
add
mov
pusha
sub
shl
cli
push
mov
sbbb
add
mov
inc
push
ficoms
imul
add
pop
pop
mov
insl
or
into
push
xor
pop
adc
mov
mov
mov
mov
push
cltd
in
call
shrb
out
cltd
in
push
pop
fs
repnz
dec
pop
push
loop
xchg
mov
mov
gs
push
cmpsl
or
mov
test
and
arpl
sti
out
ret
test
pop
fdivrl
es
lret
pop
xchg
mov
mov
xor
adc
int
sbb
ljmp
in
pop
cltd
adc
out
aaa
scas
push
loop
cmp
ret
inc
or
xor
fbstp
adc
ret
push
sbb
xchg
decb
int
xor
fdivs
xchg
test
movsl
jmp
test
rcl
mov
mov
sahf
and
mov
ljmp
roll
sti
and
movsl
dec
sub
mov
dec
or
and
repz
jb
out
mov
ljmp
rol
jge
xor
ljmp
sub
xchg
mov
lcall
jo
das
pop
push
outsl
out
cmp
aam
repz
or
adc
mov
fsubs
daa
fcoml
and
xchg
and
rorl
dec
add
jecxz
push
jb
das
jle
mov
adc
repnz
in
out
push
fwait
pop
sarl
sbb
xchg
icebp
or
scas
ja
test
in
pop
xchg
xchg
in
push
arpl
or
push
dec
mov
pusha
arpl
ss
pop
orl
mov
test
push
lahf
enter
pusha
leave
jl
cmp
cwtl
mov
ja
lea
inc
aad
lret
fnstsw
mov
jp
push
testl
int3
int3
lcall
pop
mov
fwait
daa
xchg
pop
mov
or
icebp
stos
sub
idiv
sub
repz
adc
inc
push
negl
in
imul
sbb
dec
cmpsb
arpl
sub
adc
cltd
mov
jno
popa
ficoml
cmp
fsubr
dec
test
add
cs
sbb
push
jne
int3
dec
push
std
sbb
fcompl
scas
mov
imul
in
rcrb
shrl
popa
inc
in
xchg
jmp
cmpsl
mov
jecxz
test
dec
cltd
imul
pop
inc
and
inc
rcrl
mov
adc
loope
lds
sub
mov
adc
push
outsb
mov
subl
cltd
je
insb
not
sbb
in
mov
xor
sbb
lds
test
lods
pop
repz
jge
lahf
dec
incb
aas
aaa
push
push
repz
sbb
adc
add
fiaddl
add
insl
gs
je
dec
adc
sub
test
leave
outsl
mov
ss
ja
fs
xchg
xchg
negb
enter
add
xlat
xchg
cwtl
sbb
popf
mov
shlb
xor
lahf
aad
sbb
cmp
adc
push
adc
push
ret
gs
cmp
fistl
cmp
dec
push
std
jns
fidivl
push
ret
or
arpl
inc
jmp
push
or
fnsave
movsl
lcall
arpl
shrl
ss
pop
xchg
lret
mov
adc
in
cmpl
cld
imul
lcall
popa
lock
sbb
stos
addr16
jno
mov
adc
mov
mov
adc
ret
adc
std
arpl
mov
shll
loope
adc
push
sbb
movsb
sbb
add
sub
mov
xchg
aad
aaa
out
fnsave
xchg
loop
sti
scas
dec
sbb
mov
add
push
xchg
divb
pop
sti
mov
mov
inc
mov
outsb
pop
or
cmp
mov
sub
xchg
mov
fidivrl
divl
lcall
xchg
mov
inc
jecxz
aaa
sbb
ss
mov
xchg
pop
out
xchg
pusha
cmpsl
movsl
and
sub
int
adc
ret
xorl
cmp
les
adc
mov
sahf
nop
aam
mov
cmpsl
jge
push
leave
add
cltd
pop
xchg
ds
bt
out
sbb
jge
pop
int3
mov
insb
push
test
jmp
adc
push
std
add
xchg
cmp
je
jns
js
sub
into
push
sub
fbstp
lds
dec
adc
mov
jecxz
lea
adc
pop
or
mov
sub
mov
jae
shll
or
gs
lods
rcll
push
sahf
push
and
roll
push
aam
mov
xor
jp
inc
rcrl
sbb
cmp
and
mov
stos
iret
scas
or
test
out
sub
sahf
mov
mov
mov
std
arpl
sbb
xchg
cltd
test
into
xor
test
mov
mov
ljmp
push
mov
arpl
push
das
push
xor
mov
sahf
jmp
add
lret
push
adc
xchg
push
lcall
repz
mov
pop
popl
movsb
stos
xor
test
mov
jo
dec
push
loop
pop
aad
outsb
mov
movsl
lcall
jb
mov
addb
and
push
mov
jnp
cli
jg
mov
and
sbb
mov
and
pop
dec
push
cs
or
jno
sti
test
fdivr
lret
dec
push
push
ret
sbb
test
data16
mov
rcll
repz
loop
mov
outsl
bnd
cmpsb
orb
adc
roll
sub
xchg
push
js
push
cltd
rolb
cmp
or
jmp
jle
das
and
in
sub
mov
and
in
int
jmp
repz
test
xchg
xchg
jne
subl
test
negl
xchg
shll
std
add
test
hlt
pop
cmp
in
mov
xorb
int3
push
fiaddl
lea
jnp
sbb
mov
xor
rcr
jp
xchg
xchg
out
pop
jns
idiv
push
in
mov
mov
lea
test
icebp
xor
rorl
les
loop
cmp
repz
mov
push
stos
push
cld
mov
inc
fdivp
jmp
xor
test
mov
dec
pop
adc
xchg
cmp
or
enter
aam
test
into
aas
mov
popf
adc
sbb
sarb
outsb
dec
decb
or
cmp
cmp
lret
popf
cltd
lret
imul
je
jp
subb
or
repnz
lret
push
push
mov
insl
fldcw
nop
add
idivb
mov
adc
pop
jnp
movsb
adc
out
popf
jecxz
push
js
inc
fisttps
insl
rol
sti
and
sbb
sub
mov
or
rorb
loopne
cmp
test
sbb
sti
mov
push
in
sub
jge
andl
or
fcoms
fisubrs
jecxz
or
cs
sbb
dec
or
mov
cmp
fs
mov
mov
stos
scas
outsb
jnp
popa
xchg
sub
or
push
mov
orb
push
cs
and
push
mov
das
dec
push
leave
shll
xchg
dec
loope
out
fstpt
push
lods
ljmp
dec
mov
aaa
push
mov
push
or
inc
ljmp
shll
in
sub
sub
mov
js
sub
inc
orb
cltd
stc
cmp
add
adc
in
fisttpl
add
testl
inc
lcall
out
jmp
push
inc
movsb
and
rcrb
sub
insl
pushf
jo
mov
out
les
mov
dec
cld
aas
int
loopne
out
push
mov
imul
std
inc
pop
sub
push
int
cmp
arpl
sbb
shrb
jne
lock
fnstsw
push
mov
call
and
adc
dec
push
shl
sub
das
ffree
notl
mov
mov
leave
bound
in
fcoml
xchg
roll
mov
push
jo
mov
push
xor
jmp
jge
cld
sub
mov
pop
mov
repz
cld
mov
add
sar
push
in
jp
in
mov
add
push
sbb
or
aad
push
mov
push
loope
jne
dec
test
test
jmp
loop
or
jmp
sub
testb
das
pop
xchg
into
in
lcall
cmp
or
insl
or
xchg
lock
dec
inc
xor
cs
sbb
rcrl
pop
out
test
cmp
sub
aad
add
xor
popa
mov
or
inc
adc
mov
aas
int
adc
int3
ds
push
or
xchg
rcrb
xor
cmp
js
and
mov
scas
lret
outsl
dec
push
xchg
sarb
movsb
push
dec
out
dec
cmp
into
dec
jl
lahf
int
dec
pop
cmp
fdiv
dec
push
pushf
sti
dec
push
test
dec
lods
es
stos
sbb
out
or
mov
fcompl
gs
out
sbb
les
testl
les
fucom
outsb
jmp
stc
push
inc
shrb
std
mov
cld
lahf
add
mov
sahf
sub
test
cmp
movsb
xlat
fucomi
push
loop
sub
add
pop
fnstenv
jo
lds
adc
add
mov
lds
sbb
stc
dec
icebp
and
push
add
cltd
jne
pop
jne
mov
xor
pop
cmp
sbb
nop
mov
dec
mov
in
mov
ficoml
aas
shlb
cmc
scas
or
js
pop
mov
pop
adc
push
jns
mov
mov
daa
cmpb
jmp
loop
imul
pop
mov
scas
sub
mov
adc
imul
cmp
pop
dec
rorl
push
xor
fnstenv
or
jo
addl
hlt
in
or
mov
jmp
xlat
mov
adc
inc
shll
leave
in
insb
cmc
cmpsl
mov
mov
sub
cmp
bound
arpl
lods
sub
sub
scas
imull
out
push
mov
gs
scas
in
lret
in
jbe
or
pop
popa
outsl
push
aad
add
inc
shlb
push
cmpsb
pop
cmc
pop
mov
dec
addr16
lods
je
lcall
xchg
and
cwtl
jns
xchg
in
inc
dec
jmp
cmp
jmp
mov
jle
roll
jno
ret
mov
gs
nop
mov
add
inc
jge
and
xchg
mov
int3
mov
cld
jbe
xor
or
lods
arpl
lcall
shl
or
pop
cmp
cmp
push
shll
jne
jmp
jae
test
xor
cltd
test
cmp
scas
push
sub
stos
aad
int
push
xor
jo
repz
xchg
xchg
cmc
imull
mov
dec
sahf
push
ljmp
jno
call
or
dec
mov
fwait
shrl
mov
gs
test
les
ret
adc
adc
insl
int3
add
cmp
je
in
sbb
pop
jp
ret
push
ret
xchg
dec
add
bound
test
inc
push
cltd
cmp
adc
cld
int3
cmpsb
das
call
mov
sub
jmp
sub
pop
lahf
cltd
mov
sub
in
in
into
and
in
pop
xor
cwtl
add
cmp
jecxz
das
or
in
adc
or
mov
hlt
xchg
sti
dec
xor
cmp
rorb
lcall
loope
arpl
fisubs
dec
pop
lcall
dec
lods
xchg
or
hlt
ljmp
sbb
sub
xor
lods
xlat
mov
xchg
out
pop
inc
cs
dec
add
insl
and
cltd
push
xchg
push
ffree
xchg
pop
arpl
cmp
aaa
aaa
jo
sbb
test
scas
ds
lahf
mov
add
push
hlt
inc
adc
test
pop
or
fisttps
call
fsts
shlb
test
sub
inc
inc
imul
dec
mov
cwtl
call
scas
ret
sbb
repz
xchg
into
and
jmp
mov
int3
repnz
repz
lock
jnp
sub
cmp
inc
mov
adc
lods
leave
fldenv
inc
mov
pop
mov
data16
out
loope
jp
sbb
call
push
lock
lcall
aam
dec
ret
cld
das
in
sub
mov
mov
popa
pusha
es
adc
push
or
hlt
push
movsb
lgs
mov
movb
pop
fbld
in
ljmp
mov
int3
mov
movsl
in
imul
lock
scas
test
xchg
mov
mov
jmp
dec
add
test
jne
iret
xchg
outsb
jns
out
jns
out
mov
cmp
in
das
scas
jmp
mov
ds
mov
cmpsb
call
mov
in
popf
jl
push
jmp
xor
mov
mov
in
or
iret
or
sahf
lock
out
cwtl
aas
or
mov
dec
mov
test
pusha
out
data16
clc
stc
push
push
cli
or
sbb
lahf
fcoml
jmp
jmp
mov
jp
ss
inc
rclb
aam
dec
inc
lock
push
dec
cli
rcr
and
imul
imul
int
or
mov
or
pop
mov
dec
ret
mov
pusha
leave
or
lea
push
jbe
pop
xchg
xchg
stos
mov
mov
xchg
or
repnz
mov
out
pushf
add
jne
imul
pusha
movsb
cld
ljmp
arpl
nop
in
cld
or
add
dec
aaa
mov
adc
mov
rcrb
arpl
mov
stos
adc
sahf
dec
sub
pop
insl
xor
jmp
mov
test
mov
or
jge
jp
jnp
dec
pop
outsl
emms
rorl
sbb
dec
jmp
loope
fisubl
push
mov
les
lock
adc
repnz
cmp
jno
sti
test
in
pop
or
andb
and
adc
mov
aad
xchg
notb
movsl
daa
inc
pusha
insb
adc
sbb
js
je
jmp
fstpt
mov
fstl
daa
arpl
flds
dec
xchg
dec
add
into
sbb
rorl
stc
aad
dec
rol
es
push
scas
sbb
push
pop
imul
in
and
cmpsl
cmp
cmpb
jp
in
fcmovnb
push
pop
cltd
lea
in
push
xor
mov
fwait
inc
or
cs
cmpsb
dec
outsb
dec
pop
outsl
out
cmp
rcll
clc
cmc
icebp
in
push
jge
push
xor
dec
fidivrl
daa
stos
fcmovu
mov
int3
mov
cltd
insb
jbe
mov
daa
lods
in
dec
stos
xchg
and
mov
repz
jl
out
sub
mov
sub
in
ficoml
jmp
fnsave
fildl
das
xlat
jge
cli
mov
mov
cmc
or
pop
jmp
xchg
xchg
mov
insb
xor
push
jae
jmp
sub
imulb
sub
scas
loope
dec
inc
in
lea
psubq
test
pop
pop
fmull
cs
aaa
cmp
ffreep
imul
call
xor
data16
fcmove
push
int
stos
cmp
idivb
xor
dec
es
fs
mulb
jg
outsl
push
mov
arpl
mov
push
mov
lret
call
push
cld
dec
out
mov
inc
fiadds
mov
out
scas
push
cmpsl
or
mov
mov
aas
rcll
jns
cli
jmp
xchg
ret
leave
mov
test
pusha
sub
cmpsl
out
sub
mov
pop
jmp
movsl
scas
jle
dec
lcall
xor
jbe
fdivp
cwtl
xor
fstpl
jo
notl
push
sahf
mov
loop
lea
mov
sti
shr
mov
inc
xchg
jmp
fsubrs
dec
idiv
or
es
ret
or
dec
insb
lods
in
movsl
arpl
aaa
dec
cs
pop
mov
loopne
cmp
pop
pop
cwtl
cwtl
mov
mov
ljmp
or
mov
push
cmp
fnstcw
pusha
popf
into
out
mov
pop
sahf
dec
and
lahf
add
ljmp
pop
cmp
in
or
mov
pop
es
push
test
mov
in
jmp
hlt
mov
rcr
icebp
sub
leave
sub
lea
xor
call
fmul
sub
daa
adc
sbb
lods
sbb
loop
lea
dec
mov
inc
fdivl
push
adc
scas
shll
or
adc
test
mov
mov
mov
xor
mov
xchg
push
rcl
insl
and
mov
in
ret
cmp
fisttpl
xlat
inc
or
insb
bound
mov
adc
xchg
sub
lds
insl
mov
dec
dec
mov
out
lds
jo
mov
cmp
xchg
pusha
outsb
pop
loop
shll
mov
test
mov
lock
mov
dec
xchg
push
pop
pop
mov
movsb
cs
sbb
lds
ffreep
sahf
xchg
or
cwtl
in
jo
push
sbbl
ret
pusha
adc
sbb
cld
int
cmp
sub
dec
adc
push
out
and
sti
inc
sbb
int
jge
out
je
es
push
es
lahf
add
push
mov
leave
jecxz
scas
and
add
adc
jmp
and
das
cmp
cmp
xchg
insb
xor
sub
pushf
sbb
ret
lret
cmp
outsb
cmp
in
xlat
sbb
or
xchg
jl
jle
push
mov
or
mov
dec
cltd
dec
mov
inc
dec
mov
fiaddl
in
xor
ljmp
jns
inc
sub
nop
inc
hlt
andl
lods
js
add
or
push
sub
cld
push
adc
pop
iret
xor
fisubrl
add
adc
ss
in
gs
mov
dec
sub
push
push
cwtl
cmpsl
out
adc
pusha
iret
xchg
lea
sub
lret
adc
mov
rcll
xchg
or
xchg
pop
repz
xor
dec
sti
adc
push
xchg
addr16
or
jmp
push
and
in
xchg
jmp
fimuls
push
mov
stc
arpl
mulb
in
mov
inc
push
push
cmp
aaa
xor
movsb
repnz
ljmp
add
jmp
mov
pop
ljmp
jecxz
mov
adc
fidivl
mov
fisubrl
pop
cmp
and
clc
or
insb
jne
fidivrl
adc
clc
cltd
mov
ss
sbb
and
nop
je
lods
and
stos
mov
pop
into
in
and
inc
pop
psrlw
mov
push
js
sub
sub
loop
push
mov
ret
mov
sub
inc
or
cmp
jmp
rolb
lahf
jnp
push
lcall
push
add
xchg
dec
cmp
lcall
cld
leave
ja
or
fists
lret
outsb
and
sbb
insb
sub
xchg
inc
shrl
call
stos
and
std
dec
cld
xchg
test
cmp
jecxz
cmp
cmp
xchg
or
iret
sub
mov
lcall
not
in
lock
movsb
xor
cmp
xchg
dec
xchg
addr16
mov
ret
orl
rcl
leave
pop
les
mov
gs
xor
cmpsl
sub
adc
cwtl
andw
movsl
andb
nop
dec
dec
scas
rcl
xor
sbb
ljmp
movsb
mov
inc
rcl
push
es
mov
ljmp
xchg
mov
xor
repz
mov
inc
nop
shr
pop
rcr
sub
gs
cwtl
pop
rol
pusha
sbb
scas
sub
mov
dec
call
xchg
xchg
push
sub
addb
popl
mov
pushf
sbb
mov
test
or
in
out
ret
ss
and
sahf
pop
xchg
fisubrs
push
ficoml
gs
pop
das
pop
decb
fsts
pop
mov
repz
pop
or
adc
inc
jae
sbb
push
int3
sbb
mov
sbb
jmp
or
sbb
inc
jmp
xor
sti
pushf
jbe
test
xchg
ret
mov
mov
and
xchg
mov
sbb
jmp
in
out
mov
pop
dec
dec
in
roll
lret
js
rcl
sbb
jg
mov
mov
mov
push
lahf
ret
inc
push
fldl
test
jmp
dec
sbb
mov
cmp
mov
dec
lahf
in
adc
mov
inc
cmc
negl
jae
jmp
adc
gs
popa
adc
xchg
shll
xor
cmp
stc
pop
iret
xchg
shrb
xor
cmp
fadds
jp
adc
dec
imul
addb
push
jo
sbb
jecxz
into
sbb
adc
sub
nop
cltd
std
testb
rcr
clc
mov
aas
ljmp
inc
inc
rolb
push
fiaddl
or
sbb
stos
mov
mov
shr
pop
mov
push
test
dec
inc
iret
ja
pop
mov
or
add
or
outsl
dec
push
aam
pop
xor
sub
addr16
push
pop
and
dec
mov
jp
cmp
sarl
jo
testl
xor
adc
xchg
and
dec
inc
mov
add
push
scas
mov
cmp
xchg
out
jecxz
shll
sub
data16
lahf
mov
sbb
xchg
lcall
pop
gs
mov
cli
sub
mov
rorl
ret
test
xor
xchg
repz
jmp
mov
imul
mov
pop
or
mov
loope
outsl
sti
rclb
pop
push
adc
sarb
sbb
mov
sub
shlb
sbb
pop
pop
out
std
adc
ljmp
inc
push
cmpsb
repnz
add
testb
lcall
hlt
jge
and
int
jbe
ret
sbb
fnstsw
iret
pop
mov
mov
testb
cmp
test
stc
test
iret
cmpsb
mov
out
dec
lret
jge
sbb
sahf
enter
adc
lea
jecxz
sub
insb
jbe
sarl
jg
scas
dec
mov
adc
jno
inc
mov
stos
dec
leave
sub
lahf
xchg
pop
mov
stc
shrl
and
stos
adc
lret
lahf
pop
hlt
dec
lods
adc
mov
shlb
jae
rcrb
jmp
lahf
and
lea
mov
stc
jp
xchg
sub
mov
jp
sub
push
call
mov
or
push
adc
sub
sbbb
adc
sbb
rcrl
mov
ja
inc
cs
mulb
nop
mov
or
adc
cwtl
jge
xchg
cld
mov
dec
push
mov
push
add
add
mov
daa
shl
mov
clc
mov
mov
cli
push
or
or
movsl
cmp
leave
data16
pop
out
mov
aam
cld
sbb
cwtl
stc
xchg
or
add
add
add
adc
int
fisttpll
dec
aam
enter
test
test
adc
jo
mov
cmc
shll
or
sbb
jge
call
test
sahf
lahf
lcall
inc
jmp
inc
cmp
jae
inc
or
rorl
mov
jmp
aas
imul
mov
xchg
fisttpl
and
incl
cs
addb
dec
mov
movsb
xor
jnp
cld
insb
dec
lcall
cltd
and
dec
jge
test
xor
jne
cli
and
subl
and
insl
gs
or
xchg
test
jno
push
loope
popa
rol
fsub
les
dec
add
dec
movl
adc
pop
aam
aad
lcall
inc
jge
fsubl
xor
icebp
idivb
lret
mov
sub
shlb
cmp
push
mov
ret
ror
adc
outsb
pop
jno
scas
push
add
xchg
daa
in
int3
movsb
push
sahf
ss
dec
das
scas
jmp
jno
aam
dec
inc
ds
push
jge
repz
inc
int3
mov
xchg
adc
lea
call
scas
jmp
pop
loop
xchg
shll
dec
add
mull
inc
jecxz
adc
cmp
in
adc
insl
push
cwtl
mov
stos
mov
daa
lret
jmp
pop
sbbb
cli
mov
push
inc
xor
adc
xor
inc
hlt
sti
out
or
sbb
cmp
push
je
jb
xchg
mov
pop
add
or
int3
pusha
movsb
sarl
lea
dec
and
jb
fadds
aam
push
mov
aaa
icebp
and
push
shlb
jne
into
dec
adc
sub
jle
pop
ret
lcall
sub
in
addr16
adc
mov
gs
dec
push
pusha
cld
sub
mov
in
fidivl
pushf
jg
xchg
ljmp
scas
out
loopne
daa
cwtl
mov
sub
leave
out
fistl
cmpsl
jl
xor
mov
xchg
mov
cmpsl
cmp
sbb
xor
in
add
out
popa
xchg
adc
sub
mov
es
inc
mov
lods
aas
jmp
xchg
or
lret
leave
mov
mov
jb
aad
dec
iret
adc
call
adc
pop
xchg
pop
cmp
mov
fimuls
scas
cli
mov
push
test
das
shlb
addl
mov
xchg
ror
orb
inc
shll
adc
out
or
int3
xlat
cwtl
ret
jnp
xchg
fs
or
out
and
mov
sarb
push
loopne
jo
roll
dec
add
sbb
mov
mov
or
das
mov
jo
jl
lahf
cmp
lods
scas
xchg
mov
jmp
sahf
out
loope
adc
frstor
movsb
or
mov
lea
in
and
adc
pop
push
fwait
out
jge
sbb
or
jp
and
cld
xchg
or
mov
scas
cmp
sahf
rcll
xchg
xor
nop
lahf
test
push
mov
sarl
jp
aad
mov
insl
ret
fidivrl
aas
daa
push
jmp
aam
or
in
sbb
and
iret
int
add
jmp
sub
das
hlt
lock
sub
scas
push
cmpsb
adc
xor
jmp
inc
pushf
mov
and
cmc
cmp
push
repnz
adc
add
loope
push
mov
pushf
loope
dec
dec
dec
int
sbb
mov
sub
push
inc
movsb
cld
sub
adc
sti
jl,pt
adc
out
jmp
shrl
xchg
imul
sub
ljmp
shl
in
xchg
lret
scas
test
pop
and
testb
inc
cli
xchg
sbb
loopne
lock
enter
inc
jmp
jo
sub
pusha
jmp
push
push
xor
in
movsb
jge
insb
into
jmp
xor
cld
jns
xchg
cld
or
lret
cmpsl
push
sbb
imul
mov
add
cmpsl
or
adc
in
cmc
and
jp
dec
stos
cmp
jb
shlb
pop
lahf
xchg
aad
dec
sbb
rclb
shrb
mov
xor
pusha
push
cmpsb
or
jne
inc
mov
fldz
push
mov
or
mov
lds
call
lcall
push
repz
adc
cmp
and
and
pop
popa
mov
mov
jbe
repz
es
jmp
sar
notb
pushf
xchg
mov
or
stc
gs
adc
gs
into
stos
out
in
and
mov
adc
or
add
jmp
pop
in
fsubl
sti
mov
xchg
rcrl
or
lcall
scas
dec
test
je
push
push
xor
das
pushf
das
bound
sub
leave
popa
adcl
in
frstor
xchg
sub
mov
out
rcrw
xchg
loope,pn
rorl
xor
nop
inc
xchg
or
rcl
jno
ret
xchg
fisubrl
clc
jb
scas
mov
cli
out
stc
outsl
es
add
stc
and
int3
fsubl
or
shll
mov
gs
and
mov
inc
lret
or
stc
push
call
adcb
mov
and
fisubrs
xchg
nop
inc
add
scas
mov
pop
jbe
mov
jne
mov
sub
testb
jmp
push
pop
lcall
adc
jmp
xchg
push
dec
inc
in
ljmp
xchg
xchg
cli
adc
lret
pop
ljmp
jecxz
ret
cltd
sub
jmp
xor
rorl
sar
or
in
or
loop
xor
jp
push
xchg
mov
dec
mov
pop
in
jp
mov
testb
cld
cmp
idivb
or
pop
add
dec
mov
sahf
mov
and
and
mov
jo
sub
subb
inc
mov
add
lea
in
cli
out
aad
repz
cmp
push
mov
mov
mov
mov
pop
push
cmpsb
ret
movb
mov
add
hlt
and
mov
sbb
mov
fucomi
fbstp
sarl
mov
jmp
out
inc
rcll
mov
les
push
test
in
inc
pushf
sti
jle
pop
adc
lds
stos
sti
rclb
sbb
shr
mov
xor
das
sub
mov
mov
movsl
add
pop
add
pop
enter
or
mov
in
dec
push
push
jmp
lcall
mov
movsb
into
adc
and
mov
add
push
enter
imul
cmp
push
ret
popf
or
je
addb
cmp
jle
push
and
add
cmp
mov
dec
rcl
jge
sbb
shll
iret
dec
mov
in
fcmove
cmp
mov
fsubrl
dec
sub
add
push
lcall
jmp
push
sub
or
or
adc
dec
adc
daa
jl
fstl
mov
push
xor
shlb
insl
scas
xor
mov
fs
cmp
jmp
inc
test
mov
jmp
jle
sub
jmp
mov
repz
push
adc
data16
in
and
jl
in
xchg
sub
mov
push
or
push
fdivrs
sahf
ja
cvttps2pi
mov
push
dec
mov
xlat
inc
push
pop
pop
jmp
jecxz
pop
push
jge
lahf
fucomip
shll
mov
rcl
xor
mov
xchg
test
mov
sub
sbb
rcll
sub
leave
mov
imul
jge
fisubl
lea
stc
ret
cli
lock
outsl
sbb
scas
jns
movsl
pop
push
jecxz
cltd
aam
test
inc
push
sbb
cmp
iret
adc
jl
lret
out
test
cld
testl
loope
adc
cmpsl
push
push
mov
jmp
ret
out
icebp
shrl
or
imul
xlat
nop
jg
enter
pop
aaa
andb
cmp
add
addr16
mov
sub
or
repz
mov
test
and
and
xor
daa
pop
int3
xchg
movsl
es
xchg
ss
fwait
cmpsl
cmp
xchg
das
xchg
push
push
push
or
ljmp
in
fidivrs
test
loop
lock
inc
fistpll
and
dec
cmovne
sub
push
imul
pusha
data16
dec
sbb
xchg
lea
sub
adc
ja
mov
mov
xchg
mov
add
xor
stos
sub
shlb
gs
insb
cmp
das
addr16
add
in
xor
call
or
test
les
gs
push
mov
mov
mov
push
jg
jno
fucompp
enter
dec
cmp
lcall
scas
sti
scas
and
mov
jo
lock
push
mov
push
outsb
jecxz
pop
mov
dec
cmp
pop
cld
gs
mov
movsl
dec
xor
pop
testl
dec
jbe
jns
dec
pushl
xor
cwtl
jmp
inc
shrb
rcrb
xorb
lds
fs
scas
or
xor
xorb
pop
jmp
xchg
jp
fbstp
jne
push
push
jmp
cld
notl
cmp
cli
mov
data16
pushf
mov
xor
lea
jne
jo
loope
imul
xor
dec
jno
jnp
add
and
lcall
popf
jmp
in
inc
mov
arpl
sub
ljmp
call
and
out
jg
mov
clc
mov
xchg
and
outsl
int
adc
push
cld
jmp
idivb
mov
dec
popf
call
subb
loop
pusha
adc
xor
cli
xchg
loopne
or
shrl
hlt
push
adc
adc
mov
lahf
sub
ss
mov
inc
xchg
outsb
ds
sub
rep
into
mov
and
pop
subb
jns
mov
adc
ucomiss
lret
sbb
adc
lds
lock
sbb
fs
jb
xchg
mov
adc
fcomp
or
dec
mov
hlt
dec
rcll
lret
sbb
fneni(8087
add
sbb
imul
mov
lret
push
sbb
push
scas
in
cwtl
nop
iret
mov
scas
lea
mov
jns
mov
add
or
hlt
push
pushf
push
jmp
rorl
imul
mov
sub
ja
jg
sub
cmp
aad
and
clc
test
cmp
dec
dec
dec
popf
lea
jp
push
outsl
push
cmp
and
movntq
push
jp
adc
xor
int
mov
and
sbb
mov
roll
je
std
int3
cmp
push
fimuls
push
pop
dec
ljmp
imul
jmp
push
dec
inc
stc
jnp
sub
jge
notl
adc
cli
lea
insl
jmp
loop
shll
cmpsb
cmp
and
clc
out
xchg
fcmovu
push
loop
jne
sbbb
jle
sbb
xchg
leave
pop
and
icebp
push
mov
add
dec
xor
mov
popa
addl
mov
orb
aas
jmp
cmpsb
shl
mov
pop
push
aam
bound
sbb
pushf
dec
popf
or
cltd
pop
jmp
mov
insb
ret
loop
pop
je
mov
ret
mov
cltd
fsubl
xor
push
mov
imul
pop
popf
pop
jp
dec
cli
pop
sub
int3
cli
push
jns
sbb
dec
inc
sbb
inc
xchg
jmp
lcall
mov
sbb
lahf
push
xchg
stos
sub
idivb
adc
jmp
mov
lea
leave
sbb
cmp
push
cli
jecxz
adc
in
gs
in
jae
mov
iret
mov
or
mov
dec
in
or
pop
add
pop
rcrl
int3
leave
das
cwtl
or
sti
xlat
jmp
iret
inc
fcmovbe
into
or
mov
mov
pop
push
mov
ja
pop
mov
nop
jmp
xchg
dec
jmp
scas
ja
lods
lahf
sbb
sti
push
test
daa
cltd
adc
insl
pushf
repnz
repz
lods
jae
rcrl
int
and
cmpsl
je
ja
xor
ds
fcomp
adc
sahf
inc
or
pop
mov
pop
andb
lcall
push
push
rcrb
das
fisubl
das
dec
nop
push
sub
popf
cmp
rol
and
nop
shl
cmpsb
xchg
out
jmp
pusha
sub
mov
mov
cwtl
add
sub
out
jl
fldl
sbb
shr
mov
rorl
repnz
rclb
add
mov
ficomps
mov
jnp
sbb
data16
or
fimull
scas
pop
push
rcl
lods
mov
es
dec
add
lods
mov
shr
push
fstps
nop
push
movsb
mov
mov
imul
or
dec
ffreep
lret
mov
push
lods
repz
jmp
mov
jmp
fildl
icebp
or
dec
push
leave
mov
sub
adc
inc
pusha
cmp
sbb
cmp
das
arpl
sub
dec
xor
addb
enter
out
sti
sbb
in
or
xor
sbb
mov
push
repz
stc
or
shr
dec
push
sbb
mov
jle
mov
les
and
sub
push
mov
xchg
ss
cmp
mov
outsl
pop
mov
sbb
test
dec
repnz
and
pop
pop
popf
cmp
mov
das
jge
xor
sub
fnsetpm(287
mov
mov
lahf
pop
lock
xor
in
xchg
lcall
adc
sahf
rorb
fs
sbb
ljmp
pop
lahf
scas
adc
cli
es
mov
rep
inc
loopne
sub
cmp
aam
sub
in
dec
movsl
mov
sti
jp
clc
arpl
push
dec
mov
pop
adc
jmp
push
push
addr16
jne
movsb
shlb
shll
pushf
mov
gs
fistpl
arpl
fisttpl
loope
add
sub
testl
fsubl
aaa
mov
lret
jnp
nop
leave
daa
pusha
xchg
push
cmc
or
cli
dec
push
iret
ljmp
hlt
jae
mov
lods
mov
pop
cmp
fmull
cmp
in
push
xchg
popa
adc
jp
jl
dec
aaa
bound
mov
add
mov
movsb
and
ja
and
into
xchg
pop
dec
clc
jae
or
sbb
mov
sbb
sbb
outsl
in
rorl
push
and
rcrl
push
push
pop
test
and
ja
aas
lea
cmp
pop
jns
cmp
cmpsl
shll
jb
add
xor
sub
loope
inc
cmp
sbb
add
aas
add
scas
mov
ss
dec
orl
ffreep
add
push
or
dec
and
in
sbb
dec
push
push
js
test
xor
xor
add
out
fadds
jns
orb
stos
jmp
addr16
mov
push
jo
idivb
cmp
pop
cmp
and
addr16
sbb
mov
push
push
data16
pop
inc
xorl
into
jmp
sub
cmpsl
repz
lret
push
pushf
ficoms
xchg
push
pop
jmp
adc
xchg
pop
jne
adc
sti
rorl
jmp
xchg
sbb
cmp
push
enter
cmc
inc
ds
add
jbe
loopne
out
cld
mov
sub
mov
aad
rcrb
mov
sbb
mov
cmp
dec
lock
cltd
popa
stos
fcmovbe
stc
lcall
push
lock
mov
sbb
gs
adc
fwait
sbb
inc
mov
dec
lea
pusha
int3
sub
arpl
stc
cmp
jecxz
lahf
mov
lret
push
ret
cmp
dec
stc
and
or
sub
push
cmc
lds
test
ret
push
jo
imul
das
and
xor
xchg
mov
shr
mov
fwait
ljmp
loop
clc
aaa
xchg
mov
adc
ret
and
jmp
in
aam
mov
xchg
cmp
stos
insb
mov
out
lods
push
jnp
xchg
test
xor
in
fwait
gs
inc
fcompl
scas
cli
and
mov
roll
xchg
pop
or
jg
fucompp
cwtl
sbb
es
or
scas
je
pushf
sti
icebp
xchg
adc
or
xor
mov
jmp
inc
sarl
std
jle
cltd
sti
sub
js
arpl
loop
xor
into
cmp
mov
cltd
sub
fs
out
daa
in
push
cmpb
cmp
dec
mov
mov
in
pushf
mov
jbe
sub
lods
test
fldl
cmp
pop
mov
cmp
nop
hlt
leave
lahf
jbe
arpl
xchg
pop
aas
daa
sahf
cmpsl
lahf
pop
xor
pop
mov
sbb
shr
ja
ja
sbb
mov
insb
sbb
pop
push
add
ss
outsl
pop
sti
cwtl
shlb
xchg
cmpsb
aaa
imul
jmp
negl
push
fwait
ret
or
xor
mov
jnp
jg
je
cwtl
cmp
mov
inc
sub
cli
call
test
cmp
xor
rcll
mov
xchg
mov
push
es
xchg
cmp
pushf
sbb
mov
jg
aad
andb
push
lods
subps
outsl
out
jmp
sub
ss
cmp
das
fldenv
push
int
mov
and
ret
negl
xchg
xor
dec
jecxz
mov
in
and
repz
das
fs
cmp
jmp
shlb
sub
cmp
lods
push
add
hlt
pusha
pop
rcl
add
push
mov
cmp
xor
sub
clc
jle
arpl
add
push
imul
hlt
cmpb
and
out
dec
out
xchg
fwait
sbb
outsb
dec
jbe
aad
or
and
add
dec
dec
sbb
push
dec
dec
int3
test
mov
cmc
inc
lods
inc
pop
mov
hlt
ret
mov
push
xchg
and
mov
in
mov
dec
push
adc
mov
in
gs
cmp
jns
cmpsb
aad
mov
dec
rcrl
xlat
sbb
xor
dec
in
or
xor
arpl
nop
leave
stos
lret
mov
add
or
mov
rcll
xchg
imul
lock
aad
mov
pusha
fcomps
sub
add
insl
pop
cmp
hlt
in
out
fs
daa
aas
sbb
cmp
nop
leave
repz
add
push
cmp
mov
jno
hlt
adc
lcall
arpl
cmp
ss
pushf
inc
jge
mov
pop
cmp
push
or
adc
and
mov
pop
xlat
sub
jnp
mov
pop
mov
xchg
push
arpl
or
cmp
push
pop
jle
cmpsl
push
xchg
lcall
repnz
les
push
inc
sti
imul
cwtl
xor
test
test
adc
imul
stc
adc
push
cmp
xlat
scas
out
mov
jnp
and
jl
push
adc
mov
stos
cmpb
mov
inc
xor
mov
xlat
jb
pop
push
jne
push
adc
sub
jmp
fldcw
cs
pop
fisttpl
lret
fcom
push
sbb
dec
or
mov
cs
xchg
dec
not
mov
mov
aam
out
mov
adc
xor
push
jb
sub
mov
jl
movsb
xchg
rcrl
rcll
inc
sahf
popa
lahf
pop
xorb
pop
arpl
repnz
sub
add
and
lea
jo
mov
push
ss
push
out
insl
and
repz
push
cmpsb
es
rcl
lock
pop
mov
ret
daa
pop
fdivl
push
and
lock
outsb
pop
cmp
inc
bound
out
xor
ret
shrl
sti
push
mov
and
loop
jge
jmp
or
mov
and
icebp
scas
pop
xor
dec
jo
xchg
or
and
jmp
mov
sub
js
push
jnp
or
inc
in
or
lds
xchg
push
std
mov
pushf
dec
sarl
add
adc
mov
ljmp
outsb
add
ds
outsl
jle
or
and
shrl
in
dec
out
prefetch
rcl
adc
cmp
xchg
push
in
sub
out
jmp
or
adc
leave
mov
xchg
jae
dec
or
mov
xor
xchg
jg
out
aaa
fldenv
sahf
push
imul
mov
inc
orb
in
sbb
in
add
les
push
pop
sbb
inc
shrl
push
fbld
mov
push
push
sahf
loop
push
jg
mov
cmp
or
mov
pop
in
sbb
test
imul
mov
arpl
sub
nop
imul
fcmovbe
stc
push
lea
jp
xchg
je
jne
push
mov
push
sbb
daa
jo
shll
jno
push
sub
adc
das
inc
test
inc
xor
mov
inc
adc
sub
xor
jp
testl
sbb
or
ret
sbb
test
mov
push
jb
into
add
mov
sbb
adc
pop
and
mov
and
out
xchg
cmpsb
xchg
mov
push
jb
add
in
test
mov
cld
sub
aam
add
push
lock
push
pop
in
sbbl
inc
cs
lods
ret
cmp
loopne
out
enter
adc
mov
les
xlat
mov
cltd
jle
xor
inc
sbb
jb
aam
pop
push
cltd
fmull
jmp
and
movsl
push
ret
shll
mov
adc
xadd
or
cmp
int
lcall
scas
jge
pop
insl
pop
outsb
test
lret
insl
dec
jle
jmp
pop
jle
cmp
and
idivb
xchg
push
fsubp
xor
jmp
in
shlb
xor
sbbb
pop
adc
in
xor
lods
scas
or
and
jmp
cld
data16
repnz
dec
mov
push
mov
push
push
mov
pop
mov
in
into
jecxz
push
add
ret
cmp
xor
xchg
jl
pop
lcall
mov
ret
inc
jp
push
in
mov
jecxz
jmp
aas
dec
xchg
negb
mov
imul
sub
jl
lret
dec
movsl
push
adc
inc
cmp
or
xchg
in
xlat
nop
ljmp
cmc
sub
movsb
call
fcoms
mov
cld
loope
movsl
fsts
rolb
and
js
add
and
aad
lret
dec
dec
in
pop
mov
add
push
sub
dec
push
and
push
scas
adc
jp
lods
stos
or
cmc
xchg
or
adc
mov
add
scas
or
pop
push
jae
sbb
mov
addr16
std
jl
imul
in
fstpt
jo
cltd
mov
xchg
dec
dec
cmp
sbb
mov
cs
std
mov
leave
je
fcmovnb
xchg
hlt
imul
xchg
mov
sub
call
jecxz
notl
popf
popf
xchg
or
leave
adc
xchg
jp
in
negb
fnstsw
xor
test
fidivrl
sbb
fs
cmpsl
clc
or
cmp
out
adc
fnstcw
cmpsb
sub
insl
add
push
xor
fidivl
jle
cmpsb
cmp
sbb
fisubl
movsl
xor
adc
sub
mov
cmp
sti
fwait
sahf
cmp
fucompp
ret
stos
aad
xlat
pop
aas
in
push
push
lret
cmc
or
insl
cld
test
je
insb
sbb
push
xchg
add
mov
cltd
jg
xor
out
scas
or
aaa
adc
push
in
jg
push
sbb
push
dec
andl
call
rcll
loop
push
xchg
adc
idivb
mov
pusha
or
insl
xchg
mov
shr
jecxz
cmpsb
out
push
pop
and
push
sti
fwait
in
ficoml
sahf
cmc
push
mov
dec
dec
inc
enter
jmp
xor
cld
inc
clc
cmp
mov
push
out
jo
push
shrb
mov
lods
sarl
scas
out
inc
sbb
fst
cld
cmc
xchg
pshufw
adc
mov
jne
test
inc
sub
mov
dec
stc
aas
xchg
addr16
in
cmc
or
nop
loopne
mov
cltd
cli
dec
xchg
ds
rcll
lret
dec
pop
sbb
pop
scas
lods
mov
out
int3
dec
jae
sbb
adc
orl
pop
popa
in
mov
mov
rcll
ds
sub
shl
or
repz
mov
or
repnz
iret
mov
cmp
cltd
rorl
xchg
inc
or
js
mov
push
in
repnz
inc
xor
push
add
xchg
mov
fcmovnbe
mov
inc
mov
xor
pop
popa
mov
jp
push
in
mov
mov
dec
xchg
into
add
les
pop
sahf
mov
ja
gs
cmp
fcoms
in
sti
jmp
cmp
pop
and
arpl
ds
addr16
enter
xor
adc
jp
jg
push
ret
sahf
add
andb
fidivl
scas
adc
loope
mov
idivb
mov
sub
dec
and
shrb
mov
xlat
cmp
sub
pop
inc
ret
cmp
cltd
jmp
fwait
test
sub
jb
ljmp
ja
and
mov
inc
pop
in
ja
push
and
mov
fisubs
test
push
les
in
dec
and
xor
outsl
push
pop
divl
imul
addr16
pop
inc
les
mov
mov
sub
ret
in
or
shl
sub
fldcw
dec
push
ret
stos
aaa
add
mov
push
xchg
push
pusha
jp
in
cmpsl
nop
jge
testb
ficompl
imul
outsl
js
xor
int3
inc
movsb
stos
int3
loop
and
adc
scas
cltd
test
mov
jge
lods
jb
xchg
pushf
or
dec
pop
outsl
xlat
jae
ljmp
dec
dec
fucomp
adc
movsb
sbb
or
or
pop
sbb
jne
mov
mov
sbb
adc
sti
add
mov
std
inc
insb
lret
mov
ret
inc
ret
mov
ljmp
hlt
adc
adc
insb
aas
sahf
inc
aad
mov
add
sub
ror
data16
mov
push
push
xchg
cs
inc
stos
cmpsl
cmp
sub
inc
in
popf
or
adc
lock
clc
lahf
daa
jp
xor
mov
add
mov
jge
jo
stos
ret
dec
repnz
lcall
and
jbe
in
lahf
enter
push
test
les
pop
push
mov
cmp
ret
push
adc
jg
ret
incl
cmp
inc
xor
insb
gs
in
lahf
push
mov
outsl
fucom
mov
sti
xchg
out
dec
xor
lahf
jmp
scas
and
clc
call
lock
pusha
push
jl
xchg
mov
pop
jmp
test
les
in
imul
mov
mov
icebp
sti
inc
out
imul
mov
out
leave
fidivrl
out
push
adc
movsl
call
sarb
jnp
insb
pop
adcl
insl
mov
sub
mov
lock
sub
ss
sub
sbb
jmp
imul
jecxz
mov
inc
and
imul
add
xchg
je
inc
push
jo
ret
popf
mov
out
sub
rcrb
sarl
adc
dec
das
aaa
in
add
push
pop
mov
hlt
dec
inc
mov
nop
pop
scas
sub
sub
vcvtsd2ss
cmp
pop
cmp
push
sub
ljmp
lret
loope
inc
cmpsb
out
pushf
pusha
insb
push
sub
out
bound
dec
cltd
ss
lods
jge
out
test
imul
xchg
pop
pop
and
call
outsl
stc
mov
adc
inc
or
sbb
dec
dec
faddl
mov
in
or
jno
jo
ficompl
or
sub
into
scas
call
flds
mov
aaa
lods
xor
adc
fcmovu
jo
xchg
aas
ljmp
mov
insb
sbb
xor
js
lret
sti
enter
cltd
mov
adc
sti
and
push
shrb
or
pop
in
or
movsl
rol
aas
fcmovu
arpl
cmp
jmp
adc
lods
rcr
bound
sbb
out
mov
sarb
sarb
inc
mov
push
in
dec
xor
cld
lods
mov
xor
outsl
int
push
mov
jno
je
stos
add
cmpl
dec
repz
jmp
xchg
outsb
insl
xchg
inc
inc
into
daa
loop
sub
in
test
lock
push
imul
stc
push
test
mov
std
pusha
sub
lods
push
pop
js
cs
notl
and
dec
movsb
jmp
sti
ja
in
mull
inc
dec
dec
dec
rorb
xlat
lcall
test
and
mov
sub
jne
push
enter
sti
mov
mov
jmp
mov
xor
xchg
fcmovbe
xchg
jl
ficompl
sbb
pop
dec
adc
int
jae
dec
aaa
icebp
jle
mov
scas
mov
jmp
sbb
movsb
jp
sub
sbb
sub
xchg
mov
push
sbb
add
mov
call
lret
fidivs
mov
rorl
sbb
cmpsb
in
dec
xchg
mov
pop
sub
addr16
dec
pop
dec
movsl
adc
rcl
xchg
jo
mov
lret
scas
inc
test
cmp
loope
dec
dec
xchg
int
xchg
repnz
pop
fwait
xlat
int3
jecxz
in
ret
ljmp
fucomp
and
and
sub
je
mov
sti
rolb
repnz
sahf
cs
inc
push
jmp
stos
insb
or
push
leave
rcrb
xchg
jecxz
dec
and
cld
cmpsb
cmp
loope
sub
into
orb
daa
or
dec
movsl
pop
mov
in
mov
add
leave
mov
and
test
xor
xchg
rorb
aaa
jne
ds
inc
push
outsl
xchg
pop
xchg
shr
fcmovnbe
sbb
movsb
inc
lcall
jno
lahf
into
scas
cmpsb
or
clc
mov
pop
ficoms
or
shll
pushf
dec
push
cli
add
stos
test
jmp
call
jmp
push
sub
shrb
popl
inc
rol
adc
adc
lock
insb
arpl
pop
outsl
movsl
sahf
cmp
and
test
sub
adc
in
and
out
pop
jnp
or
ret
pusha
mov
arpl
mov
enter
or
or
nop
xchg
mov
sbb
adc
inc
xor
mov
xorl
in
loope
pop
mov
movsb
adc
xchg
shl
cs
jne
rolb
rol
inc
psrlw
jp
xor
pop
sbb
jnp
loop
fdiv
cmp
or
ret
push
sub
out
ljmp
rorb
sbb
adc
mov
cs
push
shll
lcall
adc
jle
cmp
jl
sti
xchg
shll
mov
fcomp
push
and
shr
lock
movsb
adc
cmp
out
aaa
out
mov
pop
push
dec
mov
mov
push
push
sub
cmpsb
sbb
mov
test
jae
aas
mov
mov
cmp
stos
mov
mov
fidivrs
lahf
pop
cli
inc
adc
imul
ja
xchg
in
aas
fwait
lcall
or
rorb
mov
add
fdivs
cmp
insb
mov
sti
cli
mov
mov
inc
jg
pop
add
insb
xor
sbb
pushl
xor
inc
ds
das
ja
adc
and
mov
test
std
sbb
jmp
imul
in
mov
and
xor
imul
xchg
ljmp
mov
xor
sarl
mov
mov
fbld
and
negl
lock
add
inc
ja
mov
add
jmp
aas
xor
ljmp
inc
cmpsb
shrb
nop
shlb
leave
jns
aam
push
jmp
in
andl
cli
sub
mov
mov
jge
lcall
je
sub
pop
iret
sub
imul
icebp
pop
fcmovu
mov
push
cmpsb
subb
mov
and
or
inc
sub
out
mov
ret
mov
jns
mov
sbb
mov
jmp
pusha
ljmp
jg
rcrb
inc
or
push
in
test
jb
mov
sub
fwait
push
dec
enter
mov
notl
jo
add
lahf
sub
lds
mov
xchg
popf
sub
mov
push
mov
fidivrl
enter
and
xchg
xchg
push
xor
mov
mov
repnz
fwait
mov
push
rcrl
daa
in
rcrl
dec
adc
lret
cli
sbb
xchg
cmp
imul
inc
jo
cmpsl
rclb
jnp
mov
push
mov
sahf
cmpsb
sti
repnz
adc
inc
shl
es
mov
and
in
mov
dec
cld
xor
lahf
aaa
xchg
rcrl
pop
jmp
out
or
mov
mov
sarb
fistps
test
pop
and
outsl
pop
movsb
push
sbb
inc
ljmp
lret
sti
inc
outsl
pop
call
mov
dec
xchg
in
sub
aad
sbb
in
ljmp
repz
cmpl
insb
mov
sub
movsb
cmpsl
cld
in
dec
dec
xchg
ficoms
out
xor
sahf
loop
decl
pushf
mov
addr16
xor
xlat
lods
or
cwtl
and
movups
inc
imul
cwtl
fistpll
insl
daa
mov
js
mov
mov
cmc
imulb
jle
and
mov
aad
xor
popf
scas
xor
fidivrs
leave
lock
out
xor
mov
and
cltd
fwait
mov
xchg
shrl
xlat
push
repz
pop
jmp
rcrb
les
mov
jmp
dec
or
shlb
mov
fidivs
xchg
loopne
add
sti
cwtl
pop
inc
jno
ja,pn
xor
stos
pusha
imul
inc
sub
mov
mov
in
inc
push
pop
pop
test
iret
sub
hlt
push
test
jnp
cmp
jp
dec
stc
jne
ret
or
int
scas
mov
cmp
clc
imul
aad
mov
mov
pmaxub
xchg
push
mov
sarb
push
cmp
in
or
std
dec
movsb
jle
cmc
pop
aam
or
dec
mov
jmp
pusha
stc
cld
sbb
mov
aad
es
cmp
push
fwait
or
sub
ja
jmp
xlat
lret
mov
nop
mov
cmp
repz
bound
outsl
aam
and
enter
cld
and
fbstp
in
stos
xchg
ljmp
fstpl
je
cmp
call
xchg
pop
jno
in
repnz
mov
das
jp
push
and
out
cmpsb
popf
jb
sar
add
movsb
dec
pop
je
out
cld
enter
and
js
negl
cmp
ljmp
xor
pop
xor
cmpsb
flds
mov
ret
js
dec
iret
or
or
push
outsl
mov
shr
mov
jg
or
mov
and
popa
mov
or
lods
pop
fmul
iret
push
xor
jmp
cwtl
mov
pushf
divb
mov
xchg
or
push
jg
test
les
dec
js
jae
popf
push
mov
mov
jge
xchg
mov
sbb
scas
fnstenv
out
movsb
dec
sub
xchg
pop
das
push
mov
loope
jo
dec
xchg
in
orl
cmp
cwtl
dec
scas
jb
adc
out
leave
adc
pop
mov
js
test
or
pop
in
cli
sahf
mov
dec
lods
mov
dec
sbb
pusha
bound
or
cmp
jg
aam
cmp
jge
lahf
push
or
repz
imul
and
push
pop
adc
fcmovnbe
sub
les
inc
movsl
xchg
push
mov
sub
jp
add
popf
sti
pushf
into
jp
inc
jb
or
push
std
adc
in
fisttpll
arpl
xchg
out
xchg
lods
sti
jns
in
cltd
adc
and
shr
cmpsl
test
shrl
lahf
and
jo
outsl
repnz
mov
ret
and
or
add
ds
mov
fs
adc
sub
sbb
xchg
ret
mov
ss
push
adc
scas
and
add
lcall
rcrl
mov
adc
and
mov
aaa
mov
dec
jmp
clc
sbb
test
pop
pop
out
add
lcall
cs
push
sarl
sahf
sub
push
call
push
push
xchg
movsl
xadd
pushf
inc
or
loope
mov
test
dec
inc
stc
or
leave
adc
std
mov
sarb
push
jae
ret
mov
adc
fisubrl
mov
fwait
shl
pop
push
or
pop
mov
lock
jle
pop
aaa
ss
pop
into
mov
in
scas
cwtl
dec
ljmp
dec
push
ja
es
nop
mov
movups
arpl
popa
pop
in
mov
dec
addr16
loopne
inc
inc
mov
out
lock
mov
dec
or
or
rcll
adc
push
sub
pushw
or
out
xor
mov
push
lahf
ljmp
push
lea
imul
orl
xor
pop
add
scas
gs
jmp
cmpb
sti
test
outsl
movsl
lods
int
leave
adc
pusha
mov
mov
xchg
jmp
sub
js
sbb
add
add
mov
rcrl
and
or
push
push
mov
ja
and
icebp
rcll
inc
je
out
adcb
lcall
stos
lods
addr16
scas
es
ret
push
add
sub
dec
in
js
cwtl
gs
xchg
pusha
fimull
xor
iret
push
bound
in
in
and
lahf
jg
mov
mov
jge
call
or
cmp
cmpsl
out
mov
flds
push
in
or
fcomps
mov
fnsave
pop
mov
sub
push
inc
mov
scas
loope
cli
int
mov
aam
loop
sbbl
and
adc
dec
popf
scas
xchg
adc
push
push
iret
mov
xor
aam
sbb
scas
outsl
aaa
mov
push
call
les
ret
or
or
into
add
mov
out
stos
stos
inc
test
insb
dec
lods
ror
les
icebp
outsb
xor
inc
sub
ss
add
shlb
push
lahf
sub
cmp
mov
xor
leave
push
int
int
in
int3
cmp
jmp
nop
pop
jmp
jne
add
inc
daa
and
push
mov
push
sbb
xchg
cltd
aad
or
mov
add
test
xchg
or
cld
sbb
xor
push
push
or
in
scas
xor
imul
mov
mov
add
pusha
das
adc
jmp
sbb
xor
push
sbb
mov
sbb
jmp
lods
test
sub
sbb
sub
data16
lcall
adc
push
xchg
and
fdivl
daa
lods
pop
in
and
jbe
ljmp
and
test
mov
sub
push
flds
jecxz
loop
cli
aas
push
mov
sub
stos
repnz
sbb
scas
mov
mov
jge
repnz
add
adc
push
mov
aam
cs
and
sbb
enter
popa
jno
or
cmp
lods
inc
gs
jbe
xchg
xor
push
add
mov
imul
and
stos
push
adc
sbb
or
cmp
or
push
push
call
sub
stos
dec
xchg
inc
cs
and
jl
sub
enter
add
adc
mov
and
dec
icebp
jbe
push
xor
xchg
in
dec
sub
fsubs
icebp
test
cmpsb
and
push
and
inc
std
mov
mov
aas
mov
and
cwtl
ret
mov
add
and
and
scas
mov
shrl
sti
ja
xchg
lds
mov
mov
into
cmc
jbe
and
adc
repnz
sub
mov
outsl
xchg
and
jbe
cmp
mov
push
mov
xchg
and
out
add
sahf
cwtl
sub
dec
mov
push
mov
out
sbb
scas
pop
les
fbld
xor
cli
lock
xlat
dec
fisubl
and
lods
mov
mov
rcr
add
cld
fsub
sub
mov
sub
and
and
lcall
jns
sbb
leave
in
or
stos
roll
aaa
and
inc
fwait
push
call
cmpsb
sub
into
push
mov
and
hlt
scas
jne
xor
loopne
xor
cmp
lods
das
sti
ret
lret
and
xor
sub
mov
add
mov
sub
or
adc
mov
push
adc
xchg
jae
sbb
mov
mov
adc
fsub
mov
and
mov
fcompl
popf
sbb
xchg
mov
call
repz
and
mov
and
int3
dec
mov
xchg
imul
sub
sub
add
je
xchg
gs
ret
mov
and
and
jp
arpl
pop
push
dec
mov
movl
notb
and
out
popa
pushf
and
test
aam
cli
cmc
sub
scas
mov
clc
fs
cmc
int3
xchg
mov
add
mov
push
adc
push
pop
mov
and
jg
and
mov
xchg
pop
stc
sub
xlat
jno
out
dec
scas
xchg
jb
mov
movsl
movsb
cmp
and
push
mov
dec
jnp
int3
iret
test
xor
xchg
dec
cld
add
frstor
dec
es
cmpb
imul
mov
inc
push
cli
sti
cmp
ds
ret
push
lret
and
roll
and
fxch
and
inc
aas
mov
xchg
add
xchg
adc
icebp
dec
add
cmp
or
cmc
pop
inc
arpl
inc
subl
inc
and
dec
pushf
push
cltd
add
mov
je
xchg
in
sbb
adc
jge
int
jns
out
pop
test
jmp
faddp
pop
jge
and
addr16
and
scas
mov
test
and
aas
mov
loop
fs
and
dec
les
and
out
popa
scas
daa
hlt
and
xchg
xchg
jno
fs
outsb
jg
mov
stc
ret
or
movsb
lock
lea
jl
jnp
and
adc
into
shll
fcmovu
jns
jbe
out
loope
sbb
xor
arpl
fcmovb
push
fldl
xor
imul
add
xor
mov
push
mov
popf
sbb
enter
push
dec
fstl
es
jae
je
lea
fmulp
ret
jbe
mov
test
and
popa
sub
imul
loopne
add
ljmp
call
cwtl
jbe
xchg
rorb
xchg
jae
and
xchg
pop
bound
mov
pop
sbb
xor
jbe
cli
adc
shl
sub
es
jmp
sub
inc
xchg
pop
in
sbb
mov
pop
je
and
and
in
imul
and
xor
push
adcb
mov
pop
and
jo
and
in
into
sbb
add
in
js
cmp
and
insb
mov
cmp
fwait
and
add
inc
xor
inc
fcoms
sbb
test
cmp
sbb
jge
lods
roll
sub
sbb
jle
or
in
fisttpll
ss
sub
sar
xchg
and
xor
addr16
or
push
loop
lret
xchg
jo
stos
and
jae
and
adcl
mov
shlb
xchg
jecxz
adc
xchg
add
or
and
icebp
packuswb
cmc
scas
xchg
lcall
rclb
inc
mov
pop
cs
leave
shll
cmp
mov
mov
or
loopne
jns
push
and
test
clc
test
icebp
or
xchg
or
test
adc
and
or
jp
loope
xchg
add
gs
xchg
je
sbb
in
and
and
ret
xchg
hlt
mov
cmpsl
jg
mov
or
and
mov
inc
or
mov
fdivl
repnz
insl
add
rorl
sbb
adc
mov
movsb
mov
adcb
xor
lcall
mov
xchg
and
ds
push
popf
insl
cltd
mov
push
jbe
xor
adc
in
jae
and
ss
inc
iret
outsb
loop
mov
out
add
xchg
inc
jl
stc
int
or
mov
imul
insl
push
inc
lret
dec
adc
cmpsl
mov
cli
shl
stos
mov
inc
and
leave
jmp
mov
mov
dec
fidivl
and
icebp
jns
cli
push
mov
push
and
subl
jecxz
xor
cmp
aad
push
and
push
sti
sub
adc
push
push
dec
mov
and
sti
in
dec
mov
ja
and
test
xchg
push
jp
aam
mov
insb
outsl
sbb
cltd
dec
sub
lock
mov
push
and
mov
mov
iret
sub
adc
cmp
lods
loop
loop
and
nop
arpl
inc
add
mov
or
imul
ljmp
lock
lods
cltd
popf
sbb
hlt
push
shrl
adc
jae
loope
push
and
int
les
outsb
sub
adc
sbb
xchg
loope
adc
xor
and
push
movsb
mov
hlt
testl
pop
clc
ljmp
sti
pop
movsb
xchg
and
or
jmp
push
pop
add
xchg
dec
xor
cmc
cs
idivb
nop
jecxz
push
leave
xchg
sbbl
imul
xlat
out
in
sub
adc
les
int
and
in
cmp
sub
jb
inc
jle
cmp
and
and
or
in
cmp
insl
fisubl
mov
push
add
sub
outsl
sbbb
mov
mov
lahf
xchg
loop
out
add
xor
stos
jnp
jl
mov
cs
sbb
in
jnp
jg
dec
adc
mov
cmpsb
add
dec
and
nop
sbb
lret
pop
and
and
cli
jle
and
mov
sbb
out
popf
lahf
mov
mov
adc
mov
loope
dec
adcl
movsb
and
cmc
fbstp
push
and
add
add
cmpsl
xchg
mov
in
aas
leave
sub
ljmp
cmp
jne
and
cmp
jns
out
and
push
loope
test
pop
call
das
cmp
movsb
sub
jnp
dec
add
mov
out
and
cmp
and
cs
icebp
mov
and
in
into
push
insb
test
in
cmp
adc
and
sub
sbb
mov
stc
jmp
jl
or
dec
sub
lea
dec
or
pusha
sub
jge
cs
call
push
xor
xchg
sub
xchg
dec
and
xchg
sub
in
sbb
add
in
push
cmp
lret
ljmp
loop
clc
ds
cmp
stos
mov
and
fildl
push
scas
mov
dec
pusha
add
cmp
mov
insl
push
mov
imul
pop
sahf
sbb
incl
mov
inc
cmpsl
loop
sbb
mov
or
jg
leave
sub
xor
jmp
in
mov
push
out
pop
jp
shrb
and
push
jmp
adc
sub
pop
mov
cmp
and
inc
sub
pop
or
es
push
inc
jmp
insb
dec
sbb
test
cltd
push
mov
sbb
push
test
and
inc
stc
ret
add
add
xchg
inc
adc
jg
ret
jb
jecxz
inc
loopne
rorl
add
call
scas
adc
jae
and
pop
inc
and
and
pop
imul
shlb
push
sub
lods
xchg
mov
popf
adc
mov
push
lret
xchg
test
ja
xchg
and
jae
mov
add
les
push
sub
pusha
cli
adc
ja
mov
dec
andb
and
push
gs
aas
sahf
and
mov
leave
and
rorb
imul
or
add
leave
aam
fs
sbb
sub
or
and
adc
adc
xchg
popf
imul
push
and
jb
loop
jmp
sarb
adc
mov
scas
fsubs
repz
in
insb
and
in
mov
ja
mov
pop
mov
pop
stos
lds
cltd
or
and
jle
adc
and
out
int3
pop
add
mov
adc
cmp
sahf
and
or
outsl
xchg
and
pop
rcr
lret
adc
loop
add
loop
shrb
movsl
push
mov
inc
mov
dec
jg
jae
addr16
addr16
addr16
andb
test
ja
dec
sub
int3
jae
mov
addr16
addr16
lea
mov
andb
cmp
mov
cmp
in
daa
or
and
and
and
and
and
adc
shlb
nop
out
push
sbb
imul
push
push
mov
mov
ds
jle
jle
jle
jle
jle
inc
or
pop
dec
sub
push
pop
pop
shrb
or
mov
fimuls
jle
jle
jle
inc
xor
jecxz
repz
jae
addr16
jnp
addr16
adc
and
mov
aad
mov
sahf
and
push
and
add
nop
pusha
push
mov
popf
mov
enter
outsl
xor
cli
add
dec
stos
popf
dec
sarb
popf
xchg
gs
dec
jbe
out
cmp
mov
cmp
jne
lods
es
daa
xchg
and
and
and
mov
inc
adc
dec
adc
sub
jmp
and
inc
call
inc
or
xor
lods
and
shll
and
in
mov
push
and
and
and
and
fisubl
jnp
repz
inc
adc
sarl
pushf
pop
mov
das
mov
pop
in
dec
and
adc
nop
scas
add
das
orl
fmuls
push
jmp
xor
pop
in
ja
out
imul
aas
push
rcrb
mov
cmpsl
adc
pop
adc
sub
je
jl
lea
outsb
or
lods
sub
sub
cpuid
stos
push
or
jmp
inc
scas
mov
pop
mov
mov
xchg
cld
pop
push
enter
sahf
iret
inc
xor
repz
sbb
int3
jae
addr16
dec
xor
incl
dec
jge
mov
adc
lods
cmp
push
and
or
or
mov
inc
test
dec
popf
fcmovnbe
test
dec
dec
repnz
shll
mov
fsubs
es
push
cmp
and
and
mov
iret
dec
jnp
addr16
imul
or
loop
mov
adc
les
push
fs
fs
fs
xor
fldenv
shrb
mov
in
fisubs
jnp
ret
cmp
pushf
or
fwait
mov
and
outsl
pop
xchg
fs
cs
mov
insb
mov
out
repnz
pop
in
idiv
daa
loopne
and
or
jmp
stos
push
je
pop
push
rcl
dec
pop
push
dec
sbb
jle
pop
filds
lods
adc
clc
dec
cld
xchg
repz
std
add
rcrb
jg
out
add
test
jge
add
sahf
jg
jle
jle
jle
jle
jle
jle
inc
or
insl
ja
cmp
mov
repz
iret
adc
and
fiaddl
add
loopne
cli
in
in
out
loopne
loopne
loopne
loopne
ror
cmp
repnz
mov
or
and
and
cmp
int3
jg
jae
addr16
jnp
es
mov
or
xchg
into
add
or
orl
orl
mov
ret
jmp
ret
mov
lahf
outsl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
push
iret
out
fs
or
enter
dec
ret
or
mov
add
andb
add
ret
daa
andl
or
addb
dec
orl
or
orl
aad
or
pop
adc
leave
push
mov
push
push
popf
ret
mov
ret
hlt
subl
fs
mov
dec
fs
fs
ret
cmovge
addr16
addr16
or
addr16
leave
in
pop
orb
jmp
add
mov
dec
sub
dec
lods
dec
lea
dec
dec
dec
cs
push
dec
out
dec
dec
dec
dec
pop
push
jle
jle
jle
jle
jle
jle
hlt
sub
and
add
mov
push
dec
push
sub
lods
push
lods
push
outsb
push
dec
push
cs
push
push
out
push
into
push
scas
push
mov
push
out
push
call
imul
dec
jmp
dec
loop
push
lea
jl
sub
or
in
fs
lods
fs
fs
fs
mov
dec
fs
fs
xor
sub
addr16
mov
addr16
push
mov
sub
or
in
push
int3
mov
sub
dec
into
dec
mov
dec
dec
dec
das
dec
cmovp
dec
iret
dec
scas
dec
or
dec
test
dec
dec
jb
jl
or
jmp
dec
mov
in
dec
int3
dec
lods
dec
mov
dec
dec
dec
sub
jle
jle
jle
jle
jle
push
iret
jmp
ret
dec
stc
addr16
mov
addr16
push
loop
ret
mov
aam
or
call
insl
and
sub
and
and
and
xor
xchg
orl
call
inc
push
add
scas
sbb
mov
add
mov
in
out
loopne
loopne
loopne
loopne
loopne
shr
adc
push
outsb
lea
dec
outsl
dec
push
dec
call
dec
mov
dec
dec
dec
sub
arpl
inc
scas
insl
add
bound
sbb
outsb
adc
cs
push
popf
test
enter
mov
push
dec
or
dec
leave
mov
xor
mov
in
mov
out
shrb
adc
push
dec
push
das
push
rsqrtps
push
dec
push
dec
push
or
push
leave
push
test
push
dec
inc
push
fwait
add
arpl
or
sbb
mov
dec
dec
dec
sub
dec
outsl
dec
dec
dec
das
dec
setg
jle
push
scas
outsb
fs
xor
sub
pop
ror
imul
xor
int
mov
test
mov
or
popf
add
ret
push
mov
dec
fs
cltd
fs
outsl
fs
fs
repnz
sub
cmp
jl
iret
scas
sbb
jle
mov
ss
imul
lahf
lahf
shlb
pop
fs
clc
lea
xchg
outsb
jb
das
mov
dec
cmp
push
adc
addr16
inc
fldl
rorl
addb
cmp
and
hlt
and
jne
adc
and
or
insb
sub
bnd
jl
mov
dec
stos
dec
push
jg
xchg
aas
add
orl
or
stos
pop
xchg
popf
out
pop
fwait
jmp
cmp
cmp
mov
cmp
xor
test
sarb
jnp
pop
adc
js
push
push
je
pop
cmpsl
inc
cmp
xor
cmpsb
cld
push
daa
cld
ja
pop
and
mull
xchg
and
and
and
and
and
cmp
sub
mov
sbb
or
test
xchg
sbb
mov
inc
loopne
sbb
andl
pop
sbb
xorb
aam
stos
nop
adc
mov
sub
pop
sub
sbb
jo
adc
pop
sbb
in
pop
mov
xchg
push
cwtl
int
popl
fcomps
adcl
dec
or
mov
ret
mov
loope
pop
xchg
mov
mov
jp
test
scas
jmp
cld
xchg
xchg
dec
jle
jle
or
dec
xor
lods
xor
pop
and
fsts
jb
arpl
xchg
pop
sbb
inc
lcall
xchg
data16
cs
cmp
mov
xorl
push
insb
jg
lock
dec
mov
shll
outsb
popf
pop
fimuls
jne
iret
fs
add
sti
push
mov
mov
cmp
sbb
adc
ljmp
mov
ljmp
or
jecxz
icebp
adc
lods
or
sub
ss
fstps
pop
sahf
fdivr
aam
inc
dec
push
in
mov
int3
scas
pop
and
or
xor
mov
jg
mov
test
cli
push
loopne
shrb
xchg
push
clc
push
mov
add
ja
dec
mov
jb
pop
aam
jge
cmp
adc
test
push
mov
and
mov
jge
cmp
sbb
and
push
push
cmp
in
jbe
outsl
or
cmp
loopne
sbb
rcll
pop
imul
nop
adc
in
std
sarl
xchg
out
pop
push
xchg
push
xor
adc
outsb
and
jle
jle
fadd
cli
pop
mov
cmpsl
dec
add
pop
push
andps
test
pop
inc
rcrl
cmp
push
out
test
mov
cmp
add
in
daa
out
loopne
mov
inc
lods
ret
scas
in
mov
push
push
adc
insb
loop
out
add
scas
sub
push
push
mov
test
subb
sub
jmp
sub
jae
mov
ljmp
xor
and
jecxz
sub
mov
push
repz
mov
lods
adc
sub
pop
lods
dec
dec
lcall
jnp
xchg
sbb
dec
scas
dec
or
sub
call
cmp
stos
in
test
loop
mov
cld
jecxz
cld
adc
sub
lods
lods
cltd
insl
xchg
pushf
jnp
xchg
out
dec
mov
sbb
scas
cmp
pop
call
out
shr
or
push
mov
xchg
sbb
out
or
cmp
sub
test
dec
fimuls
dec
testl
dec
mov
popa
dec
rorl
dec
jb
pushf
cmp
or
aas
cmp
mov
cld
xor
pop
fisubrs
xor
addr16
push
push
jge
adcl
scas
ja
dec
cmp
inc
dec
jmp
in
out
lahf
mov
orb
lea
cwtl
sub
lea
fs
mov
adc
jns
mov
dec
add
aam
rol
ret
mov
pop
adc
xchg
mov
cltd
fs
int3
movsb
fs
sbb
fbld
addr16
addr16
addr16
addr16
pmulhuw
add
ret
or
cmp
mov
stos
lret
dec
adc
xchg
push
push
jl
aam
in
cmp
imul
add
movb
test
imul
dec
repz
dec
add
add
push
lods
cmp
dec
lret
cs
out
or
scas
adc
dec
jle
jle
les
jecxz
das
mov
add
sub
repz
lahf
mov
mov
outsl
and
das
xor
or
subl
les
mov
mov
insl
xchg
scas
sub
sbb
in
lret
int
mov
dec
lahf
dec
sub
call
sti
mov
leave
dec
and
and
inc
mov
shl
nop
ret
sub
adc
push
sub
lahf
fs
dec
mov
cltd
dec
std
pop
jle
int3
jmp
lods
push
js
mov
or
pop
out
jg
add
or
push
jbe
cmp
shr
or
fsts
sub
add
mov
jo
jge
pop
jle
mov
pop
gs
dec
ss
cli
inc
in
out
add
inc
mov
nopl
test
pop
rcr
push
dec
and
push
push
outsb
jne
int
push
jle
jle
jle
pop
cmp
cmpl
jae
push
pop
js
sbb
imul
jmp
mov
dec
mov
push
push
sbb
or
jle
rorl
xchg
mov
sbb
lea
outsb
adc
xor
aam
hlt
jle
jle
jle
jle
jle
jle
jle
jle
jle
fdivl
jnp
mov
lods
or
scas
or
test
pop
xor
jns
loope
andl
sbb
fisubl
and
pop
and
sbb
cmp
sti
and
cmp
dec
push
je
pop
cli
inc
lcall
sbb
pop
sti
lock
jp
inc
push
fs
add
cli
pinsrw
loopne
loopne
loopne
loopne
sbb
fcoms
and
inc
sub
pop
xchg
ljmp
call
imull
lods
stos
movsl
xchg
pop
sahf
aad
pop
sarl
pop
push
iret
rcrl
aas
lods
xchg
movsb
xchg
pop
test
add
cltd
outsb
mov
fstl
scas
sbb
sbb
inc
mov
mov
dec
cmpsl
jg
jae
add
shlb
andb
inc
scas
roll
dec
and
dec
loope
orl
dec
sbb
xor
ret
mov
and
and
loope
andl
bound
sbb
ficoml
mov
push
sbb
push
fistl
push
push
popf
dec
push
sbb
lods
mov
or
test
cmp
mov
and
or
sub
clc
dec
cwtl
dec
mov
dec
sbb
jle
jge
repnz
jge
lea
insl
je
shl
or
jl
lea
outsb
es
and
xor
sub
mov
jl
jae
xor
ud1
fdivl
aam
cli
outsb
cmp
out
ljmp
dec
int
push
leave
mov
push
adc
repz
fs
lret
push
or
call
and
out
mov
repz
lds
sbb
cmp
and
and
leave
fs
fs
fs
fs
mov
pop
shl
fnstsw
gs
outsb
or
sub
sahf
ret
arpl
xchg
in
push
pop
sbb
test
fdivrs
mov
sbb
and
and
and
and
adc
rclb
mov
xor
sub
adc
dec
sbbb
call
popf
jge
push
cli
jl
cli
loopne
lock
dec
outsb
pushf
jle
jle
jle
jle
in
fidivrl
adc
add
xchg
jo
ret
add
mov
dec
out
decl
ret
leave
xor
leave
cmp
movsl
mov
lret
fwait
cmp
jne
xchg
sub
push
adc
jle
push
dec
ds
in
fmull
ret
js
sbb
cmp
cwtl
dec
mov
push
cmp
cltd
addr16
adc
pop
rolb
xchg
sbb
insb
xchg
push
in
sahf
push
outsb
mov
ljmp
push
cmp
dec
mov
push
jle
jle
jle
jne
cmp
int
push
aaa
push
xlat
push
inc
push
sbbb
mov
imul
ds
out
out
ljmp
jmp
or
iret
cli
idivb
dec
nop
or
stos
ss
xchg
jbe
filds
push
jp
sbb
cmp
add
ja
dec
xlat
jg
xchg
add
lahf
sbb
dec
in
fisttpll
jg
jae
push
aad
decb
inc
aas
dec
and
mov
pop
pushf
ljmp
outsb
cmc
pop
pop
dec
sbb
cli
push
fs
sti
cmp
clc
inc
push
xor
mov
pop
push
xchg
popf
sahf
pop
out
aam
outsl
rcll
cwtl
scas
aam
sub
test
mov
push
jmp
or
test
mov
sub
adc
jle
jle
fsubrl
clc
outsb
out
fmul
out
arpl
int3
ret
mov
mov
fbld
jle
repz
and
add
jmp
mov
lock
out
clc
adc
add
pop
and
inc
repnz
push
cld
jbe
push
fdivs
cltd
idivb
mov
dec
and
and
es
push
jl
fs
dec
xchg
dec
mulb
push
sub
push
add
test
ret
cmp
mov
or
in
cmp
dec
fucomi
int3
insl
fdivrl
xchg
push
shr
jl
inc
sub
mov
lea
xor
bnd
mov
cmpsl
sub
mov
xchg
dec
cmpsl
sub
in
shr
xor
sub
push
push
jnp
addr16
push
loop
mov
rolb
fcoms
push
in
shll
or
adc
cmp
rcll
sub
mov
ljmp
mov
dec
repz
push
pop
loop
ret
je
or
pop
and
insl
es
or
leave
ret
cmp
ljmp
push
push
adc
lods
shrb
lahf
stc
cmp
mov
push
dec
iret
mov
lods
ja
xchg
sub
cmpl
int3
mov
add
adc
or
jmp
mov
cltd
outsb
mov
mov
or
dec
das
ja
dec
out
and
scas
enter
dec
dec
dec
in
jg
jae
xchg
cltd
scas
sarb
inc
das
adc
scas
scas
loopne
shrb
scas
cld
sub
jl
jmp
mov
cmp
dec
lods
push
inc
add
push
add
leave
sbb
aad
xchg
scas
insb
dec
dec
das
jg
jnp
cmpsb
iret
push
mov
subl
or
cld
enter
mov
push
dec
dec
repnz
add
loop
ret
pop
orb
inc
ljmp
sarb
mov
fs
fs
cmp
sub
add
loopne
rorb
clc
std
stos
dec
mov
jecxz
cli
stc
mov
popf
pop
mov
mov
mov
leave
outsb
fs
and
rcrl
jmp
xorl
leave
cs
outsb
dec
outsl
ja
dec
jnp
or
test
dec
mov
dec
dec
dec
sub
fiadds
leave
jecxz
ret
mov
jnp
insb
addr16
xchg
in
ja
scas
adc
popf
nop
gs
sbb
xor
xlat
test
sbb
fnstcw
jle
jle
jle
les
int
pop
push
shrb
and
pop
sbb
jnp
mov
or
and
xor
dec
cltd
call
addr16
dec
imul
ret
pop
subb
inc
fmul
fmull
pop
in
dec
mov
cmpsb
int3
push
and
jg
jae
idivl
addr16
push
mov
push
shll
dec
mov
jecxz
ret
js
dec
ja
push
les
ds
mov
dec
cld
sub
sub
jmp
sbb
and
jmp
into
shrb
lea
jl
sub
dec
cmp
xor
lods
repz
js
jnp
cmpsb
pop
hlt
mov
sbb
dec
fisttpl
and
jg
aaa
jmp
xor
rcrb
cs
add
push
adc
mov
push
sbb
test
sti
mov
ret
jbe
addl
xchg
dec
xchg
pop
stos
or
push
fisubs
jp
sub
and
mov
dec
faddl
pusha
or
loope
lods
push
lea
or
insl
out
dec
out
xchg
mov
out
test
sbb
fdivr
push
and
lods
lea
jge
sbb
adc
xchg
lcall
cmpsb
add
cwtl
jle
dec
xchg
dec
dec
push
popf
rorl
fisubrl
insl
dec
jne
sub
mov
repnz
dec
rcrb
je
mov
cld
jmp
int3
shlb
aad
mov
cli
inc
mov
cmpsb
test
sti
xchg
mov
lods
lock
push
imul
cmpsb
inc
add
sbb
ja
loope
movsb
sahf
in
fsubrs
lahf
push
pop
mov
dec
push
or
pop
test
rorb
inc
mov
pop
cmpsb
jnp
and
sub
call
lret
roll
sbb
arpl
xchg
xchg
dec
decb
lcall
sbb
das
fxch
jmp
add
aam
mov
mov
clc
es
push
idivl
adc
nop
push
or
dec
popf
mov
dec
mov
test
cld
out
dec
popa
or
xchg
imul
outsl
test
lea
leave
xchg
popf
addr16
std
fwait
xchg
push
adcl
add
adc
dec
ds
fadd
dec
fsubp
out
loopne
sbb
mov
fcoml
xchg
ds
mov
mov
adc
cmp
adc
pop
cli
and
xor
leave
js
xor
imul
cs
repnz
je
rorl
icebp
nop
cltd
push
dec
fucomp
dec
jns
arpl
dec
call
shl
iret
cmpb
loope
lds
gs
repnz
mov
cld
lods
pop
inc
jge
out
mov
sarb
sbb
lahf
test
aas
ja
cmp
scas
pop
insl
push
call
stc
sub
shlb
inc
cmpl
icebp
repz
dec
out
jae
mov
dec
and
xor
adc
outsb
cwtl
outsb
pusha
hlt
add
pop
aas
inc
sar
cmp
pop
or
test
cli
pop
lcall
jl
fs
fistl
fwait
pop
es
and
or
mov
mov
repnz
or
pushf
rorb
mov
fcompl
int3
jmp
popf
add
xchg
mov
sub
sbb
ljmp
sub
jl
jle
dec
fwait
jg
jae
addr16
cmpsb
and
leave
fs
movsb
adc
gs
add
cmp
dec
movsl
addr16
and
or
pop
test
xor
stos
imul
push
scas
ja
sar
push
sbb
fwait
aad
jle
jg
inc
push
or
inc
adc
mov
rcrb
loopne
rcr
repnz
cltd
inc
ljmp
or
dec
out
dec
xor
fs
ret
pop
add
addr16
addr16
rclb
mov
sti
add
and
pop
popf
pop
lea
aam
dec
add
pop
sbb
dec
loope
mov
cmp
jle
fidivs
sahf
dec
call
jl
dec
xor
cmpsb
xchg
push
push
nop
addl
ret
sub
jecxz
add
out
cmp
cmc
cmp
or
int
add
movsl
out
mov
in
mov
lahf
mov
scas
clc
lds
lcall
js
pusha
push
fstl
lods
rol
nop
scas
push
push
mov
and
ret
bound
sbb
mov
inc
push
pop
ljmp
push
ret
adc
jg
xchg
cmp
adc
in
dec
add
push
fwait
adc
mov
inc
fidivrl
bswap
out
or
cmpl
dec
aad
cmp
add
pushf
xchg
test
add
mov
pushf
cmp
mov
lahf
aad
stc
pop
vmread
and
pop
ds
scas
jl
dec
pop
dec
jns
sbb
dec
dec
cltd
dec
shl
insb
xor
jge
xchg
lods
mov
into
jp
jle
in
sbb
loop
adcb
and
lods
or
inc
in
fcmovbe
pop
adc
add
add
mov
dec
test
fmull
mov
fsub
insb
add
xor
push
cli
mov
into
in
mov
lods
rep
jno
and
push
mov
clflush
dec
jp
cmp
lahf
not
outsl
jno
xor
repnz
rolb
in
mov
xor
jnp
sbb
nop
push
imul
popa
sub
adc
aam
xchg
movsb
daa
add
les
lods
scas
jle
jle
lcall
push
das
jle
pop
add
ucomiss
sbbb
popf
adc
mov
mov
adc
jp
dec
hlt
rolb
pop
test
jle
inc
imul
dec
adc
push
movsl
jne
repz
fs
inc
adc
cli
inc
bnd
sarb
cmp
pop
shrl
or
inc
test
cmp
and
and
sbb
mov
mov
shlb
cltd
jle
fdivrl
add
pop
lcall
iret
adc
sbb
rcrl
add
sbb
test
fsubrl
jge
cltd
lods
dec
pop
mov
or
das
push
sub
test
or
test
or
pop
sub
push
dec
loop
insb
arpl
dec
mov
adc
dec
in
mov
js
scas
xor
mov
lea
call
xchg
mov
repz
pop
jae
xchg
jecxz
push
or
jle
shr
pop
sub
call
outsl
sbbl
mov
pop
push
adc
rcll
push
test
push
pop
mov
faddl
dec
and
xchg
fucomi
lret
imul
sbb
mov
pop
sbb
mov
aad
xor
sti
out
sub
dec
pop
dec
or
insl
cs
insl
outsb
rep
fs
sti
mov
mov
sub
fidivl
push
dec
jnp
xchg
sub
push
or
dec
sbb
out
shl
outsb
int
sub
cli
pop
jne
loopne,pn
shrb
popf
and
xor
leave
jecxz
sbb
arpl
lea
sbb
sbb
push
dec
pop
sahf
leave
fcompl
aas
or
sub
into
jmp
sbb
add
es
mov
xchg
mov
mov
fmull
jmp
inc
push
ds
mov
add
dec
cs
xchg
data16
mov
sti
fimuls
psllq
addr16
xlat
adc
lahf
or
dec
gs
cmp
push
pop
push
sahf
push
mov
jo
sbb
mov
xchg
cmpsl
cli
shll
and
arpl
rep
imul
jnp
mov
cltd
scas
dec
mov
dec
jns
xlat
cmp
push
pusha
cmp
std
and
inc
les
pop
cwtl
popf
pop
jge
cli
or
mov
repz
mov
push
std
shrl
nop
inc
ficompl
or
or
xchg
push
cmovge
or
lahf
sub
dec
rclb
mov
cmpsb
add
sahf
cmp
enter
jmp
outsb
inc
jo
or
or
in
xor
leave
ffree
dec
push
int
in
sahf
int
aas
lea
mov
sbb
adc
mov
xchg
pushf
sub
loop
ret
cmpsb
xor
mov
les
or
leave
xchg
clc
add
pop
in
sbb
dec
dec
jnp
sahf
insl
or
in
rcrb
repz
iret
js
imul
imulb
push
das
cmp
test
jmp
dec
stc
dec
repnz
adc
lods
xchg
lods
inc
sbb
out
sub
sbb
xchg
jmp
mov
sahf
test
insl
ja
pop
jmp
repz
dec
add
mov
dec
jmpw
and
dec
cmc
inc
inc
popf
push
faddl
dec
scas
lcall
dec
mov
mov
in
cltd
rolb
dec
in
imulb
dec
ljmp
mov
fwait
stos
jge
push
shl
das
push
lahf
mov
mov
pop
mov
sbb
and
jecxz
test
jl
jle
mov
fmull
adc
push
xchg
mov
bound
fmull
out
sarl
pop
add
aaa
inc
out
mov
sub
hlt
nop
pop
push
push
sti
adc
push
je
test
les
push
sbb
repnz
xor
sti
lods
adc
sub
pusha
cmp
lds
pop
xor
adc
testb
xchg
cmpsb
and
add
ljmp
pop
xchg
sbb
mov
mov
pop
dec
imul
inc
jmp
jp
movsb
fisttpll
adc
sbb
fcoml
lahf
enter
mov
stos
in
test
or
loop
mov
xor
fcmovbe
adc
mov
je
or
adc
or
rclb
lcall
inc
cli
repz
jle
jle
jle
jle
mov
mov
sti
pop
adc
cmp
or
pop
or
sbbb
dec
cltd
sub
shrl
mov
ja
sub
cld
fldl
push
jle
push
test
xor
xchg
inc
cld
mov
mov
dec
pop
inc
and
call
mov
pushf
pop
push
mov
lods
fwait
call
fsubl
lods
sbb
inc
mov
idivl
out
cmp
leave
or
sarb
das
adc
lcall
xchg
test
pop
mov
xor
cs
mov
dec
sbb
push
cwtl
dec
push
jl
sti
and
in
cmp
negl
mov
fdivrl
and
sbb
in
jge
imul
adc
cs
sub
mov
inc
push
xchg
fidivs
dec
jb
push
sbb
mov
addb
sahf
mov
js
shrl
ret
cs
dec
inc
sub
dec
xorl
cmp
add
leave
repz
insl
jge
xchg
sub
jns
mov
push
dec
pop
inc
or
pop
and
mov
mov
sahf
in
aas
pop
test
mov
xor
sbb
in
sub
and
scas
pop
jp
stos
ja
das
dec
or
dec
add
repnz
mov
mov
push
es
aaa
daa
mov
push
leave
nop
cltd
jno
cmp
mov
ret
adc
leave
jle
loop
mov
dec
push
shl
cwtl
mov
mov
and
mov
jl
xor
sbb
push
les
push
lods
mov
sbb
mov
mov
fnstcw
dec
ss
jle
int
cs
test
jl
dec
dec
add
cwtl
jmp
fnstcw
mov
lds
push
cmp
adc
lock
insb
sti
and
mov
cmp
or
fsubrp
mov
mov
push
cli
jecxz
loopne
sar
adc
fucomi
cld
pop
mov
xchg
mov
mov
jge
cli
mov
dec
mov
dec
add
fisttpll
jo
add
arpl
sahf
scas
in
fcmovb
xlat
outsb
fdivrl
les
enter
sub
adc
lcall
sub
add
or
sub
mov
mov
cmp
jl
and
or
pop
dec
out
cmp
adc
clc
scas
mov
cltd
dec
mov
sbbb
int3
cmp
fs
cwtl
clc
add
fcompl
sbb
jbe
das
aas
xor
scas
insl
jo
fcomps
jle
aam
fmul
andl
or
test
jne
cltd
fs
or
jle
pop
adc
imul
cltd
cmp
mov
dec
outsl
jnp
sahf
sub
mov
and
mov
jle
inc
inc
cli
int3
cmc
loopne
shlb
ret
fcoml
fadd
mov
outsb
and
cmp
subl
adc
arpl
cmp
bound
jl
fs
push
xor
iret
cmp
inc
adc
mov
dec
xor
dec
pop
lcall
jle
insl
mov
gs
iret
clc
daa
xchg
leave
or
cltd
jmp
mov
ret
dec
insb
mov
js
xor
sbb
lods
rorb
fmuls
mov
push
enter
pop
dec
aad
dec
jl
rcrb
mov
insl
jp
dec
sub
dec
sub
lods
add
outsb
fldl2e
fildll
test
jle
pop
pop
add
dec
cltd
mov
adc
xchg
pop
inc
movsb
stos
cld
inc
push
add
testb
xlat
mov
lahf
rorl
ret
pop
inc
inc
xchg
sti
push
or
lods
iret
sahf
fs
or
adc
ret
aad
pop
push
movsb
adc
adc
jp
and
and
and
and
or
jo
sbb
repz
sahf
scas
jge
dec
mov
xchg
xor
cwtl
imul
sahf
and
inc
pop
in
scas
sbb
les
push
dec
call
xor
mov
jo
adc
in
push
jge
out
jp
mov
call
mov
inc
cmp
jns
dec
out
mov
push
jle
jle
inc
sar
lidtl
xor
lret
cmpsb
aam
les
test
push
cltd
pop
push
cmp
fwait
or
mov
sub
out
fsubrl
dec
jns
cmp
add
sbb
outsb
xchg
xchg
inc
or
jnp
sahf
sbb
jmp
cmp
or
cmpsb
aaa
cmp
out
rorl
jmp
rclb
adc
rcr
repz
mov
iret
adc
or
jo
mov
std
add
push
lea
sti
and
pushf
mov
pop
lds
pop
push
adc
rclb
mov
push
xchg
jae
cli
insb
adc
xor
mov
out
jmp
cmp
test
dec
sbb
sbb
cmp
aad
call
xor
sbb
call
xor
cli
pop
mov
dec
test
dec
jmp
pushl
and
or
mov
pop
out
rcrb
test
dec
mov
scas
add
or
xchg
jmp
cmp
stc
cmpsb
add
sub
cmp
fdivp
adc
clc
lods
push
jle
jle
xchg
inc
addl
pop
les
jae
xchg
sbb
mull
mov
xchg
mov
jns
imul
fwait
or
sbb
fs
rcl
emms
insl
dec
pop
jg
xchg
pusha
das
ret
xor
dec
mov
cmp
adc
pop
repnz
into
rorb
fdivr
mov
xchg
repz
or
or
stc
adc
lea
out
ffree
call
jmp
sbb
stc
insb
test
xor
iret
enter
mov
pop
inc
sbb
sbb
ficoms
lods
jp
psubd
sbb
cs
mov
mov
ljmp
cmp
dec
jns
cmp
mov
test
aas
insl
mov
in
out
inc
rclb
cmp
push
jl
pusha
es
or
aam
adc
stc
push
mov
dec
dec
or
pushf
mov
scas
mov
or
jg
cmp
jnp
arpl
dec
jge
and
or
dec
mov
pop
lret
sti
jge
jae
lcall
outsl
ja
adc
jo
and
cmpl
in
shrb
andb
add
insl
cmpsb
inc
dec
shr
sbb
sbb
lea
ffree
ret
js
rcrl
outsl
movsb
repz
jg
adc
shll
outsl
fs
dec
or
inc
bnd
xchg
xor
test
imul
dec
sbb
and
jne
xchg
cs
jle
jge
push
iret
add
ficompl
outsb
push
insl
outsl
jge
cmpsl
shlb
mov
add
mov
dec
dec
or
lahf
or
test
sub
add
inc
rolb
and
cwtl
mov
sbb
shlb
aad
fimull
scas
add
push
stc
ljmp
js
js
sub
iret
sub
or
test
cltd
int
cld
fmull
cs
push
mov
dec
jmp
std
dec
fdivrs
mov
dec
outsl
mov
lods
jle
loop
mov
sub
xor
sahf
jecxz
adc
adc
inc
insb
sub
dec
or
mov
push
aas
addr16
cmpsb
out
push
mov
js
mov
rorb
dec
or
insb
inc
stos
add
mov
cli
cs
rorb
xor
dec
jns
xlat
push
out
mov
iret
jl
dec
mov
mov
mov
js
jl
xor
in
test
movsb
rcr
fcmovnu
xchg
inc
outsb
aas
jle
les
mov
inc
rclb
decb
push
cmpsl
pop
push
lods
push
adcl
mov
shl
pop
aad
jns
lcall
jl
jp
es
lea
cmc
ljmp
sbb
mov
adc
mov
jge
fst
sub
or
inc
ficomps
push
cmp
push
call
dec
lea
xchg
dec
mov
imul
xor
xor
and
loop
dec
out
mov
xchg
fs
push
adc
add
push
ja
push
push
xchg
push
aaa
sti
ficompl
sub
lcall
in
sub
jnp
addr16
and
mov
inc
adc
xchg
es
scas
or
mov
loope
cmp
mov
lret
sub
scas
add
push
or
mov
sbb
es
loop
mov
outsl
cmpsb
mov
stos
and
push
mov
pop
sub
mov
dec
insb
push
fcmovnb
cmp
sbb
ljmp
sbb
add
push
mov
repnz
out
adc
mov
mov
push
sahf
out
out
sub
insl
ds
mov
sbb
int
loopne
lcall
mov
and
shrb
and
dec
mov
cld
in
add
push
shll
ljmp
bound
aas
pop
or
sar
mov
adc
stc
repnz
ds
mov
mov
or
push
mov
gs
pop
push
subb
adc
xchg
xlat
and
adc
bnd
cmpsb
xchg
mov
test
push
push
ljmp
in
imul
sbb
sahf
xchg
add
insb
sbb
stc
lcall
mov
fadd
fstpt
inc
mov
sbb
mov
xor
je
adc
movsb
dec
test
pop
cltd
adc
ret
jmp
inc
cmp
lods
in
gs
push
into
clc
sbb
subl
pusha
xchg
mov
dec
xchg
scas
jnp
sbb
pop
rcrl
insl
cli
dec
das
ljmp
or
in
dec
ret
mov
mov
dec
sahf
out
call
sahf
fadds
cli
fnstsw
dec
cmp
inc
or
je
pushf
orb
adc
dec
sub
dec
dec
aas
xlat
and
sahf
outsl
adc
push
inc
popf
mov
lahf
aas
je
lret
mov
ljmp
sbb
dec
stos
xchg
mov
push
add
cltd
ja
pop
scas
pop
jle
jle
jne
jge
popa
test
inc
or
stos
test
xchg
mov
or
jmp
pop
call
jae
xchg
dec
call
cld
sbb
std
loop
xor
repz
or
lea
xor
push
inc
mov
dec
cmp
mov
lar
sbb
aas
scas
cltd
imul
inc
ljmp
mov
adc
les
in
mov
adc
dec
sti
sbb
faddl
or
jl
jl
or
push
adc
fs
fs
push
pusha
out
cmpsb
fs
lret
out
repnz
inc
push
dec
je
adc
mov
pop
rcr
imul
xchg
xchg
mov
pop
dec
outsl
fs
rorb
nop
lods
incb
push
pop
stos
xchg
mul
aad
ja
push
pop
and
push
inc
data16
rcrb
pop
dec
or
and
out
lea
aad
mov
sbb
int
push
pusha
xor
iret
or
sbb
dec
fisttpll
mov
aas
xor
dec
cmp
adc
js
insb
test
inc
adc
push
pop
push
adc
push
or
xrelease
add
inc
cli
lahf
mov
fsubrl
adcl
dec
inc
cmpsl
xchg
ret
sbb
scas
mov
pop
push
or
adc
or
dec
outsb
jnp
addr16
jno
jle
cmp
das
out
mov
push
int3
inc
call
adc
pop
mov
cmp
lods
mov
inc
das
in
mov
dec
imul
pusha
jge
sub
cmpsl
push
lea
add
pop
cmp
jnp
jnp
push
dec
andl
sbb
add
xorb
in
stos
out
push
cmp
sbb
adc
lods
pop
ljmp
jb
or
test
xchg
sub
cmp
das
pop
scas
iret
xchg
loop
iret
jecxz
das
xor
add
xchg
les
pushf
sub
cmpl
js
stos
mov
mov
insb
inc
adc
push
jb
cmp
pop
int3
faddl
sub
orl
sub
mov
or
pop
test
ja
mov
lods
push
sbb
aaa
fildll
stc
or
dec
mov
cltd
push
sbb
jbe
push
nop
mov
insb
xchg
aas
jne
pop
or
das
sti
ret
cmp
inc
xor
pusha
adc
cmp
insl
stc
fsub
push
pop
imulb
push
or
ss
sahf
mov
sub
js
lahf
dec
aam
int
cmp
iret
cmp
and
pushf
or
xchg
xchg
cwtl
pop
jp
mov
push
fs
movl
push
subb
das
and
pop
fldl
xor
mov
and
cld
jle
mov
and
repnz
outsb
mov
mov
or
lock
mov
pop
or
pop
fmull
arpl
mov
xchg
sbb
xchg
iret
mov
xchg
rcr
sbb
loopne
inc
mov
push
cmpsb
add
leave
or
and
push
outsl
fistpl
mov
pushf
lods
mov
popa
sbb
lods
lahf
cld
gs
scas
and
inc
add
push
pushf
sahf
in
inc
call
jns
sbb
ficoml
jnp
xchg
sahf
lret
adc
scas
inc
and
pop
decb
std
mov
sti
dec
add
cli
push
fcomps
or
jl
outsb
pop
sti
xchg
insb
pop
and
or
fs
andb
or
stos
adc
mov
sbb
stc
stos
stc
fcmovbe
or
ret
das
sbb
pop
enter
pop
mov
scas
mov
ds
call
jle
add
adc
scas
xchg
les
test
jge
push
insb
inc
gs
lahf
pusha
ljmp
cmpsb
fwait
cmp
add
in
pop
scas
mov
addr16
sbb
mov
aaa
aaa
lods
popf
xchg
add
push
fisttpll
cli
cld
mov
jnp
daa
push
ret
mov
mov
sbb
jge
repz
add
mov
mov
dec
in
fcmovbe
ret
xchg
das
or
ljmp
call
test
cwtl
push
and
mov
nop
in
loop
lcall
scas
sbb
les
arpl
leave
dec
and
and
mov
aam
push
shlb
repz
pusha
fs
cmp
lea
inc
lcall
sub
cmp
push
mov
ret
loopne
shlb
lods
lods
inc
or
cmp
or
mov
cmpsb
push
idiv
push
arpl
xchg
add
in
sbb
sti
int
mov
add
xchg
adc
in
out
adc
push
cmp
popf
ficompl
push
outsl
sub
mov
mov
xor
xchg
jb
pop
mov
or
jmp
lds
addr16
sahf
mov
mov
and
push
das
sbbl
add
or
cmp
sbb
repnz
lea
call
mov
das
dec
bnd
mov
inc
cmp
es
or
mov
mov
xchg
mov
push
imul
sub
mov
push
ficoml
addr16
rorb
mov
and
lcall
and
mov
jae
push
outsb
bound
sbb
sub
test
fmull
in
mov
arpl
movsl
fcom
stc
addr16
mov
das
mov
mov
jecxz
shrl
nop
xor
sub
xlat
subl
mov
xchg
mov
cld
sbb
mov
fisubrl
mov
jl
int3
scas
ljmp
in
test
lcall
push
out
or
jmp
jae
xchg
jl
push
push
mov
aad
lods
aam
add
pop
cmp
xor
push
dec
lret
and
push
call
push
add
pop
arpl
lahf
lea
addr16
repz
scas
pop
xchg
push
sub
lods
inc
adc
mov
repz
ret
mov
pop
pop
aad
or
leave
pusha
js
xchg
push
repnz
push
rcr
cmovl
sbb
lods
lods
or
mov
sub
dec
xchg
je
mov
fs
bound
pop
insb
repnz
jne
sbb
sbb
cmp
hlt
sbbl
ljmp
pop
sub
jns
xor
sahf
and
test
aam
clc
push
adc
data16
inc
ljmp
cmpsl
scas
scas
and
in
sub
out
adc
inc
shll
shrl
or
stos
mov
bnd
fdivl
mov
push
js
in
out
sub
mov
mov
mov
into
xchg
movsb
push
add
add
cmpsb
push
dec
sub
shlb
out
loopne
rclb
insl
outsb
jge
inc
pop
push
mov
iret
or
or
push
mov
sti
lods
nop
jns
dec
sahf
dec
negl
xor
repz
mov
inc
int
cld
mov
cltd
lahf
movsl
jnp
sti
nop
in
sarl
mov
jmp
xchg
xchg
les
ljmp
add
das
adc
sahf
add
cmp
lahf
cmp
fimull
adc
jmp
mov
add
jp
test
sub
or
pushf
xor
pop
int3
mov
mov
mov
in
pop
lahf
xor
out
test
xor
or
addr16
ret
ret
lahf
or
dec
mov
adcb
add
xchg
dec
in
jecxz
mov
jp
jle
les
or
dec
mov
and
push
test
xor
jle
jge
push
mov
mov
std
inc
add
push
push
jecxz
scas
or
popa
mov
popf
mov
jns
push
adc
add
aam
hlt
insl
popf
shrb
inc
dec
popa
ja
jg
shlb
mov
orb
xor
xchg
fucomp
movsb
push
dec
jae
adc
jecxz
cmp
or
sbb
or
cs
lods
aaa
sbb
mov
rolb
std
mov
scas
mov
xchg
adc
adc
cmp
fmul
cld
ss
mov
dec
dec
jnp
mov
cltd
mov
xor
scas
pop
fimuls
cmpsb
or
jle
jle
jle
pop
aas
outsl
sub
mov
mov
cli
pop
cmp
fldcw
jns
lods
outsb
inc
adc
shlb
jb
fs
adc
rcll
fistpl
sub
dec
dec
lcall
push
inc
scas
lods
aas
pop
pop
jle
jle
faddl
cwtl
cltd
sub
or
dec
sub
add
jae
addr16
movsb
or
jle
les
repz
jmp
lahf
cmovs
leave
mov
iret
push
cmp
das
aam
into
out
and
dec
or
push
orl
or
pop
jo
push
movsb
mov
addr16
fsub
xchg
mov
ja
and
subb
pushf
lods
ret
jle
cld
jge
repnz
repnz
sar
repnz
cli
mov
push
out
loopne
loopne
loopne
loopne
loopne
loopne
rcrb
stc
jnp
fsubl
cmpsb
pushf
out
add
pop
test
cld
sbb
adc
popf
push
mov
std
push
xor
cltd
fidivs
cmp
cli
fnstsw
pop
sarb
adc
mov
ret
adc
pop
add
pop
cltd
jns
fdivrs
pop
fldcw
arpl
push
stos
mov
outsl
rcr
pop
icebp
fs
rorl
loop
dec
stos
push
je
lret
insl
or
mov
jle
in
out
add
aam
fidivs
cld
jp
lahf
xor
rcrb
outsb
lret
jne
into
mov
or
or
ret
jp
mov
mov
nop
dec
into
arpl
das
insl
push
pop
in
jle
in
cltd
iret
or
mov
loop
jae
adc
sbb
xchg
cld
mov
pop
jl
sbb
cmp
or
sbb
repz
fdivl
je
cmp
jecxz
xchg
push
fs
sahf
sub
and
mov
in
in
pop
cmc
inc
jnp
sti
ja
lcall
jmp
int
push
pop
add
jne
cmp
out
imul
dec
cmp
popf
push
lret
push
mov
sahf
loop,pn
out
iret
inc
inc
jbe
push
mov
sub
stos
push
mov
fistl
push
sbb
outsl
lahf
filds
repnz
hlt
aam
adc
mov
mov
jns
mov
iret
sbb
adc
rcrb
sbb
jmp
add
dec
cmp
xor
fs
repz
sbb
addr16
cmp
sahf
sarl
sbb
xor
pushf
ja
push
xchg
push
inc
insb
mov
rorb
sub
mov
scas
pop
testl
test
pop
mov
std
cld
ror
repz
add
jo
insb
stc
or
xchg
add
cmp
mov
mov
and
jb
imul
xchg
pop
call
dec
jmp
aam
dec
mov
mov
icebp
jp
mov
or
sbb
adc
sub
jno
mov
je
push
push
add
jge
adc
movsw
ss
sahf
fisubrl
adc
rolb
fstps
pop
cmp
push
lods
dec
hlt
sbb
sbb
xchg
push
sub
jb
dec
dec
lcall
out
lods
add
pop
cld
sub
adc
in
repnz
inc
cmpsl
dec
push
ljmp
call
enter
adc
xchg
loop
popf
lods
pop
in
insl
dec
dec
and
cltd
jmp
pop
aam
jae
or
stos
push
or
das
lea
push
testb
dec
mov
push
das
add
stos
jns
ljmp
jg
mov
mov
test
sahf
scas
lea
push
out
xchg
icebp
lahf
adc
push
arpl
dec
sbb
jp
nop
pop
sahf
out
scas
pop
dec
ljmp
and
adc
insb
push
insb
ds
cmp
add
cs
push
and
lock
sub
or
jmp
lret
cmpsl
or
bound
and
or
mov
cmp
fiaddl
das
test
loop
push
pop
mov
lcall
pop
fcoms
bnd
bound
movsb
jae
sahf
es
and
or
sub
sub
and
ficompl
sub
je
call
scas
test
lea
shlb
std
xchg
inc
lret
mov
push
sub
mov
insb
or
add
adc
pop
dec
dec
in
mov
push
dec
xchg
cltd
xor
cltd
cmpsb
cli
push
fnstenv
and
shl
mov
mov
cmpsl
dec
inc
je
jl
repz
lret
mov
call
cli
adc
sbb
lods
cs
sbb
leave
or
sbb
dec
lods
addl
add
adc
fnsave
xchg
mov
or
das
stc
xchg
dec
leave
or
add
fs
cmp
out
or
xor
cli
or
xchg
loope
jl
fbld
adcl
push
ficomps
push
dec
jb
pop
sub
cmp
repnz
lahf
popf
nop
les
push
lods
fnstcw
pop
fs
and
sbb
xor
iret
add
pop
cmp
or
xor
mov
pop
scas
mov
scas
xor
outsb
test
jo
pop
test
sti
insb
out
jae
push
in
out
inc
xor
xorb
pop
sahf
xchg
push
jg
aam
mov
jne
call
into
sub
repz
popf
lds
ds
xchg
repnz
sub
sbb
ljmp
orb
inc
lods
cmp
in
and
and
mov
outsb
sbb
sub
push
cmpsb
add
mov
test
xchg
pop
aam
movsb
or
das
sbb
js
inc
xchg
hlt
mov
cmpsl
add
sub
lret
mov
mov
outsb
sub
cmp
or
sub
or
sbb
imul
sub
pop
cmpsb
push
dec
repnz
sti
in
sub
pop
push
push
dec
jmp
jne
nop
xchg
push
mov
mov
aas
jno
js
inc
fsubrl
push
mov
xchg
push
add
pop
ret
lods
mov
mov
sbb
jmp
fsubr
out
push
or
adc
gs
sbb
sbb
pop
or
jmp
fisttps
add
sub
mov
adc
cld
mov
das
pop
mov
aas
les
cld
mov
aam
lods
dec
lea
adcl
cmpsl
fstps
sbb
insb
mov
sti
xlat
sub
fs
outsl
lods
adc
ficoml
cmp
ds
aad
lods
sbb
lea
and
jg
sub
in
roll
test
cld
test
clc
cs
push
pop
shl
adc
js
fsub
cli
jecxz
sarb
setns
pop
mov
clc
rorl
fcomps
sub
dec
mov
add
push
lods
mov
mov
rcrb
ficoml
or
test
lods
lea
lahf
cwtl
int3
cmp
jl
dec
pop
dec
sbb
stos
cli
adc
adc
or
fisttps
dec
mov
or
push
inc
stos
sahf
sub
pop
or
xchg
dec
insl
mov
jp
dec
into
dec
dec
xchg
inc
scas
pop
mov
or
ss
fiaddl
repz
bound
cld
mov
outsb
repz
fnstcw
pop
mov
in
sbb
lea
mov
push
cld
rcl
sub
scas
popf
or
dec
stc
push
arpl
outsb
je
jae
daa
jmp
repnz
paddd
and
adc
out
sbb
cmp
subl
push
jmp
pop
dec
sbb
mov
faddl
inc
mov
and
cmp
mov
push
js
jno
pushf
adc
xchg
add
sub
pop
cmpl
and
jae
adc
inc
std
adc
fadd
sar
jl
sbb
ret
icebp
inc
js
into
aam
daa
lods
mov
leave
test
jle
cmpsl
aad
aam
dec
sub
mov
mov
sti
pushl
adcl
push
mov
or
or
subl
ret
clc
push
cwtl
shrl
js
xchg
sti
repz
filds
pusha
int
loop
fwait
pop
adc
or
daa
int3
jle
or
cwtl
enter
dec
or
sbb
cmpsb
pop
test
mov
ja
xchg
and
ret
add
mov
lcall
inc
ficoml
adc
test
lods
dec
pop
adc
lret
sti
lcall
xchg
sbbl
or
aaa
cmpsl
es
cmp
pop
cmpl
jle
mov
test
mov
cmpsb
cmp
sub
or
ret
mov
adc
jge
cmp
mov
rolb
mov
xchg
xchg
push
mov
pop
gs
adc
cmpsb
cmp
stc
fs
lcall
in
dec
sbb
addr16
jns
mov
repz
mov
loop
insl
js
arpl
dec
sbb
push
fistps
mov
push
das
push
mov
js
lods
test
fsubrl
mov
sbb
push
sahf
stos
dec
mov
fidivrl
add
out
in
out
loopne
loopne
rclb
je
pop
enter
push
pop
or
pop
loopne
sarb
enter
faddl
mov
std
jle
in
mov
faddp
adc
mov
aas
fbld
lahf
fs
sbb
or
push
mov
sbbl
sub
adc
adc
sarb
scas
int
cmpsb
adc
jae
or
inc
rep
mov
test
movsl
scas
or
dec
mov
jnp
sahf
test
ficomps
xlat
cmp
ret
xchg
lcall
pusha
fimull
std
fdivrl
inc
mov
xor
cmp
xchg
in
sub
popf
push
addr16
jnp
mov
dec
adc
pop
rolb
jmp
lret
push
mov
lods
test
jle
sub
jno
lods
jg
cmp
clc
fsts
xchg
sbb
cli
insb
cmp
and
jo
cmp
in
jae
mov
dec
popf
dec
mov
adc
pop
sar
out
xor
shr
pop
push
mov
mov
mov
sti
lret
sbb
fstps
adcl
push
sbb
lods
ret
test
mov
loop
pop
addr16
cmpsb
dec
in
rcl
icebp
lods
scas
popf
jmp
stos
mov
pop
jne
test
cmpsb
adc
push
xor
xchg
sbb
and
cmp
out
xor
xchg
in
ljmp
fsubl
dec
jnp
sahf
and
sahf
xor
xchg
sarl
xchg
sahf
add
leave
hlt
dec
sbbb
lar
jl
out
pop
inc
fwait
cmp
adc
int
lret
cwtl
lods
pop
pop
mov
or
push
add
mov
dec
insb
test
lods
mov
and
inc
dec
jbe
fisttps
rcl
in
adc
xor
mov
dec
shrl
mov
sbb
sbb
lods
adc
ljmp
push
ret
pop
orb
inc
or
into
jecxz
jnp
xchg
cmp
jle
das
or
test
hlt
iret
ud2
sbb
shrb
or
dec
fbstp
jge
jnp
addr16
addr16
rcrl
pop
sbbl
fadds
mov
ja
xchg
xor
subb
jle
cmp
das
mov
and
push
push
outsl
ja
out
outsb
add
lret
sbb
fdivrl
jnp
mov
icebp
cltd
mov
outsl
push
lods
sub
cli
and
in
repz
xchg
les
adc
and
out
push
test
inc
pop
inc
and
ret
hlt
pop
sbb
add
pop
out
and
xchg
cli
xor
fs
out
scas
or
jecxz
addr16
cmp
test
jnp
sahf
jg
push
andl
mov
mov
cld
cmpsb
ss
dec
cmp
test
pop
mov
inc
sarb
test
lea
push
test
test
call
mov
jns
mov
fistpl
scas
and
dec
das
or
push
jg
lcall
aam
cmp
popa
add
mov
rcrb
addr16
adc
out
insb
adc
leave
lcall
pop
fcoml
jl
cltd
dec
mov
mov
cli
jns
dec
jmp
insb
js
adc
sbb
jle
jle
in
jmp
in
outsl
sbb
push
and
sbb
adc
mov
popf
pop
jecxz
cmpsb
out
jl
lret
lock
sarl
aad
lods
cld
lahf
repnz
mov
xor
cmp
or
fstl
mov
aad
pop
pop
cwtl
cmp
cmpsb
test
push
dec
adc
cmp
sbb
and
in
xlat
rol
mov
cwtl
test
add
adc
stos
mov
push
ds
pusha
mov
dec
mov
mov
mov
and
bound
add
lds
inc
cltd
mov
mov
in
cmc
ljmp
pop
in
dec
adc
fimuls
out
xchg
fstps
lret
cli
scas
jne
test
in
add
icebp
cltd
in
ljmp
xchg
sbb
cwtl
inc
or
mov
mov
ds
and
pusha
or
pop
scas
mov
xchg
cmp
test
xlat
pop
outsb
sti
test
sub
xor
aam
sub
pop
xchg
scas
pop
or
lea
cmp
es
daa
pop
xor
call
dec
jns
mov
loop
add
ljmp
fidivrl
test
cs
jl
push
fmul
and
push
ljmp
mov
pop
repnz
insb
aam
adc
std
ljmp
push
lock
mov
cmpsb
insl
scas
lcall
std
inc
push
dec
mov
into
cs
push
and
lahf
icebp
push
xabort
fcompl
push
inc
scas
das
adc
xchg
repnz
sbb
inc
dec
ficompl
xchg
lock
std
repz
insl
xchg
mov
mov
or
xlat
imul
repnz
fwait
cld
hlt
out
addr16
inc
cmpsb
ss
test
popf
arpl
test
lret
repnz
inc
adc
das
in
loop
pop
adc
jnp
insl
int3
lea
mov
push
sbb
mov
pop
inc
sbb
add
adc
fstps
mov
xchg
sub
and
or
insb
imul
push
cmpsb
ss
es
ret
jle
inc
mov
test
gs
xor
fisttpll
push
test
addr16
jle
pop
out
add
and
pop
mov
mov
pop
xchg
and
ret
xchg
xchg
test
jnp
fisttpll
sub
sarb
in
mov
mov
scas
sub
jo
or
cmp
inc
fdivl
bnd
cmpsb
jb
mov
je
fcompl
mov
push
push
sahf
push
pop
repz
negl
and
and
inc
pop
lahf
rolb
loop
cmpsb
dec
rorb
ror
xchg
sub
cwtl
test
les
dec
xchg
leave
push
test
outsl
push
ja
je
jl
or
dec
xor
mov
push
repnz
cli
pop
cmp
push
in
adc
xchg
in
or
lea
lods
test
add
sub
gs
xchg
rsm
inc
push
insb
push
stos
insb
push
nop
in
ss
in
out
adc
sub
inc
test
jae
xchg
loopne
cltd
xchg
repnz
pushf
ffree
imulb
hlt
adc
and
jecxz
int3
cmpsl
and
mov
jo
js
sbb
dec
mov
loop
in
add
cmp
das
and
add
sbb
cmc
adc
in
lret
mov
mov
sbb
fisubrl
adc
add
jmp
repnz
lea
das
imul
insb
fcomps
or
sub
jbe
dec
jno
cmpb
das
test
out
fdivr
pop
dec
sti
arpl
std
inc
js
int
push
sub
mov
nop
pop
insb
ljmp
and
mov
sub
leave
dec
dec
jb
ja
dec
fdivrs
pop
test
in
adcb
jecxz
lret
adc
sahf
xor
test
scas
sub
fsubrl
xchg
popa
lea
cmpsl
push
pushf
dec
adcb
or
pop
or
dec
or
out
xor
sub
mov
adc
push
ljmp
mov
push
xor
xchg
aaa
mov
and
inc
adc
push
cld
sbb
cld
pop
testb
ja
pop
in
push
popf
jo
insl
jle
xchg
inc
je
push
jae
mov
add
mov
sub
cmp
adc
jle
sbbl
insl
les
xchg
loope
jle
cmp
dec
stc
or
aad
lahf
xchg
jbe
lea
mov
sbb
ja
or
aaa
xor
cltd
push
jns
dec
jmp
xchg
jae
xchg
add
cmp
out
sub
mov
cmp
call
cmpl
and
out
rcrb
or
cmpsb
push
leave
xchg
inc
push
pusha
sti
sbb
and
cli
lahf
stc
sti
dec
xchg
leave
cltd
dec
cmpb
in
sub
xor
jle
jp
jge
lea
test
pop
push
scas
push
jne
mov
jg
mov
jb
iret
mov
lods
mov
push
test
cltd
cvttps2pi
xor
mov
call
or
movlps
insl
hlt
les
test
pop
ds
xor
rol
shr
cwtl
dec
js
enter
sub
inc
dec
dec
mov
and
jae
fsubrs
cli
out
nop
ljmp
loop
jg
jae
xchg
js
js
dec
push
sahf
jl
mov
out
mov
popf
cmpsl
data16
adc
jle
jle
adc
outsl
int
je
lea
dec
xor
xchg
hlt
arpl
dec
into
cmpsl
push
mov
jecxz
or
stos
adc
icebp
jecxz
mov
push
adc
in
loop
loopne
cli
push
aam
mov
or
stc
inc
adc
pop
push
daa
push
push
out
cltd
pop
add
mov
orb
add
sbbl
loope
out
mov
repnz
in
mov
gs
and
lods
dec
jle
jle
jle
jle
inc
inc
cli
arpl
cmp
xacquire
out
jge
or
jmp
rcrl
loop
jo
leave
cwtl
jo
pop
sbb
arpl
pop
cmp
and
xor
out
sub
dec
mull
aam
inc
adc
inc
orl
adc
ret
and
mov
arpl
cmp
fildll
jecxz
xchg
pop
fimull
cmc
imul
mov
pop
push
lods
js
iret
scas
xor
leave
push
mov
xchg
xorl
jnp
test
mov
in
mov
lcall
dec
adc
sbb
inc
add
adc
das
pop
xchg
ja
mov
sub
cmp
mov
add
mov
ljmp
adc
cmp
lods
insb
lea
pop
pop
ljmp
out
cmp
adc
push
push
jb
sub
pop
add
xchg
pop
sbb
clc
mov
insl
push
pop
jbe
clc
popf
imul
mov
loop
fmull
xchg
push
push
dec
outsb
sbb
imul
clc
dec
cmp
push
aaa
push
fsubp
rcl
and
pop
add
out
inc
aam
push
fs
cld
cmc
ja
fcomps
adc
out
cs
push
add
jnp
mov
cld
pop
out
js
cmp
xor
repnz
cmpsb
adc
addr16
cmpsl
jl
and
jp
or
mov
insb
or
pushf
loopne
or
xlat
pop
insl
fsincos
out
cmp
push
fists
push
inc
ljmp
pop
lea
test
ja
lea
or
leave
int
paddusw
jle
inc
movsl
call
in
xchg
inc
add
cli
or
xchg
flds
cmp
mov
or
sti
mov
cs
pop
and
ret
mov
pop
dec
fmuls
outsl
cld
push
jge
xchg
inc
aam
mov
mov
jle
dec
orl
les
scas
xor
mov
dec
add
cmp
dec
add
jg
lcall
xchg
movsl
cmpsl
push
fimuls
pop
or
mov
add
xchg
fs
push
sbb
insl
popa
cs
jge
xchg
int3
or
loop
mov
push
stc
adc
fnstenv
in
dec
jge
push
arpl
dec
pop
or
sub
subb
test
sub
fidivrl
pop
jbe
push
inc
arpl
cld
add
push
mov
mov
cli
add
pop
leave
mov
or
pop
and
push
das
invd
out
lahf
or
push
or
mov
mov
push
adc
inc
enter
push
sbb
xchg
and
inc
repnz
test
push
jp
xor
push
fimull
je
adc
imul
mov
adc
gs
scas
adc
add
es
testl
lcall
iret
pop
das
xor
jecxz
insb
aas
aam
cld
adc
inc
mov
outsb
test
jg
dec
xor
in
fwait
dec
dec
lods
mov
pop
test
movsb
jecxz
xchg
outsb
mov
or
adc
and
loop
push
pop
xor
fs
add
mov
cs
fwait
ljmp
scas
add
push
popa
adc
push
fucomi
and
insb
ret
or
inc
int
push
das
fstp
adc
push
sub
jg
out
rorb
gs
out
cmp
and
loopne
shrb
xchg
vmread
or
shlb
ret
xchg
push
sahf
lods
sti
aas
mov
add
iret
mov
bnd
xchg
jae
sahf
inc
mov
push
lret
mov
outsl
mov
shll
test
pop
fisubrl
insl
xchg
xchg
jmp
jl
int
or
outsb
call
fisubl
cmpsb
mov
fsub
ljmpw
lea
ret
insl
mov
ss
add
mov
adc
je
bound
inc
lods
xchg
call
xor
mov
ja
dec
dec
in
and
or
push
rcrb
mov
or
push
sahf
clc
pop
jp
jnp
mov
mov
sbb
sbb
cmp
ljmp
fisttps
js
xor
xchg
mov
jbe
jo
ret
insb
clc
pop
imul
shlb
push
bound
ljmp
inc
fucomp
adc
xor
or
pop
mov
mov
xchg
aam
sub
aad
leave
scas
pop
gs
dec
cwtl
sar
adc
out
rorb
dec
or
loop
ss
mov
lahf
or
xor
cwtl
jge
cmp
das
pop
lahf
push
in
adc
ds
outsb
pushf
dec
pusha
sbb
push
popf
jae
jmp
in
fucomp
xchg
leave
sbb
addl
popf
shrl
lret
dec
xor
mov
es
or
or
sub
and
stos
or
test
shrb
stos
and
in
cmpsl
push
cwtl
mov
fdivl
adc
das
inc
xor
ds
dec
mov
mov
pop
ljmp
fisubrl
jb
ljmp
cltd
dec
jl
add
mov
int3
in
sahf
ljmp
jl
xchg
jmp
in
fnstenv
pop
inc
sbb
mov
mov
mov
imul
sub
sbb
mov
inc
push
inc
sub
jecxz
or
mov
das
cmp
fdivrl
cs
cld
cmp
lea
mov
sub
out
cmp
pop
xor
push
adc
std
sbb
hlt
imul
bound
jle
jne
into
fildll
inc
xor
adc
outsb
shr
cmp
adc
pop
sbb
inc
mov
lods
jp
mov
dec
roll
aad
scas
mov
aam
sub
mov
faddl
dec
out
lahf
dec
pop
jnp
xchg
sub
mov
dec
js
repz
adc
sbb
popa
sbb
scas
add
jne
adc
adcl
mov
sub
pop
add
mov
hlt
jnp
insl
dec
inc
lahf
jecxz
pop
pusha
or
sti
add
lods
xchg
nop
adc
mov
sub
sbb
jge
mov
mov
dec
mov
pop
mov
cmpsb
add
xchg
test
outsb
testb
mov
cmpl
jecxz
sub
or
xor
pop
repnz
testb
fisubrl
cmpsb
jge
out
and
insl
push
xor
push
cmp
fildl
jle
pop
popf
or
dec
fmuls
clc
jnp
mov
mov
adcl
xchg
rorb
sub
fstps
cmpsl
adc
mov
xchg
add
test
pusha
cwtl
mov
add
or
leave
mov
cltd
cmp
lods
mov
sbb
xor
inc
pop
scas
jbe
mov
psadbw
fs
push
adc
jbe
popl
test
pop
mov
cmc
mov
add
fs
sbb
and
les
in
sahf
movsb
mov
cmpsb
mov
sbb
dec
inc
lcall
dec
lcall
roll
jg
scas
mov
ss
cmpl
push
jecxz
rcrl
icebp
jle
ficoms
mov
or
add
or
mov
inc
pusha
mov
or
adc
lea
in
mov
cmp
stos
and
inc
cmp
xchg
nop
sbbl
or
adc
xchg
lcall
or
sar
das
shrb
or
nop
pop
mov
pop
cmpl
inc
frstor
jns
mov
lahf
xor
loope
repz
loop
push
les
jb
mov
adc
mov
xor
scas
dec
das
jo
sahf
pop
sbb
or
scas
iret
ret
mov
in
adc
insl
leave
mov
jb
adc
in
test
dec
jge
add
out
outsb
sbbl
test
add
pop
movsb
cmpsl
lods
or
iret
lea
jno
add
clts
leave
jo
mov
cmp
lahf
in
or
ret
jge
jnp
mov
jmp
outsb
xchg
sub
pop
xchg
or
adc
lods
dec
xorl
call
cmp
mov
and
mov
jne
loop
mov
jg
mov
push
or
jmp
bound
pop
sub
popf
dec
cltd
ret
imul
leave
stos
sbb
or
pop
sub
dec
test
fmull
lods
lfs
cmpsb
in
nop
lods
jl
mov
dec
addr16
pop
ret
mov
insl
sbb
outsb
mov
cwtl
adcb
loop
mov
jo
dec
mov
pop
adc
pop
sub
loop
pop
or
inc
dec
mov
mov
mov
cmpsb
sahf
inc
push
sbb
popa
icebp
push
or
push
mov
xchg
into
push
jl
mov
aas
cmpsb
and
aad
or
dec
out
adc
mov
stc
jle
arpl
rcl
repz
mov
sbb
fcompl
xor
cltd
jle
jns
imul
jecxz
aas
mov
inc
fwait
push
push
xchg
jmp
xor
cwtl
mov
jp
outsl
pop
int3
or
leave
stos
repz
cwtl
jmp
jge
repz
js
repz
xchg
pop
mov
jmp
imul
push
movsb
inc
sbb
mov
lahf
dec
lcall
ljmp
ds
repnz
mov
sbb
mov
mov
push
repnz
leave
or
xchg
add
xchg
sti
dec
pmaxub
push
ljmp
gs
sbb
push
fadd
repnz
dec
adc
mov
dec
lea
jo
adc
cltd
aaa
test
imul
adc
mov
lea
cmpsl
pop
mov
xor
scas
mov
jno
sbb
jb
jle
rcl
mov
js
aam
mov
mov
push
in
mov
adc
push
mov
push
sar
gs
jg
xchg
jge
sbbb
and
mull
jge
leave
adc
insb
sti
jne
iret
adc
scas
stos
lds
nop
jnp
test
mov
pop
adc
jns
leave
sub
lahf
gs
sub
mov
or
jno
fstl
push
push
iret
lret
jae
clc
cld
fmuls
mov
dec
push
push
pop
sti
pop
adc
lcall
es
mov
les
and
lahf
fimull
in
lea
jmp
or
iret
mov
jge
mov
das
bnd
adc
mov
cltd
sub
mov
pushf
xchg
sbb
mov
imul
mov
pop
andb
sub
push
sub
dec
cmp
xchg
lea
pop
insl
cld
das
lods
push
cld
jns
ss
lods
cwtl
mov
inc
fidivrl
fstpt
out
and
xor
dec
lods
inc
rcrb
pop
cmp
push
lret
adc
mov
push
cld
les
fsts
or
cmp
xchg
lds
stos
out
popf
out
push
ss
add
ljmp
mov
lods
test
or
popf
stos
mov
inc
lods
fstps
or
mov
mov
cmpsb
out
inc
or
sahf
jl
aam
cmpsl
xchg
xor
icebp
pop
and
pop
mov
gs
push
sub
int3
add
dec
and
sub
inc
and
mov
decb
test
sub
mov
or
dec
or
cmp
mov
mov
push
sbb
pop
inc
ljmp
cmc
je
push
cld
leave
lahf
sub
sub
fnstsw
xchg
lcall
cmp
dec
dec
or
fadds
fsubrl
inc
mov
xchg
sahf
imul
and
loope
adc
sti
repnz
ud0
enter
xor
cwtl
jnp
lret
sub
cmpsb
es
movlps
or
test
cltd
inc
mov
push
or
adc
lret
pop
mov
jno
fiadds
jle
das
jae
adc
cmp
jecxz
les
scas
ret
dec
cmp
sbb
orl
inc
sub
dec
jl
rclb
mov
lea
into
inc
adc
fmull
incb
ljmp
scas
repz
mov
insb
push
fldz
dec
mov
adc
int
in
add
jge
and
adc
fs
pop
pop
ret
dec
ss
jmp
enter
subb
in
or
jmp
subps
jbe
adc
dec
les
leave
iret
ljmp
in
mov
movsl
out
int3
lahf
mov
push
dec
mov
lcall
cs
test
repnz
xchg
les
out
xchg
addl
dec
or
repz
push
ficoml
add
test
dec
jnp
xchg
rcr
pop
clc
cmpsb
pusha
inc
loop
imul
in
pop
pushf
jle
jle
in
adc
mov
adc
ja
shll
pushf
or
addl
data16
push
pop
lods
push
stos
adc
rorl
in
out
fs
aas
mov
pop
dec
jl
addr16
leave
jo
repnz
push
scas
pop
mov
pop
xchg
dec
das
pop
dec
dec
dec
sub
dec
dec
mov
inc
mov
and
int
pop
or
sub
dec
pusha
sbb
jne
jns
dec
add
dec
outsb
lcall
lcall
cld
dec
ljmp
insb
or
iret
or
into
leave
ja
ds
lods
ret
pop
dec
gs
cmp
push
gs
dec
pop
inc
mov
push
int
sbb
imul
dec
leave
mov
ret
mov
push
enter
jnp
sahf
ret
ret
insl
dec
sub
sti
xchg
outsb
xor
ljmp
leave
outsl
cmp
adc
jmp
rcrb
jmp
push
outsb
cmpb
adc
rcrl
fbstp
mov
lcall
mov
mov
dec
jmp
xchg
pop
xor
lock
xchg
add
cmp
jg
iret
das
or
dec
outsl
mov
push
jl
movsb
or
pop
daa
fisubrl
outsl
in
adc
sbb
xchg
mov
dec
mov
cmp
in
ljmp
cmp
jge
adc
sub
or
cmp
cmp
ja
repnz
mov
or
lods
insb
jne
sub
and
jge
fidivrl
sbb
scas
pop
into
scas
xchg
cmp
test
add
scas
fs
mov
dec
inc
or
ret
xchg
jo
popf
jb
push
cmpl
dec
gs
mov
push
fsubp
test
push
mov
ljmp
pop
mov
inc
imul
das
jle
jg
xchg
daa
pop
mov
aam
xchg
or
bound
je
leave
or
repnz
in
std
mov
fnstenv
dec
jg
ds
bound
dec
cmpsb
jecxz
sahf
cmp
mov
adc
fs
stc
ror
jns
jns
das
in
call
dec
fwait
nop
xchg
lret
fildll
sbb
push
insl
iret
push
xchg
testl
js
pop
std
lods
mov
fcoms
and
pop
adc
scas
mov
mov
push
dec
jnp
mov
ljmp
xchg
fisubl
insl
adcb
lret
adcb
rorb
push
pop
std
cs
jg
mov
push
dec
and
xor
stos
faddl
mov
xor
pushf
sbb
loope
repnz
cld
mov
lahf
loopne
adc
test
ljmp
push
dec
mov
stos
insb
jae
mov
mov
mov
sub
subb
adc
or
adc
xchg
ficompl
repz
adc
test
movsl
test
cltd
not
pause
jecxz
lods
mov
arpl
or
mov
scas
jl
fs
mov
test
call
jne
add
and
xchg
jg
sbb
add
cltd
xchg
test
fistpl
mov
shll
push
mov
cmpsb
cmp
jae
sbb
mov
xor
sbb
sub
cmp
and
stc
jp
xchg
nop
aaa
iret
mov
ss
gs
cltd
mov
pop
fdivr
fimull
sub
sbb
mov
aam
loopne
adc
pop
lcall
dec
popf
mov
and
jns
push
lahf
jecxz
loop
faddl
add
xlat
push
lret
out
xchg
dec
mov
pop
test
pop
lds
sbb
mov
sbb
mov
add
mov
aam
dec
lea
test
orb
jae
cmpsb
rcrb
jnp
outsb
jecxz
arpl
pop
cli
push
mov
sub
lcall
push
insl
ja
clc
aaa
mov
shr
andb
or
fstl
ljmp
int3
in
rcrl
dec
jp
push
sub
cltd
cmp
adc
cmpsb
fisubrs
dec
hlt
or
test
insl
mov
jge
xor
mov
fidivrl
cmp
push
ret
fildl
inc
fs
or
jle
and
add
leave
xchg
aad
loop
scas
popf
xor
jg
jae
xor
subb
cmp
clc
mov
or
loop
push
jl
pop
push
mov
xchg
push
jle
xchg
pop
cmpsl
xchg
sub
xchg
sahf
mov
push
jmp
rcrb
cmp
jbe
gs
sbb
lods
inc
fidivrs
sbb
add
lods
inc
xor
into
mov
or
popf
dec
scas
mov
aas
cmp
mov
inc
dec
dec
fs
stc
xchg
pop
leave
lods
ljmp
outsb
mov
sahf
ljmp
cmc
scas
adc
and
mov
out
scas
push
or
das
lods
mov
leave
cmp
outsb
dec
fs
shlb
sbb
jle
pusha
aam
mov
fs
mov
or
rclb
addl
inc
mov
int3
mov
mov
adc
mov
mov
outsb
fdivr
jns
xor
aam
lret
push
cmpsl
ljmp
mov
mov
jnp
pop
je
inc
outsb
cmp
push
inc
push
popf
jecxz
jno
jmp
jle
mov
jne
lods
subb
pop
imul
sarb
pop
jae
repz
dec
xor
jnp
sub
dec
and
shrb
mov
popl
sbb
inc
add
or
es
jae
jecxz
roll
mov
jp
sbb
mov
repnz
shrl
into
shll
iret
nop
pop
add
das
dec
fwait
or
and
inc
mov
dec
jecxz
xor
lods
add
mov
lahf
shrl
jae
int3
dec
pushf
cmpsb
xchg
cmp
lea
sub
pop
cmp
sbb
rorl
addr16
jp
or
pop
jbe
push
aam
lea
loope
jg
rcrl
adc
xchg
stos
dec
mov
mov
sbb
aas
lret
jle
cmp
sahf
cli
push
in
jb
mov
rcrl
bnd
int
mov
or
and
mov
sub
push
push
leave
pop
lret
adc
orl
aaa
lods
int
xchg
nop
cmpsb
adc
stos
pop
rcr
inc
cli
dec
fidivl
sub
sub
and
push
mov
inc
loope
push
pop
inc
adcl
xchg
int
dec
gs
jl
adc
jle
jle
jle
outsl
mov
mov
scas
loope
dec
adc
ljmp
jl
imul
and
mov
ja
loop
das
bound
cmp
rcrb
adc
out
xchg
cmp
cli
lea
outsb
outsl
push
mov
sbb
std
cmp
sbb
cmp
ret
inc
stos
adc
jl
sub
mov
jnp
scas
jmp
sahf
cltd
push
lret
jb
mov
fimull
sahf
jbe
push
sbb
aad
loope
mov
mov
push
push
lods
cs
cmp
or
pop
cmp
dec
jge
fcmove
fsubs
dec
fisubs
call
es
or
lret
andl
xchg
scas
sbb
adc
inc
jl
std
sbb
aam
clc
jbe
pop
aam
mov
sti
out
out
add
xchg
cmp
sbb
jne
stc
xchg
xorb
ss
testl
dec
ja
mov
or
loop
sub
iret
cmp
lea
fdivr
lds
dec
aas
xchg
scas
pop
mov
mov
mov
or
sbb
std
and
int
ja
clc
cmc
fldl
cld
cmp
sti
and
mov
jg
aas
insl
jp
inc
mov
xchg
adc
xchg
fistpl
dec
add
sub
jae
xchg
scas
pushf
popf
cmpsl
add
test
dec
push
mov
sbb
push
stc
push
fcmovnu
call
add
mov
aad
push
lods
lret
test
jne
jle
movsl
decb
mov
sub
fisubrl
repz
ret
adc
ficompl
lea
adc
arpl
lret
mov
clc
aam
adc
fisttpl
stos
in
data16
pop
and
and
fimull
lcall
scas
pop
out
jg
jnp
xchg
push
or
pop
pop
fsubp
mov
in
lret
shlb
loope
push
or
scas
mov
cli
dec
fs
aam
lods
jbe
clc
sbb
fucomip
jmp
push
mov
or
popa
jge
hlt
adc
shll
test
mov
jmp
mov
lea
lcall
lcall
adc
xchg
mov
inc
sahf
orl
sub
fistpl
sahf
rorb
pop
out
jp
ja
dec
lea
jp
cmpsb
out
addl
jle
lcall
inc
mov
fisubrl
push
pop
push
mov
xchg
sub
or
imul
pop
inc
lcall
fcomps
push
in
sbbb
adc
shrd
in
cmpb
lcall
mov
scas
in
pop
shlb
adc
push
or
jnp
sahf
fld
jae
adc
in
ud2
ljmp
add
cmc
fs
cmp
xchg
xchg
sub
lahf
cmp
mov
fcmovu
je
mov
fdivr
lods
fsts
jae
cmpsb
sti
cwtl
dec
mov
ret
imul
fwait
dec
popf
je
jl
cmp
adc
lea
jns
xchg
sahf
fwait
rcrb
or
mov
add
insb
sbb
std
lods
jbe
outsl
cltd
push
lods
jbe
pop
movl
jae
or
push
dec
pop
dec
ds
xchg
dec
push
cmpsb
ss
scas
jns
popl
jnp
cmpsb
cmp
std
jae
stc
mov
dec
dec
mov
jmp
mov
inc
lods
pop
fcompl
pop
xchg
jne
imul
sti
lods
pop
sub
jg
cmpsl
dec
jo
adc
inc
popa
add
fsubr
incl
mov
inc
push
jmp
scas
lods
push
mov
aas
fwait
jle
sbb
xchg
jecxz
fbld
xor
jnp
addr16
sahf
pusha
leave
push
pop
sbb
leave
push
mov
add
scas
inc
push
xchg
dec
je
jl
or
dec
loope
pop
int
adc
mov
pop
cmp
fmull
ja
pop
sbb
push
mov
mov
repnz
cld
jl
mov
pusha
adc
in
outsb
clc
cmp
fwait
jp
mov
push
test
push
push
test
mov
fidivrs
cli
mov
sarb
andb
or
out
in
dec
push
mov
adc
mov
jp
sar
cld
cli
mov
jne
mul
push
loopne
shlb
loop
ljmp
jle
jnp
jnp
addr16
mov
dec
divl
sbb
shll
push
sub
imul
cmp
js
js
cwtl
in
or
sub
mov
sub
or
xlat
out
sti
jmp
clc
addl
pusha
in
dec
pop
inc
das
rcr
in
sub
xchg
and
int3
lcall
popf
xor
pop
iret
sbb
loope
lahf
mov
cmpsb
push
data16
push
in
lcall
dec
mov
push
fwait
mov
jne
or
out
mov
mov
call
cli
mov
ljmp
das
scas
pop
dec
and
les
stos
imul
adc
fs
adcb
scas
sbb
bnd
ffree
pop
jp
xchg
add
aas
cmpsl
jg
or
push
adc
or
adc
sub
mov
dec
orl
pop
lcall
cmpsl
rclb
mov
xchg
cld
mov
adc
jecxz
ja
lods
sub
or
ljmp
push
inc
and
ljmp
das
push
andl
pop
inc
push
push
xor
pop
int3
sti
in
call
push
mov
lock
add
ficoml
mov
and
fisubrs
jge
sbb
push
dec
or
cld
push
dec
in
mov
out
pop
dec
daa
dec
sbb
sbb
cmp
push
jle
add
fcoml
les
lods
bound
mov
dec
adc
adc
sub
add
mov
jnp
sahf
pusha
cs
cmp
adcl
push
leave
in
xchg
adc
or
lcall
rcrb
push
ja
dec
lret
add
push
xor
loope
rcll
lret
lods
jg
jae
addr16
mov
test
in
out
push
mov
xor
pop
mov
cltd
pop
xchg
jmp
shrb
inc
loop
test
push
pop
mov
fisubrl
adc
orb
popf
bound
aad
mov
out
sub
inc
test
push
adc
or
sbbl
add
jbe
adc
mov
sbb
xor
sub
addr16
or
mov
xchg
rcr
rcr
insb
cmp
lods
cmp
ds
push
aaa
push
xchg
fs
sbb
bound
cld
lods
lods
les
dec
xor
call
jns
add
ss
inc
jge
sub
inc
cmpsl
ja
xor
dec
pop
adc
dec
test
add
xchg
das
bnd
push
dec
xchg
flds
pop
mov
lret
movl
test
add
les
jmp
ss
push
sub
xchg
mov
pop
adc
cmp
fildll
adc
mov
sbb
dec
bound
int
loope
sbb
adc
inc
push
fwait
ffreep
in
mov
sub
popf
cmp
ficoms
inc
jnp
jnp
ss
mov
dec
lods
adc
sti
dec
adc
dec
mov
cmpsl
adc
test
xchg
les
imul
sub
mov
iret
mov
outsb
dec
cmpsl
adc
mov
imul
add
pop
sbb
fs
sahf
in
sbb
outsl
jne
ds
sti
sbb
sbb
mov
inc
repnz
into
in
sub
rolb
add
pusha
pop
push
scas
mov
into
lock
or
push
cmp
jg
inc
adc
lods
push
in
push
pop
outsb
cltd
push
imul
fisttps
jg
jnp
mov
ja
push
jne
mov
mov
mov
aam
loop
fcmovnbe
mov
sti
cli
add
fmul
fnstcw
bnd
mov
out
or
dec
outsb
mov
lea
lods
ret
scas
and
test
mov
add
pop
outsb
jp
rorl
jl
pushf
psubsw
les
dec
cmpsb
cltd
sbb
push
jns
pop
leave
cld
cmpl
sbb
andl
cltd
loop
or
adc
or
or
jne
scas
popf
dec
dec
mov
test
dec
mov
xor
xchg
lods
nop
loope
rorl
jo
adc
lods
lea
jge
out
addl
push
cwtl
mov
leave
sbb
daa
lods
xor
push
pop
adc
cltd
ljmp
xchg
mov
adc
xor
push
mov
mov
scas
cmp
adc
ljmp
aam
in
sbb
xchg
ror
push
push
es
sarl
inc
outsb
cmp
out
mov
dec
dec
std
outsb
cld
outsb
jle
out
sbb
dec
rcrb
fnstcw
xchg
jb
ljmp
pushf
sahf
pop
sbb
add
cltd
xchg
cmp
in
test
cmp
ret
and
mov
jmp
adc
add
jg
lcall
pop
fstpl
scas
mov
push
cmp
pop
or
jmp
cld
xchg
push
aam
fcoml
pushf
mov
lods
into
outsb
test
jle
jle
jne
mov
jns
and
pop
cltd
outsb
or
cmp
and
jae
cmpl
les
cmpsb
daa
jecxz
and
and
cwtl
xor
mov
pop
xchg
in
lods
sub
dec
stos
jle
les
les
dec
inc
adc
sbb
jb
sub
sbb
push
or
add
mov
push
mov
jne
repnz
fisubrl
xchg
pop
adc
in
ja
int
fcompl
sub
xchg
test
pop
add
or
adc
into
aad
dec
xchg
iret
inc
enter
or
lods
mov
into
sti
ret
rclb
stc
xchg
mov
jl
mov
addr16
dec
xchg
enter
inc
cwtl
jmp
add
inc
inc
ljmp
or
sahf
lods
data16
int
ljmp
add
pop
frndint
dec
sbb
enter
jle
in
push
ret
mov
xorl
int3
repz
push
sbb
or
jle
jge
dec
dec
cmpsb
sbbb
dec
nop
dec
mov
push
insb
or
repnz
push
ljmp
ret
cmp
push
enter
pop
xor
loope
dec
lods
scas
dec
fidivs
cltd
cs
shll
cmp
int3
pusha
adc
or
outsl
or
push
fmull
jge
out
and
rorb
or
sub
or
jg
mov
mov
cmp
push
pop
mov
mov
sbb
iret
aam
dec
mov
or
mov
mov
push
mov
sti
lahf
or
or
jl
dec
loope
lea
cwtl
out
gs
push
stos
dec
enter
sti
or
jns
jle
sub
adc
cmpb
add
ret
mov
sbb
aam
mov
pop
repnz
test
mov
loope
cwtl
push
pop
mov
and
jecxz
dec
xor
leave
std
or
jo
mov
adc
dec
push
mov
cltd
rorb
jns
and
cmp
lcall
push
shl
sub
and
pop
clc
inc
jo
sbb
jle
xchg
inc
xchg
dec
ljmp
mov
sub
mov
inc
cmp
je
sub
mov
imul
and
out
pop
iret
std
jle
dec
add
je
or
jmp
imul
xor
lods
outsb
or
jecxz
mov
inc
mov
xchg
push
dec
subb
mov
roll
dec
push
repz
adc
mov
cmpsb
add
loope,pt
push
mov
scas
scas
pusha
in
sub
in
je
ja
add
out
add
pop
enter
out
insl
sahf
adc
mov
ss
cwtl
fsts
xor
cli
popf
xor
imul
cwtl
sti
scas
adc
cmc
sarb
sbb
test
ljmp
inc
insl
adc
scas
das
data16
in
insl
sub
sub
push
stos
mov
jl
or
jge
jmp
pop
iret
add
xor
cld
aam
or
pop
cli
push
jne
roll
fisubrl
jmp
jge
rcrl
out
mov
add
nop
sahf
outsb
lahf
es
stos
shll
pop
xor
dec
adc
out
movsb
xor
setb
repnz
adc
adcl
add
lcall
outsb
push
push
lods
scas
loop
push
pop
mov
cmpsl
ficoms
jmp
enter
cmp
add
std
add
insb
sbbb
cmp
dec
ds
pop
aas
sub
jl
fs
ja
mov
repnz
outsb
mov
pop
or
push
lods
pusha
sti
push
pop
inc
sbb
mov
mov
loope
jnp
shlb
sbb
push
in
fsts
jmp
outsb
or
rorb
test
das
or
inc
sub
std
xchg
jne
js
cmc
cmpl
pop
mov
stc
xor
incb
adc
psllq
insl
fmuls
xchg
rcrb
arpl
pop
test
and
push
leave
mov
je
add
sub
scas
int3
scas
into
pop
sub
das
dec
cmp
fisttpl
repz
mov
aad
dec
outsb
sahf
repnz
sbb
push
and
mov
inc
cmp
out
sub
je
repz
jmp
cli
fs
pop
imul
inc
sti
and
mov
jle
cmp
fists
jno
int
outsl
dec
cmp
rcl
xchg
mov
hlt
ficompl
testb
addr16
mov
inc
or
ja
jp
jl
jle
enter
dec
scas
in
pop
das
sbb
mov
dec
js
pop
sarb
pushf
shlb
adc
pop
xor
lods
push
lcall
cmp
mov
xchg
std
inc
sbb
mov
cltd
mov
push
adc
xor
xor
xlat
stos
sti
xchg
inc
cmp
mov
add
sbbl
fdivrs
add
repnz
sub
aad
call
fcmovb
scas
pop
clc
or
sbb
mov
outsl
cmp
scas
pop
dec
mov
mov
and
or
cld
scas
xor
aas
mov
push
jge
push
jmp
xor
sahf
xchg
xchg
jp
andl
xor
gs
insl
jecxz
pop
gs
insl
or
std
pop
sbb
mov
mov
ret
dec
std
repnz
xor
cs
dec
inc
ret
xchg
jl
lcall
sub
lret
mov
sbb
cmp
mov
push
cmp
test
fistpll
jl
call
or
dec
test
pushf
add
cltd
addr16
mov
sahf
ja
adc
adc
sub
lods
add
mov
rcrb
aaa
xchg
cmpsb
leave
ds
sbb
fsubl
and
shrb
addr16
sahf
pushf
dec
call
sub
lcall
test
jecxz
lods
sub
int3
out
xchg
mov
cwtl
iret
leave
mov
fldcw
mov
lcall
in
popa
sti
sub
sahf
jns
dec
into
int3
cs
pop
or
lea
jb
fnstenv
push
jl
and
add
pop
dec
cmp
pop
lcall
cmp
jno
loop
jno
or
outsl
nop
sar
ljmp
in
fisubrl
inc
adc
mov
jg
out
mov
push
stc
stc
add
push
not
shld
cmc
not
push
rcr
jmp
lea
ja
sar
sub
clc
cmc
add
inc
add
or
rol
mov
rcr
mov
push
repnz
push
call
lret
dec
ret
nop
into
mov
decl
xchg
push
or
leave
aaa
les
imul
sub
jne
jbe
fnstsw
add
mov
mov
sub
lret
data16
cmp
loopne
loopne,pt
fxch
cwtl
stc
mov
sbb
lcall
dec
xor
cld
inc
popa
cmp
adc
adc
adc
adc
lcall
cwtl
pop
push
pop
xlat
mov
movsb
mov
aaa
mov
mul
cmp
cmp
call
inc
and
movw
pushl
ret
pushf
pushl
jmp
lea
setge
movsbw
push
lea
lea
jmp
pop
aas
in
jmp
lock
and
fisttps
aad
mov
dec
jne
xor
sbb
xchg
cltd
lret
movsl
into
dec
or
fcomi
lock
sahf
sub
idivl
clc
ja
xchg
pusha
sti
lock
sub
loopne
pop
cmp
fisubl
inc
aam
cmpsb
mov
mov
jbe
ftst
aas
xchg
mov
push
dec
lds
xchg
pusha
xor
push
pop
cmp
aaa
les
xorb
inc
lea
mov
add
sarl
clc
mov
rcll
fistps
fs
mov
out
mov
les
xor
xor
jnp
and
add
test
aam
jne
test
xchg
into
sbb
in
xor
sbb
outsl
mov
pop
data16
fdivs
lea
or
clc
ret
push
xor
mov
addr16
mov
jnp
movsl
pop
mov
ftst
mov
mov
and
push
jne
orb
lods
cltd
std
je
popa
in
out
pop
mov
jmp
or
push
pop
inc
push
cld
cmpsb
dec
mov
push
ss
xchg
outsb
push
dec
jb
mov
out
scas
dec
ja
jb
cmp
sbb
xorb
icebp
jp
or
shrl
push
sbb
add
sarb
mov
adc
push
jl
mov
inc
mov
add
out
or
icebp
sub
pop
fs
cmp
and
dec
call
insl
and
add
sbb
sub
xchg
filds
jno
aas
pop
lods
lea
inc
pop
xchg
shl
sub
mov
shlb
push
add
nop
inc
push
mov
sahf
stos
repz
test
xor
dec
sub
addb
inc
pushf
xchg
jmp
sarl
jg
dec
dec
stc
int
cmc
and
hlt
lret
filds
push
sbbb
popf
ja
imul
stc
hlt
add
and
dec
cli
aas
into
pop
loope
adc
add
out
inc
loop
cmp
inc
dec
shll
or
sub
cbtw
mulb
aad
andb
scas
xlat
mov
pop
stos
push
mov
cli
mov
push
jmp
jmp
rcrl
adc
add
sbb
mov
not
js
lea
pop
stos
mov
pop
aaa
cwtl
push
pop
movsl
out
or
lock
insb
sbb
mov
pop
leave
pop
sbb
gs
or
sti
call
sti
jno
xchg
hlt
inc
push
sbb
mov
stos
sub
stc
aas
inc
jmp
clc
lahf
sub
loop
xlat
ja
les
jmp
jne
fcmovnb
xor
sar
inc
out
jmp
dec
insb
mov
pop
into
jae
pop
mov
push
aas
int
mov
pop
push
lahf
lcall
fs
iret
mov
mov
dec
sbb
mov
ljmp
pusha
mov
shll
inc
mov
adc
xor
loope
das
add
dec
mov
movups
add
mov
sbb
imul
push
xchg
out
jp
popl
add
lea
jb
cmc
cmpb
pusha
lea
jmp
add
add
btc
aas
dec
pushf
xchg
cmp
mov
and
movzbl
jg
inc
sub
bswap
lahf
cmc
btc
push
and
push
btc
shld
movzbw
push
shl
setb
rol
xor
movzbw
lea
lea
call
cwtl
bswap
mov
call
pop
or
jne
jmp
pusha
mov
mov
xchg
inc
daa
sbb
dec
xbegin
sarb
push
add
nop
sbb
cltd
jb
jg
add
outsl
stos
inc
push
mov
adc
inc
arpl
dec
pushf
test
inc
mov
sbb
inc
clc
addl
ljmp
clc
orl
xor
cmpsb
push
mov
aas
addr16
xchg
cli
add
mov
cli
test
inc
push
jmp
dec
dec
adc
inc
rcrl
xor
movsb
je
sub
stc
scas
jg
mov
lds
cltd
pop
add
push
xor
dec
in
lret
push
out
xchg
or
mov
scas
mov
and
or
or
cmp
cmp
rorl
dec
popf
outsb
sbb
cmp
mov
sarl
dec
mov
mov
add
in
adc
fbld
aam
cmpsb
mov
movsl
jae
lds
nop
mov
mov
in
mov
pop
sbb
sbb
dec
push
jle
aad
data16
mov
sub
movsl
mov
push
push
fistpll
rorb
ja
sub
pop
xor
testl
test
sbb
sbb
iret
ret
push
adc
test
mov
les
pop
aaa
test
pop
addb
pop
orb
mov
popf
mov
popf
pop
test
push
jmp
ss
push
pop
xchg
fwait
jno
inc
out
pop
and
dec
loope
sbb
xchg
or
xchg
cmp
call
mov
push
mov
xor
imul
test
lahf
cmp
add
in
cmpsb
js
lods
or
fcomp
xchg
dec
in
add
js
lods
or
xor
pop
ret
mov
incb
lret
mov
loopne
out
add
rcrb
sarb
dec
fildl
xchg
dec
test
dec
push
jno
lock
negb
ret
push
lds
es
pop
inc
fldl2t
pop
addr16
out
outsb
mov
xor
sub
nop
push
out
fisubs
dec
cmpsl
push
out
push
lea
pop
movsb
inc
aas
out
or
repz
daa
dec
cmpsl
loope
stos
dec
mov
call
leave
mov
std
add
iret
mov
clc
cmp
dec
jmp
ss
pushf
enter
jb
add
sbb
test
das
xor
inc
orb
les
xlat
mov
hlt
int
fcomi
xor
fistps
das
mov
movsl
push
jg
outsb
rol
mov
pop
dec
mov
std
sbb
cmp
and
xlat
popf
mov
mov
ljmp
xchg
push
ret
sub
dec
jmp
fdivl
inc
dec
test
testl
incl
mov
fisubrl
push
test
add
stc
jle
dec
pusha
sub
jno
mov
lock
cmp
dec
leave
insb
stc
pop
pop
mov
cs
fstpt
jp
push
mov
out
rorb
push
cmp
mov
sub
nop
aaa
adc
push
std
sub
in
lret
lods
sbb
sbb
bound
sbb
out
jns
nop
gs
int3
call
mov
xor
scas
adc
xchg
loope
fstpl
lret
ja
insl
scas
pop
cli
popl
add
inc
xor
cmp
int3
mov
dec
jmp
inc
mov
movsb
je
ljmp
jl
sub
mov
fwait
sbb
dec
iret
push
frstor
insb
nop
insl
jae
adc
les
rorl
fistpll
iret
pop
add
add
push
mov
mov
and
mov
les
out
in
popf
cli
adc
add
lods
jbe
int3
test
out
mov
jmp
popf
xor
and
mov
jno
mov
push
lea
out
jmp
mov
sahf
mov
jmp
fsubl
popf
int3
dec
sbb
adc
or
outsl
sub
jmp
jmp
rcrl
cmp
insl
jae
out
nop
repz
or
mov
je
mov
adc
mov
jb
mov
aas
jns
dec
jmp
sbbl
or
bound
fdivp
jecxz
mov
lret
addl
sti
gs
mov
nop
ljmp
sub
pop
pushf
mov
jmp
jmp
jmp
xchg
lret
or
xor
nop
dec
push
jo
cmp
nop
insl
jae
pop
push
test
push
dec
jmp
and
repnz
bound
or
icebp
add
xor
adc
jmp
mov
fsubrp
push
pop
sub
mov
ret
jno
xchg
ret
cmp
pop
mov
add
sub
inc
cmp
hlt
pop
push
iret
or
mov
jb
rol
mov
dec
sahf
adc
mov
test
mov
test
sub
js
cmp
sub
cmp
mov
dec
and
shr
js
outsl
je
and
push
sbb
jnp,pn
clc
je
sahf
cli
inc
mov
jmp
inc
popa
mov
ljmp
aad
ljmp
test
lods
xchg
ja
sahf
push
sub
adc
mov
outsb
hlt
sbb
dec
sub
add
out
xor
cmp
fcomps
frstor
cmp
addr16
out
dec
mov
xchg
mov
and
push
iret
jns
loop
adc
add
loope
sbb
pop
int
arpl
dec
or
cld
int
push
add
mov
in
jnp
and
repnz
gs
add
into
jae
mov
add
test
pmaddwd
pushf
pushf
lea
call
je
pusha
lea
jae
clc
stc
call
bswap
lea
setge
mov
call
std
movsl
dec
dec
jmp
push
adc
add
pop
leave
xor
jo
in
popa
sbb
lods
out
daa
xchg
adc
dec
jmp
push
addr16
push
and
mov
sbb
nop
daa
bound
add
outsb
test
sbbl
mov
xor
int
pushf
adc
jae
pushf
fld
mov
dec
dec
push
mov
xchg
aam
das
mov
and
outsb
push
pop
dec
data16
dec
mov
out
cs
movsl
sahf
adc
mov
lret
add
mov
or
pusha
jno
in
dec
add
sbb
popa
sahf
sub
movsb
addl
xor
fdivp
into
addr16
xor
loopw
insl
repz
mov
jp
mov
lods
xor
sub
push
or
mov
movsb
fnstenv
lds
and
aas
push
add
push
fdivr
in
call
lods
adc
jl
or
incb
lret
js
pop
cmp
or
cltd
mov
int
jmp
xlat
repz
sub
in
arpl
test
push
loopne
and
adc
pusha
out
mov
rorl
and
loope
lods
mov
push
inc
sub
mov
inc
or
fwait
dec
sub
adc
jecxz
nop
cwtl
mov
lret
orb
or
subb
pushf
mov
pusha
lea
jmp
xchg
pop
inc
dec
jmp
push
outsl
fsubs
js
cs
and
dec
ja
jbe
pop
mov
add
outsl
fists
loopne
clc
jae
pushf
mov
and
aaa
test
inc
jbe
push
sbb
int
or
add
or
out
mov
mull
mov
xchg
pop
fdiv
sbb
pop
inc
jmp
outsl
jge
stos
mov
dec
repz
cltd
fwait
popf
lcall
jle
stos
push
insb
pop
jns
hlt
cli
add
insb
icebp
stc
fiadds
xchg
js
inc
ret
sub
push
call
xchg
mov
insl
or
test
fsubl
js
inc
repz
aad
jae
fdivrl
andl
rcrb
stos
mov
fs
cmp
jo
ret
push
js
imul
adc
push
daa
fnstsw
dec
push
push
sub
gs
stc
xchg
repnz
std
ds
lods
fmulp
es
and
dec
sahf
fs
pop
ror
mov
jno
ret
es
dec
xor
ror
sub
adc
mov
jo
pop
mov
fs
mov
dec
leave
mov
aaa
dec
sbb
nop
and
dec
jbe
test
pop
inc
mov
cli
imul
incl
fs
and
rclb
mov
bound
ds
repz
adc
pop
jp
cli
jb
push
fisubrl
cmp
std
sub
jbe
lds
in
inc
push
call
inc
hlt
shrb
xor
mov
inc
cmp
pusha
stos
lahf
push
fs
fadds
pop
xchg
mov
lret
lret
popf
adc
data16
mov
xchg
dec
or
sarb
mov
and
xor
xchg
lods
mov
icebp
ljmp
nop
mov
pop
orl
inc
iret
jmp
test
test
xor
or
fcoms
in
dec
aam
jge
loopne
mov
fimull
jg
jge
sub
push
jl
or
dec
sub
loopne
adc
and
out
insb
jnp
add
loopne
mov
sbb
and
xchg
loopne
cmc
sbb
xchg
add
into
or
test
jmp
loopne
out
cmpl
xor
sbb
aad
add
pushf
jmp
lea
ja
rcl
jmp
mov
inc
inc
jmp
push
lods
mulb
xor
test
sub
inc
and
dec
cmp
movsl
lock
mov
push
mov
sti
lahf
push
sbb
cmp
push
mov
test
adc
mov
or
pop
sub
clc
in
xchg
popl
xchg
pop
xchg
test
jge
dec
inc
and
lods
cmpsb
cmp
mov
pusha
push
stos
xor
loop
adc
jmp
push
mov
mov
call
add
pusha
inc
jmp
insb
xchg
pop
adc
push
mov
sets
mov
xor
call
lds
inc
nop
mov
jg
or
aaa
ja
mov
sbb
adc
inc
fwait
stos
mov
or
std
inc
push
pop
and
int3
and
mov
je
std
jmp
mov
mov
cmp
dec
neg
push
fistl
or
sub
push
stc
bt
cmc
cmp
movw
mov
jmp
push
pusha
pusha
jmp
call
adc
push
inc
jmp
adc
sbb
jns
out
mul
or
orl
xchg
pusha
mov
scas
mov
pop
sbb
jae
pop
xor
xchg
sti
fnstsw
sub
in
jmp
push
bound
adc
repz
sub
notb
js
cs
adc
adc
les
fildl
add
jo
fcoml
dec
push
scas
mov
sbbl
clc
inc
jmp
add
mov
dec
xor
sub
xchg
pushf
fdivr
inc
sbb
jae
mov
dec
sub
testb
jns
mov
mov
mov
and
jl
pushf
cs
pop
push
ss
sub
shl
cli
xor
sub
pop
mov
mov
mov
mov
out
mov
repnz
loope
inc
test
je
leave
out
mov
pop
push
sbb
maskmovq
negl
push
negl
fistpll
out
dec
pusha
call
mov
lahf
lea
pushf
movb
movl
pushf
mov
movl
push
pushf
pushl
ret
mov
mov
pusha
mov
call
fiaddl
inc
jmp
repz
stc
in
cwtl
inc
das
mov
mov
inc
cmc
pop
pop
sub
inc
xchg
mov
mov
imul
mulb
adc
fnsave
pusha
dec
shl
lea
jns
ja
daa
push
fnsave
inc
popf
insl
xor
imul
dec
xchg
jno
test
mov
push
sahf
jecxz
shll
lea
subb
cld
mov
dec
push
bsr
mov
not
sub
jae
shld
clc
push
movsbw
push
das
ror
shl
test
push
das
call
push
mov
movw
lea
jne
push
pushfw
popw
shl
sbb
mov
test
cmc
push
xor
call
xchg
call
iret
pop
xor
dec
clc
fs
aad
pop
pop
pop
mov
add
mov
xchg
push
xchg
push
push
pushf
ret
adc
movsl
clc
shll
aad
push
scas
or
jb
in
addr16
or
xchg
ja
mov
dec
dec
fisttps
aam
shrl
xor
mov
aam
xchg
mov
xchg
jo
fs
dec
negl
dec
mov
scas
mull
mov
xor
jno
and
xchg
mov
cmp
sbb
shll
nop
cmp
clc
sbbl
int3
iret
lcall
movsb
push
add
fmull
inc
leave
aaa
or
jmp
test
loop
xchg
xor
jl
xor
scas
test
fs
test
cmp
leave
lods
sbb
push
dec
in
jmp
test
push
add
lret
sti
and
or
add
imulb
pop
push
movsl
mov
movsb
inc
jmp
mov
push
add
and
push
pusha
jmp
sub
fcoml
loop
in
test
jne
imul
mov
js
jg
cmp
aaa
sbb
cmp
mov
fwait
jno
cmp
mov
xchg
mov
jg
popf
sbb
mov
test
pop
rcll
jg
fs
jp
iret
adc
xor
out
lock
mov
jp
pusha
shl
mov
test
cmp
bt
cmpb
push
lea
jne
clc
inc
and
xor
push
mov
sbb
neg
add
test
mov
jmp
call
inc
roll
nop
fistps
lds
fildl
jo
cmpsl
icebp
pop
add
jl
pop
dec
dec
aas
add
in
sub
sub
mov
decb
pop
mov
jbe
lret
xchg
inc
pop
sub
mov
lock
mov
sub
or
lahf
fcmovnbe
in
xchg
lods
xor
jnp
sbb
push
pushf
loop
outsl
xchg
jnp
jmp
sub
mov
ss
mov
or
hlt
pushf
lea
jmp
lea
jae
test
clc
push
cmp
pushf
movl
mov
lea
jae
test
cmp
pushf
push
call
jmp
jmp
pushf
lea
jae
sub
shld
mov
xor
mov
rcl
dec
ror
ror
mov
cmp
sub
bt
cmc
test
repnz
call
test
pusha
sbb
mov
sub
sub
repz
push
pop
loope
dec
push
popa
repz
mov
cmp
mov
cmc
mov
shrb
fisttpl
int
popf
dec
bound
mov
cmovno
xor
sub
pop
test
mov
xor
mov
mov
hlt
pop
lock
mov
dec
dec
push
fdivrs
fs
xorb
sub
inc
mov
out
mov
lock
xchg
adc
cmp
or
and
or
jae
gs
stos
lods
dec
and
jmp
shrl
cmp
gs
dec
ljmp
add
or
push
add
jmp
cmp
sub
mov
add
ret
push
mov
out
fsts
push
lock
cld
adc
cmp
mov
test
pop
test
test
bnd
ror
xchg
pop
pop
pop
stos
call
test
mov
icebp
repz
add
adc
sbb
dec
icebp
xchg
ds
lret
xchg
negb
outsl
xchg
mov
lcall
jmp
divl
rcrw
repz
addr16
push
mov
mov
cld
int
mov
cwtl
scas
nop
or
loope
int
punpckhbw
xorl
stc
push
sub
xchg
inc
xchg
cmp
inc
or
and
loope
lea
jmp
push
pusha
movl
pusha
push
lea
jmp
lahf
xor
ds
or
mov
mov
jge
mov
adc
push
cmp
mov
cmpsl
nop/reserved
mov
xchg
cld
gs
std
addr16
fwait
sub
adc
ss
ljmp
int3
lock
enter
mov
mov
inc
lahf
jns
in
rorl
jbe
rclb
mov
mov
jns
inc
mov
cmp
jns
mov
rolb
daa
loop
nop
cmp
movsl
stos
push
aaa
mov
mov
cmc
adc
sub
mov
add
call
inc
in
jmp
icebp
lods
xlat
popa
sub
adc
adc
stos
sbb
xor
push
pop
sbb
push
ret
es
pop
ljmp
out
jnp
loop
jne
sbb
or
cmp
jecxz
out
and
inc
cmpsl
sbb
jbe
scas
daa
imul
fs
add
mov
pop
test
outsb
mov
test
sbb
sub
movl
pushf
lea
jmp
cmp
pusha
call
sti
and
daa
imul
ds
loope
fiaddl
call
addl
and
gs
xor
fs
insb
add
sti
shr
ror
shr
add
add
setl
xor
mov
call
lea
icebp
cmp
nop
std
js
dec
mov
int3
xor
aaa
jns
insb
sub
lret
std
aas
cmpsl
sub
hlt
iret
sub
test
repz
push
ret
and
js
ds
jle
mov
xor
mov
cmpsb
xor
add
add
js
mov
outsl
nop
pop
mov
sbb
push
cltd
push
clc
in
add
imul
xor
rclb
adc
add
insl
push
pop
incl
xchg
mov
les
cmp
hlt
xchg
jmp
bound
mov
mov
pop
xchg
push
adc
lods
iret
sbb
and
repnz
je
cmp
sbbb
in
dec
push
or
mov
mov
mov
dec
data16
push
dec
movsl
mov
xchg
pop
and
push
loope
ja
ja
es
ss
xchg
cmp
sbb
divb
xchg
lret
les
push
xchg
sbb
lret
mov
pop
add
or
mov
movb
inc
bt
clc
xor
movb
mov
inc
bt
jmp
and
pusha
dec
xchg
and
inc
test
push
pop
adc
jnp
incb
flds
mov
push
xor
dec
jb
gs
mov
dec
scas
or
into
addr16
movsl
leave
sub
or
rolb
push
xor
lret
int
mov
mov
mov
cmp
add
mov
mov
sub
cmc
fildl
stos
cmpb
push
lea
ja
cmc
imul
clc
add
pusha
pusha
push
push
lea
jmp
pushf
lea
jne
setp
jmp
call
int3
jno
jmp
jge
add
bound
lret
lret
repnz
push
adc
punpcklwd
enter
or
xchg
enter
lret
mov
aam
cmp
cmp
mov
sbb
stos
rcll
mov
or
xchg
aad
rcll
cltd
xchg
pop
or
fisubl
jg
insl
adc
mov
xor
cwtl
cmp
nop
movsb
ljmp
pop
stos
xchg
jg
xchg
std
or
jl
icebp
movsl
andps
hlt
mov
fdivs
sahf
push
xor
mov
stos
push
pop
push
ds
pushf
sub
sbb
inc
push
xchg
xor
test
push
inc
sbb
mov
push
inc
icebp
mov
add
inc
xorb
jae
sbbb
inc
xchg
cli
mov
mov
rcrl
jmp
nop
xchg
push
sbb
xchg
pop
imul
fbstp
nop
mov
mov
xor
mov
into
push
add
or
cmp
outsl
xorb
les
jp
adc
adc
inc
jecxz
cmc
xchg
fdivs
jne
mov
mov
mov
movsl
xlat
cli
lods
inc
nop
jb
movsl
loop
cmc
lods
xlat
push
mov
mov
jg
insl
xchg
pop
mov
fcom
mov
xchg
mov
cmc
stc
push
add
test
test
cmc
cmc
mov
bt
test
call
add
push
imul
insb
insb
outsl
arpl
stc
movb
rol
clc
add
pusha
clc
push
ror
cmp
pushf
clc
test
pushw
popfw
jmp
lret
cmp
nop
gs
push
fisttps
xchg
inc
sub
bnd
repz
push
adc
int
jmp
mov
push
loopne
jbe
sub
dec
stos
stc
test
outsl
mov
jae
rcr
outsl
out
or
mov
cmc
out
push
dec
mov
jle
lret
nop
mov
int
push
repnz
jo
out
adc
cmpl
lcall
sahf
sub
push
xor
addr16
pop
popf
shrl
lea
xchg
xchg
outsl
outsb
fldl
imul
loopne
adc
out
lret
cs
int3
gs
push
jl
and
rorl
test
dec
dec
mov
add
out
mov
push
shll
mov
sub
mov
bt
cmp
mov
call
stc
bt
cmp
pusha
call
roll
nop
aas
jp
xor
insb
or
jns
cld
movsb
inc
push
lock
jmp
lret
cltd
test
add
jns
rcr
inc
cs
orl
mov
stos
cmp
pop
rcr
stc
nop
push
in
mov
xor
loop
xor
lret
mov
cmpb
call
xor
pop
fsubrl
les
inc
lods
pop
xor
add
mov
out
test
mov
rcrl
and
mov
leave
enter
cwtl
push
cwtl
rcrl
mov
and
jp
push
sbb
push
fs
mov
lods
sub
seta
pusha
lods
cmc
xor
pusha
lea
jg
rol
clc
add
bt
ror
test
cmc
cmp
shr
pusha
lea
je
pushf
pushf
call
stc
cmp
call
mov
jle
jmp
mov
lcall
inc
mov
or
push
outsl
ljmp
data16
scas
scas
cmp
mov
xor
mov
mov
cmp
je
sbb
mov
mov
xor
loop
orb
addr16
fwait
lret
pop
pop
or
sbb
dec
pushf
inc
add
int
mov
mov
sti
sub
adc
fisubs
repnz
fstpt
stc
or
test
loope
xor
jmp
cmp
mov
sub
mov
cmp
ljmp
nop
jg
dec
test
fldl
jo
out
fiaddl
stc
shll
addr16
adc
in
aaa
cmp
and
push
fcoms
jmp
cmc
mov
rcll
cmp
dec
jp
jae
xor
imul
lret
inc
cmp
pusha
dec
and
push
ret
jge
dec
push
xor
dec
in
sbb
lods
push
shrl
pusha
lcall
outsb
jmp
mov
sub
xor
inc
cwtl
push
jecxz
push
andl
add
lret
jecxz
clc
pusha
js,pt
repz
jbe
mov
push
mov
sbb
or
sbb
xor
add
mov
int
jns
les
cmp
subb
ja
stos
sahf
leave
sbb
xor
nop
not
pop
xchg
sbb
xor
xor
lods
push
nop
fwait
mov
dec
popf
and
shrl
lods
test
and
and
jmp
inc
ds
jecxz
shrb
loopne
pushf
mov
lret
sbb
cmp
jg
mov
loop
lret
pusha
cs
mov
add
lret
lret
dec
mov
push
nop
cli
test
xlat
subl
sub
ret
push
xor
faddl
mov
xchg
add
clc
out
lods
les
mov
std
dec
sbbl
sarb
ficomps
mov
sub
mov
mov
cli
mov
cwtl
loop
lcall
mov
push
add
test
test
jne
sbb
cmpl
add
mov
sbb
nop
and
sub
dec
out
hlt
sub
sbb
nop
push
sti
push
inc
add
mulb
cmp
bound
mov
in
mov
movsl
call
lods
jle
outsb
or
and
and
mov
jge
rcll
inc
aam
fidivrl
out
int
clc
lods
aas
incl
jle
outsb
fstpl
sub
mov
loope
iret
push
faddl
arpl
ret
test
pushf
int
and
xor
nop
rorb
testl
add
shlb
xlat
cmp
adcl
jo,pt
subb
outsl
aaa
ret
mov
sbb
and
xor
pusha
es
andl
mov
mov
movl
lret
sbb
mov
dec
lahf
js
cld
lds
push
jl
sbb
ja
stos
jecxz
addr16
push
push
sbb
sbb
pop
pop
sub
out
pop
or
jno
int3
cmp
cmp
rol
add
mov
popa
pop
insb
push
cmp
or
xchg
movsl
lods
int3
pushf
push
pushf
cmp
setae
bswap
setne
jmp
call
lea
mov
mov
call
jbe
add
jmp
xchg
sub
ds
xor
mov
mov
dec
jle
add
mov
scas
and
jl
ret
testl
scas
addr16
std
adc
inc
add
movsb
mov
fs
rorl
mov
out
inc
cld
fs
rcrl
xchg
jnp
sub
scas
insb
test
add
out
roll
xchg
add
or
pop
xor
nop
gs
jne
dec
mov
lret
aad
dec
xor
or
fidivrs
stos
scas
xor
xor
ss
mov
dec
mov
pop
mov
mov
ja
xchg
adc
add
lret
stos
int3
ret
sbb
sarb
dec
xor
test
push
sbb
adc
loop
cmpsl
cltd
mulb
xchg
xlat
ffree
imul
into
or
call
jecxz
jnp
xor
xor
nop
in
dec
mov
or
test
pop
cltd
jecxz
aas
dec
jecxz
rol
daa
xchg
push
add
mov
mov
jecxz
mov
insl
shrl
mov
xor
shlb
sbb
stos
mov
inc
ja
cld
pop
sub
or
cmpsl
pusha
dec
aad
jmp
mov
out
and
mov
arpl
stc
jno
in
ret
dec
mov
inc
pop
arpl
testb
pop
gs
adc
stc
mov
inc
add
xor
xor
nop
or
cmp
lock
mov
xchg
popa
cmp
xchg
fistpll
xchg
cmp
fwait
addl
lods
mov
mov
outsl
add
mov
mov
sub
add
push
jnp
fidivrl
add
ss
aam
jno
cld
test
xchg
out
ja
sub
repnz
and
cmpsb
fisubs
pop
inc
jmp
rcr
in
cld
xchg
test
add
sbb
jae
daa
cmpsb
sbb
lods
mov
shll
ret
cmpsb
xor
pop
xor
dec
xchg
lret
sub
pop
and
andl
lret
add
ss
mov
adc
dec
jp
and
repz
mov
cmpb
faddl
lahf
adc
mov
subb
mov
loopne
sbb
pop
jbe
xchg
jp
das
jmp
shrl
stc
add
mov
xchg
pop
add
adc
ljmp
xor
repnz
pop
movb
push
push
mov
inc
push
cltd
sbb
xchg
incb
shr
inc
jno
mov
jne
mov
es
push
pop
dec
xchg
ljmp
sbb
stos
xor
push
stc
or
nop
ds
addr16
dec
xchg
mov
adc
dec
cmc
jge
imul
out
je
imul
ja
loop
mov
nop
push
sub
inc
lods
xchg
orb
dec
mov
mov
testl
mov
push
arpl
mov
inc
into
imul
push
xchg
cld
test
clc
and
xchg
pop
mov
cld
ret
mov
js
lret
inc
outsb
jo
push
ret
sub
int
xorl
bound
xor
pop
in
repz
pop
pop
add
lock
or
test
movzbl
mov
pusha
push
pushf
movw
lea
jmp
pushf
mov
jmp
or
pushl
push
call
jmp
lcall
cmp
test
jo
sahf
inc
das
jmp
shrb
sbb
mov
xor
jmp
insb
rcrl
and
jb
jae
or
bnd
call
repz
nop
mov
fld1
adc
shl
jb
shrb
nop
mov
es
sbb
outsl
fisubl
sub
movsb
nop
ffree
f2xm1
pusha
loopne
push
jne
cmpsl
inc
lahf
xor
dec
pop
mov
and
push
jge
icebp
fidivrs
cmpsl
add
aad
fisubl
daa
outsb
pusha
andps
movsb
fnstenv
mov
jp
aam
sub
mov
fsts
aas
incl
daa
outsb
ss
jmp
and
stos
adc
jo
push
pop
call
xchg
xchg
or
jmp
sbb
mov
adc
repz
pop
insb
push
mov
repnz
sbb
loope
pop
mov
cltd
sti
movsb
shlb
sub
into
js
inc
jecxz
and
lahf
xor
xchg
scas
push
cmc
pop
pop
lods
es
loope
mov
jb
popa
es
hlt
mov
jmp
push
data16
and
cmp
popa
data16
aam
pushf
sub
push
fadd
imul
add
or
rep
push
and
call
nop
pop
hlt
jge
rcrb
aad
xchg
jge
or
jl
mov
sub
nop
ljmp
add
and
xchg
fidivrs
sub
mov
cmpsb
xchg
sub
push
push
stc
lret
out
stos
add
dec
add
int3
push
push
mov
sti
jnp
or
adc
mov
xor
scas
adc
std
cwtl
out
mov
jmp
lret
jnp
nop
sbb
cmp
rolb
jl
popa
pop
xchg
lods
aaa
repnz
push
adc
or
pop
les
push
pop
xchg
arpl
and
inc
and
imul
stos
adcl
lock
and
in
mov
push
jbe
pop
xor
aas
mov
lea
repnz
fsubs
addr16
fadd
les
or
nop
xchg
or
and
cmpsl
mov
mul
cmpsb
je
insb
jne
pop
out
clc
clc
xchg
shld
shr
mov
call
ret
sub
nop
popf
mov
outsb
cmp
mov
and
in
mov
fildl
sub
in
cmp
in
int
rcl
push
ss
mov
inc
aas
push
sub
cmp
dec
cmp
test
cmp
push
push
jno
dec
fistl
test
jecxz
repnz
dec
xor
add
in
xor
sbb
mov
cmp
arpl
add
nop
push
dec
jae
or
aas
or
or
in
enterw
xor
repz
pop
leave
jmp
sbb
jnp
popa
jle
rcll
popf
loopne
pusha
imul
adc
or
jl
call
daa
mov
inc
mov
cmp
mov
cli
adc
xchg
push
xor
insl
add
fldcw
xor
cmc
scas
sbb
mov
lahf
pop
or
gs
nop
cmc
nop
sub
pushf
mov
addb
adc
inc
or
mov
sub
nop
sahf
cmp
dec
cmp
pop
and
mov
sbb
fcompl
and
inc
xchg
xor
sub
nop
inc
adcb
jecxz
dec
sbbb
outsl
ja
push
leave
mov
cmc
lock
dec
inc
pop
sub
inc
push
loop
fisttpl
mov
push
sbb
dec
push
pop
sub
imul
push
jp
mov
xchg
jmp
outsl
and
mov
adc
lcall
cs
leave
and
imul
sub
push
cmp
cmpsl
cmp
mov
inc
cmpsb
jbe
fbld
stos
hlt
das
into
rclb
movsl
mov
sbb
inc
mov
mov
push
jmp
pop
data16
cmp
dec
push
js
es
or
mov
rcrb
data16
add
pushf
lea
ja
bt
bt
imul
stc
bt
stc
add
pusha
pushf
lea
jmp
pushl
popl
pusha
movb
movb
pushl
ret
movl
movb
mov
lahf
pop
lahf
movsbw
movl
call
mov
stos
sub
nop
mov
popf
cmpsl
xor
mov
adc
andl
push
out
das
cltd
pop
test
xor
dec
shl
jp
mov
das
jp
lods
out
inc
xchg
cwtl
add
roll
or
mov
push
push
ret
pop
push
xchg
and
faddl
xchg
int3
xchg
aad
lahf
add
sbb
pop
lcall
inc
movsb
xchg
hlt
cmp
inc
out
adc
mul
adc
stos
out
mov
add
bound
sub
nop
sti
push
inc
or
inc
lret
mov
insb
push
arpl
test
xor
cmp
xor
rclb
xlat
jnp
sbb
mov
push
jnp
jmp
jns
dec
inc
xchg
cmp
inc
pop
mov
and
lea
ret
lahf
cmc
add
xor
jl
pop
je
pop
xchg
clc
lret
and
and
dec
mov
int3
loop,pn
rcr
in
imul
shrb
loop
add
lret
add
mov
jecxz
mov
push
aas
jae
imul
sub
nop
into
test
cmc
and
cltd
fwait
shll
scas
daa
xchg
divl
jmp
pop
cmp
cld
xchg
sarl
jne
jae,pn
mov
push
xchg
sti
mov
jge
imul
je
push
fiadds
mov
mov
lcall
xor
push
insb
insl
jae
jmp
mov
xor
repz
jno
or
fdecstp
js
push
fiadds
push
daa
jmp
icebp
scas
insl
outsb
pop
test
jns
out
mov
mov
xchg
mov
push
gs
mov
lret
ss
jno
inc
xchg
pop
sbb
cmp
jbe
in
call
fisttpll
push
cmp
dec
jmp
pop
movsl
adc
jnp
test
hlt
sbb
ljmp
cmpsl
inc
test
nop
les
jne
sub
scas
or
cltd
push
fiadds
jmp
daa
jmp
mov
bound
pop
rcl
icebp
nop
jp
jns
fs
push
sub
cmp
xor
push
es
pop
lret
mov
pop
fstpl
jbe
sub
xchg
call
movsl
lret
insl
icebp
shlb
cmpsb
cmp
pop
mov
ds
lret
ret
sub
and
adc
jle
sub
negl
xchg
mov
sbb
push
jmp
cmpb
jl
nop
stc
sahf
xor
popf
loope
add
inc
jb
cmp
es
xchg
outsl
in
cs
fs
test
inc
aad
les
nop
and
imul
mov
insb
sahf
rorb
cs
push
mov
push
jmp
nop
push
and
int
cltd
incb
lods
mov
loopne
imul
nop
lds
mov
mov
scas
mov
cmp
mov
in
push
mov
xlat
jge
push
add
std
jmp
mov
je
and
lret
fcom
jmp
adc
cmc
dec
or
inc
scas
or
popf
mov
cs
jae
fistps
ret
sar
shlb
or
ds
jecxz
cwtl
fucomp
xor
int
pushf
and
mov
subb
mov
or
addr16
jmp
push
xlat
rcr
sbb
mov
repnz
pop
cmp
data16
idivb
fisttpll
sbb
test
test
nop
push
fstpl
movb
gs
shll
mov
mov
aaa
xchg
sahf
dec
hlt
cli
pop
out
je
and
das
mov
inc
testl
mov
jecxz
jmp
out
ljmp
clc
loop
mov
dec
cwtl
mov
pop
xchg
aad
push
or
aaa
test
int3
mov
xor
jle
daa
jne
mov
dec
pop
ljmp
dec
test
sub
das
add
inc
jnp
push
sbb
jno
pop
jae
flds
push
push
inc
or
mov
pop
inc
or
iret
xchg
ljmp
or
fs
push
and
xor
ss
mov
outsb
out
fistps
and
nop
in
cwtl
jb
rorb
decb
jae
jmp
fwait
test
and
nop
setne
mov
subl
inc
jmp
jmp
inc
or
aad
imull
imul
insl
add
and
nop
in
fadd
mov
fcompl
dec
inc
clc
sarl
dec
cltd
push
gs
mov
int3
push
push
add
and
pop
add
clc
jge
out
jnp
add
push
mov
not
and
nop
sti
jnp
int3
mov
xchg
push
mov
nop
inc
add
mov
clc
repnz
mov
iret
fisubs
nop
or
xchg
jle
xor
sub
test
popf
mov
push
push
ret
mov
movsl
pop
shr
adc
pop
push
mov
xlat
imul
push
adc
and
js
push
or
jge
jmp
push
jg
mov
cmp
ja
lret
subl
sbb
push
mov
jae
cmp
in
or
cwtl
jmp
repnz
fbstp
dec
mov
jl,pn
int
sbb
popa
cmp
xchg
arpl
leave
xchg
jbe
in
enter
ljmp
insl
loop
jmp
out
stos
jae
dec
aam
xor
es
test
lahf
popf
inc
jns
andl
cmc
gs
push
fwait
insl
js
jg
xchg
jae
sub
lcall
inc
and
test
add
mov
movsb
outsl
or
or
je
xchg
jecxz
shrb
push
push
push
add
adc
mov
dec
jg
push
cmp
xor
jbe
cmp
movsb
aam
mov
les
mov
jecxz
scas
imul
scas
pop
shll
test
bsr
btr
rcl
rcl
mov
pusha
cmp
pusha
call
pushf
rol
and
jmp
or
nop
out
mov
stos
jbe
mov
cli
xor
adc
and
add
mov
cmp
out
cmp
xchg
out
cmc
xchg
fmulp
push
cmp
adc
aad
in
push
jnp
aam
shrl
rcr
xchg
mov
push
les
mov
cs
push
lods
rol
nop
add
call
adc
dec
pop
dec
rcrl
jbe
not
mov
push
lcall
outsb
mov
inc
ljmp
mov
imul
ss
cmpsl
stos
cltd
and
nop
movsl
add
xchg
mov
xor
cmp
cli
out
fwait
or
adc
shlb
nop
jmp
mov
add
lcall
or
rcrb
jle
or
shlb
inc
shll
jmp
fistps
sarb
icebp
mov
mov
dec
xchg
shr
and
lock
mov
mov
pusha
push
sbb
jns
in
mov
inc
jnp
add
sbb
sub
add
enter
lret
repz
add
aad
mov
mov
pop
add
out
push
out
aad
iret
leave
cmp
or
mov
mov
lods
mov
movsl
mov
add
and
nop
sbb
mov
xchg
inc
dec
cmc
subl
jns
popa
shl
mov
xor
cmp
xor
aad
cli
scas
jne
fwait
mov
pop
cli
push
bound
inc
arpl
fsubr
sub
xor
test
pop
jmp
jecxz
inc
xor
ret
xchg
punpckhdq
cwtl
lcall
lock
push
push
or
cmovbe
test
or
mov
test
xor
xchg
dec
adc
xchg
fisubl
faddp
lods
enter
pop
sbb
mov
mov
xor
sar
out
sahf
add
jnp
outsb
or
lock
dec
lock
push
jo
mov
add
mov
dec
loop
sub
int3
rcl
in
sub
cmp
sub
cmpl
inc
push
xchg
inc
xlat
clc
ds
test
sub
sub
adc
stc
fistps
xor
add
mov
gs
add
xor
jg
mov
and
inc
loope
mov
adc
cmp
xchg
mov
sbb
dec
lock
jge
mov
sarb
adc
ret
fs
jo
xor
cs
insb
add
xchg
add
aas
int
sbb
xor
xor
aas
xor
sub
xor
xor
pop
and
adc
and
aas
xor
adc
pop
xor
das
daa
xor
and
and
sbb
int
adc
and
insl
pop
jmp
jns
pop
or
cmp
xchg
pop
sub
pushf
sarb
mov
xchg
xchg
mov
cmp
and
and
lcall
mov
xor
pop
shlb
es
push
test
or
stos
aas
and
scas
leave
dec
aaa
shl
add
leave
frstor
loop
in
inc
jecxz
loop
repnz
or
and
in
inc
jecxz
sbb
mov
pop
and
sti
xor
lds
and
not
inc
ror
mov
stc
pusha
stc
test
cmpb
pushl
lea
jne
btc
xor
cmp
shl
mov
dec
add
shl
sbb
not
pusha
mov
pushf
bt
cmc
test
movb
pushf
lea
je
push
clc
sub
stc
call
call
jge
or
jmp
sbb
pop
call
jge
xor
or
roll
jecxz
notb
fdivs
shll
in
stos
pop
mov
lods
cmp
pop
das
nop
and
and
outsl
lea
sbb
insb
and
out
push
int3
sbb
out
xor
jmp
decl
es
xchg
and
fisubrl
mov
jg
daa
mov
shrl
jle
or
mov
mov
dec
daa
xchg
push
jmp
and
xchg
mov
hlt
fimuls
and
cmp
push
mov
or
stos
pop
shlb
push
pop
insb
sub
or
sbb
push
in
xor
shrb
add
fdivs
sbbl
jge
lods
push
fcompl
or
cmp
jge
lods
push
sbb
inc
icebp
jg
jmp
xchg
cmp
sub
mov
fimull
mov
jmp
add
sar
or
sbb
adc
inc
loopne
loop
and
xlat
aaa
clc
repz
pushf
das
or
push
pop
std
int
sbb
aad
jge
cs
mov
in
cld
mov
push
push
cmp
scas
mov
and
mov
dec
add
stc
mov
lock
pop
je
push
mov
cmp
sbb
incb
lret
shll
push
mov
pusha
mov
jmp
hlt
sarb
dec
mov
iret
jb
xlat
push
mov
daa
mov
mov
sbb
nop
mov
pushf
test
imul
icebp
ljmp
dec
inc
cmpsl
sbb
push
cltd
repnz
ja
arpl
iret
xchg
push
outsl
movsl
repz
jmp
faddp
aas
add
out
push
addb
fwait
mov
push
int3
jbe
sbb
cli
mov
jnp
cmpsb
or
push
addb
hlt
fisubl
and
outsb
and
shll
sub
jbe
sbb
nop
notl
mov
shlb
and
jno
test
in
push
adc
push
out
dec
adc
pushf
jnp
mov
in
test
add
sub
pop
test
dec
pop
sub
mov
and
push
sub
xchg
fwait
out
pop
jnp
xchg
pop
hlt
lea
lret
mov
stc
sbb
xlat
adc
push
insl
pop
adc
dec
addl
adc
test
outsb
cld
inc
call
xchg
adc
pushf
sbb
pop
insl
cmp
jmp
dec
add
jp
into
flds
mov
xor
rep
jne
ss
aaa
pusha
loop
sarl
insl
xchg
dec
es
pop
cltd
xor
ds
lock
sbb
in
mov
cmp
es
jbe
mov
inc
out
mov
mov
cs
sub
xchg
pop
ret
aas
dec
mov
lahf
mov
mov
push
pusha
lea
ja
call
lea
jo
jne
movsbw
movb
movsbw
movzbw
push
pusha
pop
lea
lea
call
btc
mov
pushf
cmc
cmpb
pushl
push
jmp
jg
into
sbb
nop
fidivl
mov
jmp
pop
stos
xchg
pop
call
je
lret
adc
lock
lods
fstpl
and
aas
pop
inc
xor
fcompl
lahf
and
mov
jns
dec
cltd
pop
mov
repz
jno
jle
jmp
jns
pop
std
mov
dec
add
pusha
stc
loopne
and
sub
movsl
cmp
mov
mov
pop
xchg
out
cmp
sbb
jo,pt
xlat
xchg
in
push
sbb
ljmp
ljmp
and
je
cmc
add
cmp
pushf
cmp
call
movl
pusha
mov
pushf
pushl
ret
mov
push
sbb
nop
adc
shrb
jne
sub
ja
or
jno
xchg
lock
mov
mov
and
jo
test
mov
xchg
sub
jmp
xchg
push
xchg
jnp
cmp
stc
xchg
cmp
cld
pop
insb
int
jp
pusha
adc
je
fsubr
sub
xchg
sub
mov
inc
sahf
xchg
push
sub
mov
cmp
fsubrs
int
cmp
scas
mov
idiv
mov
or
pop
and
lods
mov
inc
pop
std
clc
imul
movsb
jmp
mov
mov
cmpb
pusha
lea
jne
stc
sub
add
mov
neg
add
sar
mov
adc
mov
mov
bt
stc
test
pusha
pushf
pushf
lea
jmp
mov
jmp
pushl
lea
je
shl
rol
shr
bt
add
and
neg
mov
test
jmp
or
sbbl
mov
test
sub
push
adc
jno
lret
jp
mov
rcl
aad
clc
mov
dec
push
adc
xchg
sbb
lock
movsb
and
pop
ret
mov
mov
add
jns
lcall
addl
imul
insl
push
fisubrl
es
and
sub
pop
xchg
mov
and
je
xchg
pushf
pushf
lea
lea
call
sub
mov
clc
test
pushl
popl
cmc
pusha
cmp
push
pushf
pushl
pushf
lea
ja
stc
jmp
in
xlat
sbb
nop
jecxz
test
fsubl
mov
pop
shll
outsb
push
std
dec
aam
lcall
sub
in
mov
pop
in
push
jp
push
xchg
pusha
sub
jnp
outsl
sbb
test
out
push
mov
pop
mov
inc
in
cs
xchg
test
int
sbb
imul
mov
stc
out
pop
out
js
ret
jmp
cmc
mov
mov
clc
jmp
cmp
enter
aam
mov
out
cli
movsl
rcrl
gs
cld
ret
div
jbe
xorl
inc
iret
sub
sbb
cwtl
ret
cmp
sbb
dec
insb
xchg
iret
mov
movsb
ret
inc
push
jno
jbe
jns
xchg
loop
stos
pushf
sub
out
test
push
lret
aas
js
xor
je
jg
jns
add
xchg
sbb
out
push
jb
fsts
dec
call
jmp
hlt
jo
arpl
clc
and
mov
imul
ja
or
stc
lea
pusha
pop
cs
or
mov
dec
push
shlb
lock
jno
mov
and
inc
ds
mov
imul
jg
mov
lods
ljmp
jbe
enter
xor
pop
sub
popf
push
cmp
out
jae
in
es
inc
pop
loope
das
scas
test
sbb
jne
test
mov
push
pop
ret
dec
sub
std
mov
je
mov
xor
sbb
loopne
imul
fnsave
idivb
add
pusha
jmp
pusha
mov
movl
pusha
call
fadd
imul
nop
ja
sahf
sub
es
out
pop
inc
dec
adc
xor
pop
inc
sub
xchg
pop
fimuls
loope
imul
ljmp
inc
leave
xchg
mov
loop
xchg
and
dec
lahf
test
push
stc
iret
mov
in
push
jmp
clc
xchg
push
sub
pop
dec
mov
mov
sub
pop
jle
push
jmp
cmpb
sar
or
aam
stos
sarl
test
jno
dec
ud1
mov
inc
adc
push
sahf
sbb
xchg
divl
push
mov
jl
push
adc
add
mov
loope
iret
shrl
xor
inc
jl
rcrl
ja
inc
pop
cmpsl
addl
and
xlat
and
sbb
inc
movsl
loope
nop
fistl
scas
mov
jl
lahf
ljmp
shlb
fs
jno
cmpsl
pop
pop
aaa
aaa
fisubl
inc
cmp
add
bound
jl
dec
popa
gs
mov
inc
cld
mulb
stc
inc
sar
or
cwtl
xor
pusha
mov
push
and
in
jl
pop
sub
pop
add
sbb
cltd
adc
lret
xor
es
sti
pop
mov
ret
mov
add
adc
pop
push
clc
leave
push
sub
or
adc
pusha
jns
or
jnp
jmp
add
movsl
add
adc
mov
adc
mov
insb
sahf
int3
push
int
push
jmp
testl
call
pop
mov
cld
scas
in
int
jg
out
loop
js
iret
sbb
repz
mov
cmpsb
sti
ret
arpl
ja
orb
frstor
fmuls
or
xlat
bound
add
sub
ret
loop
push
mov
xorb
xchg
test
inc
or
xchg
xor
stos
pop
cmp
lds
xchg
and
int
ss
cmpsb
push
adc
and
out
cld
in
lcall
es
fidivrs
iret
xchg
aaa
out
mov
push
int
pop
add
push
inc
jp
mov
js
and
cmp
and
mov
dec
xchg
add
or
aas
lea
and
mov
pop
scas
xor
mov
pop
lea
scas
push
cmp
and
cltd
out
and
data16
dec
add
pushf
pop
loopne
arpl
sub
call
or
add
mov
sub
add
dec
loope
sbb
fwait
jns
data16
popa
es
mov
sbb
out
mov
pusha
cmpsl
xchg
int
inc
adc
nop
push
in
jne
ljmp
pop
sub
lea
lods
dec
cs
mov
fildl
add
dec
xorl
xchg
lahf
lods
int
inc
daa
jb
xlat
adc
loope
in
addr16
xchg
pop
lock
lods
mov
cltd
jb
or
push
or
xor
jl
hlt
sub
lret
ljmp
scas
mov
aas
les
push
dec
mov
jl
sbb
lret
mov
test
je
jl
mov
pop
xorl
data16
mov
mov
sarl
jge
les
xchg
adc
nop
lahf
jnp
dec
sbb
cltd
in
sbb
dec
aaa
jns
mov
arpl
aaa
jne
sub
push
daa
lods
push
dec
out
push
pop
cli
inc
aam
mov
jno
movsw
neg
addr16
and
popf
lds
adc
and
sbb
push
imul
mul
ds
test
mov
sbb
outsl
xlat
fldenv
cltd
pop
add
stos
cmp
cmpsl
sbb
arpl
cwtl
pop
mov
orb
xor
cmp
dec
sub
xor
sahf
arpl
cmc
mov
shrd
mov
mov
cmc
cmp
pushf
movb
movl
lea
jbe
or
mov
lea
xchg
clc
add
test
bswap
sar
sub
mov
btc
not
bsr
add
cmc
cmc
movl
shld
cmc
neg
shld
mov
call
lahf
xchg
jmp
cmp
rcrb
push
aas
xchg
sub
add
push
fld
push
sahf
cs
negl
mov
inc
insb
into
xchg
jno
pusha
mov
ja
pop
arpl
and
dec
icebp
scas
cld
mov
jg
cmpsl
xchg
inc
adc
lahf
lret
icebp
push
mov
shlb
sarb
shl
dec
into
xchg
jnp
inc
out
mov
shl
push
out
mov
cld
lods
xor
sbb
stos
adc
nop
mov
ffree
xor
adc
nop
dec
mov
push
cmp
daa
inc
aad
nop
aad
sbb
xlat
cmp
mov
mov
stc
xor
xor
outsb
fsts
adc
dec
inc
pop
insb
and
mov
add
cmp
add
cmp
and
mov
pop
push
lahf
lods
std
shrl
mov
mov
inc
enter
std
stos
aaa
jno
jge
aad
and
into
jae
and
mov
cld
xor
loop
loopne
stc
cmpsb
scas
lahf
pushf
pushf
pushf
pushf
inc
mov
movb
inc
mov
lea
jmp
bswap
movzwl
bswap
lea
pusha
mov
jmp
bswap
call
inc
inc
mov
inc
pshufw
cmpsl
mov
cs
shrl
push
pop
xor
jmp
push
lock
xchg
mov
mov
xorl
sbb
add
fisttpl
cmpsb
lcall
icebp
pusha
outsb
leave
iret
data16
in
dec
ret
jge
cwtl
stc
sbb
aam
mov
popf
lcall
cmp
inc
xchg
popf
lods
icebp
pusha
outsb
cmp
add
clc
cmp
mov
ss
pop
loope
or
and
push
cmc
por
xor
push
fisubrl
xchg
mov
bound
orb
pop
data16
lods
test
mov
aaa
add
xor
lods
aaa
inc
sbb
scas
clc
stos
or
loope
jne
imul
lds
pop
loop
xchg
mov
movsb
jle
sub
bound
mov
jns
cli
xchg
pushf
mov
bound
lods
shlb
cmp
shrb
bound
or
cld
and
test
or
xor
repz
xchg
nop
jge
inc
cs
dec
xor
jmp
mov
dec
in
pop
lcall
mov
lcall
outsl
jg
mov
cmp
pop
and
mov
and
add
lods
mov
push
adc
push
sbb
dec
xchg
movsb
dec
adc
pop
lahf
add
push
jg
fdivr
xchg
xor
lcall
push
mov
jns
int
and
notb
adc
jbe
and
xlat
scas
sbb
lods
pushf
ficomps
mov
insl
xchg
rolb
fsub
push
xor
and
jbe
nop
xor
push
aas
mov
shl
jae
adcl
nop
mov
push
sbb
inc
outsl
push
fwait
arpl
outsl
xchg
ja
mov
xchg
loope
mov
call
inc
mov
lea
jmp
loopne
in
push
jmp
stc
aad
sub
mov
xor
rep
decl
addl
sarb
fidivrl
mov
je
test
inc
mov
xchg
std
outsl
clc
add
or
lret
into
dec
shll
xor
nop
dec
xor
dec
insl
int
scas
cmp
cli
fs
pop
das
out
daa
or
jg
adc
jnp
gs
mov
orb
insl
jns
jl
icebp
cmp
data16
cmp
push
sub
popa
lds
stc
ds
movl
lea
je
test
cmp
add
push
cmp
jmp
pusha
stc
pushf
or
jmp
mov
lea
call
push
pushf
call
fldl
repnz
jl
fildl
mov
ret
push
sub
mov
push
hlt
movsb
mov
sti
xlat
sub
mull
adc
aas
fcomps
inc
mov
negl
or
mov
ficoms
mov
jmp
mov
xchg
xor
xchg
sbb
sbb
aam
and
jae
mov
fmul
lods
clc
cltd
aad
mov
jmp
jmp
notl
mov
inc
xor
cwtl
sbb
inc
push
push
rorl
nop
pushf
inc
inc
repnz
orl
test
jecxz
aas
clc
repnz
dec
cs
fistps
loop
xor
mov
int3
test
adc
stc
push
jle
or
sub
xor
xchg
daa
call
adcb
add
jecxz
negl
inc
sub
xor
mov
out
in
mov
or
pop
lcall
add
add
xchg
add
sbb
fs
add
add
sub
aam
add
add
aam
add
add
fwait
add
lcall
add
add
push
ss
add
add
add
add
testb
mov
lcall
add
add
xor
add
lcall
add
add
shlb
mov
sbb
pushf
lcall
add
add
push
cmpsl
add
lcall
add
add
mov
aam
add
add
add
add
rcrl
sbb
add
add
mov
loopne
or
nop
mov
inc
or
push
ret
xchg
lods
out
mov
inc
push
scas
stos
or
nop
fs
push
pop
sub
lret
test
lret
push
arpl
nop
sahf
pop
sub
mov
sbb
xchg
test
and
xchg
cmp
and
adcl
push
dec
pop
adc
movsb
push
xchg
jge
jmp
push
xor
andb
sbb
or
nop
int3
push
cmp
jo
push
and
ffree
cmp
jg
pop
arpl
cmp
lret
je
cld
clc
popa
adc
inc
rorb
push
lods
add
add
stos
adc
pusha
mov
pop
cmp
and
pop
mov
or
xchg
out
enter
mov
out
movsl
ds
cmp
in
mov
fcmovbe
bnd
stos
and
mov
addb
fisubs
xchg
xchg
lcall
nop
stos
fwait
add
nop
adc
stos
xor
xchg
push
pop
inc
lds
aam
push
jae
shll
and
leave
popa
insl
das
aas
push
add
repnz
lds
xor
mov
rcll
loop
call
mov
mov
sbb
inc
mov
out
aam
and
sbb
fsubrp
stc
pop
movsl
or
xchg
mov
in
cmp
xor
jmp
mov
cli
arpl
pop
mov
stc
loop
incb
push
mov
jb
popa
je
pop
push
jmp
mov
gs
cmpsb
scas
fisubrl
jmp
testb
out
sbb
xchg
mov
test
push
mov
adc
dec
xchg
fadds
sub
ret
nop
filds
lret
xchg
out
add
into
mov
cs
rcll
xchg
out
leave
and
fbstp
lods
hlt
sub
adc
imul
fldenv
imul
cmp
xor
jae
sbb
imul
push
add
mov
cmp
lret
mov
nop
xchg
lock
movsb
iret
sbb
nop
pop
movsb
jo
call
and
aaa
add
in
out
jne
or
nop
inc
xorl
or
lret
ja
jb
push
test
fadds
enter
pop
mov
dec
or
cld
stos
push
inc
call
es
mov
mov
inc
cli
mov
push
adc
imul
or
pop
mov
hlt
loopne
int
test
shrb
sti
sbb
sub
mov
mov
fucom
mov
negl
fwait
ret
jno
sub
sar
and
fs
jmp
leave
mov
or
nop
or
sti
cmpsl
adc
popa
pop
sub
xorl
dec
rcll
fcoml
and
fildl
mov
dec
or
xchg
push
dec
push
fwait
add
rorb
imul
insl
inc
stos
add
outsb
or
scas
inc
aas
mov
loop
jp
adc
lock
loop
je
xor
mov
add
es
out
fnclex
imul
pop
js
dec
stos
push
ds
arpl
mov
movl
movw
pusha
jmp
call
sub
mov
pusha
lea
call
jmp
cmpsb
sub
in
cli
add
mov
or
adc
jmp
xchg
mov
in
test
js
push
or
ret
lahf
mov
add
popf
mov
lods
test
sub
inc
daa
lahf
and
sahf
fwait
dec
inc
movsl
cltd
pop
shrb
jl
or
push
incb
in
fstp
cmpsb
clc
hlt
loope
mov
jmp
dec
xchg
sbb
icebp
fisubl
das
jnp
mov
subb
lods
xchg
mov
nop
and
pop
pop
mov
movsl
xchg
or
add
mov
push
cmc
pop
rorl
shlb
adcb
in
pop
clc
rolb
inc
jle
and
mov
daa
icebp
dec
cmpsb
and
push
int
sbb
loopne
xor
dec
arpl
nop
xchg
dec
cmp
or
xchg
push
hlt
cmp
movsl
sub
jnp
pop
int
fidivl
inc
mov
fisttpll
nop
mov
orb
sub
mov
andb
jns
int3
push
pop
cmp
push
fistps
jae
mov
push
adc
ljmp
sbb
mov
xor
jecxz
enter
jl
iret
icebp
adc
push
pushf
cmpsl
add
cwtl
mov
ret
test
arpl
and
dec
xor
ret
test
add
clc
mov
cmp
js
or
imul
add
and
sub
call
inc
pop
jl
jmp
mov
in
stc
mov
push
mov
adc
jg
push
enter
jle
loopne
cmp
stos
sbb
mov
push
jae
sarb
sub
rcrb
gs
dec
aam
jns
lret
jmp
icebp
fiadds
movsl
cmpsl
add
pop
out
dec
mov
andl
mov
ret
cwtl
pop
in
nop
sbb
pop
aas
sub
jmp
mov
ret
add
dec
adc
cmpsl
push
cld
call
cmpb
push
js
sti
notb
or
or
xor
mov
pop
ja
mov
pop
xchg
xor
xchg
pop
mov
cmpsb
jae
xchg
roll
add
out
pop
dec
es
scas
les
outsb
xor
test
out
scas
in
mov
scas
sbb
call
lret
icebp
xlat
popf
ret
sub
xchg
cld
mov
mov
jmp
ror
or
and
or
add
setl
and
mov
or
pushf
and
mov
cmc
bt
stc
repnz
pushf
lea
jne
mov
movb
mov
movzbw
pushf
call
pushf
pushl
mov
lea
jae
push
push
pushf
push
lea
jne
push
pushf
stos
mov
push
pusha
push
lea
jmp
sub
sbb
jecxz
jecxz
push
cmp
in
out
outsl
faddp
push
add
nop
or
pop
cmp
sar
and
mov
xchg
xor
jne
icebp
ds
add
ljmp
sbb
ljmp
push
adc
lcall
aaa
mov
jno
or
test
pop
push
mov
cwtl
inc
mov
and
jecxz
mov
lret
jne
add
xor
inc
addb
out
mov
jle
in
adc
rclb
mov
jnp
dec
into
je
mov
pop
xor
es
movb
add
nop
xchg
outsb
aaa
ret
mov
aad
dec
subl
loop
imul
lahf
pushf
mov
push
sahf
jmp
inc
lret
xchg
push
inc
lods
inc
mov
sti
aam
test
lret
outsl
dec
fists
outsl
stc
mov
iret
test
push
pop
jp
push
lcall
pop
sbb
outsl
inc
mov
pushf
xchg
pop
test
rcrb
inc
dec
mov
mov
cmpsb
xchg
sbb
sbb
lods
add
adc
mov
inc
jno
cmc
out
gs
loop
repz
xor
hlt
jecxz
xchg
or
lods
test
les
sbb
mov
dec
push
outsl
jnp
sub
jae
shl
lahf
mov
mov
pushf
push
fildll
dec
mov
mov
xchg
aad
mov
sti
lret
and
jae
xchg
sub
stos
ret
inc
cmpsl
jae
aas
pop
cmpsb
out
popa
cli
hlt
mov
enter
test
sub
adc
gs
imul
addr16
or
and
stos
nop
mov
aaa
cltd
xchg
test
cmp
subl
bswap
bswap
btr
mov
push
test
pushf
cmp
movw
pushf
jmp
call
mov
nop
cltd
je
dec
xchg
mov
push
cmp
xor
ljmp
mov
rclb
fwait
and
test
inc
loopne
popa
jg
cmpsl
mov
in
imul
xor
bound
push
in
out
ss
out
or
pop
sbb
loopne
jo
push
pop
sbb
ss
cmp
divb
filds
and
or
ss
and
inc
cmp
imul
fwait
aad
subl
cmp
movsl
or
xor
cmp
add
and
add
scas
push
add
nop
pop
sti
movsl
into
pop
in
fld
mov
or
cmp
cwtl
mov
xchg
xor
dec
mulb
popf
cmp
jecxz
clc
pop
pop
das
rorb
filds
mov
mov
fnstenv
pop
cmpsb
adc
xchg
jns
test
aam
and
dec
pop
repz
fisttpl
adc
pop
jle
adc
aas
push
mov
sahf
fptan
add
test
xor
fwait
stos
jb
jg
lods
push
cltd
aas
inc
mov
sbb
incb
dec
and
pushf
pusha
lea
jae
cmp
xadd
mov
mov
rcl
test
bt
mov
inc
shld
mov
push
pushf
xor
test
repnz
call
xor
inc
add
nop
dec
ljmp
adc
dec
mov
mov
sub
bound
daa
push
xchg
and
repz
cmp
dec
mov
pop
mov
push
xchg
pop
cmp
aas
add
jecxz
xor
add
ret
ja
sbb
mov
enter
popa
mov
popf
fsts
adc
clc
orb
push
mov
jmp
jbe
jmp
adc
cld
insb
jb
faddp
sub
aaa
mov
xorb
arpl
add
stc
orl
or
add
push
loope
cmp
xor
adcb
dec
daa
adc
cli
mov
pop
das
mov
cltd
push
add
mov
scas
cmp
cmpsb
pop
or
das
pop
sbbl
nop
jp
cmp
dec
push
ret
jne
in
pop
sbbl
in
icebp
stc
jmp
jno
mov
loope
and
and
pop
int
ljmp
daa
repnz
call
subl
mov
adc
scas
out
xor
mov
or
jecxz
jl
outsb
xchg
adc
popa
in
sbb
out
pushf
mov
push
in
pop
jmp
xchg
sbb
in
sub
scas
jl
add
in
test
cmc
push
mov
inc
gs
push
cmp
mov
cmpsb
insb
mov
popl
or
cmc
fnstsw
ljmp
cmp
fisubl
jp
pop
sub
add
sbb
fwait
test
inc
out
and
cmpsl
jle
push
popf
nop
lret
fcoml
arpl
mov
sub
lcall
movsb
jl
jmp
int3
popf
push
jo
faddl
jb
and
fs
dec
pop
cltd
bound
pusha
data16
cmp
in
adc
inc
dec
xchg
sarb
ret
arpl
jmp
ljmp
popf
call
sub
loope
adc
sbb
data16
pop
mov
fdivl
adc
call
mov
xchg
xchg
stos
mov
popf
sbb
fnstenv
sub
push
push
test
and
lea
xor
and
jno
jg
pushf
stc
or
sub
andl
adc
and
push
cli
je
or
pop
cs
lea
je
pushf
cmp
pushf
add
test
stc
cmp
pusha
jmp
daa
insb
pop
std
ljmp
sub
inc
int
inc
lods
aad
dec
sbb
fwait
sub
adc
popa
pop
movsb
das
dec
xchg
mov
mov
cwtl
pop
stos
or
and
pop
jecxz
dec
nop
ds
fldl
adc
sbb
sahf
loope
mov
mov
pop
mov
js
pop
add
shlb
inc
loope
mov
sar
lret
mov
push
add
push
faddp
leave
addl
test
shrl
lds
ljmp
lret
mov
and
popf
lret
jge
jecxz
call
push
mov
and
lret
gs
repz
in
mov
fdivl
pop
fcoms
out
mov
add
xchg
in
push
stos
gs
test
ja
sub
out
add
add
nop
push
out
sub
mov
jmp
aam
out
fnsave
test
and
fdivs
xor
jbe
out
icebp
fidivs
mov
jg
inc
sbb
mov
push
lret
ja
pushf
cmp
adc
test
jbe
jecxz
das
xchg
popf
cmp
push
sbb
pushf
call
mov
jmp
inc
mov
cld
ljmp
jnp
scas
sti
les
inc
push
aaa
aaa
sahf
mov
mov
cltd
gs
fistps
dec
sbb
sub
loopne
pop
inc
mov
xchg
inc
sbb
add
aas
sub
fisubs
das
push
or
testl
push
pushf
sbbl
pop
clc
pop
sub
movsl
lea
test
les
jo
insl
mov
lret
adc
adc
test
adc
movsb
insl
cli
fadds
testw
xor
push
test
mov
and
enter
js
pop
add
sub
adc
sub
repnz
lcall
sub
jecxz
in
xor
mov
xlat
and
call
sub
jecxz
jecxz
mov
mov
testb
outsl
sbb
push
call
sub
out
in
loop
lods
lods
out
outsb
loop
lods
cs
out
loop
lods
scas
out
outsl
loop
lods
das
out
scas
loop
lods
sub
and
out
test
out
mov
push
mov
and
cltd
cs
das
dec
sub
or
data16
mov
or
sub
and
jle
lods
push
sub
and
jle
cs
test
jle
sub
xor
sbb
dec
cs
adc
fs
int
sub
sbb
jnp
loop
loop
xor
enter
loopne
lock
inc
and
push
fmuls
jns
inc
sub
add
or
sub
xor
sbb
and
sub
pushf
mov
aad
xor
cli
adc
adc
stos
xchg
and
insb
push
adc
sbb
or
cmp
lods
sbb
jle
xchg
adc
inc
ret
rolb
sub
and
das
arpl
mov
jecxz
cltd
sub
adc
sbb
or
mov
rcrl
sarl
outsl
xchg
or
test
bswap
and
or
repz
add
ret
add
adc
or
dec
or
in
dec
xchg
push
adc
or
dec
setb
add
adc
or
dec
or
dec
out
add
stos
ret
or
add
ret
xchg
addl
in
or
dec
xchg
sbb
push
mov
imul
into
int3
ret
pop
add
mov
sbb
out
arpl
or
xchg
push
scas
arpl
sbb
stos
dec
call
sahf
sbb
into
and
sub
movsb
sub
jg
aam
leave
xchg
int
or
dec
sbb
rcl
mov
stos
xchg
xor
adc
push
leave
xchg
dec
adc
insl
add
in
mov
or
push
xchg
mov
paddsb
or
push
adc
adc
xor
fisubl
in
ljmp
lods
cmp
dec
ds
shrl
dec
sub
popf
xchg
xchg
sbb
dec
adcl
ret
and
push
xor
lret
subl
and
std
test
sub
xor
or
or
jmp
cs
dec
insl
rcr
in
mov
stos
mov
and
mov
or
sub
or
lcall
sbb
add
pop
mov
call
dec
cs
add
lods
adc
add
cld
das
jmp
ret
ror
xor
sub
sub
loop
or
inc
mov
in
in
xchg
ljmp
stos
or
inc
insl
xchg
stos
stos
add
in
lret
adc
or
push
out
ret
ficoml
dec
xchg
lcall
mov
in
das
xchg
jae
scas
or
or
cmp
jnp
sub
push
xchg
mov
mov
ret
adc
or
xor
dec
in
loop
int
sub
andb
adc
or
cs
or
push
add
adc
or
out
out
xchg
pop
add
in
pop
xchg
dec
adc
ret
pop
xchg
add
enter
jns
mov
int
bound
in
mov
add
mov
stc
add
sub
cmp
fidivl
cmp
cmp
cwtl
or
sbb
sub
jecxz
scas
ret
test
aas
ljmp
add
lock
ljmp
sub
sub
add
test
iret
aam
fcoml
dec
cmp
loop
cmp
jbe
movsl
subl
in
aaa
xorb
js
sub
ret
pop
mov
enter
into
add
and
loop
iret
mov
fwait
stos
jb
cmp
imul
sbb
dec
ds
or
inc
mov
sbb
adc
inc
stos
or
cmp
dec
scas
scas
or
scas
fsts
mov
loop
mov
jecxz
loop
testl
mov
xor
sub
test
stos
mov
add
adc
stos
addr16
scas
push
sbb
fcomi
out
mov
repnz
loop
add
push
es
add
out
scas
cmp
dec
and
lods
xchg
cs
and
dec
jae
dec
ss
cs
or
jecxz
lods
mov
or
xor
add
dec
orb
aaa
sar
sub
stos
cwtl
aad
and
and
push
pop
imul
orl
aaa
mov
loop
xor
out
lahf
xchg
adc
xor
fldcw
stos
insb
pushf
lret
adc
arpl
stos
sarl
dec
out
ret
mov
adc
pop
addr16
xchg
test
mov
mov
stos
imull
adc
push
push
shr
adc
repz
movsb
xchg
aad
mov
arpl
mov
sbb
mov
stos
pop
lock
push
lods
sbb
adc
into
push
outsl
inc
lods
or
cmp
sbb
dec
stos
push
push
jo
lds
das
fstpl
mov
sti
lret
or
xchg
sub
test
data16
loop
in
pop
lods
xor
arpl
stos
and
out
stc
adc
xlat
inc
stos
imull
sub
push
int3
stos
or
cmc
stos
adc
push
rep
les
outsl
dec
stos
in
nop
push
sub
test
test
stos
scas
sub
dec
imul
das
int
adc
adc
out
out
sbb
imul
test
pop
das
ljmp
mov
xor
fcoml
das
imul
mov
fwait
sub
stos
mov
or
stos
push
lods
xchg
out
int3
mov
fwait
stos
or
stos
and
inc
add
sbb
mov
or
xchg
lods
inc
and
repz
add
insb
push
loop
adc
push
push
lods
mov
das
cmovns
sbb
adc
aad
sbb
sbb
sub
adc
jns
and
stos
inc
in
lods
add
scas
out
aas
in
int3
stos
addb
mov
dec
xor
stos
jbe
int
out
stos
mov
adc
outsb
push
or
sub
add
or
in
ret
in
je
sub
inc
stos
sti
in
scas
stos
fisttpll
lods
fwait
stos
xlat
in
adc
outsb
inc
push
arpl
mov
push
int3
sub
xchg
sbb
xchg
ljmp
data16
ljmp
mov
scas
dec
ljmp
in
adcl
lods
push
lcall
add
in
imul
fwait
xor
cmp
lret
add
jmp
cmp
bound
jp
ljmp
sub
ljmp
push
nop
add
jecxz
dec
adc
or
in
lea
iret
xchg
dec
adc
or
jmp
cwtl
adc
sub
testb
xlat
in
loop
xlat
scas
mov
inc
jmp
mov
leave
or
scas
sbbb
push
out
inc
adc
int
sub
arpl
jecxz
mov
xor
out
ret
or
cmp
lret
cli
mov
hlt
jp
xchg
dec
stos
jb
iret
in
dec
xchg
dec
adc
enter
xchg
push
mov
mov
mov
mov
xchg
adcl
xchg
xchg
dec
add
adc
or
push
add
in
dec
xchg
rorl
mov
jecxz
inc
cmpsb
mov
fildl
aad
mov
aaa
popl
cld
sub
jno
andl
gs
mov
mov
ljmp
in
push
loop
sbb
inc
sub
adc
add
xchg
dec
fmul
out
aas
outsl
addb
enter
push
xor
clc
push
insl
add
out
sub
sub
adcb
and
sub
mov
ret
ficoms
inc
xchg
dec
adc
bound
insb
iret
sub
push
int3
push
ljmp
dec
xor
sbb
push
add
push
dec
cmp
insl
or
test
sub
jb
jecxz
add
adc
inc
xor
mov
mov
and
ljmp
xchg
insl
add
out
scas
jmp
sub
add
fimull
arpl
mov
xor
out
sbb
xor
and
sbb
xchg
ljmp
add
in
repnz
cli
adc
lcall
xchg
mov
push
inc
push
jnp
and
push
add
push
jecxz
jmp
shrl
push
repz
and
je
fs
sub
bound
jp
loop
adc
mov
ljmp
or
push
sub
arpl
ret
xchg
sub
mov
in
sub
ljmp
jecxz
mov
pusha
or
fsubp
jmp
lcall
out
mov
cs
mov
imul
push
xchg
stos
pushf
xchg
ljmp
or
iret
notl
call
xchg
dec
lahf
xchg
xchg
in
pop
xchg
inc
adc
pusha
js
xor
and
xchg
fstl
lds
in
lods
sub
shll
subb
push
pop
fstpt
xchg
mov
ret
pop
or
outsb
mov
cs
adc
cmp
mov
pop
scas
mov
bound
add
imul
dec
cs
ljmp
rorb
lods
popf
in
enter
add
lea
xor
adc
test
cmc
in
insl
repz
repnz
testl
sbb
daa
loop
xor
add
mov
sub
pop
scas
mov
pushf
aad
in
xor
pop
dec
cmpsb
sub
sub
scas
test
push
sub
sub
xchg
fwait
scas
dec
xchg
xlat
std
mov
xchg
mov
insb
jmp
adc
mov
arpl
cmp
lods
sti
cli
cmp
pop
push
sbb
in
fsubrl
sub
jl
xchg
out
xor
sub
repnz
cmp
xchg
call
shrl
popf
or
xor
loope
dec
subl
bound
xchg
pop
jecxz
sub
popf
test
mov
loop
loop
lods
xor
add
add
shlb
sbb
cmpsl
sub
int
mov
lods
add
idivb
leave
rcrb
add
adc
inc
pop
dec
cmp
pop
mov
sub
lods
je
ja
insb
mov
cs
stos
testb
lods
pop
mov
sub
mov
lea
insl
shll
imul
mov
fstpt
leave
add
test
jmp
imul
dec
inc
insl
ss
cmp
sarl
and
call
push
sub
cmp
xlat
int3
dec
sbb
scas
and
lods
mov
cs
mov
push
or
jne
add
or
xor
loope
inc
lods
sub
pop
es
inc
ret
push
ret
test
jle
adc
adc
and
mov
jg
pop
jmp
sahf
in
mov
ret
jne
push
out
callw
arpl
dec
cmp
shr
or
shlb
sub
or
mov
mov
scas
jae
and
jnp
cli
test
gs
sbb
add
add
sub
dec
dec
or
jae
push
cltd
in
int3
sbb
push
sti
imul
xor
cmp
and
add
scas
andl
in
dec
dec
cs
push
mov
cmp
jecxz
jg
outsl
add
fwait
mov
popa
add
icebp
test
jno
enter
stos
jmp
int
adc
xorb
inc
adc
xchg
fwait
mov
xor
cmp
cli
inc
xor
ret
xchg
mov
sbbb
js
arpl
sub
lea
cmp
pushf
xchg
test
addr16
cmp
mov
push
jne
and
inc
sbb
sub
aas
sub
cmp
push
mov
ja
adc
mov
les
in
pop
mov
cmpsl
xchg
cmp
jl
xchg
jecxz
arpl
adc
add
push
and
add
inc
push
int
mov
adcb
fldl
movsb
xchg
ret
aaa
ret
jmp
mov
ljmp
pop
gs
in
lahf
cmpb
and
inc
lea
adc
movsb
sub
and
nop
mov
ret
test
outsl
shrb
or
add
sbb
fwait
inc
pop
shlb
cmp
xor
call
orl
push
cmp
gs
sahf
in
das
sbb
shrl
jmp
cmp
pop
xor
aas
cld
jnp
inc
pushf
imul
orb
arpl
loope
lcall
aas
ret
add
imul
inc
push
or
pop
ficomps
xor
fsts
jp
stos
mov
call
das
mov
xchg
push
xor
std
add
insb
jecxz
lret
ret
xor
movsl
cmp
imul
mov
or
fdivp
in
ljmp
lods
inc
jp
popa
cwtl
imul
gs
hlt
mov
pop
pop
cs
pop
mov
les
push
push
aam
jmp
mov
aam
jl
or
test
xor
aam
stos
test
into
jno
jmp
xor
lods
jbe
xor
xor
push
add
xchg
jecxz
xchg
insb
in
dec
lret
dec
js
enter
mov
adc
ljmp
mov
push
int3
jno
lods
jb
sbb
call
popa
aas
adc
or
push
inc
loop
mov
mov
cltd
icebp
sbb
imul
push
xor
mov
jg
outsb
cmp
and
lcall
incb
and
ret
jmp
push
mov
sbb
iret
pop
hlt
mov
mov
sub
bound
jmp
sbb
stos
cmc
enter
sbb
enter
andb
in
adc
mov
test
and
sub
sar
adc
lods
xchg
hlt
test
xchg
mov
push
and
push
gs
cmp
cld
xchg
lcall
mov
sbb
jmp
or
std
stos
rclb
cltd
imul
xchg
mov
jb
loop
leave
imul
xchg
sbb
bnd
and
notl
sbb
mov
out
sub
pop
iret
pushf
push
scas
test
call
jmp
cmc
scas
call
sub
call
shr
call
mul
in
in
mov
dec
ljmp
push
or
or
addb
pusha
add
mov
cmp
sbb
mov
mov
sub
add
movsl
and
stos
cmp
sbb
xchg
mov
and
aad
or
nop
ret
cwtl
jg
insl
sbb
or
mov
iret
daa
xchg
ret
fidivrl
clc
jg
or
popf
jae
loope
jmp
jge
movsb
das
js
lcall
je
lods
or
loope
iret
or
mov
popa
mov
jae
lret
jp
dec
es
sub
movsb
adc
and
jmp
test
addr16
test
jle
fcmovnb
cli
fwait
imul
rolb
lods
sub
sub
adc
popf
push
loop
sub
lret
mov
movsb
mov
mov
and
cld
cmp
mov
pop
adc
sbb
jbe
popa
movsl
jns
mov
gs
jge
mov
test
loop
jmp
aas
mov
orb
sub
adc
loop
jnp
ds
leave
stc
call
xor
in
test
and
hlt
xor
test
or
lds
add
xor
gs
loop
test
icebp
jae
push
push
shr
mov
sbb
xchg
mov
xchg
sub
in
cmp
mov
loop
push
jns
cmp
test
jae
data16
gs
cli
loop
inc
ljmp
fimuls
and
insb
leave
ret
push
or
pop
aas
xorb
xlat
jbe
jl
jmp
or
inc
add
arpl
daa
mov
cld
rcll
lods
cmpsl
and
cmp
jae
ljmp
cmpb
stc
cmp
fsubp
jae
sbb
xor
add
xor
mov
in
add
cmc
xorl
inc
pushf
popf
les
cmp
sbb
ret
ljmp
push
xchg
or
mov
test
jecxz
xchg
dec
add
xchg
repnz
adc
dec
mov
pushf
mov
test
shlb
sbb
ljmp
imul
hlt
sub
mov
sbb
pop
sub
testb
push
cmp
mov
and
movsb
lret
sbb
push
test
mov
add
mov
popf
xor
test
add
add
push
ds
dec
cmpb
lea
xchg
pushf
rclb
push
lock
jl
loop
jb
or
xor
cmp
mov
in
andb
mov
push
mov
push
xor
ffreep
andl
fld
lret
lds
and
insl
scas
pop
shl
cwtl
mov
mov
shlb
iret
mov
movb
cmp
aaa
mov
repnz
rcl
jo
sub
push
ljmp
fwait
push
cmp
stc
adc
jmp
mov
adc
ficomps
scas
std
jnp
pushf
add
adc
lcall
lods
je
idivb
cld
test
fnstcw
imul
adc
dec
lea
sub
pop
and
in
addb
mov
add
and
sub
pop
fcomps
sbb
mov
shrb
sbb
sbb
outsl
add
call
popf
es
sub
add
ficoms
fisttps
aam
inc
mov
lock
cs
and
push
repz
mov
xchg
push
push
adc
add
in
mov
adc
je
icebp
gs
sub
cmp
jno
push
mov
fwait
icebp
adc
xchg
jmp
loopne
xchg
pop
pop
sub
stos
or
fdivr
push
je
je
in
xchg
mov
mov
push
jmp
lret
cmp
rclb
mov
ja
sar
jno
cld
pop
gs
lods
mov
push
sti
subl
in
jmp
std
lcall
xchg
ss
test
in
xchg
and
cltd
je
xor
addb
xchg
mov
sub
int
jge
mov
xlat
lods
movsb
or
cli
jnp
inc
in
sub
sbb
les
cli
lods
fsubr
and
lea
xor
loop
xor
call
leave
lahf
mov
adc
or
in
ret
imul
ror
add
dec
lods
lea
outsl
jg
mov
cmp
cmpsb
jecxz
loopne
push
add
mov
xchg
stos
inc
dec
xor
testb
mov
pop
hlt
subb
fs
inc
dec
ljmp
mov
das
cli
call
fwait
mov
pop
inc
push
jne
scas
xor
fwait
ret
arpl
and
ret
sbb
pop
popf
int3
cmp
imul
pushf
repnz
or
das
aad
dec
sub
sbb
sahf
mov
pop
imul
add
int3
lods
dec
push
add
mov
xor
jo
lret
testb
xchg
scas
xor
aam
sub
mov
arpl
xchg
sub
mov
mov
fwait
mov
mov
repz
push
add
sbb
scas
repz
imul
push
add
sbb
scas
repz
arpl
movsb
xchg
out
divb
imul
push
mov
push
pop
jecxz
jnp
inc
or
pushf
jecxz
adc
sbb
jo
aam
in
or
mov
out
lods
out
or
and
mov
scas
lahf
cs
or
outsb
mov
sub
icebp
mov
sub
call
scas
sbb
out
out
or
sub
push
into
ds
arpl
paddb
in
jnp
or
ret
lods
sbb
out
cld
or
sub
scas
stos
dec
fisubl
or
sub
stos
sub
adc
shrb
sbb
ret
mov
mov
ss
mov
mov
jecxz
ds
xchg
ss
scas
jge
mov
or
sbb
sub
std
jmp
push
sbb
call
push
adc
add
test
sbb
call
dec
mov
sub
stos
call
pop
dec
imul
ss
pop
xor
stos
leave
fisubrl
das
or
loop
push
cmp
pop
or
or
sbb
sub
test
sub
das
fucom
sbb
sub
mov
shrb
add
dec
ret
sbb
sub
lods
or
dec
ss
das
lods
xchg
cmp
fisubl
imul
cld
scas
call
sub
out
ljmp
sub
stos
call
lods
mov
push
sbb
or
arpl
sbb
or
sbb
adc
lahf
pop
sub
scas
dec
int
push
ret
frstor
scas
inc
mov
ja
pop
in
sbb
jmp
dec
mov
stos
jecxz
sub
sub
scas
push
and
test
sbbb
cmp
inc
sub
lock
int3
into
sbb
call
sub
dec
mov
int
sub
pop
push
imul
dec
into
sbb
call
outsl
sbb
or
scas
into
sub
call
insb
stos
mov
mov
ljmp
sbb
loop
into
sub
mov
js
out
test
xchg
mov
lret
and
or
dec
sub
push
mov
inc
stos
ss
pop
scas
cli
fldl
pop
and
lea
into
add
pop
es
mov
cs
popf
pusha
and
fwait
mov
xor
shll
add
xorb
jmp
or
jecxz
imulb
dec
pop
into
and
fisttpll
mov
fdivrl
sbb
xor
and
int3
insb
jne
jns
lret
in
add
push
and
cmpsb
fmull
dec
add
mov
insl
mov
fidivs
cli
loop
mov
jl
lcall
add
jbe
pop
cs
fsubrl
test
mov
sub
popf
jmp
add
inc
lret
test
clc
jecxz
mov
lods
data16
mov
xlat
push
das
imul
jmp
jp
fsubrs
cmc
or
mov
mov
jmp
les
stos
cld
sub
mov
pop
sbb
iret
xchg
jmp
loopne
scas
sub
arpl
daa
fnclex
mov
adc
xchg
lock
in
cs
adc
fs
jmp
stos
scas
adc
sub
push
mov
fwait
add
stos
loop
sbb
mov
mov
test
jmp
sbb
xchg
mov
sbb
sbb
sbb
mov
out
sbb
mov
imul
xchg
test
fdivrl
cmp
scas
lods
sub
jmp
and
push
mov
outsb
in
sbb
dec
lods
clc
xchg
mov
mov
xchg
outsl
mov
test
test
mov
sbb
inc
ss
insb
sub
mov
and
mov
mov
lock
mov
lock
out
loop
mov
ret
and
xor
adc
xchg
mov
or
mov
lock
das
sub
xor
push
and
xchg
xor
sbb
addl
xor
insb
scas
and
sbb
dec
lods
sbb
push
sub
je
outsb
imul
test
cmp
lods
sub
adc
fadds
call
inc
enter
dec
jne
loop
enter
arpl
jecxz
mov
int
sub
xchg
lods
xchg
lods
stos
sbb
loop
movlps
stos
dec
cmp
loop,pn
enter
cmpsb
cmp
xchg
enter
jmp
xchg
xchg
into
and
enter
mov
stos
mov
cmp
push
push
xor
orb
loop
setnp
push
ret
sub
loop
scas
sub
ret
sub
sub
loop
into
cmp
movsl
cmp
sub
out
mov
out
push
scas
lods
cwtl
fstpt
out
int
cmp
jmp
mov
into
add
sub
or
out
or
scas
sbb
out
jmp
mov
sub
sub
fwait
push
sub
jnp
int3
ss
loop
push
mov
std
push
xchg
push
add
mov
mov
xchg
pushf
aaa
xor
aas
dec
outsl
cmp
rcl
fidivl
cmp
test
loop
or
mov
sub
sub
push
imull
mov
push
les
ss
out
push
icebp
mov
int3
test
sahf
test
inc
mov
icebp
sbb
xchg
pop
movsl
ret
out
cmp
ds
or
es
loop
sub
loopne
and
sbb
out
jg
test
sub
xor
sub
out
jge
nop
fisubrl
sub
or
xchg
mov
loop
aaa
imul
pop
ds
sub
scas
lods
out
push
or
and
std
adc
add
sub
or
xchg
cs
sbb
mov
xor
shlb
call
sub
jbe
inc
xor
leave
dec
jns
fisubrl
call
das
mov
test
lods
stos
xor
jecxz
add
lods
push
add
stos
imul
out
push
or
sub
insb
sub
mov
add
movsb
xchg
outsl
stos
int3
ret
add
sub
mov
fldt
imul
sub
scas
jg,pn
jno
insl
or
xchg
mov
push
add
stos
sub
sub
or
in
loop
ds
sub
scas
arpl
dec
sbb
xchg
call
push
add
sub
lods
call
jecxz
pop
lret
in
inc
adc
or
fcmove
mov
call
fcoms
sub
pop
xchg
cmp
addr16
fidivrs
mov
or
cmpsl
sbb
adc
sbb
xor
cmp
xorb
pusha
add
iret
scas
scas
call
jp
dec
ret
pushf
lds
sbb
data16
mulb
test
scas
xor
sbb
add
in
ss
mov
xlat
hlt
jnp
xor
xor
das
add
sub
fisubl
ret
fildll
xchg
push
jl
arpl
lods
repz
jne
sbbl
iret
dec
repnz
sub
loop
das
rolb
lea
sub
mov
ret
xor
or
test
arpl
add
in
mov
jle
jg
sub
arpl
fwait
hlt
loop
subb
jmp
adc
adc
sub
pop
ficomps
in
dec
adcl
ss
push
cmpsb
int3
fstl
dec
or
inc
dec
cwtl
cmp
call
cmp
ret
fimull
stos
mov
stos
push
mov
lcall
mov
mov
test
xchg
out
dec
mov
cltd
lea
arpl
or
mov
lahf
movsb
jmp
ret
fsubrl
lods
jno
lcall
add
pop
xor
orb
mov
test
fistpll
adcb
das
mov
ss
sbb
cmp
mov
add
adc
inc
in
xchg
sub
cwtl
jp
xlat
dec
mov
xchg
xchg
daa
inc
add
cmp
test
cmpb
lock
test
movsb
jmp
and
sbb
lds
andl
mov
add
bound
int3
bound
inc
jmp
adc
movsl
in
pushf
int
dec
xchg
loop
cmp
lods
add
xor
or
add
and
fadd
lods
lcall
neg
mov
mov
jnp
dec
cltd
mov
jmp
outsb
sub
jmp
jae
loop
push
shl
aaa
cmpsb
lods
push
jge
ror
jp
cld
stos
xor
add
das
inc
adc
mov
sub
sub
sbb
por
outsl
mov
bound
js
push
repnz
pop
outsl
loope
xor
jge
inc
je
sbb
dec
jae
cmp
stos
ret
and
mov
lret
ret
mov
push
push
mov
out
iret
sub
sub
adc
pop
push
es
xchg
push
sbb
jmp
jnp
pushf
xchg
xchg
jmp
in
or
adc
in
or
push
andb
ss
mov
or
lret
pop
callw
inc
shrb
jns
call
jmp
lods
jns
in
adc
cld
jecxz
jmp
hlt
jge
or
icebp
popf
xchg
sub
adcl
pop
andb
push
in
in
outsb
jecxz
ds
popf
ds
test
add
inc
dec
in
mov
insl
in
out
jecxz
push
lods
clc
fnstenv
mov
lea
sbb
sbb
outsb
dec
jmp
dec
adc
xchg
jae
out
addb
into
das
addl
mov
xchg
and
fwait
hlt
addb
out
movsb
jo
scas
inc
mov
or
lods
call
push
mov
mov
test
lods
das
popf
in
sub
and
and
insl
xchg
jg
cmc
call
cmp
sbb
pop
xor
add
aam
negb
xchg
xchg
je
push
pushf
sbb
jmp
add
lods
or
aaa
out
inc
jb
cmp
stc
in
dec
sub
mov
inc
mov
dec
rorb
xchg
mov
das
stos
icebp
sub
inc
jns
scas
push
daa
inc
andb
iret
xchg
sub
inc
dec
sbb
scas
out
inc
leave
push
arpl
push
push
aaa
imul
in
shlb
inc
mov
mov
stos
inc
icebp
fisubrl
jecxz
mov
stos
mov
push
xor
xchg
pop
fistl
ficoms
cs
mov
cs
and
lahf
in
andb
out
out
or
scas
out
mov
outsl
sbb
cld
inc
aaa
ljmp
mov
add
push
add
arpl
adcb
sub
ficompl
ret
shlb
and
adc
jmp
or
inc
cmpb
xchg
jl
pop
mov
loop
into
cmp
lea
out
lods
pushf
mov
add
int3
xor
cwtl
add
lcall
lea
negl
jno
or
mov
jmp
pop
jge
mov
lea
divb
int3
jmp
ljmp
sbb
dec
sahf
imul
cmp
sub
cltd
mov
aas
cmp
pusha
mov
ss
out
xor
ja
jge
cmp
and
mov
leave
xlat
fs
or
jg
sti
lahf
cmp
leave
lret
adc
push
packsswb
pop
mov
rclb
inc
out
lcall
jg
sbb
in
dec
and
movsb
cmp
push
pushf
idivl
test
and
iret
lcall
out
dec
cmp
or
pop
sub
sar
xchg
ss
and
ficoms
mov
ja
sub
shlb
push
xchg
or
cli
adc
and
xchg
jne
imul
test
xchg
add
xchg
data16
pop
aaa
jg
mov
adc
cli
push
lods
out
push
mov
in
hlt
or
pop
and
xor
outsl
pop
in
pop
loopne
je
test
sub
insl
pushf
mov
loop
push
jl
pop
clc
cmpsl
pop
push
loop
sbb
sti
adc
add
addr16
dec
xchg
inc
outsb
mov
inc
inc
mov
cli
adc
lea
orb
adc
push
adc
loop
pop
shlb
ret
mov
repnz
or
adc
jmp
cmp
lods
jl
jne
jno
jg
hlt
daa
and
cmpsl
xor
mov
mov
sbb
shrb
shlb
adc
and
mov
lds
add
ret
fiaddl
cltd
insb
mov
xor
movsb
sub
jle
dec
pop
orl
int
or
or
jg
adc
pop
jbe
into
mov
sbb
fcmovnb
mov
arpl
fsubrp
or
mov
mov
in
ja
push
mov
push
int
lods
addr16
lcall
xchg
sub
stc
inc
jge
jmp
mov
or
fsubl
xchg
dec
arpl
and
adc
sub
sarl
mov
shr
mov
scas
imul
dec
outsb
mov
ret
jmp
les
jge
xor
dec
stos
adc
push
stos
popa
adc
push
dec
mov
fsubr
adc
clc
mov
push
push
aas
cmpl
push
lods
out
popf
aas
popf
adc
sti
mov
jbe
cmpsb
sarl
ljmp
fisubs
mov
and
cmp
popf
xchg
leave
ret
mov
xor
inc
mov
das
mov
push
std
jl
or
pop
add
sbb
out
js
mov
int3
scas
xchg
enter
jecxz
sarb
push
pop
in
shl
sub
daa
out
lods
or
out
xor
and
cmp
push
movsl
repnz
mov
push
bound
imulb
shll
shrl
and
mov
int3
push
lods
add
pushf
fsts
sbb
dec
pusha
lds
adc
jp
pop
repnz
shll
pushf
fiaddl
push
bnd
daa
mov
rol
popf
add
in
aad
xor
pushf
jle
sub
rol
jge
and
loopne
icebp
hlt
pop
or
pop
xor
mov
mov
jne
or
and
mov
arpl
jae
leave
lods
in
into
gs
bound
in
jmp
aaa
cmc
xor
xchg
jnp
cwtl
add
outsl
adc
mov
js
fdivp
adc
sub
sbb
or
mov
ret
aam
or
mov
jmp
repz
cmp
lahf
test
stos
shlb
or
insb
repz
adc
xchg
scas
jmp
pushf
imulb
or
ds
lcall
adc
mov
into
outsl
fists
sub
add
sbb
es
sbbb
or
in
cmc
jecxz
gs
dec
ffree
movsb
dec
js
mov
in
cmp
push
fcmovu
mov
stos
movsb
xor
test
cmp
arpl
xchg
shlb
mov
arpl
inc
fwait
punpcklbw
mov
rorl
fscale
cmp
test
xchg
arpl
insl
mov
out
inc
das
add
push
sahf
xchg
or
js
insb
movsb
out
xchg
xchg
xchg
cmp
and
shl
sbb
push
ficompl
push
add
loopne
add
cmp
and
push
mov
push
xchg
mov
push
cltd
scas
xchg
mov
icebp
mov
mov
cs
mov
sbb
dec
push
mov
adc
mov
lods
mov
pop
push
fdivs
or
xchg
inc
lods
sub
out
and
push
pop
out
out
jns
nop
test
cmp
dec
cwtl
scas
fs
add
mov
xor
sub
sub
imul
inc
pop
or
lods
addb
cmp
or
push
mov
xlat
lods
inc
sbb
repz
mov
outsl
sub
adcl
cli
ja
adc
xorb
in
int
std
push
shll
pop
jp,pn
sub
les
add
mov
lcall
add
sbb
push
sbb
mov
inc
dec
test
xchg
xor
ljmp
adc
rcl
int
pusha
adc
lcall
or
xor
mov
sub
mov
and
int3
call
dec
mov
fwait
push
add
mov
lret
xchg
mov
test
bound
add
inc
sbb
xchg
add
je
inc
and
pusha
or
nop
sub
outsl
fs
out
pusha
insl
lret
nop
rcrl
ret
dec
ret
xor
aad
arpl
cwtl
mov
leave
jge
sub
or
push
repz
je
add
das
mov
and
push
and
outsb
add
fimull
imul
adc
mov
movsl
sub
add
lret
sub
test
cmp
and
lods
mov
pushf
icebp
mov
imul
andl
pop
sti
lret
cmp
lret
jno
ret
stos
cmc
subl
mov
dec
sti
fsubrs
pushf
mov
cmp
js
mov
imul
pop
clc
xchg
fs
and
cmp
test
adc
rorl
out
rclb
dec
jae
lret
mov
subl
inc
dec
lock
xchg
pop
and
jp
and
and
addr16
jnp
cmc
aam
inc
sub
bound
inc
enter
mov
sub
stos
adc
sub
adc
sbb
ljmp
sub
enter
sub
je
fisttps
mov
xchg
pop
outsb
jecxz
xchg
jmp
jl
rcr
or
or
cli
pop
mov
out
mov
mov
sub
add
dec
and
xchg
ds
dec
xor
xchg
int3
sti
fcoml
or
hlt
int
int3
nop
jnp
aam
jb
and
jns
sbb
push
ficoml
cli
push
jb
jno
sbb
mov
cli
aam
mov
push
popf
addr16
stc
ja
add
dec
cld
loop
sub
cwtl
xchg
lods
cmpl
outsl
dec
loope
fwait
add
loopne
mov
mov
rolb
inc
pop
adc
lods
mov
loopne
mov
xor
pop
shlb
movb
dec
rcpps
xor
adc
andb
mov
sub
xchg
jecxz
ret
stos
popf
fisttps
sub
loopne
sbb
push
lods
in
es
cltd
fnstcw
xor
nop
or
decl
and
mov
stos
pop
andl
add
adcb
prefetcht2
or
push
add
je
jnp
cmp
xchg
sahf
ret
mov
repz
inc
xor
push
jmp
mov
add
dec
dec
or
test
popf
out
lds
add
or
add
lock
pushf
cmp
call
fmull
or
and
gs
mov
pop
jae
and
dec
lods
cld
jno
inc
push
push
out
dec
dec
sbb
or
mov
loope
ret
xchg
lods
scas
popa
cld
sbb
jg
cmp
pop
ds
sbb
dec
sub
in
dec
or
xchg
inc
stos
dec
cmp
ret
in
ss
sub
mov
sbb
adc
sub
cltd
dec
sbb
fsubs
stos
loopne
loope
ja
scas
mov
dec
jb
push
mov
push
mov
inc
jo
push
mov
mov
scas
mov
sbb
mov
xlat
pop
cmp
scas
enter
adc
jnp
add
stos
mov
insl
jge
fs
and
mov
pop
lods
lret
mov
mov
mov
jae
sbb
rorl
jb
mul
in
jmp
aas
xor
out
sub
call
pop
push
and
cmc
aas
ret
mov
pop
repnz
aas
dec
rcrl
out
xorb
aas
mov
daa
sub
test
sbbl
out
ss
ret
int3
faddl
dec
mov
cs
scas
or
push
in
idivl
inc
and
lcall
cld
fisubrl
cmpl
cmp
stos
fildl
push
dec
xchg
jecxz
or
wrmsr
jo
pop
out
aas
add
iret
out
testb
xor
aaa
outsl
and
xchg
jecxz
orl
rcrb
fwait
cmpsl
pop
std
pop
mov
popa
inc
jbe
xlat
movsb
call
call
cmp
pop
push
lea
push
add
sar
dec
sbb
or
insl
fimuls
mulb
aas
jmp
str
sbb
inc
or
je
cmpl
add
sub
mov
mov
push
mov
inc
jne
sbb
pop
sbbl
ret
push
mov
jo
fcmovb
cld
repz
pop
pop
shrl
mov
mov
test
xor
jge
mov
jo
scas
push
xor
jmp
push
and
dec
pusha
mov
sbbl
fidivs
mov
das
mov
dec
mull
into
inc
xor
fidivl
add
xchg
mov
pop
adc
push
ss
mov
out
xchg
sarl
ror
ret
mov
xchg
outsl
and
fcmovu
test
lret
loop
cli
xchg
sub
dec
and
insb
mov
add
loop
insl
or
add
pushl
dec
shrl
or
or
ret
mov
fmuls
cmpb
xchg
sbb
into
and
sbb
jmp
xchg
das
cmpsb
repnz
ss
xor
fsubrs
jp
xchg
stos
loopne
cmc
adc
mov
pop
cmp
imul
fdivl
or
cmp
inc
push
arpl
in
jecxz
inc
mov
in
jmp
mov
bound
push
xchg
xor
mov
mov
mov
mov
dec
ficoms
sbb
sub
insb
fnstenv
pop
sbb
das
push
test
adc
xchg
inc
dec
shrb
sbb
dec
or
adc
cmpb
jmp
cmp
pop
pop
insb
repnz
cld
adc
out
cmpsb
mov
sbb
es
jle
dec
sub
out
rcrl
adc
in
cmp
or
xor
add
mov
div
jecxz
push
pop
div
arpl
lods
add
addr16
add
into
mov
push
pushf
pop
push
inc
mov
mov
or
jne
mov
push
add
fadd
xor
adcb
inc
add
xchg
push
and
or
push
jp
mov
adc
jmp
data16
rorb
or
pop
and
test
xor
icebp
push
cmp
rcrl
sub
xchg
mov
lcall
push
sbb
ds
lahf
data16
mov
int3
push
xchg
popa
pop
pushf
ret
fdivrs
sbbl
pushf
dec
jecxz
sub
jp
clc
les
rcr
mov
out
ja
aam
cwtl
mov
lods
sbb
push
mov
cmp
dec
dec
sub
arpl
ljmp
add
cmp
ss
nop
mov
inc
adc
subb
pop
mov
mov
mov
dec
sub
fmul
fwait
add
xchg
mov
adc
loop
pushf
int3
mov
insl
cwtl
adc
push
test
pop
mov
xchg
sbb
xchg
pushf
shlb
lea
xchg
sahf
dec
push
xchg
mov
popf
addl
xchg
loopne
mov
orl
jns
pop
adc
shlb
or
jmp
mov
fildl
adc
daa
add
inc
bound
cmp
xchg
add
ss
lods
mov
sbb
roll
mov
imul
out
sub
lcall
fnclex
add
adc
mov
push
call
orb
ret
mov
cmp
jp
push
pop
stc
fisubrl
and
cmp
add
imul
cli
je
sub
sub
mov
push
jl
adcl
push
sbb
data16
xor
shr
pop
push
cmp
ret
out
pop
lgs
out
push
pop
aaa
inc
jae
jge
push
xchg
and
mov
xchg
and
and
mov
test
pop
fnstenv
push
into
mov
dec
arpl
js
jnp
and
mov
or
push
fmull
dec
jmp
jae
adc
jg
xchg
subb
dec
pop
stc
out
loop
aad
testb
or
jge
in
aaa
mov
or
cmp
xchg
decb
into
xor
pop
and
jbe
cmp
mov
mov
xchg
lret
mov
sbb
movsb
test
je
mov
jmp
es
fwait
xchg
mov
int
pop
xchg
test
ror
jmp
dec
ficompl
or
xchg
jl
out
incb
or
lahf
jo
arpl
fsubrl
or
mov
das
movsl
cwtl
jl
sub
jmp
insb
xchg
jecxz
in
sub
sub
mov
pushf
push
sub
cmp
imul
adc
jo
mov
mov
int3
das
fisubl
jecxz
jno
xchg
or
jge
movsb
aad
inc
je
mov
stos
loop
ret
into
pop
xlat
nop
push
pushf
mov
lods
sbb
sbb
ja
xchg
jo
repz
xor
loopne
loop
fnstcw
subl
les
int3
stos
stc
imul
adc
subb
mov
mov
shrb
pop
imul
push
cmpsb
xor
and
in
or
sbb
mov
cmp
jmp
mov
decb
cwtl
dec
aas
movups
imul
not
ret
pop
into
sub
loop
xchg
dec
jmp
scas
orl
leave
sbb
or
xor
cmc
or
xchg
in
push
cwtl
aam
inc
int
mov
push
xor
fsubl
push
lcall
subl
push
or
int3
add
cmp
adc
arpl
lds
in
in
add
lods
push
xrelease
jmp
xchg
add
mov
shrb
pop
daa
cltd
into
add
testb
pop
loope
orb
adcb
notl
sub
mov
aad
icebp
test
fimull
sbb
es
clc
lods
push
out
arpl
gs
or
pushf
into
mov
xor
cmp
mov
stc
fiadds
mov
sbbl
scas
int3
mov
push
cltd
mov
pop
out
pop
ljmp
add
loop,pn
mov
xchg
xchg
test
dec
inc
lds
aam
sub
icebp
push
iret
pushf
mov
mov
jmp
xor
jb
repz
jg
cwtl
push
sub
mov
mov
jecxz
fldt
xchg
je
cmp
fdivs
aam
add
pop
push
cmp
imul
arpl
faddl
stos
enter
pop
aam
sub
inc
mov
pop
sbb
xchg
cmp
jno
sar
dec
filds
shl
dec
fidivl
bound
fstpl
xchg
gs
popa
pop
sbb
xchg
out
sahf
cmp
pop
ficomps
stos
loop
xchg
hlt
add
stos
repz
sbb
mov
testl
ljmp
cli
xor
mov
push
mov
hlt
xchg
cmc
mov
inc
cwtl
sbb
adc
in
lock
add
sub
mov
pop
mov
mov
adc
insb
cwtl
pushf
xor
mov
xchg
xchg
dec
xchg
xorl
mov
add
cmc
call
rclb
lret
scas
nop
xor
or
jecxz
cmp
mov
test
or
mov
adc
push
lahf
dec
mov
sub
xchg
add
arpl
test
cmp
in
jg
jl
pop
push
or
dec
sub
or
rol
xchg
add
or
pop
test
int3
pushf
pop
push
jbe
sub
inc
scas
xchg
fnstcw
xor
in
out
xchg
in
test
call
data16
loop
leave
sbb
call
insl
rclb
sbb
mov
jmp
js
xor
sahf
xchg
xor
sub
dec
lahf
pop
or
mov
inc
aad
and
sbb
add
lods
cmpsb
test
lret
iret
jno
sbb
icebp
out
xchg
out
fwait
in
imul
pop
repz
fistpl
clc
jle
leave
xchg
decb
in
repz
sub
xor
sbbl
push
or
shlb
into
sub
cld
sub
jno
push
push
sti
mov
cmp
scas
add
sbb
mov
aas
sbb
xor
into
out
fidivrl
ljmp
repnz
nop
pop
loop
xchg
jae
arpl
pushf
lfs
mov
lods
in
lret
mov
xor
shr
out
jmp
hlt
ret
mov
pop
jbe
mov
sti
mov
das
xchg
cli
sbb
or
arpl
into
dec
cs
mov
sub
push
lds
std
lock
test
and
and
cmp
push
sbb
lock
out
insl
cld
push
push
out
adcl
cmp
sti
mov
or
and
xchg
test
and
xchg
dec
hlt
or
sahf
shll
fcompl
cmp
mov
popa
mov
ret
cld
jecxz
or
push
mov
push
ljmp
mov
cmp
sub
or
test
and
dec
imul
out
rcrb
mov
jle
std
cmp
cltd
add
and
inc
les
dec
pop
imul
test
sbb
inc
fld
jno
push
mov
filds
fisubrs
call
xor
sbb
ficoms
out
sbb
sub
mov
or
lcall
sub
and
xor
loop
fdivl
dec
fmulp
xchg
or
mov
ret
mov
jno
pop
mov
stos
mov
fstpt
pop
jbe
shlb
mov
adc
mov
pushf
mov
sbb
lret
fwait
push
push
ret
xor
mov
sub
dec
xor
je
scas
inc
pop
mov
sbb
icebp
mov
sbb
push
into
cmp
sub
xor
stc
xchg
cld
add
push
rcll
aad
push
outsb
sbbl
push
push
fcmovbe
loope
cltd
sub
loope
pop
mov
outsl
popa
in
iret
jmp
insb
push
int3
outsb
insb
rorl
lea
repz
dec
cmp
es
inc
jmp
cwtl
add
lock
mov
push
push
jp
leave
fldcw
paddsb
into
xchg
es
lahf
xchg
push
or
roll
push
cld
mov
jle
hlt
es
insb
iret
test
clc
inc
bound
ljmp
jno
mov
dec
xchg
inc
stc
xor
int3
inc
pop
orb
cs
idivb
or
cld
outsb
gs
faddl
xorl
test
or
jmp
out
lods
jno
ds
add
loop
insl
sbb
ss
clc
sarb
stos
mov
filds
movsl
sub
out
lds
sbb
icebp
xchg
xchg
lods
mov
fwait
adc
out
push
popa
insl
and
es
fidivrs
mov
in
pop
ss
push
add
sub
rcr
lahf
in
or
dec
xor
sti
fidivrl
mov
das
rcrl
jg
push
jg
repnz
pop
dec
data16
outsl
in
fiadds
pushf
mov
outsl
stos
add
push
sub
fistl
fnsave
les
bound
and
xor
in
in
data16
cmpsl
mov
lods
in
cmp
addr16
mov
fcoml
push
mov
std
mov
mov
lods
or
sub
and
inc
mov
cmc
ja
loop
out
dec
sbb
xchg
sbb
imul
rorb
call
jecxz
jp
pop
ss
pop
xchg
movsl
mov
sub
mov
lods
in
in
loop
fbld
repnz
into
sub
daa
pusha
and
popl
adc
imul
pop
scas
mov
dec
andl
inc
popa
ss
add
jb
sbb
inc
rorb
out
loopne
cmpsb
data16
add
inc
stos
ret
sbb
stc
iret
nop
and
xchg
scas
push
shlb
push
jecxz
ret
testb
mov
push
push
leave
inc
rep
push
cltd
addb
daa
sbb
push
jl
bound
pop
mov
loop
movsb
push
subl
sbb
test
cwtl
sub
sub
insl
movsl
cs
pop
inc
push
push
ss
cld
outsb
xchg
sub
sbb
shrb
sbb
cmp
cmc
jae
shlb
lret
out
xchg
sub
dec
mov
scas
jno
jmp
out
xchg
dec
int
fiaddl
fidivrs
xchg
movsb
fs
test
sub
cltd
scas
je
cmp
push
aas
push
ret
cmpsb
test
mov
jmp
mov
sbb
testb
test
jne
and
push
test
ret
mov
filds
and
lret
test
mov
pusha
xchg
mov
sub
adcl
shlb
andl
mov
js
cli
std
mov
jnp
mov
test
leave
int3
add
mov
add
xor
pop
push
xchg
xor
mov
push
pusha
divb
aaa
stc
sti
jno
xchg
push
into
xorl
or
lcall
call
insl
mov
push
aaa
rcll
mov
push
fsubs
js
cmp
adc
sub
cmpsl
jbe
sub
je
mov
mov
ss
jmp
sbb
push
mov
cmp
cmp
mov
scas
jne
add
jb
adc
xchg
inc
mov
jbe
and
leave
daa
inc
inc
mov
lret
jmp
dec
test
das
shll
sti
orl
lret
dec
insb
rorl
jo
fdivs
fisubrl
sbb
enter
pop
sub
testl
mov
sar
test
dec
sub
subb
xchg
xor
nop
xor
stc
xchg
fldl
mov
das
ret
arpl
xor
data16
or
pop
int
sub
scas
sub
add
sub
std
and
mov
mov
out
add
cmpsb
pop
lods
inc
mov
lock
and
rorb
mov
pop
addr16
sbb
fstl
jb
ds
adc
adc
jno
and
sbb
dec
aas
push
jo
out
es
repnz
inc
jns
xchg
arpl
adc
push
sub
movb
shrl
aam
adc
addr16
aam
dec
xor
dec
repnz
les
fldl
cmp
or
jecxz
xlat
test
sub
in
sub
xchg
sti
into
mov
clc
cmpsl
int3
stos
or
or
pop
lods
rcl
into
in
or
dec
imul
jmp
ret
sbb
inc
dec
int3
fs
mov
mov
sub
ljmp
mov
mov
adcb
xchg
ret
cs
mov
xchg
xchg
stos
pusha
push
shrl
imul
mov
jae
lea
sbb
imul
jno
lods
xlat
imul
imul
xchg
aam
rolb
sbb
dec
mov
sbb
into
and
cli
jecxz
clc
in
test
ss
addb
push
sahf
dec
push
lahf
addb
sbb
adc
inc
add
fwait
aam
and
fcmovnb
adcl
cli
add
sbb
es
push
push
xchg
mov
addr16
pop
out
movsl
add
mov
inc
out
int
cmpl
pushf
jnp
dec
xor
adc
pop
popf
movsl
xchg
inc
pop
icebp
push
or
push
ljmp
jecxz
pop
or
out
cmpsb
add
mov
ret
int3
push
jecxz
aas
push
xor
xchg
add
int3
je
cs
cmp
ja
clc
push
inc
aam
mov
cmp
xchg
inc
lret
jmp
or
mull
inc
push
subb
sarb
jge
push
sbb
fwait
cwtl
push
mov
pushf
and
push
rorl
inc
dec
imul
pusha
xchg
and
inc
sub
adc
ret
jmp
mov
rcrl
and
mov
loop
push
lret
sbbl
lahf
loop
nop
scas
pushw
add
ljmp
xchg
nop
add
out
mov
dec
outsl
jl
das
pop
cmpsl
cmpb
lea
push
daa
dec
popf
add
popf
add
and
iret
rclb
data16
lock
imul
adc
jmp
fildl
push
jbe
js
xor
mov
cld
xchg
mov
dec
movsl
adc
rorb
lods
mov
push
jnp
sub
mov
sbb
loop
dec
push
arpl
loop
sbb
bound
add
and
sub
lcall
mov
int3
mov
push
imul
xor
or
and
mov
push
mov
cmp
sub
pop
and
insb
jmp
test
pop
lahf
fwait
sub
and
test
pop
push
in
adc
jmp
ljmp
push
insb
fiaddl
sbb
aam
jo
mov
jge
xchg
inc
dec
cmpsb
and
lcall
outsl
popf
in
cwtl
mov
loope
mov
popf
ret
and
leave
mov
lret
inc
inc
mov
xchg
add
jmp
add
cwtl
jl
rol
roll
rcl
lahf
pop
and
mov
pop
jle
sbb
lret
sub
xchg
stos
adc
mov
fistpl
xchg
idivl
imul
pushf
scas
iret
fstpt
ljmp
add
and
out
adc
outsl
xchg
sbbb
aas
and
jno
sub
imul
add
jbe
mov
mov
and
add
sub
test
sbb
ds
ja
jmp
stos
adc
mov
cmpsl
cwtl
add
mov
jnp
das
push
leave
lea
fisttpll
imul
sub
imul
stc
adc
xchg
xchg
lods
jge
push
aam
xorb
pop
adc
and
xor
inc
inc
push
and
inc
out
add
addr16
cwtl
sub
mov
mov
add
jo
sbb
ret
or
ljmp
inc
lahf
test
lods
ljmp
ss
mov
jl
mov
out
xchg
inc
orps
fwait
sbb
out
sub
stc
cwtl
lods
or
pop
mov
xor
xor
lods
in
sahf
sub
lea
js
xchg
sub
mov
out
lock
mov
add
bound
stc
stos
mov
jecxz
xor
leave
ret
cmp
jnp
xor
movsb
dec
popf
imull
lods
push
push
inc
and
push
add
aam
test
stos
adc
shlb
jne
adc
mov
jg
mov
inc
addl
fisubs
mov
mov
insb
cmp
loop
jmp
jb
adc
or
sub
arpl
push
mov
hlt
aas
test
or
cmp
inc
and
shrl
jmp
repz
push
cld
and
and
popf
push
jo
pop
mov
jnp
lock
sbb
jbe
repz
mov
push
xor
jb
icebp
jge
mov
jmp
mov
lea
insl
push
jl
ss
loop
jmp
dec
lcall
jmp
stos
jecxz
loop
fisubrs
mov
mov
into
jne
in
dec
in
mov
stos
adc
or
adc
add
pop
ret
and
cmp
sbb
add
and
popa
es
jle
test
and
loope
mov
add
pop
push
inc
pop
push
sub
pop
cmp
cmp
loop
jmp
fcmovne
arpl
shrb
xor
loop
jecxz
dec
push
icebp
aam
cli
and
xchg
lods
mov
aam
push
mov
sub
pop
mov
cltd
fmuls
adc
sbb
loop
inc
fdivs
mov
sti
jmp
xlat
cmp
add
repz
test
dec
iret
xor
jge
repnz
lret
insb
sub
pop
sub
or
sahf
sub
inc
enter
and
aaa
pop
lret
xor
lret
jno
sbb
fwait
adc
ret
xlat
lret
or
ret
pop
xor
pop
lods
mov
loop
sub
iret
or
rcrb
pop
mov
or
pop
jmp
add
je
inc
in
data16
pop
adc
xchg
mov
call
in
push
sbb
cmp
aam
dec
sbb
adc
ficoml
gs
mov
jge
sub
adc
xor
xchg
and
pop
sub
out
or
mov
sub
jmp
mov
scas
mov
les
je
lret
push
les
or
mov
inc
pop
jnp
adc
jecxz
xor
popf
adc
adc
aam
addr16
cmp
mov
mov
call
jmp
lock
les
adc
fldl
push
adc
jge
mov
adc
scas
lods
pushf
lcall
xor
fldcw
jne
dec
push
lcall
stos
jl
rcl
mov
xor
aaa
ds
ret
sbb
out
jp
aad
scas
or
mov
fwait
mov
loop
mov
mov
sbb
popf
mov
pop
stos
and
mov
xchg
add
cmp
lea
mov
push
cli
adc
mov
mov
mov
mov
cmp
sbb
stos
push
adc
and
inc
xchg
jno
mov
roll
rorl
dec
inc
dec
xor
pop
mov
ret
xchg
int
inc
lods
add
outsb
mov
insl
repz
ret
daa
imul
jge
out
cmp
roll
inc
xchg
pop
mov
pushf
mov
lahf
mov
addl
notb
mov
lahf
mov
subb
fstl
jmp
je
leave
xchg
xchg
sbb
ret
mov
out
or
mov
inc
aas
mov
ror
jecxz
jg
mov
pop
lods
fistpll
mov
push
cmpsl
pop
int3
dec
popf
jp
pushf
pop
pop
cld
and
dec
addr16
notl
faddp
xchg
fistps
mov
stos
fsubrl
adc
dec
fwait
in
xchg
mov
xchg
lods
jbe
mov
and
movsl
pop
xchg
cs
sub
or
loopne
mov
arpl
xor
arpl
cli
inc
cld
and
nop
loop
ret
das
cmp
out
cmp
adc
pushf
les
xchg
cmp
mov
movsl
push
push
dec
fwait
lret
adc
inc
and
out
xchg
pop
mov
aaa
rcrb
cmp
mov
xor
hlt
and
sbb
inc
mov
xor
call
fs
xor
inc
xor
sbb
call
jne
pop
fcompl
dec
mov
cmpsb
push
xorb
pop
mov
mov
mov
int
mov
push
imul
mov
push
ss
fwait
cwtl
and
mov
aam
add
sub
out
js
dec
push
iret
fisubrl
cmp
popa
ljmp
mov
push
adc
stc
jecxz
arpl
jnp
lahf
enter
mov
sub
iret
mov
loopne
repz
xchg
ret
or
xor
jmp
mov
std
jle
adcl
movsl
adc
mov
jb
jge
loope
and
mov
cld
sbb
sub
or
je
rorl
cmp
andb
test
cs
das
cld
jp
xor
mov
mov
inc
xor
cwtl
cmpsb
dec
push
into
mov
sub
sbbb
sti
shl
stos
cmpsl
test
test
lea
imul
cli
sbb
jns
xor
xchg
lods
mov
pop
aad
repnz
or
cmp
pop
out
dec
xor
lret
in
or
test
int
mov
sbb
pop
icebp
dec
adc
lods
insb
lret
pop
sub
sbb
cmp
xchg
push
mov
cmp
dec
adc
dec
mov
cltd
or
dec
pop
cmp
push
rolb
pop
jmp
xchg
hlt
inc
cmp
mov
jns
sbb
jmp
out
mov
movsl
or
mov
and
lods
popa
fdivrl
xor
fwait
in
clc
mov
imul
sbb
out
mov
pop
jl
sahf
das
sbb
adc
call
sbb
sub
adc
lods
outsl
inc
lds
jle
xor
rcrl
inc
gs
mov
xor
lahf
pop
sbb
cmp
dec
pushf
mov
mov
push
insb
ret
pop
and
push
ss
pop
std
mov
sub
cmpsb
mov
add
inc
ja
inc
push
insb
push
loop
sub
mov
call
add
cld
add
xor
jmp
xchg
data16
jl
xchg
mov
add
cltd
das
fidivs
mov
mov
adc
inc
adc
sbb
je
jecxz
mov
jmp
xchg
jle
and
push
jo
icebp
xor
add
jg
aad
in
lret
fs
cli
pop
bound
loop
gs
sahf
adc
jle
mov
inc
ss
sub
dec
orb
das
sbb
push
push
hlt
xor
das
xor
repz
sub
pushf
add
dec
cmpsl
mov
or
inc
sbbl
jno
xor
dec
xchg
cmp
sub
jmp
jbe
lret
or
xor
nop
shrl
mov
out
loopne
and
shlb
cmp
add
sub
push
pop
add
pop
xchg
sub
enter
stos
mov
rcr
xor
or
ljmp
bound
popf
pop
rcll
data16
insb
adc
push
lret
adcl
in
sub
xchg
nop
dec
fmuls
jmp
adc
js
aaa
in
xchg
pop
cli
clc
jge
ret
sbb
fimull
mov
stos
insl
add
mulb
mov
icebp
inc
loope
je
ret
fisubl
testb
int
or
cmc
xor
repz
mov
add
sub
dec
or
or
jg
mov
lods
sub
hlt
outsl
xchg
jo
insl
and
sbb
jle
push
stc
cs
in
test
adc
cmpsl
sub
mov
imul
test
imul
movsb
jl
mov
xor
aaa
mov
add
int
add
push
push
nop
ljmp
xchg
jecxz
dec
or
xchg
test
sbb
and
loope
add
pop
setg
sub
pushf
and
gs
add
cmpsb
rol
or
lret
mov
idivl
add
push
aaa
pop
cmpsl
sbb
or
xorb
jecxz
ret
dec
push
sub
imul
sahf
aas
rclb
mov
or
and
pop
mov
pop
shrb
xor
repz
mov
adc
enter
xchg
cmp
mov
clc
in
je
cmp
popf
adc
and
andb
push
les
push
addb
mov
xchg
in
or
lahf
in
sbb
xchg
pusha
lods
outsb
mov
movsb
inc
pushf
jb
xchg
inc
push
sub
ret
into
or
jmp
or
cli
push
xor
and
lods
mov
sub
add
and
inc
dec
push
iret
adc
scas
hlt
or
mov
mov
aam
xchg
inc
sbb
push
dec
cmp
push
outsl
outsl
inc
arpl
or
call
and
rorl
mov
xchg
cld
ljmp
mov
icebp
mov
mov
test
jecxz
sbb
cltd
push
scas
cmp
and
sub
cmp
adc
xchg
jmp
leave
xchg
imul
arpl
add
pop
pop
imul
cmp
mov
call
dec
mov
mov
aad
jo
in
jbe,pn
jb
or
xor
jp
cmp
inc
sub
xor
mov
mov
push
push
jne
dec
adc
pop
mov
iret
out
icebp
dec
mov
addl
or
xchg
mov
ljmp
or
jmp
mov
or
or
and
or
out
push
dec
push
mov
repnz
movsb
hlt
test
fcoms
dec
lods
sbb
push
aad
fs
push
push
popa
outsl
sar
push
shrb
sbb
outsl
jmp
xchg
sbb
les
sub
cmp
jle
sbb
fdivrl
repnz
mov
mov
mov
fnstenv
jecxz
xchg
lahf
inc
or
mov
lahf
jmp
mov
and
push
je
lahf
mov
mov
push
or
push
pop
ret
mov
repz
shlb
and
push
into
jle
mov
xchg
mov
jmp
lret
push
out
mov
jmp
xchg
movsb
cmp
jb
cli
bound
into
push
push
pop
and
sub
subl
dec
icebp
cs
call
in
mov
lock
sbb
dec
xchg
jns
add
sub
out
test
into
shlb
mov
add
lret
cmp
mov
dec
scas
sub
shr
inc
icebp
dec
sbb
dec
stos
or
in
ds
and
adc
dec
sub
xchg
and
inc
jg
mov
ret
lret
mov
scas
push
push
les
mov
loop
nop
mov
stos
adc
mov
dec
cmp
subl
pop
adcb
stos
dec
or
test
sbb
push
xchg
dec
jbe
dec
hlt
scas
and
mov
xor
orb
test
jae
dec
insb
sub
bound
add
add
pop
push
movsl
mov
loope
mov
jge
loop
mov
lea
mov
pop
das
sub
inc
cmp
adc
xchg
jmp
call
enter
jmp
sub
test
sub
sub
in
dec
push
dec
mov
fidivrs
in
ds
roll
lret
addr16
sbb
pop
out
xor
mov
push
mov
out
cmp
dec
sahf
push
sub
add
pop
sbb
arpl
adcb
dec
jns
sbb
test
shll
mov
ret
pop
jge
or
jmp
sahf
out
ret
arpl
sub
adc
add
test
testb
scas
mov
xor
pop
push
push
shlb
int
stos
outsb
sbb
mov
rclb
inc
ja
in
sub
and
in
add
int3
cmp
lods
fwait
nop
mov
aam
test
pushf
jl
lret
xchg
lods
ja
hlt
rcrl
cmp
in
xchg
xchg
icebp
adc
sbb
ss
bound
sub
in
fildll
shl
push
sub
sbb
push
and
add
sbb
mov
sbb
in
push
adc
ds
test
and
stos
inc
out
sub
xor
ds
xchg
dec
sub
sub
cmp
outsl
pop
icebp
mov
rcrl
cmp
inc
loop
dec
push
roll
pop
push
aad
and
repnz
adc
xchg
int3
stc
push
xchg
and
adc
fstpl
add
mov
adcb
jecxz
sub
mov
adc
sbb
inc
in
xchg
or
pop
xchg
arpl
loope
mov
test
sub
lahf
pop
pop
pop
sti
sbb
xchg
arpl
xlat
xor
sub
movsl
mov
xchg
sbb
sbbb
ret
call
lahf
xchg
mov
in
and
mov
mov
dec
movsb
lds
loop
sbb
ret
fwait
adc
testl
inc
sbb
mov
ljmp
es
test
daa
insb
adc
xchg
sbb
xorl
repnz
out
pushf
sub
out
aaa
outsl
xor
into
fbld
mov
or
xor
mov
or
lods
test
stos
lcall
sbb
push
jns,pt
jle
mov
mov
fwait
sbb
call
add
cmc
cli
std
mov
lahf
call
pushf
fwait
add
xor
aad
pop
popa
pop
inc
mov
nop
mov
xor
pop
pushf
mov
pusha
enter
sbb
xchg
rcpps
sbbl
ficomps
testb
test
inc
ss
pop
jb
pop
movsl
pop
fdivs
xchg
out
jge
cmc
cmp
test
mov
test
and
pop
push
stos
pop
jl
inc
sahf
fwait
mov
sbb
mov
std
jmp
push
into
dec
pop
adc
and
outsl
fucomi
ja
outsl
scas
xor
pop
push
cmp
xchg
push
mov
filds
pop
loopne
fistps
jns
fmuls
xchg
aam
aaa
aad
mov
xchg
cmp
lods
mulb
outsb
outsl
push
mov
xchg
data16
cmp
notb
sub
xchg
rclb
xchg
bnd
xchg
mov
sbb
xchg
sarl
mov
sub
jl
sahf
rorb
sar
int3
adc
cmp
adc
imul
mov
cmp
imul
in
pop
adc
loopne
ret
sub
mov
in
out
fsubs
mov
test
inc
dec
sbbl
and
jmp
scas
mov
in
lea
imul
notl
test
aam
mov
in
adc
add
and
jne
xchg
repnz
cmp
mov
dec
add
adc
lds
xchg
pop
jge
adc
adc
mov
add
add
jmp
out
mov
mov
sub
add
sbb
push
ljmp
lahf
nop
ret
cmp
loop
js
mov
in
arpl
scas
jns
add
push
dec
cmp
cmp
sub
or
adc
stos
pushf
cli
sub
push
jle
fldcw
aas
stos
mov
rcrb
lea
int3
mov
mov
push
jge
add
pop
adc
rcr
insb
mov
jecxz
lea
sbb
or
push
push
addr16
out
cmp
in
push
sbb
push
mov
pop
test
jmp
into
xchg
test
stos
dec
in
aas
and
movsb
jmp
add
mov
fwait
inc
dec
jno
xchg
xorb
inc
adc
or
cli
cmpsb
prefetchw
sbb
dec
lea
push
mov
mov
sbb
xchg
bound
movsb
push
mov
and
cmp
ja
insl
inc
lods
adc
xor
shl
xor
fadds
inc
cmp
push
mov
jecxz
or
pop
ret
mov
fisubrl
pop
jle
in
stc
pop
into
xchg
xchg
and
mov
lods
je
lods
cmc
adc
push
shlb
mov
sti
rcrb
mov
add
movsl
xlat
scas
int3
flds
cmpsb
and
jae
jbe
xchg
push
orb
out
gs
dec
pop
sbb
dec
pop
xor
push
jb
jno
push
fimull
shrb
jbe
add
mov
iret
int
insl
ja
mov
aas
sbb
mov
movsb
pushf
insb
ret
mov
mov
pop
jecxz
movsb
xchg
mov
dec
pop
cmc
nop
adc
outsb
pushf
xor
lods
cmp
xchg
jg
inc
je
sub
scas
mov
inc
jecxz
stos
push
push
or
and
testl
lea
int
lds
inc
jl
or
cmp
aaa
push
mov
loop
lea
fidivl
shl
fidivl
xchg
daa
xchg
dec
fiadds
jecxz
sub
lods
or
mov
cltd
test
mov
test
xchg
repz
xor
js
or
lret
or
movl
outsb
cwtl
out
push
orl
sti
ret
in
lea
xchg
addr16
mov
sahf
ret
or
pushf
adcl
and
out
jb
or
mov
test
dec
pop
sbb
outsl
sti
lret
ljmp
aas
xor
xchg
mov
mov
sti
xor
and
stos
push
and
jp
fisttpll
sbb
mov
jle
scas
push
lock
push
outsb
push
xchg
or
insb
xor
jmp
jge
stos
add
lock
or
out
jnp
test
cmovs
jne
sbb
flds
cli
lret
sub
inc
sub
xor
or
popf
jl
and
and
ss
sub
js
xchg
std
xchg
es
add
adc
fstp
pop
inc
into
adc
dec
call
inc
fisubl
xchg
cmp
mov
loop
adc
inc
ss
iret
cmp
scas
xchg
xchg
pop
jge
push
fildl
cmpsb
jns
dec
push
cli
dec
je
mov
ret
ret
lret
push
add
lahf
mov
pop
or
hlt
fwait
dec
loopne
lret
fstp
cwtl
push
push
mov
dec
sahf
mov
test
or
mov
push
push
arpl
data16
in
in
addr16
movsb
mov
rcrl
arpl
negb
jl
xchg
mov
xchg
xor
mov
jmp
scas
sub
or
pop
adc
inc
subl
movsb
dec
stos
or
or
loop
cmp
outsb
xchg
xchg
inc
cmp
ljmp
inc
cmp
lret
mov
nop
or
mov
push
and
pop
mov
test
cmp
cmp
lahf
test
xor
cmp
cli
ss
adc
lods
andb
mov
or
aam
push
or
jns
pop
mov
loop
xor
pop
mov
xchg
fcompl
add
enter
lods
dec
sub
push
xlat
adc
jne
or
jmp
repnz
dec
out
shrb
in
sub
push
call
mov
iret
pusha
aam
push
loop
iret
sbb
imul
or
mov
xor
xor
jmp
cli
fisubl
shrl
repnz
ret
into
aaa
dec
cmp
sub
call
sbb
dec
cwtl
mov
outsb
stos
ja
xchg
mov
sbb
lcall
outsb
jmp
xchg
adc
nop
mov
fisubl
sbb
or
adcb
or
jmp
rcrl
scas
adc
loopne
stc
and
cmp
fs
mov
mov
ds
cmp
mov
adc
jmp
arpl
xchg
mov
movsb
dec
dec
or
sbb
rorl
jb
add
mov
shl
sbb
enter
mov
cmp
cmp
rorl
movsb
arpl
cmp
in
sub
rclb
shll
outsl
jg
pop
lods
inc
dec
adc
sbb
push
repz
ret
xchg
add
insl
outsl
imul
mov
sub
inc
lods
push
pushf
out
xor
int3
sub
and
dec
sub
sub
outsl
xor
adc
add
push
stos
mov
fisubrs
xor
loop
data16
insl
outsl
xor
jecxz
sub
sahf
or
mov
test
adc
ret
call
jp
pop
dec
and
sbb
adc
sub
xor
and
xchg
mov
adc
mov
daa
xchg
sub
rclb
pushf
lret
xchg
add
outsb
and
jecxz
push
or
sarl
mov
into
rclb
sbb
and
sub
mov
or
jmp
stos
mov
xchg
add
outsl
dec
cmp
jo
stos
iret
add
sti
push
xchg
mov
lods
jle
stos
push
sbb
dec
iret
addb
shlb
fwait
mov
outsb
or
xchg
jg
mov
adc
jae
add
sub
in
push
push
push
fsubl
pop
xchg
and
dec
loop
into
mov
or
outsl
lods
add
sub
hlt
rorl
outsb
dec
cmp
adc
shrl
and
cltd
call
call
inc
xchg
insb
jno
mov
jne
les
testl
call
push
push
pop
sbb
popf
or
cmp
push
insb
mov
ja
adc
sub
sbb
sbb
mov
repz
mov
in
mov
push
ss
mov
pop
scas
shlb
xor
ret
ds
std
or
ljmp
xchg
into
sub
mov
int
out
sbb
push
dec
jmp
cmp
pop
add
mov
push
int3
mov
mov
inc
shll
adc
or
xchg
in
imul
mov
push
ds
and
add
inc
mov
clc
xor
insb
jmp
mov
mov
out
sahf
xchg
xor
push
mov
mov
out
outsl
or
sbb
aam
subl
jl
mov
lods
outsb
icebp
int3
into
sub
jmp
mov
adc
jecxz
jmp
adc
xchg
and
mov
dec
or
push
jb
scas
into
cmp
cmp
fisubl
or
pop
sub
sub
roll
sub
pop
mov
inc
sbb
fnstcw
daa
loop
cli
add
add
loop
add
push
fsubs
ljmpw
add
cmp
mov
lea
loopne
lea
dec
sti
fisubrl
and
addr16
mov
lcall
xchg
outsb
jmp
mov
mov
jnp
cmc
xchg
xchg
mov
cltd
cs
lea
in
mov
mov
adc
in
cmp
add
andb
mov
stos
sbb
ljmp
in
insl
xchg
nopl
loop
jmp
mul
add
add
inc
cld
das
add
in
or
mov
jge
lahf
icebp
nop
loop
lods
or
mov
pushf
sbb
sub
rcll
jg
pop
setp
pop
dec
jecxz
pand
test
fisubrs
call
sub
mov
xchg
aam
xchg
jbe
add
or
sbb
lods
jo
inc
or
dec
sbb
cmp
inc
sbb
mov
roll
cld
push
cwtl
sbb
dec
das
loop
leave
sbb
gs
rcll
clc
pop
push
popf
mov
mov
rorb
cmpl
ljmp
loop
iret
mov
dec
das
ja
mov
push
sbb
jecxz
sbb
mov
and
fcoml
or
or
push
sub
adcl
loope
push
push
sbb
sahf
negb
leave
orl
dec
jg
jmp
insl
insb
cmp
ss
or
in
fldt
xchg
mov
scas
add
movsl
cltd
sbb
shll
cmp
out
shlb
dec
mov
shrb
jmp
or
pop
in
xchg
mov
mov
insl
sarl
loop
mov
jp
mov
adc
mov
data16
popl
sub
adcb
sub
add
sbb
loopne
sub
out
sbb
sbb
push
nop
xchg
mov
xor
mov
cwtl
outsl
into
scas
mov
sub
in
and
outsb
inc
adc
stc
pop
dec
fsubl
sti
lret
pushf
sbb
push
and
or
dec
mov
out
faddl
jb
ss
enter
add
dec
xorl
aas
add
push
stc
in
lods
lcall
setae
add
push
in
add
out
add
pushf
pushf
sub
cmp
inc
test
lock
sub
inc
jmp
xor
pop
call
ret
arpl
nop
xchg
in
sub
jno
out
fwait
sahf
std
pop
mov
push
aam
popf
jge
popf
sub
aaa
cmc
andb
and
test
add
mov
aaa
mov
or
and
jb
mov
in
push
pop
ja
out
rcrb
pop
gs
add
pop
lods
cmp
out
or
lods
mov
nop
loope
or
xchg
scas
mov
arpl
jg
or
insb
scas
into
and
cmc
mov
jns
and
leave
mov
and
outsb
dec
dec
xchg
mov
fidivs
mov
rorb
xor
and
movsb
neg
dec
das
fmulp
cmp
sub
mov
or
in
xchg
scas
mov
push
add
popf
and
dec
out
or
or
sbb
add
dec
outsl
stos
test
call
int
ret
push
cmp
or
push
sub
sbb
or
in
xchg
test
mov
sbbb
cmc
int
lds
and
insl
or
jmp
andb
jecxz
clc
pop
sahf
cs
fstps
adc
push
push
loope
xchg
loop
outsl
gs
aam
dec
mov
lods
test
push
leave
stos
invd
insl
sahf
cmp
mov
add
pushf
mov
jecxz
mov
ret
ljmp
sbbb
dec
in
mov
adc
xchg
jecxz
das
mov
adc
or
fwait
leave
sbb
ds
jmp
ret
fs
push
xor
cmp
sbb
shlb
addl
ds
sub
or
adc
arpl
movnti
push
push
xor
sahf
mov
aas
sub
sub
dec
insb
and
sub
icebp
push
jmp
sub
lods
mov
push
ljmp
cmpsb
stc
aaa
mov
adc
xor
push
jmp
ljmp
scas
xchg
popf
stos
jecxz
cmpsb
mov
ljmp
ss
subl
ja
cmpsb
shll
or
xchg
dec
addb
sub
sub
jmp
stos
mov
or
xor
aad
xchg
push
or
sub
jp
push
insb
insb
imul
mov
jbe
stos
orl
sub
outsl
cmpsb
push
test
call
dec
scas
cwtl
in
or
cwtl
mov
mov
add
push
mov
sub
rcrb
shll
out
add
xor
scas
loopne
test
sbb
sub
subl
in
scas
jecxz
scas
xchg
insb
mov
pop
add
daa
jb
mov
sub
cltd
xchg
add
sub
lea
sbb
jg
sbb
ds
xchg
out
pop
sub
shrl
jg
push
test
mov
push
push
pop
cmp
fcoml
dec
inc
int3
push
cmp
push
ds
dec
xchg
arpl
ss
add
adc
cmp
mov
dec
add
xor
adc
sbb
arpl
scas
lods
call
ja
cmp
or
jecxz
mov
push
gs
negl
add
pop
popl
xor
cwtl
or
ret
in
mov
sbb
mov
sub
das
mov
jb
cmp
xor
mov
xor
call
or
adc
xor
nop
sub
mov
jae
test
dec
xchg
lods
add
jmp
mov
lret
nop
in
addb
xor
xchg
jae
jno
sbb
lods
xor
jne
fistl
push
lods
pop
in
sbb
jbe
push
xchg
xor
sbb
xor
fmuls
jecxz
dec
adc
stc
in
or
loop
sti
fidivrl
jmp
jmp
jmp
out
lahf
xor
lods
sub
aaa
addr16
ja,pt
aaa
add
fadds
popf
jmp
xchg
mov
jmp
jns
or
mov
mov
out
imul
add
das
jecxz
mov
fldt
filds
in
mov
cmp
xchg
in
repnz
or
sub
in
xchg
or
add
loop
sbb
sarb
mov
or
or
int
ja
addr16
mov
or
sbb
cltd
ret
shrb
sub
repz
mov
xchg
mov
sbb
pop
jb
pop
cmpsl
leave
xlat
cwtl
cmpsl
test
int3
aam
arpl
pusha
xor
sub
imul
mov
cmpsl
push
push
adc
pusha
mov
sbb
stos
es
in
sub
mov
mov
pop
aam
in
arpl
ss
test
jecxz
iret
sub
or
arpl
shrb
test
bound
or
and
popf
inc
adc
dec
scas
sbb
sub
xor
int
call
out
outsl
or
jecxz
push
xor
add
imul
mov
dec
xchg
pop
shr
push
test
xchg
loope
dec
push
adc
or
xor
out
dec
iret
out
jno
mov
loopne
and
mov
or
sub
bswap
xchg
xlat
ss
fwait
inc
mov
sbb
lods
cltd
lahf
call
jmp
cvtpi2ps
dec
or
pop
cmp
dec
jns
and
mov
dec
in
lods
inc
adcb
cmpsl
or
dec
mov
divl
fisttpl
or
cmpsb
mov
shll
adc
xchg
fwait
xchg
iret
push
add
fstps
cmpsb
cmp
imul
push
jmp
sub
adc
into
xlat
lods
xchg
lods
fdivl
jmp
loop
adc
testl
pop
jg
adc
outsl
fs
pop
gs
in
in
test
cld
ds
frstor
jo
sahf
pop
out
loop
mov
mov
push
jmp
dec
jg
adc
push
adc
cmp
pop
inc
dec
fstpl
mov
sub
pop
test
cmc
or
adc
sub
test
cs
mov
mov
dec
loop
jge
out
mov
mov
in
add
imul
fldt
and
dec
sbb
sbb
andb
fdivrp
fmull
jge
sbb
xor
inc
cmp
xchg
mov
push
push
lcall
adcl
bnd
fcoml
or
adc
mov
jae
or
mov
or
loop
stos
arpl
nop
in
loop
push
ret
hlt
iret
shlb
mov
mov
sub
jl
std
sbb
sbb
in
jl
jge
rcl
add
cmpsb
pop
push
adc
mov
jns
popf
mov
jmp
arpl
repnz
iret
xchg
pop
mov
or
cmp
int3
xor
mov
adc
jecxz
mov
or
sbbb
repnz
xchg
ret
cltd
pcmpgtw
sarl
out
sub
adc
cmpb
enter
mov
fisttpl
inc
int3
jecxz
push
sbb
jle
stos
sub
push
enter
repnz
das
mov
jns
aaa
or
rcll
xchg
mov
pop
sub
push
xchg
das
rorl
fdivrl
xor
test
lcall
push
arpl
mov
cmp
lds
xor
or
adc
das
sub
addr16
popl
mov
cmp
sub
sub
in
in
add
xchg
mov
or
int3
movsb
fimull
test
bound
xchg
jle
ret
mov
rorb
scas
and
or
cwtl
adc
sti
add
lcall
sub
lods
ret
pushf
push
orb
fld
mov
arpl
cmp
and
rcr
loop
sbb
ds
jge
xor
pop
pop
dec
jns
add
rcrb
arpl
cltd
arpl
rcl
leave
lea
sub
jecxz
jbe
push
xor
lret
lcall
jns
cmp
out
cmpl
sub
cmp
mov
loope
or
add
mov
in
mov
push
divl
rclb
xchg
dec
pop
cld
js
fstpl
stos
pop
sub
dec
in
mov
orl
adc
and
jo
or
adc
pusha
add
stos
sub
mov
loop
out
xor
stos
sub
xor
adc
dec
cmp
je
and
call
hlt
shrl
sbb
ljmp
rorb
enter
popa
or
lock
out
stos
clc
stos
pop
mov
and
or
ficoml
stc
adc
cwtl
add
in
jns
xchg
adcb
pusha
mov
or
int
mov
or
bnd
mov
fcoml
mov
lcall
cmp
add
sahf
inc
sbb
jno
aam
xor
out
test
push
insb
xchg
sub
xchg
dec
insb
push
movsb
jmp
xor
addr16
sub
pushf
mov
lret
or
mov
test
arpl
stos
outsl
inc
xor
ret
push
jge
xchg
test
ja
popa
ljmp
cs
cmp
mov
negb
dec
ss
fwait
sub
adc
ljmp
cli
mov
icebp
push
pop
mov
adc
popf
loope
outsl
out
or
cltd
shlb
dec
ja
mov
push
sub
test
je
mov
mov
mov
stc
cltd
pop
lahf
dec
repz
enter
or
lods
and
out
jbe
cltd
xchg
decb
pop
dec
dec
les
fmulp
or
mov
xor
xchg
sub
popf
sbb
lea
or
iret
pop
pop
jbe
xchg
bound
faddp
div
cmp
mov
or
push
nop
pop
shlb
jae
and
imul
stc
sbb
xchg
leave
inc
xchg
arpl
or
js
xchg
cmp
pop
imul
and
fwait
jo
cmp
fimuls
xchg
loop
mov
lret
push
scas
cmpsb
dec
ljmp
movsl
mov
push
jmp
jno
hlt
loopne
pop
push
or
sbb
fucomi
push
adc
sarb
xor
jmp
in
outsb
cltd
push
mov
adc
push
or
les
imul
das
inc
or
cmp
add
jb
loopew
jg
clc
xchg
cltd
jecxz
mov
psadbw
loope
fistl
in
and
jmp
adc
out
cltd
push
add
push
and
dec
ds
repz
rcrb
out
lock
cmpb
lret
in
int3
mov
sub
mov
mov
out
push
in
lods
and
inc
in
andb
iret
adc
mov
adc
popf
mov
roll
xchg
vpcmpgtb
dec
dec
xor
nop
aas
mov
or
addr16
std
testb
push
xchg
cli
lods
jl
and
test
movsb
fisubrl
push
rorl
and
xlat
inc
scas
xchg
rcll
dec
jne
xchg
popa
push
xchg
ja
in
in
aas
lret
cmpsl
cwtl
out
or
in
loopne
enter
out
push
and
add
hlt
inc
and
cmp
cmpsl
add
pop
addb
mov
lahf
loopne
mov
adc
imull
pop
sub
aaa
inc
mov
and
inc
jecxz
jecxz
push
loope
inc
in
mov
mov
mov
mov
push
mov
inc
add
push
leave
pop
or
outsl
lcall
stos
mov
jle
hlt
jmp
shlb
lods
ret
jnp
lcall
mov
enter
cs
xor
inc
add
mov
and
inc
inc
popa
adc
jle
pop
sbb
mov
mov
add
out
movsb
inc
es
xchg
aas
mov
fwait
addr16
in
dec
push
push
mov
js
movb
jo
and
mov
pop
pop
aad
jg
jp
xor
adc
add
jle
test
es
test
shr
or
out
shrb
mov
imul
movb
dec
mov
bnd
push
fimuls
sub
test
xchg
shl
jmp
daa
xchg
mov
les
mov
roll
mov
push
mov
sub
or
push
out
in
pop
lds
pusha
stos
mov
cmp
repz
inc
movsb
xchg
stos
outsb
daa
or
or
sub
push
dec
loop
xchg
dec
mov
mov
mov
mov
cmp
cltd
jl
arpl
in
imul
fmulp
rolb
dec
inc
popf
repnz
pop
das
imul
cmpsb
sbb
lcall
iret
sub
or
int3
cmp
bound
aam
xchg
sub
xchg
mov
pusha
adc
dec
xchg
cs
mulb
sub
adc
mov
mov
test
or
bound
test
mov
ret
lahf
xchg
movsl
xor
cmpb
std
and
fwait
or
pop
in
lahf
lods
xlat
fisttpl
leave
out
orl
mov
or
push
cmp
js
adc
push
clc
shrb
xchg
lcall
or
cmpsb
fwait
test
mov
pusha
mov
fsub
xchg
add
rorl
inc
aam
and
mov
mov
mov
lret
push
int
loope
mov
push
sub
or
sti
pushf
sbb
call
mov
lret
jle
mov
jmp
std
loop
lods
in
push
imulb
sub
test
fcoml
arpl
mov
ret
ljmp
xchg
lcall
add
lcall
out
sub
dec
int3
in
mov
icebp
ljmp
mov
insb
adc
xchg
mov
jmp
loop
outsl
pop
xchg
fwait
mov
or
inc
mov
mov
in
fisubrs
out
inc
ds
mov
sti
jecxz
arpl
fs
sub
adc
xchg
jle
fidivrs
lret
xor
stos
daa
fistpll
mov
insl
cld
arpl
in
cmp
cli
in
ss
ss
mov
iret
jl
dec
adc
mov
cmpsb
jecxz
xorl
or
xchg
scas
sbb
lret
repnz
adc
popf
nop
ret
jb
mov
xchg
mov
mov
and
cmpsl
xor
push
cli
pop
cmpsl
les
adcb
xor
lods
or
mov
popf
jecxz
sub
fldt
adcl
rorl
je
mov
bound
sbb
stc
xchg
in
dec
pop
mov
leave
push
xchg
add
mov
ret
gs
push
or
aas
and
lret
inc
rorl
repz
xchg
mov
xor
lods
sub
lods
xchg
cmc
cltd
gs
sub
rcrl
xchg
mov
sub
roll
xor
sar
stos
xchg
out
xchg
std
imul
mov
jecxz
stc
in
outsl
out
adc
sahf
mov
outsl
pushf
les
mov
nop
xchg
mov
jmp
fcoms
jp
push
orl
add
enter
dec
add
cmpl
dec
aaa
mov
jbe
dec
in
xchg
cmp
cmp
std
pop
push
push
ret
addr16
adc
or
js
enter
mov
sbb
test
add
fucomip
scas
ret
cmpsl
andl
push
jb
push
jmp
dec
bound
dec
jmp
cmp
push
push
adc
popa
or
rorl
dec
jbe
loop
push
sbb
sahf
adcl
adcb
jp
test
xor
stc
mov
and
aad
out
and
shlb
or
cmp
ret
aas
sub
addb
sub
xor
jecxz
and
add
sbbb
or
dec
lea
iret
jecxz
arpl
je
test
imul
iret
lods
mov
mov
lods
test
lret
cmp
ficoms
ret
xchg
hlt
or
and
jmp
inc
pop
cmp
in
jo
push
xor
sarb
and
jge
push
nop
mov
stos
ret
mov
xchg
bound
fisubrl
pop
rcrb
xor
scas
repnz
outsb
popf
aam
lods
mov
out
mov
imul
jle
int
imul
sbb
jle
sbb
ljmp
sub
jns
and
cs
xor
adc
stc
sub
push
inc
jnp
es
adc
scas
push
xchg
mov
mull
mov
test
or
pop
push
adc
andb
cli
and
push
jb
mov
das
js
out
mov
mov
notb
cmpl
aam
push
es
rcrl
mov
insb
mov
stc
mov
sbb
loop
pushf
stos
rcl
cmp
call
scas
js
scas
mov
insb
jecxz
add
sub
and
jmp
pop
or
scas
mov
ret
lret
dec
lods
mov
loop
push
jmp
sarb
xchg
movsl
adc
cmc
shlb
cli
cmpsl
push
mov
sar
out
mov
mov
sub
and
push
cltd
jmp
scas
or
and
and
lahf
jo
sub
or
or
or
xchg
rcr
pushf
in
sub
stc
cltd
or
lea
xchg
jecxz
lret
dec
jmp
jg
in
mov
arpl
inc
fmull
fadd
lret
jb
testl
mov
push
jle
into
mull
sub
mov
xor
inc
lock
add
cltd
inc
imul
out
jecxz
or
out
and
inc
cmpsb
dec
mov
pushf
mov
popa
inc
shl
jp
fisubl
push
jb
cltd
jg
sti
fmull
lret
aad
loop
pop
ret
xlat
lcall
cs
jmp
movsl
loop
das
jno
mov
push
hlt
inc
adc
xchg
jmp
icebp
lods
stc
cmp
mov
jmp
push
mov
cs
inc
pminub
fwait
mov
pop
mov
shr
sbb
iret
sbb
sbb
daa
shll
fstpt
and
ljmp
pop
rorl
jecxz
push
inc
add
in
cs
ror
sub
adc
lret
jle
dec
and
cs
les
std
jae
popf
sbb
jne
shlb
lods
jmp
shlb
dec
enter
xchg
sti
xchg
mov
leave
popa
test
inc
push
jmp
sbb
cmp
leave
or
out
jg
ljmp
xchg
mov
sbb
jecxz
arpl
ret
dec
push
subb
jb
push
test
fs
push
xor
jge
stos
arpl
push
push
sub
out
fimull
sub
jmp
cld
push
adc
icebp
outsb
push
sub
dec
sbb
mov
adc
ret
dec
xchg
lods
sbb
push
movsb
mov
dec
cwtl
gs
inc
fldenv
and
mov
cmp
aas
inc
or
insl
mov
mov
aaa
movsb
dec
xor
jge
in
inc
ds
in
mov
testb
jl
jmp
sti
out
or
dec
out
popf
xchg
xor
cmp
sbb
xchg
fcoms
inc
sbb
gs
and
inc
pushl
adc
add
fidivrs
jmp
movsl
push
sbb
imul
sbb
in
ror
mov
aam
or
push
aam
les
sahf
sbb
jmp
stos
sbb
inc
repz
mov
cmc
ret
mov
fcmovnbe
subb
cmp
das
and
adc
movsl
cmp
sbb
aam
scas
movsl
jmp
xlat
scas
mov
dec
addb
sub
cld
jmp
imul
pop
pop
cmp
jmp
mov
ret
inc
pushf
cmp
pop
repnz
lret
mov
gs
sub
mov
inc
add
ss
push
das
inc
pop
aaa
scas
inc
xor
push
inc
loope
in
pop
mov
pushf
out
into
leave
jb
fstpt
xor
int3
lcall
repnz
mov
inc
sub
and
nop
inc
xlat
jecxz
sub
gs
sbb
test
shl
inc
add
test
stos
icebp
jl
insb
repz
adc
sub
fsts
push
lret
push
sub
lea
or
dec
out
loope
mov
inc
call
inc
sbb
or
outsl
adc
sbb
fcoml
nop
imul
add
and
loop
push
mov
or
adc
pop
inc
mov
mov
daa
nop
fsubrl
push
sbb
cmp
pop
mov
jle
scas
call
cmpsb
pop
mov
jge
mov
sub
pop
lea
xchg
pop
fiadds
jb
jge
loop
call
add
pusha
ror
shlb
dec
sub
ret
jge
push
xor
mov
sbb
rcrb
jmp
das
aaa
push
lods
ficoml
adc
and
xor
xchg
sbb
mov
clc
push
rorl
shlb
pop
pop
stos
movsb
pop
cwtl
subl
dec
sti
bound
std
xchg
fsubrl
stc
scas
imull
pop
stc
mov
call
push
lods
xchg
jne
icebp
movsb
push
fs
sahf
jo
incl
jnp
fldl
push
fwait
xchg
pop
fiaddl
pop
or
ds
in
mov
flds
sub
add
push
stos
jg
add
sbb
sbb
addb
xor
arpl
inc
lods
push
cmp
cwtl
hlt
jg
ret
and
into
cmp
test
out
fmulp
sub
outsb
xchg
and
add
cli
lods
rcrl
dec
arpl
fwait
in
hlt
out
lahf
xor
xor
in
aas
lods
adc
lret
popa
xchg
mov
xor
scas
lret
movsb
mov
dec
and
jecxz
pop
div
jae
imul
add
jno
sub
fxtract
shl
adcb
faddp
mov
outsb
xlat
popf
test
rorl
cwtl
sti
out
scas
xchg
jmp
push
pop
scas
xchg
aad
xor
push
mov
sub
xchg
mov
loop
hlt
sti
sbb
out
idivl
das
popa
jmp
iret
mov
rolb
push
test
lea
inc
pop
dec
sub
loope
pop
sbb
sti
jne
in
mov
repz
std
loop
adc
push
mov
pop
or
call
sarb
jmp
add
out
mulb
test
cmp
repnz
mov
dec
mov
mov
or
pusha
dec
or
stc
mov
jne
push
and
add
rorl
lock
mov
cmp
lahf
xor
fiaddl
pop
mov
idivb
dec
insb
ret
out
and
aaa
aam
testb
cld
movsl
sbb
cmp
inc
cltd
cmpsb
cld
stos
imul
movsb
popf
pop
in
movsb
ljmp
into
sbbb
fidivrl
pop
and
imul
negb
inc
sub
jmp
test
cwtl
out
insl
dec
pop
cmp
add
and
jmp
mov
mov
mov
std
pop
dec
cmc
pop
add
push
ljmp
or
mov
xchg
fistps
cld
lods
dec
jle
xor
test
pop
dec
aas
fcmovnb
ret
sub
enter
lds
inc
lret
mov
cltd
shlb
ljmp
sbb
xor
mov
mov
pop
stc
xlat
ret
mov
add
in
pusha
testl
aam
lods
xor
mov
mov
dec
idivb
mov
testb
or
scas
xchg
into
add
inc
pop
popf
cmp
cmpsl
jno
xor
je
stc
das
mulb
fs
dec
in
rol
push
mov
inc
xchg
jb
fs
mov
loope
add
mov
dec
filds
sbb
push
stos
fisubrs
ja
les
das
movsb
xchg
inc
addr16
adc
je
mov
push
xor
setl
xor
mov
lods
mov
adc
bound
shrb
push
push
cmc
mov
push
in
dec
lahf
push
inc
jb
or
xchg
adc
push
dec
dec
dec
fwait
sti
dec
jbe
pop
xchg
jne
jp
sahf
rcll
loop
push
push
inc
js
movl
fcmovnu
xchg
imul
adc
xchg
xchg
jo
mov
jbe
sti
adc
mov
in
push
cmp
cmp
ds
sbb
adc
and
in
sub
imul
jl
pop
sbb
xor
push
fildl
mov
rol
push
je
arpl
fsubl
jno
xor
ljmp
movsb
sub
testb
popf
jno
je
mov
add
or
idivl
push
ret
and
mov
les
sbb
and
mov
sbb
fnsave
pop
lret
fistps
xchg
cs
int
xchg
test
jge
je
sti
stc
sbb
loop
je
lods
adc
pop
sub
cli
fisttpl
mov
pop
or
in
xchg
lea
arpl
sub
out
pop
lods
mov
in
mov
scas
rolb
loop
andnps
fisubrl
or
inc
pop
fimull
ret
ret
dec
cmp
scas
loop
orb
mov
int3
fisubrl
prefetch
mov
add
imul
sbb
cmp
or
in
mov
mov
sub
sti
sub
pop
dec
movb
lods
mov
fadds
adc
ficoml
inc
jge
dec
or
icebp
repz
xor
jp
push
loop
cmp
cmp
sti
push
push
push
mov
loope
jecxz
mov
push
ret
cli
push
push
shrl
mov
jb
hlt
lret
int3
mov
ds
and
fisubs
add
mov
mov
add
pop
addb
mov
xchg
dec
orb
int3
inc
sbb
insl
push
inc
insl
push
dec
in
dec
sbb
into
lods
lahf
inc
mov
ljmp
pushf
xor
iret
pop
push
cmp
clc
in
or
cmpsl
mov
dec
and
ss
or
arpl
xor
sub
pop
dec
imul
or
in
pop
cltd
insl
repnz
pusha
dec
mov
xchg
fdivs
xor
dec
mov
push
outsl
xchg
test
sbb
push
jnp
ret
and
sbb
shrb
pop
or
jl
fs
scas
stos
repnz
jae
pop
ljmp
jl
bndldx
in
xorl
cmp
inc
jge
in
pop
stos
or
dec
xlat
lods
inc
add
xchg
adc
sub
or
mov
ficoms
call
xchg
sub
pop
mov
cli
jl
mov
lods
mov
scas
mov
test
jnp
in
psrld
out
add
int
les
fldl
xor
or
lea
mov
andl
mov
add
dec
jmp
adc
je
out
push
or
pop
pushf
jecxz
mov
cmp
fwait
mov
imul
ficomps
mov
adc
out
rcl
xor
adc
pop
mov
mov
sbb
pop
nop
pop
push
or
imul
fcoml
insb
movl
mov
cmp
in
sub
aam
mov
cmpsb
mov
imul
imul
lahf
sbb
jbe
jl
lods
jecxz
jmp
aam
rcl
sub
adc
sbb
out
icebp
popf
pop
call
outsb
loope
lret
aas
test
cli
ss
push
ds
sbb
pop
mov
xchg
pop
lret
jp
imul
stos
jb
outsl
shll
pushf
adc
insl
adc
pushf
fistpl
push
fiaddl
adc
xchg
das
xchg
dec
arpl
lret
mov
aas
roll
int3
mov
stos
add
ret
lret
punpckhbw
or
mov
or
pop
arpl
inc
fs
inc
add
iret
push
xchg
mov
aaa
sbbb
add
mov
out
mov
mov
faddl
inc
add
sub
ss
mov
jmp
adc
incl
cld
xchg
mov
mov
add
jbe
jp
das
call
shll
xor
bound
fdivs
loop
mov
inc
movsb
xor
lea
pop
out
aam
mov
test
leave
mov
rcrl
fsubrl
lahf
pop
bound
pop
mov
sysret
lret
aad
loop
xchg
in
lds
lock
push
incb
ljmp
or
push
fisubl
pop
cld
popf
push
inc
mov
sar
mov
loop
pushf
fidivl
cmp
repz
fidivl
pop
lock
rcrb
addr16
subb
pop
ret
and
dec
call
fs
test
add
gs
push
fistpll
nop
movsl
int3
pushf
lcall
andl
insb
jo
dec
ljmp
mov
movsl
or
cltd
cmp
repnz
cmpsb
or
lods
out
push
add
mov
fstl
mov
dec
jp
sbb
jecxz
bound
adc
and
inc
jno
cmp
pop
jne
stos
sbb
xor
cld
mov
imul
scas
cmpsb
ret
loope
movsb
ss
adc
inc
in
mov
dec
les
sbb
jmp
ret
sbb
cld
lock
enter
cmp
sub
sti
int3
push
jnp
in
out
das
xchg
cs
cltd
jmp
mov
sti
pop
lods
adc
and
push
aad
mov
scas
pushf
gs
sbb
loop
lcall
daa
lods
nop
ret
mov
cs
sub
popf
popa
mov
sarl
sbb
mov
inc
arpl
mov
jnp
mov
pop
out
pop
test
mov
call
in
mov
jb
ficomps
iret
inc
sbb
test
lea
jae
lret
pop
call
cmpb
movsl
xlat
or
shlb
fists
fucomi
fstpt
roll
aam
pop
jmp
jmp
stos
orl
xchg
push
sti
pop
mov
sbb
or
lock
lds
mov
into
add
sub
in
daa
in
nop
ret
jb
push
dec
call
iret
add
push
jecxz
je
pushf
fidivrl
inc
imull
mov
and
cltd
jae
popf
adc
xor
mov
ret
lods
notl
out
shll
test
push
inc
pop
out
xorb
push
or
adc
je
lods
fldt
and
lds
sti
idivb
inc
and
fcoms
loop
movsb
stos
scas
push
loop
mov
lcall
and
push
add
movsb
test
daa
sbb
or
in
pop
adc
fcmovne
adc
add
out
int3
xchg
lods
and
insl
inc
jno
pop
sbb
incl
dec
add
stos
jmp
inc
mov
lret
inc
add
cmp
clc
xchg
mov
hlt
or
int3
cltd
insb
mov
fdivrl
rclb
push
cmp
or
and
mov
mov
dec
fsubrs
inc
adc
cli
push
xchg
and
inc
or
lcall
addl
and
es
fidivl
arpl
int3
cmp
insl
pop
mov
adc
push
mov
ss
mov
jecxz
adc
cli
or
pushl
shll
push
fs
scas
mov
test
mov
lahf
mov
cs
push
push
mov
daa
movsl
ja
lret
jno
cmp
faddl
movsl
sub
pop
mov
push
sub
jg
mov
push
lock
out
lea
xchg
fldt
sub
ds
sbb
pop
add
loope
andl
dec
mov
cmp
std
or
add
and
ret
insl
inc
fisubs
jb
adc
sbb
scas
fwait
aam
das
dec
xchg
xor
sbb
movsb
fwait
add
in
mov
and
xor
ss
pushf
and
add
test
cwtl
fnstsw
into
add
mov
nop
jne
add
xchg
in
jb
fwait
leave
test
jns
das
adc
sub
fnsave
inc
push
enter
movb
mov
or
bound
jge
mov
jge
mov
test
or
rorl
pushf
icebp
jae
dec
push
lret
mov
mov
dec
ucomiss
test
or
xor
cmpsb
or
sub
xor
cmp
or
lods
sbb
adc
out
mov
xchg
ret
addr16
lods
cmp
ja
mov
xchg
and
mov
jge
xor
pop
flds
push
sub
sti
or
test
jecxz
ss
movsb
call
in
les
out
sbb
mov
addr16
orb
ja
mov
insb
scas
jmp
out
dec
test
cmp
jge
shll
scas
rcr
into
jns
in
aaa
insl
add
pop
xor
ret
ja
mov
adc
enter
int3
inc
sub
jp
les
testl
jl
xor
pop
outsl
iret
orb
cmp
mov
movsb
fucomp
data16
les
jmp
cmc
lea
decl
add
call
pop
arpl
mov
jnp
mov
or
jmp
mov
pop
std
inc
mov
xorb
inc
add
out
mov
or
dec
xchg
jge
add
ret
pop
mov
mov
lahf
inc
mov
mov
cli
scas
stos
ja
test
loop
gs
mov
jne
jmp
pop
mov
orl
ljmp
pop
test
push
pop
sub
lret
sbb
pop
jnp
arpl
or
push
scas
pop
mov
cwtl
das
roll
call
lret
daa
dec
notb
mov
ret
push
xor
lret
mov
sub
stc
jmp
repz
cmp
lret
mov
in
idivl
hlt
mov
jmp
push
scas
jnp
mov
jo
lahf
lea
mov
sub
push
scas
xchg
push
filds
movsb
sub
mov
aam
jo
std
xchg
xchg
bound
push
dec
out
and
lea
mov
ret
call
sub
or
cwtl
or
pop
out
mov
sahf
or
into
ret
ljmp
mov
dec
neg
adc
notl
repnz
imul
push
or
jmp
orl
ud1
lret
xor
cmp
xor
rcr
dec
rcrb
jne
mov
lock
sub
mov
xchg
jbe
push
cmpsl
fucompp
stc
sbb
sbb
popf
pop
jp
lds
cs
jno
pop
arpl
rcrl
gs
aad
scas
mov
scas
gs
test
sub
mov
imul
jno
out
mov
mov
push
jnp
push
dec
jo
ss
subl
mov
push
adc
iret
arpl
adc
and
sahf
ljmp
ret
sahf
dec
adcl
jmp
sarl
mov
push
mov
sub
aaa
ljmp
inc
mov
pop
add
int3
jle
test
int3
shll
fwait
imul
pop
fldenv
xchg
dec
out
not
pop
add
out
pop
popf
in
inc
data16
sub
out
inc
sub
dec
mov
test
pop
mov
jb
xchg
mov
bnd
sbb
jmp
cmp
in
inc
roll
xor
xchg
lods
pop
push
shll
add
ss
mov
mov
jnp
pop
mov
xchg
jmp
dec
ffreep
inc
add
sub
add
mov
mov
pushf
pop
pusha
and
std
xchg
pop
xchg
lock
inc
jb
fmul
aas
or
push
ljmp
mov
mov
out
xchg
loop
push
into
pop
and
in
xchg
repnz
mov
mov
jne
mov
pusha
fsubr
mov
loop
push
dec
loop
and
or
loop
in
xchg
into
int3
adc
xor
mov
sub
insl
ret
sbb
sub
loop
in
int3
sub
push
int
imul
mov
xor
outsb
in
mov
movsb
inc
mov
xchg
xor
xchg
mov
xchg
scas
stos
into
mov
add
sbb
xchg
outsl
sbb
dec
sbb
stos
das
adc
sti
mov
dec
xchg
inc
mov
leave
lsl
adc
gs
int3
pop
xlat
mov
adc
jns
xor
mov
leave
sbb
mov
dec
and
push
aas
sub
pushf
sub
pop
call
mov
mov
pop
cmp
imul
mov
or
sahf
jl
push
dec
and
xlat
insb
lock
out
scas
cwtl
cli
aam
mov
neg
pusha
clc
cwtl
popf
xchg
inc
cmp
in
imul
xor
lods
sub
call
fwait
movb
cli
cmp
out
aaa
gs
push
xlat
mov
mov
ret
lods
adc
ficomps
sbb
mov
fisubrl
loop
lods
gs
and
out
in
lea
outsb
gs
loop
inc
mov
mov
and
mov
sub
inc
and
call
mov
scas
xor
outsb
call
sbb
inc
xchg
cmp
jle
fs
insb
fwait
push
repnz
loop
ret
xchg
insb
repnz
or
jecxz
sbb
into
add
aam
add
data16
sti
pop
and
call
mov
sub
jg
insl
in
test
jnp
sbb
push
out
xchg
or
mov
or
dec
je
pusha
loopne
insb
sbb
mov
sbb
cli
jnp
in
loope
dec
sbb
leave
popf
sub
mov
dec
sub
in
andb
out
iret
sbb
movsl
sub
mov
xchg
scas
or
push
stc
mov
outsl
clc
xchg
into
cltd
push
xor
shrl
stc
aam
insb
scas
jp
mov
and
pop
cli
clc
ret
dec
sbb
stos
or
push
addb
mov
lret
stos
insb
sub
sub
cpuid
sbb
sub
loopne
mov
add
cpuid
mov
into
sbb
loop
and
call
xchg
add
adc
sub
adc
insb
adc
lods
adc
out
in
adc
xor
adc
es
sbb
inc
lret
aas
lods
call
mov
or
mov
cmpsl
cltd
imul
lahf
dec
stos
mov
add
enter
dec
aad
jae
fidivs
mov
lods
sahf
std
lods
or
fiaddl
out
dec
adc
adc
lahf
pop
xchg
imul
loop
adcb
hlt
lods
inc
sbb
inc
sub
jle
test
and
rorb
addr16
adc
mov
mov
sbb
inc
mov
xor
loop
sub
ret
pop
shll
dec
stos
int3
and
lods
stos
push
mov
cmp
data16
repz
sbb
loop
sbb
sbb
nop
insb
adcb
in
rep
popf
es
xchg
push
bnd
and
ficoml
les
movsb
jae
xchg
jge
mov
ret
das
sbb
loop
and
insb
int
lods
mov
mov
loope
or
ror
mov
lods
test
add
sub
loop
sbb
test
scas
out
sti
add
out
xchg
or
cmp
cld
pop
lods
mov
or
or
inc
jmp
leave
pusha
add
out
scas
leave
test
jge
pusha
or
push
cmpsb
add
arpl
mov
sub
jecxz
inc
xlat
pmaxsw
xchg
dec
sub
mov
stc
mov
sub
add
lahf
and
pop
adc
repnz
mov
fsubrs
hlt
sbb
imul
sbb
call
stos
in
sti
cmp
or
or
in
ret
and
movsb
sahf
movsl
xchg
and
sti
cmp
adc
mov
mov
inc
sbb
mov
jmp
pop
xchg
fldcw
fwait
movsb
mov
jmp
dec
scas
shl
pop
ret
push
in
dec
cmp
int
mov
mov
or
ret
lods
flds
adc
inc
pop
mov
or
mov
sub
add
shll
add
push
nop
aam
pop
pop
sub
jb
sub
xchg
jmp
add
pusha
ret
lea
fsubrs
test
push
jge
xchg
and
in
xor
jmp
mov
mov
push
les
push
roll
test
jne
pushf
out
scas
mov
cs
mov
divl
loope
bound
dec
inc
mov
sbb
in
mov
outsl
popf
cmpsb
jne
jbe
sahf
mov
pop
lock
imul
ljmp
mov
es
or
jmp
jmp
outsl
push
push
and
popf
mov
or
lods
mov
mov
mov
loope
lock
insl
insl
mov
push
fcoml
mov
mov
sbb
and
inc
adc
ret
les
jle
sub
mov
in
gs
xor
sub
dec
imul
push
mov
cmp
mov
fndisi(8087
xchg
push
lcall
inc
cmpsb
out
mov
sbb
mov
cmp
xchg
ss
xor
ss
iret
mov
jp
imul
mov
sbb
imul
inc
push
sub
loop
sbb
sub
add
in
lahf
mov
add
or
ss
push
imul
or
nop
mov
push
repz
push
jg
into
inc
adc
and
mov
das
cli
lahf
mov
fsub
xor
scas
movsb
cmc
mov
lahf
loopne
pop
out
adcl
push
ljmp
cmp
fmul
adc
xchg
fstps
sub
stc
std
popa
push
mov
roll
orl
sbb
cmp
adc
jb
mov
push
mov
adc
insb
add
mov
sub
sahf
mov
xor
and
fucom
sahf
jge
sbb
push
cmp
push
loop
cmpb
fcomp
popf
xchg
movsl
mov
pop
jo
add
mov
repz
imul
lret
inc
mov
sub
mov
xchg
adc
repnz
add
inc
add
adc
inc
mov
push
loop
test
loope
cmpsl
inc
jle
adc
pop
sahf
fistpl
mov
mov
flds
xrstors
push
imulb
dec
push
lock
mov
cmp
dec
push
xor
out
sbb
cltd
sub
test
lret
neg
out
movsb
jle
xor
lcall
jmp
sub
cmp
ds
ss
mov
inc
pop
jns
fiaddl
imul
repz
les
cld
das
testb
jl
test
rorl
out
vpcmpeqw
inc
scas
jbe
mov
test
addl
scas
push
push
mov
mov
call
mov
shll
jle
jge
pslld
loop
push
rcll
inc
mov
fucomi
push
xchg
xchg
ds
push
in
or
sbb
mov
scas
inc
sarl
jnp
shrb
js
pop
xor
test
jecxz
and
stc
stc
mov
inc
cmp
push
adc
sbb
jno
outsl
pusha
or
mov
dec
out
push
pushf
fdivrl
or
sub
sub
and
dec
adcb
sub
shlb
lcall
sahf
lods
ss
xchg
push
mov
test
addb
scas
roll
movsb
lods
jmp
sub
pop
stc
andb
bound
mov
mov
mov
add
scas
push
sbb
cmp
mov
pusha
fildll
and
testl
push
sub
test
psubq
add
fmuls
adc
ret
and
xor
sbb
adc
enter
push
imul
push
mov
cmp
xorb
std
stos
mov
loop
xor
pop
xor
incl
dec
lods
sub
xor
sbb
push
add
lahf
arpl
sub
adcb
inc
jno
stc
sti
out
sub
sbb
or
mov
mov
cmp
dec
inc
shlb
dec
out
cmc
adc
and
aaa
mov
bnd
insl
mov
mov
sahf
scas
mov
mov
insb
fnstsw
push
xchg
pop
inc
int3
lock
xchg
mov
ss
jmp
push
mov
lcall
fisubs
adc
mov
out
mov
jge
add
loope
mov
lret
gs
iret
mov
lock
add
movsb
pop
dec
je
movsl
add
push
jl
jl
insl
icebp
and
jp
adc
stos
xor
lret
or
dec
adc
popa
or
sub
ret
and
mov
inc
scas
and
lea
outsb
mov
jo
out
jo
jp
sbb
inc
rorb
pop
sub
aad
andb
pop
data16
ficompl
popa
sahf
enter
inc
arpl
jbe
ret
mov
mov
sbb
fs
or
mov
fwait
rcrb
sbbl
mov
fcomps
mov
cmc
lods
sbb
leave
ss
dec
jle
or
adc
faddl
jb
mov
xchg
inc
test
pushf
test
addr16
cmp
test
push
arpl
push
in
sarb
fldl
pop
cs
scas
add
cs
jp
push
xchg
mov
jo
jge
jg
sub
jo
sbb
xlat
frstor
jle
push
xlat
lahf
push
mov
mov
push
push
mov
xchg
ret
jo
dec
push
inc
repz
jl
sub
lods
lods
andb
shlb
add
cmpsb
push
test
rolb
jns
sarl
mov
mov
or
imul
movsl
and
rcrb
pop
scas
hlt
mov
adc
pusha
jae
jnp
dec
sahf
js
imul
mov
insb
or
insl
push
outsb
mov
jo
das
shl
add
call
shll
js
mov
sahf
sub
out
push
icebp
in
sub
outsb
fs
gs
fmuls
inc
inc
or
imul
es
adc
dec
mov
mov
cli
mov
push
stos
je
dec
movsl
pop
and
push
add
out
js
je
outsl
rcrl
adc
int3
stc
sbb
mov
adc
jo
nop
dec
push
stos
mov
push
xchg
pop
repz
sub
loop
out
int3
jmp
sub
adc
adc
jae
sbb
ret
jmp
fcoms
shll
push
ja
inc
mov
shrb
pop
ret
cmp
cmp
out
xchg
rcrl
sub
adc
inc
cmp
mov
mov
in
sbb
push
push
imul
sbb
sub
sub
jp
xor
inc
or
push
dec
inc
repnz
jne
rcll
dec
inc
and
enter
outsl
gs
fnsave
cmp
sub
sbb
jmp
std
icebp
fimuls
mov
insl
pop
or
out
cmp
lock
and
adc
lcall
cltd
dec
xchg
or
lret
insb
jne
jmp
fsubrp
in
imull
clc
adc
adc
aam
andb
sbb
aam
rorb
inc
jp
push
inc
push
push
inc
push
sub
add
rcrl
jecxz
imul
jecxz
repnz
leave
movsl
xchg
pop
sbb
sub
in
mov
in
mov
mov
xor
cmp
adc
scas
fsts
sbb
sbb
pop
ret
push
addr16
push
hlt
ficoml
in
xor
cmpsl
in
sub
mov
inc
push
out
mov
repz
ret
bound
clc
imul
shl
xchg
ret
jno
fcmovnb
mov
repz
xor
lods
lods
stos
lock
cmp
nop
or
roll
sub
mov
lods
bsr
fsubp
dec
and
push
push
ljmp
jg
rorl
mov
sbb
sub
xchg
adc
cs
lods
mov
cmpsb
xorl
jae
jmp
cmp
stos
mov
roll
sbb
sbb
in
mov
sub
add
mov
sbb
test
test
mov
jecxz
lcall
mov
xchg
sub
inc
dec
or
add
andl
or
jns
scas
cmp
cwtl
xchg
movsl
pop
inc
or
and
add
sbb
bound
xchg
ficoms
dec
pop
insl
sub
sbb
in
movsb
outsl
push
push
sarl
subl
ljmp
pop
fwait
stc
ret
and
pop
xor
xor
inc
lcall
jnp
popf
mov
imul
lock
fcmovnu
or
rorb
sub
ljmpw
inc
ret
outsb
fnstcw
xor
scas
shlb
push
add
inc
push
jb
sarb
adc
mov
or
push
out
repz
adc
fsubrs
or
sub
push
cmpsl
and
push
jbe
test
jb
xchg
mov
fs
pop
lret
ret
sbb
sub
fisubs
or
lea
ret
sub
lcall
and
adc
sbb
imul
mov
xbegin
xor
xchg
xor
jns
and
or
cmp
lahf
jno
jbe
add
test
in
in
mov
ja
jle
or
jl
sub
jne
es
hlt
ret
and
sub
ret
adcb
inc
and
and
inc
sbb
std
out
int3
mov
or
xchg
stc
jecxz
mov
pop
sub
in
mov
adc
mov
xor
cmp
enter
hlt
cltd
push
dec
xor
test
dec
jecxz
mov
repz
ret
movsb
rclb
mov
cs
fstl
xchg
out
adc
gs
test
loop
roll
inc
or
add
pop
mov
in
mov
sub
fdivrs
stos
fcmove
cmp
jg
mov
mov
add
jmp
sub
pop
lret
sub
das
sbb
sub
xorl
dec
xchg
jae
roll
mov
in
ljmp
cmp
mov
inc
or
mov
ficoms
cli
lahf
fcompl
cmp
sub
pop
aaa
push
fcoml
jg
cmp
xchg
mov
arpl
idivb
dec
movsb
aam
xchg
sbb
jae
repnz
xor
lret
jmp
push
pop
push
test
xlat
jge
in
lcall
ljmp
popf
testb
inc
ljmp
fldt
or
imulb
push
jno
mov
sbb
out
rolb
test
stos
mov
jae
xchg
mov
adc
adc
loop
cmp
pop
jnp
ljmp
fidivrs
imul
mov
lea
loop
xor
cwtl
cli
nop
shll
movsb
jle
filds
mov
xor
bound
cmpb
mov
test
lods
aam
and
in
xor
arpl
aad
lcall
insl
jge
outsb
pop
jne
push
xor
add
out
dec
pop
lcall
sahf
xchg
dec
pusha
fdivr
sahf
pop
or
push
stos
mov
push
data16
and
and
movsb
push
or
gs
sahf
movsb
pushf
or
and
or
ds
jnp
cmp
test
cmp
call
xor
pusha
xor
loopne
lahf
pop
xorl
sbb
or
sahf
loop
and
dec
jae
jbe
add
push
inc
insb
test
fdivrs
cmp
loopne
pop
or
movsb
ret
cmp
push
and
hlt
lret
loop
loop
leave
cmc
push
sub
inc
mov
push
and
fiaddl
lcall
xchg
dec
pop
mov
inc
xor
in
arpl
fs
bound
int
fdivl
or
push
ret
sti
cmp
popa
repz
jb
pop
orl
xchg
je
jo
call
nop
push
cwtl
xor
and
pop
sub
mov
jne
hlt
movb
fnsave
aam
xor
push
mov
addb
or
jbe
and
mov
and
dec
fidivrs
xchg
inc
ja
cli
adc
cmp
push
pop
aaa
adc
add
cli
dec
lret
cld
jge
cmp
xor
in
inc
sub
xor
popa
das
adc
add
xchg
fldt
outsl
xor
movsl
lret
adc
sub
roll
vpsubb
sbb
jmp
subl
fildl
inc
adc
xor
scas
mov
add
or
sbb
test
sub
loope
sub
or
mov
faddl
movsl
repnz
out
call
push
add
faddl
rcrb
add
push
inc
sub
in
or
in
sbb
adc
stos
xor
pushf
add
test
sub
outsb
ret
sub
jo,pt
mov
sbb
subb
push
pop
adc
sbb
xchg
ret
out
cmp
cmp
test
dec
adc
mov
je
and
adc
loope
andb
out
ret
pushf
pop
outsb
adc
mull
movsb
lcall
jb
daa
lock
aas
aas
mov
leave
aam
into
push
push
adc
cmp
out
rorl
push
sub
cli
or
add
adc
jmp
pop
or
pop
mov
push
and
fldl
jmp
jle
lea
jbe
mov
imulb
mov
inc
cld
in
int3
out
or
inc
ss
data16
push
rcrb
mov
and
pusha
pop
and
pop
call
add
pop
lcall
lods
cmp
sbb
repz
adc
dec
xor
mul
lret
jmp
jg
test
lret
adc
test
lods
pop
ret
fcoms
add
pop
out
jge
cmp
mov
add
pop
int3
ljmp
adc
hlt
mov
arpl
shld
sub
jge
popf
dec
sbb
xor
or
lret
adc
mov
mov
stc
and
adc
cwtl
pop
dec
js
aaa
pop
and
enter
mov
xchg
sbb
dec
or
mov
dec
fisttps
mov
and
jmp
fildll
or
icebp
xchg
cmp
mov
mov
js
pop
shlb
mov
aam
or
add
stc
jg
or
xchg
movsb
inc
or
jmp
sbb
mov
jp
or
inc
imul
dec
call
ds
in
add
jecxz
popf
mov
fisubl
jp
mov
lret
outsb
repz
push
ret
adc
fmul
fbstp
mov
push
push
cltd
or
mov
inc
shrl
xchg
shlb
adc
jnp
and
imul
inc
insb
int3
imul
sub
cli
shlb
adc
addb
orl
fadd
lods
inc
imul
ret
dec
sbb
out
pop
popa
pop
xchg
mov
ljmp
sbb
xchg
sbb
push
shrl
stos
pop
lods
repz
jmp
rorb
jo
js
in
pop
dec
mov
xchg
inc
fisubs
outsl
push
fcmovb
loope
add
jns
fidivrl
inc
sbb
dec
std
jl
lcall
fiadds
lea
in
dec
ret
roll
cltd
mov
jecxz
aam
ret
add
push
ret
icebp
test
jae
xor
sarl
aaa
xor
maxps
push
xor
lcall
in
jge
les
lcall
xchg
add
fdivl
jnp
add
dec
jo
fisubrl
clc
add
test
arpl
pop
lods
imul
ficomps
cmp
pop
and
jmp
aaa
inc
inc
xchg
push
sub
mov
mov
pop
jns
lret
lret
enter
mov
cld
and
sbb
arpl
adc
add
and
jns
subl
push
fcoms
cmp
mov
repz
pop
xor
in
insb
add
cmpsl
vmaxss
dec
stc
jl
cmp
lods
xchg
int
dec
sub
cld
pop
jo
cmp
repnz
mov
add
jge
movsb
jb
push
mov
or
shl
and
adc
test
fdivl
xchg
or
xor
inc
es
xor
popf
inc
ret
movsb
or
int3
and
je
sub
xchg
add
or
in
adc
out
movb
xlat
call
lahf
push
movnti
fidivs
add
test
add
xchg
lret
jmp
jecxz
xchg
ss
mov
add
mov
orb
mov
or
scas
gs
iret
or
pop
xchg
fcoms
push
xchg
cs
mov
aaa
inc
in
inc
push
inc
fcoml
pop
push
or
pop
lret
xor
xorb
mov
push
movsb
xchg
iret
xor
not
in
jl
stos
adc
ffreep
cwtl
ret
negb
popa
sub
push
andb
clc
push
sbb
sbb
dec
stos
mov
jae
fisttpl
int
xchg
scas
xor
jmp
std
mov
adc
call
pop
mov
lods
pop
inc
in
movb
cwtl
insb
push
pop
test
mov
mov
scas
sub
push
scas
jmp
pop
jmp
or
xchg
in
scas
in
jg
rorb
into
lret
add
mov
insl
cmp
mov
mov
ret
mov
insl
pop
rcrb
xchg
cmc
xor
icebp
mov
or
mov
das
fidivrs
test
ljmp
inc
xchg
mov
pusha
push
adc
inc
cli
cmp
orl
xorb
and
xor
add
push
dec
sbb
out
hlt
nopl
dec
lea
xchg
std
push
mov
loop
and
into
sub
adc
adc
call
sub
shrb
lret
cli
mov
mov
sbb
sub
mov
ljmp
sub
inc
inc
sarl
mov
lcall
rcll
jecxz
or
mov
movsb
xchg
push
stos
repz
xchg
adcl
xchg
arpl
jmp
shrb
and
mov
sbb
test
push
movsb
rclb
inc
inc
pop
lret
leave
ret
inc
popa
les
jo
js
inc
stc
jne
mov
lods
and
cwtl
pushl
dec
xor
jnp
stos
adc
lret
or
sbb
inc
insl
and
xor
pop
fisubrl
das
push
nop
pop
mov
das
mov
fldt
pop
cmp
fsts
adc
ja
lret
jae
cmp
push
dec
dec
inc
mov
ljmp
ret
outsb
repnz
pop
mov
pusha
cmpl
mov
jmp
lret
jp
jnp
es
dec
dec
sub
int
imul
loop
pop
aaa
or
aad
cs
mov
jns
imul
xchg
cmp
add
mov
aas
das
mov
inc
aaa
cmp
test
add
dec
fisubrl
jle
ficoml
lcall
jns
cld
out
and
ficompl
test
or
add
das
jp
test
mov
aad
cmp
inc
jmp
shlb
dec
dec
adc
and
cmp
cmp
mov
imul
daa
inc
into
dec
push
sub
outsb
xor
dec
mov
adc
mov
in
fists
push
xchg
jmp
xlat
add
mov
adc
ljmp
inc
and
shr
cs
popf
jg
dec
mov
and
mov
subb
ret
cltd
sbb
stc
test
popf
daa
js
mov
ljmp
sub
cmp
lea
pop
jno
pop
xor
mov
daa
dec
xchg
cwtl
cmp
jmp
std
push
dec
iret
les
clc
xchg
inc
adc
fcomps
outsb
pusha
dec
bound
fdivs
loop
hlt
pop
shrl
dec
xchg
pop
mov
pushf
mov
sti
mov
cs
outsb
call
imul
dec
aad
dec
jmp
int
leave
cs
mov
rcrl
rorb
mov
rcrl
pop
cmpl
sub
insl
enter
xorl
ss
mov
in
sbb
int3
lret
mov
scas
fsubrs
mov
or
pushf
jmp
push
add
add
test
sub
pop
inc
pop
icebp
scas
sbb
fstl
sti
mov
sbb
push
xchg
jl
add
and
adc
into
lahf
loope
jmp
lahf
pop
sbb
test
mov
xchg
lea
insb
lret
repz
mov
dec
sbb
ja
xchg
mov
cmpl
push
push
repnz
mov
stos
je
out
dec
add
jge
dec
jecxz
push
ljmp
scas
mov
mov
movsl
mov
int
jmp
adc
add
mov
out
mov
cmp
mov
iret
cli
push
sbb
push
loop
fs
sub
in
sub
xchg
dec
ret
mov
push
mov
mov
mov
ret
mov
pop
and
lods
test
or
in
test
xorb
fidivrl
push
test
xchg
orb
in
or
adc
inc
add
enter
and
adcb
jecxz
cmp
imul
xlat
lods
es
sti
push
jmp
vpaddusb
in
popa
mov
cli
into
scas
push
outsl
mov
rcrb
dec
mov
adc
imul
mov
dec
pop
mov
call
mov
inc
jmp
cwtl
cwtl
fwait
shrb
push
arpl
mov
push
pop
dec
cltd
xchg
cmpsl
inc
mov
adc
in
shlb
aam
outsl
test
sbb
lods
or
mov
in
mov
push
mov
push
dec
sub
hlt
add
mov
mov
mov
sbb
jmp
mov
dec
sbbl
in
cli
push
lock
sub
cmp
dec
or
add
pop
fwait
cwtl
cli
addr16
fidivl
shrl
mov
dec
inc
jmp
sbb
jne
and
or
mov
jb
ret
cmpsl
roll
arpl
in
sub
sub
or
lea
push
stos
cwtl
mov
in
pop
adc
or
sbb
push
or
jge
jl
in
imul
mov
testb
mov
pushf
lods
sub
xchg
jle
adc
insl
pop
icebp
dec
lcall
push
ret
movsb
push
push
sub
hlt
mov
dec
push
sbb
ja
or
mov
mov
aam
ds
adc
lar
in
jmp
cmpl
mov
adc
push
enter
xor
fmuls
mov
loop
pop
xchg
ffree
cmp
mov
stc
inc
jmp
jbe
int
iret
daa
sahf
pop
data16
mov
fstps
bound
shrb
mov
movsb
xchg
cmpsb
ljmp
mov
jp
push
dec
xor
push
ror
pushf
popa
sbb
mov
mov
stos
insb
cmp
cmpsb
xchg
xor
mov
cmp
lret
test
lods
fldenv
jge
add
push
test
adc
jb
cwtl
loop
sbb
jecxz
pop
movsb
push
andb
push
mov
push
fiadds
and
xchg
jecxz
cmp
xor
cmp
rorb
mov
scas
pushf
fcmovnu
jle
test
sub
inc
data16
adc
call
jg
dec
in
xchg
mov
sahf
cvttps2pi
imul
stos
sub
sbb
subl
mov
add
push
dec
or
xchg
cmp
inc
xlat
daa
xchg
dec
xchg
mov
mov
mov
fldl
fldt
add
and
xorb
flds
xor
js
int
jnp
inc
mov
sar
xor
sbb
ljmp
inc
and
outsb
mov
test
imul
lret
imul
push
ror
push
cli
or
push
dec
loop
shrb
mov
adc
nop
sub
mov
mov
mov
scas
outsl
adc
test
fwait
icebp
ja
inc
inc
cmp
ret
fcoms
in
ljmp
mov
cmp
lods
dec
sbb
cwtl
dec
pushl
xchg
fistpl
pop
pop
outsl
mov
push
jno
in
xchg
jecxz
lret
nop
fimuls
aad
shlb
add
dec
push
les
ret
rolb
fnstenv
xor
jge
out
fidivs
pusha
enter
into
in
arpl
jbe
xor
cmp
sbbl
jno
sti
daa
mov
icebp
push
ljmp
test
dec
xchg
out
cs
popa
inc
cmp
stc
loopne
inc
addr16
out
scas
jmp
mov
adc
ret
rolb
ljmp
outsl
repnz
jle
in
lret
dec
fcoml
das
aaa
pop
out
ss
inc
lods
jae
arpl
clc
cmpsb
push
in
pop
inc
fstp
cmp
sti
or
mov
or
lods
mov
outsl
popf
jmp
pusha
outsl
push
push
adc
jecxz
cmp
stos
clc
sub
cld
inc
fs
lret
loop
sub
mov
ja
lods
push
mov
popa
scas
xlat
int3
ss
pushf
inc
and
mov
push
shll
cltd
xor
ss
cltd
mov
clc
insl
orb
popl
cltd
adc
jb
cld
xor
pop
add
jl
cmp
inc
push
mov
nop
pop
imulb
mov
xchg
mov
mov
jmp
or
sbb
lods
adc
jo
mov
scas
cmpsb
inc
leave
dec
mov
lock
rol
add
idivb
enter
xchg
and
xor
mov
mov
sub
int
jle
popf
xor
xor
aas
xchg
xor
mov
addl
imulb
mov
mov
pop
or
jcxz
insl
push
mov
add
pop
adc
sahf
adc
clc
jns
out
sbb
mov
sub
inc
push
fucomi
lds
sbb
or
xchg
inc
push
or
clc
sbb
jmp
subb
insl
stc
xor
push
or
stc
std
xchg
push
mov
sti
inc
sub
outsl
loop
sub
cmp
jae
mov
sbb
fsubr
push
cwtl
dec
xor
and
xchg
cmp
lret
mov
mov
mov
imulb
xchg
dec
pop
jns
stos
test
or
fists
and
jmp
andl
mov
jecxz
jecxz
addr16
cmp
mov
cvtps2pi
les
mov
push
int
out
jbe
mov
int
int
push
gs
or
sub
xchg
cld
inc
inc
or
dec
fiaddl
arpl
adc
or
jne
push
adc
pop
movsl
mov
dec
roll
and
pop
cli
loope
stos
lret
cld
in
jne
xor
jle
inc
adc
xor
add
das
or
push
inc
adc
cltd
imull
or
fsubrl
pushf
dec
mov
data16
sub
pusha
outsl
out
into
movb
sbb
scas
lret
xchg
pop
pop
pop
mov
outsb
or
in
inc
xchg
insl
ljmp
xchg
xchg
sbb
xor
cmp
in
int3
loope
mov
xchg
enter
test
ret
stc
fidivrs
nop
cs
aad
and
call
adc
movsl
pop
push
mov
mov
add
lcall
push
test
aam
sub
mov
mov
mov
jbe
adc
fs
mov
pushf
psllw
shr
lcall
sub
or
test
daa
mov
call
in
sub
in
outsb
mov
repnz
js
ss
dec
inc
ljmp
cwtl
call
loope
and
add
mov
sub
cmp
dec
pusha
pop
hlt
ljmp
in
jecxz
pop
ret
inc
movsb
ret
popa
xorb
inc
inc
adc
cmpsb
bndstx
xor
mov
push
movsl
insl
push
call
add
bound
jg
fbstp
push
mov
sub
jbe
xor
pop
pop
xchg
scas
fistl
rorl
or
lret
add
test
xor
push
fiaddl
xor
bnd
fisubl
mov
mov
lcall
lock
gs
sub
cli
arpl
mov
lods
push
sbb
jno
les
cwtl
aas
mov
xorb
fs
rolb
or
pusha
nop
mov
xor
add
adc
inc
lahf
sbbb
addr16
enter
loop
mov
mov
add
cld
adc
ret
push
popa
add
rclb
jmp
jns
fidivl
or
bound
aas
aam
mov
andl
call
fadd
xor
sub
ds
and
mov
xor
call
add
ja
test
cmpsl
insb
mov
mov
lods
add
sbb
gs
mov
loop
mov
stos
shll
and
add
insb
mov
pop
mov
dec
sub
int
sub
clc
pusha
add
cld
andb
push
insl
and
icebp
popf
add
cld
mov
sub
mov
ja
stos
add
mov
cmpl
into
push
mov
daa
mov
frstor
cmpsl
mov
mov
mov
aaa
xchg
sub
cli
into
inc
jno
aaa
test
mov
fidivrl
movsl
cmp
pop
mov
out
dec
shll
mov
out
loope
add
cmpsl
mov
je
inc
push
push
xchg
sub
mov
dec
cmpb
cmp
adc
jmp
jbe
dec
pop
pushf
popa
xchg
ficomps
lea
lods
imul
add
movsb
jmp
push
gs
mov
or
cwtl
sahf
mov
xchg
rcll
into
cmp
mov
push
cld
or
xchg
jns
mov
dec
jge
adc
arpl
loop
stc
setb
in
sub
and
repnz
jmp
out
out
fisubrs
or
fsubl
inc
shrl
jle
dec
or
add
cwtl
inc
lcall
sbb
aas
lret
lods
mov
xor
dec
jge
cmp
mov
mov
or
cmp
jmp
mov
movsb
testb
push
ret
mov
push
jmp
mov
clc
cmpsb
test
mov
gs
lcall
outsl
cmp
pop
xchg
add
mov
mov
lods
ss
dec
push
adc
inc
sbb
and
icebp
cld
or
cmp
ss
fmull
inc
xchg
ffree
cmp
pushf
jmp
pop
shll
mov
lcall
mov
out
push
rorl
cmp
add
or
xor
sbb
mov
jp
jmp
jp
test
mov
mov
fstl
mov
mov
rorl
pushf
push
sub
int3
pushf
mov
inc
sbb
sub
stos
out
ret
fs
das
scas
and
pop
imul
out
push
int
xchg
mov
or
fistl
out
stos
das
aad
sbb
cmp
jne
or
ljmp
inc
pop
add
cltd
pop
jo
pushf
jno
mov
fnstenv
icebp
sar
test
pop
test
adc
dec
mov
lods
inc
or
inc
pop
push
pop
push
ret
adcb
push
scas
lea
inc
xchg
insl
add
or
in
or
push
int3
loop,pn
xor
in
adc
or
jge
mov
shl
sbb
out
jge
pop
xor
sbb
xor
call
popa
push
xlat
ljmp
jle
ljmp
lock
mov
and
rcrb
orl
or
sbb
jae
test
sbb
cli
stos
jle
arpl
data16
je
add
dec
xchg
dec
int3
pop
das
icebp
rcrl
data16
addb
xchg
mov
add
dec
enter
cs
enter
imul
fbld
xchg
mov
or
push
sbb
adc
jo
lret
scas
pmuludq
jnp
test
cmp
stc
xlat
mov
pop
and
sbb
mov
cmpl
xchg
rorl
test
shll
ret
out
xlat
fadds
cmp
cld
lret
outsb
jmp
test
mov
jne
or
fistps
inc
in
lods
push
mov
xchg
or
lods
sbb
sahf
ljmp
scas
mov
jg
lcall
xorb
aaa
mov
mov
fildll
or
inc
and
loop
sbb
loop
fcmove
repnz
into
or
jmp
pop
ret
lods
sub
xchg
divb
adc
push
xchg
push
and
stc
arpl
mov
push
jnp
sti
lods
jns
or
dec
jmp
mov
addr16
mov
aad
fadd
xchg
ficomps
shlb
push
or
ret
cmp
imul
aad
outsb
xor
test
test
dec
pushf
push
mov
shl
inc
push
lds
mov
mov
sbb
mov
in
mov
enter
int
pop
jle
sub
loopne
addl
mov
xchg
inc
or
in
fisubl
jge
sub
jmp
repz
scas
adc
dec
pop
fldl
jne
or
push
loop
dec
ljmp
mov
call
pop
mov
or
dec
les
movsb
pop
mov
pop
add
shlb
mov
adc
aad
iret
insb
mov
or
cmp
sub
push
xchg
popa
pop
popa
or
lea
sbb
lods
iret
loope,pt
imul
ja
push
adc
mov
jnp
dec
add
dec
test
int
add
jmp
cmp
mov
push
jecxz
jmp
int3
or
sahf
mov
jmp
movsb
jecxz
inc
les
fstpl
mov
inc
ljmp
inc
xchg
lea
insb
mov
add
mov
loopne
xor
mov
loop
mov
mov
cmpsb
xchg
fldenv
or
imul
ret
jg
sub
out
stc
and
sub
ljmp
shr
imul
adc
push
inc
adc
add
xor
loop
adc
repz
mov
jmp
les
pop
mov
in
js
jmp
xchg
mov
mov
ja
sbbl
sbb
or
xor
lret
pusha
lea
stos
aad
cmp
rcll
mov
jge
mov
xchg
jecxz
and
push
mov
pop
add
mov
jo
sbb
outsb
mov
ljmp
cld
add
push
lret
std
in
dec
sbb
dec
add
xchg
adc
insb
xchg
popl
adcb
sbbl
imul
sub
jg
daa
into
nop
xlat
in
in
addl
fadds
scas
xchg
iret
lret
mov
cmpsb
jecxz
test
sbbb
lahf
sbb
test
xor
cmp
mov
in
jbe
les
out
xor
rcl
andl
add
cld
sub
jmp
aad
sub
xor
adc
sub
je
outsl
cmp
mov
addr16
xchg
cwtl
dec
movsb
push
pop
fiadds
repnz
cmpsl
bound
rcl
mov
popf
movsb
push
pop
mov
xor
or
movb
mov
rcl
and
cmc
dec
arpl
decb
sbb
das
stos
lret
pop
test
psubsb
pop
int3
jmp
ljmp
mov
dec
aas
sub
mov
in
aaa
pop
or
mov
mov
fadds
or
mov
sub
movsl
stos
clc
xchg
mov
cld
loop
addr16
int
cmp
pop
repnz
cwtl
jno
sahf
mov
sub
xchg
lret
sbb
mov
or
cmp
sbb
dec
fwait
in
scas
loop
xor
or
or
lods
jmp
rcrl
call
sub
xchg
call
shr
mov
sub
sub
sbb
push
aas
popf
call
into
and
stos
dec
or
insl
adc
pop
mov
ds
sarb
xor
les
bound
cmp
sub
fwait
or
xchg
lahf
addb
xor
push
cmpsl
jmp
stos
test
cmp
in
or
pushw
mov
mov
out
cmp
cmc
xchg
xchg
xor
nop
in
push
fwait
dec
test
add
jle
daa
cmp
fldt
int
cmpsl
sbb
lods
jp
dec
and
rol
ds
into
pusha
loopne
bound
or
daa
outsb
sbb
inc
mov
stos
jmp
jp
clc
int3
jp
shll
insb
mov
sub
and
lock
daa
aaa
dec
sub
sbb
ret
inc
addl
cmp
movsb
in
sbb
cli
xor
in
mov
lods
jmp
cmpsb
int3
lahf
ret
mov
xchg
repnz
sub
xor
xchg
shll
data16
popf
sub
mov
mov
xchg
dec
jb
aas
jo
int
push
int
cmc
dec
push
popf
insl
int
daa
in
shll
test
inc
divb
cmp
loopne
bound
adc
mov
mov
xor
rolb
and
cld
mov
pop
and
data16
into
push
pop
jbe
mov
in
jo
and
ret
std
dec
dec
jmp
ja
fldl
adc
xchg
test
insb
dec
ljmp
push
test
ss
xchg
or
cmpsl
scas
je
repz
mov
pusha
pop
nop
lret
mov
insl
jo
in
inc
xor
bound
jmp
cmpb
sbb
test
mov
jle
push
fldl
and
mov
jb
in
call
jne
mov
test
xchg
sbb
xchg
pop
pop
or
mov
in
es
jecxz
popf
xchg
and
or
pop
jge
js
sub
inc
into
or
shll
jne
in
out
int3
gs
stos
sub
sbb
popf
dec
lcall
push
dec
sahf
or
push
push
ficompl
lret
decl
lcall
cld
ss
xchg
xor
mov
lock
movsl
mov
pop
mov
xchg
stos
enter
xchg
dec
cmp
xchg
push
mov
sbb
std
xchg
jmp
sbb
push
andb
into
imul
fcoml
enter
inc
gs
pop
les
adc
push
xor
mov
xor
dec
fs
ljmp
mov
pop
aaa
dec
dec
cmp
addr16
cmp
cwtl
push
sbb
pop
movsb
push
les
xlat
lret
popf
inc
sub
aam
sub
insl
xchg
jge
stc
adc
mov
test
or
gs
pop
out
xchg
push
xor
jge
loope
jb
int
ss
pop
pushf
fnsave
xchg
xor
aaa
jg
jno
test
jmp
js
ja
adc
ret
js
sub
insl
push
sbb
addb
fsubs
jg
or
add
insb
add
sbb
jns
mov
push
push
std
cld
adc
adc
lcall
out
add
add
stos
in
sub
das
lret
loopne
mov
push
sub
and
or
sub
pop
inc
int
sarb
pop
mov
inc
ja
adc
mov
sbb
adc
cltd
mov
push
push
arpl
lret
repz
dec
test
fildll
mov
adc
sub
sbb
xor
inc
or
mov
pop
pop
out
mov
adc
sqrtps
fadd
fcomps
inc
pop
test
dec
mov
sti
jp
sbb
cwtl
jo
or
or
lea
scas
popa
pop
dec
xchg
push
push
shrb
out
lcall
sub
sbb
xlat
mov
cs
int3
jg
cmp
sub
in
xchg
push
inc
sbb
sbb
loop
xchg
jbe
in
call
cmp
sbb
and
sub
repnz
jnp
pop
adc
push
xchg
mov
test
enter
jmp
sbb
js
leave
fsts
pop
cmp
dec
inc
mov
nop
add
ret
mov
xchg
loopne
jecxz
ss
ljmp
xchg
or
sub
and
xchg
in
arpl
into
sbb
cld
push
popf
or
ljmp
push
sbb
in
add
dec
cmp
sub
adc
dec
fstpt
roll
repz
add
push
lret
adc
or
push
lea
sbb
lcall
insb
mov
push
roll
les
syscall
mov
jne
xor
loope
and
mov
sub
jno
inc
das
adc
addps
das
call
jge
jge
dec
std
leave
mov
inc
loopne
popf
outsl
xchg
cmp
in
out
adc
aas
addr16
mov
sub
xor
dec
dec
ret
into
push
int
data16
sub
xchg
fcmovnu
les
scas
stc
int3
or
setne
push
outsb
ss
aaa
or
dec
stos
arpl
sbb
sub
cmpsl
maskmovq
notl
aam
aam
adc
dec
xchg
sbb
mov
ja
pushf
les
test
cmp
xor
js
loope
mov
ss
sub
ljmp
inc
mov
inc
or
insb
xchg
das
sub
cmp
adc
mov
das
sbb
pop
mov
outsl
gs
lret
mov
stos
mov
fisttpl
out
jae
pop
hlt
fs
sub
mov
icebp
pop
or
sbb
mov
rolb
sub
rolb
mov
subl
xchg
pop
jae,pn
ret
sbb
outsb
pop
add
outsb
cmpl
out
and
adc
repz
push
std
insl
loop
out
jmp
subl
add
in
jl
out
cli
xchg
outsl
arpl
fsubrl
push
adcl
pusha
dec
ds
push
loopne
popf
in
stos
int
push
aas
in
ret
out
out
mov
push
mov
pop
dec
rorb
add
jl
test
jne
adc
add
dec
add
mov
out
xchg
cmc
lcall
arpl
mov
shrb
ret
mov
idivb
test
addb
sti
cltd
adc
out
push
dec
pop
jmp
sbb
movsb
xchg
out
mov
loopne
sbb
mov
xor
dec
push
xchg
out
jae
lea
ss
mov
fnstcw
lea
jecxz
or
dec
movsb
sbb
jno
sub
testb
jmp
xor
sbb
pop
es
inc
les
push
add
mov
dec
orb
ja
pushf
movl
imul
dec
cmp
bound
dec
mov
jecxz
mov
sub
je
ret
xchg
xor
dec
pop
fidivrs
sbb
or
jnp
das
xchg
jbe
mov
in
test
and
or
dec
out
sub
mov
cmp
mov
stos
out
sub
pop
adc
mov
dec
addr16
mov
mov
cmp
sarl
cmpb
rorb
pop
arpl
cld
lahf
mov
sbb
mov
and
cld
fs
inc
and
push
icebp
enter
movsb
cmp
sub
sub
dec
xchg
out
loop
dec
in
push
and
cld
mov
inc
xchg
add
adc
push
lahf
in
jle
xor
adc
into
fs
aad
pop
int
xchg
xchg
fs
aam
dec
daa
push
jp
xor
xor
rorb
dec
pusha
mov
das
in
adc
in
into
stc
jmp
pop
inc
sahf
xchg
add
fmull
pop
cmp
add
push
mov
inc
add
cmpl
insb
loope
enter
lcall
jle
or
popf
xchg
subb
js
out
mov
adc
inc
into
add
jecxz
mov
inc
mov
ja
push
sub
inc
dec
xchg
gs
jecxz
mov
movsb
push
lods
in
clc
out
inc
stos
adc
jp
ror
imul
pop
scas
mov
data16
inc
rol
ja
or
xor
sbb
sub
dec
in
mov
rolb
sub
and
inc
inc
jl
xchg
add
push
shrl
mov
lea
or
pop
scas
inc
jnp
daa
or
fwait
mov
ja
sbb
xor
loopne
xchg
shlb
push
inc
xor
dec
pushf
xchg
or
add
sub
outsl
sbb
jmp
mov
lock
out
loopne
loope
pop
shrl
xor
sub
test
das
lret
mov
rorl
arpl
and
and
out
mov
push
adc
jmp
outsb
add
sbb
les
dec
nop
xlat
push
or
ljmp
or
lods
sti
jbe
mov
imul
lods
jecxz
sbb
inc
dec
mov
jmp
cmp
aam
adc
mov
mull
leave
push
fldl
adc
in
lcall
call
negb
push
push
push
jne
add
lret
or
test
inc
cmp
adc
repnz
aas
incb
xchg
inc
xchg
jb
mov
add
int3
cmpsb
pushf
dec
bnd
cmp
outsb
adc
out
push
stos
pushf
movsl
pop
fnstenv
jns
and
aaa
push
fdivrp
or
sti
movsb
mov
add
std
sub
push
jae
cld
fs
clc
xchg
iret
xchg
fnsave
mov
jp
cmp
adc
pop
lret
int
mov
cmp
bound
pop
fcmovnbe
in
lock
jno
xchg
bound
movsl
test
cltd
jmp
cmp
xor
imul
and
push
hlt
jge
popf
rorl
inc
fmuls
sub
out
inc
jge
nop
pop
pop
jns
push
int3
mull
pop
sub
cmp
clc
les
cwtl
cli
dec
push
and
lods
inc
adc
sub
icebp
sbb
inc
pop
jae
xor
xchg
sbb
and
dec
xchg
inc
jne
mov
lcall
adc
sbb
lock
nop
jmp
xor
xchg
cltd
dec
cmp
jecxz
pusha
cmpsl
push
jns
movsb
mov
movsl
lds
jmp
fbstp
mov
inc
data16
sti
pop
and
inc
cwtl
mov
mov
dec
and
xchg
clc
in
jecxz
add
dec
jp
ss
mov
inc
add
pop
pop
call
mov
loope
ljmp
pop
aaa
cli
sbbl
lock
int
jbe
or
mov
movsb
xchg
mov
xchg
call
lret
das
sub
jb
pop
add
int3
xchg
testb
int3
cmp
and
sbb
and
cld
xchg
pop
dec
xchg
ljmp
movb
cwtl
fildll
scas
bound
push
cmp
test
bound
push
imul
scas
mov
in
or
adc
add
dec
jns
inc
mov
add
mov
mov
subb
enter
out
les
out
mov
mov
inc
cld
mov
or
lret
pusha
xchg
mull
cmp
mov
imul
push
cs
sub
or
push
xor
negl
mov
dec
mov
divb
out
push
sub
pop
lods
push
ret
jmp
and
imul
or
ljmp
cmp
dec
cld
or
mov
popa
test
notb
jg
mov
jmp
je
jo
pop
mov
jge
es
ja
outsl
jmp
iret
mov
mov
mov
mov
inc
aaa
dec
stos
fcoml
stc
aam
inc
addr16
mov
cltd
sbb
insl
fsub
test
pushf
mov
shlb
push
mov
jl
mov
push
mov
test
rolb
scas
or
ficoml
jnp
push
icebp
jmp
outsl
inc
lret
sbb
jecxz
aas
lret
cmovge
dec
testb
fimuls
imul
jmp
xor
adc
inc
xchg
pop
les
jo
sti
out
push
xor
xchg
mov
dec
mov
push
or
cmpsb
ljmp
repz
inc
jb
cltd
jle
push
sub
popa
sahf
xchg
jno
xor
inc
sarl
popf
ja
push
cmc
xchg
push
mov
push
push
jl
mov
xchg
mov
cld
dec
out
clc
or
test
sbb
adc
sahf
mov
mov
sbb
lcall
jge
in
loop
sub
shrl
mov
mov
push
sub
inc
jno
push
rcr
loop
dec
test
inc
mov
push
mov
shl
in
aas
pop
fisubs
dec
cmp
out
mov
inc
jmp
dec
sub
rorb
push
and
icebp
mov
push
mov
popw
add
pushf
cmp
shrl
and
sbb
mov
test
insb
sti
mov
sbb
adc
clc
jle
test
xchg
les
push
dec
repnz
lahf
std
inc
cwtl
and
sbb
mov
jb
dec
xchg
cli
out
push
addr16
sub
and
fcmovb
cmpsl
cli
cmp
and
xchg
push
pop
ljmp
jecxz
add
hlt
dec
jmp
ja
mov
loope
pop
inc
aad
fcmovnb
pop
les
add
enter
loop
outsl
pushf
inc
sar
jge
pop
subb
xchg
mov
outsb
into
mov
stos
dec
decb
shrb
cmp
xchg
ljmp
sub
ret
mov
in
insb
push
xor
xchg
enter
hlt
ljmp
push
bound
aam
jbe
inc
mov
mov
stc
mov
xchg
jmp
hlt
test
test
mov
insb
fldcw
fcmovne
dec
insb
push
arpl
mov
popf
frstor
xchg
mov
fs
in
sbb
loop
scas
jecxz
mov
or
lods
and
inc
sub
gs
xchg
jnp
aaa
out
lret
aad
mov
out
or
cwtl
sarl
hlt
pushf
outsb
mov
cltd
rcll
in
pusha
add
push
xlat
in
and
push
and
clc
lret
push
push
cmp
xor
in
lods
jmp
loopne
mov
int3
sbb
xchg
fwait
dec
cmp
add
dec
adc
push
sbb
fs
fimull
jno
lds
mov
pop
dec
into
cmp
mov
hlt
fistpl
ret
sbbl
lcall
sbb
scas
sahf
arpl
and
mov
addb
push
and
sbbl
and
inc
lock
mov
es
loop
ret
jae
btcl
lahf
inc
add
arpl
push
stos
ljmp
jle
shlb
scas
dec
dec
jbe
test
and
adc
adc
sbb
mov
jbe
mov
pop
divb
mov
pop
inc
mov
mov
rcll
mov
call
xchg
shlb
nop
ja
stos
adc
xchg
les
testl
mov
jmp
inc
jmp
xor
xchg
mov
int
shr
call
cmp
sub
inc
scas
xor
xchg
xchg
bound
loope
xor
into
add
sbb
cmp
mov
mov
adc
pop
inc
fdivs
adc
nop
fsubrl
jecxz
cmp
sbbb
sub
test
mov
xchg
jp
mov
cmpsl
cmp
and
rolb
inc
shll
or
shll
lds
aaa
mov
sub
test
dec
pushf
pop
pop
mov
lods
ret
sub
dec
push
xchg
push
push
pop
fidivs
es
mov
arpl
loop
jmp
sbb
sub
mov
sub
mov
pushl
cmpsb
mov
lock
js
inc
sbbb
mov
jl
jecxz
or
clc
xchg
out
notl
mov
cs
dec
lods
repnz
andl
inc
dec
sbb
push
lret
sahf
jge
add
loopne
push
xorl
cmp
cmp
arpl
and
or
xor
popa
push
mov
lds
lea
movsl
pop
addb
cmp
lds
popa
push
cld
push
add
mov
faddp
lcall
pushl
push
push
mov
jg
insl
loope
sti
adc
into
insl
xchg
mov
call
stos
push
mov
loope
jmp
pop
cmc
or
out
int
shl
bound
in
clc
shr
movsl
mov
sbb
sbb
in
aaa
dec
clc
xchg
mov
sbb
dec
lds
sarl
sahf
pop
bnd
xchg
mov
xchg
fs
stos
jg
push
mov
xor
call
gs
adc
loop
push
mov
adc
add
fcoml
pop
sub
xor
lahf
cli
scas
jmp
jg
les
iret
pop
mov
bound
or
mov
in
lret
montmul
cmpsb
inc
push
or
mov
pop
addb
int3
repz
ja
push
loop
inc
rcll
lods
jmp
xchg
int3
lods
into
fdivl
push
arpl
setbe
shll
hlt
sub
lock
xor
and
stos
adc
loope
enter
jmp
sub
sub
scas
and
or
popa
aam
sbb
cmp
mov
jo
pop
xchg
aas
mov
lea
lret
pushf
or
adc
mov
movsb
mov
add
mov
push
jmp
filds
ja
sbb
in
nop
cmp
lea
mov
fdivrl
sub
fisubs
test
test
sub
mov
dec
fwait
add
adc
add
test
and
push
jbe
and
mov
loopne
mov
pop
sarl
jecxz
cwtl
idivl
mov
adc
pushf
add
arpl
xor
dec
out
and
int
adc
mov
jmp
nop
mov
push
mov
ret
xchg
xor
stos
gs
and
ret
lods
mov
or
subb
jnp
pop
xchg
inc
arpl
lret
inc
cli
fcomps
or
out
pushf
movd
aas
mov
dec
rcl
dec
mov
rorb
ret
mov
cmp
pop
lea
cli
mov
fiaddl
or
push
jp
xor
fchs
scas
mov
mov
push
dec
sbb
pop
add
lods
pop
dec
ds
ret
sarl
call
jbe
lock
ja
push
cmpb
cwtl
jns
mov
lret
sbb
testl
mov
call
push
les
lea
fisttpll
pop
or
cmpsl
inc
adc
xchg
sahf
mov
push
ja
ljmp
stc
push
adc
mov
xor
dec
jbe
arpl
in
sbb
cmp
imul
out
mov
inc
stc
lods
lcall
fwait
and
lret
jmp
mov
cmpl
xchg
lea
sar
mov
ret
enter
movsb
fnstenv
gs
dec
in
cmp
jl
lods
add
pop
dec
push
ret
inc
ret
pop
rol
dec
dec
out
outsb
xchg
imulb
dec
lods
push
mov
jmp
sbb
jle
js
call
or
push
sub
or
mov
cld
mov
pop
adc
add
mov
pop
dec
sbbb
jno
mov
mov
rorb
in
ljmp
mov
rorl
data16
in
sub
scas
jno
pushf
lret
bound
inc
enter
shl
out
xor
add
adc
inc
xchg
push
mov
mov
jecxz
mov
movsb
icebp
sti
sarb
aas
add
aam
xlat
mov
inc
cli
imul
mov
call
fisttpll
sub
mov
aas
roll
inc
popa
xor
push
movsb
inc
and
inc
sti
dec
mov
inc
jge
stos
outsl
clc
test
sahf
cmp
inc
mov
mov
outsl
lcall
push
xchg
or
call
mov
push
jmp
repz
inc
fldl
pop
mov
dec
jg
movb
clc
jmp
push
sahf
lods
mull
loop
jns
insl
sbb
aam
and
and
mov
addr16
lret
mov
daa
sahf
daa
imul
cs
into
cmp
xor
rclb
stos
sub
mov
xchg
sti
rclb
xchg
test
hlt
sar
mov
xor
and
dec
adc
arpl
sub
lret
lock
repz
cmc
jp
pusha
xchg
vpminsw
xchg
shr
inc
cmpsl
jae
add
out
inc
pop
bound
cmp
lods
shll
mov
mov
xor
fstpl
lahf
lock
shlb
imul
fs
ret
pop
test
iret
jns
into
push
in
arpl
add
cmpsl
pop
cmc
mov
ss
mov
lods
push
cmc
outsl
adc
jae
push
mov
outsl
add
xchg
mov
xchg
push
insb
movsl
push
cmp
xchg
jae
aaa
mov
jecxz
stos
and
push
test
lahf
mov
inc
movsb
int3
mov
adc
lea
mov
fwait
icebp
push
lahf
mov
gs
pop
in
mov
mov
test
cli
inc
dec
ljmp
int3
jnp
sbb
inc
or
std
add
aam
xorl
jmp
and
mov
std
fstpl
inc
jecxz
jo
aad
gs
sbb
repnz
cmp
ljmp
sahf
mov
mov
push
dec
not
push
lea
fisubrl
xor
rol
fs
ja
xor
sbbl
add
cld
sahf
lock
mov
mov
lret
ret
lret
mov
ljmp
fstl
sbb
sub
ljmp
outsb
scas
in
hlt
sub
mov
and
xor
in
hlt
dec
and
movsb
or
and
lods
adc
arpl
lds
xchg
mov
push
movsl
or
xor
fld
lods
sub
xor
lods
outsb
or
dec
call
push
das
inc
test
xchg
movsb
mov
pop
jge
mul
sbb
dec
dec
pop
dec
lea
or
insb
xchg
mov
dec
add
fldl
stc
cmpsb
adc
sub
leave
into
push
das
dec
sahf
stos
jo
or
nop
jb
add
sub
jecxz
out
push
out
xchg
jge
leave
rolb
ljmp
scas
inc
in
stos
inc
mov
fwait
cmc
jno
rorb
jge
addr16
lret
mov
fstp
outsl
push
jns
mov
fwait
dec
sbb
shrl
xchg
es
pop
loopne
mov
pop
sbb
fisubrl
int3
or
xchg
dec
push
push
jmp
lods
mov
dec
or
push
or
fs
mov
and
push
arpl
andnps
pusha
pop
mov
shrl
mov
dec
mov
movsl
sub
ljmp
sbb
inc
mov
shll
push
sub
jecxz
frstor
mov
pop
sete
sar
lods
std
xor
sbb
mov
or
mov
cld
lods
pop
push
mov
mov
ret
or
or
xor
lods
pop
mov
inc
pop
rcrl
test
xchg
fcomi
inc
stc
inc
add
pop
inc
push
fadds
cmpsb
insb
jp
shlb
mov
repz
out
mov
lcall
imul
mov
iret
gs
scas
pop
sbb
xor
sti
js
popa
in
xchg
and
push
mov
lods
jmp
jno
pop
daa
mov
hlt
out
outsl
xchg
cmp
clc
fisubrs
dec
fwait
push
mov
mov
sbb
aas
jo
mov
jo
rcrl
sbb
int
arpl
xchg
pop
push
xchg
cmpl
es
pushf
js
or
jmp
jb
sbbl
dec
movsb
inc
xlat
jl
ret
jb
pop
scas
stos
cld
xor
sub
int3
ljmp
add
cmp
aad
push
aas
testl
scas
negl
xchg
cli
fistpll
mov
arpl
lea
aaa
movsb
in
adc
push
xorl
mov
lcall
jmp
push
xchg
adc
std
sti
aas
add
cmc
xchg
dec
jnp
lea
adc
push
fldenv
or
imul
push
fldt
push
mov
inc
cmp
cld
fmuls
push
pop
pop
dec
push
cmpsl
mov
sbb
dec
xchg
mov
xchg
xchg
lcall
test
and
movsl
js
push
idivb
mov
arpl
fisubl
inc
xchg
rcl
sbb
lock
jno
incl
push
sub
lock
bound
ret
fldl
and
popa
leave
xor
in
add
addr16
mov
shll
es
inc
inc
sub
xchg
cs
cmpsb
mov
call
stos
cltd
jb
and
mov
shll
outsb
jecxz
mov
cwtl
sub
mov
in
pop
push
icebp
arpl
mov
sub
out
cli
pop
bound
sbb
or
cmpsl
inc
dec
aad
push
mov
and
fsubl
sarl
pop
mov
sbb
fnsave
pop
lods
pop
fwait
mov
xor
or
lods
into
filds
lret
add
sti
pop
add
aaa
cwtl
out
jbe
push
lods
shlb
stc
sub
jmp
jno
add
stos
jno
pop
jge
leave
imul
lcall
aas
gs
cmp
xchg
stos
pop
pop
jbe
and
or
insb
out
cmp
das
insb
pop
cs
xor
xor
and
and
cmc
cmpsb
push
and
test
popf
pop
add
jae
cmp
add
mov
cmp
inc
lcall
or
xchg
xchg
xor
les
jmp
daa
clc
in
inc
push
sub
cwtl
loop
mov
lods
push
sarl
enter
adc
sbb
and
mov
xor
fildll
and
cli
mov
jecxz
fmul
loopne
bound
cmpsb
cmp
jae
mov
call
sub
push
mov
lcall
adc
adc
rcr
adc
lahf
aam
out
lods
jle
int3
outsl
fdivrl
fistpll
sbb
sub
fmulp
fs
das
pop
fucom
arpl
mov
mov
lds
xchg
iret
lods
mov
and
push
and
cmpb
arpl
push
lret
mov
stos
mov
mov
roll
int
cli
lret
ss
xor
test
pusha
loop
push
sbbb
stos
movsb
adc
in
addl
xchg
cld
insl
jo
cmpsb
icebp
or
cwtl
dec
dec
sbb
sbb
scas
into
sbb
sub
sbb
fcoml
je
mov
sub
test
ljmp
andl
push
fwait
hlt
mov
xchg
rcll
out
lcall
jge
icebp
into
lods
scas
xor
jnp
sahf
push
sub
inc
mov
scas
mov
scas
aam
mov
cmp
push
int3
in
outsl
into
into
jmp
xor
jnp
mov
in
push
sbb
cld
shll
mov
cmpsl
loopne
in
mov
outsl
sbb
insl
rclb
sarl
xchg
push
push
jp
add
arpl
loop
or
loope
jp
xchg
cli
push
mov
lea
ret
shll
xchg
pushf
mov
xchg
or
adc
addl
int
add
lods
and
and
arpl
mov
hlt
dec
adc
repnz
mov
out
xor
push
rcrb
push
test
mov
add
rcrl
mov
lods
out
dec
sbb
loop
dec
fdivl
pushf
inc
pop
pushf
cmpsl
xorb
inc
in
pushf
int3
aam
test
mov
add
stos
pushf
add
lea
sbb
cmp
cli
sbb
outsb
pusha
and
ss
aam
movsb
inc
pop
xchg
or
cmpsb
pop
scas
add
mov
sbb
or
fbstp
fmull
lcall
inc
add
jge
sub
jmp
ret
push
mov
subb
xchg
stos
mov
aam
mov
arpl
mov
xor
insb
mov
xchg
or
pop
icebp
in
xchg
popa
jl
imul
push
rorl
push
repz
push
fldl
lds
movsl
imulb
mov
sub
mov
mov
scas
fdivs
loop
pop
call
addb
lea
mov
add
sarl
inc
pop
or
cmpsb
ss
call
mov
mov
mov
mov
jge
dec
pop
mov
or
push
lds
inc
push
shl
or
cltd
lea
mov
xor
shrl
adc
pop
cwtl
push
vpacksswb
sub
push
sbb
aaa
or
sahf
add
adc
and
or
loop
cmp
xlat
cmpsl
jno
data16
das
popaw
inc
or
sbb
jmp
sbb
push
sub
test
data16
cmp
jb
add
mov
loop
call
lea
add
dec
testb
into
test
sbb
in
aam
add
out
and
outsb
call
or
xchg
xchg
outsb
ljmp
outsb
fsubl
lods
mov
dec
call
aam
sub
add
cwtl
xorl
mov
xor
pop
imul
inc
sarl
jmp
movntps
xor
fildl
xchg
aad
movsl
mov
ja
nop
mov
jp
cmp
pusha
add
xchg
mov
mov
cmp
xchg
jl
sbbl
dec
xlat
or
addb
testb
cwtl
stc
push
mov
test
push
and
jmp
push
cltd
add
out
pop
mov
inc
dec
or
repnz
sub
and
mov
ds
push
xchg
daa
and
mov
gs
fimuls
mov
aaa
or
loop
jne
xor
into
test
fisubrl
dec
xchg
cmp
sahf
and
push
gs
inc
dec
stc
mov
pusha
popf
decl
dec
or
xor
cs
ss
call
sbb
cwtl
push
lods
sbb
cld
out
out
mov
sbb
push
dec
add
push
std
xchg
cmpsl
dec
adc
lret
out
adc
je
lret
divl
int3
mov
les
rcrl
cwtl
xchg
fcmovnbe
in
push
into
inc
shlb
aas
mov
sub
negb
jb
test
cmpb
out
jmp
cmp
xchg
mov
jbe
jae
jae
jns
mov
adc
ret
mov
jmp
lds
jno
jmp
inc
shl
sub
ret
xchg
sub
pop
jp
es
int
ljmp
sbb
negl
stos
mov
jne
sub
pop
xchg
xchg
mov
xor
jle
jbe
cmp
mov
testb
sub
cmp
mov
mov
repnz
push
sbb
or
cltd
fwait
movsb
jge
add
out
orb
and
pop
or
push
push
mov
fistpll
jmp
and
inc
adc
addr16
mov
jno
cld
loop
sbb
loopne
fwait
or
adc
stos
out
dec
sub
jg
es
leave
movsl
shlb
inc
jbe
push
sub
mov
add
arpl
inc
push
enter
imul
stos
push
or
cmpl
push
mov
cmp
rorl
mov
xor
dec
jecxz
mov
daa
fsubs
shll
and
insb
cmp
jp
cmp
insl
dec
add
pop
and
dec
xchg
sub
ret
sets
push
gs
mov
jno
in
dec
sbb
pop
jmp
test
jb
dec
filds
xchg
push
add
sbb
popf
cmpsb
mov
push
scas
mov
mov
jne
sbb
lcall
out
lret
and
mov
je
sbb
add
out
sub
and
test
sti
lods
cmpsl
in
movb
inc
xlat
mov
cltd
in
outsl
and
cmpsl
push
xchg
mov
fwait
sub
and
inc
cld
mov
das
addr16
sub
mov
cmp
sub
bound
mov
xchg
shl
xchg
int3
mov
mov
mov
movsl
pop
jne
mov
lods
ret
lods
test
imul
pushf
mov
sub
jbe
add
add
inc
in
inc
pop
xor
pusha
inc
cmp
fstps
cmp
lods
pop
cwtl
pusha
sbb
xchg
int3
cmp
mov
jo
das
sub
ss
mov
xchg
mov
or
into
hlt
outsl
repz
cltd
adc
push
adcl
push
andl
rcll
nop
cmpsb
or
nop
out
mov
rcl
inc
out
mov
aaa
push
lods
les
aam
sub
mov
and
mov
les
xorl
xor
nop
or
out
and
jl
push
insb
test
ret
xchg
and
js
pop
mov
jae
stos
cmpsb
dec
inc
iret
adc
lret
cmp
sbb
mov
std
jnp
mov
ds
pop
fistl
stos
lret
xchg
mov
inc
pop
es
std
lret
dec
inc
decl
andb
cmp
jb
int
push
aas
fimull
js
mov
and
mov
mov
outsl
mov
fsubl
or
ja
repz
dec
addr16
inc
dec
aaa
js
fstpt
jle
jg
arpl
lods
sub
xor
ljmp
dec
push
adcl
jmp
push
mov
xchg
incl
push
imul
insb
cmp
scas
and
clc
fstl
mov
scas
outsl
inc
insb
enter
addl
lods
xor
cmp
xchg
pop
paddsb
imul
push
jb
addl
rcr
test
or
or
rcll
je
push
dec
aaa
outsl
div
jmp
xchg
insb
cmp
jecxz
cmc
push
jae
pop
mov
lods
enter
or
jmp
in
call
jp
xor
jl
or
mov
adcb
mov
pop
fadds
inc
push
or
fs
or
dec
adc
xchg
or
fldl
cs
pop
out
push
adc
subb
addr16
pop
cmp
jmp
mov
ret
push
cld
jg
lahf
jo
sbb
mov
ds
jmp
loopne
mov
incl
cmp
inc
sub
addr16
xor
ljmp
cmp
adc
cmc
loop
and
mov
or
in
movsb
push
shlb
shlb
jmp
movb
bound
add
jmp
mov
hlt
xchg
in
subb
daa
cmp
daa
hlt
mov
adc
leave
aam
mov
lods
addr16
sub
sti
movsb
ja
lcall
fld
xchg
add
sub
mov
mov
fsub
test
mov
shl
insb
and
pop
or
mov
push
movsb
test
mov
mov
loope
movsb
lahf
dec
mov
insl
cmp
outsb
sub
subl
movsb
nop
and
fnstcw
sbb
sub
xor
mov
pop
negl
rorb
inc
add
dec
icebp
std
mov
insl
pushf
xchg
test
pop
addr16
xchg
cld
inc
ja
pop
stc
jbe
cmp
pop
add
mov
fs
mov
cld
ss
out
inc
addb
cmp
sar
loope
push
cwtl
js
mov
imul
add
inc
and
lret
jge
sub
push
adc
ret
pop
push
data16
ret
int3
cmp
ret
mov
gs
push
jle
loop
lods
dec
rcrl
pop
mov
add
add
cmp
mov
xor
inc
mov
fimull
mov
sarl
cmp
inc
and
push
xor
xchg
fstps
scas
sbb
aaa
dec
mov
fcoms
scas
clc
xchg
xor
cmp
dec
out
lcall
lea
aam
pop
fsubrl
int3
in
xor
shll
mov
loop
jl
pop
insb
fimull
fnsave
push
sti
pusha
sbbl
filds
sti
push
fsubl
ljmp
insl
mov
add
stos
sbb
xchg
jbe
push
aaa
mov
sbb
mov
mov
jge
or
jae
fsubrs
jle
jbe
in
cmpsb
arpl
cld
mov
xchg
test
mov
inc
imul
ficomps
mov
clc
repnz
inc
into
jmp
jmp
push
adc
lret
mov
push
or
lret
sbb
pushf
or
and
fisttpl
mov
cld
movsb
or
dec
add
sarl
test
jge
ror
push
sarb
gs
push
notb
ror
enter
mov
ds
jne
lret
call
xchg
xor
or
jmp
push
jnp
pop
and
stos
cltd
fidivrl
idivb
lea
jb
mov
sbb
enter
adcl
shrl
addr16
popf
sbb
je
xchg
and
cmp
ret
lods
lods
dec
repnz
and
lcall
or
dec
jo
test
cmp
sbb
pushf
inc
inc
fs
xchg
into
ss
xchg
push
fcoms
push
mov
nop
adc
fsubrl
xchg
aas
mov
jmp
rcrl
cmp
rorl
cli
test
cmpsb
adc
push
jle
sahf
and
sub
ja
cld
cltd
inc
cmpsl
or
mov
outsl
mov
jnp
mov
sbb
pop
mov
and
mov
jecxz
into
or
xchg
lods
mov
cwtl
lods
and
mov
push
mov
cwtl
rcrb
sbb
inc
pusha
push
test
sbbb
faddl
cmp
dec
sbb
test
jp
orb
push
pop
enter
lock
mov
in
or
insb
sbb
push
bound
scas
loop
mov
xchg
cs
sub
mov
jb
movsb
mov
mov
test
insb
push
inc
dec
xor
je
adc
fcomps
pushf
rorl
add
pop
imul
mov
add
cmp
rolb
push
sub
adc
call
pop
dec
aaa
or
ret
repnz
add
hlt
test
jne
push
cmpsb
lds
adc
sbb
push
roll
loopne
pop
loopne
insl
xor
mov
sti
fwait
icebp
jo
cmp
mov
aas
inc
cmp
cwtl
xor
cmp
and
xor
stos
pusha
dec
add
bound
inc
push
dec
ljmp
xor
stos
and
sub
roll
jnp
ret
jnp
adc
in
pushf
push
and
in
fwait
xlat
xor
arpl
sub
in
into
cmp
mov
mov
ss
inc
jno
scas
mov
pop
fldenv
sbb
add
or
inc
lock
testl
jmp
push
scas
dec
push
lea
mov
dec
jmp
and
push
hlt
pop
or
mov
imul
dec
cmp
pusha
jle
pop
jb
sub
push
lcall
js
fwait
cs
fisttpl
lock
shl
cld
stc
push
and
cmpsb
fxrstor
out
ja
jecxz
mov
outsl
mov
cmp
movsb
dec
push
fs
lcall
xchg
negb
in
mov
add
and
fcmovbe
lret
and
popl
gs
xor
out
jecxz
pusha
mov
jmp
pop
inc
lret
push
test
mov
fmull
inc
lods
dec
mov
daa
movsl
xorb
mov
cmp
mov
arpl
jmp
xor
shlb
mov
movsb
dec
lea
mov
cs
push
sub
fcmovu
inc
push
cs
ljmp
lea
xor
call
stos
dec
mov
iret
gs
daa
out
aam
cmp
lcall
and
mov
push
mov
iret
insb
shrb
insb
jbe
pop
ret
gs
mov
push
mov
or
jle
jae
cmp
rcrb
cltd
popf
call
inc
jge
adc
nop
fprem
fisubrl
fidivs
rorb
fwait
data16
test
mov
sbb
sub
inc
movsb
imul
in
les
adc
data16
mov
insl
mov
pop
aad
fs
cmp
jno
cmpsb
mov
xor
cmp
bound
scas
ljmp
icebp
cltd
mov
es
cmp
shl
ret
mov
scas
sbb
fs
cwtl
adc
fcmove
mov
cmp
add
mov
mov
adc
movsb
xchg
icebp
add
jle
mov
xchg
mov
push
fcmovnbe
in
adc
and
sti
mov
clc
insb
aad
aad
mov
lret
test
pop
jge
add
push
sbb
jmp
sbb
inc
into
inc
jb
mov
jge
inc
jge
or
or
mov
dec
aaa
mov
mov
jmp
mov
and
call
sub
jl
ja
mov
sbb
cmpsl
in
je
pusha
mov
pop
dec
sub
mov
aaa
pop
test
adc
pop
inc
out
mov
les
cmp
dec
add
ficoml
inc
iret
push
popf
mov
call
mov
popa
lods
add
jb
push
mov
and
mov
idiv
mov
xor
aam
cltd
mov
mov
data16
and
jne
sbb
mov
adc
andl
data16
push
mov
sbb
in
sub
repz
lret
aam
adc
adc
arpl
mov
lea
sbb
push
test
mov
inc
ljmp
adc
test
mov
les
gs
jo
sbb
and
add
lods
std
or
mov
adc
js
sarb
sbb
faddl
or
or
ret
xchg
mov
repz
adc
sbb
lcall
gs
xor
arpl
jns
cli
push
cmp
xor
movsb
inc
rcll
xlat
mov
int3
mov
cmc
push
mov
sub
pushf
mov
mov
hlt
dec
repz
jmp
fmuls
push
jmp
mov
pop
add
mov
fsubrp
push
mov
imull
fmuls
popf
leave
jno
int3
arpl
lods
outsl
add
push
aam
lods
bound
cli
sub
int3
popf
addr16
cmp
mov
bound
mov
xor
mov
xor
shlb
dec
adc
popf
stc
lea
add
xor
xor
sbbb
mov
xchg
mov
xor
pop
or
add
sub
jnp
test
lret
les
and
iret
ja
mov
movsl
xchg
mov
stc
pop
mov
popa
daa
movsl
cmpsb
insb
cmp
adc
xchg
cmp
in
subl
mov
sti
mov
jg
push
pop
sbb
cmpsb
jnp
scas
and
bound
subb
gs
lret
push
fisttpll
mov
sub
dec
cli
cmp
mov
or
dec
popf
add
push
sub
inc
ss
mov
jb
xchg
mov
cmp
inc
pop
push
mov
mov
sub
pop
bound
shrl
mov
sub
clc
mov
cmp
sub
xchg
fwait
mov
or
xor
sbb
arpl
jb,pn
mov
fs
movsl
cmp
pop
jae
xchg
cltd
sub
pusha
dec
ljmp
inc
test
dec
mov
movsb
sbbb
cmpb
cld
lahf
lods
fnstsw
adc
arpl
xor
scas
psubsw
scas
or
add
push
adc
ret
mov
sahf
shll
mov
xor
pushf
test
lahf
sbb
cmp
lods
sbb
add
pop
aas
mov
sub
int3
or
jno
mov
dec
ret
pop
in
mov
mov
mov
hlt
lea
lret
imul
pop
cmpsb
out
jmp
xchg
cmpb
push
mov
scas
pop
insl
and
push
hlt
inc
dec
cmc
and
movsl
add
lock
test
adc
add
aaa
lea
ret
cld
dec
sarb
jle
sbb
mov
int
xor
pusha
lea
xchg
fdivr
fdiv
subl
mov
test
sti
loope
mov
jns
leave
nop
mov
push
outsl
adc
add
sbb
mov
iret
jbe
lcall
stc
lea
stc
outsl
xchg
dec
adc
xorb
mov
xchg
jmp
cmp
push
mov
adc
ret
std
push
jg
cmp
popa
and
mov
pop
cld
or
mov
sub
jae
pop
das
fisttpl
push
push
ficompl
rclb
xchg
inc
jb
pop
xor
aas
mov
mov
call
mov
daa
sub
adc
xor
xor
das
in
out
jne
and
mov
jmp
in
cmp
lret
repz
loop
mov
sbb
mov
loop
jp
lea
add
test
lea
cmp
or
nop
jle
jg
fistl
mov
lods
or
jp
cs
mov
pop
lods
fimuls
iret
aaa
cmp
add
fs
movsb
add
mov
dec
pop
fimuls
xchg
sbbb
mov
repnz
dec
mov
mov
aas
nop
ret
movsl
fisubrl
in
mov
jp
ret
jl
orb
xchg
lods
adc
xor
sti
xor
and
inc
and
mov
jecxz
out
or
shrb
pop
pop
sbb
sub
dec
lds
mov
sbb
sub
and
pop
test
xchg
ret
xchg
lahf
enter
mov
sbb
and
jge
test
out
pop
scas
push
push
lcall
jecxz
inc
fsubs
xchg
push
cwtl
dec
jno
mov
jmp
xchg
nop
mov
dec
and
jge
enter
push
sub
dec
cmp
mov
fistps
ret
mov
loop
pop
sbb
mov
aam
clc
fidivl
shr
jnp
or
ret
ss
sbb
in
cltd
xlat
cmp
and
in
dec
xchg
movsb
mov
std
adc
xor
dec
push
ror
adc
aam
add
fdivr
jno
dec
movsb
pop
dec
movaps
inc
imul
push
cmp
cmp
out
mov
push
add
xchg
andl
push
out
mov
addr16
mov
pop
outsl
sub
sti
dec
jmp
mov
cld
push
add
xor
push
data16
cmp
sbb
cltd
push
adc
add
mov
jge
fsub
mov
sub
xchg
stc
pushf
jno
sub
cmp
jns
add
je
aam
and
fistpll
inc
aad
rorb
adc
aad
add
pusha
xlat
xchg
inc
or
sbb
jle
push
sbb
sbb
fldt
mov
pop
mov
mov
and
fsubrl
scas
jmp
mov
aam
jmp
or
fwait
jle
xchg
and
scas
jge
das
nop
cwtl
xor
sahf
add
jae
int3
loop
mov
xorb
in
fwait
clc
xchg
jle
jae
and
lds
clc
mov
sub
test
and
or
xor
loop
int
out
jecxz
mov
adc
pop
jns
pop
cltd
jp
jno
adc
icebp
mov
mov
xor
sub
adc
lret
sbb
lahf
mov
jmp
lea
in
mov
xor
push
sbb
repnz
enter
xchg
cmp
pop
test
loope
nop
je
mov
in
bound
jno
mov
or
ds
ret
nop
repnz
xchg
mov
push
mov
fsubp
lret
jae
mov
sbb
jb
jl
lret
fdivl
inc
jmp
pushf
out
dec
aam
imul
notl
mov
cs
imul
rcl
dec
or
mov
ficompl
mov
imul
jns
mov
movsl
call
loopne
ret
pop
xchg
pop
jge
test
mull
lods
adc
and
jnp
add
shr
adc
sbb
lret
add
data16
dec
or
lods
dec
outsb
mov
jb
insl
bound
xor
xor
stos
pushf
sbb
loope
mov
push
lea
roll
leave
icebp
movsb
pop
and
mov
cli
rcll
out
cmc
add
pop
cmp
sub
lret
jecxz
insl
or
cwtl
add
andl
js
ja
sub
sub
bound
imul
xchg
xchg
data16
ljmp
mov
jne
adc
dec
mov
adc
jle
sub
push
pop
mov
movsb
mov
or
lods
pusha
jg
sub
adcb
pop
imul
in
adc
add
js
es
icebp
adc
xor
cmp
push
add
leave
mov
mov
ds
aad
cmp
xor
imul
fcoml
xchg
mov
mov
inc
adc
mov
jae
lea
out
ret
testb
adc
sbb
fwait
sbb
in
mulb
jmp
mov
pusha
iret
jb
sar
add
inc
decb
into
or
pop
fs
fistl
cmpsb
shl
in
std
jb
adc
mov
add
push
mov
push
mov
or
cld
and
xchg
pop
leave
jmp
push
cmp
mov
jno
pop
xor
and
stos
jb
mov
xor
jae
aad
sahf
mov
outsl
pop
insb
into
prefetch
xor
sbb
mov
inc
loope
lock
pusha
out
cmc
jmp
pusha
stos
jae
pop
and
sbb
rcrl
dec
leave
dec
jae
or
je
sti
clc
inc
out
jmp
movsl
pop
lea
hlt
adc
or
ret
rcrl
inc
jmp
lock
cmc
dec
cmp
pop
jle
nop
add
dec
jmp
or
fcmovnb
out
dec
adc
rorl
xor
arpl
mov
imul
shrb
shrb
imul
adc
sarb
and
insb
mov
dec
xchg
jecxz
rorl
shrb
cmp
jle
js
sbb
add
jmp
add
and
in
test
sbb
data16
orb
movsl
xchg
dec
fs
mov
add
stc
addr16
dec
adc
and
and
sub
and
and
sub
inc
sub
addl
rcl
xlat
lahf
jecxz
mov
pushf
lea
lret
test
arpl
insb
mov
fcomip
cmpsb
pop
lods
jg
dec
popa
vmwrite
jno
jno
movsb
shll
ret
mov
pop
sbb
mov
cmpsl
push
shll
cmp
mov
dec
and
mov
insb
cwtl
pop
push
pop
nop
cwtl
xchg
push
scas
daa
in
dec
mov
imul
push
inc
rclb
call
scas
jle
pushl
das
into
jb
push
push
dec
loop,pn
xor
fstpt
mov
inc
test
push
insl
or
shrl
fisubrs
pusha
xor
sar
lods
scas
jmp
insl
int
ss
fdiv
test
stos
int3
ljmp
dec
jecxz
imul
jo
mov
mov
pop
or
into
xor
and
fs
adc
jno
xchg
xchg
ret
or
xchg
adc
inc
ret
hlt
scas
stos
mov
sbb
aaa
or
std
sub
out
imul
or
push
jecxz
pusha
decb
cltd
lret
push
mov
push
ja
cmpsl
xchg
enter
jbe
test
jb
xchg
cmp
or
ljmp
lret
rorl
jne
loopne
sub
sub
ret
mov
sti
mov
stos
jmp
mov
lret
and
fisubl
dec
js
sbb
test
mov
dec
sahf
sbb
push
cmpsl
jnp
fsubr
mov
into
or
sbb
mov
mov
cmpsl
adc
mov
push
insl
push
mov
push
pushf
adcb
mov
jmp
mov
inc
outsb
adc
loop
jmp
aad
movsb
push
cs
jecxz
jmp
adc
mov
dec
add
pop
ljmp
or
pop
sub
pop
xchg
lds
sbb
mov
test
xchg
xor
fmull
sub
aam
stos
in
sbb
fsubl
xchg
xor
push
mov
aad
mov
out
cmc
mov
insb
and
or
and
out
ficompl
or
adc
add
dec
xchg
mov
outsl
pop
daa
cwtl
dec
divb
pop
mov
incb
push
mov
popf
insb
insb
in
decb
adc
jb
or
cli
pushf
push
inc
adc
repnz
loopne
in
loope
aaa
loopne
xchg
and
add
adcb
sub
cli
mov
and
xlat
mov
xor
mov
adc
addb
das
xchg
inc
sbb
mov
jecxz
inc
mov
mov
lcall
lock
loop
ss
mov
push
stos
aaa
pop
jg
add
lock
jae
push
out
and
out
jecxz
lods
ret
aam
sub
outsb
call
out
mov
dec
xor
mov
scas
push
cld
scas
xchg
add
stos
pop
xor
aas
mov
sbb
lds
mov
insl
add
dec
mov
dec
xchg
fists
xor
js
push
sbb
aas
fdivr
jno
icebp
inc
push
fidivrl
mov
add
fldt
and
xchg
sbb
inc
dec
das
mov
and
inc
repnz
push
test
popf
rcr
cltd
push
and
mov
xor
push
inc
pop
or
sub
sbb
sub
push
cmp
cmp
ss
or
jge
lds
loop
aas
leave
ret
inc
mov
out
inc
imul
ss
call
pop
cltd
inc
js
sbb
xchg
mov
mov
out
mov
shlb
jg
adc
fimull
pop
push
sbb
mov
mov
mov
mov
out
insl
xchg
hlt
int3
and
ja
test
jge
sti
nop
loopne
sbb
mov
push
dec
lods
or
fisubl
outsl
out
mov
dec
leave
jb
imul
cmpl
sub
shlb
notb
scas
mov
mov
aaa
adc
dec
fnstsw
dec
xor
shr
int3
push
xchg
in
mov
jmp
xor
mov
insb
add
inc
dec
xchg
inc
dec
sahf
or
jmp
push
push
sbb
imul
movlps
lret
adc
add
pop
nop
shl
inc
jb
lahf
xchg
addr16
xchg
orb
pusha
movzwl
sahf
sub
and
adc
gs
jecxz
dec
ds
adc
lcall
addsubps
mov
movsl
fwait
jl
mov
inc
xor
dec
inc
sub
ss
jns
cmp
jmp
dec
pusha
jecxz
movsl
test
sbb
and
cmpsl
sbb
mov
mov
stc
sub
mov
mov
cmpsl
popw
mov
insb
mov
add
xor
and
adcb
push
leave
movsb
movl
or
nop
inc
imul
ja
sbb
pop
orl
call
mov
mov
cs
insl
jmp
ret
xchg
in
pop
loop
call
xchg
cmp
jbe
bound
add
sbb
cmpsb
sub
int
xor
pop
in
jmp
ja
stos
mov
jb
andb
in
pandn
call
dec
xor
int3
call
adc
int
xchg
lea
outsb
jmp
in
loop
cmp
push
add
add
jbe
inc
in
jno
mov
test
inc
loopne,pt
or
ret
in
pop
test
loop
and
add
into
mov
ss
push
cli
cli
push
arpl
out
jmp
xchg
mov
push
jbe
mov
fadd
or
mov
scas
xchg
jbe
mov
sbb
sbb
sbb
loopne
in
lods
xchg
stos
das
fistpl
or
sbb
aad
cmp
sbb
stos
scas
out
insb
jmp
cmp
arpl
xor
into
push
xchg
jne
sbb
lcall
jns
daa
lcall
add
mov
lods
mov
push
sbb
subb
jmp
sbb
inc
pop
mov
stos
pop
add
jmpw
inc
mov
xchg
popf
push
popa
cmp
pushf
daa
mov
xor
pop
into
ljmp
mov
fstpl
jne
stc
or
pusha
add
data16
push
cld
jle
jg
sub
jb
sti
in
mov
jo
mov
leave
das
lahf
movsb
mov
mov
mov
push
sub
pusha
into
xor
in
dec
cwtl
jo
ror
or
inc
sub
and
testb
cmc
or
in
lgs
pop
pop
mov
cmp
aas
lock
dec
movsb
stos
jmp
dec
mov
jbe
scas
out
xchg
pop
pop
dec
and
test
or
bound
add
mov
mov
add
inc
xor
fldenv
subl
mov
add
dec
cmpsl
push
pop
mov
inc
cli
or
fisttps
mov
idivb
cmpsb
cmp
dec
mov
mov
popf
cmp
cmp
jb
push
aaa
pop
addb
xor
adc
jp
pop
fstl
jb
and
or
or
mov
mov
iret
popa
fadd
or
lret
cli
mov
and
out
mov
out
test
rcll
adcb
sbb
jo
fadds
sarl
push
jb
add
and
in
cmp
out
and
dec
xchg
shll
es
shr
add
aam
and
mov
inc
adcl
sbb
xlat
sub
or
and
out
pmulhuw
int
cmp
jmp
in
shl
or
cli
push
ss
in
inc
in
mov
lock
cmp
xchg
xchg
pop
faddp
jl
pop
xor
jg
call
test
add
cld
mov
or
dec
dec
inc
addr16
xchg
and
cltd
sub
cmpb
push
xchg
mov
inc
or
out
mov
or
cltd
sbb
add
mov
jmp
push
call
fmuls
push
jb
aam
adc
jl
push
movsl
int3
pop
mov
sub
test
add
stos
jmp
subb
cmp
pusha
loop
mov
les
jp
cmp
mov
jmp
inc
and
mov
ficoml
or
lea
mov
sbb
repz
pop
and
cmpsb
sub
nop
loope
push
adc
fsts
push
imul
test
stos
mov
add
mov
mul
cltd
call
imul
sbb
push
ss
ds
mov
add
sti
lock
pop
jmp
pop
cld
call
loopne
pop
xor
jae
out
sbb
js
scas
push
sbb
mov
fwait
ret
sar
adc
dec
into
aaa
lcall
sbb
cs
test
push
arpl
xchg
pop
repz
loopne
mov
sub
xor
dec
xchg
stc
xchg
movsl
movsl
jo
dec
xchg
lods
or
pop
mov
fstpt
cs
or
call
stos
xchg
lret
test
loope
mov
jbe
mov
mov
pop
dec
pushf
inc
xor
out
test
shr
sub
inc
out
js
lods
in
push
jmp
sbbb
jp
sub
sti
mov
ja
mov
push
or
in
outsb
xchg
sbbb
ljmp
pop
jecxz
push
dec
sbb
add
jmp
sub
xor
xchg
lahf
arpl
subb
push
inc
cmpsl
cs
pushf
push
scas
dec
lret
fsubs
jge
cmc
xor
inc
xchg
lods
outsl
cmpsl
lock
daa
push
jp
in
imul
mov
leave
fs
or
hlt
fdivs
cli
cli
push
mov
jmp
adc
xorb
sbbl
cwtl
inc
mov
adc
insl
testb
fstpt
mov
ds
inc
jmp
ss
in
outsl
out
sti
ljmp
mov
loope
je
into
cmp
pop
sahf
int3
adc
mov
push
jecxz
popa
sahf
leave
insl
sub
push
sub
mov
test
nop
stos
xchg
popa
repz
sbb
fcmovnb
nop
adc
adc
fwait
mov
mov
sbb
mov
in
or
aad
ss
sub
inc
sub
mov
clc
pushf
gs
clc
pop
or
jp
sbbb
mov
adc
add
dec
inc
cmpsl
mov
or
and
jb
ret
divb
push
push
nop
xor
inc
lahf
xchg
nop
adc
mov
adcb
xchg
or
or
outsb
in
push
out
lods
loop
stc
mov
addb
arpl
cmpl
nop
and
dec
dec
aam
ljmp
cmp
mov
lret
jmp
cmp
or
inc
mov
out
dec
mov
sub
dec
lea
js
mov
out
shl
sbb
mov
sbb
push
popa
inc
lcall
test
dec
xchg
xor
iret
testb
pop
dec
or
push
mov
jo
jne
mov
and
sbb
mov
inc
lock
pop
shrl
movsb
lds
xlat
lret
sti
jge
push
pop
mov
fbld
movsl
cld
sbb
shll
lret
popa
lcall
pop
and
push
in
push
testb
xchg
mov
mov
xchg
xor
fldcw
insl
andb
ret
adc
mov
pop
dec
mov
ret
xchg
in
test
jno
sub
lds
and
push
dec
pop
mov
jl
fadds
ds
jne
push
mov
stc
mov
fsts
or
sub
sar
fcoml
movsl
lret
pusha
test
int3
shrl
aam
push
sbb
mov
imul
roll
aaa
and
mov
inc
into
into
push
mov
lret
cmp
cmp
daa
in
mov
mov
pop
xor
divl
pushf
cmpsb
sti
and
lods
mov
mov
pusha
pop
call
xorb
test
js
sub
sbb
mull
ja
mov
xchg
jbe
testb
dec
pop
dec
mov
xor
pop
xchg
sahf
nop
or
mov
mov
or
int3
out
adc
adcl
outsb
ja
xchg
les
jmp
ljmp
xor
addr16
in
xchg
jae
addr16
push
das
inc
sub
aas
in
jp
dec
add
sbb
mov
cli
out
lahf
filds
dec
add
mov
int3
cmp
jo
lods
mov
cmpl
loope
or
cld
mov
sti
xchg
lea
mov
test
flds
popf
pop
jp
push
add
imul
mov
cmp
in
fnstenv
or
mov
pop
adc
jp
mov
sti
inc
push
inc
add
shlb
nop
mov
lea
jnp
or
ss
mov
pop
sarl
pop
out
out
sarb
stc
jle
inc
jb
rolb
mov
mov
mov
aad
sahf
adc
lea
xchg
or
inc
lahf
jo
aam
into
adc
mov
bound
or
and
cmp
adc
adc
dec
fmul
lcall
pop
sbb
lods
adc
xchg
mov
les
and
or
jp
lea
sahf
sbb
mov
mov
pop
out
pop
xchg
push
pop
jecxz
ja
mov
cld
push
dec
out
aaa
fisttpll
dec
or
or
xchg
pushf
pusha
or
fstps
mov
push
ljmp
outsb
or
add
lret
popa
mov
pop
in
adc
sti
roll
cmp
loope
xchg
inc
negb
cltd
movsb
mov
hlt
lds
pop
insb
pop
iret
andb
xchg
stos
or
dec
jbe
lret
mov
lods
jne
jb
push
ljmp
iret
jmp
push
mov
or
in
xchg
mov
leave
test
jbe
mov
pop
push
cltd
cmp
adc
test
xor
pusha
shlb
std
int3
mov
push
sahf
pop
dec
in
add
push
ja
cmp
pop
xor
call
mov
fildl
pop
js
pop
lret
jne
fwait
pop
pop
repz
int
aad
jo
scas
or
fs
gs
out
int3
xchg
lods
and
mov
push
sub
inc
shl
mov
push
add
and
xchg
xor
jns
mov
pop
cli
sub
lret
lret
dec
ds
loope
lret
or
loope
rolb
into
lods
sbb
lods
mov
pop
shll
mov
mov
jecxz
int
ret
shrl
adc
int3
aas
aad
pop
push
pop
mov
pushf
call
cwtl
push
sub
lods
inc
int3
fcom
xchg
pop
or
js
add
mov
sti
push
sub
insl
push
adc
lcall
pusha
cmc
inc
pusha
or
out
mov
mov
aaa
ljmp
add
fs
fwait
xchg
jle
inc
std
sti
fistps
push
and
xchg
push
push
lods
jno
add
call
fs
cmp
mov
nop
outsb
inc
jo
out
push
in
push
pop
mov
in
xor
testb
and
add
pop
add
movsl
cmp
lds
adc
mov
mov
or
mov
lret
mov
in
mov
inc
ja
repz
test
inc
sub
aad
leave
out
cmp
ds
cwtl
add
jb
add
mov
out
stc
insl
addb
push
js
lcall
in
dec
push
sub
test
idivl
pop
je
mov
sarb
out
movsl
aad
les
imul
xor
push
mov
sub
mov
ss
icebp
mov
push
rolb
orb
mov
push
ret
dec
cmp
pop
jmp
stos
stc
xor
xor
cmp
arpl
out
jmp
mov
aam
std
popl
mov
clc
iret
std
sti
into
jns
adc
std
call
pop
iret
mov
inc
dec
in
int
lods
mov
iret
cmp
and
sub
inc
iret
ds
push
inc
leave
popf
enter
leave
push
leave
and
pop
iret
mov
sbb
fiadds
andb
pusha
test
jmp
pop
mov
jl
ljmp
out
mov
xorl
and
jmp
jnp
dec
out
sbb
ja
std
mov
fisubs
jp
jmp
inc
aas
in
mov
inc
mov
and
in
mov
mov
popf
addr16
and
push
push
xor
xlat
aaa
loop
or
push
jle
or
ja
int3
push
lds
sub
mov
pop
add
lea
dec
loopne
rorb
popf
addb
mov
movsb
outsl
insb
pushf
ret
stc
fwait
stc
xchg
cld
punpcklbw
jne
mov
pop
fnstcw
lock
mov
sub
dec
or
ret
int3
fidivrs
sbb
rclb
push
pushf
ja
divb
aaa
in
mov
sub
stos
rcr
lods
inc
push
mov
mov
dec
or
add
sti
aam
xchg
cmp
lock
or
xor
push
jge
jp
xchg
leave
out
ljmp
add
push
and
mov
jle
stos
mov
mov
flds
xor
inc
xchg
add
fwait
cmpb
lcall
lods
xchg
inc
ss
rcll
scas
movsl
mov
inc
dec
push
push
cmpsl
sbb
aas
imul
fiaddl
cmp
loopne
sub
xchg
setg
call
dec
out
xchg
mov
sbb
or
mov
or
out
insl
xor
mov
negl
and
pop
loope
sbb
sbb
repnz
xchg
add
xlat
adc
jo
inc
sahf
sbb
mov
or
imul
cli
movsl
stos
int3
adc
lret
stos
sbbb
call
call
xor
call
ss
dec
pop
sub
push
ds
ret
xchg
cs
lcall
aas
ret
cwtl
sbb
loop
aas
and
sub
sbb
dec
subb
jmp
pusha
cmp
not
jo
fwait
mov
adc
add
fwait
sbb
aaa
mov
in
call
or
pusha
dec
mov
add
push
jg
stos
mov
aaa
mov
shrb
lahf
inc
shrd
sub
xor
pop
adc
xor
sub
inc
lcall
or
pop
cmp
test
push
insb
mov
mov
or
add
jecxz
scas
ss
xor
dec
mov
addr16
push
dec
lret
lcall
popa
inc
lock
adc
pushf
push
std
push
mov
movb
add
inc
mov
xchg
and
sub
scas
lock
ja
insb
rep
test
fs
pop
sub
cmp
sahf
fwait
movsb
iret
mov
mov
pusha
call
jae
xchg
add
dec
jle
sub
or
into
push
inc
loop
rclb
ficompl
mov
pop
mov
out
sub
xor
sbb
in
xchg
dec
stos
fldl
les
ret
je
out
out
adc
dec
jp
xlat
insb
les
push
roll
arpl
adc
out
iret
ret
mov
into
jle
lods
fisubrl
mov
cmp
pushf
inc
hlt
adc
dec
popa
add
or
add
mov
mov
arpl
aaa
cmp
lds
mov
pop
rcrb
scas
mov
stc
sub
aas
pop
xor
push
icebp
dec
aam
dec
stc
iret
adc
xchg
jecxz
cmpsb
mov
mov
push
das
sbb
and
inc
xchg
movsb
outsl
cs
test
les
ljmp
push
inc
sbb
mov
or
iret
insb
enter
dec
adc
repz
addr16
lods
hlt
sbb
clc
pop
fimull
add
xchg
sub
mov
cmp
ss
stc
pop
pushf
mov
push
adc
xchg
mov
in
adc
xchg
mov
push
into
lea
xchg
push
daa
lret
popa
fxrstor
in
rol
push
cmpsl
loop
scas
cmp
outsl
xor
into
and
jb
sbb
mov
inc
sti
mov
lret
mov
jne
push
scas
adc
jecxz
testb
sub
lahf
jns
pop
and
pushf
in
out
pop
aam
adc
ljmp
jecxz
or
cli
subl
lods
pop
cmp
or
push
lods
pop
jg
test
int3
popf
xchg
mov
neg
scas
dec
push
nop
pop
insb
xor
negl
out
loop
das
out
sti
sbb
xor
cmp
adc
inc
mov
mov
pop
sub
test
mov
inc
dec
jo
test
mov
test
in
xchg
jo
mov
lahf
mov
dec
push
or
aad
xchg
mov
pushf
test
inc
mov
sbb
cld
mov
rol
jl
testb
out
xor
add
faddl
mov
jecxz
xor
jns
push
in
lock
mov
mov
mov
xchg
mov
and
shl
xlat
add
inc
mov
pop
int
test
imul
cmc
aam
pop
loop
cmp
je
lret
jle
xchg
out
ret
sub
out
aam
cmovae
sbb
xor
pop
push
rcll
fwait
inc
pop
lock
scas
mov
movsl
fwait
xchg
push
cmp
dec
or
xchg
dec
ja
jge
or
and
xor
jno
mov
int3
bound
aas
adc
sbb
inc
and
sbbb
pop
testl
mov
cmp
pop
xor
pop
fsubrp
les
loop
mov
and
jnp
adc
jg
adc
dec
leave
adc
xchg
js
and
push
fcoml
jb
jb
fwait
cwtl
enter
mov
jp
movsb
fistpl
pop
add
lret
sbbl
cld
and
mov
inc
pusha
cmp
dec
sub
jecxz
inc
or
loop
push
jno
mov
jb
cmpsb
lods
adc
frstor
rorb
repz
not
jne
inc
add
mov
xchg
adc
out
sub
int
arpl
inc
fisubs
call
aaa
into
mov
minps
sbb
out
ror
push
push
in
pop
xchg
into
sbb
adc
aas
into
sub
mov
dec
imul
push
mov
mov
push
mov
je
jb
out
cmp
mov
jae
push
out
inc
mov
lea
jg
and
inc
mov
subb
mov
pop
imul
or
in
pop
mov
sub
add
mov
lock
stos
mov
adc
or
jcxz
jg
in
cli
mov
sub
mov
inc
push
dec
xchg
lcall
mov
sub
testb
pop
movsl
mov
out
mov
and
out
and
adc
je
sahf
imul
xor
xchg
scas
arpl
call
ret
jmp
mov
insl
nop
lods
add
nopl
mov
lods
fwait
cwtl
jmp
xchg
jo
cmp
sub
ret
push
insb
bound
fwait
add
lahf
aad
sbb
ds
push
xchg
xor
mov
pop
insb
fisubrs
pop
jmp
jecxz
inc
sahf
lds
push
push
pop
das
arpl
jecxz
ss
lahf
adc
nop
ficomps
sbb
mov
bound
cmp
sub
outsl
ds
ret
push
popa
loope
pop
icebp
mov
pushaw
pop
popa
mov
xor
or
mov
adc
jp
gs
adc
test
push
sbb
mov
pop
lods
jge
xor
ficomps
jmp
jmp
or
testb
push
and
iret
gs
cli
mov
push
xor
loopne
je
and
jmp
outsb
fwait
mov
and
aaa
mov
pop
lea
mov
push
outsl
rorl
mov
pusha
xor
cmp
fdivp
cwtl
data16
ljmp
inc
inc
mov
scas
pop
jb
mov
pushf
out
jmp
cli
aas
and
jae
add
sbb
cld
and
xorl
out
ss
xchg
or
push
push
inc
jge
je
movsb
or
pop
xchg
loopne
sub
out
mov
mov
jp
ja
cmp
shlb
int3
pop
fistpll
mov
mov
xchg
push
push
lea
cld
shl
test
sbb
mov
cwtl
cmp
or
cli
jne
push
push
mov
sub
jecxz
push
outsl
xor
pop
es
mov
cmp
pop
jne
xchg
xchg
xor
sub
mov
outsl
inc
rcl
mov
mov
xor
lret
and
arpl
lea
gs
lret
mov
or
mov
push
shll
in
mov
cmovg
inc
and
sub
out
mov
shr
jne
call
push
dec
or
in
nopl
arpl
mov
stos
sbb
sbb
js
jo
cld
loopne
sbb
sarl
dec
call
mov
clc
and
test
pop
cmpsb
loopne
stos
pushf
adc
mov
fisubl
insb
popa
xchg
sub
repz
or
movsb
ss
push
test
int
mov
mov
mov
xlat
jle
ljmp
ret
and
jno
or
cli
xor
fidivl
or
lcall
loopne
popf
ljmp
pop
hlt
fcompl
mov
test
pop
movsb
ja
scas
and
xchg
mov
mov
and
lods
add
fwait
jge
push
add
jmp
cmp
xor
lods
cld
xorb
in
cmp
test
pop
push
jmp
xor
xor
or
ret
dec
and
jbe
jecxz
scas
inc
cli
mov
adc
add
push
sti
xchg
or
dec
cwtl
stos
cmc
sub
sub
movsb
mov
das
mov
loopne
ret
movsl
jne
sub
dec
or
cmp
jbe
pop
roll
fucompp
ss
jne
dec
sub
cwtl
push
in
out
out
mov
into
stos
xor
jmp
outsl
mov
mov
cmp
mov
imull
xchg
test
cmp
int3
push
sbb
sarl
out
cwtl
xchg
std
lods
pop
popf
cwtl
inc
dec
into
cmp
sub
sbb
sbb
loop,pn
aaa
dec
mov
dec
xchg
jecxz
clc
mov
shll
leave
mov
sti
loopne
aas
lahf
gs
mov
cmp
xchg
pop
lods
insl
jmp
sahf
pop
int3
loope
lods
outsb
stos
mov
mov
sbb
or
mov
cmp
mov
sub
mov
xchg
lea
mov
movsb
sbb
jge
or
pop
xchg
mov
lcall
mov
nop
test
popa
push
lcall
and
cld
loopne
lcall
xchg
pusha
rorl
or
test
mov
adc
pop
sbb
test
test
ja
pop
dec
inc
mov
mov
into
mov
out
or
bswap
sbb
push
fmulp
sub
or
push
inc
and
inc
enter
imul
mov
push
push
arpl
or
jl
push
sbb
lcall
lds
dec
scas
mov
addr16
xchg
lds
mov
adc
sub
and
fsubr
in
loopne
xor
cltd
test
std
in
cmp
adc
jl
orb
sub
sub
mov
sub
inc
xor
or
adc
push
cmp
and
scas
jmp
idiv
dec
cmp
fimull
xor
repnz
cmp
in
inc
lahf
pop
or
xchg
or
idivb
outsl
std
ror
cmpsb
lea
inc
sti
mov
into
mov
sbb
and
loop
imul
data16
pop
out
mov
and
aam
cwtl
inc
es
imul
adc
or
int3
sub
in
fdivrl
jge
movsb
out
xchg
fimull
cmp
xor
jle
jge
loop
bnd
ret
gs
je
jb
dec
xchg
test
mov
pop
popf
daa
subb
idivb
and
das
jmp
push
les
xchg
add
mov
repnz
xor
or
xchg
xchg
fisubrs
mov
cmp
icebp
daa
mov
lods
and
les
popa
cwtl
mov
stc
mov
pop
dec
popa
stos
ds
jns
jnp
lret
xor
push
push
xchg
inc
mov
push
pop
in
fmuls
fists
pusha
ljmp
scas
dec
or
ret
paddsb
xchg
mov
into
shlb
xchg
or
aam
sbb
pop
push
xlat
sahf
lods
leave
inc
das
or
loop
fisubrs
int
mov
fisubs
gs
in
out
scas
push
xchg
mov
mov
call
jge
lea
mov
mov
out
or
imul
cmp
mov
arpl
push
mov
int
loope
out
xchg
fcomps
sub
add
sub
add
xchg
mov
test
mov
rcl
sub
enter
mov
jnp
pushf
xor
repnz
mov
inc
dec
rcll
andl
inc
cwtl
jae
int3
adc
test
adc
aam
fistl
add
pop
loop
cmpl
sub
mov
loopne
sbb
inc
fmul
in
add
cli
sbb
scas
dec
cmp
enter
xchg
inc
add
mov
stos
out
out
sub
movhps
mov
mov
sub
lret
cltd
movntps
and
loop
sbb
mov
int
xchg
ret
sub
inc
fwait
lock
mul
psubusw
mov
imul
movb
sbb
pop
inc
ljmp
jb
push
add
stos
dec
jg
les
or
xchg
push
stos
loop
mov
es
iret
xchg
fstpt
adc
rorl
es
sub
lods
mov
aaa
adc
shlb
inc
pop
jecxz
nop
sti
pop
mov
push
mov
out
and
and
jp
add
xchg
add
js
mov
dec
inc
add
sub
loop
sub
inc
pop
add
push
jge
stos
mov
ds
gs
aas
out
mov
je
mov
push
sbb
jecxz
mov
or
cmp
sbb
addr16
mov
shlb
icebp
xchg
mov
sub
or
je
adcl
mov
xchg
mov
bound
jnp
sub
fldl
sub
push
xchg
std
and
mov
out
rcl
mov
inc
sub
pop
add
fisttps
subl
rcrl
insb
mov
mov
nop
insb
and
js
imulb
push
pop
mov
loopne
fyl2x
cmpsl
in
mov
mov
and
hlt
cmp
lods
adc
jp
arpl
fidivs
mov
sub
aad
rol
je
ret
pop
or
lods
movsb
sub
dec
jmp
inc
pop
mov
fdivrp
add
mov
jbe
rolb
and
addr16
cli
into
mov
cld
jle
test
mov
sbbb
and
sbb
jns
aad
lcall
sbb
into
ljmp
scas
loopne
stos
mov
mov
pop
pop
subl
cwtl
push
mov
mov
pop
jae
not
mov
ljmp
das
std
in
ficoms
jecxz
lcall
call
in
pop
bound
jmp
stos
add
ss
incb
imulb
jb
push
lar
push
pop
stos
lret
pushf
xor
sub
xchg
mov
pop
dec
dec
cmp
pusha
into
push
rorl
adc
aam
in
mov
sahf
jns
xor
push
jecxz
into
pop
insb
adc
cmp
jp
sub
jne
push
or
filds
mov
cli
and
add
adc
repz
dec
inc
jb
xor
push
sub
or
pop
cmp
stos
xor
sub
adc
jb
stos
in
int
mov
movsb
inc
cli
mov
sub
out
call
xchg
out
andb
and
mov
mov
lret
dec
int3
dec
add
in
mov
xchg
inc
ret
adc
imul
mov
sahf
cwtl
push
sbb
pop
stos
imul
sahf
cmpsb
mov
sub
nop
push
xchg
push
adc
ja
fsts
movsl
ret
wbinvd
inc
into
nop
shll
xchg
jmp
aaa
mov
sbb
and
dec
sbb
les
into
sti
dec
aaa
or
dec
adc
ljmp
xor
rorl
stos
and
xchg
cmp
test
cld
pusha
test
in
jmp
fcmovb
hlt
pop
repnz
pop
add
inc
lcall
pop
xchg
mov
arpl
in
cmpsl
int
sbb
sub
test
mov
mov
int3
inc
stos
lea
mov
push
lods
adc
xchg
test
call
mov
cmpsl
xchg
sahf
fidivl
pop
sub
dec
iret
iret
fsubrs
addr16
pop
xor
push
insl
sub
int
je
push
adc
insb
mov
out
insb
or
push
xchg
push
stos
push
bnd
dec
adc
xchg
repz
push
pop
pop
mov
test
adc
inc
dec
repz
push
mov
popa
or
pusha
ljmp
or
arpl
addr16
push
xor
out
dec
jle
rcl
adc
lea
hlt
dec
xchg
sarl
sub
mov
lods
mov
leave
xchg
dec
cmp
xor
loop
jo
add
cs
mov
push
jnp
pop
or
push
jne
int
shrb
aaa
jmp
xor
lcall
dec
sbb
gs
mov
adc
dec
pop
pop
xor
mov
mov
es
arpl
sar
push
ljmp
cs
scas
ret
ficomps
push
arpl
idivl
mov
dec
dec
xchg
pop
mov
shlb
inc
xchg
mov
push
xor
sub
mov
and
outsb
cmp
lea
das
in
push
ljmp
fisubl
rol
or
or
les
pushf
push
scas
cld
mov
out
jno
push
mov
mov
dec
movsb
and
cld
mov
jmp
lods
or
call
and
jge
xor
fcompl
mov
cli
add
sub
cmp
inc
push
jl
dec
push
hlt
mov
data16
fistpl
imul
add
mov
mov
and
pop
std
add
inc
pop
in
mul
and
sub
aam
mov
xchg
add
out
inc
aas
in
ljmp
fidivl
sub
mov
ja
movsl
mov
sub
cmp
cmp
out
push
jge
in
xchg
in
jne
shlb
mov
stos
push
mov
jmp
xchg
xchg
ljmp
mov
mov
sub
sbb
fisttps
dec
faddl
or
out
lds
or
testb
fmulp
andb
mov
pushf
push
mov
in
pop
mov
pop
addb
mov
xchg
xchg
cmpb
stos
sub
jns
jns
and
cmp
movsl
stos
insl
sbb
les
ret
lods
rolb
inc
sbb
jl
push
lret
aaa
adcb
or
shll
jp
pushf
ss
sbb
mov
lahf
push
cmp
cmp
push
pushf
dec
mov
xchg
mov
out
jae
ret
push
jbe
loop
pop
rcll
lret
sbb
xor
ror
leave
das
sbb
mov
xchg
mov
shrb
xchg
or
or
nop
push
orb
or
jb
into
push
lods
mov
push
mov
mov
ucomiss
stos
or
jmp
cmpsb
add
nop
xlat
sahf
mov
jns
mov
or
xor
add
lea
addr16
mov
xchg
pushf
mov
xor
cmp
jbe
call
pop
addr16
inc
mov
sbb
push
jmp
sub
lret
loop
loop
into
js
ret
or
push
mov
iret
or
addb
sahf
orb
fisubrs
jne
scas
test
xchg
cmp
push
inc
insl
fwait
icebp
icebp
loopne
xor
add
cmpl
push
mov
in
add
xchg
adc
addr16
mov
mov
or
dec
add
int3
cltd
jge
xchg
out
out
lods
jmp
aas
outsl
lea
imul
mov
mov
xchg
fisubs
adc
cmp
fsubl
push
mov
es
jmp
mov
mov
sti
fnsave
xchg
jl
jne
out
sbb
dec
pop
ret
push
mov
xchg
cld
mov
push
jne
push
out
ret
ret
pop
cwtl
pop
cltd
inc
mov
pushw
pop
mov
pop
ljmp
sub
jno
pop
push
lahf
aam
dec
nop
scas
add
adc
pop
dec
xchg
cmpsb
in
or
mov
loop
lods
add
xchg
push
push
fwait
mov
lea
sub
xchg
clc
mov
insl
lds
xor
mov
pushf
cmp
sbb
inc
adc
aad
sarl
xor
mov
mov
fistl
sbb
js
cwtl
and
adc
or
inc
daa
mov
lea
jp
sub
cs
insl
sub
mov
aas
cmp
adc
xor
in
in
inc
ljmp
lea
jns
mov
movsb
push
insb
les
mov
push
std
mov
xchg
sbbb
xor
call
cs
sti
xchg
call
js
dec
pusha
xor
pop
xchg
push
push
movsb
sbb
inc
insb
iret
insb
ficoml
insb
or
outsb
stos
nop
jbe
push
mov
or
xor
lret
imul
ficomps
cmp
adc
lea
jb
xchg
rcrl
rorb
cmp
adc
outsb
nop
xchg
lret
mov
sbb
fwait
icebp
lea
jno
push
xchg
add
nop
mov
call
ljmp
mov
rclb
mov
push
jmp
cmc
xor
pop
mov
pop
sbbl
arpl
and
mov
pop
into
loopne
mov
and
sbb
mov
mov
add
dec
or
mov
leave
int
mov
lock
fsub
sbb
mov
lret
xor
jmp
dec
dec
pop
fidivl
in
cltd
mov
and
push
rcll
sbb
sahf
fistl
cmp
push
inc
mov
clc
test
test
fdivrl
pop
ljmp
fstps
and
lcall
cs
sub
xchg
dec
cmpsb
shlb
pop
popa
mov
lds
outsb
mov
pusha
xor
jecxz
divb
inc
cmp
mov
scas
stc
jns
mov
xor
enter
loopne
inc
movsl
out
inc
or
ret
mov
ret
mov
das
push
sub
pop
das
imul
arpl
pop
cmp
inc
mov
push
add
sahf
repnz
dec
or
sbb
ret
xchg
mov
cmpsl
int
mov
arpl
add
add
mov
ljmp
cmpsb
sbb
mov
scas
icebp
inc
imull
xchg
sbb
rcl
lcall
xchg
test
inc
push
inc
cmc
dec
cmp
pop
dec
imull
fmull
mov
shlb
pop
scas
sub
cli
out
adcl
arpl
sbb
shl
popa
imul
rcr
xchg
pusha
outsb
rcrl
jo
mov
or
sahf
rorl
mov
mov
or
mov
ljmp
push
sub
stos
lods
sub
mov
test
lret
scas
or
pushl
sbb
cmc
jmp
clc
loop
out
out
push
pusha
pop
movsw
xor
int
inc
cmp
dec
add
sub
jae
adc
mov
jp
pusha
lods
das
addr16
ljmp
pop
and
or
in
imul
shl
xor
add
cwtl
pusha
xchg
repz
aaa
jecxz
or
aas
iret
adc
jge
jmp
xor
xlat
mov
rcll
mov
iret
mov
xchg
dec
sarb
bswap
out
into
sti
and
adc
out
xchg
add
in
cwtl
sti
add
out
cmp
sti
pop
push
xor
out
cld
int
les
mov
jmp
std
jmp
push
or
rcrl
inc
mov
into
out
sub
xlat
push
xchg
test
stos
xchg
stos
ret
push
pusha
mov
mov
test
mov
and
cmpl
out
lds
stos
repz
rol
movsb
push
std
bound
sbb
arpl
jns
inc
rclb
xchg
adc
ss
sbb
cmpsl
popa
and
sub
and
sbbb
pusha
cld
sub
push
lods
int3
ljmp
cld
inc
stos
flds
adc
xchg
and
adc
clc
add
movsb
lret
mov
out
jo
xor
sbb
mov
fisubrs
fmull
add
mov
sbb
fnstenv
fs
or
mov
fstl
rorl
fisubl
mov
arpl
gs
xlat
repz
sub
scas
sub
arpl
iret
pop
ret
pop
data16
add
or
scas
or
or
jo
add
pop
stos
scas
mov
push
fisubl
aad
loopne
or
fisubs
or
adc
ret
imul
inc
jmp
data16
pusha
or
lds
jecxz
dec
mov
bnd
test
and
hlt
aaa
sbb
lock
inc
xchg
add
mov
clc
cmp
mov
sti
adc
out
mov
mov
mov
or
gs
cmp
mov
aaa
mov
idiv
mov
into
lods
push
jmp
push
iret
aas
mov
popf
adc
lods
mov
xchg
testl
sub
inc
or
imul
lret
sbb
mov
sub
xchg
sbb
es
sbb
jecxz
scas
ret
mov
xchg
pop
pushf
mov
movsl
test
pop
pminsw
jae
and
xchg
pushf
adc
out
xchg
lea
lcall
pop
add
sub
scas
and
fnsave
rol
addr16
jge
lea
sbbl
sub
jmp
adc
or
sbb
ret
mov
sbb
dec
xchg
movsb
dec
ret
xor
cmp
jge
loop
push
loopne
jmp
xchg
jecxz
mov
push
sbb
mov
lahf
bound
and
mov
mov
push
cwtl
das
add
push
mov
pop
mov
adc
sbbb
cmp
cs
arpl
mov
scas
xor
aad
sbb
xor
push
sbb
hlt
and
andb
ret
stos
and
jmp
in
mov
or
stos
stos
test
stos
aaa
xor
fdivr
loop
das
incl
xor
xchg
jecxz
xchg
clc
dec
hlt
test
xchg
test
xor
cltd
into
adc
in
mov
fistpll
in
cmpsl
in
aaa
xchg
jl
insb
mov
add
sub
lcall
into
add
sub
into
cwtl
add
fdivrs
jecxz
and
cwtl
pop
ss
fbstp
sub
daa
mov
sub
sbbb
sbb
lods
dec
mov
cmp
dec
popa
loop
add
into
shlb
push
pop
cwtl
push
sbb
ljmp
jne
clc
sub
inc
or
xlat
xchg
pop
jl
sub
insb
mov
out
xchg
es
add
data16
push
mov
lods
adc
idivl
or
repz
fcmovbe
jbe
lods
ret
add
inc
int3
cmp
aas
lcall
pushl
mov
fisttpl
das
mov
and
sbb
xchg
pop
inc
push
sub
out
pop
ja
outsb
sub
lods
out
sbb
outsl
loop
aas
ja
lods
loop
cmp
mov
push
pop
cs
jmp
rolb
dec
les
dec
mulb
lret
dec
jp
loop
pop
gs
add
sbb
mov
xchg
js
std
das
jge
lret
ret
call
sub
push
dec
and
in
jno
dec
push
cld
je
mov
sbb
lret
pop
mov
iret
lcall
ret
inc
decl
xlat
sub
push
sbb
xor
xchg
lods
xchg
flds
push
ret
fisttpl
or
insb
in
mov
adc
sti
rcrl
mov
xor
xchg
add
sub
mov
push
xchg
inc
lea
or
add
cwtl
leave
pop
lcall
mov
xchg
mov
sbb
inc
arpl
out
pop
sub
sbb
sub
xor
inc
dec
lods
jle
testb
dec
lods
es
out
insb
sbb
in
cmc
push
add
xor
and
cmp
shlb
xor
xorl
mov
arpl
add
jecxz
jno
ss
xchg
icebp
sub
loopne
and
in
fcoml
pop
das
rcrb
fdiv
or
or
popf
push
mov
dec
sbb
or
jbe
lcall
mov
mov
sub
out
sbbl
sub
outsb
cmp
and
or
in
pop
mov
push
adc
cmp
sbb
adc
cld
push
xlat
insb
jecxz
push
sub
outsl
out
outsb
cmpsb
out
jle
sbb
jge
xchg
out
and
cwtl
stc
outsl
nop
pop
in
shlb
cmp
xchg
cmp
adc
gs
pusha
xchg
sub
xchg
shrb
xchg
mov
cmpl
mov
loope
pop
jbe
call
mov
xchg
leave
pop
cld
mov
fs
inc
push
in
mov
adcb
lock
push
mov
insb
cltd
into
jns
jmp
cmpb
xor
fbld
xchg
rcll
xor
fcoms
mov
sbb
into
mov
jmp
cwtl
cmp
sbb
int3
fstpl
jno
jg
mov
out
movsb
ja
jo
mov
mov
xchg
ss
mov
jno
cmp
iret
mov
push
cmpsl
and
push
pop
bound
xor
loop
test
pop
xchg
test
mov
jge
cmp
insl
ja
sub
add
bound
fistps
xor
xchg
push
enter
pop
movsl
and
jecxz
dec
adc
xor
sub
dec
hlt
lea
out
outsb
pop
sarl
inc
or
movsl
xor
mov
jle
and
fwait
push
ret
pop
jo
jbe
sub
jae
dec
dec
mov
pop
fucomip
loope
andb
outsl
lods
shlb
ret
add
cli
stc
out
out
sahf
fbld
es
mov
mov
push
ss
fisubl
mov
mov
jne
arpl
cmp
testb
aad
jb
in
mov
movsb
test
or
add
inc
jecxz
mov
cwtl
test
sub
dec
loop
jno
jmp
fs
push
xchg
add
fwait
xor
sub
dec
in
mov
test
ljmp
pop
sub
lret
jp
fisubrl
arpl
test
cli
ljmp
daa
jb
cmp
arpl
sbb
cmc
lds
mov
insb
xchg
je
sahf
std
mov
rorb
out
push
into
test
push
and
push
stos
je
pushf
jp
or
fnstcw
addr16
lods
in
dec
std
lahf
add
xchg
sbb
aaa
jns
add
fisttps
or
pop
popf
pusha
adc
jnp
inc
loope
cwtl
xor
sbb
inc
sbb
data16
out
mov
and
sbb
lret
sub
mov
iret
push
jb
mov
fucomi
psadbw
adcl
adc
add
ja
sbb
jns
xchg
in
stos
inc
jbe
ret
stc
fwait
ljmp
xchg
mov
jmp
jl
and
loop
addb
scas
dec
push
xchg
movsb
lock
rorl
adc
cmpsb
mov
xchg
adc
push
test
sti
jecxz
inc
cwtl
out
inc
lahf
insl
mov
add
das
cmpsb
lcall
or
lcall
mov
mov
fldt
mov
mov
ret
test
dec
loope
out
or
mov
mov
lret
int
sub
and
cmp
mov
test
mov
cmp
jecxz
dec
push
xchg
mov
mov
or
cmpsl
adc
inc
mulb
repz
push
shl
sbb
xor
jp
xchg
push
or
or
jp
insl
push
call
pushf
out
jmp
je
mov
xchg
lret
lea
dec
aam
mov
sbb
or
push
dec
xlat
ret
pop
imul
jo
fwait
mov
das
imul
jb
aaa
push
jle
out
mov
xchg
jmp
jns
cmp
test
andl
pop
test
daa
sub
je
ja
add
jge
mov
sub
lea
jmp
scas
xor
rcrl
and
pusha
pop
jecxz
aam
or
cli
sarl
dec
cmc
icebp
mov
test
testl
out
push
mov
push
bound
mov
and
loope
sbb
cmpsb
push
lock
dec
jo
dec
jge
xor
out
cs
sbb
mov
mov
arpl
es
in
pop
sub
sbb
subb
shlb
test
xchg
in
mov
add
mov
shll
push
data16
test
sar
add
and
mov
fwait
jecxz
mov
xchg
in
inc
or
pop
sub
rcrl
push
jg
mov
xchg
push
mov
cmp
sahf
mull
mov
cmp
fsubrl
push
or
xchg
pushf
mov
lds
movups
sbb
pop
lret
and
push
testb
into
mov
test
sub
push
pop
into
stos
mov
mov
push
xchg
and
lret
push
add
ret
das
scas
addb
jmp
pop
push
rol
inc
inc
clc
mov
push
push
mov
or
in
lods
ss
mov
lods
fisubs
or
lea
jae
push
xchg
stos
into
add
pop
pop
inc
fmulp
gs
stos
adc
mov
addr16
lahf
and
cmpb
pushf
out
pushf
sbb
mov
cwtl
out
jo
add
cmc
inc
sahf
sbb
xor
fisubl
jns
loop
mov
xor
cmc
xor
mov
cltd
sbb
or
xchg
ljmp
sti
popf
adc
stos
and
sbb
outsb
imul
lods
repnz
inc
xor
andb
jns
gs
mov
add
cltd
xor
mov
lea
jp
cmpb
ficompl
loopne
in
shll
mov
inc
popa
cs
loop
scas
stos
cmp
stos
adc
cltd
mov
or
dec
inc
mov
mov
sub
lods
pop
movsb
aas
jl
xchg
gs
das
xchg
mov
ficomps
mov
les
scas
add
test
rol
out
shrb
push
sbb
add
insl
sub
ret
xchg
out
ja
cmp
inc
jo
and
das
push
dec
outsl
fidivs
push
mov
notl
js
pop
aas
sbb
jne
fisttpll
mov
out
mov
xor
push
adc
outsb
dec
jl
stc
in
insl
jl
jge
push
movsl
inc
lret
sbb
movsb
bound
test
ljmp
insb
sbb
stos
push
call
adc
addl
addr16
aad
repnz
mov
or
clc
test
stos
mov
in
test
lods
sbb
movsb
jno
jns
lods
cmp
out
rcrb
inc
sbb
hlt
xchg
add
sbbl
jnp
js
sbb
mov
inc
insb
fistps
fdivrl
or
mov
pusha
call
inc
sbb
out
xor
jmp
movsb
pop
sbb
mov
add
out
xor
push
sar
jne
mov
xchg
sub
add
in
push
and
in
add
cmpsl
push
out
sbb
fmuls
mov
out
mov
cwtl
lahf
push
shlb
pusha
pop
xchg
insl
cmpl
jge
fidivrs
xchg
mov
mov
cmpsb
mov
mov
testb
fwait
mov
push
and
fcompl
and
ljmp
mov
jmp
das
sub
fstpt
mov
mov
push
mov
xchg
int3
inc
mov
ds
orb
add
dec
das
sub
push
inc
ljmp
push
out
pushf
push
xchg
sbb
push
hlt
fsubs
mov
dec
enter
rorb
adc
mov
mov
adc
loop
call
test
scas
dec
push
adc
imul
xchg
incl
and
popa
sbb
add
lea
xchg
sub
mov
repnz
fcmovu
ret
add
pop
mov
fwait
cwtl
mov
gs
inc
ficoml
cmp
loop
pop
aad
jl
rorb
pop
mov
out
mov
pusha
insb
pusha
and
call
mov
cmpsb
cmp
ja
adc
mov
mov
popl
push
xor
sbb
sbb
iret
sub
aaa
mov
or
mov
stc
mov
mov
jl
pushf
sbb
andb
ds
repz
mov
mov
imull
std
out
pop
lock
cmp
js
out
mov
mov
mov
push
push
arpl
scas
push
jg
decb
adc
xchg
mov
mov
dec
dec
insl
xchg
mov
fisubs
mov
sar
shlb
pop
push
mov
test
mov
mov
inc
add
mov
out
ret
mov
pop
fidivrl
push
mov
stos
mov
aaa
pusha
fisubrs
mov
bnd
dec
fnsave
adcb
sti
push
or
imul
bound
int3
lods
rcrb
or
aaa
movsb
xor
pop
lret
insb
popfw
loopne
mov
jp
cmpsl
xor
gs
sub
inc
sub
cld
add
iret
fstpt
push
cwtl
add
jmp
ret
jmp
jbe
bound
hlt
and
ret
fadd
xchg
fisubl
or
sub
stos
jo
jne
test
sub
push
or
bound
pusha
sub
adc
cli
pusha
and
scas
cmp
cli
adc
inc
mov
scas
dec
movsb
xchg
hlt
sbbl
mov
and
fs
inc
adc
dec
mov
rcrl
test
movsl
push
xor
cmp
je
mov
ja
dec
or
add
test
inc
lahf
adc
xchg
jmp
scas
pusha
in
cmp
leave
and
add
push
dec
sub
pop
jmp
sub
add
movsb
out
cmp
push
fildl
fs
xchg
mov
or
sub
sbb
add
or
pop
stos
mov
xlat
add
push
rorl
in
pop
add
xchg
sysexit
repz
mov
push
push
adc
fs
jmp
push
mov
inc
mov
popa
aam
stc
data16
sbb
or
sub
test
fs
inc
mov
adc
addl
in
scas
and
fwait
add
mov
mov
roll
cli
add
sahf
popa
jnp
dec
in
call
hlt
push
dec
add
insb
cmpsl
dec
dec
sbb
cltd
adc
xchg
dec
stos
pop
test
jge
lds
adc
pop
jmp
sub
push
mov
push
testb
and
hlt
fsub
lret
ficoms
jge
ret
fisubl
out
jnp
cmp
loop
outsb
dec
mov
sbb
movsb
js
mov
stc
ret
fs
push
xchg
mov
sarl
sub
jp
test
jge
iret
cld
imul
sahf
fs
scas
jbe
jnp
pop
lods
out
xorb
jnp
xor
add
dec
outsb
xlat
lret
jecxz
xlat
sbb
out
popf
bound
out
xchg
faddl
rorl
sub
jns
push
mov
in
leave
ret
cltd
add
hlt
push
push
iret
repz
inc
sub
mov
scas
jmp
stos
ret
imul
negl
xor
sbb
test
mov
arpl
stos
rol
dec
sub
mov
xorb
mov
fnstsw
outsl
mov
xor
add
add
bnd
mov
xchg
in
in
or
shl
pop
jge
pop
movsb
test
stos
adc
mov
pusha
xchg
imul
rorb
imul
popa
pop
mov
pop
das
aas
lret
fisubrs
xor
push
pop
gs
in
scas
ret
inc
pop
outsb
das
fwait
je
nop
and
push
ss
iret
sbb
pop
pop
adc
out
lods
lcall
clc
xchg
fmuls
dec
mov
mov
pusha
xchg
scas
or
or
fmull
xchg
incl
data16
push
in
and
scas
or
jecxz
ss
andl
and
push
aaa
jp
addl
ds
dec
xchg
insb
mov
cmp
jbe
inc
jp
fwait
or
mov
mov
ja
bound
scas
in
push
jnp
out
jne
and
insb
addr16
in
lods
sub
mov
outsb
xor
jg
xchg
outsb
push
xchg
cs
mov
call
shr
in
std
stos
addr16
mov
scas
pop
dec
pushl
sbb
test
fs
scas
push
mov
dec
adc
xchg
adcb
loope
rorl
adc
sti
mov
dec
mov
or
cmpb
shrb
mov
jle
jg
sub
fistl
nop
push
jno
mov
inc
mov
jp
xor
jae
les
sub
pop
lea
dec
cmc
fdivrs
push
int3
sub
mov
mov
adc
daa
mov
nop
xor
out
ror
dec
jmp
fs
sub
and
sbb
push
stc
xorb
cmp
xor
or
scas
pop
shr
popa
xor
or
and
insb
push
jo
jle
setg
ja
std
jle
mov
insb
test
fs
mov
jge
in
js
int
jp
hlt
ljmp
inc
sbb
icebp
out
loope
repz
mov
mov
je
dec
push
push
dec
popf
das
mov
sbb
adc
incb
pop
inc
xchg
fsub
cmp
test
sbb
pop
lcall
fldt
stos
or
inc
shll
in
sub
xorb
icebp
jge
inc
push
repnz
shl
push
inc
hlt
xorb
push
sbb
insb
nop
loop
add
jae
jl
sbb
shlb
fsubrl
jmp
cli
js
sbb
andb
outsl
push
mov
fcomps
xor
inc
sub
lahf
sub
add
sub
or
je
in
pop
jmp
in
add
lret
fildl
adc
insl
mov
out
mov
jmp
out
mov
mov
xchg
flds
sub
cmp
add
inc
popf
cli
mov
jecxz
insb
mov
cli
sahf
mov
sbb
mov
inc
dec
imul
lea
addr16
call
add
insl
bnd
xchg
or
xchg
movsb
testb
lods
dec
cmc
rclb
lret
clc
push
stos
int3
mov
push
pop
loopne
ljmp
sbb
sahf
or
sub
enter
cmp
insb
test
inc
mov
mov
lods
pusha
lods
insb
sahf
in
push
xor
cmc
in
test
jl
or
and
ja
jl
push
sub
stos
adc
test
cwtl
movsb
call
lcall
fdiv
mov
lods
pushf
pushl
cmpsb
dec
add
lcall
xchg
or
pop
data16
scas
addr16
push
outsb
sti
sbb
adc
push
sub
push
repnz
int3
shlb
lds
cli
jge
lods
or
or
idiv
add
sbb
rcr
add
adc
or
pop
lods
push
cltd
xor
xchg
xor
mov
mov
jno
cmpb
add
mov
call
xchg
and
aaa
in
dec
mov
mov
subb
fiaddl
jnp
cli
jb
cmp
ss
cwtl
in
inc
push
lcall
xchg
insb
in
adc
lods
push
jp
inc
xor
and
jnp
arpl
sbb
and
in
into
add
cmpl
cmpsb
mov
inc
fisubrs
aam
fbld
adc
jge
xor
dec
fsubl
jle
frstor
add
mov
loop
mov
dec
ficomps
mov
add
insl
loop
mov
mov
push
lahf
ds
jmp
incl
adc
ja
adc
dec
mov
push
outsl
ljmp
movsb
into
inc
mov
adc
jb
cmp
cmpsb
or
insl
inc
mov
les
hlt
push
jae
dec
adcl
push
loop
rorl
mov
loopne
hlt
push
adc
adc
mov
dec
jo
push
rclb
in
jb
insb
sbb
loop
ret
xor
cmp
outsl
xlat
in
dec
jb
push
sbb
xchg
shl
xlat
mov
push
inc
subl
sahf
inc
mov
sbb
cmp
and
mov
push
dec
cli
push
push
ret
sbb
jmp
mov
mov
xorb
xchg
add
push
sti
fwait
nop
shl
xchg
fisubrs
sub
jmp
sarl
inc
xchg
push
cmp
test
adc
movups
cmp
daa
add
xor
adc
sbb
push
addl
xchg
adc
jmp
xchg
push
jne
jns
imul
bound
or
into
push
shrl
fst
cmpl
gs
lcall
lcall
loopne
push
push
xchg
jmp
jle
or
mov
dec
fistps
mov
ret
jne
mov
inc
aam
stos
lahf
lods
adc
xchg
pushf
cmp
bound
sub
xchg
sub
lret
pop
add
shlb
lret
ret
inc
mov
mov
loop
mov
js
or
xor
aaa
jl
hlt
mov
mov
mov
sub
in
test
imul
jae
movsb
inc
xorl
pop
andb
imul
inc
movsl
ss
lods
jae
rol
mov
xchg
sub
test
mov
lcall
aad
sub
fsubrs
push
sahf
pop
inc
data16
insl
loopne
pop
int3
sub
gs
in
pop
sub
push
xchg
test
ret
leave
ret
and
lods
cmp
aam
in
sub
jmp
mov
hlt
mov
das
xchg
jecxz
adcb
push
arpl
lods
aad
xor
jecxz
inc
ret
xchg
mov
lcall
outsb
inc
inc
es
lods
nop
xor
les
sub
mov
out
dec
aad
push
sti
mov
mov
sub
fcoml
push
sub
test
mov
lods
inc
xchg
ss
movsb
fwait
mov
out
arpl
ret
fsub
fbld
rclb
mov
shrl
cld
mov
sahf
ficoms
vpcmpgtq
pop
adcl
ret
xchg
lods
xchg
add
add
sub
lods
cwtl
mov
stos
sub
inc
out
mov
xor
mov
inc
ret
cmpsl
std
adc
jge
fdivs
fmul
and
push
push
in
je
rcl
jle
sbb
or
inc
push
xor
daa
lret
lcall
or
ficoms
nop
inc
lret
mov
dec
pop
push
sub
sbb
rcrb
std
lock
mov
cld
dec
and
nop
pop
sarb
xchg
mov
ljmp
push
xchg
sbb
sub
jmp
lcall
and
test
sub
dec
lods
mov
xor
and
mov
sbb
shll
outsl
into
push
stos
sbb
or
sbb
leave
adcb
repz
mov
fs
sbb
insl
adc
or
int
add
mov
push
inc
mov
lock
cmpsb
and
jmp
addr16
or
mov
push
cmp
mov
lret
add
mov
push
and
mov
lds
sub
movsb
xchg
mov
jae
loop
inc
sti
push
inc
jmp
mov
movsb
out
imul
adc
sub
add
lcall
in
ret
mov
push
sti
inc
mov
jp
shl
xchg
cmp
mov
mov
fiaddl
push
icebp
roll
add
push
add
and
ss
clc
and
int
pop
add
add
call
clc
arpl
ss
notb
fstpl
aas
sarb
and
cmp
jno
add
inc
stos
sub
call
js
inc
push
outsb
push
mov
js
sbb
shll
cmp
in
popa
sbb
out
fldcw
cmc
test
lahf
xchg
dec
add
and
inc
xor
ljmp
scas
jbe
and
add
les
imul
addr16
lret
adc
xor
dec
scas
mov
je
push
or
dec
mov
repnz
pop
test
movsb
mov
sbb
xchg
ds
sbb
fldcw
leave
out
mov
jmp
cmp
lods
mov
push
dec
lds
and
bound
mov
fidivl
mov
add
out
out
scas
mov
cmp
xchg
imul
adc
shl
xchg
loop
fs
lar
and
push
insb
inc
dec
leave
dec
sub
shrb
jns
and
cmp
loope
cmp
push
xchg
daa
test
fdivp
aam
aaa
mov
outsb
cmpsb
mov
imul
adc
fs
ret
gs
cs
mov
xor
enter
arpl
inc
fisttpl
inc
pop
push
movsl
sti
pop
fstl
mov
jo
ds
sbb
or
pop
sbb
pusha
stos
je
and
mov
mov
push
icebp
loop
xor
cwtl
out
push
mov
inc
or
inc
ss
and
fdivr
lock
xchg
arpl
inc
mov
cs
andl
lock
cltd
mov
fistpl
int3
jge
push
cmpsb
jae
add
push
jp
push
shrb
scas
ss
lock
out
ffreep
leave
stos
mov
and
xorl
lahf
fisttps
out
lods
cmpb
mov
mov
pop
into
jbe
popf
loope
fnstcw
scas
sahf
pop
jl
imull
aaa
out
popa
sahf
fidivl
mov
sub
shld
adc
mov
mov
adc
mov
cmpb
mov
in
adc
mov
sbb
mov
add
shlb
inc
push
xor
insb
iret
mov
inc
xor
pop
xchg
int3
sub
out
bound
sub
sbb
or
outsl
or
sbb
lea
mov
in
insl
xchg
in
adc
pop
xchg
incl
pop
in
call
or
jp
sarb
adcb
xchg
pushf
adc
into
xchg
das
add
adc
stc
add
addr16
ljmp
mov
cmp
or
lahf
call
fldcw
das
adc
mov
sub
xchg
mov
imul
adc
xchg
fcoml
dec
or
push
jg
lahf
add
enter
fnstenv
or
cld
or
in
dec
xchg
iret
adc
or
or
mov
dec
adc
add
adc
mov
cs
xor
gs
imul
mov
adc
mov
packssdw
ljmp
xlat
arpl
jl
loop
stos
cmc
mov
sub
and
mov
pop
and
stos
divl
pop
cmpsl
cs
je
lds
fwait
xchg
repz
mov
in
cltd
sbbb
sub
repz
adc
les
ret
sbb
test
scas
jl
outsb
jecxz
lods
insb
cmp
cld
mov
gs
inc
loopne
repnz
pop
mov
ds
ljmp
test
outsl
and
and
cwtl
stos
jecxz
sub
or
pop
sarb
mov
cmp
daa
jno
neg
test
mov
addr16
mov
fildl
insb
dec
xchg
cltd
daa
lcall
lods
xor
int
popa
xor
popf
pop
xor
mov
cli
push
arpl
arpl
jle
jecxz
test
std
ret
popf
cmc
dec
aad
cmp
bound
and
add
xchg
repnz
sub
bound
cli
es
push
push
mov
and
lret
lret
mov
xor
dec
adc
add
or
sbb
in
movsl
cmc
fimuls
dec
data16
cmpsl
push
pop
pop
arpl
test
sbb
inc
jg
dec
test
sbb
cmp
xorb
xor
pop
ret
adc
sub
std
pushf
popf
pop
sti
inc
mov
and
into
out
dec
je
ret
cmp
mov
je
push
add
adc
and
push
pop
ret
outsb
jmp
sahf
hlt
push
mov
popf
lahf
ret
andb
add
test
sbb
push
test
or
sub
jmp
push
push
in
add
lret
int
or
xor
test
dec
test
adc
cmc
add
aad
pop
mov
xchg
lret
adc
cmp
and
call
popf
adc
orl
ret
repnz
push
lret
cmc
out
inc
push
dec
add
shl
adc
aad
jae
insb
inc
adcl
jmp
mov
pop
jecxz
pop
std
pop
outsb
jb
fsub
out
out
xor
in
cmp
inc
les
jmp
adc
imul
cmc
pop
fsubrl
cmp
stos
adc
xchg
add
bound
sbb
pushf
sahf
ljmp
test
adc
ljmp
sbb
testl
sbb
pushf
adc
outsb
or
lret
lahf
dec
mov
or
aam
int
push
in
push
lods
psrld
jg
dec
push
arpl
xchg
std
test
cmp
hlt
push
gs
adc
ret
and
dec
in
pop
cmc
lods
arpl
mov
add
shr
lret
dec
xchg
das
and
mov
sub
sbb
ret
xchg
xor
and
imul
test
lds
cmp
test
jecxz
inc
jo
sarl
ret
or
std
push
or
sub
jge
vmovsldup
or
mov
and
jmp
fimuls
inc
imul
in
or
mov
in
andl
mov
mov
sbb
or
add
movsl
nop
ds
push
pop
aad
cli
pushf
aad
cmp
clc
fwait
ljmp
pop
push
or
les
je
mov
in
lea
ficoml
outsb
mov
mov
fildl
call
or
mov
mov
movsb
out
xor
std
lea
dec
sar
in
aad
sahf
xchg
inc
scas
push
jmp
test
jb
adc
push
addr16
sahf
jbe
or
dec
shlb
add
adc
cwtl
lods
jmp
jecxz
rcll
lret
pop
iret
shrb
test
jge
in
jg
pop
sub
aad
pop
out
insb
mov
nop
push
fs
aam
dec
dec
mov
mov
dec
mov
stos
push
sbb
lds
insb
mov
imul
dec
popf
sub
mov
push
loop
mov
adc
fisubl
shrb
aaa
mov
int
test
mov
movsb
xor
rclb
push
repz
repnz
popf
dec
int
dec
add
lret
mov
ret
into
or
sub
adcb
adc
lods
jg
mov
cmpsl
lods
shll
and
pop
sub
adc
in
insl
inc
dec
inc
sub
cmc
lahf
lds
pop
int3
mul
aam
lds
cmp
in
cmp
xchg
aaa
mov
int3
jge
adc
cmp
insb
repnz
ret
mov
lret
dec
inc
subb
insb
ljmp
or
sub
mov
sbb
mov
xorl
inc
cmpl
cmp
fldcw
insb
inc
adcb
out
dec
out
mov
pusha
int3
and
ficompl
daa
dec
cmp
or
sub
mov
ret
outsb
loop
cmpsb
int3
mov
je
rorb
ljmp
sbb
dec
lea
xchg
dec
in
mov
xor
aaa
xchg
lea
jmp
lea
sub
cwtl
push
push
and
push
jg
mov
js
mov
in
imul
adc
xchg
lret
les
or
push
mov
mov
or
or
hlt
clc
push
mov
adc
aad
mov
out
pop
popf
xor
andl
out
mov
mov
pop
test
push
push
sbb
pushf
sub
mov
and
cmp
or
pop
fmull
aam
das
rolb
das
cmc
sbb
xor
mov
mov
pop
jmp
je
jge
aaa
pop
and
scas
sub
adc
cmp
inc
int3
aam
lods
adc
in
mov
pop
jae
out
cmp
or
lods
sbb
mov
test
or
and
dec
ja
movsl
lcall
pop
cli
pushf
lea
hlt
in
xor
fldcw
call
xchg
cli
test
in
or
arpl
mov
add
aaa
ss
popf
mov
inc
lods
push
xor
jge
xchg
adc
sbb
in
lds
jmp
fimull
inc
aad
cli
jb
or
in
cs
jge
jmp
test
movsb
in
mov
iret
idivl
xor
loopne
bound
popf
enter
mov
xor
roll
jae
test
add
int3
shlb
pushf
adc
cld
fmuls
arpl
movsb
in
les
jno
or
out
jg
jp
inc
add
jecxz
les
jmp
xchg
or
pop
xor
adc
adc
and
lods
arpl
or
lods
jnp
jbe
inc
lea
fcoml
mov
jne
pusha
mov
xor
mov
xor
es
stc
imul
and
lea
mov
push
xchg
mov
jmp
inc
test
inc
jecxz
push
into
iret
sbbl
cmp
xor
in
in
and
add
add
and
xchg
scas
cld
pop
sbb
mov
test
outsl
xlat
cli
or
scas
inc
dec
insl
test
add
cmpsb
xchg
aam
lret
bound
mov
pop
jmp
jg
hlt
mov
add
mov
orb
add
leave
pop
hlt
outsl
mov
hlt
mov
lea
mov
ss
sub
jmp
pushf
int3
push
adc
mov
xchg
lea
inc
adc
out
mov
aad
in
fdivrl
push
and
xchg
sub
ja
daa
inc
je
in
dec
mov
and
and
sbb
sub
pop
scas
xor
add
sub
jbe
cmp
push
inc
inc
lcall
push
xchg
lea
cs
cmp
ja
insl
pushf
push
jp
push
scas
xor
and
hlt
sub
add
xchg
mov
pop
pop
cld
mov
int
imul
jmp
lods
fcoms
jmp
xor
call
in
fmul
mov
jns
mov
push
add
sbb
negl
push
das
into
push
cs
iret
pop
adc
pushf
dec
loope
shll
jge
jo
iret
cwtl
sahf
test
or
pop
int3
or
mov
or
mov
repnz
outsb
pushf
xor
call
xchg
int3
lret
xchg
fcmove
mov
xchg
movsb
or
lods
pop
mov
mov
in
lahf
mov
sbb
cwtl
jecxz
jmp
sbb
mov
jnp
add
sahf
dec
out
cmc
push
jnp
in
mov
cld
and
imul
xor
ljmp
es
add
aam
adc
sbb
leave
xchg
xor
and
int3
int3
mov
ja
xlat
xchg
cld
js
lods
mov
push
push
adc
mov
seto
mov
mov
icebp
fldl2e
mov
jno
cltd
pusha
dec
lods
test
mov
pop
mov
pop
and
sbb
push
into
je
aas
cltd
fs
iret
daa
shl
jns
jns
add
jae
cmpsb
and
scas
pushf
shr
sahf
in
sub
cld
xchg
adc
and
outsl
enter
lahf
or
out
ljmp
decb
shrb
in
pushf
adc
push
insb
fstpl
cmpsb
xchg
and
add
dec
and
out
je
adc
scas
push
aaa
jno
cli
dec
jbe
icebp
pop
arpl
xchg
movsl
outsb
notl
aaa
int
add
jns
cmpsl
fldenv
pop
nop
sub
hlt
pop
dec
cmpsl
jo
and
mov
push
sbb
pop
insl
pushf
les
ja
loopne
push
ss
mov
cltd
pushf
loopne
sub
ljmp
out
sbb
mov
aad
inc
mov
imul
or
and
mov
mov
mov
xchg
cld
xor
aad
and
jae
faddl
test
inc
jb
mov
xchg
or
cmp
dec
int3
insb
test
aas
mov
mov
sbb
xchg
inc
and
jg
xchg
cmp
sub
fisttpll
movsb
pop
lods
test
dec
sub
mov
pushf
cmpsl
inc
xor
aam
repz
insl
jle
lea
dec
or
leave
mov
lds
lret
subb
call
or
rcl
movsl
addr16
mov
pushf
dec
aas
push
int3
mov
mov
es
push
sbb
xchg
inc
test
icebp
mov
pusha
adc
mov
les
outsb
sti
xlat
fs
pop
aam
dec
std
add
test
jmp
push
mov
movsl
aam
fsub
dec
orl
scas
cltd
jbe
in
scas
loop
xchg
int3
pop
xchg
sub
leave
adc
in
or
or
jecxz
scas
xor
pop
sub
push
call
in
fisttps
aaa
mov
add
lods
hlt
lods
aam
lods
lea
int3
push
das
cwtl
xchg
sub
out
in
push
int3
add
mov
bound
and
scas
cmp
scas
mov
jae
in
and
hlt
imull
mov
mov
outsb
jno
ret
clc
in
loope
nop
lds
push
add
mov
pop
ror
xor
jnp
dec
inc
movsb
sti
aam
jmp
mov
dec
aad
pushf
mov
cld
aad
mov
pop
xor
out
mov
mov
xlat
repnz
push
ss
pushf
shl
jno
mov
sbb
ret
icebp
dec
sub
jmp
mov
pop
push
xor
adcl
mov
push
pop
insb
out
sub
lods
inc
lods
and
int3
or
mov
mov
dec
mov
aad
in
cmp
push
cmpsb
outsb
fs
stc
fidivs
fwait
xchg
call
jl
fdivrs
clc
cld
int3
ja
sbb
pop
adc
hlt
bnd
test
daa
xor
shlb
xor
cwtl
mov
pushf
loop
rol
pop
xor
addr16
and
or
inc
cmc
ret
les
cmp
sub
or
int3
and
insb
clc
cmp
lret
inc
xchg
mov
push
mov
xchg
push
int3
and
lcall
sbb
ficoml
push
outsl
sbb
negl
popf
xorb
pushf
into
fdivp
add
insl
ss
pop
int
inc
cld
pushf
cli
mov
lahf
fsubr
in
jg
mov
std
mov
lahf
or
inc
rolb
inc
shr
fwait
mov
and
lods
out
jl
inc
shll
push
jo
push
mov
mov
sub
sbb
insb
data16
add
mov
adcl
shlb
and
lret
or
push
sbbb
fcoms
leave
xchg
jle
lret
popf
cs
pop
cmc
dec
add
dec
scas
inc
sbb
or
sarl
xlat
xor
lods
cwtl
xchg
inc
xchg
roll
inc
pop
dec
mov
int3
pop
ja
dec
or
or
push
popf
sbb
lret
xlat
lods
xchg
fdivr
or
clc
popf
add
sub
in
movsl
mov
inc
mov
push
sar
aam
int3
arpl
xor
sub
clc
pop
ja
add
mov
cwtl
lea
cmc
jge
adcl
int3
scas
xlat
pop
movsl
push
pop
scas
popf
xchg
mov
mov
aad
and
in
int3
push
add
sbb
cld
cs
cwtl
test
outsb
lret
cs
movsl
hlt
xchg
aam
popl
rcr
fildl
jl
jge
test
adc
pop
repz
or
mov
jl
jnp
add
or
btsl
sahf
or
sbb
mov
dec
cmp
roll
push
mov
ret
lods
sbbl
out
xchg
add
in
rclb
test
add
mov
xor
dec
jmp
fwait
jnp
cmpsl
shr
cwtl
ljmp
popf
testb
dec
mov
and
pop
aad
dec
sbb
sub
daa
add
or
jg
aam
mov
mov
dec
xchg
fiaddl
cwtl
lret
jp
enter
mov
mov
sbb
mov
or
fimull
xchg
repz
in
jecxz
cmpsl
xchg
jmp
or
insl
loop
mov
ret
mov
stc
mov
in
cmp
orl
mov
insl
xorb
sbb
push
cs
cmpsb
andb
pop
test
subb
push
aad
dec
cmp
and
pop
cmp
xchg
fucomi
push
cltd
cmp
pop
lock
mov
pop
sbb
dec
mov
outsb
cmp
iret
jge
into
pop
xor
neg
insb
xchg
xor
dec
int3
xor
mov
sahf
fldt
aaa
mov
shrl
loop
testl
cld
pop
stos
out
mov
push
imulb
dec
lods
das
jae
push
adc
dec
ja
ret
add
jp
mov
sub
rcr
lods
hlt
inc
and
inc
xchg
mov
jge
mov
xor
mov
cmp
aad
cli
mov
jmp
flds
in
pop
cmp
dec
adc
adc
pop
cmpsl
inc
or
mov
pop
outsl
loopne
pushf
or
in
add
movsb
pop
repz
dec
out
andb
push
fsubl
aad
jmp
pushf
and
push
fistpll
push
int3
popf
popf
addr16
sbb
cmpxchg
inc
and
int3
mov
push
and
test
xor
insb
std
test
mov
out
cltd
lret
cmp
arpl
lcall
inc
lret
cld
and
test
outsb
in
lds
lea
popf
cmp
jns
das
pop
and
ret
test
test
scas
insl
js
ss
in
mov
lahf
push
test
jae
mov
and
sahf
fwait
pop
adc
dec
pop
or
in
pop
add
mov
sub
hlt
aam
stos
and
lcall
mulb
xchg
xlat
xchg
mov
mov
das
aam
add
lods
inc
xadd
ficoms
inc
mov
sbb
sti
inc
inc
pop
ud0
jmp
fiaddl
xor
ja
fwait
leave
xchg
or
cmp
xchg
lods
xchg
xchg
jle
in
in
aad
in
insb
jge
pmaddwd
fmull
xlat
lods
mov
bound
shrb
dec
aaa
icebp
sbb
mov
push
xlat
and
shlb
decl
pop
iret
pop
adc
cld
xchg
pushf
dec
adc
mov
ret
pop
mov
hlt
adc
xchg
mov
les
scas
aaa
xchg
inc
test
shlb
dec
pop
pop
mov
push
mov
cltd
hlt
dec
int3
xlat
mov
data16
pop
movsl
mov
fsub
cmp
adc
or
mov
push
test
jmp
in
and
dec
mov
sub
add
lods
pushf
js
arpl
pop
mov
mov
and
adc
andl
ds
and
inc
mov
mov
pavgb
cmp
idiv
cmc
mov
mov
xor
sahf
xor
xchg
inc
push
fsubl
gs
jecxz
mov
lods
scas
or
test
outsb
scas
xor
pop
popl
sub
or
mov
adc
jp
mov
les
jo
pop
aaa
loop
or
xchg
push
sarb
push
add
xor
sahf
int3
fisubs
lahf
test
mov
push
fdivp
in
ljmp
in
pop
movsb
lods
lret
je
inc
je
in
insl
int3
js
cmc
jg
insl
test
inc
cwtl
and
idivb
inc
iret
xchg
jno
cmp
arpl
xchg
mov
test
add
push
mov
test
lods
jg
pushf
jo
hlt
mov
fiaddl
xchg
inc
push
stos
shlb
lods
cmpsb
pop
neg
mov
lea
pop
mov
add
imul
dec
sub
pop
inc
aas
gs
movsb
or
rcll
jbe
lsl
fists
popa
data16
mov
xor
imul
sti
ljmp
or
pop
lods
popl
xchg
or
into
pop
add
pushf
test
xchg
pop
cmc
call
or
fimuls
sbb
xorl
pop
dec
in
sub
inc
dec
dec
xlat
data16
int
sub
aam
ljmp
and
loop
add
xchg
mov
or
aam
cld
insb
gs
xchg
ljmp
aas
ret
add
test
popf
outsl
mov
mov
ret
xchg
loop
lea
mov
in
mov
in
lea
xchg
sti
and
adc
push
addr16
pop
jp
mov
sbbb
rcll
inc
lea
outsb
mov
lods
pop
dec
nop
rcll
mov
outsb
pop
inc
loop
mov
pop
mov
inc
xor
in
sub
mov
rclb
xchg
int
lea
inc
adc
dec
les
out
fstpt
int
mov
and
sbb
fmull
mov
sbb
into
pop
std
cmpsl
cmpsb
sbb
ret
popf
movsl
repz
test
push
mov
add
das
int3
cmpsb
and
pop
add
mov
das
mov
movsb
fildll
dec
mov
outsb
mov
pusha
mov
daa
addb
sti
sbb
pop
dec
pop
nop
cmpsb
in
daa
leave
call
ret
mov
jmp
in
shrl
pop
inc
rcll
je
mov
mov
sub
add
and
adc
scas
dec
rcl
fistps
popa
lods
cld
jmp
jl
adc
jl
hlt
xor
mov
fdivs
cmpsb
in
in
test
out
mov
in
fimuls
or
movsb
addr16
mov
and
lods
mov
aas
insb
nop
add
pusha
les
faddl
movsl
sbb
mov
cmpsb
dec
xorl
xchg
in
out
jg
cmp
gs
ret
cmp
pop
lea
push
aaa
outsb
js
pop
mov
push
push
ret
pusha
pop
fbstp
test
mov
in
push
pop
mov
or
adc
fsubrp
nop
mov
mov
jmp
aaa
push
adc
or
sar
leave
mov
jecxz
xchg
test
ja
andb
push
fcompl
loopne
aad
mov
mull
xor
add
xchg
xor
into
jge
mov
cmpsl
lods
nop
add
rsm
rolb
popf
les
inc
lock
pop
sarl
inc
lret
icebp
xor
insb
into
daa
sarl
das
mov
sub
aam
jmp
or
lea
jns
fsubl
and
sahf
cmp
sbb
dec
fsubr
ret
sub
xor
gs
pop
in
in
sub
lcall
aas
lods
clc
mov
popa
push
js
jns
pushf
add
pop
lods
mov
jle
jbe
pop
jbe
jo
movsl
pop
xchg
mov
xchg
mov
out
mov
cmp
xchg
shll
int3
jmp
lods
aaa
mov
js
repnz
mov
xor
inc
into
or
out
in
lea
repz
aad
cld
mov
xchg
cmp
pop
inc
pop
in
mov
sarb
and
mov
aam
leave
popf
fiaddl
repz
pop
dec
ret
dec
mov
sbb
aam
js
pusha
pop
addr16
sub
pop
insb
pop
cmp
cwtl
push
scas
ljmp
dec
push
or
mov
add
test
push
and
std
xchg
aad
fnsave
mov
insb
fnstcw
cmpsb
dec
mov
ret
daa
or
fdivl
inc
test
mov
es
add
jle
dec
mov
mov
in
dec
dec
ja
or
les
dec
or
stos
push
cld
andnps
mov
mov
aam
pushf
sbb
mov
lcall
scas
sub
das
call
and
lods
sahf
testl
lods
mull
xchg
inc
insl
loop
xorl
int3
xor
daa
or
pushf
or
mov
in
cld
mov
push
or
mov
mov
inc
cmp
xchg
mov
fildll
xor
sbb
leave
cld
mov
test
arpl
cmp
aaa
xor
sub
push
mov
dec
xchg
stos
xchg
hlt
mov
add
lcall
jb
ficoms
ret
push
outsl
xor
lods
mov
int
ss
jbe
addb
xor
mov
xchg
sti
aad
int
mov
pop
mov
addr16
push
or
dec
mov
stos
scas
or
sub
fsubrs
ja
sti
sbb
orb
ja
js
rcrb
jmp
sti
mov
stc
jecxz
mov
dec
sub
cwtl
mov
xor
pop
js
xlat
pop
inc
andb
out
mov
push
lods
pop
mov
lret
mov
jo
push
xor
repz
pop
test
mov
xor
xchg
inc
fldt
or
sbb
mov
subb
cltd
push
pop
in
outsb
popf
orl
hlt
lods
popa
lahf
stos
inc
cmpsl
in
sahf
xchg
mov
arpl
jecxz
pushf
pop
test
lods
mov
repz
lret
xor
xor
mov
insl
lods
mov
fists
cmp
cmpsb
aad
arpl
dec
pop
xor
push
cwtl
rcr
jnp
cmp
and
sbb
lods
or
inc
les
pushf
or
jno
loop
repz
cltd
and
or
fimull
imull
add
xor
and
aaa
adc
dec
call
call
and
jne
insl
in
incl
mov
insb
icebp
cmp
mov
jecxz
arpl
jnp
clc
out
pushf
lods
xor
in
inc
shl
cld
dec
jne
pusha
and
push
das
roll
iret
imul
lds
pop
xlat
cmp
jle
sub
xor
getsec
pop
aaa
pop
add
iret
xor
mov
dec
repz
jbe
or
lods
daa
or
out
in
into
cmp
add
jne
xor
mov
adc
jl
cld
je
sarb
jg
inc
or
arpl
pop
stos
xchg
mov
push
inc
push
sbb
jns
mov
mov
testb
in
stos
push
jle
imul
mov
lods
dec
adc
lret
xchg
cld
or
incl
inc
shrl
sub
ljmp
les
ljmp
movsb
mov
packuswb
clc
aam
dec
cmp
and
dec
inc
movsb
xchg
mov
jecxz
push
sub
out
leave
cmp
jmp
aam
lea
push
mov
inc
jmp
pop
inc
cltd
jge
cwtl
xchg
std
aad
std
addl
cmpl
sarl
or
or
xchg
push
pop
test
gs
test
inc
adcb
in
iret
mov
xchg
xchg
pop
add
xchg
insl
pushf
cmp
hlt
cmc
push
jo
sbb
stos
jle
cwtl
mov
lret
cltd
repnz
mov
mov
stc
xchg
outsl
popf
movsb
stc
xchg
pusha
mov
lret
lock
and
and
push
mov
ja
sub
fs
push
fistpl
ret
pop
mov
repz
scas
sbb
or
daa
push
mov
lret
popf
data16
in
pop
mov
out
lods
shll
shlb
repz
jmp
cwtl
fnstenv
pshufw
mov
xor
pop
sbb
movsb
pop
loop
push
xchg
add
daa
out
jae
aaa
inc
aad
push
daa
cs
out
pop
dec
lods
pop
jb
imul
pop
orb
aaa
sub
cmpsb
imul
jne
mov
out
test
mov
cmpl
and
adc
outsb
repz
add
or
dec
fs
push
mov
inc
hlt
mov
in
aam
arpl
mov
jl
fsubrp
cld
lcall
xchg
add
scas
inc
insl
mov
popa
dec
and
cld
add
xchg
in
cli
cwtl
adc
shrl
ret
sahf
jnp
cmp
rcrb
inc
lods
rclb
stos
jb
pop
cmpsl
jbe
shlb
aaa
or
push
pop
push
push
test
mov
jno
gs
pop
and
pop
pop
test
popf
push
push
lret
mov
lahf
xchg
pushf
push
aaa
into
aam
lret
rorb
xor
pop
aad
mov
pop
cmp
sbbb
hlt
dec
dec
fldenv
push
sbb
push
in
pop
or
jbe
jp
lods
mov
mov
jl
cmpsb
and
or
enter
imul
pop
popa
mov
xlat
push
push
sub
les
pop
std
roll
cmp
mov
stc
push
notl
xlat
test
pushf
jns
push
dec
inc
cmp
popl
arpl
jns
jo
mov
pop
push
insl
stos
testb
jmp
shll
push
add
popa
leavew
and
pop
sti
cmp
dec
popa
xor
in
jo
and
push
in
inc
out
cmp
jmp
in
cltd
cwtl
sbb
loope
insb
mov
decb
arpl
and
in
xchg
repnz
data16
mov
mov
popf
xor
in
sub
jbe
les
cmpsb
push
dec
pop
xchg
inc
jl
cmpsl
sahf
orl
data16
mov
std
ret
in
test
in
push
iret
pop
jnp
jmp
xchg
orb
int3
vshufpd
les
push
xor
stos
mov
and
iret
scas
scas
sbb
daa
or
adc
or
out
lahf
js
or
daa
test
out
aaa
mov
sar
scas
out
scas
cmpsl
lods
or
cltd
mov
pop
mov
nop
ret
pop
mov
pop
mov
test
insb
icebp
add
popa
pop
jns
dec
leave
push
jl
cmp
and
push
arpl
or
mov
paddusb
sbb
in
adc
sti
popa
dec
in
loop
xor
pop
mov
daa
sahf
jae
cwtl
or
or
xor
test
pop
faddp
cmc
scas
cmp
hlt
or
je
lret
xchg
push
fs
dec
pop
bswap
pop
inc
inc
test
cmc
std
testl
add
xor
divl
mov
cmpsb
xchg
rol
xchg
mov
test
and
xor
jg
nop
sub
imul
jmp
data16
enter
in
arpl
fdivp
sub
out
mov
mov
mov
imul
xor
orb
test
or
test
outsb
cmpsb
std
mov
jae
pop
xorl
push
pop
sbbl
lahf
pop
loope
jbe
repz
test
pop
lret
add
lret
arpl
test
and
iret
aaa
mov
pop
ljmp
aaa
jge
shll
enter
cmp
imul
in
pop
arpl
xor
in
jo
orb
test
and
sti
and
mov
push
in
mov
push
imul
scas
and
in
leave
jmp
pop
xorb
push
movsl
in
dec
cmpsb
push
in
outsl
xlat
lds
xor
mov
movsb
ret
enter
sarl
mov
or
sub
fdivl
ret
xchg
xchg
and
mov
mov
dec
pop
push
or
out
or
fs
jecxz
fisttpl
pop
call
pop
dec
mov
mov
or
shll
jbe
adc
fdivl
mov
or
mov
cmp
or
cmp
mov
mov
test
hlt
int3
call
outsl
pop
and
test
mov
cmpsl
dec
mov
pushf
push
out
in
cmp
mov
pop
xor
and
xchg
nop
scas
popf
xchg
or
sahf
jo
punpcklbw
sti
jno
mov
inc
shr
in
sub
or
idivl
lods
cltd
ja
jecxz
addb
into
and
xor
mov
lea
aas
jecxz
jne
addl
inc
adc
add
arpl
dec
les
sbbb
mov
or
add
mov
or
cli
out
push
or
jae
jg
sti
xchg
in
inc
lods
in
ffreep
js
cmp
lea
aam
jnp
daa
stc
or
sub
aam
pop
lea
add
mov
popa
push
dec
clc
inc
leave
inc
mov
fdivrs
jle
inc
dec
push
jle
jecxz
jnp
and
cmp
addr16
int3
fmul
rep
scas
mov
aam
int
in
xor
loopne
sbb
ret
pusha
jno
xor
dec
in
push
push
ret
in
push
xor
and
inc
inc
mov
into
inc
inc
jecxz
ss
or
out
insb
gs
sub
maskmovq
stc
test
add
adc
cmpb
hlt
in
popa
mov
sbb
aam
push
movsb
xor
add
je
and
int
xor
orl
shl
imul
aam
adc
negl
jl
inc
fcomp
andb
mov
loopne
aas
loop
inc
xor
addl
pop
jbe
pusha
jbe
cwtl
fists
sbb
scas
push
inc
jbe
pop
cmpl
aam
aad
outsl
dec
push
push
sbb
sti
les
shlb
into
or
pop
xchg
push
cmc
fidivrs
jecxz
dec
cmc
out
in
imul
mov
aam
pop
hlt
cld
mov
add
add
arpl
xchg
ficompl
gs
dec
adc
jp
sub
jl
aam
dec
ja
dec
xor
sub
aad
enter
int3
jns
cmp
mov
addr16
jo
sbbb
xorl
cmp
sub
and
mov
mov
arpl
lds
dec
mov
imul
dec
fcoms
mov
pop
in
inc
movsb
push
mov
mov
shld
sbb
cmp
mov
ss
cmpsl
aaa
ror
aaa
mov
ja
dec
repz
xchg
sarl
jbe
mov
arpl
jp
or
in
or
xchg
dec
mov
mov
add
mov
fiaddl
cmp
daa
inc
push
aad
daa
mov
mov
sbb
dec
adc
inc
or
insb
test
int3
jge
xor
dec
inc
push
push
out
xchg
xor
jp
scas
jle
jae
jg
inc
sbb
lahf
and
arpl
jecxz
cwtl
loope
enter
xchg
roll
nop
and
fistps
les
movsb
inc
sti
jmp
aaa
lahf
xor
rorl
cmp
lods
jns
aam
ja
mov
push
pop
enter
fsubr
shlb
pop
and
push
jmp
aam
inc
or
lret
pop
sti
subl
pop
pop
dec
xchg
loopne
movsl
jmp
punpckhbw
hlt
push
sbb
push
and
cmp
ret
mov
mov
jmp
dec
test
sub
fidivrl
outsl
cmpsb
pop
fisubrs
pop
sub
mov
cmpsb
shlb
loopne
fwait
mov
pop
push
scas
fisubl
test
cmp
in
cmp
dec
cmpsb
push
mov
mov
dec
pop
scas
xchg
pop
pusha
fcom
jno
popa
imul
arpl
and
popa
in
lods
mov
mov
push
jbe
les
out
cwtl
icebp
or
dec
jns
ror
jb
dec
out
jb
loop
scas
and
sbb
dec
cmpordps
or
scas
sub
insb
roll
inc
fdiv
add
andb
pop
stos
fisttps
stc
mov
sti
gs
ljmp
or
jne
in
mov
mov
int
mov
mov
arpl
loop
jmp
mov
arpl
popf
mov
push
adcb
in
mov
pop
pop
sbbb
push
sti
cld
int
outsl
cmp
pushf
jne
push
mov
subl
mov
lcall
xchg
aam
mov
xchg
leave
mov
out
dec
mov
mov
mov
pmulhw
rclb
fisubl
sbb
in
je
sbbb
stos
out
stos
ljmp
mov
fdivrl
nop
les
xchg
sarl
out
xor
push
dec
push
and
dec
ret
push
out
mov
xchg
mov
mov
stos
sub
nop
and
fstl
jp
xchg
dec
int3
sahf
movsl
nop
jmp
cmc
aas
dec
pop
mov
inc
cwtl
jecxz
jnp
sbbb
lahf
pop
xchg
inc
leave
mov
xor
hlt
popf
pop
mov
iret
es
and
out
pop
cmp
std
xchg
int
sbb
mov
sbb
jo
add
test
mov
mov
xchg
inc
in
sbbb
orb
subb
add
scas
adc
testb
adc
sub
push
sub
mov
jmp
dec
mov
xchg
dec
subl
cs
imul
dec
mov
dec
mov
push
ret
add
in
arpl
test
ret
mov
ret
adc
in
xchg
or
xor
jmp
pop
or
mov
xchg
nop
orb
sub
nop
dec
test
sbb
call
adc
xchg
stos
add
out
or
mov
xor
or
or
ret
rclb
dec
dec
loop
xchg
or
lret
repnz
dec
mov
stos
bound
lcall
inc
or
sub
mov
enter
xchg
arpl
dec
or
and
mov
or
push
pop
add
sub
and
outsl
stos
dec
in
dec
xchg
adc
dec
mov
outsl
xchg
add
add
loop
xor
add
in
loop
iret
adc
or
rcl
int
fiaddl
lods
in
ret
adc
or
repnz
mov
cli
xchg
dec
sti
stos
adc
or
dec
xchg
xchg
out
add
adc
xchg
and
mov
mov
or
push
or
inc
xchg
mov
dec
or
jae
or
in
and
loop
out
leave
mov
add
in
out
xchg
or
into
or
int
cmp
mov
shrl
add
in
lret
xchg
dec
and
adc
das
xor
cmp
xchg
adc
or
insl
or
jecxz
cmp
ret
mov
mov
dec
dec
add
outsb
out
ds
lods
sbb
das
xchg
lods
dec
dec
or
outsb
outsb
mov
lret
test
test
enter
iret
or
outsb
outsb
lea
jns
add
in
das
dec
in
in
jns
ret
sub
add
pushf
in
in
jmp
sub
push
jns,pt
add
cmc
das
sbb
test
add
pop
add
or
out
cli
call
mov
add
or
mov
inc
pop
shll
jmp
enter
dec
out
in
push
lcall
jnp
add
push
insb
ds
loop
pop
adc
in
adc
mov
pusha
dec
into
add
outsb
outsb
ds
sub
pop
outsb
das
xchg
in
das
das
xchg
sbb
outsb
sub
int3
push
das
das
xchg
sbb
jns
add
lods
test
scas
in
lods
jns
or
in
call
sub
outsl
add
scas
xchg
mov
scas
xchg
sbb
lods
mov
in
lods
jns
dec
int3
pop
push
push
xchg
popl
lret
in
dec
xchg
repz
sti
dec
mov
in
and
fwait
jmp
call
in
mov
or
push
lods
xchg
pop
add
dec
out
dec
fcoml
je
or
jl
test
adc
sub
adc
push
add
in
xchg
add
int3
or
adc
xchg
addb
or
aam
and
dec
adc
xor
stc
add
in
fcoml
in
int3
in
xchg
hlt
add
in
cld
xchg
ret
and
xchg
mov
out
or
scas
mov
dec
xchg
mov
add
insl
xchg
ret
or
and
pop
xchg
imul
outsl
xchg
jne
outsb
in
jge
sub
cltd
add
in
adc
and
cmp
add
or
xor
adc
and
or
xchg
fstl
insb
or
inc
int
loop
cmc
mov
or
in
scas
xchg
lods
add
adc
lods
xchg
lea
mov
adc
movsl
or
outsb
xchg
test
push
in
scas
xchg
pop
adc
dec
xchg
in
add
int3
xchg
jle
orl
cs
loop
push
or
add
push
xchg
enter
push
outsl
xchg
add
in
ds
or
out
mov
adc
and
into
xchg
scas
add
in
scas
xchg
adc
scas
xchg
insb
add
adc
or
leave
sub
mov
enter
in
mov
or
outsl
sub
in
pop
xchg
and
inc
or
dec
out
jmp
enter
scas
xchg
adc
outsb
pop
xchg
dec
add
in
dec
xchg
pop
adc
or
add
aaa
stos
or
add
in
daa
xchg
iret
adc
or
xlat
lea
xchg
adcl
or
imul
dec
jl
call
test
scas
adc
lahf
xchg
out
add
adc
xchg
add
cmpsl
in
add
adc
call
inc
add
adc
sub
pusha
add
adc
push
push
sbb
push
or
dec
cmp
int3
xchg
call
arpl
fsubrs
add
in
enter
lock
clc
mov
test
sub
cwtl
ret
xchg
cmp
adc
mov
mov
in
setbe
scas
or
dec
pop
xchg
dec
add
sub
dec
adc
or
loop
jns
leave
push
adc
mov
sub
dec
sbb
cs
add
sub
adc
or
cmp
ret
adc
insb
add
in
test
rcll
or
mov
rcll
xchg
icebp
data16
stc
xchg
inc
add
dec
adc
or
xchg
call
in
adcl
xchg
mov
xchg
and
push
add
jmp
enter
iret
xchg
dec
adc
jp
sub
push
jns
ret
test
loop
stos
add
outsl
xor
cs
cmp
int
loop
lods
adc
or
rcl
adcb
out
dec
dec
dec
add
mov
push
enter
stos
adc
or
mov
xchg
cmpb
in
stos
or
scas
mov
in
out
xchg
imul
or
int3
pop
xchg
ret
add
sbb
xchg
jae
mov
and
out
adc
in
xchg
sbb
mov
add
xchg
xor
xchg
adc
and
jmp
or
shr
setbe
adc
or
in
lret
xchg
lods
add
in
mov
push
lcall
xchg
push
in
adcl
mov
int3
xchg
mov
or
push
out
push
push
pop
xchg
sub
inc
in
call
or
mov
jl
add
xchg
sub
lods
or
insb
sbb
and
add
add
adc
test
scas
xchg
and
dec
in
in
xchg
push
adc
or
in
xchg
les
sub
xchg
inc
adc
adc
add
in
enter
iret
or
mov
pushf
xchg
outsb
add
int3
or
mov
add
sub
push
enter
scas
in
inc
xchg
scas
adc
lea
lods
xchg
jge
xchg
adc
xchg
sub
adc
adc
add
push
add
or
and
in
ret
mov
or
xchg
int
outsl
in
cmc
xchg
push
adc
or
popf
sub
test
add
lea
jmp
movsl
xchg
popl
outsb
in
setbe
into
or
dec
xchg
sub
xchg
jle
xorl
add
or
jecxz
push
xchg
imul
mov
ss
sub
es
add
out
dec
cmp
or
into
xchg
lsl
in
cs
adc
scas
xchg
ret
add
mov
or
mov
dec
xchg
mov
outsl
in
mov
or
outsl
mov
in
pop
out
sub
stos
inc
adc
dec
das
adc
add
jge
or
add
in
xchg
or
jecxz
xor
jmp
ljmp
xchg
ficoml
lea
mov
lret
add
sbb
loop
enter
loop
xchg
call
lcall
in
mov
mov
arpl
test
mov
pop
mov
inc
xchg
lea
dec
in
dec
xchg
jae
dec
or
inc
and
or
sbb
dec
in
add
int
mov
jecxz
and
jmp
ret
test
imul
lret
scas
repz
mov
sti
in
dec
xchg
mov
or
xchg
xchg
ret
add
mov
or
mov
xchg
mov
xchg
lea
push
or
pop
insb
xchg
inc
add
dec
push
jae
jl
enter
xchg
sub
dec
or
cs
sbb
sub
xchg
or
orl
cmp
mov
and
mov
in
xchg
adc
or
lods
outsb
xchg
xchg
add
pushf
xchg
dec
adc
xchg
mov
leave
inc
add
push
push
xchg
dec
add
or
or
mov
add
mov
sub
or
sbb
add
adc
inc
xchg
and
out
or
aad
or
out
add
in
in
xchg
cmc
adc
xchg
arpl
lods
or
imul
xchg
dec
adc
xchg
mov
outsl
in
mov
xor
cltd
add
xchg
adcb
and
push
xchg
scas
add
in
mov
ss
ds
insb
add
sbb
and
or
sub
test
stos
adc
or
scas
notb
or
or
dec
xchg
xchg
and
sahf
in
add
and
mov
dec
int3
mov
xchg
add
in
xchg
push
adc
xchg
addb
or
mov
ja
mov
jg
scas
addr16
mov
pop
xchg
insl
adc
or
pop
leave
in
pmaxsw
subb
or
daa
xchg
out
repz
adc
fists
adcl
sbb
decl
lcall
setb
xchg
dec
adc
inc
xchg
mov
stos
adc
cmpsl
or
push
in
mov
sbb
add
arpl
adc
or
and
or
rclb
rcl
xchg
enter
lock
arpl
clc
jle
push
loopne
imul
nop
adc
adcb
xchg
mov
loop
mov
xchg
imul
dec
adc
ret
inc
out
push
push
dec
xchg
imul
jns
das
or
dec
sub
or
sbb
ret
or
adc
stos
dec
lret
add
adc
or
jmp
add
xchg
jecxz
roll
adc
enter
out
or
mov
test
in
sub
or
and
mov
leave
ficoml
mov
iret
xchg
push
outsl
in
push
xchg
dec
adc
dec
inc
sub
dec
add
in
jb
loop
jp
leave
rorb
call
xchg
stos
sub
into
or
lods
dec
in
mov
or
xor
add
loop
push
rolb
cs
ficoml
int3
sub
jecxz
adc
sub
push
loop
pushf
xchg
call
xchg
mov
outsl
or
outsb
mov
in
dec
xchg
insl
adc
cmp
dec
xchg
inc
add
in
dec
xchg
out
adc
scas
jge
lea
adc
or
add
or
in
mov
and
xchg
adc
push
in
vmovaps
stos
int
call
std
xchg
out
add
in
or
int3
xchg
sub
xchg
push
adc
add
push
in
enter
out
or
out
ds
int
es
lods
xchg
out
adc
ficomps
xchg
dec
adc
or
not
dec
xchg
incb
outsb
or
add
dec
dec
outsl
sub
jne
outsl
adc
jmp
mov
or
or
das
cmp
or
or
jecxz
fidivrl
sub
adc
adcl
in
xchg
stos
add
in
xchg
xchg
jecxz
lcall
stos
mov
enter
mov
in
dec
xchg
imul
or
sub
sub
rclb
or
xchg
call
scas
or
mov
xor
stos
sub
xchg
ljmp
fimull
jp
ret
adc
or
repnz
lods
xchg
cli
add
arpl
add
adc
mov
mov
in
insl
xchg
adc
dec
xor
cwtl
add
in
add
adc
or
rcl
iret
xchg
fildl
out
in
repz
lods
adc
or
mov
add
in
xchg
xchg
add
fwait
and
inc
or
dec
mov
lea
mov
xchg
adc
orb
mov
scas
add
in
scas
xchg
or
int
xor
cmp
adc
leave
outsb
push
test
fiaddl
out
in
ret
and
adc
int3
cli
stos
inc
enter
loop
xchg
imul
outsb
mov
in
test
stos
xchg
adc
sbb
add
dec
mov
xchg
cmp
outsl
in
loop
lea
ljmp
fiaddl
add
ret
mov
repnz
out
add
in
push
dec
or
add
mov
mov
test
out
xchg
mov
lods
sub
sub
push
push
dec
adc
cmp
pop
ret
mov
and
jl
dec
test
ljmp
xchg
xchg
loop
in
in
dec
mov
cmc
lods
in
lea
xor
std
gs
xor
add
pop
repnz
cmp
dec
and
lods
dec
lods
or
xor
lds
sub
fs
xor
cld
xorb
dec
add
or
xchg
cld
add
push
pushl
jno
fiadds
pop
cmp
jbe
pop
cmpsl
cmp
inc
andl
add
add
dec
aad
pushf
xor
xor
mov
mov
ja
dec
jge
or
mov
lods
in
sbb
pop
hlt
ret
arpl
sub
int3
rolb
lock
fnstenv
cmp
xor
and
sub
test
inc
mov
xchg
cmpb
or
mov
sub
gs
mov
rcr
ret
cmpsl
bound
movsl
rcrl
jl
aad
xor
jns
or
fucomp
jle
dec
jae
ret
out
mov
test
cmp
lret
pop
lret
jo
fcomps
je
adc
pushf
popf
bound
fisubrl
pop
inc
insl
xchg
jne
xor
fs
inc
hlt
adc
push
xchg
test
sub
lods
xchg
scas
adc
loop
xchg
lods
in
or
sub
xor
out
mov
lods
ljmp
stos
or
jbe
sub
cs
add
in
ljmp
stos
dec
push
cmp
fwait
scas
xchg
push
xorb
arpl
ljmp
dec
inc
inc
arpl
ficoms
lods
in
jg
or
scas
mov
call
lods
int
aam
mov
add
adc
fwait
das
sbb
adc
jmp
cmp
cmp
aam
dec
pop
xlat
mov
repz
imul
push
js
push
and
or
test
lods
popf
cld
push
filds
std
clc
int
in
cmp
popf
xchg
int
popf
or
shlb
int3
fsubrs
std
aaa
pop
test
sbb
gs
icebp
in
jae
scas
and
push
mov
mov
cld
out
push
adcl
arpl
hlt
mov
jmp
inc
in
adc
aam
or
push
lods
aas
adc
test
dec
and
scas
into
js
scas
xlat
pand
pop
dec
add
xchg
and
int3
cld
insb
dec
or
int3
push
mov
or
lds
aas
xor
popf
inc
int
dec
ret
xchg
insl
nopl
xchg
adc
pop
in
jmp
lcall
nop
push
lods
mov
adc
add
repnz
dec
cmpsb
lds
sti
leave
into
pusha
xchg
inc
in
iret
gs
dec
rcl
pop
lods
jb
int3
fcomps
sahf
aad
out
in
sbb
ret
mov
bound
mov
test
push
add
jg
imul
mov
std
xorb
xchg
jmp
sbb
xor
pop
shr
loopne
mov
mov
inc
push
lds
dec
lahf
mov
fwait
pop
xor
mov
or
insb
cld
data16
mov
adc
dec
test
out
jns
mov
in
stos
ss
call
inc
pusha
and
imul
imul
sbb
pcmpgtb
jae
out
add
cld
mov
lods
lret
orb
cmpl
jmp
mov
cmc
test
or
or
iret
je
cmpsl
xlat
push
mov
cld
shl
pop
or
lods
orb
testl
je
lret
xchg
fimull
in
popa
mov
mov
lock
movl
repnz
ret
rorb
or
lods
cmp
aam
adc
xor
cwtl
jnp
pop
sub
mov
or
in
pop
enter
or
movsb
mov
sbb
pop
icebp
mov
xchg
cld
inc
inc
pop
dec
popf
mov
push
dec
es
rorl
inc
fsubr
repz
sbb
xadd
cwtl
inc
fsubrl
out
lahf
mov
or
mov
dec
xchg
pop
mov
push
fnstsw
ja
test
imulb
pop
fldenv
adc
pmullw
leave
and
push
js
xchg
add
or
shl
scas
int
pop
shll
or
movsl
pop
orl
jo
sub
xchg
cmp
and
mov
gs
pop
lods
mov
dec
ja
or
lods
repz
xor
or
cmp
test
jo
xlat
mov
mov
xchg
shlb
iret
daa
cmpsl
sub
test
adc
icebp
push
inc
mov
outsb
dec
mov
sub
aaa
sub
notb
jecxz
movl
mov
sub
cwtl
ret
sarl
pop
scas
sar
pop
or
mov
aas
push
jnp
ss
jle
add
shl
das
not
xchg
sub
pop
cmp
test
pusha
xchg
or
pop
mov
aaa
cwtl
mov
dec
ja
dec
mov
mov
sub
sub
pop
aaa
cld
xchg
imulb
stos
sub
add
push
sub
fwait
sub
or
or
or
scas
ljmp
in
cs
stos
mov
sub
push
stos
ljmp
add
test
shrb
lock
stos
xchg
sub
ljmp
arpl
xchg
and
das
jecxz
ret
adc
push
sub
scas
faddl
xchg
mov
sub
or
sub
adc
pop
insb
ljmp
adc
arpl
add
adc
fcoml
sub
or
jecxz
push
in
in
outsb
cld
movlhps
xchg
sub
xorb
mov
dec
data16
and
add
push
xor
xchg
loope
sub
int
int
cld
stc
stos
lahf
xor
mov
mov
jae
insb
mov
or
lea
daa
test
jae
mov
addr16
setne
sbb
fdivrl
hlt
mov
push
mov
insb
and
in
pop
mov
into
mov
rorb
xchg
jae
shlb
mov
xor
or
fwait
movsb
cs
xor
sub
cmp
adc
mov
aad
pop
xor
push
lods
pushf
mov
cmovae
jge
mov
lock
popa
jae
imul
add
iret
arpl
aaa
ds
pop
sbb
fimuls
pushf
popf
jae
andl
sbb
fs
das
add
add
ret
pop
inc
xchg
test
mov
call
in
movsl
adcl
lret
xor
add
jbe
pushf
adc
dec
or
aad
mov
adc
ja,pt
sbb
and
sub
ljmp
xor
add
aaa
lods
iret
push
xor
mov
mov
inc
mov
addr16
cs
mov
adc
adc
sbb
or
lret
mov
cmp
xor
das
sub
mov
aad
loope
cmp
daa
jecxz
cmp
test
call
in
xchg
add
mov
call
mov
sbb
and
lods
jecxz
int3
shlb
jl
push
push
test
mov
jecxz
outsl
scas
sbbb
xchg
mov
aaa
cmp
aad
mov
in
xchg
sub
pushf
xor
out
bswap
dec
setp
adc
fst
mov
xchg
sub
dec
in
cmp
add
lods
add
add
rcrb
mov
lea
inc
in
out
sbb
cmpsb
jecxz
and
inc
mov
cmc
mulb
push
pop
adc
outsl
test
sbb
mov
sbb
and
movsl
scas
pushf
outsl
test
adc
adc
mov
and
dec
repz
fstl
xlat
jge
stos
in
sbb
push
out
dec
xchg
sbb
ljmp
push
sub
aaa
jae
jbe
int3
sbb
mov
outsl
scas
cld
in
mov
test
mov
push
ret
pslld
test
aaa
lods
add
or
jp
lds
mov
add
mov
mov
sbb
mov
out
dec
push
or
cmp
arpl
mov
outsb
int3
mov
sahf
adc
adc
ret
sub
sub
adcl
sub
arpl
fdivl
scas
inc
sbb
lret
mov
mov
push
sahf
pop
test
into
jg
xchg
scas
les
add
mov
adc
addps
cmpsl
repnz
fldl2t
ss
movsb
sub
int3
addr16
adc
ss
cmp
in
jge
and
outsb
inc
inc
mov
sub
mov
mov
fbstp
mov
push
pop
lret
mov
xorb
or
iret
sub
jns
icebp
mov
arpl
fcoml
fdivrl
push
int
push
or
mov
enter
mov
xchg
dec
cwtl
xchg
or
in
and
xchg
ret
push
addl
in
and
sbb
sarl
jle
aas
inc
add
cmp
sub
std
lods
cmp
cmc
lret
add
dec
lds
bound
sub
xor
jmp
add
mov
scas
imul
repnz
lcall
scas
and
imulb
mov
add
mov
xchg
stos
ljmp
sub
cli
push
push
push
lods
pop
xchg
jnp
and
or
das
rol
xchg
cs
in
ljmp
ljmp
xchg
test
sub
xor
nop
mov
sub
js,pn
mov
push
ljmp
lods
push
scas
imul
inc
ljmp
jmp
lods
lds
out
scas
ret
mov
push
jecxz
xchg
ljmp
or
pop
aas
xchg
cwtl
add
ret
xlat
loop
xchg
int
testb
out
or
push
and
lods
xchg
scas
adc
jp
pop
adc
in
push
xchg
out
adc
iret
sub
inc
xchg
movsb
add
adc
jmp
mov
in
ljmp
push
adc
das
or
stc
out
lret
adcl
xchg
cwtl
adc
xchg
out
ljmp
fiadds
fucomip
fcoms
lea
and
filds
fiaddl
ret
lods
repnz
cli
das
cmp
adc
and
cmp
lcall
inc
lods
in
jae
lods
ja
stc
adc
or
xor
cmp
dec
in
fildl
or
repz
fwait
test
lods
mov
mov
lods
lods
insb
lods
push
push
pop
dec
insb
dec
insb
je
jl
fs
or
sbb
push
jp
pop
in
cmp
wrmsr
pandn
ss
repnz
enter
mov
orb
es
cmp
imul
fmull
sbb
adc
jnp
or
push
ret
movsl
mov
add
adc
lret
xchg
pop
icebp
push
jnp
push
dec
negb
mov
inc
jl
adc
lret
xchg
pop
xor
cltd
sub
jmp
inc
in
xlat
mov
insb
sbb
xchg
in
in
mov
imul
adc
and
movsb
or
test
leave
cld
xchg
rorb
jbe
dec
cmp
jecxz
scas
clc
lret
int
divl
aad
xchg
cmp
popf
ss
aam
cmp
cs
adc
fsubl
add
xor
test
aam
aam
push
xchg
lret
mov
push
shrb
fimull
cmp
mov
outsb
adc
test
adc
cwtl
orl
inc
out
xor
cltd
jmp
arpl
xchg
or
hlt
xlat
enter
jg
jmp
stos
dec
cmp
aaa
cltd
inc
add
xlat
repnz
call
sub
pop
push
pop
jo
cmp
pop
std
xchg
jg
cmp
sahf
lds
cmp
sahf
pop
cmp
sahf
mov
and
maskmovq
idivl
xchg
push
shlb
sbb
pop
mov
jno
mov
mov
and
out
movsb
mov
daa
mov
mov
in
pop
mov
pop
scas
mov
cmpsb
loop
aad
ss
xchg
cwtl
dec
adc
pusha
cwtl
mov
insl
lock
xchg
gs
ds
cmp
inc
int
icebp
in
ds
mov
or
in
mov
je
test
lds
dec
les
popa
mov
mov
popf
push
jnp
xor
mov
xor
fwait
sub
rcrb
pcmpgtb
fs
jno
cmpsl
mov
shll
dec
or
pusha
sbb
xchg
pop
add
scas
push
jbe
push
jnp
xchg
sub
sub
pop
out
jbe
lods
pusha
or
ret
sahf
pop
sub
sub
dec
add
jge
jae
hlt
test
andb
sbb
cmp
xchg
cmp
xor
mov
inc
jge
cmp
cmp
jb
cmpsb
mov
jno
out
add
in
mov
std
roll
or
cmp
cmp
mov
mov
adc
bound
jo
mov
arpl
repnz
inc
les
pop
mov
sub
out
push
hlt
cmp
jne
in
xor
mov
cmc
je
mov
push
ret
lret
repnz
rcl
sbb
add
or
fcomps
sbb
cmp
loop
dec
mov
jo
ja
sub
sarb
sub
movl
or
inc
inc
roll
and
ret
xor
push
xor
rclb
loope
repnz
mov
mov
mov
imul
mov
scas
xor
and
xor
aaa
push
adc
int3
sub
cltd
enter
xchg
aaa
sbb
add
pop
sub
std
sub
stc
xchg
aaa
and
jg
test
int3
cmp
sub
scas
jecxz
inc
sub
pop
ret
jnp
test
movsl
dec
or
loopne
lods
add
ret
sbb
inc
loop
rcr
rcl
stos
shlb
dec
xchg
mov
stos
push
dec
sahf
jb
add
cwtl
adc
adc
cmp
pushf
cwtl
insl
jmp
adc
jle
bound
push
adc
mov
sbb
in
out
sbb
add
or
mov
jnp
add
popa
sub
cmp
fnstsw
clc
ljmp
sub
fidivrl
xor
or
xor
mov
mov
ljmp
xorl
push
dec
dec
sub
jecxz
pop
ljmp
push
mov
or
lret
lret
jl
push
mov
out
and
test
repz
add
or
sub
imul
add
jl
aad
shl
and
sub
in
and
push
lods
lods
xor
int3
sub
sub
adcb
sub
cmp
or
and
add
pop
pop
mov
jnp
mov
and
xchg
add
fimull
movsb
dec
mov
xchg
inc
imul
sub
xchg
adc
xor
repz
inc
or
add
dec
iret
outsl
xor
aad
mov
cmpsl
out
in
xor
jecxz
sbb
and
add
dec
adc
fucomi
stos
shll
inc
cmp
cmp
mov
sub
add
xchg
jb
sub
sbb
and
or
sbb
mov
add
js
shll
xchg
in
push
xchg
pop
add
in
and
lret
jae
sti
or
int
scas
xchg
mov
push
or
cmp
jecxz
adc
pushf
or
out
daa
xchg
call
jecxz
pop
xchg
ficoms
xchg
icebp
out
mov
movsb
add
aaa
xchg
or
shll
rorl
add
add
in
sub
adc
or
adc
repz
cwtl
jb
pop
and
xchg
ja
mov
mov
mov
mov
imul
sub
sub
testb
mov
lea
std
imul
popa
out
loop
dec
jb
test
jns
imul
aad
xor
push
mov
add
cmp
or
push
add
sub
xchg
dec
ret
add
pop
mov
mov
arpl
or
dec
add
shr
mov
aam
or
xor
cmp
xorb
inc
sub
arpl
mov
and
int3
imul
arpl
jnp
iret
xchg
push
leave
xchg
pop
add
arpl
add
pop
pop
sub
or
mov
aad
das
add
cmp
leave
xor
pop
jmp
test
jae
or
outsb
ss
shrb
jno
imul
mov
inc
add
mulb
gs
mov
cmp
mov
mov
mov
popa
orb
test
call
je
lcall
jge
je
dec
negb
mov
gs
jmp
adc
lea
insl
shll
imul
cmp
orl
add
imul
dec
inc
insl
ss
cmp
sarl
and
call
out
pop
rcl
movsb
int3
sbb
test
fwait
icebp
sub
and
test
cli
mov
or
test
add
js
loopne
lods
dec
ljmp
pop
ret
pop
push
dec
movsb
adc
adc
rcrb
mov
dec
inc
mov
sub
mov
out
fs
arpl
dec
cmp
shrl
xchg
push
and
stc
or
out
cmp
ret
pop
xchg
mov
cli
out
gs
and
shll
iret
int
jno
and
je
adc
jmp
sbb
in
scas
xor
dec
mov
in
bound
in
dec
dec
push
ret
sbb
or
les
mov
jb
arpl
sbbl
js
jmp
or
ret
stos
jmp
jbe
das
xchg
ljmp
fwait
leave
in
and
adcb
xor
ret
xchg
adc
js
out
pop
mov
sub
ja
rorl
inc
or
stos
int3
mov
cmc
cmpsb
jb
aam
jb
mov
inc
xor
fld
shufps
fwait
cmp
ja
adc
testl
push
cmpl
xchg
roll
mov
push
arpl
mov
sbb
add
sub
stc
cs
fwait
sub
inc
scas
inc
mov
ficoms
mov
movsb
push
mov
aam
adc
pop
sar
scas
jge
push
daa
sub
test
outsl
xchg
mov
xchg
xchg
jecxz
and
jbe
mov
pop
jp
arpl
xor
xor
jbe
pop
jp
mov
xchg
cli
jmp
cmp
int3
out
or
add
add
push
adc
pop
cmp
sbb
ficoms
and
dec
xchg
movsb
and
mov
jg
pop
sbb
movsl
mov
scas
mov
loop
les
push
pop
inc
pop
adc
sahf
cld
cmp
and
or
aas
mov
in
sub
shrl
out
and
push
ds
rcl
dec
add
inc
jmp
jnp
mov
lcall
imul
pop
aas
scas
lods
mull
cld
fwait
call
sti
loope
subl
push
or
in
cmp
jle
sarl
xor
mov
xchg
imul
jle
sub
mov
jb
aaa
xchg
ret
cmpsl
add
cmpps
js
add
dec
inc
loop
andb
gs
inc
and
test
rclb
in
xor
test
mov
aam
je
adc
in
push
out
ds
pop
mov
xchg
jmp
mov
inc
dec
mov
ret
ds
cwtl
jp
push
fld
popf
mov
jmp
stos
ss
out
enter
into
add
sub
out
add
mov
add
lcall
pop
mov
xor
and
lock
sbb
cld
sub
mov
inc
adc
ret
sub
mov
push
rcll
aam
loop
into
push
add
in
xchg
fwait
icebp
bound
sbb
aam
fstl
xor
adc
jno
jecxz
insb
mov
inc
mov
orb
les
ret
add
inc
jno
xor
daa
test
cs
pop
mov
les
shr
imul
lock
outsl
out
aam
adc
jge
mov
add
or
stos
push
sbb
mov
fdivrl
jp
cmp
orb
leave
xchg
cmp
insb
jno
out
test
pusha
sbb
ds
push
imul
xchg
scas
test
xchg
test
call
sub
xchg
jecxz
lds
sbb
or
xchg
call
jmp
in
in
mov
call
movb
addb
pusha
cmp
xchg
jecxz
sub
dec
ret
outsl
push
into
adc
ljmp
loopne
pop
rclb
and
aad
xor
ret
into
cwtl
xchg
sbb
mov
loop
out
push
mov
insb
xor
push
mov
xor
fucomip
pop
popf
dec
jae
xor
or
add
jecxz
add
test
and
fcompl
or
call
push
inc
adc
sub
lret
add
test
pmaxsw
mov
push
xchg
pop
and
jg
insl
sbb
in
fisubl
test
addr16
jmp
or
jle
dec
sar
push
imul
rolb
fldcw
xchg
test
xchg
je
cld
inc
enter
lea
movsb
mov
mov
jge
xor
cmp
mov
pop
adc
sbb
jbe
popa
movsl
jns
xor
stos
dec
ret
jne
jmp
inc
add
mov
orb
sub
scas
and
loope
jg
orb
mov
pop
out
or
test
movsb
add
jbe
fcoml
ss
sbb
sbb
and
push
or
dec
andl
sub
fwait
push
xchg
inc
mov
sbb
jnp
dec
sub
daa
adc
scas
xchg
cmpb
jbe
test
dec
sbb
sti
mov
bound
inc
add
outsl
imul
or
fadds
xor
xchg
lods
mov
mov
jno
out
ljmp
cmpb
movsl
shll
int3
iret
mov
pop
pop
outsb
push
sub
lea
jmp
fwait
loop
fsubrl
stc
xchg
enter
hlt
cwtl
or
mov
push
or
fnstsw
jmp
xchg
add
or
dec
loop
pushf
mov
test
shlb
cwtl
cmpsl
stos
mov
xor
bound
jb
arpl
add
das
lcall
push
imulb
pop
stos
push
cmp
mov
cli
call
int3
push
test
jecxz
cmp
add
inc
mov
or
cmpsl
sub
imul
sub
or
mov
ds
loopne
mov
scas
xor
cmp
stos
inc
inc
lock
loop
jne
jmp
adc
aas
xor
adc
adc
xor
sahf
faddp
andl
fld
lret
cld
mov
out
and
iret
out
pop
rcl
jecxz
mov
icebp
lock
movsb
int
xor
cmp
xchg
in
cld
ret
stc
addr16
sbb
stos
mov
add
sbb
imul
pop
dec
lock
inc
push
jnp
or
jno
das
mov
les
movsb
loopne
mov
mov
pushf
jle
xor
xor
lcall
add
xchg
shl
mov
imul
outsl
cmp
adc
and
addb
daa
sub
orb
lcall
fsubr
lock
cs
and
repnz
dec
das
mov
mov
mov
popf
jl
jle
push
jecxz,pt
sub
ja
jmp
sbb
adc
test
inc
and
adc
std
popf
mov
icebp
adc
xchg
mov
push
pop
and
fisubl
ret
mov
arpl
cmpsb
mov
inc
insl
mov
push
jmp
dec
inc
addr16
dec
stc
pop
ja
hlt
loope
jle
pop
clc
or
jne
and
sbbb
dec
lods
aaa
sbb
insl
fbstp
shl
ret
add
loopne
rorl
add
sub
repnz
jns
dec
dec
repz
ljmp
frstor
mov
shr
mov
mov
cmp
lret
je
inc
mov
add
inc
fiaddl
jnp,pt
cmp
jmp
inc
test
lcall
rcll
movlps
fiadds
rolb
pop
arpl
outsl
jmp
inc
dec
mov
les
and
xchg
and
xor
push
xchg
cmp
sbb
out
or
ljmp
sbb
in
imul
gs
push
cltd
jecxz
call
mov
lret
lret
pop
cmp
lods
aas
cs
mov
pop
subb
lret
cli
icebp
or
pop
pop
mov
sub
dec
add
aas
lcall
jne
pmaxsw
or
divl
mov
fcmovnb
or
insb
pop
and
sub
lret
or
sub
push
jmp
call
inc
inc
xchg
inc
ljmp
shl
pop
mov
xor
inc
xor
fdivl
into
add
pop
movsb
add
loopne
aam
sub
cli
sub
cmp
loop
hlt
subb
orl
adc
or
inc
ljmp
mov
das
cli
call
jp
mov
pop
inc
push
jne
scas
xor
mov
arpl
jp
enter
insb
xlat
lds
cwtl
pushf
std
int3
cmp
das
in
cmp
movsb
int3
std
adc
push
aad
loop
push
nop
sbb
rorl
or
mov
in
and
mov
jne
sbb
jo
xchg
popf
mov
pushf
xor
imul
xorb
dec
xchg
sub
mov
mov
sbbb
fcoms
out
mov
scas
mov
dec
repz
ds
sub
in
test
mov
divb
xlat
xchg
sub
pop
and
push
pop
test
fiaddl
ss
xor
popa
leave
push
mov
jo
sbb
dec
mov
sub
jg
fistpll
and
mov
mov
imul
push
inc
pop
test
xchg
lods
mov
sbb
add
mov
test
adc
mov
sub
or
mov
adc
inc
ljmp
sbb
sbb
subb
sbb
shrb
mov
shrb
iret
scas
out
out
push
push
scas
cltd
addb
scas
mov
shrb
std
scas
imul
mov
sub
or
sbb
sub
add
sub
shlb
in
xor
sub
mov
add
sub
mov
shrb
mov
test
fisubrl
mov
insl
dec
adc
mov
sub
sbb
popa
test
pop
insb
imul
lods
ss
and
push
sbb
or
shrl
push
outsb
jecxz
ds
sub
or
dec
ds
or
call
mov
lods
inc
jecxz
ds
sub
std
loop
xchg
gs
sbb
or
sbb
sub
or
mov
pop
push
in
call
push
dec
push
rorb
xor
jnp
sub
or
sub
lods
stos
dec
fisubl
or
sub
es
xchg
sub
out
pop
in
pop
dec
adc
mov
das
or
mov
insl
mov
call
or
mov
and
mov
sub
mov
test
jno
fistps
or
jmp
in
jecxz
out
ja
inc
xor
jg
inc
call
push
ds
sbb
loop
pop
xchg
cmp
test
sub
or
stos
mov
ss
repz
push
xchg
in
inc
scas
or
adc
mov
add
sub
stos
sub
test
or
insl
into
adc
loope
lods
pop
ret
cmp
mov
imul
into
sub
cs
adc
cld
scas
out
out
push
or
mov
mov
mov
push
push
ss
lods
push
fldl
add
lcall
mov
cli
xchg
pop
hlt
sbb
je
xacquire
out
sbb
and
fucompp
dec
dec
xor
jo
pushf
jl
xor
test
or
jl
cmp
sub
gs
mov
sub
push
pop
fisttpll
adc
fdivrl
or
jmp
loopne
iret
jne
jns
lret
or
scas
scas
aad
shrb
push
mov
rcrb
jl
adc
xor
enter
pop
arpl
adc
ss
icebp
xchg
push
add
les
rorl
xchg
loop
push
ss
jmp
push
aaa
ret
out
cwtl
shlb
arpl
sbb
cmp
ret
xor
pusha
lcall
rorb
fstp
lods
sub
push
add
sub
pop
inc
jnp
fs
outsl
les
pushf
cld
sub
cmp
mov
or
dec
ret
adc
das
or
stos
insb
adc
bswap
loope
repnz
add
mov
mov
sub
or
loop
into
cmp
movsl
sub
scas
or
or
mov
ss
sub
stos
ret
popa
dec
sbb
lods
sbb
out
jmp
outsl
lods
loop
sbb
das
into
cmp
movsl
sbb
lods
sub
call
jmp
aaa
or
push
or
arpl
test
cs
mov
mov
loop
sbb
push
arpl
xor
mov
in
add
xchg
scas
out
mov
xchg
call
insb
push
insb
pop
or
mov
inc
loop
ds
outsl
mov
test
mov
xor
out
add
mov
mov
mov
imul
std
test
iret
mov
sub
test
or
mov
into
loope
pop
into
xchg
ret
xor
leave
or
sbb
mov
lods
xor
imul
arpl
ds
call
push
sub
adc
xor
mov
jmp
cld
outsb
stc
in
mov
loop
sbb
cmp
dec
mov
mov
inc
adc
mov
push
cs
push
xchg
jns
inc
dec
sub
sub
test
adc
stos
dec
pushf
inc
outsb
xchg
in
sub
and
into
push
stc
sbb
ds
cmp
adc
jmp
enter
jecxz
mov
arpl
enter
mov
sub
lahf
cs
movsl
loopne
pushl
mov
jmp
popf
adc
fwait
mov
loop
jecxz
lods
jle
out
ret
mov
push
outsl
imul
movsl
xlat
mov
arpl
jno
sub
cs
sub
and
sub
mov
inc
insl
jae
loop
lods
add
xor
add
jge
sahf
aaa
sub
ret
movsb
sarl
cmp
lahf
push
scas
xchg
and
test
out
movb
cmp
adc
push
add
sub
mov
inc
cwtl
xchg
inc
and
in
sbb
or
sbb
insb
mov
aam
ret
lret
cmpsb
outsl
jne
and
or
pushf
mov
out
mov
lret
aad
cmp
jg
ret
push
and
lods
mov
cmp
dec
stos
sub
mov
dec
nop
aam
dec
pushf
adc
nop
cmp
loop
call
gs
push
cs
or
ret
xchg
jmp
fwait
in
adc
test
sub
cli
mov
stos
sub
add
cli
lods
orb
arpl
adc
and
xor
sbb
mov
or
insl
dec
out
lea
lods
or
jnp
fwait
cwtl
push
mov
les
or
shl
sub
out
or
and
movsl
dec
cmpsb
mov
jne
cmpsl
int3
push
repz
dec
mov
dec
jge
mov
push
ljmp
sub
cli
cmpsl
cmp
cmp
mov
je
inc
inc
sbb
pop
sarl
push
imul
pop
xchg
int3
das
xor
daa
jbe
push
lods
mov
pushf
xlat
jb
mov
xorb
or
sub
in
enter
push
inc
test
lods
hlt
mov
or
xchg
push
sar
ljmp
rolb
push
outsb
dec
outsb
addb
mov
inc
cmpsb
sbb
xor
push
pusha
cld
and
and
cmp
lahf
lret
cld
xor
sbb
fildl
loopne
icebp
cmp
or
je
xor
in
imul
sbb
les
mov
sub
fsubr
mov
test
xchg
mov
xor
insl
in
test
in
cmp
jmp
mov
or
call
sti
inc
orl
sbb
xchg
sarb
or
add
sbb
pop
pop
xchg
das
add
nop
out
push
add
data16
into
stos
fnsave
push
ficoml
and
fucomip
mov
sbb
jecxz
xchg
shlb
aad
cmp
adc
lods
lcall
jnp
push
mov
mov
scas
mov
sub
push
push
cmc
aam
in
lea
push
scas
outsb
cmpsb
cltd
stos
faddp
outsl
leave
fwait
lea
pop
outsl
xor
and
cs
xor
popa
jle
sbb
bound
mov
xor
pusha
test
mov
mov
dec
ficoml
sub
ja
dec
pusha
jecxz
andb
push
ljmp
shll
sarl
jno
mov
xor
sbb
mov
mov
das
lahf
mov
dec
out
xor
xorb
jmp
ret
dec
jae
sbbl
mov
repnz
shrb
popa
cmp
cmpsl
jnp
inc
shlb
or
push
push
loop
mov
sti
std
xchg
jbe
push
pop
xor
jmp
sub
mov
and
add
pop
mov
loope
ret
mov
pushf
mov
stos
in
data16
mov
and
sbb
jno
shrb
test
or
cmpsl
lcall
add
and
push
mov
shl
ljmp
mov
mov
or
test
pushf
cmp
adc
inc
add
xor
cmpb
scas
and
jnp
xchg
pop
mov
push
mov
sahf
roll
rcr
inc
push
fadds
mov
dec
pop
cli
mov
jle
in
scas
std
pop
loop
repnz
pushf
cmp
sti
ja
mov
scas
scas
or
bound
addb
movsl
pushf
sub
je,pn
add
jp
push
lret
rorb
arpl
jns
pop
mov
jmp
adc
jecxz
aam
sub
jecxz
and
and
inc
inc
popa
movb
shll
lcall
stos
cmp
mov
test
xchg
aaa
mov
lcall
xchg
lods
dec
ret
repnz
or
and
add
call
outsl
aam
orb
les
pop
cmp
negl
mov
mov
sub
push
dec
movsl
arpl
repz
dec
sbb
int
call
xchg
pusha
les
cli
imul
lcall
dec
sbb
outsl
jl
push
inc
loop
xor
adc
jae
jo
cmpb
cmc
add
xchg
sub
out
ficoms
jbe
enter
rcrb
das
push
push
sbb
loop
push
push
test
cs
rcl
std
xlat
add
fistps
xor
or
adc
andb
mov
jge
and
or
leave
loop
lock
scas
enter
lock
test
cld
jecxz
cmp
andl
scas
icebp
or
sbb
jge
mov
xor
cltd
cli
jmp
in
jnp
int3
xchg
into
mov
cs
es
stos
mulb
dec
mov
sbb
cs
pop
xchg
pminub
cmp
loop
ds
sub
xor
push
or
xchg
in
stos
cmpneqps
push
sub
decb
test
call
loop
ds
sub
cmpb
xor
sub
xchg
ljmp
ret
xor
icebp
cmp
fiaddl
xor
sub
add
outsl
loop
mov
loop
ds
sub
push
scas
loopne
test
or
cs
add
sub
pop
call
loop
dec
stos
sub
xchg
push
imul
ds
sub
scas
in
out
adc
imul
adc
call
or
xchg
outsb
stos
jnp
lods
push
add
sub
mov
jp
sbb
adc
adcl
sub
insb
mov
dec
mov
or
outsl
loop
ds
sub
or
push
add
xchg
test
or
pop
call
add
addr16
push
add
mov
cmpsl
stos
or
ret
cmp
ficoms
sub
dec
lcall
outsl
mov
dec
shrb
sub
cs
jmp
dec
xchg
out
subb
call
gs
ret
jle
int
ss
lret
jle
lea
shll
adc
imul
and
int3
outsl
and
imul
cwtl
ja
and
lods
mov
jmp
and
jno
mov
aas
les
add
fstpl
dec
sub
adc
out
in
in
imul
dec
in
add
or
shrl
rolb
jge
ret
popf
scas
das
cmp
call
imul
ret
jmp
test
aas
fwait
mov
xchg
jge
int
repz
or
aam
xor
sub
lods
jmp
mov
arpl
xor
push
and
inc
clc
pop
cwtl
mov
or
xchg
sbb
in
outsb
or
fidivs
sbb
adc
fsubrl
movsl
push
adc
ss
mov
adc
insb
test
sub
dec
loop
xlat
mov
roll
in
jle
ds
insb
loop
lods
and
dec
in
into
xchg
sub
cs
in
scas
adc
sub
outsb
test
dec
imul
xchg
xchg
sub
mov
out
repz
or
xchg
scas
adc
mov
fimull
outsl
fsubrl
int
das
jne
mov
pcmpgtd
or
sub
or
dec
into
or
sub
or
imul
adcb
cmp
adc
cmp
adc
sub
rcll
sbb
stos
test
lods
stos
mov
subl
sbb
stos
or
mov
call
test
mov
test
or
sub
mov
fcoml
or
or
in
lods
or
jge
or
into
xor
adc
ret
arpl
out
sub
ds
xchg
test
jecxz
test
dec
sbb
or
xchg
insb
adc
repnz
sub
lods
pop
ret
sub
or
adc
cmp
adc
mov
out
in
mov
out
sub
test
or
test
stos
in
stos
and
std
int
ret
lods
xchg
test
ret
sub
les
imul
sbb
fwait
sub
push
es
inc
mov
cs
sub
or
lods
orl
scas
sti
stos
out
mov
dec
xchg
dec
add
das
add
sbb
imul
mov
stos
scas
xchg
sub
xchg
lods
stos
push
xchg
lea
or
add
enter
test
and
imul
ret
sub
ret
stos
jmp
xchg
mov
xchg
mov
dec
sbb
or
popa
sahf
adc
enter
xchg
sub
ret
sbb
adc
arpl
lods
adc
inc
mov
and
arpl
test
mov
into
arpl
or
iret
into
or
sub
ret
or
enter
adc
ret
leave
arpl
push
adc
pop
sbb
push
jbe
mov
cli
add
andb
cli
ds
dec
xor
and
ret
subl
cmpl
ret
and
in
mov
mov
mov
cmp
sbb
arpl
pop
loop
fistpl
dec
ret
mov
fbstp
arpl
sbb
mov
xor
fisttpll
subl
fistpl
subl
jecxz
xchg
lret
pop
dec
sbb
inc
xor
mov
testl
jl
loop
and
pop
push
mov
push
xor
mov
pusha
xor
lods
mov
cltd
cld
aad
sarb
out
inc
jns
les
ja
in
mov
and
push
jmp
xchg
test
das
and
xchg
mov
inc
les
int
es
pop
mov
ja
push
jo,pn
je
cld
movsl
das
cmp
mov
lea
rclb
jbe
lods
dec
outsb
int3
int
cld
sub
xchg
shrl
imul
into
adc
xchg
test
jmp
mov
pushf
push
add
fistl
stc
xchg
jmp
dec
das
xchg
add
adc
sub
les
ljmp
jp
int3
pop
mov
jp
cltd
or
mov
sarb
arpl
hlt
loop
sbb
adc
jmp
pushf
mov
and
sbb
push
jmp
in
call
cli
cld
push
lcall
pop
rorb
lret
in
ret
cwtl
fnsave
popa
pushf
mov
std
inc
arpl
cmp
cmp
ret
or
mov
mov
stos
mov
stos
push
mov
inc
scas
insb
mov
mov
mov
lret
inc
jl
fsub
mov
inc
cmp
push
pop
aam
xchg
add
andb
jb
push
arpl
ret
sub
pushf
std
mov
pushw
add
adc
dec
test
fistpll
adcb
jmp
dec
dec
cmp
mov
adc
shl
loop
xchg
cmp
movsb
cbtw
add
mov
in
dec
inc
or
cmp
push
cltd
jmp
and
cmpsb
xchg
movb
inc
sbb
loop
push
in
shlb
clc
inc
pop
or
in
subb
cmp
in
out
and
mov
cld
jmp
adc
data16
xchg
inc
in
pushf
or
fisttps
loop
cmp
xor
mov
dec
call
out
mov
sub
out
jmp
lret
or
adc
pushf
ss
add
fdivl
xchg
lods
xchg
icebp
mov
and
in
jmp
xchg
fstps
push
mov
lcall
push
mov
or
and
aad
lods
mov
or
mov
mov
orl
cmp
add
dec
std
mulb
addr16
bound
ficomps
cmp
dec
push
cld
mov
inc
jg
dec
sbb
out
mov
sub
shlb
js
hlt
cld
rolb
shll
dec
xor
pushf
fstl
scas
jae
loope
ljmp
int
and
sbb
xchg
sbb
jmp
dec
icebp
mov
pusha
mov
xchg
dec
mov
mov
add
fsubp
out
lods
or
stc
movsl
push
adc
in
outsb
cld
xor
jmp
ljmp
decb
or
cmp
cmpsb
and
jp
mov
xchg
xchg
std
ret
xor
cmc
sbb
call
cmp
lods
call
mov
insl
in
outsl
jecxz
push
lods
clc
fnstenv
mov
stos
lea
sbb
pusha
or
dec
movb
pop
or
out
mov
or
addl
mov
cmp
cmp
test
bnd
movsb
inc
lods
scas
cmp
sbb
fisttpll
lahf
dec
subl
loopne
int3
push
mov
notb
mov
push
and
and
jae
sub
enter
and
ret
leave
sbb
xor
add
pushf
fmuls
aas
arpl
adcl
jp
lods
inc
sub
xchg
negl
leave
inc
dec
fidivrs
leave
fistpl
or
testl
mov
sbb
ror
push
outsb
insl
xchg
jae
sbb
sub
out
icebp
push
push
sub
iret
ds
push
and
xchg
gs
shr
xchg
sbb
iret
lcall
ss
arpl
outsl
stos
aaa
jg
scas
out
daa
push
inc
loop
in
out
xchg
dec
ret
add
mov
addb
mov
cwtl
jmp
scas
pop
fistpl
pushf
ljmp
rcll
in
pop
dec
flds
into
cmp
sbb
mov
cmp
sbb
orb
fldcw
pop
adc
hlt
mov
lcall
and
inc
or
adc
andb
addr16
cmpsl
and
pushf
mov
mov
inc
push
mov
stc
xchg
mov
or
ret
loop
into
pop
mov
shlb
or
sbb
pushf
mov
in
inc
cmpsl
mov
ds
or
adc
and
jbe
jg
mov
shl
jle
sbb
jmp
xor
jge
out
xor
lahf
imul
push
jmp
add
call
dec
mov
jnp
insl
ret
loop
ss
pop
xor
ja
cs
andb
cmp
jl
jge
outsl
xchg
mov
fdivrl
jnp
cmp
leave
jecxz
jge
sahf
movsb
cli
cmp
jp
jge
cmp
pushf
xchg
xorb
in
scas
xorb
notb
inc
and
jne
pusha
mov
jg
ret
mov
push
cmpsb
adc
or
pop
dec
xchg
sub
sbb
and
ss
xor
or
dec
push
mov
adc
arpl
loop
nop
loope
dec
adc
sub
dec
sbb
and
cmpb
xor
jne
addl
cs
cmp
subl
jnp
icebp
jmp
and
out
adc
cli
push
arpl
push
dec
adc
add
adcb
fs
pushf
lcall
loopne
in
sub
pushf
pusha
into
sbb
xlat
sahf
mov
loope
popl
push
loop
add
repz
add
dec
cmpsl
inc
xchg
push
faddl
xor
ret
cli
cmpsl
adc
mov
xor
dec
pushf
fdivs
adc
add
mov
mov
cmp
adc
ljmp
out
orb
mov
cld
lods
mov
stos
gs
repz
hlt
daa
and
out
xor
mov
daa
add
ljmp
shrb
shlb
adc
and
xor
dec
or
mov
mov
ds
insb
mov
and
movsb
jmp
sbbl
jmp
adc
ljmp
adc
rorl
clc
into
fsubrp
or
mov
fdivs
in
ja
push
jmp
add
les
lea
lret
test
xchg
sub
jl
sbb
push
dec
or
push
leave
inc
pushf
arpl
jle
or
shll
fsubl
push
push
out
or
insb
imul
insl
pop
ljmp
xchg
and
cmpsb
ja
lock
mov
cmp
xchg
push
call
jmp
cli
jge
cmpsl
jae
xor
mov
sub
sbb
cmp
cmpsb
sarl
ljmp
fisubs
mov
and
cmp
popf
xchg
leave
ret
mov
xor
addr16
pop
push
push
mov
fimull
or
add
push
fildl
mov
in
or
push
jb
int3
stos
scas
unpcklps
je
enter
ljmp
outsl
scas
es
loop
cmpsb
sti
aas
push
int
into
daa
and
push
jmp
movsb
dec
cmp
push
movsl
repnz
mov
aas
bound
imulb
shll
sar
cmpb
mov
and
lods
add
ficompl
dec
sti
movsb
ret
fisubs
roll
repnz
jle
mov
rcrb
jmp
rcrl
xor
pushf
jle
mov
mov
mov
test
icebp
hlt
pop
and
enter
ret
mov
lret
jne
notb
and
mov
arpl
jae
leave
lods
in
ret
bound
mov
inc
mov
cwtl
scas
jp
and
jecxz
push
loop
in
cld
xchg
or
int3
sub
pop
adc
sbb
les
in
test
mov
sbb
push
push
or
enter
adc
jmp
push
jbe
sbb
test
mov
add
stos
adc
push
ret
insb
repz
adc
pop
scas
jmp
pushf
pop
inc
in
jecxz
test
test
or
fistl
push
mov
adc
loop
movsl
imul
pop
cmp
sub
adc
es
adc
inc
add
orl
aam
dec
dec
fstpl
mov
xchg
cmp
in
aaa
and
ficompl
xchg
xlat
cmp
push
fsubs
mov
push
in
adc
andb
arpl
inc
fwait
clc
sbb
inc
jg
aas
cmp
test
mov
loop
test
xchg
mov
mov
sub
ret
sahf
setae
cmp
adc
cmp
stos
lcall
dec
add
cmp
loop
ret
rcrl
sub
push
cwtl
aaa
mov
test
mov
loopne,pn
jmp
and
or
cmp
in
cli
adc
xor
mov
xchg
fsubrl
and
inc
lods
cmp
pop
in
push
pop
out
lods
icebp
test
loop
jmp
fcompl
add
pop
mov
and
pop
mov
ss
sub
sub
testb
scas
orl
cmp
dec
mov
std
mov
lods
iret
inc
adc
fldenv
outsl
cltd
les
andb
cli
ja
testb
lret
in
ret
int
sub
shrl
push
adc
jmp
test
xchg
and
andb
jmp
pop
ftst
jo
add
sub
les
xor
sub
xchg
add
jg
imul
pop
roll
int
aad
sub
add
mov
ja
lahf
test
repz
mov
ja
add
or
push
add
push
out
ljmp
sbb
cmp
pop
je
jno
adc
sti
cltd
adc
sub
push
or
in
insl
outsl
pushf
nop
rcr
ljmp
les
mov
bound
test
sub
or
mov
out
roll
test
jb
and
push
fldcw
sub
rcr
in
imul
dec
sbb
sbb
pop
int
inc
push
sub
sti
cltd
push
scas
outsb
rol
lret
sub
jle
cmc
cmp
mov
and
xor
mov
dec
orb
inc
cmp
ret
xchg
xchg
pop
mov
add
in
test
and
push
addr16
sti
shrl
pushf
push
cmp
cmp
js
mov
push
sbb
cli
inc
jns
fwait
pcmpgtb
in
and
sahf
mov
sbb
rorl
cmp
jae
lret
mov
dec
insb
and
inc
loop
or
pop
and
jae
fdivrs
lods
jp
or
lds
out
lret
cmp
loop
push
sub
xchg
gs
xchg
insb
adc
push
sbb
sbb
ljmp
cmp
insb
sub
cmp
mov
call
enter
xchg
sarl
fisttpl
repnz
jl
sbb
mov
dec
rcl
inc
test
lods
int
orl
push
ds
mov
int3
stos
fnsave
add
xor
imul
nop
jnp
aam
jb
and
push
push
lods
ret
aam
jo
out
push
push
xor
addb
add
in
xlat
inc
mov
push
addr16
pop
ja
orb
push
dec
inc
out
jbe
lcall
fwait
sub
or
adc
movsl
cmp
mov
ljmp
ljmp
jge
mov
lahf
mov
xor
mov
xor
push
push
out
divb
test
pop
push
sub
xlat
sbbb
out
scas
aaa
mov
add
stos
lret
lods
or
jne
or
popf
in
adc
adc
lahf
pop
orl
sbb
mov
cmp
sti
incl
stos
in
inc
sub
ja
push
outsl
movsb
add
adcb
unpckhps
or
mov
mov
cmp
xlat
inc
adcl
xchg
mov
sub
lea
iret
sbb
dec
clc
adc
std
or
arpl
mov
cmp
insl
pop
gs
or
cld
mov
ljmp
pop
es
ret
ds
outsl
pusha
mov
clc
cld
call
inc
push
mov
inc
dec
in
dec
push
sub
iret
jecxz
pop
push
push
dec
scas
dec
dec
mov
test
in
test
jnp
je
sub
scas
pop
jmp
cmp
mov
stos
sbb
and
sub
and
mov
push
js
ss
push
pop
push
les
pshufw
cmp
or
and
out
jle
mov
dec
jmp
sub
aam
es
test
shrb
or
leave
sub
add
dec
scas
mov
mov
fimull
test
mov
mov
sub
outsl
add
push
in
in
push
jne
insl
cmpsb
je
add
subb
mov
scas
mov
add
or
fldt
outsl
sbb
cmpsb
int
sub
mov
outsb
hlt
insl
ret
mov
jl
cmp
mov
fldt
cmp
loop
push
inc
jge
and
pushf
push
inc
cld
fisubrl
add
jmp
in
aad
stos
fildl
mov
dec
adc
aam
pop
test
stos
aas
add
jecxz
ret
jmp
loop
mov
test
stos
and
ret
jbe
mov
rcrb
fwait
cmpsl
fmuls
fsubrs
clc
or
push
jnp
or
sahf
lcall
ljmp
ljmp
arpl
mov
lcall
inc
jmp
mov
sbb
mov
lds
mov
shrb
push
jbe
inc
lds
mov
mov
sbb
push
xchg
into
adc
js
sarb
adc
rcll
test
aas
pushf
cwtl
test
sbb
pop
mov
mov
test
add
les
sub
aam
and
incb
inc
xchg
and
fbstp
jbe
rcl
lods
rcll
xor
ja
gs
push
out
xchg
loope
pushf
call
mov
aad
push
adc
jns
dec
ror
mov
mov
jle
lea
and
scas
test
fidivs
movsb
loop
jbe
sub
sbb
add
les
fistl
add
pop
shll
dec
test
jae
jge
xor
mov
mov
fmuls
mov
xor
pop
sbb
clc
out
pop
jmp
bnd
sub
or
imul
xor
push
cmp
out
cli
mov
add
out
cltd
inc
sbb
xor
arpl
cmp
add
arpl
aad
fdivrl
mov
shrl
movsb
xchg
bound
jecxz
mov
test
sahf
pop
stc
or
or
out
call
mov
mov
cmpsl
xchg
mov
lcall
jmp
add
sub
test
cltd
mov
mov
xor
xchg
cmp
cwtl
sar
sbb
inc
adc
in
mov
mov
lcall
push
int3
jmp
out
fs
bndldx
mov
sahf
jl
sbb
sbb
testb
xchg
sbb
out
fs
cmp
sub
fdivl
or
or
push
jne
jge
scas
add
loop
ret
cli
xchg
adcb
inc
push
or
pop
xchg
push
sbbl
js
push
repz
jp
sbb
jmp
pop
fs
xor
mov
gs
loopne
xchg
lds
dec
daa
sti
cmc
xchg
daa
mov
lcall
scas
sub
and
cmp
dec
psrld
mov
or
xchg
cmp
nop
mov
xchg
sub
jg
jg
pop
jp
xchg
lods
cmc
dec
rcrb
add
mov
cmp
or
fisubs
mov
jmp
cli
out
push
aas
sub
push
dec
adc
jb
repz
pop
adcb
js
insl
leave
popf
push
jmp
aam
sti
cmpsl
sub
dec
cmp
sarb
and
adc
pop
mov
pushf
mov
insl
in
cwtl
arpl
pop
push
adc
rolb
es
sahf
bound
int
shlb
test
or
mov
dec
addl
iret
stos
rorb
xchg
mov
int
mov
nop
aam
int3
in
adc
push
lock
subb
shrb
fsub
adc
daa
pop
add
shlb
push
xchg
xchg
add
mov
in
xchg
mov
or
dec
call
dec
xchg
cmp
std
pop
int3
cmp
nop
xchg
movsb
sub
loop
add
jle
fcoms
or
cmp
push
call
xorb
cs
mov
cmp
jp
push
pop
stc
fisubrl
and
cmp
add
addr16
cli
je
sub
lods
pop
push
add
fsubl
call
adcl
push
sbb
data16
xor
shr
pop
push
cmp
ret
in
pop
lgs
out
push
pop
aaa
inc
jae
jge
push
xchg
and
mov
xchg
and
and
mov
test
pop
fnstenv
push
into
mov
dec
arpl
js
jnp
and
mov
or
xchg
fmull
ret
jmp
jae
out
xchg
sub
addb
ljmp
jl
stos
mov
out
mov
sbb
divl
fnstenv
xlat
push
xchg
xchg
mov
sbb
enter
jbe
mov
movsb
ljmp
sbb
movsb
test
popf
adc
lret
dec
es
enter
jecxz
int
movsb
ljmp
bound
add
push
jmp
jl
loopne
test
notb
cli
arpl
jge
add
movsl
jl
sub
jae
xchg
push
sub
xchg
insb
jecxz
cmp
cmp
or
mov
lea
addb
fstpt
stos
loop
sbb
sti
iret
je
adc
ret
jge
clc
push
jno
xchg
or
aad
inc
je
loop
push
adc
loop
ret
ljmp
sub
dec
add
xor
and
sub
xor
mov
psubsb
adc
push
cmp
inc
ds
stos
jge
popa
xor
or
cmc
cmp
mov
shrb
mov
mov
jmp
sub
in
push
pop
jp
fstpl
daa
push
pushf
in
pop
mov
add
mov
in
pushf
xchg
aas
xchg
pop
push
and
arpl
repz
movsl
aam
addl
dec
jmp
call
sbb
les
adc
pop
or
mov
sub
jmp
add
jo
inc
xchg
sbb
mov
sub
adc
xchg
and
sbb
dec
push
mov
or
inc
out
mov
clc
xchg
out
sbbb
out
inc
es
mov
in
dec
aam
lods
repnz
cmp
jmp
pop
test
dec
mov
dec
int3
outsl
movsb
mov
xor
loop
int3
rdtsc
daa
nop
test
inc
push
mov
add
daa
out
lods
mov
inc
test
lods
pushf
xor
sbb
adc
mov
ds
jecxz
je
xor
ficompl
dec
add
lods
int3
insb
mov
loop
ds
dec
jp
scas
xor
aad
les
mov
out
fdivs
cmpsb
xchg
orl
mov
lock
pinsrw
pop
inc
sub
test
jle
xchg
push
mov
push
jmp
pop
xor
or
call
aaa
mov
lret
rcpps
data16
mov
add
insb
mov
test
push
ss
pop
loop
jo
jne
mov
add
imul
jno
mov
lods
jecxz
or
test
sub
inc
mov
sbb
lret
sahf
pop
dec
sti
mov
orl
js
cmpsb
aaa
dec
aad
xlat
sbb
sbb
imul
lods
pop
scas
mov
add
add
fs
test
push
or
pop
jo
cli
sahf
int
int3
mov
scas
les
fstps
insl
dec
mov
scas
arpl
cmp
jmp
and
psubq
mov
pop
xchg
mov
mov
mov
in
sbbl
adc
or
fiadds
adc
cmc
dec
and
cmc
insl
arpl
ds
sahf
loopne
sub
inc
lods
loop
sbb
pop
repnz
xchg
orb
mov
adc
mov
faddl
call
es
add
arpl
or
aam
push
das
ret
jmp
ss
pop
mov
sub
sub
ret
sub
int3
mov
cwtl
add
jl
scas
nop
imul
mov
cs
xchg
push
sbb
rcll
xchg
cs
or
lahf
insl
adc
into
adc
push
aam
xchg
push
ficoms
push
xchg
lds
pop
adc
mov
inc
rorb
les
inc
test
bound
mov
iret
cwtl
ss
jge
add
js
out
in
inc
ds
js
ret
mov
data16
dec
add
nop
sbbb
sub
mov
testb
cmpsb
jmp
cmp
adc
xchg
xor
in
cld
mov
insl
add
xorb
enter
or
mov
insb
repnz
lods
pop
loop
xchg
jae
arpl
mov
lods
cmp
xchg
pop
popf
mov
jmp
dec
ret
mov
fnstsw
fnstenv
sub
ret
addr16
cmp
inc
sbb
adc
and
mov
jmp
jbe
lds
jns
push
xor
dec
add
test
jbe
cmp
jmp
mov
fcmovnu
outsl
cld
mov
xchg
mov
cmp
or
cmp
push
cmp
mov
xchg
test
outsb
dec
hlt
or
fcompl
cmp
into
or
pop
rclb
mov
sbb
jecxz
gs
push
mov
lahf
stos
and
insl
ret
shrl
mov
subl
in
out
scas
add
dec
fsubrs
out
ret
test
subl
fistpl
ds
cmp
pop
lock
inc
rorl
adc
sbb
sbb
out
insb
cmp
mov
in
dec
test
repnz
sub
sbbl
insb
and
mov
in
sbb
pop
sub
or
push
or
or
mov
mov
fdivl
int
into
sub
ret
std
cmpsl
mov
jno
mov
push
cmp
rorb
rcrb
negl
pop
mov
mov
xor
sub
lds
jmp
mov
push
mov
sub
pushf
loopne
pop
push
loop
push
test
mov
push
inc
push
jae
jo
jecxz
mov
inc
in
cmpsl
cmpsl
inc
add
add
push
lock
mov
aaa
stos
push
adc
xor
xchg
xor
shrb
aad
pop
adc
stos
movups
outsb
rcll
bound
jmp
cmp
jmp
femms
aam
xchg
fistpll
test
dec
cmpsl
arpl
and
outsb
ss
hlt
xchg
fmulp
or
cs
outsb
mov
push
mov
arpl
lods
jbe
cmpsb
and
fisubrl
inc
lods
and
outsl
mov
add
scas
inc
inc
cmp
jnp
jecxz
inc
xchg
ja
test
aam
movb
xchg
mov
sub
ficompl
popf
outsb
sbb
xchg
ret
add
test
cld
sti
cmpsb
mov
push
sub
pop
ss
adc
insl
stos
sbb
cmpsb
clc
rolb
mov
outsl
inc
movsl
xchg
and
shll
rcll
or
lock
mov
or
push
in
adc
push
push
inc
out
cmc
sub
mov
aaa
adc
mov
das
je
or
ds
out
xor
repnz
pop
in
mov
inc
dec
sbb
jecxz
mov
adc
stos
mov
je
pop
xchg
xlat
mov
inc
pop
jle
dec
imul
and
mov
lods
adc
into
nop
xor
mov
jo
mov
push
xchg
lods
into
scas
std
mov
lods
mov
dec
lods
mov
imulb
pushf
and
pusha
cmp
mov
push
inc
mov
xchg
push
push
jmp
ficoms
lea
out
dec
sub
lea
out
sbb
divl
xor
in
out
loop
mov
add
loop
mov
nop
jmp
sub
iret
loop
jae
flds
push
iret
sbb
hlt
fs
and
ss
in
pop
push
data16
out
cs
loope
sbb
mov
sbb
mov
outsb
push
ss
pop
popf
and
out
test
shlb
out
jo
outsb
das
xchg
negb
mov
loop
xchg
push
orb
loop
pop
sti
ret
jl
data16
xchg
dec
aam
mov
loop
movsb
dec
push
stos
jb
clc
and
xchg
push
push
cmp
mov
add
or
dec
rcrb
or
dec
adc
scas
pop
push
pop
xchg
adc
lret
inc
cmp
jae
push
mov
sbb
lahf
jnp
sbb
jo
jno
push
jmp
xchg
lret
ficoml
sub
movsb
cmp
sub
or
scas
inc
aas
xchg
ret
stc
sub
mov
in
mov
shll
or
ja
test
cmpsl
cwtl
pushf
add
and
insb
ret
mov
jp
ret
xlat
pop
into
inc
sbb
rcl
test
dec
fbld
cmp
fdivl
arpl
mov
and
icebp
out
das
inc
insb
pusha
inc
push
push
popf
add
inc
jmp
je
dec
adc
out
js
cli
repnz
lods
add
jnp
dec
test
bound
cmp
nop
or
sbb
cmpsl
xor
pop
or
call
push
jp
xchg
iret
jge
mov
push
mov
fsubrl
rorb
and
insl
cmp
mov
mov
les
inc
repz
and
push
testl
xchg
adc
and
imul
jmp
sbb
mov
mov
mov
dec
jmp
jecxz
daa
lods
cmpsb
add
frndint
ss
pop
add
popa
adc
xchg
jmp
stos
cmp
xchg
xor
cmp
push
and
bound
ljmp
leave
mov
fbstp
dec
sbb
data16
dec
sub
ljmp
dec
pop
push
jo
sub
loop
iret
aam
cmp
cmpsl
leave
test
xlat
ljmp
orl
jbe
js
lods
nop
xor
add
mov
jmp
pop
jl
mov
xor
loope
stos
xchg
mov
cmpsl
mov
push
mov
or
lcall
xchg
mov
push
loopne
sarb
pop
cmp
sbb
sbb
aam
cmp
in
mov
mov
mov
cwtl
mov
lahf
jno
sbb
or
push
jo
adc
inc
mov
jl
mov
push
sub
ljmp
lods
jp
add
rorb
mov
loope
repnz
hlt
les
fnsave
movsb
cmp
or
shl
pushf
test
jp
add
das
pusha
xor
into
in
insb
cmpsl
int3
xor
lods
imul
stos
aad
lods
sbb
or
outsb
imul
call
mov
repz
mov
punpckhwd
orb
test
pop
stos
mov
mov
adcb
xchg
ret
cs
mov
xchg
xchg
stos
pusha
push
shrl
imul
mov
jae
lea
sbb
dec
mov
lahf
dec
jno
and
imul
imul
xchg
aam
rolb
sbb
dec
mov
rcr
imul
cli
ss
pop
in
callw
mov
ss
jmp
mov
popa
sahf
dec
push
lahf
addb
sbb
adc
inc
add
fwait
aam
and
fcmovnb
adcl
cli
add
sbb
es
push
push
xchg
mov
ss
rcrl
mov
ret
test
fucom
cmovs
xor
cmc
sbbb
cmp
icebp
sub
xchg
mov
jecxz
adc
mov
les
adc
dec
dec
fsubr
jmp
xchg
push
out
add
int3
out
cs
cmp
add
xor
lods
popa
pop
test
lret
and
mull
dec
mov
imul
inc
jmp
xor
xor
sbb
jge
pop
rorl
testl
fisubs
push
sub
jecxz
push
ret
jmp
mov
mov
cs
lds
dec
fbstp
pop
incb
iret
xor
loop
jo
cmp
xchg
loope
aaa
ljmp
stos
xchg
mov
test
jl
dec
int3
jl
das
mov
lea
movsb
or
not
dec
stc
push
lods
add
pop
jl
cltd
jae
cld
lea
out
xchg
jle
xchg
testw
cmp
sbb
inc
into
cmp
addr16
add
pop
shrl
ss
fcoml
jns
dec
cmp
mov
push
inc
sub
mov
ret
push
jmp
mov
popl
sbb
fwait
stc
pop
sub
loop
add
lock
mov
pop
mov
mov
sbb
xor
or
push
xor
loop
jmp
sbbl
xor
aad
insb
jmp
or
call
mov
pop
cmp
scas
out
ljmp
dec
frstpm(287
mov
hlt
ret
out
jp
or
sbb
ds
pop
mov
pop
inc
or
aas
mov
pop
cmpsb
inc
scas
not
mov
xchg
arpl
xlat
sub
xorb
jp
or
xor
std
xchg
pop
ret
lahf
fsubl
icebp
sar
inc
mov
mov
aaa
mov
aaa
pop
or
sub
out
add
mov
sub
outsb
jo
mov
push
add
sub
test
ds
cmc
popa
sub
aad
mov
shll
dec
dec
subl
out
lret
lea
mov
xchg
pushf
xorb
stos
mov
and
xor
inc
xchg
lods
imul
push
lods
pop
jno
das
cld
test
iret
cwtl
mov
int
cmp
loop
jns
sbb
ret
call
pop
xchg
jl
ljmp
add
faddp
ljmp
rorl
sarl
add
cmp
xchg
pop
lods
test
or
cmp
aam
sub
lea
sarb
and
call
lods
jmp
roll
sub
cmp
and
xor
cmp
cmp
adc
std
loope
movsb
push
insl
pop
fisubrl
jmp
mov
pop
sbb
dec
mov
jne
stos
sti
daa
test
shlb
movsb
or
out
jl
jae
mov
sbb
js
cs
insb
pop
xchg
mov
fwait
dec
jmp
dec
into
stos
or
loope
lock
inc
mov
stos
adc
push
jl
arpl
test
dec
jae
or
jge
push
addl
ljmp
arpl
repz
addb
sbb
fldl
dec
mov
inc
bnd
jbe
out
xchg
mov
mov
mov
add
icebp
add
mov
gs
lods
mov
lea
iret
push
jl
sbb
sub
imul
jb
or
xchg
push
rolb
out
push
xchg
stos
mov
repz
repz
mov
pop
push
mov
hlt
jg
dec
lret
add
loop
push
add
or
jcxz
mov
add
adc
pop
mov
repnz
pop
jg
adc
or
mov
jmp
popa
outsb
stc
jg
xchg
and
loope
mov
dec
sub
adc
jmp
inc
and
loop
pushf
pop
push
mov
iret
into
sbb
or
adc
test
repz
int3
dec
icebp
aam
es
arpl
adc
sbb
mov
push
jnp
cltd
mov
fs
rorl
pusha
xchg
loop
mov
popa
fiaddl
hlt
sti
lret
jmp
gs
add
xor
add
add
mov
shlb
push
loop
insb
loop
bound
repnz
sub
inc
cmp
xor
stc
ljmp
fwait
rol
push
inc
xor
in
lret
or
fldl
incl
mov
mov
mov
inc
adc
movsb
push
cs
pop
sbb
in
pop
jmp
add
je
inc
outsb
in
dec
cbtw
sub
fs
jb
hlt
sbb
mov
ds
push
call
cmp
aam
dec
xor
cmp
ficoml
gs
inc
mov
jge
sub
sbb
mov
add
out
or
jle
nop
outsl
pop
daa
pop
lods
enter
dec
das
cmp
test
lahf
add
sub
dec
fsubrs
filds
std
add
push
xor
fcomps
ljmp
cli
in
lcall
dec
insb
popf
or
jp
fcompl
hlt
cltd
or
fwait
push
inc
mov
xchg
mov
ljmp
or
movsb
xlat
mov
ljmp
repz
ror
rorl
inc
cmpsb
enter
aas
test
and
mov
mov
dec
push
jge
fstpt
mov
fdivl
push
xor
xchg
jmp
mov
sub
or
sub
mov
pushf
add
add
push
stos
dec
adc
push
fistl
les
cmp
mov
arpl
rolb
sub
mov
cmp
cmp
stos
dec
sub
sub
or
jmp
sbb
or
sbb
pop
scas
add
divb
dec
fisubrl
sti
or
in
sub
lods
out
fwait
pop
outsl
lret
scas
test
push
movsb
enter
mov
push
mov
cmpsl
leave
cmp
mov
mov
mov
mov
sub
idivl
xchg
pop
lods
xor
mov
fstl
jmp
xchg
push
mov
aad
push
inc
fcmovne
or
lods
fmuls
and
sub
cld
mov
mov
adc
jmp
stc
pop
xchg
loopne
testl
adc
repnz
mov
addr16
into
das
imul
outsl
js
mov
insl
xchg
subb
mov
xor
addl
popf
inc
dec
shrl
mov
pusha
jge
or
arpl
add
lret
xchg
sbb
adc
call
sbb
std
push
cli
push
lret
push
lods
stos
jns
cmp
ret
pop
in
mov
lcall
je
imul
xchg
sbb
sbb
or
pusha
fcomps
sbb
movsb
pop
sub
loope
sbb
pop
xor
push
sbb
xor
lcall
jge
cltd
dec
add
or
cmp
int
mov
add
mov
shrl
dec
dec
lret
vdivps
mov
scas
cmpsl
jecxz
add
mov
iret
pop
push
jae
ss
cld
flds
push
aaa
fnstenv
jnp
pop
fsts
xchg
outsl
dec
mov
fdivs
lods
into
mov
loopne
repz
xchg
ret
or
mov
jmp
xchg
int3
sbb
adc
mov
nop
cltd
sbb
jge
mulb
mov
inc
popf
mov
dec
xchg
inc
or
je
repz
sahf
cmp
andb
inc
loope
shr
xchg
dec
ja
stc
push
jmp
ja
mov
add
addr16
scas
inc
enter
xor
addb
or
nop
dec
rolb
or
mov
mov
sub
cmp
sub
sbb
jns
mov
mov
lods
mov
sbb
lods
repnz
addb
inc
xor
data16
in
lods
jge
imul
jbe
nop
cmpsb
out
dec
test
scas
mov
outsb
push
imulb
and
ret
fildl
dec
add
repnz
mov
call
pop
cmp
ss
aas
fs
cmp
push
in
add
pop
dec
test
sbb
mov
jnp
das
sbb
imul
sti
pop
daa
jno
cs
or
in
movsl
or
mov
pushf
fstl
jge
icebp
mov
fwait
in
pop
mov
imul
popl
popa
xchg
dec
mov
sbb
sbb
add
adc
sbb
scas
add
mov
mov
sbb
dec
out
cmp
movsb
mov
lds
mov
loope
push
mov
xchg
fldenv
pushf
mov
jbe
push
sub
inc
xchg
mov
jbe
xchg
jno
ret
xchg
jp
jmp
loop
mov
ja
push
in
lret
sub
repnz
adc
faddl
push
xor
jg
pop
xchg
fwait
xchg
rorl
stos
cs
lret
adc
out
mov
inc
mov
lea
test
nop
mov
and
sbb
and
popf
lret
cltd
cmp
movsb
inc
outsl
cmp
testl
mov
in
dec
push
xchg
clc
sub
push
push
fcmove
testb
test
movsb
sahf
stos
mov
jl
fcoms
and
into
pop
aaa
jle
roll
lods
insl
fidivs
xchg
into
xchg
cmpsl
mov
imul
sbbl
jecxz
push
jno
mov
dec
insl
cmp
into
xor
test
pop
movlps
cmp
adc
in
test
out
xchg
mov
jmp
mov
xor
dec
das
add
xchg
xchg
adc
jno
inc
cmpsb
test
fwait
pop
je
sub
rcrb
lods
mov
int3
mov
or
fldcw
add
ret
andb
mov
insb
shrl
inc
push
sbb
outsb
dec
stos
fwait
insb
inc
int
push
jmp
xchg
mov
push
mov
pop
shl
pop
cmp
pop
ja
aaa
aad
mov
shll
bound
cmpsl
lods
in
jo
into
movb
out
arpl
orl
jb
andb
jecxz
pop
jle
sti
dec
dec
lea
cmp
push
push
jmp
dec
scas
adc
lcall
repnz
test
dec
and
xor
cmp
mov
jo
mov
sbb
xchg
push
stc
sub
repz
mov
or
les
add
and
and
movsb
inc
adc
lahf
stos
mov
int
mov
rolb
lods
mov
adcl
out
ja
jae
and
loope
cvtps2pd
jmp
mov
mov
aas
sub
pushf
and
gs
add
cmpsb
rol
or
lret
mov
negl
cmp
popl
aam
mov
cmpb
clc
in
call
or
xor
lret
aas
adc
movsb
stos
rclb
fisubrs
jnp
sti
xor
loop
loop
cmp
hlt
sub
aad
sub
outsl
xchg
lods
xchg
test
outsl
cmp
xlat
xchg
insb
popf
and
popf
xchg
mov
dec
sub
and
andb
push
les
stc
movsb
aaa
cmpsl
jl
gs
sbb
int3
pushf
sub
fwait
daa
imul
fcmovbe
scas
inc
into
sub
cmp
adc
sbb
sbb
cli
push
mov
or
jmp
push
idivb
mov
daa
or
mov
stos
out
test
mov
pushf
push
adc
mov
rcl
push
outsl
hlt
das
arpl
and
mov
iret
or
mov
shrb
jnp
push
imul
sub
pop
hlt
pop
cmp
lods
int3
jns
or
into
jge
or
inc
inc
jb
xchg
push
gs
stos
sbb
push
cmp
and
add
add
sbb
stos
enter
mov
cmp
into
or
jmp
push
mov
sub
or
xorl
into
pushf
or
fs
shll
adc
mov
mov
aad
adc
jbe,pn
jb
or
xor
jp
pop
sub
insb
out
jmp
int3
xchg
fdivrl
jne
and
jb
sbb
aam
int3
sti
fwait
adc
std
hlt
cld
dec
call
jmp
ljmp
bound
mov
mov
hlt
and
mov
bound
add
jb
jae
push
mov
xchg
or
xlat
insb
push
ljmp
xor
aad
jp
shll
rcrb
sbb
dec
dec
or
in
or
movq
mov
outsl
fs
mov
or
mov
mov
and
xor
in
push
lahf
push
stos
in
lds
je
shr
mov
mov
or
jecxz
xor
sbb
fmull
into
jle
mov
stos
and
push
sti
fsubrl
xlat
pop
shl
push
out
mov
jmp
pop
mov
adc
cli
bound
into
push
sub
pop
push
test
inc
int
ljmp
inc
outsl
adc
fimuls
or
dec
inc
xchg
cli
enter
jmp
fs
pop
iret
push
popf
aas
dec
iret
or
or
mov
and
jecxz
and
sbb
popa
cmp
icebp
mov
sbb
sub
scas
in
mov
test
sub
stos
mov
addr16
loop
add
stos
ret
adc
jne
stos
and
loop
adc
ret
bound
decb
stos
insb
out
jmp
cmp
cli
dec
cmp
dec
sub
add
pushf
sub
adc
aas
imul
int3
xchg
dec
pop
cld
push
hlt
adc
cmp
mov
xor
sub
test
cld
mov
repnz
bound
es
lret
jo
movsl
cmp
je
xchg
loope
incl
mov
mov
out
sub
call
scas
cmp
or
xchg
test
cmp
jmp
out
push
imul
jle
loopne
jae
add
ss
int3
sub
bsf
pop
hlt
mov
imul
mov
mov
push
sub
lahf
cs
hlt
inc
sar
mov
sbb
out
scas
out
jecxz
add
arpl
popf
and
cmp
add
inc
cwtl
add
mov
sbb
fisubl
fnstenv
and
andb
inc
jl
jecxz
ja
out
pop
int3
xor
or
adc
add
mov
mov
mov
sbb
out
mov
stos
outsb
sbb
mov
pop
xchg
mov
outsl
mov
idiv
jp
in
xor
imul
xor
in
cmp
nop
stos
dec
pop
aam
test
pushf
pop
mov
lret
xchg
mov
ja
rorl
outsb
push
ljmp
lods
fwait
push
and
bound
sub
cld
test
mov
outsl
shl
push
and
sbb
push
sbb
jecxz
cmp
out
ret
push
pusha
push
dec
ret
cmc
add
loop
sbb
push
arpl
sub
xor
inc
mov
test
out
fistpl
mov
push
ds
push
insb
or
cmp
int
or
iret
adc
test
je
pop
lahf
mov
shr
mov
push
jmp
aad
cs
jmp
ja
lcall
dec
adc
fs
gs
dec
lret
pushf
sbb
pop
shrb
cmpl
jecxz
fwait
cwtl
inc
fimull
push
roll
inc
xchg
inc
cmp
movl
test
adc
pop
lahf
aaa
ljmp
loope
xor
xor
sub
pushf
and
das
test
addb
fwait
dec
out
sub
push
ljmp
adc
pushf
fcompl
int
aaa
and
push
lret
lds
or
cltd
out
cmp
mov
lret
push
test
xchg
jp
push
aad
call
and
cmp
imul
push
sbb
arpl
test
pop
fmul
fsts
and
push
pop
jle
lods
test
into
mov
xor
idivl
or
mov
jl
jnp
hlt
push
scas
mov
xor
sbb
in
fmul
cmc
pop
cmp
push
xchg
pushf
push
fnstenv
mov
add
pop
xchg
orb
xchg
mov
adc
or
fidivs
xor
aam
mov
xor
lea
not
outsb
cmp
movsl
fmull
pop
sbb
inc
push
push
inc
xor
mov
pop
add
mov
adc
mov
push
or
mov
int3
in
jge
insb
mov
pushf
je
xor
or
into
dec
add
adc
inc
dec
sbbb
jle
mov
mov
rcrb
mov
fs
mov
loop
and
xchg
in
xchg
arpl
xchg
movsb
pushf
pushf
jae
lock
mov
mov
mov
pop
scas
mov
add
add
outsl
mov
adc
arpl
push
mov
xchg
das
mov
adc
and
ficoml
mov
mov
jo
mov
mov
inc
out
mov
leave
rcr
in
mov
mov
or
add
jmp
das
mov
loop
test
cld
cwtl
mov
sbb
test
lret
cmpsl
push
lods
push
push
adc
imul
xor
nop
sub
fmull
lahf
inc
lock
cwtl
dec
mov
mov
mov
int3
pop
iret
lret
inc
dec
mov
sub
adc
mov
repnz
sub
dec
xor
test
jbe
mov
fstpt
dec
arpl
mov
insb
out
jp
outsl
int3
or
xchg
jmp
jbe
push
ljmp
aam
lcall
mov
adc
xchg
loop
mov
sbb
jne
sarl
mov
xor
out
xor
outsl
or
sbb
pop
into
add
out
fst
shl
insl
es
push
add
lea
xor
aaa
mov
or
ja
icebp
je
shrl
add
dec
andl
aaa
push
aam
cmp
movsl
pop
movsb
push
dec
gs
jl
adc
and
dec
aas
or
aaa
arpl
push
movsb
fst
inc
mov
xchg
imul
loop
das
jo
pushf
iret
ret
dec
sbbl
ss
std
dec
in
pushf
inc
hlt
sbb
inc
std
jl
xchg
stos
orl
sbb
jbe
mov
in
stos
adc
lcall
jmp
push
sub
jecxz
mov
and
out
in
sub
fwait
shlb
int3
inc
sar
mov
addb
stos
repnz
pusha
jbe
cld
popf
xchg
jmp
xchg
int3
pop
arpl
push
jle
sub
mov
in
add
inc
movsl
pop
sbb
mov
pop
xchg
fisubl
leave
loope
adc
add
in
adc
inc
jmp
xor
dec
into
into
insl
pusha
nop
je
int3
jne
test
popa
adc
in
xor
stos
jp
xchg
push
mov
add
in
mov
out
fs
arpl
push
fisubrl
inc
xor
jo
lods
shll
xor
pop
orl
add
int3
xchg
cmp
mov
scas
sub
cmp
cmp
xchg
cmpsb
cmp
hlt
lcall
jmp
ficoml
jne
xor
pop
popa
sti
jns
sub
mov
pusha
inc
sub
in
lret
jmp
gs
jmp
outsb
insl
cmpsl
int
mov
in
push
jae
push
mov
ss
mov
stos
test
add
iret
sub
cmp
shlb
cltd
stc
scas
fildll
orb
mov
cmpl
add
ljmp
cld
iret
sahf
cld
outsl
pop
cmpsl
adc
inc
repz
cs
cmp
mov
fnstcw
loope
outsl
in
aam
jmp
push
iret
adcb
fstp
popf
sub
call
je
mov
push
adc
test
dec
repz
leave
fcmovu
dec
or
loop
adc
mov
or
es
xlat
test
bound
inc
mov
movsl
xor
jb
and
cwtl
sbb
push
lds
pop
jbe
jbe
mov
shl
imulb
mov
rolb
sbb
pop
jae
and
sbb
ret
and
cwtl
fistpl
notb
jmp
js
xchg
adcl
and
mov
jmp
add
ss
arpl
adc
aam
scas
jo
rorl
lcall
mov
jmp
int
loopne
mov
push
sbb
aad
out
in
push
pop
mov
mov
mov
imul
jb
mov
cmp
xlat
mov
push
les
mov
jmp
fidivrl
sbb
sar
movsb
push
addr16
test
dec
xchg
jecxz
movsb
jecxz
or
leave
dec
lds
inc
xchg
out
and
rcll
add
and
xor
push
mov
add
mov
js
andl
mov
outsb
frstor
cmp
sub
out
xlat
out
ds
test
shrl
andb
cmp
mov
xchg
cmp
jecxz
rcrl
ds
push
rcll
mov
inc
imul
aad
adc
test
mov
fwait
rcrl
cmp
std
xchg
add
push
ljmp
iret
les
sub
movsb
add
push
push
xchg
mov
dec
and
shrl
popa
pop
out
ja
in
pushf
lret
cwtl
push
hlt
sub
sti
push
aam
movsb
cmp
daa
mov
inc
cwtl
and
sbb
sbb
testb
lods
mov
cmp
testl
xorb
dec
out
jbe
adcb
into
in
test
ja
insb
dec
in
adc
addr16
adc
mov
dec
inc
lds
addb
or
adc
in
imul
sub
push
add
xchg
neg
add
lods
les
cs
xchg
sbbb
in
xor
ret
adc
insl
mov
rorb
mov
movsb
cmc
sub
das
cld
and
sub
jmp
sti
lock
or
xor
loop
add
add
in
cmp
dec
andl
mov
sarb
mov
mov
mov
lock
sub
out
addb
inc
dec
shl
and
sbb
paddsb
andb
stos
mulb
jmp
ret
and
inc
sti
adc
dec
sub
inc
in
push
and
ret
jle
rorl
repnz
ds
lods
jb
and
xchg
dec
into
and
cmc
sbb
sub
sub
mov
arpl
mov
in
mov
inc
and
arpl
ret
dec
add
arpl
test
cli
out
jmp
pop
and
test
insb
negb
jns
cmpl
jg
adc
in
int
mov
or
xchg
mov
or
push
mov
inc
mov
in
das
jb
je
sbb
shrl
xlat
cmp
xorb
cmpsl
lcall
mov
fstl
mov
jg
adc
and
and
dec
scas
insb
ja
pushf
shr
cmp
and
add
jge
idivb
pop
and
in
ss
in
mov
fsubl
mov
xchg
fwait
jmp
jg
or
lcall
mov
shlb
out
xchg
jo
cmp
loopne
lods
xchg
shll
and
mov
fisttpll
lcall
pop
or
in
scas
jb
je
sbb
pop
lods
out
jecxz
xor
movsl
push
or
push
shr
rcrb
sub
sbb
and
jmp
sub
test
add
jo
sub
pushf
rol
fsubp
fidivs
insl
shl
sbb
jle
ss
adc
out
sbb
mov
adc
fdivp
mov
aaa
ja
sbb
mov
sub
inc
mov
inc
inc
ss
adc
jo
lods
or
clc
and
jg
in
scas
jb
je
sbb
push
lods
out
loop
sub
xchg
dec
sub
sbb
xlat
adc
call
sbb
cld
gs
sub
mov
mov
out
fdivrs
sub
mov
insb
inc
mov
fnstenv
adc
test
insb
enter
push
inc
jmp
stos
stc
jne
sub
movsl
mov
repz
dec
mov
lcall
pop
or
jecxz
or
dec
in
jb,pn
je
sbb
shrb
fldcw
sub
xlat
sub
fmuls
iret
xor
or
cmc
pop
inc
mov
pop
or
jns
int
push
shr
rorb
fsubrs
enter
inc
stos
lds
dec
js
push
out
test
aaa
dec
ret
pop
mov
repz
in
mov
jmp
mov
push
aas
and
lods
inc
sbb
sbb
insl
cmpl
jg
adc
push
repz
adc
fsts
std
sti
mov
stos
jns
pop
test
ret
xor
pop
in
mov
sub
lods
dec
xor
mov
pop
xchg
pop
or
mov
sub
fisubl
sbb
fldcw
mov
pop
sbb
fucomip
fldenv
mov
rcr
sub
push
scas
lods
xchg
jo
xchg
or
mov
scas
ss
loop
lcall
out
pop
sbb
mov
sbb
in
cmp
pop
jmp
cmp
shll
or
ret
call
dec
out
mov
lds
rorb
pushf
stos
cmp
lods
dec
rclb
mov
jp
and
test
adc
lods
jp
pop
jae
lcall
or
jp
xchg
sub
jae
mov
movsb
mov
int
fwait
inc
sti
mov
jno
lds
push
addb
mov
cwtl
and
cli
ss
xchg
add
mov
inc
movsl
push
push
movsl
adc
cli
mov
push
xorl
cli
into
cmc
addl
jb
aad
dec
into
insb
mov
mov
mov
stos
or
ljmp
mov
arpl
and
notl
jae
jb
sbb
xor
fsubr
push
mov
dec
scas
dec
add
shr
lods
mov
in
adc
jns
idivb
xor
jecxz
or
shr
dec
jp
xchg
int3
and
jnp
dec
fisttpll
fcmovbe
ss
add
addb
push
and
rcrb
call
pop
fcoms
std
mov
mov
sarb
lock
mov
and
popf
mulb
in
inc
nop
sbb
cs
or
inc
sbb
or
sbb
xor
adc
sub
loop
subb
loop
lods
mov
nop
in
ljmp
out
shl
in
mov
mov
push
sub
loop
push
dec
cmp
lret
pop
add
repnz
xor
xchg
and
sbb
stos
das
jno
mov
popa
sbb
stos
sub
mov
inc
es
lcall
xchg
and
or
jo
cmp
jecxz
lock
imul
rcl
fcmovbe
ret
xchg
test
ret
and
xor
cmp
pop
std
fdivl
push
aam
pop
sbb
sub
or
rcr
cwtl
jae
pushf
xchg
mov
push
fldt
xor
scas
jecxz
inc
add
ror
xor
jecxz
pop
call
jmp
decb
or
mov
js
int
arpl
or
dec
add
ljmp
inc
orl
aas
outsb
cmp
xlat
stos
mov
push
mov
dec
mov
dec
inc
jg
mov
stos
cmp
sub
gs
push
cld
jne
scas
mov
and
jge
ljmp
shl
stos
mov
or
inc
pop
adc
out
xlat
jg
jl
or
movl
mov
xchg
lahf
mov
loopne
add
fcoml
sahf
mov
fildl
ds
add
gs
cs
int3
mov
stos
repz
movsl
push
mov
rolb
adc
movsb
pushf
cltd
jp
cmpsl
jp
rcrb
jecxz
push
aas
fldenv
in
out
add
mov
call
movsb
xor
pop
xor
out
dec
adc
mov
sahf
flds
in
out
movsb
popa
inc
cli
scas
cmp
in
mov
jmp
mov
xchg
mov
xchg
mov
xor
or
jne
in
into
jb
lods
fisubrs
rolb
inc
and
test
xor
pop
das
imul
aad
jbe
pop
ret
in
out
cmp
shlb
lds
dec
out
cmpsl
xor
mov
jns
in
test
in
sub
shl
sbbb
add
mov
sbb
dec
pop
iret
bound
xor
xchg
leave
push
push
test
mov
dec
psubw
cmpsb
push
mov
dec
test
mov
lahf
xchg
gs
xchg
sbbb
adc
lods
fwait
or
pop
pop
lahf
xor
les
and
out
loope
js
mov
test
stc
dec
popa
xchg
lds
lcall
adc
inc
and
push
clc
enter
arpl
aas
jbe
add
movsb
pop
nop
sub
cs
push
leave
ficompl
jmp
sbb
sub
jecxz
addl
test
cmp
jmp
ljmp
mov
dec
inc
or
sbb
rclb
mov
dec
or
fdivp
push
out
mov
cltd
push
push
mov
inc
testl
xchg
inc
pop
movsl
xor
adc
adc
fcoml
lea
xchg
outsb
das
sbb
adc
jns
or
pop
jb
and
out
subb
xor
jb
or
sbb
push
jmp
sbb
je
lods
xor
pop
aam
data16
fldl
xchg
push
mov
imul
ret
add
aam
outsl
enter
testb
sub
xor
and
pop
shl
mov
repnz
lods
out
mov
add
stos
scas
xchg
mov
inc
xor
jl
ret
pop
jb
cmpsb
push
adc
jl
mov
lret
cmpsb
mov
scas
lds
mov
stos
movntq
out
jno
lea
add
repz
dec
push
imul
or
sbb
sub
xchg
cmpb
pop
pop
sbb
push
or
xor
aam
jecxz
sub
cmp
fcom
mov
jo
mov
jge
cmp
arpl
inc
ret
icebp
lret
ret
and
dec
stc
popa
or
mov
mov
pop
mov
sub
xlat
mov
je
jecxz
mov
and
push
pop
add
aam
loop
or
cs
sbb
movsl
sbb
ds
orl
push
mov
dec
das
push
test
dec
ja
jge,pt
test
sub
sbb
cltd
or
clc
or
int
push
push
push
or
cld
ret
dec
ds
in
daa
dec
cld
cmp
shll
ret
xchg
sub
or
push
je
jns
push
and
pop
xchg
xchg
shlb
xchg
sbb
xchg
insb
ljmp
pusha
mov
or
lea
clc
cwtl
enter
inc
addr16
sti
jp
sti
in
enter
ret
push
adc
jmp
ljmp
mov
inc
xor
fbstp
dec
int3
jns
xchg
sbb
jp
jae
push
in
loop
jne
mov
jmp
fstp
xor
adc
sbb
ljmp
mov
shr
test
xor
fwait
xor
dec
imul
pop
psubd
or
adcb
aas
xor
push
cli
pop
pop
mov
popf
jecxz
bound
xor
cli
cmp
in
add
js
lds
xchg
ret
sbb
jg
loope
sbb
fldt
add
ret
inc
add
jmp
aas
loop
mov
add
and
out
adc
mov
cld
or
mov
adc
mov
mov
outsl
pop
lock
sub
add
mov
mov
jo
push
adc
lds
mov
cmp
jns
int3
adc
sahf
cmp
jmp
adc
mov
sub
dec
out
rol
xor
fdivs
out
cli
mov
and
xlat
xor
mov
out
fs
adc
push
mov
adcb
mov
dec
push
sbb
ljmp
fsubs
pop
ja
xor
or
push
scas
insl
mov
sbb
jns
in
les
lock
mov
mov
xchg
dec
cmc
insb
frndint
inc
push
cmp
jmp
cld
hlt
imul
sbb
insb
jbe
add
popf
mov
out
ret
hlt
inc
pop
jno
pop
insb
xor
cmpsl
pushf
in
sbb
mov
je
adc
or
push
testb
or
xor
dec
lds
xchg
insb
sbb
adc
addl
cmpl
imul
repnz
xor
push
loop
ret
push
jae
xchg
jmp
add
ret
jmp
cmp
movsb
mov
xchg
repnz
pop
or
test
lea
sbb
out
push
pop
repnz
xchg
rcrl
lahf
cmp
sbbl
imul
xchg
out
or
and
dec
repz
xchg
es
mov
imul
psrld
sbb
cmpsl
sbb
dec
arpl
ret
repnz
mov
addr16
dec
cmp
jle
pop
decl
clc
int
cmp
push
lret
in
adc
sbb
aaa
fdivrs
mov
les
sarl
jbe
movsl
pop
dec
rcr
sbb
pop
enter
stc
repz
inc
ljmp
in
iret
sti
xchg
sub
push
loop
repz
out
cs
pop
test
rcll
cld
mov
lea
push
cs
sub
mov
sbb
or
fnsave
mov
insb
jl
cmp
sarb
adc
movsb
xchg
mov
pop
pop
std
faddl
enter
jne
push
fsubrs
shlb
and
lock
rcrl
gs
and
nop
imul
sub
ret
sub
in
add
lock
dec
adc
js
cs
iret
or
je
push
jge
push
arpl
push
push
mul
push
outsl
adc
ljmp
loop
por
push
pop
sarl
mov
jle
scas
dec
lret
push
enter
icebp
push
cwtl
lret
lret
repnz
shrb
mov
sti
loopne
sahf
mov
sub
cwtl
inc
flds
push
xor
stos
adc
sar
and
cmp
inc
sbb
mov
mov
loop
insl
xor
shrl
jge
out
enter
ret
mov
testb
mov
aaa
lahf
divb
or
ror
ficompl
add
xor
xchg
sbb
call
fadds
dec
xchg
xchg
adc
fnstenv
and
mov
mov
inc
jo
adc
and
xchg
jle
or
or
inc
cmpsl
in
push
and
add
shr
rcll
jno
jecxz
aam
mov
es
or
push
jmp
test
jmp
add
movsb
lods
mov
cwtl
aam
jne
fistl
inc
pop
cmp
adc
cmp
popf
add
test
mov
mov
scas
sbb
in
les
jmp
or
fnstsw
lcall
imul
invd
adc
dec
idivb
lahf
add
inc
jb
call
subl
xchg
scas
jmp
gs
and
sub
jmp
mov
in
lods
xorl
movsb
jmp
lahf
aaa
inc
mov
mov
dec
or
adc
andl
add
inc
lea
test
fiadds
mov
push
add
popf
fnstenv
or
sbb
mov
push
adc
scas
scas
test
jno
sub
inc
call
pop
inc
add
dec
mov
jge
mov
pushl
cld
xor
out
stc
fwait
in
mov
repnz
loop
push
mov
jns
jge
jne
mov
shr
movsl
fisttps
cli
jge
sub
stos
sbb
cmp
popf
cmp
pop
icebp
push
inc
xchg
push
sbb
mov
ffree
jmp
js
fildll
lods
add
fimull
test
jb
jp
jge
pushf
loop
int3
cmp
aad
pop
lock
and
cmpsb
mov
mov
stos
push
cli
imul
shll
stos
in
lock
mov
lret
jns
fsubs
push
pop
fisttpll
fwait
add
adc
ja
pop
cwtl
stos
filds
stos
inc
cltd
fwait
mov
jge
adc
mov
adc
iret
xchg
mov
pop
int3
call
test
sub
add
sbb
mov
mov
imull
and
jns
js
test
loope
mov
mov
and
aas
call
push
fs
stos
mov
mov
dec
fcomi
cmp
fistpll
xchg
out
jnp
fldt
in
sti
scas
arpl
ss
mov
push
adc
arpl
jae
call
mov
and
out
shll
xchg
xor
les
imul
es
jecxz
ficoms
xor
mov
mov
jmp
add
jl
loop
push
in
jnp
aas
lcall
cmp
es
jge
and
cmpsb
adc
mov
sahf
ret
mov
ret
pop
sbb
dec
repz
or
or
mov
aam
mov
icebp
movsl
movsl
xor
jge
lds
cmp
repz
sahf
lcall
repnz
jle
stos
jmp
das
fs
sbb
and
fidivrs
imul
or
jge
mov
sbb
adc
nop
push
les
fdivp
movsl
add
lods
scas
sub
and
or
out
cld
xlat
and
cwtl
mov
pushf
or
cltd
movsb
sub
sbb
push
push
xorl
xchg
les
add
iret
fldcw
dec
add
test
imul
cli
movsb
movsl
and
xchg
fnstenv
jge
loope
jge
mov
mov
xchg
addb
pop
fcompl
push
aad
imul
loop
sub
add
stc
inc
in
outsb
mov
test
div
mov
divb
dec
jmp
div
aam
shll
jl
test
lret
iret
mov
add
dec
idivb
bound
sbb
or
scas
mov
inc
pop
popf
cmp
and
add
je
in
inc
data16
pushf
movsb
mov
xchg
mov
dec
nop
rcr
loope
add
mov
xchg
rolb
aas
xchg
lret
fisubrs
addb
add
movlps
movsb
xchg
inc
movsl
xchg
call
xor
idivb
jecxz
xor
sarb
enter
lock
push
xchg
mov
bound
pushf
mov
adc
bound
rorb
adc
mov
mov
cld
or
fadd
stc
xchg
aad
mov
jp
int
aaa
fwait
pop
jecxz
pop
mov
fstps
adc
inc
out
inc
ljmp
and
popa
das
mov
rol
xchg
mov
arpl
pushf
ret
scas
enter
jg
pop
shl
dec
pop
outsl
push
jmp
mov
jno
testb
jp
ret
dec
mov
cmp
or
fildll
ret
and
int3
pop
inc
dec
stos
insl
insb
lds
cmp
insb
mov
adc
inc
test
movsb
mov
mov
push
mov
cmp
sahf
dec
in
in
je
das
adc
pop
adc
jecxz
push
das
and
push
cmpsl
outsl
lea
dec
lods
or
insb
fisubs
jp
sub
and
sub
jle
fisubrs
or
add
subb
ficoml
cs
arpl
or
ret
xorb
add
xchg
jmp
inc
sbb
call
cmp
icebp
arpl
lahf
out
orb
pop
imul
cmp
je
pop
mov
outsl
lods
mov
cmp
sbb
inc
and
out
filds
aam
xor
push
mov
mov
jecxz
mov
nop
mov
push
fs
in
cmp
mov
sub
mov
faddl
jecxz
ret
and
push
cmpsb
fnstenv
scas
je
jns
enter
lea
cli
ds
cmpsb
or
in
inc
in
lea
mov
movsl
pop
sbb
int
mov
jbe
popa
andb
pop
out
pmuludq
in
andb
mov
js
fimuls
jmp
mov
cld
ret
xchg
mov
xchg
test
ret
xor
pop
int
pop
mov
pusha
jge
in
adc
xor
mov
arpl
jge
push
not
mov
cwtl
adc
fimull
push
lods
les
pop
rcrb
xor
bound
mov
pop
sub
insb
or
push
or
scas
adc
adc
mov
cmp
cwtl
fimull
pop
dec
aas
pop
mov
nop
and
cmp
shlb
add
dec
add
lea
test
jnp
mov
jle
leave
hlt
push
mov
cmp
pop
orl
mov
lods
jb
ja
push
mov
xchg
lods
scas
xrelease
test
xorl
call
adc
cmp
outsl
push
cwtl
imul
xor
sbb
mov
add
dec
dec
xor
ret
adc
pop
bound
divb
adc
cmp
ds
mov
in
test
fs
test
rcl
lods
cmp
and
sahf
shrl
sub
int
and
gs
xchg
stc
cwtl
pop
or
mov
pop
in
rolb
push
sub
jecxz
loop
xchg
fcoml
sub
sub
pop
sub
or
xchg
in
or
ret
sti
push
scas
test
adc
xchg
pop
arpl
mov
pusha
jbe
ss
jmp
add
fucomp
lret
lret
jle
hlt
subb
pop
or
mov
shlb
fwait
icebp
push
hlt
fsubs
lea
gs
stos
scas
jg
inc
xor
sbb
mov
bound
repz
inc
xorb
jb
sti
mov
cmp
popf
scas
ret
or
lods
sub
repz
fisubrl
sbb
bts
int
ljmp
shrl
movsb
pusha
bound
cmp
int3
cmpsl
jecxz
cld
adc
push
pop
push
les
int
fistl
and
lret
fildll
stos
in
mov
mov
mov
sub
stos
jmp
xorl
test
add
mulb
and
mov
xchg
sub
mov
inc
mov
jecxz
fsts
mov
add
lret
gs
loop
push
movsb
shll
and
sub
outsb
rcl
cmpsl
lea
mov
decl
sbbl
shll
and
ljmp
push
in
iret
mov
mov
mov
adc
jge
push
sbb
lret
sbb
push
pminsw
nop
push
dec
insb
add
jecxz
mov
push
pushf
fmuls
orl
addr16
insb
inc
mov
push
pop
xchg
pop
pushf
or
xchg
leave
jecxz
adc
jmp
aad
push
mov
pop
dec
notl
add
test
rclb
stos
lods
inc
call
sub
add
push
xlat
push
xor
xrelease
pop
xlat
adc
test
jmp
inc
mov
inc
xchg
push
lret
int3
adc
jbe
jecxz
or
repnz
jns
xor
fsubs
out
push
add
mov
in
cmp
sub
arpl
jne
mov
scas
gs
pop
mov
and
jmp
mov
sahf
lahf
xchg
mov
cmp
inc
sti
cmp
push
aaa
jp
xor
test
les
inc
mov
inc
lret
cmp
sbb
pop
xor
test
lock
enter
dec
jecxz
loopne
adc
sub
sti
xchg
push
in
lret
mov
addb
dec
data16
cmp
rcll
sub
leave
xchg
push
mov
lods
xor
push
ret
mull
loop
popa
sub
xchg
push
pop
push
adc
and
add
sarl
add
das
mov
insl
pop
inc
repnz
or
aaa
dec
mov
mov
xor
or
cmp
sbb
or
ficoms
aam
pushf
cli
jle
in
xchg
jmp
push
leave
mov
xchg
cmpl
call
add
mov
lahf
dec
jns
and
jmp
dec
mov
jae
sti
mov
inc
add
sub
aam
add
jmp
or
jmp
stos
orl
or
stc
cltd
cmpsl
push
ret
xor
mov
fildl
das
sub
add
sub
scas
loop
push
adcb
pop
mov
jecxz
outsb
or
insb
jecxz
sub
ret
or
mull
add
mov
pop
subl
or
sbb
fcoms
add
xor
test
push
inc
pop
out
xorb
push
or
adc
push
je
lods
fldt
jbe
gs
mov
mov
pop
xchg
ds
loop
push
stos
scas
lea
mov
pop
xchg
add
jb
push
pusha
lahf
ljmp
fcmovne
push
jb
dec
dec
sbb
int3
xchg
lods
and
insl
inc
jno
pop
out
cmpsl
ret
dec
ljmp
push
shrb
in
lret
adcl
fidivs
clc
lcall
ret
jmp
push
mov
jbe
push
xchg
rcl
push
sbb
loop
or
ret
enter
or
push
inc
xor
je
cli
mov
mov
sub
inc
aas
das
or
dec
xchg
cmp
mov
aas
mov
lds
repnz
xchg
das
stos
jecxz
enter
lret
cld
pop
adc
or
adc
pop
adc
adc
or
arpl
mov
push
lock
testl
push
popl
enter
or
jb
in
repz
push
scas
out
loope
adc
mov
sub
shlb
aaa
idivb
mov
je
filds
mov
inc
jno
jle
or
movsl
jnp
daa
fcmovbe
ss
dec
add
and
leave
addl
iret
mov
in
js
inc
out
ljmp
lds
jbe
fcompl
subb
cli
fbld
xchg
ret
xchg
jmp
in
dec
sahf
je
sahf
and
js
xorl
lret
inc
fcomps
jnp
aaa
add
shrl
mov
jnp
jns
cs
insb
bound
sbb
ja
mov
arpl
cmc
cmc
jl
and
or
insl
cld
jp
xchg
xchg
jle
xchg
dec
scas
daa
cltd
cmp
test
sbb
push
pxor
les
mov
or
bound
jmp
xchg
inc
xchg
inc
mov
cmp
inc
xchg
or
sbbb
ret
out
inc
jmp
test
jmp
clc
push
lcall
aas
sub
arpl
aas
inc
cmp
fistpl
or
or
jne
jns
mov
enter
popf
xchg
mov
mov
mov
or
mov
cltd
fwait
mov
lods
and
jmp
jno
pop
push
mov
stos
fidivrl
cmpsl
xlat
imul
cmp
adc
sbbl
sub
or
jmp
pushf
icebp
jae
dec
lret
mov
mov
dec
jb
xor
sbb
xor
pop
sub
shrb
repz
scas
addr16
iret
outsb
in
mov
mov
mov
jle
xor
mov
dec
sarl
orb
xor
orb
add
int
flds
xchg
lret
sbb
push
mov
ret
mov
xor
sti
fcompl
and
mov
in
lcall
push
jno
mov
mov
popf
testl
push
mov
push
push
scas
cli
or
mov
adc
repz
mov
add
arpl
ret
ja
cmp
pushf
loop
mov
movsb
push
icebp
push
xchg
jbe
ficompl
xor
mov
mov
orl
push
cmp
or
xor
fisttpl
cltd
imul
in
test
sbb
ljmp
fidivrs
mov
pushf
xchg
das
ss
je
das
mov
mov
adc
pop
mov
pop
and
pop
and
inc
scas
mov
jge
ja,pn
dec
jecxz
sbb
sahf
test
das
out
jns
push
dec
or
rep
outsl
jp
xor
inc
test
negl
jmp
sub
test
outsl
loop
xchg
pop
inc
jmp
movsl
xchg
loope
movsl
lahf
mov
ljmp
mov
push
and
addr16
lods
gs
jmp
push
sub
sub
fdivp
rolb
lea
std
ljmp
pop
into
sarb
mov
loopne
xor
mov
lret
xchg
in
inc
sti
mov
xchg
arpl
mov
cmpsl
push
repnz
cmpsl
xor
imul
dec
xchg
pushf
pop
outsl
jl
in
sub
cwtl
outsl
pop
xchg
ficoms
into
ret
stos
shll
les
int3
loop
cmp
ret
xchg
sbb
movsl
jl
sub
notl
adc
adc
jmp
mov
mov
pusha
add
mov
xor
ret
jo
pushf
pop
or
roll
dec
inc
int3
mov
lahf
leave
mov
ret
daa
sub
popf
sbb
mov
cmp
sbb
jp
cltd
inc
dec
xor
popf
pop
mov
cmc
inc
cltd
jne
pop
lods
jne
push
jg
orl
add
pop
or
lock
inc
decl
pop
xchg
add
in
push
cmp
push
lock
dec
lock
xchg
movsb
orl
adc
mov
dec
hlt
js
inc
movsb
adc
sbbl
pop
xchg
xor
ret
dec
sbbl
mov
mov
push
add
arpl
xchg
jecxz
inc
or
pop
pushf
testb
inc
jne
mov
bound
jmp
sub
pop
or
jle
test
int3
mov
hlt
sti
imul
add
insb
jmp
mov
inc
add
sbb
inc
xor
sahf
sub
inc
or
dec
aam
jle
pop
fcoml
mov
xchg
mov
popf
repnz
mov
cmp
mov
cmpl
pop
add
xchg
lods
pushf
add
sub
add
ss
xor
aad
pop
dec
stos
or
mov
imulb
out
lahf
in
push
sub
shrl
gs
cmp
jl
sbb
push
popa
pushf
pop
cmp
aaa
bound
or
decl
rcl
scas
pusha
adc
cmp
in
or
pop
and
js
sbb
sub
out
jecxz
in
jecxz
push
adc
outsl
in
mov
insb
out
arpl
loop
cmp
pop
push
loop
in
cmp
fwait
int3
adc
subb
xchg
sub
insl
dec
out
dec
xchg
and
das
loop
dec
call
imul
addr16
push
outsb
arpl
roll
mov
shl
mov
xchg
sub
into
push
sbb
outsl
in
arpl
add
outsb
stos
mov
push
or
cli
into
pop
xchg
popa
iret
sbb
add
stos
int3
in
xlat
inc
add
and
in
jno
mov
fcomip
push
dec
imul
push
add
dec
and
arpl
sub
mov
in
sub
out
lods
cmp
imul
or
push
mov
or
adc
ss
call
loope
aad
xor
mov
inc
cld
cmp
out
rcrb
fildl
out
pop
xor
clc
jmp
int3
imul
mov
das
xor
pop
mov
xlat
in
mov
sub
hlt
adc
dec
or
insb
leave
mov
ret
and
fisubl
sbb
dec
mov
mov
fwait
dec
out
out
or
js
sub
pop
and
call
mov
sub
andb
dec
sbb
inc
xchg
and
add
std
xchg
jle
subb
cwtl
loop
ret
xchg
insb
repnz
xor
sbb
mov
imul
mov
addl
insb
outsb
fisubs
in
insb
add
inc
fstpl
out
scas
and
or
imul
lahf
or
and
pop
pusha
nop
ret
dec
xchg
stos
ret
pop
or
add
dec
xor
mov
in
or
into
dec
dec
and
jmp
mov
dec
stos
fnsave
sub
in
mov
out
pop
add
out
xchg
or
xchg
rolb
sahf
aam
scas
dec
es
xchg
outsl
test
jl
and
xor
in
sbb
cli
or
dec
es
mov
cli
add
sub
in
push
mov
repnz
popf
dec
push
adc
aam
out
add
jecxz
fwait
push
loop
sub
into
bound
cpuid
loope
mov
dec
and
sub
mov
int
mov
sbb
loop
pop
std
loop
inc
push
and
loop
insl
mov
sub
sub
sahf
cmp
sub
lods
iret
insl
add
out
xchg
call
mov
mov
jp
inc
sbb
call
ljmp
mov
xchg
jae
jmp
cmp
push
sahf
js
sub
xor
clc
and
jbe
pop
int3
into
and
mov
inc
int
pop
lea
dec
xor
xchg
add
inc
sbb
inc
sub
jle
xchg
call
mov
adc
mov
mov
sbb
int
mov
xor
loop
sub
dec
pop
shll
leave
stos
int3
and
lods
dec
adc
pop
cmc
sbb
loop
jecxz
or
sub
das
or
adc
into
xor
stos
push
test
jnp
sbb
push
ljmp
mov
leave
call
push
dec
or
jg
fwait
mov
xchg
out
dec
mov
in
scas
outsb
out
scas
sbb
push
lods
mov
mov
jo
scas
or
stos
mov
cld
loop
sbb
cmc
subb
push
sub
loop
cmc
xchg
iret
adc
jl
and
fnstsw
jo
lods
jmp
dec
scas
pusha
mov
or
pusha
and
jl
add
test
sti
push
inc
fisttps
fidivrl
cld
arpl
lea
mov
out
call
sub
adc
sub
int3
stos
cmp
and
pop
dec
adc
repnz
aad
das
mov
fsubrs
xor
mov
sbb
push
movsb
lds
lods
cmpsb
inc
pop
adc
loop
in
dec
cmc
outsb
and
call
out
push
lock
outsb
mov
or
lods
lods
adc
std
loopne
bsr
into
jne
addr16
or
pusha
xor
lret
mov
fstenv
popa
dec
push
push
je
in
push
lea
jmp
mov
jmp
dec
mov
inc
xchg
pop
cli
test
scas
mov
cmpsl
daa
lods
jne
push
repnz
add
xor
nop
fcom
aam
mov
add
xchg
jmp
pusha
mov
xor
mov
mov
gs
pushf
test
push
dec
pop
or
in
push
push
add
mov
xlat
in
dec
push
and
out
or
cwtl
arpl
test
jne
pushf
mov
repnz
ss
sub
mov
sub
and
push
add
sbb
push
je
orb
pop
leave
notl
mov
cmp
or
sbb
std
insl
fstl
jbe
or
out
mov
pop
shr
dec
cmp
and
ficompl
or
lods
shll
scas
sbb
add
mov
push
xchg
cmpsb
jmp
xlat
mov
clc
mov
out
sbb
out
scas
call
sub
and
mov
inc
adc
jecxz
sti
mov
push
in
cld
sbb
adc
repnz
xchg
mov
cmp
aaa
insb
adc
shlb
mov
les
je
sbb
test
pushf
gs
sub
mov
xor
iret
repz
lock
or
shrl
inc
mov
or
sub
or
out
add
add
aam
loop
add
mov
adc
mov
cld
ret
sahf
imul
lds
fsubrl
jb
leave
xchg
rolb
frstor
mov
das
cli
mov
or
xchg
movd
cmpsb
mov
outsb
lahf
dec
pop
out
cmpsb
lret
daa
xchg
fidivrs
mov
adc
fisubs
push
fdivr
in
cmpl
fisubs
gs
out
push
ja
sub
invd
push
out
adc
mov
mov
cld
lea
aad
push
test
iret
pop
pop
sbb
lock
add
jmp
into
data16
mov
jo
sub
insl
xor
sbb
push
loop
cmpb
add
popf
xchg
movsl
mov
mov
jp
push
jge
mull
lret
shlb
mov
and
sub
ss
sub
add
and
add
cli
push
loop
xchg
test
stc
cmpsl
out
jp
push
pop
pushf
sbb
mov
stos
xor
fisttpl
movsl
test
or
aaa
push
test
jo
xchg
out
and
pushf
dec
ljmp
in
loopne
js
addl
add
mov
pop
lret
test
movsb
cmpsb
cmp
jne
pushf
fnsave
cmp
cmp
jmp
xor
add
mov
sti
add
cld
fiaddl
test
dec
jmp
lahf
or
cmp
cli
push
repz
fisttpl
mov
mov
ljmp
test
dec
imul
xchg
add
cmp
loop
push
lret
fs
mov
clc
test
ret
shll
jg
push
push
rcll
inc
mov
fucomi
push
xchg
xchg
ds
push
in
or
sbb
mov
scas
inc
sarl
jnp
shrb
js
pop
xor
test
jecxz
and
stc
js
gs
cmp
push
adc
sbb
mov
loop
xchg
sub
dec
dec
add
cmp
pushf
pushf
mov
stos
mov
mov
arpl
adcb
sbb
jb
fstl
lcall
adc
adc
dec
xchg
xor
inc
dec
outsb
test
jmp
iret
sub
sbb
adc
inc
bound
xor
mov
fstpt
test
rcrb
mov
or
mov
pusha
filds
or
stos
mov
xchg
and
cmp
and
test
pushf
sti
repnz
or
lea
mov
cmp
and
cltd
lahf
sub
adc
cmp
ret
test
mov
xchg
add
addb
stos
std
stos
mov
loop
adc
adc
incl
mov
dec
xchg
mov
xchg
sub
dec
loop
scas
subb
lock
jns
sti
sub
jbe
xor
add
idivb
jo
inc
ja
icebp
les
sub
movsl
lods
lods
and
sub
bnd
sbb
insl
cmp
stc
or
adc
outsl
or
or
lock
xor
xchg
icebp
fs
dec
xor
add
and
call
inc
lcall
and
stos
mov
xchg
test
mov
xor
pop
aad
sub
fsub
mov
lock
add
movsb
lea
pop
movsl
in
mov
addl
xor
jne
adc
mov
pop
push
stos
andb
sub
sub
scas
out
out
pusha
add
push
lods
mov
pop
inc
and
or
imul
in
pop
lret
mov
jp
adc
scas
cltd
sti
jae
or
test
scas
or
mov
add
xchg
insb
push
pop
aad
pop
jbe
imul
das
mov
in
icebp
ss
or
sahf
and
fwait
rcrb
sbbl
mov
mov
xlat
pop
inc
lods
aaa
mov
jle
lea
test
fdivr
add
cs
sbb
iret
push
fnstcw
lods
pushf
sub
rclb
jle
cmp
push
and
arpl
daa
and
push
dec
hlt
lock
js
test
mov
or
jp
push
xchg
jecxz
inc
mov
mov
lods
xchg
clc
sbb
sbb
movsl
ret
or
push
jp
adc
mov
test
in
push
dec
fs
xchg
ret
jo
lret
repz
int
sbb
ja
loope
xor
add
sti
insb
mov
ljmp
mov
xor
xor
mov
in
lahf
rclb
rol
push
or
push
icebp
sub
jo
fs
jl
dec
and
inc
mov
jl
adc
mov
es
adc
sub
sahf
push
out
lcall
mov
test
dec
movsl
pop
cli
and
arpl
hlt
pop
loop
xchg
ror
rcrl
rclb
push
stc
sub
adc
hlt
ds
xor
or
cmpsl
aam
sbb
sub
sub
jmp
sub
dec
fs
xlat
inc
mov
jae
cwtl
ret
jmp
fcoms
shll
push
clc
adc
mov
shrb
xchg
ret
cmp
cmp
out
call
mov
adc
push
xor
and
rolb
pop
pop
sub
jmp
sbb
pop
add
jmp
push
sbb
add
repnz
repnz
pop
jne
mov
int3
icebp
add
push
mov
xchg
adc
fnsave
xorl
loop
sbb
mov
jne
fsubrp
sbb
adc
inc
scas
rclb
repnz
sbb
adc
lcall
sahf
jo
ret
or
or
jne
pop
js
xor
fsubp
adc
mov
adc
adc
subb
jae
mov
push
rorb
leave
jp
inc
jnp
push
inc
or
cmp
data16
fwait
out
lahf
xor
imulb
jmp
insb
cmp
mov
sub
lock
mov
pushf
xchg
pop
sub
mov
xor
scas
aas
data16
cmp
sbb
mov
ret
push
xchg
pushl
cmp
xor
lea
inc
in
push
mov
repz
ret
loop
mov
add
icebp
lret
sub
shrb
jo
cwtl
fstpt
sub
ret
sbb
pop
cmp
sub
add
orb
and
arpl
rorl
mov
sbb
mov
and
xchg
hlt
sbb
or
jecxz
decl
jne
shll
data16
pop
out
or
in
sub
push
adc
mov
lods
sarb
cmpsb
mov
push
into
mov
mov
stos
cmp
in
sbb
mov
inc
loop
loop
xchg
in
imul
mov
lea
push
insb
push
add
and
push
test
or
ret
call
mov
xchg
sub
gs
sub
icebp
sub
xchg
notl
roll
in
lret
mov
inc
aaa
cmp
js
push
sets
int
jmp
imul
lcall
roll
outsb
xchg
scas
cmp
in
sub
xor
or
jle
shlb
cmpsb
mov
or
push
push
xchg
cmpsl
repz
sub
ret
cli
push
cmpsl
mov
test
xchg
mov
pop
push
lret
repnz
adc
mov
mov
lea
ret
sub
lcall
and
adc
cwtl
cli
ret
stos
inc
and
bound
mov
xor
add
push
push
and
fdivrl
je
jbe
addb
dec
in
ret
add
jle
or
mov
xchg
jl
sub
jne
sahf
stc
arpl
xor
in
clc
int3
mov
out
xchg
push
adc
mov
add
xor
adc
mov
cmpsl
cwtl
lahf
stc
xchg
mov
lea
pop
or
xor
pusha
sti
fcomps
sbb
adc
es
xor
lock
push
dec
adc
hlt
or
xor
scas
dec
mov
and
repz
push
pushf
mov
or
hlt
sub
adc
and
and
add
add
sub
lahf
mov
jmp
orl
and
in
inc
xchg
outsb
imull
test
mov
push
sarl
fidivl
enter
mov
enter
clc
xchg
jmp
sub
push
mulb
fldl
das
ljmp
mov
cmp
xor
call
rclb
ljmp
outsb
bound
int3
pop
ret
in
inc
js
mov
pop
fmulp
faddl
fsubr
cmp
ret
xor
pop
lret
push
jbe
xchg
jg
js
call
mov
jnp
clc
divb
pushf
push
aam
pop
insb
xchg
add
popf
mov
xor
fcmovnu
lret
das
dec
mov
push
aad
and
adc
xlat
xchg
outsl
adc
in
adc
mov
and
test
mov
movsb
js
fmuls
loop
inc
roll
imulb
push
mov
sbb
or
inc
jmp
adc
and
jl
cmpsb
push
dec
mov
adc
dec
adc
call
in
scas
adc
jge
fidivrs
shll
pusha
add
lea
loop
add
jb
and
movsb
flds
mov
shll
xchg
std
jl
mov
jmp
xor
stos
andb
mov
inc
jge
loop
jne
mov
lods
xchg
cmpsl
fnsave
dec
mov
sbb
pop
xor
xchg
roll
xchg
lahf
pusha
mov
pop
mov
add
stos
mov
push
data16
and
cmpsb
shlb
dec
inc
gs
cmpsb
int3
pushf
sbb
stos
xchg
ret
or
test
jnp
pop
cli
mov
test
call
scas
pusha
lock
push
jne
lret
in
push
mov
cltd
sahf
push
or
addr16
and
push
inc
insb
test
dec
fsubs
cmp
loopne
pop
push
bnd
mov
xchg
ret
jge
push
outsb
sbbb
and
inc
pop
cld
mov
inc
or
sub
sbb
sbb
adc
inc
push
sbb
sbb
in
cmp
inc
dec
xor
arpl
mov
test
int
fs
jns
mov
pop
mov
rorb
push
ret
sarb
or
xchg
xor
stos
inc
mov
in
nop
lea
mov
add
inc
cmp
jne
jge
hlt
xchg
ljmp
les
inc
sahf
iret
xor
push
mov
xor
mov
in
jbe
and
mov
and
lods
fidivrs
repnz
ja
cli
adc
add
ret
fucomi
mov
ret
dec
mov
fwait
out
clc
test
fsubrl
add
in
sub
xchg
movsb
imulb
inc
fmul
adc
imul
out
call
mov
faddl
pop
lcall
push
inc
sub
fisttpll
push
es
xchg
gs
jae
shrb
pushf
lods
pop
xchg
jmp
test
dec
ds
outsb
ret
cvtps2pi
xchg
jmp
sub
mov
loopne
cmp
adc
sbbb
dec
sahf
sbb
scas
mov
mov
push
hlt
dec
pop
jo
inc
mov
icebp
xchg
or
push
or
stos
ret
dec
outsb
mov
push
popf
test
jmp
mov
add
movsb
and
dec
sar
fs
aad
test
cmpsb
nop
xchg
ss
out
push
xor
push
cmp
cld
sub
loopne
dec
leave
push
sub
cli
or
add
nop
xchg
or
test
push
adc
gs
xchg
in
cmp
add
and
xor
ret
sub
gs
mov
sbb
pushf
mov
mov
adc
inc
scas
fisubrs
dec
adc
push
push
and
mov
ret
movsl
jo
imul
sbb
push
fst
cmp
lcall
fstpl
jns
xor
push
mul
sub
inc
je
daa
test
pop
add
test
inc
mov
mov
jmp
jl
fistpl
mov
add
or
bound
divb
sub
add
loopne
mov
test
das
lods
jmp
adc
or
adc
dec
push
pusha
add
shll
sbb
jmp
lahf
and
arpl
push
mov
push
rcll
movsb
jle
int
mov
data16
adc
shll
mov
jmp
gs
xor
jge
pushf
or
add
popa
imul
outsb
sbb
sbb
orl
stc
cwtl
jg
mov
scas
adc
movsb
inc
pop
push
jmp
lea
stos
dec
cmp
imul
xor
cmc
add
add
jecxz
scas
data16
ljmp
inc
mov
aaa
jp
and
lods
adc
movsb
dec
dec
or
sub
loop
and
cld
orl
loop
iret
lods
pop
lods
mov
mov
jge
push
rcr
ja
fwait
pop
jle
jle
jo
and
mov
dec
sub
imul
push
cmpsl
pushf
add
mov
clc
outsl
inc
add
dec
ret
xchg
mov
mov
jle
stos
std
push
or
mov
pop
jecxz
jmp
in
xchg
inc
mov
daa
lret
dec
fsts
test
xor
push
cmp
jecxz
pop
dec
push
rclb
scas
cs
xchg
cli
les
jl
sbb
mov
push
pop
jmp
inc
and
ljmp
and
sbb
stos
ret
sub
pop
pushf
add
loopne
ja
adc
mov
xor
jg
lods
mov
les
cs
xchg
jecxz
and
lahf
fs
adcb
int
fsubrs
sub
xor
int
dec
push
sbb
dec
cli
lods
ds
or
jb
sub
push
pop
outsl
xchg
loop
inc
add
arpl
lcall
mov
push
jp
xorl
decb
loopne
adc
jl
xor
fsubrl
add
popa
rclb
push
iret
inc
sti
lea
test
push
sub
xor
jb
inc
adc
popf
jae
gs
cmp
outsb
pop
jno
sub
mov
mov
sub
fnstenv
loopne
insb
outsl
out
movsb
xlat
outsb
sub
sub
je
movsl
sbb
test
sbb
jmp
call
adcb
push
jmp
sar
rcrl
setg
jle
mov
sub
mov
aaa
mov
mov
scas
rolb
stc
rcll
cltd
mov
aad
mov
sub
nop
fstl
test
jp
lods
mov
inc
or
dec
mov
flds
hlt
jo
xchg
or
int
and
xchg
pop
mov
push
push
jb
lods
dec
roll
ret
loop
mov
inc
mov
add
fldt
sbb
ret
mov
lds
jge
test
cld
movsb
xchg
repnz
dec
xchg
xor
xor
pop
adc
fiaddl
sti
or
jbe
fsubrl
pop
subb
push
sbb
mov
mov
mov
mov
mov
cld
js
pop
scas
or
pop
pushl
repnz
jge
xor
mov
rcrl
jecxz
xchg
and
stos
nop
pusha
cmp
jp
leave
sbb
mov
arpl
cmp
movsl
jmp
or
mov
jae
push
sbb
ret
bnd
pop
dec
add
test
or
adc
loop
add
cmp
inc
cltd
xacquire
ds
sub
scas
js
into
sub
or
iret
in
xchg
jns
addl
cmp
pop
mov
call
testb
dec
xchg
mov
shrl
mov
int
popf
clc
shr
cmp
test
test
push
xchg
dec
inc
cwtl
lahf
mov
and
sbb
aas
lcall
jecxz
jb
in
cmpsb
or
bound
outsb
sub
adcl
loopne
cs
pop
sbb
add
inc
loop
jo
push
cmpsl
xchg
fwait
lock
mov
stc
loope
xor
sbb
sbbb
push
bound
cmovle
jnp
arpl
testb
cmp
add
fnstenv
adc
jns
fdivrl
sub
jo
test
movsb
fldt
xor
cmp
das
push
ret
fwait
pop
fcmovu
ljmp
inc
dec
mov
fdiv
ljmp
cld
fneni(8087
outsb
repnz
jb
or
add
movsb
cmp
add
jns
cmp
jb
sbb
mov
inc
or
out
sub
aad
idivb
daa
test
iret
aad
cs
bound
jg
cwtl
xchg
test
add
iret
mov
in
mov
lcall
sbb
push
adc
insl
idivb
sbb
jbe
jbe
cmpsb
fs
jmp
adc
testb
or
notl
sbb
jmp
test
xchg
sub
rcrl
movsl
and
mov
and
fisttpl
cmp
pop
jmp
imul
nop
inc
dec
scas
sub
mov
sbb
sub
dec
mov
xchg
push
arpl
in
sbb
push
ss
xchg
or
sub
adc
loop
fnsave
ljmp
dec
cwtl
dec
cmp
mov
jmp
fisttpll
mov
or
scas
loopne
add
stc
test
popf
daa
out
sub
loop
sub
xor
push
mov
adc
cmp
ret
cmp
loopne
rcrl
lods
dec
iret
fsubl
clc
cmp
xchg
or
data16
in
pop
lret
repnz
scas
shl
hlt
xchg
pop
push
fsts
adc
in
jg
pop
xchg
imul
aad
and
std
aaa
les
or
setg
xchg
mov
mov
rcl
insl
sub
pop
pop
sub
xor
mov
pusha
or
in
mov
sub
into
lar
mov
sub
jmp
xchg
js
setg
cli
jno
mov
cmpl
mov
xor
push
mov
add
aam
and
mov
cltd
loopne
sbb
add
shll
dec
repz
mov
mov
lods
add
les
cmp
rcrb
push
mov
add
cmp
sahf
iret
sub
dec
inc
clc
xor
xchg
in
xor
out
inc
daa
pushf
gs
mov
xchg
or
in
stos
in
jmp
inc
add
and
mov
mov
cmp
mov
pop
lods
sbb
movsb
jl
and
lret
or
imul
lds
fmull
ljmp
inc
pop
sub
push
enter
mov
xorl
xor
mov
cmp
jge
inc
pusha
or
insl
jp
fucomip
scas
fs
jmp
into
scas
push
sub
pop
cmp
outsb
push
mov
outsb
in
cltd
in
mov
test
int
or
mov
or
in
lods
shrl
cwtl
fwait
rclb
cli
mov
push
pop
cltd
sahf
in
sbb
jns
mov
sub
in
sub
mov
aam
inc
jp
inc
das
sbb
lods
or
mov
in
mov
pop
mov
push
dec
sub
push
sub
rorl
push
xchg
jp
push
pop
mov
lahf
scas
cmpsl
insb
xor
inc
jb
push
mov
clc
jb
test
dec
popl
xor
in
cli
loope
lahf
jmp
call
sbb
jecxz
pop
enter
jns
insl
mov
cmpsl
xchg
jecxz
mov
fs
mov
cwtl
mov
in
stos
imul
arpl
adc
lods
cs
daa
dec
jb
pop
lea
push
loope
mov
cld
cmc
loope
and
sbb
push
mov
divb
sbb
arpl
imul
gs
jb
xor
adc
and
insl
fistps
push
lds
loope
push
leave
leave
add
mov
jno
inc
cs
movsl
fdivrp
mov
ret
xchg
or
scas
adc
mov
out
ljmp
add
int
les
sbb
test
ficoms
dec
add
lea
sub
fnsave
pop
or
mov
pop
xlat
psubw
lcall
push
xchg
jecxz
int3
loopne
insb
xchg
arpl
movsb
fs
cwtl
test
fimull
mov
mov
ljmp
mov
inc
sub
ds
lods
shll
outsb
sub
jo
fistpl
mov
iret
out
pop
sarl
je
roll
or
lock
adc
jb
sbb
inc
add
pop
adc
dec
cltd
subl
mov
scas
xor
in
popa
xor
and
or
mov
sbb
jg
xchg
mov
jns
lock
inc
push
jb
lods
jmp
dec
pusha
divb
orb
xchg
lret
lea
mov
cmp
inc
push
xchg
sbb
or
push
mov
add
jle
aad
dec
scas
lret
jmp
arpl
shl
sti
inc
cmpb
inc
or
mov
push
jg
fldt
add
and
xorb
fbld
into
cld
cmpsb
leave
imul
iret
ss
sar
fdivrp
or
ja
push
mov
outsb
in
les
cmp
loope
dec
lea
lret
imul
dec
rorl
cli
add
inc
sub
mov
adc
fsubs
daa
add
test
or
push
mov
repz
inc
fidivrl
xor
jecxz
push
das
ljmp
mov
aam
dec
mov
mov
fucomi
cld
cwtl
add
mov
roll
push
loop
in
adc
xchg
xchg
inc
adc
nop
fiadds
shlb
xchg
inc
mov
jge
cs
es
inc
jge
and
popf
xor
jae
xor
mov
cmp
in
arpl
push
xor
pop
div
jns
mov
add
ds
push
ljmp
adcb
inc
scas
sar
mov
and
mov
mov
das
sub
sbb
mov
stos
lods
vxorps
cmpsb
aaa
jle
lock
mov
mov
aaa
pop
out
bound
lea
push
stos
ljmp
inc
aas
fcoms
cmp
ret
mov
lea
mov
xor
lds
stos
aam
jmp
push
sbb
cwtl
std
testl
cmp
stos
test
sbb
fs
push
loop
sarl
sti
mov
fisubrl
mov
mov
add
push
shll
sbb
add
sti
into
sbb
mov
mov
and
out
jge
cmpl
pinsrw
test
jb
mov
mov
xchg
add
cltd
sub
jl
cmp
xchg
push
mov
inc
mov
inc
mov
xchg
jnp
xchg
sub
mov
jmp
xor
xchg
jmp
mov
push
in
mov
sub
pop
push
dec
ljmp
lea
lahf
idivb
loop
shrb
mov
scas
clc
dec
push
add
cmp
adc
es
cmp
je
xor
insl
rorb
nop
xchg
cmp
mov
and
xor
adc
cmc
ja
adc
test
out
insl
arpl
das
int3
pop
cmpl
push
rorb
popf
push
stos
inc
test
mov
das
clc
sub
fisttpl
lds
add
inc
lds
fmuls
clc
sub
sbbb
mov
daa
xor
test
std
inc
lods
insb
outsl
cmp
sub
or
pushl
cmpsl
shr
cwtl
add
jp
pop
xchg
cmp
xchg
shrb
xchg
mov
adc
testb
xor
ljmp
fists
stos
push
in
push
rol
dec
loope
lret
sub
or
cmp
cmc
or
int3
sahf
mov
push
xchg
and
daa
jbe
pop
mov
aas
int
int
lods
cld
mov
adcb
ret
test
cld
mov
mov
mov
adc
push
sbb
push
je
jp
rcrl
xchg
sbb
pop
inc
insb
sbb
add
test
mov
jne
mov
out
lcall
xorb
ljmp
xchg
nop
and
and
cmp
fnsave
cld
scas
cmp
aad
sahf
outsl
nop
cmp
dec
jb
out
sub
jbe
pop
movsl
dec
pushf
out
cmp
into
lret
push
iret
sbb
scas
mov
mov
adc
add
insl
push
push
rclb
jno
orb
ss
inc
pop
lock
pop
in
jne
scas
sbb
push
movsl
out
inc
test
ja
insb
mov
xchg
nop
cs
nop
movsl
jo
xchg
popl
mov
inc
sbb
lock
xor
rorl
out
xchg
lcall
xchg
test
aam
sub
xlat
inc
or
out
bound
fnstcw
cmp
loope
cvtdq2ps
or
push
outsb
xchg
lods
ljmp
or
mov
aaa
daa
dec
les
in
sub
mov
mov
cli
push
jp
dec
inc
adc
mov
jmp
and
push
or
dec
sub
dec
ss
lds
mov
loop
and
mov
inc
or
pushf
mov
in
cmp
xor
ret
jmp
cmp
fldl
add
repz
push
mov
xor
and
int3
push
push
movsl
insl
push
decl
add
xchg
cmp
cmp
fisubl
imul
test
mov
pop
jbe
pop
rorl
call
stc
and
mov
jecxz
push
dec
sub
fcom
lods
pop
test
xor
sbb
lock
and
mov
ja
mov
test
mov
cld
sbb
lock
gs
sub
cli
arpl
mov
insl
adc
mov
scas
fsubl
sbb
shlb
inc
sub
aaa
popa
std
mov
movsl
loop
xchg
xchg
push
ja
add
jge
dec
cwtl
fbstp
jl
stos
adc
mov
ds
cmpsb
add
in
movb
xchg
data16
pop
call
xchg
jns
xchg
xchg
fs
xlat
push
aam
mov
mov
fcmove
mov
ret
mov
imul
push
sbb
mov
jg
add
ja
ret
cmpsl
nop
inc
inc
sbb
mov
mov
xlat
xor
lods
add
sahf
xchg
ret
pop
pop
pop
mov
cmp
pop
mov
stc
out
push
push
leave
and
lods
aas
adcl
sub
js
push
dec
jmp
cltd
insb
xchg
in
mov
fxch
pop
cld
mov
push
dec
dec
and
cld
cwtl
mov
jo
or
stos
sbb
dec
out
cmp
cmp
jp
mov
ds
bound
mov
pop
shrb
cli
into
inc
jno
aaa
test
mov
mov
mov
repnz
fmulp
jnp
dec
cwtl
jb
mov
sahf
mov
lods
dec
stos
test
mov
or
push
jecxz
setb
inc
dec
jmp
mov
mov
inc
stos
stos
fimuls
insb
pop
aaa
out
flds
insb
mov
pop
das
xlat
mov
dec
cmp
gs
push
mov
adc
mov
xchg
pxor
sbb
add
or
aam
mov
stos
clc
adc
arpl
xchg
setb
ret
and
iret
fisubs
mov
fmul
sbb
adc
fnsave
push
jmp
ljmp
cwtl
lcall
cmp
push
ret
add
mov
sti
pop
add
or
pop
add
insl
pop
into
das
imul
jmp
push
mov
test
daa
jmp
mov
cld
mov
ficomps
mov
test
mov
gs
adc
pop
insb
xchg
insl
push
mov
add
lret
cmp
fucomi
jle
mov
fisttpl
cmpsb
adcb
adc
lods
pusha
ss
add
es
cmp
mov
scas
inc
xchg
shlb
lea
xchg
adc
ffree
faddl
jbe
mov
pushf
jmp
fstpt
jno
add
pop
or
dec
fistpll
mov
iret
xlat
repnz
mov
cmp
mov
cmp
jmp
pusha
test
push
fiadds
imul
adcb
mov
dec
in
mov
sahf
movsb
fisubl
pushf
push
mov
push
mov
adc
inc
sbb
sub
and
or
xchg
sub
adc
add
sub
or
xor
int
xchg
mov
out
inc
or
bound
scas
add
jmp
sbb
mov
mov
call
or
insl
inc
push
sti
mov
push
inc
add
mov
pop
outsb
xchg
mov
fnstenv
icebp
clc
test
mov
rolb
push
mov
subb
bound
inc
xchg
push
sbb
jo
leave
sub
add
or
jmp
mov
rorl
push
adc
notb
jle
mov
loop
cld
iret
in
insl
addr16
aas
add
mov
cmp
stos
jg
aaa
pop
sbb
insb
rorb
adc
iret
dec
call
dec
or
jno
sbb
insb
sub
test
jl
sbb
sub
imul
and
icebp
rcrl
data16
cmpb
push
sub
pop
cmp
fidivl
fwait
popf
insl
mov
lret
jecxz
mov
sub
nop
add
push
jecxz
cmp
adc
dec
stos
cwtl
scas
pop
hlt
fcoml
inc
call
cs
pop
jp
mov
subb
add
xor
stc
ds
mov
pop
mov
mov
cs
or
dec
mov
push
mov
fimuls
cld
jge
lea
pop
mov
dec
adc
dec
push
mov
xchg
or
sbb
lods
push
mov
xchg
mov
sbb
sahf
shlb
and
push
shrb
mov
jg
lcall
test
push
jbe
mov
cwtl
shl
sub
or
inc
imul
dec
fcmove
repnz
into
or
jmp
cmp
adc
lods
push
fistl
nop
push
push
xchg
push
and
stc
arpl
mov
push
jnp
sti
lods
mov
pushf
jmp
sub
adcb
xchg
mov
lods
push
ret
fmull
subb
in
mov
mov
fmul
rol
push
dec
inc
lock
cmp
lods
dec
mov
sbb
andb
mov
pushf
push
mov
shl
and
lods
xchg
sbb
mov
in
mov
enter
dec
push
jp
add
push
sbb
adc
mov
xchg
scas
inc
or
in
xchg
sarl
les
decl
xchg
jmp
mov
adc
dec
pop
fldl
mov
push
ja
pop
jno
push
jl
cs
dec
pop
leave
ja
inc
mov
sti
orl
inc
lods
or
add
cli
lret
movsb
adc
adc
mov
push
rorb
mov
ljmp
mov
sbb
mov
lret
mov
mov
loopne
out
lds
sbb
jno
inc
inc
lock
scas
idivl
loop
divl
jecxz
mov
in
or
ret
aad
or
enter
sbb
ds
jecxz
adc
jo
test
incb
es
dec
popf
mov
addr16
not
mov
jmp
mov
movb
insb
adc
stc
pop
inc
fldcw
and
lcall
cmpsl
mov
pop
lret
int3
xor
fisubrs
out
mov
mov
sahf
xchg
jb
and
push
ja
fidivl
rclb
or
xchg
xchg
jb
cwtl
jecxz
ljmp
mov
xchg
jb
popa
sub
ret
repnz
outsl
repz
andb
lcall
stos
std
mov
sub
std
aas
adc
test
bound
mov
cmpb
shll
sbbl
sbb
fisttpll
cwtl
fbld
mov
and
pushf
aas
stos
xchg
idiv
adc
bswap
arpl
iret
xor
mov
jle
addb
out
sbb
cwtl
insb
shrl
icebp
sub
inc
or
or
mov
out
push
jecxz
dec
push
jbe
pop
das
sbb
mov
sbb
loop
jae
or
dec
add
aam
scas
psraw
dec
sbb
add
adc
cmp
iret
ss
subb
mov
dec
mov
outsb
outsl
imul
and
lahf
jg
jmp
shl
iret
fistps
xchg
loopne
or
add
ret
xchg
fcmovne
sti
push
mov
test
popf
sbb
test
xor
cmp
mov
in
aaa
les
out
lods
cli
sbb
fstpl
push
popa
cmp
pop
repnz
sbb
sub
add
jb
sbb
lds
popa
fnstcw
cmpsb
bound
cmp
xchg
out
mov
xchg
xchg
lock
or
std
push
das
jb
bound
add
add
dec
shlb
stos
or
add
xor
xchg
aad
cmpsb
lock
mov
cli
pushf
sbb
out
lret
adc
ret
por
ljmp
inc
and
pop
add
or
cmp
subb
pop
sub
fadds
and
insw
mov
stc
push
dec
mov
adc
ja
push
adc
sbb
mov
std
pop
dec
xor
xor
les
dec
fists
push
adc
xchg
mov
ret
cmp
sbb
dec
pop
fwait
adc
les
mov
fcmovbe
sbb
call
insb
pop
inc
fsubs
ss
ror
or
fistpl
sub
inc
call
test
insb
or
frstor
outsl
pop
iret
pop
add
xchg
sarb
outsl
scas
add
lcall
xchg
mov
and
or
jmp
call
xor
xor
iret
gs
outsl
adc
mov
jmp
or
sahf
mov
out
cmp
cmc
xchg
xchg
xor
nop
in
push
fwait
dec
test
add
jle
idivl
shrl
iret
mov
data16
and
mov
call
outsb
inc
out
xor
mov
inc
mov
jmp
jns
and
mov
dec
add
adc
sbb
xchg
mov
push
aaa
mov
test
pop
inc
cmp
movsl
arpl
popa
mov
adc
mov
popa
cmp
loop
cmc
in
frstor
jno
mov
dec
jle
ror
ret
inc
outsb
or
adc
repnz
test
push
int
xchg
mov
mov
sub
in
cltd
push
add
mov
jb
in
jo
testl
insl
mov
dec
repz
cld
jge
mov
cmc
dec
lahf
inc
inc
roll
jg
add
mov
inc
add
inc
imul
cld
mov
mov
mov
repz
mov
scas
cmp
mov
ss
in
insb
jo
orl
hlt
andl
jge
add
push
test
dec
push
test
out
and
sti
test
cmp
fmul
imul
cltd
mov
je
shl
leave
pushf
sbb
movsb
mov
ret
dec
mov
out
repz
ret
add
bound
sbb
sbb
xchg
inc
ljmp
lret
mov
popa
add
cmp
inc
stc
outsl
in
dec
subb
xor
call
int
or
fstl
add
pop
or
mov
es
push
mov
or
dec
pop
and
in
push
arpl
inc
stos
sub
iret
mov
adc
jl
add
xor
mov
ret
or
push
push
rorb
sti
outsl
push
nop
add
sahf
pushf
jecxz
mov
mov
xlat
or
lock
sbb
mov
insl
in
dec
fstl
mov
pop
out
cltd
adc
enter
pop
xchg
jecxz
pushf
pop
xchg
dec
mov
sbb
std
jmp
sbb
rclb
adc
jp
ja
mov
cmp
adc
sbb
aaa
pusha
cmc
add
and
arpl
xor
testb
jns
iret
into
lods
jmp
pushf
dec
jg
jge
jmp
addr16
cwtl
ljmp
ljmp
ja
pop
push
in
sub
jecxz
sub
ficoml
adc
into
jecxz
xchg
xchg
shlb
push
mov
jnp
cmp
imulb
inc
hlt
aaa
jge
xor
lahf
das
mov
pop
cld
xchg
adc
or
or
leave
sbb
rcll
xchg
flds
cmp
xchg
daa
aas
add
xlat
dec
add
shll
or
inc
arpl
pop
cmp
ret
std
daa
stos
mov
xchg
cmp
mov
mov
mov
sub
xor
popf
mov
xor
sub
mov
out
mov
jl
movsb
int3
js
inc
adc
mov
lods
push
scas
sbb
clc
mov
out
xchg
push
xor
jo
ficomps
bound
sarl
sub
sub
inc
mov
stos
mov
or
sbbl
adc
xchg
push
push
add
fistpl
sahf
ffree
xor
or
push
jo
ret
repz
xchg
dec
aam
sbb
lds
sbb
jo
lea
out
shrb
jne
int3
sbbl
sbb
stos
jge
adc
inc
xchg
sub
or
inc
sub
sbb
stos
test
stos
insl
into
je
xor
push
dec
lods
lds
loop
out
call
pop
shll
push
movsl
shr
add
ret
mov
or
adc
data16
out
in
inc
or
lcall
cli
lods
daa
or
into
or
aam
push
aaa
pop
sub
adc
nop
add
dec
cmp
or
in
into
xchg
fcompl
mov
pop
add
jno
les
pusha
mov
lcall
lods
push
in
and
sti
or
mov
push
sbb
inc
loopne
or
xchg
pushf
mov
jne
stc
xor
loope
ss
sub
adc
data16
pop
outsb
aam
lcall
cwtl
dec
mov
jae
popa
jae
or
adc
xor
fcomp
nop
es
mov
cmpsl
fstl
out
jno
aam
aaa
ret
xor
xchg
rclb
mov
call
pop
enter
loop
xlat
or
dec
stos
arpl
sbb
sub
cmpsl
maskmovq
imull
or
push
xchg
mov
push
fists
mov
add
adc
movsb
dec
dec
rcll
fnstcw
repz
stc
pop
sub
ljmp
mov
xlat
mov
push
sub
cmp
out
jmp
mov
ss
pop
daa
or
mov
stos
mov
sti
jecxz
leave
out
insl
pushf
mov
ret
and
sbb
stos
mov
out
inc
daa
xchg
outsl
loop
jb
fwait
scas
mov
popf
pop
mov
ds
xor
xor
addl
outsb
aad
xchg
out
xchg
or
lret
fimuls
or
loop
sbb
dec
xchg
orl
cltd
pop
pop
and
and
sbb
dec
out
das
pop
adc
out
in
or
sub
add
int
lcall
outsb
cmp
push
push
sbb
setg
data16
stos
or
jne
pop
rolb
fs
cmc
ljmp
pop
arpl
outsb
jecxz
mov
ficompl
adc
test
and
cmpsb
nop
xchg
push
sub
dec
cmpsl
dec
pop
ficoml
addl
mov
loopne
sbb
mov
xor
inc
xor
push
inc
xchg
jae
lea
or
mov
lcall
rorl
cmp
loopne
mov
testb
fldenv
filds
xlat
out
fcom
pop
sbb
les
push
popa
sahf
inc
shr
or
aad
jns
clc
addl
pop
ret
jne
jle
xor
int
pushf
bnd
cmp
sti
sti
bound
frstor
lods
mov
sub
jg
mov
mov
orb
scas
scas
lcall
imul
lcall
test
iret
and
or
dec
cmp
lods
mov
stos
rorl
stos
push
sub
and
cld
lahf
mov
aas
rorl
into
pop
push
addb
int3
cmp
sarl
cmpb
rorb
pop
arpl
cld
lahf
mov
sbb
mov
and
cld
fs
inc
and
push
icebp
enter
movsb
cmp
sub
sub
dec
xchg
out
loop
dec
in
push
and
cld
mov
xchg
jge
jg
nop
mov
sbb
add
pop
bound
cmpsl
jge
cwtl
les
xor
jle
leave
dec
daa
push
jp
xor
cmp
aaa
adc
mov
jle
lods
in
adc
in
into
stc
jmp
pop
les
push
push
sbb
pop
cmp
add
push
mov
inc
or
jmp
lea
dec
cwtl
jecxz
popa
xchg
iret
jmp
ret
jb
out
jecxz
xchg
jmp
or
stos
mov
adc
ljmp
inc
jecxz
mov
sbb
stc
push
add
mov
xchg
fsubl
pop
xchg
mov
movsb
test
dec
out
ja
sub
movsb
mov
mov
mull
scas
mov
data16
inc
rol
ja
lea
xor
sbb
sub
das
in
stc
pop
leave
cld
imul
adcl
adc
and
inc
inc
push
dec
inc
mov
jnp
mov
lea
stos
pop
scas
fcmovnu
jnp
daa
or
fwait
mov
ja
sbb
xor
loopne
xchg
shlb
push
pop
xor
dec
xchg
sbb
in
ret
ljmp
jmp
jg
aam
mov
shlb
pop
fisubrs
xchg
stos
in
popa
mov
das
mov
rorl
ss
and
popa
mov
adc
loop
mov
add
push
push
out
jmp
outsb
rcrl
call
mov
dec
into
xlat
call
mov
mov
pop
ljmp
mov
or
sbb
insl
sbb
cwtl
mov
popa
cltd
pusha
int3
fisubrl
jmp
dec
jno
pop
aas
cmp
add
mov
push
fldl
adc
in
lcall
test
orb
inc
adc
push
cli
decb
push
rcl
je
adc
xor
or
rclb
dec
lret
movsl
stos
mov
out
or
sbb
nop
sahf
pop
mov
pop
out
sub
mov
cmp
adcb
mov
add
std
cs
push
jae
fs
clc
xchg
lsl
pop
lahf
inc
aam
in
jmp
ret
mov
or
movsb
dec
xchg
in
clc
xchg
bound
pop
movsb
cld
out
frstor
aaa
sub
repnz
xchg
inc
adc
mov
pop
cmp
mov
mul
lods
popf
mov
cmpsl
jbe
mov
xor
pop
or
aad
lea
dec
rcll
in
int3
mov
pop
sub
push
cmp
mov
iret
clc
aad
gs
cs
and
push
and
lods
movsb
insl
fs
add
push
inc
pop
movsl
xor
sbb
jge
push
xor
faddl
adc
lret
mov
fisubrs
sahf
fs
sbb
lret
jmp
mov
xchg
xchg
push
dec
xor
pushf
lock
outsl
sub
cld
in
push
push
flds
arpl
imul
sysret
push
aam
mov
loope
insb
andl
pop
push
insb
adc
mov
mov
jecxz
ret
cltd
jmp
jno
sahf
cmpsl
dec
push
rcrl
adc
jle
scas
cltd
add
lea
add
inc
sbb
aas
lods
fwait
lret
rcll
cli
sti
inc
cwtl
cmp
sub
or
popf
lock
adc
sbbl
jecxz
or
mov
out
je
mov
lea
xchg
add
dec
inc
imul
add
xchg
inc
lea
mov
push
cmp
loop
push
xchg
pop
out
adc
jmp
int3
in
sub
inc
sbb
fildll
les
sbb
bound
jmp
imul
scas
mov
in
or
adc
add
dec
jns
inc
mov
add
mov
mov
subb
enter
je
inc
divl
mov
mov
aas
mov
push
call
repz
inc
or
mov
jge
mov
and
out
add
xor
loope
push
arpl
dec
cmc
test
jmp
out
mov
mov
inc
fidivl
jp
out
push
push
ljmp
and
aaa
subl
and
mov
jno
subl
cmc
mov
lea
cmp
xlat
dec
idiv
enter
pop
jo
fldl2t
adc
icebp
mov
mov
fidivrs
es
mov
mov
mov
addl
into
in
out
lods
adc
ja
in
lea
js
insl
fsubl
pop
inc
mov
or
fisttpl
add
jle
ret
fsubs
scas
pushf
mov
rcr
jb
mov
jl
mov
ljmp
mov
scas
or
push
leave
fsubrl
mov
icebp
jmp
daa
xchg
jbe
imul
cmpl
pop
xor
mov
xchg
push
ficomps
test
and
jmp
push
jecxz
cmp
pop
aaa
pop
ja
xor
mov
rclb
mov
dec
jge
push
push
cmpsb
ljmp
repz
inc
jb
mov
icebp
push
sub
push
inc
lret
ss
sarl
popf
ja
push
cmc
xchg
push
mov
jmp
cmp
adc
sti
jo
stos
xchg
dec
inc
jb
jle
loopne
adc
call
xchg
in
sbb
mov
sub
fs
test
aaa
sub
in
cmp
or
adc
and
lret
jg
sub
inc
mov
sbb
fucom
leave
dec
mov
jns
in
push
mov
rorb
loope
mov
cld
inc
adc
xchg
mov
out
mov
inc
jmp
and
lret
rcrb
xchg
into
movsl
or
stos
adc
jecxz
rcll
faddl
xor
xchg
nop
sub
pcmpgtb
adc
int3
cld
js
mov
mov
dec
out
adc
insb
jle
rol
les
cmpsb
push
das
or
mov
les
das
out
movsb
xchg
iret
dec
inc
test
test
cmp
dec
push
xchg
sub
jle
add
popf
cli
xchg
xchg
xchg
jnp
ss
lods
pushf
xchg
fsubrs
ljmp
xor
imul
xchg
jp
pop
sahf
adc
outsb
pop
sub
hlt
sbb
out
loop
pushf
out
inc
rorb
cltd
pop
ljmp
mov
popa
xchg
jge
push
adc
repz
push
jns
sub
sub
xor
insb
mov
adc
out
stos
sub
or
int3
xchg
and
aam
hlt
inc
aaa
inc
mov
stc
xor
jbe
add
test
mov
test
dec
fsts
adc
faddp
dec
std
insb
arpl
push
repnz
ret
mov
pop
movsb
das
loopne
xchg
cmpsl
or
loop
cwtl
call
repnz
loop
or
or
pop
adc
sub
mov
out
lret
aad
cmpsl
test
ja
or
rcll
and
jbe
mov
xor
in
je
bound
stc
jno
jmp
mov
dec
adc
inc
clc
ret
push
out
or
je
fldenv
lods
jmp
loopne
mov
int3
sbb
xchg
fwait
dec
cmp
add
dec
adc
push
sbb
fs
fimull
jno
pop
jo
mov
pop
dec
into
cmp
mov
hlt
fistpl
ret
ret
lcall
jmp
and
inc
pop
fwait
icebp
jno
movb
sub
mov
out
and
add
cmp
mov
repnz
xchg
ss
mov
enter
inc
in
arpl
inc
xchg
push
stos
xchg
loopne
or
cmc
pop
leave
inc
shlb
cmp
dec
dec
jbe
test
and
adc
adc
sbb
mov
jbe
mov
f2xm1
aaa
repz
mov
fisubrs
insl
fisttpl
testb
movsl
xchg
sub
daa
gs
adc
sub
gs
mov
jmp
mov
mov
movsb
daa
inc
pop
gs
xchg
add
cmp
push
adc
repz
sub
inc
or
push
sahf
mov
push
or
out
dec
into
xchg
mov
cmp
mov
mov
adc
cld
inc
adc
adc
test
sub
jecxz
cmp
imul
jmp
movb
or
in
les
sbb
into
loope
in
sarl
cmp
loop
mov
sbb
inc
sub
call
and
into
mov
out
mov
mov
ret
sub
push
mov
push
lret
out
mov
arpl
loop
jmp
int
sub
jle
shll
mov
adcl
pop
fwait
cmpsl
pop
rcrb
sarb
cmpb
and
mov
and
and
xlat
jmp
dec
int3
add
fildll
cmpl
mov
push
lret
cmpsb
sub
fistpl
lcall
xchg
cltd
lock
sarl
xchg
or
popa
adc
push
jb
neg
inc
and
inc
pop
shlb
xrelease
test
fmul
add
popa
and
rol
xchg
push
add
mov
faddp
lcall
pushl
push
push
cmpsb
dec
and
adc
into
insl
xchg
mov
call
stos
push
mov
loope
jmp
pop
jno
dec
sub
mov
xchg
addr16
stc
in
cmpsb
push
clc
or
adc
mov
pop
jne
clc
mov
in
mov
add
in
movsl
ljmp
jo
mov
xchg
cmp
cmp
icebp
add
std
ss
aas
jne
xor
xor
scas
xorl
jmp
subl
lahf
ret
add
out
pop
rol
les
mov
xchg
jo
pop
add
inc
or
hlt
out
ret
add
lret
cmovo
sub
test
adc
out
fdivr
enter
in
clc
sbb
inc
roll
outsb
lods
jmp
xchg
int3
ds
xor
sarl
lock
shll
mov
dec
aad
or
sub
jmp
dec
ret
xor
mov
cmp
es
cmp
mov
lret
sbbl
mov
pop
xchg
aas
mov
lea
lret
pushf
or
adc
mov
movsb
mov
jp
mov
mov
sbb
or
fs
dec
adc
in
loop
xor
lea
xchg
xchg
hlt
pop
cltd
sub
jecxz
pop
subl
pop
mov
mov
mov
sbb
mov
sub
out
movsl
addr16
loop
add
test
orl
and
xchg
ret
jmp
sarw
fninit
or
mov
movsl
xlat
add
movsl
pop
leave
dec
mov
or
mov
jl
jmp
in
mov
leave
mov
ret
imul
out
out
and
mov
lods
lods
in
push
or
subb
inc
arpl
mov
jo
xor
pop
or
cltd
punpcklbw
insb
ret
or
fnstenv
ret
inc
add
cmp
in
push
or
or
jl
loope
orb
push
jp
xor
fchs
scas
mov
mov
push
dec
sbb
pop
add
lods
pop
dec
ds
ret
sarl
call
jbe
lock
ja
jmp
mov
lret
sbb
divl
cmpsl
push
jb
dec
ss
gs
jp
ja
pop
into
add
jae
test
dec
mov
mov
addb
sub
mov
push
and
test
std
sbb
lods
mov
sub
inc
cmpsb
mov
sbb
sub
addr16
int
mov
sub
add
xor
inc
imul
fdivr
push
sbbl
xchg
lea
sti
cmp
mov
mov
scas
mov
push
mov
mov
cmp
jl
push
add
push
push
lods
fwait
in
inc
ret
rol
xor
cltd
dec
sub
divb
dec
lods
mov
dec
jmp
lea
inc
push
sbb
pop
call
or
pop
cmp
or
mov
jle
shll
ret
dec
push
add
add
sbb
testl
std
mov
das
rorb
push
push
dec
fsubrs
mov
cmpl
mov
pushf
bound
jno
imul
out
xor
add
adc
inc
xchg
push
mov
mov
jecxz
mov
movsb
sar
sarb
aas
add
add
xlat
xchg
jg
inc
cli
cmpsl
cmp
jge
jecxz
mov
and
cmp
cmp
andb
mov
repnz
in
push
rcll
out
cmp
int
adcb
scas
dec
jecxz
lea
xor
mov
jge
outsl
xabort
aas
xchg
outsl
imul
sarb
add
insb
cmc
push
xchg
jecxz
mov
or
cwtl
sub
jge
pushf
dec
inc
pop
mov
and
xchg
push
cmc
dec
je
mov
pushf
add
jmp
push
lods
mov
les
dec
cmc
xchg
lahf
inc
lds
shr
xchg
pop
cltd
and
ljmp
jno
daa
in
in
push
sti
add
pusha
lahf
test
sub
xor
rorb
xlat
inc
adc
stos
mov
push
mov
pmaxub
shll
in
add
pop
leave
out
dec
adc
sbb
scas
lret
lock
repz
cmc
jp
pusha
xchg
vpminsw
xchg
shr
inc
cmpsl
jae
add
out
inc
pop
bound
cmp
lods
shll
mov
mov
xor
fstpl
lahf
lock
shlb
imul
fs
ret
pop
test
iret
jns
into
push
in
arpl
add
cmpsl
out
scas
xchg
and
ss
mov
lods
push
cmc
push
inc
jp
lds
in
sub
xchg
mov
sahf
sbb
xchg
push
insb
movsb
mov
aam
xchg
push
je
int
jge
pop
rclb
sub
daa
test
mov
movsb
cs
mov
les
mov
fwait
jo
push
fmull
bound
mov
faddl
sbb
inc
mov
sbb
in
ja
xchg
imull
js
aam
cmp
mov
sbb
and
sbb
sbb
xchg
sbb
lret
scas
jecxz
out
cmc
cmpsb
fisttpl
jb
cmp
jmp
xchg
sub
scas
leave
add
xchg
cmpsb
push
dec
not
push
lea
fisubrl
xor
rol
fs
ja
xor
sbbl
add
cld
sahf
lock
xchg
mov
mov
rolb
sub
mov
ljmp
xchg
repz
and
cmp
mov
adc
add
xor
in
push
enter
mov
and
ret
xor
and
mov
fnsave
add
arpl
mov
scas
jge
xor
cmp
inc
imul
push
mov
inc
test
scas
pop
sbb
push
jge
iret
negb
jmp
ret
lea
or
insb
xchg
mov
repz
dec
push
jno
cmpsl
inc
pop
or
cmp
stos
jo
or
add
iret
daa
adc
add
jnp
and
sbb
jb
cmp
in
sbbl
mov
adc
lods
call
stos
ljmp
pop
pop
or
mov
scas
das
jmp
fisubrs
mov
fwait
dec
sbb
shrl
dec
xchg
pop
adc
jp
loopne
xor
rcr
mov
pop
lods
movsb
incl
cmp
sub
loop
mov
mov
dec
shlb
push
and
insl
push
or
adc
cmc
mov
lock
cmp
pop
lret
sbb
jb
jno
mov
inc
clc
mov
or
mov
jns
sti
ljmp
sbb
mov
aas
or
imul
mov
cli
cmp
dec
fucom
jmp
popa
aam
jecxz
jne
clc
add
and
xchg
xlat
xor
sbb
mov
les
mov
ret
mov
pop
push
mov
sub
jle
lea
lret
inc
shll
sub
loope
sbb
les
mov
fldt
lret
mov
mov
pop
mov
ret
test
sbb
orl
xchg
jg
and
les
mov
daa
xor
cld
repz
mov
test
sbb
jmp
fisubrs
dec
fwait
push
mov
mov
push
push
popa
leave
cmpl
jo
in
test
pushf
int
arpl
sbb
xor
mov
lds
insl
popf
lret
cmp
inc
xlat
jl
ret
mov
cld
xor
fwait
xchg
jecxz
ljmp
add
dec
mov
cmp
insl
cmc
dec
sbb
scas
mov
mov
mov
mov
add
mov
fbstp
fsubs
lea
popa
daa
mov
xorl
imul
lcall
jmp
push
cmpsb
mov
gs
add
push
jno
enter
roll
popa
adc
ret
fcmovbe
imul
lret
mov
fcoml
dec
or
cltd
dec
das
movsb
loop
pop
mov
mov
clc
nop
mov
lcall
loopne
and
jle
pop
ret
jns
imul
pop
test
mov
sbb
sub
insb
sub
gs
popf
and
mov
bound
adcb
mov
mov
add
loope
es
mov
sub
dec
mov
dec
imul
ss
int
sbbb
mov
xor
add
inc
mov
hlt
jns
mov
mov
rolb
pop
pop
data16
sti
mov
lea
sub
pop
lods
mov
cmp
sarl
mov
sbb
lret
xchg
jmp
fldl
jns
cmp
or
jae
mov
das
loop
mov
adc
pop
bound
mov
xchg
cmc
xchg
mov
test
fmul
jp
pop
jbe
push
jl
xchg
jp
aaa
xchg
imul
dec
test
fsub
cmpsb
dec
and
dec
pop
or
mov
sbb
lds
or
jp
leave
repz
sub
pop
das
adc
mov
jmp
jno
add
addl
mov
int
mov
imul
movsl
cmp
mov
dec
or
or
lea
sbb
loop
decb
mov
dec
out
sbb
adc
cltd
and
mov
xchg
mov
xor
les
sbb
popf
jecxz
test
cmp
lods
shll
sub
addr16
sub
xchg
jno
xor
jecxz
cmp
mov
inc
push
sub
mov
mov
cmp
sbb
inc
fdivr
xorl
stc
or
add
cld
fisubrl
jecxz
mov
cli
mov
xchg
or
loopne
pusha
or
rcl
jae
mov
call
sub
mov
or
loop
loopne
insb
test
fdivr
lock
iret
shl
negb
jle
or
ror
push
cmp
jmp
ror
lret
jbe
aad
pop
bound
popf
xchg
stos
cmp
mov
fadds
dec
arpl
fidivl
xchg
dec
fidivrs
push
mov
leave
push
inc
pushf
cmpb
sti
lret
xor
xchg
lods
sub
mov
addr16
fs
cmp
rcll
int
adc
lock
xorl
addl
andb
arpl
xchg
insl
out
int3
inc
test
mov
scas
js
xor
cs
push
sbb
mov
test
les
je
jae
jne
and
bnd
push
repz
mov
push
stos
hlt
sar
sub
rcll
xchg
out
mov
les
ss
ret
into
add
jecxz
sbb
out
mov
jbe
orl
add
pop
les
movsb
stos
pushf
xchg
test
outsl
or
and
xor
push
jnp
jae
mov
sbb
jae
inc
rorl
inc
aad
mov
mov
sahf
sub
sarl
xchg
ljmp
fsubr
mov
jae
jns
lods
mov
pop
push
int
shl
rcll
mov
push
adc
inc
aad
fwait
int
add
in
jmp
rorl
arpl
mov
hlt
dec
adc
repnz
mov
out
mov
loop
test
mov
add
rcrl
mov
lods
out
dec
sbb
loop
dec
fdivl
pushf
inc
xchg
cmp
inc
mov
iret
test
lea
lock
pushf
aam
in
mov
xchg
dec
sub
arpl
push
cmp
mov
or
xchg
jle
iret
dec
int
out
arpl
dec
mov
or
mov
scas
repz
cmp
enter
mov
lcall
inc
and
loop
sarb
and
jmp
add
push
insb
push
mov
push
add
fs
out
xchg
push
xor
movsb
mov
push
jmp
stc
mov
xor
mov
push
xchg
sub
in
push
ja
fdivrl
adc
jmp
inc
push
jmp
cmp
mov
lds
idivb
in
sbb
xchg
mov
sub
xchg
ds
icebp
mov
ret
fadds
xorl
in
fcmovnbe
inc
popl
lock
and
and
inc
cld
pop
adc
ficoml
call
sub
mov
jecxz
sahf
out
test
outsb
mov
xlat
jo
dec
mov
subb
dec
mov
cwtl
je
jno
lea
push
andb
add
ja
outsb
les
daa
pop
cwtl
push
vpacksswb
ds
imul
gs
in
repnz
and
or
loop
cmp
xlat
cmpsl
jno
data16
das
popaw
inc
or
sbb
xchg
sub
test
fs
xchg
lea
lods
jle
add
jmp
cmp
inc
sbb
clc
lcall
into
repnz
mov
cmp
aam
xchg
sbb
mov
xor
pushf
call
inc
adc
adcl
ljmp
jge
dec
dec
mov
push
call
aam
sub
add
cwtl
xorl
mov
xor
pop
imul
pop
imull
int
movntps
xor
fildl
xchg
aad
movsl
mov
ja
adc
fs
leave
std
inc
lods
or
adc
std
jp
mov
pop
inc
xchg
js
in
ret
add
add
and
fisubrs
jl
sbb
jl
dec
wbinvd
enter
fcoms
testb
cwtl
stc
push
mov
test
push
and
sub
fsubl
test
mov
imul
mov
mov
push
and
mov
xchg
xchg
jg
sbb
pushf
insb
cmp
mov
pop
mov
fwait
outsl
lahf
adc
popa
push
inc
rcl
lcall
mov
scas
push
test
inc
and
mov
dec
or
mov
sahf
cs
imul
jmp
push
and
mov
lea
dec
sub
mov
dec
fiaddl
push
mov
adc
aaa
pop
dec
ljmp
ljmp
rcll
gs
cmpsb
popa
pop
and
pop
push
daa
sbb
scas
pop
mov
in
into
iret
inc
cld
rol
mov
mov
jmp
sub
xchg
aas
pop
push
dec
testb
jmp
push
cmp
in
out
jns
mov
mov
sti
pop
repnz
adc
xchg
in
mov
adc
ret
mov
push
xchg
inc
gs
pusha
push
inc
mov
test
fldt
inc
div
cld
js
bswap
ljmp
mov
cld
adc
pop
push
adc
jge
jne
sub
mov
lea
mov
adc
mov
idivb
adc
enter
movsb
mov
std
sti
lods
in
cli
data16
push
cltd
sub
jge
mov
xor
adc
out
mov
scas
mov
in
pop
cmp
jmp
and
mov
add
and
push
push
mov
in
mov
jecxz
fwait
sub
xchg
or
adc
stos
out
dec
sub
jg
es
leave
movsl
shlb
inc
daa
mov
add
lea
gs
add
arpl
xchg
insb
ss
jb
mov
jns
lea
mov
cmp
fidivrl
add
mov
xor
into
jecxz
mov
jb
sbb
cmp
mov
rcr
fidivrl
mov
pop
scas
divb
ret
sets
push
gs
mov
jno
in
dec
sbb
je
push
mov
mov
fistpll
pop
mov
cld
xor
adcl
jo
cmc
dec
jge
inc
test
mov
inc
mov
and
sub
xchg
lcall
add
cmpsb
out
cmpsl
cmp
add
xlat
mov
cmp
fstps
xchg
fnstenv
fwait
sub
in
shlb
cmp
std
push
subl
in
orl
mov
cmp
dec
data16
sub
xorw
inc
addr16
gs
mov
and
jle
pop
mov
movsl
nop
jne
outsb
insb
ret
cs
test
into
mov
jmp
xchg
fcomps
jl
add
add
cmpsl
xchg
inc
divl
or
cmp
lock
cmp
lods
dec
aad
pop
or
jbe
pop
jo
das
mov
fidivl
dec
into
aas
outsl
cmpsb
xchg
pop
and
cmp
push
push
call
mov
push
mov
rcll
nop
in
push
pop
lahf
shl
xchg
rcl
out
sarb
scas
add
lcall
xor
mov
in
pop
push
jge
push
push
jp
aam
mov
andl
stos
and
mulb
dec
push
and
xchg
or
mov
out
shrl
and
mov
adc
loop
jmp
cmp
je
push
rol
test
cwtl
pop
pop
nop
fs
inc
test
jbe
pop
cmp
or
ret
dec
filds
xorb
adc
push
cmp
jb
int
mov
cmp
mov
push
fists
addr16
in
arpl
mov
insb
cmpb
jmp
mov
shll
rcr
add
pop
shrb
fildl
stos
cmpsb
sarl
or
imul
sub
xchg
sbb
fcmovbe
dec
adc
iret
add
lea
out
in
in
pop
imul
insb
xchg
subps
clc
fstl
sbb
mov
insb
enter
addl
lods
xor
cmp
xchg
pop
iret
in
rcll
cmp
jo
outsl
addl
in
test
jmp
rcrl
shl
push
imul
cmp
insb
imul
cmc
push
cwtl
push
jle
lods
aad
mov
lods
rep
cld
daa
adc
jmp
call
mov
jmp
mov
adc
push
or
xchg
push
hlt
mov
add
inc
push
call
fs
mov
je
xchg
or
mov
sbb
into
sbb
adc
sbb
pop
adc
repz
cmp
or
rorb
mov
mov
ja
jo
sbb
mov
ds
jmp
loopne
mov
incl
cmp
inc
sub
addr16
xor
ljmp
cmp
adc
cmc
loop
and
mov
or
in
movsb
push
shlb
shlb
jmp
aam
xchg
mov
xchg
nop
pop
sarl
imul
scas
jbe
fcmovne
mov
add
mov
enter
movsb
fisttps
stos
aad
push
mov
xor
xor
loope
scas
add
movsb
dec
ja
xchg
mov
ret
jne
inc
jp
das
mov
pop
mov
push
daa
out
nop
lea
sub
and
movsl
lahf
lahf
sub
lcall
ret
adc
test
mov
inc
jl
shrl
inc
jmp
sbb
ret
cmp
cmp
sbb
mov
lods
js
dec
movsl
dec
mov
adc
jmp
sbb
xor
mov
ret
mov
pop
je
rorb
insb
add
adc
fimuls
std
roll
xchg
test
jmp
jb
shll
leave
jmp
inc
sahf
fldl
fs
push
mov
pushf
ss
cmp
fidivrl
cmp
mov
cmpsl
jge
aaa
jbe
and
mov
mov
add
xor
pop
shlb
out
and
xor
sti
sub
push
dec
outsl
movsb
cmpsb
test
sbb
sbb
ret
lods
test
fadd
nop
gs
sbb
jecxz
in
jle
loop
lods
jae
cmc
test
je
lods
sahf
jbe
or
pop
push
shrl
cmpsb
push
mov
pop
out
lods
daa
mov
mov
ss
mov
ret
test
and
jge
xor
push
xor
repz
add
scas
or
mov
fcoml
scas
cwtl
push
xor
loope
rcrb
test
rclb
jmp
shll
outsl
push
jecxz
xchg
shl
das
jl
cmpsb
pop
fisttpl
fnsave
bound
js
test
mov
aaa
add
mov
mov
gs
ljmp
pop
aaa
mov
mov
pop
faddl
lea
stc
cld
push
stos
int3
push
ret
outsl
loopne
icebp
dec
cltd
arpl
dec
adc
mov
pushf
test
mov
inc
jmp
xchg
pop
fdivrl
bnd
mov
xchg
pop
push
pushf
jmp
inc
xchg
cmp
mov
in
aam
or
fisttps
and
mov
jns
xchg
or
out
and
pop
jl
xor
or
movsb
movsb
lahf
adc
mov
push
mov
push
filds
lahf
cli
jp
rclb
jmp
fnsave
lods
or
push
xchg
xchg
sub
lahf
dec
jl
dec
cwtl
sub
inc
movsl
adc
pushf
sti
shll
sti
jp
icebp
test
stos
adc
addb
aas
es
enter
cmp
cmp
jp
fisubrs
or
inc
or
les
insl
lods
lods
pop
repnz
loop
xor
xor
out
and
mov
mov
cmp
sbb
pushf
inc
inc
fs
xchg
into
ss
xchg
push
fcoms
push
mov
nop
nop
or
test
xchg
aas
mov
jmp
shr
sbb
and
andl
pusha
cli
test
cmpsb
adc
jle
in
and
jae
mov
inc
popa
sahf
es
outsl
mov
mov
int
jb
mov
enter
lret
scas
pop
dec
jecxz
into
or
xchg
lods
mov
pop
sbb
mov
or
stos
cwtl
cli
or
xor
add
xchg
mov
cmp
mov
ss
add
int3
dec
ljmp
lock
jmp
sbb
insb
sbb
push
or
inc
and
fildl
cmp
sub
sub
movsb
mov
mov
test
insb
add
mov
pusha
scas
sbb
inc
adc
fcomps
pushf
mov
mov
test
mov
mov
loopne,pn
les
movsl
push
sub
add
call
pop
aaa
push
call
repnz
loop
subb
nop
push
repz
sbb
lahf
shll
loopne
sub
mov
sti
fwait
icebp
pop
cmpsl
cmp
rcrl
aam
into
and
clc
xor
stos
data16
add
mov
inc
dec
test
add
adc
adc
cwtl
sub
mov
fs
jnp
adc
in
pushf
andl
ljmp
pushf
aam
cmp
test
lahf
mov
mov
imul
adc
sti
adc
ljmp
or
pop
in
sub
movsl
xchg
and
xchg
push
in
xchg
push
xchg
enter
mov
add
jmp
dec
xor
push
pop
hlt
nop
or
cmpsl
lret
inc
dec
shr
hlt
cmp
shlb
mov
jge
insb
sub
mov
das
or
add
icebp
push
cmp
ficompl
push
add
out
push
mov
pop
scas
and
mov
mov
wbinvd
dec
mov
xor
pop
push
jmp
xor
popa
leave
cmp
add
cmp
jo
adc
push
arpl
or
test
popf
scas
or
mov
add
lahf
fisubl
inc
sbb
sub
jnp
andb
add
jb
scas
push
pusha
cltd
pushf
inc
push
mov
pop
push
mov
scas
gs
or
loop
mov
jle
lods
rcl
xchg
jecxz
imul
xlat
or
aad
int3
popa
jae
jmp
pop
decb
xor
xor
jl
fcompl
cs
push
scas
sbb
fldl
pop
xchg
imul
mov
mov
or
pushf
repz
pop
mov
out
cmp
lcall
and
stos
mov
xor
xchg
aad
enter
iret
popf
insb
sbb
clc
jbe
pop
add
jecxz
inc
ret
lret
out
mov
aad
jle
mov
repnz
cmp
rcrb
cltd
popf
call
inc
jge
adc
nop
fprem
fisubrl
fidivs
rorb
fwait
data16
test
js
or
fsubrs
xchg
cmpsb
or
imul
adc
jb
stos
lds
sub
add
cmp
mov
jnp
xor
popa
ja
push
cmpsl
lods
scas
idivb
sbbb
lds
fildl
inc
in
ds
xchg
scas
dec
cltd
add
out
mov
cmpsb
scas
imul
add
mov
xchg
adc
or
loop
xor
bound
pop
cmc
fcmovnbe
in
loop
push
push
or
adc
insb
pop
push
pop
cmp
loope
mov
jge
sbbl
sbb
jmp
call
lods
lods
xor
and
inc
jb
mov
jge
jge
ret
sti
jne
mov
les
sahf
pop
mov
lret
pop
das
or
dec
fisubl
in
seta
pop
xor
repz
pop
pop
test
popa
das
mov
and
rcl
aad
inc
jns
add
and
mov
inc
pop
aad
clc
call
ret
in
and
sbb
jb
push
mov
and
data16
or
cld
mov
xor
aam
sbb
jmp
sbb
rcrb
inc
gs
adc
test
dec
addl
add
cmpsb
cmp
jle
mov
jmp
xor
jnp
popa
xor
js
stos
pop
movsl
fcmovnu
test
push
fnstcw
lea
sbb
xlat
add
gs
jp
and
push
cs
push
shll
inc
pushf
testb
jmp
ljmp
shll
and
insl
rcl
jne
pop
mov
gs
rclb
repnz
fnclex
mov
cmc
jne
mov
loop
ljmp
fcomi
jg
adc
sbb
lcall
gs
mov
scas
nop
fsubl
cld
jno
push
cmp
xor
movsb
mov
pop
or
mov
mov
mov
push
or
mov
mov
ja
stos
pop
fnstsw
lret
pushf
mov
mov
divb
dec
dec
pop
dec
cs
add
fs
out
shll
add
adc
jns
push
and
hlt
adc
popf
leave
jne
dec
xchg
arpl
lods
cmp
ficoml
lods
fs
data16
or
or
mov
outsb
mov
xor
mov
lods
fidivl
iret
dec
mov
sub
scas
xchg
add
sti
adc
mov
sub
xorb
adc
jae
or
scas
adc
in
fisttpl
xor
cmpsl
inc
sub
ret
mov
jae
rorb
and
call
mov
inc
push
in
lret
push
fs
lahf
test
mov
stos
sub
das
or
sbb
test
jge
mov
popf
cli
movsl
lret
and
ret
bound
cmp
add
das
js
push
sub
sub
dec
mov
fucomi
aad
lea
ljmp
push
cmp
popa
push
pop
jmp
cmc
mov
out
stos
dec
and
mov
push
add
enter
sbb
cmp
popa
out
pop
call
insl
pop
and
mov
cmp
inc
inc
ss
das
sub
ss
lods
mov
jecxz
add
xchg
in
ret
cmpsb
cltd
stos
loop
aas
arpl
jae
cltd
sub
adc
pusha
sub
clc
fdiv
jecxz
mulw
mov
add
pop
pop
loop
mov
mov
inc
mov
push
jo
out
test
jecxz
mov
daa
lcall
cmp
add
xor
sbb
push
jecxz
hlt
outsb
int3
and
ret
enter
jle
push
xchg
shll
jmp
cmp
jecxz
push
sbb
push
cmp
sub
sbb
mov
push
xchg
or
in
sub
gs
loop
lahf
jne
mov
dec
lahf
xchg
in
push
push
cmpsl
dec
mov
das
lea
js
xor
pop
jno
xchg
shrb
mov
sub
out
insb
or
cmp
insl
mov
sbb
inc
mov
and
movsl
push
mov
xorl
inc
pop
scas
push
add
fbld
cld
dec
mov
lea
jne
and
mov
mov
movsb
xchg
push
aaa
jne
cs
das
inc
gs
sahf
and
test
jb
or
int
pop
mov
sub
jnp
ret
mov
lret
sbb
cmpsl
nop
les
daa
adc
sub
test
daa
lea
orb
jle
aam
or
sub
roll
sub
ja
jle
sub
dec
incb
mov
and
xor
xchg
stos
mov
xor
push
jns
pop
in
dec
mov
mov
and
pop
mov
js
and
insl
sti
hlt
insb
push
xor
icebp
cmp
aaa
lahf
jbe
jmp
adc
sub
xchg
xor
aam
mov
push
ret
das
stos
mov
idivl
push
lds
mov
sbb
cmp
test
cmpsl
loopne
or
repz
jmp
push
das
ss
mov
std
rcr
add
sub
insl
int
clc
les
loop
pop
cwtl
gs
cmp
das
or
xchg
add
fs
aam
lods
and
ljmp
mov
pop
jnp
mov
pop
sub
sbb
movsb
push
xor
jnp
mov
bound
arpl
add
cli
mov
inc
lret
les
xchg
or
pushf
jecxz
nop
scas
movsl
sti
sub
mov
gs
js
lea
mov
xchg
mov
add
fwait
lods
mov
mov
dec
pusha
mov
mov
or
pop
and
push
xchg
jp
stos
jecxz
fiadds
jmp
insb
mov
xorl
dec
pop
stos
or
dec
mov
decl
or
lock
xchg
dec
or
test
jmp
les
and
loop
cld
bound
scas
xchg
push
repnz
ja
fs
out
push
fucomi
jne
mov
jp
mov
nop
shll
and
lods
push
sbb
movsl
in
mov
inc
mov
lds
pop
push
sti
xchg
lods
rcr
cli
jmp
sub
jnp
icebp
or
ret
aaa
xchg
sbb
sub
out
cmp
loope
or
shrb
mov
std
lahf
int3
add
movsb
call
or
inc
push
lock
fdivl
arpl
movsb
icebp
fdivs
fsubl
imul
push
popf
rolb
out
addr16
int
xchg
xchg
andl
push
mov
mov
cmpsl
jae
dec
cwtl
pop
xchg
arpl
add
frstor
ret
test
dec
loope
aad
bound
ja
pop
mov
mov
mov
mov
jne
loopne
sub
push
les
scas
xlat
cmp
push
je
stos
add
mov
jne
push
push
cmp
lea
psrld
adcb
fsub
push
dec
daa
mov
xor
push
jle
xchg
out
sbb
pop
sti
fnstsw
mov
ja
shrl
scas
jmp
mov
dec
mov
sub
icebp
sahf
fisubl
xor
loop
cmp
add
test
ljmp
xor
int3
jle
and
and
in
add
test
arpl
or
out
sbb
push
loop
int
jnp
rol
sbb
test
mov
adc
cmc
out
adc
sub
jge
mov
aas
adc
adc
add
js
mov
adc
lcall
rorl
insb
mov
lods
cmpsb
bound
lds
lods
fwait
arpl
fprem1
addr16
mov
sub
cltd
test
jmp
inc
dec
clc
test
loopne
push
mov
lds
push
lds
shlb
xor
push
mov
lret
sbb
mov
dec
sahf
nopl
fnstenv
repz
test
fstpt
push
mov
adc
and
or
cmp
xor
js
jmp
mov
ret
call
divl
fwait
jo
pop
shlb
cmp
add
jmp
add
jbe
xchg
gs
dec
or
lods
ret
cmp
lea
rorb
pushf
mov
and
loopne
shrl
in
lea
jecxz
bound
in
cmp
mov
mov
mov
negl
jecxz
fildll
repnz
push
test
jmp
idivb
lret
lock
mov
jmp
or
aam
fldenv
leave
add
incb
lcall
movsb
nop
mov
push
cmp
fdivrl
rcr
repz
fsubl
lods
add
loop
jecxz
shlb
cmpl
mov
out
or
mov
data16
push
testl
insl
jp
or
dec
dec
mov
cli
pop
adc
pusha
in
nop
push
and
sarl
pop
ds
in
ret
into
int3
pushf
cs
push
aam
mov
fmuls
loope
push
aas
fsubl
cmpsb
je
lock
ret
testb
cmp
fisttpll
push
xor
fwait
xor
sbb
and
in
mulb
push
cwtl
xlat
test
aad
pop
xchg
mov
mov
popa
shll
or
bound
test
nop
push
nop
repz
xchg
std
pop
jns
sbb
xor
xor
dec
test
fadd
enter
mov
jbe
push
sti
jge
or
hlt
adc
xchg
and
jmp
cli
add
in
movsb
js
push
sbbb
pushw
mov
add
stos
shrb
or
sti
inc
sbb
xchg
xchg
inc
inc
icebp
dec
xor
popf
pusha
sbbb
mov
into
cmpsl
mov
xchg
inc
hlt
enter
es
jns
inc
mov
dec
je
inc
clc
mov
das
fs
test
and
lea
jmp
adc
ret
jb
cld
add
inc
les
add
ret
bswap
test
lock
js
xchg
mov
ss
test
ud0
cmp
jmp
add
lcall
mov
sbb
or
imul
xchg
fcmovnb
push
sub
fiadds
scas
dec
loope
mov
fnstcw
adc
xchg
aad
mov
bound
cmp
xlat
pop
movsb
xchg
push
xchg
sub
adc
xchg
subb
lret
call
shlb
data16
inc
imul
loope
xchg
inc
into
repz
sahf
push
and
inc
inc
mov
jae
pop
lahf
mov
test
mov
pop
gs
jecxz
mov
fistpll
and
pop
mov
out
mov
and
xchg
jg
cmp
sub
adc
popl
xchg
notl
pop
cmpb
out
mov
testb
xchg
inc
outsl
fmull
jecxz
ficoms
xor
sbb
fwait
in
mov
sarb
sti
lock
lret
mov
test
ficompl
iret
jne
movsl
sbb
sub
mov
dec
cmp
jno
lcall
fucomi
push
ljmp
stc
dec
lcall
fimull
mov
add
pop
add
inc
cltd
insb
fisubrs
pusha
xor
sar
lods
scas
jmp
insl
dec
and
aam
pop
aaa
jb
stos
push
pop
fnstcw
cmpsl
push
repz
and
repnz
cmp
shll
adc
inc
sub
out
inc
xchg
iret
inc
stc
jecxz
ret
mov
push
adc
xchg
ret
dec
in
sub
jae
or
test
mov
rcrl
pushf
fcmovb
jle
cmp
rcl
and
xchg
push
mov
sbb
dec
fs
xor
cwtl
adc
in
mov
loope
mov
shll
gs
and
mov
mov
push
call
xchg
dec
pushf
add
mov
xor
out
dec
or
lret
mov
dec
in
repz
cmp
add
arpl
mov
ret
shll
cwtd
cltd
insl
mov
leave
aam
and
add
sub
lods
pushl
adc
xchg
dec
enter
scas
or
pushf
scas
xor
arpl
xchg
popf
mov
jb
mov
mov
xchg
xor
mov
loop
mov
rcl
add
cmp
jecxz
test
jg
cmp
sub
mov
testb
pop
sbb
xchg
shl
out
fimull
ficompl
ret
push
stos
lds
ret
data16
sub
shlb
push
mov
push
loop
add
and
ljmp
dec
repnz
jno
ss
jbe
add
xchg
sub
movsl
mov
adc
fwait
inc
inc
pop
xchg
xchg
mov
pop
xlat
sbb
and
sarb
aam
jl
mov
inc
sbb
inc
test
arpl
stos
jl
clc
jp
aas
es
ljmp
out
packssdw
inc
aam
push
xchg
pusha
mov
test
dec
cld
and
sub
lea
push
out
add
push
repz
lods
push
mov
mov
pushf
adc
addb
das
xchg
movsl
push
add
fldcw
filds
mov
mov
mov
cmp
mov
or
sbb
push
sub
pop
jp
mov
je
je
je
xlat
aad
das
popf
pop
sub
dec
mov
mov
xchg
test
sub
arpl
mov
dec
sub
and
imul
mov
inc
test
dec
jmp
aad
and
add
xchg
rclb
mov
sub
movsb
push
push
push
std
test
lcall
jp
lret
xor
mov
add
xchg
icebp
sub
xor
fcmovnu
popa
inc
and
sbb
ds
mov
xchg
js
add
in
das
cltd
jbe
out
or
movsb
jns
jg
loop
xchg
and
cmpsl
inc
pop
push
test
mov
fstps
mov
sbb
or
mov
mov
sbb
stos
mov
xor
and
stc
mov
dec
out
cmp
xor
xchg
pop
stc
xor
dec
scas
add
loop
mov
push
outsb
inc
inc
out
ljmp
fidivl
out
inc
pop
sbb
mov
movl
dec
scas
push
ss
ret
ss
mov
xchg
rorl
push
outsb
pop
push
sub
repnz
mov
ja
pop
fisubs
and
stos
int3
rcll
dec
add
nop
pusha
sbb
repnz
sarl
or
fisubrl
out
stos
in
mov
loope
jb
int3
push
sbb
mov
lds
pop
pop
mov
push
sub
stos
cmp
xchg
sub
insb
jp
and
dec
dec
int3
enter
mov
mov
dec
and
in
lods
mov
jp
adc
mov
insb
in
rorl
or
xchg
pop
sti
cmp
mov
cs
push
sbb
sahf
repnz
xchg
ret
xchg
repz
cmp
pop
lret
inc
push
xchg
mov
mov
arpl
xorl
xchg
into
jb
jb
push
dec
mov
cmp
jbe
adcl
or
lock
test
mov
mov
xlat
and
cmp
addb
xor
xor
ss
cltd
popf
xchg
int3
jmp
mov
stos
xor
sbb
loop
ret
mov
mov
test
sbb
sub
mov
mov
mov
cmp
stos
insb
inc
cmpsb
std
jle
add
inc
and
movsb
mov
pop
push
mov
add
and
stos
add
fisttps
inc
adc
sbbl
pop
mov
mov
mov
xchg
orb
add
ds
adc
fidivrl
inc
fistpl
inc
fwait
test
push
cwtl
fwait
inc
ds
fucomi
sub
lcall
scas
adc
inc
xor
iret
mov
mov
call
pop
push
and
scas
pop
mov
fdiv
push
sub
lods
movsb
push
mov
pop
xchg
call
xor
dec
or
out
outsb
jmp
push
sub
xchg
jno
cmp
fldt
adcb
mov
and
inc
adc
stos
mov
in
scas
scas
enter
xchg
insb
dec
inc
add
fwait
dec
lods
cli
ss
cli
sbb
push
mov
sbb
outsl
or
mov
rcl
nop
fsubr
fisttpl
add
pop
cmp
xor
stos
mov
push
xor
and
xlat
stos
das
fistpl
or
sbb
jmp
cmp
sbb
stos
scas
out
push
or
jg
mov
stc
aam
arpl
mov
pusha
out
pop
xchg
mov
pushf
and
jae
jns
int
dec
mov
daa
mov
lcall
test
lods
lds
movb
ja
push
cmp
mov
ljmp
stos
sbb
cmp
popf
push
popa
cmp
stc
mov
xorb
into
ljmp
mov
fstpl
jne
clc
sub
dec
iret
aaa
loope
outsb
xor
jle
xchg
stc
shrl
in
les
lock
test
sahf
xlat
imul
sub
sub
sti
add
in
dec
mov
rcr
orl
sub
add
aam
and
sbb
sub
nop
out
cmp
mov
rorl
and
imul
out
xchg
pop
pop
dec
and
test
or
bound
add
mov
mov
add
inc
xor
inc
arpl
insb
sub
mov
test
push
cmp
push
fimuls
dec
bound
jecxz
add
idivb
xor
popa
jae
jmp
push
or
mov
imul
or
popf
mov
out
stc
das
je
loopne
jp
les
jp
mov
out
mov
out
mov
fcmovne
or
in
lret
push
cli
mov
and
in
or
dec
sbb
aaa
or
test
test
jo
sar
shrl
jb
iret
add
scas
pop
sti
in
push
push
push
mov
lock
movsb
sbb
clc
push
shll
scas
xchg
fcom
sub
or
ljmp
ret
push
and
add
repnz
adcb
or
cmc
pop
adc
or
sahf
in
int
cmp
jmp
in
shl
or
cli
push
ss
in
inc
fstpt
mov
cwtl
push
stos
mov
pop
out
aas
xor
daa
cmp
xchg
add
mov
dec
aaa
loopne
adc
dec
in
loope
shll
call
aam
cmp
ja
fcmovnbe
pop
jmp
xor
push
insl
aas
orb
push
mov
pop
les
pop
mov
sub
xchg
sbb
push
mov
jb
sbb
stos
jl
push
sbbb
and
notl
dec
dec
in
add
pushf
jmp
sbbb
dec
cmp
pusha
loop
cmp
sbb
mov
mov
in
js
icebp
sarb
dec
or
lods
or
mov
aad
pop
pop
and
ljmp
nop
loope
push
or
lea
dec
fcoms
imul
adc
sub
push
xchg
out
test
pop
dec
shr
mov
in
lahf
add
sub
aas
pop
cmp
sarl
mov
cli
ds
mov
add
sti
lock
pop
jmp
pop
in
or
insb
loopne
sub
adc
loopne
adc
stos
scas
push
mov
sbb
push
imul
js
lcall
lret
aad
testb
inc
inc
ficoml
in
or
fstpt
in
arpl
movsb
shlb
add
pop
mov
and
ret
movb
cmp
mull
dec
lods
in
int
pop
inc
xchg
subl
jae
mov
rcrl
cli
mov
dec
and
xor
jae
out
scas
mov
pop
sbb
dec
in
jbe
push
sub
and
test
loopne
out
dec
and
fs
pop
pusha
push
pop
xchg
cld
shll
push
aaa
test
jl
push
xchg
mov
test
or
and
push
xchg
popf
lret
mov
jecxz
rclb
lds
pop
or
push
nop
xchg
pop
add
mov
leave
cld
lret
xchg
scas
arpl
mov
lea
push
add
inc
js
fmuls
jbe
inc
aad
xor
xchg
test
inc
jg
and
mov
imul
mov
lret
push
fwait
insl
mov
add
cli
pop
push
xor
jne
xor
push
cwtl
mov
xchg
jo
pushf
cld
icebp
es
jbe
sub
insl
testb
jp
in
mov
shr
mov
jmp
fwait
sub
xchg
dec
jo
sub
inc
out
subb
rolb
leave
aam
xlat
insb
jmp
jecxz
popa
add
insl
push
and
add
shrb
adc
dec
pushf
loopne,pn
rclb
fwait
mov
mov
adc
mov
in
aam
int3
nop
pop
adc
cmpsb
xchg
mov
repz
mov
mov
popa
rclb
add
jp
push
sbbb
mov
adc
add
dec
inc
cmpsl
mov
or
and
jb
ret
divb
xor
nop
lret
test
adc
loop
cmp
jle
push
pop
mov
jle
lret
jno
adc
xchg
dec
jae
in
shll
mov
jae
jb
dec
add
cmp
sahf
js
and
dec
sahf
pop
xchg
cmpsl
jp
pusha
idivb
mov
lret
test
dec
mov
aad
mov
pop
cmp
lds
dec
lea
popa
lods
and
mov
movsb
orl
mov
push
lret
push
jb
xchg
sbb
sub
test
dec
mov
insl
jecxz
gs
xor
xchg
push
ss
cmp
outsl
cmp
and
hlt
stos
mov
and
fwait
jns
loopne
push
cs
or
adcl
cmp
mov
fisttpll
cwtl
fld
dec
jge
cmp
sub
insb
movsb
fldl
mov
das
lret
lret
rol
test
or
in
cmp
cwtl
insl
xchg
cld
roll
xorb
outsl
lea
xchg
lea
pop
mov
hlt
sbb
into
mov
out
inc
test
arpl
cmp
bound
jmp
repnz
adc
iret
mov
mov
repnz
lea
bound
pusha
xchg
adc
xor
sub
cltd
sub
js
cli
leave
push
popf
dec
pop
mov
loope
add
xchg
inc
jmp
xor
lret
stos
sbb
pavgw
roll
sbbl
mov
shll
dec
pusha
clc
mov
repz
jmp
outsb
xchg
jo
outsl
or
aaa
jg
ficoms
ljmp
mov
out
int3
cwtl
fsts
sti
outsl
lods
sbb
dec
subb
xor
sub
or
mov
repnz
and
jbe
mulb
inc
mov
mov
mov
xchg
xchg
rcl
mov
lret
sbb
xor
sbb
int3
mov
ja
xchg
mov
sahf
xchg
mov
imul
int
scas
jo
push
pop
aaa
in
push
repnz
or
out
imul
mov
inc
enter
sbb
int3
push
stos
mov
sahf
sbb
push
stc
in
fstpl
add
lods
fs
inc
jbe
xchg
out
mov
cmpl
mov
dec
arpl
mov
pushf
xchg
rcl
add
sbb
sub
xchg
aad
data16
sti
fwait
sbb
cmp
pop
cmpsb
fsubl
aam
pop
mov
dec
xchg
xchg
add
pop
push
sub
jns
mov
cmpsb
inc
sub
add
rol
sub
lcall
lahf
jecxz
sub
in
mov
jecxz
mov
pop
push
adc
data16
movsb
inc
loope
idivl
push
movsl
lahf
mov
aad
in
adc
cwtl
sub
pop
or
jecxz
push
in
push
adc
push
dec
bound
mov
jmp
rcl
or
cltd
adc
mov
mov
clc
mov
push
fcmovbe
xchg
daa
mov
adc
push
cmp
popf
stos
push
push
xchg
lock
dec
fxch
push
testb
jecxz
arpl
dec
ror
out
frstor
xorl
adc
or
xchg
pushf
pusha
or
fstps
mov
push
ljmp
loop
fldt
hlt
adc
leave
jb
in
nop
ds
and
jnp
or
roll
mov
popa
ja
push
in
push
hlt
push
fstpl
addr16
adc
dec
rcrl
add
jne
jb
cmp
xchg
rcrl
fucomip
call
xlat
inc
xor
sahf
cmpsb
int3
or
out
push
iret
aas
pop
mov
shrb
sub
int3
xlat
ficompl
sarl
lds
sbb
jp
int3
std
int3
scas
or
rcll
mov
loope
cmp
adc
sti
inc
sbb
hlt
mov
js
fmul
jne
fwait
push
pop
repz
int
aad
jo
lods
or
out
in
out
int3
xchg
lods
and
mov
push
sub
inc
shl
mov
push
sbb
mov
mov
in
add
pop
cli
sub
lret
lret
dec
cmp
jle
inc
dec
in
sbbl
icebp
imul
cltd
mov
aad
loop
push
pop
aas
mov
test
mov
jecxz
or
ret
xor
push
mov
cmp
cmpl
pop
dec
mov
cld
adc
sub
adc
pushf
gs
mov
sbb
arpl
adc
add
lcall
or
fistps
orb
int3
push
scas
add
pop
loopne
or
jle
pop
inc
jnp
fldcw
add
das
and
dec
xchg
cmp
cmpsl
outsb
scas
in
movsb
stos
and
out
jmp
sub
scas
xor
pushf
fldt
pop
and
iret
insb
mov
test
jp
mov
mov
cwtl
or
mov
mov
inc
mov
ret
out
leave
out
mov
aam
xchg
mov
fdivrl
adc
jmp
jle
nop
les
dec
nop
mov
lds
pop
jbe
in
ljmp
mov
stos
leave
xchg
lods
leave
movsl
in
push
xchg
push
jb
imul
adc
repz
cwtl
setns
bound
jecxz
mov
jge
lds
mov
lcall
jnp
test
jo
movsb
mov
cld
inc
popf
in
subl
mov
sbb
ret
clc
mov
adc
in
out
int
adc
inc
movb
out
sbb
xchg
pop
jb
int3
xlat
ja
or
sbb
mov
dec
sbb
ljmp
stc
shll
lea
popf
push
mov
stos
or
jmp
popa
subl
jle
xchg
std
xor
inc
lock
std
scas
in
daa
outsl
loop
lahf
in
or
int
lods
xlat
push
jge
jmp
push
sub
enter
test
push
enter
pop
test
xchg
std
push
test
xchg
inc
adcb
aas
sbb
les
jmp
mov
jl
cld
popf
stc
cmp
or
push
insb
in
sub
outsl
mov
or
dec
xchg
jmp
aam
jb
xchg
jmp
stc
push
popa
push
push
loope
jl
and
cmp
loope
ja
sti
add
sbbl
sahf
jecxz
push
mov
loop
or
push
jle
mov
shlb
pop
mov
lahf
inc
or
adc
mov
pop
aam
in
mov
dec
loopne
mov
mov
fs
repz
shrb
jo
mov
lods
addr16
clc
cmp
je
loopne
daa
pop
mov
pop
je
mov
sbb
inc
and
push
fidivrs
push
mov
lcall
xor
or
xor
add
xorb
lcall
sbb
mov
sti
add
lods
jbe
fidivs
cld
subl
cld
lods
cld
stc
sbb
sbb
mov
adc
push
and
pop
pop
jge
cmp
shll
jo
fnstenv
inc
arpl
inc
xchg
add
int3
push
cli
lcall
lods
cltd
mov
lods
inc
pop
sar
cmp
adc
icebp
lcall
icebp
inc
lods
cmpsl
sbb
sub
lods
dec
aas
inc
stos
mov
filds
dec
mov
jo
mov
sub
sbb
mov
outsb
cmp
adc
mov
xor
jl
enter
push
mov
imull
dec
push
negl
loop
test
imul
leave
mov
in
out
inc
movq
dec
es
mov
movsl
or
leave
sbb
adc
add
movsl
inc
sub
sti
sbb
add
sub
xchg
shrb
out
scas
or
add
into
das
dec
insl
cmpsl
movsl
sbb
int3
push
sbb
xor
sti
sbb
inc
fsubrs
xor
scas
dec
xor
or
nop
outsl
jmp
pop
jmp
out
and
xor
adc
shll
and
popa
lahf
test
add
movsl
mov
test
lcall
repnz
mov
mov
xlat
adc
test
aam
sarb
icebp
shll
or
dec
sbbb
push
subl
adc
out
sub
lods
mov
movb
mov
add
iret
orl
dec
sahf
jp
int
ds
pop
ret
into
dec
mov
ljmp
sbb
mov
pop
mov
mov
add
or
outsb
inc
push
pushf
or
and
das
add
push
dec
les
lock
sti
bound
push
fs
mov
add
fwait
movsb
push
xor
shl
insl
and
in
dec
pop
xchg
xchg
data16
inc
loop
rorb
adc
pop
repnz
mov
jmp
cltd
sub
mov
into
sub
mov
dec
stos
push
xlat
sbbb
imul
je
out
sbb
lea
and
movntps
xor
out
push
and
or
inc
fisubrl
movsb
shll
pushf
cmpsw
lret
int3
sub
or
out
dec
popf
sbb
lahf
enter
cmp
arpl
pushf
and
imull
shll
stos
scas
mov
clc
shr
outsl
aas
xchg
mov
cmp
push
ja
xlat
je
je
or
cmp
rcrb
cmpsb
mov
push
or
sbb
cld
adc
movsb
jmp
push
aaa
push
sahf
mov
fadds
lea
pushf
sbb
sbb
jb
stos
cmpsb
stos
xchg
daa
test
fistps
in
jo
daa
fidivs
sub
adc
pop
test
in
ss
push
aam
xchg
mov
adc
loope
std
in
in
sarb
xchg
sahf
daa
jno
lods
xchg
mov
loop
aad
leave
cmpsb
ret
mov
scas
push
mov
adc
push
jmp
sbbl
pop
inc
sti
mov
sbb
mov
movsl
jmp
pop
arpl
cmp
xor
sub
js
pop
and
pushf
in
jno
jmp
stos
ljmp
jecxz
or
dec
cwtl
stos
adc
fiadds
cmp
stos
jmp
rcrl
xor
xchg
int3
call
ds
mov
aas
ret
xchg
insl
into
adc
aas
pusha
inc
cli
ljmp
addr16
shl
add
push
mov
mov
mov
test
push
cltd
test
out
inc
pop
dec
mov
fwait
cmpsb
xchg
add
push
jp
or
mov
adc
cmpsl
in
jne
rolb
xorl
aad
mov
sbb
fisttps
sub
ss
add
sbb
cmp
imulb
mov
mov
repnz
ja
dec
add
mov
icebp
mov
jns
push
push
lock
in
jmp
or
mov
aam
lock
mov
sti
jl
push
jge
xchg
ss
stos
ds
pop
mov
daa
notl
leave
cmc
xchg
pop
loop
lock
dec
pop
inc
jle
adc
xor
cmpsb
stos
push
pop
in
inc
lcall
pop
jge
mov
and
xchg
mov
movsl
lds
lret
push
pusha
or
sub
push
sub
mov
stos
adc
adc
dec
cld
and
out
addr16
out
adc
add
popf
mov
cmpsl
rcrb
not
cltd
add
jmp
pop
popa
xchg
cmp
mov
pop
mov
pop
jmp
lret
cmpsb
shrb
out
mov
jo
mov
ds
notl
mov
sbb
pop
dec
shr
jno
icebp
xor
cwtl
clc
enter
inc
cmc
and
or
repz
bound
rcll
insl
jmp
lret
fwait
mov
leave
fmull
xchg
sub
insl
mov
inc
inc
jp
xor
jecxz
aaa
lahf
mov
out
loop
lret
mov
or
adc
jmp
addb
mov
repz
call
dec
mov
inc
sbb
cmp
in
mov
sub
out
dec
iret
xor
aas
and
cmp
ret
into
pop
dec
xor
or
arpl
insl
pop
hlt
into
rcll
mov
stos
mov
into
mov
xchg
xor
pop
out
and
mov
mov
xor
repnz
pop
cmp
push
jo
jp
cmp
adc
inc
jg
jmp
mov
jns
cmp
out
subb
add
lahf
jmp
sub
push
das
lcall
xchg
mov
lods
out
sbb
imul
stos
mull
sbb
popa
inc
or
arpl
inc
add
mov
aam
dec
jns
cmp
dec
lret
leave
dec
pusha
push
cmp
xchg
and
adc
mov
mov
les
jb
lret
nop
movsl
out
out
xor
pushf
dec
sbb
xor
and
or
sub
jg
shrb
xlat
mov
test
mov
dec
xchg
scas
into
add
adc
mov
xor
sti
jecxz
or
jmp
lods
sub
cmp
sub
xor
ret
jmp
xchg
cwtl
inc
test
add
and
pop
lahf
adc
aas
lock
lahf
aaa
pop
rol
aad
out
ljmp
mov
dec
fcoml
shll
int
pandn
xchg
xorb
lock
xor
fcmove
in
int
or
sbb
or
mov
ljmp
xor
ds
inc
jno
loope
push
icebp
mov
pushaw
pop
popa
mov
mov
ds
xlat
mov
adc
ja
pop
pushf
mov
gs
xchg
add
mov
pop
mov
and
pop
ficomps
mov
push
jmp
or
testb
xchg
cmp
inc
sbb
iret
test
int
ljmp
inc
xchg
loopne
test
push
dec
push
outsb
mov
stos
and
sbb
test
lds
cs
repnz
and
push
popf
outsb
mov
and
pop
lcall
lods
mov
pushf
lret
incb
cmp
mov
scas
gs
mov
rcrl
test
shll
arpl
arpl
or
xorl
out
shlb
jg
xor
shrl
cmpsb
fildl
je
dec
push
mov
xchg
mov
dec
nop
adc
andb
cmp
adcl
fdivrl
mov
fidivs
xchg
gs
rol
xor
enter
push
icebp
inc
jmp
push
inc
mov
repz
inc
push
adc
lods
dec
fwait
xor
sarb
adc
mov
dec
push
or
pop
push
pop
frndint
or
xor
dec
mov
inc
jnp
rorl
ret
daa
or
nop
arpl
mov
out
lods
jg
clc
xchg
add
js
sbb
lahf
jle
cwtl
dec
xchg
add
ja
push
arpl
mov
shlb
fnstenv
shll
push
and
push
in
insb
dec
psrad
push
mov
mov
sahf
aaa
mov
movsb
inc
ja
rcrl
push
stos
cli
xchg
rcl
rorl
sbb
adc
jmp
dec
shll
dec
sub
aam
cmp
jge
popa
inc
and
insb
jle
or
outsb
mov
inc
imulb
arpl
jne
lea
push
xchg
push
push
into
or
jle
xor
int
ror
ret
ja
cmpsb
lcall
mov
arpl
imul
out
inc
out
out
pop
ljmp
aad
rcl
mov
test
sbb
movsb
lea
jbe
ret
mov
scas
and
lods
add
cmpsw
aam
jge
sub
mov
xor
lods
cld
xorb
jge
test
pop
jg
jmp
push
ret
aad
into
xchg
or
ret
xor
sti
pop
fs
push
jbe
sub
adc
mov
push
ss
mov
ja
or
pushf
movsb
mov
pop
das
jb
fadd
loopne
xor
inc
addl
into
into
fldenv
les
jmp
pop
dec
dec
xchg
add
ljmp
mov
adc
adc
sub
gs
mov
movsb
fistps
push
je
test
cmp
int3
push
sbb
icebp
jp
out
push
cmpsb
std
lods
pop
sbb
cmp
sub
sbb
or
cmpsb
lea
push
loop,pn
aaa
dec
mov
dec
xchg
ljmp
or
mov
mov
data16
lahf
dec
push
enter
pop
ficomps
insl
jmp
sahf
int3
mov
mov
scas
jmp
pushf
gs
or
movsb
and
in
pushf
mov
fwait
popf
jno
int
or
sub
shlb
mov
xchg
sub
shl
adc
adc
loop
push
sub
mov
xchg
loop
mov
fsubrs
cmpsb
loope
inc
cmp
push
dec
sub
add
leave
lret
xchg
icebp
mov
ds
mov
and
std
sbb
pop
adc
cmp
fs
push
pop
orl
mov
lods
push
mov
into
loop
xchg
js
fstpt
into
jl
lock
sub
cmpsl
cld
or
mov
jne
inc
sti
xor
adc
sbb
sbb
cltd
inc
mov
ljmp
cmp
sbb
sub
pusha
in
cmpsl
or
call
inc
push
mov
or
pop
mov
mov
fcompl
in
fs
push
shll
cmc
xor
jl
std
cmp
adc
mov
jae
ss
sub
sbb
mov
movsb
mov
dec
das
fisubs
xchg
xor
or
call
in
or
sbb
pop
or
lahf
es
cmp
sbb
ret
sbb
pop
jp
std
ror
movsl
xor
sahf
inc
push
dec
add
pop
outsl
in
sarb
sub
scas
lods
out
lret
cli
mov
outsb
sub
add
es
imul
or
or
nop
xlat
push
aas
in
jmp
mov
jge
movsb
mov
sub
fucompp
sub
mov
jle
fistpll
and
sub
je
sub
cwtl
xor
lahf
int3
fdiv
test
loop
cld
daa
or
or
idivb
and
ljmp
sub
gs
xchg
add
fimuls
xor
push
pushf
ficoms
adc
ljmp
or
iret
ljmp
mov
or
dec
rorl
movl
pop
mov
dec
push
inc
mov
sub
fsts
std
lea
jmp
cltd
dec
arpl
loopne
sub
xchg
orl
adc
xchg
insb
mov
scas
cli
mov
je
pop
dec
xlat
shrb
cmp
push
jg
outsb
jle
loopne
dec
loopne
or
daa
gs
push
pop
xor
out
scas
out
loopne
jo
mov
push
inc
push
jo
dec
psubsb
cld
inc
dec
jo
in
xchg
ret
push
or
add
fsub
hlt
adc
sti
popa
cmp
adc
push
mov
out
sbb
dec
scas
sub
push
out
xorl
vmwrite
or
fimull
enter
mov
jnp
sahf
xor
repnz
aam
dec
mov
int3
mov
mov
addr16
int3
shlb
test
mov
repz
jnp
mov
fs
xor
fs
push
loopne
mov
out
ffreep
outsb
cmpsl
cmp
mov
inc
cli
pop
lcall
repz
cmp
sbb
arpl
loop
into
cmp
stos
mov
adc
mov
pop
dec
pop
ljmp
xchg
xor
cmp
mov
insl
sub
xor
jg
movsl
fwait
inc
cmp
addr16
loope
pushf
int3
pusha
stos
ja
mov
mov
into
js
rcrb
ljmp
cmpsb
std
scas
call
rclb
cmp
push
push
loop
movsb
idivb
jbe
and
mov
lcall
xor
rcr
jge
mov
jecxz
push
pop
inc
or
jb
cli
daa
int
sbb
rolb
shlb
cmp
or
nop
jp
add
mov
aaa
inc
jp
int3
fwait
call
xchg
or
in
sbb
into
insb
fidivrs
es
into
sbb
inc
ds
xchg
jle
push
aas
mov
adc
rorl
lcall
dec
call
fadds
daa
push
cmpb
scas
ror
sub
je
xchg
jmp
ret
push
les
adc
dec
movsl
imul
sub
out
loop
sarb
inc
push
mov
sbb
or
aad
testb
or
pop
dec
add
cmp
shll
insb
fldl
jle
in
and
fisubl
flds
lods
jns
push
fsts
mov
loopne
ss
cmpsl
in
mov
mov
and
hlt
cmp
lods
adc
inc
dec
push
fidivs
test
sub
aam
rol
je
ret
pop
or
lods
movsb
sub
dec
jmp
inc
pop
mov
fdivrp
add
mov
jbe
rolb
and
addr16
scas
cli
into
mov
cld
jle
test
mov
minps
sbb
aad
lcall
sbb
into
ljmp
scas
loopne
stos
mov
mov
pop
pop
subb
cwtl
push
mov
mov
cltd
jp
not
mov
jmp
insb
xor
add
ficoms
in
or
adc
xchg
jl
xor
in
bound
das
js
jmp
mull
popf
sbb
insb
inc
faddl
movsl
mov
repz
add
xor
push
loop
pushf
jle
or
fstps
pop
fbstp
adc
and
fimuls
jb
or
mov
jns
and
push
push
dec
cmp
insb
adcb
hlt
flds
xor
xchg
xchg
xlat
add
mov
out
and
fucomp
xchg
fiaddl
sbbl
sti
gs
fldenv
dec
in
xor
scas
xor
loope
push
xor
cmp
lods
xor
jmp
fldt
mov
movsb
inc
cli
mov
and
out
call
xchg
out
andb
and
mov
mov
lret
dec
int3
dec
add
in
mov
xchg
inc
ret
adc
ljmp
icebp
sahf
cwtl
push
sbb
pop
stos
imul
sbb
std
test
push
adc
ja
fcoms
movsl
ret
wbinvd
inc
into
nop
shll
fisubrl
pop
je
test
and
jle
ret
into
or
dec
cmpsb
jns
xchg
int3
mov
or
xchg
xor
arpl
xchg
xor
and
or
into
mov
mov
test
xlat
mov
xor
int
in
lcall
hlt
icebp
repnz
jo
fwait
inc
lcall
push
xchg
lds
scas
sbb
inc
in
mov
mov
mov
int3
jne
mov
or
push
out
adc
fs
push
shrl
in
cmpsl
sahf
xor
into
dec
lret
xor
pop
lahf
sbb
add
lock
sbb
adc
push
out
xchg
sbb
adc
mov
repnz
daa
mov
or
scas
ljmp
in
mov
test
js
jae
add
xchg
push
xor
inc
lea
add
jmp
ja,pt
ds
and
cld
les
jp
pop
insl
int
fidivrs
adc
lea
hlt
clc
xchg
push
repnz
out
sub
inc
dec
frstor
jmp
pop
pusha
mov
xchg
fbstp
ja
push
jo
add
cs
sbb
popf
mov
push
jbe
pop
stos
mov
pop
or
mov
aaa
cmp
insb
repnz
mov
push
mov
cmp
pop
shll
xor
adc
dec
repz
shll
call
jae
arpl
les
add
jae
xlat
fstpl
cs
scas
xchg
fsubrp
mov
in
inc
push
arpl
fildll
or
pop
xchg
dec
add
inc
sbb
cld
inc
scas
cld
add
inc
push
adc
ret
sbb
xor
cs
cmc
nop
sbb
lods
movsl
cmpsl
jns
adc
or
cs
rcrb
pop
or
sub
push
gs
mov
mov
inc
or
cwtl
and
adc
adc
test
mov
and
xchg
lahf
mov
shll
sbb
adc
and
cltd
mov
das
cwtl
mov
adc
add
enter
in
fiadds
dec
mov
gs
mov
adc
jmp
cmp
and
pop
std
arpl
push
out
push
adc
sbb
inc
sub
cld
andb
imul
push
les
or
xchg
sub
xor
insl
sbbl
sub
sti
daa
xor
cmp
ret
jge
pushf
in
xchg
pop
jne
or
mov
sub
cmp
jmp
jbe
lods
sub
ror
xchg
ja
idivb
in
fidivrl
cmp
jle
xchg
lea
addl
lds
jl
mov
jecxz
add
andb
mov
lcall
in
cli
cld
iret
fcompl
xchg
jo
and
in
cltd
pop
xchg
lea
mov
mov
cmp
dec
jno
adc
stos
pop
insb
inc
jmp
lds
repnz
lods
lds
repz
or
adc
dec
insl
dec
ja,pt
mov
cmpsl
bound
stos
lods
mov
mov
in
lret
ja
sbb
data16
shlb
push
pushf
or
pop
mov
out
inc
or
sbbb
js
and
or
mov
subb
sub
sub
lret
sbb
or
jle
out
sbbb
jo
nop
xchg
sarb
rolb
loop
jo
mov
gs
stc
js
cmp
pop
and
push
pop
push
aas
nopl
sbb
sahf
mov
xlat
shlb
clc
add
ja
lds
jno
dec
mov
push
jl
ss
xchg
and
mov
xor
xchg
jmp
push
mov
inc
mov
or
dec
cmp
cltd
jmp
sub
pop
or
stos
sub
and
mov
bound
insb
iret
push
out
adcb
push
sahf
pusha
daa
mov
pop
push
push
mov
pop
aaa
stc
mov
sub
push
idivb
inc
jae
fwait
icebp
cwtl
loopne
pushf
add
test
cmpl
xchg
mov
mov
test
gs
or
dec
add
int3
cltd
jge
xchg
out
out
lods
imul
lea
imul
mov
mov
xchg
pop
mov
adc
cmp
fsubl
push
mov
es
sbbb
inc
aaa
movsb
xor
les
fdivp
push
xor
jl
cwtl
call
xor
ret
loopne
lea
das
adc
stc
xorl
add
ret
jb
out
pop
jge
data16
xor
mov
and
shlb
ja
xchg
addl
mov
xchg
scas
sub
in
idivb
adc
pop
rolb
cmpsb
orl
pushf
jge
rep
mov
icebp
sbb
ljmp
xor
sub
fwait
xchg
movsb
adc
rolb
jb
icebp
bswap
fsubl
iret
mov
aad
and
lret
mov
mov
cmp
mov
mov
or
fistl
sbb
jbe
aaa
and
xchg
jmp
push
cld
mov
lea
jp
sub
cs
xchg
lcall
lods
mov
jb
cmp
shlb
push
and
cmp
js
push
gs
sahf
lea
into
jp
movsb
leave
jecxz
test
mov
std
loopne
adc
dec
pop
xchg
dec
call
cs
jle
jo
stos
jno
push
int3
daa
mov
shll
out
adc
push
movsb
sbb
ficoml
insb
or
in
stos
pop
cs
push
mov
or
xor
lret
imul
ficomps
cmp
adc
lea
push
in
cltd
paddq
adc
lret
mov
sbb
ss
lea
sahf
shlb
mov
cmpsl
rorb
je
scas
aaa
mov
pop
mov
daa
jmp
cmc
mov
stos
mov
or
aas
mov
mov
decb
or
mov
repz
sbb
mov
mov
add
dec
or
mov
leave
int
mov
lock
fsub
sbb
mov
lret
xor
ss
andl
sub
xchg
enter
mov
xor
outsb
rorl
loop
mov
push
movsl
xchg
scas
lcall
and
push
fsub
cld
xchg
push
mov
push
fstps
and
insl
push
push
cs
popf
jnp
xchg
mov
and
mov
rorl
pop
dec
rcl
lcall
dec
cmp
adc
repz
stos
sbb
jecxz
cmp
ja
mov
mov
xor
cmp
in
pusha
lahf
inc
inc
or
ret
rcll
inc
popl
jbe
imul
sbb
jae
loop
mov
xchg
mov
add
pop
push
jmp
repnz
or
push
inc
lcall
lods
push
mov
mov
popa
push
arpl
add
lahf
lods
cmpsb
adc
push
sarb
repz
pop
xor
cmp
icebp
mov
test
or
xchg
jge
jbe
fcmovne
lcall
or
lahf
dec
outsb
mov
push
push
mov
sub
or
lods
loopne
pop
push
neg
push
in
pop
cltd
sub
fistps
mov
mov
arpl
or
xchg
cmp
sbbl
fsubrl
inc
mov
int
subl
sti
fimuls
out
test
jne
push
jo
mov
mov
jae
daa
push
fisubl
fdivs
stos
ljmp
lahf
pushf
inc
or
inc
lahf
mov
repz
ret
add
iret
movsb
iret
push
gs
inc
sbb
lahf
sub
scas
int
mov
sub
add
dec
mov
mov
ja
sti
jns
cmp
jbe
out
mov
jg
push
cli
pop
int
fcompl
cmp
popf
jo
shr
xor
lods
mov
jmp
loope
repz
shrb
aas
adc
xor
clc
frstor
daa
jne
loope
pusha
lea
cmp
js
mov
pushf
out
lods
sbb
jae
pop
in
push
in
psubq
xchg
pop
into
push
sarl
jb
xor
fnstsw
cmpsb
push
dec
or
out
cmp
shll
mov
repz
into
into
cmp
or
cmp
dec
or
sbb
adc
dec
or
aas
and
shr
jmp
in
cmpsb
push
dec
insb
aas
insl
push
mov
jns
add
cmp
push
std
bound
sbb
arpl
jns
inc
rclb
xchg
adc
ss
sbb
cmpsl
loopne
out
imul
cld
lcall
int3
ljmp
cld
inc
stos
flds
adc
xchg
and
adc
clc
add
movsb
lret
xor
sbb
dec
sbb
lods
and
xchg
mov
xchg
lods
dec
xor
cmp
mov
sbb
fnstenv
fs
or
jmp
out
mov
in
imul
fisubl
mov
arpl
gs
xlat
repz
sub
scas
sub
arpl
iret
pop
ret
pop
data16
ljmp
lea
shr
jg
aaa
add
daa
stos
sub
lcall
push
sti
in
loopne
push
mov
jmp
ljmp
inc
bound
movsl
cld
inc
insl
imul
inc
jmp
movsl
jns
lds
inc
ljmp
adc
pop
add
andb
test
insb
sbb
inc
sub
nop
rorb
stc
data16
data16
iret
sahf
mov
xor
xlat
xlat
xor
cmpb
pop
into
inc
outsb
test
aas
call
into
push
sub
push
aas
adcb
ret
adc
mov
add
mov
ficompl
or
cmp
inc
sub
lret
mov
add
add
loop
sub
dec
aas
or
ret
outsb
push
jo
pushf
fistps
xchg
ret
lcall
movsb
pushf
jge
mov
jecxz
test
sub
jae
and
xchg
ficoms
lods
inc
sbb
jge
or
sub
sbb
orl
ja
add
xchg
pop
mov
fwait
jecxz
imul
sbb
outsl
mov
jmp
fisttpl
sbb
and
arpl
bound
cmc
ffree
test
xchg
jge
sbb
arpl
loopne
inc
dec
pop
jecxz
ret
sahf
push
mov
mov
int
pusha
adc
dec
jle
and
flds
and
jecxz
mov
fisubrl
scas
ucomiss
orb
ror
mov
cs
mov
jns
test
xor
pop
xchg
fbstp
rcll
pop
add
insl
xchg
stos
mov
cmp
stos
add
lods
subl
mov
ret
das
push
vmovshdup
mov
inc
push
stc
imul
push
jns
mov
clc
dec
hlt
test
xchg
test
xor
cltd
into
adc
in
mov
fistpll
mov
adc
xchg
cld
fisubrl
sti
into
sbb
mov
mov
scas
or
into
adc
call
pop
into
aad
in
cs
jbe
shll
add
cmpsl
sub
pusha
xchg
cltd
lods
xorl
into
adc
insl
jo
pop
cwtl
push
dec
sbb
lahf
mov
cmc
aas
xchg
or
roll
mov
xchg
and
add
outsb
push
sub
out
imul
pushf
test
adc
popf
mov
cmp
push
lods
or
sahf
dec
cs
xchg
cmp
outsl
lcall
pop
and
lods
jp
mov
jno
add
cli
loopne
pop
mov
push
xchg
jmp
ss
movlps
pushf
pop
ja
sbb
es
adc
mov
fstps
jbe
pop
insl
and
xlat
or
fimull
push
xchg
lahf
pusha
stos
les
fs
loop
mov
popa
arpl
push
in
std
das
jge
sbbb
out
dec
sbb
jle
fistpl
push
cli
cld
ret
sbb
jecxz
mov
sbb
lret
mov
iret
mov
sbbb
ret
mov
ja
adc
inc
fldcw
push
outsb
or
cs
int3
sbb
push
fiaddl
stos
mov
stos
in
lret
repnz
and
popa
rcrl
mov
xor
xchg
add
sub
mov
xchg
xchg
jbe
add
inc
mov
xor
jp
je
cltd
mov
xchg
mov
sbb
sbb
sub
xchg
sbb
push
xor
adc
imul
insb
sbb
push
movsl
movd
imul
mov
iret
jbe
mov
lahf
enter
jae
inc
jmp
daa
jae
test
ss
xchg
cmpsb
int
mov
mov
inc
sahf
mov
loop
jl
popl
push
xchg
sbb
loope
jg
std
sub
lcall
push
roll
jmp
test
adc
outsb
ret
repnz
push
ja
inc
mov
stos
or
aas
pushw
pop
rclb
adc
mov
in
dec
rcr
adc
cld
jecxz
sbb
out
dec
sbb
dec
arpl
pop
out
repz
sbb
mov
outsb
jnp
les
xor
pop
cs
gs
mov
bound
hlt
xchg
clc
mulb
xchg
xchg
pop
mov
out
xchg
cs
bound
sub
mov
push
mov
inc
xorl
mov
jb
pop
js
or
push
jge
dec
sbb
pop
ljmp
mov
adc
fiaddl
cwtl
cmp
mov
push
into
in
jmp
sbbb
cmp
arpl
lahf
xor
mov
fcoms
and
cli
ds
stos
cmp
mov
sbb
pop
ljmp
or
ljmp
inc
pusha
aam
mov
mov
inc
test
push
out
jne
mov
inc
pop
das
lret
mov
outsl
sti
mov
mov
pushw
in
fstps
xor
dec
test
xchg
pop
adc
cmp
in
cmp
xor
mov
mov
cmp
sbb
ret
push
xchg
stc
clc
mov
stos
ret
jecxz
add
stos
jecxz
popa
repz
dec
inc
hlt
inc
aaa
xor
insl
ljmp
pop
std
fwait
pusha
shl
pop
movsl
fildl
cmc
sub
jmp
or
fldenv
pop
add
lea
dec
or
icebp
fiadds
js
nop
loope
add
lods
xor
ret
enter
or
mov
adc
test
mov
shrl
ss
fstpt
inc
push
lock
xor
jne
xchg
xchg
lods
mov
mov
jae
xchg
in
leave
in
xchg
mov
pop
imul
into
and
mov
lods
movsl
pop
cli
jmp
xor
lea
pusha
mov
push
xchg
xchg
sub
mov
sub
mov
adc
lcall
adc
fstl
mov
ja
sbbl
cmp
in
int3
arpl
push
xlat
test
fs
hlt
lock
fstp
cltd
movsb
mov
cmp
std
fmull
imul
sbb
sbb
sbb
into
lcall
mov
pushf
pusha
rolb
sarb
push
shrl
xchg
xchg
sbb
inc
or
ss
dec
int3
lea
popf
jmp
ja
lahf
call
lea
mov
sti
mov
jge
jmp
out
pop
add
dec
push
mov
int3
out
xchg
test
imul
mov
mov
cmp
lds
pop
js
call
pop
xchg
mov
ja
sbb
call
dec
lea
inc
fld
insb
inc
stc
xchg
ljmp
xchg
iret
mov
and
mov
popa
scas
and
sbb
es
leave
push
subl
fcoms
imul
jmp
push
cli
lret
push
test
xor
test
cwtl
inc
fisubrl
adc
scas
inc
ljmp
mov
mov
add
or
stos
cmp
mov
fildl
sub
imul
dec
movsb
jmp
in
iret
test
dec
inc
rorb
testl
in
subl
inc
xchg
out
aaa
jbe
lods
gs
mov
or
rcr
mov
dec
xchg
mov
mov
nop
iret
lret
call
fldl
testb
les
push
faddl
inc
mov
mov
xchg
push
or
or
jp
insl
push
call
pushf
out
jmp
je
mov
xchg
lret
shlb
mov
sbb
mov
ret
pop
imul
jo
sbb
call
mov
mov
xchg
jmp
loope
or
pop
mov
and
test
lret
test
mov
clc
popl
insb
aaa
xchg
out
mov
and
pusha
pop
subl
inc
xchg
adc
push
pop
aam
fiadds
popa
nop
loop
push
adc
arpl
roll
cli
inc
stc
cmc
mov
mov
mov
mov
jecxz
bound
lds
cwtl
loope
aaa
mov
dec
lock
js
jo
adc
mov
mov
fisttpl
add
mov
push
pop
pop
sbb
jnp
fwait
sub
and
lods
sub
bound
incl
in
fxch
and
das
mov
xchg
cmp
xlat
test
lea
pusha
fbld
roll
shlb
sarl
lcall
inc
stos
cmpsb
inc
cmp
or
fisttpl
shr
stos
aam
mov
les
sbbl
jge
inc
push
cmpsb
push
mov
testb
fsubrl
push
or
xchg
pushf
mov
lds
movups
sbb
pop
lret
and
push
testb
into
mov
test
lods
lret
mov
stos
add
stos
xor
push
xchg
test
ret
sbb
push
add
ret
das
sub
push
inc
shrb
lcall
addb
mov
push
push
mov
or
in
lods
ss
or
lods
push
call
xchg
dec
xchg
lea
into
add
in
bswap
out
pop
pop
test
stos
add
mov
fs
lahf
loopne
mov
jecxz
clc
xchg
pushf
lods
pushf
mov
xchg
jo
cmpb
mov
aaa
xchg
lret
sub
and
mov
cmp
mov
cmc
int3
push
adc
mov
jns
jp
sbb
mov
adc
scas
add
inc
aaa
adc
sbb
mov
scas
or
imul
push
fsubrs
mov
lock
out
inc
sbb
movb
popa
ss
or
mov
sub
cmpsl
inc
dec
andb
sub
loope
ljmp
outsl
pop
xorb
xor
fists
scas
cmp
std
or
sub
and
rolb
and
xor
test
xchg
jb
mov
dec
pop
movsb
jo
cmpsl
out
popf
gs
fsub
arpl
shrb
movsb
cmp
mov
aaa
add
jmp
fmuls
gs
mov
mov
cmp
shll
lods
inc
push
into
xor
pop
mov
movl
imul
std
mov
pushf
cmp
sbb
mov
mov
or
or
sahf
xlat
xor
inc
out
mov
push
stos
lods
sahf
je
outsb
jns
popf
mov
sahf
sti
inc
push
inc
test
mov
push
mov
inc
add
movsb
or
test
fucomp
push
call
and
cmpsb
das
sbb
jp
sbb
add
dec
in
call
add
lods
or
inc
stos
xchg
mov
in
das
pushf
rolb
lods
mov
push
jmp
cmp
mov
pop
shlb
and
cmpb
mov
ja
imul
jb
xor
bound
xchg
xchg
pusha
addr16
mov
cmpsl
sbb
jnp
sub
dec
pusha
daa
xchg
mulb
out
fdivs
fdivrl
cmp
mov
in
shr
fdivrp
roll
pop
xchg
adc
sbb
add
mov
add
addr16
and
mov
ret
movsl
xchg
sbb
testb
or
and
insb
push
loopne
cltd
cwtl
rclb
fs
gs
aad
sub
cmpsb
mov
xlat
frstor
push
or
ja
mov
or
pop
and
or
ss
mov
shlb
fcompl
and
ljmp
jmp
movsb
mov
mov
mov
je
xchg
test
mov
int3
inc
ss
inc
jae
cmp
xor
lcall
lahf
dec
scas
das
mov
jmp
inc
ljmp
push
pop
push
adc
clc
or
cwtl
jecxz
bound
into
fstps
sub
dec
test
push
xor
int3
mov
cs
jmp
mov
adc
cmpsb
and
imul
or
dec
test
xchg
insl
and
add
orb
out
repnz
or
fstl
mov
mov
push
inc
dec
cltd
gs
mov
fistpl
and
cltd
cld
sbb
lock
or
out
mov
mov
cmp
mov
dec
fcomps
xor
jmp
ja
imul
in
mov
add
pop
inc
insl
push
and
notb
or
fcoml
sbb
sbb
mov
lea
outsl
les
addw
adc
add
mov
sbb
outsl
test
ret
cmp
adc
movsb
gs
out
pop
mov
rcl
mov
popf
push
stos
mov
lea
into
inc
mov
add
dec
jp
insl
mov
mov
mov
shll
mov
test
mov
mov
inc
sbbl
mov
pop
fidivrl
push
mov
stos
mov
aaa
pusha
fisubrs
mov
bnd
inc
fbstp
adcb
sti
dec
dec
or
imul
addr16
cwtl
xchg
int3
out
sarl
das
mov
pop
das
lock
insb
fs
loopne
pmaxub
inc
xor
out
sub
cld
add
lea
add
push
add
xchg
ret
xchg
xor
push
ja
push
pop
lods
in
pop
frstor
ret
push
addr16
mov
cmp
sub
pop
icebp
test
sub
sbb
sub
fsubs
lods
adc
cli
jle
adc
cmp
mov
xor
cmp
dec
scas
push
cmp
hlt
aad
data16
outsl
jb
jns
jmp
inc
test
fildll
negb
loop
cmp
jg
dec
jle
cmp
sub
loope
xchg
je
inc
inc
mov
sbb
mov
pop
fsubrs
fwait
dec
movsb
push
push
and
and
inc
add
or
add
out
adc
out
and
lret
push
pcmpeqw
mov
mov
cs
fdecstp
sub
jge
add
xchg
decl
fcoml
jns
push
fs
stos
mov
lahf
or
scas
es
adc
sbb
adcb
rep
movsl
sub
fcomi
rcrb
arpl
enter
cld
inc
inc
fcompl
inc
ret
lea
jp
and
aaa
add
lods
lcall
adc
bound
scas
add
jmp
cli
mov
inc
mov
in
mov
jns
push
test
bnd
xchg
pop
fwait
xor
in
pop
dec
or
test
bound
inc
int3
mov
repnz
xor
and
inc
mov
xchg
fwait
shlb
jl
popf
sub
inc
add
add
xchg
or
push
fisttps
insb
scas
mov
dec
jb
fcomps
test
leave
jle
add
es
arpl
notl
pop
sub
cmp
inc
jge
pop
int
fdiv
lret
adc
mov
pop
fildl
in
xor
cs
cltd
dec
inc
fmuls
movb
cmc
jg
mov
push
and
jge
xor
sub
and
andl
mov
mov
test
mov
popa
insb
test
incb
pop
cmpsb
fildll
mov
mov
pop
outsb
fnstsw
iret
stc
imul
cltd
fs
scas
jbe
jnp
pop
insl
sti
in
orb
test
fsubrp
scas
mov
sub
aam
outsb
add
insl
mov
subl
cmpsb
push
jb
xchg
add
or
repz
cs
fwait
movsb
out
cltd
insl
sub
ret
push
cs
scas
sub
int3
add
xor
pushf
add
cmp
nop
ljmp
lods
movsb
movaps
mov
mov
jae
mov
arpl
stos
mov
rsm
sbb
mov
test
mov
shll
mov
xor
scas
mov
fisubrl
add
jmp
xchg
test
push
mov
xchg
in
imul
pop
movsb
test
stos
adc
test
scas
call
dec
xor
adc
adc
in
mov
hlt
neg
xchg
fisubrs
or
mov
pop
dec
das
fwait
je
nop
and
push
push
inc
mov
cmp
rclb
pop
enter
je
stos
mov
xchg
sar
mov
cmp
dec
mov
in
bound
sub
arpl
loopne
xchg
jb
xchg
xchg
pop
clc
and
add
out
les
and
subl
push
sbbl
mov
sbb
sub
fcomi
ret
ret
xchg
jnp
inc
and
or
fwait
icebp
bound
fcmovnbe
jl
fisubl
sbb
fisttpl
dec
test
in
mov
xor
jo
arpl
gs
sub
fldcw
arpl
add
fdivr
mov
ja
packssdw
in
ds
jbe
fsubrl
bound
sub
mov
xchg
test
bound
xor
sbb
cwtl
mov
mov
or
pop
dec
jmp
jecxz
mov
cwtl
add
jb
iret
pop
push
pop
xor
cmpb
lds
or
in
mov
push
jno
mov
bound
bound
ret
jae
cs
cmp
pop
mov
inc
mov
add
int3
jnp
stos
test
imul
pusha
inc
lcall
ret
fistl
fs
out
push
xchg
int3
adc
xor
push
mov
test
stc
dec
orb
rorl
rorb
jle
mov
repz
cmovo
mov
inc
push
jp
cmp
ja
jmp
es
jbe
adc
addr16
sub
dec
cs
jp
in
imul
lcall
popf
push
push
test
iret
lahf
cmovge
push
xor
adc
jmp
rolb
pop
adc
fldt
ret
loop
es
rorl
aad
imul
and
ror
lods
test
shr
sub
sarb
push
repnz
shlb
inc
je
jne
sbb
popf
ss
insb
sub
test
cmc
outsl
jl
andb
xchg
mov
xor
dec
add
or
and
ret
push
mov
jmp
and
jmp
cli
push
push
inc
sub
in
movsb
ret
je
popf
es
xor
add
inc
call
push
icebp
ss
add
and
gs
addb
or
test
push
sub
push
lock
inc
gs
popf
cli
loop
stos
xor
out
or
mov
sbb
sbb
or
mov
outsl
fisubrl
cmp
addr16
int3
add
ljmp
popf
loope
add
into
or
lods
gs
lret
stos
add
das
sbb
ljmp
sbb
les
ret
cmp
imul
popa
inc
mov
call
adc
sbb
scas
scas
push
repz
jl
push
in
stos
sbb
stos
and
pop
lcall
fdiv
mov
lods
movsb
pushf
xor
mov
mov
stos
lods
cld
add
movsb
sub
sbb
xchg
fistl
xor
sub
push
decb
sbb
in
neg
mov
jmp
jge
lods
test
sarb
mov
pushf
sbb
sbb
fldt
adc
aam
int
add
cmp
lods
push
dec
addb
push
xchg
mov
or
fwait
jno
or
jno
xor
lods
dec
add
sub
in
add
xlat
and
add
dec
dec
addl
inc
cmp
mov
les
scas
and
inc
lret
cli
jb
cmp
ss
cltd
in
inc
push
ljmp
mov
sub
das
dec
jp
dec
xor
and
jnp
cmp
push
mov
push
fistl
and
push
and
xchg
inc
outsl
outsb
movntq
or
addr16
fildl
jnp
ret
movsb
in
lahf
jecxz
jle
frstor
adc
cmp
jmp
mov
lret
jecxz
sahf
les
pop
dec
xor
lds
jmp
add
insl
movsb
loop
test
xor
lds
fists
stc
jmp
repz
adc
dec
in
out
insb
ja
pop
pushf
fmull
sub
xor
pop
cwtl
add
inc
mov
repz
jge
inc
insl
inc
fxch
shlb
hlt
xchg
jae
push
adcl
push
stos
mov
mov
aam
loope
hlt
popf
push
je
inc
fnstenv
jo
adc
xor
test
jae
sbb
cltd
out
insb
xchg
gs
ret
xor
cmp
jb
ljmp
mov
push
insb
in
stos
and
xor
insb
add
leave
scas
jmp
sbb
cmp
out
xlat
jb
or
popf
push
ret
outsl
push
jmp
repz
mov
jmp
test
sbb
out
or
or
pop
shl
xchg
subb
pop
jmp
shll
inc
or
lahf
mov
push
in
adc
cmp
aam
stos
rcr
adc
cmp
iret
jae
cmp
push
addl
sbb
mov
or
xor
imul
fistps
shrl
mov
aad
lods
idivb
push
add
cmp
adc
xchg
loopne
push
sub
xor
jmp
xlat
and
mov
mov
mov
or
jp
sub
jnp
inc
in
arpl
fisubrs
xchg
bound
sbb
orb
nop
icebp
mov
lods
call
fbstp
dec
fst
inc
mov
jo
and
sbb
push
sbb
outsb
loop
fisubrl
jecxz
addl
cwtl
addr16
xor
sub
sbb
test
imul
pushf
xor
inc
jmp
movsb
sbb
pop
cld
dec
cmpsb
mov
out
cmpsl
lret
mov
sub
popf
movsl
subb
inc
cld
mov
enter
lea
int3
mov
sti
adc
loop
shll
loop
fadd
jmp
mov
stos
ljmp
int3
sub
gs
pop
jne
scas
add
mov
mov
gs
push
adc
xor
sub
mov
setnp
xor
mov
cs
pushf
jecxz
nop
lods
cltd
arpl
mov
fwait
jecxz
ret
popa
ficomps
lcall
inc
or
cmc
fisubrl
sbb
call
push
mov
leave
pusha
mov
mov
pop
jecxz
repnz
movsl
pop
call
xchg
add
pop
shrl
jg
inc
lods
jno
movsb
aas
mov
popw
arpl
add
push
fstpl
adc
mov
out
or
and
aam
xor
xlat
dec
xor
ret
dec
fistpll
xchg
fisubrs
xchg
mov
and
aad
pop
lods
pop
icebp
pop
sub
stos
imul
sub
ret
mov
icebp
pop
cmpsl
repnz
push
mov
in
jo
je
and
dec
insl
fcom
xchg
int
xchg
clc
sar
daa
lret
lret
mov
mov
xor
popf
and
aam
fs
pop
mov
jns
sbb
shlb
lock
daa
jmp
xchg
sbb
jb
add
je
popf
scas
xor
push
xchg
or
xchg
rclb
and
sub
sub
dec
adc
and
sub
les
cltd
enter
sarl
push
test
xlat
dec
push
push
sbb
lcall
cmc
leave
nop
sbbb
cmp
xchg
and
bound
rorl
rcll
jae
adcb
jge
rcrb
shl
popa
pop
sarl
jne
lock
pop
int3
and
ds
repnz
push
std
loopne
cld
inc
cmp
and
sbb
jno
mov
out
lcall
cmp
mov
mov
std
xor
sahf
inc
popf
and
hlt
jae
push
pop
inc
fidivrl
rclb
getsec
out
call
in
xchg
addb
lahf
andb
clc
sbb
fcmovbe
in
ret
mov
movsb
xchg
mov
andl
stc
pop
sarb
cwtl
inc
pop
int3
enter
xchg
orb
stos
ficoml
fwait
icebp
roll
loop
les
cs
in
and
faddl
inc
sbb
add
test
sub
push
in
insb
sbb
mov
in
jl
xchg
call
mov
stos
inc
insl
xchg
cmp
fdivs
enter
nop
and
sub
sbb
push
enter
push
mov
js
sbb
shll
mov
in
popa
sbb
push
test
lahf
xchg
iret
add
and
inc
xor
ljmp
scas
jbe
and
add
les
call
or
lds
xor
dec
lods
mov
je
push
or
dec
mov
repnz
pop
test
movsb
mov
sbb
xchg
ds
sbb
shrl
out
mov
jmp
outsl
xor
lods
outsb
dec
je
sahf
in
bound
sub
scas
mov
loopne
mov
loope
mov
cmp
shrl
mov
ret
cmp
subl
mov
aad
xchg
rolb
xchg
dec
fadd
rorb
push
sbbb
mov
or
jge
repnz
pop
and
push
roll
xchg
outsb
test
call
leave
je
sub
sbb
lods
popf
sbb
jns
fcoml
iret
popf
inc
bound
stos
loope
xchg
sbb
jp
adc
xchg
cmpsb
not
mov
fucomip
sub
push
outsb
pop
mov
or
cli
fimull
test
dec
pop
aam
add
xor
mov
sub
aam
mov
pop
add
mov
sti
mov
pop
sub
and
inc
setp
jle
testl
out
test
call
data16
stc
sub
in
mov
sbb
jmp
movsl
pop
inc
mov
cwtl
int
sub
or
inc
hlt
mov
sti
pushf
adcl
mov
push
scas
inc
ja
cmp
in
mov
loope
cli
ss
jp
inc
push
and
cld
sub
mov
push
sbb
dec
push
scas
call
test
push
jge
push
pop
xor
xor
ljmp
pavgw
jo
dec
adc
loope
cltd
icebp
sub
push
adc
jp
lods
cwtl
aaa
clc
dec
je
xor
jbe
pop
ja
pop
scas
adc
sti
fucomi
add
int3
imul
xchg
xor
pop
sub
enter
jmp
test
adc
stos
or
add
scas
sbb
cltd
aad
or
or
shlb
fnstsw
cmpsl
aam
add
xchg
pop
cmp
adc
cmp
sub
lods
sbb
cwtl
xchg
cmp
dec
bound
mov
mov
jecxz
insb
xchg
cmp
mov
fiadds
sahf
in
pop
xchg
call
sub
sbb
stc
xchg
dec
sbb
xlat
or
xchg
xchg
sbb
dec
or
out
outsl
xchg
incl
sub
cwtl
xchg
jns
leave
or
repnz
adc
ret
xchg
dec
add
in
mov
or
sahf
das
xchg
lahf
add
in
imul
inc
adc
jecxz
pop
cld
sbb
in
dec
xchg
call
or
sub
mov
arpl
ret
in
or
insl
adc
das
xchg
lahf
add
in
pop
xchg
stc
adc
loop
or
insb
mov
outsl
xchg
out
adc
cltd
stos
xor
adc
mov
push
add
shr
enter
dec
or
loop,pn
ljmp
call
cmp
aam
call
ljmp
add
jl
adc
stos
inc
mov
sub
and
mov
pop
and
stos
divl
sub
scas
je
movsl
je
xor
fwait
xchg
pop
repz
mov
cmp
incb
std
and
adc
repz
or
ret
cli
sbb
test
or
mov
or
in
jns
push
xor
pop
mov
arpl
ja
mov
test
in
rorb
stos
dec
sub
pop
in
sarb
mov
cmp
daa
jle
inc
neg
test
mov
lock
mov
fildl
or
daa
lcall
mov
in
pushf
xor
jp
and
add
ret
and
adc
je
jae,pt
adc
in
mov
imul
int
mov
push
lods
test
ficomps
test
mov
cld
cltd
in
lods
dec
cmp
aad
xchg
push
cltd
or
cmc
add
int3
ljmp
inc
cli
andl
xor
dec
or
mov
inc
aam
cmp
aad
aad
add
mov
cmp
icebp
nop
sbb
test
mov
dec
dec
outsl
imul
sub
bound
es
push
adc
subl
ds
mov
xor
int
adc
stos
shr
pop
cmp
xor
in
loope
mov
push
push
pop
andl
jle
test
pusha
pushf
inc
jg
dec
test
sbb
cmp
xorb
xor
pop
ret
adc
sub
std
pushf
popf
pop
sti
inc
mov
and
into
out
dec
je
ret
cmp
mov
je
push
add
adc
and
push
int
xor
outsb
jmp
in
hlt
mov
fadd
call
jle
test
or
shlb
outsb
rorl
sub
jmp
mov
in
mov
or
adc
arpl
outsb
movsb
mov
dec
test
adc
mov
cli
mov
inc
mov
add
adc
add
dec
and
adc
xchg
int3
or
xor
ret
or
outsb
dec
xor
xorb
dec
sub
scas
inc
mov
aad
test
lret
mov
in
jmp
mov
cmp
into
pop
inc
pop
outsb
pusha
hlt
fadds
in
sbb
xchg
jecxz
inc
cwtl
adc
inc
or
clc
lods
andb
or
jge
fwait
ljmp
cmp
push
imul
adc
rcl
ret
push
mov
mov
cmp
scas
cmc
adc
std
xchg
pop
adc
xor
add
jecxz
mov
insb
sub
pop
xlat
pop
inc
adc
adc
add
ljmp
add
mov
pop
mov
jmp
push
jno
fwait
lock
lret
mov
enter
insb
enter
xlat
fdivp
adc
fiadds
fwait
outsb
mov
test
jne
test
rcll
or
les
jecxz
out
jecxz
adcb
and
jecxz
aad
or
adc
arpl
movsb
lds
sbb
mov
add
mov
push
je
and
pop
fsubl
add
pop
and
add
insl
in
outsl
and
cmpsl
int3
fldt
fsubrl
movsb
push
dec
outsl
inc
inc
dec
call
adc
or
cwtl
in
lds
repz
push
xchg
cmc
pop
sbb
mov
cmp
add
outsb
cltd
push
pop
cmc
dec
stos
sbb
push
mov
mov
dec
xchg
mov
lods
repz
das
xor
pushf
pop
test
or
lea
scas
cli
mov
enter
ret
push
movsb
xchg
dec
pop
lods
add
out
mov
in
test
mov
or
scas
adc
aaa
xchg
and
cmp
push
jecxz
add
ret
lea
and
lods
sub
call
push
outsb
popf
lods
cmp
sbb
fdivr
aad
jecxz
mov
jecxz
stc
jl
and
push
test
mov
jl
lds
int3
push
in
out
nop
push
sbb
push
insb
shlb
and
into
aas
clc
pop
mov
xor
test
in
fs
adc
and
orb
cmp
adc
js
dec
sub
jl
jecxz
and
pop
cltd
dec
lahf
in
jae
dec
out
icebp
xchg
inc
rcl
pop
and
xlat
dec
out
push
sbb
and
adc
cmp
pop
jnp
test
fninit
jns
cwtl
pop
mov
movsb
pop
sub
fdivl
xrelease
jmp
hlt
adc
lock
lret
jnp
xchg
and
cltd
test
shr
ret
cmc
rolb
test
mov
popa
int
and
fwait
divl
shlb
movsb
and
inc
mov
imul
adc
lret
stos
xor
or
std
push
mov
mov
mov
adcl
lret
jb
ljmp
mov
icebp
aad
fmulp
xor
lods
test
inc
sbbb
sbb
xlat
sbb
outsl
clc
mov
mov
jmp
stos
popl
fs
mov
ss
xchg
fcoml
dec
hlt
jge
mov
mov
in
dec
aam
dec
inc
adc
aaa
rclb
mov
or
mov
jne
std
fimuls
add
xchg
cmp
push
gs
test
pop
jge
in
mov
sbb
shll
test
in
adc
or
adc
xor
lods
sub
or
mov
fldt
inc
faddl
lods
pushf
fs
dec
mov
jecxz
lahf
add
clc
pop
jnp
add
push
or
adc
std
ja
cmpsb
xchg
rclb
push
and
mov
fcompp
add
out
aad
push
in
test
dec
jle
cmpsb
mov
iret
in
ds
mov
repz
jmp
cmp
sahf
cmp
ret
jae
testb
nop
loope
cmp
sub
pop
movsl
mov
pop
cmp
sarl
fnclex
pop
lds
les
jmp
pop
and
sub
cwtl
dec
popf
test
sbb
mov
divl
mov
pop
add
out
mov
cmpsb
mov
pop
pop
mov
pop
mov
pop
movsb
insl
cmp
xor
sub
mov
dec
cmpsb
pop
pop
jnp
adc
jbe
or
jns
sbb
mov
loop
mov
mov
sub
jecxz
shr
lret
divl
cmp
sub
or
dec
fcmovnb
pushf
rcrl
push
es
sarl
mov
jl
dec
xchg
jle
push
sbb
xchg
lds
insb
sarl
cwtl
pop
imul
mov
ret
andb
cmp
pop
xchg
mov
pop
mov
sarb
in
rolb
adc
jl
jmp
popf
pushl
shrb
dec
cmc
mov
aad
adc
movsl
dec
add
mov
lret
subl
in
ss
cmp
test
mov
in
fwait
popf
stos
and
mov
xor
lds
mov
mov
pop
in
mov
aaa
aas
fisubrl
mov
adc
or
dec
cwtl
ja
xchg
or
add
or
cmp
pop
call
mov
jns
mov
imul
je
and
cmp
test
lret
mov
stos
fwait
jp
insb
icebp
rcll
or
and
inc
popa
aas
and
push
xchg
mull
xorl
push
ret
cwtl
loop
in
es
pop
push
mov
push
sub
les
and
in
cwtl
lret
roll
xorb
rorb
pop
int
xchg
ljmp
lret
aad
jl
into
and
jo
popf
dec
sub
xorl
cs
mov
gs
xchg
popf
xor
andl
out
fcmovnu
jmp
in
int3
popf
addr16
iret
mov
mov
cmc
mov
lods
movsl
adc
in
mov
std
mov
out
adc
jl
cmc
lods
pop
in
aaa
xor
aas
rcr
or
xchg
xchg
mov
xchg
jge
lds
cld
gs
fwait
dec
pop
test
mov
mov
in
adc
cmc
push
aas
and
cmp
stos
sub
daa
ret
leave
mov
int3
aam
adc
out
mov
push
int
push
outsl
or
sub
add
mov
sub
cltd
and
mov
mov
pushf
lea
hlt
push
cld
idivb
or
push
mov
loop
mov
or
arpl
lods
add
cwtl
sbb
popf
pop
arpl
xor
adc
aaa
dec
mov
cltd
cltd
add
sbb
push
lds
lds
pop
dec
popf
lret
inc
add
rcll
in
cs
pop
lea
sub
aam
test
testl
shlb
dec
or
xchg
mov
fmul
and
test
add
rorb
jnp
aam
dec
cld
or
lock
in
les
dec
jbe
jns
fcoml
add
loope
pushaw
dec
js
cmpsl
push
jecxz
les
sbb
xor
lods
adc
clc
es
inc
dec
mov
addr16
adc
xor
xlat
add
cltd
fdivl
mov
mov
and
xor
add
loopne
dec
pop
sbb
jnp
inc
lds
dec
int3
aaa
and
jbe
movsb
orl
mov
addl
aas
inc
xchg
cmp
imul
aaa
repnz
or
jecxz
and
lock
push
jg
xchg
and
add
add
and
dec
pop
push
and
insl
in
iret
jle
dec
aaa
outsl
pushf
jnp
xlat
insl
cmc
in
les
int3
add
cmpsb
or
daa
jp
jmp
pop
vphaddbq
je
hlt
fstps
lret
ljmp
pushf
mov
pop
hlt
mov
outsl
hlt
mov
lods
jmp
pmaddwd
dec
add
test
mov
push
adc
sti
or
jno
pop
data16
ret
cmp
jno
ficoml
lods
aas
in
cwtl
fcoml
and
xchg
adcb
and
inc
mov
inc
fildll
add
or
sbb
push
movsb
cmp
fstp
jb
add
imull
jbe
cmp
or
inc
les
xor
in
mov
repnz
sbb
aam
ja
insl
pushf
cmp
cmp
fcomps
add
scas
jge
adc
mov
in
add
imul
jmp
lods
mov
test
jmp
call
popa
push
mov
mov
jns
ffreep
addl
and
sbb
divl
mov
push
adc
sbb
in
insl
pop
ds
pushf
jno
jns
mov
jo
jo
iret
setle
aas
sub
jns
outsl
or
test
pop
xchg
push
std
add
pushf
or
lods
call
add
xchg
pop
mov
mov
incl
or
lods
mov
ret
sub
iret
in
lahf
std
mov
into
shrd
pusha
popf
lods
sbb
loop
mov
inc
xor
dec
jnp
add
push
jl
nop
mov
dec
and
rclb
and
xchg
lods
in
xchg
push
lret
mov
inc
in
and
js
leave
cmp
inc
and
hlt
test
int3
push
mov
inc
in
pushf
xchg
ja
aas
lods
loopne
push
ljmp
pop
add
inc
xlat
or
lcall
jne
jle
lods
pop
fs
mov
and
xorb
imul
inc
jecxz
cltd
jle
and
cld
mov
jo
jns
add
in
scas
jl
jo
int3
cmp
cld
xor
adc
and
outsl
push
in
lods
xor
inc
lcall
dec
or
lods
popf
cmp
aaa
adc
add
add
xor
xchg
lcall
mov
insb
pop
call
and
push
les
jae
inc
and
hlt
fs
testl
int
add
mov
pop
sub
hlt
pop
dec
aad
jo
and
lahf
lcall
sbbl
insl
les
dec
roll
push
fisubl
mov
hlt
clc
test
or
loopne
sub
ljmp
out
xor
cmp
repnz
xchg
repz
cmp
mov
dec
and
cmc
hlt
mov
fucomp
xor
repz
push
pop
movsl
inc
inc
inc
mov
xchg
rclb
cmp
insb
int3
lods
daa
lods
call
int3
mov
mov
jnp
daa
mov
mov
add
andb
dec
add
sub
dec
mov
pushf
in
fmuls
xchg
aam
mov
mov
or
leave
out
iret
mov
xor
xchg
and
sahf
xlat
stc
les
dec
int3
push
mov
dec
lret
cmp
stc
cltd
push
shlb
mov
mov
out
test
push
and
cld
outsb
gs
fs
aam
push
std
add
daa
cmc
stc
movsl
int3
test
pop
cld
ret
dec
add
inc
cwtl
sbb
dec
aad
cltd
nop
and
and
adc
int3
popl
sub
fcoml
or
jecxz
scas
hlt
or
xor
call
inc
fisttps
fsubl
in
das
hlt
lods
in
lods
ror
jecxz
clc
or
mov
aaa
add
xor
mov
push
lods
in
int3
lahf
add
shrl
xor
in
scas
mov
test
xchg
addr16
and
out
and
out
adcb
inc
jns
nop
mov
loopne
add
push
ffreep
ret
pop
xor
jnp
inc
int3
mov
jmp
lret
mov
cwtl
push
pushf
int
dec
or
std
mov
inc
movl
neg
imul
imul
pop
push
cmp
xlat
repnz
sar
pushf
jecxz
inc
mov
ret
inc
insb
sub
pushf
jecxz
jbe
mov
scas
push
mov
in
and
dec
insb
or
lods
shr
mov
lret
lods
xchg
or
and
stos
jg
mov
xchg
leave
shrb
int3
or
stc
xor
sbb
lcall
push
jl
xor
clc
cmp
cld
mov
cs
hlt
dec
adc
mov
xor
mov
lcall
aad
shr
movb
mov
lret
pusha
adc
loopne
clc
and
cltd
je
inc
mov
xchg
cmp
cmp
adc
and
insb
and
lahf
inc
ljmp
push
int3
shl
cmp
andb
rcr
mov
clc
notl
les
stc
int
jmp
xor
xchg
daa
insl
sbb
icebp
int
inc
cmp
cli
pop
cltd
push
fsubr
in
in
inc
shll
lahf
mov
scas
jno
jmp
mov
jmp
xchg
lods
and
addb
jb
push
jge
fcoml
mov
leave
sub
mov
cmp
and
dec
or
mov
cwtl
mov
subl
inc
loopne
dec
mov
clc
push
aad
mov
jmp
in
mov
aas
sbb
pop
insl
jle
lret
push
cs
ja
incb
ss
call
add
jecxz
mov
jnp
lcall
ljmp
loopne
inc
jl
mov
cld
pop
push
dec
xchg
mov
mov
jb
push
push
adc
orb
outsl
and
int3
daa
dec
inc
rolb
push
repz
inc
cld
dec
shll
popl
pop
aas
arpl
daa
xor
ja
addr16
in
xchg
aad
cltd
mov
pop
mov
cmc
sti
fildl
in
xlat
lret
inc
push
ja
scas
jecxz
pop
mov
aad
and
in
int3
push
xchg
or
cmp
xchg
add
xor
js
test
outsb
mov
push
ss
xlat
pop
in
and
jmp
call
sti
push
and
push
adc
fs
xlat
pop
cmpsb
push
inc
int
mov
push
imul
in
jle
cwtl
fisubrl
push
sahf
cltd
hlt
sub
fstpl
cmp
mov
dec
mov
ds
jecxz
fidivrl
dec
xchg
sub
in
jecxz
int3
add
xor
xor
dec
mov
lret
push
jnp
inc
ss
add
jmp
push
mov
lret
pushf
repnz
cmp
movsb
lret
subl
in
sub
daa
or
mov
into
loopne
add
pop
orl
push
dec
fiaddl
aad
xor
jp
enter
mov
mov
sti
sub
fwait
ss
pop
push
outsb
pop
mov
jecxz
rolb
jmp
xchg
dec
push
insb
insl
push
lret
or
dec
sbb
mov
mov
cltd
dec
mov
insl
aad
inc
scas
cmpxchg
dec
cmpsb
aad
mov
pusha
mov
pop
jmp
pmaxub
jae
fdivrl
mov
pop
jl
fisttpl
pop
je
cmp
pop
xchg
inc
sbb
scas
fisttps
sti
iret
insl
into
jo
call
xor
cmp
int3
xchg
pop
scas
clc
and
cld
ret
mov
sahf
mov
cwtl
mov
lea
loop
not
in
scas
arpl
xchg
xchg
push
cmc
stos
or
pop
mov
push
cmp
out
mov
lods
test
mov
scas
les
push
dec
clc
inc
ret
sti
add
fmull
sub
test
mov
xor
mov
hlt
cmp
xchg
xor
sti
xor
fnstenv
pop
lahf
cmp
adc
mov
leave
lahf
xchg
inc
mov
inc
inc
dec
sbb
cld
mov
adc
xchg
in
test
lock
inc
mov
cltd
mov
pushf
pop
imul
pop
cmpsb
scas
repz
aad
jg
xchg
push
or
ss
xlat
fwait
ret
cwtl
cmp
int3
int3
push
push
addr16
xchg
les
mov
daa
inc
sbb
aas
mov
inc
and
test
lahf
bound
hlt
insb
pop
push
std
mov
push
out
xor
sub
or
cmc
arpl
lcall
jno
cld
xchg
test
aaa
xlat
dec
aas
outsb
daa
mov
jp
or
test
push
fwait
or
mov
icebp
test
jmp
aaa
test
scas
insl
gs
sbb
aaa
daa
scas
pop
out
push
push
aam
out
lret
add
jae
fdivs
inc
std
aam
jne
jbe
std
xchg
pop
mov
inc
fwait
cmp
jbe
inc
leave
hlt
cmovae
cmpsb
lock
cs
xchg
cmp
ljmp
add
test
dec
pop
cmp
rdtsc
mov
xchg
xchg
push
in
cmc
arpl
rcrl
inc
jb
cwtl
movsb
dec
in
out
mov
xlat
clc
jo
leave
rcl
imul
or
push
jno
push
aad
dec
sti
insb
jge
cmc
pushf
mov
aaa
sbb
mov
test
stos
push
xchg
jmp
dec
pushf
mov
cwtl
xor
data16
in
push
push
pop
loop
inc
mov
or
mov
cmc
cwtl
test
push
lods
lock
jmp
std
xor
jae
mov
pushf
mov
adc
rcrb
rorb
or
jp
out
aas
scas
cwtl
xchg
imull
rol
or
test
dec
dec
pop
shl
push
inc
and
es
push
and
repz
mov
fnstenv
cmp
inc
mov
nop
mov
in
cmp
mov
or
test
rcl
push
push
or
cmc
and
dec
in
roll
xchg
sub
sahf
sub
pushf
js
arpl
xchg
or
test
mov
and
movsb
insl
insb
mov
adc
in
and
pop
adc
dec
or
mov
cmp
idivb
mov
mov
and
mov
pop
lret
shlb
and
clc
into
mov
pop
xor
in
or
outsb
in
or
add
scas
fdivl
pushf
dec
sub
or
cmpsl
pop
or
bswap
aad
aad
mov
xchg
push
scas
inc
fs
fdivs
sbb
pop
pushf
loop
pop
cmpsb
in
push
or
sbb
gs
lds
in
mov
push
xor
cmp
decl
in
movsb
jecxz
sbb
jg
ja
mov
cld
mov
int
insl
in
mov
and
imul
in
das
inc
mov
cmp
jb
push
rcl
xchg
in
test
adc
dec
mov
ljmp
int
or
jecxz
ja
jo
hlt
inc
dec
outsl
cmpsb
adc
inc
mov
inc
iret
stos
ss
lods
shl
or
lea
cmp
sahf
lods
mov
rcl
imul
and
fmull
jg
inc
test
gs
movsb
les
or
cwtl
xchg
and
dec
in
daa
enter
popf
lahf
xor
xchg
mov
xchg
arpl
cltd
jge
push
adc
in
sahf
shr
jle
dec
lock
pop
add
or
into
icebp
adc
sub
xchg
ja
call
or
xor
sub
jle
sub
pop
popf
dec
dec
cmp
ss
decl
pusha
jg
mov
aam
jmp
mull
repz
xchg
xchg
aad
rorb
pushf
aam
daa
insb
or
fdivr
mov
ja
adc
add
jl
aam
lods
std
outsl
jge
mov
ret
cmp
mov
fisttpll
and
jae
and
mov
or
jecxz
xchg
pop
cmpb
pop
xor
movsb
out
pop
rorl
jl
ja
mov
dec
roll
out
les
roll
in
into
in
xor
jecxz
xor
lahf
leave
push
push
inc
adc
int
push
andl
dec
mov
fstpt
les
int
mov
and
test
mov
push
hlt
cmpsl
cwtl
sbb
xchg
ret
cld
xor
pop
lret
mov
dec
das
sahf
int3
push
or
jecxz
or
outsb
cli
mov
imul
dec
pop
mov
sti
pop
mov
cltd
jecxz
pop
jbe
aad
xor
dec
rcr
sahf
shrl
mov
ret
cwtl
mov
push
in
xor
dec
jp
mov
mov
jbe
sti
cmp
mov
leave
sbb
cmp
es
dec
scas
lds
leave
jmp
in
dec
jmp
xor
dec
mov
jmp
sbb
out
shr
xor
cmpsl
mov
xchg
pop
icebp
arpl
dec
test
mov
cmpsl
inc
in
dec
pushf
stos
or
andl
ljmp
movsb
lahf
lahf
jne
pusha
in
jmp
aam
sbb
mov
int3
bound
xor
aam
in
call
xor
and
orl
sahf
je
insb
jne
push
test
cmpsb
mov
mov
lods
cmpsb
pop
pop
push
sbb
vmread
out
mov
ljmp
inc
iret
aam
outsl
jo
pop
js
mov
adc
test
jbe
mov
leave
cwtl
mul
mov
mov
sbb
out
addr16
push
add
shl
shr
jmp
jl
in
mov
into
les
mov
mov
pop
in
iret
mov
rcrb
jmp
popf
imul
pop
pushf
add
lods
inc
sub
xchg
daa
ja
sarb
mov
sub
rcll
sbb
cmc
or
jg
adc
flds
rolb
mov
mov
xor
sub
pop
mov
add
aam
in
add
jecxz
lea
fxtract
mov
push
js
jmp
lods
sbb
inc
in
cmpsl
cmpb
out
mov
xchg
sbb
or
jmp
in
lds
push
cld
pop
cmp
xchg
lods
aaa
and
sahf
jmp
lods
ljmp
pop
lcall
inc
into
outsl
and
push
arpl
aaa
repz
lock
cltd
jmp
mov
xchg
jecxz
data16
in
pop
cs
in
fisttpll
es
xor
sbb
repz
adc
in
repz
in
ret
fiadds
inc
sbb
enter
add
sub
pop
cmp
pop
inc
pop
movsb
sbbb
lock
sub
inc
fimull
rorl
and
cltd
push
mov
repz
movsb
sbb
lret
int3
pop
pop
dec
dec
mov
insb
je
pushf
mov
cwtl
mov
dec
ret
mov
xor
inc
fmul
pop
jno
pop
and
sti
jl
clc
jge
mov
pop
outsl
xor
icebp
dec
les
outsb
mov
scas
sti
cmp
aaa
test
aas
push
jmp
sar
cmpsl
pop
sbb
dec
xchg
fimuls
scas
mov
frstor
in
pushf
lcall
jge
test
xchg
stc
jns
cltd
mov
push
loop
jae
mov
xchg
inc
les
iret
out
outsb
int3
jmp
sahf
je
rorl
pop
ljmp
aas
xchg
out
cwtl
daa
cltd
mov
shll
mov
xor
sbb
xchg
sbb
punpckhdq
arpl
xor
sub
inc
push
sbb
cwtl
xchg
stos
popf
imul
aad
mov
lea
inc
jle
rorb
xchg
xchg
les
dec
ja
ret
addr16
outsl
lods
jle
arpl
mov
scas
jl
in
pop
xor
daa
lahf
arpl
mov
loopne
or
lret
lret
mov
mov
addb
maskmovq
testl
lods
sbb
scas
and
sub
push
sub
sub
leave
sti
in
sbb
addb
xchg
lret
out
mov
inc
jo
jecxz
push
mov
pop
sub
stos
mov
inc
cld
aas
xor
mov
js
pop
pop
inc
pop
and
xchg
rcr
out
mov
push
icebp
mov
lods
hlt
cld
pop
add
cmpsb
ss
pop
and
push
mov
or
rolb
imul
loope
push
ud0
inc
aad
or
jmp
xchg
inc
orb
ret
inc
jmp
repnz
jge
or
inc
mov
cltd
mov
arpl
es
lods
fsubs
es
xor
ficompl
mov
insl
mov
sbb
sbb
mov
mov
dec
insl
call
add
or
dec
inc
outsb
pushf
and
or
std
out
pop
fmull
mov
repz
ds
out
cltd
dec
and
arpl
pop
mov
test
inc
jmp
dec
dec
aaa
and
movsb
adcl
dec
ljmp
jb
and
ss
aad
lcall
cwtl
jns
fbstp
daa
cmp
mov
icebp
arpl
xchg
jnp
push
out
fsubrs
xor
cmpsb
aam
inc
xor
je
inc
mov
imul
cmpw
jnp
fisubrs
popa
loope
dec
imul
sbb
aad
iret
pusha
push
sub
xchg
pushf
in
or
out
cmp
mov
dec
mov
shl
into
cmp
add
jne
xor
testl
and
and
jg
inc
dec
fidivrs
mov
sti
xor
mov
arpl
mov
sbb
pop
call
cltd
cmpl
or
imul
insl
in
subl
scas
and
xchg
push
push
inc
push
and
or
push
repz
cld
rclb
mov
outsl
fcompl
xchg
clc
aam
inc
pop
cmp
or
xorl
pushf
lret
repz
sbb
fsub
in
orl
into
jmp
fs
xchg
lea
loope
mov
jbe
ljmp
les
fmul
std
je
cmp
xchg
sbbl
cmp
je
std
jno
ljmp
mov
in
push
jbe
test
inc
pop
xor
push
mov
sbb
shrl
mov
testl
stos
sti
pop
sub
repnz
and
mov
xchg
mov
loopne
push
mov
decb
xchg
cmp
push
hlt
push
aaa
dec
ret
test
mov
cmpsb
jo
prefetch
or
lods
out
push
cltd
enter
data16
jae
daa
out
ja
pop
daa
int3
enter
mov
inc
jmp
mov
adcl
lea
sub
xchg
int3
in
xchg
out
cs
loop
shrl
in
cld
adc
test
add
mov
pop
mov
rcr
loopne
gs
lods
gs
imul
dec
pop
pop
mov
imul
xchg
xor
xor
ja
std
insl
pop
dec
and
add
or
dec
and
lods
notl
in
xor
mov
cltd
sbb
jp
pop
jae
pop
shll
cmpsl
and
rclb
data16
fiadds
popf
fiaddl
mov
dec
jmp
popf
dec
and
lret
push
cli
dec
dec
sti
xor
xchg
ret
add
leave
shlb
push
or
pop
in
lods
rorl
stos
gs
mov
cmpsl
mov
iret
push
inc
xchg
cmp
push
test
movsl
inc
ffree
loop
mov
aad
xchg
test
repz
push
lahf
loop
pop
xor
xchg
fmull
jl
or
push
mov
jno
in
test
cmp
enter
xchg
pop
pusha
push
dec
lods
mov
adcl
aad
pop
inc
mov
pusha
bound
lods
sarb
mov
fsubl
mov
mov
rcll
sahf
lahf
imul
popa
xor
sub
fcoms
test
xor
in
arpl
or
roll
push
mov
test
jns
in
cmp
mov
dec
jns
mov
pop
stos
test
push
les
aas
push
inc
xchg
std
je
dec
andnps
inc
loope
and
inc
xor
sarl
mov
and
inc
pop
and
xorb
and
mov
mov
cmp
xor
lret
push
cltd
dec
dec
mov
repz
mov
sbb
jb
arpl
xchg
and
jge
fdiv
jl
sbb
cwtl
aaa
mov
fwait
in
insl
imul
sub
lahf
les
pop
loope
dec
sbb
and
mov
mov
fbstp
cld
in
mov
jnp
jb
int3
mov
dec
int3
icebp
cmc
sahf
xchg
rorb
dec
push
dec
nop
insb
pushf
and
inc
xchg
iret
popf
loop
jecxz
push
xchg
adc
or
xchg
jbe
movsb
xor
mov
mov
aaa
cmpsb
dec
or
rclb
or
jl
jge
fxrstor
push
mov
ret
jge
pop
mov
insb
dec
add
jns
cmpsl
addr16
cmp
cmp
mov
pop
arpl
clc
or
lea
jmp
jmp
roll
iret
jecxz
jecxz
mov
or
jge
dec
into
add
dec
mov
ret
mov
add
aam
scas
rsm
rcll
loopne
insb
aaa
mov
mov
rorb
test
idiv
mov
lea
sbb
jno
int3
jmp
cwtl
fmuls
xchg
jnp
je
std
lret
mov
cmc
pop
ret
orb
xor
inc
push
jg
push
sub
jne
inc
inc
das
hlt
lods
test
pop
sbb
sti
adc
enter
in
push
arpl
fidivs
mov
mov
pop
ffreep
scas
pop
adc
xor
cmc
dec
insb
test
pop
or
or
and
fucom
sub
xchg
icebp
mov
pop
sub
shll
lea
xor
add
subb
xor
mov
cmc
lret
arpl
mov
test
iret
psrlw
or
add
cmpb
dec
mov
jno
adc
pushf
mov
adc
xlat
add
mov
sbb
addr16
orb
lret
xor
jmp
orb
movsl
xchg
pop
data16
dec
imul
pushf
inc
and
outsl
shll
jmp
orb
lret
inc
in
xlat
movsl
orl
lret
std
lret
mov
or
sbbb
sarb
cwtl
jns
fadd
cltd
jne
enter
stos
cmp
push
xchg
fdiv
cmpsl
inc
sbbb
jg
sbb
gs
mov
mov
dec
push
fisttpl
or
and
cmc
jecxz
dec
std
push
pop
lret
push
movsb
mov
and
mov
jne
push
aaa
loope
lfs
inc
call
jmp
movsb
ja
mov
cmp
xchg
lcall
push
xlat
pop
or
mov
ror
mov
call
mov
and
cmp
jge
cmpsl
cmpsl
jg
mov
cwtl
gs
int3
xor
jnp
inc
and
fmul
or
movsb
lea
push
in
aam
sub
leave
aaa
mov
mov
daa
xchg
jecxz
fistpl
add
orl
lret
orb
clc
jecxz
add
xor
out
adc
arpl
dec
xlat
jle
add
inc
pop
mov
or
pop
add
ja
addr16
lods
pop
mov
cli
mov
jmp
sbb
xorb
stc
add
inc
cmc
lods
and
inc
test
pop
into
mov
test
mov
jecxz
cld
cmp
lea
and
call
inc
push
mov
jle
shll
jp
sbb
in
sub
nop
inc
mov
sbb
or
mov
cmpb
ss
sahf
push
loopne
into
xlat
roll
or
dec
lods
jge
add
jmp
xor
cmc
dec
mov
arpl
or
in
inc
out
das
and
addr16
inc
xor
into
cmp
aad
fs
rcll
lcall
fimull
ja
cwtl
test
icebp
or
out
pop
adc
sbbb
mov
fcom
in
rcrl
mov
aam
fcoml
mov
adc
or
add
mov
addl
push
je
mov
cmc
out
ljmp
add
mov
movsb
ss
or
popa
push
adc
jbe
xor
out
xorl
aad
pop
sti
mov
cmpsl
loope
notl
orl
cs
mov
in
daa
jge
popf
mov
cmc
int3
ja
fwait
push
sbb
lcall
into
pxor
lahf
fidivs
test
testl
popl
je
std
and
aam
cld
js
into
mov
add
mov
xor
les
das
fcmovb
pop
sbb
dec
jmp
sub
sbb
mov
push
ja
dec
ffreep
test
outsb
ud2
lahf
aam
in
push
push
addr16
aam
int3
jns
cmp
mov
andb
movsl
pop
and
in
out
mov
or
sub
and
sub
cltd
mov
xor
arpl
stos
aaa
cmc
int3
data16
sahf
push
jbe
imul
les
fcomps
cmpsl
and
and
in
fmuls
paddb
sbb
pop
stc
mov
cmp
jo
mov
jp
fwait
jo
xor
cmp
xchg
lds
in
mov
arpl
orb
dec
in
nopl
dec
pop
dec
xchg
std
mov
add
adc
adc
sbb
xor
mov
mov
cmp
sbb
inc
rcll
in
mov
sarl
leave
xlat
lret
dec
lds
out
jmp
mov
cltd
xor
andb
dec
and
mov
aaa
push
outsl
jne
enter
or
int3
in
fistps
and
into
push
pushf
mov
sub
inc
cmpb
xor
lahf
out
scas
jo
loopw
cmp
push
push
fsubrl
ja
nop
iret
std
jmp
mov
dec
push
test
pushf
jecxz
inc
inc
jmp
in
push
pop
aaa
jp
pop
movsl
pop
add
xlat
movsb
inc
pop
mov
mov
stc
jmp
xcrypt-ecb
cmpsl
mov
in
sbb
and
dec
jp
ret
lea
jns
aam
mov
jmp
decl
pop
xchg
sub
ficompl
outsb
shll
popf
mov
es
frstor
sub
push
or
jle
out
scas
sub
or
push
dec
cwtl
inc
lret
mov
aas
dec
mov
push
jno
xchg
popl
aaa
arpl
mov
xchg
inc
and
mov
jl
and
push
pusha
rorb
pop
jne
or
pop
ja
dec
inc
mov
dec
mov
jb
loop
scas
and
sbb
lea
ret
cmpsb
lea
jb
dec
rep
and
fcoml
testl
or
test
ret
sti
les
lods
jmp
or
jne
mov
dec
mov
cmc
jg
clc
and
mov
arpl
loop
mov
mov
arpl
insl
jp
push
sub
imul
pushf
cmp
mov
and
or
icebp
jmp
ret
scas
mov
mov
cmpsb
pop
outsb
jbe
jecxz
jmp
jmp
dec
mov
jmp
xchg
push
stos
inc
movsb
adcl
cmc
xor
and
notl
fcmovnb
sub
jmp
pushf
xchg
sbbb
inc
pop
stos
mov
stos
sub
cmp
push
mov
add
cmp
pop
les
test
mov
test
cmpsb
lcall
aaa
mov
loope
mov
mov
pop
push
pop
mov
pop
jp
dec
xchg
int3
cld
nop
xor
lock
pop
inc
xor
imul
aam
inc
push
std
out
sbb
jne
xchg
mov
por
repz
es
out
cmp
call
sbb
or
dec
cmpb
movsb
mov
add
push
xlat
xchg
xchg
mov
mov
repnz
andps
sahf
lcall
frstor
adc
in
mov
sub
add
mov
scas
pcmpeqd
and
sahf
and
dec
sub
cs
out
dec
mov
push
ret
add
ljmp
mov
imul
xchg
jne
xor
jne
lods
aad
pop
or
and
jl
pop
repz
addb
fwait
ret
and
outsl
test
lret
stos
sub
outsb
in
sbb
call
adc
or
xor
ret
xchg
cmp
sub
out
mov
or
or
ficoml
mov
repnz
enter
stos
adc
or
leave
sub
lcall
in
mov
dec
mov
add
in
imul
sub
sub
add
in
out
xchg
add
scas
or
or
in
data16
ret
xchg
adc
ret
and
or
outsl
xchg
cmp
outsb
or
dec
ljmp
xor
sbb
ret
add
adc
or
cli
into
mov
stos
or
xchg
insb
xchg
lcall
adc
mov
mov
in
das
xchg
imul
or
pop
xchg
dec
add
or
dec
adc
or
adc
stos
dec
adc
in
sub
dec
sbb
lea
or
inc
cmp
dec
sub
add
in
sub
fldt
add
add
lods
in
adc
xchg
add
loop
or
test
imul
pop
lods
add
or
cli
int
jns
insl
sub
dec
add
outsb
and
jns
add
es
in
call
sub
mov
outsb
dec
ds
das
in
in
jns
add
cmpsl
das
push
in
add
jne
in
adc
pop
outsb
das
xchg
in
cmpsl
das
pop
in
add
mov
dec
in
add
outsb
or
jns
add
cmc
das
sbb
test
outsb
mov
test
scas
stos
cli
mov
push
mov
ret
adc
rcll
cmp
dec
sub
add
outsb
ds
dec
sbb
or
out
in
sbbl
in
dec
add
sub
pop
dec
dec
mov
outsb
push
lret
sbb
lods
or
cli
dec
mov
dec
dec
ret
sub
push
in
cli
das
xchg
mov
in
cs
das
dec
in
lods
jns
ret
sub
add
test
inc
scas
or
lods
adc
or
lods
add
or
in
xchg
mov
scas
in
movsb
lods
jns
sub
out
insb
xchg
sbb
push
push
ret
adc
repz
ret
add
in
ret
mov
or
xchg
xchg
fwait
add
adcl
mov
add
push
push
mov
inc
mov
iret
or
mov
jl
add
xchg
sub
mov
adc
xchg
arpl
add
dec
mov
or
or
xor
or
iret
xchg
and
into
in
in
xchg
lea
aam
insl
insb
xchg
les
arpl
int3
out
push
stos
hlt
adc
cld
dec
in
das
add
lods
or
insl
dec
in
sub
mov
add
ret
stos
mov
insl
xchg
dec
adc
das
pop
out
xchg
inc
add
in
dec
xchg
in
adc
jecxz
leave
in
gs
test
mov
dec
add
adc
cmp
in
mov
xor
sbb
fisttpll
lods
loop
xchg
enter
scas
cmc
outsl
xchg
std
add
in
sub
xchg
ret
xchg
popf
add
out
sub
push
mov
call
xchg
movsl
adc
push
xchg
sub
xchg
inc
adc
or
arpl
jbe
dec
cld
adc
or
xchg
test
cs
push
dec
xchg
push
add
push
xchg
or
ss
mov
in
es
push
stos
out
adc
xor
cmp
fsubrp
das
xchg
adc
or
sub
add
in
add
scas
jmp
test
sahf
add
adc
or
in
cmpsb
xchg
add
outsl
inc
xchg
push
adc
test
inc
adc
ja
dec
add
sub
or
jecxz
pop
xchg
ret
or
fsub
pop
xchg
mov
aaa
mov
daa
xchg
dec
adc
or
xlat
add
out
or
stos
iret
adc
xor
cltd
add
in
outsl
xchg
out
cs
or
add
adc
or
add
mov
test
mov
cmpsl
xchg
adc
mov
outsb
xchg
pop
add
inc
xchg
or
dec
or
jo
leave
in
js
push
stos
pusha
adc
inc
xchg
or
adc
out
xchg
sbb
out
or
in
or
ret
xchg
cmp
orb
sub
call
sti
xchg
adc
or
rcl
xchg
enter
lock
sub
loopne
ret
xchg
test
xchg
adc
cwtl
dec
cmpb
or
mov
mov
in
mov
push
ret
pop
xchg
ret
or
or
dec
xchg
mov
jno
push
popa
add
in
sub
int3
sbb
mov
adc
and
cmp
dec
xchg
jmp
or
add
in
add
icebp
jmp
enter
scas
in
test
or
cltd
dec
xchg
addl
add
mov
loop
out
leave
adc
mov
in
xchg
push
adc
pop
dec
inc
xchg
dec
add
sub
jb
jecxz
jp
add
mov
mov
xchg
dec
add
in
das
jo
out
add
in
xchg
xor
mov
loop
loop
ljmp
lods
xchg
stos
ficoml
out
or
into
lret
add
in
mov
xchg
inc
add
scas
insl
lods
or
or
mov
sub
or
insb
imul
je
pop
xchg
dec
adc
xchg
dec
add
in
jae
push
adc
or
sub
insb
in
adc
add
out
leave
dec
push
or
sbb
jecxz
into
add
in
lea
fldt
xchg
arpl
lret
dec
adc
sub
sti
or
stos
xchg
out
adc
in
xchg
addl
in
mov
mov
dec
pop
push
mov
in
or
xchg
scas
add
xchg
dec
adc
je
jl
mov
xchg
sub
adc
jmp
test
add
adc
outsl
xor
cs
cmp
sub
adc
or
aam
arpl
add
in
or
hlt
scas
cld
xchg
outsl
add
in
dec
xchg
lods
adc
xchg
or
pushf
xchg
jecxz
test
or
dec
sub
mov
sub
movsb
xchg
scas
adc
mov
dec
xchg
pop
add
adc
add
push
in
jge
dec
mov
gs
sub
in
push
xchg
sbb
int3
or
in
adcb
and
dec
xchg
aad
dec
in
fstl
sub
cmc
add
adc
test
add
adc
movsl
or
xchg
pop
adc
add
dec
mov
dec
fwait
adc
or
enter
out
adc
or
push
or
in
push
xchg
jecxz
ss
xchg
adc
mov
iret
ficoms
lea
mulb
xchg
out
mov
xchg
dec
xchg
sahf
add
in
xchg
int
in
xchg
mov
xchg
ret
and
mov
pop
xchg
scas
add
int
dec
adc
out
xchg
arpl
add
push
or
imul
cmp
outsl
xchg
loop
outsb
or
dec
rclb
add
lret
repz
mov
sbb
outsb
xchg
xchg
add
lcall
mov
dec
lret
push
mov
sub
mov
adc
or
push
push
xchg
sub
xchg
inc
adc
or
ret
stos
leave
ret
adc
enter
adc
or
adc
lea
add
inc
xor
add
add
in
test
jmp
dec
or
das
dec
in
out
xchg
ret
adc
repz
or
sti
in
ret
xchg
mov
mov
adc
xchg
push
mov
cs
mov
or
adc
push
add
add
xchg
dec
adc
jl
dec
add
xchg
sub
int3
or
mov
xchg
add
push
adc
or
or
and
push
adc
or
aam
or
lods
pusha
or
leave
cmp
test
mov
mov
mov
in
in
xchg
insl
adc
or
ret
pop
xchg
addb
or
xor
dec
xchg
sub
jge
or
setb
xchg
or
add
add
in
xor
cmp
in
xchg
mov
aad
lea
lds
xchg
arpl
cmc
dec
adc
call
in
xchg
xchg
into
adc
or
in
mov
or
outsb
out
jmp
or
cs
das
xchg
push
adc
push
sub
add
in
add
ds
call
out
add
in
scas
mov
test
stos
xchg
insl
add
in
sub
notb
add
adc
mov
leave
sub
xchg
or
sahf
xchg
xchg
dec
in
mov
sub
push
mov
int
mov
cmpsb
mov
add
adc
sub
inc
or
ja
push
adc
sub
das
add
in
pop
xchg
loop
pop
and
jnp
pop
cmp
paddsb
aaa
adc
or
daa
xchg
insl
add
in
sub
xlat
adc
or
add
stos
or
iret
add
in
notl
scas
out
lods
xchg
scas
add
lahf
or
xchg
leave
dec
push
xchg
enter
scas
xchg
mov
push
in
or
adc
add
loop
add
add
in
xor
into
and
lea
rclb
add
loop
enter
add
in
call
or
out
test
or
xchg
cwtl
adc
or
loop
mov
add
mov
or
imul
ret
out
dec
imul
out
add
int
jns
lods
or
ret
sub
mov
sbb
or
iret
xchg
xor
push
in
cmp
mov
shr
leave
mov
xor
cmp
leave
in
das
xchg
icebp
adc
stc
insl
loope
or
test
jbe
cltd
stos
test
test
mov
dec
mov
add
push
in
adc
ret
pop
ret
adc
mov
jp
bound
xchg
stos
or
dec
adc
add
stos
jmp
call
adc
or
loop
in
xchg
ljmp
adc
bound
add
in
imul
xchg
mov
pushf
in
outsb
xchg
test
or
mov
jecxz
mov
mov
or
push
out
xchg
pop
add
in
inc
xchg
outsb
adc
insl
jne
sub
jge
add
gs
loop
adc
sbb
out
add
adc
cmp
add
fsubr
cs
sub
xchg
stos
fldl
scas
in
lds
outsb
cmc
insl
xchg
std
add
xchg
andb
mov
sub
adc
add
push
xchg
dec
adc
or
ss
insb
xchg
add
es
repnz
xchg
or
fsubrp
out
xchg
adc
rcll
int3
xchg
adc
and
add
outsl
add
mov
sbb
push
addb
stos
adc
flds
das
in
add
or
cmp
mov
ljmp
imul
or
add
in
lods
xchg
cli
adc
stos
or
xchg
xchg
imul
add
mov
sub
arpl
ret
in
imul
out
test
enter
call
in
scas
jo
outsb
add
sub
xchg
or
or
xor
stos
or
out
test
mov
ficoml
in
xchg
lret
or
and
cli
mov
pushf
loop
or
xchg
movlps
in
xchg
mov
sub
mov
bound
add
in
mov
cmp
add
in
dec
xchg
fistl
insb
or
and
sti
xchg
loop
mov
stos
xchg
test
xchg
or
fwait
scas
xchg
addl
in
mov
add
sbb
mov
xchg
mov
xchg
stos
adc
out
mov
sub
jo
inc
xor
cmp
mov
loop
push
rcl
dec
xchg
fiaddl
insl
in
ret
and
adc
and
lcall
iret
add
adc
jmp
adc
test
test
scas
adc
or
xor
int
cmp
in
in
loop
add
ljmp
dec
add
in
xchg
ret
or
outsb
repnz
insl
add
in
orl
stos
lcall
stos
pop
adcl
mov
insl
mov
jb
push
or
and
cmp
sub
imul
shrl
ret
and
scas
sub
dec
jl
xchg
sub
scas
adc
test
cs
cmc
or
popf
stc
test
loopne
ret
mov
push
jmp
out
dec
ljmp
inc
mov
stos
mov
add
stos
loop
test
add
es
sub
cmp
or
int3
cld
add
jge
push
pop
cmp
xor
inc
andl
add
add
dec
aad
pushf
xor
xor
cmpsl
fimull
fisttpll
push
mov
or
sbb
pop
hlt
ret
arpl
sub
int3
rolb
lock
fnstenv
cmp
xor
and
sub
test
inc
mov
xchg
cmpb
or
mov
sub
gs
mov
rcr
ret
cmpsl
bound
movsl
rcrl
jl
aad
xor
jns
or
fucomp
jle
mov
or
out
mov
lods
fildl
lret
jo
fcomps
je
adc
pushf
popf
bound
fisubrl
inc
fcomps
inc
insl
xchg
jne
xor
fs
inc
hlt
adc
ljmp
test
mov
scas
test
jae
lods
sub
sbb
adc
add
cmp
sub
loop
xchg
mov
adc
stos
ljmp
xchg
stos
ljmp
int3
sub
sub
ljmp
ljmp
imul
test
rolb
ljmp
call
ljmp
lods
or
das
sub
pop
test
hlt
adc
sub
mov
ljmp
mov
mov
push
test
popa
jmp
and
stos
adc
popf
cmp
push
sbb
mov
dec
lods
in
cmp
popf
cmp
int
push
or
into
pusha
cltd
fistpll
int3
xor
std
icebp
test
fidivs
in
out
in
and
hlt
mov
fsubr
cld
out
int
push
jae
arpl
mov
mov
jmp
inc
in
xchg
pushf
ror
insl
push
mov
in
or
or
push
and
lods
test
cmp
xlat
int3
dec
pop
in
call
mov
fcompl
mov
aam
mov
aam
xchg
xchg
inc
or
or
or
jae
fdivrl
loop
int
mov
rclb
or
int3
or
adc
cmp
jl
push
sub
sub
xor
out
es
add
pop
dec
dec
lds
js
or
ret
cwtl
jp
dec
sti
icebp
int3
pop
gs
divps
lods
mov
xchg
add
icebp
incb
lahf
lahf
ret
mov
mov
enterw
pop
cmp
lds
sbb
xchg
jg
loop
arpl
cmp
std
addb
clc
pushf
jbe
rorb
jp
sbb
jmp
push
in
pop
lahf
mov
sbb
in
inc
lret
xor
mov
sbb
rcl
or
insb
loopne
movsl
inc
mov
stos
adc
xchg
pop
out
mov
mov
mov
call
leave
cmp
push
imul
jb
test
mov
stc
lahf
sbb
pop
lret
popf
sub
adc
sbbl
sub
cmc
test
je
or
adc
adc
iret
and
mov
xlat
push
in
or
lods
adc
mov
adc
imul
and
aaa
pop
clc
addr16
xchg
popa
jg
push
lock
in
shr
mov
repnz
or
push
lea
arpl
fidivrs
lret
ret
fs
push
pop
add
mov
std
or
or
in
enter
or
fstps
pop
dec
clc
jns
jne
mov
mov
dec
pushf
mov
push
scas
insb
jb
frstor
xor
call
popf
loope
xlat
mov
cmp
xchg
inc
or
or
sahf
or
pop
cld
out
insl
cmp
or
fstl
out
lods
nop
sub
jne
jne
adc
adc
mov
sub
dec
leave
cmp
push
cmpsb
mov
ret
lea
or
sbb
pushf
jnp
cmp
xor
jecxz
lds
and
pop
sub
cmp
fdivrl
sbb
daa
and
in
shl
mov
imul
xchg
insl
faddl
lods
xchg
leave
jle
cs
lods
xor
or
stc
cmpsl
pop
call
daa
xchg
mov
cmp
stc
xchg
jecxz
test
pop
hlt
adc
ficoml
push
rolb
outsb
out
popa
fistpll
mov
ror
pop
mov
in
sub
add
inc
cmp
fs
ret
jne
fcomp
adc
pop
pop
or
aaa
or
pop
adc
jmp
test
call
mov
fsubrl
fs
in
sub
mov
push
push
in
mov
addr16
loopne
cwtl
lds
mov
fisubrl
rorl
pop
xlat
xchg
test
or
stos
xchg
push
gs
arpl
push
sub
cmp
in
and
stos
add
loop
xchg
adc
or
sub
sub
lods
cmp
ljmp
call
ljmp
enter
mov
mov
mov
adc
into
lods
pushf
jo
mov
sub
scas
test
imul
ljmp
cmp
and
or
sub
jnp
lret
cmp
std
sub
cmp
mov
aaa
fsubrs
lods
jmp
fistl
je
daa
faddl
adc
imul
adcl
jmp
xchg
loop
adcb
xor
fisubrl
mov
add
pop
int
cmp
pminsw
adc
data16
int
cld
stc
stos
clc
xor
mov
mov
jae
insb
mov
or
lea
and
scas
mov
sub
or
lcall
movsl
mov
push
mov
loope
inc
aaa
mov
insl
into
xchg
pop
add
shr
xor
leave
mov
cmpsb
ljmp
cmp
jbe
cmp
cs
sub
into
lds
stos
add
push
pushf
jl
mov
and
movsb
fdiv
push
adcb
jae
imul
add
iret
arpl
aaa
mov
lods
lret
in
push
dec
movsl
inc
scas
xor
lods
push
jmp
outsl
in
mov
mov
dec
cmp
pop
stos
xchg
aam
aad
sbb
push
ret
scas
or
mov
pop
rorb
mov
test
fcmove
jecxz
mov
adcb
adc
inc
cld
orl
dec
ljmp
mov
sub
mov
mov
jmp
xchg
enter
adc
mov
lods
xor
push
pop
ds
mov
movsl
push
imul
lds
add
ret
xchg
fldenv
ret
pop
xchg
insl
pop
sub
repz
add
or
cld
inc
or
int3
stos
cld
aaa
sub
pop
nop
iret
lods
pop
push
fistps
popa
shll
pop
mov
outsb
xchg
fwait
xchg
add
outsb
sahf
and
cmc
mov
hlt
js
scas
push
or
xor
and
rdmsr
addr16
dec
dec
xlat
fildl
lods
aas
js
pop
mov
testb
imul
mov
mov
pushf
cmp
js
int3
cmp
pop
adc
pop
sub
inc
push
xor
push
popa
cmp
xchg
jge
jo
in
sbb
test
dec
xchg
shll
fdivrl
xchg
jecxz
mov
out
cmp
or
xor
data16
roll
gs
mov
rorb
sbb
mov
jnp
mov
dec
lock
scas
jb
jecxz
lahf
jecxz
icebp
mov
int
pop
fisttpl
mov
push
ret
pop
mov
sahf
pop
shl
movsl
fxch
mov
lahf
dec
xchg
xchg
add
inc
in
shll
xchg
insl
xchg
sbb
pop
mov
push
or
jle
xchg
cmp
pop
xor
pop
push
pop
fidivs
repnz
shlb
or
cmpsb
add
mov
mov
sbb
cmpsl
cmp
xor
dec
push
xchg
pop
arpl
mov
cmp
or
pop
add
sbb
sbbl
lods
mov
notb
mov
sbb
xchg
cmp
mov
scas
inc
sbb
test
pusha
xchg
mov
push
add
xchg
fldenv
mov
rclb
and
push
scas
jbe
insl
mov
push
ss
push
ret
lock
push
mov
fidivl
cmp
nop
jbe
and
outsb
inc
imul
shrb
fcompl
icebp
pop
repnz
push
mov
xor
lcall
sub
lds
push
scas
fcmovb
and
jmp
add
test
dec
fiaddl
mov
mov
mov
add
and
daa
dec
cli
cmc
shl
std
in
and
pop
sbb
sub
arpl
fstpl
arpl
cmp
mov
add
out
fiaddl
repz
in
bound
sub
sbb
scas
sub
lahf
jno
scas
jg
cmc
mov
int3
add
jg
repnz
lods
pop
andl
lods
ret
loop
adc
adc
mov
sub
lods
stos
and
mov
stos
cmp
cmp
fwait
test
sub
sub
sub
stc
int3
xor
cli
xchg
jecxz
sub
aam
int
imul
and
test
into
xchg
or
xchg
cmp
sub
cs
push
stos
std
mov
adc
inc
ljmp
xor
scas
ljmp
call
xchg
push
scas
ljmp
ljmp
push
imul
xchg
jne
fsubrp
xlat
xchg
fcoms
shll
mov
xor
jle
mov
in
clc
xchg
stc
mov
or
dec
push
xchg
push
add
sbb
xor
or
data16
push
xchg
mov
mov
mov
xor
movsb
adc
and
lahf
or
cmp
ljmp
in
lds
add
sub
mov
add
in
addr16
cmpsl
adc
or
loop
inc
jecxz
jl
add
or
lods
cmp
ljmp
insb
lret
push
jecxz
sub
mov
inc
mov
dec
lods
insl
imul
dec
lds
adc
sbb
add
inc
pop
cmp
push
jmp
cmp
or
pop
xor
or
in
stc
cld
mov
shll
adc
sub
sbbl
fs
mov
mov
pop
out
sahf
mov
cltd
lods
jb
jb
jo
jb
jo
out
mov
pushf
pop
stc
rorl
mov
pop
fsubrs
out
sub
pop
stc
data16
pop
stc
inc
aam
js
cwtl
mov
js
clc
mov
incl
mov
lds
test
jmp
adc
pop
js
sbb
stc
fs
stc
repz
inc
jbe
lds
jo
push
fs
cmpsb
pop
daa
pop
roll
inc
inc
shll
pop
daa
pop
mov
pusha
jno
lcall
aam
jmp
into
mov
xorl
pop
sar
xor
add
rol
push
cwtl
icebp
inc
pop
loope
sub
pop
repz
mov
lcall
fs
pop
pop
repz
js
mov
pop
mov
lods
mov
mov
pop
aaa
out
mov
mov
sub
std
dec
js
pushf
dec
jae
jo
js
inc
mov
in
je
jge
shr
jae
pop
arpl
mov
or
in
mov
je
test
lds
dec
les
popa
mov
mov
popf
push
lods
or
popa
adc
pop
scas
sbb
dec
and
subb
sub
mov
sub
bnd
pop
sub
push
mov
in
sbb
data16
jne
jmp
pop
mov
in
lods
or
jle
cld
cmc
adc
aas
or
in
mov
ficoml
iret
add
jnp
mov
loop
adc
aad
in
mov
sub
int3
lods
sub
mov
jl
cmp
and
sub
sub
jno
loope
push
sub
repnz
ret
add
movsb
xchg
sbb
scas
jnp
test
xchg
mov
aam
lcall
xrelease
xor
aad
pop
adc
or
cmp
mov
xlat
repz
add
mov
das
xor
jmp
adc
and
add
icebp
aaa
sub
bound
add
sub
out
cmp
add
jnp
inc
rolb
jne
call
outsb
and
xor
and
pushf
stos
sub
faddl
fwait
in
sub
adc
lods
and
faddl
test
mov
lods
xchg
js
mov
inc
lahf
mov
ja
push
dec
cmpl
pop
push
cmp
lods
es
pop
jae
add
push
pop
push
mov
das
add
mov
bound
shr
mov
pop
out
in
adc
aas
sub
inc
lahf
or
mov
pop
and
mov
inc
push
jo
xor
addr16
sub
pusha
sbb
stos
and
das
scas
push
jbe
push
pop
sub
pop
ret
pop
out
jbe
lods
mov
int3
jg
ss
cwtl
sbb
sub
xchg
inc
mov
enter
test
xchg
andb
sub
or
mov
xchg
dec
sub
js
push
sbb
sbbb
call
std
sbb
fdivs
shl
jl
shl
roll
or
cmp
dec
sti
jns
fsubr
sub
cmp
data16
pusha
inc
cmpsl
div
mov
or
pusha
iret
repnz
inc
les
pop
mov
sub
out
push
hlt
cmp
jne
in
insl
mov
cld
ret
push
je
or
ret
fwait
lret
repnz
inc
stos
fwait
ljmp
mov
int
sbb
ja
sub
or
jo
lds
fildll
sub
sarb
sub
movl
or
inc
sub
pusha
sbb
or
xor
push
lods
shl
sbb
add
and
mov
bound
lahf
enter
mov
add
and
push
mov
test
fcomip
push
adc
sub
pop
and
aaa
mov
inc
jnp
pop
sub
dec
flds
sbb
stc
xchg
aaa
cmpb
jg
sbb
and
scas
or
je
mov
scas
fldl
dec
and
dec
xor
ret
inc
pop
out
aad
or
rcrb
inc
or
mov
loope
or
pushf
adc
adc
cmp
stos
aam
sahf
xor
and
adc
pusha
cmpb
sbb
or
dec
sbb
pop
in
test
out
movsb
add
jp
in
xor
mov
cmp
ljmp
sub
dec
test
push
xlat
xchg
imul
fwait
mov
hlt
repnz
pop
adc
mov
dec
sbbb
mov
sub
add
imul
fimull
out
mov
jecxz
sub
es
rolb
ret
jmp
xchg
jecxz
mov
xor
lea
push
sbb
cmp
dec
add
fsubrl
fistps
mov
mov
mov
repnz
xchg
jb
pmovmskb
mov
stos
push
mov
jb
loop
sbb
and
mov
mov
adc
js
out
arpl
push
mov
xchg
add
in
push
xchg
pop
adc
or
lret
jae
sti
xchg
int3
add
in
scas
xchg
mov
push
and
cmp
adc
pushf
xchg
int
out
in
daa
xchg
call
jecxz
pop
xchg
mov
movsb
adc
aaa
or
shrl
add
adc
or
push
mov
adc
adc
lods
cmpsb
leave
andl
out
test
in
xchg
mov
lds
push
repz
call
addr16
push
pop
aas
sbb
out
sbb
sub
xchg
mov
or
sbb
sub
inc
ror
inc
and
dec
pop
sbb
xchg
imul
in
xchg
mov
jmp
test
jecxz
lods
mov
lret
mov
sbbl
add
arpl
jo
loope
in
in
adc
push
loop
hlt
in
rolb
rorb
jb
dec
pusha
dec
into
mov
into
loop
orb
fisttps
adc
sbb
adc
add
cmc
or
pop
jb
leave
aad
pop
mov
push
out
add
fsubl
leave
add
popf
mov
repz
xor
jle
adc
pop
pushf
sub
lock
mov
add
inc
push
in
xor
and
adc
adc
ljmp
jmp
fwait
ss
push
mov
enter
pop
dec
xchg
lods
aad
aas
mov
dec
int
jmp
std
adcb
mov
ljmp
sub
daa
scas
aaa
mov
sbb
sub
add
xor
aam
in
orl
jl
inc
clc
push
push
adc
rorl
jns
push
adc
add
aas
mov
xlat
fistps
js
sbbb
out
or
xchg
int
dec
cmpb
repnz
inc
and
or
sub
sbb
fwait
imul
test
call
lods
pop
add
repz
repz
or
hlt
enter
test
mov
add
das
loope
out
dec
lea
iret
rorl
cmp
cmc
pop
inc
mov
decb
into
jmp
xlat
mov
cltd
or
pusha
cwtl
inc
aam
pop
jno
inc
roll
mov
sbb
mov
pop
cmp
pop
lea
cmp
ret
xchg
jns
hlt
dec
xor
enter
ror
cld
dec
rclb
pop
fmulp
xor
mov
dec
adc
bswap
xchg
mov
dec
or
jmp
cmpsb
mov
push
push
stos
in
pop
in
ds
xchg
je
jle
jns
jecxz
xchg
or
leave
mov
mov
fwait
dec
pop
adc
jge
mov
repnz
andl
mul
push
cli
sub
das
cli
mov
xor
push
jg
jae
adc
adcl
cmp
xchg
push
popf
aad
into
mov
sub
dec
fnstcw
cmp
inc
cli
and
je
jl
xchg
adcl
xchg
push
pop
push
scas
push
fs
mov
in
mov
xor
sbb
adc
push
cmpsl
loopne
adc
stos
rolb
adc
add
xorl
ss
cmp
es
and
and
and
nop
and
and
ja
dec
add
jae
addr16
hlt
addr16
addr16
addr16
out
mulb
addr16
addr16
addr16
cmp
addr16
xor
addr16
add
sbb
sbb
and
movsb
and
and
and
and
and
and
and
mov
and
adc
xchg
in
push
push
jge
std
push
outsb
push
jbe
notb
push
dec
push
iret
push
mov
push
mov
pop
push
fsts
push
push
push
insb
popf
lcall
push
mov
push
mov
ss
out
mov
add
add
dec
cwtl
dec
sbb
dec
xchg
dec
sub
pop
mov
je
jl
fs
cld
fs
in
fs
fs
push
fs
fs
fs
fs
fs
shll
mov
or
stos
sub
jecxz
lret
in
out
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
add
inc
loop
lret
xchg
add
adcb
xor
lods
cmpl
xchg
std
pop
arpl
add
jle
jle
jle
inc
loop
mov
jg
jae
addr16
shll
ret
cmp
and
outsl
and
and
or
ret
or
leave
and
out
pop
sahf
lods
jle
inc
inc
mov
ja
xchg
in
sub
xchg
shlb
sbb
inc
and
adc
and
insb
popf
push
lea
mov
and
jle
jle
inc
add
in
pop
jg
jae
addr16
add
repz
incb
daa
add
test
sbb
ja
scas
adcl
bound
adc
xor
lock
xor
sub
ss
push
sahf
adc
sar
xchg
rcrl
stos
shlb
rcll
sbb
int
dec
pop
dec
sbb
pop
popf
jle
jle
jle
jle
jle
jle
push
lahf
ret
xor
inc
cmp
dec
repnz
ljmp
out
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
shrb
mov
and
add
or
adc
xchg
xchg
push
dec
push
and
out
dec
xchg
dec
xlat
dec
fmuls
dec
sub
sub
mov
pop
insb
dec
add
cld
jle
jle
jle
jle
jle
jle
jle
jle
hlt
dec
cltd
fs
fs
jmp
xor
test
mov
cli
int
out
loopne
loopne
loopne
rcrb
daa
stc
outsl
and
and
and
or
loopne
pop
in
loopne
add
mov
mov
out
cmp
in
add
lea
das
and
and
and
bound
xor
test
mov
xchg
sub
push
insb
imul
jecxz
mov
or
cld
dec
es
inc
dec
pop
dec
xlat
dec
or
dec
jns
mov
mov
les
jle
jle
jle
inc
add
in
ret
add
andl
cmp
out
es
lock
dec
arpl
rcll
out
xor
lea
inc
mov
sbb
cmp
and
and
add
mov
loop
stos
in
xor
ja
jg
cmp
push
sub
adc
in
and
mov
insb
xor
pop
dec
shlb
pop
cs
cmp
adc
or
leave
arpl
loop
sbb
popf
and
int3
pop
test
adc
pop
cmp
and
and
sub
daa
shl
nop
xchg
push
mov
xor
xchg
pop
pop
dec
xchg
jle
jle
jle
jle
jle
jle
jle
jle
int3
mov
mov
fs
xor
pushf
roll
jbe
sbb
insl
sbb
lret
xchg
rol
xchg
test
mov
inc
pop
add
jo
pop
jg
add
add
inc
lods
ja
ret
adc
jmp
ret
sbb
lea
pop
add
cmpsb
popf
lea
loopne
inc
inc
in
popf
dec
shll
cmp
outsb
add
xchg
cmc
xchg
add
mov
push
fs
jmp
jg
lods
outsl
shr
dec
lcall
mov
test
fmuls
dec
add
dec
xor
sub
adcb
adc
ss
dec
imul
and
mov
ja
dec
movl
out
out
out
sub
mov
ja
jg
jae
rclb
xchg
and
and
sbb
mov
lahf
test
inc
popf
xor
inc
mov
push
cmp
je
cmp
sahf
and
add
inc
adc
jl
add
or
pop
fcomps
mov
mov
jg
mov
int3
stos
push
add
and
and
push
ret
dec
insl
mov
ret
lds
popf
repz
lods
ja
jg
jae
addr16
xchg
push
push
test
das
sub
xlat
pop
stos
rolb
push
sbb
test
std
or
int
daa
pop
and
adc
das
xor
movsb
test
ret
in
daa
jg
es
je
rcrb
nop
push
inc
add
and
and
sub
sbb
sbb
ficomps
dec
in
pop
nop
sbb
dec
adc
mov
push
push
add
pop
lahf
xchg
pop
mov
adc
inc
insl
lcall
movd
inc
mov
or
jecxz
les
add
dec
push
dec
add
ja
jmp
cmp
mov
lret
mov
leave
cwtl
test
cmp
inc
jno
stc
outsb
jno
lds
orl
outsb
out
adc
scas
lea
xchg
fs
cmp
and
and
stc
call
xchg
jl
pop
jecxz
mov
cs
push
push
adc
rorl
push
jo
jg
dec
mov
push
shrl
mov
in
mov
add
and
and
es
add
jmp
stos
and
out
psrlq
sbbb
xorl
xchg
repz
loopne
push
dec
hlt
rcrb
imul
or
push
dec
xor
stos
dec
mov
lds
std
pop
daa
or
and
and
xor
les
repz
and
inc
jl
or
jmp
or
or
fldt
call
xchg
mov
jecxz
jl
fs
cmp
cli
jmp
repz
es
xor
lods
cmp
pop
cmp
or
das
sbbl
pusha
test
push
jmp
das
xlat
pop
scas
push
mov
int3
push
mov
push
insb
mov
sbb
rcr
out
add
push
jecxz
fwait
add
lahf
adc
jle
push
jle
jle
jle
jle
jle
inc
lods
pop
push
sahf
test
pushf
xchg
push
inc
popf
shll
sbbb
sbb
dec
and
add
cld
xchg
scas
test
lahf
and
jl
cmp
arpl
sub
push
push
jmp
adcb
out
sub
sbb
into
dec
aas
jg
mov
imul
rol
cmp
and
and
xchg
mov
pop
mov
sub
das
dec
push
ljmp
cmpsb
aam
rclb
jns
push
bnd
dec
push
jg
jae
adc
xchg
aas
outsb
xchg
fsubrl
mov
insb
addb
adc
jle
sahf
fs
xor
addr16
ss
repz
pop
or
aam
fcmove
es
out
das
and
and
mov
sub
add
mov
test
cld
cmp
rorb
scas
and
inc
pop
test
sbb
push
sti
mov
leave
push
test
cmp
and
scas
xchg
out
das
nop
lahf
push
adcb
sarl
pop
test
sbb
xor
es
mov
and
cmp
push
leave
mov
push
mov
add
cmp
or
ja
dec
cltd
push
lcall
adc
sbb
add
or
mov
in
mov
sub
adc
mov
punpckhwd
jl
sub
pop
test
mov
or
into
sub
mov
test
or
xchg
adc
adc
shl
insb
leave
pop
sahf
inc
xchg
mov
cld
test
mov
and
dec
sub
rorb
pop
sbb
jl
loopne
icebp
je
add
repnz
xchg
or
mov
call
mov
jp
in
cmp
ss
dec
cmp
pop
jae
pop
ror
sub
inc
pushf
inc
ja
dec
imul
jmp
dec
in
xchg
fsubr
push
cmp
bound
jmp
xchg
mov
pop
std
inc
shrb
jmp
xor
add
add
mov
fdivr
cli
outsb
mov
dec
stos
rcll
iret
inc
test
cmpb
mov
fcmove
daa
repnz
and
or
push
cld
push
mov
leave
add
mov
xor
test
mov
daa
fisttps
xchg
jg
mov
aam
mov
iret
bnd
add
je
xchg
pop
aaa
scas
jl,pn
das
jg
insl
or
decb
xor
aam
mov
pop
lret
sar
nop
mov
sub
scas
jle
fdivl
test
adc
cmp
and
dec
xor
les
repnz
xor
cmp
insb
lret
inc
ret
cmp
mov
out
in
mov
ds
cmpsl
das
sbb
dec
cmp
inc
sub
mov
fcomps
pop
push
pop
xchg
cmp
fstpt
shlb
addr16
addr16
mov
loopne
loopne
shr
adc
push
cmp
push
nop
push
add
push
jge
jecxz
movb
test
jg
dec
jl
add
aam
sub
xchg
jg
push
rolb
cmpsl
push
jo
lock
mov
inc
push
fsts
push
mov
lea
dec
adc
add
dec
jle
push
in
fs
shll
xchg
sbb
push
rclb
push
mov
andl
fs
push
push
dec
ja
dec
or
bswap
jnp
sahf
scas
in
pavgb
loopne
rcrb
pushf
mov
sub
xor
push
dec
lods
dec
mov
cs
ds
scas
jg
jnp
cmpsl
cmp
addr16
sahf
adc
cmp
ljmp
mov
push
jg
jae
addr16
or
jae
adc
push
dec
xchg
mov
popf
sub
inc
sbb
mov
test
rorb
inc
push
adcl
popf
mov
jge
loop
loope
fs
popf
xor
push
mov
scas
insl
fcomip
cwtl
inc
or
fsts
adc
test
sbb
int3
jl
test
into
mov
call
adc
sub
aaa
sub
les
adc
and
mov
pop
pop
lahf
xchg
imul
mov
jmp
pop
cmc
inc
adc
add
push
adc
pushf
ficomps
in
ffree
aas
cmp
sub
mov
fucomi
adc
or
cmc
scas
dec
xchg
dec
pop
mov
adc
rcr
dec
test
jge
dec
dec
int3
je
jl
fs
or
add
cwtl
cmp
jg
cmp
mov
adc
sbbl
cmp
icebp
test
inc
sbb
leave
push
loop
sub
ds
ja
test
xchg
je
imul
pop
iret
dec
dec
jle
jle
jle
jle
inc
ret
xchg
dec
je
int3
xchg
gs
fdivs
sahf
mov
dec
aad
cli
cmp
dec
mov
push
ret
dec
ret
jle
outsb
int3
pop
dec
int
adc
orl
out
lret
stos
popf
sub
fcoml
cmp
cld
int3
decb
int
dec
into
adc
iret
push
dec
or
push
lahf
nop
push
push
cmp
add
dec
ror
adc
into
xchg
dec
push
icebp
push
and
or
fiaddl
add
push
mov
sarb
hlt
push
mov
inc
rorl
xchg
rclb
bnd
loope
sahf
dec
push
in
ds
pusha
imul
out
aam
adc
adc
sbb
add
push
sub
pop
dec
fistpll
mov
add
addr16
xor
mov
dec
sub
shlb
loopne
loopne
add
je
xchg
shl
cli
scas
in
adc
push
cwtl
pop
es
ja
mov
cwtl
decl
int3
leave
sub
dec
pop
outsb
mov
dec
test
mov
cmp
das
loopne
cli
imul
ljmp
out
insb
je
or
mov
cld
es
jg
xchg
cmp
push
lret
push
lahf
cld
call
or
lcall
loopne
loopne
add
bound
imul
xchg
sub
movsb
or
jmp
pop
add
orl
rorb
cmpsl
loopne
imul
cmp
add
mov
gs
popf
adc
shll
rclb
rorl
jle
subps
das
jmp
add
in
dec
inc
inc
dec
mov
cmp
movsl
xor
xchg
test
jmp
cmp
test
dec
jne
or
jnp
ja
mov
aam
test
lea
mov
mov
dec
sub
insb
or
fwait
mov
ds
lea
js
fdivr
pop
cmp
and
outsb
sub
out
ljmp
nop
dec
imul
ljmp
in
ljmp
ret
mov
xchg
sbbb
mov
dec
mov
dec
cmpl
fs
xor
js
xor
ss
add
sbb
xchg
mov
jl
rolb
dec
mov
ret
adc
inc
xchg
xchg
jae
sahf
mov
xchg
xchg
test
data16
or
test
jp
ds
shll
dec
mov
cld
or
pop
adc
cli
sbb
sbb
push
lret
mov
push
mov
or
outsl
sub
je
ret
outsl
xchg
es
jl
jmp
ljmp
or
sbb
push
sub
push
sub
sbb
ljmp
insb
inc
hlt
pop
test
jbe
adc
dec
sbb
lea
dec
adc
xchg
mov
imul
repnz
dec
or
jnp
jge
mov
repnz
and
jg
sbb
cmc
dec
dec
dec
fidivs
sub
mov
adc
add
scas
pop
jge
icebp
mov
dec
ss
sbb
mov
fsubs
or
pop
insl
push
sti
fistps
inc
and
cmp
stos
dec
add
scas
dec
mov
sbb
mov
les
pop
fs
adc
cwtl
cmp
fdivrl
fisttps
sub
stos
push
sbbl
or
sbb
repz
adc
nop
dec
push
test
push
repnz
cmp
shlb
sahf
and
mov
es
inc
mov
fmull
xor
mov
popa
aas
cmpsl
adc
push
hlt
jmp
fstps
cld
and
out
subb
das
shlb
push
leave
lea
pop
pop
sbb
dec
fmuls
or
outsl
cmp
cmpsb
mov
ljmp
or
adc
jo
clc
add
enter
push
or
rolb
out
ljmp
dec
ret
inc
cmp
aam
pop
ss
cwtl
pop
out
enter
sahf
sub
or
lock
popa
test
mov
mov
or
sub
add
cli
jle
fisubrl
add
jmp
dec
pop
shl
outsb
mov
outsb
add
lods
pop
out
rclb
das
loop
inc
pop
ja
xchg
cld
dec
mov
and
je
cld
insl
xor
aad
sbb
fs
lods
xchg
push
test
mov
add
push
stos
cmpsb
sahf
xlat
rcrl
repz
xchg
lods
mov
sbb
xor
popf
rsqrtps
mov
cwtl
pop
flds
mov
movsb
je
cmp
sarb
nop
push
out
mov
sbb
push
pop
adc
sbbl
sti
pop
cmp
jp
cli
xorl
shll
or
mov
jns
lods
dec
mov
mov
add
cltd
scas
gs
pop
or
pop
inc
in
adc
or
jg
mov
push
pushf
jb
inc
dec
dec
or
jmp
fcoml
sbb
insl
int3
popf
orb
add
loop
ret
sahf
or
cwtl
cmp
cld
xor
popf
pop
mov
jnp
jnp
shll
mull
cmp
jge
push
out
adc
or
sub
cmpsb
push
xor
mov
lods
dec
inc
push
fwait
int
jle
inc
adc
jae
ret
or
sub
adc
cli
repz
push
in
out
sbb
mov
cmp
xor
fwait
loop
js
daa
jae
sahf
adc
ja
add
cwtl
adcl
xor
jg
jae
jae
es
xor
sahf
iret
fwait
rorl
ret
lods
push
je
pop
pop
inc
mov
mov
mov
cmp
fs
dec
xchg
shrb
loop
and
popf
insl
aad
ss
movb
push
test
imul
mov
sahf
fisubrs
outsl
dec
pop
push
pushf
push
add
adc
mov
lret
push
sub
lods
repnz
dec
sbb
adc
je
jg
lea
jns
xchg
jl
scas
into
cmp
and
into
sahf
add
jne
fnstcw
fstl
repnz
aam
lods
or
fisttpll
mov
out
ret
sti
addl
mov
cld
mov
jl
jle
loopne
ljmp
jecxz
mov
mov
push
or
mov
cwtl
jp
fdivrl
sbb
out
outsb
pop
pop
push
lcall
daa
pop
push
add
cmp
mov
pop
roll
mov
stos
lret
sbb
dec
cmpsl
leave
sub
pop
adc
mov
out
mov
mov
add
dec
scas
cwtl
xor
xorb
or
fbld
adc
cmp
sahf
popf
jle
jae
jae
cmpsb
jnp
xchg
jl
mov
jecxz
lods
arpl
cli
pop
jo
shll
das
mov
rclb
pop
push
mov
cwtl
jg
mov
sarl
std
or
push
dec
xor
pop
cmp
cmp
xor
test
cmp
mov
add
icebp
add
adc
add
les
enter
mov
sbb
jnp
popf
add
inc
mov
pushf
bound
mov
xor
ret
dec
test
add
xlat
iret
enter
jle
std
ljmp
add
sahf
xlat
push
adc
mov
mov
sub
sti
inc
in
ss
mov
xor
ljmp
outsb
lods
mov
jl
jp
imul
out
ret
lods
push
mov
cmp
ja
sub
cmp
ljmp
xchg
aas
xchg
call
fs
mov
push
xchg
lret
mov
mov
lcall
insl
push
push
ret
fmul
pop
adc
mov
ljmp
mov
dec
sub
lds
call
je
xchg
sub
dec
movd
leave
popf
insl
lea
push
xchg
dec
sub
out
sub
ljmp
bnd
fstpl
mov
imul
ja
xchg
scas
das
arpl
scas
adc
outsb
inc
add
lods
cwtl
lea
pop
rclb
roll
push
loope
push
ficompl
adc
mov
mov
push
aam
scas
out
xlat
leave
adc
fs
sti
nop
pop
mov
leave
mov
cli
popf
call
mov
stos
jmp
mov
add
pop
cld
pop
adc
rcrb
aam
adc
mov
adc
shrb
and
lea
cmp
repz
in
and
lahf
cwtl
pop
pop
mov
in
xchg
cmp
aam
lods
pop
lock
add
arpl
mov
aam
in
jecxz
call
ja
sahf
stos
scas
pop
jmpw
pop
insl
jno
inc
dec
ja
mov
or
fdivrs
push
mov
xor
jns
or
mov
or
mov
leave
jle
out
sbb
or
stos
jmp
cmp
ss
test
outsb
pop
xchg
sbb
addl
call
mov
daa
mov
fildll
ljmp
outsb
int
lods
cli
cwtl
dec
rclb
pop
ja
mov
enter
sub
ret
add
or
lds
jp
mov
adc
push
lcall
fdivrl
insl
push
aam
push
imul
push
lahf
outsl
mov
repz
and
cli
mov
push
or
mov
pop
insl
stc
sub
add
fstps
sbb
jmp
pushw
push
repnz
cmp
lret
adc
lahf
sbb
scas
mov
inc
pop
jl
ja
insb
or
icebp
rcrb
nop
or
jge
dec
fcompl
sub
mov
fimull
and
mov
sahf
pop
mov
cmp
in
add
out
pop
imul
cs
cmp
lcall
cwtl
adc
mov
or
pop
jecxz
je
lret
inc
aad
sub
ljmp
inc
mov
repnz
insb
dec
sahf
add
or
inc
or
sub
dec
mov
mov
add
call
insb
scas
test
cmp
add
or
jl
fs
xchg
scas
xchg
push
or
ret
adc
in
cltd
fcmove
fwait
xor
xor
sub
leave
lds
dec
and
sbb
int3
adc
ret
ja
out
dec
jmp
mov
cld
jle
jle
cld
dec
push
jp
cltd
mov
iret
jle
jle
jle
gs
rorb
xchg
mov
repnz
cmpb
add
ret
daa
andl
or
pop
rorl
ljmp
cmp
sbb
iret
outsb
lret
dec
adc
in
insb
dec
nop
sahf
mov
fmul
adc
loop
jecxz
or
je
or
ljmp
push
pop
lea
mov
push
fimuls
or
dec
push
or
mov
dec
es
fstpt
push
inc
and
subl
push
mov
int
and
push
dec
sbb
dec
fs
or
adc
push
or
push
mov
cli
add
loopne
rorb
pop
xchg
add
add
push
or
mov
or
ss
push
das
and
scas
repz
mov
cmp
mov
or
mov
cmpb
addl
mov
repz
cmp
into
push
sbb
shrd
jle
cld
dec
ljmp
das
sahf
leave
dec
mov
sub
inc
dec
add
adc
iret
sahf
or
mov
push
sbb
outsb
lods
jle
jle
jge
add
or
dec
imul
dec
sbb
mov
mov
cmp
ret
iret
mov
jle
jnp
cmpsb
or
dec
dec
push
dec
into
dec
mov
jnp
mov
imul
dec
sbb
adc
or
adc
xor
fcmovb
ljmp
int3
push
fmuls
or
jle
jle
in
sbb
mov
pop
iret
sub
enter
dec
adc
leave
adc
popf
ret
mov
mov
ljmp
ficompl
xor
xchg
orl
lcall
lcall
jge
or
insb
ret
lret
inc
adc
ret
jle
int3
dec
lods
dec
jle
fmull
les
std
xchg
mov
dec
lahf
mov
or
ret
push
sbb
scas
insl
mov
dec
sbb
inc
jle
xchg
ret
push
jae
orl
dec
rorl
lea
dec
push
dec
jle
mov
jg
ret
out
jnp
sahf
enter
dec
lods
pop
in
push
add
insb
mov
jg
jae
adcl
int3
test
jge
sbb
dec
sahf
push
test
test
xor
scas
stc
dec
dec
or
jnp
xchg
ds
cltd
mov
ja
xchg
inc
iret
insb
je
jl
fs
fs
int3
ss
das
cld
int
pop
jnp
addr16
addr16
mov
addr16
divl
outsb
dec
out
popf
or
adc
pop
leave
loopne
rorb
inc
loopne
ljmp
loopne
loopne
rorb
jle
cld
loop
push
mov
or
mov
mov
mov
lcall
pop
cs
add
jecxz
insl
sahf
jle
pop
int3
ljmp
add
orl
dec
push
pand
lea
lea
sbb
inc
iret
adc
repz
cmpsb
mov
mov
roll
pop
arpl
push
repz
inc
cmpsb
lods
les
aaa
and
cwtl
adc
roll
scas
lea
sub
ret
test
mov
or
rcr
push
lcall
mov
popf
and
push
mov
mov
or
sahf
cs
rcrb
sub
ds
lods
out
ret
outsb
fidivrs
or
scas
sahf
scas
outsl
rcrb
lahf
mov
push
dec
call
repz
dec
xchg
insb
sbb
add
loop
ret
mov
nop
insb
lcall
clc
lcall
mov
mov
sbbl
dec
hlt
insb
jns
sub
xchg
aam
lods
wbinvd
insl
cwtl
cmp
fldcw
lahf
mov
dec
cltd
das
aad
out
sbbl
dec
hlt
push
mov
dec
jmp
mov
pop
movsb
loope
lods
mov
dec
and
lret
imul
outsb
pop
pop
cwtl
inc
dec
das
in
pop
jmp
popf
in
jge
mov
scas
jle
jmp
test
in
sub
leave
cwtl
jmp
cmp
rolb
test
sti
inc
cmp
jge
test
mov
adc
or
pop
imul
mov
cwtl
pop
out
imul
out
pop
and
pop
add
push
xchg
push
adc
andl
out
add
inc
cli
out
into
loopne
loopne
loopne
loopne
loopne
loopne
shl
sub
or
test
jmp
push
jl
or
test
jge
das
outsl
movsl
jo
stc
ds
add
xorl
jne
jecxz
and
add
xorl
xchg
jle
dec
sub
jae
addr16
lods
addr16
addr16
push
out
shlb
outsl
fs
imull
mov
push
mov
pop
push
sar
add
fwait
mov
push
xor
xchg
cmp
ficoml
aaa
mov
shlb
cmp
test
adc
leave
fldt
fmull
dec
gs
aad
adc
push
out
push
notb
std
push
mov
cmp
fidivl
fldenv
sub
adc
ljmp
add
cmpsl
adc
aaa
fs
pop
mov
cmp
xor
mov
jp
repnz
mov
jle
shrb
mov
jle
jle
jle
jle
pop
fisubrs
mov
fnsave
push
sbb
cmp
xor
inc
cli
cs
cltd
loopne
ficompl
mov
jmp
pop
gs
clc
sub
push
xchg
jnp
adc
fbld
mov
pop
je
jl
fs
fs
or
enter
out
cs
or
jmp
mov
aaa
sahf
lret
add
mov
jle
xchg
sbb
or
cltd
dec
or
and
push
fisubrs
jp
jo
mov
popf
outsb
jge
scas
xchg
pop
cmpsb
test
arpl
cli
ret
repz
mov
popf
dec
ljmp
push
add
xor
add
mov
leave
mov
mov
das
lods
cs
sahf
mov
jle
int3
lret
dec
test
into
sub
and
jp
movsb
dec
push
mov
inc
and
dec
jg
out
adc
jle
pusha
adc
or
in
inc
sbb
lods
movsl
push
rep
loope
mov
mov
pop
mov
mov
sbb
jno
and
lods
mov
push
jbe
cs
aam
fwait
mov
rcll
fisubrl
or
fptan
dec
jne
pop
loopne
cli
pusha
test
jmp
les
filds
cmpsb
pop
out
and
cli
insl
dec
push
in
dec
xchg
sbb
mov
sub
jae
mov
inc
popf
inc
in
aas
loope
test
popf
lea
inc
arpl
jp
sub
inc
in
das
ret
out
mov
pushf
inc
sub
xor
sub
mov
mov
mov
jl
outsb
scas
cld
scas
test
mov
inc
add
cs
sbb
push
push
loop
pop
push
mov
adc
fldcw
xchg
cmp
or
test
cld
pushf
dec
sahf
jae
mov
sti
ret
mov
jg
xchg
adc
bnd
stc
loopne
rcll
sahf
cwtl
add
repnz
push
mov
pushf
insb
pusha
in
jge
inc
mov
sbb
cmp
and
and
imul
pusha
fisubrl
xchg
mov
je
js
pusha
aaa
incb
jp
cmpb
cld
mov
pop
sbb
sub
test
jno
cmc
ds
cld
adc
test
xchg
rolb
pushf
out
xchg
push
or
pop
adc
data16
fwait
cmp
rcl
pop
jg
jae
mov
cld
test
jmp
outsb
inc
mov
iret
jp
pop
test
dec
jns
xor
mov
mov
mov
mov
push
pop
push
push
shlb
ss
and
xor
sub
inc
cli
dec
cmp
sbb
sarl
jge
cmp
sbb
nop
sbb
mov
ljmp
std
push
fiadds
dec
scas
push
dec
rorb
push
sahf
adc
mov
dec
das
cmpsb
xchg
or
movsl
js
int3
mov
jb
cli
jmp
add
ret
dec
mov
mov
loop
or
jae
add
je
ja
dec
jg,pt
jae
lcall
inc
push
repz
ja
dec
out
jg
jae
sahf
mov
fisubrl
pop
dec
lods
ljmp
mov
repz
jg
xchg
push
xchg
sets
sti
lods
mov
lods
cmp
jl
lahf
jge
xchg
sbb
pushf
or
adc
in
ldmxcsr
call
or
jmp
jg
sbb
lcall
sub
push
fwait
or
sbbl
jmp
daa
out
rorb
lods
and
cmp
adc
rcll
xchg
dec
mov
dec
ja
lcall
mov
pop
adc
cmp
pop
aaa
inc
idivl
xchg
outsb
sbb
cmc
mov
ss
loopne
out
or
xchg
pop
repnz
loopne
fisubrl
fsubs
test
mov
in
xor
mov
jl
dec
jge
mov
sub
rol
xchg
ss
xchg
mov
shrb
xlat
call
dec
shll
sub
int3
push
push
mov
jle
add
sti
mov
lea
xchg
mov
inc
popa
stos
arpl
add
push
enter
or
mov
movsl
ljmp
pop
repnz
mov
sbb
shr
adc
fnstenv
sahf
in
faddl
jl
in
out
loopne
loopne
rcl
mov
dec
test
push
jg
jae
addr16
xchg
or
adc
jae
mov
cmp
xor
push
sahf
call
cltd
mov
in
or
fcmovu
in
mov
lret
dec
xor
push
jl
pop
sarb
cmp
sub
test
sbb
cli
sub
jmp
jp
rcr
lea
test
fwait
sbb
cmpsl
dec
jae
sbbl
mov
mov
xchg
mov
lods
pop
pop
rol
ljmp
mov
xchg
into
sbb
push
jp
sbb
lret
sbb
sub
outsl
stos
cli
mov
push
mov
mov
test
scas
mov
ljmp
mov
out
jle
mov
in
ja
dec
outsb
negl
push
mov
fldl
jae
cltd
or
fbld
adc
mov
sub
xor
shrl
dec
xchg
ficoms
popf
pop
xchg
cltd
iret
shrb
jl
inc
sbb
dec
nop
or
das
out
loopne
fldcw
sub
mov
rcll
mov
cmp
jg
pop
or
das
dec
or
popa
rcr
sti
sub
add
pop
fsubr
ljmp
cmpsb
shr
sbb
mov
sarl
ret
hlt
jns
jae
addr16
jnp
sahf
roll
fildll
cmpsl
aad
jp
stos
in
arpl
add
insb
sar
insl
lods
lcall
lahf
scas
aam
xlat
in
sbb
in
mov
lea
mov
mov
inc
stc
inc
daa
lea
lcall
add
cli
inc
aam
adc
sub
lods
xor
xlat
mov
pop
mov
dec
test
push
insb
aas
or
dec
xor
sub
aas
sahf
roll
dec
sahf
mov
xor
cmp
adcb
mov
xchg
in
lods
xchg
out
int
cmp
ss
das
lahf
cmp
lahf
cmp
lea
ljmp
add
flds
inc
call
mov
cld
mov
pop
shll
cld
xchg
shrb
jge
mov
jmp
mov
pop
pop
lahf
subl
inc
adc
push
stc
push
dec
push
insb
in
jnp
inc
dec
and
mov
mov
ss
pop
cli
test
lds
addr16
mov
add
daa
mov
push
mov
fsub
loopne
jns
add
or
push
mov
es
mov
cli
sahf
repz
fwait
out
loopne
shlb
mov
cmpsb
inc
leave
xchg
out
loopne
shrb
outsl
icebp
rorl
fcompl
jge
daa
clc
and
xor
cmp
and
xor
xor
shrb
dec
xor
stc
pusha
aaa
scas
rolb
adc
mov
je
dec
in
inc
lcall
or
aam
xchg
mov
cld
fdivrp
cs
loopne
loopne
loopne
loopne
rclb
mov
sti
scas
loop
or
pop
lret
dec
mov
jle
jle
jle
hlt
mov
xor
jmp
popa
sbb
jp
xor
repnz
jnp
out
sub
leave
inc
out
into
dec
ds
into
dec
xchg
into
rsqrtps
push
scas
push
mov
push
xchg
dec
cli
or
ss
mov
cli
cs
cli
jmp
adc
shl
nop
loopne
rclb
fildll
repnz
loopne
cli
xchg
inc
out
shlb
jne
repz
xchg
dec
das
je
jl
add
sti
sti
outsb
or
psubd
stc
ljmp
xchg
scas
sub
setp
or
scas
jne
or
repz
or
xchg
inc
scas
xchg
and
mov
mov
cmp
rolb
je
loop
push
mov
sahf
pop
mov
aam
adc
jecxz
adc
and
fs
stos
pop
sub
inc
adc
cmpsb
inc
push
sub
dec
add
daa
xor
ljmp
enter
xchg
mov
repz
jae
sbb
mov
xor
push
xor
and
or
fldenv
test
dec
loope
sub
insl
dec
ret
mov
xor
add
mov
ljmp
leave
cmpl
mov
adc
jno
ljmp
setl
leave
mov
cmp
push
sub
nop
outsb
insb
pop
je
jl
lret
push
xchg
add
sbb
xchg
dec
jg
int3
mov
sbb
dec
aam
dec
add
dec
dec
loopne
xor
dec
lret
xor
outsb
push
mov
jns
cwtl
cwtl
dec
sarl
dec
mov
sub
lea
iret
call
cli
mov
sbb
jno
pop
aas
pop
cli
iret
enter
leave
dec
push
ret
das
ret
jno
dec
int3
pop
fisubrl
adc
cmpsl
adc
aas
fistpl
dec
out
add
fwait
jne
scas
insl
clc
aam
xor
test
or
mov
sahf
mov
mov
test
dec
test
dec
imul
into
xchg
mov
jmp
leave
fildll
pop
mov
scas
adc
mov
mov
lods
ret
jle
addr16
mull
push
add
xchg
scas
add
cwtl
and
mov
adc
fdiv
jmp
xor
ret
arpl
jns
sub
rorl
mov
rorl
int3
cli
inc
loop
cmp
mov
insl
add
addr16
into
lds
loop
add
aad
xor
iret
mov
shrb
cmp
jge
js
fwait
lods
adc
fdiv
push
pop
xchg
pusha
adc
out
pop
shll
das
cmp
jp
xchg
dec
pop
jg
xchg
out
xor
es
inc
add
xorb
jl
ljmp
cwtl
mov
xchg
inc
xlat
dec
lahf
je
jl
fs
mov
dec
les
dec
test
mov
jmp
lea
dec
out
cwtl
inc
sbb
sub
int
pop
inc
lods
xchg
hlt
mov
cmpsb
pushf
aam
das
cmp
or
cltd
adc
inc
rcl
mov
adc
sarl
push
popf
int
ret
ds
gs
test
sahf
mov
push
or
mov
imul
fs
sahf
or
pop
bound
pushf
or
sbb
cli
dec
dec
ja
dec
cmp
sub
lods
lea
jle
in
fisubrs
mov
cmpl
push
fimull
cltd
jle
sbb
add
jb
dec
sahf
sub
or
dec
outsl
pop
ror
xchg
sub
lahf
test
jl
add
rcrl
pop
fs
xor
decl
cld
mov
dec
movsb
sbb
add
and
push
test
ret
jl
dec
push
lahf
dec
outsb
inc
pop
dec
mov
xchg
outsb
sbb
insb
fwait
add
test
mov
lret
mov
xor
cld
jmp
mov
push
repnz
inc
sbb
je
sbb
clc
mov
pop
iret
sub
push
or
outsb
or
dec
iret
std
sti
mov
ret
mov
dec
mov
sub
mov
sbb
sahf
inc
mov
mov
nop
rcrb
dec
xchg
ljmp
pop
movsb
clc
dec
inc
cmp
addl
xchg
sahf
nop
js
insb
cmpsl
adc
data16
sbb
xlat
cmc
test
jne
mov
sbbl
cs
push
insb
mov
rcrl
mov
icebp
or
sbb
jmp
adc
jl
fs
les
mov
stos
insb
pop
push
or
mov
xchg
outsb
cld
fisttpl
sbb
mov
push
iret
sbb
lahf
cmp
les
arpl
in
jle
aad
jno
test
dec
cmpsb
push
mov
filds
inc
lahf
enter
test
cmpsb
pop
aam
pop
daa
mov
rorl
dec
or
pop
pop
dec
mov
addb
add
and
popf
outsl
std
gs
fdivl
cmp
call
adc
imul
fsts
mov
xor
xchg
or
dec
mov
sti
pop
jne
repz
ret
dec
pop
mov
lcall
icebp
add
ljmp
xchg
or
or
mov
cmp
stc
mov
lods
call
dec
aad
pop
push
add
jne
sarl
in
mov
shl
fs
enter
popf
dec
aam
enter
mov
popa
sbb
fwait
incb
sub
mov
jl
mov
cmpb
jmp
xor
fldcw
rcl
daa
leave
jle
dec
cmpsl
dec
call
fstps
loop
imul
mov
sahf
je
dec
cmp
sbb
xchg
push
add
pop
sahf
jne
inc
hlt
jmp
insl
lea
and
jl
push
pop
insl
pop
xor
mov
scas
jp
popf
scas
xor
pop
lods
fiaddl
xchg
lds
xchg
push
pop
dec
lret
push
test
xor
leave
push
lods
mov
add
jns
sbb
adc
pop
mov
or
jl
or
movsb
cmpsl
adc
mov
lea
and
push
mov
cmp
sbbl
clc
pop
rclb
cli
adc
out
nop
and
outsb
jns
xchg
ljmp
jg
loopne
ret
gs
pop
dec
in
lcall
sahf
jmp
xchg
sub
inc
mov
js
fiaddl
cmp
sbb
push
orl
mov
in
clc
cmp
mov
jne
sbb
inc
addl
filds
adc
fstps
lods
das
cmp
mov
outsb
push
loop
jbe
xor
ljmp
dec
cld
inc
repnz
jg
inc
mov
test
xchg
sbb
or
xchg
lods
pop
ljmp
xor
ret
push
xchg
cmp
jl
test
mov
sbb
test
out
test
addl
mov
cmpsl
leave
mov
xchg
pop
sbb
aad
add
dec
ret
mov
into
sub
dec
cwtl
jg
xchg
roll
fcomp
pop
mov
lea
push
push
jp
rcrb
incb
mov
fadd
mov
scas
repz
fcoms
mov
sti
ja
or
mov
add
jmp
pop
enter
add
or
jns
xchg
lcall
arpl
sub
dec
jl
jecxz
adc
popf
ret
xor
push
or
push
scas
add
addps
les
push
aam
ret
or
insb
cltd
ss
test
enter
sahf
xor
push
faddl
out
xchg
or
or
cmp
mov
dec
mov
mov
es
or
sbb
fdivrs
in
outsb
cmpsl
pop
call
pop
add
pop
push
add
lahf
aas
mov
pushf
mov
aas
and
pop
aam
fildl
mov
insb
lcall
ss
cwtl
cs
push
arpl
or
mov
pop
pop
int
cmpsl
pop
adc
jle
xchg
adc
leave
fisubrs
mov
fsubr
push
push
cmp
in
jg
lcall
lea
or
sbb
fiadds
pop
dec
repz
cli
test
setge
inc
jl
ja
xchg
fadds
pop
adc
dec
cmp
mov
sbb
outsb
mov
xor
leave
das
pop
int
lret
cmpl
jae
push
mov
dec
fmull
notl
cmp
lcall
push
sub
sahf
sub
addr16
mov
scas
pop
loopne
fstpt
adc
sbb
cmp
mov
push
leave
in
pop
shrb
out
pop
test
mov
sahf
cmp
pop
scas
nop
add
add
lods
mov
repnz
adc
jnp
les
dec
pop
lea
dec
popf
cmp
adc
pop
adc
or
sti
mov
outsl
adc
jl
pop
lods
inc
mov
xchg
test
fldl
cld
scas
outsb
lea
in
pop
hlt
mov
jne
test
mov
insb
pop
repnz
nop
adc
shrl
insb
dec
int3
enter
loop
cwtl
aas
sar
mov
lods
push
daa
mov
test
outsl
and
adc
pop
ljmp
stos
and
mov
jns
lods
pop
outsl
pop
in
cli
mov
or
das
outsl
inc
cmpsb
push
popf
jmp
fsubrl
pop
imul
faddl
or
cli
jl
fldt
les
push
in
ja
mov
shlb
mov
fadds
or
sarb
std
ss
xchg
scas
std
in
es
mov
dec
jmp
cmpl
or
dec
out
je
je
fistps
mov
add
lahf
jmp
repnz
xor
pusha
rclb
je
ja
lcall
lahf
and
pop
sub
out
dec
orb
cmp
repz
sahf
pushf
icebp
les
add
jb
push
inc
mov
inc
nop
cmc
add
jno
fmuls
mov
mov
das
sbb
loop
xlat
sbb
add
push
adc
test
sbb
xor
xchg
sub
jmp
adc
mov
sbb
dec
cmp
dec
mov
mov
inc
cli
dec
enter
dec
xlat
test
loop
sbb
add
jae
js
insb
std
cld
mov
fcom
pop
jmp
jo
insb
int
ja
sbb
pop
fstpt
sub
xchg
and
lahf
lods
clc
cmpsl
leave
pop
jmp
mov
mov
or
or
fwait
sub
sbb
cmpl
push
lcall
leave
push
jp
pop
das
test
cmp
inc
aas
ret
pop
jge,pt
fcmove
xchg
xlat
repz
and
xor
mov
fnsave
add
insl
out
leave
and
hlt
mov
push
pop
aam
cmp
xchg
push
out
or
sahf
jmp
push
nop
add
cltd
pop
lods
sbb
inc
mov
and
or
push
cmp
adcb
enter
pop
das
mov
sahf
inc
insl
repz
mov
adc
movb
dec
das
cmp
rolb
mov
out
add
fildll
pop
inc
cmp
xchg
adc
les
sub
cs
jl
xlat
imul
les
and
pop
insb
pop
or
sub
push
adc
subl
push
pop
movsb
or
scas
or
lock
sub
xor
dec
roll
mov
scas
decl
or
int
enter
xorl
fstpt
pop
insl
inc
mov
shrb
ret
repnz
mov
outsl
aaa
subb
mov
shll
lea
pop
inc
jne
jae
call
adc
add
mov
jg
cwtl
pop
shrl
sbb
imul
jmp
mov
push
push
loop
ret
mov
jg
or
jecxz
pop
mov
aas
sub
out
push
in
ffreep
lods
iret
mov
or
insl
fildl
mov
clc
lods
pop
test
insl
cwtl
cmp
sbbl
dec
hlt
out
jns
scas
sub
wbinvd
out
cwtl
cmp
fldcw
pop
leave
hlt
call
xchg
cltd
sub
mov
cwtl
mov
mov
add
in
and
push
std
lea
ljmp
push
repnz
popf
std
out
xor
in
xchg
pop
in
les
mov
dec
or
hlt
push
pop
out
nop
jp
jl
rol
adc
dec
ja
adc
mov
mov
inc
mov
cmpsb
mov
mov
push
sub
daa
movsb
cmpsb
add
subb
cmp
sbb
mov
shll
mov
mov
gs
test
cltd
mov
fildll
std
in
arpl
fnstcw
pop
push
sub
mov
mov
es
cmp
xchg
loop
gs
fimuls
pop
ds
loop
jmp
mov
push
sbb
insb
cs
in
sub
fwait
arpl
loopne
call
push
or
adc
cmp
and
les
dec
push
cmp
cmp
fwait
push
mov
push
subb
clc
outsb
in
push
imul
dec
xchg
adc
lea
dec
imul
xchg
iret
fwait
ljmp
stos
dec
rolb
mov
imul
test
xchg
int
aam
adcl
inc
enter
add
stos
int3
xchg
inc
call
ljmp
push
stos
leave
imul
push
push
xchg
stos
out
dec
stos
push
dec
imul
add
dec
xchg
push
dec
imul
or
add
fwait
loop
imul
push
leave
stos
psubusb
push
lods
ljmp
arpl
test
sbb
into
push
loop
jo
stos
push
jmp
xchg
push
jecxz
ret
into
mov
mov
mov
xchg
mov
ds
adc
punpckhdq
add
pushf
sub
dec
hlt
outsl
mov
loop
scas
mov
dec
sub
call
mov
sub
add
stos
loop
jecxz
into
push
xchg
mov
push
sub
imul
push
dec
jns
fwait
aad
mov
stos
dec
sahf
add
push
dec
shrl
cmp
mov
or
enter
sub
ljmp
xchg
cmp
cmp
cmp
mov
mov
stos
outsl
imul
aam
push
jecxz
insl
pushf
sub
or
outsb
xchg
jmp
jecxz
test
call
int
stos
mov
iret
cmp
or
mov
sub
push
or
xchg
dec
push
in
dec
xchg
xchg
xlat
dec
aaa
into
sub
out
dec
adc
int
xchg
stos
jmp
das
movsb
or
push
test
dec
xchg
insb
push
push
add
leave
push
xchg
pminsw
sahf
push
mov
add
xchg
or
rcll
stos
ret
scas
aam
stos
mov
into
enter
or
call
ret
lea
int3
imul
dec
enter
push
mov
ljmp
dec
push
or
ret
xchg
imul
int3
mov
cwtl
xchg
fwait
push
loop
lea
scas
push
or
in
xchg
and
xorb
push
xor
rcl
push
cmp
and
cmp
sbb
add
loop
fwait
push
insb
push
cld
fwait
xlat
mov
xchg
push
das
jmp
or
or
stos
sete
or
mov
pop
out
push
adc
aad
lea
xlat
push
mov
imul
outsl
xchg
cmp
cmp
cmp
xchg
insb
loop
mov
dec
dec
sub
xor
enter
aad
push
mov
imul
mov
cmp
cmp
in
aam
iret
fwait
scas
stos
adc
int3
loop
scas
push
or
ret
jecxz
xchg
imul
arpl
cmp
xchg
add
into
xor
mov
sub
aam
dec
push
push
or
into
add
in
pop
cs
mov
dec
mov
cmc
test
movw
pushf
pushf
pushf
lea
jmp
push
repnz
call
movb
jmp
xchg
mov
insl
call
mov
xor
mov
rcll
jg
stc
int
xchg
push
cmpb
jle
lods
nop
test
stc
int
xor
inc
fsubrp
js
fs
push
push
pop
mov
fmulp
jnp
xlat
mov
leave
addr16
test
xchg
inc
stos
ja
sub
pop
dec
push
aas
imul
mov
inc
or
in
es
sbb
jo
inc
shrl
cmp
add
adcl
gs
fldt
aad
push
or
cltd
xor
cmp
rcll
add
lea
loopne
hlt
dec
dec
sbb
sti
aaa
jp
xchg
dec
ret
testb
xchg
cmp
mov
ret
dec
in
dec
jns
push
testb
sbb
dec
mov
cld
mov
cmpl
cmp
div
fildl
mov
mov
and
sbbb
test
mov
or
xchg
cld
addr16
cli
loopne
add
bound
sbb
mov
mov
jmp
cmp
mov
push
fcmovne
or
pushf
push
cmp
push
jno
subl
subb
clc
insl
out
sub
pop
das
push
fldl
neg
pop
scas
mov
and
popa
push
or
sbb
sbbb
sub
pusha
push
adc
call
jb
pop
add
adc
mov
sbbb
sbb
and
fwait
add
fldenv
xor
repnz
orb
adc
rcll
jmp
stos
and
test
cwtl
out
mov
cmpsl
xchg
sbb
or
js
or
sub
or
mov
push
jb
pop
in
std
test
sarb
and
sub
orb
mov
imul
mov
ffree
stos
mov
frstor
adc
pop
add
shrl
or
fucomi
stos
lods
add
rcl
mov
clc
push
pusha
mov
cmpb
jmp
not
pusha
lea
not
not
pusha
movzwl
lea
lea
pop
mov
pushf
pushf
lea
call
jmp
test
out
out
cs
in
push
subl
repnz
sbb
jne
pop
lret
stos
cltd
jns
and
xor
push
xchg
lea
test
mov
pop
add
call
in
dec
mov
xor
mov
shlb
or
lcall
test
dec
loope
loope
or
add
lds
jg
and
or
dec
lret
cld
push
aas
icebp
out
cltd
xchg
xor
subl
leave
ret
orb
call
loop
call
push
movb
push
movl
movb
pushf
pushf
lea
jmp
lea
jae
call
scas
fdivrs
out
mov
lcall
add
pop
adc
out
push
bound
lods
dec
pop
imul
push
pushl
or
sbb
fisubs
out
inc
test
cmp
dec
xchg
std
sub
aad
mov
cmc
out
pop
xchg
pop
pop
daa
lea
cmp
add
loope
cld
iret
or
popf
ffree
xor
pop
mov
outsb
sbb
inc
out
mov
sahf
mov
sbb
pop
inc
add
jno
mov
xor
mov
and
cmpsl
jbe
out
cmp
pusha
lea
je
pushf
lea
jmp
rep
jmp
pushf
movl
call
and
sbb
leave
mov
sub
or
jg
push
sbb
mov
imul
jecxz
xchg
cmc
cmpsl
jp
jl
pusha
das
js
decl
pusha
js
sbb
popf
out
sbb
and
ljmp
or
xor
sbb
inc
test
dec
and
stc
sarl
mov
rcrl
idiv
sbb
cli
and
cmp
sub
adc
mov
pop
inc
dec
push
stc
es
mov
in
pop
xchg
jle
jno
add
jno
daa
icebp
mov
xor
cmp
push
aas
adc
fwait
ja
aam
dec
leave
popa
roll
or
mov
adc
shll
push
cmc
ss
push
inc
and
mov
cli
inc
sub
adc
xor
daa
jp
aad
push
gs
out
movsl
xchg
cvtpi2ps
dec
movsb
push
adc
sbb
cmp
jecxz
cvtpi2ps
pushf
mov
lock
fs
xchg
loopne
out
cmp
cmp
mov
call
mov
icebp
aas
cld
int
inc
cmp
inc
push
neg
mov
add
rcrl
mov
aad
pop
aad
push
rcrl
push
movsb
cmp
loopne
jmp
aas
jns
call
repz
dec
cmp
incl
mov
xor
lcall
mov
outsl
into
pop
insb
push
adc
out
cmp
jge
push
and
cmp
jbe
les
xchg
xor
bound
cmp
mov
out
sbb
add
push
push
ret
out
fwait
outsl
sti
pop
jp
add
push
in
ja
push
dec
shll
push
lods
aam
sbb
xor
repnz
mov
jmp
mov
mov
aaa
lods
lcall
inc
pop
popf
jmp
jo
mov
lock
mov
and
dec
push
cmp
lret
xor
and
mov
mov
insl
fisubs
mov
jnp
mov
movsl
dec
cmp
xor
add
inc
int3
fiaddl
clc
cwtl
jg
out
or
mov
lahf
imul
std
aam
inc
sarl
lahf
or
mov
lret
xor
daa
pop
mov
flds
popf
or
test
jmp
mov
add
fs
mov
flds
mov
xorb
cmp
shlb
push
insl
enter
roll
hlt
adc
daa
fwait
and
cmp
xchg
mov
arpl
repnz
dec
mov
xlat
mov
xchg
ret
xlat
cltd
jmp
hlt
mov
cwtl
xchg
jbe
mov
test
cltd
cmpsb
ret
mov
xorb
daa
sahf
sbb
dec
movsl
xor
daa
sbb
sbbl
or
fmull
sub
or
xlat
cmpsb
pop
adcb
and
in
out
pop
xor
sbb
inc
lea
stc
add
aaa
pop
mov
gs
jno
adc
add
pushf
mov
push
pushf
push
lea
jmp
subb
out
sbb
loop
mov
stos
ja
stos
cltd
subb
icebp
adc
mov
mov
addr16
cmp
mov
and
dec
fnstsw
mov
adcb
pusha
jmp
lods
clc
aam
mov
fdivs
insb
jmp
push
push
lock
clc
or
int3
lret
jp
in
cmp
jb
fucomi
sub
lock
and
mov
mov
pop
push
cmp
mov
xor
movsb
mov
mov
stc
sarb
out
xchg
mov
sbb
jmp
nop
jbe
dec
cmpsb
jbe
daa
ds
jae
in
push
stos
jp
out
xchg
mov
std
into
ds
inc
cwtl
push
jle
into
seta
mov
out
dec
gs
xor
jno
sub
sbb
setp
sbb
in
push
pop
cmp
ds
out
sahf
mov
cmpsb
adc
mov
jns
pop
sub
loopne
mov
push
push
dec
int
xor
mov
mov
shll
add
mov
stos
hlt
loope
repnz
stos
xor
add
xchg
xchg
out
rorb
sub
lret
loope
ds
fnstsw
les
fucom
jns
add
cs
ljmp
insl
cmpsb
cltd
mov
dec
xchg
sbb
push
ret
cmp
test
insl
rcr
xchg
aaa
ss
icebp
into
and
mov
push
add
mov
filds
daa
jb
push
into
xor
fsubs
data16
out
jb
pop
add
mov
mov
xor
mulb
lea
cmp
sbb
mov
xchg
xchg
aam
iret
andl
loope
inc
aas
je
adc
cli
xchg
sahf
int
adc
aas
adc
fistps
mov
pushl
sub
out
and
negl
inc
sub
mov
mov
pop
dec
pop
stos
push
push
rolb
and
je
xor
inc
and
push
mov
lea
jmp
pusha
rol
add
jno
add
bt
bt
ror
jmp
call
sub
nop
inc
loop
push
loope
sbb
lods
pop
orl
dec
fdivp
stc
loope
bound
repz
xchg
cmpsl
divb
jle
movsb
push
js
add
dec
or
mov
mov
es
lahf
hlt
jnp
repnz
daa
andl
add
push
roll
mov
xchg
pop
or
or
out
rcrl
add
lds
sbb
pushf
mov
sti
sbb
lds
fs
aas
inc
int
lcall
insl
roll
cmc
jecxz
inc
dec
xor
sahf
out
loope
call
popf
xchg
jl
ljmp
xor
jns
or
adc
jno
xor
into
addl
push
xchg
adc
push
lods
je
ds
cmpsb
push
scas
or
push
cld
and
test
jmp
sti
jmp
xchg
call
inc
ror
mov
jae
jnp
icebp
pop
jle
dec
mov
loopne
sub
cmp
and
orb
mov
dec
loope
rcrl
add
mov
scas
jp
or
clc
cld
xchg
ss
mov
sbb
and
ficoml
loopne
push
jne
push
mov
fstps
mov
nop
popf
jns
jbe
dec
int
xlat
daa
xor
jne
push
sbb
out
pop
lock
inc
or
loopne
rcrb
add
cwtl
mov
daa
mov
push
in
in
mov
in
pop
mov
insb
add
jb
jg
lods
mov
loopne
push
push
popa
js
test
adc
fstps
dec
aam
mov
adc
or
mov
add
cmp
pop
sbb
aad
jno
add
clc
push
mov
call
and
mov
out
mov
jge
int3
pushf
out
fdivs
push
cmp
pushf
inc
rcrb
cltd
jle
mov
pop
leave
shrb
bound
xor
jmp
cmp
xchg
scas
cmp
pop
mov
pop
ret
adc
out
mov
jnp
jle
and
pop
pop
mov
lods
out
or
xchg
test
add
sarb
mov
sbb
fstl
js
xchg
push
xor
push
cmp
mov
scas
push
cmpsb
int3
jno
pop
out
push
jp
jns
sbb
icebp
clc
sbb
jecxz,pt
out
out
push
rorb
test
mov
fcom
lret
jmp
sti
cwtl
add
pushf
out
push
mov
or
pop
mov
adcl
out
flds
push
int
and
gs
or
sbb
outsb
and
adc
cmp
push
sub
jp
dec
bound
arpl
add
jmp
add
xchg
push
jne
aam
xorl
dec
xor
adc
mov
inc
inc
aaa
pop
jne
sti
inc
adc
lret
push
bound
or
jnp
mov
out
pop
out
das
pop
subl
lods
or
fwait
out
sub
jmp
or
or
and
mov
aam
rcrl
add
loopne
mov
out
sub
mov
je
mov
jge
pushf
cmpsl
test
mov
mov
fsubrl
lock
push
pop
cmc
sahf
sbb
cmpsl
pop
cwtl
dec
call
adc
data16
push
iret
cmpsb
push
add
add
pop
push
xor
popf
xchg
xchg
scas
jbe
hlt
rol
sbb
dec
imul
mov
jno
int3
push
inc
adc
cltd
pop
loope
scas
fsubr
movsl
jbe
and
push
pop
and
cmp
js
pop
mov
fsts
lret
shrl
add
mov
fs
mov
jmp
shrb
inc
rcr
adc
xor
mov
add
pop
repz
pusha
add
adc
lcall
push
fwait
inc
repnz
mov
xchg
jge
lret
mov
lcall
out
push
sub
out
nop
orb
or
loope
inc
xor
scas
pop
push
in
out
das
test
mov
adc
in
call
inc
out
or
rolb
push
xchg
pop
imul
bound
cmp
add
xlat
inc
out
add
inc
js
inc
nop
push
pushf
or
push
pop
jmp
je
sbb
shr
repz
cmp
jecxz
rorb
add
add
ficoml
ljmp
scas
popf
cltd
out
test
mov
mov
cmp
mov
pop
push
lret
mov
std
mov
xor
xchg
movsb
test
mov
jl
shr
pop
arpl
imul
pop
out
xor
push
sbb
adc
icebp
int
push
sub
xchg
insb
ljmp
fsubs
push
rol
in
mov
mov
ss
jge
outsb
sbb
xor
mov
sahf
jge
loop
mov
js
sub
cmp
add
xchg
and
cmpsb
add
push
gs
cltd
out
jle
and
pop
in
cmp
cmp
or
fisubl
shl
push
pop
push
push
sarl
push
movsb
int3
and
inc
add
mov
ret
add
int
and
xchg
mov
fistpll
mov
inc
fnstsw
mov
bound
inc
cld
jo
jno
iret
xor
jle
pop
movsb
pop
ror
mulb
dec
pop
frstor
icebp
jbe
in
xlat
out
and
push
cli
mul
lret
mov
not
lea
lea
pusha
mov
jmp
pusha
pushf
lea
jle
push
push
pushl
pusha
call
xor
adc
or
adc
aas
sbb
sub
int
pop
mov
push
xchg
test
adc
imul
ja
mov
mov
sub
cmp
jmp
orb
test
ja
test
fisttps
das
and
sub
mov
es
jp
pusha
jae
jb
push
lret
loop
mov
lret
roll
mov
ss
or
filds
pop
lahf
adc
out
and
cmpsb
icebp
cmp
push
sbb
cli
pop
iret
cmc
testl
sub
jg
loopne
je
adc
dec
adc
gs
lock
addr16
jge
fdivrl
gs
dec
mov
and
xor
or
or
ret
in
test
call
xlat
jge
sbbl
sbb
push
movsb
dec
int3
jae
mov
gs
pop
add
mov
iret
mov
ja
mov
sahf
addr16
inc
push
cwtl
popf
add
mov
or
sbbb
in
out
lock
mov
adc
imul
mov
into
popa
mov
cmp
imul
sbb
adcb
fldenv
inc
mov
fcoml
hlt
lds
jb
call
xchg
mov
pop
dec
popf
xchg
aas
shr
insb
or
nop
bnd
pop
sahf
and
cmp
cmp
sub
je
test
xchg
out
cli
subl
or
add
scas
loopne
insl
mov
or
or
loopne
adc
mov
cmp
mov
clc
lcall
cli
test
push
mov
ja
mov
push
ja
in
dec
add
rorb
stos
xor
lea
sub
stc
out
into
addr16
fldcw
ja
jp
cmpsb
push
cmpsl
rorl
adc
out
sahf
out
repz
addl
popa
pop
or
adcl
xchg
out
icebp
insb
testl
call
jns
pusha
lods
ss
out
popa
jle
in
jbe
push
call
daa
sbb
xchg
fwait
es
mov
flds
jbe
add
mov
adc
inc
xchg
cmpsl
nop
stc
sbb
push
ret
inc
roll
cmc
mov
insl
repz
icebp
out
push
aad
mov
push
out
adcb
xchg
cld
xchg
fwait
sbb
out
sar
jmp
or
or
stc
push
sti
add
cmp
adc
rep
mov
jo
xchg
mov
je
xchg
mov
adc
inc
inc
out
ljmp
mov
pusha
les
jns
fimuls
adc
into
test
lods
adc
add
ja
scas
fistpll
cmp
pop
lahf
pusha
lods
sbb
sub
shll
sub
pushf
cmc
enter
jne
mov
setge
push
inc
lods
xchg
adc
rcrb
push
popa
insl
xchg
enter
mov
mov
ret
xchg
lret
lret
lret
push
push
pcmpgtd
lods
int
xchg
jle
dec
stos
mov
lahf
xor
es
fisttpll
and
das
lret
test
pop
push
mov
push
cmp
gs
je
js
mov
mov
jge
mov
ficompl
ljmp
outsl
test
push
sbb
xor
adc
xor
cwtl
divl
inc
jge
pop
pop
xlat
sbb
imul
jle
in
xor
pop
inc
jl
pop
push
insl
cmp
aas
xchg
out
dec
xchg
cld
and
mov
mov
mov
fst
rorl
xchg
mov
mov
xchg
mov
mov
mov
xor
lea
inc
push
xchg
clc
or
mov
sbb
add
xchg
cmpb
imul
xor
xchg
aam
and
cld
inc
xchg
mov
sub
bound
stc
sahf
xchg
out
stos
push
push
stc
add
cwtl
inc
dec
mov
rol
add
jns
jp
inc
xchg
pop
loopne
sbb
sub
dec
pop
test
shrb
aas
cmp
dec
lahf
xor
mov
sub
iret
popa
insl
and
lods
jns
push
push
test
scas
jne
or
dec
jge
into
xchg
movsb
lds
push
mov
push
lods
mov
shlb
inc
cwtl
adc
je
rclb
fimuls
out
xchg
insb
scas
fldt
lock
adc
fsub
sub
push
sbb
xchg
leave
or
aad
add
aas
sub
xchg
out
fidivl
dec
xor
or
stos
je
jbe
jecxz
stos
pop
out
cmp
ret
sub
mov
dec
or
lods
xorb
mov
cmc
push
int
sub
outsl
pop
pop
mov
pushf
jp
fidivrl
push
sub
sahf
cli
imul
cmc
es
adc
dec
sbb
inc
test
in
in
das
jp
in
cld
pop
cmp
adc
add
sub
push
push
mov
adc
jno
mov
mov
push
stos
push
mov
mov
push
mov
cld
pushl
cmc
push
out
jbe
jnp
lock
scas
lcall
div
cwtl
mov
repnz
inc
push
ljmp
ret
leave
aam
jo
dec
jl
inc
ror
loop
or
xchg
in
adc
jb
mov
aad
dec
sahf
ja
inc
fildl
ja
pop
dec
orb
fidivl
inc
dec
inc
jp
pusha
or
xchg
out
xlat
flds
push
dec
data16
in
or
out
pop
lds
in
adc
fistps
jb
vpsadbw
push
push
sub
cmc
pushl
popl
pushf
pushl
cmp
jmp
jmp
subl
xchg
out
fdivr
inc
dec
xchg
mov
cmc
mov
or
pop
add
div
mov
cmp
pop
clc
jne
inc
sub
arpl
adc
pushf
jne
cmp
add
inc
ret
or
push
push
xor
inc
fsubr
nop
inc
fcomi
out
or
into
filds
lret
sub
bound
testb
dec
dec
or
mov
ljmp
adc
shrb
std
in
rclb
jle
insb
xor
and
leave
pop
xchg
cmp
test
or
nop
sbbl
addr16
stos
shlb
or
or
xchg
jg
pop
shll
sub
aad
jnp
shll
jg
add
test
jg
out
pmaddwd
pop
xor
testl
insb
cltd
cltd
xor
sarl
fldlg2
dec
xor
sbb
xchg
jno
jle
sbb
and
shlb
nop
dec
pop
out
jnp
pusha
cmp
dec
nop
out
pop
aam
mov
lds
sbb
pop
stos
or
push
int3
repnz
jmp
jmp
sahf
incb
push
dec
cmpsb
clc
fisubs
out
push
insb
cmpsb
gs
jne
out
jne
add
jnp
adc
sbb
or
sub
xchg
mov
dec
test
stos
arpl
mov
sbb
pop
cmpsb
lahf
shrl
mov
push
popf
ret
jbe
shrl
push
cmp
and
mov
xchg
out
sbb
mov
aas
or
je
dec
outsl
xchg
cmc
daa
in
cmpb
loopne
out
or
xchg
dec
sarb
dec
push
mov
sub
scas
inc
cld
lea
loope
mov
mov
and
mov
andb
out
sub
aad
loope
inc
pop
pop
mov
in
xor
xor
lods
cmp
shr
mov
aam
jae
jb
fwait
jle
jne
out
cmpl
lcall
jns
dec
sbb
nop
xchg
add
scas
sub
mov
mov
inc
mov
or
stc
add
pop
pop
adc
add
loop
mov
aaa
adc
mov
test
jg
adc
jae
sahf
xchg
cmpsl
mov
mov
pop
aad
stos
jno
testb
pop
mov
ror
scas
add
cli
adc
jp
sub
call
cwtl
xor
push
cmpsl
fldt
out
sar
xchg
in
dec
adc
xchg
mov
xchg
std
cmc
inc
inc
sub
in
fwait
pop
sub
xor
xchg
in
inc
ror
sbb
or
jg
xor
cwtl
adc
sar
loop
push
testl
xchg
add
push
xor
in
inc
mov
test
rorb
add
rclb
fsubl
and
jecxz
mov
out
test
fidivs
bound
cli
js
and
add
dec
or
lods
loop
mov
ds
mov
cli
aas
daa
insl
push
sbb
mov
push
push
inc
dec
cmp
add
out
clc
lea
jb
stc
cmp
push
lea
jae
pushf
shr
rcl
adc
mov
sbb
movzbw
lea
lea
mov
add
btc
mov
test
cmc
cmc
bt
xor
stc
repnz
mov
jmp
lea
jne
lahf
call
pusha
test
and
bt
cmc
add
movb
pushf
lea
jmp
mov
orl
add
sbb
mov
ret
xor
ret
out
maskmovq
divl
and
mov
or
dec
mov
inc
add
shl
cld
aas
addr16
fisubrl
popf
add
sahf
xor
cmpsl
mov
xchg
and
rorl
sub
mov
push
add
outsb
or
js
mov
test
and
fwait
pop
outsb
insl
ds
mov
jno
movsb
popa
adc
cmp
add
adcb
cmp
push
mov
js
mov
mov
xlat
mov
sbb
mov
pop
in
in
movsb
and
mov
dec
mov
jmp
pop
lahf
loope
shr
xor
mov
sar
loop
pop
test
fldenv
mov
dec
into
or
or
or
fidivrl
test
inc
stos
push
jl
adc
or
xchg
mov
mov
fisttps
sbb
cmpsb
adc
lcall
lds
mov
dec
jg
dec
subb
xchg
fists
repz
dec
sarl
sti
loope
out
es
in
sub
movsbw
pushl
mov
mov
lea
jmp
push
movw
push
lea
jne
pusha
das
sub
rcr
dec
add
mov
sbb
pushf
shl
setno
add
rol
call
xchg
not
movzbw
mov
jmp
mov
inc
out
dec
imul
sub
mov
testb
out
ljmp
cmp
mov
sub
nop
int
hlt
notl
lods
fwait
subl
push
sbb
aad
cmp
mov
mov
dec
pop
imul
call
mov
scas
lods
jge
sbb
or
fistpll
movsb
inc
insl
lds
xor
sahf
test
outsb
dec
cmp
ret
dec
inc
ret
rclb
add
push
gs
insb
jne
push
xchg
call
ret
pop
mov
lret
daa
mov
sub
push
das
mov
push
sub
mov
xor
cwtl
mov
out
add
mul
jle
or
loope
ja
setne
pop
xlat
int3
push
aam
push
adc
aas
push
lock
in
jns
std
pop
push
daa
lds
pop
mov
jae
in
mull
dec
sub
sub
pusha
cwtl
dec
nop
aas
push
fidivl
test
sar
bound
aam
and
xchg
xor
sub
jge
xor
push
pop
push
inc
je
add
movsb
test
jnp
jge
fnstsw
mov
sub
jp
push
push
call
insb
mov
aas
adc
call
pop
aaa
inc
icebp
jg
loope
les
mov
xor
dec
aad
mov
and
imul
jl
sbb
loope
push
inc
sar
and
pop
inc
pop
xor
gs
adc
test
mov
cmpsl
addl
inc
mov
and
inc
int
loopne
aaa
subl
inc
hlt
mov
scas
mov
mov
and
push
pop
push
subb
sub
call
imul
fildll
in
jge
add
ja,pt
or
mov
mov
mov
dec
in
pop
mov
xchg
popf
imul
sub
in
cwtl
and
mov
sbb
mov
mov
aad
inc
test
push
jl
out
push
ss
add
mov
std
mov
nop
call
dec
cmp
cs
and
rclb
add
cmp
movsl
cli
pushf
clc
sahf
outsl
cltd
movsl
adc
ds
xchg
jg
fcompl
lods
jp
and
xor
jno
test
movsl
jle
stos
test
fwait
push
pop
test
cmp
adcb
out
aaa
shrb
sti
push
into
adc
insl
fmuls
test
pop
dec
inc
lock
sti
stos
in
cmp
xchg
pop
mov
std
subl
jnp
enter
and
add
or
add
lea
cwtl
lahf
call
or
xchg
mov
nop
mov
jmp
sahf
push
mov
mov
sub
into
and
xchg
pusha
jo
mov
dec
stos
aam
lahf
ljmp
pusha
ret
mov
xchg
and
ret
sti
or
pusha
icebp
dec
cmp
and
in
xor
pop
in
adc
sti
push
add
or
mov
jmp
push
cmp
ret
mov
lods
sbb
pop
ret
out
add
pushf
daa
and
lods
insb
shrl
aam
sub
lods
mov
add
jg
push
jno
jb
in
xor
xor
mov
push
xor
ret
repz
movsl
mov
push
ljmp
or
aaa
mov
faddl
pop
cltd
out
insb
xchg
jnp
mov
nop
sub
repz
xor
inc
xor
ret
push
cmp
addl
and
jecxz
pop
fs
or
push
ljmp
push
icebp
dec
sbb
test
repz
mov
sub
lcall
sbb
ljmp
sub
xchg
adc
jl
stos
xchg
and
test
hlt
inc
into
je
add
scas
xor
popa
in
gs
push
add
dec
incb
sbb
pushl
popl
movb
push
pushl
ret
imul
ds
mov
inc
lea
mov
es
int
mov
nop
push
nop
and
sub
cld
call
push
pop
pusha
test
into
outsl
mov
ret
jns
inc
nop
test
jecxz
lret
cmpsb
scas
lret
dec
stc
ret
mov
xchg
movsb
push
hlt
and
mov
pop
and
pop
movsb
dec
xchg
jno
movsb
pop
inc
lret
aas
cmp
or
hlt
push
pop
pop
xlat
and
and
or
jno
sub
pop
mov
cmp
addr16
sbb
je
adc
dec
push
nop
jle
mov
and
mov
add
lret
xor
and
mov
sahf
add
push
cmpsb
in
pop
sbb
iret
daa
stc
arpl
xchg
nop
adc
fwait
and
js
scas
flds
add
push
popf
jno
push
clc
jecxz
mov
ficomps
arpl
lahf
fldl
xchg
push
push
mov
mov
cmp
inc
test
sbb
or
hlt
movsb
shll
push
mov
jl
mov
leave
hlt
std
sbb
mov
into
mov
xlat
addl
push
cmc
mov
xchg
cld
jmp
sub
cwtl
jecxz
xchg
ja
push
inc
mov
sub
lahf
outsb
xchg
nop
jp
loope
jbe
lret
ljmp
add
jle
xchg
pop
jmp
dec
pop
out
lods
mov
xor
mov
mov
sub
aam
pop
xchg
arpl
pop
popf
adc
push
sbb
xchg
data16
push
and
mov
sbb
mov
jecxz
leave
mov
pop
mov
jmp
stc
jbe
xchg
cmp
dec
aam
out
rcll
cmp
jbe
xchg
push
jo
pop
enter
or
mov
adc
mov
cmp
mov
les
je
sbb
pand
cmp
popa
fsubrl
rcrb
inc
shrb
imull
lock
cmp
xorl
popf
or
lock
nop
mov
sub
scas
jle
loop
or
jl
mov
fimull
pop
sbb
fiadds
dec
mov
mov
sub
and
push
mov
outsb
jmp
sahf
mul
push
orb
jl
push
test
nop
mov
adc
repz
std
inc
adc
inc
cmp
call
add
xor
scas
and
test
jae
pusha
ficomps
div
sahf
roll
shrl
sbb
pusha
daa
dec
xor
inc
repz
push
push
xchg
test
nop
lahf
pop
movsl
nop
fsubl
pop
and
fcmovb
cs
add
hlt
outsl
or
mov
push
jecxz
adc
add
adc
arpl
mov
mov
aaa
cmp
sti
add
rcll
imul
push
mov
scas
sbb
xlat
lods
test
adc
orl
out
sub
rclb
sub
pop
je
mov
adc
neg
fs
repz
or
add
iret
rcr
pushf
mov
pushl
and
jmp
jb
add
mov
xchg
sbb
aam
iret
rcrl
std
int3
shrl
les
stos
insb
bound
ret
xor
mov
push
cmp
lock
movsl
mov
sti
stc
or
ds
lret
arpl
jmp
or
int3
xchg
shl
pushf
push
mov
jmp
xor
or
int3
mov
call
push
addr16
mov
jge
jle
sarl
sbb
xor
lea
call
pushf
cmp
lea
je
jae
cmc
push
pushl
cmp
cmp
movw
pushf
lea
jae
bt
pushf
cmp
pusha
jmp
popa
loope
and
fucomp
adc
addr16
call
sbb
jb
push
sbb
insl
fsubr
pop
dec
xchg
into
fldcw
imul
and
sbb
loopne
xchg
jecxz
add
cmp
repnz
cltd
xchg
lds
adc
lds
hlt
test
add
add
cmp
pop
into
aad
loop
xor
jge
imul
rorl
mulb
jl
dec
not
pusha
inc
setg
setl
mov
mov
push
jmp
jmp
mov
pop
sub
aam
or
and
adc
outsb
jne
call
and
or
cli
in
jae
imul
dec
lcall
adc
call
shl
testb
call
test
add
push
dec
test
pop
sub
lahf
mov
test
push
cmp
aas
divl
push
add
mov
lea
push
movb
mov
not
movl
pushf
pushf
cwtl
lea
pusha
jmp
add
add
lea
je
push
adc
pusha
pusha
lea
jmp
mov
lcall
xchg
add
inc
or
dec
mov
shll
mov
test
popa
loope
mov
adc
jle
mov
lods
sub
mov
or
adc
add
popf
jns
es
and
push
and
loope
sub
cli
nop
mov
in
jbe
lods
into
scas
cmpsl
mov
inc
inc
arpl
or
sbb
cs
iret
sub
pop
jo
xchg
xorb
xchg
ret
ret
cmp
xchg
repz
cmpb
or
and
nop
aad
jecxz
dec
cmp
push
gs
add
ss
movw
test
call
sub
nop
mov
nop
into
fadds
xlat
mov
sbb
insb
pop
ds
js
lods
jns
push
push
es
fs
into
push
push
call
mov
or
xchg
mov
mov
out
xchg
scas
rol
cwtl
cwtl
imull
sub
mov
scas
out
iret
cld
sub
mov
and
lock
xchg
xchg
pop
pop
and
mov
inc
jo
fs
fwait
inc
out
stc
sub
aaa
sub
jmp
mov
and
arpl
pop
shlb
and
stos
mov
sub
cmp
adc
jl
mov
shll
daa
cmp
outsl
xchg
jp
test
stos
xchg
push
mov
fsubl
out
mov
aaa
int3
cmp
or
and
jnp
test
pusha
nop
into
mov
push
and
push
scas
mov
fs
aam
inc
and
push
push
aaa
ds
addl
inc
es
cmc
jae
stc
mov
nop
sbb
out
dec
aad
or
xchg
into
cli
push
into
dec
mov
gs
sbb
jecxz
jmp
or
pop
outsb
add
cmpsb
pop
jl
dec
sub
adc
mov
nop
push
add
je
sub
pop
lds
push
sub
mov
push
test
icebp
or
push
std
cltd
out
arpl
clc
push
movsbw
adc
push
bsr
push
mov
push
shld
not
adc
mov
cmp
shl
or
mov
and
mov
cmp
jmp
call
nop
jmp
mov
and
cltd
in
mov
jle
sub
in
mov
mov
outsb
sub
mov
mov
inc
aam
loope
int
lcall
iret
mov
push
jo
in
pop
in
cwtl
mov
add
sub
rcrl
and
cmp
dec
cmpsb
sbb
pop
mov
repz
sub
pop
imul
pusha
out
lods
xor
cli
out
mov
cmpsl
dec
sahf
in
mov
dec
push
out
pushf
sub
pop
sub
jbe
jns
iret
push
pushf
inc
dec
sub
rorl
jno
mov
scas
jl
jns
xchg
cmp
nop
inc
pop
sub
jle
xchg
loope
xchg
outsb
pushf
outsb
negb
jg
nop
into
stos
sub
dec
ja
insl
jge
or
in
lock
jge
lret
dec
or
mov
add
push
pop
cmp
fldcw
arpl
push
outsb
inc
pushf
inc
and
inc
or
pop
mov
icebp
xchg
jb
pushf
jne
jecxz
and
test
xor
cld
xchg
andb
xchg
data16
test
clc
ret
and
mov
mov
mov
jno
pop
sarb
ret
adc
das
xchg
inc
repnz
imul
mov
cmpsb
lret
jae
filds
push
out
fsubl
jge
nop
into
jmp
fisubrs
pop
test
inc
mov
lea
lods
jmp
adc
fwait
cmpb
insl
sbb
sahf
test
jnp
sete
dec
dec
not
shrb
andb
mov
mov
jns
lods
push
mov
aad
push
xchg
les
ss
imul
cmp
in
jecxz
jno
jno
pop
sbb
inc
xchg
cmc
xchg
cli
or
sbb
fstpl
out
sbb
xchg
mov
push
lret
cmpsl
and
in
sub
sar
imul
fsts
push
and
leave
jae
scas
out
add
fld
dec
pop
sbb
push
jnp
pop
out
mov
inc
or
mov
mov
popa
scas
pop
mov
test
add
stc
call
mov
lea
ja
pusha
pushf
pusha
lea
jb
clc
cmc
cmpb
pusha
push
movw
lea
jmp
fcomps
jl
nop
pop
adc
sub
ljmp
jl
mov
dec
inc
cld
not
mov
xchg
jae
mov
mov
in
or
insb
pushl
sbb
lods
mov
daa
in
repnz
or
cld
outsl
mov
icebp
js
inc
out
jnp
or
addr16
in
jmp
push
test
sbb
mov
and
fsubrs
loopne
das
arpl
ret
ja
mov
adcl
adc
sub
scas
sub
push
cmp
ret
ljmp
fwait
loopne
das
jne
mov
bound
fs
iret
pop
push
mov
fs
ja
mov
inc
jae
inc
shr
ror
mov
xchg
aad
bts
mov
cmp
sbb
clc
shr
mov
cmc
test
stc
push
shl
mov
call
add
pushl
call
mov
nop
insb
enter
das
cmp
mov
adc
xchg
mov
add
je
pop
cli
mov
test
xor
fdivs
shrl
dec
mov
xchg
sbb
push
cld
rorb
lds
xchg
inc
fwait
mov
xor
add
clc
pop
jmp
fs
push
je
stc
push
add
daa
out
je
sbb
mov
xlat
test
lret
imul
ja
cld
cmpsl
xchg
call
mov
loop
fwait
notl
mov
mov
in
jb
adc
jno
mov
imul
or
adc
rcr
clc
and
jle
lret
lods
out
cmp
movsb
jge
or
xor
lret
sbb
inc
loopne
push
inc
dec
sbb
add
clc
add
sbb
inc
inc
cmp
sahf
lods
cmp
out
pop
dec
inc
ds
and
cmp
loopne
mov
insl
jae
mov
call
jnp
inc
stos
pop
call
fcompl
push
jnp
nop
sbb
imul
dec
mov
push
inc
adc
mov
in
or
lods
jge
cs
add
sarb
mov
push
fadds
movsb
call
mov
pop
lods
xlat
ret
test
xchg
ret
flds
gs
pop
jmp
add
daa
mov
pop
jb
aam
aam
icebp
adc
pushf
repnz
adc
notb
enter
shrl
mov
dec
jno
xchg
nop
mov
jecxz
clc
je
push
test
sbb
scas
aam
mov
negl
mov
je
ret
in
pop
inc
sub
scas
push
jl
sub
sti
stc
jp
pop
ret
jno
dec
pushf
jmp
pushf
lea
je
jmp
mov
jp
nop
and
xchg
cmp
xchg
pop
inc
xchg
sub
cmc
adc
int3
sub
sbb
pushf
sahf
cmpsb
test
ja
in
hlt
push
cs
scas
test
cli
and
jnp
out
shrl
jecxz
xchg
mov
fs
jbe
adc
mov
push
ljmp
dec
jl
push
divl
fisubs
and
mov
test
mov
divl
shrb
filds
sub
loop
cmp
out
sub
push
addl
mov
int3
loopne
cmp
orb
repnz
enter
cwtl
fnstcw
andl
add
pop
or
out
js
daa
cwtl
sub
sub
sbb
jl
mov
ret
iret
cltd
repnz
mov
insb
and
jb
popa
and
push
xor
arpl
xlat
cli
fdivp
mov
xor
dec
mov
shll
insb
fisubl
shl
imul
and
scas
sbb
shrb
dec
movb
out
jmp
das
sbb
mov
bound
mov
ljmp
incb
dec
inc
push
push
imul
pushf
cmp
inc
adc
test
inc
mov
and
aam
pop
shll
pop
pop
xchg
pop
add
out
dec
movb
adcl
adc
iret
cmpsl
out
enter
ret
loop
insl
roll
sub
pop
inc
test
cli
arpl
mov
stos
adc
ret
ds
shll
movl
xchg
xor
arpl
jmp
in
or
pop
adc
js
xor
inc
mov
xchg
xchg
rcl
push
jnp
sub
addb
fwait
in
sub
cmovp
faddl
mov
cmp
xchg
mov
ret
adc
mov
xor
test
repnz
enter
mov
sub
cli
push
out
sub
add
pop
loop
xchg
in
push
ret
scas
mov
mov
xor
rcll
cs
aam
sub
sub
insb
dec
sub
cli
mov
mov
fdivrp
push
iret
decb
jp
data16
xchg
xchg
imul
cmp
fisubrs
cli
mov
sub
inc
add
addb
popa
scas
mov
and
testb
mov
scas
imul
and
cmpsb
in
push
ljmp
imul
ds
rcl
and
jge
aam
mov
dec
push
xor
jp
stos
daa
or
add
lds
jmp
mov
add
sub
sbb
icebp
adc
scas
out
or
mov
out
inc
mov
cmp
enter
addb
add
lret
sub
xchg
aas
loop
loopne
in
lret
pop
mov
call
ljmp
iret
movb
ljmp
cli
pop
adc
repnz
push
pop
push
jmp
push
fmulp
cli
leave
daa
inc
fsubrs
cmpb
aaa
lcall
sub
ret
mov
jnp
scas
and
inc
dec
cmp
mov
cwtl
jmp
loope
xlat
ret
push
lahf
stos
mov
dec
mov
stos
vpackssdw
popa
cwtl
dec
and
sbb
inc
arpl
mov
adc
dec
pop
adc
add
jb
push
aas
dec
add
fsubr
enter
push
jmp
add
add
pop
jge
jecxz
cmc
push
popa
or
or
int
add
jg
movsb
lret
enter
icebp
int3
or
lds
push
mov
mov
xor
or
cli
sub
sub
or
adc
mov
xor
insb
ret
or
mov
out
arpl
inc
adc
rcr
adc
mov
ret
test
stos
xchg
xor
mov
in
mov
or
fldcw
adcl
mov
jmp
jecxz
xchg
imul
push
test
aaa
enter
adc
jne
inc
push
aad
add
jae
adc
sbb
jmp
insb
push
mov
mov
cs
aam
cmpsl
ret
jns
cmp
and
and
loop
xchg
add
push
xchg
repz
mov
adc
mov
out
cmp
inc
out
dec
push
ret
and
hlt
mov
mov
clc
ljmp
lock
jg
int
sub
test
xor
data16
push
fwait
mov
in
jae
jne
xor
cmp
js
subb
pop
mov
xor
mov
loop
dec
xor
xchg
lret
aaa
mov
sbb
or
int3
xchg
lods
mov
stos
mov
shll
lahf
ss
push
adcl
sub
or
popf
mov
out
ljmp
push
movmskps
jmp
in
sub
mov
cmp
loop
xor
sahf
int
jae
inc
jg
inc
hlt
adcb
cltd
imul
enter
test
in
mov
add
mov
push
push
ret
fisubrl
fstps
outsl
loop
shl
addr16
jbe
inc
jmp
sub
lods
mov
cmp
sbb
in
dec
in
pop
loop
adc
enter
pop
sub
mov
mov
mov
jmp
outsl
cwtl
sub
adc
outsb
add
cmpsb
rorl
pop
sub
jb
mov
ljmp
ds
jae
mov
pop
in
pop
cmp
push
xor
dec
call
ret
xchg
xor
push
fdivrs
mov
dec
rolb
hlt
ds
nop
xchg
dec
movsl
out
int
sub
imul
arpl
jmp
mov
sub
aam
cmp
and
sub
and
push
mov
mov
stos
and
push
jecxz
int
lods
lods
aad
inc
adc
addr16
les
cmpsl
cmp
sahf
or
and
es
dec
xchg
in
fwait
imul
jns
iret
jmp
or
push
sub
xchg
xor
test
lods
push
dec
or
inc
das
test
or
daa
orb
jmp
sahf
cmpsb
fwait
push
stos
roll
sub
sub
push
pop
imul
sub
inc
mov
and
out
rol
int3
repnz
int3
pop
mov
cmp
mov
xor
xor
sub
ljmp
rorl
ja
lcall
aas
cmpsl
jne
outsb
ljmp
mov
xchg
imul
mov
jb
and
mov
cmc
mov
push
mov
push
inc
xchg
repz
dec
lock
push
outsl
cmc
adc
in
scas
pop
call
and
push
gs
cld
pusha
test
push
pop
push
sbb
dec
out
repz
add
sub
test
push
sbb
ss
adc
cmp
jne
imul
sub
cli
push
xor
jp
push
loopne
xchg
mov
mov
inc
ljmp
into
icebp
push
pushf
xchg
xchg
pop
sub
dec
pop
lock
ljmp
xchg
test
lods
test
cmp
out
ret
push
mov
jmp
sbb
ret
cmp
loope
outsl
shrl
xchg
mov
push
inc
les
xchg
push
outsb
jp
mov
pop
inc
out
push
pop
jl
sub
int3
xchg
cmp
fs
push
mov
hlt
dec
jmp
cwtl
or
bound
js
sub
aam
sub
jbe
fs
ret
test
in
push
jmp
pushl
mov
fiadds
mov
sub
outsb
jecxz
push
es
xchg
or
sub
mov
push
xchg
add
adc
cs
add
cmpsl
jne
xchg
pushf
icebp
mov
mov
jbe
sbb
push
mov
lret
sub
test
xchg
and
in
push
inc
jno
shrl
test
push
rcr
sbb
xor
sbb
stos
test
leave
shl
jmp
inc
mov
inc
push
repnz
mov
push
xchg
or
push
xor
adc
scas
mov
in
or
jae
lds
dec
xchg
jl
insb
mov
loopne
lret
fcoms
jl
mov
push
mov
orb
jecxz
int
scas
dec
rcr
cli
jb
out
popf
mov
xchg
insl
jmp
jmp
movsb
mov
and
pop
dec
push
leave
test
out
and
out
aam
pop
lret
dec
insb
les
mov
loope
orl
loop
dec
push
sbb
leave
adc
inc
xchg
pop
sub
cs
mov
sti
adcl
ror
sahf
jne
mov
insb
dec
add
sub
mov
test
shld
stc
into
adc
xor
outsb
repnz
pop
jns
arpl
in
adcl
stc
adc
prefetch
or
pop
stc
sub
test
roll
and
xor
jae
stc
mov
push
sarl
pushf
fistpll
add
push
push
mov
cwtl
sbb
fsubrs
pop
test
shlb
and
call
sbb
popa
lret
pop
ljmp
sbb
sub
jmp
call
decb
mov
adc
or
mov
cmpsl
jmp
mov
imul
adc
jmp
aam
mov
lret
sbb
mov
and
call
adc
ret
lds
scas
push
shl
cld
ljmp
push
stos
lock
roll
push
adc
aaa
in
xlat
out
repz
adc
cli
mov
jmp
ret
fldt
mov
leave
test
insl
push
outsl
in
inc
and
and
jecxz
rcrb
inc
insl
dec
dec
pop
ljmp
pushf
add
xchg
sub
loope
jmp
push
ror
jbe
add
pop
out
pushf
dec
cmp
mov
cmp
int3
lret
and
xchg
lods
add
inc
outsb
jne
fisubrs
aam
sbb
aam
ljmp
sarb
loopne
in
mov
push
sub
mov
push
xor
pushf
or
jmp
rcl
inc
dec
add
push
add
ret
mov
add
dec
or
aaa
xor
test
divb
mov
andb
incl
ja
out
loop
fstps
lods
loop
ret
fcompl
and
jno
in
push
mov
insl
into
repz
hlt
insl
je
jl
mov
push
pop
or
sarb
jecxz
rolb
test
push
test
add
xchg
jbe
movsb
add
insl
mov
sub
fidivs
push
ret
push
mov
rcrb
adc
xorl
jbe
sbb
insb
lods
push
repnz
in
add
ficomps
adc
xlat
xor
das
dec
adc
cs
jp
dec
jbe
sub
ja
shrl
cld
cmp
cmp
lret
mov
fistpl
sub
xor
movsb
xchg
mov
jmp
in
or
ljmp
fmull
xchg
call
mov
adc
cmp
mov
fildl
scas
pushf
push
cmpsl
insb
push
test
mov
jmp
jne
sti
and
push
imul
xor
arpl
pop
add
jg
fadd
call
aad
fists
lahf
sbb
das
xor
out
adc
push
imul
sbb
stos
in
push
and
in
xor
rcl
mov
ficoms
mov
push
jns
and
gs
push
movsl
imul
add
lods
pop
jecxz
rcl
shrl
add
push
insb
and
test
mov
mov
dec
xchg
mov
sbb
sbb
add
aas
lret
jmp
push
push
dec
movlps
outsb
xchg
mov
bound
rol
stos
int3
cmpsl
arpl
add
lret
mov
and
cli
cmpsb
adc
sub
and
pop
in
sbb
sub
cmp
mov
add
mov
push
ljmp
sbbl
push
test
xchg
flds
call
adc
nop
adc
xchg
xor
jmp
push
push
je
mov
mov
push
repnz
cwtl
test
sbb
out
mov
push
shrl
repnz
cmp
adc
sub
nop
aad
inc
sahf
push
mov
add
xor
outsl
push
cld
ljmp
lods
cmp
mov
sub
inc
psrlw
loop
and
enter
dec
int
test
insb
inc
iret
jno
inc
sub
ret
adc
loop
cmpb
add
loop
add
dec
xor
xlat
xchg
jle
adc
inc
sbbb
adc
xchg
adc
adc
or
adc
push
pop
fcoms
sub
in
insb
loop
hlt
rolb
add
nop
jmp
xor
and
imul
pop
fsubrp
rcrb
in
scas
sbb
aam
into
push
movsb
lsl
lea
into
inc
xor
fnstcw
ret
push
pop
int3
push
loop,pn
mov
jne
scas
outsb
cmpb
pop
lods
xchg
add
out
int
insl
arpl
fcomps
and
in
sub
sub
and
outsb
andl
loope
or
xchg
aam
shrb
fucomp
or
sub
xchg
fwait
or
hlt
int3
add
mov
int3
jecxz
into
scas
pop
dec
lcall
and
out
fcmovnb
jmp
hlt
insl
ljmp
sub
popl
scas
das
cmp
xchg
pushf
xchg
mov
xchg
arpl
inc
test
mov
fsubrs
outsl
jmp
sub
orl
aam
dec
mov
add
aam
daa
or
xor
push
dec
add
cmp
cmovge
in
adc
test
fmulp
iret
das
pop
or
pop
iret
stos
int3
push
jne
add
sbb
xor
sahf
and
cs
cwtl
sub
int
push
or
iret
dec
nop
mov
into
in
mov
sbb
int3
lods
add
mov
sbb
sbb
pop
jmp
test
mov
in
or
mov
outsb
ljmp
sub
and
lahf
sub
dec
sub
sub
hlt
sub
or
in
dec
jmp
lret
icebp
insb
adc
add
push
iret
and
dec
lock
in
or
sub
dec
sub
das
aad
mov
ret
lret
roll
out
sbb
or
and
xor
cli
sahf
cmp
stc
or
jp
add
cltd
push
scas
or
cmp
push
and
fdecstp
mov
loop
clc
add
push
pop
aaa
std
pushf
addr16
orb
pop
sbb
adc
ret
rorb
or
cmpsl
xor
adc
testl
or
sub
sbb
repnz
loope
in
jecxz
arpl
jg
sar
mov
imul
jmp
and
ljmp
sub
arpl
xor
and
adc
add
fnstenv
or
decb
lock
sbb
lock
sar
xchg
dec
cld
les
loop
stos
or
in
add
cmp
fiadds
xchg
or
push
xchg
mov
jo
cmp
dec
mov
push
es
xchg
int
adc
jns
mov
push
cmp
mov
loopne
lcall
dec
test
mov
xchg
mov
lods
and
sub
ljmp
add
in
inc
negb
stos
mov
jmp
out
push
aam
mov
rolb
mov
sbb
dec
cmp
daa
call
addl
and
pop
rcll
test
push
add
rclb
lret
add
or
xlat
sti
fs
push
arpl
dec
jmp
adc
sarl
mov
sub
mov
fdivrs
pop
fidivs
cmp
or
imull
js
mov
dec
movsl
fsubrl
fstl
jg
pop
cmp
mov
xlat
das
pop
addb
jmp
repz
add
sbb
mov
sub
pop
popf
sti
dec
xchg
push
jo
cltd
mov
in
rcl
call
pushf
adc
adc
or
cmp
aam
cmp
cltd
lcall
inc
mov
xchg
ljmp
cs
subb
rcrl
xchg
sub
fidivs
lcall
xchg
fisubl
lret
lock
pop
sub
mov
fsubrs
ret
ss
adc
jae
xor
shrw
jecxz
std
and
cmp
neg
push
sahf
lcall
xlat
sbb
in
fsubr
shl
int3
mov
repnz
shrl
fmul
mov
out
jmp
sub
mov
popa
fidivl
xchg
or
and
in
nop
fisttps
in
out
push
add
push
scas
insl
test
add
mov
out
mov
xor
shl
push
and
lret
dec
mov
sar
push
leave
scas
jl
sub
rorb
fists
leave
push
sbb
sub
addr16
pop
sub
mov
sbb
stc
bound
out
cmp
loop
adc
sarb
ret
sub
add
jb
pop
adc
mov
jl
jge
mov
mov
lods
jg
sub
jl
std
or
shrl
cmpsb
mov
fisubrl
push
shl
and
and
and
lret
inc
or
pop
mov
fidivrs
add
call
lret
adc
ret
out
adc
fildl
sub
inc
pushf
sti
in
arpl
aas
mov
mov
xor
jno
xchg
ficompl
test
mov
cltd
hlt
cwtl
or
cld
arpl
xlat
stc
sub
cli
in
ret
mov
cwtl
inc
sbb
mov
cld
jns
fnstsw
adc
cmp
pop
inc
xchg
jmp
sub
test
aaa
push
rcrl
mov
adc
out
or
popf
das
call
lea
fldpi
jb
xor
pushw
lret
xlat
mov
xchg
movsb
jne
in
jmp
sbb
out
imul
in
in
jecxz
sbb
mov
sbb
add
mov
ds
inc
ljmp
call
sub
adc
inc
add
fwait
lods
lock
mov
sub
fmuls
lock
lea
imul
cmp
call
jp
push
arpl
cmc
cld
inc
jbe
xacquire
movsb
push
mov
push
scas
xchg
jb
gs
aad
sbb
lcall
cmpsb
jne
iret
cmp
cmp
lock
repnz
xor
inc
push
and
aam
adc
mov
lret
adc
jl
jno
jae
repnz
xor
mov
jle
and
mov
and
dec
inc
and
outsl
shlb
sbb
and
subl
jge
hlt
inc
nop
nop
sbb
inc
add
jmp
leave
aad
cli
scas
shl
mov
and
mov
adc
cltd
xchg
sub
cld
fisubrl
clc
push
sub
add
dec
imul
js
shlb
rclb
push
punpckhwd
std
nop
push
fisttps
cmp
out
adcl
push
sbb
cmp
cmp
xorps
sbb
pop
mov
in
test
and
pop
sub
xor
outsl
xor
sbb
addr16
jmp
scas
mov
jmp
xchg
and
inc
jmp
or
jp
in
adc
add
pop
cmp
fidivs
dec
xchg
adc
les
sub
fcmovb
or
cmp
stos
add
sbb
jmp
fsubrl
sbb
fisttpl
roll
or
mov
movsb
mov
fldt
mov
jge
mov
pop
mov
pop
leave
into
add
in
mov
stos
mov
fwait
sahf
outsb
setnp
dec
jge
bound
cwtl
enter
loope
add
pop
movsb
lahf
mov
dec
lret
dec
shlb
leave
stos
movl
sub
rcl
sub
je
sbb
stc
insl
lods
mov
fwait
sbb
dec
jb
insb
mov
cmpsb
test
das
sub
divb
mov
or
insb
lods
lcall
jle
es
movsl
cmp
cld
xorl
add
sub
fists
cmp
out
dec
lret
aaa
jno
imul
xchg
aam
mov
jle
shr
cs
mov
sti
pop
cli
out
dec
iret
out
in
mov
push
xor
jmp
sub
cld
push
sahf
push
lods
pop
ss
shll
cmp
dec
and
inc
jle
xlat
leave
add
divl
push
pop
in
fsts
cli
sub
sahf
or
dec
movsb
push
jmp
dec
sbb
inc
nop
ret
cltd
xor
dec
mov
int3
add
jp
jmp
push
rorl
jo
xchg
xor
jae
popa
sub
inc
sbb
mov
mov
or
dec
sti
dec
cmp
sub
ljmp
and
xor
push
aam
sub
in
sub
aad
imul
push
in
dec
mov
sahf
add
push
sub
add
xor
fstps
sub
pushf
sbb
ljmp
cmp
push
xchg
ss
mov
aam
add
or
sbb
and
push
stos
out
jge
push
mull
sub
mov
lods
mov
cmp
loop
jmp
outsl
mov
sti
push
push
add
and
cmc
adc
lods
arpl
scas
into
xlat
inc
jmp
call
sub
jbe
xchg
jecxz
pop
mov
xchg
add
adc
and
icebp
cmp
sti
repnz
mov
rolb
popa
sbb
cs
xchg
ljmp
lcall
xchg
leave
jmp
mov
outsl
outsb
jmp
mov
fiaddl
push
or
call
sbb
leave
mov
bound
test
dec
mov
or
pop
xor
addr16
movsl
push
inc
or
test
mov
cmc
pop
in
cmp
jmp
popf
dec
add
out
idivl
adc
hlt
add
shrl
popa
fcmovu
adc
cmp
adc
sbb
xchg
add
loop
loop
jno
ret
mov
pop
pop
rcll
mov
int3
shr
mov
push
and
add
enter
ljmp
mov
scas
xchg
in
push
pushf
je
inc
call
test
test
sub
mov
cmp
je
pop
adc
mov
ret
fiaddl
dec
fmuls
pop
mov
cwtl
jns
add
lcall
pop
dec
scas
out
sub
xorb
cmpsb
fldenv
fisubrs
or
mov
scas
mov
mov
outsb
dec
mov
cmp
aam
xor
int
mov
jmp
and
sbb
push
arpl
xor
inc
sbb
mov
jbe
mov
popf
jge
sarl
pop
les
and
outsl
push
inc
dec
in
ljmp
imul
lods
and
dec
and
js
sub
dec
inc
es
aas
sbbb
push
or
jae
sbb
mov
packuswb
push
sbb
adc
and
dec
jne
out
xchg
jmp
mov
xor
or
cwtl
mov
in
adc
xchg
scas
lret
rcll
sub
arpl
loop
xchg
sub
jecxz
rcrl
xor
ljmp
into
dec
push
lahf
repnz
and
fidivrl
add
cmp
jno
negl
adc
adc
lods
clc
in
enter
rcll
cli
ss
popf
inc
sub
aaa
enter
sub
mov
mov
decl
cmc
shl
push
adc
and
gs
pop
ret
testl
out
mov
or
cmpsb
sbb
push
add
jecxz
jmp
xlat
lods
mov
inc
xor
ljmp
add
je
sbb
imul
adc
mov
ja
cwtl
mov
push
push
sub
call
cwtl
jmp
mov
pop
pop
das
add
rolb
or
shl
or
mov
pop
je
xchg
loop
sub
pushf
clc
jns
cwtl
repnz
cwtl
sbb
outsl
out
cltd
mov
mov
mov
and
mov
xchg
xor
pop
repnz
rcl
lahf
mov
ss
ds
push
outsl
lret
imul
dec
cmp
fdivrl
das
stc
inc
pushf
add
fcoml
push
sub
ljmp
in
sahf
mov
sub
clc
lret
add
jo
or
xchg
dec
ret
xchg
mov
sbb
insl
fidivrs
mov
in
insl
add
mov
sub
cmp
lods
loop
insb
jae
cmp
sahf
xor
mov
xor
and
icebp
cltd
sbb
insl
mov
es
in
dec
lea
sub
mov
xlat
mov
or
jo
dec
hlt
or
adc
testl
cli
push
imulb
jmp
jo
and
loop
mov
insl
sub
jb
mov
jb
add
and
test
xchg
les
arpl
inc
sub
dec
insl
int
cs
adc
shll
xchg
fbstp
xchg
sbb
inc
or
xor
add
repnz
enter
pop
fiaddl
out
rorb
mov
out
dec
jo
and
push
insb
jl
es
and
ljmp
mov
and
and
pop
mov
mov
in
ret
sbb
into
pop
stos
push
mov
adc
je
in
cli
insb
pushf
sbb
mov
add
add
fstl
dec
sti
test
pushf
shrl
xchg
add
cltd
add
or
pusha
and
xchg
jle
aam
xchg
jo
outsb
and
push
push
and
or
repnz
sbb
sub
lock
adc
or
and
cmpsl
cmp
aam
jno
pop
aam
mov
loopne
jecxz
fsubrl
in
lret
dec
xchg
out
dec
faddl
push
mov
sub
mov
es
imulb
mov
rorb
sbb
sub
adc
sti
das
jmp
add
ljmp
sub
mov
in
outsb
in
cmp
es
jmp
xchg
fsubr
stos
add
stc
mov
lahf
inc
mov
pop
push
jg,pn
out
daa
and
dec
or
ja
ss
cmp
mov
cmp
cmpb
arpl
push
mov
lds
hlt
and
shrb
jmp
mov
jecxz
xlat
mov
pop
orb
sahf
pusha
sahf
in
roll
shll
sahf
ljmp
negb
or
push
int3
sbb
lock
icebp
imull
roll
in
jl
test
mov
mov
cli
cld
mov
sbb
sub
in
clc
add
cmpsl
mov
out
cmp
mov
and
sbbl
xor
mov
subl
imul
xchg
iret
repz
repz
lds
sub
xchg
dec
int3
loop
sahf
lds
in
shlb
xchg
loop
mov
jmp
adc
in
pop
movsb
int
sahf
fidivrs
push
xor
aam
mov
pop
sbb
fsubrp
ss
rep
popf
sub
pusha
outsl
dec
dec
aas
es
aam
mov
mov
in
inc
mov
inc
les
push
xor
daa
pop
xchg
xlat
dec
and
in
and
ds
and
data16
mov
in
rorb
repz
imul
pop
xor
and
add
test
rolb
in
adc
adc
jmp
inc
sub
jmp
das
mov
cmpsl
mov
xchg
lods
lods
fprem
aam
dec
aam
xchg
push
sub
jp
sahf
arpl
in
mov
lds
or
ja
adcl
mov
loope
clc
jmp
jle
mov
icebp
xchg
loop
or
repz
imul
ja
cmp
or
sub
inc
imul
dec
or
and
in
adcb
sbb
add
and
xor
add
push
cmp
pop
shrl
movsl
pushf
sub
mulb
pop
mov
xchg
fcmovnu
sahf
sahf
mov
and
in
inc
pop
cli
cli
cmpsb
jmp
sub
jecxz
js
add
repnz
or
repnz
or
push
gs
fidivl
scas
test
jno
adc
mov
arpl
imul
sbb
add
push
fidivl
cmp
loopne
pop
mov
jnp
scas
jbe
lods
sbb
adc
daa
xchg
into
arpl
mov
xchg
arpl
popa
mov
out
adcl
ss
mov
ljmp
es
push
push
repnz
and
pop
cmp
mov
xlat
inc
aam
mov
cmp
lea
mov
or
xchg
lods
ret
in
hlt
addb
xor
aas
xchg
movsl
push
inc
test
pushf
mov
xorl
out
cmp
arpl
repz
xchg
in
and
add
mov
shll
xchg
std
lret
imulb
xchg
jmp
iret
inc
lea
mov
inc
mov
xor
xlat
mov
jbe
mov
mov
xchg
rol
mov
inc
or
dec
sbb
pop
and
daa
jmp
loopne
xor
mov
pop
push
dec
or
xchg
loopne
cmp
sub
sbb
lods
dec
sbb
test
push
xchg
cvttps2pi
outsb
cmpsb
les
xchg
adc
stos
ja
xchg
std
and
push
sub
jge
pop
mov
sbb
icebp
roll
in
pop
lock
cmp
sub
inc
sbb
mov
pop
push
jne
add
xchg
cmp
pop
push
jmp
ret
test
or
fsubrl
loope
ljmp
xchg
cltd
das
adcl
in
jg
pushf
xor
cmp
inc
lahf
xlat
mov
xchg
adcb
xor
cs
mov
out
lds
jl
sbb
pop
mov
sub
jb
sub
fistps
xchg
mov
push
cmpsb
fsubrl
out
and
add
inc
inc
pop
sub
xor
loop
fldt
ljmp
das
adc
mov
cmp
or
push
test
mov
fwait
es
rclb
xchg
paddsw
pop
stos
aam
stc
or
nop
repz
push
jmp
mov
adc
pop
sub
pushf
aam
lods
aam
movsb
cmp
cli
in
std
mov
adc
cli
lcall
enter
xchg
lea
adc
adc
das
pusha
jge
fcoml
cmp
cld
faddl
pop
ret
and
cli
mov
or
mov
jne
jo
and
cmp
rclb
pushf
cs
mov
lret
loop
push
adc
mov
in
popf
jmp
cmp
sub
xorl
std
jle
pop
int3
imul
cs
cltd
jg
fcomi
daa
pushf
inc
mov
mov
push
in
mov
jmp
xlat
movsb
rclb
in
rcrl
xchg
push
mov
and
arpl
roll
cwtl
aad
xor
divb
jg
repnz
in
int3
xor
arpl
pop
fsubr
divl
fiadds
fistl
arpl
andb
inc
shrl
imull
movsb
sbb
test
adc
cwtl
push
xchg
jmp
push
lcall
xor
or
sbb
adc
or
pop
mov
leave
out
ret
xchg
rolb
sarl
cmp
adc
sbb
das
or
jnp
mov
out
in
test
das
inc
add
lcall
add
mov
dec
fadds
push
inc
jae
sysret
jle
imul
add
int3
jg
and
push
xchg
les
addr16
stos
cmp
xchg
ud2
loopne
jns
mov
add
sub
sbb
mov
sub
pop
mov
loop
in
insb
cwtl
sarb
sarb
pop
outsl
jnp
inc
scas
xchg
rolb
ret
dec
xor
lcall
notl
sarb
sub
mov
mull
mov
pop
push
in
mov
je
loop
cmp
ret
mov
test
int3
pushf
sbb
insb
dec
in
inc
xchg
jns
push
push
sub
imulb
cmp
in
in
shll
xchg
sarl
in
in
sbb
xor
or
loopne
xchg
ljmp
xchg
mov
in
pushf
pop
sarl
ljmp
cmovae
test
jmp
inc
fcmove
and
loopne
jns
jp
popa
out
stos
push
xor
insb
sti
sbb
and
shll
into
fs
pop
fdivr
dec
jns
and
push
icebp
and
testb
imul
rcl
ret
nop
repz
sbb
xlat
add
adc
mov
idiv
lock
sbb
stc
in
fs
jecxz
add
xchg
outsb
ds
sbb
pop
test
add
fmull
dec
or
push
inc
lret
leave
sbb
popa
stos
les
inc
cmpsl
or
add
fsubrl
dec
xchg
or
fldcw
or
repz
cmp
lods
cld
mov
rcl
dec
pop
pop
lahf
jne
in
xchg
sbb
repz
into
test
in
push
sub
lods
das
inc
mov
out
ret
int
mov
push
call
shl
or
fimull
out
dec
dec
ja
das
psubsw
add
jge
mov
mov
and
adc
roll
xchg
mull
in
pop
into
mov
add
push
ret
mov
stos
pop
and
push
sub
rorl
out
negb
outsb
sarl
cld
imul
pop
sbb
pop
das
or
pop
sub
sarb
mov
js
loopne
pop
ss
cmpsl
imul
rorl
pop
repz
imul
pop
int
pop
mov
push
inc
aam
adc
cmp
sbb
fs
pop
pop
in
rcrb
add
subb
lcall
ret
sbbl
fisttps
sub
sahf
loopne
or
sub
sbb
ficompl
aaa
js
jmp
into
leave
into
pop
das
sarb
or
pop
addr16
inc
add
int
dec
inc
cli
scas
mov
pop
push
pop
setno
pop
mov
ficompl
fsubl
call
in
out
pop
pop
sbb
pop
jle
and
adc
ljmp
dec
ja
bound
js
jmp
ret
repz
mov
pop
jae
rol
adc
xor
add
les
mov
sub
add
or
fucomi
fstps
push
mov
push
add
mov
jmp
in
and
mov
inc
mov
repz
inc
mov
testb
lock
add
and
mov
jge
jbe
lods
mov
mov
sub
push
push
jecxz
in
ficompl
hlt
mov
xchg
cltd
sbb
push
scas
jne
fstl
inc
cmpsb
test
ret
retw
or
daa
aam
adc
fucompp
mov
dec
xor
sti
aam
sbb
jl
insb
in
gs
mov
adc
scas
sub
cwtl
add
int3
arpl
sbb
sarl
addr16
push
outsb
cs
pop
ss
es
aad
pop
pushf
pop
or
rolb
sub
arpl
aam
and
mov
push
insl
sub
pop
popf
loopne
mulb
jbe
xor
shrb
inc
movsb
insb
mov
testl
popa
xorl
das
xchg
pop
cs
add
mov
sahf
mov
pop
ret
cltd
bound
cmp
jge
cmp
in
aas
xchg
lret
shr
adc
stos
lret
jmp
and
add
and
xlat
jns
mov
push
outsb
fimull
pop
rol
les
in
sub
xchg
les
andb
mov
adc
xor
insb
insl
xchg
or
sbbl
add
nop
aad
sbb
lods
sbbb
push
aaa
adc
scas
inc
repnz
mov
ret
shll
jge
jo
lods
inc
loop
mov
jbe
push
je
jae
ljmp
insb
cwtl
add
dec
ss
loope
and
int
mov
pop
adc
fnstenv
jmp
and
pushf
sub
jmp
inc
int3
orl
orb
or
sub
pop
cmpsb
stos
mov
in
mov
fcomps
or
jae
mov
les
bndstx
xchg
scas
dec
pop
stos
adc
nop
jmp
and
cmc
and
sbb
cs
xor
in
adc
adc
mov
imulb
insb
adc
stc
cld
mov
ret
inc
movsb
shrl
repz
cli
cmpsb
or
push
mov
cs
rsm
das
mov
out
hlt
std
int3
xchg
imul
scas
cmpsb
xchg
xor
or
daa
ljmp
lahf
or
cmp
add
in
cmpsl
mov
xchg
dec
mov
fucompp
in
mov
jbe
aas
jp
into
xchg
jl
and
pop
pushf
inc
sbbb
xchg
shll
scas
xor
xor
add
pop
jl
mov
pop
jno
adc
jo
push
and
xor
in
xchg
dec
arpl
scas
arpl
adc
mov
sahf
sbb
into
sub
xchg
sbb
fimull
push
mov
scas
test
jge
scas
cli
mov
mov
sub
inc
mov
fsubl
mov
arpl
sbb
js
int
mov
jmp
cmovp
sbb
roll
sub
adc
ljmp
ret
push
lods
outsl
stos
loop
jp
pop
push
ljmp
add
dec
push
in
or
insb
mov
int3
in
sbb
push
sub
mov
clc
shll
push
movsl
lea
lods
mov
inc
xor
clc
sub
ret
outsl
xor
addr16
or
pop
loop
clc
jae
add
xor
push
mov
mov
xlat
fcmovbe
sub
repz
adc
aaa
push
es
pop
dec
mov
ds
mov
xchg
add
jns
dec
mov
aas
mov
sbb
imulb
push
jmp
xor
lds
inc
test
out
mov
jle
subb
sbb
cmp
cld
pop
mov
push
xlat
bnd
insl
push
in
lods
pop
xor
mov
pop
mov
insl
add
adc
mov
and
cmpsl
aaa
and
in
push
in
xor
icebp
xchg
into
sbb
jle
push
shlb
notl
jge
lods
scas
mov
lret
shr
lcall
inc
mov
daa
jno
popf
sbb
ja
mov
mov
mov
call
mov
lcall
out
xor
scas
cmpb
cmp
adc
sub
lods
cwtl
mov
sbb
mov
imul
popf
cmp
jecxz
hlt
inc
mov
jb
pop
jge
add
fst
mov
int
sbb
cli
mov
lods
cmp
adc
inc
lods
push
pop
mov
addr16
jmp
into
push
dec
call
popl
inc
sub
and
lods
loop
jecxz
cli
and
push
mov
lods
insl
ljmp
adc
rcr
jo
icebp
sub
cmp
jns
sahf
pushf
inc
push
dec
push
packsswb
mov
cmp
sub
mov
in
jbe
mov
xchg
xor
xchg
lods
or
ret
jmp
stos
adc
in
aad
ret
mov
into
pusha
call
xchg
xchg
movsl
fidivl
data16
adc
sahf
insl
add
pop
or
loop
mov
push
scas
lea
loopne
adc
out
mov
arpl
sbb
cmp
lock
push
push
mov
adc
outsb
lahf
ja
xchg
stos
pop
jecxz
test
inc
xchg
jmp
jge
fxch
mov
add
mov
push
sub
push
movsb
jmp
and
pop
js
cmp
xchg
or
xor
and
xchg
fstl
mov
lods
das
cmp
push
sahf
dec
sub
dec
push
dec
or
in
aas
xchg
sti
push
push
and
dec
adc
dec
loopne
test
ret
pop
xchg
xchg
sbb
ss
sahf
sub
in
xor
je
cmpsl
leave
push
ja
mov
popa
or
loope
ret
mov
mov
icebp
ljmp
push
pop
mov
sahf
jnp
lods
repnz
cmp
xor
outsl
sub
in
call
mov
and
lods
xchg
enter
movsb
or
push
push
sbb
xchg
mov
lds
pop
mov
mov
lds
jp
mov
mov
dec
dec
adc
mov
daa
mov
fldl
lret
stc
xor
cs
rcrb
push
ret
out
fst
xor
lods
dec
adc
sbb
shrl
nop
lods
adc
and
jb
pop
in
push
mov
push
adc
jmp
mov
push
or
push
rorl
sub
mov
push
add
adc
into
lods
and
out
dec
int3
add
out
xchg
adc
mov
or
ret
inc
jp
out
test
push
lods
je
sarb
and
mov
adc
adc
pop
jecxz
sub
out
in
add
enter
and
in
jge
lret
les
push
dec
mov
push
pop
stos
sbb
cli
lds
adc
sub
push
scas
movsb
cld
out
scas
les
je
test
push
loop
sbb
sub
sub
push
xchg
sbbl
lcall
add
cmpsl
cmp
push
ret
push
mov
rcrl
add
mov
push
inc
push
dec
or
aam
pop
dec
dec
fdiv
ljmp
jb
in
xchg
cltd
inc
lods
mov
ja
ljmp
mov
scas
add
sbb
rcrb
sbb
repnz
test
xor
cmp
nop
add
aas
jg
in
sub
mov
popf
popa
rcl
dec
rcll
repz
cmp
or
push
in
cmpsb
movb
jp
sub
jecxz
cmc
jle
les
jnp
mulb
gs
int3
add
mov
sub
aad
sub
mov
mov
test
data16
pop
data16
ret
pop
mov
insl
mov
xchg
xor
inc
out
aas
xor
mov
jmp
add
push
fidivrl
add
aaa
int3
imul
or
sub
xor
cmp
ret
push
sub
adc
pop
pop
mov
and
and
mov
ret
add
xchg
mov
cmc
sbb
xchg
pop
mov
push
sbb
add
inc
cmovo
adc
jmp
mov
sub
push
pusha
xchg
and
jmp
fists
roll
fcmovnb
sub
insb
add
mov
push
lock
or
outsb
fs
repz
cli
aaa
mov
xchg
push
dec
fmulp
call
sti
mov
rcl
add
mov
ljmp
std
or
xchg
sub
push
lcall
orl
pop
and
pop
xchg
jmp
jnp
sahf
fiaddl
imul
imulb
xchg
test
push
repnz
arpl
outsb
lds
jne,pn
xor
cli
xchg
jae
test
loope
jne
mov
xor
pop
adc
ret
addl
adc
movsl
in
xchg
shr
jmp
add
sti
ja
dec
sub
mov
fldt
imull
push
sub
sub
cmp
jg
jbe
lock
jl
sbb
bnd
sub
and
rcrl
sub
lods
pop
and
ret
ss
sbb
decl
data16
mov
sub
packuswb
rcrb
mov
lea
stc
je
iret
ficompl
ret
dec
jmp
sbb
dec
jb
and
xlat
sub
xor
inc
push
loopne
ret
xchg
movsl
push
or
ss
push
out
aaa
xor
sub
ljmp
pushf
test
cmpsl
shlb
lret
mov
scas
scas
ret
or
icebp
add
addr16
lahf
outsl
xchg
mov
jmp
mov
iret
adc
xchg
push
lahf
daa
mov
in
pop
std
aam
mov
xchg
nop
jle
int
push
push
std
shlb
in
inc
jne
jg
lret
lods
aaa
ljmp
lcall
sub
jmp
in
adcl
or
loop
dec
scas
inc
or
mov
int
enter
inc
scas
jns
aad
mov
xchg
movsb
movsb
xchg
xlat
ja
sti
adc
jmp
xchg
sub
push
mov
jbe
aam
insb
aad
jle
adc
sbb
inc
mov
adc
cmp
adc
add
ljmp
xor
dec
jb
loop
pop
fistpll
push
sbb
mov
mov
sbb
cmp
sub
mov
mov
adc
jns
jp
inc
sub
in
jno
xor
adc
in
lea
inc
mov
pop
xor
mov
push
mov
insb
out
roll
adc
dec
xor
sarl
xlat
push
movsb
ja
divl
lods
push
xlat
xchg
push
lcall
mov
mov
fsubr
ljmp
add
mov
pop
dec
mov
pusha
popf
mov
cmp
dec
adc
lods
mov
test
loop
inc
sub
lock
inc
gs
lods
cltd
in
bound
add
movsl
pop
add
add
call
ret
adc
int3
mov
pusha
dec
int
or
cld
or
jo
push
adcb
inc
ljmp
cs
pop
adc
shll
mov
push
in
adc
or
ret
push
mov
mov
xchg
mov
mov
pop
xchg
cmp
inc
enter
push
sti
ss
loope
pop
jecxz
cmpsb
or
pop
push
js
adcb
aad
icebp
cli
xchg
andb
fildl
addr16
dec
push
imul
loop
dec
mov
lods
mov
fisttpll
mov
pop
aad
mov
fwait
shrb
inc
adc
das
aam
inc
ffreep
mov
pusha
xor
jbe
mov
cltd
xchg
push
xchg
stc
and
jnp
dec
adc
aam
sahf
icebp
xor
ret
inc
push
xchg
xor
stos
lods
lret
push
adc
mov
jl
mov
call
cli
ja
pop
aad
in
dec
lods
add
push
int
clc
xor
mov
ret
imulb
inc
rcll
push
js
or
inc
pop
daa
loop
mov
dec
sahf
add
add
push
adc
mov
inc
lcall
movsb
xbegin
adc
xor
sbb
in
roll
xchg
xchg
cmp
div
lret
std
jnp
test
add
push
leave
inc
ja
int3
add
jmp
js
out
sbb
fistps
inc
jp
push
cmp
arpl
pop
xchg
ja
and
cltd
lcall
push
or
push
stos
rcll
or
repz
xchg
or
mov
aaa
adc
or
adc
dec
push
cld
push
sti
sbb
cmovns
inc
mov
loop
aam
push
mov
ret
lcall
pop
pop
xchg
push
mov
push
and
lret
jmp
loope
xchg
adc
stos
int3
inc
xchg
testb
data16
cwtl
divl
and
mov
ljmp
imul
sti
lods
movl
jmp
lret
stos
pushf
loop
push
xchg
sub
pop
mov
mov
pusha
mov
dec
push
jo
mov
xchg
pop
inc
pop
xor
pushl
cmp
jle
sub
cmpsb
add
adc
scas
aad
test
or
or
push
and
fistps
jno
jmp
orl
pop
aam
or
mov
in
fcoms
dec
mov
or
outsb
inc
stos
jmp
push
sub
pushf
pop
stos
std
jmp
and
cmpsb
nop
push
adc
out
jmp
call
push
les
mov
mov
pop
xor
rclb
push
out
add
pop
jo
or
movsl
jmp
jle
dec
in
int
icebp
lods
mov
push
mov
imulb
push
adc
and
mov
xor
jns
jmp
or
adc
jb
push
adc
pop
adc
mov
cwtl
add
mov
jmp
movsl
mov
fsubrs
cmp
jo
fs
sub
push
cmpsb
call
cltd
xor
ret
xlat
ret
shl
pop
das
rcll
aam
or
xchg
xor
stos
push
mov
push
push
mov
decb
cmp
jb
push
lods
add
xchg
scas
xlat
or
jle
hlt
rcl
sub
test
or
ss
enter
fxch
mov
adc
ss
push
sub
dec
fs
ror
jl
cs
cs
mov
shlb
xor
in
lds
cwtl
or
xchg
aas
or
add
sahf
cmp
shr
rclb
es
loopne
mov
notl
test
insl
out
test
fs
repz
shrl
cwtl
inc
fcoml
rorl
or
test
cmpsb
xor
ds
cmp
pop
lahf
imul
jne
imul
lret
sub
mov
leave
lock
add
cli
xchg
sbb
and
iret
sub
enter
and
dec
out
aam
jle
push
add
enter
rorl
mov
fadds
push
cmp
lcall
ret
addl
sbb
lods
lret
imul
push
sub
jl
mov
movsb
mov
add
lea
sub
pop
shrb
sub
gs
in
jmp
jle
js
fidivrs
pop
push
rclb
add
inc
sbb
rorb
xchg
jno
outsb
test
and
mov
sar
inc
cwtl
fcoml
mov
or
aad
push
pushf
jl
in
loop
inc
push
xor
mov
fsubrl
in
push
arpl
add
mov
mov
xchg
dec
pusha
xchg
adc
sti
imul
pop
push
sub
jae
and
lahf
int3
add
add
stos
ss
mov
inc
push
or
arpl
adc
dec
test
cwtl
in
in
inc
xchg
xor
add
leave
js
jl
test
out
fidivl
lods
int3
sbb
sbb
jbe
push
scas
or
loope
sbb
xchg
rcll
mov
lret
ljmp
ret
jecxz
sub
dec
xchg
sbb
jg
adc
cmc
add
pop
jge
push
cwtl
stc
ljmp
dec
mulb
cli
loop
shr
movsl
ljmp
push
stos
out
lret
shl
sbb
push
ss
in
xchg
jl
in
mov
movsl
sub
call
ljmp
lods
in
sbb
test
adc
cs
add
sub
add
pop
xchg
sub
movl
mov
or
xchg
mov
aad
sub
cmp
aad
in
xchg
gs
mov
mov
insl
ljmp
push
jo
insl
sub
lcall
ficoms
fxch
fsts
cmpsb
in
adc
add
jecxz
pop
nop
mov
into
add
lds
mov
and
iret
xor
shlb
or
fwait
add
push
jmp
data16
cs
and
stc
dec
adc
jge
cltd
scas
jp
outsl
gs
mov
jae
inc
incb
mov
imul
call
jmp
mov
sub
push
scas
mov
pushf
jmp
push
popl
mov
cmp
or
ss
cmp
jne
lwpval
push
movsb
jmp
xor
adc
push
das
data16
nop
in
mov
frstor
or
lcall
les
mov
mov
gs
fwait
pop
ret
sbb
mov
test
imul
sub
fisubs
rorb
pushf
call
leave
and
cwtl
add
out
lods
or
sbb
pop
jl
mov
dec
pop
mov
and
outsl
or
add
sahf
adc
push
mov
ljmp
insb
cs
inc
jge
inc
lds
popa
insb
fsubs
incb
and
in
je
push
jmp
cmp
shl
push
leave
push
mov
in
lret
push
lock
data16
pop
mov
inc
jae
sbb
scas
sub
inc
testl
or
sahf
dec
or
inc
cwtl
add
int
cmp
fwait
add
es
rolb
xchg
movsl
repnz
lahf
adc
mov
loop
mov
test
pop
shrb
cmp
add
inc
enter
cmp
into
add
lods
int
pop
jecxz
inc
lock
sbb
mov
adc
daa
out
stos
inc
negl
in
ret
rolb
xchg
int3
jbe
ljmp
sbb
mov
mov
jmp
ds
xchg
mov
push
pop
cli
adc
cltd
call
int3
pop
jb
out
fisttpl
pop
fwait
mov
jnp
add
out
addr16
and
stos
cmp
or
add
out
add
ds
cli
int3
add
mov
rcl
cmpsb
cmp
lcall
lods
sbb
insb
jae
ret
sub
pop
ficomps
dec
push
adc
xchg
out
or
cmpsl
sbb
add
clc
inc
shll
rorb
and
xor
pusha
xchg
adc
xchg
xchg
stos
outsl
fimull
stos
fwait
cs
rcrl
into
movsb
out
js
imulb
jmp
stos
pusha
lret
mov
mov
stc
sub
xor
xchg
sti
sbb
fs
mov
inc
js
inc
das
mov
roll
sub
les
fwait
pop
jae
repz
add
dec
movsl
orb
test
and
pushf
or
out
jnp
ljmp
cmp
push
dec
fs
into
xchg
rcrl
in
pop
push
xchg
addr16
movsl
jmp
leave
xchg
out
push
or
or
lcall
aas
inc
inc
mov
pusha
addr16
int
aas
pop
xchg
sbb
cmp
jmp
mov
mov
adc
clc
sti
jge
fsubrl
loopne
xor
adcb
jne
ret
hlt
or
push
jmp
iret
repz
push
mov
jo
pusha
icebp
std
cs
nop
test
and
pop
mov
repnz
push
mov
push
mov
sbbl
add
dec
pop
or
ljmp
and
lods
and
call
inc
pusha
mov
imul
sbb
xor
mov
push
mov
sub
or
xchg
sbb
lret
adc
fidivl
xchg
or
xchg
xor
cmp
and
aam
jle
jg
in
addr16
fistpll
outsl
pop
sub
cmpsl
sarb
in
add
fsubp
ds
sub
fcmovb
test
sub
in
test
push
ljmp
jb
in
mov
push
shl
sub
scas
cmc
push
jmp
mov
jo
lcall
dec
ja
scas
stos
shlb
push
fisubrs
sub
cmp
lds
gs
mov
jb
outsb
in
sub
fs
jle
or
dec
mov
insl
mov
jae
bound
in
outsb
nop
mov
push
insl
mov
icebp
dec
sbb
scas
mov
pop
xor
pop
adc
stos
cmp
ret
gs
add
adc
pcmpgtd
push
mov
xor
stos
ret
rorl
xor
xchg
xor
arpl
popl
jecxz
mov
ret
jno
ljmp
pop
out
cmp
jbe
push
std
jno
outsb
imul
fiaddl
jl
adcl
or
add
mov
sbb
jle
and
fs
cmpsb
sbb
and
inc
add
or
decl
popa
ret
jmp
cwtl
popf
inc
fimull
loope
arpl
imul
mov
sbb
fcoml
jmp
clc
add
push
adcl
mov
lods
std
mov
bound
cmp
mov
or
adc
sub
mov
mov
fsubl
adc
psubsw
inc
xchg
imul
jae
test
adc
xor
jg
cmp
add
pop
inc
movsb
pushaw
imul
cmp
sbb
movb
mov
lea
add
xorl
push
lcall
shll
sub
nop
push
cmpsb
sti
pop
addr16
or
mov
mov
mov
jae
or
sub
imul
push
xor
jo
mov
dec
sub
push
push
addr16
and
jge
into
addr16
and
leave
jae
sub
in
xchg
add
inc
iret
testb
pop
xchg
call
cmp
cmp
jbe
jl
lret
mov
mov
icebp
fwait
or
call
xorl
mov
pop
xchg
pop
insl
insb
lret
sub
jle
data16
xchg
adc
or
inc
nop
xor
imul
fists
or
sub
test
adc
jmp
fistpl
xchg
sbb
repnz
mov
sbb
repnz
jne
iret
add
push
ficompl
nop
sti
lock
or
notl
lcall
or
out
out
xlat
movsb
insb
mov
mov
dec
int
adc
pusha
lahf
loop
in
out
sbb
addr16
les
les
lea
fs
cltd
xchg
in
out
scas
scas
cltd
mov
lahf
ja
xor
sbb
in
adcb
idivl
gs
call
in
or
sti
xchg
fadd
add
mov
and
aaa
xchg
and
fs
adc
xor
insl
rcrl
orl
xor
sub
cli
inc
or
dec
data16
sti
jbe
push
pushf
repnz
pop
mov
jp
xchg
ljmp
in
out
adc
mov
pop
xchg
pop
push
flds
or
or
or
push
aad
popl
push
add
mov
and
cmp
and
and
int3
sbb
dec
outsl
cmpsb
sbb
cmp
jp
clc
fnstcw
pop
xchg
lods
jae
out
pop
cmp
movsl
loop
push
mov
add
sti
fisubl
ret
dec
in
ljmp
ljmp
inc
xchg
hlt
mov
dec
dec
dec
push
jno
mov
and
sub
cwtl
ret
mov
cmovge
push
arpl
sub
fistl
sub
sarl
lods
sahf
pop
cmp
dec
push
adc
std
out
push
ljmp
jecxz
fs
shll
loop
push
in
fimull
mov
lret
sub
dec
inc
mov
in
ljmp
mov
addr16
sub
jle
das
xlat
scas
xchg
repnz
sbb
in
pusha
fcomip
imul
sub
in
jle
dec
shl
sbb
movsb
mov
mov
cli
subb
dec
sbb
popf
xchg
dec
int3
insb
es
scas
jmp
dec
mov
mov
or
scas
lods
jmp
fst
inc
fstpl
sbb
fldcw
and
push
and
mov
cmp
sbb
mul
stos
sbb
cmp
add
jo
lahf
sbb
jno
ret
les
adc
jle
sbb
std
sub
jecxz
inc
and
push
stc
xor
cmp
xlat
sbb
fs
mov
lods
push
push
xchg
je
xor
add
sub
mov
push
sub
ret
sbb
xchg
push
movsb
shrl
sbb
cmpsb
sub
insb
adcb
jmp
mov
mov
xchg
jmp
sahf
pop
aam
shrl
lods
xor
shld
sbb
mov
and
mov
xor
loope
inc
xor
cwtl
dec
and
jmp
sbb
push
mov
mov
iret
into
sub
outsl
mov
sub
leave
jg
mov
lcall
pop
mov
or
arpl
and
xlat
xchg
sti
leave
pop
sbb
adc
jecxz
jns
or
sbb
sub
enter
in
jne
out
shll
xor
push
mov
pop
inc
xor
ror
lahf
add
enter
into
es
in
insl
xchg
stos
test
mov
add
and
xchg
repnz
cs
lcall
xchg
mov
sub
imul
lods
mov
subb
push
popf
dec
out
data16
jnp
lods
push
pop
mov
jo
add
gs
jns
push
fistl
pop
jge
inc
lret
sub
dec
js
and
mov
lcall
jmp
xchg
repnz
jecxz
dec
sbb
xchg
sti
fistl
ffree
dec
add
and
sub
push
mov
push
adc
add
push
dec
jmp
subb
add
pop
inc
cmp
xchg
inc
shll
cmc
xchg
sub
xchg
mov
std
loope
mov
data16
mov
mov
popf
mov
pop
nop
sbb
shrb
imul
pop
lret
cmp
sbb
dec
push
mov
sbbl
push
lcall
push
aaa
mov
popa
or
mov
add
nop
pop
in
ret
cmp
sti
cltd
pop
sub
fs
sub
pop
mov
cmp
or
sub
mov
cmpb
mov
int
mov
and
xor
cld
mov
dec
mov
shll
mov
rcr
xchg
mov
add
cmp
sub
mov
sahf
shrl
mov
or
push
insl
jmp
repz
sub
arpl
cmp
in
jo
xchg
push
and
jae
cltd
dec
das
mov
adc
ror
out
add
cmp
mov
and
mov
es
xchg
enter
sub
sub
pop
jle
jmp
cmpl
testb
lahf
dec
cmpsl
fisubrl
in
rcr
xor
cs
fnstcw
shr
mov
inc
pushf
loop
aaa
sarl
fimull
in
test
jmp
sub
fnstsw
popf
fwait
mov
testb
push
push
popf
pusha
or
insl
int
jmp
outsb
adc
ss
push
push
sub
popa
mov
imul
jecxz
dec
jle
mov
rolb
xor
jmp
mov
test
jmp
dec
adc
cld
pop
addl
insb
shll
mov
or
mov
jbe
scas
aam
mov
mov
add
push
adc
cmpsl
test
mov
aam
ljmp
adc
or
sub
sahf
in
scas
xor
and
out
xlat
pusha
das
xchg
test
add
in
fnstcw
cmp
rorb
enter
or
ja
cmpsb
cmp
mov
repz
hlt
movsl
cmp
push
jne
xchg
adc
out
pop
cmovnp
lret
movsb
push
jl
adc
sub
cwtl
imulb
xorb
or
pop
fst
xor
cmp
lcall
or
dec
and
mov
shl
lret
mov
pop
in
pop
shlb
fsub
jb
mov
and
inc
jmp
daa
mov
add
pop
mov
xor
call
jge
and
lret
inc
mov
call
add
jl
aam
push
pop
push
mov
mov
inc
sub
loopne
cs
repz
in
ficoml
int
addb
xchg
push
and
dec
jl
inc
push
loop
sbb
mov
mov
lret
int3
test
lret
pop
dec
push
push
xor
dec
aad
mulb
lods
in
fdivrs
faddl
aaa
shlb
jmp
mov
inc
mov
jl
adc
add
jmp
mov
std
fs
jmp
dec
aad
jge
push
nop
jmp
dec
pop
cmpsl
jecxz
pop
push
mov
cwtl
inc
negl
popa
adc
cmpb
sarb
xchg
dec
and
jl
sbb
pop
lcall
sbb
dec
and
push
bound
scas
mov
data16
xchg
mov
mov
jecxz
insl
out
mov
mov
mov
push
sbb
mov
loop
jecxz
lcall
inc
pop
test
jge
jge
aam
jmp
ret
ljmp
leave
or
iret
cmc
mov
ds
adc
repz
adc
std
jns
sub
cltd
or
cmp
pop
out
test
push
or
es
push
fiaddl
shll
lcall
adc
call
mov
push
inc
in
testl
adc
int3
test
or
cld
pop
lcall
mov
test
fildll
adc
and
mov
in
or
xor
pop
lock
and
loopne
cmp
test
adc
sti
mov
xrelease
repnz
clc
xor
pushf
loop
cs
mov
stos
mov
int
adc
in
insb
push
xor
out
sbb
add
mov
movsl
sub
dec
pop
cmp
xchg
push
scas
pop
hlt
or
int3
pop
arpl
add
in
adc
insl
pop
sti
out
adc
jl
popa
lods
loope
jno
insb
add
or
rcrb
fwait
sbb
pop
mov
jmp
in
loop
popa
sti
push
xor
or
mov
xchg
push
and
xor
fs
inc
mov
lret
loope
lea
out
nop
test
lods
dec
test
dec
test
cmp
sti
out
shlb
in
pop
and
mov
sbb
cmp
iret
mov
mov
cld
jb
sbb
push
nop
sub
sub
dec
dec
cmp
scas
mov
or
dec
in
inc
rcll
pushf
lret
insb
movsl
mov
fs
sti
cmpsb
std
sahf
fucomip
mov
fcoml
or
push
xchg
xchg
inc
gs
in
js
aad
push
loop
mov
xor
jmp
mov
sarb
push
aaa
sbb
imul
call
scas
in
cs
lods
popa
push
sbb
and
into
hlt
xchg
sbb
push
les
movsl
cs
scas
mulb
and
cli
out
dec
lock
stc
lods
add
adc
cmp
sti
mov
jmp
leave
push
mov
ds
pop
ja
pushf
fs
xchg
push
gs
mov
movsb
push
insl
andb
dec
xor
bound
bound
or
enter
inc
sub
sbb
mov
jne
fucompp
xor
dec
popf
xor
lods
jle
adcl
shl
mov
mov
adc
mov
xor
mov
xchg
out
lods
mov
jne
hlt
out
std
cwtl
sub
leave
cmp
xchg
push
fs
ret
das
mov
fwait
push
pop
mov
add
pusha
and
mov
outsl
aaa
sub
xchg
jmp
cmpsb
int3
jnp
orl
mov
push
mov
repnz
jo
arpl
shlb
cmp
lcall
sub
cmp
add
imul
stos
mov
fidivrl
out
in
fidivl
cmc
jns
push
in
mov
xor
pop
in
mov
add
int3
adc
addr16
ljmp
stos
mov
sahf
mov
push
sbb
scas
jecxz
adc
fdivl
call
pop
push
gs
or
pop
pop
adc
cmp
dec
sti
ja
inc
mov
les
mov
or
lods
pop
rcrb
or
fdivrl
inc
sbb
out
movsb
xor
ret
xchg
orl
cmp
je
fcoml
nop
jle
inc
lea
les
jmp
jo
movsl
push
inc
lcall
frstor
mov
inc
sbb
cli
ja
nop
clc
add
or
in
call
or
ljmp
popf
pop
cmp
cmp
ds
adc
mov
inc
cmp
pushf
shl
inc
lea
sbb
ficoml
js
inc
les
jmp
jg
daa
mov
out
push
testb
jns
movsb
sbb
xchg
hlt
pop
clc
nop
push
and
arpl
sbb
dec
popf
into
or
inc
mov
push
out
dec
test
insb
sarl
pop
data16
xor
dec
dec
mov
out
jge
jo
dec
add
repz
dec
and
xchg
out
test
out
or
or
aam
dec
lcall
outsb
adc
decb
jo
outsb
in
adc
sbb
pop
cwtl
xor
bound
push
cmpsl
test
in
sub
push
jmp
jg
add
jmp
sti
mov
ret
inc
call
pop
mov
push
mov
mov
gs
movsl
cmpsl
jae
dec
aad
mov
inc
fs
or
rolb
adc
sub
scas
and
addr16
sbb
cmp
mov
sub
shll
jne
and
fisubl
xchg
imul
ret
dec
xchg
test
jnp
inc
dec
sub
mov
xchg
roll
xchg
cltd
sbb
sub
sarb
mov
aad
mov
imul
outsl
sbb
and
fwait
out
sub
pop
loope
sub
xchg
popa
mov
int3
icebp
sbb
aad
sub
ss
mov
mov
std
mov
xchg
mov
push
sbb
ret
xor
mov
shr
push
psubusb
les
lret
adc
jmp
js
insb
leave
jb
jns
jno
mov
lea
fstpt
mov
aam
pushf
les
mov
fbld
xor
jle
jbe
test
jecxz
mov
mov
or
adc
and
and
fcmovbe
sbb
arpl
inc
ss
stos
jg
imul
movsb
jmp
in
mov
hlt
and
mov
les
inc
gs
out
out
in
ret
mov
add
jo
mov
das
int3
rcrl
insb
out
cld
sub
int3
fadds
es
cmp
adc
inc
std
sub
flds
insl
inc
add
add
fisubrs
ret
or
mov
hlt
jl
jno
in
js
daa
sbb
pusha
repz
imul
pop
shl
mov
inc
xchg
mov
subl
pop
inc
in
ret
ret
int
into
cmpsb
call
pop
icebp
lret
add
inc
jl
fcom
scas
rcrl
or
push
scas
out
mov
and
in
xor
pop
lcall
pop
xchg
cmp
pop
sti
popf
mov
fst
in
jne
pop
in
or
sbbl
dec
sub
and
fucompp
ljmp
aam
xchg
subb
inc
pop
jecxz
in
ljmp
adc
mov
pop
mov
popa
lds
insb
add
dec
ret
jle
inc
cwtl
call
dec
rcll
sub
cltd
fmull
inc
fldenv
std
ret
jbe
mov
or
dec
dec
or
hlt
xchg
mov
ret
scas
pushf
inc
pusha
adc
mov
push
ljmp
repnz
orb
mov
xchg
pop
aas
jmp
pop
icebp
or
xchg
std
mov
cmpsb
xchg
es
cmp
cltd
cmpsl
dec
push
mov
or
aaa
sbb
aaa
adc
xchg
add
adc
std
inc
out
aaa
stc
or
dec
pop
cmp
xchg
in
femms
hlt
push
scas
fadds
adc
sti
gs
pop
jns
rclb
in
outsl
pop
gs
daa
mov
or
xor
mov
int3
xchg
aas
shll
adc
push
lcall
call
ljmp
fcompl
xor
adc
in
daa
xchg
sbb
data16
mov
leave
out
mov
imul
dec
dec
jl
cmp
or
fsubrp
inc
in
push
pop
mov
add
xchg
fiaddl
xchg
inc
pushf
ljmp
cmp
inc
insl
in
mov
in
xlat
scas
jnp
cmc
mov
or
sub
pop
adc
mov
pop
sub
loope
sub
xchg
push
pushf
lods
inc
inc
sbb
lock
sub
jmp
xchg
shld
jle
sarb
or
mov
cmpsl
insb
mov
bsr
icebp
iret
mov
gs
pop
aas
lods
jl,pn
mov
push
cmp
sub
adc
rcl
shlb
sub
outsl
push
repnz
fwait
jo
nop
mov
cli
push
cmp
cmpl
test
repnz
fidivrl
lock
xchg
in
movsb
ficomps
xor
aam
or
into
add
inc
lods
mov
adc
stos
xchg
or
test
cltd
mov
dec
in
push
les
jno
xor
dec
or
stc
adc
lahf
fiadds
ljmp
addr16
jmp
ret
lods
xchg
in
or
sub
mov
jp
dec
or
cmp
call
mov
addr16
repz
dec
sar
incb
repz
rcrl
or
ret
dec
adc
jmp
les
add
jns
test
adcl
push
inc
pop
push
rolb
sub
nop
imul
sub
cld
and
in
xchg
mov
mov
xor
push
mov
or
cltd
fldl
jbe
stos
stos
sbb
mov
pop
loop
jge
add
mov
pop
pop
push
or
imul
push
in
test
mov
in
dec
arpl
xchg
popf
cmpsl
cmp
mov
xadd
xor
sbb
stc
add
or
ret
insb
jnp
xor
outsl
jnp
sti
mov
jg
ret
cmp
mov
cli
jl
inc
sub
xchg
pusha
pop
push
inc
ret
clc
fcmovnu
xchg
int3
inc
mov
push
daa
cmp
in
pop
jne
sti
mov
and
repnz
shll
inc
push
fs
dec
or
pop
push
mov
test
add
dec
lahf
jle
ret
push
mov
sbb
sarl
pusha
pushf
jmp
rorl
pop
adc
cmc
or
fdivs
dec
call
push
je
and
movsl
scas
mov
bound
in
ljmp
sahf
cmp
sub
ret
lods
shll
int3
push
xor
arpl
in
mov
outsb
fildl
dec
daa
add
mov
lret
adc
cmpsb
std
aam
jmp
out
mov
popf
movsb
orb
jecxz
adc
cmpsb
xchg
jle
mov
dec
mov
cmp
pop
jmp
xor
lret
sbb
mov
xlat
push
repz
sub
sbb
test
or
shr
test
push
pop
cmpsl
mov
scas
jo
mov
outsb
and
iret
pop
cmpsb
xchg
cmp
mov
lret
or
inc
mov
scas
dec
addr16
mov
test
fistps
add
bound
fucomi
mov
lret
dec
daa
cli
mov
mov
call
pop
aad
sahf
pop
lods
leave
adc
ret
mov
dec
ficomps
mov
scas
test
les
inc
push
imul
outsl
pop
pushw
rol
test
fdecstp
int3
stos
sub
sahf
inc
rcl
sti
es
ja
insl
lret
adcb
jmp
mov
mov
lahf
adc
push
insb
jle
dec
or
in
mov
fsts
faddl
out
mov
ljmp
out
add
rcl
shl
or
shr
adcl
adc
push
xor
ss
movsl
fdivp
in
xchg
pop
scas
dec
push
sub
or
mov
pmaxsw
mov
push
add
cmp
dec
popl
push
push
int3
mov
orl
jle
mov
sarl
mov
fdiv
xchg
mov
lock
shll
xchg
xlat
sbb
jae
iret
adc
adc
inc
jb
sarb
mov
les
sub
push
lcall
je
jmp
lcall
int3
sahf
je
lcall
sub
sub
sub
frstor
lock
sub
lods
cmp
mov
adc
mov
aam
dec
push
int3
aaa
cs
adc
lcall
mov
add
ret
ds
push
pop
cmpsl
fmull
out
mov
loope
stos
or
fdivrp
sub
inc
pop
dec
and
add
ljmp
sub
fsubr
lds
add
mov
enter
and
mov
adc
jmp
jno
jl
aaa
mov
sahf
test
jp
pushf
mov
add
cmc
pushf
mov
push
add
mov
sub
into
sub
dec
dec
fsts
jge
enter
negb
imul
sub
in
ficoml
adc
add
fsubs
lret
pop
inc
insl
sub
in
mov
fidivs
das
mov
cmp
xor
ljmp
out
mov
insb
sbb
icebp
xchg
mov
cmpsl
jns
shll
hlt
fcomps
inc
dec
bound
cli
push
mov
cmpsb
ret
xchg
and
lcall
jae
sub
fcoml
or
cmpsl
ds
jbe
test
stos
add
push
pop
mov
or
and
fwait
mov
mov
lret
mov
fiadds
xchg
pushf
or
scas
xchg
aaa
popf
sti
into
outsl
sbb
push
sub
sub
scas
dec
xchg
cmovne
cs
pop
in
scas
mov
out
or
mov
inc
shrl
xchg
cmp
add
add
adc
push
add
imul
pop
xor
add
mov
sub
sbb
mov
inc
or
mov
mov
xchg
in
and
repnz
mov
xor
call
or
and
and
into
in
lods
test
or
jecxz
xchg
into
mov
fs
or
mov
pusha
popa
or
fiaddl
push
mov
int
pushf
jmp
or
sarb
xor
out
sarl
pop
cld
popf
and
jmp
jmp
fcomp
xor
xor
jo
push
mov
lods
adc
daa
popf
leave
and
popa
pop
xor
push
xor
repz
icebp
pop
mov
shll
and
pop
scas
fsubs
fimull
add
test
movsb
movsl
outsl
jge
pop
pop
or
test
fnstcw
or
adc
int3
pushf
lret
icebp
mov
or
jge
cltd
mov
adc
test
mov
stc
mov
scas
addr16
rcll
ja
push
and
mov
pop
or
mov
jge
stc
sub
fchs
sahf
push
or
adc
push
mov
adc
stos
fstpl
fisubrl
and
shl
repz
xor
cmp
loop
add
pop
and
in
loope
jae
mov
mov
adc
push
mov
or
xchg
shr
xchg
add
push
dec
sbb
mov
scas
sub
rcrb
push
movsb
push
pop
in
in
call
repz
scas
or
mov
sbbb
call
bound
sbb
push
ret
lds
push
lret
gs
adc
pop
mov
jne
jg
or
pop
push
or
mov
pop
subl
adc
mov
popa
ja
insb
ja
enter
aam
cmp
aaa
cld
in
jne
xlat
mov
or
and
push
ljmpw
int
cld
mov
push
pop
enter
ds
es
out
xchg
idivb
push
push
cli
test
cmp
add
call
mov
inc
sti
or
cwtl
das
cmp
mov
mov
push
push
or
and
xor
flds
les
hlt
inc
scas
push
cmp
add
ret
rcll
shlb
mov
lock
cs
and
mov
inc
inc
jge
daa
pop
rcr
in
icebp
test
push
adc
mov
mov
imul
test
push
sbb
xor
out
push
es
and
in
sbb
aad
xor
adc
or
xor
mov
enter
or
adc
push
mov
mov
cld
fidivs
jmp
jae
mov
cltd
or
push
sbb
arpl
cmp
mov
fldl
and
rcl
mov
nop
mov
lock
adcl
add
mov
sub
mov
adc
nop
lods
ds
jle
sub
inc
jp
xchg
sahf
fildl
test
jmp
and
lock
xchg
jge
add
mov
mov
lahf
cmc
mov
int
jmp
outsw
mov
scas
mov
cs
out
push
sbbb
adc
cs
stc
jb
mov
xor
lcall
pop
out
inc
mov
or
cli
loope
arpl
data16
mov
mov
in
ficompl
mov
push
loope
pop
inc
popa
xor
pop
jo
mov
pop
mov
filds
fs
out
jmp
outsl
jns
adc
outsl
mov
mov
xor
jb
sub
insb
push
push
xchg
xor
scas
loop
test
jns
sti
cli
sahf
or
loopne
fcomps
pop
and
fadds
testb
sahf
sub
mov
pushf
in
call
xchg
stc
mov
push
frstor
pop
and
aaa
aad
shl
fcoml
sti
ret
insb
test
ja
adc
or
icebp
lds
mov
or
xchg
pop
cltd
jecxz
xor
mov
sub
scas
push
dec
or
mull
dec
icebp
lods
adc
push
add
addb
test
jb
ss
inc
decl
loope
or
cmp
call
push
xchg
mov
popa
lods
int
mov
or
cmpsl
rorl
outsl
push
push
rcll
sub
add
lods
out
leave
int
or
test
lods
dec
fnstenv
sahf
scas
in
ret
mov
fcoml
jecxz
cwtl
icebp
dec
test
js
sbb
mov
jno
sbb
popf
rorl
and
push
shrl
adc
ljmp
test
mov
in
xchg
das
add
dec
adc
inc
loopne
or
fsubrl
and
or
imul
outsl
xchg
sti
das
call
push
fildll
and
jns
xchg
enter
jle
fwait
leave
and
mov
lods
lcall
lcall
pop
sti
stos
das
fistps
xchg
cmp
xchg
lret
sar
pop
hlt
dec
or
sbb
lods
jl
push
lods
js
cld
scas
leave
pop
cli
in
out
dec
adc
dec
fsts
pop
pop
mov
aam
mov
mov
pop
fbstp
sbb
dec
jmp
mov
js
xor
sub
lcall
adc
mov
arpl
scas
add
dec
sbb
icebp
ficompl
in
push
and
xchg
hlt
or
jecxz
scas
jo
pop
scas
lret
orb
jle
dec
pushf
data16
cmpsb
cmp
rcl
pop
arpl
test
stc
ret
test
sub
cmp
jno
ret
jb
dec
mov
stos
inc
jne
mov
shrl
inc
jbe
in
lds
or
out
fistpll
std
imul
pop
stos
sbb
add
mov
leave
sub
gs
and
mov
std
xchg
jl
and
les
adc
test
cs
xchg
sbbb
and
and
cmp
cs
insl
movsb
and
mov
and
in
in
adc
mov
inc
ret
in
adc
mov
shlb
outsl
outsl
ja
mov
loop
aas
mov
mov
adc
sbb
aaa
or
cmp
lret
ret
loope
lods
sahf
and
aam
repnz
add
pop
push
push
repz
and
out
in
push
in
in
call
addb
inc
add
jmp
paddq
ds
mov
mov
test
pusha
js
in
sbb
mov
and
stos
shrl
shlb
or
jne
xor
in
push
adc
xchg
mov
stc
sub
test
cmpsl
or
int3
inc
sbb
jnp
ljmp
mov
sub
in
pop
mov
xchg
adcl
push
outsl
ret
shrl
shr
mov
shrl
mov
cmpsl
cmp
test
pop
lret
mov
jge
in
out
add
sbb
cwtl
ja
stc
sbb
mov
lcall
push
jecxz
mov
stc
mov
and
test
xor
fwait
loop,pn
ret
sbb
in
pop
sbb
push
push
mov
ljmp
pusha
lcall
fdivr
ret
xchg
les
push
lods
jg
and
mov
cwtl
push
sbb
ds
mov
mov
into
insb
xchg
shl
pop
fnstcw
mov
js
repnz
lret
mov
lcall
adc
xor
outsb
lock
js
test
dec
mov
ja
or
cmp
sub
lcall
or
aam
mov
mov
leave
mov
das
sbbb
xor
push
adc
in
adc
sbb
xchg
insb
out
add
mov
add
lods
or
mov
mov
dec
sub
popf
lcall
adc
in
xor
inc
aas
or
cli
push
jns
ljmp
add
in
leave
ljmp
jnp
mov
add
stos
pop
jecxz
jecxz
inc
popa
mov
test
ljmp
shl
push
mov
sub
inc
pushf
iret
jle
mov
sarl
adc
nop
pusha
sub
out
jae
adc
arpl
jbe
inc
js
mov
mov
dec
fisubs
inc
push
stos
mov
lods
ss
lret
push
stos
out
jmp
mov
jecxz
shrl
and
add
or
mov
arpl
pop
xor
mov
adc
push
jmp
fs
les
aam
and
mov
je
jmp
je
or
dec
add
not
or
iret
lds
cmp
jp
loope
adc
arpl
cmc
shr
loop
inc
dec
clc
sbb
adc
hlt
in
int3
lret
and
xchg
dec
mov
push
push
pusha
call
jo
shlb
lods
andb
scas
xchg
data16
push
insl
ret
and
xor
scas
push
xchg
stos
cs
in
add
mov
movsb
jl
push
andb
jmp
stos
jo
sbb
imul
add
pusha
adc
sbb
ret
xchg
in
add
js
movsb
lds
mov
inc
add
fdivl
out
xchg
std
pop
mov
pusha
ljmp
movl
xlat
mov
cmp
in
add
and
adcb
jmp
shll
sbb
std
lock
xor
and
cmp
decl
add
sub
aaa
or
dec
mov
sbb
lcall
out
pop
push
cwtl
pop
adc
dec
add
sub
xchg
add
dec
xor
shll
push
xlat
cmp
fsubrs
test
cmp
insb
popf
iret
mov
in
cltd
push
dec
in
rcl
push
and
cli
into
lods
pop
or
sub
ja
mov
jecxz
jmp
push
pop
ret
sbb
ds
push
stc
dec
mov
mov
sar
pop
pop
pop
out
js
add
cltd
mov
test
or
ljmp
dec
push
mov
lret
and
repnz
orb
cmp
shlb
cmp
dec
mov
arpl
push
movsb
and
cmp
mov
push
push
mov
ss
push
xchg
shrb
cli
icebp
mov
shrl
cmp
pop
mov
push
jecxz
dec
add
push
test
jle
mov
cwtl
ret
loope
scas
sub
fcom
cmp
cltd
jbe
out
js
sbb
insb
inc
cmp
ror
cmp
pusha
push
scas
nop
inc
adc
sti
sti
mov
mov
pop
pop
mov
mov
sti
add
imul
shll
shlb
lods
or
addr16
sbb
in
lret
std
mov
or
testb
mov
mov
mov
ror
jle
dec
sub
rcrl
sbb
dec
shrl
and
xchg
pushf
mov
jg
mov
pop
ljmp
rorl
cmp
mov
das
notl
sub
jno
dec
js
xor
cs
aaa
push
mov
ret
int3
cmc
xchg
out
rcrl
sti
mov
push
outsl
push
adc
add
dec
jl
mov
add
pop
cltd
pop
in
pop
ja
dec
jle
jmp
or
aam
dec
sub
lcall
or
sahf
or
fwait
xchg
test
dec
lcall
je
xchg
xchg
xchg
sbb
mov
and
adc
js
addr16
pop
and
mov
sub
and
andb
jmp
add
xor
pop
std
jecxz
sub
xor
lret
imul
mov
jne
sbb
test
sbb
pusha
push
inc
imul
fsubrs
outsl
adc
xchg
pusha
fsubrs
push
sub
outsb
and
pop
jno
nop
pop
jl
mov
pop
cmp
cmpsl
imull
rolb
es
cmpsb
xor
jo
dec
jb
jns
shlb
imul
jo
xchg
xchg
and
push
sub
pop
mov
divl
lcall
sti
stos
mov
sub
inc
int3
lret
movsl
fstl
lcall
stos
adc
pop
jmp
shll
inc
das
fbld
xchg
ljmp
mov
adc
cs
nop
ss
cs
jo
in
mov
xchg
stos
mov
sbb
xor
pop
pop
or
fcmovb
call
mov
push
jbe
xchg
int
imul
sbb
push
or
push
cmpsl
push
lcall
inc
mov
mov
scas
xchg
jmp
ret
or
cli
mov
mov
repnz
sub
test
stos
mov
lods
mov
sbb
or
sub
mov
jno
push
and
leave
and
int
ret
sub
sbb
pop
scas
test
imul
pushl
and
inc
inc
out
outsl
inc
cmp
add
pusha
inc
stc
mov
frstor
inc
in
imul
xor
sbb
add
into
fstpt
jecxz
xchg
loope
pop
mov
jbe
ret
data16
sbb
push
aaa
mov
notb
cmp
pop
call
aas
arpl
not
into
ja
pop
pop
daa
lea
out
mov
adc
jl
dec
callw
sub
inc
mov
movsl
push
inc
sub
inc
clc
sub
mov
mov
jecxz
dec
lods
inc
nop
iret
imul
cmpsl
stos
sub
loope,pt
ljmp
clc
ror
sub
das
mov
push
cltd
popa
jb
es
je
lret
mov
sbb
inc
sub
loope
cmpsb
xorb
mov
push
lods
pop
mov
or
cmpl
ljmp
sbb
inc
imul
xor
fistpl
jnp
scas
jb
fists
jp
iret
popf
test
cmpsl
mov
and
adc
inc
push
dec
stos
test
in
mov
shrb
adc
mov
inc
add
gs
sub
stos
mov
or
je
jns
mov
adc
inc
inc
mov
testl
adc
dec
cs
jp
nop
mov
or
push
xchg
fsubrl
inc
adcl
add
cmp
mov
lret
aaa
dec
pop
sbb
scas
movsb
rcrl
cmpsl
add
nop
push
shll
dec
fmulp
fdiv
in
lds
pop
rolb
sbbb
mov
stos
mov
into
jecxz
sarb
xchg
cmp
out
sbb
fs
sbb
lahf
out
pop
into
in
mov
stos
jge
mov
fcmovnu
lret
xchg
xchg
adc
cs
mov
test
push
dec
sub
js
push
xor
cmp
mov
sbb
adc
pop
dec
dec
adc
dec
xchg
add
add
sub
mov
fimull
push
jge
or
cwtl
iret
dec
daa
add
mov
push
or
data16
xchg
push
pushf
jmp
mov
sbb
lcall
call
add
sub
scas
mov
sub
inc
lcall
dec
pushf
shll
mov
xor
pop
lea
in
push
jle
cmp
loopne
mov
cli
test
adcb
jmp
xchg
in
mov
and
pop
enter
mov
pop
out
xlat
mov
call
jmp
cmc
insb
jle
popa
shrl
sbb
xchg
cli
and
outsl
fwait
cmc
pop
mov
mov
ja
push
js,pt
loop
sarb
add
sub
lcall
xchg
mov
push
xchg
clc
inc
xor
mov
popa
jmp
out
jecxz
jmp
fcoms
std
daa
test
and
xchg
into
adc
test
cs
and
mov
mov
nop
push
push
outsl
xchg
cs
push
adc
dec
xor
movsb
mov
vmptrst
sub
mov
iret
sub
fsts
arpl
mov
loop
xchg
push
pop
fisubrl
sub
imul
cmp
jb
addr16
sti
and
in
xchg
pop
xchg
das
ljmp
in
sarl
pop
jecxz
push
dec
push
push
jge
andl
push
cmp
or
repz
sbb
negl
jg
dec
lret
pop
cs
mov
addr16
pop
fs
pop
movsl
jecxz
xchg
mov
or
fstl
pushf
pusha
adc
lods
andl
imul
les
inc
inc
adc
cmp
sub
sbb
sub
scas
or
adc
call
pop
cwtl
adc
ret
rorl
sar
adc
xorb
pop
cmp
ret
add
lahf
bound
insb
inc
mov
stos
or
scas
out
mov
je
idivl
ficoml
mov
dec
je
push
inc
mov
pop
mov
push
jb
popa
add
ss
ret
mov
cld
ror
imul
shl
ficompl
or
push
subl
jge
push
mov
and
mov
jmp
adc
rcl
outsb
ret
in
xchg
jge
pop
es
das
outsl
pop
and
xor
lcall
dec
push
lea
mov
sbb
mov
jl
cmc
mov
cmp
add
push
add
shrl
movsb
jmp
jb
test
imul
loopne
cmp
push
pop
movsl
repz
lret
dec
jo
std
cs
sub
fmull
les
lret
and
addr16
inc
repz
sbb
movsl
sub
lahf
in
mov
dec
adcl
in
pop
xor
push
ja
ljmp
cmp
fcmove
ss
adc
test
dec
cmpsl
pop
mov
push
popa
mov
test
loop
fiaddl
cwtl
mov
das
and
mov
gs
cmpsb
adc
imul
mov
push
push
hlt
push
fisttpl
and
push
popa
mov
mov
mov
inc
xchg
cli
or
adc
mov
mov
sub
or
shrl
inc
jo
clc
ret
xchg
mov
jb
ss
adc
shrl
int
mov
je
xchg
add
fstps
das
add
jne
inc
xor
xlat
mov
add
out
or
sub
or
or
shll
into
loop
cmp
push
fistl
sub
js
or
jecxz
mov
out
cmpsb
ljmp
enter
add
xchg
mov
out
and
stos
sbb
push
loop
lcall
rcl
clc
js
inc
xchg
mov
loope
or
inc
es
aas
cld
and
aad
imul
in
jg
addr16
pusha
or
sub
lock
aad
addb
outsl
jmp
or
fs
adc
xchg
movsl
or
js
cmpsl
mov
inc
movsl
imul
orl
ret
sti
xchg
call
scas
or
push
nop
shrl
lret
jecxz
lret
cs
dec
fidivrl
out
xor
sti
or
sbbb
jno
sub
or
sub
insl
adc
roll
imul
cwtl
in
divl
and
sbb
je
aaa
out
fistps
enter
and
mov
jmp
sbb
ret
push
sub
push
add
nop
push
push
rcr
mov
dec
sbb
xchg
sub
arpl
pushl
ljmp
stos
inc
xor
ds
add
sub
xchg
lcall
mov
and
mov
add
fmulp
lea
add
fsub
popf
mov
stos
push
outsl
push
mov
movsb
mov
sbb
push
jecxz
scas
adc
jmp
andl
ja
inc
cltd
int3
out
dec
lret
negb
and
push
js
ret
in
int
adc
xor
negb
push
mov
xor
jns
mov
fisubrs
push
add
or
push
sarl
or
mov
jle
sbb
xchg
mov
ret
jge
into
xor
xchg
andb
mov
jmp
mov
or
inc
aad
jmp
test
fiaddl
imul
call
adc
mov
sub
xchg
sahf
pusha
or
packssdw
cmpsl
test
loop
cs
xchg
aam
repnz
orb
loop
mov
inc
cs
mov
ljmp
outsl
jo
mov
shlb
das
pop
jecxz
pop
sbb
adc
xchg
outsb
out
ror
in
pop
in
adcl
cs
incb
ja
fs
mov
ss
fsubrs
rcll
mov
ja
loop
mov
fcmovnbe
psrld
xor
ljmp
pop
divl
imul
in
testb
sahf
jge
xchg
cmp
es
pop
cmp
xlat
cld
arpl
mov
add
lcall
adc
mov
mov
adc
sub
push
imul
add
loop
cmp
fcomps
loopne
mov
sub
mov
mov
mov
pop
push
and
stos
pop
xchg
sub
sbb
jmp
and
pop
jmp
loopne
lret
cmp
push
mov
push
popf
push
xchg
cmc
mov
add
mov
movl
in
or
mov
iret
loope
adc
push
add
mov
jo
flds
pop
insl
dec
shrb
fs
jl
cli
es
das
sbb
fwait
inc
sarl
fsubr
pop
loope
movsb
call
sti
imul
stos
mov
repz
push
sbb
inc
cli
jmp
mov
and
icebp
or
dec
sbb
loopne
lret
test
jne
push
xchg
or
ljmp
fisttpl
leave
mov
arpl
pmulhuw
cmpsl
shl
in
add
shl
dec
rol
lods
mov
xchg
lods
or
cmp
inc
xor
add
adc
sub
sub
lock
sub
lcall
js
cld
scas
jmp
jno
pop
dec
adc
ret
cmp
pop
pop
lcall
into
call
push
jo
int
xorl
jmp
jmp
jge
outsl
fwait
pop
mov
xchg
sbb
lret
jmp
and
sbb
mov
sub
arpl
xor
les
repnz
mov
cld
xchg
mov
sahf
jmp
cmp
jo
adc
fidivl
insl
rolb
sbb
sbb
dec
jbe
daa
arpl
repnz
mov
lds
mov
cmp
shlb
jl
out
int3
push
push
mov
mov
fisubl
sar
in
inc
push
ret
cmp
sbbb
mov
add
pop
push
or
adc
jae
inc
mov
or
jge
sbb
lds
xchg
dec
inc
je
lds
js
push
jb
mull
or
jmp
out
push
push
fldt
sbbl
pop
out
and
cmp
shrb
jno
imul
mov
push
int
adc
js
stc
loop
push
push
mov
xchg
mov
jmp
cmp
add
xor
cmp
or
fmul
mov
sub
add
sub
mov
pop
mov
jno
mov
loope
shlb
loopne
push
pushf
stc
mov
aas
mov
jmp
pop
xlat
ds
out
or
movsl
sub
repz
loope
mov
inc
sbb
pusha
lds
xor
pop
add
popa
xchg
push
sbb
xchg
cmpsb
lods
push
adc
leave
pop
scas
jns
xchg
xchg
or
adc
ja
rcl
in
xor
popa
in
mov
cmpsl
test
adc
mov
mov
rorb
shlb
sbb
out
adc
push
ficompl
pop
popf
and
sbb
gs
lock
aad
fdivs
and
push
mov
add
pop
lret
add
rolb
lret
mov
adc
add
push
jge
push
decl
sub
stos
lahf
jmp
and
ljmp
test
jg
call
xchg
fsts
sub
sub
in
lods
jmp
aad
mov
mov
sub
xor
pop
pop
icebp
lods
mov
cld
xor
jne
sub
cmp
mov
mov
push
scas
movsl
arpl
mov
mov
arpl
lahf
sub
push
test
lods
mov
sahf
in
add
cmp
jb
add
mov
pop
xlat
mov
std
ljmp
xchg
mov
ret
xchg
mov
mov
movsb
movsb
and
pop
jmp
rcll
inc
fcmove
xchg
cwtl
sbb
stc
mov
push
rorl
and
pop
jae
cmp
ljmp
orl
ret
in
daa
push
cltd
mov
fcmovb
mov
xchg
outsl
insb
push
pushf
mov
or
push
call
mov
pop
xchg
mov
adc
scas
mov
mov
jle
aam
mov
push
push
and
or
bound
push
ss
sub
sti
insb
outsl
adc
bound
pop
cld
ljmp
cmp
out
pop
jmp
xchg
xchg
aam
mov
pop
mov
dec
cmpsb
in
mov
stos
leave
rorb
out
mov
mov
mov
sub
push
and
shlb
mov
inc
dec
scas
lahf
mov
pop
int3
aam
xchg
pop
xor
fs
and
sub
ret
and
xchg
arpl
gs
daa
cmp
scas
adc
jle
mov
iret
popf
jb
mov
stos
push
xchg
mov
insl
mov
and
fnstenv
lret
call
mov
mov
movsb
fadd
mov
cmpsl
or
sahf
out
ljmp
mov
scas
inc
stc
out
stc
sarb
shll
int
adc
adc
pop
add
mov
lods
or
imul
mov
push
lods
dec
clc
cs
inc
push
inc
rcrl
adc
mov
aaa
push
mov
repnz
in
fcoml
and
jmp
out
mov
sub
xchg
das
inc
ret
in
mov
and
cmp
test
jo
ja
sub
pop
adc
adcl
loope
jae
int3
in
sbb
push
sti
mov
push
mov
add
and
shlb
sarl
mov
mulb
mov
xchg
and
dec
fs
or
or
into
or
scas
jle
aad
pusha
pop
sub
add
sahf
pop
scas
push
insb
jns
lods
lret
aad
rcr
arpl
lock
ret
pop
ret
pop
adc
push
xor
cmpsb
sti
repnz
imul
or
push
dec
ljmp
iret
add
jmp
inc
cltd
bound
ss
mov
cmpsb
lcall
in
ljmp
cmpb
mov
fmull
sbbl
add
dec
mov
gs
daa
jns
dec
setl
mov
inc
mov
pushf
sub
sbb
ret
cmpsl
inc
inc
sbb
inc
inc
sbb
ficoml
arpl
inc
repnz
ds
add
jno
das
enter
out
xchg
es
repz
inc
mov
fisubs
test
mov
adc
adc
push
cmpsb
ret
lods
bound
dec
out
ret
rcll
daa
pushf
cmc
xor
out
test
es
les
and
mov
lea
inc
imul
test
adcl
outsb
push
jmp
adc
push
les
xor
lock
dec
cmpsl
stos
rcl
mov
loop
sti
xor
jmp
add
mov
mov
in
xchg
nop
or
iret
pop
xchg
cmp
sub
mov
addr16
sbb
sbb
andb
dec
mov
into
aad
xchg
ret
adc
and
inc
cmp
adcb
divb
inc
addr16
fs
imul
mov
xchg
fldt
xor
dec
mov
out
scas
jb
jecxz
fidivs
xchg
ss
or
outsl
mov
add
lcall
fimull
push
leave
sub
cmpsl
lock
adc
xchg
jl
insl
sub
outsl
or
xor
sahf
push
cld
cmp
adc
movsl
cmp
push
lea
or
push
not
mov
pmulhw
or
cmpsb
sbb
fidivrl
pop
add
out
mov
mov
rcrb
jne
cltd
mov
testb
in
push
xlat
fcoml
jno
daa
mov
int3
jecxz
xor
xchg
inc
sbb
jp
mov
or
pop
inc
lods
sub
out
in
mov
je
lcall
dec
cmpsb
cs
movsl
pop
in
leave
xchg
out
mov
push
fsubrs
fsubs
dec
in
mov
es
dec
enter
push
mov
cli
jno
or
cld
mov
dec
jne
and
or
les
jno
lcall
or
jmp
ret
in
and
lods
cmp
ss
cmp
push
dec
lds
xor
lret
pop
shll
jmp
incl
in
dec
out
push
bnd
cmp
sbbb
test
mov
push
jge
xchg
cmc
cli
ja
scas
dec
pop
sbb
addr16
mov
or
rcr
xchg
xchg
sti
in
jmp
xchg
cwtl
lar
xchg
adc
add
mov
push
shlb
xchg
shl
or
shll
pop
out
sti
push
cld
leave
push
add
or
pop
pushf
lock
or
popa
fs
enter
rcll
jae
das
jae
not
divb
fistpl
mov
dec
and
cmp
sub
and
cltd
or
adc
jnp
out
ja
and
dec
dec
inc
shlb
js
mov
pop
jl
push
lcall
in
and
imull
mov
mov
negl
sub
stos
scas
and
out
cli
lods
loopne
popa
mov
xor
mov
daa
mov
loopne
leave
loop
ror
mov
xchg
mov
or
mov
xchg
or
test
sarb
inc
or
add
cli
loop
push
mov
outsb
push
or
mov
in
sarl
mov
insb
jns
sarl
sbb
pushf
or
push
cs
or
or
mov
aas
daa
xchg
dec
das
mov
and
sbb
into
cwtl
pop
add
or
push
mov
lahf
jle
fisttpll
mov
adc
ret
mov
jb
inc
in
dec
and
xchg
cmp
movl
add
repnz
mov
pop
add
add
aam
xchg
jle
sub
push
add
into
xchg
adcb
clc
cs
mov
lds
lret
mov
out
and
push
inc
jmp
cmp
rcr
fwait
aaa
icebp
and
loop
ret
pop
int3
cmpsl
xchg
sbb
pop
mov
imul
mov
cmp
sahf
and
xor
and
rcll
in
xchg
push
xchg
popl
dec
mov
ds
or
jge
je
jmp
adc
mov
scas
cmp
mov
pop
pop
scas
jbe
aas
imul
and
adc
sahf
idivl
mov
adc
sub
cmp
sub
dec
pushf
sub
scas
push
jg
outsb
mov
jge
adcb
mov
inc
call
push
xchg
jle
call
data16
mov
and
fldl
jmp
push
push
in
sub
rclb
sbb
stos
mov
xorb
pop
fisttpll
das
adc
dec
aas
addr16
jno
test
and
inc
iret
test
push
mov
and
in
sbb
fwait
sbb
nopl
addr16
scas
cs
outsl
adc
sti
aam
scas
mov
shrb
les
sbb
dec
loop
sub
imul
add
cs
scas
lahf
dec
cmpsb
lods
out
pop
xchg
mov
cmp
das
xlat
sti
cmp
lahf
pop
jb
les
scas
mov
jmp
into
mov
out
lret
jno
test
cli
xchg
sti
std
or
int3
rorl
in
sub
rolb
xor
and
es
pusha
cmp
adcl
lds
adc
sarl
mov
aad
fptan
lods
in
lock
ljmp
jmp
sub
mov
mov
xchg
sarl
pusha
and
cli
fldl2t
or
sbb
roll
sahf
int3
repnz
insb
push
shll
mov
and
fstl
mov
mov
or
sarb
push
pushf
pushl
mov
jns
cmc
push
inc
aas
push
sbb
dec
mov
rorl
pop
insl
test
xor
gs
in
add
pop
push
pop
mov
ljmp
and
leave
sti
pop
push
xchg
int3
lea
ljmp
cli
fisubs
push
push
js
mov
xor
inc
push
jne
mov
sahf
inc
jmp
in
pop
mov
insb
and
shrl
mov
cmp
dec
pop
or
loope
pop
shl
or
cld
sbb
adc
pushf
loop
pusha
lods
or
add
lcall
icebp
lods
es
ja
je
inc
sahf
mov
out
pop
mov
cmp
push
or
or
inc
sbb
xorl
pop
stos
mov
or
dec
sbb
sbb
pushf
adc
pop
nop
sub
dec
divb
mov
sub
ljmp
xor
xchg
outsb
inc
xor
test
stc
add
pop
aam
mov
push
insl
ret
dec
fs
notb
sar
enter
stos
fs
lea
push
ja
mov
cmp
sbb
cli
out
scas
fidivs
loop
mov
jbe
add
mov
add
leave
negl
data16
fst
cmp
jmp
add
dec
dec
adc
in
jl
cwtl
lahf
sbb
xor
popa
xchg
sub
push
in
dec
mov
inc
pop
lret
hlt
loop
ds
les
fs
ljmp
sbb
insl
movlps
and
jmp
add
pushf
mov
xchg
jge
call
xchg
mov
or
xchg
ret
cltd
out
inc
and
push
enter
ljmp
xor
or
pop
xchg
push
movsl
xchg
pop
push
mov
xor
scas
sahf
sbb
adc
mov
ja
or
pop
lea
les
addr16
rcll
adc
jmp
inc
mov
cmp
and
pop
ret
jg
sub
fisttps
insl
movb
rorl
and
in
add
adc
sti
push
ja
or
mov
lcall
arpl
inc
outsb
cmp
sub
sub
mov
mov
test
scas
sbb
sub
scas
sbb
fdivl
outsw
call
sarl
dec
xchg
ret
sbb
mov
sbb
sub
sbb
ljmp
mov
sbb
pop
mov
imul
notb
jbe
into
leave
lock
cmpsl
aam
mov
in
mov
stos
loop
xchg
xchg
aas
loope
xchg
jmp
subl
scas
mov
push
xchg
pop
mov
cmp
or
cmp
lods
fists
scas
mov
ret
mov
out
ds
cmp
mov
sub
sbb
sub
stos
repnz
repz
mov
iret
popw
and
adcb
cmc
jmp
push
bnd
leave
int
push
or
stos
cli
sbb
stos
insl
mov
ss
out
xchg
pusha
mov
jns
test
mov
scas
adc
cmpsl
sub
aam
jecxz
jne
loop
push
sub
inc
pop
divl
outsb
jge
xchg
pop
cli
imulb
push
fwait
jge
sub
mov
or
adc
push
dec
adc
gs
mov
fldcw
lea
jne
bts
neg
neg
jmp
mov
lahf
mov
call
shl
mov
clc
stc
cmp
movb
movb
pushf
lea
jb
bt
cmc
cmp
pushf
cmp
call
fdivp
out
ljmp
xor
movsl
outsb
lcall
add
shlb
dec
mov
arpl
mov
int3
sbb
pop
divl
mov
jns
jge
cmp
adc
pusha
push
imul
or
pusha
xchg
mov
xor
cltd
dec
or
mov
cmp
push
pop
cwtl
mov
les
dec
sar
loope
shlb
mov
ss
pop
mov
dec
gs
negl
mov
and
testb
orb
jp
and
jno
cs
mov
cmp
or
icebp
lcall
les
push
ja
mov
inc
sbb
loopne
popf
inc
and
push
pop
cmpsb
sub
sbb
jle
jno
sub
cmp
or
scas
clc
push
pop
lods
xchg
loopne
push
lods
sahf
das
imul
sub
inc
push
movsl
mov
ret
into
popf
nop
dec
jecxz
jns
mov
fcoml
jne
imul
inc
pop
pop
pop
pusha
mov
jg
dec
pop
adc
push
lcall
add
pop
inc
rorb
pop
outsb
cmc
popa
test
test
xor
iret
cmpsb
js
cmp
push
inc
push
sahf
inc
dec
or
fistpll
xchg
out
push
fisttpll
daa
xorb
dec
pop
clc
mov
xor
aaa
jp
into
cmpsb
and
pusha
popa
int
ret
jg
push
repz
lahf
mov
fldcw
inc
bound
mov
jl
icebp
jno
push
std
cmp
adc
popf
arpl
in
mov
add
sbb
mov
inc
push
xor
jb
cmpsb
jbe
leave
js
push
into
nop
pop
jno
push
adc
lea
aad
fistpll
lds
adc
std
add
inc
add
addr16
mov
lods
aad
rcl
lock
mov
aaa
add
les
push
jmp
jge
call
test
lret
out
gs
dec
sbb
fs
fldenv
xchg
adc
loop
fwait
jl
out
out
out
add
xchg
push
ljmp
adc
sbb
pushf
imul
cmp
and
xchg
lock
ljmp
clc
and
sbb
lret
fistps
jge
push
push
mov
and
add
mov
cs
push
xchg
mov
scas
sbb
mov
daa
mov
adc
mov
pop
sbbl
push
xor
scas
sbb
mov
xor
idivl
imul
movsb
repnz
mov
push
neg
push
pushf
pusha
pushf
inc
bt
pushl
push
push
cmp
mov
lea
lea
pushl
setns
lea
pushf
mov
jmp
add
ja
out
sbbl
ds
push
in
sub
pop
gs
lock
fwait
mov
or
add
fsubl
js
jg
out
cmpsb
xor
mov
std
dec
enter
lahf
shrb
in
subl
adc
push
addl
cmpsb
xchg
imul
or
mov
imul
mov
xor
mov
cmp
loopne
cmpsl
push
fmul
pushf
movl
push
movl
pushf
lea
jmp
xchg
cld
mov
imul
adc
mov
daa
push
jb
cs
push
dec
ret
repz
rolb
cmpsb
std
mov
pop
xchg
sahf
cltd
movsb
into
push
call
test
cltd
jb
or
lret
and
jecxz
dec
mov
mov
cmp
lcall
and
mov
mov
mov
and
mov
and
adc
imul
adc
mov
out
roll
flds
xor
lcall
xchg
add
jne
insb
mov
dec
or
mov
pop
insl
in
insl
pop
hlt
lods
pop
ja
nop
mov
call
jne
cmp
pop
fistl
jmp
gs
out
add
sbb
out
adc
cmp
outsb
jae
mov
inc
cmpsl
lea
inc
and
push
pusha
pushl
ret
inc
dec
mov
and
fsubs
mov
stos
lret
ror
xchg
pop
sbb
das
mov
imul
mov
pushf
jb
test
mov
outsl
xor
rcrl
jmp
push
ljmp
lret
xor
in
xchg
aas
jns
mov
push
and
lret
xor
cmpsl
icebp
jmp
push
loope
adc
xchg
sbb
scas
push
xchg
leave
movzwl
push
inc
in
je
or
fisttps
call
mov
jmp
pusha
jmp
out
cmc
in
out
add
std
nop
mov
das
fimull
out
scas
push
dec
sub
xor
push
jae
pop
dec
ljmp
pop
pop
and
mov
lods
sub
int3
xchg
jno
cld
cmp
orl
push
fs
scas
inc
fwait
cwtl
stc
xchg
mov
dec
inc
or
add
not
xor
clc
inc
sub
stc
jne
test
rorb
aad
pop
std
push
jne
arpl
idiv
ret
test
ss
push
adc
jp
and
adc
push
pusha
lea
js
pushf
lea
jne
jmp
lea
jne
aam
bsr
sub
aas
mov
shl
push
pushf
sar
add
pusha
mov
clc
push
jmp
cmp
bt
cmp
movzbw
lea
pusha
mov
lahf
movsbl
mov
movb
jmp
jge
dec
jmp
nop
pop
hlt
push
pop
adc
mov
xor
icebp
pop
adc
arpl
lds
ljmp
imul
mov
jl
mov
adc
and
int
into
pop
dec
orb
dec
roll
sub
adc
arpl
jle
mov
scas
mov
mov
in
pop
sbb
je
inc
inc
adc
insl
sub
aas
addr16
jmp
cmp
xchg
jge,pn
in
movl
movl
mov
movb
movl
pusha
pushl
push
pushf
lea
jmp
lea
jne
pusha
movb
mov
pushl
pushf
mov
cwtl
movzbw
movsbw
lea
jne
lea
jmp
sub
lahf
ljmp
test
pushf
cmpsb
lock
and
pop
add
inc
jle
ja
cli
push
push
and
pop
jno
stc
ds
adc
shll
test
test
cmpsl
sbb
mov
lds
add
xchg
je
repnz
lds
pusha
mov
push
pop
mov
int3
mov
es
test
xor
pusha
dec
and
and
and
xchg
and
aad
pusha
addr16
xchg
mov
std
mov
add
insb
pop
loope
pusha
pushf
call
pusha
movl
push
movw
movl
pushf
push
pusha
lea
jmp
cmp
pushf
call
xlat
sbb
ljmp
xchg
mov
xor
or
jb
cli
pushf
sub
sbb
stos
xorl
fcompl
insl
sub
int3
mov
inc
test
rcrb
mull
pop
outsb
je
push
push
iret
cmp
add
int
aas
paddusw
jne
sti
popf
jmp
add
lret
jge
inc
repz
js
cmpsl
dec
mov
sbbl
pushl
clc
cmp
pusha
lea
jbe
adc
sub
xor
mov
shl
neg
adc
lea
mov
shr
jmp
cs
arpl
out
outsl
stos
aam
ljmp
xor
out
sbb
xchg
fisubrl
in
daa
sarb
sub
and
mov
loopne
mov
icebp
lahf
mov
movl
or
dec
pop
mov
push
jnp
mov
jg
scas
aas
std
jae
clc
sbb
adc
pop
sysenter
pushf
inc
xchg
mov
inc
imulb
lret
insl
xchg
cmp
out
dec
and
test
stc
mov
push
ret
mov
or
je
xlat
frstor
in
outsl
pop
add
cmp
leave
inc
push
mov
add
lods
inc
stos
push
decb
sbb
xchg
pop
repnz
mov
sbbb
dec
or
mov
jl
insl
sbbb
xor
bound
adc
cmpsb
int
xchg
fsubl
je
xchg
xchg
or
out
sbb
dec
xchg
jle
adc
test
movsb
lods
enter
pusha
pop
push
pop
roll
mov
inc
sbb
rorl
xchg
xor
xchg
lahf
jp
add
sti
add
adcl
pop
xor
fsub
test
js
fistpll
bound
mov
jmp
xchg
testb
lret
call
jne
testb
lcall
xchg
idivb
and
mov
mov
out
jnp
out
mov
out
mov
and
cwtl
arpl
jns
fisubl
push
mov
loopne
scas
push
lods
out
orl
sbbb
mov
and
push
idivl
lahf
outsl
jg
dec
in
push
jle
in
leave
jge
inc
mov
pushf
mov
push
aad
xchg
cmpsb
aas
movsl
jo
and
sarl
imul
xchg
fs
mov
and
in
add
das
jecxz
push
aaa
popa
mov
jmp
mov
cld
inc
daa
in
daa
aas
cmp
fsubp
push
out
nop
popa
sbb
push
pop
cmpsb
xchg
jge
icebp
cli
imul
nop
adc
lahf
lods
mov
xchg
cmp
sub
mov
inc
pop
loope
subb
mov
add
test
or
and
rcrb
in
pop
loope
lahf
add
pop
movsl
in
jb
aas
mov
jp
leave
sarl
adc
sub
popa
incl
lret
xchg
pusha
daa
bt
mov
and
sar
xor
clc
mov
call
pusha
movl
pushl
jmp
add
push
outsb
push
imul
outsl
outsl
imul
jmp
add
into
out
nop
rorl
loopne
xchg
mov
push
iret
jns
mov
lods
divb
pop
sahf
out
nop
cmpsb
xchg
in
ds
inc
dec
aaa
loope
out
out
nop
mov
pop
jb
mov
mul
cmp
hlt
insb
lret
jecxz
mul
mov
mov
in
adc
cmp
or
inc
sahf
adc
fimuls
sub
test
add
jbe
or
cltd
jmp
sub
xchg
mov
cmpsb
adc
xchg
dec
jle
addr16
popa
addr16
scas
push
int
push
shr
xchg
pushf
pop
cmpsl
int
lea
jae
jmp
movzwl
movzbw
jmp
movl
pushl
lea
jmp
xor
out
or
repnz
xor
jno
inc
mov
mov
pop
sub
pop
fistps
add
fsubr
sub
pop
xchg
popa
sbb
ret
add
lret
es
xor
pop
lods
addl
sub
push
sbb
aam
xchg
dec
push
add
and
jmp
pushf
xchg
xor
xchg
sub
cmp
popf
mov
pop
mov
loop
pop
scas
inc
xor
enter
repz
pop
mov
xchg
outsl
xor
mov
dec
aas
jne
cli
pop
outsb
into
movl
jmp
push
lea
ja
mov
inc
pusha
push
call
inc
mov
in
nop
popa
fsubrl
mov
jb
stos
dec
lods
jg
adcb
push
icebp
pop
mov
jbe
mov
pop
mov
xchg
outsb
aas
sbb
in
out
cs
sbb
sbb
mov
pop
or
jb
jo
sub
jle
xor
jge
adc
out
in
push
mov
cmp
mov
scas
cmc
jge
sub
mov
push
es
dec
pop
subl
out
xor
sti
fs
pop
xchg
cltd
add
frstpm(287
das
cld
lret
pop
mov
sbb
fadds
aad
xor
bound
call
mov
jmp
adc
int
icebp
gs
mov
into
loop
push
das
inc
push
stos
sti
xchg
mov
or
stos
repnz
ret
jle
and
adc
stos
xchg
xorl
loope
mov
fs
fistpl
inc
shll
jb
fwait
pop
rclb
in
sarb
loopne
or
mov
jnp
dec
rcrl
cmpsb
scas
cltd
pop
inc
jmp
out
divl
test
pop
inc
jne
and
inc
add
test
pop
in
nop
out
out
cld
jne
or
orb
aad
inc
adc
pop
popa
leave
inc
sub
popf
inc
and
mov
xchg
repnz
dec
mov
lods
mov
loopne
xchg
mov
xchg
sub
and
mov
or
and
push
lock
ljmp
pusha
push
mov
cmp
int3
jb
fld
mov
fwait
jns,pn
fs
jl
stc
lea
call
pop
add
dec
aaa
add
mull
mov
mov
cmp
stc
fstpt
sub
movsl
xor
mov
fadd
int3
insb
inc
xchg
mov
push
out
jae
aas
cmp
in
out
or
fwait
scas
mov
lods
xor
mov
in
pop
push
nop
outsb
pushf
repnz
outsl
mov
mov
xor
cmpsb
or
jae
push
loop
lret
repnz
or
sarl
push
enter
or
add
pop
subb
push
push
in
je
out
adc
jnp
out
dec
pop
pushf
push
movl
pusha
pusha
jmp
cmpsb
push
cmc
loope
nop
add
xchg
cld
inc
out
mov
outsb
jns
int
mov
sub
cmc
xchg
sbb
mov
shlb
jg
jb
add
fwait
jns
mov
fdivrl
lods
data16
js
stos
adc
mov
mov
loop
rcll
cmp
pop
xlat
xchg
and
mov
cmp
mov
sbb
test
nop
fsubl
cmp
push
sbb
jo
pop
xor
into
pop
jbe
pop
inc
pop
call
gs
push
dec
xchg
adc
sbb
adc
mov
movb
mov
in
cmpsl
fcmovb
adc
lods
xchg
adc
je
jae
or
ss
jne
es
pop
sub
je
fwait
jl
dec
fstl
fcom
add
fcoms
sbb
imul
pop
xor
repnz
cld
sbb
in
outsb
ficomps
lret
ds
adc
les
jg
int
mov
in
push
movl
jmp
icebp
xchg
loopne
nop
mov
and
cmp
outsl
fcmovnbe
mov
mov
scas
leave
jg
ret
mov
mov
add
popa
cmp
dec
and
jb
dec
sarl
mov
add
outsb
test
inc
xchg
ss
testb
mov
stc
sub
mov
mov
cvtdq2ps
push
mov
bound
out
sub
dec
xor
shlb
xchg
jg
dec
push
mov
scas
cs
sahf
es
lea
ja
jne
jle
push
jnp
push
call
add
jo
or
push
lea
je
xchg
movzbw
push
lea
call
movb
mov
pushf
pushf
pushl
pushf
pushl
ret
mov
pop
nop
fisttps
mov
and
adc
fsubp
nop
popa
mov
xchg
pop
adc
cmpsl
sarl
shlb
jno
and
sub
and
lods
inc
xlat
and
pop
push
loop
mov
xchg
cmp
mov
and
mov
cmp
jne
orb
cmp
mov
ja
out
xor
rorb
mov
insb
or
loopne
nop
pop
adc
xor
xor
rcr
xchg
pop
adc
inc
xor
mov
out
cmpl
call
lahf
sti
movsl
inc
dec
cmpb
adc
pusha
out
repz
jmp
cmpsl
mov
sbb
push
insl
push
arpl
mov
loope
leave
push
cli
addr16
lods
jbe
leave
fld
push
add
bound
mov
nop
mov
jne
jbe
bound
aas
cmpsl
lods
xchg
cmp
pop
cwtl
push
mov
adcb
nop
xor
cli
jecxz
pop
inc
das
clc
subl
iret
bound
push
jmp
repz
inc
sub
out
push
xchg
push
xor
adc
mov
nop
mov
fcoml
mov
pop
mov
adcb
cvtpi2ps
xor
or
or
mov
test
push
mov
inc
adc
pop
bound
iret
xor
pop
ret
nop
in
adcb
dec
call
or
mov
mov
test
push
add
aam
rorl
push
cmp
je
pop
push
mov
cld
jle
fsubp
nop
lcall
out
clc
in
clc
inc
movsl
out
push
and
stos
incl
add
jb
pop
pop
sbb
out
inc
mov
scas
jns
xchg
addr16
out
cwtl
lcall
sub
sbb
cmp
shr
cwtl
push
in
aam
enter
push
andl
outsl
or
cmovge
in
push
inc
stc
call
arpl
xor
fcompl
mov
repz
stos
add
push
out
cs
stc
pusha
or
push
mov
mov
aas
sbb
into
mov
push
xchg
jae
mov
push
fcoms
popa
xor
pop
add
xchg
js
movsb
leave
xor
out
xlat
shlb
mov
push
jmp
mov
xlat
fucom
nop
jecxz
imul
dec
adc
mov
decb
aas
inc
mov
loope
or
ret
andl
push
hlt
mov
imul
testb
mov
pop
in
test
fadds
sub
fcomip
push
popw
int
add
mov
mov
adc
int
sbbl
mov
lahf
xchg
adcl
sbb
clc
mov
int3
sahf
pushf
inc
rcr
in
dec
fisttps
mov
rorl
inc
xor
inc
push
imul
mov
sbb
jecxz
es
fwait
mov
dec
jecxz
pushl
pusha
lea
jne
setb
lea
mov
pushf
lea
jmp
push
mov
imul
lds
test
or
hlt
sbb
push
enter
call
scas
fldl
divl
out
ja
sub
test
insb
cmp
hlt
sahf
mov
mov
mov
xlat
jg
stos
bnd
insb
push
idiv
mov
cltd
mov
push
lret
and
cmpsb
mov
call
mov
setp
mov
lahf
movzbw
lea
jne
pushf
movl
pusha
jmp
inc
test
nop
add
insb
adc
pushf
sub
mov
push
loop
dec
addl
nop
das
lods
in
in
pop
fs
cmp
jp
movsl
xor
push
and
lea
sbb
dec
arpl
mov
and
icebp
cmpsl
add
and
add
xor
dec
sbb
pop
inc
or
cltd
push
test
xchg
sbb
call
imul
xchg
aad
popf
lahf
cli
jmp
or
lahf
pop
popf
jne
out
popf
dec
xorl
pop
insl
test
dec
inc
xor
clc
out
std
rolb
cld
gs
loop
mov
inc
cld
addr16
and
mov
sbb
cmpsl
pop
cmp
out
jns
in
scas
sub
ja
cmp
xchg
cli
cwtl
cld
mov
pop
cwtl
mov
shll
lret
adc
jno
cld
xchg
sbb
inc
sub
insl
addr16
inc
xor
jle
sbb
in
xchg
prefetch
or
out
mov
imul
cmp
inc
dec
sub
mov
inc
adc
test
xchg
inc
jo
out
xor
outsb
push
fstpt
cmc
inc
add
sbb
mov
mov
inc
xor
je
adc
sbb
aas
addr16
push
decb
dec
je
add
in
hlt
jno
jmp
js
jo
in
cs
cmp
in
cltd
mov
stc
inc
dec
fadds
and
jae
out
ljmp
and
xchg
repnz
pushf
in
mov
cmp
outsl
sub
adc
repnz
pop
xor
in
xchg
xchg
xchg
loop
nop
repnz
xor
adc
mov
pusha
cmpsb
imul
mov
jbe
xchg
scas
sub
pop
nop
adc
cltd
gs
js
dec
mov
pop
pop
jae
add
or
and
pop
loope
nop
pop
inc
and
je
xchg
ret
loopne
nop
mov
addr16
lods
jbe
sbb
fcoml
sbb
lret
gs
lea
cltd
cmc
pop
enter
out
in
fwait
ret
sub
cmp
xchg
sbb
mov
pushf
sub
lcall
and
mov
sub
mov
in
pop
cmp
dec
int3
lea
int3
mov
xor
lea
loope
cmpsl
push
aaa
add
push
lea
adc
out
loope
sub
pusha
sub
push
shrb
pop
mov
negl
dec
mov
mov
lahf
lahf
mov
mov
das
inc
mov
and
ljmp
lock
push
inc
repnz
ret
aas
xor
pop
and
dec
mov
rcrl
mov
pop
movsb
lret
lret
xor
jg
pop
push
in
cmc
xchg
mov
popa
xor
mov
popf
stos
mov
xor
fs
hlt
cmp
mov
mov
mov
or
repz
dec
dec
xchg
jecxz
ja
add
inc
leave
dec
sub
mov
int3
rcll
cmpb
cmpsb
das
fbld
push
sbb
inc
or
adc
xlat
fwait
pop
fisttpl
xchg
movw
pop
movl
lea
push
movzbw
call
lea
jb
stc
pushf
cmpb
lea
pushf
jmp
mov
es
nop
xor
add
pop
mov
pop
out
mov
or
rcr
aad
inc
icebp
and
push
sbb
bound
xchg
push
into
das
mov
jmp
repz
jle
insb
inc
cmp
inc
pop
sbbl
in
ljmp
rcll
inc
aaa
dec
jmp
das
lahf
pop
js
push
stos
xor
orl
dec
nop
mov
mov
push
sbb
pushf
lea
jae
cmc
cmp
jmp
jnp
dec
xlat
out
push
dec
jnp
scas
cmp
cmp
mov
cltd
push
cmp
test
add
cmp
cli
pop
adc
ret
or
loopne
lods
cmc
lock
filds
and
lea
pusha
out
dec
mov
in
insb
std
mov
add
es
mov
sbb
dec
lock
inc
into
leave
cmpsb
insb
xor
jmp
ficomps
xlat
out
fistps
das
fwait
movsb
xor
out
mov
mov
loope
and
lret
daa
sub
std
aas
enter
out
mov
add
cmp
add
lret
fcoms
lds
pop
mov
mov
or
int3
pop
loopne
je
or
sbb
jle
cmp
outsb
cmp
push
or
addr16
in
out
inc
lods
data16
xor
in
nop
mov
add
mov
imul
ss
and
jno
out
jge
and
cwtl
ret
scas
cmp
scas
clc
in
fsubs
mov
push
fwait
dec
push
and
dec
lret
stos
add
pop
arpl
adc
jl
mov
icebp
cmp
xor
dec
jo
aad
or
xchg
add
leave
subb
mov
or
int
push
lcall
or
adc
int
pop
lret
mov
call
add
sbb
fsubs
push
outsb
push
andb
jmp
stos
adc
aad
nop
lds
adc
mov
mov
cli
cld
mov
mov
pop
add
sub
mov
das
jge
fisubl
push
adc
add
push
sbb
jae
out
shlb
dec
mov
hlt
dec
jb
ljmp
fidivl
loop,pt
pusha
pop
je
pop
inc
fwait
cmpsl
dec
insb
dec
dec
fstp
ror
add
in
sbb
lahf
xor
and
push
mov
pop
out
sub
cwtl
cmp
loope
mov
sub
icebp
pop
pop
pop
into
and
cmp
loope
push
js
push
cmc
pop
and
insb
adc
dec
jge
les
bound
gs
aad
nop
jle
movsb
scas
jp
xor
movsl
scas
sbb
mov
andb
pop
cwtl
dec
ret
dec
sahf
enter
test
jne
lea
js
mov
fcom
pop
xor
or
mov
pusha
outsl
shlb
push
fs
stos
sbb
sti
bound
fldl
push
xchg
mov
xchg
cmpl
push
xchg
sbb
out
push
std
pop
dec
cmpsb
xchg
mov
pop
call
sbb
cmpsl
aam
nop
mov
stc
add
mov
in
cmp
mov
pop
adc
lret
dec
jecxz
das
into
xchg
outsl
loopne
cmp
std
or
sub
stc
push
xchg
mov
add
add
sbb
add
fwait
sub
xchg
pop
scas
fidivs
fidivl
mov
cmp
js
push
fwait
popa
cld
clc
scas
aaa
hlt
mov
outsl
pop
pop
lods
ja
movsl
rcl
push
scas
pop
cmp
inc
xlat
mov
outsl
fs
or
lahf
lods
repnz
loopne
xor
loop
push
pop
clc
out
sub
arpl
add
sub
out
xor
pop
xchg
loop
fsubrl
lret
mov
xor
popf
mov
xlat
xchg
jle
outsl
cmp
lahf
outsb
cmc
das
push
sbb
mov
dec
mov
fcmovb
lods
adc
negb
lods
jecxz
inc
push
dec
pop
xor
hlt
sahf
xchg
mov
inc
xchg
fadds
out
insl
cmp
push
stos
xor
cs
mov
into
jmp
sbb
mov
outsb
dec
push
mov
adc
pop
sub
jnp
test
push
or
pop
pop
ficoml
fwait
xor
sbb
pusha
dec
out
shl
nop
sti
mov
or
mov
sarl
inc
int
cltd
xchg
lds
cmp
mov
popf
test
sbb
push
push
in
cld
mov
sbb
mov
repz
cld
testl
fsubrl
sbb
mov
adc
fdivrl
mov
arpl
cltd
lahf
lds
jbe
and
lret
or
fnstenv
fs
ja
cmc
pusha
pusha
imul
cmp
test
add
pushf
pushf
push
lea
jmp
jmp
movl
pusha
pushf
lea
jmp
clc
stc
push
call
cmp
nop
sbbb
cmp
adc
mov
add
int3
lret
push
ret
aam
rcr
xchg
aas
daa
mov
pop
mov
jecxz
add
cs
aaa
jecxz
sti
nop
lods
sub
mov
add
loop
addps
mov
inc
xor
jecxz
sahf
pop
mov
jno
and
and
cltd
add
insb
je
andl
sbb
inc
insl
mov
adc
test
add
cmc
add
stc
jmp
or
shl
sub
jmp
aaa
lahf
inc
shl
nop
push
or
rorl
push
sbb
leave
call
pop
xor
inc
jo
ds
push
mov
out
cmp
xchg
testl
mov
js
jmp
mov
mov
jne
or
jbe
cs
dec
inc
adc
mov
and
mov
imul
pop
scas
cmp
rcr
shll
sbb
sbb
loopne
pop
sub
xor
fimuls
sbb
fsts
adcb
pop
or
xlat
mov
jge
dec
xor
add
mov
sbb
fdivrs
out
mov
in
fldenv
mov
int3
dec
aam
and
cmp
mov
and
pop
or
push
ret
adc
test
adc
out
inc
frstor
fists
out
add
arpl
mov
popf
adc
adc
jo
push
dec
push
pop
out
mov
jmp
adc
leave
xor
pusha
dec
xchg
pop
bound
mov
jno
mov
out
pop
mov
int3
cwtl
orl
mov
cmp
or
out
push
dec
loope
jbe
in
in
data16
ja
cs
das
jb
or
xchg
push
mov
fldt
inc
lods
push
clc
mov
outsl
xor
loop
hlt
sbb
or
aaa
and
pop
adc
sub
mov
shl
nop
mov
popa
insl
pop
popa
push
inc
sub
scas
mov
add
insl
push
inc
xchg
sbb
jnp
push
sbb
icebp
int3
and
stc
daa
repnz
xor
jb
xchg
cmc
add
pop
mov
jae
xor
es
adc
mov
outsl
cmp
and
jo
xchg
cmp
adc
jle
mov
cmc
stos
call
mov
and
jg
stos
jae
lahf
inc
mov
cwtl
shlb
adc
or
lea
jne
inc
bt
mov
shrd
sub
or
btr
clc
bswap
mov
pusha
mov
sub
pushl
call
dec
hlt
cltd
iret
out
movsl
rorb
imul
jne
sub
sbbl
push
fnsetpm(287
pop
or
inc
push
shlb
in
or
call
mov
cmc
scas
stc
ret
adc
ljmp
popa
jg
not
or
fs
out
jae
mov
xlat
dec
push
sbb
xchg
pop
xchg
mov
sbb
andps
lea
inc
sub
cmp
iret
or
jns
pop
or
je
sub
jne
cltd
insb
jae
mov
minps
fbstp
push
rorb
movsl
pop
jle
dec
pop
adc
into
sbb
mov
rcr
dec
rorl
scas
mov
inc
push
sti
adc
ret
fcmovnbe
bndstx
sub
rcr
loopne
add
sbb
in
fstpt
jne
fldl
mov
pop
jmp
cmp
push
or
push
mov
add
aaa
add
stos
scas
sti
pushl
add
add
mov
xchg
ljmp
popa
rolb
addb
es
popa
rolb
loopne
ds
nop
pushf
movsb
test
or
jmp
movl
bswap
lea
jmp
push
sti
mov
call
fildl
cltd
inc
mov
dec
int3
insb
mov
sar
mul
sub
mov
mov
or
inc
loopne
les
cmp
ficomps
scas
fwait
cmp
cmpsb
jo
mov
and
jecxz,pt
jns
sub
test
out
cmpb
or
test
aad
add
adc
inc
pop
sbb
lds
push
pushf
cmp
xchg
add
in
mov
int
nop
lods
test
pushf
add
jns
scas
pop
add
cmp
mov
lahf
out
aam
out
fdivl
lret
sub
mov
mov
out
mov
pop
shlb
pop
jns
fwait
jno
pop
lahf
fists
fcompl
sarl
inc
sub
aas
inc
lea
loopne
push
lret
cmp
int
nop
cld
pop
and
aas
ljmp
adc
lret
mov
das
dec
jb
inc
dec
icebp
cmp
inc
xor
cmc
push
jecxz
cs
cmp
in
sub
clc
xorb
adc
and
mov
pop
xchg
xor
dec
sub
aam
test
and
push
fstl
push
jns
pop
and
mov
cmpsb
jns
fstl
mov
repnz
dec
ja
add
xchg
push
pop
jecxz
repnz
test
pop
dec
aad
lahf
hlt
ret
int3
out
iret
sub
pop
stos
mov
stos
jbe
leave
mov
leave
imulb
lret
or
jno
icebp
inc
sub
inc
sbbb
imul
pop
sub
mov
sbb
add
jae
fucomip
movsb
cmp
add
sub
mov
pop
ljmp
or
inc
push
sub
mov
sub
les
call
hlt
fsubl
ret
sub
loope
adc
arpl
cs
pushf
movw
pushf
pusha
lea
jmp
repnz
int3
out
int
adc
xor
push
mov
lret
into
test
pop
xor
inc
inc
subl
test
add
xrelease
imul
lds
mov
in
xor
ret
fcompl
rcrl
adc
and
sub
or
jbe
jp
leave
in
pop
add
scas
pop
push
ret
add
insb
mov
mov
in
sar
loopne
or
inc
clc
inc
out
jp
ret
ljmp
nop
jp
orb
lcall
push
repnz
lret
mov
lret
out
mov
fidivrs
cmp
dec
cmp
xlat
iret
add
mov
test
out
in
daa
and
sbb
rcrl
sub
mov
adc
andb
jb
call
sbb
pop
insl
fldcw
xor
ffreep
sub
add
movzbw
adc
sbb
sbb
mov
stc
pushl
test
jmp
sti
mov
jns,pt
lock
inc
iret
cmp
scas
ja
in
xlat
out
fadd
sub
int3
and
sbb
xchg
and
pushl
icebp
rorl
pop
sbb
pushf
sbb
les
pop
push
vmwrite
push
dec
popf
push
test
pop
popf
outsb
iret
popa
jge
mov
cmc
mov
nop
rcr
es
mov
jo
popl
inc
push
sbb
pop
imul
popa
mov
inc
push
mov
add
xchg
jbe
inc
dec
xchg
xchg
adc
lods
cmp
iret
insl
mov
pushf
push
lea
jmp
cmc
pop
add
out
push
lret
mov
pop
call
mov
inc
add
ss
jge
shlb
lock
or
jge
stos
cs
daa
mov
mov
inc
lds
arpl
push
js
push
cmp
fnstenv
cmpsb
xor
add
outsb
cltd
mov
leave
lock
aas
add
add
lock
add
imul
jl
add
movzbl
setl
bswap
mov
pushf
pop
lea
mov
call
pusha
stc
add
call
cmpsl
addr16
out
call
push
xchg
add
adc
cmp
jae
dec
je
xor
movsl
sub
sub
pusha
jo
lret
mov
mov
dec
aad
call
xlat
loop
push
test
mov
jo
push
dec
in
lea
pop
inc
rorl
jp
sub
mov
stc
push
inc
mov
data16
incl
fistl
fdivl
bound
adc
data16
or
lods
jbe
jae
rcr
xchg
mov
adcb
outsb
jo
rcl
fwait
clc
loop
rcr
xchg
sti
xchg
iret
xchg
lcall
push
jns
inc
and
push
mov
mov
fisttps
mov
sub
xor
push
inc
imul
or
dec
inc
fs
jo
shll
sbb
cmpsl
or
call
mov
mov
cltd
movsl
add
sub
lea
add
xor
mov
inc
add
lods
stos
ret
lret
insl
cmpsb
push
push
int3
popf
add
cltd
inc
shrb
shr
ja
into
push
sti
inc
out
sarl
inc
sub
enter
in
add
je
outsl
fs
gs
imul
add
adc
popa
enter
mov
mov
out
fisubrs
jb
push
lods
shl
sbb
scas
inc
rol
pop
stos
aam
and
rsm
mov
aam
jg
jb
in
movsb
fnsave
sub
cmp
inc
mov
jb
or
hlt
int3
fdivl
xor
mov
jp
lret
das
cmpsb
xor
inc
scas
push
inc
mov
and
mov
fdivrl
iret
movsl
xor
push
stos
inc
sarb
and
repnz
idiv
mov
lcall
push
sbb
dec
jnp
sub
cmp
inc
inc
push
in
idivb
jmp
nop
cltd
jp
daa
push
pop
out
push
daa
rolb
jg
sub
sbb
dec
js
add
add
cmp
xor
andl
and
iret
xchg
jnp
daa
cs
xor
and
and
add
not
dec
pushf
mov
movb
lea
jp
pusha
push
inc
mov
setae
mov
lea
jmp
sti
dec
sbb
in
jp
in
clc
and
mov
in
inc
dec
xchg
or
jns
jp
cmp
mov
xor
sbb
push
fistpl
sub
rorw
fwait
pop
sub
imul
push
sub
sbb
add
int3
negl
aam
ret
loope
sbb
stos
pop
jo
mov
lock
mov
push
mov
fsts
ret
rorl
cwtl
ffreep
mov
in
loope
mov
movl
jmp
lea
shl
push
sets
cmc
shl
mov
sbb
mov
call
sarb
out
sub
xor
fwait
xchg
sarb
shrb
inc
cmp
mov
or
psubusb
mov
cld
lcall
loope
cmpsb
nop
nop
scas
inc
out
xlat
movsl
mov
int
popf
lods
jbe
dec
pop
mov
fistps
movsl
stos
pop
ljmp
push
sbb
hlt
in
pop
sbb
mov
push
fucomip
jmp
int
stos
push
insb
pop
cmp
unpcklps
sbb
push
xchg
loopne
pop
addb
cli
jecxz
sbb
or
and
or
or
lcall
arpl
fidivs
scas
pop
xor
and
mov
pop
jo
mov
sbb
jg
in
mov
lret
inc
push
mov
pop
jecxz
mov
jecxz
sti
sbb
imul
clc
or
mov
mov
andnps
mov
add
int
loopne
jl
xor
out
cmp
rorl
lea
jmp
push
cmp
pop
cltd
negb
xchg
and
in
xchg
decl
sahf
leave
mov
dec
ja
mov
divb
mov
xor
outsb
jle
into
pop
mov
pop
mov
adc
xchg
xchg
sti
mov
jg
xchg
addr16
xlat
push
mov
mov
cltd
dec
dec
adc
nop
push
fsubl
test
idiv
in
pusha
test
mov
out
and
mov
pop
jmp
fildll
xor
mov
mov
fistps
rcrb
cmpsl
aaa
mov
or
jp
push
sbb
mov
ret
mov
mov
or
jns
std
subl
mov
das
xorb
push
inc
and
out
xchg
pop
movsl
sub
cmc
pop
push
sahf
cmp
and
call
pushf
push
mov
push
movb
pushl
ret
lret
repz
ret
out
movsb
ljmp
decl
xor
stos
je
in
rol
pop
fisubs
fldl
bound
popa
inc
mov
sub
xor
outsb
mov
imul
pop
es
rcr
stc
les
and
push
jge
imul
ss
and
scas
stos
xchg
gs
push
pop
loope
mov
sub
mov
inc
push
cmp
call
mov
cmp
mov
bt
xor
call
mov
sub
out
xor
cli
out
pop
gs
jp
into
cld
mov
mov
les
sbb
pop
movsb
movsb
clc
pop
cmpsl
xor
movsb
mov
ds
movsb
test
lret
push
icebp
lret
xlat
mov
mov
xchg
adc
cmc
testl
xchg
fs
aam
sbb
adc
push
mov
clc
frstor
sbb
sub
aad
pop
in
pop
ret
data16
push
mov
mov
pop
xlat
xchg
inc
ret
insb
push
xchg
bound
xchg
add
push
push
cld
mov
cmpb
in
xchg
cmp
and
add
push
push
adc
push
int3
nop
dec
mov
and
and
dec
sub
dec
pop
xchg
jb
shll
popa
push
cmp
ret
fwait
add
lahf
stos
xchg
inc
push
gs
jo
int3
fwait
xchg
mov
xor
imul
ljmp
shlb
pop
lret
sbb
lods
add
push
and
fistl
lods
mov
sub
mov
jl
xor
pop
call
pop
or
mov
jl
mov
cld
pop
dec
pop
xor
out
mov
faddp
out
ljmp
in
cltd
in
cmp
loope
fcmovu
mov
cld
add
and
push
xor
sarb
pop
es
das
sub
sbb
xchg
sub
adc
gs
mov
int3
in
mov
cwtl
adc
xchg
enter
xor
aaa
iret
cmp
sbb
cmp
xchg
out
cs
fisubl
adc
mov
push
in
test
dec
repnz
aad
dec
mov
pusha
scas
jo
stos
sub
scas
or
outsb
cmp
pusha
out
out
xchg
cwtl
out
scas
ret
pusha
ror
sub
outsb
push
jb
pusha
stos
pop
sahf
add
shlb
jle
or
js
loope
or
push
ficoml
shlb
pop
rcrl
xor
xchg
jnp
cmp
fcomp
movsb
mov
sbb
rcrb
push
in
cld
mov
pop
xor
dec
notl
fdivl
bound
outsb
std
int3
xchg
nop
cmp
out
std
push
push
inc
pop
fcoms
push
lock
jecxz
jo
inc
out
std
push
ror
std
sbb
mov
pop
popa
push
push
jae
ret
xor
aad
mov
dec
gs
popa
addr16
outsl
js
add
je
add
inc
and
pmullw
call
mov
inc
pushf
cmp
test
cmp
xor
jmp
lods
lock
jle
andl
loope
cmp
push
ret
push
push
aad
cltd
pop
movaps
je
cltd
jb
or
movsl
sbb
addr16
push
out
jnp
repz
add
jbe
xchg
mov
or
xchg
stos
xchg
xor
lods
shrl
sub
pop
mov
dec
cmpsb
fldt
mov
leave
mov
dec
mov
adc
icebp
dec
movsb
shr
in
mov
insb
cwtl
rolb
pop
shl
pusha
inc
xor
mov
jns
stc
in
sahf
repnz
adc
movsl
movsb
insb
aas
aaa
inc
xor
sar
nop
adc
pop
and
fptan
out
arpl
fcompl
loop
pop
xor
and
pop
inc
inc
add
idivl
pop
orb
daa
inc
clc
xchg
sub
sbb
sahf
and
inc
add
enter
arpl
cmp
jnp
mov
imull
jmp
ficoms
push
xor
test
flds
ret
mov
stc
add
jmp
and
sarb
inc
out
cwtl
loop
jbe
mov
popa
int3
sbb
xor
push
cmp
cmp
or
dec
shlb
mov
mov
cmpb
outsl
inc
jg
adc
addl
sbb
test
jo
lret
cli
jg
adc
inc
push
or
iret
xor
lds
jno
in
ds
and
lahf
ja
jbe
sbb
or
cs
jo
pop
sub
lret
xchg
gs
arpl
push
sub
jbe
rolb
jecxz
xor
inc
inc
lret
push
cli
fcmovb
cmp
push
push
dec
clc
popf
mov
das
jnp
addps
add
fiadds
lock
adc
and
mov
popf
cld
mov
add
lret
enter
out
out
imul
cmp
out
decb
mov
iret
fucomp
movsb
cmp
or
sarl
lock
push
push
mov
xchg
xlat
loop
xchg
add
xchg
push
lds
repnz
addr16
push
jno
sarl
push
adc
or
xor
add
mov
aas
in
push
divl
xchg
inc
fs
jecxz
sub
push
mov
jmp
cmpsl
mov
xchg
xchg
jnp
xor
in
cld
cmp
cmp
insl
xor
out
sbb
test
pop
inc
lea
xchg
add
mov
fwait
orl
xchg
jl
cli
sbb
outsl
mov
fldt
or
imul
lret
out
dec
xchg
cld
out
mov
dec
sbb
adc
daa
mov
ja
xor
inc
outsl
clc
and
mov
mov
cltd
jl
jmp
fcom
dec
movsb
add
imul
test
sti
fsubrl
mov
imul
mov
sarb
sub
test
in
cwtl
lods
jle
out
jmp
push
xor
xlat
fs
sarl
mov
xlat
mov
hlt
or
popa
xor
into
aam
repz
les
mov
je
ffree
and
mov
std
loope
inc
test
adc
insl
jne
inc
cmp
xchg
cmp
mov
jg
xor
xor
and
push
dec
cli
pushl
repz
cmc
cli
mov
mov
outsb
mov
pop
aas
push
xor
add
pop
sub
ljmp
push
or
mov
je
pop
or
idivl
adc
fidivrl
lea
mov
sbb
push
sub
mov
mov
pop
test
mov
sub
movl
call
outsl
sbb
out
cli
and
cwtl
ret
out
sbb
fs
dec
in
lods
push
leave
fs
icebp
pop
sub
sub
cmpb
sbb
xor
andl
ljmp
or
iret
push
push
lds
imul
aad
push
mov
enter
in
aam
cmpsl
dec
mull
sub
mov
pop
fs
xor
jmp
fldenv
or
ja
insb
int
cltd
js
add
pop
jmp
call
fs
mov
test
xchg
lea
mov
cmp
or
adc
pushf
in
mov
or
shlb
inc
lea
pop
inc
insl
and
stc
ds
mov
inc
in
arpl
test
pop
mov
jge
dec
daa
pushf
cmp
push
roll
cltd
xor
subl
push
cmp
push
fbstp
lods
mov
and
je
pushf
clc
bt
cmp
pusha
pusha
lea
jne
pushf
push
inc
call
cwtl
andb
out
xor
add
cwtl
and
stc
and
sub
in
xchg
shlb
lock
push
cmp
sub
dec
mov
inc
divl
push
lds
not
int
fsubrs
fildll
es
fsts
push
mov
das
push
rcrb
ficoml
jae
adc
add
or
add
push
fldt
adc
pop
sub
push
xlat
xchg
aad
sbb
adc
rcrb
shl
mov
inc
call
daa
outsl
push
sbb
mov
test
cs
mov
test
icebp
lcall
and
sub
leave
fidivl
clc
int
ja
pop
dec
in
adc
pop
push
push
mov
xchg
lock
fisttpll
cwtl
popf
inc
lret
pop
dec
mov
pop
insb
andl
jg
call
lods
stc
xor
bt
cmc
rol
jmp
lea
jbe
push
push
pusha
pusha
lea
jmp
out
jnp
out
xchg
lea
dec
test
xor
aas
iret
xchg
xchg
sub
clc
fnsave
push
jg
push
sbb
in
out
scas
sub
sub
dec
cmpsb
and
jmp
xchg
outsl
adc
cmp
cld
sbb
cmpsb
loop
xchg
lock
stc
cmp
xchg
pusha
aam
pop
xchg
adc
stos
gs
xchg
out
inc
rcr
mov
ljmp
loop
sub
rcrl
push
push
inc
rcrl
pop
lds
adc
pop
add
jae
jg
je
aam
fsubl
loop
push
ja
es
mov
scas
pop
inc
mov
push
aaa
inc
dec
mov
jo
mov
out
arpl
or
push
push
test
push
loope
notb
sbb
mov
lock
loopne
pop
mov
push
movsb
mov
sbb
adc
add
push
jmp
loopne
cs
out
pop
jbe
cmp
jp
sub
cs
sbb
mov
scas
adc
sub
and
adc
mov
mov
inc
mov
addr16
and
inc
repz
mov
out
addr16
insb
sbb
popa
push
mov
pop
push
jns
push
sbb
mov
fisttpl
xor
in
fisubl
jnp
js
out
xor
inc
nop
dec
fcoml
dec
ret
pop
mov
pop
outsb
sub
jno
and
jno
fdiv
xchg
xor
imul
mov
xor
sbb
pop
adc
xchg
pop
outsb
lock
jp
mov
inc
enter
push
addr16
sti
jecxz
aam
or
popf
sub
nop
pop
icebp
adc
pop
inc
xchg
xor
cs
adc
loopne
test
mov
rcrb
push
int
rcr
xchg
push
dec
fldt
dec
cli
mov
ds
jecxz
fnsave
in
in
nop
pop
push
mov
pop
outsb
adc
out
add
cmp
or
sbb
pop
cmp
sbb
cmpsb
xchg
push
and
mov
push
aas
inc
aaa
int
xchg
or
imul
pop
addb
neg
stos
ret
mov
mov
sahf
jmp
xor
mov
nop
loope
addr16
or
daa
mov
sub
clc
shlb
cmp
or
xchg
inc
mov
lahf
scas
push
mov
fwait
sub
dec
test
shr
and
fldcw
fsts
mov
hlt
lods
xor
adc
and
and
in
notl
lahf
lret
mov
sbb
lods
bnd
mov
lcall
pushf
movw
pushf
pushl
ret
shr
push
setg
aaa
daa
push
shr
btc
lea
xor
push
mov
lea
rcr
push
movsbw
add
test
neg
mov
test
call
pusha
lea
ja
call
int3
loope
mov
nop
mov
and
ds
je
push
jle
movsb
les
mov
mov
nop
cmpl
out
and
dec
stos
mov
nop
mov
pop
in
shll
popa
jge
repnz
or
out
das
cltd
jbe
inc
mov
aas
out
cli
push
xor
mov
nop
or
mov
cmpsb
rcrl
cmc
sti
test
pusha
push
jl
repnz
sahf
out
xchg
mov
xchg
sahf
inc
stos
cmp
fisubs
insl
divl
adc
and
inc
pop
mov
adc
ljmp
sub
add
incb
fsubrl
push
pop
or
pop
sub
fcomps
push
adc
imul
mov
pusha
sarl
in
out
fs
ror
lods
jecxz
xchg
xchg
pop
in
mov
pop
out
xchg
pop
addb
nop
jge
push
mov
das
dec
cltd
fidivrs
fisubl
add
add
add
and
add
imul
add
add
add
add
add
test
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
scas
add
sub
add
xchg
add
add
add
inc
dec
mov
data16
test
mov
push
add
enter
and
cld
or
fldcw
and
std
sub
dec
inc
test
jle
push
sbb
les
out
fldt
cmpsb
dec
lds
adc
cwtl
pop
nop
ror
pop
jg
lea
pop
aas
push
dec
xchg
sbb
jmp
movsl
or
mov
inc
iret
stc
bound
mov
shl
mov
out
popa
sub
xchg
out
nop
dec
push
jo
ja
shll
imul
outsl
aam
clc
push
iret
jmp
xchg
sub
mov
or
jne
fcmovnu
lods
adc
dec
fisttpll
pushf
outsl
nop
pop
mov
cmp
dec
imul
jl
lea
je
cld
xchg
lea
push
call
inc
pop
xor
pop
test
nop
idivl
dec
insb
pop
in
xor
shlb
imul
gs
xor
cs
insb
add
add
add
setnp
mov
pushf
xchg
shl
bswap
dec
btr
mov
clc
pushf
test
sub
jmp
mov
rol
sub
shr
bt
shld
mov
cmc
test
call
jmp
loop
outsl
mov
nop
jnp
mov
mov
dec
xor
stos
xor
push
jle
or
lock
cmp
dec
les
shlb
or
rcrb
fwait
sbb
push
mov
cs
mov
and
icebp
fidivs
cltd
pop
mov
push
pop
mov
mov
pusha
or
out
or
pop
and
hlt
sbb
pop
lea
data16
jnp
js
add
push
push
movl
jmp
pushf
inc
jmp
cmpsb
into
jae
out
jg
movsb
adc
and
in
jnp
jl
jmp
std
pop
mov
mov
cmp
sbb
push
das
pop
sarb
sbb
add
movsl
outsl
das
outsl
jbe
jmp
sbb
mov
adc
push
pop
xor
inc
mov
jmp
cld
bound
push
push
shlb
lahf
add
pop
aad
dec
jb
roll
xor
and
scas
cld
adc
xor
cmpsb
inc
adc
adc
out
test
jne
or
insl
xor
mov
mov
std
xchg
or
cmp
ja
test
add
push
push
jmp
pop
imul
sub
add
sbb
jecxz
xchg
les
sub
sub
gs
mov
xor
and
lods
jle
xorb
bound
dec
xchg
xor
inc
scas
xlat
xchg
dec
fsubl
pushf
lea
jae
pusha
cmp
jmp
in
xchg
pop
add
mov
dec
push
loope
add
mov
jne
ret
sahf
incb
cltd
xchg
test
xchg
dec
or
nop
je
push
stos
push
clc
int
sbb
or
dec
xchg
cmp
push
sub
cltd
jp
inc
cmp
xchg
shr
decl
add
rcrl
xchg
std
test
mov
jmp
enter
adc
ret
adc
xor
or
mov
mov
in
fcoms
fidivrl
dec
in
xor
rcrb
nop
push
mov
pusha
loop
lods
mov
xchg
fsubrs
adc
mov
pop
sbb
cld
idivl
adc
pop
jecxz
adc
lahf
mov
rorl
pop
inc
lea
jnp
jmp
clc
dec
xchg
shrd
movb
mov
sbb
shl
shr
sbb
mov
mov
bt
xchg
lea
mov
push
stc
push
clc
sub
mov
mov
movw
rep
jmp
nop
cmp
mov
nop
jmp
vmwrite
into
xchg
ret
xorb
xor
sbb
sbb
orb
mov
popa
jno
repz
cmp
pop
es
out
xor
and
out
mov
adc
sbb
adc
mov
mov
mov
pop
jecxz
mov
fndisi(8087
addr16
xchg
jne
inc
lods
enter
loopne
inc
xchg
movzbl
pushl
popl
setno
bswap
mov
not
movl
lahf
mov
lea
call
imul
stos
add
stc
in
cmp
cmpsb
push
out
das
ljmp
jecxz
scas
fcomps
ss
and
mov
push
cwtl
je
dec
inc
sub
push
jge
xor
push
mov
mov
lcall
cs
pop
rolb
aad
sub
push
jae
arpl
sbb
in
leave
test
sub
shlb
call
cmpl
test
inc
xor
or
sub
lods
mov
and
cmpsb
xchg
or
std
cmp
bound
push
call
or
arpl
js
stos
loop
push
or
add
out
jno
enter
insb
push
jb
aam
mov
lods
data16
pop
jmp
in
cltd
push
aad
add
mov
inc
insb
lea
mov
outsb
mov
scas
pop
idivb
mov
out
stos
dec
inc
in
mov
mov
mov
mov
sbb
out
xchg
and
cmp
push
jmp
cmp
out
daa
inc
dec
add
add
out
and
scas
adc
and
cs
popa
lods
cmp
mov
out
push
mov
pop
xchg
in
adc
scas
jo
jg
fwait
xor
mov
fdivs
sub
dec
mov
adc
push
out
pop
lea
aam
aam
imulb
mov
jmp
out
pop
and
push
sub
xchg
aas
mov
scas
inc
mov
mov
pushl
movzwl
not
lea
pushf
pusha
jmp
jne
ljmp
inc
xor
lds
add
shrb
mov
or
enter
ret
push
jl
leave
jg
xor
mov
adc
fdivrs
lret
xchg
xor
and
adc
inc
nop
dec
push
ss
lret
adc
sbb
mov
mov
insb
jno
movsl
lods
adc
jmp
das
sbb
fwait
mov
flds
cmpsb
lods
out
mov
fsubs
clc
pusha
xor
push
pop
clc
jp
scas
out
xchg
dec
dec
mov
addr16
xchg
jge
adc
sub
loopne
sub
or
js
nop
and
cld
sti
sub
cmp
int
xchg
add
rcrb
dec
fwait
loope
inc
xchg
insl
xchg
jl
and
in
mov
mov
and
jno
jge
dec
xor
out
cs
add
add
out
lods
or
add
icebp
xchg
lods
out
mov
mov
sar
imul
call
aaa
mov
inc
into
push
sbb
pop
mov
mov
jge
adc
popa
jp
push
lods
sub
mov
mov
sbb
pushf
mov
cmp
mov
sbb
int3
sub
pop
mov
add
pop
cmp
lret
sub
mov
sub
push
push
orl
pop
sahf
inc
sub
adc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
or
mov
and
aaa
orl
stos
push
loope
mov
out
jns
pop
adc
loop
cltd
scas
push
movlps
push
mov
subl
or
adc
push
jmp
and
inc
sbb
insb
sbb
dec
stos
add
jae
lods
jl
addr16
sbb
int3
pop
cmpsb
jecxz
fdivrl
push
movsb
inc
out
xchg
std
fcmovnu
lods
pop
add
fcoms
movsb
pop
push
mov
ret
add
out
xchg
sti
add
pop
jg
xchg
lock
sbb
shl
inc
lock
cmpsb
mov
lods
out
aas
fwait
fs
sti
gs
stc
lds
inc
mov
in
out
sub
cmp
xchg
pop
ja
shrb
xor
test
rorl
sahf
mov
dec
xchg
pusha
jle
jecxz
mov
into
std
rcr
or
scas
mov
cmp
push
pop
dec
lret
cmpsb
push
repz
or
and
andb
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
pop
lods
out
sub
pop
add
ret
xchg
cs
in
mov
cld
or
cltd
add
into
gs
loop,pt
jae
cmp
add
fwait
push
call
mov
rcl
push
js
jge
and
loop
and
jmp
dec
jecxz
rcl
out
jnp
dec
and
inc
jnp
add
jae
lcall
mov
pushf
mov
rol
popa
ljmp
call
cmc
sbb
into
stos
xchg
pop
push
sub
data16
cli
xor
or
stos
out
sbb
mov
or
arpl
loopne
and
insb
xchg
sbb
nop
test
push
negl
add
nop
xlat
test
pop
pop
movsl
clc
xor
imul
stos
out
push
mov
pop
ljmp
jae
add
adc
loopne
out
in
pop
adc
mov
stc
xor
movsl
cmp
stos
out
inc
in
sub
lods
cmp
sbb
cmp
add
popa
pop
sub
arpl
cmp
lcall
fwait
mov
xchg
popf
or
notl
imul
cli
out
lret
das
in
ljmp
sti
jg
clc
jne
enter
sets
pusha
adc
dec
loop
xchg
sarl
mov
int3
lret
inc
in
xchg
jnp
call
ljmp
dec
xchg
and
pushf
pushf
rep
pop
bswap
mov
pushf
pushl
lea
jmp
xor
nop
cmp
icebp
sbb
orb
cmpsb
mov
out
js
fldl
inc
mov
add
inc
cmp
or
inc
jge
and
divb
in
divl
rcl
aaa
aaa
dec
cmc
cmp
push
popa
addr16
ljmp
and
insb
int
cmp
pop
je
jmp
and
or
or
cmp
leave
adc
hlt
push
out
les
mov
loop
bt
clc
shl
jmp
pop
pusha
aad
out
loope
inc
jno
inc
rcrb
movsb
or
mov
out
and
pop
repnz
orl
insl
lods
xor
inc
xchg
mov
cmp
dec
sub
push
adc
push
jb
fdivrs
cs
psllw
cwtl
xchg
jno
cwtl
bound
jmp
pop
mov
sbb
call
add
lods
push
rorl
lds
out
cmp
stos
push
cmpsl
xor
mov
std
inc
or
pushf
add
mov
dec
pop
ss
imul
imul
push
cli
lahf
test
nop
stos
jb
data16
jno
les
pop
inc
xor
hlt
and
ss
lds
test
out
test
movsl
push
adc
jge
push
mov
sti
xchg
or
mov
pushf
xor
inc
test
int3
hlt
jo
mov
xchg
xchg
jmp
mov
aas
jmp
mov
popa
adc
fisubs
or
push
mov
adc
scas
ljmp
lock
jmp
pusha
movl
pushf
mov
jmp
push
bswap
test
btr
push
aaa
ror
call
add
cmpsl
out
sar
rcrl
push
cli
jmp
push
testb
in
cld
fldenv
mov
xchg
ret
add
inc
or
insb
dec
dec
adc
js
in
add
sbb
test
stos
xchg
test
jp
das
out
add
pop
mov
data16
mov
mov
xor
xchg
jns
cs
nop
cmp
and
insb
cmc
and
imul
inc
jb
mov
nop
mov
sbb
int3
mov
dec
mov
loopne
push
push
push
cmpsb
scas
into
push
addb
cmp
nop
inc
and
add
ja
pop
mov
addl
outsb
cmp
movsb
mov
dec
adc
add
xchg
sbb
pop
sbb
out
aam
call
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
xchg
incl
and
sub
xor
rcr
jmp
scas
jno
cmpsb
out
insb
out
ds
std
dec
xor
daa
repnz
aad
ja
fcoml
jmp
icebp
xor
lods
imul
push
fidivrs
into
xlat
push
push
lea
cmp
xchg
and
notb
dec
pop
xor
jae
xchg
mov
mov
pop
xchg
adc
sub
pusha
inc
sahf
into
cmp
add
in
outsb
test
sbb
pusha
inc
ret
fldt
out
aad
loop
xchg
incb
test
adc
sub
les
out
xor
mov
or
sub
adc
sub
insb
sahf
imul
inc
inc
loopne,pn
mov
sbb
pop
test
inc
int3
inc
pop
ficoml
dec
dec
ficoml
in
std
pop
cwtl
mov
mov
arpl
jb
pushf
iret
out
and
pop
sbb
and
int
and
out
xchg
popf
add
push
pop
jle
cmc
jbe
aam
cwtl
pop
dec
cmp
xchg
mov
call
sti
mov
mov
aas
stos
xchg
pusha
stos
hlt
mov
out
push
imul
loop
sbb
xor
and
mov
nop
aas
addr16
cmp
fildll
adc
jle
push
lahf
mov
cmp
cmc
into
cld
and
sub
es
sbb
or
adc
sub
mov
gs
cs
cmp
mov
push
lret
sahf
ret
ljmp
orl
movsl
out
popa
popf
es
mov
adc
cmp
pop
movsl
out
dec
mov
adc
dec
xchg
cld
sub
cmp
xchg
cmp
pop
iret
int3
inc
xchg
cli
cmp
mov
sbb
dec
shll
ret
xchg
cld
and
mov
roll
mull
adc
pop
mov
mov
out
jl
sahf
in
notb
iret
and
xor
mulb
jp
and
adc
mov
cmp
xor
inc
in
fistpll
jle
ds
hlt
xchg
sub
sbbb
sbb
mov
daa
mov
add
aad
les
int
cmpsb
push
add
fdivrl
jne
ja
scas
push
sti
inc
sub
aaa
mov
xchg
sbb
nop
sbb
push
push
inc
lods
mov
push
subl
jecxz
fistpll
jl
pop
mov
push
test
testb
dec
pop
mov
lcall
sahf
cmp
dec
and
stos
inc
pop
inc
xchg
fsubp
sbb
in
inc
push
jle
mov
loope
icebp
add
stc
mov
and
sub
add
sub
jl
leave
inc
sarb
dec
sub
fs
jl
pushf
lea
jae
push
pushf
lea
jne
pusha
jmp
in
mov
out
sarb
movsb
sbb
mov
fcomi
roll
sub
push
sub
insl
test
inc
dec
out
insb
aad
cli
jbe
inc
push
push
sub
lret
lods
push
stos
adcl
push
movsb
loop
push
cli
mov
sub
shll
outsl
mov
setns
popa
xchg
push
mov
js
jo
adc
roll
lods
stc
shl
push
fwait
mov
mov
idivl
jl
mov
xor
mov
inc
rcrb
mov
popa
rcrl
int3
mov
dec
sarb
xor
ss
xchg
dec
out
lds
inc
dec
xchg
dec
in
mov
notb
loope
xchg
mov
call
sahf
std
in
fwait
gs
mov
mov
in
lds
mov
ret
lret
add
mov
xchg
push
sub
cmpsl
pop
cmp
mov
or
mov
sub
fsubrl
pushf
inc
push
and
clc
xor
adc
mov
pop
enter
enter
and
negl
and
mov
jae
sub
leave
bound
in
xchg
or
jns
imul
ret
mov
sub
xchg
int
inc
sbb
dec
and
mov
lcall
xor
pusha
cmpsb
stos
repz
andb
test
dec
pushf
movsb
adc
popa
fs
imul
add
xor
movl
je
push
ret
call
pusha
jmp
mov
push
movl
pusha
push
pushl
lea
jmp
push
pushl
popl
mov
pushl
ret
pushf
add
adc
mov
pusha
cmpb
pushf
push
push
call
jmp
mov
push
test
clc
bt
repnz
pushf
push
pushf
mov
lea
jne
lahf
movsbw
movb
pusha
mov
lea
lea
mov
movb
mov
jmp
mov
movw
pushf
pushl
pushl
ret
call
hlt
aaa
mov
flds
xchg
and
mov
sub
cs
mov
jge
and
addr16
test
iret
mov
and
xchg
pop
js
iret
jmp
iret
sbb
je
or
inc
aad
push
or
jmp
test
push
xor
pop
loop
cmpsl
aas
dec
aad
inc
xor
or
out
stos
cwtl
sub
mov
aad
dec
inc
xor
das
test
sub
push
out
cld
inc
mov
mov
pop
jg
insl
rcl
js
and
mov
adc
push
sbb
xor
adc
add
int
ret
or
cmpsl
das
cmp
mov
push
mov
test
dec
push
lock
out
sub
mov
push
sub
adc
and
cs
and
je
movsl
pushf
mov
adcl
and
scas
pop
loope
pop
rcr
pop
push
std
sub
dec
and
mov
ret
insb
testl
mov
repnz
mov
jl
push
mov
outsl
pop
add
pop
inc
iret
sbb
push
sbb
xor
pop
cli
add
xor
sbb
test
movsb
loopne
js
jnp
subl
push
pop
test
pop
insb
sub
jmp
ja
std
jmp
sbb
jnp
ret
inc
mov
incb
mov
imul
je
pop
cmp
inc
lahf
stc
pusha
popf
cmp
imul
rol
mov
and
mov
dec
lods
xchg
es
lds
dec
cmp
loope
outsb
xor
and
insb
xor
es
push
in
sbb
decl
jae
lcall
adc
jmp
movw
cmpb
movb
pusha
lea
jne
test
not
test
sub
lahf
mov
shr
not
sub
rcl
add
xor
setl
dec
mov
cmp
test
jmp
jb
adc
out
and
inc
lock
out
cld
xchg
sbb
cmc
clc
cmp
adc
test
sub
sub
sahf
lahf
xor
jg
test
pop
push
outsb
movsb
mov
mov
in
xor
adc
stos
mov
ret
xor
inc
cld
mov
stc
add
pop
xchg
mov
leave
dec
outsl
lret
dec
in
ficompl
cmp
loop
push
dec
or
pushf
gs
dec
pop
jne
das
negl
in
push
test
out
in
out
xor
test
clc
cmc
sub
pushf
cmc
clc
pushl
popl
bt
cmp
push
call
jns
fwait
popf
out
cmpsl
inc
mov
inc
in
mull
xchg
and
push
sti
repnz
insl
adc
cmp
add
xor
xor
adc
out
cmpsb
xchg
popa
xlat
push
rorb
cmp
mov
push
rorl
dec
push
scas
pop
shrb
jbe
mov
add
stos
pop
push
xchg
cmp
jecxz
push
aaa
mov
xor
sar
testb
mov
sub
jle
pop
loopne
cmc
es
adc
inc
out
filds
sbb
xor
and
mov
add
add
stc
cmpsl
pop
das
sahf
sbb
das
pop
pop
inc
sbb
and
or
pop
aas
rorb
daa
cld
ds
push
int3
mov
and
aad
leave
adc
jns
add
cli
dec
sub
adc
sub
out
popf
add
je
lahf
aaa
sbbb
es
jmp
pop
stos
dec
aaa
xchg
fistpll
loop
and
popa
and
test
jmp
mov
mov
cmp
test
push
hlt
cmpsl
add
pop
sbb
inc
shrb
mov
mov
jmp
pop
es
lods
jl
imul
mov
push
fcomps
pop
out
leave
xlat
xor
push
pop
cmp
stos
pop
in
out
leave
push
jb
xlat
sahf
jle
movsb
push
mov
push
sbbl
fdivrl
mov
cltd
test
xchg
mov
leave
test
xchg
imul
sub
cmp
mov
dec
sbb
jo
mov
pop
mov
rorl
out
in
test
dec
pop
cmpl
push
dec
add
cmp
xor
mov
jo
adc
jecxz
jl
pusha
ss
ficoml
mov
mov
in
sbb
sti
sbb
aam
and
repnz
sub
mov
out
out
xor
pop
gs
test
arpl
pop
nop
fisubl
push
mov
rolb
lock
in
js
adc
push
cmpsl
add
dec
inc
movb
dec
add
std
clc
inc
adc
dec
xlat
jb
dec
repnz
clc
xchg
insl
sahf
mov
pop
jo
test
dec
lcall
nop
shlb
arpl
frndint
or
iret
pop
insl
aad
popf
fistl
inc
out
cwtl
and
xchg
testb
push
push
inc
cmp
cwtl
loop
into
jl
out
mov
dec
push
mov
cmpsb
into
push
ljmp
insb
or
sub
dec
adc
arpl
test
loope
pop
and
lods
ja
imul
pop
pop
jg
insl
pop
or
and
mov
mov
aas
enter
repnz
sbbl
in
sahf
in
movsb
mov
inc
mov
inc
jne
ss
ss
call
fidivrs
shl
inc
add
adc
or
iret
int
loope
sarl
inc
enterw
mov
aam
rcrl
rorb
pop
pop
int
xchg
out
in
push
fisttps
rcrb
fidivrs
add
lret
xchg
in
push
inc
dec
push
icebp
push
push
aaa
cmpsb
mov
mov
hlt
or
mov
aaa
mov
mov
mov
add
jmp
sub
out
stos
rorl
mov
imul
dec
sbb
sub
jo
scas
pushf
bound
insl
dec
cmc
mov
mov
sbb
push
push
push
lods
xchg
add
xor
in
pop
and
or
test
popf
mov
test
mov
add
cltd
lret
adc
mov
adc
jge
aad
popf
out
test
repnz
inc
jns
inc
movl
dec
test
lods
movsl
out
lret
sti
testb
pop
cli
test
mov
pop
jno
xchg
mov
test
sub
add
pop
cmp
dec
xchg
cmp
ret
mov
push
and
pop
mov
rorb
push
sbb
arpl
jno
mov
xchg
ret
int3
dec
iret
mov
leave
test
mov
and
iret
sub
lcall
cmp
push
lock
lahf
ljmp
lret
push
push
clc
lret
cmc
or
and
cmp
fldt
mov
adc
xchg
fisubrl
hlt
jge
jecxz
rorl
cmpl
xchg
loope
mov
cmpl
xlat
adc
dec
in
sbb
pop
jne
pop
fiadds
mov
andl
stc
inc
in
in
fisubl
pop
scas
rcrl
popa
pop
add
imul
push
jns
pop
stos
stc
lahf
xchg
div
es
add
dec
fcoms
std
lret
scas
shrl
in
aaa
sub
jo
ss
call
sub
call
dec
jne
xor
cltd
xchg
lods
loope
cmpsl
cmp
mov
xchg
mov
data16
xchg
bound
xorl
pop
inc
adc
and
push
sub
or
cmp
dec
mov
test
sbb
cmc
inc
sub
or
scas
push
xor
xchg
ds
or
and
stc
paddsb
cwtl
int3
xor
aas
out
xchg
fcomip
push
xchg
mov
sub
pushf
adc
daa
xchg
jb
popf
jmp
xor
lock
jae
imul
into
or
mov
cs
and
loop
xchg
fld
test
add
xor
test
add
push
je
pop
aaa
out
lcall
hlt
jl
and
mov
sub
das
xbegin
movsl
in
mov
das
push
fidivl
dec
jno
lcall
jo
hlt
movsl
xor
push
mov
das
sub
inc
in
pop
jae
dec
pop
xchg
stos
faddl
xor
pop
cmp
insl
fldenv
cmp
scas
ja
in
sbb
arpl
cmp
fldenv
sahf
push
dec
loopne
xor
mov
jns
loop
mov
shll
cmpsl
imul
daa
pop
adc
push
and
lcall
xchg
inc
jns
pop
imul
xchg
out
scas
jne
adc
cmpsl
add
loope
loopne
movsb
mov
sub
cmpsb
je
dec
fdivrl
cmpb
adc
sbb
xor
push
jbe
lods
dec
sbb
xchg
fsubrl
sbb
fcoms
pop
sbb
mov
dec
inc
ds
frstor
in
xorb
mov
jecxz
pop
push
and
cmovl
inc
cwtl
jbe
cmp
push
pop
gs
pop
shlb
pop
in
in
in
adc
shll
pop
ja
sahf
dec
mov
add
lods
inc
jne
jae
bound
or
cs
decl
setle
jp
adc
sbb
fwait
bound
pusha
mov
dec
push
xchg
sbb
fwait
push
inc
or
jg
sti
enter
mov
insl
lea
in
dec
adc
shll
pop
push
inc
adc
jmp
nop
mov
jle
mov
add
gs
xor
xor
sbb
adc
dec
dec
jge
adc
imul
popf
fistps
mov
xchg
fs
and
int3
movsb
mov
mov
cmp
push
jge
adc
add
fidivl
push
fnstenv
out
scas
mov
in
test
ror
int3
addr16
pop
leave
leave
in
or
mov
cmp
sti
in
stc
xor
inc
cmp
push
and
xchg
fsubrl
mov
push
lahf
and
jg
fiadds
ret
dec
dec
lock
lea
push
mov
sbb
pop
js
jp
inc
aas
mov
pop
xchg
adc
stos
sub
dec
push
sub
popl
mov
mov
dec
xlat
fdivrp
loope
pop
shrb
movsb
movsb
cwtl
adc
mov
fs
lods
cmp
sbb
arpl
ljmp
pop
cmpsl
mov
add
loope
pop
insl
in
imul
sub
inc
jl
or
jmp
inc
sub
iret
mov
xor
lock
cmpsb
testb
fcom
add
fdivrl
shrl
into
jns
fidivl
adc
sbb
or
and
movsb
mov
inc
int
xchg
stos
fcoml
inc
adc
jae
mov
fisubrs
xlat
jb
popa
cld
aam
es
ror
jae
push
ja
push
push
outsl
dec
xchg
pop
lds
cltd
cmc
jo
js
jge
sti
mov
repnz
ror
adc
std
and
sub
dec
imul
icebp
xlat
addl
aas
mov
lods
std
movb
pop
sahf
cmpsb
aaa
jae
in
adc
ret
fucom
loope
sti
mov
xchg
xor
inc
jnp
test
jge
jle
add
hlt
or
call
or
jle
mov
clc
mov
arpl
test
inc
lret
notb
pop
call
test
ret
int3
pushf
inc
pushf
mov
imul
adc
sbb
in
ficoms
sbb
cld
adc
idivb
lds
mov
add
test
or
das
movsb
imul
jo
sti
fcmovu
mov
inc
loopne
and
dec
fdivr
fidivrs
push
jmp
inc
add
ficoml
fisttpll
and
add
int3
xchg
push
popf
jmp
jno
subl
les
xchg
xor
jo
loopne
test
xchg
pop
xor
sub
add
dec
int
adc
adc
dec
jl
jnp
or
ret
pop
cmpsb
aad
push
mov
adc
iret
test
popa
andl
ret
daa
sub
test
into
pop
test
mov
xchg
lock
clc
inc
jge
add
mov
cwtl
mov
xchg
frstor
inc
int
mov
pop
mov
fcoms
cwtl
pop
jmp
mov
pop
push
xor
call
sbb
ret
mov
stos
daa
ljmp
fiaddl
mov
pop
test
pop
add
fildl
or
lahf
scas
sbb
jbe
lret
add
mov
movsb
cmpsl
adcb
call
xchg
xor
jne
aas
fwait
movsl
repz
lcall
pushl
jo
cmp
jge
xor
inc
ds
shlb
pushf
clc
dec
xorl
fcom
iret
jbe
pop
adc
inc
nop
push
inc
cmp
out
scas
loop
mov
fisubl
cltd
test
divb
dec
xchg
cmp
ljmp
dec
jbe
and
ds
jbe
imul
and
std
mov
xor
daa
ret
test
fcom
push
lea
inc
pop
in
testb
jle
push
and
nop
fiadds
ret
adc
roll
jl
push
in
or
inc
and
in
std
in
jecxz
xor
mov
push
cld
cmp
imul
adc
bound
dec
lds
jno
in
add
xchg
xor
jbe
stos
or
mov
fistl
adc
adc
stos
in
sub
loope
lods
pushf
daa
arpl
ret
xor
xchg
xchg
adc
lea
pop
sbb
addr16
movsl
js
rcl
sbb
hlt
jo
mov
adc
pop
pop
dec
jecxz
mov
push
cs
orb
inc
into
out
dec
and
dec
and
jp
mov
lea
mov
xor
dec
scas
inc
inc
inc
add
shrl
and
addr16
add
leave
inc
daa
xchg
jle
stc
jecxz
enter
or
xor
cmpl
lcall
je
arpl
popf
stc
dec
mov
fwait
shrl
or
pop
pop
and
jb
outsl
mov
and
jbe
scas
ds
jge
sub
cld
xchg
fistl
loope
dec
leave
inc
imul
mov
and
and
ror
fmulp
push
fisubrs
mov
fildll
mov
in
pop
jae
lret
repz
adc
ljmp
mov
inc
jl
sbb
inc
into
dec
push
bound
out
pusha
mov
and
cmpl
loope
mov
xor
fidivs
mov
add
pop
ret
xor
sbb
movsl
jge
iret
aas
add
mov
test
xchg
pushf
mov
popf
or
jno
mov
pusha
inc
sub
xor
mov
mov
mov
sub
lret
cmc
div
push
cmp
testb
mov
pop
xlat
push
push
mov
cmp
lods
sti
fwait
sbb
cmpsb
jle
subb
cltd
in
or
lahf
cmpsl
mov
and
or
cltd
and
lods
test
cwtl
xor
add
movsl
sbb
in
push
iret
mov
fisubrs
clc
cld
test
xor
inc
lds
inc
js
test
in
cmp
lods
mov
ja
cwtl
mov
setp
cmc
or
push
das
stc
mov
pop
loopne
cmc
es
test
fwait
push
mov
sub
and
jp
inc
dec
into
pop
dec
stos
es
cmpsl
inc
lret
and
jno
dec
stos
xor
dec
les
mov
das
loop
test
dec
push
fldl
sub
mov
and
aad
ljmp
aaa
aam
sbb
adc
inc
jge
les
adc
fsts
sahf
push
cli
ret
stos
addr16
insl
int
jae
dec
repz
fmull
ficoms
xor
shll
mov
sbb
orl
ret
out
sbb
mov
pop
sub
cmpsb
push
loope
mov
loope
jmp
xchg
mov
xor
inc
xchg
push
pop
inc
sbb
xor
ss
rorb
mov
cmovs
sbb
aam
cmp
add
stos
arpl
push
outsl
or
fwait
push
push
lods
xor
test
ljmp
jge
mov
xchg
movsl
loope
js
inc
insl
pushf
xchg
cmpsb
jns
loopne
hlt
in
xor
cmp
sub
add
pop
outsb
mov
sub
push
js
fsubs
xor
in
add
int3
jmp
mov
push
pop
idivb
cmp
int
imul
retw
lret
pop
mov
sub
fstpt
les
and
sarl
jg
add
xor
rcl
add
push
xchg
clc
dec
fdivs
xchg
pushf
fwait
push
out
or
dec
test
jae
adc
mov
jne
lea
les
inc
sbb
push
add
popf
or
lods
dec
lods
pushf
lahf
sbb
seta
lds
and
shlb
cmpsb
mov
sbbl
add
int3
inc
add
fsubrs
test
inc
loop
cmpsl
sarb
daa
pop
jecxz
mov
push
add
negb
cs
std
or
ja
movsl
push
xchg
cmc
test
jns
leave
jns
insb
mov
or
adc
lea
sbb
sbb
pop
addr16
add
aad
ds
or
cwtl
jo
ret
push
test
repnz
mov
xchg
and
mov
xor
fildll
jns
out
ljmp
ljmp
pop
lock
xor
sbb
inc
push
push
mov
sbb
into
mov
pop
pop
orb
insb
and
sarl
data16
and
fs
mov
push
mov
pop
fs
mov
test
inc
cmp
dec
mov
ds
and
lahf
out
test
adc
and
test
in
sub
mov
leave
mov
int
mov
jb,pn
add
pop
popf
shlb
fucomip
das
sub
mov
and
dec
sbb
sbb
add
jecxz
pop
repz
xor
or
inc
xor
cmp
mov
jl
fadds
into
dec
push
bound
fsubr
dec
mov
or
aaa
insb
or
mov
testb
adc
orl
gs
call
pop
inc
hlt
std
pop
cwtl
add
or
xorl
dec
subl
jne
mov
mov
jne
fidivl
sbb
jecxz
mov
fs
inc
dec
test
sbb
or
xchg
or
push
popf
lods
in
lret
pop
hlt
pop
push
pop
clc
ret
sar
ficoml
cwtl
pop
popa
popf
pop
inc
divl
and
aaa
lods
test
ret
push
sahf
jmp
adc
pushl
repnz
mov
mov
out
out
cld
gs
dec
movsb
fldcw
mov
decb
pusha
sti
inc
aad
mov
mov
fildll
mov
fcoms
push
mov
int
xor
or
fildll
xor
movsl
add
pop
test
clc
fcoms
xor
adc
mov
push
movb
scas
dec
xchg
popa
frstor
adc
jne
cli
xchg
mov
clc
gs
mov
cmp
mov
cmp
lods
mov
enter
das
test
inc
mov
aam
ficoml
and
mov
pop
ret
pop
jnp
insb
mov
dec
push
out
insb
addb
mov
xchg
inc
test
notl
push
mov
divl
fiaddl
mov
push
push
xchg
cmpsb
enter
sub
ret
pop
pop
xor
sti
sub
sub
xor
aad
loopne
add
push
push
int
and
mov
add
inc
fisttpll
cltd
mov
mov
lock
push
pop
in
es
sahf
sahf
push
pushf
fadds
jo
test
jb
pop
hlt
jg
bound
xchg
aad
nop/reserved
hlt
aas
notl
xchg
lret
cmc
pop
testl
sbb
leave
in
imul
leave
pusha
pop
and
pusha
into
inc
ret
jmp
orl
sbb
ss
pop
rep
outsb
aaa
shrb
sbb
out
inc
insb
inc
rcrb
loopne
cmpsb
pop
push
inc
xor
hlt
or
cmc
daa
and
jle
aad
aad
out
push
cmpsl
and
mov
aas
jo
push
roll
mov
mov
je
jns
xchg
jns
mov
and
push
cltd
xchg
es
sbb
xlat
shll
bound
mov
jg
orb
inc
adc
xchg
out
clc
inc
inc
sbb
inc
or
mov
imulb
es
pop
andb
arpl
mov
iret
orl
pop
faddl
pop
xchg
in
stos
cmc
inc
sti
mov
lods
jmp
adc
push
pop
sub
xchg
stc
inc
cmpsl
mov
movsb
dec
mov
xchg
push
ljmp
adcl
cwtl
inc
cmpsb
mov
jg
fsubl
mov
rorb
aad
jae
insl
jmp
pop
jns
aas
int
fldenv
test
add
pop
popf
shlb
mov
es
xor
push
subb
iret
pop
popa
xor
cld
insb
cmp
rcrl
mov
insb
std
mov
rclb
pop
cli
imul
mov
dec
ljmp
mov
ljmp
cmpsb
mov
jecxz
pop
and
or
test
out
je
sbb
loope
xchg
mov
pop
or
or
jmp
mov
xchg
jge
pop
sbb
mov
orl
out
mov
ja
and
and
test
stc
cltd
pop
je
repz
lea
inc
mov
scas
dec
repz
insb
pop
cmpsb
or
push
and
xchg
jb
rcrl
push
sub
push
aaa
mov
dec
sbb
add
gs
pop
psubsb
cltd
push
sbb
aad
and
pop
sti
push
orb
xchg
or
or
testb
adc
test
in
adc
movsb
inc
jmp
fcmovnbe
fwait
int3
lcall
xorl
inc
nop
pop
add
mov
decl
mov
aam
or
push
mov
movsb
lcall
mov
movsb
pop
loopne
xor
add
test
dec
mov
rcrl
aas
int
rol
shll
rcl
lret
nop
imul
lret
je
insb
aam
addr16
popf
mov
mov
pushf
aas
or
cmp
dec
leave
xchg
outsl
iret
rorl
movsb
and
sbb
dec
adc
test
lahf
xchg
and
cmp
ja
cwtl
cmpsl
leave
push
rcr
jbe
or
mov
leave
sbb
xchg
jae
cmp
shlb
movsb
mov
out
mov
shlb
pop
rcrl
mov
fnstenv
push
ficompl
pop
cwtl
and
jbe
rcrl
sbbb
leave
jle
ss
call
or
lock
mov
pop
push
lahf
inc
xor
push
cmp
cwtl
jo
pop
imul
and
test
bound
sarl
mov
pop
cmpl
dec
jmp
cmp
stc
cmp
xor
sbbl
inc
push
push
flds
ljmp
iret
leave
pop
sbb
cltd
push
pop
enter
loope
xor
inc
adc
jns
jb
dec
push
repz
fisttps
test
cltd
movsb
jecxz
lcall
movsl
outsb
imul
mov
inc
add
sub
scas
push
sub
add
dec
dec
push
movsl
cltd
mov
jge
adc
stos
or
jne
out
cmpb
std
out
mov
xchg
in
enter
in
sub
adc
push
movsl
cltd
sahf
test
xchg
dec
pop
lret
mov
jl
jmp
sbb
mov
lcall
movsl
add
and
nop
add
sbb
scas
stc
in
cwtl
mov
cmp
pop
lcall
or
clc
mov
es
cmp
or
or
call
test
push
jns
lcall
pop
adc
add
cmp
adc
popf
sbb
or
inc
add
dec
xchg
sub
ret
mov
adc
test
add
or
inc
in
int
xor
nop
pop
out
xor
mov
add
adc
lea
add
popl
dec
mov
dec
hlt
lahf
mov
cmp
jo
pop
test
popf
pop
movsl
movsb
push
in
jge
fisttps
jno
mov
scas
fnstenv
test
xor
push
and
xor
push
aam
int3
int3
bswap
xorl
fsubrs
repnz
in
xorl
xor
outsb
jae
mov
and
outsl
inc
pop
jmp
test
setnp
mov
inc
push
call
add
inc
gs
insb
imul
add
and
std
flds
sbb
push
pop
xchg
and
gs
and
and
lods
fsub
dec
or
and
adc
push
mov
call
cltd
and
adc
pop
mov
iret
sub
sti
jns
pop
out
jmp
dec
adc
imul
incl
movsb
in
and
sub
push
lahf
insl
adc
loopne
or
adc
loop
mov
out
mov
dec
and
call
lock
out
mov
mov
mov
xchg
lods
inc
jne
sbb
out
or
push
into
mov
jno
add
movsb
gs
sub
test
mov
outsb
ret
adc
test
sub
push
aam
adc
iret
jmp
mov
and
push
icebp
dec
aaa
je
push
xor
andl
lahf
push
push
xorb
pop
jp
or
addr16
gs
icebp
dec
nop
scas
push
pushf
add
mov
pop
fs
jo
xchg
jae
push
and
or
add
mov
lcall
xchg
popf
lds
fcompl
movzbl
pop
bswap
pop
lea
pop
push
mov
jmp
adc
and
push
dec
stc
loop
cmp
outsl
pop
and
and
push
adc
int
iret
je
xor
inc
orl
loopne
cmp
lea
js
add
insl
add
aad
xor
rcrl
aam
adc
repz
mov
sub
mov
inc
jbe
ds
adc
cmp
add
enter
aaa
mov
and
pop
pop
repz
xor
adc
subl
add
jl
in
addr16
mov
jae
jns
pop
out
push
testl
sub
jno
cmpsb
add
rcr
loope
outsl
and
pushl
jg
sub
loopne
xor
sub
sub
push
jno
mov
movsl
push
and
icebp
and
mov
rorl
mov
add
in
jb
out
repz
jo
adc
lret
push
ret
and
iret
mov
orl
sub
sub
loopne
insl
cmp
xchg
scas
jne
dec
push
pushf
js
inc
cs
incb
stc
or
bswap
jbe
enter
and
push
aas
out
lret
sti
or
push
int
scas
push
out
es
mov
mov
outsb
mov
or
lods
adc
push
fs
or
add
mov
push
in
sarl
add
push
shlb
adc
and
test
dec
sbb
in
mov
add
cltd
pop
das
in
lods
pop
scas
and
out
mov
pop
lds
and
pop
lcall
xchg
nop
das
clc
push
mov
xchg
or
xorl
mov
inc
mov
cmp
cmpsl
std
dec
in
cmp
push
mov
icebp
xchg
imul
push
xor
and
cmpsl
ja
and
mov
dec
in
push
cwtl
dec
inc
scas
mov
mov
add
push
pop
pop
mov
xor
and
or
repnz
xchg
cli
add
sbb
scas
ja
xor
addr16
enter
cwtl
xchg
or
xchg
pop
scas
cmp
ss
mov
add
jno
sbb
clc
idivb
pop
loope
aas
int
mov
js
sub
and
mov
dec
notl
mov
popf
xor
inc
mov
fdivs
and
std
push
jmp
arpl
das
xlat
jl
push
cwtl
popf
fs
mov
inc
rolb
bound
and
push
in
push
subb
jmp
les
imul
cmpsb
push
push
fs
xchg
cmc
add
sub
push
xchg
andb
movsb
xchg
jp
pop
mov
adc
mov
mov
ficomps
sub
push
idivl
movsb
int3
mov
sahf
push
sub
popa
lods
xor
insl
sub
jo
fs
ret
pushf
movl
jmp
pusha
movl
push
push
movb
pushl
movl
push
push
push
pushl
lea
jmp
sub
jp
out
xchg
or
fisttps
lahf
mov
ror
in
push
test
xchg
fcompp
gs
sbb
xchg
cmp
mov
in
or
jbe
loop
cmpsb
inc
cmpsl
movsl
aaa
sbbl
pop
clc
imul
push
xchg
lods
add
push
outsb
jle
adc
xchg
cmp
xor
std
or
jp
jb
add
dec
xchg
das
lods
cmp
xorl
push
scas
lods
pop
pop
add
js
pop
int
flds
outsb
push
lcall
hlt
add
jge
nop
xchg
outsb
sbb
subl
dec
js
int3
pushf
add
insb
sbb
push
loope
out
test
sbb
mov
jle
xchg
lahf
cmp
adc
loopne
je
ss
xchg
lahf
sbb
fsincos
je
pusha
sbb
js
addr16
sub
rorl
insl
js
sti
movsl
ss
movsl
xlat
adc
outsb
push
cld
inc
push
push
jl
or
jae
sub
sbb
adc
imul
movsb
nop
pop
add
mov
repnz
movntps
inc
or
push
cli
dec
sbb
xchg
movsl
dec
push
lahf
add
movsl
and
movsl
divb
in
sbb
cmpsb
xchg
mov
stc
xor
mov
out
mov
mov
cmpsb
insl
adc
xor
mov
addr16
je
push
pushf
mov
jmp
test
out
movsb
mov
adc
or
xor
mov
or
push
clc
mov
fmuls
popf
push
addr16
mov
sar
push
divl
aaa
test
insb
mov
sub
in
jg
loop
push
cwtl
and
decl
loopne
je
idivl
notb
fsubrl
loop
mov
negl
xchg
pop
mov
dec
cwtl
mov
frstor
jae
sar
fisttpl
lea
movsl
dec
jl
nop
push
xchg
fsubl
cltd
test
inc
scas
fisttpl
push
call
pop
gs
in
popf
bound
xor
xchg
inc
ud2
pop
adc
push
rorb
pop
add
or
cmp
ret
mov
xchg
and
push
mov
inc
cwtl
orb
sbb
sbb
xor
add
rorl
mov
jno
sub
cmpsl
jg
sub
ret
mov
sbb
dec
daa
sub
sub
cmp
repz
lods
xor
aad
add
mov
mov
popa
jnp
nop
insl
test
pushf
movsl
adc
mov
loope
mov
subl
mov
jbe
fstps
inc
mov
jae
adc
push
inc
push
fisubl
mov
xor
fsts
sub
jl
push
mov
orb
mov
xlat
push
push
or
fcmovnu
adc
cmp
jg
sub
into
push
in
imul
adc
pop
repz
in
cmp
outsl
mov
fs
pop
jge
push
pop
notb
fcompl
add
mov
lcall
pusha
or
movb
movb
push
lea
jne
not
push
mov
movl
jmp
dec
xchg
cmpb
mov
mov
imul
ss
test
mov
xchg
jp
jno
setno
sub
xchg
mov
stos
xor
jns
fucom
mov
hlt
dec
cld
daa
adc
mov
jb
xchg
sbb
lret
push
cld
xchg
xor
xor
sti
iret
or
mov
ret
push
pushf
bound
out
pop
xor
xchg
stos
jp
jp
nop
shrl
fs
subl
lock
or
js
sbb
mov
das
into
cmp
lock
das
pop
arpl
dec
test
cs
or
pop
jae
and
xlat
mov
add
or
popa
mov
sbb
notb
bound
notb
and
in
mov
dec
jno
fmul
push
and
sti
xor
pop
xchg
and
call
sbb
xchg
sti
xor
sbb
test
xchg
jnp
push
dec
inc
add
cli
dec
shr
jl
push
jmp
nop
in
push
sbb
adc
fstpt
test
and
jns
nop
mov
test
sub
sub
repnz
and
out
mov
test
enter
out
mov
out
sahf
mov
repnz
xlat
xor
xorl
fdivrp
jp
sub
push
push
pop
test
push
cli
sbb
and
ret
aas
rol
jle
push
outsl
mov
outsb
or
and
adc
movsb
scas
inc
push
lea
flds
jl
inc
cltd
mov
and
les
adc
add
xchg
inc
and
movsl
push
testl
xor
pop
fadds
lret
jae
jg
or
pop
xchg
dec
jp
in
pop
movsb
lret
js
add
loop
mov
pushf
pusha
lea
jmp
pushf
pushf
pusha
cmc
sub
movw
call
push
movb
pusha
movl
pushf
jmp
pushl
popl
pushf
pushf
pushl
ret
movb
cwtl
cwtl
pusha
lea
mov
movsbw
lea
pushf
movl
call
cmp
push
jmp
jp
xchg
int
in
js
nop
xchg
rcr
bndldx
jle
push
or
icebp
sub
inc
adc
xor
jns
nop
sti
addr16
int
add
lahf
unpcklps
sub
xchg
int3
add
xchg
jg
xlat
push
inc
movb
pushf
lea
jmp
test
nop
ret
rcrb
xchg
pop
jmp
mov
jg
and
xor
jb
inc
bound
fidivl
lods
movsb
test
clc
dec
lahf
enter
jl
jo
in
xchg
sub
and
pop
xchg
sub
sbb
fsubl
loop
rorb
pop
and
cmp
cmc
mov
push
std
call
and
cmpsl
lods
xchg
outsl
loopne
add
js
add
int
fidivrl
repz
ret
mov
jb
test
cmc
bt
cmpb
pushf
lea
jmp
cmp
leave
ja
nop
aad
mov
jb
inc
rcrb
lock
jmp
inc
xor
pop
add
shlb
sbb
mov
loop
and
in
mov
xchg
pop
fstl
and
push
push
cmp
mov
ret
ljmp
push
repnz
xchg
shll
cmp
int
xchg
and
push
repnz
mov
inc
arpl
add
cs
cli
aad
mov
mov
pop
add
pushl
nop
or
xor
inc
push
popf
es
jnp
push
fwait
cmc
sbbb
gs
out
ret
adc
xor
sub
cmp
fcmovbe
pop
loope
xchg
adc
pop
addl
out
mov
dec
gs
mov
outsb
inc
fsubl
pop
jae
hlt
mov
fisttpl
icebp
pop
cltd
enter
scas
mov
mov
sbb
inc
popa
rcll
cmp
aas
movsb
jmp
pop
jne
pop
repnz
sbb
mov
xchg
sahf
push
push
pop
mov
adc
in
mov
adc
cmp
or
lretw
sbb
lret
and
loopne
mov
negl
jne
insb
in
pop
repnz
pop
cwtl
push
xchg
rorl
or
loope
and
xchg
add
test
out
repz
repz
call
test
push
and
sbb
ficoml
jno
inc
inc
jg
xchg
adc
lret
jg
int3
rcrb
dec
xchg
lahf
cli
imul
popa
gs
jb
popa
jns
gs
inc
outsl
jne
fs
pop
push
jbe
nop
sbb
mov
arpl
push
push
outsb
fstpt
in
sub
and
cmc
fisttps
mov
pop
or
mov
sub
jl
sub
push
shll
lcall
mov
xchg
xchg
mov
daa
push
into
lods
in
das
and
pusha
outsl
iret
fs
adc
adc
mov
rcrb
lea
mov
xor
xor
or
pop
xchg
sar
mov
inc
test
test
cmc
add
jne
out
loope
call
inc
add
clc
xchg
sbb
shl
mov
shld
shld
sbb
stc
add
mov
or
sub
shr
movl
add
bts
mov
sub
pushf
cmp
pushf
pushf
lea
jbe
bt
pushf
xchg
movsbw
sub
ror
not
or
ror
mov
add
xor
call
and
mov
or
mov
push
sbb
ds
mov
out
pop
sub
rclb
dec
test
and
test
add
add
or
into
sahf
stos
cmp
or
js
jecxz
cmp
mov
pop
aam
xchg
push
mul
pop
sti
push
test
mov
push
sub
maxps
push
fadds
test
stos
push
mov
add
aaa
sahf
lret
repnz
pushl
nop
or
adc
adc
movsl
jo
push
xor
pop
sub
pushf
cmpl
mov
movsb
insl
test
adcb
mov
or
cmpsb
xchg
bound
gs
in
mov
cli
inc
add
out
adc
pop
mov
ljmp
lret
clc
pop
add
inc
inc
xlat
push
ss
ljmp
lcall
adc
mov
pop
arpl
inc
mov
sbb
add
or
or
and
or
out
pop
cmp
add
in
stc
jmp
movzbw
pushl
lea
call
pusha
pushf
call
push
pushf
pusha
movl
pusha
call
jno
shlb
int3
xchg
inc
xor
fwait
xchg
repnz
aam
jo
repnz
stc
inc
add
pop
pop
inc
ja
sbb
lea
jns
pop
xchg
push
jmp
and
push
pop
adcb
jb
ljmp
int
lahf
scas
in
jbe
pop
fcoml
pop
pushf
sti
mov
mov
scas
shlb
mov
dec
fists
in
and
adc
andb
cltd
aas
movsb
int3
rcr
cmc
aam
fidivrl
and
pop
ja
mov
jmp
inc
and
add
mov
jmp
imul
jb
nop
test
jbe
leave
xchg
fisttps
inc
das
pop
pop
mov
rcrb
aaa
pop
das
mov
mov
cmc
mov
outsl
jge
pop
adc
test
inc
or
dec
pop
dec
inc
push
int
cs
dec
sub
js
jecxz
mov
dec
or
stc
mov
xchg
idivb
cmpsb
xlat
dec
or
ja
xchg
sysenter
pushf
orb
je
sbb
ljmp
bswap
movzbw
mov
lea
jg
pusha
lea
pushl
movb
pusha
jmp
bt
push
cmp
setno
movsbw
lahf
call
mov
jno
nop
loop
push
push
mov
daa
repz
cmp
pop
xor
testb
and
push
jns
lahf
cs
repnz
fs
repnz
adc
dec
sbb
fistpl
xor
jg
add
out
push
mov
mov
xchg
ficoml
push
dec
inc
movsb
sbb
in
sarl
cmp
push
or
cltd
addr16
and
mov
pushf
push
lea
js
jne
stc
sub
btc
sbb
xor
inc
cwtl
lahf
mov
mov
bt
sar
setns
add
cmc
call
jmp
jmp
pushl
pushl
lea
ja
cmc
pusha
bt
bt
imul
cmp
add
mov
lea
jmp
inc
xchg
jo
nop
pop
ret
or
popa
or
and
cmp
rcrl
push
sbb
or
jo
nop
inc
fcmove
daa
sarl
aam
lret
fwait
mov
movsl
add
sub
loope
or
lods
push
sbb
sbb
fs
jne
bts
mov
lea
shr
sub
sub
mov
call
pusha
pushl
call
or
ljmp
fldcw
inc
jb
xor
jne
mov
outsl
dec
ds
in
pushf
outsw
fildl
fs
sbb
sub
stc
fsubr
pop
pop
insl
push
ficompl
insb
xchg
mov
mov
loop
push
mov
bt
jl
rol
clc
add
pushf
ror
cmc
test
pusha
cmc
shr
call
jmp
jmp
lea
ja
pusha
add
jmp
pusha
movl
mov
pushl
movl
push
lea
jmp
xlat
andl
into
mull
xlat
inc
mov
shlb
push
scas
pop
sahf
and
mov
out
fdiv
jecxz
jmp
xor
dec
push
lahf
ds
nop
stos
xchg
lds
dec
or
cmpsl
xor
jg
xchg
cmp
loopne
and
and
mov
add
test
fldenv
js
mov
or
and
and
mov
mov
ds
xor
bound
jecxz
insl
cmc
mov
sbb
push
lea
call
call
leave
xor
outsb
out
in
sub
jg
mov
sub
lea
es
xlat
push
or
adc
fwait
cmp
shlb
and
add
mov
cmp
pop
mov
and
movsb
stos
cs
jnp
cmpsl
jle
adc
and
sbb
mov
and
inc
xor
outsb
pop
call
test
stc
mov
cmc
push
cmc
jmp
lea
push
pusha
xchg
lea
pushl
popl
pusha
mov
movsbl
movl
pushf
bswap
setp
lea
jmp
or
or
mov
push
jnp
jno
inc
cmc
or
call
jmp
adc
shrl
mov
mov
xchg
fcomps
mov
mov
inc
incb
mov
daa
cmpb
jp
shlb
mov
ss
scas
fsubl
scas
push
sbb
call
scas
in
mov
adc
fwait
ljmp
mov
add
insb
jne
sub
jg
xchg
pusha
sub
mov
sbb
cmp
and
sbb
and
xor
cli
adc
jae
inc
out
or
out
movsl
div
int
aas
or
lret
jno
fldl2t
add
rorl
ja
aad
sti
fildll
inc
add
sub
shr
push
mov
inc
sar
fildll
xor
and
or
sbb
test
mov
and
rep
out
lcall
add
ja
gs
sbbl
mov
mov
nop
sub
jo
shlb
mov
mov
ret
nop
lret
lods
cmp
push
push
cmp
cmp
mov
xor
pop
cmp
jb
aam
lret
mov
arpl
xor
push
jnp
pmaxub
ljmp
bound
and
js
aad
enter
mov
dec
sub
xchg
pop
cli
gs
stos
pop
rcrb
out
int
mov
xchg
fs
insl
imul
and
push
mov
out
jmp
out
cltd
jg
mov
js
lret
in
lock
push
xor
mov
or
lahf
jl
push
xor
adc
sbb
out
pop
sbb
pushf
ret
and
jnp
fucomip
push
mov
imulb
out
ja
push
out
mov
adc
das
push
jnp
and
scas
push
popa
fldenv
filds
lods
lods
push
outsb
pop
dec
sub
int
lods
pop
cmpsb
rcrl
imul
and
jnp
clc
pop
jmp
fimuls
int
jp
cmp
popf
leave
jnp
mov
add
in
pop
pop
data16
pop
loopne
iret
adc
sbb
lods
int
stc
add
pushf
lea
jmp
setbe
push
sete
lods
cmc
bt
neg
pushf
xor
clc
pushf
jmp
mov
nop
cld
js
int3
adc
ljmp
and
lahf
sbb
fsubl
xlat
je
movb
lahf
enter
aam
push
sbb
subl
ds
mov
je
jns
jmp
mov
test
xor
leave
push
cmp
scas
cmc
lahf
pop
loope
or
cmp
push
mov
sub
sbb
add
shl
sahf
add
jo
jo
xor
fidivrs
aad
jmp
push
nop
xchg
scas
cmp
daa
sbb
jb
js
into
jl
daa
inc
movsl
imul
dec
ss
sub
pop
test
pop
sub
sti
mov
insl
repnz
outsl
jg
or
in
jle
pusha
ret
mov
inc
cltd
push
add
or
scas
push
je
pop
dec
push
nop
push
iret
fwait
in
stc
and
mov
xlat
inc
movsb
out
in
jle
mov
xor
jo
xchg
pop
in
pop
mov
cmc
adc
es
adc
les
cmp
mov
call
or
jmp
pop
sbb
testl
and
out
and
sbb
sub
sub
pusha
mov
arpl
mov
lock
ftst
jmp
pop
sbb
mov
and
fucom
dec
dec
jne
ret
sub
decb
pop
mov
fsub
stc
push
pusha
mov
jmp
pusha
neg
lea
jae
inc
bt
cmp
pusha
push
lea
lahf
not
pushf
lea
mov
pushf
mov
pushl
lea
ja
jmp
sbb
vprotb
loope
push
ds
decl
es
ja
pop
jmp
fucomip
cmp
mov
jge
stos
js
fstpl
jb
push
pop
and
lret
and
push
imul
dec
or
xchg
adc
sub
cwtl
jno
jle
adc
stos
jmp
adc
push
fcoms
cs
dec
fdiv
lock
ret
shl
mov
or
sbb
push
sti
rorl
lcall
fcmovbe
sahf
lret
mov
aas
data16
aam
jmp
mov
push
push
add
pop
jo
ljmp
xchg
cmp
out
dec
inc
out
js
imul
mov
dec
jne
cmovno
es
out
lret
xchg
ret
insl
fildll
pop
ja
mov
test
mov
and
push
push
ljmp
pop
pop
lcall
xlat
cmpl
ds
sbb
lods
sub
xor
sbb
adc
pop
sbb
out
aam
or
stos
arpl
popa
mov
ret
jns
inc
js
loope
imul
jbe
or
xor
aam
mov
loope
cli
out
shrb
sbb
inc
or
cmpb
cld
sub
outsb
faddl
add
push
movb
bt
clc
cmp
call
inc
in
xchg
addr16
sahf
flds
jns
out
xchg
mov
pop
and
je
lock
out
std
or
sahf
push
xor
xchg
pop
jnp
into
jmp
and
push
insb
pop
addr16
cli
adc
jge
jmp
mov
adc
addl
aaa
mov
dec
rcll
and
shll
and
push
jmp
mov
push
aaa
loope
push
mov
xor
mov
inc
imul
js
mov
inc
mov
or
xchg
add
int3
pop
incl
push
cmp
ret
sbb
fbld
aam
mov
jge
imul
mov
rcl
cs
lret
rolb
aam
dec
mov
cmp
hlt
jecxz
push
xchg
pushf
and
cmp
rcll
cmp
mov
and
cmpsb
loope
push
add
mov
lret
xor
lret
ficompl
xchg
dec
ret
aam
clc
imul
sub
test
dec
lea
ljmp
or
ret
or
mov
sub
sbb
stos
xchg
or
cs
push
mov
mov
arpl
mov
fmulp
or
out
mov
std
rorl
call
ret
mov
pop
popa
test
pop
orl
add
push
in
lret
push
sar
movsb
jl
mov
gs
popa
pushf
sub
xchg
sbb
lock
push
aam
test
adc
inc
add
jg
sbb
mov
cmp
mov
xchg
cmc
ss
subl
test
les
lods
cltd
out
lahf
fldcw
dec
mov
push
filds
inc
fsub
pushf
lahf
and
inc
adc
int3
je
pop
addr16
push
sbb
push
insl
iret
mov
into
dec
cmp
ds
push
pushl
lea
call
push
movl
pushf
adc
call
push
test
test
mov
or
call
movb
mov
push
bswap
pushl
popl
pop
call
mov
movb
lahf
mov
lahf
lea
push
jmp
jmp
movl
movb
lea
jmp
mov
mov
test
push
and
inc
outsb
ds
shll
pop
adc
xor
rcr
jmp
shrb
movsl
push
repz
jl
lcall
and
je
sub
push
sub
in
or
inc
aas
and
aam
popa
lret
inc
mov
jmp
outsl
push
inc
and
roll
out
fwait
add
mov
jl
or
cltd
dec
ds
out
cmpl
enter
hlt
in
mov
inc
pop
push
add
gs
add
pushf
daa
adc
ss
pop
data16
pop
popf
and
out
fstps
dec
push
push
jecxz
aad
leave
icebp
jmp
jb
lcall
iret
test
sahf
ret
sub
test
jae
dec
out
sbb
cmpsb
fs
mov
mov
mov
fsubs
insl
stos
aam
mov
inc
divl
nop
jne
jl
push
push
or
fsubrp
aam
sbb
push
mov
hlt
xor
sbb
push
jb
push
xchg
fidivrl
xchg
cmp
mov
data16
sbb
or
into
mov
ds
push
xor
xor
or
lret
out
dec
pinsrw
andl
sbbb
adc
adc
dec
psrld
pop
movsb
push
xchg
pusha
jmp
xlat
mov
cmp
out
cld
out
das
pop
fs
inc
bound
xchg
nop
js
arpl
mov
pop
add
adc
jmp
cli
out
arpl
nop
cli
jbe
test
shr
pop
ljmp
test
ret
in
hlt
lock
aas
cmpsl
pop
and
push
pop
pop
or
inc
jnp
fistps
mov
push
sbb
das
cs
mov
out
or
mov
shl
pop
lret
test
negb
jle
rcrb
xor
sbb
xor
mov
cmp
mov
push
sub
mov
inc
movsb
sbb
sbb
fdivr
fwait
pop
fmul
push
jl
test
or
bswap
push
mov
mov
rclb
jno
out
sti
in
mov
dec
jnp
jmp
xor
sub
and
push
scas
mov
adc
cltd
cli
mov
decl
cmpsl
sub
xor
cmpsl
pop
in
ficoml
cwtl
push
cmovae
mov
aas
dec
push
sbb
cs
stos
push
inc
shlb
xor
or
jo
jl
addr16
mov
lds
call
mulb
arpl
nop
adc
add
stos
xchg
loopne
push
lahf
mov
pop
fcomps
out
test
adc
sbb
mov
test
sahf
add
sarl
in
repz
outsl
mulb
mov
dec
sbb
sbb
into
pushf
imul
sbb
lahf
mov
orb
push
call
jmp
call
cltd
fistl
out
pop
cwtl
and
loopne
mov
or
sub
cmp
loope
fcompl
mov
sti
movb
lcall
mov
mov
aaa
inc
imul
sub
repz
sub
sbb
imul
int3
sahf
data16
shrl
sarl
daa
inc
lds
cmpsb
aaa
mov
loopne
fcoms
cld
jmp
mov
xor
into
mov
fimuls
movb
pushl
lea
jne
sbb
xor
inc
lea
not
mov
pusha
sbb
rol
jmp
outsb
rcll
and
add
stos
xlat
sbb
xor
pop
ja
into
dec
aam
dec
mov
and
xchg
pop
mov
shlb
lds
inc
gs
sbb
dec
daa
jg
enter
push
movsl
or
dec
push
inc
push
lods
add
mov
stc
bound
dec
push
cmp
jbe
icebp
sbb
mov
push
movsb
dec
adc
xchg
aas
test
mov
adc
mov
btc
bswap
bts
xor
movsbw
pushf
pop
lea
call
inc
xchg
gs
out
jno
pop
ret
loopne
xchg
shrb
inc
dec
xchg
ds
xchg
dec
jb
push
sub
xlat
push
adc
shl
and
loopne
mov
and
jo
imul
int3
xchg
xchg
lods
cvtdq2ps
pushf
inc
jp
test
ja
or
mov
push
inc
or
das
mov
and
jp
jne
xor
enter
cmpsl
ljmp
mov
mov
iret
mov
sahf
xchg
loop
popa
jecxz
xor
pop
stos
dec
fidivs
pop
adc
inc
inc
dec
push
lcall
daa
orl
fld
inc
and
mov
inc
and
fld
inc
and
mov
and
jg
add
nop
add
mov
lret
xchg
pop
enter
aas
cmp
push
lods
xor
out
loopne
shll
sbb
movsb
dec
sbb
dec
mov
cmp
sbb
xor
ficompl
stos
pop
loop
dec
icebp
aas
hlt
xchg
fisttps
jb
or
mov
mov
iret
jge
xor
mov
loop
addr16
jle
movsb
mov
lcall
adc
xchg
gs
rcl
add
test
adc
xchg
gs
rcll
fstl
lds
or
cmp
mov
pop
cmp
scas
bound
add
popa
insb
inc
jb
gs
cmpsb
sbb
nop
daa
mov
cwtl
inc
mov
xor
and
repnz
call
nop
cvtdq2ps
orb
lret
adc
cld
and
arpl
mov
call
add
and
lods
xchg
adc
xchg
fldcw
mov
das
cs
stos
push
rcrb
icebp
dec
aam
mov
jmp
jl
and
mov
cs
push
scas
mov
add
test
sbb
ja
jle
repnz
jno
pop
out
and
mov
cmpsb
mov
movsl
xor
daa
repnz
sahf
bound
or
shlb
push
fwait
or
lods
lcall
jne
enter
pop
jae
adc
dec
outsl
cmp
cmp
test
subb
js
ds
mov
js
fsubp
scas
xor
ds
lahf
sub
xchg
pop
cmp
jge
lods
or
aam
ss
push
test
call
call
test
pushf
pop
out
test
dec
fiaddl
fwait
test
xchg
adc
test
out
je
add
aas
mov
adc
in
fdivrl
add
sbb
mov
add
stos
int3
jo
rcrl
jo
push
cmp
jmp
mov
mov
adcb
mov
mov
pop
cld
stos
ret
mov
in
push
or
loopne
iret
aaa
adc
faddp
int
jp
add
ficoml
fisubrs
and
nop
cs
pop
stos
idivb
push
add
mov
mov
rcrb
sbb
dec
repz
xchg
sbb
pusha
xchg
in
gs
daa
and
pushf
push
or
cmpsb
pop
push
mov
and
xor
ret
dec
repnz
mov
jns
mov
mov
xor
mov
gs
pop
jns
sub
aaa
adcl
mov
fdivrs
inc
lea
ficompl
push
mov
cmp
incl
push
pop
out
and
xor
out
pop
gs
stc
cmc
daa
cmp
push
add
ret
dec
out
inc
outsl
shr
mov
add
repz
loope
add
pop
pop
gs
mov
sub
mov
fisubrs
adc
push
push
add
fdiv
lret
repz
negl
fucomip
ret
sbb
lea
enter
cmp
pop
inc
dec
out
lea
and
cmp
dec
aad
addl
data16
mov
sbbb
mov
xor
cmp
jp,pn
mov
es
xor
mov
jo
aad
cli
and
adcl
mov
adc
lods
movsl
and
lock
cmp
and
cmp
insb
pop
adc
insb
pop
insb
inc
ficoms
lods
lret
mov
adc
sub
sbb
ffree
dec
add
push
daa
dec
int3
test
pop
sti
push
xchg
or
pop
adc
rcr
xor
jno
out
cmp
dec
ror
ss
into
push
sub
rcrb
push
in
and
mov
xor
scas
test
nop
mov
std
push
jmp
xor
push
push
xor
pop
sub
xlat
and
js
jne
inc
sub
cmp
aad
and
data16
xor
inc
jns
jo
sbb
repz
test
push
jmp
inc
call
jp
jno
out
jge
add
js
dec
pop
mov
cmp
mov
popa
xchg
add
aam
fcmovb
cmp
push
rorb
mov
pushf
movsl
push
dec
loopne
xchg
lcall
je
dec
call
adc
add
or
in
mov
gs
in
lret
mov
int3
mov
sarb
sbb
imul
sti
mov
cmp
mov
js
test
addb
or
scas
push
mov
mov
pop
out
jns
mov
or
int3
lea
sbb
pop
pop
out
movsb
fdivrl
or
popa
dec
cmp
cmp
loopne
out
sub
hlt
xlat
xchg
fistpl
mov
out
dec
adc
push
cld
dec
push
pop
sahf
in
lock
dec
xchg
xor
bound
pop
out
movsl
inc
stos
push
sub
ds
jg
mov
fcompl
pop
sbb
or
jle
sub
adc
sub
iret
in
push
dec
cwtl
loopne
mov
jnp
addb
xor
inc
clc
rcr
sub
mul
lret
in
and
pop
xor
push
xchg
imul
add
sbb
dec
sub
cmp
push
add
shr
arpl
xor
cmp
testb
decl
aaa
imul
and
xchg
outsb
std
das
clc
adc
sub
repnz
push
cli
es
sub
je
bound
or
adc
sub
and
adcb
add
andb
jg
cld
jo
lods
out
inc
add
xchg
sbb
cltd
andl
sbb
arpl
sub
push
xor
inc
adc
pop
sub
pop
pop
sbb
mov
push
out
dec
mov
add
popl
stos
out
sub
add
scas
xorb
jae
fsubrl
or
and
arpl
loop
mov
mov
pop
xchg
out
mov
lret
pop
sub
loop
arpl
cmc
jmp
aam
stc
in
insl
into
addr16
jnp
and
out
ret
sbb
and
mov
add
adc
shrl
es
adc
sub
in
rclb
mov
outsl
scas
xor
clc
add
int3
inc
mov
dec
jnp
cs
pop
or
sbb
mov
cmpb
stos
xor
mov
lea
dec
movsb
lret
popf
or
subb
mov
adc
ret
add
mov
push
fsubrp
mov
shlb
and
ret
jecxz
sub
iret
pop
decl
dec
stos
adc
das
out
stos
sbb
sub
add
pop
adc
test
and
mov
das
aad
inc
out
jnp
es
mov
sub
or
stos
fcmovb
xchg
sub
pop
fbstp
fimull
out
cltd
push
mov
or
jl
dec
mov
stos
sub
loop
ljmp
sbb
in
sub
mov
and
cmp
mov
pushf
lods
sbb
mov
jnp
mov
in
imul
into
sub
movb
mov
sbb
scas
lahf
mov
mov
mov
out
adc
outsl
mov
adc
mov
das
test
stos
push
rorb
and
dec
ret
into
mov
pop
sub
movsl
movsl
jle
xchg
push
mov
or
fstp
scas
ret
out
test
sti
popf
sti
lock
adc
xchg
out
loop
mov
push
dec
jmp
cwtl
add
xchg
lret
insl
inc
arpl
and
sub
jl
and
popf
add
mov
rclb
mov
rorb
test
out
sbb
pop
cs
or
fmull
fcmovb
pop
dec
mov
in
outsl
push
mov
xchg
addb
mov
lds
xor
or
scas
or
call
push
test
sbb
rcrb
hlt
mov
sub
in
xchg
inc
mov
sub
cmp
in
ret
mov
pop
cmpsl
sbb
or
or
xor
and
out
inc
mov
orl
xchg
mov
repz
out
arpl
rorl
cmpsb
insl
rcll
and
jmp
and
sub
aam
mov
fisubs
pop
test
pop
hlt
mov
dec
enter
call
stos
mov
dec
and
mov
clc
andl
push
jge
fwait
lock
popf
or
push
cli
push
xchg
int3
stos
sub
addr16
ja
or
insb
or
das
ja
mov
inc
sbbl
add
jl
sbb
xchg
mov
test
stos
xchg
in
xchg
adc
decb
sub
call
dec
mov
inc
mov
mov
sub
add
sub
add
incb
jg
test
sbb
prefetchw
loop
sbb
jmp
push
mov
pop
dec
popf
repnz
dec
mov
subb
arpl
cs
xor
sub
in
andb
xchg
dec
arpl
out
insl
imul
das
pop
add
outsl
push
xor
mov
pop
mov
or
test
adc
lock
ss
mov
cltd
xor
fsubrl
rorl
sub
mov
test
mov
and
add
dec
inc
ret
scas
lret
in
int
mov
adc
cmp
and
cs
push
sub
dec
push
hlt
lock
out
loop
mov
leave
decb
push
stos
ret
xchg
pop
jecxz
jle
insb
and
sub
cli
mov
jecxz
test
lea
dec
je
fnsave
lods
pusha
push
jmp
pushf
jmp
push
sub
jmp
push
lcall
cmp
jmp
jne
jg
lods
shlb
or
movsb
fcoml
inc
clc
jecxz
fsubrs
outsb
push
in
int3
imul
pusha
or
sarb
sbb
outsl
or
adc
mov
or
dec
fimuls
dec
and
xchg
repz
and
stc
fs
sub
cmp
js
add
xor
push
lds
inc
sbb
outsb
das
sbb
fwait
xor
out
movsb
and
or
in
mov
and
outsl
push
or
int
movsl
into
xchg
test
out
cmp
pop
cs
dec
hlt
int
mov
std
inc
push
add
pop
arpl
imul
out
and
outsb
sbb
fiaddl
or
sub
sbb
mov
insl
movsl
and
hlt
mov
add
lods
int
push
adc
sub
and
pushf
call
pop
mov
push
out
mov
cld
xor
movsb
outsl
sbb
push
leave
dec
pop
mov
push
or
scas
int
stc
decl
out
andl
scas
jmp
ja
jl
dec
mov
push
insl
jle
mov
dec
adc
movsb
xchg
fstpl
mov
sbb
ljmp
push
js
loop
arpl
mov
popf
jne
mov
cmc
neg
mov
inc
add
mov
fcoms
xor
push
inc
rorb
movsl
mov
xchg
xchg
ja
add
jns
pop
inc
rclb
mov
mov
es
cltd
mov
jmp
xor
std
stos
mov
jmp
cli
push
out
push
or
inc
sub
mov
jne
in
repz
mov
add
add
or
xor
shll
cmp
push
clc
xor
mov
insb
pop
sbb
in
leave
lret
push
pop
in
fldz
jbe
fsubrp
loop
pop
push
out
push
imul
out
jbe
in
xchg
or
pop
loope
dec
mov
inc
push
popf
sub
repnz
adc
nop
out
test
jle
adc
sub
sbb
pusha
dec
jne
andb
ss
mov
and
and
popf
lret
xchg
icebp
dec
jno
push
mov
pop
jno
mov
jnp
pop
insl
push
rorb
enter
push
popf
lds
pop
or
shlb
pop
jae
popf
lods
es
xor
push
jle
push
stos
sbb
mov
bound
adc
add
shlb
gs
outsb
out
ljmp
in
sub
gs
out
sbb
jecxz
inc
inc
dec
ficoml
hlt
out
mov
mov
and
mov
mov
int3
rcrb
imul
outsl
lea
test
loopne
fdivs
pop
in
push
pop
mov
push
int3
inc
pop
xchg
ret
stc
dec
jae
sti
les
fwait
jns
popf
xchg
dec
lcall
rclb
push
loope
dec
loopne
leave
inc
mov
stos
fwait
jns
mov
sbb
std
sub
add
sub
push
in
fadd
cmc
push
cmp
xor
int
pop
int
sub
and
adc
and
aas
xor
adc
pop
xor
das
daa
xor
and
and
sbb
int
adc
lods
in
popa
push
out
insl
leave
push
std
dec
mov
test
mov
dec
mov
scas
mov
nop
js
mov
add
nop
bswap
hlt
arpl
inc
cmpsb
cmpsl
mov
arpl
icebp
xor
xchg
push
add
mov
push
mov
pop
xor
fs
sahf
xor
into
mov
pop
shrl
lods
mov
test
or
mov
adc
mov
mov
jl
push
push
stos
test
out
movw
lea
je
bt
call
push
aad
dec
out
push
repnz
rcrb
icebp
sbb
xor
es
xor
in
insb
adc
arpl
pop
in
cwtl
lahf
es
sbb
xchg
xchg
cmpsl
adc
mov
pop
lock
dec
mov
outsb
lods
ss
xchg
xchg
bound
bound
out
mov
pop
or
pop
in
nop
popa
pop
aad
ljmp
dec
mov
iret
or
pop
xor
add
scas
negb
or
stc
ds
dec
ficompl
adc
fs
movl
push
pusha
movl
movb
mov
lea
jmp
and
dec
out
loop
leave
push
sbb
repnz
nop
jl
out
mov
mov
fwait
jns
adc
cwtl
shlb
push
arpl
insl
ret
mov
lock
sub
lods
cmpsl
insb
cmp
xchg
xlat
loop
xchg
xlat
pusha
mov
subb
sub
fisttpl
loopne
push
fists
dec
fmull
into
pop
sub
xchg
int3
jle
test
push
cmpsl
scas
aad
mov
adc
mov
iret
dec
out
loope
orb
insb
xor
sub
dec
dec
xor
aam
sbb
inc
sub
das
cmpsb
je
fisttpll
cmp
push
push
mov
add
add
adc
fisttps
fdivr
mov
insl
nop
test
testl
jge
pop
nop
test
into
test
xchg
js
gs
cmp
in
rcrb
sbb
lcall
adc
inc
and
sbb
stos
movb
pushl
lea
jmp
and
sahf
mov
dec
clc
ret
push
flds
loope
pop
imul
out
jle
fisttpll
nop
or
cmp
pop
or
into
outsb
mov
xchg
roll
cwtl
dec
sub
sbb
out
movsl
and
int3
lret
inc
sub
shl
popa
jecxz
pop
and
push
sahf
movsb
cmp
div
or
cmp
mov
in
divl
cmp
jecxz
cmc
pop
inc
and
push
or
jae
bound
xchg
pop
and
dec
fs
jo
pop
sbbl
aaa
idiv
bswap
lea
setno
jmp
dec
adc
dec
out
or
push
cmp
cld
es
and
inc
dec
pop
and
mov
dec
enter
lds
popa
xor
int
push
lahf
cs
stos
mov
lahf
mov
adc
not
fsubrs
sbb
pop
in
pop
add
inc
lret
out
lret
jnp
inc
push
inc
push
jne
fidivl
call
push
jg
sbb
fsubrp
jns
mov
sbb
push
shlb
mov
inc
xor
cli
pop
push
push
fwait
mov
subl
shl
mov
and
jae
pusha
movb
cmp
pusha
jmp
lock
icebp
mov
jo
add
fiaddl
fsubl
inc
or
sar
outsl
xchg
sarb
jge
sbb
cmp
ljmp
jle
clc
xchg
cwtl
lds
xlat
mov
call
pop
fstps
xchg
push
xchg
imul
jae
jle
es
fsubrl
jbe
movsb
mov
fdivrs
or
sub
sub
clc
loopne
adc
pushl
mov
lea
jmp
lea
jne
lea
xor
sub
push
pusha
mov
add
pushf
rol
adc
add
sar
rcr
adc
mov
stc
test
lea
call
subb
out
sbb
or
or
mov
cli
xchg
push
mov
repz
into
cs
testb
mov
stos
je
mov
inc
and
adc
xchg
cwtl
jecxz
aaa
or
cmp
push
mov
cs
inc
push
or
in
cmc
mov
insl
icebp
aaa
sbb
jp
sub
addr16
mov
out
inc
dec
stos
mov
push
in
into
rorb
jecxz
sub
lock
jl
mov
iret
insl
pop
xchg
jb
lock
rolb
jmp
push
jbe
popa
dec
ret
jae
mov
pop
cli
shlb
repnz
out
pop
ret
out
jns
dec
sbb
and
outsb
mov
lret
inc
popl
xor
mov
jb
sbb
inc
cltd
push
loop
inc
or
ds
fmulp
sub
sbb
adc
test
hlt
mov
fcoms
xchg
add
fadds
or
fisttps
pop
sub
and
mov
cmpsl
enter
pusha
mov
or
pop
or
les
enter
sub
lahf
xchg
dec
aad
loop
cmpl
lds
pop
add
inc
js
je
jb
arpl
jae
mov
pushl
inc
movb
adc
lea
push
jmp
pusha
add
bt
pusha
call
mov
imul
call
and
lds
nop
shrl
add
sub
mov
out
inc
pop
call
aad
inc
push
leave
mov
adc
inc
pop
sbb
rorl
in
or
mov
sbb
loopne
inc
push
mov
scas
xor
jge
add
or
push
or
dec
add
xor
scas
iret
cltd
push
cltd
mov
aaa
mov
fstps
push
adc
mov
mov
scas
fcomip
xchg
std
mov
mov
sbb
enter
sub
sbb
in
sbb
inc
into
mov
sbbb
mov
mov
pushf
call
xor
mov
xchg
mov
mov
push
xor
hlt
rcrl
mov
mov
mov
int3
iret
sbb
int
jo
int3
jg
and
rcrb
mov
xlat
out
sbb
mov
mov
sbbl
sbb
shl
daa
clc
adc
aad
or
add
filds
sbb
mov
sbbb
xchg
or
mov
sub
clc
mov
mov
pop
jnp
es
jge
pop
and
pushf
lea
pusha
jmp
pop
shll
nop
jb
cltd
subl
test
popa
in
inc
adc
mulb
scas
subl
push
movups
icebp
xlat
dec
and
decl
sub
fbld
aam
dec
movsb
ljmp
mov
fs
mov
test
jp
and
divb
sub
int3
aas
loope
xchg
mov
cwtl
lock
jbe
push
mov
loopne
cmc
lods
aas
mov
xchg
sbb
lret
xor
ja
jp
lods
aas
mov
inc
adc
scas
jbe
orl
xchg
pop
bound
pop
mov
imul
aas
lret
adc
leave
hlt
lahf
push
pop
lret
in
and
mov
mov
sbb
aas
iret
sub
jg
xchg
add
hlt
outsb
mov
sbb
addb
push
or
xchg
or
pop
xor
pop
sti
mov
cmp
scas
and
lock
pusha
pop
mov
mov
sti
pop
aam
jne
pop
mov
les
jl
dec
iret
mov
add
xorps
in
fldenv
outsb
mov
pushl
popl
test
jmp
aad
fs
out
jo
jne
dec
test
xor
inc
fcoms
adc
and
dec
adc
call
or
cld
mov
out
stc
xor
imul
adc
xor
je
xchg
gs
push
or
push
adc
leave
gs
es
xchg
and
sbb
pop
pusha
insb
xchg
jmp
and
xchg
aas
add
xor
js
inc
push
imul
pop
rolb
nop
fcompl
dec
aaa
mov
jbe
mov
or
jns
fs
or
sbb
sbb
pop
in
dec
loopne
shl
pop
jnp
xor
add
pop
push
inc
pop
push
cmp
pop
lahf
and
xor
inc
mov
xchg
mov
decl
dec
mov
ds
mov
ss
sbb
mov
fs
inc
out
mov
subl
inc
aaa
xchg
sub
mulb
ds
test
out
shll
and
sub
decb
arpl
aad
push
ret
xchg
mov
mov
and
popa
adc
xor
jo
ss
add
xchg
dec
hlt
les
rorb
xchg
int
popa
jmp
call
cwtl
flds
cmp
jecxz
jbe
cmp
xchg
dec
and
pop
sbbl
or
jmp
shrb
test
ds
mov
ljmp
jl
in
roll
cmp
subb
push
lock
jecxz
nop
mov
arpl
sbb
mov
mov
lods
push
pusha
push
movb
pusha
pushl
ret
push
andb
mov
int3
testb
jle
xor
xchg
in
inc
mov
in
lock
negl
popf
rorb
mov
xchg
aam
xchg
add
test
imul
mov
add
jp
dec
jb
xor
clc
push
pop
repnz
test
hlt
out
arpl
filds
inc
repnz
stc
arpl
and
fdivrl
iret
xchg
and
xchg
xchg
sbb
mov
pusha
or
jp
test
adc
lret
mov
fcompl
and
jl
out
mov
scas
sbb
sbb
and
and
pop
addr16
imul
fnsave
scas
jne
or
arpl
sbb
inc
mov
test
push
repz
divb
lcall
cmp
data16
or
je
clc
adc
pop
lret
lods
mov
popa
or
mov
fcoms
mov
sub
pusha
lea
call
clc
push
sub
push
lea
jne
push
pushf
lea
call
pushf
lea
jmp
mov
push
clc
pushf
mov
test
pushf
jmp
jmp
nop
ljmp
push
jo
lds
popa
pop
inc
jo
je
push
popa
mov
shrl
push
push
sbb
shll
lock
cld
js
ja
ror
repnz
mov
mov
push
sbb
test
xchg
outsb
aad
cld
in
in
mov
fstpl
dec
pop
mov
sub
xchg
dec
cmp
out
std
dec
xchg
fwait
xor
or
xchg
xor
out
jae
sbb
mov
and
jns
ss
pop
adc
jecxz
out
out
stos
xor
lret
dec
aam
imul
aaa
test
cwtl
addr16
dec
mov
adc
jae
ss
push
call
test
inc
inc
adc
mov
sbb
repnz
cmpsb
jbe
add
mov
pop
lret
cmp
dec
cmp
out
call
nop
cmp
outsb
adc
mov
mov
fcmove
ret
into
or
jno,pt
gs
imul
add
sbb
stos
movb
lea
jmp
xchg
pushf
pusha
pusha
movl
movl
movl
movw
pushf
push
pushf
lea
jmp
mov
or
sub
sete
push
not
bswap
mov
lea
pushf
movsbl
mov
movsbl
mov
pushl
movzbw
pushl
not
mov
jmp
stos
mov
movb
lea
jmp
push
jnp
inc
out
sub
xor
jb
push
sub
nop
dec
repnz
popf
inc
out
xchg
pushf
adc
insb
mov
cmp
sbb
push
push
jmp
inc
out
ja
arpl
jb
add
jb
movb
into
xlat
popf
pop
xchg
nop
adc
adc
arpl
das
jp
xchg
fldenv
jno
ds
out
dec
movsl
jno
and
stc
movsl
dec
push
or
inc
cmp
cmpsl
inc
out
out
cltd
pop
movsb
jnp
scas
pop
test
cmpsb
push
ds
pushf
pusha
mov
xchg
scas
pop
pusha
mov
mov
mov
jp
leave
outsb
aam
and
inc
out
sbb
mov
push
popa
or
adc
jno
pop
lcall
xor
cmpsb
inc
int
pop
xlat
in
mov
or
adc
sub
xchg
movsl
cmpsb
add
jae
or
scas
push
nop
xor
imul
push
push
fistpll
int
sub
leave
and
push
push
imul
int3
gs
imul
jb
jne
cmp
mov
inc
orl
into
ror
loop
jno
je
inc
es
int3
daa
fstp
fildll
dec
imul
pushf
mov
push
ffree
ljmp
outsb
stc
es
cmpsb
mov
add
add
insb
inc
call
pushf
lea
je
bt
bt
or
pusha
push
lea
je
ror
rcr
adc
sub
setbe
dec
xchg
test
mov
test
das
dec
mov
shl
dec
bswap
ror
shr
movzbl
test
btc
inc
mov
pusha
pushf
jmp
push
call
push
mov
imul
and
jns
cmp
movsl
insb
jg
push
cmpsb
in
dec
sub
jbe
push
dec
leave
add
jge
inc
cmc
enter
pop
dec
cld
push
xchg
mov
push
push
push
loopne
cld
int3
hlt
dec
call
stos
jbe
mov
add
mov
push
mulps
mov
jnp
pusha
pushf
and
rcrl
push
int
inc
inc
lds
mov
pop
fisubl
jb
adc
ret
popa
test
das
lods
push
push
xor
mov
shrl
xchg
mov
pusha
and
pop
dec
movsl
adc
cmc
and
cmp
nop
sbb
sahf
call
std
adc
pop
fldenv
mov
and
or
dec
sarl
test
dec
cltd
jb
push
pop
fsubr
dec
mov
mov
lock
loop
adc
fbstp
int
jns
aas
dec
movsb
adc
mov
jmp
push
ss
jle
lret
pop
iret
in
xlat
adc
aas
inc
out
dec
push
jno
data16
and
iret
jns
lahf
cmpsl
pop
stc
fnsave
nop
adc
dec
push
popf
js
das
call
test
stos
mov
ret
lea
iret
mov
pop
out
daa
inc
scas
sub
add
fisttpll
cmpsb
bound
mov
pop
movsb
xor
mov
add
sbb
in
nop
lds
xor
ljmp
repnz
adc
test
bound
repnz
mov
aam
sbbb
or
aaa
aas
and
sahf
es
mov
cmpb
call
jmp
not
bt
movb
mov
rol
jmp
popa
jecxz
ds
fs
push
pop
sub
incb
xchg
mov
xchg
mov
dec
adc
push
pusha
cmp
jg
and
dec
lds
ficoms
adc
xchg
mov
jmp
inc
jl
or
ja
jmp
jl
dec
lcall
pusha
jl
adc
jp
push
jg
popa
xlat
sbb
ficoms
iret
xchg
addr16
xor
pusha
pop
into
push
sbb
mov
aad
cld
and
nop
pushf
lea
call
jmp
jmp
aas
mov
inc
sti
icebp
jge
repnz
addr16
daa
icebp
pop
dec
pop
sbb
mov
jnp
mov
imul
or
imul
jmp
push
dec
mov
sub
aad
fcoml
push
cltd
xchg
dec
cltd
je
fwait
cmp
push
hlt
out
mov
mov
out
push
push
cmp
enter
add
xlat
xchg
jnp
jecxz
shl
jge
or
out
push
xchg
sti
daa
mov
dec
jnp
push
adc
pop
flds
sub
inc
sub
out
mov
cmpb
mov
push
xor
pushw
movsl
xchg
clc
pop
mov
ja
loope
jge
pop
leave
sub
dec
ja
jecxz
sub
and
incl
shlb
outsb
mov
inc
jno
adcb
ss
add
cmp
mov
mov
jge
xchg
std
loop
and
push
adc
loopne
in
xchg
cmp
or
movsl
push
in
aaa
adc
sub
mov
lea
jno
inc
stc
jmp
jmp
mov
pusha
lea
je
pushf
stc
pushf
push
sub
cmp
stc
pushf
cmp
jmp
inc
in
xchg
cmp
nop
sahf
sbb
inc
dec
push
ret
xor
ljmp
xchg
xchg
nop
sub
adc
popa
das
out
cmp
test
xor
adc
xchg
adc
mov
xchg
out
cmc
dec
and
jae
pop
xor
ja
and
mov
jnp
ret
cs
lahf
cmp
adc
pop
and
adc
jecxz
jb
out
pop
repz
xor
adc
jecxz
xchg
out
rcrl
xchg
cmp
gs
mov
insb
sub
mov
pop
movsb
int3
std
pushf
movl
pusha
pushf
movb
lea
jmp
outsb
pop
std
cmp
nop
or
cmp
loope
hlt
push
dec
push
cmp
arpl
dec
push
scas
lds
rclb
in
pop
inc
add
pop
ror
shrb
dec
sbb
lahf
jno
push
in
js
cmp
out
jae
je
and
jno
push
es
imul
movsl
push
cmp
out
mov
loopne
setne
aaa
mov
icebp
add
cli
in
cmp
nop
xchg
jno
and
stc
movsl
out
fsub
lods
cld
popa
sbb
cmp
rorl
push
rorb
mov
test
inc
fdivrl
test
neg
adc
and
lret
clc
cmp
xorl
xchg
scas
inc
cld
add
loope
dec
gs
inc
fdivs
in
inc
cld
add
inc
adc
mov
flds
inc
int
mov
in
notl
enter
and
pushf
pushf
pushf
lea
jmp
lea
je
stc
bt
pushf
cmp
call
add
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
lea
call
jmp
lea
jb
test
pusha
cmp
pushl
pushf
pushf
jmp
xchg
xchg
or
out
adc
pop
ret
mov
inc
cwtl
inc
in
pop
jecxz
push
adc
jo
fiaddl
inc
popf
or
mov
dec
xlat
xchg
push
xor
outsb
push
dec
mov
test
adc
mov
jbe
fs
adc
incl
push
mov
sub
repnz
adc
int3
sti
push
aad
in
dec
or
adc
lret
sbb
int
jb
ret
andl
ret
sub
lods
cmc
mov
test
out
mov
lcall
add
lods
inc
addr16
xor
mov
test
mov
into
test
movsb
push
js
in
xor
mov
clc
mov
mov
ds
mov
push
xchg
pusha
sub
xchg
rcl
in
mov
mov
cmovae
pop
iret
jl
shlb
icebp
mov
arpl
or
pop
cltd
faddp
sub
enter
sbb
jecxz
xchg
adc
pop
rclb
repnz
icebp
cmp
sub
ljmp
mov
in
xchg
push
pop
jg
pop
into
aas
cmc
cmp
and
in
add
and
xchg
loopne
ss
lret
fstl
push
nop
jns
adc
pushf
dec
stos
inc
dec
inc
rorb
mov
mov
insb
inc
mov
pop
in
jb
ficompl
lret
imul
jno
xor
inc
je
add
mov
push
pop
cmp
pop
mov
shrb
div
loop
jne
out
push
out
in
fsubrs
jg
jne
xchg
adc
xchg
pop
mov
pusha
sub
shl
cwtl
popf
call
sahf
xchg
cmp
nop
aaa
xor
jp
xor
and
lret
jne
nop
push
stos
xchg
sarb
arpl
mov
addb
mov
sub
and
or
pusha
loop
pop
sub
mov
jl
mov
scas
cs
or
mov
test
pop
hlt
into
fisubl
push
lods
mov
ja
dec
inc
lock
jb
push
insl
fcmove
outsl
cmp
mov
test
pop
insl
xor
sbb
adc
inc
test
push
fsubl
add
xchg
jae
stc
neg
xorl
nop
or
popa
insl
xlat
inc
or
mov
push
test
movsb
addr16
sbb
scas
sbbl
clc
cmpsb
push
ficoms
pop
mov
pop
lret
dec
test
shrb
dec
mulb
into
jae
xchg
testl
pop
jo
addr16
or
cmc
or
je
dec
sbb
sbb
jle
and
pop
ljmp
lcall
adc
aad
ja
mull
mov
lcall
xchg
xor
inc
rcr
in
flds
insl
clc
inc
mov
push
push
mov
test
scas
stos
mov
adc
sub
adc
and
mov
pop
leave
stos
dec
dec
stc
add
in
mov
dec
mov
mov
push
mov
adc
stc
dec
nop
ds
das
dec
push
mov
push
ds
sub
inc
inc
lret
xor
subl
sbb
push
out
mov
out
xchg
adc
pop
inc
outsl
mov
jae
movl
mov
nop
mov
inc
dec
xchg
and
push
pop
or
jmp
mov
nop
or
push
pop
and
lcall
mov
les
inc
fmul
jp
mov
push
ficomps
pop
fidivs
out
inc
mov
and
orb
sbb
jae
lret
push
andl
dec
testl
inc
pop
mov
call
out
popf
jge
aaa
out
pop
push
or
insl
cmp
les
and
sub
sub
dec
cmp
xchg
jl
mov
inc
xchg
xor
iret
fcoms
lods
stos
push
jo
and
and
mov
out
mov
xchg
movsb
imul
shrb
aam
sti
subb
dec
dec
push
mov
inc
xorb
out
push
xchg
xchg
cmp
test
cmp
ret
add
and
xchg
cwtl
dec
xor
jle
pop
les
stos
adc
sbb
imul
cltd
test
clc
xchg
loope
mov
inc
fnsetpm(287
adc
xchg
shrb
pop
jle
xor
add
pop
mov
sbb
pop
mov
out
xor
popa
push
ljmp
out
insl
jp
loopne
dec
repz
data16
push
mov
das
popa
repz
bound
and
or
stos
dec
jle
or
out
mov
fstps
enter
mov
inc
xchg
fistpll
call
mov
adc
mov
pop
sbb
fistl
push
adc
jp
imul
pop
fdivs
push
in
inc
push
adc
pop
push
push
dec
sarb
mov
and
lds
stos
mov
sbb
lds
nop
shr
push
inc
mov
dec
pop
add
push
and
push
xlat
xchg
mov
sub
mov
sub
test
add
mov
in
push
stos
bound
dec
movsb
pop
fisttpl
xchg
push
lcall
inc
int3
dec
pop
xchg
sub
mov
fiadds
mov
mov
ds
outsb
push
pushf
inc
sub
and
repnz
xor
out
btc
add
clc
shr
bt
shrd
mov
clc
rol
rcl
add
call
bound
adc
push
ret
ror
subl
push
sarl
or
cmp
inc
inc
jl
int3
imul
add
lods
pop
mov
lods
add
pop
pop
cmp
pop
pop
jg
mov
sub
push
mov
ljmp
mov
xchg
push
xorb
pop
lret
push
fldenv
int
sbb
ret
and
ret
and
sub
sbb
dec
int3
jl
mov
popf
repnz
mov
ret
adc
insl
sub
scas
int
sub
shrb
in
adc
cmp
test
inc
mov
clc
les
int3
addr16
or
and
lret
sub
sub
imul
sbb
mov
pop
push
cmp
lods
test
jae
push
fisubrs
in
shrl
sbb
jmp
and
push
lcall
bound
dec
loop
cmp
xor
sub
cmp
mov
cld
add
or
add
mov
leave
leave
add
push
sub
dec
adc
sub
aad
scas
add
cmc
in
mov
cmp
popf
xor
or
ror
add
mov
or
ret
sub
mov
dec
subb
lcall
xchg
pop
or
mov
adc
cli
call
xor
cmp
inc
cli
loopne
adc
xor
sub
test
rcrl
loop
or
cli
inc
adc
lret
add
xchg
arpl
mov
sarl
cmp
scas
arpl
dec
in
mov
mov
mov
or
iret
cmp
ret
or
xor
mov
adc
sbb
daa
mov
mov
sbb
sub
ss
sub
testb
addl
xor
mov
mov
xor
arpl
and
mov
xchg
lret
xor
cs
add
cli
mov
or
dec
outsb
je
push
adc
mov
cs
sub
out
test
push
xor
sub
bnd
inc
adc
sub
xor
lods
cs
mov
bound
adc
cmp
adc
ret
adc
push
outsb
sub
add
pop
adc
pop
xor
or
sub
jne
lret
sbb
stos
push
pop
pusha
xchg
in
divb
div
sbb
cmc
ljmp
add
cmp
lea
bound
je
add
jmp
add
enter
sete
xchg
mov
repnz
idivb
dec
repnz
add
int3
in
call
inc
out
stos
mov
das
lret
push
ret
popa
ret
ret
cld
dec
and
das
jmp
mov
sbb
lods
addb
lcall
mov
xchg
mov
and
pop
cs
loop
lret
add
es
adc
cs
fs
je
xchg
ljmp
jmp
test
jmp
or
xchg
rol
push
scas
mov
sub
cmpl
pop
sbbl
arpl
dec
jmp
aaa
sub
orb
jae
push
xchg
fisubl
aaa
cmp
loop
cli
leave
jle
sub
lret
or
lret
insl
test
lea
repnz
out
inc
xchg
packssdw
adc
push
jge
iret
into
jle,pt
push
inc
dec
mov
sub
repz
jmp
sbb
in
stos
repnz
insl
insb
ret
es
jle
add
dec
call
or
and
stos
movsl
ljmp
out
pop
inc
int3
addb
sub
arpl
cmp
push
scas
lods
jnp
sub
test
fstps
jecxz
imul
jecxz
cs
cmp
in
cmpb
stos
insb
insb
or
lods
fildl
xchg
int3
xchg
push
cmp
insb
das
ret
insb
adc
inc
ljmp
adc
cmp
adc
ret
imul
dec
sbb
dec
adc
jecxz
cltd
dec
in
outsl
dec
out
jnp
mov
mov
dec
out
outsl
cs
int
dec
sub
dec
pop
subb
ficoms
lods
imul
dec
int
sub
nop
and
loop
ljmp
or
jae
mov
add
test
in
mov
in
pop
int
nop
int3
adc
push
cmp
mov
arpl
loop
push
adc
jecxz
push
mov
mov
mov
loop
mov
enter
in
ret
fisubl
lea
adc
lods
push
call
push
in
insb
dec
out
adc
inc
out
mov
int3
sub
fdivl
insl
aam
test
bound
stc
push
dec
adc
inc
into
loop
cwtl
xchg
push
cmp
es
pop
outsb
insb
test
dec
aam
and
pop
xchg
dec
push
dec
sbb
inc
mov
out
sbb
mov
pop
das
xor
and
test
or
adc
imul
shlb
and
bound
sbb
ficomps
sub
and
outsl
lea
add
loop
mov
sbb
cmp
jne
mov
ret
xchg
pop
and
or
xor
repz
xor
rclb
cmp
scas
jb
dec
arpl
or
and
xchg
mov
push
subb
jnp
sbb
das
push
movsl
fidivs
mov
or
and
push
cld
push
sbb
cmp
dec
jl
lahf
dec
out
push
dec
in
mov
and
sbb
xchg
loope
js
push
ja
into
adc
sub
or
cmp
push
repnz
imul
cmc
mov
dec
xchg
and
or
mov
test
nop
sti
int3
and
insb
pop
out
and
sahf
cltd
and
xchg
loopne
jp
lret
outsl
add
and
adc
inc
repnz
sbb
sub
sub
jp
insb
xor
sub
push
loop
adc
sub
or
cltd
mov
jge
subl
add
jmp
pop
fidivrl
push
ficoms
adc
and
mov
or
or
mov
xchg
mov
mov
test
and
daa
sub
lock
add
popf
out
mov
inc
pop
dec
test
sub
pop
test
and
loop
jnp
insb
xor
and
jmp
mov
in
dec
jns
pop
mov
sbb
cld
and
sbb
mov
mov
mov
pop
cld
in
lds
push
dec
aas
out
clc
repnz
test
cltd
sar
in
inc
or
or
push
jo
das
pop
insb
adc
xchg
sub
or
sub
in
cmp
mov
repnz
inc
outsl
sbb
push
leave
and
aam
pusha
cmp
mov
lret
push
xor
loopne
xlat
loop
fldt
add
lret
mov
sbbl
jo
icebp
add
pop
xchg
cs
pop
ret
push
sbb
and
sub
dec
enter
scas
fs
gs
and
sub
cli
cld
cmpsb
hlt
stos
sub
fsubs
in
pop
call
and
sub
ret
mov
stc
sbb
push
and
shrb
shll
cld
or
adc
inc
xchg
and
lea
cmp
dec
ljmp
scas
jmp
xchg
arpl
mov
cltd
mov
xchg
add
fidivrl
mov
ljmp
test
push
mov
jnp
and
test
dec
xchg
arpl
or
daa
mov
sbb
inc
sub
cmpl
loop
ljmp
fiaddl
jle
or
ret
sub
sbb
out
stos
xchg
sub
mov
inc
push
out
fisubrl
int3
jmp
or
mov
mov
xchg
icebp
push
das
insl
ror
and
sub
and
out
cmp
mov
push
scas
enter
sbb
mov
into
sbb
inc
pop
and
cmp
cmpsb
add
pop
fisubl
xchg
adc
dec
and
add
and
and
and
idiv
fisttpll
ret
push
aam
add
lret
fldt
fidivl
rclb
lods
inc
ret
loopne
out
jecxz
inc
inc
in
pop
out
xlat
aam
mov
pop
outsb
repz
jl
and
test
aaa
adc
ljmp
addb
and
sbb
jle
xchg
dec
push
jmp
adc
fiaddl
cmp
and
in
jle
fbstp
fisttpl
out
sbb
mov
lcall
dec
sub
jo
outsb
xchg
out
into
cld
sub
lahf
cmpsb
and
ss
imul
out
mov
and
pusha
mov
dec
rorb
sub
or
sbb
xchg
xor
xchg
cmpb
ret
inc
sahf
mov
bound
push
hlt
cmp
and
lret
scas
out
xchg
dec
pop
cs
pop
es
shll
insl
inc
mov
dec
push
ffree
pop
sub
data16
and
in
xor
or
and
sbb
out
sub
pushfw
xor
push
sub
sti
cmp
adc
and
call
rcl
mov
and
push
jecxz
xlat
sbb
and
out
iret
add
mov
push
scas
adc
aaa
sub
and
notb
lret
arpl
jae
add
add
dec
sub
add
mov
pushf
iret
xor
sub
in
jecxz
lods
xchg
dec
sbb
mov
and
or
xor
xchg
push
insb
add
icebp
loope
das
dec
xchg
outsl
mov
stos
push
sub
mov
sbb
fistpll
dec
cltd
and
jae
cmpl
push
hlt
fdivl
stos
scas
scas
and
cld
inc
dec
cli
call
jnp
rolb
push
inc
cltd
repnz
pop
pushf
mov
adc
pop
xchg
mov
and
dec
sbb
lcall
andl
movsb
lcall
out
cwtl
sub
es
dec
repnz
lea
test
add
add
rorb
mov
and
sar
dec
call
mov
push
sub
mov
and
ficomps
dec
lods
lds
test
push
insb
outsl
inc
push
mov
mov
outsl
out
scas
dec
pop
or
repnz
add
repnz
scas
add
mov
pop
cltd
pavgb
adc
add
test
in
cmp
insb
aam
mov
sub
sbb
mov
push
fs
and
fsubr
adc
daa
dec
and
inc
test
push
and
aas
lock
jecxz
pop
sbb
fucom
cld
jg
ret
dec
jnp
pop
sub
sub
ficoms
adc
jnp
out
pop
and
in
jae
sub
xlat
test
mov
push
lea
add
aad
and
ret
and
sahf
xor
scas
in
dec
add
fiadds
sub
adc
outsl
xchg
in
shlb
aad
pop
and
adc
jmp
pop
jae
and
jecxz
sbb
shlb
cmp
mov
xchg
imulb
test
cs
and
popa
sbb
inc
xor
stc
mov
out
xchg
and
xchg
cmp
cltd
cmp
and
push
lret
scas
mov
and
sbb
stos
add
jno
in
cmp
or
outsb
dec
jmp
or
out
lods
test
push
and
cmpsl
and
and
sbb
pushf
sub
and
jl
lea
sub
sub
inc
icebp
popl
dec
jae
sub
ds
push
in
xor
pop
and
push
xchg
xor
fldt
pop
ret
mov
ja
xchg
add
lret
sub
and
sbbb
or
int3
and
push
mov
test
and
mov
pop
stos
js
out
mov
pushf
add
movb
xor
push
mov
or
jns
das
mov
and
sub
xchg
adc
ljmp
sub
rclb
scas
pop
out
mov
fs
sbb
cs
popf
push
pop
aas
adc
stc
pop
mov
test
test
add
xchg
push
cli
xchg
jl
sub
loopne
cmp
push
and
loop
adc
sub
repz
push
push
xor
ljmp
das
pop
inc
inc
and
rorb
adc
mov
scas
cld
sbb
sbb
cmpl
push
add
in
adc
mov
adc
dec
mov
pop
pushf
ljmp
sub
loop
stos
ret
arpl
test
stos
ret
andb
lret
mov
out
in
and
sbb
add
adc
outsb
fistl
and
sub
pop
and
nop
or
add
xor
sub
and
mov
xor
sbb
cmp
mov
in
sub
nop
jbe
inc
dec
sbb
push
lret
pop
mov
xor
fsubrl
xor
sub
icebp
sbb
mov
and
dec
xchg
and
inc
fadds
divl
and
pop
outsl
push
sub
arpl
and
fwait
and
stc
mov
dec
mov
int
add
sub
scas
sbb
leave
push
jae
sbb
dec
and
push
pop
push
sub
mov
cltd
imul
fprem
lcall
es
mov
add
jmp
push
ret
out
fimull
mov
dec
jmp
jmp
jmp
lret
pop
cld
mov
arpl
dec
outsl
insb
xor
outsl
rol
in
enter
cmpsb
push
int
push
or
test
insl
lea
cmpsb
je
push
insb
sub
xchg
sti
sbb
dec
data16
add
mov
sub
dec
and
ret
xchg
sbb
and
dec
add
mov
mov
jb
lret
sub
xor
mov
mov
mov
loop
xor
mov
lcall
rcrb
sub
xor
lahf
stos
out
push
push
lahf
jno
dec
int3
into
arpl
pop
dec
mov
and
pushf
xor
push
ret
or
cmp
cwtl
pop
mov
sbb
and
add
lods
jecxz
iret
sub
or
cltd
test
dec
add
shl
subb
ret
sub
xchg
lods
lea
in
lods
mov
aad
std
clc
movsb
sbb
cmp
sub
inc
xor
adc
sub
dec
and
ret
lret
or
test
mov
lret
shr
mov
pop
aad
shl
sbb
adc
and
pop
mov
xchg
stos
inc
add
lret
lods
insb
in
cmc
jecxz
push
cmp
dec
lods
fs
pop
mov
xchg
daa
cmpsb
dec
dec
mov
xchg
cmp
je
out
subb
cmpsb
dec
pop
mov
add
cmp
sub
into
inc
hlt
sarl
sub
in
psrld
repnz
mov
sbb
mov
sub
mov
dec
int
cmpsl
clc
push
adc
push
lahf
push
movsl
mov
sbb
hlt
call
in
jmp
mov
adc
rcrl
repnz
mov
sub
adc
sbb
divb
aaa
pop
sbb
mov
aam
arpl
shll
xchg
xor
or
iret
daa
out
imul
cs
push
jno
imul
adc
push
sahf
enter
ret
shlb
sbb
fs
add
ret
lods
sbb
mov
jno
inc
sub
mov
mov
orl
push
mov
bnd
lock
cmp
lods
pop
repnz
push
pop
pop
or
ss
rcrl
lods
mov
push
outsb
sbb
loopne
adc
push
je
aam
mov
sub
mov
insl
dec
xchg
imul
adc
mov
jae
rcl
xchg
pop
mov
inc
jnp
xchg
jmp
xchg
add
out
or
jmp
mov
pop
stc
adc
or
sbb
add
fwait
sbb
add
fwait
mov
fiaddl
cmp
or
adcb
loopne
arpl
ret
stos
inc
sub
mov
dec
sar
ret
fsubl
ret
mov
cmp
or
xor
arpl
jp
mov
sarl
jl
mov
nop
lods
xor
xchg
loop
dec
sub
mov
jl
mov
push
std
mov
adc
xchg
jb
scas
mov
sahf
arpl
mov
dec
aas
or
dec
jl
js
loope
addb
movsl
adc
dec
dec
or
or
add
dec
les
sub
mov
push
loopne
pop
push
ds
lods
push
push
sbb
add
jecxz
xlat
ret
mov
in
and
jl
inc
es
out
out
cmp
scas
pushf
loopne
into
mov
test
cli
push
lods
sbb
into
shrb
repnz
xor
lods
hlt
adc
jp
cs
mov
outsb
inc
add
test
or
sbb
and
repnz
enter
test
dec
mov
mov
arpl
ds
and
loop
mov
jo
cmp
fisubs
jae
into
xor
push
fcmove
mov
push
adc
jmp
mov
ret
jl
ds
cmp
push
stos
add
shrl
add
jl
adc
hlt
jecxz
xor
in
lds
dec
jge
push
pop
adcl
enter
ljmp
jecxz
imul
add
lods
jg
dec
cld
in
imul
mov
xor
loopew
stos
andl
mov
fwait
mov
jecxz
arpl
imul
or
stos
push
arpl
inc
sbb
imul
mov
add
xor
sbbb
adc
imul
fwait
adc
add
jl
adc
add
jl
adc
sarl
cli
add
jl
adc
add
jl
adc
jb
outsl
push
xchg
ret
push
mov
inc
adc
adc
arpl
mov
imul
add
loop
mov
scas
pop
loopne
out
scas
inc
and
loopne
out
cld
addr16
js
add
xchg
cmp
mov
sbb
mov
fisubrs
xchg
push
or
and
sahf
xor
sbb
inc
adc
subb
mov
adc
mov
pop
dec
sbb
ja
clc
andl
push
std
mov
rclb
xlat
mov
sahf
arpl
adc
xlat
repz
sbb
mov
adc
outsb
sub
sub
lods
add
test
fimuls
ds
and
lods
hlt
cmp
dec
hlt
or
das
addr16
test
fisubs
xchg
or
ret
outsb
rorb
cmpsb
decl
sub
add
pop
popf
cli
negb
push
sbb
rolb
insb
inc
mov
adc
dec
mov
rsm
cmp
out
push
loopne
sub
ds
imul
push
lods
mull
sbb
adc
mov
adc
adc
adc
adc
push
cmp
add
or
push
and
mov
mov
adc
ljmp
jmp
lods
clc
sub
dec
das
sahf
iret
cld
dec
movsb
cld
or
out
inc
xchg
dec
xor
mov
shr
or
mov
fs
xor
xor
xor
xor
push
mov
cmc
andb
xor
in
jb
mov
jmp
adc
int
decl
lret
imul
sbb
nop
dec
repnz
rcrb
sbb
aas
ljmp
mov
pop
out
xchg
loop
loop,pn
in
lods
adc
and
in
adc
test
or
or
mov
and
sti
push
imul
or
pop
iret
xchg
add
test
in
ja
push
test
loope
xchg
dec
arpl
aam
loopne
pushf
incb
inc
or
test
sti
bound
jae
xor
repnz
repz
ja
dec
cmp
fwait
xchg
lret
sbb
outsb
or
hlt
push
test
wrmsr
xor
loop
pop
repnz
mov
lods
addr16
add
lret
push
or
inc
imul
addl
test
std
jp
add
push
mov
ljmp
jmp
subl
add
loop
add
jle
adcb
popf
mov
xchg
push
mov
and
push
lret
xor
add
pop
or
shr
es
inc
add
xchg
leave
add
clc
inc
loope
sbb
nop
ret
decl
push
dec
out
dec
movsl
loopne
vandnps
pop
stos
jl
lret
dec
arpl
push
cltd
loope
sub
mov
xor
repnz
ret
sub
lods
imul
xchg
xchg
adc
jecxz
adcl
shr
xchg
lods
push
insl
xchg
dec
int3
lods
cs
ss
clc
inc
loop
sbb
mov
test
loop
and
hlt
es
ficompl
popa
sbb
sub
push
sub
and
push
jmp
xchg
fcoml
lds
nop
clc
adc
xchg
stos
xchg
sub
test
mov
popf
mov
arpl
inc
xchg
jo
orb
cmpl
andl
sub
lea
or
mov
repnz
les
stc
xor
and
test
mov
xor
mov
cmp
cmpsl
pop
and
imul
and
ja
dec
and
in
xor
insl
ds
daa
outsb
sub
adc
and
icebp
push
shl
and
aad
rcl
push
mov
mov
cmp
push
and
fwait
pop
xchg
shll
jb
dec
shlb
shll
inc
insl
movb
and
int
dec
or
xor
leave
and
dec
sub
icebp
repnz
leave
lock
neg
jo
in
not
ja
jle
std
adc
jl
pop
xchg
jae
lods
repnz
jno
sub
pop
pusha
pop
out
mov
and
xchg
xlat
push
fcoms
nop
lret
adc
xchg
in
je
mov
add
cmp
and
outsl
xchg
pop
xchg
je
inc
andb
xor
das
adc
sbbb
and
aaa
out
mov
ss
mov
in
ret
mov
xor
andl
add
adcb
cmp
mov
or
daa
pop
cmpsl
and
push
mov
mov
sub
cmp
and
shl
push
repnz
shr
push
sub
xlat
and
cmp
mov
jns
pop
jecxz
shlb
inc
shll
cmp
inc
pop
xchg
mov
mov
dec
xchg
sbb
dec
jp
ljmp
ljmp
mov
jae
mov
inc
or
pusha
or
add
cli
jo
mov
inc
lock
add
stos
lahf
mov
jmp
push
arpl
mov
fisttps
popf
jae
mov
test
mov
stc
jb
mov
repnz
xor
cli
scas
xor
leave
jae
imul
cmp
xor
mov
test
lret
and
out
insl
push
jge
idivb
fadds
sub
pushf
imul
mov
adc
dec
cs
test
repnz
pop
push
add
in
fmul
decl
out
cmp
lods
sar
mov
sub
out
or
call
cli
sbb
movsl
cmp
ljmp
mov
adc
clc
xor
xchg
mov
call
jmp
mov
sub
into
mov
call
pop
lcall
inc
lcall
pop
cmp
jns
push
xor
cltd
fnstenv
ret
call
adc
loop
mov
add
test
cmp
xor
mov
repnz
int3
mov
cs
mov
rcll
adc
shlb
ret
pop
dec
and
lret
loop
sbb
rcll
fs
pusha
pop
loope
adcb
mov
cli
arpl
loop
mov
int
bswap
jl
jae
sub
sbb
rclb
add
int3
ret
hlt
std
mov
daa
and
add
popf
test
mov
std
stos
test
cmc
sbb
aad
xor
movsl
nop
pushf
inc
nop
adc
js
mov
pop
insb
dec
lods
cmp
fmull
inc
cmpsb
mov
mov
mov
cltd
arpl
stos
xor
loopne
dec
repnz
scas
jb
fisubrl
je
sahf
or
aas
cmp
jmp
inc
loope
cmp
ret
xor
sbb
cmp
ljmp
adcl
adcl
or
cmp
xchg
or
jmp
xor
bound
xor
jae
or
xchg
test
fnstsw
sub
jle
lods
pop
jl
lret
das
and
in
or
jae
test
mov
aaa
jnp
jge
sub
bound
ret
rclb
mov
xor
and
and
movsb
adc
sub
lcall
fistl
fwait
pop
cwtl
push
xor
xor
cmp
add
xor
xor
rolb
add
and
mov
ds
repz
add
and
ljmp
and
mov
xor
out
lret
scas
cmp
rorb
inc
or
ret
sub
aam
xchg
test
jns
jge
jg
enter
into
imul
mov
jle
cmp
adc
jecxz
xor
pop
cmp
inc
push
jge
jb
cmp
sub
or
imul
mov
leave
addb
inc
mov
sbb
push
dec
repnz
mov
subb
and
pop
jbe
clc
cmovae
pop
sub
fidivrl
lea
cld
leave
add
andl
imul
xor
outsl
sub
mov
xchg
fsubrs
sbb
mov
loopne
scas
cltd
pop
lret
push
mov
daa
fwait
xchg
and
cld
ret
andb
rolb
sub
movsb
mov
lock
pop
jae
insb
cli
sub
inc
dec
mov
ds
movsl
arpl
lret
add
add
sbb
ljmp
aad
dec
into
jb
call
fstpl
cmp
mov
fsubl
cs
mov
pop
nop
push
jns
test
enter
repz
jp
fdivrs
dec
mov
jecxz
xchg
and
aad
mov
mov
jge
mov
scas
dec
push
test
pushf
mov
jge
insb
push
scas
lods
pop
jne
stos
adc
pop
addr16
push
push
xor
mov
mov
ret
lea
cmp
outsl
jge
push
ret
and
movsb
xchg
lret
mov
push
pop
adc
sub
enter
loop
inc
and
imul
repnz
and
andb
mov
arpl
cmp
push
and
bound
mov
test
jmp
mov
mov
dec
insb
xor
push
rcrl
jle
add
jne
jo
daa
pushf
into
xor
arpl
add
adc
mov
call
pop
sub
fildl
cmp
and
mov
in
add
mov
mov
inc
pushf
or
pop
cmp
cmpsb
jnp
js
mov
rcll
mov
or
pop
adc
call
and
in
sub
push
cld
repnz
dec
xchg
fwait
rcrb
pop
push
or
push
mov
stc
enter
mov
ss
add
stc
xchg
mov
jbe
mov
int3
call
lods
orb
sbb
xor
mov
loop
pop
insb
add
mov
jl
insb
mov
jmp
xor
lods
inc
mov
sub
daa
ret
inc
fdivrs
out
ret
loopne
adc
addr16
adc
ret
inc
add
dec
imul
ret
mov
sbb
fbld
ret
push
lcall
cmp
pop
push
inc
or
js
add
insb
imul
mov
ret
or
hlt
ret
adc
dec
dec
and
js
dec
add
push
adc
push
aam
js
inc
mov
sarb
test
ret
loop
lret
arpl
xlat
mov
loop
fwait
lret
outsb
sub
mov
ja
ffree
ret
sti
add
dec
pop
xchg
push
push
aaa
cli
das
call
arpl
ja
outsl
jecxz
outsb
shrd
pushf
sbb
outsb
or
ret
xchg
xchg
push
sbb
int
rorb
dec
sub
lret
inc
sbb
test
adc
add
sub
jl
pop
adc
inc
cmp
push
fildll
mov
inc
mov
add
nop
lret
incb
lret
sub
es
rclb
fdivs
stc
lret
cli
ret
arpl
dec
jmp
sub
in
pop
repnz
shlb
add
mov
jmp
arpl
add
push
add
sbb
arpl
cld
xchg
mov
and
sbb
sub
arpl
mov
mov
cmp
and
push
jp
sbb
inc
stos
xor
jns
outsl
sbb
sbb
ljmp
mov
arpl
or
inc
imul
dec
cmp
or
mov
sub
jmp
aaa
pop
and
mov
or
dec
and
fcom
xchg
push
ljmp
cmpsb
xor
pop
adc
cltd
repnz
xchg
mov
jecxz
add
push
arpl
fistpl
push
push
xchg
insb
mov
push
jnp
add
fldt
pop
xor
pop
pop
pop
daa
call
jo
jecxz
loop
xor
shlb
leave
sub
lahf
repnz
xor
mov
sbbb
call
fstpt
insb
movsb
cmpsl
insb
mov
adc
jge
fiaddl
or
fwait
sub
fs
and
adc
decl
mov
pop
jp
pop
mov
imul
rorl
inc
push
jle
jl
mov
inc
jae
stos
add
or
push
incl
scas
fistps
sbb
mov
test
pushf
mov
add
jmp
inc
pop
lea
sbb
inc
lods
loop
mov
ret
adc
and
dec
sub
or
rorb
cltd
cmpsb
sbb
cmp
add
dec
or
cmp
inc
xor
dec
mov
push
stos
in
xchg
jl
movsb
pop
mov
mov
xor
sub
adc
imul
scas
sub
push
cmp
mov
and
cmp
sub
or
movl
arpl
rcrl
pop
sub
lea
sub
xor
addb
mov
aaa
or
or
ss
icebp
jecxz
adc
adc
in
or
jo
or
dec
insb
dec
lret
inc
test
fs
std
mov
sub
lea
shll
std
mov
push
or
in
xchg
scas
std
js
push
dec
in
sbb
aaa
std
mov
pop
or
les
pop
push
mov
ljmp
mov
mov
push
mov
xchg
or
and
xlat
adc
xlat
pop
std
add
push
lods
jl
int3
aad
in
lea
jp
sbb
stos
arpl
out
mov
or
ja
jmp
bswap
cmp
dec
leave
repnz
fdivrl
aaa
jns
nop
xor
mov
stc
jne
adc
fistl
dec
add
cli
rcrl
xor
jle
xor
repnz
fdivr
add
inc
addr16
movsb
xor
adc
xlat
xchg
ljmp
lret
xor
les
xchg
ret
push
clc
mov
fdivrp
mov
mov
lret
cld
push
loop
inc
xor
data16
xlat
jmp
loop
or
and
shr
xchg
sbb
fisttpll
popf
js
cmp
ljmp
adc
test
adc
andb
and
cwtl
shl
or
scas
fstpl
dec
push
adc
ss
leave
mov
scas
jae
in
push
sbb
cwtl
pop
sbb
pop
push
and
pushf
jno
add
pop
lahf
sub
rcll
movsb
push
lahf
mov
or
mov
xor
jmp
loop
idivb
xchg
mov
in
sbb
mov
faddp
sbb
ficompl
push
js
bound
mov
fisubl
insl
add
mov
sbb
dec
mov
test
bound
and
arpl
outsl
inc
or
adc
jns
enter
jle
cmp
pop
xor
mov
call
jo
lods
and
pop
bnd
loop
rolb
lods
mov
push
aas
xorl
sbb
mov
jae
out
in
push
mov
and
mov
ja
jecxz
in
inc
out
mov
xchg
fcoml
repnz
cld
push
lods
hlt
pushf
int3
mov
sub
cld
dec
and
loopne
lret
cli
jbe
jbe
loop
or
xor
loop
vpmacsswd
mov
or
cmp
push
arpl
push
loop
jg
sbbl
inc
fiadds
movsl
dec
pop
adc
lcall
movsb
jae
push
sub
cld
dec
and
adc
push
sbbl
mov
dec
sahf
nop
cmp
loop
enterw
or
jl
ret
mov
aad
jl
test
mov
arpl
imul
cmc
scas
mov
inc
dec
sub
hlt
mov
lret
sub
dec
add
inc
daa
dec
xor
push
jnp
pop
cltd
aam
mov
cmpsl
mov
mov
push
jo
negb
arpl
sbb
scas
arpl
ret
cmp
sbb
lods
mov
idiv
add
push
gs
cli
mov
xchg
andb
jle
jbe
inc
dec
push
imul
cmp
mov
xchg
cmp
xor
push
sub
ret
sbb
mov
push
fidivrs
dec
add
add
movsb
inc
mov
push
sub
push
jle
ret
popa
inc
jmp
fwait
or
sbb
gs
xlat
test
dec
fwait
inc
jmp
imull
jae
mov
fildl
hlt
or
arpl
mov
insb
cmp
jl
push
push
ret
mov
and
or
sub
lcall
lods
sbb
mov
push
mov
jmp
lea
pushf
mov
sbb
clc
ret
nop
dec
insl
loop
movsb
ss
and
pop
ret
es
sbb
insb
push
lcall
adc
sbb
sub
sbb
dec
imul
jo
ds
mov
pushf
add
jecxz
pop
jecxz
cwtl
pop
mov
sbb
sub
fisubrs
xchg
pushf
xabort
sahf
lahf
cmp
ret
push
jmp
aad
dec
cwtl
mov
mov
cmp
in
loopne
lret
xlat
push
xchg
xchg
fimull
shrl
out
mov
xchg
xor
xor
jns
or
sbb
add
rol
inc
inc
jmp
mov
nop
mov
clc
jl
cli
lahf
imul
mov
inc
sbb
rol
jg
jmp
jae
dec
imul
loop
cltd
cmp
push
adc
dec
adc
dec
pop
or
pop
in
loopne
pop
int
mov
pushf
ret
and
scas
and
pushf
ret
lods
push
mov
dec
idivl
lahf
loop
cltd
xchg
xor
jl
jbe,pn
cmp
imulb
addb
mov
fists
sub
add
lret
ret
in
cmp
mov
jecxz
cs
fistl
jo
fisubrs
dec
pop
int
xchg
mov
or
jbe,pn
and
je
cmp
mov
xor
pop
mov
gs
jge
aam
jne
in
dec
insb
add
add
icebp
ss
sub
cmp
xchg
and
dec
sub
mov
roll
je
dec
mov
push
mov
dec
pop
and
cmp
into
fwait
cld
add
push
lret
mov
movzwl
in
sub
cmp
jmp
cli
lods
sub
mov
sbb
sahf
subb
add
adc
je
out
add
scas
xor
insb
cli
push
stos
ret
int3
scas
cli
cli
mov
imul
inc
mov
insb
sub
in
shl
or
or
adc
fildl
rcrb
dec
xchg
stos
popa
ds
sub
xchg
sub
sbb
mov
xchg
jb
jno
add
mov
adc
xor
clc
leave
mov
mov
int3
sub
loopne
dec
push
mov
cmp
mov
or
push
sbb
fidivrl
std
push
sub
cmpl
cld
jmp
out
enter
jecxz
arpl
xchg
adc
cltd
mov
and
movsl
sbb
mov
pop
loopne
scas
lods
cmp
sub
lock
lret
mov
pop
ret
mov
sub
and
mov
ret
test
push
cmp
sub
sbb
mov
call
dec
jae
notb
or
pop
imul
mov
jmp
arpl
jecxz
and
xor
xor
xor
gs
cld
xchg
jne
push
dec
loop
mov
xchg
jnp
add
sbb
pop
xor
das
sub
jecxz
mov
jae
mov
lods
arpl
adc
or
inc
in
icebp
push
sti
mov
mov
adc
inc
fsubrl
sub
mov
dec
xchg
adc
jp
cmp
or
push
addb
mov
aam
adc
mov
div
in
inc
jns
mov
stos
xor
inc
movl
lds
outsb
or
sub
mov
add
out
mov
in
call
pop
mov
push
push
ret
iret
mov
add
cmp
mov
xor
lods
sub
push
repz
sub
stc
mov
xor
inc
nop
sub
xor
sahf
ret
popf
insl
ret
or
mov
cwtl
sahf
add
push
jecxz
mov
loop
adc
adc
dec
fwait
mov
cltd
push
arpl
sub
ret
mov
mov
aaa
push
icebp
gs
and
in
mov
jmp
lret
imul
in
sub
cltd
ja
sbb
cmp
jno
sbb
aam
stos
add
mov
adc
sub
adc
mov
xchg
mov
out
pop
and
dec
and
jmp
mov
fdiv
cld
iret
jp
cmp
loop
pushf
mov
pop
sbb
mov
push
mov
in
stos
arpl
ret
xchg
lahf
dec
mov
sarb
mov
shl
repz
sahf
dec
sub
mov
sbb
pop
add
test
sub
aaa
xor
cmpsl
lret
push
mov
shrb
push
push
repz
sbb
repz
pop
mov
mov
daa
jmp
or
fdivs
mov
decl
push
push
xor
sub
jo
iret
fiaddl
xor
sub
aas
sbb
mov
movsl
sub
or
push
stos
adc
mov
jmp
dec
sbb
inc
repz
test
imul
mov
lods
xchg
lcall
xor
sbb
cs
add
ret
loop
adc
mov
or
push
push
add
fisubs
pusha
cwtl
mov
pushf
inc
cmp
dec
xchg
sbb
adc
add
pop
xchg
ret
das
insl
imulb
jg
jb
mov
jae
scas
nop
push
pop
or
mov
test
push
icebp
pop
or
mov
icebp
call
popl
in
nop
mov
test
sti
mov
lret
push
pop
addr16
sbb
fdivrs
stos
stc
mov
mov
std
mov
pcmpeqd
imul
imul
cmpsb
sbb
ret
out
and
scas
add
mov
sbb
jns
add
mov
cli
cmc
inc
arpl
push
inc
fldenv
xchg
jb
lds
sahf
jmp
lret
add
xchg
cmp
pop
andl
add
cli
sti
imull
and
loop
je
push
sbbl
pop
mov
adc
ret
fbld
xor
xchg
mov
fstps
aaa
popf
cmp
sbb
adc
loop
dec
movsl
or
iret
sub
or
lret
add
dec
inc
add
out
jns
and
mov
lods
lret
adc
divl
clc
repz
popa
mov
rcrb
movq
aam
mov
adc
shr
inc
pop
xchg
xchg
ret
push
and
xor
aad
lcall
out
test
sbb
lret
mov
xor
mov
and
mov
push
clc
lret
sub
roll
jb
push
xchg
in
rorb
mov
xchg
push
or
inc
cmpsl
inc
mov
pusha
rclb
mov
not
clc
in
je
push
and
out
bound
mov
xchg
dec
and
jp
jno
imul
or
push
or
jle
sub
and
ucomiss
mov
hlt
pop
sub
sub
jge
cld
mov
inc
faddl
repz
les
push
xchg
test
cs
pop
dec
insb
int3
jl
fidivrl
hlt
xor
loope
ret
inc
enter
stos
pop
arpl
mov
movsl
mov
cwtl
sub
cld
xchg
bound
jb
je
fisubrs
mov
mov
inc
or
cmpl
sub
je
idivl
jl
out
daa
dec
jmp
xchg
inc
and
cmpsb
xchg
pop
sub
loopne
out
loop
sbb
xor
mov
jnp
stc
out
jae
repz
clc
dec
mov
clc
cwtl
stc
lcall
fldenv
sbb
jge
jp
adc
pop
hlt
nop
insl
xor
stos
loop
dec
lods
test
xor
sbb
or
jo
add
das
out
mov
cltd
loop
into
hlt
je
dec
xchg
rcll
or
pop
loop
enter
xchg
dec
aaa
testb
mov
push
pop
add
jne
sbb
outsl
or
arpl
minps
int3
mov
iret
leave
mov
jno,pn
das
nop
mov
in
jg
imul
dec
aam
jecxz
mov
into
or
xor
cwtl
add
cmp
into
and
mov
mov
pop
sub
or
cmp
repnz
ds
repnz
mov
inc
iret
xchg
imul
repnz
sub
int
ja
jecxz
lahf
cmpsb
stos
push
sbb
xchg
pop
or
xor
inc
fs
stos
cli
cmp
loop
push
hlt
arpl
leave
das
mov
adcb
push
jg
scas
dec
cmpsl
adc
adc
es
gs
jbe
dec
xchg
test
movsb
stos
jne
sub
lahf
sub
popf
pop
and
sub
xchg
jns
hlt
or
inc
xchg
add
adc
cwtl
and
ret
lret
sbb
sbb
cs
dec
imul
scas
mov
lods
arpl
sarl
adc
repnz
push
jns
fstp
mov
or
jmp
test
cmp
adc
shrb
cmpsb
ret
loop
sahf
xor
movsl
fwait
shlb
jge
adc
test
mov
push
push
jb
pop
jo
or
shll
sub
out
adc
jbe
fldl2t
mov
leave
shlb
mov
rorl
roll
ret
lea
dec
push
or
negb
ret
or
ljmp
repz
aad
loope
gs
loopne
aaa
std
mulb
and
xor
jg
aam
cltd
negl
sub
lods
into
rol
ljmp
faddl
lods
mov
stos
mov
xchg
rorb
and
frstor
popa
push
cld
mov
jmp
mov
rcll
ret
mov
adc
push
sti
repz
sbb
aas
xchg
mov
sbb
sub
shl
jle
dec
dec
rcrl
sub
jl
add
add
test
xchg
sub
xlat
pop
mov
push
mov
jo
and
jle
jb
sub
aas
cmpsl
mov
mov
stc
sub
or
dec
and
and
lds
mov
ret
push
adc
pop
add
in
mov
mov
and
push
and
shrb
mov
mov
push
dec
xor
or
xor
jmp
push
xor
pop
cmp
mov
fldln2
arpl
mov
imul
lods
cmp
dec
mov
mov
and
fwait
sub
add
sahf
cmp
movsb
int3
fdivrp
gs
pop
dec
push
lea
xor
jl
aad
pop
dec
dec
cltd
dec
arpl
cmpsb
sbb
sub
or
add
and
xor
aaa
pop
and
push
addr16
fistl
out
push
sbbb
shlb
inc
mov
add
push
in
lds
dec
test
jp
sahf
rorl
scas
add
repz
pop
or
pusha
mov
test
mov
and
fbld
mov
xor
mov
cs
dec
pushf
mov
fldenv
fwait
cs
mov
xorl
insl
jbe
shlb
jecxz
ret
pop
mov
cltd
mov
cmp
xchg
loope,pn
cmpsl
push
xchg
test
cld
dec
xlat
in
cs
daa
shlb
aaa
icebp
push
push
faddl
cld
je
mov
mov
sahf
jbe
shrb
lret
cs
ljmp
mov
gs
jno
mov
loopew,pn
gs
popl
daa
lds
push
cmp
pop
insb
cld
rcll
bound
xchg
jl
out
push
pop
insb
and
sub
or
add
pop
jnp
pop
cltd
and
cmp
out
jno
nopl
sar
dec
push
cmp
mov
pop
lahf
mov
mov
xchg
loop
jmp
push
pop
imul
jge
cld
je
cltd
push
jae
shrl
pop
cld
fwait
iret
mov
pop
and
cmpsl
repz
cmp
iret
sbb
push
jmp
in
icebp
xlat
sub
sbb
das
sbb
jb
daa
xor
fcmovbe
cmpsb
adcb
mov
loop
imul
dec
imul
mov
in
mov
jl
mov
int
mov
sbb
adc
fwait
sub
xor
xor
fiaddl
repnz
dec
shl
fsub
stos
popf
xchg
fmull
adc
stos
test
cmpsb
jne
xor
fcoml
lcall
xchg
pop
mov
loop
inc
iret
or
dec
pop
sbb
push
ret
or
repnz
hlt
dec
js
mov
ret
jb
pop
int
lods
lcall
sar
dec
xor
icebp
push
mov
lock
or
xor
aam
arpl
or
add
inc
add
adc
and
mov
push
and
test
adc
mov
cmp
sub
mov
adc
jb
adc
sti
ret
adc
mov
loop
inc
xor
jmp
adc
outsl
ljmp
bound
sub
adc
sub
mov
lods
pop
fwait
repnz
pop
pushf
lods
cmp
insb
ljmp
ja
ljmp
sbb
and
lock
shl
arpl
push
lahf
dec
and
adc
jno
pop
pop
andl
xchg
jmp
cltd
sahf
shlb
cltd
jb
orb
mov
bound
cmpsb
imul
insb
mov
in
jmp
mov
imul
lea
orl
cmp
sbbl
push
in
cmp
in
cwtl
pop
lahf
mov
lret
enter
in
ljmp
mov
leave
jge
mov
and
add
and
cmp
leave
push
fstl
jmp
insb
xchg
xchg
in
jg
push
inc
mov
repnz
test
in
loop
adc
scas
int
movsb
add
add
aam
lahf
outsl
fsub
xchg
mov
test
js
int3
pop
outsb
fidivrs
and
xchg
test
push
sbb
sub
dec
aas
mov
rcrl
sti
stc
repnz
or
sbb
sbb
shrl
aad
or
cmp
stos
mov
jae
mov
das
arpl
cmc
adc
lret
clc
ret
stos
stos
inc
insb
and
orl
inc
das
xor
mov
ret
adc
hlt
mov
lods
repnz
cli
or
mov
lods
fsubr
and
mov
or
or
mov
fstp
sysexit
and
call
push
add
loop
add
aas
outsl
repz
add
xor
push
xchg
inc
sbbl
mov
lods
mov
xor
cmp
ds
mov
cmp
lods
fidivl
cmp
or
adc
xchg
scas
stos
call
test
mov
stos
mov
or
push
mov
adc
nop
sub
jne
cwtl
sti
xor
cmp
sbb
xchg
mov
orb
ds
adc
or
pop
mov
mov
loop
mov
test
fsubl
call
adc
cmp
lahf
jns
jg
out
fbstp
add
andb
out
sbb
test
xchg
xorb
bnd
xor
test
out
fnstsw
rcll
and
pop
sbb
clc
add
fwait
or
cmp
outsl
cmpsl
sbb
jl
sarb
jae
or
cmpl
jmp
inc
aad
lock
push
add
or
xor
push
cs
movsl
test
push
inc
fcomps
scas
cmp
push
out
subl
sbb
sahf
fisttps
loop
fmuls
pop
outsb
sti
in
rclb
or
cs
cs
xor
sub
rcr
pop
out
movsb
pop
sbb
cmp
outsl
je
insb
leave
inc
or
jle
or
inc
or
sbb
dec
sbb
scas
imul
lock
subb
jb
repz
inc
mov
jbe
sbb
xchg
sbb
lahf
test
movsb
inc
push
fisttpll
int
jl
lea
push
loopne
or
stos
or
mov
out
cwtl
test
push
int3
xor
sub
test
in
int3
movsb
dec
inc
cmp
andb
jmp
cli
cmpsl
call
pop
ret
mov
in
xchg
dec
ret
out
jecxz
fcmovnu
jns
adc
sub
xor
repnz
gs
lret
lcall
lock
xchg
lcall
mov
dec
sub
ficompl
xchg
mov
aaa
sbb
add
lahf
rclb
fdiv
add
cmp
or
push
xorl
push
lahf
hlt
inc
inc
xor
push
fsubrs
into
in
outsl
pop
adc
mov
movsb
ljmp
and
xchg
and
sbb
rolb
adc
cli
repnz
mov
add
cmc
add
dec
push
pop
push
cmp
bound
push
push
and
cmp
repnz
cmp
jbe
sub
add
cmp
sub
sub
arpl
lds
cmp
push
mov
repz
push
test
xchg
sbb
movb
cs
dec
imul
jmp
insb
fwait
jmp
xchg
jmp
daa
dec
shr
stos
adc
int3
and
add
fsubl
adc
loop
xor
adc
sub
adc
lods
movsl
add
pop
ret
loop
in
fcmovne
cs
testb
push
jae
mov
jg
jl
cmp
push
call
testb
pop
clc
stos
lds
add
push
ret
loopne
and
int
arpl
ljmp
add
xchg
dec
ret
jmp
xchg
dec
cmp
and
add
sub
mov
clc
or
mov
scas
clc
adc
xor
mov
add
ret
mov
lahf
push
add
xchg
lock
in
inc
inc
push
aas
loop
aaa
daa
push
xchg
aad
movsl
stos
aam
cli
cmpsl
gs
fsubrs
or
cmp
xchg
sahf
push
add
ds
xor
cld
push
push
notb
sub
repz
ja
push
mov
jnp
push
lea
loopne
and
add
lcall
in
push
push
xor
arpl
inc
cmp
popa
insl
add
jecxz
in
xchg
xor
insl
fwait
clc
cmp
lcall
push
and
jmp
lods
push
fcmovu
ljmp
les
iret
xor
xchg
mov
mov
xchg
fmull
and
bound
xlat
mov
xor
fs
sbb
jp
test
loop
shlb
add
addr16
popf
cmp
into
jmp
sub
pop
push
ja
shl
mov
outsl
dec
jle
addr16
fwait
mov
xchg
fnstcw
push
ds
mov
andb
or
dec
adc
mov
aas
in
xchg
inc
push
call
sbb
shl
jae
roll
push
add
sti
mov
in
and
and
sub
sub
pop
push
icebp
push
xchg
nop
sbb
ljmp
insb
fadd
in
and
fldenv
xorl
sub
sbb
psadbw
push
sub
loop
adc
arpl
bound
mov
stos
add
adc
cmpsl
sub
addr16
ljmp
jmp
xchg
xchg
mov
mov
arpl
repnz
insb
ljmp
bound
adc
jns
push
ja
lock
or
mov
jno
push
fbstp
sub
pushf
push
lods
jl
loop
loop
push
popa
cmp
cmp
stc
adc
jns
rcr
add
cs
outsb
stos
sub
adc
dec
mov
or
inc
jae
and
out
sub
les
sbb
and
or
ja
leave
sub
and
pop
and
mov
and
insb
insb
mov
call
mov
in
cmc
and
lods
jl
mov
inc
sub
in
cs
dec
sub
in
push
sub
sub
lods
sub
sub
sub
outsb
js
and
shrb
jl
and
push
sub
cld
sub
fldt
or
das
or
popa
sub
sub
pushf
sbb
fsubrs
loop
xor
mov
ljmp
mov
orl
sub
cs
lret
or
jp
sub
push
testl
mov
mov
add
jbe
add
jl
pop
test
sbb
xchg
or
dec
loop
fs
cli
jo
add
jp
adc
xlat
adcl
xorl
out
loop
lret
repnz
sbb
frstor
lods
mov
aad
sbb
or
add
arpl
pop
inc
add
cltd
adc
inc
and
shrb
sub
sbb
sbb
test
and
sub
lock
arpl
sub
in
or
sub
subl
mov
dec
cmp
add
je
xor
iret
or
mov
or
jle
data16
and
cmp
in
shrb
cmp
dec
jp
mov
lods
shr
mov
adc
cli
xchg
jnp
fsubl
hlt
fs
xchg
ljmp
fidivs
dec
jnp
popf
mov
and
loop
imul
fdivp
je
subb
std
jp
mov
mov
lods
mov
jecxz
pushf
bound
push
call
data16
stc
subb
add
dec
adc
gs
push
add
in
pop
sub
dec
sub
mov
sub
push
iret
mov
xlat
xor
push
sub
pop
sub
sub
mov
sbb
xlat
stos
int
add
stos
mov
pcmpgtb
loop
ljmp
sub
push
aaa
cmpl
dec
sub
dec
imul
sub
test
lods
aas
dec
jb
arpl
in
movsl
sarb
dec
arpl
adc
cwtl
jno
add
adc
aas
push
adc
sub
sub
push
mov
rcrl
cmove
add
adc
push
mov
mov
dec
mov
jae
jnp
ret
push
out
sub
xchg
loop
adc
fs
in
mov
add
push
in
mov
dec
pop
sub
adc
dec
mov
sub
mov
push
push
outsl
loop
in
subl
pop
xor
xchg
mov
jb
mov
sbbb
lret
test
into
dec
and
fcom
push
pushf
xchg
cmp
xor
stos
sahf
cmp
jmp
imul
enter
xchg
decb
test
adcb
xor
mov
pop
sub
out
pop
sbb
ret
andb
push
jmp
dec
ret
push
xor
jp
lods
jno
in
sub
insb
add
pushf
mov
jecxz
lcall
add
insb
out
stos
sbb
sbb
insb
subl
jmp
add
pushf
lret
jmp
mov
shr
push
and
es
adc
arpl
push
jecxz
pop
cld
xor
lret
int3
push
jmp
repz
cmpl
fwait
cmp
push
jmp
jp
sahf
ucomiss
jb
add
test
push
cs
mov
jmp
int
test
lock
adc
sbb
sub
sahf
mov
pop
jmp
jmp
jmp
adc
pushfw
movsb
push
data16
mov
aas
jecxz
mov
push
push
inc
sbb
stos
xor
cmc
or
sub
add
adc
lcall
lods
in
jecxz
adc
xor
sbb
or
out
xchg
cmp
sub
outsb
inc
mov
es
bnd
xor
stos
sub
xor
fs
mov
cltd
sub
rorb
adcb
and
lods
in
sbb
fs
mov
add
mov
aad
orb
incb
sahf
ret
testl
lods
sub
or
out
sbbl
lds
jmp
movsl
sub
or
fcompl
int3
leave
das
mov
sbbb
push
fcompl
add
mov
movsl
repz
add
xchg
add
add
das
js
adc
mov
orl
into
jne
lods
fs
xchg
syscall
xchg
add
aas
add
into
mov
movb
pop
subb
mov
add
lahf
pushf
rorl
into
sub
add
xchg
insb
add
push
pop
cmp
sub
or
add
fisttps
xchg
shll
push
rorl
or
rcr
dec
jae
fs
ljmp
sbb
fcoml
or
rorb
pop
lods
jecxz
fbstp
loopne
cmp
and
rorb
scas
out
out
cmp
loop
aaa
out
loope
mov
int
insb
stos
imul
xor
hlt
sub
add
xchg
imul
insb
dec
xchg
and
xchg
ret
rcll
addb
mov
xorb
inc
inc
cld
push
jecxz
arpl
addl
xor
pop
testl
in
in
cmp
addb
in
rolb
insb
idivl
jle
test
fucom
out
in
into
das
ds
addb
and
leave
inc
sub
push
mov
movsl
shrl
push
stos
dec
sub
ret
cmp
push
lods
hlt
ror
sub
xchg
mov
pop
adcb
push
popf
ss
pop
lahf
out
clc
adcb
add
cld
test
and
xor
scas
add
sbb
mov
out
and
pop
out
mov
test
or
ficoml
xchg
add
mov
xchg
fistpl
push
test
jmp
sbb
mov
in
leave
scas
inc
push
in
inc
mov
cmp
incl
jmp
mov
pushf
inc
push
jmp
xchg
or
pop
aad
int3
sbb
mov
dec
leave
adc
addb
push
mov
pushf
jmp
mov
mov
mov
jb
jmp
in
sbbl
xor
icebp
cmp
fdivs
bound
fbstp
mov
and
fs
pop
das
xchg
push
ret
fsubs
mov
loop
psrlq
xchg
loop
ret
cli
movsl
lahf
stos
lods
mov
push
std
stos
loopne
mov
outsb
subl
in
sub
lods
scas
sub
cli
jae
outsb
loope
sub
ret
loopne
fiaddl
sub
cli
pusha
in
mov
sub
aam
imul
sub
dec
popa
pop
mov
cli
fiaddl
mov
push
call
sub
aas
inc
mov
sub
sub
sub
sub
fsubrp
ss
pushfw
sub
pop
mov
jp
in
mov
stc
sub
sub
mov
movsb
fmull
xor
jnp
mov
fstl
sub
push
mov
cmp
add
jmp
loop
outsb
cmpsb
test
mov
iret
in
sbb
ret
sub
sub
xor
in
loop
aam
das
call
sub
out
xchg
loope
pop
mov
das
rcr
test
xchg
repz
scas
xchg
cmp
xchg
push
sub
cmc
les
cwtl
in
sub
loop
sbb
stos
add
adc
and
xchg
push
add
cs
adc
ljmp
ljmp
sbb
lods
cmpsl
jnp
mov
dec
aad
sbb
in
lods
mov
mov
into
and
ret
sub
xchg
sub
stos
js
out
sbb
sub
loop
dec
loop
adc
add
inc
in
call
es
xor
mov
in
mov
push
and
call
sub
or
loop
fdivrs
cmp
sub
or
cs
das
xchg
sub
sub
mov
loopne
adc
adc
call
or
push
mov
jecxz
cmpsl
adc
js
cltd
sti
xchg
dec
or
bound
sti
xchg
dec
or
mov
cltd
sti
xchg
dec
or
loope
push
xchg
dec
or
loop
push
sub
add
fsubrl
inc
clc
inc
adc
adc
push
xor
sti
xchg
jbe
leave
gs
xor
xchg
mov
sti
xchg
data16
dec
jne
xchg
mov
sti
xchg
dec
dec
sbb
cltd
sti
xchg
dec
dec
jge
bound
sti
xchg
dec
dec
jne
mov
cltd
sti
xchg
dec
push
xchg
test
loop
xor
push
mov
sti
xchg
dec
or
push
mov
sti
xchg
dec
or
push
mov
sti
xchg
dec
or
push
adcb
adc
mov
leave
gs
xor
sti
xchg
dec
or
loope
push
xchg
dec
or
and
sti
xchg
dec
or
xchg
fs
loop
aas
mov
adc
sub
mov
cltd
sti
xchg
dec
or
sub
xor
sti
xchg
dec
or
push
xchg
sub
or
push
mov
repz
outsb
or
push
mov
sti
xchg
outsb
or
push
mov
sti
xchg
data16
leave
gs
add
paddusb
cmovae
mov
mov
stos
mov
mov
mov
fisubrl
push
or
pop
je
test
dec
lods
mov
push
xchg
loop
lahf
loop
or
pop
int3
clc
mov
adc
mov
mov
xor
sub
test
lods
adc
data16
jnp
cmpsl
jl
loop
and
mov
std
stos
nop
sub
and
in
stc
stos
pop
xchg
loop
popa
add
jp
loop
and
push
jmp
cli
cs
pusha
in
sub
mov
stos
xchg
mov
test
mov
mov
cltd
into
push
das
bound
mov
cli
lods
nop
scas
and
loop
mov
push
in
jle
loop
outsb
add
data16
xchg
jp
loop
or
dec
adc
mov
mov
imul
xchg
add
jg,pn
enter
sbb
mov
lods
ljmp
loope
or
inc
into
add
pop
lcall
bound
bound
outsl
nop
mov
hlt
push
adc
cmc
test
call
fsts
stc
mov
iret
inc
out
pop
loop
and
cli
xchg
call
addr16
jmp
cmp
mulb
push
mov
sub
adc
push
jecxz
jmp
add
out
and
jmp
loop
out
pop
movsl
out
fsub
push
rcll
xor
loop
dec
out
add
in
pop
xchg
loop
fcompl
out
lds
mov
test
xchg
sub
lods
sub
and
loope
int3
mov
jnp
jnp
and
push
sub
imul
xlat
and
mov
mov
mov
push
xor
inc
fisttps
lods
loop
hlt
hlt
test
and
or
aam
cmp
fisttpll
stos
int
add
mov
push
int
in
int3
mov
aad
lods
add
cmc
xchg
xor
cmp
popa
add
mov
xor
cmp
lret
shrb
insb
repnz
fmuls
jne
imul
lret
stos
lea
in
push
cmp
cmp
test
mov
imul
lods
in
js
and
push
fwait
lret
lret
stos
cmc
jb
mov
xchg
add
fcoms
jmp
jmp
test
cmp
xor
sub
sub
stos
dec
mov
adc
in
adc
in
jmp
popf
pop
clc
test
aad
insb
mov
cmpl
lods
push
das
enter
add
lods
pushf
hlt
pushf
rcl
pop
sub
and
add
mov
int3
fdivrs
dec
xor
ret
btc
or
mov
mov
out
and
clc
mov
insl
or
int3
inc
shll
xor
into
xchg
and
mov
lods
cmpsl
int3
in
enter
sub
repz
add
xor
lret
add
orb
leave
mov
aad
inc
mov
adc
das
sbb
in
in
fnstcw
inc
cmp
push
sbb
ret
mov
das
jae
and
and
dec
or
daa
add
lods
xor
sbb
xor
test
fldt
add
lock
sub
mov
arpl
aam
pop
out
repnz
dec
push
sahf
in
aas
fucomp
push
inc
jmp
add
pop
xor
xchg
aam
in
mov
inc
add
lods
cltd
in
dec
dec
jne
int
insb
outsb
lods
jecxz
in
inc
jg
jle
fistpll
sbb
lods
notb
in
add
sti
sub
xlat
pushf
mov
mov
test
js
in
out
mov
addr16
add
sbb
loop
jnp
sbb
repz
rorl
xchg
xchg
std
and
mov
mov
mov
jmp
in
ret
imul
or
push
mov
xor
pop
pause
iret
pushf
sbb
lahf
sahf
int
das
or
cld
test
xor
popl
outsb
hlt
lods
mov
int3
repnz
jmp
ret
scas
fdivs
repz
enter
dec
aam
or
add
push
mov
insb
fidivl
push
aas
jmp
arpl
lods
sbb
lds
jns
mov
xlat
xor
sbb
inc
shll
test
int3
sbb
or
add
sbbl
int3
dec
iret
cs
pushf
test
push
mov
mov
sub
ds
xchg
or
cmp
cmp
fcompl
lea
movsb
imulb
or
push
dec
aam
int3
shll
xor
outsl
aam
xor
sbb
popf
jbe
xor
ret
pop
int
mov
in
mov
in
rcrb
aas
mov
xchg
xchg
or
ret
mov
clc
adc
cld
push
das
xor
push
jb
pop
cmc
inc
loop
insl
sub
testb
mov
mov
sub
mov
jmp
cmp
pop
push
dec
dec
nop
dec
popf
pop
xchg
xor
iret
xchg
or
imulb
sbb
sbb
mov
shl
or
fnstsw
and
or
lret
push
imul
inc
outsb
pop
push
adc
ret
shrl
adc
xchg
pop
dec
leave
xchg
cmp
cmc
in
pusha
imul
mov
mov
fdivrl
movb
pushf
adc
outsb
mov
cltd
xchg
xchg
cmp
and
lcall
lahf
out
jle
pop
inc
xor
xor
ss
outsl
pushf
mov
sbb
clc
jmp
cmp
or
jg
test
ret
aad
cmp
jge
movsl
hlt
popf
dec
nop
mov
or
push
scas
movsl
insl
in
sub
std
dec
fildll
dec
aaa
push
in
pop
cld
fcompl
sbb
in
test
xchg
adc
or
adcl
inc
pop
pop
or
dec
shll
xchg
in
or
add
lods
in
ret
and
mov
mov
jmp
cmp
cmp
push
or
mov
push
fnstenv
mov
inc
pop
cmpsb
jmp
mov
sahf
sahf
sbb
testl
cmp
xchg
sub
in
aas
outsb
mov
dec
lds
pushf
jo
lret
pop
mov
hlt
jp
rcrb
call
inc
mov
inc
xor
test
dec
lret
jmp
pop
test
sarb
cs
add
pop
dec
stc
xchg
jecxz
pop
jmp
adc
into
xor
mov
sbb
into
cmp
add
imul
sub
in
pop
jmp
or
mov
inc
scas
xchg
aad
popl
cmpsb
fmuls
fsubrs
movsb
pop
cmp
cltd
clc
lods
pop
jge
test
pushf
or
add
pop
test
jle
add
dec
dec
add
mov
or
scas
mov
sub
mov
test
pop
lcall
fcmovb
sbb
xor
push
sub
jmp
nopl
ss
les
push
mov
mov
int3
in
inc
lock
repz
mov
lea
in
fisttpll
xchg
popf
insb
add
in
in
mov
ret
scas
jmp
and
aam
mov
in
push
sbb
jecxz
mov
out
pop
xchg
ffreep
loope
xlat
pop
xchg
sbb
test
daa
sbb
xor
push
add
shll
xchg
or
fstpt
mov
popf
fwait
pop
movsl
push
in
xor
lods
push
dec
lret
mov
mov
arpl
mov
add
dec
xchg
stos
adc
sbb
mov
lods
jb
mov
lret
ds
in
cwtl
fdivrl
enter
js
cmpsb
mov
mov
push
cmp
or
rolb
and
mov
dec
mov
ja
dec
sub
insb
in
outsl
push
aas
push
lods
push
test
mov
cmpsb
int3
lcall
cmp
and
sti
mov
or
add
cld
aam
decl
sbb
cwtl
shlb
pushf
pop
out
es
psrad
clc
ja
jb
das
mov
fisubl
cmp
arpl
shrl
lea
rcll
ret
popf
dec
xchg
xor
jp
cmpsb
xchg
xchg
test
adc
sub
sbb
les
test
mov
scas
sub
ret
ds
in
xchg
stc
lahf
cld
aad
mov
js
cmc
jle
pushf
inc
or
lea
ret
or
add
mov
dec
fisttps
insb
xchg
loop
or
aas
repz
insl
mov
nop
enter
cmp
aas
leave
lods
jmp
sbb
test
cld
mov
cltd
test
shr
jg
negb
nop
pop
fstpt
jne
fcoms
outsl
int
repz
in
pop
fsts
jle
push
test
add
cmp
sarl
inc
mov
inc
xor
rorb
pop
mov
pop
pop
pushf
dec
or
in
or
into
mov
sbb
aam
and
xchg
arpl
xchg
mov
cmp
jmp
xor
cmpsl
psubusw
xor
xchg
or
push
mov
aaa
orb
xor
sbbl
ds
jge
pop
xor
or
sahf
enter
adc
std
jg
call
xor
dec
les
add
icebp
iret
shl
cld
xchg
outsb
inc
mov
or
fdivrl
in
scas
push
cmp
cli
dec
mov
clc
or
hlt
ror
lods
aam
iret
test
arpl
int
rorb
ja
pop
jle
xor
push
add
scas
in
mov
adc
loop
pop
xchg
cmp
neg
test
sub
sarb
rcpps
mov
inc
xor
jecxz
aaa
pushf
dec
cld
xor
mov
mov
sub
cmp
lea
std
leave
inc
pop
cmp
je
jecxz
xor
int
leave
cltd
clc
pop
mov
rorl
lods
clc
ret
xor
dec
xrelease
mov
scas
pop
cmp
pop
rcl
xchg
pop
pop
pop
jb
mov
mov
jge
and
sub
add
inc
popf
or
sbb
sub
insl
daa
out
loope
movsl
mov
add
or
movsb
sub
pusha
mov
cmp
fsubs
pop
jmp
mov
sbb
jnp
mov
mov
repnz
add
xor
sub
fistpl
fisttpl
cmpl
jmp
mov
mov
lods
in
fists
cmp
jmp
mov
xorl
fbstp
add
mov
dec
incl
mov
xchg
mov
xchg
ret
ret
repz
andb
mov
test
je
clc
int3
dec
aaa
sub
adc
pushf
xor
mov
je
sbbl
sbb
jmp
jnp
cmp
xchg
les
xchg
dec
dec
xchg
pop
mov
sub
ror
push
mov
dec
sbb
imul
rorb
mov
insb
rcrl
int
push
cmp
adc
sahf
inc
mov
dec
cltd
mov
out
mov
mov
mov
cmpsl
cmp
sbb
lods
jae
aas
fmul
sar
or
insl
fsubrl
sub
int3
push
test
sbb
mov
stc
aaa
inc
mov
stos
sahf
cmp
mov
mov
stos
xchg
cmp
pandn
jbe
lds
aaa
test
rcrb
xchg
xor
sub
fldl
mov
sub
cmc
cmpsb
icebp
arpl
push
outsb
test
sub
enter
mov
dec
xor
pop
or
ror
pop
daa
movb
stc
or
or
xor
lods
or
push
repnz
lret
cmp
push
aad
sub
sahf
mov
lods
repnz
cmpsb
mov
gs
adc
aaa
enter
push
xchg
test
mov
cmp
push
adc
ret
mov
cmpsb
cmpb
rcrb
push
hlt
loop
dec
ret
insl
ljmp
into
mov
cltd
pop
and
push
or
add
lods
push
ret
add
or
in
add
xchg
add
fdivl
in
and
into
popa
outsl
inc
dec
pop
and
xchg
fs
cmp
sub
fnsave
rcll
aad
test
out
or
inc
fstps
sbb
add
addl
cmpsl
std
dec
stos
or
js
adc
and
and
ljmp
mov
lods
mov
std
aad
scas
xor
mov
xor
lcall
mov
mov
jecxz
js
or
xor
add
test
in
adc
pushf
mov
mov
das
mov
mov
fwait
jb
popf
xchg
xchg
add
cmp
fs
roll
inc
orb
pop
xchg
dec
adc
iret
jne
insb
pushf
xor
popf
push
mov
aas
cmp
shll
adc
popf
add
cltd
or
inc
jecxz
in
int
cmp
hlt
ficoms
lea
push
mov
daa
int
adc
aam
mov
pop
push
sbb
sbb
sbb
push
inc
int
stc
je
pushf
in
cmp
imul
movsl
jg
popf
mov
hlt
xorl
push
mov
aam
mov
mov
aam
mov
xor
mov
std
or
es
mov
fsubrl
add
movsb
loope
lods
in
in
xor
or
and
lea
cmpsl
xchg
lcall
int3
pop
inc
insl
fld
cmpsb
daa
pop
scas
xchg
leave
lds
test
mov
and
xor
mov
les
mov
scas
or
cmp
in
test
cmp
sar
ljmp
or
sbb
fnstenv
test
mov
hlt
mov
and
push
cmc
sbb
adc
ret
adc
stc
aam
ds
in
pusha
jge
in
lea
aas
cmp
sahf
xchg
rclb
lods
lock
aas
rcl
leave
lods
jl
ret
int3
lds
mov
pop
cltd
in
mov
xor
pop
xchg
inc
jmp
push
adc
push
stc
ds
stos
push
push
loop
mov
dec
lds
inc
sbb
insl
gs
in
fs
xor
jecxz
fwait
out
sub
pop
movsb
lret
xchg
inc
rcrb
test
add
add
add
or
cmp
mov
xor
int3
sbb
sub
or
cmp
sahf
das
pop
and
sub
mov
and
sub
add
jb
adc
ret
out
cmp
push
inc
push
and
ret
in
repz
in
adc
cmp
and
cmp
mov
mov
add
addr16
test
jae
pop
sbb
push
mov
imul
adc
adc
lret
and
addl
cmp
fstl
inc
fidivl
ljmp
dec
sarb
adc
and
xor
xor
pop
add
mov
jecxz
jg
jge
mov
pop
sub
mov
fisubrs
repnz
hlt
stos
lcall
mov
loop
imul
pushf
xchg
and
pop
inc
arpl
mov
jecxz
sub
cmpsb
jge
popl
stos
jecxz
in
mov
and
sub
push
mov
aad
repnz
popf
lret
sbb
cmc
je
in
xchg
push
jae
jle
mov
repnz
jge
sub
sub
setge
iret
mov
jecxz
push
xor
es
and
adc
sarb
sbb
enter
arpl
cs
lods
shrl
scas
into
das
clc
xchg
mov
into
imul
arpl
insb
inc
bnd
pop
sbb
addr16
popa
aaa
sub
popl
aam
sub
mov
sub
sbb
jo
jne
out
out
sub
and
and
pop
sub
push
adc
int3
out
inc
xor
sarb
mov
in
sub
fwait
pop
imul
cs
fistpll
loop
xchg
or
dec
jmp
mull
leave
iret
fsubrl
test
pop
insb
xchg
repnz
test
jg
subb
jbe
stos
daa
call
pop
lcall
out
xlat
sub
imul
in
dec
pop
lods
and
data16
into
xor
scas
shrl
ret
mov
das
shlb
cs
call
inc
ret
mov
jecxz
in
mov
mov
mov
test
mov
inc
adc
jno
adc
icebp
daa
sub
push
jo
jp,pt
sub
adc
push
adcl
xor
jb
jne
pop
sub
mov
dec
sub
icebp
scas
sub
repnz
mov
inc
jecxz
rorl
inc
push
ret
sub
add
mov
mov
imul
shrl
mov
push
loop
mov
aam
lods
jno
push
pop
mov
adc
mul
insl
repnz
xchg
jcxz,pn
pop
and
mov
mov
sub
insb
daa
mov
cs
inc
repnz
sbb
xchg
xor
iret
dec
sub
cmp
into
lods
xor
cmpsl
lods
push
shl
scas
or
mov
jecxz
add
mov
and
sarb
movsl
push
test
testb
imul
aas
adc
mov
stos
dec
popa
lods
arpl
scas
sub
in
insb
push
mov
dec
sub
lods
mov
add
cmp
mov
shl
cmpb
sub
push
mov
ljmp
and
inc
insb
cwtl
sahf
fs
xor
test
int3
in
addl
sub
sbb
jg
jb
in
leave
outsl
sub
push
mov
xchg
mov
add
push
cmp
cmpsl
adc
arpl
scas
cmp
loope
jb
mov
mov
mov
nop
scas
ret
jp
cmpb
xchg
cmp
loopne
mov
jg
test
rcrb
add
add
jno
lahf
orb
push
sbb
cmpsb
xor
stos
and
test
jb
or
mov
xchg
mov
fisttpll
shrl
or
jmp
inc
cltd
aas
sub
push
mov
adc
mov
in
sub
xchg
sub
adc
or
jae
sub
or
pop
out
mov
js
sub
shrl
fwait
inc
ret
mov
aad
and
jnp
sub
fwait
lret
out
loop
mov
andb
adc
mov
inc
and
call
and
test
fdivl
jnp
jge
repnz
addr16
daa
out
popa
cmpsl
cmp
test
fsubrl
cltd
sub
xchg
scas
call
sub
inc
jge
mov
and
cltd
mov
dec
mov
xchg
outsl
cmp
dec
shl
mov
sub
js
and
push
mov
into
pop
push
push
adc
mov
mov
sbb
cmc
cwtl
std
pop
ss
and
inc
mov
es
stos
sub
xchg
out
adc
sti
and
out
add
cmp
adc
ljmp
hlt
adc
das
ds
push
cmp
mov
and
xchg
xchg
insb
jecxz
push
lds
popf
dec
mov
mov
cmpsb
mov
or
rcll
das
out
repnz
and
jle
push
xor
sub
lret
adc
push
xlat
or
push
cs
jae
mov
movsb
push
mov
sbb
sub
jbe
lea
and
adc
mov
push
call
repnz
mov
arpl
xchg
fwait
jmp
and
sub
adc
mov
adc
adc
sub
sbb
push
ja
dec
mov
push
push
sahf
jle
adc
fidivrl
and
loopne
pop
stos
mov
jno
ljmp
push
push
xchg
push
cli
sbb
and
stos
insl
cli
adc
jge
insb
das
mov
pop
xor
sbb
push
or
sub
mov
sub
rolb
cmp
and
xor
rcrb
insl
lods
add
ret
lahf
sbbb
inc
jp
fcomps
mov
decl
repnz
stos
sbb
int
sub
mov
sub
mov
sub
fstpt
adc
pop
ret
xchg
and
push
mov
jnp
add
pop
xor
sub
push
pushf
insl
test
test
jge
mov
clc
enter
je
and
and
addl
je
mov
xor
add
push
insb
jnp
aaa
sub
cmp
dec
fisubl
fwait
push
loop
test
loop
or
loop
mov
ret
sbb
push
lods
mov
int
in
jge
pop
and
xchg
sub
insb
or
dec
and
jo
jae
xchg
adc
adc
push
add
iret
lea
and
mov
lcall
scas
pop
and
jbe
ljmp
cs
jae,pn
and
and
mov
sub
fdivrs
sbb
shr
push
jl
cmp
loopne
jmp
test
fldt
cwtl
out
push
jl
sti
cli
mov
mov
adc
into
sub
sub
cmpsl
cmc
hlt
inc
lea
adc
push
add
cwtl
scas
out
mov
lea
push
faddl
dec
sub
jle
loop
push
adc
jmp
pop
das
cmp
push
adc
cmp
test
pop
sub
dec
pop
insb
mov
popa
jg
cs
mov
or
in
cmp
cwtl
jecxz
dec
lea
andb
jnp
out
or
out
add
push
test
mov
adc
jp
or
jb
add
add
add
jnp
xor
cmp
pop
adc
cmp
lods
add
out
dec
shl
lods
adc
lret
aam
mov
js
mov
cwtl
pop
push
jecxz
dec
xchg
dec
inc
cmp
mov
test
inc
outsl
dec
shll
mov
sub
cmpsb
jge
in
inc
adcl
loop
rcrb
jp
adc
xchg
mov
lea
jb
test
ror
aam
das
xlat
in
push
in
or
sub
jl
and
lea
or
mov
adc
cmpsb
sub
push
pop
int3
mov
lahf
dec
jnp
pop
push
cmp
jbe
shrb
into
cli
imulb
sub
xchg
push
adc
aad
out
inc
sub
or
das
scas
test
xchg
dec
nop
lods
out
loop
in
sar
jmp
fadds
in
add
hlt
outsl
pop
ret
cld
andl
xor
sti
sbb
mov
aaa
in
lea
imul
shrl
movsb
push
cs
mov
pop
iret
cli
pop
std
orl
inc
sub
scas
les
xor
test
insl
rorb
mov
dec
mov
sub
loop
xor
xchg
ja
cs
fldenv
push
cs
pop
mov
loop
dec
add
xchg
arpl
daa
hlt
imul
pop
sub
pop
in
push
lea
inc
mov
dec
pop
mov
lds
xchg
mov
inc
aad
loop
mov
mov
cmp
xchg
insl
test
ljmp
inc
cli
dec
fbstp
adcl
cmpsl
adc
cmpl
icebp
inc
lcall
push
or
or
loop
cli
inc
sub
ret
mov
and
inc
or
mov
or
call
pusha
xor
scas
xor
lahf
out
push
lea
push
lret
filds
int3
or
pop
daa
rorb
test
loop
add
scas
ljmp
sub
cwtl
fsubrs
sbb
es
nop
les
out
xchg
imul
call
or
nopl
mov
cwtl
sub
pop
jne
cmp
stos
mov
loop,pn
lahf
movsb
add
mov
push
mov
push
lea
jmp
rcr
negl
mov
outsb
sub
lds
and
cmp
daa
lods
ret
iret
call
cwtl
add
jnp
cmovb
cld
daa
loop
mull
mov
mov
sub
xor
in
push
dec
ljmp
das
and
jne
pop
push
in
pop
stc
adc
push
mov
pop
add
andl
movsb
imul
mov
dec
lods
dec
enter
pushf
clc
mov
pop
or
lea
inc
in
test
and
xchg
sbb
push
push
clc
das
mov
adc
cvtpi2ps
imul
inc
mov
xchg
sub
inc
pop
push
sbb
or
inc
loop
jge
push
add
loop
and
ret
loop
sub
fsubrp
add
int3
dec
outsl
jnp
adc
loope
jg
lods
mov
sbbl
and
adc
fwait
sub
js
jecxz
pop
int3
pop
mov
jae
sahf
sub
shlb
das
iret
imul
mov
arpl
scas
mov
outsl
lret
test
dec
scas
int3
jl
and
insb
mov
push
sub
xchg
sub
mov
loop
out
dec
ss
adc
dec
adc
and
int
ret
loop
jl
and
outsb
inc
or
in
mov
out
jecxz
mov
test
rorb
test
pusha
gs
bound
ljmp
or
lea
cs
nop
cmp
pop
dec
sbb
iret
mov
orl
ret
rcll
dec
mov
xchg
adc
push
mov
loop
mov
add
call
arpl
dec
mov
cmp
add
xchg
mov
aam
add
xchg
add
push
sub
inc
or
jge
cmp
in
adc
jecxz
or
sub
jl
mov
or
test
movsl
and
test
push
pminsw
cs
imul
sti
cld
sub
fsubs
add
inc
xchg
iret
add
iret
or
out
or
push
icebp
lahf
mov
pop
loop
sbb
adc
icebp
out
sub
push
dec
mov
adc
sbb
and
out
push
mov
lods
sub
ret
sahf
sbb
shlb
icebp
ds
xchg
insb
cmp
into
int
pop
scas
std
add
lods
add
or
push
sbb
sub
push
inc
or
cmp
test
push
push
xchg
int3
in
shlb
or
stos
push
xor
loop
pop
adc
inc
mov
adcl
lock
adc
in
xor
scas
leave
push
push
cmp
push
das
das
jnp
cmp
aaa
mov
mov
das
loop
cli
sbb
out
push
arpl
add
imul
into
scas
xchg
ret
in
sub
cld
push
xlat
and
pop
out
enter
dec
sub
sub
cmp
xchg
scas
lods
or
stc
imul
in
ljmp
aas
roll
clc
movb
push
loopne
rcll
sub
or
dec
mov
add
push
sahf
call
and
dec
lods
shrl
jecxz
ror
cmp
push
or
jnp
add
pop
push
sub
cli
sub
in
adc
pop
jmp
fisubs
arpl
dec
add
mov
out
inc
fstps
stos
mov
test
sub
out
xor
call
jo
test
scas
mov
in
push
xorps
mov
mov
scas
jl,pn
mov
outsl
mov
sub
insl
or
xor
sub
or
mov
xor
push
rorl
loop
insb
sbb
sub
mov
push
sub
test
sub
mov
sbb
loop
or
add
mov
mov
cli
jge
push
test
or
sub
jae
add
jmp
sub
ret
or
xor
jg
aam
out
mov
pop
fcmovbe
js
sub
add
sbb
pop
aad
adc
jg
xchg
inc
cmp
cld
lcall
mov
jecxz
push
xchg
push
sub
jmp
cwtl
add
mov
push
inc
insb
sub
pusha
fsub
js
mov
mov
jno
or
pop
mov
cs
cli
ret
shlb
sbb
loop
sub
mov
imul
das
bnd
push
adc
or
cmp
cli
mov
sub
shrl
push
sub
push
in
mov
or
push
mov
sub
out
and
imul
cmp
into
call
pop
cld
pusha
daa
arpl
lods
and
add
jmp
mov
ljmp
test
lods
imul
sarl
push
push
mov
add
ret
jo
mov
repnz
pop
test
push
adc
pop
sub
or
push
test
faddp
sub
mov
lods
std
insl
mov
dec
mov
fmull
dec
mov
cs
push
or
in
ficompl
xor
in
insl
push
int3
mov
push
fwait
xchg
cmpsb
call
push
jmp
cmp
and
mov
cmp
xorl
enter
push
cltd
mov
and
inc
xchg
test
mov
cwtl
test
shrb
jecxz
pop
scas
jb
adc
pop
mov
pop
sub
add
leave
mov
in
out
sub
ret
jbe
lods
lods
dec
push
psrld
out
mov
scas
jl
aad
js
mov
or
pushf
in
mov
push
add
mov
in
mov
push
cmpsb
mov
inc
push
mov
outsb
fs
cmpsl
fsubrl
push
jle
adc
stos
das
xchg
sub
xor
sarb
or
loop
sbb
mov
sub
add
sbb
in
enter
or
int3
orb
add
sahf
and
lods
test
adc
adc
scas
out
stc
stos
pop
outsl
in
dec
inc
aas
sub
mov
fs
test
mov
sub
mov
push
call
pop
dec
sub
adc
outsl
sub
popa
movl
sub
dec
loopne
mov
sub
ret
flds
stos
cmp
cs
loop
dec
enter
mov
enter
xor
repnz
sub
adc
lods
mov
cmc
out
sub
xchg
push
lea
out
and
icebp
outsl
scas
dec
ds
xchg
and
xor
les
int3
aam
cld
and
cmp
sti
popf
repz
into
test
out
pop
dec
imul
adc
ss
ja
adc
fsubrs
leave
arpl
mov
sub
es
sbb
sbb
mov
scas
icebp
ja,pn
mov
dec
adc
test
jno
loop
push
xchg
mov
in
shrb
adcl
ret
or
fmuls
add
push
pop
xchg
add
add
roll
loop
and
sub
and
insl
and
xlat
cmp
mov
andb
aam
jecxz
sub
test
push
sbb
dec
add
mov
aas
dec
or
sbbl
add
nop
sahf
test
cmp
xchg
push
loope
mov
push
add
movsl
sub
aad
out
pop
jne
sub
cs
loopne
mov
in
dec
div
adc
fildll
xor
rorb
sub
sub
cs
scas
outsl
std
push
outsl
into
push
sub
or
sti
sub
sbb
pop
lods
sub
mov
fildll
test
fs
out
fsubr
sub
cs
movd
das
xchg
loop
fwait
pop
sub
mov
in
outsb
mov
loop
cmp
mov
jo
mov
or
jg
into
mov
add
push
sub
pop
jns
movsl
jb
cs
sub
push
pop
or
ja
ret
arpl
imul
xchg
adc
mov
imulb
mov
aaa
leave
or
imul
and
nop
mov
das
movaps
and
lret
and
cs
push
stos
pop
sub
loop
push
in
icebp
mov
fmuls
out
orl
cmp
sbb
push
sub
icebp
pop
adc
sbb
or
dec
add
popf
out
and
xchg
cmp
adc
sub
xchg
adc
test
cwtl
shlb
data16
insb
mov
arpl
loop,pn
inc
cmp
leave
cmp
test
popf
cmpsb
scas
scas
cmpb
rcl
and
or
ret
dec
pop
push
arpl
ljmp
ja
dec
fsubp
sub
sub
push
loop
cwtl
into
fs
or
or
scas
cmp
ss
test
pushf
subl
rcrl
addb
in
mov
movsl
out
insl
imul
mov
scas
and
pop
cmc
adc
sub
pop
loopne
or
scas
aaa
lea
dec
int
and
scas
iret
shrb
inc
cmp
fcoml
movhlps
mov
pop
sbb
dec
out
and
and
outsb
jno
and
test
or
cltd
push
mov
mov
fisubs
fidivrs
sub
pop
rorl
aad
sub
cmpb
fldt
ljmp
psrad
dec
mov
jns,pn
mov
inc
cmc
test
jle
and
in
hlt
in
xchg
imull
push
and
je
sub
push
push
test
out
in
mov
ret
fimull
pop
push
mov
and
adc
scas
repz
adc
adc
rorl
push
ret
push
pop
outsl
mov
sub
lods
rorl
pop
int3
mov
xchg
shr
insb
xor
ret
loop
mov
ret
mov
mov
jae
movsl
ljmp
loop
outsb
cmp
mov
cmc
in
push
cmpsl
les
cli
sbb
pop
outsl
mov
jno
sub
mov
xchg
sub
xchg
scas
lods
in
cltd
lahf
in
push
cs
mov
fistpl
add
or
jle
mov
loop
xchg
push
or
or
sub
div
mov
push
dec
jecxz
add
sub
adc
into
std
addr16
in
pop
or
and
inc
pop
lret
mov
lea
scas
hlt
push
mov
mov
sub
dec
push
dec
pop
sbb
pushf
mov
pop
push
sub
dec
cld
dec
sub
mov
dec
cwtl
cs
or
ret
leave
imul
mov
or
dec
push
cmpb
sub
push
or
stos
out
pop
out
nop
mov
add
sub
push
outsl
cmp
jo
or
push
jecxz
clc
xchg
and
add
popf
js
insb
sub
add
mov
insb
sub
imul
push
adc
sub
and
scas
imul
mov
mov
pushf
adc
xor
sahf
mov
loop
xchg
add
or
add
out
out
xchg
outsb
or
in
or
test
or
ljmp
lods
test
xchg
add
ljmp
push
popf
andb
test
xor
mov
mov
mov
mov
jbe
or
insb
push
sub
jmp
cmp
lods
or
mov
push
dec
das
das
addr16
in
or
sub
mov
add
insl
mov
int
push
mov
das
pop
jecxz
fsubrl
xchg
vphadduwq
lea
jo
fwait
dec
jb
cli
pop
jae
mov
dec
mov
mov
fcoms
arpl
out
pop
enter
psubsw
ja
jecxz
mov
arpl
push
xlat
scas
pop
or
lock
rorl
int3
cwtl
lods
push
jmp
arpl
int3
cs
lcall
mov
dec
ljmp
push
dec
sahf
or
out
cs
inc
pop
inc
push
xlat
cwtl
lea
push
xor
inc
cs
push
sub
xor
in
clc
push
add
call
jns
scas
ret
loop
in
shr
iret
loopne
cmp
ljmp
insl
leave
and
and
xchg
adc
clc
sbb
call
push
stos
testb
or
es
and
push
mov
inc
mov
test
lods
sar
ja
sub
dec
lds
push
or
push
or
sub
shrb
mov
into
cld
xchg
jge
add
data16
call
and
push
enter
shll
or
cmp
stos
loop
xchg
aam
mov
sub
or
das
mov
mov
mov
nop
fnsave
dec
in
mov
int
mov
or
sub
push
gs
or
mov
add
mov
jge
sahf
mov
ljmp
xor
xchg
in
add
inc
in
xorb
scas
and
mov
dec
dec
dec
call
call
cli
test
imul
loop
pushf
enter
icebp
js
loop
mov
sub
iret
lods
popa
dec
ja
mov
and
cmp
lods
xchg
push
aas
outsl
dec
arpl
ret
xor
mov
clc
fsubp
sub
or
pop
pop
loop
push
dec
mov
in
scas
dec
pop
inc
push
mov
or
dec
adc
adc
nop
js
push
mov
push
mov
push
scas
mov
cvttps2pi
xchg
dec
enter
loope
jo
out
loop
xor
daa
iret
pop
push
syscall
jae
scas
out
mov
dec
mov
cmpsb
insl
push
adc
shlb
mov
insb
mov
or
and
sub
and
ja
imul
xor
cwtl
or
xchg
or
int
push
mov
inc
jmp
out
xchg
int3
add
dec
jl
dec
lea
cli
shll
dec
fisubrs
pop
rolb
call
stc
in
sub
mov
nop
call
mov
adc
jecxz
dec
sub
cmp
andb
inc
jo
int3
fadds
sbb
out
dec
fldcw
packuswb
scas
dec
xor
mov
push
mov
mov
jbe
into
ret
daa
sbb
leave
cmp
push
xor
out
ja
call
out
addl
test
dec
fisubrs
mov
lods
xchg
scas
aaa
hlt
mov
adcl
mov
iret
and
mov
dec
stos
ds
enter
shlb
push
sbb
dec
sub
jo
in
loop
ljmp
cmc
test
push
or
xor
out
into
lods
mov
dec
and
scas
jbe
enter
into
movzwl
int
sbb
loop
lods
pop
push
dec
shll
dec
loop
jle
cmp
xchg
pusha
or
iret
xor
cmp
das
xor
mov
lods
int3
jecxz
lds
stos
outsb
mov
into
fistl
jecxz
subb
mov
fidivl
pop
mov
inc
dec
jg
pop
xor
into
sub
fstl
push
adc
and
bt
out
dec
xchg
jecxz
mov
outsb
outsl
mov
dec
xchg
imul
scas
or
mov
sahf
sub
mov
dec
das
scas
xorl
call
rcrl
sarb
mov
bound
push
pop
pop
push
push
push
movsb
ljmp
lods
inc
fisubrl
push
enter
call
and
std
and
addr16
cmp
dec
out
test
adc
sub
nop
jg
add
jnp
or
data16
in
xor
sarb
xchg
fsubrp
xchg
lea
mov
gs
add
dec
push
test
jae
cmp
mov
ljmp
mul
sub
adc
scas
xchg
cmp
fimuls
lea
mov
jae
out
in
mov
jle
push
dec
fadd
mov
into
or
lea
shrb
gs
ficoml
and
outsl
loop
dec
ljmp
add
jne
insl
ss
int
xorps
or
push
push
scas
cltd
sub
jmp
ljmp
jge
and
push
push
jecxz
sbb
out
add
scas
xchg
enter
push
xchg
jnp
cld
lea
sub
icebp
iret
in
rorl
scas
xchg
test
dec
ret
sbb
imull
and
ja
ljmp
leave
or
push
sub
clc
xchg
nop
jns
lret
and
or
or
jae
lods
ljmp
sbb
dec
sub
pop
imul
mov
or
jno
fcmovnbe
adcb
or
push
adc
leave
jno
inc
push
subl
std
addr16
pop
imul
lods
pop
lods
jecxz
mov
jge
pop
or
dec
xor
jno
sti
ja
jb
sbb
loop
test
sub
mov
fldenv
sub
dec
push
sub
push
sub
test
mulb
sbb
lea
nop
sbb
cmp
test
xlat
shr
scas
sub
stos
mov
aaa
popf
and
cld
mov
in
leave
test
sub
sbb
lods
add
in
or
inc
push
loope
loop
lods
lds
jno
add
cmp
lods
mov
leave
inc
clc
add
sar
dec
cmp
dec
cmpsl
int
loopne
ljmp
lcall
movsb
repnz
loop
pop
push
ss
xchg
imul
fistpl
pop
ret
roll
loop
push
rcl
testb
sub
test
lods
jbe
inc
int
sub
in
mov
sub
mov
jl
lods
adc
xor
stos
mov
mov
cmp
mov
xor
repz
mov
jb
adc
cmp
daa
add
lcall
inc
fcoms
lcall
and
insb
sbb
aas
popf
ficoms
test
sub
adc
mov
dec
ds
daa
or
pusha
xor
pop
std
cli
sbb
gs
shrb
add
adc
adc
adc
inc
xchg
ds
repz
incb
popa
dec
fildl
cmc
vcvttss2si
xor
xor
ret
pop
xor
fidivrs
les
or
lea
cli
lcall
sub
mull
or
test
aam
enter
fimull
adc
loop
mov
cmc
pop
enter
xor
out
popf
faddl
sbb
stos
shr
sbb
sub
aad
outsb
lds
orl
add
imul
test
pushf
ss
jno
xchg
ficoml
ljmp
sub
int
push
ljmp
push
add
stos
xor
or
shrb
jg
das
add
leave
jl
ficompl
sbb
mov
movsl
jbe
ljmp
ljmp
push
mov
xor
shrl
add
popa
mov
rol
mov
sbb
or
pop
cmp
xchg
in
movsb
jae
push
lret
sub
add
cmp
mov
push
test
insb
xor
xchg
test
and
popa
jae
push
sbb
lods
xor
xor
push
div
cmp
call
test
hlt
adc
rolb
cmp
or
lods
push
pop
mov
mov
and
icebp
adc
xor
pop
dec
clc
push
sbb
lcall
sub
in
fwait
adc
xchg
and
push
mov
jns
movzwl
je
lock
jae
imul
je
jmp
sbbb
xchg
sub
pop
sbb
inc
mov
xchg
popf
sbb
jo
mov
mov
movsl
inc
xchg
mov
jbe
pop
leave
sahf
or
je
push
sub
adc
mov
mov
push
push
inc
out
xor
outsb
rcl
add
jb
in
je
test
mov
mov
aam
repz
xchg
aad
loop
out
cmp
mov
mov
or
sbb
lret
pop
sub
xchg
mov
lds
cli
or
or
add
push
mov
imul
sahf
xchg
add
inc
repnz
shlb
outsb
mov
inc
test
dec
push
dec
ret
mov
jae
arpl
scas
arpl
pop
push
push
mov
out
jns
pop
mov
xchg
in
int
arpl
cmp
out
jae
mov
aad
rorb
bound
imul
repnz
inc
dec
push
aam
pop
and
pop
mov
xchg
imul
mov
rcr
ret
test
mov
pop
lods
sub
in
push
iret
or
push
in
fidivl
in
lahf
das
or
add
pop
inc
mov
jle
ret
shr
push
cld
or
cmc
addr16
xchg
sub
mov
lods
jecxz
push
mov
in
or
or
fcoml
test
xchg
int3
hlt
or
jge
int3
lds
push
or
cmp
loopne
xor
je
call
xchg
in
xor
les
in
mov
imul
je
inc
and
xor
enter
and
popf
push
fcoms
mov
xorb
aam
jno
xor
adc
addr16
mov
mov
lret
imul
scas
seto
dec
shl
add
mov
inc
sub
cmp
inc
pop
push
aam
in
xor
sbb
sti
cltd
fildl
aas
jle
shrb
in
and
sub
push
push
xchg
add
inc
mov
push
mov
mov
pop
mov
call
call
dec
mov
mov
std
dec
in
dec
dec
lahf
sbb
jnp
xchg
sbb
jnp
pushf
imul
pop
xchg
pushf
adc
in
in
in
je
dec
and
imul
fidivs
dec
insb
sub
pop
nop
mov
enter
xchg
lret
movsl
das
inc
push
xor
sbb
test
mov
in
test
mov
subb
adc
mov
inc
fistps
in
test
mov
mov
ja
push
pushf
sbb
cli
dec
call
mov
in
cmpsb
mov
lret
testb
insb
add
test
xlat
sub
jmp
in
cmp
and
arpl
imul
mov
fwait
push
andb
xchg
arpl
jbe
lods
mov
jno
jb
scas
fdivr
scas
insb
mov
repz
xchg
pop
xchg
cmp
push
xchg
faddl
aad
fidivrl
push
pop
push
adc
and
in
in
add
test
mov
mov
cltd
push
int3
or
push
inc
sti
sbb
imul
stos
test
bound
jae
roll
sbb
mov
lret
push
arpl
mov
xchg
mov
pop
imul
fisubrs
addr16
jl
sub
mov
mov
and
push
or
cmp
js
xchg
cmp
test
jne
movsl
sub
mov
inc
rorb
push
inc
mov
pop
push
mov
or
arpl
loop
and
outsl
push
sub
or
mov
outsb
add
xchg
fstps
jp,pn
xchg
and
mov
cmpsb
and
pop
and
xchg
push
and
insb
sbb
xchg
ds
loop
inc
xchg
and
dec
add
jl
mulb
call
repz
popf
into
cli
jge
xchg
pop
and
mov
test
fdivrs
and
pop
shll
mov
test
inc
and
cmp
bound
and
repz
and
shrl
push
and
mov
mov
xchg
outsb
and
dec
jg
and
pop
fsubl
loop
dec
lods
pop
mov
or
repz
cmp
sub
rcll
repnz
lea
sub
xlat
mov
in
in
cli
xchg
dec
xor
pop
inc
and
outsb
sbb
and
cmp
popf
push
sbb
and
pop
popa
and
push
test
add
cmp
ret
sub
out
dec
bnd
xor
das
bnd
jge,pn
mov
jmp
jle
adc
and
mov
adc
cld
scas
insb
lods
fcomi
add
bound
xchg
mov
inc
or
pop
orl
adcb
pop
mov
in
jb
int3
jne
and
ffree
push
sbb
mov
sub
push
lods
lock
inc
andb
and
pop
push
aam
movsl
daa
and
repz
shll
sbb
xchg
sub
loopne
push
imul
inc
sbb
pop
scas
jae
outsl
repz
cltd
je
jno
sbb
jmp
shrl
cmp
outsl
testl
lods
cli
imul
and
lock
mov
sbb
sub
add
das
mov
inc
and
sub
inc
sub
test
dec
lock
sub
jnp
cwtl
and
popf
sbb
dec
xor
mov
adc
aam
arpl
xchg
push
mov
xchg
lods
push
lea
scas
lret
and
shl
push
repnz
or
sub
and
ret
out
fsubs
sub
test
sbb
dec
add
jmp
dec
push
sbb
in
sub
pop
jle
push
loope
push
sbb
dec
jge
or
xor
ret
and
leave
test
lds
cmp
mov
cs
stos
sub
and
insl
aad
xchg
popa
dec
mov
mov
push
or
loop,pn
xor
stos
and
mov
add
inc
scas
fsubs
xchg
and
push
rol
and
sub
lds
pop
and
cmp
test
daa
mov
xchg
add
cmpsl
cmp
or
pop
sub
mov
mov
repnz
sub
and
cmp
sbb
cmpsl
inc
mov
gs
popf
jl
adc
fwait
lcall
and
fsubrl
mov
sbb
and
push
xor
xchg
sub
add
roll
outsb
push
xchg
stc
das
pop
adc
inc
mov
ret
lret
pop
and
cmp
lahf
pop
insl
and
int3
add
icebp
jb
dec
outsl
and
adc
cmp
lcall
sbb
mov
jae
adc
std
mov
inc
rcll
cwtl
mov
pop
xorl
sub
stos
adc
out
mov
hlt
inc
jp
sub
mov
in
sbb
jno
lret
and
loop
hlt
sbb
fsubl
iret
xchg
call
test
and
cmp
mov
mov
jo
add
or
lcall
fbstp
and
adc
faddl
lods
mov
sub
or
mov
xchg
pop
pop
cmp
pop
dec
nop
test
xor
fisubl
or
lcall
clc
cmp
inc
out
addb
mov
rorl
and
dec
mov
inc
popf
je
iret
cmp
cmpb
mov
sub
and
je
push
lock
cmp
xchg
dec
jne
xchg
push
enter
nop
outsb
inc
sub
adc
and
out
pop
pop
stos
fs
cmp
lods
loop
and
mov
and
cmpl
pop
dec
jl
insb
in
insb
cs
ljmp
or
dec
jno
mov
repnz
cmp
js
loop
mov
lret
sub
and
and
shlb
or
jl
js
cmp
lret
dec
ss
fnsave
dec
and
ret
stc
sti
cmp
cmc
popa
stos
xlat
cs
sub
or
push
divb
leave
lods
and
or
add
ret
sbb
sar
push
cmp
stc
jp
dec
icebp
sub
xchg
repz
dec
pop
je
add
fwait
mov
mov
sub
cmp
mov
scas
sub
das
loopne
and
cmp
mov
int
cmpsl
jnp
push
jb
test
push
push
fbld
sub
xor
je
or
sub
and
fbstp
inc
mov
and
fcmovne
xchg
cmpsl
and
mov
add
push
mov
call
mov
push
lret
je
pop
cmpsb
movsb
inc
aad
imul
and
loop
pop
in
mull
dec
nop
cmc
fstpt
adc
ljmp
in
mov
sti
xchg
dec
lods
shlb
shl
and
stos
mov
int
inc
push
movl
test
sub
bnd
repnz
adc
enter
divl
xlat
and
or
inc
addl
jne
and
repnz
int
xchg
and
push
jne
cmc
jecxz
das
test
repnz
es
adc
test
mov
mov
in
pop
and
push
xchg
cmpsl
cli
loop
sbb
jae
jmp
lods
adc
add
mov
and
aam
push
mov
xor
sbb
clc
loopne
pop
xchg
ds
cli
out
xchg
mov
sub
fstpt
or
js
and
jge
nop
mov
cmp
add
cmp
push
gs
add
in
pop
ss
jecxz
out
lcall
mov
addb
dec
mov
cmp
jbe
mov
ss
sub
and
mov
shlb
rcrb
and
sahf
pop
pop
and
push
xor
and
push
sbb
pop
sbb
ret
inc
inc
cmp
fisttpll
stc
mov
xchg
mov
lods
add
nop
je
push
cs
out
push
je
fneni(8087
cmp
cs
xchg
xor
jl
test
and
add
adc
repz
out
lahf
mov
add
hlt
add
bound
mov
fdivp
pop
les
int
stos
mov
push
rorb
stc
scas
cwtl
out
mov
pop
and
inc
addb
in
out
mov
mov
and
xchg
or
cmpl
js
sbb
test
xchg
cmpsl
mov
mov
add
fldenv
inc
rcrl
jmp
shll
mov
pop
cs
lret
repnz
repz
push
mov
mov
and
aas
stos
cmp
push
mov
fs
fisttpll
ljmp
inc
fcomps
lret
loope
stos
sub
inc
xor
adc
and
xchg
fnstenv
ss
pop
mov
cs
decb
inc
and
xor
fisttps
jge
and
mov
mov
into
push
mov
lods
dec
pop
and
push
data16
stos
clc
push
sbb
sbb
mov
test
out
jbe
adc
jo
mov
mov
aas
and
adc
and
add
and
outsl
adc
cmp
repnz
and
mov
and
mov
fisubs
aad
cmp
mov
cltd
and
sub
and
and
int
ret
cmpsl
das
lret
pop
and
cmp
fnstcw
and
mov
insb
fdivrs
mov
shll
nop
mov
stos
ljmp
push
aad
dec
pop
xchg
lods
rorl
mov
iret
dec
and
imull
mov
sub
mov
adc
push
sub
dec
mov
leave
fstpl
ljmp
ret
dec
or
or
mov
jp
jle
sbb
das
add
rclb
mov
or
dec
das
cld
push
lock
cli
rcl
call
in
mov
or
inc
loop
or
cs
shrl
rcrb
dec
jge
and
sahf
in
popf
sarl
and
repz
xchg
and
pop
out
and
cmpl
cmp
outsb
in
dec
cmp
add
test
sub
lcall
scas
adc
int
inc
mov
xor
mov
and
or
adcb
cwtl
mov
mov
xor
sahf
add
leave
daa
fsubrs
cs
push
loopne
sub
mov
lahf
jae
sub
test
pop
adc
xchg
popa
lret
cmp
mov
cmp
pop
fimull
sub
sub
sub
inc
cmp
outsb
jl
test
gs
dec
and
and
push
insb
dec
ljmp
test
loop,pn
sbb
mov
into
and
pushf
xchg
mov
lret
push
popf
enter
test
andl
fcom
pop
loop
stos
inc
xchg
xchg
cmp
sub
mov
mov
add
das
sbb
sbb
fs
mov
out
mov
pop
cmpsb
jbe
in
das
rclb
and
sub
movsb
lock
das
imul
add
outsl
inc
xsaveopt
inc
mov
in
leave
fiaddl
jae
fs
cmp
imul
jge
jb
nop
sti
stos
scas
out
mov
dec
sub
imull
mov
cmpsl
aas
sub
ret
ja
cmpl
mov
aad
movsb
inc
loopne
push
mov
xor
sbb
inc
idivl
and
test
cld
jl
mov
ret
add
scas
cmp
lret
jge
scas
mov
and
test
mov
and
push
xchg
mov
enter
pushf
and
add
je
push
pcmpeqb
mov
pop
mov
push
cmp
ds
cmc
push
adc
and
lock
mov
pusha
mov
fstpl
and
dec
inc
and
push
rcrl
cltd
cmpsl
or
pop
scas
adc
cmp
adc
push
cmp
daa
ds
fsubrs
lahf
push
adc
xor
cs
dec
jg
mov
das
gs
xchg
out
sbb
cmp
iret
lahf
mov
lock
bound
or
scas
jg
movsb
sbb
adc
fnsave
cmp
test
xlat
outsb
daa
je
cmp
fstps
cmc
jg
sub
mov
dec
in
stc
sub
test
inc
cld
fs
push
and
inc
mov
xor
fimull
int
cli
test
or
std
push
pop
and
fsubrl
adc
fildl
dec
addl
sub
pop
and
mov
xor
mov
mov
mov
loope
mov
in
fnstsw
cli
sub
dec
inc
sbb
adc
push
dec
push
mov
dec
pop
jmp
jnp
jl
xor
mov
pop
adc
call
xor
fstpl
dec
js
subl
fs
mov
pop
inc
and
fadd
lahf
and
cmpsb
fbstp
xor
lret
add
xor
ret
sub
xor
pop
test
test
aaa
cmp
pop
cmpsl
and
mov
mov
xlat
pop
and
pop
mov
aas
fsubs
push
xchg
xor
xchg
dec
jmp
xchg
and
push
and
mov
adcb
clc
and
std
bound
or
or
hlt
imul
xchg
push
jecxz
dec
adc
and
jmp
cmp
mov
jmp
sbb
insb
lea
jl
mov
cld
loope
sbb
push
repz
pop
mov
cmpsl
test
add
push
cmp
and
cld
mov
loopne
mov
and
gs
outsl
inc
outsb
dec
icebp
hlt
adc
psrad
pop
pop
pop
scas
int3
mov
and
test
sahf
inc
mov
popf
pop
mov
add
cli
mov
sub
das
int3
enter
push
out
xor
mul
and
dec
repz
je
jb
xchg
lock
fsubp
fldenv
test
xchg
lea
and
xor
pop
or
sbb
loope
inc
mov
mov
loope
scas
push
inc
enter
bound
push
jle
push
inc
xor
insl
pop
sub
popf
cmp
scas
sbb
fbstp
add
mov
cld
mov
dec
cmpsl
loop
xchg
mov
js
fiadds
or
inc
inc
xorl
push
mov
pop
test
jl
aas
and
jmp
popf
inc
and
xchg
cmpsl
cmp
push
dec
pop
sub
pushf
ljmp
fs
dec
add
jmp
and
ljmp
push
sub
insl
shrb
inc
mov
sub
aas
inc
ret
ret
in
loope
dec
mov
cli
sub
lcall
repnz
mov
sbb
loop
xor
push
aam
mov
mov
add
xor
mull
push
push
hlt
and
mov
lock
push
push
lahf
sub
out
inc
in
stos
outsb
call
in
pop
cmp
mulb
lock
push
sub
test
outsl
cmp
and
mov
or
test
sbb
pop
aam
jmp
lods
nop
add
push
in
jl
and
cld
mov
ret
cmc
mov
bound
adc
jp
pop
sub
and
cwtl
sbb
sbb
sub
jge
dec
shl
fists
test
dec
adc
push
int
or
adc
xor
cmp
inc
cmp
xor
mov
dec
mov
hlt
jmp
mov
dec
lea
jg
lahf
movsl
enter
inc
cmp
enter
stos
popf
and
sub
ret
data16
cmp
into
scas
dec
clc
lahf
ret
sbb
and
stos
mov
stc
lret
push
mov
stos
adc
cmp
mov
loope
repnz
mov
adc
lods
jne
mov
and
dec
lea
pop
bound
xlat
lahf
xor
mov
fbld
cld
shlb
pop
cmp
and
adc
mov
cmpsb
loop
daa
sbb
leave
test
jl
cwtl
sbb
cmp
and
cmp
cli
push
aaa
lea
jne
and
out
adc
popl
testb
xchg
adc
enter
sub
scas
inc
in
mov
mov
roll
imul
std
xchg
mov
mov
and
jns
stc
push
call
data16
sub
cwtl
jmp
xlat
fs
sub
into
jns
jb
test
xchg
pusha
pop
jnp
dec
push
and
inc
jno
push
or
je
xor
hlt
out
out
mov
lcall
nop
cmpsl
sbb
pop
mov
jo
mov
lret
pop
insl
jno
xor
clc
add
loope
xchg
out
test
mov
sub
pop
iret
and
hlt
inc
cltd
xor
insb
inc
jb
push
aad
ffree
imul
sub
mov
test
cwtl
in
push
push
xchg
sub
pop
stos
push
push
and
bt
cs
add
mov
ljmp
popa
pushf
cmp
ret
pop
leave
jns
add
aam
sub
cmc
lret
shrd
mov
test
sub
xchg
pop
push
and
int
sub
mov
test
call
jne
jae
mov
sub
fs
sbb
xchg
pop
aaa
sti
jbe
and
sub
cmp
movsb
dec
mov
dec
or
inc
xchg
inc
rcll
and
in
xlat
cmp
into
scas
mov
test
and
loope
fwait
adc
ror
imulb
cmpsl
aas
popa
sbb
jle
and
cmp
jne
in
pop
addl
pop
outsb
into
mov
loope
push
and
lock
jb
sbb
push
es
or
mov
pop
cmc
fwait
and
lea
aad
pop
add
and
fs
adc
jo
cltd
and
call
mov
cmp
push
cli
sub
jns
cltd
jmp
lcall
pshufw
call
rorb
in
pusha
repnz
mov
mov
sbb
cmc
sbb
movsl
dec
and
sub
fcmovnu
lods
push
cmc
lods
shrb
fwait
std
mov
xlat
xchg
cmp
shlb
mov
xchg
pop
call
and
add
pop
arpl
cmp
and
push
test
sbb
cmc
lahf
cmp
or
sub
mov
inc
stos
add
lock
stc
popa
and
mov
mov
leave
jnp
out
cs
jnp
push
mov
in
mov
sub
dec
aaa
das
push
xor
add
push
and
loopne
in
jp
sbb
jle
jl
push
dec
hlt
inc
push
and
jnp
and
cli
add
sub
or
ja
aam
sbb
dec
mov
add
ret
std
inc
cs
and
sti
adc
jp
jae
push
xchg
les
ljmp
out
jmp
push
out
inc
sub
lcall
enter
and
cmp
cld
stos
lea
and
sub
stc
and
mov
and
pushf
enter
xchg
cltd
jmp
insb
sub
jp
push
xor
test
adc
and
leave
loop
sub
ret
rcrl
jo
imul
lods
pop
pushf
sarb
jl
push
cs
mov
and
icebp
leave
ret
mov
xor
cltd
cmp
sbb
mov
pop
insb
mov
sub
and
and
and
cmpsl
pop
dec
and
fiaddl
and
clc
mov
sub
inc
inc
or
mov
out
jnp
insb
ret
or
cs
pop
mov
repnz
mov
jp
jo
int3
pop
into
lea
adc
lods
jge
sub
ret
or
mov
rcll
notb
inc
inc
loop
and
mov
and
fldenv
outsl
jae
xor
in
arpl
and
push
cmpsb
fs
mov
sbbb
das
imul
dec
gs
out
lock
sbb
and
jbe
nop
hlt
jle
xchg
inc
xor
and
add
imul
adc
lods
mov
and
push
mov
adc
insl
enter
out
cmp
sub
add
and
cmp
in
sub
mov
and
jo
xchg
and
pop
test
lcall
addl
pop
and
and
lcall
mov
jo
cli
mov
adc
sub
xchg
popa
sub
cltd
pop
and
dec
mov
push
and
test
and
xor
mov
inc
shl
or
jae
leave
xor
push
test
das
insb
rclb
and
pop
sub
and
pop
hlt
dec
shrl
arpl
adc
xchg
sub
dec
and
test
adc
mov
adc
xchg
aas
lahf
mov
cmp
les
out
mov
jle
xor
pop
test
popf
xchg
pop
sub
or
fs
push
ss
xchg
dec
test
jo
divl
stos
mov
cmp
mov
mov
push
jl
pop
adc
xor
xchg
push
cmp
add
sub
mov
and
out
cmpsl
call
pop
xor
test
jbe
or
and
scas
mov
or
push
daa
dec
out
cmp
and
lcall
ret
fxch
leave
iret
and
fcomi
adc
pop
arpl
dec
sbb
rorl
pop
test
xor
jl
adc
mov
pop
mov
pop
xor
add
push
pop
mov
mov
jmp
and
call
in
and
cmp
pop
dec
sbb
sbb
std
fsubrs
in
dec
sbb
test
add
imul
fs
xor
jge
shrl
mov
sub
les
jmp
sub
pop
imul
pop
pop
sub
ror
and
mov
jbe
push
stos
outsb
push
sti
cmpsl
push
test
sbb
imul
jo
scas
xchg
sbb
sub
loop
bound
or
test
jge
inc
icebp
xlat
xchg
and
and
add
add
outsb
in
mov
aaa
insl
sub
ret
and
dec
pushf
and
push
xor
jmp
stc
cmp
fldenv
xchg
ret
shr
popl
ljmp
subb
jl
or
and
jnp
cmpsl
sub
and
xor
inc
movsb
xorb
fiaddl
mov
or
sbb
inc
bound
ja
mov
test
mov
add
mov
dec
add
pusha
adc
cli
xor
and
inc
and
cli
sub
push
push
sti
sbb
test
sub
and
daa
dec
aaa
or
cmp
sbb
add
push
push
mov
aam
and
sub
jl
xor
xor
jo,pn
lret
imul
dec
cmpb
mov
nop
mov
shll
and
inc
movsb
cld
out
pop
fs
lahf
push
mov
fbld
hlt
in
popa
xchg
jae
mov
or
sub
cmp
insl
sbb
push
fwait
jl
mulb
lods
add
test
and
and
fcmovne
add
inc
jmp
repnz
cs
sub
cltd
mov
dec
sub
popf
pop
sub
test
movl
repnz
and
les
sub
mov
xchg
jg
push
xchg
or
sbb
int
andb
and
and
and
and
and
mov
mov
lds
jb
push
out
push
mov
test
sbb
stc
mov
add
inc
pop
and
std
dec
mov
adc
jb
xor
xlat
mov
jb
adc
push
cltd
popf
add
mov
add
ljmp
pop
or
add
push
jp
lods
sbb
dec
sub
sbb
mov
jns
sti
push
pop
sub
dec
divb
scas
in
push
fwait
sarb
jp
cltd
out
test
xor
mov
cli
fldl
and
test
movsl
daa
mov
xchg
mov
xchg
add
cmpl
or
jmp
add
adc
cltd
popa
pop
jno
test
xor
insl
lea
je
inc
fs
cmp
sub
mov
lcall
jl
cmp
movsl
call
sahf
dec
push
or
jmp
movsb
shl
daa
mov
mov
jbe
dec
test
in
push
js
cli
out
repz
std
mov
xlat
sbb
sbb
inc
testb
push
sarl
pop
add
cli
fwait
jp
loope
sub
stos
cmp
push
xchg
in
out
sub
jg
dec
cmp
and
fwait
mov
or
sub
cmp
xor
sbb
adc
xchg
leave
xchg
mov
jnp
mov
pop
arpl
sahf
imul
pop
adc
inc
test
and
fidivrl
es
fistps
lock
dec
add
mov
cld
sub
int3
pop
jns
es
dec
mov
sub
lods
cmp
daa
std
pop
dec
or
nop
xor
addr16
je
sub
and
jnp
and
or
cmp
mov
xchg
mov
cmp
ds
sub
push
lret
push
cli
fwait
psubq
popf
and
push
jb
sbb
push
imul
inc
cmpsl
pop
pop
sub
faddl
and
xor
cmp
mov
sub
cli
jo
mov
sti
and
inc
jle
testb
inc
push
mov
or
sub
lahf
jne
shrl
popa
cmp
aaa
and
inc
xor
test
icebp
add
mov
xchg
push
inc
mov
and
sti
jnp
loope
sbb
and
popf
jge
fs
and
sahf
dec
or
sub
and
iret
frstor
jne
loopne
xchg
push
rcrl
add
cmp
push
pusha
and
or
and
dec
pop
sub
and
jae
repz
and
out
test
jp
and
pop
push
dec
lods
inc
xor
dec
das
movntps
sbb
out
inc
jmp
in
adc
fistpl
mov
mov
int
std
lea
sub
pop
jmp
sub
cmp
mov
sbb
pop
adc
mov
mov
data16
push
fnstsw
fcmovb
jle
push
shll
dec
pop
aaa
inc
les
and
daa
inc
out
pop
loop
rorl
pop
and
in
push
lret
test
daa
nop
sbb
and
and
lods
mov
lahf
push
repnz
sbb
sub
jl
push
repnz
out
mov
mov
and
lods
jl
sti
es
addr16
test
and
sbb
jmp
sub
mov
and
test
pop
fwait
add
mov
push
in
cmp
sub
sbb
mov
pop
push
enter
sti
into
pop
outsl
or
add
adc
jmp
xchg
and
xchg
fidivs
loop
in
fs
cmp
jnp
cmp
xchg
and
jmp
cs
stos
push
and
dec
and
pop
xchg
cs
jmp
out
repnz
jg
in
insl
imul
xchg
lods
cmp
out
lahf
and
iret
push
das
pmuludq
jl
mov
insb
movsl
mov
cld
cmp
pop
push
sub
or
jbe
dec
and
and
mov
sbb
mov
pushf
hlt
cli
dec
pop
out
sub
imul
mov
dec
test
xchg
and
xchg
dec
shll
mov
mov
push
mov
and
jecxz
cltd
out
push
adc
movsl
and
cld
mov
and
in
icebp
xchg
das
add
sbb
rolb
and
xchg
out
rcrb
pushf
xchg
or
das
repnz
pop
pop
mov
mov
stc
or
or
js
sub
mov
pop
and
je
xchg
mov
jecxz
sbb
in
sub
lcall
subl
cs
fldenv
sbb
inc
mov
pop
sarb
mov
stos
inc
adc
push
add
dec
pop
cmp
shll
xchg
dec
xor
push
daa
out
and
repnz
out
sub
dec
sub
gs
and
jo
test
ret
push
call
jecxz
jae
out
xor
rcrl
cli
popa
stc
and
push
xor
out
add
adc
cs
dec
xchg
scas
push
and
xor
dec
dec
mov
pop
jno
mov
roll
pcmpeqb
and
cs
push
xchg
inc
data16
ss
pushf
es
sub
and
or
popf
arpl
and
out
bound
cld
pop
scas
js
jl
loop
ds
adc
jmp
in
or
lret
pop
mov
jnp
cmc
add
push
mov
call
push
scas
shlb
imul
sub
ljmp
and
mov
loop
mov
ljmp
stc
and
insl
add
sub
testl
sub
pop
mov
xchg
or
adc
xor
fcmovnbe
and
out
add
lea
push
xor
popa
sub
lcall
and
pop
test
jnp
cmp
das
jl
adc
mov
sub
xorb
scas
test
jp
mov
cmp
lods
push
out
fneni(8087
sub
gs
sub
push
aad
pop
and
xor
xorl
jmp
fisttps
push
pop
roll
jb
dec
popa
inc
cmp
pop
clc
xchg
loop
dec
sub
push
adcb
add
test
dec
xorb
aas
push
int3
cltd
fisubs
dec
sub
enter
or
lods
jl
jecxz
xchg
fwait
sbb
adc
push
rdtsc
xchg
xor
or
push
adc
and
sub
cltd
scas
and
and
inc
cmp
and
cli
sub
or
push
repnz
sbb
ds
sbb
call
mov
icebp
inc
mov
into
and
movsl
nop
outsb
shrb
mov
rclb
and
sbb
inc
imul
adc
out
dec
cmp
cmp
push
push
scas
ss
xchg
push
sub
push
xor
mov
sub
add
das
leave
bound
push
mov
cmp
loop
or
orb
mov
mov
pop
push
lret
mov
pop
mov
or
mov
mov
dec
and
loop
js
popf
push
and
xchg
push
out
sub
jns
stc
pop
adc
cmpsb
sub
or
mov
and
dec
jp
sbb
pop
negb
pop
cmp
dec
ja
mov
mov
xor
or
ret
lods
jnp
test
je
mov
jmp
mov
loop
xorl
and
inc
iret
xor
mov
dec
add
or
sub
cmp
es
icebp
push
xor
shlb
inc
sub
and
sub
push
mov
dec
je
test
push
scas
pop
mov
sbb
sbb
enter
std
aaa
pusha
mov
testl
sub
and
in
repnz
mov
lds
mov
ljmp
pusha
scas
jnp
pop
and
ja
inc
jae
and
cltd
push
xchg
jecxz
int3
or
pop
fwait
popl
dec
sub
jns
loopne
and
and
adcb
out
jne
popf
jns
sub
jno
jg
pushf
pop
or
out
popa
fwait
pop
jnp
sub
jmp
and
adc
adc
cltd
ljmpw
cs
sbb
scas
lret
cmp
jno
cmp
and
push
je
add
adc
mov
jl
xor
and
fldt
jae
fcmovb
aam
ucomiss
daa
lea
sub
mov
mov
pop
ficoml
sbb
adcl
fcompl
mov
adc
rcrl
mov
out
and
cld
sbb
push
sub
sub
and
and
dec
sahf
mov
mov
incl
jbe
jb
icebp
xor
cs
xchg
sub
shrl
sub
test
push
and
push
sub
sbb
scas
es
cs
add
sbb
cwtl
sub
int
dec
dec
pop
sub
cmpsb
push
sub
or
repnz
sub
mov
lcall
aam
in
pop
les
and
fs
pop
inc
mov
jno
pop
push
sub
push
dec
push
out
or
testl
mov
les
sub
inc
outsb
scas
adc
dec
sbb
push
xchg
mov
pop
add
int3
jb
into
cmp
mov
push
lods
cmp
dec
pop
movsl
jp,pn
leave
add
adc
and
jnp
test
sub
push
or
loopne
lods
mov
enter
mov
xchg
cwtl
mov
test
sub
xor
and
push
ds
stos
out
and
lods
dec
adc
dec
push
je
and
and
push
xchg
loop
sbb
jmp
dec
inc
add
andb
mov
int
sub
or
je
loop,pn
jmp
fstpl
std
adc
shll
out
imul
xlat
cmp
and
sub
loop
outsb
and
popa
out
sub
and
mov
mov
xor
or
insl
push
pop
sub
push
es
sti
scas
xchg
fwait
and
fcompl
add
mov
call
mov
pop
mov
push
inc
or
inc
test
jae
repz
cmc
push
icebp
flds
das
mov
dec
leavew
mov
jb
sbb
fistps
ror
cmpsb
test
sub
mov
test
jnp
daa
fnstenv
inc
shll
mov
hlt
fcmovne
sbb
lret
nop
loop
sbb
test
cmp
mov
mov
test
xor
sahf
sub
in
repz
mov
mov
push
insb
aad
and
sbb
lds
rolb
pop
or
adc
cmp
jp
ljmp
inc
jl
ret
pop
outsl
sub
and
insl
or
mov
into
sbb
sub
scas
loop
push
mov
dec
movsb
fisubrl
mov
pop
jae
and
cs
mov
push
sub
add
adc
add
and
adc
sub
push
add
xorb
repz
stos
and
pop
and
and
test
sbbb
push
sub
push
and
sbb
and
adc
loop
or
cs
xchg
mov
push
jae
dec
sub
jns
cltd
test
push
imul
jle
xchg
sbb
dec
mov
imul
or
inc
inc
xchg
loop
fsubrs
je
mov
jns
ret
mov
push
lods
xor
xchg
shrl
sub
sbb
int
jmp
in
out
xor
sbb
cmp
sbb
sbb
test
adc
out
dec
insl
dec
sbb
enter
push
subl
and
rolb
jae
cmp
insb
and
cmp
and
imul
enter
mov
and
pop
cmp
es
dec
add
xchg
sub
jge
dec
and
jle
pop
and
lods
jae
mov
loopne
cmp
daa
cmc
inc
cmp
or
dec
add
sti
ficoml
cmp
cmp
js
cmp
sub
jno
cld
and
bound
and
clc
popf
cmpl
pop
outsl
dec
das
mov
jg
push
cmp
popa
and
cmp
and
xor
lsl
mov
sti
loop
test
scas
stc
jmp
xchg
or
dec
push
inc
and
out
xlat
pusha
je
repz
mov
mov
jge
shlb
rcrb
call
add
sub
push
adc
jnp
cmp
mov
fstps
sub
sbb
frstor
sub
dec
test
cmp
js
and
pop
jbe
and
push
mov
sub
clc
int3
sbbb
ret
mov
push
sub
mov
shl
ja
fbstp
pop
test
xor
push
and
leave
pop
jl
cmpsb
sub
popa
sub
mov
add
lret
add
pop
dec
push
outsb
scas
and
push
fdivs
and
mov
int3
fidivl
ret
cmp
mov
lods
inc
test
inc
cmp
or
and
and
mov
and
mov
data16
mov
js
dec
cltd
jge
sub
push
push
dec
ljmp
out
jle
and
inc
out
adc
lahf
insl
mov
cmpsl
hlt
pusha
jge
int
cmp
rol
fisubl
cs
repnz
loopne
cmp
test
inc
mov
leave
fsubl
loopne
gs
test
or
insb
cmp
test
and
push
push
call
push
and
xor
decb
fsts
popa
push
jecxz
inc
nop
mov
sub
cmp
mov
and
aad
add
and
and
add
dec
sbb
jmp
cs
bound
mov
enter
and
shrl
and
cli
sub
sub
pop
xchg
cmp
and
inc
sub
int
dec
or
pop
and
and
push
mov
dec
cmp
adc
add
jae
loope
push
mov
lret
cmp
js
jg
fcoml
or
mov
mov
sbb
dec
cmpsb
mov
rcl
jmp
jge
mov
std
push
mov
and
pop
sub
dec
outsb
adc
mov
mov
inc
pop
jno
movsl
ret
call
popf
pop
and
repnz
lea
or
inc
ljmp
int3
jl
cld
and
mov
push
outsl
out
int3
pop
adc
jae
das
xor
and
stc
sub
dec
add
or
mov
and
cs
jle
sub
mov
and
jns
cmp
es
mov
cmp
sub
out
sub
jns
rcll
leave
adc
push
movsb
sub
or
pushl
push
dec
fnstenv
insb
sub
ret
mov
scas
mov
pop
sbb
adc
cmp
aad
nop
sbb
mov
in
xchg
in
and
inc
sub
or
cs
out
test
scas
dec
dec
dec
push
dec
or
insb
repz
push
mov
adc
sub
out
gs
sub
test
xchg
sbb
jmp
jmp
mov
das
repz
cs
mov
pusha
cli
mov
or
adc
dec
ss
sub
jp
xchg
jmp
jbe
push
sbb
cwtl
xchg
adc
add
adc
stos
dec
lret
adc
dec
xor
push
cmpsl
daa
fsubl
daa
das
or
inc
test
testl
jp
jbe
shrl
mov
cmp
bound
dec
and
inc
add
add
sub
lods
ficomps
lods
adc
subb
push
and
and
mov
push
mov
imul
mov
clc
and
ljmp
out
or
jb
cs
ret
loop
out
test
and
cmp
pop
dec
mov
ret
test
add
sub
movsb
frstor
and
popa
fwait
and
sbb
mov
bound
mov
cmp
xor
push
rcrb
shll
out
pop
sub
aas
and
insl
push
push
cmc
sbb
cmp
mov
push
pop
testl
pushf
loop
xchg
and
mov
mov
or
xchg
hlt
cli
sbb
aam
fildll
cmp
and
mov
xchg
in
sbbb
xor
stc
mov
out
test
or
mov
shrb
fildll
movsb
popfw
shrl
sub
and
aaa
ret
dec
pop
and
aam
sbb
fiaddl
xchg
repnz
or
add
cmp
movsb
in
inc
daa
xchg
xorb
scas
push
push
fildll
test
fistl
mov
popf
ljmp
jecxz
or
or
push
cwtl
shll
push
xor
adc
sbb
sub
iret
add
lods
outsb
outsl
push
and
mov
push
loop
xlat
subb
push
scas
scas
adc
leave
adc
sub
push
cmp
aad
pop
sub
sub
sub
daa
and
out
lock
cmp
mov
incb
inc
mov
xorl
add
push
test
subb
jl
out
xchg
cltd
adc
xchg
dec
cli
jo
and
call
scas
call
out
pusha
std
sub
outsb
int3
adc
mov
add
dec
pop
dec
jmp
push
mov
popf
xor
sbb
sahf
sub
cs
push
or
mov
sub
ficompl
pop
stos
int3
ljmp
jmp
test
sbb
sub
repz
clc
xchg
setge
call
cli
or
pop
out
mov
movsb
mov
add
or
pop
sub
and
out
psllq
pop
xchg
mov
and
ljmp
movsl
in
test
and
cmp
xchg
xchg
jns
in
cmp
and
nop
cmp
adcb
inc
mov
enter
fldt
mov
mov
lea
dec
jecxz
push
ss
sub
jl
jbe
int3
ljmp
and
sub
inc
sbb
leave
push
add
dec
jecxz
mov
lds
rcrl
imul
ss
repnz
jecxz
lahf
jo
aas
adc
test
and
and
out
in
inc
movsl
scas
repz
cli
jnp
sub
push
dec
and
xchg
pop
dec
stos
mov
xchg
sub
jae
jnp
lds
out
and
ficoml
cli
xchg
or
aaa
adc
add
sbb
out
sti
arpl
in
ret
inc
sbb
sub
lret
or
sbb
cmp
ljmp
test
repnz
sub
mov
cs
dec
enter
arpl
push
mov
insl
pop
rorl
lret
aad
push
jb
inc
or
addr16
and
out
or
test
cs
mov
dec
xor
dec
cmp
fs
and
jl
pushw
pop
dec
test
fidivs
daa
jae
jae
test
loope
cltd
sub
dec
mov
test
and
dec
jle
inc
push
ss
and
pop
xchg
icebp
stc
fptan
and
rorl
call
sbb
flds
and
adc
adc
cmp
out
and
xchg
xor
mov
dec
mov
fisttps
mov
dec
or
repnz
add
jmp
jl
js
sub
sti
jg
sub
stos
sub
cmp
test
xor
mov
mov
adc
divl
and
and
cli
xchg
push
push
and
addr16
sbb
mov
and
sbb
sti
das
ljmp
pop
leave
fs
mov
shrb
push
xor
pop
sub
dec
daa
and
xlat
mov
pop
test
aas
add
mov
adc
loopne
lea
cs
cmpb
xchg
and
enter
xor
add
popa
loop
sbb
sub
inc
push
or
adc
cmp
sub
xchg
adc
mov
fidivl
and
leave
sti
imul
iret
out
fldt
mov
leave
mov
pop
mov
mov
push
mov
fsubl
repnz
and
popf
lods
jo
adc
cmp
dec
xor
stos
and
cmp
adc
or
mov
nop
mov
fs
or
cltd
xor
push
das
daa
lods
arpl
and
insb
mov
mov
loopne
xchg
mov
mov
xchg
stc
add
std
cmp
cmc
push
mov
adc
mov
scas
cmpsl
sbb
cmp
jnp
dec
adc
push
xchg
and
mov
cmp
inc
scas
push
ljmp
clc
lcall
ficoml
push
pop
push
and
jns
in
scas
mov
and
xchg
push
and
loopne
push
fs
push
sbb
daa
stc
rcrl
jb
and
ret
inc
mov
cmp
cli
mov
das
fnstcw
cwtl
mov
mov
and
sub
xchg
lret
negb
jnp
cmp
or
das
stos
sub
mov
mov
and
cs
and
push
cmp
push
mov
ljmp
sbb
in
popf
xor
mov
push
cmpsb
mov
cmp
and
fsubrl
and
pop
mov
sbb
mov
lret
pop
xor
cmc
sub
ret
jl
mov
bound
js
mov
inc
and
stc
negb
sbb
pusha
sub
outsb
insl
pop
dec
das
cmp
xchg
inc
arpl
or
scas
js
popa
xor
push
and
mov
push
enter
xchg
out
subl
mov
mov
mov
icebp
je
cmp
sub
outsl
pop
xlat
xchg
jmp
or
insb
sbb
mov
and
mov
sti
and
into
out
mov
insl
mov
outsb
dec
rcll
or
and
jnp
mov
out
jb
pop
mov
repnz
mov
sub
in
dec
adc
mov
scas
adc
movd
subb
sub
or
adc
mov
sub
sub
jecxz
pop
sbb
adc
arpl
xchg
adc
jnp
sub
lods
inc
mov
bndldx
xlat
sub
insl
stc
cmp
pop
fld
insb
test
push
mov
push
mov
cmp
int
insb
xor
and
xor
pop
and
orb
aad
lahf
or
or
adc
mov
movsb
adc
and
negl
push
jle
mov
fdivr
nop
jne
sbb
and
and
dec
test
and
mov
and
inc
mov
cs
fisttpll
and
adc
and
iret
mov
aam
add
cmp
mov
test
cmp
repnz
and
hlt
std
add
adc
dec
mov
daa
loope
pushf
push
add
repz
cmp
in
jl
andl
mov
mov
rcrl
mov
mov
cmpsl
add
jmp
jnp
add
mov
sub
cli
test
inc
inc
sub
cmpsb
inc
or
and
push
ret
push
adc
push
into
push
lds
pop
lods
outsb
out
adc
repnz
and
lret
lods
bound
mov
sbb
jp
aas
das
jmp
es
and
rep
push
mov
test
dec
inc
shl
add
pusha
aam
inc
or
cli
jae
lret
insl
sub
xor
loop
movsl
out
or
push
add
mov
or
jb
cmpsl
loop
fwait
sub
in
sbb
jae
stos
sub
inc
xchg
add
jb
jge
sub
xchg
iret
test
arpl
cld
pop
mov
jae
pop
cltd
sbb
test
cmp
and
add
adc
cmp
outsb
and
bound
sub
push
mov
enter
push
sub
lock
jns
out
idivl
and
pushf
in
test
and
pop
clc
scas
sub
in
sub
sbb
add
and
xchg
add
jle
cs
mov
fisubrl
inc
dec
cmc
sbb
lret
adc
jnp
push
xlat
jg
inc
outsl
fidivl
lahf
and
bnd
pop
or
popa
jae
cmc
adcl
stc
mov
fs
inc
adc
sub
hlt
loope
jne
jp
jmp
or
jmp
and
dec
mov
cmpsl
bnd
dec
das
mov
js
inc
and
lock
mov
cmpsl
push
and
in
testl
nop
xchg
dec
and
and
ja
pop
scas
int3
and
sub
sub
insl
sub
ret
mov
jp
adc
pop
aaa
mov
fdivrl
sub
sbb
add
stos
mov
sub
xor
ror
add
cld
sbb
stc
mov
jecxz
les
xor
popa
dec
fs
icebp
and
inc
es
insb
xchg
pusha
mov
mov
cli
xchg
sub
fimull
test
loop
cs
insl
imul
xchg
cs
sti
xchg
sbb
dec
fs
cld
adc
lea
dec
sub
push
leave
ret
mov
cs
cmp
sbb
lods
lahf
xchg
into
fisubrs
sbb
scas
cmp
fidivl
sbb
imul
mov
imul
jmp
mov
mov
and
outsb
stos
xchg
dec
idivb
cltd
xchg
adc
xor
dec
sub
jg
dec
das
mov
jnp
mov
sbb
cwtl
or
jecxz
call
ja
outsb
jmp
imull
and
inc
mov
jmp
push
loopne
mov
jmp
and
gs
cld
sbb
popa
pop
lea
sub
mov
or
je
cmpsl
cmp
insb
leave
int
out
cs
push
and
fcompl
sub
das
in
xchg
jmp
cs
fsubrl
lock
call
adc
and
dec
test
repnz
pop
sub
loopne
insb
insl
fimull
in
fdivs
and
mov
fiaddl
sbbb
sti
cmp
shrl
jle
adc
cs
in
cs
ss
ficompl
or
lock
xorb
cs
or
sub
adc
movsb
sub
bound
loop
mov
int
and
xor
sub
xchg
dec
movsb
pop
cmp
adc
stos
mov
imul
rorb
je
test
sub
xchg
sub
jmp
mov
jecxz
lods
fiaddl
cs
cld
pushf
mov
repz
adcb
sbb
and
push
sub
cmpsb
pushf
cmp
les
std
ds
mov
dec
push
and
inc
and
addr16
fdivl
pop
pop
and
push
jl
push
daa
out
stos
jmp
and
push
out
daa
dec
lahf
lods
insl
inc
or
xor
fsts
jl
insb
xor
sbb
aad
loope
lea
daa
loopne
pusha
adc
clc
addr16
and
xchg
loope
movsl
mov
jmp
js
jle
cmpsl
jl
sbb
pusha
pushf
data16
push
mov
jp
popa
dec
or
shr
adc
shll
dec
fdivrs
lea
jbe
jl
es
sub
mov
test
loopne
inc
adc
lock
in
mov
icebp
aas
and
add
mov
sbb
test
xor
inc
fnstenv
and
das
push
lods
sbb
sbb
or
stos
cs
out
test
stos
jmp
add
dec
mov
mov
loopne
mov
js
and
int
cmp
dec
test
sub
ret
sbb
in
sub
inc
add
scas
repnz
dec
pop
hlt
sub
and
pop
cs
aas
sub
jecxz
fucomp
mov
add
fisubrl
add
mov
add
pop
mov
in
fs
sub
imul
inc
cli
and
mov
imul
out
push
xchg
and
dec
xor
sub
cmpsb
inc
les
arpl
mov
gs
jmp
jae
dec
sub
mov
sub
lods
mov
rcll
int
sub
pop
sbb
mov
and
or
cmp
fdivr
sarb
dec
xchg
sub
popf
imul
xor
sbb
sub
jo
aam
lret
je
sbb
das
shrb
add
nop
lods
and
mov
mov
repnz
imul
inc
and
sbb
adc
inc
in
cs
jno
jle
and
inc
sar
iret
jp
icebp
pop
cwtl
cmp
and
int
and
je
pusha
sub
mov
pop
add
sub
and
mov
sbb
cmp
sub
aaa
in
or
and
mov
aad
sub
push
mov
and
add
aam
dec
adc
fsubs
inc
mov
push
mov
flds
push
cld
inc
and
mov
xor
sub
repnz
jne
cmc
and
mov
and
push
xor
push
cmp
cmp
loop
adc
ret
adc
push
xchg
add
ds
push
dec
add
outsb
into
inc
dec
mov
in
sub
push
in
ljmp
cmc
push
sub
xchg
test
test
scas
out
imul
repnz
add
out
xchg
andl
pop
in
or
mov
mov
bnd
sbb
cs
xlat
je
pop
xchg
jno
fsts
fsubrp
aam
or
pusha
and
int
es
mov
xor
in
je
and
ja
xor
push
jg
sbb
rcll
inc
push
xor
dec
add
bswap
dec
adc
inc
sbb
ja
loopne
iret
das
cmp
adc
pop
imul
mov
fidivrs
aaa
pop
mov
das
mov
mov
mov
push
mov
and
outsl
dec
in
jmp
or
shlb
dec
cmp
cwtl
mov
pop
arpl
movsb
push
jmp
mov
test
push
and
cpuid
mov
and
ret
and
sbb
clc
out
mov
dec
leave
and
sbb
push
lds
xchg
jae
cmpsb
insb
sub
lret
adc
leave
js
push
cli
es
ja
je
jmp
push
data16
outsb
aam
jae
and
mov
js
push
and
jmp
xchg
bound
sahf
out
fs
add
mov
mov
cmp
and
mov
cmp
test
aam
jnp
jl
and
jnp
pop
ja
dec
out
push
jge,pn
inc
sub
pushf
and
out
mov
jae
outsb
jbe
lret
lock
add
dec
dec
push
lea
push
jmp
dec
xor
jecxz
pop
stos
test
addb
mov
and
out
icebp
and
add
xlat
aas
mov
sub
sub
jp
stc
dec
push
ret
adc
push
into
inc
imul
pusha
pop
dec
cmp
xchg
adc
add
and
xchg
push
dec
pop
and
and
dec
je
mov
push
cmp
dec
push
xor
sub
or
adc
push
mov
and
lods
or
sbb
lea
cmp
das
cs
je
and
cmpb
and
mov
sub
mov
and
mov
fisubs
fists
mov
jle
and
int3
dec
or
iret
push
cs
mov
or
das
shlb
add
and
xor
popa
hlt
jg
lcall
and
jbe
mov
and
insl
jne
inc
sub
add
or
cmp
test
pop
dec
jns
cli
mov
jl
int
dec
jecxz
es
sti
cs
insb
jb
and
sahf
inc
fdiv
push
aaa
jae
cmp
add
mov
sub
or
xchg
imul
xchg
daa
sbb
push
add
stos
adc
call
arpl
xor
xor
insl
xor
and
into
xchg
sbb
loopne
sub
xor
je
push
es
mov
out
mov
arpl
stc
and
pop
jo
fmull
cli
push
out
or
and
mov
push
lret
jp
lds
ja
fs
add
and
sbb
movsl
loope
rcrl
fxch
and
stc
addr16
repnz
cwtl
movsb
das
mov
outsb
pop
mov
loopne
cmp
pop
lcall
pop
sbb
je
iret
jns
jp
mov
or
cli
jp
outsl
mov
push
cwtl
sbb
sub
jb
push
and
movl
add
jmp
jl
and
inc
inc
sbb
js
jo
or
mov
xchg
and
jno
outsb
and
es
mov
and
mov
dec
mov
icebp
cmc
sub
shr
sub
sbb
out
xchg
fsubp
scas
add
and
rcrl
jae
imul
jnp
test
mov
jle
sub
pop
and
and
jp
outsb
cmp
or
and
frstor
pop
cltd
sbb
xchg
in
push
and
shlb
and
sub
adc
mov
inc
scas
push
push
inc
mov
xchg
je
jge
sub
icebp
sbb
addr16
cs
lock
call
cld
mov
jae
mov
fdivl
inc
push
sub
shrl
add
or
cs
cmp
fs
jae
xor
nop
and
sbb
repnz
sub
or
or
cmp
cs
sbb
mov
pop
push
jnp
repnz
xor
xchg
shl
testl
sbb
and
sub
ljmp
or
insl
lcall
ret
cli
xchg
sbb
or
imul
scas
mov
dec
aas
sarb
inc
enter
mov
mov
imul
inc
fs
mov
movsl
jo
stc
dec
inc
sbb
or
in
sub
mov
mov
data16
inc
iret
cmp
jnp
jo
cs
sbb
cli
in
repnz
add
push
cltd
arpl
imul
cmp
sub
dec
mov
push
dec
dec
adc
fidivl
adc
test
shll
add
insl
jl
cmp
cmp
sub
jp
xchg
and
jge
and
cmp
cmpsl
xchg
pop
jnp
dec
or
pop
lods
mov
push
ret
xchg
jl
inc
insl
pop
mov
fwait
sbb
cmp
lods
xchg
jmp
out
xchg
das
jl
stos
push
inc
push
sub
mov
push
stc
mov
outsl
ret
dec
in
shlb
pop
pop
lods
xor
loopne
lea
and
add
movsb
fsubrl
out
test
int
adc
and
mov
mov
in
inc
cmp
mov
and
xchg
mov
jo,pn
inc
cmc
rclb
and
cld
jl
and
pop
mov
mov
cmpsb
push
sahf
jae
sub
in
and
push
pusha
and
scas
jbe
lods
sti
pop
and
xor
lret
fchs
imul
push
pusha
or
cmpsl
mov
and
fisubl
dec
loopne
jp
test
mov
pop
fstpt
js
je
sti
std
mov
imul
xchg
bound
inc
cmp
sub
dec
inc
push
or
push
add
and
push
mov
aaa
sbb
or
or
and
testb
popa
mov
and
and
cltd
movsb
addr16
sub
add
aas
jnp
sbb
lock
and
leave
sahf
movsl
sub
dec
call
js
sub
repnz
mov
jecxz
inc
and
loop
mov
dec
aas
imul
lock
sub
fstps
popa
sahf
inc
loopne
out
pop
pop
xchg
scas
lea
stc
sub
js
add
jl
loope
jle
and
cmp
in
cli
and
dec
enter
mov
movsb
xchg
xlat
jb
movsl
data16
fimuls
inc
movl
fs
hlt
mov
inc
sahf
cmpsl
pop
pop
inc
loope
test
pop
nop
fbld
adc
inc
dec
pop
daa
and
insb
loop
mov
mov
imul
xor
hlt
cs
inc
outsb
and
inc
mov
mov
ds
pop
sub
sbb
mov
in
enter
int3
mov
and
mov
insl
add
inc
and
cmp
jnp
mov
loopne
ds
xor
jp
lret
scas
jecxz
sub
cltd
sub
cmpsb
sub
xor
jb
dec
and
inc
jo
dec
fimull
rcrb
mov
out
and
insb
inc
rclb
test
std
fildll
dec
idivb
or
pop
jbe
out
pop
arpl
and
daa
ljmp
or
and
and
clc
fimuls
dec
es
pop
sub
ja
test
or
mov
push
das
and
dec
cli
subl
ds
push
sbb
bound
test
dec
add
jb
xor
push
mov
and
sub
dec
popa
aam
out
in
dec
and
mov
and
rcrb
and
cmp
scas
inc
and
call
mov
push
cmpb
cltd
stos
pop
fsubs
addr16
daa
inc
pop
mov
lock
and
mov
out
lods
mov
mulb
mov
push
pop
bound
mov
gs
out
les
jbe
std
jae
mov
push
das
push
push
repz
and
pop
stc
test
data16
and
sub
xchg
lea
ja
xchg
stos
inc
lret
lret
mull
cld
inc
xor
popf
jbe
xlat
push
rcrl
push
adc
jp
cmp
and
test
cli
sbb
xor
and
dec
mov
outsl
sbbb
xor
in
xor
sti
jnp
mov
popf
fbld
jo
pop
addr16
mov
pop
xor
cmp
adc
test
cmpsl
and
scas
dec
cli
xlat
mov
fisubl
scas
out
inc
sbb
mov
and
and
jbe
les
rolb
xchg
into
cmc
hlt
and
xlat
and
inc
lea
insl
mov
and
pop
push
addl
nop
pusha
sbb
out
pop
push
jmp
mov
mov
add
mull
inc
lods
stos
xor
cmc
insl
inc
inc
sbb
mov
outsl
in
mov
and
mov
cmp
pop
test
mov
push
mov
test
adc
xorl
inc
jbe
jp
mull
push
sarl
sti
jb
add
cs
int
lcall
ds
mov
sbb
lret
repnz
mov
incl
sarl
mov
inc
mov
ficompl
icebp
cli
mov
leave
jl
idivb
movsl
popf
outsb
xchg
rol
push
mov
ljmp
sub
and
popf
sub
aaa
std
stos
dec
xchg
out
mov
icebp
lods
xchg
xor
int3
cmc
loopne
outsl
cmp
mov
add
adc
cmp
cltd
mov
or
repz
mov
mov
pop
stos
rcrb
mov
jmp
sub
in
lret
loope
test
mov
mov
push
popa
enter
icebp
add
pop
cmp
push
lods
hlt
scas
pop
lods
mov
xchg
repz
xchg
and
arpl
gs
test
jbe
repnz
mov
insb
out
or
and
mov
mov
fbld
push
inc
leave
sub
orb
xor
mov
iret
fsts
cld
ja
and
lcall
and
out
repz
and
cs
and
jnp
out
push
in
push
hlt
inc
lret
and
mov
sbb
mov
repnz
dec
sbb
and
sbb
in
sbb
mov
je
out
dec
push
push
stos
into
xchg
lcall
pop
adcl
mov
mov
inc
add
cli
sub
rorl
int3
lods
and
sub
and
sub
cmp
sub
in
mov
push
js
xor
sub
repnz
xchg
jge
lods
and
push
mov
pop
scas
lret
sub
push
psrad
cmp
mov
inc
inc
jno
outsl
fidivrs
iret
insb
jecxz
hlt
arpl
cmp
mov
push
mov
add
add
in
and
ret
jmp
jp
jne
and
ret
jae
and
inc
sahf
repz
mov
ljmp
and
lock
mov
and
sub
or
inc
jmp
imul
sbb
aas
lahf
and
in
sbb
and
jle
xorb
shlb
fwait
pop
in
and
cmp
test
mov
push
and
push
insb
xchg
out
mov
sub
jmp
or
mov
jmp
cli
imul
repz
xchg
pmaxsw
push
xor
xor
push
or
xchg
insl
ljmp
sbb
sbbl
rolb
adc
sbb
sub
mov
insl
call
and
flds
sarb
jmp
and
and
add
test
in
cmpsl
iret
mov
and
jg
repnz
dec
xor
lcall
sub
cmp
inc
and
add
sub
mov
jae
and
test
fbld
dec
pop
and
push
lods
ret
push
addb
call
cmp
stc
dec
jp
pop
or
sbb
adc
es
push
adc
btr
xchg
pop
jb
lods
sub
lea
lods
lret
leave
in
mov
mov
push
jp
inc
jle
jmp
push
pop
mov
or
jg
push
sub
sbb
aad
daa
mov
push
in
fldenv
ret
bound
pusha
cli
andl
inc
mov
ret
jl
mov
and
mov
mov
inc
or
jbe
sub
icebp
xor
iret
lods
fs
jecxz
push
insb
gs
adc
out
in
fnstcw
movsb
inc
xchg
jg
cmp
ja
repnz
popa
dec
cmpsb
das
push
bound
adc
adc
add
mov
subb
in
scas
jmp
ja
jmp
mov
and
test
and
mov
repz
and
jno
enter
push
inc
adc
loop
adc
dec
sti
mov
mov
insb
mov
mov
cltd
jno
or
shlb
test
jecxz
sub
dec
add
imul
cs
dec
popa
inc
jae
xchg
mov
cmp
lret
ucomiss
push
cmpsl
and
and
aam
push
and
popa
jno
stc
in
and
lods
jmp
mov
pop
das
jne
shll
in
cmp
shlb
inc
sbb
dec
popa
adc
mov
xchg
mov
ljmp
push
mov
fimull
pop
jp
push
lds
fldl2e
test
in
adc
push
inc
mov
sbb
xchg
and
pop
nop
inc
js
je
push
cmpsb
sub
mov
xor
add
xchg
mov
stos
pop
push
or
sub
sbb
mov
mov
sub
mov
mov
or
std
ljmp
sub
sbb
call
and
fldcw
inc
push
cwtl
pop
data16
pop
push
hlt
fisubrs
xchg
push
dec
das
mov
daa
add
cmpsb
test
pop
repnz
mov
gs
leave
out
mov
pushf
cmpb
pushl
jns
sub
jecxz
dec
andl
sub
mov
lret
ljmp
aas
and
jle
lods
jge
and
popf
add
sub
sub
out
leave
call
xor
hlt
sub
cld
dec
pop
int
jl
and
pop
inc
jne
pop
sahf
jle
and
or
int
push
fsts
enter
and
lock
aad
lret
ss
sub
dec
dec
ja
push
loopne
mov
mov
in
daa
push
xchg
lods
ret
mov
mov
in
inc
shr
and
in
xchg
and
pop
or
dec
loopne
xor
xorps
inc
ja
xchg
aas
cmp
mov
bound
push
cli
in
adc
repnz
stos
addr16
int
add
fimull
adc
fcom
push
pop
sub
mov
jle
and
out
mov
subl
fwait
imul
aas
test
pusha
and
arpl
or
out
sub
dec
sbb
jle
sub
mov
adc
js,pn
shl
dec
loopne
cltd
cmp
inc
jbe
sub
dec
push
dec
xchg
cmp
push
leave
and
push
andb
push
push
adc
inc
pop
cmp
sub
psubd
bound
scas
inc
jge
pop
cmp
cmpsl
lock
cs
js
movsl
push
es
jge
xchg
jae
ret
pop
sub
inc
int3
xchg
pop
mov
adc
or
jl
data16
and
and
inc
and
inc
in
and
popa
jg
int
sub
or
jle
jp
and
stos
test
and
add
lods
inc
mov
and
movsb
jns
jl
jle
jo
inc
sahf
sbb
cs
sti
xchg
adcl
adc
and
pop
ret
shll
and
dec
jecxz
sub
loopne
xor
push
clc
sarb
fiaddl
fmulp
xchg
mov
lahf
add
push
imul
sbb
add
mov
scas
xchg
mov
cwtl
sbb
iret
push
mov
adc
sub
sub
fdivrs
cmp
jns
lods
test
mov
xchg
sub
and
and
repnz
or
out
outsl
xor
mov
ret
inc
cmp
inc
mov
outsb
aam
ret
and
xchg
push
andl
fiaddl
cmp
enter
push
adc
ljmp
jmp
mov
lods
xchg
lods
jbe
push
mov
cmc
push
mov
sub
xchg
jmp
and
sub
mov
fldt
sub
imul
jp
aas
fsubs
movsl
add
cmpsl
mov
sub
pushf
fdivrl
insl
jbe
and
and
push
std
mov
icebp
imul
lods
jo
push
aas
pop
mov
pop
call
and
lret
aam
jge
mov
xchg
jnp
data16
cs
and
scas
insl
and
ficoms
push
add
mov
test
and
ja
hlt
jo
xchg
lods
jg
in
out
rorl
inc
sub
clc
lods
int
nop
and
gs
and
adc
mov
add
sub
push
icebp
lcall
and
test
mov
ljmp
idiv
mov
adc
scas
cmc
or
test
jae
or
loopne
push
sub
int3
dec
sub
and
jns
sbb
scas
or
out
scas
mov
dec
add
mov
sbb
subb
inc
int3
daa
in
push
sub
sub
ss
ret
icebp
fistl
dec
push
scas
mull
push
mov
xchg
fucomip
mov
mov
pop
xchg
cli
pop
enter
mov
and
mov
fdivr
mov
pop
aaa
push
and
dec
cmp
repz
and
inc
cmp
jns
jmp
cs
push
and
stc
shll
rol
std
imul
adcl
adc
daa
and
outsb
std
js
lea
addr16
cs
lds
or
jmp
ljmp
inc
out
call
and
cmpsl
in
add
and
sbb
je
push
mov
out
cmc
lcall
out
arpl
adc
js
inc
insb
ret
test
jmp
jp
add
cltd
and
pushl
sbb
scas
sbb
arpl
mov
cs
popa
cli
jg
add
cmp
sub
mov
push
mov
dec
stos
dec
cmp
and
sbb
mov
pop
mov
repz
stc
adcb
and
inc
call
insl
lods
shll
and
scas
push
fisttpll
adc
and
jp
pop
cwtl
mov
adc
adc
mov
jmp
dec
repz
sarb
mov
ret
or
and
fbld
subb
clc
imul
xchg
cltd
pop
inc
rcrb
and
sub
mulb
subb
push
repz
lahf
xchg
push
repnz
hlt
and
push
sahf
bound
adc
xchg
mov
pop
push
inc
mov
jmp
clc
sub
movsb
add
push
push
and
leave
or
loope
mov
mov
imul
hlt
imul
jmp
mov
pop
xchg
jno
lods
dec
imul
repnz
xor
loopne
push
outsl
add
and
out
divl
sub
jl
sub
fcompl
imul
xchg
mov
mov
jl
les
mov
ja
shr
shlb
scas
es
cmp
in
cmp
je
lds
or
scas
test
imul
jle
lods
pop
insl
dec
iret
mov
test
repnz
jne
out
loop
mov
mov
sub
cld
or
in
cs
push
push
push
push
jmp
sub
add
and
xlat
dec
clc
sub
ret
jbe
add
adc
mov
and
push
xchg
xor
push
mov
add
mov
bswap
inc
call
clc
fdivrp
jmp
adc
insl
pop
popf
or
cs
sbbl
and
xor
push
das
fisttps
out
sub
or
sahf
push
and
push
add
dec
scas
or
cmpsl
cmp
push
es
sahf
lods
jp
and
cld
fidivl
push
jns
aaa
pavgb
and
xor
call
push
push
in
sub
and
in
insb
mov
test
adc
pop
arpl
dec
xchg
pop
imul
hlt
sub
nop
mov
cmp
mov
mov
xchg
dec
mov
cmpsl
jne
jns
lahf
faddp
insb
or
sbb
cli
push
sub
cmc
test
mov
jne
pop
adc
out
push
cs
pop
pop
scas
jbe
subb
testl
dec
sub
cltd
pop
mov
jmp
nop
sub
push
insb
pop
push
and
mov
dec
sub
push
pop
push
loopne
je
dec
sbb
adc
mov
sahf
pop
and
fidivs
and
lods
stc
out
pop
les
sub
mov
cli
inc
lds
outsb
ficoms
inc
mov
push
add
shl
les
jmp
jb
push
cmp
adc
lods
loopne
or
mov
pop
and
sub
adc
cs
cltd
xchg
sub
pop
movsb
loope
adc
pop
outsb
inc
cmp
or
enter
and
push
and
shll
or
jmp
icebp
sub
loope
inc
xchg
mov
sbb
adcl
das
pop
mov
sub
cmpsl
mov
clc
lret
mov
jmp
add
negb
enter
and
pop
mov
cli
xchg
push
and
cmp
mov
and
out
cmp
cmp
and
push
pop
lret
cmp
cld
sub
xchg
lods
and
aas
push
das
push
lods
and
sbb
sub
and
arpl
rcrl
adc
repz
lods
and
inc
jg
sahf
xchg
push
les
enter
adcl
lahf
push
add
sub
outsl
data16
es
and
movl
mov
outsl
jecxz
into
scas
xchg
int3
xchg
push
and
outsl
iret
add
mov
inc
pushf
jmp
mov
add
mov
adc
sub
rclb
mov
pop
imul
and
xchg
jl
and
cs
in
pop
inc
movsl
mov
into
ljmp
mov
js
in
popf
pop
xchg
lahf
xor
out
inc
in
rorb
test
out
mov
cmp
les
mov
js
test
xor
out
mov
in
popa
and
ret
repnz
test
cs
fdivs
outsb
sti
ds
lret
and
adc
cmp
mov
mov
in
inc
les
cmp
ljmp
repnz
or
mov
cs
push
and
aam
xchg
sbb
scas
pop
jne,pn
dec
sub
mov
ljmp
pop
mov
aam
lock
jns
sahf
jne
xchg
dec
sub
ret
scas
jne
cmp
sub
xor
inc
dec
sub
mov
movsl
cmp
ds
lds
dec
ficomps
lret
mov
or
in
and
add
fidivrs
xlat
jae
add
xchg
cmpsb
mulb
popf
dec
shrl
fistpl
xchg
aaa
jg
das
loopne
and
or
mov
add
fs
add
adc
jae
pop
mov
pop
nop
jo
int
ja
adc
cmpsl
test
adc
push
gs
stc
in
insl
add
outsl
and
sbbb
and
cs
mov
mov
and
jae
push
insb
lods
mov
mov
and
push
fldenv
addl
cmp
xchg
and
mov
lret
jae
cmpl
mov
and
xor
ljmp
rolb
ret
cwtl
pop
test
push
mov
cmp
in
pop
mov
dec
imul
sti
jns
sbb
out
jne
pop
mov
pop
push
into
jle
add
add
sub
dec
xchg
add
add
sub
sti
sbb
sub
sub
dec
xor
cld
loopne
mov
lods
shrb
nop
jl
push
push
mov
lcall
xchg
push
pop
int3
sbb
sub
xchg
std
pop
and
push
mov
cmp
pslld
pop
lret
mull
bnd
sbb
outsl
sbb
push
out
adc
add
popa
scas
cld
adc
mov
mov
rclb
mov
mov
int3
dec
and
mov
mov
addr16
stos
or
fwait
and
dec
inc
sub
movsb
fs
xchg
dec
jmp
mov
fbstp
mov
into
adc
sub
cmp
xor
sub
das
lahf
or
sub
scas
mov
adc
or
pushf
ja
jnp
shlb
enter
dec
repnz
scas
cs
mov
loopne
adc
int3
nop
inc
cltd
jl
ljmp
sub
adc
add
loop
cld
ss
adc
stc
mov
fisttpl
and
cmp
or
dec
insb
jb
sahf
push
test
insl
fdivrl
or
jle
xor
or
xchg
fstps
dec
cs
lret
imul
data16
or
xchg
and
mov
fldt
sti
or
push
loopne
cmp
xchg
inc
mov
sub
imul
imul
sub
sub
mov
cmp
xor
sub
xor
dec
mov
inc
sarl
aam
les
lret
movsl
sbb
out
mov
pop
cmp
or
aaa
xchg
inc
adc
dec
stos
sub
jo
and
push
sub
mov
lret
cmpsb
mov
xchg
rorb
or
icebp
mov
jno
popa
movsl
scas
cmp
jmp
pop
sub
xchg
or
test
lds
lret
mov
sarb
xchg
imul
and
pop
fidivrs
lods
lahf
add
sub
lock
scas
mov
xchg
push
xor
mov
pop
outsl
lret
jle
push
cmp
mov
adc
push
lea
out
mulb
cltd
cld
xchg
hlt
lcall
lds
gs
mov
mov
test
insl
inc
mov
int
mov
fdivl
popa
and
cli
pop
sbb
repz
in
pop
sub
in
xchg
pop
xchg
sub
mov
xor
sbb
xor
jnp
cmc
scas
inc
push
loopne
sbb
jae
sub
les
sub
and
shlb
and
push
fwait
icebp
jmp
cmpsb
sub
push
es
and
dec
daa
pushf
sbb
adc
add
push
cmpl
mov
hlt
sbb
test
ficompl
mov
adc
lods
pop
sub
add
jbe
cltd
out
popa
mov
cmp
je
inc
incl
xorb
ret
shll
test
mov
scas
mov
inc
add
push
popa
in
test
aaa
and
mov
adc
fisubl
xchg
ror
lret
lahf
and
adc
aaa
cs
push
rol
out
cli
out
adc
sahf
or
test
fisttpl
orb
sbb
fsubl
shlb
js
mov
cs
push
divl
pop
shll
add
out
repnz
mov
dec
xchg
or
cmp
mov
xchg
sub
sub
xchg
pop
lods
shll
dec
test
dec
repz
inc
and
mov
xlat
push
test
jo
xchg
fwait
dec
jae
arpl
enter
jmp
insb
xor
and
movsb
les
mov
sub
sub
sbb
jno
out
std
add
sub
jae
popf
ljmp
mov
mov
pop
test
mov
fsubl
mov
imul
ja
shll
out
cmp
adc
or
gs
jge
and
aas
adc
fs
pushf
sbb
mov
ja
fildll
xor
mov
test
adc
sub
fimuls
sub
inc
aaa
xchg
or
jge
cmp
add
add
in
jo
push
push
sub
jecxz
and
jno
mov
and
sub
inc
out
test
jmp
call
adc
popa
lret
rclb
xchg
push
pop
xchg
push
out
imul
jmp
rclb
shll
add
dec
jo
and
mov
mov
pop
adc
sbb
or
xlat
and
les
lock
inc
push
adc
decb
mov
xor
and
outsl
in
and
mov
lahf
cli
mov
xor
mov
insb
in
rcrb
aad
lds
push
ret
cmp
mov
repz
dec
push
cs
cmp
shld
inc
stos
mov
push
repnz
mov
pop
and
cmp
imulb
shrb
ljmp
movsl
repnz
xrelease
popa
repnz
stos
icebp
repnz
mov
cli
ja
ret
sub
push
cmp
and
xchg
lahf
and
jp
add
mov
jle
push
lret
or
std
add
pusha
out
push
sbb
mov
adc
mov
xor
pop
sti
pusha
inc
scas
cmp
mov
adc
and
inc
and
lea
adc
iret
and
push
repz
mov
daa
outsl
adc
mov
xchg
pop
jnp
test
movb
pop
push
test
add
insb
and
cs
shlb
add
and
jl
stc
lods
sub
sub
sub
xor
jb
and
inc
shl
enter
pop
clc
mov
pop
xchg
jmp
stos
repnz
popf
into
and
cld
xor
loopne
fmuls
jge
adc
mull
ss
orl
inc
or
push
xor
sbb
fcompl
das
lock
lret
cmc
cld
gs
cmpsb
and
ret
mov
iret
mov
pusha
adc
and
insl
and
and
shlb
xchg
and
ret
adc
sub
lahf
xlat
and
xchg
in
sti
fisubrl
and
in
mov
and
js
xchg
aaa
and
sub
or
addr16
mov
dec
jae
sbb
mov
pop
jb
repnz
xchg
in
xor
adc
xchg
inc
fldenv
mov
sbb
mov
xor
mov
add
fimull
and
push
push
push
and
andb
sub
or
jecxz
and
and
out
dec
and
sub
int3
lret
jg
dec
rorb
pop
or
xor
outsb
push
jnp
push
jae
sbb
cmp
and
and
xor
inc
and
jb
sub
jl
jp
jbe
nop
repz
jne
push
or
sub
pop
mov
push
pop
lock
ret
adc
adc
icebp
and
inc
jle
pop
les
cwtl
lcall
mov
xor
outsb
imul
mov
mov
sbb
adc
outsb
xor
cmp
fwait
in
inc
xchg
scas
int3
lea
add
test
stos
xchg
in
xlat
cmpsb
add
adc
mov
inc
movsl
jae
insl
mov
jecxz
push
jmp
loop
sub
inc
mov
or
jae
sub
and
movd
push
fdiv
and
and
add
cs
cmp
rorb
in
and
in
ljmp
mov
pop
lods
xchg
cwtl
out
lock
or
ret
sti
in
cmp
xor
mov
dec
xor
enter
int
push
xchg
push
and
fst
sahf
frstpm(287
inc
outsl
add
shl
and
jne
jo
lods
in
sub
cmp
and
jnp
imul
jp
movsl
insb
dec
or
push
jle
and
ja
push
dec
mov
and
mov
push
and
sub
dec
or
outsb
jp
cld
and
call
sbb
jbe
inc
scas
sti
lret
lods
shrb
jns
dec
out
mov
cltd
jmp
add
push
xchg
scas
cs
notl
pop
pushf
add
ror
xlat
and
stos
and
mov
or
cmp
jecxz
sbb
pop
jnp
iret
pop
cmp
or
cli
test
jg
das
lds
fsubrp
inc
shr
and
adc
xlat
adc
lods
pop
mov
sti
xor
dec
mov
cmp
and
shll
fmulp
test
and
arpl
icebp
mov
neg
adc
sti
insb
fadd
sarb
mov
out
scas
cmp
mov
ret
loopne
enter
mov
jns
fisttpl
mov
and
lcallw
cltd
pop
test
lods
lahf
mov
fstps
mov
and
sar
js
push
sub
add
out
cmp
fcompl
stos
sti
xchg
cmpsl
pop
xchg
mov
fldl2e
pushf
jbe
pop
movsl
mov
and
push
lahf
cmp
cmp
fimuls
icebp
hlt
repnz
pop
and
and
ficoms
xlat
out
ficoml
fimuls
adc
lcall
imul
repnz
xor
sub
movsl
push
pusha
push
outsb
dec
daa
lcall
movb
scas
sub
inc
push
xchg
sbb
outsl
jnp
shr
or
add
sub
push
and
jbe
jno
sbb
cmp
push
fs
cmp
mov
mov
dec
pop
cmp
mov
sub
pop
push
shlb
test
and
xchg
cmp
jno
or
stos
pop
xor
int
scas
cld
and
sbb
cmp
jns
add
xor
cmp
call
pop
cwtl
mov
imul
cmc
lcall
cmpb
jg
sub
out
inc
sar
or
add
scas
sub
sbb
lahf
jno
sbb
lods
or
xchg
adc
mov
pop
xor
mov
or
icebp
xchg
push
sbb
inc
dec
adcb
dec
and
sub
push
cli
xchg
mov
lcall
fimuls
lcall
sti
lods
adc
test
pop
mov
pop
push
js
sahf
cmp
xor
sub
in
fldl
and
inc
cmp
inc
mov
aad
out
dec
adc
repnz
jmp
sub
cmpsl
insl
sbbl
imul
cmp
inc
push
arpl
sub
xchg
icebp
test
xor
mov
rcrb
sub
cmp
js
fiadds
out
cmc
mov
subl
xchg
subl
mov
ret
popf
movsl
cmp
dec
shl
rcr
push
sub
push
adc
fstpt
out
sub
pop
cmp
and
or
popf
jns
clc
xchg
sub
scas
and
push
leave
in
imul
or
int3
inc
pop
push
faddl
jge
cwtl
sbb
daa
lahf
leave
jmp
repnz
rol
jo,pn
lea
inc
and
loope
xor
cmp
roll
and
out
dec
shll
into
mov
adc
hlt
sub
lods
dec
shufps
and
daa
xlat
fbstp
test
leave
mov
jae
xor
and
push
jmp
mov
push
jns
pop
or
xchg
sbb
sub
nop
shl
push
push
and
sbb
lock
ja
mov
xchg
jnp
jae
aaa
jl
jmp
dec
pop
jae
or
jp
inc
and
data16
and
outsb
test
pushf
imul
mov
scas
mov
xchg
jbe
inc
dec
sub
icebp
push
lret
mov
and
adc
sub
inc
ja
insl
dec
shrl
int3
mov
aam
xor
jb
fnstcw
popa
push
inc
subl
sbb
lret
jo
push
sbb
mov
mov
les
and
loop
push
inc
cmp
xchg
js
jne
mov
add
testb
xchg
sbb
cs
ficompl
mov
and
mov
in
mov
inc
call
push
bound
sub
int
push
and
dec
mov
cmpsl
aaa
jge
enter
sahf
movsl
cmp
sbb
comiss
and
scas
jne
in
mov
in
xchg
test
popa
cmp
jmp
xor
test
cltd
xchg
roll
and
test
pushf
sub
sub
sbb
push
int
jo
and
pop
push
cmp
in
or
repz
mov
adc
or
jg
xchg
sub
jecxz
lret
and
cmpsb
xchg
xchg
mov
pop
in
mov
cwtl
fmul
dec
sarb
cs
adc
sub
pusha
sub
sub
and
and
jo
insl
and
mov
mov
push
xchg
ja
rolb
mov
add
and
adc
sub
jb
pusha
and
scas
pop
mulb
sub
xchg
push
adc
mov
xchg
test
mov
imul
push
lret
cwtl
mov
loopne
and
mov
pop
pop
xor
aam
out
aas
rclb
pushl
dec
fsubrp
xchg
jge
pusha
movsl
sub
in
sti
call
bnd
pop
dec
inc
pop
ljmp
mov
add
js
sbb
adc
and
sub
jbe,pn
sti
push
dec
mov
and
incb
in
insb
dec
popf
add
add
sarb
sub
mov
sbb
test
loopne
dec
mov
out
movsb
in
and
or
flds
mov
xchg
ret
sbb
jb
mov
rolb
shlb
and
lcall
dec
sub
xchg
addr16
xchg
cmp
in
dec
inc
call
inc
pop
and
xchg
push
out
fwait
cmp
inc
das
lret
lret
or
shlb
pushf
jp
jmp
es
sarl
pop
jno
dec
pop
fisubs
inc
inc
fldt
xchg
int
mov
xor
dec
mov
adc
rolb
lds
jnp
adc
add
mov
push
jns
in
insb
pop
fsubr
lret
add
cs
jp
sbb
mov
adcb
or
sbb
add
jno
iret
and
xchg
ljmp
and
std
mov
outsl
ljmp
xchg
pop
or
lods
and
movsb
mov
add
cs
icebp
testb
hlt
mov
mov
andl
dec
shll
ljmp
cmp
jle
lret
jge
movsb
push
stos
add
mov
sbb
out
jge
push
aas
adc
mov
dec
lahf
cmpsl
mov
popa
sub
je
and
dec
icebp
sub
cmc
adc
and
cmp
mov
popf
dec
adc
sub
jge
int
mov
add
add
mov
jl
sub
mov
cmp
test
lods
movsl
xchg
and
fwait
lds
mov
add
loope
adc
dec
or
or
sti
dec
jge
out
jmp
lock
pop
cmp
push
mov
pop
movsb
xor
push
pop
icebp
mov
inc
pop
enter
push
aaa
in
and
xor
pop
dec
inc
sarl
adc
out
cmp
inc
cmpsb
xor
lea
add
push
repnz
xor
loope
cmp
mov
xchg
cs
ja
fsubs
cs
lcall
cli
popa
outsb
add
mov
xchg
sub
inc
add
push
mov
mov
jno
int
lret
std
sbb
mov
push
pop
push
lods
lods
loop
pushf
lods
mov
sub
mov
mov
repnz
incl
mov
ljmp
push
mov
and
jge
cvtps2pd
test
xor
loop
cmp
adc
xchg
je
repnz
ss
cs
movsl
pop
lds
dec
imul
out
push
es
js
dec
xchg
lahf
hlt
lea
pop
mov
cmp
scas
push
and
adc
push
rcrb
dec
sub
nop
xchg
adc
leave
in
or
pop
sub
sub
add
jne
gs
mov
cmc
and
jb
pop
and
ljmp
pop
xorl
and
loopne
out
adc
jmp
call
mov
and
cld
sub
das
pop
push
pop
aad
mov
and
mov
negl
jmp
xchg
xchg
mov
mov
cmp
and
clc
js
mov
inc
stos
mov
leave
adc
das
std
sbb
cmc
pop
mov
jecxz
scas
push
into
shlb
int3
xchg
lret
mov
or
daa
jecxz
sti
push
xorl
jg
imul
adc
pop
jmp
inc
stc
push
movsb
jae
jg
dec
pop
push
aad
mov
call
repz
mov
insb
dec
cli
and
jge
pop
jnp
dec
jbe
or
lock
addl
jmp
adcl
or
gs
xlat
push
lods
ficompl
imul
pop
adc
mov
bnd
shl
lock
daa
cli
mov
pop
negl
sub
push
or
imul
mov
pop
xchg
js
repnz
mov
dec
adc
nop
push
xor
addr16
icebp
cmp
fisubl
in
add
and
sub
cltd
aad
mov
nop
pop
icebp
push
int3
dec
or
mov
aas
mov
shrl
mov
bound
mov
sub
adc
sbb
add
sahf
inc
addr16
daa
mov
pop
sbb
push
jg
cvttps2pi
fmull
lods
or
lret
xor
sub
adc
leave
push
and
ud2
cmp
inc
popa
cmpl
push
scas
xor
adcl
shl
xchg
inc
test
mov
and
es
out
aad
test
or
sub
sub
inc
in
inc
sbb
out
inc
pop
push
dec
dec
cltd
adc
and
sub
repz
dec
nop
test
dec
xor
cmp
xor
es
sub
in
ljmp
jmp
sahf
mov
or
in
negl
and
push
sbb
lds
mov
lea
into
incb
les
or
and
jne
dec
scas
push
and
lock
call
inc
mov
jb
inc
mov
outsl
lods
mov
inc
fsubr
inc
xchg
jmp
push
test
mov
sub
fiadds
outsb
dec
sbb
add
mov
push
or
pop
mov
ffreep
out
push
jo
psraw
xlat
adcl
orb
nop
leave
std
add
inc
adc
aad
and
filds
jnp
outsl
jnp
and
mulb
and
pop
rol
push
data16
mov
push
test
fldcw
sahf
cli
mov
and
not
sti
lods
popa
sbb
and
bound
dec
js
push
cs
iret
insb
ds
idiv
jnp
adc
pop
test
xchg
push
and
rcrl
ljmp
scas
ja
xor
mov
mov
jnp
push
cli
add
jo
shlb
mov
test
int
in
ds
fildll
inc
adc
stc
or
fists
pushf
pop
lahf
dec
sbbb
or
repnz
lods
push
adc
and
jns,pt
add
fisubs
dec
and
and
jmp
in
mov
mov
sub
int
xor
movsl
lret
sub
fisubrl
lret
lcall
shl
bound
cltd
loop,pn
sbb
mov
cmp
sub
sar
and
dec
fistl
adc
xor
fildl
test
push
leave
popa
push
ljmp
clc
fbstp
push
inc
push
jp
adc
sbb
imul
in
sbb
fwait
je
pop
mov
and
xchg
or
and
data16
mov
test
jns
push
or
pop
jp
cmp
mov
mov
and
cltd
and
jb
xor
adcb
mov
ret
push
iret
outsl
jo
or
sub
aad
jbe
ss
jne
jo
data16
int
sbb
fwait
repnz
pop
jl
and
pop
adc
movsl
fcomi
cli
mov
mov
or
xor
jae
sub
test
and
jb
test
push
leave
jl
mov
sbb
pop
lds
and
cld
push
data16
repnz
mov
clc
pop
and
sub
sahf
ljmp
movsl
inc
mov
clc
or
mov
adc
mov
sub
out
movsl
pop
les
cs
mov
and
adc
sti
sub
add
fucom
sub
dec
and
aam
pop
jmp
push
sbb
aad
inc
scas
test
pop
gs
add
mov
cltd
and
inc
das
add
stos
ss
and
fistl
xchg
and
shrb
mov
xchg
mov
mov
adc
mov
add
push
adc
cld
test
cli
jge
push
jmp
inc
sarb
or
push
push
add
push
push
push
bound
xor
stc
imull
in
imul
push
es
inc
and
rorb
and
cltd
sarl
test
mov
clc
jae
xchg
and
jno
and
dec
std
scas
addb
or
xor
sub
xor
inc
sbb
lods
jecxz
into
cs
shll
jp
cltd
mov
and
dec
imul
shlb
mov
and
cs
and
xchg
pop
jb
pop
test
and
shll
cmp
jecxz
inc
jmp
and
xchg
cmp
imulb
push
aas
jnp
fnsave
xchg
cwtl
jg
cmpsl
inc
mov
or
pop
dec
lahf
out
mulb
movsl
bound
inc
decl
and
lret
and
lods
jbe
movsl
xor
push
movsb
fdivrs
mov
xor
call
pop
mov
pusha
test
sarb
es
mov
xor
mov
test
xor
pusha
xor
and
fs
enter
in
jecxz
std
xchg
mov
stos
add
pop
ret
test
mov
out
insb
and
mov
xor
mov
repnz
nop
dec
and
cli
std
lcall
sub
add
xor
cs
stos
cs
adc
daa
stos
inc
sub
add
xchg
push
in
mov
mov
daa
xor
and
orl
cltd
outsb
ja
mov
xlat
js
cmc
jae
loopne
cli
mov
push
in
jge
daa
and
push
dec
lods
repz
test
and
imul
dec
mov
cmp
sbb
or
push
mov
add
jp
or
cwtl
sbb
dec
stos
add
inc
sbb
mov
mov
xor
and
adc
xor
fdivl
mov
jae
jo
mov
cmp
add
lods
imul
xchg
and
jnp
jne
pushf
inc
and
stc
gs
mov
mov
xor
jg
mov
push
jle
cmpsb
lock
cmpsl
loope
lcall
mov
sbb
pop
and
mov
nop
shrl
xchg
ret
sahf
inc
clc
cli
andb
rorb
cmp
lods
inc
and
imulb
pop
mov
rcll
sub
loopne
add
mov
xorl
test
pop
arpl
int
or
pop
test
lods
in
aas
and
test
mov
loope
and
jmp
notl
sub
mov
sbb
cltd
sbb
and
sub
xchg
and
cmp
dec
jb
nop
fdivrl
iret
bound
scas
es
adc
jl
stc
insb
push
mov
xchg
int3
sarb
mov
ljmp
in
xchg
cmp
and
mov
mov
cld
sbb
es
lods
and
clc
mov
lahf
addr16
sbb
mov
stos
subb
fidivs
cwtl
pop
enter
movsb
cmp
lods
in
jge
add
out
cmpsl
mov
and
andl
ds
pop
jge
adc
arpl
pop
lods
fisubrs
xchg
xlat
jae
cs
scas
or
xchg
sub
int
or
and
and
idiv
cwtl
rcrl
add
test
or
fwait
in
mov
xor
mov
je
and
sbb
jnp
push
adc
sub
lock
loope
scas
or
pop
push
xor
and
inc
and
pop
jl
loope
and
test
xor
add
or
dec
and
mov
dec
mov
fs
imul
push
nop
inc
pop
sub
xchg
ss
dec
and
pop
shll
lea
xor
jle
fisubs
cs
rcll
xchg
pop
int3
jb
cmp
mov
xchg
pop
inc
jecxz
das
shlb
test
lods
adc
cmp
ret
add
mov
fiaddl
movsb
adc
iret
adc
mov
push
imul
mov
lahf
sbb
test
jge
jno
jg
imull
fidivl
adc
inc
xchg
mov
or
nop
jae
pop
jle
daa
sarl
and
inc
jg
xchg
lret
repnz
sub
push
fnstenv
popf
cmp
je
and
inc
mov
cmp
iret
mov
mov
lods
jecxz
pop
cmpsl
dec
mov
int3
adc
movsb
or
sub
xchg
xchg
cmp
imul
mov
push
aaa
push
testl
sub
in
stos
and
dec
std
sahf
ljmp
pop
imulb
iret
lea
jmp
movsl
cmp
jmp
inc
xor
cmp
inc
xchg
inc
xchg
out
lock
ss
push
data16
mov
pop
xchg
mov
ja
dec
or
gs
mov
mov
imul
sub
lahf
cmpsl
sbb
sti
ja
test
inc
pop
add
pop
cmp
cmpsl
jnp
xchg
shll
fbld
ljmp
out
int3
mov
xchg
or
mov
pop
test
push
stos
pop
loope
cmpsb
js
and
addl
leave
adc
pop
test
mov
gs
imul
cmp
fisttps
mov
xchg
scas
and
sbb
jle
push
jnp
add
push
call
adc
sub
mov
jnp
inc
mov
and
mov
shr
mov
sbb
mov
xchg
loopne
mov
into
cltd
outsl
clc
arpl
negb
shlb
mov
xchg
ds
std
adc
mov
pusha
in
xchg
pop
mov
stc
aaa
jbe
ja
orb
fsubs
cwtl
loopne
dec
and
and
int
rcrl
fninit
jno
movsl
iret
xchg
xchg
and
and
notl
or
and
ljmp
mov
shl
test
fisubs
popa
scas
jns
leave
frstor
xchg
imul
push
mov
sub
rclb
and
inc
in
xchg
fnstcw
cwtl
and
imul
add
cltd
ror
pushf
jecxz
mov
jae
mov
pop
xlat
sbb
in
mov
scas
insb
inc
aas
jecxz
popa
cmp
sub
jo
push
mov
cmp
rcr
sub
jp
imul
mov
mov
jno
sbb
add
adc
out
jle
jge
push
dec
jb
xchg
scas
leave
pop
jne
push
test
sub
inc
mov
cmpsb
inc
jo
fldt
xchg
sbb
and
inc
rcll
inc
cmp
aam
sub
sar
gs
or
jge
in
lds
mov
jle
add
or
imul
xor
sub
mov
xchg
fs
and
or
and
shll
cmpsb
and
cwtl
test
and
dec
add
sub
push
and
cmpsl
fidivrs
mov
cmc
add
rorb
addr16
sub
mov
mov
push
movsl
inc
mov
dec
stos
push
xchg
pop
les
sub
mov
push
movsb
jp
adc
sub
mov
mov
xorl
rcr
or
sub
stos
mov
aaa
dec
ja
xor
jg
int3
jmp
inc
data16
outsb
jl
pop
out
mov
cmp
pop
scas
push
into
das
xor
mov
fldt
stos
jp
loop
jae
adc
jecxz
jmp
xchg
pop
push
xor
test
cmp
dec
or
insb
push
or
and
adcl
cmp
stc
stos
outsb
test
inc
pop
push
test
and
and
push
xlat
or
push
and
popa
sub
jl
add
fsubs
les
decl
cmp
stc
adc
dec
cli
imulb
sbb
add
sti
test
mov
dec
je
or
popf
rcll
into
hlt
xor
mov
xchg
adc
mov
jnp
mov
aas
jecxz
xchg
jae
sub
sbb
ret
sub
sub
loop
dec
enter
mov
cmp
je
sbbl
xchg
sub
cs
xchg
popa
scas
sahf
adc
jl
and
jb
mov
mov
or
dec
cmp
sub
adc
and
add
and
mov
cld
push
or
insl
sub
cmp
daa
cmc
pop
sbb
and
sahf
pop
sti
pop
ja
das
xor
mov
or
add
test
and
add
popf
sub
pop
xor
adc
xchg
hlt
pop
out
daa
arpl
xor
xor
mov
ljmp
xchg
adc
loope
dec
popf
bound
les
fisttpll
sub
cmp
sub
sub
movsl
jne
std
mov
in
xchg
pop
outsb
lea
ret
rcl
scas
popa
lahf
test
out
xlat
adc
rcrl
mov
mov
pop
adc
mov
xor
push
outsl
mov
push
jo
cmc
fs
arpl
es
and
mov
fdivrp
and
and
and
xchg
jl
std
and
mov
loopne
fcoms
sub
cld
add
xor
cmpsl
and
push
mov
dec
and
and
sub
mov
mov
xchg
push
cmpsb
jmp
xchg
and
pop
jl
xchg
push
push
repnz
insl
sub
and
stos
inc
out
cmp
fistpll
push
leave
inc
ret
lods
and
cmp
jae
ja
adc
mov
enter
mov
movsl
nop
jle
pop
sub
pop
dec
or
and
sbb
adc
cwtl
mov
jnp
sbb
test
xchg
push
and
and
bound
and
adc
mov
xchg
ror
xor
imul
and
jnp
fsubs
add
dec
jno
fsub
pop
mov
fisubs
sbb
stos
mov
pop
jmp
icebp
das
repnz
int
mov
lods
cmp
shll
movsb
mov
lock
shll
int3
jne
ja
out
popa
push
mov
jmp
cmp
fsubr
inc
sbb
pop
addr16
sub
add
sub
pusha
xchg
mov
in
jns
push
pop
dec
add
pop
sub
fisubrl
call
pop
mov
inc
jnp
pop
cli
jge
sub
rcll
mov
mov
daa
mov
fs
fnstcw
loop
and
add
cltd
jnp
xor
test
cs
add
jge
adc
mov
sbb
or
mov
mov
and
mov
dec
sub
popf
out
sub
and
out
lds
and
xlat
int
add
cli
jg
xor
mov
jp
pop
sub
and
xlat
mov
or
mov
and
out
inc
sub
inc
subb
cs
or
sub
sub
push
add
mov
popa
sub
sti
jns
jae
inc
aad
mov
sub
jnp
sub
lods
fwait
cmp
sub
std
adc
sub
mov
pop
sbb
pop
repnz
xchg
imul
lahf
xor
fwait
cmp
mov
or
movsb
das
mov
xor
xchg
and
jns
pop
out
mov
js
xchg
dec
jge
push
jecxz
out
xor
push
fs
push
lahf
pop
fmul
or
pop
cltd
lret
leave
mov
enter
out
pop
mov
and
sub
jmp
cmpsl
das
jp
push
insl
pop
lea
aas
jl
xchg
sub
insl
mov
out
lods
data16
sub
loope
and
negl
mov
pop
push
inc
dec
pop
imul
sub
add
inc
std
pop
cmp
lock
cmp
fdivl
cmp
and
sbb
dec
rorb
mov
insl
dec
push
and
inc
stos
mov
and
sahf
arpl
sub
lods
sub
sbb
xchg
push
and
cltd
mov
mov
inc
pop
and
xor
inc
push
adc
das
cmc
push
sarl
sbb
aaa
pop
pop
push
mov
dec
fbld
mov
xchg
push
jo
fmulp
mov
xchg
dec
xchg
and
hlt
clc
adc
mov
or
flds
loope
xor
sub
or
sub
lahf
jae
les
cld
lock
out
mov
sub
lods
js
sbb
mov
xchg
shr
xor
pop
scas
mov
cs
daa
addl
mov
and
xor
fsubrp
ja
pop
adc
mov
mov
jo
int
rorl
adc
sub
pop
fdivrl
xchg
mov
jo
sub
xchg
aas
ljmp
jns
scas
cs
cmp
scas
cmp
aas
fistpl
and
add
jns
cltd
inc
push
inc
out
cmp
adc
aad
into
pusha
push
fsts
dec
fists
sub
adc
sub
dec
mov
lock
test
subl
adc
cmp
pop
and
cmp
int
xor
add
shll
ret
flds
and
lods
in
mov
xor
and
jl
mov
sub
sbb
and
push
sbb
mov
out
daa
sti
push
xor
sbb
pop
test
mov
lretw
xchg
mov
and
bound
adc
add
xorl
lods
popa
shll
and
loope
pop
inc
or
sbb
rcll
dec
and
pcmpgtd
dec
stos
sti
cs
xchg
add
mov
jb
push
and
and
stos
mov
ja
cmp
fisttps
mov
sub
inc
test
leave
out
in
and
clc
fs
inc
sbb
xchg
movsl
test
and
push
cltd
dec
jo
inc
gs
in
mov
lods
cmc
and
jb
or
lret
mov
or
insl
sbb
int3
popa
push
sub
inc
inc
jecxz
in
roll
jns
and
ja
inc
shl
cmp
xchg
cwtl
insb
push
sub
je
jo
xchg
xor
fistpll
and
in
popf
lods
stc
sub
cmp
xor
mov
leave
fdivl
mov
sub
pop
or
push
push
inc
pop
jno
inc
xchg
fwait
sub
les
push
mov
mov
insb
aas
and
inc
hlt
jb
jbe
mov
jp
and
and
and
out
loop
sub
or
lock
lods
addb
xor
jmp
inc
andl
loope
adc
xor
jb
sbb
movsl
mov
cmpsb
and
nop
pusha
sub
out
loopne
sbb
aaa
adc
call
sbb
cwtl
and
dec
repz
and
push
jo
insl
jne
inc
pop
outsl
pushf
inc
xchg
or
add
mov
pcmpgtw
call
inc
mov
sti
daa
pop
and
fadd
add
int
pop
fwait
outsl
and
cmp
and
aam
test
xchg
sbb
outsb
cmp
popf
xor
mov
cmp
sti
inc
xchg
pop
sub
and
jne
nop
push
stc
cmp
jo
es
sub
and
inc
test
and
xchg
sbb
push
inc
fucomip
inc
sub
leave
push
fs
and
pcmpeqb
cmp
jae
mov
pushf
sbb
or
jle
scas
or
mov
jmp
sub
aam
mov
mov
mov
movsl
jns
jb
push
out
fisubl
insb
and
push
hlt
mov
and
outsb
lds
je
popa
das
repnz
mov
cmp
inc
add
mov
mov
fsubs
jecxz
jl
sub
dec
cmc
and
jmp
ds
and
push
jg
std
push
and
jmp
push
fidivl
outsb
push
jns
aas
jae
and
ljmp
arpl
or
push
in
push
adc
and
movsb
call
mov
xchg
bound
pusha
jecxz
xchg
cmp
and
mov
jg
jnp
or
cli
cltd
pop
aaa
jmp
and
inc
mov
and
or
andb
test
pop
cmpsl
pushf
or
stc
and
add
and
es
dec
mov
repnz
in
pop
lods
and
andb
and
mov
xchg
incl
lret
es
cmpb
add
push
or
xchg
mov
jne,pn
push
adc
scas
and
fdiv
xor
sbb
pop
and
pop
inc
arpl
dec
or
out
push
hlt
and
sbb
adc
jne
test
and
stos
dec
insl
push
out
cmpsl
sub
adc
pop
mov
bound
roll
pop
push
xchg
stc
and
int3
inc
insb
into
and
xor
add
pop
or
mov
push
pop
cli
jne
pusha
popa
and
or
in
lock
data16
bound
cmp
inc
pop
leave
and
sbb
les
lods
xchg
sub
xor
lods
mov
xor
mov
mov
and
sarb
into
lods
inc
sahf
dec
popa
sub
mov
les
leave
cmp
test
and
inc
faddl
cltd
dec
bound
bnd
data16
inc
fadds
decb
xor
mov
rclb
xchg
into
mov
mov
sar
iret
sbb
add
push
out
inc
lods
push
xchg
dec
and
psllw
cmp
outsl
and
adc
mov
loope
jmp
pop
repz
xor
adc
outsl
js
add
ljmp
and
and
push
push
ret
ja
pop
cmp
jb
cmpsl
and
adc
fwait
mov
xlat
dec
out
insb
int3
pop
cs
mov
mov
insl
add
jle
psubsb
stos
and
pop
das
lret
ficompl
pop
and
bound
cmc
rcr
push
and
and
adcl
outsb
mov
jbe
inc
repnz
dec
push
push
rcrb
mov
jnp,pn
inc
mov
int
leave
inc
rcrb
dec
lret
sbb
and
inc
outsb
pop
jle
and
push
jo
xchg
pusha
and
pop
aaa
outsb
divl
leave
movsb
and
ficoml
push
sub
push
xor
mov
cmp
sub
jbe
mov
inc
out
shrl
dec
jle
inc
sub
cmpsb
fs
test
ret
jb
test
pop
add
rorb
add
xorl
mov
and
imul
lods
out
and
mov
mov
jle
pop
jns
sbb
mov
and
xchg
scas
mov
jmp
call
jae
pop
dec
adc
ja
and
sti
daa
rcrl
sbb
xchg
addr16
fs
mov
jb
xchg
mov
lods
sub
jns
insl
cmc
and
stc
insl
or
cwtl
lahf
push
and
insb
xlat
scas
sahf
test
and
mov
in
pop
in
movsb
sub
les
cltd
pusha
jbe
shrb
je
iret
fldcw
and
mov
jg
sub
in
mov
mov
dec
in
sub
xchg
out
sub
mov
stc
repnz
cwtl
sbb
negl
mov
jo
movsb
and
loope
pop
pop
jno
cs
push
sub
add
and
js
xor
and
shll
add
sub
cltd
mov
jge
out
loop
scas
movsl
out
and
ljmp
sub
sub
xor
repz
into
and
pop
stos
out
fstl
loope
out
sub
mov
mov
subb
jle
and
movsl
std
int
push
sarb
imul
pop
xchg
ss
jnp
int
sub
mov
xchg
cwtl
cli
push
push
xor
fdiv
and
pop
outsb
into
das
pop
and
fs
sub
fwait
xor
insb
mov
push
dec
sub
out
mov
jbe
xor
inc
jb
sub
push
inc
sub
stos
mov
out
mov
mov
xchg
dec
pop
sti
mov
shlb
and
mov
out
or
mov
out
and
jbe
notb
lret
adc
mov
fwait
mov
ffree
and
and
jae
mov
inc
sbb
and
mov
and
sub
push
ljmp
dec
jle
leave
or
and
imul
jmp
sub
pop
xchg
push
and
push
loope
sub
push
push
sahf
nop
mov
jp
sbb
ucomiss
xor
and
dec
sub
and
sub
xchg
in
int3
xchg
lahf
or
and
loope
and
sub
mov
ficompl
push
push
imul
ffree
divb
fwait
scas
dec
out
popa
jno
and
push
outsl
push
lea
dec
sbbl
cli
jns
ret
dec
mov
pop
jle
loop
mov
push
gs
push
and
stc
xor
mov
icebp
mov
and
ror
cmpsl
or
push
in
cmp
jb
cmc
stos
mov
xor
out
enter
cmp
rcl
subb
mov
pop
add
adc
inc
sub
xor
add
into
mov
push
sub
pop
jle
das
add
jl
mov
add
and
movsl
sbb
cltd
cmp
ss
sbb
xchg
rolb
sub
pop
icebp
sbb
xchg
ja
add
jmp
sbb
cmp
ret
stc
shlb
sub
sub
cmc
imul
mov
jno
mov
sbb
lds
jg
and
lods
out
jl
xchg
and
inc
test
inc
or
or
xrelease
inc
rcrb
push
mov
sbb
mov
jbe
jae
in
mov
mov
test
decb
ja
mov
es
aad
inc
jecxz
mov
sub
or
push
cmp
andb
and
adc
frstor
out
popa
adc
andb
add
sbb
xchg
das
and
aam
clc
cmp
xchg
sbb
jle
lret
or
sti
xchg
push
lods
add
int3
insl
sub
ljmp
sub
dec
cwtl
and
adc
push
sub
xchg
xchg
xor
mov
cs
std
test
xchg
pop
inc
sub
rolb
les
jae
dec
mov
cli
xor
jecxz
pop
inc
mov
insb
rolb
sbb
into
push
push
fisubrl
movsb
add
add
and
jmp
stos
and
add
or
and
lea
sbb
cmp
dec
mov
and
xchg
sahf
pop
cmpb
and
mov
sbb
and
or
and
adc
and
out
add
xor
lahf
add
or
movsb
repz
and
pusha
lea
push
xor
gs
scas
inc
pop
insb
xchg
jo
aam
popf
inc
mov
int
xor
insl
xchg
sub
and
pop
sahf
inc
ljmp
sub
mov
jae
add
mov
sbb
sub
mov
adc
and
xlat
lahf
adc
mov
xchg
arpl
add
mov
movsl
mov
pop
sub
lds
out
sub
xor
xchg
fimuls
lcall
loope
dec
es
adc
xlat
push
lcall
stc
shll
loop
out
jmp
xchg
pop
and
rcrl
fucomip
das
adc
cmpsb
sub
in
sub
push
xor
lcall
push
push
arpl
mov
das
mov
andb
iret
test
sub
movsb
hlt
std
mov
sub
sahf
scas
shrb
or
mov
fdivp
aaa
push
push
sub
and
in
daa
and
lock
jne
es
ret
or
and
cmc
rcrb
sbb
push
sti
add
test
or
pop
cmp
dec
mov
and
mov
inc
cmpsl
scas
add
jb
add
outsl
cmp
dec
mov
insb
xchg
aad
hlt
mov
and
ja
decb
sub
add
out
sub
sarl
lret
test
mov
sub
xchg
ljmp
sub
nop
jmp
test
cmp
inc
int
xchg
out
insl
and
sub
cmpsb
cmp
addr16
in
sub
mov
out
or
pop
and
push
pop
xchg
mov
or
addr16
mov
mov
mov
mov
or
xor
sub
push
inc
in
lcall
cmp
cs
xor
and
lcall
cli
test
push
add
adc
sub
cs
add
stos
dec
repz
push
adc
and
out
fisubrl
dec
or
cmp
repz
stc
cmp
ljmp
or
fisubrl
inc
js
sbb
cmp
inc
mov
ja
ret
pusha
enter
stos
cwtl
dec
pop
call
jle
lret
dec
sub
sbb
push
in
ret
push
pop
pop
xor
lods
imul
xchg
sbb
or
cwtl
icebp
cmp
jl
adc
es
xchg
js
push
daa
mov
add
repz
leave
push
in
mov
mov
stos
jge
stc
mov
outsl
imul
out
sub
sar
pushf
ror
mov
jae
fistpl
cmp
jecxz
cltd
cmp
or
aas
push
sub
xor
ret
mov
leave
inc
xchg
scas
test
outsb
push
in
cli
pop
decl
sub
jns
stc
mov
decb
ja
cs
outsb
sub
scas
mov
pop
jo
dec
repnz
pop
jnp
sahf
insb
scas
mov
xchg
out
push
popf
cltd
sub
mov
push
jp
out
mov
sbb
and
sti
dec
inc
ret
cmpb
mov
fnstenv
mov
fwait
xchg
dec
jnp
and
mov
stos
add
or
aad
lods
dec
and
mov
push
frstor
adc
inc
sbb
test
clc
and
xor
adc
loop
test
add
mov
std
mov
xor
sub
mov
pop
xchg
adc
jp
scas
imul
popa
or
inc
pop
aas
adc
mov
jnp
push
cld
inc
adcb
test
and
mov
movsl
pop
jge
cmp
insb
in
cs
sbb
dec
jo
mov
xor
xchg
push
scas
jnp
and
mov
outsl
and
sbb
mov
push
addl
enter
scas
pop
lret
mov
stos
jmp
ja
fs
cs
pop
sub
inc
arpl
xor
stc
les
enter
mov
loope
mov
enter
xchg
and
insb
clc
add
fs
push
outsl
arpl
jne
mov
push
fs
sti
push
fs
push
mov
cs
leave
push
hlt
shlb
or
push
rclb
add
jp
jl
cmpsl
dec
callw
mov
push
mov
enter
out
outsl
ficomps
imul
lret
shll
or
call
sbb
addr16
gs
mov
sbb
lods
push
push
dec
mov
dec
and
mov
cmc
popa
stc
stos
bnd
jns
das
in
push
push
inc
das
fsts
jmp
cmc
jns
das
testl
dec
cwtl
and
jnp
jmp
dec
and
xlat
push
outsb
jecxz
leave
dec
js
jg
push
push
mov
or
sub
dec
xor
cs
test
cmc
mov
shrl
mov
jo
in
data16
push
inc
sub
inc
mov
out
stos
mov
dec
lret
jae
and
in
mov
in
cmpsl
rcrl
mov
test
lods
shrb
jp
loope
cld
inc
jo,pn
mov
mov
inc
bound
out
xchg
sub
pop
mov
fistl
and
pusha
movsl
mov
shlb
push
sbb
sub
imul
jp
popa
mov
mov
dec
hlt
inc
pushf
and
mov
push
in
and
push
sub
and
sti
inc
mov
cmc
pusha
and
jmp
mov
mov
mov
out
mov
out
int3
sbb
imul
loope
and
mov
add
cmp
xor
test
add
pusha
jae
lret
sbb
dec
leave
jg
adcb
or
jecxz
lret
sub
dec
xor
repnz
stc
sbb
or
jb
xor
fs
or
sub
add
adc
xchg
or
sub
push
cmpsb
outsl
fcoms
sub
jmp
jl
sub
mov
rclb
dec
cmp
adc
sub
ret
add
jle
inc
add
push
pop
fimull
and
adc
fs
sub
fisubl
hlt
mov
fisubrl
repnz
test
fistpl
and
mull
xchg
sub
cmp
pop
push
inc
cmp
into
pop
jg
vcvtsd2si
push
add
test
lock
adc
subb
frstor
cmp
adc
je
je
jo
or
jbe
lcall
xor
loop
mov
in
mov
and
mov
test
xor
ffree
pop
out
jne,pn
and
sbbb
in
mov
jne
xor
and
movsb
imul
rclb
push
insl
inc
adc
mov
push
inc
test
sub
stc
out
stos
xor
das
mov
cmp
jo
sbb
or
mov
xor
inc
rorl
das
sub
pop
cs
jge
dec
lahf
jmp
mov
mov
dec
pop
repnz
dec
xor
cmpb
sub
sbb
cmc
daa
lods
out
fisttpll
sub
nop
repnz
out
xor
loop
fwait
cld
cmp
xchg
int
and
mov
aam
ret
cli
inc
mov
lock
pop
pop
lds
mov
pop
fcmovne
mov
adc
imul
cmp
or
jmp
mov
xor
xchg
mov
or
mov
stc
inc
cmpsl
add
stc
jmp
push
mov
inc
shrb
jbe
lcall
push
sub
and
mov
sbb
pop
ljmp
jns
sbb
push
push
sub
jno
inc
xlat
lods
ficoms
mov
push
push
mov
mov
jmp
add
loope
push
lods
pop
les
mov
push
mov
xor
add
loopne
lahf
jo
jnp
int
rorb
mov
lods
xchg
out
cmp
push
xor
imul
mov
or
ss
jb
and
ljmp
mov
xorl
cvttps2pi
test
pop
scas
inc
sub
sub
sub
add
sar
pop
cmp
mov
and
mov
xchg
into
aas
xchg
lods
and
in
shlb
pop
in
sub
adc
addl
jecxz
xchg
js
push
pop
jmp
jle
sbb
in
dec
mov
cmpl
ljmp
mov
data16
mov
js
fsubs
das
jecxz
jae
shr
icebp
and
push
mov
dec
jne
cmp
fsubrl
pop
scas
pop
iret
cmp
les
cmpsb
cltd
pop
and
sub
test
mov
cs
mov
sub
imul
add
adc
repz
jle
sub
into
xchg
fdivrs
mov
sbb
leave
xor
out
and
xlat
aas
mov
sbb
pop
mov
ficomps
sub
and
repnz
iret
mov
sub
test
test
sbb
imul
daa
inc
sub
xchg
es
mov
inc
xor
mov
fidivrl
dec
mov
shrl
mov
mov
inc
mov
jno
inc
and
addl
dec
mov
push
sarl
addr16
push
mov
mov
or
dec
sub
xchg
shll
aam
pushf
jb
fsubs
mov
cs
in
xchg
ja
test
pop
and
sahf
mov
lock
scas
sub
test
sbb
push
sarl
jnp
sub
sub
shlb
in
adc
adc
add
sub
mov
jb
fs
je
mov
jno
hlt
cmp
imul
add
mov
and
ss
addr16
das
loope
imul
cmp
add
add
sbb
ljmp
sarb
std
mov
and
mov
xchg
repnz
adc
scas
outsl
repz
push
addr16
outsl
out
push
ret
sub
out
adc
lds
sub
sub
fisttps
sub
xlat
cmp
test
out
or
push
adc
adc
pop
std
and
outsb
inc
push
push
shlb
and
mov
js
inc
xchg
aam
pop
test
pop
and
test
int
mov
jo
push
push
jp
loopne
mov
in
jnp
into
or
fisubl
insl
sub
xchg
in
inc
movsl
inc
adc
jmp
call
arpl
clc
push
and
sahf
movsl
das
shl
push
addb
dec
mov
cmp
and
fsubs
or
in
and
push
icebp
and
mov
mov
push
lock
adc
cltd
call
xor
mov
cmp
jns
outsb
aam
popa
adc
jl
adcl
xor
pop
lods
add
ljmp
mov
and
pop
push
cmc
pusha
and
mov
lcall
add
inc
dec
or
movsb
dec
push
icebp
and
lods
xchg
xchg
movl
ret
or
dec
hlt
movsb
adc
sub
imul
inc
arpl
arpl
je,pn
jmp
xor
mov
int3
sarl
js
jno
lahf
push
repz
and
xchg
scas
push
nop
outsb
mov
xchg
loopne
mov
cwtl
cmp
call
addl
enter
cs
rolb
add
adc
ja
push
ss
or
xchg
test
mov
xchg
sub
pop
or
push
and
lahf
ror
mov
aaa
sub
cmpsb
fldt
and
lock
cmp
outsb
and
or
pop
lds
pop
or
not
sub
test
dec
and
mov
iret
and
cmp
jg
fcoms
sbb
imul
add
out
pop
inc
xchg
mov
push
arpl
repz
iret
and
inc
jmp
cwtl
cli
out
sarl
adc
add
fildll
jnp
enter
ret
dec
pop
sahf
mov
in
add
mov
cmp
add
xlat
mov
outsl
add
call
sarl
cmp
popf
movsb
sub
jl
sub
aaa
daa
xor
or
sub
test
pop
push
rclb
and
lea
xchg
mov
ss
add
shr
and
sbb
pop
and
jns
inc
or
cmc
and
sub
mov
jns
and
test
mov
pop
imul
or
and
pop
sub
ja
add
jg
adc
dec
sbb
dec
and
cwtl
and
adc
scas
and
jb
gs
jno
and
lret
inc
jmp
cltd
dec
and
adc
mov
je
cmp
lods
push
pop
movl
mov
dec
sub
push
pop
mov
dec
sub
sub
mov
les
lret
movsl
adc
movsb
leave
sqrtps
pop
popf
cltd
push
out
xchg
js
dec
shrl
je
std
or
loop
clc
mov
and
loopne
or
push
adc
push
lods
and
loope
sub
sub
bound
test
sbb
lret
xor
imul
addr16
and
and
pop
jle
pop
fsubrs
dec
lcall
and
adc
xor
or
jp
ljmp
inc
std
mov
divl
pushf
push
pop
ljmp
je
mov
adc
scas
and
pop
andb
clc
lea
je
xchg
mov
pop
ror
fwait
cmp
scas
aas
mov
push
and
shrb
and
stc
les
push
ds
movsl
cmp
lds
cld
daa
sbb
ja
and
call
jbe
sbb
clc
stc
jae
and
pop
lods
fistl
mov
xor
ds
loope
and
shlb
xchg
movsb
pop
and
add
mov
outsl
xor
mov
in
insl
add
sub
cli
int3
ja
xor
inc
adc
popa
pop
jnp
call
addr16
fstl
cmp
rolb
scas
jle
push
and
mov
aaa
and
ljmp
mov
jne
sub
fsubrs
cmp
sub
imul
dec
sub
iret
hlt
cwtl
adc
ret
push
dec
ret
mov
in
pop
sbb
fs
sbb
pop
jmp
xor
dec
add
and
hlt
rol
xchg
jnp
cmp
cli
mov
xchg
inc
push
and
pop
mov
sub
dec
iretw
mov
pop
lea
cli
lea
inc
sub
xlat
mov
adc
das
and
movsb
pop
or
push
xchg
and
and
mov
imul
in
lds
jmp
jb
mov
dec
mov
adc
and
leave
fwait
push
test
xchg
fildll
or
jae
xchg
mov
stos
addl
jno
outsb
mov
roll
popa
sub
sti
sub
lahf
sbb
push
and
mov
cmp
in
jb
movsl
out
out
pop
orb
and
cmp
or
jbe
and
data16
mov
jecxz
mov
and
dec
popf
and
pop
pop
movsb
scas
jle
jne
gs
sarb
rclb
cmp
arpl
and
jo
mov
push
cmpsl
and
push
push
repz
clc
and
mov
pop
outsl
or
mov
jg
popa
dec
push
popf
imulb
in
jae
jns
add
xchg
mov
mov
xchg
js
cmp
or
push
jle
sub
dec
ret
test
sbb
lret
pop
cld
cmp
popf
test
ret
rorl
and
psrld
cmp
pushf
xchg
push
mov
jmp
jecxz
xor
jae
aad
dec
rorb
jno
dec
mov
std
leave
sbb
aam
jl
mov
out
pushf
cmp
push
fistl
stos
out
pushf
adc
notl
push
lea
in
sbb
push
mov
push
sbb
bswap
insb
mov
xchg
inc
cmp
addl
ficompl
or
xchg
sbb
test
mov
loop
jge
inc
add
xchg
adc
add
scas
nop
jnp
sub
ljmp
xorl
mov
xlat
nop
mov
add
xchg
jns
dec
and
test
sub
out
jl
popf
xor
imul
or
sub
jge
sbb
addr16
andl
adcb
mov
stos
mov
in
and
cmp
outsb
and
in
adc
in
aam
pushf
sub
inc
inc
or
idivl
mov
incl
jae
xchg
jge
bound
push
pop
jmp
sbb
lret
ret
pop
xor
mov
jbe
mov
or
popa
or
inc
test
nop
or
stos
cltd
out
in
ss
ljmp
pop
sbb
ja
pop
jbe
add
jp
sub
push
into
lods
test
jmp
mov
inc
cld
cld
fwait
shl
xchg
incb
push
cli
dec
add
stc
jo
imull
ss
sbb
sbb
sbb
mov
stos
in
sbb
imul
mov
mov
or
aas
xchg
es
addb
cld
pop
and
jl
adc
cmp
icebp
mov
in
sbb
ljmp
add
mov
repnz
cmp
and
shlb
push
test
cwtl
hlt
sub
xchg
mov
push
inc
nop
or
lret
pop
std
es
push
mov
test
fwait
mov
out
cmp
cmpl
mov
adc
dec
pop
fwait
pop
popl
in
loop
adc
outsb
mov
sarl
pop
mov
jecxz
hlt
pop
ss
jl
mov
rclb
lods
inc
push
mov
jecxz
pop
dec
mov
xchg
repz
jno
hlt
add
dec
cwtl
cmp
xchg
dec
xor
pop
jo
mov
xchg
les
xchg
xchg
aas
and
cmpsb
xorl
xchg
mov
lcall
sarb
cmp
or
push
repz
cltd
cmp
fwait
or
cmp
xchg
cli
and
inc
cmp
cmp
hlt
push
mov
or
in
sbb
jge
mov
pushf
repnz
in
js
hlt
arpl
push
mov
push
inc
fistpll
sub
addr16
and
insl
sarl
jecxz
test
mov
imul
inc
adc
subb
rorb
stos
and
call
cltd
add
shll
andb
pop
loope
adc
nop
bound
shr
aam
shll
push
iret
in
shrb
cmp
aam
lret
adc
cltd
das
addl
int3
fdivr
lahf
inc
aad
outsb
and
sbbl
mov
pusha
jmp
fldcw
scas
sub
ds
mov
aad
outsb
idiv
inc
adc
popa
scas
xchg
mov
sub
sbb
cmpsb
sub
test
add
add
pusha
jmp
dec
call
addr16
hlt
adc
nop
add
rcrb
adc
or
gs
aam
inc
xlat
xchg
repnz
lret
add
shlb
inc
lret
sbb
jo
shll
inc
popa
js
ds
fsubrs
jo
or
xchg
add
inc
cmc
jge
sub
xor
aaa
scas
insb
int3
shl
mov
jecxz
xchg
mov
adcb
nop
mov
cmp
sarb
imul
xor
test
xor
inc
jae
lret
nop
cmc
repnz
mov
add
or
addr16
adc
fisubrl
out
jge
stc
jb
and
jns
inc
mov
or
cmp
in
jne
test
in
cli
mov
lcall
js
and
mov
subb
pop
or
rcll
sub
pop
fmul
adc
nop
xlat
jae
xchg
test
pop
push
mov
and
push
in
dec
icebp
mov
cld
gs
movsl
insb
fwait
dec
aad
pusha
jns
mov
sbb
adc
pop
lret
cmp
pop
cmpsb
insb
pop
dec
push
inc
adc
nop
dec
mov
cmp
sbb
rcrl
add
fnsetpm(287
push
sbb
insl
mov
fisttpl
clc
ret
jg
xchg
in
mov
popa
stos
outsb
or
sbb
sub
cmp
adc
jl
push
shl
jge
and
lods
xchg
jmp
push
lahf
mov
xor
inc
fistps
xlat
movb
add
rcr
incl
sarl
dec
or
roll
add
mov
cmc
call
jmp
pusha
lea
jne
pusha
movb
mov
push
pusha
jmp
stc
call
cwtl
inc
out
in
repz
lcall
test
add
sbb
cmpsl
mov
push
mov
insb
mov
jecxz
inc
mov
ljmp
cmp
sub
add
mov
dec
push
stos
and
lret
imul
dec
dec
setns
mov
mov
test
int3
xchg
mov
lret
cmp
pop
cmp
lods
icebp
scas
sbb
repz
cmp
and
xchg
sbb
sub
adc
std
add
and
add
jmp
aam
pop
pushl
lea
ja
jmp
loope
ret
push
in
iret
jmp
jg
aad
push
and
adc
stos
cwtl
mov
mov
dec
or
bound
add
sub
cmp
shrb
pop
xchg
add
xchg
insl
ret
cltd
jecxz
cmp
jb
inc
push
int
mov
cmpsl
filds
fdivs
mov
push
int3
dec
or
pop
test
cmpsb
jmp
test
mov
inc
inc
aas
cmpsl
outsl
mov
cmpsl
dec
addr16
jae
mov
or
cwtl
addb
ljmp
mov
pmulhw
add
jp
lock
hlt
fadd
fimull
lahf
mov
sbb
mov
push
jmp
outsl
and
adc
enter
jle
data16
pusha
cmp
ds
sbb
popa
dec
mov
adc
sub
adc
mov
test
jl
shl
ja
mov
sbb
daa
outsb
push
pushf
orl
push
mov
test
shr
lods
int3
decl
test
stc
jmp
std
jmp
jb
sbb
rorb
xchg
rorb
add
bt
shr
mov
clc
pusha
pushf
test
call
movb
mov
lea
ja
push
ror
ror
sub
bswap
shl
sar
cmc
sub
add
adc
mov
lea
mov
inc
mov
stc
bt
repnz
pushf
call
movl
push
lea
jmp
mov
decl
push
fwait
add
cltd
add
mov
mov
stos
pop
jne
xchg
or
mov
test
sub
jne
dec
fisubrs
rcrb
pop
mov
xor
insl
pop
icebp
insl
subl
hlt
push
sub
call
mov
or
daa
sub
or
mov
cltd
test
push
dec
dec
mov
mov
movsl
pusha
cltd
test
or
adc
daa
in
xor
pusha
mov
jo
or
repnz
or
xchg
lcall
mov
mov
add
cwtl
mov
push
das
sahf
std
insb
dec
mov
or
lret
lea
loope
adc
insl
adc
pushf
js
xchg
jecxz
and
cmp
pop
adc
xor
les
out
test
dec
mov
dec
jae
movsl
sub
mov
cmp
mov
data16
repz
into
repz
mov
orb
mov
jmp
jmp
dec
sahf
insl
or
nop
jns
fildll
adc
std
push
pop
adc
mov
ret
jns
push
ret
xor
fwait
inc
mov
sbb
in
mov
movb
sarb
test
dec
fs
add
jnp
cmp
movsb
add
lock
dec
xchg
inc
decl
outsl
vmaxpd
mov
sbb
out
fisttpl
dec
subl
idiv
xor
mov
inc
dec
ret
cli
adc
dec
sar
pusha
cmpsb
or
adc
sub
test
je
dec
xor
dec
xchg
loope
adc
stos
jns
lea
sbb
in
adc
je
stos
fidivs
adc
inc
test
imul
cmp
cmc
iret
test
cltd
or
xchg
cmp
int3
push
xor
mov
mov
frstor
out
ja
mov
adc
fildl
push
sub
aas
and
push
or
nop
bound
jae
call
cli
dec
lods
cmp
push
mulb
loop
jnp
add
stos
cmpsb
add
inc
scas
stc
je
ja
xchg
add
adc
jecxz
push
into
cmc
lcall
xchg
pop
lods
ljmp
js
add
mov
test
dec
mov
clc
inc
cmpsb
or
cltd
jnp,pt
add
je
pop
inc
mov
cmp
pusha
add
push
lea
jmp
pushf
mov
movl
call
mov
add
in
push
mov
push
pop
cmpsb
adc
fsubrl
mov
jbe
jnp
mov
lret
jnp
push
data16
cmpsb
add
aas
ja,pn
push
push
lahf
jnp
xchg
inc
mov
push
jmp
mul
adc
jle
inc
lods
rcrb
push
jns
mov
mov
insb
or
xor
pop
in
gs
cmpsl
lods
adc
pusha
dec
sar
mov
lcall
sub
sbb
jle
or
nop
das
ljmp
mulb
or
orb
shll
xchg
push
pop
mov
pop
outsb
dec
incb
fadds
mov
insl
xchg
xor
push
mov
pop
sub
je
insl
jae
pop
shl
cmc
ds
outsb
fisttpll
mov
xchg
mov
mov
insb
sub
lahf
test
push
or
nop
sub
fwait
addr16
sbb
cli
add
addr16
nop
mov
mov
js
push
jb
popa
fs
mov
aas
enter
mov
add
mov
dec
stos
sti
sub
push
and
dec
xchg
add
testl
and
iret
ss
gs
and
push
lods
cmp
in
push
mov
ja
pop
push
scas
and
out
test
and
or
aaa
jmp
dec
fdivr
sbb
out
dec
jmp
add
cltd
shr
lea
mov
flds
cmpsb
or
nop
mov
ja
in
push
mov
adc
push
inc
xorl
cld
orb
movl
rclb
jmp
pop
sub
xchg
sarb
sbb
test
adc
mov
mov
loope
shrl
aam
push
cs
jno
in
jo
fs
and
dec
push
int
mov
ss
es
in
jo
jg
mov
test
push
push
pop
test
lret
outsb
push
aas
dec
es
outsw
insb
xor
cs
insb
add
movzbl
movsbl
pushf
not
mov
pushf
pushl
pusha
mov
pushl
ret
jo
addr16
in
jae
pop
and
push
add
mov
lret
test
fucompp
or
popf
inc
mov
aam
and
cmp
adc
inc
rorl
out
mov
cmpsl
ljmp
fcoml
mov
jg
popf
in
in
cmpsb
adc
inc
addl
adc
mov
orl
ja
not
popa
inc
mov
inc
and
add
outsb
aaa
movb
push
movl
pushl
pushf
push
lea
jmp
subl
in
push
sbb
inc
or
test
push
xlat
add
or
lods
fadds
hlt
sarl
push
popa
mov
mov
and
and
push
jp
icebp
test
insb
mov
or
ret
pop
jecxz
andb
mov
jno
das
add
jl
out
xchg
add
mov
xor
xchg
pop
mov
and
adc
push
mov
ljmp
add
pop
std
std
xorb
iret
mov
ret
jb
bound
sub
pushf
mov
pop
xor
push
pop
sub
jge
mov
dec
test
pop
into
add
out
sub
test
lret
or
pop
add
xchg
inc
inc
int
in
xchg
push
imulb
popa
lea
ror
jmp
sbb
inc
jmp
jp
push
push
movl
pusha
lea
jmp
dec
jmp
mov
add
outsl
js
dec
sbb
pop
subl
test
mov
xchg
out
xchg
cld
fs
or
pop
xchg
in
cs
es
stos
adcl
aaa
lret
in
xor
sbb
and
xchg
into
pop
mov
dec
cmp
inc
stos
xor
jb
js
xor
shll
out
cmc
rclb
mov
inc
int3
sarl
icebp
sub
test
in
xchg
out
cmp
cmp
cmp
xchg
push
xchg
out
stos
pushf
gs
in
iret
push
sahf
cs
xchg
enter
xchg
pop
cli
sar
jo
outsl
test
movntq
imul
imul
push
or
repz
pop
sub
or
mov
daa
adc
sub
sbb
sbb
adc
adc
mov
sbb
loope
mov
cmp
push
sub
and
jmp
call
push
repnz
call
or
or
jb
dec
jae
xchg
jnp
jno
lds
ljmp
insb
xchg
sbb
sbb
xchg
mul
mov
movsb
aas
sbb
call
adc
sub
pop
repnz
lret
ljmp
or
dec
adc
and
push
lods
test
test
inc
test
jle
push
adc
imul
pop
loopne
dec
inc
xchg
dec
push
adc
pusha
mov
call
cmc
mov
bt
pusha
cmpb
mov
call
mov
nop
sbb
adc
pop
inc
xor
filds
push
nop
sbb
decb
push
mov
lret
jnp
or
shlb
enter
mov
pop
adc
or
jo
cmpl
orl
mov
fistps
xchg
shlb
mov
subl
mov
add
pusha
lahf
pushf
mov
pusha
mov
pushf
mov
pushl
ret
lea
ja
pusha
clc
stc
imul
pushf
clc
pusha
add
mov
pushf
lea
jmp
push
add
bt
stc
pusha
add
jnp
mov
cmc
bt
cmp
test
jnp
pusha
lea
je
stc
clc
add
cmc
push
pushf
cmp
jmp
ret
enter
nop
ret
pop
sub
ljmp
pop
and
add
xor
and
nop
add
lods
pop
jp
cmp
cmp
lods
mov
lcall
repnz
movsl
push
xor
pop
dec
mov
sbb
xchg
dec
adc
test
sbb
mov
mov
jp
int3
pop
sbb
xor
fs
mov
xor
or
call
jne
pop
aas
add
jmp
vpmadcswd
ss
push
or
push
loop
push
insl
push
movw
lea
call
pushf
pusha
adc
call
xor
loopne
adc
xchg
pop
rcrl
xchg
sbb
jg
dec
or
xor
or
adc
sti
leave
das
adc
xor
sarl
xor
js
jle
in
mov
jl
lock
push
sbb
and
dec
movsb
sub
addr16
xor
push
xorb
sub
dec
ljmp
sbb
mov
mov
aaa
gs
xor
lock
jecxz
cwtl
mov
sub
cmp
inc
inc
adc
out
mov
jns
in
adc
pop
mov
sbb
push
xor
xlat
stos
jnp
pop
mov
push
shlb
adcb
or
ret
shr
sbb
mov
xchg
inc
or
out
jbe
mov
mov
int3
inc
arpl
xchg
dec
pop
ret
mov
push
sbb
scas
clc
subl
int3
sbb
or
out
add
or
cli
lods
push
and
lret
and
lahf
xor
insb
xchg
xor
enter
pop
sbb
sub
aad
mov
and
es
negl
mov
and
in
mov
in
adc
and
int
cld
subl
adc
stc
pop
jmp
add
nop
movb
mov
xor
mov
add
roll
cmc
mov
in
jae
sbb
lret
jp
mov
stc
repz
and
popa
movsb
stos
shrl
sub
xchg
xor
and
or
mull
dec
ljmp
out
dec
mov
movsb
dec
sbb
or
jl
shrb
inc
pop
xchg
jb
cmp
inc
shll
push
ljmp
dec
sub
std
aas
pushf
pushf
movb
lea
call
pusha
movl
call
pushf
lea
ja
call
jb
add
and
mov
pop
mov
add
rcrl
mov
andl
push
cli
sbb
adcb
pop
mov
pop
inc
sbb
iret
add
rcrl
mov
mov
add
sub
je
or
jle
and
adc
loopne
std
and
adcb
je
roll
setne
mov
xchg
sbb
std
imul
dec
aaa
roll
and
adc
loopne
mov
lods
adc
cltd
pusha
popa
in
and
lock
ret
add
sub
je
sbbb
jle
mov
adc
pop
mov
into
fisubs
mov
fiadds
aad
jmp
in
mov
adc
pop
mov
and
add
sub
je
jp
jns
dec
pop
adcb
mov
jb
orb
loopne
test
add
je
jb
push
fwait
incl
pop
push
into
enter
add
sub
je
mov
lret
ficomps
mov
xchg
sbb
out
add
sbb
stc
xchg
stos
stos
orb
pop
mov
pushf
mov
mov
inc
mov
sbb
mov
pop
lret
imul
dec
jno
xchg
cmpsl
add
rcrb
mov
ja
out
jmp
adc
cmp
stos
inc
jmp
adc
pop
mov
adc
adc
sub
fisttps
sub
je
xorl
adc
adc
ja
xchg
movb
sub
je
pusha
popa
in
push
and
test
and
add
sub
je
test
jae
lods
pop
add
pop
or
add
movsl
addl
in
mov
jo
lods
and
je
loope
outsl
mov
add
adc
loopne
mov
xchg
add
popf
pop
mov
push
inc
test
adc
pop
mov
inc
fildl
ss
std
mov
adc
pop
mov
and
je
mov
lods
add
sub
je
mov
faddl
jb
in
push
scas
sbb
adcb
pop
mov
pushl
adc
pop
mov
imul
loopne
paddd
in
or
lcall
test
pop
cmp
out
call
arpl
mov
adc
rcr
pop
pop
imul
pop
pop
scas
addr16
pop
pop
pop
dec
movsb
cmp
mov
jno
popa
test
notl
pop
mov
fildll
cli
adc
add
cmp
shlb
mov
shll
lea
jne
bt
or
sar
btr
mov
bt
or
pushf
pusha
lea
je
call
jmp
xchg
jge
in
cs
xorl
ret
dec
mov
pop
aaa
mov
shlb
pop
mov
decb
jl
mov
mov
add
rol
inc
cltd
mov
adc
push
movsb
sar
bound
jp
mov
xor
adc
sub
outsl
lods
les
loop
cmp
pop
mov
or
cmp
mov
sub
test
cli
aaa
lret
inc
adc
mov
popf
in
repnz
movsl
fistps
mov
dec
cltd
sahf
cld
in
cltd
aam
dec
xchg
loopne
xor
out
fisttpll
mov
or
inc
push
dec
or
adcb
test
jae
ret
ja
inc
mov
sbb
pushf
pop
shlb
cmp
sub
test
and
or
iret
hlt
push
inc
popf
mov
pop
xchg
popa
xor
in
cmp
mov
xchg
dec
cmc
fsubrp
xor
xchg
pop
pop
mov
and
hlt
test
outsl
leave
xchg
fidivs
imul
mov
lret
xchg
inc
cwtl
sub
rclb
dec
push
lcall
mov
add
lcall
cmp
sub
dec
sbb
xchg
sbb
cmp
inc
in
in
icebp
mov
inc
rcll
loope
jae
xchg
lds
mov
in
enter
fwait
fs
lds
rcrl
mov
jnp
imul
iret
cltd
jle
jmp
rolb
jmp
or
mov
sub
jns
scas
adc
loopne
outsl
aam
and
push
jl
xchg
mov
rorw
nop
push
or
pusha
insb
adc
stos
xor
gs
mov
stos
jns
push
sub
sbb
or
mov
jbe
pop
mov
sub
popf
jns
insb
mov
dec
das
fisubs
pop
insl
fdivs
xchg
dec
cli
push
adc
pop
out
sbbb
mov
mov
sbb
pop
mov
sbb
sub
cmpsb
stc
mov
sbbb
ret
xchg
into
cltd
test
or
sti
and
lret
add
pop
sub
mov
insb
call
mov
frstpm(287
shlb
xchg
pushf
and
stc
push
add
xor
jp
pop
loopne
jns
xchg
or
das
ljmp
aam
das
outsb
repz
xchg
out
clc
jno
data16
aam
and
dec
int
sbb
cmp
popa
mov
je
in
pop
cmp
pop
daa
inc
pop
hlt
inc
popl
jns
bound
bound
sbb
adc
push
pop
pop
lods
xchg
jnp
xchg
pop
adc
xchg
in
ret
pop
rolb
fcmove
stc
in
aad
pop
push
out
sbb
jnp
outsl
mov
xchg
int3
adc
add
or
out
xor
jmp
test
lock
mov
cltd
hlt
lahf
fs
lret
addb
imul
mov
or
fsub
xor
cmpsb
or
aaa
shl
inc
cld
xchg
movsb
out
add
leave
inc
mov
dec
out
andl
out
nop
mov
jp
or
fnstenv
ljmp
jnp
jp
or
inc
adc
sbb
lret
lock
sarb
jns
jecxz
cmp
and
je
test
add
pushf
pushf
push
movb
lea
jmp
lcall
xlat
mov
je
mov
and
xchg
inc
nop
mov
adc
out
add
popa
pop
sub
mov
sahf
cmp
pop
push
and
or
pop
lds
pop
clc
jno
lock
mov
aas
dec
xchg
imull
test
stos
nop
mov
dec
inc
insb
std
test
mov
push
loopne
negb
cs
xor
in
loopne
repnz
pop
and
xchg
cmp
nop
stos
lahf
ret
dec
or
test
nop
addl
sti
movsl
scas
mov
sub
cltd
xchg
pop
and
and
xchg
xor
outsb
lock
popa
pop
xor
adc
lahf
jl
sub
gs
sbb
add
or
xor
dec
cmp
and
cmp
push
jae,pn
inc
or
mov
jge
jp
push
jbe
aas
gs
rdtsc
nop
pushf
jmp
pushf
rol
cmp
add
pushf
rcr
ror
push
pushl
pushf
push
stos
pushf
mov
lea
pushf
pushl
call
cmp
mov
aas
lret
push
jle
xchg
jg
push
add
xchg
xchg
dec
sub
daa
repnz
stos
adc
mov
jmp
xchg
dec
mov
inc
xchg
inc
sbb
sub
xor
push
dec
sub
lahf
scas
push
sti
fcom
cmp
lret
mov
inc
rcl
imul
cli
and
mov
sub
sub
sar
nop
adc
mov
les
pop
jp
call
mov
das
cmc
cmp
xchg
adc
jecxz
adc
lods
xor
lret
mul
nop
or
sarb
push
sbb
push
popf
xor
xor
nop
xlat
mov
or
out
jns
out
pop
shrb
sbbl
adc
test
sub
fnstsw
cli
aas
jp
sub
aaa
popf
nop
in
xchg
sub
enter
cmpb
sub
ret
pop
sbb
popf
test
adc
loop,pn
iret
mov
adc
js
in
test
xor
push
jle
xchg
push
jecxz
outsb
jecxz
outsl
inc
imul
mov
cmp
test
daa
xor
xor
add
daa
xor
not
jg
xchg
enter
cltd
sub
sub
push
mov
mov
sbb
jns
test
lcall
xchg
icebp
dec
fidivs
aam
add
adc
lock
mov
adc
adc
out
mov
shrl
jmp
testb
out
imul
out
aam
shrl
aam
inc
dec
push
jns
jb
cld
test
ljmp
iret
cmpl
ja
jmp
cmp
and
xchg
jle
lods
int
arpl
jp
imul
nop
mov
lods
sbb
mov
push
aad
js
lods
insb
or
mov
fucom
xchg
add
daa
pop
xchg
add
hlt
xor
jecxz
int
je
push
loope
scas
cwtl
fwait
push
cmp
iret
imul
ja
push
jo
inc
mov
cmp
lds
aad
add
fs
jo
cmp
fimuls
stc
ljmp
pop
test
out
lods
sahf
shll
pusha
mov
mov
cs
ficoml
dec
bound
shrb
lcall
xor
push
xor
jb
repz
cli
mov
nop
pop
inc
or
dec
mov
rep
in
sub
push
int
adc
add
dec
add
push
sbb
dec
insl
cmpsl
sub
sub
rcr
jae
in
jbe
cmc
in
daa
add
or
push
push
imul
adc
add
in
mov
dec
xor
testb
sub
cmp
sbbl
into
pushf
xor
div
push
cmc
outsl
cltd
stos
cmpsb
in
sbb
xor
push
es
mov
sbb
pushf
mov
sub
loopne
push
dec
push
arpl
xor
pop
movsl
lret
pop
inc
push
lods
and
mov
xchg
push
fcomip
in
jmp
xor
adc
fildl
xchg
inc
adc
shrb
mov
insl
pop
pop
idivl
push
insl
dec
dec
xor
daa
mov
xchg
cmpsb
jno
jbe
out
in
pop
outsb
jle
rorl
xchg
jmp
and
sub
ljmp
aas
dec
movsl
stos
jb
rcll
sub
jle
cmp
scas
leave
pop
into
jno
mov
in
pop
or
pop
aam
and
cmp
scas
loopne
mov
mov
imul
sarb
movsl
or
fnstcw
nop
in
dec
aad
ret
repz
pop
mov
insb
cwtl
loop
ja
in
push
fs
sahf
cs
hlt
out
sti
push
ret
cli
iret
cmp
les
fidivl
pop
aam
dec
idivl
stos
mov
imul
shl
cltd
loop
cmp
inc
cmp
pusha
jecxz
aas
dec
mov
cs
jg
call
pop
jecxz
xchg
scas
and
in
xor
faddp
mov
pop
lahf
aas
sub
mov
xchg
subb
hlt
ret
repz
iret
dec
jne
sub
sarl
adc
mov
dec
fwait
xchg
in
aad
cmp
sbb
add
dec
xchg
jecxz
jecxz
repz
xor
fucom
shrl
jl
mov
jns
in
push
dec
fwait
inc
sbb
push
das
mov
mov
lcall
out
test
jp
sarb
idivl
inc
repz
pop
dec
dec
dec
xchg
lea
ret
jmp
or
cmp
or
pusha
add
hlt
decl
and
fs
je
pushf
movb
adc
pusha
pushl
lea
jmp
pusha
lea
jb
stc
cmp
call
shll
repz
inc
cmp
icebp
lcall
call
jne
outsb
loope
int3
pop
jae
add
push
scas
into
mov
sbb
mov
mov
inc
pop
adc
push
lcall
sarb
adc
mov
xchg
or
out
mov
repz
push
and
sbb
roll
pop
or
pop
nop
push
cmp
inc
add
cmpsl
lods
repz
pop
cmpsl
and
adc
pushf
push
movl
jmp
add
add
and
and
pop
dec
add
add
frstor
add
add
lea
jnp
jne
daa
pusha
movzbw
sub
lahf
mov
shr
shl
xor
shl
add
xor
mov
pushf
test
test
pusha
call
cmc
call
jmp
inc
aad
icebp
in
mov
testl
lahf
or
jp
out
in
das
cmp
sub
push
es
mov
pushf
pop
out
sbb
pop
sub
add
pusha
js
fcmovnu
sbb
push
outsl
cld
vsubpd
subl
sbb
mov
dec
int3
mov
call
movl
push
lea
jmp
mov
nop
sub
dec
mov
rcrb
out
cmp
and
in
out
push
jb
sahf
push
add
out
popf
es
insb
sbb
add
xchg
mov
inc
pop
loope
jno
lock
mov
sub
ret
cwtl
jno
pop
cmc
sbb
pop
jo
pop
faddp
push
in
push
loopne
mov
outsl
loop
dec
xchg
jg
sbb
ret
xchg
outsl
add
sbb
ljmp
hlt
test
sbb
mov
pop
push
aam
pop
es
adc
sbb
dec
pushf
bnd
pusha
inc
sbb
push
lock
popa
pushf
cmpsl
mov
sub
xchg
mov
test
int
shlb
loopne
and
rcll
mov
cmp
cmpsl
add
ljmp
dec
sbb
cli
das
cmp
fmul
sbb
popa
jle
jns
stc
lock
jl
mov
mov
std
and
add
rcrb
xchg
insl
pop
mov
into
mov
out
ja
outsb
pop
bound
stos
jge
mov
push
sub
lret
cmp
enter
or
fptan
test
lds
js
ret
mov
pop
jbe
loopne
xor
and
bound
ficoml
fmul
loopne
inc
add
push
xchg
andb
add
or
in
sbb
arpl
adc
add
lds
int
lods
repz
fistpll
leave
lock
lea
jae
cmp
pusha
stc
xor
mov
lea
call
pusha
movw
push
lea
jae
mov
xchg
setle
mov
jmp
pop
out
in
fcoms
lret
out
pop
out
pop
fs
dec
inc
lods
pop
frstor
sbb
or
pmaxub
or
push
inc
or
mov
push
sahf
je
cltd
mov
aad
sahf
aad
mov
push
or
push
inc
mov
inc
addr16
xchg
out
push
sbb
pop
jbe
mov
idivl
mov
movsl
xchg
jmp
push
js
mov
cli
cld
imul
add
push
js
stc
jb
xor
jmp
lcall
cmpsb
lods
and
dec
sahf
push
arpl
arpl
xor
fs
insb
add
call
cmp
xchg
mov
shrd
mov
cmp
ror
neg
mov
call
sbb
nop
mov
lds
out
mov
in
cmp
sbb
fs
mov
ja
imul
sahf
ret
aad
inc
inc
cld
xchg
mov
rcrb
pop
sub
add
jne
out
fstl
shrb
flds
insb
adc
and
je
mov
movl
into
hlt
mov
mov
push
fsubs
fmull
mov
out
fsubr
in
call
dec
clc
shrl
call
mov
xor
xor
xor
add
xchg
jo
cs
push
and
or
cmp
adc
xchg
int
jne
sub
out
stc
add
pop
int
ja
imul
push
and
dec
out
stc
inc
std
fcomip
mov
bound
xchg
pop
arpl
enter
fcompl
loopw
mov
dec
btc
btc
rcl
add
pusha
shr
clc
btc
mov
lea
shl
pop
add
movsbw
mov
lea
jmp
jecxz
pop
in
in
retw
ret
inc
dec
xor
int
push
movsl
pop
arpl
add
inc
iret
in
add
mov
dec
dec
in
or
xchg
sarl
je
sbb
addl
xor
ficomps
daa
cmpsl
leave
cmp
xchg
std
adc
out
into
pushf
and
pmovmskb
jecxz
adc
mov
adc
jnp
push
or
inc
or
mov
mov
out
mov
cmp
in
mov
cmp
pop
rolb
sarb
jmp
testl
xorb
jns
push
icebp
mov
push
jge
orl
enter
or
pop
fbstp
js
es
je
loop
nop
dec
mov
lahf
daa
insb
push
jp
mov
aad
idivb
push
sub
fsubrp
in
ljmp
inc
scas
sbb
sub
dec
mov
rolb
test
fsub
sbb
call
test
outsb
lds
into
sub
dec
push
xchg
mov
mov
cmp
adc
push
pop
in
dec
sahf
movb
aad
push
orb
sbb
ficoms
hlt
push
bound
in
and
lret
push
iret
fnstsw
int
mov
xchg
ss
mov
push
loopne
stos
leave
shll
cmpsl
iret
adc
mov
inc
jl
test
adc
cs
inc
inc
and
cmp
xor
mov
add
cmpsb
stc
ljmp
push
adc
add
add
outsb
aaa
call
jbe
inc
in
in
push
insb
xchg
inc
insb
js
lods
push
inc
leave
aam
ljmp
out
popf
ljmp
sbb
shlb
popa
icebp
add
ret
pop
push
inc
bound
fadd
dec
call
sub
cmpsl
adc
pop
inc
inc
ljmp
mov
cmc
fistpll
in
icebp
sbb
mov
ja
shrb
orb
in
jnp
and
aaa
pusha
in
aad
lret
sub
sti
mov
cmp
lret
imul
outsl
imul
pop
push
lahf
sbb
mov
adc
sbb
scas
cld
inc
mov
and
mov
xchg
mov
add
mov
mov
mov
mov
stos
cmp
lds
imul
pop
pop
mov
dec
es
cmp
or
cmp
adc
popa
or
scas
aad
fmulp
lods
sub
inc
addr16
movl
pushf
lea
jmp
movl
call
push
sbb
jmp
sbb
push
push
mov
lret
cmpl
in
pop
jae
pusha
jmp
popa
or
mov
xor
sbb
xlat
push
ds
aam
jp
xchg
stos
aas
xchg
jg
pop
add
xlat
push
fdivrl
sub
add
into
xor
aad
jecxz
dec
lods
pop
jmp
and
in
pop
clc
rorl
push
add
mov
mov
lret
cmpsb
fildll
movsl
pop
mov
out
into
mov
cmpsb
dec
js
aam
push
addps
mov
out
xchg
mov
jle
xor
outsb
notl
xchg
dec
in
inc
pop
sub
mov
loop
xchg
cs
aam
cmp
mov
adc
negl
or
notl
stc
sti
cmp
loope
mov
xor
sbb
loop
mov
in
mov
filds
lods
repz
pop
mov
push
pop
pop
shr
in
fcompl
lea
mov
cltd
js
push
lret
leave
test
int3
mov
mov
outsl
rcrb
adcb
cmp
sbb
push
es
inc
adc
leave
out
adc
push
dec
gs
in
mov
sub
in
lds
xchg
test
icebp
jp
mov
lret
mov
les
add
mov
in
mov
dec
repz
fs
or
lret
daa
or
jp
cmpsb
into
adc
mov
pushf
fadds
and
pushf
lea
jne
cwtl
mov
lahf
movb
jmp
dec
and
out
nop
std
cmp
loope
mov
sub
lods
xchg
adc
xlat
mov
leave
mov
mov
hlt
mov
ret
fwait
inc
cmc
outsl
adc
sbb
pop
aaa
inc
add
push
pop
decb
inc
fsubrs
pop
or
stos
arpl
sub
adc
mov
jb
push
cmp
pop
imul
mov
fisttpll
pop
mov
xor
mov
das
cwtl
push
xchg
pop
orl
aaa
ffreep
lret
rorl
enter
aam
pop
and
fs
call
push
lea
jb
push
pushf
pushl
mov
pushl
ret
pusha
pushf
lea
jae
pushf
jmp
aam
and
in
sub
xchg
mov
nop
jl
jne
in
cmpsl
dec
add
ljmp
ret
jecxz
icebp
push
loop
arpl
mov
xchg
icebp
inc
xor
inc
and
les
repnz
cmpsl
cmc
sbbb
aad
daa
aad
in
and
xchg
mov
ret
fidivs
scas
jg
cmpsb
mov
mov
scas
scas
movaps
mov
ss
loop
xchg
and
dec
mov
inc
leave
das
xor
aas
push
cmc
push
fbld
jnp
xor
in
cmp
orb
sub
rorl
or
inc
imul
mov
xchg
mov
dec
adc
cmpsb
pop
or
movsb
clc
mov
data16
xor
fstpt
dec
xchg
popa
jl
shl
inc
arpl
xchg
jo
das
dec
ja
int
pop
lcall
aas
roll
lds
cltd
outsb
lea
sbb
in
adc
adc
xor
outsl
clc
add
movl
call
push
xchg
call
jmp
add
inc
gs
push
popa
bound
rol
pushf
call
push
mov
pusha
lea
jmp
lea
jne
mov
cmp
xadd
bt
mov
dec
or
bsr
shr
sub
bswap
sbb
lea
mov
call
push
fmuls
in
pop
hlt
pop
or
inc
dec
adc
je
jmp
cmpsl
xchg
fdivrp
ljmp
adc
scas
ja
pop
fldenv
xchg
cmp
pop
or
outsl
repnz
pop
jae
inc
cld
xchg
sub
notl
add
or
mulb
jmp
push
push
and
mul
push
mull
jg
sub
jmp
lods
je
and
xor
test
or
cltd
push
int
inc
loope
pushf
jmp
outsb
icebp
loopne
in
in
push
jl
xchg
and
pop
pop
in
sbb
sbb
in
or
sub
cmp
jp
ds
or
pop
aad
push
adc
loopew
jbe
loopne
sub
xchg
shll
add
out
hlt
and
sub
jp
getsec
aad
xor
mov
sbb
adc
mov
xchg
ljmp
scas
fisubrs
outsb
xchg
jmp
cwtl
in
cmp
mov
loopne
mov
test
cmp
or
pushl
call
addb
in
ret
sahf
dec
xor
mov
jmp
sahf
movsl
mov
mov
fs
mov
or
inc
out
andb
clc
pop
jmp
decb
lods
aam
or
xchg
lock
push
cwtl
bound
xchg
or
adc
fimull
leave
out
dec
test
clc
add
lock
cmp
rcr
push
leave
pop
pop
mov
jg
dec
repz
cmpsl
dec
xchg
jl
imul
lods
call
fs
jne
push
jmp
nop
cli
lahf
jecxz
nop
stos
xchg
insl
push
inc
inc
fistps
sub
push
dec
mov
pop
test
and
mov
movsl
add
cmc
movsl
mov
push
ret
test
lds
in
adc
jl
jecxz
cs
aas
and
cmc
dec
lret
sti
jmp
stc
negb
test
nop
imul
ss
popf
dec
xchg
jmp
nop
insl
mov
loope
in
pop
call
sbb
mov
adcb
or
sub
dec
add
dec
jbe
orb
dec
movb
icebp
and
cmp
dec
jecxz
nop
push
xor
psubw
insb
push
ret
arpl
fwait
xchg
adc
sbbl
push
sti
add
aaa
jp
mov
fadds
popa
inc
outsb
sbb
mov
das
leave
fistpll
inc
mov
mov
mov
ficoms
sti
jp
sub
push
ficompl
stos
xlat
pop
in
mov
add
jp
adc
sti
cwtl
fs
fsin
gs
rcrb
cmp
inc
jge
cmp
movsb
dec
loop
nop
push
lock
and
stos
jnp
sub
mov
sbb
es
nop
push
faddl
mov
jo
clc
mov
imul
mov
jo
cmpsl
inc
xchg
jno
mov
rcrl
and
gs
xchg
cmp
xchg
in
bound
js
inc
out
in
repz
sbb
mov
jns
in
mov
idivb
or
inc
push
fidivl
cli
aad
jo
insl
mov
scas
dec
add
std
and
fdivs
cld
xor
inc
and
loope
pop
mov
push
out
push
sbb
xchg
and
scas
out
sbb
in
daa
orl
sub
popa
dec
push
inc
push
mov
stos
cmpsl
dec
mov
inc
push
push
out
push
jge
mov
pop
sbb
ljmp
pop
pop
cwtl
cs
jmp
ss
sub
pop
das
cmp
mov
sbb
add
insb
xchg
jo
jl
inc
pop
data16
or
xor
mov
xchg
inc
ret
into
mov
inc
rclb
mov
js
jle
test
cmp
add
sub
fsts
cmc
push
in
jbe
fildl
cmp
inc
das
lahf
in
fidivrs
mov
sbb
shlb
fstps
and
in
fsubl
sbb
sbb
inc
pop
repnz
or
pusha
test
movsb
mov
xor
jne
cs
fucom
and
adc
jle
cld
pusha
stos
sub
fucom
and
sub
rolb
cs
pusha
add
and
sti
mov
insb
mov
xchg
test
fs
jb
cmc
test
test
cmpb
pushf
lea
jne
add
lea
rcl
sbb
mov
pushf
test
test
stc
add
push
pushl
stc
movzwl
lea
jnp
movsbl
mov
call
pusha
pushl
movb
jmp
call
push
or
cmc
sahf
stos
aam
pop
xchg
sbb
push
es
mov
mov
add
jl
fsubrl
cmc
jo
xor
jae
shll
add
xchg
pop
gs
jle
mov
push
add
xchg
push
fisttpll
in
xchg
sbb
and
jmp
xchg
sbb
iret
or
les
jne
out
pop
sub
adc
ret
and
nop
xor
push
jge
xchg
adc
iret
insl
push
and
jecxz
mov
pop
in
inc
jle
cmpsl
mov
push
mov
dec
mov
mov
mov
pusha
push
pushl
ret
pusha
call
fwait
add
mov
add
fadds
imul
testl
mov
jo
inc
movsl
jo
int3
lret
jp
jbe
dec
test
pop
mov
in
cmpsl
adc
rorl
pop
jns
gs
lea
jae
mov
and
mov
mov
addr16
jae
pop
gs
pop
lahf
or
insb
cmc
outsb
push
pop
mov
push
addr16
jns
mov
mov
and
sarb
aam
sti
js
add
loop
lea
push
cwtl
popa
nop
mov
in
xor
loopne
int3
push
jne
pusha
packssdw
and
lea
je
cmp
pushf
shl
btr
mov
add
bswap
call
pushf
mov
push
lea
je
cmp
call
push
xchg
or
in
pop
jae
inc
jo
push
rcrl
push
mov
mov
iret
ficomps
inc
adc
pop
jge
add
int
js
lds
dec
fwait
and
pop
cs
mov
ficoms
stc
inc
lcall
in
out
cmp
fldenv
push
gs
out
mov
dec
imul
ret
push
add
stos
flds
fstpt
mov
out
mov
xchg
push
shrl
push
ss
and
dec
xchg
aaa
and
imul
add
xchg
sub
pushl
sti
rol
bsr
shl
add
sar
shld
sbb
ror
mov
xor
mov
clc
jbe
repnz
pushf
pusha
lea
jne
push
jmp
add
shl
ror
and
adc
mov
push
cmc
bt
mov
test
pusha
pushf
lea
je
stc
sub
pusha
stc
jmp
inc
setle
clc
ror
xchg
cwtl
inc
call
loope
vpmulhuw
sub
mov
es
add
mov
flds
bound
in
sub
add
inc
adc
inc
push
sub
dec
out
sbb
in
cmp
xchg
add
lods
aas
cmp
fbstp
jb
in
sbb
pop
sarb
sub
xchg
mov
sahf
push
rclb
out
fmuls
xchg
add
repnz
mov
pusha
addr16
aad
rolb
adcl
sbb
fsub
nop
int
repz
push
popa
sahf
and
xchg
loopne
addr16
adc
nop
fdivl
inc
sub
loope
xchg
mov
addl
xchg
rorl
test
add
cmpsl
test
cltd
clc
scas
pop
cld
dec
sub
xchg
and
inc
jbe
jno
xchg
xchg
daa
subl
lock
subb
pop
mov
repz
push
inc
jbe
jge
int
sarl
in
mov
addb
cwtl
aas
mov
push
loope
int3
xchg
mov
stos
pushf
lea
jmp
insl
xchg
cmp
in
dec
arpl
mov
push
popf
int3
sub
out
xchg
xchg
jno
in
flds
shrl
pop
movsb
mov
subb
mov
fsubp
or
xchg
test
jmp
ret
test
push
mov
or
test
lret
sbbl
mov
sub
xchg
repnz
movsl
fidivs
push
jg
popa
leave
cmpsl
mov
pusha
xchg
lds
adc
addr16
insl
mov
or
movsl
push
arpl
fadd
adc
push
sub
or
bound
xlat
imul
out
lea
mov
mov
negl
jmp
cwtl
sub
std
dec
test
add
dec
iret
pop
cwtl
sub
popa
jle
in
push
add
push
sbb
test
fcomp
fs
pop
mov
dec
push
mov
fnsetpm(287
nop
stos
out
mov
dec
lcall
lods
pop
mov
scas
dec
mov
jae
lods
and
push
mov
cmp
xchg
jbe
cld
cmp
loop
pop
mov
gs
into
xor
sbb
push
fsincos
je
popa
cmp
lret
lahf
jge
push
xor
aas
dec
mov
outsb
jo
cmp
xchg
mov
sbb
ret
xor
jmp
jmp
pusha
mov
repz
call
nop
or
dec
push
bound
inc
dec
add
mov
ss
inc
test
sub
sbb
mov
sub
cmp
mov
adc
cs
mov
daa
div
jecxz
xchg
scas
pusha
cs
inc
shlb
nop
outsb
out
cs
dec
mov
incl
movsl
insb
mov
lock
xchg
xchg
or
in
adc
cli
xchg
cmp
dec
cmp
lods
jl
mov
mov
nop
rorl
jb
mov
out
adc
cmp
pop
and
out
fnstenv
rcrl
lods
data16
aam
sbb
es
test
mov
cmp
mov
jo
ss
sub
adc
jecxz
subl
add
scas
push
cmp
xchg
jp
adc
inc
or
stc
xor
jmp
outsl
insb
gs
jne
xor
cs
insb
add
fstpl
lods
pop
mov
mov
lods
push
enter
add
mov
fwait
dec
outsl
js
les
mov
aad
pop
dec
inc
pushf
gs
sub
leave
and
cltd
and
stos
aam
dec
mov
xor
or
lret
inc
sbb
sahf
int
mov
cmp
sub
aam
sub
lret
xor
and
add
adcb
pop
inc
jno
jg
mov
js
lods
xor
rol
pop
sub
pop
test
sub
in
ljmp
test
add
xorl
sbb
mov
inc
sub
shlb
mov
mov
sub
sbb
bound
iret
mov
aaa
mov
push
andb
push
inc
xchg
xchg
jl
jae
jmp
rcll
nop
cmp
mov
ficompl
in
push
sub
fnstenv
mov
adc
gs
sarl
mov
fbld
stc
pop
inc
lret
enter
aam
sahf
xchg
enter
and
pop
lea
call
stos
aad
fsub
nop
xchg
xchg
and
rorl
jmp
mov
or
movsl
insl
fbld
sbb
std
outsb
insl
jb
test
jb
mov
aad
and
call
xor
cltd
and
adc
adc
jns
or
add
jmp
out
pushf
fcoms
mov
call
xchg
adc
gs
xchg
call
movsl
mov
xor
inc
dec
push
aaa
push
data16
rorb
mov
mov
jmp
stc
call
fs
jb
jmp
sbbl
xlat
in
repz
pop
and
js
in
push
add
sbb
lret
mov
or
dec
jnp
and
into
adc
xchg
or
mov
xor
cmp
pop
lahf
in
push
or
pop
test
pop
pop
js
xor
subl
sub
add
mov
loopne
gs
or
adc
mov
fistpll
or
ds
mov
aas
shlb
or
pop
and
xor
ja
pop
dec
test
out
inc
inc
leave
xlat
in
dec
cmpsb
sbb
jbe
dec
pop
bound
test
mov
dec
test
lret
dec
xor
sub
pop
add
data16
cmpsb
sbb
insb
jmp
adc
sbb
lds
mov
int3
sbb
out
ss
ret
test
repnz
xchg
rolb
cmc
lret
lods
into
cwtl
adc
dec
std
jge
mov
out
out
push
sarl
arpl
stos
in
cmp
adc
mov
mov
or
adc
push
arpl
push
sahf
xchg
push
addl
mov
sbb
mov
lods
sub
or
add
inc
ret
or
jmp
test
bound
scas
sub
test
lods
add
std
lea
push
bound
stos
insl
loop
add
xchg
popf
add
mov
sub
push
loop
xchg
push
loop
or
sbbb
mov
or
adc
xor
sub
mov
stos
sbb
or
adc
adc
or
xor
and
movsb
pop
or
add
popa
imul
xorb
shl
sbb
lcall
and
xchg
test
push
arpl
sub
and
dec
xchg
outsb
and
mov
sbb
lea
fcmovne
sub
adc
xor
cmp
shr
aam
push
popf
cmp
mov
test
add
pop
mov
mov
aad
lods
adc
mov
jge
adc
enter
sub
testl
lahf
mov
enter
sbb
neg
adc
xchg
mov
scas
jnp
sub
ret
and
std
into
es
sub
stos
mov
mov
sbb
mov
int
xchg
mov
arpl
imul
jae
jecxz
fstpt
mov
mov
mov
pop
stos
cmp
push
repz
pop
daa
stos
in
out
pusha
mov
mov
sub
pop
mov
push
out
aaa
loopne
lods
or
cwtl
or
fidivrl
and
mov
insl
stos
mov
mov
lods
orb
xchg
mov
fs
sub
push
mov
xor
sub
or
sbb
inc
arpl
gs
insl
push
aam
ret
mov
sahf
add
mov
xchg
je
push
loop
out
lods
dec
mov
ss
addl
push
punpckhwd
add
push
or
and
out
sub
pop
scas
mov
clc
mov
push
push
adc
or
rolb
push
mov
cs
sub
dec
xor
inc
ror
scas
pop
cmp
xor
or
pop
push
pop
xor
xchg
scas
repnz
adc
popf
int
mov
inc
bound
xchg
mov
xor
push
jae
imul
pushf
flds
add
mov
loopne
test
arpl
cmp
cmc
flds
scas
xor
loop
rclb
in
add
mov
jb
xor
ret
cmp
mov
mov
push
ret
arpl
in
inc
sbb
popa
jecxz
in
loop
mov
and
xor
rcrl
lock
cmp
repnz
add
fsubrs
call
pop
mov
cmpb
insb
clc
lret
dec
aas
adc
sub
dec
mov
push
rol
sub
call
push
lcall
mov
dec
cs
adc
imul
loop
or
or
loop
mov
xor
and
ds
xchg
cmp
cmp
lea
and
push
shr
es
and
adc
sbb
mov
fisubrl
subb
add
sub
nop
or
int3
push
fldenv
leave
loop
xchg
bound
sub
sub
rcrl
sub
test
das
fadd
xchg
rolb
push
fcom
dec
lods
pop
inc
adc
or
subb
or
and
sbb
cli
mov
adc
push
push
mov
mov
xor
jae
mov
adc
pop
notb
push
and
pop
test
lret
jmp
adc
add
dec
rcll
dec
imul
add
adc
lcall
xor
ss
xchg
sub
repz
and
pop
stos
lods
pop
lret
xchg
mov
cmp
push
fdivrs
mov
rcl
sub
mov
iret
fnstcw
fwait
sub
inc
int
mov
inc
je,pn
sub
stc
shrl
or
mov
and
daa
pop
jae
sub
andl
jae
fst
mov
imul
sub
divb
cld
push
cmp
push
cmp
clc
cmp
sbb
or
inc
lea
adc
in
push
clc
cs
movsl
ret
xchg
mov
scas
and
add
or
and
insb
arpl
or
inc
test
dec
mov
cli
and
repz
add
mov
cmp
addb
adc
pop
sub
loop
mov
cmp
lds
inc
cmp
inc
add
loopne
inc
pop
jns
fxch
xor
divb
ret
jmp
cmpsl
push
pop
mov
and
lea
addb
xor
sub
mov
lcall
xchg
js
cwtl
adc
cmpsb
jmp
aaa
mov
clts
sub
cltd
xchg
lret
jmp
lods
add
es
adc
inc
subb
adc
bound
shl
stc
shlb
sub
arpl
lods
lods
or
jecxz
pop
xchg
jecxz
dec
out
mov
in
aam
mov
mov
test
dec
add
and
stc
sbb
dec
pop
inc
xchg
add
cmp
cs
rcl
lret
pop
jge
mov
arpl
mov
mov
sbb
ret
mov
shll
scas
mov
fstl
jb
insb
rolb
xchg
mov
cli
sub
and
je
xchg
imul
mov
popa
mov
dec
repnz
ror
push
push
loope
movsl
jbe
in
sti
aas
mov
xchg
in
push
adc
jp
fwait
lea
push
mov
xor
and
imulb
pop
sbb
out
adc
es
addl
insl
rolb
push
sub
testb
adc
and
dec
scas
int3
ljmp
push
pop
es
push
shlb
sbb
cmpsl
and
scas
adc
mov
adc
adc
movsl
lods
mov
pop
inc
les
push
and
stos
or
stos
ljmp
jecxz
xchg
idivb
dec
fisubrl
scas
xorb
adc
dec
and
push
gs
mov
lret
ror
jnp
popf
xor
adc
divb
fmull
cmp
or
sub
adc
push
and
js
popa
rorb
sub
testb
ret
xor
adc
bound
rorb
adc
movsl
arpl
mov
pop
push
mov
mov
xorb
cmp
xchg
shll
sahf
cmpsb
jle
iret
or
pop
sub
inc
push
mov
mov
pop
add
adc
arpl
or
cli
push
loopne
xor
inc
arpl
xchg
jmp
repnz
loopne
jp
adc
jae
sub
sub
push
rolb
jno
cmpsb
or
pop
in
nop
out
in
sbb
cs
mul
xor
cld
popf
stos
sub
arpl
jae
cmp
and
xchg
idivb
test
movsl
adc
xor
test
cmp
ret
ret
lods
dec
lods
fldl
xchg
les
xor
addr16
shrl
mov
sahf
ret
add
stos
outsl
andb
jbe
lods
jns
outsl
sbb
xchg
push
test
push
shl
push
sbb
mov
sahf
and
sub
adc
jge
scas
ja
xlat
dec
in
cs
subl
call
or
cltd
push
or
imul
sarl
imul
push
stos
arpl
adc
sub
sub
insb
and
jae
xadd
adc
jnp
adc
cli
xor
xor
loop
and
add
pop
in
test
jae
sahf
fisttpl
inc
cmpb
mov
loop
inc
push
mov
push
in
fisttpll
hlt
mov
in
sub
push
adc
cmc
cmp
scas
cmp
and
or
xchg
ret
pushf
xchg
stos
mov
lcall
fcoml
ret
insl
push
mov
sahf
mov
rcl
pushf
dec
in
add
ss
loopne
sbb
xchg
pushf
xchg
pop
xor
xor
sarb
push
pop
shll
push
mov
out
sub
cmc
mov
mov
or
adc
addb
test
mov
mov
xor
push
push
dec
shlb
lcall
push
inc
popf
movsl
rorb
mov
push
int3
or
add
enter
xchg
scas
xlat
xchg
inc
test
push
adc
jmp
sub
cld
push
jmp
mov
jns
imul
xchg
fsubrl
dec
or
xor
test
nop
sub
mov
push
push
imul
sub
lods
and
jg
inc
or
ljmp
add
cmp
push
neg
sbb
in
sub
cmp
mov
xchg
lods
xor
add
inc
inc
shlb
xorb
jmp
pop
push
jp
jp
xlat
sub
mov
adc
mov
idiv
int3
ljmp
sub
call
movb
inc
or
das
dec
outsb
push
in
call
test
sbb
ret
push
in
mov
outsl
mov
in
hlt
dec
mov
cli
push
fsubrs
mov
ret
xchg
push
lock
loop
decb
sbb
or
push
call
add
xor
shr
addr16
xor
push
sbb
ret
adc
ret
arpl
mov
jge
dec
ljmp
movsb
sbb
mov
push
fsubrs
mov
push
sub
add
jmp
gs
adc
or
dec
stos
lods
mov
hlt
and
xchg
mov
mov
mov
xor
decb
icebp
pop
mov
arpl
sub
icebp
xchg
fcoms
ljmp
ss
adcl
inc
cltd
cwtl
stos
or
add
fsubs
pop
adc
lea
in
movsl
icebp
je
or
jecxz
mov
mov
pop
sub
add
test
mov
push
cwtl
adc
or
sub
movsl
fimull
add
mov
jae
sub
pop
push
ret
sub
dec
mov
ret
cmpb
add
std
dec
xchg
pop
aad
loope
or
das
es
mov
mov
push
fs
jnp
sbb
scas
loop
popf
daa
imul
cmp
cmp
add
sub
sbbb
or
mov
stc
jno
lcall
shlb
nop
adc
sbb
insl
repnz
out
add
push
mov
push
inc
test
jge
movsl
imul
sbb
mov
lea
or
int3
aas
pop
jae
int3
and
mov
mov
dec
pop
dec
test
mov
jns
rorl
cli
push
sbb
imul
out
in
fldt
or
pop
adc
lods
shlb
bound
imul
jnp
rorl
pop
sahf
sub
ljmp
push
js
popa
bound
out
and
ljmp
cmp
inc
sub
cmp
push
ds
lahf
imul
sub
add
mov
mov
fs
mov
adcb
insl
push
xchg
lret
pop
cs
clc
jmp
sbb
pop
and
leave
test
pop
pop
fs
mov
add
mov
icebp
inc
nop
movsl
adc
jne
fidivrl
sbb
sub
fdivrl
sub
or
outsb
mov
push
push
outsb
test
lcall
xchg
imul
out
ljmp
cmp
ds
mov
cltd
ficoml
jmp
shlb
or
push
out
pushf
scas
lcall
cli
fldenv
pop
mov
ss
jmp
sub
mulb
mov
jle
or
pop
repnz
or
bound
add
xor
test
jmp
and
xor
lret
sub
mov
imul
push
stos
dec
daa
push
les
mov
mov
add
mov
mov
dec
iret
or
push
xor
jmp
sub
insb
jp
add
inc
push
lods
mov
mov
add
adc
pop
jmp
shrb
fldl
popf
mov
jmp
cmp
inc
fsubrl
xchg
dec
xor
sbb
cs
inc
lea
add
mov
cmp
add
ror
aaa
adc
jae
rolb
fdivl
xor
pushf
mov
dec
pop
cmp
outsl
jmp
or
sub
loop
repnz
push
hlt
or
shr
add
fildl
sub
jb
mov
jecxz
mov
cli
ss
mov
and
cs
and
lods
xchg
inc
je
adc
push
bound
add
sub
push
int3
sub
test
sar
into
cmpl
stos
lret
dec
inc
pushf
xor
aam
cmp
sub
push
mov
cmpb
inc
sub
jbe
ret
and
popf
loop
pop
xchg
xchg
jae
adc
cmp
mov
mov
cmp
mov
inc
push
push
aaa
jecxz
mov
orb
int
jl
mov
push
inc
or
jle
leave
loop
data16
repz
inc
rorl
mov
add
xchg
aaa
mov
insl
mov
ret
cmp
push
mov
push
in
mov
and
rcrl
aam
in
shl
lcall
cmp
lods
sub
lock
cmp
adc
je
sbb
rcrl
push
push
lods
pop
sti
sbb
das
scas
andb
mov
fidivl
lods
shr
pop
and
outsl
ljmp
lret
mov
or
xor
jb
adc
aam
pop
lahf
xchg
leave
mov
jae
mov
sahf
jb
lcall
mov
shll
adc
sub
fistl
fcmovb
mov
dec
loop
xor
rolb
mov
insl
imul
pop
xor
ret
dec
jl
cs
sahf
sub
mov
jmp
imul
sub
push
jecxz
shr
cmp
imul
test
orb
mov
xor
fnsave
and
ljmp
xchg
mov
faddp
add
or
inc
pop
cli
es
subl
insl
loop
cmp
movb
imul
mov
sbb
add
shr
aas
std
sub
out
push
add
lret
xchg
loop
roll
subb
sbb
stos
repz
push
ret
fwait
or
dec
sub
lea
into
sti
sbb
mov
or
push
push
or
sbb
cmp
cmp
mov
idiv
adc
push
into
mov
or
outsl
xchg
outsb
into
xor
xchg
sbb
add
xchg
inc
loop
xchg
fiaddl
shl
idiv
fsubrs
or
neg
in
jecxz
imul
pop
add
outsl
xor
pop
xchg
addb
push
into
add
push
xlat
mov
mov
scas
jo
sub
adc
mov
cmp
loop
mov
aaa
idiv
movsl
ret
cld
sub
in
clc
jecxz
dec
adc
enter
add
lret
sbb
push
mov
and
iret
push
insb
adc
and
jo
mov
or
in
push
push
dec
in
jae
jle
add
or
mov
mov
lret
sti
test
or
lds
pop
lret
gs
cli
loope
xor
std
lds
pop
sbb
je
pop
pop
xor
push
hlt
add
push
xchg
mov
sahf
int
or
jb
gs
mov
int3
mov
scas
inc
outsl
jecxz
mov
je,pn
nop
out
or
adc
mov
sub
loope
xabort
rolb
inc
repnz
fwait
pop
sub
mov
mov
inc
cmp
sbb
mov
ljmp
aam
in
testb
push
mov
and
mov
fs
or
fildll
push
jmp
and
leave
mov
mov
sub
testb
or
push
xor
movsb
push
test
push
das
cmpsb
adc
lret
push
mov
call
out
test
xor
sub
cmp
pop
dec
mov
enter
adc
adc
test
push
jo
in
mov
xchg
mov
xchg
adcb
pop
adc
mov
mov
loope
jo
out
fldenv
rolb
pop
loope
xchg
call
push
pusha
and
call
jb
or
add
popf
dec
sub
movsl
lret
mov
sbb
addr16
xchg
subb
movsb
shll
inc
dec
add
xchg
jne
xor
jmp
jb
inc
mov
in
pop
cld
push
push
in
orb
add
sub
or
jg
jl
ret
and
mov
mov
pop
xchg
ds
ret
stc
loop
fdivl
andb
inc
jns
mov
mov
push
je
popf
loopne
lea
jmp
adc
and
popl
mov
add
push
imul
pop
bound
cld
or
jne
or
push
ror
mov
shrb
adc
xchg
movsb
push
lcall
mov
mov
push
rorl
loop
dec
rorb
arpl
fwait
push
ljmp
pop
loop
andl
ror
or
scas
xor
xchg
xchg
and
dec
ss
push
cli
cmp
cmp
test
test
ljmp
fs
sub
mov
cmp
cmp
rorl
and
in
and
push
mov
test
cs
add
dec
loop
jnp
pop
mov
and
inc
mov
jmp
outsl
or
inc
arpl
fidivs
outsl
or
mov
cmp
sub
pop
rcl
sbb
pushf
xchg
sub
movsl
loop
add
test
cld
mov
mov
dec
pop
xor
dec
add
cmp
shlb
repz
push
sbb
pop
jmp
sub
in
xor
loope
sub
orl
flds
xor
adc
xor
cmp
mov
xor
inc
inc
pop
int3
mov
lret
ret
and
and
loop
cmp
imul
bound
add
fcmovb
loop
stos
test
loop
pop
popa
ja
inc
lcall
xchg
loop
lcall
xchg
je
in
adc
sub
sub
sbb
ret
pusha
add
dec
mov
inc
cmp
jecxz
repz
jmp
ret
subb
push
dec
jns
and
push
pop
mov
push
fdivrs
ret
add
repnz
cs
sub
mov
sbb
mov
das
or
lret
jl
ret
lret
sbb
jbe
pop
mov
loope
loop
fisttpl
pop
sub
cs
shrb
adc
repz
and
sarl
icebp
inc
inc
add
in
mov
or
lds
dec
lods
cli
fildl
sbb
in
cmp
push
fstpt
xchg
sbb
fisubrl
imul
xchg
cmpsl
mov
shrl
mov
imul
lds
xchg
mov
out
or
sub
push
in
jno
sbb
or
xchg
pop
pop
es
sbb
scas
push
jge
shrb
cmp
lcall
ss
or
fcompl
mov
stos
shll
mov
jo
inc
jge
stos
xchg
mov
push
sbb
shl
pop
pop
inc
stos
sub
jmp
xor
leave
mov
pop
loop
add
jmp
lret
shrb
repnz
jno
sbb
fcmovb
mov
sbb
xor
pop
movsl
adc
ret
and
mov
inc
sbb
loop
and
jg
outsl
insl
mov
loopne
inc
fcompl
jl
ret
and
aad
ret
leave
int
popa
and
add
ret
mov
sbb
je
into
mov
ljmp
dec
xchg
fsubrs
cmp
add
push
xchg
cmp
xor
lcall
in
pushf
lcall
repnz
cmp
fimull
sub
insl
bound
jmp
mov
fs
mov
or
xchg
xlat
mov
test
insb
pop
lods
xchg
loop
cmpb
xchg
jmp
lcall
test
mov
add
insb
fadd
mov
imul
sbb
push
mov
jae
xchg
mov
and
lea
fnsetpm(287
ret
cli
mov
scas
fsubrs
cmp
or
lahf
loope
lods
popa
adc
popf
pop
scas
push
imulb
xor
lret
cwtl
jge
xchg
in
int
xor
add
and
cs
out
adc
cmp
test
push
daa
sarl
arpl
cli
stos
subb
xchg
mov
add
and
jle,pn
dec
cli
push
lahf
das
fs
in
test
mov
cmp
mov
pop
dec
lcall
adc
push
jle
add
xchg
add
jnp
cld
mov
out
aam
or
into
jmp
push
fiaddl
enter
pop
into
mov
dec
in
sbb
int3
pop
push
xchg
add
imul
out
mov
scas
cmpsb
or
ljmp
loope
sbb
push
fcoml
imul
in
mov
rol
je
ds
and
jmp
jns,pn
add
out
mov
adc
inc
lea
pop
adc
jmp
arpl
loopne
mov
mov
xor
stos
int3
mov
je
mov
out
stos
pop
add
fnstsw
aad
rcrl
jbe
jno
or
xchg
scas
push
int3
or
mov
notb
xchg
ret
pop
fimull
sub
adc
pop
and
add
adc
jmp
cmp
aaa
jnp
jae
in
push
movsb
mov
stos
sbb
in
fisttpll
ret
xor
jl
push
mov
xchg
rcl
adc
adc
stos
sub
es
fwait
inc
push
mov
repnz
mov
outsl
or
inc
aad
subb
push
push
in
xchg
lods
inc
jb
push
loop
arpl
xchg
cmovnp
fwait
mov
sti
loop
dec
jmp
or
notb
fiaddl
push
rorl
test
xchg
push
inc
push
lods
sbb
shrb
lret
jmp
mov
call
sarb
test
push
rcrb
lea
fsts
popf
inc
cwtl
fidivs
push
mov
cs
sub
pushf
mov
insb
lea
push
repnz
push
mov
fdiv
mov
add
pop
repnz
and
sbb
or
popa
pop
jb
sbb
cli
fwait
mov
mov
in
inc
add
mov
adc
loopne
imul
clc
outsb
mov
adc
pusha
fs
dec
adc
push
clc
adc
xchg
fs
push
adc
sub
pop
push
mov
stos
and
jge
cmp
mov
loop
shrb
in
sub
or
push
jo
aad
repz
or
outsb
lds
xor
test
mov
sub
cmp
mov
scas
xor
push
pop
xor
and
jb
dec
lea
outsl
lods
push
adc
out
lock
je
xor
push
cwtl
ljmp
jno
sbb
loop
adc
les
fucomp
test
test
sub
mov
adc
lods
out
int3
adc
and
jp
jl
xorb
mov
push
xchg
arpl
mov
adcb
ret
and
xor
ds
testl
push
jo
leave
movd
in
and
daa
mov
sub
sub
mov
aam
mov
or
in
pop
add
loopne
into
ljmp
inc
pop
sbbl
insb
push
push
call
call
insl
lret
stos
popf
cmpb
xchg
gs
imul
push
lret
xchg
mov
loopne
insl
xchg
pop
out
enter
fcomip
sbb
orb
add
loopne
mov
test
jmp
sbb
adc
repz
sbb
cltd
jae
lret
cmp
xor
cld
data16
stos
scas
test
out
hlt
cmp
mov
dec
insl
shll
imul
testl
ret
push
lret
xchg
or
push
adc
or
shl
lods
cmp
mov
outsb
push
cmp
leave
shlb
or
push
call
hlt
adc
inc
rcrb
dec
add
sbb
dec
int3
lea
cmc
add
lods
in
push
xchg
pop
shr
adc
mov
insl
stos
or
mov
sahf
jp
xchg
test
mov
or
jecxz
or
leave
scas
outsl
outsl
fsubrl
inc
pusha
enter
fidivs
cs
shlb
lea
out
inc
lret
xchg
add
sbb
pop
rolb
mov
mov
scas
add
add
test
fs
sub
or
jnp
testb
mov
mov
mov
ljmp
sub
mov
outsb
aam
jmp
push
jp
xor
dec
pusha
jo
or
lea
sbb
mov
or
outsl
add
xchg
rclb
fldt
add
pop
push
stos
mov
in
movzwl
or
or
push
loopne
sbb
mov
mov
adc
pop
or
es
test
scas
mov
inc
sbb
and
in
repnz
std
jmp
add
rcrl
push
push
xchg
cmpsb
or
sub
pushf
or
scas
or
sti
outsl
je
pusha
push
sbb
or
jbe
pop
mov
pop
cmpsl
cmpsb
mov
mov
loop
and
sub
sar
out
mov
mov
cmp
in
rcr
push
xchg
je
jmp
shr
mov
push
ljmp
add
scas
push
outsl
add
push
das
cli
mov
push
aam
inc
and
sub
arpl
mov
jae
jmp
arpl
adc
in
scas
jne
push
dec
hlt
mov
out
sub
rorb
dec
sbb
sti
jnp
and
addb
sub
stc
ret
sbb
sub
add
sub
roll
xor
push
loop
or
inc
jae
push
shl
imul
stc
lahf
subb
bound
shlb
sbb
sub
call
stc
dec
and
loop
add
adc
mov
outsl
mov
and
imul
push
push
adc
add
pop
sbb
mov
ret
and
xchg
sub
mov
cmp
stos
xlat
add
rcrb
subl
dec
pop
adc
pop
xchg
and
add
and
jl
sbb
outsb
notl
cs
mov
imul
outsb
ds
fs
xlat
les
pop
icebp
enter
sbb
subb
mov
call
dec
in
mov
pop
cli
and
clc
insl
cs
ljmp
push
dec
cs
push
mov
cmp
pop
gs
cld
and
cltd
pop
sbb
xor
dec
in
xor
lods
fucomi
divl
ja
dec
mov
xor
aam
outsb
mov
inc
xor
and
into
shrl
shlb
je
out
and
mov
mov
mov
cmp
mov
mov
cli
mov
and
ja
sarl
xchg
add
sti
fisttpll
cli
dec
xor
enter
push
dec
push
jbe
inc
shrb
addr16
mov
cli
add
or
push
dec
scas
sarl
jmp
xor
andl
sbb
imul
repnz
cli
das
imul
sub
ret
cmp
or
xchg
mov
icebp
test
jne
test
mov
pop
aas
test
mov
into
mov
pop
or
push
inc
sub
pop
call
std
inc
cmpsb
and
adc
test
stos
mov
jecxz
data16
call
mov
xor
ljmp
sub
loope
sbb
cmp
dec
cwtl
pop
scas
cmpsl
xrelease
cmc
xor
leave
int3
push
mov
cmpsl
or
adc
xor
test
lods
imul
sbb
shrb
gs
sub
in
aam
shlb
mov
xor
lods
xchg
jno
push
lods
loop
cwtl
cltd
fwait
in
adc
ljmp
insb
pop
push
sub
mov
or
arpl
xor
int
loope
popf
mov
or
sub
mov
push
sti
dec
fs
sbb
test
cmp
or
and
push
pushf
insb
mov
and
mov
adc
lret
int
push
dec
add
inc
testl
rcll
jp
dec
or
xchg
loop
cmp
pop
push
test
rcr
repnz
xchg
push
outsl
or
push
mov
roll
hlt
movsb
mov
rolb
ds
ljmp
or
cmp
stos
jmp
xchg
ljmp
cmpsl
sti
jle
or
cli
mov
ret
lcall
cli
lods
xchg
xorb
leave
pop
movsl
mov
sub
dec
idivl
mov
mov
bound
push
sbb
leave
aas
test
or
inc
incl
aas
pop
cli
sti
je
test
sub
insb
push
cwtl
repz
or
and
lcall
mov
and
jle
mov
cmp
xchg
dec
pushfw
push
push
imul
rcll
aam
push
dec
push
adc
es
test
sbb
in
adc
xchg
sub
dec
mov
shl
mov
dec
dec
xor
push
add
test
inc
adc
adc
mov
inc
sti
add
out
je
outsb
pop
add
add
mov
into
cmp
xchg
nop
push
push
orps
mov
or
adc
pushf
push
mov
sub
push
sbb
stos
shrl
jmp
pop
sub
push
xchg
out
xchg
xlat
mov
add
jmp
inc
xchg
negb
push
fwait
stos
rep
stc
adc
mov
xor
fldcw
div
into
mov
xchg
sti
push
mov
push
dec
jmp
gs
and
push
adc
loop
cmp
xor
ja
jne
or
ss
jb
xor
push
popf
stc
lods
push
adc
xchg
mov
push
mov
adc
dec
fcoml
lock
xchg
lret
sbb
jmp
inc
or
pop
scas
lea
mov
adc
ljmp
push
shlb
xor
mov
lret
movsb
mov
jnp
test
and
xchg
push
and
jnp
cmp
stos
movsl
mov
insl
sub
jmp
repz
divl
sub
and
fwait
bsr
mov
xchg
pop
sub
sarb
jge
mov
mov
sahf
in
loop
out
nop
test
or
sbb
add
sub
mov
add
add
lods
adc
insl
adc
xchg
jge
jno
in
movsl
adc
outsl
das
xor
ficoms
adc
fmull
cmp
fdivrp
xor
lret
clc
in
mov
push
xor
arpl
stos
and
xchg
inc
stos
add
stos
stc
aam
cmp
jl
mov
in
xchg
subb
arpl
test
cmp
fwait
das
pop
rcrl
mov
mov
sbbb
pushf
ficompl
sbb
mulb
int3
add
imul
adc
and
mov
jge
inc
aas
ret
rolb
add
sar
or
imul
ret
pop
loop
push
lods
or
ljmp
add
mov
xchg
push
xchg
movsb
arpl
fwait
cwtl
outsl
jo
and
sub
adc
adc
push
or
shrl
aas
jo
iret
sub
xchg
in
jno
mov
dec
fsubl
dec
pushf
push
dec
jmp
mov
lods
dec
repnz
daa
popa
adc
repnz
inc
cmp
mov
loop
in
or
jno
in
out
mov
arpl
ds
insl
lods
ljmp
lods
cwtl
int
cmp
dec
scas
sti
sub
adc
cs
rcll
ret
shll
jnp
sbb
adc
adc
orl
xor
pop
xchg
popf
adc
insb
push
mov
adc
sbb
jae
iret
and
inc
movsl
pop
call
sub
in
outsb
cli
ss
adc
push
insb
jns
movb
in
add
nop
in
mov
cli
push
xchg
xchg
bound
subb
andb
adc
cs
push
push
clc
pop
loope
ljmp
adc
ret
sub
movsl
and
int3
and
ljmp
insl
adc
jecxz
sbb
fadd
shll
jae
inc
mov
xor
sub
mov
sub
add
mov
adc
pop
cmp
dec
add
jecxz
cltd
sub
lods
notb
jno
mov
or
jmp
cltd
mov
ljmp
and
int
push
add
shr
cmp
roll
add
pop
cmp
adc
shll
fadd
out
in
lea
dec
xchg
xor
pop
in
idivl
ret
lret
loop
jo
test
notb
adc
or
loope
mov
push
mov
in
mov
je
mov
movsb
jmp
popf
jmp
jmp
into
in
aad
mov
jmp
sub
popa
rcrl
out
sub
addb
lahf
adc
inc
jmp
mov
xchg
mov
call
adcb
hlt
sbb
test
mov
mov
ss
inc
stos
fsubrp
shlb
add
es
mov
out
sbb
push
lret
lret
insl
sbb
mov
mov
sub
subl
cmp
mov
popf
jmp
nop
data16
mov
jmp
adc
and
sbb
xor
pop
out
stos
enter
mov
xor
and
mov
sbb
outsb
sub
hlt
ljmp
sub
pop
or
cmp
inc
adc
addb
push
jecxz
dec
ds
mov
sub
pop
lret
in
sti
jne
aam
inc
mov
mov
stos
inc
les
aam
mov
pop
out
or
scas
bound
jmp
add
loop
adc
fadds
ret
dec
pop
test
adc
push
add
ret
lea
es
and
es
cmpsl
out
in
sub
shrl
push
jmp
jle
sbbb
lret
xchg
repz
rcrl
cli
sti
lods
je
xor
ret
scas
call
out
jnp
jnp
jnp
imul
xchg
mov
xchg
xchg
xchg
imul
push
mov
cli
mov
sti
jmp
dec
xchg
hlt
enter
xchg
jmp
pop
jns
adc
lods
xor
jmp
sub
adc
aas
hlt
xchg
dec
lea
xchg
push
js
insb
add
lea
fcmovnb
pop
pop
dec
imul
pop
stos
lret
adc
test
imulb
jb
xchg
andb
lea
fcoml
rcl
test
shll
in
shl
or
enter
and
pop
fcmovb
adc
inc
hlt
push
call
push
pop
push
es
lea
cwtl
adc
and
pop
test
out
cmp
mov
outsb
inc
add
cli
xchg
test
inc
mov
cwtl
inc
ljmp
ja
ror
rolw
rcrl
imull
push
jb
addb
xor
xchg
lods
jle
divb
loop
push
insl
inc
inc
cmp
sub
imul
repz
push
fucom
xor
sbb
sbb
or
adc
or
add
adc
pop
mov
dec
das
in
mov
sbb
in
mov
or
insb
mov
add
cmp
fadd
dec
outsb
sub
std
cmpsb
or
mov
bound
sub
mov
loopne
xchg
in
fcmovb
jge
inc
sub
push
loop
rcll
ret
or
pusha
fsubr
sub
xchg
mov
mov
lods
adc
push
sbb
cmpb
stos
mov
les
inc
insl
add
in
cs
push
clc
repnz
mov
out
jb
orb
sub
mov
jmp
call
mov
andb
loopne
and
mov
xorl
xor
lcall
cmpsl
adc
add
mov
fstpt
fcmove
jo
je
jae
aam
in
mov
orl
sub
fldcw
add
adc
xchg
pop
add
mov
lcall
jecxz
mov
jae
sbb
or
subl
xchg
pusha
in
xchg
inc
jecxz
ja
leave
cli
xchg
cmp
outsb
jle
scas
push
jnp
xchg
fisubl
or
xchg
stos
jmp
push
es
clc
andb
sub
test
call
pop
lock
outsb
dec
imul
mov
push
mov
sahf
xor
lds
add
shr
xchg
mov
out
dec
in
mov
inc
add
pop
add
jg
int3
inc
push
sahf
adc
cmp
ljmp
xchg
sbb
inc
insb
and
mov
pushf
pop
adc
jmp
out
add
shrl
sub
mov
scas
mov
rcr
mov
push
hlt
in
pushl
jmp
stos
sarb
test
push
xor
leave
jge
lahf
pop
pop
scas
jo
or
insl
push
lret
mov
xchg
rclb
xchg
dec
ret
scas
fcmove
test
mov
arpl
hlt
icebp
sub
sub
push
ss
sub
lahf
cmovl
or
sbb
test
mov
mov
and
subb
push
dec
mov
shrb
and
insl
dec
int3
adc
sbb
sub
mov
jmp
fbstp
pop
jb
cmp
adc
push
push
negb
repz
sbb
arpl
ljmp
push
outsb
std
es
orb
jge
or
stos
jle
shr
adc
sbbb
add
jp
imul
and
push
or
jo
mov
sub
ret
bound
or
mov
xor
aam
ljmp
jne
pusha
aam
inc
fmuls
cmp
or
pusha
in
ss
sub
xlat
mov
inc
sbb
pusha
inc
cmp
andl
xchg
push
add
ljmp
gs
sub
push
cltd
cld
das
std
jbe
jecxz
jmp
in
mov
or
pop
fwait
clc
dec
fdecstp
bound
xchg
adc
jmp
ret
add
jnp
lcall
cmp
mov
jnp
add
inc
push
js
lds
enter
adc
sub
lcall
ficoml
sbb
push
mov
sbb
repnz
nop
pop
jmp
ror
jp
or
fwait
cmp
rolb
lret
xor
and
or
rclb
sbb
pop
dec
mov
sbb
push
push
repnz
movsb
sbb
dec
sahf
cltd
ljmp
repnz
insl
sub
sbb
imul
xchg
or
sub
pop
dec
cmpsb
cs
stos
push
push
dec
jno
sub
loop
sahf
jmp
cmp
cmp
jb
add
push
gs
scas
or
push
pop
pop
and
flds
push
pop
je
adc
pop
lods
xor
mov
ret
add
cmp
rcrl
cmp
push
add
mov
ljmp
pop
leave
dec
cs
inc
mov
xor
scas
lods
sub
sahf
out
add
cmp
lods
xchg
jmp
add
push
imul
jle
mov
sbb
add
fdivs
in
inc
push
pushf
dec
push
fcmovbe
fcom
xchg
cli
fs
xor
mov
mov
push
mov
push
push
inc
es
sub
fadd
mov
jp
mov
sbb
and
xorb
xchg
push
fnstenv
test
movsb
and
daa
mov
data16
inc
and
cmp
pop
cltd
mov
sub
jmp
les
lahf
ret
sbb
push
pop
inc
cmp
add
roll
ss
loop
sbb
mov
sub
movsl
cmp
nop
bound
push
dec
dec
jmp
call
sub
out
out
sub
jl
inc
jae
sbb
push
push
xchg
fiadds
push
pop
enter
xor
ss
cmpsb
add
fdivr
in
push
add
or
sarl
sahf
push
push
insb
jp
cmpsb
xchg
adc
sbb
bound
xchg
lahf
lcall
mov
push
jnp
stos
sub
mov
adc
inc
test
sub
cmpsl
cmpsb
cmp
loop
test
dec
xor
dec
pop
push
add
jnp
add
scas
imul
data16
sub
js
sbb
inc
cmp
subb
and
out
lock
lcall
jmp
add
mov
shll
xchg
add
jmp
es
lds
push
push
sub
pop
xchg
push
jecxz
dec
pushf
scas
repz
pop
les
mov
fcoms
hlt
adc
xchg
pushf
outsl
xchg
and
jbe
mov
in
lds
jmp
push
imul
xor
roll
push
mov
fldenv
xchg
cltd
mov
daa
add
mov
popf
mov
push
mov
dec
sub
lret
sub
lea
sub
daa
lods
or
fcoml
stos
stc
adc
adc
int3
xchg
popf
ror
loop
jmp
mov
call
sbb
hlt
rolb
or
subl
movsl
xor
push
xchg
pop
mov
add
in
push
and
out
fimull
stos
mov
sub
cmp
sub
cmpsl
inc
mov
sub
dec
test
clc
push
xchg
mov
ss
xchg
cmc
lahf
jmp
mov
fsubrl
sbb
outsb
push
scas
dec
mov
loop
ljmp
mov
pop
mov
and
lods
sti
dec
cmp
test
jecxz
ds
or
iret
push
xchg
mov
mov
push
jecxz
scas
call
iret
test
cmp
jge
sub
cli
fwait
rcrb
dec
loop
inc
iret
std
xor
inc
loop
add
push
pop
inc
shll
sub
aam
sbbb
push
xchg
test
dec
ret
pushf
xor
sbb
cmp
push
loop
xchg
repz
insl
cmp
push
xor
and
lcall
mov
mov
lds
xchg
adc
mov
cmc
push
ret
roll
sbb
adc
sbb
push
jle
push
pop
mov
rcrl
push
mov
mov
jge
push
push
cmp
cwtl
push
pop
lods
sarb
idiv
in
jp
pop
adc
ud2
add
mov
mov
or
sbb
dec
testl
cltd
mov
dec
fdivrl
imul
push
mov
mov
xor
add
rcll
mov
adc
scas
xor
mov
cmp
mov
ror
stos
imul
pop
mov
pop
jecxz
pop
in
sub
sbb
cltd
mov
popf
insb
addb
mov
add
lods
das
fistpl
sub
sub
or
fidivl
icebp
sahf
xor
dec
and
mov
out
cmp
ljmp
out
rcrl
cmp
gs
or
jbe
and
outsl
ljmp
loop
push
push
sub
sbb
loop
jmp
xchg
sbb
xchg
int
aam
pop
dec
imul
mov
int3
outsb
ljmp
jle
mov
add
rol
xor
jecxz
xchg
fstps
sub
outsb
add
pop
out
int3
addr16
push
xor
jmp
mov
ja
sub
rdpmc
cli
jp
sub
lcall
call
sti
jecxz
movswl
cltd
lret
out
xor
mulb
mov
es
popl
out
iret
test
xchg
testb
lea
sahf
stos
xchg
add
clc
xchg
push
and
or
repnz
dec
aad
and
iret
cmp
pop
mov
ret
shrl
scas
das
push
adc
ret
sti
push
setnp
repnz
add
and
stos
ss
jo
lret
nop
rcrl
jp
push
in
and
push
xor
sbb
and
mov
mov
mov
mov
shrb
inc
sbb
push
int3
mov
into
xchg
jmp
pop
push
jne
xorb
dec
pop
xor
mov
dec
call
sbb
test
cmp
mov
movsl
add
or
bound
cltd
jmp
push
push
dec
lods
adc
pushf
lods
stc
paddsb
or
dec
mov
ret
out
shll
sub
data16
xor
sbb
push
pop
ret
dec
adc
scas
pop
sub
movsl
mov
jecxz
mov
adc
sbb
inc
shrl
lret
add
jae
dec
stos
mov
rcr
scas
pop
mov
test
jecxz
mov
sbb
mov
lret
test
test
aas
and
adc
testb
gs
xor
in
xchg
loop
add
adc
nop
sbb
test
inc
sti
and
cwtl
xlat
ja
or
ret
stos
rclb
lret
je
shl
fst
sar
push
mov
mov
xchg
das
sahf
mov
sbb
loopne
data16
ljmp
stos
sbb
loop
mulb
movb
push
sbb
adc
pushf
ljmp
inc
and
stos
adc
push
imul
inc
xchg
adc
inc
addl
sbb
lcall
test
loop
cli
xchg
xorb
lods
arpl
jmp
addl
rolb
sbb
mov
push
sbb
sub
xchg
jg
lret
fdivr
arpl
or
scas
push
hlt
mov
pop
rorl
push
rorl
shr
pushf
jp
mov
in
add
sahf
push
jecxz
adc
mov
and
in
movsl
mov
sbb
mov
push
pop
dec
push
mov
test
and
adc
nop
lea
jecxz
in
fbstp
addb
mov
leave
scas
les
sar
jecxz
aad
rep
lahf
test
and
xchg
pushl
dec
or
mov
sub
xchg
or
shll
imul
inc
clc
dec
out
cmp
mov
xchg
fwait
cwtl
rolb
cmp
mov
jmp
int3
pop
das
add
pushf
jbe
pusha
mov
adc
ret
xor
ljmp
add
js
jecxz
push
lods
test
bound
lock
loop
add
stos
ret
in
push
cmc
jecxz
mov
dec
repz
ja
jg
push
dec
lret
jecxz
loop
cli
sub
or
fistl
xchg
push
add
rcll
dec
jle
lods
inc
mov
xchg
mov
inc
inc
movsl
incb
adc
test
ret
rcrb
xor
mov
mov
push
loope
adc
test
mov
icebp
dec
xchg
aas
mov
das
cli
mov
popf
and
adc
add
or
cmpsb
lcall
mov
push
int3
cli
mov
aas
cmp
sub
pop
sbb
sbb
mov
shr
loop
filds
xor
inc
rcrl
push
out
jno
jge
enter
aad
mov
mov
adc
mov
sub
lret
mov
sbb
xor
stc
cld
pop
mov
mov
mov
lretw
jmp
aam
push
aaa
repnz
sarl
imulb
lea
repnz
cli
repnz
sub
sbb
dec
iret
pop
orb
jecxz
jp
jbe
in
cmp
in
mov
jne
stos
insl
sbb
sub
outsb
adc
cmp
xchg
or
sub
mov
fldl
hlt
push
adc
cltd
inc
xor
push
loop
jbe
scas
add
fdivs
scas
dec
rcl
cwtl
push
movl
mov
adc
sbb
adc
cmp
xor
insb
fadd
lods
pop
ret
ret
fld
pop
xchg
jge
xchg
mov
jmp
adcl
inc
loopne
loop
jg
push
add
out
xchg
xor
inc
sub
dec
jbe
or
in
mov
mov
sbb
mov
test
or
mulb
jg
or
shlb
mov
pop
cli
imul
out
cltd
pop
mov
bound
movsb
cld
push
cmp
pop
jne
or
mov
push
clc
jmp
mov
lea
stc
lods
aas
das
jecxz
sbb
xchg
xor
inc
fisubl
scas
repnz
pop
sbb
xlat
cmpsl
sub
push
or
sub
cmp
loop
rcr
fdivrl
jl
mov
push
mov
dec
xchg
sbb
add
inc
xor
and
mov
rcrb
cmp
mov
mov
cmpb
arpl
adc
test
cmp
dec
cmp
mov
mov
inc
pushf
pushf
leave
loop
mov
xor
arpl
xchg
adc
push
andb
pushf
pop
lock
jmp
insl
or
dec
or
fldl
in
add
xchg
add
insl
sbb
push
or
pop
jmp
or
mov
mov
dec
in
xchg
movb
jmp
or
mov
es
pop
cmc
cmpsb
mov
addr16
mov
jl
dec
sub
mov
das
mov
inc
test
imul
ret
add
in
shll
pop
sub
adc
jp
je
scas
inc
std
mov
push
jmp
ss
fiaddl
mov
jge
lret
cmp
rcr
iret
sbbl
repz
mov
add
in
cmc
daa
sahf
lcall
fstpl
jmp
add
mov
testl
xor
imul
jmp
xchg
mov
cs
push
push
loop
push
sub
sub
adc
gs
sub
jl
into
jb
imulb
lcall
mov
cmp
xchg
or
add
lods
jne
xor
test
or
or
aam
cmp
int
je
psubd
in
out
push
xchg
or
mov
int
lahf
inc
lahf
fcoml
insb
aam
xlat
aaa
mov
movsl
loope
scas
xlat
loop
jns
fiadds
loop
movsb
sub
mov
push
lods
dec
insb
dec
lods
push
in
xchg
jns
in
in
imul
sub
sub
jl
lods
fsts
lret
mov
xor
add
add
xor
repnz
xchg
repz
and
int3
in
dec
and
cld
out
fists
jmp
out
sub
sub
xchg
lock
cmp
stc
add
loopne
imul
cmpsb
jno
int
adc
jne
je
bound
sub
stos
fs
adc
ds
pop
xchg
mov
pushf
sub
stos
ss
in
scas
jmp
cld
mov
adc
inc
shl
dec
pop
loop
jmp
sub
add
into
or
jae
into
pushf
add
and
or
adc
add
scas
loope
add
inc
into
inc
fisttpll
incl
mov
fwait
mov
cmpsb
inc
outsb
js
jbe
cmp
xor
inc
xchg
mov
repnz
mov
cs
repz
push
cmp
push
rclb
adc
jecxz
sbb
int
test
test
test
mov
mov
or
jecxz
push
jmp
or
sub
add
mov
in
jnp
in
push
or
jge
shll
insb
scas
pushf
add
test
fildl
aas
mov
cwtl
pop
arpl
ficomps
loop
test
jo
xchg
xchg
or
xor
push
rolb
jno
shlb
iret
sar
sub
and
push
xchg
pop
mov
pop
loop
jg
add
fsubs
dec
cmp
in
mov
lea
cmp
rcll
gs
xchg
adc
mov
dec
push
scas
inc
gs
ss
jne
mov
roll
mov
cmp
inc
ret
cli
popa
std
mov
push
mov
loope
jmp
pop
pop
cli
test
lcall
aad
add
leave
mov
inc
lods
or
ret
sbb
sarl
fdivrs
lods
pop
cmpsb
test
ljmp
fdivrp
lret
jb
mov
sbb
ja,pn
lods
dec
adc
ror
adc
adc
call
mov
sub
and
lret
push
xchg
cli
mov
and
outsl
imul
xchg
cmp
mov
shr
hlt
mov
mov
push
add
xchg
jo
faddl
filds
dec
outsb
adc
cmc
adc
mov
lea
or
xor
xor
hlt
mov
cmpsb
dec
mov
push
jmp
outsb
xor
or
sub
pop
fisubrl
out
or
stos
jge
and
inc
cld
testb
aaa
dec
shr
sbb
jmp
dec
pop
fs
cmp
mov
pop
lret
or
scas
arpl
ds
aaa
iret
sub
mov
in
or
js
movsb
aaa
and
mov
fadd
sahf
orl
or
shll
or
or
sub
adc
pop
movsw
xor
or
push
and
jge
stos
sub
jge
inc
jne
movsl
sub
pop
adc
sub
shrb
inc
mov
add
jp
dec
pop
sub
mov
push
cmp
shl
sbb
add
sub
pop
hlt
loop
or
fimuls
and
movb
mov
dec
pop
and
movsb
rorb
pop
sub
add
idivb
fbld
imul
mov
aad
fisttpl
jns
jle
rcr
into
and
leave
fdivs
add
jae
mov
mov
adc
jl
inc
push
mov
adc
ret
in
jae
and
adc
lock
mov
je
xor
mov
jl
cwtl
adc
xor
nop
fdivs
ret
xor
insb
sbb
adc
mov
sub
xchg
push
fldl
lcall
and
sbb
mov
adc
xor
sarb
test
mov
mov
mov
inc
mov
shlb
ljmp
ret
adc
orl
popf
lret
sbb
jmp
add
imul
xchg
xchg
testb
test
sbb
je
hlt
lods
stos
cwtl
pop
lcall
cltd
push
in
out
adc
add
fmull
and
ja
or
cmp
cmp
lcall
fistl
arpl
push
or
sub
int
fbld
aad
mov
pop
aas
or
add
sahf
xor
and
rcrl
enter
movsl
pop
movsb
pop
inc
push
insl
shl
sbb
loopne
scas
cltd
clc
insb
fsubs
push
sbb
ret
in
cmpsl
lret
test
out
mov
push
cmp
rcl
xchg
je
jp
lods
stos
jae
out
pop
std
stos
cwtl
push
mov
lret
test
les
xchg
jbe
bound
sbb
pop
out
test
push
fsubrl
push
cmp
mov
daa
xchg
dec
mov
fnstcw
in
cmc
sub
mov
jno
loopne
insl
sbb
gs
push
or
mov
fs
rclb
orl
add
dec
shlb
adc
mov
xchg
pop
jmp
test
inc
pushf
xchg
loop
inc
xor
mov
les
inc
jecxz
push
jmp
mov
je
out
orl
jno
add
cmp
mov
pop
dec
shl
or
cs
lret
adc
lcall
mov
add
adc
ds
mov
in
lret
pop
dec
jne
insb
jmp
stos
jae
lock
push
or
pop
xchg
in
outsb
mov
mov
bswap
inc
out
iret
jmp
stos
xlat
or
insl
les
sub
dec
and
and
imul
pop
lods
mov
sub
pop
cs
mov
sub
adc
mov
adc
ret
in
xchg
lret
mov
loope
stos
in
mov
push
cld
or
xor
outsl
dec
jmp
adc
rep
xchg
cmpsb
aas
bound
adc
in
test
sub
adc
mov
inc
repz
rorl
jbe
cltd
mov
test
cmp
test
inc
imul
ficompl
std
adc
addr16
jg
jp
dec
stos
shlb
int
repnz
jns
subb
shlb
sbb
pop
and
cmp
test
xor
je
in
fsubrs
jecxz
pushf
sbb
insb
andl
mov
andb
movsb
sub
mov
das
jecxz
movsl
sbbl
sub
push
ljmp
sahf
mov
jecxz
outsl
sbb
arpl
sbb
loop
into
and
or
out
in
stos
xchg
imul
sub
adc
sbb
ljmp
rclb
jecxz
into
sub
cmpsl
mov
inc
shrl
dec
imul
sub
out
into
jno
repnz
insl
aas
xor
push
jl
stos
push
dec
cmp
jae
lds
and
lret
in
ja
ljmp
lods
shrb
sub
mov
subb
mov
mov
insb
mov
cmp
fstl
movsb
pmulhw
lods
imul
mov
xchg
mov
sbb
stos
xchg
sarl
test
mov
sub
lret
push
movsb
cmpb
pop
insl
sub
lock
movsl
xchg
icebp
and
push
push
mov
in
push
in
lcall
enter
in
sub
xor
scas
push
out
mov
push
lret
adc
bnd
ret
dec
scas
scas
push
call
jne
sub
in
and
repz
arpl
dec
lret
adc
mov
push
pop
mov
mov
aas
xor
adc
push
int3
mov
subl
mov
push
and
push
lods
push
add
mov
jl
shlb
shrl
inc
imul
loop
mov
mov
jle
xor
das
mov
jo
fdiv
pop
test
mov
xchg
shlb
xchg
lock
push
mov
repz
sbb
dec
scas
insl
push
and
insb
fisttpll
aad
ror
stos
test
shrb
aam
aaa
lods
dec
or
test
sub
xchg
insl
popf
test
or
jae
outsl
sbb
sti
ljmp
sub
mov
in
rorl
in
das
and
dec
ds
enter
daa
xlat
daa
pop
out
stos
push
lds
outsb
sbb
sub
push
jbe
outsb
push
xchg
mov
xor
ljmp
push
insl
fdivs
arpl
pop
sbb
arpl
dec
xor
arpl
and
push
and
sbbl
shrl
jecxz
and
data16
into
stos
sbb
jae
cmp
jp
ss
imul
ss
xchg
scas
mov
lods
std
inc
cs
mov
sbb
and
or
inc
cmp
and
bound
jecxz
adc
repnz
sub
outsb
sti
and
xlat
sub
push
movq
push
sub
and
daa
orb
imul
out
lahf
ljmp
call
push
push
xor
mov
stos
cli
fidivrl
stos
iret
test
lods
adc
insl
insl
cmpsb
xor
mov
out
xor
push
arpl
jecxz
push
bound
xchg
cs
cwtl
push
insl
xor
in
rorl
in
push
out
popa
mov
imulb
fisubrs
lcall
jae
or
cs
sub
repz
test
out
sbb
mov
push
out
loop
pop
mov
or
xchg
loop
cmpsb
pop
int3
and
adc
test
pop
mov
sub
cwtl
out
inc
icebp
pop
cmpsb
aad
in
int
xchg
sub
and
and
sbb
xchg
or
mov
jno
mov
sub
daa
dec
scas
jecxz
mov
insl
cmp
int
and
pop
sub
ret
push
das
sti
and
pop
or
subb
stos
inc
push
lods
outsl
je
and
insl
xchg
sub
rorb
pop
jecxz
cmp
mov
sub
out
rcrb
in
out
push
xchg
sub
xchg
push
dec
adc
sub
and
pcmpgtd
xor
fldcw
shrb
mov
ss
std
aam
mov
test
or
jnp
sub
push
mov
xor
sub
dec
out
cli
stos
pop
lret
leave
outsl
add
fwait
mov
fistpl
rorb
push
jecxz
xchg
mov
outsl
xor
out
push
stos
pop
jmp
mov
cmp
jecxz
dec
imul
lods
adc
clc
xchg
aam
adc
test
movsb
cli
jmp
call
into
pop
sbb
or
mov
es
push
stos
jg
adc
sub
jecxz
ret
add
lods
xor
iret
jmp
int
xor
lods
rorl
push
mov
pushf
cmc
imul
adc
nop
sarl
or
add
ret
mov
out
in
push
mov
inc
stos
icebp
cmc
jecxz
inc
in
sbb
lret
rcl
jge
xchg
int3
and
xchg
out
xchg
pop
cmp
out
lret
jne
sub
mov
outsl
arpl
hlt
and
jmp
add
mov
lods
xlat
dec
or
jns
imul
dec
sbb
or
das
movsl
mov
mov
dec
sbb
shlb
sub
adc
sbb
adc
mov
call
aaa
sub
arpl
sub
push
and
push
jns
test
stc
xchg
in
into
or
jp
cmpsl
push
sub
sub
inc
faddl
and
fisubrs
xor
outsl
subl
adc
adc
enter
dec
pop
arpl
enter
adc
arpl
stos
lahf
sub
out
mov
add
lods
xchg
scas
cmp
sub
mov
cmp
xchg
into
scas
or
subl
or
outsl
and
arpl
ret
add
cld
xchg
mov
sub
out
stos
pop
shrb
adc
xchg
push
shrl
lea
sub
mov
ljmp
lods
sub
call
inc
xorb
or
lods
mov
cwtl
std
mov
arpl
bound
sub
adc
in
and
xchg
arpl
xchg
jmp
mov
add
das
sbb
sub
or
dec
sahf
mov
xchg
cli
cmpsl
mov
add
pop
scas
sub
ret
sbb
cwtl
in
pop
shrb
mov
ljmp
inc
and
add
adc
bound
lret
push
pop
dec
add
push
cltd
push
out
push
lods
dec
dec
fisubrl
adc
loope
mov
adc
xor
leave
push
ret
cmp
jmp
xor
orl
cmp
fs
cmp
ljmp
subl
xor
and
test
push
and
adc
gs
in
mov
bound
lods
out
pushf
mov
lret
mov
xor
aam
xor
or
fs
push
adc
mov
mov
stos
rorb
daa
or
cmp
sbb
and
fimull
scas
mov
gs
cmp
jo
mov
mov
sub
mov
mov
jne
xor
mov
push
ret
cmp
loop
lods
xor
lea
stos
sub
xor
popf
or
adc
stc
ds
sub
sbb
incb
push
dec
sub
leave
add
add
test
sysenter
insl
add
lods
sub
cmp
lods
and
sbb
sti
test
xchg
loop
ret
ret
push
shlb
add
sub
sbb
mov
subl
into
sub
bnd
mov
mov
in
mov
out
enter
sub
pop
rcrb
ss
fisubl
fmull
and
push
mov
filds
cmp
insb
adcl
cwtl
or
or
sbb
mov
ljmp
jmp
cld
push
pop
lods
ds
sbb
sbb
das
push
filds
insb
dec
push
icebp
jae
push
scas
xor
jecxz
mov
mov
inc
xchg
pusha
das
xlat
movb
ret
out
repnz
scas
add
xchg
cld
or
outsb
xchg
xor
stos
xchg
mov
lcall
scas
shl
mov
das
sbb
test
rcll
lret
int
call
mov
cmp
and
mov
cmp
xchg
lods
adc
dec
das
cmp
pop
repnz
or
test
sbb
or
inc
mov
and
sbb
dec
call
push
sub
add
and
sbb
xchg
cmp
and
jmp
inc
sar
leave
sbb
xchg
stc
call
nop
push
cwtl
inc
cmp
mov
mov
mov
popf
push
push
pop
inc
inc
and
sbb
jns
popa
or
popf
adc
add
and
sbb
xchg
cmp
and
call
inc
sar
enter
clc
call
xchg
push
lahf
inc
xchg
and
sbb
or
push
push
pop
inc
inc
and
sbb
js
pusha
or
popf
pop
push
pop
inc
pop
and
sbb
xchg
aas
jns
xchg
out
call
push
iret
inc
idiv
or
insl
in
cs
cmp
aad
nop
in
scas
in
push
sub
rorb
or
xchg
sub
enter
test
xchg
sub
ret
sbb
pusha
test
repnz
jns
or
aas
mov
ljmp
paddw
jo
icebp
pop
sub
loop
movsb
sub
xor
sbb
movsb
into
mov
mov
repnz
push
sbb
jmp
inc
or
cs
mov
cmp
out
rorb
dec
mov
and
pop
xor
std
jo
popf
push
dec
dec
fstps
mov
lods
dec
mov
sub
outsb
lods
ss
xchg
fiaddl
in
sub
mov
ljmp
iret
insl
push
iret
inc
loop
shrb
shlb
or
mov
inc
in
add
jge
push
add
inc
mov
adc
dec
jge
call
sub
in
sub
cmp
xchg
push
xlat
or
sti
push
daa
mov
out
sbb
mov
add
or
and
lahf
in
dec
jns
mov
insl
leave
sub
pop
sbb
mov
out
test
jmp
push
shrb
lods
insl
out
pop
add
sub
cmp
ss
enter
mov
dec
addr16
dec
cmc
adc
fninit
scas
dec
test
scas
lods
lret
and
fstl
xor
inc
dec
adc
xchg
enter
xor
adc
int
adc
or
sub
pop
lcall
or
sbb
xchg
dec
sbb
xor
xor
add
scas
outsl
dec
push
outsl
repnz
imul
test
test
push
shrl
mov
or
sahf
jle
sub
mov
call
prefetchnta
cmp
in
or
mov
push
sbb
test
jo
scas
loop
dec
jmp
lods
iret
cmp
and
cltd
or
loop
je
dec
insl
push
dec
cld
cltd
xchg
sub
xor
add
repz
fsubrp
loop
loop
push
test
lods
outsl
push
add
push
pop
int3
cmp
ljmp
adc
lahf
das
push
xchg
mov
in
push
mov
adc
mov
add
push
sub
sub
jnp
arpl
cmp
jecxz
arpl
jb
jg
shrb
pop
pop
or
xor
aaa
int3
cs
push
ss
testb
in
ja
or
pushf
into
mov
inc
int3
dec
popa
movsb
sub
or
mov
sub
jo
and
jns
push
dec
cltd
and
mov
mov
scas
fs
popa
movsb
xchg
out
test
adc
add
std
jb
mov
fistl
jle
mov
mov
mov
xor
xchg
mov
lahf
dec
pop
dec
mov
jmp
mov
inc
add
outsl
pop
dec
mov
adc
pop
sub
dec
cltd
shlb
lret
test
jle
mov
loop
ret
push
sahf
mov
fisubrs
js
jp
stos
mov
mov
mov
xchg
lods
and
enter
adc
ds
lea
xor
stc
lods
outsl
enter
add
xor
lods
mov
lret
sbb
lret
inc
sbb
cmp
popa
cmp
jmp
int3
inc
dec
inc
push
shrl
add
sti
mov
dec
movsl
jmp
fwait
insb
mov
test
out
push
sbb
add
sbb
pop
inc
jmp
outsl
push
jp
ss
hlt
cli
mov
std
xor
adc
call
stos
shlb
imul
mov
js
lret
jmp
or
adc
and
mov
outsb
rorl
lcall
outsl
sbb
adc
imul
pushf
mov
sbb
push
repz
mov
dec
adc
and
jg
out
push
rclb
loop
mov
dec
out
jle
fsts
data16
inc
jecxz
xor
push
xor
imul
add
adc
ljmpw
pop
pop
shlb
pop
inc
mov
js
repz
mov
add
test
jb,pn
jno
shl
sub
sub
faddl
stos
lea
inc
stos
push
imul
es
sub
cmp
leave
outsl
imul
arpl
das
ror
jbe
shr
imul
inc
in
loop
test
repz
ja
jmp
out
shrb
adc
cs
fcoml
sti
enter
scas
sub
jmp
xor
push
sub
lret
sti
pop
subb
sub
fnstsw
in
sbb
aad
insb
push
jo
xchg
jae
mov
outsl
inc
pop
fldcw
clc
jg
push
mov
sub
xor
sbb
cli
shll
cmp
cmovns
dec
mov
push
xchg
pop
mov
stos
push
scas
and
xchg
test
xchg
add
xor
bound
mov
rolb
and
push
sarl
clc
fcmovnb
adc
call
jne
ror
pop
inc
inc
mov
mov
out
shll
inc
mov
mov
lea
add
mov
ret
rolb
add
std
cs
jbe,pn
bound
mov
inc
sbbl
and
inc
add
addl
hlt
mov
push
in
sub
pop
repz
mov
cmp
add
fcomip
xor
sub
jmp
and
test
mov
cli
mov
cmpsl
mov
ds
aas
fwait
cwtl
loop
push
mov
push
outsl
scas
xchg
sub
add
cmp
and
rclb
out
inc
stos
xchg
inc
outsl
loopne
rep
mov
aam
jo
mov
arpl
loope
cltd
mov
sahf
jp
xchg
push
sbb
cmp
xlat
and
mov
cltd
or
sahf
inc
stos
sub
jmp
out
into
out
jge
fsubrs
rorl
pop
mov
into
push
rcll
mov
lret
shrl
call
ret
popf
stos
rolb
xchg
ret
xchg
sub
shl
sub
xchg
in
cmp
ss
sbb
inc
fcomps
aad
push
or
sbb
mov
ds
mov
lea
ret
mov
sbb
loop
test
cmp
mov
rorl
ret
adc
insl
pop
std
sub
add
repz
bnd
js
mov
lret
adc
out
or
add
adc
mov
and
sbb
popf
sbb
mov
pop
jmp
fdivrs
pop
mov
ret
dec
pop
sub
mov
lret
rcrb
dec
cltd
insl
add
sbb
mov
push
mov
rcrl
lods
jl
push
lods
outsl
aas
sub
sub
loopne
jecxz
dec
shr
and
cmp
lret
cld
cmp
rorb
movsl
cmp
dec
push
cmp
inc
push
ret
xchg
cmp
arpl
or
in
iret
or
dec
int
loop
pop
imul
and
and
cmp
std
push
cmp
jns,pt
push
ficoms
mov
xchg
add
xor
repz
int
jge
push
jno
pop
sbb
sub
scas
and
add
je
inc
lods
mov
call
ret
repz
sbb
and
inc
sub
pop
sbb
lcall
jp
shll
xchg
orb
dec
ja
fsub
push
cltd
lret
dec
mov
movsb
lcall
cs
shr
mov
ret
cli
test
xor
mov
out
pop
std
aas
dec
pop
test
xor
jge
sti
imul
and
or
or
mov
cwtl
cmp
dec
jmp
jecxz
mov
mov
test
adc
dec
jg
sub
jb
sbb
inc
inc
add
out
mov
popf
andb
push
mov
sub
add
out
jae
jno
inc
pushf
fnstcw
adc
xor
std
cs
add
fisubrl
stos
sbb
iret
rorb
inc
scas
fsubl
bound
movsb
xor
jmp
mov
fsts
loop
push
imull
ss
cmp
mov
jnp
dec
arpl
stos
mov
cmp
jmp
test
nop
xchg
inc
adc
test
nop
mov
sbb
aam
push
aam
xchg
xor
out
ret
push
or
sbb
insb
mov
mov
nop
ret
sbb
push
lret
sbb
adc
jmp
ret
mov
in
into
imul
stos
sarl
loop
xchg
sti
lods
jp
ds
jecxz
sbb
das
mov
adc
xorb
aas
add
pushf
test
mov
push
es
xor
jp
movsl
fs
push
push
sbb
mov
in
mull
fs
mov
ss
outsl
out
mov
and
jne
outsb
pop
dec
mov
int
xchg
xchg
stos
daa
dec
fst
popa
cmp
mov
and
movsb
lret
subl
mov
adc
ret
xchg
mov
mov
popf
adc
test
mov
in
lea
sub
scas
xlat
fdivrs
mov
xchg
or
mov
jo
push
push
fisttpll
iret
mov
scas
pop
sub
push
aam
ret
stos
mov
test
xchg
xchg
sbb
pop
xchg
sbb
xchg
pop
sub
mov
lret
movsl
push
outsl
ljmp
mov
mov
or
jo
xorb
jle
out
mov
cmovo
push
sbb
mov
dec
bound
mov
mov
jge
mov
icebp
fdivl
paddq
dec
xchg
sub
inc
jmp
insb
add
mov
gs
and
xchg
xlat
fsubrs
mov
pop
je
dec
out
xor
cmp
add
mov
cmp
and
mov
pop
jp
les
or
cmpsl
scas
push
rcll
add
mov
cmp
sbb
test
and
add
jns
xchg
cmp
jl
xor
push
jae
mov
ret
cwtl
pushf
jbe
mov
fwait
sub
fisubrl
and
mov
test
xchg
xchg
mov
lret
int3
push
cltd
ret
mov
pop
mov
pop
dec
insb
push
outsl
leave
xor
jge
arpl
in
push
mov
sub
inc
adc
iret
inc
dec
add
mov
or
jg
leave
pop
jmp
stos
repnz
and
cmc
xchg
dec
pop
popl
in
jno
arpl
jg
adc
lea
scas
fdivrs
out
imulb
insb
stos
push
test
sbb
dec
jl
test
shrb
mov
mov
mov
in
pushf
data16
and
sub
das
add
subb
cwtl
std
push
inc
mov
out
xchg
push
sub
sbb
imul
es
xchg
mov
and
insb
cvtpi2ps
mov
push
jle
cs
sub
repz
pushf
movsb
sub
adc
jle
push
imull
sbb
xor
xchg
insl
rol
in
mov
in
loop
lcall
adc
cwtl
cld
call
lcall
bound
jmp
adc
or
xchg
outsb
nop
dec
out
push
mov
adc
leave
lahf
fistl
pop
sti
into
pop
aam
ret
xchg
jecxz
push
add
sbb
jns
scas
sahf
inc
sbb
sub
add
mov
ror
pop
ficoml
xor
lods
cwtl
mov
lcall
loop
pmaxsw
test
push
rorb
cli
jno
jno
popa
lock
clc
cmp
mov
cmpsl
mov
and
cmp
xorb
adc
and
mov
icebp
dec
mov
jl
jne
inc
cltd
sbb
hlt
dec
jmp
sbb
orb
push
jmp
push
mov
aas
dec
arpl
test
push
test
stos
push
outsb
scas
adc
mov
sub
pushf
sub
inc
cs
and
pop
inc
push
push
cmp
push
shll
ljmp
bound
aaa
add
sub
cmp
dec
mulb
cltd
mov
sahf
sbb
ficomps
jg
adc
sbb
xchg
fisubrl
adc
movsb
adc
pop
sub
ficompl
mov
push
insl
add
pusha
cmp
mov
or
push
int
push
mov
adc
mov
lret
icebp
push
dec
push
lds
push
mov
jge
lea
jo
nop
out
push
pop
lcall
cltd
test
loopne
lcall
shll
je
loop
mov
int3
sarb
push
in
fs
push
bound
in
mov
jp
add
add
sbb
je
ret
ret
add
ret
pop
mov
mov
cmpsb
imul
adc
add
xchg
ljmp
push
add
cmpl
rorb
pop
inc
loop
shlb
das
fldenv
jmp
add
ret
inc
sbb
leave
pop
nop
mov
mov
sub
mov
sub
nop
aam
repz
adc
mov
jge
add
lcall
jp
push
sahf
mov
cwtl
pushl
cs
mov
sub
push
jg
icebp
adc
aaa
fcoml
arpl
ror
xorl
in
jb
xchg
aam
pop
dec
sbb
clc
or
jb
pusha
mov
dec
mov
push
or
insb
push
sub
push
inc
jnp
mov
add
fsubrl
push
orb
mov
sahf
dec
arpl
add
inc
dec
subl
pushl
xor
jo
mov
nop
scas
mov
jecxz
adc
cmp
push
push
jg
dec
fisubrl
scas
cltd
xor
insb
insb
sbb
fldl
xchg
sbb
cmp
ss
add
sbb
cld
jbe
fimull
sahf
std
dec
lret
inc
out
dec
or
repnz
test
push
test
rcrl
ret
cltd
push
inc
and
jp
jmp
lret
sub
jle
dec
int3
pop
xor
ror
adc
ds
repz
enter
pop
push
ret
dec
sahf
mov
xchg
mov
pop
aad
in
fcmovb
popa
and
inc
jbe,pn
loopne
shl
fcomps
add
nop
in
insb
mov
and
mov
mov
mov
lret
icebp
ret
jg
int
mov
dec
rorl
cli
mov
movsl
cmp
rcrl
cvtpi2ps
jecxz
sbb
icebp
mov
loop
xchg
leave
mov
dec
pop
insb
outsb
mov
mov
ss
add
out
adc
dec
loop
sub
ret
mov
mov
push
in
jne
fsubr
jbe
lahf
lahf
imul
sti
xchg
adc
push
jbe
imul
xchg
ljmp
stos
mov
inc
pop
scas
shl
imul
sbb
enter
xchg
mov
xor
cwtl
shrb
mov
push
push
jecxz
mov
popf
xchg
inc
push
stos
rol
mov
ret
xchg
lods
mov
test
cmp
dec
cmpsb
push
aaa
out
test
ss
lcall
sbb
sub
lds
dec
cltd
adc
fsubrl
sbbb
iret
sub
call
scas
mov
inc
inc
or
mov
in
and
hlt
movsl
pop
xorb
pop
data16
inc
mov
dec
inc
out
xchg
cmp
hlt
dec
movsl
sub
xlat
insl
loop
jp
jmp
into
stc
jmp
mov
adc
adc
xor
rcrl
mov
stos
pop
loope
cmpsl
sub
lods
xchg
dec
and
bound
repnz
insb
or
cli
cmp
xchg
call
mov
mov
add
lods
sub
push
sbb
mov
push
loope
enter
add
rcll
ret
push
scas
loop
cli
test
sahf
cmp
adc
inc
fsubr
add
pop
cmpsb
add
dec
aaa
lahf
fs
xchg
shl
ret
inc
fsubr
into
aaa
fadd
fcoml
in
nop
sbb
inc
mov
cld
lods
movsb
push
mov
jmp
sbb
add
imul
pop
pop
stos
mov
in
loope
add
push
jmp
loop
xchg
mov
movsb
or
lea
cltd
movb
mov
mov
pushf
ret
xchg
mov
hlt
dec
testb
mov
mov
sbb
xor
mov
fdivr
add
in
push
add
sarl
emms
inc
hlt
lret
lcall
push
jne
sarb
jmp
add
adc
jmp
mov
in
hlt
pop
add
and
push
mov
sub
rcl
and
scas
lret
mov
or
sub
sub
sahf
lods
add
xchg
mov
pop
sub
out
lcall
shlb
fdivrp
sbb
push
add
push
jge
int3
test
test
das
cli
lcall
loop
pop
loop
mov
das
ret
orl
sbb
fwait
cld
lods
add
loop
jbe
hlt
fsubr
jle
xor
mov
cmp
jbe
adc
sbb
mov
jne
xchg
jbe
pop
or
adc
add
testb
mov
orl
gs
xor
sub
ljmp
jle
xchg
inc
ja
out
jne
outsl
pop
fisubl
adc
dec
sub
cmpsl
cmp
loope
push
adc
fs
adc
iret
loop
push
addr16
bnd
ret
lret
int3
adc
push
mov
daa
ret
add
push
jb
arpl
fildll
jl
pop
in
fisubrs
mov
rcll
sbb
testb
loop
out
or
add
mov
or
pop
gs
into
jae
mov
es
fcmovu
xor
aam
mov
push
fistpl
shrb
and
scas
xor
lods
jne
pusha
or
dec
std
or
bound
jl
xchg
popf
or
pushf
sbb
xor
mov
fsubrl
insl
shlb
mov
add
jmp
cli
les
iret
lods
fs
sbb
inc
insl
jg
sub
jbe
loopne
fsubrl
ret
push
adc
xchg
xor
loopne
cltd
or
add
insb
shl
out
cmpsb
and
testb
xchg
xchg
in
mov
sub
jmp
test
shl
pop
ret
stos
inc
or
mov
or
push
or
push
and
fldl
shrl
mov
fwait
jecxz
jmp
lret
out
jo
or
cmc
jmp
jmp
jmp
push
or
fldcw
and
mov
jmp
mov
sub
ja
hlt
cmpsb
repnz
lcall
xchg
push
mov
imulb
sarl
adc
sbb
or
sub
mov
cmp
or
sbb
push
jle
sbbb
add
outsl
int
jnp
repz
push
sti
xor
sub
push
sub
or
dec
sub
push
adc
loop
fld
or
orl
lea
inc
jno
mov
and
pop
arpl
popa
mov
jmp
ljmp
and
cmp
cli
cmp
ret
jg
rcll
push
loop
cmp
add
movsl
adc
push
in
push
test
cs
jp
mov
or
or
sub
outsb
or
stos
and
jnp
cmp
xor
jg
or
xchg
dec
repz
adc
dec
lods
mov
stc
xchg
sbb
and
ljmp
sbb
ljmp
xchg
ss
movb
dec
jnp
out
rcll
pop
xchg
mov
aam
pushf
repnz
xchg
incb
dec
add
pop
push
shlb
jnp
es
xchg
loop
inc
popa
dec
xchg
pop
push
or
loop
jmp
mov
sub
add
leave
jnp
aam
jae
push
shr
add
pusha
and
cli
or
sub
test
lcall
jmp
mov
jnp
lods
inc
dec
add
repnz
iret
sbb
lret
or
jns
pop
ret
stc
loop
rolb
push
sahf
adc
stc
jmp
cs
int3
sub
imul
mov
loop
jp
mov
xor
in
and
popa
dec
xor
sarb
jbe
add
insl
sub
and
stos
or
test
test
push
or
ret
js
and
sub
add
shl
cwtl
jle
sarb
fnstenv
and
or
cmc
sahf
jl
mov
and
push
add
push
add
cli
xor
mov
out
insb
xor
pushf
flds
fdivp
mov
and
lds
pop
mov
inc
xchg
adc
shrb
push
pop
push
xchg
cli
loop
add
pop
xor
call
xchg
shrb
jecxz
fdivp
lods
sub
sub
das
cli
stos
push
call
imul
pop
add
cmpsb
mov
xor
jge
push
or
fistpl
jno
inc
dec
ret
xchg
insb
shrb
fisttpl
push
cmc
ret
fisttps
lea
outsb
stos
int3
inc
sbb
jno
loop
out
sahf
sbb
lea
movsl
test
shll
rorb
pop
insl
mov
inc
stos
push
adc
inc
shr
push
mov
push
leave
arpl
dec
lahf
and
push
ficoml
out
lods
pop
pop
cli
cmpsl
sub
mov
xchg
cwtl
jg
sub
sbb
arpl
inc
xor
mov
mov
jno
inc
mov
jge
arpl
rorb
int3
mov
pushf
push
in
popf
lahf
jne
fidivl
ds
push
fcmovbe
pop
scas
lea
and
cmpsb
inc
push
aaa
dec
test
cwtl
daa
add
mov
jmp
inc
cmpsl
hlt
push
cmp
andl
rcl
sub
sbbb
xchg
loopne
dec
loop
push
lcall
int
call
sub
test
xor
xchg
js
xchg
jno
mov
loop
push
scas
sub
mov
int
add
sub
dec
jb
adc
jmp
repnz
and
in
xor
mov
ds
jge
test
movsl
jle
xor
imul
ret
int
mov
cmp
movsl
sbb
ljmp
sbb
jp
in
mov
mov
adc
aad
cmc
fisubs
outsl
mov
bnd
add
cltd
fldt
sub
inc
cmp
stc
cmp
in
mov
mov
pop
jb
iret
pop
or
xchg
inc
orb
add
or
dec
dec
push
jmp
leave
sti
pushf
mov
jmp
hlt
leave
shlb
add
mov
dec
loop,pt
mov
rcll
stos
sbb
push
lods
aam
out
jbe
push
push
xchg
pop
adc
dec
loope
roll
sub
lcall
fs
xchg
jmp
jne
add
jb
hlt
rcll
in
repz
lds
mov
roll
or
pop
adc
sub
add
int3
or
dec
inc
jbe
xchg
lods
jne
push
and
add
mov
push
outsb
aam
int3
sub
cmpsl
dec
in
and
cmp
xchg
sub
popa
loope
mov
ret
sub
sub
mov
inc
xor
push
pushf
int3
in
cld
xchg
xor
dec
xor
out
repz
dec
xchg
cltd
lret
enter
sbb
dec
das
lret
inc
or
push
outsl
sub
int
fsubrl
dec
mov
int3
icebp
bnd
mov
pop
jno
pop
sbb
adc
mov
out
scas
jg
adc
dec
outsl
fidivl
fmulp
cmp
push
mov
sub
mov
xor
scas
adc
push
dec
or
inc
andb
pop
mov
mov
sahf
lcall
xlat
add
ficompl
mov
pop
push
popa
clc
mov
pop
xchg
sub
push
lcall
call
pop
bound
pop
jmp
mov
jecxz
outsl
add
mov
xor
push
dec
scas
btr
out
xor
sub
lods
and
sub
sub
cli
les
xchg
pusha
xchg
insb
mov
pop
mov
clc
or
outsb
icebp
fidivl
clc
lret
xor
shrb
in
stc
xor
lods
test
loop
nop
sub
nop
popf
insb
out
add
or
iret
pop
shl
inc
fs
or
int
not
cvttps2pi
nop
mov
fdivl
sub
xchg
mov
jle
jae
leave
test
fcompl
cmc
xchg
jmp
aas
stos
divb
leave
les
ds
pop
lcall
in
imul
pop
pop
dec
add
xchg
mov
adcb
jmp
arpl
ss
pop
enter
call
ror
xor
fidivs
insl
sbb
ss
iret
repnz
push
je
test
sub
ss
xor
push
sbb
or
cld
int3
lds
mov
inc
mov
mov
sbbl
lcall
mov
push
xchg
mov
and
jp
scas
add
aam
xor
and
gs
mov
inc
mov
add
cmp
stos
pop
in
movsl
jmp
lret
out
xchg
xlat
fisubrs
push
and
in
sbb
add
loop,pt
mov
add
insb
mov
mov
idiv
aam
iret
jae
or
lcall
in
mov
push
xor
pusha
mov
loop
push
dec
or
dec
inc
in
xchg
mov
cmp
mov
test
pop
insb
sub
sbb
sub
inc
fdivrl
pushf
nop
fisubl
adc
jmp
mov
out
sbb
loop
adc
add
adc
rcll
aaa
je
lods
scas
mov
out
or
loop
enter
mov
sbb
das
rcrl
fs
outsb
jne
and
add
push
test
pusha
jmp
mov
hlt
mov
cmp
in
sub
outsb
jne
cld
stc
ljmp
es
data16
or
add
sbb
or
sbb
repnz
or
pop
adc
adc
add
adc
loop
loop
imul
xor
into
push
ret
sub
push
ds
rcll
adc
dec
sbb
lock
jp
fwait
add
fwait
sti
aad
adc
xchg
xorb
ljmp
xchg
sub
add
push
mov
sbb
aam
jo
dec
xor
cwtl
arpl
adc
mov
negb
jg
stos
push
xor
pushf
lret
outsb
imul
imul
sub
jg
dec
call
jno
stos
mov
inc
xor
sub
mov
dec
and
stos
push
cld
pop
adc
lea
jmp
dec
sbb
mov
mov
jge
dec
test
xchg
xorl
mov
out
cmp
shr
in
jmp
or
push
imul
cmp
xchg
or
adc
cmpb
sub
or
adc
imul
in
push
xchg
call
sub
lcall
xor
test
jmp
test
push
in
data16
xchg
cmp
repnz
shlb
gs
ret
pop
mov
xor
inc
cmp
adc
pop
arpl
sarl
mov
or
sbb
lahf
in
mov
rcrl
out
shl
cmp
popf
out
adc
filds
lea
cmp
pop
loop
and
ret
and
ss
repnz
jle
cmp
sahf
jns
pop
sbb
sbb
mov
cmp
stos
xchg
jmp
add
xchg
stos
clc
out
cmp
adc
sbbb
sub
push
sub
push
sub
push
inc
ret
loop
xlat
cmpb
ficoml
ds
repnz
loop
mov
xchg
ficoms
mov
add
xchg
dec
push
cmp
fs
divb
inc
mov
or
mov
cmp
int
out
mov
pusha
sbb
rorl
nop
hlt
in
dec
fwait
ds
stos
add
rol
cli
stos
scas
add
inc
in
or
xchg
pop
stos
add
sbb
subb
sub
xchg
fdivl
shll
cmp
fsubrs
add
cmp
adc
into
stos
fistpl
adc
mov
inc
enter
mov
inc
imul
cmc
aam
in
mov
sbb
in
scas
xchg
xchg
cli
jmp
adc
mov
cmpsb
sbb
sub
dec
clc
in
push
cmp
mov
je
sbb
lds
aam
scas
hlt
call
mov
shrl
stos
xor
int
cmp
in
fs
push
rdtsc
rcr
or
sahf
nop
mov
sahf
repz
xor
jge
push
sub
mov
xchg
xchg
xor
into
dec
push
in
jge
cmp
push
fmull
push
ljmp
mov
lods
hlt
sti
test
mov
and
subb
shl
jns
cmp
inc
mov
mov
ret
into
icebp
push
cli
adc
divb
jge
stos
shr
mov
adc
add
nop
or
test
inc
mov
add
icebp
jnp
jmp
std
je
and
mov
enter
jmp
sbbb
rcl
into
jbe
popf
cs
mov
jnp
mov
sbb
xchg
dec
xchg
scas
orl
sahf
ret
outsl
dec
rolb
dec
or
in
xchg
shrl
fcmovnbe
arpl
leave
mov
mov
sub
mov
negl
in
daa
fmull
mov
fsts
sub
sbb
pop
clc
push
jae
out
xor
lret
add
jbe
movsl
jg
pop
jmp
xchg
push
in
ja
int
in
shr
popa
dec
mov
mov
mov
add
jmp
ljmp
push
inc
add
ret
orl
pop
gs
adc
inc
cmp
scas
or
bound
mov
dec
mov
pop
cmp
das
mov
pusha
lahf
jle
shll
bound
inc
popa
ret
add
popa
jno
shl
ret
shll
ljmp
push
repnz
cmp
ret
jle
roll
mov
int
mov
sbb
int3
je
lret
xor
sbb
push
pop
in
jl
dec
lret
push
dec
cmp
rorb
xchg
jmp
pusha
xchg
cmc
inc
imul
mov
sti
adc
dec
sbb
push
cmp
gs
xor
shr
mov
cwtl
testl
sub
lods
inc
dec
pusha
es
mov
scas
inc
add
cmp
outsl
mov
push
sbb
stos
sbb
push
pop
mov
xorl
dec
sbb
jae
mov
stos
bound
setnp
sbb
subb
imul
sub
xor
cli
dec
cmp
sbb
xorb
aad
fldenv
mov
lock
adc
xor
lods
jp
pop
daa
subb
mov
mov
mov
ret
mov
loope
fcmovbe
cmpsl
adc
cmp
gs
xor
mov
roll
adc
push
pop
pop
out
dec
jle
loop
mov
mov
dec
and
pop
movsb
jle
push
push
roll
adcl
aaa
shr
stos
fbstp
sub
cmp
ljmp
out
xor
adc
sub
ret
test
sbb
dec
mov
mov
xor
push
xchg
fsts
stos
stc
mov
shrl
push
test
in
and
jl
iret
push
sub
mov
cs
lods
jbe,pn
adc
movsl
fucomp
pop
loope
icebp
loopne
or
shr
xchg
fsts
push
cmp
adc
inc
sbb
call
or
bound
sub
mov
aaa
sbb
inc
sub
imul
stos
test
mov
je
cmp
pop
sub
ljmp
cld
xor
adc
xor
xchg
mov
call
pop
or
mov
hlt
xor
dec
mov
es
mov
call
sbb
arpl
mov
int3
sbb
push
shl
ret
arpl
and
xchg
and
outsb
cmpsb
in
inc
hlt
dec
push
mov
and
xorl
or
push
rcrb
stos
add
xchg
addl
adc
and
sahf
jmp
push
lret
pop
mov
ds
clc
sub
xchg
jecxz
jl
lods
jecxz
jmp
add
stos
or
and
pusha
ret
mov
daa
popa
jmp
mov
add
xchg
xchg
cmpb
mov
xor
sbb
mov
mov
out
push
sbb
ror
sbb
insb
repz
sbb
ja
out
cwtl
push
mov
xor
push
jecxz
ds
jmp
cmp
jbe
jae
sub
lods
ficoml
sbb
sbb
add
rorl
movsl
jl
mov
or
xchg
cmp
ret
test
lods
mov
or
and
jmp
popa
in
xchg
rcl
repz
adc
hlt
inc
xor
lds
inc
ss
popa
clc
ja
mov
lcall
sbb
movsb
pop
je
jge
dec
imul
movsb
add
or
xchg
loop
ret
pop
in
popf
sbb
aam
sbb
jmp
hlt
xchg
push
jg
or
rol
xchg
pop
stc
xchg
data16
fisttpll
jbe
or
mov
orl
xchg
jmp
jno
cmc
push
cmp
lret
dec
shrb
inc
rcr
lret
xchg
mov
fs
sbb
pop
cmpsl
inc
pop
fnstsw
cmp
mov
cli
and
les
sub
pop
cli
fidivrl
sub
leave
das
into
rclb
popa
xchg
daa
push
dec
sub
lret
xchg
xor
jne
xchg
cld
dec
sti
mov
sbb
aas
stos
jle
fs
xor
push
pusha
in
out
roll
lahf
push
fstl
imul
mov
add
mov
pop
mov
addl
shlb
les
jecxz
jl
push
push
sbb
dec
jbe
mov
dec
pop
xchg
add
lea
in
add
pop
mov
call
fidivl
push
mov
sbb
add
fsubr
cltd
jns
push
sbb
push
loop
scas
test
loop
or
and
popa
push
call
mov
adc
lahf
jge
dec
outsl
roll
push
mov
push
sub
leave
add
sbb
or
shll
stos
and
cs
ljmp
jl
or
leave
mov
mov
mov
fwait
mov
jle,pt
lea
or
mov
adc
add
and
in
mov
pop
mov
mov
shll
pop
int3
or
adc
sub
add
shlb
adc
xor
mov
push
cmpsl
lahf
test
data16
jecxz
mov
test
pop
adc
sub
ss
fisubl
movsb
mov
lods
dec
jb
data16
fldl
mov
lods
in
in
popa
call
adc
cwtl
lcall
fsubl
xchg
fstpl
pushf
sbb
push
loop
fidivs
loop
jle
push
movsl
xchg
jns
je
sbb
mov
out
rorb
inc
out
dec
mov
pop
mov
pusha
sti
mov
push
ficoms
ljmp
arpl
push
lret
fsubrl
and
ret
dec
insb
cld
jp
lret
mov
cli
jae
ret
and
pop
out
sarl
and
cs
les
gs
mov
shl
xor
mov
testb
cmpsl
sub
movb
insb
cmp
sub
sbb
dec
rcrl
aas
call
mov
pop
fwait
jo
pop
int3
pop
setnp
call
out
add
adc
shll
sub
enter
rcll
add
stos
inc
xchg
rcl
leave
arpl
sbb
jbe
sbb
into
sub
data16
loop
jae
sub
mov
leave
adc
inc
add
mov
add
arpl
or
xor
xchg
adc
pushf
and
insl
sbb
or
test
pop
jge
int
ss
subb
cwtl
pop
lret
sub
sti
mov
in
jmp
out
mov
xchg
jmp
sbb
mov
cs
mov
fstpt
xlat
into
push
mov
xlat
shr
dec
daa
sub
sub
std
int3
lods
sbb
adcl
bound
inc
in
mov
or
mov
cmp
stos
sub
test
in
xor
clc
inc
cli
lcall
jmp
adc
int
or
ja
pop
adc
mov
xchg
push
jmp
mov
divb
xor
lds
loop
push
ret
xchg
iret
mov
add
xor
call
ja
lret
jl
scas
jo
call
fcoml
ds
cmpsb
hlt
or
push
pushf
loopne
dec
cmpsb
sub
out
ljmp
scas
imul
mov
loop
mov
scas
cmp
pop
pusha
sub
fimull
and
jl
push
jecxz
in
lock
movsl
inc
cmpl
int3
jmp
sarb
jp
mov
test
add
sub
jp
shll
dec
test
lret
loop
out
out
push
popa
cmp
ficomps
lret
pop
insb
sahf
lret
cli
lahf
mov
inc
xchg
or
rcrb
pop
inc
xlat
mov
pop
test
or
sahf
js
mov
and
into
push
pop
sub
cmpsl
adc
mov
shl
imul
jno
imul
sub
mov
pop
jae
or
imul
je
sub
arpl
jno
inc
xchg
ja
rol
mulb
dec
or
lds
or
in
out
cmp
ja
popa
pop
test
push
mov
xchg
jge
shlb
push
loop
addr16
int3
clc
in
xchg
cmp
shlb
iret
sub
out
fldcw
lods
mov
sub
sahf
enter
outsb
mov
jo
imul
jecxz
pop
repnz
mov
pusha
loop
jns
fsub
lods
sub
imul
jnp
sub
ljmpw
ret
push
fnsave
mov
mov
shr
mov
sbbl
out
mov
or
lret
sbb
pop
jp
lods
ret
lods
mov
cs
rorb
mov
in
push
jge
test
test
jp
jnp
ljmp
popf
xchg
adc
or
sub
add
add
int3
ljmp
jmp
insl
movsb
outsb
dec
xabort
ficompl
rcr
lods
ret
xchg
sub
out
or
push
inc
dec
int3
scas
sbb
xchg
cmp
cmpsl
push
lods
xchg
out
mov
jno
call
cmpsb
cmp
jo
dec
mov
mov
leave
repnz
push
mov
mov
pop
lods
mov
mov
lods
or
test
ret
or
jmp
cmp
in
and
push
int
sti
enter
cmc
rcl
sti
inc
jle
hlt
movsb
fldln2
pop
jmp
pop
cmpsb
mov
int3
or
xlat
push
in
mov
mov
jl
push
out
test
mov
dec
repnz
scas
lahf
fwait
outsb
lcall
stos
jecxz
mov
sar
or
dec
sub
add
sub
loop
ljmp
mov
scas
push
out
out
mov
arpl
sbb
das
shr
ret
iret
xchg
scas
xchg
jle
sbb
das
fs
dec
push
inc
int3
addb
mov
out
movsl
adc
cpuid
out
xchg
add
push
add
adc
test
fnstenv
test
xchg
mov
and
inc
jp
aas
or
cld
pop
into
aam
or
es
mov
jno
mov
jecxz
push
push
jmp
mov
mov
and
js
sub
pop
or
call
aaa
mov
fmul
mov
sbb
iret
stos
pop
insb
xchg
mov
negb
mov
adc
mov
pop
xchg
mov
xchg
dec
dec
imul
cmp
sub
loop
mov
xchg
call
adc
fidivrs
jo
cwtl
xorl
sub
stos
mov
cmp
icebp
cmp
std
add
push
sbb
push
jl
enter
mov
test
dec
mov
or
sbb
cmp
xchg
or
lods
cs
sub
jl
out
loope
xlat
je
cli
cmp
push
js
lret
jecxz
popa
lds
xor
cmpsb
push
lods
push
jmp
pop
dec
popf
andb
sbb
xor
adc
outsb
outsl
repz
out
cmpsb
adc
outsl
pop
cmpsb
push
cld
loop
pop
je
enter
mov
add
dec
fisttps
arpl
dec
rcll
test
lret
dec
adc
out
lret
push
ja
cs
inc
xlat
or
sbb
sub
mov
push
cmp
dec
sbb
les
lods
das
push
adc
out
ljmp
scas
dec
pop
dec
mov
jmp
inc
stos
xor
scas
lret
pop
sub
add
adc
cmpsb
shl
dec
jl
pop
test
ret
add
mov
mov
mov
or
int
jge
pop
sbb
out
mov
or
adcb
jmp
pop
mov
out
loop
inc
or
jmp
lcall
mov
scas
sub
or
loopne
sbb
or
dec
cld
movsb
popa
stos
cwtl
cmp
stos
pop
mov
out
fadd
xor
imul
test
and
mov
dec
ds
aaa
adc
enter
sbb
mov
xor
pop
enter
in
sti
mov
jns
xor
ret
gs
cwtl
outsl
push
push
xor
imul
aad
dec
or
lods
das
and
pop
push
sbbb
ljmp
xlat
jmp
xchg
rcrb
dec
mov
push
sti
lock
aam
aas
shll
cld
shll
mov
ret
loop
dec
lret
rcll
loopne
clc
push
adc
xchg
cs
adc
aam
sarb
jne
push
lahf
adc
rcll
adc
sbb
lret
insl
or
xlat
mov
cli
xchg
iret
dec
loopne
fcompl
mov
data16
mov
adc
rol
mov
loope
inc
nop
jle
ljmp
dec
cmpsb
xchg
or
cld
cbtw
push
jne
stc
ljmp
add
or
sub
add
icebp
mov
push
pop
jmp
xchg
cmp
in
jbe
aaa
cmp
push
out
sbb
mov
or
shr
cmp
nop
jg
or
jbe
xchg
dec
mov
cli
dec
fwait
xchg
ret
in
inc
mov
dec
bound
scas
daa
inc
dec
sti
cmp
jb
cmp
add
hlt
jp
jmp
lcall
in
ret
pop
inc
push
add
aad
aas
cli
jg
or
add
shl
or
sbb
sbb
decb
adc
pop
orl
cli
cmpsl
mov
jecxz
ret
into
scas
cmp
jns
sbb
mov
into
pusha
std
dec
into
xor
rol
jmp
add
scas
mov
decl
and
and
push
add
sbb
pop
dec
insl
lds
xchg
mov
adc
jae
stos
outsb
xchg
cmc
add
std
mov
ss
jecxz
add
xchg
ja
or
aam
sarb
sbb
xor
leave
xor
mov
movsl
mov
or
gs
aam
sbb
add
addl
imul
push
cld
pop
call
fsub
inc
add
iret
test
test
lds
sbb
lea
cld
lods
test
faddl
sub
inc
mov
shrl
stos
bound
xor
xlat
and
add
jb
decl
andb
test
sbbb
lret
int3
lock
adc
jne
mov
out
pop
arpl
fistl
orl
imul
xchg
rcrl
ret
iret
sbb
rcrb
push
ljmp
out
in
pop
fnstcw
push
push
leave
movsl
xor
outsb
mov
int3
daa
popf
xor
jmp
cmp
lea
sahf
test
outsl
movsb
scas
push
adc
push
out
ret
inc
ret
cs
adc
lods
fnsave
xor
inc
sub
adc
fwait
adc
mov
lret
cmp
pop
mov
push
movsb
inc
dec
sahf
movsb
orl
add
mov
xchg
mov
dec
xchg
cmpb
ret
add
sub
sub
mov
pop
pusha
push
lcall
add
fidivs
push
push
and
pusha
xchg
fwait
mov
lods
sbb
dec
inc
cmp
imul
sahf
ds
jp
sbb
mov
fcmove
sti
shl
cmp
iret
int3
sbb
cmpl
xchg
loop
ljmp
sarb
loop
sub
jmp
xor
xor
movsl
ret
push
sbb
test
cmpsb
test
adc
sub
jmp
dec
js
xor
bound
cmp
je
popa
add
cli
xor
cmp
out
sub
fsubr
pop
mov
paddb
out
add
pop
push
cli
add
ret
fidivrl
mov
ljmp
sub
or
lea
push
test
out
and
lods
jmp
sub
mov
mov
cmp
stc
xchg
sbbb
fwait
and
in
push
mov
loop
test
iret
out
dec
inc
pop
pop
in
adc
xor
not
sub
mov
cs
ret
push
mov
pusha
lret
xchg
adc
and
dec
or
pop
lods
repnz
sar
fsubl
sbb
mov
or
sti
pop
dec
arpl
push
mov
leave
jnp
jl
fmull
adc
adc
loop
sbb
and
into
add
and
lret
sub
push
or
xchg
sbbb
out
mov
scas
test
mov
xor
test
and
mov
dec
or
sbb
push
outsb
push
lahf
and
loop
call
jbe
stos
call
adcl
xor
in
fistps
sbb
in
fs
or
push
imull
pop
ds
lock
sbb
mov
mov
push
lods
adcl
and
dec
xor
in
sub
das
mov
sub
dec
and
sub
or
ret
or
stc
sbb
jle
cmp
add
mov
mov
cmpsb
push
imul
or
insl
mov
ret
and
dec
outsb
adc
adc
lods
test
jmp
add
addr16
pop
push
xor
mov
inc
outsl
in
pop
clc
push
inc
imul
sbb
xchg
push
leave
push
jp
mov
mov
adc
mov
fisubs
ljmp
icebp
and
mov
sub
repz
lret
int3
fimull
cmp
xor
pop
ss
loop
push
js
cli
pop
std
xchg
dec
subl
adc
xchg
mov
add
pop
or
leave
adc
cwtl
inc
dec
addr16
cmpb
int
cli
ficomps
scas
sub
and
loope
jge
dec
sbb
es
inc
int
jb
sbbl
mov
bound
mov
in
push
outsb
or
push
leave
jmp
into
jne
add
or
inc
fisubrl
cs
adc
popf
mov
jmp
sbb
jb
cmp
adc
fimull
mov
cmp
test
add
stos
sub
scas
or
jae
aam
xchg
push
rclb
loop
pop
data16
and
or
sbb
mov
mov
mov
mov
add
xor
lret
mov
ljmp
xor
outsl
subb
pop
imul
rorb
test
rol
arpl
add
add
addr16
stos
cli
into
mov
xor
mov
stos
push
dec
push
pop
lea
out
fwait
xor
jnp
mov
int3
jae
ret
notb
sub
mov
sbbl
push
push
lcall
aam
push
pop
inc
sbb
sti
loope
repnz
push
int3
dec
push
mov
cmp
std
xor
jne
in
sarb
testl
xor
lods
sub
les
jb
sub
adc
pop
mov
sub
ror
iret
or
test
xchg
cmp
push
negb
movsl
xchg
jecxz
sahf
jecxz
iret
mov
lret
outsl
push
arpl
xchg
leave
sub
dec
mov
int3
pop
out
sbb
rcrl
or
jmp
mov
test
or
lods
aam
jp
push
adc
shl
cmp
cmp
add
xchg
dec
aaa
adcl
dec
jle
inc
jae
xchg
xor
leave
and
fs
fsub
shrl
dec
in
dec
iret
adc
mov
push
xor
cs
insb
sbb
cmpsb
pop
mov
adc
push
lcall
out
les
lds
pusha
sub
xor
adc
cmp
sahf
test
movsb
or
adc
mov
cli
aam
add
out
jae
cmc
push
orl
ret
cli
dec
and
jo
mov
xchg
dec
and
inc
mov
mov
push
lret
repz
cli
test
jle
pop
or
mov
cwtl
dec
outsb
xchg
jmp
pop
push
popa
add
adc
inc
fmul
jge
stc
pop
push
repz
sub
imul
das
pushf
xchg
int
add
sbb
pop
pop
xchg
das
pop
pop
addl
sbb
xchg
pop
shrl
sub
std
je
enter
fwait
xor
mov
data16
in
mov
cltd
push
sbb
jmp
mov
rclb
adc
add
cli
cmpsb
loop
enter
xchg
sbb
scas
cmpl
pop
lods
shr
nop
jp
and
xor
fs
mov
mov
sbb
ja
xor
stos
out
mov
xor
cmp
sarb
in
or
xchg
xor
xchg
push
cmp
dec
jno
mov
arpl
jl
push
add
mov
out
std
sub
push
mov
cmp
int
pop
jns
cwtl
xorb
arpl
jg
inc
cmp
ljmp
mov
fdivl
gs
mov
jecxz
ret
aas
test
pushf
inc
test
mov
push
sub
fisttpll
jbe
movsl
or
lcall
xor
xchg
mov
sub
cmp
push
test
mov
cmpsb
add
inc
scas
in
push
and
jb
rcll
or
jp
bound
in
mov
mov
push
cmp
je
add
or
sbb
jbe
ja
call
and
mov
mov
cmpsb
or
add
nop
dec
push
cmp
inc
push
inc
je
pop
aad
add
popf
xorb
dec
inc
add
xor
or
aam
test
and
jecxz
test
mov
and
sbb
lea
aas
mov
addl
shlb
ss
dec
fmuls
enter
out
jb
xchg
inc
ds
sbb
jne
mov
jmp
dec
std
stos
in
inc
out
mov
imul
mov
jnp
sub
addl
aaa
fucomp
in
xorb
imul
mov
mov
imul
mov
mov
sub
gs
xchg
or
mov
rolb
inc
inc
or
aaa
jmp
cmc
test
ret
fwait
and
call
outsb
pop
pop
imul
mov
int3
je
cmpsb
imul
sarl
dec
mov
mov
mov
or
pop
outsb
sub
aad
jecxz
lock
int3
enter
push
das
push
lcall
mov
push
stos
dec
lret
out
mov
push
repnz
pop
push
add
and
test
fstps
or
cltd
pop
mov
add
dec
sbb
cmp
jns
mov
pop
xchg
insb
lea
jne
xchg
jmp
sbb
or
adc
mov
shlb
stos
int3
lea
push
adc
pop
in
test
jmp
sub
mov
add
call
rep
adc
loop
cmp
or
add
sub
out
or
stos
outsl
xchg
insb
adc
out
sub
or
adc
push
in
xchg
enter
sub
insl
mov
adc
sub
stos
insb
xchg
adc
dec
mov
imul
imul
or
das
cmp
adc
int3
arpl
mov
ret
leave
inc
mov
out
orb
in
or
test
arpl
test
push
imul
ret
stos
dec
test
leave
xchg
scas
call
enter
aas
mov
loop
dec
outsb
inc
imul
inc
int3
mov
enter
call
or
sub
add
dec
dec
int3
ret
dec
mov
push
in
scas
xchg
jecxz
iret
xchg
insl
push
mov
arpl
out
int3
add
ss
ret
out
xchg
mov
sub
dec
lods
or
xchg
arpl
or
pop
outsl
in
test
xlat
sub
ss
sub
pop
aas
mov
lahf
lcall
fmuls
push
mov
fwait
call
insl
sub
scas
sub
js
or
dec
lods
rolb
arpl
mov
loop
push
sbb
sub
mov
push
lahf
pop
or
in
fldt
scas
out
cmp
pop
sbb
imul
xlat
cmp
sahf
mov
mov
insb
or
movsb
call
adc
ljmp
pop
xchg
daa
lcall
adc
mov
cmp
es
stos
mov
lcall
mov
jbe,pn
js
mov
sub
sub
arpl
fidivs
jmp
andb
call
mov
scas
inc
ss
fadd
stos
inc
ret
leave
sbb
xchg
push
xchg
or
das
pop
inc
ljmp
sbb
adc
pop
hlt
in
xlat
sahf
jmp
sub
sbb
or
pop
push
repnz
test
cld
testb
ret
adc
or
xchg
and
jb
scas
lret
adc
repnz
ljmp
movsb
insl
pop
push
cli
arpl
rolb
inc
xor
or
pop
lret
jge
and
jo
mov
pop
popf
xor
scas
mov
sub
cmp
lods
sbb
add
scas
mov
jae
out
xchg
pop
arpl
push
cwtl
or
es
mov
jmp
test
xchg
push
sub
arpl
iret
jne
fwait
inc
test
test
movl
jns
dec
mov
mov
pop
arpl
pop
popf
or
xchg
movl
ja
dec
jnp
adc
inc
imulb
jmp
dec
mov
mov
aam
sbbl
jmp
mov
insl
addr16
movsl
fwait
xchg
aaa
repnz
push
mov
xlat
outsl
mov
pop
mov
xchg
add
add
fcompl
jb
cs
in
out
sub
ret
sbb
mov
inc
shll
push
bound
push
pop
mov
int3
adc
stos
ja
andb
mov
es
dec
loop
ds
out
or
leave
sub
add
mov
mov
ret
insb
add
sbb
add
out
ret
jp
xor
andb
loop
ds
sub
in
call
mov
or
dec
push
sbb
sub
in
jno
dec
sub
mov
out
dec
in
call
add
adc
ret
sbb
sub
scas
insl
loopne
xchg
sub
mov
dec
adc
inc
jb
add
sub
or
pop
test
ror
idivl
ds
rolb
and
dec
icebp
sub
cld
push
pop
out
or
lea
adc
arpl
in
pop
mov
stc
or
cmp
aam
xchg
arpl
cmp
std
psrad
adc
insl
inc
in
mov
aam
cmp
in
bound
sbbl
jle
xor
push
and
pop
push
sub
add
lods
test
scas
insb
in
lods
adc
adc
js
shlb
cmp
fwait
sub
xchg
aad
in
mov
push
js
lods
shll
lret
arpl
pushf
rclb
push
cmp
jp
push
jb
push
lods
repnz
push
das
out
pop
dec
push
loop
sub
lds
insb
mov
dec
imul
mov
mov
and
mov
subl
mov
and
xchg
mov
adc
repnz
dec
fcoms
imul
loop
mov
test
or
mov
setbe
shrl
mov
mov
faddp
jge
mov
push
dec
mov
sub
push
mov
jo
loop
or
or
jns,pn
mov
and
or
sbb
or
or
sub
ret
pop
shl
rorb
out
or
pushf
dec
mov
lds
mov
and
out
add
xor
dec
out
dec
inc
call
aam
fldt
dec
sub
enter
bound
in
loop
loop
cwtl
sub
or
or
iret
out
or
pushf
bound
mov
sbb
adc
jbe
fldcw
cmp
inc
insl
mov
mov
add
dec
mov
mov
cmp
add
sub
push
js
test
mov
xor
jbe
push
nop
daa
les
in
push
xchg
test
jmp
and
sahf
mov
addr16
mov
aad
inc
fmull
lods
sbb
ljmp
jle
fdivs
outsl
push
lods
adc
into
js
sub
push
into
loop
sbb
out
loop
adc
or
iret
test
imul
sar
mov
adc
or
adc
stos
cmp
jg
xor
les
sbb
call
mov
dec
sbb
push
sub
sub
jge
cwtl
mov
and
push
sub
mov
push
pusha
enter
lret
sti
movsb
lret
iret
arpl
push
push
jp
xchg
shlb
pop
into
fcmove
loop
lea
pusha
sbb
ficompl
push
mov
mov
or
dec
jg
aam
pop
jb
sarl
insb
pop
icebp
rorl
pop
mov
call
lods
outsl
or
cmpsb
enter
pusha
sarl
mov
leave
pop
out
or
mov
addr16
mov
xor
mov
or
mov
xor
adc
mov
xor
sub
js
sub
sbb
insb
sbb
leave
pop
arpl
imul
shrb
pop
jecxz
add
imul
adc
int3
sbb
outsl
pop
leave
or
or
xlat
or
xor
test
repz
aam
loop
out
shrl
push
mov
adc
fimull
test
repnz
sub
lds
mov
ljmp
sub
pop
leave
mov
add
or
notl
jbe
loopne
sub
loop
lods
pushf
add
pop
je
jns
sub
pushf
xor
dec
imul
rcll
dec
mov
popf
sbb
nop
mov
pop
fidivrl
dec
ret
in
in
inc
inc
jno
push
adc
mov
sahf
popf
inc
mov
pop
or
push
push
stos
sbb
mov
rcll
out
jmp
or
sbb
inc
repnz
and
je
push
int
pop
repnz
popf
jbe
ss
loop
or
out
push
into
sub
or
jo
shll
xlat
xor
imulb
add
sub
adc
aad
mov
sbb
mov
mov
jo
or
addr16
dec
lods
add
xor
jbe
push
push
jnp
mov
sbb
jl
push
imul
aaa
add
adc
or
cld
rorl
xor
into
mov
mov
jmp
mov
adc
dec
loop
cmpsb
outsb
rcr
xor
mov
lea
jp
mov
cmpsl
sbb
add
ret
adc
mov
mov
ud2
icebp
shrl
sar
jmp
xchg
jae
xorb
les
inc
dec
lds
adc
cmp
insb
jmp
dec
fdivrs
mulb
fcoml
jmp
out
in
sbbl
inc
das
push
xor
ljmp
lods
add
mov
pushf
mov
xchg
add
roll
pop
push
sbb
cmp
mov
mov
mov
fcomps
lea
repz
movsl
stos
push
iret
pop
push
jnp
or
into
add
scas
or
sbb
xor
fistpll
idivb
test
pop
sbb
and
scas
ljmp
cmp
mov
ljmp
lret
sub
cs
adc
mov
lea
rorl
out
and
mov
inc
xor
je
adcl
xchg
ret
dec
scas
inc
lea
nop
pusha
mov
jl
cmp
jecxz
pop
cmp
enter
sub
push
hlt
pop
out
push
mov
jle
lods
aam
inc
dec
or
lret
push
scas
scas
leave
imul
pop
xlat
mov
or
leave
ret
icebp
or
test
out
mov
rcrl
inc
hlt
fisubrs
in
add
push
movsl
add
ret
leave
roll
je
mov
icebp
in
push
mov
add
ficompl
lods
loop
rclb
cmc
arpl
ret
mov
mov
insl
pop
push
xchg
mov
scas
out
rcrl
add
stc
stos
fbld
mov
pop
int3
std
test
rolb
sbb
popa
pop
jo
sbb
fmull
movsl
scas
ljmp
dec
or
shr
cwtl
inc
lahf
rcrb
movsl
mov
add
or
xchg
stos
pop
fs
inc
je
cmp
add
int3
inc
pop
out
out
or
loop
push
mov
ljmp
rcl
adc
push
gs
stos
lods
fnstsw
int3
arpl
mov
add
decb
inc
orl
mov
ljmp
ja
mov
cs
jnp
ret
andb
pop
dec
int3
pop
test
test
aad
loopne
lds
xorb
aaa
cwtl
fbstp
in
stos
push
cmp
mov
lcall
sbb
jne
inc
stos
rolb
pop
test
pop
push
push
cwtl
out
xchg
mov
pop
jle
adc
or
push
push
mov
jp
call
out
sbb
xchg
lods
push
sbb
push
mov
fists
mov
xchg
movsb
insl
loop
testb
mov
inc
out
inc
nop
jb
fidivrl
cmp
mov
mov
int
or
lret
pop
mov
xor
xor
fidivrl
pop
in
or
xchg
bound
jmp
fwait
push
dec
xchg
pop
test
ret
test
sbb
mov
inc
cltd
jmp
data16
push
or
loopne
bound
xchg
adc
idivl
mov
mov
shll
xchg
fisubrs
inc
add
inc
pop
fadd
fidivl
or
sbb
add
enter
jb
cmp
sub
test
cwtl
lcall
pop
cmp
pop
idivl
mov
or
sub
mov
fsts
add
jae
insb
xchg
pushf
adc
loop
jno
add
add
in
sub
insb
lods
inc
mov
and
jge
mov
mov
ss
ljmp
scas
ret
mov
sahf
pop
ds
aam
pop
adc
mov
imul
ret
mov
ds
push
mov
dec
fmuls
ss
push
push
sbb
sbb
dec
ds
sbb
pop
jnp
xchg
inc
ljmp
push
cltd
mov
inc
lods
or
pop
jp
inc
pop
xchg
into
push
cmp
popf
xor
rcrl
mov
call
ljmpw
stos
jo
sub
int3
cs
pop
push
pminub
push
fnstenv
fsubrl
scas
push
sub
ljmp
lret
repz
sbb
jb
and
cmp
pusha
imul
stos
imull
mov
dec
cmp
aad
xor
xor
sub
inc
sub
mov
rorl
push
inc
inc
mov
or
gs
jno
xchg
cmp
stos
or
adc
or
sbb
rol
lods
cmp
or
push
sub
add
insl
stos
or
xor
sbb
ret
mov
gs
test
add
jmp
jmp
jns
mov
xchg
leave
inc
xor
stos
push
jg
stos
mov
jns
loop
xlat
insl
and
ja
sub
cmpsl
mov
pusha
xchg
scas
hlt
shl
cltd
push
jecxz
out
int3
xor
adc
pop
sbb
jno
mov
push
mov
stc
mov
jle
inc
lcall
andb
mov
sub
lock
fwait
ret
test
or
scas
inc
pop
adc
xor
xor
pop
add
in
shr
inc
stos
pop
adc
mov
pop
add
in
insl
xchg
in
call
lcall
addb
jo
jb
and
adc
pop
movsb
xchg
ja
repnz
push
and
arpl
or
inc
or
insl
sub
or
jmp
jecxz
stos
jno
cmp
mov
imul
inc
sub
int3
popf
pusha
scas
sub
loop
jb
sbb
sub
js
xchg
inc
mov
cmpsl
stos
test
push
cmp
cmp
sbb
pop
lods
ret
push
test
jnp
je
testl
mov
push
aam
sbb
paddsw
lea
stc
bound
and
push
lods
cmp
mov
imul
ret
xchg
sub
pusha
mov
xlat
add
das
mov
lar
or
pop
cmp
mov
xor
mov
or
pushf
xchg
sub
pop
cmp
sub
inc
sub
sbb
or
scas
hlt
mov
lahf
add
jno
or
ss
popa
jecxz
add
sbb
dec
dec
jmp
or
pushf
push
sbb
jmp
mov
outsl
jecxz
js
add
out
mov
repnz
ret
test
sbb
mov
mov
lods
add
jae
arpl
aam
xorb
cmp
sahf
add
dec
lds
lock
cltd
movsl
pop
xor
jae
jmp
xchg
xor
and
lret
inc
push
jno
mov
sub
cmp
fsubs
add
gs
sbb
into
pop
stos
ror
xor
lret
jmp
mov
add
mov
ret
xorl
inc
loop
dec
ljmp
inc
incb
rorl
ja
lcall
ret
mov
xor
xor
jo
pop
rcll
cmp
inc
enter
add
sub
inc
mov
and
popf
stos
ljmp
sub
dec
lods
cltd
xor
stos
inc
into
add
test
xlat
mov
xchg
cmp
cli
sub
sbb
popf
xchg
add
or
xor
lret
mov
dec
xchg
mov
xchg
xchg
add
aas
movsl
out
adc
cmp
pop
or
xchg
sbb
xchg
gs
sbb
stos
mov
pop
rsqrtps
add
out
fldt
and
cmp
ret
fldt
xchg
movsl
popf
out
mov
movsl
decb
adc
cmp
ret
popa
sti
aas
call
adc
xor
cmp
xchg
sbb
inc
cmp
nop
xchg
mov
pusha
and
cmp
mov
and
mov
repnz
in
jo
das
dec
in
lcall
and
fwait
xor
stos
adc
sahf
or
mov
js
and
mov
mov
aad
pusha
pushf
sub
cld
js
xor
pop
mov
shll
adc
sbb
jmp
xchg
lcall
jmp
sbb
enter
xchg
arpl
fbstp
stos
add
js
inc
mov
dec
xchg
or
jmp
repz
mov
mov
ljmp
in
scas
out
and
rcll
rcrl
mov
arpl
add
pop
mov
fistpl
mov
adc
sti
mov
mov
push
jb
lods
outsb
jp
orb
leave
sbb
rcll
xorb
jmp
ret
xor
add
lret
loop
push
aaa
jns
fcomps
test
jns
push
cld
dec
shrb
dec
jmp
inc
sbb
mov
pop
jo
jecxz
decl
icebp
sub
arpl
cmp
jmp
out
test
adc
sub
rorl
lcall
mov
push
adc
enter
stos
mov
das
mov
cmpb
and
mov
pop
subb
sarb
fidivl
call
adc
int
outsl
xchg
popl
fmuls
jno
pushf
orb
sbb
mov
mov
adc
in
cmc
push
lahf
andb
shll
pop
cld
inc
lret
rol
mov
into
xchg
inc
push
ret
fnstenv
lret
roll
int
lahf
mov
mov
or
pushf
lds
cwtl
xor
out
dec
add
pop
ja
lcall
xor
push
rcl
sahf
pop
shl
int
popf
addb
in
lcall
mov
addb
rcrl
jae
jmp
ficoml
lods
mov
sbb
jmp
or
xor
arpl
sbb
jb
xor
test
xlat
jge
mov
jmp
push
sti
jecxz
or
insl
adc
js
sbb
mov
fwait
jmp
ljmp
jmp
xor
xchg
and
dec
push
mov
lock
cmpsb
mov
jp
sbb
jmp
push
fdivl
sub
pushf
adc
jmp
mov
mov
xchg
jle
cmpsl
pop
xor
mov
lcall
test
add
jb
mov
push
ror
int
push
mov
dec
or
das
pop
jnp
mov
jae
mov
lods
out
jmp
or
in
or
addr16
stos
pop
rcll
subl
push
push
in
scas
mov
adc
rcll
sbb
jg
call
pop
inc
insb
fisubl
xchg
rorb
ret
dec
dec
les
clc
inc
stos
push
rorl
mov
sub
ljmp
or
leave
adc
data16
jg
xchg
xchg
sub
push
and
in
loope
jmp
int3
adc
inc
ljmp
cmp
stos
mov
mov
addr16
dec
mov
arpl
loopne
ficompl
xlat
ret
cmpsb
mov
les
popa
jle
mov
subl
xchg
push
adc
or
jp
lret
mov
ret
imul
adc
cmp
pop
shl
adc
jno
in
jnp
das
imull
pop
cli
mov
sbbl
out
push
add
push
mov
mov
data16
lahf
aad
out
lds
jmp
mov
fdivrs
push
fpatan
int
jae
fmull
jmp
lret
iret
xchg
mov
lret
repnz
mov
jle
sti
lods
mov
fucom
or
pop
es
push
lds
stos
shll
dec
into
pop
mov
es
arpl
push
lds
fsubl
repz
scas
imul
ljmp
mov
xchg
jl
ljmp
xchg
push
adc
jecxz
mov
insb
and
adc
loop
push
ljmp
jno
add
jecxz
jmp
mov
sbb
inc
mov
xchg
iret
shll
adc
lahf
jne
mov
lods
daa
lahf
jl
or
push
outsb
adc
mov
xchg
test
jmp
int
mov
cmp
mov
dec
inc
dec
int3
sarb
pop
fnstenv
mull
out
ss
test
test
push
push
insb
rcrl
loop
or
jl
hlt
ds
ljmp
or
imul
inc
bound
call
sbb
sti
push
shr
sbb
loop
sbb
pop
stos
jno
push
or
rclb
scas
pop
sbb
mov
addb
sarb
stos
mov
adc
aaa
push
xchg
sub
sub
sbb
scas
xchg
push
xorb
lret
cmp
or
adc
leave
in
mov
into
mov
adc
xchg
or
mov
in
into
out
cmp
imul
xchg
jmp
xchg
ljmp
xchg
shrb
pop
push
or
mov
mov
xchg
fcoms
cmpl
jecxz
nop
ret
adc
out
sbb
add
mov
adc
push
rcl
lods
cmp
xor
xchg
adc
and
addl
inc
les
cli
js
mov
sbb
jl
ret
pop
lds
dec
push
popa
int
adc
sub
add
cmp
jecxz
popf
stos
mov
inc
jmp
inc
or
daa
rcrl
xchg
shll
push
xchg
and
aaa
mov
test
scas
out
mov
jmp
fwait
add
imul
ljmp
ljmp
pushf
ljmp
jbe
xchg
add
in
js
jno
lods
xor
repnz
into
lods
mov
pop
scas
sub
fmull
rcrb
lcall
test
notl
xchg
popw
cmpb
sbb
faddp
jl
in
ficoml
movsl
push
xor
in
mov
loope
arpl
cmp
adc
test
insl
or
or
sub
pop
jge
push
adcb
int3
pop
and
orl
xchg
cmpsl
adc
sub
mov
fldpi
sbb
lcall
sbb
push
sub
add
add
sbb
dec
lods
push
xchg
mov
sbb
xor
and
das
push
mov
in
add
fcoms
sub
or
outsb
xor
sbb
leave
xchg
adc
popa
cmc
sbb
mov
ret
adc
stos
add
mov
mov
fisubrl
pop
icebp
mov
pop
mov
push
push
pop
call
rclb
mov
mov
add
cltd
movsb
lea
mov
stc
cmp
mov
ja
loopne
cli
inc
jae
inc
push
mov
repnz
test
xchg
fnstcw
inc
mov
call
out
inc
mov
sub
dec
popl
dec
or
pop
fs
addb
cmpsl
loope
outsb
mov
cmp
ret
cmp
andb
aam
xor
add
fiadds
or
jns
cld
cmp
lods
or
lods
jmp
ss
pop
into
mov
stos
sahf
lcall
add
cmp
rorl
xchg
lods
insb
loop
add
in
scas
pop
cltd
filds
dec
or
push
loop
push
enter
or
jmp
enter
and
ljmp
int
cmp
sbb
test
pop
dec
cmpsb
es
div
push
jp
inc
dec
mov
mov
call
out
sti
lea
pop
or
jp
out
stos
push
jb
nop
enter
out
sub
outsb
jecxz
es
jecxz
into
sbb
out
cs
gs
adc
cmp
inc
add
pop
add
in
mov
cmp
pop
jecxz
or
fcompl
push
sub
sub
jb
push
or
outsl
mov
dec
cld
popa
repz
shlb
bswap
shll
pop
mov
or
mov
cmp
les
jae
jle
xchg
mov
outsl
js
outsl
dec
mov
dec
inc
jae
and
push
sti
lea
imul
jae
call
inc
out
sbb
call
sbb
inc
mov
mov
sub
inc
cli
sbb
cmc
xchg
in
test
js
or
adc
jge
das
js
xor
in
mov
popa
ret
imul
out
popa
jbe
mov
mov
sub
repnz
cmc
dec
sbb
and
dec
jo
xor
call
xor
or
dec
stos
bnd
jae
mov
add
aaa
mov
sub
ljmp
rorb
mov
cmp
xchg
dec
shl
mov
lret
aaa
mov
call
jecxz
or
cmp
mov
xor
cmp
test
call
fimuls
ret
pop
jle
scas
cltd
mov
faddl
or
mov
jecxz
test
xor
aas
subsd
jmp
sub
sbb
pop
leave
adc
adc
lock
daa
pop
sub
jle
in
sub
popa
pushf
sub
fwait
dec
imul
fwait
loop
arpl
jecxz
jecxz
ljmp
in
sbb
xor
popf
pop
add
rolb
and
push
adc
jecxz
iret
dec
into
mov
mov
dec
pop
js
ret
adc
ss
sahf
pop
scas
dec
lahf
ss
cmpsl
fimull
rol
push
or
jnp
popa
fsubrs
iret
rcll
jne
popf
popa
fstpt
cmp
push
jmp
cmpsl
cmp
faddl
dec
pop
pop
repz
jo
ret
aad
jmp
inc
inc
ja
loop
inc
ss
lea
rolb
test
mov
sub
mov
jge
ret
lahf
jp
outsb
icebp
ret
xor
sbb
xchg
push
lcall
jae
shl
mov
pop
mov
shll
test
cli
mov
add
stos
stos
fldcw
or
mov
enter
mov
pop
cmpsl
arpl
jmp
je
cmp
roll
xor
or
aad
in
xor
add
fdivrs
ret
loop
loope
stos
push
arpl
lahf
push
mov
lcall
mov
jb
outsl
xchg
dec
lahf
leave
into
sub
clc
imul
xchg
in
dec
or
add
jmp
mov
jns
cwtl
jp
les
or
add
data16
test
push
xlat
in
adc
or
push
push
ss
push
or
cmp
aas
lods
cld
add
and
and
mov
jecxz
fucompp
sbb
xchg
jbe,pn
imul
jecxz
icebp
lret
in
and
rorb
ficompl
pop
shr
or
sbb
fmuls
mov
pushf
scas
push
loop
es
ret
jp
mov
and
ljmp
mov
push
mov
cmp
aad
outsl
imul
mov
jmp
ljmp
ljmp
roll
cmc
mov
lret
xchg
test
repnz
pop
orb
cmp
pop
push
xchg
push
cli
mov
push
stc
or
add
sbb
mov
mov
jb
outsl
jnp
lods
jb
sbb
loop
jno
lods
adc
in
mov
out
loop
push
test
mov
rolb
push
ds
cli
inc
add
clc
jmp
sub
stos
fstpl
or
mov
loop
xor
shrl
in
pop
jmp
in
sbb
dec
or
jmp
push
stos
lcall
mov
or
ret
adc
mov
xchg
pusha
gs
adc
cmp
repnz
cwtl
push
pushf
add
frstpm(287
stos
jecxz
jae
inc
ror
ror
jmp
pop
push
pushf
jg
data16
repz
negb
hlt
mov
rorl
jecxz
rolb
mov
xchg
mov
lods
sub
dec
ficoms
jae
add
cmp
addr16
in
add
in
popf
add
cmp
adc
xchg
xchg
ret
adc
or
inc
insl
xchg
mov
mov
or
jmp
pop
adc
fidivl
fists
or
imul
push
dec
or
pop
sbb
arpl
xchg
outsb
int3
loop
into
ja
cmc
scas
jl
jmp
out
adc
loop
jmp
sbb
rorb
lret
nop
stos
add
sbb
xor
gs
sbb
rorl
cld
bts
aaa
ret
sbb
inc
add
xchg
pusha
imul
pusha
xor
out
gs
pop
sbb
sub
mov
fadd
dec
pusha
or
push
mov
mov
mov
xchg
lcall
sub
or
hlt
or
fcomps
xchg
scas
fdivrl
jecxz
add
xchg
cmp
decb
sub
adc
jecxz
and
or
scas
iret
push
mov
mov
loop
sbb
jl
pop
fimull
push
and
aaa
mov
loop
sub
cld
xchg
sbb
aam
outsl
xchg
mov
loop
mov
sub
push
fiaddl
insl
rcll
sub
and
cld
add
or
icebp
dec
iret
jg
out
ljmp
jecxz
xchg
subl
leave
mul
xchg
fcompl
xchg
stos
lock
pop
cmpsl
xor
sahf
outsl
and
xor
mov
inc
test
scas
cmp
adc
or
outsb
inc
xchg
es
pop
fdivrl
xor
dec
out
mov
or
stos
cmp
test
aam
and
mov
push
jmp
push
enter
push
adc
add
adc
inc
fucomip
imul
jmp
ljmp
ljmp
mov
jnp
adc
aam
jo
xchg
mov
lods
subb
jnp
sbb
push
loope
in
push
mov
clc
sub
push
in
xchg
negl
cmpsb
test
fisttps
cmp
or
mov
fs
dec
jne
mov
mov
stos
fmuls
repnz
in
lret
scas
or
xchg
mov
sar
insb
xchg
pop
imul
loope
test
aad
mov
xchg
ljmp
cmp
add
enter
pop
sbb
xchg
call
jae
lret
sub
xchg
pushf
in
mov
or
push
daa
xchg
cmp
xor
ret
call
hlt
or
fisubrs
mov
test
sub
xor
cld
dec
repz
lret
add
lcall
pop
xchg
add
scas
cmp
lret
push
vpshaw
fcmovb
sbb
cld
cltd
xchg
stos
leave
ficoml
inc
inc
and
lcall
xchg
out
cmp
ret
xchg
cmovae
push
das
insb
push
hlt
dec
sti
sbb
xchg
xchg
push
dec
mov
sbb
test
cld
test
gs
xchg
xchg
call
pop
sbb
sbb
or
ret
scas
movsb
insb
dec
pop
jno
mov
sub
lods
xchg
scas
pop
sbb
or
lret
push
cld
iret
xchg
jnp
rcpps
or
dec
push
pushf
call
test
sbb
imul
sbbb
mov
sbb
stc
bound
shll
xchg
lret
mov
sbb
mov
add
lods
dec
push
cltd
xor
outsb
jnp
push
sub
fdivrl
dec
loope
jb
xchg
lret
lret
les
iret
jl
xor
lret
fildll
movsl
lods
inc
sbbl
sahf
insb
and
cltd
outsb
mov
cmpsl
ljmp
jo
ljmp
bnd
mov
ljmp
sbb
xor
push
imul
inc
xor
xchg
xchg
adc
fsubs
cltd
jp
pop
ret
cmp
push
and
enter
out
mov
lods
lret
mov
sbb
sub
cmc
es
ljmp
stos
repnz
ss
sbb
imull
insb
sbb
into
sub
or
add
mov
iret
shlb
mov
and
pop
jecxz
mov
fiadds
xor
dec
cmp
or
and
loop
jne
into
aaa
mov
push
jle
out
test
pusha
xor
iret
movsb
and
stos
adc
jge
es
into
mov
sub
lcall
ret
sbb
arpl
orb
test
icebp
clc
mov
inc
sub
aad
xorl
add
out
dec
pop
lcall
xchg
scas
fadd
out
xor
xorb
sbb
dec
push
sub
cs
addr16
mov
aas
lods
push
imul
push
stc
loop
inc
push
or
cs
outsb
mov
repnz
mov
inc
mov
ficoml
sub
das
cmpsb
mov
bound
ret
adc
xchg
shrb
dec
imulb
cltd
lret
rorb
or
ljmp
cs
cmpsb
in
adc
outsb
cld
in
dec
into
add
test
jg
or
loop
add
push
loop
mov
push
sbb
pop
and
mov
scas
cmp
sub
sbb
mov
inc
sbb
mov
cwtl
jecxz
push
outsl
in
jns
faddl
cltd
xor
sbb
pop
mov
and
bound
xor
xchg
xor
shl
inc
lods
lret
add
push
testl
outsb
or
push
lahf
jecxz
xchg
sub
subl
lea
insl
push
test
call
dec
mov
cwtl
push
movsl
rol
adc
adc
fidivs
dec
lcall
adc
mov
inc
orb
test
outsb
xor
ljmp
jp
mov
push
out
int3
loop
mov
sti
mov
xchg
test
je
sub
test
mov
and
push
dec
or
fmuls
pop
sbb
xchg
movsb
enter
and
les
add
lahf
jp
cmp
jmp
mov
js
insb
xor
cmc
lods
lea
xor
int
andb
ds
xorb
rorl
test
int
lea
or
add
dec
sub
std
add
jle
cld
addb
iret
sbb
xchg
movsl
fisubl
or
cmpsb
sub
shll
daa
mov
movsl
inc
push
mov
aad
loopne
addb
add
cld
mov
psrad
popf
xor
inc
pop
int3
in
push
orb
inc
ljmp
jb
movsb
mov
imul
push
lods
xor
fcmovb
inc
add
adc
mov
xor
inc
jae
aam
int3
pushf
in
mov
jg
sbb
inc
xchg
hlt
stos
ret
dec
in
lods
arpl
into
sub
repnz
int3
loop
out
rcll
sbb
inc
pop
jne
movsl
lods
movsl
mov
jbe
cwtl
rcrl
fisubl
jmp
mov
add
into
sti
inc
xchg
hlt
xchg
mov
dec
std
adcb
stos
or
xchg
mov
sub
loop
insl
push
mov
lcall
xchg
jmp
lret
out
mov
in
dec
jmp
ret
xchg
test
sub
mov
adc
push
mov
lcall
xor
fimuls
ljmp
lods
sbb
jns
xor
outsl
jb
stos
sbb
mov
push
add
adc
rolb
scas
jmp
fucompp
call
dec
imul
xor
rol
pop
in
push
pop
push
dec
arpl
push
outsl
inc
add
xorl
sub
mov
sub
orb
stos
jp
and
cmpsb
mov
sub
cs
and
sbb
lds
clc
fildl
push
in
pop
je
fistl
jbe
cmp
lea
ss
test
sub
movsb
adcb
or
mov
gs
cs
ret
mov
stc
jno
and
test
fcoms
mov
insb
jo
sub
pushf
mov
sbb
test
mov
push
pushf
mov
enter
sub
bound
add
add
cs
pop
mov
ret
jmp
out
push
inc
xor
adc
mov
testl
inc
std
xchg
xchg
scas
scas
rcl
lret
gs
dec
ret
cmpsb
adc
adc
scas
pop
push
push
stc
add
sub
clc
lret
loopne
adc
jle
inc
repnz
cmp
arpl
ret
inc
xchg
rorl
sbb
scas
movsb
outsb
scas
mov
add
addr16
arpl
test
push
inc
je
mov
call
fcmovb
fisttps
sbb
jp
pop
das
in
xchg
push
je
bound
cmp
les
jns
pop
jle
or
jb
cmp
add
pop
adc
cmp
fldlg2
inc
ja
push
and
addr16
push
xor
sub
push
push
xor
push
shlb
fdivl
jge
jmp
push
stos
lcall
ret
push
or
push
jbe
nop
xor
nop
aam
nop
or
lods
cmp
fwait
iret
aas
sti
inc
push
dec
cmp
dec
mov
jmp
lret
pop
xchg
mov
loope
xchg
pop
jns
or
mov
sub
add
and
mov
lock
imul
cmp
add
fiaddl
scas
call
xchg
sub
jmp
sbb
movsl
sbb
or
xlat
mov
in
cltd
test
mov
stos
mov
or
out
pop
rclb
mov
adc
icebp
or
cmp
jle
and
stos
das
shl
cmp
ror
jbe
dec
test
sahf
call
mov
mov
outsl
sbb
pop
call
ja
jg
addr16
and
sbb
xchg
push
call
ss
ds
es
and
sbb
xchg
fsubrp
or
popf
notb
out
or
dec
in
jo
icebp
notl
ja
lds
or
insb
adc
fldcw
mov
mov
arpl
jne
int3
mov
int
fsubrl
inc
xchg
ret
pushf
les
inc
movsl
add
fisubrl
and
fldcw
icebp
mov
ret
dec
sbb
sub
jae
dec
mov
dec
test
xchg
loope
shlb
pop
lret
scas
in
lret
cmpl
mov
cmp
out
bound
cmp
jb
das
lods
add
scas
mov
cmp
mov
xor
outsl
mov
lods
sub
or
adc
xor
jmp
sub
jl
mov
fidivl
jmp
inc
pushf
push
adc
arpl
or
in
outsb
xorb
sub
cli
jl
sbb
lcall
pop
sub
out
pop
mov
insb
pop
stos
in
cmp
enter
test
cmp
and
imulb
test
add
sub
cmp
sahf
fidivl
push
xchg
inc
xor
mov
sub
and
leave
mov
rcll
sbb
in
rorb
and
testb
cmp
mov
dec
stos
bound
dec
popa
fs
into
xchg
shl
sub
fsubrl
les
inc
gs
mov
cs
jno
add
ljmp
in
pop
lea
sub
test
adc
imul
mov
ret
in
ljmp
shrb
nop
ljmp
rcrl
and
inc
mov
push
jge
cli
cmpsl
dec
jae
fcmovbe
fstl
dec
and
cmp
and
push
sarb
stos
in
arpl
scas
mov
leave
shr
imul
popa
mov
dec
or
cmp
xor
push
and
daa
test
ljmp
pop
dec
or
add
mov
cs
dec
jnp
cmp
shl
popf
jbe
or
xor
pop
adc
xchg
cs
fsubr
pushl
adc
fsubl
adc
jp
pushf
mov
lret
aas
inc
stos
iret
adc
imul
cs
adc
add
iret
cmp
mov
sub
or
add
fildll
stos
inc
mov
and
outsl
ficomps
jl
ret
loope
movsb
mov
cs
fcomps
outsb
loop
data16
cli
popf
ljmp
mov
push
mov
out
loop
sbb
repnz
mov
or
pop
loop
dec
inc
sahf
lods
sub
xchg
sbb
lcall
mov
imul
dec
jl
inc
out
sbb
gs
jae
cmp
scas
arpl
fdivl
dec
add
hlt
cmp
sub
ljmp
addr16
out
lock
ja
mov
fnstcw
pop
mov
xor
shrb
jbe
repz
xor
int
ds
stos
test
mov
fistps
imul
mov
mov
loop
repnz
movntq
inc
outsb
cld
gs
adc
imul
js
and
lea
cs
rcl
push
in
sbb
lea
sub
jecxz
repz
and
sbb
cmp
mov
sar
add
dec
and
arpl
out
and
mov
mov
pusha
inc
jb
clc
stc
jg
cmp
and
push
xrelease
inc
shll
ret
xchg
jne
jp
mov
add
lcall
adc
cmovne
dec
sbb
aas
sbb
add
int
stos
inc
cmp
loopne
cld
xchg
sub
aad
or
sub
stos
cmp
push
xor
inc
imul
ficoml
and
sub
clc
jp
sub
loop
iret
insb
call
test
les
pop
push
jmp
push
in
xchg
repz
xchg
jmp
in
out
lods
or
pop
inc
jecxz
rcl
cmp
push
sbb
push
push
xchg
jmp
pop
int
mov
aas
xchg
mov
sub
or
jne
loop
mov
movb
inc
mov
push
popf
add
js
add
dec
aad
rorl
jne
xchg
call
scas
jns
faddp
insb
outsb
pop
aad
ja
mov
sbb
adc
in
insl
jge
mov
xor
mov
jmp
sbb
filds
or
inc
shrb
test
fidivrl
cli
jp
adc
jmp
mov
xchg
aas
and
out
int
in
cmpsb
shlb
in
push
test
enter
add
lret
shlb
fwait
pop
iret
xchg
cmp
mov
xlat
or
movsl
push
mov
jmp
arpl
ret
cmpsb
sahf
ljmp
mov
pop
push
dec
fsubl
pop
stos
cwtl
inc
xchg
sub
lods
or
mov
pop
cmpsl
xchg
mov
sub
roll
push
jbe
testb
and
jae
jmp
mov
popa
out
pop
ficompl
mov
enter
jp
fcmove
push
or
cs
push
loope
xchg
mov
lds
fcomps
movb
cmp
xor
dec
or
xor
push
shl
jg
adc
test
ljmp
rcrl
mov
aad
popf
push
pushf
pop
add
fcom
add
je
and
enter
and
inc
scas
mov
mov
mov
sbb
inc
fcomp
jge
sahf
sub
push
pop
rcrb
mov
xchg
inc
mov
adc
add
xlat
mov
xlat
jbe
and
add
fsubrs
inc
cmc
loop
push
inc
adc
int3
loop
jno
outsb
inc
sahf
adc
ds
cmp
mov
sbb
push
mov
fisubrl
lret
push
add
mov
dec
xchg
sbb
and
jbe
popa
push
cli
cmpsb
sbb
dec
out
lret
cmc
xor
ljmp
push
and
jno
int3
mov
rcr
fidivrs
jecxz
cmpsl
aaa
in
add
mov
lahf
fucomi
popa
dec
push
ja
jg
negb
push
cmpsb
xchg
movsl
pop
pushf
xchg
add
in
cwtl
xchg
or
mov
shl
scas
sbb
inc
mov
faddp
jecxz
mov
shll
ret
jecxz
int
shll
bound
lahf
mov
pop
mov
xchg
add
stos
in
xlat
inc
sbb
in
js
and
adc
push
add
pop
mov
mov
arpl
sbb
mov
fistpll
in
add
int
pusha
mov
ds
js
mov
pop
mov
push
aad
pop
push
in
arpl
clc
sahf
in
sar
inc
push
sbb
xchg
repz
xchg
sub
xchg
fldcw
dec
dec
pushf
or
cld
iret
jo
or
shl
inc
jns
jns
jp
dec
xorl
sti
stos
mov
sbb
mov
ljmp
push
dec
int3
xor
bnd
cmp
inc
xor
cli
loop
add
cmp
xchg
test
lods
int3
add
cmp
imul
or
sbb
popf
or
insl
mov
pop
cmp
stos
or
or
sbb
dec
loop
jae
mov
push
mov
in
inc
inc
mov
das
int3
in
int
push
xchg
in
dec
jecxz
lods
adcb
add
xchg
dec
mov
loopne
imul
lret
sbb
pop
dec
cmc
in
mov
push
push
adc
rep
in
or
mov
cmp
mov
in
sbb
or
mov
add
popf
xchg
pop
cli
jg
push
fwait
iret
loop
mov
int
lcall
xchg
sub
fimull
sub
or
in
xor
in
test
add
mov
out
mov
test
inc
icebp
mov
adc
xor
mov
cmc
push
push
dec
mov
and
push
test
stos
loop
adcb
mov
loop
and
popf
pop
jo
mov
enter
ret
add
push
or
js
insl
das
out
or
sbb
test
imulb
push
test
lret
clc
adc
dec
inc
call
mov
insl
leave
sub
mov
insl
ret
push
ret
in
test
adc
xor
es
scas
loope
insl
call
xchg
movsb
popf
aad
sbb
dec
loope
repnz
stos
sahf
test
xor
pop
sub
mov
sti
lea
pop
cs
int3
aad
into
movsb
enter
jnp
sbb
and
movsb
mov
repnz
push
leave
fldcw
push
sub
cli
scas
call
repnz
dec
mov
dec
mov
xchg
push
shl
das
rcrb
movsl
pop
dec
in
sub
movsl
mov
int3
jge
mov
sub
jo
orb
outsb
inc
cs
push
ljmp
xchg
pusha
and
cmp
js
scas
mov
insl
insl
lahf
insl
add
mov
into
adc
iret
jl
imul
mov
enter
pop
loop
push
imul
jp
outsl
pop
addl
lock
das
jmp
scas
ss
mov
jno
sbb
sbb
ret
shll
shl
cmp
mov
push
xchg
ficoml
mov
mov
lcall
dec
jnp
daa
in
cmp
xchg
sbb
int3
or
sub
sbb
test
jle
dec
xchg
mov
aam
pop
cmp
cld
loope
lea
daa
pop
or
hlt
mov
loop
adc
sbb
xchg
jnp
xor
add
dec
test
pushf
test
jg
sub
out
push
mov
lods
in
out
test
loop,pt
arpl
adc
arpl
leave
mov
arpl
aaa
iret
jmp
loop
xlat
sbb
ljmp
out
ret
scas
pop
xchg
pop
loop
lahf
adc
mov
mov
and
mov
mov
pushf
inc
imul
mov
adc
sbb
adc
or
dec
xchg
dec
or
les
jb
add
mov
imul
jp
fadds
in
aam
cmp
movsb
dec
testl
mov
xchg
dec
pop
jle
stos
mov
out
loop
mov
and
sbb
int3
insb
and
push
cmp
lea
insb
fisubrl
int
or
scas
insb
cs
enter
clc
imul
push
ljmp
mov
ljmp
jmp
stos
fsubrs
cmp
loop
scas
lods
imul
push
ret
dec
pop
dec
dec
pop
or
ljmp
arpl
ljmp
jbe
or
into
test
js
outsl
ljmp
insl
stos
lret
mov
std
or
cmp
xchg
stc
jbe
add
dec
outsb
test
mov
jecxz
mov
in
jle
and
adc
xchg
and
lods
cli
leave
stos
lcall
push
jle
or
or
orb
jle
mov
sbb
orl
cs
scas
push
sub
push
fcoms
dec
mov
in
or
push
outsl
or
dec
ljmp
mov
daa
repnz
ret
mov
sub
push
inc
pop
sbb
in
lahf
jecxz
imul
je
lcall
pop
ss
or
xor
push
shr
push
stos
shll
add
in
inc
xchg
adc
adc
adc
test
addb
jge
std
scas
xchg
push
xor
and
sbb
lea
ljmp
ret
sub
subl
int3
xchg
insl
add
lea
aas
stc
fs
aas
push
orb
loop
dec
dec
ret
push
xchg
dec
repz
push
lahf
imul
or
xor
ljmp
push
insb
sub
fsubrl
out
or
sub
prefetchw
call
test
outsb
lock
test
clc
cs
xchg
push
lods
ljmp
xchg
cmp
dec
out
push
jle
lds
mov
mov
rorb
das
dec
adc
sbb
int3
int3
jge
add
shrb
xor
jns
push
add
outsb
inc
insl
or
cld
push
push
xchg
mov
dec
in
inc
cmp
xchg
cli
push
aas
add
adc
pop
in
aad
and
mov
mov
push
scas
mov
xchg
rorb
and
or
ss
in
push
xchg
push
sti
xchg
adc
and
sbb
leave
push
add
lock
xchg
icebp
aaa
shrb
sbb
scas
or
push
add
push
add
ss
test
ret
xchg
sub
mov
jmp
into
jo
sub
imul
stos
mov
in
push
imul
das
imul
fwait
dec
mov
mov
rolb
dec
adc
push
jl
mov
mov
sti
cltd
cmp
xchg
and
or
jmp
ljmpw
add
call
cmp
push
imul
popa
xchg
scas
in
leave
cmp
stos
out
ret
or
pop
jne
push
add
xor
adc
add
out
jmp
pop
add
fdivrl
mov
xchg
mov
ss
sub
adc
fisttpl
int3
ljmp
xchg
or
add
outsl
xchg
leave
jnp
mov
mov
aaa
aad
int3
and
pop
cs
ds
pushf
scas
mov
fsubr
mov
xchg
push
jle
lea
adc
rcrb
push
or
dec
enter
das
leave
mov
dec
loope
test
stos
ret
iret
sub
cmp
aaa
pop
adc
or
add
aam
scas
hlt
adc
popf
push
movsl
inc
adc
dec
pushf
jno
or
jo
xchg
cmp
loop
jne
mov
scas
pop
push
das
in
lods
test
push
lock
mov
and
jecxz
adc
insb
sbb
or
fsubr
and
dec
cwtl
sub
add
lods
ljmp
in
lods
xor
out
pop
insl
aad
xchg
loop
and
into
movsb
shrb
test
dec
adc
pop
mov
cld
stos
add
rolb
lcall
jbe
mov
adc
or
imul
jo
lcall
mov
sbb
addr16
shrb
cld
pop
push
jne
bound
adc
push
call
mov
mov
pop
mov
lcall
addr16
std
sub
lods
mov
jmp
stos
or
pop
mov
xchg
mov
sub
xlat
jo
sbb
mov
idiv
xchg
inc
xor
aaa
and
lds
adc
adc
mov
jl
fdivr
js
out
icebp
jl
scas
jmp
mov
mov
jp
mov
mov
sti
xlat
idivb
jae
pop
cmp
pop
xchg
call
sbb
dec
sub
xor
jecxz
jg
mov
adc
js
in
or
imul
loop
adc
leave
cmp
jle
mov
shrb
mov
addr16
outsb
sub
push
sub
jae
clc
sub
mov
test
aaa
rcrb
cmp
jmp
iret
pop
decl
mov
jmp
adc
xlat
cmp
dec
out
fdivrs
pop
mov
daa
mov
lret
or
into
mov
in
test
adc
push
inc
and
mov
cli
aas
pop
xchg
jo
pop
ljmp
fmulp
sub
and
sti
sub
pop
int
cld
or
jmp
dec
popf
sahf
ja
sbb
stc
or
xchg
adc
gs
cs
imul
sbb
or
jns
mov
sahf
fwait
dec
movsl
xchg
fldl
repnz
les
jnp
inc
into
inc
repz
mov
dec
pushf
sbb
pop
aaa
mov
jge
fisubs
dec
pushf
ret
push
push
cmp
pop
xor
sub
in
inc
cmpsb
stc
push
arpl
jmp
stc
les
xor
mov
inc
ret
lock
jecxz
repnz
fmuls
inc
add
outsl
out
add
mov
pop
jno
sub
sub
aad
pop
aas
fbstp
out
insl
cmpsl
je
dec
mov
mulb
dec
xchg
pop
lret
or
aam
jbe
mov
popf
lret
cmp
sub
sahf
adc
xchg
inc
jmp
scas
mov
jge
fdivl
popf
sbb
rolb
mov
push
lahf
cmc
cmp
imul
mov
push
and
push
ljmp
or
out
push
lcall
xchg
sahf
pushf
xlat
inc
cmp
mov
add
xor
pop
or
nop
pushf
sub
sub
outsb
lods
mov
repnz
jno
push
add
out
and
in
mov
mov
insb
push
cmpsb
mov
jmp
testb
add
sbb
das
loope
mov
push
pop
mov
fmull
adc
pop
cmp
inc
jecxz
insl
or
push
add
mov
dec
push
scas
aas
pop
mov
rcr
jne
pusha
mov
add
bound
push
inc
cltd
or
sub
cmp
in
in
pop
jae
jle
mov
mov
adc
imul
pop
nop
ret
or
lea
ljmp
clc
scas
dec
ret
dec
sahf
dec
jle
lods
mov
sub
xor
das
jae
pop
fists
mov
div
insl
pop
inc
or
repz
out
and
xchg
popl
in
jnp
gs
push
cmp
loopne
inc
idivl
adc
jmp
add
jmp
call
pusha
lea
popf
fs
adc
fwait
sub
ss
fs
lock
lods
dec
push
test
pop
pop
rcl
sub
scas
push
dec
aaa
out
sub
pop
ret
push
cli
pop
test
dec
call
loop
mov
sub
jp
adc
xchg
sar
lods
pop
rol
dec
sti
push
pavgb
hlt
mov
jno
mov
xchg
add
push
adc
out
pop
or
shr
inc
pop
lahf
scas
andb
jae
jle
fcmove
in
xchg
fwait
adc
lcall
push
inc
movb
inc
add
lcall
fmuls
fucomi
push
adc
mov
pop
jp
xchg
sbb
aas
in
and
stc
daa
adc
loop
mov
lods
dec
mov
lods
lods
jmp
sub
dec
aam
popf
mov
jecxz
aas
sbb
cmpsb
fxch
out
pop
bound
imul
pop
into
repz
ret
fucomi
ss
xchg
ljmp
adc
xor
mov
mov
out
cwtl
jb
or
xchg
mov
call
adc
mov
dec
xlat
lock
cld
aam
jne
js
cmp
sub
setge
jp
or
lods
lea
cmp
sbb
sub
movsb
sahf
iret
lret
or
and
repz
dec
push
xchg
test
mov
jmp
pop
in
dec
sbb
jnp
pop
push
dec
sub
xlat
sahf
fsub
sub
out
mov
xor
or
pop
jge
push
jecxz
fdivrl
insl
xchg
test
insb
mov
mov
dec
inc
cmp
mov
ljmp
mov
xchg
xchg
loop
dec
sbb
cmpsl
xchg
mov
push
lods
loop
inc
or
lret
arpl
mov
mov
insb
int3
lods
sbb
xchg
jg
cli
sub
aam
les
sub
xor
pop
cli
mov
arpl
pusha
cld
xor
imull
pop
lea
loop
mov
fldt
mov
and
ljmp
mov
xchg
in
cld
add
ret
int3
mov
psubw
lods
loop
mov
push
insb
jnp
subb
testb
mov
dec
aam
add
jnp
xchg
jo
test
fimull
jge
xchg
sub
outsl
sub
mov
lret
xchg
and
inc
or
ja
popa
mov
adc
cmp
movsl
sub
jnp
scas
mov
mov
push
pop
mov
adc
sub
pop
enter
mov
mov
sub
mov
pop
in
sbb
pop
cmp
jne
inc
sbb
mov
and
xor
je
lret
jecxz
mov
call
jmp
inc
iret
rolb
sbb
xorl
jmp
mov
mov
sub
dec
or
mov
or
jno
jl
stos
add
shrd
inc
push
mov
cmp
bound
imul
mov
pushl
adc
push
pop
repnz
mov
sbb
push
lods
je
sti
dec
pop
or
sub
add
repz
mov
int3
div
movsb
sbbl
stos
mov
add
mov
cmpsb
ss
sarb
inc
fs
add
xchg
pop
cmpsb
lahf
xor
out
fcmovb
sub
outsl
mov
sub
push
in
imul
ja
imul
fists
scas
loop
mov
sbb
lret
cmp
xchg
or
gs
sub
mov
pushf
sbb
outsb
int3
or
ss
stc
cmp
sub
sti
sub
je
frstor
call
loop
aad
sbb
es
cmp
push
dec
es
mov
subb
ret
mov
das
addr16
sub
in
inc
inc
mov
xor
push
lods
push
cld
pop
add
pushf
es
jge
imul
das
mov
fwait
ret
loopne
test
push
imul
dec
insl
ds
hlt
in
ret
sub
les
stos
and
loop
icebp
mov
mov
add
lcall
or
js
adc
data16
inc
inc
lret
or
mov
push
inc
mov
push
jbe,pn
imull
addr16
adc
outsl
xchg
push
push
out
dec
mov
mov
xchg
aas
pop
adc
pop
outsb
or
icebp
jmp
xor
fisubl
xchg
jb
pop
mov
divl
imull
cmp
lret
loop
addr16
negl
test
ret
out
movsb
xchg
dec
int3
cmp
dec
scas
incb
fwait
sarb
fisubrs
shr
adc
rcl
pop
or
loop
cli
add
ret
mov
push
shl
js
or
int
xchg
pop
test
bound
testb
sub
movsl
xchg
adc
xchg
rcrb
cwtl
insl
mov
rol
fucomp
rorl
sbb
je
jl
xor
push
pop
pop
out
fnsave
xorb
push
fidivrs
leave
out
lcall
loop
out
divb
jp
lea
and
icebp
fwait
sub
mov
dec
rcr
or
stos
cmp
pop
sub
repnz
inc
sbb
adc
stos
xor
sub
jle
pop
dec
pop
or
sub
sbb
nop
jmp
into
pop
xchg
leave
adc
xchg
in
loop
cmp
insl
add
addb
rcrb
scas
xchg
data16
sub
jp
pop
fucom
dec
in
mov
adc
and
jmp
test
lods
inc
cli
jmp
arpl
cltd
movsl
outsb
repz
lahf
inc
push
mov
movsl
das
add
sub
or
lods
add
ja
scas
or
adc
or
jb
cmp
xchg
popf
jo
cmp
stos
add
testb
add
scas
and
jne
lahf
aad
inc
jmp
sbb
jb
pushf
jle
jl
rolb
jbe
and
sub
sbb
test
xchg
sahf
jmp
mov
sub
jb
cmp
in
rcrl
sub
xchg
loop
mov
shlb
fidivl
out
popa
xchg
scas
pop
pop
or
int3
cmp
test
adc
sahf
out
into
rcl
shrb
test
dec
fld
jg
out
lret
pop
not
orl
addr16
cmpsb
mov
fwait
adc
adc
fmull
jmp
imul
fcomps
or
inc
outsb
ljmp
mov
sub
mov
jae
jecxz
xor
sbb
hlt
mov
sub
pop
lock
adcb
add
cwtl
push
mov
pop
call
scas
pop
mov
test
mov
push
jmp
jb
sbb
lret
scas
sub
cli
jb
shrl
add
sbb
cwtl
leave
mov
jp
mov
or
add
in
push
lret
sbb
loop
push
pop
mov
iret
fmull
call
xor
popa
adc
shll
add
orl
aaa
push
jg
or
add
jmp
cmp
push
fs
bound
mov
add
in
dec
push
les
add
jmp
daa
mov
add
xor
mov
dec
xchg
xor
and
cwtl
adc
aaa
imul
mov
inc
ror
inc
push
lods
mov
mov
lea
cli
mov
adc
pop
push
lods
pushf
xchg
sbb
imul
rcrl
lods
xor
adc
in
cmp
rorb
and
xor
loop
pop
ret
subb
pop
jnp
xor
das
mov
lcall
mov
cmpsl
sbb
popa
or
sbb
xchg
cs
shl
dec
and
ret
push
and
lret
loop
dec
push
aas
lret
mov
mov
inc
pop
sub
pop
std
out
aas
xor
sahf
add
lea
jne
sbb
pushf
mov
lcall
jmp
pop
xchg
jp
fs
xchg
jb
jle
add
cmp
pop
les
into
das
mov
ss
out
insl
adc
dec
mov
out
mov
mov
int
jae
or
pop
outsl
jg
scas
push
inc
mov
jge
aad
loop
std
insb
aad
dec
pop
adc
push
sub
jno
pop
adc
xchg
adc
xchg
stos
lret
call
cmp
pop
shr
scas
sub
xchg
xor
pop
fsubl
loop
testl
lret
xlat
jb
out
push
imul
xchg
pop
iret
inc
add
mov
or
pop
inc
aad
mov
outsl
jmp
pop
push
sbb
dec
inc
or
sbb
mov
ret
pop
dec
inc
insl
pop
xor
pusha
clc
add
data16
aad
sub
imul
and
push
dec
das
dec
push
cmpsl
lods
in
mov
inc
mov
push
cwtl
xor
sarl
inc
gs
dec
orb
inc
aas
mov
fiadds
xor
mov
hlt
loope
scas
shlb
mov
add
push
cmc
push
cli
push
ss
data16
push
inc
cmp
in
add
inc
mov
inc
cwtl
cmp
pop
and
inc
mov
stos
pop
dec
leave
outsb
add
scas
out
bound
rcll
cwtl
andb
cld
ljmp
inc
in
cmp
fcmovbe
add
pop
imul
iret
push
xchg
inc
aaa
pop
add
cmp
xchg
push
pop
push
jnp
lret
sti
inc
notb
bound
repnz
call
pop
imul
add
mov
adc
or
aaa
stos
jmp
jle
push
decb
sbb
or
cld
negl
dec
mov
shll
push
int3
pop
push
sub
mov
pusha
jmp
cli
popf
inc
mul
or
mov
in
mov
cli
mov
and
sbb
mov
ds
xchg
ret
in
or
xor
xchg
mov
divl
cmp
movsb
arpl
jno
xchg
push
jb
clc
mov
loop
ds
outsl
les
push
mov
mov
push
adc
mov
add
inc
push
inc
mov
adc
or
sub
fstpt
dec
out
mov
lea
cmpb
xchg
jmp
jmp
mov
adc
cmp
xor
mov
sbb
in
dec
jbe
pushf
ljmp
push
out
loope
add
aad
in
fcomps
xor
outsl
and
mov
cmp
jp
scas
repz
jb
add
aad
inc
loopne
movsb
inc
dec
xorb
inc
xchg
inc
shll
fs
mov
cmc
bound
xor
jnp
std
cmc
loop
out
mov
aaa
sbb
flds
mov
xchg
mov
sub
incl
mov
gs
sti
dec
call
adc
mov
ret
out
and
cmpsb
fidivrl
cmp
push
dec
dec
imul
push
or
mov
sub
dec
movsl
nop
scas
mov
jae
mov
cmp
insl
sbb
jae
fnstsw
fidivrs
cmp
mov
pop
lea
lret
mov
les
adc
push
es
sub
xchg
pop
cmp
sub
push
stos
sarl
ret
and
rolb
cltd
pop
and
lods
or
xlat
cmc
jmp
mov
xchg
loope
lahf
js
cld
mov
rorl
fcoms
cld
pop
xor
cwtl
adc
dec
or
and
addr16
inc
sbb
orb
rcr
jmp
or
mov
or
enter
scas
fstpt
xor
mov
nop
popa
shlb
mov
test
mov
inc
shlb
inc
hlt
shrb
sarl
xlat
cmpsb
xchg
movsb
push
dec
sub
aaa
jne
je
xor
ret
fisubrs
xor
adc
push
mov
out
fistl
cmp
stos
fidivl
jecxz
stos
sahf
das
pop
add
fisubrs
and
cmp
add
push
mov
add
dec
stos
sbbl
dec
gs
ss
lcall
loop
das
les
cmpsl
xchg
imul
sbb
aaa
nopl
orl
rcrl
inc
repz
sub
pop
gs
or
stos
mov
cmp
or
mov
adc
mov
mov
sbb
xchg
add
call
push
adc
sysret
and
or
mov
dec
sbb
andl
pop
daa
mov
xor
jno
jl
arpl
aas
into
sub
addr16
mov
fiaddl
aaa
jge
shlb
pcmpeqw
sarb
mov
push
pop
sub
call
xchg
fdivp
mov
sbb
daa
iret
push
mov
mov
pushf
gs
out
aam
sbbb
mov
xor
mov
adc
push
aas
icebp
and
push
into
fadd
into
inc
fdiv
leave
cmp
shll
testl
jb
je
mov
pushf
sbb
icebp
xor
push
push
scas
inc
orl
mov
aam
bound
sbb
movsb
xchg
sbb
or
scas
test
push
and
dec
stos
decl
scas
movlps
dec
sbb
stos
adc
and
cmp
add
xor
or
out
jg
test
sbb
sti
int
fistl
or
inc
jmp
mov
fistpl
cld
mov
add
add
adc
sbb
in
int3
popa
dec
push
dec
out
jmp
push
and
mov
xlat
pop
stos
mov
mov
mov
in
outsb
js
ss
mov
or
pushf
mov
sub
mov
in
test
roll
jmp
mov
dec
out
dec
mov
push
cmp
inc
xor
gs
daa
add
inc
lock
fisubs
out
push
andl
out
mov
in
icebp
out
lahf
push
fnstsw
mov
sbb
xor
scas
sbb
pop
addr16
out
or
aas
outsl
outsb
mov
mov
addl
mov
xor
push
xchg
pop
push
xor
add
lahf
pushf
nop
mov
enter
fdivrl
xchg
mov
js
mov
pop
sub
adc
add
loop
ret
rcrb
in
mov
rol
jo
dec
pop
xchg
int
xor
lret
call
ficompl
shr
aad
push
mov
and
sahf
and
shl
jmp
outsl
or
add
fidivrl
ror
or
scas
cwtl
jmp
push
and
jns
and
mov
or
push
lods
mov
add
sub
mov
imul
xchg
ficoms
mov
mov
dec
sbb
or
popf
cwtl
scas
enter
mov
adc
jb
or
inc
sub
fcompl
cld
mov
aas
lret
imulb
dec
insb
xor
mov
repz
aas
imul
lahf
fnsave
fs
mov
outsl
rcll
movsl
and
ret
out
xchg
mov
jg
sbb
push
mov
or
sbbb
mov
sub
repnz
mov
das
jl
ret
push
scas
or
hlt
int3
adc
arpl
insl
add
scas
pop
dec
in
push
mov
mov
in
in
add
push
push
pop
jge
push
outsl
cmp
cmp
cmp
mov
orb
ret
cmp
xor
pop
loop
adc
test
int3
mov
push
mov
push
cmp
inc
mov
test
mov
inc
cmp
shrb
dec
pop
jno
int
sbb
inc
add
rcl
sar
cmpb
adc
push
or
sbb
xor
sbb
roll
insl
fists
cmpsb
adc
movsb
xchg
add
call
xor
cltd
jl
stos
cmp
xor
into
add
jp
testl
mov
push
fwait
insb
gs
push
sarb
stc
loope
or
stos
jmp
data16
std
ret
stos
inc
es
lahf
xor
cli
mov
testb
or
dec
mov
push
test
xorb
mov
push
dec
ss
adc
cmpsl
dec
das
mul
loop
cltd
inc
ss
stos
inc
inc
or
inc
fidivs
addr16
mov
inc
inc
pushf
int3
or
insl
push
orb
or
push
pxor
mov
xor
and
jbe
push
ja
push
js
aam
cmp
inc
in
mov
ret
loop
aam
dec
adc
sbb
shr
cmp
subb
sahf
and
mov
xor
mov
jbe
test
sub
pop
jp
mov
mov
sub
sub
or
sbb
jle
add
loopne
stos
orl
outsb
test
xchg
out
xor
addr16
test
push
stos
push
inc
sbb
inc
xchg
test
mov
movsl
add
cld
lods
and
mov
daa
pop
adc
jo
mov
imul
dec
mov
into
movsl
mov
into
or
cmp
or
mov
loop
test
or
jmp
pop
or
ljmp
jle
xchg
push
adc
mov
lock
icebp
ret
lea
add
adc
testb
aam
addr16
pop
jmp
pop
enter
xor
outsb
add
push
popa
aad
mov
ja
sub
jp
std
xchg
pop
cmp
sbb
adcl
jge
xchg
dec
stos
adc
rcll
shr
or
or
les
fsincos
pop
aam
push
addr16
sub
cld
mov
inc
orl
jmp
sub
loopne
loop
rolb
add
in
jbe
push
inc
push
stos
leave
rcrl
bound
and
lea
push
or
sbb
out
mov
jge
mov
ljmp
mov
out
inc
xor
aas
jmp
xchg
in
rcrl
mov
mov
xchg
mov
adc
or
xchg
lock
mov
adc
shl
sub
sub
adc
adc
fcmovnbe
push
dec
xchg
xor
outsb
xor
rcll
or
push
adc
add
mov
mov
mov
aam
pop
adc
pop
add
js
data16
fsts
ret
gs
arpl
out
mov
test
add
push
stc
dec
cld
nop
mov
adc
cld
in
lods
pop
add
popf
mov
movsb
jle
popf
test
or
push
dec
aam
les
jbe
lret
ficoml
testl
sahf
ret
mov
mov
in
bound
jnp
dec
movsb
mov
mov
fists
popf
mov
mov
loopne
mov
fistps
scas
andb
sbb
shl
insb
int3
cmp
jp
inc
testb
pop
ror
arpl
ds
sbb
into
ror
inc
es
fiaddl
inc
dec
mov
xlat
sub
paddq
nop
xchg
inc
and
outsl
xor
add
push
pushf
lods
fucomip
and
test
mov
push
cmp
fisttpl
shl
sbb
int
or
movsb
mov
jle
aam
lods
jp
mov
ret
call
fcoml
insl
outsb
fldt
dec
enter
adc
out
test
icebp
xor
int3
mov
gs
or
cmp
sub
or
jp
insb
test
cld
ljmp
jecxz
push
push
xchg
popf
sahf
mov
sub
jo
shll
inc
das
push
push
outsb
jbe
add
leave
pop
sbb
lock
jecxz
cmp
mov
jmp
in
imul
mov
shlb
mov
push
xchg
cltd
pop
adc
push
mov
inc
lret
scas
rorl
fadd
shll
nop
push
xchg
push
js
sbb
jo
cmpsb
sub
or
sbb
jo
aad
ja
in
mov
iret
mov
call
xchg
jno
fcoms
add
outsl
xchg
out
or
or
outsl
sbb
push
push
lds
or
mov
and
sti
sbb
aad
sbb
push
xchg
call
xor
add
insl
iret
in
clc
lret
ja
push
jo
push
int3
mov
movsl
lahf
or
inc
or
pop
fstpl
mov
inc
sub
add
and
xchg
and
xchg
test
adc
xchg
mov
or
in
mov
cmp
jle
divl
out
adc
mov
cmpsb
adc
out
mov
mov
jo
div
fistpl
jp
push
les
out
sti
cmp
nop
cmpsl
fcomip
mov
and
test
jo
mov
leave
or
popf
adc
imul
daa
roll
out
mov
sub
sbb
fsubr
mov
xor
dec
dec
sub
dec
and
loop
stos
mov
mov
mov
fcompl
mov
push
adc
rcr
jns
xor
scas
pop
ds
xchg
jae
popa
ss
inc
xchg
dec
sbb
or
lods
sub
sti
inc
ret
add
test
inc
clc
jbe
mov
and
sbb
mov
sub
test
data16
cmp
pop
lods
sub
sub
sarb
rol
mov
sub
sbb
loop
mov
cmpsb
adc
je
outsl
sarb
fdivr
sahf
mov
mov
push
ret
ret
dec
jne
push
or
push
inc
shlb
inc
movb
jp
mov
xchg
pop
bound
inc
dec
jb
add
jns
push
inc
iret
inc
jbe
mov
or
or
xchg
and
dec
xchg
or
out
push
jbe
data16
sbb
or
idivb
test
add
or
push
jmp
pop
bound
mov
lcall
push
sbb
in
leave
sbb
sub
mov
or
sub
fmuls
cli
or
or
cmc
or
mov
cwtl
mov
cwtl
sbb
enter
leave
pop
ljmp
xrelease
ljmp
out
insl
mov
in
not
push
stc
ret
jbe
fstps
insb
int
or
stos
sbb
inc
inc
loop
stos
je
mov
rorb
inc
xor
test
xor
or
cmp
test
push
inc
jo
pop
mov
test
adcb
ret
xchg
data16
sub
sbb
outsl
sub
ss
inc
and
daa
stc
xor
insb
or
add
xchg
aas
outsb
out
cmp
fiaddl
jle
sbb
push
adc
repnz
pushf
and
pop
adc
pop
push
push
push
push
lea
jb
sub
out
and
mov
in
loopne
pop
push
push
jg
sub
jmp
js
ds
jno
andb
je
scas
sub
lahf
in
push
dec
mov
mov
xchg
pop
xchg
outsb
mov
mov
xchg
or
int3
dec
pusha
dec
xor
in
insl
xor
xor
insb
je
sbb
or
push
insb
bswap
lea
adc
iret
push
push
filds
add
push
neg
je
and
movsl
ret
mov
dec
mov
inc
pushf
je
lods
lods
popa
fldl
fisubs
arpl
lods
xor
incb
cmp
cltd
dec
push
les
icebp
int
pop
loop
xorb
out
mov
mov
das
outsl
ds
xorb
out
mov
iret
xchg
jge
stc
push
jmp
dec
loop
cs
cld
sub
xor
lea
inc
adc
icebp
adc
into
inc
cwtl
out
add
inc
aas
les
fisubrl
es
sbb
lcall
mov
subl
lock
mov
push
rclb
imul
cld
enter
fsubrl
in
sahf
outsl
inc
jg
in
insl
mov
sbb
rorl
out
daa
mov
lcall
cmp
lods
inc
xor
pop
xor
repz
andl
dec
jmp
dec
add
and
inc
in
shll
cmp
sub
loop
push
push
mov
sbb
push
pop
popa
sahf
cmp
jns
lcall
pop
or
xor
add
lods
test
mov
hlt
mov
fnstcw
leave
mov
jge
and
pop
mov
fmuls
inc
nop
outsl
stos
mov
mov
lret
pushf
xor
fstl
ja
jbe
les
fimuls
adcl
add
stc
jo
pop
jb
sahf
stc
cmp
and
out
addr16
push
fisttpl
adc
and
insb
adc
ret
ds
in
xor
and
jbe
stos
xchg
push
xor
inc
int
mov
jmp
dec
ds
jmp
stc
in
push
xor
data16
pop
adc
pop
mov
sarb
sub
pop
or
out
dec
jle
mov
lock
aaa
sarb
in
pop
es
cmp
cli
inc
sbb
xchg
pop
mov
mov
imul
subb
rorl
seta
xchg
or
fisttps
push
cmp
cmp
scas
xchg
xchg
loop
sahf
rorl
movsl
ljmp
out
cmp
adc
in
rorl
rcrl
mov
or
jb
lret
mov
inc
push
sub
cmp
cmpsw
or
xchg
pushf
sub
mov
shl
pushf
add
and
adc
iret
xchg
and
mov
jl
sub
pop
fdivrs
aaa
popa
hlt
scas
lcall
je
adc
push
ds
mov
and
in
enter
pop
sub
test
jecxz
stos
inc
mov
inc
sarb
adc
cmpb
inc
popa
shl
adc
loopne
into
mov
dec
mov
or
adc
loope
sub
lea
pop
pop
out
jmp
dec
mov
lahf
ljmp
sub
ret
popf
sbb
push
pop
subb
data16
sti
pusha
sub
movsl
lret
stos
insl
mov
jge
loop
pop
lds
or
jbe
xor
in
and
pop
push
add
push
and
xor
add
xchg
int
push
roll
fistpl
pop
jo
push
sub
outsl
add
or
push
jnp
push
or
xor
dec
inc
stos
cmp
sub
adc
mov
pop
daa
mov
movsl
xchg
jl
enter
sub
mov
mov
idivb
and
inc
sbb
xchg
cmp
push
jmp
fsubrs
sub
in
dec
adc
cmp
mov
sbbb
rorb
pop
adc
cmp
mov
stos
shrl
mov
mov
fisttps
std
push
add
sbb
pushf
xchg
xchg
hlt
mov
add
mov
sbb
sub
or
inc
iret
jg
shll
xor
mov
cmp
mov
in
inc
sbb
fdivs
jge
ljmp
inc
push
or
ja
out
in
inc
sbb
or
sbbl
insl
es
mov
lcall
frstor
adc
mov
lods
hlt
sub
or
sub
add
and
jbe,pn
dec
mov
jmp
dec
jge
jo
pop
dec
jle
push
movsb
jl
ret
pop
negb
pop
sbb
stos
adc
fwait
mov
cmp
movsl
outsb
enter
imul
mov
xor
ud0
or
pusha
lahf
jmp
inc
rolb
loop
push
adcl
sbb
gs
daa
sbb
lret
add
xchg
inc
test
bnd
bnd
jae
cmp
scas
xchg
sbb
shlb
dec
out
mov
inc
mov
jl
mov
xorl
test
aaa
dec
xor
into
dec
aaa
mov
jmp
mov
stc
shlb
popf
loope
test
popf
iret
pop
aaa
pushf
test
bound
orl
lcall
jbe
pop
das
sahf
inc
ret
and
testl
rolb
mov
jle
lcall
xor
mov
insl
leave
xchg
fdivr
shl
mov
adc
dec
xchg
in
mov
gs
cld
cli
ss
push
xchg
jecxz
arpl
pop
cmp
xor
outsl
xor
push
pop
xchg
mov
imul
aaa
cmc
fld
lods
pop
sti
rcl
or
push
in
hlt
int3
mov
mov
cmpsl
cmp
fcoms
fcompl
cmp
arpl
fistpl
movsbl
sbb
add
leave
inc
mov
and
popa
arpl
adc
cmp
stos
cli
pusha
jae
imul
roll
pop
mov
adc
cltd
dec
xor
test
mov
clc
fwait
leave
sub
lods
popf
aam
fmul
mull
inc
cs
xchg
pop
aaa
lods
lret
push
xchg
add
rcr
cmpsb
push
or
xchg
lods
out
xchg
pusha
scas
aam
lcall
lock
stc
ret
cs
aad
sahf
inc
adcl
pop
dec
ret
or
dec
shrb
cld
outsb
outsl
mov
test
cmpsl
outsl
jae
push
cmpsl
push
jmp
add
sbb
sbb
fcoms
rcll
dec
sbbl
pop
jge
inc
mov
ja
pop
sbb
daa
xchg
lea
dec
pusha
mov
or
or
push
outsl
dec
mov
cmpsb
sahf
mov
ljmp
int
inc
inc
je
ret
jne
mov
in
jle
repz
jle
add
arpl
rep
test
outsb
jl
jnp
sub
imul
repz
push
cmpsl
xchg
loopne
rcrb
sub
pop
insl
or
mov
adc
rclb
pop
in
into
lea
and
cmp
adc
sbb
rcrb
lahf
adc
xchg
fdivs
leave
mov
lret
js
ret
scas
pop
addb
xor
cltd
mov
out
fwait
jle
test
dec
push
out
dec
in
into
ss
imul
sbb
cmp
inc
mov
insl
aam
push
lret
movsl
push
mov
sbb
xor
cmc
pusha
aas
sub
rorb
jne
lods
js
nop
push
and
jp
mov
push
test
xor
neg
ljmp
dec
jae
mov
stos
repz
jbe,pn
lods
icebp
push
incl
add
sbb
cmp
cmp
cmp
lret
cmp
loopne
gs
mov
xchg
and
mov
push
subl
pop
jb
xchg
scas
sub
jmp
faddl
out
in
mov
inc
add
movsb
or
xchg
popf
inc
mov
in
cwtl
stos
sub
adc
lods
add
or
stos
in
and
subb
loop
mov
sti
aam
fsubrl
lods
leave
jp
pop
xchg
and
lods
push
mov
pop
loope
lea
aas
rorb
mov
mov
mov
push
iret
mov
jmp
sub
scas
push
lods
pushf
adc
stos
jp
sysenter
in
jecxz
sbb
fsubs
pop
aaa
push
shrl
shll
ljmp
sbb
jne
ret
sbb
rcll
push
rorb
cmp
outsl
dec
lea
xchg
fistpl
enter
lods
ret
add
add
xchg
xor
or
imul
adc
ret
stc
pusha
jg
jo
inc
or
mov
sbbl
pop
push
push
es
ljmp
push
mov
lcall
push
add
and
imul
xchg
mov
arpl
ret
pop
or
jb
cmpsb
cld
cmp
push
dec
push
or
push
loop
push
lods
div
test
cmp
testl
jecxz
or
dec
in
ljmp
dec
dec
push
xchg
jns
or
inc
mov
in
imul
jb
inc
cli
push
inc
dec
cmp
gs
insb
ja
xor
outsl
mov
stos
or
arpl
lahf
and
and
pushf
loop
stc
shl
dec
jp
ror
adc
ss
inc
xchg
in
stos
mov
fbld
fiadds
jb
sbb
hlt
popf
mov
mov
pop
loop
push
loop
int
mov
sbb
std
ret
push
cltd
sbbl
jmp
xor
stos
test
pop
lret
cwtl
sub
rorl
pushf
inc
adc
shrl
add
movsb
inc
sbb
xor
in
mov
popf
xor
ret
dec
sbb
dec
mov
mov
sarl
sub
sarl
or
sbb
xor
movsl
outsl
sub
ds
into
jae
xor
mov
mov
cwtl
pop
sub
sarb
adc
lret
aad
int3
add
mov
sbbl
or
mov
xor
pop
jl
xor
or
xchg
cld
fsubs
rcrl
push
pop
cltd
sbb
fbld
inc
sahf
sahf
push
ljmp
inc
mov
sbb
inc
mov
fs
mov
outsb
jecxz
push
mov
fs
aas
stos
jecxz
sub
bound
jecxz
insl
stos
inc
ds
les
jle
lcall
mov
jno
sti
bound
cmp
jmp
dec
or
leave
mov
ror
addr16
or
shl
subb
cmp
cmpsl
and
int3
sbb
push
dec
pop
mov
loop
stos
stos
push
push
push
adc
pop
adc
push
cmp
dec
and
cli
ret
jmp
mov
or
sbb
stos
push
lea
imul
scas
sbb
mov
and
cli
imul
data16
mov
negl
jp
sbb
pop
push
jg
fistl
sub
mov
loop
cld
std
bound
jno
lret
ja
leave
mov
flds
jmp
push
xor
xorb
sbb
cmp
or
cmp
sub
mov
push
scas
xchg
cmp
xchg
pop
mov
pop
cli
mov
mov
sbb
arpl
je
pop
andl
xor
loop
sti
dec
sbb
sub
mov
sub
mov
fstps
leave
dec
out
cmpsl
dec
fsubl
out
sti
or
into
test
push
sti
ret
adc
cmp
ljmp
add
shl
add
push
psrad
adcb
add
adc
subl
or
ja
fisubrl
push
dec
lcall
mov
xchg
pop
mov
jg
xor
fldenv
mov
pushf
mov
ja
or
test
or
xor
add
add
inc
pop
pop
xor
cli
push
mov
and
cmpsl
cmp
xor
or
sbb
gs
popa
out
ljmp
xchg
fsubr
lea
aas
xor
jmp
ffree
mov
jp
or
sbb
mov
out
mov
dec
ret
cmp
leave
jbe
imul
ds
les
dec
je
push
scas
sbb
sbb
dec
mov
push
int
mov
xchg
or
pop
pop
ljmp
jmp
pop
push
xchg
push
cld
pushl
pop
fwait
rcrb
fsts
les
pop
outsl
sub
fcmove
fisubs
pop
inc
subl
mov
mov
ljmp
je
cmpsl
mov
mov
fnsave
call
into
das
cld
cli
ror
pusha
test
xor
sahf
out
or
adc
int
int
and
cld
enter
ss
stos
mov
push
pop
imul
test
ljmp
loop
adc
cs
mov
pusha
xlat
mov
mov
jge
and
xchg
mov
cmp
add
ret
adc
stos
push
mov
cmp
fstp
rorl
jnp
rorl
insb
in
dec
sub
pop
mov
mov
mov
mov
das
insb
shrl
sbb
pop
or
mov
add
test
cld
sbb
adc
les
pop
sbb
mov
pop
cwtl
mov
xchg
fsubl
mov
xor
icebp
cmp
repz
cld
or
pop
mov
lock
arpl
pop
or
xor
add
sub
mov
jg
xchg
mov
xchg
pushf
mov
enter
out
fdiv
repnz
lods
mov
push
jle
jg
lods
pop
sbb
repz
cs
mov
push
jmp
icebp
cmc
xchg
decl
push
jmp
add
addr16
stc
jle
lds
sub
jno
and
jno
iret
fcompl
xchg
mov
push
dec
loop
sbb
push
add
cmp
sub
fsubp
aaa
and
movsb
cltd
jle
dec
adc
test
es
lcall
pop
jnp
dec
in
and
inc
fsubrl
inc
imul
jp
fs
push
mov
mov
dec
fwait
jno
stos
cmpsb
adc
lock
lcall
push
or
mov
mov
jl
in
and
lods
dec
addr16
xchg
in
stc
out
call
or
popa
bound
call
xchg
xor
pop
into
pop
sbb
sbb
scas
sbb
cmpsl
xchg
int3
loop
ficoms
mov
add
jle
jne
push
and
mov
addl
aam
cmp
sub
xor
hlt
shll
arpl
scas
fucomi
dec
or
mov
add
mov
adcb
push
and
lret
flds
int
add
xchg
and
add
movsl
jg
mov
roll
pop
not
pop
xor
pusha
xor
mov
sarb
push
push
roll
int3
sbb
insl
shrl
push
ret
xchg
or
rol
adc
shll
inc
xorb
ficoml
mov
lea
mov
sbb
and
jmp
in
mov
mov
lods
and
xor
sti
mov
adc
repz
lret
addl
add
stos
or
push
les
popa
sbb
int
adc
and
jb
movsl
in
xor
xrelease
adc
jmp
sbb
cld
scas
push
cwtl
out
dec
out
or
pop
or
lea
xor
imul
imul
shr
sbb
xchg
or
push
ja
cmp
and
inc
push
testl
popa
push
lret
sar
rclb
cwtl
out
pop
testb
inc
fisubl
insl
lds
leave
dec
pop
mov
inc
lret
sbb
jmp
stos
lret
pop
or
pop
test
mov
stos
stc
fsubl
jge
hlt
sbb
fldl
or
cmp
sub
dec
push
fmull
icebp
xchg
jne
aad
insb
inc
jmp
mov
in
scas
ljmp
loope
or
xchg
cmp
mov
xchg
mov
mov
bound
xchg
cmp
roll
sbb
sahf
mov
bswap
mov
insb
lret
sub
push
in
mov
jl
in
fstpl
mov
cmpsl
rcll
sbb
imul
pop
mov
inc
mov
popa
push
roll
in
iret
int
cmp
push
pushf
fnstenv
or
rcrl
lret
push
flds
jge
insl
sub
cmp
and
jbe
sbb
mov
cwtl
gs
xchg
mov
sbb
loop
add
push
adc
mov
dec
jmp
sar
int
and
adc
fld
loope
clc
xor
mov
out
sub
lods
lds
imul
dec
ss
cmp
add
fisubrs
and
mov
fucompp
es
xor
and
jmp
sub
movl
sbb
lcall
jge
ja
aad
sbb
xchg
jbe
xchg
xor
xchg
int3
xchg
inc
jmp
inc
pop
xchg
ret
pop
sub
add
shl
push
gs
or
in
stos
add
cli
fadd
or
mov
pop
mov
sar
mov
mov
add
adc
add
testb
roll
xor
fisubrs
loopne
pusha
shll
js
ret
popa
cmp
cld
mov
daa
jg
xor
add
xor
adc
xchg
adc
push
iret
rol
or
add
call
sub
imul
cmp
adc
fcmovnb
dec
subb
mov
pop
in
push
loop
xchg
lret
jle
arpl
shrl
leave
sbb
stos
mov
cmc
pop
into
jnp
pop
pop
mov
stos
arpl
cmp
cmpb
sbb
ljmp
aad
or
dec
jge
xor
xchg
mov
movl
stos
insb
icebp
scas
jmp
mov
fs
int
mov
outsl
mov
inc
sbb
cmp
pushf
pop
fcomps
push
arpl
mov
insb
aad
popa
jns
pushf
int3
xchg
adc
sbb
cli
out
inc
aad
cmc
sti
dec
insl
or
idivl
fcomps
push
dec
test
add
or
popa
ret
je
jmp
pop
xchg
stos
pop
jmp
into
aad
scas
ljmp
cwtl
movsb
dec
testb
pop
sub
gs
sub
and
stc
cmp
into
enter
dec
xchg
clc
add
xchg
es
test
fisubl
stos
xchg
sub
in
jne
int
pop
cmp
inc
sbb
push
popa
xlat
sbb
or
jno
xchg
adc
hlt
adc
stos
add
push
sbb
sbb
scas
jmp
daa
mull
adc
cmpsb
push
or
xlat
aad
int3
repz
addr16
dec
fbstp
movsb
xor
data16
cli
sub
mov
insb
inc
out
sbb
xchg
mov
dec
call
adc
decl
jbe
insb
push
andnps
out
push
leave
sbb
pop
mov
xor
jae
or
out
dec
jmp
jp
xchg
leave
loope
not
paddsb
mov
jg
ret
out
clc
push
xor
sar
test
popf
cmc
lahf
aaa
rcrl
and
pop
cmpsb
mov
mov
xor
cmc
leave
mov
aad
mov
mov
dec
adc
xchg
test
or
pop
aas
lods
shrb
xchg
cmp
xchg
mov
xor
inc
enter
inc
lods
jp
lret
xor
sbb
pop
aam
jmp
gs
xor
test
dec
inc
pop
dec
inc
xlat
rolb
lret
test
or
mov
pop
or
adc
in
aas
or
dec
outsb
pushf
cmp
or
mov
daa
inc
pop
pop
mov
je
jl
dec
pusha
ret
cmp
int3
bound
lock
jecxz
pop
clc
ljmp
dec
fucomip
xchg
mov
arpl
jns
add
fldl
fimull
in
add
cwtl
cs
jmp
adc
and
mov
insb
cmpsb
movsb
lahf
adc
inc
mov
adc
mov
mov
lret
in
ret
inc
lahf
xor
dec
stos
jge
nop
das
pop
sti
pusha
cld
and
notb
repz
or
mov
push
mov
mov
bound
sbb
lods
stos
mov
test
sti
into
dec
xchg
lret
out
mov
or
xor
inc
pop
aad
adc
mov
pop
sahf
push
sub
pop
in
sarl
mov
fldcw
fcoms
aad
mov
scas
leave
lcall
mov
aaa
sbb
jns
subl
add
scas
lock
push
cmp
mov
orl
sub
xor
jle
pop
mov
gs
es
sbb
xor
std
push
lahf
or
stos
into
jns
xchg
std
xchg
int
push
ficomps
mov
adc
aam
or
ficoml
dec
push
outsl
xor
adc
mov
adc
out
andl
das
fidivrl
and
fs
out
pop
cmpsb
jne
test
stos
xor
inc
jo
xor
push
pop
arpl
shll
push
ljmp
add
int3
mov
ret
xchg
ljmp
aas
loop
sub
test
cli
lcall
sub
rol
mov
mov
ja
and
cmp
jne
and
sbb
pusha
out
call
sub
xchg
arpl
arpl
xor
cmp
mov
or
popf
loop
lret
pushf
dec
jecxz
outsl
or
push
jge
push
push
dec
sbb
cs
cmpl
jne
cmc
push
popf
add
cmp
jecxz
mov
adc
repz
stos
lret
mov
negb
cmp
push
push
cltd
ret
lret
shrl
ret
mov
stos
xor
aam
xchg
or
stos
dec
mov
push
or
mov
push
or
or
dec
ljmp
jno
sti
sahf
mov
ret
adc
les
mov
and
sbb
sub
testb
xchg
xor
dec
cmpsb
push
lahf
ljmp
jge
ss
cmp
push
imul
sbb
shrl
pop
repnz
jge
mov
add
pop
jp
push
xchg
dec
adc
add
je
ret
cmp
adc
lock
mov
dec
loop
and
push
add
pop
jnp
mov
sub
lds
lea
add
cmpsl
cmpsl
jne
fadds
lahf
subb
movsb
push
sbb
in
lock
dec
stos
mov
inc
aad
ljmp
ss
imul
ret
mov
cmc
or
sbb
aaa
dec
and
imul
and
push
or
pop
mov
into
sub
sbb
add
test
nop
and
fwait
lea
loop
mov
fimuls
fcoml
fcomps
daa
pop
jle
call
sbb
je
mov
repnz
data16
inc
push
int3
mov
jmp
les
add
jecxz
stos
in
jns
int3
repz
mov
sbbb
imulb
mov
movsl
pop
inc
adc
jnp
cli
mov
jnp
add
stos
dec
push
stos
adc
shll
mov
popf
mov
lea
ljmp
xlat
push
ficoml
pop
xchg
pop
and
jbe
sbbb
popa
and
ljmp
jp
nop
insb
jno
or
push
ret
bound
push
lret
das
push
mov
movsl
jle
or
inc
je
jle
jmp
icebp
push
mov
cld
repz
test
sbb
mov
add
mul
lret
pop
sbb
lcall
std
mov
pop
or
add
repnz
call
adc
ret
js
dec
pop
lods
leave
cli
out
inc
adc
mov
mov
jecxz
lahf
out
push
add
cld
jp
dec
lret
scas
xchg
sub
inc
sbb
inc
data16
lea
outsb
pop
dec
fucomp
add
scas
mov
std
adc
and
insb
leave
std
xchg
daa
jb
pushf
pop
and
inc
shrb
cli
repz
ljmp
in
sub
or
adc
in
xor
dec
dec
cmpsb
dec
jmp
mov
xor
js
pop
xor
stos
cwtl
xchg
and
mov
jge
xor
mov
jae
push
lock
push
mov
jge
adc
jle
fs
inc
jge
mov
xor
inc
pop
shr
nop
mov
jno
ret
cmp
loop
mov
xor
pop
addr16
les
sbb
sub
mov
in
lods
ljmp
cwtl
rcl
pop
cmpsl
neg
sbb
jne
mov
cli
js
fucom
or
mov
mov
enter
inc
jne
add
jl
stos
xlat
mov
fcompl
push
pop
adc
inc
xchg
mov
subb
jb
test
gs
inc
and
cmpb
mov
jne
sbbb
lods
je
out
push
es
sub
leave
jmp
hlt
mov
adc
push
and
sbb
jo
jns
in
xchg
scas
cltd
test
pop
inc
add
lcall
or
jge
int
sub
pop
pop
ss
push
push
xor
dec
jecxz
dec
je
outsl
int
pop
pop
loop
std
ljmp
ja
or
mov
xor
adc
gs
sarb
mov
jg
mov
rclb
loopne
add
sbb
bswap
pusha
imul
mov
jp
roll
jb
dec
jae
mov
sbb
test
xchg
dec
xchg
cltd
outsb
cld
push
cli
mov
shll
aam
push
mov
loope
push
daa
stos
mov
hlt
jbe
pop
in
je
fnstsw
pop
cmpsb
cs
sbb
shll
pop
dec
mov
pop
mov
mov
movsl
xor
cmp
add
je
sbb
jle
mov
mov
jno
scas
mov
pop
outsl
or
lea
mov
mov
nop
lret
xor
loop
push
or
fnstsw
les
dec
and
cmpb
fisubl
test
mov
stos
aaa
pushf
push
mov
mov
cmp
xchg
negl
das
inc
ret
push
sub
out
pop
mov
jecxz
ret
ret
divb
jecxz
lcall
sbb
add
xchg
iret
lret
mov
ja
aam
mov
add
add
bnd
in
ror
sub
leave
mov
dec
stc
sahf
push
and
mov
insl
xchg
mov
push
pop
mov
mov
pop
aas
loopne
notb
inc
mov
dec
sub
insb
sbb
adc
pop
cli
mov
test
stc
push
inc
ss
imul
gs
rorl
and
pushf
mov
orl
loope
adc
sbb
test
jecxz
mov
dec
pop
jno
xor
push
cwtl
jmp
sbb
and
xchg
inc
fistpl
fisubrl
push
lret
insb
add
fs
inc
dec
add
pop
orl
shll
out
pop
dec
jl
sub
cmpb
cmp
or
popaw
stc
cs
rolb
int
out
mov
mov
fwait
rcll
mov
pushf
lahf
mov
loop
jmp
or
sbb
or
fbstp
orl
mov
or
pop
sbb
or
cmp
push
ror
mov
sub
fwait
aaa
dec
mov
sub
or
das
out
push
sahf
jmp
call
sbbb
mov
sub
cmpsb
mov
dec
jecxz
sub
nop
fdivrs
stos
fistps
push
rolb
adc
ret
das
cld
scas
jns
mov
mov
jle
bound
xchg
xchg
and
cltd
into
cld
out
or
mov
ficompl
push
repz
add
push
es
xchg
mov
movl
int
add
jge
or
rcrb
inc
or
lods
sbb
push
cmp
mov
adc
ficompl
ror
jmp
jp
daa
mov
jge
mulps
adc
push
mov
ror
ds
repnz
pop
cmp
jmp
loopne
out
cli
addr16
mov
mov
leave
frstor
sbb
stos
adcb
mov
pop
or
or
lods
out
mov
lret
push
sbb
sbb
cmp
stos
inc
cmpsl
into
int
adc
sti
jecxz
int3
cmp
jb
mov
jmp
cmp
cmp
mov
ret
add
pop
les
dec
enter
lcall
ret
ss
push
je
sub
adc
or
and
xlat
sbb
stos
and
cmp
and
cmp
inc
push
sbb
cs
pop
cld
xchg
add
mov
add
hlt
xchg
scas
push
push
add
outsb
dec
add
sbb
dec
inc
cmp
pusha
dec
jp
push
jecxz
arpl
push
xchg
jle
out
pop
jmp
inc
pop
mov
sbb
or
xchg
sub
inc
gs
stos
xchg
outsl
aaa
mov
addr16
mov
xchg
stos
insb
mov
push
cmp
shr
or
orb
cwtl
pusha
test
sahf
add
fwait
xchg
test
in
mov
iret
fs
gs
or
push
retw
sbb
lret
add
sub
add
lods
icebp
repnz
dec
gs
inc
fs
dec
aaa
jo
mov
jo
lret
mov
fs
push
dec
shrl
ja
out
sbb
xchg
lods
cmp
sub
aam
mov
loop
outsl
lea
or
push
sub
pop
test
aaa
jle
outsl
outsl
and
jecxz
lret
xchg
cli
aas
dec
sbb
pop
push
orb
or
imul
addr16
cld
xchg
idivl
popa
sbb
enter
mov
xchg
cwtl
lea
sbb
push
stos
sbb
lods
and
push
inc
dec
cld
stos
pop
rclb
movsb
adc
jbe
sub
data16
pop
cmp
mov
sub
gs
aad
xchg
lea
pop
mov
lcall
outsb
in
je
loope
ret
jmp
int3
jle
aaa
mov
loope
jnp
xchg
or
cmp
ljmp
sub
xor
jb
je
fisttps
outsl
jo
mov
addb
ret
mov
insb
rcr
dec
fnstcw
mov
gs
ljmp
sub
jecxz
dec
repnz
les
push
and
add
scas
addr16
cld
jnp
mov
jmp
jmp
test
add
fidivl
inc
dec
jmp
popa
mov
xchg
sub
shlb
pushf
push
inc
mov
pop
ja
daa
in
jecxz
cmpsb
mov
lea
xlat
mov
pusha
subl
pop
pop
jmp
loopne
je
das
shr
in
sub
mov
jnp
movsl
mov
sbb
dec
lret
stos
rcl
test
fiadds
cmp
imul
andl
inc
cmc
sub
cld
pop
xor
test
dec
dec
xchg
loop
add
mov
pusha
inc
scas
mov
mov
cld
mov
dec
leave
sbb
ret
pop
call
pop
xchg
push
mov
pop
push
popf
sub
pop
stos
shll
aad
addr16
or
jae
mulb
jmp
insb
cmp
xor
movsl
stos
xchg
rclb
imul
imull
int
cmp
inc
movsl
mov
sub
mov
lods
sub
repnz
scas
or
sub
adc
mov
cmpsb
aas
dec
fcmovnu
inc
scas
int3
sub
rcrb
sub
inc
add
repz
ret
or
pop
lods
lods
dec
outsl
or
incl
scas
or
ret
in
push
mov
lret
push
push
inc
mov
add
insb
push
jge
jecxz
or
mov
xchg
xor
lahf
mov
inc
repnz
imul
cld
cld
stos
fdiv
mov
outsl
lock
mov
add
add
and
les
jecxz
xchg
out
mov
push
scas
adc
or
pop
int
adc
repz
inc
sti
cmp
loop
or
pop
push
stos
stos
inc
sahf
adc
insb
fdivr
lret
mov
adcb
dec
pop
ds
ja
psubd
mov
dec
and
repnz
inc
ljmp
stos
imul
hlt
sbb
test
or
adc
jnp
adc
shrl
fbstp
xchg
inc
adc
fs
add
jne
out
dec
in
sub
lret
push
out
insb
add
sub
or
in
mov
dec
sbb
adc
sub
sub
xchg
or
ret
lods
loopne
cld
jo
cmpsl
push
xor
repnz
cmpsl
aam
mov
call
sbbb
jmp
adc
add
out
stos
repnz
movsl
jle
les
insl
jmp
int
and
mov
xchg
xor
imul
xchg
mov
add
insl
jl
cmp
mov
push
das
imul
jnp
sbb
dec
inc
cld
dec
out
inc
adc
sub
push
rcrb
mov
mov
mov
mov
jp
or
lea
xchg
and
shr
mov
sub
jno
or
cmp
ljmp
and
mov
or
mov
push
loopne
flds
ss
mov
xor
xchg
jmp
loope
testl
stos
mov
leave
mov
add
stos
testb
fs
and
out
scas
dec
fwait
imul
fwait
repnz
fldl
adc
call
fildl
imul
scas
out
fistpll
mov
rcll
or
es
out
sub
shlb
cli
sbb
push
sub
xchg
mov
or
jmp
shl
mov
ret
and
xor
int3
shl
jge
leave
ret
nop
notb
adc
jne
lods
push
pop
icebp
push
mov
mov
dec
and
adc
lcall
ret
psadbw
cmc
jbe
addr16
mov
push
sti
add
or
int3
and
mov
pushf
out
mov
inc
loop
push
or
out
xchg
mov
arpl
inc
cmp
testb
inc
pop
or
out
inc
sbb
mov
mov
loopne
pop
add
in
xlat
movsb
xchg
out
jns
or
cmpsl
pop
mov
add
fcoms
xchg
sbb
xchg
jb
enter
jl
or
cmp
cli
sbb
adc
shrb
pop
mov
fldt
pusha
test
adc
int
sub
or
or
lahf
and
ret
pop
leave
fs
adc
idivb
sbb
jmp
int
mov
cmp
mov
in
push
into
or
jnp
cmp
lea
sub
sub
add
push
jecxz
cmp
push
mov
negb
pop
cld
mov
sti
ljmp
cmpsb
sahf
or
je
out
shll
mov
and
ret
xchg
xchg
pusha
mov
js
jmp
sub
dec
rcrb
or
lods
push
jnp
stos
add
and
jmp
in
dec
push
mov
or
jno
mov
ret
fwait
mov
lcall
jmp
cmp
inc
cld
addb
insl
dec
test
rorb
add
cltd
lea
lods
fimuls
dec
dec
xor
dec
lds
mov
inc
xorps
shll
sbb
sub
lcall
lret
data16
fs
imul
adc
stos
add
jp
or
jnp
inc
sub
pop
push
xchg
mov
or
add
push
insl
in
out
mov
das
insb
fmuls
call
popf
lret
jl
jg
mov
outsl
fistpl
and
and
jle
adc
clc
rclb
int3
mov
rclb
jge
inc
nop
jbe
push
sub
push
int
jne
ret
insb
mov
mov
in
popf
or
xchg
cmc
das
fucomi
in
push
mov
and
mov
dec
pop
sbb
xor
lds
xor
inc
inc
int
filds
and
repz
nop
stos
ficompl
jmp
ret
repz
dec
sub
out
pop
stos
pushf
jne
push
fsub
aam
stc
or
imul
sbb
loop
testb
nop
mov
push
jle
and
cs
xor
sbb
cli
lret
push
std
test
sbb
pop
and
dec
scas
repnz
subb
sub
in
negl
adc
mov
inc
pop
out
jecxz
insb
cmp
add
inc
fcomip
mov
push
call
aad
sti
push
mov
lods
stos
or
sub
lcall
lcall
jmp
cmp
imul
fiadds
dec
push
aam
or
dec
rol
sbb
add
and
test
push
dec
shrb
shlb
sub
mov
repnz
mov
shlb
aaa
lret
inc
ss
add
lahf
adcb
test
sbb
sub
enter
mov
dec
out
xchg
mov
push
fwait
sub
adc
aad
test
mov
in
in
movsb
adc
or
out
push
xchg
jbe
pop
mov
or
les
push
or
jge
aas
stos
add
std
and
xor
and
push
mov
rorb
ja
adc
inc
out
add
push
int3
and
push
js
sbb
pop
stos
fwait
dec
cmp
insb
js
cmc
push
inc
push
xor
dec
push
cltd
mov
jmp
sti
push
push
sbb
inc
or
out
pop
xchg
or
jmp
or
std
xchg
imul
jl
jmp
popa
mov
scas
add
fisttpl
cli
mov
xor
in
and
mov
xchg
aas
loop
test
lea
aaa
nop
mov
arpl
inc
addr16
lcall
or
add
outsb
js
mov
fimuls
rcl
in
stc
or
jnp
push
add
pop
sub
inc
in
iret
cmp
sbb
cmpsb
pop
sti
dec
xchg
sbb
sbb
xchg
push
jecxz
mov
sbb
xchg
add
ret
cli
mov
or
mov
push
gs
inc
inc
jnp
int
arpl
bound
pushf
movsb
nop
dec
fsubrp
pusha
gs
and
xchg
outsb
loop
fs
or
jge
mov
mov
pushl
mov
mov
mov
in
cmpsb
mov
sub
test
jae
rol
jecxz
jae
mov
pop
es
fisubrl
in
iret
mov
inc
sbb
pop
sbb
loopne
mov
out
push
mov
loop
les
xchg
jle
cmp
or
pushf
shr
pop
fbld
cmp
push
or
pop
push
popa
jne
sub
ror
sbbb
test
mov
das
or
or
add
push
movl
rcr
iret
icebp
sbbb
mov
mov
filds
sub
xor
xchg
les
scas
lods
push
dec
adc
lea
insb
cmp
lahf
mov
repnz
jmp
jge
sbb
popa
cmpb
movsb
sub
jle
add
or
arpl
enter
icebp
push
mov
push
dec
adc
and
je
sbbl
into
mov
jnp
sub
rolb
or
sub
pop
xchg
insb
cld
mov
push
lods
add
mov
cmpsb
and
push
mov
les
loope
sbb
adc
fucompp
mov
lods
sarl
mov
cmp
jmp
add
sub
insb
mov
or
js
in
mov
mov
jae
inc
xchg
sti
out
sbb
scas
mov
sbb
inc
xlat
pop
call
add
jecxz
cmc
xor
add
and
imulb
pop
mov
ja
push
pop
inc
xchg
sub
sbb
add
or
sbb
mov
cltd
fdivrl
inc
and
jae
add
mov
mov
insb
mov
jbe
rorl
pop
mov
sub
vfrczsd
xor
stos
pop
rclb
add
adc
push
mov
jmp
pop
ror
dec
dec
xchg
mov
movsb
mov
sub
sub
sbb
dec
mov
sub
insb
cwtl
mov
insb
cmc
in
mov
lret
div
push
dec
add
outsb
lret
pop
lahf
ret
ljmp
push
xor
rorl
call
push
mov
add
lahf
fwait
ss
stos
cmp
jge
or
lret
pusha
adc
sbb
dec
aad
or
insb
and
push
das
aam
jnp
mov
jmp
xchg
xlat
or
int3
sbb
pop
sbb
leave
pop
movb
or
sbb
jns
lret
fcmovnu
push
ljmp
sub
aas
push
sub
push
jmp
push
xchg
insl
jmp
mov
jl
cmp
push
mov
sbb
jae
bound
pop
inc
and
addb
or
xlat
fisttps
jmp
adc
dec
mov
clc
fidivs
stos
outsl
std
sbb
push
dec
mov
js
cwtl
int3
or
sbb
rcll
cmp
pop
xchg
bound
fidivs
hlt
mov
dec
adc
pop
mov
test
cmpsl
sub
fistps
outsb
int3
xchg
ss
mov
repz
lds
enter
mov
mov
lret
outsb
into
fsubr
lcall
push
cltd
or
push
repnz
and
mov
mov
subb
call
and
cld
cld
iret
xor
and
sti
iret
dec
rolb
stc
shll
cli
arpl
push
push
int3
movsb
das
and
xchg
sub
int3
xor
stos
mov
mov
dec
pmulhuw
push
in
mov
mov
mov
xchg
mov
insb
push
mov
add
pop
neg
and
pushf
ret
sbb
ds
test
mov
sbb
mov
call
add
outsb
mov
add
idivl
mov
mov
sbb
sub
inc
hlt
push
leave
cmp
data16
cs
dec
mov
imul
test
fmull
ret
mov
psllq
lret
ljmp
bndstx
loop
mov
rcrl
sbb
out
mov
mov
shr
and
outsl
sbb
and
shr
lods
ljmp
lcall
or
sbb
xchg
stos
xor
mov
and
cwtl
fs
sbb
cs
dec
pushf
lret
sbb
arpl
movsb
add
pop
xchg
xchg
inc
add
cmp
rclb
movl
movlps
stos
sahf
cmp
lods
dec
jo
insl
mov
ret
leave
or
daa
xor
jl
dec
mov
cli
add
out
inc
insl
sbb
xchg
loop
aam
xor
and
inc
jg
push
scas
xchg
xchg
pop
rcrl
sbb
cmp
je
orb
jmp
outsb
or
sub
in
pusha
jge
insl
xchg
dec
jp
ret
daa
stos
arpl
fimull
sbb
cmp
or
pop
in
stos
mov
mov
adc
cmp
fsts
sbb
push
sbb
lcall
push
mov
xchg
mov
push
inc
cmpsb
sbb
jbe
or
add
mov
pop
test
gs
dec
aas
xchg
sub
dec
ja
loope
loop
and
or
ljmp
out
cltd
shrb
loop
dec
iret
add
and
sbb
aad
lret
adc
adc
dec
lcall
int
dec
dec
mov
rorb
aam
dec
popf
push
pop
dec
sub
cmp
pushf
fwait
mov
mov
jge
loopne
and
sub
add
push
sub
push
cmp
cmp
cmp
outsb
sub
sub
xchg
in
sub
out
aad
aam
push
in
jg
add
sti
mov
lea
pop
jne
dec
and
push
fcmovne
jo
imul
inc
jmp
inc
in
jle
pop
loop
inc
sub
shll
stos
mov
out
shl
or
xlat
test
pop
inc
in
pushf
lcall
pop
jp
xor
movsb
jb
cmp
or
push
cmp
outsb
add
push
add
adc
push
in
rcrb
jp
repz
aas
sub
jecxz
fidivrs
push
push
xor
je
sub
hlt
push
inc
mov
mov
push
lds
xor
add
aas
or
stos
ret
out
push
mov
outsl
xor
loop
xchg
imulb
mov
sarl
or
mov
add
sub
jmp
pushf
adc
push
cli
add
and
xor
aad
push
inc
adc
subl
iret
sbb
rol
scas
jmp
push
ret
lcall
pop
pop
jg
and
adc
fdiv
test
mov
ds
jmp
or
inc
popa
in
push
test
push
mov
inc
fst
or
mov
outsl
hlt
xchg
popf
aad
add
and
testb
sbb
cmp
adc
movsb
push
filds
mov
add
mov
bound
jle
ret
jae
xchg
jl
sbb
sub
out
add
or
sti
adcl
arpl
cmp
and
shll
sub
sarl
loop
push
gs
jb
sahf
ret
pop
add
pop
out
add
frstor
subb
rcl
jmp
popf
cmc
jge
inc
dec
or
rclb
jecxz
fidivl
shlb
xchg
hlt
aam
inc
pushf
add
sbb
sub
adc
jmp
mov
add
jle
imul
mov
cmpsb
aaa
rcll
add
arpl
aam
dec
inc
fstpt
push
inc
lret
leave
adc
sub
outsl
and
mov
dec
mov
jg
cld
add
test
dec
incb
cwtl
xor
pop
or
push
jl
popf
sti
inc
frstor
jmp
shr
dec
sub
add
jmp
cmpsl
int3
mov
mov
mov
mov
add
pop
add
popf
repnz
or
roll
jecxz
mov
adc
sub
add
mov
test
xchg
jmp
or
sub
inc
jnp
fisttpl
and
dec
mov
loop
int3
jge
jmp
rorl
outsl
lret
adc
adc
xchg
ficompl
lret
sub
mov
push
fs
push
test
push
sbb
jnp
jmp
cmpsb
jno
fbld
lods
inc
dec
push
rcrl
jo
popa
mov
cmp
dec
push
in
xor
leave
mov
xorl
dec
cld
bound
xlat
add
imul
in
cmpsl
jle
mov
stos
inc
aaa
mov
loope
movsb
push
mov
ret
add
xchg
sub
lret
call
arpl
mov
orb
mov
and
aaa
fwait
js
iret
out
lcall
insl
scas
xchg
int
push
movsl
dec
clc
sbb
sub
mov
jmp
pop
aad
and
mov
mov
rolb
sbb
adc
mov
ret
fisttpl
or
loop
ret
adc
out
scas
lret
add
xchg
repz
out
lcall
inc
fadds
scas
scas
outsb
sti
sbb
aas
pop
and
ljmp
in
pushf
aaa
stos
mov
adc
ret
stos
mov
or
pop
lret
and
cmpl
or
fxch
push
aam
leave
add
add
ret
sub
int
jecxz
outsb
arpl
jmp
xor
notb
sbb
data16
repnz
stos
rorl
pop
inc
in
arpl
scas
and
xlat
cld
outsl
sbb
push
or
arpl
jecxz
sub
cld
pop
loop
mov
push
sarb
loop
xchg
pusha
in
into
ds
fisttpl
stos
das
out
loop
into
in
jl
loopne
or
inc
sbb
pop
inc
scas
mov
xchg
pushf
in
cmp
sbb
sti
shl
add
or
sbb
andb
xchg
mov
add
push
test
mov
mov
sub
jecxz
sbb
xchg
push
cmc
stos
clc
add
mov
mov
in
and
popf
ficompl
push
push
jmp
loop
outsb
call
inc
push
dec
inc
jbe
and
sbb
sub
popf
add
and
sbb
or
popf
lds
cmc
and
sbb
xchg
lods
call
out
or
movsb
and
sbb
pop
call
jne
jge
gs
and
sbb
sbb
add
or
xor
cmp
and
and
sbb
xchg
fsubr
les
int3
popf
hlt
push
cld
inc
in
and
sbb
or
inc
mov
push
xchg
pop
call
je
jl
fs
and
sbb
xchg
adc
sbb
add
cmp
and
sbb
xchg
shr
fisttpl
ret
popf
lret
push
repz
sti
and
sbb
incl
mov
push
ret
or
int
xchg
dec
mov
add
gs
fisttpl
sub
jge
lods
or
or
pushf
xor
ljmp
add
sub
push
incl
or
xor
ljmp
ret
sbbl
pop
jp
mov
ljmp
daa
and
rcrl
xchg
stos
adc
xchg
test
xorb
push
sbb
mov
aas
movl
xchg
cs
fsubrl
lods
lods
cli
inc
dec
ret
mov
cmp
adc
mov
mov
mov
mov
outsb
push
les
fucom
jb
or
push
pop
dec
push
loop
push
aaa
cmp
add
cmp
arpl
test
lret
xlat
jno
cs
xchg
fadds
fstpt
data16
les
xor
pop
rorb
lret
lock
xchg
pop
xchg
jne
sbb
push
xchg
sub
push
jge
jle
xlat
out
fbld
xchg
stos
push
sub
fsubs
andl
cmp
push
and
mov
and
imul
jp
inc
in
mov
in
mov
das
adc
shr
mov
stos
mov
push
loopne
lret
push
push
cmp
mov
movsl
push
imul
sbb
dec
push
mov
add
mov
add
or
lods
sub
or
ret
add
sbb
or
xchg
faddl
mov
or
cmp
sub
lds
loopne
mov
push
jmp
sub
mov
sbb
lret
inc
loopne
lea
insb
sbb
ret
push
sbb
xchg
mov
daa
or
dec
aaa
gs
sub
xor
push
fimull
aam
add
lahf
add
in
cmp
dec
je
incl
repz
adc
outsl
out
xor
mov
cld
inc
pop
enter
bound
xor
les
and
test
pop
xchg
sti
or
in
jb
fldt
fldenv
jo
cmpsl
bound
mov
leave
call
pop
jb
cmc
aas
lret
mov
ja
cmc
cmc
push
imul
xor
or
add
daa
int
push
mov
cs
mov
cmp
add
xchg
movsl
and
jbe
into
insb
xchg
mov
xchg
daa
shrl
add
adc
xchg
scas
jmp
push
add
out
sub
ret
dec
cld
add
or
add
ret
or
sbb
xor
popf
add
cs
shlb
pavgw
dec
mov
cli
movsb
enter
popf
dec
lods
in
dec
add
adc
arpl
shr
outsl
and
cmp
lea
inc
test
sbb
xor
push
mov
out
cli
out
jle
inc
mov
scas
dec
movsb
shlb
inc
scas
sbb
add
and
test
insb
scas
cwtl
lods
incb
adc
pop
cmp
repnz
lea
mov
xchg
sub
imul
mov
lea
lods
sub
mov
xchg
sub
xchg
mov
subb
mov
lods
mov
xor
or
fmuls
ret
cmp
add
xor
mov
inc
cmp
int3
add
inc
mov
mov
adc
clc
push
mov
adc
sub
sbb
lds
cwtl
jno
cmc
fxch
ja
dec
mov
movsb
insl
fldl
cs
in
xlat
xor
mov
add
arpl
lods
lret
lret
push
or
dec
imul
mov
lret
pop
rcr
in
or
xor
and
pop
imul
insl
mov
test
loop
pop
sahf
popf
mov
xor
adc
mov
mov
pop
push
out
pop
rclb
enter
mov
test
ret
in
insb
jae
pop
mov
jmp
xor
cld
insb
lcall
jl
into
add
mov
mov
and
add
jb
iret
orb
clc
into
lds
mov
mov
and
mov
fidivs
int3
dec
push
cli
pushf
aam
cltd
scas
in
dec
xor
inc
xchg
and
sbb
test
jg
gs
or
mov
scas
enter
or
mov
add
iret
stc
out
adc
mov
insl
out
xchg
in
ss
ret
test
sub
cmp
fimull
inc
fsubr
loop
test
mov
sub
push
cmp
pop
xchg
std
ss
in
push
aad
sahf
arpl
out
repnz
test
adc
xor
xor
pop
and
loopne
in
sub
addr16
jb
push
cmp
int3
in
in
call
lcall
lock
add
lock
ljmp
outsl
outsl
fwait
xor
mov
jle
jns
scas
subb
push
mull
das
movsb
out
mov
dec
mov
imulb
lods
cmp
lret
es
push
inc
mov
push
ja
adc
aaa
and
sahf
dec
or
sbb
mov
sbb
jmp
mov
sbb
sub
imul
arpl
outsb
add
xor
test
lret
adc
adc
push
sbb
mov
mov
loop
daa
bound
or
mov
fsubrs
or
std
and
ljmp
adc
dec
xor
ret
adcb
xchg
int
pop
xchg
or
xor
mov
mov
test
arpl
push
loop
mov
mov
adc
bound
xchg
nop
jl
sub
adc
cld
test
repnz
test
pop
rol
dec
pop
mov
dec
insl
enter
pushf
mov
imul
adcl
outsb
sbb
mov
ss
push
add
mov
loope
sbb
pushfw
adc
in
cmp
xchg
sbb
jg
sbb
sbb
test
lods
jle
stos
sub
sahf
int
jmp
movsl
pop
mov
mov
in
mov
sub
add
lret
in
fcomp
push
mov
loope
sub
sbb
enter
test
mov
xchg
adc
xor
in
arpl
jle
sub
xor
cs
sub
or
sarl
push
lods
sbb
xor
ret
stos
dec
aam
jae
lods
push
mov
mov
sbb
add
out
sub
pop
loop
add
ss
adc
ds
dec
cwtl
xchg
ret
leave
push
sbb
or
xchg
test
andl
psrld
rclb
inc
outsl
add
push
mov
xor
aam
fwait
jns
or
cmpsb
jne
mov
mov
ljmp
mov
pop
in
mov
mov
stos
add
insl
fwait
xor
add
ret
insl
movsb
call
outsb
sub
sub
mov
in
push
in
je
adc
inc
or
xchg
int3
mov
xchg
arpl
test
daa
mov
lods
fisttpl
or
or
add
sub
mov
xor
aad
ret
inc
call
sbb
add
and
cmp
lahf
add
or
ret
sbb
sub
and
sub
stos
or
je
mov
mov
pop
adc
fucomi
in
mov
out
or
inc
ret
sub
orl
xor
insl
scas
outsl
pop
out
push
or
sub
or
jg
or
mov
outsb
mov
or
lea
or
ljmp
pushf
cmp
xor
dec
xor
mov
orb
adc
or
pop
and
cmovl
aad
cmc
dec
fmull
dec
andl
mov
xor
outsb
jecxz
es
sbb
or
dec
or
ret
jmp
call
loop
pop
loop
pusha
loop
and
mov
scas
out
int3
shr
in
sub
js
cs
push
push
jo
out
imulb
push
dec
xchg
sub
xchg
sub
test
addr16
stos
sbbl
addr16
into
add
xchg
int3
jge
into
push
dec
sub
rorb
into
fimuls
push
test
in
sub
sub
into
dec
push
nop
shlb
jnp
jl
outsb
dec
mov
cmp
pop
test
dec
cwtl
loop
enter
enter
or
push
arpl
and
pop
pop
mov
or
push
mov
aas
jg
add
dec
push
inc
mul
jne
or
mov
cld
mov
testl
inc
dec
xchg
and
jne
mov
movsb
pop
cmc
lods
loop
popf
nop
inc
sbb
or
jge
cmp
arpl
mov
inc
mov
movsb
test
xchg
out
inc
shrb
ljmp
rcll
adc
pop
jb
inc
dec
or
sbb
orl
fildl
js
push
cmp
inc
test
jl
ret
pop
in
ret
jge
shl
or
cmp
dec
adc
rorl
in
in
pop
sbb
pusha
fdivl
int3
lods
nop
cmp
lods
and
xchg
sbb
data16
les
fbld
lcall
lret
mov
mov
pop
jno
insb
add
nop
ss
jecxz
inc
cld
hlt
xchg
add
insb
jb
dec
mov
cltd
mov
push
cli
push
pop
aaa
pop
ffree
pop
xchg
pop
popa
mov
rorb
sub
scas
stos
or
test
incb
outsb
cwtl
mov
daa
jecxz
inc
sub
mov
cli
in
add
fsts
lea
movsl
cmp
xorl
les
cld
dec
xchg
or
pushf
inc
xor
int
cmp
bound
dec
adc
mov
push
jmp
loop
cld
sbb
movb
aam
xlat
push
gs
data16
or
sub
lcall
mov
iret
aaa
sub
jb
ds
gs
daa
sbb
into
sub
outsl
jge
inc
lea
in
and
jecxz
push
mov
in
or
orb
pop
push
cmp
sbb
add
fisubrl
pop
dec
jle
push
sbb
jmp
inc
or
outsb
scas
cmp
loopne
adcl
adcb
fisubl
sar
loop
cwtl
cwtl
sub
mov
stos
cmpsb
inc
mov
in
fs
sbb
in
movsb
cld
sbb
lret
lods
sbb
jae
nop
out
inc
das
les
jae
icebp
jle
sbb
dec
mov
add
data16
fwait
bound
sar
jmp
mov
xorl
xchg
sub
mov
mov
movlps
ud1
iret
ss
cld
mul
fstps
test
lea
into
lcall
mov
insb
popf
in
std
test
pop
add
and
xor
in
aad
mov
jnp
cld
adc
xor
idivl
dec
imul
daa
mov
adcl
out
popf
sbb
mov
aad
xor
and
and
ljmp
aad
int
mov
push
xchg
mov
push
fistl
insb
test
push
test
push
sahf
gs
sbb
mov
imul
push
adc
add
mov
add
or
mov
pop
lds
shr
outsl
or
and
movsb
or
std
cmp
movsb
leave
jmp
ja
pop
ljmp
sbb
insl
aas
imulb
addr16
aas
sub
lret
sbb
test
mov
add
lods
mov
and
dec
test
test
out
rclb
adc
push
lret
mov
fs
in
int3
leave
or
daa
xchg
cmc
insb
cli
into
fimuls
mov
and
cmp
mov
sub
xor
and
mov
mov
adc
xor
scas
andb
shlb
lods
xchg
cld
mov
and
xchg
xchg
or
fwait
or
lds
push
call
jecxz
lret
cmpsl
lcall
movsb
or
push
fs
test
sti
push
in
add
fcomip
mov
arpl
cmpsb
inc
ret
or
or
loop
jl
lods
and
rcrb
xchg
mov
dec
adc
cld
test
gs
inc
pushf
push
xor
sbb
addr16
cmp
mov
mov
adc
sub
sbb
int3
fcoml
adc
jg
sbb
cli
in
aam
clc
fdivl
sub
and
sbb
adcl
xchg
fsub
adc
stos
into
outsb
cmp
xchg
fwait
stos
insb
xchg
lcall
add
and
out
addr16
jp
les
pushf
les
jp
fmuls
arpl
xchg
add
arpl
sbb
push
sub
cmp
mov
sub
and
int
xchg
dec
adc
test
push
mov
hlt
scas
push
sub
mov
das
mov
inc
js
mov
and
lods
and
push
mov
mov
or
sbb
cmpsb
roll
scas
mov
bound
cs
lret
dec
orb
data16
mov
loop
lea
mov
ja
dec
jae
rolb
and
jmp
dec
adc
add
xchg
jnp
add
add
pop
xor
nop
popl
mov
cmp
inc
sub
roll
add
mov
jp
jge
sub
loope
jb
sub
and
pop
or
pop
scas
call
jbe
sbb
push
xor
jmp
jae
mov
int
jmp
mov
push
mov
dec
out
stos
and
fsubl
jmp
xchg
lds
mov
or
pop
out
cld
or
mov
leave
and
jmp
sahf
in
lods
ficomps
in
or
and
jne
push
xchg
xchg
arpl
inc
icebp
or
xchg
mov
push
jge
push
jle
flds
enter
adc
inc
cmpb
sahf
scas
cmp
in
dec
or
or
ds
dec
sbb
ljmp
mov
pop
jno
cs
adc
ds
hlt
sub
mov
push
mov
rcrb
mov
mov
push
mov
pop
xchg
ljmp
arpl
sub
leave
xor
sbb
sub
pop
or
sbb
cli
mov
push
sub
jmp
lea
xor
stc
movsb
push
cs
or
xchg
dec
sbb
add
movsb
xchg
xorb
adc
add
stos
cmp
cli
sbb
xchg
jbe
test
or
sub
insl
or
repnz
xor
imul
lea
jbe
dec
adc
sbb
jmp
scas
fwait
xchg
fwait
adc
cmpsb
je
mov
mov
loop
mov
jae
xchg
adc
je
int3
mov
imul
push
dec
xchg
hlt
push
sbb
icebp
mov
mov
push
jg
dec
call
movsb
push
sub
nop
jns
mov
ja
push
lods
scas
pop
adc
push
mov
inc
fsubrp
pop
fwait
and
mov
into
jl
imul
inc
jb
pop
pop
adc
lods
jne
in
push
insb
popl
fs
jae
dec
movsb
lcall
jp
sbb
loop
fmull
jbe
add
lret
cmp
jmp
push
repnz
lcall
test
rol
inc
adc
mov
sub
dec
adc
clc
test
lret
mov
jge
or
shlb
mov
sub
xchg
stc
push
add
or
xchg
push
les
insl
ljmp
mov
cs
rorl
inc
les
lcall
xchg
mov
pop
pop
addb
jl
test
rol
in
shll
mov
sub
mov
movsb
or
xlat
and
pop
cmpsb
fisttpl
or
js
or
adc
jno
sbb
mov
inc
push
adc
test
loop
xchg
movsl
or
dec
insl
stos
lods
add
or
add
mov
sub
xor
fstpt
mov
sbb
adc
enter
enter
push
inc
push
stos
aas
lcall
mov
dec
jl
or
adc
add
test
nop
leave
jg
or
into
add
sbb
rcr
lds
sub
xchg
xchg
daa
inc
stos
repnz
pop
outsl
xchg
dec
dec
or
loopne
lahf
mov
cmp
fsubl
rol
ret
inc
outsb
loope
ret
shll
sub
jb
and
mov
push
arpl
popfw
cmp
xchg
mov
xchg
xor
push
jge,pt
mov
pushf
mov
cmp
rorl
mov
fcompl
jge
pause
shll
stos
test
loope
mov
arpl
sub
aam
sbbl
jle
je
leave
adc
int
pop
pop
mov
lods
mov
imul
cwtl
popf
imul
jecxz
cwtl
out
xchg
jmp
fcmovnu
jge
repz
ljmp
testb
mov
add
xor
jecxz
sub
loop
mov
out
xchg
xor
xor
test
addr16
dec
roll
push
dec
mov
std
jp
enter
popf
push
out
mov
jno
sbb
sub
mov
lea
mov
jmp
and
repnz
mov
mov
mov
add
pushf
repnz
fdivl
repnz
stc
jmp
rcl
push
test
in
popa
lds
js
push
fwait
stos
dec
stos
in
dec
push
pop
xor
xchg
idivb
sbb
inc
lods
out
xchg
xor
jmp
call
mov
sbb
testl
add
loop
push
adc
arpl
hlt
int3
xchg
cmc
lcall
adc
sbb
int
cmp
mov
lods
xchg
shlb
ljmp
or
jg
fwait
sahf
sbb
rol
sbb
xchg
push
dec
ret
in
arpl
cmpsb
sbb
dec
dec
das
std
mov
fucompp
mov
insb
fdivrl
dec
dec
test
lret
push
xchg
ret
cmp
or
aaa
imul
call
lods
dec
adc
jns
pop
shrl
mov
dec
or
movsb
adc
cmp
push
lods
arpl
aaa
mov
testl
test
fldcw
or
ljmp
imul
or
pushf
lret
inc
push
pop
mov
sti
mov
fimull
mov
pop
fisttps
andps
inc
jl
testl
mov
mov
enter
mov
mov
dec
and
mov
fadd
or
lea
add
ja
jb
xchg
enter
das
mul
and
mov
mov
rcrb
orl
cmp
mov
in
aam
roll
jl
movntps
sbb
or
sbb
jbe
and
mov
pop
jp
mov
cmpsb
inc
push
push
mov
jb
cld
dec
sub
jmp
pushf
mov
nop
pop
lret
sub
or
out
rorb
into
stos
neg
sub
movsl
stos
mov
inc
sbb
sub
les
lret
out
fnsave
jne
add
mov
dec
add
loop
shlb
mov
fimull
jo
es
dec
push
ds
add
mov
xchg
mov
add
sbb
les
stc
push
dec
mov
pusha
mov
pop
mov
inc
pop
in
dec
sarl
mov
int
imul
cmp
vpshufhw
les
int3
cld
mov
int
jno
cmp
inc
mov
and
jno
outsl
int3
mov
out
sti
ss
loop
xorb
test
push
jg
push
xchg
jno
icebp
cmc
int
aam
pop
fdivs
out
leave
jecxz
pushf
jmp
or
popa
movsb
xor
popa
jno
shll
fstl
out
shl
rorl
jmp
pushf
add
sbb
ret
push
add
imul
dec
scas
pop
mov
mov
pop
or
pop
push
incb
in
cmp
sbb
sub
mov
lea
or
jns
lret
leave
lcall
sub
cli
or
mov
test
and
lret
lock
adc
add
mov
and
mov
lahf
or
lcall
hlt
test
fsubrs
scas
cld
push
test
lods
ljmp
jbe
sbb
xor
loop
in
iret
in
jae
pop
fsub
fsts
rcrb
add
cli
notb
ret
repnz
mov
repnz
mov
pop
xor
test
mull
push
mov
jno
sub
mov
into
cwtl
inc
sbb
sti
loop
push
divl
das
xchg
outsb
daa
ja
adc
push
or
push
mov
jbe
call
mov
sub
icebp
xchg
xlat
push
out
int3
and
cmpsb
mov
jae
fdivr
and
xchg
call
cmc
ds
out
outsb
andb
lret
mov
ret
cltd
pop
into
xchg
in
into
mov
mov
jmp
cmpl
or
lods
pcmpeqb
test
push
sub
or
fs
or
movsb
btc
and
into
insb
or
repz
ret
add
in
lret
repnz
xorl
xchg
fnstsw
and
sbb
or
fwait
stos
pop
jmp
xchg
mov
idivb
xchg
test
dec
pop
or
pop
fmull
fs
ret
movsb
dec
xchg
call
pop
hlt
stos
add
cld
dec
aaa
xchg
xchg
loop
fildl
sahf
xchg
pushl
sub
dec
roll
into
das
pop
cmp
jne
dec
push
sbb
aam
cmpsb
cld
dec
cli
mov
xor
jmp
cmp
and
in
pop
popf
lahf
movsb
sub
xor
rolb
repnz
pop
dec
ja
orb
mov
jae
sub
or
test
xchg
ret
leave
addr16
push
or
inc
lods
xchg
cli
mov
les
in
push
add
jb
sub
and
rcl
lds
pop
insb
xor
inc
push
cmp
jl
aad
push
or
mov
inc
in
mov
lret
xorb
int
push
sub
jb
subl
testb
int3
out
incb
mov
mov
xorl
dec
mov
lret
lret
push
xchg
in
mov
dec
sbb
xor
loop
repnz
add
or
lods
ss
int
or
xchg
mov
hlt
fmull
enter
imul
loop
test
sti
pop
lods
pop
scas
dec
test
pop
push
mov
push
cli
insl
ret
jl
out
xor
and
loop
dec
xchg
ret
icebp
pop
pop
sbb
imul
int
cld
outsl
jp
dec
arpl
sub
add
stos
test
fcomps
mov
pop
or
cmp
cli
mov
mov
add
filds
xchg
and
gs
mov
mov
out
add
adc
adc
mov
sub
scas
loop
xchg
sub
aaa
xor
mov
jle
addr16
dec
ret
mov
push
shlb
push
jnp
mov
andb
ret
jbe
sub
test
xor
cmpsb
add
enter
fsubl
sbb
inc
push
xchg
adc
jno
scas
xchg
mov
push
lods
adc
mov
outsb
enter
fcoml
sub
xchg
adc
or
or
or
adc
imul
insb
push
push
mov
lcall
in
and
sub
and
arpl
sbb
call
mov
and
out
xor
loope
xlat
out
cmp
sbbl
clc
ds
xchg
scas
sbb
cwtl
mov
lret
lods
or
lods
sbb
scas
scas
mov
push
or
mov
fidivs
lods
aaa
lods
jns
adc
push
pop
pop
jbe
scas
shll
cmpsb
int
sub
out
pop
sub
mov
out
sti
xchg
andb
xchg
jmp
mov
testb
out
rcll
repz
add
divb
fisubrs
or
pop
int
les
xor
aas
adcb
mov
add
push
jo
sar
int3
flds
push
iret
stos
jbe
sti
push
or
xchg
push
loope
mov
fmuls
loopne
lcall
lods
in
mov
out
loop
cli
bound
add
pop
add
dec
enter
out
mov
es
ficoml
mov
dec
popf
inc
neg
mov
push
cmp
daa
push
pop
add
fdiv
or
pop
imul
or
sahf
icebp
out
xchg
cmp
push
jns
scas
jae
addr16
stos
testl
add
mov
out
pop
rolb
popf
xor
cmp
mov
xchg
aam
cmp
jns
jmp
xchg
mov
shrb
ret
fstps
outsl
xor
add
jmp
add
and
pop
sbb
nop
lea
cmpsb
jle
and
out
cltd
cltd
sub
dec
xchg
sub
bound
xorb
cmp
xor
cli
ss
in
inc
jne
xchg
ja
mov
jecxz
ficoms
add
movsb
cltd
scas
fisttps
xchg
add
mov
ljmp
mov
enter
fildl
ljmp
cmp
outsl
in
cmp
into
jge
aad
nop
or
or
popa
mov
dec
aas
pusha
push
jmp
lods
pushf
jb
jmp
push
inc
mov
sbb
test
mov
sub
xor
jmp
fmull
pop
mov
cmp
adc
inc
cwtl
xchg
shll
sbb
xor
jl
shr
je
subl
xor
push
adc
jae
xor
cmp
jecxz
or
cld
arpl
lock
out
mov
outsb
sbb
int
sub
cmp
out
cmc
jne
test
out
ds
add
out
push
fimuls
sub
cmp
pop
call
or
dec
pop
push
test
in
xlat
jnp
cli
frstor
lcall
mov
pop
mov
ret
jecxz
add
pop
pop
gs
cmpsb
cmp
repnz
out
insl
and
ljmp
lret
fdivrl
jae
pop
and
mov
outsl
lcall
dec
xchg
fs
mov
fs
jmp
adc
cmc
mov
jg
pop
inc
aaa
adc
jnp
push
adc
mov
test
cmp
jbe
mov
cmp
and
fwait
shr
dec
add
dec
mov
dec
ds
jo
subl
push
xlat
mov
add
bnd
adc
int
mov
call
mov
shrl
inc
cmp
and
add
mov
add
xor
fimuls
mov
test
lods
or
mov
stos
push
gs
mov
pop
jb
xchg
data16
xor
movsl
sbb
fstpl
sbb
movsl
adc
and
mov
mov
inc
jecxz
adc
mov
js
dec
push
outsl
dec
jecxz
push
call
cli
cmpsl
pop
data16
sub
sub
push
shl
pushf
jae
ret
int
into
nop
mov
shll
dec
xchg
loop
xchg
push
test
dec
xchg
into
out
shrb
loop
and
push
sbb
notb
insl
dec
aad
jecxz
inc
dec
in
test
pop
jecxz
mov
add
arpl
nop
jmp
cwtl
lcall
and
fwait
inc
push
mov
inc
and
sub
les
pop
add
idivb
xchg
or
pop
ret
sub
pop
out
je
or
sub
loop
sbb
aam
fsubl
push
dec
inc
lods
push
add
scas
pusha
imul
movsb
test
mov
aaa
dec
mov
push
insb
jecxz
sbb
cmp
adc
xchg
mov
jecxz
or
sbb
arpl
rolb
jmp
cmp
icebp
mov
loop
pusha
lods
mov
jp
test
xor
pop
mov
xchg
push
add
or
sbb
cmp
mov
pop
mov
push
cs
mov
fstl
fimull
sbb
data16
inc
pop
jbe
ret
xor
insb
xor
adc
sub
pop
push
xor
pop
pop
xlat
dec
or
arpl
push
ljmp
insb
negb
mov
sbb
bound
pop
arpl
sbb
pop
mov
pop
enter
mov
sub
enter
insl
leave
push
add
subl
jge
push
cmp
sub
imul
mov
xor
out
push
pop
aam
mov
out
movsl
jno
add
sub
out
inc
xchg
sbb
insl
repnz
mov
push
ljmp
call
idivl
mov
out
ss
cmpsl
loop
dec
test
stos
mov
ficompl
lock
sub
adc
mov
jp
fsubrl
mov
test
mov
mov
fildll
mov
mov
push
or
stc
xchg
inc
xor
xor
fistpl
gs
push
jb
lock
inc
mov
cli
inc
test
sbb
lds
inc
sbb
dec
sarl
ljmp
sarb
sub
push
inc
push
call
or
jne
xor
movsb
cmp
dec
or
fidivs
sbb
adc
add
xchg
sbb
lret
jecxz
ss
js
sbb
fisubrl
fnsave
sub
dec
dec
ret
ret
rcrl
xchg
cmc
sub
add
aam
stos
sti
mov
ss
jecxz
in
test
jmp
dec
jbe
ret
out
cmp
and
jg
loop
cmpsb
adc
mov
ret
pop
addb
xchg
into
dec
loop
push
sub
les
adc
add
ljmp
mov
sbb
jns
sub
sbb
sbb
push
cs
insb
or
push
shrb
dec
xor
sbb
dec
mov
adc
scas
xor
mov
loopne
lods
cmp
mov
out
mov
or
xchg
xor
mov
pop
pop
jmp
lret
mov
mov
leave
push
sbb
mov
sub
daa
addb
jne
rolb
add
hlt
call
adc
jge
adc
sub
dec
jb
jnp
call
outsb
dec
es
outsl
add
xor
xchg
imul
fsincos
pop
enter
jp
cld
mov
test
pushf
insb
jbe
test
test
sbb
push
inc
pop
mov
rcll
adc
or
das
call
push
mov
mov
jb
mov
insb
xorb
cltd
orl
xor
adc
xor
imul
pushf
mov
jmp
sbb
fmuls
scas
leave
jecxz
mov
insl
enter
xchg
shrb
lods
xor
jae
xor
jnp
les
pop
mov
add
cwtl
adc
lock
pop
push
push
cmp
push
jle
mov
arpl
mov
jecxz
jp
cmp
lea
rcl
enter
repz
lcall
sbb
cmp
imul
cmp
repnz
lret
test
shll
add
cli
mov
fdivrl
test
mov
loop
loop
add
cmp
cmp
jne
inc
xor
and
test
adc
rcl
test
sub
test
call
aam
in
adcl
xchg
pop
leave
les
int
imul
push
dec
hlt
sahf
les
cmp
stos
insl
mov
lea
fcmovb
shll
in
loop
adcb
lods
push
cmpsb
imul
inc
ret
aad
xchg
mov
or
jg
xchg
jp
cmp
push
jb
out
out
xchg
cs
ss
mov
mov
test
push
pop
push
imul
mov
lcall
mov
mov
int3
push
push
int
flds
dec
push
inc
cmp
shlb
mov
shll
xchg
mov
jmp
jmp
xchg
iret
and
outsl
push
aam
dec
sub
fidivl
push
jnp
out
mov
ret
outsl
sahf
pusha
mull
push
lods
fstl
cmpsb
mov
sub
arpl
pop
pushf
mov
push
out
jmp
popa
sbbb
pop
test
sub
and
pop
lock
xlat
fimull
lret
cmp
xchg
fcmovu
sub
sub
fisubl
cmpsl
mov
dec
push
pop
int
xor
push
call
sub
jae
jno
mov
xchg
inc
test
push
gs
sti
loopne
sub
mov
ret
cmp
or
out
xchg
mov
cli
loop
divl
cmpsl
xor
and
mov
add
adc
mov
movsb
push
cmp
ret
sub
outsl
mov
hlt
mov
movsb
pop
dec
inc
mov
dec
lret
test
ret
aaa
dec
xor
in
dec
sub
insl
shl
dec
fnstsw
cmpsb
push
flds
or
call
loope
fwait
loop
push
les
imul
push
cmp
jne
dec
aam
loop
lahf
pop
xchg
mov
sbb
cltd
add
cmpsl
decb
and
dec
lea
xchg
or
xchg
dec
ljmp
xor
xor
adc
adc
inc
arpl
xorb
xor
jp
mov
ficoml
xor
rolb
mov
and
mull
inc
mov
repz
lret
bound
imul
aad
push
push
insl
enter
xchg
out
mov
mov
push
pop
gs
inc
pushf
lea
lds
cmpsb
ficompl
sahf
lea
movsl
mov
xchg
mov
mov
mov
stos
enter
push
cmpsl
mov
cltd
pop
mov
or
cmp
sub
mov
cmp
ror
rcll
add
fildl
mov
dec
pop
repnz
insl
fnstenv
std
shr
movsl
int3
dec
bound
sbb
and
cmpsb
mov
push
divl
dec
leave
adc
dec
cmp
pop
inc
shll
outsl
mov
popf
dec
sbb
cmp
outsb
add
ja
std
mov
clc
iret
mov
ss
pop
fdivs
adc
cmpsb
sbb
or
xchg
test
add
jne
cmp
jne
mov
ret
ljmp
ret
mov
test
add
popa
test
sbb
sub
ds
insl
fisubrl
jo
loop
pusha
inc
inc
or
mov
popa
inc
mov
pop
lods
sub
out
xchg
mov
mov
sbb
div
jne
in
in
popf
cmc
inc
jecxz
movsb
push
addl
mov
scas
leave
sub
movsl
pusha
inc
das
mov
jns
jmp
push
xor
pusha
lret
lea
mov
pause
es
jnp
xchg
dec
test
pop
mov
ret
lods
pop
and
sub
pop
pop
and
push
jno
add
push
enter
in
pop
ret
mov
mov
ds
pop
cmp
insb
sbb
add
dec
test
popa
in
pop
add
js
mov
lods
imul
adc
jb
cmp
in
insb
jno
or
pusha
shr
enter
ret
shlb
xor
in
sbb
cs
sbb
rol
in
outsl
pop
sub
jmp
add
pop
cli
cmp
mov
fildll
lea
mov
push
or
mov
push
sahf
pusha
mov
pushf
inc
mov
in
xchg
dec
test
jns
xchg
imul
mov
push
rcll
xor
adc
push
pop
mov
mov
outsl
mov
jp
mov
or
and
sbb
repz
scas
mov
mov
stos
mov
mov
ficompl
or
cmpsb
pop
in
push
pop
lret
sub
xchg
shr
cmpsb
mov
mov
push
leave
mov
and
scas
push
mov
int3
out
sbb
aad
xor
fimull
orb
fidivrs
stos
mov
adc
shll
shlb
sbb
sub
cmp
add
sub
jno
cmp
xor
arpl
movsl
sbb
sub
mov
jg
dec
iret
subl
push
sarl
pop
cmc
push
aaa
mov
dec
aad
xchg
lods
shll
nop
jmp
test
fiadds
mov
xchg
inc
pop
popa
ds
sahf
jmp
aam
xlat
add
mov
test
inc
push
sarl
and
mov
dec
out
imull
jnp
xor
dec
popa
or
test
loop
ds
cmpsb
dec
fiadds
out
mov
xchg
add
mov
outsl
adc
sbb
mov
daa
scas
ljmp
cmpsl
pop
iret
das
out
aaa
roll
pushf
and
call
add
inc
lods
xchg
ret
cmpsl
fidivs
ss
shlb
andb
mov
push
idivl
test
pop
and
pop
jmp
xchg
das
and
mov
fwait
mov
jl
popa
pop
lods
jb
int3
push
pop
or
jge
cmc
scas
mov
mov
dec
sub
mov
imul
cmpsb
gs
add
pushf
into
adc
mov
lea
cwtl
inc
jg
cld
rolb
xlat
out
cmc
mov
shufps
cmp
movsl
sti
dec
stos
mov
lods
jmp
insl
lods
mov
enter
arpl
lahf
mov
mov
push
ret
mov
fidivs
pop
pop
adc
lcall
mov
sti
fadds
mov
jb
dec
imul
rcll
fdivl
loope
cmp
es
js
pushf
jno
push
mov
es
daa
cmpsb
inc
add
stos
mov
sahf
adc
orb
mov
mov
inc
shlb
xchg
sbb
sbb
fisttps
or
ss
fcmovnbe
cli
repnz
shlb
sahf
sub
and
jmp
addb
roll
mov
hlt
inc
mov
jecxz
arpl
subl
icebp
das
ss
push
dec
enter
jp
imulb
xor
xor
mov
rorl
jg
orb
call
ljmp
dec
or
mov
fstpl
sar
lahf
pop
inc
ss
aas
in
gs
frstor
adc
arpl
jge
insl
sbbb
lret
and
add
and
jo
scas
ss
movsb
dec
pop
cwtl
faddl
sti
ret
xor
repnz
push
adcl
xor
in
sbb
aaa
sahf
lods
sbb
adc
psrad
enter
push
xchg
dec
adc
leave
mov
loopne
loop
mov
sub
mov
mov
or
mov
push
ja
stos
push
mov
xchg
int3
shrb
inc
mov
inc
push
push
sub
adc
inc
stos
in
dec
or
push
outsb
daa
lds
rcrl
inc
mull
inc
mov
lcall
mov
pop
push
nop
sub
movsb
lret
sbb
add
cld
and
pop
adc
dec
lea
repnz
cmpsl
popf
es
mov
inc
aam
dec
adc
adc
lahf
inc
jmp
repz
mov
dec
daa
lods
jge
dec
add
cmovs
decb
dec
xchg
in
insb
lods
mov
or
push
into
fdivrp
ljmp
inc
pop
arpl
and
mov
js
sbb
and
into
arpl
push
xchg
sbb
push
nop
mov
dec
pop
pop
inc
push
sbb
adc
setle
in
repz
popa
xchg
loop
mov
or
nop
sub
push
sbbb
sahf
xchg
mov
sub
test
orb
push
cmp
call
dec
sub
xchg
popa
outsl
sub
psubq
mov
sahf
and
enter
insl
cltd
dec
pop
jb
lcall
fxch
das
cwtl
cs
push
adc
jmp
xorb
jnp
add
out
sub
or
adc
mov
pop
jne
cmp
pop
jecxz
jb
iret
and
cmpsl
cld
or
outsl
lret
cld
test
or
add
sub
scas
xor
hlt
imul
ds
cmp
and
pop
sbb
call
clc
pop
call
call
cltd
movsl
jmp
data16
dec
clc
xchg
jle
xchg
leave
inc
or
ret
lcall
sbb
mov
jbe
jge
adc
push
sbb
test
cmpsb
fldl
enter
cmpsb
int
or
pop
cwtl
mov
jge
insb
enter
int3
pop
fisubl
aad
sub
les
test
pop
pop
mov
lahf
fstps
xor
push
aas
sbb
das
stc
inc
insb
or
xchg
jmp
lods
jmp
pop
imul
fisubs
sbb
and
jmp
fstpt
sbb
popa
iret
xchg
cmpsb
gs
jmp
test
pop
ret
sub
sub
pop
icebp
jecxz
cmp
mov
popa
ja
out
notb
aam
fstpl
mov
icebp
shlb
lret
xchg
xchg
mov
ja
shrb
jmp
cmp
fwait
dec
add
jno
fisubrl
ljmp
jecxz
test
add
rcrl
or
mov
divl
sub
in
rolb
inc
push
ficompl
add
mov
dec
shlb
pop
shl
xor
repz
jecxz
addr16
fistpll
inc
fnsave
cmp
sub
mov
xchg
jnp
into
sub
rolb
add
test
aaa
sbb
int3
or
mov
sti
repnz
push
xor
add
add
adc
jo
sti
fadds
fldcw
inc
jb
or
rorl
ret
test
ss
fwait
sbb
in
mov
lds
in
movsb
mov
jp
cli
mov
sbb
add
jp
ds
mov
out
shlb
add
mov
int3
sbb
or
ret
nop
call
arpl
jno
xlat
pop
repz
push
and
push
lock
sub
lods
sbb
add
ljmp
push
leave
jb
mov
je
mov
rorb
fisttpll
xchg
lds
repz
cmpsl
ret
cmc
mov
xor
sub
ljmp
stos
or
and
sub
mov
sbb
xchg
cmp
ret
sub
aad
fildl
movsb
xchg
stos
sbb
sub
jae
jle
repnz
aam
dec
scas
and
fmull
mov
dec
or
mov
or
xor
sbb
dec
movsb
and
aaa
mov
clc
sub
adc
sub
pop
sbb
mov
and
sub
lret
xchg
daa
ljmp
stos
test
bswap
in
in
and
cmp
call
xchg
push
lds
mov
insb
insl
imul
xchg
cmp
mov
mov
push
loop
adc
movsb
jbe
ljmp
dec
or
data16
into
test
sarl
jmp
or
sti
sbb
jno
call
stos
stc
sbb
sbb
xchg
popa
sbb
bound
divb
mov
push
and
and
cmp
or
cld
mov
aaa
call
mov
or
sub
dec
jns
divb
dec
jmp
mov
and
icebp
lret
push
sbb
inc
in
mov
xor
movsb
xchg
or
push
inc
ljmp
mov
aas
mov
fstpt
scas
mov
rol
dec
xchg
push
bound
in
js
shlb
inc
mov
call
movsb
mov
int3
or
in
bound
test
sbb
push
mov
sub
jns
lock
pop
mov
dec
jmp
cltd
cltd
out
cmp
or
in
cmpsb
jo
jg
in
fstps
pusha
dec
inc
pop
jecxz
mov
or
data16
nop
or
sub
lods
lock
push
loop
or
sbb
pop
jne
adc
sub
dec
adc
sbb
sub
mov
inc
inc
mov
sbbb
clc
xchg
pcmpgtw
add
pop
cmpb
aaa
fstl
in
or
mov
sub
cmp
ret
call
mov
fbld
fidivl
dec
mov
sahf
xchg
data16
lcall
xchg
insb
les
pop
and
movsl
inc
js
push
ja
jg
xchg
enter
arpl
andb
push
enter
aam
test
xlat
push
outsb
lahf
pop
stc
lock
cmp
ss
cmp
ficomps
lods
xchg
lods
ret
outsl
sub
stc
jnp
cs
push
xchg
sbb
testl
xchg
ret
sbb
cs
jmp
repnz
loope
sub
dec
stos
cmp
cwtl
sbb
mov
jnp
das
cwtl
out
cmp
adc
imull
cmp
je
notl
push
lods
loop
loop
or
and
enter
ret
adc
mov
iret
test
sbb
inc
fbstp
jae
scas
lods
and
fs
out
jmp
lret
insl
push
sub
fcoms
ret
inc
rorb
popa
cmp
incl
jae
xchg
cmp
add
rolb
fcomps
cmpsl
stc
push
and
pop
dec
lods
xor
scas
inc
sub
dec
icebp
sbb
mov
popf
add
xchg
mov
pop
xchg
in
stos
mov
pop
and
add
js
inc
mov
test
pop
jb
clc
add
fistpl
push
jp
jle
lods
fcomip
rcr
out
or
pop
scas
inc
pop
divl
bound
sub
sub
or
xchg
hlt
inc
mov
ret
or
mov
push
nop
push
sub
add
jle
or
ljmp
jl
xchg
imul
cld
push
push
xchg
std
xchg
xchg
les
stos
cmp
ljmp
cmp
pop
stc
mov
gs
jne
jecxz
ja
jle
scas
jmp
leave
add
mov
rorl
aaa
sub
add
pop
ret
fstpt
dec
dec
out
xchg
fistl
jge
leave
mov
mov
cmovbe
cld
fidivrl
lea
rcr
popf
ss
pushf
pop
sub
inc
dec
sbb
pop
daa
test
xchg
add
inc
sub
mov
shrb
in
mov
push
cli
loop
xlat
mov
pop
pop
outsl
sbb
push
cli
push
ret
mov
adc
jns
pop
mov
cmpsb
cmpsl
ljmp
cmpsb
jp
fisttps
loop
push
roll
push
jmp
cmp
xor
or
loop
cmp
push
push
inc
dec
pop
ret
add
sbbb
cwtl
std
loop
mov
test
psubd
xor
xchg
sti
cld
mov
mov
clc
add
imul
xchg
mov
pop
sbb
out
cmpsb
icebp
adc
xchg
cmp
sbb
int3
les
in
or
imul
pop
idiv
fs
cld
mov
jecxz
add
nop
sbb
mov
mov
cmp
repnz
mov
push
outsb
lret
dec
jb
addr16
xchg
cmp
cmp
shrb
imul
ss
pop
movsl
andl
xchg
les
stc
lret
dec
sub
cmp
lods
or
mov
push
sub
or
and
and
test
ds
mov
rcrl
scas
out
xor
roll
mov
mov
call
mov
iret
jge
inc
call
or
or
sub
daa
lcall
or
mov
push
rclb
cmp
sbb
movsb
push
inc
or
out
int
push
jno
jle
sbb
jg
cmp
mov
sbb
sub
loopne
gs
data16
mov
pop
dec
push
fs
push
xor
sbbb
push
jge
pop
je
das
stc
mov
mov
test
aas
lret
in
sbb
xor
insl
mov
mov
loop
inc
or
sahf
popf
out
sub
daa
in
std
in
paddq
imul
das
aaa
data16
jo
push
movsl
insl
mov
das
loop
das
dec
cmp
icebp
in
jo
lea
js
into
test
addr16
mov
das
test
add
cs
adc
lret
ds
sub
ljmp
inc
insl
push
jl
shll
test
cmp
mov
mov
daa
ret
sub
call
pop
jb
jmp
pop
pop
insl
add
into
test
add
xchg
and
or
jmp
inc
and
mov
and
std
fldcw
lods
lods
loop
sbb
cli
mov
or
sbb
shl
xchg
mov
test
arpl
lret
sub
shrb
add
or
loop
ds
andl
scas
jae
jns
xor
dec
xchg
sub
inc
pushf
pusha
arpl
addb
mov
mov
aad
xchg
lahf
jecxz
push
fsubrp
test
jnp
jge
fisubrl
int3
mov
jb
jg
sub
mov
int3
arpl
pop
adc
testl
inc
cltd
gs
cs
nop
imul
jno
int3
test
scas
mov
mov
mov
xor
outsl
xchg
push
clc
cld
test
cwtl
loopne
imul
add
jne
mov
mov
into
adc
pop
popa
push
shl
ss
lods
test
insb
notl
int3
popa
fwait
popf
adc
test
mov
jne
pop
mov
mov
rcrl
sbb
std
loope
mov
ja
out
adc
pop
mov
iret
and
sub
loop
lods
jnp
rcrl
and
lcall
clc
lods
mov
dec
mov
or
mov
push
ljmp
xor
and
xchg
cmp
stos
add
mov
or
inc
loope
jb
cmp
in
inc
repnz
or
in
mov
and
push
push
jbe
push
mov
xchg
sbb
cmp
adc
scas
sbb
or
sub
add
test
ss
shrl
cmp
cmpl
inc
xchg
sbb
adc
subl
int3
int
test
xchg
andl
lods
aam
in
aas
add
push
push
dec
push
cld
repz
sbb
sbb
repnz
mov
stos
cmp
ljmp
in
lods
shlb
jecxz
lret
pop
lahf
mov
sub
mov
testb
pop
inc
sub
mov
fcomps
in
ret
loop
movsb
or
or
or
imul
int
ret
jecxz
push
std
sub
nop
inc
rcrl
xor
mov
imulb
mov
rcl
jae
into
xchg
insb
filds
push
sti
nop
adc
scas
sarb
jnp
les
dec
lods
dec
pop
sbb
mov
dec
cmp
cmpsl
in
in
inc
xchg
xchg
push
cmp
pop
push
lret
add
je
shlb
adc
ljmp
bswap
add
dec
ds
inc
sbb
testb
dec
test
jg,pn
sahf
inc
sub
or
test
fisubl
add
ss
add
jle
cs
mov
fisttps
cltd
mov
adc
lretw
rcrl
negl
dec
jmp
and
inc
std
in
mov
gs
push
ds
push
cmp
add
test
sbb
push
lahf
pop
mov
xlat
inc
imul
xor
pop
mov
xor
adc
sbb
push
cmp
popf
pop
and
and
in
in
hlt
inc
aam
add
xchg
lcall
jnp
add
xchg
mov
lock
pop
or
push
or
into
insl
sub
and
scas
test
or
lcall
dec
and
sub
roll
sbb
jp
cmp
cltd
push
pop
stc
out
fcoms
sbb
loop
cmp
and
test
fnsave
xchg
push
adc
mov
mov
rcrb
lods
popf
aaa
test
jmp
in
in
adc
xor
push
xor
mov
in
daa
lock
jo
cmp
add
ret
test
pop
or
mov
cltd
push
adc
sbb
jnp
jo
inc
pusha
in
adc
out
mov
mov
push
shll
add
fadd
adc
sub
shrl
jb
cmp
add
dec
adc
mov
or
adc
stos
push
xchg
and
push
in
sahf
mov
test
call
iret
jno
lcall
inc
lock
mov
or
shll
mov
adcl
mov
mov
lahf
xor
in
lahf
push
iret
inc
jg
sub
movsb
push
call
mov
in
aad
adc
cmp
fidivrl
mov
std
xchg
jecxz
cld
or
dec
sarb
sub
pop
enter
sub
jmp
mov
jne
outsl
add
lret
cmc
out
push
js
ljmp
push
or
mov
fstpl
andl
arpl
shll
mov
stos
shlb
cltd
mov
lahf
insb
dec
movzwl
shlb
mov
in
clc
push
out
jge
std
add
or
dec
outsb
jns
mov
lcall
lcall
and
jnp
jge
test
jl
pop
mov
mov
in
add
jbe
ljmp
and
dec
pop
sbb
mov
push
jbe
je
xchg
push
mov
out
inc
cli
and
inc
ds
jecxz
in
mov
cmp
mov
and
and
xlat
fidivs
js
in
sub
aad
scas
call
dec
mov
je,pn
outsb
mov
adc
imul
leave
xchg
or
jp
fs
mov
loope
push
jl
movsl
mov
mov
inc
xchg
push
scas
out
std
mov
mov
add
pop
lcall
push
jg
xchg
in
sub
jecxz
or
jmp
test
loop
sub
mov
mov
lahf
jp
and
aas
sub
mov
lcall
jge
in
pop
loop
mov
ss
movsl
testl
cmp
stc
insb
cmp
xchg
movsl
ljmp
leave
pushf
xor
cli
pop
leave
jp
cmp
mov
bound
mov
xorl
xor
xchg
and
subl
lret
inc
adc
addr16
jl
ljmp
jno
mov
mov
cmp
fmull
xlat
lods
fists
test
shr
repnz
xchg
xchg
or
mov
xchg
inc
scas
movsb
and
cmpsb
mov
fxch
push
pop
push
sbb
or
les
cmp
stos
jnp
mov
scas
lret
imul
sub
xor
or
or
xchg
lret
mov
faddp
imul
mov
push
push
andb
cmp
imul
pop
jae
add
or
mov
clc
adc
push
lcall
in
push
mov
adc
adc
xor
scas
cli
push
nop
or
adc
insl
xchg
loope
add
repnz
cli
sub
fld
cmp
data16
stos
cmpsl
mov
stc
out
mov
sbb
dec
les
imul
dec
add
mov
mulb
test
xor
pop
xchg
mov
mov
fstpl
das
mov
sbb
push
jecxz
push
in
or
sbb
mov
jo
rcrl
xchg
cltd
jmp
and
insb
pop
cmp
fisttpll
jo
dec
lret
fstpt
add
inc
lock
mov
lahf
pop
ds
xor
and
mov
sarl
inc
insb
test
xor
mov
mov
sub
mov
jmp
dec
stos
scas
bsr
loope
and
sub
pop
inc
push
ljmp
pop
and
push
adc
call
aas
lods
rorl
test
mov
jle
sbb
mov
xchg
lret
or
pop
repnz
pushf
shr
mov
jmp
pop
dec
mov
or
aaa
and
arpl
mov
imul
inc
sbb
sub
es
leave
xor
ret
inc
aas
xchg
fcompl
out
xor
inc
xor
pop
lret
dec
scas
push
sub
js
dec
ret
cmp
adc
in
pop
jecxz
mov
and
mov
xor
cs
fcoml
push
cmpb
add
roll
or
lea
inc
stc
sub
mov
mov
ljmp
or
adc
jecxz
rol
fmul
xchg
jle
dec
aas
mov
adc
mov
xchg
cwtl
mov
xchg
mov
xchg
jl
and
dec
in
sub
inc
shll
es
inc
or
data16
lea
jp
shrl
pop
pop
movl
popa
bnd
fwait
shl
add
xlat
addl
add
in
jo
sti
cmp
data16
xchg
add
pop
dec
xor
jne
xchg
shl
iret
ja
adc
stos
rol
lret
int3
xchg
dec
jnp
add
xor
bound
mov
jb
dec
jbe
xor
pop
jecxz
scas
xchg
dec
mov
clc
push
mov
xchg
or
cli
or
and
les
or
inc
or
or
push
push
xor
cmpsb
popf
fnstsw
jne
xor
into
xorl
mov
imulb
cmp
aas
and
xchg
dec
lcall
mov
pop
push
dec
fnop
adc
pavgw
shlb
jmp
fidivl
jg
mov
std
faddl
jp
sub
and
or
pop
ds
ret
in
stos
push
sti
sub
fldenv
xchg
xor
repnz
dec
faddl
ds
in
jo
push
lret
and
cld
shll
or
cmpsb
push
mov
imul
aad
inc
sbb
jmp
mov
lods
push
divl
mov
inc
push
call
jl
int3
int3
fmul
mov
fadds
loopne
ds
aad
subb
jg
xchg
xor
pop
shld
mov
cltd
pop
mov
fmul
cmp
out
sbb
in
pop
xchg
push
lds
sub
mov
ja
mov
ljmp
mov
adc
sbb
icebp
cld
adcl
adc
lea
or
hlt
and
in
sub
loop
xchg
imul
stos
mov
push
adc
pop
push
stos
test
lret
stc
insb
test
jecxz
cmp
addb
adc
adc
loop
cmp
lret
cltd
mov
jecxz
data16
ss
lea
mov
adcb
into
push
testl
xchg
xchg
hlt
jl
xor
ss
jmp
jl
ja
faddl
int
sub
xchg
mov
jbe
ss
out
dec
inc
mov
xorb
imul
inc
sbb
dec
or
push
fisubrl
out
jne
adc
pop
inc
aad
mov
out
mov
cmp
sub
in
scas
iret
movsl
aad
or
ss
mov
fistl
mov
push
mov
dec
in
xor
xchg
sub
mov
jmp
push
scas
clc
jo
pop
nop
jp
cmp
mov
push
mov
sbb
scas
push
outsl
inc
les
scas
sub
ret
cmpsb
mov
add
dec
cli
xor
adc
jle
imul
inc
gs
mov
push
in
xor
push
jne
outsl
call
sub
in
leave
js
jp
femms
pop
add
xchg
into
dec
xor
and
sub
mov
pusha
shll
mov
test
fwait
out
stos
test
sahf
mov
sar
dec
jo
mov
xchg
dec
repnz
xchg
mov
loop
enter
lret
int
or
xchg
pop
in
aam
mov
fidivrl
ljmp
mov
addb
int
inc
mov
pusha
clc
mov
inc
inc
xchg
cmp
sub
jle
or
dec
dec
das
push
or
mov
mov
or
add
stos
pop
sub
dec
int3
and
lcall
testb
ret
test
leave
std
jb
icebp
shl
mov
sbb
xor
or
int3
or
push
loop
add
lea
hlt
inc
and
dec
test
adc
sbb
cmp
sbb
je
stc
mov
lock
hlt
sub
outsl
push
mov
aaa
mov
sub
insl
sbb
adc
inc
ss
mov
push
xchg
cmp
aad
mov
test
inc
sbb
adc
sbb
xor
cmp
pop
insl
pop
lcall
push
repnz
scas
call
push
mov
sahf
cmp
into
inc
xor
pop
mov
iret
stos
mov
xor
jmp
ja
retw
sub
push
jecxz,pt
lret
fistpl
xor
std
xor
out
sbb
sbb
enter
pop
in
mov
mov
jmp
and
and
sti
es
insb
adc
call
adc
add
push
cmpsb
arpl
lcall
pusha
pop
dec
mov
scas
cmp
inc
dec
test
adc
add
pop
stos
dec
jmp
mov
hlt
pop
fst
pop
adc
mov
repz
sub
lock
add
add
lret
mov
lock
in
mov
xor
repz
sub
cmp
add
cmp
stc
shrb
mov
popf
sbb
mov
rcrb
scas
mov
pop
adc
push
data16
cld
jo
scas
ss
jmp
mov
mov
dec
mov
xchg
iret
out
dec
les
insb
fwait
clc
mov
xchg
push
push
js
jb
mov
adc
stos
rcll
test
je
or
hlt
jecxz
mov
outsb
leave
jecxz
add
adc
push
gs
dec
cmpsb
push
lock
cld
jg
sahf
and
rcrb
adc
pop
or
mov
xor
jl
in
push
adc
mov
xor
jae
sahf
or
mov
movsl
imul
shrl
push
lods
imul
push
lcall
push
testb
adc
or
xchg
jmp
sbb
arpl
in
ljmp
dec
call
mov
inc
lds
scas
adc
or
push
shrl
test
push
imul
sahf
mov
loope
aad
jae
mov
imul
xor
pop
jno
mov
cmpsb
mov
rol
shll
lds
and
adc
push
dec
add
lahf
cli
and
fists
ret
and
sahf
jmp
pop
cmpsl
or
icebp
outsl
mov
inc
jle
sub
sbbl
les
scas
mov
and
shll
les
rorl
and
mov
sbb
cmpsb
cmp
test
pop
dec
sti
enter
in
push
sub
inc
ss
jb
mov
enter
mov
mov
xchg
sub
jle
mov
sub
addb
bound
mov
pop
cwtl
andl
aaa
adc
stc
fimull
inc
mov
and
in
adc
inc
loope
sbb
xor
mov
sbb
out
in
mov
xlat
mov
test
mov
leave
arpl
pushf
lock
loopne
shrl
mulb
arpl
jae
mov
xchg
leave
add
dec
imul
stos
or
fcmovne
cmpl
mulb
xchg
ret
mov
push
cltd
or
and
ljmp
int3
push
xor
add
gs
mov
sbb
adc
rcrl
daa
mov
or
xchg
sub
inc
fsub
stc
not
dec
inc
insl
movsb
push
movsl
idivb
add
repnz
adc
fstpl
cltd
cmovs
push
cmp
popa
push
pop
or
loop
push
int3
xchg
sahf
cmp
mov
cwtl
inc
dec
rcrl
push
aaa
inc
and
outsl
or
outsb
mov
xor
push
xchg
outsb
cli
ficoms
scas
push
divps
dec
nop
sbb
cltd
outsb
mov
jbe
aaa
decb
std
sarb
int3
sub
in
mov
push
test
push
mov
push
scas
cmp
in
movb
in
arpl
cmp
or
xor
das
or
xor
add
imul
lahf
push
or
xor
mov
sub
fimuls
xchg
push
dec
lods
lods
icebp
pop
push
xor
ja
sub
out
and
inc
or
mov
enter
push
test
shrb
orb
sahf
inc
sub
shl
movsl
mov
nop
rorb
and
jbe
push
les
push
adc
addr16
xchg
xlat
adc
in
outsb
test
cmp
xchg
cmp
and
sub
push
loope
xor
inc
scas
mov
sbb
lods
add
loop
sub
add
jnp
out
rorl
lods
jmp
out
fisubrl
mov
cmpsb
jmp
popf
lods
push
inc
fdiv
inc
ljmp
roll
loope
aaa
int3
ret
inc
adc
jge
sub
cmp
addr16
push
lret
repz
jbe
mov
out
jns
sahf
push
mov
leave
movsl
lds
jae
ja
or
pop
mov
lea
fstps
jb
pushf
shrb
bound
shll
iret
xchg
lock
jge
pop
lods
out
push
mov
sti
out
and
scas
push
or
mov
std
lods
sub
push
xor
sbb
and
pop
insb
xor
repnz
lahf
shrl
insb
das
or
cmpsb
enter
out
incl
adc
dec
stc
out
std
jecxz
cmp
lret
xor
mulps
cmc
mov
lods
pushf
mov
insb
ret
insb
aam
sub
and
or
movsl
mov
testb
fwait
je
mov
and
mov
mov
or
or
pop
pop
test
cltd
in
pushl
xchg
or
rcll
in
sub
rcr
ret
jle
into
mov
dec
push
test
adc
xchg
mov
push
dec
sbbb
fistl
or
cmpxchg
out
adcl
int
loopne,pn
jl
mov
bound
repnz
xchg
mov
add
or
or
in
jnp
lea
sbb
jbe
cmp
mov
in
fmul
push
js
jno
jmp
in
outsb
mov
jge
add
xchg
cmp
lcall
ja
push
sub
pushf
inc
or
shlb
push
ret
out
roll
iret
es
mov
adc
ja
stc
sub
sbb
je
fisubrs
out
add
push
cwtl
aam
into
sarl
push
lods
hlt
or
pop
push
scas
pop
cmpsb
aad
jne
pop
add
icebp
bound
push
scas
dec
in
cmpsl
push
pop
fcomps
lods
add
ret
xor
mov
dec
sbbb
call
in
shl
sbb
xchg
outsb
xor
imul
jg
xchg
test
mov
inc
js
rorb
xchg
sarb
jg
pushf
popf
test
rcll
adc
or
lret
pop
and
jne
pop
jae
inc
cltd
sbb
rcll
push
mov
aad
add
into
nop
pop
lret
fimull
push
dec
insb
in
shll
jge
cmp
mov
lods
lds
lea
mov
mov
jae
rcrl
int
stos
or
and
in
xchg
and
insb
scas
push
or
movsl
dec
or
test
jnp
jl
push
cmp
lret
pop
jno
pop
adc
adc
lock
sarb
mov
and
sub
adc
aam
adc
mov
stos
lret
ret
and
enter
or
jecxz
adc
sbb
neg
movsl
inc
pop
dec
gs
or
dec
pop
jmp
in
adc
inc
shlb
mov
mull
sub
mov
or
add
inc
jno
and
mov
mov
push
xchg
dec
push
ja
sbb
jp
arpl
gs
pushf
xchg
fdivl
xor
or
punpckhbw
data16
dec
jecxz
cwtl
orb
xchg
out
sub
adc
std
sahf
inc
mov
ja
pushf
inc
sahf
inc
jmp
mov
mov
mov
cmp
and
shl
dec
dec
mov
adc
xor
cmp
push
aaa
call
in
jb
rorb
xlat
pop
ds
push
jg
movsl
int3
fisttps
jne
mov
dec
das
nop
push
cli
ss
sbbb
sub
adc
push
sub
mov
nop
mov
push
lcall
lcall
jmp
lcall
cld
adc
sbb
mov
outsl
jo
fcmovb
pop
mov
mov
inc
iret
shlb
sub
lods
sbb
clc
test
pop
fldt
dec
sbb
add
sarl
out
test
adc
push
lahf
adc
push
test
and
mov
loop
sbb
movsb
test
scas
xchg
hlt
push
cltd
lods
xchg
loop
sub
out
cmp
outsb
cmp
pop
xchg
sbb
mov
in
mov
movsb
push
outsb
xor
or
xchg
aad
mov
in
stc
test
xlat
sbb
or
mov
out
dec
mov
aas
sub
mov
adc
pop
and
ret
jb
outsl
mov
in
xchg
add
cltd
add
xchg
dec
jle
in
push
aad
andb
mov
out
testl
push
mov
xchg
ret
stos
in
mov
fisubs
ret
call
and
ljmp
adc
inc
and
jo
push
pop
sbbl
mov
cmpb
xchg
adc
out
xor
out
or
pop
sub
movsl
xchg
xlat
sbb
mov
xor
jl
and
loop
mov
or
test
cmpsb
push
pop
sub
xor
out
bound
ljmp
mov
xor
sub
out
jne
fists
outsb
insb
push
test
add
adc
dec
out
adc
in
nop
and
mov
pop
insb
fcmovb
jb
or
mov
inc
bound
data16
or
sub
pop
sub
jbe
xchg
loope
imul
pop
test
pop
or
dec
shrl
pop
pop
in
scas
mov
loop
shll
dec
sbb
adc
or
out
dec
sahf
movsb
shl
stos
pop
adc
daa
mov
push
cmpsb
loope
jb
adc
out
mov
jp
inc
in
into
ds
mov
cmp
mov
in
mov
hlt
aad
popf
push
in
jae
lea
jne
mov
and
mov
pusha
xor
test
gs
pop
jl
sbb
cmpsb
xor
in
repnz
test
add
xor
and
aas
xchg
nop
cld
mov
and
mov
lods
xchg
dec
push
xchg
cli
mov
std
cmp
pop
in
xchg
cmp
outsb
loop
in
scas
addl
jns
insb
xor
jg
ret
in
js
mov
fcomi
sub
repz
insl
insb
test
nop
xchg
push
push
imul
and
jae
ret
mov
cld
mov
cmpsb
or
movsb
inc
mov
xor
les
outsl
rolb
and
fstpt
js
fwait
les
dec
inc
mov
sub
inc
push
jmp
std
or
push
call
cmpsl
pop
push
shlb
subl
jmp
pop
scas
push
icebp
fimuls
mov
pop
cwtl
movsb
cmp
dec
ds
jb
push
shl
mov
adc
scas
add
sbb
fisubrs
cs
or
push
call
push
sbb
cli
fdivrl
jp
or
aad
lods
hlt
jb
in
out
and
inc
ljmp
ret
out
and
jae
test
loop
mov
stc
pop
fimull
dec
ret
push
mov
call
sti
jne
jno
bound
dec
mov
mov
jmp
push
sbb
xlat
mov
aad
push
inc
mov
ja
jle
imul
je
jne
jne
add
aaa
outsb
int3
popa
stos
fsubrs
inc
fldenv
ucomiss
push
mov
in
xor
mov
mov
fcmovbe
leave
push
xor
dec
lods
fdivrs
cltd
in
fwait
xchg
dec
lret
stc
push
shrb
loop
push
sbb
jle
xor
inc
push
test
dec
mov
xlat
inc
mov
imul
movsl
aam
push
call
ds
jne
push
stos
fnclex
lret
or
mov
fbstp
loop
lods
daa
jbe
bswap
inc
loope
cmp
mov
leave
push
sub
test
std
add
out
sub
imul
leave
adc
push
or
mov
test
mov
into
adc
fnsave
jnp
and
dec
popf
push
or
fstpl
lea
imul
xor
sbbl
or
and
mov
arpl
xchg
les
add
jp
test
jecxz
mov
or
arpl
scas
pusha
lods
rorb
rcrl
mov
jno
nop
push
lret
push
pop
out
cmp
outsl
lcall
movsl
mov
xor
jo
jl
iret
out
lea
add
scas
in
out
lea
adcb
in
scas
sbb
adc
shlb
imull
sbb
and
cmp
lcall
mov
xchg
ret
lods
or
mov
mov
jecxz
mov
or
insb
or
push
mov
or
test
push
in
dec
fwait
lret
insb
sub
jmp
lods
mov
xor
fisubl
push
or
leave
int
xchg
cmovo
int
in
push
jb
call
jmp
sub
hlt
das
mov
lret
arpl
push
ja
scas
sub
push
jnp
sbb
cmpsb
test
cli
psubusb
cmp
sbb
stos
scas
out
dec
fwait
enter
call
test
mov
sub
leave
into
cmp
sbb
clc
mov
fiadds
cmp
sbb
or
arpl
inc
stos
and
add
jecxz
ret
stos
mov
insb
sbb
out
or
in
sbb
mov
cmp
sub
sub
cmp
xor
or
or
stc
addr16
and
jae
dec
outsl
and
or
lret
int3
js
sahf
mull
add
mov
xchg
xchg
mov
mov
cld
adc
push
adc
push
mov
in
push
xchg
and
out
push
and
sub
loope
out
scas
or
popf
xchg
stos
push
sub
push
adc
scas
inc
inc
push
sbb
sbb
scas
aam
adc
or
adc
push
sbb
xor
inc
popf
sub
adc
mov
imul
dec
cld
stos
call
outsb
push
push
loop
push
and
sub
inc
sbb
outsl
scas
mov
leave
or
popf
push
stos
test
xchg
sub
or
adc
hlt
loop
push
and
sub
shlb
jmp
add
ret
mov
sbb
sub
stos
orl
mov
mov
stos
and
sbb
sub
int
jo
inc
adc
push
loop
push
addl
xsave
out
jecxz
popf
mov
ret
loop
sbb
sub
or
cmp
adc
inc
lret
push
sbb
stos
add
out
pop
or
adc
push
ljmp
mov
mov
xor
adc
push
sub
stos
cs
adc
sbb
sbb
scas
out
insl
or
popf
ja
dec
and
jnp
adc
xchg
dec
sbb
push
dec
cmp
mov
outsb
fcoms
jbe
movsl
je
lods
cmp
xchg
mov
add
in
mov
stc
in
aad
jg
and
mov
sub
daa
and
lods
adc
divl
lret
add
test
cmp
xchg
and
or
pop
lods
outsb
in
popa
insb
mov
and
dec
xor
and
aam
movsb
push
mov
ret
out
test
fisttpl
jae
aad
adc
push
mov
test
enter
lret
mov
cld
imul
in
push
nop
dec
ret
push
test
xor
mov
in
mov
mov
repnz
jecxz
aaa
dec
mov
test
jecxz
lods
pop
push
out
stc
mov
mov
lods
adc
repz
shrb
aad
cli
icebp
adc
jmp
test
cwtl
jg
arpl
loope
mov
pop
xchg
rolb
sti
sub
aad
or
aas
dec
mov
or
das
in
adc
and
mov
popf
adc
mov
or
sbb
aad
xor
adc
jnp
adc
jnp
add
mov
xchg
xchg
or
lock
out
push
movsl
ficompl
mov
rolb
and
jge
js
arpl
out
sub
fcompl
sbb
mov
pop
inc
shrl
inc
cmp
mov
sub
push
sub
loopne
into
cld
rorl
push
lret
in
push
pop
cs
xchg
orb
stos
or
jbe
adc
add
mov
or
hlt
adc
in
pop
cmp
movsl
cmc
cmp
ljmp
in
sti
xlat
fsubl
adc
scas
sahf
into
lock
daa
outsl
loop
shrl
in
dec
rcrl
loop
ljmp
jbe
fld
lods
clc
mov
push
xor
or
scas
pop
jbe
dec
or
fnsave
dec
ds
xchg
jo
addb
jnp
xchg
cmpsb
sbb
mov
jecxz
cmc
insl
fiadds
push
imul
fs
in
fisttpll
dec
dec
push
bound
add
xor
sub
aaa
jecxz
dec
mulb
stos
xchg
sub
daa
in
jns
repnz
sub
mov
mov
mov
enter
jmp
inc
and
sbb
mov
in
xchg
in
stos
out
out
ret
aam
mov
push
into
aam
cmp
jecxz
test
stos
test
inc
add
xchg
xchg
ret
arpl
sub
lods
sub
sub
sub
cltd
aad
ljmp
jl
sub
or
out
je
outsl
or
cmp
and
xor
or
insb
mov
test
test
out
or
and
test
sub
xor
aad
lds
lret
or
int
cwtl
out
sbb
rcrl
leave
mov
dec
outsb
shl
jb
ljmp
ss
jmp
imul
push
mov
inc
fnstsw
shrb
scas
lret
push
sbb
mov
push
stos
mov
adc
or
outsb
sbb
popf
test
lods
loopne
gs
jmp
jp
cmp
sbb
stos
cli
clc
sbb
bound
cmp
dec
xlat
loop
iret
insl
pushf
test
mulb
or
jmp
xchg
in
aaa
sbb
or
sub
xchg
sahf
mov
cmc
daa
nop
xchg
sub
add
dec
ljmp
jno
loop
push
jl
insb
fildl
lret
loop
mov
fwait
lods
or
dec
out
dec
sbbb
icebp
bound
das
add
test
xor
pop
cld
jp
xchg
mov
sbb
lea
out
loop
incb
mov
scas
or
dec
stos
imul
jne
outsl
stos
jp
mov
lods
push
fs
ljmp
scas
mov
jns
jbe
dec
in
aam
add
data16
xor
loopne
jl,pn
leave
push
push
lods
cmp
add
call
pop
xchg
push
add
fistpl
mov
sbb
ficomps
shll
es
dec
mov
movzbl
jno
mov
loop
xor
xchg
xchg
push
out
push
out
fists
xor
xchg
test
test
movsl
in
in
and
jmp
bound
sub
mov
in
sbb
gs
jp
inc
notb
push
adc
loop
and
in
lods
mov
inc
popf
dec
rcll
mov
cmpsb
in
movsl
sub
imul
add
pop
and
jge
dec
adc
add
jno
or
aad
vmwrite
dec
add
or
xor
inc
xor
lcall
push
mov
in
xchg
or
dec
mov
push
cli
pop
cmp
enter
jecxz
add
push
and
lock
and
int3
or
ds
xor
mov
in
les
sahf
shrl
pushf
or
or
jmp
lea
jae
fisttpl
sahf
leave
imul
loopne
neg
fmull
add
mov
jmp
test
xchg
popa
sub
ret
popa
push
add
or
ja
hlt
and
std
loop
mov
lahf
mov
sub
test
int3
hlt
in
pop
mov
sarl
xchg
adc
in
outsb
sahf
xchg
dec
push
mov
mov
xchg
fwait
add
mov
lahf
out
mov
andl
cli
adc
not
sahf
addl
adc
test
enter
and
pop
lods
out
mov
xor
fldt
ret
sub
cmp
xchg
dec
shr
repz
cltd
insb
mov
sarb
sbb
push
add
lods
mov
lods
sahf
mov
add
fcom
xchg
ja
mov
inc
xor
and
cmp
xchg
sbb
xor
mov
sbb
or
adc
mov
mov
ljmp
add
bound
lods
scas
imul
xor
sarl
fdivs
xor
mov
cld
xor
repnz
iret
in
fstpt
lret
cmp
repnz
cli
jmp
inc
call
mov
ljmp
insl
insl
arpl
es
sub
lods
add
addb
imul
lods
push
add
imul
ljmp
pop
add
or
enter
imul
lea
ds
jmp
and
out
imul
fwait
sub
xchg
scas
repnz
jmp
shrl
mov
or
mov
push
sbb
sbb
sub
xor
xor
scas
add
dec
test
stos
mov
dec
fs
iret
xor
mov
fsubrs
lret
in
add
mov
xchg
jmp
rcr
subb
ret
dec
cld
mov
repnz
and
fcmovu
int3
mov
xor
adc
sti
mov
stos
movsb
stos
xchg
icebp
je
mov
pop
inc
lock
ret
loop
pop
sahf
imul
rorl
push
imul
inc
out
shrb
push
ret
ss
test
addl
cmp
popf
push
iret
push
jae
pop
jnp
or
jbe
sub
add
or
or
pop
ljmp
dec
push
sbb
out
ljmp
add
decb
int3
lcall
mov
sbb
pop
adc
or
mov
into
fdivl
xchg
pop
lods
nop
pop
push
cmp
lahf
jecxz
or
repz
rcrl
ficompl
ret
mov
lret
je
leave
dec
repz
sti
pop
cld
fs
mov
loopne
call
or
leave
cltd
cmpl
insl
arpl
loop
lret
and
mov
xor
imul
jo
mov
shlb
sahf
imul
sbb
sahf
fdivrp
add
sub
icebp
test
jp
and
lods
xchg
xorb
add
jecxz
push
ja
lods
and
push
repnz
add
inc
loop
inc
or
int
push
add
adc
mov
aam
xchg
dec
sub
into
ret
xchg
in
bound
sbb
stos
in
ljmp
add
scas
in
sbb
jo
add
lahf
bound
jp
ljmp
in
scas
xchg
jmp
ficompl
push
lea
push
lcall
push
push
sub
mov
lret
int
aam
enter
pop
mov
dec
iret
dec
sbb
xchg
or
sbb
pushf
movsb
xchg
mov
mov
pop
and
cltd
inc
add
insl
adc
add
mov
pop
pushf
sahf
out
aad
in
mov
outsb
sub
sahf
sub
sub
arpl
scas
sbb
mov
test
sbb
dec
mov
int3
or
xchg
std
push
mov
lods
inc
push
cld
and
aad
sbb
aam
je
add
mov
outsl
add
test
jmp
or
movsb
fnclex
and
or
push
sbb
cmp
push
insl
arpl
fisttps
pop
fbstp
inc
hlt
push
jae
or
sahf
jnp
xchg
movsb
push
push
jnp
pop
jne
inc
mov
jne
jae
cmp
adcl
lahf
sub
sbb
addr16
repz
jle
xor
jmp
mov
call
xor
xchg
adc
lret
cmpsl
sbb
adc
iret
addr16
xor
insl
and
adc
int3
and
aam
dec
shlb
sub
hlt
sahf
ss
movsl
lret
mov
mov
jecxz
cmpsb
dec
or
repz
out
jecxz
test
jmp
pushf
test
movsl
xlat
mov
push
lret
jnp
mov
repz
pushf
xor
int
push
fs
cmp
xor
push
mov
gs
je
lahf
add
mov
sub
jae
loop
pop
shrb
int
dec
xorl
mov
pop
mov
or
repz
insb
jne
push
out
pop
xor
xchg
inc
rcrb
mov
adc
xchg
sbb
xor
add
int
jl
sarb
pop
lods
popf
int3
xlat
sub
arpl
cmovle
ds
mov
jnp
scas
sub
cmp
rclb
mov
xor
scas
cmp
sbb
das
xlat
sbb
in
pusha
or
cmp
scas
pop
cmp
ret
and
jl
pop
fs
push
mov
imul
lods
imul
dec
mov
pushf
xchg
scas
mov
sbb
sub
lret
test
push
addb
es
push
ljmp
inc
or
iret
cmpsl
test
hlt
xor
cmp
lcall
cmc
enter
mov
fisubl
adc
into
jle
dec
fnstsw
or
orb
mov
loop
push
lea
cs
cli
out
mov
stos
repz
xchg
jne
lcall
or
push
int3
push
mov
xchg
imul
nop
pop
rcrb
inc
mov
dec
shr
jae
sbb
dec
and
push
sub
bnd
inc
adc
lods
out
sub
int3
loope
mov
addr16
sbb
sub
lea
out
xor
push
cmp
lahf
jecxz
xor
iret
dec
pusha
sti
rorl
lret
outsb
stos
mov
test
shlb
jmp
call
pop
inc
fs
lret
sti
cmc
pop
mov
insl
addr16
or
in
subb
inc
or
sbb
outsb
mov
mov
add
fildll
dec
or
test
lods
loop
ljmp
loop
mov
dec
add
outsl
xchg
ljmp
into
aam
mov
or
cmp
or
call
xor
mov
dec
push
lods
cmpsb
sbb
xorb
ljmp
ljmp
jmp
mov
mov
mov
xchg
std
les
fsubrs
ss
pushf
mov
into
subb
ljmp
and
iret
insb
in
pop
into
shrl
add
sub
insl
jbe
into
sbb
sub
mov
bnd
sbb
bound
cs
dec
or
into
xchg
mov
repnz
pop
pusha
lahf
lock
push
in
cmp
pushf
int
dec
in
jo
cmp
push
mov
clc
ljmp
push
jbe
sbb
loop
push
and
out
rcl
lods
loop
or
fisttps
and
cmp
sub
loop
or
imul
jne
ljmp
dec
fs
sub
mov
mov
dec
adc
fnstsw
push
call
scas
pop
cld
outsb
dec
stos
das
ds
or
xor
mov
mov
ss
mov
in
daa
push
and
xor
fmul
dec
clc
pop
aam
cltd
push
into
mov
adc
test
pop
shr
enter
nop
dec
repnz
jae
mov
or
and
lahf
adc
insl
jbe
fcmovnu
jp
add
subl
jmp
rcrb
shr
ret
movsb
scas
lret
pop
sub
mov
ss
stos
ficompl
xchg
mov
andl
jmp
repnz
in
xor
popf
stos
cmpsb
xor
outsl
or
dec
sbb
scas
push
xor
shl
xor
aad
xchg
xor
or
or
dec
sub
cmp
dec
add
ljmp
arpl
lods
or
push
mov
xor
or
jmp
rcr
into
outsl
ja
adc
push
cs
les
pop
mov
add
sub
cmp
or
xchg
faddl
mov
cld
sub
sub
outsb
mov
test
sbb
sub
stos
pushf
xchg
les
inc
dec
xchg
push
xor
aas
fcompl
repnz
xchg
add
das
dec
inc
js
mov
jmp
ficoml
cmp
scas
xchg
cmp
sbbb
ljmp
mov
je
loopne
call
pop
pop
arpl
pop
sub
sbb
push
jl
inc
call
cltd
aaa
jmp
ficompl
adc
sbb
push
push
test
sbb
dec
and
add
lahf
dec
in
push
cmp
xor
pop
cmp
push
out
jecxz
mov
mov
jmp
rcrb
shr
mov
sub
in
int
adcb
or
and
xchg
mov
clc
push
pop
jecxz
sub
add
test
cmpsb
stos
test
push
jmp
shlb
jg
jle
add
push
outsb
jecxz
stos
cmp
mov
cmp
dec
lock
and
aam
in
sbb
jge
call
mov
or
mov
jge
xchg
jle
push
lods
gs
loop
stos
xor
mov
sub
cmp
mov
orl
pop
or
ret
jecxz
testl
xor
and
dec
ljmp
repz
push
lods
adc
sub
adc
iret
ss
mov
dec
pushf
xlat
push
into
cmp
divl
mov
in
mov
arpl
imul
adc
pop
nop
jae
cli
lahf
jnp
mov
mov
es
add
insl
adc
mov
or
mov
xchg
mov
popa
aad
mov
scas
idivl
lcall
cltd
fisttpl
shr
lret
jne
repz
sub
lea
dec
stos
jo
mov
fwait
nop
scas
lea
push
ss
mov
lahf
mov
call
stos
mov
fldt
inc
dec
cmp
jo
fiaddl
mov
mov
int3
aaa
outsl
stos
cld
lods
dec
out
call
xlat
and
xchg
sbb
sbb
out
loop
sub
inc
jmp
adc
mov
call
mov
into
jbe
and
mov
ret
in
mov
ljmp
pop
or
dec
cmp
ret
or
ds
test
sahf
push
xor
xor
add
cs
dec
mov
cmp
lods
pop
push
aad
jmp
cmc
jnp
adc
out
shll
mov
scas
mov
mov
out
mov
push
lods
pop
scas
repz
push
pop
jecxz
dec
mov
sub
fstl
mov
das
cs
push
sub
mov
insb
sub
out
movl
pop
dec
out
popl
iret
inc
mov
out
sbb
inc
lret
xchg
jecxz
xor
addr16
fs
mov
es
shll
jbe
ret
adc
out
jno
movsl
xor
mov
jb
fwait
mov
in
sbb
add
out
lods
sbb
cmp
mov
add
jmp
sahf
shl
lods
inc
sahf
xor
mov
jp
rolb
cmp
out
jno
mov
push
sbb
clc
pop
rol
jecxz
jae
add
push
test
pop
cwtl
cmpsl
push
mov
fwait
sarb
test
or
adc
adcb
sub
aaa
add
inc
sub
loop
test
xchg
mov
xchg
gs
dec
mov
int3
loope
pop
mov
jg
hlt
scas
mov
sbb
ret
imul
aaa
push
mov
rcr
add
xchg
or
dec
pop
add
mov
sbb
mov
aas
lea
outsl
outsl
leave
jnp
pop
mov
imul
jmp
ja
outsl
dec
icebp
sarl
sahf
add
and
and
pop
int3
clc
cmc
popa
inc
sahf
push
nop
pop
test
cwtl
push
fcoml
in
add
enter
rorl
add
pop
sbbb
push
out
dec
lret
and
sbb
ljmp
fmull
ds
mov
ror
xor
ljmp
scas
out
adc
test
mov
lcall
add
js
lcall
ds
pop
sahf
add
arpl
loop,pn
gs
jmp
jns
lret
and
out
push
and
fistpl
jmp
and
arpl
aaa
sbb
lods
and
xchg
jmp
mov
xchg
int3
test
ss
lret
xchg
jg
lret
sub
jae
rorb
mov
sbb
addb
mov
stos
push
cltd
popf
cmp
jge
dec
cmp
shll
fistpl
lret
dec
or
pop
pop
ljmp
xor
xor
in
pop
sbbl
cs
xlat
lret
fstps
loop
dec
mov
addr16
jmp
push
and
add
xchg
dec
movsb
movsb
jp
cmp
sbb
jg
loope
daa
push
cmp
and
ds
pop
fistps
out
mov
leave
mov
and
and
mov
popa
ret
inc
add
sub
push
adc
cmc
xchg
jb
xor
sbb
mov
push
mov
sub
and
jnp
xchg
iret
or
xchg
cmp
mov
dec
jecxz
mov
mov
cmp
push
cmp
fimull
outsl
insb
jecxz
call
add
hlt
ds
lods
xchg
scas
repnz
push
jmp
push
inc
push
cmp
cli
pop
dec
lret
test
dec
fiadds
rol
xchg
dec
cmpsb
adc
sahf
cld
dec
sub
or
and
lods
jge
in
ret
inc
dec
jne
inc
fadds
int
add
dec
sbb
pop
push
sub
ds
mov
push
jb
cmp
ucomiss
and
call
arpl
test
jbe
sbb
aam
add
stos
lods
movsb
jp
scas
movsl
add
pop
ret
pop
cltd
hlt
push
pop
js
jmp
in
push
sbb
or
xchg
sbb
stos
mov
mov
dec
or
jmp
add
mov
lcall
stc
fsubrs
fs
lahf
jnp
cwtl
pop
sbb
imul
arpl
or
shl
call
xchg
mov
mov
add
pop
lret
push
aaa
pusha
pop
and
push
rcll
ss
sub
movsl
mov
call
pop
or
push
or
mov
out
pop
ljmp
cmp
cs
mov
lds
cs
jae
or
insb
xor
divl
dec
and
ficomps
push
shr
mov
push
rcl
cmp
outsw
sub
jge
outsb
in
icebp
cmp
or
mov
bound
xchg
pop
mov
cli
mov
stos
pushf
js
fldt
add
pusha
ss
mov
inc
lods
repnz
sub
push
js
cmpsl
add
cmp
jp
adc
sbb
mov
andl
pop
ret
xchg
mov
leave
adc
mov
or
push
add
xor
mov
das
gs
inc
mov
adc
repnz
fstpt
jns
xchg
and
lea
shrl
xlat
jmp
js
fdiv
fcmovb
in
mov
in
bnd
xorl
lea
es
sub
xchg
clc
pop
pop
test
mov
inc
imul
rcrl
or
fcmovu
pop
aad
sub
dec
mov
jle
sbb
mov
jecxz,pt
xor
or
inc
xlat
and
jb
mov
test
lods
inc
mov
fs
ljmp
xchg
mov
xchg
push
or
roll
out
loopne
popf
adc
mov
repnz
dec
xor
and
sbb
repz
adc
mov
adc
sbb
pop
stos
pop
mov
cmp
sti
gs
addr16
dec
adc
je
dec
std
out
add
or
cmp
in
jno
fs
dec
xchg
or
and
outsl
js
push
fcom
arpl
addb
sub
push
test
inc
sbb
xchg
inc
paddsb
mov
inc
and
icebp
xor
dec
adc
adc
xchg
stos
add
inc
mov
sets
mov
or
into
mov
fwait
xchg
mov
rorb
mov
insl
inc
pop
mov
lret
mov
adc
jae
ficoms
add
push
inc
mov
pushf
ret
cmpsl
repz
jl
mov
xor
mov
dec
cmpsl
inc
ret
xor
pop
push
cmp
cmp
ficoml
sub
cs
jg
lods
movsb
divb
dec
dec
mov
sub
xchg
data16
jge
das
lcall
dec
into
xor
repz
mov
mov
lods
jmp
lods
cs
push
jns
dec
pop
fimuls
or
xchg
aam
sarl
and
push
push
xor
xor
mov
dec
or
insl
sub
ss
mov
push
daa
sbb
icebp
cmp
and
push
incb
arpl
mov
arpl
sub
add
insb
in
sbb
sub
movsb
mov
sub
inc
dec
jbe
out
out
add
adc
std
pop
ljmp
cwtd
xor
stos
jp
movsl
int
mov
lods
call
and
xchg
test
adc
xchg
or
mov
out
xchg
jmp
mov
jae
cmp
lea
lcall
add
in
mov
mov
sbb
dec
ret
outsl
add
int3
cwtl
shlb
mov
in
fldt
out
dec
sbb
movl
xchg
push
cmc
pop
and
sbb
cli
mov
sbb
scas
scas
adc
mov
inc
cmp
movsl
out
dec
lahf
sub
push
cmpsb
addr16
pop
out
loop
and
fcoms
xor
in
les
enter
push
or
enter
cmpsl
adc
loope
jl
testl
rcrb
inc
jg
sbb
arpl
dec
xchg
adc
inc
outsl
imul
rol
scas
aam
into
sbb
push
inc
sub
push
and
outsl
cli
xor
inc
mov
cld
sbb
fisttpl
pop
xchg
sbb
in
fistpl
sub
out
repz
lds
xchg
in
lea
movb
or
jmp
rcr
pop
push
cmp
push
cmpps
add
xchg
or
addr16
mov
ret
cmp
or
gs
addr16
aaa
pop
mov
mov
clc
sbb
adc
push
push
dec
inc
shr
cmp
lret
mov
rclb
andb
mov
les
or
xchg
sahf
lea
in
xor
mov
inc
lods
and
cmp
and
outsb
push
sbb
cmp
rolb
push
lret
mov
bound
cmp
jle
insb
movsb
scas
sbb
sbb
dec
or
test
inc
enter
pushf
inc
pop
dec
dec
in
push
cmpxchg
sub
mov
sti
loope
or
fwait
sbb
add
in
mov
lahf
jne
xlat
mov
out
dec
or
jecxz
jb
in
push
or
loop
pop
addb
enter
or
das
push
and
xchg
flds
pop
xchg
push
add
cld
xor
lea
sub
push
outsb
jmp
out
loop
ficoms
outsb
mov
clc
call
lea
lcall
in
scas
mov
mov
icebp
mov
pop
stos
xchg
push
test
ret
add
call
xor
cli
aam
call
mov
pop
inc
cmpsl
dec
or
fwait
mov
sbb
ret
inc
xchg
sbb
sub
jmp
mov
dec
call
leave
out
adc
cmpb
pop
adc
sbb
addl
call
cltd
leave
cwtl
rcll
rclb
sub
cmpps
pop
sub
sub
pop
daa
gs
add
enter
push
rcll
jbe
dec
add
negl
dec
sbb
mov
xchg
push
mov
mov
sbb
aad
xchg
push
shll
into
xor
notb
aas
and
movsl
ret
ljmp
and
lds
cmp
jge
out
call
out
loopne
jl
int3
push
imul
mov
mov
and
or
push
sbb
lock
and
loop
pop
ficoml
jp
adc
mov
add
in
les
push
in
dec
leave
fisubrl
inc
lcall
sbb
lods
sbb
subb
inc
or
sbb
pop
into
or
mov
ja
or
mov
push
cmp
mov
js
adc
aam
cmp
loop
bound
push
movsl
out
mov
push
jnp
je
mov
or
stos
inc
dec
ret
sbb
ret
or
mov
jno
push
jno
xchg
aad
xchg
and
mov
outsl
fcompl
inc
xchg
add
dec
outsl
xchg
jo
cmp
dec
or
scas
sub
mov
pop
dec
mov
nop
mov
and
popa
xchg
imull
stc
mov
jne
mov
jecxz
inc
imul
sbb
leave
mov
xor
scas
inc
mov
int
jl
push
dec
sbb
test
xchg
leave
push
and
lahf
int3
scas
jecxz
in
scas
lret
fwait
inc
adc
stos
repnz
fmul
arpl
pop
or
push
dec
xor
xchg
fs
pusha
push
fmul
mov
sbb
pop
andb
adcb
aam
lock
dec
out
push
mov
cmp
test
mov
scas
std
jo
mov
fwait
mov
xor
lcall
data16
ljmp
pop
dec
xchg
push
movsb
repnz
inc
aad
mov
mov
mov
cmp
lcall
or
jmp
pusha
sbb
xor
inc
add
inc
inc
repz
mov
sub
dec
add
pop
aam
mov
popa
rorl
jbe
mov
mov
and
sub
inc
sbb
es
or
sub
fsubr
incb
dec
xlat
int3
aas
or
insl
mov
scas
lret
in
arpl
sbb
adc
jns
push
les
xchg
mov
sahf
loop
push
jo,pt
scas
xor
loope
push
mov
mov
add
sti
xor
andl
inc
insb
jo
cli
ss
ja
jge
das
cmp
fwait
cmp
es
sarl
mov
ss
mov
or
xor
in
push
push
pop
sub
rorl
dec
out
imul
dec
sub
xchg
jecxz
stos
add
xchg
mov
subl
add
jno
xor
xor
shll
push
inc
cmp
pop
pop
int3
rorb
div
or
xchg
or
fimull
dec
ds
cmpb
mov
add
movsl
push
sub
rol
jne
int
xchg
cmp
fnstsw
push
leave
or
scas
out
add
sbb
mov
push
xchg
and
pop
dec
cmp
pop
das
dec
mov
fistpl
mov
or
mov
lcall
sub
pop
in
and
cmp
sbb
dec
push
or
cmp
scas
push
sbb
dec
sub
movsl
enter
push
mov
inc
pop
mov
adc
ret
cmp
inc
fwait
mov
iret
cmp
sbbb
imul
mov
pop
adc
imul
xchg
mov
js
push
outsb
or
cmp
mov
xor
pushf
push
in
adc
int3
dec
bound
adc
call
stos
mov
xchg
inc
cld
ss
imul
ljmp
cmp
jae
mov
scas
call
sar
shrb
pop
cmpsl
ret
lds
out
push
mov
push
cmp
push
ss
scas
gs
nop
xchg
incb
sub
pop
xchg
xchg
sbb
fisttpl
mov
sub
popf
ss
into
ffreep
fcmovnu
movsb
mov
push
push
loope
test
mov
gs
out
lods
imul
pop
xchg
aam
in
sti
add
sub
cmp
pop
xchg
test
ret
ds
ret
int3
lret
imul
adc
call
sub
in
or
jmp
idiv
jae
arpl
push
sub
sti
pusha
push
test
lret
pop
adcl
gs
lahf
add
jb
or
or
jle
or
dec
sub
adc
sti
in
push
xchg
jbe
in
inc
or
inc
clc
ret
jp
ja
pushf
imul
testl
dec
adc
arpl
imul
shll
scas
out
addl
fisubl
cld
sbb
fisubs
mov
adcl
sub
lods
lds
loop
insl
jge
jne
lea
insl
jecxz
mov
hlt
pop
fimull
mov
xor
pop
xor
js
in
jbe
cmpsb
popa
pop
ja
sub
movsb
and
cmpsb
jns
mov
adc
adc
mov
enter
movsb
fadds
ret
jg
scas
sbb
repz
add
push
js
sahf
mov
mov
and
pop
dec
punpcklbw
nop
xchg
stos
jmp
sbb
jmp
and
push
loop
fsts
add
push
aam
jb
test
jbe
cmp
mov
push
shl
sub
mov
xchg
arpl
js
jmp
ret
in
sub
les
ljmp
jno
mov
movsl
fistpl
xchg
call
ss
cmp
outsw
into
jmp
fdivrs
jl
mov
mov
mov
jnp
xor
dec
ljmp
cltd
aam
fiaddl
xor
ss
add
adc
lea
ret
repnz
push
fadds
ficompl
rcl
cmp
sbb
dec
and
jp
call
mov
dec
mov
mov
fsubrs
loop
xchg
adcb
dec
inc
ja
xchg
jl
and
push
mov
int3
arpl
mov
mov
sub
jg
les
jmp
pop
notl
ds
dec
cmp
movsb
in
lret
ljmp
jle
lea
adc
fwait
ret
in
sub
xor
or
imul
adc
inc
push
jmp
fs
dec
cmp
pushf
lods
xor
or
sbb
mov
arpl
inc
lea
dec
and
test
pop
scas
lea
jg
loop
jg
mov
inc
push
in
mov
sbb
mov
xchg
xchg
dec
iret
or
xor
or
cli
xor
cld
ret
or
push
jb
movsl
loop
pop
lret
push
xchg
jmp
stos
and
jnp
sub
jl,pn
mov
sub
inc
lods
enter
push
pop
idiv
mov
loope
dec
or
mov
iret
mov
mov
sbb
popa
imul
pop
pop
sti
lods
aad
mov
test
pushf
add
and
ret
cmp
lods
or
sub
rcrl
and
jae
dec
jl
or
test
push
divb
push
cmp
push
enter
stos
cs
cmp
push
aad
in
mov
test
inc
popa
int3
imul
and
push
repnz
inc
bound
mov
sbb
lcall
jno
lea
mov
mov
stos
fidivl
sub
cld
cmp
lret
sub
adc
push
jmp
mov
rcr
fnstenv
xchg
subb
xor
or
sub
jmp
cmp
mov
ljmp
out
cmpsb
pop
ret
dec
pop
in
ljmp
stos
sti
add
je
sti
mov
ret
mov
imul
out
dec
mov
mov
sar
dec
cld
inc
fisttpll
mov
ret
push
add
adc
jno
inc
xchg
shlb
xchg
sub
aaa
xchg
adc
adc
xchg
cmp
push
test
and
or
movsl
out
sbb
pop
push
xor
dec
pop
stc
xor
out
insl
xchg
or
insb
mov
lcall
stc
dec
or
leave
mov
push
stc
ss
sti
xchg
gs
scas
mov
stos
inc
mov
dec
insl
mov
push
xchg
mov
sub
or
adc
fwait
int3
test
cmpsl
aas
or
push
sub
push
and
in
mov
jl
ret
sbb
xchg
cmc
mov
pushf
mov
push
xchg
mov
dec
mov
add
ja
and
outsl
push
int3
push
loopne
loopw
test
add
test
mov
outsb
cmp
out
adc
in
mov
sahf
dec
jmp
icebp
pop
movsb
adcb
fcmovnbe
jge
sbb
call
lret
mov
mov
sbb
and
jmp
mov
adc
sbb
sbb
ror
nop
jae
adc
rcrl
int
mov
arpl
repnz
out
or
call
jo
cmp
or
sbb
xchg
repz
cmp
mov
mov
mov
push
lret
cli
mov
fwait
roll
cmpb
mov
sbbl
sti
out
outsb
lea
aaa
jno
in
call
outsb
xchg
or
loop
cmp
or
lock
in
fst
insl
push
or
loopne
in
and
mov
mov
pop
pop
push
adc
js
mov
and
ficoml
mov
lret
and
lahf
in
sbb
rcll
or
jecxz
pop
lahf
pop
mov
lret
pop
and
jne
jb
mov
fadds
sub
ljmp
mov
lcall
loop
ljmp
cli
sbb
in
or
je
pop
lds
int
movsl
out
sbb
mov
ljmp
pop
xchg
cwtl
push
lea
dec
pop
jmp
xor
pop
or
loop
adc
movsl
pop
xor
es
sti
push
in
push
out
repnz
idiv
sub
mov
add
adc
add
insl
insl
push
fdivs
sbb
and
hlt
test
mov
mov
adc
out
out
xchg
jmp
stos
xor
dec
sub
les
imul
and
ret
and
or
in
imul
mov
insb
pusha
jae
hlt
jge
sub
enter
xor
insb
inc
pop
xor
lcall
shr
nop
xchg
bnd
sbb
xchg
and
fldt
or
sti
adc
fistps
ds
into
sbb
dec
ja
pop
sbb
loopne
out
lods
insl
push
fcoms
testl
jge
sub
cltd
ficomps
mov
adc
aam
jecxz
iret
jno
gs
push
imul
aam
loop
inc
xchg
mov
mov
cwtl
xor
or
je
sarl
dec
fdivrl
int
mov
loop
jno
jmp
pop
subl
lods
xchg
sbb
pop
and
shl
adc
pop
ret
ret
mov
dec
mov
or
in
lcall
das
push
pop
popf
mov
in
and
js
loopne
leave
pushl
jmp
lods
movsb
xchg
sbb
sub
jo
cmpb
je
xchg
scas
inc
adcb
adc
adc
lahf
dec
cmp
adc
pop
dec
cli
push
or
mov
adc
xchg
push
mov
stos
sbb
push
or
in
aad
pop
out
fcmovnu
sub
lods
mov
sub
cmpb
das
xchg
in
imul
hlt
ret
sbb
mov
movsb
arpl
addr16
inc
sbbb
xchg
jmp
push
sbb
out
inc
xchg
aad
mov
push
fisubl
push
mov
mov
popf
ret
arpl
out
lods
fwait
cwtl
pop
dec
lods
pop
in
sbb
pop
data16
in
jge
cwtl
jb
sub
scas
mov
aad
jmp
cmp
jmp
mov
cmp
sbb
jp
aam
mov
xor
add
movsl
fnstenv
adc
mov
in
jmp
mov
xorl
movsl
ja
dec
sbb
dec
push
mov
push
mov
dec
ljmp
testb
and
mov
jne
push
out
popa
addb
push
push
sbb
mov
push
xchg
in
jecxz
movsb
ljmp
hlt
mov
mov
shr
mov
adc
inc
sub
repz
in
lahf
fisttps
hlt
dec
int
insb
mov
in
jl
sub
lods
aam
clc
das
push
xchg
pop
add
xor
test
aaa
lds
sbb
aad
and
adc
aad
outsb
mov
xchg
sub
lea
fildl
or
mov
inc
lahf
mov
cli
arpl
and
in
fmull
lret
ss
je
mov
xor
aam
popf
mov
jno
call
adc
rcrb
cld
push
call
mov
hlt
movsl
in
decb
test
push
insb
movsl
in
or
mov
icebp
jnp
hlt
jle
enter
cmp
in
jne
mov
insb
pop
int3
mov
xor
in
clc
int3
int
dec
add
pop
cmp
lcall
sahf
or
jmp
aad
mov
scas
lods
pop
mov
std
mov
xchg
inc
pop
dec
push
mov
aad
jne
inc
in
sbb
pop
inc
and
test
pop
ret
nop
stos
insl
mov
out
mov
jo,pt
iret
nop
jne
xchg
test
push
psrlw
and
add
dec
in
lcall
mov
add
aad
aad
pop
mov
mov
xchg
movsl
std
jbe
or
ds
cwtl
shrl
push
sahf
stos
xor
call
adc
push
testb
int3
xor
aad
mov
dec
scas
cmp
aad
sarb
lcall
dec
movsl
lcall
aaa
sub
aad
in
adc
push
popf
mov
cmpsb
imul
pushf
push
inc
push
and
mov
or
loop
imul
lea
xchg
mov
mov
jnp
ljmp
pop
mov
dec
pop
jb
pop
lea
sbb
jbe
lods
sbb
adc
mov
scas
cmp
in
jbe
add
rcrb
mov
jae
push
in
mov
loopne
test
mov
hlt
outsb
pop
arpl
jecxz
outsl
repz
cmc
pop
mov
jecxz
and
cld
mov
jl
test
inc
scas
jmp
pop
leave
sub
dec
ror
inc
dec
nop
ljmp
lods
pushf
cmp
enter
mov
outsb
enter
lock
fisubrl
scas
mov
in
test
dec
inc
mov
add
mov
mov
jbe
ljmp
dec
or
movsl
loope
je
pop
xchg
dec
mov
dec
and
push
loop
lahf
and
nop
enter
push
and
or
in
add
sbb
push
in
stos
insb
loop
or
repz
dec
iret
out
mov
ret
dec
mov
adc
or
lods
movsb
test
mov
and
pop
out
or
add
sbb
xor
mov
adc
insl
sub
add
sbb
les
lods
push
out
ljmp
in
pop
stc
addb
bound
mov
into
mov
ret
lods
into
inc
lea
imul
pop
scas
shll
ljmp
mov
lea
int
in
in
fucom
pop
outsl
or
mov
int
test
dec
test
fsubl
pop
daa
mov
aad
clc
insb
mov
scas
mov
shll
push
shlb
fstps
dec
fdivrp
out
imul
lcall
mov
push
dec
jb
insl
iret
jo
scas
sbb
test
incl
dec
test
call
xchg
mov
xlat
and
xchg
lods
insb
mov
lret
je
stos
fs
push
fsubrs
ljmp
mov
push
les
fstpt
je
fdivp
xchg
pop
outsl
dec
xchg
sub
dec
adc
add
xor
decb
in
xchg
dec
dec
push
push
mov
sti
ljmp
cmpsb
stos
xchg
imul
leave
into
dec
add
jae
ja
mov
leave
sub
adc
mov
leave
jno
inc
loop
mov
cmpb
mov
cmpsb
jp
aas
sti
add
lea
mov
mov
sub
repz
subl
stos
pop
mov
pop
mov
mov
xchg
mov
andb
mov
ljmp
mov
orl
mov
sbb
lahf
pop
add
roll
pusha
lock
fildl
or
adc
ret
lods
popf
push
jne
fsubrp
ja
fisubs
int
out
call
sbb
test
adc
movl
xchg
and
jnp
push
and
pop
sub
sbb
add
sub
jge
xor
cmp
push
jecxz
sbb
mov
fldt
add
sbb
jne
or
int
mov
into
push
lret
ficompl
movsl
xchg
into
les
in
ljmp
movntq
out
into
jae
jg
push
lods
add
and
jecxz
jmp
stos
and
arpl
adc
or
mov
sti
adc
pop
lret
dec
sahf
rorl
mov
lret
dec
pop
lds
fnsave
lahf
mov
mov
mov
xor
aam
mov
int
jp
and
je
add
or
and
push
xchg
insb
push
imul
leave
addr16
insl
or
es
das
movsl
add
aas
add
push
inc
ds
pop
jo
cmp
ljmp
aaa
cs
movzbl
xchg
lods
xchg
pop
rcll
pushf
mov
cmp
stos
adc
icebp
lea
add
push
into
test
stos
or
or
mov
into
bound
scas
or
test
lret
xchg
ljmp
repz
in
out
in
jne
dec
add
loope
push
scas
insl
mov
cmp
movsb
lea
loop
dec
adc
or
xchg
out
xchg
inc
sub
mov
aam
mov
xor
nop
imul
mov
loop
inc
ss
ret
xor
popa
pop
cmp
xchg
fnstenv
mov
mull
lea
push
cmc
scas
daa
or
cs
sbb
cmp
int
adc
aaa
push
add
mov
push
loop
divl
mov
enter
sbb
mov
push
lret
mov
adc
jmp
jecxz
pop
dec
jge
leave
dec
jmp
push
rcr
lahf
fstpt
lret
bound
fisubrs
mov
and
adc
sub
inc
xchg
stos
xchg
into
jle
xlat
pop
xlat
push
aaa
jp
pop
cwtl
shl
out
fwait
jbe
or
cmp
and
repz
lds
pop
mov
mov
xchg
push
das
ret
stos
pop
sbb
xchg
lods
xchg
dec
push
insb
rcrb
push
jne
pop
aaa
add
cltd
inc
mov
je
mov
jp
movsb
mov
mov
pusha
sub
sbb
leave
xor
xchg
cmp
sbb
or
lock
lods
aam
loop
das
gs
sub
mov
cmpsb
call
inc
push
int
jecxz
mov
cwtl
loop
decb
test
pusha
cmp
mov
xor
xlat
dec
sbb
jmp
stos
fsubr
sbb
mov
push
fldt
mov
xor
repnz
jo
dec
cli
decb
jle
mov
xchg
repnz
lcall
scas
or
les
sub
shufps
lock
mov
inc
xchg
xor
mov
mov
fcompp
lahf
imul
out
adc
addl
jns
jnp
mov
aam
xor
or
loop
iret
sub
mov
or
adc
out
jnp
xchg
and
pop
sub
sbb
mov
xor
cmp
jecxz
fucomi
out
jmp
scas
shr
inc
adc
in
addl
arpl
inc
cmp
sbb
sbb
cmp
xorl
shlb
jp
imul
mov
fsubl
or
dec
mov
enter
rcr
sbb
cli
add
xchg
iret
dec
sbb
add
out
movsl
inc
fisubrl
iret
xchg
push
xchg
ljmp
or
in
scas
dec
fidivrs
imul
pusha
outsb
and
dec
int3
and
ss
imul
mov
fisttpll
add
mov
pop
fimuls
in
cmp
aam
add
cmp
fsubl
movsl
sub
lea
mov
add
mov
gs
push
cmpsl
inc
into
xchg
pop
ficompl
inc
mov
dec
insb
add
push
loopne
out
adc
push
jge
jle
jnp
scas
fisttps
and
shll
mov
xchg
lea
jg
or
push
fmull
pushf
inc
int
or
xor
pop
fistps
jmp
push
cmp
pop
jecxz
aam
cmc
mov
and
or
sti
out
rep
scas
sti
ljmp
mov
sbb
orl
mov
mov
sbb
jmp
rcrb
shr
jl
scas
fs
sub
add
iret
sbb
push
add
sbb
or
call
inc
sbb
aad
test
inc
jae
loop
inc
out
mov
mov
ret
sbb
test
cmpsb
cltd
add
sbb
cwtl
add
subl
ret
fldt
btr
bound
ret
mov
add
in
mov
fsubrl
or
test
pop
add
in
cld
ret
xchg
mov
test
hlt
rcl
flds
sub
jecxz
rclb
dec
xor
cs
inc
jle
les
jmp
enter
jle
int3
and
mov
mov
inc
fmull
adc
out
call
cwtl
push
adc
rcr
cmp
ret
mov
push
js
mov
andb
mov
aas
add
cmp
and
into
push
cmp
mov
lret
into
ret
loop
out
or
repnz
jle
push
jmp
ret
cltd
mov
out
cld
out
insl
lcall
pop
jecxz
xchg
mov
mov
add
push
or
rcrl
pop
lods
pop
push
sahf
cmp
mul
push
pop
scas
shrb
add
out
out
imul
notl
push
push
push
lret
add
mov
pusha
jl
fidivrs
inc
lea
push
mov
stc
adc
inc
cmp
imul
stos
cmp
jno
sub
inc
inc
jp
jbe
mov
sbb
jmp
push
and
and
in
mov
dec
int3
fwait
sbb
shrb
btr
or
das
cmp
xor
or
sbb
pop
pop
xlat
ret
out
and
mov
in
xchg
sti
mulps
pusha
pop
mov
mulb
pop
enter
add
orb
nop
push
lret
inc
call
xchg
inc
aam
nop
out
sbb
inc
add
iret
aad
cmpsl
cld
push
cmp
outsb
or
out
imul
xchg
push
inc
inc
xor
pop
push
test
add
sub
xor
aas
orb
in
lods
xlat
cmp
jns
push
sbb
aaa
jle
imul
out
roll
pop
cmp
fsubrl
push
jp
jecxz
cmp
in
lods
adc
xor
mov
inc
dec
push
adc
lea
and
aam
xor
lea
mov
rcrl
notl
xchg
mov
pop
orb
jp
push
rcl
cmp
push
sub
inc
inc
aad
fldt
sbbb
or
bound
jecxz
adc
add
dec
int3
cmpsl
pop
jmp
pushf
adc
sub
mov
inc
adc
stos
push
xchg
jle,pn
lret
and
bound
jno
jne
adc
pop
xor
sarl
sub
les
out
fisubrl
pusha
mov
inc
add
xchg
pop
enter
jo
sbb
xor
pop
leave
sub
rol
push
pop
divb
cli
xchg
inc
pop
pop
test
out
hlt
bound
in
sbb
fsubs
cli
mov
stos
sahf
into
nop
rcl
ret
cmp
dec
lods
and
mov
lods
test
mov
push
mov
aam
das
jb
test
jne
mov
adc
lret
loop
jnp
lock
inc
xor
in
iret
int3
pop
out
inc
jecxz
sbb
dec
cmp
pop
or
movsl
out
or
or
mov
sbb
mov
dec
mov
jle
cli
or
rclb
ret
or
mov
mov
ret
dec
ja
xor
fldenv
mov
mov
stos
ja
mov
jmp
scas
mov
pop
jo
dec
insl
mov
addr16
pop
fisubl
mov
sub
scas
dec
cli
loop
cmp
iret
mov
ret
or
pop
sti
iret
ja
inc
mov
lret
mov
xchg
femms
adc
js
ljmp
arpl
mov
pusha
xor
push
or
lret
dec
and
mov
jae
sbb
sub
mov
cmp
sub
adc
test
dec
outsl
rclb
das
pop
ret
sbb
test
mov
test
mov
popl
negb
sub
and
mov
arpl
jg
mov
xorl
mov
xor
cmpsl
push
ret
popa
adc
fnstsw
jle
mov
mov
xchg
dec
clc
sub
out
mov
mov
out
pop
jg
fidivl
ss
ffreep
icebp
rcrl
pop
int
test
enter
fcomi
mov
test
lods
loop
xor
enter
popf
and
add
pusha
fmulp
fdiv
or
out
mov
sub
push
mov
sub
test
cs
sub
adc
fwait
cmp
adc
sti
orl
movsl
jae
xorb
insb
jb
iretw
dec
inc
mov
mov
movsb
inc
dec
out
pop
add
jmp
or
outsl
and
shr
movsb
cmpsb
mov
mov
int3
sbb
ret
jmp
mov
imul
loop
aas
push
push
or
das
out
in
dec
xchg
nop
fisubl
sbb
add
adc
or
mov
jle
lret
sbb
dec
pop
or
fsubr
ret
jne
mov
lahf
push
into
sti
xchg
add
jl
lods
or
bound
cmp
sub
xor
and
aam
pop
mov
xchg
sbb
mov
mov
popf
jnp
jno
add
xchg
faddl
imul
cmp
mov
push
dec
inc
jge
jecxz
pop
jbe
xchg
ret
lret
enter
iret
mov
cmp
add
ds
cs
and
pop
xchg
les
dec
fsub
call
push
xchg
das
xor
aam
mov
push
jbe
cwtl
cli
mov
stos
cmpsb
sarl
adc
xchg
and
sbb
cwtl
outsb
int3
or
popa
int3
loop
jg
ret
jae
lds
cmp
mov
repz
ret
cmpb
or
lahf
adc
loop
or
aad
clc
jmp
mov
push
scas
loop
add
das
mov
add
fdiv
shl
or
xchg
shrb
push
arpl
sub
or
sbb
or
push
or
mov
ljmp
aam
xchg
sbb
out
xorl
sbbb
cmpsb
lret
jp
sbb
sti
mov
das
mov
ljmp
lods
sub
loop
aas
sti
or
shr
push
imul
imul
xchg
lock
inc
cmp
mov
push
call
push
xchg
arpl
sahf
fdivrl
jno
pop
sub
mov
jno
jne
pop
js
cmp
pop
scas
xor
xor
subb
xor
xor
push
ss
lea
xchg
loopne
sbb
add
dec
sbb
and
sti
cltd
push
movsb
fistps
cmp
stc
xchg
push
pushf
out
stos
mov
imul
pushf
decl
sbb
aas
sbb
scas
cmp
sbb
sbb
lea
jg
addr16
imul
faddl
xchg
dec
repnz
sub
or
mov
push
scas
test
in
jmp
mov
fxch
xorl
aas
cmc
pushf
stos
cli
test
mov
xor
push
add
push
pop
enter
dec
ljmp
push
insl
pop
and
mov
call
int3
jns
shr
sub
ret
lea
mov
lods
or
outsb
in
loopne
ss
mov
fstpt
inc
roll
mov
popf
xchg
xchg
pop
sarl
int3
das
cmp
or
lret
push
xchg
rorl
dec
mov
mov
xchg
xchg
push
add
je
fsubrl
xor
sub
pop
movsl
enter
and
rcll
xor
xor
stc
aas
stos
xor
cmp
pop
jno
sub
ss
add
inc
into
pop
iret
jmp
ljmp
bound
imul
and
cmp
mov
push
mov
mov
inc
xchg
mull
filds
stc
jge
mov
daa
sbb
dec
arpl
or
adc
mov
out
push
adc
cmp
mov
jmp
sbb
das
mov
pop
mov
cmpsb
or
test
shrl
mov
movsb
imul
nop
jo
mov
jne,pt
mov
movsl
xor
imul
lods
mov
stos
mov
push
fisubs
cld
iret
test
loop
lahf
jmp
mov
jg
add
xor
pop
pop
add
push
popa
add
sbb
mov
mov
jecxz
mov
jo
in
aam
mov
push
js
jne
adc
or
or
add
ja
fildll
xlat
fsubrl
xor
in
ds
aad
test
rorb
arpl
inc
cmpsl
rcll
xadd
jle
cmpsb
imul
popa
push
sub
ljmp
push
mov
into
dec
imul
xor
mov
fsub
xchg
xchg
push
push
rcl
shrb
fs
add
test
xchg
jnp
aam
sub
pop
rorl
mov
dec
insb
sbb
rorl
mov
inc
je
xchg
int3
fisubl
push
orb
add
sbb
push
je
jp
jl
jmp
add
pop
pop
and
jmp
push
lods
aas
inc
mov
ret
adc
loop
lret
mov
sbb
in
aas
pop
sbb
pop
mov
fbld
std
stos
sub
add
inc
std
jae
push
stc
adc
js
dec
loop
xchg
or
and
fs
mov
xor
dec
ljmp
mov
aaa
popa
enter
shll
ljmp
push
mov
add
adc
xor
jp
or
stos
sub
xor
cmp
int
fiaddl
in
jb
paddsw
mov
add
ja
mov
mov
jbe
add
jnp
mov
lahf
insb
scas
or
ss
mov
or
das
fwait
or
jle
inc
xchg
out
test
iret
add
sub
mov
add
push
enter
jmp
packssdw
scas
or
fisubl
inc
stc
push
dec
stos
xchg
ljmp
lret
in
cmc
cmp
mov
mov
sub
scas
mov
mov
or
xchg
loop
test
lret
subl
stc
adc
mov
dec
or
xor
lret
aad
lods
das
xor
cmpsl
xor
les
aas
add
insl
jne
xor
jo
jge
aas
rolb
ficoms
xchg
test
cmp
ljmp
pop
or
or
fcmovnbe
insl
sub
adc
sbbl
lds
lcall
adc
and
leave
sub
test
cmpsb
xchg
jnp
call
sbb
adc
push
ret
sahf
mov
jmp
shr
ret
lds
add
jge
fwait
rclb
xchg
inc
mov
imul
lcall
xchg
jle
sahf
jmp
sub
ret
dec
shlb
push
sbb
loop
dec
lret
iret
inc
push
pop
lock
mov
mov
je
jmp
aaa
mov
pop
ljmp
sbb
push
sbb
ja
pop
jmp
leave
xchg
stc
cltd
or
mov
movsl
leave
or
test
and
mov
gs
mov
and
mov
push
pop
lret
jae
xchg
fiadds
cmp
mov
rorb
loop
cwtl
js
sbb
push
push
jbe
push
stos
lods
lret
dec
pusha
mov
mov
xor
inc
sbb
jp
cmpsl
and
cmp
or
jecxz
js
bound
loopne
push
stos
push
sub
jp
bound
popf
sbb
xchg
mov
mov
or
scas
jmp
lahf
dec
add
push
das
enter
sub
mov
in
adc
shrb
rolb
push
mov
out
add
adc
xorl
or
outsb
adc
std
dec
adc
sbb
mov
sub
or
dec
xchg
popa
push
sbb
scas
sub
and
mov
test
dec
outsb
pop
ds
jmp
scas
push
mov
jmp
xchg
ljmp
jmp
mov
mov
push
sub
es
sarb
loop
fisubrl
jnp
into
or
xchg
sbb
cmp
aas
dec
ja
sti
cmp
arpl
call
xor
insb
adc
ljmp
out
in
mov
dec
fmull
jecxz
mov
mov
jp
ljmp
dec
push
lods
cmp
mov
in
jecxz
daa
repnz
js
lods
mov
mov
cmp
insb
fisttpll
or
ss
mov
ret
xchg
sbb
jmp
outsl
leave
xchg
divb
jae
push
and
shl
pop
ja
sub
ret
add
sub
test
mov
iret
test
ficomps
or
pop
xor
loop
jnp
movsb
xchg
and
push
mov
inc
mov
jecxz
insb
pop
adc
cld
addr16
xchg
mov
mov
shl
sbb
adc
jmp
sar
push
mov
ja
mov
jne
mov
pop
push
sub
in
adc
jo
loope
dec
or
popf
xchg
das
and
mov
mov
test
add
mov
pusha
addb
sub
or
and
xchg
xchg
jecxz
loop
cmpsb
cmpsb
loope
sarb
mov
dec
adc
outsb
or
sub
inc
shr
lods
call
add
mov
cld
push
sub
fmull
jb
adc
stos
adc
and
push
gs
pop
pusha
push
sub
inc
and
add
loop
mov
dec
push
jge
mov
push
inc
mov
test
pop
popf
mov
scas
lret
jmp
mov
adc
add
lds
lods
sub
or
nop
lret
test
fwait
mov
lcall
ja
fdivl
cld
ss
push
pop
js
pop
sbb
stos
out
in
sbb
xor
pop
sub
mov
pop
in
push
jns
jnp
add
es
cwtl
mov
mov
cmp
outsl
fidivl
out
fadd
push
scas
dec
jecxz
fisubrl
mov
arpl
jnp
rcl
sub
scas
into
sti
push
xor
sbb
sti
repz
sbb
out
dec
stos
sub
or
mov
enter
and
xor
ja
mov
jo
push
in
push
xchg
pop
mov
into
mov
loop
pop
lret
mov
mov
pop
aas
push
xchg
ja
dec
mov
adc
push
sub
mov
ret
or
and
shr
cld
in
lods
in
adc
lea
mov
jmp
add
xor
and
sbb
or
jl
mov
iret
mov
stos
add
adc
jg
push
jno
sub
and
dec
cmp
pusha
xchg
aaa
loop
inc
pushf
sbb
ljmp
nop
pop
mov
add
lods
adc
xchg
xor
jmp
add
push
jne
and
pushf
in
lahf
cmp
lcall
jnp
mov
cmp
xor
scas
ret
and
loop
mov
or
mov
pop
jp
and
inc
test
ficoml
cmp
mov
sbb
xor
dec
int3
lret
mov
dec
cli
push
xchg
out
mov
push
inc
inc
js
in
outsl
xor
push
lcall
cli
movsl
cmp
xor
test
cltd
jl
mov
push
mov
adc
loopne
aam
adc
test
dec
push
shrb
xchg
shrb
repz
dec
dec
mov
inc
cmp
ljmp
scas
mov
mov
loope
or
out
fistl
or
xor
sahf
inc
push
jle,pn
pop
ss
pop
outsb
add
cs
aaa
flds
bnd
mov
cmpsb
bound
scas
jmp
adc
int3
loop
pop
sti
jns
pop
xchg
iret
cmp
push
out
add
out
lods
lods
add
mov
roll
push
cmp
xor
mov
mov
sbb
lahf
push
sahf
mov
and
test
push
cmp
js
les
xchg
or
fs
xchg
push
stos
sbb
mov
sub
rclb
xchg
mov
sar
jne
mov
cmc
test
or
jbe
push
rcll
fisubrl
cmp
or
call
mov
dec
adc
xor
in
arpl
sub
mov
aam
in
inc
jge
sbb
adc
xchg
int3
lahf
xchg
and
jbe
add
sbb
outsl
inc
leave
push
ss
mov
iret
push
aam
outsl
sbb
lret
adc
push
fnstenv
mov
ret
cmp
in
inc
xchg
xchg
loope
pop
lret
dec
dec
pop
sbb
int3
jno
push
push
fildll
sahf
sbb
and
int
xchg
xchg
xor
shrb
adc
or
cwtl
push
std
pop
xchg
pop
imul
and
mov
jae
bound
dec
lods
mov
or
cltd
or
push
dec
jl
or
and
test
fadds
push
das
mov
aad
outsb
xlat
sahf
inc
mov
sbb
and
imul
pop
fidivs
imul
das
test
push
and
ret
cmp
jne
mov
ret
mov
sub
add
rorl
add
dec
lret
das
xor
fcomi
ja
call
stos
ret
js
int3
arpl
inc
mov
jecxz
push
shll
lods
dec
xchg
mov
rorb
lods
inc
ds
mov
shlb
mov
sti
scas
out
pop
push
dec
repnz
mov
test
dec
mov
lods
inc
ret
adc
dec
sbb
xchg
movsb
mov
xor
pushf
cmp
dec
push
mov
sbb
jl
sbb
cwtl
adc
mov
insl
dec
push
subb
mov
aas
sub
sbb
lahf
test
inc
pop
mov
mov
mov
jnp
out
xlat
xchg
jno
push
pop
sub
imul
dec
and
test
outsl
mov
rorl
sub
xor
xchg
cli
cmpsl
int3
mov
push
movsl
les
movsb
hlt
jp
dec
loop
outsl
std
or
push
inc
jmp
sub
and
into
loop
movb
sbb
mov
fimuls
js
mov
inc
sti
and
sbb
xor
xchg
or
ja
lds
adc
dec
shl
fwait
mov
dec
mov
jbe
lea
rcrb
pop
mov
sub
sahf
mov
pop
xchg
lret
cmpl
adc
aad
or
adc
xchg
aam
bnd
out
jmp
lret
jbe
popa
insb
nop
mov
popf
je
adc
call
jge
out
sarb
xor
or
ret
jmp
sarl
add
jmp
jb
jnp
mov
mov
push
rclb
stc
lret
dec
mov
adc
xchg
clc
stos
in
lret
lahf
jmp
out
insb
imul
out
adc
lds
xchg
sarl
mov
dec
xor
mov
push
cmpsl
ficompl
insb
push
shrb
movsb
push
push
mov
mov
sub
xor
cld
pusha
enter
pop
push
fcmovb
pop
or
jmp
mov
test
jge
loope
sbb
mov
jae
shlb
int
lods
mov
lods
inc
js
mov
shl
out
stos
adc
pop
xor
push
sub
lret
ret
stc
inc
in
scas
dec
cmpsb
inc
xor
cmp
jl
sbb
mov
dec
cli
push
int
adc
jge
out
mov
add
cmp
pushf
lods
scas
and
xchg
rcr
mov
push
das
cmp
sbb
sti
mov
or
cld
ljmp
xchg
mov
shll
lds
xlat
dec
inc
idivl
jp
jbe
pushf
xchg
pop
loop
dec
mov
xchg
rcl
pop
test
adc
insl
ret
dec
sub
or
outsb
lea
xchg
dec
setne
mov
dec
rclb
das
test
or
into
xchg
jmp
lods
inc
stos
jbe
inc
call
aam
pop
dec
xor
jno
stc
xorb
xor
pop
or
push
jecxz
add
fmul
sub
cmp
dec
mov
les
adc
mov
sub
jmp
ds
mov
push
rcrb
repz
sbb
mov
ja
cld
cwtl
xor
ret
sub
scas
ret
dec
out
hlt
popa
push
pop
sub
iret
mov
mov
fldt
in
jecxz
sub
mov
push
dec
outsb
or
sub
dec
xchg
cmovs
rcl
and
call
addb
mov
push
bound
xchg
or
imul
mov
mov
xor
cmp
mov
xchg
pop
push
push
and
adc
adc
nop
out
loop
pusha
aam
js
push
jp
or
push
xor
lock
jmp
mov
jb
xchg
data16
xor
sub
dec
pop
ja
cli
jp
add
or
or
cmpl
hlt
mov
arpl
imul
js
cwtl
push
and
pop
mov
jno
push
xor
out
in
xlat
loop
ret
into
jae
mov
lea
test
sub
loop
pop
add
adc
scas
jecxz
mov
insl
or
xor
sbb
mov
mov
xchg
insl
pushf
push
jnp
sbb
and
mov
push
adc
inc
mov
rol
stc
dec
lods
scas
stos
or
neg
mov
mov
mov
jb
adc
push
mov
in
fxch
fucomip
ret
lret
mov
xchg
popa
imul
lods
lcall
loop
push
xor
jb
dec
imul
sub
add
outsb
dec
stos
mov
mov
xchg
scas
add
jne
les
pop
imul
addb
sub
sbb
mov
scas
int
out
mov
mov
call
dec
je
ja
or
jmp
sar
jnp
adc
or
mov
xchg
arpl
ret
cld
xchg
andl
cmp
data16
xor
sub
or
je
inc
into
cmp
dec
cwtl
cmp
sub
push
or
jmp
mov
cli
mov
out
jo
adc
bound
push
cmp
sbb
ret
mov
pop
dec
leave
int3
inc
add
hlt
and
cmp
orl
add
int
gs
mov
cmp
mov
rcrb
mov
mov
cli
pop
je
lea
rep
insl
add
push
push
loop
lock
add
mov
sbb
and
dec
mov
dec
add
mov
cmp
adc
leave
push
into
xor
cwtl
push
add
xchg
and
sub
iret
int3
int
outsb
inc
scas
or
ret
lods
hlt
dec
pop
adc
adc
adc
out
push
sahf
adc
cli
cmpsl
or
ror
loop
xchg
mov
fimull
mov
cmp
lcall
adc
and
dec
jge
enter
inc
push
mov
mov
jb
jmp
in
shlb
or
lods
push
and
cmp
or
dec
out
pop
scas
ss
push
mov
outsb
adc
cmp
pop
jecxz
xlat
fildl
arpl
or
ret
jmp
or
jecxz
adcb
test
add
stos
cs
lret
pop
andl
xchg
sub
cmp
xor
push
rorb
push
les
stc
or
js
shlb
in
add
jmp
or
ss
gs
inc
jno
cmc
stos
rorl
inc
add
mov
gs
jmp
dec
inc
aad
jecxz
cwtl
dec
mov
cmp
mov
mov
xchg
push
pop
jecxz
inc
add
test
ljmp
xchg
dec
sub
inc
adc
outsl
in
mov
das
js
test
loop
mov
outsb
sbb
jle
popf
push
in
in
pop
mov
mov
rclb
jmp
lods
js
test
cmp
fimull
pusha
jle
inc
fistps
push
pop
shl
ficomps
pop
or
push
xor
sub
imul
jns
mov
pushf
dec
jb
outsb
push
inc
cmp
inc
aam
dec
push
mov
out
in
mov
out
fimull
inc
jae
xor
mov
push
movsb
orl
fsubr
inc
xorl
test
hlt
push
mov
sub
out
or
rclb
mulb
push
mov
cmp
or
push
pop
sbb
fsubrs
mov
push
or
fimull
xchg
rcl
push
push
mov
scas
notb
aam
pop
call
out
ret
pop
es
fs
mov
mov
push
je
mov
call
in
push
lret
orb
out
cld
rclb
add
rorl
ljmp
xchg
dec
lret
stos
and
lcall
mov
aaa
pushf
add
lock
rolb
lret
jg
dec
fildll
ss
les
rorb
xor
sarb
and
pop
leave
les
dec
xchg
data16
push
mov
mov
movsb
pusha
lcall
iret
sub
aaa
loop
int3
sbb
rcrb
outsb
aaa
dec
jecxz
xchg
or
xchg
or
xchg
or
ljmp
add
imul
loop
stos
outsl
lahf
sub
mov
add
lahf
mov
stos
or
paddusb
add
in
std
test
sub
nop
dec
bound
scas
xor
in
pop
ficompl
iret
sub
sbb
popa
repnz
push
repnz
and
je
enter
jne
dec
subb
imul
lods
mov
loop
orl
repnz
leave
sti
jbe
outsl
in
sub
clc
in
dec
xlat
or
in
adc
in
test
fcomp
pop
insb
or
add
loop
and
adc
mov
mov
out
in
or
mov
mov
jecxz
dec
clc
lods
pop
repnz
mov
mov
adcl
pop
mov
push
or
scas
ret
icebp
shrb
mov
out
xchg
fwait
dec
stos
enter
jnp
add
sbb
cs
xchg
out
arpl
mov
jmp
jecxz
push
push
repnz
sub
loop
cmp
int
xchg
repz
std
aad
test
mov
mov
sbb
dec
hlt
jecxz
mov
loop
gs
lret
mov
insb
lods
not
loop
arpl
lods
jb
xchg
repz
movsb
lret
mov
sub
repnz
dec
adcl
xchg
mov
mov
and
push
int3
or
test
mov
fidivl
fwait
or
pop
fsubrs
dec
test
jns
into
push
adc
fidivs
mov
lods
test
mov
js
inc
jl
pop
in
jecxz
fwait
scas
bound
cmp
mov
and
outsb
pop
xlat
insb
xchg
mov
push
pop
hlt
fwait
aad
or
test
sbb
or
sar
fwait
push
add
ret
ret
inc
xor
add
and
adc
push
ret
lods
mov
hlt
lods
adc
orb
xor
cli
stos
shll
or
jne
sbb
mov
cmpsl
in
roll
add
adcb
jne
pop
nop
mov
pushf
mov
arpl
bnd
loop
add
test
sbb
mov
fwait
mov
inc
mov
xchg
in
cmpb
xlat
mov
jecxz
nop
arpl
mov
cltd
aaa
dec
in
mov
fisttpll
insb
mov
or
mov
dec
in
xchg
jmp
sub
push
gs
int3
adc
push
sti
push
mov
js
sbb
test
inc
pop
jne
inc
pop
cli
rorl
iret
int3
mov
scas
bound
lcall
cli
pop
cmc
lods
push
xlat
outsb
lret
out
cmp
push
loope
jb
je
sahf
xor
cli
xchg
stos
roll
aam
loop
fmul
mov
inc
pop
leave
sub
mov
jmp
cmc
inc
out
or
hlt
fcmovbe
js
and
fiadds
sub
lea
cli
xor
jp
mov
movb
xchg
add
mov
js
hlt
js
gs
xor
ret
data16
adc
pop
andl
and
push
int
in
lcall
cwtl
xchg
aam
lcall
lods
jne
sub
jno
mov
outsb
insb
js
pop
add
lea
icebp
call
pusha
mov
push
mov
cwtl
mov
or
aad
add
int3
cmp
push
cmpb
dec
inc
loop
and
inc
jno
sub
jbe,pn
shrb
jno
xor
lret
lahf
ficomps
or
test
sub
sub
pop
fimuls
pop
sub
bndstx
mov
cmpsb
mov
stos
mov
fisttpll
lret
sarb
sbb
xchg
sub
dec
mov
in
mov
stc
incb
jbe
in
jp
jmp
shl
cmp
shll
push
adc
lea
pop
sarl
add
pushw
inc
fs
enter
stos
xchg
sbb
dec
adc
mov
in
cmp
pusha
push
mov
xchg
loop
or
push
sbb
ret
cmp
inc
dec
in
mov
sub
rorl
stos
movsl
jle
mov
sbb
imul
sbb
add
nop
enter
push
daa
xchg
mov
add
cmp
rclb
pop
fidivrs
es
imulb
sub
inc
fldl
or
xchg
addr16
xor
cmp
loop
ljmp
fmulp
add
in
cli
xchg
mov
lcall
in
mov
or
pop
inc
mov
and
adc
add
dec
pop
cmp
imul
mov
cmp
movsb
adc
or
inc
xchg
iret
add
clc
xchg
popa
adc
xchg
sbb
adcl
xchg
outsb
adc
or
dec
xchg
lock
leave
xchg
pop
shl
cs
xchg
xchg
sub
cld
mull
pushf
pop
out
or
xchg
jbe
loop
shll
inc
aaa
cs
ficoml
dec
sbb
stos
mov
inc
sub
loop
push
cmp
sub
mov
ljmp
push
sbb
sbb
or
sbb
mov
sbb
sub
stos
push
out
repnz
adc
push
cmp
sub
or
arpl
sti
mov
jae
subb
mov
sub
dec
sub
rcrl
into
sbb
sub
stos
shr
imul
in
or
mov
sbb
sbb
or
sbb
shll
or
in
jnp
sbb
adc
stos
or
or
jecxz
push
sbb
out
add
in
xor
jmp
push
pop
push
ficompl
cld
jns
out
inc
lar
imul
mov
jecxz
mov
jae
jmp
cmp
stos
mov
sub
rolb
mov
xlat
fst
jge
pop
outsb
not
pusha
pop
or
cld
pop
adc
outsb
pop
xchg
push
stos
jae
adc
xchg
cwtl
call
mov
sub
ftst
movsl
and
hlt
insl
mov
jb
loopne
shlb
cli
push
sbb
inc
mov
pop
inc
or
ret
sub
cmp
sbb
sbb
les
div
enter
fmull
fstl
mov
rcrb
xlat
popa
int3
xchg
push
fisttpll
sub
ror
in
ret
jb
iret
sub
inc
jg
sti
cwtl
scas
mov
inc
test
xor
sub
mov
jmp
daa
les
dec
rorl
ret
inc
mov
ficoms
test
sub
daa
sbb
sub
sub
sbb
pop
pop
popf
bound
addr16
mov
lods
sbbb
mov
dec
sbb
std
cmp
dec
jo
das
and
ret
fadd
popa
lea
shlb
mov
in
scas
test
mov
adc
leave
sbb
lods
sbb
cmp
inc
inc
shrb
or
mov
sub
jmp
mov
lea
loop
test
js
cmpsl
cmp
fs
outsb
mov
out
fcmovnbe
lea
pushf
pop
sbb
sti
mov
adc
std
mov
xchg
das
add
lds
xchg
mov
loope
stos
adc
mov
adc
or
mov
stos
popw
xor
fimuls
jns
and
cmp
mov
ret
adc
pop
std
in
add
jb
xchg
addr16
lods
mov
sub
jns
xchg
mov
inc
loop
out
jnp
ja
or
pop
lock
sahf
dec
xor
leave
add
cmpsb
push
fiadds
adc
dec
adc
stos
mov
ja
shlb
andl
ret
fwait
loop
hlt
jle
mov
mov
xchg
lret
mov
sub
mov
inc
mov
sysenter
pusha
mov
loop
adc
in
mov
pop
fwait
int3
adc
adc
and
addl
push
adc
push
push
in
ljmp
mov
call
ljmp
ljmp
shll
dec
imul
pop
lock
mov
lds
lods
dec
leave
dec
mov
lds
mov
sub
jp
mov
into
mov
sub
enter
adc
cmp
or
in
loop
insl
lret
cmp
dec
jb
push
jg
jae
addr16
ret
dec
ret
loop
int3
xorb
inc
int
ljmp
mov
aaa
cli
sub
arpl
mov
rclb
dec
popa
lcall
adc
inc
out
ja
lret
push
inc
xchg
ljmp
sbb
inc
ficoml
cmp
out
sub
in
xor
test
or
mov
loop
faddl
mov
outsb
out
xchg
inc
out
mov
dec
sbb
in
mov
sub
fs
bound
insl
lea
adc
loop
dec
shrl
leave
scas
outsb
or
mov
pop
data16
and
in
push
xchg
mov
orl
pop
mov
mov
xor
push
mov
outsl
jae
sbb
lahf
and
cmpsl
inc
sub
aam
xor
outsb
cmp
xchg
jo
cmp
xchg
xor
add
push
cli
lds
popa
or
hlt
int
jmp
jnp
jle
xor
fstl
push
cs
adc
adc
hlt
mov
fiadds
xchg
inc
pop
stos
or
push
xor
and
sub
lcall
add
mov
xchg
pop
mov
push
lret
je
mov
mov
mov
cmpsb
sbb
test
jnp
adc
cmp
mov
jns
ljmp
loop
repz
or
add
mov
pminub
add
int3
rorl
pop
das
arpl
andl
mov
xchg
das
or
fwait
xchg
wrmsr
fsubs
sub
ret
orb
aam
ljmp
into
loope
pushf
sub
jmp
lret
inc
push
sbb
sub
pop
lods
andl
push
adc
or
cmp
or
test
imul
lcall
enter
dec
clc
sbb
aas
mov
imul
fucomi
fisubrl
loop
lods
negl
vmwrite
sbb
pop
add
call
popf
mov
dec
mov
test
test
xor
push
shll
lods
in
and
negb
xchg
repz
push
adc
add
xlat
pop
lahf
ljmp
mov
ja
add
in
sbb
mov
cmp
lahf
ljmp
xor
xor
notb
mov
xor
push
outsl
xor
lret
mov
notb
mov
lea
ret
ds
mov
mov
aad
jae
adc
ss
stos
cs
mov
test
mov
dec
xchg
lods
mov
pop
dec
ljmp
fcoml
mov
fdiv
imul
subb
aam
stos
lods
jmp
or
outsb
push
or
enter
insl
adc
cltd
mov
rorb
into
xor
lret
stos
add
outsl
icebp
mov
mov
dec
jmp
aam
stos
mov
push
adc
xchg
xor
stos
out
cmp
or
lock
inc
xchg
test
mov
loop
mov
add
mov
mov
lods
sub
in
adc
inc
ss
bnd
clc
lods
mov
cli
mov
mov
push
mov
jecxz
adc
daa
mov
push
adc
lcall
test
xchg
into
adc
in
dec
pop
cmp
xchg
insb
mov
dec
ljmp
push
cmpsb
xor
and
stos
xchg
fwait
orl
mov
xor
and
aam
int3
hlt
cld
and
lods
xchg
pushf
test
push
pop
push
out
jo
push
idivb
and
mov
cmp
mov
add
jne
sub
adc
cwtl
cmp
or
push
ret
ds
dec
enter
or
leave
bound
jne
shlb
pushf
jb
sbb
popa
adc
adc
jb
fiaddl
cmp
xchg
ret
adc
cs
adc
xchg
out
dec
stos
or
sbb
adc
repz
add
in
call
jp
pushf
mov
insl
cli
xor
sbb
fsubr
cld
add
or
outsb
pop
mov
out
sub
int3
jne
jp
pushf
push
jbe
cmp
in
shlb
repnz
push
mov
inc
arpl
sbb
dec
scas
leave
insl
adc
jbe
xor
xchg
ret
into
xchg
in
adc
push
xor
icebp
in
stos
pusha
mov
xchg
inc
pop
cmpps
stos
xlat
push
rorl
fisubl
adc
mov
pop
cmp
pusha
xor
cmp
push
lcall
out
push
or
sub
sub
in
adc
rorl
lret
sbb
lea
lds
fldenv
aaa
cmp
adc
scas
jmp
sub
ret
adc
cld
in
sub
xchg
dec
push
hlt
add
fs
ret
lcall
ret
pop
or
or
and
add
into
sbb
sbb
stos
cs
ret
roll
out
cwtl
xor
jle
xor
mov
stc
jl
fisubrs
push
dec
icebp
sub
mov
xchg
mov
jp
in
cmp
xchg
shr
xchg
fidivrs
sbbb
inc
test
int3
in
shl
ret
out
jmp
mov
cld
inc
pop
mov
fbstp
out
xor
push
sti
repz
sahf
xor
roll
adc
stc
enter
inc
and
test
xor
jle
in
push
dec
push
mov
inc
add
xor
cmp
and
cmp
jmp
shl
push
mov
xchg
je
cmpsb
push
cmpsl
or
jle
andl
mov
fsub
cwtl
mov
jns
xor
jl
ja
inc
or
jo
out
or
fnstsw
sub
out
mov
out
jae
cmp
fisttpll
and
ljmp
sub
pop
jmp
and
fisttpll
xchg
sub
jge
ljmp
nop
out
cmp
cld
addb
or
pop
iret
test
leave
sub
stc
into
fnstenv
mov
push
shl
push
nop
sti
iret
outsb
das
outsl
sub
cmpsl
sub
sbb
bound
inc
xchg
outsl
cmc
cmp
out
jge
sbb
cmp
mov
xor
data16
call
push
fmuls
jmp
jg
leave
addr16
mov
ljmp
mov
ds
rclb
lret
jns
mov
xchg
ss
xchg
imul
ljmp
enter
and
adc
mov
jle
cmp
mov
into
bound
add
add
mov
push
mov
fld
jnp
jmp
pop
out
loope
push
inc
sbb
sub
aad
into
and
and
xor
leave
lods
cmp
les
or
mov
cli
out
inc
mov
adc
aad
or
and
add
dec
test
jne
arpl
stos
xchg
sbb
test
imul
mov
xor
add
pushf
jle
lods
or
push
ss
test
pusha
push
adc
push
scas
scas
insb
out
decl
push
insb
outsl
fimuls
adc
adc
sbb
lea
stos
mov
or
xchg
push
mov
insb
add
lea
sub
xor
jae
sub
shrb
popf
add
mov
leave
std
or
inc
adc
xchg
subl
inc
sbb
fwait
or
cs
push
fstl
pop
sub
aaa
addl
aad
in
push
sbb
loop
sub
cmpsl
scas
dec
and
jmp
jl
insl
mov
pushf
stos
inc
mov
out
jecxz
mov
mov
outsb
andb
xchg
dec
in
or
fxch
cs
or
sbb
sti
mov
mov
xchg
sub
jo
and
ss
add
out
jbe
push
sub
jo
lods
mov
insb
xchg
lret
mov
adc
jmp
das
dec
add
ss
fldt
or
sub
push
jmp
xor
shrb
adc
xor
or
cld
jns
ret
sti
mov
add
or
ret
fidivs
cmp
sub
or
inc
sub
dec
jmp
stos
cmp
pop
sub
or
es
outsb
hlt
inc
out
inc
test
and
and
xchg
jo
loop
or
enter
or
sub
jb
add
mov
test
or
pop
aam
sbb
arpl
sub
jle
sub
xor
dec
sbb
jns
hlt
mov
adc
or
addr16
jae
stos
cmpsb
in
xchg
push
mov
xchg
test
fwait
shrb
xlat
out
cmp
lock
or
jns
xor
jp
sbb
inc
or
push
insb
cmp
mov
cld
mov
mov
push
sbb
xchg
mulb
mov
pushf
jmp
mov
jle
mov
movsb
jns
fdivl
subb
or
jle
push
dec
ljmp
add
dec
hlt
add
add
fs
ret
adc
movsl
insl
sub
addr16
pusha
dec
enter
mov
inc
jnp
out
push
cli
push
sub
and
ret
xchg
cmp
fs
les
test
sub
sub
int3
pop
movsbl
mov
push
gs
movsl
sub
adc
add
pop
insb
bound
push
out
stos
in
mov
mov
lret
test
insl
gs
in
fimull
sbb
inc
pop
add
mov
arpl
das
cltd
add
sbb
imul
ficompl
pushf
add
cld
pop
fdivrl
or
mov
stc
mov
jle
mov
out
lret
lods
bound
dec
imull
push
ss
mov
sbb
stos
insb
jmp
sahf
or
and
xchg
andl
in
lods
mov
rolb
clc
mov
cmp
movsb
sbb
or
lods
cmp
imul
sbb
cli
or
dec
xchg
out
mov
sbb
ljmp
mov
xor
inc
cli
push
scas
cmp
mov
pop
inc
jne
mov
adc
xchg
xor
cld
sbbb
push
lods
jmp
or
movsb
inc
stos
jg
call
inc
ljmp
push
lods
in
push
hlt
sbb
lcall
mov
and
xor
ljmp
adc
mov
lahf
or
dec
dec
out
lods
imul
movsl
insl
loop
xchg
pushf
xchg
in
imull
lods
xor
mov
sbb
in
inc
test
sbb
mov
dec
mov
sub
or
insl
jp
adc
in
ret
dec
jmp
add
inc
xchg
les
ds
inc
in
js
fimull
dec
mov
iret
xlat
rcrb
cmp
into
mov
ss
ljmp
jnp
enter
jmp
lods
push
stos
xor
mov
push
test
adc
jp
movsb
scas
add
call
mov
out
push
mov
sbb
enterw
aam
jbe
mov
dec
lods
aam
sub
push
xchg
insb
mov
push
push
mov
cmp
jp
mov
dec
pop
iret
aam
inc
lahf
int
mov
dec
mov
dec
push
lahf
popa
push
aas
and
sub
fwait
icebp
inc
ret
jnp
jbe
push
mov
xchg
mov
test
pop
or
or
mov
aad
out
and
mov
mov
sbb
push
inc
adc
mov
xchg
or
lock
dec
pop
loop
xchg
rorb
shl
pop
scas
add
mov
cli
andl
dec
jecxz
loop
jp
int3
call
jle
lret
in
dec
stc
popa
xchg
arpl
xor
lock
inc
inc
movl
push
or
rcl
inc
pop
cld
test
repz
mov
push
add
rclb
xchg
mov
shrl
xor
push
xor
xchg
cmp
or
sub
lea
xchg
dec
stos
mov
fucomp
hlt
popa
pop
in
pop
dec
jp
cmp
in
add
mov
xor
ds
enter
bnd
xor
or
movsb
jmp
shll
pop
das
call
mov
jle
jmp
ret
lcall
int
and
ret
or
adc
call
addr16
gs
movsb
imull
fnsave
sbb
jp
dec
ret
test
xor
fisubrs
dec
in
and
xchg
cmpsl
lahf
imulb
ret
push
mov
loop
ja
inc
shlb
mov
jmp
outsb
push
insl
incb
adc
xchg
xchg
sbb
mov
lret
ret
dec
roll
fsubs
test
enter
push
jmp
mov
jne
aas
addb
adc
xchg
pushf
clc
jmp
cltd
cmp
add
stc
inc
popa
rorb
shr
pop
xchg
adc
jbe
cmp
mov
mov
ljmp
jmp
stos
mov
pop
dec
bound
insb
add
mov
lcall
push
xchg
inc
movsb
outsb
pop
fisubrs
stos
or
jmp
mov
decl
imulb
jo
sbb
push
outsb
test
cmp
mov
test
sbbb
test
pop
out
sbb
sbb
sub
rcrl
lret
sub
pop
jb
or
mov
cs
je
jl
inc
adc
fs
std
cmp
gs
insb
xchg
roll
in
xchg
jg
or
hlt
insl
daa
xchg
inc
bound
adc
jl
mov
scas
or
insb
test
lcall
cmp
shlb
std
cwtl
rcrb
dec
lock
sbb
mov
addl
mov
dec
fwait
cmp
jmp
adcl
or
movnti
or
clc
push
mov
xchg
lret
mov
xor
popa
or
jl
or
aam
push
dec
out
sub
cs
cli
sbb
call
or
push
fstp
stos
test
roll
sbb
mov
out
je
sub
lods
push
pop
jle
rol
mov
lock
sub
mov
into
sub
ret
lods
shll
pop
rcl
or
pop
jo
imul
jne
pop
sbb
sbb
mov
or
or
pop
mov
jl
mov
sahf
xor
lods
mov
push
mov
push
push
push
int3
cmp
xchg
mov
mov
inc
loop
jmp
pushf
jmp
ret
xchg
push
push
test
fcomps
xor
or
add
mov
scas
dec
mov
lcall
pop
lfs
xchg
or
pop
inc
and
xchg
test
divl
cmpsb
pop
out
fldcw
out
mov
fwait
pusha
nop
push
mov
cmp
jae
aad
jp
jo
mov
arpl
adc
inc
push
sbb
pop
movlps
in
push
aas
pop
mov
mov
xor
pop
ret
inc
sbb
xor
ret
push
out
mov
cmp
dec
sbb
push
add
jmp
into
or
or
cli
sar
in
fisubrl
mov
stc
dec
in
call
dec
jecxz
int3
iret
and
lret
mov
xor
cld
jmp
add
pop
sbb
pop
or
jo
cmp
or
jbe
jae
push
test
subb
pop
pop
inc
and
rol
test
sbb
add
mov
mov
fdivl
arpl
jmp
dec
push
sbb
push
pop
in
mov
mov
cmpsl
add
push
call
fsubr
dec
xchg
cli
sub
lret
jge
or
in
dec
repnz
xchg
sub
xchg
push
dec
popa
lcall
neg
jecxz
add
mov
pusha
mov
sbb
loopne
data16
mov
bound
fistpl
enter
add
mov
push
lods
cld
dec
stos
adc
sub
fisttpl
pop
adc
stos
imul
loop
outsb
in
jg
mov
adc
insl
fsubrl
jmp
hlt
ret
xor
out
int
inc
mov
divb
and
xor
mov
push
cmp
or
cmpsb
fsubrl
or
dec
adc
sti
das
in
sub
cmp
rcrb
mov
sti
mov
and
pop
sub
sub
in
int
sbb
iret
mov
dec
in
xchg
stos
stos
in
hlt
xchg
xorl
mov
mov
fdivrp
in
inc
push
xchg
sbb
jmp
sub
notl
push
fistpl
jmp
mov
or
xor
or
in
jo
dec
insb
and
push
lea
pop
dec
xor
je
xchg
mov
arpl
add
dec
int3
cmp
leave
or
stos
es
ret
je
xchg
outsb
mov
testb
inc
lods
jo
es
push
lret
mov
sbb
push
or
sbb
xchg
in
repz
in
in
pop
inc
jne
jo
out
arpl
ret
andb
cltd
pop
fs
cmc
negb
aam
in
sbb
pop
ss
fiadds
test
jne
sub
push
lods
imul
sbb
in
gs
stos
out
add
mov
lret
jno
subl
out
adc
mov
in
fstpl
pop
sbbb
les
mov
and
inc
sub
push
xchg
out
sub
mov
pop
fldenv
loop
stos
sbb
out
push
or
sbb
mov
imul
sti
add
aam
test
fcmove
sub
sub
push
ret
cli
push
aam
popa
scas
push
add
arpl
in
adc
aaa
inc
shlb
pop
dec
or
fists
inc
dec
inc
mov
pusha
cld
mov
xchg
mov
out
and
xchg
sub
fucomip
xchg
pop
xchg
in
rcrl
nop
pop
pop
lods
sarl
int3
push
mov
xor
lret
das
jbe
lods
aad
mov
jmp
sub
pop
ljmp
popa
addr16
mov
hlt
aam
imul
add
loope
jmp
insl
add
or
push
dec
dec
sub
faddp
adc
xchg
mov
sti
or
je
mov
inc
and
arpl
xchg
xchg
mov
mov
mov
and
mov
pop
dec
lea
pop
jmp
shr
cltd
ja
jl
in
dec
inc
mov
out
outsb
fldl
ret
or
mov
mov
shll
add
or
dec
enter
xor
pushf
outsb
fbstp
cmp
add
mov
outsb
ret
stc
adc
std
add
fiaddl
xlat
adc
dec
and
lcall
mov
jmp
mov
adc
or
sub
xchg
lahf
add
rol
jmp
data16
mov
in
xchg
xchg
mov
adc
jnp
aad
xor
lods
int3
les
lahf
dec
outsb
mov
push
hlt
mov
out
lret
ficoml
push
and
xor
push
cmp
out
loop
sbb
jmp
inc
mov
mov
imul
xor
fdivrl
int3
data16
dec
ss
shrb
sbb
movsl
sbb
sub
div
stos
lret
xor
faddl
in
mov
cmp
outsb
and
enter
sub
sub
int3
pop
mov
daa
fstpt
sahf
cmp
sub
sbb
mov
out
es
das
mov
mov
dec
jmp
xor
nop
mov
stos
sbb
jns
dec
scas
popa
xlat
call
out
rolb
lret
jp
or
popf
mov
mov
ret
addr16
inc
push
ss
out
shrb
out
or
xor
in
movsl
sbb
sub
rcrl
or
inc
imul
lods
fs
test
and
jmp
cld
lds
cmc
out
jnp
push
insb
lea
dec
ror
jle
test
xchg
adc
mov
mov
cmp
adc
aas
xor
jns
mov
lret
jle
movsb
push
fsts
cmp
les
js
rclb
int
fidivl
sub
jno
mov
push
or
or
and
cmp
mov
lea
mov
mov
test
rcl
lods
mov
mov
jp
iret
stos
mov
and
rol
popa
xlat
pop
lret
in
popa
movsb
iret
andl
sbbb
xor
or
inc
dec
inc
adc
lea
clc
mov
dec
xchg
ret
mov
xchg
sub
ret
lods
sbb
jl
iret
jmp
cmp
and
fcomp
in
pop
inc
rcrb
lods
lahf
rclb
jmp
sbb
push
or
lea
std
fiaddl
push
pop
test
jle
mov
or
xor
fxch
mov
shr
outsl
dec
das
cmp
xor
pushf
mov
mov
sbb
ret
mov
jo
jno
movsl
inc
repz
enter
stos
lret
aam
cmpl
sub
jmp
fsub
imul
pop
popa
cwtl
imul
jb,pn
div
in
mov
push
mov
mov
repnz
roll
outsb
divl
testb
rclb
movsl
stos
cld
orb
scas
cli
lret
dec
pop
pushf
cmpb
dec
sub
loope
ss
dec
mov
in
loop
jecxz
mov
jmp
ja
ljmp
mov
in
lahf
lods
or
xor
mov
pusha
mov
stc
push
add
xor
jge
mov
pop
cltd
mov
mov
mov
fbstp
adc
mov
push
mov
dec
stos
mov
clc
fisttpll
mov
lcall
mov
push
mov
push
aas
or
call
out
or
or
mov
data16
addr16
adc
cmp
stos
push
pop
xchg
or
add
pop
mov
mov
mov
mov
cmp
arpl
sbb
dec
in
pop
in
cwtl
mov
push
out
dec
hlt
mov
xchg
iret
in
ficoms
in
jmp
repnz
mov
fdiv
xchg
cwtl
cmp
or
jmp
call
mov
das
cmp
loop
or
push
fdiv
sahf
stos
into
mov
xorl
sti
lock
repz
or
sub
sarl
pop
subl
pop
stos
test
adc
mov
push
mov
jbe
popf
sbb
ficomps
pop
popa
jmp
pop
lret
sub
adc
enter
pop
dec
add
sub
adc
jecxz
jnp
addr16
mov
mov
out
mov
int3
pop
rcl
inc
loopne
stos
inc
jne
enter
mov
stc
mov
in
in
rorb
mov
jge
imulb
dec
stos
ret
insl
imul
jae
mov
adcl
out
out
mov
jb
mov
pop
out
addl
mov
movsb
aad
push
fsubr
sub
and
pop
jecxz
mov
call
sti
iret
inc
mov
and
push
pop
lods
adc
mov
leave
inc
add
or
inc
jp
icebp
inc
mov
in
test
arpl
adc
or
addr16
daa
pushf
pushf
dec
cld
dec
loopne
xor
sbb
int
mov
cltd
or
je
jnp
shrb
mov
cld
test
or
std
lahf
pop
cwtl
jge
leave
jae
stc
cmp
iret
icebp
aas
pushf
stos
js
iret
sahf
arpl
mov
out
ds
and
pop
arpl
repz
shll
orb
jle
fisubrl
movsb
aad
inc
fisubl
xchg
pop
push
dec
mov
add
in
mov
div
push
pop
dec
jmp
add
mov
fs
int
cltd
push
sub
lods
int
cmpsb
mov
out
pop
mov
sub
cmpsb
pop
xchg
imul
mov
cld
rolb
mov
or
adc
ds
out
lret
or
std
dec
das
psubw
and
inc
ja
inc
xor
lret
test
jge
push
pop
push
mov
out
scas
test
jae
and
add
jecxz
insb
fs
mov
sub
inc
out
loop
lret
movsb
test
or
icebp
jp
jl
fs
ss
pop
into
stos
in
enter
and
mov
mov
lds
adc
xchg
add
push
mov
stc
push
jb
pop
sub
or
out
push
add
and
sbb
stos
jo
ret
cli
jnp
jae
jle
mov
shl
in
mov
ds
popa
push
loop
sub
add
lahf
call
mov
mov
stos
sub
xorb
fcoml
inc
lods
sbb
mov
pusha
xchg
push
clc
data16
jmp
imul
add
scas
mov
adc
in
sahf
jmp
test
mov
xor
cwtl
outsl
stos
jmp
sbb
dec
push
nop
lock
shlb
sub
movsb
gs
cmpb
cmp
leave
stos
or
mov
sahf
sub
lods
daa
repnz
jg
stos
push
jl
and
add
mov
cmpsb
xchg
mov
insl
stos
add
mov
pop
movsl
push
leave
pusha
push
test
call
or
popf
inc
mov
xchg
hlt
xor
fiadds
adc
aam
icebp
lcall
lret
imul
push
stos
mov
mov
adc
add
xchg
add
fidivl
inc
je
into
fstps
sbb
push
rorl
jmp
lret
imul
mov
stos
rcrl
sbbl
mov
or
pop
test
mov
adc
or
stc
push
int3
push
sarl
or
xchg
loop
cmpsl
or
fisubrl
xor
sub
push
fcoms
or
jmp
sti
loop
and
cmpsb
out
iret
xchg
sub
mov
ret
call
lods
in
ss
xchg
push
out
mov
int3
cs
cmp
lcall
imul
ss
push
push
bound
js
sbb
inc
enter
cmp
or
adc
cmp
les
cmp
clc
jnp
xor
sub
or
xchg
mov
test
fmulp
sbb
push
sub
enter
stos
les
loope
and
insb
cmp
xchg
stos
mov
or
inc
out
push
outsb
or
ljmp
pop
sub
xor
mov
lods
jae
sti
lods
dec
or
cltd
or
lods
jbe
cmp
rcr
lock
int
adc
lret
ror
push
ss
in
insb
pop
aas
arpl
in
lea
mov
cmpsb
mov
dec
pop
mov
std
out
cmp
hlt
in
enter
mov
sbb
in
mov
pop
pop
xchg
push
jnp
dec
inc
out
fwait
dec
jecxz
jecxz
xchg
cmp
leave
ja
fwait
icebp
orl
or
jp
int
test
imul
inc
inc
outsl
sub
jecxz
xor
sub
adc
outsb
or
lods
test
aam
adc
in
fisubrs
xchg
dec
loop
lods
jmp
out
mov
jno
jecxz
cli
std
clc
clc
rclb
inc
inc
shll
push
fsubp
push
xor
xchg
mov
dec
dec
mov
add
mov
imul
sti
add
ss
inc
popa
or
jbe
jle
mov
aaa
sahf
add
mov
xchg
lea
mov
dec
in
imul
lods
lods
or
nop
data16
jp
aaa
sbb
pop
call
add
out
lcall
daa
mov
bound
divb
loope
rep
or
jne
pop
fdivrs
inc
cmpsb
inc
ljmp
cmp
mov
mov
aaa
jmp
testb
push
ljmp
adc
xor
insl
mov
mov
jb
cmp
loop
sbb
ds
cmp
movsb
imul
pop
xchg
aaa
lret
mov
mov
das
xchg
pop
jo
stos
cmp
iret
sub
mov
xchg
dec
adc
xor
in
out
push
or
dec
sti
push
adc
add
jl
or
sarb
sub
cmp
in
inc
xchg
shrb
and
icebp
dec
cmpsl
ret
stc
push
dec
fs
aad
leave
stc
leave
rorl
mov
lcall
sbb
mov
shll
out
roll
rcrl
aas
xchg
sbb
call
mov
icebp
das
bnd
jo
cmp
add
add
cmp
jmp
push
xor
sbb
ljmp
xchg
test
dec
add
jns
mov
jl
psubd
aam
jp
ja
xchg
sbb
test
fdivrs
mov
loop
dec
cld
scas
mov
xchg
mov
je
outsb
pop
in
sahf
sahf
and
shlb
jecxz
sbb
adc
dec
push
rcrl
mov
xchg
mull
cli
bound
xlat
and
lcall
orl
mov
aaa
or
mov
out
or
sub
sbb
loopne
scas
movsb
mov
pop
jb
bound
mov
repnz
dec
in
dec
fwait
cli
adc
shl
pop
inc
xor
pop
pushf
jmp
push
or
test
stc
test
popf
std
add
sub
js
js
sub
mov
or
lock
xor
cmpl
push
push
pusha
xor
or
cmpsb
fimull
push
sub
add
sub
lret
xchg
outsb
cwtl
mov
cmp
jae
pop
test
sbb
sbbb
sbb
xor
imul
into
pusha
cli
ret
cmpsl
test
xchg
fdivl
sub
lea
push
dec
fldt
subl
push
push
jno
sub
add
cld
lods
call
jne
or
xor
popa
icebp
mov
mov
test
mov
iret
push
gs
xchg
push
adc
jge
adc
mov
lods
sub
aam
mov
inc
dec
sub
imul
add
sti
mov
xchg
out
ret
mov
ret
jnp
cmpsb
xlat
and
or
xchg
xor
outsb
mov
test
mov
testl
pop
jne
dec
int3
pop
or
test
pop
xchg
stc
inc
xor
fnsave
and
or
mov
pop
xorl
pop
inc
mov
jb
mov
mov
pushf
inc
inc
rorb
and
sti
mov
mov
or
fs
mov
dec
jp
repz
inc
das
lcall
cmpl
jmp
or
xchg
dec
in
pop
mov
mov
dec
insl
lret
int3
loop
fmulp
outsl
xor
mov
jmp
or
cmp
enter
mov
sbb
repz
loope
pop
and
loope
push
push
fs
sub
repz
cmpb
lret
adc
sub
mov
push
jb
fucompp
adc
and
sbb
jne
mov
mov
pop
pop
stos
adc
into
jns
in
imul
fisubrs
fildl
jo
sub
lods
push
aas
and
subb
sub
cmp
loop
in
mov
adc
sbb
rol
in
xor
inc
inc
jp
inc
sub
mov
dec
jns
test
cmp
push
inc
xor
stos
sbb
add
dec
push
test
mov
popa
test
inc
test
les
cmpsl
xchg
pop
lcall
dec
lea
jns
insb
lret
or
leave
test
in
int3
dec
ss
aaa
sub
sar
stc
sbb
sbb
adc
bound
scas
test
and
lret
jns
add
pushf
add
aaa
sbb
sub
repz
mov
lods
push
shlb
rcr
stos
jmp
mov
and
xchg
mov
mov
cwtl
jle
lods
mov
inc
dec
das
sbb
aam
or
lcall
pop
push
fcompl
mov
aad
shrb
adc
in
pop
cmpl
inc
ret
push
fldenv
xchg
pop
fwait
and
adc
iret
lahf
mov
mov
push
shlb
ljmp
sub
and
iret
std
push
push
dec
mov
push
mov
add
xor
pop
push
mov
push
mov
jmp
enter
in
dec
sub
mov
scas
or
pop
adc
shl
mov
subb
adc
cmp
fdiv
ret
xchg
ja
popf
ret
dec
icebp
dec
sbb
push
xor
push
int
mov
jmp
push
cmp
ljmp
pusha
cmp
push
sub
cmpsb
stos
add
cmpsl
add
movsl
data16
pushf
lret
dec
push
pop
pop
aam
enter
int
dec
pop
leave
jo
in
call
pop
test
adcl
xchg
stc
jne
or
xor
dec
adcl
jg
cmp
cs
xlat
xlat
shlb
add
add
adc
daa
or
cs
popf
outsl
lret
imul
insb
mov
subl
ret
sub
pop
mov
mov
adc
lods
les
int3
stos
addl
dec
fcoml
mov
loop
sbb
sub
pop
cwtl
sbb
pop
sbb
push
aas
adc
testb
sub
mov
addr16
dec
sbb
cltd
lahf
sbb
ds
movb
movsb
pop
fcoml
push
or
shlb
sti
cmp
or
push
or
push
inc
mov
mov
push
add
cmp
mov
xlat
xchg
xchg
inc
or
out
mov
sub
push
mov
xor
sbb
add
adc
scas
sub
sbb
xor
cmp
sbb
add
popf
jge
pop
push
loop
push
adc
cmp
jae
jmp
subl
xchg
mov
lret
fistpl
mov
lods
and
sub
jmp
xchg
mov
sub
sahf
pop
mov
dec
push
push
popw
adc
add
or
mov
int3
mov
lea
mov
mov
xchg
mov
jbe
cmpsb
mov
or
xchg
mov
inc
and
clc
or
ret
imul
mov
scas
mov
mov
sbb
lods
jmp
insb
sahf
dec
mov
xchg
cmp
ret
mov
jge
shrl
insb
pop
add
addl
mov
jmp
dec
int
sahf
test
gs
mov
inc
stos
fsubr
int3
pop
pop
or
inc
mov
dec
mov
dec
xchg
cmpb
xchg
iret
loop
inc
cmp
or
jmp
xchg
orl
sbb
adc
outsb
enter
xor
test
mov
push
imul
aad
cmp
xchg
push
ja
icebp
insl
addr16
mov
and
push
jl
fsubr
add
ficomps
sub
ja
stc
in
cmp
jle
xchg
aad
ret
inc
fwait
mov
mov
jae
ret
stc
mov
mov
bnd
lods
mov
cmpsl
jp
sub
push
jmp
pushf
stos
out
lods
mov
in
jp
push
xorl
xchg
int
das
gs
pushf
rcll
fstpl
adc
sub
inc
test
jbe
nop
or
mov
and
imul
jmp
mov
dec
and
jne
adcb
orb
adc
and
mov
aas
aam
test
inc
sbb
sub
sub
and
fcmovbe
push
repnz
inc
jbe
mov
xchg
xchg
jecxz
ror
inc
mov
cmp
pop
mov
xchg
jmp
or
fstp
stc
fdivl
repnz
iret
dec
push
sarb
pop
xor
imul
pop
xor
rorl
jmp
loope
leave
out
cli
notl
xor
repz
ret
push
and
cltd
test
mov
sub
or
cwtl
adc
leave
jge
add
pop
aad
push
xchg
mov
inc
shl
or
cmp
ljmp
popf
lahf
fstpt
xor
stos
in
adc
sti
ffreep
cltd
out
fisubrl
lea
pop
pop
or
push
ljmp
pop
xor
cmpsl
addr16
inc
pusha
xor
or
and
mov
mov
setg
push
add
push
dec
xchg
mov
jecxz
add
sti
scas
les
into
push
fwait
dec
push
mov
mov
ret
sbb
cltd
xchg
adc
cmp
lds
jnp
mov
and
cmc
mov
lcall
movsb
inc
mov
mov
pop
lods
movsl
lea
mov
and
push
mov
iret
pusha
mov
push
pop
push
test
call
pop
das
and
mov
lea
lods
fildl
ficomps
dec
or
daa
fidivrl
ret
and
insl
lods
cmp
ret
jmp
dec
dec
mov
sub
push
inc
lahf
enter
testb
ljmp
sub
insb
ss
cwtl
mov
scas
cmp
int
out
lret
rcrb
push
inc
insb
mov
fldcw
imul
aas
movsl
or
lock
lds
stos
lret
sbb
fdivl
sahf
ljmp
cmp
fidivs
jge
out
xlat
pusha
mov
pop
jg
fisubrl
in
aam
in
inc
mov
pop
or
or
adc
insb
or
test
mov
psrad
testl
pop
mov
sarb
xor
bound
sbb
cmp
fisubrl
push
xlat
and
inc
mov
scas
ret
add
sti
jecxz
in
or
inc
cs
add
add
mov
out
xorb
insb
or
sti
fcomps
mov
adc
xor
mov
mov
inc
das
iret
in
sub
pop
lcall
dec
aam
jno
mov
bound
add
jmp
cltd
dec
das
incl
mov
pop
stos
mov
mov
test
mov
add
xor
or
lea
push
push
inc
dec
stos
in
repnz
and
jmp
inc
rcrl
stos
lret
mov
shl
push
movsl
add
cmp
pop
mov
fldt
fsqrt
into
xchg
jnp
mov
or
gs
add
adc
cmp
out
and
mov
ror
divl
jge
iret
cmp
loop
sarl
cmp
mov
sub
dec
mov
int
dec
sub
and
lods
mov
inc
adc
outsl
shll
ret
cmp
add
int
sub
xchg
mov
xor
xchg
dec
mov
lea
divb
push
pop
push
jb
mov
mov
sbb
scas
shll
mov
fisubrs
dec
outsb
push
sbb
out
test
mov
mov
sbb
mov
call
push
xchg
sub
sub
into
ss
xchg
mov
out
pop
xchg
loop
repnz
out
lea
mov
xchg
mov
outsl
mov
xchg
jne
pop
lods
mov
sub
ret
loop
adc
sub
push
popf
shr
or
rcrb
ja
adc
push
or
cltd
cld
in
inc
out
ret
pop
or
mov
or
dec
stc
or
mov
dec
mov
pop
jmp
push
push
sbb
int3
or
outsb
or
jne
or
fs
jb
std
sub
arpl
jmp
lods
arpl
outsb
bound
or
out
push
and
adc
idivb
in
inc
mov
cmp
sub
jb
sub
lods
insl
shl
or
jb
fdivrl
sbb
sub
lret
rcrb
test
and
sub
lea
jae
add
imul
adc
jmp
fs
mov
jmp
jecxz
lods
add
or
faddl
jmp
push
aam
subl
stc
lret
xchg
adc
ret
push
mov
data16
jns
sub
imul
jmp
cltd
or
jmp
inc
lock
mov
adc
dec
xchg
sbbl
sbb
mov
sbb
cmp
inc
lahf
fdivl
or
add
adc
rcl
add
mov
negl
fiaddl
dec
ljmp
sbb
lds
ljmp
jnp
cmpb
jae
xlat
xor
popf
push
inc
cs
cmp
ret
ficoml
mov
sub
stos
fsubrp
lcall
test
ljmp
mov
sub
jecxz
cld
or
ret
fs
sbb
scas
les
or
lret
test
or
jb
shrb
mov
inc
dec
pop
mov
cmp
cmp
pop
push
pop
inc
fcompl
and
dec
mov
jmp
sbb
dec
and
scas
pop
adc
shlb
into
popf
xchg
loop
arpl
nop
or
mov
add
lods
or
lea
sub
into
xlat
sbb
cmp
into
or
mov
inc
push
call
sahf
mov
xchg
push
mov
aas
inc
int3
jmp
or
movsb
pop
mov
test
mov
xchg
enter
mov
loope
scas
shrb
or
enter
add
xchg
cltd
addb
sub
jle
enter
sub
or
adc
and
push
loop
out
xchg
insl
iret
test
out
push
xor
outsl
mov
ret
lods
mov
fiaddl
cmpsl
icebp
jnp
adc
sub
fucompp
fucomp
push
cmc
or
sbb
test
push
out
clc
lret
push
xor
lcall
andb
add
dec
cmp
dec
scas
enter
scas
loop
add
push
inc
sub
sub
fsubl
stos
repnz
mov
jo
and
sbb
gs
movsb
mov
mov
cld
mov
push
pop
mov
iret
xchg
pop
bound
push
loop
ret
jbe,pn
data16
xor
jo
dec
cs
sub
int3
jae
jle
test
ret
subb
sub
inc
adc
cmc
cs
int3
add
push
and
sub
rorb
popf
push
shll
std
push
mov
sahf
mov
fisttps
fimuls
shlb
repnz
or
dec
stos
xor
insb
fildl
or
and
das
cmp
cs
orl
insb
xchg
add
jle
pop
inc
push
push
ret
popa
and
daa
push
in
dec
cmc
cli
fndisi(8087
sub
cli
ja
sbb
rorl
cmp
rorl
jecxz
xchg
jecxz
call
jg
sbb
jmp
mov
imul
fcompl
mov
bnd
jmp
adc
push
decb
cmp
push
adc
inc
pushf
xchg
cmp
daa
cs
inc
dec
dec
pop
iret
loope
mov
push
mov
decb
push
fildl
in
leave
addb
adc
xor
add
outsb
jbe
cmp
das
insb
mov
adc
cmp
fcmovb
jge
jbe
ret
push
mov
mov
lret
jge
daa
mov
push
jne
iret
add
adc
lods
test
faddl
shll
push
dec
fucomi
sub
dec
insb
insl
lahf
cmp
test
pop
ret
add
xchg
mov
sbbl
stos
das
popf
loop
xchg
ret
lods
lea
mov
sub
or
dec
inc
xchg
leave
stos
cmp
jmp
or
das
xchg
dec
adc
mov
arpl
xchg
enter
call
scas
ret
sbb
call
jno
mov
shlb
push
ret
out
pop
das
fcoml
mov
push
lods
clc
mov
or
add
or
sbb
ret
xchg
mov
add
imul
inc
cmp
mov
mov
out
push
sbb
xor
es
fisttpl
ja
mov
push
jl
loope
push
test
add
scas
ljmp
xchg
scas
dec
in
add
sub
and
ret
and
dec
pop
or
stos
push
insb
ljmp
enter
sub
sub
fnstenv
test
cmp
incl
sub
sub
gs
adc
xor
dec
out
mov
xchg
and
mov
dec
arpl
scas
xor
dec
sbb
jecxz
out
out
shr
sbb
fcoml
jmp
or
xchg
ljmp
add
pushf
mov
and
jp
dec
mov
dec
shrb
adc
divb
sub
inc
adc
jbe
ret
jle
adc
fcmove
imul
push
mov
out
xchg
enter
cli
pextrw
jne
popa
pop
pop
push
movsb
cmp
aam
shr
fucomi
call
sub
movsl
or
das
out
int3
outsb
mull
lret
or
xchg
jle
and
std
sub
stos
repnz
xor
mov
out
popa
sarl
and
outsb
outsl
mull
movsb
ja
insl
and
sbb
leave
andb
popa
cmp
push
push
dec
test
sahf
sbb
sbb
cld
jle
mov
dec
pusha
ljmp
push
sbb
loopne
sbb
add
ret
lods
cmp
push
adc
xlat
cmpsb
mov
fildll
mov
stc
insb
insl
adc
push
or
mov
ret
jmp
xor
shlb
mov
push
mov
cmc
adc
cmp
adc
mov
or
adc
in
lcall
lods
iret
das
stos
adc
mov
push
sbb
sbb
cmp
ficoml
pop
outsl
in
lods
out
dec
sarb
cmpsb
mov
fwait
in
test
imul
ds
lods
mov
ret
les
out
lret
movsb
loop
out
push
test
out
arpl
xor
pop
mov
scas
jecxz
insb
aad
in
leave
jg
adc
fsubrl
stos
shl
mov
dec
sbb
sahf
jo
jge
stos
int3
lods
stos
adc
or
sub
add
hlt
pop
outsb
xor
sbb
loop
in
test
das
je
iret
femms
lret
cli
mov
scas
mov
imul
loopne
mov
lahf
jecxz
and
sub
outsl
sahf
or
into
ror
aas
into
dec
sub
mov
adc
or
mov
fdivs
iret
sub
cmpsb
sub
mov
sahf
jo
clc
das
add
jno
xchg
sub
adc
and
orb
mov
fisubs
dec
dec
aam
ret
popf
frstor
pushf
out
into
mov
mov
lods
push
xor
push
loop
enter
test
data16
xchg
or
push
or
sbb
add
push
xor
imul
xchg
sub
ret
and
mov
sub
int3
or
test
sub
xor
pop
out
movd
mov
sbb
arpl
mov
pushf
jno
mov
cmp
dec
aaa
arpl
std
stos
jb
jl
in
mov
loop
push
int3
mov
aas
dec
cmpsl
sbbl
cld
test
aad
orl
gs
out
mov
mov
pop
pop
sub
xchg
adc
inc
or
sbb
cli
xchg
or
pusha
xchg
cld
cltd
jnp
in
add
mov
lcall
or
cmp
aad
mov
test
sbb
lret
mov
cltd
ja
das
add
dec
lcall
aaa
push
xor
pop
pop
repnz
scas
jge
mov
mov
out
ficoms
lahf
iret
in
aam
sub
or
pop
push
dec
gs
xchg
jb
les
push
rol
popa
into
cs
mov
loop
repnz
scas
leave
dec
out
cwtl
loop
mov
jb
cmp
movsb
into
mov
or
ljmp
mov
in
lret
std
pushf
or
and
sbb
sbb
in
vhsubps
push
xor
hlt
ret
mov
in
pop
cmpsb
dec
call
jmp
jno
cmp
mov
cld
int
je
cld
aam
and
aad
mov
dec
std
pop
mov
lods
adc
scas
cmc
mov
loop
popa
adc
jo
sub
int3
mov
jb
jge
jecxz
sarb
imulb
out
xor
pusha
push
out
mov
lods
shrl
out
inc
flds
sub
push
ret
pop
mov
int
and
sub
or
in
cmpsb
inc
cmc
out
pop
add
test
mov
dec
lods
mov
mov
mov
in
outsb
test
outsb
sbb
sbb
pop
add
int3
call
and
add
int
shll
stos
inc
or
cmp
cmp
fiaddl
pop
dec
inc
mov
mov
adc
out
lret
mov
mov
iret
and
pop
dec
pop
in
mov
rcll
fdivrl
jne
imul
enter
jg
jne
jo
pop
mov
scas
sub
inc
mov
jge
inc
push
sbb
mov
mov
out
push
push
inc
dec
xlat
clc
hlt
add
adc
and
and
and
ljmp
or
dec
jnp
and
xchg
repnz
lret
add
orb
mov
addl
addl
icebp
mov
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
repz
call
sahf
mov
cmp
mov
mov
add
arpl
ret
dec
dec
stos
sbb
lea
add
or
int
mov
mov
out
adcb
sbb
xchg
push
test
or
loopne
inc
stos
mov
sub
or
into
outsb
mov
xchg
adc
arpl
stos
dec
pop
push
push
adc
ret
mov
leave
ljmp
mov
test
insb
cwtl
adc
push
or
jge
mov
dec
cmovns
int3
das
push
imul
scas
add
enter
fcoms
out
iret
push
xchg
jmp
das
dec
jmp
pop
scas
or
in
jns
pop
les
stos
pop
pop
xchg
xor
rolb
jbe
mov
div
mov
or
mov
insb
scas
jae
in
and
mov
and
add
in
sbb
dec
and
sbb
mov
sub
testb
outsl
test
dec
sub
pop
xor
dec
or
insl
popf
bound
testl
jecxz
int
test
and
fsubl
jle
sub
pushf
movsl
clc
or
fisttpl
xor
fsubrl
pop
ret
xchg
in
and
push
test
adc
jae
hlt
cmp
ret
lods
scas
mov
xchg
repnz
dec
mov
iret
shlb
aam
sbb
outsl
aam
xor
jmp
cmc
jge
test
popa
aas
adc
mov
std
rcrb
jl
loop
test
pop
and
mov
jecxz
cli
jl
les
lea
cmp
cmpsb
add
sub
xor
inc
ljmp
rcrb
dec
cld
sbb
cld
adc
fldt
pop
dec
xchg
lods
scas
out
or
xor
cld
fdivrs
mov
repnz
cmpsb
xchg
xchg
adc
mov
es
pop
mov
scas
test
inc
adc
cld
xor
les
ret
daa
mov
add
rolb
jmp
add
xor
or
cli
mov
test
cli
inc
xorb
sub
sbb
insb
iret
sbb
ret
push
int
mov
imul
push
sbb
sub
pop
lods
dec
jmp
sub
sbb
inc
outsb
rorl
out
jae
adc
xchg
lret
ret
adc
mov
pop
stc
subb
or
je
insb
sub
loop
jge
cmp
cmp
mov
cmp
add
out
daa
mov
shrb
icebp
mov
inc
test
xchg
pop
dec
fcmovu
jo
jbe
arpl
scas
repz
cmp
xchg
pushf
lcall
cld
dec
rol
jmp
mov
dec
pop
sbb
add
out
xchg
dec
or
fst
jno
cmp
adc
repz
fidivrs
push
inc
lret
inc
fistl
arpl
or
add
dec
adc
adc
filds
insb
xchg
sub
push
ds
ss
push
sbb
or
in
loop
lret
rolb
mov
mov
pop
lret
inc
loopne
loopne
loopne
loopne
loopne
loopne
rcrb
add
ret
or
cmp
push
jo
pop
adc
xor
int3
pop
fwait
inc
orl
stos
dec
xchg
push
sbb
cmp
jae
add
adc
addr16
addr16
jo
jecxz
orl
push
cltd
push
or
mov
dec
xchg
dec
xchg
adc
leave
cmp
inc
shl
dec
sub
in
test
insb
adc
scas
lods
sub
mov
dec
xchg
push
scas
mov
stc
imul
stos
mov
sti
xchg
mov
or
insb
int
imul
sub
push
add
jecxz
dec
push
push
scas
ljmp
add
mov
loop
xchg
sub
outsb
test
arpl
push
ljmp
dec
jnp
out
push
in
push
push
outsl
ljmp
stos
add
xor
stos
or
dec
outsl
imul
adc
ljmp
add
out
mov
ret
not
call
dec
mov
enter
add
lcall
add
adc
sub
enter
dec
or
das
sti
inc
stos
push
mov
add
dec
in
or
add
pop
ret
jmp
ljmp
xor
lret
sbb
rcl
loop
xchg
ljmp
int3
push
push
push
lret
imul
outsl
imul
mov
push
mov
popf
orl
xor
mov
adc
imul
and
aad
pushl
jmp
jb
add
mov
lods
lock
pusha
fldt
jnp
sub
xor
addl
push
arpl
outsl
int
rclb
popa
push
scas
adc
mov
in
in
test
call
push
repnz
or
inc
int
push
sbb
mov
dec
cmp
sub
push
xchg
ret
and
xchg
scas
mov
test
dec
cld
cmp
xor
in
outsl
mov
insl
test
lcall
dec
or
mov
or
call
cs
push
pop
jp
xchg
dec
adc
cmp
test
loop
dec
jg
imul
mov
scas
pop
scas
mov
mov
jmp
mov
jl
and
scas
mov
repz
cs
imul
into
cmpb
adc
or
out
ret
shl
pop
pop
xchg
mov
mov
lret
pop
imul
sbb
into
data16
xor
iret
jno
ljmp
lds
neg
stos
movsb
in
inc
add
lret
loop
in
sub
es
call
cmpsb
mov
push
ret
movsl
pusha
mov
das
add
mov
pop
mov
addb
mov
push
cmp
ljmp
push
lea
loop
and
adc
enter
shl
fsubr
fldpi
cmp
or
repz
pop
popa
add
test
popf
or
adc
dec
out
fisubrl
dec
les
les
xchg
and
ljmp
int3
or
enter
rcr
add
loop
cmp
fimull
xchg
lods
mov
add
mov
or
aad
cmpl
insb
nop
mov
jb
inc
imul
jg
inc
into
sbb
call
ret
arpl
test
adc
push
or
call
inc
xchg
call
xchg
loope
dec
js
push
adc
ret
dec
pop
shll
lods
sub
stos
aam
int3
push
cs
repnz
scas
add
adc
sbb
and
lret
jno
adc
push
add
dec
jmp
sub
mov
or
int
add
xchg
inc
mov
outsl
lcall
ret
xchg
adc
xor
outsb
test
shrb
cli
mov
sbb
lea
sarl
es
or
pop
in
adc
mov
xor
jl
cmp
test
cvtdq2ps
sbb
pop
pop
repnz
mov
adc
xchg
mov
lods
mov
pop
lret
rcr
adc
sub
lret
ret
jae
cmp
sub
cmp
fisubs
sub
or
mov
adc
mov
xorb
inc
lock
xor
sub
or
pusha
mov
jl
jmp
shll
lea
outsb
sbb
jge
mov
xchg
sub
ret
inc
jo
test
ffreep
ss
repnz
push
jl
je
adcl
in
push
add
push
xchg
fstpt
xchg
mov
or
push
rclb
aam
pop
jb
add
clc
leave
mov
jmp
cmpsb
jne
pop
mov
cs
je
enter
or
mov
lret
dec
jno
jo
in
ret
push
stos
xchg
pushf
jbe
leave
or
ljmp
inc
mov
outsb
leave
jecxz
xor
in
aaa
mov
cmp
xor
sub
popf
jne
sar
xor
movsb
push
dec
cmpb
sub
and
mov
mov
mov
or
push
pop
inc
es
ljmp
insb
sub
test
mov
hlt
fmull
aad
pop
out
shlb
repnz
movsb
adc
add
xchg
lods
pusha
xchg
iret
pop
scas
dec
mov
testb
repnz
or
adc
int
movsb
xor
push
dec
pop
pop
fucompp
imul
or
mov
xchg
dec
mov
ja
and
jbe
mov
jecxz
jle
dec
in
arpl
mov
mov
add
gs
lahf
dec
ss
sub
xchg
pop
arpl
lcall
out
enter
mov
adc
out
mov
in
loop
pop
push
adc
add
sub
cmp
mov
rcll
xor
pop
js
iret
cmpb
mov
in
dec
shrb
fxch
mov
mov
ljmp
pop
sarb
mov
ss
pop
pop
mov
clc
jge
sbb
jmp
por
pusha
or
mov
dec
sub
push
in
mov
orl
dec
test
movsl
inc
or
movsb
push
dec
mov
cmp
insl
addr16
lea
repz
sub
push
inc
cmp
jb
dec
mov
sbb
or
add
mov
out
pop
add
mov
or
dec
pop
mov
arpl
fcmovbe
adc
insb
add
xchg
xor
add
pop
shlb
sub
aam
dec
jnp
sbb
push
inc
add
mov
cld
xor
or
lret
inc
adc
and
sahf
ljmp
sarb
loop
mov
jp
xor
rorb
and
sbb
fadds
jno
sbb
or
bound
add
or
xchg
fcmovnbe
in
jmp
mov
hlt
in
mov
lret
push
lret
adc
shll
inc
adc
sbb
xor
xlat
orb
enter
jo
test
mov
fstl
cli
add
jecxz
dec
push
outsb
push
and
outsl
arpl
loop
in
or
ret
adc
clc
add
clc
add
sub
clc
add
inc
sub
clc
add
lods
in
or
cmp
mov
loope
dec
ljmp
ret
and
ret
push
or
les
or
xchg
inc
es
insl
test
std
jmp
pop
jmp
sub
lcall
mov
je
mov
lea
mov
rcrb
lcall
jo
sar
push
push
mov
jbe
mov
insb
scas
test
ret
sub
cltd
cs
cwtl
add
dec
push
jb
cmp
mov
mov
movsb
nop
cmp
std
dec
mov
xor
mov
dec
mov
shrb
ljmp
and
pop
sbb
stos
mov
pop
in
gs
das
shr
lods
mov
fdivrs
lea
shlb
pusha
mov
xchg
jae
ljmp
push
movsl
jmp
mov
jmp
dec
test
jnp
or
insl
fmul
aad
test
in
nop
inc
mov
mov
lea
xor
cmp
fwait
add
orl
aam
fmul
sub
and
call
cmp
fidivs
aad
dec
xchg
fcmovnu
pop
or
xchg
mov
stos
in
jmp
daa
mov
mov
jnp
sar
fcmovnbe
movsl
xchg
dec
adc
jb
cmp
add
scas
scas
nop
mov
lcall
je
enter
xchg
adc
daa
jno
and
inc
mov
sub
push
pop
mov
stc
pop
divps
cmp
xor
data16
or
loopne
jg
add
dec
add
into
fistps
aas
jle
mov
inc
aam
int3
gs
outsb
push
cli
pusha
fcoml
ret
lods
enter
test
push
jmp
sbb
shr
jne
int3
cli
test
xchg
lcall
sbb
mov
mov
lahf
test
pop
lahf
xor
add
orl
addb
lock
outsl
dec
or
fadds
cmp
es
cmp
popa
xor
jg
adc
lods
int
into
adc
pop
push
adc
fs
out
test
loopne
sub
lea
pop
mov
inc
push
or
adc
test
cld
inc
dec
test
movsl
sbb
add
xor
mov
jge
les
fstl
sbb
ljmp
je
cwtl
mov
cltd
fdivrl
adc
or
lea
dec
repz
loope
push
pop
int3
mov
jmp
pusha
imul
jle
mov
ds
arpl
cmp
sub
mov
cmp
add
push
xor
test
xor
fmull
stos
adc
cld
leave
dec
test
out
pop
mov
int
std
mov
inc
push
filds
in
add
sti
push
fiaddl
movsl
add
hlt
data16
and
and
sbb
bound
ret
inc
test
movsl
add
lods
sub
shll
xchg
out
es
clc
sbb
fsub
sbbl
xchg
ror
and
mov
repz
sub
mov
frstor
adc
daa
sbb
add
leave
jmp
mov
push
in
inc
mov
shrl
scas
jbe
push
out
mov
mov
aaa
es
mov
cmp
inc
test
jne
mov
jne
test
rcl
jmp
aaa
sbb
mov
aas
or
or
sbb
pop
out
shll
idivb
arpl
imul
mulb
ret
push
sub
dec
mov
jp
ljmp
loopne
aam
std
out
xor
loope
loope
sahf
xchg
mov
jb
aad
addr16
and
jmp
inc
sbb
fisttps
add
sbb
jno
cld
push
sub
xchg
in
or
shll
inc
je
ret
cmpsb
pop
pop
mov
mov
sbb
fs
test
push
or
mov
cmp
inc
subb
sbb
mov
inc
xchg
push
dec
jecxz
or
pop
pushf
scas
fcoms
je
xchg
insb
xor
or
jmp
cmp
test
arpl
push
mov
leave
mov
sbb
shrl
insl
daa
sub
jb
add
fsts
mov
sub
lods
inc
shrb
push
or
pop
sbb
mov
mov
adc
mov
xchg
mov
adcb
sbb
ds
pop
xchg
hlt
rclb
adc
lret
cmpsl
shll
jb
negl
cs
rcrb
inc
addr16
mov
lods
xchg
dec
int3
cmp
mov
pop
xchg
rclb
sahf
jmp
int3
lcall
mov
iret
lcall
pop
xor
pushf
test
adc
pop
xchg
cmp
dec
jb
scas
imul
jp
add
leave
enter
mov
ret
test
movsl
adc
mov
out
fldcw
cli
jmp
mov
in
sti
call
fnstenv
and
ss
inc
xor
in
push
cmp
sbb
or
jno
aaa
or
push
sbb
stos
mov
mov
push
pop
sahf
adc
add
ret
mov
xorl
mov
divl
repz
arpl
test
or
mov
and
push
sarb
cmp
andl
and
jge
ds
dec
mov
jb
movsb
or
xchg
push
aaa
and
xor
fstps
add
pop
or
or
fadd
pop
aam
ds
xchg
lret
paddsb
dec
pand
js
cmp
push
mov
cmc
lods
cmpsb
cmpsb
xchg
subb
in
mov
into
xchg
and
or
cmpsb
dec
dec
push
mov
pop
shlb
push
rorl
imul
loop
lods
push
lea
sbb
sbb
mov
inc
xorl
imul
fistpl
cmp
pop
jbe
pop
lods
outsb
addb
mov
ficoml
aad
lods
mov
push
inc
out
out
xor
mov
or
push
gs
sbb
out
loop
mov
fsubl
adc
jecxz
int
pop
pop
jmp
aas
clc
inc
out
shlb
xchg
sub
sub
sub
adc
les
repz
mov
mov
jae
mov
ret
lcall
ret
cmp
cld
mov
add
lea
notb
mov
fidivs
repz
cli
ret
and
call
pushf
ficoml
pop
dec
add
push
xchg
mov
dec
mov
cmp
and
adc
outsb
add
rorb
mov
jge
lcall
lods
jmp
cld
xchg
adc
jmp
lcall
ret
ss
pusha
mov
push
push
test
mov
fdivs
lcall
aaa
mov
repz
jp
and
shll
push
sbb
mov
mov
ret
lods
dec
out
loop
dec
imul
cmpsb
lahf
mov
lods
ljmp
xlat
cmp
push
movsb
push
xchg
lea
or
sbb
xor
or
xchg
push
repnz
ds
outsb
or
jmp
pop
not
mov
xchg
mov
es
mov
mov
in
outsb
ljmp
pop
dec
mov
xchg
lahf
jae
adc
je
ret
lods
popa
dec
push
scas
aam
xchg
xchg
mov
and
fistl
ret
jle
leave
pop
mov
pop
adc
inc
gs
jmp
pop
jns
jno
pop
jecxz
shl
add
les
sarb
and
add
pop
pop
pop
mov
adc
push
mov
push
jae
xchg
xor
arpl
dec
aam
add
sbbb
ljmp
stos
scas
loop
out
fidivs
mov
stc
js
adc
push
movsl
pop
rcrl
pop
mov
mov
xchg
or
push
lea
sti
mov
call
mov
sub
in
popf
adc
repz
fisubrl
pusha
stos
mov
adc
and
sub
movsl
fidivl
push
jge
lret
push
sbb
loopne
stos
or
cmp
loopne
in
sub
rolb
sub
mov
insb
mov
out
and
into
int
dec
cmp
sub
mull
and
int3
lods
ljmp
cmpsb
mov
rcrl
sbb
inc
push
mov
rolb
cmp
loop
xor
int3
ret
popf
shl
sbb
jno
pusha
or
sbbl
sbb
pusha
xchg
mov
sbb
in
xchg
jne
roll
insl
int3
jnp
or
out
mov
ret
pop
ljmp
jl
jmp
mov
dec
fsts
repz
xor
ret
mov
or
sbb
repnz
jg
rolb
ss
or
pop
addr16
push
push
enter
scas
push
push
imul
jo
push
pop
push
sahf
or
pusha
daa
outsb
sbb
sarl
push
pop
ja
bound
mov
mov
cli
jb
test
jmp
dec
pop
mov
sub
sub
sub
ljmp
lods
mov
lods
ret
clc
ljmp
jae
fildl
aad
jmp
jbe
mov
lcall
punpcklwd
push
fs
mov
ret
add
mov
jmp
jge
xchg
jbe
xor
es
stos
push
mov
lret
xor
jbe
xor
mov
enter
insb
lahf
push
dec
or
or
lds
xchg
mov
test
and
xor
iret
stc
cmpsl
dec
stos
ljmp
ds
mov
and
dec
ret
ret
fcmovnu
push
push
loop
into
cmpl
sahf
adc
jae
sbb
sbb
inc
xchg
mov
fimuls
mov
pop
fdiv
loope
addb
add
inc
imul
ljmp
push
sbb
aad
sbb
insb
mov
xor
in
sbb
xchg
sti
stos
stc
rorl
pop
shll
stos
out
out
hlt
nop
cltd
dec
fsub
lea
cmp
sbbl
jle
ficomps
hlt
loope
adc
bound
mov
mov
push
ficoml
pop
sarb
sbbb
cmp
add
inc
jl
orb
out
mov
dec
add
push
jge
int
jmp
aam
or
out
call
lcall
les
sbb
loope
and
jno
std
daa
dec
cld
inc
sub
bound
xchg
ss
jnp
mov
pusha
mov
inc
mov
repz
push
test
add
cmp
or
in
jmp
jo
scas
stos
sub
fwait
sbb
add
push
orb
sbb
cmc
lret
adc
fidivrl
aaa
mov
stos
mov
pop
ja
cmpsl
add
and
ret
sbbl
mov
in
add
insl
scas
or
pop
aaa
addr16
push
int
data16
xor
fwait
jmp
loope
dec
loope
stc
or
lods
fs
es
xorl
pop
sbb
xor
pop
insb
in
sub
dec
mov
mov
hlt
mov
xchg
les
lock
pusha
lcall
dec
or
xchg
dec
or
xchg
dec
push
icebp
sub
push
dec
dec
mov
sbb
and
fwait
push
add
inc
sbb
movsl
and
adcb
push
shll
je
cmp
dec
bound
mov
xor
ljmp
mov
cmp
je
inc
mov
out
out
mov
mov
or
insl
push
lret
jmp
popa
sub
dec
push
xor
add
pushf
adc
push
lods
or
dec
or
shrb
imulb
inc
pop
cltd
lods
or
sti
sbb
movsb
mov
jb
xor
lret
add
sbb
push
jp
jb
cld
mov
or
jns
and
add
dec
lods
pop
loop
jbe
or
jg
jae
sbb
sbb
add
in
subb
daa
out
scas
pop
mov
stc
cs
nop
push
sarl
add
jecxz
mov
jge
add
call
fwait
mov
fmull
lds
sub
call
lahf
inc
stos
adc
sbb
out
and
andb
ret
mov
sub
outsl
test
rorb
mov
jnp
cld
loop
xchg
shlb
inc
rolb
mov
push
pop
inc
jle
adc
lea
cmp
adc
cli
pop
sub
je
sbb
cmp
jnp
dec
lret
mov
test
inc
sub
dec
cmp
or
ja
outsb
out
orl
shlb
test
aad
or
dec
lods
aam
std
rcrb
mov
or
pop
xchg
sti
or
dec
adc
push
fdivl
fs
xor
mov
cmp
pop
das
leave
jge
iret
call
xor
cmp
ret
ja
or
jl
mov
popa
cmp
push
inc
inc
rcrl
jge
push
xchg
js
clc
pop
mov
push
cvtdq2ps
jmp
sub
stos
adc
mov
sahf
iret
call
or
dec
ret
cltd
cmpl
xchg
dec
cld
dec
out
mov
lods
push
push
std
scas
xchg
cmp
insl
mov
das
dec
lea
pop
divl
addb
aam
dec
xchg
inc
cmp
dec
dec
int3
xor
mul
dec
out
xchg
xchg
in
mov
xorb
std
sbb
popa
scas
out
pop
pop
lods
ffree
aas
jecxz
in
or
dec
pop
into
pushf
sub
ja
in
fisttpll
pop
int3
hlt
or
adc
fdivs
jae
or
mov
rcrb
inc
jb
dec
adc
jp
jne
jmp
lahf
movsb
mov
clc
test
mov
cltd
call
sti
js
jecxz
jo
aaa
loope
cmp
in
mov
lods
stos
insb
xchg
cli
testb
mov
xchg
data16
cld
out
mov
mov
js
push
je
mov
push
and
sub
adc
ds
jae
jnp
movsb
jle
mov
pusha
addb
jae
sub
and
and
pop
ds
push
fimull
imul
jb
inc
fucomi
sbb
call
cld
cmpl
insl
sub
mov
add
xchg
mov
cmp
cmpl
in
adc
outsb
lods
aad
ljmp
cmpsl
out
jl,pn
adc
in
pop
xchg
mov
or
adc
out
adc
loop
add
pop
stos
dec
stos
sbbb
outsb
loop
mov
ss
leave
cmc
imul
pop
or
push
add
arpl
bound
dec
loopne
xor
mov
push
inc
xchg
pop
sbb
mov
xchg
lds
fdiv
movsb
frstor
test
fsubs
mov
xor
inc
sub
loop
cmp
sti
mov
shl
movsb
arpl
adc
sbb
imul
out
and
push
aad
aas
insl
and
insb
xor
ret
pop
and
jmp
mov
fstpt
in
mov
add
dec
cmp
lcall
and
lods
mull
ja
rcl
dec
adc
sub
pop
out
enter
mov
xchg
xchg
inc
mov
lea
jbe
int3
adc
int
addb
test
inc
cs
shrb
test
out
les
shlb
adc
mov
lods
mov
cmpsb
or
imul
xchg
cmp
inc
loope
and
loope
fs
sti
js
mov
mov
outsl
inc
lret
add
insl
pop
mov
sbb
stc
jecxz
push
jge
stos
adc
in
scas
sub
mov
in
push
add
mov
pushf
adc
inc
inc
inc
sub
sub
mov
out
fwait
in
pop
fiaddl
into
mov
mov
lods
xchg
xor
mov
cmp
xor
neg
popf
xor
aaa
mov
in
mov
add
xchg
out
mov
jae
add
sarl
push
inc
int
add
filds
int
iret
movsl
imul
xchg
filds
imul
push
mov
cltd
push
xor
lret
mov
ds
scas
cwtl
mov
pop
jnp
test
dec
cli
mov
es
add
push
lahf
sub
mov
lods
in
cltd
les
mov
or
or
in
cmp
leave
imul
movsl
lea
int3
jg
loop
jle
xchg
adcl
fcoml
xchg
sbbl
mov
stos
ljmp
mov
pop
sbb
mov
rorl
inc
shll
pusha
xchg
pmaxsw
xchg
ss
xchg
push
std
ret
cmp
gs
dec
cmpsl
pop
ret
jp
mov
sarb
rolb
jmp
jb
and
or
ds
add
hlt
das
aam
cmp
sti
ss
jge
rol
sbb
ret
xchg
decb
mov
inc
loopne
fsubrp
ret
adc
sahf
sub
flds
dec
pop
mov
dec
ret
or
xor
add
and
repnz
into
in
loop
inc
or
movsb
sub
jg
inc
daa
dec
mov
xchg
ficoms
mov
arpl
ds
sbb
xchg
jecxz
sub
push
pushf
in
jno
testw
ret
pusha
push
sbb
mov
cli
mov
jo
test
fcmove
mov
or
dec
cld
mov
add
xor
pop
das
adc
ds
xor
push
mov
push
fisubs
sub
loopne
mov
movsb
pop
lahf
int3
sahf
lahf
and
test
fsubr
inc
mov
je
jne
xchg
or
rolb
xlat
push
sbb
std
ja
movsb
mov
dec
jecxz
pusha
jle
sbb
and
cmc
iret
xchg
xor
push
or
lcall
loop
cmp
loopne
xor
shlb
mov
gs
pop
stos
cs
lahf
jecxz
sahf
sbb
js
shr
loop
sti
rclb
cmp
inc
push
aad
sub
bound
sbbb
imul
or
idiv
cwtl
jl
mov
add
cmpsb
ss
test
flds
mov
not
jns
add
lahf
jp
mov
jg
pop
addb
mov
adc
or
push
scas
sub
xor
shlb
in
movsb
out
in
ficomps
int3
mov
ret
shll
pop
inc
out
out
aad
mov
push
push
adc
ljmp
bound
sub
sti
push
push
jp
ja
mov
repnz
stos
sbb
jecxz
mov
ja
cmp
pop
adcb
stos
mov
jp
mov
inc
jmp
sub
rorl
pop
int
sti
pop
fwait
int3
mov
pop
inc
outsb
xchg
adc
sub
mov
lock
sti
xor
push
and
mov
add
fistpl
movsl
mov
dec
daa
nop
lahf
sbb
pop
imul
cmp
jno
lcall
add
mov
ret
push
xchg
sbb
mov
inc
lcall
daa
adc
cs
jo
daa
jl
adc
xchg
stos
cmp
aas
dec
pop
adc
test
fst
shlb
push
fsubl
push
xchg
loop
jnp
int3
or
fsts
push
or
mov
inc
loopne
addr16
mov
fcmovne
fcmovnbe
loop
sbb
fs
sbb
mov
adc
iret
xlat
in
push
inc
add
in
mov
scas
jnp
mov
loop
lret
dec
aaa
or
ss
ret
mov
dec
enter
xchg
sbb
sarb
test
mov
jg
fldz
push
cmp
mov
sub
jo
lcall
add
inc
jmp
jp
xchg
xor
xchg
fildll
xor
push
adc
gs
pushl
xchg
mov
push
pop
mov
sbb
add
inc
out
or
sbb
xor
out
sub
insl
movsl
lea
lds
mov
shr
xchg
mov
and
shrl
ret
mov
or
mov
adc
mov
or
mov
scas
orl
int3
or
fisttpl
scas
xor
jae
ljmp
sti
or
mov
inc
cmp
frstor
test
lds
sub
sub
mov
fidivs
int
jo
jle
lods
push
mov
push
cmpsl
daa
nop
inc
fs
jmp
fstps
ja
dec
pop
mov
mov
jmp
push
das
sub
ret
mov
inc
dec
sbb
push
es
and
outsl
lret
jg
xchg
daa
jmp
and
lea
sbb
or
or
mov
in
lea
or
shrb
xchg
push
jecxz
xor
imul
cmc
in
dec
clc
sbb
xor
in
rcrl
lret
xchg
sbb
data16
enter
xlat
sub
xchg
mov
pushf
mov
or
sub
pop
xor
xchg
and
push
sbb
mov
adc
test
mov
mov
jbe
ljmp
adc
mov
dec
adc
mov
scas
sarb
hlt
mov
sub
push
ret
cs
in
push
mov
sbb
andb
in
pop
fmull
inc
jmp
shll
ds
jnp
or
adc
jnp
pop
or
daa
ljmp
pop
out
or
push
cwtl
loope
data16
stc
add
jg
test
insb
shlb
popa
inc
loop
sbb
push
mov
inc
cmc
lods
xchg
mov
out
nop
push
jmp
andb
rorb
mov
add
in
jmp
jge
not
sbb
pop
icebp
rolb
insl
mov
jmp
repnz
add
popa
mov
out
loop
xor
jl
jmp
orl
inc
ja
imul
add
sahf
shlb
mov
rcll
dec
addl
outsb
jns
mov
xchg
out
out
out
ds
jg
aaa
imul
push
mov
outsl
repnz
movsb
or
pop
movsl
cmp
add
fstpl
fisubrl
aaa
fcompl
push
cs
pop
lods
push
aaa
stos
out
pop
rcrb
mov
push
and
das
mov
imul
push
das
out
jns
sti
mov
mov
call
xchg
in
pop
ret
cs
xrelease
jae
xchg
xchg
push
ljmp
pushf
dec
push
lock
add
xchg
js
and
mov
aam
mov
imul
lcall
test
sub
das
sti
mov
insl
shll
fisttps
xchg
neg
addl
bswap
test
shl
movsb
and
xchg
repnz
out
out
sbb
pop
xchg
mov
sub
mov
movsb
cmp
jecxz
xchg
xchg
add
sbb
mov
jmp
mov
repnz
mov
sahf
in
cmpb
or
mov
adc
adc
outsb
xchg
xor
daa
or
jne
cmpps
jecxz
scas
outsl
mov
ja
ret
sbb
jecxz
jmp
inc
pop
mov
divb
pop
out
hlt
loop
shlb
adc
jecxz
jbe
call
mov
sbb
or
lea
daa
rolb
push
push
mov
mov
cld
inc
sbb
lret
sbb
stos
adc
cmp
movsl
push
push
shr
ljmp
pop
add
fldt
je
mov
dec
stos
jle
pop
ret
cli
sub
push
repnz
inc
cltd
push
lcall
lea
ret
xchg
jnp
aam
mov
adc
xlat
dec
fildll
push
ljmp
mov
cs
cmpsl
mov
loope
rcll
push
pop
pop
andb
dec
cltd
cld
and
lea
icebp
dec
xchg
stc
sub
int3
ja
movsl
xchg
inc
cmc
sub
mov
push
push
and
cltd
repz
test
fidivl
mov
inc
scas
dec
in
das
push
rorb
stos
fstl
fsubr
jge
aas
sbb
add
add
sub
notl
cmp
jg
dec
cmp
and
arpl
sbb
sub
and
fdivr
push
cmp
imul
movsl
lods
aad
mov
cmp
mov
fmul
andb
insl
mov
clc
lret
push
lods
xchg
push
cli
stc
jl
call
jle
or
aam
sub
xchg
data16
rclb
fwait
or
mov
dec
push
sub
xorl
push
fneni(8087
mov
or
sbb
hlt
shll
cmpsb
add
call
ljmp
imul
cmp
xchg
jmp
in
in
not
loope
cmp
pop
push
jbe,pn
sub
frstor
ljmp
sbb
mov
sub
lock
call
subb
jg
movsb
jmp
push
jg
repnz
jp
scas
and
sbb
mov
cmp
jo
in
push
notb
and
sub
sahf
jecxz
inc
vpunpcklwd
xchg
js
jbe
xchg
pop
inc
aam
dec
mov
or
stc
es
jp
mov
test
pop
adc
push
jle
insb
ss
and
push
pop
xor
mov
add
inc
cld
jge
jbe
aam
pop
add
xchg
ljmp
xchg
lods
mov
mov
push
fidivs
daa
mov
mov
cmp
out
cli
mov
mov
ljmp
jge
jo
mov
xchg
sti
jbe
out
adc
iret
lret
int3
fnstcw
mov
add
std
sbb
lock
scas
out
stos
lcall
je
sub
int3
mov
stos
and
daa
cli
in
mov
inc
cltd
pop
lret
movsl
imul
mov
jg
xchg
jle
pop
popa
xchg
xchg
cmc
cltd
outsb
mov
loop
pop
pop
add
or
pusha
xor
sub
arpl
pop
mov
gs
dec
sbbb
push
mov
sub
stos
jl
add
push
sbb
or
xchg
pop
push
jae
jae
incl
clc
mov
jge
adcl
inc
orb
or
js
adc
ficompl
mov
sbb
in
ljmp
imul
jmp
divb
ret
adc
dec
sti
cli
mov
xchg
arpl
adc
rclb
adc
pop
push
jmp
loop
daa
push
fisttpll
pop
push
and
andb
imul
test
cmp
cmp
stos
les
sbb
sbb
test
les
pop
sub
int3
scas
sub
dec
or
in
inc
ret
aas
dec
mov
sbb
stos
xchg
mov
lds
repnz
int3
out
test
ret
loop
lret
inc
mov
addr16
push
cmc
arpl
jmp
push
mov
mov
or
jecxz
add
jns
jno
sub
int
subb
dec
and
add
or
stos
push
xchg
js
fcmovu
push
mov
movsb
std
out
sbb
testb
adc
or
or
arpl
sbb
lock
or
mov
jecxz
cs
leave
les
movsb
or
pop
mov
jle
lods
in
xor
cmpsb
xchg
xlat
cmpsb
scas
leave
movsb
arpl
add
adc
or
mov
add
fnstsw
lds
out
mov
loop
dec
ret
mov
push
push
mov
fldenv
into
movsb
mov
add
nop
rorl
fsts
hlt
mov
add
pop
test
fs
es
cmpsb
sub
jbe,pn
pushf
mov
call
xor
cli
dec
add
rcr
call
outsb
repnz
rorb
repz
shl
sub
imul
adcl
cmpb
mov
scas
inc
sub
jbe
mov
jecxz
clc
imul
enter
nop
jo
es
fmull
jnp
rcrl
cmpsl
aaa
pop
mov
jne
test
in
or
fmul
out
mov
jle
pushf
mov
in
dec
sahf
es
cltd
js
add
std
xchg
shrl
repnz
push
add
ret
int3
and
lea
pop
adc
fisttpll
in
or
xchg
sub
jb
mov
dec
cmp
sbb
repnz
sbb
mov
fstpt
or
add
movsb
dec
push
cwtl
xor
ds
leave
fs
filds
jmp
scas
xor
fistl
sbb
ror
mov
dec
mov
sbb
movsb
push
stos
adc
cmp
jmp
pop
loop
mov
mov
rclb
pop
mov
pop
outsb
nop
pop
sub
mov
mov
or
fstps
movsl
clc
mov
inc
stos
and
push
scas
int
xchg
push
mov
adc
push
lods
sub
out
or
inc
mov
jmp
cmp
dec
xor
sahf
sbb
ds
cld
ret
stos
adc
and
push
add
inc
faddp
adc
lea
in
jns
mov
push
xor
xchg
rorl
aas
aam
mov
or
arpl
imul
fimuls
xor
xchg
enter
les
xchg
inc
outsb
cld
jo
jge
int
dec
je
pop
addl
outsl
or
sti
fstl
popf
clc
icebp
int3
sub
dec
xchg
push
in
mov
mov
mov
lahf
clc
dec
cli
xor
mov
dec
test
imul
jmp
jmp
and
add
test
enter
jmp
int3
mov
mov
divb
das
sub
sbb
mov
test
rcll
fiaddl
inc
stc
xchg
jb
lahf
push
dec
sbb
push
and
or
lret
mov
cli
jo
mov
cli
push
pusha
add
orb
movsb
xor
mov
mov
mull
ds
shll
popf
repnz
mov
push
push
outsb
loop
rolb
mov
sahf
push
adc
outsb
sub
andb
mov
cmp
in
pop
jbe
in
je
fistps
imul
es
ds
xchg
xchg
test
cmpsl
insl
in
shrb
dec
push
push
addr16
js
push
xchg
pop
lahf
out
lret
mov
aam
lods
or
cmpb
or
cmp
addb
insl
mov
dec
je
gs
stos
movsl
addr16
mov
stos
insl
mov
scas
mov
pop
cld
push
jg
test
lahf
sbb
add
popf
out
imul
sub
cltd
cmp
jle,pn
or
cld
repz
mov
ret
loop
test
test
out
push
rorb
jb
rcll
test
jle
aaa
push
or
imul
mov
loop
movsb
add
in
or
cmp
mov
cltd
mov
cmpsb
pop
fsubrs
lock
dec
and
lock
sbb
sbb
add
shll
push
gs
idivl
push
mov
dec
dec
xchg
push
jp
adc
scas
mov
sbb
ret
mov
jge
add
in
out
lods
stc
pushf
add
mov
inc
jae
cli
in
andb
shrl
and
outsb
jb,pt
ret
adc
or
adc
jle
mov
sbb
xor
cli
rcll
orb
jbe
mov
test
adc
or
mov
sti
add
push
mov
aam
in
or
test
or
das
cltd
loop
push
pop
mov
not
cmpsb
add
push
mov
lret
mov
mov
clc
dec
lret
xchg
rcrl
scas
in
xchg
icebp
test
mov
mov
out
rcll
sbb
add
aam
jbe
movzbl
or
cwtl
sbb
or
ret
dec
in
push
ret
stos
mov
bound
inc
imul
jmp
pop
push
fdivr
sahf
scas
insb
movsb
scas
out
jae
sub
rolb
outsl
adc
inc
out
cs
mov
jmp
lods
adc
sbb
dec
popf
push
imul
sub
in
sub
lea
adc
or
lret
push
sub
icebp
rclb
es
lods
cs
lret
sbb
sbb
or
pop
pop
add
adc
mov
jo
add
sub
fists
ljmp
jae,pt
mov
in
push
mov
shll
xlat
cmp
ja
jns
loop
sub
mov
subb
push
push
mov
jo
xor
cmp
in
repnz
or
push
popa
jbe
jecxz
sub
mov
out
and
iret
out
dec
int
pushf
xor
jecxz
iret
sbb
int
push
stos
sbb
jnp
jmp
cld
fwait
pop
dec
dec
iret
jns
and
sub
mov
leave
inc
ss
mov
fisubs
mov
iret
jnp
and
es
roll
scas
jmp
mov
shr
stos
pusha
in
mov
cs
mov
mov
stc
jp
movsl
fwait
ds
and
test
in
inc
mov
sbb
mov
add
mov
add
sarl
jmp
bound
sahf
and
sub
mov
sti
push
mov
cld
adc
rclb
das
ss
and
ret
test
cwtl
or
xor
leave
rcr
in
out
pushf
sub
ljmp
xor
lret
shll
push
ljmp
xorb
int3
pop
test
jge
add
shll
jle
fsubrs
stos
mov
lock
iret
jp
lcall
insl
fcomp
lods
outsl
or
or
or
push
test
xor
out
add
mov
inc
sub
adc
mov
inc
mov
movsb
jnp
jno
js
sbb
inc
mov
pop
arpl
push
test
sub
out
jp
popa
mov
or
sbb
push
pop
mov
pop
dec
adc
or
mov
adc
push
les
sbb
ficomps
sbb
inc
sbb
add
mov
aam
stos
sbb
sub
shl
daa
or
push
iret
mov
push
mov
sbb
jae
or
mov
lahf
out
jae
loop
ss
ret
jl
out
shr
or
into
jae
repnz
mov
es
int3
call
fcmovb
loope
fsincos
or
enter
shll
jne
sbb
stos
mov
dec
mov
lods
sub
dec
push
cld
jecxz
jae
outsl
mov
pop
call
mov
or
sub
xchg
mov
pop
lods
insb
cmpsl
arpl
mov
xchg
inc
insb
sbb
or
and
call
and
dec
out
jmp
dec
xchg
push
aam
pop
push
movsl
ret
out
xor
ja
cwtl
popf
add
cld
xlat
imul
mov
push
loop
addb
bnd
push
and
adc
cmp
or
lret
cmp
cld
dec
inc
mov
cmpsb
mov
sub
and
adc
out
int
mov
dec
xchg
daa
nop
ret
xor
dec
arpl
xchg
scas
enter
loop
mov
into
ret
scas
or
sbb
lret
push
mov
jne
cmp
mov
cmp
mov
sbb
xchg
jle
out
jp
mov
sti
mov
sbb
jmp
aad
sbb
cmp
mov
imul
loop
ficompl
pop
mov
or
add
int3
aad
mov
push
sti
test
int3
inc
call
fwait
jnp
pop
or
repnz
mov
stc
mov
jb
sbb
sbb
cmp
int3
stos
xchg
pop
jge
push
push
fisubs
xchg
out
shl
mov
imul
fisubrl
shrl
mov
sub
or
mov
les
or
cld
xchg
fld1
sub
inc
out
inc
pop
or
je
jge
jmp
lcall
sarb
push
out
ret
xor
or
or
mov
out
mov
insl
ds
out
clc
lea
push
stos
mov
xchg
mov
ret
or
scas
sub
enter
pop
out
xor
daa
insl
bswap
clc
test
fsubs
pushf
xchg
sbb
push
enter
pop
mov
add
rolb
rclb
rcrl
lahf
add
add
sbb
stos
or
and
sarl
fdivrl
sub
adc
sahf
xor
outsb
xchg
cwtl
dec
mov
xor
loopne
out
pop
mov
sub
pop
or
fwait
cwtl
adc
sbb
xlat
ror
jb
inc
les
in
ljmp
int
lcall
pushf
orb
or
jbe
pop
mov
call
add
test
ret
pushf
aad
popf
inc
rorl
ss
out
pop
stos
and
xchg
shlb
movsb
fsubs
pop
or
mov
fwait
cmp
push
sbb
jmp
add
lret
push
out
mov
xor
ss
stos
lcall
outsl
jmp
xor
sahf
pop
mov
mov
xchg
ret
add
shll
inc
ljmp
xchg
and
mov
cmp
test
dec
mov
jae
xchg
jecxz
xchg
ficoml
jle
pop
jp
pushf
loop
sub
pop
adc
mov
jmp
mov
jecxz
repz
jnp
insl
dec
add
sub
enter
andb
or
decl
inc
inc
lea
mov
xor
sbb
inc
das
ret
dec
add
adc
jmp
arpl
mov
mov
lea
adc
ljmp
out
sahf
push
in
jmp
or
loop
pop
lcall
push
ret
sbb
jmp
dec
mov
lods
jmp
jae
sub
add
jg
mov
or
movsb
cmp
leave
cmp
sub
jmp
jg
enter
xchg
mov
push
test
or
cld
push
add
dec
in
cwtl
lret
mov
adc
cmp
stos
and
ret
fucomi
sub
mov
xchg
aam
and
inc
sbb
jbe
sub
sarb
add
scas
testb
mov
push
mov
sub
pop
pop
push
or
imul
movsl
stos
ror
cmc
cmp
jnp
mov
cmp
arpl
adc
mov
aaa
nop
pop
and
lcall
loop
mov
cmp
fwait
insb
fmul
push
ret
rorb
loop
stc
push
xchg
repnz
in
mov
iret
pxor
insl
jmp
dec
fidivl
mov
adc
inc
cmp
call
loope
lods
ret
mov
mov
pop
pop
mov
nop
mov
shl
fcomi
sub
addr16
loop
mov
movb
mov
push
cltd
and
div
dec
sub
fisubrl
ljmp
shrb
mov
inc
outsl
fs
sub
insl
int3
xchg
mov
cmp
inc
jl
sbb
sbb
sbb
cld
out
cmp
push
out
add
cld
scas
pusha
lods
xlat
movsb
sub
fdivrl
push
xchg
add
xchg
sub
ljmp
roll
test
cmpsb
adcl
insl
call
add
mov
repz
jmp
or
and
in
lods
stos
jo
inc
lods
pop
adc
cmp
pop
aam
jbe
push
xchg
dec
cmpsl
and
push
pop
or
mov
sbb
arpl
fiaddl
stc
jno
inc
shlb
ljmp
idivb
push
inc
movsb
dec
jmp
nop
cmpb
inc
imul
enter
sbb
mov
call
inc
jmp
jmp
jl
push
inc
std
pop
subl
pop
shll
int
icebp
and
int
lea
mov
fs
stc
jg
call
sub
or
lahf
mov
cmpsl
mov
sub
pop
inc
add
lret
lock
mov
xchg
daa
push
popa
mov
shl
test
test
hlt
lods
ljmp
adc
jle
lcall
push
lods
push
cmp
xchg
arpl
bound
xchg
pop
rcll
stos
lcall
cs
push
pop
mov
inc
daa
jb
and
adc
out
and
jno
push
cs
inc
imul
arpl
xchg
aam
lods
inc
dec
mov
jbe
push
lods
sub
outsb
int3
dec
popf
jecxz
sbb
xchg
rcll
jae
inc
test
rcll
ss
imul
cmc
inc
pop
stos
outsb
adc
xor
mov
mov
gs
loope
icebp
ret
pop
cwtl
add
pop
or
push
dec
mov
mov
or
lret
aaa
dec
jno
ret
lret
popf
shll
cmp
adc
aad
insb
dec
xchg
imul
test
push
fs
inc
jns
dec
sahf
cs
mov
decl
rcrb
mov
in
pushf
and
int3
stc
or
repnz
test
ljmp
popf
inc
pop
lret
mov
decl
stos
rcr
cli
sub
dec
sbb
mov
push
mov
rol
jno
adc
cmp
ss
ss
clc
or
inc
je
xchg
pop
xchg
xchg
pop
sbb
test
js
cmp
and
mov
das
jecxz
pop
scas
mov
cmpsb
out
call
cmp
rcrl
cld
stos
jne
sbb
fimuls
js
xchg
push
jp
xchg
jmp
aas
gs
rol
out
adc
cmovbe
test
orl
jecxz
and
je
mov
jmp
or
ds
rcrl
cmp
shrl
cs
adc
int
push
mov
int3
or
jb
repz
fisttps
push
push
pop
mov
xchg
mov
pop
sbb
fimull
jbe
andb
push
sub
xor
xorl
cmp
mov
mov
sub
sbb
sti
mov
cmc
test
cmc
incb
xchg
outsl
and
mov
xor
mov
xchg
int
cmpsl
jns
adc
mov
fbstp
roll
jne
xchg
cld
repnz
sbb
loop
ja
scas
pop
js
lcall
repz
adc
sub
rsm
lcall
pop
xor
sub
cs
xlat
lret
mov
pop
insb
lea
sbbb
inc
mov
mov
sbb
xchg
dec
inc
sbb
jmp
lcall
jno
in
jle
sahf
add
push
mov
in
call
pushf
aad
inc
addr16
pop
adc
cld
lods
sahf
sub
push
ret
loope
xchg
clc
push
dec
ja
dec
lods
mov
mov
push
jno
add
movsl
adc
scas
xchg
push
call
int3
stos
into
add
in
adc
or
xchg
adc
and
mov
lods
pop
xor
push
push
lods
in
rorb
orl
mov
sbb
cmpsl
call
or
xchg
inc
test
sub
jmp
and
ret
lret
cmp
pusha
gs
fdivs
or
std
jmp
jp
rcr
out
popa
inc
adc
ficoms
sub
icebp
xor
out
stos
xchg
dec
jmp
test
mov
and
mov
jl
rclb
or
sbb
aam
outsb
bound
xlat
lret
dec
lcall
test
ja
fucomip
xchg
es
aad
or
mov
or
add
out
lock
dec
xchg
jecxz
xchg
adc
mov
movsb
dec
add
lahf
mov
xchg
sti
mov
push
push
outsb
jl
cltd
and
or
jmp
loop
popf
sahf
test
sbb
das
stc
cli
jo
mov
cmp
mov
mov
cmp
cmp
sarl
ss
push
divb
pushf
scas
rcrb
gs
iret
push
fimull
fcmovu
cmp
les
lret
aas
jl
and
js
jg
add
test
fcmovnb
or
sub
cli
push
push
jg
nop
lds
bswap
dec
sub
cli
fldt
mov
psrad
aad
sub
mov
mov
hlt
insb
jb
das
mov
stc
mov
std
mov
add
repz
and
dec
xchg
test
push
push
movsb
jmp
jbe
jmp
imul
enter
adc
xor
cmp
mov
int
jo
sub
ret
mov
ss
dec
cli
inc
out
jbe
fld1
and
adc
jge
addb
lret
xor
pop
xor
insl
sbbb
int3
pop
jo
sti
les
iret
aaa
mov
aas
cmp
cmp
dec
fwait
or
arpl
add
sub
mov
imul
mov
popf
cmp
mov
push
mov
es
ret
outsl
sub
xchg
mov
dec
aam
mov
ret
add
loop
cli
stos
ret
cltd
mov
lret
xchg
mov
add
out
ret
cmpb
mov
inc
mov
add
jbe
js
mov
ficomps
lret
out
mov
xchg
mov
xchg
sub
cmp
jbe
xor
mov
mov
adc
mov
xor
jmp
sub
lods
push
push
adc
mov
pop
push
xchg
cmpsl
or
fisttps
ljmp
lds
ret
lea
imul
add
sbb
ss
rcrl
rorb
mov
mov
lock
rcl
call
mov
or
insl
popa
ljmp
mov
mov
sub
test
mov
pushf
addl
sub
leave
nop
fstl
push
inc
jmp
dec
sbbb
xchg
fstpt
test
out
je
or
mov
ss
mov
jg
insl
ret
add
lret
in
in
ret
sbb
pop
loope
sub
xrelease
jecxz
test
sub
and
inc
sub
sbb
ljmp
xor
int3
imull
ffree
movzwl
jmp
add
push
push
and
cmp
loop
jno
enter
pop
add
fists
subl
push
aaa
aad
mov
cltd
adc
ljmp
inc
sub
inc
addr16
in
or
or
or
push
call
aam
and
or
mov
fisubrl
adc
xchg
fldt
std
mov
sbb
movsb
ret
pop
adc
test
aaa
mov
pop
leave
rcl
mov
movsl
pop
test
dec
inc
pusha
cld
dec
pusha
enter
hlt
push
xchg
lret
outsl
pop
jno
sbb
pop
sub
cmp
fs
dec
push
push
test
lcall
mov
or
mov
push
mov
call
inc
inc
mov
jo
push
pop
xor
inc
fisubrl
mov
stc
sub
xor
ljmp
addb
jg
pop
cmp
pop
mov
xchg
cmpsb
movsb
xlat
mulb
test
add
sub
in
test
mov
pop
in
add
int
sarl
nop
jge
pop
adc
hlt
popf
xchg
adc
add
call
pop
push
sahf
dec
shlb
xor
enter
push
lea
jno
add
hlt
test
dec
adc
jl
push
add
mov
lret
lea
jg
gs
nop
test
arpl
mov
ret
jge
in
ret
insl
inc
imull
jmp
push
mov
fs
inc
insb
cmpsl
lods
push
cld
push
popa
nop
outsl
into
mov
scas
fisubs
ss
outsb
add
sub
or
scas
sub
sbb
lods
mov
inc
push
xor
mov
dec
ret
xchg
inc
pop
or
sub
cmp
es
mov
mov
sub
stos
push
dec
lds
rcrb
cmp
xchg
loopne
std
jmp
stos
xor
xchg
nop
jle
ja
push
test
xlat
push
pop
add
sbb
mov
xchg
sub
add
gs
sarb
push
jmp
pop
fadds
scas
sbb
cli
fisubrs
dec
arpl
out
lods
adc
bound
lcall
movsb
mov
lret
push
adcl
clc
add
xchg
int3
das
int3
ret
and
sbb
stos
xchg
sbb
dec
mov
xchg
scas
pop
mov
gs
sbb
mov
jmp
cwtl
bound
mov
test
sbb
sbb
out
stos
add
data16
cltd
mov
cmc
in
sti
or
cmp
addr16
or
sbb
and
jge
loop
mov
jge
dec
cmpsl
inc
xor
call
in
ja
jecxz
cmc
fwait
push
jp
cmc
shrb
loop
ret
dec
lods
popf
sbb
loop
shrb
cmpb
out
jmp
imul
cmp
addb
lods
cmp
scas
pusha
fsubrl
lods
dec
or
mov
cmp
mov
leave
les
stos
je
movsb
fisttps
test
xor
xchg
jae
xorb
lcall
sbb
jecxz
pop
xor
sbb
mov
mov
out
inc
pop
cld
out
cmpsb
pop
lret
xor
jns
jnp
lods
fnstsw
ficoml
jl
sbb
psrlq
rclb
sub
std
mov
xchg
scas
les
inc
or
stc
xor
and
and
sub
mov
lret
cmpsb
js
mov
fucomip
mov
mov
mov
pop
mov
xchg
or
addr16
addb
loop
xchg
add
mov
cmp
int3
gs
shll
push
xchg
inc
sbb
inc
lahf
call
shr
jp
xor
aaa
aam
pop
fucomi
push
xchg
data16
rorl
rcrl
xchg
or
push
sti
or
scas
adc
cmpsl
sub
xchg
repnz
sub
jb
inc
fwait
or
xchg
fwait
jo
clc
fimuls
jecxz
test
push
repz
push
mov
mov
xchg
mov
sub
lret
outsl
pop
fidivl
je
cmp
idivb
test
sub
pop
call
rorl
sub
test
in
out
push
pop
imul
mov
mov
aad
mov
mov
ret
mov
mov
aaa
push
inc
add
sub
pop
cmpsb
dec
jg
lea
mov
xchg
stos
sbb
sub
xchg
sbb
rcrl
adc
ljmp
add
mov
nop
jnp
sub
daa
mov
imul
pop
out
sbb
adcb
rorl
clc
sahf
pop
jmp
ret
test
sub
mov
lret
cmpsl
orb
mov
sub
dec
and
xor
or
les
cmp
push
aam
mov
arpl
scas
cmp
dec
gs
test
out
jb
mov
or
cmpsl
sbb
and
cli
iret
cwtl
outsb
addr16
ret
jmp
in
xchg
ss
xor
mov
push
push
add
fisubrl
push
clc
xchg
dec
mov
xchg
push
sub
jmp
mov
mov
rorb
push
add
fcomps
dec
loopne
pop
in
pop
xor
sub
inc
int3
jmp
push
icebp
popf
and
insb
sbb
cmp
mov
pop
mov
test
into
lahf
sub
cmpsl
cld
dec
lcall
or
ljmp
scas
loop
push
push
or
mov
mov
adc
sub
xor
add
xor
jns
out
bound
jmp
mov
iret
inc
mov
sub
aaa
rolb
mov
pusha
jnp
call
gs
das
outsb
js
mov
add
push
cli
ljmp
sub
or
mov
cli
and
add
adc
scas
aam
add
mov
movsl
sbb
cld
cli
inc
jecxz
push
or
test
idivl
les
loop
leave
push
add
jmp
adc
add
out
or
test
shr
xchg
insl
and
sub
mov
adc
test
mov
cmp
loop
js
dec
pushf
in
mov
xchg
ret
xchg
or
arpl
divb
out
adc
je
adc
sub
or
sbb
add
xor
push
insb
jecxz
jge
sub
rorl
sub
inc
frstor
cs
xor
mov
test
lret
mov
adc
jecxz
jge
dec
leave
or
mov
lods
aam
jo
mov
cmp
dec
push
aas
ret
sub
add
mov
mov
aas
sub
xchg
push
daa
push
xor
push
jbe
sub
ss
lret
sub
fnsave
jge
cwtl
inc
pop
mov
insl
into
out
dec
mov
out
popa
xor
cmpsb
push
cmp
adc
or
cmc
cmp
lret
pop
jo
outsb
mov
or
mov
daa
inc
loop
roll
gs
xor
test
call
xor
scas
movsl
out
outsl
test
fwait
scas
jp
leave
and
mov
push
mov
js
out
stos
stos
nop
aam
lcall
fisubs
in
sub
out
ret
jo
lcall
or
mov
and
mov
push
in
jb
aam
xchg
outsb
imul
adcb
aas
mov
xchg
dec
add
cmpsb
cmp
add
push
sub
in
jmp
dec
call
xor
adc
pop
dec
repz
mov
enter
ss
and
jmp
xor
pop
pushf
das
mov
ljmp
inc
mov
loop
sarb
in
mov
gs
xlat
pop
fsubrp
ss
loope
mov
mov
stc
lcall
and
xchg
cmp
push
lock
and
das
cwtl
push
xchg
pop
pop
mov
inc
loop
leave
xchg
xchg
pop
xchg
cmp
ret
pop
lret
sbb
js
mov
inc
shlb
ljmp
xchg
pop
cmc
fisubs
sub
not
mov
sub
jmp
aaa
and
shlb
jne
imul
repz
jae
sub
jb
xor
jle
ja
inc
dec
loope
pop
and
xchg
xchg
in
loope
mov
mov
add
sbb
xchg
mov
mov
sbb
imul
jmp
gs
sub
outsl
mov
jmp
loopne
fwait
push
popl
mov
fisubs
and
insb
movsl
cmp
jg
imull
inc
sub
stos
outsl
ss
sub
sarl
jbe
in
outsl
pop
push
lret
pop
leave
scas
lods
das
ret
or
std
push
lds
dec
addr16
pop
lds
sti
jmp
pop
mov
or
test
sub
pop
call
jp
pop
dec
test
jb
repz
ljmp
ja
dec
mov
es
add
fisubrs
fstpt
ds
das
cs
ret
mov
aad
jns
into
and
inc
mov
aam
call
mov
iret
lahf
and
out
mov
mov
and
lcall
push
mov
mov
add
leave
mov
mov
mov
pop
iret
ror
and
mov
popf
mov
jecxz
rcll
xor
mov
in
or
cmp
std
sub
scas
cmp
xor
or
jecxz
cmp
ds
stos
mov
sbb
scas
pop
pusha
adc
inc
jae
in
jmp
scas
mov
and
xor
xor
xchg
shlb
idivl
movsb
in
fsubr
sbb
ret
test
fidivl
movsb
popa
mov
repz
lea
imul
inc
dec
fsts
out
dec
cmc
pop
lock
xor
and
lcall
out
pop
dec
dec
mov
sbb
jmp
xchg
push
shr
ror
aam
inc
cmc
dec
sbb
or
sub
push
dec
js
xchg
jb
data16
and
les
inc
inc
in
imul
sub
es
hlt
sbb
and
pop
pop
push
or
loopne
mov
dec
js
or
out
shrl
add
insl
sub
mov
mov
add
lds
mov
dec
scas
xchg
pushf
push
xor
pop
jp
add
sub
lods
aaa
clc
cltd
add
pop
pop
pop
clc
jp
ja
push
ds
mov
dec
iret
mov
test
imul
lret
fsubs
mov
lods
jae
and
cmp
shr
push
je
aam
sub
bound
jns
mov
sarb
cmp
mov
rcrb
or
push
xchg
sbb
or
lods
or
cmp
cmpsb
mov
push
popa
push
in
aam
adc
jle
sbb
shlb
pop
push
jb
mov
ret
in
cld
xor
fildl
jbe
mov
fldenv
pop
add
sub
pop
cmp
sub
xor
leave
sbb
roll
jb
dec
test
jl
loope
leave
popa
adc
mov
in
sub
ljmp
mov
sub
aad
imul
jmp
incl
lds
gs
pop
loop
xchg
sub
adc
or
mov
add
test
testb
add
jmp
testl
push
or
bound
push
or
inc
xor
push
mov
add
shl
mov
popf
outsl
adc
shl
jle
mov
and
sbb
push
sti
lcall
sbb
xchg
fisubrl
jp
cwtl
pop
rclb
cmp
xchg
les
sbb
pop
leave
inc
dec
ret
pop
mov
mov
mov
scas
gs
pop
les
sub
movsb
xchg
mov
insb
in
lods
lret
dec
in
adc
and
mov
pop
mov
scas
fldenv
xchg
out
mov
mov
mov
or
xorl
xchg
mov
into
xor
fdiv
cmp
inc
jecxz
jge
cmp
rcrb
pop
pusha
xchg
lock
mov
xor
arpl
jmp
xchg
dec
inc
stos
cmp
pusha
lahf
ficompl
mov
mov
adc
sub
sbb
cmp
rcr
sarl
sub
out
inc
orl
cwtl
push
lahf
andb
jno
sbb
pop
pop
push
in
mov
loop
inc
mov
adc
jbe
or
shlb
test
xor
mov
bound
arpl
ret
dec
ret
cmp
and
jns
aas
rcrb
and
jbe
loop
adc
into
out
shlb
ror
fcoml
xor
call
pop
sahf
adc
stos
or
sub
and
mov
jecxz
clc
int
and
ds
sti
inc
jle
cmp
mov
jne
pushf
xchg
pop
das
loop
insl
inc
mov
jae
imull
gs
addb
dec
sub
in
jb
sahf
pusha
mov
jl
fstps
inc
into
or
rcrb
or
shlb
shll
cmp
cld
dec
js
add
enter
mov
mov
lods
mov
push
test
mov
cmp
xchg
xor
fsubr
bnd
shrl
scas
sub
add
mov
mov
pop
add
dec
sbb
int3
or
jp
jecxz
sbb
add
enter
mov
lahf
adc
out
sub
lcall
pop
fsubrl
xor
sub
ret
bound
pop
les
sub
mov
sub
jne
sub
jae
int3
mov
push
ffreep
cmp
adc
sbb
or
push
mov
sbb
and
pop
and
adc
sarl
scas
add
rolb
les
sti
pop
sbb
cwtl
ret
filds
into
fistpll
and
shrl
pop
loopne
mov
adc
mov
inc
dec
cmp
cmc
daa
adc
jmp
movsl
ds
or
stc
push
jmp
enter
mov
mov
mov
lret
inc
outsl
mov
push
cmp
sub
xchg
rcl
shll
adc
and
fistpl
jmp
jmp
inc
add
mov
neg
out
int
ss
push
cmpsb
movsb
xchg
xchg
push
pushf
shr
popa
bnd
jmp
scas
mov
pop
sbb
es
pop
pop
jg
shlb
adc
jmp
imul
adc
mov
bound
ljmp
stos
or
or
xchg
lea
push
rcl
pop
int3
lret
sub
rcrb
mov
icebp
or
leave
dec
mov
jmp
int3
push
push
inc
add
jecxz
outsb
popf
lcall
push
fwait
mov
je
and
mov
jg
jmp
mov
sub
mov
jecxz
xchg
outsl
cmp
dec
and
and
sub
mov
cmp
pop
es
add
pusha
mov
cmpl
rcll
stc
push
push
inc
pop
sub
stc
loop
jo
stos
jns
xor
adc
and
push
xchg
ss
shrl
mov
pop
stos
mov
enter
mov
inc
lcall
or
mov
xor
jo
mov
push
mov
mov
outsl
cmp
shll
or
sub
fisttpl
jo
push
mov
jecxz
mov
push
aad
and
xor
pop
pop
inc
inc
push
inc
mov
add
jae
push
lock
out
jo
jp
mov
rcll
fstpt
xchg
or
jp
inc
cmp
in
rolb
rcll
orl
pop
dec
lods
lods
enter
xchg
adcl
in
sub
arpl
lock
add
stos
ds
mov
sbb
push
call
adc
je
push
jl
or
dec
imul
icebp
hlt
push
repnz
loop
shr
inc
cmc
mov
test
pop
jge
outsb
sbb
cmpsb
mov
stos
and
sub
test
jmp
in
cmp
enter
sbb
in
lods
jns
jge
mov
nop
ret
or
mov
xchg
loop
mov
out
mov
pop
mov
sbb
shrb
push
mov
mov
repz
out
or
rcl
mov
pop
pop
fdivrs
push
cmpsb
pusha
lret
cmp
jl
jo
cmp
pop
or
inc
fsubl
fcoml
mov
stos
out
adc
jo
jb
or
notl
mov
push
cmc
outsb
or
dec
inc
xor
cmp
in
repnz
sahf
ret
outsl
mov
das
gs
inc
or
movsl
push
xchg
add
jo
xchg
jmp
sbb
mov
pusha
ljmp
cmp
adc
mov
mov
mov
xchg
cli
not
xor
or
push
jmp
mov
push
jmp
sub
stos
lret
xchg
jl
inc
and
fdiv
in
stos
out
mov
movl
or
pop
xchg
test
or
notb
popf
pushw
inc
push
ret
dec
sub
xlat
mov
pop
pop
js
mov
movsl
leave
call
call
int
xchg
fists
mov
cmc
or
xchg
sub
mov
or
mov
xchg
in
imul
mov
stos
mov
rclb
jns
dec
push
andb
dec
aaa
adc
ljmp
sbb
mov
scas
mov
in
aaa
cli
into
rcrb
inc
test
jl
mov
mov
mov
cli
sahf
mov
mov
xchg
pop
arpl
mov
push
cmp
shrb
insb
dec
into
or
mov
aas
mov
pop
lds
xor
pop
and
mov
push
fsubl
jne
test
dec
out
in
mov
push
in
lods
jae
cli
rorl
dec
mov
mov
xor
movsl
xchg
jg
ret
aam
xchg
lods
fiadds
test
and
fnsave
sub
call
and
ds
xchg
cmp
mov
push
in
cmp
sub
xor
adc
outsl
ficomps
xchg
aad
rcll
push
rorl
mov
fdivrl
or
popa
jg
gs
enter
rcrb
cmp
lods
pminsw
push
fiadds
jp
outsl
lahf
data16
pop
xchg
in
jge
mov
call
sbb
ss
or
leave
in
jmp
stos
shlb
mov
add
cmp
rorl
loopne
in
popf
xchg
jge
insl
jo
lock
sub
adc
jb
rdpmc
add
pop
lds
mov
mov
cltd
sahf
inc
jne
test
sbb
sbb
outsb
inc
xchg
adc
js
scas
add
repz
dec
xor
testl
rolb
in
sbb
cli
push
inc
lahf
lcall
pop
or
lods
mov
xor
jne
ljmp
cmp
and
cwtl
lahf
xchg
inc
mov
adc
mov
int3
jp
shrl
pop
xor
jle
in
jnp
lret
push
and
sbb
movsl
sbb
mov
cltd
mov
or
scas
test
shll
and
ret
push
hlt
sub
cmp
xor
mov
cmp
push
bound
add
inc
pop
imul
cmpsl
xchg
faddp
cli
jge
lret
test
push
in
out
movsb
mov
cmp
test
faddl
inc
dec
imul
aas
sbb
add
cs
xor
fldt
arpl
dec
sti
adc
les
sarl
ja
cli
pop
jmp
mov
adc
inc
jmp
xchg
mov
loop
test
cmp
xor
add
push
inc
mov
imul
xchg
add
arpl
arpl
cmp
cld
enter
dec
xchg
ret
dec
ror
in
mov
push
lods
fcom
cltd
subb
test
sub
or
cmp
pushf
popf
decl
dec
fwait
sti
sub
push
lods
cltd
int3
push
repnz
scas
repz
shrb
dec
cmp
mov
sub
les
add
jmp
xchg
cld
out
jecxz
movsb
xchg
dec
jp
test
mov
mov
enter
pushf
xchg
fsubrs
rcrl
jmp
xchg
mov
stos
sbb
xchg
xchg
shrb
jnp
movsb
xchg
out
jecxz
in
sub
out
sub
out
or
add
loop
test
lahf
xchg
pop
mov
icebp
out
and
mov
adc
lods
sub
xor
jb
pop
sbb
loop
xchg
and
outsb
pop
push
mov
add
cmp
jmp
jecxz
xor
jmp
mov
cmp
push
outsb
mov
mov
insl
and
lods
or
pushf
mov
lahf
scas
jg
mov
add
or
jmp
inc
xchg
add
mov
push
leave
sub
lea
xlat
cmp
sbb
jge
push
out
inc
sub
jp
pop
pop
movsb
xchg
cmp
cmpsb
pushf
sti
loopne
fiaddl
mov
add
add
js
popa
pop
ret
add
pop
mov
xchg
push
jp
jae
dec
mov
push
out
or
mov
inc
add
inc
lds
loop
femms
jmp
fucomi
mov
lods
aam
addl
and
mov
pusha
push
loop
lods
jg
cs
jge
add
pop
push
repz
pop
sarb
pusha
jmp
mov
outsl
es
mov
outsb
pushf
add
pop
es
xlat
or
stos
jno
adc
fwait
pop
pop
jns
pop
mov
adc
or
pushf
xchg
or
ficoml
mov
mov
inc
dec
lret
cmpsl
mov
ds
ds
cmp
push
mov
cld
adcb
add
add
cld
fdiv
push
aaa
push
add
shlb
push
sbb
inc
das
mov
dec
jo
fstpt
sarl
in
dec
jecxz
jge
loop
jmp
addl
imul
lcall
pop
cmp
sub
push
std
push
jl
or
flds
dec
in
jmp
lret
jbe
clc
pop
adc
pusha
mov
adc
pop
pushf
stos
pop
stos
bound
call
add
mov
inc
data16
popf
shrb
shll
cmpsb
mov
xor
jmp
push
ror
or
sbb
ss
repnz
shrb
inc
cmp
and
pop
notb
out
xchg
sar
xchg
jge
dec
add
ficoms
aad
jno
adc
fmulp
xchg
push
sbbb
cmpsl
push
push
xchg
mov
daa
or
ds
mov
adc
pop
jns
xchg
jg
lds
pop
jbe
in
loope
movsb
adc
and
mov
pop
dec
push
mov
cmp
insl
movsb
dec
xor
inc
dec
sub
mov
outsb
dec
js,pn
push
or
mov
mov
dec
push
mov
movsb
push
and
fbstp
fcomps
mov
in
push
ficomps
out
je
cld
push
lret
dec
pop
jns
popf
fildll
pop
sbb
cltd
into
stos
inc
ret
int
xchg
and
aaa
mov
inc
aaa
ret
sbb
cmp
sti
xchg
fwait
dec
jb
ret
sbb
xor
sub
outsl
jge
js
adc
push
mov
xchg
adc
sub
adc
sbb
rcl
mov
pushf
mov
xchg
out
jp
mov
scas
and
pop
or
fwait
push
mov
loopne
int3
in
jle
loop
xchg
push
mov
sub
cmp
arpl
cmp
fmulp
dec
jnp
inc
add
mov
xchg
orb
sub
addl
sub
mov
repz
jmp
ffreep
sub
cs
sbb
lods
movsl
dec
mov
sbb
or
stc
gs
les
cmp
push
mov
xchg
jmp
testl
or
rcrl
mov
xor
out
lcall
mov
xorl
cmp
scas
jle
in
inc
into
movsl
loop
cmpsb
dec
das
leave
int
hlt
iret
int3
fidivrl
inc
jle
fildll
sbb
rcll
jbe
aaa
cmp
ds
mov
popf
and
fst
add
adc
adc
sub
push
lcall
cmp
xchg
mov
into
add
adc
popa
les
inc
add
pop
cmpsl
call
fnstenv
inc
push
cmp
and
aas
add
scas
sub
mov
outsl
jo
dec
imul
pusha
or
les
out
jb
push
xchg
fldz
add
ror
filds
jnp
jno
out
sbb
jmp
andl
outsl
lods
xor
mov
push
popa
in
pusha
in
mov
movsb
jns
aad
leave
or
or
jmp
out
or
std
gs
and
add
xor
bound
hlt
push
lret
outsl
test
jo
int
mov
mov
pop
jecxz
or
add
mov
push
fsubr
mov
ret
jecxz
dec
fldt
xchg
jne
pop
leave
in
out
fstl
cltd
imulb
xor
jae
pusha
and
sbb
lods
cmpsl
mov
adc
pop
xor
lock
shll
emms
dec
add
stos
fmuls
mov
pop
add
mov
push
xchg
leave
pop
pusha
inc
push
roll
outsb
xor
or
xor
iret
xor
cltd
inc
lods
pusha
cmpsl
mov
jo
mov
mov
push
ret
sahf
nop
jecxz
ret
and
adc
fdivrl
xor
in
xchg
movsb
mov
xchg
movsl
mov
inc
adc
imul
int3
dec
inc
in
mov
negb
in
stos
inc
loop
jmp
adc
sbbl
lods
cld
push
cltd
pop
dec
or
ret
adc
rclb
cmp
pop
addb
ss
adc
loop
lret
inc
andl
xchg
out
dec
pop
jb
out
inc
mov
pushf
jo,pn
les
mov
aad
or
es
mov
test
xlat
cmp
mov
int
inc
push
clc
sbb
lret
pop
or
insl
jnp
sahf
cmovl
push
scas
mov
xchg
rorl
cs
mulb
and
fwait
repz
dec
data16
adc
roll
push
aam
mov
mov
ja
dec
or
fldt
jmp
ret
imul
ds
rclb
outsb
add
xchg
mov
test
sub
xor
lret
nop
icebp
jge
mov
out
mov
fcmovnb
xor
sti
and
xchg
ds
fadd
sub
call
mov
adc
and
aaa
test
ds
ljmp
cs
shrb
call
shll
push
clts
lret
insb
cld
test
pop
sbb
mov
jne
mov
sub
fstps
das
lds
pop
pop
scas
lret
sub
mov
push
push
sub
jle
cld
pop
inc
stos
out
mov
leave
inc
pop
dec
jb
in
or
ss
or
movsl
outsb
loop
lea
faddl
ss
xor
or
enter
insl
or
sbb
ror
sarl
mov
fcmovne
xchg
mov
cmc
inc
icebp
cmpsb
pop
mov
insl
stc
dec
int3
mov
or
mov
pop
faddl
test
cli
test
sbb
jp
insb
xor
lret
sub
out
add
out
sub
mov
iret
cmp
inc
push
loopne
das
or
divb
in
pop
sub
mov
sub
rolb
leave
imul
call
test
xchg
sub
adc
jne
mov
sub
cmpsb
dec
cs
mov
ljmp
xchg
or
lret
mov
lcall
push
mov
sbb
inc
add
mov
scas
lods
xchg
jmp
shrb
and
mov
sahf
icebp
mov
add
cwtl
or
and
and
daa
add
fwait
cwtl
jnp
in
cmc
inc
pop
add
jle
sarl
shl
inc
test
clc
sbb
arpl
stos
ss
lock
fstp
dec
push
or
inc
xchg
and
xor
or
adc
mov
aam
out
sbb
sbb
xor
jae
jmp
xchg
loop
adc
mov
std
pop
push
and
scas
pusha
xor
mov
stos
ja
leave
mov
lahf
imul
mov
pop
dec
cld
push
or
rolb
stc
int
roll
stos
mov
ja
ret
scas
mov
mov
rorb
sbb
jbe
mov
stos
cmp
mov
mov
fcmovnb
mov
pop
xor
or
jns
subb
lods
xlat
ljmp
jecxz
xchg
outsl
repnz
repnz
jne
mov
loope
ljmp
insb
aad
stos
cmp
ljmp
push
cltd
jo
cmp
rorl
cmp
test
imul
aaa
rorb
adc
jge
mov
jmp
mov
in
inc
sub
and
stc
popa
insl
jge
adc
lret
mov
sub
sbb
sub
sub
out
mov
mov
ret
or
sub
lcall
push
sub
and
into
inc
mov
loop
cmp
jnp
jb
idivl
add
or
lea
retw
fstps
sub
mov
xor
das
mov
shl
or
push
mov
out
xor
outsl
in
or
ret
iret
inc
outsl
lcall
idivl
idivl
in
mov
sti
rcrl
mov
adc
ljmp
insl
stos
push
mov
push
std
les
xchg
lock
nop
lahf
xor
ljmp
lahf
push
aaa
or
rorb
sub
mov
cmpb
pop
lret
mov
jg
fidivs
pop
icebp
jl
and
cmp
shlb
mov
add
aas
lcall
repz
sahf
or
inc
or
loopne
outsb
cmpl
push
push
lcallw
mov
push
xor
mov
shlb
cmp
adc
sub
mov
mov
int
ret
outsb
loopne
rolb
mov
imul
sub
push
popa
lcall
dec
pop
or
mov
adc
fwait
aam
jl
mov
or
sarb
and
push
sbb
loop
shrl
or
mov
xor
aaa
aaa
jbe
sub
test
cmp
out
push
out
out
cs
mov
push
jno
dec
or
jb
dec
or
inc
push
sub
aam
adc
dec
push
pop
jge
iret
or
cmp
push
pop
outsl
rolb
sbbl
add
push
jb
xlat
sub
fsubrl
loop
cmp
push
cli
push
imul
scas
ret
daa
add
mov
fnstsw
inc
sbb
lock
pop
jne
shrl
insb
push
out
aam
ja
dec
ret
pop
push
jmp
mov
addl
mov
cmp
pop
cli
nop
in
mov
add
mov
xor
aad
adc
mov
addr16
movsl
pop
sbb
clc
jb
imul
scas
xor
sbb
adc
fidivrl
mov
add
sub
pushf
xchg
jmp
out
in
push
mov
or
clc
pop
inc
pop
jb
inc
subl
mov
fiaddl
sbb
stos
and
push
out
cli
push
or
push
cli
fwait
push
fisubrs
jne
xor
push
add
add
xor
jno
out
pushf
mov
out
xor
minps
test
loop
daa
or
fimuls
dec
dec
sbb
push
or
adc
or
movsl
jmp
xor
ljmp
xchg
add
jns
mov
pop
cmp
cld
or
sub
or
push
sbbl
arpl
mov
loopne
pusha
push
fcmove
mov
mov
xchg
mov
jge
test
jp
inc
scas
enter
sbb
popf
fsub
mov
loopne
mov
movsb
nop
cmp
xchg
sbb
pop
xchg
mov
rcrl
es
addr16
sub
jbe
add
cmp
xor
aad
imul
mov
test
cmpsb
xchg
ja
mov
sarl
or
cmpsb
fsts
adcb
fstpl
push
outsl
cwtl
ret
mov
mov
les
sub
mov
pop
add
push
inc
icebp
inc
jmp
sbb
lea
lds
out
idiv
popw
imul
fiaddl
sbb
xor
jecxz
out
outsb
cltd
jge
lcall
stos
jle
mov
add
adc
or
arpl
and
push
pop
sub
jge
bound
ljmp
lea
add
xchg
scas
or
jns
subb
push
sbb
mov
fisttpll
enter
jns
dec
aad
push
lds
adc
js
or
cld
xchg
cmp
jle
or
dec
cmp
fistpll
sti
jns
or
adc
xor
xor
lods
mov
mov
dec
dec
dec
adc
int3
scas
ret
lret
sbb
mov
xchg
push
rclb
or
add
jmp
imul
repnz
in
jp
xchg
fmul
pusha
xchg
or
mov
js
icebp
fistpl
arpl
adc
mov
ja
xor
sub
pop
pop
xor
rcrl
push
cmc
cmp
popa
inc
push
movsb
rorl
lahf
pop
cs
lret
mov
pop
jmp
subb
mov
mov
or
punpckldq
ds
xchg
and
in
out
mov
data16
or
fcomps
xchg
push
mov
xchg
dec
xchg
mov
into
pop
or
daa
sbb
les
xorl
call
popa
or
adc
jbe
fdiv
fs
jmp
cmp
jbe
dec
xchg
push
xor
jmp
sbb
mov
adc
pop
and
sub
leave
add
notl
ret
pop
sbb
xchg
mov
pusha
inc
lahf
out
dec
mov
sbb
add
add
jecxz
mov
mov
mov
pushf
lea
incl
adc
cmp
or
movsl
mov
push
ss
pop
push
mov
sub
mov
and
call
stos
leave
sbb
ds
xchg
enter
mov
cmp
jno
rcll
sbb
jmp
mov
call
and
jmp
in
scas
stos
ss
scas
add
into
dec
mov
push
out
cltd
inc
add
mov
pop
cli
pusha
jge
sbb
jl
lods
out
fists
pop
leave
ljmp
xchg
cmp
jns
adc
imul
xor
jmp
and
dec
jnp
sarb
cld
jmp
orb
pop
jg
psubusb
int3
out
loop
dec
mov
cmp
iret
cmp
push
cmp
xchg
test
jle
add
cmp
loopne
gs
push
test
xchg
xchg
sti
out
inc
stos
xor
je
in
add
arpl
push
sbb
mov
sbb
jae
jl
mov
mov
arpl
mov
ret
dec
stos
jns
mov
fs
inc
pop
dec
sbb
ror
xchg
imul
int3
aaa
mov
push
mov
xchg
mov
call
sub
std
test
push
stos
in
in
mov
pop
or
sbb
sub
push
test
insl
rclb
mov
dec
push
and
adc
xchg
adc
pop
cmc
dec
pop
lock
inc
ds
or
lahf
and
mov
ljmp
mov
gs
stc
cmp
mov
mov
jmp
icebp
sti
fcmovb
dec
xor
arpl
mov
je
xchg
addr16
xor
fwait
test
dec
push
shlb
sti
rcrb
fisttps
inc
stc
adc
stos
push
lret
mov
sub
inc
rcr
sbb
imul
cmc
jecxz
mov
mov
int3
mov
xor
xchg
pusha
imul
cmp
lret
xchg
push
cli
sbb
orb
or
xor
dec
sub
xchg
test
inc
int3
and
or
mov
inc
cmp
xlat
adc
jp
push
iret
imul
pop
xchg
cld
out
idivb
cld
jp
jge
adc
mov
push
js
enter
into
inc
enter
push
mov
popf
gs
mov
stos
add
loop
stc
ret
nop
sbb
ljmp
add
sub
out
mov
fsts
inc
dec
andb
jo
inc
dec
push
call
xor
cmp
mov
jge
push
inc
xchg
push
shrl
ret
ss
jp
imul
lods
sub
xchg
jnp
cmp
xchg
arpl
mov
inc
jge
push
and
arpl
adc
mov
loop
leave
sbb
insb
push
pop
bnd
sub
inc
push
or
cli
jmp
jnp
mov
idivb
jnp
aaa
test
insb
mov
pop
subl
aaa
js
add
add
xchg
mov
xor
or
shlb
jo
test
clc
push
scas
mov
jecxz
adc
out
dec
ds
sub
orb
stos
cmp
and
xchg
mov
test
dec
jmp
mov
ret
mov
mov
push
mov
ret
loop
in
jns
adc
xchg
aas
mov
xor
loop
push
sbb
sub
call
or
lods
cmpsl
xor
loop
adc
or
mov
ljmp
adc
cmpsb
and
popl
hlt
push
xchg
pop
jb
pop
ss
adc
xor
loop
or
in
xor
mov
and
cli
outsb
mov
lods
in
sub
jecxz
sub
rep
subl
sbb
sbb
sbbl
sbb
rcl
adc
mov
sbb
daa
mov
jne
lds
mov
dec
and
push
ss
clc
add
ss
lcall
fsubrp
in
cs
sarl
adc
cmp
push
imul
add
fs
xchg
ret
cwtl
dec
cmp
test
dec
jle
mov
or
shll
cli
add
test
in
push
lahf
push
push
ljmp
imul
and
jmp
in
mov
inc
aam
adc
inc
lret
call
stos
pushf
in
sbb
sub
arpl
xlat
jo
xchg
adc
inc
scas
dec
dec
xor
rcrl
lret
xchg
enter
in
lret
mov
mov
xchg
push
lret
mov
or
loope
and
jb
lret
int3
andb
mov
pop
nop
sub
sub
sub
and
rcll
push
int
jmp
or
cmp
xor
push
lcall
or
inc
or
cmp
mov
pusha
sub
mov
das
cmp
pop
test
mov
jmp
inc
add
mov
push
add
fsubr
in
mov
addr16
jmp
mov
mov
ja
in
or
xor
faddl
sub
jge
aas
pop
adc
call
or
ficoml
or
call
test
cli
outsb
dec
add
sbb
inc
test
jbe
jne
dec
ret
test
js
mov
gs
out
xchg
test
lgs
pop
enter
push
dec
call
inc
fistl
lret
lds
xchg
mov
les
sbb
xor
mov
xor
jmp
xor
mov
xchg
mov
daa
jge
cmp
xor
or
mov
arpl
dec
arpl
adc
ret
cltd
enter
mov
pop
notl
dec
sarl
jb
ret
mov
xor
sbb
sub
mov
imul
adc
hlt
leave
or
decl
ss
rcll
or
xor
les
call
jae
or
adc
aaa
pop
add
into
add
lret
jo
and
mov
cmpsl
pop
jmp
mov
dec
outsb
test
sti
pop
dec
shrl
out
pop
lret
fs
insb
mov
pop
clc
cmp
push
sub
mov
daa
mov
dec
xchg
jmp
mov
in
xchg
prefetch
push
pop
inc
sbb
adc
mov
lea
dec
xor
fiaddl
add
ret
jmp
mov
movsl
push
lret
ret
das
add
clc
int3
fcoml
cmp
dec
push
gs
and
or
push
loope
lods
mov
addl
mov
out
and
sbb
xchg
subb
lret
lcall
jmp
jle
mov
xor
mov
sbb
push
adc
push
mov
enter
dec
xor
mov
fcomps
jnp
pop
or
and
sub
sub
mov
sub
scas
sub
adc
dec
imul
push
in
insl
push
inc
sbb
repz
or
hlt
push
xchg
lret
mov
std
lahf
sbb
scas
adc
imul
cli
or
adc
ret
aas
pop
mov
inc
mov
fcmovb
ja
mov
int3
stos
push
into
or
push
mov
sbbb
lods
push
movb
mov
nop
ss
sahf
mov
adc
lods
sub
dec
xchg
imul
lods
mov
imul
push
mov
in
or
rcl
or
pusha
insl
leave
jae
jl
lock
les
jmp
subb
add
mov
les
ss
dec
test
xchg
xor
push
jg
mov
push
sti
pop
inc
push
lea
sub
movsl
sub
cmp
or
into
rol
in
call
test
jmp
mov
jg
mov
jbe
sub
loop
lea
adc
cmp
or
in
fmull
mov
pusha
leave
fwait
aad
inc
lea
and
jno
mov
test
mov
addl
fxch
add
pop
or
inc
mov
add
movsb
sub
add
sbb
lcall
aad
repz
in
xor
loop
mov
jne
mov
xchg
test
scas
out
jle
hlt
mov
inc
sub
and
loop
je
pop
sbb
lods
fstpl
lret
mov
stc
stos
inc
push
lret
scas
fsubr
jno
dec
or
add
pop
or
neg
cmp
xor
sbb
aaa
xchg
and
lea
add
dec
sbbl
in
mov
movsl
aam
push
js
outsl
cmpsl
ss
stc
cmpsb
xlat
push
jmp
xor
cmp
fucompp
push
jge
lds
xchg
mov
sub
ljmp
mov
pusha
inc
or
inc
jg
pop
dec
lods
roll
out
jge
call
lahf
lods
pop
icebp
ljmp
xor
inc
cwtl
mov
pop
mov
ss
xchg
xor
bound
imul
xchg
xchg
pop
mov
dec
push
cmp
sahf
pop
cmpsb
add
jne
pop
cltd
sub
xchg
push
xchg
add
mov
mov
shll
call
ss
repz
ljmp
imul
ret
fidivrl
mov
mov
out
mov
or
sti
xor
sahf
inc
stos
xchg
mov
rcrb
jmp
jnp
fs
jle
test
in
es
shlb
movsb
stos
and
pextrw
and
push
xchg
movsl
inc
dec
sbb
xor
fists
xchg
scas
stos
cmp
jl
adc
std
lahf
loop
fnstenv
fstpt
mov
mov
inc
or
mov
jmp
pop
in
adc
mov
subb
xor
inc
scas
xchg
cli
push
pusha
stc
out
je
jmp
jb
or
adc
test
adc
dec
pop
shrb
shrl
das
mov
jmp
add
shlb
or
repnz
jmp
mov
fmuls
or
or
dec
sub
insb
cs
fucomip
push
pop
cs
enter
adc
stos
lods
fiaddl
xor
mov
sahf
or
cld
pop
test
push
jbe
push
xchg
cs
push
les
mov
jbe
ljmp
xor
or
xchg
cmp
adc
rolb
out
pop
add
fnstenv
lret
mov
pushf
les
les
ljmp
out
cmp
popf
mov
xlat
aam
sub
and
jmp
outsl
rcll
loopne
test
mov
cmp
pop
mov
push
xor
adc
lea
xchg
lods
adc
push
xor
jmp
push
mov
mov
pop
jmp
pusha
adc
inc
in
scas
test
inc
shll
sahf
jno
add
into
mov
cli
adc
shrl
jns
sbb
jne
in
add
mov
inc
push
push
or
ret
sub
pop
add
mov
sub
add
mov
sbb
imul
das
sbb
testb
push
mov
hlt
pop
mov
inc
insl
adc
pop
stos
jns
xchg
inc
jg
cmp
test
sbb
mov
dec
or
not
pop
add
add
mov
sti
mov
mov
jno
sub
sub
pop
sarl
mov
xchg
jmp
cs
xchg
sub
dec
jmp
fcom
push
fbstp
pop
add
sub
sbb
adc
leave
in
lods
sub
inc
xchg
pushf
int3
sbb
iret
inc
sbb
inc
jmp
jge
add
mov
add
in
inc
inc
sbb
mov
mov
inc
into
cmpb
loope
stos
mov
ret
add
dec
or
mov
push
bswap
sub
xlat
jae
push
push
rclb
push
dec
xlat
cwtl
je
or
mov
cmpsl
lods
push
cli
dec
ja
dec
addr16
je
movsl
add
fsubrs
ret
mov
ja
movsl
mov
arpl
arpl
inc
pop
mov
xchg
sub
sub
out
push
lahf
fcmove
jle
push
jbe
shl
mov
lret
push
pushf
or
test
mov
gs
push
jp
das
imul
fldl
pop
rolb
sbb
ja
cmp
xor
jmp
hlt
dec
push
aaa
dec
add
sar
pop
inc
shrl
inc
shll
cltd
repz
mov
test
dec
lahf
pop
jb
cwtl
fst
sbb
loop
sub
inc
pop
dec
mov
mov
adc
aam
in
adc
inc
repz
xor
lahf
loop
mov
push
ret
loop
in
mov
repz
rcll
and
div
or
fildll
inc
cmp
jp
rolb
adc
cli
shrl
mov
inc
cmp
lods
orl
sbb
mov
aam
or
mov
sub
push
push
or
clc
out
lds
ret
jno
outsl
js
imul
mov
mov
out
mov
loop
jecxz
push
jmp
adc
loope
mov
mov
inc
push
iret
mov
mov
xchg
sahf
imull
or
mov
pop
jmp
enter
dec
xor
inc
lods
jle
in
lret
hlt
inc
arpl
in
decb
add
in
imull
cmp
dec
cmovl
jae
in
lret
jne
je
mov
adc
xchg
jbe
lea
ljmp
ret
inc
xor
aad
dec
xor
fisubrl
aad
sbb
lret
int3
jle,pn
dec
add
cmp
cmpsb
cmp
push
mov
xor
cmp
or
pusha
sbb
sub
cli
dec
push
cli
mov
mov
push
jne
ret
mov
pusha
push
icebp
and
gs
int
subl
inc
cli
jns
gs
sbb
loop
lea
push
stos
and
inc
faddl
pop
test
out
jmp
mov
and
adc
add
ja
jns
jb
dec
lods
inc
mov
add
test
jo
or
sub
sahf
push
les
jecxz
pop
inc
xor
sub
cmp
inc
arpl
ss
inc
and
inc
add
push
and
imul
mov
pop
mov
cmp
das
cmp
fcmovu
cltd
cld
lods
dec
jmp
mov
or
clc
iret
mov
dec
pop
test
adcb
and
mov
dec
fdivrs
stos
jb
orl
push
adc
jle
mov
int3
sub
loope
xchg
fsubrp
popa
mov
pushf
mov
jnp
mov
inc
or
xchg
pushf
sbb
and
iret
jmp
dec
cmp
push
stc
push
pop
xor
inc
mov
mov
sub
sub
mov
jo
sahf
jo
rcrl
mov
ror
adc
mov
mov
call
lret
mov
mov
inc
sbb
xchg
xchg
inc
outsb
in
push
mov
or
pop
scas
inc
loopne
addr16
xlat
sub
mov
insl
pusha
cmp
or
fwait
mov
push
sbb
repnz
std
push
and
add
push
cli
and
xchg
jmp
aad
cmc
dec
inc
daa
jecxz
js
mov
mov
insl
push
shrl
dec
fsubl
pop
pop
movsb
stos
jmp
adc
jge
ljmp
push
sub
xchg
into
insb
or
xor
or
dec
pop
out
fadd
scas
jbe
inc
push
sub
jne
jns
addr16
lds
insl
lcall
adc
fdivrs
int3
movsb
jno
test
adc
or
mov
ret
test
xor
mov
sbb
movsb
lcall
cwtl
lcall
loope
sahf
js
in
adc
pop
pop
fisubrs
adc
jns
je
test
aam
mov
paddsb
or
jne
fcmove
add
pop
jmp
int
xchg
shrl
rcll
in
xor
mov
ja
sbb
cmp
fildl
shll
addb
pop
loopne
mov
jl
or
fmul
jp
sbb
shrl
les
xor
hlt
enter
imul
push
sub
out
push
xchg
inc
or
dec
dec
xchg
cmp
int3
repnz
xchg
lret
shll
stos
idivb
jle
mov
in
xchg
pop
sbb
mov
loope
push
pop
aaa
sub
mov
mov
mov
or
adc
adc
scas
sub
shl
jmp
cli
ljmp
cmpsl
imul
lcall
lods
test
es
insl
and
mov
cmp
push
dec
pushf
loop
push
cmp
loope
adc
push
and
jo
popf
mov
retw
cmpsl
popf
mov
mov
mov
cmpsl
fwait
imul
scas
adc
in
inc
fucom
fwait
cld
lods
mov
xchg
and
and
mov
adc
jp
fcomip
jb
mov
sbb
lods
andb
inc
xchg
push
popa
add
xor
lods
ja
mov
clc
data16
xchg
fldl
or
adc
adc
pop
cld
ficomps
ret
pop
int
ss
xchg
cmp
pop
mov
movsb
int
imul
in
jo
push
and
ss
ret
xor
push
sub
jg
jmp
push
inc
xor
fimuls
nop
mov
or
mov
cmp
adc
dec
cmp
lea
stos
push
test
xor
inc
push
dec
jmp
jge
icebp
or
inc
or
inc
jnp
push
inc
jmp
inc
mov
cwtl
xor
movb
bound
inc
jmp
dec
ret
sbb
imul
ljmp
pop
insl
pop
sarl
xchg
insl
adc
ret
dec
cmp
pop
dec
cld
mov
lods
add
and
imul
ret
dec
mov
outsl
mov
in
xchg
lcall
incb
xchg
cmpb
mov
inc
movsb
ljmp
mov
cmp
scas
xchg
cwtl
popl
jge
push
mov
aaa
pop
and
or
jmp
jmp
jmp
loopne
xchg
pop
hlt
inc
dec
addb
ljmp
xchg
aas
pop
in
popf
roll
loop
rcr
arpl
dec
xchg
icebp
repnz
insl
or
fiaddl
inc
in
test
lods
sub
inc
sti
push
sahf
negb
xchg
repnz
xchg
outsl
mov
mulb
jb
dec
pop
dec
cli
popa
adc
mov
mov
mov
mov
fimull
shl
jp
push
outsl
sub
test
sbb
incl
sti
movsb
ret
rsm
aad
jle
pop
and
dec
pushf
int3
push
dec
adc
notl
nop
cmp
aas
outsb
loopne
fsubrl
popf
dec
fidivs
sub
insb
das
in
adc
jbe
cli
jmp
addb
jecxz
jmp
xorl
jg
mov
xorl
lds
jg
mov
insl
pop
dec
push
shlb
lods
js
lock
push
sub
add
adc
or
int
in
addr16
push
data16
mov
mov
andl
add
and
lods
push
jmp
ljmp
xor
loop
bound
inc
nop
jmp
xchg
sub
insl
mov
pusha
int3
lock
rcrb
cmp
sti
mov
mov
lods
fldcw
aad
mov
adc
insl
in
pop
sub
stc
and
dec
movsb
imul
fwait
jge
pushf
jle
add
test
cmp
gs
push
cmp
or
andb
std
jmp
pop
xchg
test
mov
xchg
adc
mov
push
push
in
pop
xor
fistpll
mov
out
xchg
sbb
jmp
iret
add
jbe
sub
imul
mov
push
lret
lods
ljmp
jecxz
push
dec
loop
pop
aaa
add
or
jbe
fcmovnbe
sub
arpl
out
dec
xchg
roll
xor
test
cmp
cmp
jnp
pushf
or
pop
call
push
mov
dec
sub
jecxz
stos
sub
mov
leave
or
imul
dec
push
gs
test
mov
sarl
jno
stos
xchg
jl
sahf
ret
or
aaa
leave
sbb
pop
imul
int3
cmp
jb
jecxz
fwait
or
cs
dec
clc
fs
shll
mov
mov
in
outsb
push
mov
cmp
adc
rorl
ss
outsb
cmc
pop
lcall
int
lret
shr
ret
iret
fildl
xchg
or
adc
sub
sbb
sti
add
out
mulb
xchg
hlt
insl
pop
push
leave
jne
dec
sbb
xor
out
sahf
or
sbb
fimuls
fnstsw
jle
movsb
mov
les
clc
aaa
mov
mov
ret
mov
jns
ret
ja
lds
movsl
ds
mov
add
popf
or
and
movsl
xchg
jo
das
aam
sbbl
ret
arpl
or
pop
sub
int
cmp
fwait
out
arpl
mov
xchg
in
das
push
sbb
andb
jecxz
dec
xchg
jmp
lret
or
movsl
sahf
mov
jmp
or
ljmp
test
cmpsl
mov
aad
mov
arpl
pushf
inc
push
jmp
mov
ljmp
test
pop
dec
mov
inc
sahf
cli
test
mov
fcmovnb
mov
imul
jno
mov
xlat
dec
cmp
ja
add
hlt
dec
pop
fidivl
sarb
fidivl
add
pop
mov
mov
repz
xlat
push
into
pop
or
test
shrl
rcll
stc
cli
nop
addr16
pushf
insl
or
lods
xor
jge
stos
and
mov
jecxz
push
gs
jns
mov
sbb
inc
test
cmp
push
rolb
cmp
cli
out
mov
sbb
inc
or
loopne
lods
push
into
cmpsb
int
aas
pop
and
subl
cs
in
pop
mov
mov
lcall
sbb
rcll
int3
testb
ret
lret
jno
out
sbb
jno
dec
pushf
daa
out
nop
into
sbb
dec
mov
insl
and
xor
pushf
or
sbb
aad
and
xchg
int
mov
in
xor
lret
mov
xor
and
jne
sub
hlt
lahf
out
fstp
pop
stos
ljmp
movsb
jle
xor
and
ret
pop
mov
lea
add
les
cld
out
xlat
cmpsl
inc
lods
push
or
jb
xchg
push
inc
rep
shrb
mov
jne
ja
aam
in
inc
rclb
lahf
mov
or
or
ss
push
dec
xchg
pop
data16
sub
xchg
ficoms
or
adc
mov
fnsave
aam
adc
in
or
or
rcr
in
dec
bound
sbb
int3
cmc
xchg
mov
add
fisttpl
aaa
lea
imul
pop
or
outsb
push
push
cmpsl
dec
jecxz
push
jge
or
mov
jmp
pusha
jo
sahf
push
je
jp
fs
jne
sti
mov
inc
nop
cmp
jae
xchg
xor
and
in
mov
mov
or
insl
fs
cs
xor
xchg
mov
orb
test
push
xor
adc
int3
adc
push
mov
ret
jle
or
out
jmp
xchg
arpl
inc
out
sub
push
xchg
notb
sbb
cwtl
lret
loop
dec
fs
out
out
inc
xchg
or
jp
pushf
adc
or
sub
aad
push
jbe
or
mov
lret
lods
pop
xchg
lods
pop
test
lods
sub
imulb
push
out
pop
in
add
mov
jle
cld
sti
ret
or
pop
insl
pop
lods
sub
dec
pop
mov
sub
inc
add
js
mov
sub
mov
and
out
or
mov
cmp
mov
add
dec
push
or
cmpsl
inc
sar
jmp
loopne
sbb
inc
dec
out
hlt
test
test
or
cmp
adc
insb
pop
lcall
sbb
in
lret
lds
adc
mov
shrl
inc
or
enter
push
sbb
psubq
or
scas
leave
push
xchg
testb
and
push
add
sbb
out
inc
orl
or
dec
add
cmp
sub
aam
add
fiaddl
data16
sarb
ffreep
jno
in
cmp
rcl
ss
push
das
and
jecxz
jle
ss
stc
sub
repnz
sti
sbb
insl
addr16
jmp
jge
mov
inc
les
loope
mov
mov
adc
cmp
jbe
in
dec
inc
jo
add
pop
imul
ret
loope
mov
fmulp
add
dec
cmc
jmp
adc
roll
jmp
clc
int3
pop
lcall
pop
nop
pop
mov
sbb
cmc
rorl
fldt
push
call
pushw
xchg
jmp
xor
stos
stos
fmull
in
push
or
imul
add
mov
shl
mov
or
sub
sbb
out
xor
push
lea
out
jae
jge
mov
push
or
jmp
mov
clc
and
fsubrl
pop
enter
lcall
xlat
inc
sahf
or
ret
xor
je
pop
dec
lcall
jb
pop
mov
je
or
out
push
push
sbb
dec
jb
and
push
into
sbb
rcl
int
dec
fsubrp
es
sbbb
int3
stos
or
ret
push
sahf
shr
insb
xchg
inc
imull
cmp
push
push
fisubrl
mov
popf
jo
fstl
jne
bound
in
cltd
in
test
sbb
sbb
mov
push
scas
dec
adc
sub
push
shrl
nop
jae
pushf
ja
ret
adc
call
adc
sbb
adc
jns
ret
jmp
adc
adc
cs
arpl
adc
inc
sub
cld
sahf
pop
adc
loop
xor
sub
rcl
outsl
aam
add
rcr
sbbb
push
ss
and
mov
mov
fildl
in
lods
add
jb
xchg
adc
in
int3
test
mov
push
sub
stc
mov
loop
xor
push
popf
inc
jo
into
aas
scas
mov
lahf
inc
lret
dec
and
cmpsl
inc
sar
add
aad
mov
pusha
xor
imul
fisubs
arpl
add
jmp
fisttps
sbb
sbb
mov
dec
or
sbb
movsl
push
ja
sarl
hlt
or
xchg
fimull
movsb
add
movsb
shlb
pop
fwait
sub
jg
cmpsl
mov
xchg
push
xchg
icebp
rorl
and
jnp
bnd
xchg
pop
loop
dec
mov
fistpl
xor
cmp
or
test
dec
cwtl
adc
lea
rcl
bound
sahf
mul
lahf
cmp
int
cmp
ja
ss
adc
cmc
aaa
sbb
dec
and
ret
stos
adc
or
ljmp
or
fs
adc
sbb
xor
add
sahf
clc
inc
js
push
xor
ror
mov
xchg
dec
sbb
add
jle
lcall
xor
test
sbb
imul
bound
push
lods
mov
or
cmpsb
dec
out
xchg
int3
daa
mov
shll
xchg
adc
shrl
mov
rcll
fidivrl
jge
adc
lods
icebp
sbb
sub
inc
rcll
xchg
dec
sbb
push
aam
cmp
sbb
mov
jmp
mov
rcll
cmp
loop
clc
outsb
and
shll
cmpb
loop
xor
inc
or
dec
push
std
push
mov
mov
push
jmp
and
inc
add
mov
ja
out
or
andl
ds
ljmp
fwait
rcl
xchg
sbb
or
les
inc
in
inc
lcall
mov
adc
into
or
or
jg
adc
int
mov
in
adc
mov
test
sbb
add
sub
or
jmp
sub
cmp
mov
rorb
cmp
fcmovbe
xchg
xchg
or
pushf
outsl
xlat
cmp
sub
inc
ret
or
shr
gs
adc
das
mov
or
adc
sti
adc
repnz
pop
test
aad
xor
inc
pop
int
pop
mov
sarl
scas
jno
mov
sarl
ja
xor
jo
dec
jle
popf
dec
dec
sub
mov
stc
pop
pushf
or
es
loop
pop
jg
stos
push
push
lret
or
cmp
ret
mov
mov
fisttpll
xlat
xchg
sbb
dec
xlat
sub
bound
sbb
or
mov
arpl
cli
rcl
popl
rcrb
insl
fwait
pushf
aas
test
arpl
cmpl
jmp
push
scas
aaa
lret
popl
xchg
jo
jecxz
shl
stos
jbe
inc
dec
xchg
aaa
rcrl
jp
aad
xchg
test
jmp
xor
mov
xchg
lea
adc
push
rclb
or
lahf
sbb
push
test
pushf
imul
xor
mov
daa
xor
cmp
sbb
or
repz
sub
data16
lock
jge
iret
lods
mov
mov
cmpsb
dec
negb
bound
sarl
push
push
pusha
or
arpl
in
iret
jae
popf
xchg
jmp
add
int
out
movsb
cld
mov
rorl
push
repz
pop
cmp
in
ss
adc
sub
pop
rcrb
fwait
pop
pusha
fdivr
dec
jbe
pop
jbe
js
daa
pop
mov
pop
pusha
jmp
inc
rcll
test
mov
stos
stc
mov
shrl
fidivrs
aas
stos
sub
sub
leave
push
movsl
push
dec
xchg
pop
push
lret
imul
sar
rolb
mov
rclb
add
sub
aam
enter
lcall
andb
test
dec
repz
popf
push
aam
jle
repz
out
sbb
pop
or
js
repnz
and
cs
inc
ret
outsl
mov
mov
loop
jno
data16
mov
mov
mov
push
stos
inc
cmc
inc
ja,pn
lods
mov
pop
pop
push
outsb
cpuid
cmpsb
pop
jg
ret
mulb
jne
ds
pop
mov
mov
std
cmp
or
aas
rol
xor
adc
std
or
std
add
mov
push
int
mov
insb
and
dec
les
push
sub
ss
loop
xor
pop
xchg
dec
mov
fcompl
add
sbb
mov
mov
out
sbb
lret
cmp
rcrl
xorl
mov
jmp
mov
rorl
cmp
cwtl
cmp
les
int
pop
inc
pop
fldt
push
in
cmc
cmpsl
scas
pop
xor
es
dec
jno
cmpsl
cld
push
into
orl
jae
push
or
mov
mov
shlb
pop
jl
push
pusha
stos
dec
fwait
and
test
xchg
mov
ret
add
shrl
outsl
imul
or
stos
xchg
sbb
dec
icebp
and
xchg
fdivs
jns
sti
cmp
call
jmp
mov
xorb
inc
xor
add
insb
orl
jg
or
jge
dec
imul
int3
imul
subl
push
arpl
test
pop
ret
inc
enter
repnz
jmp
cs
in
pop
sub
mov
rolb
jne
sbb
arpl
sub
cmp
jo
inc
lahf
dec
xchg
insl
sbb
or
dec
cmpb
pop
sbb
pushf
pop
mov
and
das
mov
adcb
rcll
adc
rclb
fadds
fwait
xor
mov
or
pop
pusha
xchg
in
out
inc
cli
faddl
movsb
mov
add
jp
cmp
mov
lea
sub
nop
outsb
xor
add
add
aaa
dec
lcall
add
mov
mov
add
sbb
cmp
bound
mov
orl
pop
add
pop
divb
pop
ja
out
pop
push
dec
aaa
bound
or
mov
xor
add
call
or
cmpsb
test
fcomp
xchg
pushf
fimull
mov
test
or
fdivrl
int3
cwtl
fsts
mov
push
aam
push
sub
xor
in
aam
ret
mov
aad
dec
mov
ret
out
in
lret
test
push
insl
popf
mov
cmp
add
jle
jb
jbe
jp
and
mov
push
sub
lods
ret
rorb
fdivrp
pop
jp
rorb
in
leave
pop
or
mov
mov
outsl
push
cmp
ljmp
sub
jmp
lea
cmp
add
add
push
mov
lea
cmp
push
subb
sar
or
inc
test
ret
mov
sahf
mov
icebp
repz
pop
cmp
jecxz
mov
mov
or
and
mov
jecxz
mov
dec
add
mov
jge
sbb
adc
cmpsl
jns
cmp
shrb
xchg
xchg
jne
jns
pushf
pop
inc
rolb
push
stc
lods
sbb
jmp
lds
lcall
add
jmp
and
sbb
adc
arpl
sbb
push
push
fsubr
push
jns
push
inc
mov
fwait
jno
ret
icebp
fadds
leave
push
rep
daa
jecxz
in
jbe
into
mov
jmp
int3
repnz
xlat
lcall
inc
repnz
inc
add
dec
and
dec
mov
xor
jnp
stos
imul
dec
mov
jns
jecxz
dec
mov
sub
pop
lods
gs
or
fwait
add
lcall
fcom
push
je
cmp
jmp
aas
imul
pop
and
jb,pn
popa
outsb
sbb
out
mov
leave
adc
push
mov
iret
xor
cmp
lods
mov
adc
mov
arpl
and
sub
lea
xchg
dec
inc
shll
fidivl
xchg
sarl
lcall
out
mov
shrl
ficoms
cmpsl
loop
push
insb
fisubrl
mov
leave
es
rcrl
stc
adc
or
mov
pop
add
loope
jmp
jp
xor
cmp
push
xchg
sub
data16
mov
or
cmp
or
repz
pop
sbb
cltd
int
cmpb
xchg
cmp
call
popa
sbb
mov
add
cltd
adc
jg
das
repz
push
or
orb
cmp
inc
ficoms
adc
xor
mov
lret
ja
sbb
or
icebp
mov
jne
sub
mov
sbb
mov
jno
data16
ret
dec
mov
shl
jmp
adc
xor
dec
push
and
bound
std
loop
xor
push
add
arpl
adc
cs
adc
or
xchg
stos
rorb
lea
fldl
xchg
imul
mov
shrb
pop
bound
cltd
cmp
mov
dec
andl
dec
mov
and
dec
in
cmp
sub
pop
sub
push
xorl
loop
push
dec
dec
adc
fistpl
sbb
movsl
jmp
adc
add
mov
add
pop
in
iret
pop
push
cmp
sti
pushf
int3
xchg
xchg
sbb
add
pop
jecxz
mov
jne
movsl
imul
sub
mov
lea
mov
loopne
cli
push
mov
add
xchg
or
jge
pop
stos
jle,pn
adcl
aas
cmpsl
cmp
cmp
sub
sbb
xor
ss
loop
repnz
adc
ss
mov
jmp
test
and
aad
mov
test
jmp
in
fwait
mov
dec
adcb
dec
mov
push
enter
repz
or
or
adc
rolb
shlb
fstl
adc
sub
lds
jle
js
add
cmp
sbb
inc
addr16
cmp
hlt
or
sub
and
dec
or
push
xchg
lods
repnz
jmp
fcmovnb
xor
push
xchg
roll
sbb
jmp
data16
push
gs
mov
push
mov
or
cmp
lea
dec
sub
jb
mov
lret
movsl
inc
int
out
and
jmp
mov
movsb
push
and
inc
add
push
sub
jg
in
fists
scas
ds
push
std
ficoms
push
mov
xchg
dec
fsubrs
cmp
cmp
xor
dec
rcrb
or
clc
jp
fcoms
xchg
out
cli
int
movsl
mov
mov
mov
cmpsl
ror
push
iret
and
sbb
pop
stc
push
pop
push
loop
mov
pop
xchg
xchg
dec
cli
jmp
push
mov
pusha
cmp
adc
cmp
jns
jecxz
ret
mov
or
fildl
jecxz
mov
push
xchg
fildl
in
arpl
add
pop
repz
int3
in
fldz
cli
out
push
call
jb
mov
divb
mov
adc
sub
mov
xor
mov
rcrb
call
repz
loop
aaa
gs
xchg
sar
stc
adc
andb
jae
mov
jbe
sub
cmp
push
xchg
cmpsb
shrl
push
xchg
rcrb
dec
in
hlt
sbb
imul
dec
xchg
divb
cmc
pop
idivl
add
inc
xchg
jno
sahf
jecxz
or
jmp
mov
out
sub
pop
add
rorb
mov
mov
or
imul
cmc
rolb
sub
scas
pop
jecxz
pop
repnz
outsb
dec
mov
cmp
nop
inc
pop
fstp
lcall
out
add
mov
ret
test
dec
sub
out
jge
setns
add
mov
mov
add
or
dec
testb
repnz
inc
jmp
shll
je
xchg
push
into
aad
in
outsl
inc
test
xlat
js
mov
icebp
adc
mov
adc
aam
imul
in
outsb
aaa
mov
dec
aaa
jle
outsl
cmp
and
sarb
fmul
dec
out
inc
inc
stos
dec
rcrl
fnstsw
xor
add
popf
mov
adc
push
sub
jmp
mov
bound
sub
in
mov
inc
pop
mov
adcb
mov
in
sbb
popa
cmp
cmp
imul
jno
pop
pop
jnp
fsubrl
pop
ror
sahf
xor
mov
jmp
pop
push
nop
lret
inc
cwtl
mov
popw
pop
stos
or
fsubrp
mov
femms
add
out
mov
out
adc
sub
and
or
cmp
mov
push
add
out
sub
adc
sbb
sub
adc
iret
insb
sbb
xor
xchg
enter
leave
xlat
push
mov
aas
lock
enter
into
and
xchg
mov
push
int3
arpl
add
sub
repz
ljmp
sbb
mov
adc
push
add
aad
jne
in
jae
frstor
pop
es
fcoml
lods
movsb
dec
sub
jne
pushf
pop
arpl
cmp
pushf
adc
xchg
arpl
popf
fimuls
fldl
cld
in
cmp
push
cwtl
lcall
gs
xchg
pushf
add
ja
xor
push
sbb
ja
cmp
sarl
lea
xchg
or
das
fisubs
and
repz
or
pop
sub
scas
cli
call
je
sub
mov
inc
scas
outsl
sub
sbb
xor
mov
hlt
xor
jns
push
setl
imul
je
out
stos
ret
adc
xor
jnp
jl
cld
out
stos
dec
push
cmp
pop
xor
pop
lahf
pop
add
pushl
mov
push
nop
jno
scas
out
insl
or
lods
es
mull
ss
add
shlb
push
xorb
lret
sahf
orl
xor
mov
call
mov
shlb
sbb
fwait
push
test
push
cmp
mov
cld
jns
leave
les
mov
iret
scas
mov
pop
sbb
sbb
adcb
mov
jp
incb
test
jle
loop
movsl
ds
outsl
jmp
inc
adc
popf
pop
lock
dec
nop
inc
mov
stc
pop
stos
outsl
adc
mov
int
ljmp
ficompl
aaa
push
inc
mov
ficoml
mov
cmpsl
aam
ret
ror
rorl
mov
lods
popa
push
jo
or
push
or
pop
mov
mov
adc
jl
lea
int
in
aad
rep
les
adc
jl
cmp
ret
insb
lods
adc
push
xor
dec
test
xchg
add
repnz
cmp
pusha
jge
adc
shrb
pushf
ficoml
imul
sti
mov
inc
mov
imul
push
sbb
sbb
sbb
ret
ljmp
cmp
mov
sbb
je
jo
daa
xchg
ret
mov
rcrb
adc
leave
jb
mov
mov
cltd
lret
sbb
lods
cmp
jbe
xor
pop
push
or
adc
mov
in
jnp
notl
arpl
xchg
adc
sbb
ret
sub
sbb
jb
in
inc
ret
cmpb
xor
fcmovb
loopne
in
jl
mov
dec
push
repz
xchg
ret
in
jl
xor
add
fwait
ss
adc
xor
popa
pop
bound
nop
hlt
scas
sub
daa
andl
in
in
or
rcl
stos
lret
adc
out
sub
lret
xchg
sarl
repnz
shll
ljmp
outsl
lods
repz
ret
xorb
inc
nop
into
sbb
out
stos
add
xor
stos
in
icebp
sbbl
int3
mov
lock
int3
icebp
sbb
es
fisttpll
xchg
sti
stos
fdivr
xorl
push
adc
rol
loope
sub
dec
out
fisubs
stos
mov
in
or
subl
shr
stos
inc
pusha
clc
dec
ja
outsl
out
movsb
es
call
into
loop
adc
mov
popa
xchg
jge
fsubs
sub
dec
pop
data16
mov
dec
sahf
ds
arpl
imul
daa
es
stc
xchg
repz
push
iret
dec
jnp
and
or
or
cmpb
js
cwtl
repz
push
ret
push
sbb
lret
and
sub
test
in
mov
shlb
push
mov
in
add
lret
mov
loope
push
add
aam
and
arpl
xlat
or
mov
jle
mov
fwait
cmp
lea
push
inc
and
pop
push
repz
daa
std
or
es
das
scas
adcb
shlb
pop
ljmp
gs
mov
leave
mov
and
loope
or
and
rcll
cmp
stos
sbb
jg
ss
pushf
dec
sub
adc
push
cltd
push
bnd
or
aad
frstor
pop
add
shlb
adc
fisubrl
test
mov
cld
and
add
adc
lods
jmp
or
adcl
repnz
subl
add
das
mov
cmp
push
mov
inc
xchg
sbb
movsl
int3
mov
out
and
and
xor
mov
gs
int3
pop
push
jnp
sti
inc
push
push
mov
cltd
mov
and
dec
sarl
adc
mov
cmp
bound
daa
dec
fists
mov
gs
xor
add
shll
sti
sahf
enter
fsubs
lahf
gs
xchg
cmc
insb
ret
add
sahf
push
mov
sti
mov
adc
stos
fisubl
stc
imul
in
xor
push
jmp
jb
mov
and
fidivrs
sbb
sub
outsl
into
jo
repnz
nop
or
mov
jmp
push
ret
adc
dec
test
or
js
and
jb
cmp
lret
mov
push
out
ret
cli
sub
add
dec
mov
sti
and
ret
idivl
mov
push
xchg
and
dec
dec
fs
faddl
mov
sub
push
scas
das
lret
nop
cmpsl
cmpsb
mov
xchg
out
not
mov
ja
outsb
scas
xchg
mov
add
cmovp
out
or
mov
cmp
jo
lea
insb
rolb
stos
jns
jp
add
and
and
dec
or
sbb
push
loopne
push
test
mov
or
cld
xchg
sub
mov
add
pop
es
add
pop
cmp
xor
xor
test
in
subl
inc
lods
jecxz
xor
add
sub
inc
sbb
adc
nop
add
ret
inc
or
in
rcrl
add
cmp
in
lods
repnz
in
mov
rolb
xor
cmp
mov
insl
sbb
scas
loopne
lcall
pusha
adcl
jl
mov
sub
jns
xor
test
cli
mov
ss
inc
xchg
out
enter
mov
dec
xchg
mov
xchg
stos
push
xor
js
jmp
mov
stos
sub
or
notb
sbb
cld
xchg
js
je
std
mov
push
add
incb
dec
scas
test
push
dec
cmpsl
sub
dec
test
jp
jnp
xchg
repnz
jp
out
mov
mov
or
ficompl
icebp
movsl
pop
pop
das
dec
mov
stc
push
add
fldl
or
outsl
test
mov
outsb
add
jb
lock
or
out
mov
insb
xchg
dec
ja
fwait
dec
sbb
stos
test
aam
inc
dec
mov
inc
or
cmp
dec
and
fs
out
jbe
add
sub
adc
mov
push
ret
lds
lcall
orb
or
or
adc
inc
pop
int
mov
cmp
mov
stos
je
cmc
scas
push
fmull
imul
push
mov
daa
lret
mov
mov
enter
and
mov
sub
lods
ljmp
scas
add
out
ret
jg
clc
das
or
rcll
mov
sbb
adc
dec
xchg
mov
dec
test
sub
mov
mov
pop
jecxz
shll
xor
inc
xchg
sbb
mov
or
cmp
add
imul
nop
jno
push
cwtl
xlat
ss
cld
pop
mov
pop
sbb
cmpb
mov
mov
cmpsl
inc
sbb
adc
addr16
fisttpl
pop
nop
lods
addl
jns
fstps
call
cmp
sbb
mov
andb
and
add
mov
inc
es
loop
push
cmp
lea
fwait
ljmp
sbb
add
loope
pop
out
fsubrs
lods
pop
ror
enter
add
lods
lds
add
or
mov
mov
cmpsl
mov
loope
dec
in
mov
mov
sub
fistps
push
mov
out
stos
push
xchg
lret
cmpsl
mov
xchg
movsb
mov
sbb
insl
loopne
mov
aaa
fiadds
sub
mov
inc
lret
mov
mov
pop
push
push
pop
or
ja
fsts
cmp
inc
inc
das
cmc
add
inc
popa
mov
loopne
and
pop
inc
dec
mov
imul
movsl
gs
loop
pop
shrb
fsubs
sti
pusha
add
mov
sti
mov
sarl
out
outsl
pop
or
cmp
xchg
repnz
stos
dec
cmpsl
xchg
xchg
sbb
or
mov
pop
test
lret
lret
int3
mov
mov
stos
aam
push
shrb
sti
pop
outsl
imul
stos
or
sahf
out
test
jl
inc
ljmp
and
adc
sbb
or
loopne
lock
jno
mov
inc
jnp
mov
adc
mov
dec
push
shrb
dec
lret
inc
mov
adc
pop
ja
mov
clc
sbb
lret
mov
mov
popl
mov
scas
adc
es
push
popf
stos
inc
add
xchg
sub
push
test
dec
or
mov
sbb
push
test
cs
lret
cli
dec
xchg
mov
push
jp
cmpsb
xchg
daa
push
push
cmpsl
jmp
adc
mov
mov
push
jg
in
inc
imul
arpl
jno
cmpsb
sbb
fcoml
sbb
mov
adc
sub
mov
mov
into
sub
adc
mov
out
test
and
pusha
dec
add
push
aam
aam
loop
push
or
push
dec
cmp
gs
sub
pop
cmc
sub
out
addr16
movsl
lods
adc
sub
add
jle
jle
mov
push
shr
popa
mov
sbb
sub
mov
insb
popf
mov
push
sarl
or
xchg
pop
cmpsb
scas
rcrl
mov
mov
mov
xor
inc
jb
adc
es
inc
fst
mov
dec
lahf
cld
imul
ror
std
icebp
fs
dec
or
push
and
cmp
jecxz
sub
js
sti
dec
add
ljmp
xor
mov
mov
and
sarb
mov
imul
imul
or
adc
roll
or
jno
dec
add
sbb
sub
shlb
dec
adc
aad
je
test
xchg
pushf
lods
fwait
mov
inc
sub
repnz
insl
fnstcw
push
mov
dec
or
mov
subb
mov
ja
mov
push
adc
popf
loopne
inc
add
sar
mov
mov
xchg
xor
mov
fs
out
fisubrl
sub
sarl
jle
sti
xor
ljmp
cmp
mov
add
clc
mov
and
scas
mov
inc
mov
out
sbb
scas
mov
out
lahf
xor
jno
dec
lds
fs
sub
lea
fldt
iret
push
jecxz
arpl
cmpb
jp
mov
xor
jg
addr16
fs
dec
out
scas
mov
shlb
dec
das
mov
popf
bound
jl
int
xor
sbb
or
aad
cmc
adc
sub
xchg
int
daa
mov
lret
push
pusha
xor
jae
jmp
rclb
push
mov
int
add
iret
mov
add
add
jmp
or
hlt
and
arpl
mov
xchg
mov
mov
cmp
ds
mov
test
sbb
push
divb
in
nop
cmpsl
shll
inc
cmp
cs
push
arpl
adc
in
jne
in
dec
mov
popf
jb
jmp
push
lret
or
sub
xchg
add
loope
xor
ret
sbbl
xchg
sub
mov
ss
mov
sarl
je
std
out
lcall
enter
jmp
sbb
sbb
leave
jg
sbb
cltd
cli
bound
or
cli
ss
enter
sub
xorb
neg
xor
jnp
daa
js
lahf
sahf
or
lea
in
or
push
out
sub
or
mov
int
les
inc
fimull
push
pop
xchg
pushf
dec
jnp
mov
mov
in
in
les
cmpsl
fldcw
adc
shl
dec
jmp
xor
lds
and
push
jmp
adc
xchg
test
arpl
out
lods
out
mov
lock
jbe
fsubrl
sbbb
je
sarb
test
int
ljmp
leave
cs
add
xchg
lret
sti
sbb
loope
xchg
das
test
sbb
sub
dec
add
stc
xor
nop
cmp
loop
loope
les
out
pop
cmpsl
in
pop
xchg
lcall
dec
inc
inc
cmp
popa
push
lods
out
ss
push
ja
sub
xchg
loope
cmp
sub
aas
ljmp
ja
sbb
aaa
mov
sbb
icebp
xchg
mov
fwait
or
push
dec
inc
outsb
mov
lock
out
mov
and
mov
adc
leave
pop
fsubl
dec
push
cwtl
push
pop
push
mov
cs
add
fwait
push
adc
loop
mov
arpl
popf
int3
or
xchg
js
dec
adc
inc
aam
xchg
jb
xor
jns
xchg
test
pusha
jb
lahf
fisubl
inc
cmpsl
xor
add
je
out
test
push
jg
addb
jmp
arpl
or
pop
loope
pop
mov
into
sub
enter
clc
sbbb
cmc
pop
sbb
mov
enter
sahf
dec
jmp
rcll
add
inc
aaa
lods
inc
push
jae
stos
int3
sbb
ret
arpl
adc
and
insb
int
xchg
push
mov
inc
stos
sub
shll
pop
sub
cs
decb
add
int
fadds
mov
movsb
popf
cmpsl
gs
outsb
jmp
bound
in
jae
sbb
jns
movsb
insl
or
sub
ret
add
mov
jmp
out
fidivrl
jne
fstpt
movsb
mov
out
pop
jecxz
in
push
in
jle
sub
stos
fidivrl
lods
push
hlt
ret
insb
dec
ss
das
push
imul
or
sub
iret
xchg
loop
and
adc
popa
mov
add
or
push
dec
repnz
xchg
push
or
add
sub
cmp
cmp
les
xlat
stos
cld
stc
jno
loop
cmp
imul
mov
inc
jmp
sub
adc
mov
xchg
inc
cs
adc
add
sub
popf
push
sub
pop
inc
test
leave
ret
mov
mov
in
daa
add
lret
out
xor
test
add
cmp
push
pop
xor
nop
test
jecxz
or
or
adc
inc
push
setl
mov
push
xlat
or
cmpsl
shrb
pop
mull
mov
mov
mov
pop
das
mov
jmp
adc
or
dec
sub
dec
sub
push
enter
scas
loop,pn
push
out
stos
setg
dec
push
mov
adc
outsb
ljmp
or
fwait
mov
dec
stos
imul
insl
iret
cmp
mull
leave
pushl
adc
inc
ljmp
sub
lods
add
lret
in
push
lock
ja
mov
cwtl
scas
cmp
inc
mov
subb
mov
adc
mov
ja
jo
nop
repnz
shrl
outsb
xor
sbb
stc
rorb
ret
inc
lcall
mov
addl
imulb
cmp
or
sub
pusha
in
ja
pop
add
sub
dec
or
loop
xor
lods
loop
mov
into
xchg
ljmp
push
cltd
imul
ljmp
ret
test
mov
fimull
or
sbb
out
dec
sbb
jbe
je
cli
xor
cmpl
dec
cmp
lods
pushf
mov
xor
ss
sub
jmp
mov
mov
pop
cli
scas
repz
and
outsb
loop
pop
xor
dec
addr16
lret
mov
repz
add
push
jmp
test
sti
pop
mov
mov
ret
or
push
rclb
inc
scas
adc
iret
pop
sub
lea
add
dec
pop
mov
mov
push
dec
arpl
out
and
adc
or
fwait
cmpsl
fcompl
insb
into
sub
fstpt
shr
xchg
mov
outsl
xchg
inc
xor
cltd
std
and
pop
xchg
jo
imul
cmp
or
pusha
push
lock
in
mov
dec
pop
insl
or
push
push
flds
or
bound
stos
mov
dec
push
mov
loop
mov
sbb
es
push
inc
ficompl
faddl
mov
or
push
ss
mov
ss
or
dec
addr16
call
int
repz
ret
or
pusha
jecxz
test
movsl
mov
push
xchg
jmp
xchg
je
fisubl
inc
sub
repnz
call
sbb
cltd
adc
sub
enter
push
sbb
push
in
add
mov
jge
inc
or
push
inc
mov
mov
sub
in
sahf
push
rsm
xchg
adc
xorb
test
inc
lods
mov
mov
inc
loop
inc
dec
adc
fwait
cwtl
jo
sahf
leave
jg
shl
pushf
push
jge
xor
leave
test
cmpb
in
xchg
sahf
inc
adc
dec
data16
cld
imul
sbb
xchg
jle
addr16
sahf
loope
sbb
insw
sahf
mov
jle
jecxz
push
scas
sub
inc
mov
jp
adc
ds
mov
jg
fdivr
adc
jmp
aad
jle
add
mov
xor
imul
ss
lea
mulb
jmp
mov
jle
dec
cmp
push
push
mov
js
in
addl
lret
jbe
mov
pop
or
mov
cmc
popf
jb
loop
sub
pop
adcb
mov
mov
pushf
fisubl
mov
sahf
fldcw
imul
ret
mov
pop
add
jecxz
lods
in
in
movsl
jge
jne
icebp
xchg
dec
out
adc
ret
sub
push
mov
inc
cmpsb
mov
pop
sub
in
cmp
add
jmp
pop
sbb
or
dec
xor
imul
add
and
push
adcb
aas
push
mov
out
ret
fsub
jl
inc
push
stos
push
sbbb
mov
ss
dec
movsl
or
inc
cmp
jle
jmp
lods
jle
cmpsb
and
lret
lea
adc
and
cs
dec
pusha
pop
xchg
mov
jge
dec
scas
lret
push
test
pop
pop
dec
or
test
mov
stos
or
shl
int3
mov
test
push
dec
fcmovne
loop
pop
fisubrs
dec
outsl
orl
or
push
mov
jno
lea
jmp
or
xchg
cs
out
mov
gs
jb
cmpsb
pop
add
mov
mov
xor
jne
pop
jmp
cwtl
into
xchg
jb
hlt
insl
dec
std
ret
dec
and
adc
cs
movsb
mov
into
mov
das
ljmp
or
dec
sub
push
jl
and
mov
out
into
cmpsb
repz
hlt
xchg
xchg
iret
int3
call
pop
adc
mov
pop
repz
outsb
cld
pusha
adc
mov
add
sub
popa
or
sub
dec
rcrl
aad
std
push
bound
xlat
nop
out
jmp
stos
aam
and
fidivrs
cmp
mov
push
lods
pop
hlt
out
pop
ds
js
inc
lea
lea
pop
mov
push
loopne
test
dec
sub
push
push
or
imul
or
mov
int
cwtl
adc
jne
jmp
sbb
nop
mov
call
repnz
xchg
gs
in
xor
fsubs
fisttpll
pop
and
imul
es
inc
sub
ds
outsb
xor
out
mov
daa
xor
dec
add
xor
scas
outsb
jmp
sbb
mov
ret
lcall
jne
test
mov
mov
arpl
jmp
lahf
jne
in
xor
es
add
andb
nop
mov
dec
lcall
dec
xchg
sub
push
aas
ss
mov
loop
pop
pop
mov
insl
push
std
lea
jge
fidivs
int
inc
push
mov
ds
jne
lock
js
loop
xchg
fisttpl
lods
das
sub
pushf
and
lcall
xchg
loopne
pushf
fldt
adc
cmp
test
aaa
or
adc
fsubrl
fmuls
cld
sub
in
dec
cmp
pop
icebp
cmc
cld
xchg
rorl
das
sub
push
mov
into
imul
jp
das
gs
adc
mov
mov
push
int3
int3
sub
jae
push
ret
inc
rcrb
int
test
inc
or
sti
fisubl
pop
lcall
movsl
mov
lods
scas
ja
dec
adc
scas
pop
push
push
ret
mov
xor
sub
sahf
sti
jg
icebp
sbb
push
jno
dec
jp
iret
jnp
xchg
mov
lahf
sub
push
push
xchg
mov
mov
or
sti
push
arpl
arpl
push
or
add
push
and
push
xchg
mov
test
and
cmc
jns
cmp
push
iret
in
sahf
sub
test
aam
sbb
imul
pop
jmp
mov
cli
push
jl
pop
adc
add
out
pushf
xor
insb
xor
adc
in
in
fs
add
adc
dec
test
mov
adc
movsb
mov
add
setnp
fdivr
stos
rcll
jg
enter
mov
sub
imul
imul
or
add
popa
jg
rclb
shlb
adc
sub
dec
js
enter
sub
int
lahf
sahf
or
out
sub
add
in
inc
shr
sub
es
add
sub
ja
lcall
aaa
xor
cmp
lods
push
pop
cmp
jp
scas
xor
lcall
clc
adc
xchg
cmp
pushf
jne
sbb
jnp
mov
cltd
cmp
test
in
in
ja
stos
leave
or
sub
add
cmp
xor
ljmp
insb
adc
dec
shrb
or
in
mov
sbb
dec
pop
and
fcmovu
sbb
sbb
lea
in
and
cmp
xchg
or
subl
mov
mov
movsl
xchg
hlt
in
sarb
cmp
aam
sahf
add
subb
imul
movsb
mov
and
ds
cs
xchg
enter
and
in
fisubs
add
loop
icebp
aam
cld
rcrl
pusha
sar
cmp
mov
loope
sub
stos
mov
stc
out
jg
scas
or
pushf
cmp
sub
dec
in
sbb
stos
clc
scas
inc
xchg
dec
add
bound
loop
inc
aaa
cs
lcall
xchg
or
dec
mov
push
cli
pop
xor
and
mov
sahf
pop
push
stos
in
jecxz
mov
lods
or
jecxz
sub
sbb
mov
or
sub
xor
sbb
loop
test
mov
pop
shr
scas
push
jo
clc
cmp
in
ret
pop
bswap
loopne
lret
stos
mov
subl
or
cli
lret
push
and
lds
push
adc
lods
aaa
dec
add
and
hlt
pop
mov
xchg
pushf
leave
stos
sti
rcl
inc
sbb
sub
out
mov
das
outsl
adc
adc
jae
pushf
test
jg
push
mov
je
stc
xchg
sti
adc
cmp
mov
xchg
adc
sub
sbbl
sub
shl
and
inc
jno
das
fwait
loop
and
or
aam
in
aad
or
sbb
cwtl
push
push
adc
mov
cwtl
sub
dec
loop
in
add
test
repz
test
repnz
hlt
add
push
inc
aas
mov
mov
gs
das
lods
or
cs
aaa
lods
fiadds
dec
stos
sbb
xchg
mov
mov
in
sub
mov
push
mov
xor
mov
add
loop
repnz
inc
add
xor
push
mov
and
mov
jns
mov
xchg
push
in
stos
int3
ss
movsl
xor
xchg
mov
mov
pop
pushf
repz
mov
or
lods
popf
or
push
xlat
push
rolb
andb
icebp
or
mov
int3
inc
imulb
push
test
aaa
adc
mov
or
add
sub
ret
mov
push
and
scas
mov
out
loope
es
in
jecxz
aam
mov
aad
loop
sahf
mov
pushf
mov
loop
sahf
in
jbe
xchg
dec
pushf
xor
mov
xor
adc
dec
cmp
imul
scas
inc
std
fbstp
jbe
cmp
or
repnz
sub
stos
sbb
test
les
push
mov
sbb
sub
ljmp
push
xor
adc
pop
push
push
or
jbe
test
lret
aam
popa
xchg
xchg
cs
icebp
sub
insl
int3
push
clc
hlt
xlat
or
loop
cmc
int3
cli
adc
xchg
shlb
stc
xor
jo
or
sub
mov
dec
sub
sub
mov
xchg
push
sbbl
xchg
into
jmp
mov
mov
sub
cmp
iret
xchg
mov
mov
loop
add
ret
and
sub
or
cmp
dec
fidivrl
stos
iret
jnp
into
or
sbb
mov
ret
hlt
mov
cmp
or
xchg
mov
insb
or
imul
sahf
dec
cmp
out
in
mov
dec
fsubrl
jecxz
or
push
adc
icebp
push
ja
stos
or
iret
or
dec
sub
add
cli
sub
dec
test
pop
push
mov
pop
in
xchg
and
jnp
cmc
int
adc
adc
jecxz
movb
scas
sub
scas
es
and
and
or
lret
and
and
and
and
and
and
and
or
pop
rcrl
iret
fs
fbld
jb
out
fs
fs
or
incl
xchg
ret
push
out
ljmp
stos
insl
sbbl
mov
outsl
mov
enter
inc
mov
insb
push
adc
dec
and
xor
adc
adc
pop
xchg
xchg
cld
sbb
or
out
ret
ret
imul
ljmp
dec
or
cs
pop
test
adc
or
stos
jmp
or
cs
ret
shrb
mov
sub
or
mov
xchg
out
cli
repnz
mov
pushf
sub
sti
sub
stos
sbb
imul
xchg
adc
loop
xor
ljmp
mov
sub
ret
lcall
fadds
adc
cmp
test
dec
mov
das
fs
jnp
out
mov
fsubrl
cmpsl
dec
out
sbb
sbb
xorl
dec
add
mov
ret
lret
cmp
ljmp
cmp
repnz
mov
xchg
aad
test
mov
fldt
dec
xchg
lcall
mov
lods
inc
cs
mov
ja
mov
dec
sbbl
jno
sbb
inc
loope
repz
or
data16
mov
mov
pop
jl
inc
add
sbb
add
xchg
insl
push
ds
xor
rorl
mov
daa
das
or
jp
cwtl
adc
loop
or
sub
and
mov
or
cmp
sub
insl
sbb
and
cmp
xchg
or
fiaddl
jl
xchg
xchg
mov
push
pop
aaa
pop
xor
sbb
bound
mov
sarl
test
dec
xlat
loop
rorb
and
lods
mov
cltd
ret
pop
or
or
jp
bound
scas
scas
pop
and
mov
jmp
jnp
jns
xor
fucomi
icebp
lods
inc
dec
sahf
insb
add
cmpsb
xchg
icebp
scas
and
sbb
or
jno
sub
loope
das
mov
movsb
mov
jae
test
mov
lods
mov
pop
xor
mov
mov
in
xchg
and
sub
dec
shrl
repz
pop
jle
orb
inc
add
ret
mov
mov
test
add
push
mov
mov
push
in
insl
xchg
pop
pushf
cmc
mov
pushf
dec
adc
int3
cmp
in
xor
out
shl
outsb
nop
jecxz
and
mov
in
adc
jmp
aam
jne
dec
mov
test
aaa
inc
sahf
rcll
or
ret
out
filds
fldt
pop
scas
push
push
sbb
into
bound
xor
or
mov
jns
adc
adc
dec
pop
cmovb
mov
daa
jbe
test
aam
int
repz
iret
mov
cmp
out
mov
xor
pop
leave
faddl
out
xchg
xchg
cs
mov
mov
add
stos
add
pop
mov
lods
sbb
mov
xchg
test
nop
sub
shrb
or
xor
push
loope
push
xchg
enter
cmp
push
fwait
mov
or
dec
imul
pop
sbbl
pop
cmc
repnz
sub
pop
xor
mov
int
inc
imul
push
mov
jecxz
add
outsb
hlt
dec
test
test
in
sub
xchg
add
stos
in
ljmp
mov
call
mov
adc
push
inc
pop
push
push
ficoml
jg
add
add
pop
dec
fstpl
cmp
and
je
sbb
pop
xchg
cmp
inc
or
dec
ds
xchg
loop
inc
aad
into
xchg
jecxz
int3
inc
sti
lods
xchg
test
xchg
test
aad
push
popa
int3
pop
pushf
in
call
ss
cmp
nop
into
sbb
movsb
aam
sub
imul
in
mov
or
push
add
fldt
xchg
leave
out
out
cld
das
test
int3
xchg
jmp
xor
mov
enter
pop
or
adc
cmp
std
lcall
jecxz
pop
mov
jbe
ret
fimull
add
in
pop
mov
push
insb
out
hlt
das
add
pop
xor
js
mov
adc
dec
xor
adc
adc
adc
dec
rcll
pusha
outsl
setbe
loop
inc
pushf
in
rcr
jmp
sub
push
add
bnd
and
add
andl
idivb
sbb
loop
cmp
sbb
mov
out
xor
sub
das
or
and
mov
lahf
int3
add
rol
xor
add
sbb
or
leave
sub
sub
fisttpl
cld
pushf
lods
es
int3
outsl
lods
je
insl
sub
fidivs
xor
mov
aam
cltd
lods
xlat
or
xor
sub
jl
xchg
scas
scas
mov
push
sahf
dec
jle
punpcklwd
xor
sub
dec
mov
ljmp
in
data16
mov
sbb
xchg
cmp
in
push
mov
push
dec
adcl
mov
sub
loop
mov
aam
jae
movsl
movsl
add
mov
movsb
mov
test
loop
arpl
clc
insl
loop
adc
xor
sub
mov
add
ficoms
or
sbb
push
dec
add
push
pop
adc
hlt
shr
cmpsb
loop
insb
jno
add
inc
adc
int3
xor
out
leave
cmp
dec
lahf
int3
sbb
shll
cwtl
jl
jne
sarb
cmovle
ljmp
sub
fcoml
movsb
in
or
scas
in
mov
int
cmp
sub
lods
cmovle
mov
push
loop
and
sbb
mov
push
sbb
adc
adc
add
sub
pop
loop
or
loope
mov
into
out
fidivs
xor
movsl
hlt
lods
add
and
cmp
pop
adc
mov
sarl
and
jle
push
sub
insb
nop
aaa
mov
add
nop
inc
leave
scas
lfs
add
leave
ljmp
sbb
push
mov
js
dec
ret
mov
out
mov
stos
ret
mov
mov
test
aam
aad
pushf
out
fstpt
mov
testl
insb
sub
jg
stos
adc
int3
test
gs
inc
pop
dec
mov
mov
jl
or
cwtl
jecxz
insl
clc
imul
pop
sub
push
out
dec
mov
repz
cmp
in
stos
insb
mov
mov
mov
imul
fidivl
dec
push
fldcw
scas
adc
mov
inc
jne
fldt
add
stos
cli
pop
dec
adc
in
adc
dec
ss
ret
subb
imul
sub
sub
add
dec
cmc
cli
adc
jmp
sub
lods
aas
loop
mov
into
mov
ret
lods
vdivps
dec
cmp
lcall
mov
mov
pop
faddl
fs
and
fimull
std
cmc
xor
stos
push
push
jg
movsb
xor
outsb
cmpsl
xchg
fnsave
fstpt
fdivl
rorl
getsec
adc
mov
lea
in
or
dec
shrb
adc
jo
fsubs
push
sbb
das
pop
sbb
mov
pop
push
and
pop
das
sbb
push
mov
cmp
xchg
mov
xor
mov
sub
lods
jmp
out
test
push
in
pop
pop
loop
lea
je
leave
leave
jmp
pop
mov
or
xorb
shrb
lea
or
pop
lods
push
sbb
ljmp
jmp
sub
fcoms
ret
mov
pop
xchg
sahf
lods
sub
push
loopne
xchg
andl
dec
arpl
push
imul
mov
inc
pop
jp
dec
repnz
add
rolb
loop
popf
sti
divl
cmpsb
stos
sbbb
sar
and
jae
shrl
sub
movsl
outsl
int3
imul
sarl
jb
nop
push
cld
iret
mov
lret
mov
sub
je
cmpsl
loop
and
or
shlb
shr
or
jne
inc
dec
add
shr
out
mov
int3
ret
xorb
jne
jle
mov
sti
sahf
mov
test
dec
mov
scas
mov
mov
mov
xchg
dec
sbb
inc
pop
rorb
pop
les
cmp
int
sub
mov
in
aas
outsl
mov
addr16
aaa
push
pop
xchg
aam
dec
pop
dec
inc
xchg
loop
int3
mov
mov
add
pop
push
gs
fdivr
ret
dec
mov
add
jle
add
subl
ret
dec
jns
dec
leave
jo
daa
loop
fcmovu
mov
cli
mov
dec
fwait
pop
loop
outsl
dec
das
movsb
sbb
mov
mov
mov
insl
mov
push
sahf
or
sub
insl
push
sahf
dec
lret
out
loop
shlb
dec
in
dec
ljmp
xor
sub
mov
sub
ds
ret
xchg
ds
or
push
jmp
cmpsb
adc
ret
jecxz
pop
loop
add
mov
mov
cwtl
xor
into
inc
xorb
sbb
int3
ret
ret
gs
push
imul
jecxz
cli
cmp
sub
sbb
subb
loopne
or
mov
mov
std
xor
or
cmp
and
xor
jge
push
mov
or
leave
pop
or
lcall
scas
call
fiaddl
push
mov
pop
imul
cmp
scas
jmp
iret
mov
inc
scas
push
dec
mov
mov
leave
xor
add
js
or
pop
add
ds
pop
sbb
mov
out
scas
or
sbb
fwait
inc
jbe
dec
pop
jbe
mov
cmp
leave
jg
test
lods
test
pop
das
jo
mov
ret
shrb
loop
xor
pop
imul
adc
mov
xchg
jmp
sbb
jnp
or
jmp
lods
sahf
fst
gs
fdivr
mov
pop
jne
and
mov
cmpsb
or
add
xchg
loop
scas
call
and
pop
mov
mov
gs
or
outsb
lret
inc
fnsave
jno
leave
jnp
out
jbe
xor
jo
lods
fsubl
mov
insl
or
dec
cmp
movsl
or
push
mov
fsts
dec
sarl
xor
lret
jge
lods
call
cmpsb
or
popf
mov
lods
cmp
cltd
pop
mov
out
adc
fadd
mov
out
fstps
sub
out
sub
stos
xlat
cmp
push
pusha
imul
dec
push
pop
xchg
lds
dec
mov
pushf
mov
test
fisttpll
mov
daa
mov
out
and
inc
cmp
ret
in
out
jae
daa
rcrb
cmp
xchg
and
test
dec
inc
sub
mov
lcall
ret
jecxz
add
pop
loop
in
pop
push
fistpl
dec
inc
test
jnp
sub
xchg
adc
jp
movsb
jne
adc
cmpsl
pop
das
mov
ret
cmp
sahf
add
call
lods
and
ret
jmp
push
mov
xor
or
xor
xchg
sbb
inc
enter
mov
adc
jns
stos
shll
sbb
jno
movlps
sahf
pop
fimull
cmp
pushf
push
jnp
sbb
dec
adc
mov
adc
dec
pop
adc
ss
lods
mov
jb
or
sub
adc
imul
adc
mov
lods
in
repz
mov
push
xor
add
push
inc
or
jp
scas
sahf
imul
fwait
in
or
fucompp
inc
fidivl
or
in
pop
xchg
int3
xchg
gs
aam
inc
jmp
inc
jo
push
jmp
xorb
jge
gs
jmp
pushf
adc
sub
shrl
push
push
out
out
stos
cmpsb
jmp
iret
inc
ja
cmp
mov
mov
push
push
clc
aas
lods
rcrb
out
test
lods
xor
adc
push
lods
pop
or
in
in
insb
pop
or
loope
inc
inc
shlb
sub
push
inc
push
sub
jmp
pusha
sahf
pop
pop
jbe
xor
and
xlat
fldt
mov
xchg
out
mov
or
popa
mov
sub
out
hlt
pop
cmpsb
mov
iret
cmp
scas
xlat
push
jg
xlat
or
sub
testl
mov
pop
mov
and
in
add
push
sbb
stos
ficoms
test
or
sbb
es
lret
hlt
inc
ljmp
jb
mov
iret
inc
mov
fsin
outsb
add
xchg
jne
enter
test
pusha
mov
lods
test
lods
jns
out
pop
mov
outsb
sbb
mov
xor
pop
fisubs
sub
push
and
scas
jmp
je
mov
sbb
insl
or
mov
jae
out
loop
insl
xchg
pop
rorl
sahf
lret
ret
pop
inc
sub
mov
fwait
bound
das
or
sti
leave
jp
xchg
pop
mov
divb
lods
jmp
arpl
mov
push
inc
lods
xchg
and
fstpt
adc
insb
inc
jne,pn
leave
pop
mov
jnp
bound
cmp
sub
inc
rcr
ret
lods
ret
mov
sti
jmp
adc
add
xor
int3
mov
shl
pop
jge
pop
and
jbe
cli
or
filds
sub
stos
sub
and
bound
lcall
xchg
sbb
cmp
sbb
pop
pop
stos
or
pusha
push
jne
adc
add
sbb
adc
jg
pop
inc
dec
stos
ret
add
xor
mov
xchg
ljmp
inc
fildl
sbb
ss
roll
test
pop
je
rcr
movntps
ljmp
ljmp
outsb
xorb
mov
push
fsts
inc
rorl
stos
sub
dec
test
adc
jae
ja
push
movsb
stos
ds
or
into
fwait
lods
xchg
andb
xchg
imul
cltd
ljmp
add
insb
outsb
sbb
mov
test
cmp
dec
sub
jge
dec
pop
or
inc
cli
lods
jecxz
lcall
in
in
adc
inc
pop
lods
lret
stos
out
rol
cmp
sarb
leave
dec
lds
mov
js
es
rcl
fisubl
jge
jle
add
shll
cwtl
in
xchg
call
int3
shll
in
jne
push
mov
std
mov
fisttps
call
std
sub
sub
jge
add
mov
inc
fiaddl
or
lret
adc
jp
adc
mov
popf
jmp
inc
mov
imul
lods
jae
cmpsb
out
push
test
mov
mov
mov
sbb
cli
mov
insb
sbb
or
nop
shlb
int3
loope
fcom
in
mov
out
cwtl
push
dec
pop
push
xchg
loop
mov
mov
cld
push
xor
mov
sbb
mov
push
dec
jecxz
inc
stos
push
ljmp
push
cmp
jge
jge
lods
imul
add
notb
xchg
sbb
scas
jl
out
nop
mov
push
and
outsb
add
fsubrp
fstpl
out
mov
jge
ret
scas
insb
cmpsl
out
inc
leave
insb
lret
sbb
mov
mov
mov
pop
jmp
jecxz
mov
mov
inc
add
adc
push
popa
fsubr
xchg
pop
or
scas
jae
xchg
jge
andb
push
or
inc
aaa
imul
xor
inc
mov
sbb
movsl
aad
mov
pop
stos
and
inc
pop
jnp
fdivs
dec
adc
scas
or
mov
xchg
clc
adcb
xchg
mov
rclb
movsl
sub
xor
adc
mov
jo
dec
pop
push
arpl
cli
push
fnstsw
sbb
adc
pop
dec
movsl
mov
int3
outsl
inc
adc
add
out
cmp
outsb
push
sahf
jp
fildll
cmp
nop
and
xchg
mov
mov
clc
or
lea
dec
pop
jge
decb
inc
or
pop
cmp
fimull
arpl
cmpsb
inc
and
scas
sti
jmp
sarb
aaa
mov
lcall
out
aas
sbb
ret
adc
mov
and
push
movsl
xor
jecxz
add
int3
mov
adc
sbb
add
inc
mov
sbb
sbb
enter
pop
daa
mov
sbb
or
jmp
jl
mov
in
jmp
leave
stos
sbb
jp
or
xchg
jno
mov
mov
mov
movsb
xor
add
insl
pop
data16
dec
adc
push
jp
pusha
mov
push
cld
dec
dec
or
mov
bound
clc
cli
sti
daa
add
mov
sub
fisubl
movsb
int
sti
fldenv
jecxz
ret
sahf
ss
mov
jle
outsb
or
mov
in
insb
fstl
or
roll
mov
std
sbb
push
fcoms
aas
push
iret
scas
push
dec
adc
mov
xchg
xor
sbb
adc
dec
xor
adc
lret
out
mov
pop
mov
jl
add
in
or
mov
mov
call
pop
addl
ffreep
enter
sub
inc
ljmp
pop
rclb
loop
shrl
pop
repz
adcl
bound
mov
xchg
es
or
rorl
jmp
insb
or
pop
inc
stos
add
int3
or
mov
push
out
popf
shr
shrl
adc
gs
stc
lock
inc
sub
mov
or
iret
addr16
pop
faddp
xor
fnstenv
cltd
pop
gs
or
fstpl
cmp
cmp
and
sti
out
pop
arpl
add
adc
arpl
aaa
enter
dec
jno
cmp
xor
insl
jmp
movsb
sbb
mov
push
pop
pop
xchg
fistl
repnz
aam
je
ljmp
add
inc
out
mov
xor
mov
cmp
stc
pop
or
imul
sbb
pop
cmp
and
xor
or
push
push
movsl
add
dec
mov
scas
cmc
out
or
scas
call
push
or
in
mov
or
dec
rolb
jmp
imul
ljmp
je
inc
jp
jbe
or
les
bound
xor
out
and
nop
inc
aam
jg
lcall
movsb
mov
int
pop
out
call
push
sub
out
stc
and
stos
adc
push
cmp
pop
lods
jmp
pop
push
mov
notl
pop
dec
jbe
or
pop
sbb
jnp
mov
add
scas
fcompl
dec
movsb
ret
mov
popf
mov
xchg
sub
stc
outsl
lahf
out
pop
mov
add
inc
sbb
in
or
inc
push
xchg
mov
test
cmpsb
inc
call
iret
ljmp
mov
xor
in
arpl
std
lods
push
push
pop
loop
adc
out
test
push
inc
lret
lret
mov
js
sub
scas
roll
pop
popf
sbb
mov
pushf
mov
sub
mov
mov
push
pop
movsb
out
lods
adc
or
inc
sub
clc
jmp
add
push
testb
xchg
sbbb
sub
or
gs
dec
pushf
jb
push
in
sub
loope
in
enter
mov
imul
and
mov
pop
mov
dec
sbb
mov
add
cld
inc
insb
imul
add
add
dec
xor
jp
outsl
mov
pop
fisubs
insb
lock
test
in
and
mov
sub
dec
xchg
rcrb
cmc
mul
adcb
cwtl
push
dec
rclb
mov
sub
sbb
jne
jmp
adcb
jmp
adc
out
insl
sbb
in
sub
xchg
aad
out
imul
mov
add
divb
sub
mov
ss
mov
add
mov
sbb
push
jge
or
in
fsubl
mov
lea
push
and
aaa
mov
ficoml
in
push
jp
inc
adc
sti
push
xchg
push
mov
in
dec
add
cmc
sbb
push
fcmovne
sub
inc
jmp
movb
xchg
inc
mov
mov
xchg
sbb
pop
arpl
pushf
push
addr16
xchg
xor
mov
sub
pop
sbb
popa
gs
adc
xchg
gs
pop
jmp
push
paddsb
pop
cld
sub
mov
pop
cmpl
dec
or
sbb
pop
sub
sub
int3
cld
cmp
test
mov
and
sbb
aas
jno
inc
cwtl
sbb
adc
stos
mov
mov
add
fstl
test
addb
sub
jp
cmp
outsb
push
sub
call
movsb
ja,pn
push
add
addr16
push
jmp
push
lods
lahf
lret
sbb
test
dec
push
scas
sbb
into
mov
sub
mov
sub
les
shrb
mul
fwait
xchg
pop
int
or
and
andb
push
jbe
or
sub
in
in
cld
jp
push
jmp
and
cltd
xchg
xchg
add
repnz
ljmp
in
rorb
ljmp
mov
jnp
sub
push
int3
sbb
andl
test
leave
pop
sub
loop
or
jg
xor
sti
mov
scas
ret
aam
mov
mov
push
xor
out
loope
xor
or
sub
mov
cmp
push
lahf
add
sti
cmp
lods
loop
insl
ret
test
fdivs
out
jmp
jle
mov
push
pop
sub
mov
add
pop
into
adc
sbb
push
add
out
jle
mov
ret
sbb
adc
insb
push
cmp
outsb
adc
xlat
jmp
cld
mov
xchg
mov
xor
mov
ret
mov
xor
repz
dec
lods
ja
inc
add
cmpl
hlt
mov
jne
fwait
lods
outsb
inc
mov
mov
jnp
mov
push
aad
out
or
lods
fcomip
jg
jo
xor
mov
data16
gs
movsb
subl
dec
add
sub
ror
add
bound
mov
lock
jno
add
lea
jecxz
pop
push
add
loop
in
xor
xor
mov
cltd
in
loop
mov
xchg
sbb
sbb
xchg
cmp
stos
in
mov
cwtl
or
sbb
jl
pop
push
in
shll
movsl
jns
cmp
mov
icebp
cmp
inc
jle
add
sub
xor
pop
cld
lret
xchg
jmp
adcb
push
xchg
mov
xchg
ret
mov
jp
jnp
out
or
stos
sbbl
imul
es
sub
mov
mov
mov
test
mov
inc
bound
pop
jmp
insb
fisttpl
dec
insb
push
rcl
adc
call
sahf
add
into
shlb
or
scas
shrb
outsl
push
scas
ret
xchg
es
cmp
call
jmp
shrb
or
mov
mov
or
sbb
add
jl
clc
movsl
or
pop
or
leave
mov
push
pusha
sbb
jp
adc
in
ss
lds
prefetchnta
pop
push
inc
mov
or
testb
pop
push
lods
movsl
pop
xchg
adcl
sahf
adc
inc
xchg
push
int
inc
jae
lods
stos
aaa
clc
xlat
xor
xor
cmp
lea
push
xchg
mov
out
push
sbb
bound
push
call
mov
mov
lods
mov
jmp
push
xchg
sti
mov
sbb
add
and
or
jae
add
stos
xor
adc
mov
jle
xchg
xlat
pop
sbb
test
pop
jg
mov
shr
scas
es
inc
mov
stc
rcrb
xor
arpl
fistpl
xchg
push
sbb
jp
imul
pop
pop
cmp
add
lret
xchg
xchg
jle
test
jmp
pop
xchg
sub
adc
stos
repz
xor
std
add
in
mov
loope
outsb
cli
cmpxchg
jp
mov
jecxz
inc
pop
stos
mov
pop
sub
jmp
mov
into
adc
xor
loop
xchg
jmp
subb
ret
cmpsl
xchg
shlb
mov
xor
sub
xchg
sub
dec
pop
dec
sahf
gs
inc
push
dec
mov
or
or
fdivrl
mov
or
or
outsl
enter
cmpsl
pop
idivl
stos
out
dec
mov
aaa
push
scas
jae
fxsave
scas
or
cmp
out
sub
insb
sbb
adc
movsb
push
or
dec
mov
mov
or
mov
sbb
add
add
sahf
dec
add
aaa
jb
scas
addr16
mov
sbbb
xor
shll
std
xor
fstps
pushf
push
inc
adc
repz
fisubrs
pop
ja
xchg
inc
cli
dec
cmpsb
mov
mov
stos
cmpl
jp
int
and
mov
insb
les
out
mov
mov
out
or
idivl
int3
or
sub
push
mov
pop
jb
pop
jmp
adc
sbbl
fiaddl
push
mov
sub
cli
sbb
adc
mov
fists
xchg
lret
sub
dec
pop
or
mov
dec
jo
mov
sbb
dec
sub
in
aaa
adc
and
enter
stc
xor
add
jp
fidivl
aaa
lret
mov
xorb
xchg
mov
sbb
mov
mov
xor
mov
stos
stos
or
jge
ljmp
ds
rorl
push
pop
in
out
cmovae
insb
shll
dec
repz
xor
jge
in
sbb
insb
jmp
fbstp
cs
push
xlat
rol
cmp
xchg
mov
pop
dec
cmc
jge
or
out
jmp
stc
fisubs
xor
sub
movsb
sub
push
in
scas
or
inc
sub
cli
cmpsb
inc
mov
test
xor
mov
xchg
int
data16
sbb
mov
jge
in
mulps
sub
mov
push
pop
pop
addb
leave
cmp
shufps
mov
add
push
cmp
leave
adc
addb
mov
xchg
mov
cmpsl
jns
aam
enter
cmp
or
and
js
sub
ret
stc
ret
and
xor
cs
in
cmp
jg
or
push
fidivrs
xchg
cmp
sti
jl
jns
sbb
jo
dec
cmpsb
jp
sahf
mov
pop
test
pop
nop
fbld
out
xchg
add
pop
push
data16
enter
mov
popf
jne
pop
sbb
addl
jp
dec
movl
or
ljmp
aaa
sbb
cli
data16
and
repz
mov
pop
loop
cmpsb
xchg
jp
mov
orl
insl
lcall
xchg
repz
loop
push
dec
cmp
or
inc
xor
xlat
cmp
push
jb
add
in
movsl
rol
gs
popf
push
sub
jbe
jae
mov
enter
iret
sub
out
pop
fdiv
or
mov
popf
xchg
mov
pusha
pop
jecxz
and
test
mov
lea
xchg
daa
ss
push
mov
xor
sub
ret
pop
jp
aad
sahf
repz
cmp
sub
nop
jne
sub
cmp
inc
lret
data16
mov
sbb
aas
ss
test
cwtl
lahf
imul
sbbb
and
outsl
cs
lret
cltd
jo
cmp
testl
push
mov
dec
adc
jl
testb
pop
es
les
xor
scas
das
outsl
clc
mov
pop
xchg
outsb
pop
dec
stc
cwtl
pushf
xchg
pop
inc
stos
or
gs
scas
add
stos
shrl
jmp
mov
loop
and
int
jmp
dec
je
pushf
in
or
fmuls
pop
pushf
sub
in
jb
mov
loop
loope
mov
sti
push
ja
mov
fisubs
mov
dec
jmp
jae
mov
subl
stos
clc
in
outsb
push
lahf
int
push
test
daa
inc
movsl
inc
push
aas
in
and
loopne
add
and
xchg
pop
adc
and
cli
cld
pop
je
mov
fistpll
jmp
push
popf
ja
inc
outsb
aaa
push
das
in
jp
sbb
call
lea
sbb
fstps
cli
push
xchg
rcrb
sbb
mov
test
jp
ds
sbb
sub
sbb
adc
jne
or
ja
in
sub
mov
sbb
push
in
in
iret
daa
sti
jbe
insb
and
cmp
lcall
or
mov
arpl
xchg
jnp
je
arpl
pop
push
inc
cmp
std
inc
fwait
cmp
pop
mov
adc
jmp
adc
adc
xchg
loopne
imul
in
aad
add
aas
add
jmp
notl
push
push
mov
shrl
sub
push
stos
dec
mov
push
nop
outsb
loop
lcall
loop
loopne
data16
or
mov
outsl
fwait
inc
push
mov
inc
shrl
xchg
in
sub
pop
cmp
pop
and
movsb
ds
ljmp
dec
loop
xchg
ss
inc
ds
push
adc
sbb
push
push
test
mov
movsl
fs
sbb
sub
out
scas
mov
sub
inc
cmp
ljmp
cli
mov
jae
mov
dec
imul
insl
std
test
loop
in
arpl
adc
into
lods
rclb
lret
jle
ret
mov
fwait
shrb
rcl
ret
add
xchg
xor
insb
test
dec
scas
add
mov
negb
add
adc
in
mov
lea
push
scas
pop
sub
lods
mov
jecxz
out
daa
dec
into
lods
arpl
mov
cmpsb
mov
out
mov
xor
and
mov
jge
iret
mov
jmp
pop
out
or
cmp
xchg
jbe
sub
jns
sti
jge
ljmp
popf
xchg
adc
test
lret
inc
dec
cwtl
dec
lods
into
mov
jo
xchg
in
lret
jmp
lret
mov
subl
ret
mov
test
sbbb
pop
xchg
jmp
mov
cmp
lret
ret
or
pushf
insb
inc
or
test
sub
out
sbb
adc
xchg
loop
lds
add
add
and
sbb
stos
cmp
ljmp
std
inc
or
pop
pop
mov
cmp
or
cmc
adc
rcr
jmp
scas
sbb
mov
sbb
scas
pop
pop
loop
jmp
sbb
dec
xchg
xor
mov
aaa
std
adc
sub
call
sbb
xchg
jmp
into
adc
push
mov
imul
ljmp
adc
jmp
shll
sbb
xor
jmp
mov
das
cmpsb
into
lahf
mov
in
pop
in
stos
adc
add
rcr
inc
out
sbb
ss
mov
je
lock
lcall
add
out
add
stos
push
sbb
mov
nop
dec
inc
mov
scas
push
jmp
popf
stos
jl
clc
sub
lea
sbb
mov
ds
or
call
imul
push
pop
push
loop
jecxz
cli
mov
push
dec
mov
in
into
xchg
sbb
fsubs
fdivrs
les
lret
bound
repz
cmpsb
push
out
lods
mov
mov
add
mov
fcmovbe
or
sbb
or
inc
test
div
into
push
lret
or
push
dec
scas
addr16
hlt
lock
pop
scas
test
sub
push
sbb
xchg
cli
rorb
lock
sbb
popa
adc
push
jb
pop
cmpsl
iret
pop
bound
xchg
push
leave
push
dec
rcrl
es
add
jg
add
loopne
xchg
xchg
cmp
mov
fsubrs
movsb
pushf
or
lea
sub
and
in
dec
cs
and
popf
or
lcall
scas
push
sti
sub
inc
push
push
jg
or
cltd
fisubl
pusha
sti
dec
pop
into
mov
mov
cltd
mov
lods
repz
pop
dec
lahf
inc
mov
dec
jge
pusha
sbb
mov
lds
jecxz
insb
sub
repz
dec
ret
mov
mov
dec
xchg
mov
push
fwait
mov
imul
or
push
sub
popf
jne
ud2
jb
into
inc
lcall
rol
mov
sub
sahf
lods
ret
aaa
and
out
mov
cmpsl
je
stc
jge
jne
ret
mov
add
push
cld
cmp
jae
leave
out
adc
xor
loop
sbb
jmp
push
and
shrl
mov
sbb
jmp
pushf
add
xlat
xor
xchg
subb
loop
mov
add
sbb
push
cmp
mov
xchg
imul
aad
js,pn
iret
cmc
mov
mov
sbb
sbb
sti
and
test
ljmp
shrl
xor
repnz
jl
xchg
or
adc
adc
mov
xchg
pop
dec
nop
orl
mov
scas
sarb
xor
cli
ja
in
mov
stos
sub
inc
cmp
push
cwtl
mov
or
xchg
mov
and
sub
sbb
cmovp
fisttpll
stos
jae
ret
or
and
sub
ficoms
pop
ljmp
jecxz
or
mov
imul
push
into
imul
int3
ljmp
cli
xor
or
xor
shr
xchg
xor
add
cltd
imul
xchg
jle
mov
xchg
movsl
jmp
fldcw
mov
addr16
adc
inc
and
push
data16
in
in
mov
lret
call
pop
shrl
adc
pop
push
push
out
out
idivb
or
ljmp
ret
jg
mov
js
or
call
add
sub
push
cmc
adc
or
ds
inc
jae
je
shl
push
xor
cli
cli
push
hlt
sub
mov
pop
lret
dec
push
pop
out
jecxz
jbe
ret
adc
jecxz
lret
fsubrs
lret
ljmp
int
mov
add
lret
add
ljmp
loopne
out
ret
pusha
insl
cmp
push
inc
es
aad
test
or
jmp
push
pop
hlt
inc
mov
nop
sub
and
sbb
pop
sub
pop
fisttpll
arpl
push
mov
mov
or
xchg
or
xchg
cmp
mov
ljmp
sub
out
shlb
outsl
ret
and
xor
in
fs
and
into
adc
adc
xchg
xorb
ret
push
mov
cmp
sbb
xchg
jecxz
pop
jae
sbb
mov
pop
xor
repz
inc
sbb
out
adc
mov
int
fdivl
or
push
xor
pushf
jmp
pop
fidivrs
cmpsl
ja
jae
ja
inc
jno,pn
fstpl
xchg
hlt
push
fcmovnbe
lcall
or
sbb
sub
push
out
mov
push
jnp
mov
mov
stc
jb
lock
lea
dec
dec
sbb
orb
jae
mov
dec
cmp
shlb
out
mov
add
push
enter
push
mov
jecxz
pop
insl
cmc
cmp
fwait
mov
dec
xchg
repz
cmpsl
lret
mov
loop
lss
ljmp
jne
cmp
inc
cwtl
pop
xchg
int3
inc
rcrb
xchg
mov
add
rorb
fstpl
push
lahf
subb
mov
sti
rol
repz
test
sbb
inc
xchg
bound
xor
cmp
sbb
popw
pop
outsb
lea
lods
mov
and
mov
jecxz
adc
pop
pushf
mov
sub
adc
and
addb
lea
jge
in
pop
movsb
stos
add
adc
jl
push
movl
cmpsb
std
jmp
mov
adcl
dec
mov
adc
and
popa
and
or
enter
mov
sub
rorl
inc
mov
out
cwtl
adc
test
fidivrl
mov
in
lcall
lods
cli
mov
add
sbb
jecxz
inc
lds
mov
outsb
aad
ret
subl
inc
adc
in
jecxz
cwtl
ljmp
nop
fistpl
xor
push
cmp
imul
lods
sub
adcb
pusha
arpl
mov
mov
push
lods
jno
test
pop
sbb
push
fld
push
adc
mov
int
aad
jecxz
addl
jae
push
add
ss
xchg
cmp
inc
jle
das
lcall
cli
xor
push
push
and
or
movsb
mov
mov
adc
stc
testl
jmp
xchg
fldcw
cmp
or
xchg
cltd
or
mov
jb
mov
faddl
mov
out
ljmp
mov
and
popa
push
into
aam
or
xchg
dec
je
sbb
iret
xchg
or
add
adc
xchg
xorl
addr16
adc
test
test
subb
fadds
dec
mov
stos
sbb
mov
cltd
lcall
pop
pusha
add
jo
jbe
cwtl
rcl
mov
mov
int3
ljmp
nop
xchg
pop
lahf
pop
cmp
push
dec
xor
jnp
insl
adc
jb
int
movsb
out
sarl
stos
adc
inc
xor
mov
xorb
in
sbb
mov
pop
jmp
or
lea
inc
in
sub
mov
push
cs
inc
cli
ds
dec
xor
lods
lds
sti
mov
and
jb
push
aaa
xor
pusha
sarl
shll
mov
adc
ds
cmp
jmp
mov
xchg
lcall
adc
and
ficompl
cmp
dec
jnp
mov
std
pop
or
das
loop
rcrl
push
mov
xor
and
insb
jecxz
or
stos
insb
lret
cmpsl
mov
inc
and
adc
push
inc
add
mov
mov
lock
idivl
out
adc
popf
pop
push
cmp
loop
les
push
dec
push
and
sbbb
xlat
loop
fdivl
inc
sbb
push
push
sub
sbb
adc
sti
jno
into
pop
lret
aaa
pop
cmpsl
dec
imul
mov
test
mov
das
mov
sbb
push
movsl
adcb
iret
dec
ss
pushf
inc
repnz
fsubl
dec
cmpsb
jg
fucomip
inc
jnp
jb
dec
adc
ret
stos
inc
cmpsb
in
or
sbb
push
cs
add
dec
imul
mov
dec
rcll
sub
cmp
into
clc
inc
inc
ljmp
or
out
mov
jecxz
lods
mov
dec
incl
bound
push
mov
push
lods
fists
pop
in
jno
mov
or
mov
pop
jg
cmpsl
cmp
fsubp
pop
xchg
mov
js,pn
xchg
mov
push
and
push
rolb
adc
lretw
xchg
jo
pop
push
adc
movsl
pop
out
enter
or
jmp
sbb
or
push
insl
test
pop
aaa
daa
sbb
xorl
dec
fstpl
stc
sub
mov
lret
cmpb
mov
cld
add
add
lds
mov
lods
sbb
into
mov
mov
fs
pop
inc
sub
fidivs
fs
test
jbe
stc
test
out
in
int
loop
xchg
mov
rcl
jl
in
push
loop
push
pop
cmp
data16
mov
sbb
lret
insl
xchg
jo
push
aam
inc
sbb
loop
out
ja
mov
pushf
jae
notb
cmpl
pop
lcall
push
pop
mov
pop
push
jecxz
mov
jne
data16
dec
xor
jle
fs
push
pop
lret
mov
cli
sub
je
loope
jmp
lock
nopl
dec
popaw
push
test
fsubp
jae
mov
dec
out
add
pop
xor
pop
pop
nop
xlat
xor
jmp
dec
cmc
loop
negl
scas
pop
out
hlt
scas
mov
mov
or
jnp
push
out
mov
faddp
or
cmp
xchg
cwtl
mov
ljmp
dec
stos
pop
push
testb
add
xlat
xchg
lret
shl
dec
jnp
cmpsl
stos
out
fmuls
sub
jge
outsl
in
loop
xchg
orb
jmp
data16
in
or
scas
cs
imull
test
add
inc
scas
mov
loop
orb
xchg
xor
adc
mov
lea
mov
ret
aam
cmpsb
scas
jmp
ljmp
mov
xchg
push
sbb
ret
mov
pop
daa
push
stos
inc
call
fwait
imul
mov
loope
push
popf
test
dec
scas
lret
rcl
cld
loopw
push
adc
movsb
cmpb
mov
add
ljmp
cmp
ss
out
jecxz
sub
pop
test
cltd
lea
add
sarl
clc
cmc
or
push
nop
adc
repz
sbb
ret
lock
ret
xchg
scas
roll
cs
and
inc
rcrl
dec
push
cmp
sbb
popf
push
int3
xchg
in
adc
test
into
fcmovnb
xchg
xchg
jmp
outsl
push
lods
imul
in
call
fmulp
jle
sar
jae
in
mov
lea
insl
mov
cwtl
jne
dec
ss
add
jp
xor
mov
int
jae
inc
js
inc
push
sub
mov
mov
shll
mov
inc
inc
add
shr
xchg
push
mov
shrl
cltd
pop
and
cmpl
ret
arpl
dec
xchg
imul
or
or
cmp
or
mov
push
cmpps
or
xchg
or
ret
fsubrl
aaa
insl
xchg
scas
stc
or
scas
fildll
sahf
aaa
adcb
jbe
xchg
or
mov
xchg
dec
mov
popa
shlb
orb
pushf
out
jecxz
cld
xor
adc
adc
xchg
movsb
scas
sbb
push
gs
mov
sub
xor
push
pop
popf
pusha
push
xor
push
std
ret
scas
repnz
jmp
movsb
out
xchg
xlat
cs
adc
mov
scas
and
sbb
ds
push
xchg
jo
repnz
push
fsubs
mov
subb
cmp
jecxz
jo
jecxz
jmp
scas
push
adc
cmp
enter
test
icebp
dec
fs
sub
push
out
jmp
mov
xor
jne
popf
adc
sahf
jnp
inc
xchg
jl
stos
nop
sub
iret
daa
dec
fnstenv
xor
movsb
inc
mov
pop
cmpsb
dec
jb
inc
outsl
addl
ja
lret
loop
or
dec
lea
sub
call
xchg
xchg
movsl
dec
pop
xor
adc
les
pusha
fiaddl
rclb
dec
jmp
sub
insb
mov
jle
or
add
xchg
xchg
arpl
or
xchg
jmp
jbe
fiaddl
jmp
sub
fisttpll
insb
xchg
mov
xchg
aaa
push
lods
jecxz
or
pop
les
ficomps
mov
lea
xchg
sahf
and
xlat
cmp
ds
sbb
call
ja
sahf
out
mov
dec
and
mov
push
add
push
popa
fwait
cli
or
leave
movsl
mov
mov
xchg
xor
inc
out
in
imul
push
outsb
xor
sub
push
stos
stos
in
sbb
push
cmpsl
push
int3
xor
mov
out
or
bound
in
xor
fmul
outsl
mov
xor
cmp
addl
mov
divb
mov
pop
sub
gs
push
cmp
pop
sub
cmpsb
shl
ljmp
xchg
adc
shrb
mov
xchg
sbb
ret
mov
and
add
push
and
dec
imul
xlat
leave
in
icebp
adc
jle
dec
scas
sbb
ljmp
outsb
lret
ret
jo
jb
mov
inc
adcl
mov
jno
imul
loope
dec
mov
mov
dec
mov
dec
nop
mov
mov
out
sbb
pop
ret
cmp
stos
add
mov
sub
pop
sub
sti
out
and
xor
adc
mov
loop
pusha
mov
ljmp
rcll
imul
xchg
rclb
mov
cmp
call
inc
push
mov
mov
outsl
jmp
adc
lock
dec
movsb
sbb
mov
leave
ret
ljmp
ds
mov
popf
lret
add
or
push
jmp
sub
fdivrs
jp
in
imul
or
cs
sub
cmpsl
xchg
sbb
loop
xor
inc
lods
jg
sbb
or
daa
popf
mov
xor
mov
test
push
cmp
shl
dec
inc
jmp
mov
dec
push
push
fnstcw
mov
loop
jmp
xor
xor
hlt
xchg
dec
cmp
popa
xor
dec
lcall
insl
mov
and
call
mov
adc
mov
adc
out
push
dec
sahf
pop
mov
adc
out
mov
jo
fmull
or
xchg
pop
movsb
jle
lods
inc
scas
pushf
or
int3
jne
loop
std
sahf
xchg
jmp
add
pop
push
jmp
cmp
mov
out
cmp
mov
andb
notl
jbe
sub
rdpmc
int
fwait
pop
mov
mov
or
imul
ljmp
fildll
mov
inc
jbe
dec
sarb
jmp
rcrb
fidivs
mov
mov
lcall
shlb
loopne
or
filds
fcom
push
or
add
fldt
js
popa
sti
xchg
jmp
sub
jno
push
fisubl
fistl
addr16
adc
hlt
or
mov
mov
pop
jp
fldcw
xchg
add
pop
sub
rcll
dec
movsbl
shll
jg
mov
xor
lods
lods
push
scas
mov
stos
xchg
lods
jmp
shll
ljmp
arpl
push
sti
rorl
jb
sbb
adc
jne
mov
pop
inc
lods
ss
dec
in
cmpsl
int
mov
cmp
mov
sbb
xchg
mov
add
jp
dec
sbbl
out
jp
cmpsl
push
sub
lahf
and
push
aaa
in
iret
sbb
and
dec
jmp
sbb
movsl
push
in
xchg
rorb
sti
mov
into
outsl
lret
xchg
les
mov
xor
pop
xchg
imul
scas
ret
cmpsb
push
nop
lcall
scas
arpl
lahf
cmp
daa
mov
cmp
sub
aad
push
mov
add
out
mov
sti
aam
or
movsl
xor
mov
sub
std
mov
or
jb
push
mov
stc
ljmp
lcall
add
dec
mov
ja
xchg
aas
mov
or
push
adc
pusha
sti
out
lods
aas
movsl
inc
addr16
or
cld
loope
iret
out
xchg
ds
sar
in
in
rcrb
icebp
mov
test
mov
jae,pn
stos
pop
arpl
ds
jae
in
pusha
mov
fisttps
repz
inc
dec
inc
lcall
push
jmp
mov
popf
mov
dec
xor
imul
xchg
addb
xchg
loop
add
xchg
mov
mov
push
push
scas
in
mulb
xchg
inc
adc
mov
fcoms
out
popf
cld
xor
shll
ljmp
inc
or
or
jp
mov
sar
popf
call
repz
leave
cltd
stos
data16
cmp
addb
fcompl
pop
mov
jg
scas
jnp
shr
jmp
push
aam
cmp
movsb
daa
adc
js
inc
test
cltd
ret
xchg
mov
sbb
lret
jmp
sbb
mov
mov
xor
mov
dec
mov
dec
insb
mov
cs
jb
push
pop
icebp
jmp
jmp
inc
lret
add
insb
push
push
mov
jbe
dec
shll
std
xchg
dec
lret
outsb
xchg
fucomp
mov
push
or
cs
loop
mov
divb
jecxz
mov
stos
sbb
jb
mov
jp
sub
test
call
movl
es
pop
hlt
inc
fcmovne
insb
inc
cmp
ss
mov
adc
add
ljmp
cltd
xchg
jns
xor
pop
leave
push
sub
pop
jecxz
bound
pop
xchg
dec
xorb
fwait
setp
mov
les
ret
shl
sbb
es
insb
dec
dec
sub
notb
sub
mov
pusha
lock
sti
and
ret
ret
jecxz
aas
cmp
addb
fs
and
fmul
mov
popa
imul
sbb
sbb
dec
stos
out
ret
xor
hlt
mov
inc
pop
mov
sub
movsl
rorl
inc
mov
pushl
lcall
xor
shrl
dec
xor
stc
arpl
dec
mov
pop
adc
out
cmp
cmp
and
out
shrb
ss
mov
fcompl
out
rcll
mov
movsb
ljmp
sub
inc
mov
pop
push
sub
out
xchg
sub
cmp
aad
loop
and
mov
arpl
mov
aam
mov
mov
loop
aam
push
sbb
dec
insb
fs
mov
sub
cwtl
ds
dec
or
cmp
mov
or
cmp
ret
inc
fstl
nop
out
fmull
and
ljmp
push
arpl
out
imul
adc
xchg
arpl
inc
nop
jge
iret
insl
sbb
jmp
dec
cwtl
pop
xchg
or
push
mov
and
cmp
movsb
mov
inc
inc
bound
dec
sub
push
popf
sub
sub
enter
loop
push
mov
add
mov
or
pop
sub
arpl
mov
in
in
mov
push
in
jae
fwait
add
cmp
push
mov
or
push
cmp
add
sbb
insb
add
adc
and
adc
cld
adc
int3
insb
jg
inc
inc
add
sub
je
pushw
cmpsl
scas
pop
bound
or
sbb
push
mov
shll
ret
xor
pop
dec
ss
jle
ljmp
or
xchg
xor
mov
push
das
aaa
or
xchg
daa
cltd
mov
add
and
addb
cltd
fsubl
test
cmpsb
int
cmpsl
or
ja
sub
loopne
jp
fidivrs
inc
cmp
and
cmpsb
cmpl
cmpb
mov
popf
mov
or
fs
push
movsl
or
rolb
sub
gs
int3
enter
je
mov
cli
pushf
negb
arpl
pop
mov
mov
ja
cmp
test
imul
int3
dec
mov
xor
rorb
mov
cmp
insl
aam
xor
cs
in
or
call
push
adc
pop
jmp
sti
pop
cmp
pop
or
or
and
pop
sub
sbb
jae
sbb
inc
mov
push
pop
or
sahf
pusha
subl
mov
pop
imul
and
mov
jbe
mov
test
or
shlb
xchg
out
fsubl
jmp
jle
pop
mov
into
cwtl
pop
in
mov
mov
or
mov
es
gs
and
jmp
sub
sbb
mov
inc
xchg
jmp
sarb
mov
mov
cmp
insl
jmp
push
rorl
mov
outsl
test
lcall
push
xchg
jp
cmpb
jge
mov
ljmp
pop
cmp
sbb
les
ret
or
das
ret
lea
mov
test
mov
pop
push
dec
pop
sahf
mov
xchg
dec
ja
cmp
mov
in
leave
cltd
xor
mov
ret
ret
add
adc
ljmp
outsl
xchg
fisubrl
in
pop
iret
inc
addr16
mov
and
shll
sarb
stc
test
mov
pop
lods
xchg
inc
outsl
dec
je
ror
cmp
jmp
icebp
xchg
jp
mov
sub
add
pop
fldenv
data16
cmpsb
int3
sbb
int
loop
in
pop
pop
fists
popa
sarl
leave
xor
js
inc
and
ljmp
shrl
fstpl
pop
ret
push
sbb
sarl
lcall
cmp
pusha
out
dec
out
cltd
into
lret
testb
and
insb
dec
jmp
adc
mov
sbb
and
sub
xchg
jbe
cld
je
and
adc
inc
lret
add
dec
mov
fiaddl
push
les
lcall
sub
std
sahf
jb
loop
mov
dec
pushf
loop
cmp
add
mov
xor
ficoml
or
and
mov
rorb
adc
andl
repz
jne
fidivl
nop
xchg
sub
jne
xchg
jb
sbb
xchg
rcrb
into
imul
lret
sub
push
adc
pop
imul
dec
ret
int3
pop
jmp
arpl
fadds
lods
stos
aaa
push
xchg
out
xchg
jmp
mov
mov
shrb
xchg
mov
dec
pushf
mov
ss
rcrl
xchg
sbb
push
outsb
add
jmp
push
inc
sbb
into
clc
jae
xorl
and
push
enter
cmp
push
mov
fsubrl
fwait
jl
push
jg
clc
cmp
rcl
jo
and
loope
push
out
scas
sub
ds
xchg
xchg
mov
incl
cs
dec
inc
leave
fdivr
les
in
and
mov
mov
sbbl
jbe
or
mov
hlt
loope
lret
shr
insl
xchg
stc
das
push
xchg
cmp
shl
lret
cli
push
push
mov
xlat
lods
xor
sub
add
xor
out
xlat
dec
sub
jmp
fsubs
subl
push
dec
popf
pop
outsb
xchg
out
cmp
mulb
sarb
xchg
mov
or
xchg
loop
fisubl
lods
push
cmc
mov
fsubl
jecxz
push
and
hlt
add
sbb
adc
cmp
mov
xor
adc
push
jns
jbe,pn
fistl
mov
jp
cs
loope
fisubl
andb
ret
mov
sbb
adc
jnp
jno
outsl
call
mov
inc
sbb
sub
push
filds
push
dec
sub
bound
pop
insb
movsl
pop
stos
loop
dec
test
jae
cmp
pop
fs
mov
mov
ret
push
push
test
jae
xchg
arpl
pop
fwait
mov
fcmovu
lcall
push
notl
and
subl
out
or
add
push
adc
jle
push
add
icebp
mov
sbb
and
scas
imul
cwtl
or
pop
nop
fcmovu
pop
in
popa
or
scas
rcll
add
cmp
ret
mov
pop
arpl
pushf
mov
sub
sub
outsl
jmp
fidivs
loope
sub
std
jle
arpl
lret
fildl
rcll
ret
das
add
xchg
add
stc
jne
jmp
mov
inc
pop
cli
mov
pop
test
and
dec
xchg
mov
dec
mov
lret
dec
std
pop
lcall
adc
push
lock
sbb
and
xchg
push
ja
sbb
mov
stc
and
sbb
in
sub
jmp
jl
stos
add
out
fs
add
lret
insl
cwtl
mov
push
cld
xlat
adc
orb
lods
inc
enter
add
mov
jmp
mov
jle
loop
je
dec
stos
cli
cmpsl
cmp
jae
push
js
ss
add
pop
push
jo
push
sub
cli
add
cli
ja
pop
mov
ror
jecxz
mov
and
push
ja
mov
fstl
aad
add
ror
lret
into
sub
xchg
lods
mov
mov
sub
dec
aaa
xor
cs
mov
jo
cmp
or
pusha
fimuls
lea
ljmp
add
imul
jns
xchg
dec
and
andl
or
or
dec
or
pop
enter
adc
mov
push
popa
dec
sbbb
in
cmp
out
std
cmp
jmp
jbe
mov
daa
and
xor
sub
imul
pop
out
or
les
fldt
nop
inc
sti
push
test
ss
inc
dec
stos
test
nop
es
mov
adc
push
mov
subl
pop
inc
les
lods
rcll
push
inc
mov
adc
bound
lcall
fsts
push
sub
pop
mov
mov
push
fs
push
loop
push
pop
lods
or
sbb
cmp
ja
jb
adc
lods
xor
mov
pop
bound
repz
sti
aad
loope
imul
int3
pop
jo
mov
sbb
arpl
or
arpl
xchg
mov
push
les
loop
sub
mov
pop
xor
pop
aam
pop
push
xchg
gs
push
cmp
mov
xchg
cmovge
psllq
repz
arpl
fimuls
jle
es
sbb
jmp
push
dec
arpl
mov
mov
xchg
mov
lods
in
sbb
push
int3
sbb
aad
and
xchg
mov
sti
test
dec
lds
jne
adc
or
adc
mov
addr16
add
pop
loopne
mov
cmp
in
subl
or
rcl
mov
add
mov
or
push
loop
xor
iret
sbb
push
subl
adc
mov
test
fiaddl
call
or
fwait
push
shlb
sub
lea
jge
bound
fdivrp
dec
or
int3
rol
xchg
fistl
adc
aam
xchg
xor
xchg
filds
sub
sahf
lds
fmuls
inc
mov
negl
arpl
lret
packsswb
adc
or
repz
push
fsubrl
shll
es
and
call
insb
cmp
out
inc
lahf
inc
repnz
and
cmp
ljmp
jne
lods
lret
nop
hlt
out
push
jge
sbb
lea
fs
outsl
xchg
mov
push
mov
jb
repz
inc
popf
mov
dec
sbb
or
or
push
int
sti
adc
rcrb
xor
call
dec
cli
ja
jno
fsubs
dec
lret
xchg
nop
and
lret
inc
out
push
add
js
dec
cld
incl
sub
push
stos
ljmp
cld
fistps
pop
sub
cli
and
and
shll
js
mov
jge
mov
sub
ror
out
shrl
testl
outsl
hlt
ret
test
xor
cmp
test
arpl
neg
xchg
mov
push
popa
sahf
mov
fisubrs
arpl
pop
lods
mov
lcall
add
push
fsub
lahf
push
adc
stos
and
ret
enter
ret
lret
clc
mov
js
sbb
cmp
testb
ret
imul
jns
cltd
js
mov
in
rorl
mov
scas
sub
rcr
jp
or
stos
adc
or
push
xor
dec
xor
insb
pop
cli
hlt
dec
sbb
faddl
rsqrtps
mov
inc
out
test
cmpsb
data16
sbb
jmp
bound
sbb
jbe
rcll
insb
fdivr
lock
push
loop
mov
repz
int3
dec
adc
xchg
xor
ljmp
fwait
push
out
aam
out
lcall
sbb
push
jns
cltd
and
rcl
shr
movsb
sbb
xchg
mov
hlt
ror
jmp
inc
mov
jecxz
sub
lea
push
sti
xchg
or
sub
and
adc
jecxz
mov
mov
xor
xchg
cmp
sarb
test
adc
movsb
mov
xor
stos
xchg
xchg
hlt
int
xor
xor
cmp
inc
inc
lods
jo
fucomp
dec
fsubl
into
push
scas
aad
mov
sarb
mov
test
ljmp
pop
xchg
push
mov
sub
jl
aad
xor
sub
in
repz
cmp
sbb
hlt
neg
js
mov
cmpb
adc
mov
cs
aam
hlt
pop
mov
adc
rclb
clc
packssdw
lcall
add
fwait
push
xchg
sbb
ds
pop
xchg
push
cmc
sub
push
fstps
dec
iret
mov
sahf
pop
arpl
or
mov
ljmp
push
andb
mov
mov
adc
or
daa
jno
in
fisubs
mov
insl
dec
mov
pop
mov
sub
xchg
mov
test
repz
cmp
cld
test
dec
outsb
test
mov
call
mov
hlt
insl
in
mov
xchg
or
fsubrl
sbb
cmp
test
mov
mov
and
jnp
pushf
imul
inc
jne
dec
call
push
mov
mov
out
sub
loop
mov
andl
mov
cmp
dec
mov
lret
push
lods
faddp
and
mov
mov
or
bound
jb
or
xchg
push
pop
mov
orb
call
adc
and
popf
andl
arpl
add
imul
insb
or
add
mov
inc
mov
scas
pop
jecxz
arpl
xchg
idivl
mov
mov
push
sahf
pop
jmp
mov
sbb
jmp
sahf
mov
aam
xchg
push
adc
push
pop
dec
fistpl
aam
mov
scas
dec
daa
sbb
push
mov
mov
jns
sti
dec
or
aas
lret
sbb
sbb
mov
out
aaa
and
test
push
dec
push
ss
mov
sti
shrl
dec
mov
lods
in
mov
imul
mov
mov
dec
insl
bound
cmpsl
imul
ja
in
enter
and
xchg
insb
lahf
imul
hlt
shr
push
ret
bound
fwait
ret
movb
bound
out
data16
adcb
jp
out
stos
mov
push
mov
push
ret
push
scas
xchg
jbe
mov
or
inc
cmp
mov
test
pop
sahf
lret
push
pop
ret
dec
xor
lea
stc
dec
out
pop
add
stos
mov
fisttpll
dec
xchg
jge
mov
clc
dec
jmp
mov
cld
icebp
mov
ret
push
push
cmp
inc
xor
fistps
dec
rolb
sub
adc
jecxz
push
cmpsl
push
lods
lods
into
lret
pop
pusha
pop
and
push
push
clc
sbb
mov
push
repz
or
jecxz
xchg
scas
dec
dec
inc
jmp
mov
popf
jle
or
ret
push
cmp
pop
pushf
mov
in
ss
mov
sti
ljmp
int
or
jmp
sbb
jmp
sbb
sub
mov
ss
jmp
ja
lea
pop
pop
push
nop
inc
fsubrl
jle
or
push
stc
pop
insl
pop
add
repz
cmp
adc
xor
jecxz
mov
loop
aam
andb
in
arpl
adc
pop
fcom
inc
faddl
enter
lret
xor
cli
in
test
or
fstpt
sahf
pop
add
or
inc
sub
scas
loop
pop
shrl
mov
loop
fucomp
mov
inc
stos
lret
ret
fdivs
lcall
pusha
jp
sbb
sub
leave
outsb
scas
push
cltd
push
shll
push
dec
jo
cld
pop
dec
jbe
cltd
cmp
cmpsb
push
adc
mov
mov
jecxz
mov
out
adc
sahf
sub
pop
pusha
jmp
or
mov
xor
popa
xor
xchg
xchg
jle
inc
sbbl
push
bound
les
lret
fsubl
jmp
add
pop
jno
mov
lea
pop
and
mov
and
lahf
xchg
cmp
xchg
shr
sahf
iret
and
fiaddl
cmp
or
adc
shrl
xchg
xchg
fwait
jo
rolb
bound
sub
test
lret
push
push
lods
icebp
fcmovnb
test
inc
push
cmp
daa
loope
call
repz
pop
xchg
dec
icebp
and
or
jp
mov
mov
mov
gs
or
loopne
adc
das
sbb
lea
cwtl
or
jle
jne
sub
loop
cwtl
sbb
sarl
and
jmp
xor
shlb
jne
out
je
jno
mov
jle
test
push
adc
daa
outsb
dec
sbb
sbb
sub
inc
cmpsl
mov
xchg
mov
fnstenv
jmp
xchg
mov
jmp
out
jne
or
testl
jmp
push
loopne
ret
lret
dec
out
rcrb
or
stc
push
add
mov
sub
int
jg
adc
inc
ja
mov
xchg
cmpsl
jnp
lods
push
inc
mov
xchg
mov
out
shlb
ss
fnstsw
and
insl
xchg
sbb
pop
mov
add
mov
dec
cmp
add
or
call
decb
sub
out
inc
cmp
fs
xor
das
xchg
pop
inc
lods
xchg
insl
jl
fstps
push
sub
add
faddl
arpl
ljmp
inc
call
lret
movsb
fldt
and
jecxz
cld
mov
jmp
pop
das
rcrl
aaa
lahf
sbb
jecxz
dec
out
pop
mov
inc
mov
cli
mov
or
add
sbb
arpl
insb
add
mov
insb
scas
repnz
push
xchg
and
sbb
jbe
pushf
fmull
add
rcll
jnp
or
mov
mov
or
fwait
dec
lcall
pop
mov
gs
fistl
jecxz
adc
push
shll
pop
mov
cmpsb
xor
adc
inc
jo
cmp
sub
push
mov
outsb
or
nop
cli
stos
sub
ret
sub
subb
and
sahf
dec
pop
and
ret
inc
push
dec
inc
pusha
out
ss
sub
icebp
mov
fimull
stos
xor
mov
xlat
loop
push
sahf
ret
fidivrs
jle
add
add
adc
push
insl
adc
mov
test
xor
in
aad
xor
icebp
cmp
pop
lret
xor
insl
fstpl
into
mov
neg
insb
ret
cmp
aaa
inc
mov
rcll
sub
xchg
loope
popa
insb
pushf
ret
push
int3
cli
sub
or
push
popf
jle
mov
js
sti
sub
ret
mov
sbb
je
and
mov
in
push
outsl
aaa
push
push
incb
imul
add
inc
mov
shl
test
pop
dec
push
adc
cmp
insl
scas
sahf
sbb
imul
loop
je
jno
cli
push
jp
pushf
sub
push
je
imul
lods
imulb
fs
cmp
out
arpl
mov
push
cmp
cmp
call
mov
in
ret
fs
push
pushf
add
data16
pop
adc
xor
inc
inc
js
add
js
jnp
loope
or
rorb
fcmove
je
mov
mov
push
xor
shr
mov
loope
lods
jno
push
cmp
adc
bound
arpl
test
fsubrs
pop
sub
xor
rorl
mov
ret
out
ret
pop
ret
cwtl
nop
aad
popa
fidivrs
sub
sub
sub
xor
in
jecxz
das
inc
jmp
dec
pop
xchg
pop
lods
add
arpl
ficoml
or
jb
xlat
and
out
lcall
not
push
add
les
dec
jle
mov
ja
scas
sbb
jnp,pn
insb
jmp
push
mov
mov
lods
push
jnp
fidivs
ds
test
dec
xchg
jle
adc
xchg
inc
insb
in
imul
data16
movsl
sarb
ja
inc
out
lret
das
lret
scas
mov
scas
cld
pop
pop
or
movzbl
jle
xor
mov
gs
or
push
inc
inc
jae
mov
jmp
in
xor
push
mov
sbb
xchg
jmp
sbb
mulb
jge
sbbl
dec
ja
cltd
jle
or
cmp
or
shrl
sbbl
scas
sti
mov
cmp
or
push
inc
stos
fisubrs
sbb
fists
popf
jg
lea
int3
ja
pop
sub
add
popf
cmpsb
dec
xor
popa
or
hlt
ficoml
les
mov
jp
sub
insb
outsb
mov
int
sti
and
adc
scas
fsubs
lock
mov
mov
cmp
inc
xchg
lds
mov
push
je
lcall
ds
arpl
sbb
ret
jne
int3
mov
or
dec
ds
fwait
rolb
mov
test
scas
add
addr16
or
add
jecxz
sub
pop
adc
mov
inc
lea
ret
popa
arpl
pop
pop
ja
mov
and
push
mov
mov
into
inc
cwtl
mov
jbe
test
lret
jo
test
shlb
mov
int3
sub
insb
sub
frstor
call
lcall
push
ds
jne
cltd
add
in
lahf
iret
subb
repnz
adc
add
cli
lds
jne
subl
xor
push
stc
sbb
ret
ljmp
dec
adc
or
arpl
sarb
in
ret
add
rolb
arpl
mov
mov
in
fimuls
jp
jmp
pop
sbb
sub
les
mov
call
call
popf
out
stos
rsm
roll
xor
mov
mov
and
or
jle
imul
add
cltd
mov
pop
lods
cmp
out
sahf
sbb
fnstenv
mov
pop
mov
jmp
mov
jmp
lods
subl
mov
mov
mov
and
sbb
add
stos
inc
sub
push
lahf
ljmp
cmp
pop
pusha
into
adc
sub
in
addr16
mov
and
jge
cmp
dec
imul
ss
pop
sbb
xchg
in
sub
les
mov
mov
scas
insl
lods
jno
mov
mov
sub
stc
loopne
movsl
arpl
mov
jecxz
aaa
in
rorb
cmp
mov
popa
xchg
sbb
out
push
mov
push
mov
je
push
insl
test
gs
stos
mov
insl
jmp
arpl
repz
shll
mov
jnp
lods
add
fadd
pop
inc
adcb
repnz
jmp
pop
xchg
jp
in
push
sahf
xchg
push
lds
cmpsb
ljmp
xchg
fimuls
ja
ret
test
jbe
shrb
leave
add
sbb
xor
pusha
ljmp
inc
in
fcmovne
mov
rorl
sub
sarl
test
iret
ret
pop
mov
lret
mov
push
dec
sub
xchg
mov
adc
mov
outsb
mov
inc
push
pop
jl
out
pop
inc
cmpps
sti
sahf
ret
ds
pop
fsubrp
mov
pop
aaa
xchg
loopne
sub
mov
jmp
and
cmpsb
popa
pop
sbb
jmp
or
fsubl
inc
adc
jne
test
cmp
aas
cld
fs
or
xor
aad
insl
mov
je
mov
nop
repz
test
fdivp
mov
xor
fwait
jae
adc
add
in
push
aas
mov
mov
lods
pop
push
xor
jne
js
sbb
mov
scas
fildl
mov
add
pop
xlat
fistl
cs
inc
jecxz
test
add
mov
movsb
push
pop
scas
enter
sub
mov
dec
fstpl
out
jle
testl
imul
sbb
cmp
push
adc
cmp
fnstsw
mov
cmpsb
aas
jns
daa
scas
pop
sbb
test
push
jno
cs
nopl
sub
repz
mov
and
ror
pop
inc
pop
jmp
js
pop
adcb
and
inc
dec
dec
sub
and
mov
sbb
sub
and
pop
fists
jne
scas
mov
adc
or
scas
ret
sub
cld
fnstenv
cmp
out
rcrb
ror
mov
jno
mov
test
inc
fbstp
inc
dec
xchg
lock
fadds
pop
push
xchg
sub
jnp
sbb
fisubl
xor
dec
cmp
scas
mov
jmp
adc
sbb
mov
jmp
sub
dec
ljmp
int
xor
je
adc
pop
faddl
pop
inc
in
loop
leave
mov
jne
mov
lods
ficoms
test
or
lcall
and
mov
and
pushf
int3
xchg
inc
or
sub
push
jmp
push
push
ret
adc
cmpb
leave
imul
ret
leave
or
int
testb
jmp
out
add
pop
mov
fiaddl
mov
pop
sbb
lea
push
fucomip
pop
movb
scas
movsl
data16
pop
mov
ds
sub
add
cmc
repz
loop
fnstsw
push
popa
and
stos
pop
sbb
js
sbb
fwait
es
fbld
outsl
adc
jecxz
aam
enter
xchg
iret
add
dec
jb
aaa
lds
mov
jbe
add
pusha
inc
sbb
ljmp
std
inc
mov
insl
movl
mov
cs
push
jp
or
push
or
jmp
mov
pop
sub
fists
shlb
jb
push
jmp
stc
cmp
loopne
shll
jno
jle
jmp
pop
inc
xchg
xchg
adc
stos
push
out
add
rcll
cld
mov
dec
jp
cld
lret
inc
sbb
mov
dec
aam
cmp
repnz
ret
loop
es
clc
or
mov
mov
xchg
sub
outsl
cltd
lds
mov
sahf
aaa
sarb
rolb
dec
arpl
repnz
mov
imul
pop
push
push
mov
cmp
rclb
dec
roll
das
rcr
in
lods
cmc
scas
xchg
shrb
and
jge
jb
push
add
mov
sbb
outsl
scas
fstl
pop
fidivl
insb
xchg
stc
rcrb
push
andb
fstpt
aam
pop
outsl
out
repnz
lods
sub
test
fabs
mov
ret
jmp
mov
repnz
lock
jbe
or
mov
lods
notb
sub
sub
arpl
sbb
add
lahf
jno
call
mov
lea
push
aas
and
xor
out
into
ja
mov
cmp
mov
push
push
out
scas
dec
hlt
adc
aam
dec
add
rcll
mov
inc
aas
sub
out
mov
imul
arpl
cmpsb
and
jb
fs
sub
in
les
sbb
setb
push
sbb
and
ds
lock
sub
jmp
or
push
lods
rorl
push
jae
in
cs
and
cmp
add
js,pn
mov
or
sub
cli
ss
cwtl
rclb
stos
repnz
jle
jnp
loop
inc
jle
cmpsb
mov
pop
cmpsl
pop
loop
scas
jo
loop
sti
mov
sbb
jb
fisubl
das
adc
jmp
cmp
je
imul
test
sti
enter
lods
scas
pop
sbb
ss
pop
and
call
enterw
out
add
cmp
test
ljmp
imul
ljmp
cli
arpl
inc
mov
ret
jmp
mov
sbb
popf
sub
sbb
test
cmp
sub
jmp
dec
fsub
push
mov
jmp
lcall
mov
jmp
and
in
outsl
push
xor
dec
add
sbb
iret
stos
cmp
pop
fisttpll
int
lret
stos
sti
push
scas
or
aam
lret
mov
push
stos
add
rcrl
scas
jae
repnz
imul
dec
arpl
jmp
ret
dec
lret
mov
aas
mov
mov
adc
pop
ljmp
testl
enter
cmp
movsl
jl
imul
fs
in
dec
repnz
sub
outsb
push
sbb
adc
repnz
sub
in
scas
xchg
mov
jnp
and
sti
jno
leave
mov
and
paddb
mov
in
enter
or
add
xor
addb
mov
sbbb
jp
pcmpeqd
imull
add
cmp
cmp
inc
mov
icebp
push
xorb
pusha
sbb
andl
fidivl
pop
aam
mov
iret
mov
pop
adc
addl
inc
mov
mov
fnsave
addr16
push
cmc
dec
shrl
scas
dec
repz
adc
xor
lret
xchg
sbb
aam
test
or
mov
mov
mov
andl
mov
add
dec
sub
leave
or
shll
xchg
inc
lcall
outsb
cld
scas
rorb
sti
mov
in
xchg
ss
lcall
subl
mov
add
addb
jle
psubq
test
dec
sub
sti
mov
mov
dec
cmpsl
or
cmp
jno
dec
jnp
jecxz
xchg
inc
test
stos
jmp
fsubrs
aad
hlt
dec
mov
dec
popf
jg
stos
sbb
mov
sub
sub
lahf
insb
orb
add
in
mov
xchg
mov
push
aad
aaa
mov
nop
sbb
int
mov
sbb
ret
mov
mov
outsb
xor
lods
mov
cmp
jp
call
aaa
insb
cmp
dec
out
xchg
gs
mov
ja
leave
popf
cmp
mov
adc
test
lea
mov
lods
out
cmpsl
cmpsb
jp
shll
dec
and
flds
ss
pop
js
imul
jecxz
shr
arpl
pop
lcall
jmp
sahf
cmp
roll
cwtl
sbb
mov
ljmp
movsl
sbb
sbb
lods
ret
movsl
push
or
repz
mov
xor
xor
add
dec
stos
shl
cld
scas
ret
pop
lret
mov
out
mov
cmp
sub
or
pop
out
insb
or
adc
fdivrl
mov
aaa
shll
popa
pop
cmp
jb
aad
arpl
xor
mov
bound
push
mov
adc
cli
jbe
orb
mov
cs
rcrl
movsl
arpl
sbb
adcl
adc
add
sub
add
js
sub
push
bound
fldcw
sub
dec
mov
or
sbb
cmpsl
xchg
mov
ret
int
nop
or
or
cmp
divb
cmp
stos
scas
add
ds
neg
out
cmp
or
sub
mov
jo
jbe
sbb
adc
lods
ret
push
sbb
enter
and
adc
fnsave
out
add
mov
rcl
dec
dec
pop
mov
jp
dec
adc
enter
jne
cmp
leave
push
cli
out
push
sub
ret
pop
mov
sbb
dec
mov
bound
xorb
movsl
not
je
icebp
inc
add
in
jecxz
mov
fwait
jmp
adc
xor
js
sub
dec
xchg
xchg
imul
lahf
movlps
xor
jmp
and
inc
mov
ljmp
lods
dec
je
pop
stc
data16
add
xor
jmp
pop
scas
lret
mov
lea
or
pop
adc
adc
jecxz
sbb
pop
mov
cmp
imul
add
inc
mov
imul
stos
imul
jmp
cltd
push
shrl
fnstenv
rcrl
ljmp
push
sub
or
cmpsb
jecxz
push
lahf
or
fidivrs
addb
xchg
jle
adc
mov
push
adc
popa
xor
jnp
cltd
movsb
arpl
ljmp
cli
mov
xchg
ret
lds
xchg
xor
and
cmp
stos
fsubs
clc
sarl
mov
pop
insl
sahf
loop
scas
xchg
pop
leave
sub
add
clc
xor
ja
or
push
mov
lods
aaa
aaa
inc
or
and
addr16
int3
or
shrl
sbb
in
orl
pop
je,pn
pop
gs
or
sti
arpl
mov
xlat
test
mov
add
or
inc
out
dec
insl
hlt
addb
cmp
loop
jmp
mov
sarl
pusha
inc
push
add
adc
mov
xchg
sbb
iret
lods
pop
jo
stos
mov
icebp
xor
jge
iret
inc
sbb
cli
hlt
das
jecxz
loop
ja
lret
loopne
mov
aad
int3
scas
jle
adc
enter
add
dec
cmp
nop
cld
pop
gs
scas
fcoms
stos
je
xchg
jae
lods
sti
roll
pop
mov
sub
xchg
shr
lcall
jmp
jmp
and
jno
mov
fstps
jl
dec
jecxz
adc
push
jbe
jg,pt
mov
int3
fldenv
push
mov
or
mov
xor
jae
fs
in
fildl
cld
and
test
aaa
add
sbb
fsubrl
and
fidivs
movsb
and
scas
sub
aas
and
push
push
jmp
xor
inc
movb
outsb
fbstp
adc
stos
push
jns
enter
roll
xchg
cli
cmpsl
pushf
add
cmpsb
jmp
push
rclb
mov
xor
jnp
lods
push
out
mov
outsl
or
movsb
cs
or
jp
and
addb
cmp
mov
leave
stc
pop
mov
xchg
jecxz
add
push
pop
inc
lret
sar
add
lcall
out
aas
push
mov
jno
inc
js
xchg
iret
mov
rorl
aaa
dec
loop
rolb
jno
adc
sub
mov
pop
call
andb
sub
add
xor
add
dec
stos
sub
lahf
arpl
mov
sahf
jle
cmp
mov
dec
push
std
sbb
lcall
sub
stos
lea
or
sub
push
ja
rcll
pop
jb
xlat
mov
ljmp
ljmp
shrl
mov
xor
out
loope
xchg
sub
sbb
fidivl
or
pop
call
arpl
imul
in
sub
sub
jge
fldl
adc
fisttps
orb
out
jmp
pop
gs
test
call
ljmp
add
cmp
xchg
add
pop
xor
push
pop
mov
push
push
cli
roll
dec
or
mov
stos
js,pn
andl
stc
inc
lret
lods
or
or
mov
mov
mov
insl
ljmp
inc
pop
test
pop
mov
into
mov
xor
adc
mov
cmpsb
push
cmp
in
cmp
ljmp
scas
xchg
popa
jo
jge
pop
mov
inc
jge
or
jae
aad
cmp
jns
scas
into
push
outsl
cwtl
addb
xchg
push
leave
scas
xchg
push
into
in
pop
rclb
mov
fs
stos
jmp
out
jg
lret
pop
pop
out
repz
mov
imulb
ret
sbbb
subl
les
jp
sub
insb
sbb
aad
cld
adc
out
lcall
ja
inc
sahf
xchg
test
mov
movsl
pop
stos
push
mov
fldl
cs
jo
and
lcall
out
ja
lds
iret
aaa
jb
cmpb
sub
push
fstpt
mov
fisubrl
inc
mov
mov
leave
repz
imul
sub
push
daa
jp
push
rorl
rorl
or
mov
cmp
xor
fwait
icebp
jnp
fadd
lods
push
sti
decb
loop
jl
mov
jp
jge
scas
mov
aaa
jnp
lods
sbb
xorl
outsl
adc
inc
pop
test
fistpl
jbe
iret
mov
mov
lea
sahf
pop
jne
mov
add
pop
scas
punpckhwd
lds
dec
outsl
mov
mov
cwtl
je
mov
and
bound
lods
and
ja
aas
mov
push
xchg
int3
push
and
jo
leave
test
cltd
nop
sbb
pop
mov
es
lea
cmp
out
add
hlt
or
sub
pusha
testb
pop
mov
mov
jmp
repnz
push
dec
mov
mov
shlb
or
loopne
movl
fsubl
shlb
subb
cli
xchg
std
xchg
add
adc
es
cmp
xor
test
jp
insb
adc
bound
rcll
rclb
outsb
movl
insl
jae
ffree
mov
xorb
ret
sub
push
data16
cmp
cmp
mov
jae
adc
xor
mov
jmp
mov
lret
hlt
lahf
pop
xchg
add
insl
movsl
sub
andb
cmp
sub
stos
addl
push
sar
mov
cmp
wbinvd
clc
in
add
inc
sbb
ljmp
faddl
subl
jnp
sub
ljmp
cmp
mov
test
js
sub
std
fists
xchg
mov
mov
ljmp
out
scas
jne
sub
sbb
fcoml
fnstsw
adc
mov
sub
js
sub
out
xor
xor
pusha
mov
ficoml
dec
lea
movsl
insb
pusha
sahf
int3
dec
ficompl
pop
bound
pop
or
jbe
or
arpl
inc
sbb
ss
xchg
xchg
adc
jg
lods
mov
sti
push
sbb
pusha
lret
cmp
cs
fcmovu
jl
or
jl
pop
ljmp
aad
mov
jmp
mov
arpl
sbb
cwtl
xchg
mov
jne
push
xor
push
xor
jecxz
sub
sbb
aad
jle
xchg
pop
pop
lahf
dec
jmp
dec
fmull
mov
jmp
sbb
push
dec
insl
mov
mov
jno
inc
imull
inc
inc
or
and
pop
pop
lcall
dec
mov
sarl
jns
lods
jmp
and
inc
sub
and
xor
sbb
pusha
rol
es
bound
add
movb
rorb
bound
inc
cs
pop
out
sarl
inc
test
xor
lods
testb
pop
cwtl
sbb
insl
lods
fsub
push
adc
stos
xchg
adc
dec
mov
jnp
add
data16
fs
out
push
push
sub
out
sahf
xchg
mov
mov
lea
pavgw
sbbb
sub
out
mov
mov
jae
or
adc
lret
fdivrs
mov
mov
xor
lret
or
pop
dec
call
test
sahf
out
aas
punpcklbw
push
gs
cwtl
shrl
jle
jo
outsl
mov
pop
cmp
add
mov
add
cli
ret
and
fwait
mov
test
sub
mov
lret
fisttpll
xor
fcmovnu
nop
push
pop
push
mov
jae
sbb
dec
fldt
xchg
fldt
pop
or
orl
scas
mov
int3
loop
sub
repz
pop
shlb
pop
mov
hlt
scas
sbb
and
lods
movsb
mov
sti
or
jmp
cmpsl
sbb
jmp
out
loop
xchg
scas
adc
jnp
mov
repnz
stos
jae
out
adc
mov
ljmp
loope
pop
pop
add
scas
imul
lahf
or
shlb
data16
cld
call
jmp
subl
xlat
divb
mov
mov
ficompl
add
jmp
mov
push
cli
sbb
sbb
mov
cwtl
in
xor
lret
enter
or
ret
outsb
in
fsubs
fildl
call
stos
loopne,pn
sub
xor
rorb
test
inc
imul
lahf
stos
mov
push
int3
shrb
lret
cbtw
push
push
test
outsb
in
fcmove
fidivl
leave
or
ret
pop
andb
das
scas
shrl
fiaddl
adc
pusha
fldl
lahf
sbb
push
cs
ficoml
lahf
fbstp
adc
test
mov
or
dec
jg
jge
shl
mov
sub
fdivr
xor
mov
jp
xchg
int3
stc
xor
add
imul
lods
lods
inc
mov
mov
xchg
rorb
xor
inc
cld
and
or
int
mov
jb
sub
cmpsl
xor
rcrl
pop
mov
ret
call
lea
inc
aam
cmp
mov
shlb
addr16
in
bound
test
cmc
mov
ds
rolb
call
cs
inc
das
leave
jmp
je
jmp
push
inc
out
shll
iret
lret
stos
push
inc
sub
arpl
and
xchg
lock
mov
ja
subb
mov
sub
fcoms
or
fucomp
or
or
jecxz
push
or
sti
push
pop
ljmp
or
scas
jp
in
adc
in
pop
xchg
mov
cmpb
inc
xor
out
xor
ret
add
int
cmpsb
out
loopne
adc
xchg
test
call
sbb
cltd
or
jo
fsubrl
mov
aad
sub
lods
sahf
pop
pop
sub
push
fsts
sahf
loop
mov
ret
nopl
fisubs
xor
scas
lcall
decb
cmpsb
arpl
sbb
int3
pusha
ret
xchg
lock
sbbb
jg
sub
mov
cli
xchg
ds
mov
mov
leave
je
cmpsl
sahf
cmpl
mov
push
adc
inc
insb
xor
inc
add
lea
rclb
mov
push
inc
mov
jno
shrb
lock
ret
lret
rcrb
pop
jae
push
xor
sub
ds
ja
push
cmp
push
push
jo
js
pusha
test
pop
mov
mov
aaa
loopne
scas
and
mov
fisttps
push
outsb
in
cmp
shll
fcoms
sbb
or
adc
jb
stc
fmuls
adcl
inc
mov
je
and
ds
out
cmp
inc
clc
in
add
adc
pusha
push
into
pop
xor
push
outsl
sub
hlt
ss
data16
xchg
mov
sub
lock
outsl
pop
pop
ja
lods
mov
mov
xor
jp
mov
sbb
or
dec
cmp
jae
lcall
les
or
push
add
adc
add
out
in
or
lret
xchg
push
fstps
mov
loope
sti
sub
fdiv
repz
aad
stos
stos
xor
rcr
jo
arpl
cmc
iret
cli
xchg
mov
fstpt
les
mov
outsb
xchg
lret
or
call
das
loopew
push
cmpsb
jno
arpl
cmp
mov
loopne
lret
or
jmp
lds
aaa
dec
scas
inc
xor
loope
lods
stc
aaa
div
add
xor
lea
adc
inc
push
inc
adc
or
xchg
ret
rcrl
push
jmp
jp
sbb
jae
std
out
jbe
pop
mov
xor
dec
mov
das
fs
add
lahf
mov
in
cltd
icebp
mov
adc
repz
mov
adc
loop
fstpt
dec
lds
enter
pop
lods
jp
dec
dec
inc
lock
out
xlat
lret
jne
and
mov
or
outsl
push
bound
jmp
mov
mov
mov
mov
pop
test
rcrb
cmp
lods
xor
cmp
leave
lcall
or
push
lret
xchg
mov
enter
mov
bound
push
inc
lods
int3
fmul
scas
insb
inc
push
outsb
repnz
lcall
sbb
and
sbbl
xor
stos
es
out
add
pusha
inc
sbb
mov
int3
inc
dec
aad
inc
dec
pop
dec
push
sbb
cmp
arpl
fidivrs
fidivrs
pop
dec
dec
scas
mov
shll
movsb
pop
into
cli
pusha
or
repnz
push
inc
sub
rol
adc
jp
xchg
inc
mov
xor
mov
cs
idivb
fidivs
fbstp
sbb
jle
movsb
or
pushf
sub
sub
or
or
and
or
in
data16
lods
jecxz
test
or
jb
mov
adc
aam
inc
imulb
jle
popf
xor
add
rcrb
arpl
outsl
jecxz
lcall
xor
ss
shrl
push
mov
pop
in
add
cmpsb
add
push
cmp
fistpll
sub
jne
out
pop
dec
cmc
fucomi
pop
or
mov
mov
mov
mov
loop
sar
ds
push
lret
push
pop
xor
lcall
xchg
mov
mov
mov
mov
loop
fstps
add
test
sub
sbb
cwtl
inc
lcall
sub
rcl
sbb
push
inc
sub
dec
add
stc
repnz
int
or
mull
aam
sub
cld
pop
push
and
pushl
call
ret
ret
fstpl
fisubrs
lea
mov
dec
sub
push
sbb
xchg
or
push
sbb
inc
mov
rolb
rorl
sbb
clc
js
xor
cmp
arpl
test
sub
scas
and
cld
push
test
nop
inc
push
sbb
sbb
ss
push
mov
inc
adc
loope
aam
inc
mov
lods
bound
jg
dec
out
in
push
pop
clc
mov
mov
ret
adc
sbb
neg
and
sbb
pop
hlt
scas
or
mov
sub
mov
out
shr
inc
aas
negl
dec
jbe
sub
push
outsl
sbb
mov
fstps
jmp
add
out
adc
push
ret
jge
or
jns
add
add
push
mov
dec
or
dec
mov
push
jno
cwtl
lea
jmp
jae
cs
jmp
adc
inc
dec
mov
in
xchg
aas
jne
push
dec
shll
adcb
push
dec
lea
xchg
mov
pushf
ljmp
rcr
jo
adc
mov
clc
mov
push
adc
push
pop
jp
push
xchg
jmp
inc
inc
jbe
dec
dec
fwait
shrb
call
add
sarb
add
jne
nop
sub
fwait
inc
add
xchg
ret
or
lea
ljmp
adc
mov
sarl
cmp
cmp
mov
cmp
leave
mov
scas
cmpsb
pushf
pop
lahf
ret
or
add
in
xor
adc
cmp
sub
adc
mov
cs
scas
repz
or
or
push
lds
mov
add
dec
xor
ljmp
mov
repz
ja,pt
rclb
pop
orb
jmp
orb
push
les
mov
rol
sti
call
jo
push
into
iret
xchg
imul
add
sbb
inc
out
fildl
xor
out
or
arpl
jmp
movd
sahf
mov
outsb
xchg
cmp
add
divb
popa
clc
push
lea
jmp
mov
fildll
mov
lea
testl
push
lods
sbb
pop
lret
pop
mov
sbb
mov
push
jbe,pn
cltd
mul
loop
pop
xor
push
pop
xor
lret
bound
aam
movl
lock
xor
push
call
stos
pop
jmp
add
pop
lods
setb
xor
lea
fisttpl
enter
jmp
sti
or
jmp
cmp
cmp
xlat
imul
lahf
or
jmp
xor
mov
adc
in
mov
cmp
in
cmp
int
jmp
ja
bound
in
jmp
xchg
xor
or
jmp
jb
stos
lret
test
and
jmp
shll
adc
lcall
pop
loop
fistps
nop
inc
out
xor
shrl
sub
pop
dec
rclb
lret
dec
loop
enter
int
inc
stos
push
rol
or
fst
ja
shrb
stos
adc
dec
push
in
and
fmuls
push
cmp
xchg
testb
xchg
fcmovnbe
jmp
sar
call
testb
ja
jb
inc
loop
cwtl
push
faddp
push
sbb
mov
into
add
add
pop
push
xchg
ror
add
xor
outsl
out
int3
push
loop
stc
pop
cld
scas
mov
in
popw
inc
push
inc
jge
or
fcmovbe
jmp
sarb
pop
push
test
xchg
mov
mov
push
cltd
adc
repnz
mov
cltd
cld
cmp
nop
hlt
repnz
ret
call
xchg
cltd
mov
or
sbb
stos
mov
sbb
and
jp
fs
or
push
push
out
xchg
test
or
add
std
or
jb
mov
icebp
faddl
xor
outsl
lds
xor
dec
mov
xchg
lods
sbb
jge
inc
cld
aaa
pop
xorb
icebp
clc
pop
dec
mov
pop
push
sbb
or
push
or
dec
mov
jp
or
jecxz
mulb
in
dec
in
push
pushf
sub
or
ret
sub
in
sbb
test
sti
push
pusha
add
movsl
and
push
out
dec
jle
inc
sbb
sti
pop
jb
mov
fld
shll
cmp
sbb
and
add
pop
jae
mov
mov
pusha
xchg
into
cld
jb
adc
ret
add
xor
xchg
daa
mov
push
scas
es
mov
lcall
test
imul
ljmp
xchg
jmp
daa
cwtl
sti
xor
or
add
jmp
add
lods
arpl
fwait
mov
pop
pop
out
test
inc
fisubs
ret
inc
inc
sub
xchg
sbbb
push
mov
arpl
mulb
mov
cs
push
pusha
test
jp
cli
sahf
arpl
cwtl
gs
sbb
sti
ret
les
icebp
xchg
jbe
mov
loope
ret
pusha
lock
pushf
imul
inc
ret
roll
or
call
out
mov
mov
xchg
or
popa
sub
stos
xchg
jnp
int3
pushf
movsl
jecxz
in
ja
jge
lods
sarl
ds
lds
fwait
pusha
decb
in
inc
shrl
ja
push
lret
lods
xor
loop
mov
push
iret
pop
xlat
inc
adcb
mov
ret
ss
jb
mov
dec
adc
lcall
adc
jb
lock
sub
arpl
lods
jecxz
jle
adc
mov
jp
lock
adc
leave
out
test
mov
addr16
shrb
std
ret
sub
push
out
add
les
fisttps
mov
pop
repz
adc
scas
add
and
or
in
push
jg
and
lcall
ret
sub
push
out
rcrb
sahf
xchg
jle,pn
loope
out
ljmp
test
xlat
adc
test
cmpsb
and
xchg
imul
push
mov
stos
jbe
scas
pop
adc
fsubrl
imul
fldt
inc
cmp
jl
sbb
aad
mov
and
xchg
mov
sbb
idivb
xchg
ja
inc
in
mov
rcrl
enter
ret
mov
paddb
mov
jb
int3
in
pop
pop
xchg
lea
mov
shlb
jno
adc
dec
jmp
dec
sbb
aam
ret
adc
mov
sub
adc
ret
pop
adc
xor
sub
andb
pop
rcll
imul
arpl
pop
adc
cld
pusha
addr16
mov
test
sahf
and
ret
xor
and
sub
loop
mov
mov
in
push
insl
inc
lods
outsl
jmp
fstpl
inc
push
inc
or
fwait
pop
aas
arpl
test
scas
sbb
aaa
decl
jae
jmp
pop
or
jns
shr
inc
pop
outsl
or
mov
mov
test
adc
xchg
cmpsb
mov
stos
cwtl
sbb
shll
or
fists
insb
cmp
out
rorl
lods
jb
adc
sub
loop
and
sbb
cmc
std
sub
ret
cmpsl
mov
xor
int
nop
popf
xor
clc
sbb
je
and
rcrl
cltd
ret
sbb
cwtl
dec
popa
jmp
push
ds
jmp
jmp
dec
mov
scas
inc
out
jmp
jmp
clc
outsb
add
setp
loopne
adc
adc
sbb
jle
arpl
test
mov
cmp
cld
xor
fmul
stc
fisubs
popf
in
sbb
scas
cli
arpl
xchg
out
mov
ja
lcall
outsl
insl
cmp
ret
sub
loopne
sub
mov
and
mov
inc
mov
lea
mov
subl
jmp
mov
adc
out
mov
leave
cmp
repz
loope
push
jmp
mov
and
int
xor
out
pop
push
pusha
jp
and
vmread
jge
cmp
add
or
sub
in
and
std
daa
pushf
movsb
dec
outsl
in
sbb
pop
or
cmp
cld
test
and
ret
pop
nopl
pop
stos
xlat
pop
xchg
test
addr16
movsb
dec
mov
and
jno
cld
mov
cs
movsb
mov
cs
jo
imul
cmpsb
mov
mov
sti
lahf
inc
addb
cmpb
pop
fstpl
jmp
or
ret
daa
mov
or
popf
mov
mov
scas
repnz
sub
loop
xor
or
rclb
mov
jo
mov
pop
mov
test
sub
pop
pop
leave
hlt
push
addb
rcll
fidivl
inc
pop
insb
lcall
cwtl
and
adc
or
mov
insl
jb
cmp
add
and
pusha
pop
out
adc
jmp
outsb
push
xchg
push
sub
cmp
sub
cld
cmp
sub
scas
add
add
aam
pop
ja
sbb
iret
inc
call
fisubrl
leave
jne
aam
mov
mov
add
nop
push
mov
dec
arpl
scas
cld
lret
popf
jp
mov
pop
sti
pop
rclb
cmpsl
or
lcall
js
divb
ja
aad
dec
add
or
mov
push
lea
lock
or
jl
push
xchg
sub
popl
push
insb
scas
pop
and
mov
ss
mov
lret
mov
mov
mov
out
and
cmpsl
hlt
and
loopne
push
in
mov
adc
int3
pop
cmp
gs
dec
mov
or
les
push
sub
test
arpl
test
dec
lcall
lods
add
sub
lret
mov
cmc
insb
test
push
push
cmp
add
pushf
imul
push
out
xlat
push
int3
imul
sub
and
mov
stos
movsb
cmp
mov
nop
lret
adc
jecxz
jnp
mov
cmp
sti
repnz
orb
xor
data16
ljmp
add
push
lahf
mov
mov
orl
stc
or
fs
or
jmp
out
sub
xchg
inc
loop
notb
imul
arpl
aad
sbb
jo
cmp
push
fcoms
add
jg
ror
vpcomuq
shlb
sub
loop
shlb
shr
mov
loop
negl
fadds
or
inc
pop
into
adc
stos
add
push
sbb
mov
sbb
adc
xor
add
mov
std
test
cld
add
inc
aad
gs
mov
and
test
lods
and
test
aaa
mov
imul
test
arpl
xchg
jge
test
jle
or
or
sub
mov
mov
jg
les
xchg
std
lock
aam
adc
jle
in
or
insl
fnstenv
cmpsl
psraw
xchg
mov
cmp
lret
jne
ror
cmp
adc
or
cmp
test
cmp
xor
call
cmp
jno
lret
sbb
ja
dec
out
inc
call
pop
sbb
std
sbb
jmp
lret
iret
scas
mov
pusha
push
or
mov
in
es
pop
imul
test
fsub
stos
jmp
xchg
xor
test
cmc
out
int
lods
cli
mov
ja
xor
push
arpl
jl
mov
pop
cld
fsts
xor
and
sub
push
xor
inc
push
cmc
mov
jae
bound
sbb
mov
push
pop
add
not
pop
or
mov
fwait
movsl
sbb
sub
sar
or
ljmp
xor
mov
or
jo
jge
call
adc
stos
mov
sbb
les
loop
fs
scas
dec
rol
fstpt
jmp
fwait
dec
lods
aas
fistl
imul
lret
bound
rorl
loopne
jb
mov
adc
push
insb
ss
adc
test
cmp
pop
fisubrl
lret
adc
shll
test
and
push
xor
mov
pop
lret
ljmp
jmp
es
push
stos
dec
mov
jmp
xchg
dec
ret
ljmp
inc
push
fcoml
jae
pop
mov
or
mov
cmp
les
cmp
inc
cli
ss
push
mov
push
sub
ret
jbe
scas
lahf
lret
cmp
or
scas
dec
out
call
add
ljmp
ljmp
shlb
sub
push
in
addl
xor
mov
sbb
adc
sbb
add
imul
inc
xadd
lea
pushf
mov
js
or
fcmovb
jne
das
push
in
jno
sarb
mov
jmp
insb
mov
cltd
testl
jae
les
in
mov
xor
adc
push
or
repz
pop
testl
test
popa
xchg
inc
xor
ljmp
stos
xchg
cmp
dec
mov
mov
in
xchg
jmp
sub
adc
jmp
push
daa
scas
lahf
testl
sub
cmp
sub
cmp
add
sub
inc
sbb
sub
mov
cwtl
ret
jp
arpl
dec
pop
pop
hlt
jae
pop
ret
popf
in
jmp
xchg
sbb
jnp
leave
add
sub
inc
jbe
mov
push
and
jmp
adc
inc
mov
je
or
fcomps
out
cmp
mov
pop
sti
rcll
outsl
jae
pop
xor
stos
push
les
push
pushf
jbe
mov
sub
push
mov
xchg
loop
sahf
outsl
sub
cmpsl
mov
or
and
shll
and
push
stos
pop
jp
dec
movsl
lahf
xchg
mov
cmp
rolb
testb
lret
adc
cmp
jne
into
andb
testb
ret
stc
stos
add
jbe
dec
popf
movsb
pop
aas
ljmp
sub
sbb
ljmp
inc
mov
jmp
cmp
and
add
mov
dec
cltd
es
addl
mov
rcrl
cltd
jecxz
nop
adc
adc
cmpsb
test
and
fsts
out
test
stc
adc
mov
mov
shl
mov
and
and
lcall
out
test
fdivp
ret
xchg
and
je
sbb
movsl
add
and
repnz
jecxz
ret
test
popf
outsb
cmp
sub
push
cmp
sarl
dec
bound
pop
xchg
and
jmp
sub
mov
xchg
test
dec
mov
xchg
je
inc
in
push
shll
loope
push
or
mov
xor
ljmp
sub
int
pushf
sub
test
xchg
icebp
lds
xor
shrl
in
inc
push
out
mov
test
sub
add
xlat
loop
dec
popf
arpl
mov
stos
sub
cmpsb
andb
sahf
ret
lahf
push
xchg
pushf
jl
add
call
and
xchg
jb
add
cmp
test
adc
dec
mov
mov
dec
dec
or
inc
jno
xor
sbb
into
into
mov
test
or
addl
cmp
inc
gs
inc
repz
cmp
adc
dec
repnz
mov
lahf
call
lock
ljmp
push
in
sub
mov
sahf
insl
test
stos
pop
test
pop
les
mov
mov
cmp
adcb
and
pop
out
jne
lret
mov
rolb
inc
dec
loop
cmpsl
lods
loop
out
in
test
imul
jns
in
dec
popf
stos
ljmp
arpl
aas
add
push
gs
fisttpll
and
fsts
cmpxchg
lret
loopne
scas
sub
in
xchg
mov
cmp
cmp
into
es
sbb
or
test
jmp
adc
push
loop
xchg
repnz
dec
cmc
adc
inc
or
enter
test
test
or
ret
push
pusha
loop
rcrb
cmpsl
orb
fcoms
xlat
mov
xchg
mov
fsubrl
lea
dec
inc
inc
xchg
loope
mov
sahf
fsubs
push
jns
cmpsl
pop
sub
and
or
ja
sub
dec
sahf
push
movsb
enter
roll
sub
push
call
push
and
sub
sub
aaa
jecxz
mov
roll
ret
sti
fimuls
xchg
xchg
int3
inc
inc
ljmp
inc
in
aaa
xchg
out
out
xchg
and
dec
aaa
shlb
jae
out
inc
push
inc
stos
orl
jnp
or
adc
loop
push
pop
loopne
add
scas
in
push
xchg
push
popa
push
adc
jae
andb
adc
dec
pusha
loop
les
pushf
arpl
lcall
stos
sbb
fdivrp
rorb
push
or
and
mov
je
sbb
mov
aaa
xchg
push
adc
or
xor
loopne
out
sub
hlt
jne
and
or
dec
push
hlt
sub
test
pop
inc
pop
aam
push
xchg
jecxz
leave
sub
cli
mov
popf
xor
sub
outsb
rcrl
xchg
cmp
or
lods
or
mov
push
lods
sub
push
aad
arpl
sub
jmp
rclb
ljmp
push
stos
out
cmp
dec
arpl
int3
cmp
mov
adc
stos
or
or
and
xor
iret
ss
fcmovu
mov
xchg
in
jno
loop
cmp
lcall
xor
adc
aam
popf
int
test
es
sbb
push
js
js
pop
ss
ficompl
cmp
sub
ficompl
insl
mov
push
pop
imul
jge
sub
dec
scas
dec
lea
push
add
jmp
inc
jae
ds
loop
adc
sbb
imul
lods
arpl
stos
dec
pop
stos
jle
scas
arpl
mov
xchg
pop
sub
jnp
adc
mov
dec
ss
mov
jmp
sahf
les
out
lahf
dec
aam
test
int
sbb
mov
lea
imul
les
push
popa
jp
mov
outsl
sub
ss
imul
out
mov
sbb
xchg
mov
loop
jo
mov
es
test
pop
cmp
repz
movsl
xor
ret
pop
clc
sahf
and
sbb
push
cmp
jmp
sub
cmp
or
jmp
fisttps
rol
lcall
in
inc
mov
xorl
outsl
fnsave
scas
mov
and
movsb
xor
bt
pop
lods
xor
mov
mov
jge
xchg
jnp
out
imul
lcall
js
sub
loop
sbb
pushf
and
sar
pop
push
leave
test
pop
das
pop
test
scas
jmp
xorl
mov
es
in
add
sbb
lret
ret
sub
out
pop
mov
mov
inc
mov
jo
dec
inc
add
into
adc
stos
ror
add
jmp
cmp
fwait
xchg
addb
inc
clc
ret
aad
jbe
mov
scas
stos
jne
xchg
jp
add
outsl
es
arpl
cltd
call
shrb
cmp
adc
or
lods
sub
imul
xor
or
pop
int3
insl
push
push
add
lods
std
pusha
mov
sub
aam
or
lods
lret
mov
dec
jb
cmp
mov
addb
add
adc
or
jecxz
push
sbb
lret
or
lret
cmpsb
jmp
cltd
jl
cmp
dec
inc
mov
or
imulb
xchg
sub
mov
out
mov
outsb
popa
movsl
cmc
subb
rcrl
test
xchg
ret
out
mov
adc
mov
sub
mov
sbb
std
fiadds
pushf
sub
mov
mov
in
dec
and
clc
mov
push
xchg
sbb
fdivp
mov
shr
arpl
jmp
adc
and
in
push
stos
mov
lret
sub
in
adc
mov
scas
call
pop
rorl
jp
outsb
or
or
mov
cmp
aam
fcoml
cmpsb
sbb
mov
test
fsubl
in
mov
dec
cmp
arpl
popl
xor
push
stos
jl
pop
xchg
sbb
inc
imul
mov
xchg
shlb
arpl
sbb
sub
xchg
jecxz
out
sbb
pop
mov
ss
popf
inc
shll
fld
sub
push
lahf
xchg
imul
xchg
inc
adc
addr16
mov
dec
xchg
int3
mov
je
sbb
out
xchg
pop
pop
mov
fisttps
pop
into
pushf
lret
or
push
test
lcall
loop
popf
jb
add
pop
in
outsl
lds
cmp
sub
cmpsb
inc
cmp
test
push
xchg
cmc
mov
push
push
popa
jbe
inc
push
arpl
mov
arpl
adc
xor
loop
sub
push
inc
mov
and
or
lret
aad
cmpsl
loop
mov
push
xor
loop
out
adc
sub
lret
pop
add
pop
iret
xorl
mov
insl
inc
scas
in
adc
inc
mov
mov
xchg
mov
mov
mov
mov
sbb
xchg
cmc
rorb
push
das
or
xlat
pusha
addl
inc
fadds
scas
push
pop
lret
and
fisubs
and
push
push
pop
jns
lods
sbb
push
jnp
popa
pop
es
das
or
or
xor
pop
add
sbb
sub
mov
push
ret
sti
jmp
xor
xor
and
adc
mov
insb
jmp
jle
loop
ss
jge
arpl
add
push
xchg
pusha
add
inc
movb
arpl
popa
cmp
pusha
adc
mov
xor
ret
jmp
sub
out
aaa
popa
int
lcall
loop
cmp
cmpsb
pop
es
dec
jmp
int
dec
ds
fadds
and
add
jo
or
fmull
jle
pop
add
test
mov
enter
shll
call
sub
push
or
or
loopne
mov
ss
and
rolb
dec
shlb
inc
sbb
xchg
mov
fwait
or
inc
roll
ds
push
sub
sub
xor
jge
roll
push
pop
sbb
fsub
or
shr
pushf
dec
or
mov
jne
out
dec
int3
pop
call
dec
ret
mov
stos
xor
mov
mov
arpl
fcmovbe
pop
into
and
xchg
sbb
sub
mov
push
aam
mov
mov
lds
add
stos
jecxz
mov
or
adc
xchg
pop
repnz
mov
pop
rcr
cli
rclb
xchg
cld
mov
js
out
stos
sbb
adc
push
rcll
sbb
pop
sub
pusha
and
push
inc
aaa
inc
shrb
xor
iret
idiv
mov
mov
divl
jb
pop
iret
xchg
jg
xchg
xchg
ret
fs
imul
lahf
jecxz
push
cmp
or
xor
out
mov
rcll
mov
jo
sbb
cltd
cmp
ret
jmp
loop
xor
aam
and
pop
loop
ret
int3
notl
out
les
lret
lods
and
sbb
push
mov
js
push
cmp
or
es
mov
test
sub
add
sbb
outsb
mov
sub
mov
or
jle
xchg
test
stos
test
xchg
jo
pop
mov
or
int3
sub
js
outsb
aas
sub
sub
lds
movsb
loop
inc
jge
arpl
mov
mov
out
inc
mov
fisttpll
orl
inc
bound
fwait
pop
cwtl
push
cmovs
stos
xchg
jp
dec
lea
test
sbb
ror
fadd
jg
push
mov
in
pop
add
in
fcoms
adc
mov
aaa
fsubrs
push
sbb
les
or
add
icebp
dec
daa
jne
subb
xor
ss
sbb
shlb
xor
adc
push
dec
lods
jne
jbe
push
jp
jecxz
jmp
and
inc
leave
les
aaa
pop
ja
xlat
movsb
or
push
test
push
imul
js
sbb
jg
and
mov
sbb
sub
repz
test
cmp
sub
jp
repz
ds
push
int3
sbb
adc
aas
arpl
add
call
mov
daa
ss
pop
jp
jbe
jbe
xlat
xchg
lods
pop
add
pop
cmp
dec
xor
xchg
pop
lret
insb
fistps
pop
jecxz
mov
shrb
mov
sub
xor
jmp
fistl
mov
mov
pushf
jge
or
inc
jno
and
arpl
aad
aam
or
mov
pop
in
or
add
rclb
dec
push
jge
les
ds
cli
and
rol
or
cmpsb
lea
xchg
pop
pushl
das
push
fisubrs
je
les
movsl
imul
jle
pop
test
mov
inc
mov
das
sbb
addr16
dec
mov
push
das
jge
push
jno
or
mov
enter
cmp
mov
or
cld
mov
mov
dec
or
cmp
jecxz
push
loop
pop
or
dec
fistl
jl
shll
ss
mov
mov
mov
loop
fisttpl
enter
push
sbb
or
adc
rorb
cmp
loop
dec
sub
inc
add
pop
arpl
das
insb
dec
enter
push
insl
repnz
aad
lods
outsl
adc
enter
lods
sub
sahf
addl
lret
fisubrs
fildl
int3
loop
add
call
out
jae
shll
jl
fxch
mov
fistl
das
leave
sbb
pop
aas
stos
rcl
into
cmp
fldenv
lahf
sti
cli
sbb
es
gs
sbb
sub
out
repz
mov
cmpl
mov
dec
mov
stos
sbbl
push
out
fistl
or
cmp
xchg
lret
insb
popf
add
daa
in
adc
call
sbb
or
in
jo
stos
dec
pop
and
adc
or
addr16
test
lret
loop
jmp
push
sbb
add
call
cmp
nop
jae
imul
lret
or
in
repz
les
fsubr
push
pop
adc
cmp
mov
loopne
cltd
ljmp
loop
xchg
sub
ljmp
or
sbb
mov
cmp
sub
xchg
adc
out
dec
sub
not
pop
xchg
sbb
xchg
inc
adc
or
sub
xchg
icebp
ljmp
ljmp
add
fwait
daa
stos
adc
adc
inc
jmp
adc
cli
ljmp
and
mov
pop
in
out
dec
mov
or
mov
sub
xchg
repnz
jecxz
mov
xchg
cmc
mov
clc
mov
subl
sub
stos
scas
pop
ds
cmp
sbbb
cld
pop
test
mov
push
xchg
and
call
daa
sbb
add
imul
and
cmp
inc
add
inc
mov
insb
call
add
jl
imulb
xor
es
call
mov
imul
in
leave
push
sbb
mov
lahf
outsb
add
jmp
pop
and
in
jo
stc
cmp
out
mov
ds
mov
inc
add
shll
cmpsb
mov
in
mov
mov
cltd
aam
sbb
sub
adcb
sub
add
sarl
int
sub
sub
push
dec
or
stos
or
sub
lcall
stos
outsb
hlt
shrb
inc
sub
scas
popf
lret
mov
jmp
shr
test
out
mov
sub
mov
arpl
psrad
sub
push
scas
stos
insl
rorl
loopne
shll
stos
psraw
in
jno
lret
fildl
lret
popa
push
cwtl
pop
fsubl
ljmp
mov
jbe
and
loop
mov
stos
daa
jne
add
dec
gs
in
loop
leave
cmp
sti
sti
pop
in
outsb
jg
xchg
push
sbbl
or
dec
arpl
or
insb
ret
sbb
add
or
mov
cmp
mov
pop
fwait
int
subb
punpckhbw
add
dec
sbb
pop
cltd
iret
cld
dec
xchg
dec
add
jl
cli
jl
in
das
lea
aaa
push
leave
hlt
mov
vrsqrtps
push
aas
loopne
inc
movsl
cmp
psubb
movsl
mov
idivl
lcall
xor
ljmp
sarb
gs
mov
cld
and
or
orb
adc
ret
hlt
jns
in
mov
sub
mov
jecxz
lret
rorb
sbb
mov
inc
je
leave
insb
dec
dec
arpl
cli
data16
push
loopne
test
in
arpl
stos
lahf
dec
jmp
cmp
sub
or
iret
mov
jg
les
adc
jb
mov
pop
dec
jmp
in
ljmp
dec
xor
mov
sbbl
sti
mov
aaa
movsl
cmp
xor
in
push
inc
jbe
call
inc
adcb
daa
adc
xchg
addb
xchg
dec
sub
mov
xchg
into
cmp
mov
ret
imul
shll
out
rcl
fcoms
cli
lods
loopne
cmp
insl
dec
sahf
add
xchg
adc
push
testb
sub
imul
push
insl
jmp
push
push
mov
xchg
inc
add
xor
mov
popa
test
addr16
adc
lret
fmul
lods
jl
ret
ficoms
loopne
popf
sbb
adc
mov
aas
xchg
pop
into
sub
lahf
rolb
cli
lods
shl
or
rorb
lret
add
daa
push
bound
enter
out
and
int3
sub
adc
cld
pop
mov
fcomi
jae
lcall
push
push
test
shl
xor
or
lcall
sub
and
les
in
xchg
or
push
hlt
dec
push
stos
js
adc
ds
bound
repz
mov
cmp
cli
add
rcrb
test
dec
ret
ret
pop
xor
insl
fmulp
imul
mov
fdivrl
lcall
sub
bound
pushf
cmp
mov
mov
or
fisttpll
stos
xchg
ss
cli
xchg
push
push
pushf
push
sub
lods
ss
repnz
jno
push
lcall
mov
add
lods
ror
rcrl
push
rclb
fsub
data16
and
test
and
pop
rcll
fwait
movsb
fsub
and
dec
lahf
aad
push
mov
loop
mov
lret
cltd
subb
mov
int
sahf
sarl
mov
mov
shlb
pop
sbbb
rorl
and
psllq
cs
cmp
fwait
in
ret
mov
arpl
sbb
push
les
repz
rorb
lods
xor
push
sub
lret
sub
jl
pop
shll
dec
jmp
jmp
xlat
out
sbb
insl
ret
sbb
adc
out
or
push
aam
lahf
ret
sub
sub
scas
pop
fisubs
and
push
mov
jb
fstpl
call
inc
jmp
push
xchg
addr16
mov
int
shrb
into
popa
insb
sub
dec
or
sahf
lds
test
dec
adc
orb
mov
xchg
cmp
jl
mov
xchg
sub
cmp
bound
sbb
out
mov
add
rcr
sbb
mov
cmc
mov
sbb
lcall
test
push
mov
out
jge
push
loope
mov
xchg
sti
mov
adc
sub
jl
aaa
adc
cmp
and
add
jecxz
xchg
cli
inc
xchg
mov
test
adc
fs
sahf
adc
iret
rcl
xchg
mov
in
pushf
or
mov
push
ret
fs
stos
pop
sub
add
mov
scas
xchg
adc
scas
push
pop
mov
leave
cmpsb
push
cld
out
movsl
xchg
fsubrl
ljmp
into
rclb
loop
aad
inc
negl
pop
xchg
fmulp
cwtl
pop
push
dec
jle
pop
cmp
cli
mov
adc
mov
xor
mov
mov
mov
or
or
push
fsubrs
shll
inc
cmpsl
sub
dec
dec
ds
adc
dec
push
push
ds
pop
mov
xchg
xor
mov
sub
fucom
shlb
inc
sbb
dec
nop
in
aaa
bound
cltd
pop
dec
push
pushf
mov
icebp
mov
or
jb
mov
adc
add
mov
popa
cmp
push
inc
ret
ja
pop
les
jg
notl
aaa
ficomps
xor
jnp
xchg
jmp
pop
jle
daa
imul
xchg
arpl
lds
mov
bound
pushl
sub
cwtl
push
les
cltd
lret
xor
push
test
inc
lret
xor
popf
lret
pop
test
shl
dec
add
cmp
mov
jp
mov
pusha
out
sub
xlat
inc
jge
cmp
mov
inc
dec
and
adc
xchg
sub
jns
jmp
into
fsubr
out
sbb
scas
cmp
mov
pextrw
mov
shl
add
orl
ret
xchg
jno
in
subb
gs
pop
mov
jno
adc
ds
imul
pushf
pop
inc
xor
jle
rorb
lcall
adc
cmp
les
xchg
jp
sub
lds
xor
imul
or
or
dec
pop
mov
lods
fildl
outsl
jge
xchg
es
insl
sbbb
leave
das
and
push
jmp
in
test
pop
mov
sbb
mov
pushf
bound
mov
push
cmp
pop
repnz
mov
mov
cvttps2pi
mov
inc
mov
dec
enter
cmpsl
inc
dec
push
pop
cltd
xchg
popa
sub
movb
inc
fiaddl
dec
xchg
les
notl
shll
cmpb
sbb
sub
push
mov
ror
push
push
mov
es
shrb
xchg
in
sbb
add
push
sub
outsl
sub
repnz
mov
add
jnp
push
sti
xchg
jge
shrl
adc
or
jp
in
test
idiv
mov
nop
dec
mov
push
add
lret
stos
jne
mov
sti
push
fsts
mov
or
cli
scas
pop
inc
gs
in
in
and
loop
cli
cmpsl
aad
mov
cmp
lods
mov
xlat
cmp
mov
cmpsl
pop
loop
std
pop
lods
jg
inc
xchg
loop
es
ficoml
enter
aaa
xchg
mov
ds
adc
mov
inc
pop
lret
ret
repnz
insb
lret
rolb
mov
pushl
movsb
xchg
dec
and
lods
mov
les
sarl
test
adc
dec
fwait
lods
jne
jo
and
andb
in
dec
jl
rsqrtps
xchg
lahf
les
hlt
test
jbe
aam
and
or
lods
sbb
mov
mov
insb
xor
inc
inc
mov
sub
push
enter
xor
push
xor
dec
push
xchg
fmul
in
inc
or
popf
pusha
out
and
ret
push
scas
loop
movsl
lods
inc
test
addl
xchg
inc
sub
xchg
jnp
iret
fwait
sbb
imul
insl
jl
push
outsl
or
mov
cwtl
mov
leave
mov
xor
lcall
testb
ret
movsl
lret
push
or
cmp
jnp
xchg
cmp
fcoml
popa
subl
mov
mov
aad
jno
push
fs
mov
rclb
jo
cmp
push
cli
into
aad
mov
test
inc
fstps
int
mov
sub
cli
add
loopne
sbb
lcall
mov
cltd
or
lods
add
xchg
or
cltd
xchg
pop
loop
cmp
xor
and
jp
test
sub
xchg
jnp
add
push
pop
push
push
ret
push
and
push
jle
roll
inc
ss
cmp
aam
aas
mov
fadd
sbb
xchg
roll
sub
push
sub
ret
xchg
mov
push
ret
xchg
pop
jle
cmp
sbb
lea
out
lea
mov
lds
add
nop
cli
inc
icebp
rcrl
or
jp
jne
cwtl
xor
out
fsts
repz
xor
mov
xlat
mov
mov
sbb
shrb
jecxz
push
ret
stos
shrl
xchg
add
push
ds
jmp
xchg
loope
out
leave
out
test
xchg
daa
outsl
jle
outsb
in
icebp
pop
jnp
mov
jmp
sbb
sub
cmp
jbe
stos
pop
negb
xchg
push
mov
shll
ret
push
outsl
mov
jge
loopne
xor
mov
imul
cwtl
sub
push
stc
ss
xor
and
cmp
cwtl
mov
ficoml
adc
pop
mov
sbb
mov
push
dec
pop
enter
mov
mov
mov
xchg
jne
sub
test
stos
push
dec
push
or
pop
movsb
jnp
test
jle
adc
fcoms
add
fstps
popf
cmp
mov
hlt
cmp
je
xchg
ds
mov
movsb
cmp
jns
lcall
dec
dec
cmp
das
jp
pop
into
sub
xchg
popf
sti
sub
hlt
push
jecxz
adc
xor
out
mov
push
sub
inc
shrb
fldt
icebp
inc
mov
pop
test
mov
movsl
out
into
call
mov
movl
add
mov
jbe
xchg
lods
scas
scas
das
mov
scas
out
fdivrl
rorl
int3
movsl
mov
sbb
adc
jl
xchg
std
cmp
in
iret
aam
je
lods
sub
add
testl
pop
aaa
scas
clc
test
xchg
out
sub
xchg
mov
pop
int
lea
pop
ljmp
sub
test
xchg
inc
add
in
mov
lods
in
leave
ljmp
cs
ret
sub
sti
bound
or
sahf
mov
lds
je
cltd
test
in
pop
aam
loop
pop
xchg
jmp
fs
or
insb
sub
data16
jp
mov
push
stos
lcall
daa
cmp
mov
or
or
sahf
mov
notb
arpl
movsb
and
or
and
out
in
stos
xor
push
jb
mov
sbb
add
cmp
sub
out
mov
test
pusha
add
inc
inc
lods
cli
subb
add
push
xor
dec
xchg
fcompl
mov
push
mov
mov
xchg
movsb
mov
push
stos
dec
fnstsw
inc
enter
jge
jae
and
sbb
push
das
jno
popa
sub
mov
scas
jmp
jge
das
loope
cmp
mov
jbe
aad
es
mov
out
inc
cltd
and
pop
cmp
jnp
jae
add
dec
ret
jl
or
adc
dec
shlb
je
les
ljmp
pop
pop
mov
leave
dec
jg
movsb
mov
jl
pop
xchg
lods
cmpsb
mov
in
sti
cs
jne
xchg
mov
jecxz
push
into
fiadds
mov
sahf
stc
push
outsl
inc
fimuls
andb
and
test
pop
loop
adc
add
lcall
or
mov
ret
orb
ss
mov
pop
pop
mov
test
mov
popf
bound
inc
cmc
into
sub
sbb
sar
mov
push
mov
addr16
dec
sub
push
jl
outsl
decl
adc
shll
xor
jmp
cld
xchg
in
sbb
loope
sub
and
or
xchg
out
xchg
js
pop
out
pop
xchg
dec
cli
jb
cmp
jo
ja
adc
mov
enter
sarl
xchg
cmp
pop
cmp
popf
inc
xchg
sbb
jle
jb
popa
sub
jbe
mov
cmpsl
or
cmp
fnstsw
inc
imulb
iret
dec
jge
fisubl
xor
mov
xlat
cmpsl
sbb
dec
jae
xor
jae
sbb
shlb
push
fsubrl
hlt
cmpsb
movsb
mov
mov
aad
inc
pusha
rclb
das
dec
loop
xchg
xor
push
insl
gs
imul
mov
rclb
divl
xor
inc
and
int3
loop
or
test
into
jae
lahf
adc
push
loop
adc
into
pop
mov
sub
jmp
cmp
mov
stc
movhps
lea
push
adc
adc
dec
mov
push
pop
cltd
paddusb
pop
jmp
imul
sub
and
adc
push
arpl
cmpsl
pop
js
insb
rol
mov
mov
or
xor
test
sub
adc
xor
pop
imul
js
out
sbb
insb
aas
sbb
mov
xlat
movsb
push
push
cmp
push
mov
lret
out
iret
pop
mov
aas
add
rcrb
fcompl
push
insb
inc
ds
lcall
cld
pop
jae
sbb
movsb
addr16
push
hlt
xor
mov
add
xor
stos
dec
push
imul
inc
ret
and
aaa
fwait
or
xor
mov
or
pop
test
xchg
fsubs
push
or
push
aas
adc
cmp
gs
inc
fsubrl
adc
addl
xor
lret
mov
cmpsb
test
test
xchg
pop
inc
addl
leave
enter
pushf
sub
scas
stos
arpl
addr16
ljmp
push
stos
loop
pusha
or
lock
cs
inc
push
mov
test
ja
nop
adc
aaa
sub
stos
rorl
xchg
stos
jno
jnp
pushf
or
inc
movsb
jae
inc
cltd
sbb
frstor
dec
sbb
mov
jne
pop
pop
jb
mov
cmp
adc
push
sbb
mov
mov
jnp
shlb
pop
lret
add
aas
cmpsb
push
push
push
sub
push
push
in
cmp
jg
call
leave
and
mov
mov
pop
pop
shll
mov
lods
loopne
lret
mov
pop
push
sub
loope
lods
cli
jecxz
ljmp
mov
gs
mov
pop
in
sbb
push
test
js
xchg
sub
xor
je
lods
mov
pop
xchg
mov
xchg
sub
adc
mov
stos
and
sub
ljmp
lods
and
or
xor
pop
hlt
push
loop
jp
dec
fistps
pop
lcall
lds
bound
ss
dec
test
dec
inc
xor
cmpsl
inc
mov
push
sub
mov
jp
int
push
imul
xchg
and
xchg
lret
jno
sti
lods
pop
cmp
or
mov
div
xor
insb
ret
outsl
mov
push
popl
xlat
and
push
loop
in
imul
subl
pop
cld
bound
rcrb
test
jnp
xlat
fimuls
jg
xchg
test
dec
outsb
mov
push
push
sbb
push
js
cld
xor
enter
nop
or
hlt
out
xchg
sub
push
dec
sahf
fmul
stos
dec
push
aaa
jmp
cli
adcl
xchg
push
lods
scas
lds
or
and
jmp
pusha
insb
pop
aam
or
push
push
and
sbb
cmp
pop
sub
jmp
jle
repz
lds
mov
rol
gs
and
out
rcl
out
fwait
push
roll
sbb
fs
ljmp
lds
rorl
dec
and
into
shl
loop
repnz
xor
push
out
cmp
sub
adc
mov
mov
and
and
ljmp
bound
or
adc
je
inc
outsl
pop
pop
test
jecxz
into
sub
in
iret
scas
cld
push
mov
gs
sbb
xchg
mov
daa
in
or
and
imul
adc
stos
loop
sahf
inc
scas
mov
mov
cwtl
les
aam
jmp
repz
inc
insb
lods
cmpsb
sbb
bound
imul
bound
mov
mov
push
push
jnp
iret
lea
push
adc
loop
test
bound
or
arpl
wbinvd
movsb
push
pop
add
cmpsl
test
sahf
std
lahf
push
fdivr
xchg
ds
enter
out
push
cmc
ljmp
inc
mov
cmpb
and
js
imul
scas
mov
push
les
test
out
cmpsb
push
dec
rorl
ret
dec
mov
negl
ret
lret
cmpb
sbb
pop
fadds
mov
dec
inc
xor
jae
sub
add
sub
and
inc
shrl
jle
jp
iret
jecxz
inc
jns
push
jmp
adcb
inc
iret
cmp
mov
scas
sub
jae
or
ret
cmp
mov
vmread
out
fwait
xchg
and
xor
jl
xchg
inc
sbb
add
xchg
ret
pop
or
mov
inc
ljmp
jb
idivb
sbb
fisttpll
inc
sub
scas
xlat
or
pusha
dec
int3
mov
mov
pushf
mov
inc
mov
mov
addb
fldl2t
mov
inc
cld
in
sbb
cmp
fnstenv
add
xorl
bound
movsb
or
lcall
or
aaa
loop
cli
ret
cmp
cwtl
sahf
inc
cmpl
add
aam
out
cmp
fcmovnb
pop
inc
mov
or
mov
test
xlat
into
jecxz
ljmp
pop
push
or
ret
hlt
adc
mov
pop
sub
lret
add
imul
push
clc
cmp
nop
add
pop
push
lcall
push
pushf
cmp
adc
inc
push
or
nop
imul
loop
add
mov
mov
mov
loope
dec
insb
xchg
jbe
pop
pusha
xchg
insb
jnp
stc
fnstsw
xchg
sbbb
push
inc
mov
xor
lret
ror
xchg
push
xor
mov
jp
in
rorl
out
cltd
push
ja
add
and
and
les
bound
and
sub
arpl
push
cli
push
inc
and
cwtl
movsb
push
jno
fstl
inc
and
cmp
in
mov
dec
ljmp
mov
add
cmp
in
lret
push
call
xchg
xchg
jmp
rcll
scas
jmp
adcl
pushf
stc
out
fidivl
aam
in
movsl
insl
sub
cmpsb
in
sub
fadd
mov
or
push
clc
xchg
aas
pushf
arpl
stos
shrl
mov
or
lods
lcall
pushf
mov
lret
mov
sbb
cltd
xor
loop
ss
scas
mov
jecxz
push
fcmove
xchg
pop
stos
adc
fimull
sbb
fsubl
inc
pop
xor
and
xchg
loop
lcall
push
arpl
les
mov
push
add
nop
lods
rcrl
add
and
sub
sbb
mov
mov
scas
daa
xor
outsl
cli
fsubs
mov
cmpsb
stos
and
cmc
push
and
lock
pop
mov
add
subb
jb
insb
lock
rorb
insb
add
ss
mov
fisubrl
cmpsb
cmp
sbb
dec
adc
into
adc
sbb
sahf
pop
dec
mov
ror
cltd
or
fisttpll
xchg
mov
mov
or
sti
call
shll
sbb
mov
sbb
es
pop
jne
jl
mov
loop
aaa
xor
pop
out
cmpsl
inc
fiadds
outsb
or
mov
lods
jnp
or
test
pop
push
pop
cmp
xlat
xor
test
mov
mov
push
push
loop
sbbb
adc
outsl
or
sub
cltd
push
add
mov
or
pop
or
cli
jmp
test
les
pop
jge
pop
out
sub
sub
stos
lret
adc
std
lea
repnz
sub
loop
ljmp
sbb
movsl
jge
insb
jns
aas
pop
xchg
sbb
mov
mov
mov
and
and
movsl
lret
lret
sub
stos
dec
cmp
adc
fprem1
dec
in
lcall
in
mov
cmp
out
sub
mov
cmc
sbb
jbe
data16
pop
adc
enter
or
xchg
addr16
push
adc
jo
js
mov
js
push
inc
adc
dec
xor
cwtl
add
sub
fisubl
mov
orb
loop
sbb
cmpsl
xor
enter
mov
loopne
ljmp
cmpsb
stos
int3
lods
scas
mov
xor
cmp
out
imul
inc
or
arpl
and
in
fidivrl
xchg
inc
lret
or
mov
xchg
into
rcl
ret
mov
stos
rorb
lea
cmovg
loopne
mov
push
loop
mov
cmc
adc
pop
js
mov
jmp
xor
sbb
jae
out
aad
loop
test
aam
subl
cld
jp
outsl
add
jl
scas
cmp
and
nop
jl
pop
cmpsl
aad
jb
mov
test
ljmp
adc
iret
mov
sub
xchg
cld
pop
mov
dec
push
ss
lahf
pop
lahf
scas
cltd
or
sahf
jno
ror
or
sub
mov
dec
sbb
aad
cvtps2pd
or
jo
push
pop
shlb
faddl
xchg
sub
lock
pop
aas
js
or
and
enter
push
xor
dec
jmp
pop
and
iret
xorl
repz
fildl
dec
pop
and
xchg
sbb
inc
and
hlt
jne
nop
outsl
ljmp
jmp
add
shlb
or
jbe
jecxz
stos
call
xorl
iret
divb
out
out
andb
sbb
int
scas
jbe
cmp
je
jp
stos
cmp
mov
pop
sbb
nop
jmp
rol
dec
sbb
xchg
push
sub
cmp
jl
dec
add
fisttpll
stos
stos
inc
dec
sahf
push
mov
and
mov
fs
add
fmulp
add
lea
or
inc
jae
adc
mov
insb
rcrl
lds
xor
cmp
fldcw
dec
sbb
mov
dec
fisttps
lcall
add
test
push
mov
push
mov
adc
xchg
mov
sbb
inc
push
jb
scas
addr16
xchg
pop
push
sub
jnp
add
dec
cld
fsubrl
push
lods
add
pop
push
iret
sti
sbb
sbb
push
ret
or
push
xlat
iret
xor
jp
cmp
loop
push
add
in
out
insb
mov
inc
pop
fdivs
xlat
les
adc
mov
shrb
add
and
scas
lock
jmp
out
aad
push
inc
xlat
pop
leave
ss
fstpt
mov
leave
jne
pop
in
or
sbb
jbe
mov
pop
jne
rcl
mov
push
xlat
sahf
add
add
notb
mov
push
addr16
mov
push
mov
fadds
jne
mov
push
mov
push
dec
inc
mov
ret
dec
adc
xchg
int3
push
and
push
insb
je
stos
inc
jge
bound
add
scas
sbb
cmp
mov
lods
in
xor
dec
add
add
insb
out
inc
or
out
mov
shll
xchg
dec
aad
mov
lret
push
int3
add
scas
test
out
je
test
mov
xor
dec
loop
mov
dec
test
cltd
dec
and
aaa
arpl
adc
lea
popf
into
or
dec
decb
lods
cmp
adc
iret
jecxz
movsl
adc
test
insl
mov
das
jmp
add
xchg
call
lods
fidivrs
push
lock
loopne
dec
imul
mov
mov
jo
in
push
cli
shll
in
add
scas
jmp
imul
or
sub
das
enter
test
adc
pop
test
dec
jne
nop
adc
aam
sub
or
add
call
push
mov
sub
cmpsb
mov
add
pop
jne
jg
sub
ljmp
add
popa
sub
dec
je,pn
and
push
sbbb
call
scas
out
pop
pop
jmp
dec
xor
push
push
cmp
inc
fiaddl
outsl
repnz
repnz
aaa
stos
aaa
bound
adcl
stos
dec
sbb
push
ret
push
dec
aam
adc
adc
pop
mov
testl
add
sahf
gs
and
jmp
inc
xor
xchg
cmp
cs
push
sahf
fsubrs
add
out
nop
js
shrb
add
lea
out
mov
push
movsl
outsl
inc
or
and
outsb
ds
push
mov
lcall
mov
push
add
pop
adc
and
int
in
jmp
adc
and
or
pusha
adc
mov
pop
in
mov
imul
test
mov
mov
inc
dec
repz
dec
pop
pop
out
mov
out
fldt
fucomi
cmp
push
test
int3
xor
mov
dec
cmp
les
mov
fistps
lret
arpl
or
jae
loopne
cmp
jmp
outsb
and
cli
add
insl
insb
out
or
inc
or
jge
push
frstor
cmpl
dec
repnz
mov
cmp
lret
sbb
lock
dec
push
imul
jge
outsb
push
popf
sbb
push
xchg
mov
inc
jbe
ret
sub
mov
movsl
in
xor
ret
cmp
fsts
xchg
arpl
push
popf
mov
js
lods
add
or
scas
ret
sub
or
jb
scas
les
popf
icebp
lds
mov
gs
push
jecxz
sbb
mov
cmp
adc
fwait
bound
inc
faddl
mov
jb
xchg
xor
outsl
sub
popa
jle
jo
inc
mulb
cmp
insb
and
xorb
mov
aaa
pop
xor
imul
lcall
test
fcom
add
add
movsl
stc
add
xor
mov
cmc
fsub
hlt
push
sbb
sti
push
aas
jp
pop
and
jmp
test
movsb
or
ret
sub
sbb
das
sbb
sbb
adc
jb
inc
cli
into
cmpsl
xchg
jmp
inc
aam
inc
add
ret
dec
loop
mov
dec
xor
xchg
mov
push
repz
add
test
xchg
inc
scas
out
inc
jp
xorb
in
sbb
xchg
repnz
cli
sub
out
not
cmp
jl
pop
inc
and
in
pop
inc
loopne
test
sbb
sub
arpl
stc
in
mov
arpl
mov
jne
inc
and
cmp
cmp
sub
inc
testl
daa
jbe
loop
or
in
cmp
xor
andl
push
pop
test
aam
mov
sbbl
push
xchg
xchg
jmp
inc
jl
cmp
outsl
sahf
mov
movsb
mov
dec
cwtl
mov
adc
add
and
shll
mov
outsb
mov
loop
jmp
mov
sub
jecxz
xor
scas
cltd
imul
sar
adc
sbb
inc
sbb
inc
add
pop
mov
sub
xor
gs
test
sti
fidivrl
lcall
andb
inc
imul
add
lret
add
sbb
jb
bound
ret
lret
or
cmpsl
loopne
cmove
popa
jecxz
scas
ja
insb
minps
in
scas
and
add
xchg
sub
and
push
push
arpl
stos
jns
or
mov
stos
mov
in
es
out
lret
call
add
std
in
or
lods
jecxz
popf
push
xor
or
adc
adc
loop
push
mov
shlb
pop
decb
mov
lret
stos
sbb
icebp
xchg
dec
fldenv
lret
mov
mov
xchg
ret
out
add
push
sbb
mov
or
jae
mov
mov
jo
jns
enter
inc
mov
enter
push
iret
loopne
xor
mov
mov
ljmp
cli
xchg
test
xchg
and
fwait
aas
leave
test
mov
adc
scas
adc
pop
fwait
or
imul
bound
lsl
popa
pop
fldcw
loope
int3
xorl
pushf
jecxz
imul
insl
cmp
shl
aam
ret
mov
add
sahf
pop
push
mov
adc
inc
pop
lahf
and
jmp
aas
jo
jmp
sbb
push
mov
sbb
xor
pop
enter
scas
loop
or
jmp
into
inc
outsb
cli
xchg
mov
pop
and
shr
stos
mov
inc
shrl
xchg
fsubp
jg
jl
jnp
test
lcall
add
imul
call
inc
pop
mov
ljmp
shll
std
jmp
rolb
cmpsb
jge
aam
out
jmp
pop
xor
add
ficompl
sub
into
sub
or
sub
and
outsl
dec
xchg
fimull
pushf
xor
dec
out
insl
xchg
ret
into
addr16
mov
test
jle
pusha
add
fsubl
imul
fldcw
add
xchg
hlt
aam
dec
pop
in
cmc
scas
jns
jmp
jp
lods
mov
insl
daa
push
ljmp
mov
sub
mov
xchg
mov
out
faddp
daa
dec
inc
int
mov
testb
scas
lcall
je
cld
outsb
jecxz
das
imul
xchg
mov
push
lahf
mov
mulb
mov
dec
inc
xor
out
push
ret
pop
loop
dec
mov
arpl
sbb
add
test
mov
mov
pop
das
sub
sbbb
mov
cmc
das
fisubrl
lret
sahf
jle
xor
rcrl
mov
fdivr
xchg
cli
pop
bound
fbld
sub
pop
mov
test
push
leave
loop
sbb
inc
notb
mov
out
in
out
sub
or
in
xchg
cmp
mov
mov
add
sbb
pop
jmp
dec
in
xor
stos
lods
add
sub
popa
inc
loop
push
or
or
or
sub
outsb
je
out
mov
adc
or
push
insb
lea
mov
mov
lods
stos
cmp
or
inc
push
add
je
test
mov
sbb
pop
out
xor
push
rcl
into
lods
sub
ret
jge
adc
and
push
aaa
sbb
and
mov
mov
imul
jmp
mov
xor
xlat
test
roll
mov
aad
test
cmp
int
lret
push
mov
adc
lret
sbb
dec
dec
mov
or
in
std
shll
sub
jbe
ret
xchg
jne
add
adc
fdivs
add
sbb
clc
dec
aaa
insl
loop
xor
jge
add
add
ret
lds
insb
ljmp
ret
adc
test
ljmp
inc
jns
outsb
cmp
rcll
push
stos
push
outsl
jmp
xor
inc
mov
les
pop
test
into
test
mov
sbb
insl
push
mov
test
mov
scas
jge
repz
dec
lcall
jbe
pop
jo
mov
fcomip
mov
scas
int3
xchg
daa
push
stc
or
ror
or
sub
mov
mov
ret
popa
pushf
in
adc
jmp
mov
push
sub
jecxz
inc
add
test
sti
sbb
jg
sbb
jae
sbb
mov
or
jl
mov
in
inc
add
xchg
pop
pop
test
cmp
jb
sti
and
leave
out
push
insl
mov
es
jle
cli
or
cmp
dec
gs
insl
aam
movsl
leave
adc
sti
dec
cmpsb
mov
arpl
mov
xorb
mov
dec
xor
pop
icebp
aaa
xchg
pop
mov
and
subb
andb
imul
mov
sub
sub
sahf
lcall
insl
inc
pusha
and
push
push
clc
clc
mov
ljmp
jge
sub
mov
bound
and
mov
js
test
lret
dec
cmp
xorl
push
test
out
mov
in
es
lcall
sub
pop
inc
into
mov
push
jb
mov
add
dec
pusha
lea
adc
std
loop
stos
push
outsb
push
jle
sub
rcrl
jmp
jl
cli
dec
inc
in
fldt
dec
data16
cmp
or
dec
fmulp
clc
adc
dec
adc
mov
bound
xchg
inc
pop
aas
sahf
xchg
inc
mov
jmp
fcoml
ja
pop
jo
fisubrs
lods
xor
addr16
shr
xor
sbb
mov
jmp
add
testb
mov
pop
xor
xor
sbb
fstpt
lods
pusha
lock
pop
xor
fisubrl
mov
mov
mov
out
pop
icebp
int3
test
mov
cmpsl
out
popf
aad
or
push
mov
ret
cli
out
mov
xor
pop
ja
and
inc
xchg
cmc
and
cmp
mov
add
dec
imul
mov
pop
xchg
xorl
scas
repnz
scas
jae
and
stos
add
jp
movsb
or
sbb
mov
mov
lret
in
mov
loop
test
popa
push
jecxz
rolb
mov
rcrb
add
ss
add
sub
cs
imul
sub
imul
push
dec
and
pop
fisubrl
push
cli
faddp
outsl
arpl
notb
jl
pushf
aad
imul
sub
jmp
xchg
sub
sbb
arpl
stos
add
jp
test
cmp
in
push
inc
imul
mov
mov
sbb
sbb
xchg
cmp
daa
test
lds
xchg
sub
cwtl
loop
pushf
stos
repnz
add
mov
subb
out
jnp
in
mov
sahf
outsb
test
lods
bnd
push
and
or
int3
or
sub
mov
mov
or
jp
ja
jb
xlat
adcb
daa
insl
je
and
push
mov
stc
mov
sti
popa
aas
rorl
jae
mov
mov
adc
mov
loop
cmp
add
ljmp
ret
mov
or
adc
repz
mov
and
cmp
cmc
and
push
outsl
repnz
js
outsb
sahf
das
lcall
arpl
movsl
push
jmp
inc
cli
lds
repnz
imul
out
test
mov
jbe
ja
mov
cmp
pop
dec
push
adc
dec
jp
mov
adc
test
cltd
dec
sbb
xor
stos
cmp
lods
adc
stos
in
xchg
xchg
sbb
cmp
rorb
or
push
fnclex
or
test
pop
xchg
dec
push
or
ljmp
test
sub
pop
rcrb
inc
rcrb
repnz
lea
arpl
cwtl
hlt
mov
fldt
adcb
loope
and
fisttpl
dec
loop
or
ss
cmp
imull
dec
movsb
xchg
popf
les
inc
iret
subl
testl
arpl
inc
mov
cmp
mov
repnz
adcb
int
lret
sbb
jp
in
adc
scas
jmp
jb
ljmp
sub
dec
out
adc
ret
mov
sar
jl
nop
and
int
or
mov
lea
imul
sbb
sub
orl
jb
sub
jbe
cli
pusha
xor
cltd
lods
call
jbe
lds
sbb
shlb
jle
sarl
push
push
cli
push
les
enter
jecxz
inc
out
add
cmp
adc
push
dec
in
inc
lock
test
dec
fistpl
and
push
mov
inc
mov
dec
jbe
dec
mov
fcmovnu
in
sbb
push
jle
mov
test
push
sub
cmp
jne
mov
sbb
jmp
mov
stos
sub
imulb
call
hlt
imul
cld
fucomi
orl
ficoms
icebp
sub
push
jecxz
xor
in
int3
pop
push
test
enter
push
push
shrb
fndisi(8087
cmp
sub
das
and
jle
repz
mov
jl
test
jmp
adc
imul
dec
aad
pop
mov
xor
dec
gs
pop
lock
lcall
jb
xor
fadd
inc
stos
ljmp
out
cltd
push
test
mov
jno
mov
sti
push
ds
incb
dec
inc
push
inc
inc
decl
sti
mov
sub
cli
movnti
inc
mov
add
and
sub
orb
cli
arpl
push
inc
mov
fstpt
jecxz
ja
ljmp
fstpt
out
je
xchg
cs
rolb
mov
lret
insl
xchg
or
mov
sbb
dec
push
out
mov
jp
jg
mov
call
ljmp
xor
add
xchg
shrl
lea
out
das
sbb
push
push
repnz
sbb
xchg
pop
pop
push
repnz
push
cltd
mov
jmp
rcr
jmp
ja
outsb
stos
loop
ljmp
pop
aam
pop
dec
stos
mov
add
mov
outsb
aaa
into
cli
add
lret
mov
mov
pop
lods
mov
mov
stos
je
in
cli
mov
mov
pushf
or
out
add
sbb
mov
push
imul
xlat
insb
pop
xchg
clc
aam
out
mov
xor
hlt
sbbb
pop
push
rol
aad
xchg
jmp
sbb
sbb
leave
mov
outsb
mov
adc
jecxz
jae
and
frstor
sarl
dec
insl
inc
pop
push
popa
sbbb
xor
loop
subl
dec
xor
jne
inc
stos
mov
lods
int3
mov
xchg
pop
xor
jge
ffreep
push
fsubp
xor
in
mov
xchg
dec
adc
mov
data16
rclb
push
cmp
xor
mov
mov
sbb
push
or
cwtl
movsb
out
hlt
loopne
cld
xchg
andb
lsl
push
cs
inc
mov
cmpsl
mov
cs
adc
jne
addb
loop
jmp
inc
shlb
mov
ret
out
test
inc
and
leave
add
jo
sbb
cmpl
dec
repnz
cmpb
sub
rcll
lock
outsb
sub
jnp
xchg
mov
movsb
imul
aas
into
mov
cmp
sub
outsl
andl
sahf
test
and
popf
adc
mov
mov
fnstcw
sub
pop
fstpt
xlat
xchg
add
xchg
jae
push
enter
jns
hlt
xor
or
hlt
sub
jne
sti
fdivl
test
mov
add
out
cmp
adc
xor
fnstsw
popaw
or
jp
mov
adc
test
mov
dec
mov
lock
stos
jns
push
mov
fiaddl
enter
xor
jle
scas
inc
or
inc
mov
fidivl
fidivrl
lcall
or
pusha
mov
int3
mov
push
aas
repz
add
insl
roll
loop
mov
sbb
call
or
push
adc
ret
xlat
mov
popw
sti
jns
je
std
fimuls
sbb
sahf
out
fiaddl
in
jbe
mov
or
movb
icebp
add
push
sarb
in
rolb
mov
or
jmp
pop
mov
divb
or
push
inc
mov
push
test
fwait
jb
jmp
cli
mov
jo
push
jle
in
mov
push
and
mov
jmp
push
pop
sbb
arpl
sbb
std
faddl
sbb
mov
popf
cmp
pop
sbbl
ret
rcl
or
inc
sub
mov
and
movsl
or
xlat
insl
mov
mov
dec
mov
pushf
fs
inc
xor
and
aad
push
sub
aaa
cmp
cmp
jmp
xor
rorl
inc
pop
ss
mov
add
xchg
sbbb
sbb
inc
mov
xchg
scas
mov
and
cmp
shll
and
stos
lods
mov
xchg
mov
sti
call
fistpl
test
rclb
in
and
pusha
lods
xor
push
hlt
xchg
add
rol
fmul
add
jnp
pop
add
addr16
es
mov
ret
adc
mov
hlt
dec
sub
lcall
fmull
pop
fnstenv
pop
fldl
fcoml
mov
push
or
stos
or
pop
mov
sbb
sub
dec
insl
mov
or
sbb
sbb
sub
add
insb
or
loop
stos
gs
xchg
orl
sbb
stos
lret
lcall
add
fisubs
mov
mov
addr16
adc
mov
insb
loop
sbb
cwtl
inc
push
fbld
ret
out
sbb
loop
adc
adc
xor
test
xor
cmp
jno
sub
and
and
or
xorb
stos
add
arpl
es
or
arpl
add
mov
in
mov
movsb
pop
and
orb
jecxz
pop
inc
dec
jecxz
xor
or
push
stos
jle
loop
cmp
sbb
int
nop
push
and
call
daa
push
and
call
jbe
mov
loop
stos
rorb
pop
push
dec
icebp
adc
in
push
scas
dec
or
je
dec
hlt
adc
mov
cs
xor
pop
mov
sub
inc
rolb
je,pn
clc
xchg
sbb
movsb
mov
mov
or
push
lret
xor
sbb
add
sbb
outsl
cli
ss
pop
test
mov
cli
popf
and
push
mov
not
add
pop
adc
sar
xchg
mov
imul
push
dec
mov
dec
xchg
mov
push
jle
jecxz
sbb
push
pop
inc
lret
aad
loop
repnz
lret
lock
inc
mov
xchg
adc
stos
repz
ljmp
lods
or
faddp
bnd
cltd
ret
xor
jmp
test
arpl
push
inc
or
inc
ss
fs
xchg
mov
inc
into
stos
sahf
sbb
mov
aaa
fsts
lods
fcomps
sbb
adc
fwait
xchg
mov
dec
test
jle
cmp
out
pushf
lds
rcl
and
cli
or
xchg
and
or
xchg
jecxz
add
xor
ret
pop
insl
shl
push
mov
cmp
or
je
sbb
insb
push
or
and
or
cld
movsl
sbb
pop
jle
ds
movsb
in
dec
hlt
add
aad
stos
adc
xchg
stos
ljmp
push
or
adc
push
and
movsl
xor
into
lock
mov
mov
push
cvtps2pd
lods
mov
stos
pop
fisttpl
mov
test
add
lods
iret
data16
sub
pop
out
fbld
das
je
ljmp
dec
mov
dec
ja
adc
cmp
sub
mov
push
por
ljmp
mov
iret
fs
add
cmp
bsf
loope
fdiv
nop
fwait
or
push
jle
pop
ja
jns
test
sub
enter
insl
mov
or
mov
ret
pusha
adc
ljmp
jp
add
inc
jl
or
pusha
ljmp
test
je
add
or
cmp
xchg
mov
lods
dec
iret
adc
ficoml
enter
or
fisubrl
cmpsl
clc
pushf
mov
xchg
aas
daa
insl
xor
mov
adc
jne
jmp
sbb
mov
test
mov
ljmp
icebp
cs
fmull
pop
in
stos
xor
mov
xchg
sub
in
sub
jmp
cmpsl
test
enter
fs
std
enter
lea
jae
adc
movsl
repz
test
mov
int
push
ret
mov
movsb
call
push
orb
push
rorl
cld
fs
lock
ficompl
pop
cmc
movsl
rcrb
dec
or
cmpl
bound
sub
adc
bound
inc
ja
in
jns
cs
lods
sub
jmp
jb
adc
mov
xrelease
data16
out
inc
adc
int
push
dec
xchg
jecxz
sbbb
imul
mov
pushf
add
or
sbb
inc
lahf
test
out
mov
push
jg
adc
rcr
ret
mov
xchg
fcoml
arpl
push
mov
scas
das
lea
imul
or
pop
sbb
adc
scas
xchg
adc
adc
inc
js
xlat
mov
mov
add
adc
mov
xchg
mov
inc
jns
xlat
jg
dec
adc
leave
arpl
stos
mov
pop
pop
into
out
ret
cmc
xor
inc
and
call
push
or
fs
mov
sbb
fsts
jg
aas
fcompl
leave
sti
repz
mov
les
push
xchg
jmp
testb
sbb
or
dec
jnp
adc
adc
mov
mov
pop
into
pop
sub
aaa
or
jmp
out
jmp
or
sub
loop
in
movntq
out
sub
out
lods
popf
xor
push
pop
pusha
sub
xor
push
xor
jmp
cmpsb
dec
call
stos
ja
jb
mov
dec
sub
cmpsb
icebp
dec
jb
adc
popa
xor
cmpsl
mov
scas
push
dec
inc
cltd
mov
lcall
cmpsb
popa
adc
data16
ror
in
mov
insb
je
jns
pop
cwtl
xchg
jge
pop
andl
stos
and
ljmp
fisubrs
dec
push
ds
mov
xor
jle
xlat
pop
pop
inc
mov
sahf
push
or
pop
push
adc
idiv
mov
scas
fst
mov
xor
sub
ret
lret
aam
adc
jp
inc
xchg
pop
outsl
rorb
jl
cmc
xchg
out
or
ja
or
lret
mov
xor
dec
mov
push
sbbb
and
mov
sub
push
cmp
loop
xchg
xchg
pop
pop
ficomps
jne
std
jle
sbb
ss
xchg
jnp
jbe
mov
out
test
andb
sbb
pop
test
out
add
movsb
and
addr16
ret
ss
insl
fsubl
lods
mov
fmuls
bnd
or
into
dec
lea
dec
out
ret
ljmp
jle
pop
inc
ret
stos
mov
lret
jb
lds
arpl
push
mov
inc
sbb
xor
pusha
mov
xchg
xchg
mov
int3
lods
mov
lea
inc
dec
mov
xor
pushf
xor
arpl
push
cmpsl
mov
pop
mov
lods
scas
dec
xchg
addw
add
aas
daa
and
lods
inc
repnz
pop
and
inc
out
push
loope
xchg
and
mov
js
and
test
push
sti
xor
cmpb
jmp
push
xor
insl
and
movsb
push
ret
push
das
les
push
xchg
pusha
in
pusha
xor
sub
adc
mov
mov
push
push
gs
dec
or
jno
hlt
and
jecxz
mov
dec
rcrl
rep
mov
push
fisubs
sbb
test
push
adc
cltd
imul
sub
subb
ss
pop
out
mov
mov
mov
shrb
gs
inc
ljmp
dec
jecxz,pt
or
dec
dec
push
xor
pop
jecxz
cmc
fisubrs
ret
arpl
repnz
andb
fstp
cmp
outsb
add
mov
pushf
or
mov
ljmp
dec
test
int
or
jmp
movsb
dec
jp
lea
adc
push
ror
cmpsl
inc
jne
les
std
in
cmp
and
clc
add
inc
sub
clc
add
icebp
ret
subl
sub
fsubl
cmp
jecxz
xor
and
adc
mov
aaa
or
cmc
mov
in
cmp
push
insb
mov
mov
bound
xlat
loop
jmp
inc
in
roll
cmp
or
ja
arpl
stc
xchg
outsl
inc
insb
push
out
adc
jmp
push
sbb
adc
cs
dec
sti
fcoml
outsl
xor
adc
insb
fidivl
ds
pop
add
je
enter
addr16
daa
ds
sarb
test
xor
jecxz
sub
xchg
add
ret
aam
lcall
out
shrl
mov
mov
xchg
lods
mov
sub
cld
stc
pop
dec
or
pop
xor
insb
out
popa
jl
bound
jns
out
xchg
sbb
cmp
in
mov
mov
push
sbb
imul
lret
sbb
ret
jg
xor
jno
mov
inc
cmpsb
movsb
arpl
inc
dec
loop
and
ljmp
mov
dec
in
dec
out
mov
jle
outsb
inc
or
mov
inc
mov
js,pn
xchg
sub
jmp
test
sub
inc
mov
les
cmpb
sub
xchg
je
out
int3
mov
add
add
push
jb
cmp
xchg
call
lods
lds
xchg
push
jg
pop
fdivrs
fwait
aam
mov
sbb
insb
shll
push
jl
dec
mov
mov
fbstp
dec
inc
pop
daa
pop
std
lret
cmp
std
movsb
pop
or
jbe
add
hlt
inc
stos
movsl
add
fistps
cmpl
mov
sub
in
pusha
orl
sub
mov
dec
cmp
dec
popa
xchg
scas
insb
jl
mov
xchg
lods
xorps
or
fisubrl
and
mov
rolb
imul
in
push
mov
jecxz
jmp
in
fidivs
jge
sub
pop
adc
mov
sarl
xchg
pop
dec
das
test
cmp
lcall
sub
fsubr
cmp
cmp
sbb
shlb
imul
adc
icebp
xchg
dec
jae
jmp
or
jecxz
scas
pushf
imul
shll
lar
fstpt
push
mov
add
xchg
stos
lods
xchg
aaa
aad
or
adc
xor
mov
xchg
iret
pop
mov
cli
int
sub
inc
aas
mov
sbb
stos
out
jb
scas
xchg
fdivrl
inc
mov
out
and
pop
lret
cmp
in
xor
or
push
pop
nop
push
ljmp
sbbl
xchg
jp
add
add
mov
sub
ret
insb
insl
push
pushf
test
and
jmp
sti
cld
or
push
fwait
lods
clc
push
sub
cmp
push
ret
cmp
or
pop
aaa
pop
sbbl
ljmp
iret
mov
adc
pop
push
jecxz
sbbb
das
lods
inc
das
hlt
cmp
scas
insb
ja
inc
enter
in
out
push
pop
sbb
cmp
stos
xchg
sbb
cmp
sub
pop
lds
jmp
in
in
and
aas
lahf
imul
jae
negb
shrl
push
xor
into
insb
into
orl
shrb
out
sbb
shrl
mov
push
popa
jl
jecxz
xor
adc
fnsave
jae,pt
sbb
andb
jne
jae
mov
stos
xchg
repnz
pop
or
sbb
ret
pop
gs
in
cmp
and
add
cmpsl
dec
loopne
inc
xlat
int3
loop
rcll
stc
mov
pushf
adc
inc
xor
mov
fcompl
iret
xor
pop
clc
aad
push
cwtl
je
mov
int3
roll
sbbl
out
leave
sbb
lods
enter
shlb
lahf
imul
inc
xchg
or
cmp
int3
stos
jmp
subb
aaa
fildll
dec
cmpsb
repz
add
or
mov
push
pop
or
sbb
sahf
dec
data16
int3
stos
mov
lods
push
push
rcr
or
xchg
xchg
pop
rcll
test
cli
je
fwait
cwtl
sub
ret
xorl
cli
adc
xchg
or
out
jle
shl
lahf
sub
jle
dec
dec
aam
jb
and
cli
adc
sub
shr
fs
adc
imul
cmp
xchg
popf
xchg
ds
sarl
mov
sub
push
out
out
sti
mov
adc
push
es
sbb
lods
cmp
xchg
ljmp
call
dec
push
sbb
mov
jl
ss
cmp
test
add
mov
mov
ror
push
lods
sarb
dec
lea
dec
pushf
xlat
cmp
insl
out
sar
or
lods
imul
jp
call
mov
mov
adc
hlt
enter
push
sub
xor
cmp
add
inc
sub
dec
jmp
add
push
mov
mov
das
sub
cmp
insl
or
pop
adcb
sarb
cwtl
pop
lods
pop
ret
jle
adc
add
lret
cmp
arpl
jne
sbb
inc
mov
adc
std
in
sub
mov
loop
ljmp
sub
cmpsb
xor
test
ret
add
std
rdmsr
addr16
inc
and
gs
loop
xchg
and
imul
outsl
into
adc
xlat
xchg
in
dec
mov
int3
mov
loop
add
imul
dec
daa
scas
jmp
stc
mov
popa
adc
stos
fcmovnb
inc
add
arpl
mov
repnz
xchg
pop
testb
in
jle
mov
ljmp
ja
arpl
aad
mov
cwtl
jne
push
lock
leave
pop
adc
xchg
into
sbb
cmp
cmp
lods
cmp
mov
aam
lcall
mov
movsb
push
lea
popf
enter
add
fimull
inc
aad
xchg
sub
scas
repz
inc
adc
cmp
or
dec
ret
push
rclb
sahf
adc
xor
repz
mov
lods
das
xchg
push
cli
insb
adc
push
mov
mov
popf
ret
or
add
fsubrl
arpl
cmpb
cmp
ljmp
mov
scas
sub
mov
inc
mov
mov
fs
movsb
dec
orb
push
push
shll
pop
aam
arpl
dec
jmp
mov
gs
jp
fnstcw
mov
cmp
arpl
int3
aas
jle
adc
xor
jle
in
inc
pop
das
rcl
push
xor
lods
inc
mov
enter
and
adc
push
pop
xor
cmpsl
xor
dec
mov
mov
mov
jb
outsl
pop
fldcw
in
leave
add
sub
lret
fnstenv
fisubrl
mov
jmp
and
dec
dec
sub
jne
or
subb
add
pop
cmp
lea
ret
pushf
adcb
repnz
fistl
pop
jecxz
into
js
push
mov
cmp
sbb
xchg
sbb
fnsave
scas
insb
jecxz
xchg
mov
or
jmp
jo
adc
out
cwtl
leave
cs
cvtps2pd
stos
ficoml
inc
push
shll
lock
mov
stos
insl
mov
sbb
addr16
sub
int
and
mov
sbb
out
arpl
sub
xchg
mov
xor
xchg
fidivs
push
dec
mov
shrb
jle
sbb
push
sub
push
mov
mov
cmpsl
or
mov
shrb
gs
lods
push
dec
cmp
call
xor
mov
pop
movb
lcall
sub
xabort
sub
scas
jmp
punpcklbw
das
and
stos
ja
mov
inc
xorb
pop
push
outsl
push
mov
ret
pop
add
push
popa
adc
pop
lock
pop
or
xchg
cmp
push
outsl
cli
adc
cli
out
stos
scas
div
fisubs
fisubrs
loop
mov
lea
pushf
addb
mov
fcmovnbe
add
aaa
jnp
into
das
xchg
xor
ret
sub
imul
js
in
jne
das
xchg
ljmp
ljmp
mov
push
cmp
stos
adc
mov
cmp
cmp
aaa
subb
and
mov
hlt
into
push
push
mov
adc
mov
sbb
add
das
fistl
cli
pop
ficoms
enter
enter
insb
dec
xor
pmaxsw
lret
push
repnz
dec
insb
pop
cmp
mov
push
es
scas
or
mov
cmp
fimuls
fdivrs
cltd
test
sub
test
xchg
xchg
sub
or
idivb
or
jle
ret
pushf
outsb
jmp
into
cmpb
mov
decl
ficoms
fsubrp
xor
sbb
dec
leave
xor
jne
leave
repz
outsb
sub
leave
push
mov
pop
and
sub
mov
push
dec
int3
loop
mov
mov
outsl
js
int3
nopl
inc
mov
shrb
pop
addr16
sti
mov
imul
xchg
fdivr
ljmp
ret
inc
mov
outsl
stos
and
and
adc
adc
ret
sub
pop
sbb
orb
js
add
sbb
pop
lret
xorb
sub
push
lea
inc
sub
or
subl
or
adc
ja
dec
pusha
sti
in
cwtl
pop
xchg
xor
fisubs
xchg
in
and
gs
outsb
int3
push
loope
mov
dec
int
sbb
add
push
test
push
add
jecxz
cli
stos
jne
adc
popa
aas
add
test
call
mov
push
or
add
fldt
mov
xchg
int3
sub
jmp
lret
std
dec
and
sbb
ds
mov
aaa
or
add
sbb
adc
fcmovne
xlat
xchg
push
mov
and
insb
lods
mov
add
test
int3
movsl
into
cltd
lods
icebp
jl
xchg
jl
mov
inc
pop
push
rol
jmp
lret
imull
sub
xchg
jecxz
sub
jl
in
stos
lods
outsb
jecxz
add
cmpsl
dec
cmp
jle
mov
or
dec
rcr
mov
rolb
push
aad
fucomp
xchg
xchg
cwtl
and
insb
mov
mov
pop
sub
add
cmp
out
lods
pop
jp
insl
add
jge
rol
jle
dec
mov
mov
gs
and
sbb
rcrb
push
imul
addb
dec
and
jae
ret
pop
in
orb
sbb
dec
in
xchg
xchg
es
add
xchg
sbb
dec
mov
jae
scas
jecxz
cli
decb
mov
xor
mov
jecxz
ss
and
test
pop
mul
mov
lods
add
imul
or
mov
mov
add
in
stos
test
dec
scas
ret
and
int3
aas
ret
movsl
scas
arpl
xchg
dec
mov
es
pop
insb
cmp
ds
dec
sub
mov
lock
sub
pop
lret
cltd
push
in
fisttpl
dec
cmp
or
mov
mov
pop
rclb
mov
mov
pop
mov
addr16
cs
mov
push
push
out
movsb
loop
push
out
lods
insb
imul
jns
xchg
jne
cli
stos
in
jecxz
lea
outsb
out
aam
jge
mov
int3
lds
xor
pop
cltd
cld
aam
sbb
adc
xor
mov
or
hlt
add
pop
and
icebp
add
inc
mov
adc
cmpsb
fstl
inc
sbb
mov
std
loop
adc
sbb
mov
lods
add
enter
repnz
bnd
sti
loop
mov
sbb
push
ret
ret
push
jge
fidivl
mov
and
or
sar
pop
xor
pusha
add
ret
inc
mov
add
sbb
push
hlt
mov
in
mov
int3
orb
sub
jecxz
jno
and
sbb
mov
pop
jecxz
jmp
cld
cmp
pop
or
jmp
cmpsb
fs
in
ds
jns
xchg
or
stos
hlt
xor
or
push
or
lock
imul
jp
addr16
mov
add
fcoml
fcoml
mov
xchg
ret
xchg
jb
lret
imul
xchg
movsb
into
pop
pop
arpl
movsb
repnz
add
jecxz
sub
xchg
mov
mov
sbbl
dec
scas
sub
leave
pushf
rorl
ret
sbb
shrl
and
int3
cs
pop
xor
incl
xchg
shl
shl
adc
outsb
adc
sbb
scas
xchg
or
add
jmp
pop
xchg
add
pushf
ret
mov
fs
repz
mov
lods
mov
setge
loopne
sub
ret
and
sar
stos
add
pop
inc
jge
lret
mov
stos
ret
cmp
mov
aam
rorb
mov
mov
mov
cmp
push
arpl
add
inc
mov
mov
into
mov
cltd
xor
pushf
pop
cli
out
sub
or
xchg
aas
pop
lret
pop
push
xor
movsl
push
out
xor
aaa
insl
sub
push
in
ljmp
sbb
and
test
js
notl
adc
lcall
outsb
sbb
sub
jmp
dec
adc
mov
fisubrs
cmp
fsubr
imul
pop
sbb
or
dec
test
lods
ljmp
ljmp
inc
push
adc
movsb
int3
popa
mov
mov
push
js
cmp
mov
scas
mov
jle
call
insl
xchg
flds
mov
jnp
or
sub
lea
xor
mov
loope
add
or
lcall
add
mov
or
jnp
push
fnclex
inc
sub
push
xor
daa
ds
lods
loopne
and
fists
cwtl
push
mov
out
add
sbb
pop
xchg
dec
mov
pop
insl
ds
jne
aad
adc
and
push
dec
movsb
sub
mov
xorl
data16
jmp
and
add
jb
pushf
and
das
rcrl
jmp
subl
xchg
test
cli
xchg
fwait
in
cmp
repnz
js
rorl
je
xchg
ljmp
cld
sbb
loope
jmp
loope
sub
cld
sbb
fcom
std
jecxz
push
sbb
dec
lods
xchg
or
adc
pop
adc
ljmp
scas
adc
cmpb
or
inc
in
pop
ret
xchg
mov
cs
mov
fstps
fsub
adc
stos
lods
mov
out
in
adc
fcoml
mov
repnz
fucom
mov
lret
test
sub
adcl
subb
ss
or
pop
iret
lret
or
jle
xchg
push
aaa
scas
das
loop
cmp
cmp
inc
push
out
dec
ja
mov
push
sbb
jmp
lea
stos
mov
mov
sahf
and
fnstenv
xor
pop
lods
sub
mov
mov
subl
jge
lds
cmp
push
repz
pop
sub
in
loop
in
stos
xchg
add
fwait
inc
int
sub
jo
ljmp
pusha
sarb
or
imul
sbb
jno
pop
lcall
arpl
mov
scas
cwtl
insb
iret
xchg
cmpsb
pop
sub
shlb
arpl
lods
xchg
mov
mov
or
cld
pushf
mov
jl
dec
mov
inc
or
ret
jnp
and
fildl
daa
adc
shrb
lods
bts
sar
adc
test
mov
loop
clc
push
mov
pop
stos
nop
fcoml
pop
sbb
fadd
test
clc
sbb
sbb
sub
sarb
sbb
in
stos
mov
bound
out
sub
sbb
or
push
test
movsb
loopne
add
sub
cmp
lods
lds
orb
scas
xchg
inc
call
ret
xor
push
mov
es
mov
lea
push
push
sbb
jo
mov
out
fistps
sub
xchg
jmp
test
lods
sub
pop
add
ja
call
xor
push
jb
mov
adc
cli
mov
mov
das
icebp
pop
loopne
insb
inc
xlat
or
mov
rorl
lods
inc
repz
or
sbb
filds
aas
cmpb
les
inc
fmull
inc
jmp
movsl
daa
outsb
xchg
push
pop
push
pop
mov
dec
stc
pop
push
in
es
sbb
ds
push
loop
jbe
addr16
pop
aas
xchg
arpl
sub
pusha
lods
test
js
leave
lea
sub
in
mov
cmp
test
mov
jnp
lea
cli
xor
jge
ljmp
add
push
and
push
scas
jmp
movsb
add
fdivr
add
lods
ja
mov
pop
jne
es
lods
pop
test
loop
cs
iret
xchg
enter
or
push
rorl
bound
outsl
mov
dec
inc
dec
mov
test
test
add
and
fisttpll
xchg
adc
clc
pop
les
mov
jecxz
or
aam
out
sti
jecxz
fistl
repnz
cmc
in
pop
mov
jp
insl
inc
out
ljmp
or
data16
cltd
mov
cmp
ljmp
inc
mov
xchg
pop
ds
inc
pop
mov
imul
lea
add
jbe,pn
loop
xchg
cli
cmpsl
fisttps
sub
xlat
adc
xor
or
push
sbb
mov
in
inc
lcall
push
ljmp
das
lret
inc
loop
out
ss
out
les
xchg
push
pusha
sub
lret
ljmp
adc
add
lods
add
repnz
or
sbb
push
out
outsl
pushf
aas
cmp
shrb
sub
cs
or
cwtl
mov
jb
orb
add
jecxz
in
sbb
jbe
in
sbb
mov
sub
imul
and
loope
mov
push
arpl
push
pop
inc
or
test
lret
aam
out
insb
cmpsb
xacquire
mov
adc
rorb
cmp
mov
shr
jmp
inc
pop
push
cmpsb
ds
push
jmp
ljmp
push
xchg
mov
ficoms
in
push
test
cmp
in
dec
sub
insb
jmp
jecxz
jle
lret
pop
sbb
adc
push
lods
xchg
add
push
sbb
pop
ss
add
loopne
scas
mov
insb
sbb
sahf
jo
add
fdivl
xchg
out
or
je
enter
in
adc
xchg
mov
jmp
ja
pop
pop
lock
jecxz
in
mov
arpl
loop
inc
dec
pop
rcrb
shlb
jo
sub
stos
lcall
arpl
inc
dec
mov
push
sub
jmp
cs
dec
stos
push
test
movsb
jecxz
les
movsb
std
icebp
cmp
cmp
and
mov
pshufw
repz
or
enter
scas
dec
dec
cli
xor
fsubrl
mov
ja
dec
pop
aaa
push
dec
inc
push
push
jb
pop
ljmp
and
push
mov
jecxz
pop
shlb
xor
shrl
and
or
sbb
jno
nop
out
jns
out
sbb
nop
test
jmp
dec
cmp
dec
mov
dec
add
out
popf
push
mov
add
or
sub
dec
outsb
lea
sub
call
mov
scas
in
sub
inc
xor
arpl
fcoml
divb
xor
fwait
loope
mov
divb
jmp
stos
aad
xor
jns
sub
jmp
adc
inc
icebp
shrl
cmp
orb
pushf
jge
xor
sahf
mov
leave
ja
pop
test
and
or
loop
cld
adc
fdivl
fsubs
int
mov
dec
inc
lock
ds
pop
xchg
jno
je
xor
add
mov
push
xor
je
lcall
icebp
cmpsb
xchg
xor
xchg
mov
into
mov
rcr
jae
iret
arpl
int
shlb
push
insl
sub
push
arpl
cmpsb
clc
roll
cli
add
pusha
cmp
xchg
sub
cmpsb
inc
sub
call
dec
dec
insl
and
insb
sub
and
cmp
cmp
es
jmp
stos
sbb
sbbl
mov
dec
in
mov
clc
mov
out
test
ja
call
fildll
jmp
mov
insb
lods
fdivl
ss
inc
mov
mov
shlb
jp
cmp
pusha
sub
push
cld
dec
cmp
dec
dec
add
pop
add
mov
inc
js
test
inc
xor
push
shll
adc
add
int3
xchg
rorb
xor
jmp
fistl
enter
fs
ss
shr
inc
test
adc
lahf
mov
nop
or
sbb
gs
sub
int3
jo
fnstcw
xor
es
dec
pop
repz
sbb
out
xchg
and
cs
or
enter
lret
outsl
add
fbld
or
inc
fstps
fwait
mov
xchg
adcl
or
push
push
xor
ret
xchg
test
mov
xchg
lea
dec
cmp
dec
lret
mov
cmp
xor
or
cmp
adc
sub
mov
scas
loop
in
xchg
jecxz
fldcw
push
lret
icebp
fidivrs
sbb
mov
dec
xchg
xor
filds
adc
pusha
or
aam
aam
ljmp
fwait
jno
enter
mov
orb
jmp
cmp
sbb
ret
dec
into
pop
lret
nop
jnp
xor
dec
xrelease
xchg
sar
mov
call
loope
pop
in
xchg
jecxz
lcall
lods
push
pop
mov
jmp
inc
pop
pop
mov
xor
adc
jmp
dec
out
adc
inc
pop
enter
adc
push
fld
ds
orb
daa
imul
cmpsl
sbb
push
fiadds
dec
sub
shrl
lret
ret
jecxz
call
push
sti
xor
popf
f2xm1
dec
dec
cmp
mov
stos
xorb
mov
dec
insl
push
test
add
jmp
cli
push
sub
jnp
push
out
push
sbb
xor
sub
out
and
imul
jge
inc
int
in
jbe
dec
mov
and
in
push
dec
cmp
xchg
idivb
pop
jae
es
sub
leave
das
repnz
adc
cmpsl
cmp
add
jge
sbb
insb
scas
inc
xor
fisttpll
add
xchg
call
data16
jae
fstpt
addb
mov
lock
pop
dec
mov
mov
call
loopne
xchg
gs
hlt
add
sarb
jae
outsb
jmp
das
mov
fwait
movsl
push
jl
adc
testb
jecxz
ljmp
pop
dec
jecxz
mov
push
clc
ss
jmp
mov
or
or
xor
pop
jbe
jns
adc
repz
and
push
or
cmp
mov
aas
pop
movsl
pushf
xchg
fst
and
bound
lcall
test
jmp
push
xchg
inc
push
mov
inc
jp
jp
push
lds
ret
cwtl
xchg
dec
insl
mov
push
mov
sbb
and
ja
push
push
jne
jb
aas
sbb
sub
cmp
cmp
int
test
faddl
sub
repz
test
rorb
mov
fadds
lods
bound
iret
lret
cmpsb
pop
imul
cmpsb
cmp
loop
push
addr16
mov
les
cmp
or
arpl
call
loop
or
inc
enter
sbb
mov
fildll
test
movsl
add
xchg
and
jmp
insb
bound
push
jnp
test
cmpsl
sub
or
add
sbbl
mov
push
sbb
je
sub
fs
xor
test
add
sub
out
adc
inc
xchg
cli
cmpsb
sub
mov
jp
pop
xor
mulb
call
jmp
push
add
or
pop
fldl
les
mov
ret
add
insb
xor
lea
arpl
call
xor
in
shr
jecxz
adc
jnp
es
out
or
push
sbb
int3
push
in
out
pop
sub
and
rclb
cmp
mov
pop
push
xchg
push
jmp
and
push
insl
pop
pop
sub
repz
mov
mov
mov
or
ljmp
pop
mov
loop
loop
aas
jnp
shll
cmp
pop
cli
or
stos
pop
xchg
cmp
push
icebp
in
imul
into
out
mov
cmpsl
leave
or
mov
xor
xchg
mov
xchg
ret
insl
and
push
cli
loop
in
or
mov
ret
mov
mov
push
je
clc
lods
test
popf
lcall
sbb
mov
push
sahf
mov
or
ds
and
adc
add
xor
or
bound
out
rorb
fisttpll
xchg
mov
ret
pop
or
mov
rcrl
xor
repz
pop
or
out
out
sbb
leave
inc
js
lods
xchg
xor
mov
mov
xchg
movsl
push
mov
mov
movsl
cmp
cmp
in
test
jecxz
inc
int
fistpl
pop
fsts
lods
cli
inc
pusha
cmp
xor
sbb
mov
loop
sbb
push
xchg
pop
jno
inc
iret
push
scas
scas
mov
cs
and
out
push
push
aad
gs
push
push
and
mull
subb
das
and
xchg
aaa
and
scas
sbb
and
outsl
pop
call
push
mov
inc
icebp
and
jmp
mov
in
insb
sub
jl
sub
xchg
hlt
pop
xchg
dec
cmp
mov
inc
pop
enter
mov
loop
rcrl
cmpsb
sub
jge
ds
adc
push
dec
ret
movb
lea
call
repz
jne
stos
lcall
mov
shll
out
ret
jb
shlb
aaa
xchg
lods
insb
ds
pop
dec
mov
lea
pop
lcall
aam
xor
int
push
adc
sahf
lahf
add
jp
push
fmull
stos
xor
repz
test
jno
orl
cmp
in
add
add
xorb
add
add
loope
cltd
mov
add
pop
sbb
scas
cmp
testb
enter
lret
movsl
fistl
cld
lods
dec
push
imul
xor
ret
push
sahf
lcall
std
and
xor
cmpps
scas
or
push
dec
ret
outsb
push
outsl
fsubrs
mov
cmpsb
aad
rcrl
mov
lods
mov
ss
pop
jo
push
cmp
xor
adc
loop
fstpt
or
shlb
jg
cmpsb
push
fidivrs
int
call
sbb
jbe
call
rorl
or
add
add
out
jge
push
jmp
or
test
das
int3
mov
orl
ret
testl
push
mov
push
mov
fimull
xor
pusha
mov
and
bound
add
cmp
test
pusha
mov
leave
shr
test
movl
outsl
add
lret
cmp
mov
leave
into
pop
loopne
data16
inc
inc
mov
push
pop
or
adc
adc
testb
fildll
ds
test
lea
enter
test
ljmp
lret
mov
sub
fimull
jno
out
daa
or
ret
outsl
roll
mov
sub
adc
cmp
push
jle
lea
push
dec
inc
lret
adc
dec
add
int
and
add
not
shll
jecxz
lods
inc
test
fstpl
sub
pop
sbb
dec
inc
jecxz
repnz
fcoms
jg
call
shl
mov
mov
shr
jne
add
adc
testb
mov
scas
ds
push
xor
mov
repnz
sub
cli
and
sub
out
and
stos
rcl
dec
push
sbb
mov
sub
test
lret
cmp
mov
fidivl
dec
push
dec
pop
insl
test
xor
or
scas
fisubs
add
loop
mov
add
xchg
push
pushf
sub
rorl
aad
push
push
add
push
sbb
mov
dec
adc
mov
rcpps
lret
ja
mov
insl
push
adc
jl
push
or
lret
stos
sbb
in
into
xor
xor
and
popf
push
add
or
cmc
jp
dec
addb
out
cld
cmpsl
call
in
in
call
cmpsb
xor
and
js
add
jecxz
push
cmp
insb
fisttpl
movsl
dec
in
dec
mov
loopne
mov
inc
test
inc
dec
aam
ret
xchg
sub
add
jb
add
scas
imul
xchg
call
movsl
push
xchg
or
xor
xchg
das
xchg
ret
jmp
adc
shl
es
add
lea
or
sub
jns
xor
mov
bound
outsl
in
sbb
push
fcom
lea
jbe
in
ret
sbb
daa
sub
es
xor
in
mov
clc
popa
xor
mov
cmpsl
fwait
jg
mov
data16
adcb
lret
in
ret
mov
cli
divb
mov
sbb
mov
adc
adc
or
popf
mov
sub
dec
test
addr16
outsb
fbld
push
xchg
call
or
xchg
repnz
dec
sbb
mov
scas
jg
or
sub
mov
push
movsb
shrb
iret
test
xor
push
xor
out
jb
bound
inc
xor
sbb
and
int3
jb
mov
sub
and
test
pop
jne
fidivs
jmp
jne
push
dec
cltd
or
daa
loop
cmpsl
push
outsb
scas
adc
out
rcrl
mov
cli
and
push
dec
cmpsb
xchg
fsubl
sub
jecxz
add
aas
arpl
fistl
stos
js
sub
xor
lcall
outsb
jmp
ljmp
scas
out
lea
sbb
out
dec
add
cmp
mov
or
ljmp
or
sbb
pop
mov
mov
inc
pop
pusha
insl
cmpl
mov
js
fxrstor
insb
jnp
cmp
mov
repnz
test
popl
loop
xchg
push
push
ljmp
xchg
rolb
xchg
jp
jno
loopne
and
push
flds
cmpsb
loop
scas
and
mov
or
in
add
in
fnsave
mov
or
iret
xor
xor
xor
mov
fwait
mov
sti
pop
fwait
loop
es
jmp
lcall
std
leave
imul
push
fwait
sub
mov
dec
cli
and
lea
lods
test
add
adc
cli
mov
into
inc
add
lea
jle
xor
sbb
es
stos
aam
jmp
mov
pop
mov
fmul
push
stos
sbb
add
push
pop
jno
cwtl
addr16
stc
mov
jmp
mov
stos
sbb
sbb
inc
cld
pop
ret
js
les
push
xchg
in
push
fwait
gs
out
adc
push
ljmp
sahf
xchg
fsubrl
fwait
and
adc
enter
sub
cmp
inc
sbb
ds
out
dec
ss
add
ficompl
sbb
pushf
bound
add
mov
sbb
sbb
repz
add
scas
xchg
in
push
xchg
jns
pop
mov
xor
add
add
out
imul
cmc
out
push
sub
cmp
cmp
mov
hlt
in
fidivrs
push
shl
cld
cmp
cmp
arpl
xchg
mov
xor
fmull
sarb
lret
sub
jnp
out
dec
sub
lds
mov
sbb
fildll
mov
xchg
stos
fsubrs
push
movb
push
int
add
loop
xchg
add
xor
sbb
push
stos
inc
add
jge
nop
mov
or
andl
ja,pt
or
rcrl
cmp
out
inc
xor
stos
pop
stos
in
loop
ds
shl
aas
rcrl
test
xchg
pop
lcall
pushf
ljmp
mov
push
add
scas
imul
inc
cmpsl
ret
cmp
cltd
ret
or
and
faddl
xlat
lds
ret
ja,pn
fisubl
or
dec
jmp
add
jecxz
mov
push
cmp
sbb
mov
out
mov
xchg
stos
jne
imul
pop
add
loop
mov
mov
inc
loop
das
vpsubw
sub
fistpl
fwait
ss
inc
scas
push
jg
dec
cltd
lret
es
push
aas
cmpsb
fwait
js
fsubr
mov
sub
repnz
xchg
push
roll
jmp
das
jp
mov
mov
add
pushf
jg
mov
shlb
pushf
test
push
bndstx
aam
adc
bound
bound
rcrl
int
jmp
mov
lea
data16
outsb
test
xor
xor
dec
jae
lret
mov
xor
dec
fwait
std
pop
pusha
mov
in
cltd
fisttpll
ljmp
add
rclb
xor
jg
xchg
in
inc
sub
shlb
mov
push
ss
aam
aas
int3
or
adc
sub
xchg
lcall
sbb
sub
dec
jp
mul
in
jbe
adc
int3
dec
cmc
fstpt
movb
dec
mov
xor
push
into
insb
add
adc
pop
add
mov
scas
push
leave
inc
adc
add
sub
lods
frstor
mov
mov
aas
ret
inc
xchg
lods
mov
or
jmp
pop
insl
arpl
es
into
push
dec
cli
mov
lods
ds
add
jle
scas
jae
push
les
imul
in
aad
xor
xchg
in
sbb
loop
add
insl
icebp
lcall
add
jnp
fwait
rcll
jnp
cmp
mov
int3
clc
inc
nop
shr
pop
dec
sbb
hlt
imul
sbb
pusha
adc
lea
bound
lods
stos
test
stos
rcrl
test
cmpsl
or
andl
scas
sbb
mov
sbb
scas
stos
sub
outsl
and
out
ret
out
mov
xchg
mov
cltd
cli
stos
mov
in
lcall
dec
dec
idiv
push
add
dec
and
jo
xchg
mov
mov
xor
lock
jecxz
push
js
shrb
push
int3
clc
js
fwait
xchg
lcall
mov
les
or
outsl
mov
shll
jecxz
mov
cmp
lock
jae
loop
xchg
insb
call
out
es
cmp
and
stos
insl
sbb
adc
pushf
jo
mov
imulb
jnp
stos
jns
mov
clc
lods
pop
pop
add
std
cmp
test
aas
fistpl
or
xchg
add
call
pop
pop
xchg
cmp
cmp
sbb
jb
imul
pop
sbb
int3
call
inc
es
or
arpl
ret
mov
cmpsb
mov
pusha
inc
sahf
aad
jp
adc
shrl
jmp
sbb
ljmp
and
fidivl
jne
fstl
sbb
inc
ljmp
aas
fsubrp
cli
stos
insb
lcall
adc
add
or
jo
scas
mov
jl
jne
dec
inc
fstps
ja
jnp
add
xchg
adc
cmp
sub
stos
jle
popf
mul
xchg
sbb
push
aam
xor
sbb
mov
sub
fs
xchg
mov
mov
xchg
jecxz
cli
mov
out
dec
aaa
cs
adc
sbb
insl
sbb
negb
cwtl
fsubr
es
and
xchg
dec
adc
jns
or
nop
dec
aaa
mulb
sbb
lcall
mov
into
loop
or
xchg
insb
scas
inc
push
jmp
xlat
out
pop
or
lahf
fdivrs
or
and
push
xor
cmp
lret
xchg
push
jp
lcall
mov
inc
call
adc
testl
adc
rcrl
nop
lods
arpl
jecxz
mov
divb
jo
jecxz
jge
rcrl
aas
xor
aas
and
cmpsl
add
in
xchg
jp
sbb
mov
imul
adc
in
int3
mov
push
test
imulb
les
push
fisubrl
inc
dec
adc
xchg
xchg
jg
mov
jge
or
aam
iret
enter
or
add
sti
inc
lret
in
push
or
mov
movsb
add
mov
outsl
mov
or
sbb
aad
jecxz
or
stos
mov
out
int3
mov
mov
and
cli
sub
insl
jle
sub
xchg
sub
push
aaa
repz
aad
push
cmp
insl
mov
sbb
cltd
dec
stos
cmp
lods
sbb
adcb
sbb
icebp
int3
stos
push
into
out
mov
push
jo
jge
je
sbb
mov
xor
out
mov
loope
xor
dec
push
adc
push
sub
in
jecxz
sbb
int
adc
or
cli
xlat
popl
rorl
pop
xchg
push
flds
sbb
sbb
mov
shrb
aam
ds
sbb
stos
xlat
ljmp
loop
adc
pop
out
movsb
mov
out
out
xor
les
fistpl
btsl
repz
sbb
ljmp
push
xchg
ror
mov
dec
pop
dec
or
sbb
or
or
outsl
int3
iret
dec
sub
scas
into
dec
push
or
mov
mov
xchg
or
lcall
cs
int
sub
jmp
pusha
lods
ss
xor
adc
add
mov
outsl
push
outsl
arpl
enter
pop
adc
push
mov
cmp
add
enter
pop
push
jmp
pusha
sbb
out
fisubrs
xor
ja
adcb
xor
fcoml
fwait
daa
loop
or
test
xchg
mull
sub
aaa
and
ss
mov
push
xchg
cmp
mul
jge
push
mov
push
mov
leave
out
lret
or
add
hlt
shl
xor
insl
in
push
cmp
sub
aam
cld
mov
mov
jecxz
stos
in
lods
push
mov
test
mov
add
or
in
jne
mov
jle
out
dec
hlt
mov
int3
adc
add
push
mov
dec
mov
lods
bound
mov
mov
lods
aam
sbb
inc
cmp
les
adc
lods
int3
out
push
xlat
test
arpl
adc
adc
sub
add
test
inc
in
xor
in
mov
mov
xor
or
dec
in
lds
jmp
ss
test
sub
mov
jne
ret
int
lea
inc
cld
dec
fidivs
jmp
aam
dec
jp
outsb
movsb
mov
data16
into
orb
aam
fldenv
mov
sub
jno
push
outsl
mov
add
shlb
push
pop
dec
test
jp
shll
sub
jmp
push
mov
sti
jb
in
sub
ret
cld
mov
je
loopne
shl
adc
jmp
and
das
mov
mov
cli
sbb
test
fdivl
cmp
incl
xlat
cmp
pop
add
fnsave
shl
clc
lahf
cmp
fnstcw
fidivl
setns
sti
bound
and
push
lret
mov
mov
orl
pop
stos
xor
fs
or
js
push
push
xchg
dec
fldl
loopne
imul
push
lea
or
addr16
push
sbb
orb
sub
hlt
mov
out
cmc
fsts
test
pop
push
adc
loope
add
sti
pop
dec
icebp
mov
dec
jmp
push
test
aad
imul
cld
fisubrs
cs
mov
outsl
in
adc
fnsave
pushf
add
or
fldenv
mov
cs
and
lods
lea
add
pop
mov
movsb
jb
sbb
mov
jne
lret
mov
mov
mov
roll
mov
mov
dec
mov
seta
mov
popa
aam
cld
outsl
adc
pop
jge
movsl
movsl
out
or
and
add
xor
push
push
mov
test
jmp
cmp
mov
fld1
push
imul
repz
push
jmp
int3
test
xchg
aaa
mov
and
sbb
or
imul
hlt
or
sbb
or
jmp
xlat
mov
dec
mov
push
inc
sub
loopne
test
push
xchg
lret
cmp
test
mov
and
cmpsl
xchg
out
out
test
roll
rclb
lahf
rorl
lcall
mov
sbb
rcrl
xor
or
cmpb
adc
add
call
or
xor
jbe
push
outsl
shll
loop
lods
sbb
sub
lcall
push
aaa
xchg
jp
hlt
ja
or
inc
pusha
sub
aam
push
loop
das
mov
ret
mov
in
clc
cwtl
ret
inc
stos
pop
aad
fimull
mov
out
jmp
mov
sub
jl
loop
loop
fistps
mov
fistpll
movsb
or
sub
xlat
pop
andl
xchg
xor
stos
pop
pop
test
test
cltd
and
jne
push
jl
out
xor
inc
cmp
sub
mov
mov
std
das
adc
mov
cmpsb
nop
stc
xchg
inc
mov
inc
or
daa
jge
and
sti
fdivrs
out
mov
decl
xchg
mov
notl
andl
sub
xchg
ss
aaa
xor
dec
cmpsb
jmp
pop
mov
fdivr
push
xchg
incb
sbb
mov
aas
xchg
sbb
sub
pusha
sbb
push
movsb
and
adc
daa
dec
push
push
sbb
iret
push
fs
xor
stos
dec
loop
ss
and
xchg
inc
popa
jne
arpl
pushf
mov
out
or
push
cmp
call
cmpsb
lds
fcmovbe
lcall
lods
loop
mov
aam
int
mov
xor
or
insl
adc
adc
lahf
push
test
repz
sbb
or
xchg
mov
stos
scas
adcl
into
addr16
push
mov
pusha
sbb
aaa
out
inc
xlat
notb
adc
push
push
push
sub
xchg
cli
into
aaa
cmc
pop
movsb
pushf
in
call
pusha
jmp
push
mov
or
ja
in
pop
ss
shll
push
insb
jnp
lods
loopne
mov
adc
mov
mov
rcrl
decl
out
adc
mov
push
adc
pop
jae
loop
push
mov
xchg
mov
cmp
cmp
les
test
mov
int3
add
push
les
pop
addr16
jmp
sub
inc
add
gs
inc
movsb
push
mov
push
fistpl
mov
lods
mov
jge
sub
dec
push
std
push
pushf
loopne
cmc
sbb
fdivrs
push
out
aad
inc
test
mov
cmp
pop
adc
adc
dec
sbb
xchg
dec
mov
push
sbb
mov
outsl
repz
mov
cld
xor
lea
cmpsb
out
test
add
add
out
inc
sbb
pop
adc
lret
pop
xchg
out
jmp
xchg
enter
stos
or
inc
jg
inc
leave
fisttps
lret
xor
shll
mov
ljmp
pop
push
push
sbb
aad
bound
mov
add
add
into
sbbb
or
lea
or
lods
lods
adc
fistpl
fisubl
inc
pusha
mov
jecxz
and
sbb
lret
jmp
repz
popf
pop
aad
pop
lods
in
rcrl
mov
lods
int
mov
repnz
dec
mov
enter
outsb
xchg
in
cld
outsl
cld
bound
scas
and
or
pop
in
test
lahf
ljmp
ret
lods
xor
aam
inc
push
into
out
inc
push
xchg
inc
jecxz
xchg
testb
punpcklwd
jbe
es
scas
in
adc
out
and
repz
pop
mov
push
and
test
or
ss
xchg
xor
stos
into
or
add
fs
dec
imul
jecxz
sarl
mov
out
aad
das
lea
sub
pushf
jmp
lea
frstor
test
int
jo
mov
inc
fwait
pop
movsb
imul
xchg
add
scas
cmp
push
fldt
push
and
mov
in
lods
mov
out
outsl
into
pop
push
xor
mov
setae
scas
jno
add
outsb
push
and
js
ret
or
dec
mov
xor
or
mov
push
scas
sub
and
pushf
pop
sub
jns
loope
cmp
add
popf
xchg
data16
sbbl
mov
cwtl
cmpsb
das
dec
fisubl
inc
jg
test
repnz
cmp
call
mov
ja
pusha
adc
sbb
ja
mov
push
popa
loop
shlb
xor
xchg
das
push
sbb
push
call
fildll
mov
sbb
or
push
dec
push
push
add
sbb
cmp
stos
insb
rcll
cld
xchg
inc
adc
xor
ss
pop
adc
xor
xchg
ja
or
sbb
push
lods
in
mov
clc
xchg
sub
loop
out
or
add
add
add
xchg
mov
loop
push
xchg
jae
and
lret
loop
and
sahf
loop
push
popf
dec
mov
iret
cmp
fidivs
enter
jb
aam
mov
nop
sub
lea
mov
cli
adc
xchg
int3
stos
leave
dec
pop
jmp
push
dec
xchg
les
sbb
sarl
or
mov
adc
xchg
jns
std
movsl
into
insb
xor
and
fwait
jno
jl
subb
in
les
test
inc
ret
add
insb
stos
sbb
jmp
and
lods
or
adc
pop
leave
push
cltd
stos
das
sbb
loope
fiadds
lret
and
add
push
and
cmpsb
gs
lcall
rol
cld
sbb
push
stos
push
loop
xchg
out
xor
adc
sbb
dec
dec
ret
lea
push
add
repz
call
loopne
push
xorl
into
jmp
mov
out
fcompl
sti
dec
sbb
sbb
push
lret
xor
rol
jns
dec
push
mov
mov
setp
xchg
sbb
test
pusha
int
xor
movnti
mov
popf
addb
ret
mov
ret
shll
dec
dec
xor
jnp
fdivl
test
scas
cltd
and
in
cltd
adc
jb
adc
fnstsw
into
or
push
jno
mov
test
adc
dec
ss
inc
sbb
xchg
mov
shlb
call
movsl
outsb
imul
jmp
movnti
jecxz
es
dec
cltd
out
mov
jae
scas
push
cltd
scas
jae
out
rcr
shrl
out
xchg
push
call
testb
mov
or
dec
cmp
adc
jmp
popf
or
in
xlat
push
gs
sub
out
pusha
jecxz
and
pop
inc
popa
sub
testb
add
push
push
push
cltd
fists
pop
inc
dec
mov
push
push
and
inc
gs
cmp
imul
jno
loop
test
or
xlat
testb
aam
addr16
jecxz
inc
mov
imulb
jle
xchg
xchg
shlb
adc
adc
jnp
ds
and
mov
fiaddl
or
fistl
adc
adc
in
mov
and
outsl
sbb
fisubs
or
adc
adc
or
push
scas
sbb
jl
adc
jnp
mov
jecxz
inc
and
sbb
fidivrs
imul
push
push
es
mov
ljmp
cmp
sbb
adc
pop
out
pop
inc
dec
push
test
stos
jmp
xchg
mov
div
scas
xchg
mov
sbbl
or
into
addb
rclb
pop
adc
push
mov
pop
mov
xor
pop
into
je
ret
mov
cmp
dec
in
pushf
pusha
test
decl
out
sbbb
add
xchg
mov
sub
negl
imul
xlat
fadd
xchg
rcrb
inc
sbb
mov
fs
pushf
mov
jo
lret
sbb
sub
rcl
cs
mov
mov
sub
xchg
inc
outsl
test
imul
sarl
sbb
loope
iret
mov
ret
into
mov
add
mov
jp
push
aaa
cmp
enter
pop
lcallw
dec
ret
repz
cmpb
inc
jo
imul
imul
mov
adc
jle
pop
adc
adc
jle
repnz
ljmp
pop
lret
insl
daa
inc
dec
repz
pusha
movsb
and
add
cmp
gs
sub
push
lock
inc
mov
xlat
dec
sahf
sbb
dec
mov
mov
dec
add
dec
mov
mov
xorb
push
cmp
dec
into
hlt
rol
stos
lcall
int3
xor
add
xor
imul
xchg
sbb
in
outsl
sti
add
pusha
cmp
sbb
sub
or
and
in
or
ror
dec
ja
sbbb
jae
out
xchg
sbb
lea
lret
out
fmull
dec
inc
sbb
dec
pop
iret
push
movsb
or
call
cmp
movsl
sbb
cmpsl
iret
sti
faddl
daa
aaa
lret
mov
ds
fdivrs
pop
jo
es
xor
mov
sbb
rorl
aaa
cli
jnp
test
push
fsubl
ret
rcr
dec
imul
roll
rcrl
pusha
and
popf
movsb
cmp
fstps
inc
pop
enter
sub
push
adc
dec
rcrl
in
repnz
lods
push
ret
dec
test
inc
jb
push
mov
pop
sub
and
or
pop
test
xor
jg
or
das
cmpb
sbbb
iret
mov
or
mov
mov
in
ja
imul
jecxz
mov
jmp
ret
mov
xor
stos
sbb
push
adc
aam
dec
sub
dec
in
xchg
es
mov
outsl
sbb
ror
mov
fwait
mov
scas
lret
fs
jns
xchg
js
pusha
xchg
mov
enter
in
sbb
sub
xor
stos
mov
idivb
fnsetpm(287
or
cmp
in
and
xor
adcb
mov
jnp
test
mov
sub
nop
aaa
xchg
xor
cwtl
fucomip
push
mov
sbbl
mov
shl
push
or
mov
daa
or
mov
cli
cmp
cmp
ljmp
out
cmpsb
dec
mov
ja
and
loop
das
sti
hlt
lea
sbb
adc
push
arpl
out
sub
jp
inc
iret
xor
mov
mov
fcmovnu
movsl
cmp
sbbl
add
push
and
stos
dec
adc
pop
ja
mov
cmp
or
addr16
jle
mov
cmp
cmp
mov
iret
sub
sub
mov
cmp
in
mov
sub
cld
lods
dec
push
adcb
in
or
clc
les
cs
bound
shll
lods
movsb
xor
mov
mov
enter
mov
mov
pop
or
pop
mov
xorl
test
fildl
add
data16
xchg
cmp
cmp
lods
aaa
movsl
mov
bound
jl
sbb
cmpsb
pop
mov
cmp
int3
add
rorl
push
dec
mov
xchg
inc
jne
fwait
in
fidivl
inc
mov
ljmp
sub
js
xchg
pop
adc
mov
ret
mov
xchg
inc
jecxz
fidivrl
push
ret
cmc
adc
daa
mov
movl
es
add
sbb
mov
mov
in
jmp
arpl
daa
sbb
mov
lret
js
or
push
push
mov
add
add
and
in
push
daa
xor
cmc
imul
sbb
shll
adc
cld
repnz
lds
shrl
jnp
aad
lcall
push
pop
repz
stos
lods
add
stos
xor
arpl
mov
adc
sbb
mulb
mov
cli
push
lahf
or
les
push
imul
xchg
ror
xchg
out
push
loopne
rcrl
in
jo
jg
mov
mov
sbb
stos
popl
sarl
js
ret
xor
pop
jne
jb
mov
xor
mov
imul
cmp
xchg
inc
lcall
test
cmpsb
push
ss
mov
sbbb
dec
insb
rcrl
mov
sub
ss
mov
loop
sub
lcall
aaa
push
mov
jns
jle
mov
ljmp
scas
mov
mov
movsb
aas
in
or
fimuls
sub
add
push
pop
add
mov
sahf
xlat
mov
lcall
cmp
push
sub
xor
mov
jnp
xchg
or
jbe
lret
arpl
jb
sbb
xchg
push
fcompl
mov
push
fldl
pop
int
lcall
mov
stos
outsb
or
ret
pop
int3
inc
xchg
idivl
push
add
xor
imul
mov
out
mov
jl
fists
jmp
out
sub
aam
call
in
stos
mov
aam
pop
sbb
daa
andb
push
sbb
sbb
fldl
add
jmp
fidivrl
lods
imul
xchg
mov
fisubl
dec
mov
fidivl
add
xchg
and
pop
mov
sti
mov
rcrb
int3
rcll
mov
sbb
dec
inc
pop
and
repnz
arpl
jnp
push
sbb
sahf
sbb
loop
adc
jmp
xchg
lea
pop
repz
mov
je
data16
adcb
mov
shll
std
or
call
das
adc
push
mov
sbb
out
sbb
xchg
adc
jbe
ficompl
add
and
dec
ret
adc
ds
fcmovbe
inc
ret
or
add
xchg
stc
cli
ret
jne
in
mov
mov
xchg
mov
ss
ljmp
push
xor
test
lcall
pop
xchg
popf
js
adc
sub
pusha
dec
adc
mov
mov
dec
aas
shll
mov
xchg
fisttpll
adc
les
jp
or
add
dec
sahf
ja
out
xchg
or
addr16
gs
in
push
jmp
push
loop
mov
ljmp
xchg
imul
inc
mov
addl
mov
add
fs
imul
xchg
rol
add
inc
fwait
sub
cmp
xchg
shl
sbb
popa
aad
insb
mov
mov
cli
lods
or
out
int3
xchg
ds
mov
adc
lods
out
xorb
and
stos
in
stc
xchg
jae
or
test
cmpsl
stc
mov
inc
test
rol
add
out
add
xchg
popf
ja
xchg
test
mov
movsb
aad
mov
push
add
outsb
lcall
pop
xchg
popa
adc
push
push
mov
adc
mov
shlb
xchg
daa
cmpsb
mov
mov
adc
test
call
ljmp
adc
add
or
fisubrs
clc
ja
out
sub
sti
test
xor
cltd
cmp
orl
pop
or
dec
push
fidivl
or
or
clc
xlat
xchg
jno
jns
not
xor
stos
mov
aas
lcall
loop
dec
les
dec
fbstp
imul
stos
aad
push
mov
aas
mov
icebp
daa
stc
ret
movsb
sub
lods
je
push
add
mov
dec
sub
sub
mov
and
daa
mov
shr
or
push
and
insl
and
jmp
jg
call
cmp
inc
fsubl
lods
add
stos
aaa
in
sbb
lret
adc
adc
lods
mov
cltd
movntq
jmp
xchg
push
mov
or
adc
pop
dec
xlat
mov
cmp
jp
or
jg
pop
and
or
sbb
sub
dec
xchg
sahf
mov
mov
js
mov
pushf
ret
fldcw
xchg
jmp
xchg
orl
sbb
inc
stos
rol
arpl
cmpb
pop
ljmp
loop
mov
pop
insb
mov
pop
adc
in
and
inc
andb
outsl
cs
fists
pop
add
dec
add
rol
and
adc
xchg
fistpll
lret
add
cld
out
cmp
mov
inc
daa
mov
pushf
fmull
mov
jb
or
pop
pop
xchg
or
test
inc
insb
adcb
clc
add
jle
and
dec
inc
ja
mov
jle
push
js
fisubrl
inc
or
or
ja
jg
addr16
push
mov
mov
gs
leave
jb
jecxz
and
ffreep
push
ljmp
popa
mov
xchg
les
leave
mov
jae
dec
inc
sbb
stc
jb
bound
mov
and
push
push
fsubp
or
pop
and
aaa
popa
fmull
jmp
pop
data16
and
bound
mov
fwait
mov
loop
stos
dec
ljmp
mov
ret
xchg
add
mov
mov
mov
int
jae
jl
les
sbb
mov
jmp
popa
mov
pop
inc
lahf
shll
dec
adc
orb
jmp
dec
les
add
call
rorb
lcall
sarb
cmpsb
push
lret
push
pushf
test
jmp
sub
inc
xchg
adc
cli
movsl
lods
mov
sub
mov
jg
jp
adc
pusha
xor
lahf
fsub
insb
out
push
mov
out
cmp
lods
pop
sbb
fcmovbe
mov
add
or
mov
jns
lds
sahf
dec
int
addr16
sub
int3
insl
mov
pop
add
push
loop
push
dec
fisubrl
mov
mov
cli
jecxz
sahf
xchg
mov
sub
sub
adc
inc
test
dec
lds
test
hlt
or
push
sbb
mov
or
into
pushl
mov
ret
push
jb
hlt
dec
mov
sahf
jae
mov
sub
sbb
or
mov
push
lds
adc
pop
push
cwtl
mov
jl
int
lea
pavgw
loop
or
or
pushf
lcall
in
sahf
fimuls
mov
or
push
insl
jecxz
jno
cs
sub
js
and
xor
xchg
push
adc
aaa
nop
dec
insb
and
mov
pop
inc
pushf
jmp
adc
xchg
adc
fisubl
jne
xor
out
insb
lds
inc
movsl
mov
int3
lret
mov
xchg
pop
mov
sbb
sbb
ret
or
movsb
jp
outsb
xchg
jno
test
js
adc
sbb
pop
jecxz
dec
lods
inc
les
xchg
cmpsb
pop
adc
fcmovb
jecxz
out
out
mov
andb
and
aam
scas
ljmp
sbb
sub
pop
call
mov
mov
and
mov
or
jge
gs
jmp
xor
out
ljmp
mov
test
call
test
ljmp
cmp
loop
fwait
push
imul
dec
sub
daa
dec
fiaddl
outsb
insl
xlat
sbb
mov
fildl
les
out
push
pushf
lahf
cmpsb
dec
or
mov
insb
roll
insl
in
in
lods
xlat
cmp
movsb
lcall
fldt
inc
add
mull
dec
add
rorb
mov
pop
aaa
sub
sbb
out
mov
mov
repz
sub
mov
jo
in
pop
lods
jne
ljmp
sbb
aam
cmp
sub
movsl
loop
jge
leave
out
push
mov
inc
mov
out
shrb
sarl
sub
pop
notl
mov
int3
clc
add
push
cld
dec
fnstcw
stc
popf
pushf
outsb
cmpsl
es
leave
push
mov
cs
or
jnp
jge
mov
mov
jecxz
shl
shlb
mov
aaa
lcall
cmp
lret
imul
sbb
pop
inc
roll
je
test
cld
ds
test
lock
clc
imul
jmp
ja
xor
sbb
jle
mov
ss
pop
sbb
sbb
fstpt
add
push
sub
ja
xchg
or
insb
jae
pop
stos
clc
gs
mov
ja
sbb
loop
jnp
mov
add
cli
mov
mov
add
mov
cmp
int
clc
xchg
cld
pop
outsl
aam
xchg
fwait
push
add
pop
aam
jae
out
stos
and
loop,pt
addr16
adc
mov
shrb
lahf
loopne
decb
divb
jae
sbbb
sub
ds
fmul
adc
cli
stc
aad
add
aaa
mov
jae
and
cmp
sbb
popa
loop
popf
sbb
lds
popa
pop
sub
cli
pop
aas
mov
clc
ror
lea
inc
mov
mov
into
aaa
stos
faddl
pop
xor
sahf
sbb
xor
jl
mov
xor
decl
fisubrs
rcrl
fsubs
loop
adc
sbbl
fcmovu
jbe
scas
out
out
sahf
cmc
adc
rorl
outsb
test
aad
inc
adc
push
or
cmp
in
into
inc
xlat
jcxz
and
mov
mov
cld
cmpsb
dec
xchg
lock
push
jmp
jbe
fsubrl
sbb
mov
adc
sub
push
or
push
popf
popf
clc
sbb
adc
push
ja
shrb
add
or
adc
inc
orl
push
jmp
pop
and
outsl
dec
add
jecxz
adc
xchg
or
dec
push
ficoml
push
in
pop
cmpsb
sub
adc
xor
fs
stos
mov
dec
push
push
dec
aam
test
add
lcall
xchg
imul
fs
aaa
movsb
sahf
cmc
adc
or
mov
popf
sub
out
jo
nop
enter
int
xchg
or
mov
roll
imul
adc
pop
sub
stos
cltd
jl
sub
push
add
jge
jmp
and
xor
cld
ja
out
popf
data16
and
cmpsl
faddl
push
ret
sub
push
data16
lea
push
roll
add
inc
sbb
lods
mov
sub
rclb
fwait
lret
push
jmp
sarl
mov
mov
cs
adc
loope
push
scas
push
mov
mov
pop
int
mov
jo
out
cmp
add
jb
imul
in
mov
jo,pt
xor
xchg
mov
shrb
arpl
xchg
dec
sbb
mov
inc
int3
clc
jle
add
cld
mov
push
cld
pushf
mov
fldl
jo
add
push
mov
fisubl
mov
fisubl
mov
in
lock
loope
sub
stos
sbb
ret
adc
mov
out
shrl
jge
fdiv
icebp
out
xor
inc
js
test
mov
insb
mov
or
jecxz
or
divb
scas
dec
insl
inc
add
gs
aaa
cmpsb
cmp
xchg
mov
stc
sub
and
push
cmpsb
adc
push
inc
orb
mov
cwtl
add
insb
sahf
pop
add
xlat
scas
adcb
fldt
xchg
sub
enter
pop
sbb
les
pop
shrl
lret
and
jmp
arpl
cmp
insl
int3
xchg
jge
or
push
in
aam
adc
pop
xchg
add
mov
cmpb
lret
arpl
fisttpll
jge
pushf
mov
loopne
push
fadd
xchg
into
inc
loop
mov
enter
mov
adc
cs
ja
lds
xchg
pop
cs
jmp
add
adc
out
lock
bound
add
xor
jl
test
outsl
dec
jne
outsb
mov
dec
jnp
xchg
ss
sbb
sub
call
es
stos
xor
cmpsb
push
mov
sub
mov
in
cmp
outsb
sbbl
aaa
sub
lds
out
ljmp
ljmp
pop
sbb
push
cld
sahf
pop
or
mov
fisttps
ret
das
gs
aaa
inc
fcmovnu
add
xchg
mov
psrlw
adcb
lock
pusha
mov
sahf
and
test
xchg
dec
jo
add
adc
mov
lret
fs
pop
repnz
jnp
sub
mov
pushf
mov
jbe
testl
cs
push
lods
push
cmp
jo
xor
arpl
xchg
repz
adc
jg
pop
fsubs
lcall
lea
test
mov
lds
insl
jb
in
ljmp
push
pushf
ret
dec
out
lock
ja
test
add
add
jbe
bound
addr16
mov
test
and
jle
jl
or
pusha
scas
sti
pop
and
cli
out
mov
int
xchg
or
lcall
xchg
jp
mov
in
cmp
jbe
pop
fldenv
in
sbb
mov
shrb
jg
out
sub
xor
rcrb
ss
xor
pop
pusha
ljmp
jp
jmp
roll
or
test
lahf
sub
icebp
adc
jge
daa
or
enter
xor
fimuls
push
cmpsb
int3
stos
sbb
repnz
push
sbb
add
jns
test
je
cmc
js
xor
testl
ss
enter
mov
ret
bound
insb
inc
js
out
or
xchg
rol
xor
outsb
addr16
sbb
imul
sbb
xchg
push
mov
lcall
or
aaa
sbb
jmp
add
or
cmpsb
push
fs
scas
pushf
stos
or
call
sbb
test
ret
out
dec
pop
lds
sbb
inc
ljmp
sub
xchg
cli
repz
mov
outsb
add
push
add
int3
mov
sbb
push
jne
test
leave
fucomi
out
mov
jo
mov
inc
jecxz
ds
add
push
shlb
dec
scas
sti
pop
out
dec
jbe
xchg
cmp
or
inc
mov
push
dec
mov
mov
push
lret
mov
pop
pop
mov
or
push
ss
outsl
out
xchg
add
or
andb
dec
xor
repz
andb
mov
fidivl
pop
lcall
movb
jmp
cmpsb
mov
push
adc
sbb
out
inc
mov
mov
outsl
add
adcl
ret
inc
fcmovb
lcall
and
sub
xchg
or
inc
les
bound
sub
mov
and
enter
insl
xor
in
lcall
dec
stos
sub
fisubrl
icebp
cld
mov
jmp
push
mov
pop
add
aad
fidivs
ss
pop
push
mov
cmp
push
test
adc
aad
sbb
fadds
out
dec
jo
mov
pop
xchg
mov
mov
cmp
cld
jle
and
fisubrs
mov
xor
ret
lahf
rolb
arpl
stos
stc
rcl
pop
ljmp
cmp
adc
test
mov
mov
pop
ror
lret
mov
jnp
out
sbb
mov
lock
rol
jl
test
push
mov
xchg
adc
mov
mov
dec
test
inc
mov
sub
enter
and
popf
cmp
out
sbb
adc
adc
ljmp
imul
lcall
pop
imul
inc
roll
mov
lahf
xor
test
divb
pop
lcall
in
ja
loop
xor
dec
out
insb
je,pt
inc
cmp
rorb
je
mov
inc
dec
leave
ljmp
mov
pop
or
lret
push
arpl
adc
stos
mov
dec
mov
inc
mov
dec
dec
mov
mov
or
rcrb
notl
int3
inc
pop
sub
mov
push
out
sbb
jmp
sub
lcall
movsb
push
decl
push
andl
test
push
ret
in
jle
jnp
imul
or
sbb
mov
adc
test
mov
add
jno
inc
stos
idivl
inc
sbb
fdivl
cmpsb
or
mov
cmp
negl
and
popf
imul
nop
jp
mov
push
mov
cmp
mov
hlt
add
arpl
pop
sbb
call
sbb
repz
jmp
hlt
and
xchg
shld
mov
or
mov
push
mov
mov
sub
pop
push
lods
adc
lods
jmp
jge
cwtl
test
adc
xor
add
pop
addr16
xchg
and
or
pop
stos
rcll
fldcw
xor
es
inc
sub
xor
rcrl
push
adc
ret
pop
xchg
inc
xchg
subb
jle
cli
movsl
dec
jle
push
into
in
sbb
mov
sbb
mov
sub
test
testb
mov
push
aam
cmp
cmp
or
xchg
das
imul
iret
lods
fwait
scas
scas
xor
mov
lea
mov
jp
fnstenv
mov
xchg
popf
and
test
inc
pop
sub
xor
jmp
fadds
shrb
jmp
or
push
push
add
clc
cmpsl
sub
mov
dec
or
xchg
inc
es
mov
movsb
cmp
cmp
and
dec
jmp
sub
lret
shll
mov
loop
test
stc
jmp
jle
enter
imul
test
daa
jnp
cmpsb
daa
adc
jge
pushf
push
out
pop
adc
repnz
mov
mov
inc
xor
jecxz
daa
stc
or
scas
int3
push
sahf
push
jae
lods
in
add
data16
or
or
xchg
jl
loop
mov
jbe
mov
sarl
pop
dec
push
movsb
jp
jnp
sub
shll
or
fldcw
xchg
inc
imull
sbb
fstpl
mov
sub
dec
es
insl
rcr
xor
sbbb
es
int3
cld
mov
shl
popf
dec
adc
mov
mov
das
ficomps
jne
ja
ret
mov
addr16
dec
lcall
fildll
rcrl
add
adc
aaa
mov
jno
imulb
cmpb
stos
stos
les
mov
lds
xchg
loop
in
insb
icebp
add
jmp
add
mov
adc
movsl
jo
jbe
xlat
add
sbb
scas
mov
lock
inc
xorb
jmp
jl
sbb
and
in
or
pop
xor
and
dec
mov
shlb
clc
or
cs
cli
push
sbb
pop
insl
push
jo
push
fdivrp
jp
mov
sub
or
iret
dec
iret
sbbl
push
inc
jmp
push
sbb
subb
jbe
insl
int3
mov
mov
imul
pop
adc
add
repnz
enter
shr
ljmp
ret
sub
adc
mov
or
repnz
ficoml
fld1
push
pusha
stos
lret
push
jnp
stos
push
push
pushf
imul
ret
jmp
pop
or
popa
stc
cmc
mov
xlat
mov
or
or
push
ret
lods
push
les
push
mov
pop
out
fwait
cmp
adc
xchg
mov
mov
add
xchg
rorl
test
fsubr
and
subl
cmp
xchg
js
push
sbb
je
xor
add
hlt
sbb
and
add
movsb
in
mov
and
es
jno
mov
scas
div
cs
stos
enter
aam
stos
dec
push
push
sbb
adc
repz
inc
push
adc
xor
ljmp
imul
stos
mov
shr
jg
aam
xchg
cmp
ficoml
pop
int3
fcoms
cmp
push
xor
sbb
ljmp
xor
lods
aaa
es
jae
cmp
sbb
dec
pushf
faddp
ss
ljmp
leave
dec
cltd
in
rorb
jmp
mov
pop
in
jmp
ret
testb
xchg
and
mov
xor
adc
adc
inc
outsl
test
in
addb
and
imul
dec
add
imul
push
add
jl
inc
xor
mov
sub
xchg
add
lds
xor
mov
sbb
sbb
jbe
outsb
or
or
cltd
fs
dec
mov
jae
lcall
testb
fnstenv
jbe
push
test
mov
xor
aam
insb
inc
shr
xor
push
scas
das
push
leave
xchg
add
cwtl
pusha
cmp
aas
dec
mov
mov
lcall
adc
sub
jne
test
movsl
ljmp
xchg
xor
adc
push
rcr
dec
sub
xor
dec
cs
xor
ljmp
hlt
aad
test
sbb
xchg
mov
jl
data16
dec
jbe
cld
bnd
pop
testl
mov
push
push
out
fisttps
pop
cmp
imul
xchg
mov
xor
loope
adc
iret
pop
and
push
ja
mov
fisubl
dec
ret
loop
scas
out
mov
jge
jb
cmp
push
lret
call
and
push
fcmovb
mov
lret
adc
hlt
pop
ss
or
jecxz
pushf
dec
scas
mov
adc
fsubrs
mov
iret
pop
ljmp
shll
cmp
push
jmp
and
mov
insl
xor
jmp
loop
hlt
negl
fcmovnbe
sbb
adc
scas
orb
mov
cmp
dec
sbb
popa
mov
minps
fidivs
or
in
pusha
xchg
push
and
arpl
retw
xor
mov
loop
out
sti
insl
xor
and
sbb
ret
pop
pop
sahf
inc
in
outsb
pusha
cld
sbb
popa
dec
pusha
or
inc
mov
pusha
mov
imulb
push
inc
imul
aaa
stos
lcall
mov
xchg
jecxz
out
mov
cmpb
out
movsb
loop
sbb
dec
and
stos
shrl
pushf
xor
movsb
jne
jmp
mov
out
pop
jg
mov
dec
adc
xor
in
jnp
cmpsl
es
cmc
jecxz
into
and
inc
push
movsb
adc
popl
call
lods
imul
pop
pop
stos
movsl
xchg
jno
mov
push
das
sbb
or
fstpl
stos
cmp
test
pop
iret
mov
lahf
stos
cli
adc
push
dec
and
mov
xchg
or
mov
inc
pop
cli
xchg
in
test
mov
or
or
adc
test
xchg
push
arpl
cli
popa
mov
aam
add
ss
cmp
xor
shrl
sbb
add
fstl
rolb
pop
sub
pop
cltd
movsb
and
mov
push
xchg
dec
aaa
fisubs
lcall
into
out
rorb
lret
cmc
cmp
xor
pop
adc
std
cmp
xor
mov
jbe
lods
cli
push
movsb
cmp
mov
mov
test
sarl
shrl
int3
rorb
in
inc
cmp
ds
ljmp
fistps
jmp
add
pop
mov
xchg
cld
and
dec
sbb
cwtl
insl
sub
rclb
mov
lods
or
repnz
rclb
dec
lret
scas
nop
push
cmpsb
rorl
les
sbbb
aam
add
lret
push
lds
sub
decb
sbb
test
out
push
sub
loop
lods
loope
push
sbb
imulb
xchg
movsl
push
insl
jp
sti
popf
sbb
cmp
mov
setno
in
and
mov
fwait
cli
cli
and
xor
mov
dec
sbb
add
out
stos
mov
jae
adc
gs
cmp
or
shlb
pop
and
bound
sub
cmp
inc
lret
sub
dec
clc
dec
fcmovne
mov
dec
cwtl
imul
inc
sahf
leave
dec
and
mov
dec
shrb
pop
lcall
mov
sahf
fisubl
cmp
ret
push
fisubs
xchg
adc
dec
out
stos
lcall
repnz
sti
or
or
xlat
xchg
push
fidivs
mov
popa
inc
bnd
dec
shll
mov
in
rorb
shr
fs
jne
dec
xlat
enter
jne
and
aam
sub
and
daa
lret
jle
mov
xchg
rclb
mov
nop
or
in
jmp
jmp
or
xchg
data16
pop
clc
shr
lods
mov
lret
mov
push
jmp
mov
fisubs
repnz
ds
lea
cmp
sub
push
jge
sbb
outsb
xor
loope
inc
xchg
mov
xchg
inc
jb
jnp
lret
fistpl
push
add
pminsw
fisubrs
xchg
push
mov
lds
out
or
inc
or
inc
icebp
sub
sarl
test
and
xlat
mov
inc
into
fsubrl
fs
out
or
or
mov
lds
jmp
xchg
cmp
cmpsb
and
ljmp
cmp
mov
jmp
or
cmp
stos
gs
loop
mov
loopne
xor
sbb
xchg
ret
cld
xlat
ss
jb
or
jnp
ds
xchg
mov
jle
lret
scas
aas
add
xor
lds
adc
jmp
ret
cwtl
push
push
add
or
insb
pushl
gs
mov
sahf
inc
jbe
jge
pop
add
pop
int
xor
or
mov
xor
dec
cmpsb
and
xchg
shll
pop
mov
push
xchg
dec
xchg
pop
jp
push
mov
or
adc
mov
xor
xchg
clc
cmp
stos
adc
mov
neg
stos
fldl
cs
rclb
rorl
insb
fsubs
jecxz
jmp
jmp
dec
lret
fs
lock
movsl
fnsave
and
mov
in
sub
mov
xchg
test
push
push
jnp
push
mov
imul
dec
leave
sbb
scas
or
mov
incb
xchg
in
fisttpl
xchg
insl
push
repz
mov
shrl
test
cmpsl
mov
xor
jmp
imul
push
inc
jnp
mov
mov
inc
insb
cld
inc
sti
in
pushf
out
mov
aam
adc
pop
shr
out
jge
rolb
cmp
idivb
cmp
jecxz
inc
and
ds
or
mov
sbb
imul
jle
push
stos
fldt
mov
jg
cmc
dec
xor
testl
or
rorl
sub
sbb
loopne
pushf
ss
dec
push
or
mov
fwait
mov
mov
inc
jge
in
mov
jb
int3
xchg
mov
mov
outsb
es
sbb
or
fistpl
hlt
cwtl
lahf
push
out
ret
mov
ja
jae
sub
jne
and
jbe
stos
out
or
sbb
sbb
test
xlat
add
stos
xchg
dec
cli
call
in
ficomps
xchg
jno
sti
pop
pusha
sbb
mov
mov
sub
pop
outsl
xchg
js
cld
push
lea
out
repz
or
push
addr16
jmp
and
mov
out
bnd
leave
add
jae
sarb
repz
lea
sbb
stos
sub
sub
sbb
sub
push
cmpsb
dec
xor
xchg
icebp
imul
out
or
add
dec
xchg
call
mov
ror
ret
aaa
sbb
lock
jl
push
mov
and
jne
dec
pop
pop
xchg
jb
xor
or
dec
or
in
add
in
mov
insl
fmul
ds
push
dec
fidivrl
push
pop
leave
in
inc
adc
cmp
ss
dec
mov
lods
or
inc
pmulhuw
loop
jne
mov
sub
jb
mov
ja
sub
and
sub
mov
fsubrl
mov
loop
sub
rorl
push
xor
xchg
mov
repnz
push
scas
or
and
dec
push
inc
xchg
mov
mov
mov
jmp
sub
push
psrlw
fcmovnu
mov
ja
dec
ret
add
pop
out
rclb
xlat
in
imul
nop
icebp
js
cmp
mov
cli
int3
lret
sub
sbb
jmp
scas
lods
loop
fldz
mov
lcall
cmp
lret
loop
or
sbb
xor
gs
add
xchg
fiadds
xchg
dec
add
shrl
pop
mov
jmp
test
mov
rclb
mov
push
inc
fisubs
push
mov
inc
push
or
lret
sbbb
shll
jns
cli
cmpsl
adc
fisttpl
xorb
mov
sbb
cmp
sub
sbb
aaa
les
dec
mov
scas
xor
int
mov
pushf
fisubs
cmp
insl
jmp
ficomps
cli
repnz
mov
sub
add
cltd
lods
mov
imul
aaa
jmp
xchg
jae
ss
insl
test
cmp
adc
xor
fcmovnbe
sbb
and
imul
xchg
dec
mov
mov
sbb
imul
cwtl
jecxz
mov
cmpb
sbb
pushf
imul
mov
add
mov
call
pushf
adc
cmp
jmp
or
xor
imulb
push
stos
pusha
subb
cli
sahf
adc
lods
rcrl
mov
loopne
jmp
stc
pop
rolb
hlt
cltd
push
aaa
jge
mov
sbb
sub
mov
stos
loop
pminsw
ja
rcrl
sub
sub
int3
xchg
or
in
push
pop
daa
mov
cwtl
jnp
test
xor
push
int3
and
xchg
add
add
in
push
or
push
xlat
jns
je
mov
test
mov
mov
test
jp
sbb
jmp
ret
xchg
push
push
test
fcomps
mov
dec
xlat
and
mov
pusha
mov
stos
enter
fdiv
lcall
bound
in
in
jbe
and
dec
sbb
mov
cmp
out
xchg
cmp
sbb
mov
stc
pop
rep
lret
shrb
push
xchg
sahf
call
dec
jmp
xchg
push
das
mov
add
leave
js
xchg
or
push
pop
mov
xchg
sub
mov
sbb
adc
pop
dec
and
cmp
int3
jle
mov
mov
mov
pusha
leave
cmpl
sub
dec
xlat
jbe
adc
or
push
movsb
fs
mov
jno
mov
inc
aaa
pop
leave
cwtl
push
mov
or
and
add
call
leave
or
or
addps
jecxz
bnd
xchg
fwait
ljmp
jo
add
adc
push
push
arpl
mov
push
cli
gs
mov
inc
mov
call
push
sbbl
lret
jl
cmp
frstor
mov
mov
test
xchg
sub
sub
iret
cli
fnstenv
adc
add
stos
push
sbb
lcall
cmp
mov
sbb
or
pop
mov
or
jno
call
pop
pop
or
mov
inc
nop
mov
xor
push
or
xor
jnp
mov
mov
inc
push
xor
lahf
das
or
or
in
fidivl
int3
frstor
sbb
or
or
loopne
or
enter
pushf
call
adc
inc
sub
push
clc
ja
mov
lahf
sbb
iret
mov
cmp
int3
mov
xor
jbe
sahf
jne
and
pop
inc
aas
incb
arpl
sbb
insl
js
jl
ret
pop
out
jne
jg
scas
xor
adc
insl
sbb
push
in
pop
lret
xor
push
out
fs
ljmp
fsubp
sub
push
xor
in
hlt
mov
dec
sub
pop
or
xchg
mov
int
inc
mov
mov
add
ret
fnstcw
pop
iret
gs
enter
je
jmp
call
sbb
jmp
push
add
dec
xchg
cmpsb
fmuls
sub
adc
das
mov
dec
in
push
sub
jmp
cmpsb
cmp
loop
fidivs
loopne
ret
arpl
jo
call
test
push
cmp
cs
mov
xor
rorb
rcll
add
ret
sub
adc
adc
mov
or
iret
dec
loopne
mov
jmp
ss
data16
mov
lea
xchg
jl
lods
in
pop
jmp
mov
add
sub
sbb
ss
fldt
sub
mov
loope
mov
gs
fmull
mov
push
or
sbb
mov
outsl
xor
adc
dec
jmp
loop
inc
subb
leave
jmp
xchg
scas
jb
std
or
sub
pop
insl
mov
push
imul
mov
out
movsb
add
test
jl
inc
adc
inc
add
fs
sub
ret
shr
outsl
test
sti
sbb
popa
xchg
adc
loop
push
cmpb
orl
xchg
call
adc
lods
add
xchg
jmp
sub
inc
in
push
adc
push
inc
inc
pop
sub
jne
xor
ret
xor
ret
in
cwtl
lea
or
fucomp
jecxz
je
insb
adc
xor
jecxz
sbb
sub
aam
enter
scas
lahf
cli
into
in
pop
adc
or
into
imul
dec
or
mov
shll
aad
add
sbb
call
arpl
popf
cmp
sub
sub
in
ljmp
mov
jns
mov
ret
inc
test
dec
cli
decb
out
mov
dec
or
jp
jmp
jg
shl
mov
pop
inc
ret
imul
cmp
bswap
xor
add
dec
pop
adc
testb
ss
shll
and
mov
pop
fidivl
addb
mov
jle
stos
jmp
add
jmp
rol
scas
cmp
out
push
outsb
leave
test
jmp
sbb
decl
test
jmp
jns
sar
jae
adc
add
pop
jne
out
adc
adc
pop
cmp
sub
fdivrl
sbb
pop
fnstcw
lea
mov
sub
push
hlt
or
adc
or
xchg
loope
pop
out
fwait
xchg
pop
cmp
icebp
sbb
inc
enter
call
and
loope
in
gs
mov
test
sbb
iret
dec
mov
arpl
jne
in
nop
repnz
hlt
sub
adc
pop
or
mov
adc
lods
arpl
xchg
and
xchg
dec
shrl
scas
icebp
cmp
ljmp
repz
arpl
mov
sbb
sub
push
fbld
xchg
jne
sub
js
or
xor
lret
xchg
scas
mov
xor
ja
fstpt
cmp
xchg
mov
jle
shlb
mov
push
mov
sahf
fsubrs
cli
out
jmp
rcrl
scas
add
fdivl
fwait
pop
fisttpll
xchg
stos
mov
add
adc
scas
cli
push
arpl
rcl
rcll
lcall
addr16
lahf
xchg
pushf
arpl
cmp
pop
imul
push
ljmp
sbb
popf
ror
shrb
shrl
loope
sub
test
xor
dec
xor
push
ss
in
jecxz
fwait
cmp
adc
xchg
or
filds
jg
sbb
popa
scas
scas
add
pushf
lret
mov
inc
xchg
fmul
fiaddl
call
push
test
fdivrl
pop
xor
mov
push
fcompl
pop
add
icebp
jne
roll
in
test
sub
pop
xchg
xchg
cltd
movsl
pop
out
loop
jne
mov
ror
faddl
push
or
gs
jecxz
ret
mov
fwait
mov
sub
inc
andb
sub
icebp
mov
xchg
pop
adc
cmp
mov
sbb
sahf
stos
jp
and
mov
pop
xchg
inc
aam
fcomp
mov
xor
and
or
rcll
insb
sti
arpl
ficompl
add
or
adc
fnstsw
sahf
jl
and
mov
push
dec
mov
inc
aam
mov
push
xor
dec
sbb
jmp
pop
cmp
add
sub
pop
sbb
stos
xchg
fbstp
inc
push
arpl
or
sub
into
jmp
mov
push
xchg
test
mov
cli
jle
cmpsb
dec
inc
and
adc
movsl
into
pop
add
cmpsl
rcrl
xor
or
jmp
sbb
cmp
int
dec
test
mov
or
pop
and
in
mov
sub
fdivrl
inc
or
mov
sbb
or
xor
outsb
ficompl
mov
lahf
ret
jae
mov
xorl
repz
divl
orl
jmp
jge
lret
out
fldt
vmwrite
popf
mov
xlat
icebp
faddl
scas
cmp
fisubrl
sbb
push
fsubl
movzbl
dec
mov
sbb
popa
pop
pushf
or
or
pop
push
or
arpl
or
out
or
sub
add
imul
add
fwait
xchg
pop
ret
testl
lea
shr
dec
sbbl
dec
test
adc
push
clc
jecxz
inc
jae
data16
add
cltd
popf
daa
xchg
push
mov
xlat
xlat
fcmove
mov
arpl
ljmp
push
dec
jmp
xchg
sub
mov
xchg
or
clc
leave
jecxz
inc
mov
jae
out
cld
popa
xor
fisubs
adcb
push
adc
sbb
mov
inc
pop
xchg
iret
arpl
cmp
jmp
mov
add
xchg
in
fwait
leave
or
or
push
mov
xchg
jae
idivl
pop
xchg
xor
arpl
fucomi
cmp
sbb
sbb
push
mov
test
add
jmp
sbb
sub
cltd
inc
cmp
push
subb
popa
xchg
or
xor
mov
cmp
fsubs
lock
inc
and
movsb
test
mov
sahf
out
pop
lcall
lods
sub
addr16
push
repz
mov
xchg
lret
xchg
out
jecxz
hlt
pushf
inc
sub
outsb
sbb
sarl
in
sbb
xchg
or
aam
lret
dec
sub
in
inc
mov
lods
dec
pop
enter
sub
or
pushf
dec
jle
lret
pop
mov
add
shrl
adc
jg
lock
lcall
jle
movsl
push
sti
push
mov
push
js
xlat
fsts
cmpl
xchg
popa
jg
mov
shll
adc
fildl
inc
out
repz
mov
adc
or
push
dec
insl
sub
sbb
push
dec
xorb
jge
jle
xchg
cmp
test
test
jae
mov
jmp
push
ja
fwait
add
xlat
cmp
test
mov
jns
mov
mulb
or
subl
sbb
mov
sbb
add
dec
fldcw
cmp
test
scas
cmpsb
movsb
push
in
leave
mov
cld
aaa
data16
xor
or
dec
iret
jae
mov
xchg
call
sarl
jbe
and
cmp
out
fdivrs
stos
aaa
jnp
scas
sbb
repz
sti
aaa
jb
dec
mov
imul
out
in
mov
mov
mov
mov
iret
movsb
shll
cmp
arpl
enter
fisttps
xchg
or
pusha
and
jo
into
add
xchg
cwtl
push
xchg
and
hlt
xchg
xchg
fnstsw
mov
mov
in
cmp
cmp
decb
sbb
pop
movsb
xor
stos
mov
cmp
out
sbb
jmp
arpl
test
loop
ss
dec
lods
push
mov
int3
in
addb
and
imul
sub
jb
inc
cmpsl
dec
dec
adc
shr
fisubrl
add
pop
pop
inc
cli
call
inc
mov
in
jns
xchg
or
js
in
adc
imul
sub
xchg
cmp
fnstcw
popa
in
mov
mov
sub
lods
hlt
stos
push
xchg
scas
mov
ret
rcr
fwait
loop
jecxz
iret
lods
mov
xchg
dec
stos
ret
shlb
adc
cwtl
jno
insb
adc
daa
rol
sub
dec
push
ret
aaa
mov
pop
ljmp
mov
push
mov
cmp
aam
in
arpl
loope
or
or
push
out
cmp
loope
arpl
loop
fs
pop
pop
or
test
lods
leave
or
dec
dec
test
dec
ror
rorb
add
repnz
ljmp
fisttpll
aad
adc
or
scas
xchg
sub
cmp
lds
stos
in
lret
sbb
dec
out
rcll
fcmovbe
mov
loop
fcmovbe
in
loopne
int3
in
lahf
lret
gs
jge
fiadds
scas
test
cmp
xchg
adc
push
shrb
insl
sti
aaa
mov
xchg
or
out
insb
lret
enter
aas
add
iret
or
adc
scas
add
out
insb
imul
sbb
cmp
pusha
loop
cmp
leave
mov
fimull
adc
insl
sti
adcb
lea
push
add
mov
out
xchg
mov
and
push
or
in
jp
inc
pop
into
dec
sbb
ret
push
repnz
sub
gs
lahf
ficoml
rorl
dec
test
stos
scas
jo
jge
xchg
imul
imul
dec
imul
adc
xor
setb
imul
push
dec
add
xchg
cmp
ret
aaa
cmpl
rorb
leave
push
or
adc
adc
idiv
push
cmp
imul
cli
cld
and
out
popf
sarb
sbb
pushf
imul
pushf
mov
cmp
xor
xorb
add
mov
mov
arpl
fisttpl
ret
jbe
jnp
test
or
cltd
je
sub
in
adc
mov
test
ljmp
xchg
lods
jae,pt
adc
test
lods
les
adc
mov
movsb
daa
mov
imul
lcall
outsl
fmul
or
movsb
subl
out
mov
lock
jp
ret
cli
add
enter
movsb
cmp
sub
imul
imul
sub
insl
mov
out
stos
ret
dec
mov
ret
sahf
pop
dec
adc
loope
cwtl
sbb
loop
mov
mov
stos
aaa
lahf
jecxz
xorb
in
aam
ja
push
mov
mov
mov
mov
add
sbb
scas
adc
cmp
iret
fldt
mov
sub
dec
add
push
popa
adc
dec
cs
pop
xchg
loop
jp
out
sub
push
add
add
cmc
fbstp
stos
dec
cmp
stos
adc
mov
lahf
call
insb
mov
insl
pop
add
push
cmpb
jno
int
insb
mov
xchg
pop
fadds
imul
sub
cltd
ss
mov
or
lahf
es
sub
scas
add
pop
test
popf
scas
das
fidivrs
mov
or
movsb
out
enter
push
dec
in
dec
dec
cmp
data16
sub
outsl
pusha
lahf
arpl
out
push
stos
mov
out
dec
and
fimuls
mov
mov
dec
pop
sbb
dec
xor
in
and
sbb
cmp
push
das
mov
insl
in
dec
insb
and
fimuls
push
into
xchg
das
cmc
into
jge
sub
sbb
or
call
stos
stos
insb
push
in
xlat
cs
xchg
mov
sbb
insb
dec
daa
test
cwtl
in
imul
adc
dec
addb
into
adc
shlb
sbb
repnz
cmp
rorl
cwtl
lods
outsl
adc
sbb
cli
jmp
sbb
xor
int
lods
paddusb
xchg
dec
nop
cli
add
adc
cwtl
repnz
stos
cwtl
insl
or
aaa
add
fwait
stos
scas
adc
mov
mov
mov
cmp
hlt
outsl
push
aam
dec
lea
xor
push
dec
or
cmp
stos
and
push
mov
imul
loope
int
lods
shr
rcrl
cmp
int
bswap
xchg
ret
mov
out
mov
cmp
stos
dec
test
dec
bsf
dec
jg
jbe
js
mov
cmp
push
cs
or
dec
scas
out
call
dec
mov
daa
mov
or
mov
and
fisubrs
push
out
sbbb
inc
sub
cmp
lock
pop
inc
leave
popf
sbbb
pop
loop
mov
or
sbb
sub
mov
pop
sub
aam
dec
jecxz
ljmp
jns
push
stos
test
or
or
xchg
mov
push
scas
adc
sub
xor
add
testl
sub
mov
insl
out
or
or
out
in
cltd
imul
popa
aam
fnsave
das
xor
aad
add
fs
fisttpl
mov
loope
add
inc
mov
dec
mov
mov
dec
loop
cmp
mov
sbb
jle
scas
enter
push
jmp
and
aam
lock
sub
jecxz
xchg
outsb
xor
test
dec
in
or
sbb
mov
pop
ja
stos
in
ljmp
test
cltd
mov
or
mov
sub
jmp
test
jmp
loop
jmp
cs
out
or
lds
sbb
out
sub
xor
fcomp
or
mov
insb
out
dec
mov
jp
lea
test
xchg
das
test
mov
sbb
xchg
das
cmp
data16
test
dec
mov
repz
sbb
daa
insb
out
push
scas
add
das
or
repnz
pusha
pop
add
adc
cli
popa
imul
stos
dec
and
aam
imul
push
push
dec
mov
cmp
loop
push
push
mov
jae
sub
xor
js
sub
js
rorl
cmp
mov
test
fisubrs
sub
or
loope
dec
and
sub
lret
incb
movsl
pop
in
xchg
mov
or
cmpsb
lods
or
aaa
jne
cwtl
idivb
data16
rcrb
movsl
add
add
add
mov
frstor
mov
out
icebp
xor
scas
xor
ss
sar
jle
xchg
test
xchg
inc
jmp
std
dec
test
fldcw
in
sbb
fwait
push
jle
stos
pop
mov
in
fwait
pushf
mov
xchg
test
andl
ret
jne
inc
outsb
sti
es
xchg
in
jecxz
sbb
je
sub
mov
testl
lea
sub
mov
and
push
loop
out
ret
aam
in
lods
sub
adc
outsb
push
pop
pop
mov
orl
ss
sbb
add
int3
pop
xchg
sub
scas
mov
test
orl
inc
out
sub
out
pop
insl
aam
mov
mov
mov
ret
jnp
call
in
data16
or
cs
outsb
push
sbb
gs
xchg
sub
or
mov
push
jmp
mov
and
push
bound
mov
cmp
xor
insb
and
les
add
mov
add
lock
cmp
scas
jb
push
dec
adc
outsl
lret
adc
mov
cmp
lods
cmp
ds
mov
lods
add
cmpsb
stos
xchg
xor
jbe
stc
fucomi
mov
jb
mov
icebp
dec
leave
test
in
xor
push
push
repz
jnp,pn
mov
push
adc
sahf
jecxz
pop
testb
xchg
loope
sub
dec
int3
lret
jnp
call
fisubl
mov
neg
mov
stos
outsb
lret
ret
cltd
mov
or
lret
cmp
cmpsl
lea
and
pop
push
bound
mov
xlat
mov
mov
jb
scas
lahf
les
lock
xor
aad
ds
or
mov
ss
jns
arpl
pop
outsl
dec
mov
out
ljmp
dec
stos
cmp
inc
inc
call
jecxz,pn
and
mov
stos
jmp
cli
stos
or
adc
xor
mov
xor
into
dec
inc
push
ss
xchg
push
incb
push
das
mov
inc
push
dec
cmpsb
loopne
addr16
mov
rorb
mov
lret
add
add
int3
mov
jbe
xchg
cs
mov
jbe
dec
mov
adc
push
sbb
cmp
repnz
int
popf
inc
add
or
scas
pop
ret
xor
ret
jle
fsubrp
sub
pusha
out
adc
aad
push
dec
inc
cmp
push
lods
dec
lret
repz
xor
outsl
inc
push
inc
loop
lock
pop
fisubs
aas
cmpsl
test
out
push
or
fimull
adc
insl
xchg
jb
push
jo
or
sbb
push
outsb
dec
scas
jecxz
cwtl
mov
arpl
xor
inc
mov
jle
mov
sbb
pop
in
iret
mov
repz
scas
and
mov
push
call
mov
aam
lret
std
xchg
jmp
call
xchg
int3
xor
inc
outsb
mov
jg
cmp
ja
mov
rcl
mov
or
jmp
div
jmp
jb
add
cmp
daa
add
sbb
dec
fstpl
mov
lods
fwait
and
cmp
mov
leave
inc
dec
loope
test
jmp
jp
sbb
jg
mov
mov
pushf
xchg
and
lds
dec
inc
sbb
xchg
subb
sub
sub
xchg
in
mov
aad
ss
call
cli
sub
or
xchg
sahf
xorl
loop
push
add
sbb
cltd
lods
add
jmp
jmp
xor
sbb
jmp
stos
test
sbb
sbb
les
push
test
faddl
xchg
mov
sbb
mov
mov
inc
sti
lods
dec
cmpsl
dec
int3
add
movsb
pop
jae
add
push
mov
data16
cmp
cltd
stc
shl
jge
xor
lea
pop
jb
adc
cs
push
fisttpll
shr
jno
fcoml
xor
dec
fcmovnb
adc
sub
mov
leave
jbe
lahf
movsl
mov
lcall
mov
mov
outsb
adc
les
mov
sub
push
data16
jmp
in
cmpsl
adc
test
rcrl
sbb
xchg
repnz
mov
imul
or
xchg
xlat
test
lcall
scas
aad
in
xlat
mov
pop
clc
mov
xchg
dec
mov
cmpsb
sbb
xchg
fs
mov
push
ds
pushf
arpl
fidivl
stc
jecxz
int3
push
dec
gs
push
fdivrl
in
inc
push
clc
pop
push
jecxz
lret
cmp
sbb
mov
std
cli
fisubs
mov
cmp
mov
std
rcll
cwtl
bound
sub
inc
sbb
cwtl
hlt
jnp
dec
adc
add
jne
cmc
sbb
rcrb
imul
jmp
outsb
cs
mov
adc
adc
test
and
mov
mov
add
cmp
call
cmp
mov
mov
mov
inc
jne
inc
and
sbb
mov
push
or
mov
repz
mov
cmp
mov
hlt
push
cmp
mov
and
mov
ja
inc
or
pushf
mov
mov
js
add
dec
movsb
ss
sbb
push
mov
into
push
cmpsl
sbb
mov
mov
movsl
xchg
inc
or
test
aam
adc
mov
pushf
aas
xor
sbb
insl
add
or
jbe
in
sbb
dec
fnstenv
pop
ss
rcll
hlt
fwait
cmp
jl
mov
rcrb
lods
fstl
rclb
dec
adc
ret
cmp
mov
add
insl
mov
pop
push
sub
sub
mov
sub
push
aad
ljmp
mov
leave
or
mov
xor
stc
call
push
or
push
jns
xchg
cli
ret
xchg
xor
dec
jnp
lahf
jmp
fldl2t
jbe
fwait
into
push
leave
inc
adc
int
fs
lsl
out
mov
mov
dec
jo
fisubrs
pop
sbb
inc
sub
stos
xchg
sub
cs
pusha
jg
shlb
push
adc
es
cli
sarl
sbb
fisubrs
cmp
ss
or
adc
gs
dec
les
clc
lcall
je
and
lea
jmp
rorb
sub
rcrl
inc
inc
push
mov
lods
aaa
inc
adc
dec
push
divb
pop
adc
or
mov
mov
push
js
mov
fdivrs
sbb
inc
jmp
cmp
mov
cmp
in
xlat
sbb
arpl
sbb
mov
lret
jp
dec
mov
lock
xor
vxorps
jne
adc
jmp
addb
je
dec
aam
mov
dec
cmp
or
dec
out
sbb
lret
roll
lds
ret
cld
cmp
sbb
pop
mov
rol
ficompl
bound
push
mov
orb
inc
in
scas
out
pop
mov
jne
fbld
mov
scas
jnp
mov
pop
fcomip
pop
lock
adc
pop
add
xor
and
in
xor
xchg
push
repnz
shl
fsincos
jle
aad
out
pop
test
cmp
mov
in
sbb
mov
das
mov
imul
subb
cmp
sbb
test
out
mov
les
adc
bound
mov
jne
sti
inc
add
jmp
cwtl
xchg
stos
add
mov
ret
pop
inc
pop
inc
fnstcw
push
push
sahf
sub
sub
daa
call
fldcw
loope
jbe
jmp
mov
outsl
out
mov
push
shl
addr16
dec
loopne
mov
jne
xchg
jae
or
hlt
js
xor
ss
cmp
test
cmpsb
pop
stos
lods
push
ljmp
addr16
in
fadd
cmpsb
test
xchg
int
xlat
iret
test
divb
adc
xchg
xor
dec
mov
sbbl
xchg
mov
jmp
and
push
cs
inc
adc
push
outsb
ret
fdivrl
int3
repz
cmpsb
add
sub
out
sbb
mov
dec
icebp
lret
stos
xchg
mov
es
lea
test
mov
mov
cmpsb
mov
mul
push
add
loop
gs
sub
cmpsl
mov
ret
clc
sub
mov
xor
sub
int3
sub
lret
xchg
test
scas
loop
ds
adc
jecxz
arpl
call
jb
mov
jecxz
dec
cli
xchg
es
dec
push
sbb
xor
enter
outsb
pop
ja
or
dec
addr16
jg
mov
icebp
repnz
inc
mov
jae
call
hlt
shrb
iret
mov
rcr
ds
sub
dec
mov
test
push
sti
insb
pop
mov
or
dec
dec
inc
nop
test
loop
adc
add
push
fstpl
lsl
pushf
inc
cmp
lock
ret
das
scas
fwait
sbb
sbb
adc
jmp
clc
xchg
ljmp
mov
ljmp
mov
into
adc
ljmp
shl
ja
or
mov
xor
loopne
in
stos
rep
inc
cmp
jmp
push
ret
sarb
or
mov
call
add
les
xchg
scas
mov
fwait
adc
push
in
sahf
jle
cli
ss
sub
test
jae
test
repnz
and
mov
jae
ret
adc
xlat
ret
lret
cmpsl
sti
or
xchg
mov
sbb
mov
hlt
adc
popa
dec
push
cmpl
jo
std
outsl
hlt
call
shl
pop
push
mov
or
mov
out
js
or
adc
orl
mov
pop
pushf
xor
scas
lret
mov
sub
stc
stos
mov
jae
in
js
jg
jbe
fisubrl
mov
xorb
pop
sub
pop
add
jbe
add
sbbb
lret
pop
jae
mov
push
push
outsl
sbb
aaa
repnz
orb
movsb
pop
ja
gs
test
mov
push
jae
loop
ds
push
pop
aam
test
push
and
lods
aas
ja
xchg
jno
mov
jnp
jecxz
jge
pusha
cli
jns
popf
and
or
jmp
aaa
cwtl
mov
cmpsb
push
mov
jnp
add
insb
test
cmpsb
adcb
pushf
insb
jmp
nop
mov
mov
sbb
mov
jbe
mov
mov
shr
adc
add
or
mov
cmp
addr16
shll
inc
fisttpll
adc
dec
jmp
sti
xchg
shlb
sbb
arpl
mov
subb
mov
dec
mov
lods
pop
jecxz
ds
jge
fninit
cli
jge
push
fucom
dec
ds
in
cmpb
adcb
lahf
repz
ficompl
adc
cmp
mov
aaa
push
loopne
push
xor
xor
push
add
adc
scas
iret
dec
dec
inc
xchg
xchg
adc
cmp
fidivs
lret
jle
jl
out
fimull
in
and
pop
out
mov
xor
aas
shll
stos
fildll
push
roll
xchg
scas
pushf
fimuls
push
mov
sahf
insl
adc
mov
sbb
sub
adc
jg
mov
jp
movhlps
or
call
popf
cmp
inc
push
arpl
popf
aaa
mov
outsb
cmpsb
push
int
ljmp
in
std
les
push
bound
in
inc
or
mov
loop
xchg
sbb
pop
adc
loop
sbb
xor
xchg
jmp
mov
push
push
lds
jle
fucomip
pushf
rol
push
pop
leave
mov
lcall
push
push
test
adcb
leave
out
jle
cmp
loop
xor
stos
orl
lock
xchg
push
imul
out
adc
es
dec
xchg
rcl
jo
jmp
cmp
cmp
mov
shlb
test
lods
jbe
outsl
scas
xor
popl
arpl
mov
lret
andl
out
sbbb
gs
mov
test
and
imul
push
mov
pop
roll
mov
mov
xor
sahf
adc
mov
or
mov
stc
sub
or
ljmp
ucomiss
cwtl
loope
mov
adc
out
imul
inc
mov
mov
roll
or
shr
or
jmp
imul
pop
dec
leave
sbb
cmpsl
xchg
rcll
add
jecxz
or
or
xchg
adc
mov
sbb
cmp
inc
jge
loope
xorb
xor
in
ljmp
adc
test
and
fidivs
jecxz
adc
push
xchg
imul
or
inc
test
add
insb
test
pusha
jnp
xor
jae
add
pop
cmc
lds
xchg
fsubrs
hlt
xor
notl
push
mov
and
lret
jae
push
mov
push
add
xor
pop
ret
or
push
xor
and
arpl
xchg
into
jecxz
icebp
fildl
andb
ret
or
scas
pop
sub
add
cmp
push
jbe
repnz
jne
pop
rcrb
dec
or
in
aas
mov
xor
pop
test
lods
int3
leave
push
out
dec
sbb
sub
sbb
lret
adc
aas
mov
sbb
cltd
mov
subl
in
add
das
sub
loop
push
sbb
push
adc
lcall
add
dec
orl
adc
and
dec
and
pop
jmp
and
ljmp
scas
inc
fnsave
lods
dec
xor
jecxz
js
aad
lret
movsl
inc
imul
mov
or
add
mov
push
popf
pop
xchg
sub
addr16
push
ret
aam
cltd
sbb
xor
dec
pop
stos
inc
insb
inc
fsubl
sub
lds
mov
mov
addl
xor
mov
popl
sub
xorl
adc
aas
inc
push
lahf
xlat
xchg
fisubl
add
jg
lods
fcomip
push
xlat
jne
out
sarb
push
mov
jae
fwait
jg
hlt
iret
into
adc
and
gs
pushf
xor
jmp
movsb
sbb
pop
movsl
xchg
into
inc
lock
or
ret
mov
pushf
jl
push
or
mov
and
mov
pop
imul
cmp
loop
mov
enter
imul
mov
mov
not
stos
mov
push
je
mov
imul
jecxz
jmp
ss
into
jbe
mov
push
sbb
push
mov
lds
out
push
sbb
rol
stos
mov
xor
jae
adc
cmpsb
jo
int
les
push
pop
xchg
repnz
sbb
lods
cmpsb
lock
inc
pop
push
ficompl
rcll
shr
sbbl
and
mov
mov
shll
sub
call
and
adc
aas
ret
hlt
das
and
imul
adc
insl
stos
pushf
mov
test
push
mov
push
fwait
scas
int3
jae
adc
push
sahf
lcall
daa
pop
imul
fcmovbe
fwait
inc
into
fsub
push
fadd
dec
mov
arpl
pop
imul
xlat
sahf
mov
add
fdivl
lea
cld
cmpsb
mov
cld
scas
push
adc
insl
aam
sbb
jbe
outsl
js
jmp
push
fisttpl
call
stos
push
rorb
out
cmc
or
scas
lods
and
enter
int3
xchg
mov
and
adc
outsb
mov
jp
add
or
outsb
mov
cmp
lods
daa
sbb
fnstcw
adc
into
jmp
arpl
xchg
dec
cmpsb
into
dec
sbb
sbb
push
cli
incb
mov
push
jl
sbb
add
test
and
sub
and
push
xor
adc
sub
sti
sbb
lret
push
mov
push
cli
adcb
dec
and
xchg
pop
imul
call
sbb
jl
pusha
and
push
or
sbb
leave
add
ljmp
add
movsb
mov
dec
sbb
cmc
dec
iret
sbb
lock
rcr
dec
pop
or
xchg
pushf
and
stos
sbb
xor
cmpsb
jb
test
xchg
cmp
mov
shll
xchg
test
aad
scas
sbb
push
inc
sub
dec
dec
and
push
push
lods
in
mov
js
test
ret
or
shll
add
sar
daa
std
or
stc
or
hlt
mov
adc
insb
scas
test
adc
and
jp
shl
mov
xor
jns
ljmp
stos
xor
arpl
popf
push
aad
dec
jae
adc
nop
mov
mov
lea
xchg
mov
adc
int
and
or
add
mov
adc
rol
inc
leave
push
push
or
cltd
and
dec
lahf
ret
sub
or
sbb
mov
sti
adc
pop
jmp
in
insb
jmp
inc
and
rorb
fisubrl
pop
sti
movsl
stos
imul
lods
or
add
and
fs
mov
mov
scas
sbb
sub
add
sub
mov
scas
mov
push
xor
ds
sub
es
scas
inc
inc
or
test
cmp
lea
sub
in
mov
or
xlat
push
sub
sub
scas
cs
dec
out
adc
cmp
xchg
out
sub
xchg
inc
push
jae
loop
ds
div
push
push
mov
xor
lods
mov
add
aaa
adc
push
rol
or
fistl
adcl
and
test
pop
sub
and
rsm
ret
fyl2x
pusha
xchg
imul
sub
sbb
cwtl
cmpb
mov
das
mov
shlb
das
test
xchg
push
jle
add
jecxz
sub
push
addr16
bound
pop
test
push
jb
scas
sbb
add
cmp
mov
enter
addb
lock
hlt
adc
or
push
xor
adc
inc
mov
mov
mov
and
jecxz
lcall
sub
add
mov
out
or
and
xchg
xchg
or
out
sub
clc
addl
jle
lret
ss
insb
or
cs
loope
hlt
sub
push
jo
and
lea
dec
fs
mov
loop
push
enter
adc
repnz
out
sbb
out
std
jmp
cwtl
mov
stos
movsb
cmp
sbb
sub
out
mov
and
dec
push
loope
xchg
mov
cltd
loop
lret
push
mov
mov
or
outsl
or
insb
imul
jb
call
push
aam
add
mov
dec
loop
sbb
inc
sti
inc
or
mov
stos
dec
xor
xchg
inc
adc
add
enter
call
inc
and
adc
pop
jmp
lcall
inc
xor
aam
xchg
lock
xchg
xchg
xchg
imul
or
xchg
cld
aas
xchg
in
mov
test
lods
notl
fwait
push
popa
das
sbb
sbb
shll
pop
shrl
rcrb
aas
jmp
sbb
jne
hlt
fwait
outsl
leave
mov
call
xlat
pop
adc
shl
mov
or
lret
mov
mov
mov
jecxz
dec
fisubrl
ret
dec
cwtl
ret
lret
mov
fs
out
push
push
leave
shl
fcomps
std
cld
jb
scas
fs
inc
or
ficoms
insb
or
mov
mov
fadds
or
mov
dec
aas
push
xor
xchg
push
dec
sub
and
sub
xor
inc
sub
fwait
sbb
cmpsl
nop
jmp
jmp
or
push
out
sbb
or
sbb
mov
push
popf
stos
lahf
pop
sbb
sub
stos
dec
sub
cmp
divb
lea
add
jmp
adc
pop
mov
and
jnp
fnstcw
mov
outsl
fstpt
lcall
cltd
mov
out
cmpb
scas
iret
xchg
sbb
mov
mov
mov
pop
sub
ret
imul
stos
fcompl
mov
mov
jge
add
popa
push
shrb
iret
stc
in
add
xchg
rorl
jo
mov
mov
push
icebp
jbe
pusha
ja
inc
loop
ja
pop
test
pop
fs
aad
inc
mov
cmp
mov
stc
fsts
xchg
test
out
cmpsl
xchg
lahf
out
xor
and
xchg
mov
add
cmp
mov
mov
sarb
sbb
stos
das
sarl
mov
inc
jbe
lcall
andl
out
xchg
pushf
cld
imul
int
add
cmp
mov
sub
rclb
adc
inc
mov
dec
popa
pop
and
rcrb
sub
jbe
ret
enter
jmp
enter
andb
cld
or
mov
addb
sbb
push
add
sub
xor
sub
adc
out
lret
cmpsb
cmp
xchg
cmpsb
push
stos
xor
jne
mov
push
lret
xor
xor
xchg
lods
mov
cltd
sub
fimull
sti
sbbb
scas
xor
adc
dec
ret
int3
ret
lea
test
xlat
mov
orl
mov
dec
pushf
push
loop
adc
hlt
repz
nop
or
ss
push
fcoml
jle
mov
add
xor
pop
cld
lret
js
cli
adc
inc
das
in
sbb
cwtl
testb
push
fimuls
xor
loop
xor
je
outsl
test
pop
loop
data16
inc
or
pop
fisttpll
or
cmpsb
ja
repz
in
test
push
into
cwtl
sbb
pop
xor
int3
push
push
out
loop
stos
mov
fadds
sub
cs
sbb
jp,pt
inc
and
xchg
ljmp
mov
int3
add
test
sahf
addb
xchg
push
cmpsl
add
fs
scas
loop
or
cmp
mov
mov
or
js
or
cmp
cmc
fbld
cld
add
mov
mov
jecxz
mov
iret
pusha
nop
mov
icebp
or
clc
adc
shr
or
test
insl
and
sbb
push
repnz
cmpb
in
inc
or
xchg
daa
cs
call
clc
dec
lods
adc
aad
adc
in
push
nop
jle
fdivrs
ret
push
mov
mov
pop
mov
push
xor
in
dec
dec
fstpl
lods
xchg
sub
aam
jns
fcmove
adc
add
jbe
sbb
sub
or
mov
ljmp
shll
fisttpll
test
mov
mov
cmp
pop
sbb
out
push
jp
rcrb
mov
cmp
xor
notl
xchg
cmp
xchg
daa
dec
test
mov
fists
push
pop
inc
sbb
dec
sbb
sub
js
cld
rolb
adc
cmp
mov
jmp
decl
movb
enter
fistps
test
jg
pop
imul
fldt
or
jo
sub
cmp
stos
mov
or
sbb
add
push
inc
or
seto
les
lret
hlt
jmp
fbstp
sub
add
shll
inc
stos
sbb
inc
push
cltd
mov
mov
les
lods
jb
xchg
sahf
xchg
adc
out
push
inc
jmp
mov
push
and
push
push
mov
mov
call
or
leave
dec
cmpsl
mov
xor
nop
lds
arpl
lea
in
arpl
inc
out
or
and
hlt
inc
or
mov
sub
stos
cmpb
pop
add
dec
popf
xchg
rclb
roll
sub
mov
cs
stos
mov
dec
jne
lods
pusha
fldt
int
cmp
sbb
sbb
inc
adc
repz
push
ljmp
or
inc
cld
leave
xchg
push
mov
inc
ja
loop
inc
sarl
dec
push
push
hlt
sahf
xor
mov
dec
ja
push
pop
sbb
dec
mov
bound
mov
cmp
xor
pop
adc
mov
mov
in
jecxz,pn
cmp
cmp
sub
sahf
shr
ficoml
roll
fsub
ret
pusha
into
cld
push
sbb
mov
mov
pop
call
stos
cmpb
push
inc
dec
jmp
or
leave
pop
addb
cmp
jae
dec
insb
inc
xchg
inc
push
xchg
sahf
dec
sub
push
sub
push
shll
or
in
cmp
lods
pushfw
push
cs
sbb
fsubrs
cli
scas
lcall
sub
mov
daa
lret
sbbl
mov
sbb
js
adc
push
lret
es
sbb
adcb
sbb
ss
rclb
sbb
sbb
jo
cmp
lods
or
leave
push
imul
into
sub
insb
insb
mov
add
testb
xchg
or
sub
push
sbb
sbb
xchg
mov
mov
insb
mov
inc
fsts
jo
push
fucomi
xor
jnp
push
cmp
push
push
sbb
stos
sub
push
mov
iret
shrl
int3
cmp
mov
dec
cli
or
arpl
addps
das
bnd
mov
xchg
push
xlat
jmp
sbb
dec
or
lods
lock
dec
shll
stos
mov
push
insl
shlb
mov
sub
out
jge
enter
shlb
jo
cli
adc
movlps
not
stos
or
sub
inc
push
inc
cmpsb
test
cld
dec
mov
ljmp
sub
clc
lcall
push
test
inc
or
sti
push
mov
into
sbb
sub
ljmp
dec
push
and
mov
fcom
imul
or
mov
xchg
add
imul
or
add
cwtl
fisttpl
cld
sti
loop
or
or
lds
gs
fnstenv
push
es
xchg
jb
in
mov
push
test
add
and
sub
push
sub
imul
sub
jmp
lcall
adc
daa
stos
adc
ffree
test
in
std
xor
xor
leave
sbb
das
jne
adc
xchg
sbb
pop
int
mov
test
fwait
mov
sbb
pop
jmp
add
and
xchg
xchg
lahf
push
adc
mov
xor
in
sahf
mov
push
cli
imul
call
or
loopne
lahf
jnp
jbe
dec
idiv
cld
in
sub
in
mov
push
shrl
jnp
pusha
mov
or
in
and
pusha
pushf
nop
int3
imul
mov
push
push
and
pop
inc
mov
test
lret
sbb
je
xor
dec
sbb
lock
xchg
pop
jle
mov
mov
test
in
or
dec
add
cld
stos
xor
arpl
mov
or
scas
cwtl
or
dec
cs
sub
and
adc
ljmp
or
ret
sub
jecxz
push
fstps
mov
jmp
lret
jecxz
sub
ret
ds
sub
in
cmp
mov
sub
scas
in
call
mov
adc
push
in
pop
or
js
or
sub
lcall
sub
jno
sar
loope
andl
and
xchg
nop
icebp
mov
ds
xor
cltd
jae
push
mov
dec
xor
dec
loope
pop
jnp
ljmp
shr
leave
cmpsb
scas
push
fsub
aas
shll
mov
iret
xor
rclb
icebp
and
lods
mov
lods
xchg
addr16
fnsave
push
adc
outsl
dec
mov
in
cld
popa
dec
pop
pop
jmp
cld
int3
jne
mov
andl
mov
out
arpl
ds
xor
pop
mov
icebp
sti
jp
imul
iret
jge
icebp
aaa
mov
ficoms
out
shr
inc
out
iret
push
and
jl
cmp
sub
push
pop
adc
xor
pop
cmp
rcr
xor
enter
or
aaa
or
rcrl
lret
cltd
lcall
and
in
daa
add
mov
or
out
stc
rolb
out
das
xor
cmpsl
inc
mov
scas
sub
adc
jae
cld
sbb
pop
xchg
adc
jmp
dec
aam
push
std
mov
adc
push
outsb
sub
push
das
pop
lret
fisubrs
scas
testb
pusha
push
stc
iret
mov
clc
call
pushf
add
or
popf
jno
out
push
loop
scas
push
jmp
hlt
cs
sti
aam
inc
scas
in
out
in
pop
ficoml
sub
and
in
pop
xor
jecxz
mov
jmp
aam
and
mov
scas
lahf
in
gs
or
adc
fsubr
stos
mov
lock
cmpsl
aam
sbb
sub
outsb
mov
mov
lret
sub
fimull
ret
xchg
cmp
mov
mov
inc
sarl
pop
enter
sahf
outsl
testl
nop
push
or
sub
outsb
movsb
call
in
cmp
cmp
push
adc
jl
out
push
and
cmpsl
in
mov
pop
scas
add
mov
and
test
dec
cmp
test
loop
icebp
fmull
add
or
mov
sahf
sbb
stos
lret
sbb
rcrb
adc
xor
dec
mov
in
jo
mov
jge
push
pop
shll
dec
mov
outsl
xchg
jno
sub
xchg
add
vmovntpd
and
cltd
pop
adc
adc
sub
cmc
cmpsl
in
and
sbb
lods
das
pop
fwait
pop
or
jge
and
add
sbb
adc
push
jne
aaa
and
and
cs
pushf
pop
mov
sub
jae
ja
jge
les
mov
jmp
repnz
outsb
dec
sub
outsb
inc
es
mov
lods
xchg
outsl
adc
push
cmp
sbb
fildll
cwtl
adc
pop
imul
mov
scas
sbb
int
test
adc
and
sbb
scas
movsb
push
xor
fstpl
jmp
mov
sbb
pop
xchg
xchg
mov
loop
loopne
in
insb
sub
sbb
jmp
mov
push
sub
xor
test
or
xor
or
test
xchg
xchg
pusha
push
fldt
jbe
data16
add
mov
push
xor
sub
sub
dec
adc
ss
mov
jne
push
lcall
cmp
das
pusha
stos
sub
or
add
in
push
mov
jmp
outsl
in
pop
mov
shl
cmp
jecxz
mov
adc
fcompl
mov
pop
adc
ds
lret
mov
in
pushf
push
push
pop
mov
aam
jecxz
jae
repnz
xor
inc
push
andb
clc
negb
mov
roll
push
add
out
sarl
jecxz
shll
adc
mov
icebp
fidivrl
xchg
imul
ja
lea
aaa
or
aam
test
push
xchg
sub
les
add
pop
fisubrs
jp
jb
sub
xor
inc
jae
sbb
iret
inc
xchg
lods
call
outsb
xorb
mov
cmp
adc
mov
inc
mov
push
cmpsb
pop
adc
lret
out
ficomps
sbb
loop
fsubl
scas
cmp
shrl
push
leave
push
cmpsb
aad
mov
ds
pop
outsl
cmp
cmp
and
or
loop
pop
or
mov
fcmovne
icebp
call
mov
fwait
aas
push
lock
jmp
loope
xchg
fdivrp
loop
ds
mov
cmc
mov
mov
stos
sub
push
js
push
or
cs
or
mov
push
sub
inc
adc
call
xor
dec
adc
dec
add
ljmp
cmp
jge
leave
or
dec
add
lods
addr16
pop
fcomp
stos
popa
out
mov
xchg
ret
stos
loope
sbb
pop
aaa
adc
mov
pusha
adc
fwait
xor
leave
lahf
add
mov
jnp
mov
cwtl
les
mov
and
add
out
leave
or
cmp
xchg
sub
call
mov
scas
mov
dec
push
sub
pop
lahf
adc
sub
enter
call
sbb
inc
lcall
or
dec
mov
push
not
aam
imul
xchg
lock
add
js
pop
xchg
add
lods
push
mov
pop
sarl
psllq
cmp
rcrl
call
sarl
mov
shl
cwtl
mov
mov
fs
ljmp
sub
mov
pushf
cmp
sub
sti
in
pop
scas
xchg
add
adc
jns
push
leave
pusha
stos
add
cmp
pop
mov
enter
in
imul
or
sub
cmp
into
daa
push
inc
and
aam
cmp
mov
push
clc
sbb
cmp
xchg
push
fcoml
add
mov
xchg
mov
lcall
or
pop
inc
mov
push
cli
sbbl
jmp
and
stos
mov
jge
push
push
repnz
and
mov
imul
ja
movsl
sub
shr
idivl
call
xor
divb
in
sub
xchg
jo
xor
jl
lret
stos
scas
scas
das
xor
push
mov
cmp
and
push
mov
pop
test
jb
pusha
les
insl
sahf
leave
mov
adc
and
cmp
arpl
push
dec
rcr
arpl
jnp
cltd
or
in
sub
adc
push
sti
or
mov
dec
jns
jg
stos
adc
out
ds
mov
push
push
out
stos
enter
insb
push
mov
stos
or
pop
mov
lret
push
mov
mov
in
sti
jo
cmpb
add
in
and
ja
cmpsb
jbe
add
lea
or
cli
sbb
inc
movsb
jae
xor
cli
jmp
pop
aas
jge
mov
das
mov
mov
cld
mov
jl
insb
cmp
inc
mov
in
mov
dec
push
test
std
in
out
int
dec
sbb
mov
xor
fiadds
mov
outsb
clc
mov
mov
push
std
int
inc
cmp
call
popl
xor
shrb
add
or
lds
std
fisubrs
mov
sbb
cmpsb
divl
mov
ret
stos
add
std
jg
jecxz
ds
lret
cmp
mov
out
pop
mov
fists
aas
sbb
loop
popf
pusha
mov
scas
in
std
hlt
and
sbb
inc
fdiv
out
insl
ss
add
cmpsl
arpl
hlt
in
stos
aaa
fsubp
and
call
mov
shlb
dec
stos
sarl
std
movsb
mov
testl
cmp
and
call
imul
inc
xor
ds
mov
push
js
or
xlat
shr
mov
lods
dec
cmp
scas
enter
push
push
pop
ds
pop
popf
jmp
popa
adc
jnp
stos
enter
sbb
mov
adc
sub
outsb
insb
andb
mov
mov
dec
lcall
int
add
lock
sbb
push
xor
lret
sti
or
lods
test
lcall
sbb
add
in
pop
stos
dec
daa
sbb
stos
add
sub
shrb
test
hlt
test
xchg
dec
lret
xchg
lods
enter
push
or
mov
xor
or
popf
push
lcall
sub
call
div
lahf
lods
lcall
loop
sub
pop
cmp
add
fisubrs
jle
pop
mov
test
les
add
dec
lods
adc
jmp
xchg
dec
jge
pop
lods
call
mov
push
inc
lea
jl
popl
lods
xor
jge
jecxz
sub
xchg
imul
outsb
lods
pop
jno
sub
mov
push
mov
out
hlt
sahf
loopne
sbb
rorl
loop
mov
push
dec
stos
sub
xor
push
andb
xchg
jge
test
imul
mov
xor
sbb
mov
fstpl
mov
mov
push
adc
shll
stos
das
out
adc
pop
mov
sbb
loop
sbb
lret
lea
sbb
xlat
stos
dec
mov
mov
xor
shll
popf
jbe
mov
xchg
testl
repz
out
xor
jb
mov
add
xchg
and
les
push
push
push
inc
nop
movsb
mov
jae
push
inc
lahf
add
mov
mov
xchg
mov
aad
jmp
mov
mov
rep
pop
jne
rorl
inc
mov
bound
mov
pop
das
dec
lret
and
addr16
mov
mov
xor
adc
sub
shll
and
push
insl
pop
data16
scas
sub
cmp
mov
push
mul
divb
xor
lret
push
pop
jb
mov
sub
cmpl
mov
sbb
or
jmp
mov
lcall
scas
stos
mov
ja
jns
pop
sub
jbe
into
fdivs
insl
mov
aad
imul
imulb
mov
xor
stos
sub
cmp
jae
xor
movsl
les
fdivrl
movsl
ljmp
push
loop
lea
or
shll
ds
inc
lret
and
inc
movsb
mov
inc
test
ja
loopne
cltd
imul
rcrl
subl
enter
sbb
incl
hlt
add
pop
xchg
out
test
push
aad
call
sbb
mov
das
or
lea
adc
push
mov
loop
out
clc
lcall
iret
mov
imul
hlt
sbb
mov
jbe
fdivrs
divb
mov
pop
jb
dec
fcom
ficoms
stos
and
sbb
pop
int3
insl
push
test
jne
repz
in
daa
hlt
lcall
mov
adcl
jmp
push
ret
inc
arpl
clc
push
jne
cmpsb
fwait
das
sub
fsubrl
or
adc
xlat
jne
and
sub
mov
mov
repz
mov
push
fsubs
sub
lea
or
mov
ljmpw
rcl
shr
push
jo
js
pop
sbb
add
mov
fsubr
add
std
test
filds
into
push
das
cltd
xchg
mov
jne
add
roll
enter
loop
jmp
ljmp
and
inc
or
cmp
into
sub
push
in
fists
push
in
push
dec
in
sub
jmp
gs
lock
scas
sub
enter
or
pop
cwtl
lea
pop
sbb
ret
repnz
lcall
sub
push
mov
mov
sarb
jae
icebp
jno
loopne
scas
xchg
push
or
aas
sbb
arpl
ret
sbb
xchg
leave
dec
mov
mov
push
or
jbe
gs
jb
pop
insb
stc
jle
jl
mov
mov
rcrb
cmpsl
lods
mov
enter
jae
cmp
sbb
loop
je
push
push
lcall
repz
cmp
call
into
jp
les
cmpsb
lea
mov
stos
lods
inc
mov
cmpsl
dec
xchg
sub
push
jmp
xchg
aas
stos
cld
loop
pop
js
inc
jbe
cmp
in
sbb
out
mov
dec
mov
and
xor
fsubr
dec
das
and
and
das
mov
fnstenv
mov
fnstenv
test
sub
enter
push
mov
and
pop
hlt
outsb
or
xchg
fsub
divl
stos
std
xor
fs
subb
mov
outsl
insb
mov
xchg
lahf
xchg
pop
out
sbb
out
dec
es
scas
orl
mov
test
mov
test
and
mov
mov
in
mov
rorb
mov
fistpll
nop
inc
dec
push
loop
cmp
cwtl
pop
dec
ret
inc
imul
pop
sub
cs
pop
jl
cld
dec
insl
push
divb
xchg
mov
lea
in
jno
and
enter
mov
jmp
pop
cli
scas
or
adcl
push
or
divb
mov
sub
push
inc
fidivl
lea
jg
shl
mov
xchg
rorl
in
adc
push
cmp
in
sbb
xlat
adc
add
push
fimuls
cmp
imul
les
ret
push
jmp
imul
dec
sub
sbb
jl
mov
or
fsubl
fstl
aad
mov
insb
jae
adc
repz
push
stc
stos
pusha
hlt
sub
cmp
iret
push
jmp
mov
int3
scas
pop
test
cld
mov
mov
jmp
xchg
dec
out
jge
push
insl
rcrl
out
dec
push
mulps
test
jmp
sub
add
or
lods
xchg
sti
cmp
out
inc
aaa
mov
call
jp
mov
jns
sbb
in
icebp
sub
cmp
jo
out
jne
inc
out
out
out
pop
adc
dec
jo
in
pop
jl
xor
sbb
jmp
xor
idivl
xchg
test
out
add
mov
adc
loopne
jbe
pop
push
cmp
mov
add
ds
mov
pop
sbb
insb
inc
cmpsl
sbb
call
popl
in
rcl
add
fsubs
movlps
xor
adc
mov
jb
fs
or
inc
stos
das
jbe
addr16
mov
out
jl
jo
loop
adc
dec
mov
adc
adc
add
adc
leave
test
cmpb
or
mov
out
call
cmpsb
sub
aad
add
lock
jp
cmpsl
and
leave
popf
jge
sbb
cli
ds
inc
lret
sub
stos
stc
or
mov
xchg
stos
scas
mov
lods
pop
stos
push
lcall
aaa
mov
mov
pop
test
xchg
icebp
inc
inc
leave
mov
xbegin
addr16
or
add
sahf
cmpsl
dec
mov
xchg
pop
jno
pop
dec
test
push
lret
fmull
sub
xchg
cmp
sti
push
fstpl
push
xlat
lcall
mov
aam
or
sub
add
xchg
cld
cs
sbbl
test
push
add
mov
sbb
lods
push
sbb
mov
sahf
sarb
adc
dec
dec
test
aad
lods
int
lea
cld
mov
ret
mov
dec
lret
push
test
daa
xor
rcll
mov
dec
and
das
mov
popf
jbe
cmp
sub
imul
cs
pop
ljmp
in
pop
cltd
jbe
in
mov
popa
pusha
mov
fs
mov
mov
xchg
mov
or
and
subb
jge
adc
out
mov
or
xor
sub
xor
inc
iret
pop
ffreep
push
jne
mov
dec
mov
std
bnd
scas
xchg
cltd
adc
outsl
sbb
shl
sbb
xchg
cwtl
dec
mov
subb
cmp
lds
or
lods
nop
xchg
xchg
pop
arpl
scas
xor
cmp
mov
notl
sbbb
jp
cwtl
push
inc
ss
sbb
sti
push
test
xchg
mov
movsl
inc
into
mov
je
mov
fsqrt
mov
les
data16
xchg
or
and
stos
inc
jne
in
dec
test
jne
lcall
push
dec
mov
pusha
mov
or
std
int3
sub
ja
pusha
into
cmp
inc
cltd
sub
jle
out
mov
in
mov
or
sub
test
pop
add
popf
sbb
pushw
aad
add
add
push
lods
out
sub
fwait
jle
mov
xchg
data16
lock
cltd
or
daa
and
mov
inc
mov
xchg
pusha
insb
mov
adc
add
mov
out
pop
jns
sbbb
lods
mov
arpl
push
int3
sub
ret
hlt
push
ljmp
dec
cltd
cwtl
xor
arpl
dec
out
push
push
push
lcall
add
and
sti
sbb
lds
js
or
jg
into
xchg
jle
sub
inc
int3
mov
or
jns
mov
out
mov
or
adc
test
lods
movsb
push
jo
cld
fs
out
xor
popl
lds
pop
xchg
jle
stos
in
push
sbb
mov
addr16
sub
scas
push
ds
movsl
leave
insl
xor
stos
adcl
mov
sub
sbb
int3
jmp
add
add
xchg
in
dec
pop
cld
lods
add
jo
lcall
das
xor
add
push
imul
add
insl
rcl
aam
push
jmp
or
inc
fidivl
leave
dec
dec
or
push
fmull
in
fcmovnbe
leave
dec
shrb
std
xchg
inc
in
divb
sbb
call
frstor
sub
outsb
sub
dec
dec
cwtl
aas
inc
mov
push
mov
leave
pusha
pop
add
test
pop
aam
xor
das
call
bound
xchg
scas
mov
dec
xor
pop
dec
xor
in
shrb
fmuls
pop
adc
ss
das
in
dec
xor
dec
cmp
cmp
sub
push
ljmp
or
mov
lret
xchg
loope
dec
out
xchg
inc
adc
rcl
mov
inc
ss
stc
and
jmp
or
test
enter
inc
repnz
popl
or
sahf
sbb
repnz
movb
mov
jecxz
sub
dec
mov
add
adc
dec
or
les
sub
xchg
and
jae
roll
mov
mov
scas
sub
sbb
pop
les
imulb
fldenv
xlat
push
cmpsb
icebp
or
dec
mov
dec
cmp
hlt
lcall
sub
adc
loopne
cmpsl
xorl
sub
loop
les
push
pop
subb
pop
out
dec
adc
arpl
loop
iret
or
pop
jmp
xor
pop
pop
repnz
jbe
pop
or
daa
fisttpl
or
mov
aaa
inc
ljmp
adc
add
push
push
cmp
subl
sbb
pop
push
push
pop
cmp
adc
imul
cmpsl
in
pusha
movsl
pop
cmp
fisubl
xor
into
out
dec
mov
mov
mov
lret
and
xor
imul
icebp
daa
loop
ds
sbb
mov
cmp
push
push
fnstenv
cld
push
pop
and
xchg
fcomps
pushf
stos
push
mov
inc
pop
or
cmp
or
out
inc
sub
add
lahf
addr16
imul
xchg
dec
ds
mov
stos
sub
cmc
or
jp
inc
pushf
pushf
pop
scas
in
add
sbb
sarb
lods
push
xchg
test
sbb
insl
hlt
add
sub
mov
jl
xchg
pushf
jecxz
push
faddp
sub
and
fstl
loop
inc
or
sbb
daa
jecxz
sbb
push
pop
je
in
push
repnz
mov
imul
loope
ljmp
stc
push
xchg
cmovl
out
test
adc
lahf
xor
inc
jge
dec
inc
push
scas
jecxz
int3
add
dec
scas
mov
cli
jmp
xor
filds
lret
push
push
dec
or
and
jnp
jae
mov
fisubrl
out
mov
push
into
faddp
aaa
add
aad
jno
mov
jmp
orb
sbb
ss
cmp
sub
and
mov
cmp
sub
mov
and
inc
xchg
cmpsb
stos
shll
ja
sbb
cmp
popa
inc
adc
dec
mov
cs
les
mov
jle
xor
xchg
iret
mov
js
dec
fwait
ds
xor
shrl
rcrl
inc
lds
sbb
inc
adc
pop
dec
jnp
push
ljmp
fisubrl
popa
std
enter
data16
mov
mov
lahf
int3
push
sbb
fistpll
sub
push
jle
adc
les
icebp
sub
arpl
push
cmp
pop
push
iret
mov
sub
fbstp
adc
insb
mov
jge
je
cwtl
xchg
pop
movsl
mov
add
pop
push
dec
ss
push
mov
mov
inc
sub
sbb
cmp
daa
push
jns
inc
xor
xor
sti
bound
mov
mov
push
push
scas
and
mov
jbe
mov
insb
push
jnp
test
push
mov
mov
mov
and
push
or
lock
test
arpl
leave
mov
xchg
cmp
enter
cmpsb
mov
pop
aas
ret
or
adc
out
or
mov
jnp
or
mov
fnstenv
xchg
ljmp
add
in
repnz
cmp
negb
mov
mov
imul
in
add
add
push
mov
out
jne
push
inc
pop
iret
sbb
sti
adc
add
iret
or
lods
jp
mov
repnz
int3
mov
mov
out
mov
mov
dec
add
lea
lods
or
xchg
push
mov
out
scas
jle
push
test
cmp
add
jmp
sub
push
sub
adcl
sarl
or
test
addr16
xchg
test
add
sarb
ret
pop
bound
cmp
jbe
test
xchg
mov
xlat
jmp
lcall
fldl
test
pop
jbe
fnstenv
jb
adc
int3
mov
fistpl
movsl
nop
ja
dec
xchg
jmp
inc
in
or
adc
mov
popa
enter
cs
sub
rcll
lret
enter
ret
sub
mov
rcrl
jo
inc
in
cs
ja
mov
sahf
sbb
jb
push
fadd
jge
or
add
add
jmp
add
orb
mov
in
repz
sub
mov
in
adc
add
adc
test
scas
dec
jne
subl
add
add
inc
out
test
cs
xor
stos
lods
andb
xor
loop
lds
lcall
sub
ja
ja
jl
push
or
xor
lods
jae
les
sbb
sub
cld
jp
nop
pop
xchg
sbb
ljmp
push
int
lcall
and
test
dec
and
aam
shlb
cs
add
in
lahf
inc
sbb
cwtl
jmp
enter
and
xchg
outsb
jno
ss
icebp
mov
stc
sahf
mov
mov
or
adc
push
scas
add
dec
pop
pop
into
dec
or
sub
mov
stos
mov
out
stos
or
jmp
shll
in
test
je
call
dec
iret
leave
ljmp
push
ja
sbb
iret
hlt
mov
imul
shlb
in
jmp
inc
jne
cmpsb
lods
push
sbb
inc
or
mov
leave
cmp
das
cmp
scas
stos
aaa
nop
or
lret
add
or
inc
ljmp
shrl
das
loop
decl
jge
aad
sub
and
es
pop
lods
scas
fwait
add
add
sub
pushf
data16
fwait
nop
jne
mov
xor
lret
add
jno
fs
fnsetpm(287
iret
insb
xchg
repz
out
add
cli
cli
lods
jb
mov
mov
mov
testl
inc
mov
mov
or
jecxz
sahf
adc
sub
push
dec
adc
mov
cmc
mov
rol
push
or
push
add
mov
out
xchg
punpcklbw
mov
das
push
test
ds
pop
fmul
cld
mov
cwtl
pop
scas
and
or
lods
fldl
inc
fdivrl
mov
inc
out
xor
shr
adc
pop
or
sub
ret
adc
push
adc
jmp
jecxz
scas
sbb
sub
mov
xchg
pop
add
fdivl
nop
push
pop
repz
cmpsb
sub
pusha
clc
jecxz
fsub
in
scas
add
cld
push
sarl
inc
xchg
xor
pop
insl
mov
test
push
cmp
sahf
push
or
mov
add
inc
dec
outsl
fs
or
xchg
cmp
xor
sub
pop
stos
ret
jp
or
cs
xlat
cmp
xor
mov
and
sbb
cmc
in
mov
push
repnz
xchg
sbb
xchg
push
out
lret
nop
sbb
movsb
cmp
ss
or
cmpsb
and
or
xchg
push
loop
xchg
arpl
adc
das
sti
sbb
les
mov
add
js
ret
push
icebp
jae
lcall
sti
lea
push
stc
adc
ret
pop
repnz
and
mov
xor
fwait
sbb
adc
inc
into
cli
push
add
or
enter
xchg
arpl
aaa
mov
add
aaa
sbb
aas
out
clc
mov
adc
push
mov
cmpsb
adc
arpl
rcrl
push
cmpsl
mov
fdivl
pop
xor
out
xor
outsl
mov
cld
or
mov
mov
int3
inc
push
mov
push
sbb
lock
hlt
fmull
jp
mov
jb
push
sbb
jbe
cld
or
inc
cmc
xor
sahf
repnz
xorl
push
jge
xchg
mov
ret
imul
push
mov
push
fcompl
cmp
out
fadds
sbb
cmp
or
xchg
xchg
inc
fwait
and
orb
inc
or
pop
int
xchg
add
or
lock
adc
fimull
pop
sub
mov
outsb
mov
fstl
lods
aaa
test
pandn
inc
out
outsl
sub
cmp
pushf
ljmp
inc
push
and
aad
xor
push
cltd
ja
or
loope
adc
into
and
mov
iret
mov
cmc
mov
call
jmp
outsl
les
inc
dec
xcrypt-ecb
cmpsl
int
mov
cmpsb
aad
sahf
jle
mov
ret
out
pop
mov
adc
cmpb
cmpsb
outsb
and
ret
leave
push
or
or
fimuls
cli
mov
pop
adc
adc
fistpl
cli
into
fnsave
dec
leave
fsubl
xchg
pop
pop
push
xlat
push
cwtl
in
sub
aad
in
sbb
ret
das
cmpsb
or
pop
pop
mov
cmp
inc
fimull
lea
or
mov
ret
shr
jmp
push
mov
loope
cli
gs
fsubp
jno
daa
jno
divl
test
push
jge
dec
lds
or
mov
dec
pushf
in
cmp
shll
iret
scas
scas
jge
sbb
and
fsubs
rep
pop
jle
or
cmp
call
subb
xchg
insb
pop
dec
jecxz
scas
ljmp
or
or
xchg
mov
ds
leave
or
dec
mov
je
into
push
push
sbb
xlat
xlat
push
xchg
mov
lea
stos
jge
sbb
push
lods
xorl
dec
jecxz
loop
out
adc
fisttpl
fld
add
lods
xor
les
pop
dec
pop
rorb
jg
push
xchg
inc
stc
xchg
inc
adc
imul
dec
addl
xor
rclb
push
sbb
pop
cmp
rcll
mov
imul
pop
scas
int3
ret
mov
shl
jmp
pushf
fiaddl
sbb
scas
imul
and
xor
or
mov
inc
sbb
cmp
jae
cmpsb
mov
or
jp
xor
mov
xor
or
fcmovnbe
cmp
call
push
add
test
xchg
insl
imul
push
push
out
adc
mov
pop
xchg
outsb
dec
mov
in
sub
inc
rcrl
sbb
push
or
pop
mov
decl
jg
or
push
jbe
incb
out
cltd
adc
push
dec
enter
jno
dec
jbe
sahf
push
sub
dec
pop
rclb
in
lret
arpl
fucompp
and
rcl
outsl
mov
hlt
jmp
xor
dec
cmpsb
push
mov
fisubs
push
jp
xor
stos
adc
popf
jecxz
dec
cmp
jmp
std
faddp
fstl
or
adc
push
out
add
test
xor
push
mov
mov
mov
les
jbe
mov
fildl
lods
or
popf
mov
int3
jae
adc
jle
or
or
int
stos
mov
cmp
sti
fdivl
or
xchg
and
cmp
push
call
bound
daa
pop
pop
cld
sarl
ret
outsl
and
xor
in
rcr
mov
inc
fmull
jb
call
rolb
pushf
stos
mov
shlb
mov
jno
bound
shrb
jle
push
and
inc
and
inc
das
jmp
xchg
dec
scas
push
mov
mov
iret
sub
scas
into
iret
or
stos
sbb
ret
inc
sbb
mov
mov
call
fnclex
scas
push
adc
jecxz
jle
xchg
loopne
xor
movsl
add
mov
sub
jg
aas
hlt
mov
lods
loope
daa
dec
ljmp
sbbb
jns
addr16
aad
in
push
pop
data16
pop
inc
cmp
lods
inc
sub
push
xor
inc
or
sub
lods
fs
inc
dec
dec
call
mov
sub
jmp
xchg
xchg
test
lods
sahf
mov
lds
push
fidivs
das
mov
test
addb
mov
xchg
clc
out
pop
addr16
dec
sub
dec
movsb
or
aaa
aam
sub
mov
movsl
jle
addr16
loopne
std
mov
loopne
iret
mov
ljmp
fldl
xor
je
popa
mov
xchg
pop
scas
shr
stos
das
jmp
movb
dec
sub
jmp
sub
mov
les
out
mov
das
sbb
mov
ljmp
inc
dec
sbb
push
cmp
test
je
pop
mov
stos
addr16
or
xchg
imul
mov
aaa
pop
and
fisubl
iret
cwtl
fisubl
mov
std
js
cmp
xor
int
adcb
aad
or
outsl
pushf
xchg
int
pushl
lcall
out
in
jno
outsl
xchg
mov
loop
add
cwtl
shr
fldt
sbb
iret
mov
jae
enter
mov
xor
ds
sub
scas
clc
arpl
in
lahf
outsl
jae
test
lret
xchg
sub
mov
outsl
sbb
push
add
xchg
sbb
fimull
sbb
in
cli
out
in
push
leave
ljmp
andb
pop
scas
mov
push
sbb
fdivl
jnp
push
sub
jge
and
stc
lret
push
jmp
call
lcall
das
fcmovnu
movsl
mov
sbb
addr16
mov
mov
fisttpl
lds
or
sub
adc
fmull
jb
push
dec
loop
or
dec
xchg
xor
or
sub
mov
push
inc
mov
mov
push
sysenter
bound
jecxz
sbb
or
sub
mov
sub
inc
pop
cs
pop
sbb
sbb
aam
or
sub
jmp
pop
inc
loopw
es
mov
test
call
dec
sub
test
xor
or
jecxz
lss
in
xchg
push
sub
push
xchg
sub
adc
pushl
adc
fnsave
adc
and
cmp
jl
push
jg
or
pop
sbb
sub
xchg
xchg
dec
ficoms
sbb
leave
lahf
sbb
or
mov
sub
jp
mov
lods
insl
sbb
xor
mov
outsl
sbb
insb
sub
cmp
popa
mov
inc
lods
stc
and
mov
clc
aad
dec
or
cmpsl
orb
mov
lea
mov
push
pushw
daa
lds
adc
lods
xchg
cld
scas
adc
imul
push
dec
mov
mov
sti
ret
jne
push
or
sahf
push
gs
sub
les
cmpsb
inc
es
sbb
pop
add
cmp
test
jmp
push
std
and
ret
adc
cmp
loop
pop
push
fs
xor
dec
jno
or
jle
mov
ds
push
cmp
mov
shlb
mov
pop
push
ret
or
add
sub
adc
insl
xorb
xchg
lock
fistl
loop
inc
sbb
inc
lcall
shr
add
fs
notb
mov
mov
std
rep
xor
inc
sbb
mov
add
mov
shr
insb
or
loop
out
cmp
sub
or
mov
jp
ss
cmp
int
ret
sub
hlt
stos
push
sbbb
pop
adc
les
rcll
mov
xchg
test
fwait
lea
ret
add
pushf
adc
xchg
pop
jo
inc
jmp
cmp
jae
cmp
xchg
int3
aas
mov
ret
fucomi
pop
sub
es
mov
ret
lret
mov
adc
mov
mov
inc
cwtl
add
jmp
ret
add
mov
ss
aam
fldt
imul
lahf
loop
sbb
enter
sub
insb
jne
jbe
sub
pop
pop
and
jmp
push
push
filds
repnz
inc
push
sarl
lahf
out
inc
outsl
push
mov
xchg
cltd
sub
mov
cmp
xchg
mov
sbb
mov
js
into
aaa
shl
mov
sahf
xchg
jge
je
cmp
mov
movsb
jge
sub
ret
shr
ss
movsl
xchg
or
pop
jno
dec
imul
pop
or
sub
mov
sbb
xor
dec
dec
loope
jl
aas
or
cltd
dec
fisubrl
sub
push
ja
xchg
or
pop
push
sti
imul
roll
pusha
cltd
dec
push
xor
lcall
test
shll
cmp
mov
ja
jecxz
add
sub
addr16
mov
in
xchg
psrld
in
mov
popf
and
repnz
xchg
popa
mov
push
shrl
mov
in
xor
mov
and
mov
jmp
out
in
dec
lcall
hlt
pop
dec
shlb
inc
jge
movsb
ficoml
into
xchg
add
test
mov
jo
xchg
iret
dec
pop
adc
loope
adc
or
cmp
mov
lods
arpl
mov
sub
pushf
mov
mov
cmp
dec
andl
mov
sub
int3
xchg
dec
pop
jmp
inc
in
in
xchg
insb
cltd
arpl
scas
mov
int
cmp
or
aam
xchg
sub
jle
sbb
sarb
mov
mulb
insb
loopne
fs
ficompl
iret
loop
jp
notb
int3
aaa
dec
xchg
loope
dec
ja
nop
addr16
in
add
pop
add
xchg
lods
mov
sarb
mov
jg
in
stos
fiaddl
les
and
mov
pop
dec
arpl
mov
add
jo
ja
mov
ljmp
stos
inc
dec
xor
and
adc
arpl
loop
stos
jbe
or
pusha
lock
pop
pop
mov
push
mov
jp
fistpll
in
jmp
adcb
ret
add
lea
callw
and
push
cmp
push
or
lods
sbb
xchg
xchg
imul
sbb
popf
xchg
or
xchg
nop
dec
notl
sbb
add
jno
jecxz
push
in
cmpsb
or
xchg
fisubs
sub
out
lock
shll
fisubrl
out
incb
inc
out
jne
sahf
fistpl
shrl
add
sbb
mov
fwait
jmp
lock
push
push
cli
jle
imul
mov
ret
imul
mov
setnp
push
ss
fsubrp
sbb
dec
enter
jge
cli
jae
ficomps
lret
jmp
jae
lods
adc
mov
lea
or
mov
xor
sub
sub
dec
js
sub
aam
ret
add
sub
popf
sub
test
cltd
gs
add
rcrl
dec
inc
sbb
mov
sub
pop
pop
cmp
dec
imul
adc
shll
xor
jne
pushf
mov
insb
add
inc
cld
push
mov
push
arpl
sub
or
pop
leave
ljmp
push
dec
loop
adc
xrelease
sbb
insb
push
and
jecxz
jecxz
sbb
dec
or
fs
outsb
jle
jge
out
pop
scas
mov
imul
cwtl
cmp
fldt
inc
shll
das
sub
mov
xor
and
or
jg
sbb
sbb
sub
xchg
jge
aas
into
lret
and
aam
lret
sti
movsb
pop
pop
das
imul
rcll
push
dec
pop
sti
mov
fstpl
test
xor
adc
xlat
fcmovb
jg
mov
stc
cmp
mov
xchg
pushf
cltd
sbb
leave
push
mov
into
add
pop
lcall
mov
gs
mov
push
or
xor
jge
xor
imul
jnp
fstpt
imul
loop
jno
and
or
push
insb
repnz
jne
out
test
xor
out
ret
loop
outsb
or
scas
pop
mov
xchg
lahf
ds
dec
repz
mov
dec
call
test
popf
movsb
mov
inc
lock
int3
bound
mov
insb
cmp
test
loop
push
ja
out
data16
cmp
stos
es
jmp
addb
and
jg
dec
int
mov
xchg
ds
jge
and
lret
fiadds
and
es
ret
popa
out
lret
mov
jle
out
or
dec
pop
loop
lret
ja
out
push
push
or
mov
mov
jp
jecxz
sbbl
add
xchg
in
fimull
jno
lock
add
daa
xchg
stos
dec
fcmovnu
push
out
xchg
mov
sbb
dec
add
or
xchg
mov
mov
sbb
sub
mov
sbb
addl
push
mov
or
or
cmp
and
icebp
xor
mov
or
outsl
dec
repz
pushf
out
test
xchg
sub
nop
mov
in
cmp
insl
mov
popa
and
arpl
pop
shrl
adc
cmc
into
push
dec
rcrb
stos
in
or
adc
insb
aas
test
movb
ret
xchg
loop
push
fadd
shlb
rolb
pop
inc
into
cmp
fistpl
hlt
dec
stc
int3
sub
jno
mov
gs
pop
inc
ucomiss
inc
and
popf
mov
aam
or
push
loop
out
ss
shr
fmull
xor
xchg
lret
loop
or
sahf
stos
jl
add
jmp
xchg
lret
in
out
push
dec
std
push
aaa
jmp
fisubrl
mov
iret
scas
adc
fnstenv
xchg
faddl
stos
bound
and
add
push
xlat
test
pop
pop
mov
stos
xor
int
push
xor
fimull
push
mov
mov
ret
movsl
cld
mov
lods
and
mov
push
mov
push
mov
mov
inc
mov
or
sub
arpl
leave
add
data16
mov
js
mov
fiaddl
scas
jecxz
rcrl
jns
ljmp
pop
push
jmp
jge
test
mov
and
addr16
dec
mov
mov
mov
jmp
cltd
in
cmpsb
sarl
imul
push
mov
or
pop
das
adc
sub
sahf
movsb
scas
push
cli
fstpl
stos
stos
test
fs
cld
cmpsb
xor
pop
mov
addl
js
test
out
jb
mov
lods
rcr
cmp
fidivl
sub
ss
aad
iret
push
and
mov
lcall
mov
stc
jno
jl
ret
cmpsb
lods
cmp
cmpl
aad
mov
out
sub
push
cld
push
dec
mov
mov
dec
sarb
and
lea
in
push
pop
out
xor
adc
inc
out
pop
inc
lea
mov
xchg
adc
test
push
aas
and
mov
stc
add
cli
hlt
mov
fsubrl
test
imul
or
jne
sahf
jge
fwait
adcb
out
sbb
fbstp
pop
bnd
das
nop
or
filds
jno
xchg
cmp
push
xchg
sahf
out
cltd
xchg
lods
mov
mov
jp
xchg
into
mov
aaa
mov
sbb
push
mov
inc
cs
and
gs
adc
es
cmp
push
cmpsb
mov
or
cmpsb
pushf
xchg
pop
shrb
in
jno
xlat
cld
dec
or
push
jmp
pop
mov
test
cmpsb
jmp
movups
xchg
leave
jbe
pop
adc
shlb
xchg
adc
sub
test
or
mov
xor
add
add
jmp
fwait
ret
insl
sub
sbb
xor
pop
stos
adc
test
lock
scas
push
xchg
je
pop
into
push
xor
dec
xor
pushf
inc
repnz
sub
hlt
imul
push
js
iret
or
and
frstor
mov
mov
shlb
mov
je
lret
aam
pushf
jnp
jmp
sbb
int3
notl
sbb
mov
push
popf
inc
inc
sbbb
lods
or
xchg
xor
leave
movsl
out
in
shlb
xchg
insb
aam
mov
inc
lret
pop
adc
and
adc
in
dec
jl
cwtl
addr16
daa
add
mov
sub
and
fiadds
mov
sbb
cmp
jmp
pop
or
cwtl
bnd
lea
xchg
fistpl
fdivr
push
sub
ret
adc
mov
add
inc
add
push
call
je
pop
loop
sbb
adc
and
push
lods
dec
rcl
jmp
orl
je
and
add
push
movsb
jg
int3
rclb
cmp
fwait
inc
leave
lret
das
jecxz
ret
xchg
stos
idivl
cld
mov
div
shlb
sbb
adc
and
xor
mov
sub
insb
in
adc
in
lea
mov
scas
xorb
std
mov
cmp
pop
movsb
divw
xchg
xchg
stos
insb
clc
cmp
aas
pop
dec
mov
push
fsubrl
fnstenv
jbe
fistl
add
pop
in
sbb
add
std
test
inc
xchg
or
or
xchg
sub
rorl
addr16
arpl
jmp
xchg
jb
or
lret
scas
jno
scas
stos
pop
fs
jmp
fistpll
out
push
cltd
mov
jb
xor
dec
shrl
leave
in
pop
mov
sub
pushf
xchg
push
cmp
scas
in
cmp
hlt
mov
testb
ja
xchg
outsl
fiaddl
cmp
fiaddl
cli
ss
fdivrs
inc
inc
pop
xchg
lea
stos
leave
in
pop
or
cmp
test
repnz
xor
int3
cld
or
sbb
int
cli
cmpsl
pushf
xor
inc
fnstcw
lea
fdivs
sar
outsl
add
xorl
xor
push
adc
aam
lds
bound
fs
ljmp
and
mov
dec
lea
cmp
repz
or
lret
stos
incl
mov
imul
xchg
rorl
rorl
hlt
in
cltd
and
adc
inc
ror
hlt
push
ljmp
lea
dec
js
call
jmp
test
jo
jg
push
pop
mov
adc
xor
push
fs
fimuls
fnstsw
fmul
rorl
jl
push
or
pop
push
test
jecxz
mov
fidivs
mov
nop
push
lds
nop
sub
test
adcl
out
shll
jae
aam
or
inc
lcall
push
movsb
inc
add
xor
push
sub
mov
pop
xchg
pop
sbb
test
loope
fidivrl
ret
fwait
adc
add
mov
sbb
cmp
pop
jbe
sub
sahf
push
lods
orb
and
and
imul
scas
test
stos
jne
push
filds
push
shr
insb
in
sbbb
add
mov
out
bswap
dec
jno
movsb
and
das
or
cmp
mov
dec
sar
imul
xchg
mov
dec
lea
push
xchg
shr
xor
xlat
pop
insb
or
rcrb
les
orl
jp
mov
outsb
add
iret
fists
and
mov
repz
xchg
push
xor
repnz
jmp
sub
sub
dec
or
mov
fisttpll
or
cs
enter
fstpl
lods
add
sub
and
gs
mov
in
mov
out
arpl
std
ret
shrl
fldt
push
sbb
mov
and
into
jb
shrl
scas
cmp
jne
jo
call
addb
pop
cwtl
dec
loop
push
and
out
add
and
rclb
insb
sbb
and
pop
in
jecxz
call
pop
push
mov
movsl
xlat
bound
into
jnp
dec
mov
out
out
inc
jmp
sbb
xor
andb
scas
les
and
mov
add
notb
pop
aad
pop
js
adc
mov
sub
adc
xor
lock
cmpl
push
and
jbe
fistpl
mov
adc
adcl
sahf
negl
adc
aaa
jmp
or
stos
ljmp
mov
test
push
push
jo
fsts
inc
push
scas
sub
sub
gs
or
cwtl
push
movsl
lcall
orb
in
jge
xor
je
aas
jns
ljmp
fucomp
jmp
push
mov
mov
rorb
fstl
outsb
mov
popf
test
pushf
out
mov
jecxz
shlb
push
xchg
je
mov
repz
outsl
pop
ret
and
and
mov
shrb
ret
aam
pop
or
sub
pop
repnz
sbb
lret
push
mov
sahf
adc
cltd
inc
loop
sti
js
adc
or
movsb
imul
into
jecxz
push
pop
xor
jge
sub
daa
pop
jp
fcmovnb
or
xor
repz
adc
jo
mov
mov
aam
dec
insl
clc
ficompl
repz
lahf
lret
stos
fisubl
mov
fsubl
sub
adc
dec
push
clc
jl
repz
add
xchg
xchg
add
and
adc
loop
mov
push
stos
jecxz
cmpl
jns
imul
stos
xchg
add
out
inc
sbb
loop
cmpsb
mov
jge
lods
int3
fstps
dec
xchg
into
popf
lcall
out
xchg
stos
or
stos
rol
inc
add
sbb
jbe
mov
movsl
inc
rorl
test
imul
adc
scas
mov
lret
lods
pop
push
xor
test
ljmp
out
lret
mov
pop
fmuls
xchg
test
mov
insb
inc
ret
sub
lods
dec
cli
sub
cmp
xchg
stos
or
shlb
vorpd
sbb
dec
sbb
call
mov
pop
js
sbb
mov
mov
or
cmp
pushf
sub
test
sbb
scas
repz
mov
aad
faddl
push
adc
fucomi
mov
hlt
dec
push
cld
int3
and
out
clc
cli
out
jne
les
sub
out
cmp
sub
or
fisubs
push
inc
bndstx
jmp
call
lret
iret
adc
repz
sti
xor
lret
cmpl
adc
inc
xorb
mov
push
jbe
nop
out
das
xchg
dec
cwtl
pop
es
pop
sarb
fsubrp
mov
ficompl
adc
lods
in
stos
out
push
mov
push
ss
add
inc
fisubrl
sbb
jl
sbb
dec
ret
lcall
int3
jecxz
xlat
mov
cmc
outsb
cmpsl
lods
ss
inc
cmc
imul
sbb
cmc
stos
repnz
jae
add
loop
jl
icebp
add
nop
push
nop
out
arpl
xchg
sbb
scas
movhps
jnp
cli
pop
sahf
pop
jbe
es
adc
sub
push
fimull
outsb
lock
push
xchg
test
xor
jmp
add
sbb
or
fs
cld
or
iret
pop
les
push
paddsb
sbb
in
ret
xchg
loope
shlb
adc
xchg
ret
mov
pusha
adc
fsub
sub
sbb
pop
cs
inc
or
mov
test
adc
or
push
mov
lcall
inc
out
enter
je
push
adc
sub
cmp
jae
pop
xchg
aaa
push
xor
sub
sbb
jmp
sbb
mov
pop
xor
cli
aaa
push
outsb
jb
lcall
add
loope
test
ret
test
aad
jbe
cltd
int
daa
or
jmp
cli
and
bts
push
xor
setne
imulb
push
aaa
loop
or
movsb
xchg
add
push
into
stos
ds
and
push
adc
adc
mov
dec
inc
mov
iret
in
or
pushf
lds
dec
adc
das
sub
push
pop
ds
fldt
dec
adc
aam
movsl
xchg
popf
mov
cmpsl
sub
imul
xor
stos
fldt
inc
lret
aam
sub
adc
out
jg
aas
sti
cwtl
jb
mov
pusha
push
pop
dec
xchg
xlat
das
push
mov
sarb
or
imul
xchg
xchg
rcll
jne
cltd
sbb
push
mov
push
shll
adc
rol
cli
stos
add
data16
ret
or
sub
ror
ret
in
int
mov
mul
loopne
jl
mov
je
xorb
sub
xchg
push
ficompl
jo
ret
mov
call
and
inc
rol
aam
lods
shr
dec
pop
ret
add
xorb
call
jbe
and
pushf
sbb
ss
cmc
leave
mov
fisttpll
bound
in
sub
js,pn
in
aam
fsubrp
mov
or
pop
sbb
adc
enter
mov
or
test
xchg
push
ret
or
stos
shl
je
or
push
movb
pop
add
fildl
sti
sete
dec
fdivrl
daa
jb
xchg
jae
out
or
add
out
movsb
fldt
inc
cmpb
loop
loope
xchg
mov
pop
push
add
mov
xorb
sub
pop
jne
jae
ret
adc
cmp
movsl
lds
xor
rcrb
lea
ss
rcr
or
mov
add
and
rcrb
xlat
inc
int3
scas
and
fildl
jo
xchg
bnd
push
rcl
ss
stos
jns
sub
loop
push
jg
pusha
mov
sub
xchg
test
shrl
mov
sahf
add
fdivl
ds
inc
call
test
mov
mov
xchg
cmp
and
rcr
ficoml
mov
sub
test
jnp
inc
sbb
addb
aam
or
imull
mov
push
sbb
sbb
xor
pop
jle
pop
lea
inc
ret
stos
lret
fsub
xchg
mov
ljmp
aad
rcrl
das
and
bnd
mov
sub
loop
in
sub
pusha
mov
imul
or
daa
ss
out
lahf
push
cmp
jbe
inc
aam
aas
into
stos
inc
loop
scas
push
sbb
or
xchg
lods
je
mov
mov
nop
repnz
mov
shrl
pop
mov
or
fsubrs
jnp
jge
test
adc
je
and
jmp
cmc
push
test
mov
mov
xchg
ljmp
flds
inc
push
je
lea
cmpb
les
mov
or
or
pop
out
mulb
in
push
or
xchg
sahf
je
ljmp
loop
es
loop
imulb
cmc
repnz
pop
or
or
mov
mov
xor
jp
and
es
sbb
inc
or
or
pusha
imul
jb
cmpsl
enter
jmp
jo
jmp
into
in
subb
loop
stos
out
xchg
sbb
fidivl
cmp
inc
in
pop
fadds
or
inc
ss
sub
pextrw
cmp
pop
rol
es
xor
xchg
adcl
dec
xor
scas
xchg
fidivrs
sub
or
jbe
call
mov
cld
lods
bswap
ja
dec
lea
mov
sar
fwait
add
xor
xlat
in
rorb
cltd
pop
push
sub
pop
and
mov
adc
jmp
inc
sub
jmp
cmc
jmp
inc
adc
jmp
sub
lea
into
icebp
or
sbb
pushf
js
fildl
sar
mov
adc
mov
int
scas
inc
sbb
push
subb
pop
inc
or
popf
sbb
int
outsb
adc
pop
sbb
daa
sbb
jae
int3
sarb
scas
lods
lcall
cmp
push
or
and
xchg
aas
cmp
push
popf
jae
test
xchg
daa
int
insl
cmp
push
jmp
shll
or
popf
sub
mov
test
cmp
jg
xchg
push
leave
jl
inc
outsl
shrb
das
lret
jnp
arpl
outsl
mov
push
roll
lret
inc
das
test
es
call
fucom
ret
imulb
out
xor
dec
scas
into
cmp
subb
adcb
xor
inc
test
xor
in
mov
sbb
fsubrl
scas
fidivrl
ds
repnz
mov
or
xchg
fistl
push
fwait
sbb
mov
cmc
hlt
jp
and
outsl
out
pop
mov
loop
pop
movsl
pushf
xor
mov
adc
test
dec
fimull
adcl
inc
sarl
std
jecxz
outsl
push
stos
rcl
int3
jg
fs
in
fstpl
sub
adc
pushf
test
bound
cld
ja
xchg
addr16
and
movsb
mov
divb
jecxz
testl
and
in
cmpsl
jbe
data16
mov
adcb
jmp
call
inc
ljmp
popa
lcall
es
dec
add
insl
xchg
aaa
mov
mov
es
rorl
push
enter
add
cltd
xor
es
popf
jp
adc
repnz
scas
scas
inc
das
add
add
cwtl
test
adc
jae
mov
pop
cltd
int
push
dec
out
bnd
orl
or
sub
dec
push
or
ljmp
out
ljmp
popa
bound
push
push
sahf
aam
in
mov
jmp
pop
iret
and
jle
test
ss
cmp
inc
xchg
jecxz
jmp
scas
jmp
jae
adc
or
pop
mov
sub
xchg
jle
xchg
fsubrs
into
mov
add
fnstenv
das
sbb
push
push
iret
lock
shll
and
xchg
test
cli
in
mov
push
arpl
mov
testl
mov
sbb
mov
dec
sbb
rcrl
pop
repnz
dec
in
stc
add
shll
lcall
mov
fiadds
jbe
jle
xchg
xchg
outsb
fdecstp
or
call
cld
fisubl
aaa
and
dec
push
push
nop
test
sub
negb
sbb
cmp
add
inc
sahf
imull
aam
jl
adc
sti
sbb
ss
fucompp
in
and
push
out
xchg
add
inc
push
pop
pop
jecxz
push
hlt
mov
jne
xchg
sbb
imul
jle
loop
push
shll
fisttpl
hlt
out
mov
jp
sub
test
out
in
mov
insl
mov
pushw
imul
inc
or
inc
adc
jo
scas
push
out
ret
jge
pushf
sub
int3
stos
subl
mov
xor
jae
xor
dec
rcrl
pop
lods
xlat
cmpsb
nop
enter
and
ss
test
inc
mov
adc
lahf
arpl
push
fimuls
push
bound
test
addl
mov
les
pop
mov
push
mov
dec
mov
sbb
loope
addb
lock
adc
jle
fwait
jp
insb
je
subb
cli
or
in
test
sub
imul
mov
sbb
lret
in
adc
or
dec
stos
cltd
lea
dec
sbb
adcl
add
aam
pop
mov
inc
xor
lret
outsb
and
stc
xchg
sbb
mov
push
pushl
arpl
aam
out
int3
dec
xchg
cmp
or
sbb
inc
mov
out
mov
cs
dec
cmp
mov
dec
and
jmp
testb
inc
mov
sub
mov
fsubrs
cwtl
flds
sbb
das
loop
mov
scas
rorb
add
arpl
daa
mov
fnsave
mov
xchg
bound
cmpl
mov
insl
sbb
push
ss
lock
mov
jbe
push
adc
cmp
sub
mov
in
push
or
push
int
jp
lods
sbb
xor
stc
mov
pusha
add
lea
push
add
cmp
outsb
lret
xor
jne
ret
and
daa
or
cmp
inc
rcrb
xchg
loop
sub
sbb
dec
movlps
outsb
fcomi
dec
adc
stos
fwait
push
push
cmp
mov
mov
or
xor
test
out
push
pop
add
dec
outsb
loop
pop
dec
mov
jecxz
ss
xchg
jo
dec
enter
out
jge
mov
out
cmpsl
inc
movsb
adc
inc
test
sub
or
sbb
pop
push
add
mov
adc
xor
jae
ljmp
out
rcr
dec
sti
lods
std
push
push
ss
sbb
push
rorb
rcll
cmpb
js
repnz
mov
aas
push
mov
pop
adc
adc
shrb
js
xor
add
add
sub
xor
fwait
ss
push
pop
cli
cmp
cmpsb
mov
ljmp
jmp
sub
mov
and
mov
push
jmp
xorl
insl
mov
scas
and
lock
xchg
test
push
ljmp
jl
push
adc
sub
xor
mov
popf
in
mov
cs
outsl
in
lea
idivb
sub
adc
scas
sub
bound
mov
movsl
sub
scas
sub
lcall
in
lods
out
jecxz
sbb
je
das
dec
data16
cli
push
lods
inc
pusha
xor
inc
sbb
lock
rcrb
in
addr16
hlt
rcll
test
fisubrl
inc
or
mov
fs
pop
lods
ret
xor
inc
mov
outsl
or
adc
bound
sbbl
call
sbb
dec
and
push
sahf
sbb
mov
sti
mov
cmp
js
shrb
or
cmp
xor
mov
lds
ljmp
sbb
movsl
fisubs
add
sbb
in
pop
lahf
jbe
push
dec
fcmovbe
add
jecxz
loop
dec
mov
pop
mov
insb
mov
push
inc
push
rclb
ljmp
and
jb
and
rorb
fneni(8087
sbb
outsb
lcall
int
fistpl
jmp
testl
dec
mov
sub
arpl
repz
mov
es
xlat
xor
mov
stos
int3
js
repz
sti
das
and
xchg
mov
sub
addb
aaa
fisubrs
pushf
dec
xchg
xchg
adc
xor
push
stos
imul
cs
leave
push
gs
inc
dec
jnp
or
sbb
dec
xorb
lea
mov
push
rcrb
imul
add
imul
lret
mov
rcl
adc
imul
pop
mov
mov
repnz
add
xor
adc
jge
imul
enter
xchg
mov
mulb
nop
aam
and
shlb
inc
movl
cmp
mov
jno
jecxz
add
clc
repnz
lret
lcall
cli
movb
or
sbb
inc
cmp
xchg
int3
jmp
roll
cmp
jo
shr
int3
pop
inc
es
hlt
shrb
adcl
icebp
inc
ret
test
ror
ret
inc
adc
sub
into
inc
xchg
or
out
cmpb
ficompl
rcrl
les
mov
jmp
mov
lods
mov
inc
mov
call
cmp
hlt
sub
xor
push
sub
imul
stc
push
mov
mov
out
jmp
aaa
sbb
xchg
iret
sub
ja
cmp
loopne
jecxz
xchg
test
cmpsb
loopne
aaa
sbb
lret
das
mov
jecxz
sbb
jge
fimull
adc
sahf
call
jo
sarb
and
and
push
jb
mov
dec
inc
mov
add
xor
fnstsw
mov
push
dec
inc
outsb
or
mov
rcl
fistpl
cli
inc
test
repnz
dec
push
test
adc
into
cmpsl
sub
xchg
inc
out
in
and
int3
sub
stos
pop
rcr
mov
dec
jno
xchg
mov
xchg
pushf
mov
sbb
lods
xchg
sub
subl
adc
add
xchg
movsl
mov
mov
dec
aam
push
mov
mov
inc
cmp
xchg
int3
mov
lods
jle
cmp
sub
xor
pushf
sbb
lcall
pop
add
pop
xorl
outsl
out
dec
in
test
dec
test
mov
fs
sti
mov
and
and
sbb
in
push
outsb
fisttpl
xor
ret
inc
call
dec
mov
push
push
xchg
in
ret
jbe
sbb
in
fdivr
in
pop
fnsave
push
add
cmp
repnz
dec
fs
movsb
addr16
int
ja
jae
divb
lea
adc
loope
push
fcmovnu
lcall
cs
sub
inc
xchg
jle
stos
sub
out
pop
inc
xchg
mov
test
fisubrl
fisttpll
add
xor
mov
outsb
pop
push
cmp
inc
jbe,pn
shrl
ja
flds
or
cltd
pop
cmp
mov
ljmp
mov
cmpsb
into
test
add
mov
push
imul
into
mov
sahf
mov
jecxz
inc
dec
scas
pop
mov
ret
sub
pop
xor
imul
andl
dec
add
test
or
movsbl
daa
outsb
mov
sbb
mov
xor
addr16
jo
ss
mov
mov
adc
add
into
sbb
dec
dec
jge
fidivrs
ret
sbb
es
mov
fwait
out
divb
mov
pusha
pop
movsb
or
xor
jmp
or
movsb
fstp
mov
lret
ret
push
repz
ret
sbb
dec
xchg
jmp
test
fildll
add
sbb
add
cmpsl
inc
or
fcoms
cltd
push
popa
jmp
out
pop
pop
jmp
mov
fists
cmp
arpl
mov
inc
cmpsb
test
addr16
sub
call
pusha
xlat
push
pop
femms
xchg
cli
cmp
loop
sbb
mov
insb
or
je
xchg
inc
mov
mov
inc
or
pop
mov
mov
push
sbb
in
mov
xchg
inc
sbbb
addr16
pop
xor
push
or
jecxz
in
xchg
call
or
cmpsb
dec
ret
xchg
in
fsubrl
adc
out
ss
test
xor
pusha
shr
cli
mov
dec
pop
mov
fsubrs
sub
mov
jl
push
mov
jl
sub
pop
fstpl
adc
or
and
test
push
xchg
mov
movd
mov
push
in
jge
add
jmp
les
adc
push
cltd
adc
sti
pop
push
jp
push
shrb
insl
das
sbb
mov
sahf
iret
ja
jb
xor
pushf
in
insl
test
faddp
movsl
mov
sub
push
sbb
int3
dec
xor
lcall
aaa
sbb
aam
iret
stos
mov
mov
loop
ja
scas
mov
push
inc
loope
jb
out
leave
test
aad
jge
mov
imul
scas
into
in
into
loope
sbb
leave
fisttps
stc
out
jge
jecxz
add
xor
mov
inc
lahf
jge
xor
stos
pop
inc
int
xchg
stos
iret
lahf
aad
xor
ss
mov
jle
pushf
mov
call
mov
test
lods
dec
cmp
cmp
xor
mov
scas
lods
or
in
dec
in
decb
fldt
add
pop
dec
push
jo
test
jo
cmpsl
push
sbb
mov
jae
addr16
lea
pop
pop
mov
jbe
out
jo
dec
sub
in
gs
int3
add
ret
in
inc
fs
jb
divb
pop
or
lcall
pop
xor
sar
mov
push
xchg
or
shll
cmpsb
dec
les
mov
les
cli
mov
lcall
mov
imul
addr16
lods
pop
fisubl
or
sahf
leave
fstps
lahf
jno
jmp
pop
xor
jge
clc
adc
mov
cmpsb
sub
daa
std
and
mov
loop
cld
into
mov
or
bound
adc
xchg
or
add
inc
adcb
sti
push
or
fistpl
or
scas
mov
mov
sub
ds
dec
sbb
mov
fimuls
movsb
or
andps
mov
push
mov
push
insb
imul
rcrb
jno
push
les
insb
lret
stos
mov
lods
dec
push
cmpsb
sbbl
push
loop
stos
pop
jbe
or
imul
hlt
stc
ja
adc
sub
fisubl
inc
mul
adc
cmp
mov
cmp
jg
xchg
fsubl
testb
or
rcll
lcall
lods
adc
test
add
cs
jmp
mov
clc
stc
outsl
mov
lds
push
and
shrl
lock
jl
dec
dec
hlt
jnp
outsb
sbb
cwtl
into
fld
mov
call
and
cmpsb
test
in
fdivrl
aad
in
fwait
inc
sub
push
and
bound
cmpsb
jg
arpl
xchg
repz
ret
sbb
fwait
push
out
add
into
sub
hlt
ss
dec
xchg
xor
std
mulb
xchg
jmp
mov
stos
scas
xor
faddl
jl
adcb
or
cmp
stc
mov
out
aam
in
inc
jecxz
inc
jae
jle
add
cmp
mov
fildl
pop
arpl
inc
xchg
add
adc
ret
les
pop
imul
bt
shrl
das
adc
dec
cmc
int3
cmp
adc
ret
das
pop
daa
lret
cmp
adc
sbb
push
mov
cmp
fimull
test
iret
into
in
repz
adc
mov
sti
add
je
out
sub
xlat
mov
cmpsb
sub
imull
lea
leave
push
sbb
xchg
cmp
inc
and
dec
les
rcll
bound
jae
xor
inc
push
xchg
sbb
lods
cmc
cmpsb
lea
inc
pop
adc
adc
adc
repnz
sti
mov
test
aaa
dec
cmp
mov
xor
cmp
fbld
repnz
icebp
dec
fistpll
iret
mov
jl
arpl
jae
cmp
cld
cs
into
sbb
stos
sahf
push
mov
jle
out
stos
xchg
inc
negl
ljmp
jns
sahf
repz
pop
sbb
mov
negl
cmp
push
movsl
xor
push
or
pop
xchg
sti
pusha
ja
sti
stc
lret
imul
mov
sub
cmpsl
push
outsb
jmp
add
mov
mov
push
or
stos
add
xor
sbb
test
mov
sub
aas
xchg
push
fimull
dec
les
movsb
push
addr16
dec
jmp
cmpsb
test
jmp
mov
adc
popa
in
imulb
shlb
shr
movsl
fstps
or
imul
out
jb
arpl
sbb
ss
sarl
xchg
and
inc
loopne
add
fs
out
push
rorb
cmpsb
pop
push
sti
outsb
lcall
pop
mov
mov
or
ret
out
imul
and
call
mov
insb
cmpsl
jge
sbb
dec
std
sbb
rclb
xorl
pusha
push
jle
xor
stos
jnp
and
sar
fs
xor
fldcw
in
out
adc
push
rcrl
xchg
cmpsb
fisttps
jmp
or
cltd
mov
mov
sub
add
or
push
and
int
test
jl
adc
test
into
jbe
out
xor
fcompl
mov
loope
int3
jl
dec
cmp
xchg
push
addr16
jae
fsubrl
xchg
adc
mov
jno
mov
mov
out
cltd
in
dec
insl
or
inc
mov
dec
arpl
subb
subb
lret
add
mov
jle
adc
daa
popa
or
je
in
xchg
in
mov
outsl
pop
out
xchg
xchg
and
or
adc
ja
imul
push
inc
stos
fdivrp
gs
and
xchg
scas
fisubrl
adc
nop
add
enter
dec
aas
dec
mov
cmp
adc
mov
sbb
rclb
and
scas
testb
adc
push
mov
test
sahf
ljmp
movsb
pop
out
and
dec
fisttpl
fidivrl
orb
rolb
popa
xor
inc
pop
out
xchg
data16
rcll
das
and
aam
jl
jg
inc
ss
clc
ret
lret
push
rorl
mov
mov
rorl
sbb
popf
pushf
mov
ss
jge
stos
or
inc
xchg
mov
pop
xchg
lret
jecxz
or
stos
leave
fcomp
sti
andb
subb
daa
cli
dec
mov
pop
or
push
sbb
sahf
inc
outsb
mov
mov
cwtl
xor
lahf
insb
push
ret
ljmp
loop
jp
in
stos
out
leave
jo
dec
mov
push
dec
or
stos
dec
mov
mov
jmp
sahf
stc
adc
xor
iret
or
sub
sbb
testb
cltd
repz
mov
xchg
jecxz
jb
pop
push
jb
aam
inc
out
push
mov
in
xchg
dec
adc
add
lahf
shl
insl
xchg
cltd
jno
dec
push
out
pop
inc
cmpsb
movsb
mov
sbb
int
xorb
adc
dec
inc
xor
lcall
jmp
addb
jnp
test
cmpsb
and
stos
push
pop
jp
sub
sti
dec
sahf
ret
cmp
sub
pop
outsb
mov
and
sbb
stos
movsl
add
mov
ficoms
test
add
adcl
add
inc
call
int3
andl
aaa
jmp
outsb
enter
out
imul
call
jg
into
movsl
fldt
fs
pop
aam
addl
fcompl
in
push
fsubrs
sub
loop
cli
add
xchg
pop
testb
dec
sub
push
mov
sbbb
adc
mov
insl
pop
mov
repnz
pop
inc
insl
mov
fwait
pop
mov
or
pusha
xor
sub
iret
loopne
in
arpl
std
test
les
mov
jge
cli
stos
mov
es
jle
pop
jb
push
vpaddq
inc
lahf
mov
cmp
add
xchg
lods
cmp
xor
inc
cmp
jle
jb
dec
or
aad
gs
adc
shll
sub
and
stos
adc
inc
and
push
aam
xor
adc
mov
jmp
mov
xchg
call
outsb
sahf
popf
stc
jbe
pop
arpl
add
dec
xchg
xor
ret
mov
cmp
mov
mov
push
and
es
or
xchg
sti
ss
dec
jecxz
sbb
pop
out
aas
sbb
les
out
int
cwtl
cmpsb
sub
aam
lahf
mov
mov
mov
out
ret
arpl
mov
js
jb
lcall
dec
push
inc
push
cmp
push
ja
scas
sub
aad
test
inc
jb
mov
pop
dec
jns
push
stc
out
jo
push
cmp
mov
dec
sbb
xor
imul
xchg
sahf
xor
jnp
out
jbe
jg
jo
data16
push
outsl
and
and
xchg
inc
bound
mov
movsb
inc
xchg
adc
out
jne
in
jmp
shrb
je
jae
in
fmull
mov
inc
xchg
into
lods
dec
movsl
pop
daa
push
add
lods
bound
or
or
movsb
mov
call
xchg
mov
xchg
int3
or
popf
ficomps
jl
mov
push
sarl
sbb
in
ja
je
lods
inc
aas
add
pop
jae
add
inc
lea
inc
scas
lea
aaa
inc
in
xchg
enter
jo
add
dec
call
data16
push
stos
xchg
subl
pop
pusha
inc
push
add
int3
pop
subb
inc
adc
fldl
add
push
jbe
xor
sub
or
adc
fadds
test
xor
aaa
aas
out
mov
sbb
and
dec
stos
or
sbb
jbe
pop
leave
jmp
mov
push
stos
in
pop
arpl
mov
in
les
cld
mov
push
pop
dec
mov
fdivrl
std
and
cli
sti
push
mov
test
add
cltd
cmp
pop
sbb
pop
mov
xchg
push
add
outsl
arpl
xchg
mov
or
dec
in
sti
in
cmp
iret
adc
push
jge
ret
jnp
cmpsl
jae
sti
xchg
dec
stos
sbb
fistl
push
iret
lods
aam
sub
inc
sbb
push
inc
jp
dec
dec
ud0
push
pop
mov
push
adc
sbb
bound
inc
in
add
cmp
sub
sub
fisttpll
or
bound
bound
sti
adc
inc
adc
jmp
sub
inc
jg
or
xorl
clc
in
xor
mov
test
lock
call
rcll
ja
mov
jne
mov
add
add
lcall
aad
xor
aad
pushf
into
xor
add
pop
imul
call
mov
jb
out
cld
xor
mov
sbb
fisubl
adc
dec
lcall
ja
rorb
mov
divb
sahf
mov
aaa
loope
ljmp
xor
notb
xchg
mov
push
sbb
adc
fcmovnbe
push
cmp
lret
out
mov
and
add
and
loope
ljmp
cmp
sbb
movsb
nop
dec
in
and
sbb
rcrl
mov
ds
sub
shrb
mov
ret
inc
push
mov
xchg
add
mov
insb
mov
mov
jbe,pn
cwtl
xchg
lock
mov
addb
mov
sub
sub
ss
addr16
addr16
push
xor
cmp
or
imull
aam
jns
xchg
mov
pop
scas
xchg
outsl
out
les
imul
xor
inc
fdivp
dec
xchg
insl
in
xchg
cwtl
sbb
mov
xchg
add
outsb
mov
inc
or
sub
fisubrs
lods
mov
or
in
dec
inc
test
sbb
push
xchg
dec
popl
jns
lahf
ret
int
cmpb
call
cmpsl
or
jbe
jl
sbb
push
adc
rclb
xor
sub
dec
shr
aam
sbb
mov
sub
test
stos
faddl
imul
pop
mov
mov
jp
add
sbb
sub
stos
pusha
sub
rcll
xchg
test
lahf
mov
add
xchg
scas
test
fmul
loope
mov
sahf
jmp
rol
add
daa
out
dec
xor
push
mov
pop
mov
jmp
or
add
push
pop
dec
mov
jbe
cmp
ljmp
adc
stc
push
mov
push
mov
lret
inc
mov
sub
mov
out
pop
push
imul
cmp
dec
mov
outsl
xor
iret
daa
hlt
insb
scas
pop
xchg
stos
cmpb
popa
xchg
shlb
out
jno
xchg
gs
out
jl
lcall
cli
mov
loope
cmp
add
sub
arpl
sti
insb
or
mov
sub
sbb
inc
stos
mov
test
mov
sarl
dec
test
lds
stos
jmp
into
jg
jo
loope
mov
pop
inc
mov
ret
jecxz
pop
shr
test
sub
arpl
sti
push
lods
lahf
stos
negl
pop
mov
mov
jnp
loope
mov
pop
mov
xchg
movsl
cwtl
add
xor
jmp
mov
repz
lret
mov
cmp
or
adc
adc
cmpsl
test
cmpb
mov
pop
imul
or
faddl
fists
inc
gs
incb
sbb
lods
pop
insl
push
cwtl
add
jg
push
push
mov
add
or
sbb
call
insl
in
or
add
mov
outsb
in
or
call
xor
mov
and
mov
mov
enter
mov
xchg
mov
cld
es
jp
test
mov
in
cli
aaa
ret
or
mov
aad
or
loop
jbe
and
xchg
pop
push
sbb
shr
pop
scas
stc
jbe
iret
popf
cmc
insb
movsb
cwtl
shl
add
jbe
sub
test
imul
scas
push
test
cmpsb
movsl
push
lahf
mov
mov
xchg
add
in
iret
leave
lods
in
lods
xor
arpl
cmc
pop
stc
jno
cmpsl
ret
and
pop
cmp
cmc
loopne
mov
inc
or
mov
out
je
mov
push
in
xchg
leave
jns
cmp
ljmp
pusha
ret
sub
pop
repnz
and
xorb
mov
xchg
mov
dec
icebp
sbb
shr
test
test
cmp
jecxz
in
lods
push
mov
inc
add
or
stos
ret
or
mov
lods
ret
stos
sbb
jecxz
out
test
repnz
or
push
in
mov
push
pop
fnclex
jg
or
adc
lcall
imul
loop
dec
in
mov
xor
fidivrs
push
cmp
sbb
or
dec
cmc
out
xor
sub
or
adc
cmp
jle
add
pop
into
or
sub
lods
add
movsl
adc
add
movsb
cld
or
dec
out
int3
or
shrd
and
repnz
ljmp
sahf
and
ljmp
jb
hlt
insb
jb
push
ljmp
out
sbbb
ljmp
inc
fidivl
int
sub
lods
gs
add
aaa
cmpb
jne
xchg
sub
into
sub
and
test
imul
cmp
leave
adc
add
dec
pop
and
sahf
js
xor
pop
cmp
mov
sbb
inc
xlat
or
add
in
and
dec
fisubrs
mov
movsl
ret
dec
sbb
jge
dec
and
pushf
sub
dec
dec
and
push
dec
scas
in
jo
das
and
inc
push
jo
mov
push
out
xor
scas
dec
jmp
cmp
sbb
jne
fisubs
xor
lods
aaa
scas
push
stos
sbb
xor
xor
push
out
orl
adc
push
add
mov
add
sbb
mov
mov
imul
ja
lods
fisttpl
sbb
cmpsb
popa
jo
push
add
stos
int3
sbb
arpl
add
fisubs
sbb
mov
in
js
aaa
mov
arpl
iret
stos
lcall
lods
fimuls
shlb
test
mov
sub
cwtl
fdivl
enter
add
das
add
sub
mov
lcall
ret
mov
pop
ss
ret
xchg
test
dec
cld
lea
cmp
sbb
cmp
pop
push
mov
out
xor
aam
scas
notrack
mov
mov
pop
cmp
loop
cmp
xchg
push
hlt
daa
gs
nop
loop
jnp
addr16
pop
add
add
jecxz
lahf
inc
lock
lea
movsl
xchg
lods
bound
inc
dec
mov
unpcklps
cwtl
mov
les
mov
or
or
sahf
xor
jl
inc
adc
lret
mov
add
xchg
and
psrlq
outsb
adc
xchg
aam
jecxz
cli
mov
xchg
bound
lods
sbb
insb
sbb
fldt
stos
arpl
mov
popf
push
roll
pop
mov
push
push
bound
dec
mov
jnp
leave
sbb
call
sbb
push
dec
xchg
inc
int
popf
out
lods
mov
sbb
or
dec
jmp
xchg
mov
lea
out
cltd
mov
or
std
outsb
sub
xchg
or
outsl
call
sbb
inc
in
xor
dec
loope
cltd
out
jl
call
lods
out
mov
call
call
stos
arpl
jnp
lea
mov
out
mov
popf
or
lods
cltd
outsl
jl
sub
or
test
cltd
mov
call
sbb
and
call
out
out
enter
sbb
mov
and
out
dec
cltd
dec
jl
dec
call
sbb
and
call
sbb
or
dec
enter
test
fiadds
sbb
or
out
imul
dec
out
and
outsl
push
push
mov
cmp
cwtl
iret
outsb
pop
push
adc
in
push
cmp
ja
loop
jae
xchg
lods
std
and
jg
cltd
jae
inc
push
jecxz
add
lret
sbb
jnp
inc
and
mov
adc
add
cmp
es
sub
std
fisubs
mov
or
lret
add
add
and
mov
outsb
shr
scas
scas
cwtl
cltd
adc
je
hlt
ficompl
fs
sar
jmp
mov
loop
or
lods
int3
scas
xor
xor
sbb
out
loope
or
cmp
add
shrb
test
jge
fisttpl
xor
mov
arpl
imul
pop
jmp
repz
shlb
pop
add
mov
pop
jnp
and
xor
aam
mov
add
add
pop
lds
or
dec
jae
dec
out
lcall
pop
in
call
or
or
movsl
and
or
mov
sub
cmp
aaa
flds
enter
test
add
mul
iret
in
iret
mov
imul
sti
jbe
das
ret
in
pop
repz
test
mov
sbb
push
shll
fimuls
loop
je
xor
sub
dec
in
mov
fiaddl
mov
add
fisubl
das
add
adc
mov
ficomps
sub
xor
pop
add
pop
ret
sbb
daa
mov
scas
out
pop
mov
mov
cmp
sub
lods
jecxz
cltd
popf
xchg
jmp
cmovge
aam
fstpl
mov
mov
hlt
or
pushf
pop
adc
cmpsl
shll
inc
aad
xlat
lea
je
fiaddl
xor
les
insl
mov
adc
ss
mov
mov
mov
cmpsb
sbb
pop
push
mov
leave
or
ss
pop
enter
sub
in
lods
pop
sbb
das
es
and
movsl
xor
adc
daa
push
hlt
add
addr16
in
js
aam
dec
popl
push
nop
sub
push
jcxz
or
xchg
sub
cwtl
sub
in
std
scas
pusha
popa
ds
jmp
les
push
dec
cmp
pop
call
test
imul
lea
pxor
xchg
inc
jmp
jecxz
testl
mov
push
dec
push
lea
imul
push
dec
fmuls
pop
gs
sub
xchg
inc
inc
lods
jg
xor
sub
lods
mov
rol
ja
sahf
dec
in
outsl
sbb
xchg
adc
jecxz
pop
in
jecxz
movsb
imul
adc
data16
ljmp
add
idivb
scas
sbb
ja
sbb
in
fmull
popf
cmp
aad
fidivl
popl
mov
shlb
les
lcall
xor
jae
call
test
dec
out
dec
adc
inc
cld
mov
pushf
dec
xchg
and
cmp
xor
lods
cmp
and
test
cwtl
mov
jge
jne
stc
fmulp
test
arpl
stc
cltd
xor
subl
pop
orl
lea
arpl
cli
and
jae
ret
cmp
cmp
inc
xor
and
and
imul
scas
add
xor
ror
sub
xor
shl
int3
sub
test
add
cmp
int
mov
mov
cmp
or
arpl
add
adc
ret
in
xchg
jle
and
in
mov
int3
mov
in
test
int3
or
nop
mov
rcll
in
mov
int3
aam
push
dec
mov
jae
dec
mov
inc
pop
and
sub
adc
dec
lods
fwait
xchg
enter
insl
daa
dec
adc
mov
das
cltd
pop
imulb
adc
lock
roll
pop
leave
and
loop
push
aam
jne
mov
sar
mov
push
mov
and
in
cmp
mov
add
loop
imul
jge
imul
push
leave
cmp
adc
out
inc
inc
mov
pop
insl
bound
push
lods
test
jp
repnz
sarb
arpl
sub
jns
jmp
rclb
scas
mul
data16
push
sbbl
sub
and
jbe
adc
addl
enter
lock
sub
arpl
enter
arpl
daa
push
mov
idivl
mov
mov
or
dec
mov
mov
add
fiaddl
enter
out
cli
pop
call
xor
jns
sarb
out
mov
into
sub
es
mov
mov
inc
into
add
mov
shl
sub
inc
push
stos
and
or
in
and
addl
and
stos
dec
enter
enter
xor
in
add
call
stos
sbb
arpl
sbb
fcoms
daa
mov
mov
push
or
push
jne
lods
jecxz
or
dec
cmp
lods
sahf
sbb
outsb
jle
jl
daa
mov
js
push
sub
push
push
repnz
int3
push
xor
fdivrp
mov
dec
jecxz
fs
or
imulb
sub
imul
xor
jns
ret
test
jge
and
jb
jns
jmp
out
mov
xchg
call
inc
sbb
sub
pop
add
or
add
sub
sbb
inc
stos
addb
sbb
xor
cmpsl
or
in
cmp
shlb
sub
lcall
mov
fimull
sbb
fucomp
mov
xor
pop
into
xchg
cmp
jae
push
arpl
negb
arpl
or
cwtl
in
test
sub
mov
or
in
lret
jle
in
loop
loop
jecxz
loop
lds
mov
mov
call
inc
mov
mov
mov
adc
xor
test
in
popf
mov
mov
insb
xor
inc
adcl
xchg
lret
inc
outsb
pop
jmp
dec
xchg
fisubl
mov
aam
push
hlt
xor
mov
mov
mov
stos
cmp
mov
out
cmpsb
xchg
mov
lds
andb
jno
sbb
mov
lret
shlb
add
call
je
repz
fimull
cmp
sbb
inc
mov
pop
lret
js
incb
mov
push
jp
mov
mov
arpl
push
cmpsb
lods
cmp
ljmp
sub
in
inc
push
data16
cmp
mov
mov
in
push
sti
push
xchg
or
xchg
call
sahf
xlat
cmp
rolb
xor
ds
out
and
mov
insb
ds
out
jmp
ret
jecxz
ds
out
fimull
sbb
in
or
xchg
int3
addb
dec
or
xchg
sub
mov
pop
ret
mov
push
lret
add
sub
cmp
movsb
sub
or
xchg
jecxz
add
sub
or
xchg
push
xorb
inc
out
es
mov
xlat
or
push
push
sub
outsl
or
xchg
mov
sbb
jg
mov
enter
or
push
push
xor
adc
add
pushw
orb
cmp
pop
push
cmp
jns
push
ds
movsl
popa
cmpl
into
jae
aad
aas
mov
push
aaa
out
xor
pushf
cmp
scas
or
sbb
fisttpll
and
push
dec
aam
jmp
inc
sub
jo
rorl
loop
das
push
or
jl
call
and
mov
add
ret
aas
mov
repnz
or
mov
imul
or
ret
repnz
fwait
bnd
das
leave
push
outsb
push
add
jbe
fiadds
out
add
cmp
out
ret
sub
js
call
inc
outsb
or
push
outsl
loop
nop
in
lahf
dec
addl
and
in
jmp
adc
lahf
xor
leave
inc
sahf
popf
xchg
cmc
add
ret
inc
jecxz
repz
cld
mov
pop
mov
dec
in
lret
cs
pop
loop
fs
xchg
xor
cmp
mov
in
xor
sahf
lods
leave
push
and
std
adc
adc
xchg
scas
cli
jecxz
or
cmp
sbb
outsb
dec
enter
mov
imull
repz
cmp
jg
addr16
test
push
cld
cwtl
adc
div
push
outsl
jnp
or
stc
mov
pop
cmpsb
scas
xor
pusha
nop
lcall
cmpsb
inc
xor
scas
jb
add
mov
cmpsl
test
shll
and
adc
movb
andb
inc
pop
ljmp
ss
lock
repz
sub
lret
gs
mov
push
repz
out
sub
outsb
test
xor
test
ss
ds
or
dec
push
inc
das
ficomps
add
jmp
call
leave
mov
cmp
stos
mov
addr16
es
push
push
mov
lcall
mov
xor
pop
sbb
ret
mov
aas
cmpsb
pop
arpl
jecxz
lret
cli
sbb
sub
mov
adc
stos
insl
loop
fisubs
mov
pop
lcall
cmpb
cmp
add
adc
mov
inc
pop
pop
mov
bound
mov
xlat
mov
in
filds
sub
ss
rcrb
into
pop
push
ljmp
jbe
mov
into
gs
scas
pop
les
aaa
pop
sub
adc
lods
or
hlt
mov
sub
or
cmp
repnz
xor
pop
lock
lods
pop
movb
or
add
push
xor
int
dec
repnz
or
in
iret
xchg
xlat
jae
lods
add
ja
or
add
push
inc
or
dec
aam
mov
dec
xor
shll
and
sete
inc
push
add
adc
idivb
hlt
sub
sub
push
sarb
or
mov
xor
ret
popa
sub
sbb
pushl
insb
lock
data16
loop
test
mov
adc
ja
add
and
cmpl
ud2
popa
push
inc
cmp
inc
jge
and
adc
cs
sub
jno
jl
inc
or
ret
mov
sub
xchg
sti
sbb
sub
ffree
mov
int
mov
jecxz
and
sbb
mov
push
jbe
or
mov
jb
popa
jbe
cmp
adc
and
rorb
data16
loope
imul
cmp
fstpt
in
or
cmp
cli
rolb
push
fs
sub
cli
loop
fidivs
imul
std
dec
outsb
out
mov
int
adc
test
mov
test
xchg
cmc
inc
lret
btl
sarl
in
movsb
mov
jo
jmp
fmuls
sbb
sbbl
add
mov
fimull
stos
lahf
int
mov
std
or
dec
jecxz
sbb
push
dec
les
sub
adcl
hlt
sbb
into
push
inc
xchg
es
push
adc
and
push
mov
and
pminub
xor
add
push
and
mov
fldenv
jmp
in
roll
or
ret
push
out
gs
cmp
sahf
das
fmull
jb
mov
adc
addr16
xchg
mov
inc
adc
or
sub
add
mov
mov
mov
cmp
cmp
jno
mov
add
lock
out
mov
mov
mov
fldenv
xor
rorb
mov
inc
sti
jne
faddl
lea
mov
sarl
movzbl
xchg
inc
inc
ljmp
dec
fimuls
jmp
enter
add
dec
js
pop
js
in
jecxz
ficomps
sub
mov
mov
cmp
mov
jl
orl
cli
push
xchg
adc
dec
sub
sarb
xlat
jb
add
cmp
imul
sbb
ret
inc
test
or
stos
jp
in
mov
stos
jecxz
ret
sbb
xchg
add
and
test
ret
and
or
in
in
xchg
pop
inc
mov
decb
lods
es
call
jne
inc
jecxz
jmp
mov
add
insb
sti
decb
sub
stos
arpl
je
mov
imul
push
pop
push
xchg
scas
adc
insb
stos
test
ret
xchg
shr
dec
or
add
scas
ret
movsl
ds
popa
xchg
jae
fidivl
mov
rorb
jae
push
add
cs
insl
and
dec
dec
push
push
repnz
aad
in
mov
out
mov
jge
pushf
pop
mov
imul
xchg
dec
sbb
sub
int
daa
pushl
hlt
and
popf
aas
pop
jo
mov
lea
xchg
cmpsb
and
sbb
xor
je
aas
or
and
cmp
mov
loop
sahf
mov
ret
xchg
mov
inc
sub
shll
scas
sub
and
xchg
jl
insb
cli
pop
jmp
arpl
into
xor
ja
dec
mov
scas
repnz
or
loop
imul
aaa
inc
sub
xchg
mov
xchg
ret
sub
or
popf
mov
push
ds
jecxz
and
adc
pop
jae
lods
fisttpl
xchg
test
ds
fldt
push
pop
fs
aad
outsb
test
jg
push
cmp
add
push
or
cs
cwtl
bound
push
in
adc
push
inc
adc
add
mov
lods
jnp
xchg
movsl
and
loop
jl
sbb
outsb
movsl
add
jmp
loop
mov
mov
cmp
cld
out
pop
or
in
ret
xchg
xor
sub
sbb
xchg
loop
mov
cmpsl
popf
mov
decb
dec
mov
sbb
ss
ljmp
mov
shlb
mov
sbb
inc
mov
ljmp
in
insl
cmp
mov
enter
cmpsb
ss
mov
xchg
inc
fisubrl
add
test
pop
rcll
dec
mov
outsl
mov
lcall
push
mov
mov
in
repnz
xchg
mov
popf
arpl
lods
insb
das
pop
mov
or
in
outsl
xchg
popf
inc
mov
inc
mov
mov
outsl
and
fisubrs
test
jg
mov
jmp
fisttpl
xchg
leave
mov
sbb
mov
push
ret
cmp
les
and
adc
int3
out
rcll
dec
and
xchg
ljmp
dec
mov
mov
fcomps
inc
aaa
and
test
aad
sti
shlb
dec
pop
sbb
sbb
lea
arpl
dec
jmp
scas
and
call
xchg
push
pop
mov
sub
xchg
loop
mov
mov
insb
repz
add
mov
arpl
adc
insl
hlt
stos
lret
mov
push
pop
out
ret
test
push
or
xlat
jnp
pop
in
jl
stos
or
jecxz
dec
xor
jge,pt
lock
sarl
test
dec
cld
sub
fimuls
xchg
std
cli
adc
inc
mov
jmp
pop
sub
in
out
xchg
dec
in
fisubrl
fwait
sub
push
or
mov
pop
imul
rcl
stc
adcb
call
clc
inc
sbb
lahf
mov
idivl
mov
stos
dec
roll
jp
push
sti
or
ds
dec
fisubrs
scas
push
loopne
sti
sub
mov
and
loop
mov
ja
mov
mov
loopne
iret
dec
mov
fildl
adc
sbb
and
loopne
sti
or
pop
mov
es
idivl
sbb
push
sbb
aaa
mov
arpl
cmpsb
addb
call
outsb
lds
cmp
jae
lcall
push
jecxz
pop
outsl
cmp
dec
insb
push
decb
mov
stos
int
ret
std
mov
addr16
iret
sbb
inc
mov
ja
mov
dec
mov
loop
inc
hlt
aaa
jmp
dec
push
orb
arpl
mov
dec
in
jns
cmpsl
arpl
xor
das
and
ret
test
dec
jnp
push
cmpsb
push
sbb
pop
xor
scas
jecxz
in
ret
jne
jmp
push
or
test
pop
adc
int
fcompl
push
sub
push
or
pop
mov
pusha
outsl
gs
aaa
dec
repz
mov
pop
or
out
mov
cmp
loope
mov
js
repnz
xor
rorb
fucomi
stc
lcall
mov
sub
mov
pop
add
popa
lods
xchg
push
or
push
les
xchg
xor
adcb
aaa
lret
dec
imul
test
lods
arpl
loope
imul
mov
pop
add
test
rol
les
push
andb
jo
pop
jno
outsl
rcl
std
mov
jbe
int
leave
push
xchg
and
sub
cmp
ret
outsl
arpl
add
push
lods
mov
cs
mov
xlat
lcall
jmp
in
and
pushf
outsl
add
push
sbb
jle
push
adc
add
mov
push
into
xchg
lods
xor
pop
mov
cmpsl
mov
js
pop
or
mov
pusha
es
js
xchg
stc
adc
dec
pop
fdivrs
pop
testb
sub
mov
mov
fimull
lods
ds
rdmsr
mov
pop
and
sarl
mov
or
mov
push
or
jp
sbb
inc
push
shlb
ljmp
mov
mov
mov
bound
add
jmp
jno
cld
mov
mov
sub
in
lods
xchg
mov
out
sbbb
mov
rorl
inc
aaa
dec
push
ret
jb
mov
and
das
rcrb
stos
fisttps
arpl
lds
xor
sti
outsl
out
and
outsb
call
outsb
xchg
popa
insb
sbb
pop
sub
or
nop
out
cmpsb
sbb
xchg
lea
pop
pop
add
lods
adc
imul
adc
cli
idivb
lods
or
dec
lcall
push
stos
jmp
in
adc
push
pop
lret
cmp
jo
idiv
jne
adc
cmp
ss
sub
pop
leave
sbb
scas
lcall
outsl
mov
add
adc
dec
loope
call
enter
inc
lods
aaa
subl
pop
mov
cmpsl
dec
dec
sub
stos
cmp
lods
or
test
ret
sahf
pop
or
int
adc
add
hlt
test
pop
std
push
mov
movsl
aaa
mov
insb
mov
andb
push
sub
out
roll
mov
int
insb
inc
pusha
pshufw
adc
sbb
addl
mov
sub
push
mov
cli
ss
adc
lcall
adc
lods
sbb
out
subb
pop
push
adc
adc
inc
inc
shl
sub
ss
jle
inc
in
cmpsl
fucom
lcall
mov
add
aam
cmp
lret
sub
cmp
cmc
les
cmc
in
push
fstp
out
sub
sub
vpminsw
leave
mov
loop
subb
jmp
int3
hlt
mov
dec
push
pushf
aam
sub
ljmp
ja
data16
mov
jp
inc
dec
dec
cvtps2pd
push
mov
jno
out
dec
test
cmp
push
and
lahf
insb
adc
adc
jl
xor
addr16
repnz
mov
in
mov
and
and
hlt
cld
and
fdivrs
and
mov
xor
inc
pop
fidivrl
inc
sbb
or
inc
push
mov
cld
addb
imul
cli
xchg
pop
les
je
popa
sti
fiaddl
adc
mov
int3
pushf
sub
fsubr
pop
sub
add
xchg
test
mov
popa
xchg
daa
movsb
xchg
push
inc
push
inc
or
fucomi
loop
test
inc
sbb
je
cmpb
adc
lcall
sbb
lods
pop
cwtl
stos
test
ds
inc
outsb
fnstsw
push
sbb
sub
andl
mov
xchg
mov
sbb
es
mov
stos
dec
inc
addb
ss
jp
fistl
xor
sbb
mov
and
movsb
mov
sbb
cwtl
addr16
scas
cmp
pusha
data16
pop
incl
and
sub
or
or
cld
popf
add
outsb
and
int3
in
outsl
push
pop
in
setae
in
add
mov
fists
cmp
sbb
call
imul
testb
fs
or
pop
mov
sahf
scas
sbb
jle
xor
and
or
push
xor
loopne
sub
push
mov
daa
test
dec
jecxz
xchg
fstpl
shlb
or
or
jmp
das
or
mov
mov
xchg
inc
inc
jns
insl
add
fisttps
push
and
das
xchg
push
shlb
leave
mov
cmpsl
pushf
xchg
mov
pop
sbb
add
xchg
pop
int3
clc
fisubrs
rorb
inc
mov
out
xor
adc
xor
fucomi
push
jg
pushf
mov
push
lods
in
push
faddl
push
and
rorb
inc
shlb
and
mov
popa
orb
cld
lahf
and
sbb
dec
or
mov
and
jno
pop
int
das
xchg
and
in
not
push
int
fsub
rclb
test
adc
mov
inc
or
test
insb
nop
or
fnsave
aam
jae
dec
data16
sub
xchg
outsb
sub
lods
or
dec
test
ret
push
jmp
or
aas
nop
jmp
sti
addr16
mov
dec
or
daa
mov
loopne
cmp
cmp
xor
icebp
fists
adc
fstl
cmp
fs
pop
xor
mov
aas
imulb
les
sub
call
mov
inc
imul
ss
push
adc
movsl
es
add
mov
add
test
rolb
or
and
jmp
sbb
loop
iret
pushf
jge
add
movb
mov
in
mov
jge
test
inc
out
jle
push
jmp
mov
sub
imull
test
push
loopne
add
jl
push
xor
sub
jne
es
or
adc
lcall
jbe
or
add
rorl
dec
pop
xchg
mov
jns
or
add
cli
pop
int
clc
dec
xchg
iret
or
inc
imulb
imul
popa
pushf
lea
frstor
stos
sti
xlat
push
xchg
push
push
popl
jle
in
cmp
cli
out
xchg
aaa
fidivs
cmp
xor
adc
jl
gs
shll
inc
push
and
xchg
jl
sub
repnz
out
cmp
out
jle
dec
psrad
jge
lods
aam
cld
orl
test
gs
rorl
test
bound
aad
xlat
inc
mov
outsb
xchg
insl
pushf
es
loop
mov
into
arpl
in
mov
lahf
sbb
dec
lcall
shrb
or
mov
call
addr16
imul
fsubrp
add
je
adc
cmp
jp
xchg
loop
or
add
mov
orb
and
or
call
sti
or
adc
stos
cmp
or
lcall
out
mov
scas
push
or
add
sbb
sub
stos
adc
test
xchg
sub
ljmp
pop
jp
dec
jne
test
shlb
loop
cmp
mov
out
mov
adc
and
and
lret
ja
lahf
mov
sub
ret
pop
in
gs
mov
mov
ss
push
fs
or
dec
leave
push
xor
xor
loopne
mov
ss
or
dec
push
cs
cmp
cmp
pop
addr16
xor
call
cmp
and
xor
daa
shl
mov
push
pop
xchg
cpuid
push
add
push
lcall
out
in
pop
icebp
push
xchg
pushw
adc
mov
fwait
sub
xor
aad
pop
inc
orl
jle
mov
push
add
shll
push
pop
iret
enter
test
dec
adc
xchg
in
aad
mov
sub
sub
roll
cmc
xchg
dec
aam
rdtsc
loop
mov
into
mov
cs
sbbb
dec
jmp
mov
sbbb
in
adc
jmp
lahf
push
stos
or
jl
or
clc
enter
enter
bndstx
cld
in
lds
pusha
sub
mov
pop
test
imul
icebp
icebp
pop
sub
mov
pop
xor
imul
push
jmp
or
xchg
or
mov
push
xor
leave
pop
sbbl
addr16
sub
lods
sub
fistpll
jbe
sbb
adc
pusha
in
jne
leave
arpl
push
sbb
mov
hlt
push
xchg
sti
sub
cwtl
mov
incb
adc
xor
cmp
fs
mov
dec
ret
ret
sub
or
pop
scas
ds
sub
mov
adc
loop
ficompl
lcall
adc
repnz
leave
addl
sub
xchg
jg
inc
mov
gs
das
xchg
inc
ret
push
sbb
dec
or
mov
sti
xchg
push
mov
push
lcall
rcrl
pop
test
test
pop
push
fcmove
and
mov
xlat
pop
out
mov
ss
adc
out
vmread
ljmp
pop
push
ljmp
or
fwait
xchg
rorl
loop
mov
das
mov
push
test
out
adc
ret
in
xchg
pop
sub
in
adc
es
fucomp
popa
cmp
orb
or
cmpsb
jmp
es
add
sbb
fldl
jecxz
dec
mov
mov
fsts
pop
call
sub
or
addr16
nop
cwtl
rclb
lret
sti
dec
imul
jns
pop
pop
mov
sarl
testb
sub
dec
outsl
and
inc
mov
lahf
insl
jb
sbb
or
sub
sub
jnp
push
jns
push
push
pop
pop
sarb
imul
in
loop
stc
jmp
arpl
in
mov
out
sti
orl
pushf
and
mov
sub
cmp
cmp
in
mov
push
mov
push
mov
in
imul
icebp
pop
cmp
sbb
push
and
xchg
push
cmpsl
sbb
jb
pushf
and
into
mov
jns
mov
dec
out
jmp
dec
scas
out
mov
sti
or
sub
outsl
add
rcrl
xchg
fucompp
mov
jb
push
gs
in
les
es
gs
icebp
inc
pop
or
adcb
lods
mov
imul
push
dec
idivl
cmpsl
es
popa
mov
cmp
mov
mov
mov
push
je
add
mov
xor
cld
fisubrs
aad
cli
inc
cmp
stc
jle
shrl
pushf
mov
cmp
stos
sahf
dec
sbb
gs
ret
and
push
das
sahf
push
leave
popa
movsb
js
mov
cmpb
mov
cmp
scas
dec
mov
or
mov
sbb
sbb
idivb
insl
arpl
add
adc
stos
int
jb
loop
push
cmp
mov
or
sbb
adc
ja
cs
scas
push
imul
loop
into
jecxz
mov
test
das
inc
sub
cmp
incb
stc
ret
bound
jae
loop
pushf
insb
mov
mov
in
scas
jno
or
mov
pop
lcall
ret
ss
mov
stos
and
arpl
mov
adcl
scas
push
mov
cltd
xor
adc
roll
stos
jle
mov
sub
push
cli
mov
jb
mov
lods
cwtl
aad
push
shll
xchg
or
out
sub
stos
push
out
mov
stos
or
scas
sub
sub
outsb
stos
imul
test
sbb
js
rol
push
push
cmp
mov
or
sbb
dec
into
add
sub
outsb
out
sbb
scas
andb
call
scas
mov
jecxz
imul
out
adc
stos
lods
pushf
pushf
into
stos
dec
arpl
mov
aas
lret
sub
bound
leave
mov
mov
jecxz
arpl
fdivrp
shl
cmpsl
sarl
out
sub
xor
mov
fsub
push
sbb
inc
jo
pusha
push
gs
loopne
inc
xchg
lret
pop
es
sarb
dec
stos
inc
ds
movsl
jmp
xor
mov
fs
test
mov
inc
adc
mov
cwtl
xlat
lea
in
xorb
dec
ret
or
cmp
lods
mov
testl
testl
repz
rolb
sbb
lods
not
sbb
les
cwtl
iret
test
js
jecxz
outsb
jge
push
mov
sub
mov
int
mov
dec
call
pop
arpl
add
fdivrp
jecxz
mov
cmc
add
lea
ret
shlb
push
int3
icebp
mov
repz
inc
test
add
or
xchg
repnz
je
cli
inc
sti
pushf
mov
movsb
mov
test
mov
leave
shlb
mov
dec
add
repz
sub
aam
and
scas
loopne
sub
inc
or
add
orb
xchg
imul
add
or
jno
adc
push
dec
cmp
xor
cmp
jp
push
lcall
jbe
lret
and
sahf
imul
aas
lods
ds
sbb
stos
lods
cmpsl
jmp
push
mov
sahf
adc
fisttps
mov
into
mov
or
cmp
xchg
dec
jge
outsb
es
sub
or
fwait
sbb
adc
adcl
out
mov
lret
add
mov
fucomi
int
int
mov
pop
stos
xchg
jecxz
sub
inc
sbb
cs
movsl
movsb
push
stos
out
scas
mov
sahf
popf
enter
mov
rclb
mov
sbb
pop
sbb
push
add
xchg
mov
sbb
call
icebp
jbe
test
cltd
jne
add
repz
int3
mov
cmp
bound
ret
xchg
sub
xor
vprotb
lods
mov
xor
sbb
mov
outsb
cmp
push
mov
inc
repz
test
add
outsl
lods
xchg
ret
in
ss
push
mov
jne
dec
gs
jp
int3
xchg
pusha
out
jb
push
mov
pop
pop
or
cmp
pop
in
rcrl
or
mov
jl
or
call
pop
push
mov
lods
cld
jecxz
repnz
mov
or
sbbb
jmp
out
pop
filds
adc
shrl
subl
jl
adc
ss
jp
push
lret
je
jmp
pop
or
pop
mov
xor
dec
out
les
and
adc
jb
mov
imul
out
xor
loop
push
in
arpl
cli
cs
pop
mov
sbb
pop
jb
cs
lea
leave
inc
jg
sbb
arpl
push
pop
mov
push
sub
cmp
and
sub
into
fadd
inc
mov
out
rorl
cmp
dec
ds
bound
flds
sti
scas
sub
lea
mov
push
pop
test
or
jmp
aaa
test
lods
sub
cmp
mov
aaa
sub
pop
lods
sub
sbb
insb
sbb
push
lods
push
shlb
sarb
nop
int
fiadds
adc
sbb
les
push
pop
mov
sbbl
sbb
adc
push
sub
cmp
lret
ljmp
xchg
mov
fdivrl
mov
mov
shrl
cwtl
fwait
cmp
sbb
imul
pushf
insl
xchg
mov
push
mov
nop
sbb
and
mov
mov
xchg
pushf
jnp
and
stos
leave
push
jp
xchg
cltd
jge
ljmp
mov
pop
incl
xor
mov
xor
or
mov
mov
adc
xchg
push
movsb
mov
mov
mov
cmpsb
add
pop
mov
sub
dec
cmp
cwtl
mov
jmp
icebp
sbb
sbb
sub
cmpsb
decb
lea
cmp
push
push
jmp
inc
iret
jo
es
fucomip
push
cmp
sbb
iret
jne
mov
and
repnz
mov
inc
rolb
jge
or
push
pushf
inc
ret
pop
sub
xor
js
mov
push
and
dec
cmp
mov
cli
fisttps
sahf
sbb
push
mov
repnz
mov
mov
jb
push
inc
lea
loope
lods
or
or
call
add
pop
jp
das
jl
jmp
stc
adc
dec
dec
push
mov
xor
jmp
aad
dec
jne
push
mov
or
xor
lcall
cmpsb
mov
jno
push
dec
jne
mov
sub
jnp
inc
data16
rcl
push
jp
ret
cmp
or
cmp
add
mov
test
rcll
sbb
out
and
sti
cli
loop
movsb
hlt
lods
add
scas
adc
sub
fmul
cli
imul
outsl
or
loop
push
push
rolb
dec
sbb
mov
sbb
shrb
aad
aam
adc
sub
cmpsl
xor
int3
dec
inc
scas
adc
mov
xchg
in
jnp
inc
sbb
and
sbb
dec
fucom
cld
in
push
or
push
sbb
xchg
sbb
adc
xor
mov
jbe
sub
dec
adc
sub
mov
xor
cli
adc
xlat
jecxz
sbb
ret
jno
clc
ds
jecxz
imul
rorb
cmp
push
mov
and
mov
jae
fs
mov
in
push
pop
aas
mov
fcoms
ljmp
mov
adc
lcall
jnp
loop
icebp
cmp
test
lods
gs
fistpll
adc
cmp
inc
out
add
cld
fldenv
out
push
in
popf
pop
pop
adc
xor
jl
adc
jae
xchg
add
xor
in
int3
daa
jnp
mov
sbb
or
pop
lods
int
and
roll
adc
lods
jbe
movsl
popf
lods
or
adc
test
roll
movsb
arpl
adc
lret
lods
adc
add
scas
imul
and
outsl
rcll
pushf
pop
test
sbb
scas
jecxz
call
sbb
cmp
in
or
add
dec
xchg
sti
dec
pop
in
dec
or
push
dec
movsb
fcomps
push
fimull
iret
loop
cli
adcb
or
test
lods
xlat
std
xchg
dec
xchg
mov
in
jae,pn
cmp
lret
in
lahf
ja
add
lock
sub
bound
testb
or
repz
imul
dec
push
jnp
sbb
xor
push
adcb
iret
jecxz
add
jns
test
jmp
cld
mov
adc
or
xlat
or
inc
or
jb
ficoms
mov
test
or
and
add
adc
mov
add
das
scas
or
xchg
clc
daa
testl
ljmp
add
xlat
sti
loop
in
mov
repnz
sbb
insl
fldenv
push
loop
loopne
push
jecxz
xchg
add
sbb
lea
gs
adc
into
push
dec
sti
fildl
mov
roll
pusha
fcoml
sbb
fisubl
loopne
and
es
jg
aaa
inc
ret
pop
ret
testl
shrb
push
add
xchg
jle
fists
mov
jge
ret
mov
not
push
or
aam
adc
mov
loop
ja
icebp
or
repnz
clc
xchg
lret
jl
jmp
lret
mov
jb
mov
or
insb
testl
pusha
shrb
cmpsb
and
push
outsl
fildl
mov
call
jecxz
inc
xor
mov
xchg
pushf
pop
sub
lea
ss
mov
lea
test
shll
ret
xlat
mov
push
push
lret
sub
stc
push
test
in
jl
inc
ljmp
loop
lods
cltd
pop
dec
xlat
leave
mov
ja
jecxz
es
fimull
dec
dec
mov
repnz
jnp
scas
ret
mov
and
dec
movsl
vcvtsd2si
fimuls
insl
mov
add
in
ljmp
dec
insl
sub
popa
fisubrl
insl
or
or
dec
push
pusha
test
loop
popa
faddl
or
lahf
fistpl
push
adc
arpl
xchg
std
pop
test
int
adcl
xchg
test
les
xor
and
icebp
inc
stos
adcl
mov
xchg
xor
dec
mov
inc
rorb
pop
roll
cmc
and
daa
aad
insl
mov
xlat
scas
or
jl
mov
js
sbb
pop
jb
xchg
rcl
mov
into
push
sarb
mov
push
into
out
push
fidivs
ficompl
mov
sbb
cmc
and
sub
out
mov
cmp
and
push
sbb
mov
add
mov
nop
or
rorl
loop
pop
adc
icebp
cmp
cmc
and
imul
jecxz
stos
sub
into
loop
pop
lods
mov
and
xor
lock
xchg
cwtl
sub
sub
daa
sbb
stc
enter
mov
mov
cmp
leave
and
stos
mov
inc
or
add
add
stc
rorb
cltd
imul
and
add
mov
out
je
outsl
or
xchg
scas
cltd
in
flds
loop
cmp
and
rorl
dec
ret
add
mov
or
push
push
shrb
lcall
fidivrs
pop
dec
movhps
push
dec
test
sbb
aam
cs
dec
xor
push
into
adc
add
js
imul
loop
sahf
scas
stos
xor
lods
mov
lods
inc
test
subb
and
jecxz
sbb
xchg
mov
mov
shlb
rolb
fmull
xor
stos
pusha
and
mov
in
sub
call
fcompl
inc
push
aaa
ljmp
add
je
mov
repz
hlt
imul
enter
push
add
add
in
pop
leave
scas
fsub
pop
sahf
in
mov
mulb
test
adc
mov
dec
mov
mov
jmp
loop
inc
test
push
pop
test
xchg
xchg
cltd
arpl
scas
movsb
fsub
sub
cld
xchg
sbb
mov
jecxz
rcll
test
push
or
lret
into
adc
push
xchg
cltd
pop
add
xor
aad
in
loopne
mov
xor
sbb
and
aad
xchg
xor
sub
int
xchg
pop
sbb
dec
sbb
into
jmp
ret
or
sub
faddl
sub
cs
cmp
jnp
inc
add
jecxz
mov
in
in
xchg
and
int3
aaa
jg
outsb
adc
mov
das
xchg
mov
adc
test
scas
sbb
mov
lcall
arpl
lods
add
test
push
push
mov
cmp
mov
xchg
imul
xor
xchg
test
jae
sahf
sub
jge
loop
sbb
fidivrs
cmp
dec
imul
mov
jl
lods
mov
xchg
roll
add
or
adc
mov
push
jmp
in
sbb
les
imul
jmp
adc
sarl
daa
lock
mov
lahf
fisttpl
cmp
aad
pop
ljmp
add
in
ljmp
idivl
mov
hlt
cld
fsubrs
sub
mov
xor
mov
lea
sti
or
aam
out
mov
dec
sbb
aaa
int
stos
sub
xchg
movsb
mov
pusha
xchg
or
insb
xor
xor
int3
ficoms
jno
gs
xchg
addl
xor
cwtl
jl
mov
cld
inc
xchg
cmp
adc
lods
pop
in
fcmovnb
mov
mov
xchg
out
xor
mov
icebp
adc
mov
lds
or
jae
inc
jnp
push
sbbl
pusha
out
iret
call
rcrb
sti
shl
in
je
outsb
pop
and
inc
mov
xchg
or
dec
push
mov
push
dec
adc
rcrb
adc
out
sarl
je
cmp
lret
jbe
mov
repz
repz
andl
test
into
jmp
jbe
mov
fistps
dec
dec
pop
pop
out
xchg
aaa
cmc
dec
sbb
sbb
outsb
ficomps
scas
sarl
sbb
orl
inc
xchg
or
sbb
add
popf
fcmovnb
shrl
call
or
iret
adc
pop
lods
add
cld
lahf
mov
adc
sarl
cmp
in
push
int3
fldcw
imul
mov
mov
aas
mov
lods
xor
add
sub
xchg
sub
lahf
fimuls
mov
sub
imul
lds
lods
xor
pop
subl
fdiv
repz
xor
loope
pop
and
fcoml
iret
icebp
lods
cmc
add
adc
int3
adc
push
jbe
leave
xchg
xor
cwtl
jl
hlt
pushf
push
mov
push
mov
clc
cld
loop
aad
nop
imul
arpl
cmp
mov
lods
adcb
pop
je
adc
lods
or
mov
dec
das
xchg
hlt
jecxz
out
xchg
mov
mov
mov
insb
pushf
sbb
scas
sub
inc
scas
mov
es
cmp
dec
mov
out
jmp
add
jp
pop
mov
andb
dec
loop
sub
jmp
dec
addr16
cmp
aad
mov
imul
stos
mov
xor
aam
cmp
jmp
and
pop
ds
cmpb
data16
xchg
push
xchg
bound
push
push
fdivs
pop
jne
push
dec
leave
jmp
mov
xchg
pop
sbb
sbb
pop
or
mov
or
pop
jl
mov
push
pop
pop
fs
sbb
mov
mov
repnz
sbb
add
loopne
or
dec
std
incb
stos
scas
sbb
int
jb
repnz
dec
or
popf
jl
mov
arpl
jecxz
lfs
loopne
call
into
stc
push
push
cmp
test
stos
scas
dec
push
fisubrl
hlt
and
pop
inc
sub
scas
wbinvd
shrl
jb
jnp
mov
sbb
push
push
ret
arpl
sbb
fmull
popf
adc
xchg
mov
inc
cmp
ljmp
pop
dec
aad
test
subb
movsb
jle
aaa
in
addb
dec
or
adc
in
push
lods
xchg
in
cmp
xor
ljmp
mov
in
xchg
xchg
xchg
dec
ret
les
sbb
in
cs
add
outsl
sbb
cmp
adc
popf
fsubl
pushf
stos
xchg
ret
or
lret
movsb
pop
into
pop
and
movl
inc
rorb
cmpsl
xchg
jmp
popf
in
mov
imull
test
xchg
int3
push
push
pop
imul
mov
xchg
scas
push
adc
nop
or
out
sub
ret
insb
push
and
mov
arpl
stos
xchg
mov
in
fxch
mov
into
in
imul
sub
xchg
movsb
subl
add
jecxz
out
mov
xchg
or
sub
mov
cmp
push
dec
mov
outsl
sub
les
leave
push
jno
mov
adc
pop
repz
mov
push
sbb
shr
cmp
pop
jl
and
xchg
or
mov
or
sahf
lods
dec
out
lahf
in
jl
out
lret
shlb
and
shlb
sbb
mov
test
dec
sbb
push
leave
mov
sub
mov
dec
and
lods
jmp
icebp
dec
or
or
push
push
push
lret
mov
mov
das
jmp
std
mov
lahf
jle
and
insl
jg
in
jnp
push
repnz
push
popa
insl
addl
pop
push
test
in
lret
and
xor
xor
test
or
in
mov
cli
mov
add
addb
leave
cmp
xchg
fdivr
jl
xor
fsubs
subb
dec
and
orl
int3
lods
in
inc
xchg
dec
cmp
pop
clc
or
dec
fld
mov
add
lods
mov
cmc
loope
ret
or
sub
add
sub
ret
xor
lea
scas
push
imulb
jo
jne
push
popf
xorl
push
mov
loop
ret
test
push
repnz
cmp
jns
inc
or
mov
inc
xchg
add
rcrl
popf
rorb
shll
mov
ret
test
mov
mov
movsb
push
mov
ret
mov
es
in
mov
jne
ret
push
sub
sub
popf
fs
or
fistl
pop
sbb
push
out
lret
dec
loop
into
push
lret
leave
sbb
jb
xchg
and
pop
ss
dec
out
jb
shll
sbb
xchg
mov
and
pop
pop
add
loopne
xchg
aaa
and
shll
cmp
or
inc
lods
pop
mov
mov
pushfw
add
add
or
mov
inc
das
mov
insl
push
sub
and
mov
stos
xor
pop
hlt
das
loop
in
inc
fnsave
mov
push
and
inc
int
mov
sub
shlb
ret
pusha
adc
mov
repz
lret
aad
test
je
sub
out
add
sbb
inc
arpl
xchg
int3
mov
callw
ror
sbb
call
sub
imul
push
xor
jmp
and
jle
cmpsb
mov
xlat
clc
mov
adc
fistpll
rclb
js
jg
jle
dec
inc
mov
loop
mov
mov
xor
xchg
rcrb
cmpsl
jge
and
aad
add
mov
xchg
cmp
ds
cmp
jle
ds
push
sub
add
cltd
mov
ja
mov
push
data16
xchg
mov
lock
sahf
mov
adc
out
cmp
or
fdiv
add
inc
sub
jge
sub
pop
jo
daa
sbb
sub
fsubrl
scas
dec
iret
mov
xchg
fstpt
pop
insb
xor
lea
nop
sub
xchg
or
lahf
add
cmp
les
mov
loopne
je
pop
mov
imul
pop
push
sub
scas
gs
movsb
lret
imul
hlt
mov
pop
xchg
sub
xchg
add
dec
xor
pop
jmp
insb
mov
ret
ja
jne
xchg
sbb
jbe
test
pop
cmp
lea
push
fmuls
adc
rcll
cld
xchg
sub
sarl
jg
push
xor
mov
dec
pop
test
lea
in
dec
jp
jmp
and
pop
inc
aaa
cltd
dec
or
adc
jb
stos
jo
sub
repnz
out
ljmp
pop
daa
xchg
jno
mov
mov
push
sub
cli
jmp
jp
jp
jno
test
ror
pextrw
test
mov
testb
xchg
adc
call
prefetcht2
adc
out
not
jmp
jmp
int
jmp
xchg
xor
push
inc
int
aam
push
cmp
sbb
push
and
cmpsb
insb
xchg
cmpsl
push
or
push
fisttpl
lock
inc
in
mov
mov
mov
jbe
out
mov
push
daa
adc
mov
sbb
mov
stos
pop
int
in
test
xchg
ljmp
mov
test
stos
dec
inc
orb
dec
stos
loop
out
adc
adc
push
out
push
push
and
sub
out
out
or
scas
out
into
or
popf
push
stos
scas
loop
sbb
sub
or
adc
push
add
dec
push
and
sub
or
imul
xor
mov
je
mov
mov
repnz
popf
pop
cmp
repz
lahf
dec
test
js
xor
bound
inc
pop
in
mov
or
cmpl
rcr
mov
test
arpl
cld
cmp
ret
gs
fcompl
in
push
jmp
pop
mov
in
and
jae
jae
notb
dec
fs
mov
pop
cli
mov
mov
prefetch
lock
jne
aam
inc
scas
sti
fidivl
mov
in
xor
push
lret
and
mov
or
test
dec
mov
jnp
adc
dec
dec
jno
lret
adc
ja
fidivrl
test
addb
in
addl
rol
add
jb
mov
cmp
hlt
andb
loop
mov
mov
ret
fstps
mov
mov
xchg
hlt
rcrb
and
adc
xor
sarb
push
sub
adc
call
push
sbb
aam
gs
push
nop
ss
mov
adc
fs
push
sahf
xlat
fimull
insb
arpl
mov
push
fcmovu
mov
jge
xor
add
mov
rorl
dec
cwtl
loop
subl
arpl
int3
subb
in
inc
js
mov
loop
sub
xor
ljmp
int
insl
xor
outsb
popa
cmp
cli
adc
jmp
cmp
and
ret
cmpsl
stc
push
ret
xor
mov
lcall
sub
lods
and
and
imul
sbb
and
cld
adc
jo
ljmp
lds
dec
and
mov
mov
and
shlb
and
mov
pushl
sub
mov
jb
add
out
dec
sub
outsl
cs
sbb
call
loopne
or
fsubs
sbbb
in
sub
mov
jecxz
int3
mov
lds
xchg
orl
push
sbb
push
imul
loop
aam
jo
ss
and
or
sbb
mov
sbb
in
sub
sahf
sub
or
repnz
xchg
pop
jge
sbb
inc
addb
fbld
mov
mov
sti
mov
sbb
test
push
insl
loop
mov
mov
sbb
add
inc
andb
pop
mov
adc
dec
sbb
xchg
mov
jecxz
push
loop
lret
lods
rolb
dec
icebp
or
sbb
jno
push
loop
add
sbb
push
pop
loope
call
push
mov
sub
fisubs
inc
sub
add
in
sbb
pop
bound
fisubl
cmp
scas
or
in
add
cmc
iret
lds
call
ret
jb
mov
push
sub
xlat
loopne
and
adcb
mov
inc
mov
push
sbb
lods
dec
pusha
js
pop
aam
adc
mov
jecxz
out
ret
inc
push
dec
cmp
pop
fldcw
mov
test
orl
or
add
push
test
push
push
dec
fisubrl
int3
adc
push
inc
cmp
sub
push
pop
jnp
sbb
insb
sbb
xor
lock
nop
dec
add
adc
adc
mov
insb
jnp
in
cmpsb
out
roll
enter
cs
in
daa
sbb
orb
lds
mov
add
xor
push
loop
enter
adc
mov
mov
nop
jne
push
ss
insb
dec
push
loop
jle
in
mov
sub
ret
jp
mov
mov
pop
pop
inc
push
lea
loop
stos
loop
lods
sub
pop
inc
add
xchg
aaa
push
sub
adc
dec
lret
cmp
rorl
xchg
cmpb
xchg
mov
jmp
rcrb
mov
lods
fucomp
sub
loop
imul
or
and
xor
aaa
push
inc
lock
repnz
dec
pop
outsl
and
mov
mov
addb
inc
das
scas
sub
sbb
outsb
insb
mov
adc
or
mov
sub
xchg
and
ret
mov
in
sbb
adc
dec
outsb
and
inc
popa
movsl
xchg
testb
arpl
rolb
jmp
mov
mov
out
mov
repnz
dec
sbb
sub
add
or
add
fcmovnb
test
pop
jno
inc
dec
popl
mov
leave
mov
movsl
sahf
mov
lea
dec
outsb
push
je
ljmp
sbb
jmp
lods
rolb
push
loop
jnp
pop
or
xchg
out
mov
sub
mov
pop
gs
scas
or
push
mov
inc
mov
push
adc
lea
sub
jne
mov
pop
jmp
cmc
test
pop
xchg
push
sbb
mov
add
inc
xchg
dec
mov
int
rcll
sarl
xor
add
sub
sbb
mov
popf
xchg
sub
mov
add
sbb
dec
jmp
mov
mov
arpl
cwtl
pop
mov
roll
or
xchg
sub
cmpsl
pop
xchg
stos
sbb
jmp
in
or
and
mov
pusha
mov
fwait
sahf
pop
test
mov
in
adc
pop
sub
jae
mov
int3
jle
lcall
lods
sti
xchg
icebp
ljmp
sub
pop
add
jmp
or
fsubrs
dec
jg
and
loopne
mov
jno
les
add
jecxz
cs
or
push
shrb
rcrb
cld
mov
pop
insl
lcall
xlat
cld
loope
add
sub
and
lahf
ret
inc
add
and
push
and
sub
in
mov
incb
mov
out
loop
scas
mov
or
cmp
push
or
push
cmpb
sbb
shlb
lret
shll
cmp
mov
jecxz
inc
into
int3
push
sub
inc
mov
ljmp
mov
push
mov
ss
nop
and
cmp
notb
push
repnz
inc
xor
xchg
mov
repnz
in
imul
cltd
push
jb
jmp
fdivrs
sub
jle
mov
mov
roll
mov
ja
dec
and
cmpsl
jg
inc
push
repnz
scas
or
push
dec
adc
mov
sbb
push
out
fnsave
call
jmp
or
pop
sub
or
cmp
jl
jmp
dec
dec
in
mov
paddq
clc
ljmp
ret
sbb
mov
fidivs
stos
mov
sbb
lods
jae
scas
in
jmp
and
mov
int3
push
loop
test
mov
lcall
sub
pushf
les
mov
adc
addl
stos
test
cmp
mov
stos
cmp
imul
or
cmpl
dec
add
js
popf
xchg
stos
push
mov
push
bound
gs
adc
insb
cmp
mov
stos
adc
mov
insb
jl
add
mov
pop
mov
sbb
jg
adc
adc
lods
stos
push
pop
mov
jge
inc
stos
mov
mov
push
cmpsb
adc
mov
sub
inc
in
sub
outsl
shll
jmp
loop
test
imul
or
repz
xchg
inc
pusha
call
jmp
inc
fwait
pop
ret
jge
flds
test
je
jmp
fs
dec
cli
add
pop
or
pop
stos
jnp
lods
mov
pslld
popf
dec
fldt
fsts
stos
inc
sbb
loope
sbb
mov
jb
icebp
stos
out
out
jp
stc
sbb
bound
loope
mul
hlt
dec
xchg
iret
loopne
xchg
adc
imul
out
mov
mov
test
jb
xchg
imul
inc
ds
adc
push
imul
call
loop
int3
jecxz
fprem1
push
sbb
adc
mov
sbb
int
adc
enter
lods
add
jae
mov
aad
add
add
out
loopne
xchg
pushaw
dec
lods
and
dec
jecxz
sbb
ret
lods
sub
jae
out
arpl
repnz
icebp
push
pop
das
lcall
cmpsl
xchg
mov
in
rcrb
movb
lcall
je
jae
sahf
mov
roll
sub
daa
sbb
bnd
xchg
push
jo
xor
jno
pushf
sub
in
and
push
repz
fdivrs
and
mov
ret
add
sti
rcrl
repnz
test
das
xor
jecxz
shl
repz
in
adc
cld
scas
fnstsw
aad
shr
sub
push
pop
mov
push
pop
jg
les
mov
push
push
push
xchg
or
popf
add
outsb
jl
fs
lods
ja
repnz
jno
imul
out
lret
inc
cmp
sti
ffreep
mov
repz
sub
data16
gs
leave
pushf
mov
adc
mov
add
sub
bswap
and
xor
arpl
mov
iret
mov
lahf
outsl
jae
xchg
and
mov
test
dec
outsb
pop
ds
mov
mov
xchg
outsl
add
sbb
iret
xchg
mov
pop
test
and
out
loop
add
ret
and
sub
lea
dec
test
stc
loop
xchg
xchg
ret
mov
sbb
test
sbb
jno
test
sti
cmp
cmp
aam
and
jmp
loop
adc
mov
ret
in
mov
dec
jecxz
pop
dec
fiadds
xchg
sub
add
xchg
ret
inc
push
xor
lock
andl
test
int
imul
or
xor
shll
notb
ljmp
cli
ds
cld
loop
mov
lcall
or
outsl
xor
mov
scas
xchg
clc
mov
xchg
repnz
movb
push
xor
into
cmp
and
mov
or
dec
in
ret
adc
mov
test
xor
push
pop
into
sub
int3
ucomiss
js
clc
loope
sbb
push
mov
shl
dec
mov
mov
or
push
sbb
inc
push
sbb
sub
mov
xlat
jmp
movsl
cmp
loop
xchg
xchg
mov
mov
sbbb
mov
mov
lea
mov
push
mov
inc
ds
inc
mov
inc
ss
push
inc
arpl
sub
xor
or
shlb
rcrl
outsl
mov
cmp
lods
andb
movsl
std
pop
lods
sub
xchg
int
imul
pop
lahf
leave
cmp
test
jae
out
in
outsl
pop
repz
outsl
out
clc
push
popf
push
or
or
fisubl
add
loop
inc
cltd
fidivrs
dec
jecxz
mov
pop
mov
addl
sysret
pop
outsb
push
sub
xor
mov
sahf
cmp
stos
fidivrl
sub
xor
int3
mov
je
or
movsb
and
mov
pusha
push
cld
jo
adc
pop
iret
fsubl
sti
scas
dec
jmp
aam
cmp
push
stos
pop
xor
xchg
lods
sbb
test
push
sub
lret
cmpsb
or
and
imul
pop
in
mov
xchg
adc
sub
jne
or
or
lret
jmp
lret
or
scas
out
add
sbb
xchg
jae
or
mov
in
fdivs
insb
scas
imul
dec
adc
mov
incl
aad
lcall
adc
out
jo
mov
jb
add
imul
or
adc
adc
stos
sbbb
and
cmp
inc
push
ds
adc
xor
mov
dec
lret
pop
test
jg
std
adc
mov
cmp
ret
popf
mov
add
sub
mov
jbe
arpl
leave
cli
mov
into
pushf
mov
sbb
or
or
sahf
aaa
mov
shrl
hlt
mov
add
adc
lods
push
inc
sub
cmpsl
mov
sbb
loopne
and
popf
mov
mull
mov
cmp
dec
jle
push
stos
nop
addb
or
imul
jge
je
cmp
loop
or
stos
mov
das
stos
dec
sub
outsb
push
jmp
aam
and
mov
push
mov
in
jecxz
push
xor
add
and
inc
sbb
mov
subw
popf
xor
lcall
outsl
push
push
xchg
xlat
fisubs
add
pop
ljmp
mov
dec
add
sbb
cmp
ret
or
stos
dec
push
adc
aas
cmpl
sbb
icebp
sub
pushf
adc
fistpll
enter
or
adc
fdivrp
aas
rorb
loop
mov
int
mov
ljmp
mov
add
jno
xchg
lods
mov
cmp
pusha
outsb
push
and
mov
push
mov
mov
mov
fwait
adc
sub
jmp
cmp
inc
out
xor
dec
dec
sbb
data16
pop
cmp
cwtl
mov
popa
mov
cwtl
jg
lds
push
nop
insb
pop
test
test
sbb
je
push
or
adc
negl
pusha
mov
shl
mov
pop
shld
hlt
mov
fisubrs
sub
inc
lods
sub
enter
xchg
sub
call
cs
push
cli
ss
or
dec
push
call
hlt
aam
mov
cmp
sbb
pop
sbb
sub
or
hlt
test
int3
mov
outsb
jbe
insl
sbb
or
loope
int3
fs
movb
rcr
add
int3
fdivl
adc
in
sahf
mov
sub
loop
cmp
jmp
mov
jmp
ljmp
mov
stc
dec
fidivrs
outsb
lea
jae
fimuls
adc
xchg
daa
nop
lds
loop
sbb
mov
clc
ret
call
sbb
mov
fldl
jecxz
jg
sahf
das
rep
cmp
in
cmp
xchg
js
mov
add
xchg
outsl
dec
fs
outsl
scas
dec
ss
data16
adc
call
add
jbe
add
out
jmp
dec
repz
sbb
sub
scas
out
out
or
lods
call
or
adc
mov
js
je
stc
pusha
or
in
xchg
lea
ret
add
sbb
add
shlb
xchg
push
movsb
mov
mov
sub
or
or
out
ljmp
scas
out
sub
adc
dec
inc
jmp
fimull
ss
mov
sub
jbe
stc
imul
add
jbe
add
out
xchg
xor
ss
sbb
xchg
subl
insb
adc
inc
ljmp
out
orb
call
inc
ds
mov
scas
add
inc
lahf
adc
stos
cmp
mov
adc
out
loop
imul
add
mov
dec
and
adc
cltd
mov
push
addb
jmp
in
mov
push
fwait
xchg
popf
stos
or
gs
push
sub
ficomps
mov
jmp
pop
cld
test
mov
mov
sub
adcb
mov
sub
scas
out
or
push
mov
pop
jb
sub
or
je
mov
lcall
pop
cmp
or
lret
scas
repnz
push
or
xchg
dec
stos
ret
movsb
popf
push
packsswb
scas
jbe
add
push
js
adc
mov
out
ret
sub
je
sub
xchg
mov
frstpm(287
scas
push
ss
sbb
mov
int
outsl
ss
add
xchg
dec
stos
cld
lret
add
into
jbe
push
inc
loop
test
jns
sub
out
fcoms
sbb
outsb
lcall
into
add
jbe
add
out
std
or
int
jmp
mov
push
add
sub
sub
call
in
push
ss
test
insl
mov
je
jmp
or
or
movsl
lcall
into
add
jbe
jmp
int3
jmp
int3
cmp
mov
mov
insl
xor
jge
add
subl
add
out
sub
stc
imul
push
add
inc
push
jecxz
in
stos
jecxz
iret
mov
sbbl
stos
xor
xor
push
sub
scas
push
pop
mov
sbb
push
or
imul
ret
fisubl
or
ljmp
jmp
popf
fs
inc
ret
mov
sbb
call
and
rol
cmp
sub
sbb
out
ret
ret
sbb
mov
scas
push
jns
inc
call
jo
dec
sti
cmpl
dec
sbb
push
dec
xorl
push
int
adc
pop
push
xchg
icebp
fucomip
jns
outsl
push
inc
loop
xor
inc
jns
sbb
fisttpl
popf
nop
leave
fisubrl
shrl
insl
cmp
stc
lcall
xor
scas
call
mov
or
push
scas
sub
add
xchg
call
or
sbb
xchg
enter
scas
enter
nop
test
cmp
mov
jecxz
sub
mov
lea
push
mov
pop
fs
testb
push
mov
fs
adc
scas
mov
into
mov
fsts
test
sbb
mov
stos
fldcw
ljmp
inc
mov
mov
movsl
dec
push
mov
lods
add
scas
testl
or
adc
imul
mov
cmp
xor
int3
xchg
out
iret
stos
dec
loop
adc
mov
movntps
xchg
pop
ljmp
pop
mov
dec
and
sub
pop
fwait
jecxz
jl
sbb
call
lcall
adc
dec
dec
dec
jmp
push
sbb
sub
ljmp
push
inc
ret
loop
push
or
jle
scas
sbb
ret
sub
je
lcall
ljmp
sub
andl
sbb
or
mov
loop
mov
sbb
loop
daa
in
ss
insb
jns
loope
in
or
sti
popf
sub
scas
jg
scas
cs
imul
sub
mov
in
jge
add
push
imul
pop
push
push
and
sbb
scas
mov
mov
dec
aaa
stos
dec
arpl
inc
ret
mov
sbb
or
adc
or
or
ds
jl
sbb
add
push
mov
fs
and
mov
inc
push
mov
sbbb
imul
lret
push
add
sub
mov
mov
or
mov
arpl
inc
ljmp
xchg
add
ss
cs
ficompl
xchg
and
ret
popf
loope
and
in
insl
ja
push
mov
out
dec
pop
addb
dec
cmp
adc
push
cmc
ljmp
ror
mov
fldt
sub
jecxz
ret
sti
mov
dec
or
test
dec
jle
loop
pop
or
adc
imul
test
dec
sbb
fsubs
popf
scas
imul
lcall
inc
ds
ret
mov
sbb
or
fistl
call
mov
cmp
mov
scas
scas
adc
jle
scas
out
push
push
jno
xchg
pmaxsw
call
das
out
out
ret
fcomps
sub
scas
iret
out
mov
xchg
call
cmp
cmp
into
insb
and
sbb
xchg
mov
sub
mov
outsl
sbb
fstpl
adc
aas
das
faddp
mov
gs
insl
push
add
inc
ret
mov
sbb
or
out
loop
mov
das
sbb
sbb
dec
jecxz
jno
int
ret
aad
add
sub
mov
in
or
adc
mov
loop
dec
or
repz
or
sub
popf
jo
sub
xchg
lods
out
scas
addr16
imul
or
mov
in
popf
mov
dec
xchg
mov
add
jbe
add
push
pop
inc
adc
sub
lcall
jg
je
xorb
cmp
sub
js
sub
or
xchg
jecxz
fs
jg
adc
mov
ja
inc
loop
jg
scas
call
push
int3
arpl
call
lcall
or
add
negl
sbb
mov
add
imul
stc
out
ret
xor
add
sub
incb
mov
scas
addr16
inc
test
sub
push
jecxz
mov
dec
out
jmp
adc
pop
xor
dec
loop
sub
mov
insb
insl
ds
stos
adc
sub
or
inc
fidivrs
pusha
or
or
inc
loop
mov
lret
inc
pop
ja
pop
adc
xor
mov
and
shr
divb
push
mov
sub
push
mov
insl
arpl
loop
les
test
lahf
inc
dec
scas
mov
jmp
repnz
adc
mov
or
mov
cmpsb
fs
stos
xor
jb
dec
test
mov
in
jle
sbb
sub
add
dec
mov
inc
test
sbb
sub
jo
xchg
in
or
xchg
outsb
stos
stc
or
in
out
ja
xor
scas
outsb
iret
sarb
loop
push
add
adc
icebp
or
push
xor
movsb
outsl
mov
xchg
and
push
call
das
cmp
xor
sub
loop
test
lods
call
add
pop
mov
scas
sub
loop
push
mov
dec
cmp
mov
adc
imul
ds
push
cwtl
mov
or
ret
add
sbb
push
scas
out
push
clc
add
add
in
outsl
jle
inc
mov
sub
or
in
push
push
jl
or
sbb
in
add
imul
sti
xor
call
repnz
lods
call
and
insb
mov
adc
mov
aaa
mov
testb
les
xchg
xor
iret
stos
pop
dec
ss
shr
cld
mov
insb
popf
push
stos
insl
xchg
insb
xchg
pop
dec
dec
push
sub
inc
movsb
stc
cmp
mov
mov
or
jmp
jmp
fidivl
mov
fsubrs
sahf
sub
xor
xlat
inc
sub
or
add
cmpsb
xchg
xor
add
xor
sub
lock
sub
sbb
repnz
lret
lock
cmpsb
mov
add
popf
lea
and
add
sub
sbb
ret
fwait
mov
in
mov
mov
dec
xchg
aam
mov
sub
adc
out
sbb
in
or
shr
cmpb
xchg
enter
pop
adc
sbb
cld
shll
cmpsb
push
repz
insb
mov
pop
test
add
add
loop
jmp
ret
nop
ret
add
pop
dec
shlb
fldt
dec
sub
adc
std
repz
data16
popf
mov
sub
jo
jl
inc
inc
test
xchg
dec
test
fmul
adc
push
imul
adc
ljmp
adc
loopne
mov
shlb
mov
cld
xor
adc
push
cmp
adc
das
cmp
pop
pushf
test
in
stos
aas
pushf
loop
dec
xor
cld
std
dec
test
mov
std
scas
mov
test
push
out
in
push
ss
test
sub
je
jl
aaa
movsl
ljmp
je
or
jae
add
sub
inc
pop
mov
loop
insb
enter
fdivs
test
and
rcll
test
insb
mov
pop
fsubrs
cmp
mov
loop
sub
inc
mov
mov
mov
jns
rclb
mov
jb
stc
mov
cld
pop
sub
sbb
orl
imul
xchg
push
jno
sbb
shlb
sbb
push
sbb
aaa
pop
faddp
jmp
or
sbb
sub
out
dec
pop
lahf
call
lahf
repz
mov
pop
xchg
in
push
cs
or
pop
and
dec
jecxz
shrb
ret
inc
sbb
ljmp
fadd
into
ficoms
sahf
das
repnz
pop
dec
xor
leave
xchg
lods
inc
add
adc
push
rclb
cmp
sub
pop
jg
mov
or
inc
and
jmp
mov
imul
mov
dec
mov
mov
adc
jns
adc
mov
jecxz
ret
rcl
mov
out
sbb
repnz
sti
sahf
adc
jge
adcl
cmp
push
push
push
and
adc
cld
jo
cli
dec
ds
jecxz
add
aad
mov
adc
mov
imul
andl
jecxz
lcall
mov
adc
adc
in
pop
xor
out
in
int
fmull
sbb
data16
xchg
mov
mov
sub
sbbb
jne
call
mov
stos
and
stc
imul
xor
insb
std
jmp
imul
mov
lea
and
int3
loop
hlt
add
mov
leave
int3
les
cltd
push
sub
imul
push
stos
inc
ds
lcall
adc
sbb
jo
jle
arpl
jg
adc
inc
mov
inc
xchg
lret
or
and
xchg
ret
jle
sbb
sub
scas
jecxz
lahf
aaa
mov
jmp
cltd
inc
sahf
jle
loope
adc
jle
adc
sub
mov
cli
lret
mov
lods
jle
jae
xchg
cmp
cli
mov
fidivl
rclb
enter
and
mov
ljmp
sbb
mov
loop
mov
in
adc
push
lret
cmp
std
mov
add
dec
insb
or
push
test
mov
addl
pop
pop
cmp
shll
lea
push
dec
mov
mov
xchg
in
xor
enter
test
call
push
sub
in
jg
or
insb
dec
ds
inc
ds
out
sbb
dec
sbb
pusha
sbb
sub
subl
dec
jbe
push
cmovns
xchg
iret
dec
jmp
imul
mov
xchg
in
lods
xchg
dec
scas
mov
test
xor
jge
rorl
sbb
adc
jmp
sbb
add
dec
sbb
repnz
sahf
adc
dec
mov
cmovl
pushf
orl
add
test
jecxz
repnz
into
in
shll
sub
mov
loop
jb
stc
inc
cltd
sub
mov
cmp
das
ret
dec
sbb
sub
sbb
sub
xor
in
or
xchg
adc
popa
mov
daa
stos
xchg
mov
cli
push
lret
stos
adc
pop
test
imul
imul
outsl
test
xchg
add
pushf
xchg
inc
mov
stos
lea
mov
fiadds
jg
ret
and
mov
int3
stos
mov
dec
jo
addr16
sbb
outsb
or
lcall
adc
lcall
xchg
push
stos
sbb
dec
xor
lea
pushf
mov
movl
pusha
xchg
mov
add
jbe
sbb
roll
sbb
subl
pusha
stos
dec
sbb
orl
es
jns
andb
jmp
fmulp
popf
sub
pop
cmp
or
dec
jecxz
jmp
xchg
dec
pushf
mov
sub
or
or
add
in
or
out
push
xchg
or
xchg
int3
mov
repnz
mov
ret
sbb
mov
cld
rep
cwtl
dec
sub
cld
xchg
xor
imul
js
andl
mov
fsubrl
insb
or
add
mov
jecxz
repnz
xchg
popa
cvtps2pd
out
sbb
or
xchg
jecxz
pop
es
mov
sbb
mov
ret
out
push
dec
or
insb
or
push
cld
jo
arpl
andl
inc
add
mov
and
sub
daa
shlb
mov
ret
ds
adc
push
adcb
andb
imul
pop
inc
push
adc
adcl
rcl
dec
sbb
dec
outsb
shrb
xchg
sbbb
test
inc
stos
add
mov
fisubrl
stos
leave
sbb
push
lea
mov
inc
pop
mov
in
sbb
mov
lahf
add
sbb
mov
lods
ss
lret
sbb
test
push
movsb
mov
bound
ret
xor
or
jno
cwtl
adc
sbb
xor
sub
sti
xor
sub
mov
loope
xlat
out
icebp
add
arpl
sub
or
ret
lahf
jbe
shrw
ds
test
popl
push
mov
xlat
ss
leave
loop
or
call
xchg
mov
fstpt
cmp
mov
repz
jmp
daa
or
mov
add
mov
dec
xchg
mov
hlt
pop
pop
cs
or
mov
lods
add
in
je
dec
jl
ss
sbb
stos
jmp
pop
dec
pop
mov
and
sarb
aaa
or
mov
sarb
loopne
mov
sbb
sub
jo
or
add
jecxz
loop
fcmovnb
fsubl
dec
jecxz
sbb
adc
pop
xchg
icebp
inc
loop
lret
sub
inc
int3
pop
insb
bound
adc
inc
out
out
push
mov
mov
or
mov
pop
test
js
out
mov
jecxz
xorb
les
sub
lcall
repnz
dec
mov
dec
ret
jnp
inc
adc
xor
sbb
mov
lret
icebp
arpl
shr
and
dec
pop
movsb
sub
jle
fstps
xchg
mov
ss
or
out
dec
jno
mov
stc
stos
xchg
mov
das
dec
test
ret
xor
fmull
xchg
mov
enter
mov
ret
iret
sbb
rolb
inc
jmp
out
movsl
cmp
out
das
icebp
out
and
out
add
cmpsl
mov
test
cmpsb
mov
xchg
pop
mov
insl
push
iret
xor
cmp
fcmove
aaa
mov
pop
dec
mov
push
mov
or
into
fisubrs
out
jmp
outsl
ficoml
into
scas
cpuid
enter
ficoml
test
pop
pop
pop
add
stos
dec
push
cmp
ficomps
xchg
outsb
inc
mov
fisubrl
into
call
sti
cmc
or
pminub
adc
imul
jecxz
sbb
mov
xor
cwtl
xchg
scas
xchg
push
mov
mov
icebp
mov
js
dec
pushl
ficomps
popf
mov
imul
out
ds
icebp
jbe
fisubrl
popf
xchg
leave
push
int3
ds
push
movsb
ds
loop
sub
add
loop
ficompl
fsubs
xor
test
insb
jno
xchg
mov
or
mov
ds
mov
push
je
pop
in
mov
fisubrl
stos
pop
mov
pop
popa
imul
cmp
sbb
sub
das
call
fisubrl
loop
ds
sub
mov
jo
pop
mov
addb
arpl
popf
scas
jne
jecxz
mov
sbb
insb
push
add
fisttpl
cmp
int3
sbb
add
scas
dec
fidivs
scas
sub
in
mov
fisubl
xor
icebp
daa
pushf
fisubrl
mov
fidivl
or
jne
stc
imul
mov
fisttpll
mov
in
sbb
sub
inc
sbb
orl
fisubrl
imul
sub
sbb
adc
in
mov
fisubl
adc
add
mov
fcmovu
ret
mov
call
xchg
dec
push
pop
test
sub
or
add
movsl
fmul
mov
sti
outsb
cmpsb
lahf
int3
imul
dec
ds
sub
mov
adc
sub
imul
jge
enter
int3
stos
or
adc
fidivrl
shll
mov
ffreep
add
add
sub
or
sbb
scas
dec
scas
jno
in
xchg
int3
inc
mov
lods
fidivrs
dec
mov
or
lea
mov
push
pop
sbb
loope
stos
pminub
mov
xor
icebp
push
pushf
fimull
push
pop
lock
add
fisttpl
adc
mov
cmpsb
ds
jb
scas
adc
add
int
subb
mov
jecxz
adc
fcmovb
mov
mov
mov
or
or
mov
loop
push
adc
dec
push
mov
mov
mov
aaa
fimull
mov
mov
mov
add
xor
imul
cmp
push
mov
xlat
lds
mov
cmp
rcr
call
xor
dec
sbb
ret
cmpsb
jle
pop
fwait
jae
inc
mov
inc
call
and
add
pop
call
jmp
pop
pop
rolb
push
sub
inc
or
movsl
add
ret
add
mov
popf
add
sbb
xor
sbb
into
fimuls
rolb
shrb
mov
jmp
dec
in
je
sbb
fdivs
xor
ja
ret
in
fwait
mov
xchg
inc
mov
mov
mov
sbb
pushaw
jl
and
dec
mov
jnp
add
push
mov
and
loope
pop
lods
xor
out
fwait
xchg
stos
loop
loope
aas
mov
dec
jg
insb
dec
mov
loop
or
lods
es
mov
or
xor
jecxz
call
das
lret
cwtl
sbb
cli
jmp
dec
gs
fwait
mov
sbb
fld1
and
rclb
mov
sub
pop
pop
push
mov
dec
into
sbb
stos
jo
out
repnz
dec
mov
mov
pop
int
out
das
inc
pop
add
arpl
add
mov
mov
test
dec
das
jo
fwait
loop
mov
mov
pop
and
push
jno
and
sbb
test
in
fwait
sbb
jb
movsb
xor
out
push
mov
xor
stos
filds
and
jns
xor
out
fmull
into
xchg
repz
addr16
jmp
dec
insb
mov
pushf
loop
movsb
dec
jns
mov
in
lods
das
cli
fwait
cmpsb
or
dec
sbb
test
xchg
jg
sub
add
cmp
or
mov
mov
adc
icebp
fildl
fsubs
insl
xor
lret
dec
add
xor
mov
fistpl
xlat
jmp
insl
dec
loopne
pop
add
sbb
in
jmp
mov
xchg
xor
cmpsb
mov
test
out
stos
imul
cmp
sbb
test
sahf
push
push
push
roll
add
daa
mov
mov
shll
lret
inc
out
dec
sbb
xor
inc
out
lret
or
mov
xchg
push
push
xchg
shl
pop
es
dec
or
leave
mov
mov
outsb
bound
ja
lods
adc
in
pop
int3
xchg
sub
adc
mov
lea
mov
repnz
jns
lahf
push
jecxz
rorl
idivb
push
loop
out
cld
cld
jp
xor
and
shrb
pushf
cmp
ret
cmp
sub
loop
insl
push
loop
fidivs
mov
call
sbb
out
push
mov
lock
and
pop
push
xlat
adc
outsb
push
dec
leave
mov
push
out
adc
or
adc
jo
cs
sbb
xchg
in
mov
jecxz
in
dec
adc
cmpsl
sbb
stos
sbb
adc
mov
push
mov
enter
mov
sbb
outsb
pop
jmp
stos
cmp
ss
rolb
popf
xorb
dec
out
or
ljmp
add
mov
lret
xchg
shrb
lea
pop
je
lahf
in
sub
mov
mov
sub
das
pop
mov
loop
testb
movsl
aad
mov
pop
pop
pop
fidivs
add
and
rcll
jl
mov
sub
xor
cltd
dec
fwait
ljmp
or
in
js
push
hlt
sbb
arpl
xor
imul
dec
sub
or
fs
adc
imul
mov
int
mov
push
sbbb
adc
pop
dec
adc
inc
sbb
lcall
rcrl
imul
out
andb
mov
or
sbb
ja
in
xchg
jl
rcll
mov
popa
sub
arpl
mov
pop
cld
iret
adc
push
jge
jl
popl
dec
loop
xchg
jmp
cmp
sub
pushf
jecxz
add
dec
sub
ja
fs
jg
in
pop
add
push
js
imul
leave
and
data16
mov
adc
xor
dec
das
adc
sub
push
sbb
cmpsl
ja
sbb
bound
scas
sub
loopne
fldt
sbb
data16
in
lods
or
mov
jnp
scas
adc
sahf
fistpl
scas
cmovge
xor
sub
inc
out
out
dec
mov
lahf
push
xor
mov
mov
sbb
sbb
xor
jg
cmpsb
dec
fwait
add
inc
imul
dec
stos
jbe
ds
lods
jo
mov
dec
push
sti
inc
jne
jl
outsl
add
sub
shll
cmpsl
push
std
das
in
cmove
enter
push
mov
in
fdivs
mov
inc
sub
mov
popf
repnz
dec
in
mov
outsb
pop
es
pop
fstps
dec
sub
insb
loopne
adc
orl
pop
roll
call
jns
shlb
lcall
fidivrl
push
insl
add
add
rorl
sub
rolb
imul
scas
pop
cmpl
mov
push
sub
in
leave
mov
ficomps
lret
dec
bound
das
xchg
adcb
push
cld
gs
mov
inc
or
aad
cmpsb
rcll
ja
iret
or
je
ret
sbb
or
int3
mov
rcl
lods
jecxz
jmp
jle
sbb
cli
ss
push
cld
sbb
sub
ss
mov
adc
or
sub
xchg
aad
mov
imul
lret
and
movsl
or
sbb
mov
push
popa
dec
or
sbb
cmp
add
mov
add
cltd
mov
mov
and
mov
adc
cmc
or
movsl
add
lahf
jecxz
jnp
stc
insb
pop
sbb
sbbl
mov
mov
xor
mov
mov
push
sbb
sub
mov
jb
rcr
push
sarl
mov
pop
daa
push
or
sti
cmc
and
test
jne
idiv
std
jp
jecxz
cld
jo
outsb
jmp
pop
mov
pop
jecxz
jae
or
add
imul
lret
mov
or
sub
leave
lahf
sbb
lock
xchg
mov
and
or
iret
jo
lock
pushf
dec
xchg
sub
and
add
sbb
adc
js
pop
pop
or
push
pusha
shr
cwtl
mov
mov
dec
or
push
mov
pop
sti
dec
ret
enter
arpl
dec
lret
jp
push
jmp
push
mov
cmpsl
pop
sub
push
bound
mov
cmpl
in
repnz
mov
cmc
js
cmp
adc
int
out
lods
nop
pop
mov
lock
fs
mov
nop
mov
dec
fcoml
lret
enter
test
arpl
stc
push
bound
xchg
shll
idiv
fldcw
dec
sbb
adc
xor
lahf
stc
mov
inc
and
xchg
jmp
mov
sbb
arpl
out
lret
lds
push
aam
jle
mov
sahf
aam
add
cmp
mov
push
adc
or
fnsave
add
and
pop
or
rorb
je
cmpsb
call
jbe,pn
mov
inc
ret
push
sub
push
push
xor
pushf
xor
jmp
das
adc
cmp
dec
xor
jmp
in
xchg
daa
imul
mov
out
and
or
xor
aad
call
sbb
es
imul
out
mov
jmp
sbb
sbb
mov
push
ficompl
and
aad
repnz
mov
call
arpl
daa
stos
adc
mov
mov
loopne
adc
adc
mov
call
push
imul
or
pop
sti
or
pop
sar
add
and
sub
mov
cmp
xchg
jle
dec
jl
dec
sbb
xchg
ljmp
daa
mov
xchg
mov
fidivl
fsincos
fwait
cwtl
or
sub
mov
xchg
lds
xor
push
sbb
loope
sbb
adcb
popa
fsubrs
add
ficompl
ret
gs
testl
in
pop
lods
lods
cmc
lret
in
and
fimull
mov
push
sbb
jecxz
mov
out
push
cmpsl
mov
sbb
jmp
xor
ret
or
add
in
sbb
loopne
and
jg
outsb
push
popa
out
out
xchg
sbb
pop
jl
pop
push
aas
shrl
pop
xchg
loop
or
sub
fnsave
or
pop
adc
das
aas
inc
rcrl
sarl
in
jecxz
rcrb
sub
or
adc
stos
call
enter
test
sbb
sub
or
adc
and
sub
sbb
sub
mov
xlat
adc
cltd
jp
pusha
jmp
push
fiaddl
cmpsl
loop
and
fcompl
pop
repnz
test
std
cwtl
xchg
nop
adc
imul
gs
loopne
in
aas
xchg
sbb
sub
stos
dec
call
mov
test
add
mov
push
sbb
jmp
xchg
out
add
or
adc
mov
stos
and
int
sbb
sub
stos
dec
call
into
push
push
loop
push
and
sub
mov
mov
subl
insb
mov
xchg
or
in
fs
cmp
out
lret
or
adc
push
sbb
cmc
mov
add
outsb
or
popf
xor
and
fisubs
test
bound
jge
push
out
pop
xor
jl
and
ret
adc
jmp
adc
leave
jge
xor
lret
fcmovnb
sub
movsl
aam
adc
push
inc
inc
lods
stos
push
movsb
add
aad
and
mov
push
jge
mov
fcomp
cmp
mov
pop
mov
pop
push
iret
and
mov
push
ja
cmp
inc
inc
add
inc
nop
int3
pop
movsb
mov
es
addb
aam
out
dec
sub
bound
push
xchg
movsb
jb
test
loopne
rcll
int
xchg
push
jl
pusha
jns
je
movsb
mov
push
and
mov
jmp
mov
repnz
icebp
lcall
push
leave
and
sub
shl
mov
cmp
add
scas
mov
lods
sbb
sbb
push
xchg
ss
sub
push
jecxz
fimull
adc
push
add
pop
push
mov
stos
jmp
fisubrl
inc
sbb
pop
push
jbe
adc
xchg
or
les
pop
push
cwtl
adc
pop
ss
arpl
add
push
push
cld
push
aaa
aas
out
xor
ja
out
ss
out
out
mov
jmp
xor
push
out
sbb
inc
out
adc
push
fsubrp
and
int
sbb
push
or
push
mov
mov
mov
fs
stos
outsb
loop
xor
or
out
dec
jl
push
mov
into
jmp
or
push
into
inc
repnz
jle
lods
call
or
xchg
xchg
adc
loop
out
add
mov
fildll
mov
push
mov
fiaddl
nop
adc
into
test
xchg
xor
jnp
data16
int3
arpl
lea
lods
roll
pushf
xchg
mov
cltd
iret
ja
sub
mov
mov
add
sub
loop
and
call
lcall
push
push
mov
outsb
jmp
xor
and
push
mov
movsl
xchg
int
adc
add
dec
mov
lods
andl
mov
fcom
jo
insb
cld
js
xor
sbb
push
add
sti
mov
mov
lods
mov
push
sub
mov
xlat
cltd
sub
sub
mov
sarb
ds
fcomps
jmp
adc
ljmp
inc
xchg
aam
mov
stos
loop
sub
jo
jno
iret
xor
push
pop
mov
push
pop
add
mov
sub
in
xorb
sub
fcoms
mov
ljmp
scas
pusha
pop
push
mov
std
xchg
insb
sub
outsb
lods
int
in
jecxz
mov
movsb
mov
xchg
sbb
test
pop
dec
dec
add
cmc
lea
aad
jns
inc
pusha
mov
xorb
push
bound
pushf
cmp
in
icebp
popf
test
test
mov
xchg
push
mov
int
nop
lahf
movsb
inc
mov
mov
sub
std
mov
cli
sub
std
pushf
shlb
mov
scas
cmp
sbb
mov
test
or
mov
outsl
cmp
mov
cmc
mov
int
fisttpll
cli
push
je
pop
test
aad
movsb
outsl
sbb
or
dec
jecxz
int
in
shll
in
xor
iret
and
mov
cltd
in
sbb
dec
mov
fdivr
lret
fistpl
inc
movb
pop
push
clc
out
mov
outsl
mov
pop
lea
mov
mov
lods
test
loopne
dec
shll
leave
pop
arpl
or
leave
sub
out
push
add
or
jo
out
cwtl
mov
fidivrl
inc
fmull
leave
sub
data16
mov
in
repnz
aad
lahf
jmp
adc
sub
cld
mov
neg
or
add
push
movsb
jno
jge
fidivrl
xor
pusha
enter
xchg
jecxz
ss
jb
pop
mov
aad
aam
adc
cmp
sahf
enter
mov
push
dec
fistl
adcb
mov
into
and
push
loopne
punpcklbw
fucomip
cmc
push
mov
ljmp
jmp
aam
sahf
icebp
flds
dec
or
sub
mov
lods
loop
adc
jae
cmp
les
test
jmp
dec
cmp
movsl
lea
cwtl
loop
test
add
xorb
lret
xchg
xchg
and
lcall
insl
mov
jle
clc
push
pop
push
add
add
push
cld
push
addb
mov
sub
enter
mov
pop
ljmp
mov
cmp
xorl
mov
jno
or
dec
push
call
mov
dec
aaa
mov
movsl
add
test
in
xlat
sub
fdiv
add
flds
cmp
lods
lcall
ljmp
in
insb
pop
mulb
mov
inc
rclb
shll
sbb
test
in
mov
pop
jg
sub
cld
cmpb
dec
pop
adc
push
ds
dec
mov
test
add
sub
sahf
call
jns
mov
adc
pop
movsl
fwait
pcmpgtd
mov
fisttps
imul
call
cwtl
loop
dec
in
lcall
inc
in
stos
sub
test
xchg
rorl
and
dec
push
sub
call
and
stos
push
or
jno
mov
loopne,pn
and
aam
mov
inc
adc
or
mov
mov
cli
gs
iret
notl
push
std
xchg
sub
push
xor
mov
or
dec
push
flds
mov
pushf
or
imul
push
fstps
mov
enter
cwtl
into
stos
mov
repnz
mov
sbbl
push
or
mov
insb
add
cld
fmull
hlt
xor
push
fsubrl
inc
rol
nop
bound
sbb
aam
push
or
mov
movsl
lcall
addb
arpl
sbb
mov
and
out
sub
sbb
inc
inc
shll
mov
imul
jp
push
dec
sbb
push
je
inc
jbe
push
dec
sbb
rcrb
push
add
or
js
pop
pop
ds
ret
inc
push
xor
mulw
ds
push
push
hlt
mov
movsb
in
and
ficomps
sti
sbb
mov
or
or
call
push
shl
nop
push
ret
mov
loope
sub
scas
jbe
mov
lea
adc
mov
lods
jae
test
cld
adc
hlt
dec
pop
div
cmc
fstpt
jle
lods
xchg
xor
cmp
and
sbb
inc
sub
hlt
or
mov
push
mov
push
jle
arpl
lcall
ficoml
xor
sarl
sbbb
push
and
add
test
jmp
xor
ret
pop
mov
in
outsb
ret
dec
xor
pop
out
out
xor
adcb
push
push
jecxz
xchg
enter
shrl
repnz
iret
mov
adc
xlat
xor
out
jbe
test
das
mov
sbb
push
dec
out
sub
and
cli
popf
and
lahf
mov
lret
sbb
dec
lret
xchg
pop
repz
movb
enter
xchg
scas
sbb
mov
fiaddl
scas
fsubrl
cmp
movsl
arpl
pop
push
xchg
sbb
je
int
scas
scas
push
mov
test
scas
or
pop
pop
dec
jbe
push
pusha
out
mov
fildll
pop
dec
xchg
repnz
lcall
adc
push
xchg
mov
or
jl
das
in
pop
pop
lcall
fisubrl
insl
push
test
fwait
in
lret
fcoml
sarl
cmpsl
jmp
jl
or
lret
repz
xchg
neg
call
ss
enter
push
arpl
adc
fsubrl
cld
xor
stos
sub
or
sahf
out
mov
sub
or
pop
insl
sub
sbb
jb
movsb
add
decb
sbb
call
sbb
dec
sbb
in
sbb
in
out
bound
add
insb
adc
dec
leave
push
pop
dec
xchg
mov
scas
clc
call
stos
mov
jmp
inc
jnp
frstpm(287
sub
in
cmp
jnp
mov
mov
mov
mov
adcl
sahf
xor
pop
push
scas
sbb
insb
jecxz
push
jmp
daa
dec
sahf
dec
dec
and
dec
xchg
mov
and
pop
mov
aaa
or
stos
and
jmp
inc
add
in
jae
insl
or
fcmovnbe
mov
jnp
ret
fcomp
and
ss
add
aaa
or
aaa
adc
call
jmp
pop
inc
sub
or
fcmovnbe
and
xchg
xor
adc
aaa
adc
ret
fadds
push
adc
push
lods
shrb
xor
es
inc
cltd
add
fsubrp
and
test
pop
mov
sub
imul
push
ret
dec
adc
adcb
lea
push
and
mov
cwtl
mov
inc
sbb
popa
mov
xlat
xor
inc
imul
and
outsl
pop
push
sbb
jae
jno
dec
rclb
pop
adc
xor
fnsave
popa
stc
fcom
loop
jno
push
mov
sub
fsubrs
sti
out
in
stos
or
push
leave
enter
adc
jo
sbb
lods
lock
and
stos
mov
mov
jns
jg
fdivs
fs
xchg
leave
mov
jae
adc
adc
repnz
and
xchg
test
popa
stos
shrb
or
rcl
dec
ds
sbb
xor
push
inc
out
fs
sbb
xchg
xchg
adc
dec
or
jns
xchg
out
int
stc
popa
arpl
mov
push
mov
sub
sub
divb
sbb
jmp
int3
out
popa
test
lar
inc
sub
dec
popf
push
in
add
adc
jo
push
mov
jecxz
jmp
ss
jno
push
je
inc
jmp
push
sub
push
sbb
cmpsb
push
ror
insl
push
and
jnp
lret
dec
sti
lods
pop
mov
ljmp
xchg
sahf
in
add
stc
imul
push
in
fneni(8087
in
je
stc
pop
xor
mov
lock
dec
jle
jge
inc
xchg
jmp
aas
sbb
ror
mov
test
xor
mov
arpl
add
pop
ljmp
jecxz
rcrb
stc
xorl
or
push
repnz
std
faddl
in
or
jmp
jecxz
sbb
sbb
out
pop
xchg
adc
xchg
andl
lcall
scas
add
mov
ret
mov
xchg
cmp
xchg
push
sub
ret
in
sub
mov
repz
icebp
jecxz
sbb
xchg
cwtl
mov
dec
jmp
outsb
mov
cmp
mov
ss
arpl
push
mov
popf
mov
and
inc
add
cltd
ret
into
ret
das
enter
mov
xlat
fimuls
js
dec
leave
push
xor
lret
int
adc
fisttps
aas
ficomps
dec
inc
xor
xchg
inc
rclb
mov
sub
sub
mov
add
mov
test
mov
xor
xchg
cmp
rol
cmc
fimuls
jno
out
sbb
cli
dec
popf
insb
cltd
enter
or
cmp
aas
or
testl
outsl
iret
arpl
fucomip
and
adc
loop
scas
sbb
aaa
imul
in
stc
or
sbb
enter
shr
sbb
sbb
inc
out
mov
cmpsl
nop
lret
dec
adc
movsl
and
subb
push
jae
jae
sbb
fmuls
or
push
movsb
or
jae
lret
rcll
out
jns
sbb
fsubs
mov
jbe
push
rorb
lods
fnstenv
pmaxub
fcmovne
pop
mov
adc
xlat
cltd
setbe
imul
sbb
inc
mov
clc
daa
lahf
sub
mov
ds
or
arpl
push
inc
sub
scas
pop
jmp
pop
xchg
and
stos
pop
lock
aas
sbb
movsbl
jbe
xor
cmp
cltd
aas
fistpll
adc
out
shl
cmpeqps
iret
xor
cld
cltd
mov
out
loop
xor
add
dec
pop
outsl
pushf
lods
in
fdiv
push
mov
ss
loop
sbb
inc
es
mov
enter
mov
es
aas
inc
stos
and
aaa
jmp
sbb
fs
add
sbb
lahf
ljmp
sahf
shr
js
xchg
sbb
lahf
fisttpl
fcmovne
out
xlat
mov
adc
add
pop
cltd
xchg
push
int3
mov
je
push
sbb
insb
push
je
push
dec
aaa
ret
dec
add
out
scas
outsb
adc
scas
mov
or
ljmp
out
sbb
xlat
out
pushf
pop
or
or
out
stos
je
stos
dec
pop
ret
fbld
iret
stos
fcomi
jmp
xor
roll
or
stos
cltd
or
or
cmp
nop
lret
insb
add
test
psubsb
sbb
xchg
das
jae
or
call
lcall
enter
and
cmp
rclb
xor
out
cmp
push
pop
sbbb
fidivl
jbe
out
mov
lods
popf
or
stc
inc
sub
pop
or
cmp
into
or
xorl
add
sub
inc
dec
in
adc
stos
lods
das
fisubrl
das
out
leave
out
sbb
sbb
das
arpl
jl
subl
fucomip
push
mov
xor
xchg
in
mov
int
ss
xor
rcll
mov
fisttpl
stos
jno
mov
in
jge
lods
lock
stos
sarl
int
jl
repnz
push
mov
pop
in
mov
and
les
jmp
push
push
pop
jne
push
scas
mov
push
sti
ss
sbb
jmp
out
nop
mov
cmp
xchg
mov
shl
adc
mov
mov
add
ss
inc
dec
dec
add
mov
mov
int
add
js
sub
pop
jg
dec
sub
mov
stc
push
nop
xchg
fdivrp
pop
push
or
notb
clc
xor
mov
aaa
aaa
cwtl
js
sub
cmc
dec
int
or
fdivs
pop
enter
in
cmp
in
test
aam
or
data16
ds
mov
pop
push
movaps
test
and
imul
push
call
stc
xchg
scas
or
pusha
adcb
lcall
sub
jmp
in
dec
in
mov
ret
xchg
cmp
stos
enter
jl
loopne
sbb
push
sbb
inc
sbb
daa
in
push
adc
std
push
scas
adc
insb
adc
ss
mov
loop
pusha
push
push
mov
scas
cmovg
out
shl
sbb
jo
sahf
cld
pusha
stos
adc
js
stos
xchg
addr16
mov
mov
loop
std
and
lea
stos
or
addr16
das
adc
clc
lcall
push
adc
shll
outsb
push
sbb
jg
test
jns
adc
inc
addr16
mov
jecxz
and
lods
ljmp
clc
jg
cmp
rol
sbb
jo
sahf
ret
js
adc
jg
in
test
callw
sub
mov
int
dec
cmp
rcr
repz
jg
add
cmp
xlat
sub
add
mov
xlat
inc
int
repnz
lods
out
test
adc
xchg
rorl
cs
mov
ret
orb
sti
add
cli
aaa
lods
add
nop
jmp
stc
into
lock
movsl
and
mov
insb
jns
pushf
dec
add
pusha
push
xchg
and
cmp
push
adc
inc
pop
or
sub
mov
mov
movsb
in
or
aad
jecxz
xchg
jg
ljmp
dec
fidivs
xchg
arpl
pop
roll
out
xchg
arpl
add
xor
and
aam
fadd
int3
hlt
cld
in
xchg
and
insl
push
fcompl
insb
dec
dec
aaa
ret
push
call
cmpsb
jecxz
aas
pop
or
movsl
stos
push
out
pop
lods
int3
dec
pop
iret
aam
adc
jp
adcb
test
cld
stos
cmp
outsb
lcall
stc
xor
ja
aas
add
or
inc
inc
jo
fwait
rolb
xchg
mov
mov
xor
xchg
int
ret
or
add
adc
or
test
loope
or
push
push
outsb
call
test
enter
stos
inc
pusha
out
stos
ss
decl
jb
mov
repz
jbe
mov
xor
adc
out
ds
xor
xchg
dec
aad
insb
repz
push
inc
push
mov
andl
sub
into
mov
mov
popf
sbb
adc
in
add
out
mov
fiaddl
adc
rorl
imul
or
sbb
bnd
jl
add
cli
mov
add
insl
sub
mov
mov
add
dec
lea
in
xor
mov
pop
jmp
jo
mov
hlt
ja
scas
mov
fsts
icebp
inc
add
push
jno
mov
pop
shll
jge
adc
xchg
loop
rep
loop
or
jae
xchg
dec
in
push
fldenv
cli
stos
lret
jge
adc
fcmovnb
or
mov
int3
sbb
jp
lods
pop
ss
stos
fiaddl
push
repz
sbb
stos
lret
sbb
add
ss
imul
movsb
xchg
mov
out
repnz
jecxz
jo
aas
ljmp
sub
sahf
mov
cli
mov
adc
loop
adc
imul
sbb
or
aad
jnp
sti
incl
lds
mov
ret
lret
pop
cli
inc
xchg
jmp
push
out
test
jmp
and
adcb
popf
xorb
xchg
jnp
and
icebp
adc
mov
xchg
sub
subb
push
iret
sbb
cmpb
imul
arpl
mov
cmp
jmp
insb
mov
popf
mov
scas
decb
out
inc
out
push
mov
subb
fimuls
sub
aam
ds
outsb
test
cmp
movsb
sub
sbb
lret
adc
stos
lret
shl
sub
sbb
jl
enter
jmp
sub
xchg
in
sub
jecxz
daa
mov
cmpsb
movb
cmpsl
fidivrl
shlb
rcll
loop
push
repz
aas
adc
sti
mov
jg
lcall
out
xor
dec
cli
fildl
int3
sbb
push
sbb
leave
jbe
push
sub
icebp
cmpsl
xor
insb
adcl
leave
inc
mov
jg
loopne
mov
call
mov
cmp
xor
jge
sub
inc
ja
dec
imul
and
sub
sti
shlb
fisubl
je
aad
popa
adc
cs
adc
mov
xor
sbb
outsb
gs
fwait
iret
ja
fwait
stos
test
inc
mov
mov
or
inc
add
or
sub
lea
cli
sub
mov
push
repz
insb
ljmp
xchg
jge
stos
sbb
ljmp
sub
out
xchg
jbe
push
stos
int
fwait
xor
imul
pop
jmp
movsl
loop
xchg
cmp
xor
dec
jno
outsb
int3
or
mov
xor
popf
dec
rcrb
push
cmpsl
movl
das
mov
ljmp
or
popa
jl
sahf
inc
cmp
push
adc
push
in
mov
xor
mov
xchg
add
xor
lret
adc
cwtl
jecxz
cmpsb
icebp
cmp
stos
lcall
push
loopne
sahf
sub
xadd
xchg
push
aam
loop
and
rorl
mov
jp
sbb
add
scas
test
inc
insl
stos
lods
cmp
call
xchg
mov
mov
jnp
daa
xchg
mov
sti
cli
hlt
mov
or
repz
and
rcll
popf
loop
sbb
push
jb
jl
cli
xchg
ljmp
out
dec
push
addr16
sbb
adc
jbe
sub
pop
int3
jp
jecxz
cs
jmp
cli
data16
mov
pop
push
repnz
in
cmpl
lret
jns
xor
or
les
push
jmp
mov
ret
loop
inc
mov
pop
insl
xchg
lods
jmp
jbe
cmp
aaa
cltd
mov
in
push
lret
jbe
pop
xor
pop
sub
bound
fstl
fbstp
repz
pop
xor
push
cmc
mov
sti
hlt
or
les
sbb
add
or
xor
out
icebp
mov
push
repnz
xor
mov
lret
fs
daa
xchg
sbb
imul
mov
pop
int3
movsl
cmp
imul
lret
pushf
rcl
adc
fadds
ret
outsb
mov
je
sub
push
bnd
dec
scas
sub
sbb
outsl
pop
in
push
lods
pop
adc
lret
xor
mov
add
movsb
daa
push
popa
outsl
aad
mov
jl
add
mov
shl
ficompl
sub
mov
mov
and
jmp
sar
daa
pop
push
fmuls
dec
jmp
loopne
sub
cmp
lods
gs
fiadds
fs
data16
mov
pop
inc
add
adc
pusha
mov
and
lahf
shl
nop
insl
adcb
xchg
dec
pop
xchg
cmp
movsb
or
pop
mov
xchg
xchg
pop
mov
push
int
dec
fisttps
icebp
out
and
jne
adc
push
nop
cmp
pop
xor
lock
mov
cmp
cmp
or
arpl
pop
outsb
cli
jmp
xchg
or
into
stos
push
loop
dec
loop
push
or
scas
push
sbb
adc
sub
out
ret
stos
pop
cld
jecxz
jne
aas
leave
inc
adc
fcompl
mov
pop
cld
dec
push
ljmp
jp
mov
aaa
enter
and
stos
loop
lock
and
adc
ret
inc
add
or
pushf
in
jecxz
test
rorl
sbb
or
std
in
or
or
ss
sub
mov
sbb
mov
or
cmp
xchg
pop
test
test
rclb
out
aam
out
mov
push
leave
xchg
ret
xchg
sbb
fcompl
decl
xor
inc
das
mov
mov
sbb
sub
out
mov
jecxz
add
or
out
popa
mov
and
and
cli
ss
jnp
add
jo
sbb
sbb
xor
iret
cmp
pop
fistpll
das
ss
pop
add
scas
or
sarl
fmul
outsl
adc
cld
push
out
sahf
mov
icebp
loope
pushl
loop
fbstp
jle
gs
cmp
fwait
or
bound
sbb
mov
inc
arpl
js
xor
adc
outsl
xor
xchg
xchg
jo
mov
jmp
pop
dec
psubsw
xlat
and
dec
ja
shld
pushl
int3
sub
mov
mov
test
and
je
pop
out
cmpsl
xlat
jae
or
mov
pop
test
loopne
mov
sbb
adc
lods
call
incl
sbb
leave
dec
add
aam
cmp
movsb
jle
dec
and
insl
dec
enter
mov
push
cli
push
cmp
jg
push
push
adc
cli
stos
aas
push
shl
lea
popa
xchg
adc
lods
loop
out
sub
out
lods
mov
test
ljmp
jnp
xchg
and
stos
push
mov
mov
sbb
insl
xchg
sub
add
pop
cli
int
xchg
scas
ja
jns
fisttps
inc
adc
sub
aas
in
les
jecxz
sbb
cmpsl
enter
fldcw
xchg
les
mov
lcall
pop
in
pop
mov
aad
aam
jbe
in
push
push
mov
fldl
lret
subb
mov
sub
lret
sub
xchg
mov
fisubl
or
loop
out
les
pop
lret
mov
pop
mov
push
fidivrs
cwtl
sti
xorl
pusha
mov
cmp
pop
in
out
mov
dec
mov
add
mov
or
add
sub
pusha
sbb
out
ja
mov
xchg
xor
out
pop
rcl
mov
jmp
xchg
push
movsb
loop
cmp
xor
adc
jne
and
sub
lret
roll
sbb
pop
rcl
loop
es
pop
stos
stos
dec
or
int
mov
sub
xor
lret
test
xlat
mov
mov
ret
hlt
fisubrs
and
jmp
mov
sub
push
pop
movlps
out
and
aad
lret
push
std
xor
cs
push
imull
repnz
mov
mov
test
orb
aas
ficomps
repnz
outsl
jae
push
adc
daa
push
cli
cwtl
loop
mov
in
xor
xchg
mov
test
mov
add
enter
add
stos
or
push
or
loopne
sub
inc
jb
das
mov
mov
lods
jno
push
loope
push
jge
push
or
sbb
and
xchg
fdivrl
mov
fsubr
sahf
js
add
in
jb
mov
mov
push
mov
leave
sub
fs
in
push
jbe
rclb
add
xor
enter
push
sub
outsb
sarb
in
loopne
cltd
gs
push
push
jmp
xor
push
xor
shlb
lret
in
jmp
sbb
adc
cmp
out
cmp
xchg
mov
ret
in
fs
pop
mov
das
xchg
pushf
movzwl
jmp
movlps
stos
pop
ret
or
add
les
in
in
xchg
fstpt
les
test
into
sbb
mov
sbb
into
or
sub
pop
loop
ja
push
jmp
outsl
stos
sbb
push
cmpsb
mov
push
loop
push
add
sub
stos
loop
cs
das
loop
ds
frstor
or
out
dec
or
adc
outsb
loop
imulb
mov
lea
mov
lods
adc
mov
lods
sub
int
repnz
int
mov
cli
int
push
add
fistpll
sbb
sbb
stos
es
cmp
call
or
imulb
adc
insl
stos
lcall
jae
mov
xorb
inc
addr16
adc
test
imul
int3
push
sbb
sub
push
in
loop
push
add
sub
arpl
in
cwtl
sub
bound
cmp
imul
push
cld
xor
ja
pop
sub
cld
je
push
mov
out
sub
aad
mov
xor
insb
out
cld
repnz
sub
sbb
or
int
push
sbb
sub
jo
sbb
ss
pop
nop
mov
push
test
mov
ret
or
adc
and
cmpsb
mov
fiaddl
or
mov
lcall
sbb
jnp
inc
sbb
or
popa
ja
adcb
mov
subb
mov
sub
mov
push
cmp
jecxz
dec
pushf
mov
add
orl
xchg
mov
jmp
jae
jmp
mov
push
dec
das
inc
adc
movsl
int3
clc
mov
loop
add
imul
imull
mov
adc
cmp
hlt
xor
xor
lret
xor
lods
dec
mov
das
mov
arpl
roll
cmpsb
cmp
or
xchg
push
sbb
mov
testb
dec
in
sbb
mov
test
dec
fwait
adc
mov
leave
stc
pop
adc
jecxz
jecxz
movsb
fs
adc
jp
addb
cltd
iret
ljmp
add
sti
or
xchg
rclb
pop
sbb
inc
sbb
mov
shrl
mov
sub
mov
stos
mov
iret
sbb
fistps
adc
push
jo
mov
imul
lods
mov
mov
cltd
push
movsl
test
mov
and
mov
or
xchg
and
mov
mov
sti
xlat
inc
sub
cmc
xor
xchg
mov
fsts
mov
adc
out
mov
lret
xor
imul
mov
fmull
jg
ret
mov
mov
mov
cmp
insb
and
ja
inc
aam
sub
pop
push
andb
cli
cld
or
pop
aam
test
adc
fcoml
je
loop
dec
ds
sub
push
call
inc
ss
sub
dec
push
mov
cmp
cmp
sub
mov
sbb
stc
inc
sub
in
or
xchg
pop
dec
fldenv
ror
pop
stos
call
bound
ljmp
dec
sahf
inc
mov
repz
jg
add
adcb
push
xor
jmp
pop
out
in
cmpl
cli
ja
les
jo
sti
in
sti
data16
mov
out
insl
in
cmovne
dec
ror
jns
aam
aad
repnz
sub
ljmp
iret
jno
inc
mov
je
mov
pop
dec
cli
pop
mov
jo
sbb
xchg
outsl
fisubl
lods
fbld
mov
lods
sbb
mov
push
je
sbb
loop
mov
mov
ficoml
pop
add
jmp
jle
xchg
mov
test
mov
test
or
loopne
mov
pusha
sahf
bound
push
not
sbb
xchg
cltd
or
stc
lods
test
out
push
or
js
jg
ret
lret
xchg
out
stos
push
cwtl
dec
or
and
pop
lcall
xchg
mov
scas
fidivrs
jge
fidivrl
adc
sub
pop
push
dec
popa
lcall
scas
push
pop
popa
pop
scas
fidivs
pop
ljmp
aad
jb
int
mov
popf
stc
imul
ds
loop
or
adc
sbb
jb
push
mov
popf
jo
sub
mov
inc
adc
sub
scas
mov
insl
sbb
mov
fsubrp
data16
fmuls
insl
jmp
dec
xlat
jge
push
and
mov
lea
mov
mov
xchg
ret
stc
cmpsb
lret
push
in
or
mov
xchg
mov
xor
daa
or
and
out
add
or
xchg
int3
mov
or
loop
or
sbb
popa
fsubrp
fsin
push
mov
xchg
ret
mov
sahf
jg
mov
aam
xor
xor
cmp
js
frstor
or
sbb
or
inc
sbb
imul
stos
cld
inc
fistps
and
mov
push
and
sub
or
add
dec
jb
sub
cmp
mov
mov
call
inc
loopne
mov
ja
mov
shll
cwtl
jnp
push
popl
cmp
or
add
lds
leave
lret
es
stos
scas
xchg
hlt
pop
adc
dec
pop
xchg
insb
cmp
dec
idivl
adc
xchg
inc
inc
mov
test
sub
mov
sub
push
call
mov
push
sub
scas
out
out
sub
loop
jmp
jp
stos
outsl
gs
jmp
sti
fldl
fiaddl
pop
insl
xchg
scas
pop
and
cwtl
xchg
dec
sahf
leave
mov
call
faddp
dec
mov
loop
mov
inc
cmpsb
jbe
push
sbb
push
out
xor
fists
jl
outsl
or
cmc
mov
lods
stos
mov
stc
mov
mov
loop
mov
data16
aam
and
jp
outsb
mov
and
dec
mov
clc
or
pop
pop
orb
sbb
shlb
shll
add
iret
je
inc
jp
push
lods
test
push
into
push
arpl
js
xchg
insb
inc
cmp
lahf
pop
iret
clc
jns
cmpsl
out
mov
loop
mov
test
lods
lret
pop
lcall
ret
sub
sbb
jge
ret
xlat
jl
das
sti
sti
and
xchg
or
xor
je
in
mov
mov
sub
xor
mov
sub
jbe
xchg
in
jle
lods
movsb
jmp
ds
push
pop
in
mov
jb
dec
adc
mov
mov
jmp
mov
loop
ja
shll
std
mov
fs
mov
or
shlb
out
pop
cli
in
mov
sub
call
bound
in
jecxz
cli
movsb
mov
loop
add
or
xchg
stos
cmp
xlat
adc
ficoms
inc
push
sbb
inc
lea
xchg
ret
sub
mov
jmp
dec
fiadds
mov
fwait
cmp
mov
mov
push
push
pop
sti
sbb
iret
push
mov
stos
jle
push
scas
cmp
out
mov
sub
adc
mov
stos
or
adc
push
fwait
mov
adc
xchg
add
jo
cmp
mov
inc
pop
sub
sub
add
in
fdivrl
stos
in
xor
xor
and
mov
jecxz
repz
addr16
or
call
adc
test
sbb
or
mov
add
lods
push
ds
movsb
dec
mov
adc
fmuls
adc
xchg
test
cld
sahf
jg
mov
add
icebp
lods
jecxz
sbb
lods
call
ficoml
pop
inc
lea
dec
push
inc
and
enter
std
or
lret
enter
test
sti
mov
movsl
jge
pop
test
jecxz
in
scas
bound
jmp
dec
lods
push
imul
xchg
pop
dec
dec
cmpsb
movsl
pop
rcrb
add
loop
aam
dec
lods
jge
std
test
pusha
shrb
mov
push
sub
pop
sbb
test
push
xchg
inc
mov
push
or
pop
stc
pop
ret
push
sub
ja
adc
sub
je,pn
inc
fwait
mov
push
cmp
fstpl
int3
lods
xor
mov
mov
fnstsw
mov
arpl
pop
mov
cmp
xchg
das
dec
ficompl
ds
rol
mov
into
cli
mov
lods
mov
and
mov
les
sub
inc
cmp
dec
jmp
xor
out
imul
rorb
int3
add
ret
in
jle
into
sbb
mov
sub
repnz
mov
mov
mov
pop
mov
icebp
mov
cmp
mov
bound
add
xchg
push
outsl
vcvtsi2ssl
inc
insl
insl
das
aad
pop
sub
arpl
jle
ja
in
out
cs
push
pop
iret
adc
and
mov
cmp
subl
test
adc
sti
ret
pop
enter
mov
pop
or
xchg
adc
lods
fs
push
ret
jp
pop
fnstsw
rorl
mov
cli
neg
mov
mov
in
mov
scas
fiadds
push
add
sub
jb
cmp
in
cmp
xorb
int3
inc
add
mov
xlat
repnz
mov
bound
imul
fidivrl
sub
adc
push
or
sbb
mov
adc
std
pop
out
push
mov
mov
ss
sbb
out
xchg
lea
aas
lea
xchg
sub
xchg
inc
sbb
jge
pop
jae
xor
jb
inc
jb
stos
mov
stc
outsl
iret
jmp
dec
sbb
xor
push
repz
inc
stos
push
shlb
fmul
sbb
jle
xchg
dec
lcall
in
scas
fldt
cmp
mov
jns
cmp
sub
out
bound
lds
add
pop
popa
push
lret
jle
jbe
push
sti
adc
rcr
adc
sub
cmp
stos
in
add
outsb
push
into
xchg
push
scas
xchg
in
arpl
mov
insl
sbb
out
dec
and
shrb
orb
repnz
push
push
sub
sbb
or
xor
xchg
push
xchg
add
es
push
inc
mov
rcl
rclb
out
dec
mov
push
imul
loop
dec
mov
push
sbb
xor
cmc
push
xlat
mov
out
add
les
adc
add
and
fadds
cmp
popf
or
in
sub
call
jb
dec
sarl
and
mov
mov
loop
jmp
icebp
push
movsl
loop
cwtl
jnp
imul
scas
mov
mov
mov
push
pop
xchg
enter
mov
lods
pop
nop
or
dec
push
inc
pop
mov
xchg
out
outsb
in
call
adc
lock
enter
jmp
loop
out
jp
inc
lock
and
and
out
sbb
jae
mov
jle
mov
sbb
mov
fisubl
es
jnp
dec
ja
push
dec
xchg
sbb
and
jge
push
fs
outsb
lret
insl
sbb
inc
mov
stc
mov
push
rcrl
sub
inc
jnp
fmull
mov
sbb
test
push
mov
or
push
jo
sar
sbb
sbb
loop
adc
jge
fldcw
pop
data16
jmp
hlt
fld1
and
filds
sbb
jbe
fidivrs
lcall
imul
jg
pop
fstpl
mov
aaa
lods
mov
imul
sub
outsb
add
mov
push
mul
inc
xchg
sti
clc
stos
add
pop
pop
andl
jae
pop
push
test
mov
iret
testb
adc
push
stos
pusha
ja
fs
add
or
jo
repnz
inc
je
push
push
jl
jmp
mov
cmpb
mov
ret
sbb
in
cmp
bound
xor
roll
jbe
inc
mov
push
push
xchg
jg
int3
lods
lret
sub
jmp
pop
sub
lcall
sbb
push
xor
and
les
push
subl
lea
stc
aaa
jmp
sub
ss
sbb
inc
aaa
pop
lcall
adc
mov
lock
sti
sarb
popa
dec
lcall
xchg
add
adc
jg
xchg
aaa
shrl
daa
pf2id
stc
push
mov
inc
or
push
fdivs
mov
jle
aam
into
insl
addr16
sbb
fdivp
cmp
adc
or
repnz
xchg
sbbb
adc
ja
jmp
shl
shrb
xchg
jmp
push
aas
addb
mov
dec
pop
pop
pop
out
sahf
pop
lahf
push
in
inc
fidivs
xchg
ret
xchg
scas
mov
dec
outsl
xchg
scas
or
sbb
mov
pushf
xor
lcall
je
and
imul
cs
jns
xor
mov
sub
sbb
mov
lea
movsl
jl
jp
roll
insl
std
and
ljmp
icebp
cmp
loope
fildll
test
lahf
lahf
cmp
sbb
ret
xchg
push
in
lods
mov
movsl
adc
js
out
cltd
sbb
mov
cli
fwait
dec
inc
je
andb
nop
mov
in
mov
mov
lods
loop
push
jecxz
push
mov
sub
sbb
dec
sbb
adc
mov
pop
rcl
imul
popf
inc
push
out
jge
sub
and
dec
stos
xor
inc
rorb
jns
bound
call
push
lods
shl
sub
pop
test
pop
sbb
loop
sbb
adc
mov
mov
mov
mov
dec
mov
xor
mov
sbb
and
fwait
dec
adc
inc
jb
and
roll
test
lcall
loope
scas
out
pop
out
xchg
js
dec
addb
jne
sub
mov
mov
lds
imul
or
push
add
mov
inc
xchg
sub
test
cwtl
rol
cmp
add
bnd
call
insl
lret
pop
mov
sub
or
inc
push
aas
test
adc
ljmp
dec
pop
orl
out
mov
clc
out
push
imul
jmp
lea
lods
sbb
clc
fwait
xorl
mov
iret
jnp
lods
mov
mov
out
dec
sbb
enter
int3
push
lret
pop
adc
xchg
repnz
push
adc
popf
xchg
push
fcompl
fadds
in
mov
rorl
sbb
pop
push
leave
pop
pop
sbb
fdiv
cli
clc
stos
xchg
jecxz
sub
adc
xor
shlb
imul
and
sbb
out
sbb
xchg
mov
jnp
adc
jnp
data16
shlb
outsb
loopne
jmp
and
inc
fcomps
mov
dec
jg
mov
gs
push
subb
dec
add
cmp
rorl
not
dec
sub
add
adc
ja
test
ret
jbe
test
or
fstps
stos
stc
push
stos
mov
mov
gs
or
push
repnz
pusha
sbb
add
xor
enter
stos
add
aam
sbb
mov
fdivs
xor
cld
inc
push
stc
dec
sbb
jl
lock
sbb
jl
xchg
mov
mov
cmpsl
xor
inc
dec
adc
out
xchg
jbe
mov
subl
jne
insb
inc
adc
movsb
subb
pop
add
adc
jecxz
inc
and
or
push
add
popf
mov
add
and
add
cltd
popa
call
scas
add
out
iret
jne
test
arpl
mov
add
ret
adc
or
xchg
dec
push
add
inc
xor
push
ja
pop
cld
out
xchg
adc
cmp
mov
mov
es
xchg
shrl
sbb
xchg
pop
or
inc
sub
pop
push
sbb
test
mov
jmp
adc
loop
xor
xor
out
mov
push
es
addb
mov
pop
rcrl
or
rorb
inc
or
mov
into
xchg
insl
outsb
mov
fimuls
sub
gs
sbb
sbb
fmull
mov
ret
insb
xor
xor
divl
aad
push
or
out
sbb
xchg
mov
mov
test
cmc
outsb
or
sbb
push
mov
cmp
loop
push
insl
std
movsb
out
adc
mov
jae
cmpsb
add
stos
mov
scas
andb
loope
test
xchg
xlat
jbe
jnp
mov
pop
mov
or
gs
pushf
ret
sbb
iret
fisubl
xchg
pushf
ret
inc
adc
daa
xor
dec
jne
push
outsb
mov
xor
pop
in
mov
mov
push
pop
outsl
inc
xor
das
stos
inc
js
loop
sbb
sbb
out
jae
push
push
out
xchg
mov
mov
idivl
ret
movsl
arpl
outsb
sbb
loope
xchg
in
cmpsb
loop
adc
mov
ss
mov
dec
xchg
lods
fimuls
adc
sbb
add
mov
dec
outsl
mov
out
leave
sbb
jge
mov
or
xchg
out
ljmp
push
xor
push
insb
inc
fwait
ja
fsubr
xor
loop
dec
fcoml
mov
movsw
insb
pop
lods
imul
ss
push
in
cmpsb
xchg
call
pusha
push
out
jnp
mov
push
add
and
jmp
insb
rolb
test
jbe
xor
or
and
mov
adc
inc
out
cli
push
add
mov
cwtl
pop
sbb
je
push
xchg
imul
sbb
pop
sub
in
mov
adc
cwtl
add
stc
adc
ret
cmp
push
mov
or
lret
pop
inc
pop
inc
xchg
sbb
in
dec
pop
adc
popf
dec
or
rdpmc
sbb
sbb
or
lds
jb
loop
adc
stos
jg
xchg
xlat
fstpl
imul
pusha
jo
push
orb
mov
jmp
shrb
pop
shlb
arpl
nop
and
pop
pushf
inc
insb
jmp
xchg
sub
sbb
rol
and
gs
pop
orl
push
xor
shrl
lods
shlb
cli
or
mov
int3
add
in
or
loop
and
mov
or
add
or
test
int
add
leave
pop
add
push
jge
outsb
pop
loope
ss
cli
mov
roll
sub
lret
arpl
stos
pop
in
verr
out
jp
mov
les
pop
push
cmp
lret
cmc
xchg
inc
pusha
popf
arpl
push
xlat
sbb
add
push
pop
aaa
bound
or
pop
mov
lea
fstl
mov
ret
cmpsb
mov
mov
xchg
sbb
dec
sub
inc
mov
in
xchg
or
call
and
test
push
mov
pop
mov
push
popa
push
scas
inc
cmp
xchg
loop
testl
add
addb
xchg
fdivrp
testl
pop
testl
cmp
addb
push
loope
addl
mulb
std
imul
test
std
imul
std
imul
testb
std
imul
mov
out
std
outsl
dec
ss
inc
cmp
fists
in
xchg
jecxz
rcrb
leave
push
sbb
sub
or
adc
fnclex
dec
push
sbb
stos
ret
mov
or
adc
stos
inc
loop
or
jecxz
sbb
sub
mov
inc
adc
push
sbb
sub
out
sub
xchg
or
xlat
add
mov
je
rcl
cwtl
xchg
ret
shlb
mov
xchg
inc
clc
and
sub
cli
sbb
inc
out
arpl
adc
push
adcl
xchg
stos
loop
and
sbb
or
ret
insb
lcall
adcl
stos
push
add
int3
pop
or
mov
sbb
adc
and
lods
mov
or
dec
add
enter
adc
sub
xor
lods
mov
mov
and
stos
into
xchg
enter
mov
sub
add
dec
pop
outsb
lods
into
cs
in
pop
out
mov
jmp
jecxz
dec
out
mov
cmp
or
mov
or
stos
out
lea
and
push
adc
mov
mov
dec
stos
or
cmp
iret
jne
lods
mov
xor
cmp
adc
sub
sub
pushf
or
sbb
shr
adc
mov
aam
outsb
xchg
xchg
ret
aad
mov
ja
sbb
stos
push
int3
jae
out
and
xchg
cmp
incl
clc
ror
jns
push
pushl
lea
call
jmp
call
mov
call
setb
sub
xor
movzbw
dec
sub
cmp
setb
neg
add
sub
adc
lea
sar
dec
add
test
call
movw
movw
mov
pushf
jmp
movb
pushf
popl
mov
pushf
lea
jns
popl
pushf
pushf
pusha
pushf
lea
jmp
call
shr
mov
bt
pusha
cmp
clc
sub
push
push
mov
push
lea
jmp
add
call
cmc
neg
cmp
add
bt
xor
test
cmp
pushf
mov
bt
sub
pusha
call
mov
mov
pushf
mov
pushl
lea
jmp
pushl
popl
pushf
pushf
mov
lea
jmp
sar
rdtsc
stc
sub
push
push
mov
jmp
mov
pushf
popl
jmp
bswap
push
movsbl
mov
pushf
pushf
lea
cpuid
pushf
stc
test
sub
pusha
pushf
cmp
cmpl
mov
pushf
mov
mov
jmp
test
add
clc
neg
jne
inc
call
pusha
mov
push
jmp
bswap
aad
mov
movsbw
setbe
inc
inc
mov
pushf
add
mov
mov
push
movb
lea
jmp
jmp
not
call
jmp
lea
jne
call
pushf
popl
jmp
call
pusha
push
movw
repz
popl
pusha
mov
mov
call
mov
pushf
movb
movb
lea
jmp
mov
movb
pushf
pushf
lea
jmp
mov
jmp
movb
call
mov
pushf
call
pusha
pushf
mov
mov
mov
pushf
lea
jmp
mov
jmp
jmp
add
mov
cwtl
sbb
rcl
mov
aam
mov
movzbl
cmp
not
movsbw
mov
cld
xchg
mov
pop
mov
pop
mov
call
mov
call
setbe
mov
pusha
btc
add
add
xor
add
rcr
shld
jmp
or
call
call
pusha
pushf
mov
push
pushf
lea
jmp
mov
jmp
setne
neg
pushf
xchg
mov
push
rcr
dec
dec
mov
jmp
not
mov
lea
mov
not
lea
movb
cld
cld
mov
jmp
test
movzbw
mov
not
add
not
setnp
mov
pusha
pushf
mov
movw
pusha
lea
jmp
pushf
call
pushf
call
add
clc
bt
cbtw
bt
cwtl
call
pushf
popl
movb
mov
mov
pushl
popl
pushl
pushf
pushl
movw
lea
jmp
mov
movb
mov
pushf
pusha
pushf
lea
jmp
call
mov
pushf
mov
mov
lea
jmp
pusha
sub
jmp
pushf
repz
popl
pushf
pusha
pusha
mov
pushf
jmp
bt
add
jmp
call
call
mov
mov
mov
pushl
pushf
mov
mov
lea
jmp
push
pushl
repz
popl
push
mov
jmp
pushf
push
mov
pushf
pusha
pushl
ret
shld
mov
setns
inc
mov
call
mov
push
sub
call
mov
mov
movw
pushf
pushl
lea
jmp
movw
mov
pushl
pushf
pushf
mov
pushf
call
cld
mov
push
call
call
mov
pushf
repz
popl
mov
mov
pushf
push
movb
mov
pushf
mov
mov
call
pushl
pushf
inc
push
movb
stc
test
sub
jmp
mov
mov
pushl
jmp
lea
clc
rol
stc
add
not
sbb
neg
lea
cmc
rcr
ror
clc
sub
xor
rol
or
ror
mov
shl
mov
mov
pusha
add
jl
bswap
btc
add
sub
bsf
mov
sub
add
clc
stc
shrd
not
not
mov
sub
shl
shld
bt
clc
neg
stc
rcl
shr
bts
add
mov
movsbw
movsbl
movzbl
movsbw
call
pushf
mov
pushf
mov
mov
movb
call
aam
mov
xor
shr
cmp
movsbl
mov
jmp
mov
movw
pusha
call
cmp
stc
add
pusha
lea
jno
pushf
push
pushf
popl
jmp
call
mov
call
test
ror
mov
cmc
bt
sub
pusha
call
push
push
pushl
mov
call
seta
mov
test
cmp
stc
bt
shl
pusha
movw
push
shr
cmc
test
stc
or
pusha
xor
pushf
call
mov
pushl
push
mov
mov
mov
call
sub
pushf
mov
push
call
mov
call
pushf
lea
jne
sar
mov
bt
and
cmp
test
stc
cmp
call
sub
pushf
pusha
lea
jmp
cmc
not
call
rdtsc
sar
call
shr
shld
mov
btc
mov
bt
bt
cmc
call
aaa
btr
lahf
test
mov
cmc
cmp
add
bt
stc
pushf
sub
jmp
mov
pusha
mov
movw
pushf
push
mov
movl
call
pushl
movb
mov
jmp
pusha
pusha
mov
pushf
pushf
mov
movb
push
lea
jmp
lea
push
rol
jmp
mov
mov
push
pushf
mov
pushf
pusha
lea
jmp
jmp
bswap
mov
mov
jmp
mov
pusha
movb
mov
call
sub
movb
lea
ja
mov
pushf
lea
jmp
repz
popl
pusha
jmp
pushf
popl
jmp
jmp
mov
jmp
call
jmp
pushf
mov
pushf
pusha
lea
jmp
clc
add
cmc
xor
clc
call
cbtw
cmc
stc
stc
jmp
mov
jmp
pushf
add
call
pushf
push
pusha
mov
mov
push
movb
lea
jmp
jmp
jmp
mov
pusha
lea
jmp
movb
sub
jmp
jmp
jmp
pusha
repz
popl
pusha
lea
jae
push
call
mov
movb
call
bsr
clc
movzww
clc
test
push
xor
movb
lea
jns
pusha
cmc
rol
stc
call
mov
pushf
jmp
cmc
cmp
call
mov
cmc
stc
test
movb
add
push
pushl
pusha
pushf
lea
jmp
pusha
bt
pushl
popl
cmc
cmp
cmc
cmc
add
clc
clc
pushl
popf
pushf
pushl
push
lea
jmp
push
repz
popl
jmp
mov
pushl
jmp
pushf
pushl
pushf
popl
push
movb
pushl
popl
pusha
movb
mov
pushf
lea
jmp
clc
add
pusha
jmp
and
mov
and
mov
add
setnp
push
pushl
call
add
pusha
neg
mov
pushf
pusha
inc
pushf
movl
bt
lea
clc
mov
clc
rol
stc
cmc
add
test
jmp
mov
cmc
bt
dec
mov
push
mov
pushl
popf
push
mov
mov
push
lea
jmp
pushf
mov
pushf
call
pushl
mov
push
pushf
movb
mov
call
pushf
mov
pusha
mov
pushl
pushl
lea
jmp
push
pusha
lea
ja
aad
shl
mov
push
lea
shl
xchg
cmc
sub
shrd
pusha
rol
add
lea
neg
bsf
or
not
and
pop
and
shl
sub
movsbw
movw
pushl
mov
pushf
pusha
pushf
movsbw
pushf
popl
call
push
lea
jbe
push
mov
push
jmp
stc
add
call
bt
pushf
jmp
mov
pusha
mov
pusha
jmp
daa
mov
pushf
mov
cmc
mov
test
add
pusha
shrd
call
pushl
popl
pushf
lea
jmp
lea
pushf
push
pushl
mov
push
mov
movl
pushf
lea
jmp
movb
mov
jmp
shr
bsf
xor
neg
add
bt
movsbw
not
rol
pushf
dec
and
adc
and
shrd
mov
cmp
push
test
cmp
add
jmp
mov
pusha
pushf
mov
call
push
push
mov
pushl
pushf
mov
mov
lea
jmp
add
add
xor
dec
mov
pushf
cmp
jmp
pushf
lea
je
push
pushf
pushf
xor
pusha
xchg
test
stc
jmp
pushf
pushf
mov
movl
call
mov
mov
movl
pushf
pushl
mov
movb
jmp
cmc
push
pushl
popf
pushf
pushl
push
pushl
ret
jmp
call
mov
call
mov
pusha
pushf
mov
call
pushl
popl
pusha
movw
pushl
push
lea
jmp
push
pushf
pusha
pushf
mov
mov
pushf
call
pushl
popl
movb
pushf
pushf
lea
jmp
lea
jnp
bt
rol
stc
xor
pushf
sub
pushl
push
pusha
pushf
mov
mov
lea
jmp
call
mov
push
pushl
pushf
lea
jmp
mov
pushf
pushl
pushf
pushl
lea
jmp
call
movb
pushf
mov
push
mov
mov
mov
mov
mov
push
mov
pushf
mov
mov
push
push
lea
jmp
sar
mov
shr
btc
shl
add
bsf
or
cmp
not
rcl
cmc
movzbl
cmp
sub
dec
neg
not
add
setns
pushf
not
inc
movzbl
dec
push
mov
pushf
call
call
rcl
sar
daa
pushf
mov
sar
clc
mov
jmp
movzbl
btc
setno
stc
mov
bt
shl
pushf
mov
bt
mov
sub
call
call
xor
clc
sub
push
mov
pusha
movb
lea
jmp
mov
mov
mov
mov
lea
jmp
pushf
mov
pushf
lea
jmp
call
mov
mov
pushl
call
call
call
mov
movb
jmp
call
shld
cmc
shl
mov
bsf
add
mov
sub
test
neg
push
sets
pusha
inc
btc
pop
rol
rcl
pushf
cmp
add
bsr
movzbw
movzbl
pushf
stc
mov
call
rcr
not
mov
pusha
jmp
repz
popl
call
pushf
jmp
pushf
repz
popl
jmp
pusha
jmp
pushf
movb
call
stc
cmc
rol
clc
xor
cmp
mov
test
mov
cwtl
stc
call
rep
cld
cld
shld
call
mov
pushf
push
push
call
mov
mov
pushl
lea
jmp
mov
jmp
pushl
jmp
mov
mov
jmp
mov
not
mov
movzbw
pushf
xchg
clc
xchg
mov
movzbw
mov
btc
clc
not
not
xchg
pushf
mov
lea
cmc
setae
push
rcl
pushl
push
mov
movl
rcr
bts
mov
clc
btr
pusha
not
bswap
jmp
lahf
pusha
pushf
pusha
mov
lea
ja
pushf
push
pusha
mov
jmp
sub
movw
jmp
xchg
clc
jmp
movb
mov
push
pusha
pushf
mov
pushf
pushf
mov
call
pushf
test
movb
pusha
neg
pusha
call
pusha
mov
pusha
jmp
not
jmp
lea
jmp
mov
call
jmp
call
mov
bt
call
mov
pushl
pushf
pushl
mov
jmp
pushl
popl
movb
push
pushl
lea
jmp
pusha
mov
pushf
mov
movl
push
mov
pushf
mov
push
push
pushf
lea
jmp
call
lea
call
sub
pushf
jmp
mov
movb
mov
mov
pushf
lea
jmp
cwtl
shl
aad
shl
mov
test
push
btc
mov
call
and
movzbl
call
movl
pushf
mov
pushf
pushl
ret
test
push
mov
clc
pushf
jmp
push
call
mov
push
jmp
mov
mov
movb
pusha
lea
jmp
mov
pushf
mov
pusha
pushf
mov
jmp
mov
mov
push
lea
jmp
pushf
mov
push
mov
movb
lea
jmp
clc
bt
call
or
call
push
movb
repz
popl
call
push
mov
repz
popl
mov
mov
push
mov
pushf
mov
pusha
call
xor
jmp
call
mov
pushf
mov
movb
push
lea
jmp
popl
push
pushf
pushf
lea
jmp
pushf
movb
pushf
mov
mov
pushl
mov
pushf
pushf
popl
pushf
jmp
movw
mov
mov
pushf
mov
lea
jmp
push
push
rol
bt
jmp
call
pusha
movl
pushl
pushl
popl
pushf
lea
jmp
call
pushf
popl
pusha
lea
jp
pushf
pusha
pushl
popl
pushf
lea
jmp
ror
mov
pusha
call
bswap
mov
call
sub
push
pushf
shr
pusha
mov
mov
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
mov
movb
pushl
mov
mov
jmp
pushl
mov
pusha
pushf
mov
movb
pusha
mov
call
push
pushl
movw
mov
jmp
pushf
pushf
mov
pushl
movb
pushl
pushf
mov
jmp
pusha
jmp
bsr
cmp
mov
bt
cmc
bt
add
pusha
pusha
jmp
repz
popl
push
push
push
pushl
mov
mov
push
call
mov
pusha
mov
mov
lea
jmp
inc
btr
test
daa
mov
pushf
adc
mov
clc
movb
sub
mov
shl
push
mov
call
call
pushf
mov
mov
jmp
mov
movb
mov
mov
mov
lea
jmp
movw
sub
bt
pushl
cmc
mov
push
call
jmp
pushf
call
aad
lea
call
jmp
pushf
pushl
pushf
popl
movb
jmp
call
movw
mov
pushf
movb
pushf
pushf
lea
jmp
cmc
rol
call
stc
cwtl
rol
bt
mov
cmc
clc
cmc
stc
sub
pusha
movb
pushl
jmp
pushl
mov
movw
pushf
pushf
mov
lea
jmp
clc
sub
stc
stc
call
sub
xor
add
cmc
clc
bsr
mov
pusha
bt
add
pushf
jmp
bsr
clc
clc
mov
cmc
sar
mov
pusha
call
call
call
call
pushf
pushl
mov
pushf
push
mov
lea
jmp
pusha
mov
push
pushf
push
push
pushf
popl
lea
jae
pusha
pushl
popl
mov
lea
jmp
jmp
mov
call
seta
mov
sub
shr
mov
pusha
add
jnp
clc
clc
add
call
mov
movl
pushl
popl
mov
push
movb
movb
lea
jmp
mov
mov
pushl
lea
jmp
inc
pushf
push
push
pushl
lea
jmp
pushf
mov
push
mov
call
pusha
movw
pusha
mov
push
pushl
push
lea
jmp
push
pushf
jmp
mov
jmp
movw
push
mov
push
call
jmp
test
aaa
notl
sar
lahf
jmp
pushf
popl
movb
pushf
pusha
pushl
pushl
popl
mov
mov
pushl
pushf
lea
jmp
push
movl
mov
pushf
jmp
jmp
pushf
pushf
jmp
test
pushf
cwtl
movl
sub
jmp
jmp
push
jmp
and
push
pushf
pushf
jmp
xchg
mov
not
lea
jmp
pusha
pushl
pushf
repz
popl
jmp
pushl
jmp
pushf
pusha
inc
call
mov
call
pushf
jmp
cwtl
push
bt
jmp
xor
inc
cmp
mov
jmp
call
lahf
aaa
clc
shl
mov
ror
pop
cwtl
clc
pop
dec
sub
shl
neg
pop
movsbw
add
call
call
shr
mov
push
xor
bt
pushf
rol
clc
lea
jne
not
stc
bt
rol
bt
cmp
cmc
bt
xor
push
clc
pusha
movb
cwtl
stc
bt
pusha
pushl
sub
cmp
push
pushf
mov
cmp
test
mov
movw
sub
mov
mov
lea
jmp
mov
jmp
push
push
mov
pushf
mov
pusha
lea
jmp
mov
push
call
call
shl
jmp
mov
movw
jmp
call
pusha
call
add
test
test
cbtw
jmp
seto
adc
mov
add
mov
cmp
cmp
call
call
inc
jmp
pushf
call
call
mov
jmp
push
call
mov
pushf
jmp
pusha
bts
add
jmp
jmp
call
mov
push
call
movb
jmp
movw
mov
jmp
movzbw
aad
btr
bt
mov
pushf
cmc
mov
adc
shl
mov
jmp
call
lea
push
pusha
mov
pushf
push
lea
jmp
push
add
pushf
cmp
call
jmp
pushf
pushf
mov
mov
movb
lea
jmp
push
pushf
pushf
push
mov
movl
pusha
mov
mov
push
call
jmp
call
movb
mov
push
mov
pushf
mov
pusha
pushf
push
movb
lea
jmp
jne
push
repz
popl
pushf
mov
mov
mov
pusha
pushf
jmp
mov
push
call
pusha
cmc
not
cmc
not
clc
bt
and
jmp
bsr
mov
stc
add
pusha
pushf
lea
jmp
call
call
mov
call
call
lea
jno
pushf
mov
pusha
push
lea
jmp
mov
lea
jno
pushf
mov
pushf
pusha
mov
push
push
pushl
movb
lea
jmp
cbtw
stc
cwtl
stc
sub
call
inc
pushf
mov
push
push
pushl
ret
bt
sub
push
pushl
mov
mov
call
clc
pushf
not
call
pushl
pushl
mov
movb
movb
movw
pushf
lea
jmp
push
jmp
jmp
push
shl
neg
rcr
mov
sar
and
btc
mov
clc
movl
add
pushf
pusha
mov
mov
mov
movw
lea
jmp
mov
inc
bt
rol
bt
bt
pusha
mov
add
clc
mov
jmp
pushf
mov
push
lea
jmp
call
pusha
repz
popl
call
push
mov
pusha
pushf
popl
pusha
pushl
popl
mov
pushl
lea
jmp
clc
jmp
sub
pushf
cmc
pusha
cmp
add
call
pusha
pushf
mov
jmp
push
mov
movb
pusha
jmp
pushf
pusha
mov
pushl
movb
mov
mov
lea
jmp
mov
mov
pushl
ret
mov
mov
movw
mov
movb
lea
jmp
mov
pushf
mov
pusha
movb
jmp
mov
call
jmp
pusha
test
cmc
shr
pushf
movb
mov
jmp
mov
movw
mov
lea
jmp
sub
cmp
pushf
cmp
shr
jmp
bt
pushf
clc
shl
call
jmp
pusha
jmp
call
test
push
cmc
not
bt
push
clc
sub
pusha
mov
stc
push
and
movb
mov
pushf
pushf
popl
pushf
push
movb
pushf
pushl
popl
pushf
lea
jmp
movb
pushl
popl
pushf
pushf
movb
mov
lea
jmp
add
push
pushf
pushf
popl
call
call
jmp
call
call
jmp
clc
add
pushf
mov
call
pushl
mov
mov
jmp
lahf
mov
shl
mov
push
add
mov
call
push
mov
lea
jne
clc
call
movb
inc
call
call
xchg
mov
add
insl
add
int3
insl
add
insl
add
mov
insl
add
insl
add
ret
sarl
insl
add
mov
add
stos
insl
add
ret
ror
add
mov
add
insl
add
insl
add
insl
add
mov
add
mov
add
mov
insl
add
int
add
int
add
insl
add
scas
insl
add
ret
push
mov
insl
add
int3
insl
add
ret
repnz
insl
add
insl
add
mov
insl
add
mov
insl
add
int3
insl
add
insl
add
ret
subb
add
mov
insl
add
insl
add
mov
insl
add
stos
insl
add
insl
add
mov
add
mov
add
mov
insl
add
int
add
int
add
ret
xchg
insl
add
insl
add
insl
add
add
mov
insl
add
mov
add
insl
add
lret
sbb
insl
add
mov
insl
add
insl
add
mov
insl
add
mov
insl
add
mov
insl
add
scas
insl
add
mov
add
mov
add
mov
insl
add
int
add
mov
insl
add
add
shrl
int3
insl
add
mov
insl
add
insl
add
insl
add
insl
add
mov
add
insl
add
insl
add
insl
add
int3
insl
add
mov
insl
add
insl
add
mov
insl
add
insl
add
int3
insl
add
stos
insl
add
mov
add
mov
add
test
add
int
add
int
add
mov
insl
add
scas
insl
add
stos
insl
add
ret
push
lret
push
mov
insl
add
mov
add
mov
add
insl
add
insl
add
shrl
mov
add
int3
insl
add
mov
insl
add
mov
insl
add
mov
add
mov
add
mov
insl
add
int
add
int
add
insl
add
insl
add
mov
insl
add
mov
insl
add
test
insl
add
test
add
ret
sarl
insl
add
scas
insl
add
insl
add
mov
insl
add
insl
add
insl
add
int3
insl
add
insl
add
mov
insl
add
mov
add
mov
insl
add
int
add
int
add
insl
add
insl
add
stos
insl
add
insl
add
mov
insl
add
shrl
stos
insl
add
int3
insl
add
mov
insl
add
mov
insl
add
stos
insl
add
insl
add
mov
insl
add
test
insl
add
insl
add
test
insl
add
mov
add
mov
add
test
insl
add
int
add
insl
add
insl
add
scas
insl
add
insl
add
insl
add
stos
insl
add
insl
add
lds
or
insl
add
mov
add
stos
insl
add
stos
insl
add
mov
insl
add
insl
add
insl
add
insl
add
insl
add
ret
loope
insl
add
mov
insl
add
mov
add
test
add
mov
add
int
add
int
add
ret
loopne
insl
add
ret
lock
call
pushf
pushl
popl
push
pushf
pushl
lea
jmp
decl
jmp
call
jmp
sub
mov
mov
push
lea
jmp
lea
jb
pusha
pushl
mov
call
pusha
mov
push
movb
pushf
pushl
lea
jmp
mov
pushf
movb
lea
jmp
jmp
call
pushf
mov
call
jmp
pushl
pushl
popl
push
movb
pusha
pushl
lea
jmp
mov
jmp
add
cmc
clc
bt
shld
jmp
btr
shld
mov
rol
pusha
sub
bsf
btc
movzbw
not
bts
sub
rcr
xor
inc
inc
mov
sub
shrd
inc
push
ror
mov
cmp
cmc
add
call
add
lea
jg
push
movw
push
mov
pushf
pusha
push
pushf
lea
jmp
call
mov
pushl
pushl
pushf
lea
jmp
pushf
mov
call
movb
movzbl
cmc
stc
add
jne
add
jb
bt
cmc
neg
pushf
inc
movb
inc
clc
cmc
cmc
push
rol
pusha
clc
bt
jmp
pushf
divl
pushf
mov
jmp
inc
pushf
inc
bt
rol
jmp
xor
mov
xchg
pusha
movb
lea
js
push
movl
jl
push
pusha
mov
pushf
pushf
pushl
ret
pushf
pushl
mov
jmp
pusha
pushl
lea
jne
setbe
rcr
adc
sub
xorb
lea
movzbl
pusha
bswap
mov
pusha
push
pushf
pushf
lea
jmp
call
jmp
push
xor
push
dec
bt
sub
jg
pusha
neg
call
pushl
repz
popl
movw
mov
movl
push
pusha
call
pushf
mov
mov
pushf
pushf
mov
call
movb
pushf
push
repz
popl
mov
mov
pushf
jmp
pushf
popl
pushl
call
lea
jne
pushf
mov
pushf
movw
pushf
popl
movw
pushf
movb
pushl
popl
pusha
pushf
push
lea
jmp
movw
push
pushl
popl
movb
pushf
push
lea
jmp
lahf
shrd
aad
pusha
mov
test
add
pusha
movw
call
jmp
pushf
mov
mov
clc
bt
call
sbb
or
cmp
mov
shr
cmc
mov
bt
jmp
push
call
stc
cmc
add
pushf
push
pushf
call
add
call
pushl
inc
mov
add
jmp
rol
clc
not
stc
push
stc
call
movb
mov
jmp
xor
cmc
clc
sub
push
lea
jb
mov
pusha
push
push
pushf
lea
jmp
pushf
sub
push
jmp
mov
call
pushf
pushl
inc
mov
call
mov
call
inc
call
mov
call
mov
movw
call
jmp
pushf
shrd
xor
rcr
test
push
rcr
add
btr
rol
shl
neg
pushf
and
lea
bts
pushf
mov
cmp
bt
sub
pushf
movw
pushl
mov
pusha
lea
jmp
call
mov
pushf
pushl
mov
mov
jmp
pushf
sub
pushf
add
mov
test
clc
not
pushf
clc
pushl
jmp
lahf
pushf
or
mov
bt
mov
clc
stc
pushl
call
mov
jmp
push
mov
movb
repz
popl
jmp
pushf
inc
pushf
pushl
pushl
lea
jmp
movw
pushf
popl
call
pusha
mov
pushl
popl
pushl
pushf
pushf
lea
jmp
cmp
not
push
cmc
call
jmp
jmp
lea
jae
pusha
pusha
mov
pushf
push
pushf
popl
mov
jmp
