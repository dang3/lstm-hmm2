sbb
add
add
mov
arpl
dec
or
sub
mov
mov
mov
push
mov
cmp
or
outsl
shrl
mov
xor
shrb
inc
cmpsb
jo
aad
shlb
pop
es
sti
movsl
cmp
pavgb
and
popa
mov
iret
pop
pop
or
bound
test
inc
lret
mov
lods
jae
sahf
aad
in
mov
adc
cmp
fsubrs
lret
mov
rcrl
push
add
and
out
xchg
adc
mov
adc
or
jmp
cmp
leave
mov
cs
cmp
xlat
cmp
and
fimull
std
ret
mov
xchg
stos
mov
adc
xchg
pop
jno
sub
pop
inc
sbb
insb
fisttpl
pop
jo
fmul
arpl
mov
mov
scas
jge
aaa
mov
daa
xchg
push
sbb
jmp
inc
mov
adc
sub
inc
push
lcall
or
xchg
loop
jge
iret
push
hlt
xor
rcl
mov
pop
shlb
rep
mov
xchg
push
pop
mov
les
mov
pushf
mov
cli
adc
lahf
andl
in
pop
mov
cwtl
push
popf
cltd
cmc
xor
xchg
aas
sbb
mov
mov
sbb
addr16
cmp
cmp
lock
or
inc
bound
xlat
mov
pop
dec
push
sbb
push
cmpsb
leave
ss
adc
cmp
mov
adc
push
daa
dec
cs
out
inc
xor
loope
xchg
inc
lret
cmpl
jp
call
pop
fmuls
and
fs
idivb
in
xor
sub
lods
rcrl
repnz
push
js
lret
sahf
cli
in
cmp
inc
mov
loopne
mov
sti
xor
sahf
test
int3
insb
jg
idiv
mov
pusha
fldl
jo
out
lret
scas
fstp
cmpsl
jno
movsb
mov
cmp
cld
pop
dec
mov
repnz
or
loope
and
and
rorb
faddl
pop
mov
stc
sbb
xor
out
xlat
push
insl
ljmp
push
negl
push
adc
inc
in
and
filds
xor
sub
add
fistps
sbb
cmpsb
das
xchg
jle
aad
push
lock
mov
gs
test
push
fldenv
imul
std
out
push
mov
xor
cmp
and
shll
lret
mov
pop
xchg
jbe
jo
data16
lret
mov
jmp
lahf
pop
sbb
loopne
cmp
lock
xor
into
iret
dec
xchg
fdiv
movsl
stos
mov
repnz
enter
stc
mov
leave
xorl
cmp
outsb
cmpsl
cmc
push
sub
dec
fst
or
mov
mov
imul
mov
sub
push
bound
pop
jecxz
sahf
inc
cmp
cmpsb
andb
popf
push
add
movsb
or
insl
and
mov
in
and
mov
push
push
xor
fcoms
xor
push
push
xor
iretw
push
add
pop
mov
test
mov
cmc
shll
dec
hlt
jge
push
ss
or
and
flds
fnstsw
rcrl
cmp
mull
sub
cmp
cmp
or
ret
out
call
xchg
movsl
adc
or
hlt
aam
rcrb
push
jmp
cmp
cmp
test
aam
mov
clc
inc
pushf
shrl
out
leave
xor
in
aas
cmp
mov
mov
insb
xchg
jno
insb
and
rorb
xchg
mov
pusha
mov
test
mov
dec
or
mov
repz
ljmp
movsb
ja
ds
mov
fisttpl
lods
mov
fxch
mov
inc
cmpsb
adc
mov
subb
out
mov
icebp
int
and
iret
and
dec
pusha
gs
xchg
lret
push
ror
dec
cmpsb
testb
push
outsb
outsb
sahf
ficompl
xchg
and
mov
xchg
lret
mov
iret
mov
fldenv
imul
adc
add
add
bound
out
or
leave
stos
xor
mov
push
aas
xchg
rolb
fcoml
stos
push
les
lahf
push
inc
xor
xor
and
or
xchg
dec
lock
jge
mov
fsubl
shr
pop
adc
sub
mov
shrl
jmp
inc
insb
movsb
sub
and
ljmp
mov
jmp
fnstcw
push
pop
fdivl
dec
mov
adc
popl
je
test
imul
ret
cmp
mov
rcr
or
iret
jl
test
fisubrl
inc
xchg
shlb
pop
and
add
stos
xchg
inc
mov
or
sub
or
clc
int3
and
test
leave
nop
or
add
jmp
aas
aad
mov
ja
xchg
testl
dec
adc
or
aaa
cld
push
xchg
je
and
dec
outsl
aad
mov
outsb
push
cmpsl
dec
clc
sbb
subl
mov
ss
fcmovu
hlt
push
mov
aam
dec
and
outsb
inc
loopne
fidivs
mov
outsb
jae
sbb
ds
aaa
outsl
cmp
subb
lcall
mov
xor
cmp
inc
sub
pop
cld
popf
push
pop
push
cmp
cmp
loope
gs
out
mov
ss
sbb
jbe
add
arpl
fldcw
mov
jo
and
push
push
xchg
lea
int3
in
loopne
std
or
movsb
test
cwtl
sub
mov
inc
fwait
roll
inc
cmpsl
push
insb
push
repz
popa
mov
outsl
push
add
dec
nop
lods
shlb
pop
icebp
cmpsb
mov
lahf
mov
nop
imul
mov
movb
call
sbb
shlb
icebp
std
negl
lret
sub
mov
movsl
and
xor
adc
outsl
dec
in
adc
pusha
cld
xchg
push
out
testl
insl
mov
subl
adc
xor
insl
hlt
testb
mov
data16
adc
push
and
insl
dec
sub
mov
mov
cmp
imul
pop
xor
push
insl
push
subb
stos
lret
imul
fwait
gs
loop
fiaddl
mov
cli
add
ljmp
mov
push
push
jns
jg
fs
adc
jo
sub
push
jnp
fimull
popa
clc
int3
icebp
hlt
fsubr
dec
xchg
xlat
pop
mov
int3
orb
cmp
mov
mov
in
pop
arpl
neg
cmp
mov
jbe
inc
ja
rorb
dec
pop
insl
movsl
jmp
scas
dec
icebp
lcall
aas
repnz
adc
ja
mov
adc
pop
xchg
loope
jne
dec
sti
xchg
rcrb
imul
mov
pop
js
cld
pusha
and
movaps
or
fsts
and
adc
lock
sub
push
mov
cltd
push
hlt
aas
cmp
jns
xor
test
test
fs
das
cmpsl
pop
pop
rorl
aas
pop
outsl
sub
outsb
out
inc
sbbl
push
test
out
popa
and
dec
pop
loope
das
cs
push
dec
pop
cmp
in
pop
out
fimuls
loope
stos
mov
sbb
scas
pop
jge
inc
and
xchg
mov
xchg
int3
adc
xchg
fimull
in
add
inc
mull
jge
arpl
dec
imul
mov
neg
lret
lcall
sbb
and
inc
push
push
pop
std
push
mov
lret
mov
or
cwtl
add
cltd
idiv
push
cmpsl
pop
enter
and
mov
mov
inc
scas
sbb
jo
shll
or
dec
das
cmpsl
sub
insb
mov
jmp
cmp
cmpsb
movsb
or
inc
xchg
mov
iret
inc
mov
xor
pop
jne
xchg
js
movsl
sub
into
dec
jmp
cwtl
stos
cmpsl
mov
mov
fists
mov
in
stc
or
push
dec
stc
leave
popa
testl
mov
jecxz
popf
cmp
loopne
repz
mov
movsb
jecxz
pop
mov
test
popf
mov
loope
lahf
lahf
cltd
ret
sub
pop
fsts
add
aas
mov
les
inc
push
loopne
cld
outsb
pop
cmpsl
int
add
mov
push
sub
cmp
inc
cld
int3
inc
push
lret
jb
adc
cld
lods
add
add
push
test
push
inc
out
out
ljmp
icebp
mov
xor
mov
jno
push
sub
cld
shr
ret
mov
repz
cmp
imul
add
leave
jne
inc
cmp
test
fnstcw
or
repnz
dec
pop
mov
ja
fcmovbe
test
enter
insl
pop
repz
pop
mov
movsl
inc
repz
lret
cmp
xor
add
mov
push
or
jne
push
jne
imul
call
fs
or
adc
adc
xlat
fsubrs
mov
cmp
cmpl
mov
xor
dec
adc
xor
jmp
mov
cmp
mov
push
test
jnp
pop
icebp
arpl
xlat
dec
cwtl
stos
fstpl
aas
and
sahf
in
xor
xchg
sub
mov
sub
mov
lret
sub
jecxz
enter
fnstcw
mov
sub
pusha
lock
add
adc
jecxz
cltd
sbb
ficomps
sbb
or
int
sbb
ja
adc
cmp
sbb
iret
xlat
cltd
jmp
and
data16
negl
rcl
mov
test
push
push
and
inc
pop
add
cmc
sub
mov
mov
and
outsb
dec
jne
lods
fcmovnb
cmp
adcl
add
cmp
fisubrl
into
test
and
mov
mov
movsb
outsb
xlat
inc
mov
jae
push
xor
lcall
nop
adc
dec
fwait
push
push
shlb
push
sub
pop
loopne
js
cmpsb
lods
sbb
and
lret
push
xor
xchg
sbb
mov
or
roll
call
sub
dec
inc
push
push
pop
sbb
jl
jge
out
jg
mov
shrl
sub
sahf
and
imul
loope
and
dec
add
fldln2
insb
cmc
jle
xchg
fmuls
xor
xchg
add
pop
jns
gs
push
push
sub
aas
outsb
loop
push
sbb
scas
jbe
flds
stc
sub
sbb
pusha
pushf
mov
data16
loop
push
arpl
fdivl
rclb
js
sbb
int
iret
push
push
scas
and
ss
clc
push
inc
mov
inc
push
fmull
pop
mov
adc
cmp
mov
daa
je
mov
xchg
fsubrs
in
xchg
jle
aaa
jecxz
movsl
cmp
cmp
add
scas
jge
inc
cs
ljmp
jbe
sbb
clc
loopne
lock
dec
orb
in
fwait
mov
xor
mov
dec
sti
sub
pop
mov
movsb
inc
inc
mov
push
hlt
pop
shl
jbe
ja
xchg
movsl
ss
pushf
fadd
push
and
in
xorb
xor
mov
pop
dec
popf
aaa
lds
repnz
cs
cld
das
fldcw
lea
sbb
or
mov
out
xchg
je
adc
popf
push
pop
leave
mov
adc
in
bound
cltd
add
lods
jl
dec
cwtl
fidivrl
mov
inc
loope
and
iret
add
push
push
shlb
or
xchg
dec
dec
xchg
xor
add
add
mov
pop
mov
xchg
add
pop
cmp
bnd
and
xchg
das
lret
into
mov
or
push
mov
je
cmp
scas
lret
stc
or
dec
jl
scas
lret
je
dec
xchg
inc
xor
xchg
shlb
incl
mov
sub
ja
les
mov
inc
or
jle
daa
xor
mov
ljmp
hlt
hlt
lret
arpl
in
es
push
cmpsl
mov
push
and
fistpll
popf
repnz
add
cmp
hlt
insl
andl
icebp
shrb
loope
icebp
test
jg
xchg
into
movb
push
aaa
and
cltd
pop
or
mov
clc
lds
fsubrl
or
inc
cmpsl
pusha
jmp
sub
cmpsl
xchg
imul
cli
sbb
aaa
inc
fmul
mov
and
lahf
inc
lock
sub
inc
in
and
jmp
cs
sub
sbb
aas
aad
loopne
mov
jo
xorb
hlt
mov
movsl
push
jne
sahf
les
mov
ja
mov
cs
loopne
test
nop
enter
sub
out
popl
ret
and
mov
movsb
pusha
inc
and
stos
push
mov
mov
or
dec
jns
insl
cmpsb
push
xchg
fwait
pushf
notb
mov
test
lods
pop
lods
mov
dec
movsl
ret
icebp
lds
loopne
push
adc
pushf
dec
aam
jmp
jnp
sub
mov
rcrl
sub
imul
shr
rclb
push
cmp
mov
int3
sbb
xor
inc
jp
nop
dec
add
test
push
or
es
in
lahf
add
mulb
into
enter
pop
inc
fidivl
mov
insb
jmp
or
fs
adc
xor
jo
sub
fstpt
jne,pn
mov
loop
cmpsl
movl
mov
xor
stos
test
fcoms
das
mov
mov
and
cmp
add
shll
icebp
in
inc
adcb
outsb
fwait
das
inc
add
clc
add
or
add
mov
in
jne
add
faddl
cwtl
xchg
aam
sbb
fcmove
es
cmpsb
push
inc
lock
cmp
popf
mov
mov
data16
jl
lds
sub
adc
shl
test
push
mov
mov
dec
sub
addr16
fisubs
stos
lret
iret
sbb
mov
or
xor
xchg
pop
mov
jb
add
pop
jmp
loopne
lock
int
add
pop
jb
cmpsl
xchg
pop
sub
jbe
mov
pop
sbb
mov
das
fs
imul
mov
rol
mov
mov
subb
jno
outsb
dec
dec
scas
fs
insb
jge
lds
popa
push
sahf
mov
mov
clc
test
push
cmp
sub
fldln2
mov
cmp
test
pop
dec
imul
adc
enter
rolb
ljmp
inc
out
jo
fists
xchg
cmp
sbb
inc
sahf
lret
std
and
mov
pop
icebp
xor
sarb
and
cmp
stos
jmp
mov
das
jle
push
insb
test
inc
or
lods
mov
pop
mov
sbb
adc
imull
jnp
int3
pop
cmp
iret
lea
out
cmc
dec
adc
mov
repnz
cld
loope
cmpsb
mov
adc
inc
inc
addr16
pusha
dec
add
mov
scas
pop
imul
cmp
mov
mov
test
xchg
push
fcmovu
pop
cli
and
enter
jecxz
movsb
sahf
gs
add
lods
insl
popa
aaa
shll
ss
orb
clc
mov
pop
js
sbb
mov
icebp
std
ja
mov
repnz
mov
mov
mov
push
or
mov
scas
push
adc
bound
or
dec
inc
or
int3
mov
sub
cmp
xor
movsl
or
pop
movsb
imul
out
dec
or
rcrb
rcrb
dec
lret
in
dec
icebp
movsb
fisttpl
push
push
push
pop
add
cli
mov
dec
pop
inc
jne
test
cmp
mov
xchg
mov
xor
je
xor
repz
movb
pop
test
push
or
stos
loope
mov
mov
xor
jae
jle
nop
fs
sarb
and
jno
in
popf
pop
mov
add
sarb
fadd
lds
xor
mov
adc
cs
in
pop
xlat
jmp
cwtl
xor
lds
push
lahf
push
cmp
scas
jge
and
jmp
sub
add
xor
xor
and
sub
xorl
jnp
iret
cmpb
mov
outsb
psraw
addr16
adc
mov
inc
push
call
hlt
mov
loopne
and
xchg
inc
pushf
jl
jg
pop
test
clc
jo
and
arpl
inc
in
insb
ja
aam
xchg
mov
lcall
push
lock
ljmp
dec
pusha
push
addr16
or
xchg
lcall
cmp
inc
arpl
mov
mov
add
jmp
jb
call
jb
stc
jg
test
add
xchg
xor
push
mov
mov
test
enter
mull
fistpl
and
and
pop
mov
movb
ret
pop
mov
test
dec
and
sbbb
add
imul
jbe
sahf
mov
fwait
pop
int3
xor
jnp
jp
aam
out
in
or
sbbl
int3
ljmp
mov
mov
mov
popf
pushf
push
rolb
inc
out
cmp
lods
mov
jns
xor
xchg
sub
mov
mov
mov
jo
inc
fsubs
mov
or
in
adc
fbld
mov
inc
repz
cmpsl
js
stos
movsl
idivb
cwtl
lcall
lret
cmc
pop
stos
sti
xchg
jl
lret
scas
psadbw
push
pop
cmpsb
wbinvd
fnstenv
xor
push
adc
mov
mov
add
jnp
jp
jnp
sub
push
adc
lret
fcomip
stos
loop
adc
rclb
lcall
hlt
lret
jg
adc
xor
xor
fsts
into
pop
clc
test
sbb
cwtl
pop
and
rorl
sbb
jg
jne
pop
cwtl
and
mov
les
and
scas
cmpsb
mov
cmpb
add
dec
inc
shll
mov
fs
push
mov
jne
or
fcmovu
pause
pop
ret
cmp
cmp
shrb
lcall
andl
arpl
or
jg
mov
popf
mov
sub
cmp
je
push
mov
je
ja
int3
scas
and
inc
ret
sub
cs
inc
jae
mov
scas
inc
loope
cltd
mov
mov
mov
push
sub
xchg
and
dec
or
inc
jl
arpl
cwtl
ret
jge
jae
mov
adc
mov
cmc
or
cmp
mov
ret
cmp
or
ret
enter
fdivl
mov
and
pop
jns
adc
push
jle
ror
ss
pop
pusha
std
add
or
adc
xchg
fs
js
jbe
push
lret
sub
mov
or
jbe
xchg
adc
push
add
sub
adc
and
and
sbb
cltd
add
shlb
int
pop
test
mov
iret
pop
lds
imul
push
push
ret
mov
call
iret
dec
pop
lcall
xchg
rolb
cmp
lret
inc
hlt
cmpsb
pushw
adc
sub
dec
mov
icebp
jno
dec
add
daa
mov
add
ror
sbb
fildl
or
outsb
mov
loop
insb
shll
pop
or
mov
adc
in
ja
mov
jl
leave
mov
mov
cmpsb
mov
jmp
mov
push
out
mov
inc
or
adc
repnz
pop
lahf
xlat
dec
sbb
test
push
repnz
dec
pop
movsl
hlt
ljmp
js
dec
mov
rorb
std
inc
loope
add
in
xchg
or
mov
jno
xchg
int3
push
sub
shlb
rorb
mov
cmp
mov
fwait
xor
scas
or
adc
lahf
cmpsb
ret
inc
dec
jecxz
fists
lea
xor
mov
or
sbb
daa
aaa
xorl
imulb
inc
xor
ja
cmp
std
inc
add
cmc
xor
or
add
push
push
sub
jo
scas
pop
add
icebp
nop
jne
fucom
xchg
sub
mull
ss
cli
xchg
mov
out
push
add
sbb
jns
mov
xchg
xor
jae
pop
xlat
adc
jae
jo
xor
and
insl
push
adc
jp
rorl
std
test
lea
or
inc
dec
leave
sbb
sbb
insl
lret
inc
mov
push
imul
enter
push
sub
cwtl
sbb
int
pop
ja
cmp
in
sbb
xor
das
mov
stc
mov
xor
fst
or
loopne
xchg
call
popa
dec
js
xor
dec
movsl
stc
inc
push
loope
xchg
jge
inc
enter
shrb
xor
mov
mov
jns
pop
sbb
clc
add
xchg
bound
jl
xor
mov
js
cmc
xor
ljmp
cwtl
lret
arpl
mov
cmp
sub
int
orl
lock
adc
lods
sbb
or
cld
mov
xchg
cli
mov
mov
outsb
cs
lret
gs
lea
lcall
pusha
out
jmp
jmp
mov
or
les
mov
movsb
sbb
add
jb
fstpt
out
pop
add
pop
xlat
pop
sub
mov
inc
testl
ret
mov
cmpsb
add
pop
pushf
pop
adc
inc
cmp
incl
pop
and
or
mov
cwtl
icebp
mov
cltd
adc
mov
mov
data16
scas
jle
or
adc
xor
cmc
xor
or
cmp
out
in
out
cmc
out
push
sarl
movsb
push
push
jp
push
sbb
push
movsl
movsl
adc
add
scas
lods
cmp
or
cld
loope
and
adc
daa
pushf
cmp
into
inc
dec
mov
lods
dec
je
gs
fisubrl
addr16
mov
xchg
or
das
je
sarb
fcoms
sbb
sar
inc
cs
jne
xlat
cmp
test
mov
aas
leave
lods
lcall
push
push
das
cwtl
shrb
fbld
xchg
ret
pop
or
mov
push
cmp
xchg
fisubs
dec
sbb
stos
movsb
cmp
sub
cmpsl
fcom
adc
or
jl
arpl
mov
aad
mov
lret
mov
fisubrl
xchg
sbb
inc
inc
ficoms
or
incl
adc
shrb
int3
add
sbb
sbb
mov
fldcw
sbb
push
hlt
mov
sub
cltd
loop
into
or
push
inc
inc
sub
jnp
jo
out
xor
or
mov
std
sub
rolb
and
in
xchg
cli
and
scas
lret
push
adc
push
inc
pop
popa
jno
mov
push
scas
xchg
push
ja
inc
lock
sti
frstor
leave
inc
stos
adc
mov
mov
push
test
popa
and
outsb
push
in
mov
aam
add
rorb
fwait
xor
pushf
jo
mov
mov
cmpsl
imul
jmp
lods
ljmp
sub
insl
mov
or
inc
xchg
mov
xor
xor
push
cld
or
or
aas
xor
mov
cwtl
or
cmp
cmpsl
pop
push
out
out
inc
out
fs
dec
je
ja
inc
ss
mov
or
push
mov
sbb
mov
je
mov
in
rol
pop
stos
adc
imul
mov
daa
mov
jle
rol
mov
xor
cmpsb
jbe
jp
jle
lods
les
pushf
jnp
mov
dec
jb
cmp
pop
cli
arpl
ds
inc
jns
mov
imul
pop
cmp
push
xchg
push
leave
push
push
inc
insl
in
cwtl
popa
fidivrl
imul
mov
inc
rcrl
inc
xchg
add
jne
loopne
xchg
inc
xlat
int
lods
dec
sahf
mov
add
outsb
dec
mov
jo
inc
sarb
xchg
mov
sbb
rcrb
hlt
adc
xor
icebp
mov
repnz
dec
aam
lds
lahf
stos
cld
insb
les
aam
mov
mov
jge
xor
inc
jb
fldl
xchg
in
in
inc
lcall
insl
shl
jo
or
xor
popa
mov
inc
jo
cmp
mov
sbb
dec
je
aaa
dec
mov
lcall
mov
inc
xchg
mov
sub
and
fdivp
mov
mov
int3
cmp
jb
shrb
and
popf
jp
sub
aad
pop
xor
xchg
test
subb
cmp
out
dec
mov
subl
in
outsb
fmull
insl
cmp
out
dec
cmpsl
aad
mov
sub
xor
pop
xor
mov
lds
fidivrl
pop
int3
int
add
lret
fidivs
dec
pop
cmp
rorb
repz
add
enter
ja
jbe
out
in
dec
jecxz
sbb
sub
pop
icebp
pushf
jl
inc
lcall
xchg
mov
mov
mov
add
inc
ret
dec
popa
imul
cmp
pop
dec
push
inc
cmp
pop
es
push
setp
add
push
xchg
lret
xor
popl
dec
pop
in
nop
cmp
mov
xchg
mov
lret
frstor
or
lret
ss
sub
out
mov
and
stos
hlt
push
aam
sbb
outsb
sub
sbb
into
cmc
out
repnz
mov
inc
lret
inc
and
push
xor
add
aas
dec
mov
pop
scas
dec
in
mov
jp
pusha
jmp
sbb
loope
xor
pop
jge
in
sbb
lahf
lret
test
mov
cmp
xor
mov
or
mov
adc
add
mov
push
shlb
hlt
std
and
pop
cmp
dec
and
jb
pop
jecxz
in
cli
imul
mov
lods
mov
mov
stc
xchg
push
or
call
sbb
pusha
aaa
jmp
aam
and
or
cs
push
lret
mov
jle
rorl
fldl
andl
sarl
adc
movsb
popa
mov
test
add
add
pop
js
lret
xchg
dec
scas
daa
das
int3
jns
aas
outsl
aaa
jg
mov
in
pop
loopne
xchg
andb
xchg
lahf
shrl
mov
into
xorb
cmc
pusha
cmp
pop
jnp
cmpsl
add
or
out
in
and
push
test
lcall
imul
pop
nop
fnstenv
outsb
in
stos
imul
shlb
pushl
mov
jne
stc
pop
dec
icebp
sbb
repnz
xchg
movsb
mov
cmp
aaa
sbb
outsb
lock
out
addr16
fisubs
cmp
shlb
es
stc
add
xorl
inc
jns
and
push
push
mov
cs
and
adc
xchg
aad
and
in
cwtl
pop
xor
iret
inc
mov
add
pop
inc
xchg
int
orl
adc
loopne
es
and
call
xor
mov
sub
testl
loop
sub
mov
jns
push
imull
pop
pop
cli
pop
fsts
sbb
and
cmp
out
outsl
dec
adc
shll
jae
cmc
addr16
or
dec
cmc
lcall
cmp
mov
inc
push
sub
and
adc
scas
pop
mov
cmpsl
push
inc
adc
push
mov
loop
lcall
daa
shll
jnp
push
test
cmp
pop
adc
orb
into
scas
sbb
jne,pn
arpl
movsb
fistl
jle
bound
inc
dec
cs
sub
imul
gs
mov
orl
sti
aad
cmpsl
repnz
imul
sbb
jae
outsb
pop
das
imul
sub
popf
andb
jbe
xchg
cmpsl
sbb
es
aaa
cmpsl
out
lock
mov
cmp
mov
mov
shll
jno
sbb
in
cmp
loop
in
imul
outsb
mov
pop
sahf
sahf
cmpsl
adc
lret
and
lock
rorb
mov
xlat
dec
call
xchg
sbb
push
xor
es
sahf
aaa
stc
push
pop
hlt
fldenv
fsub
xchg
ror
mov
jno
pusha
rolb
popa
cmp
xchg
fidivs
cmp
push
mov
pop
inc
cli
fstl
or
call
loopne
xorb
fdivrl
push
ds
data16
jbe
popa
out
pop
lods
inc
sub
mov
fsts
pop
je
xchg
dec
inc
leave
push
push
or
cmc
jp
daa
test
fidivl
cltd
sub
repz
xor
inc
push
pop
xor
jae
ret
fmuls
mov
shrb
les
push
mov
rolb
xchg
leave
lcall
mov
out
sbb
xchg
dec
test
xchg
and
jnp
ret
dec
rol
jecxz
jns
jmp
loop
jl
mov
in
hlt
add
out
dec
loop
adc
shrl
mov
les
out
test
xor
fcoms
cld
insl
adc
arpl
cmp
test
aas
jmp
cmpsl
pop
and
movsl
xchg
enter
push
sbb
mov
xchg
cmpsl
pop
pusha
push
mov
lods
xchg
and
jo
arpl
or
inc
and
mov
cmpsl
lea
ret
push
xchg
sub
cmp
push
add
pop
addb
test
cmp
imul
pop
xchg
sti
sub
mov
sbb
push
cli
sub
xor
adc
xchg
push
jo
in
insb
xchg
xor
jmp
pop
sbb
xor
cmpsl
pusha
inc
lods
fists
add
mov
lods
push
out
push
jmp
lods
imul
testl
cmpsl
cmpsb
or
cmp
inc
and
xchg
xor
mov
dec
ja
sub
mov
mov
stc
jo
xchg
lea
mov
jecxz
sbb
or
gs
loopne
pop
pop
add
mov
and
out
in
xor
cmp
or
add
xchg
jbe
sub
bound
sahf
ficompl
cmc
mov
cmp
xchg
mov
sarb
pop
mov
adc
mov
mov
cmpsb
in
hlt
mov
leave
mov
subb
cmp
xchg
cmp
mov
scas
push
jb
pop
bound
int3
ds
fisubrl
js
mov
jle
notl
push
push
popa
repz
lock
test
xchg
pop
sub
aad
adc
inc
adc
shll
jo
pop
and
pop
test
out
xchg
sahf
dec
cmp
pop
dec
mov
mov
pop
ficomps
fldenv
je
lods
cmp
fld
int
mov
cltd
sub
lret
push
in
or
lahf
mov
jno
mov
xchg
xor
rcrb
xor
js
xor
out
fsubs
xor
push
and
filds
pop
mov
gs
cmp
push
cmp
cltd
jo
data16
fiadds
xor
pop
fsubs
jo
add
xchg
loop
mov
sarb
mov
sub
pop
cmp
fadd
pop
push
push
movsb
dec
sbb
in
test
scas
pop
jmp
mov
mov
and
sub
and
adc
mov
ret
mov
and
mov
mov
add
push
mov
add
or
into
hlt
pop
jnp
dec
sub
mul
cmp
jns
cmpl
cmp
adc
pop
mov
cltd
icebp
mov
test
sahf
xor
add
movd
shlb
sti
mov
inc
aaa
cmpsl
fcmovne
dec
cmp
pop
jp
dec
push
dec
pop
dec
and
daa
jne
jmp
loop
insb
ror
aas
negl
and
mov
popa
andl
dec
nop
mov
les
in
lret
xchg
mov
movsl
add
in
int
inc
cmpsl
jle
inc
mov
popa
out
shr
pop
arpl
icebp
aam
sub
ljmp
pushf
push
lds
cmp
out
sti
out
in
mov
cmp
jo
cmpsb
and
jae
lods
cmpb
popf
jns
inc
insb
sbb
xor
push
dec
decb
dec
push
dec
xchg
adc
jae
cmpl
div
dec
jp
movsb
ficoml
push
nop
hlt
jnp
dec
xchg
jnp
jmp
hlt
pusha
repz
out
mov
dec
xchg
pop
imul
pusha
xchg
dec
and
pop
cmp
sub
stc
jnp
ja
cmp
mov
mov
sub
push
cmpsl
xchg
int3
sub
leave
add
fildll
outsb
les
adc
push
jge
arpl
and
mov
sub
loopne
insb
xchg
add
hlt
dec
mov
lea
fistps
push
jge
fcompl
repnz
mov
dec
mov
mul
add
mov
mov
fsubrl
sbb
repnz
stos
adc
jg
adc
scas
imul
mov
add
in
call
lods
pop
push
lods
imul
push
push
push
jmp
or
xchg
stos
lahf
scas
sarb
sub
sahf
rcrb
nop
xchg
fpatan
mov
push
js
jmp
addr16
fists
cli
loope
add
push
movsl
xchg
mov
dec
mov
fdiv
lods
mov
sbb
loope
scas
sbb
xor
jge
pop
std
stos
dec
and
mov
push
jb
jp
and
xchg
cmpsl
popf
cwtl
rolb
rdtsc
sarl
or
mov
and
add
xlat
jle
popa
cmp
loopne
xor
aaa
sub
lods
aas
fbstp
in
insl
pop
cld
out
push
js
addr16
lret
addr16
stc
mov
pop
mov
sbb
pushw
in
icebp
pop
mov
leave
clc
dec
adc
push
adc
cmp
adc
out
aaa
push
sub
jg
cli
imul
es
scas
lret
icebp
mov
imul
sbb
or
nop
mov
rcrl
das
les
arpl
pop
loop
rolb
sbb
lahf
pop
sarl
dec
popf
lret
and
sub
xor
stos
outsl
adc
cltd
jno
out
decl
fs
jmp
pop
pop
in
aam
pop
mov
aas
out
push
sbb
push
fiadds
out
or
cmp
mov
out
stos
sysret
add
add
mov
push
and
mov
cmpsl
movb
add
imul
cmp
loope
call
popf
mov
sahf
stos
adc
shlb
or
sub
sti
mov
pop
cmpsb
sahf
movsl
add
jl
icebp
das
xchg
clc
movsl
xchg
inc
mov
pop
pop
dec
loop
xchg
mov
shlb
cmp
cld
push
jge
mov
scas
mov
push
rol
xchg
pop
subl
or
xchg
shl
mov
xor
bound
mov
ja
repnz
add
mov
push
cmp
inc
test
push
lods
mov
imul
rorl
lret
in
out
or
sub
pop
rclb
fwait
mov
jb
and
int
dec
pop
inc
scas
xorb
and
lods
ljmp
and
inc
push
dec
sbb
aas
sbb
and
loope
push
gs
cld
cmp
or
dec
inc
mov
pop
jmp
in
add
movsl
fisttpl
xor
mov
rcrl
sarb
mov
sahf
rorl
xchg
add
cld
lock
ja
inc
xchg
add
sub
xor
jae
jns
mov
or
iret
popa
into
gs
pop
or
inc
aam
stc
loop
push
xchg
push
and
jge
addr16
cmp
cld
cs
outsl
sub
or
mov
data16
addr16
pop
out
sub
lock
jo
fcmovne
fisttps
jp
clc
mov
cmpl
or
or
std
xor
punpcklwd
xchg
jp
dec
dec
jp
icebp
jmp
xchg
mov
subb
inc
fsubrl
pop
mov
mov
sbb
dec
pop
inc
mov
jmp
enter
cld
insl
push
push
jecxz
cmp
dec
scas
cld
xchg
or
data16
sbb
xor
pop
fwait
inc
addb
sbbb
pop
sbb
adc
sub
in
loopne
aam
lcall
dec
dec
test
dec
add
popf
pop
lea
inc
adc
pusha
pop
xchg
popf
or
lods
insl
ss
mov
pop
iret
xor
iret
push
out
dec
sub
inc
test
repz
mov
adc
pop
shr
jne
adc
dec
clc
xor
mov
sbb
sub
push
fisttpl
or
addl
xor
add
jp
jae
andl
mov
cs
aam
pop
cmp
mov
fs
jo
lea
imull
sub
in
push
cmp
cmpsl
cs
push
movsb
xchg
push
sub
add
or
aad
pusha
mov
mov
xor
iret
mov
lahf
mov
lods
dec
cmc
cmpl
cwtl
rep
sbb
add
add
cmpsb
cli
xchg
lea
into
pushl
sbb
enter
adc
pop
ja
cld
mov
xor
cwtl
clc
int3
lcall
hlt
push
stos
mov
or
or
mov
adc
xchg
ret
jl
xchg
cmp
jnp
mov
jge
scas
or
cmp
lea
aaa
xchg
mov
mov
sbb
or
movsb
or
push
lea
pop
jb
or
rolb
js
mov
xchg
pushf
ret
jp
jp
mov
dec
fistl
cmp
bound
repz
call
xor
sub
pop
dec
cmc
jae
mov
stos
lret
gs
mov
dec
mov
mov
scas
push
sub
sub
push
movsl
cmp
in
lock
je
or
mov
in
fwait
shlb
incb
sub
adc
jns
les
fldenv
adc
add
ss
adc
out
ret
mov
mov
cmc
xorl
or
ret
jns
cli
sarl
sbb
dec
nop
cmpsl
out
adc
xchg
repnz
push
push
and
add
and
ljmp
mov
sbb
fisubs
sub
pop
test
das
mov
pop
and
mov
movsl
dec
pop
cltd
mov
outsl
jge
sub
xor
jnp
lret
stc
dec
fisubrs
inc
fisubrs
pop
lret
roll
add
test
frndint
pop
dec
outsb
test
call
orb
lods
mov
or
popf
pop
in
loopne
sub
test
sub
jne
push
xor
mov
fisttpll
scas
ljmp
cld
jge
in
nop
bound
sbb
mov
cmp
xor
fildl
scas
mov
scas
iret
out
sbb
idivb
daa
into
stos
xchg
adc
out
mov
pop
in
es
inc
daa
jle
scas
xchg
std
mov
mov
pop
dec
icebp
scas
data16
inc
pop
scas
loopne
test
mov
hlt
push
in
iret
outsl
ljmp
pop
imul
outsb
imul
xchg
stos
fadds
adc
enter
je
div
sub
cld
pusha
mov
xchg
rclb
pop
fs
push
add
jns
cmp
sbb
inc
sub
xchg
cltd
es
sbb
mov
lods
mov
mov
shrl
cmp
sbb
rorl
test
scas
jmp
outsb
or
push
xchg
mov
and
push
daa
xchg
cmp
test
pop
lods
xor
jae
aad
sar
cli
pop
leave
xchg
xor
mov
call
loopne
cmp
jmp
lcall
mov
mov
jno
or
push
jl
xchg
add
stos
mov
pop
lahf
arpl
test
insl
movsl
mov
std
jnp
jns
add
ds
iret
and
mov
test
add
inc
insl
push
ret
xchg
loope
and
mov
mov
adc
add
fiadds
add
shll
mov
inc
lcall
cmp
and
lea
aaa
scas
popa
testb
jl
adc
jp
pop
mov
lahf
out
inc
or
or
int3
testb
pop
and
test
mov
outsb
xor
out
inc
not
or
int3
out
mov
inc
inc
mov
int3
cmpsl
dec
pop
mov
aas
jecxz
in
mov
mov
push
dec
andb
or
add
cmp
stc
adc
dec
jge
sub
outsb
aam
repz
popf
sbb
adc
mov
cwtl
fsub
xchg
jae
call
cmp
fs
aad
sbb
subl
in
stos
adc
icebp
call
iret
cmp
add
lahf
lock
xor
inc
stos
loope
mov
popf
inc
jo
mov
push
cmp
mov
sub
test
cld
and
insl
cs
jg
imul
pop
cmp
int
lock
mov
mov
cld
cmp
sbb
mov
cmc
cli
scas
cltd
cmp
cwtl
aas
dec
push
jne
push
mov
loopne
inc
jg
cmp
add
ja
pusha
movsl
sub
pop
jecxz
jnp
push
jg
jo
pop
imul
mov
and
mov
sub
mov
roll
sbb
adc
cltd
loopne
mov
jecxz
and
add
enter
les
cli
xchg
lret
push
push
lcall
mov
mov
jno
gs
jl
popa
adcl
lret
xor
cltd
or
xchg
mov
sarb
ljmp
pop
icebp
sbb
push
lock
iret
adc
jge
mov
ss
leave
pmaxsw
jb
adc
lock
lods
cmp
mov
iret
pop
push
in
adc
push
dec
je
xlat
outsl
sub
pop
lcall
pop
xchg
shr
sub
dec
lods
cmpsb
push
cmp
xor
pop
into
fwait
mov
sbb
pop
clc
cmp
mov
jbe
dec
fistl
or
in
inc
rcrl
pop
mov
in
nop
add
jb
std
outsl
int
mov
adc
mov
jge
sub
pop
mov
sub
adc
xchg
push
dec
pop
adc
adc
cld
sub
aas
cwtl
loop
fdiv
dec
lret
clc
lret
add
mov
sub
ss
mov
mov
lock
pmaxsw
lcall
dec
int
mov
pop
sub
xchg
mov
call
nop
nop
sbb
push
sub
cmc
xchg
aam
dec
arpl
jno
and
or
fxtract
inc
inc
imul
xchg
push
mov
es
test
push
and
lcall
jno
xchg
sub
enter
adc
pop
ds
rcl
jae
in
xchg
xor
ds
out
mov
int3
xor
sbb
pusha
push
popa
cltd
imul
xchg
ss
push
sbb
jmp
pop
flds
jge
dec
call
and
jne
outsb
jbe
loope
mov
jg
xor
xchg
fstpl
iret
adc
into
std
or
hlt
in
pop
sti
push
push
pop
mov
xor
imul
adc
jnp
cmp
sbb
push
jl
cmp
pop
pop
and
data16
addb
movsl
ds
push
adc
cmpsl
xchg
push
test
mov
inc
flds
je
sbb
int3
lret
pusha
push
inc
sbb
jecxz
hlt
inc
test
fs
dec
dec
das
rcrb
mov
mov
clc
outsb
mov
mov
movsb
shlb
scas
jmp
xor
xchg
mov
or
outsb
bound
loope
mov
outsl
pop
pop
cmpb
mov
xchg
leave
stos
pop
jo
mov
test
or
inc
cmpl
lahf
push
jbe
std
fnstsw
mov
fimuls
xor
cmpsb
stos
lahf
out
mov
inc
std
mov
addr16
xchg
sbb
xchg
mov
sub
mov
mov
or
or
in
xchg
xor
nop
or
out
daa
cmp
push
arpl
in
in
adc
test
fsubs
sarb
js
aam
jo
jb
loop
push
and
ret
das
mov
shll
rcrl
mov
and
ret
jb
gs
pop
push
ret
cmp
insl
sarl
push
and
mov
sbb
mov
pop
jae
sbb
fld
imul
pusha
cmp
jae
mov
or
sub
dec
out
aam
or
lock
fisubrl
cmpsb
leave
mov
mov
scas
iret
or
jg
sub
js
cmp
fcmovbe
mov
scas
cmp
out
push
xchg
loope
dec
inc
sbb
shll
fdivrs
push
adc
adc
fisttps
mov
add
mov
paddsw
fisttpll
mov
std
dec
xchg
mov
iret
push
js
repnz
movsl
or
pop
mov
aad
in
add
aaa
jbe
popa
add
rorl
mov
mov
imul
xorl
push
out
aaa
jecxz
pop
fmull
js
mov
pop
sbb
std
inc
mov
jmp
rclb
add
imul
pop
mov
xchg
lcall
dec
push
cld
cmp
inc
in
push
aad
xchg
loop
out
xor
mov
add
push
loopne,pn
xlat
fldcw
jg
sbb
pop
fdivrs
negl
dec
lods
scas
fisubl
push
hlt
push
and
mov
lock
insb
aaa
sbb
pop
mov
push
mov
movsl
call
movsb
jmp
inc
pop
stos
fcmovbe
add
mov
mov
mulb
inc
shlb
jae
pusha
jg
mov
out
adc
popf
in
pop
pop
ds
nop
sub
inc
scas
rcll
sbb
or
cmp
sarb
insb
lock
cmpsb
sbbl
adc
dec
lret
sti
or
fbstp
and
scas
mov
sbb
or
fisubl
push
adc
adc
mov
inc
mov
or
pop
push
adc
addr16
jno
pop
mov
xchg
orb
dec
add
or
push
repz
stc
inc
jmp
jae
jnp
cmp
xchg
mov
and
dec
jg
sbb
nop
mov
jmp
jg
push
adc
mov
pop
add
adc
adc
ss
xchg
sub
pop
ss
push
and
inc
imul
dec
scas
sub
dec
add
data16
push
xchg
rcrl
daa
mov
out
pushf
bound
mov
into
icebp
sub
js
xor
inc
xchg
cmp
out
or
stos
and
dec
int3
dec
or
arpl
mov
stos
in
cs
sub
mov
pop
sbbl
test
inc
cltd
sbb
vmovapd
lock
cli
jle
sarb
xlat
or
fstpl
loope
int
je
shlb
push
addr16
xor
call
pop
mov
and
or
xor
popa
jbe
push
push
sbb
es
pop
mov
lods
jns
mov
cmpsb
orl
or
push
daa
add
cmp
leave
enter
sbb
imul
mov
ljmp
mov
xor
in
inc
xor
mov
adc
sub
sub
fcompl
or
pop
in
cmpsb
mov
mov
in
xor
xchg
addr16
rolb
add
fwait
sub
or
mov
outsl
mov
xor
pop
rcrl
in
mov
cmp
stos
jl
lcall
xor
or
xor
aas
out
sbb
sub
jne
bound
faddl
sub
cli
push
repz
inc
mov
or
or
cmp
mov
mov
mov
fwait
cmp
ja
scas
push
test
push
push
dec
cld
divb
test
mov
xchg
cmp
jae
cmpsb
vhaddpd
aaa
push
cmp
addr16
dec
gs
mov
dec
das
imul
pop
pusha
dec
loop
inc
jnp
out
mov
sarb
jp
imul
and
lcall
xor
dec
outsl
mov
or
orl
fisubrs
nop
test
popf
movsl
jnp
mov
xchg
data16
jne
enter
jmp
cmp
mov
mov
push
hlt
call
fdivp
jle
imull
xchg
lcall
or
fldenv
xchg
and
jl
loope
cmp
decb
xor
jp
shl
cmpl
stos
sbb
dec
inc
sbb
dec
xor
sbb
repnz
cmc
pop
sbb
mov
fcomip
rol
xchg
push
dec
loop
push
push
mov
outsb
bound
popa
ret
xlat
xchg
cmpsl
popa
sahf
xchg
adc
movsl
aas
lea
inc
or
xchg
negl
test
jo
pop
mov
mov
jg
repz
xchg
std
divl
bsr
test
or
call
inc
add
in
sbb
mov
mov
aam
movsl
sub
jns
shrl
adc
push
pop
daa
sub
pop
mov
test
push
test
mov
sbb
lds
pop
sbb
mov
cmpsb
cmp
pop
psubsb
in
lcall
mov
int
cmpl
jle
push
enter
mov
xchg
jb
scas
mov
mov
fsts
lods
lods
mov
mov
insb
mov
sbb
jnp
sbb
sahf
mov
xchg
push
jae
shl
mov
in
sbb
in
cltd
mov
andl
adc
dec
mov
mov
ret
push
cld
les
icebp
pop
or
stc
daa
loope
int
hlt
dec
push
dec
cmp
stos
adc
out
sub
adc
outsl
lods
rorb
clc
aaa
lret
aam
xchg
pop
sbb
iret
lods
stc
add
aas
mov
jne
divb
iret
jmp
adc
dec
mov
adc
ret
lods
and
mov
js
jbe
ret
xchg
cld
mov
xor
jns
pushf
add
and
in
out
xchg
cmp
movsb
or
scas
jmp
push
inc
in
dec
adc
rorb
ljmp
jb
add
fiadds
cli
lcall
ret
insb
xchg
or
push
xchg
inc
cld
lods
inc
inc
stos
xchg
sbb
loopne
inc
inc
mov
outsl
xchg
lea
or
push
mov
adc
cmpsb
add
jae
jge
xchg
es
add
xor
jg
jo
push
pop
and
pop
jae
out
push
sbb
repz
test
insl
or
sbb
mov
jecxz
mov
pop
push
inc
out
xchg
sub
pusha
cs
mov
jge
or
pop
mov
pop
lods
cwtl
add
push
out
rep
push
cltd
xor
clc
xlat
in
cmp
arpl
or
xchg
mov
jp
jb
cmpsl
dec
or
xor
dec
ss
push
or
inc
fiadds
jno
xor
sbbb
fwait
lds
lea
and
adc
pop
push
adc
leave
lock
adcb
jnp
psubsb
pop
das
inc
pop
jno
outsb
pusha
pop
cmpb
or
add
incl
outsl
xchg
gs
movsb
add
dec
jmp
addr16
rorl
jno
popf
mov
and
mov
shlb
dec
add
scas
jbe
sub
lods
mov
push
dec
lds
xorb
add
loop
lret
or
dec
pop
je
clc
mov
inc
xor
addr16
xchg
call
int3
sbb
lods
rcll
cltd
mov
lret
mov
jl
mov
pushf
gs
dec
inc
add
xor
in
cmp
sub
ljmp
mov
jle
mov
and
test
out
jo
scas
xchg
fnstsw
and
dec
in
subl
dec
lret
jle
and
call
and
mov
dec
hlt
inc
or
mov
jecxz
or
call
push
je
insl
adcb
cmp
jge
add
in
xor
inc
dec
insl
in
imul
jae
inc
out
inc
das
loope
call
ja
push
xchg
and
mov
jno
add
and
mov
fs
mov
jns
push
xchg
sub
push
adc
jns
dec
inc
cmpsl
push
xor
testb
loopne
rcr
jp
mov
inc
loope
js
lock
mov
mov
or
add
pop
xor
in
inc
pop
add
pop
jmp
sub
mov
cld
jmp
pop
adc
dec
das
pop
inc
repz
add
pop
pop
les
cmp
jo
shr
je
xlat
pusha
lcall
adc
aam
mov
xchg
in
es
sub
in
hlt
daa
dec
pop
and
stos
and
adc
mov
fsubl
cltd
and
in
mov
pop
dec
clc
sti
sti
fisubrl
jmp
pop
enter
pop
mov
mov
pop
fincstp
push
jle
sbb
sbb
inc
test
add
mov
dec
mov
outsl
inc
ljmp
ror
cmp
add
push
sbb
cmp
push
xor
mov
sbb
xchg
rcr
into
pushf
out
cmp
mov
pop
xor
insb
bound
pop
dec
sbb
fdivrl
mov
push
repz
std
mov
and
ds
adc
repnz
jmp
loopne
mov
cmp
pop
mov
into
cltd
sub
add
or
sub
daa
sbb
cs
or
cmp
ds
nop
mov
mov
mov
or
add
mov
adc
dec
cs
pop
inc
jo
ds
or
aam
push
scas
mov
addl
sbb
ds
xor
mov
jno
in
movsl
pop
outsl
xor
les
xchg
adc
mov
clc
sbb
or
cmp
clc
or
jge
push
aas
pushf
lea
xor
fdivrl
cmc
pop
loopne
cmp
testb
adc
ss
popa
inc
lret
xchg
out
lods
push
push
clc
jmp
sbb
push
mov
repnz
lock
int3
pop
ret
imul
arpl
enter
and
stos
cmp
ja
in
lret
inc
or
jne
mov
popa
aam
dec
lea
and
cmpsl
mov
test
test
jbe
and
fidivrs
clc
push
fstpt
jno
test
cmp
int3
mov
inc
loopne
adc
dec
das
mov
ljmpw
shlb
andb
jns
adc
mov
cmp
data16
cld
or
adc
adc
xchg
popa
fnsave
cmpsl
cwtl
je
mov
sub
mov
inc
lock
push
or
pushf
lock
icebp
mov
mov
cmpsl
enter
mov
push
push
test
mov
push
rcr
inc
xchg
mov
pop
jae,pn
xorl
xchg
or
aad
or
lahf
cmp
sahf
push
sub
sub
js
pop
dec
cli
or
mov
sbb
fwait
xchg
and
lahf
push
xchg
cmp
push
dec
or
les
addl
push
sub
add
mov
adc
shll
dec
pushf
cmp
jb,pn
sbb
push
pop
ret
ret
rclb
xchg
daa
orb
inc
loopne
mov
lods
leave
push
jae
lods
idivl
or
push
xchg
add
mov
mov
rolb
push
add
shrl
mov
mov
ljmp
mov
sub
push
les
jno
push
mov
cwtl
sbbl
ret
stos
pop
xor
jecxz
mov
insl
cmpsl
add
cmp
push
inc
and
jne
or
xlat
xchg
mov
mov
xor
fs
sub
adc
push
adc
push
push
push
in
xor
rep
mov
dec
icebp
aam
mov
imul
inc
push
dec
add
loope
leave
ja
sbb
cmpb
push
mov
cmp
mov
outsl
and
ja
xor
flds
xchg
jg
das
xor
xchg
or
gs
push
cmp
pop
cltd
or
add
xchg
imul
lahf
mov
jge
push
jne
jae
adc
fcmovb
mov
mov
push
sbb
movsl
inc
pushf
adc
std
jg
xchg
fistpll
jp
jmp
into
xchg
add
ss
add
cmp
and
out
mov
loope
push
pop
jae
jne
mov
imul
pop
fcoms
xor
or
sbb
notl
adc
mov
in
icebp
shll
cltd
dec
test
or
or
fimuls
push
jg
fidivl
ja
adc
mov
cmp
es
or
mov
add
je
stc
lahf
push
and
test
enter
rcl
push
rorl
mov
inc
sbb
fdivrl
loop
xor
stc
rclb
inc
ja
xor
sub
push
cmp
xchg
xor
fisubrs
or
mov
push
stos
jmp
in
jmp
adc
sar
mov
testl
notb
cmpsl
std
cmpsl
and
fmul
adc
jmp
pop
cmpsl
cwtl
xor
ss
out
out
mov
adc
push
dec
shll
shlb
imul
cwtl
sbb
les
adc
imul
cmc
orb
daa
shlb
sbb
mov
pop
mov
push
mov
stos
imul
cld
cmp
es
fidivrl
adc
lret
jg
or
inc
jo
jb
jns
xchg
stc
push
mov
jmp
fxch
sub
cs
stc
cmpsl
in
xor
test
ret
jb
push
pop
inc
icebp
pop
push
retw
iret
call
sub
test
or
rcr
pop
add
subb
adc
or
hlt
jmp
push
or
fcmovbe
xor
dec
push
scas
add
fisubrl
pop
out
xchg
mov
pop
cmc
movsl
rcl
pop
cmp
mov
into
and
test
cmp
aas
inc
sub
imul
imul
mov
cltd
cmp
out
into
push
lds
pushf
jecxz
jp
clc
or
push
adcb
js
adc
rcr
scas
add
adc
jbe
mov
jg
ss
jl
cmp
mov
xor
jne
nop
cmp
insl
adc
mov
imul
aaa
es
pop
mov
lds
xchg
insb
fwait
xchg
dec
gs
adc
cmp
push
mov
cmp
popf
add
lahf
and
jge
adc
into
movsb
dec
ret
xlat
test
fdivl
mov
fmull
movsb
cltd
data16
pusha
push
xchg
ss
int3
mov
pop
xlat
sub
imul
xor
xor
dec
mulb
sub
jnp
mov
test
lret
sub
xchg
pop
inc
hlt
incb
xchg
movsb
mov
pop
jg
adc
int
xchg
jnp
pop
push
pop
inc
lret
dec
cmp
mov
jmp
inc
jo
jmp
fidivrl
sbb
inc
rorb
test
mov
mov
js
orb
sbb
dec
loop
arpl
jp
jns
xor
sbb
dec
cmp
mov
jg
adc
fdivrs
addb
jmp
fbld
clc
pop
lock
sbbb
fcoml
mov
test
sbb
push
aas
icebp
outsb
dec
push
nop
inc
js
pop
sbb
aad
mov
aaa
cmpsb
xchg
cmpsb
mov
add
fsin
sub
arpl
ret
jno
lcall
pop
and
aam
mov
pop
pop
mov
inc
cmc
add
cmpsl
jle
or
sahf
inc
roll
or
sbb
cmc
stos
xor
rcl
outsb
cmp
je
fwait
or
mov
cmp
cwtl
xor
add
adc
xlat
clc
push
call
mov
sub
mov
mov
data16
push
lea
pop
mov
xor
add
pop
inc
ret
sub
mov
rcrl
lcall
mov
jb
adc
dec
push
outsl
pop
pop
mov
xorb
jno
xchg
lock
pop
divb
shrb
add
out
cmpl
mov
pop
aaa
cs
pop
sub
in
stc
test
test
or
outsb
push
lcall
in
push
in
ficoml
into
or
rorl
sub
inc
divb
in
icebp
or
dec
and
sbb
imul
incl
in
sarl
decb
orl
xchg
icebp
mov
push
cmc
add
jns
add
sbb
loopne
cmp
mov
xor
or
jb
xchg
inc
out
lock
loope
cwtl
sub
xchg
or
iret
rcrb
loope
push
sbb
movsb
movsl
xchg
aas
dec
xor
mov
mov
enter
out
sbb
dec
pop
push
cmp
push
dec
insl
push
and
cmp
xchg
jle
xor
aaa
jns
cmpl
push
pop
in
or
mov
daa
lret
xchg
inc
hlt
mov
and
or
arpl
scas
ljmp
in
cmp
imul
mov
pop
lret
sarl
adc
adc
test
pop
push
inc
sub
movsb
mov
outsb
jmp
ljmp
jbe
adc
js
sbb
aad
enter
mov
scas
fdivrs
or
js
xor
adc
cmp
das
in
lcall
lret
fstl
test
push
outsb
movsl
adc
daa
mov
into
push
mov
xor
jecxz
repz
les
fdivrs
mov
jnp
sub
outsb
add
dec
dec
lret
mov
sbb
cmpsl
cmp
dec
xor
shlb
rep
dec
mov
push
inc
out
xchg
cs
dec
dec
fstps
push
jge
jle
ljmp
aaa
mov
sahf
mov
pusha
mov
sbb
dec
idivb
test
sti
jnp
push
dec
pop
and
sbb
loop
push
and
imul
sbb
or
add
cwtl
inc
clc
fimuls
jne
mov
in
mov
or
insl
xor
jb
add
loop
jnp
sbb
mov
in
push
loopne
adc
outsl
dec
cmpsb
xor
pop
stc
shlb
mov
ret
mov
adc
xor
pop
push
mov
fwait
test
cmpb
std
or
fldenv
aas
addl
sahf
adc
add
sbb
js
ja
and
cli
repnz
push
mov
cmp
mov
jns
pop
jle
insl
mov
mov
ds
call
push
xchg
test
xorl
push
adc
sti
aas
sub
out
inc
fdivs
mov
or
iret
push
xchg
dec
cmpsl
fcompl
rol
jnp
and
adc
sbb
setle
aaa
jae
fisubrs
dec
mov
pop
rcrl
gs
sub
add
mov
ljmp
hlt
xchg
fcoml
pop
adc
mov
ret
sub
scas
cmpsb
test
insb
orl
ljmp
fsubrs
cmp
xchg
call
ret
rcr
aaa
cmp
jb
mov
ficoml
inc
in
ret
sub
cmp
fildl
lock
out
push
loop
iret
sahf
xor
mov
xchg
mov
mov
jg
lds
dec
xor
daa
add
imul
ret
mov
pusha
int3
inc
test
out
sti
jne
daa
pop
mov
jo
jp
and
pusha
lea
xor
mov
pop
lods
mov
dec
mov
in
lock
sub
cmp
push
out
popf
leave
dec
mov
pop
sub
push
rorb
or
iret
xchg
sbb
shrl
lea
ds
or
jle
push
mov
fisubs
int3
sub
outsl
lds
mov
aas
xor
sub
lods
test
int3
add
and
std
mov
cmpsl
add
cmp
xchg
mov
in
pop
icebp
call
xor
aam
movsb
sub
pop
dec
lret
jbe
std
movsl
xorb
imul
insl
mov
pop
movsl
clc
push
out
andb
add
cmp
mov
jmp
out
xchg
pop
mov
into
mov
adc
or
dec
aas
hlt
sub
jmp
shrb
or
shll
push
fxch
mov
lret
cmp
push
lods
dec
das
adc
or
pop
pop
inc
mov
mov
popa
pop
push
inc
adc
or
pop
push
jnp
lahf
test
xchg
jo,pt
xchg
inc
lods
add
and
sbb
inc
movsb
in
es
subl
aad
sub
jne
pop
mov
or
gs
cmp
cmp
clc
pop
enter
mov
dec
sub
jl
fisubrl
mov
lret
xchg
add
fwait
xchg
sub
pop
mov
popf
shrl
add
adc
pop
pop
push
xchg
int
cli
mov
dec
inc
pop
xchg
into
and
ds
inc
packuswb
jl
icebp
clc
pushf
movsl
sbb
and
mov
out
jmp
push
mov
push
cmp
add
jecxz
dec
ret
adc
outsl
mov
clc
xchg
inc
lahf
rcrb
push
fdivr
mov
jb
repz
scas
push
sbb
xchg
popf
into
sti
xchg
sarb
sub
mov
jge
ljmp
iret
fwait
mov
rolb
loop
push
pop
jns
stc
inc
insb
fisubrs
sub
push
add
dec
pop
cmpsb
xchg
mov
pop
sbb
pop
ret
mov
cmp
sbb
mov
mov
push
jbe
cmc
out
mov
xor
aad
ss
or
jle
mov
in
add
pop
jge
scas
out
mov
dec
push
xchg
loop
sbb
adc
xchg
cmova
adc
aad
ss
cmp
mov
pop
test
lahf
mov
cmpsb
fwait
add
mov
in
cmc
dec
out
cmp
cmp
mov
insb
push
mov
stos
mov
or
test
scas
inc
inc
xchg
aas
sbb
sbb
rolb
jmp
xchg
aam
adc
jmp
mov
scas
dec
jp
xor
sub
scas
inc
out
out
repz
cmp
dec
xchg
inc
pop
push
iret
cmp
in
or
dec
mov
rol
ret
xchg
data16
sub
jnp
or
idiv
push
pop
lahf
mov
test
or
lods
in
xor
fildll
mov
cmp
mov
pushf
cmp
int3
add
out
lret
outsl
inc
outsb
roll
sub
sti
or
insl
daa
mulb
pushf
daa
icebp
stos
mov
add
insl
stos
leave
cwtl
pop
pop
aad
pop
out
in
xor
jbe
push
mov
mov
insl
cli
or
jne
iret
pop
sub
cli
fnstcw
les
pop
pop
push
cmc
cmp
push
les
mov
ror
adc
stc
mov
test
mov
rorl
pushf
cmp
pusha
and
sbb
jecxz
sbb
jle
xchg
pop
addr16
xchg
ja
outsb
fsubrl
movsb
mov
popa
fbstp
sub
dec
std
ret
xor
dec
or
shl
sbb
cmp
pop
clc
in
in
push
pop
in
cmpsl
stos
stos
add
clc
xor
int3
xchg
xorl
fsubl
jecxz
fs
arpl
lock
and
sbb
push
sub
pop
mov
jecxz
push
mov
jne
imul
clc
mov
xchg
out
cs
pop
pop
sarl
sbb
iret
fs
add
fs
mov
add
jecxz
scas
cmp
sbb
mov
pop
sub
xor
mov
mov
push
aam
inc
dec
adc
sbb
jae
xor
inc
xchg
movsl
dec
outsl
std
xor
leave
mov
rcll
lcall
mov
arpl
mov
lods
push
ficoms
shr
add
mov
dec
loop
cld
cltd
inc
mov
sahf
mov
xchg
pop
jb
unpckhps
pop
jne
lcall
or
pop
inc
mov
xchg
pop
leave
pop
push
push
sub
or
into
pop
in
into
cmp
leave
fwait
mov
dec
xchg
sbb
push
sbb
lods
mov
mov
std
outsb
scas
xchg
jle
mov
sub
sub
push
test
add
inc
and
mov
push
mov
adc
or
sub
mov
xorl
adc
sbb
jno
jnp
popf
imul
mov
loope
cmp
jecxz
dec
in
mov
jno
out
stos
inc
inc
jae
push
out
cld
inc
sahf
loope
jecxz
loop
xor
push
fisubl
adc
sbb
fwait
xor
and
or
add
inc
jmp
jg
pop
les
fistps
mov
and
orb
inc
rorb
call
in
inc
and
add
xor
loop
pop
jbe
jno
xchg
inc
push
adc
ljmp
in
dec
adc
xchg
adcl
cmp
dec
fldl
shll
in
adc
sub
and
push
or
in
xchg
push
lcall
dec
movsb
popa
dec
dec
dec
inc
fcoms
int3
cli
sbbb
lcall
lods
push
enter
ss
outsl
sub
icebp
mov
nop
sub
cmp
adc
xchg
dec
hlt
xchg
pop
out
stos
jl
roll
lods
mov
popf
in
mov
adc
jmp
fsubrs
add
inc
lods
addr16
add
test
insb
mov
addb
mov
ljmp
push
pop
sbb
xchg
push
xor
xor
enter
or
mov
cwtl
scas
aam
mov
aaa
or
movntq
mov
jnp
hlt
and
jo
scas
hlt
imul
push
andb
jmp
je
xor
lods
add
inc
idiv
scas
jbe
add
xchg
or
inc
push
lret
in
xchg
sbb
add
insl
xchg
adc
mov
or
cmp
jbe
pop
mov
movsl
stos
jle
and
fidivs
jne
ja
imul
out
jge
dec
shll
dec
push
mov
in
mov
test
loope
xchg
lret
mov
mov
popf
js
lods
xchg
mov
push
inc
dec
ds
aad
jns
lods
notb
jb
sbb
sub
jmp
inc
jge
iret
js
icebp
jl
adc
orl
scas
stos
and
aad
jae
lods
add
into
mov
jl
mov
mov
push
mov
movb
cld
outsl
xor
mov
stos
addr16
or
mov
nop
dec
ret
call
cmpsb
push
dec
cmpsb
rolb
xchg
fildl
scas
add
gs
jns
dec
out
lods
jp
stos
call
div
bound
mov
leave
jne
xor
jo
push
addr16
rcrb
push
mov
inc
push
fnstenv
xchg
test
lcall
cmpsl
lods
in
and
cmpl
pop
enter
dec
clc
dec
outsb
ja
lret
jge
int3
fmulp
sahf
jae
jbe
cmpsb
ds
fidivs
ret
sub
dec
push
mov
lds
out
bound
pop
lcall
mov
xor
daa
lahf
insb
popa
scas
pop
repnz
push
psraw
xchg
adcb
xchg
xor
dec
fstps
inc
adc
jo
pop
xchg
jne
outsl
jp
fyl2x
inc
neg
rorl
and
cli
leave
daa
fldln2
jns
xchg
pop
push
cltd
pop
negb
or
adc
sbb
cmp
icebp
jmp
inc
or
sbb
fistl
std
clc
pop
pop
repnz
jo
pop
xor
fdivl
push
add
and
clc
pusha
xchg
cwtl
push
aad
push
das
jge
imul
std
rcrl
outsb
cmp
nop
jge
mov
sbb
ret
test
xchg
or
fcomps
in
ljmp
xchg
ljmp
lods
add
xchg
fisubrs
sub
dec
add
fwait
scas
cmp
xor
mov
or
jo
xchg
xchg
push
loopne
xchg
cwtl
sbb
outsb
pop
fcoml
cwtl
les
adc
sub
pop
sbb
sub
adc
sub
pop
leave
adc
inc
pmovmskb
mov
hlt
inc
loope
enter
mov
add
movsb
je
push
add
int
repz
xchg
or
insb
js
cs
xlat
int3
jno
mov
xchg
jmp
idivb
push
hlt
pop
loope
pop
outsb
cmp
dec
mov
push
cmp
dec
gs
int
ljmp
sub
in
test
sti
enter
lcall
sbb
cmovnp
ret
or
test
pop
mov
sub
dec
pop
or
mov
call
sub
out
xlat
mov
dec
out
hlt
xchg
fadd
lret
and
enter
and
sbb
iret
push
cmp
ret
adc
dec
inc
push
add
dec
pop
jbe
cmp
xor
xchg
mov
cmpsl
lea
mov
fwait
sub
shll
nop
iret
push
mov
enter
inc
repnz
inc
mov
imul
mov
lahf
mov
aaa
cmpsl
in
stos
pop
std
clc
in
notb
mov
in
jmp
in
inc
repnz
push
daa
mov
push
lcall
dec
jb
test
ds
repnz
inc
cmp
adc
add
gs
outsb
rcrl
dec
cmp
jnp
push
xchg
cs
mov
shll
jne
add
push
sbb
popa
iret
adc
roll
fistl
adc
add
cmp
inc
mov
mov
lcall
lea
cmp
pop
nop
das
or
jecxz
xabort
or
lret
fucomi
sbbl
sbb
jl
pop
std
mov
adc
pop
dec
cmp
jp
fstps
outsb
adc
adc
in
xchg
push
je
jne
xchg
sub
or
sub
test
popl
inc
lods
mov
adc
rcl
pop
test
mov
call
sahf
lret
aas
jecxz
loop
xlat
xor
insl
jo
xchg
arpl
mov
xor
xchg
mov
jg
aam
lock
mov
sbb
xchg
push
ror
ja
add
popf
movsb
jbe
jp
pop
xor
mov
add
jp
out
adc
push
loope
clc
add
and
imul
jae
lods
adcb
lahf
cwtl
and
mov
mov
int
push
mov
mov
aaa
das
fnstcw
pop
nop
inc
sbb
fstpl
jg
xchg
cld
mov
push
inc
iret
jge
sbb
insb
push
mov
mov
bound
sub
sub
fwait
cltd
xor
in
iret
out
lock
inc
fmull
push
call
movsb
mov
mov
arpl
sub
jno
xchg
jp
pop
sub
in
and
je
mov
xchg
jp
sbb
out
jg
push
and
mov
sbb
pop
and
mov
dec
sub
or
mov
lods
mov
inc
clc
mov
adc
loop
inc
jne
pop
js
lahf
push
js
pop
cmp
pop
icebp
test
out
inc
fdivr
leave
and
pushf
stos
bnd
and
rcl
enter
cmc
mov
lret
adcb
xchg
adc
inc
mov
fucom
cmp
sahf
stos
in
repz
add
dec
dec
jp
pop
call
jge
sbb
mov
add
push
cmp
add
shl
xor
pushf
je
pusha
rorl
addr16
adcl
dec
cld
push
aad
xor
jg
fsubs
mov
mov
jp
movsb
sar
fs
dec
fstpl
cmp
into
sti
out
xlat
int3
imul
repnz
xchg
sti
dec
les
ja
mov
fucom
lret
jae
xchg
idivl
inc
lods
ja
stc
xchg
movl
pop
xchg
fcompl
mov
add
inc
stos
ret
sbb
enter
dec
dec
xchg
and
mov
or
mov
pop
mov
xor
adc
add
mov
out
jno
or
push
pop
loope
mov
push
push
test
fcomps
shll
into
mov
addb
lods
and
mov
mov
icebp
xchg
rcll
inc
inc
sbb
and
mov
pop
shl
and
mov
jecxz
cmp
popa
push
into
or
imul
dec
jle
shlb
int
imul
and
in
test
sub
les
cli
sub
mov
lea
pop
xchg
adc
ret
out
pushf
icebp
and
mov
insl
or
push
subl
je
fs
ds
sub
push
adc
mov
mov
ror
mov
and
jne
rcrl
push
add
pushf
loope
in
scas
mov
or
jp
std
das
addr16
mov
mov
pop
ss
pop
mov
cmp
mov
sti
cmp
aaa
jl
icebp
adc
xchg
lcall
xchg
add
adcb
mov
xor
push
cs
or
popf
fnstcw
or
dec
int3
cwtl
xchg
or
out
out
mov
popf
mov
push
pushf
adcb
fimull
mov
mov
xchg
stos
fsubs
dec
out
test
cmpsl
into
jge
mov
popa
rorl
inc
test
or
fidivl
push
jb
stos
aam
cmpb
and
mov
push
out
shlb
movsb
mov
les
or
inc
std
jnp
push
jo
sbb
xchg
rorb
cmpsl
lcall
int
lods
sbb
jbe
insl
inc
add
push
jo
out
repnz
pop
jo
fcoms
pop
xchg
push
sbb
sbb
cmpl
sahf
jae,pt
dec
test
push
int
adc
sub
movsb
mov
mov
pushf
test
push
jns
jb
sbb
outsb
lds
adc
cli
mov
push
ss
cmp
mov
repz
xor
sarb
stos
mov
rcrl
mov
xchg
and
fisubrl
push
pop
push
pop
push
adc
or
or
add
repz
in
cmp
addr16
add
imul
sub
test
sbb
dec
mov
cmp
mov
das
rcrl
sub
aas
xchg
xor
mov
sahf
mov
fistl
adc
orb
jae
int
sbb
pop
mov
shll
clc
out
out
addl
inc
jae
dec
shl
fwait
movsb
outsl
scas
rcrl
fcmovb
jno
test
std
lea
scas
adc
lcall
pop
pop
cmpsb
xor
push
xor
das
lcall
imul
add
or
cmp
mov
clc
dec
es
dec
mov
jnp
jmp
or
inc
and
fidivrl
push
loop
adc
fistpll
mov
dec
popa
xchg
sti
jecxz
icebp
clc
inc
je
inc
adc
pop
xor
mov
popa
inc
xchg
inc
arpl
inc
mov
sub
jmp
mov
sti
pop
pop
and
bnd
inc
lds
mov
out
out
pop
test
pop
sub
pop
hlt
cltd
inc
pop
xor
add
push
adc
mov
xor
sbb
jecxz
outsl
push
mov
add
out
sub
xor
scas
xor
dec
in
imul
jno
push
xorb
and
gs
addr16
mov
add
jp
xor
jo
push
push
push
loopne
xor
stos
lret
stos
popf
popf
dec
or
int
inc
loope,pn
movsb
lahf
push
push
cmpsb
mov
push
mov
adc
dec
js
mov
mov
ds
add
sbb
jmp
popa
mov
loope
cmp
inc
call
xchg
lock
out
loop
aaa
or
xor
std
sub
std
ljmp
pop
pop
sahf
push
xchg
cltd
out
sbb
das
push
cmp
pop
pusha
dec
xlat
cmpsl
mov
sbb
mov
fldenv
adc
or
iret
sub
mov
sbb
xchg
cmp
mov
in
xor
lock
mov
xchg
cld
xchg
lea
popf
insl
inc
imul
sbb
xchg
mov
lcall
push
xor
mov
fcoms
fucomi
push
inc
add
jg
mov
pusha
cmp
or
rclb
pop
add
mov
add
faddp
jmp
adc
addb
loope
mov
cld
cmp
sti
mov
jl,pn
xor
mov
lret
into
fldt
mov
push
mov
push
int
adcb
sbb
mov
cmp
dec
test
dec
pusha
jne
pop
sub
dec
out
iret
ret
hlt
scas
jno
jb
aad
jno
cmp
sub
mov
lods
mov
jb
xchg
mov
lcall
decb
xchg
loope
adc
xor
into
pop
cli
mov
mov
push
inc
repnz
push
sbb
lret
add
sarl
jle
and
out
push
ss
pop
add
call
js
pop
sti
fmull
js
fisttps
cltd
sbb
lcall
imul
stc
dec
jmp
mov
pushf
shll
lock
cmp
popa
jae
mov
ret
dec
rcll
jg
push
popf
gs
sub
inc
cs
adc
js
stc
add
clc
cmp
ret
xchg
movsl
lcall
jl
jmp
adc
pop
mov
sti
mov
adc
dec
lods
test
lea
sbb
sub
mov
cmp
xchg
les
and
pop
mov
leave
inc
sub
ljmp
and
mov
lret
movsb
dec
sti
pop
xor
pop
inc
gs
push
mov
mov
cmp
lcall
cltd
loopne
nop
dec
push
or
mov
lret
das
xchg
das
test
cmp
jp
push
push
lods
icebp
inc
xchg
xlat
dec
dec
cltd
vpmovswb
je
mov
cwtl
mov
inc
mov
adc
push
jo
dec
testl
movsl
imul
push
cmp
into
je
sbb
out
mov
lahf
aad
mov
sbb
cmp
addr16
repnz
adcl
enter
jno
or
ja
das
xor
xchg
ljmp
fbld
adc
int
dec
aam
iret
mov
mov
icebp
out
loope
arpl
ds
xchg
dec
outsb
loopne
sub
cmp
sbb
xor
mov
fildll
pop
fimuls
cld
rcl
xor
jmp
push
push
pop
inc
push
mov
pop
insb
push
insl
jp
pop
sbbb
sub
xor
dec
sahf
out
xor
or
imul
fcmovu
mov
aaa
or
push
adc
sub
repnz
or
cmp
jne
push
inc
fs
stc
ficoml
cltd
fdiv
sub
xlat
call
jnp
adc
mov
scas
shll
sub
and
cmp
sbbb
sub
pop
cmp
ds
les
add
daa
adcb
les
cmc
roll
sub
shrl
sub
in
pop
lods
pop
push
pop
xchg
mov
inc
icebp
mov
mov
lds
fisubrs
addr16
pop
adc
lcall
inc
daa
mov
sbb
and
pop
pop
clc
sahf
ds
or
jbe
dec
sahf
xchg
into
sbb
inc
jmp
xchg
cwtl
imul
leave
dec
shrl
aas
mov
push
dec
mov
cld
pushf
mov
pushf
dec
int
test
or
sbb
outsl
aam
int
in
xchg
sub
in
sub
out
pop
xor
xor
pop
mov
pop
fsubrs
daa
sbb
in
aam
icebp
add
mov
push
repnz
cltd
shl
leave
xor
mov
xchg
stos
gs
movsw
shll
loopne
mov
mov
dec
in
sarl
out
xor
mov
push
jae
fcmovnb
mov
rcrb
repnz
fstl
cltd
sbb
sbb
out
fstl
push
iret
ret
pop
dec
xchg
pop
leave
imul
fldl
dec
xchg
xchg
cmp
iret
leave
xchg
shll
das
sub
xor
mov
xchg
insb
mov
xchg
xchg
and
jo
mov
into
mov
rorl
xchg
test
rep
mov
pop
rcrl
movsl
fisttpll
cmc
push
out
mov
fstpl
insl
jg
inc
push
es
add
test
cmpsl
push
lods
xchg
scas
mov
mov
mov
movsb
int3
shlb
aam
inc
loope
xchg
ret
sbb
jae
mov
or
movsb
ss
mov
jo
sub
shrb
cmpsb
or
dec
dec
pop
adc
xor
rcrl
mov
int3
lock
adc
cmp
out
sbb
and
lret
das
jp
rolb
das
mov
jbe
xor
pop
push
jecxz
repz
push
xor
sbb
out
xor
xchg
inc
mov
ds
dec
add
jbe
loopne
jb
repz
push
outsb
stc
cld
aas
sarb
dec
aaa
cmpsl
sbb
lret
mov
jnp
cltd
repz
and
jge
into
xor
cmpb
test
mov
jp
cmp
cmp
mov
scas
jne
sbb
loope
adc
mov
fwait
lret
and
lret
lret
adc
push
jl
in
and
mov
add
test
adc
dec
sbb
mov
shlb
mov
fnstenv
test
sbb
pop
aam
stc
and
popf
jge
fadds
and
xor
inc
xorb
cli
adc
jo
divl
enter
popf
scas
jne
cmpb
dec
inc
push
sahf
push
xchg
repz
stc
movsb
insl
mov
jno
pop
mov
inc
xchg
and
push
push
cmp
hlt
mov
lods
mov
mov
mov
dec
sub
or
sahf
jb
ljmp
fmull
fs
arpl
add
outsb
ljmp
inc
fadd
ret
dec
rcll
mov
bound
incb
dec
mov
faddl
jbe
call
lds
js
mov
cmp
add
test
fwait
mov
scas
popf
add
sbb
ss
dec
pop
push
data16
push
clc
xor
jmp
add
dec
lds
push
sub
cmp
push
int3
cmp
cmovb
mov
int
fisubrs
lds
divl
or
addr16
xchg
nop
stos
cmp
movsb
ja
pop
lahf
loope
lcall
loope
imul
inc
xor
pop
mov
push
cs
fildll
push
ds
and
fs
mov
add
jmp
daa
push
push
mov
mov
fld
push
pop
clc
addr16
xchg
sub
or
into
dec
push
ss
std
daa
fxam
jecxz
aad
shll
pushf
inc
popa
mov
rcrb
push
shll
jnp
xor
clc
jl
popa
jle
ficoml
xchg
cmp
cmp
popf
inc
xchg
adc
repz
daa
gs
push
sbb
pop
add
xchg
aas
clc
iret
add
in
mov
stos
xor
je
jo
cmpsb
into
sarl
jno
fsubrs
jo
stos
mov
ret
cwtl
xorb
pop
cmpsb
popf
xor
loope
xchg
sub
ret
popa
sbb
sti
sti
int
ljmp
inc
mov
push
inc
sbb
dec
iret
jg
jns
ds
jb
in
shlb
xchg
stc
sbb
fnstcw
call
cs
mov
aaa
add
mov
sbb
push
mov
scas
jns
movsl
jge
mov
jecxz
loope
enter
add
add
mov
lock
dec
xchg
push
ss
xlat
dec
es
imul
jb
push
stos
bound
dec
xchg
outsl
jns
cli
cmp
mov
xchg
pop
imul
mov
push
mov
stos
inc
pushl
mov
pop
push
stos
mov
jne
clc
les
sub
into
div
jbe
xchg
xchg
jge
insl
push
rclb
stc
shlb
shrl
das
jl
push
inc
inc
hlt
aaa
or
push
mov
fcomi
pushf
std
inc
ds
imulb
dec
sub
hlt
rdmsr
ds
adc
dec
mov
pop
out
cli
or
cmp
neg
push
hlt
fsubrl
sbb
lods
xor
movsl
push
in
lock
bound
test
mov
xor
jb
pop
mov
imul
repnz
aas
xor
inc
std
xchg
stos
hlt
repnz
ss
mov
mov
in
cs
xchg
pop
addr16
push
push
sbb
add
lds
or
add
sub
sbb
xor
daa
dec
adc
in
testl
das
daa
notb
xchg
divb
adc
repnz
dec
bound
pusha
inc
sbb
mov
popf
add
push
xchg
jp
jg
iret
cmc
xchg
xchg
push
imul
sbb
or
insb
loope
mov
xor
xchg
add
outsb
mov
in
call
iret
adc
dec
xchg
sub
shrb
cs
mov
push
ds
pop
mov
jmp
or
orb
pop
mov
bound
adc
xor
push
out
leave
pop
ss
xchg
cmc
loopne,pt
rcll
jl
add
sbb
mov
push
push
and
and
inc
adc
jae
and
and
push
cmp
cld
add
popa
dec
sahf
loop
xor
push
push
and
leave
adc
and
cmp
pop
add
xor
cmp
add
mov
xchg
xchg
mov
int3
es
mov
gs
jo
lods
push
mov
cli
mov
jp
sub
data16
bound
repz
cli
mov
xchg
push
add
push
xlat
adcb
or
jmp
mov
pop
xchg
test
stc
loopne
pop
int3
test
pop
pop
outsl
inc
loope
cld
pop
insb
out
or
in
cmc
lret
xor
sahf
cli
sub
mov
test
into
inc
xor
mov
addl
cmp
push
xor
pop
enter
loope
mov
jmp
xor
inc
jg
imul
pop
pop
enter
int3
fldcw
pop
ds
test
out
lds
pusha
rorl
sbb
shrb
add
lds
loopne
popl
jl
pop
push
pop
sbb
jg
stos
dec
enter
cmp
mov
xor
pop
jbe
jmp
pop
or
daa
push
push
sub
jg
ss
mov
inc
inc
dec
sahf
mov
jb
push
lahf
dec
sub
cs
ljmp
inc
pop
inc
or
xor
rclb
mov
loope
es
adc
mov
pop
mov
mov
nop
adc
test
jg
jecxz
imul
sbb
out
xchg
pusha
sub
repz
inc
mov
andl
push
shlb
adcb
jnp
bnd
jae
popa
leave
rorl
popa
dec
lea
hlt
std
fdivs
cmpsb
clc
xor
cmp
stc
jo
or
insb
cld
and
rcr
out
pop
loop
xchg
sub
push
loop
fidivs
add
shlb
int
cmc
lds
dec
hlt
jl
xor
or
sub
jge
sub
cld
and
push
add
sub
mov
fisubs
aad
cmp
jmp
cli
mov
adc
stos
lods
add
push
inc
addr16
hlt
pusha
sub
pop
jg
and
je
xor
xor
jmp
addl
dec
in
cmp
int
jae
jns
iret
inc
imul
outsl
push
outsl
or
mov
int
sbb
dec
sub
or
jnp
addl
and
and
xor
push
inc
push
xchg
sub
out
addl
insb
xor
stos
mov
sahf
test
cmp
int3
rcl
lcall
xor
xchg
push
nop
dec
loop
lods
pop
adc
movsl
fsubs
imul
and
sub
notb
icebp
jno
sbb
sti
mov
push
dec
lods
push
mov
pop
outsl
cltd
sbbl
aaa
xor
ret
mov
dec
mov
fsubp
in
aad
dec
xchg
push
jb
mov
mov
mov
loopne
or
inc
int
mov
aaa
leave
into
in
cmpsl
pop
clc
mov
in
in
mov
imulb
xchg
test
stos
mov
fs
pop
loop
mov
adc
in
sub
and
call
adc
mov
add
jle
cwtl
stos
daa
loop
xor
pop
dec
ljmp
jne
loopne
xchg
dec
pminub
cmp
inc
aad
jae
inc
xchg
pop
je
popa
outsb
daa
and
lods
cmp
push
jae
push
insb
call
pusha
pop
mov
jnp
imul
pop
pop
cli
je
xor
jns
cmc
and
pop
push
xor
ljmp
imul
xor
or
jns
scas
pusha
dec
fildl
dec
lock
xchg
jae
or
jb
sbb
gs
adc
je
mov
test
push
dec
es
add
shl
cmp
jge
cmpsl
sarb
loope
sbb
cmp
inc
dec
sub
sub
dec
xor
loop
outsl
push
sub
mov
enter
adc
mov
imul
sbb
add
lcall
jnp
sub
pop
or
push
mov
mov
push
sbb
xchg
repz
fstl
pop
adc
or
jle
movsl
dec
xchg
hlt
mov
and
clc
lret
popf
push
icebp
and
mov
mov
pushf
fisttps
inc
jp
jb
out
add
jmp
push
loopne
lods
xor
lods
not
dec
mov
xchg
das
add
aam
inc
sub
loopne
inc
mov
cmp
in
add
jns
enter
mov
rolb
test
mov
repz
mov
cwtl
jbe
int
mov
jne
cwtl
xchg
aas
inc
inc
and
lods
sub
js
add
lods
cmc
xor
dec
mov
movsb
push
pop
or
jg
mov
loop
push
cld
dec
fcoml
sbb
ret
ss
repnz
mov
and
and
rcrb
ret
insl
cs
mov
sbb
push
xchg
mov
jmp
cmp
dec
push
sub
mov
mov
push
jae
sbb
lret
sbb
out
test
mov
insl
repz
adc
and
add
mov
js
cmc
in
dec
outsb
pop
dec
add
push
mov
lock
and
or
arpl
push
enter
and
lcall
pop
and
leave
pushf
sub
jno
lea
adc
or
das
fsubrl
cs
inc
sahf
or
sbb
data16
cmp
cltd
sbb
sbb
add
sbb
inc
test
lret
or
push
scas
sahf
leave
sti
rorl
sbbl
push
pop
cmp
and
xor
fneni(8087
pushf
xchg
dec
push
add
jmp
clc
stc
pop
int
lcall
pop
cld
scas
das
in
xor
ret
mov
mov
adc
orb
pop
or
xchg
fwait
push
push
push
ljmp
sub
rcr
sub
outsb
and
stos
or
cwtl
mov
movsl
inc
int3
dec
sbb
xchg
and
pusha
lods
aaa
push
leave
mov
mov
imul
sti
and
push
pusha
movw
or
mov
in
insl
jo
xor
pop
lock
sub
pop
sti
cmpsl
push
pop
je
and
pop
scas
add
jne
sub
jp
xchg
push
shll
jnp
mov
lret
inc
arpl
adc
xchg
mov
xchg
rorl
std
icebp
or
roll
sub
mov
xchg
lahf
push
lock
push
inc
out
daa
push
cs
notl
stos
repz
lret
adc
pop
jne
mov
lds
iret
sbb
push
sub
push
or
frstors
hlt
jnp
int3
inc
icebp
jo
movsl
inc
xor
xchg
sahf
xchg
push
push
lock
cs
sub
push
ret
pop
mov
decl
movsb
xor
call
mov
aam
dec
repz
call
pop
pop
or
dec
int
pop
and
mov
adc
test
stos
mov
and
fadds
push
sti
lock
mov
push
xor
in
mov
pop
cwtl
mov
pop
mov
xlat
xchg
out
sub
mov
test
movsb
dec
or
ljmp
jge
cmp
add
lret
inc
push
cmc
rolb
mov
addr16
movsl
repnz
popf
and
mov
mov
test
xor
sub
push
ret
inc
xchg
adc
loopne
cmp
jo
mull
icebp
mov
pop
and
rolb
dec
dec
fs
and
popf
imul
imul
daa
jle
sbbb
pop
cmp
dec
les
test
cmp
cli
loop
imul
mov
xchg
pop
push
mov
scas
mov
mov
dec
in
lods
gs
out
stos
cmp
pop
lcall
mov
daa
push
pushf
or
cmc
icebp
or
pop
lcall
and
mov
push
mov
mov
mov
and
xor
stc
ljmp
leave
xchg
adc
pcmpeqb
lods
stos
xor
movsb
or
rcll
hlt
adc
dec
inc
int
add
lods
cmpsl
fs
push
in
xor
inc
nop
shl
fisttpll
dec
pop
mov
into
inc
mulb
xor
lods
mov
add
mov
mov
pop
aas
xchg
pop
push
adc
mov
push
std
fildll
cmp
push
test
ss
sub
pop
bound
inc
arpl
incb
adcl
xor
sbb
jecxz
and
inc
sbb
aad
xchg
xlat
push
subb
jge
mov
repnz
xor
sub
popf
fnstcw
mov
test
pop
imul
jl
dec
movsb
fisubl
sub
mov
or
push
enter
lods
lret
xchg
mov
push
out
iret
sub
mov
stc
imul
icebp
in
movsl
pop
imul
push
fwait
sbb
jmp
xchg
sub
daa
sbb
cmp
add
outsb
mov
mov
jno
je
icebp
mov
cmp
ja
out
fwait
pop
dec
jo
popa
roll
sbb
lcall
cs
push
lock
push
cmp
sub
cwtl
sahf
or
pop
dec
and
add
adcl
inc
sub
leave
rolb
xchg
rcr
jg
mov
sub
xor
lcall
pop
imul
push
mov
movsb
daa
or
lods
popa
jmp
fsubrs
jne
mov
std
popl
and
fwait
shlb
rcl
scas
orb
xchg
ja
jno
cmp
xor
int3
cli
inc
insl
into
sbb
repz
negb
mov
and
xchg
leave
xor
bound
inc
and
fwait
inc
rcrl
inc
shll
daa
popf
popa
xchg
pop
lock
mov
cs
and
imul
dec
out
lret
xor
jae
xchg
inc
faddl
cmp
cmc
inc
mov
add
jo
sbb
inc
mov
in
sbb
jl
in
dec
mov
xor
dec
movsl
jl
cld
mov
test
mov
or
rcll
mov
scas
jns
xor
test
nop
mov
ret
mov
sbb
testl
std
push
push
icebp
nop
xchg
aaa
les
mov
pop
mov
fidivrl
notb
pop
fst
jmp
ret
leave
adc
imul
pop
mov
inc
mov
and
add
lea
mov
sbb
pop
fldt
enter
add
repz
mov
jmp
adc
in
dec
les
xchg
bound
or
shrl
bound
movsl
mov
aas
and
pop
add
rorl
or
std
lods
test
mov
adc
insb
in
scas
enter
cmp
xchg
mov
cmpsl
sbb
jg
mov
mov
cli
test
sbb
xor
sub
push
jg
push
sub
push
imul
popa
mov
outsl
cmp
movsb
movsb
in
pop
popf
xchg
pop
sarb
add
movsb
push
leave
push
sub
fidivrl
jne
lock
or
push
add
jl
xchg
addr16
pop
mov
mov
inc
mov
test
cmp
xchg
mov
lcall
pop
dec
push
or
ja
iret
sub
mov
push
das
pop
dec
mov
pop
enter
push
fwait
cltd
or
dec
in
test
sbb
fisubl
fsqrt
jmp
gs
xchg
ljmp
sbb
das
outsl
cwtl
fisubl
mov
sub
jge
sub
lds
xchg
lods
pop
jne
sub
pop
pop
repz
lods
and
andl
in
mov
out
popf
mov
cmp
cs
mov
imul
shll
and
stc
and
adc
ret
dec
imul
lds
es
pop
inc
mov
inc
test
xchg
mov
outsl
xchg
sub
rorl
shlb
ja
imul
ret
jb
out
fcompl
mov
inc
ss
gs
mov
leave
adc
inc
movsl
fwait
xchg
js
loope
sbb
mov
jbe
sub
ds
pop
sbb
sbb
std
ja
mov
jp
sub
cmc
dec
in
push
test
idivb
mov
sub
and
mov
mov
aam
fadds
dec
fdivrs
inc
push
jnp
pop
insb
mov
mov
adc
aad
rcrb
adcb
sarl
movsb
stc
push
lret
out
icebp
shlb
int
popa
lret
mov
add
jo
or
cs
mov
fs
adc
xchg
int
bound
add
std
repz
jl
repnz
jnp
shr
loope
xlat
lods
andb
repz
push
clc
inc
xchg
andl
inc
pop
dec
dec
insb
or
jmp
imul
imul
pop
ljmp
cmpsl
push
and
aaa
pop
daa
sub
gs
movsb
cs
test
jecxz
mov
mov
mov
and
mov
cmp
sahf
das
call
sbb
or
aad
cmp
lret
push
xor
push
fnsave
and
cmp
xchg
scas
cwtl
int
and
fisubl
in
or
xchg
and
rolb
push
into
sbb
imulb
lock
es
jno
movsl
lea
add
pop
cli
pop
movsl
movsb
or
xchg
imul
jmp
fldenv
adc
lahf
dec
jmp
orl
jmp
cmpsb
into
sbb
stc
sbb
mov
inc
rcr
insb
pushf
xchg
xchg
mov
cmpsl
mov
jp
clc
popa
aaa
ficomps
clc
xchg
rol
pop
stos
std
add
in
lret
jno
cmp
jmp
rcrb
sbb
push
add
call
aaa
int
icebp
add
sbb
or
push
inc
inc
pop
sarb
stos
adc
test
mov
std
jno
in
jne
or
mull
ja
into
nop
and
les
nop
hlt
inc
out
aam
movsb
adc
popf
add
aas
and
pushf
into
add
aam
push
out
adc
mov
jno
daa
dec
push
xor
fsubrs
mov
pusha
pushf
test
xchg
and
mov
adc
lcall
pop
push
sub
sahf
fxch
lret
loopne
outsl
dec
dec
popf
inc
push
and
xor
add
rcrl
repz
xchg
loop
xchg
movsb
fisttps
jl
lcall
int
aas
scas
and
dec
iret
cmc
cld
cld
mov
loop
lods
xor
xchg
movsb
sub
cld
sbb
dec
incl
mov
stos
sbb
mov
xchg
dec
mov
sbb
push
bound
cli
xchg
imul
je
push
movsl
sahf
hlt
dec
push
xor
fists
incb
add
dec
mov
fstps
test
inc
aas
test
adc
jnp
bound
cmpsb
sub
aam
ret
push
data16
sbb
int3
xchg
sbb
mov
sub
sbb
lods
sbb
in
mov
aas
add
cli
sub
push
sub
leavew
jmp
ret
jns
sbb
jns
fcompl
xchg
jno
pop
in
or
out
imul
mov
cmc
lods
mov
mov
into
xor
xchg
mov
add
cmp
call
loop
xor
push
sub
xor
jecxz
jl
and
ja
repnz
dec
pusha
and
cltd
and
arpl
in
orb
cltd
or
dec
push
jecxz
push
push
lock
pop
loope
inc
in
ficomps
mov
aad
mov
insb
dec
xlat
xchg
mov
cmp
inc
lods
movb
mov
mov
mov
mov
rorl
sbbl
ret
xchg
cmpsl
ss
pop
lock
cmc
dec
jg
test
dec
scas
cld
data16
and
in
sar
test
fldz
es
imul
mov
shl
repz
lahf
pop
jae
inc
out
leave
xlat
ja
mov
xchg
aad
inc
push
sarb
xchg
or
mov
mov
add
dec
scas
inc
inc
insl
mov
cs
stos
mov
in
push
xchg
cld
test
mov
push
mov
add
rorb
add
rcl
mov
daa
xor
push
jbe
out
repz
dec
lods
push
and
call
in
dec
into
lret
xchg
pushf
xchg
nop
xchg
add
popf
stc
sbb
ficoml
xor
scas
sub
mov
cmp
mov
leave
rorb
inc
aad
jnp
inc
push
repz
xchg
push
fmul
decb
xlat
lcall
lret
es
aam
scas
mov
inc
lods
hlt
pushf
fs
sti
xchg
sbb
push
push
pop
push
cmp
or
pop
dec
cli
mov
cmp
call
inc
sbb
cltd
ret
jecxz
push
mov
push
pop
test
push
cmp
ret
dec
xor
jo
repnz
mov
fs
out
mov
mov
add
mov
fimuls
or
popa
sbb
xchg
sub
pop
jae
dec
pop
xchg
ljmp
and
mov
out
adc
stos
out
dec
scas
negl
ljmp
nop
sub
mov
sbb
jbe
mov
push
std
out
out
mov
lods
lods
dec
inc
loop
pop
pop
popa
dec
das
jnp
test
add
dec
jnp
add
inc
movsb
mov
mov
mov
mov
mov
movsl
mov
testb
lods
xlat
xchg
hlt
pop
cli
pop
cmp
or
cmc
pop
rorl
stos
sub
outsl
shl
xchg
rcrl
cmp
cmpsl
loop
jge
cld
mov
int3
push
idivl
sbb
mov
or
das
jb
push
jns
nop
inc
cmp
outsl
mov
inc
pop
mov
xchg
pop
cmp
rcrl
lea
gs
push
icebp
mov
gs
push
cmp
out
shrl
fistl
push
xor
loopne
gs
mov
repz
mov
dec
xchg
inc
lret
data16
mov
inc
inc
int3
or
mov
int
inc
adc
xlat
pop
adc
cmp
push
aas
sub
jo
stos
test
push
pop
rolb
jne
pop
leave
push
cld
mov
mov
inc
incl
lcall
fcmovnb
cld
inc
test
aas
in
jbe
cs
add
ss
add
rorb
pop
imul
and
pop
jl
fdivrl
xchg
pop
insl
mov
mov
or
xchg
sub
notb
pop
sub
loopne
test
mov
push
push
adc
add
mov
xchg
mov
and
xchg
insb
push
cltd
stos
mov
hlt
scas
lret
pop
es
into
mov
imul
arpl
clc
pop
fisubrs
sub
mov
jns
pop
push
inc
stos
mov
daa
iret
clc
mov
dec
mov
arpl
sub
add
jmp
arpl
addr16
jg
adc
push
cmp
mov
push
pop
pushf
imul
sti
ret
call
xchg
cs
es
data16
xor
inc
stc
add
mov
fcmovnb
ret
lahf
push
mov
movsl
das
mov
cwtl
sarl
add
das
ficoml
pop
rcll
notl
leave
mov
sub
mov
je
cmc
push
and
fs
adcb
or
cltd
inc
into
in
repz
and
and
pop
out
sub
aas
insl
jb
xor
pushf
or
loope
out
shrl
jnp
popf
sbb
pop
cmpsl
test
jnp
std
rcr
es
jp
insb
jno
mov
jae
push
scas
xchg
mov
sub
jb
pusha
popf
divl
out
sub
dec
adc
daa
cmp
out
xchg
mov
test
jle
out
icebp
and
push
cwtl
clc
pop
mov
out
mov
iret
jge
jmp
mov
jb
stc
jg
mov
icebp
in
adc
pop
push
mov
sbb
dec
push
mov
sub
xor
jmp
fnsave
add
xchg
cltd
mov
inc
cmp
mov
xorb
xor
cmp
clc
and
sub
or
push
push
jmp
or
add
xor
ret
dec
push
aas
imul
cmp
add
inc
push
js
imul
lret
pop
outsl
cli
add
pop
imull
and
bound
jo
jne
sbb
and
jns
push
nop
xor
mov
pop
xor
lcall
es
sub
inc
subb
cs
imul
test
arpl
mov
negb
xchg
dec
mov
add
or
jecxz
std
mov
push
inc
rclb
mov
jne
jg
fs
jae
cmc
pushf
dec
jae
adc
jno
or
pusha
jmp
push
sub
lods
mov
cmc
inc
imul
sub
js
jg
lock
out
mov
shlb
inc
nop
loopne
pextrw
mov
pop
fwait
inc
imul
subl
lods
bound
shlb
leave
pop
into
sar
jo
imul
stos
fs
mov
sahf
cld
in
sub
loop
cmpsl
mov
push
shll
iret
clc
or
das
pop
je
push
mov
daa
loopne
out
aaa
push
arpl
test
shl
fisttpll
add
cli
push
cmp
in
inc
push
les
add
pop
mov
xchg
aas
or
mov
pop
js
xor
lret
mov
fadds
jns
jl
mov
and
dec
inc
push
pop
into
pusha
mov
mov
outsl
dec
dec
push
and
dec
jg
andb
jge
lret
xor
sbb
push
movsb
dec
fld
mov
sbb
lret
adc
dec
pop
mov
bound
cmc
mov
sti
cmp
movsb
lds
inc
or
add
loope
or
fildl
test
pop
sti
xchg
inc
sarb
dec
jns
cmp
sub
cmp
sub
dec
pusha
adc
icebp
xchg
push
in
lea
aad
jecxz
mov
push
sbb
jg
xor
push
and
xchg
mov
ljmp
sub
test
into
inc
xor
imul
push
and
cli
xor
pop
add
mov
clc
jb
xchg
mov
ss
xchg
push
roll
or
sub
sahf
xchg
sbb
aad
call
aas
or
mov
lahf
and
icebp
in
mov
pop
inc
xchg
mov
mov
mov
or
cmp
push
fsubl
jle
dec
lret
mov
add
xchg
jl
mov
js
cld
sbb
xchg
dec
ds
iret
loop
fwait
and
xchg
popf
jecxz
sub
lock
mov
mov
or
psadbw
mov
mov
xor
pop
movl
repz
mov
jne
cmpsl
sbb
push
enter
cmpsb
std
inc
jg
inc
movsl
push
and
pop
fwait
fistpl
stc
cmp
dec
stos
dec
movsb
out
popf
arpl
sub
xchg
xor
aaa
int
popf
test
xchg
dec
mov
cltd
push
xor
push
stos
push
sti
jns
int3
fs
daa
mov
call
sub
xchg
inc
rorb
xchg
sub
movsb
iret
push
adc
int
or
mov
inc
pop
xor
sub
pushf
pop
stos
insb
sbb
repz
ds
xchg
mov
in
jnp
data16
out
bound
jge
jb
fcoms
add
fisubl
movsl
and
sub
movsb
mov
test
adc
lock
add
leave
inc
inc
scas
xchg
jle
xchg
leave
cmp
into
fmulp
xor
and
and
lods
arpl
or
nop
rorl
clc
jb
out
cli
jb
cmp
mov
das
rcll
push
hlt
adc
sti
cmp
jae
out
in
aaa
fbstp
clc
popl
icebp
or
push
sub
sbb
fsub
loopne
in
test
pushf
push
mov
test
in
popa
pop
jmp
cmp
mov
ret
pushf
jp
mov
repz
cmp
mov
or
jno
pop
adc
jno
add
cli
mov
ss
int
jmp
scas
push
add
xor
inc
mov
movsl
addr16
add
les
ficomps
pushf
cli
shll
outsb
stos
scas
jle
pop
xchg
cmp
cwtl
in
jbe
push
daa
mov
sub
sarb
xlat
push
add
inc
lea
inc
xor
mov
add
xchg
mov
push
push
inc
in
fmul
test
mov
cwtl
or
ljmp
aad
bound
lret
daa
cmp
xchg
cltd
inc
fiaddl
icebp
push
les
sbbl
adc
imul
xor
lods
inc
decl
fstpl
jb
inc
icebp
and
xchg
rcrb
xlat
pop
imul
xchg
add
and
jae
mov
add
xchg
stos
sarb
sbb
std
frstor
movsl
dec
xchg
inc
push
or
xor
cmp
jae
push
subb
inc
mov
mov
mov
add
pop
lea
stc
mov
cltd
adc
outsb
pop
or
bnd
mov
and
or
inc
jae
rcll
adc
adc
fcomps
mov
dec
sub
xchg
adc
dec
adc
add
fwait
jg
sub
iret
js
adc
fnstsw
add
sub
lods
jbe
movsl
mov
nop
sub
ljmp
mul
push
std
cmp
arpl
and
pusha
aaa
jb
pop
and
andl
jg
arpl
ds
leave
imul
out
lods
cwtl
aam
es
smsw
loopne
sub
sbb
pop
scas
mov
mov
inc
jmp
test
arpl
pop
jp
mov
push
xor
cmp
in
lock
inc
xchg
mov
mov
aam
jmp
pop
pop
movsl
mov
mov
jl
enter
cltd
lcall
cmpsl
jo
mov
sahf
shlb
xor
popf
dec
xor
cltd
js
push
jecxz
inc
in
xchg
outsb
cmp
lods
in
sarl
sub
loop
dec
test
adc
fisubrs
jle
inc
cmpsb
inc
cmp
gs
imul
in
movsl
ret
push
das
cmp
pop
test
mov
and
cmp
loopne
mov
ret
xchg
mov
push
push
insl
dec
and
add
test
aam
adc
insb
dec
inc
fsubrp
test
fistl
sub
or
inc
pop
std
cmp
cmpsb
fsubp
add
mov
movsb
lods
cmp
mov
ds
fldl
xchg
adc
mov
mov
cltd
xchg
je
push
inc
add
and
push
jns
dec
fsts
leave
loopne
mov
shlb
icebp
xor
mov
fs
cmp
sahf
jge
out
mov
enter
jle
pusha
mov
xor
notb
xchg
test
aad
jmp
insb
jb
adc
ds
xchg
mov
dec
jp
sbb
loope
or
rcr
cmp
std
inc
push
lret
rcll
jl
nop
adc
lock
mov
pop
mov
clc
cmc
cmpsl
and
in
mov
scas
dec
int
es
ss
jmp
dec
ss
mov
jae
xchg
cmp
call
imul
stos
and
inc
push
add
mov
jb
mov
in
xor
cmp
pop
mov
adc
pop
inc
js
mov
in
fnstenv
mov
jbe
movl
xor
sub
aaa
test
xchg
sub
jo
xchg
enter
loope
mov
mov
dec
test
ret
fisttps
jl
into
dec
mov
jmp
adc
pop
pop
adc
rcrb
dec
or
popf
mov
lret
push
xchg
js
sbb
push
jg
dec
mov
aad
jnp
lock
mov
and
cli
mov
test
fldenv
imul
add
push
jbe
jl
rolb
pop
sti
mov
inc
mov
cmpsb
aaa
mov
push
es
push
inc
jle
push
pop
and
inc
jnp
sarl
jle
jae
shl
adc
enter
inc
sbb
je
cli
or
mov
push
imul
mov
mov
add
inc
cltd
in
dec
addr16
into
mov
inc
jmp
orl
sub
ficoms
pop
push
sub
test
stos
popf
lret
pop
fcompl
fwait
lods
adc
pop
jge
leave
push
or
ljmp
inc
scas
dec
clc
mov
fidivs
jl
aad
in
orb
lods
lods
xlat
movb
dec
lds
idivl
int
bound
ds
lods
cmp
jae
int
enter
out
dec
mov
xchg
sahf
jl
or
pop
lret
stos
push
sar
stc
ret
xor
mov
pop
push
mov
add
xchg
mov
push
or
lret
xlat
les
jns,pn
ret
and
mov
xor
push
xchg
mov
mov
jmp
push
in
and
pop
lods
icebp
inc
mov
daa
xchg
popa
add
cwtl
vpcmpeqb
xlat
inc
fsubrs
mov
dec
or
fwait
jle
in
xchg
pop
orl
loope
pop
sbb
aaa
jne
sar
rol
arpl
push
xchg
jge
adcl
jge
xor
push
scas
xor
push
and
pop
lret
push
cwtl
pop
adc
testl
dec
sbb
jmp
repnz
dec
mov
fcompl
popa
fyl2x
rcrb
jg
int
js
and
dec
push
or
push
cmpsl
popa
lds
ret
xchg
repz
adc
add
mov
aaa
add
push
sub
sahf
fldl
repz
dec
dec
adc
cmpb
push
xchg
jmp
push
call
mov
ret
aas
cmp
divl
and
push
int3
rolb
imul
clc
xor
jbe
pop
add
mov
sbbl
and
repz
xchg
add
mov
in
in
loope
cmp
stos
mov
mov
sub
inc
enter
xchg
and
mov
pop
push
mov
sbb
or
repnz
or
test
lcall
and
ss
repnz
mov
jae
mov
fstp
jns
mov
sbb
jmp
jmp
or
fisttps
pop
test
pushf
jmp
dec
jl
repz
adc
sbb
das
dec
cmp
data16
test
jns
addr16
mov
pop
fbld
add
std
out
cmp
iret
dec
sub
xchg
cmp
hlt
in
sub
cmpsl
repz
repz
lea
push
push
push
add
repnz
xor
push
mov
pushf
test
adc
lret
loopne
jne
cmp
sbb
pop
jl
divl
out
je
dec
add
cmpsb
dec
add
lea
adc
int3
in
sub
lahf
incb
jl
in
sarl
pop
xor
lock
xlat
inc
cmpsb
adcb
iret
push
das
adc
mov
dec
mov
outsb
movsl
popa
sbb
jnp
cmpsb
xchg
sbb
sub
icebp
ljmp
dec
pop
push
add
aad
dec
mov
out
pushf
inc
xchg
cmp
fdivrl
sub
pop
xchg
sub
mov
sub
gs
jno
xchg
stos
lret
push
pop
pusha
xchg
or
jmp
mov
sti
loope
mov
dec
aas
dec
pushf
jnp
sub
lea
cmc
or
mov
mov
std
idivl
pop
inc
js
add
scas
cld
js
ja
push
xchg
inc
mov
shr
mov
and
jg
inc
icebp
and
mov
inc
push
lea
xor
stos
xor
or
outsl
dec
cmp
mov
test
push
inc
mov
mov
sub
nop
dec
sbbb
inc
aas
stos
or
ja
test
xchg
sub
sub
cli
hlt
inc
out
cs
push
repz
mov
mov
mov
cmp
imul
or
nop
cld
dec
testb
out
add
jmp
and
add
psubq
and
call
cmp
sbb
xor
repz
push
or
xor
push
mov
sub
push
jne
mov
jnp
sarb
push
sbb
mov
pop
mov
in
xchg
sub
ret
pusha
or
stos
jbe
xchg
adc
aad
mov
mov
enter
pop
xchg
pop
fnstenv
mov
and
into
les
jb
gs
ja
mov
pop
push
mov
mov
push
push
push
xchg
in
arpl
sbb
clc
shl
ja
pop
sbb
or
fabs
test
pop
outsb
addr16
clc
jge
cmc
in
cmp
push
sti
daa
insl
pop
mov
lahf
xor
outsl
mov
dec
ss
lods
and
add
nop
cmpsl
stc
fsubrl
je
xor
or
lret
sub
leave
iret
cmp
mov
cmc
int3
rorb
dec
and
rol
popf
sbb
xchg
outsl
fmul
and
int
rcrb
ss
push
stc
loope
add
loope
jbe
push
int
aad
xchg
cmpsl
aad
xchg
jg
sbb
test
inc
mov
movsl
sub
in
xor
call
cmp
aas
call
jle
mov
sarl
mov
mov
filds
jb
xchg
ficoml
cmpsb
adc
add
cmpsb
sbb
push
jg
xor
push
dec
mov
xor
mov
add
push
xor
data16
rclb
push
outsl
or
xchg
mov
in
fists
es
dec
xchg
inc
mov
push
mov
sbb
xor
inc
push
les
into
mov
enter
adc
fwait
sbb
cmp
movsb
mov
test
mov
pop
fcmovb
lods
jne
insb
mov
cwtl
lahf
sub
sub
sub
aad
mov
cltd
xor
popa
fisubrl
orb
push
jae
arpl
rcrb
int3
addr16
std
fsts
push
add
out
sbb
sbbl
lea
jbe
adc
rorb
out
jnp
hlt
and
test
cmpsl
aad
fstps
cmp
gs
call
in
adc
mov
je
jo
gs
or
adc
add
stc
shrl
sub
xor
or
sub
mov
sbbb
add
je
cs
add
loop
cld
mov
xchg
jl
mov
cmp
add
pop
jle
shrl
sub
adc
out
adc
jg
or
and
push
cmp
nop
mov
insb
sub
cmp
addr16
lcall
bound
add
hlt
push
sbb
movsb
sbb
sub
inc
popf
push
dec
mov
mov
addr16
sub
loop
jmp
xchg
dec
icebp
and
cs
adc
inc
pop
aam
mov
test
cmp
or
bound
xor
push
jle
sub
faddl
jecxz
xorb
bound
xchg
dec
out
push
mov
test
and
mull
add
pop
lret
nop
or
sbb
mov
adc
rcrl
inc
and
jp
and
int
xchg
iret
daa
jb
xchg
lcall
aas
dec
arpl
sahf
mov
mov
or
pop
lea
xor
in
in
dec
leave
mov
dec
jp
pop
cwtl
ja
fiaddl
push
jbe
call
test
dec
and
cmp
sub
clc
cltd
aad
inc
dec
pop
cmp
fistpll
das
out
rorl
sbb
hlt
push
fs
les
pusha
popa
daa
mov
adc
cmp
jp
adc
lret
push
fsubrs
sbb
add
hlt
xor
aaa
idivb
ss
insl
mov
inc
sub
jl
cmp
stc
test
mov
addr16
xchg
and
out
add
mov
fwait
gs
andb
mov
lods
js
jp
gs
push
aas
outsl
popf
fnstcw
imul
sub
lcall
jno
bound
mov
cltd
mov
xor
mov
cmp
mov
or
out
xor
sti
add
shl
aad
or
pop
lds
add
mov
repnz
adc
xchg
lahf
mov
movsl
sbb
xchg
aaa
mov
orb
stc
into
scas
addr16
into
sub
add
fisubl
mov
lock
or
inc
cmpsl
mov
sub
test
icebp
adc
insb
jbe
mov
sbb
dec
aaa
in
mov
push
jne
mov
mull
inc
outsb
push
inc
dec
rcr
xor
fistpll
imul
cmpb
push
mov
xchg
xor
in
dec
stc
inc
clc
xor
pop
lea
xor
test
lock
test
mov
mov
aam
fdivs
repz
lahf
cmpb
mov
clc
bound
cmp
pop
sbb
insb
push
scas
je
jnp
mov
or
icebp
fimull
jmp
push
in
insl
movaps
jae
fnstsw
inc
jmp
lcall
cmp
int
insl
iret
or
lcall
xchg
inc
xchg
in
sbb
ljmp
xchg
aad
aad
fdivrl
and
dec
lret
jmp
test
mov
cmp
inc
daa
stos
push
mov
ret
mov
xor
ja
xchg
sahf
pusha
jb
inc
pop
push
ja
das
jp
insl
mov
cld
lea
pushf
into
xchg
mov
push
push
adcb
jge
scas
push
and
inc
scas
outsb
flds
addr16
add
test
inc
jbe
loope
mov
test
shll
daa
je
push
out
sahf
jns
fwait
jl
jecxz
bswap
addr16
arpl
inc
lea
sbb
lar
sub
cmp
and
inc
dec
fdivs
cmp
jl
test
xchg
pop
inc
adc
pop
jns
into
fdivs
enter
jge
push
mov
test
jbe
mov
imul
popf
gs
insl
incl
mov
add
jle
jge
mov
fs
sti
cmpsl
sbb
lods
push
fiadds
mov
aam
xchg
pop
outsl
push
std
dec
sbb
cwtd
lods
into
xor
cltd
test
xchg
or
jle
push
scas
test
xchg
fcmovnu
cmp
sbb
lret
movsb
test
popa
addl
push
mov
add
aad
pushf
lods
out
mov
rol
pusha
cmp
inc
popa
ret
fldln2
jl
jnp
dec
mov
mov
fisttpll
dec
adc
jno
push
data16
mov
and
leave
cs
mov
fdivrs
int3
pop
pop
push
lret
xchg
pop
ja
jb
dec
in
ret
lcall
and
cmp
out
xor
in
inc
js
fcomps
push
iret
sbb
and
push
cmpsl
jmp
pop
test
adc
fdiv
mov
xor
lock
adcb
shrd
inc
lods
adc
pop
xchg
mov
xchg
pop
cmp
int3
push
lret
lods
test
stos
repnz
nop
and
out
jne
and
inc
xchg
push
sbb
cwtl
add
mov
lods
fs
fwait
dec
test
rolb
push
stos
dec
in
add
jp
mov
mov
jmp
clc
mov
lahf
faddp
xor
inc
dec
movl
inc
or
in
add
xchg
out
rclb
jo
es
aaa
test
and
xchg
fistl
add
and
stos
and
fisubl
pop
jne
sub
frstpm(287
mov
test
pop
cmp
ja
fistps
push
cmc
fbstp
jl
push
lea
inc
xchg
jmp
xchg
inc
inc
mov
and
lods
or
repz
lret
adc
bound
xor
insl
push
sbb
push
and
pusha
mov
jo
sbb
dec
js
cmp
mov
jg
or
sbb
sbb
popw
sub
mov
pop
sub
rolb
add
call
sub
adc
sub
ret
divl
movsb
mov
in
in
mov
or
jle
jge
outsb
cmp
hlt
pop
dec
inc
in
dec
aad
pusha
adc
call
and
stos
popa
mov
imul
lcall
repnz
cmp
fldt
aas
lret
gs
jl
mov
xchg
lods
or
xchg
movsb
nop
cmp
xchg
push
jg
add
add
xorb
popf
push
cmovnp
xor
sahf
xor
sub
mov
jecxz
adc
push
sbb
cli
pop
push
fdivr
loopne
push
out
add
xchg
mov
xor
xlat
std
cmp
iret
jmp
cltd
sbb
imul
icebp
xorl
fdivs
test
je
lds
mov
cmp
pop
lock
fmulp
hlt
movsb
movsb
jb
sarl
lcall
jp
hlt
inc
sub
dec
jg
sbb
insl
mov
rclb
pusha
sbb
sub
sbb
adc
sub
leave
sub
xchg
incl
mov
cmc
in
dec
es
inc
inc
xor
xor
and
xchg
adc
arpl
pop
jae
mov
cmp
cwtl
dec
pusha
sbbl
add
out
push
sbb
pushl
outsb
pop
mov
lahf
push
mov
jb
pop
sbb
out
jl
cmp
movsb
mov
push
stos
nop
lods
in
repnz
xchg
jmp
fnstsw
mov
cmp
mov
push
cld
mov
aam
call
sub
mov
mov
adc
imulb
push
clc
divb
lahf
mov
jmp
xor
mov
rclb
adc
jmp
jae
xchg
or
mov
xchg
dec
push
bound
cmp
popf
push
fisubs
fld
test
out
jne
lds
inc
fs
mov
loope
mov
sub
sahf
fsubs
add
enter
cmpsb
and
adc
cwtl
xor
iret
rorl
jecxz
xor
jns
or
xor
xor
int3
jo
dec
sti
lret
push
aam
inc
insb
lock
out
test
jecxz
into
test
cmpsl
dec
ja
rcl
mov
or
xor
and
out
rcrb
push
dec
cmpsl
xchg
mov
mov
push
nop
lahf
xchg
xchg
xchg
ret
and
dec
add
inc
dec
test
mov
lods
jp
rorl
push
inc
mov
jns
or
test
idivb
xchg
xchg
and
xchg
jp
lret
imul
xchg
sub
mov
notb
jnp
add
notb
out
in
add
popf
push
fldcw
xchg
stos
mov
fistpl
lcall
cmp
fsts
lcall
sub
push
fildll
inc
stc
jecxz
mov
push
adc
repz
xchg
jb
fwait
js
sbb
pop
pop
ds
sub
cmp
and
out
push
inc
cwtl
stos
pusha
sub
push
call
insl
xchg
push
dec
sbb
je
hlt
adcl
in
jecxz
insb
xchg
xor
aaa
in
mov
je
jge
mov
aam
and
lods
jge
jmp
rol
mov
cltd
mov
call
push
push
adc
dec
cli
add
ss
xor
sbb
iret
push
jl
xchg
jne
in
loopne
and
cmp
repz
pop
dec
add
dec
sti
mov
or
gs
fidivrl
das
testb
movsl
pop
sub
bound
imul
lret
pop
adc
ret
shrl
out
xchg
rorb
int
in
shl
and
mov
shrb
dec
push
and
push
pop
mov
pop
dec
sarl
stos
sbb
sbb
or
and
pop
add
pop
inc
mov
pop
sub
dec
arpl
aaa
jg
aas
adc
in
pop
pop
call
jmp
je
jne
pusha
lods
sbb
or
inc
cmpsb
mov
jle
das
cmp
jge
popf
jp
data16
pusha
out
mov
je
ret
daa
xchg
test
jno
out
push
dec
push
add
inc
arpl
push
cmp
mov
xor
sub
pop
sbb
push
out
add
test
enter
sub
or
add
pop
inc
repnz
fld
mov
mov
sti
outsb
clc
push
cmp
jb
in
jbe
lds
lea
xor
in
dec
cmp
dec
push
adc
test
mov
adc
stos
cmc
arpl
push
lahf
lods
scas
out
scas
hlt
cmp
or
adc
popa
mov
push
ja
cmc
adc
popf
or
loopne
fsubp
mov
dec
mov
lea
dec
jmp
cmp
and
ss
mov
mov
fbstp
mov
push
pusha
inc
mov
int3
mov
scas
push
out
xchg
jbe
inc
and
stc
mul
inc
testl
int
rcll
pusha
sbb
into
loopne
in
xchg
inc
popf
xor
xchg
dec
shlb
xchg
mov
daa
pop
push
outsb
push
jno
fisubs
rorl
inc
ficompl
cmp
shlb
mov
mov
mov
fisttps
mov
adc
mov
xchg
outsl
stos
lahf
mov
lock
jl
sbb
sub
shr
arpl
lods
pop
scas
push
hlt
mov
fstps
mov
std
mov
aad
inc
lcall
ret
scas
cli
or
out
jge,pn
mov
xlat
xchg
jb
cltd
stc
mov
and
inc
mov
test
shrl
push
sub
sub
jle
inc
xor
jno
mov
std
lret
sbb
test
dec
xchg
or
jmp
mov
out
outsb
mov
fidivs
cmp
and
in
shll
into
pminub
jns
xchg
adc
leave
outsl
lods
mov
addb
sbb
mov
add
out
ds
inc
adc
adc
push
xor
adcl
cmc
mov
push
inc
xchg
xor
idivl
insl
mov
jb
outsb
jmp
loop
es
dec
mov
mov
mov
mull
mov
sub
pop
pushf
test
rorl
mov
push
mov
pusha
iret
enter
sub
dec
icebp
fsts
in
popf
mov
add
js
jmp
ret
fcmovbe
jne
push
fisubrs
jge
scas
cmp
push
mov
std
cs
fimull
jae
sub
adc
aas
xor
and
ljmp
add
push
je
enter
cmp
pop
jnp
test
in
inc
lods
pop
cmp
fimuls
mov
hlt
push
shrl
jg
mov
mov
pop
lods
xorb
xchg
xchg
lcall
push
mov
test
add
pop
push
jae
sbb
int3
icebp
and
jae
out
xchg
sub
clc
dec
nop
sub
lret
jecxz
or
test
cs
fisubrs
lahf
and
mov
lcall
mov
ret
lahf
cmp
ljmp
stc
adc
inc
pusha
add
jg
popa
je
mov
inc
fldcw
push
scas
cwtl
mov
adc
jmp
sub
pop
mov
lock
jg
movsl
jae
pop
add
inc
inc
lods
bound
sbb
jnp
mov
inc
lea
cmp
mov
lods
dec
mov
cmpsl
add
iret
fs
mov
loop
int
push
push
mov
mov
cmc
pop
dec
repz
punpckldq
add
outsl
lods
movsb
lds
xchg
mov
fsubs
or
sti
dec
pusha
add
inc
xor
xchg
add
adc
in
nop
ds
mov
and
stc
pop
pushf
test
xor
mov
jne
add
dec
leave
sub
and
pop
or
adc
mov
test
xchg
add
gs
mov
mov
add
int
cmp
or
dec
mov
pop
dec
jbe
aad
push
hlt
adc
xorl
mov
jb
fsts
mov
mov
in
stos
mov
sub
cs
insb
jnp
test
shll
in
push
sub
or
lods
mov
or
add
sub
jmp
jae
addl
xchg
outsl
dec
dec
mov
or
movsb
insl
int
jecxz
xchg
jp
jge
stos
das
out
adcl
xor
test
cld
ret
xchg
push
pop
dec
pop
scas
add
mov
adc
in
dec
push
xor
pop
faddp
cmp
fadds
notl
test
lret
or
in
lcall
dec
dec
rorb
sub
push
jmp
adc
mov
dec
fwait
bound
daa
inc
inc
mov
pop
scas
in
mul
ss
fcmovu
movsb
pop
and
xchg
stos
mov
jns
mov
inc
cmc
aaa
js,pn
in
in
imul
jl
popa
std
push
fisttpll
jae
enter
fiadds
jno
mov
xor
mov
testb
negb
ss
xor
push
and
pop
mov
cmpsb
xor
rclb
sbb
fiadds
leave
inc
ja
sub
pop
sar
insl
cltd
cmp
jle
push
cmp
jp
stc
clc
dec
mov
outsl
insb
mov
rcl
pop
mov
add
in
es
lds
mov
or
lret
sub
sub
mov
js
cmp
cmpsb
ljmp
mov
movsb
cltd
loopne
stc
xchg
xchg
fcoml
xchg
ret
insb
sub
int
fistps
cli
sub
push
cmp
add
xchg
xor
jae
jae
clc
pop
add
shl
das
pop
popa
dec
popf
lea
out
je
ljmp
pushf
xchg
fwait
cvtps2pi
mov
in
pop
jns
hlt
dec
ret
cwtl
imul
add
aaa
sbb
clc
sbb
sbb
fsubl
addr16
cmp
inc
mov
shlb
repnz
popa
mov
negl
push
inc
in
add
sub
lock
loope
sbbb
cmp
shrb
cwtl
mov
jno
mov
pop
repz
adc
shrl
ficomps
push
xor
sub
cmpsl
addr16
adc
outsb
outsl
xchg
pop
add
mov
jno
add
scas
push
mov
inc
mov
sub
ret
aaa
dec
adc
enter
dec
jne,pn
movb
jnp
ret
js
andnps
jmp
inc
push
addl
rclb
scas
aam
mov
aam
mov
sti
pop
add
xlat
cmpsl
repnz
dec
in
decb
aas
dec
xor
das
ret
inc
inc
movzbl
xorb
jmp
cmpsl
jge
xchg
out
insb
call
scas
pusha
insl
div
fidivrs
test
mov
lods
pop
lcall
push
sti
loopne
mov
fsubp
lods
mov
mov
push
push
loopne
loopne
cmp
neg
mov
or
fcmovbe
sub
ljmp
lods
mov
jb
clc
or
mov
enter
sub
cmpsl
mov
int
ljmp
pop
es
mov
cmp
gs
pop
mov
pop
or
imul
sub
es
bnd
sub
or
arpl
insl
pushf
sub
sub
mov
popa
inc
shlb
pop
jbe
out
scas
movsb
pop
pop
jle
dec
aas
les
or
inc
iret
mov
pushf
orb
cmp
ljmp
int3
lods
neg
lcall
int
aaa
imul
cwtl
in
lahf
imul
lock
mov
push
mov
dec
sbb
mulb
pop
sub
pushf
sarl
stos
int
push
nop
jae
fcoml
divl
pushf
and
lds
and
cld
lcall
dec
mov
stos
addr16
cltd
cmpsb
gs
jge
mov
or
push
ret
cld
add
or
push
stc
psubq
jp
sub
loop
cwtl
add
and
rorb
cltd
orb
inc
rcll
aaa
lock
clc
mov
icebp
or
hlt
or
das
xor
mov
xor
in
in
jecxz
xchg
and
ss
rcrb
fsubrs
jno
inc
jp
or
shr
push
hlt
daa
and
lods
cmp
ja
push
repz
cmpsb
jmp
add
test
dec
xlat
pop
orl
rcl
add
mov
nop
std
paddusw
and
add
shlb
push
ror
scas
sub
push
mov
insb
add
subl
pop
pop
dec
or
or
xor
lret
loop
lcall
outsl
aas
and
push
jmp
nop
popf
jge
xor
jbe
mov
lods
outsb
and
jp
mov
repz
enter
pop
jo
daa
xor
xchg
pop
into
adc
push
push
mov
push
loope
sarb
adc
mov
sbb
cmp
mov
dec
aas
inc
test
sbb
dec
pop
push
add
test
mov
and
sbb
out
fsub
cmc
push
jb
pop
in
sub
add
push
imul
bound
bound
mov
fildll
fistps
sar
test
sbb
jg
mov
je
addb
js
sbb
dec
mov
out
aaa
imul
scas
add
xchg
cmpsb
int3
call
addr16
leave
pop
mov
sub
mov
std
cs
jnp
mov
mov
repnz
mov
cltd
aas
mov
repz
pop
xor
jl
jbe
lea
enter
mov
dec
cmc
add
rcl
sub
and
push
movsb
lock
mov
popf
cmp
add
push
xlat
mov
aas
add
cld
leave
push
fsubrl
lret
cld
pop
mov
pushf
mov
cmp
iret
orl
out
jle
sbb
push
fld
sbb
adc
jle
daa
outsl
ljmp
mov
iret
mov
and
loope
mov
add
jb
xchg
cs
fstl
fs
out
js
js
enter
pushf
push
mov
push
adc
xchg
mov
call
scas
nop
mov
adc
adc
loopne
aad
pop
sti
int
cmpsb
jb
fwait
arpl
mov
shlb
lock
xlat
jecxz
or
add
imul
sub
imul
divb
lods
push
jp
cld
or
adc
inc
dec
cmp
push
jb
fidivrl
cmp
push
fwait
pop
jns
or
cltd
rcrl
mov
loop
mov
scas
and
ds
sbb
add
nop
sub
rcrl
sbb
sbb
daa
add
out
cwtl
leave
imul
imul
pop
gs
rolb
js
in
inc
push
and
pop
testl
jns
lds
push
push
out
in
inc
lret
jno
mov
fs
std
sbb
push
xor
ljmp
scas
mov
mov
lahf
or
loop
and
mov
xchg
xor
lods
pop
xchg
mov
add
jno
popf
jmp
or
ds
hlt
and
or
lods
cli
xor
inc
push
push
sbb
mov
repnz
imul
mov
mov
sbb
rcrb
jecxz
xor
adc
cmp
jmp
cmpsb
cwtl
cmp
inc
out
adc
mov
notb
cmp
ds
je
jecxz
pop
push
dec
cs
sub
movsb
lret
test
incl
nop
add
icebp
push
push
xor
inc
xchg
nop
mov
jnp
mov
repnz
sub
mov
or
loopne
movsl
movb
cmp
in
inc
jns
mov
arpl
adc
push
pop
insl
sti
sbb
add
ret
adc
jge
sbb
dec
vmread
add
ljmp
cmp
dec
xor
les
cmp
push
and
jmp
testb
sub
or
dec
jb
and
inc
cmp
dec
cmp
cmc
outsl
add
iret
ficoms
fldt
mov
int3
fildl
fidivrs
fwait
sarl
jns
pop
adc
pop
cs
pop
xchg
lods
shll
jecxz
js
pop
imul
out
push
adc
test
pop
out
stc
fidivl
jmp
xor
sub
fcoml
cmp
xor
fwait
test
mov
stos
fistps
mov
or
sar
xor
inc
push
das
xor
cmp
or
shll
in
loopne
adc
ljmp
test
or
xor
push
ss
cwtl
sbb
into
test
aaa
pop
mov
test
inc
stc
dec
cmc
sahf
xchg
imulb
dec
ljmp
fcompl
sub
pop
sub
in
xchg
inc
fwait
pop
push
stc
xchg
lods
hlt
insb
js
pop
mov
aam
xor
mov
bound
add
fcmovnbe
test
pop
push
jg
pop
lds
inc
enter
adc
xlat
test
xchg
lods
add
xchg
and
sbb
loope
hlt
cmp
cld
pop
cmpsb
dec
nop
or
add
push
dec
mov
jg
int3
gs
mov
lods
scas
xlat
sbbl
dec
or
out
test
js
mov
add
add
add
mov
xor
inc
sbb
jno
add
add
push
fisubrs
mov
into
icebp
nop
imul
adc
add
inc
push
cmp
aad
push
add
add
add
pop
mov
nop
add
movl
pusha
push
jae
daa
mov
iret
inc
int
pop
sarb
cld
dec
mov
xor
nop
rol
dec
arpl
test
int
dec
jecxz
mov
ud1
add
movl
add
add
mov
mov
push
inc
mov
add
add
andl
add
add
andl
add
add
andl
add
add
mov
and
insl
add
cmp
push
pop
jge
iret
pusha
pop
push
mov
inc
ret
jge
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
nop
dec
inc
add
inc
push
push
add
pop
push
jns
ja
or
pop
js
push
mov
pop
push
je
cmc
pop
cmc
nop
cmp
push
movzbl
sub
push
cltd
pop
jnp
push
je
xor
pop
push
xor
pop
test
push
jo
push
add
pop
pop
clc
test
jnp
push
ja
rol
pop
push
push
pop
pop
push
inc
pop
or
jne
test
rol
je
push
jae
test
pop
stc
loop
pop
cmp
nop
push
push
push
push
pop
pop
pop
pop
add
jae
push
push
push
add
pop
pop
cld
jmp
adc
adc
inc
fidivs
push
cmp
das
push
lahf
adc
fiaddl
je
std
popf
sub
out
test
pusha
ja
jae
xchg
filds
stc
in
adc
addr16
pop
and
lea
mov
in
xlat
cmp
jo
cmp
lds
sbb
dec
mov
lods
rorb
xchg
dec
sbb
or
pop
jge
xchg
xchg
test
jge
jb
push
test
pop
jge
nop
push
movzbl
dec
inc
je
push
xor
pop
clc
or
inc
dec
jl
and
test
or
xor
or
push
add
pop
sub
jbe
jl
sub
jnp
jle
test
jl
shl
xchg
jge
xchg
clc
nop
loop
pop
jmp
mov
es
not
mov
pop
out
das
mov
dec
mov
scas
in
loopne
xchg
es
adc
orl
in
jns
xor
xchg
inc
fisubrs
loope
and
cltd
lahf
push
mov
mov
push
inc
ret
ficoms
iret
xchg
mov
cltd
push
arpl
orb
pop
mov
out
sbbl
repz
mov
faddl
fimull
push
jnp
jmp
dec
lfs
mov
pusha
mov
cmp
sub
fisubrl
bound
lcall
xor
fcmove
mov
xorl
cltd
mov
ret
xlat
or
movsb
bound
mov
imul
sahf
push
sbb
xor
pop
push
xchg
dec
in
cltd
sahf
pop
adc
sub
popf
loope
lcall
push
pop
xchg
jae
mov
cmp
test
xchg
enter
inc
arpl
mov
mov
or
leave
mov
dec
adc
or
or
sbb
sub
pop
mov
pop
push
xor
icebp
add
loop
jg
js
pop
fidivrs
stc
add
cmp
inc
test
or
data16
jl
addr16
jecxz
test
popf
pop
inc
aas
dec
xor
or
std
jnp
insl
inc
or
mov
pop
sti
dec
jmp
xchg
and
in
out
push
sub
xchg
cmp
pop
aaa
jmp
stos
pop
sub
negb
jg
jecxz
leave
stos
cwtl
push
popf
inc
cmp
mov
stc
push
cmpsb
jle
mov
sti
pop
imul
mov
xor
sub
iret
rcrb
lock
pop
push
or
sbb
xlat
sub
ja
cli
arpl
pop
jne
int
int
or
adc
xchg
imul
and
pop
push
dec
mov
in
cmp
into
shrb
add
lods
cwtl
fsubrs
cmp
repz
jge
das
negl
test
xor
xor
sbb
ret
in
inc
mov
mov
mov
and
add
loopne
lcall
dec
sbb
mov
gs
sub
sbb
cmp
add
add
add
pop
add
push
ret
and
out
mov
leave
xor
jecxz
ret
mov
mov
xor
mov
inc
cmp
jl
pusha
js
inc
movb
add
lods
pop
pop
cmp
icebp
xchg
rolb
add
ja
mov
sar
clc
pop
mov
cmp
sti
into
mov
inc
adc
es
std
cmp
fldt
cmp
in
pushf
bound
lock
dec
icebp
sbb
adc
dec
pop
sbb
sbb
sub
insl
popf
sbb
into
rclb
les
test
test
sahf
lods
mov
pop
xlat
fistps
fadd
xor
pop
sti
mov
or
cmpsb
daa
xchg
in
rcl
aas
fdivrs
aam
mull
push
jg
mov
fdivl
mov
and
lods
inc
or
adc
add
mov
pop
lret
dec
push
jge
xor
sbb
stos
mov
sahf
xor
mov
test
jge
xchg
lret
sbb
or
lcall
fcoms
pop
mov
out
mov
jp
aam
sti
jae
pop
push
mov
and
pop
aad
inc
jo
lods
jns
xor
add
mov
sahf
add
call
lods
mov
lods
and
cmp
pop
or
jp
fbstp
sbb
cli
test
sahf
shrl
adcl
pop
iret
out
push
pop
and
pop
cs
xchg
sbb
sbb
call
and
insl
fnstcw
pop
xchg
fildl
and
call
xchg
das
subb
sti
sbb
add
jl
adc
add
sub
mov
sub
sbb
fiadds
mov
push
mov
jnp
das
push
jb
popf
jg
iret
xchg
mov
and
inc
mov
dec
push
jo
shlb
outsb
in
je
rolb
mov
pop
cmp
inc
push
push
add
mov
fs
fldt
or
hlt
mov
pop
mov
mov
dec
and
xor
fs
lods
repz
mov
push
scas
lods
mov
dec
scas
out
lock
mov
lea
jb
ret
subb
and
cmp
xchg
adc
test
xchg
pop
xchg
add
imul
hlt
sbb
push
mov
mov
cltd
add
enter
add
mov
stos
inc
add
mov
out
or
iret
or
pop
mov
push
arpl
mov
sahf
or
add
add
jg
inc
ret
mov
jbe
add
adc
jp
xlat
jo
fnstcw
inc
dec
add
pop
icebp
mov
and
sahf
pop
adc
sub
push
inc
pop
clc
mov
and
push
jge
movsb
mov
lret
mov
or
mov
xor
and
dec
cmp
cmpsb
cmp
adc
sub
sub
xor
dec
pop
push
xchg
push
cli
test
fwait
dec
xor
arpl
cmpsb
fldcw
bound
pop
inc
aam
push
push
call
rcl
sub
lsl
add
sti
xchg
sub
scas
sbb
push
pop
xlat
mov
imul
add
addl
push
in
test
add
add
push
xchg
push
push
call
mov
inc
mov
pusha
fdiv
cmp
mov
push
cltd
bound
mov
icebp
lcall
fnstenv
add
je
iret
fstps
jmp
mov
push
cmp
cmp
outsb
dec
add
subb
and
daa
out
das
out
pop
mov
int3
jge
and
movsb
inc
rclb
xor
int
push
push
shll
ss
aam
pop
outsb
mov
inc
mov
notl
adc
jnp
push
fwait
add
inc
push
mov
dec
imull
mov
into
imulb
pop
stos
loop
out
inc
outsl
hlt
pop
xor
aam
aas
das
xlat
cmp
scas
xor
stos
adc
js
add
mov
lock
xchg
out
stos
mov
mov
je
mov
bound
or
add
cmc
sub
xor
inc
es
lock
pop
mov
cmc
add
lods
push
xchg
lret
add
xor
inc
sbbb
sbb
xor
fildl
popf
xor
xchg
dec
jle
jnp
xchg
daa
rcr
fcoms
pushf
popa
sbb
dec
push
or
leave
inc
dec
sub
js
cld
cmp
mov
xor
in
leave
pop
or
in
jae
or
jg
mov
push
aas
mov
push
mov
cmp
pop
or
add
add
shll
add
add
jl
inc
ret
add
inc
sarb
jnp
xor
xor
add
ss
divl
aad
rcrb
push
add
inc
rcrb
fmuls
lds
push
test
inc
les
and
xor
arpl
movsl
add
or
dec
in
cld
icebp
imul
sti
sahf
divb
pop
push
pop
push
lock
adc
mov
xor
xchg
out
mov
dec
push
out
dec
test
dec
in
sti
dec
xor
xor
jns
add
xor
mov
nop
push
pop
dec
jbe
push
xchg
lcall
cmpsb
pop
icebp
pushw
jno
cmp
push
inc
aam
fwait
adc
sub
and
pause
ret
or
lret
jl
xlat
or
cmc
adc
xchg
add
jmp
fs
and
in
loopne
xchg
adc
mov
lcall
push
fdivrs
sbb
mov
fs
jbe
jg
adc
xchg
or
loop
in
cmp
and
and
les
xchg
arpl
lret
push
in
jae
xor
mov
rcrb
in
jg
mov
adc
jg
icebp
jl
jl
fwait
xchg
fildl
and
call
xchg
das
subb
sti
sbb
add
push
pop
mov
mov
sub
pop
xchg
js
jmp
add
push
and
add
jbe
fisubs
or
ljmp
jns
pop
add
adc
inc
sar
add
xor
or
jae
xchg
aas
jle
push
or
add
jnp
adc
add
fwait
and
data16
add
cmpsb
add
mov
jl
or
pop
rolb
mov
data16
push
sbb
xor
fbld
fcom
sbb
out
xor
das
sub
cmp
repnz
mov
push
lcall
repz
xor
jmp
push
push
sbb
lods
js
xchg
into
add
mov
adc
push
fldcw
bnd
push
jae
sbb
lret
fidivrs
inc
sbb
daa
test
lret
xchg
sub
mov
leave
orb
add
jb
xor
cmc
push
clc
fisubs
dec
mov
mov
xlat
cmp
fs
fisubl
pop
daa
push
push
dec
mov
or
mov
push
mov
jae
jnp
xor
jnp
aam
adc
ret
iret
mov
adc
lret
add
jne
xchg
out
mov
push
and
push
xchg
lcall
leave
push
inc
mov
push
test
and
inc
lret
mov
insl
stos
pop
sti
dec
loop
outsb
cmp
jle
xchg
sti
pop
sub
cmp
push
push
mov
frstor
mov
pop
sub
sub
mov
mov
mov
add
movb
cmpsl
in
or
ljmp
sbb
push
mov
xchg
sarl
push
ds
pop
add
dec
hlt
cmp
arpl
jns
js
mov
xor
cmp
in
cli
lret
mov
bound
or
xor
mov
xchg
rcll
pop
sahf
lock
adc
mov
inc
mov
add
push
stc
filds
push
outsb
fstpl
loope
rcl
mov
mov
pop
gs
ds
mov
xchg
rorl
mov
xchg
mov
cld
lahf
lcall
bound
stc
pop
cmp
push
jb
xor
add
or
imul
or
scas
mov
xchg
push
imul
fs
mov
jp
push
in
lcall
inc
mov
jo
adcb
and
rclb
and
cli
fs
scas
repnz
jbe
push
push
pop
adc
mov
scas
adc
xchg
add
jno
pop
mov
xchg
inc
or
xor
in
sti
add
iret
pop
xchg
adc
testb
or
jecxz
push
sbb
sbb
clc
int3
out
jmp
xlat
lcall
ficomps
push
and
out
inc
push
mov
push
or
xor
dec
and
and
jg
es
mov
mov
sarb
push
rorb
pop
push
dec
cmpsl
and
jbe
test
xlat
into
adc
loop
xchg
push
nop
push
movsl
mov
add
rclb
out
mov
addr16
rol
test
out
mov
cltd
lods
movsl
xor
sub
ja
mov
stc
mov
shrb
sub
push
xor
mov
xchg
dec
js
bound
repz
dec
pusha
xor
push
out
xor
lods
jno
jp
xor
inc
cwtl
inc
fcompl
shrl
xor
sbb
pusha
pop
scas
pop
and
cmp
inc
xchg
push
sub
and
pcmpgtb
fstps
jno
or
stc
dec
jecxz
sbb
lock
sub
test
bound
mov
js
inc
stos
jnp
aam
call
daa
loop
sbb
pop
xchg
fnstenv
ds
mov
pop
lcall
in
jge
ret
jecxz
push
or
pushf
cmc
les
push
mov
or
mov
mov
fimuls
insl
test
mov
ficomps
add
cmp
dec
mov
jo
mov
push
aas
cmp
jecxz
iret
dec
jo
aas
stos
subl
daa
pop
out
les
insl
jnp
mov
shlb
test
add
dec
adc
int3
int3
push
ret
xor
xor
mov
addr16
sbb
sbb
leave
aad
jb
es
inc
les
jo
pushf
pop
mov
hlt
jmp
cmp
and
aam
mov
inc
xchg
packsswb
mov
iret
mov
mov
fdivs
clc
int
pop
and
add
mov
and
fistl
push
jne
in
ja
inc
.byte
pop
