add
or
add
add
pop
add
addb
add
mov
add
add
add
addb
add
call
add
add
or
orb
add
or
orb
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
addb
add
lock
addb
add
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
mov
add
add
cmpsb
mov
add
add
add
add
add
add
loopne
add
in
mov
add
add
cmpsb
mov
add
add
add
add
add
add
or
add
and
add
cmpsb
mov
add
add
add
add
add
add
xor
add
push
popl
add
add
cmpsb
mov
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
xchg
pop
add
add
cmpsb
mov
add
add
add
add
add
add
test
add
lock
pop
add
add
cmpsb
mov
add
add
or
add
test
add
mov
add
add
add
or
sbbb
add
hlt
or
sub
add
adc
add
cmp
add
pusha
add
subb
add
or
xorb
add
cmpsb
mov
add
add
add
add
add
add
cmp
add
and
pop
add
add
add
add
add
add
add
add
add
add
hlt
xchg
pop
add
add
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
cltd
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
lahf
pop
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
movsb
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
or
addb
add
xor
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
push
or
sub
add
cmpsb
mov
add
add
add
add
sbb
add
add
add
or
push
add
add
add
add
add
add
add
add
add
push
or
call
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
cmpsb
mov
add
add
add
add
add
add
fadds
add
pop
add
add
cmpsb
mov
add
add
add
adc
lock
addb
add
sldt
rolb
add
clc
add
add
and
add
dec
push
add
jo
add
cwtl
push
add
rolb
cmp
add
call
sldt
adc
add
cmp
add
pusha
pop
add
mov
add
mov
add
fadds
add
add
add
cmpsb
mov
add
add
add
add
add
add
cwtl
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
add
cmpsb
mov
add
add
add
add
add
add
adc
add
and
add
cmpsb
mov
add
add
add
add
add
add
cmp
add
cmp
pop
add
add
add
add
add
add
add
add
add
add
hlt
roll
loopne
add
cmpsb
mov
add
add
add
add
add
add
mov
add
aam
pop
add
add
cmpsb
mov
add
add
add
add
add
add
mov
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
nop
movb
or
add
cmpsb
mov
add
add
add
add
add
add
add
add
pushf
lret
pusha
add
add
add
add
add
add
add
add
pop
add
cld
int
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
aad
add
add
cmpsb
mov
add
add
add
add
add
add
enter
mov
add
add
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
add
add
or
add
fldl
add
add
cmpsb
mov
add
add
add
add
push
or
xorb
cmpb
orb
add
cmpsb
mov
add
add
add
add
add
add
push
loopne
add
add
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
add
add
jecxz
add
mov
add
cmpsb
mov
add
add
add
pop
add
jg
add
or
cmp
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
cmpsb
mov
add
add
add
add
add
add
sub
add
add
or
adc
add
cmpsb
mov
add
add
add
add
add
add
push
or
add
mov
add
cmpsb
mov
add
add
add
add
add
add
js
add
sub
or
adc
add
cmpsb
mov
add
add
add
add
add
add
mov
mov
add
cmpsb
mov
add
add
add
add
add
add
enter
push
mov
add
cmpsb
mov
add
add
add
add
add
add
lock
add
or
adc
add
cmpsb
mov
add
add
add
add
add
add
sbb
add
jl
or
adc
add
cmpsb
mov
add
add
add
add
cmpsb
or
addb
addb
add
cmpsb
mov
add
add
add
add
sbb
add
add
pushf
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
push
add
dec
add
inc
add
dec
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jne
je
outsl
add
jne
outsb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
outsl
add
inc
add
add
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
je
outsl
add
jne
outsb
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
outsl
add
jne
outsb
add
add
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
sbb
add
inc
add
insl
add
add
je
jae
add
dec
add
push
add
daa
add
and
jne
outsb
add
jbe
add
jae
popa
add
add
jne
je
outsl
add
jne
outsb
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
add
adc
or
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
scas
seto
ficoml
or
or
and
sbb
adcl
inc
in
push
fs
into
or
fistpl
or
mov
cltd
inc
in
jg
xor
mov
push
in
mov
dec
and
jno,pt
jae
hlt
roll
dec
lods
push
mov
pop
mov
adc
ss
neg
sbb
pop
dec
cld
enter
std
aaa
xchg
leave
mov
sti
orl
xor
push
lret
int
sarl
outsb
xchg
jns
jbe
sub
add
fisubrs
leave
sbb
bound
inc
pop
add
lahf
addr16
ja
cmpsl
xchg
pushf
aam
addl
pop
mov
fiaddl
int
add
adcb
outsb
jle
sub
data16
cmp
popa
bnd
repz
push
out
lahf
push
or
jmp
pop
xor
cmp
lahf
or
loope
je
rcrb
hlt
pop
xor
pop
or
int3
setb
repnz
adc
push
lods
sbb
or
ja
fstps
or
mov
push
ljmp
push
icebp
insl
mov
pop
and
je
cmp
mov
subl
xor
push
mov
cmc
jge
repz
shll
or
xor
or
jnp
fsts
jle
cmp
inc
dec
cmp
aam
inc
push
inc
lret
xchg
sub
xor
dec
out
pop
fadd
jae
ret
jmp
lock
idivb
repnz
pop
xchg
adc
mov
add
insl
stos
mov
mov
call
mov
sub
testl
lds
or
cmp
inc
ret
cld
adc
dec
sub
bound
jb
push
pusha
inc
pop
xor
std
shrb
aad
mov
or
in
mov
sahf
dec
mov
sbb
enter
mov
cld
int
xchg
std
adc
add
mov
fucom
mov
push
push
fmull
sub
sti
or
cld
mov
mov
xor
push
stos
mov
insb
cmpsb
pop
daa
mov
dec
cmp
jbe
cli
test
jb
adc
sbb
dec
cmp
scas
or
das
out
xchg
xchg
xor
lea
xor
cmpsb
es
rcll
sbb
xchg
das
pusha
push
sub
mov
icebp
outsb
incl
mov
test
mov
in
stos
cmp
lds
sbb
aad
outsl
iret
negb
pop
dec
push
cwtl
sbb
std
dec
scas
popa
sbb
xchg
xor
jle
jns
xor
lahf
cmp
in
xchg
and
nop
les
cmpsb
repnz
fucomp
neg
cmp
leave
ret
aad
leave
xor
jns
push
xchg
pop
xor
jg
stos
add
sbb
sbb
mov
in
pop
and
rclb
push
sub
and
jnp
out
mov
pop
lcall
imul
lret
jge
add
and
enter
mov
xor
aas
imul
dec
and
test
or
jg
adc
lods
mov
mov
inc
rclb
dec
pop
xchg
push
mov
mov
sub
jnp
inc
jo
xchg
gs
call
mov
mov
leave
mov
or
stc
sti
scas
inc
adc
xorb
nop
pop
xchg
inc
loopne
hlt
fcomp
xchg
stc
push
mov
adc
mov
orl
sbb
fisubrs
repnz
sbb
sbb
mov
lea
inc
pop
or
and
cmp
xor
out
icebp
jae
insb
inc
sbb
sub
clc
imul
pop
mov
push
sbb
cmp
add
push
jp
cmp
mov
call
inc
inc
jnp
loope
inc
call
inc
xor
mov
jno
cmp
lods
mov
ja
dec
pop
jmp
out
jg
mov
xchg
cmpsl
nop
sbb
ss
pop
dec
fadds
xor
orb
dec
xor
sub
ds
jae
fcoml
xor
popa
clc
popf
mov
imul
mov
xchg
push
mov
mov
pop
xor
pop
fcomps
or
jo
rcll
cli
adc
sbb
mov
add
inc
and
and
cmp
xchg
sbb
mov
rcrl
sub
out
je
mov
mov
pop
pop
test
mov
xchg
roll
jle
cwtl
std
xchg
test
sub
jne
aaa
jle
rolb
pop
pop
ficompl
insl
or
xchg
push
outsb
xchg
les
lods
rcll
cltd
rorb
hlt
push
add
jle
stos
adc
dec
lahf
stc
es
shll
xor
cmpl
mov
mov
ljmp
orl
movl
cwtl
inc
or
pop
mov
add
ret
sbb
shrb
push
mov
out
push
and
ljmp
push
aas
sub
movsb
xchg
add
test
jle,pn
sub
mov
out
movsl
push
ds
dec
cli
out
pushf
test
adc
aam
fsub
add
shrb
and
jp
out
xlat
scas
xchg
dec
imul
cmp
dec
lahf
jno
inc
popaw
addr16
lea
pop
lcall
call
subl
dec
aas
or
rolb
shlb
push
je
sbb
cwtl
xchg
xchg
and
adc
push
mov
pop
mov
call
bound
or
push
mov
inc
jnp
add
cli
enter
mov
cmpsl
sbb
mov
adc
fwait
sbb
xchg
cmp
out
sbb
les
and
out
or
xor
mov
ss
pop
or
cltd
hlt
movsl
xor
arpl
push
cmp
add
sub
rolb
icebp
in
aam
fcompl
push
fidivrs
adc
jns
test
out
int3
rolb
jl
lods
rcr
pop
jmp
ss
insl
mov
add
mov
repnz
outsl
mov
ja
push
call
mov
inc
push
adcb
daa
fsubs
mov
xchg
loop
insb
sbb
xor
lret
movsb
in
pop
cltd
lea
xchg
adc
js
pop
or
sbb
aas
mov
adc
dec
call
bound
es
sti
sub
outsl
jb
aaa
xor
dec
test
add
clc
rcrb
add
xlat
ljmp
xor
push
in
mov
mov
dec
adc
sbb
shl
test
cmp
insl
adc
inc
adc
fst
hlt
jp
fisubrs
cwtl
inc
imul
mov
sti
push
and
mov
cltd
jbe
insl
bound
std
sarl
dec
fcomps
mov
stc
sbb
lcall
cmp
push
jl
mov
rcrl
pop
add
out
fwait
pushf
inc
clc
and
outsl
adc
into
js
mov
mov
mov
sub
pop
fisubl
push
dec
xchg
adc
push
in
aaa
dec
jnp
sbb
popf
ret
popf
add
mov
arpl
cmp
inc
push
add
mov
rcrb
push
lret
adc
outsl
sub
rolb
dec
nop
inc
and
add
pop
and
sbb
mov
popf
mov
add
lret
add
rcl
pop
sub
loop
or
in
rclb
or
cli
mov
stos
inc
js
mov
imul
dec
lret
jo
and
shrl
subb
jmp
dec
mov
repz
xor
lret
cmc
mov
pop
fwait
je
aam
sub
dec
add
clc
mov
xchg
stos
mov
andb
or
dec
mov
push
and
push
xchg
lock
loopne
loopne
dec
adcl
push
mov
cld
mov
cmp
jg
popf
cmp
mov
cmpb
push
mov
divb
dec
hlt
outsl
popf
icebp
sbb
cmp
or
into
pop
sarb
into
xor
ret
jbe
jae
shlb
mov
pushf
pop
stos
xlat
flds
aam
and
imul
pop
stc
scas
push
jmp
rcrb
push
ret
and
xor
xor
lahf
adc
add
pop
add
ficompl
xor
es
dec
lahf
nop
pushf
add
lds
out
mov
aas
mov
cmc
and
movsl
ret
bound
inc
ds
shlb
mov
adc
pop
sbb
in
adc
mov
add
outsb
cltd
es
mov
and
push
imul
cmpb
insl
sti
inc
iret
add
arpl
sbb
loop
faddl
xor
jns
sub
and
int
imul
xchg
push
or
add
inc
ss
push
mov
fs
testl
or
mov
sahf
jecxz
mov
adc
mov
mov
stos
push
cmp
dec
adc
xchg
pop
and
les
cmp
aad
mov
xchg
test
mov
mov
mov
pop
push
jae
and
xor
add
cltd
or
out
lods
sbb
testb
mov
push
lsl
mov
rcrb
fisubl
fildl
jl
addl
dec
stc
clc
lea
stc
dec
sbb
mov
callw
jg
fsubrl
fisubs
jo
ljmp
jg
sbb
es
sarl
add
test
xchg
pop
push
add
mov
movsl
mov
aad
fcomps
add
cwtl
repz
cmc
and
push
or
adc
sti
pop
jno
int3
fisubl
dec
decl
cmp
jae
push
mov
mov
ret
in
mov
jbe
jns
jecxz
xchg
pop
mov
jmp
add
jb
mov
xor
popf
stos
mov
fcompl
adc
cmp
outsl
xchg
fdivrl
pop
lcall
stc
ficoml
jg
mov
xor
test
inc
into
popa
push
mov
enter
dec
or
int
mov
ds
fsts
ret
fs
mov
mov
arpl
xlat
aas
je
add
lea
jg
testl
mov
clc
jo
outsb
scas
imul
int
int3
dec
call
push
inc
fwait
loop
jp
imul
divl
fadds
bound
push
inc
fs
jp
jae
clc
or
push
jl
xchg
mov
add
pushf
mov
sbb
in
cld
in
call
push
pushf
jl
repnz
out
pop
and
shll
dec
das
mov
mov
dec
lods
jmp
dec
pop
xchg
inc
dec
xchg
pop
ljmp
xchg
xor
out
and
pop
mov
cmc
lds
notb
mov
repz
inc
jle
push
popa
fxch
and
mov
in
dec
and
adc
aad
add
int3
cmpsl
insl
loope
xor
adc
pop
xchg
subl
push
in
mov
and
inc
xchg
cmpsl
nop
push
jnp
dec
xchg
xor
xor
mov
mov
xchg
fistl
roll
scas
call
xor
mov
and
and
xor
in
sbb
push
and
notb
push
je
test
xchg
sub
in
mov
sti
jno
and
push
jle
daa
sub
imul
cmp
sbb
inc
insl
mov
dec
jmp
adc
pop
dec
lret
jne
inc
repnz
lret
leave
in
data16
fldenv
mov
xor
ret
add
push
jne
cltd
and
repz
mov
movsb
ljmp
sub
jae
mov
das
orl
out
and
fisubrs
push
adc
jmp
jo
ljmp
leave
sub
in
mov
ljmp
adc
or
pop
test
ficomps
xor
test
repnz
cmp
pop
pop
adc
mov
xor
cmp
test
inc
inc
sbb
outsl
adc
sti
pop
inc
or
loopne,pn
mov
xchg
imul
push
nop
sub
sub
xor
orl
sbb
push
out
mov
repnz
dec
cmp
pusha
loopne
xor
adc
dec
or
iret
sbb
imul
mov
fistpl
rol
cmp
stc
add
mov
adc
push
mov
xor
lock
mov
jne
aad
call
mov
sahf
mov
sbb
xchg
bound
lock
icebp
fdivrs
fdivl
add
lock
std
add
or
mov
daa
mov
lret
xor
and
imul
divl
sub
sbb
dec
inc
add
fstpl
jne
mov
mov
jl
or
outsl
inc
leave
inc
inc
inc
jno
cmp
addr16
jne
pop
adc
lret
pop
outsb
hlt
xchg
dec
or
test
xchg
subb
cmp
leave
stos
jae
sbb
popa
out
out
push
cmc
sub
ret
icebp
aas
dec
imul
push
out
inc
mov
push
call
jge
jae
cwtl
js
sub
lcall
scas
mov
cwtl
add
ja
cmc
dec
and
ficomps
cwtl
inc
ss
cmpsb
pop
pop
or
and
frndint
rorb
mov
sub
add
pop
xchg
leave
rclb
ss
sbb
dec
and
jae
test
testb
movsb
pop
jl
inc
insb
lea
outsb
repz
xchg
mov
shrl
gs
ret
inc
sub
xor
leave
es
pusha
loopne
stos
mov
xor
pusha
rcrb
or
push
in
mov
xlat
test
cmpsl
xchg
cmp
sarb
xor
lret
dec
gs
hlt
cmp
dec
call
sbb
sub
lods
shrl
jnp
fistpl
push
and
add
mov
iret
int3
insb
aam
aaa
push
in
fs
incb
xchg
jae
pop
mov
test
test
pop
fsubs
inc
in
aam
add
cmp
push
cli
sahf
and
call
mov
rcr
dec
mov
test
fisubrs
pop
cmp
lcall
cmpsl
aaa
stc
pushf
push
jg
mov
add
mov
test
mov
pop
inc
adc
adc
and
jl
jns
and
loopne
ret
xchg
jmp
inc
jnp
jmp
sti
insb
enter
inc
fwait
iret
inc
sbb
sub
scas
pop
ret
adcb
ret
aaa
data16
movsb
add
orb
mov
cmpsb
sbb
into
or
cmp
mov
mov
jo
jne
push
lahf
bound
rclb
out
pop
push
and
pop
add
fisubrs
arpl
pop
lds
mov
pop
fimull
fdivrl
pop
pop
lods
loop
popa
inc
pushf
pop
xchg
les
adcl
ds
cli
test
test
sbb
xchg
sbb
sbb
mov
mov
ss
dec
sbb
cmp
jl
mov
sub
add
or
lods
out
adc
sarl
test
imul
retw
aaa
mov
popa
push
xor
fs
xor
outsl
cmp
cwtl
mov
adc
xchg
enter
jg
in
imul
cld
test
sub
movsl
push
sbb
jle
pusha
movsl
xor
adc
mov
arpl
or
xchg
push
mov
push
xchg
push
add
sbb
repz
and
xor
xchg
lret
ror
pusha
mov
add
out
mov
cmovbe
mov
jnp
les
mov
icebp
icebp
mov
clc
in
pop
pusha
add
add
je
inc
std
aad
dec
sahf
push
and
and
jno
xor
rolb
cmp
test
loop
lods
addr16
data16
jbe
rclb
stc
mov
sub
les
cld
adc
sbb
popa
loop
mov
les
loope
xlat
or
pop
xor
inc
lds
cmpsb
call
jno
jle
xchg
and
icebp
mov
lahf
jmp
mov
lea
push
test
ja
inc
icebp
jp
addr16
add
hlt
pop
cmp
int3
lahf
add
dec
push
xchg
popa
add
cmp
orl
outsb
sbb
out
cltd
or
cmc
dec
mov
dec
lcall
pusha
cmp
rcrb
jge
mov
add
mov
xchg
in
imul
xchg
xor
loopne
into
in
pusha
cltd
cmp
jo
sbb
popa
iret
push
int3
rcrb
xchg
sbb
lret
xchg
in
cwtl
inc
inc
mov
movsl
cmc
lahf
cmpb
mov
add
inc
sub
jbe
rcll
fs
pop
xor
push
mov
enter
sbb
imul
out
lods
les
push
fldenv
jo
fidivrl
mov
mov
mov
jp
je
push
mov
shll
xchg
cli
scas
int
pop
xlat
xchg
or
pop
test
mov
mov
jmp
adc
in
lods
lahf
sbb
jb
cmp
test
popf
add
jmp
fcoms
pop
push
sbb
test
adc
xor
bound
jecxz
mov
lods
cmp
sbb
pushf
xor
adc
mov
fistpl
scas
lods
ror
push
and
movsb
out
and
mov
ficompl
dec
arpl
lock
loop
mov
bound
out
cmp
mov
imul
popf
test
aas
pop
popf
xchg
add
inc
cmp
xor
lcall
pop
cmp
sbb
inc
stc
or
lcall
fwait
stc
mov
int
pop
pop
andb
inc
test
adc
aam
and
jno
scas
ja
mov
push
scas
mov
rolb
cmpb
bound
pusha
dec
dec
sbb
sbb
sub
cmp
xchg
sbbl
cli
insb
or
addb
adcb
aaa
mov
test
cmpsb
iret
mov
add
jbe
sbb
dec
addl
js
dec
push
je
jp
push
or
push
xchg
mov
int
nop
push
inc
xor
xlat
fldcw
into
push
lahf
out
rorl
iret
dec
adc
and
pop
dec
jmp
dec
push
cltd
sub
dec
dec
daa
out
sbb
or
inc
lods
cmp
lahf
ror
in
jnp
xor
push
adc
jp
fimuls
mov
pop
in
lcall
mov
push
aad
push
mov
xchg
sub
jl
int3
jo
test
xchg
outsl
push
pop
test
clc
push
pop
pop
pop
mov
sbb
xor
mov
and
ja
popf
test
cmpsl
xor
inc
sarl
jno
cmp
cwtl
jae
push
or
jo
xor
hlt
dec
jno
xchg
lret
xorb
fsts
hlt
iret
mov
mov
jns
adc
add
imul
pop
inc
and
xchg
lock
mov
testb
mov
or
lds
popf
stc
push
jae
daa
dec
push
mov
mov
jbe
pusha
test
pop
xchg
imul
bound
mov
stos
push
ds
inc
int
mov
sub
loope
push
xor
pop
pop
movl
mov
pushf
jle
out
pop
insb
outsl
iret
nop
mov
adc
ficoms
inc
pushf
scas
push
notb
add
sbb
mov
std
shll
push
sti
sbb
out
mov
movsb
cmp
test
into
daa
add
dec
test
in
add
jecxz
push
push
sti
sub
cmc
pusha
daa
leave
mov
inc
outsl
add
pop
or
clc
push
ds
jnp
mulb
jmp
sbb
aaa
adc
push
jmp
or
add
popa
sbb
dec
movl
movsb
push
add
imul
lea
dec
pushl
call
mov
sbb
adc
push
scas
mov
repnz
push
inc
sub
iret
lret
pushf
mov
jbe
stos
fwait
or
mov
sbb
into
je
sbbb
int
xorl
lds
lret
lahf
scas
outsl
insl
inc
mov
mov
cld
mov
cmp
cmp
jmp
into
dec
fistl
hlt
fsubl
and
sti
pop
or
shlb
stos
xchg
sbb
jne
rcrb
push
sub
lock
ljmp
mov
dec
aam
cmp
lods
mov
std
push
call
xchg
icebp
push
inc
fisubrs
sbb
jne
inc
sbb
in
inc
inc
enter
pop
imul
and
xchg
push
cs
push
fwait
pushf
mov
in
xchg
mov
aas
stos
dec
test
and
movsb
out
in
sbbb
jl
test
xorb
repz
stos
pusha
aas
inc
adc
cmpl
jmp
lock
xor
cltd
jne
cmp
xchg
dec
adc
mov
adc
pop
int
aas
movsl
cmp
jns
pop
mov
add
out
or
push
and
stc
jge
in
jg
push
xchg
cmp
xlat
push
clc
adc
jle
jae
push
mov
dec
mov
lock
mov
sbb
jg
and
dec
push
cmc
sub
xchg
iret
jne
subb
dec
mov
sbb
xor
xchg
xchg
sbb
pop
scas
or
jmp
outsl
das
mov
inc
mov
jl
mov
xchg
stos
imul
cltd
shlb
jecxz
enter
jno
iretw
sbbb
test
jbe
orl
push
les
add
push
dec
out
pop
sub
lods
aad
inc
leave
pop
adc
lds
inc
je
add
dec
enter
jb
aaa
addr16
fildl
fdivrs
xor
lcall
out
push
inc
in
push
or
xor
xchg
jecxz
imul
cwtl
push
lret
fsubr
scas
cmpb
aaa
movsb
mov
cmc
mov
sbb
hlt
or
sarl
cmp
xor
xchg
and
cs
mov
mov
jae
mov
push
jle
or
inc
mov
xchg
das
jae
sub
ret
insb
cmp
pop
inc
xchg
add
xchg
push
mull
lahf
mov
stc
cmc
sahf
pop
push
ja
pusha
mov
and
mov
xchg
xor
fdivs
imul
pop
or
in
mov
mov
imul
test
ljmp
adc
popa
cmp
loope
call
fsubl
das
fistps
sub
sub
cmpsb
push
lret
adc
jmp
fdivrs
inc
repz
fwait
pop
pop
testb
mov
adc
fisttpl
aaa
sbb
push
sbb
mov
push
out
mov
jbe
hlt
pop
mov
imul
es
cld
stos
xor
out
loop
xor
xchg
loopne
cmc
dec
nop
add
cltd
xor
dec
pop
lock
iret
jns
icebp
hlt
roll
movsb
push
push
sbb
jmp
cltd
dec
ljmp
or
jmp
cmpsb
xor
mov
mov
or
ja
xchg
push
lods
cmpl
mov
cwtl
sub
xchg
out
movsb
add
mov
movsb
andl
pop
mov
or
add
pop
jp
ficompl
iret
fisttpll
xlat
imul
test
add
sub
shrb
ds
pop
jns
push
pop
ret
insb
inc
cmpsb
loope
aaa
insl
push
inc
inc
push
jbe
test
out
outsb
sub
in
popa
or
pop
mov
adc
mov
dec
in
ret
jbe
scas
loop
add
and
sub
pop
imul
in
mov
ja
xchg
sbb
mov
xor
enter
shlb
sbb
xlat
add
and
push
and
cmpsl
xchg
lret
sbb
ja
add
xchg
hlt
lcall
lods
repz
mov
loop
mov
mov
lea
aaa
outsb
stos
add
popf
imul
insb
aaa
dec
ret
popa
adc
shlb
push
jmp
pop
sub
sbb
inc
add
mov
daa
out
dec
mov
dec
int3
mov
test
mov
adc
insb
sahf
dec
inc
dec
dec
xor
push
iret
fdivr
or
sub
cltd
dec
lods
inc
xchg
in
lds
sbb
loopne
aaa
xor
xor
pushf
inc
fidivrs
bound
mov
testl
mov
shll
repnz
cmp
cmp
pop
dec
jns
xchg
push
xor
repnz
pop
pop
scas
pop
jb
jle
add
testl
inc
xor
cmc
ss
sub
jp
cmp
inc
push
out
in
mov
push
add
dec
mov
add
xchg
out
dec
inc
and
pop
mov
sbb
xor
arpl
cmpsl
xchg
xchg
mov
inc
ss
clc
lcall
xchg
dec
sbb
fwait
or
add
fdivp
jns
xchg
add
inc
out
adc
enter
add
out
and
xchg
jno
enter
and
pop
inc
mov
add
dec
xlat
stos
push
and
mov
shl
pop
lret
rol
jp
sbb
hlt
fstl
cmp
pop
ja
sub
xor
loopne,pt
dec
add
lock
aas
gs
out
test
pop
xchg
shll
sub
mov
shl
jo
fsubp
and
lcall
fmulp
add
mov
xchg
mov
xor
or
leave
jno
pop
fistpl
sahf
out
pop
fst
cmp
inc
or
or
mov
shll
mov
xchg
add
cmc
ficompl
jne
lret
int3
rcl
adc
mov
add
loop
std
pop
cs
mov
cmpsb
lea
rol
sub
lock
lods
cmp
pop
pop
shll
std
mov
lahf
sbb
sub
dec
int
aam
fwait
cmp
loopne
test
test
or
shlb
rclb
cld
int
mov
clc
data16
ja
mov
int
lret
inc
jns
idivl
adc
out
xchg
push
push
ja
mov
insl
popf
cmpl
pop
mov
nop
aaa
and
shll
dec
cmpsl
push
adc
mov
out
aas
mov
outsb
test
icebp
cmp
jns
cltd
fsubl
mov
push
mov
push
pusha
push
test
lret
scas
mov
xor
into
cwtl
mov
mov
daa
add
push
lods
in
cmp
pop
out
repnz
lea
add
cwtl
xchg
test
mov
popf
push
ljmp
dec
cwtl
aaa
sbb
push
xchg
scas
mov
push
add
dec
adc
push
imul
adc
mov
int
jne
or
aad
jno
xchg
push
outsb
dec
add
mov
icebp
or
add
push
mov
xchg
adc
repnz
js
xchg
push
mov
mov
and
sbb
cmp
mov
lock
out
mov
adc
ret
mov
mov
adc
cmp
xchg
adc
pop
cmpsb
nop
xchg
push
sbb
lods
mov
or
andb
clc
sub
addr16
dec
dec
mov
or
cld
fwait
mov
inc
cmp
in
adc
pop
enter
mov
clc
gs
icebp
stos
mov
pop
cmpsb
adc
and
inc
scas
mov
inc
or
mov
or
and
pop
popa
mov
push
negl
dec
mov
dec
and
or
lret
sahf
push
insl
push
lret
adc
lcall
bound
push
fnstcw
pop
movsb
add
and
sub
mov
mov
adc
jno
inc
sub
mov
sti
in
adc
cmpsl
mov
dec
icebp
add
ficomps
leave
adc
inc
push
ljmp
mov
mov
imul
or
mov
mov
in
int
jmp
push
jne
gs
jno
cmp
or
push
inc
xchg
jg
or
or
sbb
cmp
and
in
push
cmp
mov
sbb
frstor
adc
xchg
imul
adc
cmpb
mov
mov
or
mov
add
cmp
pop
cmpb
fdivl
and
lock
shl
loop
sarl
inc
std
repnz
int3
fildll
sbb
lahf
test
clc
testl
dec
mov
cltd
and
cld
sub
sub
sub
int
out
fsub
movsl
movsl
xchg
scas
xchg
clc
push
test
loopne
add
in
lcall
jno
addr16
mov
lret
xor
aam
out
fbstp
out
sbb
add
xchg
pop
aas
adc
adc
pop
inc
dec
xchg
cli
cld
loop
cli
jo
mov
aad
scas
int3
cs
and
stc
insb
out
xchg
aad
xlat
clc
gs
pop
dec
mov
add
jge
bound
mov
sbb
dec
sbb
repz
add
jge
push
hlt
cmp
hlt
and
cmc
push
xchg
ljmp
push
xor
out
mov
arpl
xor
or
mov
pop
int
cmp
lds
inc
and
inc
pop
imul
lcall
cmpsl
sub
fucomip
or
dec
cmpsl
orl
fwait
push
lock
push
outsl
adc
sbb
or
lds
daa
mov
incb
push
lahf
lea
jecxz
push
sbb
mov
icebp
lods
adcl
imul
loope
or
test
clc
mov
test
rorb
inc
lahf
push
sti
xlat
cs
jecxz
mov
push
sub
popa
in
test
mov
adc
out
test
sbb
jecxz
mov
leave
je
int3
pop
subl
jnp
xlat
add
test
repz
and
add
sub
fs
aam
add
adc
mov
add
pushf
adc
mov
dec
xchg
push
shr
repz
mov
pop
xchg
dec
and
fildl
movsl
xor
sti
push
sahf
pop
lret
xor
or
shl
outsb
inc
push
and
cld
mov
leave
adc
mov
adcl
mov
js
jmp
cmpsl
cli
push
and
push
jg
sub
pusha
cmp
out
jge
push
in
mov
pop
inc
cmp
inc
jle
xor
les
mov
add
fcmovnu
icebp
cmp
pop
out
call
xchg
aaa
dec
cmp
movsl
dec
sti
imul
imulb
push
test
mov
pop
js
int3
mov
or
jle
pop
js
sub
shll
adc
jnp
mov
lret
push
and
sbb
iret
and
adc
pop
sbb
mov
push
stos
enter
test
xchg
mov
jb
and
cli
push
jp
sbb
clc
dec
xor
ljmp
jb
mov
mov
pushf
pushf
das
sub
ret
stc
lods
out
lea
dec
add
imul
jl
jmp
scas
icebp
lahf
add
dec
dec
sub
ljmp
xchg
aam
mov
xchg
inc
or
ret
in
pop
stc
cmp
inc
out
test
and
dec
fwait
in
cltd
mov
adc
mov
test
icebp
js
in
jmp
xor
or
add
in
dec
in
popa
adc
push
sbb
xor
xor
push
in
add
push
popa
inc
pop
sahf
cmp
xor
inc
pushf
popf
pop
cs
add
and
pushf
or
push
mov
out
mov
cmc
push
fsubrs
and
in
rcll
js
outsb
lahf
aaa
out
mov
orl
lods
pop
imul
ret
and
mov
and
mov
je
mov
mov
loope
daa
pusha
or
xor
xor
pop
test
movsb
and
pop
push
sub
pop
sub
cwtl
popa
jmp
mov
pushf
mov
scas
cmp
outsb
sarb
push
or
jle
dec
adc
test
mov
push
xor
shll
leave
and
inc
push
cmp
lea
sahf
fimuls
push
test
add
mov
aas
daa
push
jbe
dec
jecxz
hlt
or
scas
jl
push
push
or
aam
mov
mov
and
xchg
push
iret
jne
inc
out
leave
push
sbb
mov
es
cmp
sub
iret
test
ja
jmp
xor
dec
test
lock
subl
js
push
mov
in
inc
in
xor
mov
cmpsb
xor
cmp
adc
dec
test
movsb
xchg
fstl
mov
adc
dec
and
and
xchg
jae
mov
addl
jns
sub
icebp
xor
cmp
enter
push
and
xorb
loopne
jge
icebp
mov
lret
rclb
xchg
jno
xchg
or
mov
xor
and
fistps
xchg
pop
call
dec
dec
pop
movsb
lds
push
mov
jo
stc
add
outsb
rcrl
scas
and
in
mov
adc
or
lret
mov
push
adc
sub
jo
aad
negb
xlat
dec
pop
hlt
sbb
icebp
das
pminsw
ret
ficomps
mov
pop
roll
or
mov
outsb
inc
push
mov
add
xor
lock
and
stos
pop
push
sti
movsl
les
shll
jne
cmpsl
mov
mov
popa
fidivrs
out
xor
adc
iret
es
mov
ljmp
fldt
push
xor
mov
inc
lods
mov
loopne
imul
in
jg
sbb
jo
sbb
pop
push
es
jecxz
pop
and
adc
dec
aam
out
cmpl
sbb
cmpxchg
ret
stos
daa
sub
pop
movsb
cld
add
lods
xchg
sub
clc
xchg
gs
rorl
sub
sub
dec
xor
xor
stos
mov
ret
push
push
inc
xchg
sarb
push
jae
out
out
mov
sbb
lods
aad
dec
jmp
imul
pop
scas
pop
iret
push
sbb
mov
imul
pop
jno
inc
jp
sbb
push
xchg
or
out
or
pusha
das
mov
xlat
lret
testl
leave
dec
fwait
lods
inc
ret
adc
aas
js
lahf
imul
std
popf
loope
xor
pushf
jne
jns
push
sub
in
mov
dec
jbe
or
test
fucomip
pop
jno
cmp
jno
xchg
into
test
ficompl
out
cmc
rcll
lods
dec
pop
ret
push
nop
scas
ret
daa
test
sub
pop
lea
push
scas
mov
clc
ja
icebp
stos
cmp
fwait
outsb
cmp
mov
ss
xor
je
adc
lea
lds
adc
cwtl
shll
lcall
or
pop
push
inc
xchg
and
cli
loopne
sahf
mov
mov
mov
addr16
mov
mov
xchg
mov
mov
xchg
repz
lcall
mov
shlb
lcall
add
pop
jae
push
push
mov
ljmp
add
xlat
pop
push
daa
daa
pop
push
inc
stos
jne
stos
lock
iret
pop
scas
pusha
adc
subl
and
lcall
outsb
pop
push
push
ljmp
mov
push
test
pop
sahf
loope
out
enter
inc
mov
xlat
lds
int
das
adc
cmpsb
icebp
daa
push
pop
fisubrs
and
or
lea
xchg
sbb
jp
sbb
hlt
test
push
dec
xlat
cmc
dec
jle
mov
outsl
adc
mov
sub
xor
add
xor
xor
scas
scas
popa
adc
xor
sti
jg
das
stos
mov
cmp
lret
outsb
add
das
divl
xchg
scas
cmp
in
std
inc
push
mov
adc
outsb
inc
push
cli
aam
imul
lcall
push
dec
in
cmp
add
test
mov
pop
sub
jg
ret
cltd
push
xchg
icebp
xchg
sahf
pushl
pop
dec
adc
inc
arpl
xchg
mov
arpl
sub
lds
dec
leave
aas
and
imul
lahf
test
jecxz
pop
popf
arpl
pop
lret
cmp
cmp
addr16
cwtl
mov
jne
xor
or
je
cmp
in
xchg
push
xchg
sbb
push
enter
es
roll
sarl
mov
xor
jae
loope
test
or
arpl
je
gs
lea
testl
sub
into
fldt
sub
aas
pop
jle
adc
outsl
popf
out
ja
inc
sbb
mov
jb
lahf
jae
xchg
inc
mov
imul
ret
cmpsl
xor
mov
push
rcrl
push
mov
fnstcw
mov
pop
pop
rolb
inc
xlat
out
xor
pop
enter
push
lods
jge
clc
adc
lahf
sbb
das
push
xchg
aas
addl
xlat
dec
aam
jecxz
fstpt
rclb
je
testb
push
push
gs
pop
adc
mov
add
std
inc
out
push
stc
mov
loope
call
mov
pop
mov
pop
xchg
push
push
gs
jbe
subl
insb
add
andl
leave
mov
xchg
inc
fwait
aad
leave
shrl
scas
loopne
ljmp
out
insb
push
xor
add
xchg
lret
in
mov
std
push
lret
cmc
ret
xor
xlat
pop
push
mov
xchg
push
aad
jmp
mov
imul
cmpsb
in
loop
out
xchg
inc
outsb
mov
fistpll
or
and
push
inc
jge
mov
jmp
sbb
push
popf
sbb
movl
xchg
js
mov
mov
std
imulb
sahf
jnp
lods
test
or
data16
lret
insb
jbe
cmp
jno
or
sbb
cmp
cmc
incb
xchg
out
xchg
mov
dec
loope
arpl
xchg
negb
loop
pop
dec
int
xor
pushf
aas
mov
inc
cmp
loop
mov
cmp
pop
test
cmp
mov
lods
add
pop
or
mov
jmp
mov
dec
or
xor
pushf
aaa
ret
add
aaa
out
pop
test
call
cwtl
loope
sbb
test
cld
mov
cmp
pop
mov
pop
cmp
sub
cwtl
cli
jecxz
daa
mov
into
sub
pop
sub
add
arpl
scas
ljmp
pop
fsubrp
cmpsl
jne
imul
roll
pop
je
fcompl
pop
inc
xlat
or
xsaveopt
mov
loop
in
mov
lret
push
pop
rorb
sti
or
dec
mov
ljmp
out
mov
insl
jle
inc
or
movd
inc
and
adc
pop
xchg
sahf
ret
jns
mov
shlb
stc
xchg
addr16
cltd
pop
int3
push
test
xor
rcr
cwtl
movsb
stos
xor
sarl
dec
mov
mov
popf
add
fst
dec
jp
mov
loopne
adc
sahf
mov
xchg
into
sahf
push
cmp
mov
mov
imul
inc
in
scas
jge
cwtl
gs
loop
addr16
or
mov
pop
rol
xchg
mov
adc
adc
std
cmc
xor
jb
cmp
mov
gs
dec
jge
cwtl
pop
mov
lock
jmp
pop
ror
and
aad
in
negb
xor
xchg
call
jecxz
in
andl
pop
ja
mov
and
leave
js
bound
sub
lds
mov
loope
iret
pop
cwtl
imul
or
inc
inc
mov
xor
cld
inc
or
imul
leave
lret
fsubp
push
in
aas
add
leave
xor
cmp
jae
mov
imul
or
jl
sbb
and
daa
or
fisubrs
je
popa
inc
movsl
xchg
add
xchg
jmp
test
and
shl
stos
aas
aas
add
and
xor
scas
push
addr16
popa
data16
cli
cmp
test
push
cmp
add
lret
add
adc
pop
pop
jle
push
test
mov
jae
add
mov
mov
mov
cmp
dec
jns
and
insl
sub
push
add
mov
mov
mov
into
lods
rcr
sbb
in
sub
pop
cmp
jns
roll
mov
mov
mov
arpl
add
mov
loope
mov
test
loopne
or
inc
test
xchg
xchg
js
int3
cmp
mov
push
xor
movsl
fdivrp
outsl
dec
push
pop
clc
cwtl
ret
popa
jno
aas
or
ret
jl
imulb
or
sahf
cmp
mov
loopne
mov
sbb
xchg
cmp
sbb
add
arpl
mov
mov
inc
std
push
push
repnz
jl
call
xchg
xchg
test
inc
adc
push
imul
jbe
leave
ljmp
lods
imul
mov
pminsw
dec
call
jns
adcl
sub
pop
pop
mov
fcomps
mov
loope
ds
bound
push
hlt
cmpl
mov
out
push
ret
lea
dec
cmpsb
add
sub
add
lods
in
pop
mov
iret
pop
jge
add
scas
inc
test
movsl
testb
scas
cmp
shr
mov
jmp
sahf
fstps
mov
cs
mov
notl
mov
mov
or
cmp
cmp
daa
cmp
push
xchg
mov
sub
sub
and
enter
leave
and
ss
cmp
filds
fs
lods
adc
xchg
in
add
lds
and
add
test
pop
in
push
repz
dec
fwait
jns
push
ret
pop
xchg
fwait
imul
je
in
jns
pushf
test
ss
mov
int
adc
xchg
lea
loop
pop
dec
andb
stos
inc
pop
loop
mov
pop
sbb
lcall
icebp
in
mov
aam
add
mov
ret
mov
sbb
jecxz
mov
jns
add
cmp
sbbl
or
add
out
lcall
cltd
sbbl
or
mov
adc
xor
das
aam
imul
ljmp
xlat
add
mov
pop
or
xor
les
pusha
mov
xchg
stos
xchg
xor
push
in
xchg
mov
int3
mov
inc
push
adc
inc
mov
cld
mov
jb
pushf
lds
add
and
sub
cli
out
movsl
insb
pop
pop
adc
daa
and
cmp
aad
pop
clc
jbe
xchg
movsl
sbb
xchg
fwait
push
cwtl
fimuls
mov
fstps
or
push
mov
cmp
xchg
pop
add
push
mov
jle
ret
jo
pushf
pop
inc
sti
xchg
lret
das
jp
sub
insb
dec
cmpsl
fwait
iret
cmp
std
mov
aad
movsb
repnz
mov
into
push
stc
mov
sbb
and
jo
lods
xor
mov
and
fcoms
sar
movzwl
adc
pushf
jns
je
ja
xorl
iret
popf
lods
popa
cltd
mov
sub
repz
mov
mov
cmp
pop
pop
xor
mov
cmc
inc
scas
xor
and
fcomps
data16
mov
adc
push
sarl
push
adc
cwtl
add
mov
jle
push
mov
pop
ret
cld
ljmp
xor
pop
pop
inc
les
xchg
dec
stos
cmp
inc
sahf
icebp
sub
sub
dec
aad
scas
push
jge
cmp
outsb
push
int3
add
adc
lret
mov
push
sbb
or
faddl
mov
jmp
int
popa
sbbb
mov
in
push
xor
or
add
mov
cmovnp
addb
and
ret
and
shl
push
fisubrs
cld
or
xchg
fbstp
xchg
inc
fwait
and
mov
pop
and
stos
or
arpl
adc
stc
mov
sbb
mov
lds
negb
dec
out
repz
idivb
sbb
pop
cld
push
adc
push
mov
jmp
dec
push
adc
lds
lret
mov
dec
out
mov
fbstp
mov
fsubrl
jnp
arpl
xor
push
lds
xchg
imul
rorl
inc
mov
sahf
ror
xchg
out
scas
popf
xchg
cld
sub
les
adc
inc
icebp
xchg
and
test
inc
xchg
inc
adc
and
mov
fsubs
insb
pushf
pop
jbe
loop
ficomps
inc
aaa
and
mov
xchg
mov
imul
or
daa
add
call
xor
call
xlat
ret
sub
loop
orb
lcall
sbb
sub
lods
jmp
scas
neg
stos
mov
arpl
sahf
jge
dec
adc
ja
lods
popa
jno
cli
imul
inc
lea
pop
push
jl
ja
out
popa
add
adc
fsub
xor
test
sub
das
jne,pt
imul
popa
xchg
xor
in
dec
push
lock
hlt
les
mov
cmp
fadds
bound
push
xchg
ljmp
add
mov
aad
mov
mov
xor
out
jg
repnz
pop
add
mov
cmp
sub
add
fwait
pop
jae
xor
sbb
aad
stos
cltd
adc
pop
mov
imul
test
xor
mov
cmp
sbb
mov
jle
cmp
xor
adc
out
mov
popf
inc
xchg
adc
int3
pop
nop
jmp
andb
xorb
aam
cmp
mov
scas
cmpsl
push
jno
test
ja
push
push
sarl
pushf
or
mov
mov
push
push
xlat
in
insl
mov
or
sbb
addr16
outsl
xor
mov
mov
imull
xchg
daa
add
sbb
pop
daa
pusha
inc
dec
fsub
cmpsl
jne
add
stos
or
add
or
mov
push
outsb
add
or
or
jmp
test
repz
and
and
xor
fcom
pop
xchg
push
cmpsl
mov
push
push
push
ret
mov
sub
scas
roll
cmpxchg
push
mov
xor
xchg
lds
mov
mov
inc
and
icebp
inc
adc
nop
in
mov
fstl
shlb
in
pusha
xchg
pop
cmpsb
loopne
fsubr
cld
xchg
mov
push
or
lret
push
lea
cmp
inc
mov
clc
hlt
test
in
scas
cltd
rolb
in
mov
or
jg
insb
dec
cmc
mov
xor
inc
mov
inc
pop
es
cld
lahf
mov
lea
es
mul
mov
xchg
add
out
mov
lods
mov
sti
insb
or
mov
fiaddl
mov
cmp
es
mov
pop
lock
dec
sar
adcb
daa
js
mov
js
xor
daa
jp
out
outsl
xlat
xchg
stos
inc
mov
push
lods
movsl
jg
jno
stos
xor
sub
sub
mov
pop
inc
lcall
sub
push
fistpl
rorl
dec
iret
orb
sub
sbb
fdivr
loope
bound
jp
adc
adc
aam
or
hlt
insb
mov
push
sub
pop
clc
clc
jp
jns
mov
sbb
pusha
dec
or
dec
jl
popl
test
popl
mov
and
sub
aaa
pop
sub
mov
adc
test
pop
in
pop
das
mov
iret
out
dec
push
jge
pop
push
call
push
lods
sub
out
pusha
addr16
or
ret
jle
pop
lods
adc
mov
das
add
adc
xchg
std
jno
scas
std
mov
sub
mov
adc
lock
ljmp
add
mov
pop
aam
push
sbb
pop
cwtl
mov
pop
fistpl
insb
pop
test
addr16
addr16
or
scas
lret
ret
add
aaa
pop
push
or
iret
roll
xchg
es
in
cmp
mov
popf
xchg
lods
dec
hlt
aad
shll
pop
sbb
loopne
aam
sub
lret
push
inc
pop
mov
out
lahf
adc
push
out
data16
daa
mull
sarb
ja
cmp
pop
and
in
popa
jmp
ds
ja
fwait
mov
clc
inc
call
ja
mov
call
add
jo
rorl
sbbl
cs
and
fdivl
sbb
loope
inc
push
jmp
jno
dec
xor
cltd
enter
lods
jo
pop
cmc
add
jns
xor
out
fsubrl
out
rcll
lahf
das
push
frstor
bnd
icebp
xor
pop
jmp
xor
insb
sbb
ret
jl
je
lret
or
mov
sbb
and
push
and
mov
sbb
sbb
pushl
inc
js
sub
mov
pop
rcrb
mov
mov
mov
adc
sbb
inc
popf
push
outsb
insb
movsb
dec
adc
or
insb
lcall
xchg
shr
pop
sub
xchg
lea
cmp
xlat
cltd
cmp
mov
mov
clc
mov
xor
dec
sbb
add
fmuls
mov
lahf
adc
inc
leave
rcrl
xor
lahf
push
add
jno
sbb
lock
lret
add
inc
cld
xor
add
dec
stos
jne
mov
idiv
inc
xor
push
aam
or
mov
shr
sub
aaa
push
jae
in
sbb
adc
adc
or
inc
test
loop
and
mov
or
cmp
push
xor
pop
jp
adc
jae
movsl
mov
pop
pop
jl
xchg
scas
xchg
or
lock
loopne
iret
loopne
pop
sub
inc
ficomps
lcall
jae
movsb
fisubrl
adc
xlat
dec
fnstsw
inc
cmp
mov
arpl
mov
cmp
pushf
lds
add
inc
je
dec
jnp
sub
mov
out
stos
rorl
mov
orl
sbb
cmpsb
xor
xor
mov
outsb
mov
mov
jmp
mov
scas
dec
dec
pop
fmul
cmp
push
aam
nopl
lds
imul
push
cmpsb
loope
outsl
and
lahf
or
pop
xchg
lcall
iret
jle
roll
ret
push
cmc
adc
test
arpl
ret
out
adc
cmpb
mov
sbb
xchg
movsl
shlb
and
cld
cmp
ds
pop
xchg
jmp
fldcw
add
push
pop
les
jp
or
leave
cmp
add
es
and
and
cmp
jbe
test
fidivrs
loop
mov
mov
mov
leave
sti
add
xchg
fxch
jns
or
mov
negl
aam
dec
incb
adc
pop
test
jmp
pop
pop
cmp
out
push
push
gs
cmp
adc
adc
mov
pop
clc
mov
push
ficomps
test
push
out
or
rclb
push
cmpsl
dec
jbe
fcmove
daa
stos
cld
jne
mov
repz
cmp
data16
ss
sbb
xor
xchg
pop
mov
xchg
test
inc
or
mov
scas
es
sahf
hlt
fsubp
pop
repz
pop
and
dec
and
xchg
aad
xchg
push
ds
push
or
push
test
gs
shrb
or
jne
cli
xorb
and
sbb
push
jp
jnp
cmp
pop
dec
out
jge
popf
in
mov
jge
push
adc
add
jns
xchg
inc
mov
mov
out
mov
xchg
adc
lahf
adc
js
cmp
andb
mov
jbe
mov
addr16
xorb
imul
adc
call
pusha
mov
or
leave
dec
add
xchg
or
hlt
ja
pop
and
xchg
add
push
xchg
push
scas
pop
leave
das
scas
pop
fistpll
stc
out
loope
adc
fstpt
pop
fsubr
test
sub
mov
or
inc
xlat
loopne
in
pop
daa
nop
push
pop
test
scas
arpl
daa
xor
pop
aad
sti
mov
xor
loop
jnp
mov
adc
xchg
out
jmp
addr16
jl
in
pop
aam
dec
cmovbe
cld
xchg
repz
nop
loopne
hlt
mov
popf
xchg
sbb
out
lods
imul
add
jb
imul
shll
mov
fiaddl
xchg
int3
adc
iret
sahf
outsb
in
dec
xchg
pop
imul
ja
fwait
dec
movsl
out
repz
and
repnz
addr16
mov
adc
sub
mov
rcrl
int3
mov
sbb
xor
dec
cmp
fwait
test
popa
jns
mov
pusha
call
movsl
and
icebp
enter
xchg
into
loope
mov
je
lret
xor
lret
xor
inc
loopne
cmc
dec
cmp
jp
cmpsb
cs
mov
jae
popa
pop
jge
stc
mov
int3
ja
je
fidivs
shlb
mov
xchg
pop
mov
jl
push
mov
pop
sbb
stos
inc
mov
lahf
imul
jae
dec
mov
xchg
sub
subb
mov
ja
out
sub
sbb
cmpsl
push
loopne
cmp
jg
add
int
data16
mov
jl
jle
sbb
ficoms
not
xor
push
xchg
and
fdivs
or
mov
sub
jg
cmp
mov
mov
cmp
mov
lret
xor
inc
loopne
cmp
xchg
dec
push
filds
cmpsl
outsb
push
pop
es
shl
jmp
adc
out
mov
jmp
add
or
cmpl
push
xchg
inc
mov
es
pop
cs
sbb
sbb
jae
or
fisubs
and
cli
add
and
iret
icebp
test
insb
adc
dec
xor
pop
arpl
and
mov
pop
push
fmuls
fwait
inc
push
jmp
das
xor
jo
mov
dec
sub
out
iret
bound
inc
or
jne
shl
fistpll
jge
pop
shrb
arpl
adc
jae
cmpsb
gs
jns
jp
jb
mov
clc
push
aam
mov
inc
mov
outsb
pop
dec
mov
and
pop
jecxz
adc
mov
add
cmp
or
and
cs
pusha
scas
cmp
sbb
sbbl
adc
xor
hlt
lds
jmp
fsubl
fcompl
mov
dec
inc
cmp
add
outsb
pop
inc
fmuls
push
test
push
jle
pushw
rorl
mov
and
shrl
mov
inc
mov
test
rorl
ds
pop
or
adc
in
scas
movsl
dec
ja
scas
jecxz
push
fs
popf
cmp
sub
and
cmp
jmp
sbb
inc
inc
rorb
lods
mov
mov
and
out
pusha
inc
adc
cld
push
dec
adcl
mov
nop
test
ffree
jb
inc
out
dec
jecxz
push
imul
cltd
inc
cltd
pop
popa
push
inc
xor
leave
cmp
out
jg
inc
mov
ficompl
repz
mull
lds
fs
int3
stos
rol
loope
inc
or
das
pop
test
mov
addr16
jae
pop
loopne
xor
mov
popf
data16
inc
inc
xor
cltd
cmp
xor
mov
shlb
es
xchg
push
xchg
daa
dec
nop
unpckhps
dec
loopne
xlat
aam
pop
push
xchg
mov
fprem1
into
inc
scas
mov
cmp
maxps
imull
ds
adc
jp
sahf
inc
and
dec
mov
pop
repz
ljmp
jge
add
lret
cmpsl
divl
adc
sub
mov
idivl
or
jae
add
fdivrs
ljmp
out
push
je
popl
inc
daa
arpl
bound
xchg
out
icebp
out
jle
jmp
dec
adcl
mov
push
addr16
fdivrs
pushf
inc
ret
cmpsb
dec
jo
hlt
cli
cmpb
push
dec
shl
xchg
mov
outsl
push
add
inc
mov
dec
mov
dec
call
sbb
data16
pushf
pop
sarl
mov
mov
ret
subb
pop
dec
ss
stos
sbb
or
fldt
mov
add
cmovg
enter
mov
xorl
mov
dec
sbb
fs
push
push
popf
iret
cmp
dec
cmp
out
les
cmp
or
je
in
test
jb
cli
jge
xchg
push
mov
jno
outsl
add
sti
mov
loop
mov
mov
pusha
rorl
movsl
ret
call
mov
pop
aad
es
fldl
scas
adc
cltd
lea
and
in
testb
push
jg
ds
mov
dec
xor
dec
les
xlat
pop
sti
popf
cmpsl
out
movl
xor
cmp
outsl
cmp
in
enter
dec
out
lock
add
sub
or
mov
dec
fisttpl
mov
ljmp
push
dec
xor
popf
jmp
jo
sbb
mov
ja
xchg
push
cmc
shll
in
int
js
out
xor
sub
mov
nop
adc
out
inc
es
outsb
aaa
mov
jl
cmpsl
inc
xchg
sbb
cmpsl
aam
cmpb
cmp
loop
mov
push
xor
pop
bound
mov
ret
pop
xor
clc
sbbl
sub
pop
fmull
movsl
lcall
jle
inc
movsl
xchg
adc
pop
jg
mov
outsl
sbbb
shlb
xchg
dec
mov
xchg
or
negb
jno
int
int3
add
sub
cmp
push
pop
pop
gs
scas
or
sbb
cmp
cwtl
add
sbb
xlat
adc
cmp
aas
pop
jbe
mov
xor
push
mov
sbb
cwtl
jp
testl
dec
and
push
imul
daa
xor
out
notb
in
test
lret
call
mov
fcompl
popf
and
test
xor
ret
jo
fdivrl
lret
or
scas
leave
neg
push
mov
test
add
popf
aas
mov
or
dec
mov
inc
in
inc
fcmove
adc
jmp
mov
xchg
xor
int
scas
addr16
xchg
loop
dec
mov
xor
cltd
xchg
add
xchg
imull
lret
mov
pop
repz
push
adc
cmp
mov
or
sbb
sub
xor
das
mov
jecxz
lret
stc
dec
and
in
adc
dec
add
inc
in
loopne
scas
xchg
cmp
aas
faddl
fstps
ret
loope
lds
std
cmp
mov
test
in
pop
lret
mov
lret
push
add
mov
mov
lcall
ret
cmp
cmp
push
pop
mov
into
pop
xor
iret
insl
jo
inc
cmp
fdivs
stos
add
fstpt
xchg
jne
mov
pop
lahf
adc
addr16
sub
les
lods
in
andl
jl
mov
mov
repnz
lcall
jne
mov
dec
cmp
ss
fwait
cmp
outsl
ret
and
nop
jo
xor
and
xlat
das
imulb
inc
test
stc
add
or
xchg
and
cli
mov
imul
je
fisttps
mov
jb
dec
mov
int3
xchg
and
shrb
scas
ds
add
and
sbb
jns
movsl
mov
mov
aaa
mulb
push
and
xor
pusha
pop
aaa
jecxz
stos
test
jp
fists
push
sti
cltd
cmpsb
mov
fidivrl
imul
aas
mov
sbb
cmpsb
clc
mov
xchg
mov
and
cmp
adc
or
inc
js
jmp
mov
dec
dec
inc
jg
mov
dec
xor
add
fdivrl
bound
lock
enter
hlt
outsb
ljmp
inc
aad
sbb
pop
mov
dec
sub
mov
sahf
jl
mov
xor
mull
dec
vunpcklps
mov
jae
jg
push
mov
jno
xlat
mov
cmp
pusha
notl
add
adc
cli
dec
dec
cmp
add
fstl
loopne
sub
sub
mov
adcl
xor
in
movb
cmp
loope
mov
repnz
cmp
or
adc
jnp
lahf
sub
and
lods
adc
or
jl
lods
adc
das
icebp
repnz
jl
ss
loope
loope
sub
andl
faddl
mov
les
ljmp
xchg
mov
enter
inc
iret
std
fs
mov
jno
mov
inc
lcall
pop
sbb
daa
jg
cld
xchg
lcall
lods
push
std
push
mov
fimuls
xorb
imul
add
inc
mov
loopne
adc
inc
and
add
pop
jns
out
js
dec
call
pop
xor
mov
roll
cmp
cmp
pop
inc
xchg
xlat
je
adc
insl
lcall
repnz
movl
cmp
ficompl
insl
and
cli
or
out
or
sahf
sub
jb
cltd
imul
and
loope
push
inc
movsl
lods
add
mov
jno
test
jg
inc
ss
mov
setns
insb
fsubrl
cli
sub
add
pop
jle
dec
fsubs
inc
sub
or
adc
aaa
das
repz
pop
mov
xchg
mov
add
cld
mov
out
push
mov
mov
xchg
cmovns
inc
imul
jae
xchg
jmp
aas
mov
and
add
enter
dec
cld
add
arpl
fwait
jb
cmp
pop
call
jb
jecxz
fstl
mov
adc
stos
mov
adc
pop
xchg
xor
int3
fmulp
xchg
js
jb
xchg
das
je
cmpsl
push
mov
ljmp
iret
loop
push
out
popf
push
int3
fwait
pop
notb
mov
add
dec
outsb
jg
scas
shld
hlt
fisttpl
fwait
adc
lcall
inc
lods
rcrl
stc
push
mov
inc
in
popa
jmp
jbe
pop
jnp
sbb
sbb
pop
jno
cli
clc
sub
mov
cmp
xchg
add
mov
insl
fadds
divl
dec
push
mov
ror
out
cmpsb
inc
or
adc
shr
inc
cltd
fisttps
test
data16
or
jp
or
jns
imul
mov
adc
sbb
push
mov
testb
mov
inc
jbe
cmp
mov
bound
mov
sbb
fmull
lods
in
cs
in
fistps
insl
mov
cwtl
push
gs
lods
rolb
in
pop
cld
xchg
pushf
adc
sub
sahf
popf
jno
or
push
pop
fiadds
imul
cmp
push
and
and
dec
sbb
insl
xor
cmp
xchg
mov
divb
pushf
or
cmp
pop
jbe
push
or
shl
leave
imul
xor
cs
test
out
and
lcall
sub
push
in
xchg
mov
call
mov
mov
js
cmp
add
cmp
mov
sbb
adc
repz
cmc
mov
lret
cmp
sarb
mov
adc
in
movsb
cli
arpl
or
shll
lods
rol
dec
frstor
xchg
adc
jb
cli
sahf
test
or
inc
pop
push
lds
inc
int
fld
loope
push
ror
xlat
push
xchg
cld
mul
or
repz
adc
sarb
push
mov
dec
sub
add
pusha
cmp
sbb
push
jle
in
aas
push
mov
xchg
jecxz
stc
ffreep
pop
les
fnstcw
frstor
sbb
mov
ret
orl
sbb
sub
push
or
in
cli
cltd
cmpsb
adc
xchg
fisttps
fidivrl
xchg
outsl
lcall
sbb
jp
pop
pop
jns
sbbl
jle
fsts
pop
sti
mov
data16
push
adc
or
mov
sbb
test
xchg
cmp
imul
imul
mov
sar
out
enter
lahf
imul
outsb
mov
pop
imul
jg
inc
or
lock
cltd
scas
add
xchg
pop
cmc
fadd
int3
pop
adc
adc
adcl
test
je
or
sbb
mov
adc
sbb
jae
sbb
mov
jge
ljmp
mov
mov
mov
mov
imul
subl
push
xor
lahf
outsl
test
xorb
fcoms
inc
arpl
out
mov
in
pop
pusha
add
movsb
sar
ja
add
and
pop
xor
out
shl
pop
rcll
mov
aam
push
sub
int
jle
repz
cmc
dec
lcall
xor
xchg
adc
sbb
mov
stos
aas
repz
sbb
inc
out
sbb
jae
in
jno
cwtl
fsubl
ret
cmp
cmp
push
lahf
imul
pop
mov
dec
gs
mov
cmpsb
outsb
rcrl
push
popf
iret
int3
imul
lret
std
cmp
sub
mov
pop
adc
inc
xor
popf
jno
mov
jmp
dec
and
xchg
orl
xchg
scas
test
lods
fs
adc
cmp
outsb
and
imul
mov
inc
pop
imul
add
pop
cmpsl
sti
lret
adc
arpl
jle
loop
pop
or
hlt
pushf
inc
pop
dec
aam
rorb
mov
lock
loopne
push
ret
insb
cld
negb
aas
pop
clc
cltd
and
rorl
test
andb
and
loopne
dec
out
lea
or
pusha
lock
push
scas
ret
movsb
ret
push
adc
mov
or
fs
jae
xor
and
aam
sti
ret
call
lcall
ljmp
inc
or
sbb
sarl
ficoms
pop
and
cmpsb
xchg
or
jnp
idivl
and
or
dec
push
xor
repz
and
inc
in
in
movsb
ret
es
pop
repnz
jnp
pop
dec
add
mov
cmp
movsb
push
inc
adc
cmp
fistl
popf
jp
sbb
insb
mov
in
lock
xchg
and
pop
fbld
or
ja
mov
lock
lret
les
mov
sub
nop
add
and
jns
dec
push
mov
test
or
icebp
int3
cmpsl
xor
push
loope
jl
jne
sub
mov
mov
lods
adc
aas
mov
jns
shll
cmp
inc
add
aas
sub
xor
sbb
or
mov
mov
sub
or
lret
fnstenv
outsl
stc
clc
lock
pop
pop
nop
adc
add
inc
cmpsb
xchg
cld
cltd
cmp
add
mov
mov
cmp
inc
sbb
popa
call
xchg
cmpsb
push
adcl
lahf
adcl
popa
in
inc
subl
jb
aam
pop
sub
loop
inc
adc
jmp
iret
sahf
push
mov
in
sub
aam
in
and
cltd
push
lods
push
sbb
inc
jbe
mov
or
sahf
mov
mov
jmp
shlb
je
jnp
pop
cmp
into
das
adc
jmp
adc
daa
lret
or
sbb
test
or
sti
pop
pop
pop
lahf
in
aam
jb
xor
jge
mov
mov
stos
mov
push
iret
jnp
pop
jecxz
cli
in
cmp
dec
lea
mov
and
das
out
inc
popf
pop
insb
leave
adc
clc
pushf
jp
aad
stos
insl
xchg
fcomi
bound
sbb
fwait
loopne
mov
and
mov
jne
xor
pop
data16
lret
push
sub
cmp
cltd
xor
pop
clc
rclb
push
stc
or
mov
or
subb
rol
or
ret
and
ss
outsb
push
loopne
jno
push
cmp
and
sbb
cs
pop
push
pop
into
jb
addr16
jp
into
rorl
bound
mov
pop
mov
ja
lea
lock
es
pop
cmp
int3
lahf
add
jb
lods
sbb
xor
jae
xlat
fisubrl
inc
movsl
inc
pop
sbb
xor
xor
dec
push
into
clflush
mov
inc
rclb
out
rclb
or
adc
imull
cmp
push
add
aam
adc
bound
push
mov
ss
mov
popa
or
and
divb
hlt
test
jno
adc
cmp
mov
scas
mov
fsubrl
xchg
ljmp
push
addr16
jecxz
in
or
inc
add
ret
movsb
imul
ja
sarb
lds
cmc
inc
adc
repnz
pusha
jb
ds
add
adc
mov
sbb
xchg
mov
mov
or
mov
fmull
shrl
xchg
mov
mov
in
xchg
cmp
add
outsb
out
in
in
xchg
cmp
iret
mov
xor
dec
stos
inc
inc
mov
fcoml
sub
dec
and
outsb
pop
fidivl
adcl
lods
pusha
pop
xor
addb
scas
into
xchg
jno
mov
aas
mov
repnz
es
cmp
xor
int3
mov
sub
cmpsl
je
adc
xor
or
movsl
loope
push
ljmp
aad
rclb
cmp
call
adc
xlat
mov
int3
xor
push
and
cltd
lock
lret
loope
rorl
inc
leave
sahf
int
add
loopne
in
or
or
iret
adc
std
imulb
xor
in
cmp
mov
fiadds
loop
pop
push
and
fcmovb
data16
test
inc
loopne
clc
push
inc
aas
pop
int
mov
fbstp
inc
jae
xchg
adc
push
inc
mov
sub
dec
rclb
push
dec
dec
scas
divl
add
inc
stos
lret
cmp
scas
xchg
mov
adc
add
push
and
and
icebp
inc
xchg
jecxz
xor
addr16
lock
mov
lret
pop
push
xchg
test
add
push
pop
dec
jns
in
mov
dec
jg
inc
push
call
jmp
hlt
ds
int3
flds
cmp
fidivrl
stc
popl
add
cmpsb
ljmp
adc
insl
dec
clc
xchg
cld
aam
jmp
cmp
mov
cld
movb
xchg
mov
jae
sar
les
rol
leave
ret
add
mov
dec
je
jge
xor
mov
dec
aad
mov
popa
clc
mov
fdivrl
ss
add
push
in
inc
or
add
gs
jmp
rclb
xchg
loopne
in
xor
call
inc
imul
daa
add
mov
and
rorb
enter
cmpb
movsl
ss
and
dec
dec
push
lods
or
sub
mov
jg
les
icebp
mov
mov
clc
testl
js
pop
jmp
enter
in
mov
notl
pop
or
dec
cmp
nop
iret
inc
jg
ret
adc
insb
pop
bound
je
dec
fsts
jne
addb
cltd
cmp
int
into
outsb
xchg
and
xorl
into
jge
outsb
dec
inc
jmp
adc
in
push
cmp
pop
mov
hlt
gs
xchg
push
aaa
push
jle
repz
inc
hlt
push
es
mov
fcoml
pusha
leave
xchg
jecxz
push
push
sbb
cli
pop
ja
push
repz
das
data16
jg
in
subl
inc
adc
add
jne
add
aaa
sbb
xchg
pop
mov
std
add
push
pop
xor
dec
cmpsl
sbb
mov
outsb
movsb
sbb
popa
cmp
adc
lret
xor
cltd
mov
mov
sar
xor
ret
cmc
pop
in
lods
ret
pop
cmp
ret
and
enter
in
rclb
inc
cltd
inc
das
dec
sbb
mov
mov
xchg
mov
inc
dec
repz
arpl
imul
add
jbe
lods
jne
jmp
xor
inc
inc
stos
rolb
cmp
ja
in
outsb
xchg
xchg
mov
xchg
sub
and
pop
mov
sbb
hlt
movzbl
clc
pop
jp
stos
mov
add
cmp
sub
mov
sub
pop
xchg
jge
and
mov
jns
lret
cmc
in
fcoms
cmpsl
inc
cli
sti
add
scas
lods
mov
add
ret
loopne
sub
jmp
xor
imul
pop
mov
pop
das
movsb
xchg
sub
or
pop
int
icebp
cs
lds
pop
cmp
and
pushf
js
inc
inc
int
add
fnstenv
out
cmc
adc
lods
push
es
adc
cli
negb
push
jg
data16
fbstp
mov
push
shlb
xchg
sahf
mov
mov
xchg
xchg
shlb
fld
dec
push
xchg
ss
mov
lods
pop
cmp
or
loop
jl
js
lods
lahf
out
inc
jmp
jmp
andl
scas
pop
test
clc
mov
mov
mov
inc
mov
lods
push
sbb
sbb
or
repnz
imul
jno
sub
in
or
les
mov
fdivl
sbb
xlat
test
lcall
decl
jae
cli
in
sbb
popa
in
fiadds
jae
in
sbb
dec
mov
jae
xor
dec
shll
fstp
mov
pushf
dec
int3
loope
jnp
roll
outsl
sbb
lret
in
decl
fs
cmpsb
loop
divl
lret
into
dec
inc
pop
push
adc
cli
into
xchg
test
jp
dec
cltd
das
ljmp
mov
cmp
pop
cltd
dec
bound
jne
dec
addr16
pop
outsl
and
iret
js
rcl
and
fs
mov
and
ret
pop
adc
dec
push
out
mov
loopne
mov
rcrb
jns
out
sahf
cld
lcall
xor
aaa
hlt
lock
push
mov
jae
add
sbbb
dec
imul
jne
test
pusha
dec
add
mov
inc
ficomps
arpl
pushf
clc
lret
aam
idivb
jno
ret
fidivrs
int3
pop
popf
and
gs
mov
lock
aad
sub
pop
addl
sub
pop
lods
ret
sub
sar
test
das
and
ja
jle
mov
jo
add
outsb
sbb
pop
std
sub
add
pop
stos
popf
cmpsl
sti
mov
mov
xchg
pop
jb
add
push
mov
sub
cmpsb
test
mov
cmp
or
lret
insl
or
les
fwait
scas
mov
repz
outsl
inc
fistps
stos
cmp
enter
aam
cmp
lahf
rolb
and
ljmp
jecxz
or
in
jmp
ror
pop
pushf
andl
loopne
out
and
ret
stos
push
mov
add
xchg
imul
cmc
sub
repz
lea
popf
mov
dec
cli
in
inc
cmc
mov
pop
lods
xor
jmp
ja
and
inc
pop
aam
loop
sbb
pop
adc
in
aas
xor
mov
dec
shll
fnstsw
pop
xor
jg
test
stc
push
sarl
mov
add
mulb
jg
mov
sahf
push
jno
push
ss
pop
notb
jo
arpl
xchg
lods
pop
push
les
jne
pop
xchg
out
test
cmp
push
movl
mov
mov
mov
scas
mov
fcoml
sbb
iret
sub
add
daa
pop
enter
dec
adc
pop
jnp
sarb
pop
push
lods
aad
cmove
movsb
jmp
pop
ret
sbb
in
pop
adc
out
outsl
sub
ret
jbe
mov
mov
sbb
push
push
pop
xchg
sbb
pop
cltd
pop
sub
ret
pop
cli
mov
jl
jne
repnz
xor
adc
mov
jb
jecxz
xchg
aad
mov
mov
enter
test
xchg
lcall
push
and
icebp
arpl
test
xchg
aam
push
pop
imul
stos
test
or
xchg
sbb
imul
adc
fistpl
call
sub
mov
cld
xor
out
jl
jns
bound
jge
faddl
cmp
outsl
lret
js
rolb
cs
out
aas
js
cltd
adc
push
cli
jns
fisttpl
subb
decl
mov
insl
mov
or
and
jmp
icebp
fcmovnbe
push
stos
imul
out
call
ret
scas
andb
popf
jp
pop
fcomps
mov
jl
adc
negb
mov
cmpsl
push
pop
icebp
cld
xor
jl
mov
and
jbe
dec
bound
jne
mov
or
pusha
jp,pn
rclb
pop
jmp
xlat
fnsave
cmpsb
xchg
push
lea
dec
icebp
in
mov
adc
ret
loop
and
lcall
dec
add
push
cld
into
sub
push
out
mov
mov
add
or
or
cli
and
std
and
aad
add
pop
push
cmp
outsl
fnstcw
push
imul
push
or
sub
test
pop
in
clc
mov
push
rcrl
xchg
rcpps
mov
push
lahf
or
push
leave
call
test
pop
mov
xor
cmp
mov
and
lret
sbbl
hlt
call
mov
addb
xchg
mov
je
shr
test
xchg
mov
pop
jae
push
sti
add
jge
movsl
adc
jp
inc
dec
or
ljmp
sbb
mov
fbstp
cmc
push
cmp
xchg
imul
in
inc
leave
cmp
das
rorl
imul
sahf
mov
push
test
in
cs
div
pop
pop
repz
iret
ja
jmp
mov
jl
cwtl
in
cmp
adc
pop
and
testb
add
push
lcall
vpsrlq
and
xchg
cmp
gs
mov
mov
pushl
add
jns
loopne
inc
pop
adc
jne
scas
mov
call
xor
sarb
in
leave
frndint
int3
or
inc
push
nop
mov
xor
mov
mov
inc
inc
cltd
scas
pop
lahf
test
loopne
lret
cmp
outsb
stos
add
add
call
xchg
pop
arpl
pop
imul
push
cmpsl
addl
mov
in
pop
ret
jns
sbb
std
sub
sbb
or
or
jae
ss
mov
fwait
es
enter
inc
imul
or
je
in
cwtl
push
sub
outsl
and
sub
test
fwait
mov
sbb
xor
mov
cmp
into
dec
mov
loope
cli
cmp
loop
dec
push
fisubrs
inc
test
push
scas
movsb
fsub
xlat
mov
movb
test
push
addr16
sbb
sahf
push
mov
xchg
out
push
add
adc
or
fidivrl
outsl
fidivl
ljmp
push
out
and
pop
cmp
push
add
push
push
lods
call
push
mov
mov
enter
sub
jp
stos
adc
jge
fdivrl
pop
rdtsc
int3
xor
mov
mov
xor
enter
push
iret
jp
inc
les
adc
inc
cs
mulb
sbb
je
orb
mov
test
dec
jge
lds
mov
data16
out
mov
mov
jge
push
dec
cmpsl
fsts
sbb
pop
dec
push
cmc
push
inc
push
test
call
jb
cmp
sarl
dec
adc
push
fimull
or
push
adc
jmp
popl
fwait
dec
adc
pop
push
jae
sahf
adc
inc
jne
sbbl
das
pop
inc
xchg
cmp
cmp
es
xchg
xchg
cld
mov
add
inc
jecxz,pt
es
pop
or
bound
ficomps
mov
popf
mov
cli
push
mov
cli
adc
pusha
fdivrs
arpl
and
mov
aad
mov
xchg
or
jmp
stc
inc
sti
xchg
and
sbb
in
adc
je
sub
movsb
push
arpl
imul
gs
or
lcall
mov
fists
inc
test
dec
ds
repz
or
in
add
pop
sti
outsb
lods
xor
jns
scas
cmp
dec
pushf
or
hlt
dec
pushf
jns
ret
je
inc
pshufw
mulb
adcl
ret
jecxz
fcmovbe
adc
fldcw
and
push
into
shl
jnp
push
inc
dec
jmp
jecxz
add
adc
sub
xchg
mov
scas
fdivrs
and
push
dec
dec
popf
cmpsl
and
fildl
adc
cmp
insl
inc
jnp
clc
push
sub
xor
iret
jg
mov
mov
clc
push
mov
mov
ljmp
mov
mov
inc
lods
scas
add
xlat
jno
fcomps
mov
or
test
adc
fs
lods
jb
out
mov
cmp
ret
mov
xchg
daa
and
add
int
push
test
push
and
xor
or
les
mov
mov
lahf
fwait
dec
imul
in
pop
lea
push
inc
stos
pop
xchg
adc
and
insb
push
add
sub
mov
sub
or
adc
addb
jl
jbe
fnstsw
jl
hlt
shlb
dec
mov
xlat
push
inc
ret
sbb
push
testl
fldl
mov
push
dec
jle
out
aad
rclb
pop
lods
js
inc
xchg
adc
testl
ficoml
lods
add
mov
jmp
test
or
dec
in
dec
popl
mov
addl
stc
pusha
mov
ss
xor
fsubrp
rorb
cmp
mov
inc
sbb
cli
push
and
out
xchg
adc
mov
insl
inc
scas
and
cmc
add
and
shlb
shrb
inc
dec
bound
fstl
cmp
repz
psrlq
lret
or
xchg
add
lret
pop
adc
pusha
cmp
cmp
push
sahf
mov
rcr
mov
test
cmp
rcrl
outsb
cmpsb
sub
iret
mov
dec
sti
bound
mov
cmp
ret
and
fldl
add
fdivrl
scas
scas
bound
popa
repnz
jecxz
icebp
clc
fwait
jl
xchg
je
sbbb
stc
mov
inc
test
inc
insb
sbb
aad
and
lods
dec
cmp
idivb
test
into
gs
mov
pusha
or
pop
mov
cmc
sbb
int3
test
addr16
push
xchg
fmuls
sub
inc
xor
cli
adc
lret
popf
test
jno
fsubrp
jge
inc
and
sbb
out
aam
scas
std
daa
lcall
out
mov
adc
sub
aas
pop
and
pop
push
popf
lods
loop
cmpsb
mov
mov
clc
lock
mov
or
into
mov
loope
adc
cs
mov
adc
insb
daa
push
mov
xor
repnz
call
call
add
cmpsl
shrl
je
add
jae
sub
call
mov
hlt
leave
push
sti
out
push
imul
fnstsw
daa
pop
pop
adc
or
das
push
jg
ret
cwtl
inc
shl
mov
or
xor
mov
mov
inc
inc
mov
pop
mov
pusha
xchg
jns
aaa
push
lods
mov
adc
pushf
lret
mov
mov
mov
sbb
cld
daa
fs
inc
adc
es
mov
and
and
xor
xchg
cltd
xlat
mulb
mov
call
gs
xor
mov
push
fcoms
pop
out
nop
std
xchg
imul
stos
in
or
push
fwait
xchg
cmp
sbb
in
push
adc
mov
fwait
shl
call
test
mov
lcall
jge
mov
cltd
cld
fs
test
sarb
int
fildll
xor
add
sub
or
and
xor
adc
popf
jbe
jb
cld
jle
mov
ljmp
cmp
or
pushf
xchg
test
loope
xor
fcomps
pop
push
pop
push
jmp
jae
jle
fnstsw
jno
fiaddl
push
cmp
sbb
inc
insb
das
sub
cwtl
mov
jae
push
stos
pop
xlat
mov
jle
push
filds
xchg
mov
cmpb
mov
mov
cli
dec
cmp
scas
call
xchg
orl
push
xchg
not
mov
lret
adc
lods
cmp
inc
loope
incb
into
popf
sub
pop
dec
xchg
setns
fistpl
ficoml
popf
shrb
imul
mov
push
inc
cmp
adc
ficompl
fcom
adc
sti
push
jo
cmpsl
or
jp
jns
cmpb
into
lahf
push
cmp
xor
dec
cmc
push
push
rol
inc
scas
lahf
ljmp
sub
push
jb
xchg
popa
daa
pusha
mov
sahf
shrb
sub
gs
mov
into
mov
orb
sbb
jmp
or
and
outsb
mov
xchg
xchg
inc
imulb
adc
cmp
xor
in
jo
out
jae
push
lods
inc
bound
mov
jno
pop
jmp
jl
lock
sahf
not
test
lods
ficoml
inc
lds
adc
lret
mov
popa
or
jb
sahf
notb
or
imul
pop
pop
mov
add
lds
adcb
popa
xor
pop
pop
insb
fisubrl
or
adc
jne
lret
in
insl
and
push
lock
test
test
push
in
inc
cs
in
js
sub
adc
push
stos
testl
xor
fdiv
int
decb
and
adc
mov
xor
dec
lcall
ret
add
mov
and
sti
aad
dec
lcall
hlt
cmp
mov
adc
movsb
pop
jnp
loope
push
xor
sub
and
rorl
mov
xchg
mov
outsb
adcl
add
jne
aad
bound
repz
mov
adc
sub
je
shlb
adc
mulb
push
sub
sbb
fs
cwtl
pusha
adc
fwait
mov
iret
pop
ss
push
jge
xor
cld
bound
das
mov
mov
sbb
enter
sbb
inc
mov
shl
mov
std
jae
test
imul
mov
push
and
cli
sub
add
shlb
pop
insb
cmp
mov
lcall
imul
push
stos
repz
dec
jb
pop
inc
movsb
inc
jmp
iret
mov
loopne
add
jmp
cwtl
cmpsl
enter
lea
fmuls
aad
daa
inc
fistl
inc
jmp
xor
aas
and
lret
test
outsb
imul
fcoms
and
jmp
dec
jg
add
es
roll
aas
lea
shll
push
or
inc
jo
movsl
cli
out
icebp
pop
add
out
das
sti
data16
fcomi
mov
gs
inc
dec
lds
sub
pop
mov
out
sbb
mov
xchg
mov
rolb
test
sbb
fbld
into
add
cmc
jmp
xchg
push
pop
pop
push
xor
pop
sbb
iret
pop
sbb
out
sbb
mov
inc
adcb
adc
or
and
pop
icebp
push
adc
pop
cmpsl
add
aam
test
adc
mov
add
mov
in
xor
push
sbb
xchg
mov
inc
push
push
insb
push
ret
dec
sbb
mov
pop
lock
push
test
test
aaa
movsb
mov
sti
jl
pop
movsb
pop
sub
and
imul
mov
adc
lret
loopne
daa
pusha
jbe
repz
and
shlb
sub
cmp
add
sahf
fstps
mov
out
cmp
test
nop
sub
lds
sub
test
dec
int3
pop
adc
add
xchg
xor
xlat
mov
notb
ds
aam
addr16
cmc
loop
mov
mov
mov
push
stos
mov
jecxz
sub
and
pop
xchg
movsl
test
dec
sbb
and
jp
insl
pop
xor
sub
add
shlb
mov
sbb
loopne
jecxz
lcall
pop
and
popf
push
pop
bound
pop
loope
push
daa
cmp
push
pop
outsl
mov
push
mov
addr16
xor
and
repnz
shrb
push
ficompl
or
add
cmp
into
sub
push
push
cmp
xchg
js
das
pop
call
je
vsubpd
pop
fmul
adc
inc
cli
adc
xchg
xchg
inc
add
arpl
test
xor
sbb
push
jp
stos
and
push
ds
pop
push
add
jge
adcl
inc
fidivrs
in
in
xchg
or
xor
xor
pusha
or
xchg
daa
mov
ret
out
and
mov
shlb
and
jg
aas
xchg
stos
imul
mov
sub
addr16
ret
xor
xchg
xor
or
repnz
mov
sti
movsl
pop
shll
jmp
out
mov
icebp
ss
and
adc
cs
mov
add
mov
lock
jl
int
mov
dec
rcl
std
adc
ret
jne
jp
sbb
mov
cmp
lcall
adc
mov
xor
cli
mov
shll
repnz
jb
std
int
shrl
jl
rcr
test
push
aas
sti
xchg
insl
jo
dec
and
test
icebp
cmp
imul
mov
cli
cmp
enter
aam
inc
xchg
xchg
out
out
rcrb
cltd
int
mov
inc
cmc
adc
mov
mov
xchg
push
jno
fs
mov
fcmovnb
xchg
adc
sub
dec
repnz
std
les
push
dec
jl
ljmp
dec
jo
xchg
ljmp
add
mov
insl
fsubrs
repz
mov
das
or
mov
xor
cs
lds
xor
insb
inc
hlt
sbb
push
aad
push
scas
jle
push
add
push
outsb
xor
outsl
jb
dec
xchg
and
dec
rol
outsl
and
rcrb
lcall
jmp
xor
jne
dec
loop
in
sbb
cmpl
sbb
mov
inc
jle
in
pop
xor
call
js
fcmove
into
in
bound
outsl
es
inc
rorl
in
jae
leave
das
sti
dec
add
out
mov
jge
fdivr
push
pushfw
out
sti
xchg
dec
sbb
add
rorl
xor
in
cld
stos
js
inc
ret
in
sbbl
bound
js
xor
push
fsubr
testl
or
sbb
movsl
inc
adc
push
adc
arpl
xchg
add
movl
xlat
lods
je
cmp
jge
out
jnp
stc
sub
sbb
out
gs
cmpl
cmpsb
sbb
sub
adc
pop
mov
stos
add
or
out
mov
lret
jnp
jmp
or
ret
movsl
leave
in
push
rcrb
jbe
xchg
mov
xor
data16
movsl
in
daa
mov
mov
pop
movsb
mov
xlat
or
icebp
xchg
inc
mov
xchg
dec
jae
mov
mov
scas
js
sbb
sbb
or
mov
or
stos
inc
test
xor
pop
or
push
or
fmul
push
adc
cmpb
hlt
mov
daa
xchg
daa
cmp
lahf
mov
scas
aaa
and
call
push
cld
jmp
daa
xor
in
cmp
mov
repz
call
push
and
mov
inc
mov
mov
dec
jmp
dec
cmc
je
mov
popa
jle
inc
rorb
xchg
in
aaa
andl
pushw
mov
sti
fs
sbb
outsb
jns
test
or
adc
arpl
jecxz
stos
test
popl
mov
cltd
imul
mov
ret
cltd
mov
xchg
and
call
and
negl
je
jp
cmp
push
sub
inc
pop
cmp
test
js
mov
mov
cld
insb
mov
mov
out
shlw
inc
mov
xor
test
nop
jns
loopne
cmp
repnz
or
adc
fs
insl
lds
loopne
shlb
testb
rcpps
or
xchg
mov
cli
fwait
dec
pop
jno
es
dec
sahf
mov
cmp
push
cmp
xor
clc
and
xchg
fisttpl
xor
pop
clc
dec
and
sub
pop
sub
icebp
arpl
shlb
enter
fisttps
popf
pop
lea
mov
mov
xor
notl
mov
and
dec
dec
push
push
and
sub
xor
imul
data16
cwtl
outsl
cmpsl
cmp
adc
iret
test
or
inc
insb
in
stos
iret
adc
loop
and
lahf
es
jmp
data16
sti
lods
xor
out
lock
cmp
es
cwtl
cld
imul
mov
jecxz
es
pop
and
cwtl
iret
mov
stos
mov
mov
jmp
scas
aaa
or
xchg
inc
sbb
ficompl
mov
add
dec
jae
adc
leave
fcomps
mov
stos
div
decb
adc
xchg
xor
jmp
mov
imul
cmp
bound
rcll
or
add
or
and
push
xchg
mov
pop
out
adc
cld
in
aam
les
ficoms
xor
mov
test
mov
push
and
gs
sub
scas
pusha
iret
outsl
rcrb
dec
loop,pn
cld
push
test
or
out
sbb
rcll
outsb
lods
in
aad
mov
add
adc
adc
daa
enter
ret
push
inc
repnz
mov
lcall
imul
mov
mov
out
xor
or
or
das
cli
cs
mov
lcall
cmp
dec
enter
cmpsb
loope
sbb
xor
pcmpeqd
ds
sub
cmc
inc
insb
xor
lods
cltd
jge
dec
lret
xor
push
adc
addr16
adc
pop
scas
dec
adc
outsl
adc
jo
test
lock
dec
xchg
pop
bound
push
jo
push
sub
das
rcrl
sbb
into
enter
push
mov
les
mov
sub
in
or
je
sbb
outsl
sbb
fwait
mov
fadd
sbbb
movzwl
je
xchg
mov
jl
cmp
dec
addr16
es
lea
inc
mov
and
daa
sub
movsb
repz
lret
rcpps
pop
out
jo
mull
lret
adc
xchg
and
ja
mov
bound
outsl
xor
pushf
dec
xor
idivl
or
nop
es
pop
add
mov
add
icebp
push
in
hlt
das
iret
leave
pop
mov
jmp
dec
xchg
push
pop
jmp
adc
sbb
fwait
aas
test
std
push
jp
hlt
adc
adc
push
hlt
xlat
jmp
shll
mov
inc
out
mov
out
add
cs
or
jg
mov
incb
cmpsl
gs
mov
xchg
jno
outsl
jmp
mov
lea
sahf
ja
arpl
loop
daa
ret
cmp
aam
pop
pop
xchg
rorb
jle
push
xchg
mov
pusha
iret
sub
mov
inc
imul
lds
pop
enter
fbld
lea
and
pop
push
mov
xlat
push
dec
cmc
or
mov
cmp
mov
sbb
sti
inc
repnz
mov
pop
and
jecxz
add
push
cld
xor
xor
notb
insl
int3
mov
mov
cld
out
push
shlb
inc
in
fbstp
cmp
sub
adc
negl
pop
xchg
lods
ljmp
jno
loop
jg
es
push
pop
or
inc
xchg
outsb
cmp
inc
sub
cmpsb
mov
stos
inc
sub
push
or
repnz
outsl
xor
sbb
dec
fcompl
rcrl
int
stc
lahf
imul
mov
lret
mov
bound
xchg
inc
test
mov
sub
pop
repz
loope
cs
imul
mov
cmp
leave
sbb
xchg
mov
leave
mov
push
xchg
xor
pop
push
fisttpll
pusha
test
sub
out
mov
adc
je
out
and
sub
xchg
xchg
sbb
pop
xchg
adc
bound
and
jecxz
inc
shlb
out
or
rcrl
cmp
arpl
stos
mov
fisubl
cmp
push
test
jo
add
sbb
push
push
dec
pop
gs
or
jbe
dec
inc
cmp
mov
jb
adc
inc
rol
popf
jo
sub
jns
aas
lret
adc
jmp
lahf
mov
pop
or
jl
push
shl
fcomi
js
sbb
add
fstpl
sub
iret
dec
les
loop
add
add
mov
adc
pop
mov
lahf
inc
imul
popa
mov
cmc
ljmp
inc
fistpl
jecxz
mov
aas
aas
mov
sarl
mov
stos
xorb
xor
sti
add
jg
push
inc
xchg
push
or
inc
fmuls
into
inc
ja
insl
xchg
imul
repnz
into
movb
add
addb
insb
pop
or
sbb
jo
xchg
push
dec
inc
std
ljmp
inc
pop
ds
sbb
aaa
insl
data16
push
mov
hlt
aas
jmp
dec
out
mov
in
jno
pusha
gs
mov
and
add
daa
inc
mov
mov
in
inc
jb
pusha
stc
or
imul
movsl
sbb
lds
xchg
sahf
std
xor
fwait
mov
inc
shrb
fwait
xorl
or
stc
inc
mov
ljmp
divps
cwtl
push
xor
rcll
adc
push
mov
addl
xchg
ljmp
dec
aam
roll
cmp
cmpsb
or
loop
inc
mov
test
cld
and
dec
in
hlt
sti
dec
divl
mov
test
sub
shll
movsl
jle
jbe
sub
xchg
xchg
add
xor
fbstp
mov
jnp
xor
loopne
outsb
push
xor
inc
and
ficomps
push
add
sahf
daa
bound
outsl
test
xor
sub
mov
adcb
insl
push
cmp
xchg
dec
lret
adcb
xor
sahf
sub
push
jp
and
pop
loopne
lret
call
pop
addb
inc
mov
pop
adc
mov
scas
pop
cmp
aaa
xchg
movsl
mov
imul
sub
xchg
shll
pop
imul
fld
dec
loopne
stos
jmp
and
popl
out
adc
rcl
bound
iret
clc
cmpsl
js
and
add
dec
imul
scas
sub
jge
jo
ja
lods
add
and
ss
sub
cmp
pop
sub
cmp
repz
adc
and
pop
xchg
sahf
out
mov
test
cmp
jg
mov
sub
mov
fldenv
add
adc
sbb
pop
pop
out
fwait
bound
lock
bound
test
ja
incl
lods
and
and
inc
jne
sahf
mov
loop
adc
fimull
xchg
sub
cmpsb
in
imul
std
in
popf
imul
jecxz
mov
repz
ret
lods
mov
mov
pop
rcrl
xor
xchg
testb
xlat
inc
mov
push
mov
mov
mov
and
sbb
sbb
or
mov
mov
or
mov
xor
push
mov
sbb
cmp
mov
sbb
jae
sub
ja
mov
jmp
repnz
lret
jo
sbb
out
in
mov
out
testl
xor
mov
push
in
shrl
ret
imul
add
pop
mov
subl
idivl
push
sub
cmp
ljmp
cmp
mov
jne
iret
cld
fiadds
clc
jmp
pop
mov
shll
andl
ljmp
dec
out
or
fidivs
sub
incl
lret
xor
jo
push
iret
out
rcll
pop
lds
dec
bound
xchg
push
rclb
jmp
in
inc
fsubr
fadds
ret
push
or
outsl
int
jno
incl
push
and
in
adc
gs
sbb
int
sbb
insl
add
cwtl
inc
push
mov
sti
les
add
jg
adc
lds
cmp
in
insl
in
mull
ret
inc
fwait
pop
xor
mov
push
sbbb
in
loope
outsl
shrb
pop
sahf
jmp
in
f2xm1
fnstenv
xchg
cmpsb
es
in
mov
add
imul
mov
imul
scas
lock
push
xor
cmp
mov
mov
xchg
sub
sbb
dec
sub
movsb
dec
push
adc
insb
mov
xor
sub
push
lret
xor
jno
dec
popa
inc
arpl
stos
in
inc
inc
mov
pop
and
mov
data16
sbb
jae
shrb
aam
sub
inc
lret
add
movsl
orb
fsubrl
mov
mov
or
xchg
sti
cltd
icebp
stos
xchg
mov
sti
ss
mov
xchg
mov
or
aaa
mov
pushf
jnp
leave
adc
lods
xchg
mov
mov
lahf
pop
jno
sbb
and
pushf
rol
mov
popa
adc
lods
fsubs
xchg
or
add
mov
jl
jmp
add
sub
xchg
mov
out
fldenv
shlb
jae
mov
sbbb
cmp
cltd
fwait
push
add
iret
push
cli
mov
cmp
ljmp
lret
add
fldl
and
pop
add
lea
outsb
push
or
repnz
cwtl
sbb
rclb
mov
in
pop
pop
jmp
lret
sar
outsl
imul
stos
push
jg
jecxz
xchg
jns
jns
sub
leave
iret
inc
mov
mov
ds
cmp
inc
and
aad
stc
mov
and
out
clc
push
mov
push
sub
dec
xchg
lods
jl
enter
pop
mov
mov
and
push
sti
push
pop
or
sub
lcall
jo
mov
cwtl
aam
pop
lods
or
pushf
loopne
dec
push
adc
ja
ror
xchg
out
in
lret
fildl
cmp
pop
add
inc
push
data16
push
inc
movsl
mov
dec
mov
inc
cmp
dec
mov
mov
sbb
and
dec
gs
fbld
jns
pop
jl
daa
enter
insl
in
popf
out
xchg
cmpsb
sbb
shll
jecxz
out
loop
and
mov
pushf
sbb
xchg
lret
loope
iret
and
jl
inc
loopne
leave
bnd
or
std
or
and
out
sub
sub
test
add
outsl
or
pop
mov
fwait
xlat
mov
cmpsl
enter
in
push
or
xor
jmp
stos
lret
les
enter
ds
ret
mov
mov
mov
rorl
inc
stos
mov
lea
and
jmp
shlb
mov
pop
xlat
fidivrs
mov
pop
ja
push
xor
push
push
dec
push
jne
sbb
cmp
into
insl
add
xchg
xchg
fisttpl
cmp
imul
jge
add
subb
xchg
xchg
movsb
jb
pushf
ret
cmp
and
insb
mov
pop
int3
in
iret
pop
jmp
ja
in
jle
xor
dec
pop
push
jnp
mov
mov
xor
dec
popf
aam
hlt
fistps
dec
pop
ljmp
sub
fwait
or
std
loopne
adc
gs
ret
aad
sbb
or
mov
repz
fmull
rsqrtps
push
hlt
jb
jo
inc
push
push
sti
add
jl
lds
sub
bswap
mov
hlt
inc
orb
aad
push
adc
adc
or
bound
cmp
lods
sbb
es
pop
ss
pop
cmpsl
xlat
adc
jb
test
mov
or
jp
mov
mov
pop
dec
fisttpl
jecxz
ss
mov
insl
push
jmp
jno
push
sbb
lret
mov
sbb
adcl
dec
push
mov
imul
hlt
icebp
movl
lret
dec
gs
mov
test
lret
shrb
lret
scas
add
rol
mov
push
subb
dec
mov
jle
loope
pop
mov
in
push
test
movl
inc
popa
xchg
icebp
cmp
inc
push
add
outsb
adc
jmp
cwtl
testb
mov
pop
into
loop
fnsave
dec
xchg
lea
mov
or
sub
jb
inc
ret
cmp
fmull
stos
lods
pop
mov
xchg
adc
out
dec
mov
stos
sub
nop
xchg
inc
call
adc
jae
or
xchg
iret
sti
lods
imul
sbb
es
jb
pop
mov
clc
cmc
mov
repnz
mov
aaa
pop
sbb
and
jmp
movsl
jne
call
bound
cmovl
repz
sub
and
mov
mov
cmc
xor
mov
mov
xor
in
xchg
push
mov
xchg
icebp
das
push
xchg
lea
dec
mov
cld
cmp
mov
daa
and
loopne
adcb
data16
data16
adcb
push
pop
std
adc
push
xchg
xor
push
in
mov
testb
mov
and
ret
das
loopne
ds
sub
mov
fwait
sbb
inc
cli
xor
hlt
inc
mov
inc
jne
or
mov
scas
inc
je
ds
lret
movsb
xchg
pop
les
mov
and
leave
test
jns
xchg
xchg
mov
pop
cmp
cmp
mov
ds
nop
fsubrs
or
and
cmp
popf
dec
mov
clc
pop
fistpl
add
je
popf
cmc
xor
loop
sbb
and
popf
mov
cmp
cmp
inc
out
push
pushf
inc
lret
pop
neg
lds
bound
enter
cmp
out
ficoms
lcall
imul
cli
out
dec
mov
fadds
pop
mov
cmp
cmp
inc
rcll
out
popa
xchg
ret
lock
cwtl
push
dec
lds
outsb
push
xorb
cmp
insb
inc
sub
or
fcmovnb
add
cmp
fwait
aas
jg
and
push
jnp
xlat
mov
and
out
inc
repz
lea
int3
sub
jge
arpl
mov
xor
push
inc
shrl
sub
xor
repz
mov
pop
xorl
sbb
in
add
rorb
loopne
mov
imul
xchg
mov
ret
mov
pop
cwtl
and
scas
stos
xchg
ret
cmpsb
xchg
xor
imul
loopne
out
add
pop
sbbb
stos
rcl
popa
clc
and
sub
or
test
cmp
mov
popa
xor
das
dec
aas
sti
decl
sbb
and
cmc
lods
and
out
loope
outsb
dec
ljmp
sahf
jl
dec
xor
or
das
jcxz
div
mov
sahf
aas
fs
pop
dec
jmp
mov
sub
cmp
mov
sbb
jp
insb
add
cmp
dec
add
jge
call
repnz
xor
xchg
pushf
sbb
ja
int3
mov
aam
pop
fildll
imull
mov
lods
mov
addr16
jns
fisubrs
push
popa
in
inc
cmpsl
pop
cmp
fucom
xor
jbe
inc
mov
adc
cmp
sbb
sbbl
sbb
addr16
insb
es
inc
xor
daa
or
xor
pop
cmp
add
push
xor
or
outsl
lret
ja
aam
xchg
mov
mov
jbe
lods
enter
stc
pop
mov
clc
lahf
jg
xchg
fistps
bnd
les
dec
sub
mov
mov
or
jge
and
jns
out
inc
add
cmpsb
xor
addr16
ret
xchg
hlt
pop
lahf
lods
dec
jnp
aas
sub
fbld
jge
leave
arpl
add
sti
xchg
test
nop
xchg
pop
sub
sbb
pop
outsl
xor
lcall
jmp
mov
addr16
jb
push
outsl
jle
or
cltd
insl
and
outsb
mov
addr16
pop
aas
stc
cli
data16
rorb
mov
push
and
jne
aaa
cmp
jmp
popa
mov
adc
push
jg
aas
dec
adc
push
loop
mov
cmp
adc
inc
cwtl
leave
into
sub
pmaxsw
out
mov
jae
xchg
xchg
lahf
cld
add
jnp
jecxz
mov
push
push
aaa
pop
pop
cmc
fwait
test
pushf
enter
or
mov
pop
test
mov
popf
xor
gs
les
xorb
ds
inc
jmp
add
repz
pop
adc
adc
xchg
sbb
xchg
mulb
jmp
pop
fisubrs
shrl
bound
stc
call
aaa
pop
shl
and
pop
mov
pop
cmp
gs
loop
and
inc
jecxz
pop
push
adc
mov
cmpsb
aaa
inc
ss
sti
cmp
imul
pop
cmp
adc
push
fcmovne
cltd
fmull
sbb
movsb
imul
mov
andb
push
add
pushf
lahf
arpl
andb
out
cmp
push
dec
or
or
and
rorl
or
and
cmp
xor
repnz
xchg
fiaddl
scas
adc
xor
and
add
mov
xchg
aas
dec
mulb
sbb
sub
adc
out
dec
insb
loopne
movsl
inc
data16
insb
dec
insb
and
scas
adc
ljmp
in
add
dec
sub
cmp
shlb
in
xor
cs
mov
inc
ds
inc
dec
sub
sbb
push
loop,pn
leave
xchg
repz
movsl
int3
out
cmpsl
push
fnstsw
xlat
mov
imul
add
jno
aam
cmp
mov
jge
aas
xlat
out
mov
dec
outsb
sub
js
ficompl
push
jge
xor
sub
xor
aam
sub
mov
ret
ret
insl
xchg
addr16
rclb
mov
fwait
mov
gs
push
hlt
add
ficomps
loope
pop
or
lcall
scas
mov
mov
add
outsl
pop
add
les
xchg
dec
sbb
pop
lods
movsb
or
dec
pop
cmp
stos
push
popf
movnti
out
aad
mov
ss
test
in
insb
pop
adc
xor
jg
es
outsl
xchg
sbb
xchg
mov
xchg
push
xor
add
xchg
in
clc
loop
cmp
fists
xchg
push
xorl
stos
add
mov
jg
adc
stc
test
inc
dec
cmpsl
adc
std
push
jmp
lret
testb
aas
push
mov
aaa
lods
cmpsb
adc
mov
pushf
pop
mov
lret
lcall
xchg
pop
ja
jle
jbe
sbb
scas
cmpb
fld
mov
mov
cmp
shlb
lock
out
lods
add
lods
cltd
push
sti
fistl
mov
jecxz
xor
out
inc
mov
cmc
ror
mov
or
aas
cmp
adcb
lock
mov
imul
testb
sub
dec
insb
adc
lret
sarb
xchg
xor
mov
and
mov
mov
sub
andl
jne
adc
sti
out
sub
arpl
movsb
dec
cmpb
fwait
js
and
in
out
nop
fisttpl
jbe
bnd
gs
mov
xlat
dec
pop
push
push
aad
jge
dec
push
es
cmpsb
cmc
sbb
inc
jg
jmp
popa
xchg
cmpsb
push
imul
aad
out
int
mov
adc
in
xor
popf
inc
xchg
xor
ja
inc
ret
sbb
subb
push
loop
orl
jnp
or
ds
sbb
cmp
rorb
lahf
mov
fwait
sbb
sbb
push
cmp
add
lcall
or
mov
hlt
mov
xchg
fistl
pop
in
cs
ret
mov
add
loopne
push
mov
es
lds
dec
ss
jle
test
xor
and
stos
adc
dec
inc
repz
test
les
imul
enter
pop
jmp
mov
cld
mov
movsl
rcll
scas
inc
arpl
data16
aad
add
inc
addl
mov
cld
pop
mov
mov
adc
pop
popa
rcr
loope
mov
out
xlat
sbb
sub
insl
popa
inc
ret
cmc
js
or
mov
mov
cmp
sahf
pusha
adc
nop
inc
fstpt
jbe
in
mov
adc
xchg
and
mov
std
fwait
rorb
ret
xor
int3
jns
testb
loope
xor
adc
in
pop
addr16
fdivs
pusha
sahf
repnz
fwait
mov
sub
iret
xlat
pop
or
sub
cld
popf
lock
add
fstl
clc
pop
push
fucom
push
movl
jb
pushf
cmpsb
imul
mov
jo
push
sarb
inc
stos
and
nop
arpl
sbb
sbb
rorl
hlt
je
or
out
mov
insb
mov
sahf
mov
shl
sahf
notb
jns
push
cmp
cmp
jbe
shrl
inc
popa
std
sahf
fucom
mov
dec
test
cmpsl
call
pop
cltd
fimull
add
adc
xor
cmp
xchg
mov
cmp
mov
or
fs
sub
insl
dec
cmc
sbb
shrb
ret
push
stos
subl
mov
jo
xchg
aam
mov
aas
or
imul
jae
add
jae
cs
and
lock
jbe
mov
cwtl
adc
loopne
xor
ds
in
bswap
out
xchg
adc
cmpsb
loop
sbb
scas
insl
fs
or
or
popa
jge
repnz
frstor
andl
jb
cli
mov
les
jg
sbb
pop
jle
push
mov
hlt
hlt
aam
jnp
add
adc
test
pop
mov
inc
jle
sbb
or
and
adc
shlb
loope
xchg
pop
movsl
jg
bnd
loop
test
inc
mov
imul
sub
sti
dec
xchg
mov
lret
insb
aam
fwait
ja
adc
mov
pop
inc
inc
xor
cltd
xor
je
pop
pop
adc
shll
pop
push
pop
enter
loope
push
mov
aam
enter
sub
dec
arpl
mov
xlat
iret
mov
cmp
pop
ljmp
out
xor
xor
adc
loope
shll
xchg
enterw
jns
movsl
mov
mov
test
gs
mov
jmp
pop
shr
cmc
jmp
aam
mov
mov
xor
test
mov
outsb
inc
aas
cmp
lods
out
sbb
aaa
ljmp
inc
jbe
jp
aas
ret
inc
loopne
push
out
add
adc
ret
and
cli
jb
jmp
jl
out
and
in
push
aam
and
sub
faddp
mov
xlat
test
xchg
lcall
dec
cld
lock
stos
add
cmp
lods
scas
aad
stos
loopne
mov
pop
loope
jno
adc
xor
imul
fs
pop
call
pusha
and
pop
cmp
les
cmovg
dec
push
inc
xchg
cmpsb
pop
pusha
xchg
xorl
sbb
push
mov
loope
int
push
xor
out
fwait
xor
xor
inc
loop
pusha
sub
mov
lock
adc
in
out
xchg
mov
fcoml
nop
pop
fwait
dec
andl
or
addr16
sbb
xchg
mov
mov
adc
xor
cmp
int3
outsb
sub
ljmp
inc
ss
loop
xlat
mov
aas
mov
insb
pusha
jne
stc
and
mov
out
lcall
cmpsb
dec
test
inc
out
adc
pop
dec
pushf
xlat
inc
popa
nop
sub
and
or
sbb
and
or
mov
pop
pop
mov
mov
aas
pusha
add
jbe
cwtl
sbb
push
lret
or
inc
dec
jbe
daa
cmpsl
sub
cmp
idivb
inc
out
ljmp
sahf
mov
out
fcomip
push
push
cmp
xchg
sub
shll
push
push
clc
mov
fiaddl
xchg
outsl
mov
or
cld
sub
roll
aam
jl
push
inc
add
pop
add
fisubrl
fidivs
xchg
sbb
xor
jnp
out
in
mov
das
mov
mov
adc
subl
loopne
jecxz
or
cmp
sub
pop
mov
dec
xchg
subb
xchg
adc
pop
hlt
push
stos
loope
mov
mov
pop
jno
cmp
imul
iret
pop
push
inc
rorb
push
test
mov
loop
jno
cwtl
sbb
icebp
mov
shlb
inc
inc
mov
movsl
aad
mov
out
adc
or
xchg
jge
mov
lods
adc
cmp
rolb
repz
xchg
xchg
sti
adc
add
cmp
mov
retw
cltd
cli
add
cmpsb
jp
mov
cmpsb
cmp
sub
rcll
pop
adc
stos
sub
fistl
enter
jecxz
test
xor
divb
lods
imul
mov
jle
inc
jle
loope
rorb
mov
mov
cmpsl
insb
decl
jo
push
mov
repnz
iret
loopne
push
mov
cli
jmp
mov
imul
cli
icebp
rol
ret
fcomps
pushf
or
add
mov
rcrb
xchg
in
xor
inc
daa
jmp
dec
fnstcw
mov
addr16
mov
out
dec
addr16
mov
sbb
and
in
adcb
into
dec
rorl
rcrb
sbb
push
jnp
xor
in
push
xchg
and
pop
fs
in
pop
push
pop
mov
and
loope
cmpsl
scas
or
shll
xor
rcll
xchg
push
testl
push
popa
sbb
jne
and
cmpsb
push
outsb
add
popf
mov
inc
hlt
adc
mov
push
mov
fs
push
arpl
sbbl
adc
xchg
push
pop
sub
lds
cli
push
jp
push
pushl
xor
fdivs
enter
out
mov
cmpsb
xor
push
dec
call
mov
jecxz
movl
push
test
xchg
inc
sub
cmp
adc
stc
add
ficompl
pop
cmpsb
jb
out
movsb
jno
sbb
std
adc
xchg
andl
test
xchg
pop
and
clc
jg
cmp
cmpsl
push
and
insl
jecxz
xchg
xchg
add
add
push
add
inc
lret
and
xlat
inc
mov
cmpsb
pop
adc
mov
adc
sub
ljmp
cmpl
aas
fisubs
inc
mov
test
les
fwait
enter
cmp
jg
push
stc
pop
xchg
into
cmpsl
or
out
cltd
inc
cmc
adc
xchg
in
inc
dec
mov
bound
insl
gs
sub
stc
sbbl
mov
jp
push
pop
cmp
mov
shrb
or
pop
mov
xor
push
mov
or
cwtl
mov
mov
xor
cmpsl
out
in
in
cmpsb
cmp
jo
hlt
sub
test
in
mov
nop
int3
sbb
inc
movsb
in
daa
mov
push
scas
cltd
in
inc
fs
mov
cwtl
pop
xor
jb
popf
addl
sub
imul
push
les
add
inc
mov
leave
xor
bound
mov
sbb
sub
push
popl
add
mov
std
insl
add
mov
and
outsb
xchg
into
push
jo
xchg
pusha
dec
ret
enter
into
cmc
mov
addr16
jb
repnz
pop
lcall
pop
or
dec
xlat
jg
out
cltd
iret
imul
cld
inc
cli
lock
dec
pop
inc
xchg
addr16
repnz
adcb
or
outsb
mov
sub
mov
sub
mov
mov
and
icebp
jecxz
in
mov
cmp
sub
test
sbb
mov
loope
xor
sti
and
add
add
xorb
outsb
addb
leave
and
xchg
je
scas
jmp
fdivl
mov
bnd
inc
sub
sbb
es
ficomps
mov
adc
shlb
in
xchg
pop
imul
scas
adc
icebp
imul
sti
and
arpl
ja
stc
cmpl
jae
cmp
jne
xchg
bound
lds
enter
movsb
cwtl
imul
jp
cltd
adc
nop
mov
ds
pusha
aad
addr16
sarl
add
in
push
mov
add
fisubs
fs
and
push
jnp
sub
sti
adc
cmp
sub
jp
pushl
pushf
cmpsb
int
jb
shrl
loope
dec
mov
cmp
mov
loop
addl
mov
mov
dec
or
mov
popa
lahf
mov
xor
leave
cmp
sbb
or
or
inc
clc
cmp
xchg
fstpt
fidivrs
or
add
mov
scas
aaa
call
mov
test
xchg
mov
ret
dec
popa
cmp
or
jb
in
sub
add
xchg
popa
repz
jno
inc
jge
arpl
test
stos
fwait
cmp
inc
lcall
add
or
popa
mov
in
icebp
std
jbe
cltd
in
adc
jp
pop
leave
gs
in
aam
ret
pusha
xor
sub
leave
imul
sub
out
cmp
fisubs
xor
lods
jnp
inc
mov
lcall
push
jp
dec
push
inc
sub
add
jb
xchg
dec
rcll
cmpsl
xor
inc
push
enter
jl
dec
cmc
int
or
lods
pop
out
sub
fwait
adc
jae
sbbl
inc
sub
pop
fisubl
icebp
push
mov
xacquire
xor
add
sub
out
jns
jbe
and
aas
sbb
mov
mov
push
xchg
mov
jo
ljmp
inc
adc
jle,pt
out
arpl
jo
xchg
adc
sub
and
pop
cmp
xlat
enter
imul
testl
xchg
add
fldenv
push
mov
mov
adcb
mov
sub
notl
imul
mov
subb
sub
roll
andb
jl
out
dec
dec
xor
subb
std
sahf
pop
ds
cmpsb
add
mov
xchg
sti
in
sub
push
jl
sbb
das
mov
xchg
mov
sub
or
js
inc
ljmp
test
imul
sahf
mov
push
int
xchg
xorl
xchg
inc
xor
in
lret
cmpsl
test
ja
xchg
sti
dec
cli
ljmp
push
pop
jl
sbb
cli
ljmp
test
mov
push
stos
xchg
adc
sbb
lret
xchg
lods
pop
dec
dec
pop
cmc
in
sbb
xlat
and
dec
in
lret
xchg
sbb
imul
out
cmpsl
insb
mov
fstpt
jmp
sub
fdivl
ficompl
mov
pop
movsb
lds
ljmp
and
mov
dec
push
mov
test
test
clc
lods
je
sub
add
pop
mov
lock
lret
testb
xchg
pop
or
sti
mov
in
pop
add
outsl
jp
fisttpl
rcrl
xchg
jp
inc
aam
pop
pop
popa
sbb
and
test
jl
decl
outsl
adc
je
in
sbb
mov
add
adc
fadds
xlat
adc
iret
fstps
rcrl
sbb
popf
push
push
bts
outsl
dec
xchg
dec
mov
xchg
cs
inc
dec
nop
rclb
xorb
into
lds
imul
inc
mov
push
sub
add
add
stos
pop
mov
enter
mov
mov
roll
sub
and
out
call
out
int3
outsl
or
xchg
or
sub
push
jmp
fisubrs
inc
dec
shl
xchg
fidivs
dec
adc
sti
adc
stos
ljmp
out
mov
pop
mov
sub
mov
mov
sarl
sub
call
adc
aas
cltd
mov
xor
pop
lock
mov
rolb
clc
lods
sbb
js
jo
ja
jmp
mov
iret
std
mov
sbb
into
mov
lock
aaa
cmpsb
cltd
aam
int3
stos
pop
push
jnp
fnstsw
and
jae
fdivr
xor
cmp
hlt
push
mov
test
cmpl
xor
into
dec
jl
mov
push
cli
loope
or
inc
leave
and
sti
sub
xchg
and
mov
std
mov
adc
test
in
push
and
sarl
rcl
jne
jp
xlat
sbb
adc
fdivl
jl
out
jb
notl
pop
in
xlat
adc
adc
and
in
arpl
in
insb
mov
xor
cmp
xchg
sbb
and
push
out
dec
fwait
adc
sbb
mov
pop
je
add
mov
daa
or
push
jge
mov
shrl
in
and
in
xlat
call
push
sbb
mov
pop
das
fisttpl
mov
xchg
dec
dec
or
xchg
out
mov
sub
pop
shr
mov
and
loope
pop
daa
ss
mov
aas
testl
in
dec
sub
sti
mov
push
mov
cmp
out
inc
sahf
jecxz
push
adc
inc
push
fwait
popf
push
add
into
lock
aad
pop
lods
push
out
popf
or
mov
mov
mov
xor
mov
scas
shlb
sub
xlat
pop
fwait
loop
mov
mov
dec
xchg
xchg
mov
cwtl
inc
lds
lea
xchg
pushf
sbb
sbb
ljmp
mov
gs
clc
push
std
push
lods
in
xchg
ja
lea
dec
add
iret
aad
push
pop
sbb
dec
insl
mov
test
sbb
push
enter
scas
add
xchg
cmpsl
out
out
jae
xor
rolb
test
popa
lret
push
adc
aaa
shld
nop
sub
jg
test
jnp
jbe
and
add
or
outsb
sbbl
dec
jno
lahf
jae
mov
push
cltd
adcb
addr16
aas
fldt
cli
lods
divl
push
repz
push
lret
movsl
mov
mov
movsb
mov
fisubs
rcrb
xor
add
jae
retw
add
imul
jb
jae
stc
adc
cmp
fcoml
jge
sbb
repnz
cli
repz
cmpps
push
sahf
mov
out
and
shlb
outsb
sbb
inc
push
xchg
mov
dec
mov
cmpsl
adc
jmp
mov
lret
sbb
stos
in
jnp
cmp
and
lea
fstps
dec
push
adc
int3
aas
addr16
stc
in
popf
adc
inc
hlt
inc
div
mov
out
lds
inc
jbe
and
mov
mov
dec
popa
imul
mov
cmpl
sbb
aas
or
scas
inc
into
push
mov
and
push
mov
hlt
in
int3
sub
xchg
test
inc
in
scas
push
test
dec
insb
aam
fnsave
mov
mov
adc
push
icebp
lods
inc
les
push
daa
pop
inc
icebp
inc
jb
sbb
push
cmp
push
movsl
sti
les
iret
shll
js
xor
cmp
movsb
and
es
jg
roll
stc
mov
push
scas
cmc
cmpsb
cmpsb
or
xchg
dec
into
imul
mov
xchg
and
rcrl
lcall
es
fsts
mov
movsb
push
or
les
sbbl
int
cwtl
cmc
mov
repz
dec
mov
push
or
dec
mov
mov
xchg
icebp
jmp
push
sub
int
and
repnz
mov
addl
and
and
iret
dec
mov
xor
sub
xor
mov
pop
push
inc
lods
push
dec
int3
cmp
loopne
jl
sbbl
lods
sub
adc
mov
data16
loopne
lcall
mov
dec
mov
not
fidivs
jae
sti
jl
jne
push
mov
mov
movsb
or
shll
pop
jns
gs
inc
pop
ret
cmp
insl
mov
xchg
mov
sti
cmp
jmp
lcall
les
or
xor
sub
xor
inc
lahf
or
ret
cli
imul
sub
aam
and
mov
sbb
lea
cltd
cltd
jmp
sbb
bound
aam
sti
pop
in
lea
xchg
push
add
push
repnz
mov
mov
sarb
mov
cltd
push
cmp
fldl
shll
cmp
aam
jecxz
push
out
movsb
mov
loop
xor
xor
lea
push
imul
dec
shlb
push
sti
add
inc
cwtl
sbb
jo
jbe
leave
add
cmp
or
pop
sub
scas
sub
rcrl
cmc
in
js
decl
imul
cmp
gs
mov
test
or
stos
or
mov
inc
sti
and
push
and
sti
cmpsb
mov
inc
jo
pop
pop
movsl
sti
dec
fsts
push
mulb
subb
lret
fistpl
pop
ds
and
inc
ss
jp
pop
repnz
sbbb
repz
mov
lret
stc
test
enter
shl
jecxz
sahf
cltd
scas
pop
js
test
inc
pop
sbb
mov
xchg
cmp
jbe
mov
jecxz
jbe
movsb
loop
xor
mov
cmp
xchg
sti
stc
sub
push
add
enter
push
or
bound
insl
mov
pop
cmpsl
adc
pop
and
and
mov
fld
je
cltd
push
mov
cmp
in
notl
pop
and
xchg
fistl
ja
sub
pushf
test
and
sub
jae
xorb
push
stc
jo
inc
adc
sub
lds
adc
fists
cmc
mov
loope
iret
cld
mov
sti
inc
sub
lods
rorb
sub
pop
bswap
xchg
cmpsl
xchg
repz
notb
sub
arpl
push
lret
orb
mov
lods
fcomps
jecxz
in
or
cmp
mov
dec
cltd
or
or
push
mov
lods
cmp
dec
mov
and
pop
cmp
lock
xchg
cmpsl
mov
test
in
movsl
dec
xor
and
jae
and
lock
adc
xor
pop
push
and
cmp
out
mov
xchg
imul
or
xchg
and
pop
mov
jo
movsb
scas
xor
xchg
adc
imul
lret
pop
cmp
mov
push
mov
mov
mulb
shll
inc
scas
test
dec
fidivrl
adc
jl
cmp
in
lods
jge
jmp
movsb
movsl
pop
mov
addr16
lock
aam
lock
jge
sub
inc
jmp
pop
aaa
mov
js
lock
loope
ret
mov
dec
push
jae
ret
adcb
sti
cltd
jno
push
out
sarb
xor
iret
mov
cmp
adc
cwtl
push
fldt
loope
pop
aam
fidivl
pop
push
addr16
push
sub
xor
out
out
mov
cmp
rorb
xor
inc
dec
sti
cmp
sub
imul
std
pop
and
inc
jno
push
shlb
ja
aas
popf
das
daa
lds
jae
inc
adc
repnz
cltd
fstps
cltd
sub
sbb
mov
sbb
adc
inc
in
clc
jo
mov
arpl
pop
std
jecxz
mov
rcll
sbb
push
dec
out
jns
enter
mov
scas
mov
xor
pop
push
or
divb
and
adc
enter
cltd
mov
js
push
jge
dec
or
outsb
push
mov
leave
mov
lahf
outsl
pop
add
daa
aam
in
ror
int
fcomip
xor
into
jb
dec
out
mov
cli
push
push
aaa
ss
in
lret
notl
jb
adc
mov
adc
into
mov
jl
pop
dec
rolb
rcrl
sti
adc
int
jmp
inc
jnp
sbb
loop
pop
sarl
cmp
cltd
xchg
adc
adc
xchg
and
mov
and
int3
push
mulb
scas
imul
int3
sahf
not
add
and
mov
cmp
or
popf
xor
xchg
ds
in
popf
mov
testl
aas
xor
dec
xchg
sahf
jns
sub
je
add
subb
pop
fmul
xor
cmc
jne
stos
cmp
outsb
pushf
inc
inc
inc
lods
push
rep
push
imul
jno
mov
pop
mov
xorb
sub
jle
push
push
jge
mov
dec
xor
adc
mov
mov
popf
sub
in
fcomps
cwtl
inc
addr16
out
int3
addl
xorb
jl
jno
mov
and
lret
js
ja
test
add
push
inc
adc
push
xchg
loopne
in
xor
clc
in
ja
jo
ficoms
popf
xchg
push
mov
or
mov
rclb
rcll
filds
int3
mov
mov
cmp
test
adc
dec
repnz
pop
adc
pop
xor
jae
scas
lcall
fwait
sub
inc
nop
jns
jle
getsec
adc
scas
push
mov
addl
cmp
out
dec
mov
movsl
mov
xchg
dec
mov
xor
push
decl
jecxz
imul
push
add
add
movsb
repnz
inc
push
pop
insl
mov
fwait
xor
mov
nop
cmp
ret
dec
popw
mov
lea
pop
cmp
dec
outsl
test
cmpsl
mov
jbe
dec
or
lods
push
clc
push
dec
cs
fnsave
scas
push
fmull
mov
jnp
js
sub
adc
ret
adc
pop
xchg
arpl
ss
mov
cltd
mov
and
movsb
cmp
xchg
push
inc
leave
xchg
xchg
fcomi
les
xchg
sti
loope
jmp
and
or
cmpsl
in
sbb
in
xor
inc
mov
idivb
inc
xor
mov
dec
and
mov
pop
cmp
pop
sub
dec
inc
loope
inc
lret
or
pop
ret
or
xor
lods
call
or
sub
aad
subl
sub
xor
cmpsb
add
mov
scas
adc
mov
cmovs
push
inc
mov
or
cwtl
cs
adc
mov
and
jne
fmul
lods
push
out
jecxz
ja
sbb
out
jecxz
jl
lret
int3
cmp
stos
pop
and
lds
aam
shll
dec
enter
bsr
ljmp
stos
xchg
addr16
fisubrl
jno
cli
daa
fisubrl
pop
xchg
cmp
cld
popa
mov
cmp
test
xor
jg
or
fs
sub
jge
jp
inc
adc
inc
ss
push
mov
pop
xlat
xor
enter
outsl
loopne
fs
push
loope
pop
rcrb
notb
pop
rcrb
les
cmp
out
imul
jecxz
or
push
pop
push
gs
push
jb,pn
add
mov
insl
jmp
or
jecxz
sarb
sub
and
js
or
ja
adc
sahf
pop
fs
test
std
movsb
jmp
fdivl
pop
mov
mov
out
and
pop
je
adc
out
lock
lea
add
jmp
sbb
xchg
leave
xlat
adc
ss
mov
cli
sbb
rclb
mov
pop
stos
movsb
sub
sub
loopne
push
inc
or
outsl
sub
xchg
xlat
mov
fcmovnb
je
out
sbbl
jb
add
sub
push
or
cmp
in
aas
jmp
sbb
cmp
cmp
and
cmpsb
hlt
mov
popa
pop
mov
pop
sbb
push
xor
pusha
popf
sbb
sbb
push
jecxz
pop
inc
push
xor
movsb
and
inc
pop
fcmovnb
jbe
outsb
mov
scas
jo
leave
sbb
xchg
adc
mov
xchg
add
or
dec
or
stos
adc
decb
leave
mov
sub
xchg
je
or
ds
and
lock
jb
test
hlt
dec
inc
lahf
ret
mov
mov
icebp
aam
out
add
push
cld
outsl
popf
push
xchg
sbb
adc
int
jmp
cmpsb
push
leave
jge
movsb
rcrb
sbb
and
movsb
dec
push
xor
je
mov
pop
icebp
jae
out
dec
fidivl
movb
mov
push
push
pop
inc
clc
push
inc
mov
jecxz
in
shr
icebp
or
mov
outsl
mov
add
push
fistl
or
pop
call
lahf
or
popa
dec
mov
pop
inc
mov
and
pop
push
subl
push
xor
in
mov
clc
jo
and
xor
inc
mov
xor
mov
add
int
lret
and
inc
jge
jb
or
aas
cli
jmp
pop
lods
outsb
mov
add
cmp
pop
shlb
scas
aam
push
push
push
dec
mov
adc
jge
xchg
pushf
popf
das
decb
and
es
ja
scas
testl
add
xchg
insl
xlat
sbb
jno,pt
xchg
cmp
aaa
sub
and
ret
dec
jne
push
jo
shl
pop
inc
cmp
cmp
add
into
pop
push
pop
push
xor
orb
pusha
pop
xchg
sbb
pop
inc
mov
ror
mov
add
lahf
ret
xor
push
adc
cwtl
mov
pop
testb
arpl
jbe
and
cld
push
cwtl
imul
stos
sarl
xorb
mov
fildl
push
sbb
inc
and
movsl
mov
inc
and
cmc
rcl
rcr
pop
pushf
xor
jne
jns
inc
cli
xchg
pushf
jnp
cltd
jnp
inc
push
ljmp
adc
mov
push
fmull
dec
subb
push
pop
cwtl
orl
cld
repnz
push
push
xor
fwait
out
repnz
inc
aad
fdivrs
js
test
add
es
add
clc
or
mov
loope
xor
in
dec
adc
fisttpll
sbb
lahf
jl
ret
inc
pop
add
adc
pop
mov
inc
sub
xchg
inc
sub
sub
and
mov
popf
push
test
sub
pop
sti
pause
lock
call
in
cmp
dec
cmp
loop
push
cmc
pop
test
mov
jno
leave
mov
inc
cli
pop
lret
test
loopne
jbe
inc
mov
out
mov
add
and
dec
push
mov
jae
mov
xor
mov
sti
movsb
testl
es
xchg
mov
aaa
mov
fisubrs
add
pop
pusha
xchg
adcl
sub
adc
mov
jne
sub
xchg
test
add
bound
push
scas
into
and
test
adc
sarl
inc
repz
mov
lods
jae
add
popa
xchg
vsubss
mov
das
push
xchg
lods
mov
adc
out
test
movsb
or
cld
and
shl
add
pop
dec
movsb
out
push
adc
dec
cmp
mov
or
arpl
dec
mov
dec
mov
jl
xchg
jp
inc
mov
int3
sub
out
lret
aad
fdivr
or
mov
dec
out
cmp
push
inc
fsubrl
cmp
in
dec
out
imul
mov
mov
sbb
and
xchg
in
lahf
ja
nop
inc
add
xor
pop
cltd
jl
sbb
dec
jo
iret
fisubl
in
push
push
es
inc
sar
dec
xchg
mov
and
or
pop
shlb
pop
das
sub
test
lock
hlt
adc
cmpsb
sub
xor
xchg
adc
repz
loope
jp
xchg
pop
and
sbb
jo
ret
dec
adc
roll
jmp
or
lahf
fnstcw
sbb
lret
add
sbb
jnp
mov
dec
pusha
inc
addb
fstl
mov
xor
dec
and
shll
orb
dec
roll
sti
subl
movsl
sub
mov
jns
into
mov
outsl
movsb
fstpt
cmp
dec
push
imul
stos
dec
lds
stc
mov
pop
subl
pusha
pop
imul
inc
mov
in
dec
xor
cld
mov
fbstp
mov
das
outsl
add
jnp
add
rep
hlt
xchg
cltd
scas
sbb
insl
push
or
scas
jmp
jg
nop
fs
xchg
loope
sub
xor
jle
pop
xchg
in
adc
test
jecxz
add
add
loop
cwtl
and
fdivr
add
mov
mov
lods
ret
or
jb
and
in
fs
test
adc
mov
push
xor
loopne
out
xchg
dec
repnz
xorl
mov
faddl
sbb
repz
iret
popa
adc
mov
and
push
fisubl
fisubl
dec
test
jmp
xor
cmp
daa
xor
scas
lods
fldcw
cmp
sbb
and
mov
sahf
mov
and
fadds
pop
pushf
mov
stos
out
xchg
movsb
scas
dec
mov
xor
ret
shlb
lahf
shll
or
out
xor
test
cli
cmp
sub
ret
jg
inc
out
fildl
test
cs
or
imul
shrb
sub
dec
clc
jg
or
dec
cmpsb
sarl
movsb
cs
test
cmp
lahf
dec
jno
pop
leave
js
pusha
mov
push
out
pop
or
mov
sti
lret
and
cwtl
ss
fsubrl
jg
sub
pushf
shll
mov
mov
pusha
aam
sub
inc
aaa
pop
inc
cwtl
lret
ret
or
popa
ss
adc
scas
sbb
jge
and
lods
inc
cmp
lods
jb
movsl
ret
out
loop
jae
sub
pushf
aaa
pusha
mov
std
addb
outsb
xchg
repnz
lock
mov
xchg
or
es
inc
inc
sub
int
fwait
cmpsl
fildll
ljmp
call
outsb
jae
jbe
jge
aam
cmp
mov
mov
and
xchg
adc
pop
ss
dec
out
test
movsl
les
ds
loopne
icebp
jl
lods
nop
je
out
jnp
lahf
or
aad
ljmp
into
shrl
icebp
fdiv
sahf
cmp
xchg
add
sub
pusha
add
andb
loope
jb
pop
mov
leave
sbb
ja
xchg
mov
inc
bound
add
mov
push
mov
sub
push
mov
loop
dec
out
inc
push
push
dec
sbb
push
lret
frstor
cld
rclb
lahf
movsl
push
push
mov
add
pcmpeqb
and
adc
jo
jp
shrb
sbb
push
dec
rcll
into
sbb
cmpl
mov
inc
gs
in
mov
lds
dec
adc
shll
jbe
mov
jmp
sahf
mov
lds
data16
lods
sub
inc
out
stc
pop
pusha
push
test
lea
ljmp
push
pop
sbb
test
icebp
jno
inc
rcll
jmp
mulps
push
mov
xor
lahf
or
or
lea
pop
mov
ret
adc
icebp
movsb
inc
scas
adc
inc
xchg
or
xchg
dec
jae
aam
dec
inc
push
fidivl
cmpsb
cmpb
std
mov
sub
mov
mov
outsb
ret
push
mov
rcrb
aad
ds
jmp
in
xchg
test
cmpsb
cmc
popf
mov
pop
movsb
in
push
push
adc
lods
rolb
dec
inc
mov
call
push
aam
mov
outsb
xchg
fldl
out
ja
sub
pop
mov
dec
nop
jl
gs
mov
into
fldt
xor
movsl
cltd
xchg
mov
mov
out
test
adcb
add
lea
dec
jp,pt
cld
add
or
jno
inc
xchg
mov
arpl
sbb
jbe
iret
cmp
jecxz
pop
mov
push
movb
fwait
cmp
xchg
ss
loopne
fadds
int3
daa
xchg
out
push
mov
lock
cmc
in
stos
insb
lea
mov
into
ret
aaa
popa
add
addb
pop
aad
iret
inc
adc
aad
ds
stos
mov
pop
je
jns
mov
rorl
icebp
movsl
inc
ja
sbb
xchg
push
fnstenv
lods
orl
roll
mov
pop
sbb
je
call
xchg
jb
sahf
scas
adc
bound
std
bnd
mov
jo
in
insl
dec
out
xorb
cld
and
iret
push
cmpsl
xchg
jo
pop
jg
cmp
adc
inc
push
stos
inc
add
bound
and
pop
dec
cld
or
sbb
cmp
fbld
scas
nop
hlt
cli
lcall
int3
bound
ret
lahf
jne
xchg
int3
add
mov
mov
jbe
push
adc
pushf
xor
nop
lock
sub
fsubl
loope
or
pop
pushf
test
dec
mov
cmpsl
or
cmp
popf
in
inc
inc
sub
dec
int
fimull
test
sbb
lret
or
add
int3
and
cld
enter
and
xor
sbb
loopne
into
xor
or
jle
inc
xor
pop
movsl
xchg
rcll
sub
cmc
jb
mov
cmp
in
or
sub
mov
mov
xchg
bound
jns
dec
xor
jecxz
or
jo
mov
push
add
cmp
jmp
inc
das
test
cld
data16
push
and
aad
outsb
mov
and
test
jns
ret
or
out
cmp
lret
xchg
fbstp
xchg
xchg
cmp
call
stos
or
in
loopne
fists
and
dec
fdivs
xor
imul
es
call
push
scas
or
orl
test
mov
mov
sbb
out
cmp
cmpsl
stos
in
cmp
scas
inc
mov
lret
lcall
push
jne
mov
out
cmc
adc
sub
ljmp
and
jg
fists
lods
push
adc
and
loopne
mov
dec
and
fwait
rorb
test
add
sbb
js
xchg
sub
int3
aam
mov
and
push
inc
test
xchg
pusha
sbb
jbe
and
movsb
jle
repz
shl
fisubrs
out
adc
mov
outsb
mov
and
lods
dec
cmp
sbb
or
test
add
inc
iret
scas
test
scas
xor
jns
jl
cwtl
cmc
sar
ror
mov
leave
incl
loopne
divb
in
jb
movsb
push
xchg
mov
iret
jecxz
mov
inc
or
adc
push
addl
adc
sbb
cmpsl
cmpsl
cmp
sub
mov
inc
push
sub
mov
pop
aaa
and
adc
shr
push
mov
in
and
insl
inc
push
push
stos
imul
js
fst
in
repz
fwait
adcb
data16
in
mov
mov
int
mov
push
mov
jnp
into
adc
aaa
cs
pop
sarb
lahf
aaa
xor
enter
iret
jb
lods
jl
addb
dec
inc
xor
pop
fisttpl
out
xchg
push
and
insl
dec
dec
xor
and
out
enter
shr
ljmp
mov
fisubs
jmp
repz
fmul
sub
jb
sar
and
adc
aas
mov
fsubrl
xchg
jl
js
mov
sbb
out
xchg
sti
jg
mov
stc
ret
mov
cli
fcoml
mov
sbb
cld
mov
addr16
jns
int
into
je
mov
mov
mov
clc
xchg
mov
out
daa
fnstenv
lahf
outsl
aad
cld
out
xchg
jecxz
test
sti
rcl
repnz
cmp
mov
lcall
sbb
js
and
lret
cmp
lods
jne
adc
je
repz
and
sbb
in
aad
fidivrs
xor
lock
cltd
mov
fimuls
pop
gs
insl
pop
sub
adc
sub
inc
fcompl
pop
leave
faddl
scas
push
outsl
cmp
xchg
daa
iret
xor
aaa
sub
inc
insb
iret
jg
sub
pushf
lods
fstps
cmc
inc
or
add
lods
gs
movsb
inc
into
out
int3
movb
lods
loopne
sar
cmp
lea
push
xor
cmpsb
movsb
xor
inc
mov
clc
inc
sub
pop
cmc
fstpl
mov
sbb
clc
fwait
icebp
lea
inc
ss
or
mov
dec
loop
icebp
jae
ficomps
or
fldenv
in
ljmp
shl
jg
mov
push
pusha
cwtl
incb
add
loop
setbe
popf
loop
sub
mov
xchg
add
and
jns
mov
dec
push
out
mov
out
inc
in
xlat
inc
imul
call
pop
xor
or
cld
xchg
ljmp
mov
inc
pop
sahf
mov
adc
mov
xor
cmp
nop
xchg
std
ss
cwtl
mov
pop
addr16
aas
mov
out
pop
leave
push
xor
pop
or
popf
mov
mov
enter
fs
pusha
mov
inc
in
inc
xchg
hlt
pop
xchg
call
mov
push
push
sbb
enter
clc
push
out
mov
in
cmp
ja
sub
sbb
jne
jbe
add
sbb
cmp
dec
into
xchg
sub
mov
push
jl
rclb
jbe
pop
jmp
add
call
jb
addr16
lock
out
lcall
icebp
movsb
xchg
out
jns
or
dec
in
inc
pushf
and
jo
push
pop
inc
aas
mov
push
pop
cmpsb
and
or
aam
sbb
inc
sbb
mov
cmp
adc
add
insl
add
jne
and
scas
fnstcw
incl
jg
sbb
mov
push
enter
nop
jno
cmpsb
jecxz
test
fbstp
pusha
fsubl
jmp
and
cmpsl
push
je
out
push
mov
imul
xchg
scas
enter
js
pop
fmuls
adc
inc
pop
mov
aaa
lahf
out
shrb
adc
lds
cmpb
jnp
adc
cld
jmp
mov
xor
cmp
pop
pop
jb
out
int3
shlb
clc
dec
fbstp
sbb
fcoms
ficoml
lods
test
lret
leave
repz
mov
out
ret
jp
sbb
int
cwtl
jl
test
test
pusha
push
insb
dec
xchg
jbe
inc
sbb
jne,pn
pop
pushf
stc
ja
lds
mov
xchg
push
jb
ret
pop
jno
mov
leave
lret
push
xor
aaa
ret
cmpsb
sti
cmp
sahf
mov
fs
and
fdivrs
pop
pop
ljmp
mov
enter
fdivr
push
adc
pushf
fcoms
data16
imulb
inc
cmp
pop
mov
and
adc
cwtl
dec
lret
ret
pop
mov
pusha
stos
jg
inc
xchg
xchg
stc
std
jns
cmpsl
stos
or
sbb
cs
jecxz
jge
mov
xchg
aad
loop
inc
fistpl
fisubs
or
pop
push
xchg
ljmp
testb
xor
lret
pushf
data16
stc
xlat
adc
mov
je
cmp
sub
mov
lock
fisubs
fidivrs
jb
mov
repnz
out
lock
shlb
jbe
mov
imul
fs
mov
jae
mov
gs
and
test
jle
fst
into
loop
lods
shrl
addl
mov
xchg
inc
jge
cmp
arpl
mov
adc
fsin
push
pop
mov
push
pusha
or
out
mov
xor
mov
adc
sahf
bound
dec
inc
test
rolb
std
and
xchg
adc
push
adc
movsb
sbb
pop
xchg
imul
adc
mov
bound
in
lret
subl
pop
les
pop
div
fucomp
fs
pop
sbb
mov
imul
push
cltd
mov
xchg
xor
push
pop
das
cwtl
shlb
gs
sti
cs
pop
pop
add
xor
mov
push
orl
pop
push
jno
fdivrl
adc
inc
pushf
lods
les
mov
pop
mov
mov
test
sub
mov
or
pop
clc
or
dec
fxch
sub
add
xchg
xchg
xor
lret
pop
icebp
ss
ficomps
sub
stos
xlat
mov
sarl
cld
jle
adc
dec
push
cmp
popf
fisttpll
fs
jecxz
mov
dec
jmp
push
cmp
dec
xchg
ficomps
cwtl
pop
ret
jle
les
in
mov
std
out
lret
fsubl
sbb
ja
out
xchg
gs
jbe
cmpsl
mov
in
pop
insl
inc
adc
arpl
fcoms
insb
jb
sbb
jg
into
mov
lods
sbb
test
dec
xor
mov
push
cmpxchg
lahf
adcb
or
dec
mov
call
mov
inc
jecxz
out
cli
cmpsb
xchg
test
jge
mov
or
push
cmpsb
fadds
dec
xor
pushf
pop
xchg
fcomps
xorl
mov
je
shll
xchg
cmp
or
pop
hlt
leave
xchg
aad
pop
pop
mov
mov
les
cld
mov
push
sbb
pop
sahf
sub
dec
push
jl
push
xchg
sbb
ficoml
add
push
jge
mov
mov
js
pop
and
jmp
or
cmp
fcmove
out
test
mov
mov
enter
lahf
fs
xor
or
aas
stos
xchg
sub
in
aas
std
or
jmp
cmc
push
lahf
outsl
pushf
mov
push
and
ljmp
cs
pop
xchg
ja
inc
insl
mov
je
icebp
js
sbb
lcall
adc
jb
push
add
iret
jb
fwait
daa
ret
add
and
xchg
xor
test
pushf
insl
mov
jmp
sahf
fmull
out
cs
adc
mov
aam
cmpsb
xchg
jg
in
popf
stos
pop
addr16
pop
add
xchg
dec
fsubrl
imul
mov
in
test
fs
ljmp
push
loop
es
mov
cld
stos
loop
rorl
mov
loop
cmp
or
lcall
push
rorb
add
jp
pop
mov
mov
mov
pop
cmpsl
inc
pushf
add
mov
in
pop
mov
sbb
push
insb
jecxz
repnz
cmp
inc
mov
les
decl
std
or
cli
mov
movmskps
ljmp
pop
sub
and
mov
and
mov
jns
jecxz
sbb
cmp
fcom
outsb
popa
insw
mov
and
pop
in
mov
add
pop
hlt
into
cmp
jo
inc
jge
pop
mov
lock
xor
adc
insl
int3
mov
or
push
ret
pop
mov
inc
cld
xchg
fdivrp
dec
jl
fldt
data16
and
jno
test
add
fcomps
pop
dec
mov
inc
divps
dec
dec
insl
es
sarl
loop
mov
jg
dec
sti
call
xor
pop
js
adc
lret
jne
or
jno
lea
gs
sarb
je
loopne
jne
cmc
ret
in
hlt
mov
sbb
inc
mov
lock
xchg
movsl
arpl
enter
inc
xchg
add
das
push
outsb
pop
icebp
int
or
xchg
das
xchg
xor
sub
repnz
mov
pop
push
outsb
xchg
pop
jmp
mov
hlt
cmpsl
popf
lods
cmp
inc
xor
das
mov
sub
dec
insl
fwait
cwtl
ljmp
iret
cmp
cmp
data16
gs
cmp
sbb
pushf
fidivl
inc
or
and
add
jno
cmc
add
data16
and
lret
jg
rorb
fisttpll
mov
lds
and
inc
jecxz
push
dec
xor
sbb
inc
aad
addr16
in
adc
push
sub
jne
mov
sarl
repnz
leave
icebp
std
test
jecxz
push
inc
fcoml
repz
jno
jle
or
jmp
mov
or
sbb
cmp
ds
sahf
movsb
xlat
xchg
xchg
cli
in
ljmp
jle
test
add
cmc
outsb
fwait
push
sbb
add
insb
mov
lds
ss
shlb
cld
idiv
mov
es
mov
pop
jae
jg
loop
bound
and
adc
lods
adc
pop
int
shr
ss
aam
ret
mov
cwtl
scas
iret
aam
repnz
lret
push
pushl
jl
inc
aad
cli
xor
insb
in
pop
addl
call
sbb
arpl
add
push
mov
push
fiadds
lret
mov
clc
jb
pop
clc
enter
push
and
das
insb
bound
mov
shlb
fisttps
test
sti
xlat
aas
pop
and
push
mov
sbb
mov
cmc
hlt
xchg
or
add
jnp
ja
xor
mov
cmp
xchg
mov
gs
ds
scas
shrb
adc
stos
adc
add
sbb
dec
jmp
lret
popa
mov
mov
cmp
daa
out
jnp
fdivs
push
pop
fwait
or
mov
push
push
xchg
mov
mov
jmp
js
shll
xchg
fstpl
lock
push
mov
xabort
sub
iret
mov
stc
cmp
dec
daa
imul
xor
pop
fdiv
arpl
ljmp
insl
clc
sahf
mov
arpl
lods
repz
push
sbb
in
aam
cld
adc
mov
jbe
push
mov
and
push
ret
lea
add
nop
test
es
imul
out
outsl
out
shlb
and
mulb
xlat
sub
scas
in
outsl
cltd
ret
xor
inc
lea
nop
cmp
mov
sahf
popa
nop
lds
inc
imul
data16
cmpsl
outsl
lret
data16
bound
push
je
xlat
mov
sub
mov
xchg
add
hlt
dec
inc
mov
sub
dec
adc
popf
inc
xchg
adc
sub
scas
push
sarl
lret
sub
cltd
xchg
sahf
fiaddl
fdivrs
and
fidivrl
xor
adc
push
inc
int3
fisttps
add
or
adc
std
xlat
fisttpll
lds
mov
inc
inc
sbb
in
pop
lahf
lods
sti
mov
mov
mov
addb
cmpsl
cmp
aam
xchg
mov
aad
imul
fdivrp
xchg
mov
jb
out
jne
add
pop
icebp
jb
mov
mov
inc
mov
outsb
xor
sbb
and
jecxz
pop
push
or
in
xchg
sarl
jns,pn
shlb
lea
insl
fistpll
testl
dec
std
call
sahf
mov
pop
add
push
je
jb
jge
dec
add
and
cmp
push
inc
sbb
xchg
pusha
mov
pop
idivl
dec
and
mov
or
ds
jge
repz
adc
ds
mov
fists
fbld
cli
movsb
mov
adc
popa
pop
sahf
femms
stos
xorb
or
int
rorb
enter
cmp
bound
psrlq
or
mov
call
cmc
jg
mov
mov
mov
sahf
sub
sub
cmp
in
push
test
or
lret
ljmp
sub
call
shlb
sbb
std
xor
mov
or
inc
lock
cli
add
aas
or
flds
cmp
aas
in
sub
sub
jnp
dec
das
mov
add
ret
sub
int3
nop
insb
jno
push
fildll
or
push
loop
mov
xlat
sahf
stc
push
dec
jne
mov
mov
mov
or
sub
jno
jne
movsb
push
mov
mov
mov
jp
test
gs
aam
aaa
pop
imul
mov
in
pop
mov
insb
mov
mov
cltd
cld
pushl
movsb
xchg
std
int
imul
xchg
mov
out
mov
push
loope
xchg
je
cli
mov
rolb
push
xchg
rolb
or
fldcw
subb
in
nop
mov
sbb
pop
xor
sbb
xchg
mov
es
ret
xor
sub
aas
adcb
mov
sub
sbb
jns
fildl
mov
mov
mov
jp
shll
js
xor
or
je
or
pushf
pop
pop
and
cli
dec
adc
out
stos
insb
mov
scas
lods
movsb
aam
mov
cmp
jl
dec
cmp
dec
pushf
xlat
loop
lcall
xor
aad
aaa
jns
ja
mov
arpl
mov
push
sub
cltd
popa
mov
out
fsub
clc
push
rclb
lcall
stc
cmp
jl
sub
ret
mov
jb
mov
lods
mov
dec
pop
add
das
xor
mov
inc
adc
icebp
cmpsb
in
dec
fiadds
or
add
push
ret
mov
or
pushf
push
xor
dec
gs
loope
or
ss
daa
push
xchg
neg
ljmp
inc
mov
ret
and
in
fwait
push
movsl
mov
popf
push
dec
iret
shr
inc
jae
scas
jl
jmp
cmc
dec
xlat
adc
cmp
jp
andb
and
dec
rolb
cmp
adcb
inc
jg
push
inc
jg
dec
mov
lods
pop
andb
in
jnp
xchg
adc
int3
repz
or
lea
dec
imul
sub
es
hlt
scas
jbe
inc
sarb
mov
test
pop
rcrl
add
loope
pop
adc
xchg
and
in
cld
mov
aad
cmpsb
push
push
imul
das
fldt
lahf
mov
ret
push
outsb
dec
fstp
push
mov
or
cmpsb
call
in
mov
and
xor
pop
jb
in
cmpsl
cmc
lods
pushf
push
lret
cltd
xchg
and
or
arpl
push
mov
dec
test
pop
adc
mov
sbb
cltd
lret
js
stc
test
dec
pop
inc
mov
mov
adc
jecxz
push
lds
dec
mov
insb
add
mov
in
enter
add
and
es
dec
xor
inc
data16
or
lahf
xchg
xor
int3
and
xchg
xchg
fidivrl
das
sbb
in
test
int3
add
sbb
mov
mov
icebp
das
cld
jne,pn
enter
adc
or
push
mov
add
mov
xor
ds
mov
fdivs
pop
sbb
test
outsb
jne
push
sub
lret
pop
mov
push
mov
cmpsb
pusha
jns
add
int
mov
lret
and
cli
jge
int3
fs
jo
loope,pn
mov
mov
mov
fildl
xorl
mov
divb
fwait
push
or
dec
mov
inc
add
lods
fnstcw
insl
repnz
rolb
lret
or
nop
cli
adc
push
sbb
js
fisubl
push
das
and
pop
mov
rolb
sub
out
std
out
ljmp
jmp
ret
push
fcom
xor
lods
push
mov
test
inc
cwtl
fwait
xchg
mov
rcr
outsb
sahf
rorb
cmpsl
push
mov
dec
or
lods
sbb
int3
mov
sub
push
xor
and
ret
hlt
jp
push
dec
adc
in
nop
and
xchg
push
jns
das
mov
mov
xchg
insb
bound
adc
jae
push
out
jbe
insb
movsl
cld
notl
or
add
push
and
in
mov
jb
adc
xlat
dec
jne
nop
and
mov
dec
mov
negb
jecxz
or
pushf
xor
or
mov
jecxz
ret
negl
arpl
jmp
in
ret
popa
movsb
cmp
mov
adc
mov
daa
push
pop
mov
push
loop
stc
ret
pop
xchg
out
js
sub
add
pop
sub
sarl
mov
xchg
jo
stos
std
mov
push
std
cld
arpl
sti
stos
inc
xchg
mov
int3
neg
test
imul
jmp
xchg
mov
push
rclb
jb
insb
mov
pushf
bound
push
pop
push
pop
add
out
test
div
pusha
mov
add
mov
or
sbb
push
xchg
lods
roll
out
scas
xchg
sbb
cmp
outsb
pop
adc
mov
jl
or
movsl
insb
mov
mov
adc
mov
cli
or
push
xor
xchg
sbb
push
stos
fiadds
aam
mov
out
jl
fmuls
jmp
or
sbb
rcr
cmp
iret
pop
adc
and
popa
pop
jns
xor
arpl
cmpsl
repnz
fdivl
movsb
jo
inc
lods
jb
push
push
cld
inc
stc
adc
scas
sti
aaa
inc
pop
pusha
aaa
and
test
lcall
xchg
cmp
lods
lcall
xor
mull
ljmp
mov
cld
mov
mov
push
jne
push
pop
jae
fcmove
xor
loop
imul
dec
stos
sarl
and
test
or
inc
jmp
insl
push
cmpsb
scas
cmpsb
cmpsb
mov
sbb
xchg
xchg
adc
into
shll
aam
pop
mov
inc
mov
mov
mov
shr
ret
push
outsl
cmpsl
ja
cmp
shll
lods
imul
push
dec
pushf
mov
fadds
jae
sbb
xor
das
hlt
xorb
sub
bound
pop
es
lods
repnz
mov
movsl
jge
repnz
in
rclb
stos
ret
mov
xor
jmp
lahf
pop
dec
adc
das
or
ss
rorl
adc
jecxz
sahf
sbb
push
jg
inc
es
inc
test
mov
or
in
xchg
popa
cmp
mov
movl
insl
xor
mov
mov
icebp
pop
and
addb
add
iret
xchg
arpl
pushf
or
or
push
mov
lahf
inc
jno
dec
int3
outsl
adc
iret
and
test
push
fs
xchg
int3
sbb
push
dec
push
mov
test
movsl
mull
pop
inc
cmp
jle
inc
mov
push
shl
gs
fldenv
xchg
test
dec
in
adc
repz
cmpsb
movsl
push
in
fimull
cmp
inc
push
and
enter
pushl
sbb
or
push
mov
xchg
in
inc
insl
loope
stos
push
sbb
je
jno
pop
test
add
in
xchg
jns
aaa
aaa
rcl
sub
xor
lods
jge
adc
pusha
shll
mov
nop
xchg
jmp
adc
xchg
int
mov
and
cld
dec
xor
cmp
imul
int
mov
pop
adc
jg
mov
fcomip
sti
insl
add
call
jne
add
mov
mov
xor
jle
mov
ljmp
lcall
jmp
and
cmc
and
pop
leave
and
cmp
loop
push
pop
add
xchg
lods
je
inc
gs
movsl
mov
cmc
inc
addr16
mov
fistpl
mov
fldenv
loope
or
push
adc
xor
arpl
stos
test
pop
mov
mov
stc
test
cmpsb
mov
outsl
enter
std
shlb
push
jg
out
test
dec
adc
rcrb
push
or
or
cs
rorb
or
vmread
rcll
testb
lds
aam
xorl
ja
push
lods
xor
jecxz
inc
cmpsl
push
dec
lea
int3
aas
cs
mov
add
fimuls
adc
out
insb
and
lock
xor
inc
mov
daa
icebp
std
fmull
mov
xchg
inc
ljmp
and
xlat
outsb
and
insb
lock
xchg
xchg
jmp
cmp
test
jp
push
jecxz
xor
stos
cmp
dec
jle
scas
iret
push
in
les
push
lods
dec
repz
lahf
sbb
je
pop
mov
sub
dec
cmp
fwait
adc
ffree
mov
xorl
sub
dec
orb
mulps
jbe
cmc
sti
and
mov
inc
es
stos
xchg
fdivrl
jmp
les
mov
push
aas
mov
in
mov
mov
movsb
xchg
fnstcw
sbb
aaa
dec
rolb
pop
and
vpcmpeqd
int3
and
fcmovne
mov
imul
mov
bound
imul
adc
mov
sbb
shrb
clc
mov
pop
adc
rcrl
mov
iret
dec
cltd
push
or
test
or
outsb
push
stos
fcomps
fiaddl
cmc
orl
cli
push
sarb
inc
sahf
add
sbb
cli
dec
int
enter
dec
adc
cltd
leave
mov
mulb
in
test
ss
out
adc
jno
outsb
adc
out
arpl
push
mov
mov
push
mov
add
movsb
insb
and
cmp
mov
loope
lods
mov
mov
decl
pop
out
sarl
push
push
push
cmp
and
inc
std
flds
mov
fs
aad
pop
bound
in
push
icebp
mov
mov
cmp
jb
cmp
mov
fst
sub
arpl
jbe
sbbl
mov
xchg
mov
adc
sub
in
int3
cmpl
push
cmc
scas
xlat
sti
add
lock
and
sti
jge
xchg
jl
imull
jecxz
cs
outsl
sbb
mov
inc
mov
stos
xor
int
and
out
adc
cltd
cmpsl
fcmovnu
jb
mov
repnz
cltd
push
xchg
mull
ds
push
dec
ror
clc
lods
sbb
xchg
sub
popf
lock
xor
arpl
inc
ret
inc
jbe
aaa
mov
jo
icebp
loopne
jg
cmpsb
jg
adc
inc
sub
mov
adc
add
mov
movsl
mov
jae
mov
mov
lret
sbb
scas
mov
jnp
mov
mov
test
add
mov
shl
inc
jbe
insl
adc
mov
test
xlat
fisubs
pop
jnp
movsl
sbb
les
mov
dec
jno
data16
push
insl
cmp
sub
test
push
jnp
sar
jne
adc
and
and
or
and
hlt
mov
mov
sub
mov
sub
lods
jge
mov
cmpsb
xor
cmp
cs
push
cmp
cwtl
xor
and
adcl
xor
xchg
dec
lret
push
or
jo
mov
or
mov
packsswb
lret
sahf
cld
adc
mov
push
xchg
test
mov
jne
xchg
fldcw
or
lds
aaa
and
out
scas
add
nop
repnz
xor
lcall
loope
mov
add
imul
and
sub
iret
mov
out
jae
gs
push
jo
or
stos
popf
sahf
aam
and
mov
pop
fdivl
movsb
test
adc
add
inc
div
mov
call
shrl
mov
test
adc
int
pushf
jns
ret
mov
andb
mov
dec
shl
mov
push
mov
movsb
sub
hlt
cmp
jae
pushf
xchg
pop
enter
mov
inc
scas
adc
cmp
cmp
inc
cmp
xor
pusha
jb
andb
mov
iret
or
adc
stc
mov
idivb
ret
and
outsl
inc
je
scas
imul
or
test
enter
cltd
xchg
jns
jle
in
rorb
loope
pop
jp
mov
incl
cwtl
stos
jne
fcmove
cmpsl
push
push
insb
fisttps
sub
add
mov
jbe
jns
sub
and
jno
mov
scas
mov
setnp
lcall
cmp
push
lock
nop
dec
leave
loop
mov
test
ja
add
fadds
in
dec
pusha
es
push
int3
mov
hlt
add
xor
push
add
add
shlb
imul
inc
inc
push
dec
inc
int3
ss
and
xlat
icebp
aam
mov
imul
lea
pop
popa
dec
rcrl
popf
inc
aad
mov
pushl
movsl
loope
sub
jge
mov
cmp
cmp
inc
sbbb
adc
fsubrs
push
adc
out
jo
mov
xor
out
jp
jl
ss
mov
lret
and
popf
mov
adc
push
xor
pop
cltd
sahf
ljmp
ret
push
inc
faddp
mov
xor
xchg
sarb
jg
dec
cmp
repz
and
mov
ret
test
push
mov
sbb
jae
fsubl
lock
sub
ffreep
add
xorb
jecxz
in
mov
sbb
daa
mov
lea
cltd
jmp
lret
pop
xor
add
sarl
and
dec
push
loope
ljmp
repnz
fs
inc
das
lcall
cld
out
mov
mov
pop
outsl
sub
add
clc
ret
outsl
bound
scas
in
andl
xor
jb
push
into
push
or
inc
sbb
mov
test
lret
mov
cmp
std
ret
mov
sahf
jle
inc
pop
inc
sarb
mov
movsl
add
fisubl
jmp
pop
cld
lods
out
lret
dec
ret
mov
dec
xor
xor
pop
mov
sbb
pusha
xchg
es
dec
mov
xor
push
cmpl
movsb
jns
sar
lahf
hlt
int
sti
dec
in
fdivrs
lock
insb
inc
sub
dec
inc
mov
dec
adc
inc
jge
xchg
addr16
jbe
clc
mov
cmpsb
mov
aad
out
add
jge
mov
mov
dec
mov
add
mov
fmull
mov
or
and
repz
mov
mov
sbb
stos
add
xor
loop
pop
loop
aas
rcll
mov
push
leave
into
push
shld
insl
dec
ret
data16
mov
bound
xor
stos
mov
lret
and
clc
pop
arpl
movsl
and
es
cmp
cmpsb
xchg
xor
lret
jns
cmp
rcl
xor
and
or
xor
cmpsb
xorl
sub
mov
fimuls
xchg
xchg
dec
cmp
pop
rcrl
popf
dec
call
adc
mov
inc
es
add
aaa
push
js
sbb
pop
cmp
add
mov
dec
out
stc
xor
mov
or
jle
inc
push
mov
cmc
stos
jns
sahf
inc
stc
popa
cwtl
imul
sub
push
dec
sbb
dec
aaa
mov
repnz
jmp
or
inc
cmp
ret
jo
mov
pop
or
cltd
inc
rol
mov
jle
std
ficoml
mov
xchg
rcl
jle
add
xor
mov
inc
adc
add
icebp
jl
mov
aaa
aas
cmp
mov
lret
cltd
mov
jae
insl
inc
cld
inc
cmpl
mov
pushf
movsl
pop
jl
dec
xlat
mov
cli
inc
mov
xor
push
dec
das
sub
iret
repnz
adcl
pop
xchg
xchg
aam
pop
mov
jnp
cmp
push
fisubl
rorb
in
scas
arpl
std
push
cmp
cmp
arpl
cmp
dec
in
shll
xor
out
shlb
into
shll
sub
ret
jae
std
dec
xor
push
sbb
addl
orl
mov
pop
mov
or
into
and
inc
outsb
cmp
push
out
push
dec
xor
lock
enter
stc
insl
lock
test
imul
cmp
add
lret
xchg
ljmp
cmp
pop
xchg
outsl
push
jecxz
or
xor
stc
ja
in
mov
jl
int3
xor
sbb
cmc
jb
jne
sub
fwait
lahf
mov
das
fdivp
je
sti
imul
sub
int
stos
test
cmpsb
push
add
mov
in
jle
aaa
adcl
test
out
mov
inc
js
sbb
mov
fcmovb
dec
ja
sbb
lea
imul
aad
mov
and
mov
fst
lods
jg
gs
and
jge
idivl
sarb
push
pushf
fwait
mov
stos
mov
jns
mov
addb
xlat
fucomi
pop
stc
mov
lds
lret
addr16
mov
dec
test
rorb
cwtl
push
jae
pop
in
or
mov
adc
or
jae
push
in
jbe
movsb
ret
adc
mov
iret
cmp
mull
sahf
pop
dec
xor
add
imul
jge
call
push
and
fwait
jo
sub
shrb
cli
fld
scas
mov
mov
add
addb
mov
jp
popf
popf
and
std
sahf
data16
mov
mov
cli
out
ret
xor
dec
outsl
fcoms
scas
test
jne
daa
call
and
stos
push
add
fs
inc
dec
cli
adc
sbb
inc
testl
insl
std
int
lcall
push
out
lods
xchg
ljmp
mov
mov
adc
dec
movsb
cmp
inc
mov
dec
jl
enter
cmp
mov
mov
jmp
stc
sub
movsl
repz
inc
cmp
lea
mulb
sbb
xor
sub
out
pop
dec
fsubrl
push
sbb
arpl
loop
or
nop
xchg
mov
and
scas
dec
add
sub
negl
lret
xlat
dec
add
sub
xor
sub
mov
pop
xchg
mov
insb
mov
imul
inc
or
aam
cmp
inc
jnp
xchg
adc
sbb
out
repz
inc
dec
fidivl
rcl
test
sahf
cmp
aas
push
push
add
test
mov
cwtl
fnstsw
sub
arpl
sbb
iret
push
scas
sbb
xor
enter
psadbw
xchg
cmp
xchg
mov
jecxz
and
push
lcall
dec
orb
out
std
mov
loope
sbb
lahf
sbb
ret
dec
outsl
in
mov
test
out
out
mov
sbb
roll
mov
mov
add
shlb
adcl
mov
xchg
scas
xchg
mov
xchg
push
leave
shrb
movsl
mov
pop
stos
ds
scas
and
mov
insl
cli
xchg
pop
dec
sbb
insl
inc
push
cmp
nop
jmp
stos
mov
or
cli
push
clc
pusha
out
pop
inc
xchg
mov
insb
mov
sbb
bound
sbb
jge
pop
or
adc
das
es
and
jne
lahf
xchg
lods
orb
fldl
mov
cmpsl
lock
jne
fistl
adc
stc
inc
clc
int3
loopne
daa
mov
add
jp
jne
mov
scas
mov
adc
push
loop
adc
add
in
mov
fs
ss
popf
popf
xor
jo
adc
xor
fsubl
nop
or
cltd
mov
mov
fdiv
lldt
pop
scas
ret
cmp
lds
out
sbb
sbb
dec
mov
inc
and
repnz
cmp
repz
xchg
dec
mov
mov
xor
repz
fwait
popa
sub
imul
lods
push
dec
push
or
test
arpl
leave
inc
sub
cmpsb
adc
ud0
jnp
xchg
addb
jp
adc
in
cwtl
arpl
fcomip
aaa
mov
es
sbb
aaa
fdivrs
mov
imul
xchg
inc
jg
fwait
or
icebp
divl
pushf
mov
adc
negb
mov
pop
mov
inc
dec
cmp
push
and
dec
aaa
cmp
inc
jl
cmp
sub
scas
push
shlb
xor
adc
pusha
inc
add
or
scas
call
and
add
and
repz
arpl
inc
cmp
pop
mov
inc
mov
pop
mov
lds
inc
aaa
fidivs
not
add
dec
and
ljmp
xor
in
mov
call
in
addr16
outsb
sahf
or
push
pushf
gs
push
test
xchg
mov
divl
or
mov
mov
push
xchg
xor
dec
fwait
xlat
dec
cmp
je
xchg
push
iret
jle
push
dec
sbb
xor
jmp
mov
jecxz
nop
xor
imul
orb
add
pop
bound
scas
inc
cwtl
mov
jns
test
xchg
xor
out
int
cmp
call
adc
jae
cwtl
ljmp
cs
imul
or
jae
lods
aam
cltd
push
mov
shlb
pop
mov
sbb
mov
and
pop
inc
repz
adc
mov
push
sbb
lret
mov
into
ja
aaa
push
jnp
test
add
xchg
in
mov
int
cmp
pop
aad
sub
es
mov
sub
add
cmpsb
cmp
dec
arpl
scas
int3
int
or
mov
xor
jp
jae
shl
cmc
fcomp
push
sbb
stos
rcll
lods
es
mov
mov
mov
mov
mov
mov
sub
daa
push
addr16
mov
push
nop
xchg
iret
rclb
pandn
mov
shll
pop
mov
jno
xchg
scas
popf
scas
iret
pop
push
xchg
jmp
int
rcll
into
out
cmp
scas
push
orb
sub
xchg
lahf
sbb
inc
fistpl
cwtl
jbe
pop
repz
push
ja
push
enter
rorb
outsb
cmp
xchg
scas
pushf
lret
mov
fistps
fbstp
and
sub
adc
jg
shlb
mov
sahf
xchg
jl
ss
add
and
pop
jle
in
jp
add
xlat
bound
or
shll
xchg
fnstenv
sub
pop
mov
fdivrs
xchg
mov
into
pop
fcoml
stc
loopne
mov
mov
inc
insl
loopne
repz
adc
dec
mov
and
out
mov
xor
or
outsl
cld
test
pop
loop
sub
lcall
mov
pop
aas
daa
lods
mov
aas
add
sti
sti
cmp
shll
jne
stos
ret
cmp
lock
es
hlt
sub
hlt
test
add
cld
or
nop
imul
pop
movsb
push
testb
ss
add
push
jb
sbb
in
pop
jge
enter
pop
test
xor
and
lods
movsb
add
cmp
mov
fdivrp
jo
xchg
out
push
jecxz
adcb
push
xor
imul
push
daa
cmp
mov
dec
pop
lcall
pop
leave
pop
xchg
scas
rclb
sub
loop
cmp
mov
inc
cli
push
push
mov
xor
in
hlt
popf
fdivrs
or
lods
repz
jl
or
mov
in
test
aaa
xor
cmovb
test
inc
jl
dec
inc
inc
addr16
mov
cmp
push
push
adc
inc
and
jmp
or
mov
cmp
ja
lcall
pop
iret
cs
mov
jb
ret
dec
inc
aas
insl
shlb
stc
sub
in
cmp
inc
subb
mov
int
in
pop
fisubs
xlat
and
shlb
xchg
sahf
add
push
cmp
add
sar
hlt
add
mov
fcmovnu
ret
jmp
js
in
scas
lret
nop
in
icebp
xchg
out
sbb
aas
fiaddl
sub
xchg
inc
mov
sub
shr
jne
lret
xor
imul
cmp
repz
cmp
arpl
in
sbb
mov
and
xchg
in
in
iret
push
push
dec
push
test
test
sbb
mov
sub
out
jne
std
sub
push
jmp
fildll
mov
sub
imul
lea
outsl
mov
inc
fdivr
xchg
enter
fwait
and
scas
cmp
in
push
loop
nop
inc
pop
imul
ret
and
inc
fildll
std
outsb
imul
pop
fdiv
pop
inc
loopne
inc
sbb
outsb
lods
js
sub
cli
ss
and
adc
dec
xchg
xor
add
mov
imul
ret
dec
sbb
xchg
popf
ljmp
into
adcb
mov
cmp
data16
nop
and
adc
dec
sahf
sbb
clc
imul
leave
lret
pop
scas
push
fmull
inc
out
das
xchg
sbb
dec
jnp
xor
add
lahf
sbb
adc
pop
jnp
jecxz
in
adc
sti
pop
dec
adc
imul
popl
cwtl
fidivrs
and
aas
push
jne
adc
pop
dec
daa
mov
mov
pop
rcll
adc
sub
in
xchg
adc
push
mov
fbld
mov
loop
cli
gs
out
daa
push
cmpsl
adc
sub
ljmp
movsl
lods
inc
fs
push
sti
shl
xchg
mov
adc
aad
faddl
add
aam
in
enter
repz
les
jmp
mov
movsb
pop
lret
xchg
add
and
sub
mov
test
lods
js
or
and
nop
pop
mov
dec
or
popf
mov
mov
test
enter
ffreep
dec
arpl
out
pop
push
mov
xchg
and
jge
dec
shrl
jp
push
sti
aad
mov
mov
push
data16
rcr
ljmp
imul
push
push
lea
mov
xor
fmuls
gs
outsb
mov
push
adcb
mov
outsb
aaa
jmp
cmp
jb
inc
lret
adc
mov
mov
sub
sbb
add
stos
cwtl
cmpsl
repz
xor
loope
inc
out
fisubl
pusha
cmpsb
adc
jno
cmpsb
or
aam
cmp
jno
pop
fbld
mov
xchg
sbb
lds
int3
std
jecxz
adc
jge
adc
push
in
stos
ja
int
adc
pop
movsb
fistl
lods
push
or
jl
pop
mov
arpl
and
ret
add
jnp
std
int
cs
into
mov
lds
je
je
and
adc
mov
movsb
lock
inc
mov
jl
std
mov
mov
adc
dec
popf
test
lds
inc
arpl
lods
mov
sahf
push
shll
push
add
subb
jno
cwtl
scas
dec
repnz
pop
jns
push
xor
out
bound
dec
fstps
or
add
push
subl
aas
or
dec
mov
push
jmp
dec
dec
or
js
mull
pop
xchg
sbb
std
inc
dec
imul
xor
sti
adc
add
fdivrp
push
sub
mov
scas
cmpsl
call
das
mov
jcxz
push
xor
add
pop
stc
cld
jmp
inc
jo
mov
repnz
jno
aam
adc
dec
adc
daa
gs
push
cmp
shrb
cli
sbb
pop
mov
dec
pop
lds
out
lea
jmp
and
ss
insl
adc
dec
add
popa
jno
fldpi
fnstenv
jl
ss
mov
es
hlt
mov
xor
popf
lods
push
popf
push
pop
in
push
push
int
loop
cmp
or
in
shlb
in
cmp
leave
xchg
push
dec
repnz
fnsave
sub
or
imul
hlt
xor
push
lock
and
mov
arpl
push
mov
xchg
lds
mov
xor
push
lock
mov
mov
in
jecxz
or
adc
jmp
shr
adc
fdivl
or
jmp
pushf
xlat
jns
pop
roll
sub
cmovo
ljmp
dec
xor
or
jmp
push
andb
and
dec
jno
in
and
push
mov
inc
outsb
add
mov
inc
mov
add
push
nop
dec
scas
sub
inc
idiv
insl
mov
mov
inc
pop
das
jae
aas
adc
insb
dec
pop
addl
icebp
je
inc
loope
mov
mov
dec
mov
fcoms
sbb
sbb
mov
and
in
jne
xchg
inc
out
push
push
shlb
insb
cmp
in
pop
jo
xor
jecxz
sub
push
push
jns
and
push
addl
mov
adc
movsb
inc
subl
jecxz
dec
andb
xor
divl
cs
mov
pop
out
mov
outsb
mov
and
push
adc
inc
xchg
xor
sahf
sbbb
ljmp
cmp
lret
mov
stos
xchg
xor
decb
mov
in
xchg
xchg
lock
inc
sbb
loopne
addb
je
dec
push
cs
inc
xor
hlt
lds
pop
dec
mov
neg
jno
add
mov
push
xor
lahf
xlat
jmp
jbe
inc
xchg
pop
out
loope
mov
or
jle
imull
or
pop
ds
andl
adc
inc
cwtl
cmp
jmp
mov
repnz
mov
repnz
mov
xchg
push
aam
aad
movsb
xchg
mov
out
xchg
jge
or
jnp
sub
insb
jmp
inc
pop
sbb
jle
loope
arpl
nop
ror
adc
stos
pop
pushl
sti
mov
xchg
adc
mov
in
sbb
push
jmp
push
dec
fmul
sub
cli
pop
inc
pop
repnz
ja
sbb
sub
jb
add
loopne
jae
divb
adc
cmp
dec
xor
sub
scas
xchg
rcrb
jp
and
je
adc
push
mov
iret
fcompl
adc
adc
mov
lret
lret
lock
mov
adcb
adc
loop
mov
xlat
insl
xchg
ja
ret
int
popa
cmp
fs
jb
jle
mov
push
mov
mov
ljmp
cmpsb
test
mov
lock
in
pushf
jae
xchg
aas
mov
dec
fildl
lret
mov
gs
mov
jae
push
and
mov
push
fimuls
sbb
adc
inc
insl
int3
shlb
xchg
stc
fimuls
in
xor
mov
pop
lods
mov
xor
push
push
xor
popf
fistpll
push
stos
cs
aas
push
stc
jg
pop
sub
leave
mov
inc
notb
call
mov
push
push
cmp
cld
jbe
mov
ds
scas
cwtl
mov
mov
pop
mov
cld
sub
sub
shll
imul
pop
out
ja
push
inc
int
mov
mov
negl
inc
jge
ret
sub
es
mov
cmpsl
in
aad
mov
or
add
scas
imul
or
sub
push
std
cmp
xor
lods
mov
fldenv
xchg
pop
test
xor
cltd
shll
test
rorl
jmp
icebp
mov
outsl
daa
mov
aas
jno
pop
fisubl
pop
mov
jmp
pop
mov
rorl
push
bound
sbb
jp
call
push
sub
js
adc
cwtl
test
mov
sub
loopne
sbb
outsb
sub
shrb
pop
lret
jbe
ljmp
imul
test
lods
setae
xor
and
xchg
aaa
push
out
mov
push
xchg
mov
lret
jo
loope
inc
or
xchg
ljmp
addr16
xchg
and
dec
push
xlat
cld
notl
clc
sbb
gs
jno
pushl
xor
jmp
jp
xor
loopne
or
std
push
scas
cmpsl
dec
pop
ret
outsl
push
mov
adc
pop
sub
nop
sub
push
push
cmpsl
insb
mov
iret
aas
orb
js
mov
leave
push
cmc
xor
gs
das
adc
cwtl
pushf
xor
or
sbb
fwait
sub
cmp
sbb
lods
js
std
int3
cld
sbb
sub
cmpsb
push
push
iret
mov
jne
sbb
repnz
adc
mov
or
fistl
ja
scas
mov
jge
imul
or
aaa
scas
dec
jo
cmpsl
jno
int
and
je
ds
std
sbb
in
push
pop
inc
or
push
movsl
mov
push
xchg
stos
lods
xor
push
mov
sbb
pushf
push
stos
mov
test
dec
cmp
aad
popf
mov
mov
leave
add
inc
pop
pop
push
sbb
sbb
ds
pop
push
and
xchg
in
xchg
inc
cmpsl
fmull
push
lods
or
iret
mov
cld
mov
adc
xchg
adc
in
cmp
fiaddl
mov
mov
jo
cmpsl
outsl
lcall
dec
cmpsb
pop
and
push
adc
inc
fsubr
mov
push
push
loope
std
pop
or
ret
mov
cmp
push
and
es
rcrb
pop
movsl
int
push
xchg
mov
jge
mov
aaa
pop
movsl
cmpsl
out
mov
or
ucomiss
mov
test
pop
outsl
add
fdivrs
pop
mov
mov
fs
pop
xchg
push
jge
int3
sub
pop
xchg
in
push
fimuls
dec
add
cmp
shll
flds
and
call
mov
test
sbb
ret
mov
mov
pop
pop
mov
add
lea
push
sbb
mov
push
lock
in
add
cmp
inc
movsl
push
adc
mov
cmpsl
shlb
stos
jge
pop
addr16
subl
mov
xchg
aad
push
lahf
je
cld
push
adc
pop
mov
hlt
loop
pusha
xor
mov
push
xchg
mov
sar
js
hlt
xor
loop
mov
icebp
jb
mov
push
filds
icebp
lea
mov
inc
xor
idiv
leave
jg
add
cmc
dec
mov
pushf
sub
mov
mov
cli
lret
or
mov
sub
cmpl
mov
sbb
dec
sbb
movsb
pushf
add
ljmp
mov
popf
dec
xor
sbb
adc
mov
leave
popa
jo
inc
leave
xlat
loope
lock
lahf
arpl
movsb
fmull
gs
mov
sahf
mov
xlat
lea
xor
xlat
es
dec
xlat
fstl
dec
subb
iret
out
jnp
jb
decb
mov
cli
popa
lahf
mov
mov
shll
ret
int
adc
callw
mov
in
push
mov
pop
lds
sub
dec
pop
inc
rolb
ss
jns
push
in
ljmp
mov
xor
ffree
cmp
pop
mov
push
les
popa
cmp
clc
mov
xor
fldl
mov
mov
or
subb
dec
dec
into
jb,pn
inc
clc
pop
in
mov
push
fildl
out
gs
adcb
jl
xor
xor
pop
and
sub
pushf
xor
sbb
sbb
stc
addr16
js
rol
adc
sti
cmc
mov
sbb
cmpsb
mov
sbb
movsl
stos
outsb
push
or
adc
mov
mov
mov
push
adc
adc
dec
push
js
cmpsl
nop
cmp
addb
ss
lods
fsubrs
in
jnp
sbb
fldt
sub
cmc
loop
xor
add
inc
jge
sbb
jbe
cmpsb
pushf
inc
mul
lock
jp
xchg
push
shll
les
cwtl
jnp
inc
mov
movsl
in
daa
les
repnz
lods
mov
scas
fidivrl
adc
bound
int
mov
pusha
push
arpl
push
mov
add
add
loop
xchg
sub
cwtl
jnp
fbld
fisttpll
scas
xlat
loop
adc
leave
pop
out
ret
repz
adc
pushf
iret
pop
adc
dec
enter
mov
dec
stos
inc
mov
mov
sti
sub
jecxz
test
dec
mov
fstpt
ljmp
xor
popf
cmp
mov
ret
cmp
xorps
jle
mov
arpl
pop
push
test
sub
xchg
sbb
shlb
xor
repnz
fiadds
icebp
inc
shl
sub
mov
push
aaa
adc
mov
std
loop
jmp
lcall
dec
stos
movsb
cmp
std
into
xor
add
pop
jne
push
xchg
add
jno
cltd
fldt
test
call
nop
dec
or
mov
push
lahf
sub
xchg
dec
loop
sti
cmp
fs
dec
ja
sub
mov
mov
pop
add
cltd
inc
and
adc
dec
pop
lcall
inc
dec
ret
addr16
rcrb
xchg
xchg
out
mov
and
jge
pop
gs
dec
add
jae
imul
inc
fucomp
ret
xchg
sub
jg
addr16
andl
jecxz
cmp
fsubrs
mov
test
jmp
pop
mov
sub
mov
adc
adc
xor
fucomp
pop
loope
pop
add
mov
ficoms
jns
int3
sahf
adc
xor
cmpsb
roll
inc
cltd
fst
cmp
fwait
sbb
sbb
fisttpl
nop
ljmp
pcmpeqw
push
mov
ret
inc
jle
lds
mov
mov
xchg
jmp
or
jns
int3
mov
scas
jecxz
imul
sbbb
lods
and
mov
mov
mov
icebp
mov
loope
sub
push
mov
call
mov
mov
jle
mov
bound
xchg
gs
pop
and
pop
sbbl
pushf
add
xchg
cmpb
dec
movsb
pop
xor
loop
out
adc
push
jns
lret
test
jecxz
into
sub
or
xchg
test
jnp
call
mov
incl
push
sbb
fsub
cmp
iret
xlat
cmc
cwtl
shll
pop
cmp
outsl
out
adc
xchg
cs
std
fwait
test
aaa
sub
xchg
mulb
mov
fistpll
sahf
das
dec
loopne
push
rcr
mov
sbb
mov
and
bound
mov
dec
push
fwait
pop
movsl
sahf
jnp
lock
xor
dec
sbb
or
lods
ljmp
mov
push
mov
addr16
adc
aam
xchg
into
sbb
outsb
std
cmp
hlt
in
das
push
test
xchg
sub
inc
or
xor
xor
aam
or
es
cmp
cmpsb
cli
dec
scas
imul
insb
cmp
xchg
jae
mov
push
mov
push
xchg
push
jp
clc
scas
and
inc
inc
sub
pushf
mov
and
mov
test
xchg
pop
or
mov
ds
mov
cmp
enter
repnz
fsubl
dec
addr16
cmp
fwait
xchg
je
or
sti
daa
mov
aad
dec
in
jne
mull
idivb
mov
jno
loop
inc
ja
lods
pop
lea
ds
addr16
popa
pop
scas
je
out
dec
test
and
aad
rol
and
mov
mov
into
xor
push
or
fmull
jnp
and
xor
das
push
popf
ret
imul
popa
push
fwait
inc
ja
shll
cli
push
adc
mov
cmpsl
js
mov
sbb
popf
aam
clc
dec
shrl
jmp
lods
movsb
dec
jl
cmp
outsl
jmp
xchg
xchg
inc
inc
dec
or
xchg
pushf
xchg
jb
stc
lahf
pop
test
jb
test
outsl
or
loopne
movb
pushf
int3
pop
mov
loopne
iret
or
lahf
cmp
jmp
push
ret
enter
mov
cmp
cli
add
xchg
imul
adcb
stos
bound
jge
xlat
jb
push
fdivs
xor
sti
sub
dec
jnp
scas
sub
or
test
add
push
jecxz
xchg
sbb
aad
adc
fistl
enter
push
jno
jno
adc
ret
cwtl
out
mov
inc
jae
pushf
pop
insb
lds
popa
pusha
and
inc
sbb
je
jbe
xchg
jmp
xor
dec
les
insb
mov
jb
mov
adc
xchg
jne
cmp
mov
stos
mov
xchg
xor
pop
pusha
cmp
outsb
cmpsl
les
fdivrl
in
in
pop
xor
iret
fdivrs
mov
jmp
fisttpl
scas
ret
inc
xchg
mov
jo
ja
push
aas
xchg
mov
leave
dec
aad
pop
sbb
lods
out
sub
inc
push
xchg
mov
rcr
sub
rcr
loope
insb
xor
in
out
mov
mov
and
mov
adc
xchg
xor
xchg
cmc
test
jb
xor
fmuls
popa
mov
jno
or
xor
adc
fsubrs
mov
xchg
inc
inc
outsb
inc
loope
push
push
xor
xor
mov
and
mov
mov
cwtl
xor
cmpsl
pop
mov
mov
push
inc
sahf
test
cmpb
push
add
test
mov
push
and
loope
jns
mov
cmpl
jmp
jnp
lret
stc
ret
dec
xchg
in
int3
xorl
adc
mov
add
jo
mov
or
cld
inc
xor
xchg
fst
into
sti
jp
lds
popa
jecxz
and
jno
sub
mov
mov
imull
dec
cmp
inc
mov
lcall
xchg
insb
or
xchg
insl
or
test
shlb
imul
push
jp
fwait
std
data16
and
jl
fs
xchg
inc
enter
sbb
jnp
cmp
xor
xchg
sahf
cmp
sbbl
je
cmp
gs
leave
into
stos
stos
filds
mov
les
or
fnsave
push
das
cmp
inc
jecxz
rol
sbb
or
lea
les
cmpsl
add
pop
mov
inc
test
lea
arpl
pop
ret
popf
xchg
xchg
jecxz
sub
adc
scas
jg
jecxz
pop
outsl
movsb
out
idivb
dec
sarb
repz
mov
jp
mov
dec
adc
sbb
xlat
call
jo
ss
fisubl
in
je
stos
out
sahf
leave
ss
shl
fcoml
dec
stos
fists
popa
inc
repnz
mov
push
in
das
aad
outsb
mov
sti
in
and
repnz
aad
mov
add
insl
int3
sbb
gs
int
mov
adc
test
jne
scas
dec
xorl
pop
mov
pop
fistps
sub
xchg
or
cmp
sbb
push
insb
xor
jmp
cmc
movsb
mov
push
jg
jne
inc
gs
sahf
cmp
push
pushl
mov
pop
or
loope
mov
test
jl
sbb
out
push
push
ljmp
leave
ljmp
xor
aas
push
cmovbe
loopne
push
movsl
cld
fld
jae
xor
push
xor
xchg
cwtl
ret
xor
pop
out
push
adc
push
fwait
lock
shr
movsl
fistpl
xchg
fisubrs
inc
fxtract
xchg
stos
mov
xchg
in
or
and
out
int3
out
lahf
imul
int
int3
call
dec
pop
dec
xchg
faddl
imul
mov
adc
inc
xor
pushf
pop
cmpsb
xor
sub
cmp
test
insb
pusha
in
xchg
fildl
push
aaa
sub
mov
call
hlt
sub
dec
dec
lock
sub
pop
inc
cmp
and
inc
je
mov
fcompl
pop
iret
imul
ds
cmpsb
jb
popf
ss
xchg
ja
nop
jp
ror
sbb
and
pop
adc
mov
mov
xchg
shl
pop
fsubrl
cmp
gs
mov
or
mov
cmp
lds
adc
je
sahf
mov
xchg
pop
repz
fdivrp
outsb
fmuls
sub
fisttpl
push
mov
pop
xorl
cmp
xor
aad
adc
or
inc
in
sub
pop
adcl
push
loopne
mov
out
lea
mov
mov
gs
hlt
sub
jne
cmovne
dec
test
fsts
ljmp
mov
xor
notb
pop
pop
mov
rcll
cmp
call
enter
push
icebp
dec
xchg
ja
push
shlb
fildll
and
cmp
out
push
xchg
lods
pop
jns
inc
mov
test
inc
push
fildll
dec
and
inc
dec
stos
mov
or
xchg
jb
mov
fwait
lret
pop
jb
push
add
cs
sahf
sub
lds
subl
es
in
xchg
add
or
lods
cs
cwtl
sar
add
sub
xor
outsl
jg
adc
adc
xchg
pop
xchg
inc
jecxz
pop
imul
xchg
xor
or
inc
jb
pop
mov
testl
or
outsb
scas
dec
pop
adc
std
out
ja
clc
mov
cmpsl
imul
dec
mov
xlat
xchg
aas
add
jecxz
add
adc
in
js
xor
push
cmc
loopne
sub
or
or
mov
testb
repz
test
or
ficoms
xchg
divl
stc
adc
dec
test
aas
xor
in
lock
sub
sysret
insb
popa
aas
das
xor
mov
lods
adc
or
jecxz
das
out
mov
fwait
dec
mov
jnp
jmp
mov
sub
insl
push
push
jmp
into
mov
push
sub
neg
insl
mov
push
es
mov
out
xchg
pop
add
pop
scas
inc
xchg
repz
push
pop
xor
fistl
mov
push
xor
popa
nop
pop
insb
cmpsl
out
test
sbb
sbb
sbb
sbb
vpaddusw
loop
cltd
ja
testb
shl
dec
ret
mov
mov
mov
imul
add
xchg
mov
in
and
ret
out
xchg
or
mov
jnp
xchg
sahf
push
jne
cmpsb
outsb
xchg
mov
repnz
and
mov
in
xorb
bound
shll
inc
ss
or
iret
ret
push
adc
je
mov
jle
out
xchg
jbe
int3
pop
push
popf
push
push
incl
or
jmp
sti
repnz
out
mov
into
pop
xlat
les
ljmp
insb
fbstp
repz
mov
fsubrl
clc
mov
push
out
jle
hlt
xchg
or
ret
addl
push
xchg
test
iret
add
push
insl
jge
shll
pop
sbb
leave
aad
bound
sbb
in
je
and
jp
lods
call
enter
roll
loop
mov
inc
hlt
clc
and
lds
push
pushf
cmp
push
enter
add
dec
or
mov
pop
mov
pusha
addr16
sub
push
cmp
in
pusha
divb
xor
xor
sbb
add
insl
arpl
xor
push
call
stos
and
inc
xchg
aas
and
movb
sbb
in
movsl
or
rcr
lea
lcall
mov
cmp
sub
lock
inc
fisttpl
pop
seta
sbbl
push
test
mov
pop
push
repz
mov
and
aas
clc
push
addr16
icebp
scas
inc
mov
and
and
cmp
cmpsb
sub
ja
dec
jmp
jae
fstpl
testl
or
sbbb
fwait
cmpsb
out
cmp
sub
add
subl
jp
repz
cwtl
or
inc
pop
and
inc
aam
add
shll
ds
ja
lock
sbb
push
xlat
pop
pop
cmp
mov
mov
fs
xchg
inc
dec
nop
push
out
dec
loopne
pop
or
and
push
ljmp
iret
xor
lret
cmpsl
insl
test
push
xchg
mov
nop
adc
aaa
outsb
sbb
nop
cmp
cld
icebp
add
ret
mov
cmp
je
jmp
mov
xchg
cmp
fimuls
lcall
sahf
scas
shlb
inc
mov
and
dec
jmp
add
mov
dec
and
xlat
es
int
pop
sbb
imull
cmp
jmp
add
mov
sub
imulb
pop
jl
mov
test
jl
sub
lods
fsubrs
xchg
dec
es
mov
enter
fsub
fdivs
cmpsl
adc
pop
pop
push
add
loope
int
testl
xchg
and
xchg
sbb
sbb
xchg
test
cwtl
call
vpshufd
scas
into
xchg
mov
pusha
icebp
rcrb
jmp
push
jbe
inc
lock
and
cli
mov
add
mov
out
jle
int
fstpl
mov
cs
sti
testl
addb
and
and
add
lea
scas
test
repnz
dec
leave
push
repnz
loop
in
fcompl
sub
insl
jmp
mov
xor
add
arpl
cmp
and
fldenv
push
cld
jbe
and
add
fisttpl
add
adc
lock
movsl
jae
lret
test
mov
outsb
xchg
push
aam
bound
pop
dec
pop
in
lret
lock
dec
and
or
imull
mov
dec
std
add
sti
sub
into
add
push
movsb
push
loopne
xor
cwtl
xorl
and
out
xchg
movsl
movsb
out
dec
jno
sbb
psubsw
and
jge
or
aam
mov
or
sbb
xchg
jle
mov
mov
sahf
icebp
lret
push
adc
aaa
roll
nop
dec
inc
mov
rorb
ret
mov
outsl
in
xchg
push
dec
jns
add
test
adc
jb
sub
std
sti
fdivrp
out
adc
push
aam
inc
dec
jb
sar
je
je
mov
or
push
xchg
imul
or
mov
lds
notl
test
shrd
cmp
lret
lea
xchg
inc
xchg
cmp
pop
stos
sarb
sub
test
fdivrs
stos
dec
push
int
push
add
sub
in
mov
cmpl
pop
dec
cmpsb
out
aas
push
aaa
in
or
sub
dec
sub
hlt
jmp
sahf
and
adc
jnp
mov
dec
cltd
sahf
pop
das
out
lods
lcall
mov
imul
std
test
int
subl
cmp
out
dec
out
bound
repnz
and
popa
inc
add
add
je
sbb
fistpll
lret
lods
push
xchg
adc
pop
xchg
fstps
sbb
int
xor
shrb
out
sahf
lahf
xor
test
push
insb
push
mov
iret
mov
inc
inc
imul
outsl
test
decl
fs
test
sahf
xchg
push
mov
and
gs
xor
js
push
jge
mov
pop
mov
out
arpl
pop
clc
aas
aas
pop
lahf
leave
scas
cmp
or
lahf
daa
pop
movsl
inc
jg
js
inc
pop
out
push
pop
xor
daa
mov
sbbl
aaa
neg
mov
js
pop
push
mov
fisttps
add
lds
jl
mov
loop
dec
pop
xchg
push
xchg
push
fmuls
aad
add
adc
xchg
lahf
push
add
negb
fsubs
shrb
insb
pop
cmpsb
inc
loop
imul
clc
mov
mov
adc
leave
cmpsb
dec
xlat
sarb
scas
fs
movsb
push
mov
rcr
add
dec
lcall
xchg
mov
add
jmp
dec
cmp
add
inc
shll
dec
adc
dec
add
xor
dec
jo
jl
jo
out
aaa
cli
adc
xorl
cmpsb
pop
js
mov
jp
jmp
subb
add
cmp
fdivrl
loopne
fildl
adc
iret
lds
mov
lods
add
inc
ret
dec
sub
adc
ss
cld
mov
mov
loopne
in
scas
xchg
es
xor
inc
mov
scas
scas
int
int
jns
jecxz
xor
cmp
xor
add
scas
decl
cmp
loope
push
pop
inc
xchg
cmpsl
push
cmp
fucomip
add
xchg
fists
icebp
fwait
call
lahf
and
jb
inc
test
inc
gs
inc
out
push
push
loop
jo
adc
cmpsl
mov
xlat
mov
push
jg
inc
or
inc
xor
add
mov
xchg
xchg
cmp
sbb
sahf
cmp
pop
xchg
enter
clc
pop
shlb
rcrl
add
jbe
cld
je
jo
clc
addb
sbb
inc
push
lahf
data16
loope
out
dec
lcall
mov
push
fldl
mov
mov
mov
jmp
rsqrtps
and
adc
sbb
mov
sub
aaa
push
je
jmp
lods
xor
pop
scas
add
inc
mov
and
ljmp
int
mov
push
mov
sahf
orb
mov
out
addb
call
stc
jno
fisubs
push
xor
cmp
pusha
add
mov
sub
sti
notb
add
sbb
xchg
jmp
and
sahf
mov
rep
mov
test
adc
mov
push
unpcklps
dec
fisubrl
inc
sbb
cs
lret
dec
daa
jbe
fcmovnbe
cmc
icebp
pop
inc
mov
lods
aam
add
mov
push
dec
or
aad
adc
roll
adc
mov
and
jg
sbb
inc
cmp
adcb
xor
in
loopne
push
and
out
outsl
inc
data16
stos
adc
test
jg
add
mov
sub
cmpsl
pop
dec
int
outsl
out
add
cmc
pushf
sub
aas
inc
sbb
adcb
int3
sub
xchg
outsl
or
outsb
or
lea
mov
jmp
cmp
jl
lds
sahf
xor
fisttpl
mov
dec
xlat
xchg
test
out
lods
xchg
dec
mov
push
jnp
mov
cltd
subb
or
mov
push
pop
cmp
jge
adc
push
and
btr
jae
jnp
fldcw
xor
cli
push
sub
jo
ret
insb
adc
or
in
in
push
outsb
dec
ljmp
or
pop
pusha
outsb
mov
jp
dec
mov
cmpsl
test
mov
idivb
fidivrs
mov
xor
lock
mov
imul
pop
dec
and
jbe
out
push
or
lds
and
pushf
push
incb
xchg
iret
hlt
sub
add
xchg
or
pop
lahf
cmpb
mov
and
sarl
pop
inc
sahf
dec
stos
dec
dec
adc
loope
pop
jns
scas
push
add
dec
push
mov
outsl
mov
loope
mov
nop
push
sbb
inc
xchg
adc
xor
pop
das
fidivrl
mov
jbe
lret
push
or
sarb
popf
sti
fstpl
push
mov
pop
das
pop
seta
cwtl
sbb
in
stos
out
cmp
xchg
ds
out
pushf
cmpsl
pop
inc
out
lret
mov
divb
mov
repz
repz
add
cwtl
ljmp
orl
sbb
dec
movsb
push
cld
pop
popa
cmp
fmul
stos
cmc
ficoms
add
loopne
stos
inc
mov
dec
lahf
leave
outsl
test
mov
push
enter
inc
push
cltd
jp
test
and
or
and
fdivs
mov
cli
lea
push
mov
popa
add
pop
xor
testb
mov
add
or
repz
outsb
dec
rorl
dec
push
jecxz
inc
push
jge
push
jns
xchg
xchg
dec
dec
sbb
dec
rclb
std
mov
mov
outsb
sbb
xchg
pop
bnd
xchg
pop
lahf
sub
sub
shrb
leave
push
sahf
lods
jae
daa
jg
jno
inc
ss
sti
add
fistl
xchg
pop
pushf
loope
add
icebp
fcoml
push
push
cmpb
push
je
inc
xlat
mov
imul
fisttpll
jg
popl
mov
adc
orl
out
lahf
push
push
fwait
das
and
cmp
push
ljmp
dec
jb
stos
sti
mov
jo
pop
sbb
pop
or
idivl
inc
fsubs
lea
scas
cmp
xchg
pop
aam
aaa
inc
imul
or
push
xchg
or
ss
xchg
sarb
cmp
mov
cmpsl
lret
add
mov
mov
inc
stc
add
mov
xchg
cmp
jns
cli
inc
cmp
jnp
xor
inc
sbb
inc
aas
pop
push
out
mov
arpl
ret
imul
cld
push
or
xchg
xchg
aas
push
ss
jns
gs
inc
into
or
ficompl
add
in
enter
add
mov
xlat
lods
sbb
sbb
call
mul
std
mov
mov
in
jae
gs
fnstenv
dec
mov
fucomi
test
outsl
lahf
jmp
sbb
popa
sahf
and
out
idivl
dec
fwait
mov
xchg
jae
stc
push
xchg
pop
lds
lock
sub
loop
mov
xchg
aam
lods
repnz
stc
xchg
inc
sbb
in
mov
fsubrp
inc
mov
and
lds
mov
das
ror
ja
icebp
xchg
jbe
pop
mov
lods
sbb
jmp
push
inc
xlat
sub
insl
ret
sbb
and
jp
mov
pop
push
loope
in
push
enter
stos
lds
push
insl
ret
lods
lahf
lods
fldt
mov
fs
or
mov
sub
ret
xchg
sbb
dec
cmp
push
add
addl
aas
daa
pop
test
xchg
xchg
jg
inc
movsl
add
push
in
pop
or
add
mov
adc
xor
mov
jo
or
mov
inc
push
pusha
pushf
mov
mov
jnp
popa
cld
andl
ffree
dec
push
push
int3
lods
xchg
adc
loop
pushf
fs
mov
sbb
nop
js
xchg
out
or
js
aaa
das
sbb
cmpsb
mov
xchg
dec
cwtl
out
cltd
pop
xchg
or
xchg
push
adc
cmpsb
out
cld
outsb
jno
hlt
xor
add
fmull
and
lcall
push
mov
dec
adc
shl
sub
pusha
scas
cmp
sub
test
push
ror
mov
loop
daa
push
mov
gs
sar
dec
push
dec
xor
rolb
nop
mov
jle
pop
ja
sub
jbe
sahf
hlt
loope
orl
imul
sub
dec
inc
aas
into
cmp
xchg
test
cwtl
stos
lahf
and
cmp
mov
es
mov
hlt
hlt
inc
xchg
jmp
xchg
sarb
inc
or
sub
popf
push
mov
mov
xor
pop
out
mov
adc
gs
sbb
add
jecxz
data16
pop
out
cltd
sbb
or
and
or
subl
cmp
mov
fildl
ret
lds
push
rcl
repnz
jae
dec
in
mov
push
sbb
repnz
or
bound
or
adc
les
jmp
das
loope
jne
sbb
or
mov
js
xchg
ljmp
mov
mov
mov
and
add
mov
out
cwtl
andb
dec
sbb
movsl
adc
jno
xor
pop
mov
std
lds
pop
inc
lods
cs
aaa
fs
aaa
call
daa
std
sub
jae
push
hlt
insl
insb
faddl
mov
or
fcoms
jg
inc
add
push
in
add
iret
adc
xor
mov
xchg
sbb
and
mov
sub
xchg
dec
fcom
gs
movq
iret
mov
in
call
lock
xchg
sub
mov
mov
adc
mov
push
mov
mov
xor
mov
clc
dec
jle
js
seta
jecxz
cmp
ret
xor
add
sub
outsb
and
daa
mov
adc
mov
inc
sbb
int3
adcl
jbe
and
xchg
push
shll
gs
aam
cs
and
out
push
rorl
and
xor
das
push
jb
xor
outsl
rorb
push
into
dec
push
scas
and
fscale
xchg
loop
in
mov
pop
adc
sbb
sahf
pop
outsb
add
lret
sti
pop
lds
sub
insb
stos
add
test
out
fdivl
push
imul
push
mov
mov
dec
lock
jmp
mov
pushf
jl
push
hlt
fldenv
popf
or
xor
divb
idivl
mov
cmpb
mov
bound
repnz
push
addr16
add
ja
or
sub
and
aaa
push
mov
add
mov
cmp
or
sbb
mov
jbe
test
push
jnp
into
xor
mov
push
out
mov
fldl
mov
les
mov
shll
add
ds
mov
dec
enter
dec
xchg
inc
cmpsl
push
xchg
ss
jb
popl
fcoml
pushf
mov
dec
pop
pop
mov
outsl
sub
mov
add
ret
push
xorl
and
cmp
popf
loop
mov
rclb
add
jne
loop
jmp
in
inc
pop
xchg
adc
fld
dec
icebp
mov
outsb
cmp
xchg
add
cli
shlb
jmp
mov
xor
xor
es
pop
mov
xor
push
stos
sub
pop
sub
adc
cmp
mov
push
in
pop
cwtl
mov
test
add
rcll
adc
insl
mov
dec
mov
jnp
clc
pop
or
out
jp
adc
cmc
pushf
popf
jge
push
cltd
dec
inc
pop
push
jns
or
sbb
ret
xchg
xchg
sbb
dec
sbb
repz
pusha
outsb
dec
push
xchg
outsl
xor
lahf
ret
pop
cmp
cmp
data16
sub
jae
pop
or
jne
mov
popl
cltd
jae
lret
mov
inc
jp
mov
mov
in
or
daa
psubsw
xchg
sub
pop
out
jno
sbb
xchg
iret
std
pop
stc
stos
arpl
iret
lahf
mov
pop
outsl
ret
decl
cmp
sbb
dec
dec
idivb
jmp
add
xchg
aad
clc
inc
addb
push
std
fdiv
push
sbb
xchg
lahf
insl
pop
sbb
xchg
mov
lods
jecxz
xor
in
cmp
lahf
adc
push
push
cmpsb
mov
fwait
mov
mov
push
and
mov
adc
or
inc
sub
and
into
push
icebp
popf
repz
adc
dec
pop
fs
stc
pop
out
mov
cs
xchg
imul
lret
shl
pushf
daa
sub
xchg
add
inc
or
in
gs
ja
sbb
cmp
hlt
in
out
or
mov
testl
adc
pop
mov
jnp
ja,pn
dec
stc
cwtl
push
xchg
mov
ja
xchg
cmp
mov
inc
sti
pop
adc
in
std
push
mov
pop
xchg
and
jo,pn
push
mov
xchg
mov
push
fnsave
inc
dec
push
addl
xchg
fwait
lods
dec
sub
in
mov
inc
dec
repz
fprem1
icebp
jae
mov
lods
je
push
cmc
add
or
or
hlt
shl
jbe
adc
rcrb
daa
mov
shl
bound
pop
dec
mov
and
add
jne
ret
lea
jb
or
sbb
ds
iret
arpl
xor
adc
add
loop
adc
push
push
test
lods
mov
push
sub
lret
cmp
lret
sub
in
fdivl
and
sub
add
xchg
sub
js
into
call
ds
scas
push
jl
into
pop
dec
insl
call
pushf
sahf
jl
insb
imul
jg
jl
inc
mov
mov
or
xchg
shrl
lret
inc
ss
psraw
jl
cmp
movsb
test
push
jle
mov
sbb
loope
add
xor
adc
and
popf
in
add
cmp
inc
mov
mov
mov
notb
inc
xor
lahf
mov
sbb
cs
fildll
js
add
out
inc
sub
ret
aaa
lret
cmp
pusha
pop
mov
adc
mov
insl
es
jle
repz
pop
cmc
int
pop
pop
sbb
dec
push
lcall
jnp
xchg
lods
inc
fstl
cltd
mov
mov
inc
push
pop
mov
jbe
call
gs
lea
in
jmp
pop
and
outsb
cmp
shlb
push
out
and
xor
xor
cltd
xor
pop
pop
outsb
ja
ss
jp
repz
dec
pop
inc
cmc
adc
jp
cmp
push
loopne
inc
sbbb
scas
jmp
xor
cmpsl
mov
lds
lea
ret
inc
adc
je
pop
scas
xchg
adc
xchg
inc
xor
ret
mov
pusha
insb
mov
aam
mov
andb
adc
es
xchg
je
or
adc
inc
adcl
push
mov
sbb
mov
push
movsb
and
out
inc
adc
data16
loopne
pop
ficomps
mov
xchg
mov
out
icebp
push
faddl
mov
lret
push
icebp
daa
pop
dec
and
cmp
sub
sub
out
into
hlt
jmp
pop
jecxz
aam
jns
inc
inc
fbld
xor
pop
sbbl
xor
cmp
xchg
mov
in
push
push
rorb
fidivs
mov
les
ret
jns
das
test
mov
xchg
dec
or
and
pop
ficompl
push
xchg
lods
ret
add
mov
sarb
lret
xor
je
sbb
mov
and
lea
sub
lret
add
jmp
xor
push
scas
xchg
imul
sub
push
mov
test
adc
fs
fwait
sahf
dec
xchg
ss
lahf
fs
push
jb
js
lret
adc
popa
xchg
loop
mov
cmp
inc
xchg
mov
lea
adcb
js
pop
mov
pusha
imul
cmp
or
mov
dec
xchg
lea
xchg
pushf
push
cs
fnstsw
fwait
pop
sbb
sbb
sub
jmp
mov
pop
fs
aad
ljmp
leavew
xor
stc
jo
xchg
jne
xchg
jno
adc
fstl
imul
ss
mov
sub
test
js
clc
push
xchg
cs
jp
cmp
adc
fs
or
push
inc
push
jno
loopne
cltd
jnp
mov
adc
xor
imul
sahf
das
xchg
or
aam
fmull
je
jnp
jp
aas
mov
xchg
mov
sub
jle
inc
sub
mov
andb
std
addr16
xchg
stc
jg
dec
mov
inc
xchg
test
mov
std
imul
jge
mov
jg
mov
out
in
and
das
sub
fucompp
dec
scas
mov
mov
xlat
sub
mov
mov
mov
rclb
lea
stos
adc
adc
xchg
jmp
adc
push
mov
jg
leave
iret
cmc
ss
js
js
or
notb
jg
fnstcw
cmp
sub
pop
mov
aaa
mov
push
xchg
adc
hlt
pop
andb
mov
sbb
insl
sub
xor
stos
ret
into
addr16
sub
push
je
mov
dec
sub
sbb
cmp
fwait
mov
jg
ret
aam
sbb
sub
lret
jno
mov
push
jle
cmp
push
rol
scas
sub
mov
xchg
xchg
and
arpl
dec
inc
in
les
mov
mov
mov
aam
push
mov
xchg
add
aaa
add
xor
push
cmpb
dec
mov
fsubrs
jbe
jge
faddl
test
fistps
xchg
and
add
bound
cli
orl
nop
mov
pop
mov
pop
icebp
mov
or
inc
ss
hlt
movsl
int
loope
call
mov
fst
jg
loope
inc
or
bnd
add
inc
cmp
xchg
fidivrs
push
mov
dec
sbb
and
arpl
ret
or
test
mov
sub
das
mov
out
mov
mov
js
add
insb
je
add
out
addr16
jbe
loope
mov
mov
mov
sub
cmpb
xchg
or
add
push
pop
cli
sbb
test
or
sbb
call
dec
pop
call
sub
adc
mov
add
popl
xchg
data16
icebp
dec
xchg
jo
inc
add
xor
xchg
rorb
adc
dec
ja
scas
cmpsl
mov
add
jge
pop
test
dec
mov
or
or
lock
popa
push
jge
cmp
push
xchg
test
pop
and
xacquire
cld
push
dec
rcll
nop
std
mov
sbbb
pop
stos
jecxz
dec
jg
rorb
push
push
push
idiv
fsubs
or
pop
mov
adc
mov
mov
fimull
mov
rcll
xchg
adc
popf
xchg
sbb
pushf
bnd
loopew
loopne
aaa
test
add
in
jno
addr16
scas
test
sar
not
xor
dec
lret
mov
mov
jne
ja
jae
add
mov
mov
and
mov
and
push
adc
jecxz
ljmp
cmp
sub
sub
repnz
and
jnp
push
pop
mov
movsb
fstpl
popf
mov
jecxz
mov
dec
rolb
dec
scas
aad
dec
jno
add
cmp
cs
fnstenv
pop
dec
dec
mov
repz
and
jb
inc
push
shr
adc
pop
mov
mov
add
sbb
mov
xor
xchg
stc
arpl
jl
orl
leave
dec
popf
ja
pusha
mov
lods
imul
ljmp
mov
fs
xchg
rolb
xchg
pop
test
in
sbb
cmp
enter
gs
int3
mov
jp
ja
pop
mov
icebp
fsubs
xchg
sbb
popa
outsb
ds
test
and
out
shrb
mov
ja
pop
test
jg
lahf
clc
xchg
pop
xchg
out
adc
pop
xchg
rclb
movsl
pop
xor
mov
bound
sbb
push
xchg
aas
push
cmp
mov
and
lcall
orb
stos
std
push
jnp
lods
mov
push
iret
lea
xchg
xchg
imul
out
pop
scas
sub
fs
cwtl
repnz
ljmp
inc
push
mov
js
in
mov
add
icebp
nop
movsl
mov
ljmp
cmpsb
mov
jnp
loop
mov
jg
shl
mov
dec
jno
popa
push
pop
sahf
jno
mov
and
imul
inc
add
test
cmpsb
imul
xor
loopne
sub
mov
xorb
pop
add
jb
jae
bound
pop
cmpb
cmp
imul
dec
xchg
dec
and
and
xor
mov
and
mov
cmp
loop
jnp
jp
pop
outsl
test
cli
aaa
arpl
push
mov
jge
xor
push
in
divb
pop
push
fidivrs
jle
mov
mov
loope
jecxz
dec
inc
push
jae
xchg
jns
lods
out
sub
cltd
xor
scas
aad
insb
add
add
xchg
push
mov
push
mov
mov
inc
push
mov
push
add
push
imul
sub
lods
gs
lret
insb
or
pop
cmpsb
mov
inc
and
jae
out
push
mov
fldl
leave
push
shll
pop
jmp
jl
ret
dec
cvtdq2ps
aad
push
mull
add
lret
cwtl
sbb
loopne
pop
cmc
jge
outsb
mov
shr
icebp
cmc
mov
imul
ret
push
and
xor
jo
xchg
cmp
fisubrs
sub
pushf
rdpmc
je
mov
sbb
xor
push
adc
pop
stos
popf
movsb
jo
lahf
mov
or
dec
xchg
and
and
jne
jo
mov
ffreep
push
push
lds
fmuls
lcall
inc
frstor
cwtl
jmp
jge
incl
in
pop
fadds
lods
pop
pop
mov
inc
mov
sub
mov
shlb
cmp
adc
cmp
imulb
push
inc
fwait
lods
jno
mov
test
and
adc
inc
dec
xchg
mov
add
ret
dec
shl
cmc
inc
test
cli
aad
test
mov
cltd
mov
mov
mov
mov
adc
xchg
push
cmpl
pushf
sbb
mov
push
mov
add
lods
fs
les
aas
loop
dec
stc
fimuls
add
lcall
adc
push
xchg
shrb
and
fisubrs
lret
std
add
pop
lods
es
or
popf
sbb
das
shll
shlb
xchg
push
pop
sbb
in
aam
aaa
sub
sarb
mov
pop
mov
or
dec
jb
jbe
aam
dec
xor
mov
cmp
cld
lahf
std
js
out
sbb
dec
mov
test
inc
addr16
push
xor
dec
jmp
xchg
dec
push
add
mov
pop
mov
pop
xor
cmpsb
pop
test
test
mov
fisttps
dec
add
xchg
push
push
or
push
add
jb
pop
iret
push
jne
ret
xchg
mov
push
or
std
stos
lret
adc
push
outsl
repnz
clc
xor
ret
stc
mov
sub
add
add
push
push
fimull
inc
cmp
scas
cmp
push
adc
cmp
dec
cmpsb
add
mov
pop
loope
clc
nop
cmpsw
leave
js
daa
sub
sub
pusha
pop
mov
pusha
add
and
cmp
mov
push
ret
or
rcll
pop
dec
inc
sbb
adc
rolb
add
cltd
les
fstpl
pop
mov
bound
or
into
cmp
inc
cmp
mov
adc
cli
in
andb
lock
xchg
pop
addr16
mov
ss
push
sub
cs
cwtl
in
insb
scas
ds
and
and
add
sub
sahf
mov
fwait
cmp
insb
outsb
lcall
test
lcall
mov
mov
je
push
and
addr16
or
adc
dec
and
mov
mov
insb
mov
repz
sbb
daa
xor
pop
add
and
insl
pop
jno
jb
jnp
or
repz
mov
mov
in
mov
or
xchg
aaa
mov
iret
testl
pop
cmp
das
dec
push
or
mov
lret
fildl
outsl
inc
xchg
leave
jae
or
xchg
or
loopne
pop
shrl
orl
inc
mov
aad
xlat
loopne
jnp
mov
and
dec
cli
xor
inc
sbb
and
bound
adc
dec
scas
inc
push
cmp
pop
test
jmp
repz
cltd
fwait
cwtl
sti
inc
add
mov
adc
jmp
xor
dec
int3
mov
test
push
jge
mov
push
cmp
cs
scas
insl
dec
mov
pushf
data16
test
mov
daa
inc
xchg
in
inc
jg,pt
or
dec
imul
dec
pop
aas
sbb
aaa
dec
mov
xchg
pusha
fisubrs
and
dec
sbb
rorl
mov
imul
push
test
push
cmp
xor
das
cld
xor
jmp
add
dec
pop
adc
enter
je
mov
test
ljmp
ret
pop
xchg
jecxz
sub
pop
jae
add
pusha
outsb
sbb
loopne
pusha
xchg
ljmp
mov
outsl
ret
adc
mov
mov
xchg
inc
mov
ja
xchg
repnz
mov
push
or
std
adcl
sarb
mov
cs
and
test
or
push
adc
mov
inc
jno
jl
sub
fmulp
mov
jecxz
mov
nop
fsub
in
push
or
dec
leave
addr16
or
testb
mov
mov
jo
clc
mov
std
or
pop
push
mov
addr16
sub
inc
xchg
push
aaa
inc
cmp
outsb
orb
aaa
iret
or
cli
fs
push
cmp
push
add
aam
shlb
xchg
push
rcll
mov
cmpsl
mov
ret
pop
add
arpl
std
mov
fs
dec
pushf
cmpsl
jo
dec
stos
lcall
xchg
out
sub
inc
mov
in
mov
rcrl
xchg
mov
mov
inc
xchg
aad
mov
fdivr
cmpsl
xchg
mov
inc
push
inc
sub
mov
js
sbb
dec
pop
dec
js
repz
movsb
stc
pop
cli
mov
or
mov
lcall
in
dec
xchg
jl
and
or
mov
mov
imul
das
rclb
mov
ret
lods
adc
lods
out
cmp
lahf
lods
xor
mov
cmp
or
adc
test
mov
or
add
or
fsubl
push
lock
das
and
repnz
inc
mov
push
fs
sub
sub
push
outsb
insb
in
iret
maskmovq
jnp
pop
xor
int3
cmp
xchg
out
aad
push
inc
mov
cli
jo
gs
jno
xchg
ret
rclb
mov
movsb
mov
push
int3
xor
jo
push
inc
roll
jbe
jmp
ret
sar
js
jnp
in
cmp
shr
push
pusha
ficoms
ffree
push
pop
int
inc
cs
push
nop
loope
dec
ret
adc
or
insb
outsb
inc
in
push
nop
scas
test
xchg
or
incb
and
xchg
clc
out
cmc
and
decb
xchg
add
loop
insb
mov
andb
xor
push
sarb
jbe
flds
or
push
cmpsb
arpl
popa
cltd
mov
mov
sbb
lods
pushf
xchg
sbb
mov
xorb
adc
aaa
mov
jb
addr16
cmp
daa
sbb
and
xchg
or
fisubl
sub
or
xchg
xor
add
lret
add
xchg
lahf
lret
int
inc
rcrb
fildl
enter
mov
and
out
add
cli
sub
pop
xor
dec
adc
insl
mov
cmp
mov
push
jbe
jp
rcrl
pop
out
mov
idiv
out
inc
push
repnz
inc
sub
add
popa
mov
sbb
repnz
popa
adc
ss
outsl
imul
movsl
outsl
jno
pop
out
movsb
bound
cmp
jns
les
xchg
in
adc
add
mov
sbb
out
orb
or
jnp
popa
xchg
jae
loopne
outsl
sarb
or
sbb
mov
sbb
repz
out
int
mov
add
insb
sahf
xor
push
movsl
mov
cs
xor
push
out
dec
xchg
fidivrs
inc
push
insl
inc
outsb
dec
aas
pushf
pusha
push
aas
mov
dec
and
insb
mov
add
mov
lods
adc
mov
lea
insb
lea
inc
lcall
out
sahf
pop
sahf
stc
mov
xor
and
inc
jb
mov
add
mov
js
and
ljmp
frstor
lods
cmp
mulb
mov
movsl
movsb
or
lcall
cli
jmp
xchg
ja
adcb
xchg
xchg
adcl
gs
mov
inc
in
push
repnz
jmp
mov
jmp
sbb
pushf
fidivrl
in
pop
or
in
jecxz
mov
xchg
jg
push
movsb
movsb
std
lods
pop
fbld
push
push
jnp
push
dec
fs
leave
ja
dec
mov
mov
jne
mov
mov
out
mov
sti
xor
mov
xor
fs
inc
inc
push
insb
cmpsl
stc
test
fstl
les
idivl
mov
dec
jmp
pop
push
cmp
repz
or
mov
push
nop
int
int
leave
repz
pusha
lods
cld
and
cmp
mov
mov
add
inc
cmpsb
add
mov
mov
pop
mov
xor
dec
cmpsb
xor
push
jg
cld
movsb
push
cmp
push
jbe
dec
xchg
ss
ss
mov
mov
adc
sti
loopne
pusha
mov
sarl
push
stc
pop
cltd
stos
add
cmp
aas
cmp
test
leave
mov
ss
push
sub
mov
pop
mov
fists
and
test
fstpl
vmaskmovdqu
shl
arpl
into
sub
adc
inc
cmp
cli
enter
sub
jle
inc
sti
popf
jb
mov
cs
fwait
ljmp
lcall
xchg
sti
scas
xchg
mov
jbe
mov
push
pop
cld
dec
xor
pushf
stos
mov
pop
push
lret
fstps
stc
pop
shrl
xor
aas
fldlg2
xor
cmp
mov
daa
sbb
mov
sahf
lock
add
repz
aam
fmulp
pop
out
push
cld
ficomps
sbb
inc
jge
jecxz
lcall
mov
mov
or
dec
jge
xor
lea
inc
adc
xor
les
cld
push
lods
add
xchg
ljmp
lret
pusha
rclb
std
push
test
cwtl
fs
jno
xorb
cmp
stos
pop
jo
fs
cmp
jnp
stc
add
std
leave
rcll
cmp
mov
cwtl
xor
dec
and
andl
bnd
mov
in
stos
sbb
jns
inc
add
mov
inc
das
cmpsb
cwtl
xor
cmp
std
fdivl
sahf
andnps
ret
push
push
idivb
pop
add
inc
aad
xchg
pusha
sti
mov
cmp
push
mov
aaa
jp
hlt
mov
psllq
mov
xchg
xor
into
insb
leave
adc
scas
jo
pop
insb
xchg
mov
jle
pop
stos
cltd
mov
jg
faddp
pop
aas
mov
sub
jmp
inc
idivb
popa
sbb
je
xchg
xor
cmp
mov
sub
mov
inc
adcl
std
dec
test
bound
rol
aad
out
lcall
loop
jb
push
sbb
popa
daa
dec
fstpl
or
adc
push
out
push
orl
fcoml
jo
sbb
ret
inc
jnp
mov
and
xchg
xor
inc
lea
xor
mov
pop
pop
add
push
insb
pop
add
mov
negb
jne
sub
push
or
mov
cltd
jmp
xchg
sbb
iret
notl
jo
popa
or
insl
jle
mov
lret
fdivrl
testb
mov
dec
xchg
std
stos
or
ret
rep
adc
mov
scas
jbe
adc
fsubrl
in
mov
nop
fbstp
mov
dec
push
jae
add
mov
in
stos
fcmovb
add
cmpsb
jge
cld
aam
push
add
push
and
xchg
jnp,pn
sbb
iret
jne
hlt
outsl
call
mov
roll
sub
cwtl
mov
dec
test
movsb
jo
xchg
dec
call
pop
into
or
movsl
rcrb
xchg
sbb
push
fdivrl
cwtl
add
shl
lds
push
and
adc
jl
mov
mov
ds
orb
repnz
mov
fisubrl
jl
call
jnp
leave
jle
push
mov
rclb
fildll
mov
bound
fs
aad
mov
push
xlat
out
jge
cmpsl
jecxz
idiv
cmp
xchg
out
jo
scas
cmp
or
and
jmp
icebp
jg
and
inc
inc
xchg
mov
movsb
sbb
mov
add
popa
lods
pop
inc
mov
pop
xchg
decb
ss
scas
sbb
push
aaa
neg
inc
mov
rol
fs
out
inc
in
cli
push
lahf
xchg
andl
or
mov
xor
arpl
sbb
and
adc
pushf
adc
pop
movsb
loope
sbb
pop
or
push
das
xor
sbb
sub
adc
adc
fwait
push
add
adc
mov
xlat
push
lcall
cmpsl
add
sbb
push
push
andb
into
nop
mov
sti
fwait
setl
mov
mov
mov
test
stc
call
in
pop
xchg
sub
sbb
sbb
jb
leave
push
std
and
mull
insb
out
les
popa
push
vcvtps2dq
hlt
push
cmp
loopne
fs
xchg
inc
test
xchg
insl
push
pusha
and
jo
sub
out
push
sub
dec
js
dec
mov
stos
mov
jae
lret
xchg
lods
pop
inc
notb
clc
sahf
adc
aaa
mov
sub
jg
data16
roll
enter
std
lahf
xchg
push
add
aad
fidivrs
incb
insl
inc
stos
xchg
test
shrl
jno
push
mov
aas
daa
cwtl
push
xchg
pop
push
add
adc
mov
out
xchg
adc
cmp
ret
cwtl
mov
jae
enter
rcll
pusha
xor
pop
adc
aam
inc
jl
mov
xor
inc
add
jmpw
cmp
or
insb
and
cld
fnsave
jno
loop
sub
jmp
pushf
das
xchg
xor
push
xor
mov
pusha
aas
mov
cmpsl
pop
in
xchg
push
add
cmpb
int
sarb
sub
clc
adc
push
in
or
mov
adc
adc
cs
cmpsb
mov
insb
rcll
sarl
and
cmpsl
ja
jae
arpl
clc
mov
lock
push
add
cli
jnp
mov
or
test
push
lea
je
and
lea
and
js
xchg
stc
adc
dec
xchg
pop
mov
push
cmp
lods
sub
pop
xchg
outsb
outsl
shll
cmc
nop
jbe
dec
aad
add
jbe
bound
push
insb
movsb
and
mov
cmpb
push
shrl
or
leave
test
mov
pop
pop
lea
xchg
fstl
sbb
push
in
and
jnp
pop
lods
rorb
ja
xlat
xor
jmp
dec
ds
test
jno
lock
push
cmp
pop
add
fildll
mov
bound
mov
adc
inc
int3
cltd
push
jo
add
stos
ja
push
or
adc
push
orb
pop
das
movntq
pop
lcall
fbstp
imul
sbb
mov
std
cmp
jecxz
lods
popa
cmp
pop
loope
movsl
lock
loop
pop
add
mov
xchg
xor
mov
inc
push
sahf
dec
mov
and
sub
push
mov
in
push
sub
lea
inc
icebp
icebp
and
imul
inc
iret
add
jmp
pop
push
test
lcall
jp
xchg
subl
imul
gs
cmp
ret
sub
xor
testl
pop
les
mov
loop
enter
pop
dec
pop
gs
es
dec
push
fsubl
je
mov
fs
loop
cs
int
jg
jmp
call
jp
mov
or
jecxz
cmpsb
arpl
jmp
rolb
mov
shlb
mov
inc
pop
mov
test
dec
lock
push
cwtl
push
std
mov
fists
stos
xchg
cmp
mov
out
jno
imul
mov
cwtl
or
jmp
ficomps
jp
imul
xchg
pop
or
fidivl
add
stos
out
inc
cmp
hlt
xchg
arpl
xor
dec
and
inc
cmpsb
dec
mov
and
aas
mov
add
sub
fadds
xor
cmc
int
test
sub
sbb
lea
fnstsw
sbb
mov
push
mov
and
dec
pusha
stc
or
adc
lcall
aad
sub
push
arpl
iret
adc
adc
push
and
mov
xchg
test
fs
cmp
and
mov
lret
loopne
adc
test
or
dec
fildl
arpl
adc
and
inc
inc
or
pop
mov
in
outsl
fistpll
sub
xor
jge
adc
aaa
into
mov
cmp
int
dec
popf
push
mov
fstp
out
mov
out
sub
jl
popw
jae
or
or
mov
mov
mov
testb
fisttpll
jae
cmpsb
sarb
push
push
fwait
pushf
les
mov
rcrb
lret
xorl
add
pushf
sbb
dec
stc
stos
mov
xor
mov
std
or
sti
ret
fists
xchg
push
repnz
ljmp
pop
roll
push
cmp
lret
mov
mov
cli
push
aas
in
mov
inc
adc
and
mov
sub
adc
mov
adc
in
push
subb
inc
jb
push
cmc
mov
mov
imul
adc
sahf
xor
jg
hlt
adc
jnp
jo
sbbb
test
mov
popf
test
mov
xor
mov
loop
add
mov
pop
jl,pn
adc
iret
lock
call
shll
bnd
loop
jb
pop
in
dec
sbb
loope
aad
mov
cli
sahf
aas
cmpsl
data16
xor
push
packuswb
lea
inc
add
sub
ss
add
mov
inc
enter
enter
xchg
add
mov
aaa
add
adc
mov
shlb
push
pop
out
push
sbb
test
push
je
lcall
mov
mov
push
xor
movsb
int
inc
mov
sti
pop
cmp
adc
cld
rol
rolb
sar
or
fldl
mov
aam
mov
xchg
mov
mov
cmp
fiadds
xchg
add
inc
test
lods
div
mov
jb
jle
mov
call
fmuls
jnp
arpl
sub
and
push
push
scas
mov
adc
sbbb
fcomp
pop
mov
sub
cmp
scas
ret
xchg
inc
pop
mov
push
mov
ret
int3
rcr
add
sbb
out
jmp
pop
mov
pop
jne
loop
fidivrl
or
lret
cmovs
out
fwait
jbe
mov
insb
nop
inc
jecxz
sbb
std
mov
in
out
cmc
sbb
and
mov
sbb
cs
iret
fldenv
loopne
and
cs
aas
jl
sub
mov
or
mov
jae
movsl
arpl
stos
mov
mov
insb
arpl
jae
lods
pusha
addr16
es
lahf
xchg
or
sub
jecxz
and
outsb
fs
adc
inc
ss
mov
sahf
sbb
add
ret
rcr
loop
in
adc
sbb
je
pop
xchg
test
cwtl
sbbb
in
adcl
sbbl
les
pop
mov
aaa
sbb
sbb
lahf
ds
js
hlt
in
mov
or
out
jecxz
xchg
push
cmpsl
js
popa
outsl
adc
xor
jae
mov
gs
sub
mov
andb
bound
mov
pop
int3
repnz
lret
add
aad
mov
xchg
pop
cltd
ljmp
jmp
es
les
sbb
std
adc
and
and
or
xor
out
mov
mov
cmpsl
sub
sbbl
dec
mov
inc
ja
lds
popf
and
aam
jmp
cmp
and
dec
jg
jmp
sti
or
xor
jg
mov
shrl
nop
inc
pushf
lret
loop
cmp
push
mov
sub
les
jbe
and
dec
into
lods
das
sti
sub
jns
sbbl
in
pop
js
das
xor
sbb
enter
out
cs
jmp
mov
stos
pushf
dec
pop
jecxz
push
sbb
mov
pop
stos
cmc
sub
and
enter
jae
leave
aam
and
cltd
sub
jecxz
pop
cmp
cmpsl
shl
jmp
xor
inc
adc
pop
out
mov
mov
sbb
jl
jb
jecxz
push
std
dec
cmp
shrd
std
subl
sub
add
and
mov
pop
dec
mov
jno
dec
xor
enter
dec
inc
fildl
shrb
sbb
cmpsl
xor
xchg
mov
sub
xor
jg
adc
repnz
insb
jmp
andl
hlt
add
test
out
mov
sbb
mov
jns
iret
repz
xchg
dec
dec
or
ret
je
inc
out
jns
adc
and
and
adc
aaa
jg
xchg
mov
in
in
push
insl
and
push
mov
rclb
rorb
lret
lret
repnz
dec
movsl
jmp
and
in
clc
xor
dec
mov
daa
pop
sbb
in
or
sbb
jbe
adc
loope
enter
mov
out
adc
nop
mov
mov
fists
cltd
sbb
loop
xchg
or
aad
push
int
lods
iret
aam
adc
insb
adc
mov
adc
xchg
add
and
ljmp
jnp
mov
mov
mov
mov
popf
mov
scas
mov
negl
aam
fdivs
and
xchg
jmp
enter
push
data16
call
mov
repz
add
pop
xchg
inc
pop
faddl
sarb
call
sbb
cmpsb
sbb
push
xchg
andl
insl
cmpsl
cmpb
test
imul
test
in
push
lahf
das
push
call
mov
xchg
aas
lcall
pop
add
outsb
int3
out
inc
inc
adc
loopne
pop
push
sti
xor
or
jb
xchg
lret
ja
mov
icebp
sbbl
xor
out
leave
add
jo
xor
sbb
neg
or
repz
or
int3
jne
aas
in
sub
mov
xor
push
push
mov
fmuls
call
leave
mov
out
adc
pushf
push
fists
cmp
dec
pop
int3
inc
loop
std
test
clc
enter
cmp
in
xor
insb
fldt
into
int
adc
jle
nop
xchg
bound
add
loopne
cmp
push
mull
dec
push
cwtl
ret
cmpsb
sub
mov
pusha
mov
andb
lock
pop
clc
push
popa
gs
scas
jno
in
imul
lods
lret
aad
xor
cmp
xchg
jg
sbb
sbb
dec
jnp
adc
call
mov
out
pop
sbb
dec
xor
jno
pop
add
call
lret
pop
push
ds
rol
cmp
pushf
mov
fidivrs
mov
les
dec
in
ret
loope
cmpsl
lods
mov
xchg
clc
mov
enter
jmp
lods
lcall
js
ss
outsl
pop
xchg
ret
mov
lods
pop
daa
or
jecxz
scas
push
sti
into
arpl
mov
test
mov
jmp
sub
inc
pop
cli
fdiv
pop
mov
and
clc
jo
or
mov
sub
lods
jbe
xchg
mov
cmc
ljmp
sbb
push
aad
enter
pop
jmp
rcrl
xchg
leave
jge
stos
es
cmpsl
nop
mov
lods
js
dec
mov
lds
gs
lret
nop
imul
cs
sti
adc
xor
and
push
push
fsts
or
inc
lcall
sbb
das
mov
int3
arpl
ljmp
pop
inc
fnstsw
mov
test
push
cli
jmp
add
popf
pop
fsubr
jbe
lock
out
int
arpl
xlat
les
sub
push
dec
cltd
out
out
sub
sub
fldl
nop
int
push
mov
cmpsl
data16
subl
addr16
mov
adc
mov
lods
dec
push
and
outsl
pop
and
or
jb
jae
outsb
rorl
mov
push
pop
mov
sar
sub
ds
pop
mov
inc
int3
jo
mov
loopne
xchg
pushf
mov
loop
ja
and
cmp
aas
xlat
stos
popa
mov
add
cmp
push
popf
cmp
cmp
fidivl
repz
cs
imul
inc
cmc
sarl
inc
outsl
negl
push
push
daa
push
dec
lret
cmc
mov
int3
out
add
outsl
inc
xor
mov
lea
fsts
iret
pop
mov
scas
ja
jne
in
mov
pop
xor
jne
fs
sbb
rcrb
rcrb
test
iret
sbb
jle
sahf
pop
lret
mov
out
cmp
sub
push
fcmove
sbb
mov
test
rorl
aad
in
in
int3
cmpsb
pop
fsubl
xchg
outsl
lcall
adc
cmp
ljmp
cmp
rcl
cwtl
sbb
insb
in
ds
sbb
pop
dec
ja
jecxz
shlb
popf
repnz
lds
je
mov
adc
cmp
lods
idiv
in
mov
inc
push
mov
imul
fistpll
mov
xor
daa
jg
mov
push
fildl
mov
add
and
icebp
sbb
add
lock
cmp
push
lods
stos
adc
popf
adc
test
cmpsb
mov
adcb
jb
cmp
push
out
sub
xchg
lahf
fcomps
lods
popa
sti
into
std
pop
pop
adc
push
enter
mov
mov
dec
mov
or
adc
mov
xchg
mov
cs
repnz
pushf
pop
lret
in
dec
mov
jge
pop
fisubl
mov
xchg
out
loop
xor
sbbl
mov
cltd
sub
es
pop
xchg
pop
in
hlt
test
or
cmpsb
insl
lock
pop
ret
sbb
mov
mov
or
pushf
clc
xchg
inc
in
pusha
dec
xchg
pop
cmp
xorl
sub
sub
int
sbb
mov
push
jns
lea
mov
shl
pop
fnstenv
xor
mov
mov
pop
lret
cmp
jmp
nop
jp
movsb
xor
out
push
cwtl
sbb
mov
loope
add
inc
dec
xchg
movsl
inc
iret
xchg
pop
bnd
fcoms
subb
lods
shll
mov
jge
pop
fistpll
inc
cmp
fs
inc
or
fsubs
jae
jmp
fnstenv
mov
adc
and
stc
xchg
xchg
dec
ret
xchg
lret
xchg
mull
cld
into
leave
sahf
popa
iret
lret
outsb
xchg
mov
int
fwait
shrb
lret
xchg
mov
repz
sbb
stos
push
mov
idivl
mov
inc
jnp
inc
xor
xor
pop
icebp
dec
jl
push
jg
loop
xchg
sbb
cmpl
test
mov
fsubrs
jno
xor
cmp
pop
pop
sub
xchg
out
hlt
cmp
or
insl
call
inc
sub
fisubrl
sub
sub
sbb
insb
and
pop
leave
in
outsb
pop
cmpsl
sbbl
xchg
xchg
adc
or
push
inc
shlb
testb
sub
add
jne
pop
das
pop
or
aam
ficomps
and
test
stc
pop
push
add
mov
pop
pop
and
ror
cmp
mov
fldcw
push
ret
sbb
or
mov
scas
fwait
ja
fsubr
into
stos
jae
aad
dec
aad
int
jnp
test
sbb
mov
adc
push
aaa
out
flds
flds
add
dec
repz
fnstsw
lret
jb
pop
lahf
pop
in
mov
dec
decb
cmp
cmpsb
mov
xchg
adc
stc
repz
jl
repz
adc
fmuls
insb
sbb
jns
hlt
int
outsb
sti
faddl
dec
jmp
enter
mov
xchg
pusha
mov
add
out
mov
push
fldenv
fisttpll
jnp
mov
jbe
mov
mov
jae
adc
sbb
push
fcomps
and
icebp
jecxz
fs
jns
mov
mov
fisubrs
pop
mov
xor
stos
xor
movsl
ret
out
ja
cmc
push
fildll
mov
into
mov
adc
in
adc
in
inc
mov
jmp
popf
pop
and
cmpsb
adc
pop
cmp
mov
add
mov
add
xchg
aas
jbe
pop
push
pop
dec
sbb
movb
fistpll
push
mov
xchg
sub
mul
out
mov
mov
into
aad
adc
ljmp
ret
shrb
loopne
lahf
int
dec
je
push
cmp
icebp
dec
push
add
and
andb
mov
int3
push
adc
add
daa
xchg
movsb
sub
jo
iret
test
sarb
pop
cmp
les
sub
addr16
in
std
stos
addl
outsl
hlt
sub
rcl
mov
in
mov
sbb
push
aas
pop
test
lock
cs
pop
or
xor
rorl
adc
jge
sbb
add
shr
push
jne
cs
inc
pop
movsl
jne
cmpsb
xor
gs
les
pop
cmp
jge
add
ds
aad
mov
inc
sub
cmpsl
punpckhwd
iret
push
lcall
roll
std
mov
push
daa
xchg
adc
out
jo
jno
jl
mov
push
jge
roll
mov
cltd
jne
jae
mov
sbb
adc
popa
inc
mov
ja
fldt
cmp
loop
cwtl
loope
into
pop
and
dec
jmp
inc
lods
loop
js
push
test
aaa
fdivl
dec
arpl
enter
xor
add
out
outsb
push
sbb
push
push
lret
jge
subb
cmc
xlat
in
lret
lahf
lds
dec
repnz
adc
push
mov
out
pop
or
cmc
xor
inc
mov
jg
adc
ss
outsb
sbb
cmp
jecxz
fwait
hlt
outsb
in
pop
cld
pop
sub
fsubl
inc
dec
dec
push
xor
xor
repz
loope
out
xchg
repnz
das
sbb
aad
push
cmpsl
cmp
cltd
ljmp
movsb
mov
jne
cmp
pushf
enter
jno
es
sbb
in
sub
cmp
cmpsl
nop
pop
sbb
fwait
sbb
push
popa
test
or
es
adc
add
mov
pop
push
sub
pop
inc
or
add
icebp
mov
mov
pop
adc
sbb
mov
pop
shlb
inc
xchg
xchg
addl
mov
les
clc
cwtl
mov
xchg
out
rolb
jb
xor
ret
shll
cmp
mov
inc
ja
add
sub
popa
and
lea
pop
xchg
jp
xor
pop
or
rol
mov
nop
dec
pop
in
jg
fisttps
xchg
push
mov
jle
inc
xchg
inc
mov
popf
in
rcl
xlat
imul
inc
std
aaa
test
outsl
mov
mov
mov
iret
in
nop
inc
sahf
dec
aas
and
adc
dec
fistps
cwtl
fcompl
add
pop
mov
sub
jae
inc
int3
mov
xchg
push
jb
stos
nop
and
mov
xor
jb
jae
dec
gs
repnz
push
mov
xchg
loop
sti
xor
dec
scas
cwtl
jo
sub
lods
in
and
xchg
stos
dec
sbb
inc
popf
mov
idivb
cmp
popa
adc
push
in
adc
call
js
sub
ret
rcrb
repz
pop
cmp
and
ret
lret
hlt
cmp
sub
push
adc
iret
movsb
push
mov
addr16
lock
dec
scas
mov
test
add
out
push
stos
mov
fldenv
xor
or
f2xm1
mov
cmp
clc
dec
std
and
cmp
sbb
and
jnp
cmpsb
xor
cs
jg
into
cmp
pop
outsl
int3
and
rcrl
xor
push
inc
dec
inc
addl
jl
pushf
in
in
fimuls
and
dec
adc
add
rcll
fildl
cmp
outsb
cmp
mov
push
ret
fnstcw
ss
add
lret
ficomps
out
ja
cltd
int
and
imul
lcall
clc
icebp
xchg
js
imul
scas
xor
mov
loop
push
or
xor
jno
inc
mov
lods
lcall
jecxz
stc
push
rol
outsl
into
loope
jge
mov
pop
sub
and
push
cli
mov
std
ret
or
pop
icebp
sub
push
jl
les
sub
je
add
imul
cld
aas
jb
push
lea
xor
insb
push
cltd
inc
insl
pop
mov
pop
mov
inc
loopne
ret
addl
aad
shll
mov
rclb
sub
call
push
lcall
fbld
pushf
push
push
push
pop
push
sti
dec
pusha
cmc
mov
adcl
fistpll
mov
lods
cwtl
cmpsl
and
pop
popa
std
or
mov
int
scas
sub
mov
js
push
scas
mov
lods
add
pop
gs
fisttpl
lret
test
cwtl
xchg
arpl
es
mov
dec
push
inc
cwtl
dec
mov
nop
daa
dec
fdivs
mov
add
push
data16
into
pop
cltd
cli
jae
sbb
jmp
adc
lods
mov
lods
outsb
mov
orb
mov
cli
mov
pusha
cwtl
aas
scas
flds
movsb
sbb
mov
jge
cmpsl
lret
cmp
adc
fld
daa
sbb
add
cmp
jno
mov
filds
ret
mov
push
jae
test
pop
cli
pusha
lods
pop
jg
clc
sbb
xor
inc
and
pushf
data16
ja
insb
mov
rorb
imul
pop
loope
jbe
cmpsb
xchg
dec
sbb
arpl
pushf
mov
and
subb
in
sarb
or
scas
stc
inc
jb
add
and
add
shrb
jno
scas
dec
cmp
in
push
icebp
mov
outsl
loop
push
and
cmpsb
xchg
pop
ret
push
or
enter
aad
std
xor
iret
pop
dec
aam
pop
sub
mov
xchg
jmp
xchg
push
lahf
das
pop
out
push
loop
xchg
push
push
lret
addr16
pop
jno
fcmovnu
sub
mov
sbbl
xorb
add
adc
mov
pop
mov
loope
and
or
mov
std
or
nop
je
adc
pop
and
fldenv
inc
mov
cmp
jge
scas
hlt
jge
cli
jge
xchg
nop
pop
lcall
xchg
int
add
push
xchg
mov
xchg
stos
icebp
aam
jmp
movsl
ret
sbb
leave
leave
push
cli
test
cmp
jnp
sub
or
sti
add
mov
test
test
fadds
les
dec
inc
mov
fwait
notl
pop
arpl
xchg
jno
test
mov
out
xchg
movsl
sub
dec
ljmp
shlb
jno
cmp
cmpsl
jle
sbb
jo
mov
sub
cmp
xchg
loop
and
icebp
cmp
mov
stc
cmp
mov
sti
lahf
ret
pop
ret
loop
lds
nop
inc
insb
ljmp
push
xor
inc
scas
xchg
adc
mov
or
repnz
dec
sbb
lock
div
cmovnp
stc
fldl
lds
sbb
insl
mov
mov
push
inc
cmpsb
stos
dec
pop
in
scas
adc
xor
icebp
jle
mov
movsb
mov
xor
jmp
outsl
imul
lds
pusha
dec
aaa
rcrl
ret
xchg
dec
push
test
xor
adc
adc
das
rcll
cmp
test
loope
fwait
cmp
jb
mov
movl
fimuls
aam
sbb
stos
inc
mov
js
xchg
inc
lods
xor
xor
add
test
int3
jg
lcall
inc
xchg
xor
ljmp
sti
das
push
mov
int
sti
sub
and
fsubrs
in
lods
cmp
fistl
xchg
cmpsb
sub
sahf
lea
and
outsl
dec
shll
rorl
push
ficompl
hlt
mov
ficompl
mov
jns
ds
mov
popa
mov
pop
xor
xor
loopne
xor
or
push
adcb
and
pop
fisubrl
jmp
dec
dec
test
cmp
sbb
inc
ret
mov
cmp
cld
call
cli
rolb
pop
shrl
sbb
mov
imul
jno
mov
dec
dec
imul
sub
push
push
add
hlt
xchg
sbb
sbb
mov
mov
push
add
ljmp
cli
adcl
cmc
lods
push
in
out
movsb
add
insl
incl
mov
jl
ficompl
icebp
imul
lock
mov
jae
aas
mov
cmpsb
adc
sarl
push
mov
dec
and
sub
xchg
outsb
icebp
jno
add
insb
jae
jns
push
push
je
sbb
jns
arpl
leave
pop
outsl
mov
outsl
sbb
and
jnp
or
mov
ss
jns
pop
push
mov
xchg
shll
sub
out
xor
adcl
mov
adc
shr
mulb
mov
ficoms
idiv
dec
movsb
push
orl
or
mov
xchg
clc
inc
cld
sub
jp
cmp
lcall
fbld
popa
jne
lret
vzeroupper
or
inc
popa
dec
push
popa
out
and
jl
mov
pop
mov
es
rorl
fisubl
scas
sbbb
xor
adc
or
pop
dec
jo
mov
mov
jl
fcoms
movsb
loopne
xor
sub
inc
add
in
sub
aad
push
cwtl
push
xchg
pop
jo
stc
xor
jecxz
sahf
mov
pop
je
ja
mov
xchg
jbe
sbb
rol
xchg
std
jno
scas
insl
jno
mov
or
inc
mov
popf
cs
in
or
pop
dec
divb
comiss
adc
push
lcall
test
js
imul
inc
cmp
push
xchg
mov
rorl
movsl
call
shll
cmp
test
jae,pt
pop
xor
sub
iret
lock
je
stos
jae
jg
jmp
fistpl
add
mov
push
movsl
fdivp
std
push
scas
pop
xchg
scas
inc
pop
dec
xor
sub
out
mov
pop
and
jge
pop
test
rcrl
dec
es
cmpb
adc
popf
push
xchg
incl
pop
mov
mov
bound
sub
push
cmpsl
idivl
loope
lcall
mov
mov
push
int3
mov
imul
push
pop
cltd
sbb
jp
lret
xor
mov
push
test
jnp
dec
cmp
addb
jo
mov
cmp
jo
movsb
adc
ss
in
and
add
push
fstps
or
lahf
out
mov
pop
or
push
test
sar
mov
mov
mov
notl
movsl
idivl
dec
inc
cmp
jl
inc
mov
loopne
cmpsl
push
ja
imul
cmpsl
mov
repnz
aas
out
jecxz
shl
inc
out
clc
neg
stc
or
mov
pop
push
mov
sti
iret
cmpsl
or
stos
clc
adc
shrl
dec
imul
jmp
int3
int3
leave
add
orl
in
ljmp
mov
inc
notb
jns
rol
mov
sbb
cmc
into
pop
int
adc
fldcw
imul
icebp
out
inc
add
xchg
pop
arpl
xlat
jne
push
dec
shlb
pop
and
adc
sub
mov
sub
mov
mov
mov
jae
js
pop
out
in
popa
les
cwtl
sub
pusha
dec
or
push
aad
cmp
sbb
rcll
outsb
ds
jl
dec
insl
inc
cwtl
jmp
pusha
lods
mov
sbb
xchg
daa
adc
sub
rcrl
xor
int3
lea
or
outsb
aad
pop
push
cmpsl
mov
mov
mov
je
pusha
xchg
mov
fsubs
orb
xor
arpl
mov
push
or
stc
mov
sbb
fwait
in
mov
jae
fistpl
push
or
add
pop
and
jge
sbb
and
out
inc
fistpll
xor
adc
fbld
cmp
jne,pn
iret
pop
xchg
pminsw
add
and
or
jns
sub
sbb
or
sub
mov
gs
popa
xchg
lea
adc
inc
fimuls
mov
orb
inc
inc
xchg
xchg
pop
fnsave
inc
nop
mov
pop
mov
shl
and
cwtl
add
jle
imul
sub
test
fimuls
addr16
loope
jns
rcll
push
jb
icebp
test
lret
test
xor
aam
mov
adc
xor
cmp
shl
test
xor
inc
push
cmp
daa
mov
out
mov
imul
mov
jl
les
cltd
sub
test
jae
xor
das
mov
sub
enter
lods
sbb
sbb
ret
jmp
dec
clc
fwait
in
lcall
sub
nop
xchg
inc
aam
jecxz
in
or
adc
aas
scas
adc
fsubrp
push
sahf
pusha
sub
push
pop
outsb
cli
and
mov
jp
jno
rdtsc
das
push
push
sub
and
mov
repz
xchg
mov
cmp
xor
lods
in
insl
sbb
lods
mov
mov
sub
into
aam
sbb
hlt
sahf
add
in
aad
cmp
and
movsb
jae
sub
jae
mov
aaa
cmp
adc
add
out
loopne
aaa
jns
cld
xchg
movsb
iret
int
scas
or
sbb
pop
jnp,pt
jg
pop
pusha
ljmp
subl
ss
pop
lret
js
ss
int3
push
add
add
fs
xor
clc
sbb
popa
mov
cmp
clc
js
mov
sti
ficompl
add
mov
push
jns
xor
xor
in
xchg
out
mov
rcrb
into
jns
and
sbb
and
inc
dec
fisubrs
jno
ficomps
and
sub
lret
or
shr
add
sub
push
rcrl
shrb
pop
mov
pop
inc
aad
fwait
add
shlb
call
xchg
testb
int3
stos
scas
int3
ret
clc
jmp
mov
repnz
popf
lods
shrl
insb
test
push
mov
fldenv
pop
sub
sub
lcall
into
jb
adc
je
mov
pop
in
mov
js
cmp
mov
pop
pushf
jp
pop
inc
and
push
cmp
icebp
loopne
mov
cmpsl
jp
push
loope
jl
inc
xchg
fdivr
stos
sbb
push
jmp
das
push
ret
sarb
xchg
insl
push
test
xchg
icebp
sahf
cmp
sub
lock
out
push
push
lahf
jmp
sti
in
jl
add
jb
rcpps
mov
in
mov
fnstcw
sbb
data16
lahf
jecxz
fstps
sbb
leave
cmpsl
in
jo
imul
adc
cmpsl
fwait
enter
push
test
adc
out
movl
in
inc
mov
test
mov
cmp
lock
dec
xor
push
outsl
test
mov
rol
xchg
add
pop
cltd
and
loopne
rolb
adc
mov
cmp
lret
roll
jae
stc
xor
jp
int3
or
add
lcall
aas
cmp
and
xlat
push
or
movsl
sbb
xchg
cs
mov
jne
ja
pop
stc
insb
popf
popa
mov
mov
jecxz
mov
std
mov
nop
ljmp
cmpsb
mov
mov
pop
jne
int3
jo
xchg
and
inc
mov
push
inc
inc
loop
jl
shrl
clc
dec
stos
mov
fidivs
lods
jno
sub
ljmp
addr16
pop
stos
daa
inc
lahf
cwtl
and
decl
cmc
jmp
aad
dec
pop
cli
and
je
mov
lds
pop
push
lock
pop
popl
in
pop
leave
test
adc
aad
push
enter
ja
repnz
inc
mov
jb
pop
data16
cmp
xchg
mov
std
jno
sub
insl
mov
fstpt
mov
mov
test
dec
mov
call
cmpsl
test
xor
ret
in
and
aaa
sbb
repz
cltd
mov
jns
mov
out
lret
addb
or
mov
pop
loopne
cmpsb
fimull
out
adc
pop
push
ficoml
sbb
sti
or
or
inc
aad
and
xchg
std
in
push
stos
clc
mov
test
ficomps
xchg
mov
cmp
or
fwait
sub
push
sarl
sahf
mov
or
pushf
les
push
dec
inc
sub
mov
aas
je
test
inc
xchg
flds
push
imul
xor
movups
ret
jmp
imul
mov
xchg
lret
sbb
cmpsb
in
test
mov
or
rcrb
xor
xor
loope
test
adc
xlat
insb
dec
aas
xlat
cmp
mov
pop
int3
icebp
push
mov
mov
loop
aaa
ss
std
inc
cli
dec
adc
add
movb
or
stos
sub
sti
sbb
pop
fidivrs
or
cmp
sbb
xchg
xor
lea
jle
imul
fcmove
pop
pop
lds
ljmp
cmp
fimuls
lea
pop
mulb
mov
sbb
scas
mov
loopne
dec
jl
push
nop
mov
ljmp
jmp
cmpsb
cmp
jb
cmp
mov
loope
adc
arpl
push
loop
push
adc
mov
cmp
shrl
inc
movsb
jbe,pn
pop
mov
outsb
in
loopne
adc
jecxz
addl
fwait
add
addb
jb
sub
inc
iret
sbb
jo
pop
mov
dec
and
test
sub
mov
lods
pop
in
fs
shlb
mov
ret
xor
pop
sbb
roll
cwtl
fwait
sbb
leave
pop
jae
inc
mov
in
je
sub
ja
dec
pop
push
mov
mov
mov
xchg
mov
rclb
idiv
push
int3
aam
add
xlat
add
enter
push
popa
xor
or
not
xor
stos
loope
inc
into
inc
and
shlb
sub
sub
xlat
dec
and
imull
repnz
add
mov
idiv
js
cmp
cmpsl
in
mov
jns
popa
dec
dec
lea
stc
daa
cmp
jp
fnstsw
and
xor
dec
dec
loop
sbbl
out
insb
hlt
int
ret
mov
xor
mov
ret
cmp
pop
ss
nop
es
mov
cmp
xchg
out
mov
mov
clc
aaa
fisubl
cli
bound
lea
sti
sahf
push
je
inc
dec
fadd
pop
loopne
ss
subl
sbb
bound
movsl
imull
adc
lahf
dec
ffree
lret
adc
into
mov
pop
cli
inc
mov
xor
ljmp
add
in
mov
stos
mov
or
xorl
ret
imul
test
je
xchg
aad
imul
into
arpl
or
jl
pop
popa
das
xor
jo
sti
scas
dec
out
sub
mov
in
arpl
cmp
pop
jb
lahf
mov
mov
hlt
cmp
push
jno
mov
icebp
mov
jge
push
lret
mov
cmc
fdivs
in
les
iret
mov
iret
jo
ss
push
or
add
pop
lret
push
cmp
pop
adc
cmpsb
xchg
adc
inc
mov
jmp
inc
jne
out
sbb
daa
mov
mov
pop
insb
push
sub
dec
out
inc
mov
int
xor
outsb
jae
in
rcrl
pushf
notl
lret
xor
cmpsb
into
cli
bnd
into
leave
in
inc
daa
push
je
aaa
xor
repz
jnp
push
insb
js
push
inc
mov
push
cli
repnz
jg
stos
in
fidivrs
aas
cwtl
popa
nop
fnstenv
sub
fists
pop
popa
mov
cmpsb
cmp
sbbb
or
mov
inc
outsl
out
sbb
jo
or
movsl
sbb
cmp
cmp
loope
jae
cmp
pop
in
pop
pop
sbb
push
dec
test
inc
xchg
clc
hlt
outsl
fistpll
mov
pop
xor
gs
cmp
outsl
inc
jge
fbstp
out
push
fs
sbb
lret
pop
jnp
mov
out
movsb
sbb
addr16
movsl
mov
cli
movsb
ljmp
mov
test
or
jmp
mov
test
xor
in
icebp
add
and
xor
pop
and
jle
jnp
add
das
and
ja
js
pop
or
cmpsl
cmp
inc
cmp
cmp
inc
push
mov
push
xchg
push
lcall
imul
popf
fwait
mov
push
das
jns
js
jmp
out
sbb
dec
dec
jns
std
mov
mov
loopne
pop
and
xchg
cmp
dec
js
enter
add
js
leave
movsb
lds
fdivs
lds
cld
sub
shll
sbb
mov
sti
xor
clc
sub
or
ljmp
ret
insl
xor
out
cli
bound
ds
test
add
adc
and
fadd
mov
cmp
xorl
adcl
xchg
fistpl
mov
jnp
mov
aad
mov
xor
fimuls
cwtl
xchg
push
jg
inc
popa
jne
xor
dec
roll
test
lret
xlat
pop
rorl
out
shl
inc
mov
lcall
mov
lds
xchg
repz
or
scas
clc
jmp
scas
sbb
mov
in
mov
mov
out
or
data16
xchg
rcrl
pop
sub
lea
sbb
add
rolb
insl
push
jl
and
lea
popf
shrl
sbb
mov
outsb
insl
jle
mov
and
insb
inc
jl
fcomip
shl
dec
repz
or
or
and
or
outsb
lcall
dec
cmp
xchg
test
or
add
mov
add
jge
cmp
sub
jge
sbb
pop
rorl
inc
xor
jle
rorb
adc
sub
lods
fcoml
insb
xchg
jo
lods
aas
push
mov
cld
jns
jmp
in
adc
mov
out
sbb
in
bnd
or
pop
mov
cmp
call
lret
sub
cmp
pop
dec
inc
inc
leave
pop
fnsetpm(287
pop
iret
movsl
sarb
cmpl
pop
mov
nop
lods
outsl
push
inc
jno
jl
add
push
in
lods
stos
ljmp
in
pop
xlat
mov
js
loope
scas
es
loopne
add
adc
fistpl
fisubs
xor
adc
or
rolb
and
mov
fistpll
mov
outsl
cltd
dec
push
push
shlb
mov
data16
mov
mov
and
pop
jb
jg
in
xchg
jg
cmpsl
ss
repnz
add
pop
mov
dec
lods
and
mov
int
sub
push
into
jle
loope
sbb
sbb
push
jae
insl
mov
inc
jae
add
sar
popa
psllq
stos
or
mov
pop
adc
xchg
push
fadds
jno
dec
pop
bnd
adc
xor
push
or
mov
inc
mov
or
fiadds
add
xchg
insl
mov
aad
or
pop
dec
mov
cmp
lea
lret
xchg
add
xchg
in
xchg
sbb
add
or
repz
testb
ds
addr16
movsb
adc
repz
mov
pop
adc
lods
ljmp
adc
andl
pushl
repz
shl
mulb
push
lds
or
inc
outsb
out
pop
test
add
mov
int
mov
pop
add
loopne
dec
mov
xor
push
mov
vpmovsxwq
insb
stos
gs
add
gs
cs
imul
lods
jmp
insb
sbb
dec
lret
leave
sahf
mov
dec
imul
mov
dec
mov
sbb
repnz
cltd
lret
daa
setns
popa
ss
testl
je
mov
shll
stc
inc
xchg
jle
cmp
std
push
jbe
popf
xor
loop
les
jne
scas
sub
cs
mov
dec
inc
popa
mov
push
xor
sbb
dec
mov
test
mov
jnp
out
popa
cmp
sarl
in
push
jl
mov
push
xchg
mov
cltd
pop
setp
xor
iret
adc
and
bound
cld
and
js
add
mov
sti
cmp
negl
jb
pop
ds
xor
push
inc
and
sub
je
fcoml
xchg
arpl
xchg
push
jo
push
hlt
lcall
xor
mov
sahf
or
jo
or
xchg
pushf
adc
mov
sbb
pop
aad
inc
cmpsb
add
dec
dec
cli
xor
add
push
fwait
rol
repnz
push
int
btr
icebp
mov
ss
out
in
shlb
lock
in
add
loop
aaa
testl
daa
mov
rcrb
out
sbb
dec
loopne
scas
cmpsl
ljmp
movsl
fcoml
mov
inc
xlat
xlat
add
and
xor
cltd
fsub
push
adc
int3
or
cltd
fmull
jmp
bound
cmc
lea
xchg
xlat
int
adc
shrb
sahf
decb
xchg
mov
cltd
sbb
popf
in
clc
sahf
xchg
addr16
pop
push
test
add
or
bound
ret
fldl
mov
les
mov
push
jg
push
cmpsb
jg
jne
xchg
adc
push
cmp
sbb
ret
loope
cld
dec
unpcklps
push
push
fwait
adc
std
dec
test
pop
ja
mov
std
outsl
and
leave
popf
sub
js
adc
lds
cmc
inc
inc
popf
imul
clc
add
insl
repz
push
dec
pop
xor
lods
loope
loope
or
call
scas
mov
fadds
pusha
sub
push
or
icebp
sbb
mov
out
push
xor
xchg
xchg
test
inc
pop
mov
mov
push
jns
push
out
inc
loope
sub
xorl
and
sbb
fs
inc
gs
or
out
sbb
in
adc
lea
jne
mov
aam
gs
out
sarl
stc
or
cmp
lahf
add
icebp
hlt
cmc
xlat
aam
xchg
aas
out
dec
fsts
mov
bswap
push
jle
jmp
aam
dec
xchg
or
or
dec
stos
add
mov
cwtl
stos
jmp
in
dec
insl
cmp
cmc
iret
ljmp
in
mov
cmc
and
xor
inc
jno
movsl
pop
mov
shll
rcll
mov
jnp
out
sub
adc
lock
das
and
push
sbb
xorb
inc
pushf
inc
enter
dec
dec
xchg
les
mov
cmpsl
outsl
mov
xchg
mov
int
pop
stc
hlt
lret
outsl
fs
bound
cltd
cmp
ret
push
lock
xchg
xchg
int
std
mov
aas
cmp
dec
cmp
pop
in
dec
shlb
inc
pushf
push
in
sub
push
xor
push
sub
test
es
pop
dec
icebp
jo
test
push
imul
jmp
sar
or
fs
push
test
fistpll
leave
push
negl
popf
inc
das
lock
inc
rorl
cwtl
pop
mov
push
addb
xor
int
stos
leave
sbb
and
pop
sbb
clc
pop
mov
sbb
sub
jae
movntq
out
loope
cwtl
cmpb
inc
arpl
stos
cmp
add
cmp
bound
aad
fdivrs
and
pop
lock
sub
es
repz
loopne
popa
out
data16
imul
std
lods
out
lahf
popf
and
js
jl
fs
xlat
movsl
sti
pop
test
mov
sbb
adc
xchg
sub
jle
nopl
rorl
out
popf
adcb
push
pusha
mov
into
rcrb
push
sub
adc
lahf
test
mov
cli
or
jle
xor
sub
adc
mov
or
push
ljmp
hlt
add
jecxz
mov
push
out
adc
mov
inc
mov
sub
mov
lock
out
testl
xchg
jne
scas
pop
pop
imul
push
lds
mov
pop
mov
push
clc
insl
sub
cmp
push
or
add
push
adc
fnsave
push
repnz
loopne
sahf
fisttpl
mov
sub
ret
and
jge
jp
les
xor
sti
mov
fidivl
cmp
dec
mov
cmp
subb
sbb
and
fwait
pop
mov
mov
into
arpl
sahf
outsl
sbb
in
lods
stos
orb
xchg
les
pop
push
incb
inc
divb
movsl
dec
pop
jmp
imull
mov
pop
nop
or
jmp
xor
stc
cs
mov
mov
test
loop
dec
outsl
mov
xchg
jnp
bound
or
xlat
jl
pop
in
sub
aad
cmp
and
fistpll
in
inc
cmc
in
int3
sub
xchg
add
sarl
mov
jp
xlat
bound
out
jo
imul
loop
subl
pop
aad
aad
add
icebp
test
testl
xchg
pop
int3
in
jnp
xor
sub
cld
xchg
popf
ret
je
aam
pop
dec
loopne
scas
mov
pop
mov
lds
xchg
pop
push
addb
dec
or
inc
or
pop
out
fcomps
lret
lea
add
inc
mov
out
shrl
outsl
add
sbb
sub
sbb
icebp
push
iret
in
jg
dec
or
cwtl
sbb
inc
cmc
push
sub
sbb
enter
mov
mov
scas
pop
xchg
inc
rcrb
loop
imul
xor
in
sub
push
xchg
cmp
mov
gs
sbb
clc
shl
cmc
sbb
mov
inc
xchg
out
sub
repz
test
mov
notl
mov
dec
imul
lods
mov
adc
int
ss
mov
xchg
int
jecxz
lcall
in
dec
dec
xor
fucomip
and
or
xchg
sbb
clc
mov
jo
inc
jns
and
dec
sbb
push
test
jg
insl
movsb
out
xor
rolb
mov
mov
out
cmp
int
or
in
dec
les
mov
xor
rcll
outsl
sub
mov
add
push
adcl
xor
mov
ja
int3
push
push
inc
jbe
xchg
or
scas
xor
sahf
push
dec
xor
divb
je
subb
repz
mov
addb
push
sbb
add
int
xchg
add
sub
dec
sub
mov
scas
dec
push
push
vxorps
mov
out
inc
imul
loopne
sbb
mov
sbb
mov
fistl
jne
sub
cmp
out
push
add
pop
testb
sarb
sbb
lods
or
lret
mov
outsb
inc
push
sbb
xchg
lret
pop
fimull
shrb
fiadds
pop
shlb
pop
sahf
mov
jl
adc
pusha
into
jge
imull
outsl
lock
popa
xchg
inc
xlat
lret
mov
insl
mov
jns
jmp
pop
hlt
ljmp
adc
sub
imul
mov
imul
push
ret
jg
xchg
dec
pop
enter
mov
dec
shrl
jnp
add
lcall
or
insl
test
jmp
insl
jmp
add
mov
je
inc
in
cmc
adc
daa
aam
fstps
je
stos
jmp
cmp
cmpsl
fld
sbb
stc
mov
movsb
test
rorb
imul
or
lcall
adc
stc
jo
sbb
mov
call
ficompl
loope
mov
push
xchg
movb
sbb
mov
xor
orb
xor
jmp
xor
scas
cmp
pop
sti
test
mov
sub
jmp
fstpl
mov
lds
cs
fsts
ljmp
lcall
fcmovu
xchg
adc
mov
jge
lcall
repnz
xchg
mov
subl
leave
das
mov
jae
out
mov
fxch
aaa
imul
ja
rcr
pop
pop
push
out
aad
fwait
es
std
jo
pushf
adc
fidivrl
insl
inc
xor
fsubrp
fbld
aaa
or
repnz
int3
mov
iret
mov
icebp
mov
mov
adc
xchg
mov
mov
ja
or
jl
adc
adc
xchg
lahf
pop
or
shrl
and
ret
cs
sbb
sti
xchg
cmp
repz
adc
sbb
push
dec
mov
inc
push
mov
mov
inc
pop
mov
dec
or
sbb
lock
repz
es
sbb
add
jnp
or
cmp
mov
sarb
dec
lahf
test
sbb
cli
sub
in
les
sbb
leave
and
stos
cmpsl
dec
mov
mov
jbe
in
adc
jmp
add
push
cmp
ret
mov
iret
jno
xchg
sarb
daa
cmpsl
fdiv
adc
or
je
sub
enter
and
lret
into
imul
pop
jo
push
xlat
adc
xor
ficoms
lock
dec
inc
mov
out
mov
stos
push
jg
lcall
dec
lods
out
and
xchg
jl
test
bound
das
inc
shll
mov
call
xor
test
mov
dec
mov
pop
and
stc
and
pushf
decb
out
jle
mov
bound
cmp
mov
dec
clc
and
and
and
jb
push
jp
sahf
mov
or
notb
jbe
cmpsb
xchg
loopew
adc
xchg
mov
adc
jo
sbb
sub
fidivrl
icebp
lods
dec
jecxz
inc
mov
inc
dec
jnp
sub
xchg
sbb
popf
fisubrs
pop
jmp
xchg
popf
mov
cmp
sbb
sbb
lea
loope
pop
ret
jne
adc
inc
jns
rcl
fimuls
sahf
or
stos
lcall
mov
push
sbbb
inc
scas
or
cmp
js
xchg
ret
loope
mov
adc
outsl
shl
mov
loop
adc
pop
movsl
out
xchg
dec
pop
loopne
sbb
push
insl
bound
jmp
jae,pn
xchg
iret
push
repz
stos
clc
push
addr16
pushf
sahf
sub
mov
mov
push
call
xchg
mov
cmp
arpl
sub
dec
push
adc
loop
sbb
int
adc
cli
lods
mov
jge
lods
mov
pxor
inc
test
daa
jmp
cmp
sub
adc
cld
lds
mov
push
stos
clc
mov
je
jbe
pop
xor
dec
in
insb
hlt
bound
repz
xchg
aam
push
push
mov
test
repz
jp
mov
movsl
sbb
mov
mov
mov
lods
leave
sahf
aam
xchg
jo
shrd
mov
cmp
ljmp
test
pop
lds
fmulp
fsts
arpl
sub
inc
in
sub
jg
jl
icebp
jle
popa
push
hlt
inc
lods
inc
dec
cmp
popa
dec
les
pushf
sub
cmp
mov
xor
adc
and
rcrb
ret
sbb
test
fmull
fistps
mov
jae
repz
jno
xchg
sbb
mov
inc
sbb
mov
sub
aad
mov
mov
lods
mov
jle
or
cwtl
inc
ja
cmp
xchg
push
aaa
lea
imul
shll
insl
adc
dec
lds
imul
adc
sbb
insb
and
or
imul
test
mov
lcall
sub
xchg
cmpsl
rcll
into
std
les
fmull
xchg
dec
cli
lcall
mov
icebp
cmp
hlt
mov
mov
inc
aam
call
dec
sbb
js
cmp
sbb
pop
stc
mov
dec
fistpll
push
push
or
dec
and
cmc
jp
leave
lret
xor
sbb
ret
mov
insl
jno,pn
push
test
enter
enter
repz
mov
fs
or
xchg
xchg
xchg
stc
jno
arpl
xor
fldcw
mov
rol
psubusw
pop
inc
es
nop
dec
shll
or
jno
pop
cmp
and
inc
ljmp
push
pop
jae
push
stos
lcall
sub
jp
sub
jb
fnstenv
outsb
pop
dec
sbb
add
push
mov
jmp
aad
fwait
add
int
leave
lret
inc
xchg
loopne
or
mov
and
lcall
push
mov
cmp
xchg
or
shrb
ja
mov
jns
icebp
inc
ljmp
xor
stc
xor
mov
cmp
insb
outsb
push
les
mov
rcr
cmp
pushf
push
pop
sbb
add
xchg
xchg
outsl
js
pop
cwtl
lret
inc
fwait
pusha
gs
das
sbb
daa
mov
loop
scas
daa
push
pop
mov
and
push
popa
push
and
xchg
icebp
mov
les
or
hlt
pop
inc
cmp
pop
or
fs
mov
daa
lahf
or
mov
ja
push
js
out
mov
push
xor
repnz
and
jp
xor
mov
pop
dec
scas
fistpll
int3
fisubs
lcall
or
adc
pop
jle
adc
leave
mov
das
sbb
mull
hlt
push
mov
sahf
mov
sub
in
adc
ret
sub
cmp
icebp
xchg
cmp
pop
and
test
and
jecxz
and
xor
jb
test
ds
inc
sti
mov
das
dec
mov
das
addr16
xchg
ds
cmp
adc
pop
mov
push
inc
aam
dec
aas
pop
adc
jbe
sbb
and
mov
mov
pop
cmc
xor
xchg
sbb
or
pop
jno
idivl
xor
xchg
fildl
test
call
push
out
icebp
jae
test
iret
mov
out
addr16
test
mov
not
mov
push
or
push
mov
aas
sbb
sbb
cmpsb
xor
popl
push
pop
cli
leave
insb
loop
ja
fdivl
mov
pop
aas
sub
cmpsl
cltd
mov
sbbb
jo
gs
lds
mov
pop
pop
lods
xchg
and
sbbb
dec
push
sub
mov
mov
stos
add
xchg
push
les
mov
sbb
push
aaa
stos
pop
cmpsl
lods
mov
jae
sbb
adc
mov
bound
int3
insl
jle
push
mov
loop
push
xchg
mov
leave
iret
in
push
sub
push
aad
fnstcw
movsb
stos
mov
push
adc
into
pop
sbb
out
enter
das
push
clc
sub
dec
inc
add
push
xchg
push
mov
jb
inc
imul
in
aam
imul
addr16
mov
scas
mov
lods
jp
jle
ficoms
sbb
pop
aaa
loopne
adc
xlat
mov
cmpsb
xchg
sbb
cmp
inc
outsl
into
mov
pusha
mov
test
sbb
cmp
stos
arpl
inc
jl
movsb
cmp
dec
mov
jmp
in
int
jnp
fsubl
sub
adc
cmpsb
pop
popa
or
add
xor
popa
xor
aam
mov
or
iret
push
je
sbb
leave
jmp
call
pop
hlt
sahf
cmp
jg
add
dec
pusha
incb
stos
loope
push
icebp
add
push
mov
sahf
fmuls
lahf
add
pop
mov
stos
xchg
and
jns
adc
int3
lods
into
adc
xor
inc
xchg
shll
cmpsb
adcb
mov
xchg
fsubs
lcall
aaa
aaa
popa
jle
ret
sbb
lock
shr
je
shl
shlb
ja
out
mov
fiadds
jecxz
or
cmc
jbe
adc
xchg
pop
insl
jbe
sub
fiaddl
loop
pop
mov
adc
clc
cmp
lahf
call
mov
shlb
dec
pop
mov
pop
punpckldq
in
mov
push
mov
xor
xchg
test
gs
cs
jecxz
mov
daa
jo
mov
cmpsl
orb
cmpsl
test
loope
adc
insb
scas
mov
pushf
mov
push
movsl
out
xchg
push
enter
push
dec
dec
notl
jp
xchg
xchg
fadd
movsb
inc
mov
xchg
pop
gs
fs
lret
sbb
dec
cmpsb
mov
inc
in
inc
ds
xchg
pop
rorb
lret
or
leave
sub
sahf
pop
test
dec
xor
pop
ret
dec
repnz
cwtl
jge
xor
add
int
or
push
loopne
dec
sbb
rcll
mov
mov
cmp
pop
fs
or
or
inc
cwtl
shlb
test
mov
test
aaa
push
enter
xchg
push
outsl
mov
in
push
sub
push
mov
inc
cmpsl
movsl
sub
je
mov
insl
bound
sbb
mov
dec
in
xchg
or
sbb
mov
pop
jns
cmp
and
mov
push
adc
jnp
and
jmp
scas
push
pop
pop
shrl
or
inc
inc
jg
cmp
xchg
add
aam
ljmp
jno
sbb
scas
sbb
int3
jno
repnz
outsb
mov
inc
add
xlat
fistpll
xchg
sbb
ljmp
xchg
sub
ss
popa
push
xchg
repnz
xchg
fwait
leave
sti
mov
push
je
pop
jae
andb
jb
mov
test
push
call
enter
sub
mov
and
pushf
rolb
sub
mov
pop
sahf
jge
psubw
outsb
shl
push
fdivrs
das
or
in
and
mov
xchg
enter
xchg
jae
and
or
orb
js
push
push
mov
fiaddl
daa
xor
dec
or
mov
sahf
dec
adc
fbstp
cmpsl
stc
movsb
sub
mov
les
and
call
pop
pushf
imul
jmp
pop
mov
mov
pop
dec
xchg
push
test
pop
mov
mov
imulb
stos
dec
xchg
aam
dec
mov
cs
jne
pop
subl
inc
xor
mov
enter
js
adc
filds
out
cltd
inc
mov
in
jg
adc
cmpsb
das
cmp
sub
pop
js
dec
cmpsl
xor
lods
dec
loopne
add
rorb
jmp
mov
scas
out
les
dec
adc
jecxz
sbb
test
shlb
imul
jae
mov
pop
sahf
xchg
push
dec
add
ja
cwtl
mov
test
push
or
push
inc
in
stc
dec
mov
xchg
jp
leave
mov
outsb
or
int
xor
push
xor
rorb
push
jg
sub
std
xor
in
inc
mov
scas
add
shlb
fwait
lods
push
fisttpll
mov
loopne
rcrb
cwtl
pop
mov
adc
xchg
push
fisubl
pushf
stc
jns
xchg
aas
pop
imul
clc
scas
idiv
or
cmp
push
test
push
mov
pusha
cs
mov
daa
fisubs
mov
mov
dec
sbb
pusha
xor
test
xchg
pusha
sub
and
mov
into
stc
adc
std
xchg
mov
xor
adc
jb
xor
jo
jb
icebp
jg
mov
cwtl
or
popa
ret
pop
cs
lea
loop
sbb
fldenv
adc
inc
xchg
in
sbb
mov
mov
loopne
in
stos
adc
push
aad
movsb
push
mov
fisubs
and
xchg
sub
fisttps
push
arpl
dec
hlt
sub
nop
xor
mov
lret
sub
cmp
repnz
pop
xor
add
xchg
lret
or
xchg
xchg
xchg
rcll
cmp
mov
pop
ja
out
out
xlat
xchg
mov
mov
jns
cmp
int
les
push
jne
sbb
sbb
add
sbb
and
out
mov
aad
ret
mov
rcll
mov
jl
push
movsb
lods
xor
fwait
ds
sub
cltd
add
mov
xor
xor
clc
sub
imull
imul
std
sub
ficoms
pop
cmp
push
jge
xchg
mov
gs
insb
addr16
ja
jle
ljmp
ja
sub
dec
ss
leave
aam
add
loope
outsb
popa
sahf
subb
les
stos
stc
aas
dec
aas
sub
and
rclb
push
lcall
out
mov
out
pop
sbb
das
mov
jmp
mov
adc
jo
into
or
mov
lods
xor
jns
decb
inc
data16
pop
repz
jecxz
inc
rorb
lds
cmpsl
fmull
stos
sbb
rcrb
ret
lahf
fucomi
rcll
cmpsl
cmc
enter
divl
inc
xchg
xor
jmp
mov
mov
jns
sbb
and
addb
mov
repnz
hlt
or
add
dec
mov
mov
daa
out
mov
push
icebp
test
rorl
mov
sbb
outsl
clc
or
pusha
icebp
or
lea
dec
fwait
out
inc
pushf
xchg
pop
fsts
jl
and
lret
sbb
xchg
outsl
xchg
cmp
push
xchg
test
test
adc
outsb
testl
js
stc
mov
dec
scas
pop
xchg
dec
jbe
inc
mov
pop
imul
push
js
or
adc
dec
pop
jne
call
sarb
out
cmp
and
clc
mov
lahf
mov
aaa
cmp
pop
cltd
jge
ds
sbb
int
popa
jns
fstpt
jno
inc
repz
jb
leave
jg
cmpsl
pop
js
xor
bound
out
popa
hlt
sbb
jmp
gs
mov
std
imul
sahf
faddp
sub
sub
movsb
push
push
xchg
repz
dec
jnp
or
cli
std
sahf
loop
dec
mov
and
icebp
adc
ljmp
inc
or
movsl
sub
jb
mov
popfw
in
push
mov
xchg
shll
mov
jo
jnp
cmp
test
ds
inc
jmp
sub
inc
cmc
add
jo
push
mov
add
bound
ds
imul
movsb
xchg
insb
js
repnz
scas
xor
pop
mov
add
add
mov
push
or
loopne
das
lret
mov
jne
sti
mov
and
clc
loop
or
iret
pushf
push
or
js
addr16
cmp
out
arpl
xchg
lcall
ret
sbb
aas
pop
push
shrb
scas
fsubrl
pusha
mov
push
cld
jnp
mov
int
imul
mov
cmc
inc
pop
xchg
xchg
add
js
dec
loopne
lock
jo
mov
sub
mov
mov
or
sahf
push
ret
jecxz
psubsb
imul
push
rolb
add
hlt
insb
das
mov
sub
dec
xlat
fists
sub
addl
jg
cmc
cmc
lahf
insl
push
xchg
test
sbb
or
mov
pop
fsqrt
xchg
sbb
in
das
xchg
into
mov
sub
int
cmpb
jp
jnp
outsb
cli
mov
add
pushf
push
lods
aad
dec
sub
sbb
mov
jecxz
cli
adc
ret
push
mov
sbb
stos
pushf
test
or
sbbb
mov
mov
addb
bound
rcl
mov
pop
les
dec
lret
mov
ds
mov
arpl
popf
push
cs
pop
nop
push
mov
sbbb
mov
je
adc
dec
leave
inc
push
or
pop
in
jmp
jl
mov
add
or
arpl
cmp
mov
lcall
fiadds
xor
insb
dec
xchg
jecxz
aam
adc
inc
jg
or
xor
and
mov
cmpsb
scas
inc
pop
xchg
lds
scas
add
orb
sarb
ja
das
rcrl
and
fmulp
out
lods
inc
and
mov
or
xchg
clc
inc
cltd
adc
mov
inc
pop
pop
and
stc
clc
adc
das
inc
push
movsb
adc
lcall
in
rol
int3
sahf
sub
jbe
cwtl
cmp
xchg
cmp
mov
test
inc
mov
aas
jbe
insl
adc
jne
scas
jg
jb
push
test
daa
icebp
repz
jae
popa
push
out
jno
movsb
sub
pop
shlb
push
cmpsb
test
stos
inc
arpl
mov
inc
sub
scas
adc
lcall
leave
in
repz
enter
je
bound
mov
movsl
notl
jl
jne
dec
xchg
mov
popa
mov
cwtl
sbb
mov
adc
mov
mov
imul
popf
xor
fildll
adc
xor
mov
or
dec
mov
xor
leave
loope
cmpsl
imul
cwtl
adc
sti
mov
adc
or
xor
cmp
daa
and
les
add
jp
test
adc
loopne
rcl
add
mov
fs
mov
mov
sahf
jle
loope
out
in
add
insl
pop
cmp
lds
and
sbb
mov
scas
dec
jae
add
rcr
aaa
jne
pop
add
insl
sub
mov
es
cmpl
outsb
je
mov
out
ret
cmp
mov
lahf
jp
jmp
pop
outsb
jp
ret
je
and
add
xchg
xchg
mov
data16
cs
add
cmp
adcl
and
xchg
testb
adc
push
cmpsl
sub
cmp
dec
sub
bound
sub
dec
repz
or
add
idivl
cld
xchg
or
cmpsl
lea
rcrb
ret
xchg
inc
pusha
test
mov
lods
push
cld
sbbl
jg
fcompl
mov
jns
call
data16
lret
in
lcall
add
test
inc
push
sbb
nop
je
adc
push
sub
pop
test
pop
lock
sarb
fnstenv
xor
push
aas
dec
js
xchg
js
push
shlb
iret
ret
mov
mov
xchg
leave
gs
out
arpl
sbb
inc
mov
es
mov
test
push
mov
es
and
pop
mov
xor
push
cmp
xor
out
aas
les
sub
pop
popl
imul
out
jo
xor
negb
imul
mov
xchg
rcrb
aad
and
test
cmp
roll
mov
loopne
push
pop
push
sbb
js
lea
sub
push
fisubs
out
out
rol
pop
movsb
in
sub
outsl
xor
mov
cmp
jp
out
push
xor
cmpsl
mov
dec
cld
lret
pushf
inc
mov
stos
sub
popf
dec
sbb
daa
sub
mov
dec
cmp
xor
insl
jmp
lcall
in
mov
test
xchg
mov
cld
pop
fldcw
add
xor
adc
push
loop
ds
dec
and
xor
push
loop
addb
inc
xchg
imul
sbb
addr16
out
rclb
leave
imul
jns
enter
pop
dec
inc
push
add
xchg
in
into
jl
mov
stos
lcall
dec
push
cmp
bound
jmp
dec
int3
xchg
in
cmp
jno
fnstsw
sub
lcall
push
in
or
xor
or
jge
jne
outsb
out
bound
cltd
jle
movsl
scas
inc
mov
xchg
call
push
push
in
addb
inc
cmp
inc
xchg
inc
dec
jne
frstor
mov
movsb
mov
xchg
movsl
pop
imul
rorl
and
loope
inc
mov
mov
jle
mov
cmp
mov
lahf
jl
pop
loop
sub
dec
popa
cli
cmp
daa
mov
dec
imul
stc
rcrl
or
inc
jbe
xchg
dec
sbb
and
mov
add
cmp
fwait
imul
mov
dec
std
jns
repz
lods
add
lds
push
es
xor
xor
or
dec
xchg
inc
mov
das
sbb
adc
pop
sub
mov
inc
fwait
dec
cltd
cmpsb
cli
pop
bound
mulb
mov
mov
cs
out
add
adc
mov
inc
pop
dec
cmp
pushf
xchg
in
int
and
jb
push
push
cmpb
jae
jne
cmc
pop
push
rorb
out
test
sti
add
nop
add
mov
or
lods
dec
sub
cmc
jmp
and
test
ffreep
hlt
fsubr
jle
push
jmp
push
sbb
xchg
rolb
arpl
add
clc
push
lahf
cmpsb
cltd
adc
mov
loope
shl
call
xor
ret
outsl
xchg
stos
insl
mov
pusha
aaa
repnz
add
pushf
mov
jbe
lahf
lock
fld
add
sti
mov
scas
or
ret
mov
sbb
sub
hlt
mov
mov
cmc
mov
outsb
repz
mov
stos
push
shl
in
sub
push
icebp
xor
mov
jo
mov
cmpsb
and
push
js
xor
fiadds
mov
fwait
out
rcrl
repz
call
jmp
mov
cmpsl
or
fmulp
xor
inc
es
mov
ret
leave
jp
jne
call
sbb
or
and
andl
test
ljmp
mov
cmp
mov
mov
mov
mov
fcom
add
mov
test
push
and
adc
push
leave
xlat
mov
pop
jge
cmp
fs
bound
int3
mov
ja
inc
roll
inc
pop
cmp
xor
jecxz
push
iret
insb
rcl
or
jge
les
subb
inc
ja
loopne
filds
rclb
add
pop
pop
out
xor
sub
int
out
fldcw
jge
lcall
push
xor
outsl
fsubrl
mov
test
orl
mov
sti
lahf
inc
ljmp
pushf
mov
mov
adc
jp
cmp
int
jbe
add
leave
push
or
push
mov
std
idivl
push
fldenv
cs
sbb
jno
addr16
fistps
enter
or
pop
cmp
push
cmc
push
sbb
xchg
sarl
or
dec
xor
xchg
bound
inc
je
dec
dec
jae
repnz
call
jl
repz
movsl
xor
xchg
mov
sti
outsb
ja
or
gs
mov
mov
mov
popa
or
pop
push
xchg
jns
jo
jle
lahf
xchg
cld
movsl
mov
xchg
add
rol
dec
int
xchg
add
lea
add
repnz
stc
cmpsb
shlb
and
out
xchg
lods
mov
std
jno
sub
scas
and
xor
lock
jb,pt
mov
lret
jb
and
lock
fsubrl
imul
in
dec
sub
jl
cwtl
jle
mov
add
sub
outsb
into
popa
sub
popf
clc
adc
ds
inc
fucom
out
xchg
pop
mov
cmp
jns
sub
pop
fldl
jno
jbe
cld
les
and
pop
jl
cmp
call
mov
pop
push
shll
cli
ret
cmpsl
adc
lcall
add
sbb
das
pop
mov
icebp
shll
fistl
add
cmc
add
dec
loopne
hlt
cmpsb
dec
iret
js
pop
daa
out
add
or
adc
mov
out
mov
sbb
mov
rorb
aas
jle
shr
ds
out
test
cwtl
adc
icebp
lahf
and
xor
xchg
xchg
push
test
xchg
pop
imul
cwtl
pushf
imul
cld
mov
int3
outsb
mov
dec
push
jle
std
cmp
test
enter
push
push
push
shrb
ficomps
clc
jge
stos
xchg
dec
jae
push
xchg
imul
in
lcall
ret
cmp
pusha
sarl
pop
mov
rolb
rolb
pop
push
notb
gs
jae
lods
ds
pop
incb
pop
or
xchg
cmpsl
mov
push
into
jecxz
repz
test
call
out
mov
push
fists
pop
cmp
push
rcr
sbb
mov
cld
inc
ret
or
sbb
into
xor
inc
inc
ret
adc
pop
lret
aam
jp
enter
inc
cmp
dec
push
adc
sub
mov
addb
dec
cmpsb
add
daa
push
pop
in
or
fcomi
mov
leave
lahf
shll
mov
fwait
enter
test
shll
not
cmp
jbe
lret
or
sahf
fs
pop
push
test
stc
jp
push
or
cmp
sub
xchg
jae
test
adcl
mov
imul
mov
xor
dec
jg
and
cli
mov
aaa
call
push
sbb
cwtl
faddp
fcmove
cs
sbb
movsb
arpl
mov
add
test
aam
and
dec
mov
cmp
xor
inc
inc
inc
add
fsts
pop
pop
dec
push
fucomp
xchg
mov
sti
ret
orb
pop
pop
adc
inc
lea
mov
ss
jmp
and
dec
lds
js
int3
mov
inc
jl
out
and
push
out
push
push
inc
pop
sbb
xor
inc
sbb
test
push
jl
xor
cmp
sub
lock
insb
js
nop
inc
movsl
jg
pop
les
shr
ffreep
push
out
and
aad
loopne
xor
adc
mov
xor
in
pop
outsb
pop
or
jnp
jne
or
negb
fiaddl
shll
add
negb
mov
decl
ds
movsb
add
in
xorl
aam
or
std
in
xlat
inc
data16
aad
jbe
stos
repnz
cltd
stc
or
fdivrs
xlat
mov
pop
push
cmp
xchg
in
enter
push
fisubs
xor
cmp
enter
enter
aas
arpl
mov
daa
ja
adcb
and
negl
xchg
lds
jae
lock
xchg
outsb
jbe
into
repz
inc
and
push
and
fistpl
ds
pop
clc
outsb
pushf
sub
mov
pop
fstpt
cmp
cwtl
push
mov
mov
add
pushf
sahf
push
pop
mov
das
xor
mov
mov
mov
cli
sarb
mov
xor
out
and
pop
cwtl
pop
shl
loop
and
push
push
pop
adc
cmp
or
flds
inc
jb
aad
mov
aas
repz
pop
les
lret
mov
rol
add
lret
iret
push
adcl
imul
jmp
pop
call
inc
mov
loopne
cmp
push
lea
mov
pop
clc
push
jl
cwtl
pop
pop
cmp
sbb
sub
ret
movsb
adc
arpl
cmpl
mov
cs
jne
insb
cmp
fiadds
call
cmp
repnz
dec
fldt
faddp
lock
cli
aas
mov
ja
pop
push
rolb
clc
in
fstps
inc
mov
xchg
mov
cld
in
inc
push
add
push
push
add
xor
fwait
jno
mov
xchg
adc
addps
loope
xor
sub
dec
jbe
in
lea
fistpll
js
jno
inc
push
lcall
push
sub
cmp
imul
add
adc
ja
roll
and
cmp
dec
ss
fadds
loop
xchg
inc
shlb
jle
or
out
imul
cwtl
jmp
xor
add
ja
mov
xchg
jb
inc
xor
and
add
and
sbb
mov
adc
or
in
mov
out
fbstp
adcb
lcall
jle
xor
das
dec
lods
iret
push
inc
add
push
lret
or
mov
into
jecxz
daa
int3
jne
test
rcll
push
mov
fs
mov
rcll
std
mov
outsl
lds
inc
xorl
mov
xor
lahf
sub
shlb
aam
xor
add
pop
roll
mov
mov
xchg
push
push
dec
lock
roll
repnz
push
sbb
out
sti
cmp
push
fnstsw
jb
pop
gs
popa
cmp
mov
movsb
test
sarl
cmp
addl
sbb
cltd
jno
xchg
mov
cmp
mov
or
lods
shll
jle
icebp
dec
gs
pop
add
cmpsb
ret
js
sbbb
sub
out
mov
mov
jbe
mov
adc
lods
fnstcw
inc
pop
stos
ja
pusha
js
pop
pop
push
rolb
cli
sub
adcl
push
mov
inc
shrb
js
adc
stos
test
inc
imul
adc
jecxz
das
cmp
das
push
mov
fidivs
cmpsb
cmpl
test
xchg
sub
jbe
mov
shlb
pop
fs
sbb
add
iret
jg
fstpl
jnp
outsb
mov
cmc
ror
or
adc
hlt
rclb
xchg
pop
jb
sub
cmp
jmp
xor
invd
xorb
xor
sbb
lds
sbb
ret
sbb
popf
push
idivl
push
pop
push
fisubs
aad
dec
jecxz
popa
pop
shlb
adc
or
adc
inc
outsl
cmpsb
fwait
mov
cltd
stc
sbb
sbbl
imul
imul
outsl
pusha
sub
cmp
mov
shl
or
sbb
inc
sbb
add
add
imul
xor
scas
test
in
xchg
sbb
inc
push
and
sti
cltd
mov
outsb
add
cmp
test
add
les
leave
test
add
mov
push
pop
adc
and
mov
adc
mov
adc
and
push
imulb
jo
xchg
pop
and
insl
in
ror
mov
sub
mov
jne
lock
inc
sbb
aas
andl
pop
pop
test
pop
in
popf
inc
adc
imul
push
jmp
inc
xor
aas
dec
and
xchg
icebp
add
xchg
add
ds
cmc
dec
mov
mov
std
push
push
lcall
mov
data16
dec
repz
idivl
movswl
inc
loop
mov
fs
dec
jle
loope
dec
test
cmp
push
inc
mov
sbb
push
rcr
sarl
movsl
lahf
inc
jae
mov
fxch
jo
int3
mov
int
xorl
jg
lea
fidivs
aaa
cmp
xchg
xor
imul
pop
jnp
dec
or
xchg
xor
cmp
sub
pop
jp
stos
pop
push
cmpsb
out
shrl
rcrl
mov
or
test
rcl
ret
sti
and
mov
jno
paddq
add
das
inc
rol
sarb
cmp
and
icebp
push
shrl
std
xor
sub
jmp
arpl
fcmovbe
sbb
xor
push
cmc
mov
vpminsw
xchg
outsb
shll
out
jg
faddl
mov
insl
mov
ljmp
push
or
bound
aaa
out
movsb
add
loopne
pop
inc
in
inc
mov
cmpsb
push
mov
test
pop
cld
lret
out
pop
pusha
add
xchg
data16
std
cwtl
insl
jmp
xchg
stc
sbb
or
push
movsb
pop
cmpsl
cld
loop
adc
mov
lds
xor
xchg
int3
adc
mov
enter
lret
sbb
jmp
int3
or
pop
mov
and
and
mov
lods
in
nop
lods
push
xchg
xchg
movsb
loop
push
inc
mov
add
in
mov
test
gs
movsb
testb
test
add
lret
repnz
sbb
sbb
jg
push
js
mov
popf
inc
jbe
xchg
xchg
pop
cwtl
pusha
ljmp
cltd
push
jmp
cmp
test
or
aam
jmp
xor
fs
mov
pop
xlat
dec
xchg
call
jne
jle
xor
js
pop
xor
cmpsb
stc
ds
mov
js
and
sub
mov
cld
adc
jno
sub
push
daa
ficoml
jb
call
pop
jne,pn
add
enter
push
outsb
dec
aad
sbb
xorl
ljmp
sbb
scas
out
nop
icebp
jmp
jno
dec
push
int3
stc
sbb
andl
pusha
pop
leave
aas
fs
popa
push
fists
lds
lods
jecxz
sub
ret
data16
mov
repnz
test
cmc
add
popf
fs
mov
rol
mov
mov
div
test
pushf
das
pop
shrl
aas
cmp
in
cltd
clc
xchg
inc
in
je
jno
xor
and
je
push
add
out
stc
testl
or
addr16
cwtl
fdivrs
fcom
insb
sub
jle
fmuls
in
and
fxch
push
adc
jle
mov
add
push
in
loopne
jb
ss
xchg
or
pop
in
popf
and
cltd
mov
cmpl
mov
testb
and
mov
jne
cli
inc
mov
and
daa
cmp
mov
pop
lock
js,pt
fcoms
int
jle
push
ljmp
xchg
mov
lods
mov
xchg
mov
lcall
xchg
mov
pushf
mov
and
push
xor
fdiv
xchg
cmp
addr16
cli
or
lcall
pop
mov
push
push
sahf
push
test
mov
rcll
sbb
jle
mov
fsubrp
or
inc
mov
hlt
xchg
test
and
mov
pop
jecxz
imul
popl
daa
out
outsl
pop
xor
cmp
and
xor
mov
sbbl
iret
fcmovnb
imul
out
dec
push
dec
test
dec
and
jbe
fiaddl
daa
inc
call
xor
fldenv
je
and
adc
mov
or
or
sub
sahf
mov
pop
add
xchg
pop
pop
jecxz
movsb
out
jnp
jg
stos
aad
jmp
mov
adcl
dec
jmp
mov
or
cmp
fwait
fwait
dec
rol
cmp
repz
push
lahf
out
jbe
inc
cmpsb
cmp
push
les
mov
lods
adc
icebp
mov
mov
dec
ds
jae
push
mov
mov
les
jo
sub
xor
jg
adc
js
lcall
push
mov
or
mov
lds
pushf
and
out
push
sub
loope
sbb
negb
cmp
lods
shrb
mov
pop
or
add
xlat
inc
scas
sbb
stc
xor
sub
inc
repz
mov
outsl
push
mov
cmp
mov
sbb
fld
fwait
cmp
adc
mov
icebp
jae
enter
xorl
jb
mov
push
popf
mov
int3
and
push
jno
mov
imul
rcr
fsubrl
cli
mov
int3
mov
cmp
and
sub
push
dec
call
add
shlb
mov
call
mov
mov
notb
pop
popf
jae
inc
lahf
dec
sub
repz
cltd
mov
decl
jnp
push
pop
sbb
shr
movsb
jg
xchg
lret
aam
in
xor
pop
jge
int
or
xor
icebp
or
cmp
or
out
lea
inc
ss
and
andb
inc
mov
jno
mov
dec
pop
adc
pop
adc
js
lods
cmp
sbb
sbbb
jae
mov
lcall
jnp
bound
sti
loope
xchg
adc
fnstcw
push
jecxz
push
push
stc
inc
add
inc
in
dec
call
jp
xchg
inc
push
ja
lock
dec
cwtl
imul
rcrl
sbb
repz
in
in
jl
jmp
xchg
xor
vmovups
mov
pop
je
lahf
xor
jge
xor
enter
jg
jne
add
jo
mov
adc
mov
sbb
sub
sbb
aam
sbb
shr
dec
or
dec
cli
fxtract
xchg
or
in
in
add
in
push
cwtl
dec
add
fdivl
cmpsl
pushf
push
bound
sbb
ror
cld
std
mov
sbb
jl
push
popf
jp
xchg
dec
xlat
arpl
sub
orl
adc
aad
push
and
mov
testl
add
outsb
jp
cltd
mov
ds
loop
pop
adc
jg
in
push
add
fstpt
outsl
or
sub
or
and
sub
mov
pop
js
out
popa
mov
add
push
imul
aaa
fisttps
mov
insl
cmp
loop
dec
inc
mov
ss
and
sbb
es
xor
dec
pop
jns
pop
dec
or
add
push
js
mov
in
adc
mov
xor
mov
lcall
jno
fistpl
lock
loope
add
inc
int3
xor
std
adc
xor
nop
jmp
jne
arpl
nop
inc
test
pop
lods
sub
mov
insb
neg
dec
xlat
iret
mov
test
inc
arpl
inc
mov
and
cmpsb
push
push
shll
call
inc
cltd
adc
inc
pop
lcall
bound
aaa
or
dec
in
fwait
test
bound
xchg
inc
lret
and
push
push
lods
pop
pop
aad
mov
jge
das
aad
bsf
mov
mov
jb
jge
xchg
and
outsl
loopne
or
lods
adc
sbb
cmp
add
ret
push
mov
mov
into
ss
lods
sbb
lret
arpl
in
mov
movsl
dec
mov
xchg
js
and
inc
les
roll
or
xchg
dec
movsl
jl
jae
xor
out
add
les
aam
arpl
mov
pusha
mov
daa
push
or
out
lea
frstor
lret
add
sahf
popa
cmp
sbb
adc
pop
loop
pusha
aaa
js
in
adc
sbb
add
and
shlb
and
adc
insl
int
xchg
stc
push
add
ja
mov
mov
jg
push
cmpsb
daa
push
jae
mov
dec
cwtl
out
push
dec
inc
adc
jle
imul
and
cld
ljmp
push
mov
sarb
pop
or
inc
lods
mov
cmp
sbb
sub
jl
sub
popf
inc
inc
sbb
jp
out
jbe
into
mov
mov
pop
jno
add
je
mov
dec
rcrb
or
imul
dec
imul
and
call
cwtl
fdivl
in
xchg
addb
into
inc
xchg
lock
add
imul
add
xchg
int3
cmc
ljmp
cmpsb
mov
mov
push
mov
lret
enter
ret
test
cmpsb
in
cmp
pop
and
mov
call
int3
push
sub
aad
mov
pop
mov
jecxz
jmp
xor
pop
push
dec
ja
fwait
in
fwait
inc
add
mov
push
mov
inc
iret
movsl
xor
aad
jne
or
cmp
adc
addl
and
loop
popa
je
xor
sub
mov
in
lcall
xchg
mov
jns
faddl
adc
fistpl
pop
aaa
inc
popf
cmp
cmp
pop
ja,pt
test
ror
in
cwtl
jo
dec
cmp
mov
shrb
push
mov
rcr
xor
or
add
icebp
pop
xor
sahf
out
into
fsubrs
mov
sbb
jge
mov
and
adcb
test
mov
mov
xchg
xlat
xor
icebp
pop
sbb
rolb
dec
mov
fwait
xchg
lods
stos
sub
subl
or
das
movsb
inc
jbe
pop
mov
mov
shll
xchg
std
pop
outsl
xchg
inc
and
push
mov
sahf
out
test
dec
push
fisttpll
sarb
clc
dec
xor
push
and
std
pop
add
lret
cmp
or
pop
xor
daa
inc
inc
xchg
sbb
mov
adc
test
sbb
lods
mov
add
lods
inc
int3
push
popf
push
mov
leave
or
jp
cmp
mov
inc
mov
mov
out
dec
xor
mov
cmp
mov
test
add
scas
lret
pop
ljmp
push
or
sbb
or
lods
or
dec
pop
into
cmpsl
aam
jae
jo
xor
and
les
aaa
jnp
pop
sbb
pop
sub
sub
push
loop
sbb
out
rcrb
rol
jae
sbb
inc
push
into
inc
xchg
pusha
insb
ss
test
out
inc
dec
es
repz
fistpl
cltd
icebp
add
jno
stos
add
push
xchg
fisttps
push
or
nop
jb
pop
test
mov
or
sarb
cmc
add
add
pop
outsl
test
test
cmp
jp
jg
inc
call
sub
pop
mov
or
aaa
add
ret
jne
dec
js
jnp
and
inc
insb
lock
add
jmp
xor
sub
sbb
dec
lcall
push
jg
sub
pop
mov
adc
dec
inc
lcall
adc
inc
xchg
dec
fdivr
cmp
inc
orl
dec
imul
fadd
data16
jmp
mov
shlb
std
mov
es
sbb
inc
cwtl
jmp
fidivl
cmp
rorb
xchg
mov
xor
test
mov
or
xor
test
in
cltd
pusha
jo
dec
mov
pop
das
adc
mov
mov
fimuls
imul
xor
adc
pop
mov
adc
cmp
jge
xor
mov
cmp
cs
add
mov
enter
or
cmpsb
sbb
pop
ret
inc
notl
std
shl
scas
loope
cli
and
movsb
in
and
or
fst
dec
ljmp
pop
ficoms
fs
xlat
pop
mov
scas
repnz
xchg
lret
lds
cmp
mov
out
loop
into
into
stos
inc
inc
mov
mov
xor
icebp
out
or
popa
lcall
and
stc
pusha
adcl
pop
ret
xchg
enter
out
adc
std
in
and
jge
sbb
pop
or
lahf
roll
adcb
popa
dec
andb
adc
ret
iret
ss
push
xchg
mov
dec
fs
fcom
mov
and
outsl
out
dec
adc
data16
or
daa
jno
aam
mov
fbld
dec
push
dec
push
shrb
aam
push
fldenv
push
pop
add
pop
mov
inc
jg
mov
mov
mov
adc
leave
stos
iret
loop
lea
mov
cmp
push
out
add
sbb
mov
inc
mov
or
lock
cmp
pop
add
dec
jp
mov
and
mov
icebp
push
imul
ja
movsb
add
mov
lds
dec
dec
orl
sbb
cmp
pop
into
mov
into
mov
xorl
in
cmp
mov
dec
sti
dec
das
jno
adc
shll
mov
sbb
add
es
jmp
bnd
xchg
repz
faddp
test
xchg
daa
shrl
mov
jmp
jne
mov
adc
stos
pop
mov
add
call
out
fsts
mov
adc
sti
inc
xchg
mov
int
and
jae
mov
inc
loopne
rorb
jl
pop
movsb
jae
and
or
add
mov
movsl
dec
test
mov
jbe
jns
push
or
ds
jge
sbb
mov
sbb
cltd
test
fsubl
add
clc
movsb
mov
adc
inc
xor
test
cmp
cmp
in
xor
lock
push
xor
sahf
addb
cwtl
push
jno
jb
arpl
sub
popf
mov
insl
hlt
sub
insb
sub
sbb
scas
mov
jecxz
push
fcmovu
fistl
andb
xchg
icebp
out
jo
jns
hlt
popa
bound
xchg
dec
lea
sub
xor
jns
sbb
arpl
fldl
loope
daa
shll
xchg
faddp
dec
pushl
mov
xor
shlb
mov
ljmp
mov
jne
jle
pop
addps
js
add
test
shrl
pop
iret
pop
jb
push
negl
ret
lds
jno
and
shrl
repz
es
sbb
mov
ret
mov
push
call
mov
test
dec
fs
mov
push
cmpsb
sub
jmp
xchg
fs
aad
pop
sub
and
adc
adc
insb
outsl
fldt
lods
adc
lods
mov
cltd
iret
in
push
in
add
lcall
int3
xor
and
pop
sub
mov
punpckhwd
lea
jmp
sbb
xor
mov
ficomps
das
push
lret
pusha
xor
mov
into
add
leave
adc
mov
pop
aaa
dec
adc
bound
pop
ss
jb
sbbb
inc
and
fstpl
orl
jg
outsl
cmc
hlt
and
fisubrs
inc
mov
cmp
xchg
add
jge
mov
cmp
jecxz
xchg
jg,pn
push
sub
call
popf
movsl
push
pushf
xor
in
shl
outsb
sub
and
mov
adc
fldlg2
inc
xchg
jg
ljmp
adc
movsb
pop
arpl
popf
cmpsl
adc
rorl
mov
xor
mov
in
pusha
jge
cli
pop
loop
in
rolb
dec
imul
out
data16
mov
jecxz
mov
stos
aam
push
std
lods
adc
jne
mov
or
add
and
inc
mov
ret
inc
mov
int
scas
int
inc
inc
cmp
xchg
out
cmp
add
cmpsl
out
mov
nop
shlb
add
addl
add
inc
flds
out
test
xchg
mov
pop
ljmp
pop
arpl
push
fsubl
lock
lods
cmpxchg
scas
pop
xlat
xlat
jg
loopne
jae
or
sbb
fs
cmp
fdivs
inc
sub
mov
out
jno
clc
xchg
cmp
cmpsl
mov
sub
jge
push
out
cmp
xor
jecxz
sub
int
sbb
add
dec
sbb
pop
adc
push
aam
pop
jo
jp
cmpsb
sbb
sahf
pop
sti
cli
jmp
imul
ficoms
scas
mov
xor
psadbw
adc
push
jbe
aas
adc
jge
mov
add
sbb
xchg
or
pop
into
out
sbb
fwait
pushf
or
fs
pop
jno
dec
pop
and
jae
adc
mov
mov
push
inc
adc
lahf
mov
add
xchg
push
mov
pop
xchg
ds
pop
outsl
ja
xor
clc
stc
rolb
jae
ret
das
in
dec
mov
into
adc
rol
and
xor
mov
mov
inc
aas
test
mov
les
xor
gs
orl
js
loopne
xor
adc
mov
xor
ds
lock
lock
test
nop
adc
pop
push
dec
push
aad
ss
insb
cli
es
lahf
nop
xchg
outsl
xchg
dec
out
pushf
lcall
lds
outsb
pop
lods
test
js
and
xchg
ss
js
xchg
scas
xor
cld
test
ss
xor
jmp
lahf
adc
jp
add
inc
je
cmp
xchg
xchg
jecxz
cli
lea
sub
inc
adc
mov
stc
push
orl
sub
inc
jmp
or
bnd
cmp
adc
aam
sub
mov
scas
xchg
call
popa
ret
xchg
pop
and
bound
or
shlb
ds
dec
push
sar
mov
ja
mov
jno
xor
jns
bndstx
pop
inc
in
test
bound
iret
mov
add
lahf
cmpsb
cmp
lret
mov
cmp
push
xchg
stos
or
xor
and
fwait
pop
cmpl
or
cs
adc
and
mov
and
mov
loop
mov
push
lods
and
test
jb
outsl
and
sbb
iret
mov
aad
jecxz
jge
imul
or
loop
jo
repz
cmc
lods
cmp
mov
xlat
call
mov
cmp
xchg
jns
push
pop
loop
sbb
rcrb
cltd
mov
push
das
ffreep
data16
data16
sub
fldt
pop
ljmp
xchg
sarb
mov
add
popa
add
inc
out
in
or
mov
stc
add
mov
dec
int
outsl
loopne
fcmovne
cmp
adc
push
inc
clc
jg
enter
push
xor
xor
push
leave
jo
lods
jge
dec
push
xchg
ss
pop
daa
cmpsl
imul
inc
addr16
les
inc
sbb
cmpsl
jns
jl
bound
out
push
repz
adc
or
mov
repnz
les
jmp
mov
int
insl
push
and
and
and
enter
dec
inc
cmp
sbb
popa
cmpsb
jnp
pop
mov
cmpl
cld
inc
sbb
test
les
mov
mov
sub
pop
push
mov
popa
push
push
lea
push
xor
pop
leave
lods
out
mov
imul
in
push
mov
rep
sti
daa
lea
lahf
pop
pop
ja
cmp
dec
adcb
std
je
push
fidivrl
sub
add
scas
dec
or
mov
jmp
loopne
daa
pop
add
call
mov
cltd
inc
mov
lock
add
cwtl
sbb
repz
cmp
xchg
push
xchg
insb
add
jae
dec
loopne
jae
and
xlat
test
pusha
and
mov
imul
push
repz
test
cwtl
mov
or
push
sub
mov
mov
mov
and
clc
movsb
inc
lea
in
dec
sub
adc
int3
dec
and
fdivp
arpl
cltd
add
fists
ljmp
pop
lahf
add
add
lds
ret
pop
stc
xchg
loope
and
icebp
sbb
and
aas
fucomi
dec
cli
ret
shrb
sub
xchg
ss
inc
dec
jecxz
sarb
pop
loop
pop
adc
clc
popf
dec
jl
and
mov
arpl
inc
dec
nop
cmc
cmpsb
subb
es
push
fwait
dec
cmc
loopne
scas
push
jb
scas
jns
into
stos
cmp
mov
pop
ja
mov
xchg
repnz
xchg
pusha
into
outsl
les
loopne
cwtl
aaa
pop
mov
loop
xor
sbbb
nop
sbb
mov
sbb
inc
repz
lock
push
adc
xchg
xchg
pusha
or
gs
dec
adc
mov
loop
cmp
fcoms
xchg
fisttpll
scas
adc
fiadds
mov
dec
arpl
repz
jno
jge
sti
rcll
pusha
jmp
mov
sub
pushf
fdivrl
stos
pop
mov
mov
inc
dec
mov
and
xchg
sbb
push
int
inc
sub
pop
repnz
push
xor
rolb
lock
add
and
iret
jge
ret
iret
fidivl
inc
xor
pop
leave
repnz
hlt
xor
xchg
pushf
cli
cli
addr16
fs
xor
xlat
iret
mov
xlat
xchg
push
outsl
cmc
pop
pop
push
push
pop
mov
push
sub
cmpsb
movsl
xor
scas
cmp
sbb
sbb
mov
shl
jecxz
or
inc
mov
cmp
imul
xchg
push
das
or
test
int
ljmp
out
jns
addr16
adc
aam
cmp
sbb
arpl
push
adc
cs
scas
loope
ret
xlat
dec
inc
mov
jno
push
gs
dec
push
pop
shll
and
lods
pushl
insl
xor
jno
leave
loop
or
sbb
push
in
dec
mov
es
in
mov
out
cmp
ret
test
decb
push
imul
jbe
inc
ljmp
mov
sbb
cmc
cmp
in
push
jmp
into
movsb
mov
in
test
dec
scas
jne
sti
jg
push
adc
cmp
push
es
mov
test
sti
fildll
into
jmp
mov
in
mov
add
mov
xchg
mov
out
push
cmp
xorb
cli
fsubp
and
loope
iret
pop
pop
mov
push
insb
and
add
pop
pushf
fcompl
imul
pop
or
jnp
lods
mov
adc
dec
dec
sbb
arpl
pop
mov
mov
jmp
push
xchg
addr16
dec
jp
jmp
adc
daa
xchg
cmp
lds
adc
jnp
jbe
sbb
pop
xor
xchg
cmc
xlat
gs
pop
cmp
mov
or
scas
es
dec
enter
mov
inc
jne
xchg
cmc
stos
out
ss
ja
inc
andb
cmpsb
mov
out
mov
mov
icebp
jmp
arpl
cmc
push
and
test
xchg
mov
test
cmp
dec
or
cmpsb
scas
subl
rep
sbbl
insb
addr16
nop
cmp
inc
pop
cmpsb
loope
cmp
lcall
jae
jge
xor
pop
push
fdivl
daa
enter
sbb
adc
and
cmp
insb
adc
xchg
ja
dec
dec
insl
lret
dec
mov
mov
and
sbbb
mov
cltd
cwtl
sbb
or
jp
push
add
std
sbb
and
jno
pop
out
cmp
fs
lcall
icebp
pop
add
fdivrl
mov
lock
wrmsr
pop
lcall
dec
lds
inc
int
inc
sub
cs
out
xlat
adc
sub
xchg
mov
mov
push
pop
leave
push
popa
pop
cltd
sbb
pop
arpl
sbb
inc
shl
jno
adc
sbb
jno
fadds
scas
jno
mov
inc
adc
pop
cmp
mov
lahf
insl
fbstp
shr
dec
inc
js
ljmp
cmp
clc
aas
hlt
shl
and
js
pop
pop
push
addb
jno
fcompl
pusha
shl
movsl
mov
pop
add
aaa
shll
sbb
aaa
push
addr16
push
and
jge
lcall
add
xor
jnp
jg
das
outsl
imul
inc
stc
jmp
jo
inc
lock
mov
inc
push
sub
xchg
stos
xor
insl
inc
push
cmpsb
test
push
jae
add
std
cmovae
cmp
out
lods
or
loope
dec
movb
xor
test
lds
or
or
and
mov
lock
adc
adc
push
jo
gs
mov
lcall
xchg
mov
inc
adc
adc
cwtl
push
pop
mov
or
mov
daa
mov
mov
pop
inc
xchg
enter
cmp
mov
imul
fmull
pusha
mov
sub
adcb
xor
sbb
imul
mov
inc
mov
scas
pop
mov
mov
xchg
mov
movsb
scas
lahf
push
push
jecxz
push
icebp
pop
or
pop
aaa
clc
adc
cmp
sbb
lahf
xchg
mov
test
aam
or
jg
imul
pop
add
mov
or
and
and
lea
push
inc
call
lea
addr16
mov
testl
clc
and
and
pushf
aad
in
xchg
enter
ss
icebp
cmp
test
and
inc
pusha
mov
cwtl
cmp
not
sbb
pushf
xor
or
cmpsb
hlt
shrl
jecxz
xchg
lock
jge
popa
add
lods
and
sarl
cld
mov
scas
add
mov
adc
xchg
lock
jge
push
or
and
out
push
push
jle
negl
jne
mov
aaa
add
stc
mov
ds
test
aad
push
mov
in
mov
mov
sbb
out
push
loopne
xchg
std
clc
jle
adc
into
push
out
filds
arpl
mov
mov
jo
or
xlat
pusha
je
jg
mov
stc
lahf
mov
pop
in
loope
jno
cltd
push
andb
push
into
inc
test
cltd
sarl
sub
or
xchg
sbb
out
jmp
fstl
push
cmp
push
push
or
stos
push
inc
pusha
cmp
dec
ja
mov
inc
sbb
cmp
lahf
ja
dec
aas
jno
inc
cmp
clc
in
in
bound
movsl
inc
insl
lret
add
mov
inc
ret
lea
icebp
cwtl
mov
push
mov
test
stos
or
push
out
mov
ss
and
pushf
ficoms
sbb
adc
shr
out
ret
js
jecxz
xchg
enter
outsb
fcompl
push
pop
enter
insl
test
pop
add
pop
adc
gs
lret
in
cmpsl
and
mov
push
gs
stos
fsub
mov
in
or
outsl
bound
sub
cltd
mov
cli
and
stos
mov
orb
clc
cmp
daa
fistps
fildl
mov
stc
adc
popa
pop
mov
inc
aam
call
sbb
inc
repnz
div
lret
stos
pop
sbb
cmp
cmp
das
xor
pop
fsubs
outsb
scas
jle
push
xorl
dec
lods
shrb
dec
std
lods
lea
rcrb
mov
adc
add
jb
xchg
lds
rcrb
pop
inc
fcmovbe
inc
lret
add
add
or
hlt
jne
jne
sub
and
mov
fwait
dec
jne
mov
sbb
out
push
test
jne
mov
xor
sub
orl
sti
jo
cmpsb
int3
loope
xchg
mov
mov
movsb
jg
ficomps
jb
sbb
js
sub
jae
scas
dec
pusha
imul
mov
mov
cmpsb
sti
das
or
jo
in
and
push
xor
mov
cmc
or
clc
lods
test
mov
nop
mov
cmp
cld
subl
les
lret
shlb
scas
rcl
pop
xchg
or
vcomiss
into
add
lock
pop
outsl
xorb
xor
xor
imul
pcmpeqd
cwtl
sub
jne
std
cli
xchg
ds
lahf
dec
or
ret
sub
iret
adc
hlt
mov
jle
pop
and
mov
mov
jbe
and
mov
fildll
sbb
xchg
popf
lods
jmp
shrl
mov
clc
repnz
jecxz
or
stos
scas
xchg
int
cltd
push
mov
popf
std
repz
push
add
sub
mov
lahf
jns
mov
in
movsb
arpl
leave
inc
js
fwait
aas
pop
les
dec
nop
fbld
add
data16
push
adc
and
xchg
cmp
rcrl
call
pop
adc
cmp
mov
add
pop
xor
psubb
repnz
mov
ffree
movd
push
repz
and
xchg
xchg
push
xchg
sub
and
popl
sub
mov
dec
inc
jo
mov
add
cli
lahf
cld
fists
insl
aaa
add
jmp
mov
jne
lock
sub
jl
adc
loopne
push
lea
mov
filds
mov
stc
js
cmp
adc
loope
dec
test
jno
cmp
enter
mov
push
cmp
push
stos
aad
mov
int3
hlt
pop
addr16
add
repz
add
in
ljmp
imul
inc
push
scas
mov
je
lret
popf
lock
movsl
insb
push
jne
or
in
xor
fisttps
cltd
aam
pop
repz
dec
jle
aad
push
jns
jecxz
ja
mov
popf
inc
adc
fmul
sbb
push
iret
addr16
xchg
jo
cmp
rolb
andl
and
movsb
call
mov
mov
clc
or
push
iret
mov
push
iret
sub
daa
cltd
sbb
inc
mov
enter
push
mov
or
push
cmp
adc
jae,pn
cmpsl
jne
fdivrl
or
mov
jb
fcom
movntps
push
adc
sub
scas
sbb
notb
push
mov
and
sbb
or
aas
push
jg
shrb
cmc
mov
cli
call
in
adc
sbbl
call
loope
hlt
sbb
leave
sbb
mov
xchg
jno
loop
data16
roll
out
ljmp
sub
pop
inc
pop
jo
scas
repnz
push
mov
mov
cmpsl
jle
dec
dec
inc
xchg
or
cld
sarl
sbb
add
pushf
inc
shll
sbb
add
push
jmp
cld
lahf
jo
clc
add
addr16
popa
inc
lods
test
js
and
push
ljmp
ds
mov
sub
xor
rcr
icebp
sbb
cmp
test
out
add
sbb
out
leave
aad
scas
cmc
sbb
inc
adcb
inc
add
jg
lahf
data16
imulb
mov
push
mov
incb
lods
imull
sub
rcll
push
mov
out
add
jo
push
popa
test
loop
mov
sbb
out
es
push
mov
test
fnsave
int3
xchg
cmp
lods
mov
and
cmp
nop
mov
icebp
xor
xchg
loopne
dec
pop
and
xor
xor
stos
xor
mov
pop
icebp
fnstcw
push
mov
repz
sbb
out
xchg
in
cmpsb
sbb
mov
dec
mov
xor
or
popa
idivl
hlt
lret
dec
int
inc
aas
xor
mov
mov
pushf
push
cs
sub
ss
push
mov
std
pop
es
shrb
cmp
push
imul
dec
xchg
insb
cmp
enter
adcb
dec
addps
movl
mov
xor
xor
in
aad
ds
out
jae
add
outsl
das
jecxz
lods
xchg
mov
mov
mov
jl
jl
pop
test
int
pop
pop
pusha
jge
add
pop
xchg
add
cli
das
out
daa
sbb
lods
and
or
ljmp
fs
pop
insl
mov
jl
mov
das
imul
out
fcomps
push
sub
mov
popa
adc
xchg
or
aas
mov
out
xchg
pop
adc
inc
pop
mov
cmc
stc
adc
xor
insb
fisttpl
inc
das
or
rcr
mov
xor
cld
push
add
fwait
adc
stos
xchg
xor
add
jp
imul
stc
bound
jle
mov
xchg
inc
repnz
jg
shl
mov
leave
js
ja
faddl
es
test
pop
pop
aam
insl
sahf
sahf
dec
jle
jno
or
lock
and
in
insl
adc
daa
inc
and
stos
repnz
jmp
icebp
inc
adc
pop
jne
jnp
insb
cmp
mov
mov
push
adc
jp
jnp
cmp
psrld
lods
or
dec
insb
into
stos
in
add
ljmp
pusha
sbb
repz
pop
mov
cmp
insb
cltd
jp
shlb
xchg
lds
inc
and
mov
or
mov
fs
xor
rol
xchg
jne
repnz
out
adc
jns
mov
movq
addr16
mov
jle
repz
add
xchg
jmp
rcrl
nop
push
aaa
jg
inc
mov
mov
andl
cmovo
xchg
and
and
xor
imul
bound
push
popf
adc
lock
int3
mov
xchg
push
adc
fistpl
jo
adc
add
scas
adc
mov
ret
dec
mov
and
pop
dec
jo
push
ja
adc
je
stc
xchg
adc
xchg
inc
enter
fsubl
shlb
out
cmp
push
icebp
xchg
dec
and
popf
mov
xchg
mov
movl
push
aas
ja
divb
cmp
je
aad
adc
gs
ret
inc
mov
jge
imul
icebp
sub
push
and
dec
xchg
or
xchg
dec
aaa
gs
inc
cmp
and
dec
or
inc
jmp
inc
loop
or
jo
mov
pop
lds
hlt
loop
scas
or
jbe
xchg
es
mov
mov
mov
dec
lods
lods
shll
xchg
imul
jne
adc
adc
int3
repnz
pusha
data16
rcl
subb
pop
jmp
xchg
xchg
dec
mov
out
jecxz
in
fdivrs
jl,pt
data16
insl
dec
addr16
sbb
mov
aam
stos
cmpsb
fldenv
and
aaa
mov
inc
clc
mov
push
rcll
mov
aaa
sarl
jmp
pop
jns
test
insb
shlb
mull
inc
or
pop
mov
je,pn
xchg
jns
ret
or
sahf
jecxz
sub
adc
push
dec
fwait
sti
pop
hlt
arpl
sbb
je
inc
jno
test
push
xchg
scas
xorl
cwtl
cs
je
into
ds
enter
ret
xchg
cmp
das
scas
in
and
rcrb
mov
pushf
inc
adc
mov
mov
lods
inc
and
jge
sbb
test
mov
jne
cmp
adc
outsb
sub
mov
or
bnd
jmp
fisubs
setg
das
imul
or
test
mov
std
popf
or
adc
sbb
enter
out
pop
mov
xchg
jge
sub
push
and
inc
jnp
stos
loop
out
jb
sbb
insb
sbb
push
or
loop
andb
or
loop
pushf
add
jg
fwait
push
nop
or
popa
inc
jg
push
mov
dec
jae
cmpsb
add
scas
fnsave
push
push
mov
add
xlat
lods
mov
pop
push
push
pusha
das
outsb
lret
inc
jne
movsl
jl
lods
lahf
rol
sti
push
das
pop
pop
aad
cli
addr16
inc
mov
popa
aad
cmp
adc
cld
orb
adc
pop
xor
xlat
enter
arpl
call
xchg
pop
lret
mov
pop
inc
mov
fwait
add
fdivs
sti
cwtl
cmpsl
inc
iret
test
mov
xchg
icebp
add
or
inc
fadds
cmpsb
testl
jae
sub
dec
in
xchg
stos
pop
aaa
mov
mov
ret
test
dec
add
mov
and
sub
xor
cld
add
mov
add
add
sbb
aas
dec
sbb
and
xchg
outsb
fdivr
insb
repnz
dec
mov
test
mov
pop
outsb
popa
cli
mulb
ret
ret
sti
jp
mov
cltd
mov
das
fwait
and
nop
push
ss
xchg
ljmp
cmc
xchg
in
aas
pushl
jne
inc
in
in
xchg
dec
and
in
fmul
int3
mov
int3
push
leave
dec
lret
outsl
std
addr16
sub
ret
sbb
mov
and
push
addr16
add
add
sbb
mov
ds
xchg
push
xor
jecxz
pop
in
jb
lcall
jnp
and
add
ss
pusha
scas
iret
xchg
mov
test
in
xchg
sbb
insb
hlt
scas
dec
xor
add
imul
outsl
mulb
pop
in
sbb
in
adc
jl
adc
loope
scas
inc
jb
test
fidivs
mov
dec
cmp
rclb
mov
mov
jg
mov
js
push
pop
mov
mov
scas
fidivrl
mov
arpl
je
aam
flds
cltd
inc
mov
pushf
aaa
repnz
jle
sub
inc
pushf
sub
pop
xchg
adc
iret
lods
jecxz
dec
test
and
inc
scas
sbb
cli
xor
push
lea
jmp
pop
and
int
inc
aad
adc
aad
in
add
das
pushf
leave
cltd
push
in
add
push
in
add
xor
cli
dec
sbb
dec
sbb
cmp
push
movsb
clc
loope
lea
add
push
imul
out
mov
call
sub
mov
clc
dec
das
outsb
insl
lods
sub
xor
xchg
push
sbbl
gs
fmuls
xor
jno
fxch
test
pop
andb
bound
push
cmp
outsl
mov
lock
xlat
inc
movsb
ret
dec
aas
jo
and
xor
inc
pop
faddl
mov
inc
or
outsl
jns
cltd
repnz
xchg
xchg
mov
arpl
xchg
dec
es
shll
mov
adc
sub
add
push
push
adc
loope
sti
xchg
stc
cmp
pop
or
scas
jl
pop
inc
jecxz
adc
or
add
xchg
pop
sub
test
gs
jns,pn
add
out
std
dec
dec
mov
cmp
sub
sbb
sub
mov
and
jg
es
add
sub
inc
mov
add
dec
ret
adc
rcrb
push
sub
in
add
jp
cmc
in
cmp
das
int
jg
iret
rclb
fbstp
popl
lahf
xchg
loopne
add
jbe
das
jne
rcll
adc
cmp
pop
fisttps
inc
scas
fsts
pop
sub
ret
fildll
adc
mov
fwait
in
leave
sti
xchg
dec
xor
fucom
push
or
adc
mov
mov
out
sbb
movsl
in
sarb
jge
push
push
push
shlb
cmpsb
pop
pop
out
shll
cmpsl
shlb
andl
sub
adc
fadds
dec
or
decb
into
mov
xor
xor
inc
adc
nop
sub
imull
or
jns
inc
lea
xor
nop
shlb
pop
push
xor
insl
adc
mov
aam
stos
mov
dec
xor
jnp
out
sahf
sti
pop
adc
and
push
lret
inc
pop
mov
push
ljmp
xchg
mov
test
push
inc
fsqrt
jo
mov
sbb
pop
test
push
sub
test
add
in
pop
dec
adc
sbb
jb
push
sbb
add
std
mov
ljmp
mov
mov
outsl
mov
dec
inc
xchg
and
ja
pop
int
sbb
xchg
jne
cmp
mov
lds
aad
adc
lcall
and
pushl
mov
lahf
jmp
stc
aam
xor
push
jp
daa
hlt
xor
aad
xchg
pop
rcl
ret
push
xor
jmp
sahf
jbe
xor
sbbb
push
inc
adc
in
pop
push
inc
mov
xor
subb
jns
ds
xchg
push
pusha
loop
mov
out
pop
sub
aaa
push
add
jge
jp
adc
xchg
jno
xchg
in
jl
xor
lret
mov
jp
pop
mov
inc
negl
inc
mov
cmpsb
pop
dec
stc
and
mov
jb
sahf
inc
sub
sbb
es
es
or
xchg
cmp
rcll
add
es
mov
adc
das
lods
das
mov
je
out
xchg
inc
in
pop
call
push
clc
sbb
mov
insb
addr16
insb
popa
mov
and
aas
xor
lds
jo
cmp
movsb
mov
sbb
add
push
outsb
loope
xor
jle
sub
jle
adc
in
pop
adc
fwait
sahf
cmp
lcall
les
jg
int3
push
mov
inc
push
push
sub
lcall
cmpsl
pop
push
adc
xor
add
mov
pop
push
je
dec
and
scas
sub
lahf
xchg
sbb
adc
int3
inc
push
jle
jno
or
out
in
push
sub
int3
or
xor
jmp
or
add
add
insl
scas
lods
fwait
push
or
pusha
push
xlat
lea
clc
ljmp
cs
jmp
mov
pop
push
dec
lret
int3
push
xor
add
lds
jno
dec
sub
sbb
addr16
add
xor
fdivr
mov
inc
jb
cwtl
arpl
push
outsl
cmp
ss
mov
iret
sub
mov
rcr
out
rcrl
jno
jp
notb
jmp
adcl
lret
outsb
mov
cmp
pop
popa
fldcw
dec
lods
sahf
pop
mov
roll
std
adc
and
divb
ret
repnz
mov
ficoml
mov
mov
mov
in
adc
scas
cwtl
pop
cmp
aam
js
fiadds
aas
push
pop
sbbl
dec
imul
jp
hlt
dec
pop
mov
push
mov
xor
push
mov
fcomi
pop
mov
loope
fstpt
nop
aad
test
dec
ret
lds
loope
pop
push
push
mov
loopne
pusha
cld
lock
sub
es
cmp
sub
pop
jne
xchg
add
sub
mov
push
icebp
adc
mov
mov
rorl
outsl
sbb
leave
pop
xor
cwtl
cmp
adc
jge
push
cmpsl
sbbl
ja
jbe
shlb
test
into
adc
stos
hlt
adc
xor
test
cs
ljmp
sbb
iret
imul
scas
rcl
sub
outsb
jmp
inc
inc
scas
fbld
cmpb
inc
push
mov
sub
dec
jecxz
pop
add
cmc
sahf
ja
mov
or
mov
and
pop
xlat
pop
jno
imul
xorl
add
scas
popa
jg
xor
outsb
mov
fisttps
rclb
bound
idivb
rorl
xor
rcrb
add
cld
sbb
inc
les
push
insb
repnz
std
sub
adc
pushf
arpl
pop
fisttpl
inc
xchg
jb
into
imul
into
or
negl
int3
sub
into
imul
lcall
adc
test
mov
add
ds
sub
test
jno
push
push
mov
imull
ja
pop
pop
sti
lock
fs
mov
sbb
fucomi
inc
mov
mov
push
out
fsubrl
sbbl
test
outsb
daa
testb
sahf
jae
push
push
ret
pop
in
fdivrl
mov
fwait
sbb
mov
mov
enter
adc
lret
mov
lods
in
add
pop
dec
adc
fsubr
mov
cmp
cmpsl
mov
add
stos
outsl
sbb
lea
enter
je
pop
cmp
mov
xor
xchg
imul
add
or
jle
mov
into
js
push
fmull
pop
dec
pop
in
dec
outsl
sbb
in
stos
push
and
fsubs
pushf
jo
mov
out
insl
in
shlb
pusha
andb
stc
mov
pop
cltd
and
adc
xchg
dec
pop
js
outsb
or
aam
lods
xor
lret
rcr
jae
fidivrs
cmpsl
in
daa
add
out
jp
push
sbb
shr
stos
mov
out
push
add
lods
test
or
xor
jmp
shlb
mov
mov
lock
mov
inc
rcrl
pop
inc
mov
or
dec
mov
push
xchg
xchg
sub
mov
inc
push
jmp
addr16
stos
into
repnz
push
push
cmp
mov
xlat
movsb
cmpsb
jmp
fdivrl
sbb
negb
int
xchg
mov
mov
test
pop
iret
fucom
push
dec
mov
add
outsb
push
dec
xchg
pushf
fisubl
aas
cs
fsts
lahf
frstor
lret
jns
mov
xchg
iret
insl
mov
xchg
mov
sbb
jecxz,pt
test
inc
xchg
scas
mulb
adc
std
adc
xor
cmpsl
xchg
mov
idivb
jne
push
in
mov
stos
jmp
sub
push
xor
add
cmp
aas
and
jae
aad
mov
jg
nop
xor
xchg
mov
mov
aam
push
das
aas
das
fiaddl
adc
fstps
mov
and
inc
fimuls
jne
dec
outsl
mov
or
aam
jp
or
or
jmp
scas
adc
adc
xor
insb
inc
mov
cmp
mov
xchg
hlt
mov
dec
inc
insl
dec
fwait
bound
scas
imul
fwait
mov
aad
inc
and
sbbl
pushf
cmp
jg
ljmp
add
pop
push
sub
adc
adc
je
push
xor
fadds
mov
lret
xor
call
jno
mov
fstl
call
xor
push
mov
cmp
xor
push
cmpl
addr16
inc
pushf
or
sbb
jmp
std
xchg
xchg
jmp
mov
jno
into
mov
rorb
dec
out
mov
cmc
push
call
lea
shlb
pushf
cmpsb
push
jae
mov
aam
insb
mov
outsb
mov
imul
mov
js
int
add
in
fadds
repz
mov
or
fdivs
shrb
ja
scas
mov
sbb
ret
sahf
test
jmp
popa
bound
mov
and
rolb
sbb
jno
insl
addl
aaa
data16
mov
popa
rorb
add
push
int3
cmp
test
cmp
sbb
sbb
or
fbstp
xor
mov
ret
push
mov
jb
iret
movsb
mov
mov
das
aaa
out
dec
sub
sub
push
test
push
cmp
ffreep
repnz
mov
inc
out
lea
fmul
call
iret
cmp
and
sahf
iret
xchg
call
cmp
shll
push
jp
std
filds
jg
mov
mov
mov
push
pop
ja
insb
aam
cli
imul
dec
mov
mov
fwait
push
sub
js
xor
outsb
add
js
popa
push
dec
jns
lret
mov
push
dec
cld
xchg
outsb
clc
xchg
packuswb
lea
shl
scas
stc
mov
mov
jnp
adc
dec
lret
add
out
sub
push
xchg
into
repz
and
gs
sbb
addr16
and
test
inc
or
jno
jb
movl
test
or
push
dec
push
imul
cltd
adc
into
fildll
mov
dec
scas
fbstp
in
sbb
mov
xchg
sbb
ret
push
out
leave
cltd
and
out
add
mov
daa
sub
lcall
jle
in
jmp
test
inc
roll
int
sahf
pop
pop
adc
dec
fadds
and
bound
ud1
cmpsl
cmpsl
xor
test
je
inc
push
jo
ljmp
ret
idivb
adc
push
scas
lock
adc
in
sbb
xor
gs
icebp
sbb
in
lock
push
add
or
rcrl
fldl
dec
sbb
call
mov
shll
pop
dec
cmp
js
or
cmp
shrb
rorl
fisubrl
inc
test
xor
orb
pusha
mov
sahf
leave
xor
or
fdivl
cmp
test
insb
imul
adc
push
mov
leave
mov
inc
lock
inc
aad
push
jg
xor
ljmp
cmpl
sub
cmp
cli
arpl
adc
pop
iret
mov
xchg
mov
cmc
cwtl
mov
ds
cmp
mov
out
mov
ret
shll
test
xor
xchg
mov
dec
in
cld
push
mov
push
mov
icebp
cmp
cmp
xor
xchg
pop
jge
data16
and
mov
ret
pop
push
push
shrl
aam
cmpsl
add
ds
cmp
fcmovu
xor
add
or
xchg
xchg
mov
leave
loope
arpl
movsl
inc
or
fwait
pushf
ja
dec
inc
test
shufps
xor
add
add
jecxz
mov
es
test
add
jle
push
out
adc
cld
lret
and
lret
fcoml
add
stos
repnz
jl
aaa
and
lods
pop
test
sbb
push
sub
ret
in
xor
enter
cmp
std
and
jno
outsb
xchg
xchg
sub
rorl
or
adc
in
xor
shll
jg
push
fadds
xchg
lcall
test
in
pop
fsts
and
pushf
imul
loopne
into
outsb
loopne
add
lods
testl
aas
testb
or
in
lahf
push
sub
mov
addb
inc
xor
inc
imul
andb
mov
inc
sub
lods
xchg
ja
fs
js
pop
leave
adc
cmp
std
out
add
push
clc
ret
pop
mov
das
xchg
shl
ret
es
adc
lods
cmpsl
push
test
subb
dec
mov
push
add
cwtl
imul
fsub
jmp
fsubs
mov
sub
add
adc
add
pop
sbb
jnp
ljmp
lea
xlat
mov
mov
aad
int3
out
fbstp
mov
scas
jmp
inc
inc
xchg
rorb
cmp
loope
aaa
cmpsl
inc
mov
enter
sbb
imull
mov
out
js
inc
push
cwtl
or
loope
and
inc
clc
jno
pop
divl
clc
stc
mull
mov
cli
jns
mov
loopne
dec
inc
lock
adcb
je
adc
add
xor
cld
inc
test
cmpsb
xorl
clc
ljmp
sub
lea
cmpsl
mov
fsubrs
mov
mov
xor
jg
pop
in
lret
and
ret
mov
mov
idiv
or
pop
sub
fldt
add
or
test
rcrb
imul
inc
mov
adc
nop
fisttpl
in
loope
imul
jne
xor
sbb
dec
mov
adc
fistpl
sub
aaa
pop
xchg
push
mov
out
push
mov
js
insb
ds
fistl
mov
popa
mov
xor
xchg
cmpsb
and
and
push
add
dec
test
enter
jge
insl
and
dec
pop
add
add
loop
mov
xor
inc
mov
in
or
imul
in
push
mov
mov
fidivl
push
addl
pop
push
stos
int3
inc
mov
mov
fcmovnbe
sbb
inc
xchg
jle
push
push
rcll
push
pop
xor
push
sub
adc
xchg
dec
dec
xchg
cmp
fstp
cmp
scas
inc
jmp
ss
test
mov
push
pusha
lret
sub
push
gs
add
add
mov
jle
aad
push
int
hlt
xor
adc
adc
nop
icebp
rorb
nop
repz
mov
dec
mov
inc
cld
mov
mov
push
clc
stos
cmp
js
adc
adc
sbb
pushf
rcrl
cs
jge
filds
aad
cmp
shl
xor
outsl
dec
decb
ret
push
mov
iret
xchg
push
sahf
sub
nop
jp
fimull
into
ja
push
and
fstpl
cmp
cmc
insb
arpl
lret
xor
lods
inc
cmc
and
outsb
scas
and
sbb
in
lods
mov
and
jp
test
or
pushf
mov
scas
add
sub
cmp
mov
mov
xor
and
mov
test
fmull
cmp
fbld
jmp
shlb
push
std
rcrl
std
xchg
adc
push
in
mov
or
add
enter
pop
sbb
in
sub
or
adc
push
mov
push
inc
into
movsb
xor
or
cmp
pop
push
je
fs
stos
mov
xchg
pushl
lock
cmpb
adc
push
jns
outsl
fdivrp
notl
push
jae
xor
data16
inc
sbb
inc
jl
pop
inc
cli
cmp
lds
popfw
cwtl
adc
mov
push
fsub
add
push
sub
cmpsl
xchg
lods
movsb
adc
ds
out
push
cmp
push
lahf
addr16
xor
sbb
xor
mov
xor
push
fwait
cltd
movsl
xchg
and
mov
pop
cmc
movsl
mov
shlb
cmp
lds
imul
adc
pop
jb
xchg
push
push
idivb
call
mov
jp
scas
xchg
jbe
jae
sbb
addr16
jp
pop
pop
fs
mov
daa
dec
mov
movsl
adc
dec
shlb
int3
adc
sub
push
sbb
and
aam
adc
mull
jae
in
loopne
imul
in
ljmp
ficoms
pop
lods
arpl
mov
sub
popl
pop
fstpt
cmp
imul
xchg
std
cmp
pop
mov
sti
insl
or
dec
testb
adc
stos
pop
mov
outsb
stos
sub
and
sbb
loop
add
pop
insb
adc
test
sub
push
and
add
loopne
cmp
dec
stos
mov
ljmp
lods
pop
inc
fs
add
mov
xchg
std
shlb
int3
cmpsb
stc
ljmp
inc
and
or
jge
add
loop
dec
mov
cmpl
fisttps
adc
out
sbb
lds
outsb
xchg
and
mov
aad
sub
rcrl
add
and
popa
mov
cli
jno
leave
inc
aas
and
adc
mov
mov
jne
not
std
mov
jmp
mov
icebp
scas
jp
cwtl
into
mov
lods
inc
mov
xor
outsl
jmp
xor
push
xchg
adc
in
sbb
sti
mov
mov
lahf
fdivp
addl
cmp
outsl
movsl
imul
inc
repz
addb
in
in
pop
mov
xor
xor
mov
dec
jb
mov
lds
mov
mov
loope
lods
push
adc
sti
imul
lds
andb
and
stc
pop
inc
enter
outsb
out
mov
sbb
adc
sub
xlat
mov
add
push
loop
add
mov
and
jg
enter
mov
sahf
movsl
daa
aas
jns
leave
mov
in
aaa
sub
and
jl
inc
fistl
push
jecxz
xchg
shl
mov
test
sbb
ds
xchg
dec
jnp
pop
jae
and
mov
das
cmp
add
sub
inc
insb
repnz
xchg
hlt
jne
lea
cmp
in
jne
cld
jecxz
lret
push
repz
lret
sbb
add
jge
xchg
ss
mov
repnz
fistl
or
push
ss
cmc
pop
mov
pop
loope
xchg
dec
out
bound
jno
push
and
shlb
arpl
jno
xchg
pop
iret
das
je
sarl
lds
aam
push
clc
fisttpl
inc
push
stc
das
out
cmp
dec
inc
cmpsb
je
xor
lret
jae
push
stos
popa
es
push
mov
mov
sbb
cmp
or
das
mov
mov
ss
xchg
push
popf
test
sbb
mov
dec
sub
subl
mov
mov
addr16
sbb
movsb
mov
nop
ja
pop
fcmovu
into
mov
ror
xor
cmp
loop
iret
pop
adc
incb
sub
xchg
inc
nop
pop
cmp
cwtl
in
sbb
lcall
pop
aad
mov
fldcw
xchg
loopne
jno
dec
mov
jbe
fldl
dec
push
xor
out
and
or
mov
mov
push
mov
aaa
jl
mov
xor
dec
cli
fcoml
xor
test
sahf
jmp
faddl
loopne
mov
loope
iret
sahf
jl
pop
or
jo
dec
insb
mov
fildl
in
sti
add
aam
adc
xor
dec
mov
aad
je
shl
popf
pusha
add
or
fbld
test
cli
stc
push
sbb
lods
jbe
jb
pop
mov
das
jno
sub
iret
pop
jb
and
bound
loop
ss
mov
add
jbe
aas
cmc
mov
add
cwtl
and
popa
pop
js
repz
cwtl
mov
sbb
dec
jmp
xchg
insl
or
mov
xchg
iret
leave
pop
call
mov
sbb
mov
repnz
mov
mov
mov
jbe
or
inc
jl
xor
jmp
cmc
jp
cmp
shr
add
ds
push
cmp
adc
pushl
mov
aaa
jmp
out
aas
je
sahf
mov
mov
cmp
cmp
pushf
cs
bound
imul
pop
jge
out
push
push
xor
stc
cmc
sbb
lods
jbe
adc
sti
pusha
and
lret
dec
mov
pop
mov
add
ds
mov
mov
add
xor
add
mov
es
jl
mov
mov
sbb
sub
out
mov
movsb
pop
pop
imull
outsl
sbb
xchg
jle
loope
shlb
nop
testl
or
jg
pop
outsl
pop
cmp
das
or
add
enter
clc
pop
mov
js
in
negl
icebp
inc
fisubl
fldcw
out
xchg
mov
xchg
mov
out
daa
mov
imul
mov
orb
sti
sub
std
push
add
popa
pop
fwait
push
mov
jns
fcmove
add
aas
sarb
pop
xor
xor
jmp
addl
pop
jbe
jne
or
xor
mov
leave
out
daa
inc
cmp
int
cmpsl
iret
sub
scas
stc
mov
inc
aam
test
loopne
sahf
or
xor
incl
push
sbb
icebp
stos
push
es
je
insl
movsl
pop
inc
inc
mov
int3
xchg
xor
push
cmp
adc
jb
push
mov
mov
pop
lea
inc
arpl
mov
xchg
push
dec
movsl
and
lods
sub
mov
sbb
inc
cmp
pop
inc
xor
lock
fiadds
adc
imul
xchg
push
in
fildl
sbb
imul
clc
mov
test
add
fimuls
in
sub
lea
inc
fistpll
jl
xor
mov
add
jb
mov
mov
repnz
lea
hlt
ja
adc
jl
sbb
in
sbb
cld
stc
scas
jl
adc
jle
sbb
cmpsl
int3
ja
pop
cld
sbb
arpl
or
es
xchg
push
test
and
ljmp
jecxz
add
xor
pushf
fidivrs
xchg
or
add
dec
jnp
or
pop
add
fnsave
sub
mov
scas
jl
movsl
data16
mov
and
stos
cs
repz
mov
sub
rcl
pop
gs
frstor
push
jecxz
popf
push
sahf
inc
and
and
pop
js
ret
movsl
mov
adc
jnp
xor
lock
adc
pop
dec
mov
jmp
jno
xchg
insl
popa
or
cmp
pop
lret
shll
push
adc
mov
fdivs
cli
mov
movsl
movsb
xchg
jne
lahf
je
std
pop
test
repz
and
pop
in
sub
jge
push
and
mov
test
int3
adc
mov
xchg
dec
es
cmp
xchg
testl
mov
jmp
les
push
adc
ret
xchg
cmp
fwait
jmp
cmpsb
push
loope
xor
jne
roll
sub
mov
lods
xchg
inc
add
outsb
mov
jno
les
push
xchg
fwait
jo
mov
es
stos
jl
iret
pop
nop
outsl
decl
jmp
stos
sub
stc
xchg
icebp
fsts
inc
inc
inc
cmpsl
scas
xlat
mov
mov
scas
insl
push
cs
and
cmp
cmpsb
mov
lret
cmpsb
mov
sbb
add
xor
jge
adc
or
cmc
push
dec
movb
testl
flds
loop
sub
inc
jmp
fcoml
add
aam
push
xor
mov
push
adc
iret
ja
mov
and
gs
out
xchg
or
imul
push
jne
repz
int
inc
lock
xchg
mov
cld
stos
jb
leave
insl
pop
in
mov
mov
dec
mov
lods
test
cmp
test
cmp
into
mov
xor
loopne
movl
adc
insb
fisttpll
aaa
lea
fidivl
fidivs
inc
inc
out
xor
arpl
shlb
jmp
xor
js
or
sub
sub
orl
inc
mov
dec
adc
call
aas
adc
fs
mov
push
imul
fisubs
bound
and
jge
cmpsl
xlat
lcall
jp
out
add
push
in
subl
jnp
icebp
adc
pop
loope
leave
dec
jnp
addr16
aad
and
cmp
inc
mov
lea
sbb
mov
mov
dec
ror
subl
mov
int
dec
stc
xchg
sub
pop
inc
and
stc
notl
mov
rcl
push
ficoms
repnz
loop
adc
insl
fcmovnb
cmp
popa
je
and
repnz
orl
or
in
icebp
hlt
ja
cmc
out
outsb
into
imull
lods
dec
cmp
add
insb
mov
jae
or
dec
out
fiadds
xor
out
fidivs
mov
add
add
outsl
dec
sbb
and
jnp
aaa
test
mov
fwait
lods
inc
cli
mov
in
push
sti
hlt
fdivs
adcb
sbb
add
hlt
cmp
and
fildl
das
or
or
jae
sub
test
adc
ljmp
jp
add
inc
ljmp
inc
pusha
push
adc
push
enter
mov
mov
enter
mov
mov
jp
jmp
rolb
sub
insb
ja
aam
jl
std
mov
js
stos
test
sub
dec
jae
insl
or
mov
scas
daa
adc
mov
data16
popf
je
stos
inc
movsl
leave
outsl
sbbl
imul
and
in
adc
jmp
cmp
mov
enter
mov
pop
mov
aas
rclb
push
dec
pop
dec
cmp
pause
mov
shrb
int3
xor
pop
out
fisubl
jl
flds
pop
es
pusha
jecxz
lea
stos
iret
mov
fsubr
loopne
ds
sbbl
push
push
lods
cmpsb
sarb
bswap
in
add
ja
pop
lods
mov
in
cmc
xchg
sbb
out
test
cmc
dec
call
mov
push
ss
mov
sbb
enter
sub
int3
pop
mov
icebp
jno
inc
xor
dec
je
xlat
mov
jecxz
je
loopne
dec
daa
mov
pop
xchg
cmc
sub
stc
rorl
push
lods
mov
imul
mov
xor
enter
iret
dec
in
ljmp
lahf
out
outsl
mov
data16
pop
fcomip
jae
inc
movsl
int3
cmp
lahf
mov
aad
pop
pop
leave
daa
cmc
mov
rcll
lods
daa
sbb
divl
mov
repz
adc
sub
sbb
mov
ret
mov
mov
ljmp
or
testl
mov
stos
inc
mov
addr16
push
out
pop
shll
fists
into
dec
pop
scas
aam
mov
out
negl
hlt
ret
and
pusha
fdivp
shll
ds
mov
cltd
sub
or
cmp
out
cmpsb
mov
scas
sub
stc
mov
push
push
jno
test
shrl
sarl
jmp
stos
movsl
dec
inc
pop
clc
adc
fidivrl
std
movsb
xor
rorb
fisubs
imul
or
pusha
in
es
ljmp
jnp
mov
mov
iret
jge
add
jle
fs
decl
cmp
add
jp
pop
xlat
adc
xchg
movsl
inc
dec
push
movsl
pop
sbb
divl
aam
mov
imul
sub
jmp
mov
pop
sarb
rclb
sbb
xchg
adc
xchg
js
jne
enter
cmp
inc
shll
js
mov
rolb
bound
ja
lahf
shll
rolb
adc
adcl
add
aad
lock
lods
push
inc
pop
pushl
sub
xchg
sbb
cmc
js
pop
pusha
out
push
imul
out
push
or
or
or
adc
mov
shl
xchg
fistps
rclb
mov
out
nop
scas
movzwl
rcll
test
inc
push
scas
xadd
ja
adc
push
mov
mov
arpl
xor
and
dec
xlat
cld
aad
into
dec
stos
rolb
adc
rol
nop
dec
mov
loop
cmp
xor
sbb
mov
test
cmp
mov
jmp
push
imul
hlt
xchg
adc
or
cli
insb
fbld
mov
dec
jle
xlat
and
add
out
arpl
in
mov
adc
push
int
loop
mov
sub
pop
loope
rolb
cmp
cmp
in
mov
sbb
sbb
sbb
sarl
subb
mov
and
xchg
test
add
stos
sbb
sub
in
dec
and
psubsb
jmp
lahf
ret
add
push
push
pop
pusha
sbb
arpl
fisubs
inc
jmp
mov
push
lods
push
sub
mulps
mov
loop
pop
popf
or
lcall
pusha
push
popf
pop
xor
mov
push
inc
mov
dec
out
jmp
in
adc
loop
subb
testl
mov
jg
sbb
imul
or
and
imul
sbb
xor
or
aam
fldt
es
jecxz
inc
fiadds
mov
ss
movsl
push
jb
mov
es
adc
daa
cmp
lock
add
mov
push
inc
test
bound
jo
repz
mov
call
dec
ret
mov
dec
add
rcrb
mov
inc
mov
and
mov
or
push
int3
jb
add
xor
add
lea
mov
sbb
push
push
push
xchg
mov
jmp
sub
out
or
add
int
dec
add
sub
mov
test
or
mov
shrl
icebp
loope
push
adc
cmp
mov
std
ret
xlat
sbb
repnz
and
inc
xchg
rcl
jbe
scas
mov
jp
sbb
fnstsw
pushf
lcall
shlb
push
pop
popa
pop
jg
popf
sub
dec
je
push
les
daa
popf
dec
arpl
pop
dec
popa
sbb
dec
insl
mov
xor
cli
mov
cltd
fnstenv
lret
or
ds
sub
mov
cmp
add
sbb
xchg
test
outsb
ljmp
test
test
lock
or
lret
mov
push
jae
lds
dec
sbb
fdivr
insb
jo
movsl
fisubrs
push
jge
lods
or
test
mov
dec
mov
rclb
jae
iret
daa
pop
pop
xchg
test
push
cltd
in
aad
mov
aaa
cmc
dec
outsb
mov
mov
repz
xchg
cld
testb
sbb
fidivs
popf
ds
dec
sub
mov
hlt
data16
adc
jb
inc
lea
ret
cmp
out
jno
scas
lods
mov
nop
jecxz
icebp
sub
push
inc
pop
mov
adc
ret
cmp
pushf
out
xor
pop
inc
pop
in
out
int
jl
push
scas
pop
inc
popf
dec
add
ss
pushf
scas
sbb
cltd
icebp
lds
pop
stc
adc
push
xor
lods
push
incb
adc
sub
jle
push
mov
xchg
outsb
xchg
jne
push
mov
mov
xlat
sub
int
push
cli
xor
mov
push
cmp
dec
movsb
xor
loope
cli
stc
add
rol
cmp
sbb
and
enter
daa
je
std
data16
or
push
ret
rclb
cmpb
jne
xor
pop
out
dec
test
mov
mov
sub
data16
les
adc
fstps
stc
fcoml
movsl
pop
imull
mov
cmc
sbb
mov
rcll
outsl
lahf
push
jno
inc
mov
or
mov
push
pop
mov
xchg
dec
fsubrl
cwtl
sbb
daa
cmp
test
aam
jb
or
repz
lds
pop
jno
xor
jecxz
hlt
xor
std
int3
and
imul
add
dec
mov
mov
stos
popf
cmp
bound
cmpsb
jae
ret
mov
mov
in
push
push
std
mov
pop
rorb
js
pop
ret
push
into
cltd
imul
stc
xor
add
data16
xor
and
fcmovu
test
out
xchg
fwait
addb
jecxz
pop
adc
and
out
lea
loopew
jae
jne
sbb
or
iret
xchg
pop
jno
jmp
cmp
lret
and
inc
push
in
shll
adc
pop
and
mov
adc
mov
dec
shrb
out
inc
repnz
pushf
adc
mov
adc
mov
insl
sub
adc
test
push
or
pusha
xchg
mov
cmp
cltd
call
lahf
xor
stos
cmp
jge
pop
dec
xlat
adc
pop
adc
outsl
lods
mov
ds
push
mov
xchg
gs
hlt
repz
lcall
mov
sbb
lds
faddl
pop
and
and
pop
data16
xor
enter
xchg
jmp
in
sbb
adc
xchg
xor
cmc
push
cmpsb
mov
adc
mov
dec
xchg
xor
jne
pop
add
aad
push
jg
and
fstpt
dec
jmp
aam
fidivl
mov
jae
or
sbb
xchg
mov
or
xor
repz
sub
mov
ss
mov
lds
aam
cwtl
mov
xor
cs
iret
pushf
jns
test
loopne
movsl
rcrb
add
popf
push
jae
pop
push
adcl
sahf
imul
clc
icebp
jbe
xor
push
xchg
or
pop
aaa
mov
jg
cltd
cmp
xor
icebp
pop
jmp
int3
dec
lcall
cmc
adc
rcll
dec
sub
rcll
cmp
or
dec
out
stos
inc
pop
sbb
pop
sub
cmp
add
sub
mov
les
push
shrb
in
popf
xchg
stc
das
add
cld
sub
xchg
push
xor
in
push
loop
in
and
mov
jmp
or
jns
pop
jge
je
jne
pushf
sbb
cltd
mov
xchg
push
mov
inc
insl
pop
lahf
cmpsb
push
loop
cmc
int3
icebp
mov
in
add
push
xchg
xlat
push
dec
mov
adc
pop
push
xor
cltd
jo
ret
mov
js
inc
int3
xchg
add
mov
les
inc
mov
pop
movsl
scas
sub
sbb
pop
arpl
ljmp
lock
mov
and
aas
cmp
iret
push
sahf
test
or
std
sub
mov
dec
adc
std
jmp
jp
mov
test
jp
rcrl
xchg
iret
push
inc
xor
dec
pushl
dec
pusha
fstpl
mov
daa
dec
mov
lret
push
add
in
movsb
cmp
aas
adc
push
pop
mov
mov
jl
fwait
adc
cmpsb
das
dec
dec
sbb
jmp
filds
orb
xchg
jns
sbb
add
fwait
into
jl
test
ret
test
xor
ljmp
sarl
jnp
cmp
ret
andl
add
dec
pop
insb
ret
cli
js
test
mov
mov
push
loopne
aam
mov
lret
aas
jnp
pushf
pop
fucom
sub
or
add
test
lods
add
or
or
jecxz
push
js
push
arpl
fs
movb
punpckhwd
ret
mov
jae
scas
int
je
ss
xchg
faddl
aam
sub
sti
inc
jle
shr
test
sar
addb
inc
lods
jae
stos
or
push
cltd
xchg
mov
cmp
mov
dec
pop
in
inc
pushf
mov
leave
lcall
add
orl
push
movl
inc
jns
dec
shrl
jmp
xor
or
mov
or
pop
inc
pop
pop
popf
mov
mov
mov
mov
mov
sbb
jb
std
sbb
inc
mov
mov
mov
mov
sub
int3
xor
icebp
cmpb
push
push
dec
pop
ljmp
xchg
ret
ss
repnz
push
or
pop
xlat
jbe
add
inc
lock
test
clc
mov
js
mov
and
in
test
cmpsb
les
mulb
mov
gs
cs
lods
insl
jne
jne
lret
cmpsb
dec
dec
and
cmp
pop
xchg
insb
aad
hlt
stos
inc
mov
int
mov
mov
ja
pop
push
push
mov
clc
mov
pop
sub
push
adc
pop
adc
push
fimuls
mov
mov
cmp
or
pop
sti
imul
sub
sbb
je
pop
dec
stc
imul
push
pop
hlt
jg
in
and
push
pop
cmp
lret
mov
adc
adc
jl
fbld
mov
enter
les
dec
adc
cmp
cmpsw
in
arpl
and
jecxz
call
cltd
push
jge
mov
add
mov
push
popa
insl
cmp
xchg
ret
mov
push
cmp
xlat
xor
push
xor
loop
pop
cmp
xchg
dec
mov
outsl
sub
cmc
mov
xchg
rclb
gs
sbb
call
lret
or
loop
xor
and
add
in
pusha
cmp
or
mov
jg
mov
sarl
mov
sbb
adc
lea
push
rorb
xor
dec
lcall
outsl
mov
or
inc
mov
or
sub
out
aam
andl
mov
jae
push
or
arpl
mov
jmp
repz
hlt
or
ja
js
and
subb
mov
pop
lods
inc
dec
jmp
xchg
imul
mov
daa
out
sti
mov
negb
mov
adc
sbb
cmpsl
mov
xchg
jmp
push
dec
xchg
xor
adcl
cmpl
sub
push
push
sti
je
incb
aam
outsb
xchg
rcll
sub
pop
push
ret
add
aam
hlt
jmp
adc
pop
add
shl
lret
cwtl
loope
xchg
rorb
sbb
mov
cmpsl
iret
pop
ror
imul
ret
pop
fidivl
rolb
aad
repz
jmp
inc
dec
ficoms
pop
inc
inc
mov
push
dec
or
test
clc
loop
fsubl
int3
jmp
xchg
scas
cmc
mov
scas
cli
and
cmp
mov
mov
lds
rorb
js
fstpl
decl
jecxz
pop
mov
mulb
jbe
mov
fsubl
mov
xchg
mov
xlat
push
mov
or
dec
mov
addr16
cmp
icebp
adc
hlt
std
inc
fnstcw
add
dec
pop
lods
sbb
shl
mov
jg
mov
cmp
add
outsb
int3
cli
xchg
icebp
int3
mov
fs
push
out
xchg
loopne
pop
sub
xchg
mov
pop
push
cmp
hlt
xor
enter
add
push
push
mov
push
fldenv
sbb
push
lret
adc
cs
mov
mov
cmp
xor
add
idiv
sbb
lea
fs
xchg
push
stc
fwait
hlt
jbe
ret
loopne
popf
into
mov
ret
ret
scas
cmc
subl
jmp
mov
fs
push
fneni(8087
mov
push
frstor
divl
mov
int3
adc
pop
sti
adc
jp
sub
mov
clc
cmp
out
arpl
add
subl
test
subl
add
into
addl
jg
or
xchg
in
dec
out
pop
outsb
jae
ficomps
add
xchg
lcall
mov
pop
or
clc
push
imul
sbb
push
mov
inc
pop
adcb
cmp
gs
or
dec
mov
or
ja
xor
inc
lret
pop
in
subl
cmc
xor
mov
and
jecxz
test
xchg
sub
or
in
fdiv
xchg
aad
iret
push
jbe
cmpsl
jecxz
test
aaa
xor
xor
jl
addr16
out
push
repz
push
out
inc
stos
inc
negl
mov
sub
hlt
aaa
sbb
out
loopne
cmc
lret
iret
stos
and
orl
mov
and
ss
pop
iret
and
add
add
inc
dec
mov
jo
push
xchg
and
pop
xchg
lahf
les
les
cltd
stc
cli
mov
daa
push
mov
ret
or
mov
or
ja
and
sbb
or
movsb
add
sbb
pusha
pushf
mov
inc
push
add
mov
mov
sbb
mov
jge
std
cmpsl
mov
pop
add
cmpsl
es
inc
cld
or
add
sbb
scas
pop
outsb
pop
int3
adc
mov
jb
js,pn
xchg
test
pushf
mov
cmp
pop
in
popa
xchg
hlt
dec
popa
in
jp
std
loop
cld
repz
add
pop
daa
xchg
cld
fcoml
or
dec
pop
jp
loope
decl
xor
cmp
lahf
addr16
negb
or
sbb
sub
sar
enter
stos
push
out
cmc
jno
aas
xchg
rcrb
cltd
into
dec
mov
sbb
addr16
xchg
or
rorl
scas
and
xchg
pusha
icebp
pushf
push
iret
adc
aam
jo
js
push
dec
adc
sbb
sbb
in
loopne
sbb
daa
sahf
popa
mov
mov
mov
movsl
add
xor
add
push
or
fstl
mov
xchg
push
cld
mov
dec
push
ljmp
jle
mov
aas
cmp
lcall
aas
push
adc
lret
lahf
loop
into
mov
xchg
xchg
mov
dec
in
mov
aam
lods
loopne
jmp
insb
or
pop
mov
jge
jecxz
xor
adc
mov
dec
pop
xlat
dec
cli
adc
enter
and
aam
pop
inc
pushf
cmpsb
mov
rcrb
xorl
lret
out
xor
shrb
in
call
xor
cwtl
mov
in
daa
sub
insl
mov
cld
mov
jae
js
dec
mov
adc
xchg
fisttpl
mov
jg
jle
pop
jge
cmp
filds
ss
mov
mov
jmp
cwtl
mov
inc
leave
scas
xchg
jecxz
xorl
and
jg
push
pushf
and
in
sbb
rcr
cmp
dec
mov
test
popa
cs
sbb
enter
xchg
jecxz
loopne
insl
imul
or
mov
ja
int
sahf
dec
xor
adc
sbb
push
cmp
xor
repz
test
pop
dec
cmp
cld
out
decb
xor
jo
mov
xor
fistps
mov
or
pop
mov
sub
sbb
aad
mov
aaa
rclb
mov
clc
es
sbb
cmp
push
sub
pop
lock
rcll
dec
mov
mov
out
testb
mov
insb
add
addr16
sub
mov
cmp
jmp
add
out
ret
into
inc
mov
loopne
mov
adc
lock
sarb
lds
movsl
mov
gs
jmp
lahf
mov
in
out
aaa
mov
std
or
mov
enter
xlat
daa
and
fcmovnu
int
in
or
insl
mov
xor
imul
lock
test
rcrb
lcall
imul
mov
in
and
test
orps
in
lea
dec
stos
add
adc
xchg
sti
jl
lret
mov
xor
sub
outsb
leave
mov
xchg
hlt
nop
test
hlt
ret
gs
and
cltd
xchg
lcall
and
in
dec
shll
mov
push
bound
xchg
enter
sbb
movaps
pop
sub
fstl
add
mov
mov
mov
lods
sub
dec
pop
cmp
scas
cmp
int
inc
jns
dec
cmp
imul
and
mov
pop
imul
andl
std
popa
inc
pop
mov
dec
data16
ds
jg
mov
pop
idiv
or
je
imul
cltd
fwait
loope
jns
and
fiaddl
outsl
insl
pop
jmp
lahf
pop
xorl
push
add
xchg
je
dec
mov
mov
cmp
fists
dec
push
popf
ss
mov
mov
xor
lea
push
fidivrs
cmp
fcomps
mov
xor
data16
aaa
rcl
shlb
pop
shl
jae
inc
lret
xor
xchg
mov
xchg
sbb
adc
cs
sbb
lds
sbb
lods
mov
adc
add
mov
mov
flds
xor
pop
add
sub
push
or
pop
arpl
dec
cmp
clc
xchg
adc
aad
mov
add
pop
mov
js
push
pop
mov
mov
stc
int
jb
sbb
js
add
jne
lods
jno
cmp
xlat
cmp
mov
sbb
arpl
lret
mov
cmp
inc
aam
add
fimull
movsb
sub
lods
jae
and
dec
sub
adc
cmp
push
neg
xor
cmpsl
jbe
pop
out
loop
mov
in
int3
xor
add
loope
mov
jo
mov
int
aad
dec
int3
adc
adc
mov
aam
lret
fimuls
cmpsl
fmuls
jle
push
scas
xor
sbb
out
add
xchg
ret
and
mov
dec
xchg
fistps
repnz
outsl
loopne
xor
cmp
in
cmpsb
pop
inc
xor
les
xchg
add
jp
rorb
inc
test
je
lds
out
rcl
mov
out
jno
jecxz
xchg
nop
or
repz
cmp
mov
cld
xor
push
cmc
push
mov
sbb
push
iret
test
mov
add
sbb
shll
mov
out
ret
dec
pusha
push
and
out
jb
gs
and
aas
xchg
enter
ja
mov
cld
mov
push
arpl
adc
andl
lcall
xor
mov
and
sbb
lea
sbb
add
scas
jb
or
std
adc
mov
insl
sbb
popa
ljmp
cs
xchg
mov
popa
pop
pop
jo
cmp
jae
sbb
or
test
out
ljmp
push
xchg
pushf
ret
insl
sub
xor
jg
call
outsl
mov
pop
lods
push
jo
xchg
push
insl
sub
jnp
jbe
lock
arpl
cmpl
lods
push
cld
adc
mov
mov
popf
fstps
dec
sub
fmuls
jnp
xchg
into
cmp
inc
sbb
sub
xor
nop
push
sar
mov
cli
leave
leave
mov
fnstenv
out
xor
in
jg
ss
jno
or
cmp
scas
fwait
xor
push
add
scas
push
popa
cwtl
push
cmpsl
and
jecxz
xor
cmp
inc
push
cmpsl
sub
ret
inc
test
dec
rorb
sub
lock
xchg
jmp
adc
sbb
daa
inc
jo
repz
xlat
adc
inc
add
nop
insl
test
adc
stc
mov
and
jns
xchg
outsl
push
push
test
mov
pop
and
push
leave
scas
sbb
shrl
cmp
int3
stc
mov
cmp
shll
sbb
adc
aam
mov
aad
mov
inc
push
fisubrs
cli
pop
sbb
out
daa
repnz
inc
ficomps
jo
pop
pop
adc
cmp
jne
movsb
pop
sbb
push
jle
inc
inc
sub
outsb
das
and
fmull
mov
or
outsb
mov
sub
cmpsb
sahf
inc
roll
in
fmuls
add
xor
push
push
mov
pop
nop
xor
add
push
mov
inc
pop
pusha
ljmp
mulb
jmp
push
jle
fstps
outsb
shl
inc
jae
sbb
dec
loope
stos
faddl
movsb
in
jb
xor
fimull
mov
pop
mov
loop,pn
and
mov
xor
fidivl
pop
sub
jnp
mov
addr16
mov
ss
mov
jno
std
out
addr16
pop
movsb
pop
sahf
xchg
lea
or
repz
fpatan
shlb
std
stc
icebp
push
inc
es
xchg
imull
xchg
repz
iret
mov
add
pop
adc
mov
jmp
pop
mov
mov
adc
in
mov
sub
and
aaa
jmp
push
into
cmp
xor
fsubrs
adc
push
subb
orl
push
out
lea
fwait
dec
pop
adc
add
push
jno
rcrl
dec
dec
cmp
adc
pop
mov
fs
dec
jnp
xchg
mov
iret
and
fidivs
cli
outsb
js
cmc
adc
mov
xchg
pop
out
sbb
jge
enter
into
subl
loopne
xor
mov
loop
lods
lret
test
jbe
pop
cmpsl
mov
das
pop
and
xor
or
in
and
lods
leave
jb
push
adc
adc
shll
dec
pusha
clc
addl
jne
cwtl
inc
ja
mov
xor
xor
movsb
dec
adc
push
in
sub
or
pop
js
mov
sarl
fadds
jbe
jl
mov
test
test
jbe
xchg
and
sbb
das
sbb
jne
push
jbe
pushf
ret
clc
sbb
or
ja
inc
xchg
pop
cltd
adc
dec
aam
add
js
mov
mov
popa
subl
movsb
mov
sbb
fimuls
cmp
mov
push
jno
inc
adc
inc
movsl
pop
jecxz
lret
popf
lock
fldcw
scas
sub
xor
pusha
push
sub
fwait
inc
xor
cld
scas
shrl
pop
pop
mov
in
mov
jl
imulb
adc
push
and
aad
mov
fisttps
loopne
fcoms
dec
in
push
pop
out
push
or
outsb
dec
je
dec
gs
xor
ret
das
stos
xor
cld
aam
jo
jle
je
dec
hlt
cli
out
data16
and
jmp
loope
jl
aam
push
aam
mov
jmp
es
inc
add
mov
mov
in
lds
cmp
out
sahf
mov
inc
loopne
pop
push
or
repnz
nop
or
mov
sbb
or
movsl
pop
fldcw
rcll
xchg
dec
or
mov
cmp
push
bound
sahf
or
dec
xor
mov
mov
sbb
pop
enter
call
addb
xor
push
cs
cmpsl
adc
jge
or
push
pop
aad
or
insb
outsb
cltd
sti
cmpl
popf
mov
stos
fiaddl
sub
sbb
test
hlt
add
mov
ss
popa
sub
adc
mov
cmp
mov
out
adc
adc
pushaw
call
cs
inc
jle
cmc
stos
xor
imull
lcall
cmp
adc
jge
divl
stos
data16
mov
xchg
loopne
mov
imul
sbb
int
mov
pop
push
lret
cmp
out
jo
sbb
test
adc
push
lcall
insb
cmp
in
sti
stos
pop
add
movsb
mov
aas
cltd
xchg
cli
andb
insl
mov
popf
inc
push
mov
adc
pop
fcomp
xor
dec
in
xchg
sub
dec
sbb
pop
sbb
sub
cmp
test
add
pusha
iret
in
stc
lahf
popa
mov
push
aad
lcall
test
or
fldt
inc
idivl
test
stos
mov
push
call
lods
scas
or
movsl
cwtl
subl
ljmp
inc
mov
cmc
mov
push
push
dec
ficoms
pop
sub
mov
mov
dec
mov
pop
mov
dec
mov
pop
cmpsl
sbb
lcall
push
int
mov
je
and
sbb
dec
or
mov
sahf
iret
mov
je
inc
and
out
inc
outsb
sbb
es
pusha
adc
push
je
hlt
les
xor
xchg
adc
push
cmp
sbb
pop
loopne
mov
jbe
jl
fbld
neg
sub
xchg
pop
push
mov
sbb
out
inc
push
pop
mov
sub
xchg
call
mov
jl
aad
xchg
xchg
test
push
imul
fstp
lea
add
imull
mov
dec
fs
and
testb
popa
ja
dec
dec
cmp
cmp
jne
test
stc
and
cmp
movsl
sti
jno
jp
sahf
das
aaa
decl
loope
lret
pop
es
call
hlt
je
aas
cwtl
sub
pop
xlat
in
sbb
cmp
into
adc
jne
lea
and
outsl
test
xor
in
xchg
shll
add
loope
push
cmp
push
mov
arpl
jae
xchg
push
fbstp
xor
das
xchg
es
fidivl
push
mov
cmp
cli
xchg
out
pop
adc
push
cmp
pop
call
mov
cwtl
add
mov
and
stos
adcl
mov
mov
jg
test
loopne
jnp
cltd
cld
push
paddsb
inc
jns
mov
pop
inc
xchg
lret
cmc
imul
adc
jae
pop
xchg
mov
inc
sbb
mov
mov
insl
and
sbb
and
scas
sub
incl
push
sub
jle
add
adc
jge
push
ret
ss
pop
inc
mov
mov
xchg
mov
sub
inc
ret
mulb
dec
jno
and
mov
jae
shlb
cmp
test
jbe
sub
add
pop
sub
jge
adc
xor
sub
scas
adcl
clc
loopne
mov
es
jle
lea
lcall
adc
test
and
sbb
fmull
lds
out
cmp
shll
out
xor
mov
mov
jo
dec
and
mov
mov
fmull
and
fs
ficoml
mov
xor
dec
xchg
and
mov
mov
cmc
jge
adc
xchg
cs
adc
mov
inc
mov
and
mov
add
repnz
cmp
pop
mov
lea
ret
jo
std
push
and
or
fmul
sbb
or
sbb
data16
jmp
xor
ds
fwait
pop
jns
push
into
ret
xchg
jmp
pop
cmp
and
xor
cmp
aas
fstpt
dec
sbb
jg
sub
fisubl
scas
fs
loope
or
mov
cmpsl
push
sbb
outsb
lock
mov
out
gs
or
mov
stos
mov
mov
ss
repz
out
cmp
push
xchg
lods
ret
rcrl
jo
mov
sbb
cmpsl
mov
pop
lods
mov
cmp
add
sbb
push
nop
lret
inc
pop
pop
adc
fdivs
cmpsl
scas
dec
push
shlb
mov
fwait
lea
mov
sbb
fstpt
icebp
push
sbb
push
out
ds
ljmp
xchg
xchg
inc
cmp
mov
iret
ficompl
cltd
fmul
inc
pop
icebp
arpl
shr
ss
xor
jne
dec
mov
add
pusha
adc
mov
iret
filds
out
sahf
xchg
adc
pop
mov
add
rorl
cmpsb
sbb
xor
add
loop
test
test
xchg
int3
push
pop
jl
aas
pop
scas
jnp
inc
mov
pop
dec
fadds
repz
sub
xlat
lods
ret
das
inc
sbb
inc
pusha
mov
out
fildll
pusha
jle
and
xchg
hlt
push
jecxz
adc
mov
pop
or
mov
mov
mov
inc
xor
dec
inc
dec
ja
dec
lcall
inc
xor
lret
lret
sbb
sub
jl
pop
aad
sbb
js
inc
jb
add
ja
sbb
inc
xchg
push
clc
mov
sub
les
pop
out
ja
rcll
aad
cmp
int3
notl
in
rcr
ret
add
inc
ret
cmpl
or
retw
movb
push
cmp
jbe
xor
push
orb
and
dec
pop
div
les
sub
add
shld
je
or
pop
inc
mov
gs
add
mov
inc
sub
dec
push
inc
xor
add
insl
je
lds
ret
xor
jns
fldt
dec
xor
sahf
xor
mov
lcall
jo
and
bswap
adc
sbb
inc
mov
jle
cmp
jo
inc
ljmp
je
pop
pop
mov
rclb
nop
inc
inc
sbb
jmp
pop
adc
lods
movsl
jno
lcall
and
ret
incl
or
pop
jae
sbb
xchg
mov
dec
pop
faddl
clc
jmp
lret
pop
mov
cmpsl
mov
and
add
push
inc
stos
pop
lods
fidivrl
lock
inc
add
jae
pop
popa
pop
pop
or
cmp
clc
lret
cs
shl
out
cmp
stc
push
popa
fists
rcr
pop
adc
sbb
pop
cmp
in
les
mov
and
rcl
mov
shl
xchg
xchg
add
sahf
loop
andl
cwtl
or
cmp
mov
sahf
repnz
outsb
fwait
std
push
shll
xchg
sbb
popa
push
dec
dec
stos
fsts
fwait
inc
pusha
shr
sbb
xor
rclb
repz
jbe
cmpsb
or
stc
xchg
xchg
int
mov
jne
jbe
jns
hlt
cmpsb
cmp
addr16
jbe
inc
jg
mov
fsts
subl
stos
stos
inc
subl
stos
ret
mov
dec
sbb
add
cwtl
ds
or
push
dec
clc
adc
test
pushl
add
and
cmp
fsubr
lods
jl
cwtl
pop
scas
or
lahf
xchg
in
and
push
cmpb
jb
loope
imul
cmp
ret
hlt
push
or
jae
xchg
mov
mov
aad
add
inc
sbb
mov
xor
dec
jle
cld
mov
lds
sbb
mov
inc
jb
mov
imul
lods
inc
jne
push
add
dec
sub
cmpsb
sub
lea
test
jb
pop
xchg
add
test
jge
lock
pop
mov
mov
xor
sbb
ret
push
ret
xor
out
aam
sbb
sub
pop
loope
orl
push
mov
dec
inc
jg
adc
pop
shrl
lods
jge
out
dec
test
cmp
mov
pop
mov
jmp
cmpsb
rcr
mov
jnp
cmp
stc
jno
mov
sub
cmp
outsb
mov
xchg
mov
loope
iret
xor
mov
mov
cld
cmp
dec
jecxz
inc
and
popf
adc
jmp
mov
movsl
add
and
daa
or
into
fwait
or
fwait
es
lods
inc
icebp
push
int3
pop
adc
mov
or
repnz
dec
mov
lahf
dec
mov
outsb
imul
or
add
sahf
pop
mov
add
insb
push
jle
inc
ds
rcrb
dec
daa
inc
shlb
inc
sbb
cwtl
jne
dec
push
or
mov
sar
in
jae
sahf
sbb
mov
mov
pusha
mov
push
mov
sub
push
into
push
test
xor
popf
sbb
or
sbb
aam
xchg
push
add
and
pop
ss
sub
int3
jae
iret
mov
or
rolb
adc
or
inc
push
ret
repnz
outsl
rorl
xchg
shld
mov
or
clc
ss
jge
inc
mov
jne
cmp
adc
out
sbb
aas
pushf
std
pop
data16
in
out
inc
repz
mov
aas
js
add
xor
leave
cmp
sti
push
int3
add
sbb
xor
fsubrs
and
shlb
jnp
outsl
xchg
scas
push
bound
inc
sbb
and
cmp
jp
mov
clc
aaa
push
push
arpl
gs
jp
into
out
xchg
jno
cwtl
push
or
inc
jg
sub
jbe
ds
xchg
or
and
lds
mov
das
int3
jmp
int
and
push
dec
mov
js
daa
and
ds
notl
out
cmp
scas
fisubrs
push
push
aam
inc
ficoms
push
gs
imul
mov
test
popf
mov
push
insb
adcl
repnz
decl
mov
ja
cltd
icebp
sub
cs
mov
outsl
sti
push
inc
aam
sti
push
push
and
std
lds
mov
cld
in
dec
xor
std
sub
and
mov
movsl
sub
xor
test
mov
ds
inc
add
dec
adc
add
icebp
or
mov
ret
mov
sbb
aad
stos
test
rorb
jns
and
dec
pusha
pop
push
add
xor
mov
ss
cmp
stos
mov
add
add
aaa
inc
push
sbb
inc
sub
fisttpl
lods
jmp
popa
mov
lea
fmuls
pop
jnp
imul
shll
or
stc
xchg
dec
sbb
fists
mov
fistps
pushf
xor
mov
cmp
leave
inc
xchg
xchg
or
push
aad
pop
je
lret
pop
dec
xor
mov
imul
pusha
push
sbb
scas
inc
push
test
pop
lea
aas
jmp
xchg
cmc
jo
test
stc
jle
movsl
js
andb
outsl
mov
mov
push
leave
add
dec
adc
int3
lock
testl
pop
jne
je
mov
rcrb
sub
repnz
cmp
pop
loope,pn
imul
dec
dec
lock
push
movb
shlb
mov
ret
addb
enter
pop
mov
mov
mov
and
mov
jae
cmp
sar
call
adc
and
gs
js
imull
out
lds
adc
dec
and
push
sti
sub
xchg
jmp
inc
mov
ja
sub
stos
mov
and
dec
jo
ss
arpl
imull
xor
shll
pop
jge
fisttpl
sti
sbb
adc
jle
shrb
das
mov
xor
mov
xchg
mov
jo
pop
in
notl
sbb
push
sub
sub
stos
jb
in
pusha
call
sbb
lcall
inc
pop
hlt
icebp
or
sarl
stc
jp
mov
xchg
cld
inc
imul
aam
std
shlb
sbb
cmpsb
fs
add
or
pushf
int3
scas
sub
or
mov
fbstp
sub
mov
cwtl
mov
jbe
pop
sbb
loope
les
mov
jg
push
popf
popf
dec
test
addr16
rcrl
xor
or
lcall
jl
inc
push
dec
fdivl
ret
je
out
jmp
in
push
pop
push
mov
cmpsl
push
in
dec
notl
in
andw
arpl
xor
stos
pop
int3
mov
outsb
jnp
movb
cmp
stos
jp
cmp
and
cmc
push
sbb
movsl
in
repnz
dec
mov
in
mov
dec
imul
pop
push
push
mov
lahf
push
sub
sub
xor
fiadds
xlat
pop
out
mov
and
fsubs
dec
adc
ret
adc
add
push
and
inc
adcb
cld
push
popa
mov
call
and
pop
mov
inc
pop
xor
out
fiadds
and
sub
cmp
mov
into
lods
pop
mov
adc
ret
sub
add
in
sub
or
arpl
or
jo
mov
adc
test
mov
aad
rcrb
add
into
sti
aas
xor
and
cmp
out
dec
lods
mov
sbb
mov
ja
mov
push
jg
mov
cmp
push
repnz
sbb
jge
or
ret
test
mov
jae
mov
bound
jp
loopne
adc
mov
stc
dec
mov
int
adc
cwtl
pop
mov
inc
mov
xchg
add
and
inc
mov
imul
out
dec
mov
test
adc
mov
mov
into
repnz
or
sbb
imul
pop
std
push
mov
and
add
cli
adc
inc
inc
push
dec
push
push
xchg
rclb
xor
and
arpl
jmp
push
cwtl
pop
xor
mov
sbb
cli
xor
notb
divb
popa
mov
pop
dec
test
insb
pop
jg
loopne
push
les
mov
fsubrs
mov
mov
sbb
mov
push
cmp
repnz
push
into
add
ret
les
popa
loopne
subl
xor
ret
mov
pop
insl
pop
pop
adc
xor
mov
out
lret
push
pop
fstpl
add
insb
fwait
jmp
dec
jne
out
js
test
roll
sub
dec
fwait
jno
mov
addb
mov
rcr
mov
aam
mov
mov
mov
push
xlat
les
mov
jno
les
mov
in
cmc
mov
add
sub
and
sahf
ret
jnp
mov
push
stc
test
or
cmc
push
or
cli
cmp
mov
iret
cwtl
stos
shll
xor
lea
pop
xchg
ja
push
add
andl
mov
pop
or
rcrb
hlt
stos
push
inc
pop
cmp
inc
lahf
sbb
dec
in
cmpb
pop
fs
mov
fs
adcl
push
fsubs
mov
lods
enter
daa
adc
adc
fucomp
stc
mov
push
in
cltd
lea
pop
push
leave
int
mov
push
jecxz
in
sbb
mov
xor
and
iret
icebp
or
adcl
int
hlt
data16
mov
sbb
push
pop
lods
scas
arpl
out
sbb
or
mov
sbb
fwait
xchg
dec
lahf
repnz
stos
mov
sub
movsb
repnz
in
jle
mov
aas
inc
inc
mov
dec
loopne
cmp
push
dec
sub
rclb
inc
test
push
mov
adc
dec
dec
sub
ret
inc
lcall
jp
xor
push
inc
gs
jbe
inc
arpl
mov
or
sub
mov
dec
push
jmp
sbb
sub
inc
jmp
popf
dec
mov
push
sub
les
dec
cmp
gs
test
cltd
std
ret
fwait
jg
das
lahf
mov
bnd
and
pop
jno
adc
rcll
add
push
adc
mov
inc
dec
cwtl
subl
lcall
and
sub
push
and
sbb
enter
movsb
xchg
push
iret
xor
fcomip
test
or
test
cli
jecxz
sarl
je
lods
negb
jae
sub
jmp
call
and
inc
pusha
mov
push
xor
pusha
fwait
orb
call
fdiv
sub
push
cmp
sub
xchg
aam
mov
jne
or
rcl
xor
addr16
push
movsb
adc
or
ss
iret
sbb
xchg
imul
mov
in
loopne
xor
movsl
movsb
lret
fs
xor
test
in
sbb
inc
clc
fistps
mov
dec
pop
or
aam
inc
mov
jecxz
fisttps
nop
cmc
push
dec
xor
sbb
pop
jg
pop
pop
dec
mov
or
mov
cs
in
lea
pop
pop
daa
subb
dec
lret
jne
jl
xchg
popf
cmpsb
es
fidivs
ret
mov
mov
stos
loop
adc
mov
sbb
iret
lods
push
jle
and
repnz
sbb
aas
imul
xor
fldenv
xchg
lea
lret
addr16
int
repz
push
lock
xchg
push
pop
enter
imul
out
orl
push
xor
jbe
imul
add
and
mov
fwait
enter
mov
sub
mov
test
sbb
fsubp
fsubrl
or
mov
inc
inc
jge
fmull
shl
pop
leave
popf
neg
dec
mov
cmp
or
mov
push
test
das
fs
mov
inc
push
into
jns
mov
xorb
inc
arpl
ret
xchg
imul
ja
add
out
cmp
jo
jbe
inc
loop
mov
pop
clc
xchg
push
ret
fbld
cltd
or
and
pushf
sub
push
cmp
xor
fnstenv
lods
call
sbb
pop
ds
icebp
fdivs
bound
pop
leave
cmc
negb
sbbb
fldt
ja
movsb
push
sub
sbb
mov
rolb
stc
cmp
nop
push
pop
add
push
out
in
cmovnp
mov
out
cmp
mov
pop
mov
push
or
idivl
jg
mov
aaa
imul
push
push
aam
orb
subl
xchg
push
int
add
leave
and
mov
xchg
push
das
sbb
pop
lahf
xchg
repnz
adc
and
out
ljmp
inc
pop
outsb
and
sub
imul
sub
mov
es
insl
addr16
push
add
in
sbb
add
cltd
sbb
adc
pop
ljmp
enter
jle
and
rcrb
lds
aas
push
push
mov
and
add
test
in
incl
pop
imull
inc
loop
mov
push
dec
push
dec
dec
or
inc
cltd
pop
outsb
and
repz
int3
sbbl
sti
add
and
mov
scas
cmp
stc
iret
jno
xor
mov
es
xor
jae
dec
aam
xchg
sub
xchg
fwait
cltd
xor
movsb
mov
in
dec
or
inc
insb
addr16
dec
mov
jle
pop
lahf
imul
js
cmp
or
shll
shl
test
gs
push
mov
adc
mov
mov
push
movd
aam
gs
out
xor
xor
adc
test
mov
cs
insl
call
jmp
test
or
repz
mov
xchg
into
aaa
dec
inc
sbb
std
faddp
mov
adc
jmp
or
cld
push
daa
push
outsl
out
pop
mov
mov
pop
or
js
pop
out
lret
pop
pop
pop
adc
in
fisubl
scas
mov
lods
mov
adc
mov
dec
jg
xchg
lods
insl
in
movsl
jle
or
push
xchg
adc
adc
ja
or
cmp
sti
and
xchg
idivl
loope
and
ret
scas
sbb
dec
test
imul
fstp
adc
add
adc
adc
dec
faddp
lods
xchg
xor
pop
not
adc
rclb
cltd
and
out
outsb
jecxz
outsb
pop
mov
jns
pop
dec
jb
shrl
cmp
dec
push
mov
xlat
push
adcl
pop
rcrb
ret
gs
call
fnstenv
push
in
sub
cmp
cmp
inc
cmc
mov
gs
cwtl
pop
push
jl
jg
jbe
inc
lods
adc
aad
rclb
adc
push
sbb
sub
adc
pop
xchg
jno
xlat
add
xchg
lret
push
insb
xor
das
nop
push
or
add
dec
loope
lods
lods
outsl
leave
mov
jle
arpl
cwtl
jge
bound
xchg
pop
stos
mov
shrb
sbb
ljmp
cld
xchg
lock
scas
push
xchg
and
inc
add
fnsave
fnstenv
mov
ljmp
mov
adc
outsl
add
push
scas
mov
into
pop
es
mov
pop
loopne
mov
inc
mov
sub
imul
cmp
xor
and
mov
push
inc
das
push
lret
push
add
xchg
outsb
or
std
cmp
movsl
dec
imul
stos
dec
jp
fcomi
sub
cmp
fdivrl
insb
lret
mov
dec
cmp
fsubs
call
test
xchg
xor
adc
or
jae
mov
lahf
push
arpl
lcall
ret
mov
shlb
xor
ret
inc
xor
xchg
xchg
sarl
addr16
int
and
and
and
or
adc
or
enter
mov
enter
outsl
and
jb
clc
rcr
test
pop
push
ret
orb
mull
in
ret
nop
repz
sbb
clc
jnp
mov
and
dec
andl
sbb
ret
mov
push
mov
cmpsl
or
mov
add
jecxz
push
repz
mov
xor
add
or
inc
jnp
fcompl
cmp
arpl
out
pop
cltd
scas
pop
push
push
pop
repz
xor
iret
sub
mov
jge
mov
mov
pop
sti
add
pop
ret
cmpsb
int3
add
out
fwait
int
mov
test
mov
clc
dec
push
cmpsl
cli
sub
mov
aad
or
push
imul
dec
cmp
xchg
pushf
inc
push
movsb
xchg
sub
insl
ss
push
fs
mov
cld
fnstcw
or
iret
push
dec
fs
mov
ljmp
shll
jno
fwait
push
jnp
int
fmull
adc
decb
xchg
fadd
and
push
mov
push
mov
das
sub
icebp
pop
movups
pushf
hlt
daa
adc
rcrb
int
or
pop
jo
mov
push
mov
iret
cli
xor
add
inc
xchg
insl
cmp
add
loopne
pusha
testb
sti
stos
mov
adc
mov
sbb
push
lret
add
lea
insl
and
jecxz
outsl
shl
imul
dec
mov
cltd
mov
lcall
negl
in
add
sti
andl
cli
hlt
fidivrs
int3
roll
mov
pop
std
xlat
ljmp
fwait
dec
sub
test
testl
sbb
aam
inc
nop
fstpt
out
mov
adc
popa
push
sbb
xchg
mov
lcall
push
in
or
pop
test
in
xor
pop
popf
test
lods
data16
mov
xchg
icebp
enter
pop
cmp
in
pushf
xchg
sub
aam
jbe
mov
fwait
mov
xor
mov
pop
xchg
les
stc
sub
int
jnp
mov
sbb
leave
and
adc
bound
in
mov
or
cld
push
xchg
push
mov
adc
dec
inc
call
xor
and
pop
sub
add
push
int
lret
lods
mov
loopne
push
vshufps
arpl
popa
data16
jg
pop
xchg
fmull
push
xchg
add
sbb
lods
and
insb
inc
pop
dec
int
jne
jge
add
addr16
lock
ja
dec
jns
iret
cmp
leave
rorb
pusha
loop
out
sahf
jae
data16
pusha
xchg
sub
sub
cmp
or
jle
mov
sub
test
jge
daa
js
clc
gs
adc
adc
push
jl
jg
sub
imul
fdivrp
test
xchg
dec
ret
andb
cmp
fisubrs
jno
test
and
jo
cli
stos
jmp
loope
inc
dec
sbb
jg
std
shrl
sbb
lods
rolb
dec
in
icebp
dec
inc
rcll
push
repnz
and
pushl
loopne
mov
enter
push
xchg
ljmp
cmp
aam
pop
addr16
xorl
and
pop
jp
cs
loope
je
sbb
xchg
jmp
sti
push
and
stos
and
into
pusha
mov
mov
mov
fimull
xor
push
pushf
call
sti
gs
test
fbld
xchg
xor
pop
cltd
inc
mov
jl
int3
ret
js
pop
dec
jne
hlt
pop
mov
fdivl
add
jmp
popf
mov
jne
inc
fcoms
rolb
fcoml
cmp
cmpsl
repz
idivl
lock
add
and
sbb
out
test
add
push
jecxz
cmc
vfnmsub213ps
pop
mov
pushf
jno
pop
push
sbb
test
iret
rcr
loop
pop
mov
fistpl
outsb
push
insb
mov
or
cmc
mov
pop
cmpsb
inc
test
std
mov
movsl
sub
xchg
hlt
mov
xchg
fistps
ror
mov
pop
add
adc
inc
ds
mov
cmp
mov
adcb
rcll
in
inc
sbb
pop
xchg
push
testl
cmp
pop
sbb
adc
mov
stc
aas
cltd
fs
jmp
repz
popf
fstpl
orl
mov
iret
mov
fidivrl
sub
lahf
xchg
js
mov
loop
cmc
aaa
mov
mov
popa
jno
sbb
xor
mov
scas
test
and
cmpsl
repnz
fucomp
xchg
arpl
jae
testb
out
iret
arpl
lcall
push
push
push
iret
adc
into
or
stos
pop
ss
sahf
xchg
sbb
adc
or
push
jns
mov
testl
popl
adc
lret
cmp
fcoms
sbb
sub
and
mov
nop
mov
xchg
adcl
mov
rorb
cmpsl
test
sub
leave
clc
lcall
shlb
mov
lock
or
mulb
add
addb
lock
sub
add
int3
imul
inc
jle
or
push
sub
push
pop
sub
mov
lcall
fdivs
add
loopne
xchg
jb
pop
int3
cmpsl
or
clc
add
adcl
int
jbe
subl
das
mov
test
push
adc
sbb
mov
xchg
inc
jecxz
stc
pop
ret
lret
movsb
adc
pusha
mov
pop
sar
mov
xchg
enter
aaa
aam
icebp
mov
mov
cmp
int
nop
dec
mov
ds
xor
mov
dec
cmpb
das
or
adc
or
ss
sub
pop
or
cld
inc
icebp
cmp
mov
push
add
jp
push
leave
lods
pop
mov
sub
stos
mov
add
jnp
jl
add
jg
lahf
sahf
push
jnp
pusha
sbb
pop
iret
andl
cmc
push
mov
imul
xlat
sub
or
test
sarl
mov
mov
movsl
lahf
cmp
dec
mov
adc
jmp
sbb
mov
inc
mov
xchg
jae
push
or
sub
sub
ret
inc
sti
jno
ret
mov
arpl
push
jecxz
fsubrs
cli
loop
pop
mov
test
movsb
mov
dec
es
sbb
jo
or
shlb
mov
push
xlat
imul
dec
cmp
mov
push
jb
jecxz
lods
sbb
in
push
cs
ds
inc
jl
push
ffreep
xor
aas
inc
push
jne
scas
fsubr
bound
jle
cmp
jp
mov
add
sbb
flds
loopne
out
inc
or
inc
aad
push
add
in
aam
sub
sbb
fmull
movsb
lods
cmp
test
and
fstp
dec
in
push
leave
pop
stc
fstps
dec
test
or
testl
and
sub
dec
xor
push
adc
sub
sbb
and
insb
sub
dec
dec
xor
mov
xchg
jmp
gs
ret
pop
xchg
mov
sub
push
repnz
ret
jo
dec
test
and
xor
inc
das
icebp
sbbl
fidivrl
add
mov
movsl
ss
xchg
xlat
mov
stc
inc
add
fadds
mov
xchg
in
dec
adc
arpl
fwait
rolb
std
data16
arpl
add
sub
inc
xchg
sub
push
fwait
xchg
push
xor
xchg
ja,pt
inc
notb
xor
adc
out
inc
dec
cmp
in
inc
leave
aas
ret
insl
and
lcall
jl
bound
sub
and
adc
stos
pop
push
dec
xor
mov
enter
cmpsb
fnstsw
scas
add
mov
sub
mov
in
push
inc
pop
push
mov
cmpsl
scas
sti
push
mov
cmpsl
and
xchg
or
les
pop
fcomps
call
sub
xor
add
mov
in
inc
loope
xor
sub
jg
xchg
adc
call
pop
mov
push
mov
mov
je
in
mov
add
and
js
add
jno
ljmp
push
popa
das
loope
stc
in
xchg
out
jl
fnsave
fnstcw
push
add
pusha
jl
sti
inc
cmp
cmp
xchg
or
dec
cmc
sbb
mov
or
call
mov
dec
out
adc
sbbl
mov
and
adcl
mov
pop
pop
fistpl
sti
lret
lds
jmp
sub
jge
xchg
adc
xchg
jmp
dec
mov
mov
stos
xor
hlt
adc
movsb
ljmp
fsubrl
adc
fadds
or
adc
shll
cmp
sbb
fwait
jnp
popa
add
sub
inc
out
inc
jo
mov
xchg
inc
mov
fistl
mov
cmp
push
ret
lods
and
iret
xor
or
add
adc
xchg
xchg
inc
incl
popa
push
nop
xchg
lock
adc
ret
mov
xlat
xor
mov
outsl
fwait
lcall
stc
loope
lods
push
mov
inc
outsb
sbb
fs
add
cmp
clc
pop
inc
addr16
or
imul
jne
xor
sub
lcall
cwtl
dec
xchg
repnz
jns
xchg
cmpsb
addr16
rcrl
dec
pop
pushf
mov
push
icebp
js
and
test
push
shl
mov
xchg
andb
movsb
idivl
mov
inc
mov
sub
or
roll
mov
hlt
push
iret
add
jo
pop
popf
rdmsr
add
pop
push
adc
in
jecxz
loop
jge
ret
shlb
and
shrb
jp
and
rcrl
mov
push
test
or
inc
jecxz
sti
test
or
mov
mov
cmpsb
adc
adc
push
insl
mov
loopne
xchg
or
repz
jo
idivl
repnz
mov
adc
cmpsb
inc
dec
jae
fisubl
lea
stos
sub
out
insb
arpl
outsb
popa
stos
xor
pop
sahf
mov
into
ret
roll
pop
cmpsb
adc
xchg
enter
aad
or
sbb
into
adc
mov
push
addr16
call
and
add
jge
cmp
push
movsb
cmp
jge
inc
shlb
popf
shld
mov
mov
lods
icebp
dec
psadbw
ja
cmp
mov
or
std
test
cltd
jns
or
xor
int
mov
adc
loopne
fisttps
inc
sub
lods
mov
add
shll
lahf
jnp
nop
fs
lock
or
idivl
cld
jle
mov
xchg
pop
lea
fs
xor
iret
fstpl
das
adc
fwait
push
movsb
mov
lock
lret
or
in
sub
push
nop
adc
daa
xor
push
adc
xor
xchg
mov
jge
mov
lret
ret
call
add
mov
push
mov
lret
cmpsb
pop
jecxz
dec
hlt
outsb
cmp
push
ss
lret
mov
mov
cmp
fistpl
roll
push
ja
fwait
stos
scas
jb
into
push
jne
inc
imul
mov
mov
std
in
fcomps
imul
push
stos
cmp
shrb
cmp
mov
popl
insb
data16
jne
movb
out
js
jp
movb
pop
sahf
xor
dec
test
mov
jmp
fdivrl
add
mov
mov
xchg
cmp
jecxz
mov
stos
popf
or
mov
movsb
dec
movsl
mov
pop
dec
sub
rcrl
push
dec
inc
inc
out
fs
adc
mov
sub
std
jae
inc
std
in
xchg
mov
cmpsb
cmp
pop
fwait
sub
rorb
xchg
fs
push
push
ret
insb
pop
fs
dec
jle
xor
cmp
in
or
movsl
dec
nop
inc
cwtl
stos
add
addl
aad
xlat
out
sub
int3
or
shll
fs
shlb
pop
mov
cli
fxtract
std
cmc
jg
mov
ret
push
pop
jle
mov
sub
faddl
std
inc
pop
sub
sub
mov
mov
mov
push
sbb
bound
jbe
pop
xchg
mov
rclb
stos
push
cmc
call
inc
pop
fdiv
inc
xor
xchg
sbb
dec
std
in
nop
ret
test
cwtl
je
insl
dec
dec
fnstcw
jne
inc
fdivs
rorb
xchg
pusha
lahf
imul
dec
mov
mov
cmp
rorl
mov
cmp
push
popa
pop
sbb
pop
jmp
js
into
and
mov
adc
je
mov
jp
aas
sti
adcb
jne
cs
push
daa
aaa
sti
aas
mov
jp
fists
mov
or
mov
mov
flds
stos
xchg
sbb
fistpll
mov
fsubs
mov
orl
rorb
push
sarb
movsb
sbb
lds
out
adc
loop
push
xchg
xor
mov
mov
sub
mov
push
loop
mov
in
push
stc
cmp
sub
dec
mov
xor
in
idivb
icebp
out
popl
pop
add
dec
add
inc
out
push
adc
add
xor
ret
push
xchg
xor
mov
sbb
add
mov
test
sahf
ss
lea
lods
hlt
cmp
pop
inc
int
jecxz
xchg
sub
mov
dec
mov
xchg
sbb
out
rorb
and
cmp
push
movsb
jp
jg
daa
pop
clc
inc
and
inc
sbb
lret
stos
mov
jmp
push
cmp
fbstp
jno
and
cwtl
dec
sbb
dec
ret
jne
fmull
rcl
dec
jl
jne
sub
movsl
test
xchg
push
aam
push
and
arpl
inc
sbb
cli
or
or
pusha
jge
flds
mov
dec
aas
ficomps
adc
pop
add
push
cmp
mov
xchg
fcom
insb
scas
sarl
enter
arpl
jns
jmp
cmp
mov
push
sub
pop
add
cltd
lahf
outsb
stc
rorl
loop
lahf
nop
loopne
cltd
in
mov
and
test
mov
loop
or
sbb
push
jae
pop
cmp
out
and
nop
xchg
cmp
ret
pop
inc
hlt
ja
in
lea
repnz
mov
dec
sub
and
pop
mov
sub
inc
nop
push
jnp
popf
xor
rorb
xor
xchg
cmp
dec
js
jae
push
mov
xor
mov
arpl
int
fdiv
xor
cmpsl
mov
lods
int
pop
je
inc
das
lea
cmc
push
add
cmc
les
mov
mov
hlt
test
pop
fs
dec
sbb
xor
cli
mov
push
pushf
arpl
icebp
inc
roll
stos
pop
push
ss
xchg
inc
loope
out
sub
cwtl
pop
mov
fdivp
jno
mov
sub
push
hlt
pop
mov
sub
xchg
xlat
xor
int
dec
je
xor
arpl
out
test
fimuls
add
je
cmpsl
and
popf
shlb
sbb
leave
sbb
jp
pop
lret
sbb
mov
inc
shll
divb
int
xchg
arpl
inc
data16
lahf
aam
xchg
pop
push
add
mov
jle
and
repz
test
xchg
xchg
dec
cmp
ss
pop
pop
cmp
and
lret
push
sbb
xchg
inc
sub
and
cmpl
into
pop
pop
pop
jmp
lahf
ret
ds
imul
call
mov
movsl
add
sub
addl
fcmovnb
div
xchg
fdivs
pop
stos
add
inc
scas
lret
lret
and
movsb
dec
sti
xchg
push
push
scas
test
shrl
movsl
inc
lods
cmpsb
fs
mov
push
jmp
in
jo
je
cmp
fldl
and
in
xchg
pop
xor
dec
loopne
mov
sub
popf
inc
out
fstp
add
and
lea
cmp
sahf
mov
negb
inc
js
inc
fcmovnb
xorb
or
movsl
pop
dec
lds
aaa
pushf
jns
shll
stc
pop
outsl
insl
sub
int
mov
test
lret
into
xchg
shrl
mov
fnstcw
sbb
jns
int3
xor
pop
and
cwtd
add
fabs
jbe
bnd
inc
jns
scas
jp
sarl
pop
cmp
popa
dec
mov
or
adc
xorb
sub
dec
icebp
mov
lock
push
mov
sub
sti
xor
pushf
pusha
sbb
jecxz
je
push
f2xm1
inc
sti
pop
int3
pop
mov
or
cld
into
inc
cmp
mov
mov
movsb
clc
cmp
mov
outsl
xchg
cmpsl
xorl
sub
jb
into
arpl
es
xchg
xchg
or
cmp
mov
xchg
ja
ljmp
imulb
cli
pop
or
push
pop
dec
insl
cld
mov
xor
inc
lods
cld
or
mov
iret
push
inc
clc
call
mov
pop
test
mov
cmpsb
mov
je,pt
mov
mov
cmp
aad
and
fidivs
pause
rcll
gs
sbbb
cmp
push
gs
cs
enter
mov
aad
cmpb
insl
xlat
adc
and
dec
xchg
enter
call
push
ftst
imull
xchg
adc
cmp
imul
pop
enter
and
jg
lcall
pop
fwait
test
gs
inc
dec
leave
mov
push
and
les
sbb
sub
mov
imul
sub
jg
xor
ret
test
fstpt
mov
adc
inc
les
dec
jg
aaa
int3
adc
pop
int
movsb
adcl
and
inc
or
mov
cwtl
stc
or
jo
lea
add
bound
mov
movsb
je
and
jmp
in
daa
push
or
in
jo
loopne
push
sub
and
lds
cmp
cmpsl
sbb
out
stos
call
fmull
mov
adc
and
mov
xor
mov
test
in
sub
cltd
mov
push
add
in
inc
fcoms
pop
sbb
push
dec
ja
jg
clc
sbb
push
jo
sbb
jae
mov
pop
inc
loopne
and
insl
push
enter
add
aad
jmp
ja
mov
xchg
enter
push
insl
ja
or
aas
mov
les
mov
pop
sbb
cmc
cmpsl
mov
cmpsl
adc
lods
das
sub
push
mov
movsl
out
stos
insb
shr
push
fdivl
xchg
ja
lods
shlb
test
outsb
cld
mov
ret
and
xor
lcall
repz
jno
inc
xchg
mov
mov
push
lock
mov
cltd
ds
jge
inc
or
pop
aas
shlb
push
aam
movsb
mov
call
cmpsl
lret
pop
into
lods
es
sub
and
pop
push
stos
pop
lock
cmpsl
inc
int
ds
daa
push
out
dec
dec
mov
cmp
movsl
cmp
xchg
mov
lock
in
mov
cmpsl
xchg
dec
push
ljmp
aam
mov
into
pop
sahf
int3
mov
or
popa
and
pop
xchg
jg
fadd
nop
adc
loopne
insl
in
lret
shr
es
push
ja
cli
xchg
sbb
fdivrp
xchg
xchg
rcr
adc
push
loopne
jge
cmp
pushf
add
pop
mov
dec
push
and
push
xchg
mov
rolb
sbb
xchg
mov
dec
pop
dec
mov
pop
notb
les
push
add
js
xlat
pop
cmpb
movsb
popa
pop
aam
insb
xor
shr
roll
out
and
das
xor
jnp
lret
aaa
leave
or
pop
cmp
mov
cmp
int3
pushf
popf
jo
dec
sbb
mov
pop
inc
clc
rdtsc
dec
je
sbb
jb
sbb
xchg
mulb
and
sub
jo
movsb
out
dec
jmp
out
inc
inc
ja
pop
cli
pop
fld
lods
hlt
stc
xchg
add
iret
jo
test
add
pop
push
negb
es
scas
mov
cmp
sbb
jg
push
subb
xchg
filds
xchg
es
shlb
scas
push
in
sbb
mov
xor
aaa
fidivrs
xor
fisubl
out
dec
mov
fsubs
inc
cmp
scas
out
lea
dec
cs
pop
loope
cmp
mov
mov
add
mov
incl
out
mov
lcall
mov
jno
scas
dec
and
xchg
xor
insl
push
js
push
mov
cli
push
add
lods
xchg
ds
mov
shl
add
pop
xor
fisubrs
inc
sub
and
xor
inc
xchg
aaa
fsubrl
jmp
or
bound
pusha
inc
adc
aam
insb
fs
inc
enter
dec
jge
xor
stos
icebp
inc
jo
inc
lds
pop
xor
xchg
mov
in
cmp
dec
inc
ja
or
sub
mov
push
lods
xchg
cli
xor
fimuls
and
sub
cmpsl
rolb
loop
scas
inc
repz
mov
ds
mov
scas
adcb
stc
inc
clc
subb
cwtl
xchg
ror
add
sbb
cvtdq2ps
pop
fcomip
loopne
loopne,pt
repz
xor
ret
test
pop
mov
sbbb
out
and
aam
ljmp
dec
sub
jne
cmpsb
jg
inc
mov
sbbl
push
mov
pop
mov
lret
xor
mov
jg
push
int
adc
daa
adc
cs
ljmp
in
mov
mov
cmpsl
ds
mov
sub
adc
adc
stc
dec
mov
lds
pop
lret
mov
mov
push
lock
ss
int3
stc
imul
add
clc
jecxz
and
dec
idivl
jl
stos
loope
cmp
xor
jnp
je
jns
push
lds
mov
mov
lea
mov
cmp
out
jno
cmpsb
mov
cltd
shrl
ljmp
cmp
fimull
mov
add
jnp
jnp
pop
sbb
xlat
xchg
ja
cmp
and
fldl
ret
jge
sti
movsl
lret
scas
sahf
or
sbb
int
rorb
es
rolb
psubq
icebp
subb
pop
add
mov
pop
sub
dec
jle
mov
sub
mov
jl
fadds
mov
cli
ljmp
xchg
in
in
xor
addb
xchg
nop
add
sbb
outsl
dec
adc
add
aam
push
fistl
lods
sub
or
or
nop
fcmovbe
leave
jge
add
push
adc
data16
pushf
jp
je
push
or
adc
outsb
sub
or
mov
stos
scas
inc
push
xor
push
sbb
jmp
call
pop
aaa
xor
fisubrs
popf
sub
jle
mov
lcall
push
out
jae
jb
mov
xor
int
mov
outsl
icebp
lcall
jle
add
xor
aad
ret
iret
inc
pop
dec
test
loopne
lret
inc
les
icebp
shr
push
stos
push
mov
mov
inc
fcoml
shlb
mov
push
inc
cmpl
pop
jbe
lods
inc
cmp
ljmp
rcr
jno
mov
std
setbe
hlt
sti
cmp
xchg
decb
jge
jno
cltd
mov
icebp
in
ss
xor
xchg
xchg
add
je
pop
or
lret
pop
inc
jp
std
sbb
loopne
cltd
xchg
add
js
ds
scas
mov
jb
xchg
pusha
ja
adc
fidivs
mov
mov
mov
test
outsb
pop
xbegin
push
rolb
shll
sub
xchg
call
lods
inc
mov
xchg
cmp
incb
and
adc
shlb
lret
loopne
xor
lods
dec
dec
imul
rolb
push
fisubrl
fisubs
popa
nop
clc
cmpsb
shlb
popf
jmp
stos
xchg
je
inc
jecxz
lsl
jg
popa
outsl
jns
jae
inc
add
mov
fadd
data16
inc
pop
or
add
jb
cmpsl
and
outsl
fsubrl
mov
addb
fimull
cmpsb
mov
test
pop
mov
xchg
aas
push
call
xchg
xor
notl
pop
adc
push
or
pop
popa
sub
cli
add
movsb
push
ficomps
flds
int3
addr16
cmp
lea
or
mov
divb
mov
inc
mov
mov
outsl
loop
test
push
outsb
sbb
xor
lods
pushf
incb
repnz
lods
subl
dec
cmp
mov
cli
xor
sbb
ret
out
mov
jge
jnp
sub
mov
mov
cmpsl
mov
push
pop
add
push
rcll
mov
ror
popf
out
jecxz
jne
push
mov
fwait
cmc
lea
xrelease
pusha
sub
stos
add
aad
in
cs
cmp
adc
stc
cmp
cmpsl
and
lods
mov
mov
xor
jge
sti
inc
lock
and
pusha
je
clc
mov
or
mov
cmpsl
inc
shll
lret
nop
pop
inc
call
pop
sahf
push
arpl
lea
sahf
je
mov
ja
testb
or
mov
mov
pop
imul
shlb
sbb
shll
jge
nop
arpl
xor
and
addr16
fsts
aaa
dec
mov
inc
sbb
dec
clc
or
push
add
hlt
outsl
sbbl
and
mov
stos
hlt
pop
sbb
sub
dec
add
test
aas
push
dec
insb
and
stc
jecxz
imul
outsb
jg
ja
sub
jae
imul
xchg
push
inc
cmp
jb
mov
sbb
and
or
and
insb
loop
mov
mov
cltd
cmpsb
mov
jmp
dec
jmp
inc
add
xchg
sti
adc
outsb
and
mov
ljmp
ror
stc
inc
xchg
push
jae
ret
cmp
or
aaa
dec
out
jle
jae
sub
enter
into
int3
clc
out
leave
aas
push
dec
and
jp
insl
push
mov
lret
jecxz
xor
mov
xor
add
mov
loop
shll
test
cmp
inc
outsl
pusha
dec
pushf
pop
insl
into
sbb
fsubrs
shll
adc
and
cwtl
push
inc
push
pushw
in
das
sarl
shll
pusha
lcall
add
pushf
lock
fadds
jecxz
pop
pop
and
inc
mov
sub
mov
add
xor
lret
inc
add
popa
add
subl
or
mov
cltd
xor
and
inc
pop
push
inc
cwtl
sub
popa
pop
adc
or
adc
jle
push
sbb
fsubs
mov
lret
pop
repz
clc
pop
dec
insl
push
pop
jnp
pop
mov
sbb
inc
mov
aad
int
push
pop
xchg
mov
movsl
out
inc
pop
es
inc
js
loope
cwtl
sub
loopne
cli
das
mov
stos
outsb
outsb
in
ficomps
ds
repnz
cltd
cmp
je
inc
lock
rcr
sahf
inc
push
sahf
jecxz
mov
aaa
loope
rcr
nop
add
mov
xor
and
ja
gs
mov
loope
das
adc
sarb
inc
enter
pop
dec
adc
lret
enter
dec
lcall
push
sbb
jmp
jg
mov
int
sbb
ffreep
daa
cwtl
addr16
dec
xor
stc
mov
aam
jle
and
enter
enter
pushf
addr16
in
add
or
fwait
sub
aaa
or
mov
insl
shll
stos
cmp
inc
repnz
mov
cmp
movsb
jnp
push
cli
pop
stos
xchg
mov
fistpl
sbb
mov
pop
sti
sub
popf
inc
clc
and
fcompl
jb
adc
loop
pop
mov
lock
iret
mov
or
cmp
outsl
fs
fcomps
in
inc
or
sbb
jns
or
out
das
fmull
mov
mov
cmp
pop
inc
adc
sbb
aad
addb
pop
aaa
jb
mov
or
adc
call
sbb
dec
int3
cli
insl
mov
xorl
jle
pop
leave
and
hlt
rorl
mov
inc
pop
cmp
and
jae
mov
jl
or
xorl
dec
adc
and
das
mov
pop
pop
adc
hlt
test
movl
lret
inc
mov
das
jo
rcrb
inc
jb
sub
jle
jp
pushf
mov
push
loopne
test
push
adc
fiadds
nop
ret
lds
repz
in
fadd
icebp
sbb
in
or
mov
out
dec
pop
inc
add
lret
movsb
adc
pop
inc
mov
lds
sbb
pushf
sub
dec
dec
decb
lret
pop
add
out
jne
test
and
mov
xchg
movaps
mov
sub
mov
jo
cmp
cld
cltd
and
rcrb
rcrb
cmpsb
jno
xchg
sub
push
push
aam
sti
repnz
or
out
out
jne
jo
jo
fldl2e
stc
cmp
mov
lret
mov
xor
adc
lods
into
jmp
xor
or
aas
xor
mov
cmpsb
or
cltd
outsb
mov
sbb
pop
fadds
xchg
xor
mov
adc
pusha
roll
pusha
sbbb
cli
xchg
mov
jae
dec
sbb
ss
push
pop
cli
int3
orb
lock
xchg
inc
je
inc
lods
pop
or
xor
mov
ficoms
add
in
in
outsl
es
nop
inc
jp
cmpsb
aam
ficompl
xchg
jne
lret
scas
repz
mov
mov
lahf
outsb
scas
loope
mov
mov
mov
mov
adc
subl
mov
loope
movsl
cmpsb
lret
or
mov
mov
repnz
sub
inc
cmpsl
loopne
and
jns
jnp
aaa
cwtl
jo
pop
xlat
call
add
cmc
push
xor
mov
cld
jmp
orl
fcompl
sahf
jle
sbb
rcr
loopne
ds
sub
cwtl
inc
mov
push
cmc
loop
psrlq
cmp
fistps
enter
bound
repz
dec
mov
in
pop
and
movsb
imul
lret
scas
adc
inc
das
and
aad
xchg
stc
test
ds
add
out
arpl
ret
mov
cs
inc
mov
xor
movsb
mov
int3
int
ljmp
mov
pop
push
xor
subb
jbe
nop
bswap
mov
iret
xchg
mov
adc
xchg
jmp
in
and
or
push
testl
cmpsl
call
popf
scas
cmpsb
adc
sti
ds
aad
sbb
test
push
pop
add
sbb
dec
pop
pop
add
loop
xor
xchg
fwait
ljmp
repnz
sub
icebp
sub
insl
inc
push
sahf
rcrl
push
fcmovnu
inc
mov
in
sub
pop
inc
ljmp
into
fidivrl
notb
xlat
push
in
imul
adc
pop
inc
jno
shll
cmc
mov
adc
pop
fidivl
sbb
sbb
sub
imul
outsb
mov
cmp
and
cmpsb
loop
fimull
sub
je
jl
aas
sub
pop
xchg
cld
inc
mov
out
jbe
cltd
xor
cmc
dec
test
push
xlat
clc
mov
mov
test
ss
push
test
stc
xor
jne
xor
mov
jnp
add
sub
arpl
xorl
inc
pop
or
and
mov
dec
das
push
xchg
in
fstps
jne
xchg
cli
loop
pop
mov
addb
ret
cmp
enter
test
xchg
and
xchg
sbb
das
outsl
cltd
fwait
loopne
leave
roll
cltd
inc
filds
add
test
fucom
loop
fs
mov
daa
add
scas
movsb
stc
outsl
pop
aaa
pusha
and
sbb
cmc
les
bound
decl
clc
int
ror
lods
inc
dec
test
cmp
dec
sub
aas
andb
aam
cltd
hlt
sbb
jb
lret
sbb
cli
in
push
test
push
xchg
cmp
mov
pop
inc
lock
rclb
ja
outsl
and
pop
xor
rclb
push
mov
jmp
push
insl
push
or
xchg
cmpsl
push
pop
mov
int3
inc
push
ret
imul
js
push
decb
cwtl
mov
mov
inc
mov
and
inc
ror
cmp
push
xlat
mov
lods
lock
mov
fwait
mov
lds
dec
push
and
xor
jae
dec
fsubr
add
sbb
sub
pop
dec
mov
fs
dec
pop
in
dec
into
imul
jp
subb
adc
dec
sti
cmp
cmp
imul
cmc
cmp
mov
lods
and
push
test
imul
outsl
adc
inc
pop
bound
das
dec
xchg
sub
inc
mov
push
push
or
pop
pop
sub
xor
xchg
js
sbb
sub
mov
mov
int
jecxz
out
fstpt
sbb
ss
mov
aad
jb
in
add
adc
pop
mov
sub
cmp
mov
mov
adc
xor
repnz
mov
stos
push
in
push
cltd
subl
mov
in
sahf
inc
mov
or
les
scas
popf
leave
aaa
mov
or
sub
das
mov
repz
mov
popf
mov
push
mov
repz
pushf
mov
inc
xlat
mov
stos
xchg
fnstcw
insl
out
lahf
push
mov
iret
mov
fcom
std
sarl
sub
mov
mov
cs
add
mov
xlat
fdivrp
cmp
adc
test
dec
pushf
fwait
jl
adc
add
das
push
inc
repz
mov
repnz
xchg
repz
inc
clc
int
es
stos
mov
mov
aam
icebp
xlat
cmp
adc
ds
sub
xor
popf
aaa
rclb
mov
int
add
lea
sti
fwait
and
arpl
pop
shl
add
or
cli
mov
or
sbb
pop
je
cltd
sub
fstps
faddl
imul
push
call
jle
pop
adc
cmp
push
stc
push
imull
cli
mov
int
pop
pop
push
push
outsb
movsl
outsl
fwait
and
mov
popf
xor
inc
inc
and
add
mov
sbb
pop
pop
and
jno
int3
insl
jbe
lret
push
pop
das
jl
or
mov
fadds
out
add
test
jae
out
mov
add
xor
out
lcall
das
fstl
fstl
mov
out
cmp
outsb
add
and
test
dec
ret
loope
push
jecxz
fdivs
and
stc
and
cmpsl
xor
or
das
cmp
cmp
push
cmp
fisttpll
into
test
sbb
lds
loopne
das
xchg
arpl
xchg
sub
shll
jecxz
and
pop
nop
jb
scas
mov
adc
std
jl
fdivrs
inc
sub
dec
jne
lock
jnp
mov
inc
jne
cmpsl
scas
mov
push
cmp
adc
sbb
aam
cmpsl
pop
or
daa
pusha
or
int
lcall
adc
fwait
int3
hlt
xchg
xchg
sbb
push
in
push
pop
inc
loope
outsb
jp
and
inc
sbb
cs
nop
int3
ret
dec
pushf
ljmp
or
dec
test
addr16
pop
add
push
cmp
mov
mov
pop
inc
hlt
enter
lret
jle
pop
movsb
inc
cmp
sub
mov
into
push
cmc
fnstenv
sbb
subl
adc
mov
mov
nop
ljmp
add
pop
inc
pop
rclb
xor
adc
loopne
insl
or
add
mov
mov
dec
lock
jno
mov
sub
mov
lock
fwait
rorl
cmp
ds
jecxz
push
fisubs
and
xor
sbb
loop
pop
sub
adc
inc
add
scas
cs
ret
or
shl
clc
mov
nop
push
jae
and
push
xor
loope
add
add
in
mov
adcl
aam
outsb
scas
out
xor
rcl
mov
mov
pop
lods
pop
mov
jo
xor
inc
loope
push
fdivrl
xor
pop
dec
rcrb
mov
shrb
sbb
pusha
out
mov
dec
push
loop
xor
and
in
repz
test
sub
mov
push
jecxz
mov
xchg
cltd
sub
dec
sahf
icebp
icebp
mov
insl
sub
fwait
test
dec
lcall
mov
mov
jb
xchg
stos
mov
mov
mov
xchg
out
rorb
sti
jp
xchg
movsb
lods
pop
and
int
dec
and
mov
fs
fcoms
and
or
push
dec
sbb
mov
in
cmpsl
cli
divb
mov
loop
lahf
call
push
add
sbb
jl
jno
add
push
mov
xor
outsl
les
shll
mov
je
std
cmpsb
push
je
cmpsb
call
and
addb
inc
push
leave
fs
das
sub
lahf
mov
repnz
aad
fldcw
test
aas
inc
xchg
fimull
mov
das
in
push
stc
lcall
outsl
mov
inc
or
inc
repz
mov
xchg
mov
subb
lahf
jmp
rcrl
pop
shl
adc
add
pop
cmp
rcrl
mov
xchg
mov
out
xchg
stos
call
pusha
sbb
les
lea
out
xchg
jne
xchg
sbb
adc
fildll
push
push
xor
add
inc
or
pop
stos
dec
stc
cmpsb
mov
popf
cmp
leave
fnstenv
stos
imul
add
jmp
adc
cmp
jecxz
dec
jo
or
pop
jle
jge
sahf
fldenv
push
jnp
mov
cmp
shld
into
pop
and
fdivs
jb
popf
pop
dec
fcmovne
sti
inc
dec
or
cmc
movsl
ljmp
int3
xchg
ret
fld
mov
push
or
mov
fcomi
sbb
or
popf
jnp
stc
xchg
fucomp
mov
jmp
adc
arpl
arpl
lods
pop
loop
dec
push
sbb
adc
sub
insl
xchg
cmpsl
mov
mov
xorl
mov
lret
sub
hlt
mov
adc
push
loope
fwait
das
cmp
lret
ss
std
outsb
lret
jecxz
stc
or
fnstcw
mov
add
mov
sahf
push
cltd
lcall
mov
out
jmp
xlat
mov
sbb
cmp
stos
mov
mov
movsb
jne
andl
loop
push
cmc
mov
xchg
xor
jg
in
lahf
cmp
orl
and
fildll
mov
ja
cmpsl
or
xor
jp
lahf
adc
xchg
xchg
and
cmc
pop
gs
fdivrs
mov
lea
or
mulb
mov
add
shrl
pop
out
call
mov
pop
mov
mov
fisttpll
scas
or
ja
xor
pop
inc
loope
dec
mov
int
mov
cmp
xchg
add
repz
je
inc
fwait
jle
lock
push
dec
adc
mov
mov
iret
out
testl
cltd
push
aas
push
movsb
jle
in
sbb
jmp
lcall
inc
push
or
loopne
clc
out
xor
aaa
jecxz
xchg
pop
mov
pop
cmp
inc
push
stos
or
adc
adc
dec
sub
imul
inc
and
imul
mov
sbb
pusha
xor
xchg
addr16
xor
pop
xor
sbb
out
fists
mov
je
ja
mov
add
push
mov
imul
sbb
mov
das
pushf
sti
js
js
movsl
push
mov
movsb
nop
test
daa
dec
push
cs
xchg
xchg
pop
mov
adc
mov
iret
dec
fistpl
lods
popa
sbb
into
and
mov
mov
rcrb
dec
mov
sbb
mov
mov
adc
xor
inc
fdivs
xchg
int3
scas
test
adc
jnp
fisttps
fimull
xlat
add
push
mov
dec
jp
fldcw
or
out
jbe
xchg
push
xchg
pop
addr16
push
cmp
jbe
pop
jnp
xor
rcll
mov
push
fwait
mov
mov
popf
add
xor
mov
movsb
jb
movsb
add
jmp
loope
outsb
jbe
add
mov
add
sbb
movsl
dec
mov
push
jmp
pop
or
add
push
addl
sbb
popa
jns
inc
insl
or
xchg
push
jg
insl
jg
cwtl
ljmp
inc
shl
adc
inc
lock
sub
sbb
pop
mov
mov
push
aaa
or
cmp
dec
and
pop
inc
jp
sbb
xor
jg
push
push
mov
dec
or
insl
lret
jecxz
push
push
xchg
mov
jg
sahf
sahf
adc
add
inc
loop
popa
int3
clc
sub
inc
mul
lods
mov
add
mov
lcall
jnp
jns
lds
xchg
sub
call
jns
jne
pushw
inc
adc
xchg
sbb
mov
lock
inc
bound
inc
pop
lahf
mov
and
xchg
cmp
pop
cmpsl
mov
subb
out
jg
mov
fwait
xchg
jge
hlt
add
aaa
xchg
shr
sarb
jnp
cmp
or
mov
dec
pop
rclb
push
add
lods
cmp
andb
ja
xchg
or
negb
lea
sti
or
je
mov
subl
xor
mov
add
mov
xchg
xor
cmp
daa
cmpsb
ret
out
sti
dec
fmuls
xor
lods
mov
sub
and
ljmp
push
fwait
movsl
adc
test
pusha
lret
or
sar
jo
mov
cli
pop
mov
inc
push
cli
mov
cld
insb
aad
incb
xchg
jno
ret
cmp
mov
push
gs
fbstp
gs
xor
mov
jle
mov
push
rolb
lods
mov
sbb
mov
pushf
jge
cmp
dec
out
mov
jnp
adc
and
stos
and
mov
push
sub
xchg
enter
loopne
pushf
loope
inc
lods
inc
pop
cmp
cmpl
cmpsb
stc
cs
icebp
jmp
adc
xor
dec
aaa
iret
adc
movsb
repz
pop
add
shl
test
aam
xor
daa
sub
cli
jno
inc
js
mov
mov
dec
sti
cwtl
xor
lock
es
jae
and
push
fwait
add
orl
in
aam
test
in
pop
sub
or
xchg
andl
movsl
jle
rorb
xchg
lret
pushf
imulb
lahf
enter
repnz
push
mov
fldenv
or
jecxz
jo
test
cmp
inc
addl
inc
inc
inc
in
dec
cwtl
dec
adc
scas
add
js
push
es
sub
inc
pop
mov
and
mov
rclb
sub
push
xor
outsb
addb
adc
icebp
and
bound
push
sub
push
xor
push
sub
movsl
inc
dec
nop
or
mov
iret
in
jle
dec
lret
add
jle
adcl
jecxz
movsb
and
clc
sub
jnp
xor
xor
hlt
adc
push
loop
jl
add
sbb
and
gs
cs
loop
and
sarb
xchg
ret
imul
push
cli
sti
add
lret
sub
mov
mov
add
cld
lahf
push
xorb
mov
rolb
pop
inc
xlat
mov
imul
and
xor
imul
jnp
imul
cmp
icebp
mov
mov
in
sub
into
fscale
xchg
gs
daa
jns
inc
sub
enter
mov
adc
push
pop
sahf
outsl
nop
enter
and
mov
xlat
dec
outsl
sbbl
xor
or
outsl
out
mov
les
shrl
push
dec
in
scas
in
das
test
mov
das
cwtl
xchg
les
sbb
ljmp
jecxz
pushf
lds
iret
dec
dec
xor
insb
daa
stos
jmp
out
push
outsl
inc
jg
or
xor
cmp
enter
adc
cmp
aas
mov
stos
testl
out
and
iret
out
jmp
xorl
inc
sub
pop
add
lea
mov
dec
int3
cmp
mov
cmpsb
pop
pop
mov
pop
jnp
loope
imul
jmp
test
xor
lahf
xor
cld
sub
pop
mov
cld
mov
cmpsl
add
sbb
or
xor
ret
pop
sub
adc
loope
mov
mov
pop
add
pop
aas
mov
mov
and
xor
adc
aam
data16
xor
aam
les
pop
mov
inc
cmc
in
iret
testl
jecxz
dec
sbb
xchg
or
inc
repnz
fsubr
mov
adc
inc
mov
mov
push
pop
cli
push
shll
add
nop
lret
jno
rclb
lret
popf
cmpb
xchg
imul
and
dec
in
cmpsb
movsb
or
sbb
sub
pop
inc
dec
add
mov
rorb
add
cmc
lods
mov
sarb
inc
sub
arpl
or
test
ss
in
cmc
inc
and
sbb
mov
js
arpl
xor
sub
into
in
roll
inc
inc
pop
test
sub
xor
add
out
loopne
jnp
insb
mov
cmovp
mov
jge
daa
pop
ljmp
push
or
xchg
xlat
push
mov
ret
push
cs
jecxz
pop
loopne
mov
pop
xor
lods
aam
aam
pop
pop
dec
xor
lea
and
lret
imul
in
test
pushl
xchg
addr16
popl
add
pop
mov
dec
fisubrs
cmp
cs
mov
mov
out
fcomip
ljmp
jmp
fdivp
or
push
add
aas
add
add
add
mov
xchg
loopne
int3
test
enter
fidivrl
xchg
sahf
loope
fidivrs
xchg
inc
mov
loope
mov
fbld
in
sbb
loope
dec
dec
andl
jae
mov
pop
daa
ret
dec
adc
dec
cmp
mov
fcmovu
push
orb
adc
je
lcall
xor
fisubl
pop
jns
test
jno
xor
aam
dec
pop
inc
pusha
push
out
ds
cltd
push
cmpsl
inc
stc
sbbl
dec
popa
push
divb
pop
rcr
les
or
xor
out
lret
jmp
popa
in
cs
pop
or
mov
dec
movsl
sub
xor
push
popf
mov
fisttpl
pop
pop
in
and
adc
mov
jno
add
sarl
mov
mov
rolb
adc
mov
jle
test
add
es
adc
jne
pop
loope
or
xlat
lea
or
into
ljmp
push
out
movsl
sub
xorb
cmp
sub
mov
xor
cmc
add
mov
lods
mov
mov
in
xchg
out
push
mov
scas
cmc
clc
lock
imulb
loop
mov
out
lods
outsb
inc
adc
imul
xor
in
or
imul
xor
add
cmp
outsb
hlt
shrl
mov
mov
shrb
movl
and
mov
mov
clc
jg
leave
cwtl
fbld
imul
loopne
push
ljmp
add
pop
pop
je
lret
cs
cmp
xor
out
push
cmpsl
divl
leave
aaa
add
lods
pop
ret
mov
jnp
mov
jo
dec
std
popf
xor
adc
inc
aas
mov
add
sar
jg
adc
and
test
cmc
or
out
test
push
push
cmpsb
lock
pusha
mov
or
fs
cmp
ss
mov
jg
stc
sbb
adc
and
mov
xchg
lahf
cmp
mov
stos
cmp
mov
fbld
push
adc
in
inc
cmp
push
test
xchg
mov
dec
dec
mov
add
mov
mov
div
push
adc
lock
mov
xchg
mov
les
dec
divl
call
ret
in
mov
cmpsl
lcall
jmp
mov
jge
pop
or
dec
jnp
mov
lea
inc
and
sti
mov
aas
jmp
out
jle
js
dec
mov
mov
add
sub
mov
inc
sub
mov
inc
push
dec
cmpsb
lea
pusha
push
sbb
ret
xor
in
flds
adc
cs
inc
aas
mov
xor
testb
dec
pop
push
mov
or
popa
mov
mov
and
mov
mov
jnp
sub
clc
lods
xchg
addr16
mov
cmc
stos
sbb
mov
xchg
and
cmp
mov
addr16
and
fwait
movsb
popa
mov
jb
lds
frstor
xor
cmc
jb
pop
cmp
or
scas
sub
dec
movsb
and
fldl
or
iret
mov
pop
xor
incl
add
fstl
ret
scas
jae
xchg
xor
or
lock
push
lahf
or
xchg
jmp
lret
sub
sarl
sbb
cmc
and
out
cs
lea
pop
jp
arpl
pop
popf
insl
dec
out
or
xchg
leave
dec
scas
nop
dec
movsb
shrl
push
jno
stos
lahf
pop
sahf
scas
movsb
ljmp
mov
sub
lcall
and
ret
push
sbb
pop
xor
lcall
lds
in
ficoms
outsl
std
and
mov
in
mov
xchg
xor
popf
stos
shlb
push
xchg
pusha
cmp
test
add
sbb
rol
loope
push
inc
pop
test
inc
xchg
dec
int
notl
and
mov
mov
jae,pt
stc
aaa
inc
movsl
mov
dec
lds
call
sbb
pop
add
lock
jne
inc
lret
xchg
mov
aas
lea
aad
popf
jg
test
arpl
fadd
or
dec
in
lock
and
ss
cmpsl
mov
jae
sub
push
jne
xor
mov
aas
adc
inc
sub
repz
sub
or
push
mov
pop
fdivs
adc
mov
flds
out
jp
ror
repz
andl
pop
imul
jmp
fimuls
sbb
aam
aas
xor
jns
adc
jecxz
and
cmp
out
sub
sbb
pop
push
out
ja
sbb
nop
dec
fcoml
pop
mov
xchg
xor
movsl
cmp
sbb
scas
iret
push
add
jle
ja
push
dec
hlt
out
ljmp
jl
xchg
stos
lea
or
push
xor
fldenv
xor
jl
outsl
repnz
loop
ljmp
push
pop
cmp
popf
mov
aad
jp
mov
stos
lock
es
pop
cs
ss
mov
jns
jns
aam
pop
mov
divl
xor
out
int
xor
std
lret
lea
inc
inc
sbb
mov
jmp
lds
jno
dec
stc
or
clc
test
repnz
mov
lahf
jge
lock
in
mov
push
jl
sbb
pushf
cmpsl
adc
cmpsl
jae
fcoms
sub
std
cmp
jb
js
add
int
aad
js
scas
pop
fnsave
xor
aam
add
jmp
pop
xorl
xor
jmp
ja
movb
mov
ficomps
frstor
push
scas
rcl
ret
mov
test
mov
mov
insl
xchg
sub
nop
add
or
jb
mov
mov
xchg
adc
mov
xchg
ljmp
inc
out
in
sbb
fsubrl
push
pop
mov
push
jae
out
push
push
jge
movsl
repz
mov
inc
mov
pop
pop
aaa
adc
lcall
mov
dec
cwtl
mov
lret
test
addr16
mov
jl
push
jmp
lret
mov
std
es
cmpsb
sbb
pop
neg
xor
adc
stos
enter
addb
fidivrs
dec
dec
or
aad
xorb
mov
in
out
ds
aam
and
lods
test
or
inc
pop
push
cltd
outsb
ficoms
inc
aad
cmp
imul
xor
mov
adc
aad
ljmp
neg
sub
shll
xchg
roll
imul
js
mov
jbe
and
and
mov
fiadds
imul
or
add
sub
fwait
sub
mov
cmpsl
sbb
enter
repz
imul
inc
fisubs
enter
add
push
push
adc
insl
pop
loopne
push
aaa
out
xchg
dec
add
push
cmpsl
stc
test
sbb
stos
pop
movb
sub
pop
inc
push
out
cmp
sub
pop
sahf
sbb
cmc
out
sub
mov
icebp
pop
pop
mov
and
enter
jecxz
mov
xchg
mov
fnsave
pushl
stos
pop
incl
insb
movl
mov
rorl
aas
gs
inc
rol
rorl
sub
mov
jo
sbb
fucom
in
jp
mov
adc
mov
dec
lret
sub
outsl
and
jbe
int3
out
cmpl
ffree
cwtl
pop
test
addb
push
neg
dec
and
push
mov
jne
lret
test
inc
sbb
inc
sub
inc
adc
mov
jns
int3
mov
or
in
stos
ljmp
push
insl
divl
adcb
arpl
lret
adc
hlt
inc
nop
sbb
adc
or
movsl
inc
sarb
push
push
stos
enter
and
xchg
insb
push
xchg
es
cmpsb
jg
xor
pop
lret
xchg
jo
xor
inc
lret
jns
lods
fisubrl
dec
daa
sub
mov
add
adc
call
std
jp
adc
fucomip
rclb
xchg
add
fs
or
in
dec
out
leave
cltd
movsb
roll
cld
xor
pop
pop
push
in
sahf
cmpsb
lret
inc
in
mov
sbb
mov
out
mov
pop
arpl
fwait
add
or
aas
mov
ljmp
inc
rcl
xorl
call
add
push
add
jae
dec
add
iret
xor
inc
or
cmp
xchg
dec
sbb
jmp
dec
movsb
lret
bnd
je
pop
or
rcrb
pop
xorl
inc
ret
jbe
mov
adc
fs
outsl
adc
loope
rol
call
mov
inc
dec
and
cmpsb
es
imul
dec
inc
jnp
nop
dec
stos
in
inc
lock
bound
mov
shrb
hlt
das
data16
sbb
loope
mov
cli
pop
add
das
arpl
sbb
inc
push
int
mov
mov
ljmp
jne
cmp
or
xor
repz
xor
and
mov
inc
or
lret
inc
ffreep
leave
lahf
xor
xchg
jle
popa
rcrb
sbb
aaa
mov
push
cmpsb
aad
jg
insb
pop
cmp
add
pop
mov
push
les
daa
shll
adc
jns
cmp
jl
xlat
mov
lahf
ret
pop
shrb
int3
push
and
out
xchg
rcl
mov
mov
sbb
push
sub
movsl
adc
push
cmp
sub
xchg
insl
sub
or
mov
dec
cwtl
mul
movsl
pop
xchg
mov
les
js
mov
lock
shlb
roll
rcl
repz
sub
daa
xchg
ss
cli
or
or
add
and
mov
popl
mov
dec
fadds
je
int
lahf
jg
lret
mov
push
aas
dec
jns
xchg
inc
push
push
aaa
mov
pop
cmp
pop
cmp
mov
divb
divb
insb
daa
fstpl
xor
mov
pusha
xchg
out
movb
sub
sub
xchg
ss
and
sub
loopne
add
adc
icebp
mov
outsb
inc
or
aas
xor
popa
enter
xchg
sbb
and
or
stos
push
shlb
repz
iret
jmp
add
add
lcall
pop
inc
test
cmpsl
lods
test
cmpsl
push
add
sbb
dec
std
outsl
ss
cwtl
cmp
add
daa
mov
lods
and
daa
lret
je
lods
or
insb
fidivs
and
loope
or
cmpsb
or
testb
fstps
iret
and
aam
cmp
adc
dec
add
and
jno
cmp
push
pop
mov
mov
fstl
mov
popf
sbb
js
jg
aas
outsb
mov
into
jo
pop
cmp
cltd
cwtl
mov
lret
xchg
sbb
jae
cmp
pop
mov
pop
inc
pushf
sbbl
fists
call
mov
addr16
pop
push
pop
fwait
pop
xor
pusha
and
jp
or
jae
mov
pop
jmp
leave
addl
adc
push
aad
jb
or
cmpsl
xchg
shl
push
and
dec
data16
test
imul
adc
dec
mov
and
movsl
scas
mov
pop
das
lds
movsl
push
and
add
mov
push
fcomps
test
aam
fistpll
loop
dec
pop
dec
or
fcom
sbb
mov
call
dec
xchg
xchg
fdiv
shll
enter
sbb
mov
arpl
mov
rcl
jo
mov
fmuls
mov
pop
jp
imul
mov
and
das
push
fldt
mov
pop
pop
popa
adc
mov
negb
mov
or
sub
insb
in
xchg
dec
lret
push
mov
frstor
dec
cmc
mov
or
mov
es
push
adcb
mov
dec
es
jp
jecxz
cmp
mov
fdivrs
jo
lea
movsl
and
les
inc
addr16
sub
mov
xor
sbb
inc
add
out
inc
aas
lret
mov
or
mov
cli
sbb
add
fdivp
cmp
mov
pop
cs
mov
jo
or
adc
mov
cwtl
sti
leave
arpl
push
movsb
popa
stc
or
shrb
push
dec
out
sub
loopne
xorl
std
outsl
aam
jecxz
mov
mov
sub
pop
xchg
je
imul
mov
push
push
push
mov
jecxz
push
cmp
loop
push
icebp
jnp
jmp
push
sub
cmp
sub
mov
std
lcall
in
mov
cmpsl
mov
lret
adc
pop
int
popf
mov
inc
push
sbb
cs
hlt
and
add
xchg
xorl
pop
sbb
out
cmp
fstps
lcall
sub
xor
inc
cmpsl
fwait
mov
jae
mov
add
popa
jo
cmc
xchg
inc
ficoms
mov
xchg
stos
mov
push
adc
pop
pop
push
scas
pop
sub
mov
mov
data16
jnp
mov
add
sub
fbld
lahf
dec
mov
mov
dec
sub
add
add
daa
sbb
dec
cmpb
rclb
lret
adc
xchg
and
inc
lods
fnstenv
ficoml
dec
stos
pushf
xchg
jl
fsts
inc
xchg
adc
inc
adc
cmp
sub
stc
pop
xchg
inc
xchg
jle
push
dec
cmp
dec
jmp
inc
lahf
loop
inc
push
mov
push
addps
dec
int
fcomps
out
fistps
adc
or
icebp
icebp
nop
aaa
es
stc
and
adc
push
ret
movsl
mov
and
in
xchg
lret
add
loope
aad
and
pop
imul
jnp
add
lret
movl
mov
pop
out
out
mov
test
mov
popa
mov
push
lcall
cmp
int3
in
js
mov
cli
orb
inc
ljmp
pop
push
pop
imul
insl
push
jle
jge
xor
subl
push
inc
pop
faddp
bound
push
and
and
cmp
adc
test
ds
mov
inc
push
mov
popf
adc
pop
xchg
push
jae
xchg
pop
loopne
jno
aas
fsubrs
out
push
mov
inc
inc
mov
adc
pop
pop
sbb
dec
jo
ret
xlat
fs
add
xlat
in
push
filds
jle
ss
add
xchg
lods
arpl
jnp
adc
lahf
outsb
ficoms
leave
in
xchg
mov
jns
stos
add
push
idivb
stos
add
xchg
jmp
test
mov
mov
add
and
and
dec
add
out
push
ds
daa
push
flds
int3
or
stc
xchg
shrl
dec
cvtps2pd
jnp
add
push
lea
sbb
push
mov
jl
mov
and
inc
inc
loop
push
sub
pop
lds
sub
or
adc
sarb
stos
loop
cwtl
mov
add
mov
shll
in
add
mov
mov
pop
jmp
nop
xchg
mov
mov
stc
adc
or
inc
fldenv
adc
or
fucom
in
out
cmp
push
fucomp
mov
sahf
sub
fcmovnu
dec
es
inc
lea
cmp
cmp
pop
ds
and
xor
mov
aaa
dec
test
stos
stc
sub
dec
fsubp
sub
sbb
mov
into
in
jl
inc
movsl
mov
xlat
push
leave
mov
sbb
push
lahf
in
nop
out
int3
cmp
xor
sarl
inc
mov
cmp
lret
loop
movsl
fidivrs
pop
std
and
push
xchg
cmp
jmp
add
cmpsl
rorb
cmp
outsl
loopne
imul
inc
ljmp
add
scas
imul
adc
and
xor
es
or
inc
inc
mov
scas
ja
mov
jp
push
or
jno
in
lock
add
arpl
repz
adc
mov
out
add
adc
inc
je
push
int
jae
lods
lea
pop
lahf
push
arpl
mov
cmpsb
out
pop
ret
addr16
inc
pop
ljmp
sti
jecxz
mov
sbb
jne
or
in
pushf
pop
pop
inc
xchg
out
xor
fcmovne
push
inc
lods
adc
dec
out
pop
mov
jne
out
pop
out
cmp
sbb
in
das
call
data16
ss
xchg
loope
mov
sbb
popf
js
pop
stos
cmpsl
data16
mov
xor
push
repz
jns
std
push
mov
lods
repnz
jb
hlt
push
push
cwtl
adc
jno
pop
sbb
cmpsl
inc
nop
xor
lret
aad
out
sahf
in
pop
pusha
xchg
or
cmpsb
xchg
inc
lds
mov
jecxz
and
fists
or
fs
and
test
mov
aam
xchg
aad
enter
mov
ljmp
add
jns
xor
xchg
ja
xor
scas
imul
xchg
mov
ss
inc
or
add
outsb
clc
scas
pop
mov
rol
jnp
out
fmul
shll
mov
sbb
dec
pop
lret
sub
ret
cli
or
into
xchg
std
les
popf
fistl
cmp
jge
pop
stc
fdivr
mov
popa
push
xchg
sti
inc
ja
stos
nop
jo
fmuls
pop
test
scas
adc
cld
adc
rclb
data16
or
and
mov
fisubrs
mov
adc
xchg
and
aad
je
sub
cli
test
mov
and
cmp
pop
repz
fidivrl
pop
mov
xchg
popf
shlb
ss
cmp
outsl
mov
fnstenv
push
fstpt
push
pop
or
inc
mov
mov
mov
pop
sbb
stc
mov
ljmp
mov
pop
jecxz
or
sbbl
sbb
aad
dec
sarl
stos
insb
in
or
rcrl
sbb
push
enter
sub
pop
test
adc
outsl
add
cs
dec
fldenv
jl
pop
fdivp
out
xorb
imul
je
cs
sahf
pop
cmp
adc
fcomps
jge
bound
popf
and
mov
jp
sub
addl
add
pop
add
jns
mov
push
shlb
dec
pop
adc
out
pop
iret
jmp
es
idiv
outsb
push
lfs
cltd
jbe
lods
mov
into
mov
in
cmp
push
cmpsb
cmp
cltd
pop
mov
mov
add
inc
outsl
mov
adc
xor
push
imul
fsubrs
mov
dec
xchg
xchg
xchg
pop
icebp
xor
sub
lock
dec
sahf
push
sbb
mov
mov
xchg
push
imul
mov
movsb
pop
pop
mov
xor
jb
mov
xor
sbb
shll
add
enter
sar
mov
sti
dec
js
xchg
and
int
sbb
aad
xchg
rorb
xchg
loopne
repnz
cmp
and
lcall
cmp
sti
test
stc
je
jns
xchg
packuswb
push
adc
dec
cli
ret
stc
icebp
xor
ja
movsl
add
push
mov
sub
sahf
cmc
sti
mov
ffree
sbb
mov
in
push
mov
and
pop
or
dec
jmp
mov
negb
mov
or
shr
js
cmpsl
or
daa
xchg
daa
cmpsb
pusha
lods
push
and
das
dec
iret
or
xor
das
mov
push
xor
andl
xchg
stos
sub
outsb
cmp
das
adc
fsubr
fnsave
lods
aas
sub
cmp
adc
sub
cli
test
push
push
push
mov
xchg
or
push
mov
dec
gs
cld
or
clc
ds
aaa
and
or
jnp
inc
push
scas
add
xor
out
int3
into
mov
adcl
inc
mov
dec
pop
ja
rcll
xchg
inc
fistps
mov
lds
out
xchg
cltd
mov
mov
lods
loop
fcompl
cld
gs
imul
xor
xchg
fidivrs
pop
add
mov
pop
jnp
lds
adc
dec
adc
cld
imul
xchg
popf
into
lret
orb
arpl
lods
aas
pop
add
add
aad
xor
pop
leave
dec
mov
inc
popa
mov
add
jbe
ljmp
or
mov
mov
test
fdivrs
inc
nop
test
lcall
pop
push
and
inc
mov
pop
add
push
pusha
fwait
int
test
pop
add
adc
hlt
gs
xorb
scas
or
shrb
sbb
mov
add
mov
adc
stos
add
xor
fistpl
fsubs
inc
push
cmp
int
ljmp
les
jns
pusha
arpl
lahf
jle
mov
jl
mov
pop
rcrb
xorb
mov
ja
cmp
or
iret
imul
pop
repnz
inc
fs
nop
inc
push
mov
push
add
das
add
lret
inc
fnstenv
sbb
cmp
mov
movsb
mov
push
mov
inc
pop
dec
mov
sub
test
lahf
leave
push
sub
sub
mov
lods
cmp
mov
add
and
fidivrs
mov
pop
or
mov
fmul
pop
xor
out
sbb
push
jbe
mov
nop
nop
xchg
ret
pop
shll
and
jne
add
xorb
adc
mov
pop
sbb
inc
mov
xchg
lods
mull
int3
dec
mov
nop
mov
int
pop
sbb
cmp
and
and
adc
pop
in
fnstsw
jnp
fwait
sbbl
mov
sbb
subl
mov
push
and
dec
mov
test
mov
mov
cmc
jb
push
jo
adc
call
nop
stos
cmp
rcll
xor
icebp
xchg
lcall
ljmp
mov
bound
arpl
in
cmc
cmp
test
arpl
lock
jl
pusha
inc
push
sub
in
sub
dec
lahf
mov
fisttpll
ss
sub
ds
add
mov
mov
imul
inc
jl
and
inc
pop
xor
lea
mov
jecxz
and
xchg
inc
pushf
pop
arpl
rcll
xchg
int
mov
and
mov
inc
push
mull
push
inc
imul
jle
xchg
add
je
cmp
pop
cmp
jno
fbstp
cwtl
jp
flds
mov
aam
pop
push
cmp
add
dec
add
xchg
push
inc
xlat
push
xor
or
insb
orb
enter
and
inc
sbb
ljmp
shl
out
std
sbb
lea
xchg
push
xchg
lods
xchg
incb
push
jmp
cmp
xorl
sub
and
fwait
xchg
popf
sbb
mov
call
les
and
cmc
mov
ror
das
cmp
pop
pop
cld
jl
clc
stc
xchg
shrb
in
fisubl
enter
test
xor
out
push
aam
pop
mov
rcll
addr16
and
filds
das
mov
test
leave
movsb
add
sub
sahf
int
mov
int
lret
fidivrl
pop
movsb
jmp
sbbb
ret
jne
cmp
xchg
popl
das
push
push
fisttpll
in
push
pusha
call
sbb
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
lock
add
add
push
add
add
add
add
add
add
or
