data16
call
add
sub
cmp
imul
mov
or
div
jg
notb
cmp
sub
mov
push
imul
mov
or
add
dec
std
mov
lock
add
cmp
sub
push
mov
sub
mov
sub
movl
cltd
push
add
add
add
add
sti
not
das
testb
add
adc
imul
add
sub
sub
sub
ficomps
sbb
cmp
sub
cmp
add
in
mov
scas
and
push
rorb
or
sbb
int
sub
or
pop
jp
adc
add
mov
mov
adc
push
out
sbb
adc
mov
mov
push
or
add
jmp
sub
or
adc
cltd
ret
or
jle
lods
adc
lock
sub
add
outsl
fucomp
movsl
mov
mov
mov
adc
xor
adc
dec
add
call
xor
add
movzbl
je
jbe
push
push
popf
or
sbb
fisubrs
clc
adc
decl
lods
sub
sbb
dec
cli
pop
mov
add
test
je
in
push
fcomp
mov
inc
adc
sbb
mov
xor
push
cwtl
or
add
out
pop
test
adc
xchg
mov
mov
rcll
aam
sbb
jbe
pushw
mov
jle
int3
repnz
test
callw
or
push
mov
xchg
sub
fidivl
adc
and
outsb
adc
dec
mov
mov
jnp
mov
gs
add
add
enter
fidivrs
xor
or
jbe
inc
mov
pop
ret
adc
sbb
or
insb
add
sbb
into
shl
add
rorb
popa
mov
adc
loope
add
pop
rolb
sub
pop
or
lcall
and
fs
push
sbb
add
jecxz
movb
leave
or
popf
rclb
mov
xor
loop
sbb
dec
or
add
add
push
cmp
sbb
je
adc
stc
add
mov
out
mov
dec
pop
lret
pop
mov
add
pop
jno
or
imul
cs
cmp
or
add
in
loopne
insb
push
pop
sarb
mov
rclb
out
sbb
int3
mov
cmp
outsb
adc
lds
pop
xor
loopne
mov
push
mov
pop
fcomps
xchg
mov
sbb
rcl
icebp
loope
fstpt
or
jo
sbb
sub
cs
rcll
enter
test
insb
cmp
in
aam
fwait
push
pop
push
add
sbb
addps
sbb
push
mov
lock
inc
pop
cli
test
xchg
xor
mov
je
add
leave
fisubl
fildll
or
add
loopne
jo
sbb
gs
movb
and
add
mov
incb
pop
mov
adc
shr
push
add
fs
mov
sbb
mov
in
push
add
inc
clc
dec
add
mov
pop
js
jge
pop
leave
fists
icebp
push
out
clc
inc
sub
cmp
jmp
dec
pop
mov
aas
cltd
adc
pop
mov
out
out
lock
add
adc
mov
add
shlb
mov
or
xor
cmp
dec
movsb
add
vcvttss2si
loope
or
mov
ss
sbb
test
leave
in
fiaddl
mov
adc
mov
xor
cli
push
enter
imul
push
cli
ds
or
shll
rolb
mov
add
or
sbb
lret
data16
sub
bound
xchg
add
push
add
roll
test
pop
cmp
divb
adc
sbb
inc
sbb
inc
popl
ja
ds
popl
pop
ljmp
cmp
adc
jb
call
mov
pandn
add
idivb
sarb
rorl
outsb
push
jne
mov
xor
pop
adc
adc
jl
jo
adc
rol
adc
push
pop
in
cmp
or
subl
cmp
xchg
cwtl
insb
cmp
or
mov
sub
cs
push
mov
add
out
cmp
mov
in
mov
push
ret
call
dec
gs
mov
cmp
sub
push
repnz
adc
ljmp
ja
jns
mov
rcl
mov
mov
mov
pusha
roll
cmp
adc
mov
sbb
loopne
cmp
mov
add
scas
add
adc
mov
lds
shlb
insb
adcb
pop
rcrb
push
cmp
and
sbb
or
xor
mov
add
sbb
push
jbe
sbb
js
stc
pshufw
add
ljmp
push
sbb
mov
adc
pop
stos
shlb
in
or
sub
fidivs
push
jb
cmp
aam
xor
add
fsubr
sarb
movsb
cmp
add
inc
out
push
dec
cld
cmp
and
pop
pusha
test
or
sbb
xlat
pop
daa
cltd
add
outsb
sbb
sbb
lods
shl
sbb
fdivl
xor
adc
push
cmp
fiaddl
lock
xor
or
cmpsb
cmp
insb
adc
push
sbb
lcall
or
ret
ds
inc
cmpsl
inc
adc
fidivs
call
cli
or
addb
enter
or
mov
sbb
je
cmpsb
sbb
and
in
scas
lods
dec
sbb
sub
or
imul
adc
add
adc
inc
or
and
mov
jecxz
adc
add
pop
cmp
fisubrl
add
roll
scas
inc
cmp
pusha
add
xchg
or
lock
icebp
push
lds
push
mov
or
add
dec
sahf
fs
mov
jecxz
sbb
clc
xor
adc
dec
ret
stc
adc
out
adc
sbb
and
sahf
lret
subb
aam
adc
sub
aam
ljmp
jo
pop
hlt
cmp
sbb
push
sub
sarb
mov
add
dec
test
mov
test
pop
ret
aad
rorb
ret
out
ret
adc
add
push
fdivr
pop
clc
adc
icebp
jne
enter
pusha
or
adc
add
pop
cli
dec
push
out
idiv
je
test
xchg
ret
cmp
shrl
sbb
xlat
pop
and
ficompl
sti
pop
and
jmp
sub
rcr
xor
je
push
sbb
lock
and
scas
into
jp
dec
add
shr
and
repnz
dec
imul
xchg
pop
cmp
sub
jo
xchg
sbb
insb
roll
mov
clc
sbb
test
cmp
jecxz
test
mov
ret
xchg
or
add
out
pop
sbb
shrl
adc
mov
adc
unpckhps
jg
idivb
outsb
ret
cmpsb
stos
push
iret
jmp
enter
jmp
cmpb
cmp
push
pop
addl
adc
rorb
push
jb
pop
fsubl
sbb
sub
ret
inc
mov
mov
test
loope
push
js
or
dec
push
ja
les
or
rorb
adc
mov
lcall
out
mov
add
mov
dec
lret
ljmp
ret
xor
mov
in
jbe
cmpl
js
sbb
push
and
notb
enter
add
sbb
je
test
in
push
ljmp
mov
sbb
dec
jle
and
sbb
jmp
adc
int3
sbb
pop
cmpl
fidivrl
inc
inc
ljmp
fisubrl
fmull
test
ficomps
test
fsubr
out
add
adc
mov
ds
sbb
sarl
loop
inc
add
adc
xchg
jne
add
aam
adc
js
xor
int3
dec
fcompl
lods
push
add
sbb
cmp
push
adc
imul
scas
lret
pop
lock
shll
or
pop
mov
cli
push
adc
leave
fisubl
cmp
inc
rcll
js
in
sbb
push
push
in
add
ret
loope
fimull
out
pop
in
and
pop
cwtl
pusha
cmp
xor
lock
lock
push
mov
je
movsb
enter
lock
sub
mov
cmc
push
movb
sarb
adc
sbb
push
add
addb
sbb
add
ficomps
pusha
sbb
jnp
std
movsl
sub
call
pushf
add
pop
ret
repnz
shl
data16
cmp
mov
jno
mov
and
adc
add
clc
xchg
and
rorb
ret
adc
mov
sahf
insl
filds
fdivr
mov
or
push
repnz
dec
cmpsb
add
pop
incl
mov
shl
push
and
imul
cmp
cmp
and
pop
sbb
inc
loopne
inc
dec
fisttpll
call
hlt
cmpsl
jns
test
jl
or
push
mov
sub
pop
test
pop
scas
mov
rclb
mov
push
outsl
pop
adc
aas
sbb
or
enter
adc
or
xchg
ljmp
add
fs
sti
adc
push
adc
call
pop
or
mov
orb
mov
fcoms
ljmp
test
and
dec
push
jne
adc
mov
jno
and
fsubrs
loop
jle
mov
loop
das
in
push
dec
mov
push
inc
cmp
pushf
cld
mov
loope
enter
fidivrl
adc
and
mov
mov
add
and
and
pop
mov
push
sub
push
mov
xor
popa
stos
shl
dec
or
sub
dec
sbb
push
arpl
and
sub
repnz
xchg
stos
add
sarl
jp
lock
movsl
loopne
ret
push
sahf
push
xchg
push
xchg
xchg
enter
lret
sub
shlb
push
shll
push
jno
sbb
sbb
imul
add
in
sbb
hlt
cli
cwtl
movb
sbb
push
mov
jl
icebp
jne
jmp
mov
sbb
movhps
mov
or
pop
push
push
or
leave
test
scas
cli
adc
in
or
ljmp
mov
push
add
mull
sbb
sbb
jp
cs
sbb
sahf
shll
pop
sbbl
insb
push
xchg
call
push
jb
xchg
inc
mov
cmpsb
dec
daa
nop
jge
in
lcall
mov
insl
bound
xchg
cmp
loope
ret
jle
inc
lods
sbb
inc
notl
ret
cs
adc
cmp
dec
lods
or
sbb
push
pop
stos
push
imul
jo
stc
xchg
adc
stc
daa
xchg
adc
enter
rcr
pusha
adc
add
jg
pop
xor
push
sarb
adc
xlat
push
push
lret
push
mov
roll
les
rcl
mov
dec
xchg
cli
inc
adc
es
leave
push
push
mov
call
shrb
insb
xchg
mov
jns
out
and
adc
add
aaa
stos
xchg
adc
les
adc
pop
inc
scas
in
push
xchg
scas
repnz
push
adcl
mov
arpl
scas
sbb
lods
mov
or
movb
mov
mov
push
pop
xor
jmp
jg
hlt
add
push
loop
shl
mov
or
add
inc
repz
pop
adc
int
push
xchg
rclb
or
aad
cmp
mov
pop
dec
or
push
mov
lods
sub
loopne
ds
rclb
add
clc
stos
jle
mov
mov
fnstsw
fs
xor
add
push
sbb
shrb
xchg
jno
sbb
sbb
ljmp
mov
sbb
mov
jle
mov
shlb
inc
xor
fsubl
pop
movsl
enter
pushf
mov
not
fs
jl
xchg
aad
xchg
push
mov
sbb
adc
add
gs
ds
xor
mulb
xchg
loope
in
jl
xor
push
cmp
cmp
pushf
mov
or
orl
push
test
call
dec
or
mov
test
mov
loopne
lock
mov
mov
dec
imull
dec
sub
and
xchg
adc
sbb
dec
je
cmc
icebp
ss
ret
mov
pop
add
adc
pusha
or
clc
sarb
push
and
sub
ljmp
call
sahf
xor
leave
add
test
xchg
ds
sarb
adc
cmpsl
xchg
sub
cmp
jl
hlt
adc
js
mov
pop
add
jo
sbb
inc
aaa
sbb
repnz
adc
mov
ret
push
out
daa
daa
push
enter
pop
jo
call
ret
shll
fldl
inc
lock
push
sub
dec
rcll
sbb
jmp
mov
mov
shl
cli
icebp
icebp
and
into
call
lret
in
rorl
push
rorb
jmp
xchg
jecxz
cwtl
mov
rcrb
push
adc
or
sbb
xlat
or
mov
xchg
push
push
xchg
inc
push
mov
fisubs
cmp
or
jmp
sbb
adc
sbb
fucomp
adc
int3
add
push
mov
mov
add
punpckldq
lock
inc
jp
cltd
ror
lods
clc
push
xorb
lret
add
mov
ret
adc
stos
shr
cs
test
clc
lret
inc
mov
add
push
into
mov
sbb
push
jle
jecxz
aad
out
mov
and
jmp
test
push
adc
ljmp
add
in
cmp
and
mov
shlb
add
ss
jmp
or
add
or
jbe
ret
jg
cmp
sahf
js
and
out
jmp
push
dec
mov
call
xor
push
mov
or
insl
rcr
add
pop
add
add
out
lock
push
inc
addb
out
push
mov
and
or
mov
or
push
add
shlb
pop
cwtl
sbb
and
push
mov
fcoms
mov
fimull
push
push
pusha
les
mov
push
jmp
add
cmpsb
xchg
pop
data16
movsl
sbb
sub
mov
ret
cmp
push
jns
pop
mov
add
mov
add
shlb
nop
add
jp
adc
dec
pop
xchg
leave
mov
xchg
into
adc
xchg
jbe
push
cmp
loope
sub
cmp
mov
dec
dec
mov
pushf
adc
or
push
adc
shlb
imul
cmp
push
out
or
inc
mov
sub
out
dec
dec
mov
xor
popf
and
mov
in
sub
outsb
pusha
mov
pop
xor
mov
push
and
mov
daa
push
or
imul
inc
mov
cmpsb
push
adc
cltd
push
mov
inc
cwtl
rclb
and
sub
bound
shrl
cwtl
dec
and
shl
scas
jne
mov
test
jp
mov
push
cwtl
sbb
imul
cmp
push
test
push
sbb
orl
inc
lcall
xor
cmp
sbb
jo
sbb
add
repz
sbb
jge
ss
pop
loop
into
int3
sarb
test
add
add
push
ds
inc
pop
inc
sbb
xchg
jmp
lods
les
sbb
addl
pop
jle
push
pop
add
cmp
sbb
xchg
adc
pusha
mov
mov
fpatan
add
or
shrb
sub
xor
pop
xor
pop
push
pusha
fcompl
and
test
lock
mov
jmp
mov
sub
sbb
cmp
cmp
push
xor
pop
into
in
lock
pop
test
mov
sbb
push
sbb
clc
fstp
dec
xor
push
test
add
mov
push
inc
or
sbb
add
shl
dec
mov
mov
data16
inc
fs
jne
or
pusha
les
repz
rolb
adcl
cmp
cmp
lock
loop
adc
adc
push
leave
xor
cli
cli
adc
push
dec
xor
add
rolb
add
cmp
shlb
dec
aam
pop
lcall
ret
or
rcrb
push
dec
sub
in
inc
stos
mov
or
push
movb
fcoml
xor
push
leave
and
xchg
xchg
cs
mov
jo
sbb
inc
js
xchg
adc
jb
push
mov
into
push
sbb
ret
or
shll
cmp
icebp
rcrb
inc
or
jns
ja
orb
movsl
les
adc
sbbl
loopne
add
xor
xor
fldenv
lret
mov
and
inc
xor
or
shrb
xchg
test
xor
enter
adc
daa
mov
cmp
das
or
cwtl
loopne
adc
or
call
leave
xchg
xor
sub
js
add
test
dec
iret
sbbb
adc
or
loopne
leave
insb
faddl
test
adc
sbb
add
add
pop
xor
or
jbe
adc
sbb
loope
push
mov
das
or
clc
add
rcrl
cmp
push
ffreep
mul
push
call
or
sub
aam
adcb
and
inc
scas
rcrl
addb
add
loop
insl
ret
dec
hlt
clc
add
xchg
add
add
mov
lcall
icebp
add
or
xor
xor
loopne
rcrb
sub
mov
mov
mov
push
mov
mov
sbbl
mov
dec
enter
sub
adc
in
and
pusha
js
rcll
inc
xor
push
jo
mov
mov
cmc
and
stos
adc
mov
and
fdivrl
sbb
daa
loopne
cmp
add
clc
sbb
mov
cli
nop
add
add
shrb
and
add
ret
sbb
aam
cmc
ret
fwait
sbb
inc
xlat
imulb
xchg
xchg
icebp
cmpsl
test
sub
sub
mov
rorb
hlt
adc
je
shll
jmp
and
xor
ljmp
rclb
push
pop
push
lods
cld
cmp
cmpb
sbb
ljmp
loopne
out
push
sub
and
add
cmpb
out
addl
sbb
adc
ss
jmp
movzbl
adc
mov
xor
xor
adc
xchg
sub
mov
rorl
sbb
push
orb
mov
out
lods
add
ss
lcall
outsl
dec
sbb
stos
stc
mov
mov
test
or
or
push
mov
out
cmpsb
inc
testl
ss
rcl
dec
push
mov
stc
adc
dec
leave
test
mov
ret
cmp
aam
or
xor
add
cmc
sbb
sahf
or
cmp
add
add
scas
jecxz
dec
pop
or
sbb
push
dec
addb
rorl
xchg
mov
or
push
and
jl
dec
das
rcrl
pop
mov
pusha
shl
loopne
or
rolb
add
ret
pop
loopne
loope
shll
push
sbb
scas
imul
clc
mov
rclb
sbb
rcrl
mov
add
clc
mov
adc
push
data16
in
or
add
inc
movsb
cmp
cmp
scas
push
notb
mov
jg
push
push
lods
push
loope
ljmp
or
sub
xor
xchg
or
jnp
mov
in
in
out
out
addr16
xchg
adc
sbb
dec
sbb
adc
adc
add
push
fadd
imul
add
sarb
push
adcb
cmp
push
loopne
xor
add
push
xlat
inc
dec
push
jmp
inc
sub
mov
adc
pusha
mov
inc
sbb
repnz
test
dec
xchg
mov
rorb
cmp
inc
add
cmp
lcall
add
addb
xchg
sub
ret
in
adc
or
fnsave
mov
cmp
sbb
xorl
mov
or
aaa
add
movsl
sbb
mov
or
push
mov
xchg
jmp
xchg
cmp
jne
mov
adc
cs
int3
add
fcmovb
sbb
sbbb
mov
cmp
push
mov
add
lock
hlt
push
and
xor
pop
push
enter
cwtl
add
imul
sbbb
sbb
xor
add
or
je
mov
ret
scas
cwtl
leave
test
push
ret
mov
mov
mov
sbb
add
jp
cmp
jmp
adc
push
push
jae
icebp
sbb
add
incb
sbb
data16
shrb
ffreep
rcrl
xchg
orb
sub
addr16
loopne,pn
inc
push
adcb
les
or
leave
dec
xlat
vpsubsb
into
pop
mov
icebp
push
jo
adc
xor
addr16
push
mov
mov
push
cs
rcrb
cmp
cmp
push
out
cmp
fcom
jp
mov
mulb
cmp
mov
mov
adc
xchg
pop
add
xorb
inc
cmp
cmpl
rolb
adc
orb
in
jg
sbb
mov
dec
icebp
mov
mov
cli
or
inc
push
lock
sbb
push
add
jb
push
mov
test
pop
test
loope
mov
inc
stos
lock
adc
pop
or
or
pop
mov
pop
les
xadd
test
cltd
adc
dec
lock
rcl
lds
jns
ret
mov
addb
or
add
repnz
jmp
pop
and
lock
mov
adc
subb
or
mov
sbb
ret
lods
daa
rcrl
mov
push
sub
xchg
mov
pop
ljmp
subb
pop
mov
sub
mov
rcrl
inc
pop
pop
adc
jbe
dec
sbb
aam
je
movsl
inc
pop
clc
paddd
outsl
shrb
adc
push
push
int3
shrl
xchg
cmpb
or
mov
es
loopne
andb
sub
ds
jo
adc
inc
aad
mov
dec
xchg
dec
add
push
lock
stc
sbb
xchg
dec
adc
or
hlt
popa
sti
or
push
das
jo
int3
jne
pop
rorl
xchg
or
pop
pop
jbe
and
xchg
inc
push
jb
cmp
loope
cltd
sub
push
mov
xor
mov
and
push
pop
popa
push
into
mov
nop
sub
or
ss
addl
les
xor
or
sub
sub
sub
pop
jbe
adc
inc
cmc
sbb
cmp
rolb
xchg
xchg
shr
pop
mov
push
jle
sub
sub
lock
mov
sub
lret
sbb
subl
fisubl
addr16
xor
inc
jmp
jno
push
fldl
ljmp
pop
push
stos
ret
adc
jge
or
js
xor
sbb
pop
ljmp
addr16
cmp
adc
rclb
cmpsb
cmc
daa
mov
pusha
fisttps
or
or
sbb
test
and
push
push
add
js
xor
push
xor
adc
add
adc
lock
jle
lea
push
hlt
ret
ret
inc
push
add
inc
jl
test
jl
sub
mov
or
mov
mov
inc
adc
in
inc
jb
popa
push
push
push
push
lods
add
add
dec
dec
movsb
pop
and
pop
mov
inc
idivb
jnp
cltd
lret
push
xor
sti
out
push
aam
pop
lea
inc
mov
ret
and
add
enter
addr16
mov
push
push
js
outsb
test
daa
scas
xor
icebp
aam
or
enter
pusha
jae
imulb
or
test
sahf
pop
in
lock
dec
shlb
xor
adc
pusha
adc
adc
and
add
pop
and
sub
rclb
and
xor
jp
mov
rcrb
mov
pop
hlt
add
adc
push
fwait
in
std
rcrb
test
call
sbb
aaa
icebp
dec
imul
jmp
dec
cmp
pop
jne
enter
mov
sub
ja
rclb
test
icebp
and
rolb
sbb
inc
sub
xor
mov
or
ret
imul
into
cmp
rol
bound
or
xchg
cmp
jb
inc
xor
je
mov
sub
push
and
dec
js
mov
jmp
je
dec
pusha
mov
xchg
mov
cli
pop
mov
lock
scas
adc
xchg
inc
enter
clc
adc
xchg
mov
xchg
mov
xchg
or
mov
sbb
pop
ret
lret
cmc
clc
xlat
add
dec
movsb
clc
push
jae
sub
or
cmpsb
pop
and
or
inc
pcmpgtb
outsb
xor
jo
jle
mov
daa
mov
xor
movsl
xor
repnz
nop
shl
sub
push
push
sbb
sub
movb
test
ds
xor
or
inc
loopnew
mov
pop
sub
out
and
pop
push
push
popa
jnp
push
rcrl
ljmp
loopne
mov
fidivrl
decb
jo
mov
rorl
in
push
dec
test
cmp
adc
dec
mov
sbb
pop
mov
sub
and
shll
scas
sub
push
orl
dec
ficompl
mov
inc
xlat
xlat
pop
call
push
xchg
sbb
or
push
mov
call
les
or
xor
stos
jo
inc
shll
jb
lds
add
imul
outsb
pop
negb
sbb
jo
rol
inc
jp
add
add
ret
xor
mov
ret
adc
push
push
leave
push
adc
push
dec
mov
in
loopne
and
cli
adc
push
or
sbb
mov
or
xor
add
sarb
mov
xchg
add
test
jnp
add
adc
pusha
lea
iret
lods
subb
movsb
lock
ret
je,pn
cld
mov
dec
adcb
push
dec
jb
and
lahf
lock
or
das
rorb
adc
sbb
leave
push
shrl
pop
clc
mov
xor
test
inc
push
jb
mov
movsb
imul
popa
imul
ret
sbb
xchg
and
das
inc
sbb
lods
rcrb
cmp
lock
call
inc
loop
sub
add
rorb
outsb
or
push
and
orl
je
cld
lods
roll
mov
test
add
loopne
out
dec
lret
fs
sbb
sub
and
mov
push
ljmp
lcall
and
mov
push
add
inc
xor
insb
loopne
pop
inc
loope
xchg
mov
lock
clc
cmp
add
fsubs
push
cmp
inc
cmp
xchg
mov
stos
mov
and
test
fimuls
inc
jo
mov
inc
call
or
or
inc
sub
xchg
shll
cmp
cmp
imul
xor
pop
sub
dec
decb
and
je
cld
cs
or
lcall
xchg
mov
stc
or
xor
inc
ljmp
or
dec
mov
das
mov
and
les
pop
cmp
dec
push
pop
leave
bound
rcrl
js
ret
cld
mov
lret
test
mov
sbb
js
lock
stos
enter
jo
mov
mov
rorl
push
adc
pop
orl
ret
sbb
cmpl
adc
dec
pop
push
jp
jno
mulb
xchg
test
div
mov
push
add
bound
dec
or
or
add
fisubrl
push
jecxz
fimull
push
xchg
cmp
sub
xor
add
inc
xchg
push
pushf
cmpsl
inc
popf
sub
fld1
sbb
xorb
stos
shrb
jmp
ror
inc
add
add
sbb
add
dec
insb
mov
rol
add
push
dec
dec
in
lahf
roll
cmp
out
addb
mov
or
sbb
xor
pop
cmp
add
push
jns
mov
es
adc
lcall
or
pusha
pushf
out
mov
or
jecxz
outsb
sub
mov
adc
negb
stc
pop
ljmp
jle
jle
push
call
adc
push
test
jb
bound
dec
test
in
enter
adc
push
cmp
cmpsb
and
js
roll
jno
and
jb
mov
icebp
sbb
add
adc
inc
mov
imul
addb
popf
xchg
shlb
js
sbb
or
push
adc
js
mov
and
jl
stc
mov
shr
out
or
ljmp
jae
shrb
push
push
pop
ljmp
rcr
loope
sub
jb
lea
flds
sbb
fs
xor
popf
or
leave
cltd
add
cmp
inc
xor
inc
fildl
outsb
pusha
xor
imul
adc
add
xchg
test
mov
ds
mov
shll
pop
add
mov
cmc
push
pop
push
lock
orl
or
sbb
mov
cmp
mov
daa
aam
and
sbb
pop
loope
push
mov
xlat
jo
leave
pop
mov
push
xchg
or
fisubrs
push
clc
pusha
insb
shrb
add
ds
mov
out
add
or
test
sbb
test
inc
pop
dec
adc
or
push
push
and
cmp
lock
insl
cmp
aam
or
cmpsl
lcall
pop
rcl
pop
paddd
dec
es
push
mov
dec
clc
push
out
test
dec
adc
arpl
test
push
out
cmpb
add
popa
adc
xchg
mov
es
cmp
adc
imul
fidivs
jmp
add
or
inc
mov
mov
push
test
push
adc
or
dec
mov
fisubrl
and
test
loope
in
mov
mov
or
insl
shll
adc
sbb
add
es
adc
push
xor
cmp
rorl
popa
push
xor
std
andb
push
es
adc
mov
loop
nop
addl
imul
push
pop
mov
incb
pop
shrl
push
xor
push
bound
fs
adc
enter
enter
bound
das
xchg
aam
ljmp
adc
mov
notb
dec
sbb
nop
jmp
add
arpl
test
xor
enter
cmp
dec
es
ret
aaa
jo
fs
pop
rclb
jecxz
or
hlt
adc
xor
pop
clc
add
and
shlb
xor
data16
les
add
or
jl
add
lcall
leave
adcb
loope
push
adc
add
movsb
and
dec
cwtl
hlt
dec
andl
scas
push
sahf
push
movsb
sub
jle
cli
or
insl
push
sbb
push
push
cmp
mov
push
jo
cmp
pop
mov
arpl
sbbb
popa
cmp
mov
cmp
mov
jmp
jne
sbb
and
mov
mov
and
lcall
lret
rcl
push
push
jno
ret
int3
call
rolb
js
mov
add
sub
shr
push
shrb
rcrb
mov
inc
rorb
ret
call
adc
test
rorb
ljmp
in
ljmp
lret
xor
pop
mov
hlt
lock
ljmp
and
rol
rorl
mov
pop
outsl
sub
push
loope
int3
ljmp
jmp
push
add
sahf
imul
or
or
dec
adc
xchg
out
insb
shlb
ljmp
jp
js
inc
data16
jl
or
test
or
adc
cmp
loopne
in
mov
push
push
push
mov
or
ljmp
inc
enter
insb
imul
lds
lock
test
mov
mov
les
das
mov
in
sbb
mov
sub
and
inc
and
ljmp
lock
sbb
mov
cmp
enter
lea
adc
imul
push
loopne
adc
adc
mov
out
js
mov
cld
sbb
test
cmp
call
ffree
pop
aam
pop
insb
test
cwtl
into
clc
sbb
push
adc
dec
xor
cmp
add
mov
adc
loope
es
ficoml
jp
ss
xor
bound
mov
icebp
adc
cmpsl
jge
mov
pop
popa
mov
jno
sub
cmpsl
push
out
jno
push
adc
lock
lret
jmp
pop
adc
loope
mov
adc
shrb
sbb
mov
inc
sub
in
push
add
ljmp
iret
push
ljmp
loope,pn
das
popa
es
mov
out
cmpsb
cmp
sub
cmp
xor
pop
mov
shll
xchg
testb
call
das
nop
ret
enter
push
subl
es
in
ret
or
adc
sub
sbb
imul
dec
into
imul
in
dec
cld
ljmp
loopne
clc
mov
roll
or
push
or
jae
ja
test
pop
shll
push
scas
out
repnz
sub
push
and
add
insl
inc
jo
jmp
repnz
adc
mov
xchg
lret
mov
aas
sbb
push
push
inc
gs
or
inc
mov
les
enter
xchg
std
lea
leave
cmp
je
fwait
jno
div
push
inc
lcall
or
or
add
shll
inc
pop
sub
rol
lds
mov
js
pop
nop
rcrl
adc
push
test
js
test
push
dec
and
push
adc
scas
or
out
sbb
cmpsl
cmp
add
clc
mov
aam
or
mov
fidivs
sub
out
jae
pop
jbe
push
sub
imul
fcomi
cmp
jnp
sbb
xor
sub
xlat
shrb
inc
out
cmp
add
push
dec
adc
sarb
test
das
dec
jo
sarb
pop
mov
add
dec
loopne
add
test
mov
test
cmp
es
mov
js
xchg
lods
jl
cli
or
push
pop
jecxz
mov
cmp
dec
push
push
rcl
or
sub
add
sbb
sbb
or
popf
inc
fidivrl
sbb
mov
inc
sbbl
inc
mov
push
add
fs
test
fcomps
adc
je
sub
xchg
adc
adc
xchg
push
shrb
push
test
imul
pusha
mov
adc
cmp
jb
retw
lret
jo
mov
mov
mov
sub
xchg
push
popl
sti
mov
icebp
fwait
add
adc
cmp
imul
add
ret
lock
ret
test
jl
xor
ljmp
adc
mov
mov
pop
rorb
cmpsl
sub
add
mov
rorb
push
pop
inc
mov
and
scas
mov
xchg
push
out
nop
lea
push
shl
sub
cmc
cmp
call
mov
fs
or
insb
lret
add
push
lcall
adc
dec
rolb
pop
inc
test
mov
sbb
movsb
sbb
dec
imul
addb
pusha
mov
adc
rorb
into
push
push
js
mov
fs
push
mov
nop
ds
dec
mov
jl
or
adc
add
xor
xor
push
divps
mov
add
push
lret
in
repnz
mov
adc
mov
add
jmp
push
fcoms
or
add
pop
lea
inc
movsl
inc
adc
lods
shlb
inc
cmp
mov
jmp
and
sbb
adc
push
shr
sbb
jecxz
mov
push
mov
ret
push
jns
add
lock
inc
shlb
xor
sarl
sbb
mov
add
push
push
push
push
mov
sub
cltd
push
xchg
aam
loopne
and
pop
jo
fsubl
call
stc
insb
push
lock
pop
popa
sub
int3
mov
out
sub
push
stos
or
ret
or
push
arpl
push
lea
jecxz
icebp
lods
adc
mov
test
or
fcompl
adc
fisubl
pop
in
or
xchg
or
pop
cmp
or
lret
test
clc
fdiv
xor
jno
adc
lahf
out
pusha
xchg
mov
loope
sub
dec
out
pop
sbb
mov
inc
jp
jl
sub
sbb
xor
cli
xor
push
into
inc
sbb
in
ret
test
cwtl
sbb
div
lea
rolb
inc
or
clc
decb
dec
add
cld
test
cmp
jb
shlb
cs
jo
mov
xchg
push
aam
cmp
cmp
leave
sbb
pop
xchg
loop
xchg
xor
flds
scas
add
lods
and
push
xor
fdivs
adc
mov
dec
adc
fs
mov
adc
dec
dec
pushf
clc
divb
movsb
adc
pop
mov
mov
pop
stc
or
push
jb
adc
stos
pop
test
test
sub
sub
es
push
xlat
add
push
xor
loopne
stos
sbb
xor
repnz
or
xchg
xchg
clc
pop
sbb
movsb
cmpsb
cli
icebp
push
xorl
mov
push
mov
ds
rol
aaa
lock
adc
or
add
cmpsb
add
icebp
mov
mov
pop
arpl
or
inc
cld
loopne
in
add
icebp
ret
add
and
call
stos
mov
les
pop
xchg
jbe
mov
jp
xlat
sbb
xchg
jp
clc
int3
pop
inc
xchg
push
xor
mov
push
aam
mov
xor
or
ljmp
sbb
pushf
cmp
loope
inc
sub
clc
sub
or
inc
mov
or
jge
adc
popf
imul
mov
push
xor
loopne
pop
or
xlat
dec
jp
ret
push
ret
add
push
adc
pop
das
scas
or
orl
into
xorb
mov
aas
jne
sbb
or
inc
popa
mov
pop
jno
les
push
insb
pop
shl
pusha
or
out
push
mov
or
sbb
adc
or
rcll
aam
adcb
repz
inc
xor
jne
pop
jbe
cmp
lea
sbb
jae
add
mov
xor
mov
push
and
addb
sbb
or
sub
cmovle
movl
lret
push
dec
popf
dec
mov
pushf
add
sar
and
or
mov
hlt
lret
fwait
jl
ret
add
sbb
push
xchg
sub
movsb
adc
mov
cli
nop
pushf
icebp
pushf
lock
rolb
xchg
mov
addl
push
test
xchg
pusha
or
mov
mov
in
ds
bound
icebp
and
subb
dec
mov
mov
xchg
pusha
cmpsb
repnz
jnp
test
test
sbb
mov
mov
cmp
sbb
nop
dec
xchg
data16
xchg
push
popf
push
cmp
shll
mov
rcl
hlt
adc
andb
sbb
push
lahf
jno
mov
out
cmpsb
pushf
xchg
or
push
ret
les
fs
inc
cmp
xchg
sbb
push
ret
jno
and
scas
mov
stos
push
xor
sbb
xlat
js
aam
inc
adc
mov
outsl
inc
xorl
xchg
je
int
inc
in
adc
mov
clc
fs
ret
lret
sahf
rclb
add
push
mov
mov
cmp
dec
jns
clc
adc
add
and
push
jge
add
push
sbb
push
cmp
sarb
les
ljmp
push
sarb
mov
cmovl
test
adc
jno
cltd
jp
or
ljmp
cmp
pop
lcall
push
rcll
push
mov
outsb
cmpl
pop
or
pop
dec
pop
sbb
inc
xor
leave
rorl
roll
or
movsl
out
jno
cmp
icebp
mov
repz
mov
sub
sbb
leave
adc
xchg
ret
out
jo
cmpsb
add
mov
cli
adc
movsl
jne
and
shlb
lock
mov
in
loope
cmp
adc
rcrb
pop
add
imul
cmp
dec
jp
add
rorl
push
and
sahf
mov
xchg
or
test
or
adc
or
rol
lret
and
rclb
andb
push
js
mov
push
in
dec
mov
stc
adc
jle
imul
adc
xor
pop
mov
fisubs
xor
rsqrtps
clc
jbe
add
push
test
aad
popf
adc
clc
mov
leave
ret
shr
add
xor
je
xor
es
scas
cmp
cltd
push
icebp
cmpsl
fnstenv
push
scas
adc
sbb
add
addr16
add
outsl
lret
push
or
popf
pop
inc
pop
rorb
aaa
mov
sbbl
cld
adc
add
and
xor
addr16
sub
cli
aaa
xor
insl
xchg
sub
or
push
incl
cmp
rclb
or
xchg
add
in
or
out
cmpsl
das
mov
and
js
data16
clc
clc
inc
jle
push
pop
test
sti
cld
sub
adc
pushf
call
lock
outsb
ret
into
inc
lods
fidivrs
add
or
pop
dec
xlat
cli
rcl
inc
adc
pop
shlb
push
outsb
cltd
push
imul
push
push
xchg
cmp
test
sub
add
mov
xchg
and
dec
cltd
andl
xchg
add
add
add
add
adc
call
nop
or
xchg
cwtl
mov
gs
xor
scas
les
ret
sub
push
push
inc
in
xchg
pop
nop
push
and
cmp
and
or
lea
test
xlat
push
dec
testb
mov
adc
movsl
sbb
data16
cmp
cmp
addr16
jg
stos
aam
cwtl
rclb
lock
loopne
xor
bound
add
or
out
adc
out
into
andb
orl
pusha
lods
push
test
and
adc
mov
adc
push
dec
sbb
or
fisubrs
or
icebp
test
daa
decb
and
fwait
loop
dec
inc
add
xchg
aam
lret
push
sbb
ret
outsb
mov
and
ja
xor
adc
enter
cli
jo
cmpsb
mov
add
push
inc
scas
and
das
addl
or
insb
cmc
aam
clc
test
ret
or
fwait
leave
jg
inc
rcrl
lea
test
pop
cmp
xor
mov
push
cmp
rorl
in
mov
ljmp
movsl
aaa
dec
shr
roll
or
pop
mov
push
add
and
push
stos
jb
fsubs
push
data16
mov
lea
mov
dec
jmp
outsb
pop
jl
jne
shll
imul
pop
aam
and
dec
jp
bound
inc
inc
push
mov
push
pop
rorb
adc
adc
adcl
cmp
shl
pop
xor
dec
in
orl
or
or
cmc
movsl
push
xchg
jmp
mov
ss
and
or
out
xchg
mov
or
call
add
push
or
js
push
and
in
arpl
jp
les
cmp
adc
out
xchg
inc
xchg
xchg
cmp
mov
leave
ret
and
mov
scas
or
fimull
mov
add
in
xchg
adc
inc
fmul
pusha
or
add
push
popa
ljmp
or
pop
or
das
sub
loop
sbb
cmpsl
es
adc
push
push
lods
insb
sarl
jmp
repz
loopne
loope
push
push
or
mov
cmpb
adc
add
mov
and
daa
sub
lods
ficompl
sbbb
icebp
xor
pusha
mov
pop
add
dec
cmpsb
add
push
inc
js
shlb
pop
xchg
cmc
dec
popf
into
push
adc
sub
sbb
shl
hlt
scas
enter
sub
mov
or
pushf
rolb
nop
inc
mov
jl
sub
lods
mov
js
mov
push
or
jae
sar
call
push
mov
jmp
jp
mov
mov
lea
daa
mov
les
xchg
cli
add
vpunpcklbw
cwtl
clc
dec
pop
call
push
in
push
rcll
or
aam
adc
xchg
sub
pop
call
stos
loope
push
mov
inc
mov
cmpsl
adc
jnp
add
rclb
and
xor
pop
shl
sarl
and
mov
mov
aad
js
push
leave
stc
pop
adc
test
sbb
test
dec
xlat
nop
jbe
mov
rcrb
pushf
pop
push
cmp
js
out
dec
in
pop
mov
imul
lcall
inc
loopne
xlat
pop
push
shll
orb
rcll
or
and
fs
mov
cmp
mov
pop
dec
cmp
mov
pop
sub
insl
add
outsl
adc
cmc
sbb
and
xchg
xor
xor
lret
or
sub
mov
sbb
inc
orb
scas
ret
fstps
jl
cli
repz
out
push
movsb
adc
movb
repnz
and
sbb
mov
pusha
inc
xor
dec
sbb
inc
clc
or
movb
or
dec
fs
add
outsl
sahf
xchg
leave
hlt
pop
dec
lahf
mov
dec
pop
adc
push
loop
out
mov
inc
out
je
mov
loope
out
test
sbb
jp
and
adcb
sub
add
xorl
sbb
mov
ret
lds
push
jns
mov
ret
or
rolb
hlt
out
test
lea
pop
and
sub
adc
cmc
cli
adc
es
js
mov
push
pop
mov
andl
scas
pop
aam
and
mov
add
pushf
cli
or
rorl
movaps
data16
xor
lea
imul
push
sbb
adc
sub
jmp
and
pop
neg
subl
mov
lea
jmp
cs
sub
pushf
les
mov
xor
imul
jo
adc
push
pshufw
mov
enter
dec
push
jp
adc
cmpsb
mov
pusha
test
addl
ja
mov
lea
nop
mov
les
lock
adc
cmp
sbb
insb
push
sbb
dec
mov
xor
stos
sbb
int3
inc
popf
mov
popa
sub
cmp
pop
cmpsl
vshufps
and
adc
pusha
test
rcll
xor
adc
sub
adc
inc
cwtl
roll
mov
sbb
jo
cld
dec
mov
xor
test
pop
daa
sbb
add
pop
pop
sub
and
push
jl
js
mov
sbbl
rcr
dec
movsl
lock
push
xchg
js
cltd
dec
js
shlb
sbb
nop
adc
lock
push
mov
mov
pop
xadd
rcrb
fwait
cmpb
inc
ret
cld
es
test
mov
pushf
and
js
sub
call
test
popa
or
sbb
cmpsl
and
add
clc
and
cld
or
dec
pop
add
loop
and
je
dec
insb
in
mov
test
sbb
xor
std
mov
nop
fdivrs
push
cmp
addb
shrl
pop
fcmovb
sbb
ljmp
out
popa
insb
sub
ffree
cmp
adcl
aaa
into
ljmp
dec
inc
jp
sbb
orb
lods
push
mov
imul
pop
mov
dec
or
pop
pop
test
loop
test
or
or
sbb
ljmp
rol
xlat
movsl
mov
ss
adc
stos
and
pop
pop
imul
cmpsl
rolb
adc
push
sahf
pusha
push
mov
add
sbb
pop
xor
sbb
sarb
lds
add
or
loop
nop
hlt
mov
add
jo
or
push
clc
ret
jecxz
test
dec
push
aad
mov
andb
xchg
adc
outsl
test
jmp
arpl
or
inc
or
mov
hlt
mov
mov
stc
fs
mov
aad
insl
in
cmp
and
dec
bound
rcrb
jo
and
fisubs
push
pop
inc
jo
lock
jbe
adc
enter
test
push
bound
ret
add
or
inc
rolb
rclb
mov
adc
and
ss
add
adc
or
push
sub
pop
test
imul
movsb
adcb
or
adc
scas
ds
insb
lock
and
adc
sbb
push
push
les
pop
dec
fadds
jbe
inc
push
sbb
pop
xor
shld
test
dec
js
idivb
sub
enter
push
inc
sub
ret
rcr
xchg
shlb
xor
push
imul
std
movsb
stc
pop
add
jo
push
push
adc
ret
lret
mov
sarb
push
mov
shl
insb
jae
dec
or
sub
sub
jmp
adc
add
cmp
sub
xor
or
and
sbb
sub
xchg
cmp
ret
sbb
dec
lods
sbbb
call
mov
mov
insl
bound
shrl
push
aam
scas
cmp
test
out
sbb
fistpl
xchg
addr16
mov
ror
mov
mov
sbb
cmp
call
out
rol
xchg
pushf
adcb
out
push
xor
ret
sbb
pusha
push
cld
add
push
mov
jp
icebp
cmpsl
adc
xchg
in
sbb
dec
outsl
jecxz
or
mov
sbb
or
notb
roll
out
inc
sahf
and
push
cmp
ret
and
dec
pop
or
sahf
stc
adc
xchg
push
orb
int
or
add
imul
je
fsubl
popa
jl
xchg
test
add
bswap
dec
cmp
push
cmp
push
push
mov
lods
andl
movsb
fistl
cwtl
add
cmp
lret
cli
imul
push
add
test
xchg
or
or
call
adc
add
or
or
push
call
or
pop
jbe
lds
jle
jns
arpl
xlat
push
dec
mov
cmp
das
jmp
xor
mov
mov
pusha
inc
daa
loopne
add
outsl
adc
ljmp
pop
jbe
or
add
lret
shr
test
pop
add
rorb
rol
add
adc
stos
bound
push
xor
je
jl
pop
add
mov
jns
xor
data16
jno
inc
cmp
call
jo
dec
outsb
scas
ljmp
enter
and
punpckhdq
js
inc
mov
stc
xchg
add
sarb
xchg
add
cwtl
cmp
int3
mov
add
fwait
mov
inc
push
xchg
rcrb
daa
mov
mov
je
xchg
and
cmp
out
jge
adcb
adcb
aaa
sub
popf
sbb
inc
test
adc
sbb
cli
or
adc
ljmp
pop
int
cmp
lock
in
nop
dec
jbe
cmpsb
inc
sub
loope
ret
lods
mov
adc
inc
or
cli
add
xchg
loope
sub
mov
popa
ss
pop
mov
add
mov
jb
or
or
loopne
mov
add
and
sbbl
mov
rclb
lods
xor
add
and
bound
adc
pop
pop
and
or
push
mov
push
stos
xchg
aam
pop
sahf
adc
dec
add
xor
pop
jne
add
and
push
mov
push
sbb
pop
jmp
add
inc
fcomps
stos
pop
loop
lods
je
in
fistpll
push
fwait
pop
loope
xor
out
movsb
push
push
ret
or
jmp
mov
into
mov
jo
ja
sub
movsl
cmp
aam
nop
inc
jae
pop
pop
jnp
ljmp
mov
ret
loope
cmp
jb
adc
jl
dec
out
dec
push
or
cmp
insl
push
add
add
mov
pop
sub
xchg
push
add
orl
add
pop
data16
push
push
or
cli
ljmp
xchg
loope
daa
sbb
push
sbb
xchg
adc
dec
pop
or
mov
fisubl
push
push
push
cmp
dec
fcompl
xchg
cmpsb
pop
inc
jecxz
inc
jl
add
aad
mov
sbb
adc
mov
fildll
push
dec
sub
repnz
lock
dec
jno
jb
inc
pushf
jmp
aam
inc
stos
pusha
push
lea
jl
xchg
pushf
cmp
sbb
mov
call
sbbl
jp
add
adc
mov
xchg
rorb
pop
adcb
or
sbb
pop
scas
test
dec
jge
jmp
rorb
cmpsl
mov
sbb
ljmp
inc
jmp
inc
je
loop
xchg
or
in
clc
aaa
into
jb
or
enter
pusha
jge
loopne
pop
fcmovb
sub
jbe
fcompl
adcl
in
daa
lea
ljmp
dec
lods
xchg
adc
insb
sbb
outsb
call
push
mov
rcrb
inc
jbe
movsb
outsl
lods
data16
lret
bnd
movsb
stc
das
jmp
cli
or
orl
dec
sub
cmp
add
movsb
mov
mov
add
nop
inc
enter
nop
xchg
push
js
movb
enter
sbbb
int3
sbb
jo
xor
adc
jnp
in
add
mov
xor
adc
adc
cmp
inc
aaa
xchg
pop
inc
popa
sarb
jp
sbb
rcrb
fs
adc
or
imul
test
loopne
push
lock
pop
inc
or
pop
push
cmp
repnz
pop
or
movsb
jp
je
mov
stos
mov
aam
imul
xchg
inc
sub
mov
or
mov
scas
orb
cli
jp
pusha
loopne
add
enter
jo
adc
movsl
cltd
loope
or
mov
xor
mov
test
cmpsb
shlb
cmpsl
sbb
mov
and
adc
shlb
sbb
nop
shll
adc
dec
lods
repz
xlat
pop
sbb
push
push
fidivs
adc
rorl
xchg
test
xchg
pop
pop
cmp
sbb
mov
sahf
ret
testl
cmpsb
rorb
inc
jb
mov
mov
add
xor
xor
mov
movsb
ficomps
ds
cltd
test
push
rorb
movsb
mov
inc
add
test
or
sahf
addr16
push
jp
inc
stos
setbe
stos
xchg
cmp
mov
adc
jne
jbe
and
inc
add
and
push
shrd
xchg
xor
adc
mov
xchg
sub
push
mov
or
or
push
add
cmpsl
sbb
add
add
notb
cli
dec
cld
sbb
mov
mov
pop
sub
jp
mov
cltd
sbb
cmpsl
or
add
subl
ret
pop
and
sub
xchg
pop
jno
sbb
ljmp
test
pop
mov
out
lods
test
adcb
loop
sub
inc
mov
and
addr16
sbb
iret
nop
loopne
jmp
ret
dec
pushf
test
add
fcomps
fldl
mov
adc
bound
push
jecxz
mov
cmp
sub
xchg
cmp
jae
push
imul
insl
leave
pushf
pop
je
inc
or
mov
xor
lea
fstpt
mov
push
rcr
gs
or
jbe
mov
add
pop
addb
mov
div
lods
dec
lock
push
or
mov
add
lock
lods
add
sbb
mov
fldenv
movsl
mov
pop
aam
adc
or
sbb
or
mov
cli
xchg
repnz
adc
push
into
loopne
pop
ss
stos
scas
rcl
popa
dec
xor
js
daa
cmp
xor
out
rolb
or
test
ja
mov
enter
adc
push
adc
test
lods
pop
lds
repz
push
jne
inc
jp
adc
mov
fcoms
or
shlb
sub
push
add
mov
sbb
or
dec
inc
ljmp
faddl
ret
aam
jl
pmaddwd
inc
and
mov
and
fnstenv
test
adc
xchg
leave
sub
pop
mov
iret
and
inc
push
sbb
xchg
movsb
cmpsb
daa
mov
add
or
out
mov
lock
inc
adc
or
dec
sub
jno
fisubl
mov
rcrb
or
push
push
adc
shrb
or
add
or
fidivrs
movsl
sbb
loope
mov
ss
add
sbb
andl
pop
hlt
adc
gs
sti
cmp
inc
out
leave
push
or
sbb
add
daa
js
pop
cli
add
std
add
sarb
adc
call
dec
jo
jbe
or
iret
clc
movsb
xchg
mov
adcl
ljmp
mov
mov
cmpb
push
lea
mov
xacquire
ret
pop
cwtl
movsb
xorl
arpl
leave
sub
lods
lcall
push
pop
cmc
dec
iret
sub
mov
jb
inc
xchg
jp
sub
mov
mov
mov
sarl
push
push
sbb
mov
add
adc
popl
mov
xchg
jle
sub
pop
sbbb
shll
movl
jecxz
into
and
xchg
cmp
fcom
fidivs
sahf
or
mov
or
sbb
rcrl
sbb
rcrl
cwtl
inc
mov
mov
movsb
fsts
cmp
inc
mov
lea
pop
adc
add
jecxz
xchg
into
icebp
dec
int
mov
sub
sbb
inc
and
dec
jge
adcb
xor
popa
adc
leave
inc
xchg
mov
fdivrs
loopne
adc
inc
mulb
loope
pusha
fs
sbbb
mov
sbb
push
mov
mov
and
push
mov
cmp
adc
push
or
xchg
pop
sbb
fidivrl
loopne
sahf
mov
lods
and
cltd
xchg
cwtl
andb
cmp
sbb
mov
jbe
add
aas
roll
push
sbb
add
jo
lcall
aam
push
xor
or
sub
adc
mov
add
xchg
lahf
add
call
and
enter
or
dec
jmp
mov
inc
lea
and
mov
pop
sub
ljmp
adc
pusha
push
pusha
and
add
xor
dec
add
lahf
mov
ret
pop
ret
clc
or
add
pushf
aad
push
int3
and
add
cmp
xchg
into
pop
daa
add
ror
mov
addr16
scas
pop
sarb
push
arpl
push
pop
or
test
cmp
sahf
jp
ss
or
sbb
inc
ficoms
xor
push
fs
stc
adc
mov
int3
arpl
cmp
xor
or
inc
add
ljmp
out
ljmp
pop
lds
pop
xchg
push
sbb
or
sarb
sbb
dec
faddl
sub
lret
inc
cmpsl
or
jb
adc
rolb
lock
pop
adc
sbb
aas
hlt
fldt
push
lahf
rcr
dec
pop
ret
sbb
fwait
bound
inc
adc
jl
js
adc
sbbl
push
imul
add
cmp
andb
and
negb
pusha
gs
push
inc
add
cmp
aam
adc
pop
or
jb
fdivrs
or
mov
cwtl
inc
add
pop
aaa
inc
xorb
pop
inc
cmp
add
xor
push
inc
test
jmp
jns
rcll
push
inc
loop
dec
adc
call
jp
adc
mov
push
fisttpll
push
inc
mov
mov
ret
mov
loop
popf
mov
mov
xor
shlb
loopne
cmp
xor
leave
aaa
repnz
xor
dec
fs
pop
and
popa
loop
adc
pop
jp
mov
cmp
or
xor
lock
cmp
aam
movsl
jne
xor
test
sbb
add
mov
lea
or
sbb
bnd
scas
in
add
leave
sub
shrb
push
add
and
clc
cwtl
add
mov
movb
stc
idiv
pop
lods
sub
rolb
push
sbb
xchg
push
loopne
loop
or
sbb
dec
cmp
jns
insl
xchg
add
jne
rclb
push
inc
movsl
add
sbb
aad
adc
cs
adc
insb
andb
dec
idivb
push
sub
rolb
add
pop
or
add
mov
mov
and
lret
sub
scas
out
or
and
or
mov
mov
enter
sbb
aam
push
stc
loopne
push
add
push
scas
add
repnz
clc
cmp
push
adcb
cmp
fiadds
pushf
rolb
jge
mov
popf
sbb
dec
and
sbb
lock
sbb
leave
scas
add
and
xor
andb
xchg
lods
jo
sub
shll
sahf
adcb
mov
cli
or
scas
add
jecxz
ret
mov
or
jecxz
mov
lret
pushf
jbe
xchg
cmp
pop
pop
out
dec
or
push
out
adc
add
adc
nop
add
andb
stos
shlb
jnp
pusha
rcrb
jp
pop
xchg
mov
sub
and
imul
xor
incb
leave
mov
arpl
repz
dec
pop
call
add
push
pop
test
adc
or
arpl
andps
cmp
rorl
cmp
mov
xor
pop
arpl
add
popf
aaa
add
cltd
inc
mov
push
and
mov
out
push
les
in
or
lcall
push
gs
aam
pop
mov
push
nop
cmpsl
into
jp
pop
or
addr16
jle
mov
xor
pusha
push
cli
push
call
dec
rclb
dec
lret
and
mov
add
or
add
adc
sub
scas
mov
sbb
sar
sbb
xchg
pop
into
scas
inc
cmp
js
call
arpl
pusha
cwtl
jge
inc
sbb
pop
xchg
add
or
or
push
aaa
je
and
xchg
push
pop
add
movsb
push
inc
leave
mov
out
sahf
add
xchg
or
js
pop
ret
add
push
pop
or
inc
mov
and
aam
mov
and
std
enter
ret
mov
pop
add
push
xchg
mov
pop
jo
adc
sub
cmpl
or
cmpsl
xchg
out
adc
mov
or
jge
rcrb
jle
cmp
jb
xchg
mov
add
test
or
sahf
cwtl
mov
imull
cmc
add
call
or
inc
push
dec
rorl
mov
in
in
add
mov
mov
loopne
mov
test
xchg
movsl
call
sbbl
fldcw
mov
lock
fmull
sub
xorl
mov
cli
jb
shr
sub
push
dec
mov
adc
leave
int3
and
rolb
cmp
or
mov
icebp
and
ljmp
enter
xor
pop
dec
int
in
imul
sbb
mov
adc
sbb
mov
ret
movsb
test
sub
mov
rcll
mov
cs
call
repnz
and
and
inc
stos
or
nop
cs
xchg
pop
push
mov
das
inc
sub
add
lds
adc
adc
je
jl
call
int3
rcpps
pop
flds
mov
pusha
lcall
xor
adc
and
out
pop
add
jo
rcrb
bound
adc
ljmp
xchg
cli
lods
pop
xlat
dec
mov
test
inc
cmp
mov
cmp
mov
decb
sub
ret
and
mov
or
dec
ret
jno
cmpl
and
sbb
fisubrl
push
shlb
xor
pop
je
movsb
cli
mov
jae
cmpsl
xlat
imul
cmp
mov
jecxz
sar
mov
sbb
mov
sub
fwait
mov
sub
lods
mov
rcll
adc
mov
rorb
xchg
jo
xchg
not
or
xor
push
fildl
inc
mov
inc
loopne
sbb
jo
pextrw
jp
lock
pop
loope
adc
roll
xor
pop
dec
imul
mov
dec
or
enter
sarl
lods
add
rcrl
xor
push
push
push
mov
or
push
mov
sahf
push
inc
scas
arpl
adc
pop
or
add
push
jge
jne
clc
cs
leave
dec
add
xlat
sub
fadds
mov
inc
pop
mov
push
sub
or
adc
lret
and
cmp
lea
push
sub
rorb
sub
shlb
cmp
insb
add
push
lcall
fcmovbe
xor
mov
add
fcomps
jle
lcall
sbb
sbb
dec
mov
punpckhbw
out
fadd
ret
imul
lods
add
in
mov
pop
addb
jmp
aam
lock
sti
shll
stc
or
rolb
pop
xor
fmull
push
imul
pop
push
test
xchg
inc
sub
push
lock
loopne
sbb
rcrb
or
mov
clc
mov
adc
cmp
pop
mov
add
rcl
loop
mov
sbb
or
xchg
je
or
dec
cmc
adc
call
cmc
mov
in
push
mov
push
add
rol
fildll
shrl
daa
aam
clc
dec
js
adcl
xchg
ret
into
lods
lock
mov
or
stos
xor
cmp
cmp
push
add
add
mov
pop
sub
jo
or
push
xchg
mov
adc
mov
adc
hlt
shrl
lods
cmpsl
sahf
in
push
xchg
invd
mov
loop
push
js
lods
sbb
push
or
sbbb
push
push
xchg
shlb
shrb
jb
sub
aam
inc
xor
ret
loope
jae
fimuls
dec
inc
pop
push
inc
icebp
cmc
repnz
cmp
pop
xchg
sub
movsl
lret
dec
dec
cmp
sbb
test
pop
pop
pop
push
movswl
lret
dec
inc
insl
sub
adc
xchg
nop
dec
lret
rolb
ret
stc
pop
pop
inc
dec
mov
enter
lea
das
jmp
into
add
mov
test
clc
mov
xchg
in
outsb
shr
lea
mov
or
sub
in
hlt
addl
dec
out
fsts
pop
rolb
lret
popf
or
pop
add
les
add
mov
test
push
sbb
pop
das
pop
push
lret
jb
mov
lcall
es
ret
je
imulb
pop
mov
addr16
lahf
jbe
jmp
ret
loopew
xchg
jg
fiaddl
jge
inc
or
xor
fsts
pop
fidivs
sub
sbb
inc
dec
push
test
cmp
shl
rolb
and
sub
pushf
pop
sbb
dec
loope
roll
xor
push
adc
mulb
pop
push
adc
leave
dec
dec
push
lea
add
aas
jno
push
mov
cmp
add
xor
movsb
push
push
push
sahf
lock
out
stos
push
or
cmc
xor
enter
sbb
mov
lret
or
sub
lcall
sub
xchg
push
arpl
add
mov
dec
jo
loop
cmp
push
adc
add
dec
xor
or
mov
call
jo
or
mov
sbb
adc
aaa
cmc
sbb
faddp
push
jae
pusha
add
push
mov
ds
test
and
adc
test
movsb
adcl
add
shlb
call
popf
mov
push
stos
test
imul
xor
loope
mov
add
pop
push
sbb
sub
pushf
xor
addps
sbb
or
jmp
test
sub
inc
sbb
cli
push
clc
or
dec
xlat
repz
add
cmp
xchg
mov
sub
cmc
fcoms
mov
xchg
pushf
or
fistps
pusha
jp
mov
xor
push
outsb
rcll
mov
pop
into
ret
mov
fs
jne
lret
jb
icebp
mov
nop
sbb
mov
lock
push
adc
xor
adc
sbb
xor
enter
push
adc
mov
xchg
sub
es
lock
movsb
insb
push
call
adc
dec
mov
mov
sahf
leave
push
cmp
xchg
icebp
test
ror
jne
xorb
clc
or
gs
mov
ret
pop
adc
js
ud1
cmp
sahf
xchg
movsl
pop
outsl
loope
push
add
dec
push
lret
popa
mov
xor
imul
sbb
loop
and
into
loopne
sbb
addr16
adc
dec
mov
push
ja
roll
test
mov
int3
lods
sbb
or
sahf
push
dec
lret
adc
xor
or
cmc
rorb
ljmp
sbb
and
or
ljmp
and
dec
push
fdivl
or
inc
xchg
xchg
sbb
das
insl
shrb
cmpl
lea
imul
sub
jl
and
popa
dec
pop
cli
icebp
arpl
add
add
mov
mov
push
add
and
notb
jno
fcoml
loop
jb
mov
dec
push
push
pop
icebp
xchg
ret
push
add
jb
cmp
add
pop
in
mov
jo
hlt
ret
imul
sub
cli
rorb
inc
add
jo
push
imul
xchg
orb
je
cmp
lret
js
iret
call
add
pop
lock
stc
pop
push
cmp
xor
dec
push
push
cmp
nopl
nop
push
sbb
add
sbb
cmp
cwtl
xor
push
movsl
inc
stc
or
jne
sbb
add
test
stos
adc
sbb
invd
ljmp
in
push
adc
dec
lcall
add
adc
fwait
test
aam
test
sbb
adc
adc
dec
cltd
xor
out
pop
cmp
imul
cmpsl
lret
cmp
es
inc
addb
out
ja
test
rcrb
xor
sbb
leave
hlt
add
jno
outsb
mov
cmpsl
mov
lret
or
cwtl
or
sbb
sbb
cmp
cmp
ret
push
fisubrl
je
insb
jle
inc
into
call
insb
punpckhbw
pop
icebp
push
inc
fisttpll
into
clc
pop
cs
cmpsl
xorb
push
xor
add
sysret
fiadds
fptan
xchg
push
sbb
cmp
jge
and
mov
add
in
push
and
pushf
mov
in
int3
mov
mov
ret
test
test
jbe
jns
xor
out
lods
dec
icebp
and
pop
insl
xchg
pop
dec
es
test
add
push
sbb
bound
insb
pop
call
fistpl
pop
shlb
pop
add
mov
push
int
notb
cmpb
or
push
jle
mov
pop
or
sbb
add
push
aam
mov
testb
loope
adc
imul
inc
or
cmp
mov
xchg
xor
jo
sub
add
inc
das
xchg
adc
jecxz
add
cmp
pop
inc
shl
mov
jo
jbe
or
jmp
and
inc
mov
xchg
in
js
nop
inc
es
mov
shl
xor
or
into
dec
xchg
jno
or
icebp
mov
sub
mov
jl
inc
test
pop
and
call
into
push
adc
inc
mov
int3
jp
repnz
loope
inc
sbb
gs
mulb
test
rcl
fs
jp
repnz
filds
popa
add
cli
cld
inc
js
ret
and
xchg
jo
jge
adc
cli
push
adc
test
dec
and
sub
pop
outsl
roll
mov
cmp
testl
sub
lcall
ljmp
xlat
lret
roll
dec
ljmp
adc
decb
cmpsl
mov
clc
mov
add
andb
or
out
xor
cli
mov
mov
cmp
xor
mov
test
xchg
mov
add
push
into
jmp
orb
ss
cmp
add
push
push
pop
popf
sub
push
call
inc
test
dec
je
sub
adc
xor
xor
adc
jo
mov
jo
js
arpl
sbb
leave
hlt
mov
cmp
and
ret
nop
mov
dec
leave
or
adc
repz
movsb
call
loopne
lods
andl
mov
push
jb
sbb
adcb
js
push
insb
pop
mov
adc
ljmp
pop
dec
cmp
cli
and
inc
or
jle
daa
xchg
push
push
js
pop
mov
call
push
jns
and
jb
pop
adc
pop
adc
push
xchg
or
jo
outsl
sub
rcrb
mov
lret
sub
and
mov
lds
sahf
jecxz
xor
xchg
add
jbe
mov
xor
cwtl
dec
fs
hlt
add
pop
pop
lods
test
mov
shlb
aas
ret
out
daa
into
push
ret
jo
pop
push
call
movsb
arpl
divb
cmp
mov
add
add
lret
push
hlt
stos
sbb
ret
sbb
test
adc
in
mov
xchg
dec
mov
xchg
sbb
or
out
leave
adc
test
mov
nop
fcoms
stos
loopne
daa
jmp
pop
out
jns
inc
adc
jnp
push
add
push
clc
or
or
jge
pop
jecxz
push
daa
out
adc
gs
pop
xchg
dec
mov
outsb
push
adc
nop
loopne
mov
lock
aam
adc
pop
sarl
mov
push
pusha
sub
push
xor
loopne
clc
inc
icebp
rorl
push
ds
test
jg
cli
mov
adc
dec
pop
in
sub
scas
das
loope
mov
jb
xorl
daa
gs
pop
ficoms
sbb
push
sub
xchg
es
dec
or
fistpll
fistpl
xor
inc
out
nop
inc
and
clc
sbbb
js
inc
lods
add
push
movsb
push
or
and
daa
rcrb
hlt
xchg
incb
jmp
sbb
add
icebp
aas
int3
cmpl
scas
or
icebp
xor
add
dec
ljmp
add
loopne
cld
push
jne
push
push
arpl
ljmp
cmp
inc
sbb
js
lret
add
mov
stos
mov
fwait
adc
push
aaa
mov
pop
sub
loopne
adc
adc
sub
add
int3
rolb
cmp
ficomps
adc
mov
test
shlb
stos
pop
pop
dec
xchg
or
inc
push
push
loop
mov
aam
enter
or
leave
push
xor
hlt
rcrb
cmp
cmovns
jp
push
jmp
push
inc
ror
sbb
cmp
into
sub
and
int3
xchg
ret
ret
les
sti
cmp
fldl
es
add
add
xor
mov
loop
add
xchg
push
int3
mov
pop
mov
js
jb
daa
sub
and
lea
or
jbe
inc
sbb
mov
stc
push
lods
mov
xor
sub
mov
js
popa
inc
mov
sahf
lock
add
movq
mov
ljmp
pop
fiadds
sbb
repz
sub
or
and
cmpsl
icebp
sbb
rcrb
or
inc
rcrb
fwait
inc
adc
daa
das
sbb
xchg
mov
xchg
inc
ret
mov
lock
dec
int3
mov
inc
shlb
adc
jne
mov
enter
and
stos
lahf
mov
subb
mov
push
js
mov
imul
rorb
loop
push
dec
movb
fidivrl
call
push
scas
or
leave
adc
lods
test
notb
lock
roll
nop
jl
movsl
popa
loope
les
pop
data16
orb
sub
orb
jle
mov
testb
adc
and
push
xchg
mov
daa
mov
inc
jp
cmpsl
mov
push
push
outsl
popa
leave
xchg
sbb
pop
and
cs
dec
dec
je
nop
sahf
and
push
cmp
sbb
sbb
andb
stc
push
xchg
js
inc
scas
push
lcall
loopne
sbb
pop
out
dec
cmp
pop
add
cmp
or
or
sbb
cmp
pop
adc
adc
les
push
add
jo
test
mov
add
pop
add
sbb
stos
lret
push
nop
dec
test
dec
iret
adc
and
loope
or
lret
loop
call
add
shl
int3
cmc
adc
movsl
add
sbb
sbb
cmp
ss
pop
mov
lret
xchg
mov
mov
dec
sub
call
cmc
push
pop
add
mov
cmp
xchg
orl
shll
or
adc
add
add
je
pusha
and
in
adc
jecxz
mov
hlt
ret
jns
addl
mov
aad
fndisi(8087
in
ret
xchg
cs
dec
adc
xor
and
fcoms
shrb
push
jecxz
jge
pushl
or
call
and
dec
int3
rclb
and
nop
rcrb
mov
pop
dec
into
mov
clc
repnz
aam
lea
test
pop
or
lcall
psrlw
orl
or
sarb
push
or
jp
push
push
push
pop
loop
clc
gs
ret
or
mov
mov
pushw
pop
pushf
xchg
out
adc
sbb
mov
loope
sbb
mov
xchg
dec
lock
or
movsb
adc
outsl
ss
stos
adcl
movsl
push
mov
push
jne
or
js
aad
push
rolb
xchg
mov
or
pop
inc
pusha
je
cmp
ficoml
and
jno
xor
dec
roll
shlb
loope
call
fcompl
mov
mov
push
push
push
cmp
or
dec
lock
add
bound
xchg
leave
inc
cwtl
or
push
icebp
xlat
sbb
mov
shll
shlb
add
popf
sbbb
loop
and
call
adc
je
popa
push
adc
repnz
cmp
ret
outsb
xchg
push
sahf
clc
or
movsb
inc
push
loope
popa
js
fsubp
dec
inc
cli
cmpsb
test
mov
push
push
data16
sub
xchg
inc
daa
add
mov
enter
rclb
out
rclb
push
lret
push
test
cmp
add
push
adc
push
dec
inc
repnz
int3
shlb
or
test
mov
adc
scas
dec
sahf
aad
arpl
push
add
mov
idivb
mov
pop
pop
fcoml
pop
sub
pop
or
or
adcb
addr16
add
xchg
loop
jnp
rorl
push
rcrb
icebp
adc
loopne
aad
mov
hlt
or
rcr
pop
inc
bound
mov
ret
sahf
add
or
pusha
shrb
bound
inc
popa
sahf
pop
dec
pushf
into
ret
cli
mov
fwait
jp
jbe
fwait
jp
or
sub
sbb
testb
push
mov
and
jo
icebp
loope
inc
jp
je
sub
xchg
les
in
insb
push
scas
lock
pop
xchg
or
sbb
add
push
rclb
add
movsl
cmp
jo
cld
cmp
loopne
jbe
and
lcall
clc
push
pop
lret
loopne
icebp
cltd
mulb
rorb
shl
mov
push
push
and
scas
sbb
adc
or
js
popa
and
loope
adc
popf
jno
ret
jmp
lret
clc
mov
movups
push
test
inc
or
sub
sbb
test
jno
ds
or
inc
loop
push
pop
outsl
shll
pusha
in
add
es
lock
jle
test
mov
push
icebp
xchg
test
pop
cmpsl
ljmp
loop
int3
ror
test
leave
sbb
fdivrs
adc
fsubl
or
aam
cwtl
lret
movsb
push
mov
xchg
faddp
pop
mov
movsb
pop
aad
icebp
jb
xor
ss
sub
or
sbb
mov
sbb
fidivrl
xor
push
insl
add
cld
loopne
mov
ret
and
sub
ficoms
lock
pop
add
xchg
pop
ja
stos
es
jno
adc
test
pop
movsl
mov
pop
inc
and
or
cli
sbb
mov
repnz
rolb
push
loope
add
mov
fisubrl
push
nop
sub
mov
fmulp
cmp
dec
rclb
adcb
add
cmpsb
xlat
cmp
mov
or
or
or
inc
jle
fidivrl
sbb
mov
sbb
cmp
add
push
stos
xchg
call
shlb
jp
add
sub
shlb
clts
pop
cmpsb
mov
inc
pop
nop
xchg
dec
ret
sbb
cli
clc
pop
mov
rorb
adc
add
sub
pop
inc
cmp
pop
sbb
push
pusha
clc
pusha
loope
inc
fsubr
pop
adcb
push
rclb
cmp
pop
mov
dec
xchg
xchg
pushf
or
mov
push
popa
push
fcomip
imul
mov
inc
xchg
push
shll
inc
push
insb
mov
jmp
mov
inc
adc
or
push
lret
bound
and
in
push
lods
rcll
xchg
or
jbe
dec
imul
add
mov
jo
sub
xchg
sbbb
sarb
imul
and
adc
cmp
xchg
lock
je
cmp
out
adc
adc
mov
sub
sbb
je
or
icebp
cmp
jbe
mov
mov
nop
pop
pop
inc
mov
add
loopne
dec
inc
pusha
cmpsl
pusha
mov
push
js
or
mov
push
xor
outsl
adc
push
les
inc
cli
loope
jo
dec
lock
adc
in
sub
dec
andb
test
mov
mov
jo
lret
data16
mov
jo
mov
movsb
pop
in
mov
pusha
rclb
sub
sbb
loop
adc
inc
sub
pop
sub
andb
and
jmp
mov
push
jnp
add
daa
pop
lret
ljmp
and
outsl
into
push
rclb
xor
jnp
pop
leave
das
inc
sbb
imul
lea
mov
sub
or
inc
sbb
xor
mov
jne
clc
adc
pop
clc
dec
sbb
psubusw
pop
add
add
mov
mov
inc
cmp
jl
int
addr16
fnstenv
mov
mov
rol
push
lock
lock
mulb
or
movb
outsl
call
notb
xor
add
pop
stos
cmp
scas
jno
push
push
enter
inc
pop
mov
xor
sub
into
dec
scas
and
xchg
add
sbb
dec
add
push
mov
push
sarl
ljmp
xor
mov
sbb
cmp
mov
push
push
sub
add
mov
or
and
inc
push
sbb
add
xchg
add
mov
adc
pop
adc
add
xchg
loop
and
xchg
test
test
nop
mov
fst
ret
inc
shlb
pop
push
add
lds
add
add
mov
mov
stos
insb
push
into
jne
mov
push
or
out
lock
leave
clc
inc
xchg
addr16
or
pushl
dec
ljmp
cmp
push
loope
dec
insb
dec
scas
xchg
mov
pop
cmp
or
adc
push
pop
jecxz
stos
test
mov
xlat
ds
push
jecxz
bound
add
mov
sbb
popa
dec
loope
xchg
add
jl
push
adc
push
sbb
add
inc
fidivl
mov
sbb
cmp
cmpsb
scas
push
dec
push
sahf
inc
add
gs
xor
out
sbb
pop
fs
adc
xchg
and
lods
mov
addr16
push
sbb
movsb
je
and
sub
ret
rolb
mov
imul
xor
adcl
call
and
or
inc
push
popa
sub
push
fsubrs
mov
jo
pusha
xchg
js
push
or
scas
push
out
into
ror
pop
xchg
jae
jne
cmp
loope
mov
popa
ret
pusha
jns
ja
jp
cmpl
inc
mov
xor
mov
pop
add
loopne
pop
arpl
mov
cmpsb
mov
sub
test
jp
in
nop
xchg
rclb
xor
mov
das
cmp
call
dec
add
or
ret
fiaddl
cmp
inc
mov
sbbl
xor
stos
fs
add
ds
ljmp
dec
add
mov
jbe
cwtl
adc
add
bound
stos
icebp
xchg
ret
xchg
clc
or
xor
and
sub
push
call
sub
out
xchg
jp
pop
sub
inc
leave
mov
mov
add
dec
aaa
push
push
sbb
pop
repz
shl
ljmp
dec
and
rcll
mov
and
xor
lock
rcl
dec
and
mov
js
cltd
into
out
push
push
or
mov
or
movsb
test
add
add
mov
jo
loopne
fwait
add
cmp
pop
lock
mov
cmp
adc
sbb
adc
sub
rorl
add
xchg
add
sub
add
repz
test
inc
rclb
aad
add
cld
push
adc
test
scas
mov
mov
push
out
popa
and
enter
je
sbb
addr16
push
mov
mov
repnz
xchg
add
out
cmpsl
xor
add
clc
std
cmpsl
test
mov
jbe
or
clc
xor
push
cli
push
inc
push
pop
adc
mov
clc
pop
lds
arpl
adc
pushf
das
sbb
jae
pop
lcall
rcll
sub
mov
sbbl
or
jmp
mov
cmp
mov
adc
xor
int3
imul
inc
or
sbb
test
xchg
rorb
sbb
les
cmp
adcb
xor
xchg
sbb
rcrl
pop
or
aam
sub
loop
push
movb
cmp
sbb
mov
mov
rolb
and
add
ljmp
mov
sbb
bound
xlat
inc
shlb
cmpl
and
out
les
mov
lea
outsb
shll
cmp
push
sbb
or
mov
push
mulb
rcll
pop
testb
xor
and
ret
ds
inc
into
push
add
adc
roll
cmp
shll
outsl
arpl
sarb
or
loope
cmp
cmp
punpckhbw
sahf
pusha
cmp
test
add
xor
imull
into
push
loopne
cmp
out
add
and
subb
adc
enter
leave
pop
ds
ret
mov
popa
jb
frstor
stos
cmp
loopne
jb
push
pop
xchg
es
pop
test
and
loope
add
jge
lret
ret
add
das
cmp
cmp
into
pop
popa
inc
mov
sub
cwtl
mov
add
add
xchg
lea
sbb
pop
jo
add
add
lock
cli
xchg
inc
mov
push
leave
fs
jg
dec
lock
shl
ljmp
gs
daa
cmp
or
pop
sub
lock
push
pop
les
push
add
cmpsb
xor
adc
sahf
aas
push
mov
pop
or
dec
cmp
addb
adc
jecxz
xor
xchg
shlb
call
xor
mov
jecxz
pop
sbb
xor
or
pcmpgtd
imul
push
cld
and
xchg
pusha
push
ret
adc
test
xor
xchg
aad
xor
call
cmpsl
push
or
repnz
sub
xchg
add
and
add
push
popa
imul
ret
xor
xchg
or
sbb
mov
push
xchg
ret
shl
cwtl
andb
push
imul
add
or
sbb
imul
fs
andl
inc
pop
pop
pop
sbb
scas
add
in
and
xor
scas
mov
je
cmc
imul
or
js
and
lods
add
inc
pop
add
adc
or
push
dec
xchg
hlt
and
shlb
xor
jmp
mov
xor
sbb
add
mov
add
inc
stos
add
push
test
sbb
add
loop
loopne
mov
repz
adc
push
inc
ret
or
cs
sub
xchg
stos
mov
lock
sbb
jecxz
sti
idivb
jo
or
xchg
cmp
stos
dec
dec
add
adc
sub
or
mov
pop
orb
stos
push
and
enter
sbb
adc
push
pop
adc
add
es
adc
and
ret
jb
rclb
ret
fidivrs
ljmp
js
mov
mov
push
cmp
push
cmpsl
push
jmp
aam
fadd
aad
js
adc
pop
decb
jbe
std
addb
outsb
xorb
pop
insb
or
or
sub
mov
adc
sarl
xchg
pushf
add
sbb
cmp
shl
jl
mov
sbb
add
push
aam
test
cwtl
jb
inc
test
or
mov
jp
sub
sub
je
cmp
js
sbb
push
rcrb
ljmp
lods
std
sbb
adc
cli
aaa
js
jmp
cmpsl
adc
pop
xchg
into
or
mov
je
push
aad
push
dec
push
pusha
sub
push
push
je
sbb
ljmp
inc
xchg
pop
pop
adc
push
sbb
movsl
sub
mov
add
in
fs
or
pusha
cltd
xor
jo
jo
popa
and
dec
rolb
lahf
es
add
dec
adc
call
sbb
jecxz
outsl
jmp
shrl
mov
jb
push
push
push
push
fdivp
or
ret
xchg
sub
repnz
jp
sbb
inc
and
push
xchg
jo
mov
adc
sub
int3
xchg
ret
into
in
cmp
mov
sbb
int
ret
test
pop
add
lods
xchg
or
or
enter
orb
mov
xchg
xchg
daa
dec
adc
add
jge
pop
popl
xor
addr16
mov
adc
xchg
mov
mov
add
and
sahf
lods
push
jne
push
fsubrl
pop
js
call
icebp
lock
mov
ljmp
cmp
push
dec
mov
sub
leave
or
lret
shl
ljmp
sbb
loopne
rol
rorb
shrb
or
jo
mov
pushf
adc
xor
fcmovb
and
and
adc
cmovp
lret
loop
cmpsb
das
sbb
rclb
rolb
pop
rol
lret
inc
xor
jmp
adc
inc
cmc
add
loope
aam
in
and
mov
xchg
mov
mov
xor
cmp
xor
outsl
cmp
sub
sbb
xlat
loope
pushf
sub
pop
invd
cld
or
push
push
jo
jne
lods
cmpsl
test
clc
adc
jb
xchg
fidivrs
nop
add
push
arpl
adc
out
sbb
dec
std
xchg
inc
lock
clc
adc
mov
rolb
push
mov
or
mov
or
sbb
enter
push
jae
mov
icebp
sbb
pop
add
add
sahf
insl
fnstcw
add
add
or
sbb
push
rcr
in
add
inc
ret
in
lods
xor
pop
add
adc
mov
repnz
arpl
sahf
cmp
idivl
inc
jp
aad
mov
adcl
lock
stc
adc
sbb
or
adc
fisubs
loopne
lock
pop
push
sbb
adc
or
pop
imul
mov
xor
and
mov
leave
leave
sub
jnp
testl
mov
adc
push
or
inc
add
mov
outsl
pop
sub
mov
pop
xchg
ret
jo
xor
pop
push
dec
jp
inc
and
repz
adc
xchg
or
stos
mov
jo
repnz
inc
cmp
mov
adc
mov
dec
mov
xchg
pop
sbb
sbbb
jo
cmp
das
add
fdivp
orb
push
push
stc
test
and
scas
xor
mov
jb
data16
cli
add
js
loopne
cs
push
adc
insl
inc
call
push
lret
or
cmp
push
scas
int3
test
or
jp
xchg
pop
in
add
shlb
add
push
dec
nop
adc
lea
pushf
mov
cmp
add
out
add
jo
fs
in
fwait
jne
xchg
ret
xlat
fildl
cmp
jbe
and
or
test
ret
repnz
push
insl
icebp
stos
add
mov
and
add
push
pushf
push
or
cmp
mov
add
mov
and
inc
jl
pusha
test
shl
rcrl
daa
fstps
add
and
or
adc
add
xchg
hlt
cmp
cmp
or
push
xchg
jno
je
int3
add
and
jo
add
or
rol
loope
mov
fldl
ljmp
test
adc
sbb
rol
fcompl
lret
shll
adcl
add
cmp
ret
mov
enter
or
leave
jmp
sub
mov
jne
pop
scas
inc
adc
mov
adc
ret
cmovs
dec
adc
mov
fildll
stc
stos
ret
out
in
push
rsqrtps
add
pop
loopne
add
pop
lret
mov
and
dec
cmp
adc
mov
push
lock
ror
sub
inc
or
sbb
cwtl
lea
rcrl
mov
jl
out
add
shrl
jl
dec
pushf
test
stos
clc
std
in
xor
xchg
jno
loopne
out
cmp
xchg
jae
dec
sbb
mov
push
xchg
icebp
stos
or
loop
ljmp
pop
mov
sahf
push
and
inc
call
mov
dec
jp
xchg
or
cmpsb
imul
test
inc
push
and
adc
sbb
add
flds
test
inc
andb
xchg
push
repz
adc
dec
fadd
and
xor
add
sbb
clc
or
mov
pop
fsubrs
mov
mov
mov
xchg
adc
xorb
adc
lcall
dec
sbb
ds
push
push
add
xor
push
xor
loope
dec
mov
stos
sbb
pop
int
push
push
add
xor
cs
xchg
shll
lock
xorb
xchg
fisttpl
push
cmp
dec
sub
dec
add
lock
pusha
gs
sub
mov
dec
dec
outsb
push
jno
movsb
adc
pusha
jne
push
pop
fistpll
jge
pop
dec
jae
psadbw
movsb
jb
pop
orb
and
add
out
push
aam
test
mov
mov
push
sbb
xor
adc
out
pop
push
sbb
inc
pop
loopne
pusha
lret
cld
add
add
add
loope
cmp
xor
adcb
cmc
ret
adc
xchg
mov
xor
push
cld
sahf
addl
les
sub
inc
add
add
adc
loope
call
mov
cmp
mov
pop
push
push
icebp
lods
lcall
mov
loopne
push
test
pop
test
and
add
aas
fs
nop
shrb
inc
lods
sbb
and
inc
jns
push
mov
aam
push
adc
rol
les
sarb
or
xchg
push
or
add
lret
xchg
fisttps
and
mov
xchg
xor
add
inc
xor
xor
aam
xor
and
sarl
or
sti
sbb
lret
in
adc
test
mov
rorb
les
ret
dec
sbb
fidivs
and
cmp
add
add
mov
aaa
pushf
adc
lds
cmp
mov
pop
lahf
and
mov
add
or
adc
push
int3
cli
inc
movq
push
aad
popl
dec
test
hlt
jae
rolb
sub
ljmp
mov
dec
insl
and
push
shl
lock
dec
sbb
jp
or
adc
pop
xchg
sub
cmp
sub
pop
add
xchg
lahf
call
imul
adc
jp
sub
stos
clc
sbb
inc
insb
or
sarb
jae
xor
fnsave
ljmp
gs
add
jmp
adc
dec
outsb
add
sub
or
lods
mov
sbb
das
cmp
xorb
or
rorl
pop
ret
cmp
mov
aam
call
cs
cmp
cmp
add
test
xor
dec
xor
movl
ret
sbb
sarl
iret
shrb
sub
and
in
sub
pop
nop
add
pop
push
dec
orb
xchg
pop
data16
stos
int
bound
sbb
sbb
sbb
adcb
rol
dec
pop
loopne
add
gs
cwtl
lock
inc
jo
ljmp
push
xor
sub
orl
sbb
mov
lret
bound
xor
dec
loopne
lret
inc
pop
sub
add
add
add
pop
xor
xor
clc
pop
ret
or
nop
clc
dec
fidivrl
in
push
dec
xchg
jo
icebp
movsb
and
adcl
add
ret
loopne
data16
movsl
mov
pop
pop
mov
adc
fldenv
add
outsl
aas
insb
insl
sub
sbb
stc
push
roll
insb
sub
ror
or
bound
ret
ljmp
inc
push
sbb
test
cwtl
add
scas
lea
sub
sub
cmp
call
jmp
ror
jne
popa
xor
lret
inc
call
rclb
jecxz
adc
popf
adc
dec
les
mov
test
mov
test
ljmp
sub
gs
dec
jmp
add
jno
push
rcrb
add
ss
mov
addb
stos
and
lock
addr16
scas
add
lds
xchg
cld
sbb
or
test
loope
push
out
dec
xor
sub
mov
nop
sub
cmp
js
mov
dec
loopne
dec
and
dec
aad
lods
into
and
sbb
dec
sahf
bound
sub
test
out
loopne
data16
add
pop
cld
fiaddl
fadd
mov
dec
je
daa
lods
scas
rclb
mov
push
dec
ljmp
inc
xlat
dec
sti
push
adc
loope
push
adc
outsl
push
outsl
rclb
add
cmp
adc
ret
dec
or
mov
jl
and
add
xor
lcall
add
and
ret
xor
jmp
mov
out
mov
or
xchg
adc
ljmp
add
xor
movsl
aaa
sahf
cmpl
cmpsl
enter
add
pop
jno
add
aaa
inc
pop
shlb
sub
dec
adc
cmp
dec
ja
dec
and
mov
pop
dec
ffreep
repnz
add
cmp
xchg
xchg
es
or
loopne
push
shrb
lods
jae
sub
push
mov
test
xchg
jne
jp
mov
call
les
mov
nop
leave
pop
sbb
push
lock
or
lcall
popf
lods
sarb
push
and
dec
push
cs
xchg
dec
sub
nop
push
mov
leave
cltd
or
xchg
sbb
sub
cmp
xchg
or
das
data16
mov
jb
sbb
ficompl
adc
fidivrs
test
stos
pop
movb
adc
pop
std
sub
cmp
or
lods
and
mov
add
push
in
or
inc
movsb
dec
push
xor
and
or
in
imul
sub
outsl
mov
add
rorb
push
aam
inc
cli
and
push
push
mov
xor
js
mov
mov
fadd
pop
or
dec
or
xchg
or
pop
and
sbb
xlat
pusha
mov
push
mov
or
inc
pop
js
mov
inc
fsubrl
add
xchg
dec
add
add
dec
lods
stos
mov
les
adcb
sbb
or
xchg
sbb
mov
xchg
cli
or
mov
sbb
inc
clc
add
into
push
sahf
test
rclb
jo
rolb
and
jg
jns
hlt
ss
or
cmp
xchg
cwtl
inc
push
testl
mov
cmp
mov
pop
or
add
cs
ficoms
movsb
mov
movsl
andl
xor
rcrb
bound
lcall
sub
fdivrl
pop
rolb
clc
xor
xchg
xor
add
or
push
fimull
sbb
adc
std
inc
cmp
or
loopne
pop
push
loopne
mov
fwait
loopne
xchg
add
sub
outsb
movsb
jmp
es
ljmp
pop
rorb
addl
push
pushf
jo
mov
add
push
dec
mov
push
and
mov
cmp
and
lret
ficoms
or
adcb
aam
rolb
repnz
push
leave
or
adc
rorb
fstpt
ret
scas
leave
and
xor
stc
dec
jp
rorb
mov
icebp
std
and
or
cli
jl
xchg
push
mov
pop
dec
inc
test
rol
add
pop
inc
fbstp
push
push
aam
jb
mov
add
movsl
daa
dec
scas
aas
jb
pop
jecxz
adc
adcl
xlat
xchg
add
jbe
loop
inc
rcll
dec
sub
call
loopne
in
clc
adc
loop
addb
push
ret
icebp
mov
mov
fiaddl
jl
jno
xor
add
xchg
lcall
sub
xor
arpl
sti
xor
pop
lods
sub
or
jb
cmp
cmc
push
or
gs
lods
push
jo
xlat
movsb
es
push
xlat
dec
call
enter
clc
fcoms
daa
rolb
xchg
aad
lcall
rclb
fcoml
xchg
lahf
pop
adc
sbb
fiadds
push
out
fs
sub
cld
sbb
lea
pop
sti
and
push
out
mov
xchg
or
or
sbb
jl
shll
or
cmp
pushf
add
sbb
ret
es
inc
jbe
dec
and
xchg
fstl
cmp
cmp
fwait
inc
in
les
or
xor
adc
divb
or
jp
add
sbbb
nop
or
andb
in
cltd
push
sbb
or
ret
push
mov
mov
movb
rcrb
lods
int3
xor
dec
cmp
xor
movsb
push
inc
sub
sbb
cmp
cmp
or
and
addb
cmp
or
xchg
mov
push
andb
dec
or
enter
popa
pop
push
mov
mov
in
adc
cwtd
mov
mov
pusha
pop
movsl
push
lret
sbb
inc
push
push
adc
or
push
mov
jb
mov
and
or
push
xchg
add
adcb
mov
ret
test
mov
loopne
cmp
cmc
adc
adc
xchg
dec
sbb
aaa
adc
lock
scas
mov
cmpsb
shrb
pop
or
mov
xchg
mov
xor
pop
popf
pop
ret
mov
push
jl
stos
and
es
sbb
xor
lcall
pop
fadds
mov
scas
incb
loope
cmp
arpl
fadds
repz
push
inc
cmp
mov
fsts
push
lods
lods
daa
xor
pop
pop
mov
rorb
dec
lods
xchg
push
push
andb
test
dec
js
add
xor
dec
seta
jp
dec
into
sub
imul
inc
pop
iret
xchg
pop
mov
out
add
test
sub
sbb
push
fnstsw
xchg
popa
pop
jno
xchg
sbb
push
dec
jl
call
push
jb
in
adcb
push
lods
dec
adc
ficoms
or
in
cmp
add
adc
and
rorb
test
mov
jo
shl
push
sbb
addl
sbb
sbb
rcll
dec
enter
push
and
add
hlt
add
jb
dec
idivb
clc
cmpb
push
adc
push
cmp
pop
xchg
adc
or
inc
push
inc
cwtl
xchg
push
ljmp
sbb
inc
add
sbb
fcmovnb
and
sbb
mov
add
lods
sbb
cmpsl
or
aam
add
push
xor
test
xchg
imul
arpl
ds
and
sbb
fdivrs
adc
mov
test
xchg
dec
add
or
pop
call
xchg
ss
xchg
or
or
dec
arpl
mov
and
aam
addr16
inc
cltd
subb
adc
xchg
out
inc
xor
push
mov
sub
xchg
mov
ds
and
nop
push
sbb
ret
push
or
cltd
fsubrs
add
clc
dec
lock
inc
mov
rcll
loop
sbb
push
ret
push
lock
adc
and
test
cs
in
add
mov
or
mov
pushf
add
push
lcall
and
rorb
sub
mov
adc
push
jmp
adc
test
add
jmp
adc
adcb
js
fs
sahf
sarb
lcall
imulb
or
fdivrs
push
xchg
lods
jl
inc
pop
push
xor
rclb
pop
addr16
in
in
cli
aam
fs
je
pop
jl
or
rcr
cli
lcall
inc
push
insb
or
mov
jb
or
cmp
js
push
xor
mov
push
adc
push
or
ret
add
jns
inc
and
sbb
outsl
popa
inc
mov
sbb
inc
inc
pop
xchg
mov
push
pop
xchg
adc
mov
into
data16
push
pushf
sbb
mov
adc
ret
or
lods
xchg
outsb
jmp
lock
push
sub
pop
adc
in
or
adc
xor
shlb
pop
fdivrs
push
adcb
mov
ss
or
mov
and
adc
sbb
arpl
popf
xchg
cmc
mov
jecxz
sbb
add
xor
loope
ret
shl
and
pop
bound
in
or
int3
jo
xor
mov
add
xor
dec
fcoms
popl
dec
mov
fs
dec
js
out
add
adc
hlt
adc
sbb
fs
xchg
orb
or
sub
xor
call
mov
je
or
sbbl
ret
cltd
xchg
ret
sbb
addr16
icebp
mov
into
or
xchg
mov
add
mov
sbb
imul
mov
sbb
popa
movsl
mov
push
bound
xchg
inc
loopne
add
movsb
int3
jl
add
adc
jge
push
xor
out
sbb
mov
movsb
add
movsb
pop
and
out
push
xchg
int3
orl
orl
or
sub
fimull
loope
inc
adc
lcall
popa
arpl
sbb
inc
loopne
fwait
cli
adc
push
loopne
push
mov
push
cs
test
cmp
pop
sbb
push
sar
enter
fs
xlat
xchg
sahf
fadds
stos
pop
shlb
movsl
scas
mov
xchg
add
push
rorl
or
gs
shrb
mov
and
inc
ret
mov
dec
loopne
mov
jae
mov
bound
mov
jp
imul
mov
sub
andb
sbb
mov
xchg
js
test
cmp
push
js
bswap
dec
jmp
sbb
sbb
pop
push
cmp
xchg
inc
and
jbe
xor
push
add
push
xorb
and
push
pop
inc
or
stos
mov
sbb
dec
fs
xlat
pop
aam
ret
inc
loop
push
sbb
rsqrtps
iret
bnd
push
ret
ret
into
imul
bnd
js
mov
sbb
dec
fsubrs
mov
in
nop
add
mov
pusha
add
inc
inc
sahf
push
sbb
addb
xchg
pop
or
test
or
cmpsb
loope
ret
imul
fisubrl
mov
pusha
insl
sbb
test
jp
adc
dec
subb
in
add
js
and
push
dec
add
pop
sbb
pop
mov
sbb
iret
cli
mov
dec
or
fmuls
add
or
cmpsl
pop
sbb
sub
push
xchg
data16
push
leave
jno
mov
adc
shrl
stos
pop
fisubs
scas
sbb
push
ret
lock
andb
mov
or
add
subb
mov
les
push
sbb
imul
mov
pop
test
pop
pop
add
push
pop
sbb
sub
and
aam
push
add
popa
insb
mov
in
inc
jle
addb
aam
es
shlb
add
nop
addb
jne
shr
push
or
icebp
mov
xlat
fdivs
sbb
dec
mov
aam
les
dec
lods
mov
orb
stc
push
sub
cli
add
adc
mov
or
cli
sub
lret
push
jb
bound
jns
sub
push
pop
jle
cmp
bound
lret
inc
push
lods
jp
lea
mov
sarb
rcrl
in
outsl
mov
xlat
and
loop
or
inc
dec
fcompl
sar
adc
push
jno
ret
add
push
jne
lock
cmp
jne
push
dec
cmpsb
sub
xchg
sbbb
dec
lods
or
mov
push
push
xor
sbb
icebp
cmp
les
shrb
mov
sbb
testl
xor
push
jo,pn
sbb
pop
or
std
push
cmp
bound
lret
sub
xchg
add
or
add
xorb
inc
push
into
roll
cwtl
or
loop
jo
rorl
cmc
jp
adc
dec
or
push
xchg
xchg
jne
and
punpckhbw
rolb
dec
ds
loopne
add
mov
inc
and
adc
aam
mov
and
loope
ljmp
lahf
or
cltd
add
or
lods
cs
loop
loopne
push
rorb
out
jl
jmp
inc
cmp
push
adc
ror
mov
call
add
inc
int
inc
adcl
cmp
ror
add
dec
sbb
or
mov
or
in
or
enter
and
shlb
dec
loop
or
into
sub
adc
xchg
or
fstpl
pop
push
daa
ret
add
fildll
je
lock
rorl
jge
and
push
sub
sub
sub
test
icebp
add
rcr
subb
or
inc
add
inc
loopne
hlt
sbb
push
xorl
test
xchg
push
and
aas
jnp
adc
or
test
cld
in
lock
clc
repnz
sub
ljmp
and
xchg
jne
outsb
js
sbb
sub
les
loop
jo
adc
sar
mov
xchg
push
sbb
cmpsb
mov
cli
adc
add
jge
lock
lcall
lock
testb
out
mov
mov
dec
bound
loop
sub
xchg
js
and
cmp
push
lock
hlt
xor
add
adc
dec
add
movl
sbb
sbb
cs
mov
mov
sbb
adc
xlat
insl
inc
add
shrl
xchg
adc
lock
or
push
or
or
or
jecxz
or
addr16
imul
loop
mov
and
jmp
adc
ss
leave
xor
xor
adc
popa
jno
fsubs
jmp
fcmovnb
xor
es
xchg
mov
push
mov
mov
adc
mov
add
xor
push
sbb
inc
mov
adc
rorl
les
dec
xchg
outsb
adc
ret
adc
loopne
inc
push
les
xchg
sbb
shl
sbb
imul
adc
sub
hlt
enter
sbb
mov
fsub
sub
imulb
je
add
mov
or
mov
sub
mov
push
adc
fwait
outsb
mov
fcoml
xor
movsl
rolb
mov
xor
inc
jbe
push
in
enter
lret
adc
adc
fidivl
add
pop
xor
leave
dec
loop
inc
js
movsb
push
mov
jmp
inc
and
add
add
mov
mov
or
and
mov
mov
push
adc
jge
and
sub
inc
lock
or
mov
adc
and
mul
mov
rolb
inc
pop
addl
inc
rcl
mov
mov
inc
xlat
add
fists
push
outsl
sub
je
push
fisubl
test
adc
test
iret
aaa
icebp
push
sub
adc
movsl
rorb
or
jmp
push
adc
inc
xchg
fcmovnu
movsl
js
sbb
pusha
negl
lret
in
pop
ret
mov
lods
sbb
mov
push
jge,pt
cltd
xchg
enter
jle
xchg
sbb
inc
push
mov
add
mov
or
pop
call
pusha
inc
add
addl
mov
orl
mov
and
ret
out
pop
sbb
nop
roll
mov
ret
pop
jecxz
mov
or
addl
movsl
in
push
jecxz
push
add
adc
pop
jl
lds
xor
or
xor
inc
sbb
es
shrb
mov
adc
and
clc
dec
cmp
and
ficoms
std
loop
add
mov
xor
push
jp
mov
xor
or
or
dec
or
push
add
rclb
ljmp
push
push
sub
es
xor
loope
push
push
or
addb
lret
xor
addb
mov
gs
leave
nop
rolb
dec
xor
ret
jne
clc
test
test
sbb
shlb
mov
xchg
jns
cmp
iret
add
mov
bound
ljmp
les
pop
movb
js
jle
int3
push
and
insb
mov
push
cwtl
add
sbb
rcrb
sbb
add
adc
sub
xor
hlt
dec
shll
or
dec
out
mov
xor
sub
sbb
xchg
clc
adc
or
mov
bndstx
cmpsl
inc
adc
adc
adc
mov
mov
jmp
dec
in
lcall
mov
test
xchg
mov
add
test
add
mov
pop
les
xor
mov
fisubrs
inc
push
add
nop
xlat
jle
xchg
pop
jo
or
lahf
mov
or
and
jle
mov
loope
loopne
sbb
lds
cmc
scas
dec
in
mov
lock
add
adc
jne
adc
pop
mov
int
icebp
push
or
or
mov
shlb
jp
sub
push
push
cmp
mov
or
xor
es
in
inc
pop
sti
push
mov
negb
enter
cmp
inc
in
clc
movsb
push
inc
cwtl
aam
push
in
push
jp
add
ret
sbb
mulb
sbb
mov
mov
mov
pop
lret
nop
push
loopne
dec
rcrb
and
sbb
mov
adc
enter
adc
je
mov
adc
aaa
sahf
push
int3
out
push
mov
ret
dec
insl
in
into
rolb
push
aas
push
rolb
loop
xor
sbb
or
mov
repnz
bound
dec
mov
and
pop
adcl
pop
js
lock
inc
cmpsl
xchg
inc
add
xor
xorl
bound
imul
push
out
jno
pop
shlb
push
pop
daa
sbb
and
mov
jmp
xchg
js
add
out
rorl
mov
or
es
add
sbb
ror
xchg
xchg
or
stc
or
nop
pop
push
lret
inc
clc
daa
add
jno
mov
cltd
and
clc
or
fs
mov
repnz
or
lsl
sub
fsubs
xor
out
rolb
ljmp
je
shl
cmp
mov
cmpsl
pop
mov
sbb
cmp
mov
arpl
adc
lcall
pusha
mov
or
or
lds
push
push
ret
adc
aam
lea
lds
adc
and
loop
sub
xchg
jp
add
sarl
test
mov
sbb
or
xor
cmp
aaa
rclb
out
xor
jo
cmpsl
jle
mov
div
add
cld
ljmp
add
add
shrb
ljmp
push
jb
gs
mov
pop
cmp
and
shrb
dec
xor
add
push
mov
rolb
sbb
pop
in
les
mov
pop
bswap
push
popf
and
jno
enter
loope
add
sub
add
nop
popa
subb
mov
adc
jecxz
pusha
cmpsl
dec
loope
pop
rorb
or
popa
pop
call
or
add
sub
push
cmpsb
add
dec
pop
or
cli
inc
cli
mov
add
dec
sub
or
pop
test
xchg
stos
rclb
push
add
bound
rol
mov
adc
mov
int3
inc
loope
aad
jnp
call
mov
push
pushf
test
test
xchg
cwtl
mov
mov
jmp
adc
mov
push
pop
push
pop
mov
sbb
pop
loopne
ret
dec
and
cmpsl
out
adc
bnd
dec
cli
push
rcll
ret
dec
cmp
mov
mov
test
aam
cmp
ret
js
gs
sbb
and
sarb
lret
es
jecxz
pop
mov
mov
enter
mov
mov
rorb
sub
xor
pop
mov
les
mov
cmpb
mov
cmpsl
out
adc
xor
push
js
imulb
or
mov
scas
add
jl
adc
and
push
add
adc
and
ds
loopne
or
sbb
fldl
leave
xchg
nop
jge
bound
in
cmp
add
or
test
cs
pushf
test
mov
ret
fistl
jmp
cmpsb
lret
test
test
stc
xchg
pop
cmp
clc
mov
mov
jns
pushw
fnstcw
push
xchg
mov
or
lret
add
fsubrl
fsubrs
sub
rol
loop
sub
lods
orl
dec
mov
push
or
arpl
xchg
dec
daa
xor
in
push
lret
inc
daa
cmovp
lods
adcl
mov
adc
pop
add
and
test
mov
es
rclb
mov
scas
lods
movzwl
std
js
cmp
movsl
test
addb
xor
mov
mov
idivb
add
mov
or
rcr
stos
repz
rcrl
dec
adc
mov
cmpsl
xorl
daa
mov
cmp
dec
mov
lret
nop
pop
inc
push
lock
rcl
or
add
xchg
inc
lock
mov
lods
mov
hlt
mov
lret
les
rol
out
adc
add
movl
inc
ds
inc
dec
and
sbb
inc
pop
call
mov
sbb
lods
aad
xor
mov
lock
push
xchg
aaa
test
sbb
inc
xor
rcrl
call
std
adc
mov
add
pop
add
rcl
lods
cmovno
mov
mov
sbb
push
mov
xor
inc
mov
lods
adc
or
mov
ljmp
movb
adc
jmp
sahf
or
push
jp
push
ljmp
sbb
or
jp
fcmovu
loope
cmp
sbb
sbb
in
daa
cs
jmp
add
lock
cmp
sub
lock
mov
jp
clc
fbld
shl
xorb
fldenv
sbb
enter
imul
imul
shl
aas
adc
test
int3
mov
mov
bound
sbb
push
sub
jle
or
push
sbb
fiaddl
sub
jb
jl
inc
mov
lods
ret
dec
ja
pop
cmp
mov
leave
adc
add
aam
xor
nop
jbe
add
and
add
loop
xor
rcrb
sbb
cwtl
imul
cli
testb
hlt
aam
mov
adc
xor
adc
sahf
xor
and
ljmp
cwtl
adc
dec
js
xor
rcrb
xchg
rcrb
rcll
or
add
ret
adc
imul
int
jecxz
and
in
loop
inc
or
test
sbb
loope
push
insb
xchg
xorb
xchg
sub
sub
xchg
xor
adc
inc
orl
ret
jecxz
hlt
sub
inc
fdiv
xchg
adc
mov
sub
scas
push
pop
add
mov
xchg
sub
add
fadd
inc
sbb
add
sti
shl
pop
xchg
stos
or
and
enter
sub
push
cmp
xchg
pop
push
adc
rcl
inc
push
mov
inc
cld
mov
mov
inc
sbb
rcrb
pushf
cmp
test
sbb
in
pusha
insl
xor
xor
push
fstpt
outsl
sbb
sbb
div
push
rclb
dec
add
add
mov
mov
ds
mov
xor
push
cmpsb
xchg
adc
xchg
js
pop
into
es
shlb
xchg
and
push
dec
addl
dec
gs
cmpb
call
pushf
push
aas
sbb
cli
lods
rcll
adc
cmpsb
push
push
dec
int
lds
cs
mov
mov
inc
push
mov
je
scas
add
pusha
pusha
and
fsts
jo
xchg
push
pop
jmp
pop
cwtl
mov
xchg
sub
fs
fiadds
and
sbb
xchg
mov
adc
movl
sarl
or
and
mov
subl
push
pushf
faddl
mov
add
stos
sub
adc
dec
dec
sbb
sub
lock
adc
pop
mov
push
push
mov
sbb
fsubs
xchg
rolb
out
mov
add
rolb
dec
pop
popf
sbb
dec
sub
sub
mov
xchg
or
sti
out
fistpll
cmpsl
and
jmp
clc
mov
xlat
inc
sub
rcr
push
adc
movsl
call
xchg
rclb
adc
push
cmpsl
int3
mov
and
mov
aam
rclb
repnz
xchg
sub
rorb
pop
xchg
mov
loopne
add
clc
repnz
add
mov
ds
paddw
sbb
sbb
push
inc
or
insb
test
xchg
orl
mov
xchg
mov
mov
ds
xchg
push
cmova
jo
mov
dec
jmp
rol
jp
inc
fs
stos
push
sbb
adc
mov
xor
int
push
mov
adc
rol
cli
call
pop
sbb
xchg
xchg
push
or
push
and
and
sub
mov
mov
shr
bnd
push
pusha
fimuls
cmovb
aam
mov
push
js
sbb
xor
adc
push
push
sbb
int3
adc
or
push
loopne
inc
add
push
push
lock
insb
mov
into
pop
mov
enter
adc
addr16
andb
lret
inc
sarb
sbb
dec
call
pop
cmc
push
sbb
push
sub
cli
dec
mov
add
or
arpl
shlb
adc
shrb
sbb
push
pop
adc
test
adc
jo
sub
imul
push
mov
or
or
shl
adc
push
push
testl
pop
pop
sidtl
mov
ja
or
cmc
push
inc
fcoml
inc
sbb
loopne
gs
js
outsb
and
mov
or
loop
cmc
iret
sbb
adc
aam
test
nop
icebp
orb
xor
xchg
xchg
mov
or
ljmp
add
insl
bound
sbb
cmp
jle
pop
xor
mov
xor
jb
testb
stos
sti
je
shrb
clc
add
js
test
push
ss
pop
push
into
and
das
fsub
adc
and
pushf
sbb
pop
not
call
pxor
fldt
add
ljmp
arpl
mov
fldl
sbb
jp
jno
and
pusha
mov
out
push
nop
dec
test
mov
inc
loopne
cs
push
xchg
shrb
jecxz
test
cmpsb
sub
inc
sub
add
dec
lock
or
test
lock
add
and
jbe
mulb
dec
mov
add
adc
adc
add
lock
fisubrl
push
lea
cmp
fildl
add
add
notb
repnz
movsb
imulb
sub
sbb
sub
mov
pushf
jg
rcrb
shlb
lea
mov
or
and
scas
fmuls
cmp
fbstp
subb
cmpsb
add
sarb
dec
pop
or
clc
lcall
rolb
inc
mov
push
push
pusha
mov
push
pushf
gs
pushf
inc
mov
and
mov
aam
push
push
cmp
pop
add
push
inc
cmp
cwtl
outsl
push
jmp
outsb
push
out
call
add
daa
jmp
mov
and
xor
roll
mov
inc
sbb
inc
ret
sub
xor
lret
sbb
lcall
and
and
arpl
jecxz
mov
push
lcall
orb
enter
cs
push
inc
jbe
mov
enter
push
aam
xchg
jb
add
rcll
in
mov
cltd
add
xchg
int3
push
sarl
mov
cld
sbb
lret
cmp
cmc
and
fldenv
jo
mov
xchg
push
xadd
and
add
or
inc
mov
sbb
imul
or
dec
lahf
aam
mov
shlb
leave
or
sub
loope
add
movsl
add
cli
imul
lahf
xor
pop
jecxz
dec
mov
dec
js
or
je
dec
mov
add
sbb
xchg
adc
mov
adc
ret
inc
push
mov
push
cmpsl
push
sbb
add
ror
xor
push
push
lods
adc
das
xor
add
or
lods
mov
mov
test
xor
xchg
push
sbb
adc
lock
loopne
ret
push
xorb
pop
push
jle
adc
or
test
add
mov
or
in
adc
pop
jmp
push
cmp
test
hlt
xchg
loop
inc
jl
push
jno
rcll
mov
push
push
shrb
dec
sub
sbb
sbb
cli
add
xchg
andb
push
push
push
pop
push
sbbb
inc
mov
stos
jnp
scas
stos
ljmp
xor
lock
sbb
scas
mov
push
or
pop
cmp
dec
lock
mov
push
sbb
push
add
cld
mov
ja
adc
rcl
xor
push
sbb
pop
add
xchg
adc
sub
ret
ret
lcall
dec
inc
push
add
lea
or
and
lock
jne
xchg
in
inc
cmpsb
lock
ficomps
dec
fsubs
xchg
add
xchg
push
icebp
in
or
fiaddl
scas
pop
pushf
xor
and
and
shl
cmc
xor
xchg
dec
or
mov
lret
stos
and
jmp
loope
sbb
mov
sub
or
xchg
sbbl
std
jb
add
adc
ficoml
mov
pop
or
cmp
mov
xor
pusha
andb
lods
xchg
push
mov
or
js
sbb
int3
test
adc
cli
jne
aaa
xchg
call
lods
dec
fadd
push
mov
push
push
pop
hlt
stc
dec
inc
jo
or
cmp
outsl
push
fcoml
push
shlb
mov
sub
ljmp
imulb
js
add
dec
add
add
rol
adc
jae
mov
sbb
pusha
leave
mov
test
mov
and
mov
or
adcb
xor
jno
jl
sub
int
in
cwtl
int3
js
es
sub
push
js
insb
add
addr16
pop
test
inc
push
xor
jae
loopne
sub
add
or
sbb
imul
sete
or
mov
imulb
cwtl
repnz
data16
and
mov
loopne
rclb
xchg
imul
add
aaa
sbb
js
add
imul
mov
rclb
cmp
in
imul
pop
movb
test
incb
movsl
cs
lods
or
push
ja
ror
or
and
orl
jne
push
lcall
pop
ja
mov
jle
andl
mov
and
or
icebp
and
lock
aaa
xor
shlb
les
fsub
movsb
jno
sbb
dec
pop
and
add
fwait
sbb
lea
cmp
adc
add
sbb
sbb
and
mov
mov
and
stos
push
int
test
jno
lcall
push
mov
mov
push
lcall
iret
add
mov
in
and
mov
mov
cli
and
ljmp
outsb
repz
ret
inc
add
jl
xchg
ss
pop
dec
jb
sub
and
pop
in
test
cmp
aaa
and
nop
aaa
xlat
or
xchg
out
adc
dec
fists
dec
test
aam
dec
xor
nop
orl
inc
sbb
xchg
push
xchg
and
cmp
jo
ret
rolb
adc
jmp
or
aam
push
adc
add
mov
cmp
pop
jmp
in
adc
push
lods
xor
repnz
inc
push
push
pop
xchg
adc
fs
push
rorb
pop
adc
pop
mov
adc
jnp
xor
cli
mov
andb
jae
sbbb
jo
dec
divl
cmp
pop
shlb
pop
or
pop
jmp
xlat
and
lods
and
push
add
mov
ffree
jne
inc
movups
jl
andb
ret
pop
in
push
add
mov
adc
cli
or
ret
adc
sub
sbb
popa
data16
cmpb
cmpsl
icebp
pop
dec
js
dec
xchg
mov
xor
add
shr
leave
inc
loop
and
jle
rcl
mov
sub
les
dec
imul
mov
mov
add
stos
add
sbb
adc
imul
sub
and
int
ret
mov
andb
imul
inc
mov
mov
imul
dec
repnz
movsb
mov
fs
enter
xchg
mov
mov
mov
jmp
and
orb
sbb
jbe
inc
sbb
popa
roll
push
sbbb
mov
or
sbb
es
leave
nop
add
out
insb
jo
movnti
cmp
aaa
dec
sub
and
cmpsb
lret
rol
mov
clc
add
into
adc
sahf
xchg
adc
dec
jno
jecxz
push
pop
dec
pop
add
add
or
sete
and
mov
pop
sbb
or
rclb
xchg
add
jne
sbb
insl
mov
jo
inc
jo
leave
rclb
add
sbb
mov
jno
xor
cmp
cmp
nop
sbb
dec
aam
or
inc
insb
cmc
adc
ret
rorb
inc
mov
enter
nop
mov
icebp
pop
lock
mov
and
dec
popa
add
push
punpckldq
jecxz
ltr
roll
rclb
nop
xchg
jg
pop
xchg
cmpsb
pop
rolb
add
dec
loopne
sub
imul
inc
or
call
xor
or
mov
dec
mov
pop
push
push
jnp
cmp
push
repz
pusha
shlb
arpl
and
or
movsb
xor
push
xchg
testl
inc
roll
lcall
pusha
add
lods
nop
mov
xor
or
jp
int3
test
or
push
or
push
call
js
add
jmp
or
add
cmp
xchg
enter
jge
dec
or
and
pop
mov
mov
cmp
pop
or
bound
pop
fmull
addb
sbbl
push
add
inc
test
hlt
add
and
bound
js
out
aas
div
push
nop
cmpsl
mov
adc
mov
fcmovb
xchg
dec
dec
orb
cmp
bound
push
ret
stos
adc
push
popf
jl
cmc
call
xchg
fisubrs
jp
or
push
mov
add
add
rcrl
jne
adc
movb
jge
adc
adc
xchg
inc
or
setb
lea
pop
adcl
mov
add
iret
jmp
push
cwtl
cmp
add
add
movsl
lock
ds
adc
and
and
sub
test
movsb
aad
pop
and
je
pusha
mov
sub
test
test
push
lret
les
inc
test
std
pop
enter
fidivrs
push
pop
add
push
push
lods
fisttpl
mov
rcrb
inc
or
adc
jle
push
pop
inc
adc
or
sub
adc
mov
test
cld
adc
push
lcall
sub
and
add
lret
dec
test
push
adc
aad
or
rolb
sub
imul
movsb
xlat
xor
mov
or
icebp
adc
pop
cmp
mov
or
psubsw
and
movsb
fdiv
mov
and
stos
add
xchg
sbb
loope
enter
xchg
scas
outsb
inc
add
ds
sbb
pop
adc
inc
jmp
mov
test
jmp
aas
imul
or
adc
loope
ret
pop
add
mov
fnstcw
pop
or
inc
rcll
mov
data16
xor
xchg
repnz
inc
mov
mov
or
push
push
loopne
xor
push
push
mov
xor
je
adc
insb
jmp
inc
imul
xor
leave
in
mov
xorb
lahf
addb
and
aam
xchg
pusha
dec
sub
cmpsb
lret
cli
ljmp
imulb
cmp
and
mov
mov
daa
add
out
xor
mov
cmp
int3
or
cmp
add
add
add
movsb
outsl
and
cmp
and
dec
mov
insb
rcrb
or
mov
and
add
or
pop
out
dec
ret
inc
lock
call
loope
dec
and
pop
addb
test
sbb
cmp
rorl
repnz
push
pop
pusha
push
xor
sbb
pop
pop
mov
lods
addb
icebp
fwait
addb
arpl
andb
and
xor
rclb
jno
rorb
sbb
sbb
lods
lods
mov
or
lahf
pop
rolb
add
add
pop
and
mov
mov
aad
jo
call
adc
inc
mov
sbb
loope
xchg
or
test
pop
add
cs
mov
xchg
xor
mov
fs
xchg
rolb
cmc
jnp
add
inc
sbb
outsb
mov
sub
mov
and
testl
xor
xchg
sbb
or
shrb
fisubl
fidivrl
andl
or
sub
sahf
mov
jmp
inc
arpl
xchg
jmp
roll
cmp
adc
loope
jp
pop
lods
or
sbb
xchg
cmpsb
je
or
adc
mov
add
pop
and
movsb
lock
sub
and
hlt
or
fadds
jo
inc
lods
or
and
inc
cmp
inc
or
inc
sbb
ss
lss
or
popf
mov
or
leave
out
adc
mov
ret
inc
movsl
or
push
ficoms
call
daa
inc
das
inc
inc
mov
fsubrl
scas
adc
std
adc
ljmp
shlb
aas
sub
mov
mov
adc
lcall
add
pop
pusha
ss
movsb
inc
add
loope
push
daa
xor
mov
pushf
arpl
sub
aam
sub
or
jo
data16
les
add
sub
sbb
mov
js
dec
adcl
lods
push
loopne
rcr
js
adc
pop
jne
pop
cwtl
add
lock
add
cmp
mov
decl
dec
mov
xchg
mov
pop
movsl
push
and
cs
add
daa
mov
popa
ret
pop
push
jno
lea
out
or
add
repnz
inc
bound
cmovle
loop
dec
xor
or
xor
mov
mov
lods
lock
bound
enter
mov
mov
xchg
push
js
out
xchg
movsb
add
push
test
aam
mov
and
call
out
inc
ja
incb
inc
loop
or
pusha
sbb
fnclex
dec
push
add
add
mov
sub
ljmp
and
add
movsb
sub
xchg
pusha
jg
rcl
or
cmp
cmpsb
js
push
mov
inc
ds
sub
adc
sbb
xlat
test
popa
add
xor
js
aam
hlt
mov
pusha
ss
push
je
fsubrl
inc
cmp
sbb
aam
sbb
pop
sbb
cmp
and
pop
mov
mov
adc
add
leave
lret
sub
xor
jp
sbb
and
stos
xorl
sub
cwtl
xor
mov
ss
pop
mov
or
xchg
addb
stos
adcb
fistpll
test
adc
rcl
add
inc
inc
ret
icebp
sbb
add
popf
lret
push
add
push
insl
int
jno
sub
inc
push
mov
add
in
shrl
jp
in
fnstsw
aad
ljmp
loope
sub
pop
movsl
xor
jno
mov
cmp
xor
push
jecxz
mov
dec
adc
xchg
ja
loop
or
popf
fxch
add
pop
int
rclb
mov
sahf
divb
test
xor
loop
stos
mov
sub
push
in
cmpsl
xchg
adc
mov
xor
xor
push
adc
sbb
jle
inc
add
ss
sbb
gs
loope
sbb
popf
mov
adc
mov
dec
push
popf
add
cmp
pop
popf
push
adc
cmpsl
movsb
add
pop
dec
sub
push
vmread
or
or
je
sbb
loopne
jno
xchg
adc
or
addb
clc
insb
add
mov
mov
inc
sub
sub
and
pop
fs
lock
nop
add
jecxz
subl
pop
data16
xor
inc
cmp
enter
add
and
hlt
push
jmp
push
movl
sahf
jl
loop
pop
xor
adc
adc
adc
sarb
ret
push
mov
rcr
push
jno
adc
push
sbb
js
roll
push
lock
dec
xlat
mov
mov
mov
fistps
and
sbb
or
xor
or
js
inc
rolb
or
xor
mov
xchg
addb
jl
sub
mulb
rcrl
xchg
push
pop
cmp
bound
xchg
and
or
jp
outsb
loop
adc
cld
pushf
or
jp
testb
insl
lods
ror
push
push
lods
inc
pop
lock
popa
movsb
or
push
ljmp
dec
dec
lea
cmp
sub
xor
adc
dec
jae
pop
cs
rolb
es
jmp
add
sbbl
call
pop
sbb
xor
icebp
mov
pop
js
add
rcl
push
sbb
inc
add
pop
adc
dec
or
xchg
and
dec
and
xchg
shlb
mov
inc
lea
jge
roll
addl
mov
adc
stc
mov
sbb
or
fcmovbe
arpl
inc
sbb
xchg
or
xor
pop
mov
movsb
loopne
dec
mov
xchg
lods
sub
ljmp
adc
add
sbb
jmp
or
mov
and
dec
adc
clc
es
mov
pop
pop
es
add
add
pusha
daa
into
cmp
xor
and
rorl
inc
push
ja
adc
sbb
or
jne
icebp
xchg
fidivrl
or
sbb
popa
movsb
push
movsb
or
pop
cmp
sub
sbb
mov
popa
aaa
test
dec
mov
add
mov
sbb
call
sbb
ds
inc
sbb
push
push
js
nop
jmp
dec
fxch
adc
cmp
xor
cmp
lret
cmpl
sub
sahf
jmp
pop
or
add
leave
sbb
xchg
push
add
pop
loop
pop
push
hlt
adcb
pop
cmpsl
xor
mov
pop
mov
xchg
xor
dec
shlb
ds
addb
pusha
ror
aad
adc
push
push
jecxz
pop
adc
call
ficoml
xor
nop
push
add
or
imul
and
add
and
cmp
ljmp
mov
or
xchg
xchg
test
adc
movsl
mov
xchg
or
push
push
mov
imul
jmp
call
movb
pop
add
or
adc
lcall
pop
shlb
adc
xor
inc
or
out
lods
xor
push
dec
imul
xchg
dec
pop
or
or
sub
cmpb
out
gs
mov
data16
or
nop
adc
add
inc
inc
sbb
dec
mov
out
add
pushf
nop
daa
popa
push
clc
cwtl
or
rclb
mov
mov
pop
lea
and
or
test
xor
pop
adc
push
cmp
jp
adc
and
fs
stos
testb
sub
adc
push
movb
add
mov
leave
pop
ret
cmp
jge
pop
jle
inc
xor
addl
xchg
fildl
lret
or
pusha
cmp
and
popa
lea
pop
bound
test
add
mov
xlat
or
xchg
jns
add
test
dec
rorb
mov
adc
pop
or
arpl
or
rorb
dec
ds
push
rorb
test
ret
fiaddl
dec
or
xchg
sbb
adc
or
inc
adc
lcall
nop
fidivrs
cmpsl
xchg
cmp
dec
or
ja
mov
dec
or
aad
lea
mov
lods
jmp
add
or
adcb
cmp
ret
inc
dec
adc
push
xchg
pop
mov
jb
aam
push
leave
cmp
and
rorb
push
xchg
xchg
into
xchg
mov
push
sbb
sbb
xor
sbb
or
xor
sbb
mov
or
push
inc
rorb
inc
out
mov
out
mov
loope
push
leave
jl
ljmp
cmpsb
jno
js
jmp
shll
push
push
xchg
push
mov
sti
sbbb
xchg
push
das
call
xchg
int3
mov
mov
lods
xor
fdivs
movsb
mov
push
inc
inc
xorb
and
lods
adc
xchg
xor
pop
loopne
cmp
adc
nop
mov
popa
rcrb
mov
pop
jl
aaa
jp
pushf
sbb
push
or
sbb
mov
xor
shl
mov
cltd
pop
adcb
les
negb
xlat
xchg
xlat
cltd
cmp
xor
xor
xor
ret
shlb
cld
call
pop
mov
or
xor
call
lret
and
popa
xchg
push
pop
pop
divb
sub
rcrl
clc
add
and
jo
inc
xor
jne
mov
pop
mov
mov
bound
jmp
mov
cmp
or
sub
pop
ret
or
xor
iret
xchg
subb
sbb
scas
xchg
fadd
ljmp
insl
sbb
mov
inc
nop
imul
int3
adcb
dec
mov
mov
inc
xchg
pop
pop
mov
push
sbb
cmp
pushf
pop
movsb
and
xor
dec
popl
sbb
scas
out
or
sub
fnstenv
enter
and
aad
jmp
push
test
sub
xor
fiadds
into
cmpsb
popf
or
mov
pop
mov
cmp
adc
add
adc
or
mov
jns
out
or
push
mov
hlt
test
arpl
xchg
xor
div
and
addb
insl
cmp
sub
test
xor
inc
push
hlt
dec
or
push
adc
les
cmpsl
pop
out
add
inc
sub
stos
inc
aaa
sbb
sbb
add
xor
xchg
sub
roll
cmp
sbb
bound
inc
pop
loope
pop
ret
movsb
jecxz
aas
sbb
xor
mov
dec
push
dec
ss
sbb
mov
movsl
cli
mov
push
clts
jo
inc
sbb
mov
xchg
jl
out
daa
mov
test
xchg
add
inc
adcb
sahf
test
jmp
rorb
jmp
imul
in
jb
push
xchg
xchg
pop
push
add
lock
adc
movsb
js
push
lret
and
outsl
cld
adc
ljmp
adc
aaa
adc
popf
jo
mov
scas
or
mov
add
in
pop
or
adc
add
pushf
or
sbb
lret
mov
pop
xor
xor
add
mov
mov
add
aas
add
or
mov
rorl
ret
cmp
sub
out
mov
or
push
sarl
jb
insb
jg
sarl
fldenv
xchg
jo
pop
fs
push
testl
into
call
mov
jb
aad
sub
ret
mov
loopne
dec
sbb
lods
addr16
dec
xchg
sbb
mov
sub
pusha
fimuls
push
mov
cmpsl
jbe
xor
bswap
cwtl
aas
aam
ret
movsl
pop
imul
push
or
cmp
sub
ljmp
push
xchg
mov
test
outsb
jo
xor
popa
dec
fisubs
loop
stc
push
mov
mov
inc
mov
fiaddl
inc
mov
mov
lods
dec
rcrl
jmp
leave
lock
nop
or
or
or
sub
or
ja
subl
out
push
add
sbb
and
mov
and
test
sbb
adc
mov
pusha
adc
add
xchg
xorl
dec
dec
sub
and
push
pop
stc
adc
ss
mov
daa
movsb
add
sub
push
add
ret
xor
and
stos
leave
push
sub
inc
loop
cltd
add
add
jne
add
xchg
mov
mov
cmp
sub
push
dec
push
inc
xchg
orb
adc
test
pusha
sub
or
outsb
and
dec
hlt
andb
inc
rcrl
imul
stos
ret
and
add
shrl
inc
movsl
gs
bswap
cwtl
mov
lods
std
mov
movsl
mov
cmpsl
xchg
adc
lds
popa
inc
sub
pop
fdivr
add
stos
fmulp
xchg
shrb
pop
imul
add
adc
jo
pop
adc
orl
push
pop
add
fbld
pusha
inc
mov
cmp
jmp
push
sarb
addr16
cmp
cs
xchg
or
or
sub
test
outsl
sbb
rorb
imul
add
mov
xlat
sbb
mov
pop
dec
pusha
daa
mov
shrl
stos
sarb
xor
mov
add
add
xchg
sbb
inc
loope
fsubp
adc
add
addr16
int3
movsb
add
inc
push
sbb
push
push
mov
xchg
inc
shrl
shll
sub
and
mov
pop
aam
or
rorl
ss
dec
pop
add
pop
jp
jp
dec
sarb
sysret
hlt
or
xchg
or
pop
adc
scas
sbb
call
push
add
inc
sbb
sbb
add
xchg
adc
fsubs
adc
nop
xchg
icebp
or
xchg
and
and
push
stos
arpl
xor
xchg
xor
mov
sub
push
sahf
imul
sbb
inc
mov
lock
ret
inc
inc
push
jb
sub
mov
mov
sbb
cmp
test
out
push
and
loopne
lret
add
sbb
rcrb
jo
ljmp
lret
lahf
mov
push
xchg
fisttpll
das
test
sub
mov
add
add
add
or
lret
mov
sub
dec
incl
js
icebp
push
jp
fstpl
sub
add
imul
cmp
enter
mov
adc
adc
xor
pop
xor
lahf
add
andb
ret
repz
push
xchg
sbb
pusha
and
dec
test
cltd
pop
pop
enter
call
sysret
add
and
xor
xchg
add
rcrb
and
xor
loope
and
xchg
mov
xor
push
add
lods
sbb
push
push
movsl
into
jo
movsl
movsl
test
jno
push
xchg
sbb
inc
std
sub
add
rsm
push
dec
sbb
lret
movsb
ret
ret
push
or
or
nop
dec
out
lahf
xlat
mov
xor
out
sahf
push
sbb
pop
pushf
mov
cmp
adc
sbb
movsl
xchg
repnz
jbe
add
adc
shll
or
sub
or
pop
xor
mov
lcall
js
fmull
add
loope
jo
imul
movsb
and
cltd
jne
dec
mov
in
dec
add
add
out
addr16
lcall
inc
xor
mov
xchg
adc
aaa
pop
mov
scas
out
mov
and
push
test
jo
rolb
sbb
sbb
dec
sub
cwtl
sbb
shrb
sbb
cmp
lds
je,pt
jae
std
shr
movsb
or
cwtl
arpl
mov
imul
xchg
addl
mov
pushf
sub
and
adc
inc
sub
mov
mov
movsl
sub
push
test
push
dec
sub
stos
das
fbstp
cmp
cmpsb
pop
adc
push
mov
xchg
cli
lods
daa
mov
and
cmp
fdivr
adcb
pop
xchg
mov
inc
adc
mov
ret
cmp
mov
addb
shll
data16
lahf
adc
das
dec
add
push
in
lret
test
loope
jb
jne
mov
rorl
xor
lock
push
xchg
and
jl
mov
jl
inc
sbb
pop
das
jge
sub
sub
push
sub
lret
dec
aaa
add
and
push
sbb
pushf
cli
inc
push
push
mov
pushf
movsl
hlt
xchg
xor
sub
in
jns
in
pop
imul
in
pop
mov
pushf
dec
push
insb
adc
into
push
and
add
pusha
loope
fnstcw
inc
sbb
in
mov
cmp
and
loope
and
test
sub
leave
cmp
dec
or
push
lcall
inc
ret
xchg
mov
dec
test
mulb
xor
mov
jno
in
imul
inc
loop
mov
or
or
xchg
xchg
mov
je
push
and
pop
xchg
add
inc
inc
push
inc
xchg
jo
or
mov
and
or
rcl
inc
mov
insb
sub
mov
pushf
pop
or
mov
push
xor
push
or
les
push
test
mov
adc
cmc
add
xor
sub
les
test
sbb
and
jmp
ret
and
js
orb
mov
sti
enter
pop
dec
ret
sbb
dec
mov
add
adc
add
cmovs
cmp
nop
xchg
das
js
add
mov
mov
icebp
jl
or
or
faddp
jge
mov
cltd
in
sub
insb
jnp
and
dec
shrb
enter
lret
sbb
xchg
cs
adc
mov
out
pop
loop
pop
cmpsb
mov
std
cmpsb
xlat
test
push
sbb
fimull
push
xorb
ror
stos
jns
mov
sbb
adc
mov
and
dec
loope
push
and
es
sti
in
push
push
pushf
push
jnp,pn
or
aam
pop
testb
mov
icebp
xorl
push
test
adc
and
mov
pop
leave
xor
mov
sahf
mov
dec
je
mov
mov
lods
mov
xor
out
cwtl
pop
inc
or
adc
push
leave
nop
subl
das
loope
inc
xchg
xchg
dec
mov
xchg
mov
int
out
mov
mov
lea
pop
loopne
rolb
jecxz
push
test
xor
and
adc
sbb
and
sub
ret
shll
push
mov
sbb
or
cwtl
push
adc
lds
call
cmpb
mov
add
add
int3
dec
mov
xchg
rcl
enter
xor
fs
cmp
lods
push
test
jl
mov
test
out
mov
xor
push
cmp
mov
push
loopne
xor
jns
test
xchg
aas
add
enter
push
mov
push
inc
data16
dec
loop
bndstx
mov
push
punpckhdq
subb
inc
test
or
js
add
lea
hlt
dec
mov
dec
sub
xchg
clc
shlb
rolb
test
out
sub
mov
scas
inc
cmp
xor
fdiv
add
nop
sbb
push
dec
insb
jns
movsl
mov
pop
inc
es
cli
add
mov
sbb
xchg
mull
sub
ds
flds
or
pop
dec
pop
add
adc
sbb
sub
stc
adc
add
cmp
daa
imulb
les
pop
sbb
int3
or
and
int3
and
insb
popa
dec
sbb
jo
loopne
lock
xor
loope
inc
lods
ljmp
out
pop
xchg
xchg
and
sbb
rcrb
xchg
or
ret
adc
nop
and
inc
sub
sbb
inc
xchg
xchg
mov
in
and
sbb
js
adc
and
add
and
ljmp
enter
mov
sbb
or
flds
outsl
call
into
adc
xorb
fs
add
data16
clc
inc
scas
adc
call
pop
jle
and
jmp
push
shl
pusha
inc
push
ret
sbb
popf
andl
pop
mov
mov
imul
xor
add
mov
mov
and
sbb
mov
dec
xor
into
inc
mov
jb
pop
add
or
mov
and
sub
or
add
sbb
or
xchg
rcr
and
jg
adc
pop
add
push
dec
pop
adc
inc
inc
add
popa
mov
lcall
sbb
sub
jg
sbb
popf
or
arpl
jo
fnsave
xchg
sbb
adc
sbb
in
push
test
scas
and
add
add
and
xor
or
pop
imul
sub
rcr
rolb
lock
in
movsl
rcrl
aam
inc
pmaxub
test
sbb
mulb
adc
iret
and
xchg
movsl
dec
sahf
fstpl
jno
sbb
add
xor
aad
and
add
mov
scas
pop
clc
test
adc
shrl
shlb
mov
cltd
cmp
or
inc
popl
jne
or
fnsave
mov
imul
cli
mov
arpl
sbb
add
popa
pop
push
test
iret
mov
xor
sbb
fs
ss
testl
or
push
outsb
and
push
loopne
ljmp
mov
bound
push
or
sbb
mov
movsb
dec
aad
rcrl
shlb
psubusw
push
adc
out
pop
adc
push
or
mov
push
mov
lds
jle
sub
popf
or
rcrl
das
push
adc
mov
or
mov
sub
mov
push
loopne
js
and
lret
mov
inc
lock
inc
xchg
mov
enter
adc
mov
test
or
jp
adcl
outsl
cli
adc
sbb
pop
mov
add
loopne
lahf
ljmp
sub
adc
add
xor
and
cwtl
in
or
movsb
movsb
je
loope
mov
dec
out
inc
rol
daa
call
dec
test
test
rcll
push
add
inc
xor
add
push
adc
inc
sbb
pop
sbb
add
leave
push
lret
jmp
xor
pusha
sbb
ljmp
test
xchg
and
scas
shrl
popf
add
dec
add
sbb
jl
cmp
leave
push
divb
pop
mov
or
jecxz
add
or
push
sbb
js
xchg
jg
repz
mov
xchg
lcall
mov
jns
inc
pop
ret
sbb
ds
rorb
cmpsb
push
xchg
arpl
jle
xor
push
mov
add
xchg
push
jmp
pushf
lret
inc
outsb
add
jle
pop
sub
lea
imul
mov
or
and
jae
mov
enter
mov
call
lock
sbb
mov
sub
pop
add
lea
pop
imul
int3
pop
movsb
sbbl
int3
sahf
and
jmp
flds
popf
xor
icebp
shrl
mov
outsb
mov
repnz
sbb
mov
lret
cmpsl
adc
loope
dec
dec
adc
add
cmpsb
sub
orb
rclb
inc
adc
pop
enter
add
xor
dec
push
ret
mov
xor
fs
shlb
push
mov
xor
xchg
inc
mov
inc
push
sub
cmp
pop
push
movsl
movb
inc
call
dec
ret
cmp
testl
movb
xor
imul
xchg
inc
or
add
ljmp
es
orb
inc
pusha
adc
daa
push
int
sbb
and
hlt
int
stos
test
dec
cmpsb
inc
mov
push
aam
push
inc
es
dec
jb
jge
mov
push
dec
lods
shlb
pop
or
lock
imul
sbb
adc
push
rolb
int3
ret
repnz
pushf
sbb
cvttps2pi
push
mov
pop
inc
cmc
xor
sbb
xchg
xchg
sub
loope
popf
dec
push
mov
push
adc
sub
push
adc
into
adc
in
aaa
sbb
clc
cmp
or
push
push
jp
enter
sbb
mov
icebp
ss
sub
test
dec
and
push
enter
rcl
lret
inc
mov
xchg
xorl
cs
sub
adc
in
push
push
mov
adc
pop
jecxz
cmp
or
inc
dec
ss
jecxz
mov
adc
lods
andl
sub
cmp
cmpps
lret
or
dec
xchg
test
push
pop
lods
mov
sbb
ret
push
das
xor
sub
inc
in
das
pop
jmp
or
push
shrb
ret
js
enter
dec
jb
push
cmp
or
scas
call
add
int3
mov
sub
inc
je
xchg
adc
adc
dec
mov
testl
prefetch
icebp
mov
inc
data16
push
pop
sub
push
add
inc
in
shll
adc
xchg
push
dec
cmp
loop
stos
inc
rorb
xchg
aam
push
and
das
adc
loop
and
int3
mov
add
adc
sub
sbb
xchg
pop
xchg
and
mov
mov
add
andb
add
test
inc
sbb
loope
mov
sahf
jno
popf
movsl
pusha
push
adc
pop
test
jmp
xchg
enter
jbe
scas
les
adc
mov
lods
outsb
push
punpckhdq
sbb
pushf
jp
add
clc
jge
cmp
mov
adc
addl
jb
xor
inc
lcall
insb
jmp
dec
sbb
cmp
jp
addl
shll
push
push
leave
xorb
mov
nop
push
es
movb
mov
and
xchg
sbb
xchg
call
add
iret
lock
pop
aas
sub
push
rolb
loopnew
dec
shlb
test
push
repnz
cmp
mov
popf
js
hlt
mov
jecxz
add
ret
dec
sbb
movsl
ljmp
mov
repnz
mov
lods
enter
pop
mov
add
rcrb
andb
mov
les
cmp
jo
push
popf
sub
xor
ret
and
sahf
adc
and
xchg
incl
xor
push
mov
into
xor
push
pop
ljmp
mov
inc
aam
mov
pop
shll
xchg
mov
lret
adc
push
ret
inc
test
jo
xor
adc
sbb
inc
cmp
add
je
mov
inc
pcmpgtw
sbb
and
push
dec
push
and
add
add
dec
das
lret
adc
mov
dec
movsb
cmp
add
ja
add
dec
test
loopne
push
xor
sub
mov
popa
or
fdivrs
repnz
pop
inc
and
push
fiaddl
xchg
pop
and
xchg
push
sbb
lret
fmuls
dec
popf
sbb
mov
test
cld
inc
test
adc
xchg
test
and
mov
sbb
push
dec
dec
sub
add
sub
movb
mov
or
xchg
loopne
test
sbb
rolb
test
sub
enter
xlat
sub
daa
cwtl
adc
sbb
or
adc
popf
movsl
test
pop
sbb
outsl
sbb
sbb
sbb
loop
loopne
inc
or
add
outsl
filds
int3
js
xchg
inc
mov
sub
cmp
mov
sahf
cmp
push
out
and
jo
inc
sti
jae
adc
and
mov
inc
ret
icebp
mov
push
pop
add
cltd
add
mov
dec
sbb
adc
pop
push
daa
enter
cmp
inc
cmp
insb
sbb
andl
add
mov
lret
stos
setle
cmp
or
aaa
adc
adc
add
add
das
jno
mov
ret
adc
pop
ret
adc
sbb
adc
push
rcrl
rorb
sar
adc
mov
in
adc
mov
xor
push
mov
sbb
mov
dec
xchg
es
pop
mov
add
ljmp
adcl
dec
inc
roll
mov
and
pusha
mov
and
icebp
in
scas
adc
push
xlat
lret
enter
out
push
jne
and
jb
nop
pop
sbb
aam
int3
mov
ret
dec
or
add
rcr
ds
gs
pop
jl
xchg
adc
xorb
mov
mov
shll
push
cmp
pusha
lea
fwait
leave
aaa
mov
adc
loop
and
cmp
xchg
xor
push
or
and
pop
dec
push
fs
dec
inc
or
and
push
xlat
or
cmp
dec
cmpb
movsl
movsl
mov
dec
shrb
aaa
enter
pop
jge
mov
out
sub
imul
xchg
sbb
loopne
jae
jl
pushf
pop
push
addb
rolb
add
stos
arpl
and
adc
inc
push
mov
jb
fs
sbbb
add
test
cmc
lret
loopne
push
xchg
add
popa
aad
cmp
js
ljmp
push
jmp
repnz
mov
sub
js
jno
mov
dec
jl
mov
push
push
sub
jmp
jecxz
inc
jno
add
lret
or
and
test
add
mov
les
adc
sbb
aaa
js
lock
les
iret
sbb
jb
sbb
mov
pop
add
sbb
fistps
jo
lcall
mov
pop
ficoms
xchg
into
xchg
mov
add
or
test
addb
shrl
enter
icebp
or
fistpll
mov
push
and
cmp
adc
pusha
sahf
push
shrb
jbe
lods
dec
orb
xor
push
xchg
or
bound
sbb
xchg
cmp
jne
into
push
sbb
or
mov
or
push
add
addr16
nop
je
loop
xor
xor
and
pop
out
pusha
test
sub
jp
pop
adcb
or
es
lods
dec
les
push
lret
add
ret
imul
and
adc
sub
cmp
icebp
dec
pusha
sub
shrl
loope
push
rclb
xor
hlt
cmpsb
jle
inc
pop
movb
mov
pop
in
jbe
rol
jmp
cwtl
sbb
xchg
inc
add
adc
cmp
or
sub
pop
popa
pusha
sbb
or
notb
testb
cmp
outsl
mov
inc
and
sub
shlb
test
movsb
imul
xchg
pusha
mov
adc
test
mov
leave
aad
mov
rorb
pushw
xchg
inc
inc
iretw
cmp
pop
cmp
icebp
dec
enter
and
adc
ret
popa
cmpsb
insb
adc
lods
xchg
xchg
fwait
lds
sub
fprem1
push
sbb
push
mov
xchg
outsl
imul
sub
pop
or
sub
inc
or
push
lahf
sub
es
dec
cli
or
xchg
add
xor
adc
inc
sbb
shrb
mov
adc
jge
add
fcmovbe
pop
adc
and
andl
or
sbb
push
fcmovnb
cmp
adc
mov
mov
mov
call
cmp
xor
pop
xchg
push
jp
push
cmp
add
insb
cwtl
nop
inc
push
pop
loope
xor
rcrb
adc
daa
popf
loopne
rorb
das
enter
mov
aad
and
test
add
clc
lahf
pop
inc
xor
dec
push
dec
add
out
mov
push
sub
rcrl
adc
mov
jge
rcrb
jp
sbb
in
leave
pushf
add
call
hlt
inc
outsb
push
push
andb
repnz
pop
imul
push
loope
push
pop
loop
addb
xchg
or
mov
rcrl
repnz
add
pop
push
sub
in
movsl
xchg
rcll
loopne
ljmp
or
add
ss
push
mov
push
in
pop
pop
dec
rorb
jp
jecxz
or
repz
ds
jmp
mov
cmp
out
add
lods
push
push
and
adcb
xchg
pushf
dec
push
jbe
movsb
push
outsb
xchg
sub
rcl
pop
fadd
int3
inc
sub
jmp
ja
mov
inc
les
pop
jns
mov
addl
pusha
icebp
cwtl
loopne
push
inc
jge
inc
daa
inc
inc
movsb
sbb
mov
mov
test
cmp
add
cmc
sbb
mov
push
js
push
shrl
in
adcb
sbb
lea
push
cmp
mov
inc
and
lea
xor
in
push
adc
jno
xor
dec
or
add
add
push
rol
gs
xor
mov
mov
das
pop
out
or
cli
ss
mov
sub
mov
adc
xorl
pop
mov
rolb
sbb
xor
inc
sub
nop
push
or
add
add
js
push
push
bound
add
fs
inc
iret
adc
adc
jg
inc
or
adc
pop
adc
adc
push
adc
xor
loopne
cmpsl
sbb
aas
or
in
mov
push
xchg
movsb
jb
mov
or
in
add
dec
and
ds
mov
sar
popa
data16
xor
dec
mov
sbb
test
xchg
rcrl
and
mov
inc
int
dec
inc
jmp
add
fidivrl
mov
or
adc
pop
push
sub
or
xchg
cmc
xchg
add
jge
sbb
xor
inc
add
sbb
push
loopne
repnz
movsb
or
push
jp
aam
and
addr16
inc
jp
sub
lret
ret
jg
rcll
or
imul
or
insl
loope
push
add
jb
fcmove
sbb
fldcw
or
push
lahf
sbb
lock
jp
mov
jl
shrb
xor
add
test
out
xchg
pop
push
or
mov
into
call
push
mov
dec
sub
inc
mov
push
xchg
stos
and
jb
inc
shrl
pcmpeqw
in
mov
fsubrs
hlt
or
pop
or
setge
jmp
cli
scas
pop
decl
dec
or
add
adc
ret
pop
push
mov
idivb
push
cmp
inc
push
mov
jno
ret
mov
and
sub
mov
push
cmp
je
ret
cmpsl
int
mov
jne
test
loopne
test
into
shlb
lock
push
jp
and
imul
sub
add
ljmp
jne
movsb
xchg
add
jp
sbb
cmpsb
or
fidivs
xor
xchg
pop
mov
pcmpeqb
adc
lret
lods
jg
sub
fldl2t
pusha
cmpsb
add
adcb
js
xchg
dec
mov
mov
aad
lret
hlt
push
test
leave
dec
mov
sahf
je
ret
je
push
rcll
xor
jmp
bound
inc
xorl
dec
shll
out
pop
xchg
dec
cmp
add
push
push
xor
adc
pusha
lods
ret
cli
dec
push
cs
push
test
fcmovnu
cmp
es
aaa
adc
mov
sbb
repnz
or
add
lret
mov
and
loopne
movsl
rorl
pop
movsl
repnz
add
and
stc
shlb
fs
imul
xor
test
ror
adc
mov
pop
sbb
add
or
repz
sahf
ret
rcrb
push
pop
dec
rolb
jecxz
inc
lock
lods
mov
pusha
inc
pop
or
cli
js
movsb
shll
xchg
adc
add
addl
shlb
lret
aaa
jne
mov
xorl
inc
inc
mov
sbb
dec
sbb
shl
mov
les
lret
fimull
aas
and
call
data16
mov
adc
sbb
xchg
jno
push
js
insl
popf
mov
movb
aam
loopne
test
xchg
pushf
mov
flds
movsb
icebp
in
mov
cmpsl
mov
test
adcb
sbb
sbb
shlb
xchg
xchg
pop
js
nop
cmp
lret
scas
int
subb
inc
sub
icebp
test
and
pusha
rcrb
cmp
repnz
sbb
or
call
test
mov
sbb
lea
add
cmpb
inc
xor
es
cmpsb
fwait
mov
loop
mov
shrb
sbb
inc
or
scas
movsl
inc
add
add
and
sub
or
jb
mov
adc
ret
or
xor
and
sbbb
pop
cli
adc
push
xor
mov
dec
or
xor
jno
dec
sarb
mov
pop
inc
cltd
jbe
adc
mov
push
mov
mov
mov
or
inc
js
bound
mov
push
in
xor
adc
add
push
or
inc
pusha
in
xchg
add
jns
mov
cmp
enter
fldt
sbb
loope
pop
test
push
ljmp
push
sbb
inc
push
jecxz
add
inc
cmp
js
sub
adc
sub
mov
and
push
push
sub
xchg
jo
inc
jecxz
insb
sub
sahf
pop
and
and
rclb
lock
lds
jo
cmp
lret
loop
or
pop
xchg
packssdw
sbb
or
adcl
adc
xchg
cmp
les
sub
push
push
in
inc
dec
mov
mov
cli
test
popa
xchg
push
cmp
repnz
dec
ss
jp
inc
mov
push
add
or
dec
push
mov
inc
lods
loopne
ds
push
push
fmul
cmp
push
push
dec
push
aam
jo
jno
push
or
and
rcr
and
dec
inc
test
mov
xor
xchg
sahf
test
pop
mov
outsb
hlt
rcrb
mov
mov
mov
pushf
ror
inc
cwtl
test
ss
test
test
or
sub
cmpsl
and
roll
mov
xor
add
sbb
dec
xor
enter
cmp
in
push
ljmp
test
pop
cmp
ror
mov
dec
inc
inc
add
sbb
xchg
clc
rcr
rcl
or
rcr
mov
sbb
popf
sub
sub
push
sub
movsb
dec
jae
lcall
push
or
or
fcomps
lret
adc
sub
xor
js
adc
enter
andl
push
push
add
je
adc
xor
xchg
sbb
gs
mov
sbb
ret
push
lods
pop
loope
pop
cmp
add
xlat
and
repnz
mov
adc
mov
or
inc
inc
add
rcrb
pop
pop
add
arpl
xchg
mov
lods
push
sahf
mov
shrb
xchg
test
sub
fistpl
sub
xor
push
invd
lret
xor
rolb
jno
push
add
cmp
pop
adc
mov
pop
sub
test
adcb
dec
cmp
into
xor
xchg
lds
sbb
jb
je
jbe
push
outsl
or
or
or
xchg
mov
push
mov
push
add
pop
enter
out
sub
push
and
mov
sbb
add
lret
lods
ja
or
pop
popf
sub
or
cwtl
sbb
inc
fmuls
push
xchg
insb
mov
add
push
out
xchg
and
pop
ljmp
and
addl
or
fnstcw
popf
adcb
add
and
add
cmc
inc
shlb
dec
lods
movsl
js
push
push
xchg
push
sbb
out
hlt
mov
ljmp
mov
push
dec
je
inc
sub
push
roll
push
jp
icebp
inc
out
mov
std
dec
repnz
push
adc
sub
pop
add
adc
jmp
loope
sub
mov
shlb
and
rorl
lock
add
dec
adc
ljmp
dec
pop
mov
jecxz
mov
aaa
push
mov
call
or
mov
cmp
ret
ret
cmpsl
andl
rclb
stc
addr16
out
les
and
pop
lret
push
adc
iret
jns
cmp
mov
sbb
in
mov
inc
push
xchg
roll
pop
insl
sbbb
xchg
popa
sub
je
mov
and
xchg
jmp
movsl
add
mov
pop
jae
inc
or
test
dec
pop
movsb
clc
mov
add
iret
add
push
add
cwtl
lea
sub
mov
mov
sbb
sub
push
das
sbb
int
ja
icebp
outsl
daa
mov
mov
add
pop
xor
loope
mov
dec
adc
jmp
sub
mov
sub
adc
movsb
xchg
gs
adc
adc
shrb
add
clc
adc
das
daa
rorb
mov
idivb
roll
xchg
lret
mov
xor
push
and
in
fsubrs
jne
call
orb
sbb
andb
jns
and
xor
xorl
xchg
loopne
jmp
push
mov
push
data16
xor
je
mov
inc
mov
inc
cmp
nop
out
sarl
inc
adc
popf
scas
insb
sbb
flds
inc
mov
mov
jp
js
mov
adc
cmp
dec
call
loopne
sarb
sahf
test
sbb
push
rcr
rol
add
cli
add
fsubl
mov
icebp
fcomps
aam
or
adc
mov
loope
sbb
xor
dec
enter
mov
daa
mov
cmp
xor
gs
lods
xchg
mov
in
push
and
mov
add
sub
dec
outsl
sub
mov
add
test
xchg
pop
or
ret
cld
loop
in
sahf
inc
in
in
pop
lea
mov
sub
repz
mov
cmpb
push
jne
or
stos
lret
push
jecxz
in
into
repnz
add
fmull
add
mov
push
push
aam
or
inc
push
xchg
xchg
or
mov
lods
jns
mov
and
push
xchg
add
add
mov
fsubl
add
loope
sbb
shlb
jl
jle
std
fiadds
dec
dec
or
dec
ds
imul
jecxz
mov
pop
adc
xchg
xor
or
mov
les
test
dec
sub
cmp
inc
add
push
js
daa
lods
add
mov
push
add
out
dec
ljmp
inc
jecxz
test
and
xchg
orl
push
rol
adc
imul
test
xchg
dec
add
lods
pushf
cli
push
or
test
cmc
gs
cmpsb
pop
push
ljmp
jle
insl
into
jno
ret
rol
fdiv
mov
or
sub
jns
jp
or
subl
cs
mov
or
adc
sbb
cwtl
clc
mov
cmc
add
nop
sbb
inc
sti
push
cmpsl
lock
into
xor
add
add
and
arpl
pmuludq
mov
aas
xchg
mov
loopne
add
int
dec
push
cmp
add
jns
jmp
js
push
add
cmp
shl
loop
add
add
and
jle
dec
popa
sub
shrb
sbb
out
sbb
mov
test
adc
push
aam
ret
lahf
adc
cmp
adc
rorb
mov
mov
rorb
adc
mov
adcb
cmp
inc
mov
imul
or
dec
xor
daa
jl
inc
sub
jo
push
xor
lahf
adc
or
popa
add
xchg
loopne
mov
and
sub
add
into
aas
out
pop
push
mov
movsb
daa
out
xchg
xlat
fsubrl
push
js
xor
push
xlat
xchg
enter
sbb
push
out
roll
call
enter
inc
mov
inc
add
andl
adc
add
ljmp
scas
and
mov
mov
call
fmuls
adc
inc
lock
por
sti
mov
rcrl
enter
mov
push
jmp
inc
or
xchg
push
cmpsb
pop
shlb
dec
adc
mov
mov
push
push
data16
add
setae
rol
sbb
xor
enter
enter
add
xchg
mov
sub
pop
mov
or
mov
adc
jne
insl
sub
mov
fiadds
mov
xchg
adc
and
add
into
xchg
xorl
cmp
and
jnp
add
inc
pop
push
or
stc
cmp
and
jb
sbb
push
adc
icebp
test
lcall
rcl
push
cmpsb
jne
adc
pop
cli
mov
push
shr
jo
pusha
add
mov
into
mov
js
call
and
mov
loop
lret
adc
and
adcb
pminsw
out
pop
addr16
and
push
xor
cld
rorb
mov
push
push
xlat
push
dec
jp
dec
lods
sahf
mov
add
mov
dec
das
jae
test
or
sub
cmp
or
mov
sbb
hlt
or
ss
or
pop
or
cmp
pop
pusha
ret
adc
or
xchg
xchg
icebp
pop
xchg
cmp
leave
or
loope
pushf
pop
cld
aaa
jno
push
test
mov
daa
pusha
mov
and
sbb
testb
or
push
adc
test
push
push
pop
test
imul
shl
and
push
enter
cmp
das
jl
xchg
scas
adc
and
pop
or
adc
push
mov
test
pop
sbb
bound
outsb
add
mov
psllw
pop
dec
pop
fs
cmp
rorl
in
loope
dec
outsb
sbb
rolb
mov
pop
rorb
xchg
rorb
hlt
adc
mov
mov
inc
rclb
sub
mov
push
test
or
movsb
dec
mov
in
shr
push
inc
jge
loope
das
push
mov
and
adc
and
add
xor
add
test
or
in
dec
fsubs
clc
dec
mov
in
add
rorb
movsl
cmc
cli
add
or
cmp
push
clc
xor
cmp
jecxz
es
sti
rorl
add
adc
adc
dec
movsb
subl
stos
fs
sbb
and
sahf
fs
dec
insb
arpl
inc
cli
sub
lret
sub
xor
aam
or
insb
inc
sub
rcll
mov
ss
dec
jg
clc
pusha
cltd
clc
inc
push
jp
jmp
ret
xlat
and
xchg
mov
dec
or
or
push
add
mov
mov
hlt
push
scas
das
enter
xor
sbb
or
or
mov
rcrl
lock
pop
or
in
sarl
stos
adc
pusha
cmp
daa
loopne
pusha
repnz
fdivr
or
test
push
add
xchg
fldl
sbb
cmp
add
cld
inc
mov
xchg
xchg
jp
sbb
xor
dec
in
iret
loope
sub
fildl
adc
roll
add
sbb
add
mov
xchg
movl
fcoms
loop
add
or
xchg
movsl
rorl
add
sbb
popa
loop
adc
inc
fidivl
jns
in
and
inc
add
jp
lahf
dec
jl
mov
sbb
and
or
mov
add
push
cmpsb
xchg
popa
jo
fcomi
aam
push
add
sub
push
fwait
stc
cmp
mov
sub
and
out
loope
or
loopne
insb
aad
sbb
jp
pop
sub
push
je
popa
in
dec
dec
loope
jo
mov
sbb
xchg
adc
ret
std
adc
loopne
stos
mov
inc
sbb
bound
stc
and
mov
push
test
add
xor
cmpb
sbb
or
dec
icebp
add
lods
imul
lret
add
jno
popa
test
or
into
ret
lods
cmp
rcl
or
movsb
dec
imul
addr16
push
adc
sub
fs
or
add
testl
adc
test
pushf
imulb
push
mov
cmp
xchg
sarb
pusha
add
add
test
dec
push
sub
lea
addps
sbb
pop
jo
inc
das
inc
shrb
pushf
adc
into
aaa
clc
lods
movsb
and
sub
cmp
jb
lret
cmp
push
rcrb
int3
xlat
adc
or
add
xorb
push
sub
add
dec
cmp
lret
push
into
xchg
add
enter
dec
inc
inc
bound
add
in
xor
and
jno
rclb
lea
sbb
cmp
lock
leave
and
add
inc
mov
call
sub
inc
mov
add
or
lret
rol
in
inc
es
sub
fimull
cmp
js
mov
xchg
inc
sbb
jnp
mov
add
pushf
sub
enterw
push
pop
dec
test
pusha
sub
push
insb
stos
imul
stc
les
nop
push
and
lea
mov
lock
xor
insb
out
repnz
cli
sbb
or
push
sub
daa
and
inc
cmp
adc
mov
loopne
je
mov
sbb
fcmovb
insb
add
pushl
push
cmp
and
pushf
adc
sub
cltd
mov
xchg
or
pop
fcmovnbe
mov
push
xchg
pop
add
js
ret
push
sub
mov
jge
call
cmp
add
xor
out
pop
lea
push
lock
push
inc
or
cmp
popa
sub
test
movsl
sahf
lock
add
imulb
adc
jo
dec
add
adc
mov
add
rclb
jp
andb
push
mov
add
into
out
rorb
xchg
push
and
lock
sbb
mov
call
push
push
or
mov
mov
mov
adc
add
xor
outsl
orl
ret
dec
sub
push
xor
aam
addr16
mov
pop
out
mov
sbb
or
dec
xchg
sub
sub
xor
orb
insl
push
adc
add
xor
addr16
xor
inc
addb
xchg
push
into
cmp
dec
out
xor
mov
add
adc
mov
jmp
xor
pop
test
pop
inc
jmp
addr16
push
inc
or
mov
or
add
mov
int3
push
faddp
or
call
popf
loope
rcll
adc
push
xor
pop
pusha
pop
and
xchg
dec
pop
pop
js
cmc
cmpsb
sti
xchg
and
add
bound
fprem1
pop
jmp
dec
dec
scas
retw
mov
fistpl
or
repz
push
hlt
sbb
push
mov
int3
stos
sbbb
cmp
rol
popf
or
xlat
insb
ljmp
push
loop
xchg
add
jp
stos
cmp
movsl
test
dec
dec
test
dec
push
mov
popa
xor
pop
push
jp
adc
inc
fwait
rcrb
mov
loope
cmpsb
mov
push
pop
dec
addr16
push
push
in
andb
addr16
mov
arpl
push
pushf
repz
push
push
and
sub
xorw
jecxz
ret
shlb
outsw
add
rorl
ret
add
mov
data16
adc
sub
adc
add
arpl
mov
sti
out
or
and
add
push
mov
mov
add
jo
das
or
sbb
jmp
mov
ljmp
push
sub
add
push
mov
or
and
test
or
dec
sbb
pop
fsubl
add
xor
adc
or
mov
and
shlb
sahf
cmp
ret
in
sbb
xchg
xor
shr
cmp
jl
repz
add
enter
movsb
add
adc
sub
sub
pop
adc
mov
sbb
sub
inc
or
and
cmp
cmpsl
in
xor
test
add
push
mov
loopne
xor
xor
pop
push
inc
add
jnp
daa
adc
orb
scas
push
rolb
jb
pop
lcall
pop
adc
mov
mov
push
data16
jb
clc
popf
jb
gs
push
push
add
pop
xor
mov
das
sub
cmp
xchg
js
adc
mov
inc
movsb
or
mov
in
mov
addr16
jns
mov
or
adc
mov
and
das
loope
shll
rolb
fidivrl
or
rolb
sbb
sbb
inc
lods
mov
ljmp
add
rolb
test
icebp
fs
js
data16
test
addl
mov
add
lods
or
or
mov
es
lods
xchg
adc
daa
adc
nop
push
push
pushf
push
mov
sahf
shlb
das
sbb
pusha
push
add
js
mov
push
sbb
sub
hlt
pusha
push
or
stos
insb
pop
dec
jg
addb
mov
stos
adc
add
xchg
jl
rcrb
sub
mov
xchg
stc
lea
inc
bound
jmp
cmp
fstps
or
pop
inc
leave
push
pop
push
decb
lods
fs
int3
mov
xchg
cmpb
or
inc
cltd
ficoml
cwtl
or
mov
rorb
or
pop
push
push
popa
mov
cltd
mov
cmp
adcb
mov
arpl
lock
jmp
push
pop
fisubl
mov
pop
int
js
shrb
ror
lock
jge
xchg
std
mov
loope
xchg
or
rcr
mov
cmp
iret
dec
and
stc
pusha
sbb
mov
push
movsb
adc
ret
pushf
repz
shrb
scas
add
jo
dec
mov
sbb
xchg
aas
test
test
out
or
loopne
dec
sbb
dec
popf
and
dec
sbb
pop
ds
loop
cwtl
and
push
push
inc
mov
outsb
xlat
xchg
mov
pusha
stos
std
jae
mov
lock
sbb
sbb
sub
add
or
inc
add
jecxz
push
lret
dec
cmp
or
sarb
jl
add
loope
call
test
mov
cmp
and
outsl
aam
push
xchg
xor
cs
xchg
add
lock
nop
xor
cmp
lock
pop
rorb
or
es
push
hlt
shr
pushf
shlb
or
jg
push
sbb
sub
fisubrs
jns
push
sarb
pop
icebp
mov
rolb
sbb
clc
fimuls
add
lods
push
inc
jp
mov
or
mov
push
add
or
pop
mov
in
loopne
mov
call
dec
test
lahf
jo
inc
into
leave
fs
inc
mov
lods
push
push
mov
add
add
adcl
add
les
sub
push
lock
nop
rclb
cltd
mov
ret
xor
sbb
lock
in
mov
push
or
sbb
or
dec
sar
xor
add
lahf
adc
sub
jecxz
mov
sub
js
mov
jo
jne
xor
in
adc
js
mov
fwait
jbe
icebp
shlb
sbb
push
ja
repnz
mov
pushf
rclb
inc
pop
xor
jl
aam
dec
xchg
cmpsl
xorl
int
and
push
mov
xor
push
mov
stos
out
add
fadds
jns
fistps
and
jecxz
sub
push
imul
lret
dec
shlb
jmp
lods
inc
inc
sub
fwait
cmp
js
push
lods
jo
pop
scas
push
pop
xchg
andb
shl
out
enter
jo
cmp
loopne
cmp
inc
lret
dec
mov
sub
mov
inc
sbb
jl
mov
xchg
and
cmp
or
stos
push
add
into
test
mov
mov
js
les
out
out
sbb
cmp
adc
in
add
popa
mov
dec
sub
cmp
or
sbb
test
addb
or
iret
push
fcomps
pop
test
jp
mov
jb
xor
aad
xchg
rorl
ret
lea
push
dec
adc
push
rol
add
icebp
push
mov
fs
or
pop
sub
jo
adc
pop
adc
aam
sub
inc
scas
aam
mull
subb
lock
mov
inc
inc
testl
rorl
mov
and
or
sbb
xchg
rol
popf
lret
add
inc
loope
ror
in
pusha
test
sub
jo
adc
dec
mov
xor
xchg
xor
pop
jmp
lret
sbb
jle
andl
sbbb
cs
rcrb
cmp
pop
and
js
push
call
in
dec
or
test
mov
add
lock
sarl
cmp
dec
sar
clc
mov
push
leave
add
addl
popf
les
jge
dec
add
std
lock
push
das
inc
push
incb
aad
inc
jl
insl
je
push
add
xchg
lock
mov
aam
rcl
or
adc
sub
out
mov
adc
stos
push
pop
jns
into
sbb
ljmp
add
adcb
lock
inc
lods
insl
cld
xchg
adc
push
icebp
add
int
dec
js
sub
faddp
adc
sub
and
punpckhbw
in
decb
enter
mov
sbb
cmp
and
clc
aad
xor
nop
scas
es
mov
mov
jb
mov
loopne
push
gs
inc
lock
shr
cmc
sbb
loop
stc
shlb
adc
adc
xor
rcll
push
mov
sbb
popa
sbb
mov
dec
sub
sbb
add
sub
add
outsl
int
mov
mov
sbb
jo
dec
inc
push
cmp
nop
or
loopne
sub
nop
xor
jno
mov
jb
push
scas
mov
xor
sti
les
rcrl
xor
out
pusha
add
mov
jno
or
test
lods
pushf
test
mov
pop
inc
push
sbb
leave
pop
repnz
push
icebp
xchg
rcl
push
adc
lock
in
add
jmp
pop
stos
push
mov
push
mov
incl
adc
in
fnstcw
mov
jmp
test
pushl
sbb
cmp
jp
pop
fcompl
pop
xchg
mov
adc
and
push
icebp
int
pop
xchg
add
pop
cmovne
hlt
push
push
invd
add
stos
cs
sbb
ret
loope
inc
js
lods
and
rclb
mov
inc
sub
cs
ret
add
jne
mov
push
xchg
je
addb
push
add
pop
push
dec
movb
push
daa
push
xor
je
pop
add
in
or
sbb
js
out
adc
ret
dec
sub
pop
ljmp
add
pop
int3
xor
pop
loopne
cwtl
add
sbb
sbb
rolb
mov
sti
movaps
movsl
rorl
or
xor
or
jl
xchg
adc
aam
mov
xor
adc
decb
leave
cmp
loop
adc
xchg
mov
out
test
dec
rol
mov
lcall
test
stc
cmp
stos
push
andb
test
sub
push
loop
sbb
inc
sub
inc
mov
iret
cmp
or
lods
inc
adcl
dec
fistps
adcb
mov
dec
stc
add
cmpsl
mov
sahf
test
xchg
stos
jl
xor
test
jns
push
es
add
xor
scas
mov
xchg
sbb
or
adc
mov
or
andl
sub
xchg
xchg
in
loope
jge
aam
xor
int3
sbb
int3
push
xchg
repnz
fs
arpl
xor
sarb
sti
rorb
stc
push
fdivs
movsb
mov
mov
mov
movsl
cmp
xchg
cmpl
push
xchg
clc
aaa
lods
dec
xchg
push
add
inc
cmp
xorl
jns
cwtl
fld
mov
mov
adc
js
add
mov
mov
sbb
add
sbb
xor
mov
or
dec
adc
ret
fs
repz
lock
mov
xor
dec
arpl
adc
cwtl
add
sahf
add
shlb
mov
rorb
rcrb
lock
inc
xlat
adc
push
sbb
xor
nop
mov
pop
and
or
cmp
jae
and
in
pop
fiaddl
add
mov
fisttpll
data16
xor
pop
push
cltd
pusha
fwait
repnz
movsb
cltd
call
pusha
fmul
sub
dec
mov
sbb
pusha
addr16
popf
inc
aad
mov
pop
add
mov
imul
adc
mov
mov
dec
scas
scas
cwtl
sub
xchg
mov
insl
add
jb
test
mov
sbb
fsubrs
xor
lock
cmp
push
jo
das
ljmp
mov
nop
mul
push
mov
cmp
enter
or
lods
sub
jp
test
push
sbb
andb
pop
cmp
in
rorb
sub
movb
js
mov
mov
mov
stos
in
add
adc
pop
add
push
daa
mov
call
ret
repnz
das
or
sub
pop
push
sarb
out
adc
or
push
add
sbb
push
test
pop
and
repnz
mov
popf
mov
arpl
add
adc
fistpll
dec
lock
mov
inc
cmp
mov
outsb
inc
dec
fiadds
imul
xlat
or
popa
imul
xchg
call
int3
mov
mov
sbb
ljmp
xor
sub
push
sbb
pop
jp
push
clc
and
fiadds
sub
aam
mov
dec
dec
mov
dec
imull
or
jmp
adc
enter
xor
ret
loopne
stos
mov
xchg
mov
or
lods
mov
ror
loope
adc
rcrb
fimull
ds
ss
add
movsb
enter
jle
out
mov
int3
sbb
mov
jp
scas
lods
sbb
sbb
leave
sub
xchg
adc
sbb
lock
pop
cs
mov
adc
rclb
mov
addb
and
out
adcb
shrb
push
rcrl
aas
movsl
add
push
inc
mov
pop
aam
add
test
shlb
in
clc
dec
shl
test
jp
and
imul
or
adc
xchg
arpl
add
lret
aad
mov
test
ds
js
icebp
nop
movsb
pop
inc
adc
adc
test
in
sbb
mov
seto
or
sahf
into
pop
test
mov
ljmp
push
loop
pushf
inc
es
xchg
mov
dec
add
add
pop
xor
pop
movsb
pusha
jecxz
mov
mov
xchg
smsw
jno
cli
stos
mov
mov
push
fiaddl
push
pop
xchg
xor
test
xor
hlt
sub
sbb
adcl
and
or
aas
lock
or
mov
les
and
and
in
mov
test
push
es
hlt
icebp
jge
push
cmp
mov
loopne
stos
arpl
jge
inc
andb
or
pushf
dec
and
movsl
or
inc
or
ret
or
xchg
scas
push
mov
andb
insb
jmp
sub
adc
loopne
enter
aam
pushf
clc
out
sbb
or
shlb
cmp
mov
or
xchg
push
ljmp
adc
cmp
mov
cmp
test
dec
imul
add
stos
enter
sbb
loope
push
or
add
lea
pop
xor
add
fists
dec
cmp
lret
pop
es
push
push
adcb
xchg
mov
xchg
je
jmp
push
and
aam
popf
dec
or
jo
or
inc
jns
in
testl
jb
adc
dec
cs
jo
cltd
and
ret
ret
xor
inc
mov
push
pop
ljmp
jecxz
pusha
pop
movsb
push
and
mov
mov
test
shrb
iret
lods
adc
adc
dec
roll
push
push
int3
mov
xor
inc
sysret
add
xchg
add
fdivrs
add
mov
loope
ret
dec
js
rcl
push
jmp
adc
call
and
mov
push
pop
rolb
xor
xor
add
mov
imul
dec
adc
cmp
and
outsl
inc
dec
rolb
ljmp
repz
add
xchg
add
sbb
mov
xor
shlb
mov
mov
add
cmp
fs
add
into
jl
rorb
jge
mov
sub
jne
jae
pusha
fistps
mov
rcl
rcll
xchg
gs
or
idivl
rorb
inc
decl
icebp
dec
xchg
push
cmp
lock
mov
in
jns
fisubl
or
add
test
mov
orl
popf
ficoms
jo
in
repz
pushf
inc
pop
rcrl
dec
mov
pusha
xchg
xor
xor
or
push
xor
cs
xchg
adc
in
or
mov
adc
mull
sub
cltd
hlt
xor
pop
mov
enter
adc
and
popf
pop
pop
or
lea
mov
fsubl
dec
notl
push
or
or
fadd
push
sub
enter
mov
sahf
dec
ljmp
into
dec
adc
mov
cmp
adc
cmp
test
pop
cmpsb
and
sbb
jge
add
in
stos
cwtl
js
sub
push
das
adc
xchg
cmp
inc
inc
iret
in
jecxz
xor
fiaddl
dec
fwait
into
js
shll
arpl
cmp
inc
push
sbb
sub
xchg
hlt
cld
sbb
xchg
or
add
cmp
out
sbb
xor
push
out
add
sub
and
add
dec
movsb
bnd
jno
cmp
nop
sub
out
push
mov
xchg
es
sub
or
cmpsb
adc
sbb
xlat
adc
bound
lahf
in
push
pop
jo
dec
pop
daa
or
popa
sbb
test
pop
lahf
sub
adc
xchg
add
test
or
cmp
mov
imul
adc
sub
aam
push
xor
jl
inc
jp
mov
fcoml
lds
sbb
shr
lock
add
roll
and
or
sahf
xor
sbb
xchg
push
jae
ljmp
orb
mov
push
movhlps
in
popf
test
dec
sbb
imul
mov
in
aaa
cmpsb
xchg
push
ret
mov
push
cltd
addb
xor
lret
imul
push
nop
adc
das
cwtl
xchg
dec
push
cpuid
dec
mov
stos
gs
aam
lock
gs
jo
push
jg
add
add
mov
jecxz
mov
jp
inc
imul
and
push
ret
cmp
cmp
fisubl
pop
or
adc
test
roll
or
shrb
pop
cli
shlb
add
dec
and
add
rorb
or
addl
test
or
adc
iret
bnd
jmp
add
out
lahf
pusha
add
shlb
inc
in
rcrb
mov
mov
push
or
cmp
sbb
addr16
mov
sub
push
ljmp
cmpl
daa
pop
mov
lds
add
pop
sbb
ljmp
or
pop
and
jge
outsl
fisubl
lock
mov
push
mov
add
movsl
push
pop
cmpsl
mov
mov
fcompl
and
dec
imul
ljmp
test
les
mov
ljmp
in
test
push
sub
mov
xchg
roll
inc
addb
rcrb
push
dec
out
test
aam
popa
or
cmp
adc
or
mov
or
sbb
addb
enter
test
repnz
bound
ss
and
cmp
enter
add
std
pop
sub
aaa
mov
or
xchg
xchg
mov
adcb
test
pop
mov
adc
ret
mov
lret
fmul
xorl
sub
mov
xor
rolb
ljmp
push
adc
inc
cmp
loope
push
pop
dec
rcr
out
sbb
and
push
add
jbe
fnstenv
idiv
sbb
mov
or
mov
fdivl
and
push
ss
mov
clc
adc
enter
ds
and
sbb
dec
ficomps
pop
testl
pop
pop
inc
pop
leave
leave
add
icebp
inc
or
lcall
or
push
sbb
in
je
mov
inc
add
iret
mov
addl
add
cmpsl
les
ds
lret
add
rcll
imul
or
shrb
cmp
jge
pop
mov
dec
aas
gs
shll
enter
sbbb
mov
das
or
ficompl
jo
js
adc
out
adc
jb
mov
sbb
push
or
mov
sbb
jp
repz
mov
test
hlt
movsb
add
call
xor
adc
sbb
mov
pop
lret
mov
cmove
fs
lods
add
push
jbe
pop
add
push
cmp
jp
push
sbb
dec
addb
dec
inc
dec
pop
or
lds
add
add
xchg
add
insb
cwtl
and
and
push
outsl
pop
pop
xchg
shlb
pop
hlt
int
dec
xorb
je
push
lods
into
or
push
add
mov
or
push
sbb
sub
cmp
std
inc
pop
push
and
or
inc
mov
add
outsl
loope
addr16
add
das
outsb
add
leave
add
mov
gs
sbb
test
enter
xchg
cli
push
cmp
loopne
daa
pop
cmpsb
mov
pop
and
pop
sbb
mov
add
sarl
ljmp
cmp
scas
inc
pop
mov
fstpt
and
dec
mov
push
push
push
inc
ljmp
in
xor
and
mov
les
sahf
xchg
sub
lock
xchg
mov
jbe
lea
push
cwtl
add
psubb
sbb
inc
adc
xor
cmp
mov
and
jbe
push
loopne
cmp
hlt
and
shlb
imul
xchg
andb
nop/reserved
add
int
or
or
outsl
adc
mov
lret
lods
jle
mov
sar
push
sub
imul
mov
pop
sbb
fwait
or
addl
or
jno
lret
dec
daa
cmp
leave
or
pusha
cmp
test
pop
stos
mov
adc
xchg
mov
mov
ret
call
call
or
xchg
cmc
lods
loopne
xor
sub
sbbl
or
pusha
adc
pop
icebp
jp
je
adc
add
js
notb
test
mov
xchg
and
bound
in
mov
pusha
adc
shll
das
hlt
mov
xchg
pop
inc
ret
jmp
loope
adc
xor
push
pop
jecxz
xchg
dec
pop
sbb
shlb
push
jle
mov
shlb
js
add
test
sahf
pop
cwtl
or
dec
cltd
sbb
mov
bnd
inc
sbb
outsl
pop
mov
clc
jp
aad
cmp
fldenv
sbb
sub
aad
mov
std
add
loopne
in
add
xchg
adc
adc
mov
add
adc
or
rclb
cmp
mov
loop
sbb
sub
inc
push
ret
mov
push
push
mov
rolb
mov
adc
ret
rol
and
pusha
add
mov
std
pop
mov
dec
jmp
lret
shl
inc
mov
xlat
or
sbb
repnz
push
inc
push
xor
or
mov
mov
mov
push
sbb
enter
data16
push
lock
repnz
sbb
daa
push
or
pop
mov
fidivs
bnd
push
push
xor
push
inc
adcl
out
mov
sahf
sbb
pop
leave
jo
xchg
push
inc
bound
imul
dec
repz
jmp
xor
sbb
dec
rcrb
sbb
scas
pop
or
jb
xor
into
mov
das
stos
call
cld
dec
scas
inc
cltd
lock
push
mov
test
clc
mov
shrb
addb
ret
lret
mov
ret
sbb
jg
sub
adc
iret
lods
mov
push
insl
adc
push
adc
xchg
call
sub
out
jge
movsl
addr16
enter
jo
push
sbb
inc
mov
or
ljmp
add
pop
pop
sbb
lret
add
lods
in
pop
lea
popf
hlt
mov
and
and
test
and
push
mov
mov
test
xchg
push
xor
bndldx
add
lea
faddp
or
dec
sbb
mov
mov
leave
rcl
xchg
dec
push
xchg
cs
inc
retw
adc
addb
jno
add
xlat
or
inc
sbb
je
imul
push
in
test
xchg
or
xchg
pop
mov
mov
xchg
mov
clc
add
push
inc
inc
xlat
adc
jp
xchg
enter
cmpsb
scas
rcl
aad
xchg
aaa
lods
mov
push
push
adc
mov
js
divl
out
into
xor
cmc
and
pop
add
sbb
sub
lods
fisubrl
popa
adc
mov
ret
mov
add
add
fdivrl
xor
scas
push
rcll
gs
arpl
hlt
add
mov
and
lods
push
nop
xchg
nop
push
stos
sbb
mov
mov
shl
adc
mov
cmp
add
and
mov
add
sub
pusha
push
lods
into
lcall
ret
lret
mov
pop
fs
xchg
mov
sbb
push
popa
and
lret
or
in
mov
dec
add
dec
sbb
loopne
orb
jmp
fcmovbe
inc
xlat
mov
shl
and
fidivrs
push
rolb
or
dec
bnd
mov
push
stos
pop
pusha
insb
or
cmp
jno
sbb
pop
rorb
xchg
sbb
adc
sbb
dec
fadds
arpl
sub
jbe
ficoms
ljmp
lea
xlat
sbb
push
icebp
test
pop
adc
cs
in
bound
mov
sbb
je
sahf
adc
psubd
js
or
xchg
jne
lret
lcall
mov
sub
loopne
xchg
ret
mov
test
lods
scas
movb
xor
lock
je
fiaddl
daa
adc
xchg
fxch
add
leave
adc
mov
rcl
mov
sub
js
adc
xchg
dec
sub
sub
dec
cmovnp
decb
pop
mov
mov
movsl
or
push
xor
xchg
push
lcall
add
js
popf
xchg
mov
push
hlt
aam
shrb
cs
lods
arpl
adc
repnz
scas
test
pop
call
ret
lods
into
dec
shlb
jno
inc
and
push
add
inc
push
jne
push
packsswb
xchg
cltd
xchg
dec
daa
dec
pop
das
jmp
adc
insb
loopne
ret
rolb
mov
dec
cmpb
lods
add
dec
xor
into
and
xor
loope
leave
xchg
nop
xchg
cmp
popl
dec
add
imul
inc
jno
push
das
dec
or
mov
fisubrl
sbb
push
xchg
sbb
xchg
and
jns
xor
test
nop
into
call
mov
test
or
xorl
pop
stc
mov
inc
or
lds
adc
push
loopne
inc
sahf
divb
cmp
rclb
fists
loop
call
cmpsl
push
push
adc
cmp
xor
xchg
fucomip
lock
or
hlt
fisubl
and
mov
mov
es
test
xchg
mov
push
sbb
add
xchg
and
popa
mov
cltd
or
cmpsb
das
pushl
jp
inc
inc
inc
mov
aam
dec
add
inc
or
dec
lret
and
ret
repz
shr
dec
mov
and
adc
sub
mov
xchg
das
pop
imul
cmp
testl
add
inc
loop
loope
push
and
sbb
lcall
cmp
or
sub
test
add
and
repnz
sub
jmp
pop
sbb
add
sbb
jle
shlb
mov
sarb
and
adc
jo
add
rolb
dec
adc
sti
jmp
je
push
jo
jecxz
sbb
adc
cltd
push
sub
push
xor
nop
cmpb
add
cli
xchg
lock
dec
jb
movlps
push
aad
aam
sbb
push
mov
test
add
sub
pop
leave
loope
lret
inc
push
mov
jne
rolb
adc
pop
mov
ret
pop
xchg
adc
add
scas
cmc
mov
dec
mov
lret
adc
cmpsl
in
lock
pop
imul
scas
adc
jle
test
rolb
pop
adc
push
push
ret
aam
sbb
arpl
cmp
adcb
in
gs
insb
mov
or
imul
dec
adc
jbe
rorb
outsb
out
push
mov
pop
rol
push
sub
gs
int3
add
loop
push
pop
icebp
repnz
pop
and
push
push
push
incb
dec
rorl
dec
inc
test
add
pusha
out
dec
in
dec
jp
push
pushf
shl
inc
or
cmp
jp
xchg
adc
xchg
and
andb
call
sbb
sub
mov
sbb
or
test
ret
xchg
adc
push
rclb
or
fs
sbb
jae
inc
add
adc
es
cmp
les
mulb
and
sbb
xor
or
sbb
inc
or
call
js
in
scas
or
push
xchg
xchg
jo
fs
mov
cld
inc
sub
lods
lods
inc
aad
les
mov
add
cmpsl
daa
cmpsb
jp
div
add
shll
push
outsl
push
dec
ljmp
stos
jae
clc
add
jmp
add
push
mov
push
and
in
cs
sbb
or
jo
jp
fimull
mov
add
in
pop
push
out
push
mov
cli
sub
inc
fsts
adc
adc
in
lods
popa
or
fwait
je
lret
dec
shl
aaa
pop
push
xor
push
or
xor
dec
lea
jecxz
mov
jno
pushf
push
inc
inc
test
sbb
push
xchg
jns
cmp
xchg
adc
mov
mov
adc
es
aam
pop
fucomip
insb
xchg
rolb
inc
mulb
ljmp
loope
sbb
rol
jmp
scas
push
xor
das
dec
fidivl
cmc
mov
lcall
ljmp
cmp
cmp
ss
pop
fldl
adcb
sbb
inc
sbb
mov
lahf
imul
push
imul
fs
push
les
shlb
xor
gs
cmp
xor
pop
and
mov
fs
cmpsb
dec
and
scas
testb
inc
adc
mov
fcmovu
jns
pop
push
add
sahf
in
aam
imul
clc
rclb
rolb
frstor
mov
fstps
shl
movb
inc
mov
pop
push
out
jp
and
adc
ret
mov
inc
pop
iret
fidivrl
movsb
mov
add
push
adc
mov
and
popl
and
dec
out
sbb
outsb
sub
xchg
xchg
icebp
push
cmpl
stos
out
enter
test
jge
sbb
and
or
push
add
rclb
shlb
mov
or
pusha
and
popa
mov
mov
rolb
cmpsb
fstpl
inc
mov
testl
lock
pause
fs
sub
adc
or
mov
out
iret
call
repnz
pushf
lods
inc
sbb
rcl
rcrl
cmp
xlat
cmc
pop
sbb
mov
cwtl
push
sub
insb
adc
push
and
lret
or
ret
leave
mov
sbb
mov
movsl
cmp
mov
loope
inc
test
rorb
lahf
repz
add
divb
test
pop
mov
ss
daa
jecxz
mov
xor
insb
or
add
dec
push
cmp
pop
fcoms
je
jl
push
sbb
rolb
stc
or
loop
add
pushf
test
mov
adc
xchg
xchg
add
adc
mov
push
mov
test
and
xchg
dec
pusha
add
add
add
push
ret
ret
andb
push
jbe
popa
push
loop
loop
mov
in
dec
or
imul
mov
or
xchg
cmp
test
sbb
cwtl
sbb
jne
push
mov
rorb
cltd
adc
mov
or
pop
inc
lods
sbb
jecxz
js
or
jecxz
and
sti
dec
call
and
xor
shlb
sbb
mov
adc
sbb
out
mov
adcb
mov
rorl
jp
sbb
test
add
mov
pop
xchg
orb
dec
xchg
xor
xlat
adc
sbb
pusha
test
cmc
or
push
cs
mov
adc
in
js
sbb
adc
adc
sbb
aad
sbb
loopne
adcb
adc
cmc
mov
jle
imul
sub
int3
ljmp
xchg
std
jne
sub
dec
rclb
jne
inc
loopne
ss
hlt
adc
outsl
scas
jb
jp
push
mov
pop
fnstcw
faddl
sbb
pop
sub
and
xchg
test
mov
or
aas
ds
ljmp
or
sub
sbbl
rorb
cmp
rcll
xor
xor
and
sbb
int
xor
and
jbe
xchg
out
loopne
inc
or
add
aas
dec
inc
push
fnsetpm(287
test
cmp
adc
popa
hlt
daa
jbe
test
dec
xchg
adc
xchg
mov
pop
jbe
and
test
mov
negl
xchg
inc
lahf
xchg
outsb
cmpl
inc
movb
mov
cld
prefetcht1
dec
inc
test
fildll
out
or
pop
test
or
add
mov
xor
clc
cmp
sub
ret
mov
and
sbb
dec
ljmp
add
push
insb
add
mov
hlt
push
in
inc
or
push
out
cmp
or
sbb
ret
je
and
cmp
or
jbe
push
cmpsl
jp
inc
add
adc
lock
movb
pushf
lret
dec
lock
sub
pop
sbb
cmp
jb
in
xor
sub
aaa
dec
push
pop
mov
movb
shlb
mov
adc
loopne
notb
xor
arpl
mov
inc
sbb
adc
lds
mov
add
dec
mov
cmpsl
es
enter
mov
aaa
sub
nop
sbb
les
sbb
je
les
sbb
fwait
mov
add
mov
inc
adc
pop
rcrb
sub
jle
pop
pop
inc
lcall
mov
jns
cmp
cmp
push
mov
loope
aad
mov
inc
jmp
pop
add
or
lock
mov
adc
push
lock
lods
xor
adc
dec
mov
inc
shlb
xor
jno
sbb
mov
inc
and
and
cli
and
pop
sbb
int3
ret
xor
movsl
xchg
pop
xor
pushf
mov
dec
pop
addb
inc
pop
test
jb
sbb
rclb
pusha
popf
inc
roll
xor
je
js
dec
or
clc
or
mov
mov
inc
or
loopne
ljmp
xor
in
les
xor
ret
into
push
inc
dec
sbb
loopne
inc
into
adc
jnp
pop
push
mov
sahf
add
nop
pop
xorb
xchg
xor
test
inc
jge
les
js
outsl
inc
pop
adc
or
gs
push
popa
mov
aas
cmp
lds
ja
out
xchg
sub
and
lods
add
dec
inc
mov
xchg
push
or
push
in
jo
loopne
aam
and
cmc
xchg
or
fs
jno
mov
aam
add
xchg
cmp
shrd
test
mov
mov
push
pop
scas
movsl
sbb
push
dec
js
sub
push
push
pop
push
test
inc
clc
adc
call
sbb
or
das
inc
lock
je
and
xchg
xchg
and
add
jae
loope
loop
xchg
add
add
call
xor
mov
jge
arpl
pop
addr16
push
std
cmp
sub
mov
dec
xchg
xchg
cmc
push
subb
mov
xchg
daa
jmp
sub
dec
stos
cmp
jmp
adc
inc
es
xchg
jo
mov
mov
movb
pusha
addr16
movl
or
sub
jb
fs
insl
fwait
sbb
jnp
mov
sbb
arpl
dec
add
arpl
shr
push
sbb
outsl
gs
add
sbbl
cmp
movsb
enter
add
add
adc
push
xor
loopne
adcb
inc
in
sahf
or
push
xor
xor
add
push
arpl
xor
xor
add
cmpsb
lock
dec
pusha
les
push
rolb
aaa
fwait
xlat
leave
xlat
or
sbb
push
push
std
lret
mov
in
or
cmp
push
xchg
cltd
jmp
jp
xor
mov
data16
push
mov
arpl
fwait
inc
mov
jae
and
xor
scas
addb
lea
sbb
jp
fiaddl
add
aam
push
ss
dec
imul
es
rcll
xor
add
mov
clc
xor
mov
and
and
or
rorb
mov
add
xor
xchg
cli
mov
xor
mov
sbb
push
xlat
pop
adc
shll
rorl
jo,pn
adc
lret
hlt
outsb
mov
jae
jo
xchg
rol
and
enter
lea
pop
fcomps
or
shll
shll
ss
xor
mov
fldl
lods
mov
add
and
xor
adc
inc
sbb
cli
lea
pop
mov
int3
inc
pop
push
jo
icebp
and
adcb
xchg
jne
or
add
ds
lock
aam
bswap
addb
lret
mov
mov
andl
adc
sub
inc
sub
dec
das
or
ljmp
inc
movb
mov
push
mov
insl
adc
fsts
cmpl
push
stos
cld
rclb
out
mov
in
push
and
fistpll
and
dec
in
pop
shl
popa
insl
mov
pop
dec
and
dec
push
push
inc
mov
mov
test
dec
lret
sub
push
lar
push
les
cmp
sub
cmp
sbb
pop
jle
mov
scas
inc
jb
add
jge
fnstenv
push
xchg
xchg
inc
and
in
mov
push
mov
pusha
cmp
inc
mov
push
call
add
dec
in
xchg
adc
adc
sbb
push
ljmp
ret
outsl
and
inc
sub
lods
insb
cmp
loope
jecxz
neg
pusha
and
inc
xchg
aam
add
pop
add
pop
lea
mov
push
mov
jge
inc
sbb
or
cmp
xor
mov
sbb
inc
data16
scas
xchg
je
xchg
push
pop
pop
jnp
test
push
dec
or
pop
jo
out
sahf
rcll
sbbb
leave
loope
movsb
mov
xchg
jno
or
push
mov
pushf
roll
arpl
cwtl
mov
lods
in
js
cli
jnp
out
mov
jo
sbb
pusha
jae
std
ror
dec
or
fiaddl
aam
std
leave
lret
insb
jmp
xchg
insb
sub
mov
mov
xlat
imulb
mov
adc
rolb
sub
outsl
pop
or
xchg
sbb
gs
popa
xor
add
sbb
xor
inc
repnz
lods
or
add
and
loope
stc
inc
out
xchg
mov
xchg
out
add
inc
test
push
sbb
dec
jbe
jb
and
push
cmpsl
adc
add
xor
cmp
andl
mul
enter
pop
pop
lock
addr16
das
adc
shll
imul
daa
fcoml
xchg
sbb
rolb
adc
mov
insb
fimuls
mov
xchg
add
push
lret
popa
sbb
outsb
roll
orl
sbb
and
dec
loope
push
es
das
loopne
inc
xchg
add
add
out
fstpt
jb
jl
adc
and
pop
push
add
push
xchg
xor
and
cmp
loopne
nop
mov
sbb
loope
pop
dec
xchg
xor
xchg
xor
das
sarl
leave
cmp
or
pop
dec
dec
data16
add
xor
push
inc
inc
push
jecxz
sbb
test
sub
addb
add
mov
dec
adc
test
xchg
nop
mov
push
adc
sbb
pop
cli
lret
xchg
pop
add
leave
gs
adc
icebp
cmp
adc
jbe
sub
mov
jge
aas
adc
xchg
fisttpl
dec
loope
loope
and
lret
adc
mov
jo
add
push
push
pusha
pop
sbb
xor
scas
cwtl
rcl
pop
loop
or
mov
roll
push
mov
ds
cmpsl
add
je
xor
gs
fisubrs
jo
xchg
jae
push
cmp
xor
add
mov
fs
mov
inc
sbb
xchg
into
cmpsb
pop
sbb
pop
bndstx
clc
push
test
rolb
pusha
xchg
cmp
add
lds
incl
jl
jl
lods
lahf
hlt
pop
cmp
add
xor
add
daa
cmc
mov
fsubrl
rclb
mov
dec
pushf
sub
loopne
xor
xchg
push
xchg
rolb
lcall
out
sub
cmc
mov
dec
and
sub
cmp
add
push
ljmp
cmp
roll
inc
pop
cmp
pop
or
mov
fs
sbb
xchg
rcrb
add
cmp
xchg
add
push
and
jo
je
imul
add
push
shlb
xor
push
push
rcrb
jno
add
cmp
and
add
xor
xchg
or
mov
push
pop
out
cwtl
lods
rolb
add
mov
hlt
mov
mov
sub
push
inc
leave
mov
cmp
cwtl
push
loop
cmp
pextrw
or
sub
xlat
cld
add
xor
loop
dec
int3
mov
cs
xor
push
add
and
mov
add
popf
pop
mov
loopne
lret
outsl
add
inc
mov
sbb
nop
add
sbb
sbb
movsb
ds
dec
or
imul
cmp
add
xor
std
leave
enter
add
mov
icebp
lds
cmp
push
xchg
jne
pop
dec
sbb
cmp
lock
pop
or
je
mov
pop
pop
ja
dec
jl
mov
rcrl
jp
push
jb
sbb
and
lcall
icebp
add
mov
add
adc
js
sbb
pop
pop
sbb
dec
in
jmp
stos
inc
lcall
mov
pop
cmp
or
add
fwait
push
aam
mov
mov
adcl
sub
add
adc
insb
add
fisttps
adc
or
mov
nopl
jmp
or
aad
stos
rorb
sbb
mov
clc
add
xadd
and
push
mov
rclb
fimull
sarb
mov
sbb
cmp
sti
repnz
addl
xchg
insb
enter
push
lea
push
aam
loope
daa
mov
push
inc
idivb
mov
jb
shl
ret
jo
adc
sbb
bound
jl
loop
push
lds
add
push
rclb
pop
movsb
xchg
xchg
rclb
inc
outsb
clc
pusha
add
pop
or
push
lock
daa
icebp
mov
ret
or
adc
cwtl
in
mov
dec
pop
mov
test
mov
ficomps
jp
imul
push
cmpsb
mov
lea
fsubl
bound
add
arpl
sub
aad
mov
adc
push
loope
cld
lods
loope
lea
loope
mov
xor
nop
je
inc
pop
into
adc
fisttpl
pusha
push
xchg
ds
jl
xchg
sbb
mov
xchg
test
ds
rolb
push
push
clc
push
notl
mov
ss
add
jecxz
or
adc
mov
mov
jb
rolb
mov
fldenv
aad
xchg
jo
inc
fsubr
push
or
adc
cltd
adc
or
push
ret
push
iret
xor
pop
testb
cmpl
subl
loopne
repnz
loopne
mov
js
pop
and
and
pop
dec
add
xchg
pop
cmp
xchg
adc
sbb
pop
mov
inc
mov
add
pusha
inc
int3
jo
leave
imul
les
push
xor
test
sbb
push
mov
shll
ror
pop
push
sub
in
jns
pop
cmp
sub
mov
adc
push
push
pop
xor
sbb
cmp
arpl
pop
mov
xchg
or
mov
xor
inc
rolb
ds
flds
cmp
subl
xchg
loop
add
fs
or
call
mov
jmp
jno
cwtl
xor
les
mov
and
pop
mov
js
sub
sahf
lret
js
aaa
xchg
js
push
sarb
enter
lds
pushf
mov
gs
or
mov
insl
jo
push
jb
pop
inc
fs
cmp
dec
cmp
mov
mov
pop
mov
jl
mov
dec
cmp
clc
mov
xchg
rol
incl
mov
xchg
loope
mov
push
pushf
xchg
mov
fidivs
mov
and
mov
fmuls
stos
sbb
js
pop
fst
sahf
andb
add
and
or
mov
sub
lock
push
std
cmp
rol
rorb
mov
mov
test
inc
and
mov
cmpsb
inc
push
addb
adc
push
pop
rcrb
lods
popf
sbb
adc
loope
lret
js
int
int
mov
inc
mov
ds
imul
mov
sbb
or
test
je
bound
fsub
mov
faddl
or
push
cmp
dec
rol
mov
pusha
jo
and
out
push
sub
iret
ror
mov
icebp
and
and
cmc
lea
lea
adc
fs
popf
sahf
push
pushf
sbb
jp
mov
adc
leave
shr
push
inc
mov
ljmp
popa
pop
dec
bound
add
subl
xchg
stos
xor
sub
add
and
jmp
sbb
and
and
xor
inc
int3
cli
dec
mov
mov
cmp
mov
add
and
push
sbb
dec
xchg
sbb
js
lock
jbe
outsb
pop
fistpl
mov
inc
bound
push
bound
push
pop
mov
mov
push
ret
movsl
mov
and
add
adc
and
or
lds
and
push
jns
fchs
aaa
mov
add
and
mov
sahf
and
movsl
push
adcb
imul
sub
push
scas
sub
sbb
out
shlb
inc
and
cmp
inc
push
mov
out
rolb
dec
adc
cmp
shll
xchg
sub
xchg
jne
ret
lea
mov
adc
subb
sbb
jnp
adc
cltd
sbb
inc
faddl
mov
pop
mov
or
and
jbe
fdivr
and
sahf
and
inc
dec
mov
cmp
or
add
mov
movsb
sub
mov
repnz
aam
xchg
cwtl
mul
inc
popf
mov
xor
pop
add
add
iret
out
pushf
rcl
pushf
xchg
test
hlt
shlb
or
loope
mov
push
jne
inc
xor
pop
inc
cmpsb
add
jmp
aaa
andb
stos
mov
daa
cmp
xchg
lock
or
fld1
stos
leave
cmc
ret
and
lret
pop
cltd
mov
push
js
sub
mov
in
adc
jno
cmp
push
sbb
inc
outsb
cmp
add
dec
inc
push
mov
pushf
enter
shlb
jmp
push
adcl
inc
xabort
mov
cmpl
add
inc
sub
not
clc
adc
icebp
dec
rorl
lea
xchg
or
les
xor
es
clc
movsb
adc
js
sbb
outsl
pop
mov
add
add
add
sbb
adc
fimuls
int
mov
cli
outsb
nop
enter
push
cs
loopne
aam
das
xchg
inc
dec
dec
adc
fcoms
add
jns
push
imul
push
cmovs
popf
mov
or
fs
adc
cmpsl
stos
fstpt
push
les
and
adc
cmc
and
add
insb
pusha
push
push
mov
rorb
cmp
scas
out
clc
mov
fcoml
and
insb
lea
cltd
add
fidivrs
sub
sarb
pop
arpl
adc
pop
dec
add
push
imul
fiadds
pop
jbe
je
fbld
push
add
shrb
mov
loop
sbb
or
enter
xchg
ret
add
push
add
sub
test
ret
push
pop
leave
and
xor
aaa
and
loopne
cmp
imul
pop
adc
nop
push
pusha
push
xor
sbb
pop
xchg
sbb
jnp
xor
pop
push
shrb
shlb
ljmp
sub
rcrb
or
push
cli
dec
andb
push
mov
mov
push
ret
dec
subb
nop
sub
or
dec
inc
inc
mov
daa
add
push
pop
mov
and
xchg
adc
xchg
pusha
je
ror
adc
loopne
ds
mov
test
insb
rcr
rcrb
mov
insb
lods
data16
jo
mov
inc
es
and
xchg
cmp
add
aam
dec
jne
daa
add
dec
outsb
imul
and
std
mov
enter
aaa
adc
inc
dec
lea
mov
mov
adc
add
js
cwtl
nop
adc
inc
call
in
xchg
mov
pop
add
cltd
dec
test
adc
inc
cmpsb
mov
sti
sahf
add
sub
fcomps
inc
pop
push
add
or
loope
sbb
inc
push
sbb
pop
popa
pop
lods
outsl
dec
scas
icebp
sub
daa
je
xchg
push
adc
cld
xor
mov
stc
adc
loopne
orb
xchg
cmpsl
popa
outsl
ficompl
inc
std
jp
sbb
jb
fwait
adc
sub
add
ja
pop
mov
hlt
ds
addr16
add
jne
test
data16
push
mov
and
adc
and
push
cli
cmpsl
fstps
add
cli
sbb
adc
xchg
scas
popf
fadd
inc
mov
mov
mov
lods
sbb
leave
add
rorb
clc
cld
sbb
sub
inc
or
xor
leave
add
loope
aaa
mov
mov
push
fdivs
ror
enter
inc
xor
popa
cmpsb
inc
cmpsl
and
pusha
add
push
pop
mov
andb
xchg
lds
jnp
inc
mov
pop
js
aaa
ss
push
sbb
inc
mov
inc
mov
movb
sbb
test
or
xor
imul
inc
mov
test
push
inc
cmp
addb
neg
push
movsb
dec
add
pop
adcl
xchg
inc
xor
pop
mov
jno
inc
adc
inc
push
dec
inc
sbb
cmp
jl
and
and
mul
rol
mov
mov
inc
stc
out
fwait
mov
dec
sbb
adc
push
cmp
jns
inc
mov
sbb
mov
xlat
pop
add
mov
shl
mov
cmp
mov
rorb
daa
push
jmp
xor
sub
loopne
jl
cmc
rorb
lock
jno
rcr
cmp
outsb
fisubl
cld
and
inc
setp
gs
cmp
mov
mov
sbb
push
jbe
ret
push
adc
cmpb
es
or
pop
add
aad
shrb
push
fcoml
jae
pop
push
mov
sub
ror
sub
lock
test
jb
push
add
sbb
daa
ret
xchg
xchg
lock
add
jp
pop
add
adc
negl
push
repnz
add
in
sub
mov
xor
movsb
and
arpl
enter
mov
dec
mov
push
arpl
test
xchg
mov
js
stc
sbb
sub
xchg
iret
push
jp
push
out
or
mov
pop
dec
inc
into
pop
cmp
adc
sbb
scas
dec
nop
mov
shr
loope
inc
add
stos
mov
adc
js
ret
test
rcl
fldl
push
mov
pop
lods
xchg
sub
mov
adc
xchg
push
push
adc
add
mov
push
cmp
sub
mov
dec
add
addr16
and
push
adc
movsb
dec
add
call
fistl
aam
arpl
jbe
loope
int
adc
cmp
pop
out
mov
dec
mov
lret
or
add
jbe
subb
add
add
or
insb
pop
mov
xor
aaa
dec
or
leave
mov
out
or
jp
push
sbb
or
sbb
adc
or
leave
sbbl
add
cltd
jo
cmp
sub
cli
stc
adc
aaa
loopne
es
push
clc
jb
xchg
xchg
jg
jbe
in
test
lock
adc
sbb
icebp
push
lock
sbb
dec
add
loope
daa
mov
jae
sahf
inc
lds
and
pushf
xor
insl
mov
mov
hlt
xchg
orb
xchg
mov
inc
xchg
iret
pop
bound
and
lods
sbb
pop
or
pusha
dec
in
sti
lods
and
popf
fs
jo
add
mov
add
mov
adc
add
in
adc
pop
loope
mov
add
pusha
sub
sbb
xor
loop
stc
adc
sbb
xchg
dec
jbe
add
sub
mov
mov
push
rolb
or
lret
adc
push
push
cli
cmp
jecxz
jae
in
dec
mov
popa
lea
or
nop
andb
inc
js
lahf
dec
or
test
ret
add
mov
in
pop
loop
into
and
inc
push
daa
repz
xchg
nop
rcrl
pop
scas
mov
cmc
negb
sahf
test
jl
cmp
inc
push
mov
sbb
jmp
push
jo
add
add
mov
xchg
or
push
fs
mov
push
popa
dec
es
or
loopne
test
movsb
jmp
mov
xor
adc
leave
jmp
pop
dec
add
dec
xchg
out
push
ret
aam
xchg
mov
sbb
nop
add
and
stos
inc
lods
arpl
mov
dec
dec
test
push
pop
shrb
sbb
sbbb
or
sbb
sbb
push
out
pop
xchg
or
jbe
jno
adc
mov
cmp
xor
dec
pop
jbe
and
sub
out
add
jl
xchg
gs
xor
mull
or
add
add
jno
std
in
mov
pop
sbb
sub
xor
dec
add
sub
or
lret
test
adc
lods
ret
add
bound
mov
cmp
shll
mov
pusha
add
and
cmc
add
adc
mov
cmp
add
dec
movsb
adc
loopne
mov
fld
popa
jmp
daa
pop
mov
inc
add
or
mov
nop
rclb
dec
out
add
enter
mov
cmp
xchg
mov
loopne
test
mov
adc
pop
pshufw
jmp
lods
dec
cmp
movb
or
xor
divb
scas
jae
sub
lea
cmpsb
popa
xchg
ljmp
out
das
xor
inc
mov
push
pop
in
es
jb
fwait
test
add
cmp
mov
cmp
or
mov
cmp
movb
dec
add
and
sub
cmp
and
test
and
or
pop
xor
add
push
push
pop
mov
imul
xchg
or
cmc
andl
jle
jno
inc
mov
adc
test
fstps
loop
and
cmp
pop
inc
lds
mov
cmpsb
inc
or
lock
punpckldq
xchg
add
test
inc
lods
dec
xor
dec
or
sbb
xchg
cs
psubusb
pushf
add
sub
or
imul
dec
clc
test
mov
sbb
imul
mov
loope
lock
cmp
or
and
adc
dec
ljmp
cmc
imul
xchg
jo
cmp
xor
mov
dec
pop
aam
je
cmp
adc
and
loop
insb
or
loopne
lret
iret
adc
shll
pop
or
or
inc
add
xchg
bound
mov
mov
dec
push
mov
sbb
jno
mov
dec
call
mov
nop
cmp
jne
out
jne
or
adc
adc
mov
add
dec
imul
test
mov
add
shlb
cmpsb
dec
cli
push
outsb
negb
push
inc
mov
insb
sbb
sbb
xchg
and
repnz
fs
lcall
add
enter
push
add
pop
ffreep
leave
sti
cs
rcrb
fsubr
sub
lret
out
out
or
or
hlt
xchg
inc
add
inc
add
verr
mov
push
test
sub
pop
xchg
sahf
xor
enter
mov
pop
ror
and
ljmp
push
sub
push
in
ficompl
cmp
pop
sahf
and
add
sub
dec
pushf
sub
push
nop
cmpsb
or
xorl
mov
pop
rorb
pop
mov
pminub
mov
add
mov
sbb
add
mov
and
push
push
pop
xchg
xor
cmp
add
test
xchg
sbb
ret
imul
inc
out
add
mov
outsb
and
inc
into
and
jmp
lret
les
mov
sbb
mov
das
lods
and
and
sahf
imul
pop
mov
mov
test
rol
shrl
mov
dec
inc
roll
xchg
adc
loopne
inc
mov
or
dec
sbb
xorl
sbb
jp
orl
jo
inc
cmp
or
inc
imul
sbb
inc
jb
sarb
mov
or
xor
leave
push
movsl
jne
ret
and
add
xchg
adc
push
jb
pushf
mov
sub
cs
sub
sub
jmp
sbb
cmp
and
int
lcall
pop
jmp
mov
mov
jecxz
pushf
add
orl
ret
in
cmp
adc
pop
cli
incl
dec
push
and
or
mov
cli
pop
or
jl
mull
add
movsl
mov
lods
add
shlb
or
and
pop
push
ja
add
mov
add
adc
fcomps
rcr
pop
pop
test
out
xchg
js
pop
icebp
test
sub
or
data16
push
outsb
fs
ljmp
js
nop
xor
int
loope
shrl
pusha
jbe
add
dec
mov
pop
or
paddq
lret
rclb
pop
pusha
push
adc
mov
or
xor
adc
xchg
xor
add
inc
dec
pushf
sub
cmp
pop
push
mov
push
cli
mov
dec
mov
dec
sahf
add
cmp
andb
xchg
adc
sub
movsb
test
add
mov
xchg
sub
pusha
xchg
mov
bound
mov
sub
lock
pop
sbb
xchg
sahf
push
iret
sub
push
jne
fmul
cmp
cmc
je
xchg
sbb
cmp
rol
mov
sbb
pushf
mov
jns
stos
gs
pop
push
rcr
ret
jle
mov
push
ljmp
psubusw
pop
loop
inc
push
ret
sbb
cs
adc
iret
insw
inc
push
mov
inc
sar
cmp
sahf
jns,pn
lods
and
ret
jmp
ret
or
adc
movsb
test
insl
add
call
sub
mov
mov
or
dec
add
add
add
daa
pusha
xor
xor
mov
icebp
xchg
lods
xchg
sahf
mov
mov
es
mov
pop
dec
mov
popf
out
sbb
imul
stos
xor
xor
mov
test
pop
and
movsb
pop
adcb
enter
and
mov
adc
xchg
adcb
pop
push
lods
mov
push
xchg
jne
sbb
jle
cmp
hlt
and
notl
pop
push
daa
mov
mov
das
and
mov
adc
add
jb
pop
adc
and
mov
add
pop
add
xor
adc
jne
push
lods
hlt
call
push
mov
repnz
push
cmp
xor
jae
loopne
or
cmp
pusha
movlps
mov
adc
xor
rcrl
outsl
sbb
inc
add
fisubrl
data16
lods
insl
loopne
lds
mov
xlat
push
mov
jne
mov
jb
mov
push
movsl
roll
rolb
sarb
and
mov
mov
xor
jmp
cmc
or
xchg
sub
outsl
mov
imul
nop
pushf
xchg
and
dec
shrb
mov
je
push
repz
mov
mov
loopne
adc
push
xchg
sbb
fmull
cld
pushf
push
es
mov
add
xor
pop
into
arpl
push
pop
or
push
inc
add
or
add
xor
addb
inc
lods
add
mov
add
add
or
jo
clc
xor
nop
jp
sbb
or
push
pop
pusha
jmp
sbb
cwtl
mov
test
out
shlb
push
addb
xchg
lods
dec
pusha
int
lods
nop
add
cmpsb
out
clc
dec
push
sub
pop
sbb
ret
push
mov
jae
addl
sbb
jl
adc
jp
pusha
push
cmp
lock
pop
loop
and
je
icebp
rorb
xchg
sub
jae
out
ljmp
dec
and
cmp
push
xchg
mov
inc
js
pop
test
xor
sbb
pop
imul
xchg
or
or
sub
test
xor
repnz
iret
dec
popa
push
mov
scas
adc
adc
lds
add
divb
test
pop
adc
ss
pop
roll
in
mov
add
push
inc
xor
lock
or
push
es
ret
js
addb
lret
jb
add
adc
enter
jp
mov
xor
lods
lods
in
add
std
adc
clc
fdivl
aad
mov
push
mov
adc
in
or
xchg
pusha
lea
or
adc
cmp
pusha
inc
cltd
add
ljmp
sbb
sub
sub
pop
cmp
mov
xor
push
push
sub
xcrypt-ecb
cmpsl
dec
and
ja
clc
testb
xchg
push
lods
loopne
loope
pop
sbb
shlb
je
push
push
mov
push
or
sub
pop
fadd
sahf
jmp
pop
add
inc
imul
repnz
add
or
cmp
cs
pusha
push
or
test
int
inc
mov
mov
loopne
stos
xchg
mov
leave
push
mov
push
loopne
sbb
jp
jl
add
adc
rolb
mul
and
gs
clc
loope
clc
cmp
or
sbb
xlat
jl
int3
pop
xchg
ja
or
add
jne
xor
imul
lcall
leave
push
ret
ljmp
mov
sar
cmp
and
mov
or
mov
sub
inc
and
inc
shrb
test
rol
pop
pop
imull
sbb
fistl
pop
lret
xchg
andb
inc
push
or
mov
arpl
sub
lock
cmp
sbb
adc
or
jge
push
push
xor
nop
sahf
lods
movb
repnz
call
punpckhbw
add
adc
ret
bound
add
add
sbb
sahf
testb
and
bound
rolb
mov
hlt
ret
out
mov
cmc
cmp
mov
mov
and
adc
loop
sahf
rolb
jae
rorb
cmp
push
insb
sbb
enter
lea
inc
repnz
xchg
ds
ret
flds
mov
fmuls
cmp
jmp
daa
sub
xor
add
lret
scas
add
mov
sub
lret
inc
pop
cs
mov
add
push
jle
jne
icebp
movsb
sbb
scas
mov
mov
mov
repnz
out
lret
loopne
leave
jne
pop
fldpi
fsubrs
setp
xchg
sub
out
push
or
call
mov
lahf
loopne
loope
jp
inc
inc
ss
out
repnz
jp
fs
xor
mov
push
dec
sub
mov
dec
mov
sahf
addr16
sub
scas
mov
mov
out
sbb
scas
mov
test
mov
mul
lret
mov
mov
inc
xor
sub
popa
jg
and
or
mov
repnz
repz
aad
cmpsl
jg
dec
jo
loopne
lret
seto
inc
das
xor
je
inc
fmull
lret
mov
push
mov
int3
sub
adc
or
xchg
arpl
jb
push
pop
jns
mov
ds
fistps
mov
xchg
mov
pop
push
push
repz
jae
or
sub
adc
push
out
ret
xor
orb
jne
repnz
add
in
jg
popa
lds
inc
lods
repnz
lcall
sbb
lret
mov
cli
inc
aaa
out
add
and
das
scas
mov
call
cmp
xchg
test
orl
cmc
push
mov
fptan
lret
imul
das
xor
lret
mov
ret
xor
out
inc
fwait
jge
scas
mov
sarl
iret
insl
inc
push
cmc
jo
sub
xchg
ficomps
sbbb
mov
cs
push
int3
scas
adcb
lahf
dec
xchg
cmp
dec
mov
mov
aaa
and
ja
shlb
xchg
mov
scas
call
sahf
jo
jp
flds
cmp
pop
inc
insl
repnz
loopne
bound
mov
jnp
data16
out
ficomps
dec
setb
out
sarl
in
push
iret
es
pop
pusha
jb
xchg
in
mov
in
push
pop
cli
xor
xchg
xchg
pop
mov
std
jb
sbb
dec
ljmp
mov
push
fdivrl
xchg
fcmovnb
xchg
or
adc
shr
repnz
out
aad
lock
movsl
sub
lret
mov
fidivs
jne
sbb
mov
scas
mov
ja
xor
mov
sarb
ljmp
lods
fidivl
push
cmpb
in
cmpl
lret
testl
xlat
or
mov
out
out
lret
repnz
jp
in
popa
test
jecxz
sub
ret
jb
scas
clc
dec
dec
out
mov
jbe
or
loop
dec
scas
mov
outsb
jg
repnz
or
xchg
pop
data16
xor
sub
mov
mov
outsb
adc
imul
mov
pop
movsl
lahf
je
addr16
int3
out
mov
mov
jge
push
aad
sbb
sbb
lret
scas
pop
rcrb
pop
and
push
jge
nop
out
jle
repnz
adc
pop
jnp
pop
fbstp
sub
in
sub
sbb
sbb
dec
sub
xchg
mov
int3
pop
mov
scas
mov
sbb
jp
lret
scas
mov
sub
test
lcall
xchg
leave
push
jbe
lds
lret
fwait
mov
fiaddl
stc
or
out
sub
xrstors
lock
mov
or
xorb
scas
mov
loopne
mov
adc
call
xchg
sub
push
mov
scas
nop
out
and
sub
stos
movsl
dec
push
xor
xchg
out
mov
xor
iret
lods
enter
pop
lret
lret
lret
cli
jmp
xchg
xchg
mov
xor
repnz
adc
xlat
and
lret
mov
cmp
xchg
sub
pop
test
in
shll
inc
rcrb
mov
sbb
push
data16
es
es
out
jg
pop
and
push
in
fists
imul
je
jle
repnz
andb
add
dec
sbb
in
mov
sub
mov
sar
mov
scas
mov
lret
inc
outsb
cltd
loope
jnp
cmpsb
push
pop
jns
cmp
mov
push
sbb
ss
jns
xchg
repz
mov
in
lahf
xor
push
jg
arpl
jl
mov
inc
mov
mov
aas
sbb
ja
pop
jns
jnp
push
sub
rorl
add
stos
out
lods
pop
jns
xchg
test
mov
pop
out
push
lahf
dec
push
mov
xchg
push
sbb
out
dec
or
fdivrp
mov
cmp
sub
jo
sub
mov
adcl
fdivrl
mov
jle
xor
push
jo
pop
mov
and
int
sub
sub
popf
push
orb
push
cmp
mov
scas
aam
es
int3
movsb
mov
jg
lret
cmp
sub
push
loope
icebp
add
mov
lcall
out
add
mov
div
lret
dec
sub
mov
sub
imul
call
test
mov
cli
mov
cwtl
inc
and
repnz
jnp
hlt
bts
les
lret
jle
jp
sub
mov
scas
mov
movb
dec
pop
imul
mov
sub
cmp
jns
mov
add
push
mov
repnz
cmc
xor
arpl
jnp
pushf
repnz
loopne
mov
ds
pop
in
or
psrld
mov
and
xlat
lea
mov
lret
aas
in
or
and
xor
adc
sub
ja
cmc
pop
pop
inc
pop
push
repnz
mov
aam
sub
in
push
repnz
xchg
mov
xchg
pop
sub
sbbb
sub
xchg
sbb
in
fwait
cmc
jg
ret
sub
mov
dec
xor
fidivrs
xchg
push
outsl
cmpsb
fistps
jl
call
movsb
xlat
fisubrs
push
inc
dec
iret
in
push
pop
cld
ficoms
mov
pop
pop
jns
ret
mov
pop
lea
iret
push
and
jl
in
dec
cmpsb
shlb
lods
out
ret
repz
test
in
fucomi
cli
or
add
push
aaa
fisttpl
adc
ret
sahf
add
push
popa
sbb
gs
ss
ja
jle
lret
das
cli
jo
mov
sbb
mov
lret
mov
inc
fs
lods
mov
dec
jb
scas
mov
cmp
pushf
add
aam
mov
and
mov
jo
lret
and
scas
aad
pushf
cmpsb
dec
xor
sub
int
mov
test
sub
inc
add
adc
jle
repnz
testb
adc
pop
scas
repnz
lcall
aad
aaa
nop
std
lea
lret
mov
pop
xorb
lods
jle
repnz
adc
je
jg
push
pop
jns
mov
push
das
xor
xlat
pop
jns
xchg
out
cmc
push
cltd
sub
dec
dec
loopne
mov
in
sub
repnz
std
in
push
pop
popf
xchg
insb
jne
ret
or
sub
push
pop
jns
push
mov
mov
das
sbb
scas
mov
mov
push
leave
mov
mov
mov
lock
mov
push
xor
out
pop
add
sub
scas
mov
cmp
fs
neg
in
scas
mov
xlat
mov
cmp
clc
and
mov
and
jmp
mov
repnz
andl
int3
sub
das
scas
mov
test
dec
xor
jb
aas
in
repnz
ljmp
mov
imul
fstpl
call
sbb
ljmp
imul
inc
dec
scas
xchg
out
lcall
push
pop
xchg
loop
xor
push
scas
cld
jb
jno
popf
js
sbb
add
or
fdivrp
repnz
mov
sahf
nop
in
in
cmp
sub
sub
mov
or
jmp
repz
repnz
inc
cmp
shll
push
push
cmpsl
cmp
repnz
pushf
add
in
pop
insb
mov
aas
imul
test
fwait
lods
out
mov
repnz
stc
jno
ja
add
xor
je
pop
jns
pop
je
cmp
mov
jmp
int3
cmp
xchg
push
into
rolb
ret
cwtd
pushf
sbb
insl
outsl
testl
inc
sarb
xchg
out
fldcw
ds
pop
jns
xchg
cmp
cmp
and
cwtl
in
cmpb
push
xchg
pop
std
jp
pushf
arpl
cmc
push
pop
add
in
jmp
adc
inc
push
pop
jns
and
icebp
outsb
or
cli
pop
pop
jns
xchg
push
in
dec
pop
dec
pop
in
inc
pop
push
mov
jns
xchg
push
jge
dec
xlat
push
push
jns
iret
aaa
and
xchg
push
pop
push
daa
pop
cmp
mov
xchg
push
pop
jns
iret
sub
popa
cmp
xchg
cli
or
pop
jns
jge
fwait
test
cs
fs
pop
jns
xchg
cmpsb
test
push
cmp
imul
cld
add
pop
aas
insl
cltd
pop
xchg
pusha
push
inc
pop
and
aas
jg
sbb
jno
sbb
jae
sbb
repz
sub
sub
testl
hlt
popf
addb
call
iret
out
jns
lret
inc
jb
xlat
jge
scas
xor
stos
fstpl
push
xchg
ja
pop
add
out
adc
xchg
dec
loop
sub
pop
jns
fdivrl
xchg
ret
orb
leave
es
inc
jne
pop
in
mov
jg
mov
shrb
jge
push
pop
jns
dec
push
push
fildll
mov
pushf
push
pop
jns
out
iret
fnsave
ljmp
pop
addr16
jns
in
mov
jge
add
jns
enter
pop
push
lds
push
xor
jae
xchg
push
pop
jns
ja
pop
mov
jns
scas
xchg
push
ret
rclb
dec
push
sbb
xchg
gs
mov
push
mov
mov
jns
xchg
push
mov
lock
push
jg
cmc
in
push
pop
push
cli
insl
test
xchg
push
pop
jns
mov
cmp
mov
jns
and
push
inc
pop
pop
adc
pop
pop
mov
outsl
adc
fidivrs
in
add
push
int
dec
cmpsb
dec
pop
mov
in
push
xacquire
sub
and
ror
push
pop
cmp
xor
leave
jne
cmp
push
pop
jns
shlb
pop
jno
fwait
xchg
dec
sub
jae
aas
fs
push
jle
mov
pop
pop
pop
frndint
stc
repz
jle
out
sbb
dec
cmp
leave
hlt
addr16
mov
mov
test
in
lahf
cld
imul
icebp
sub
xor
aad
in
push
ja
dec
call
popa
adc
push
pop
mov
push
sti
leave
sub
out
arpl
aas
adc
adc
movsb
pop
test
in
jp
fstl
and
pop
inc
pop
jns
xchg
sbb
mov
enter
xchg
push
ret
stos
imul
in
push
pop
push
in
frstor
cld
pop
inc
xor
jb
push
pop
jns
mov
test
lea
sub
jns
iret
cmp
fistps
jecxz
add
fstl
outsl
mov
ret
in
push
pop
int3
xor
arpl
pop
test
movsb
cwtl
test
or
mov
lret
push
fs
pop
jns
mov
jmp
ret
xchg
test
and
jns
xchg
dec
addr16
xor
rcl
pop
jns
xchg
push
jmp
out
mov
mov
push
pop
loopne
mov
ss
push
fsubl
pop
jge
xorb
push
popa
cmpxchg
mov
repz
cli
xor
push
add
push
shll
mov
jl
push
jecxz
jmp
fidivrs
push
push
inc
jnp
daa
out
lret
fstl
inc
mov
jle
andl
push
jle
pop
fistps
pop
jns
fwait
daa
addr16
jg
push
pop
jns
mov
rcrb
shlb
into
push
sbb
xchg
or
popf
dec
and
iret
push
and
das
scas
mov
dec
cmpsl
mov
fsubrl
lret
xchg
pop
mov
push
add
or
push
pop
jns
inc
fstl
inc
lods
je
cli
les
notb
fisttps
mov
fwait
lea
jl
stos
inc
test
mov
jmp
dec
imul
scas
mov
push
and
fcomps
xchg
push
pop
jns
lds
mov
ret
jg
jns
xlat
lret
mov
inc
outsl
andb
pop
inc
jmp
or
inc
lea
pop
jns
jne
jae
les
popa
outsb
push
pop
jns
jp
jp
pop
gs
pop
xchg
mov
sahf
ljmp
cmp
mov
in
pop
pushf
jbe
andb
ds
popf
lods
leave
in
push
mov
inc
mov
pop
adc
repnz
jg
xchg
mov
mov
cmp
mov
out
adc
mov
pop
repnz
popa
jns
mov
mov
dec
ss
jge
aaa
inc
push
shr
iret
pushf
sub
sbb
xchg
pushf
jne
rcrb
lods
andl
add
sub
loop
fs
lea
mov
mov
ja
add
inc
mov
mov
jbe
jae
pop
dec
out
xchg
sub
pop
cs
fcmove
xor
mov
loopne
xchg
jle
or
jbe
mov
push
inc
mov
pop
cmc
jp
mov
xchg
sub
push
push
test
in
push
pop
add
add
xchg
into
push
pop
pop
jns
xchg
lea
inc
dec
shrb
jp
aas
jg
cld
sahf
xor
cmp
aam
mov
out
lahf
iret
in
std
jb
jb
ss
sarb
faddl
mov
fs
cltd
cmp
mov
lret
aas
mov
jo
int3
add
subl
inc
and
pop
fidivs
fcmove
cmp
arpl
repnz
fwait
push
sub
sub
mov
scas
pop
out
psubusb
loop
rorb
mov
inc
push
pop
mov
and
push
into
loope
inc
sbb
test
sub
xchg
shll
iret
mov
clc
mov
popf
ljmp
and
ficoms
sub
outsl
mov
push
mov
imul
call
push
lock
add
stc
repz
jno
xchg
imul
push
and
or
xor
xchg
dec
cli
adc
aas
adc
pusha
les
fnstsw
scas
mov
mov
into
and
adc
repnz
cmovge
decb
pop
or
xchg
das
scas
mov
subl
jo
jb
mov
xchg
data16
jl
stc
lcall
mov
xchg
stos
inc
sbb
iret
scas
or
mov
loop
ds
pop
fcomip
push
cmpsl
in
call
cmp
fadd
setne
jns
pop
adc
shr
dec
push
inc
mov
in
xor
arpl
jns
xchg
ja
pop
es
cmpsb
jg
xor
xchg
push
pop
mov
pop
movsl
stos
ljmp
test
push
pop
jns
movsl
mov
test
add
fs
pop
jns
cmp
movsb
insb
ds
push
in
adc
pop
jns
xchg
test
adc
xor
or
xchg
push
pop
xchg
jbe
repz
jp
and
in
push
pop
lea
stos
push
mov
lret
test
push
fdivrp
jb
pop
es
inc
out
aas
add
dec
test
xor
xor
adc
jge
pop
jns
xchg
lock
call
add
les
lahf
fwait
pusha
das
dec
inc
and
push
pop
subb
mov
mov
call
pop
jns
das
adc
call
cs
fstl
dec
dec
mov
jl
mov
jle
and
das
out
pop
jecxz
sahf
jns
xchg
ja
cmp
add
adc
in
push
pop
popf
and
pop
ds
test
fxch
fildl
xchg
push
pop
jns
jge
add
dec
mov
inc
sahf
mov
repz
rolb
pop
test
lret
cld
stc
in
js
clc
shll
pop
mov
aas
movsl
inc
mov
outsl
loopne
mov
sbb
inc
aaa
shrb
repnz
lahf
pop
cld
and
cmpsb
inc
jns
mov
pop
jns
arpl
mov
add
and
dec
daa
push
ja,pn
mov
pop
push
scas
mov
mov
dec
cmp
cmp
ret
sub
sbb
mov
add
adc
test
jg
mov
in
pop
or
in
mov
mov
pop
jno
in
push
lcall
loope
dec
pop
jae
xchg
push
pop
jl
jl
stc
inc
pop
cmp
je
repz
jl
mov
sub
sub
xchg
jns
fisubrl
xchg
sub
inc
fbstp
in
and
pop
lret
outsl
out
sub
ljmp
dec
ret
mov
movq
dec
mov
stc
pop
lock
data16
rorb
jle
adc
call
xlat
mov
aad
xchg
bound
mov
inc
in
pop
je
scas
jnp
mov
scas
movsb
ficoms
iret
and
fisubrs
sub
xor
inc
mov
loop
mov
ficompl
lods
shrb
sub
jle
aam
mov
and
scas
xor
xor
or
dec
xchg
in
mov
adc
inc
adc
std
jmp
sub
mov
es
lcall
out
sub
call
add
xchg
in
jle
repnz
dec
mov
leave
xor
sbb
mov
or
xchg
stc
and
or
scas
mov
pop
and
mul
push
mov
leave
fldl
jmp
sbb
and
dec
repnz
lahf
mov
popa
call
push
lret
mov
shll
mul
mov
mov
lock
pop
nop
jle
loopne
loopne
scas
mov
sub
lret
cltd
stc
pushf
call
mov
add
xchg
mov
mov
repnz
test
mov
lods
mov
lahf
pop
jle
inc
test
in
test
pop
jns
dec
ds
fincstp
popa
add
xacquire
in
test
loopne
insb
setns
and
jns
orl
cmp
push
mov
lahf
aas
jg
xor
orb
aam
out
into
pop
add
lret
out
out
lcall
push
fisubrs
jo
jnp
in
push
scas
cmp
lods
jg
insl
mov
fs
nop
pop
mov
lahf
aas
jg
cmp
and
sub
mov
repnz
mov
loopne
loop
movsb
jg
out
jle
sar
add
jl
adc
aaa
mov
mov
sub
sub
jmp
repz
sbb
lret
mov
mov
fisubrs
out
out
arpl
jg
lret
imul
mov
lret
jmp
mov
lret
outsb
xchg
dec
fs
mov
in
rolb
sub
dec
in
mov
imul
mov
add
adc
lods
mov
jne
jb
popf
dec
mov
scas
mov
fistps
scas
cmpsl
les
push
lds
lahf
mov
mov
addr16
das
aas
xor
jl
push
or
add
inc
push
xor
lods
sahf
push
mov
repnz
adc
addr16
inc
mov
lret
mov
lahf
outsb
jp
inc
pop
sub
sub
jbe
pop
cmp
xor
jg
sub
lret
adc
cld
or
push
sbb
loope
adc
std
pop
shlb
sbb
xchg
push
xor
test
inc
cmp
fistpll
jg
cld
push
std
push
add
mov
aam
cmpb
jl
cmp
aas
mov
icebp
mov
push
je
adcb
out
push
xchg
or
mov
jp
mov
pop
lret
mov
fisubrs
dec
cmp
scas
mov
cmp
frstor
pop
scas
mov
and
out
jmp
dec
jns
aas
adcl
jge
mov
aam
push
pop
icebp
push
daa
inc
mov
mov
sub
into
incl
jg
lcall
stc
lret
in
push
arpl
mov
out
rorb
inc
rol
fildll
imul
repz
cs
xchg
mov
pop
daa
pop
mov
jg
cld
mov
xlat
sub
test
pop
jmp
fmuls
pop
mulb
iret
lahf
aas
fsubrp
mov
mov
cmp
sarl
repnz
in
xchg
ljmp
cmp
add
mov
fmul
cmp
fdivl
out
push
iret
lahf
aas
and
mov
xor
jmp
repz
lds
ja
inc
scas
ficoml
xchg
ja
jl
cmp
cmp
xor
mul
cmp
jae
xor
pop
cmp
or
xchg
push
cli
lahf
je
or
mov
mov
xchg
push
pop
notl
call
test
sub
scas
mov
ja
insb
movsl
mov
pop
pushf
cld
add
mov
dec
sti
into
cld
stc
repz
daa
push
mov
movsl
mov
in
ret
xchg
lahf
aas
jg
xchg
xchg
imul
fcoml
lret
pop
jne
mov
jmp
lret
push
fsubl
jbe
add
sub
pushf
jecxz
and
mov
into
xlat
test
jg
es
lods
pop
lods
clc
stos
cmp
repz
les
fisubs
in
outsl
adc
mov
lcall
mulb
mov
or
int3
pop
ja
inc
mov
push
mov
fwait
jno
scas
repz
mov
adc
mov
idivb
pop
jle
outsl
iret
imul
jg
cld
stc
dec
fdivrl
and
xchg
or
cmp
cmp
mov
mov
mov
mov
out
jle
repnz
or
push
pop
test
jmp
repnz
jl
repnz
sub
or
sbb
lret
in
lods
iret
das
add
lds
jl
arpl
sub
cmp
inc
mov
push
mov
mov
jmp
testb
mov
jle
repnz
mov
in
cwtl
mov
inc
mov
dec
repnz
out
pop
into
fwait
in
dec
in
loop
shlb
mov
popf
inc
xor
cmc
outsl
scas
mov
cwtl
bound
xchg
or
jns
inc
outsl
or
lret
and
dec
movsb
cmp
fistps
mov
jo
popa
push
mov
jo
ret
xchg
sub
add
scas
mov
dec
lods
jg
lods
inc
fldenv
push
pushf
adc
repnz
decl
mov
cld
add
mov
mov
adc
inc
push
iret
lahf
aas
or
add
adc
mov
repnz
shlb
jno
inc
cld
repnz
clc
cwtl
in
jp
xchg
pop
jle
movsb
insl
sbb
mov
iret
lahf
aas
lcall
int
inc
mov
arpl
mov
cmp
hlt
sbb
aam
xor
sub
pop
jo
push
loopne
loopne
and
scas
mov
xor
lods
push
jp
jb
jg
mov
add
xor
das
ja
xchg
and
ljmp
mov
ret
mov
pop
scas
sar
add
call
xchg
cltd
jns
shlb
adc
xchg
fbld
or
cmp
mov
sub
cmp
lock
push
insb
das
pop
loopne
pop
insb
aas
add
mov
add
insb
idivl
jle
pop
out
gs
xchg
push
fimuls
push
lcall
ret
sub
das
ret
push
mov
mov
imul
test
scas
mov
cmc
or
dec
inc
push
int
mov
mov
mov
insl
push
mov
pop
dec
pop
sub
xchg
mov
out
das
icebp
bnd
dec
pop
fbstp
pop
scas
mov
das
mov
mov
push
and
push
pop
jns
jmp
lahf
cld
sbb
ljmp
pop
jns
xchg
cmp
xchg
pushf
push
movsb
les
add
xchg
push
push
sti
out
out
mov
adc
xchg
push
pop
fstpt
outsb
adc
lods
mov
inc
xlat
jne
ds
aam
fbld
sbb
adc
dec
pop
fimuls
pop
mov
and
inc
push
mov
jg
add
aas
fwait
arpl
push
jae
inc
lret
outsb
sbb
nop
iret
fldl
push
das
dec
popa
mov
and
repz
mov
push
xor
cld
stc
or
outsb
cmpsl
jle
sub
call
out
lahf
aas
lock
ljmp
stc
repz
push
out
lcall
sti
cwtl
xchg
lock
jg
pop
dec
sub
mov
sbb
adc
in
xchg
lahf
int3
outsb
mov
fisubs
leave
lret
jb
adc
mov
jg
or
fsubl
in
aad
ret
in
and
push
aam
and
mov
inc
jl
cmp
push
or
push
mov
jns
xchg
sbb
or
push
std
push
sub
jns
xchg
push
addr16
cmp
xchg
pop
loope
ds
xchg
push
pop
lcall
lds
call
lock
icebp
imul
push
mov
fcoms
fadds
clc
or
sbb
stc
repz
out
mov
clc
push
mov
dec
movsl
mov
repnz
xor
dec
mov
scas
jo
xchg
loopne
orb
xor
mul
sub
adc
ss
dec
ss
in
push
pop
dec
je
mov
add
add
or
and
cmp
jns
cltd
lret
inc
mov
cli
xor
push
arpl
push
mov
out
ss
fstps
pop
cmp
dec
sbbl
fcoml
fmul
scas
pop
repz
lahf
scas
sub
cmp
mov
jl
cld
stc
sarb
mov
add
mov
test
jg
cld
into
add
aad
xchg
andb
mov
fiaddl
jg
in
lahf
test
subb
xchg
push
ficomps
jno
or
pop
jns
add
xor
pusha
cwtl
mov
lahf
loopne
cmp
cld
jb
xor
aaa
jmp
inc
rolb
fstpt
shll
xor
iret
lahf
jg
or
sarb
shlb
cld
aad
push
dec
pxor
cld
stc
xchg
mov
xor
test
daa
pop
jg,pt
in
aam
mov
clc
pop
push
pop
fdivrp
sub
and
das
xchg
test
sub
adc
je
jmp
into
jb
repnz
loop
xchg
dec
or
lret
lock
adc
aad
cmp
jno
repnz
test
cmc
iret
or
pop
jns
subl
iret
lahf
pop
jle
xor
aad
dec
cmp
jnp
xrelease
inc
mov
push
outsb
test
push
das
mov
scas
mov
sahf
add
cmp
repz
loope
test
and
iret
popf
gs
pop
mov
lods
leave
mov
lea
mov
mul
pop
mov
sub
mov
in
cwtl
out
adc
sahf
mov
scas
mov
mov
pop
sub
sub
aaa
dec
push
fsubrp
xchg
aaa
push
iret
shr
loope
xor
sub
enter
test
jne
iret
inc
jle
insb
inc
decl
adc
sub
imul
add
lea
dec
mov
ljmp
push
sub
mov
out
lahf
pop
pop
mov
mov
cld
pop
dec
das
xlat
cld
stc
repz
pop
cs
dec
fcmove
xor
imul
adc
dec
inc
xchg
mov
jns
xchg
ja
sahf
jnp
mov
int3
bound
jg
mov
iret
mov
mov
pop
sbb
sub
sub
fwait
into
cld
stc
repz
jno
movsl
cmp
jne
pop
mov
cmc
sub
movsl
pop
jg,pt
outsl
ljmp
outsb
in
cltd
lods
xchg
push
inc
loop
push
sub
fsub
lret
repz
jb
sub
lods
loope
lret
pop
ret
test
push
pushf
aas
push
pop
jae
inc
jecxz
or
mov
or
cltd
mov
and
add
stc
movb
sbb
shll
push
dec
repnz
mov
dec
adc
loope
lahf
pop
stos
loope
or
push
inc
add
in
iret
jns
sub
mov
inc
scas
out
hlt
rcrb
mov
lock
jmp
addr16
lret
shl
pusha
fmulp
jmp
add
jno
test
mov
ficoms
mov
arpl
lcall
testb
bswap
shll
stos
cmp
adc
daa
jecxz
sub
fwait
movsl
test
pop
lock
pop
daa
stc
test
out
add
jmp
push
dec
pop
imul
lock
scas
mov
dec
mov
push
lret
pop
sub
orb
mov
scas
mov
cs
mov
sbb
das
cmp
repnz
lods
aad
cmp
jbe
fidivrl
fsub
aam
push
xchg
or
scas
and
dec
cltd
mov
out
mov
dec
pushf
xchg
xchg
mov
lret
xchg
ja
dec
fidivrs
dec
fisubrl
push
pop
jns
push
pushf
addr16
xchg
inc
mov
arpl
cmpsb
inc
pop
jns
xchg
jnp
adc
into
pop
stc
mov
fcmovnb
pop
mov
jae
shlb
xor
lret
das
stc
pop
sbb
cmpsl
out
mov
cld
or
inc
fldcw
adc
jae
iret
lahf
aas
jg
fs
lahf
mov
push
jno
repnz
and
push
stos
adc
stc
adc
out
lods
lahf
std
push
test
out
lret
jg
mov
outsb
iret
pop
adc
scas
mov
cmpsl
in
push
add
sub
adc
push
or
sub
or
lret
ficoms
sbb
jmp
lahf
mov
cmc
add
mov
cmp
hlt
jo
dec
repnz
xchg
ljmp
sub
ret
scas
mov
sub
pop
pop
adc
sub
adc
cli
and
aas
push
cmc
mov
adc
mov
xor
lret
add
ret
out
sbbb
cld
sahf
xor
sub
sub
mov
mov
push
icebp
fildl
sub
repnz
das
dec
movb
or
jecxz
repnz
rorb
pop
lods
and
mov
mov
iret
mov
jg
test
call
lcall
jb
iret
lahf
aas
pop
dec
sbb
sub
jb
add
pop
inc
jl
scas
jg
cld
stc
ss
add
inc
adc
rcrl
xor
aas
jle
jle
fcomip
add
mov
cld
stc
rep
xor
das
pop
jns
adc
mov
pusha
insb
dec
in
xchg
ja
jle
pause
or
pop
dec
mov
pop
jns
in
arpl
enter
add
ss
aaa
lahf
jg
pop
cmp
out
pushf
mov
repz
idiv
shr
je
push
dec
push
lock
out
clc
push
xlat
insb
ds
cmp
negb
cld
stc
dec
xor
ljmp
lretw
int
inc
sahf
aas
outsl
icebp
push
loop
dec
jge
gs
lahf
aas
mov
jnp
inc
push
mov
mov
pushf
mov
lods
mov
jo
in
cmp
xchg
fstps
sbb
ds
dec
icebp
cld
daa
xchg
outsl
stc
repz
push
push
xchg
xorb
fs
mov
inc
mov
mov
push
ret
inc
pop
jbe
push
in
repnz
imul
nop
wbinvd
or
fistpll
lret
mov
mov
mov
mov
dec
daa
dec
fucomp
jl
hlt
xor
jno
mov
test
add
pop
xlat
test
imul
adc
lock
or
ret
sub
dec
jle
fisubrl
sub
sbb
mov
in
or
in
dec
arpl
or
lahf
aas
jg
mov
mov
inc
mov
insl
sbb
repz
jnp
aas
jmp
xchg
imull
mov
addr16
insb
cwtl
push
ss
lahf
jg
sahf
jmp
mov
repnz
loopne
sbb
push
scas
cmp
adc
ja
mov
aas
ss
in
push
fdivrs
jg
call
clc
nop
lds
mov
scas
sbb
xchg
push
shrb
and
incl
pop
xor
ljmp
push
pop
jns
lods
les
sub
addr16
jge
push
pop
jns
xchg
jnp
cmp
mov
shrb
gs
and
mov
in
ljmp
xchg
ja
ja
pop
xor
pop
jns
inc
push
ficoml
movb
es
lret
ja
insb
cmp
xchg
lahf
loopne
nop
or
sti
cmp
stc
leave
push
fwait
sbb
jle
or
inc
ja
jle
out
mov
xchg
sub
lret
xchg
cmpsl
orps
std
jb
xchg
mov
imul
dec
or
xchg
ja
fisubrs
jne
ud0
xchg
jns
push
pop
jns
push
pop
sub
mov
jns
fidivrl
in
dec
fists
jle
xchg
pop
stc
divb
sbb
fidivrs
mov
lret
inc
lock
icebp
sbb
pop
xchg
push
pop
jns
mov
or
or
mov
push
mov
ljmp
popa
aas
pop
or
insb
movsb
pop
jle
out
xchg
addb
mov
fisubrs
dec
jp
cld
stc
add
insb
sbb
pushf
bound
add
cli
xchg
fisttps
mov
in
lock
addr16
cmp
arpl
in
decb
outsl
cmp
mov
in
push
flds
imul
scas
cmpsl
insl
push
fdivs
out
jo
cld
sbb
enter
inc
lcall
sub
jle
xor
fbstp
fistpl
repnz
push
mov
daa
xchg
dec
push
loope
out
xchg
sub
add
rcrb
out
cld
cld
inc
clc
xchg
dec
inc
movsb
push
push
mov
dec
sub
mov
out
pop
mov
gs
push
icebp
test
pop
cmp
std
clc
mov
mov
jns
fstl
jg
ficoml
cmc
outsl
lahf
mov
push
icebp
mov
sbb
out
xchg
push
fidivrs
notl
pop
jp
inc
shrl
xor
insl
jl
in
or
lock
mov
and
decb
push
pop
pop
pop
mov
pop
std
jb
sbb
mov
dec
fsubrs
lahf
pop
inc
adc
cmpsl
mov
repz
sub
add
mov
jg
cld
inc
add
jecxz
mov
int3
sbb
xchg
iret
sub
enter
scas
xchg
sar
out
mov
mov
push
sub
das
cs
test
xchg
push
pop
adc
cmc
cwtl
push
mov
rcr
jb
mov
sar
mov
cld
add
xchg
movsb
popa
sti
and
add
mov
es
sqrtps
dec
pushf
stc
repz
iret
and
pop
dec
mov
aas
shrb
jg
cld
mov
and
xchg
sbb
sbb
cmc
in
ja
lcall
jb
mov
repz
das
pop
stc
pop
test
add
mov
cld
stc
sub
xchg
in
cmpsl
clc
in
push
xor
jmp
sub
enter
hlt
push
cltd
jle
sub
xor
mov
push
or
push
aas
fwait
shrl
jge
loope
add
inc
ror
stc
decb
call
mov
adc
in
lret
ret
and
jg
add
fbld
jmp
cwtl
or
lahf
aas
add
cmp
mov
repz
sbb
pop
imul
jbe
iret
lahf
aas
jg
xchg
dec
adc
cltd
loope
pop
xlat
push
repz
bnd
sub
sub
pop
gs
mov
push
push
rolb
mov
repz
mov
hlt
cld
test
pushf
popa
xlat
ror
pop
ss
dec
in
add
outsb
pop
mov
lea
and
mov
push
into
cli
add
xchg
mov
scas
mov
push
sbb
adc
add
popf
aad
sub
xadd
iret
pop
xor
iret
lahf
out
xchg
mov
xor
js
iret
xchg
and
adc
out
jecxz
insl
leave
lahf
aas
jg
push
aam
cld
cwtl
push
ds
xchg
mov
out
lret
iret
sub
test
mov
lret
mov
cmp
and
xor
xor
shrb
cmp
or
aas
sahf
repnz
div
in
scas
cmp
xchg
sbb
pop
jge
xchg
dec
fwait
lahf
aam
pop
test
aas
sarl
mov
iret
rolb
push
hlt
push
mov
lret
pop
js
push
into
pop
in
dec
mov
cld
stc
repz
into
ss
cmp
lret
lds
jg
sub
inc
mov
ljmp
out
lret
iret
out
sbb
cwtl
add
mov
mov
jg
cs
pop
inc
dec
dec
ss
daa
fsubrl
rcr
andb
push
xchg
aaa
lahf
mov
mov
xlat
cmc
mov
sbb
cmp
ret
cld
repnz
push
push
push
lret
dec
xchg
repz
loop
mov
loop
std
or
sti
into
dec
cli
cld
adc
out
popa
call
push
stc
lret
lahf
aas
jg
pop
mov
mov
daa
popf
fdiv
out
shlb
outsb
jb
int
jne
mov
fidivl
xchg
stos
inc
pmulhuw
jecxz
xlat
adc
sub
out
int3
shrl
mov
inc
mov
sub
mov
bound
subb
mov
std
lock
inc
inc
push
ja
imul
js
cli
jg
cld
stc
fildl
mov
decl
test
repz
or
xchg
out
lahf
aas
test
mov
xlat
das
sub
rclb
hlt
or
mov
jg
cld
stc
sbb
add
pop
push
pop
std
sub
out
lahf
aas
pop
mov
and
dec
pop
push
idiv
xchg
jge
mov
xchg
mov
mov
in
mov
push
aaa
sub
jle
ljmp
cmc
mov
in
or
test
push
lahf
aas
jg
cs
mov
out
sbb
in
out
gs
ficoml
pop
lret
push
dec
js
sti
sbb
mov
inc
push
lahf
mov
or
scas
push
cmp
in
lea
repnz
xchg
popa
mov
jae
sbb
add
pop
cld
std
addb
or
mov
inc
and
jns
into
or
pop
cmpsb
push
inc
pop
dec
in
cmp
in
les
daa
into
fisubs
pop
push
lret
dec
xchg
jns
xchg
push
dec
mov
adc
pop
xchg
ja
pop
nop
out
sbb
pop
shl
pop
and
icebp
jb
jecxz
push
outsl
imul
push
fdivrp
stc
xor
pop
jp
aas
mov
sti
mov
push
pop
jns
ss
leave
aad
mov
pop
pop
std
mov
in
shl
insb
mov
sahf
mov
in
push
pushf
push
push
jl
repz
mov
xchg
push
pop
adc
shrb
pop
jnp
loopne
add
push
pop
jns
rolb
and
call
ret
cs
pop
test
push
cmp
in
push
call
cmp
movsl
lret
xchg
push
pop
nop
mov
push
push
pop
jns
xchg
xchg
cmp
inc
lds
pop
push
pop
jns
xchg
lahf
cwtl
dec
sbb
movsb
notb
rorb
das
push
xor
fcomps
addr16
jbe
outsl
addr16
mov
jle
cld
stc
repz
arpl
das
xchg
xchg
adc
add
add
cltd
jmp
in
lahf
test
addr16
arpl
in
lahf
pop
loopne
gs
fidivs
out
jnp
aas
aam
push
out
pop
int3
cmpsb
popa
out
daa
mov
in
iret
lahf
add
inc
out
adc
inc
loop
mov
out
jp
pusha
mov
test
pusha
dec
jns
popf
int
mov
lret
test
mov
pushf
mov
cld
repz
outsb
mov
cmp
iret
lahf
scas
les
cli
add
shlb
out
cld
stc
adc
jle
or
mov
dec
inc
inc
sbb
sti
clc
out
pop
adc
aas
sbb
inc
out
scas
test
cltd
inc
cltd
sub
repz
ljmp
and
out
inc
enter
lahf
aas
jg
push
inc
test
xchg
xchg
xchg
loopne
stc
repz
incb
push
fildll
fisubs
mov
push
fstps
push
pop
jns
jl
incl
mov
xor
xchg
or
add
in
mov
out
pop
lods
dec
jg
cld
stc
xchg
or
cltd
lahf
fists
insb
scas
arpl
das
lea
jg
cmp
mov
repnz
into
lock
jecxz
dec
movl
and
dec
dec
mov
shrb
mov
fcoml
mov
inc
or
push
dec
stos
xor
jg
cld
mov
movsb
push
repnz
jmp
cmpsl
adc
add
lahf
aas
sub
aas
push
aas
iret
lods
ret
ljmp
je
pusha
xchg
push
fdivrp
and
pushl
cs
das
mov
cmp
andl
subb
jns
xchg
ja
cs
push
push
sbb
xchg
push
pop
scas
aam
iret
push
push
mov
enter
in
hlt
sbb
dec
jle
lcall
sub
stos
pop
xchg
mov
test
inc
clc
in
ror
xor
adc
jle
mov
cmp
lret
dec
nop
cmp
in
aas
jg
cld
mov
mov
outsl
pop
mov
decl
std
add
fstl
and
jle
mov
jns
sbb
pushf
or
call
inc
add
xchg
sahf
jl
xchg
push
xor
dec
scas
outsb
and
scas
nop
xchg
cli
popf
dec
pop
mov
aad
sub
pop
dec
adc
push
xor
mov
xor
add
dec
fucomip
and
mov
das
inc
sub
adc
push
das
mov
cmpsl
out
lahf
aas
movsb
sbb
jbe
jns
mov
mulb
mul
in
pop
cli
push
add
push
mov
push
stc
cmp
je
repz
lahf
and
mov
out
lret
jg
cld
stc
xlat
mov
push
inc
add
out
xchg
cmp
lahf
aas
inc
pop
negb
pop
or
pop
cld
cld
stc
repz
xchg
xor
hlt
sub
enter
mov
sub
pop
xor
jg
mov
xchg
sbb
cmp
stos
mov
lret
xchg
jl
adc
cld
stc
repz
ja
test
adc
lahf
aas
jg
pusha
sbb
lods
scas
test
mov
cmp
xchg
repz
jmp
je
outsb
in
fsubl
daa
mov
stc
ljmp
aas
jg
enter
setle
mov
cmp
mov
cmpsb
fsubrl
mov
sub
int
les
mov
repnz
xchg
xchg
lcall
in
and
push
pop
xor
xchg
sub
cld
stc
xor
sbb
xchg
push
fimuls
rorb
jo
push
push
xchg
and
jns
int3
rolb
outsl
and
xchg
ja
iret
mov
pop
xor
fidivs
pop
jns
lcall
xchg
scas
movsb
scas
jae
iret
ror
movq
or
adc
mov
add
push
rcr
or
push
mov
icebp
lods
in
mov
add
add
push
clc
in
jl,pn
test
lds
cld
stc
repz
dec
je
mov
out
add
xchg
aas
jg
mov
shlb
clc
add
jo
std
stos
test
mov
push
xor
mov
mov
push
fisubrs
pop
int
mov
clc
jg
rcrb
sub
movsb
jne
xchg
and
cmpsl
clc
mov
jge
hlt
xchg
rcrl
insl
iret
fstl
mov
push
sub
pop
jns
jl
stc
leave
lea
xor
pop
cmp
xchg
jnp
dec
dec
lods
jmp
js
stc
repnz
mov
lahf
data16
cltd
addr16
in
push
pop
addl
in
in
push
lahf
scas
fdivrp
cltd
mov
fbld
leave
lret
xchg
push
jb
mov
roll
iret
mov
jb
mov
orl
imull
ja
sub
sub
hlt
in
mov
inc
loopne
pop
push
aaa
mov
repz
rcl
mov
add
xchg
pop
cmp
adc
inc
jl
and
sbbb
into
xchg
add
jns
popa
xchg
aaa
push
insl
andb
push
jg
cld
inc
pop
int3
lods
push
notb
adc
imul
lahf
aas
aam
mov
adc
sti
repnz
jnp
sbb
cltd
popf
loopne
out
cmp
pop
scas
cmpsb
out
pop
lds
mov
decb
in
sub
ficoms
aad
pop
imul
mov
call
mov
mov
decb
pop
stc
or
inc
iret
lahf
aas
aas
cs
mov
or
mov
xchg
xchg
pop
aam
out
dec
lcall
pop
jns
push
std
fs
jg
xchg
stc
mov
bndstx
std
jb
xchg
adc
xchg
and
cmpsl
loopne
andb
out
mov
lcall
mov
sub
jbe
inc
jnp
mov
mov
push
cld
stc
mov
jnp
idivl
push
lock
cmp
jmp
fidivl
jp
sub
mov
in
add
sbb
stc
sbb
loopne
sub
cmp
or
lahf
cs
jg
inc
fmulp
xor
or
js
in
out
lahf
adc
jecxz
sbb
imul
add
cld
stc
lret
ds
dec
je
in
sbb
pop
or
xchg
jl
push
out
js
ja
stos
mov
pop
jg
ret
mov
pop
jns
xchg
add
je
dec
mov
lods
xor
inc
jg
pop
push
inc
sbb
pop
out
lahf
pop
out
loop
aaa
or
or
xor
jb
repnz
jg
cli
punpckldq
xchg
sbb
scas
aad
cltd
das
xchg
sarl
push
jbe
add
fmull
mov
cmp
stc
repz
push
pop
jo
ss
in
inc
js
cli
popa
insl
lahf
aas
jg
mov
add
daa
mov
mov
iret
sbb
cmpl
fsts
stc
aas
jg
cld
test
imul
mov
addb
cld
stc
repz
jl
int
lods
dec
jmp
adc
filds
add
push
and
mov
subl
push
mov
adc
imul
xlat
pop
into
xor
ficoml
cmpb
adc
xor
or
lret
mov
xchg
jecxz
in
imul
fdivr
loope
jp
push
xchg
dec
mov
add
test
adc
lea
jo,pn
cmc
loop
lahf
aas
jg
repz
test
je
out
adc
mov
add
in
pop
xor
xor
loop
repnz
fists
das
fistpll
fstpt
lret
mov
jecxz
insb
or
push
xacquire
push
loopne
jl
jl
adc
outsl
call
movsl
dec
push
gs
pop
push
xchg
sbb
mov
jg
mov
cld
pop
dec
cmp
lods
ss
into
push
out
lahf
aas
adc
pop
push
nop
cltd
push
out
out
pop
cld
stc
repz
mov
and
jo
sub
pop
fistps
inc
push
stc
inc
cmp
mov
sbb
push
iret
cmc
enter
add
shlb
out
lock
gs
dec
mov
jne
pushl
repnz
popf
popf
mov
mov
and
repnz
test
fadd
les
pop
scas
mov
rolb
dec
jecxz
xchg
cmp
repz
dec
cs
adc
inc
dec
sbb
pop
ss
cld
dec
mov
or
jmp
das
aas
fimuls
clc
jo
rorl
jnp
mov
aas
jg
mov
cmp
fnstenv
stos
pushf
cwtl
jnp
stc
repz
dec
mov
iret
add
inc
mov
aas
jg
cld
inc
shlb
adc
push
xor
rclb
adc
and
fnstsw
in
xor
jle
cmpsl
or
pop
xor
in
push
pop
mov
in
sti
in
push
call
cmp
xor
or
lahf
test
push
xchg
cmc
pop
jge
push
sbb
repnz
add
mov
push
aam
push
mov
add
adc
outsb
fdivr
popa
repnz
push
stos
push
stos
inc
in
xor
lret
sub
pop
loop
and
sub
stos
pop
mov
dec
mov
repnz
xchg
into
pop
leave
mov
data16
hlt
lret
dec
ds
mov
add
repnz
or
shll
jmp
inc
mov
jno
jns
lds
rorl
fidivrs
outsb
addr16
sti
jno
pop
pop
and
jmp
std
jb
xchg
mov
mov
sub
ficomps
push
dec
add
mov
push
sahf
bswap
jns
call
nop
push
fwait
aas
jg
cld
xor
in
xchg
jae
movlhps
rcrb
pop
repz
lahf
pop
xor
add
insb
xchg
cld
stc
lret
or
cmp
pop
int
loope
and
iret
lahf
aas
xchg
push
push
dec
fsubrl
cmp
mov
pop
jae
push
jns
push
je
and
nop
jg
pop
fimuls
inc
sub
and
pop
into
push
aam
repz
lahf
and
ja
xlat
xchg
stc
jb
mov
cld
stc
pop
mov
std
jge
mov
xchg
lahf
pop
adc
pop
mov
xchg
add
xor
or
nop
pop
das
push
inc
fisubrl
sub
outsl
call
xlat
jne
adc
int
lret
ss
rclb
mov
mov
sub
mov
inc
das
mov
sub
mov
or
aas
jg
cld
mov
pop
jns
xchg
bndstx
pushf
dec
lret
out
lahf
cmp
pop
sub
dec
add
testl
cmp
jae
outsl
xchg
push
pop
jns
add
dec
lods
inc
xchg
dec
filds
fistpll
lods
mulps
fstpt
mov
das
movsl
in
push
pop
jae
shll
inc
push
xor
xchg
push
pop
jns
sbb
mov
sub
test
xchg
push
pop
jns
aam
sbbl
jne
aas
lock
xchg
loopne
repnz
imul
sub
cmc
lret
cs
fcompl
or
mov
daa
ficompl
inc
lret
cld
mov
and
inc
flds
ljmp
ja
test
adc
and
rcrl
push
pop
jns
call
int3
into
jp
in
pushf
adc
jns
xor
push
es
jns
fistps
in
lock
mov
push
andb
in
ja
sbb
jo
mov
xchg
adc
popa
cld
jb
stos
push
pop
cmpsl
jne
cmc
push
nop
mov
nop
hlt
addr16
xrelease
sahf
out
shr
jno
and
ficomps
push
inc
jmp
out
xchg
sub
mul
cmp
iret
xor
mov
popl
cmpsl
sbb
and
push
inc
pop
stos
scas
mov
xchg
push
mov
loope
sarl
xor
lcall
ljmp
sbb
into
mov
mov
repnz
push
call
stc
ret
and
nop
jle
cs
dec
imul
sbbb
and
int3
add
iret
lahf
aas
fdivs
jb
xchg
or
repnz
jmp
imul
movsb
mov
cli
push
push
pop
adc
and
cltd
sbb
xor
negl
jo
iret
and
dec
adc
add
repz
lahf
push
sub
sub
inc
xorl
mov
cld
stc
xor
or
das
push
fdivrp
push
incl
pop
hlt
in
outsb
sbbl
jg
outsb
sub
fidivl
push
in
shrb
push
adcl
fidivrl
mov
xchg
pop
imul
mov
fbstp
sar
pop
fidivrs
mov
iret
cltd
inc
aas
mov
adc
iret
lahf
jg
jle
jae
in
cmp
in
clc
leave
adc
fiadds
mov
inc
mov
neg
push
stos
fsts
xchg
decb
fwait
cmpb
fwait
je
dec
scas
jbe
and
in
pushl
pop
test
outsl
jns
xchg
ja
test
decl
xchg
and
inc
jge
scas
mov
int3
xor
repnz
xchg
cs
push
mov
int
lahf
std
std
mov
test
pop
and
enter
jle
pop
mov
pop
cmp
arpl
repz
lahf
clc
and
pushf
in
pop
pop
popf
outsl
push
mull
mov
jl
imul
lret
cs
jle
fisttps
push
pop
xchg
out
mov
pop
stos
mov
das
scas
mov
cmpsb
jo
cmp
adc
sbb
dec
pop
inc
out
mov
xor
scas
out
popa
or
scas
cltd
sub
dec
inc
ret
addr16
xchg
ja
adc
xlat
xchg
pop
xchg
outsl
cmc
lret
in
insl
jne
shrb
leave
arpl
xchg
popf
mov
cld
daa
pop
pop
sti
mov
repnz
les
sbb
ljmp
mov
mov
mov
sub
shlb
dec
cmp
mov
repnz
sub
pop
setb
repnz
adc
xor
fstpt
inc
test
mov
mov
xchg
ss
aas
jg
dec
scas
sbbl
out
sub
jle
aas
jecxz
iret
push
adc
icebp
push
or
shl
out
lahf
movsb
dec
or
sahf
mov
sub
les
stc
mov
insb
jecxz
mov
iret
bound
in
xchg
in
lret
mov
iret
push
pop
jns
adc
imul
aad
jns
lret
xchg
jbe
fsubrs
scas
cmpb
sbb
push
pop
je
insl
adc
add
pop
xchg
push
pop
jns
fst
add
jge
sub
ss
ret
pop
jns
in
and
fistpll
and
in
outsb
jl
push
and
push
sub
cmpsl
sub
xchg
push
lods
les
add
xchg
stc
repz
repz
mov
cs
mov
jg
pop
push
test
sbbl
into
ss
std
adc
adc
fstl
iret
adc
add
xchg
push
pop
mov
sub
fcos
xor
call
pop
jns
mov
iret
add
loopne
pop
mov
pop
jns
arpl
xchg
cmp
adc
hlt
std
jb
xchg
cmc
insb
push
psraw
push
mov
push
fisubrs
lock
push
icebp
ret
xchg
push
pop
jns
in
xchg
inc
mov
aam
cld
in
test
add
call
cmpsb
lret
jns
mov
scas
sub
in
gs
js
adc
outsl
dec
and
jo
pop
incb
push
shrb
push
xchg
enter
sub
lahf
push
pop
les
pop
test
sbb
mov
add
clc
dec
imul
inc
fdivl
jbe
notl
xchg
pushf
inc
dec
pop
ds
punpcklbw
aaa
rorb
add
sub
jle
mov
inc
inc
or
jle
repnz
mov
arpl
sarl
push
xchg
lret
lahf
aas
aas
push
fcmovbe
inc
fisubs
in
jno
out
jg
add
jb
fldl
pop
lahf
adc
icebp
popa
inc
pop
lret
mov
dec
adc
dec
mov
ror
xchg
xor
or
imul
jmp
xor
repnz
in
pavgb
aas
push
aam
addr16
repnz
jne
int
push
scas
sub
and
lret
cld
cld
stc
xor
xchg
sti
mov
lret
sub
mov
sbb
xor
repnz
jae
pinsrw
scas
out
cmp
push
lods
aad
push
or
or
int
sub
out
sub
flds
jnp
mov
insb
scas
mov
negl
andb
jecxz
mov
inc
mov
repnz
xchg
into
jns
cmp
out
xor
stos
ja
fisttps
pop
mov
lret
cltd
and
xchg
push
pop
jns
sbb
jecxz
push
push
fistpl
loope
push
pop
jns
in
lea
addb
adc
aaa
push
or
fmull
jne
xor
repz
notl
mov
push
sahf
mov
shrl
sbb
pop
gs
push
lret
add
stos
xchg
push
out
lahf
pop
dec
and
or
shrb
mov
ljmp
push
sbb
xor
add
aas
jg
fs
xor
mov
cmp
add
lret
scas
clc
neg
jp
inc
out
push
iret
sti
xchg
scas
mov
pusha
pop
mov
pop
ds
cmc
mov
not
sti
or
arpl
das
lret
mov
frstpm(287
inc
out
fbstp
nop
out
mov
jbe
test
or
jecxz
push
pop
ficomps
xchg
lahf
mov
int3
mov
push
cltd
xchg
mov
scas
mov
pop
insl
out
lahf
dec
dec
aad
and
out
mov
cli
es
jb
sbb
scas
mov
inc
subb
rclb
rolb
adc
push
cli
in
sub
sub
inc
xchg
xor
xor
sti
dec
pop
xor
imul
iret
shld
xrelease
mov
sbb
repz
sahf
aad
mov
int3
in
fdivrl
fmuls
test
add
add
movsb
xchg
int3
out
lahf
pop
mov
mov
mov
repz
test
cmpsl
adc
aaa
adc
jo
addr16
das
aas
jg
out
movsb
pop
push
and
repnz
ljmp
inc
cmp
xchg
push
jle
and
or
das
ds
jnp
add
out
inc
cmp
ja,pt
push
sub
das
mov
xchg
fildll
repnz
push
or
addb
mov
in
cmp
mov
outsl
subb
adc
cltd
test
sub
xchg
mov
mov
push
pusha
insl
out
shrb
imul
dec
je
cld
stc
repz
lods
inc
mull
nop
mov
dec
sbb
aas
jg
adcl
mov
lods
cld
mov
fwait
jp
push
inc
dec
lret
hlt
sahf
sbbl
jb
sbb
jb
lahf
das
jg
jae
cli
or
cmp
jb
lret
out
cmpl
xchg
out
mov
fdivrp
std
mov
ret
icebp
outsl
pop
lret
cmp
lcall
in
jecxz
dec
ret
rcrl
sti
inc
xlat
incb
jns
xchg
push
mov
and
aam
shlb
pop
mov
mov
outsl
dec
inc
pop
mov
into
enter
loopne
outsl
mov
mov
adc
pop
pop
add
repz
into
scas
xchg
or
andnps
adc
repnz
addr16
ss
inc
pushl
sub
mov
imul
pop
in
pop
scas
mov
jmp
and
iret
pop
lods
mov
ds
xor
jne
paddusw
jns
add
sub
inc
ljmp
scas
mov
mov
fbstp
repnz
hlt
push
sbb
ja
scas
mov
lahf
orb
aad
dec
jno
adc
jg
stos
adc
or
lret
movsl
enter
lcall
incb
js
push
jg
shrl
repnz
pop
in
ja
cld
movsb
mov
daa
icebp
lret
mov
ret
pop
pop
mov
lcall
fldt
lods
dec
insl
inc
mov
mov
push
and
xchg
mov
ja
jecxz
jae
repnz
popf
int
xchg
test
mov
xor
cld
sbb
cmp
test
mov
das
lahf
aas
js
cmp
cli
cmp
xchg
sub
cmp
inc
sbb
push
in
ja
pop
mov
pop
mov
jns
xor
xor
sub
mov
jnp
pop
iretw
lahf
aas
ljmp
test
mov
shr
cld
stc
repz
lods
testl
icebp
test
in
and
inc
aam
mov
out
shrb
arpl
dec
cmpsb
cmp
stc
repz
push
dec
xor
xor
lahf
arpl
out
xchg
lahf
aas
jg
sub
imul
pop
jns
jg
rcr
cwtl
sbb
jge
mov
jns
xchg
push
insb
arpl
aas
repz
adc
inc
js
je
stc
mov
scas
xchg
or
outsl
iret
ds
jg
lahf
mov
xor
addr16
cmpsl
outsb
dec
popa
loopne
aas
jg
cld
inc
sub
fbld
sti
xchg
cmp
lahf
or
gs
in
out
mov
icebp
mov
add
das
or
int3
mov
sti
imul
imul
mov
pop
scas
mov
jne
sbb
jmp
xchg
notl
movsl
repnz
pop
mov
inc
lcall
rclb
popa
lret
mov
jecxz
adc
push
scas
mov
pushf
cmp
xchg
movsb
lock
cmc
repnz
xchg
das
cmp
mov
and
add
sti
movsl
lahf
adc
insl
scas
mov
out
lahf
aas
jle
dec
push
push
add
push
mov
subb
icebp
in
pop
popa
leave
je
push
push
adc
movsl
scas
push
inc
adc
sub
mov
cld
rcr
jle
les
jg
aas
mov
xchg
push
clc
in
sbb
sbb
scas
mov
sbb
sub
popf
orl
repnz
xlat
xor
pop
mov
cmp
adc
lret
push
cmpsb
aam
and
jecxz
xchg
sub
mov
popa
out
jns
stc
repz
jmp
cmp
mov
stc
rcll
jg
cld
in
cmp
xchg
int3
jnp
cmpsb
xor
in
xchg
lahf
xchg
ljmp
pop
jbe
aas
push
into
das
sbb
cmp
je,pn
xchg
fs
fimull
mov
jnp
das
jo
mov
cld
aad
push
repnz
dec
sarb
push
insl
and
lret
aad
cmp
mov
fiaddl
xchg
inc
mov
jns
pop
jecxz
push
cs
rcr
aaa
pushf
in
push
pop
cmp
jmp
scas
inc
icebp
enter
jns
insl
scas
xor
call
ffreep
scas
mov
scas
repz
iret
mov
fsubs
jl
adc
cmpsb
stc
data16
out
cmp
mov
lahf
aas
aas
adc
fistpl
or
repnz
xchg
iret
adc
hlt
les
push
and
repz
scas
mov
jbe
bound
rcll
pop
add
das
jg
fbld
psadbw
scas
fcmovbe
out
movsb
inc
jle
das
ja
lds
mov
mov
adcb
jne
outsl
lds
jge
popf
out
adc
pop
jns
lea
mov
mov
dec
fwait
xchg
jns
xchg
push
in
and
xchg
bound
push
divb
fdivrs
mov
jge
in
and
sbb
jbe
out
mov
pop
adc
lret
loopne
leave
cwtl
sarl
or
push
scas
jmp
cli
test
pop
addb
insb
sahf
dec
aam
cld
inc
clc
pop
mov
jne,pn
cs
fisubrs
xchg
mov
sub
xor
xchg
push
pop
jns
aad
jp
jg
std
mov
ret
pop
jns
frstor
cmc
lahf
add
fs
and
push
jns
xchg
push
xchg
addl
push
push
outsl
fxsave
in
push
pop
clc
shl
push
loopne
jg
test
mov
add
push
xchg
fimull
jns
repnz
jo
lahf
pop
sbb
xorb
das
stos
bswap
out
aam
fistpll
and
mov
scas
stc
test
xchg
out
add
subb
cld
stc
loop
inc
pushf
into
enter
push
add
cmpsb
movsb
loop
das
lahf
aas
mov
push
jns
fstp
iret
xchg
outsl
cmp
das
dec
in
push
pop
mov
mov
adcl
popa
add
ljmp
cld
stc
daa
push
gs
lods
fcomip
popa
inc
mov
aas
jg
das
cmp
push
add
dec
div
stc
repz
std
in
movsl
aam
cmpsl
jns
data16
imul
out
push
xlat
pop
lds
or
and
jg
cld
push
jne
mov
testb
movsl
xchg
iret
lahf
aas
or
js
cmc
sbb
lods
cld
stc
repz
sub
pop
flds
ljmp
adc
jle
mov
jecxz
inc
call
lahf
aas
aaa
cltd
nop
arpl
dec
push
push
ret
idivb
mov
sub
inc
mul
out
jg
fmul
fstpt
pop
scas
xor
xor
incl
pop
push
lret
iret
or
ds
pop
mov
xchg
ljmp
jmp
mov
xchg
cld
stc
repz
into
jp
pop
cltd
aas
jb
push
push
movsb
insb
insl
lahf
aas
jg
fmull
jno
out
dec
es
in
stc
repz
mov
test
xor
push
lret
cld
jecxz
cwtl
mov
sbb
out
jp
loop
jmp
add
pop
mov
sti
in
dec
xchg
enter
add
sahf
bound
mov
js
test
jp
xor
aam
and
push
pop
jns
sub
iret
jl
push
xchg
fs
and
push
pop
jns
or
fdivs
push
shll
mulb
std
jb
das
rcr
nop
fists
fildl
repz
std
dec
pop
repz
iret
adc
jg
xor
mov
jle
sub
and
stc
jecxz
test
stos
jmp
pcmpeqd
rol
pushf
dec
es
cld
stc
add
jo
lods
int
mov
repnz
jbe
mov
cmc
add
sbb
int
mov
in
ja
add
out
sub
daa
mov
xchg
push
pop
jns
iret
sahf
xchg
add
cmp
push
pop
jns
jecxz
cmp
adc
in
sub
sbb
mov
negl
lea
scas
cmp
loop
push
lods
scas
jle
imul
out
pop
sub
push
andb
pop
adc
fdivrl
sbbl
cmp
ret
nop
movsl
cmp
sub
cld
stc
repz
sbb
decb
ficoms
dec
cmpsb
fidivs
mov
lock
jns
xchg
movsl
ja
out
dec
pop
mov
adc
mov
dec
shrb
push
outsl
and
sub
out
test
pop
dec
sbb
call
or
sbb
pop
dec
mov
fwait
or
enter
xchg
jecxz
jecxz
and
imul
movsb
cld
aas
dec
daa
clc
lods
jg
add
push
pop
jns
in
xor
mov
push
pop
jns
sahf
data16
test
and
jns
xchg
adc
imul
das
push
ficomps
jecxz
mov
int
sbbl
sbb
cmp
outsl
cs
repz
cmp
ret
mov
dec
sbb
jle
mov
pop
subl
js
xchg
push
pop
int3
ljmp
jp
ja
mov
call
mov
cmova
cmpsl
sub
loop
ds
in
mov
stos
add
bound
scas
mov
iret
add
inc
lods
push
pop
inc
jo
test
mov
inc
loope
push
test
xchg
mov
mov
add
mov
xchg
sub
aad
jp
sub
ret
cmp
fldt
cli
sub
stc
adc
cmc
cmpsb
repnz
insl
mov
mov
sbb
push
jg
les
pop
mov
lret
icebp
jb
xchg
in
mov
and
push
std
sub
outsl
push
mov
ja
insl
or
push
pop
cmp
push
mov
push
add
iret
mov
pop
jge
cmc
push
jb
xchg
push
out
stos
mov
dec
jg
cld
ja
fdivr
xor
xchg
push
call
aas
shll
pop
jns
xchg
pusha
push
test
ds
out
lret
xchg
push
sub
fadd
adc
push
icebp
jg
lea
jmp
sahf
ljmp
test
lret
fidivrs
aad
outsl
inc
lahf
cld
stc
xor
mov
pusha
insb
mov
mov
mull
js
mov
inc
cmp
out
das
push
cmp
mov
fstpl
clc
repnz
popf
movsl
push
out
inc
cli
outsl
arpl
jns
mov
insl
fistpl
rclb
jg
aas
add
out
addr16
repz
lahf
lock
lret
movsl
inc
mov
push
stc
cld
stc
orb
pop
popa
cld
xchg
dec
ret
cld
lahf
jb
pop
outsl
outsb
aas
call
jle
shlb
lock
jecxz
mov
pop
fnsave
insb
cld
stc
repz
cmp
and
push
shll
loope
push
ja
jle
jg
add
testb
pop
pop
jl
in
xchg
mov
imul
pop
aaa
sub
out
dec
inc
into
mov
lahf
aas
jg
loope
sbbb
jp
out
leave
pop
popf
add
mov
sarb
jns
jle
add
test
clc
jns
repz
ret
pushl
ficomps
mov
cli
test
jle
cld
add
push
sub
iret
and
out
in
ja
dec
sub
into
jbe
addr16
jg
sub
insb
dec
sbb
push
callw
jle
hlt
arpl
lds
jns
xchg
ja
adc
jne
push
pusha
lcall
push
pop
cmpsb
adcl
jge
das
lahf
aas
jg
xchg
jp
dec
lods
pop
outsb
insl
std
bnd
clc
in
push
jp
xchg
out
sub
jg
cld
sarl
cs
xlat
cmp
ror
lahf
aas
mov
lcall
sub
sti
push
xor
out
movsl
fbstp
bswap
xor
das
es
add
xor
xor
and
jae
mov
in
out
hlt
bound
push
jnp
repnz
lahf
inc
ret
xlat
mov
test
pop
sub
imul
mov
jae
sarl
mov
pushw
out
iret
shl
lret
lahf
into
data16
cli
jp
jbe
ljmp
jecxz
call
dec
xchg
lahf
xchg
push
out
jle
repnz
dec
inc
imul
and
rorb
rclb
adc
and
add
sub
cmp
adc
push
and
ss
cld
scas
into
aaa
xchg
ja
cmp
sbb
mov
adc
in
imul
loop
adc
orl
aas
jg
cld
xchg
cmp
xchg
rcrl
rolb
lahf
cltd
fisubrl
in
in
jg
cld
push
jecxz
push
pop
pusha
cmpsb
out
xor
mov
and
ds
sbb
rolb
cmp
loop
cmp
cltd
lods
in
xchg
cltd
add
or
mov
sbb
stc
repz
mov
dec
leave
sub
cmpl
mov
aad
adc
movb
and
mov
dec
pop
jns
xchg
xchg
cmp
cmp
daa
push
mov
scas
ret
js
cmp
ds
jo
test
jae
pop
out
aas
das
sahf
int3
les
stc
repz
sub
repnz
das
jg
cld
fwait
or
and
inc
stos
or
adc
mov
rorl
cli
jnp
xor
sub
stos
ret
sbb
aas
jg
loopne
outsb
cmp
push
push
lret
addr16
pop
push
pusha
je
movsl
fists
outsb
rol
filds
mov
ret
lea
rcl
outsl
xor
ljmp
movsb
jg
popf
mov
das
aas
mov
scas
sarl
push
cmc
repz
pushf
inc
cmc
in
or
xchg
pop
rorb
stc
and
xchg
popf
movsb
inc
cmp
sub
jle
fidivrs
adc
cwtl
pcmpgtb
mov
dec
scas
mov
sti
and
add
inc
jmp
aas
mov
jo
jmp
xchg
lea
sub
jle
aaa
lock
mov
jle
popf
lcall
or
xorl
and
repnz
inc
pop
add
sub
ret
out
lret
sub
lahf
test
sbb
sahf
fidivrl
mov
or
roll
int3
cmp
jle
outsl
div
aas
in
cmp
or
sbb
stos
dec
loope
push
imul
in
push
ss
xchg
movsl
cmpsl
shlb
push
pop
cmp
cld
push
fstp
push
pop
jp
out
inc
jge
repz
out
pop
mov
jle
add
iret
mov
clc
pop
hlt
imul
cmp
stc
repz
int3
or
mov
sbb
sbb
test
pop
sub
push
scas
push
lret
sub
pushf
sbb
cli
in
cmc
push
inc
adc
shlb
in
ja
and
stos
nop
xor
mov
mul
pop
push
out
pop
ja
xchg
in
jo
xchg
push
pop
jns
fldt
lods
ljmp
xlat
rorb
sub
seto
inc
jle
loopne
aaa
cwtl
out
sub
aam
stc
sarb
das
faddp
and
out
jle
xor
rorb
insb
mov
dec
jmp
mov
test
jle
mov
or
push
jg
aas
mov
jecxz
in
pop
mov
sub
iret
lahf
pop
into
popa
xchg
dec
dec
pop
mov
xor
stc
rep
and
jmp
jno
ror
xor
aas
jg
mov
push
pop
push
fsubrl
cmc
lret
out
and
xchg
inc
fdivs
add
out
xchg
iret
jo
fcmovnu
pop
mov
loope
lret
pop
cmpsl
test
sub
push
push
add
or
dec
shrb
scas
mov
jae
shlb
imul
cld
jg
sbb
movsl
pop
dec
jle
xor
push
mov
and
pop
jg,pt
daa
xlat
sbb
inc
xor
nop
test
and
xchg
rorl
test
pop
inc
test
xchg
cmp
xchg
sub
rorb
or
in
xorps
icebp
out
lods
cs
cld
repnz
xor
push
fidivrs
sahf
mov
xchg
iret
icebp
in
mov
pushf
jne
dec
decb
in
sub
xchg
imul
sbb
in
aad
std
or
dec
pop
mov
aas
jg
push
cs
cmpsl
fwait
movsb
add
inc
repnz
iret
inc
pop
fisttps
push
or
gs
mov
jecxz
decl
pop
jg,pt
cs
xchg
inc
mov
mov
dec
push
sub
mov
xchg
sub
in
popa
fidivrl
add
out
pop
jg
test
fsubs
cld
stc
repz
mov
mov
loop
or
push
xchg
test
xor
xchg
ror
aas
filds
adc
xchg
in
mov
push
mov
scas
jl
cld
stc
jmp
imul
mov
mov
repnz
mov
aas
pop
dec
inc
push
cld
and
push
daa
loop
rsqrtps
hlt
aam
sbb
or
in
mov
sub
mov
mov
popa
xor
push
xor
fs
das
aas
jg
push
cld
bound
push
add
jns
xorb
cmp
push
xchg
push
ss
out
leave
adc
rclb
push
sub
mov
call
aad
scas
mov
lods
mov
test
jmp
lret
rorl
frstor
int
lret
inc
aad
xor
aaa
mov
sub
sub
mov
adc
jne
pop
ficomps
pop
or
jns
fisttpll
ljmp
inc
lret
xchg
push
pop
adc
adc
fdecstp
push
dec
pop
jge
imul
xor
iret
imul
jg
mov
mov
test
clc
adc
clc
movsl
or
insb
mov
jmp
pusha
fldl
cmp
lret
sqrtps
sub
adc
in
or
mov
pop
int
inc
scas
cltd
adc
lret
xchg
push
pushf
jmp
dec
sub
pop
jns
adc
and
rcr
mov
inc
sub
lcall
sub
aas
jg,pn
ds
mov
iret
mov
and
adc
or
lods
jp
xchg
dec
pop
xchg
sti
repnz
mov
cmp
cmp
scas
es
mov
out
fldcw
jg
inc
jbe
lret
sbb
insb
dec
stc
repz
cld
add
sahf
pushf
push
mov
fidivs
jo
cld
movsl
or
jecxz
cmp
stc
mov
sbb
into
daa
out
sar
jno
aas
aad
in
jg
or
out
fistpll
push
mov
int3
sbb
ds
xor
decb
lahf
inc
xor
out
jle,pt
fbld
addr16
lret
mov
faddl
lret
dec
adcb
es
add
mov
pop
ja
pop
jns
je
gs
jp
push
mov
xchg
sub
mov
inc
shrl
lret
mov
cmp
mov
mov
hlt
pusha
ret
jns
loopne
sbb
repz
in
pop
jns
xchg
add
cmp
mov
lock
jns
xchg
push
add
and
inc
ja
arpl
orl
sbb
iret
mov
test
aas
add
imull
iret
insl
dec
jecxz
pop
xchg
push
fdivrp
dec
xor
cmp
pop
dec
xchg
pop
jmp
int
hlt
in
lods
push
out
in
fwait
test
jg
cld
stc
sub
gs
cmp
outsb
add
jns
xchg
mov
or
push
mov
or
loope
loopne
mov
xchg
fimull
test
repnz
pushf
cmc
and
lock
adc
jnp
push
loope
jge
hlt
test
lahf
jge
xlat
shll
sti
sti
and
lcall
or
in
sub
dec
mov
mov
fstpt
inc
and
inc
cmp
jg
fisttpll
cmp
push
shll
lret
mov
sahf
xchg
and
inc
cli
repnz
ficomps
xor
into
pop
adc
mov
sbb
mov
leave
adc
cmp
jg
cmpsl
ds
push
outsl
in
pop
mov
test
sbb
cmp
scas
repz
das
into
sbb
cmp
scas
iret
mov
jge
mov
fistpl
insb
fistpll
call
and
repnz
faddl
shrb
gs
xchg
sbbb
dec
pop
mov
jns
cld
stc
test
mov
or
aad
jb
add
mov
rorl
in
jmp
sub
outsb
mov
lock
int
aas
aas
sub
stos
cmp
sahf
aas
lds
aad
pop
mov
iret
aas
dec
xchg
addr16
sub
ret
mov
or
jge
call
daa
aas
jne
push
in
xchg
sub
lods
or
or
out
iret
fisttpl
mov
dec
aas
and
dec
test
mov
fs
ds
mov
mov
cld
pop
bound
push
or
in
out
arpl
mov
jnp
leave
cld
sbb
jo
xor
push
stos
mov
iret
lahf
aas
jg
int
js
cmp
insb
and
shrl
push
sbb
pop
jp
shr
ret
aam
repnz
or
inc
mov
ja
cld
stc
add
jge
jmp
mov
ret
test
loope
mov
mov
das
push
mov
mov
mov
jns
dec
inc
in
push
fdivrp
iret
rorb
xor
fcoml
imul
push
pop
jns
movsl
in
xor
pop
sahf
push
pop
jns
insb
or
lahf
int
push
loopne
jno
sbb
aam
jb
xchg
ror
add
pop
xchg
pop
jle
repnz
and
call
mov
lock
push
cmp
repz
jns
cmp
inc
lahf
jmp
aam
daa
push
pop
pop
xchg
cld
ljmp
mov
adc
stc
repz
or
sbb
outsb
out
fs
mov
int3
lahf
aas
jg
jbe
mov
movsb
dec
lods
fs
out
lahf
jne
jbe
mov
mov
js
rolb
jae
adcl
push
mov
fwait
cli
rcrl
orb
test
lahf
aas
jg
and
es
mov
sub
stc
repz
fnclex
fstl
scas
imul
push
cs
fists
mov
xchg
lahf
aas
and
push
adc
or
jns
movsl
adc
hlt
filds
aas
jg
jle
jno
fsubrs
jmp
outsb
mov
xchg
cltd
push
mov
xor
repz
out
outsb
scas
mov
dec
fimull
pop
jle
push
dec
xor
jo
push
add
push
xchg
push
pop
jns
push
into
ret
cli
and
cmp
xlat
icebp
xchg
ja
in
pushf
push
aad
scas
cmpsl
mov
jns
mov
cmpsb
sub
nop
rorl
pop
jns
xchg
inc
pmaddwd
xor
rcrb
jns
xchg
push
fcmovb
stc
in
sbb
hlt
popf
xchg
ret
in
adc
adc
xor
xchg
ja
imul
jns
sti
add
sbb
fwait
daa
dec
jge
cltd
imul
das
sarl
pop
stc
pop
sbb
repnz
repz
mov
xchg
repz
pop
inc
inc
pop
fdivrp
and
push
outsl
sbb
pop
jg
cmp
mov
adc
or
jecxz
out
add
aas
testb
jl
fptan
mov
push
jl
idiv
mov
mov
into
xor
add
ja
popw
in
push
push
push
mov
ja
dec
add
add
sub
icebp
lret
xchg
or
icebp
fistps
adc
scas
jg
cld
stc
jg
notl
adc
out
add
mov
lds
sbb
pop
jl
xor
call
sbb
push
repnz
xor
dec
andl
jnp
lods
inc
aad
lret
sub
adc
loope
xor
repnz
add
fistps
adc
mov
mov
shlb
mov
out
pushf
bound
ret
fwait
cmpsb
cmp
outsb
loope
dec
pop
mov
loopne
iret
lahf
aas
cltd
cmp
test
in
push
lods
and
adc
nop
cli
imul
test
mov
mov
popf
mov
test
iret
lahf
aas
outsb
mov
add
data16
outsl
mov
cld
stc
repz
sbb
repz
add
aaa
or
pop
es
jmp
pop
pop
jns
fisttpll
and
add
adc
add
lret
xchg
push
movsl
mov
xchg
mov
push
pop
jns
mov
imul
loop
mov
jns
xlat
mov
mov
push
xor
test
in
ja
cmp
and
into
jg
add
push
pop
loop
into
jae
inc
sbb
cmpsb
out
hlt
in
lahf
scas
jle
mov
jg
cld
stc
mov
jnp
or
imul
aas
jg
std
xor
sub
scas
loop
push
mov
cld
stc
repz
inc
popf
xor
daa
lahf
jbe
icebp
movsb
loopne
pop
daa
mov
test
pop
repz
jecxz,pt
dec
or
gs
insb
in
iret
mov
movsl
cli
ds
test
inc
cld
stc
repz
ret
imul
notb
lahf
aas
jg
pop
scas
xchg
dec
and
repz
cli
stc
repz
loope
decb
xor
aam
push
imul
sbb
add
add
adc
mov
add
pop
out
pop
mov
adc
outsl
mov
xor
shll
ret
das
lods
adc
mov
lahf
cmp
scas
lret
mov
ljmp
mov
ds
xchg
jp
or
scas
mov
pop
aam
daa
mov
push
pop
and
in
sub
insl
and
cld
stc
mov
mov
je
jg
iret
lahf
aas
jg
jne
mov
sbb
fdiv
fildll
xor
sbb
fstl
mov
jecxz
das
add
pop
jns
xor
push
inc
in
inc
inc
loope
pop
jns
mov
jge
xor
add
imull
jns
xchg
ja
mov
out
mov
sbb
das
push
pop
mov
je
adc
xchg
xchg
inc
nop
mov
mov
xor
iret
xchg
xlat
sub
sub
lret
add
scas
mov
cmpsl
repz
xchg
jb
aad
cld
stc
repz
mov
test
jmp
aas
jg
xor
adc
push
and
sbb
pop
cwtl
je
in
xchg
mov
je
fists
and
cmpsb
in
push
pop
add
clc
mov
mov
lret
pop
jns
and
out
cmp
xor
outsl
mov
in
xchg
pop
fs
mov
in
ja
loope
js
lret
scas
movsl
into
std
lret
jb
mov
xchg
cmp
movsb
xchg
mov
push
mov
jae
add
dec
dec
sub
call
lret
xchg
push
es
je
ret
iret
push
aam
pop
daa
mov
mov
ffreep
pop
sbb
lock
shlb
cmp
lahf
aas
ljmp
xchg
and
popf
in
enter
gs
jns
cmp
jge
clc
adc
loope
outsl
dec
push
arpl
iret
xchg
aas
aas
outsl
push
xchg
ljmp
lds
stc
repz
ret
or
cmp
fdivrp
or
adc
insb
xlat
pop
cmp
fstl
ret
cmp
lods
pop
push
push
pop
jns
jl
push
xor
pop
push
ljmp
in
mov
mov
fstpt
jns
lret
xchg
cmp
lret
jae
repz
add
pop
add
dec
mov
cmpsl
comiss
jns
push
sub
addr16
dec
lcall
or
mov
xchg
push
pop
jns
cmovo
sti
cwtl
insl
xchg
sub
lods
jg
lret
loopne
sar
pop
sub
shl
iret
push
js
les
or
or
cld
stc
jae
adc
jo
imul
hlt
and
iret
lahf
aas
push
mov
mov
xchg
ds
mov
push
mov
addr16
scas
push
pushf
arpl
ret
xchg
pop
inc
pop
jle
sub
cmp
mov
dec
sbb
out
cli
outsl
adc
stc
repz
aad
push
mov
mov
add
bndstx
push
cmp
scas
in
aaa
pop
push
shl
out
xor
xor
bound
mov
jns
dec
outsl
mov
fcomps
imul
xchg
push
mov
fiadds
repz
jmp
iret
scas
cmc
jo
pusha
mov
jp
rol
lret
scas
mov
das
test
add
call
jns
pop
pop
jl
jecxz
xchg
je
stc
xor
cmp
xchg
push
and
ds
mov
adc
scas
lock
or
mov
sti
lcall
jnp
mov
sub
sbb
mov
cmpxchg
mov
inc
cs
xchg
xor
sub
or
inc
test
inc
mov
lret
out
pop
call
jle
jno
mov
into
stos
loopne
xchg
iret
clc
dec
cmp
das
scas
lea
or
jb
stc
repz
jl
or
mov
or
arpl
jg
cld
into
xchg
in
sub
les
pop
test
out
lahf
std
cmpsb
insl
adc
test
push
sub
stc
xor
push
and
dec
clc
int
jl
mov
or
in
xchg
jns
lahf
loopne
loop
push
fdivrp
scas
xor
and
mov
les
lods
xchg
sbb
fst
rolb
loopne
test
or
je
pop
jns
pop
insl
jmp
inc
fnsave
pop
and
stos
sti
jmp
shll
sbb
adc
jecxz
mov
lock
mov
leave
inc
int3
cmp
repnz
xchg
inc
mov
mov
sbb
sbb
cld
stc
repz
adc
test
popf
in
sahf
adc
cmp
and
or
subl
repnz
and
xchg
aas
sbb
xchg
push
pop
xorl
testb
and
push
sub
or
push
popf
mov
les
jns
out
in
add
les
sub
ljmp
test
pusha
or
aam
mov
mov
jg
xchg
mov
jg
scas
mov
sub
sti
sub
cli
repnz
mov
loope
mov
outsl
fdivrp
lods
repnz
jl
imul
in
rolb
inc
imul
mov
add
iret
push
xorb
repnz
jns
push
sub
mov
pop
popa
lret
pop
push
add
adc
adc
repnz
adc
inc
sbb
lret
fdivr
or
stos
xor
sub
sarl
das
out
outsl
dec
pushf
mov
xchg
add
aam
cmp
xor
add
cmpsb
push
sbb
sub
adc
sub
jg
mov
repz
scas
pop
mov
jns
popf
aas
mov
mov
sub
sbb
dec
xchg
ja
add
mov
cmp
cmc
lret
orl
das
adc
outsl
xchg
push
pop
jns
xorb
pushf
adc
lea
aad
repz
int
xor
in
fldl
shrb
fisubs
jle
jp
jp
xchg
lahf
aas
jmp
adc
rcr
scas
mov
cmp
nop
mov
lock
mov
cmpsb
mov
pop
sti
fisttpll
sub
mov
jmp
xchg
jg
jbe
aaa
xor
in
lret
ret
sbb
sbb
mov
scas
mov
imul
cmp
mov
push
lahf
or
lret
pop
inc
or
mov
scas
mov
lock
in
divb
adc
adc
pop
subl
scas
loope
mov
lret
mov
iret
lahf
aas
add
rcll
enter
mov
out
loope
and
pop
enter
dec
icebp
out
movsl
xchg
aas
jg
mov
orl
jno
repnz
fwait
mov
mov
das
scas
mov
movsb
sub
sub
adc
mov
cmp
sbb
loopne
mov
dec
enter
hlt
repnz
fisubrs
test
cld
stc
outsb
xor
xlat
push
test
cli
push
inc
dec
in
ja
inc
lods
cmp
in
scas
into
or
xor
jns
mov
mov
psubb
js
push
out
sub
bnd
out
add
hlt
cmc
jns
mov
fwait
mov
mov
dec
sarb
loopne
repnz
jnp
outsb
sub
stc
scas
xor
fs
and
push
push
lods
lods
xchg
mov
out
xchg
sub
mov
orb
iret
gs
dec
sahf
cmp
push
cld
inc
jnp
scas
aad
fsubp
xchg
sub
cmp
mov
out
pop
into
cmp
push
jg
sub
mov
xchg
push
pop
add
lcall
movsl
cld
jb
jns
inc
jp
sbb
repnz
jg
aam
aas
in
daa
xchg
lods
or
mov
pop
rcl
clc
addl
xchg
xchg
loopne
jp
shr
dec
add
dec
in
and
mov
rolb
add
mov
pop
pop
testl
loop
lret
addl
call
pop
inc
das
ja
lea
jno
jg
pushf
repnz
shr
jle
and
lcall
notl
daa
aas
int
int
ljmp
pop
jns
xchg
cld
mov
pop
push
cmp
aam
fsts
jns
das
pop
mov
popf
outsl
out
jb
jns
pop
push
data16
jecxz
cmpsb
mov
pop
pop
mov
mov
aaa
repz
lahf
push
cmp
popa
mov
cld
stc
add
fwait
xchg
test
gs
lock
cld
pop
pop
adc
xor
mov
add
decb
pop
out
mov
repz
into
cld
cmpsl
inc
push
dec
cmpb
jg
cld
cmpsl
inc
cmp
repz
ja
aas
mov
cli
sub
and
aam
or
or
lret
push
fildll
mov
dec
clc
and
rcll
lahf
jg
jb
push
ret
add
cld
stc
repz
out
push
sub
and
scas
mov
sub
dec
mov
jg
dec
mov
and
jns
mov
mov
mov
pop
rep
jp
nop
mov
xchg
and
cmp
adc
inc
cmp
xlat
rcrb
outsb
mov
clc
repnz
outsl
mov
dec
pop
pop
add
fdivrp
repnz
mov
push
dec
inc
jmp
pop
jns
xchg
and
cmp
cmp
adc
pop
sbb
pop
lahf
aas
dec
mov
jbe
mov
loope
sbb
mov
jns
test
lret
inc
or
mull
jns
xchg
sub
imul
dec
jg
mov
fisubl
das
test
pop
pop
in
cs
xorl
call
out
das
inc
int3
aaa
pop
mov
loop
jb
xchg
push
popf
in
mov
or
lahf
sub
sbb
scas
loope
jl
jg
js
lahf
dec
int
xlat
enter
pop
lcall
aam
jg
add
dec
daa
hlt
in
pop
subb
outsb
jg
cld
stc
fstp
inc
jle
sub
roll
pop
ds
lret
iret
lahf
aas
leave
jmp
aas
mov
nop
arpl
pop
jmp
cmp
inc
push
push
pop
jns
and
mov
call
xor
pop
jns
xchg
mov
aaa
jns
fbstp
fcmove
cs
xchg
push
mov
ret
mov
scas
mov
inc
das
xchg
push
pop
jns
icebp
adcb
pop
dec
push
dec
mov
fsts
jns
ficomps
cmc
in
cmp
shr
pop
jns
xchg
push
andb
fcmove
mov
xchg
push
pop
xchg
or
leave
je
xchg
ja
pop
andnps
dec
and
mov
jl
pop
pop
jns
mov
sub
ret
subl
adc
in
lret
jno
jle
cld
mov
or
cmpsl
inc
sbb
jg
sbb
sti
popf
fdivrl
pusha
and
addr16
add
out
pop
xchg
inc
mov
lret
imul
dec
pushf
xor
scas
adc
fdivrl
or
clc
sub
mov
add
aaa
xlat
iret
push
sbb
mov
aaa
push
test
lcall
pushl
popa
loopne
repnz
cmp
mov
je
pusha
idivb
in
xchg
sbb
ja
in
popa
adc
mov
out
daa
xor
call
repz
adc
adc
aaa
fldenv
cld
stc
mov
fstps
adc
repnz
sub
push
out
lahf
aas
lret
in
sub
dec
mov
in
rep
stos
push
jge
jae
sub
lahf
pop
mov
sbb
cmpsl
inc
rorb
repnz
xchg
out
ror
cmpsb
sub
sti
pop
xlat
jbe
pop
scas
mov
das
jne,pt
bound
out
aas
mov
and
or
aas
cld
inc
js
mov
lcall
dec
das
lahf
aas
jg
int3
popa
std
xorb
xchg
sbb
out
xchg
mov
dec
outsb
aad
xchg
jb
and
lret
shr
mov
sub
movsb
push
fidivrs
dec
xchg
mov
in
jg
or
mov
and
sub
pushf
or
xchg
push
xchg
pop
or
mov
lea
out
pop
jae
stos
pusha
xchg
inc
out
ds
mov
or
lahf
aas
jg
mov
ja
jo
mov
test
decl
pop
pop
push
jo
out
nop
jecxz
xchg
mov
cmp
clc
repnz
in
or
dec
shrb
fisubrl
test
sti
nop
icebp
repnz
into
rol
je
jns
sbb
mov
sahf
sbb
xchg
jl
dec
mov
add
push
iret
lahf
aas
jg
andl
jmp
cld
stc
repz
inc
insl
mov
sbbb
in
mov
cli
jle
imul
frstor
cld
stc
xor
mov
cmpsl
fsubs
jo
jg,pt
xchg
jbe
shlb
mov
mov
mov
pop
jle
pusha
mov
lahf
jmp
add
lret
ljmp
adc
sbb
xor
sti
push
and
scas
mov
fstps
pop
mov
and
sbb
sub
mov
iret
scas
mov
shrl
sbb
shrl
mov
aas
push
push
and
insl
push
aad
inc
dec
outsl
sub
imul
rorl
cld
in
ljmp
outsb
movsl
lock
popa
jl
divl
dec
aas
sbbb
jne
jecxz
aas
jg
into
fbstp
sub
pop
rorb
sarb
xchg
call
adc
scas
cwtl
repnz
mov
rol
sub
mov
jg
scas
mov
xor
xor
filds
iret
aas
movsl
mov
push
jns
in
in
pop
in
jns
test
xor
xchg
dec
ret
dec
mov
ja
pop
lods
push
data16
xchg
scas
mov
sub
aas
jg
mov
pop
pop
mov
subl
jg
fistps
mov
dec
js
rep
cmp
push
das
adc
outsb
jo
outsl
unpcklps
and
sbb
in
rclb
cmp
inc
push
outsl
jg
clc
sti
adc
adc
jl
test
repz
lahf
mov
mov
aam
cmpsb
cli
scas
push
stc
cld
stc
into
xor
rorb
push
mov
jns
popf
das
xor
mov
iret
gs
push
dec
shll
jle
cld
stc
repz
jne
dec
stc
daa
pop
addr16
test
int3
iret
lahf
aas
jg
inc
aas
pop
fcoms
pop
std
out
mov
jecxz
cld
stc
repz
iret
inc
inc
dec
movsl
mov
fistpl
mov
stc
xor
jo
orl
sbb
jno
iret
lahf
aas
fsubl
and
add
mov
out
sahf
aas
mov
mov
fidivrs
repnz
outsb
das
push
into
daa
add
pop
outsl
hlt
cmp
hlt
ret
sbb
inc
sub
pop
jge
fiadds
stc
lret
sub
pop
add
lahf
fprem
lret
es
ljmp
rcr
sbb
fdivr
repnz
cli
imul
cs
loopne
cs
jg
add
pop
or
lds
pop
dec
iret
scas
movsb
das
sub
ja
xchg
ret
in
xchg
or
xlat
adc
cmpb
clc
lret
iret
les
cmp
xor
outsb
stc
repz
push
imul
int3
dec
lds
push
jle
cld
and
fs
fiaddl
rcrb
mov
xchg
mov
jns
je
mov
cmp
repz
adc
pop
jns
test
ja
pop
dec
jge
mov
int
jno
xor
or
scas
sbb
push
mov
xchg
push
pop
jns
mov
scas
xchg
cmpsl
cmp
lock
pop
jb
lods
mov
pop
mov
xchg
in
fnstcw
jle
js
push
fildl
inc
sarl
mov
fs
xor
iret
lahf
movsb
pop
icebp
dec
in
ds
xor
test
mov
jecxz
sub
adc
icebp
das
push
jle
dec
je
push
xor
lods
mov
aaa
jecxz
repnz
iret
dec
inc
stos
adc
cmpsl
jmp
sub
and
jmp
dec
sub
inc
lods
inc
dec
insb
mov
lds
or
pusha
jp
lret
sbb
aam
jns
js
mov
aas
add
mov
sbb
inc
stos
subl
int
mov
jo
adc
pop
int3
inc
jmp
outsb
jb
xorl
iret
mov
mov
mov
out
xchg
pop
or
call
and
scas
mov
pop
scas
movsl
pop
leave
sarl
mov
pop
adc
leave
xchg
outsl
fildll
xor
push
orl
addr16
scas
mov
nop
add
ljmp
mov
push
pop
test
fdivrp
mov
pop
cli
out
mov
xor
mov
inc
scas
in
xor
cltd
jns
pop
iret
lahf
pop
adc
xchg
mov
imul
or
out
sti
cmp
xor
ljmp
outsl
mov
or
jg
out
dec
notb
testb
pop
inc
mov
cwtl
pop
jns
lret
sbb
lcall
sub
mov
jg
pop
int3
sbb
jg
insl
dec
out
lret
loopne
push
into
loop
std
repnz
repz
lret
push
sarb
lds
jl
mov
or
iret
lahf
aas
jg
ds
xchg
mov
repz
jmp
cmp
sbb
mov
cmpsl
enter
out
std
rolb
or
in
mov
mov
push
rsm
cmpl
std
push
fidivrs
push
mov
jnp
pop
xchg
sub
push
pop
jns
punpckhdq
mov
lret
stos
scas
cmc
lret
xchg
mov
or
sub
std
sub
dec
das
dec
cmp
inc
cs
clc
add
jmp
xchg
mov
mov
jl
fmul
cmc
jb
xchg
popf
in
fmull
sbb
jbe
repz
inc
sbb
ss
sbb
std
repnz
test
mov
fimull
fdivr
adc
in
into
cmp
test
push
xchg
fidivrs
cld
stc
outsl
rcll
sbb
sar
jmp
ret
sbb
in
ljmp
push
add
jns
popf
loopne
fwait
bound
adc
push
add
xchg
push
pop
mov
push
lcall
push
pop
jns
stos
push
aaa
jnp
aam
cmpsl
mov
jns
ja
fisttps
dec
ret
sub
jns
xchg
shrb
dec
pusha
lahf
jb
les
rclb
push
sti
ucomiss
ret
mov
xchg
push
icebp
stos
call
sub
cli
in
cmpsb
aam
push
lods
outsb
pop
mov
jae
push
mov
das
mov
insb
das
xor
pop
push
fsubp
xchg
sub
dec
pop
xchg
fistpll
clc
push
xchg
in
sub
loope
cs
outsb
out
clc
repnz
imul
pop
jo
cld
cld
stc
repz
xor
dec
std
add
cmpsl
jns
or
scas
pop
push
fwait
cmp
jg
inc
pop
les
js
mov
repz
lahf
leave
push
push
imul
daa
sub
jg
cld
stc
stos
enter
in
mov
pop
pusha
push
inc
ja
mov
cmc
pop
stos
fdivrl
pop
jns
xchg
xor
movsl
into
jecxz
lret
xchg
dec
jns
xchg
push
xor
addr16
jmp
jmp
xchg
in
push
pop
js
or
sub
cmp
inc
push
push
push
mov
outsb
scas
pop
lea
stc
lods
das
pop
out
fs
sub
ffree
adc
das
dec
push
iret
dec
insb
jg
outsl
icebp
sub
xchg
xchg
mov
and
call
sbb
out
iret
lahf
pop
or
lods
lcall
jnp
test
scas
or
in
aas
mov
fdivrp
inc
popa
subb
sar
ljmp
xor
cs
icebp
push
scas
daa
inc
xchg
out
pop
cld
cmpsl
imul
je
das
in
add
cld
test
dec
cmp
jns
out
and
ds
movsb
nop
dec
jg
cld
stc
icebp
loopne
lods
or
lds
stos
hlt
out
iret
lahf
aas
das
aad
int
shrb
imul
stc
repz
in
inc
jb
mov
in
xor
jg
ret
or
xor
inc
int
lock
fnstcw
test
repz
lahf
aas
mov
call
shlb
ljmp
mov
jnp
xor
lock
movsb
mov
jle
in
lcall
stc
jo
sub
sub
lods
je
inc
xchg
xchg
dec
mov
xchg
dec
xchg
jg
push
sahf
gs
mov
stc
xchg
hlt
enter
push
lock
push
loop
fsub
and
cltd
cld
or
cs
lret
iret
add
lea
pop
cli
add
add
pop
scas
mov
mov
outsb
lcall
repnz
push
lcall
stos
push
sbb
mov
xor
aaa
dec
pop
movsb
sub
mov
sub
cltd
out
add
xchg
clc
mov
shrb
icebp
mov
xor
mov
push
cmpsb
aas
lret
push
out
jnp
jns
lret
mov
lcall
aas
scas
sub
jle
pop
inc
iret
mov
out
inc
mov
popf
int
add
pushf
fucomip
pop
mov
movsb
jg
sti
cmp
push
lods
pop
stc
repz
mov
xchg
lods
ss
mov
cld
mov
pop
test
adc
rclb
data16
xlat
jne
xor
fldl
jmp
scas
out
test
in
cld
stc
and
movsl
cli
and
sub
iret
lahf
aas
jg
ss
outsb
in
adc
pop
jae
call
out
or
mov
jecxz
mov
aas
jg
jnp
pusha
mov
es
mov
mov
std
adc
pop
mov
subb
jge
lahf
jmp
lods
mov
mov
sbb
stc
repz
imul
iret
cltd
lcall
aas
scas
cld
mov
pop
cs
mov
rolb
loop
iret
fcmovnu
mov
repnz
cs
cld
stc
repz
xor
adc
mov
ret
xor
xchg
mov
pop
lock
mov
dec
pop
aaa
dec
mov
dec
dec
cmp
xchg
sub
ds
pushf
lcall
jge
jmp
filds
aas
or
xchg
inc
or
loopne
cmp
repnz
movsl
push
mov
es
mov
lret
mov
jg
scas
pop
push
cmp
lret
lcall
xor
cmc
jp
cli
div
repnz
outsl
js
inc
mov
fsubp
in
out
int
sbb
jle
movsl
jns
xchg
push
cmp
lahf
das
pop
mov
adc
sbb
lret
repz
pop
mov
int
pop
pop
mov
xchg
pop
ss
cld
inc
fmuls
pop
dec
push
and
add
pop
jle
fs
je
mov
xor
xchg
or
or
adc
sti
mov
rorb
lea
push
jge
push
jle
loope
popa
out
lahf
aas
adc
mov
mov
cld
stc
repz
mov
fincstp
call
dec
test
mov
mov
jecxz
psubusw
cld
fildll
ss
sbb
lcall
aad
and
lret
or
lock
iret
lock
push
psrld
or
mov
dec
cmpsl
sub
or
cltd
lahf
cmpsl
rcl
jg
push
mov
jl
jnp
push
adc
lahf
aas
push
add
insl
adc
pop
jns
fstpl
popf
insb
sub
jno
fstl
pop
cs
adc
add
jns
sbb
shlb
lods
xor
sbb
int
or
lret
pop
inc
outsl
into
loope
and
das
scas
mov
and
clc
cmp
jg
mov
ja
testb
aad
fcompl
das
lahf
pusha
add
inc
dec
scas
repnz
out
xchg
pop
push
adcb
jg
addb
fstpt
arpl
out
mov
adc
rol
xor
stos
pop
pop
icebp
repnz
data16
cmpsb
mov
or
jmp
je
xchg
jp
push
ret
push
stc
repz
mov
rolb
out
outsl
loopne
jg
cld
jne
mov
push
sub
dec
jle
push
jno
lahf
aam
stos
mov
shll
roll
push
pop
jns
pop
add
add
gs
aam
and
aas
aas
ret
into
sbb
jnp
aaa
push
dec
scas
aaa
out
push
lret
or
fwait
in
outsl
or
repnz
cli
cmp
imul
lretw
xchg
das
scas
bound
popa
scas
ss
pusha
jns,pt
cmpsl
icebp
jno
aaa
jg,pt
repz
nop
push
pop
pop
in
push
pop
push
push
xor
pop
or
pop
jns
pop
ret
jb
inc
enter
sub
in
or
mov
stos
nop
scas
jg
cld
stc
cmc
push
lods
into
fcmovb
out
gs
fidivrs
out
lahf
aas
subl
mov
in
dec
addr16
cld
stc
repz
jno
push
xor
test
push
cmp
jle
xorb
xchg
ret
inc
in
loopne
fmul
pop
and
push
pop
jns
aaa
mov
lahf
push
rcll
sbb
test
sub
xchg
sbb
adc
andl
sahf
cmp
aas
sbb
enter
icebp
mov
lret
mov
rol
hlt
dec
or
repz
fidivrl
call
idivb
jg
cld
push
and
ret
ljmp
arpl
iret
lahf
daa
or
movsb
cmp
in
cmpsl
fnstsw
stc
insl
adc
das
sbb
out
cmp
push
mov
or
ret
sbb
addr16
push
pop
jo
scas
sti
cs
dec
test
inc
jns
lret
popf
shlb
cmc
inc
xor
cld
xchg
clc
add
inc
pop
xor
stos
sbb
repnz
mov
lock
adcb
mov
in
lret
pslld
mov
jae
xor
incb
mov
in
fisubrl
out
push
iret
scas
lret
add
in
in
lret
out
in
mov
popa
xor
out
call
push
ret
enter
hlt
das
xor
adc
and
push
es
dec
pop
icebp
or
mov
andb
jmp
mov
pop
out
js
or
mov
insb
jb,pn
mov
repz
pop
hlt
xor
rclb
xor
add
ret
cmpsl
stos
mov
pop
cmpsb
nop
push
int3
adc
into
sbb
test
loope
push
jmp
sbb
das
push
pop
jns
xor
popf
mov
ds
decl
int
jl
lahf
out
xchg
push
mov
aad
cmp
stc
repz
mov
cli
imul
lahf
aas
jg
cld
jns
jg
push
sub
ds
fldl
lahf
xchg
xor
fdivrs
inc
call
outsb
movsl
sub
jg
icebp
iret
ud2
mov
dec
roll
out
iret
aam
aad
lahf
pop
inc
dec
push
and
pop
dec
js
ss
xchg
imull
jge
push
or
mov
cmp
cmp
jg
add
icebp
mov
dec
ret
les
add
movsl
mov
pop
lcall
jle
std
iret
aas
xchg
jno
lahf
aas
pushl
xlat
es
subl
iret
dec
fwait
dec
leave
xlat
sub
ljmp
movsl
icebp
shrl
idivl
sahf
cwtl
mov
xchg
push
pop
out
pop
test
mov
or
inc
cld
jb
adc
out
loopne
xchg
out
cmp
cld
dec
dec
jle
fs
mov
mov
js
mov
xchg
push
fs
in
xchg
fldt
in
mov
ja
pop
jae
aam
in
or
cltd
mov
cs
push
pop
jns
mov
shll
das
xchg
stc
scas
mov
push
sahf
pop
in
mov
mov
sub
mov
inc
sbb
sub
xor
jns
jp
xor
outsl
cmp
xor
in
push
lret
sbb
adc
popa
xchg
push
fdivrp
fwait
mov
loop
jb
fstpl
push
fcomip
mov
icebp
fidivs
inc
mov
push
fidivrs
jl
jg
sahf
push
imul
imull
aas
pop
in
lock
jno
shll
push
mov
les
test
pop
jmp
mov
stos
push
div
out
scas
mov
sub
das
out
jno
call
nop
sub
or
and
xor
repnz
imul
mov
int3
jp
cmp
dec
mov
mov
jns
lret
pushf
sub
ret
mov
cmp
adc
stos
outsl
mov
mov
out
cmp
and
inc
movsb
inc
pop
pop
out
ds
fldenv
sbb
pop
mov
subl
mov
sbb
sahf
cmpsb
push
jnp
repnz
scas
orl
fmull
out
fbstp
scas
mov
pop
xchg
mov
nop
cwtl
out
repnz
aaa
pop
sbb
filds
xor
sarb
sub
jnp
sub
lea
je
or
popa
mov
in
push
pop
xor
outsb
dec
and
pop
jns
loop
mov
lcall
or
wrmsr
mov
and
sub
pop
pop
outsb
xchg
xor
inc
jo
ds
pop
push
repz
std
adc
aas
adcl
sbb
jns
push
lods
add
mov
jns
lahf
out
fcomp
jge
fs
rclb
daa
in
nop
outsb
xchg
mov
lcall
clc
sbbl
repnz
jle
adc
in
inc
sub
add
out
xchg
sub
fs
sti
push
sti
push
into
sub
bound
jg
adc
addr16
lock
sti
repnz
fwait
mov
xchg
lret
pushf
jge
cld
cmpl
or
aas
rorl
iret
lahf
aas
mov
inc
push
aas
lock
jecxz
rol
js
aas
pop
jmp
xchg
cli
repnz
ds
stos
fbld
std
cli
cld
stc
repz
aaa
mov
mov
add
int
outsl
ret
aas
and
add
sbbb
out
xchg
lahf
aas
scas
ror
mov
aad
fnstenv
test
cmp
stos
dec
jne
test
insb
add
and
cmc
jae
lcall
xchg
push
pop
jns
sub
jp
mov
cmp
in
jbe
push
rcl
jp
push
cltd
enter
pop
jns
xchg
lods
loope
repnz
pop
adc
adcb
push
pop
xchg
ljmp
xchg
cs
xchg
push
pop
jns
sbb
shll
lds
in
cmc
lret
in
push
test
jge
arpl
xchg
jns
or
mov
jnp
xor
push
ret
mov
shll
dec
cmp
repnz
mov
inc
push
cltd
push
sub
mov
inc
sbb
cld
pop
pop
push
jge
clc
loope
repnz
xchg
into
jae
ljmp
fadds
pushf
xchg
repnz
rcrl
add
cmp
push
lea
xchg
inc
adc
add
dec
ja
mov
stc
cmpl
mov
mov
jg,pt
cld
inc
and
lock
and
cmpsb
mov
iret
pop
sbbb
subl
lret
subb
or
adc
jg
push
inc
jmp
stos
sub
shl
out
fwait
push
ss
fwait
imul
dec
jle
jne
dec
xor
cld
cld
mov
fidivrs
aad
or
cld
stc
push
jmp
mov
out
int
sub
hlt
push
pop
add
mov
jns
xchg
ja
iret
or
and
xor
pop
cmpsl
lds
lret
xchg
push
pop
pop
adc
cli
mov
mov
pop
jns
ret
push
mov
and
ficoms
pop
push
pop
jns
xchg
mov
adc
out
xor
mov
jns
xchg
push
xchg
push
cmpsl
rcr
cltd
push
dec
das
jo
in
push
pop
stos
lret
icebp
in
sbb
cltd
pop
das
push
pop
jns
and
mov
cs
jne
inc
das
jl
add
in
mov
out
dec
fwait
out
xchg
push
aas
mov
dec
into
test
add
lahf
subl
inc
cs
js
std
jge
stc
mov
mov
mov
in
jnp
sbb
and
pop
push
mov
push
ds
mov
arpl
cmp
fmul
shll
push
fdivrp
jb
lds
gs
mov
das
adc
push
jb
in
mov
in
mov
repnz
fiaddl
adc
scas
jne
pop
xchg
mov
sub
shlb
jg
scas
mov
mov
mov
jmp
mov
int
movsb
sahf
cmpsb
fimull
sub
repnz
mov
sbb
orl
mov
cltd
and
cli
fdivr
fwait
in
push
pop
dec
subb
stos
std
pop
inc
mov
mov
pop
fucomip
sbb
jnp
sub
jns
insl
popa
cmp
aas
xor
and
lret
pop
ja
jno
les
test
mov
iret
xor
in
pop
sub
xchg
and
cmc
xchg
fisubs
icebp
lret
out
lahf
pop
std
insb
lods
dec
frstor
call
test
and
push
ja
lcall
test
aas
jg
rcrl
lcall
out
ror
into
sarl
outsb
cmp
loopne
mov
stc
repz
ljmp
loopne
das
lahf
pop
dec
in
mov
call
pusha
lret
out
rol
jle
push
pop
ret
cs
divl
and
sub
outsl
in
in
in
push
pop
add
dec
lahf
fwait
add
sbb
xor
into
mov
addr16
scas
xchg
mov
xchg
push
scas
pop
inc
dec
fdivl
jl
jle
cld
cmp
fdivr
ds
out
in
dec
movsb
pop
movsl
in
lahf
aas
stos
pop
lret
std
push
inc
repnz
lahf
or
outsl
jnp
aam
lock
or
xor
jb
loope
cld
stc
mov
xor
xchg
aas
mov
shll
sub
jns
lahf
pop
mov
loopne
mov
std
add
jb
dec
xchg
bound
fidivrl
pop
and
lret
mov
sub
inc
outsl
ret
aam
lret
pop
adcb
jecxz
and
xchg
mov
les
fld
in
dec
adc
mov
sbb
cmp
sti
dec
adc
lret
cmpsl
fbld
xchg
xor
enter
scas
mov
push
dec
in
dec
adc
pop
repnz
clc
in
dec
std
arpl
sub
xchg
push
fdivrp
and
jecxz
dec
cmpb
daa
lods
sub
add
rorl
mov
cld
into
jns
inc
lea
mov
sub
fldcw
iret
aam
cmp
mov
push
push
aas
repz
cld
repnz
push
push
adc
outsb
cwtl
insl
leave
inc
sub
das
lock
inc
mov
mov
ror
out
movsl
cmp
cmp
sbb
push
dec
in
sbb
push
pop
aad
inc
xchg
dec
pop
xchg
push
pop
jns
flds
ret
push
add
jg
dec
in
xor
hlt
ljmp
aam
mov
push
je
stc
repz
jle
sub
arpl
jg,pt
push
and
pop
sarl
lock
push
fdivrp
or
int
scas
pop
hlt
stc
mov
arpl
in
pop
clc
and
push
sub
outsl
in
push
hlt
mov
fiaddl
sahf
mov
sbb
je
stc
rep
adc
xchg
sahf
mov
add
jg
cld
dec
nop
xchg
pop
xchg
call
das
and
mov
jmp
stc
repz
es
jo
pop
ret
lret
xlat
jno
pop
cwtl
dec
pop
jle
adc
or
mov
lahf
lahf
aas
or
outsl
idivb
test
popa
loope
pop
jle
mov
fbld
jbe
jbe
cmp
jg
mov
push
fsubr
mov
rcrb
push
push
jecxz
jns
xchg
mov
adc
cld
pop
inc
fwait
jb
out
jb
xchg
push
mov
gs
repz
pop
or
sub
cld
inc
lods
sbb
add
test
push
cmp
push
add
rcrb
das
mov
lahf
cld
cmc
push
int3
stc
repz
dec
jg
les
lock
jg
mov
inc
lods
je
pop
iret
cmc
out
and
sbb
inc
mov
jns
in
dec
adc
adc
jb
sarb
aas
jg
add
cmp
cmp
mov
aaa
in
mov
pop
pop
and
push
fimull
clc
pop
arpl
lret
out
gs
mov
add
movsb
mov
iret
and
sahf
aam
xchg
jecxz
lcall
sbb
cwtl
out
mov
cs
push
jl
lret
sub
repz
ljmp
push
lods
aas
jg
cld
mov
sub
in
cmp
das
lahf
xor
mov
pop
in
jp
jmp
out
adc
cmp
sub
repz
loopne
out
loop
inc
fs
adc
ja
jle
pop
cmpsb
aas
pop
out
gs
and
in
cmpsl
pop
pop
das
push
add
ds
fsub
sbb
in
addr16
subb
xchg
loop
pushf
jl
inc
fists
sub
mov
pop
out
in
cmc
pop
in
dec
int3
sbb
int3
stc
cmp
mov
jge
jb
push
je
scas
in
idiv
enter
ficomps
dec
mov
push
pop
jns
push
lret
loopne
mov
les
jmp
xchg
and
movsb
lds
inc
mov
je
push
jl
arpl
sub
sahf
outsl
add
test
xchg
ja
pop
or
imul
ret
mov
pop
jns
cmp
inc
out
xchg
mov
mul
xchg
xchg
push
jmp
jnp
mov
push
icebp
jg
sbb
lahf
push
mov
sahf
scas
mov
ret
sub
negl
hlt
sub
push
repnz
lret
sub
push
dec
pop
xor
das
scas
mov
leave
aas
push
gs
xor
pop
test
das
mov
sub
mov
in
repz
jle
das
je
cwtl
jb
and
repnz
aas
push
dec
iret
test
scas
push
xchg
into
arpl
fsts
pop
pop
jns
inc
adc
xchg
fnstcw
sub
daa
sbb
ror
out
into
push
dec
jne
jle
cld
stc
fildll
xor
mov
lds
push
dec
jnp
jle
lahf
pop
or
dec
pop
out
inc
das
sub
iret
xor
scas
aam
adc
sbb
cld
adc
iret
pop
adc
and
push
mov
leave
fldl
xchg
push
fiadds
call
jmp
pushf
jns
shrb
mov
cmp
in
mov
clc
std
xchg
aas
pop
in
mov
mov
cmp
vmaxsd
das
scas
jmp
pop
jecxz
das
rcll
lahf
add
sub
fistpl
scas
push
stc
jp
cmp
adc
jnp
pop
pusha
mov
js
inc
popf
or
mov
xor
out
into
mov
and
pop
push
or
sub
div
lret
xchg
pop
mov
stos
iret
std
repnz
clc
pop
rcr
pop
xchg
xchg
push
popa
in
repnz
mov
in
mov
stc
add
mov
xchg
mov
scas
mov
rorb
dec
outsb
frstor
cmc
out
out
pop
mov
xor
or
mov
fwait
adc
mov
nop
outsl
mov
fs
xchg
push
fisubrs
add
and
adc
pop
xchg
mov
push
sub
scas
cld
scas
push
add
in
sub
lcall
pop
clc
div
mov
and
xor
adc
stc
repz
popa
and
cs
fs
cld
jg
and
adc
sbb
int3
out
lahf
aas
js
ret
mov
or
repz
ret
fldenv
pop
fisubl
subl
out
push
jg
aas
mov
xor
out
rorb
sbb
popa
sub
cld
stc
mov
out
mov
icebp
flds
jno
xor
lret
iret
lahf
aas
cmp
adc
aaa
hlt
cmp
ja
xchg
ja
loope
dec
lret
movsl
mov
push
pop
jns
sbb
insb
jno
adc
aam
ljmp
lcall
hlt
cmpsl
hlt
xchg
dec
sub
cmp
ret
in
sub
pop
cmp
jo
push
stc
cld
leave
inc
xor
movsb
sbb
inc
lahf
stc
repz
cmp
outsb
fnsave
mov
aas
jg
cld
and
or
ss
fidivrl
xchg
icebp
into
mov
dec
push
jge
testl
mov
mov
fdivrl
lahf
aaa
mov
lret
lahf
mov
sub
je
aas
cmp
repz
ljmp
sbb
pop
scas
push
dec
decb
stc
sub
pop
stos
mov
insb
aas
mov
ds
lock
ljmp
out
sub
lret
enter
xchg
ja
ljmp
rorb
push
pop
jns
jecxz
xor
ss
lret
stc
dec
jge
in
mov
and
mov
sahf
jp
pop
jg,pt
imul
les
outsb
nop
add
cwtl
inc
jecxz
mov
std
repnz
lahf
jg
ja
mov
cli
add
mov
adc
or
mov
inc
outsl
lahf
pop
dec
jg
fs
mov
enter
xchg
pusha
sti
sbb
out
adc
mov
in
iret
lahf
lea
mov
clc
xorb
ljmp
sahf
jo
add
dec
cmc
in
shlb
mov
lock
push
aad
mov
mov
jp
pop
mov
fxch
js
fiadds
lret
xchg
ror
sub
imulb
push
fsubp
inc
repz
push
inc
incl
pop
xlat
jb
adc
stc
cmp
dec
or
and
in
ror
mov
iret
aas
lea
cmpsb
std
pop
sti
dec
push
cmp
cli
in
out
cmp
mov
repz
jle
je
mov
lea
jg
cld
notb
cmpsb
cmp
jne
bound
test
out
lahf
cmc
push
insl
stc
outsl
mov
lret
xor
aad
jg
cld
stc
in
aam
insl
mov
jnp
xor
mov
das
inc
xor
es
ret
ljmp
mov
pop
aas
push
cld
stc
repz
outsl
pop
inc
xor
pop
sbb
fsubs
mov
lock
sub
cwtl
fidivs
in
xchg
clc
testl
popa
in
rorb
mov
out
pop
jb
dec
ret
nop
cmpsl
dec
iret
jecxz
sub
insb
jbe
out
or
jle
xor
add
mov
out
hlt
jmp
inc
iret
cli
xor
pop
mov
dec
mov
lahf
cld
das
jns
pop
sbb
jmp
clc
in
xchg
je
pop
push
jp
jnp
sub
cmp
cld
inc
outsb
and
cmpsl
mov
rcl
aaa
xchg
iret
lahf
aas
addr16
push
mov
fstps
movsb
sub
out
xchg
jge
fistpll
ror
out
xor
jae
call
sub
push
push
or
movsb
cli
repnz
scas
iret
mov
mov
lds
repz
scas
and
dec
popa
cmp
cld
cld
std
in
shll
iret
lahf
aas
mov
add
out
jge
mov
in
mov
push
imul
lret
ljmp
cli
fildll
ja
xchg
insl
push
push
and
and
cld
stc
add
sub
idivl
frstor
subl
xchg
jb
xorb
das
inc
xor
sub
cmp
mov
dec
mov
cld
jb
imul
or
pop
sbb
repz
ret
rorl
mov
cmp
cld
jne
inc
jns
push
add
sub
test
xchg
lahf
mov
sbb
repnz
out
inc
addl
jg
cld
stc
sbb
inc
sub
fs
xlat
push
cmp
dec
out
lahf
aas
jge
cmpsb
jle
ficoml
les
push
stc
stc
repz
stos
mov
sub
jo
aaa
xchg
jg
inc
mov
adc
inc
jne
mov
out
lahf
aas
loop
mov
roll
lods
cld
stc
repz
or
pop
and
mov
out
add
adc
test
lahf
aas
jg
fsub
xlat
dec
inc
dec
cltd
subb
shl
repnz
in
out
inc
icebp
scas
pop
pop
mov
or
out
lret
out
pop
cmp
dec
inc
mov
hlt
jae
cli
jo
mov
psrad
dec
scas
pop
ds
and
jle
pushf
jl
jg
cld
stc
mov
pop
cld
mov
push
dec
test
lods
lods
jg
aas
inc
jl
cs
out
lret
iret
movd
mov
sarb
loope
fists
cmp
test
mov
sbb
out
mov
scas
mov
or
sbb
out
xchg
mov
lcall
out
insl
in
sub
lret
in
fiaddl
cmpsb
stc
sub
lahf
lret
and
int3
or
mov
sbb
jbe
cmp
insb
mov
add
jl
js
aas
or
std
std
jb
cmpsb
inc
fmull
dec
test
mov
clc
in
imul
adc
cld
lret
pop
ss
mov
pop
cmp
dec
cld
or
rorl
stc
push
cmp
dec
adc
ficoml
call
lret
xor
lret
popf
xchg
fwait
iret
jg
sbb
insl
stos
push
lcall
push
mov
shll
xchg
inc
jecxz
cmp
out
push
stc
movsl
xchg
mov
andnps
dec
mov
lret
cmp
add
mov
das
scas
push
clc
push
jae
inc
lcall
xbegin
ja
out
scas
shl
inc
cld
stc
repz
mov
outsb
rep
daa
hlt
adc
fdivrs
push
pop
iret
lahf
aas
jg
ret
popa
sbbl
fs
repnz
xchg
mov
pop
mov
sub
leave
xlat
iret
lahf
aas
leave
mov
and
add
cld
stc
repz
clc
imul
loopne
lods
fwait
cmp
stc
mov
bnd
scas
lods
dec
mov
mov
je
stc
ss
call
push
pop
jns
outsl
lahf
pop
je
in
sbb
push
aam
mov
xchg
sub
pop
push
ficompl
push
das
insb
xchg
dec
ljmp
lahf
xchg
add
xor
inc
mov
cmp
cmpsl
jo
pop
imul
cmp
loopne
stc
repz
arpl
lahf
pop
je
aas
jg
sbb
or
inc
dec
dec
push
sarl
lret
fnstsw
das
xchg
push
xlat
mov
pop
sbb
push
pop
jns
leave
sub
imul
in
pop
push
push
push
cld
inc
shrb
icebp
in
mov
out
xchg
imul
out
lret
iret
rclb
int3
adc
out
jle
cli
out
mov
cmp
and
int
pop
sub
rolb
jb
insl
lcall
xchg
frstor
xor
cld
stc
repz
sahf
std
into
hlt
mov
push
ja
xor
aas
jg
scas
xchg
mov
ja
scas
xor
or
jg
mov
push
repnz
enter
push
imul
inc
jl
in
fsts
and
pop
mov
or
jns
outsl
cmp
lret
sub
push
sub
pop
nop
cmp
aas
jg
dec
fiadds
mov
sti
adc
jns
out
lahf
cltd
mov
cmp
adcl
and
and
leave
push
mov
sbb
hlt
repnz
ficoml
aas
je
jle
sti
xor
xlat
adc
pushf
out
xchg
cld
stc
add
inc
into
pop
inc
fdiv
lret
and
std
ja
call
dec
pop
cmp
or
out
loopne
out
adc
repz
bswap
mov
xor
ljmp
fcmovbe
mov
push
je
sbb
mov
pushl
jns
fstpl
cmp
into
jmp
cmc
and
sahf
cmpsb
enter
xchg
pop
popa
mov
push
pop
sub
xchg
dec
mov
inc
ljmp
adc
cld
stc
repz
sarb
aas
mov
cmp
in
test
xlat
xor
jl
jnp
xchg
aas
call
mov
repz
scas
into
or
stc
sbb
iret
mov
insl
jg
cld
stc
adc
and
sbb
jecxz
jne
iret
lahf
aas
mov
ret
ja
ficoms
cld
stc
repz
xor
dec
cmpsl
int
xchg
ja
jle
pop
sbb
call
or
push
pop
jns
mov
cmpsb
mov
mov
data16
jb
xchg
repz
mov
xor
test
sbb
aad
xchg
sbb
scas
lret
cwtl
mov
mov
mov
sahf
adcb
xchg
fucomip
cwtl
jno
out
das
out
xlat
ret
aad
or
mov
repnz
repnz
cmp
andl
les
or
and
lcall
or
lret
push
push
inc
mov
div
or
aam
fsubs
sbbb
sti
pop
imul
push
cmpsl
roll
push
std
dec
jae
movsb
fistpll
popf
ret
repnz
mov
stc
mov
mov
shll
out
int
xor
ja
and
sub
inc
jnp
jp
and
movsl
mov
outsb
pop
fidivl
lahf
outsl
sbb
jg
cld
stc
pop
movsl
jo
stos
mov
mov
jg
mov
cwtl
dec
cmpsb
scas
cmp
in
lahf
aas
dec
pusha
stc
cmp
cli
scas
mov
scas
mov
das
fstps
and
jp
cmp
in
sub
fsubp
lea
or
mov
jb
dec
out
pusha
jp
aas
pushl
sbb
mov
inc
and
test
add
and
pop
stc
clc
mov
jns
outsb
addb
dec
xlat
repnz
imul
inc
cmp
inc
or
adc
and
icebp
lret
xchg
ja
cmp
inc
xor
ret
lahf
aas
mov
jo
mov
inc
xchg
sbb
xchg
scas
mul
pop
out
and
movsb
mov
subb
pop
out
js
mov
outsb
jno
lret
mov
cld
stc
repz
stc
dec
lds
inc
rcrl
inc
iret
lahf
aas
jg
ja
pushf
add
mov
ss
int3
pop
pop
cmc
repnz
rcrl
mov
add
inc
leave
add
cld
stc
repz
add
sbb
test
push
imul
sti
add
jle
fisttpl
and
pop
fildl
pop
jns
loop
sarl
or
fstps
mov
xlat
std
jb
xchg
test
pushf
inc
sbb
shrb
inc
into
mov
add
xchg
sbb
jmp
and
mov
pop
jle
pop
lods
aas
push
lret
jle
push
inc
hlt
les
cmp
and
jle
repnz
mov
xchg
rorl
xchg
and
sub
and
lret
xor
call
sub
jg
pop
ja
sti
xor
cmp
rcrb
loop
pop
movl
dec
js
and
out
cmp
jge
jle
ds
pop
setnp
adc
lret
lret
fs
out
in
movsl
cvtps2pi
sub
out
into
xor
lahf
aas
jg
out
repz
mov
dec
loopne
cltd
jne
jge
mov
scas
mov
popa
das
insb
pop
repnz
dec
cmp
inc
jp
repnz
lret
or
sbb
lret
cmp
cmp
les
and
adc
xchg
stc
repz
or
or
jle
das
mov
lahf
aas
jg
shl
add
pop
mov
aaa
lea
iret
fs
arpl
jbe
movsl
stc
int
adcb
ja
out
jae
ret
shll
push
pop
jns
and
jb
ret
arpl
mov
std
ss
mov
aas
and
jnp
xchg
jns
dec
push
arpl
mov
adcb
mov
dec
inc
call
pop
ljmp
out
jns
out
das
pop
int
dec
mov
mov
in
in
push
pop
and
sahf
jns
adc
and
out
icebp
xor
enter
mov
repz
sub
int3
sbb
aas
jmp
jle
jae
mov
add
and
out
lahf
xchg
cmc
push
icebp
jnp
aad
lods
push
iret
xchg
mov
cld
stc
stos
movsb
lock
popa
inc
and
jecxz
iret
mov
xor
repz
push
mov
xchg
mov
roll
jg
pop
les
mov
jb
mov
ja
jmp
pavgw
pushf
mov
xchg
lahf
dec
ret
pushf
cmp
jg
push
loop
xchg
sbb
sbb
or
cli
ficompl
ja
ljmp
lret
and
and
fidivl
push
jbe
push
inc
cmpsb
mov
pop
jle
cld
jno
lock
das
pop
or
xor
adc
ja
push
jle
mov
cld
out
or
in
test
movsb
arpl
xchg
mov
push
iret
bound
mov
dec
or
lret
xchg
push
pop
xchg
pop
movsb
mov
jmp
cmp
notl
stos
inc
nop
jecxz
xor
xchg
push
pop
mov
jmp
ror
or
daa
mov
ffreep
inc
fldenv
push
out
cli
popl
push
cmp
lret
jb
std
mov
outsb
daa
add
repnz
lahf
fs
cld
stc
adc
outsl
pop
sar
outsb
shr
sbb
stos
mov
lahf
aas
jg
es
adc
das
js
hlt
push
repz
xor
sub
lret
cli
fistpll
jg
cld
cmpsb
mov
arpl
mov
mov
iret
lahf
add
imul
out
mov
cs
fnstenv
lahf
aas
jg
sub
lods
mov
mov
jge
adc
mov
mov
mov
jl
mov
xchg
jbe
jp
mov
lahf
clc
das
sbb
mov
jle
inc
cmpsl
mov
dec
xor
sahf
fwait
or
lret
mov
lahf
gs
lods
dec
outsb
paddb
repz
test
xorb
lret
adc
sub
loop
jne
mov
aas
mov
xchg
sbbl
out
jle
enter
or
mov
popa
sahf
jl
cld
stc
adc
clc
xchg
leave
icebp
jmp
dec
pop
jne
mov
in
ja
inc
shll
out
xchg
and
insb
test
pop
jns
xorb
ds
or
push
jg
sbb
jmp
out
mov
loopne
out
lahf
leave
add
popf
fstpl
dec
stos
arpl
mov
imul
popa
push
sub
xchg
mov
jb
push
inc
scas
mov
shlb
imul
mov
stc
and
stc
and
sbb
mov
lds
cmpb
adc
jg
stos
aad
lahf
dec
lods
sti
mov
sbb
in
pop
je
inc
mov
pop
xor
jns
xchg
ja
cmp
mov
fnstcw
mov
clc
aaa
mov
push
pop
iret
scas
cltd
insb
mov
cld
adc
push
mov
pusha
std
cmpsb
roll
aas
sub
mov
stc
repz
cmpsb
inc
lret
cmp
mov
or
xor
cld
mov
dec
ret
mov
mov
add
out
lahf
pmulhuw
sti
sbb
movsl
and
stc
cmpsl
xchg
jne
sbb
and
fildll
pop
test
out
fbstp
cld
insl
pop
xor
mov
stc
pop
or
popf
jge
dec
or
loope
repnz
or
push
filds
xchg
push
pop
and
mov
cmp
push
fdivrp
jb
decb
fistpll
popl
loopne
das
xchg
pop
jns
xchg
icebp
in
mov
lds
sbb
jns
xchg
push
xor
popf
sbb
inc
cmc
xchg
in
push
pop
push
rcrb
not
fistpl
push
pop
jns
add
or
sbb
cmp
push
pop
jns
fnstcw
lahf
nop
in
mov
or
pop
rclb
xchg
mov
in
inc
mov
repz
xor
pop
mov
lret
mov
mov
inc
jae
aam
jns
pop
add
inc
and
jne
subb
cltd
in
iret
lahf
jp
nop
mov
xor
ja
iret
xor
inc
mov
mov
popl
movb
jecxz
add
or
testb
out
cmp
aas
sbb
or
add
push
mov
mov
xor
mov
xchg
mov
push
loop
pop
jle
jle
mov
mov
andl
mov
clc
mov
inc
cld
iret
lahf
aas
jecxz
xchg
stos
int3
daa
or
cld
stc
repz
scas
cwtl
cmp
pop
das
cmp
mov
xchg
ja
jg
jns
push
mov
pop
pop
jns
mov
divl
lahf
aas
adc
fdivp
sbb
lock
xchg
es
aas
int3
dec
repnz
dec
add
sahf
jo
jle
aas
pushl
aam
push
lcall
cmp
out
lahf
icebp
cmp
mov
and
out
in
jns
repnz
add
cs
xlat
cwtl
jae
mov
pusha
mov
movsl
mov
lcall
adc
sub
sbb
sarl
in
insl
push
pop
add
test
jmp
xor
xchg
test
adc
aas
aas
ds
cmc
dec
fsubl
and
in
push
pop
psubw
mov
add
push
iret
or
mov
sarb
add
or
gs
scas
mov
mov
ja
xchg
je
adc
cmp
push
out
xchg
outsl
out
pop
std
cwtl
sti
mov
fs
outsb
clc
pop
sbb
push
mov
mov
in
bound
repz
out
in
ret
jle
rol
lret
pop
sub
in
lea
sarl
and
and
pop
ds
xchg
xchg
movsb
push
mov
lret
out
adc
and
repnz
cmc
hlt
xchg
sub
sbb
test
out
mov
mov
jae
dec
jl
div
out
aas
cs
lcall
pop
push
popf
mov
out
jbe
iret
scas
xlat
adc
mov
aaa
arpl
mov
bound
out
lret
js
aam
cmp
xlat
add
mov
cld
stc
mov
stos
mov
mov
shll
pop
data16
sarb
scas
xor
adc
lds
xchg
aaa
cmp
fdivl
out
fiaddl
out
shll
cli
inc
lret
scas
jmp
insb
icebp
xchg
iret
add
cmp
in
jae
imul
popf
mov
add
lret
sub
pop
push
cmc
lret
imul
nop
ficomps
cmp
mov
jbe
insb
sbb
mov
jno
out
xchg
mov
mov
test
cld
mov
xor
rorl
pop
jb
sub
in
shlb
lret
aas
inc
inc
xchg
ljmp
orl
or
adcl
stc
mov
imul
call
push
cmp
out
lret
sub
add
and
outsl
call
cld
adc
jne
bnd
rcrl
cmp
pop
xchg
cld
stc
add
into
testl
js
lahf
aas
jg
adc
pop
add
xchg
sbb
pop
test
aas
das
bound
sub
mov
ss
xchg
mov
cmp
and
and
ss
fmulp
inc
leave
ret
mov
and
loopne
add
icebp
jb
pop
lahf
sub
lcall
iret
lahf
pop
dec
and
lods
push
dec
pop
and
repnz
or
repz
divl
in
push
pop
push
pop
jge
ds
add
pop
jns
int
rcrb
clc
ss
xchg
ja
outsl
jbe
je
fbstp
imul
movsl
xor
ja
in
jae
xor
mov
xor
adc
lret
cmpl
clc
cmpsl
std
iret
pop
or
divb
dec
in
push
pop
xlat
test
hlt
loopne
fwait
gs
fwait
ja
pop
jns
aad
daa
jg
std
popa
pop
inc
xlat
iret
ret
xchg
out
das
lret
mov
daa
ret
stc
pause
cmp
dec
lcall
test
inc
ret
cmpsb
dec
mov
lcall
inc
outsl
push
rcll
lret
mov
call
xchg
mov
fisttpll
fs
notb
or
sbb
iret
sub
mov
adc
add
xchg
std
daa
cmc
bnd
xchg
loop
add
iret
scas
add
lods
push
cli
lock
push
inc
setl
ss
dec
pop
faddp
mov
adc
das
sbb
rolb
pop
or
inc
dec
mov
out
mov
loope
pop
out
fistps
ret
mov
repnz
sbb
sbb
pop
push
into
call
push
fistps
xchg
cli
in
out
outsb
arpl
fnstsw
cld
push
bnd
lods
sbb
jp
jns
pop
imul
sbb
subb
imul
repnz
pop
test
enter
daa
aas
lret
sub
mov
mov
lock
aaa
sarb
mov
les
jp
push
scas
mov
lcall
mov
int
mov
cmp
nop
sub
cltd
dec
xchg
aas
jg
outsb
fstps
xlat
mov
xor
mov
sahf
push
iret
push
adc
mov
mov
lcall
ret
hlt
outsb
push
and
sub
lods
jbe
in
mov
mov
mov
push
mov
mov
sbb
lahf
scas
xchg
push
sub
sbb
pop
mov
das
mov
jg
loope
sub
rcll
sbb
pushf
fists
jns
or
gs
pop
mov
adc
in
mov
stos
popl
xor
inc
or
ja
fcompl
lea
mov
std
mov
xchg
lea
adc
divl
lret
sub
das
gs
cmp
pop
lock
insb
push
push
lret
sub
mov
jl
inc
into
jnp
mov
lock
mov
xor
cwtl
mov
clc
imul
mov
push
stc
and
lahf
aas
jg
and
xor
jmp
cld
stc
repz
lcall
mov
push
mov
dec
test
lcall
sarb
lods
xchg
mov
and
jns
lret
into
pop
mov
and
and
aas
lcall
inc
inc
popf
iret
fdivl
sahf
dec
add
les
hlt
sbb
cld
stc
repz
add
mov
cwtl
inc
push
xchg
or
mov
lahf
aas
jg
inc
decl
repnz
fcoml
sahf
adc
repz
lret
dec
outsl
fstcw
mov
cld
stc
sbb
inc
orb
insb
xchg
fstl
andb
xor
dec
imul
stc
cmp
mov
jns
xchg
push
xchg
xorb
mov
jne
int3
in
push
pop
xor
xchg
pop
inc
cmp
pusha
out
mov
pop
mov
push
cmp
inc
lock
xchg
das
add
push
jmp
cmp
jecxz
mov
sti
in
sub
mov
xchg
push
jle
add
sub
push
cmp
lock
fsubrs
sub
sarl
lock
mov
stos
dec
lret
lahf
aas
adc
add
sub
fistpll
mov
dec
dec
test
stc
cmp
cs
fidivs
es
mov
in
push
fimuls
sbb
imul
dec
add
pop
mul
inc
or
jge
int
repnz
dec
sbb
mov
xor
jns
outsl
loop
daa
mov
mov
in
push
pop
jg
xchg
pushf
mov
inc
in
dec
enter
jge
aaa
dec
stos
sub
mov
sahf
pop
inc
pop
scas
mov
mov
dec
in
mov
ja
xchg
sub
mov
gs
das
pop
jns
xchg
lds
xchg
lret
fstl
mov
jb
dec
jne
xor
cmpsl
mov
bound
and
push
repnz
xor
mov
cld
stc
repz
dec
cmp
das
inc
dec
inc
cmc
loop
ret
mov
mov
into
xchg
std
cs
repnz
enter
cmp
bound
cmp
clc
lret
lahf
cmp
orb
xor
stc
repz
lods
push
mov
pusha
push
rolb
pop
mov
in
call
ret
loop
dec
dec
lods
mov
out
lahf
aas
mov
sbb
iret
ja
repnz
xchg
jo
aas
inc
xchg
test
adc
imul
pop
das
push
fidivrs
lret
pop
inc
dec
jmp
xchg
in
stc
inc
pop
push
in
fcomi
jmp
int
adc
add
cs
cmp
shlb
sub
add
inc
shr
iret
nop
or
sub
scas
sbb
mov
pop
cmp
repnz
das
fnstenv
jae
cmpsb
xor
out
adc
or
sub
adc
jge
cmpsb
jns
scas
outsl
mov
in
mov
xchg
push
lcall
adc
mov
pop
cs
repz
stc
repz
cmpsb
pop
popl
adc
test
test
out
push
stc
cld
fwait
inc
sub
pusha
fisttps
xor
mov
inc
stc
push
std
mov
pop
xor
inc
enter
or
aas
aas
mov
pop
aad
fildl
popf
gs
stc
repz
xor
lahf
and
pop
aam
test
stc
repz
jl
push
jno
sti
jge
xchg
out
jp
or
repz
ret
dec
aas
xor
pop
iret
lahf
aas
jg
and
inc
jge
lods
xor
inc
adc
in
jns
dec
cld
cmp
int
pop
lock
dec
loope
nop
scas
sbb
push
fimuls
pop
jo
clc
fwait
insb
pop
or
push
pop
jns
mov
pop
push
mov
pop
jns
pusha
push
mov
sti
test
mov
js
sysexit
adc
in
lret
xor
add
in
push
js
in
fnstenv
add
mov
aad
adc
mov
and
push
jle
filds
pop
pop
jnp
pop
jle
pop
pop
sub
mov
mov
ror
cmp
cld
or
add
mov
pop
std
test
jg
jae
andl
push
shl
outsl
out
subb
cmp
iret
mov
scas
ror
push
mov
inc
jmp
push
xchg
dec
divl
mov
clc
cmp
pop
out
negb
imul
pop
dec
ss
push
xor
repnz
iret
adc
outsb
xor
sub
pop
push
pusha
cli
mov
stc
ljmp
lret
lahf
lahf
mov
jle
sti
dec
dec
rcr
or
pop
aas
inc
push
pop
jns
fwait
int
in
fsubrs
mov
aas
jmp
ror
jle
dec
inc
xchg
das
xchg
push
loop
iret
lahf
mov
pop
repz
loop
dec
mov
and
ljmp
push
xor
in
iret
into
dec
mov
enter
fwait
pop
push
in
iret
mov
or
rolb
lret
out
inc
xor
mov
add
sub
lcall
testb
pop
stc
stc
pop
sbb
gs
and
pop
popf
jp
das
mov
cmp
sbb
pop
and
fsubl
repz
push
xor
ret
add
mov
test
jg
scas
shr
jne
add
dec
arpl
outsb
adc
push
ja
xchg
iret
adc
cmp
scas
fidivrs
xchg
in
loopne
pop
lret
das
rcr
popf
xlat
jo
dec
into
push
sbb
pusha
adc
jns
es
mov
mov
es
mov
mov
mov
loop
mov
rolb
lret
cwtl
ds
jbe
xchg
push
pop
mov
sbb
xor
repz
push
pop
jns
jecxz
gs
scas
push
or
xchg
sbb
sbbb
shrl
inc
inc
int
xchg
jp
in
pop
jns
cld
mov
inc
movsb
push
sub
ss
pop
jns
xchg
pop
push
aas
and
pushf
jp
jns
xchg
push
jb
dec
data16
pop
push
test
fidivrl
add
sbb
in
out
lahf
pop
test
xor
gs
pop
adc
pushf
inc
sar
aaa
lock
mov
mov
lahf
aas
jg
out
or
add
cmpsb
jne
xlat
lahf
stc
repz
push
neg
addr16
pusha
mov
stos
mov
insl
mov
mov
mov
or
sub
xchg
cmp
outsb
rorb
ret
pop
adc
test
cld
stc
repz
into
sbb
push
aas
pop
jne
dec
inc
jne
sub
cld
cwtl
js
push
sub
lahf
aas
jg
clc
and
push
testl
dec
dec
sbb
aaa
je
sbb
in
gs
dec
sti
scas
rorb
cld
xorl
mov
mov
fdivp
add
das
repz
ja
jg
jg
loopne,pn
mov
fwait
rcrl
mul
xchg
inc
inc
pusha
push
mov
js
frstpm(287
xchg
push
pop
xor
je
enter
mov
hlt
imull
hlt
or
mov
iret
lahf
aas
pop
jns
mov
data16
push
in
sbb
imul
pop
ja
cltd
dec
xor
sbb
stc
repz
movsb
stos
bound
push
and
lahf
aas
jg
out
xor
pushf
push
lret
test
lret
iret
jb
out
ret
adc
shlb
push
jge
or
das
lahf
aas
or
cmp
inc
sub
mov
unpcklps
loopne
gs
mov
iret
push
pop
inc
mov
fldt
lahf
jg
jmp
data16
push
fsubp
push
icebp
fistpl
push
cltd
ret
into
push
pop
jns
negb
jnp
test
aad
popf
fcmove
fcoml
jns
xchg
push
mov
cmpb
adc
ds
xchg
push
imul
lret
out
das
into
mov
xchg
in
jb
cld
stc
mov
or
fsubrl
or
xchg
aas
jg
or
lret
aas
dec
xchg
cmp
stc
sub
sub
pop
jns
xor
push
mov
testb
and
mov
push
pop
ljmp
dec
pop
insl
and
cld
jbe
addl
cmc
shl
out
adc
arpl
sahf
fimull
lahf
out
icebp
mov
mov
sub
mov
add
mov
imul
mov
out
stos
and
clc
repnz
pop
push
jae
outsl
inc
push
incb
pop
das
push
dec
scas
mov
movsb
dec
es
pop
mov
fs
sub
and
ret
xor
push
and
hlt
popf
adc
mov
test
cmc
es
std
imul
lret
pop
inc
inc
in
scas
cwtl
js
sti
outsb
repz
adc
xor
lret
outsl
cmp
pop
shrb
xlat
mov
inc
sub
xor
stc
or
mov
mov
pop
nop
mov
push
mov
das
punpckhwd
cmp
dec
aad
cmp
sub
mov
xchg
decb
jb
or
enter
sub
dec
scas
outsl
scas
dec
aas
and
jge
ljmp
pop
sarl
frstor
inc
mov
or
aad
pop
fidivrs
inc
mov
leave
and
fiadds
and
jg
cmpb
scas
mov
out
push
outsb
shrb
pushf
repz
sub
mov
xor
push
cltd
mov
sub
add
fs
dec
jp
jp
outsl
mov
scas
mov
std
out
jbe
shr
and
dec
enter
mov
sbb
stc
repz
out
add
pushf
insl
test
xchg
cmc
sub
cmpl
dec
mov
in
out
cld
pop
cli
repnz
lret
push
je
pop
daa
mov
lahf
aas
jg
es
dec
mov
cmp
pop
subl
and
shlb
mov
sub
cli
pop
inc
pop
sbb
lret
sub
inc
into
rorb
and
and
lock
add
outsl
hlt
add
insb
out
adc
sti
enter
add
ljmp
cmpsb
test
scas
lods
and
into
sbb
pop
jle
jg
repnz
out
mov
pop
dec
cld
std
sub
jge
cld
ljmp
iret
xor
mov
out
lahf
aas
ds
shlb
cld
repz
or
repz
sbbl
test
iret
mov
aaa
sbb
repz
cld
stc
repz
xor
lret
xor
sub
enter
sbb
jp
jne,pt
lods
out
negb
in
sub
push
pop
es
ljmp
xchg
push
push
jb,pt
push
addr16
xchg
push
pop
jns
xchg
test
pop
aaa
or
xchg
jb
in
ss
pop
adc
int3
xor
repnz
push
or
jg
aaa
fcoml
outsb
cwtl
div
out
push
data16
in
sub
xchg
push
pop
jns
mov
call
dec
in
jmp
in
push
mov
push
or
lods
pop
jns
xchg
lret
dec
adc
cmp
dec
movsb
jg
das
push
jb
mov
movsl
mov
or
pop
ds
test
repnz
fildl
repnz
test
leave
nop
push
leave
insl
sbbl
push
fcoms
repz
lahf
outsb
mov
loopne
and
xchg
lret
adc
cld
stc
inc
sub
or
dec
mov
iret
lahf
aas
ret
in
push
movq
repnz
out
cld
cld
stc
repz
pop
mov
daa
fmull
lods
jns
sub
lahf
test
cmp
scas
xor
cld
popf
lahf
cmp
adc
mov
xchg
push
pop
jns
out
aam
in
bound
std
jnp
in
pop
mov
jg
dec
cmp
out
cs
scas
scas
mov
popl
mov
outsl
lahf
and
out
enter
popf
das
sbb
outsl
and
out
out
jle
jge
outsl
mov
xor
mov
cli
movsl
jl
les
push
or
mov
out
push
jecxz
sahf
and
xor
sub
lret
mov
mov
pop
jle
cld
xchg
jb
mov
repz
adcb
aas
jg
nop
stc
mov
jle
dec
mov
dec
stc
repz
sti
cwtl
and
mov
lea
jo
jg
cld
sub
pop
cmp
jbe
aaa
cmp
mov
mov
xor
test
xchg
inc
add
sahf
outsl
mov
shr
out
loopne
rorb
ds
fs
mov
jmp
cld
cli
sub
mov
outsl
dec
adc
jnp
inc
ja
ror
xchg
mov
and
loopne
into
fisttpll
out
sub
mov
jns
jmp
jns
iret
mov
lahf
rclb
test
and
cld
stc
repz
dec
mov
dec
sub
xorl
aas
jg
and
inc
adc
out
mov
cld
stc
repz
sbb
xor
lock
repz
mov
mov
es
insb
notb
stc
repz
adc
push
push
movsb
adc
inc
adc
cmp
cld
mov
dec
xchg
and
mov
pop
jge
out
lahf
pop
cli
pusha
push
and
int3
data16
pop
jns
lods
mov
cmpsl
in
jecxz
and
add
pop
jns
xchg
sahf
iret
cmp
inc
enter
insl
lods
mov
lret
xchg
push
aaa
push
mov
cld
out
xor
mull
movsb
inc
dec
lahf
cld
push
repnz
shlb
rcl
mov
inc
push
mov
jns
xchg
push
push
test
scas
inc
in
scas
mov
das
push
pop
cmp
popa
adc
in
xlat
cmp
sub
jle
idivb
imul
int3
lret
sub
cwtl
push
imul
jmp
jle
inc
scas
mov
dec
pop
lret
pop
push
cmp
lahf
mov
sub
adc
leave
ss
es
scas
hlt
mov
jp
fdivl
addr16
mov
lods
inc
xor
adc
inc
sti
div
repnz
pop
push
jnp
sbb
inc
push
pop
movsb
paddd
lret
clc
mov
add
ljmp
shr
incl
push
jne
lea
mul
fnstsw
pop
xchg
test
xchg
push
fidivrs
adc
dec
fmul
cmp
mov
mov
lahf
repnz
jecxz
or
adc
cmc
or
test
sub
xor
fimull
scas
movsl
mov
jb
push
inc
aas
jo
cmpl
xchg
push
pop
jns
bound
repz
push
mov
pop
jns
rcrl
ljmp
scas
mov
pop
sub
pop
stos
xor
mov
push
mov
sub
loopne
loop
sbb
mov
push
dec
mov
stos
mov
mov
xchg
scas
scas
sub
mov
shrb
call
xor
scas
lahf
aas
jg
ret
rcl
add
sbb
inc
inc
inc
sub
and
fstl
dec
ficoms
dec
nop
test
jl
xchg
push
pop
lret
xchg
nop
jp
outsb
icebp
out
lock
negl
push
mov
leave
inc
jnp
dec
out
push
sarl
rorl
inc
sbb
push
repnz
sub
xor
sbb
imul
in
dec
add
pop
movsl
in
sti
popf
loopne
cld
stc
adc
jmp
pop
sub
mov
iret
lahf
aas
jg
repz
ss
push
out
sub
repnz
sbb
jb
ret
xchg
pop
mov
invd
mov
dec
mov
jmp
pop
dec
mov
nop
mov
dec
icebp
imull
and
cld
call
xchg
lret
xchg
jmp
fiaddl
loop
mov
fisttpll
call
std
imul
cmpsb
test
mov
pop
dec
pop
jnp
add
pop
fwait
cld
cld
stc
mov
jo
add
or
repz
cld
sti
stc
cli
xor
jne
lea
faddp
stc
jg
cld
stc
shlb
flds
adcb
gs
mov
out
lahf
aas
and
gs
push
mov
adc
mov
jno
or
scas
mov
test
inc
inc
mov
pop
mov
and
dec
pop
lea
out
aas
jg
cld
cwtl
outsb
aaa
pop
inc
testl
push
fdivrp
xchg
cmp
mov
movsl
or
imul
xchg
nop
pop
subb
js
push
pop
jns
mov
jnp
push
or
adc
pop
stos
aaa
aam
addr16
outsl
adc
icebp
jmp
aam
push
or
xchg
aas
inc
jecxz
mov
ja
push
inc
sahf
add
jecxz
outsl
int3
jge
out
out
lahf
jg
dec
inc
lret
stc
or
xchg
test
test
push
push
outsl
jae
mov
movsb
popa
push
xlat
shrb
push
cmp
ret
cltd
adc
repz
mov
les
dec
int
fstp
sbb
call
pusha
push
pop
jns
out
push
inc
pop
sub
pop
dec
test
adc
mov
jns
xchg
mov
scas
lret
out
mov
mov
mov
jge
les
jne
mov
inc
lahf
sub
pop
add
and
jg
stc
ds
jmp
sahf
push
sub
ja
out
xchg
das
lahf
xchg
sbb
mov
xchg
mov
out
mov
pop
imul
pop
jbe
shl
xchg
es
aaa
cmp
gs
jecxz
sarl
inc
outsl
lahf
jg
mov
decb
and
repz
xchg
ds
test
scas
jno
fstpt
jg
cld
cwtl
mov
jno
adc
and
rclb
repz
lahf
cli
cmpsl
xor
leave
fcoms
xchg
mov
cld
stc
lods
push
das
or
cs
jp
aam
dec
ja
aas
test
xor
aas
iret
jb
adc
xchg
xchg
es
cli
les
lock
imul
sahf
inc
adc
shll
in
in
imul
push
push
iret
lahf
aas
mov
mov
pop
push
repz
es
pop
jae
lods
or
xchg
mov
jno
xchg
rcll
and
mov
in
dec
dec
pusha
pop
jno
cld
inc
dec
sbb
jle
popw
pop
pop
push
iret
iret
lahf
aas
jg
popa
jae
push
movsl
or
sbb
mov
repnz
xchg
incl
mov
adc
lcall
jle
cmc
scas
fsts
push
inc
push
stc
xchg
lock
test
ds
mov
mov
jg
cld
pop
mov
push
mov
in
push
mov
mov
dec
sub
not
mov
mov
lock
fsubs
mul
xchg
push
sub
lds
xrelease
stos
mov
jns
push
repnz
pop
xchg
std
shrl
and
pop
pop
jns
loop
filds
stc
jo
pop
mov
lret
lahf
pop
dec
outsb
fstps
xor
jns
fnstsw
dec
stos
fnstsw
ds
dec
inc
lock
push
fidivrs
fldl
into
xor
push
mov
lret
add
push
cmp
sarb
pop
push
aas
repnz
jle
aam
xchg
pop
icebp
fists
lahf
or
xor
test
jne
pop
inc
sub
pop
jns
xor
incb
lahf
repnz
dec
xchg
cmp
dec
lcall
mov
rdpmc
mov
adc
scas
mov
adc
mov
mov
loopne
fstl
push
jl
mov
cwtl
xchg
mov
pop
or
fisubrl
xchg
lret
add
dec
push
adc
shlb
pop
loope
adc
adc
adc
cmpb
fimull
and
je
pop
jns
xchg
mov
es
mov
pop
rclb
addr16
mov
rorb
scas
aad
jp
pop
fs
daa
lahf
aas
jg
imul
jg
lea
sbb
leave
jne
xchg
enter
out
lahf
aas
xchg
fsub
or
dec
outsl
fwait
lret
std
repnz
repz
iret
loope
adc
movsl
jl
repz
pop
dec
adcl
hlt
imul
push
cmpsb
mov
jne
inc
sbb
clc
or
out
lahf
mov
cmpl
pushf
aam
mov
movsl
mov
loopne
sub
jg
in
mov
rorb
mov
stc
repz
jmp
fwait
mov
mov
mov
adc
mov
push
lock
mov
sub
jecxz
scas
mov
scas
mov
pop
popf
test
jo
ror
sub
stos
mov
imul
iret
lahf
jg
push
in
fmulp
pop
mov
mov
repz
push
mov
pusha
fabs
cmc
repz
repz
pop
mov
mov
es
jle
cld
in
shl
dec
sbb
inc
gs
jno
scas
mov
and
mov
int
repnz
and
sub
punpckhbw
mov
dec
aas
mov
add
and
test
mov
mov
jle
or
addr16
je
pop
xchg
rcll
xor
ds
sub
jge
cmp
sbb
in
adc
adc
ja
jg
outsb
test
and
inc
push
inc
scas
jg
cmc
jns
fstl
mov
inc
adc
pop
insb
sbbl
lods
mov
mov
jns
sub
call
push
push
push
mov
rclb
sbb
cld
jg
cld
stc
mov
add
pop
movsb
dec
in
adc
jne
lahf
aas
sarb
push
sub
mov
outsl
dec
icebp
lret
and
test
ds
mov
sub
pop
call
adc
fsubrs
fs
and
dec
xchg
inc
cmp
pop
jge
jmp
iret
lahf
aas
push
xor
or
xor
push
ret
fidivrs
dec
push
negl
faddl
adc
and
jle
mov
mov
repz
es
push
inc
stos
dec
neg
add
jg
cld
stc
hlt
cmpsl
pop
in
pop
lods
mov
mov
stos
popf
fs
xchg
aas
xchg
or
das
outsl
cmpsb
cmp
repz
scas
fimuls
cmp
inc
push
cmp
cld
stc
dec
cmpsl
add
sar
inc
or
loop
add
sub
jmp
and
clc
pop
jne
fcomps
xlat
adcb
cmc
in
sahf
xor
cld
adc
xchg
mov
push
mov
das
loop
push
pop
dec
mov
cmp
cmp
addb
movsl
mov
repz
or
mov
out
test
cltd
inc
fbld
mov
popf
mov
mov
jg
aas
loop
mov
push
ja
xchg
adcl
dec
ret
rorb
fistps
fbstp
test
nop
scas
orl
mul
loop
testl
sbb
lret
incb
in
push
adc
sahf
jg
adc
pop
fdivrp
sarl
stc
fbld
dec
xchg
outsl
lock
mul
xchg
push
mov
inc
in
fwait
mov
push
cmpb
out
or
repnz
dec
nop
pop
push
add
fstl
scas
push
int3
out
call
in
xor
pop
dec
jmp
and
loope
mov
repnz
sub
mov
or
iret
shld
and
and
stc
stc
repz
repz
in
bound
adcl
mov
clc
dec
sbb
stc
repz
outsb
mulb
sbb
jmp
cld
push
mov
fidivrs
pop
ja
dec
cmpsb
je
lret
iret
lahf
and
insl
mov
and
mov
stc
repz
push
je
into
cltd
add
sbb
xchg
das
aas
jg
test
bound
pop
js
iret
lahf
addl
jecxz
out
fidivs
or
nop
pop
push
addr16
jecxz
or
inc
outsb
inc
div
scas
cld
dec
clc
in
lcall
or
repnz
aas
jg
sub
jb
cmc
jg
stos
cmp
js
push
lret
pop
lret
add
add
out
sbb
dec
dec
inc
sbb
lret
aad
push
pop
stos
add
mov
cmpsb
repnz
and
mov
mov
pop
or
mov
loopne
and
lret
adc
cmp
in
adc
jl
lds
xchg
cld
stc
subl
test
mov
push
xchg
aas
jg
sbb
xchg
insb
xchg
scas
test
movsb
movsb
dec
add
fstpl
mov
pop
push
cli
aaa
lahf
and
out
fdivrp
jnp
push
mov
daa
pop
push
dec
cld
loopne
lret
xchg
push
xchg
cli
mov
pop
inc
out
neg
rolb
cmpsl
pop
inc
pop
pop
jns
ret
into
sbb
adcl
das
lahf
pop
outsb
xchg
outsl
call
orb
loop
push
pop
inc
nop
and
mov
jge
stc
repz
xor
bound
daa
iret
arpl
push
fdivrp
out
inc
mov
xchg
fst
orb
pop
pop
jns
shr
call
cmp
imul
and
idivb
xchg
ja
aam
mov
lret
insb
mov
in
push
pop
cmp
and
mov
lcall
fistps
mov
clc
loopne
iret
lahf
aas
jg
out
dec
stc
lahf
dec
add
sbb
nop
sub
mov
out
ja
xor
aas
jg
pop
xchg
pop
dec
aam
add
and
iret
insb
dec
inc
push
adc
push
inc
mov
pusha
push
popl
sahf
adc
repnz
test
and
jns
xchg
shll
aas
fdivrs
sbb
out
in
and
roll
inc
adc
dec
jns
stc
daa
hlt
cltd
sbb
cmc
push
add
adcb
aas
jg
pop
inc
testb
mov
iret
das
mov
outsb
ret
mov
jle
repnz
rep
lods
xor
pop
ja
mov
ret
mov
cld
pop
inc
pop
sub
aas
xor
jge
inc
in
lahf
aas
and
xor
ss
dec
sbb
jmp
sub
push
mov
mov
and
jg
push
mov
in
cmc
out
lret
iret
lahf
jecxz
ret
sub
fiaddl
scas
xchg
jle
repnz
idivl
sub
testl
pop
pop
mov
jge
imul
and
int
gs
aas
mov
arpl
mov
rclb
hlt
das
lahf
sub
nop
and
sub
std
mov
sbb
repz
mov
mov
mov
cld
stc
xor
test
adc
hlt
ret
mov
ja
mov
add
stc
nop
arpl
in
imul
lds
xor
pushl
push
pop
pop
flds
inc
xor
mov
sub
jns
push
xchg
out
xchg
popf
outsl
lea
repnz
adc
jmp
mov
ror
cmp
pop
pop
xchg
and
out
jle
repnz
cli
ljmp
in
cmc
fildll
fadd
mov
push
pop
mov
insb
js
lret
mov
or
mov
mov
mov
aas
sub
mov
xchg
ds
pop
clc
clc
movaps
jl
cld
stc
cltd
lcall
xchg
or
jge
outsl
sbb
pushl
data16
aas
jg
outsb
push
ja
mov
ljmp
or
xchg
xchg
jmp
jle
jecxz
orb
lock
jmp
pop
jns
xchg
mov
add
lret
xor
repnz
arpl
pop
sbb
ljmp
scas
mov
popf
dec
movsb
xor
and
repnz
sahf
pop
dec
outsb
xchg
push
repnz
xchg
cwtl
arpl
cmpsl
jg
jmp
test
test
into
fadds
mov
xor
fbld
cld
jmp
aas
clc
pop
icebp
aas
cmp
mov
xchg
fildll
scas
mov
dec
sbb
pop
das
and
repnz
jmp
and
jne
xor
pop
loopne
sub
scas
xchg
lock
fimull
lret
pop
sahf
hlt
fdivrl
sarl
mov
mov
cmp
xor
push
jge
das
aas
jg
and
scas
and
push
rcrl
jmp
outsl
mov
test
stc
repz
or
popf
stos
sub
xor
and
std
mov
stos
pop
push
jo
xchg
rorl
fstpl
inc
dec
movsb
push
add
je
pop
jns
mov
data16
lock
repnz
call
jnp
push
cld
outsl
cmp
faddp
stc
stc
repz
mov
adc
xchg
xor
daa
mov
cmpb
and
xchg
lock
aad
sub
mov
adc
sub
xchg
icebp
repnz
bound
mov
sahf
dec
lock
lret
iret
int3
push
mov
outsb
lahf
aas
jg
push
sub
xchg
icebp
adc
ds
repz
inc
pop
repz
sbb
adc
nop
bound
cltd
add
mov
cmp
add
cltd
mov
stc
lcall
iret
mov
stc
sbb
adc
adc
jl
push
arpl
mov
sahf
mov
imul
lret
xchg
orb
adc
cmpsb
sbb
jg
cld
dec
mov
jns
leave
or
xor
ret
jg
pop
ds
add
adc
add
movsb
and
sub
leave
les
cld
stc
xor
shrb
in
pop
sbb
dec
jp
cs
cltd
and
or
jg
hlt
lahf
mov
and
cmc
mov
jns
xchg
push
fnstsw
aas
mov
xorb
jle
jge
adc
into
pop
insb
inc
sub
movsb
dec
in
ja
xor
test
inc
out
sbb
jns
push
ja
and
xlat
push
sub
jns
dec
popf
lods
and
std
adc
dec
stos
add
lret
fstl
iret
stos
mov
clc
pop
jnp
cld
stc
aaa
incb
mov
push
fmul
lahf
aas
jg
jo
scas
xor
and
fcoms
adc
and
xchg
daa
mov
jbe
insb
adc
jp
icebp
out
xchg
sub
aas
out
or
addr16
sbb
jg
push
cli
in
jge
call
push
int3
xchg
cs
iret
jns
cmp
nop
repz
and
fs
repz
cld
stc
sbb
mov
inc
mov
mov
das
cmp
cs
sahf
xchg
fucomp
xchg
cmpl
cld
stc
repz
jmp
sub
add
data16
out
lahf
aas
jg
jbe
jne
out
add
iret
in
sarb
lret
out
add
aas
popf
adc
fdivrl
xchg
push
pop
jns
adc
bound
stc
cmpsl
cmc
lret
sbb
lea
pop
cmc
mov
repnz
jae
inc
push
loop
out
iret
lahf
jg
into
ret
jno
jl
pusha
jecxz
stc
repz
aaa
xorl
call
hlt
subps
sub
in
push
das
aaa
pop
ror
cmc
movsl
clts
xchg
dec
icebp
xchg
mov
repz
mov
pushf
pop
push
sub
aas
jg
pop
sub
push
adc
ret
stc
repz
mov
popa
add
jns
rcr
outsb
mov
xchg
cmpb
aaa
mov
fs
push
pop
aas
iret
lahf
aas
dec
push
jmp
add
rclb
lret
out
xlat
or
mov
sahf
jge
aas
fwait
xchg
scas
lock
push
pop
cmp
jnp
enter
jns
outsl
mov
aad
jecxz
outsl
and
mov
add
mov
int3
xchg
and
int3
stc
repz
movsb
xor
mov
loopne
lea
jge
mov
jl
scas
stc
fstpt
in
xchg
xor
fisubrs
adc
jg
mov
xchg
in
push
pop
jg
pop
lahf
cmc
gs
xlat
ja
pop
jns
inc
mov
loop
add
pop
aaa
jg
mov
std
jb
xchg
sub
jp
int
mov
decb
fidivs
and
outsb
jb
iret
lahf
jo
inc
inc
loope
xor
dec
les
jg
cld
stc
mov
pop
mov
fcoms
sbb
jne
and
lahf
outsb
test
cmc
mov
add
out
ret
int3
adc
bound
scas
mov
jg
popf
push
cli
cltd
adc
inc
fistpll
fbld
adc
int3
jp
lret
sub
jle
lods
mov
das
cwtl
lahf
cwtl
xchg
in
inc
xchg
mov
outsl
push
cmp
lds
add
lret
out
jbe
pop
mov
xchg
or
out
adc
jns
in
cmp
imul
test
js
cld
mov
mov
and
das
jg
out
add
popa
jecxz
fisubrs
jns
xchg
dec
push
idiv
xchg
xor
addr16
adc
push
jb
push
daa
call
pop
push
adc
mov
pop
pop
jns
mov
xchg
jge
movsb
std
inc
in
fistps
in
repnz
sbb
add
dec
dec
outsl
mov
mov
in
xchg
ja
mov
pop
stc
or
jns
gs
ficoml
in
arpl
in
jg
jge
scas
add
dec
insl
sbb
jns
xchg
ja
and
dec
lds
cmp
mov
in
push
pop
arpl
mov
sbb
adc
es
xchg
push
pop
jns
flds
movsl
incb
scas
ljmp
cmp
jns
fcmovne
or
loopw
xchg
add
pop
hlt
or
cld
stc
xor
into
cltd
subl
jg
mov
jle
push
pop
mov
iret
lahf
aas
cli
push
fmul
sub
sbb
stc
repz
outsl
push
cmpsl
sbb
sti
pop
xchg
jle
scas
push
xchg
dec
lds
cld
stc
repz
xlat
js
push
xchg
jnp
inc
xchg
int3
or
icebp
das
push
pop
jbe
repz
dec
sub
cmpsl
enter
and
cmp
jg,pt
cld
std
in
dec
mov
jle
mov
je
cmp
mov
iret
lahf
aas
jg
cmp
add
cmc
mov
push
push
mov
int3
int
rcrl
das
adc
outsl
mov
aas
jg
sbb
add
xchg
imul
mov
pop
jl
loopne
mov
push
fwait
test
lret
icebp
mov
mov
insb
orl
jmp
out
or
adc
lret
mov
in
xchg
fs
cmp
jmp
cmpsl
mov
das
pop
scas
ret
pushl
inc
test
xchg
sub
mov
cltd
in
scas
loop
and
lret
xor
jle
push
add
sbbb
dec
push
add
mov
incl
pop
mov
add
enter
xchg
imul
xchg
dec
pop
mov
or
out
mov
pop
jmp
pop
lods
sahf
ret
movsl
js
dec
addb
or
mov
jmp
xor
fwait
mov
bound
mov
leave
lock
jmp
mov
cmpsl
out
mov
mov
xchg
jns
xchg
ja
ds
push
iret
sahf
pop
or
call
push
pop
jns
pop
cli
jbe
mov
cmp
mov
jns
lds
pusha
bound
ja
aad
sub
outsl
push
push
call
push
sbb
fnstenv
ret
repnz
jecxz
mov
insb
inc
xor
inc
mov
adcl
cld
stc
repz
dec
inc
int
lea
test
lahf
aas
jg
jne
sahf
dec
int
mov
iret
push
mov
stc
repz
xor
lds
inc
js
mov
push
jl
jg
mov
lods
mov
mov
inc
loop
cli
repnz
cld
scas
pop
repnz
mov
ss
fisttpll
lea
sbb
push
outsl
mov
sbb
xchg
fidivrs
in
dec
xor
mov
outsl
mov
adcl
ds
iret
or
xor
hlt
pop
sub
fsubrs
mov
adc
adc
test
adc
cld
stc
sbbl
loope
mov
mov
into
push
jle
and
sar
jg
xchg
fisttps
pop
scas
mov
test
stos
jg
mov
filds
cli
in
mov
pop
pop
ss
fiaddl
jne
jg
cld
push
jle
cmp
mov
jmp
iret
lahf
aas
lahf
je
les
push
jbe
cld
stc
repz
cli
mov
push
mov
xor
iret
lahf
aas
jg
mov
or
dec
xor
repnz
or
lds
gs
std
lock
cld
stc
inc
jl
cmp
lds
xlat
push
loop
sbb
jg
das
iret
test
jbe
xor
jae
jg
mov
in
adc
adc
push
jmp
adcb
jle
mov
xor
stc
xor
leave
les
xchg
ja
or
xchg
outsl
adc
sub
inc
in
push
pop
jecxz
ret
lea
sub
dec
rcl
sbb
cmp
movsl
mov
push
pop
jns
or
bound
bound
icebp
push
pop
jns
xchg
lret
push
andb
pop
rcl
clc
add
sub
jmp
inc
out
call
sub
ja
sub
out
cmp
jns
test
aas
push
stos
arpl
cmp
cli
fnstcw
jns
sub
or
lock
repnz
mov
xchg
sub
pop
sub
inc
out
cli
in
mov
loopne
push
push
and
test
inc
xor
jg
mov
cld
stc
sbbb
sti
sub
push
aas
jg
decb
adc
push
ljmp
loopne
iret
mov
mov
pusha
lret
outsb
cld
stc
repz
loop
jle
mov
mov
add
mov
dec
scas
push
sub
pusha
lahf
aas
jg
or
push
aas
xchg
pop
into
and
shl
repnz
es
mov
push
es
dec
std
jb
adc
dec
aad
imul
pop
jg,pt
or
dec
enter
adc
ja
enter
sub
or
xchg
pop
popa
dec
inc
js
jae
xchg
push
push
mov
push
das
mov
jge
pop
sub
out
mov
adc
mov
repnz
lcall
scas
mov
cmp
pop
push
pop
and
add
mov
imul
push
dec
xchg
and
cld
stc
push
mov
cmp
aam
jge
lcall
scas
test
dec
xchg
sub
lds
repz
push
pushf
imul
push
incl
cld
out
push
jo
pop
pop
xchg
inc
push
out
jg
cld
stc
into
push
and
sub
mov
in
iret
lahf
aas
loope
ret
arpl
lret
movsb
pop
int3
cld
cld
stc
repz
rol
cmc
out
fisubs
inc
fldenv
inc
scas
mov
mov
rcll
cmp
out
mov
push
mov
xchg
xorb
cld
cld
stc
fiaddl
adc
push
jecxz
cltd
fcmovb
das
lahf
aas
xor
lret
pop
jp
sbb
jg
sub
dec
movsb
xchg
dec
or
sahf
mov
scas
mov
push
inc
mov
scas
xchg
mov
lret
ss
data16
add
add
out
cmp
pop
ds
mov
lahf
aas
mov
jnp
push
in
out
cmp
lret
pop
jns
in
in
inc
sbb
iret
push
fmul
scas
push
cld
std
sahf
jns
xchg
push
repz
sbb
out
xchg
ja
pop
std
mov
xor
jo
shlb
cld
jb
imul
lea
xchg
xchg
jae
nop
mov
pop
fstpl
xchg
pop
mov
lret
or
jl
xor
jno
jno
or
sti
add
dec
or
outsl
aas
aaa
jle
mov
out
movsb
or
pop
insl
cli
pop
stos
inc
daa
out
xchg
sub
add
mov
iret
scas
mov
pop
ljmp
fdivs
shll
repnz
lods
fiadds
arpl
push
add
pop
scas
aam
insb
sbb
mov
xor
add
repnz
aam
xor
mov
xchg
aas
jg
rol
mov
shrb
or
pop
lret
test
pcmpeqw
pop
lds
sti
in
daa
jb
jo
push
adc
idivl
mov
mov
mov
inc
in
dec
in
sub
jbe
sub
in
repnz
outsl
xor
pop
mov
rcr
fistpl
add
xchg
fildl
lods
dec
mov
cld
stc
mov
es
xchg
sbb
aas
shrb
dec
inc
iret
fisubrl
outsl
in
push
pop
pop
cmpsb
int
arpl
fwait
lea
push
pop
jns
pop
pusha
mulb
shrb
in
mov
or
push
shll
mov
xchg
stos
and
pop
mov
out
inc
cld
stc
repz
fmull
ds
or
out
mov
rorl
ljmp
imul
aas
andl
arpl
sbbb
jb
daa
jle
or
xchg
iret
movsl
ret
fisubrl
cld
stc
repz
fwait
adc
push
jle
movsl
mov
jbe
jo
lahf
aas
jg
mov
outsl
int3
sbb
sbb
sti
repnz
mov
inc
test
jl
xor
scas
mov
adc
dec
cmpsb
push
in
js
mov
cmp
xchg
sub
or
pop
ljmp
xchg
dec
movsl
mov
jg
lret
femms
dec
shr
jg
mov
or
lahf
sti
repnz
lods
cmp
xchg
push
pusha
push
outsl
sub
mov
popl
ss
sub
adc
outsl
loop
lret
adc
fwait
das
ljmp
jne
sbb
push
xor
push
ds
push
pusha
nopl
sahf
sbbl
lock
fdivp
in
pop
pop
inc
adc
xor
xchg
pop
jle
cld
jb
fnstsw
mov
arpl
pop
inc
jg,pt
push
mov
mov
fldenv
adc
and
sub
jl
je
inc
sub
lods
mov
ja
mov
in
xchg
bound
iret
mov
pusha
push
out
loope
dec
cli
adc
add
xchg
xor
stc
repz
ficoms
cmp
jmp
or
adc
or
lcall
test
cld
decb
test
sub
dec
icebp
xchg
addl
xchg
loop
sbb
adc
adc
iret
lahf
aas
in
icebp
mov
rolb
mov
sub
das
fnsave
mov
lahf
aas
jg
pop
dec
or
std
mov
mov
addr16
in
dec
jp
push
xor
out
inc
clc
in
xor
loopne
pop
les
int
or
std
repnz
rorb
out
loop
sar
jg
mov
call
out
mov
sbb
pusha
mov
pop
and
dec
scas
aam
cmp
out
inc
ret
mov
adc
inc
jmp
adc
jae
dec
mov
lahf
aas
addr16
jp
cmp
dec
jnp
sti
in
outsl
iret
movsb
subl
sub
scas
lret
jle
fs
cmp
sbbl
jns
xchg
ja
jl
sbb
xor
xchg
push
pop
mov
sub
push
dec
push
call
adc
cmpsl
mov
out
in
bound
test
push
inc
jg
aas
rorl
add
pushw
ret
inc
xor
outsb
jb,pt
in
out
in
pop
cmpsb
mov
iret
lahf
pop
ficompl
jne
in
cmp
inc
loope
pusha
lret
rcrl
stos
jne
dec
mov
cs
mov
stc
push
mov
and
mov
xchg
jne
shrl
out
lahf
aas
mov
adc
mov
sbbl
sub
xchg
push
ficomps
test
add
pop
shlb
out
les
push
negl
xchg
push
pop
pop
fst
push
mov
insb
and
adcl
iret
bswap
lahf
aas
jg
cmp
adc
lahf
xchg
lret
cld
stc
repz
dec
test
nop
lcall
aas
jg
xchg
add
sub
jecxz
jmp
lret
das
mov
mov
pop
push
in
mov
out
lret
scas
scas
push
jne
mov
mov
mov
sbb
cmpsb
jle
pop
jg
in
lahf
aas
xchg
xchg
mov
gs
std
jb
hlt
bnd
int
push
dec
in
push
push
aas
cld
ret
ret
iret
mull
xorl
xchg
aas
jg
lret
xchg
pop
cmp
xor
repnz
ffreep
sub
pop
out
add
lret
adc
and
lret
sub
out
es
pop
jle
repnz
cmp
pusha
mov
jae
std
push
cmp
sub
pop
sbb
int3
sbb
imul
sub
ljmp
out
das
ja
jmp
out
decl
pop
das
aas
xchg
test
lret
pop
ror
arpl
jmp
scas
and
xchg
inc
bound
sbb
iret
lahf
aas
dec
inc
fnstcw
mov
xor
std
dec
mov
lret
out
arpl
je
push
xchg
aas
jg
dec
mov
or
cltd
mov
loop
xchg
push
fimuls
ret
or
cwtl
push
mov
pop
push
fidivrs
and
pop
out
and
sar
adc
xchg
pop
jne
mov
add
jg
mov
stc
lret
sbbl
or
sub
xchg
cltd
lret
mov
mov
sahf
or
mov
pop
push
xor
mov
mov
sarl
cs
cmpsl
adc
push
ds
arpl
repz
das
movsl
xchg
in
popf
adc
sti
xchg
sar
add
js
sti
das
inc
or
xchg
ret
xor
sub
jg
call
mov
clc
push
out
cli
repnz
add
loope
or
repz
mov
shll
mov
mov
and
dec
push
paddsb
mov
lods
outsl
negb
fldenv
repnz
sbb
cmpsb
jg,pt
cld
outsb
roll
cld
jmp
mov
sbb
out
jbe
aas
add
frstor
sub
insb
test
mov
pushf
push
pop
jns
loope
sbb
fs
inc
mov
pop
hlt
in
clc
in
cmp
jg
cld
stc
into
repz
lahf
push
test
inc
cltd
in
lds
sbb
add
and
sub
lret
mov
in
push
imul
pushf
xchg
jle
std
std
scas
lock
sub
cmp
out
sbbb
out
ja
loopne
pop
in
aad
pop
xorb
push
push
pop
jns
je
call
jns
outsl
sub
fdivrp
jb
xchg
fiadds
dec
mov
loopne
mov
das
push
ljmp
ss
sub
push
repz
or
js
insl
jb
xchg
rorl
jns
cs
test
jns
nop
inc
lea
loop
and
lods
out
fisttpll
scas
loop
in
push
xor
cld
sbb
push
mov
adcb
pop
sub
dec
rcl
jcxz
mov
xor
mov
jge
xchg
mov
pop
enter
jns
jg
clc
xchg
fdivs
inc
mov
xchg
out
adc
xchg
push
pop
jno
outsl
pushf
and
insb
jp
mov
add
inc
push
inc
jns
test
inc
jns
mov
push
pop
jns
in
dec
outsl
mov
aaa
push
ss
mov
in
lock
sbb
jl
fsts
dec
stos
add
fiadds
push
orb
mov
rcll
nop
lahf
aas
jg
jecxz
cmp
pop
sub
xor
out
popa
mov
lcall
inc
lahf
aas
jg
das
lret
pushf
call
mov
xchg
cmpl
mov
test
lahf
fstpl
loopne
lret
push
jo
jl
xlat
imul
in
xchg
das
lds
insl
adc
fcmovb
std
push
pop
scas
shll
int3
clc
out
aas
jg
sub
out
ja
push
ja
xchg
out
lahf
lcall
xchg
xchg
aas
into
jmp
jg
cld
stc
lods
pop
es
aaa
push
rorl
bound
dec
add
iret
lahf
aas
adc
loop
jbe
roll
jne
stc
repz
out
xchg
es
and
mull
lret
dec
js
iret
lahf
jg
push
out
lret
xlat
xchg
cli
test
repz
repz
mov
es
jo
pop
xchg
incl
cli
push
les
iret
adc
jmp
out
push
xor
and
dec
lret
xor
pusha
hlt
scas
jge
add
mov
int3
out
add
pop
cwtl
insb
dec
inc
mov
and
jmp
enter
sub
dec
mov
cwtl
dec
sub
sub
negb
jmp
call
mov
les
ljmp
mov
lock
daa
push
pop
outsb
sbb
mov
push
add
repz
lahf
mov
in
rorl
sub
mov
cmp
adc
ljmp
nop
sub
xchg
test
inc
jbe
cmp
push
notl
adc
add
cmp
sti
mov
jns
mov
daa
int3
sbb
mov
stc
mov
xor
or
jmp
das
jg
cld
and
fdivrl
sahf
jb
xchg
ja
inc
and
mov
xchg
mov
adc
out
lahf
aas
jg
push
lcall
sub
mov
scas
adc
repnz
sub
push
fiadds
xchg
mov
sbb
cmp
in
sub
inc
mov
sbb
pop
dec
sub
adc
lods
mov
lea
pusha
mov
and
or
mov
iret
aas
push
dec
pushf
add
xchg
cld
stc
repz
dec
scas
inc
gs
mov
ret
aas
jg
jbe
adc
lods
mov
out
lret
iret
in
xchg
jnp
clc
cmpsl
cmp
xor
sbb
out
cli
sti
nop
fwait
xor
cmp
sahf
add
stc
repz
jae
divl
push
xor
inc
push
push
clc
lahf
iret
lahf
aas
jg
inc
mov
sbb
pop
repz
pop
fidivrs
fistps
xlat
lea
fdivr
movsl
rcrb
sub
xchg
push
cmpsl
xor
cmp
or
notl
xchg
push
pop
lods
adc
xor
ret
mov
mov
jbe
out
ds
in
or
scas
mov
add
ja
mov
push
inc
scas
mov
cmc
icebp
or
cmp
ret
lret
test
imul
pop
adc
addr16
add
mov
arpl
iret
das
outsb
pop
jl
lock
ljmp
mov
cli
in
out
mov
in
notl
aas
or
stos
test
loopne
loope
lret
sbb
repz
jno
mov
and
pop
mov
in
sbbl
jnp
lret
lahf
aas
dec
push
jb
pop
mov
in
in
repz
scas
jno
cs
fidivl
in
xchg
push
pop
xchg
loopne
ret
jmp
mov
xlat
rcl
add
push
lods
sub
ret
leave
push
add
sahf
scas
cwtl
add
mov
scas
mov
or
sbb
ljmp
fwait
mov
mov
push
mov
mov
insl
cltd
out
adc
in
jno
inc
cld
stc
pop
lods
cmp
icebp
in
jbe
cmp
cld
dec
lds
test
mov
out
lahf
aas
push
push
bound
imul
jns
in
xor
cmp
cmpsl
dec
push
sub
int3
in
push
fisubrs
or
movsb
out
xchg
push
pop
jns
gs
sub
adc
jp
mov
xchg
hlt
in
xchg
xchg
xchg
xchg
fwait
dec
cld
lods
cld
cld
stc
aaa
ds
push
and
mov
es
fisubl
mov
dec
gs
lds
scas
mov
cld
stc
mov
push
adc
hlt
lds
pop
push
lret
sbb
mov
mov
in
xchg
repnz
dec
aam
add
pushf
push
lret
jg
cld
ja
mov
in
cmp
fwait
dec
pop
pop
jg,pt
ds
lods
inc
aas
fsubs
aas
movsl
mov
aas
nop
scas
jbe
add
mov
repnz
pop
ret
scas
mov
push
lods
push
ja
sub
into
adc
lods
stc
cmc
jg
add
in
dec
lds
rcrb
jle
std
stos
pop
fidivrs
mov
stc
das
aas
aas
add
jae
insl
out
iret
leave
les
lods
xor
mov
jge
pusha
mov
sub
out
out
mov
mov
aaa
jp
jle
mov
std
sub
pop
push
mov
repnz
dec
gs
add
in
sub
lods
test
cld
stc
daa
lock
mov
loope
mov
aas
jg
inc
ljmp
fs
movsb
scas
mov
repnz
add
cli
popf
fnstcw
stos
rolb
pop
cld
mov
xchg
cld
cmpl
out
lea
adc
lahf
aas
jg
testl
xor
xchg
subl
into
mov
mov
cmc
into
in
cmp
pop
xchg
mov
pop
scas
mov
repz
lret
arpl
inc
mov
add
mov
jle
in
pop
mov
mov
lahf
dec
gs
outsb
mov
xor
gs
in
add
push
add
add
dec
mov
and
out
scas
lods
fs
test
aam
iret
pusha
mov
in
push
and
out
cmp
sub
loope
cmp
xadd
mov
iret
mov
loope
dec
bound
push
lret
adc
outsb
je
add
push
not
jge
sub
bound
jl
and
mov
or
addl
movsb
lret
repnz
pop
jl
and
xchg
std
mov
lret
outsl
int
sbb
aam
shlb
jecxz
imul
stc
daa
pop
xor
aad
rolb
and
and
mov
xchg
push
inc
repz
seta
push
icebp
jnp
sub
imul
int
fisubl
repnz
xchg
sub
adc
mov
das
scas
mov
bound
adc
jg
mov
mov
mov
fptan
repz
jno
cmpsl
mov
sarl
jge
pop
dec
clc
pop
pop
into
push
fldpi
xchg
test
test
add
imul
outsl
jmp
push
pop
test
fisttpll
or
jg
cld
and
sahf
xchg
aas
sub
adc
lret
push
int
in
adc
xchg
movsb
sar
cld
pop
cli
daa
inc
add
or
jle
jne
sub
jle
nop
pop
jge
add
jmp
inc
and
mov
fs
outsl
mov
cmp
repz
repnz
cmpsb
dec
fsubrs
pop
lea
lret
push
lea
pop
mov
xlat
lcall
mov
or
push
fs
jg
fs
dec
or
in
or
mov
aas
jg
cld
push
popa
loopne
aas
cmp
mov
sbb
lret
inc
push
push
ljmp
cmp
and
sub
mov
jb
popf
inc
sub
cmp
fdivl
sbb
lret
cmp
in
cmp
sub
arpl
pop
pushl
out
cmpsb
ja
iret
mov
out
jle
lods
and
sbb
or
jo
or
sbb
lahf
aas
jg
outsb
or
jecxz
ffree
inc
inc
push
adc
repz
ficomps
pop
sub
xchg
and
pop
jbe
mov
jge
sbb
daa
jp
insl
lahf
iret
lahf
imul
pop
test
stos
sub
stc
repz
cmp
stos
sub
out
aas
jg
insb
xor
iret
call
das
stc
repz
xchg
addr16
std
jo
pop
out
int
mov
stc
dec
mov
dec
cmp
mov
out
dec
push
jbe
sbb
jmp
hlt
lret
xchg
sbb
sub
sub
mov
sub
jmp
imul
jbe
cld
fwait
cli
adc
in
jecxz
stc
pop
jo
push
out
mov
ljmp
repz
mov
int3
pop
jns
popf
nop
jg
iret
and
lahf
loope
pop
in
das
push
fsubrl
cwtl
scas
mov
mov
jle
jge
je
jle
dec
test
jle
movsb
jo
iret
lahf
aas
jg
cmpsb
jp
inc
jmp
stos
sarb
push
std
repnz
repz
sti
fisubrs
mov
ds
and
scas
lret
and
fisubs
adcl
divl
inc
inc
das
mov
mov
mov
pop
loopne
jns
xchg
or
mov
out
hlt
sub
das
ja
leave
and
push
lods
cmp
adc
icebp
lret
out
jle
packuswb
stos
push
clc
in
mov
mov
fisubrs
loop
jl
dec
aas
xor
mov
scas
push
cwtl
stc
xchg
mov
sbb
aam
mov
jle
std
repnz
lret
sub
pop
in
xchg
lahf
aas
jg
in
push
pop
sub
or
xchg
jle
push
scas
mov
xchg
stc
repz
int
jne
aad
pop
loopne
lock
pop
jae
aas
jg
cld
aam
dec
xchg
mov
and
iret
lahf
mov
cwtl
jg
inc
xchg
lock
sahf
adc
stc
pop
cmc
jae
mov
push
jno
xchg
aas
jg
shr
insb
hlt
push
sub
sbb
out
xchg
mov
xchg
andb
stc
cmpl
pop
fucomi
lahf
cld
in
add
cld
aad
jge
push
sub
jae
mov
dec
fs
cli
xor
xchg
out
in
pop
cltd
dec
and
fcomps
insb
pop
pop
scas
mov
aas
cmpsb
jmp
cmpl
shrb
xor
repnz
outsl
das
dec
negl
mov
xor
stos
jge
das
scas
je
jae
mov
mov
aas
subb
lret
cli
aam
loop
aas
rcll
jb
movsl
jle
xor
aam
dec
enter
jns
pop
jns
xchg
cltd
dec
lret
pop
std
pushf
jne
adc
lret
das
jbe
inc
sarb
xor
pushf
pusha
dec
lret
mov
xor
insl
and
scas
mov
mov
lds
scas
mov
xor
lock
push
xor
cmp
aas
adc
dec
scas
mov
call
movq
out
cld
stc
rep
mov
mov
adc
ja
jg
jp
pop
sti
insl
inc
lahf
jb
outsl
xchg
jmp
pop
jns
xchg
pop
loop
and
add
out
pushf
mov
lret
xchg
ja
dec
fldl
pop
cmpsl
dec
aaa
add
and
jns
push
insl
dec
rorl
das
add
lock
cs
addr16
jp
aas
add
add
in
stc
repz
add
xchg
mov
xlat
add
in
in
cmp
aas
jg
cld
arpl
pusha
int
loopne
cmc
fabs
lahf
out
in
lahf
int3
push
mov
jnp
scas
push
mov
cs
in
aad
shlb
das
out
xchg
cmpb
pop
add
push
sub
in
ja
pop
neg
jg
jl
cmp
fstpt
jns
cmp
cld
adc
lret
dec
popf
add
xchg
imul
aas
jg
pop
scas
cmovp
jmp
je
mov
fdivrs
in
arpl
push
jbe
lods
paddd
cld
pop
jg
pop
lret
movsl
hlt
mov
scas
inc
mov
scas
inc
sti
shlb
scas
mov
iret
loopne
jae
sbb
negb
sub
sub
mov
or
jno
dec
repnz
cmpsb
roll
lahf
les
sbb
and
in
mov
repz
movsb
scas
aas
pop
mov
xchg
xchg
insl
std
jb
mov
and
cmp
ficompl
or
lock
jns
repz
adc
lret
iret
dec
push
mov
dec
jle
cld
stc
repz
mov
lock
mov
rcll
ret
outsb
sti
or
pop
jle
sbb
cmpsl
test
jb
pop
ss
fucomip
and
inc
mov
adc
pop
add
mov
sbb
mov
mov
aad
xchg
xchg
das
sbb
mov
fwait
add
hlt
fwait
pop
lea
repnz
xor
stos
xchg
mov
in
mov
jb
xchg
sub
or
xor
lret
cld
mov
mov
stos
inc
mov
mov
add
adc
mov
mov
repnz
and
sbb
loope
int3
jl
mov
stos
jmp
js
push
sbb
mov
imulb
icebp
out
dec
sub
adc
mov
sahf
cmp
out
xchg
mov
aas
mov
lahf
daa
sub
cltd
daa
jmp
mov
lahf
or
inc
mov
mov
in
fists
sahf
cmp
pop
fldt
das
je
out
inc
shrb
out
or
call
insb
loopne
pop
int
enter
sub
mov
mov
aas
fsub
iret
lahf
aas
aas
mov
test
xchg
mov
in
mov
jle
in
sti
xchg
scas
push
jle
repnz
cmpsb
pop
sbb
cmp
inc
aas
mov
mov
pop
jns
xchg
jle
or
xor
cli
xor
mov
push
imul
test
loopne
addr16
push
pop
jb
into
sahf
lds
cmpsl
scas
mov
push
pop
jns
mov
inc
push
xor
pop
jns
out
fsubrl
out
mov
lcall
ja
sub
fstl
add
jge
xor
jmp
popf
xchg
std
jnp
in
dec
push
add
sub
jnp
lret
sti
das
cmp
aas
jo
push
aad
dec
nop
lret
push
sub
es
ret
clc
outsl
outsl
loope
mov
sub
out
js
outsb
stc
repz
das
dec
mov
jnp
mov
mov
dec
cld
dec
jp
cli
dec
xor
imul
aas
jg
fistps
push
mov
scas
mov
xchg
xchg
out
aas
and
sub
xchg
sub
aad
cmpsl
sub
push
test
repnz
cmpb
cmpl
ret
or
xchg
ja
xor
in
jg
xor
mov
das
push
pop
jns
imul
push
add
hlt
dec
into
pusha
rcrb
in
cmp
loopne
in
movsb
dec
adc
in
push
jg
add
inc
and
test
lahf
outsl
popa
nop
push
xor
adc
mov
addb
jg
lret
lahf
aas
jg
or
data16
repz
sbb
lret
fnstsw
mov
dec
sub
stc
daa
push
sarb
or
arpl
add
lahf
aas
jg
mov
xor
mov
add
cwtl
jb
cld
lret
inc
mov
fmul
sub
ds
mull
movsl
cmovs
cli
pop
sub
repnz
mov
aam
or
and
xor
push
fdivl
mov
icebp
repnz
test
mov
shlb
dec
cmp
stc
pop
push
sbb
and
loope
mov
ret
aas
jg
adc
cmpsl
subl
adc
mul
out
lea
pop
pop
xchg
out
scas
js
mov
cmovg
add
inc
out
lret
or
lret
lock
mov
add
incb
stos
hlt
in
mov
aas
aas
mov
stc
shlb
cld
stc
cmpsl
outsb
jb
repnz
xchg
lret
jle
add
loopne
cmp
cld
cmpsb
lahf
arpl
scas
mov
stos
jp
sti
pop
pop
xor
in
popl
lods
cmp
stc
jae
jne
sbb
adc
std
out
outsb
ljmp
stos
xchg
loope
enter
out
loopne
daa
xchg
js
bnd
icebp
or
out
ffree
adc
aas
mov
outsl
push
nop
push
into
daa
aas
dec
dec
repnz
push
inc
psubsw
lret
mov
lods
adc
inc
movsb
leave
mov
repnz
mov
out
sub
sub
xor
scas
mov
pop
scas
xlat
loope
es
out
xchg
pop
test
out
in
push
pop
mov
lea
sbb
push
rcrl
jae
orl
ja
adc
push
jns
mov
scas
mov
pop
sub
adc
push
lret
push
aaa
arpl
xchg
lahf
aas
aas
dec
jbe
xor
pop
adc
scas
lret
pop
or
call
test
loope
negb
mov
jp
mov
jmp
insl
sarb
fcompl
lahf
shll
xlat
loop
and
aam
pop
adc
fiaddl
sbb
adc
rcll
push
adc
stc
repz
mov
std
movb
aas
mov
cld
es
rorb
xchg
cli
dec
push
inc
mov
jns
xchg
cld
push
pop
fwait
out
jns
mov
in
push
pop
addr16
xor
hlt
pop
in
jg
lret
xchg
push
pop
mov
add
dec
and
xor
dec
and
insl
sub
daa
inc
lea
sbb
ljmpw
in
inc
jnp
lock
rcll
cld
cmp
xchg
test
and
stc
popa
xor
push
pop
pop
dec
into
dec
les
sub
mov
dec
cmpsb
inc
bound
out
incl
movsl
mov
sbb
inc
jg
pop
jns
test
mov
inc
push
jne
xlat
loope
andl
jecxz
add
adc
pushf
push
lret
xchg
push
and
cmpsl
out
testb
push
pop
jns
sti
push
bound
add
rol
add
rcrl
adc
fadds
sbb
jns
xchg
add
std
dec
mov
xchg
push
ficomps
clc
data16
stos
in
mov
out
lahf
lock
sub
repnz
mov
mul
inc
xchg
imul
popf
scas
mov
jl
std
add
mov
mov
cld
lret
outsb
sbb
repnz
lcall
pop
sub
jnp
call
mov
test
pop
jns
xchg
leave
cltd
mov
ret
and
push
jne
in
pop
mov
es
inc
test
pop
mov
push
loop
shl
sbb
repnz
jb
push
enter
dec
cmpsb
fistps
rcr
pop
jg,pt
cs
or
adc
adc
clc
sbb
mov
pop
jo
cmc
gs
movsl
faddl
xor
cmp
jl
sahf
movsb
push
mov
lret
inc
repz
loopne
fisttps
or
pop
cld
stc
mov
mov
xor
adc
jp
xor
ja
orl
cld
incb
cwtl
jae
lahf
insl
adc
dec
inc
mov
sub
pop
pushf
jp
pop
into
inc
repnz
dec
pop
inc
or
push
imul
jle
sub
cmpsl
scas
icebp
pop
dec
aad
mov
mov
adcb
icebp
iret
lahf
aas
aas
mov
mov
mov
mul
out
ljmp
and
adc
and
loope
pop
mov
lods
fcoml
jl
outsl
int
sub
xor
arpl
push
jo
nop
mov
jb
sbb
mov
lahf
aas
jg
jle
push
scas
inc
aaa
out
in
psrad
repnz
xchg
iret
mov
xlat
fcomp
mov
pop
adc
cli
mov
cltd
stc
lahf
or
xor
xor
adc
sub
scas
imul
jg
das
scas
ficomps
cmc
aas
mov
popf
push
jle
test
mov
sar
repz
dec
mov
lret
test
mov
cld
add
cmp
add
mov
adc
repz
lahf
or
pop
lods
int
test
mov
pop
es
push
lcall
nop
mov
mov
add
push
fistpl
jns
in
mov
fdivr
pop
loope
ljmp
fisubrs
fnsave
fsub
loopne
iret
fdivs
aam
add
scas
push
pop
jns
sahf
ja
movsb
mov
and
ds
cld
popa
pop
jns
xchg
sub
mov
and
test
iret
sub
push
gs
out
les
out
and
ljmp
push
std
add
pop
inc
and
xor
pop
mov
mov
iret
mov
push
ja
sbb
lods
cld
stc
repz
inc
ss
dec
loope
das
lahf
aas
jg
push
jge
xlat
pmuludq
xchg
xchg
shlb
mov
inc
push
scas
outsb
inc
mov
fldl
aas
pop
fiadds
clc
shll
in
inc
es
sub
cmpsl
fbld
in
loopne
ja
lea
jae
in
lcall
dec
mov
or
pop
add
pop
cli
repnz
sti
jle
mov
cmp
cld
cld
stc
repz
sahf
add
lret
mov
and
add
mov
cli
sub
lcall
les
push
add
cld
cmp
mov
adc
das
test
lret
into
sub
imul
test
ljmp
aas
mov
stc
in
inc
push
ss
xor
enter
iret
lahf
aas
in
cld
out
pop
sbb
pop
mov
xlat
xchg
mov
pop
add
subb
lret
fisubrl
and
repnz
pop
clc
or
jmp
jle
cmp
add
movsl
testb
hlt
nop
fsubrp
loopne
pop
imul
into
xchg
sub
cmp
fists
std
std
repnz
jb
fdiv
aas
jo
xor
xchg
xchg
jns
xchg
push
icebp
in
sub
js
mov
movq
pushf
pop
push
pop
pop
push
pop
sbb
pusha
mov
into
mov
sbb
out
lahf
cmp
popf
addr16
inc
mov
push
pop
jns
xorb
push
inc
inc
popa
pop
pop
rcll
jnp
jns
in
mov
bound
iret
push
negl
js
pop
mov
pop
call
fs
push
out
mov
sti
xchg
aaa
ror
lock
pop
jecxz
jne
loop
pop
jns
repz
sbb
jg
enter
lret
xchg
ja
add
cmp
xchg
sbbb
das
push
pop
pusha
popf
mov
cmpsb
adc
xchg
fisttps
ucomiss
jge
sub
bswap
in
jo
xor
fmuls
add
lret
sub
add
cmc
outsb
push
stc
repz
mov
arpl
cmc
mov
aas
jg
cld
adc
mov
out
mov
imul
adcl
clc
repnz
mov
fmulp
mov
jb
or
cld
sarb
es
pop
dec
stos
stos
hlt
adc
cwtl
mov
subb
movsb
in
cmpsb
jmp
lahf
aas
aas
pop
std
jmp
push
pushf
out
push
aas
or
das
into
lcall
xor
cld
stc
cmp
dec
leave
mov
push
rcrl
add
mul
fisttps
into
add
iret
push
cmpsl
sbb
and
xchg
jle
pop
mov
mov
sub
das
aas
jno
ds
outsb
out
aas
jg
lret
enter
out
loope
mov
mov
xchg
mov
mov
jle
repnz
add
cmp
addl
call
dec
add
stc
repz
dec
notb
mov
aas
jg
cld
and
add
cmp
adc
aaa
loop
jmp
iret
lahf
test
inc
lret
and
repz
outsb
adcl
sub
push
inc
push
lahf
aas
jg
mov
sbb
and
dec
push
das
hlt
stc
repz
push
sahf
daa
in
xchg
xchg
cwtl
data16
movsl
das
xor
jg
cld
loopne
adc
outsb
cmp
shll
lret
mov
mov
mov
aaa
cld
dec
clc
cmp
push
ficomps
dec
jge
pop
jle
fisubrs
iret
lods
scas
push
sub
pop
xchg
xor
repnz
lahf
add
mov
lret
mov
fisttps
loop
cld
dec
clc
repnz
xor
mov
mov
sub
pop
hlt
rorb
ficomps
ret
mov
repz
xchg
test
rolb
cmp
jle
cld
stc
jg
int
xchg
iret
pop
lahf
aas
mov
xor
cmp
repnz
in
outsl
pusha
test
cmp
mov
push
xchg
scas
mov
dec
dec
pop
fisttpl
push
push
jns
add
jg
in
mov
or
scas
in
add
xchg
push
pop
lods
cs
in
push
inc
jg
mov
or
or
jnp
aas
call
call
pop
xchg
dec
cs
in
std
repz
lahf
and
daa
pop
push
push
jno
clc
inc
clc
in
pop
mov
pop
repz
push
ja
cld
mov
ja
test
das
adc
das
jg
pop
add
dec
pop
punpcklwd
out
lret
mov
popf
sbb
jne
mov
push
pop
stc
fsts
push
or
adc
jecxz
fcompl
fst
cmp
sbb
push
scas
push
adc
lahf
aas
inc
mov
dec
les
jb
stc
repz
es
cwtl
scas
lock
push
push
hlt
push
adc
jle
cld
pushf
das
push
mov
insb
xor
and
roll
in
mov
add
push
jb,pt
stc
cld
stc
xor
mov
fmulp
sub
jle
iret
push
sbb
sbb
repnz
or
cli
mov
inc
mov
pop
cli
in
push
movsl
lds
repz
cld
stc
repz
out
adc
movl
dec
das
jg
and
xor
lahf
pop
cs
mov
mov
inc
jl
adc
dec
jmp
fdivrs
jle
or
out
enter
pusha
and
out
lahf
push
stos
ja
test
in
out
cli
div
jae
push
insl
outsl
cld
les
push
xchg
xor
sbb
dec
or
iret
lahf
pop
shrl
mov
mov
fs
cmpsl
xor
mov
stc
xor
adc
in
outsl
imul
fistpl
aas
jg
cld
push
lahf
jne
or
mov
pop
cmp
mov
out
lahf
rcll
mov
andl
cld
stc
cmp
or
xor
sub
icebp
jae
and
insb
fbld
mov
mov
fmull
lock
shrb
imul
cld
stc
repz
sahf
repz
cmp
inc
sarl
movsb
xor
data16
aas
jg
push
jno
dec
xor
ja
or
imul
test
cmp
mov
imull
lret
fdivr
fcoms
dec
sub
pop
sbbb
ljmp
sbb
outsl
sbb
stc
repz
in
adc
cmpsb
sub
repnz
push
jle
pop
xor
mov
in
shrl
loopne
gs
ret
jle
pop
pop
subb
mov
adc
gs
push
inc
inc
popa
inc
popf
or
xchg
pop
mov
or
jno
or
pop
pop
out
addr16
fcmovne
jl
push
in
sti
inc
cli
sbb
arpl
jmp
pushl
mov
cmpsb
and
aas
mov
fmulp
mov
cmpl
test
adc
stos
mov
mov
in
shlb
scas
cld
dec
std
cwtl
sbb
sub
jle
xchg
movsbl
xchg
add
in
stos
xor
mov
aas
cmpsb
nop
or
pop
xchg
mov
xlat
insl
sub
das
gs
fnstcw
out
test
mov
icebp
push
iret
sub
pop
jge
jge
inc
push
and
jbe
fs
push
fimuls
xor
sub
lret
out
sahf
sub
in
mov
aas
jg
sub
popf
push
sbb
pop
mov
lcall
lods
cld
out
mov
jge
iret
das
cmc
movsb
dec
push
xchg
mov
jo
call
jns
out
lret
jecxz
test
add
mov
in
push
pop
push
in
pop
pop
outsl
cmp
out
xchg
push
pop
jns
cmp
xchg
jg
int3
cmp
in
xchg
fcoml
aas
push
add
imul
in
cmp
adcl
jne
cs
test
mov
mov
mov
cli
test
movsb
sti
out
push
jmp
add
mov
cmp
pop
jb
scas
mov
mov
scas
xchg
aas
pop
inc
push
add
repnz
and
mov
mov
subl
dec
repnz
mov
mov
push
cli
out
push
cwtl
pop
mov
xchg
push
repz
lds
shrl
in
push
pop
clc
jno
jbe
cld
xorb
or
dec
stc
pop
push
and
push
xchg
jnp
out
push
jmp
xchg
call
add
mov
imul
xor
mov
outsb
popa
mov
cmpb
insb
jo
sub
into
mov
lea
pop
scas
mov
cmpsl
jg
sbb
dec
es
add
scas
out
in
inc
sub
lods
in
jle
lea
mov
repnz
mov
mov
mov
insb
jae
enter
mov
out
aas
mov
or
in
jb
rcrb
orb
mov
mov
mov
mov
mov
repnz
gs
dec
daa
push
mov
dec
mov
pusha
mov
add
mov
jg
iret
mov
sahf
ror
dec
mov
mov
arpl
mov
in
clc
movsl
repnz
lret
sub
sahf
insb
mov
imul
in
das
scas
mov
cld
cmp
pop
lcall
mov
data16
ljmp
cmc
mov
subb
jecxz
pop
ja
jl
out
sbb
mov
inc
call
jb
jns
xchg
arpl
repnz
mov
adcl
jns
xchg
push
dec
xchg
stc
add
sbb
cwtl
int
lret
out
sarl
xchg
push
jb
popf
iret
je
push
orl
mov
inc
movsl
mov
dec
rcr
dec
xchg
call
loope
les
out
addl
xchg
mov
iret
jbe
mov
in
repz
out
aam
pop
pop
sub
out
out
clc
repnz
arpl
sub
outsb
lock
inc
xchg
mov
ficompl
hlt
sbb
pop
mull
jg
incb
xor
outsb
xchg
clc
ja
lahf
aas
jg
add
stos
sahf
data16
cmc
in
loop
cld
stc
repz
mov
xor
push
les
fwait
jb
mov
mov
add
xor
mov
inc
pop
sub
cld
push
pop
scas
inc
mov
fwait
adc
sub
cltd
lret
iret
lcall
add
lret
aas
call
call
scas
mov
jnp
js
fs
cmp
xor
lret
loope
jge
scas
jae
lret
ds
lahf
pop
or
xchg
mov
shlb
and
xchg
iret
call
fisubl
iret
mov
neg
xor
pushf
inc
add
in
mov
popf
ds
stc
repz
xchg
xchg
jle
popa
push
jno
test
mov
mov
outsb
rolb
xor
adc
repz
adc
ret
inc
fdivrs
icebp
mov
cld
cld
sub
jl
iret
add
or
stos
popa
xchg
mov
pop
gs
xchg
mov
fwait
dec
pop
cmp
in
imul
add
adc
jne
cmp
and
out
cltd
pop
push
dec
scas
pusha
std
jp
iret
lahf
aas
push
mov
xor
cld
stc
repz
mov
das
cmp
in
pop
mov
pop
ja
mov
mov
loop
scas
rcrl
or
pop
scas
mov
scas
push
or
ljmp
test
mov
cld
stc
repz
rcr
or
hlt
out
adc
ret
lahf
aas
jg
and
jg
dec
into
rorl
cld
rol
add
lret
iret
pop
sbb
imul
cmp
repz
mov
sbb
add
xchg
lret
out
fildll
scas
sti
add
outsb
mov
scas
mov
jae
xchg
dec
in
cmp
aad
out
jbe
jg
aas
dec
fstps
insb
mov
cmc
in
rcrl
inc
sub
adc
sub
dec
dec
xchg
imul
jge
and
push
nop
call
xchg
loope
aaa
cwtl
cs
lock
test
sub
mov
je
jg
pop
outsb
xchg
stc
push
pop
jg
shr
mov
fidivs
popf
mov
push
leave
sub
inc
inc
xchg
fstp
pop
xchg
iret
lahf
pop
sahf
lret
lret
add
inc
rorb
push
xchg
lahf
pop
loop
adc
in
pop
cmc
mov
negl
in
xor
mov
enter
in
push
popa
and
pop
dec
and
pop
adc
das
push
pop
fistl
movsl
pop
out
je
sbb
mov
out
add
dec
push
pop
jns
stc
insw
aad
loope
repnz
push
repz
loope
jb
xchg
in
lods
dec
pusha
xor
inc
adcb
in
push
ficomps
push
test
adc
cmc
fistpll
sub
xchg
push
pop
jns
iret
xchg
inc
fistpll
repz
aas
mov
xor
int3
adc
iret
lahf
aas
das
sbb
cltd
imul
mov
inc
dec
andb
sub
jns
mov
int
in
push
adc
popf
movsb
cmpl
inc
cld
inc
pop
pop
lahf
hlt
addr16
lahf
add
sbbb
fisttpl
loopne
into
xor
popl
clc
in
mov
popl
adc
jp
cld
dec
inc
mov
inc
cmp
fildl
xchg
aas
leave
fldl
pop
pop
lahf
xor
jecxz
stc
repz
lds
aad
std
mull
xchg
add
jle
mov
inc
sahf
std
jle
rcll
ljmp
aam
ljmp
mov
jae
add
hlt
in
sub
shll
sub
iret
push
inc
aad
xchg
int3
xor
pop
stos
inc
pusha
pop
mov
jl
cld
nop
out
mov
movsl
inc
pop
jle
adc
add
pop
jmp
incb
fbld
xor
push
pop
jns
push
adc
enter
dec
je
pop
jns
xchg
jmp
sub
add
sysenter
cmpsb
fists
test
ret
adc
lretw
jns
iret
lahf
aas
jg
sbb
sbb
jo
int
pop
push
and
repz
jg
mov
xchg
xchg
sbb
xor
nop
ror
lods
lret
cmp
test
aam
lahf
aas
sbb
daa
out
adc
xlat
adc
stc
repz
out
jns
adc
cmc
cld
sub
idivl
jg
cld
push
xchg
sti
mov
add
dec
stos
dec
jp
repz
lahf
and
mov
mov
in
test
mov
cli
xchg
loope
pop
fists
sub
hlt
je
mov
jmp
lret
sub
mov
loop
testl
ret
mov
inc
imul
mov
add
sub
mov
imul
iret
and
scas
push
outsl
scas
mov
das
adc
dec
nop
hlt
push
aad
mov
pop
dec
mov
xchg
aas
inc
add
loop
imul
mov
jmp
xchg
in
fistpll
dec
mov
scas
mov
pop
cs
dec
daa
lock
sub
pop
loope
lret
xchg
push
xchg
repz
xchg
lods
scas
cmp
inc
xchg
bound
add
jl
cld
stc
pop
pop
pop
test
sti
mov
lods
repz
mov
aas
scas
xchg
push
stc
pop
pop
aas
divl
xor
in
aaa
cmp
dec
mov
jne
ja
push
pop
jns
mov
enter
jnp
loop
pop
jns
mov
sbb
adc
das
fwait
inc
mov
out
jg
sbb
stos
fimull
lahf
aas
mov
cmc
cs
lret
jne
stc
repz
sti
lock
lret
pop
rcrl
pop
jle
cld
orb
fstl
lahf
pop
mov
cmpsl
adc
lahf
pop
add
adc
inc
pushf
dec
pop
mov
out
xor
cld
call
mov
cs
jle
out
mov
cmp
roll
mov
dec
jg
adc
outsb
sbbb
add
loop
xchg
aas
mov
jmp
cs
stos
in
lret
lahf
push
or
movsb
fildll
dec
jl
bound
xchg
cmpl
hlt
cld
stc
and
lds
aaa
sahf
jg
mov
jmp
aas
jg
push
hlt
movsb
push
movsb
add
testb
xlat
das
jne
adc
mov
sbb
and
psllw
out
xor
andl
push
icebp
jg
movsl
pop
iret
mov
test
repz
pop
jbe
mov
pop
xlat
in
scas
mov
adc
popa
loopne
dec
mov
hlt
lret
jg
jnp
cmpsl
add
dec
jl
movsb
sbb
inc
or
aas
jg
ret
dec
lods
nop
das
and
add
inc
es
in
cwtl
mov
jg
cld
stc
or
mov
jle
pop
xor
jne
mov
fistl
das
lahf
aas
push
loope
iret
icebp
pop
adc
out
ds
dec
mov
mov
jno
mov
fadds
push
repz
jae
scas
mov
inc
push
xor
aas
movsl
xchg
add
scas
mov
pop
pop
mov
push
movsl
mov
mov
inc
push
sub
clc
dec
fists
sub
lret
iret
cltd
popl
out
mov
mov
in
test
push
icebp
rsm
cmpb
and
insb
js
xor
rorb
mov
notl
mov
scas
mov
frstor
jb
lret
out
lahf
out
cmp
xor
jns
adc
mov
push
pop
inc
arpl
push
clc
in
sub
loope
loop
dec
cmp
mov
jg
cld
jle
xor
inc
lods
dec
mov
sub
xchg
iret
lahf
sbb
jecxz
loop
movsb
and
pop
scas
mov
les
scas
lret
lds
mov
lret
scas
mov
sub
pop
lahf
leave
scas
pop
js
xchg
out
mov
das
jg
mov
xchg
jns
dec
mov
pop
aad
pop
jns
xchg
std
adc
out
cld
dec
push
pop
movsl
sub
stos
ds
mov
push
or
out
cmp
iret
popl
cld
jecxz
mov
jg
sub
mov
mov
repnz
aas
sub
mov
iret
das
sub
call
cmp
scas
pop
mov
movsb
out
les
dec
cmpsl
and
outsb
inc
movsl
fistl
dec
ret
mov
push
negl
das
mov
mov
mov
mov
stos
sub
xlat
cmp
aas
push
pop
jns
push
dec
xchg
bound
mov
mov
scas
xor
popf
aam
ljmp
xchg
icebp
inc
pop
cmp
jns
xchg
ja
shll
call
loope
jns
mov
mov
arpl
jns
cmp
scas
imul
stc
jb
lret
xchg
jae
and
or
js
out
or
xchg
scas
and
or
orl
xchg
push
rcrb
subb
jg
jbe
int3
mov
dec
jmp
das
out
pop
push
inc
cmp
nop
jp
add
and
out
lret
jns
pop
pop
or
loopne
icebp
or
js
cwtl
test
jp
in
sub
mov
lret
dec
imul
loope
sbb
stos
sahf
and
ljmp
jg,pt
not
xor
mov
xchg
mov
lahf
adc
aam
loope
mov
enter
fdivrs
repnz
sub
jb
in
jns
fstl
sbb
push
fisttpl
popf
lahf
or
imul
lret
fistpll
test
pop
pop
cmp
sbb
sbb
pop
inc
in
push
pop
pop
repz
arpl
mov
jb
aam
fdivrp
or
lcall
jle
ds
push
jmp
jae
out
mov
test
pop
mov
leave
insl
mov
loopne
cmp
dec
out
xchg
sub
clc
das
rsqrtps
lret
push
lahf
sub
mov
mov
sbb
push
mov
mov
or
cld
and
pop
jne
jb
sub
xchg
iret
fnstenv
ror
out
mov
scas
mov
ljmp
in
lret
decl
cmpsb
test
lret
sub
imul
fcmovne
add
mov
sbb
cwtl
outsl
psubd
mov
outsb
jle
mov
scas
frstor
jmp
and
in
xchg
cmovle
cmp
pop
jno
inc
xor
pop
jns
jl
cmp
sarb
aas
mov
pop
jp
pop
push
add
adc
push
mov
xchg
lods
xchg
or
mov
jle
and
nop
pop
sarl
pop
lret
cmp
mov
xchg
push
pop
push
imulb
jge
add
dec
or
jns
ja
popa
mov
push
ret
dec
nop
lock
lahf
jg
dec
push
lds
mov
popf
mov
add
cli
in
lahf
out
adc
xlat
aas
hlt
out
test
jg
cld
into
fisubs
push
sub
xor
add
xchg
sbb
dec
loop
lahf
fidivl
out
aas
test
jle
or
push
mov
jnp
repz
xor
movsl
mov
mov
lret
add
inc
pop
mov
js
lret
mov
push
stos
movsb
cmp
out
lea
scas
mov
inc
outsl
xchg
jns
sahf
adc
repnz
xchg
cmpsb
ja
repz
es
loopne
dec
mov
das
out
mov
cmp
call
lahf
aas
jg
sahf
ja
dec
cmp
aas
adc
out
bound
xor
sbb
cwtl
out
sti
xor
sbb
dec
lods
cmp
push
cld
mov
jns
aas
hlt
lret
and
xor
inc
rclb
scas
sub
repnz
bndstx
mov
push
xor
pop
jmp
jne
cld
stc
repz
outsb
call
ret
mov
aas
jg
sbb
out
imul
xchg
cmp
ljmp
push
je
sarl
cld
stc
repz
sahf
ja
xchg
sbb
pop
ds
cmp
lahf
aas
jg
push
hlt
and
cmp
cmp
stos
addl
repnz
repz
push
mov
fidivrl
stc
inc
stc
xchg
add
repz
mov
mov
mov
js
popa
sbbb
out
test
inc
pop
xchg
sbb
sahf
ret
dec
jbe
faddl
adc
andl
pop
xchg
ror
dec
in
push
aad
xor
pop
jns
mov
mov
test
sub
cltd
andl
mov
mov
mov
rcrl
or
lahf
aas
or
push
iret
movsb
addb
lret
fnstsw
fbstp
mov
stos
push
pop
jns
or
imull
test
into
movsl
ucomiss
add
popa
dec
lahf
aas
lcall
or
mov
ja
popf
cmpsl
js
stc
repz
push
mov
sub
pop
and
mov
fsubrp
outsl
mov
sbb
mov
gs
add
bound
pusha
jge
pop
push
dec
cmp
scas
mov
stc
xchg
icebp
in
scas
data16
movsl
mov
aas
jg
cld
ret
stos
mov
call
sbb
lret
lahf
nop
ds
push
sarb
push
mov
cld
inc
ds
pop
mov
mov
daa
ret
add
mov
mov
stc
mov
fisttpl
rclb
mov
jbe
ss
aas
pop
add
jae
into
push
sub
and
lds
in
mov
cltd
lahf
scas
movsl
dec
ss
cmp
push
and
das
js
ja
cmc
xor
xorb
mov
inc
pop
lahf
pop
lret
pop
xlat
pop
fstl
mov
sub
insb
aaa
mov
cli
mov
and
or
clc
push
sub
arpl
lahf
aas
jg
lock
sbb
subl
mov
sbb
lret
iret
sbb
mov
je
jo
pop
xchg
fstp
outsb
sub
mov
push
sete
testb
and
pusha
xchg
push
pushf
mov
loope
rclb
lods
jge
es
into
dec
jb
repnz
xor
xchg
ljmp
jo
rcl
cld
stc
adc
push
fwait
js
and
or
and
jg
vpunpcklwd
mov
outsl
cld
stc
and
cmp
int
scas
aam
jmp
sub
mov
das
pop
inc
mov
stos
loope
out
lahf
aas
cmp
inc
cmp
push
je
sti
sti
repnz
pop
fcompl
and
out
aas
xchg
mov
in
test
std
or
cmc
aas
pmullw
jg
lcall
outsb
fcomps
stos
jns
repnz
lret
iret
cmp
or
addr16
sub
stc
push
jg
aam
insb
push
sub
sbb
popf
leave
sbb
adc
mov
jg
jns
pxor
jns
call
inc
sbb
jg
dec
jl
dec
out
cmc
in
inc
fsubr
scas
rcrb
fsubr
xchg
inc
push
mov
sbb
xchg
mov
out
mov
xor
lret
aaa
ret
xor
or
stc
xor
mov
cmp
lock
fcmove
das
lahf
aas
jg
jno
fstl
adc
xor
adc
shlb
scas
dec
test
in
leave
pop
stc
repz
inc
pop
and
movsl
inc
xor
ret
push
or
into
aas
jg
cld
xor
cmp
insb
loopne
cmp
out
lret
mov
dec
or
movsb
ljmp
std
xchg
arpl
push
sub
iret
lahf
aas
mov
shlb
xchg
jmp
inc
add
in
xchg
add
cltd
and
fnstsw
repnz
daa
push
lods
std
push
jno
fdivr
lods
add
dec
cld
mov
push
data16
loop
mov
lahf
aas
xlat
pop
pop
jp
xorb
clc
repnz
lcall
cld
out
stc
ret
loopne
cs
dec
dec
mov
cwtl
stos
outsl
int3
sub
scas
inc
into
std
repnz
repz
cmp
imul
lods
push
push
cmp
int3
in
mov
pop
int
push
sbb
scas
rclb
mov
gs
rcrl
mov
cmc
ljmp
scas
push
js
shr
icebp
push
hlt
lret
pop
mov
xor
iret
lahf
aas
jg
mov
mov
push
adc
ljmp
dec
jo
cli
in
mov
shl
jl
jle
cld
cs
mov
rorl
mov
fdivrs
fldcw
adc
lahf
aas
jg
jle
sub
cmpsb
outsl
loope
dec
jne
repnz
lret
iret
push
pop
femms
jae
out
inc
imul
pop
scas
mov
cs
pop
sahf
push
lods
mov
pop
fcompl
stos
out
out
nop
loop
in
sahf
sub
int
pop
jns
repnz
out
mov
sbb
das
sbb
movsb
pusha
jns
xchg
push
jns
repnz
mov
push
pop
jle
and
lock
fstpl
push
ljmp
xor
adc
icebp
add
nop
inc
or
mov
outsl
int
int
pop
xchg
jge
sbb
lret
stc
mov
loope
cli
lds
vmrun
scas
mov
mul
jae
or
and
push
lret
ds
hlt
dec
mov
pop
sub
das
jns
mov
xchg
sub
lret
aaa
push
push
out
jp
incb
stc
push
call
out
fiadds
adc
sbb
inc
pop
jle
cli
mov
daa
mov
aas
lret
lahf
in
imul
push
xor
mov
or
lock
mov
aaa
cmc
in
stos
push
and
xchg
iret
sbb
sbb
repnz
fisubs
mov
and
sub
in
lahf
aam
mov
sub
inc
pop
adc
data16
fcompl
scas
add
and
call
pop
jns
nop
or
lret
and
pop
jns
xchg
xlat
in
ds
lea
lret
adc
pop
mov
in
xchg
xchg
push
add
aas
jg
or
jb
add
pop
fstpt
or
mov
add
pop
xor
lret
fstpl
out
mov
mov
jmp
dec
xchg
mov
sub
decb
jl,pn
aas
adc
mov
clc
repnz
xchg
adc
pop
pop
call
adc
loopne
pop
in
loopne
sub
sub
mov
or
and
repnz
dec
ror
adc
sbb
jg
cld
lcall
add
dec
movsb
iret
lahf
aas
scas
pop
jbe
push
adc
xor
fiaddl
cld
stc
repz
mov
pushl
fstpl
jnp
push
leave
lahf
aas
jg
xchg
hlt
push
jbe
bound
test
out
out
pop
jle
clc
test
pop
xor
rcrb
jg
ds
push
push
push
sahf
pop
into
pop
test
out
lahf
ret
mov
sub
or
dec
mov
dec
mov
out
fimuls
pop
mov
fisttps
arpl
mov
add
xor
mov
inc
repnz
sahf
jmp
xchg
add
mov
das
scas
mov
inc
sti
push
mov
cltd
add
sti
in
lock
mov
fwait
lcall
mov
enter
jecxz
nop
cmpsb
push
repz
pop
cs
sti
pop
shlb
sbb
stc
cld
stc
cmp
repz
stos
sbb
les
pop
jg,pt
mov
mov
dec
out
jo
aad
jae
or
cld
stc
repz
xchg
shl
enter
insl
arpl
int
lahf
aas
jg
push
je
out
and
js
mov
es
int
dec
cmp
adc
and
xchg
lret
jle
flds
fisttps
cmp
scas
mov
jns
xchg
iret
cmp
mov
sarb
repnz
or
dec
andl
lea
jns
xchg
push
push
out
push
ret
push
loopne
inc
enter
fidivrs
mov
lcall
xchg
aas
jg
dec
les
cltd
mov
mov
adc
repnz
outsl
idivb
ljmp
adc
lret
cmp
inc
lret
sbb
pop
push
jecxz
add
out
jg
cld
stc
mov
push
push
shrl
and
aas
scas
fstpt
jno
mov
and
cld
add
imul
sbb
inc
scas
sub
cs
aas
jg
loopne
sbbl
leave
aas
xchg
cltd
pop
scas
mov
or
ja
mov
mov
das
mov
push
sahf
pushf
adc
mov
idiv
or
inc
sbb
adc
or
or
pop
sub
ds
pop
cmp
ds
add
lret
cltd
xchg
repz
lahf
cmpl
scas
xchg
inc
dec
sbb
dec
ss
cmp
jle
sahf
mov
adc
lahf
aas
dec
cmp
push
mov
outsl
fdivrl
xchg
cld
add
rolb
jge
sub
inc
add
push
dec
lahf
aas
jg
ds
add
push
lods
dec
xor
jns
dec
loopne
enter
or
cmp
stc
push
fidivrs
cwtl
push
inc
jbe
ret
pmulhw
jge
ds
hlt
ret
cmc
std
jecxz
pop
and
xchg
pop
jmp
enter
arpl
outsb
pop
inc
sub
mov
mov
xchg
dec
sub
xchg
sub
icebp
inc
iret
arpl
fnstcw
pop
mov
addl
aas
mov
aad
push
adc
mov
add
test
cli
xchg
aam
push
pop
loop
push
out
push
mov
jg
sbb
ds
out
sti
xorl
jg
dec
into
mov
ds
ffreep
iret
sbb
jg
pop
hlt
out
and
jb
dec
pop
lcall
mov
test
push
es
in
sub
gs
mov
jne
sti
adc
or
jl
insb
cmp
xlat
adc
je
mov
test
inc
push
sti
decb
jle
mov
and
fstpl
in
jmp
push
int
fsts
pop
ret
xor
stos
mov
sti
in
adc
sbb
jo
inc
int
jg
cld
push
pop
out
push
mov
sarb
orl
inc
out
cld
cwtl
cmp
sbb
mov
xchg
mov
pop
adc
mov
ret
push
mov
pop
mull
push
int
or
rolb
aas
jg
pop
mov
dec
outsl
xor
xchg
scas
fidivrs
aam
sti
push
dec
or
xchg
lahf
aas
add
fbld
sti
mov
lret
push
test
ret
mov
push
test
xchg
push
fimuls
in
imul
cld
das
push
pop
jns
pusha
add
pushf
loop
fst
ficoms
sarb
cmp
push
mov
insb
repnz
das
inc
lock
push
mov
and
xor
pop
push
shl
aas
cmp
aas
push
out
add
lds
pop
push
jns
ss
je
das
dec
xlat
cmp
jge
jle
in
push
pop
sahf
sti
dec
es
jle
loope
jnp
lods
xchg
push
pop
jns
dec
and
jg
add
in
pop
mov
rclb
jle
adc
enter
enter
fmuls
xor
cmc
das
xchg
cli
outsl
jl
sahf
xlat
mov
out
lahf
cmpsl
setns
rcl
fnsave
inc
call
repnz
add
lahf
aas
jg
aaa
cmp
add
inc
dec
mov
jg
in
test
pop
outsl
outsl
repnz
dec
mov
outsl
repnz
in
sbb
cmpsl
cmp
dec
push
mov
movsb
mov
xorl
jg
cld
stc
mov
jmp
popf
push
adc
mov
xchg
lahf
aas
rcrl
pop
arpl
sahf
lods
pop
mov
out
add
mov
jb
mov
and
stc
iret
inc
stc
stc
jae
iret
loopne
jg
aas
sbbl
xchg
mov
iret
jmp
cld
das
dec
loopne
ljmp
test
scas
cld
mov
stc
repz
xor
pop
jg
xor
aas
jg
js
cs
scas
sub
in
mov
stc
repz
aam
jl
sub
andl
mov
or
jp
test
popf
mov
inc
pop
mov
push
fidivrs
jae
mov
bound
stc
out
sbb
jb
bsr
iret
pushf
mov
jg
insl
std
pop
pop
bound
dec
jne
mov
rcrb
in
outsb
leave
cmpsb
sub
in
stc
repz
std
scas
shrb
and
cmp
ret
stc
cld
ljmp
in
add
push
lret
xchg
test
loope
cltd
out
mov
loop
out
mov
xchg
inc
mov
repnz
mov
enter
mov
fmul
sub
add
fucomi
push
out
je
jle
repnz
stc
scas
xchg
andl
push
xor
outsl
xchg
adc
xlat
dec
in
jle
movsl
mov
pop
mov
xchg
scas
xchg
xchg
stos
out
xchg
push
pop
jns
in
jnp
js
push
sbb
sti
or
pop
jns
jge
fucomp
in
adc
test
push
sahf
cld
stc
xor
fisubrl
lds
dec
stos
push
xor
dec
mov
pop
push
pop
loop
test
xchg
xchg
lcall
sbb
xchg
jge
and
sbb
loopne
sub
stos
jns
repz
les
fidivrs
mov
xchg
clc
add
repnz
ret
adc
mov
cltd
mov
jns
cmp
xchg
ja
and
daa
popl
xchg
pop
sub
js
js
wrmsr
icebp
fists
cwtl
stc
inc
les
adc
mov
dec
pop
pop
jns
mov
imul
out
or
pop
push
pop
fisttps
nopl
lahf
jg
mov
jle
xor
out
rclb
jb
lods
and
cld
stc
repz
push
add
rclb
sub
ds
test
mov
repnz
sub
stos
hlt
jne
add
xor
movsl
add
repnz
pushl
subl
and
adcb
dec
fbstp
outsl
fcmovbe
jbe
xchg
les
lahf
aas
test
mov
add
dec
std
jb
mov
inc
inc
pushf
cltd
push
push
cmp
aas
jg
ds
mov
inc
lahf
and
in
iret
mov
inc
cmpsl
in
lods
das
add
jne
push
cmp
int3
cli
dec
stos
lea
loope
pop
das
jge
test
enter
repnz
flds
push
out
aas
jg
cld
out
jmp
mov
inc
notl
in
cmp
cmpl
mov
mov
pop
ss
insb
xchg
xor
xchg
sub
aaa
lcall
jns
add
mov
sbb
xchg
test
xchg
loope
lahf
pop
dec
adcl
and
cmp
cmc
pop
dec
cld
add
xchg
mov
lahf
aas
jg
les
inc
mov
cld
stc
repz
insl
mov
sarb
lret
cmp
push
lahf
aas
jg
sub
aas
mov
dec
jmp
xor
repnz
xchg
iret
popa
data16
lret
xor
test
xchg
cmc
frstor
call
dec
mov
and
dec
scas
mov
sbbl
push
lret
mov
imull
iret
lahf
pop
dec
mov
popa
mov
hlt
repnz
pop
hlt
subb
aas
stos
into
cld
sarl
xor
mov
add
cmp
push
pop
ret
cmp
jge
cld
scas
das
sti
aas
jecxz
ret
add
ret
xchg
push
push
frstor
and
cs
pop
lcall
mov
sbb
fildll
push
pop
jns
sub
sub
dec
ret
mov
jns
frstor
mov
pusha
mov
rolb
sahf
arpl
or
xchg
fisttps
sbb
mov
daa
stc
xor
faddl
lock
jle
jnp
xor
iret
push
xor
and
xor
cmpl
fnsave
mov
jae
dec
cmpsl
repnz
add
add
mov
ljmp
cs
jo
inc
loopne
mul
inc
cmpsl
dec
dec
mov
iret
pop
and
pop
jl
sub
pop
jp
out
icebp
sub
movsl
and
mov
cmp
decl
outsl
shl
stc
pop
mov
push
aaa
pop
jb
cmp
lock
add
outsb
das
fidivrs
fisttpll
outsl
mov
test
mul
xchg
push
xor
or
jns
mov
fsubl
iret
and
mov
pop
push
dec
fsubrl
mov
xchg
ja
out
andl
xchg
aam
fdivl
pop
jns
imul
xor
call
lret
hlt
insl
sarl
mov
mov
repnz
das
pop
inc
sub
or
jbe
lret
scas
stos
gs
out
orb
outsl
jge
lahf
pop
scas
mov
or
cmpsl
aad
pop
push
scas
mov
push
jp
adc
out
xchg
push
pop
jns
add
das
dec
inc
in
hlt
add
pop
pop
jns
and
cmp
dec
and
jg
shll
mov
jns
stos
adc
js
xchg
cld
inc
arpl
fwait
and
sub
call
fiadds
sub
xchg
sub
cmp
nop
test
xchg
outsl
orb
mov
cmp
inc
adc
adc
sub
scas
mov
adc
inc
rorl
scas
mov
jmp
push
dec
xor
pop
cmp
lret
pop
mov
inc
into
test
jns
fldl
cs
mov
fdivrs
xchg
push
daa
inc
lcallw
jecxz
leave
mov
das
push
pop
test
xor
and
ss
pop
jns
insb
cs
or
lret
push
es
jns
in
cltd
jns
inc
mov
fldenv
push
pop
push
lret
dec
jmp
inc
cli
xchg
push
pop
jns
inc
data16
cltd
adc
sub
jns
and
xchg
inc
mov
cwtl
xchg
add
jns
stos
or
jmp
mov
ret
pop
adc
ret
pop
sti
sbb
add
xor
loope
cmp
jbe
xlat
ret
scas
outsl
in
adc
mov
popa
cmc
or
mov
out
lods
pop
sbb
sub
insb
add
pop
cli
in
filds
mov
popf
mov
ds
inc
or
xor
std
aaa
mov
in
sti
fcmove
pop
icebp
adc
out
aaa
into
push
repnz
pop
xor
out
lahf
aas
jge
lock
inc
push
cmp
cmp
icebp
pop
loop
mov
or
insb
setle
movd
jbe
js
stc
cld
ret
call
mov
dec
lret
jle
loopne
ljmp
jle
xchg
pop
clc
in
jp
lret
rorb
or
insl
mov
mov
sbb
lahf
aas
or
jo
push
mov
ja,pn
fsubrs
lea
cld
cmpsl
mov
push
fdiv
adc
xchg
ret
adc
int
inc
add
pop
ret
test
push
xor
imul
push
test
aas
jg
test
loope
sti
out
loope
mov
iret
pushf
mov
jo
je
inc
lret
out
lahf
cmc
or
dec
cwtl
xchg
or
jns
dec
rcrb
cmp
mov
test
icebp
sub
xchg
push
pop
xchg
adc
sbb
out
push
mov
xchg
lret
sbb
das
cld
stc
mov
and
es
ja
pop
mov
and
sbb
bound
repnz
aam
je
dec
cltd
dec
adc
jns
repnz
or
adc
or
jb
xchg
push
cmp
inc
jo
xchg
test
inc
scas
xchg
pop
cmp
data16
push
cld
or
in
lods
inc
lcall
loope
add
jg
cmp
adc
push
aas
jle
jg
aad
inc
pushf
mov
aam
or
pop
inc
mov
push
jg
sub
repz
mov
sbbb
add
pop
xchg
std
repnz
fists
sub
aam
das
shll
aas
add
jo
sbb
icebp
out
lret
out
and
pop
or
lods
lahf
inc
stc
inc
jns
out
sahf
sarl
mov
gs
cld
cld
stc
fs
clc
mov
sub
repnz
scas
cmp
sbb
inc
scas
inc
xchg
and
scas
mov
out
adcb
mov
xor
stc
fmuls
dec
jl
sub
int3
rclb
test
xchg
sub
arpl
adc
repz
aas
out
adc
sub
jg
cld
stc
jns
or
add
iret
mov
mov
xchg
outsb
rcrl
cmpl
mov
arpl
or
push
les
cwtl
xchg
scas
dec
pop
iret
mov
shlb
and
xor
mov
gs
aad
dec
out
xchg
adc
xchg
push
pop
jns
test
dec
pop
jmp
shlb
xchg
inc
out
adc
push
or
push
pop
out
outsb
pop
sub
daa
pop
mov
push
pop
into
inc
push
stc
jns
xchg
ja
lea
nop
lds
shl
call
mov
xor
stos
jg
mov
sarb
inc
scas
mov
xchg
pop
inc
les
sub
jle
dec
shll
push
or
fcmovne
das
test
icebp
sbb
adcl
lahf
aas
jg
push
inc
mov
inc
es
dec
stc
repz
pop
decb
inc
loop
jne
mov
aas
jg
cld
notb
scas
jo
inc
fiadds
mov
xor
mov
test
mov
daa
jmp
out
adc
cmp
dec
dec
push
sbb
xor
jp
cmp
xor
mov
outsb
dec
xchg
or
loopne
stc
cld
lcall
popf
xor
out
sbb
xchg
sub
add
xchg
mov
imul
cwtl
js
xor
xchg
push
pop
jns
pop
push
xorl
sub
in
add
ficoml
push
mov
loop
cmp
stos
dec
pop
push
pop
jns
fs
int3
scas
inc
dec
push
std
xor
lret
xchg
pop
out
dec
jg
enter
cld
or
repnz
mov
aas
adc
xor
aas
jg
dec
mov
lahf
cld
sbb
sub
jg
adc
arpl
mov
xchg
ss
aaa
out
lahf
aas
add
mov
jno
pop
sub
cmp
ret
stc
repz
jmp
xchg
jno
sti
mul
repz
mov
xor
mov
mov
mov
mov
outsb
aas
sub
lret
ljmp
mov
mov
scas
mov
adc
xor
stos
pop
lcall
iret
mov
lods
pop
and
jno
mov
scas
mov
arpl
sbb
sahf
xor
mov
or
fdivrs
push
xchg
and
sub
int3
inc
jg
aas
aam
aas
iret
push
stos
pop
out
xchg
in
lret
lods
xchg
in
imul
out
lret
dec
rclb
push
popf
int
cmp
xchg
pop
add
mov
mov
lods
dec
ss
cld
orl
push
nop/reserved
jnp
mov
out
add
jg
mov
jmp
in
lahf
dec
cld
cs
pop
fs
lret
frstor
iret
in
cmp
jle
das
out
adc
jecxz
push
ljmp
lahf
iret
aas
imulb
jge
icebp
lret
xchg
mov
and
jmp
xor
xor
lahf
aas
jg
dec
push
fdivs
mov
push
pop
stc
ror
xor
xor
add
mov
sbbb
adc
movsb
inc
add
pop
xchg
mov
sub
and
das
push
mov
ljmp
inc
cs
jns
fnstsw
inc
pusha
push
icebp
in
fisubs
lahf
jnp
js
daa
jbe
imul
pop
pop
scas
xor
add
adc
lret
mov
xchg
fistpl
das
scas
mov
cli
arpl
neg
std
adc
call
das
repz
mov
jno
sub
dec
sahf
mov
adc
sub
mov
jg
pop
pop
jns
and
mov
inc
ret
cmp
das
lahf
aas
ficoms
jbe
inc
and
jl
data16
out
lret
xlat
push
in
mov
rcrb
lret
mov
in
jmp
popf
cmpsb
aaa
add
sub
jns
test
movsb
das
push
dec
sbb
push
scas
mov
mov
pop
cmc
scas
bnd
push
pop
in
mov
ret
mov
mov
push
add
andl
sar
cwtl
xchg
repz
shlb
lock
out
jg
cld
stc
sbb
mov
je
add
mov
das
aas
mov
sub
lcall
add
sarb
jecxz
adc
and
jne
mov
and
je
daa
mov
pop
cs
icebp
in
fidivs
repnz
ja
imul
repnz
mov
add
out
mov
lret
outsl
jp
mov
nop
push
mov
out
pop
in
icebp
out
out
lods
and
stc
repz
cmpb
inc
mov
xlat
ret
fistpll
pusha
add
jg
dec
mov
adc
and
imul
sti
in
ret
push
data16
out
cmp
jle
xchg
outsl
sahf
xchg
jnp
scas
addr16
js
gs
pop
xchg
scas
hlt
out
das
and
jge
pop
subb
repz
pushf
inc
xor
daa
or
stc
xchg
out
aas
fistpll
fildll
loope
lock
mov
cmp
jg
jmp
adc
cmp
sub
sub
setg
rolb
fldcw
iret
loopne
lret
xlat
cmp
pop
in
jecxz
sbb
bound
lods
fldenv
xchg
aas
jg
hlt
jnp
mov
mov
into
push
push
mov
jns
pusha
mov
subb
dec
add
sarl
jl
cld
stc
or
sub
pop
sub
test
lahf
pop
pop
sbb
dec
adc
dec
xchg
xchg
ret
or
sbb
sub
ljmp
cli
dec
mov
daa
shl
xchg
push
leave
sub
stos
stc
cmp
in
cltd
ds
roll
dec
mov
incl
dec
cmpsl
lret
cmp
iret
xor
je
outsb
repnz
cltd
sub
test
je
pop
mov
pop
jg
pop
jle
xor
sub
sub
lcall
mov
mov
dec
lret
xchg
mov
xorb
xchg
pop
pop
in
jne
andb
ja
nop
sbb
mov
jb
jae
mov
pcmpgtb
sub
adc
xor
filds
xor
dec
jmp
mov
jp
sbb
pop
outsb
pusha
jp
and
xorb
pop
xlat
ret
test
or
sbbb
jmp
cmpb
imul
shll
aas
mov
in
xchg
ja
cltd
cmp
xchg
inc
scas
addr16
cmp
mov
push
add
pop
nop
pusha
xor
adcb
outsl
xor
pop
dec
lcall
add
jge
rorb
scas
mov
xchg
jl
cmp
add
mov
dec
pop
dec
mov
out
xor
inc
sub
cwtl
sbbb
mov
pusha
xor
xchg
sub
cmpb
pop
cmpsb
lret
lahf
mov
sbb
push
in
das
lods
scas
pop
cmpb
into
push
lret
cltd
mov
lret
sets
outsb
mov
mov
cmpb
pop
xchg
leave
add
pop
in
cmpb
cmpsl
xlat
mov
cmpsb
mov
dec
cmpb
pop
sbb
pop
and
cmpb
lret
cltd
mov
popl
cwtl
dec
mov
cmp
mov
and
inc
clc
dec
mov
aas
xor
test
orl
das
lahf
aas
cld
pop
jp
in
mov
and
cld
adc
pop
lahf
fdivl
outsb
inc
push
into
rcrl
das
mov
jp
pusha
mov
add
aam
iret
mov
inc
in
jmp
mov
dec
push
arpl
sbb
stc
repz
clc
push
xchg
sub
jnp
xor
outsl
jl
or
outsl
jbe
sbb
or
adc
pop
cwtl
test
lret
mov
push
mov
sbb
xor
pop
movd
mov
jge
dec
dec
sbb
popa
add
jl
call
mov
iret
das
xor
pop
cmp
inc
sub
cmp
mov
sarb
aas
ret
aas
iret
popf
addr16
orl
pop
dec
cmpsl
add
pushf
notb
cmp
das
jg
cld
das
pop
iret
and
jne
loopne
sbb
fcoms
in
ja
pop
jbe
mov
jle
mov
pop
pop
sbb
dec
mov
add
xchg
push
pop
jns
insl
mov
lcall
jns
add
xor
imul
mov
sar
in
and
leave
filds
je
or
jg
popa
into
push
inc
mov
sbb
mov
push
ret
lret
iret
lahf
out
sub
or
imul
inc
jnp
repz
pop
dec
mov
movsb
sbb
sub
jle
or
pushf
insb
sbb
fistpll
bound
scas
mov
push
jae
xchg
push
mov
push
sbb
lret
js
incb
cmp
pop
ffreep
jne
out
pop
mov
jge
lock
out
shr
sti
add
or
fwait
push
pop
pop
inc
lahf
lods
ss
loope
loopne
inc
pop
jg
rorl
pop
fidivrs
mov
shlb
dec
dec
push
sub
mov
out
aas
jg
cld
cs
xchg
pop
adc
jae
fcmovnbe
and
fmull
jg
cld
scas
testb
loopne
or
adc
and
test
lret
out
dec
xor
mov
jle
cld
stc
jle
jb
sub
inc
pop
test
fucomp
lret
iret
lahf
aas
mov
xorb
arpl
loopne
out
subl
out
lahf
aas
dec
repz
loop
add
adc
mov
leave
flds
xchg
cld
push
sub
pushl
xchg
loope
aas
jg
fiadds
cwtl
jbe
inc
hlt
add
call
arpl
mov
sub
cmp
das
iret
cmpsb
add
mov
shlb
push
ja
repnz
jp
add
dec
sbbb
hlt
in
arpl
out
pop
jns
idivl
and
jbe
in
push
cli
sti
test
loopne
pop
dec
inc
pop
repz
les
test
in
jge
adc
cli
xor
rcrb
aas
mov
pop
je
xchg
mov
je
fstpt
dec
dec
push
mov
jle
and
sbb
fstl
out
mov
leave
pop
outsl
scas
mov
jp
or
sbb
lret
jns
mov
adc
data16
sub
mov
aaa
repnz
xor
inc
push
mov
sub
pop
loopne
cs
or
pop
add
aas
ljmp
stos
push
dec
icebp
or
and
xchg
cmc
lret
out
dec
mov
movsb
insl
ds
cld
repnz
inc
aad
mov
pop
pop
and
pop
jle
rcll
adc
cwtl
lahf
push
jg
xchg
incl
pop
out
dec
hlt
lahf
xchg
ljmp
mov
lahf
push
and
mov
notl
jo
mov
cmpsl
sub
pop
loopne
adc
insb
mov
push
lahf
aas
jg
add
imul
movsb
pop
adc
push
ret
push
mov
dec
das
ret
out
fisubrs
push
outsl
xchg
and
jb
iret
fcomp
pop
iret
mov
cld
stc
mov
xchg
std
repnz
add
lahf
aas
jle
arpl
das
rcll
adc
xchg
xchg
jne
lret
add
aad
and
loop
xor
loope
mov
das
cmp
inc
stos
movsl
mull
das
cmp
scas
aas
xchg
sti
fwait
jo
arpl
clc
cmc
add
pop
xlat
lods
and
in
aas
jg
and
push
mov
hlt
loop
jnp
cs
lret
mov
popa
pop
and
dec
sbb
clc
test
fnstcw
pop
cmp
pop
rorl
jns
fnsave
je
dec
js
ss
nop
in
insl
xchg
aam
push
or
les
jmp
test
add
sub
loop
or
push
mov
cld
jo
and
adc
aas
imul
jns
dec
cs
jle
xor
fcompl
bound
pop
inc
pop
jle
sbb
push
in
repnz
lahf
xor
movsb
hlt
inc
jl
loop
loopne
movsl
hlt
mull
pushf
xchg
inc
rolb
jg
cld
inc
mov
setge
jl
and
icebp
xlat
das
lahf
lods
inc
aad
mov
cld
stc
repz
pusha
fldt
or
pop
lahf
aas
jg
aam
mov
push
pmuludq
repnz
test
iret
adc
bound
fdivrp
and
mov
jb
sub
in
push
xor
cmp
std
lcall
repnz
out
pop
jle
cmp
iret
cwtl
mov
std
cmp
jecxz
fadd
pop
dec
aam
add
mov
push
cmovg
aam
iret
lahf
mov
imul
ss
dec
stc
repz
loop
mov
outsb
leave
jae
in
movsb
es
pop
jle
cld
cmpsb
ds
dec
cmpsb
loope
shrb
in
ja
test
dec
ret
mov
in
push
pop
inc
xor
add
xchg
jns
dec
push
in
xor
mov
xchg
sub
push
inc
bound
mov
or
and
mov
dec
jge
in
lret
mov
mov
data16
mov
xchg
push
pop
adc
add
stc
jno
pop
in
cld
stc
daa
icebp
add
scas
sti
push
ljmp
pop
xchg
push
fimuls
pop
lods
cmovl
test
ret
xchg
aas
jbe
in
pusha
inc
mov
pop
sbb
int3
jbe
jns
xchg
mov
fs
xor
xor
fdivl
in
push
pop
ja
adc
inc
or
hlt
xchg
push
pop
jns
rol
dec
inc
fldenv
mov
pop
xor
mov
sub
rcl
pop
das
repz
jl
add
scas
mov
push
data16
pusha
iret
or
loope
icebp
repnz
push
sbb
dec
daa
pop
ret
cli
xor
and
inc
mov
repnz
aas
xchg
push
cmp
stc
xchg
hlt
mov
cmp
call
lcall
jp
in
stos
mov
jbe
fistps
repz
lahf
cwtl
inc
pop
push
inc
enter
jg
cld
stc
test
and
test
xchg
ljmp
lahf
aas
out
cwtl
xchg
inc
add
test
icebp
in
fstl
mov
fisttpll
jns
xchg
aas
mov
movsl
iret
loopne
dec
push
pop
out
loope
fdivl
outsl
hlt
dec
mov
and
scas
fidivrs
mov
out
and
pushf
out
sub
aas
dec
sarb
cld
stc
jnp
push
scas
dec
jno
loope
aaa
jnp
mov
daa
mov
lahf
aas
ljmp
push
sahf
shl
das
xchg
push
pop
jns
in
clc
sahf
mov
insb
adc
pop
push
pop
jns
push
std
push
dec
movsb
mov
testl
xchg
outsl
xchg
fildl
push
push
and
sub
movsb
jns
xchg
push
out
add
pop
lods
ss
lret
push
pop
mov
fsubs
aas
mov
mov
sbb
out
inc
jne
mul
fnstsw
loop
outsl
hlt
mov
arpl
out
cld
mov
loope
movsl
mov
popa
jnp
mov
repz
xor
orl
test
idiv
in
dec
cmp
test
adc
jns
xchg
call
iret
pop
sub
andl
push
mov
imul
test
mov
xchg
sub
daa
cmp
pop
out
lret
jle
add
fwait
lods
and
sub
popa
sub
mov
jbe
fldt
xor
iret
pop
sub
test
repnz
pop
hlt
js
jp
in
push
aas
xchg
mov
mov
jne
out
lahf
adc
push
fistpl
cmp
xor
push
lahf
fwait
js
loop
pop
and
scas
mov
movaps
das
or
sbb
hlt
cmc
movsb
aad
or
mov
add
ret
repnz
pop
mov
pop
mov
lret
popf
jecxz
xor
pop
movsb
fdivl
sub
ret
cltd
pop
xor
xor
scas
mov
mov
aaa
add
mov
xchg
xchg
movsl
cmp
add
sbb
iret
pop
push
pop
jns
fldt
pmaxsw
mov
ds
pop
jns
xchg
rorb
and
cmp
xchg
push
popf
pushf
ret
mov
int
ret
in
push
pop
push
push
out
loop
pop
xlat
lods
push
sub
fdivrp
jb
and
or
data16
jnp
rclb
inc
pop
inc
outsl
mov
rorb
push
fldl
cmc
out
repnz
push
xchg
inc
mov
mov
cld
stc
cmpsl
cs
shlb
je
mov
lahf
aas
jg
or
mov
scas
repnz
mov
mov
xor
lret
out
sub
add
xchg
cmpl
cld
stc
popa
and
xlat
push
push
test
add
or
pop
sbbb
into
scas
push
jecxz
mov
pop
mov
les
out
leave
out
lea
xchg
roll
xor
xchg
ja
push
push
jg
mov
sbb
pop
lret
jns
dec
xchg
or
mov
inc
cmp
repnz
dec
lcall
data16
pop
std
push
shl
lret
cmp
pusha
repz
pop
ds
inc
pop
js
imul
lods
aas
jg
in
fsubp
imul
out
dec
jns
sub
and
aas
jg
out
loopne
jmp
and
nop
pop
ja
xchg
jae
fiadds
iret
sbb
and
cld
stc
xchg
hlt
mov
fwait
pop
ficomps
movq
cmp
inc
pop
xchg
pop
mov
insl
jge
jno
ficomps
loope
out
adc
xchg
loopne
jg
xchg
mov
cld
out
lahf
xchg
pusha
out
xchg
arpl
repnz
scas
mov
in
xor
lods
mov
ljmp
loopne
dec
inc
push
push
cli
sbb
jae
fwait
js
dec
bound
repnz
sub
mov
ss
test
lret
sub
sbb
lcall
gs
adc
fisubs
mov
mov
lahf
aas
jg
mov
sbb
push
je
lret
cmp
outsl
adc
lock
fwait
subl
cld
sahf
hlt
in
push
jae
cmp
scas
cmp
inc
mov
pop
leave
inc
jae
push
adc
sub
sbb
in
out
lahf
jg
outsb
add
repz
imul
sti
in
lods
lds
dec
adc
pop
mov
repnz
test
xchg
cltd
jbe
push
mov
iret
aaa
loopne
sub
add
imul
xor
sbb
mov
cli
in
mov
and
dec
ja
outsl
fidivl
jle
cld
pop
out
add
xor
mov
pop
dec
inc
cmc
das
lods
dec
lods
loop
lock
pop
jns
jp
les
fs
push
sub
repnz
xchg
sub
mov
xchg
jg
cmc
shrl
push
insb
adc
mov
int
repz
push
dec
rorb
cwtl
loopne
cmp
repnz
push
and
xor
jg
cld
fidivrs
icebp
or
cmp
stos
cli
sbb
xchg
pop
stc
loop
cmp
in
popa
jge
lret
pop
les
cs
iret
cli
cmp
sbb
mov
jbe
lret
xchg
cli
inc
sti
out
inc
fwait
leave
out
xchg
push
iret
ja
sti
in
out
in
sbb
maxps
xor
push
dec
cmpsb
jo
in
push
shrb
sub
insb
jmp
dec
mov
in
ja
scas
leave
adc
leave
ficoml
repnz
or
out
icebp
lret
push
xor
dec
mov
jns
jmp
lods
aas
and
pop
lcall
icebp
rol
test
mov
xorl
and
xchg
js
fmul
imul
jns
xchg
outsb
inc
pop
frstor
adc
dec
push
pop
jns
cmpb
lds
or
in
cmp
jmp
imul
aad
mov
sub
repnz
repz
es
jns
xchg
xor
leave
fcoms
repz
hlt
fwait
lods
pop
jmp
mov
adc
jle
ja
aas
jg
push
arpl
faddl
ret
sbb
stos
stos
imull
fcompp
mov
cld
xor
add
jns
enter
nop
out
rcrb
addb
dec
stos
movsb
push
cld
stc
repz
insl
xor
testl
sbb
jle
push
pop
shll
fs
mov
jae
aas
jp
xrelease
and
subb
loopne
pushf
loop
cmp
push
pushf
cmp
scas
pop
jae
xchg
ret
mov
sub
push
lret
lret
mov
int3
scas
xchg
push
jg
inc
or
repz
pushf
jmp
xchg
or
sub
bound
push
clc
repnz
cld
pop
imul
repnz
repnz
adc
pop
xchg
scas
xchg
pop
cld
cmp
hlt
sti
mov
mov
mov
iret
aas
rol
sub
mov
repnz
rorl
push
and
ret
dec
jns
jle
es
outsl
loop
add
xor
lret
outsl
push
inc
mov
cli
mov
repz
cli
fcoml
addr16
int
dec
sub
cld
stc
mov
or
lea
sbb
sbb
inc
in
lahf
aas
in
mov
cmp
inc
enter
mov
lahf
test
ljmp
aas
es
iret
shlb
filds
jns
repnz
xor
loopne
mov
fisttps
xchg
push
pop
push
and
pop
mov
xor
add
add
cs
adc
std
xor
cmpb
dec
popa
jg
xchg
pop
jle
cld
into
in
sbb
nop
popa
nop
jne
cmp
iret
test
pusha
orb
in
cli
outsl
scas
fs
jb
enter
jo
pop
jmp
iret
outsb
or
dec
iret
movsl
mov
ret
add
push
jbe
mov
rorb
jl
insb
cmp
adc
adc
xor
adc
pminub
mov
das
fisubs
push
les
mov
dec
add
popa
dec
pop
add
dec
pusha
aas
dec
sbb
inc
adc
fsubrs
mov
fcmovnbe
jo
xchg
mov
jmp
sahf
push
mov
stc
fildll
into
fisubl
jle
jmp
inc
loope
pop
cmp
mov
sub
cmp
int
std
jb
repnz
clc
in
icebp
test
jge
stc
sbb
jmp
filds
mov
ss
js
jle
mov
out
repnz
das
sbb
pop
sub
clc
idivl
incl
mov
std
mov
js
fidivrl
test
aas
mov
xchg
sub
mov
shll
sbb
fldl
jge
aas
incl
push
mov
and
cmp
jle
sub
test
iret
lahf
aas
jg
shll
outsl
fcomi
mov
mov
jp
repz
outsl
sbb
sub
in
imull
or
into
sub
pop
into
lods
daa
fucom
xchg
push
pop
xchg
test
jp
fnstcw
xchg
push
pop
jns
lds
sub
pusha
push
pop
jns
pop
dec
pop
jno
roll
jmp
rcll
adc
test
repnz
pop
mov
pop
pop
jae
lret
lret
scas
mov
dec
in
repnz
sub
or
push
mov
leave
xor
in
sti
in
fldcw
add
fidivrs
imul
scas
cltd
mov
pop
xchg
loopne,pt
outsl
shrb
gs
data16
xor
jg
adcl
mov
ja
jecxz
xchg
lahf
stc
inc
aaa
repnz
sub
inc
jp
in
rcrl
cmp
lahf
lds
ret
adc
scas
sbb
mov
jl
stos
scas
stos
shlb
mov
push
aas
jne
cmp
lahf
scas
push
subb
das
adc
xchg
lahf
jg
push
sbb
add
in
dec
test
pop
lahf
aas
jg
mov
cmc
cmp
xchg
test
adc
hlt
loopne
sub
fists
pop
jns
nopl
jno
or
shll
mov
into
xor
inc
iret
rolb
ficoms
fldcw
les
ja
cmp
into
pop
imull
iret
push
pusha
jns
pop
scas
sarb
inc
jg
idivb
iret
lahf
pop
mov
sbb
sbb
aaa
push
jg
repnz
xchg
test
xchg
lock
pusha
nop
jp
xchg
sub
orb
sub
clc
xlat
xchg
sub
les
negl
jmp
sbb
in
sahf
push
add
fimuls
lret
lahf
pop
call
sbb
sbb
arpl
out
sbb
mov
inc
adc
xor
mov
jns
xchg
push
mov
test
push
xor
xchg
sub
xor
xchg
push
pop
push
aam
aam
scas
dec
and
decb
push
pop
jns
dec
add
mov
stc
xor
and
ja
pop
jns
xlat
xor
pop
es
les
jbe
jns
xchg
sub
xchg
sub
cmp
fs
sarl
push
outsb
shrb
lock
ja
cli
les
push
pop
imul
rolb
lret
inc
scas
mov
mov
pop
fcompp
and
push
mov
jmp
jle
mov
mov
and
mov
repz
clc
imul
movsb
pop
dec
adc
aad
aas
jg
clc
add
in
mov
inc
and
xchg
movsl
jecxz
loop
cs
mov
xchg
in
push
pop
gs
mov
lods
xchg
push
pop
jns
ret
shrb
mov
mov
push
pop
jns
sbbl
rcr
aad
xchg
inc
ds
jns
xchg
pusha
mov
mov
test
add
das
push
push
data16
les
and
call
inc
das
mov
bnd
jg
sbb
push
test
ds
iret
lahf
aas
mov
add
mov
jnp
repz
mov
push
rcll
mov
scas
sbb
sub
dec
nop
sbb
xchg
ja
outsl
pop
push
mov
loopne
stc
repz
sahf
mov
xchg
dec
or
adc
push
fidivrs
jmp
stc
cmovge
xchg
in
jnp
into
ret
cli
cli
shl
leave
in
inc
fnstsw
inc
pop
dec
push
scas
mov
jg
pop
jns
loope
ss
lret
sbb
add
in
xor
out
add
mov
pop
into
jg
cld
stc
adc
stos
and
sbb
fldpi
add
paddusw
or
dec
stos
out
push
push
pop
jns
add
sub
inc
cli
lods
loopne
loope
pop
data16
jb
xchg
and
mov
jne
icebp
ljmp
mov
loop
repnz
pop
mov
xor
insb
mov
lahf
jnp
and
pop
sub
push
jle
mov
aaa
es
in
cmpsl
mov
inc
pop
mov
out
push
cmp
test
test
lahf
aas
jg
stos
lods
xor
or
jecxz
jns
xchg
loope
xor
xchg
dec
mov
xchg
push
pop
loopne
mov
cmp
orl
dec
inc
cmc
daa
jl
out
sbb
inc
cld
pop
jns
xchg
xor
es
pop
inc
rcrl
aas
lahf
daa
mov
movb
mov
jl
ljmp
in
or
mov
ss
mov
xchg
push
fidivrs
lcall
lds
pop
jns
js
pop
shl
repz
push
or
cli
sub
pop
les
xor
andb
outsl
loopne
out
jne
test
push
jno
dec
incl
stc
repz
int
int3
xor
fisubrs
jecxz
adc
sub
mov
mov
adc
pop
jp
and
mov
jp
dec
and
add
outsb
jg
cld
stc
fldcw
cmpsl
repz
inc
xor
xchg
iret
lahf
aas
mov
loopne
fsubs
stc
repz
loopne
lock
dec
sarb
aas
jg
stc
into
xor
inc
pop
jp
loopne
dec
cwtl
push
jle
repz
lahf
adc
cmpsl
push
sub
in
lock
lcall
lods
dec
pop
sub
ror
push
push
dec
iret
lahf
pop
pop
pop
or
sbb
dec
cld
stc
repz
js
pushf
loop
sarb
dec
pusha
mov
aas
jg
dec
pop
lds
or
ret
xor
pop
push
lret
ljmp
call
fists
std
ds
add
cmp
das
lahf
fdivs
data16
scas
pop
mov
xchg
push
lcall
clc
repnz
cwtl
and
sbb
mov
xor
lahf
aas
jg
add
rcrl
jge
cmpsl
pop
ljmp
jecxz
jb
mov
pusha
iret
lahf
test
sbb
ds
in
inc
arpl
stc
repz
scas
jbe
sbb
aaa
push
daa
scas
dec
stc
xchg
jle
notl
les
jp
aas
jg
cld
nop
lahf
sub
xor
mov
cmp
iret
lahf
sub
mov
pop
mov
aas
sti
mov
mov
cmp
pop
or
pushf
jmp
inc
cmp
repnz
inc
in
xor
outsl
ljmp
pop
pop
outsb
lock
jne
jne
faddp
mov
inc
push
scas
lahf
jmp
repz
pop
cmc
xor
imull
xor
sbb
and
jle
cld
and
mov
inc
mov
insb
data16
ds
sti
xchg
lahf
aas
mov
fs
cmp
xchg
das
dec
test
test
mov
cld
stc
repz
and
add
je
fdivrl
in
inc
push
cli
lret
pop
and
outsl
std
imul
sbb
shl
sub
fisttps
rorl
gs
aas
icebp
xchg
dec
jmp
les
inc
rorb
jge
aam
fstps
stc
repz
mov
into
sub
pop
mov
or
mov
cld
pop
sbb
daa
xor
mov
clc
pop
cwtl
in
cmp
aas
add
push
push
inc
cmp
test
setne
jns
adc
adcb
setp
bound
clc
jb
lret
inc
mov
sti
dec
and
les
jg,pt
sbb
sbb
sbb
mov
ljmp
rorl
cld
cld
cwtl
pop
ret
jbe
popa
outsb
xchg
cmp
cld
xchg
push
stc
inc
addr16
int3
xor
repnz
push
mov
in
pop
jg
jle
mov
outsl
filds
pop
mov
insb
xchg
dec
xchg
inc
dec
jo
sub
js
pop
stos
push
mov
lds
repnz
lret
sub
dec
mov
aaa
lret
inc
int
cld
addl
jle
mov
in
aas
jg
lcall
call
test
out
mov
xchg
ror
push
cmpsb
cld
adc
push
stc
cld
lea
leave
std
mov
fwait
inc
iret
lahf
aas
jg
lret
adc
lods
mov
add
repz
lods
xchg
out
out
adc
pop
jno
push
bound
aas
jg
add
cmp
andb
out
shlb
sahf
jnp
mov
idivl
mov
push
dec
mov
cld
repnz
repz
dec
cmp
fstpt
pop
jne
xchg
pop
decb
jne
fs
push
fildll
push
xor
aas
jle
out
clc
test
xchg
outsl
cld
mov
inc
scas
lds
je
jg,pt
xchg
mov
mov
lock
lret
aas
mov
push
scas
add
add
insb
jecxz
push
les
sub
ret
movsl
cmp
test
add
pop
push
and
cmp
xchg
mov
jg
stc
gs
into
jle
mov
jl
test
sub
out
xchg
outsl
sub
js
cmp
and
jbe
and
in
xchg
ljmp
push
adc
pop
xchg
add
mov
mul
repz
testl
out
cwtl
das
and
inc
clc
push
jnp
mov
test
aas
sub
pop
jns
sbb
xor
xor
cli
scas
mov
outsl
sbb
stc
repz
sub
jle
jne
test
and
sub
push
gs
xchg
loopne
addb
mov
jns
fldl
mov
mov
adc
in
push
pop
out
adc
int3
out
lods
push
stos
fmulp
xchg
push
pop
jns
movsb
dec
push
jns
and
fcmovne
mov
icebp
scas
sub
out
lahf
aas
push
not
and
insb
arpl
fld
fcmove
mov
push
and
pop
fsubrs
lea
repz
test
add
rolb
dec
les
jg
sub
jg
sbb
or
pop
nop
pop
jo
sbb
scas
push
cmc
arpl
in
or
sti
lret
add
cmc
pop
scas
mov
mov
js
sub
bound
jle
cmpl
push
or
jge
push
loope
jns
repnz
js
scas
inc
dec
jle
dec
dec
test
dec
xchg
sub
scas
dec
cmp
lods
in
ja
mov
cwtl
push
inc
cmp
and
pop
pop
jns
add
fdivrl
ljmp
and
cmpb
repz
jno
dec
sub
pusha
lret
dec
clc
out
mov
loope
mov
cmc
add
in
push
cmp
adc
lock
mov
das
das
scas
and
out
bound
mov
out
add
enter
jbe
pop
pop
jns
repnz
ljmp
xchg
dec
mov
fisttpll
push
xchg
ja
adc
rcrb
aas
jmp
repz
mov
mov
ja
pop
mov
adcb
pop
ret
xlat
mov
jge
repnz
test
leave
mov
xor
mov
out
das
ret
xor
or
xor
loop
lods
inc
mov
cli
repnz
mull
js
xor
in
movsb
jle
icebp
fildll
cmp
xor
pop
mov
rolb
in
arpl
in
xchg
dec
jle
sub
cmp
popf
setae
repz
clc
mov
loope
fiadds
xchg
int3
cmp
popa
stc
stc
pop
push
lods
fdiv
cmp
lahf
jo
lahf
jne
jle
jo
adc
repnz
jle
inc
stos
lret
push
jg
or
clc
rclb
adc
inc
fdivrl
xchg
fists
int3
jg
test
seta
inc
xor
mov
pop
mov
aas
test
dec
sub
enter
xchg
in
add
das
outsb
fidivrl
xchg
inc
pop
push
cli
or
adc
jns
iret
scas
test
push
inc
mov
jns
nop
cmpl
insl
inc
dec
inc
lahf
jns
xchg
push
push
ss
icebp
imul
mov
lods
and
push
adc
and
jg
cli
insb
jge
imul
outsl
jbe
xchg
jno
in
push
js
out
sbb
mov
jl
aaa
repnz
rcl
pop
lahf
nop
pop
int3
lcall
mov
xchg
movb
push
stos
ret
stc
stc
repz
insb
inc
daa
pop
mov
scas
adc
call
cld
jge
mov
scas
push
dec
loop
enter
mov
pop
incb
xchg
fs
fstp
push
dec
cmp
cmp
out
push
aas
scas
xor
sti
mov
loope
jg
repz
fdivrp
aaa
lock
pop
aas
ficompl
pop
jg
jecxz
out
in
push
outsl
mov
sti
xor
int
dec
sbb
in
xchg
push
pop
jmp
mov
aad
push
pop
jns
sub
jno
lcall
add
lock
jge
in
and
cld
stc
repz
lock
cmp
call
aaa
sahf
aas
jg
xor
push
popf
ss
sbb
es
popl
push
out
dec
add
loope
and
je
in
inc
dec
scas
insb
popf
jge
dec
xchg
sub
sub
clc
aas
and
enter
push
dec
mov
in
lahf
dec
rcll
mov
jg
cld
push
insl
arpl
mov
mov
mov
lahf
outsb
mov
ret
mov
sub
in
out
add
shlb
xchg
jo
repnz
mov
mov
test
scas
mov
aaa
decl
rcl
sub
xchg
mov
mov
call
and
and
das
sub
mov
and
mov
fidivrs
repnz
pop
mov
fidivrs
das
sub
pop
adc
xor
fiadds
xor
out
lahf
ret
add
lret
fbstp
dec
movsb
dec
jnp
or
jg
cld
stc
push
std
and
cltd
in
push
outsb
rcrb
pop
rcr
xor
sub
sarb
pop
jbe
jg
cmp
mov
scas
mov
clc
sbb
xlat
out
inc
fbld
xor
mov
sbb
in
mov
xor
mov
out
xchg
sub
fistpll
imul
or
sub
aaa
mov
das
push
fimuls
loope
scas
shll
enter
fdivrl
adc
cmp
jae
ucomiss
jb
repz
loopne
call
lds
mov
jmp
mov
xor
loope
xlat
nop
pop
orb
dec
cld
stc
repz
fs
push
stos
lahf
sahf
mov
xor
loop
inc
pop
jg,pt
sub
and
inc
loope
push
xchg
mov
jb
lret
imul
clc
xor
push
iret
mov
mov
push
fdivrp
in
lods
fldcw
adc
mov
imul
push
inc
shll
stos
push
cli
adc
lods
jne
push
mov
xchg
data16
loope
jmp
pushf
mov
pop
jns
aad
pusha
call
ja
in
sti
fsubrs
cwtl
int
cwtl
in
movsl
jmp
inc
pop
jns
jnp
cld
mov
aas
jg
out
lcall
fisttps
inc
mulb
sahf
sub
stos
paddd
leave
icebp
repnz
stos
and
adc
fwait
sti
out
adc
pop
cmpsb
aas
jg
mov
aas
jg
push
jge
cmp
cmp
repnz
lahf
aaa
fs
imul
add
loop
stc
xchg
icebp
pop
sub
lahf
jno
loope
aas
jg
lret
and
int
imul
mov
outsb
mov
je
xor
dec
dec
push
cmp
idiv
adc
lret
xor
fistl
push
jns
adc
xchg
dec
sub
xchg
test
cmp
test
fcoms
ljmp
or
sbb
sbb
or
cmp
lret
sarl
push
fidivrs
nop
das
leave
adc
aaa
bound
out
rclb
jle
mov
stc
repz
sbb
adc
mov
aaa
sub
ficomps
mov
push
dec
into
push
test
repnz
jecxz
inc
mull
mov
mov
lahf
aas
jg
ds
andb
pop
xchg
jl
addr16
iret
andb
jae
cmp
cmp
mov
jns
rcll
das
les
and
inc
cmp
roll
cmc
psubq
sub
pop
jns
mov
lea
or
jge
dec
mov
sahf
mov
mov
nop
xchg
stc
repz
sub
cs
movsl
push
jl
hlt
into
and
pop
repnz
arpl
lods
sbb
popa
mov
sbb
shll
jg
les
pop
jecxz
cltd
xchg
cmc
orb
cli
sub
hlt
shlb
scas
nop
jb
lock
mov
xchg
cltd
call
mov
out
dec
in
shlb
mov
ja
mulb
cld
stc
pop
fidivrs
dec
cmp
repnz
shlb
dec
sub
sub
bound
das
cltd
call
add
out
stc
jge
mov
mov
add
dec
outsw
xor
add
pop
jns
xchg
or
mov
adc
or
or
decb
inc
addb
cmp
xor
cld
add
mov
adc
xchg
sbb
test
inc
xor
inc
cmpsl
sub
or
fists
lahf
fs
pop
or
dec
popa
out
pop
sub
enter
sbb
sbb
stc
repz
int3
mov
mov
outsl
sub
pop
jle
and
insb
fistpl
lods
xor
out
add
add
xchg
push
pop
jns
sbb
xorl
dec
mov
push
pop
jns
nop
mov
imul
xor
lds
mov
dec
and
xchg
out
int3
das
test
push
test
pop
mov
pop
sbb
jl
jo
imul
xor
or
sbb
iret
cld
cmp
scas
push
rolb
mov
mov
dec
pop
push
and
out
in
xchg
or
inc
js
test
mov
xchg
push
pop
jns
mov
mov
bound
lods
sub
enter
es
decb
outsl
in
pusha
pop
stos
fsub
dec
imul
cld
stc
cmpl
jo
add
lahf
aas
jg
mov
ljmp
cmp
outsl
lock
and
aad
inc
mov
faddl
test
test
sbb
sbb
clc
or
pop
rorb
sarb
test
ds
dec
fdivrp
ficomps
sahf
aas
jne
aaa
dec
inc
fildll
lea
xchg
xchg
push
mov
in
loopne
fisttpll
jecxz
imul
sub
repnz
test
stc
movsl
icebp
sub
add
cmp
mov
jge
dec
add
jne
jmp
rcrb
icebp
loope
fnstsw
cmp
icebp
push
fcoml
mov
dec
loope
xchg
jg
xor
jle
icebp
xchg
jns
int3
int3
jae
push
and
cs
das
out
add
adc
pop
aas
dec
into
std
cli
pop
repz
clc
das
cmpsl
cmp
aam
repnz
clc
xchg
cwtl
leave
inc
jno
jl
aas
cwtl
addb
jl
xchg
or
outsb
nop
pop
iret
xchg
cmp
into
stos
aas
jg
cld
ret
push
adc
push
push
sbb
mov
out
lahf
rcrl
dec
sub
jle
jnp
shrl
testl
xchg
std
clc
insb
push
adc
stc
repz
lock
push
mov
sarl
adc
cli
add
push
gs
icebp
jbe
in
out
daa
mov
cmpsl
adcl
sub
jmp
das
out
sbb
mov
outsb
rolb
stos
mov
push
lock
fistps
inc
loop
inc
sbb
jmp
xchg
mov
ret
inc
jbe
repz
loop
lahf
cltd
mov
xchg
or
mov
push
pop
and
ds
setns
inc
add
push
sbb
mov
sub
xchg
pop
lahf
or
mov
adc
push
stos
out
adc
cmp
cmp
fimull
fs
mov
pop
lcall
sub
repz
mov
and
std
inc
rcrl
sub
cmp
pop
into
jecxz
or
repz
ljmp
cmpb
fstpt
adc
stc
repz
xor
mov
cmp
cs
sub
stc
test
enter
stc
repz
push
and
sbb
jbe
das
jg
jo,pt
popa
adc
mov
pop
or
popf
mov
mov
icebp
lret
sarl
cmc
push
push
repnz
loop
idivl
repz
or
repz
lock
push
aas
sti
call
scas
mov
dec
out
in
addr16
call
repnz
call
mov
pop
pop
cwtl
add
fwait
xchg
int3
xchg
ja
jg
lret
cld
out
mov
add
les
pop
jns
sub
pop
xchg
imul
aas
les
add
sub
stos
lcall
scas
jbe
inc
aas
fs
jg
pusha
cld
jb
fnstcw
xchg
lahf
aas
jg
push
lds
sarl
ds
in
repnz
jb
sub
dec
push
dec
add
sub
sub
test
sbb
mov
or
dec
mov
lea
repnz
out
jno
mov
inc
jg
aaa
add
xchg
movsb
mov
subb
sub
aas
jg
cld
sub
dec
pop
insb
cmpsb
fucomi
mov
sarl
fildll
lahf
lods
unpckhps
inc
sbb
pop
and
cmpsb
sub
pop
jns
cld
scas
push
and
mov
scas
mov
and
shlb
dec
mov
adc
xor
sub
xchg
and
nop
xlat
jp
mov
pop
jg
xchg
mov
push
push
scas
cmp
pop
jns
xchg
sahf
add
outsl
pop
pop
lret
shrb
idiv
adc
fidivs
out
fildll
ret
lret
xchg
or
add
stos
fcmovne
out
jl
cld
stc
imul
jmp
xchg
jle
js
ja,pt
sub
mov
cmp
and
in
adc
pop
pop
mov
mov
xchg
test
lret
push
loope
es
aad
mov
push
add
xlat
pop
mov
sub
scas
mov
xor
cld
and
insb
ss
mov
in
and
cmp
pop
aas
jg
mov
jae
out
out
aam
in
xchg
ror
push
add
arpl
lea
lret
flds
lds
fcomip
in
mov
adc
pop
dec
adc
das
cmp
xchg
aas
jg
mov
cli
loope
mov
cs
aas
aas
mov
pushf
jle
lahf
mov
in
xchg
lahf
fldenv
xchg
lock
add
xchg
cli
out
into
mov
push
pop
jns
add
in
push
aas
mov
in
jno
shlb
pushf
cwtl
out
out
jge
cld
stc
jae
and
xchg
sti
loopne
out
ss
jg
shll
lahf
inc
aas
mov
in
pop
push
and
dec
aam
iret
pop
adc
xchg
fcmovu
enter
repz
dec
das
dec
cmp
cli
and
shrl
cld
mov
jl
push
shrl
inc
adc
cmp
add
dec
adcb
das
pusha
mov
sahf
cs
pop
rclb
ja
stos
out
mov
and
out
cmpsl
mov
push
inc
test
mov
jp
cmp
and
mov
dec
rcll
lret
popl
xchg
sbb
fldpi
pop
call
xchg
mov
sbb
jbe
xchg
ja
mov
sub
or
js
adc
mov
rorb
outsb
daa
mov
cld
stc
adc
xchg
roll
insl
pop
ss
aas
movsb
jg,pn
sub
cmpl
mov
out
dec
mov
and
cmp
jo
outsb
les
mov
dec
push
jl
les
pop
and
lret
mov
in
pop
out
xchg
add
push
lret
mov
cli
pushf
daa
sbbl
inc
push
jae
jle
push
mov
iret
or
repnz
in
xor
lods
aam
and
lahf
pop
sahf
adc
xchg
pop
flds
jno
xor
cli
repnz
sti
adc
lahf
rcrl
mov
mov
fisubs
addr16
mov
mov
or
mov
mov
lods
jbe
xchg
sub
in
jmp
mov
xlat
push
leave
sub
out
out
xchg
icebp
xchg
jge
and
push
sub
int3
mov
mov
pushf
addr16
push
pusha
mov
testb
aaa
test
iret
mov
lret
frstor
out
fmull
xchg
add
loop
push
lock
ret
out
lret
sub
mov
xchg
inc
or
repnz
push
push
xor
leave
hlt
das
adcl
xor
in
out
and
lea
sub
push
pop
jns
test
mov
jecxz
rcl
test
out
jecxz
mov
lret
xchg
push
pop
pop
jnp
cmpsb
and
xchg
adc
std
jb
push
out
add
out
inc
dec
mov
popa
sahf
scas
mov
pop
dec
pop
movsl
sbb
mov
push
into
mov
movsb
daa
pop
repz
or
add
stos
mov
outsl
mov
fildll
les
lahf
aas
add
mov
xchg
xchg
lock
lret
out
fisubs
cmpsb
jno
cmp
dec
insb
rcrl
cld
stc
mov
pop
lods
lret
scas
dec
in
out
shll
lcall
jns
inc
inc
iret
enter
add
inc
adc
pop
mov
jg
fiadds
icebp
or
push
js
cmp
mov
dec
inc
sbb
mov
lret
into
push
fxch
mov
adc
fbld
movsb
arpl
scas
mov
sub
or
es
out
jo
inc
cld
stc
daa
lods
xor
mov
push
subb
mov
mov
iret
sahf
pop
ja
inc
push
rolb
repnz
repz
jp
imul
adc
inc
loope
pusha
cs
test
xor
mulb
xchg
cmc
add
dec
fdivrl
xchg
lahf
aas
fldenv
ss
or
cmp
cld
cld
stc
mov
mov
test
xchg
imul
adc
pop
test
mov
mov
jl
pop
in
adc
add
sbb
jo
ret
pop
cld
scas
lds
jl
arpl
adc
fbld
lahf
pop
fwait
sahf
cmp
jmp
scas
rcl
xchg
testb
sets
or
jmp
xchg
pop
into
fwait
mov
stc
repz
dec
in
loop
shlb
pop
sub
scas
or
lahf
push
jb
pop
sub
bound
loop
add
pop
mov
and
in
fbld
xor
test
repnz
and
pop
ret
push
rolb
pop
mov
cld
dec
dec
repz
jae
lods
je
inc
fldenv
push
pushf
pop
sub
jmp
out
lahf
sub
mov
mov
stc
repz
adc
inc
push
clc
add
adc
pop
push
mov
shlb
adc
jno
cwtl
in
imul
movsb
insl
cld
stc
mov
int3
stos
ds
mov
int
std
sub
gs
mov
fwait
inc
movsb
and
pop
jo
shl
fisubs
out
adc
fs
popa
jne
pop
jo
jg
cld
stc
push
loopne
loopne
lret
shlb
enter
jp
es
lahf
aas
inc
mov
addr16
in
or
aas
dec
pop
je
pop
in
test
sahf
je
jecxz
iret
sub
sar
add
xchg
aas
fistpl
stos
adc
mov
loope
inc
jo
scas
js
iret
mov
repz
icebp
pop
pop
gs
mov
lcall
or
ret
aad
ret
add
cld
shlb
cs
test
test
rcrb
and
mov
fxam
out
push
xor
stos
enter
in
mov
sub
xchg
scas
mov
jbe
push
scas
pop
jo
mov
sub
das
mov
mov
push
and
pop
enter
push
cld
ljmp
out
imul
movsb
les
add
sti
out
out
mov
mov
adc
adc
mov
out
je
jns
pop
sub
pop
ds
aam
sbb
adc
sar
aas
pop
push
jb
pusha
fisubrs
dec
pusha
and
and
push
mov
xchg
iret
aas
into
add
jae
inc
outsb
lahf
pop
leave
add
fldl
cs
pusha
cs
mov
and
lahf
aas
pop
pop
inc
pop
scas
mov
rolb
xchg
iret
das
sub
call
or
add
pusha
aas
jg
imul
test
iret
lahf
sti
cwtl
xchg
lock
push
cmp
fmull
cld
adc
outsb
mov
scas
rcr
mov
push
pop
pusha
out
imul
push
pusha
fiadds
or
fsubl
ret
in
rcll
popl
scas
or
add
pusha
cmp
jmp
mov
or
push
and
lahf
pop
inc
ret
add
cmp
out
pop
sbb
mov
mov
jae
inc
pusha
mov
iret
imul
xchg
pusha
into
mov
mov
inc
aaa
clc
or
mov
jmp
repnz
sbb
sahf
lret
add
push
mov
inc
popa
pusha
cmp
es
mov
pusha
into
loopne
sbb
iret
cmpb
ret
mov
imul
mov
mov
into
fmuls
jle
add
out
push
jb
or
pop
mov
mov
ret
pusha
lahf
xor
push
pop
scas
mov
mov
cmpsb
pop
dec
orl
lods
nop
scas
jle
mov
fmul
scas
mov
sub
cmp
xor
sbb
scas
mov
and
stos
inc
mov
add
pop
mov
mov
mov
sti
cld
or
andb
ret
fiaddl
jg
lahf
aas
jg
outsl
jae
lods
gs
or
inc
lea
lret
out
mov
jno
sahf
es
add
stc
repz
jmp
mov
pusha
std
and
mov
xor
mov
push
loopne
test
push
fstpt
repz
and
xor
jle
sarb
rolb
jmp
clc
lea
popa
mov
ficoms
add
aam
fcoml
hlt
add
cs
xchg
in
xchg
or
cs
pusha
cwtl
cmp
jle
dec
sub
and
inc
mov
out
loop
push
jg
pusha
aas
sub
outsb
xchg
cs
mov
lods
inc
mov
pusha
mov
in
aad
or
paddd
stos
in
jecxz
pop
or
subl
cld
stc
repz
cs
dec
cmp
sub
push
inc
outsb
mov
push
outsb
test
imul
jle
mov
dec
arpl
rcrl
ret
test
js
sbb
rclb
leave
mov
ja
push
js
pusha
fisttps
in
out
mul
pop
mov
cmp
out
mov
jmp
rclb
xor
fildll
mov
cmpsl
sub
das
and
pop
and
test
jne
sub
mov
into
pop
sub
out
scas
push
imul
orb
mov
cmp
popf
ja
jle
adc
lahf
aas
jg
mov
jbe
jae
pop
dec
das
xlat
es
lods
in
int3
pop
cs
dec
fidivrl
orl
or
jp
inc
mov
push
dec
push
pop
imul
cmc
jp
test
adc
in
ret
push
pop
test
clc
hlt
xor
movsb
pop
push
fidivrs
lock
setno
pop
lahf
xchg
lea
inc
dec
rolb
dec
das
das
jp
out
adc
pop
in
mov
push
pop
repnz
mov
cmpl
iret
test
lods
mov
dec
fs
loop
in
cltd
dec
mov
int3
jo
xor
int
or
test
outsl
fimuls
push
movsl
rcr
jge
or
sub
jg
xchg
push
pop
xchg
xchg
loop
or
or
or
dec
and
cld
scas
test
inc
in
xchg
lahf
aas
jg
inc
mov
loopne
mov
mov
ja
fdivl
popf
clc
and
inc
popf
ljmp
or
push
mov
jg
std
and
lods
push
jg
mov
cmpsb
mov
mov
adcb
in
jg
cld
push
pop
mov
xchg
imul
push
aas
jmp
cli
or
fistpll
shrl
sub
cmp
adc
pop
jns
lahf
les
adc
in
fmulp
and
mov
arpl
lret
mov
xchg
fwait
dec
jle
addl
pop
xchg
rcll
test
mov
pop
cmc
fistps
dec
call
xchg
mov
xchg
mov
out
nop
scas
repnz
xchg
andl
sub
mov
push
call
pop
sbb
scas
xchg
popl
cmp
lods
jne
dec
push
out
lahf
jg
inc
mov
std
and
sub
in
mov
das
test
aas
pop
xor
repnz
pop
mov
pop
ljmp
imul
repnz
in
test
sub
dec
dec
cmp
movsb
insb
push
in
lahf
aas
call
adc
and
out
mul
or
jbe
ja
mov
clc
pop
ljmp
fimuls
mov
pop
mov
push
pop
es
push
inc
out
add
dec
push
ficoms
in
xor
in
jb
inc
rclb
xlat
call
and
cs
les
fwait
pusha
dec
ds
and
jg
outsb
loope
test
mov
mov
or
lret
fldl
pop
call
cs
data16
imul
mov
aaa
pop
repz
pop
xchg
scas
cs
cmp
or
xor
adc
fstps
or
test
jge
add
clc
or
orb
mov
je
ret
movsb
pop
sub
mov
jle
into
pushf
ds
inc
mov
xor
xchg
aas
push
loopne
out
cli
mov
es
sarb
and
xchg
ja
cltd
cmpsb
inc
jns
mov
ret
in
ljmp
lcall
into
pusha
pop
push
inc
cmpsl
dec
popa
mov
push
sub
adc
cmp
dec
cmp
cmp
push
cltd
out
sbb
mov
daa
pop
es
adc
jle
in
cmpsl
sub
dec
in
out
lret
andps
add
scas
mov
out
dec
pop
jae
sbb
xchg
inc
pop
js
repnz
pusha
je
mov
sub
cmp
or
fisubl
xchg
lods
pop
scas
iret
xor
imul
push
fcmovb
cmpsl
pop
aas
in
lods
adc
cmp
pop
aaa
pop
add
mov
xor
in
ret
ljmp
dec
dec
push
or
dec
mov
lahf
pop
dec
pop
iret
or
xlat
mov
xchg
adc
or
xchg
shll
xor
daa
iret
lahf
mov
ficoms
iret
and
fisubrs
inc
xor
pop
cmp
add
xchg
mov
xchg
aam
sbb
pop
out
stos
mov
or
repnz
push
lret
or
out
push
dec
xchg
in
gs
inc
adc
outsl
xchg
push
pop
jns
mov
es
dec
sub
call
fbstp
jge
mov
ja
mov
iret
cmp
ret
xor
inc
scas
mov
dec
jecxz
mov
jo
dec
jge
repnz
fdivrs
iret
inc
cmpsb
xor
and
ret
ud1
xor
jmp
ja
pop
dec
jmp
xchg
lock
xor
sub
xlat
fcmovnbe
sbb
adcb
test
mov
fldcw
ljmp
mov
xor
jns
aam
in
aaa
rorb
jg
dec
xchg
push
xor
in
ja
xor
cmc
mov
mov
ja
pop
jns
jmp
sbb
xchg
cmp
pop
fidivrs
sbb
cld
pop
push
out
and
xor
mov
inc
inc
jle
jle
or
ds
inc
sbb
repz
cli
pop
inc
push
jg
mov
cld
sahf
jno
jmp
in
add
xchg
test
lahf
test
mov
mov
iret
ds
push
fdivrp
jb
jmp
mov
jge
xchg
pop
fwait
ret
loop
ret
into
xchg
jp
add
cwtl
push
stc
repz
inc
cmp
mov
mov
sub
in
xchg
imul
push
xor
and
test
bound
sub
mov
cltd
int3
cmp
xchg
out
sub
test
pop
inc
into
ret
jp
sub
lahf
aas
push
mov
mov
out
lahf
jg
add
dec
jns
stos
test
cld
stc
repz
cmp
adcl
xchg
pop
iret
lahf
aas
jg
ljmp
pop
cli
jmp
in
in
gs
jge
add
sbb
pop
test
mov
dec
cmp
ljmp
xchg
ja
jl
mov
or
xor
into
stos
test
std
jb
in
lret
jno
das
xor
stos
pop
shrb
jge
cld
inc
scas
push
in
pop
andb
push
fmulp
ss
push
daa
movups
push
pop
jns
adc
push
sahf
lret
loopne
mov
les
cmc
in
clc
pop
sub
outsb
mov
mov
stc
add
mov
dec
mov
sub
cmc
in
sub
mov
cmpb
mov
aas
jo
das
push
js
int3
push
mov
add
leave
sbb
std
popf
push
xchg
in
or
xchg
iret
adc
mov
mov
jno
into
jnp
jg
mov
scas
mov
movsl
fstl
es
outsl
and
jmp
push
sbb
push
test
mov
and
loopne
xchg
int
cmpsl
dec
fildll
cs
pop
pop
out
push
add
cwtl
out
jp
pop
ss
dec
insl
bound
div
in
leave
ds
xchg
stc
sub
and
cld
pop
xor
dec
xchg
js
das
lahf
mov
iret
scas
dec
sahf
push
push
iret
and
fdivrp
repz
loopne
push
mov
imul
cmpsb
jo
xchg
add
inc
loop
xchg
out
xor
and
xchg
cmpb
fs
mov
jmp
xchg
xlat
lds
jg
pop
sbb
fstps
xchg
lahf
pop
inc
pop
das
push
cwtl
mov
mov
and
lret
sbb
xchg
iret
cli
out
pop
scas
repz
dec
mov
jnp
stc
daa
sub
or
jns
adc
jl
in
adc
les
fnsetpm(287
pop
ret
clc
xor
or
inc
ds
xor
in
mov
js
stc
repz
push
dec
test
rorb
mov
cs
fdivrp
repnz
xchg
pop
pop
mov
jns
xchg
sub
aad
adc
rcll
sbb
icebp
dec
mov
out
movsb
mov
ds
icebp
push
not
das
stc
repz
xor
xchg
insb
or
orb
sahf
jae
pop
sub
fildl
clc
in
cltd
push
adc
mov
or
ret
pop
ds
outsb
mov
sti
xchg
outsl
xchg
push
fidivs
dec
call
shl
ror
imul
cld
stc
xchg
push
mov
scas
xor
aas
jg
pop
fcmovu
stos
inc
lcall
sbbb
or
aas
push
pop
jns
xor
popf
push
das
jmp
or
icebp
jmp
mov
das
lret
outsl
loopne
rol
mov
dec
sbb
xchg
aas
out
xchg
fs
stos
and
xor
jl
cmpsl
mov
mov
mov
aas
or
das
movsl
test
ljmp
lret
in
iret
aas
cs
or
push
jg
push
shr
loope
mov
xchg
repz
sbb
outsl
stc
jbe
adc
enter
movsl
outsl
jbe
insb
popf
jle
pop
xchg
leave
rolb
mov
pop
stos
inc
enter
jmp
mov
outsl
add
dec
xchg
js
add
das
dec
loope
jo
dec
das
dec
pop
xchg
dec
jg
ret
jg
iret
dec
testl
sti
outsl
xchg
push
pop
jns
adc
gs
dec
sub
iret
das
lock
das
fcomp
pop
cwtl
outsb
lahf
lret
add
sahf
jmp
cld
sbb
xchg
in
stc
inc
in
jg
jg
cld
pop
mov
sahf
mov
pop
rcrb
mov
mov
sti
test
movsl
dec
das
cmpsb
test
mov
jb
jle
cld
stc
repz
out
push
adc
mov
cmc
sbb
hlt
dec
jl
in
jg
jns
mov
cmpb
lret
xchg
push
pop
push
or
dec
mov
xor
add
mov
sub
inc
lcall
in
sahf
cmp
rcr
pop
into
pop
pusha
add
test
sub
inc
int3
push
and
out
mov
data16
sahf
outsl
test
dec
loope
bound
ds
out
stc
repz
cmpsl
push
js
sub
cmpsb
add
in
cwtl
push
stos
mov
jle
cld
ret
sub
ret
popa
xor
shlb
sar
push
inc
xor
lret
outsb
in
and
xor
imul
jp
or
mov
jecxz
pop
and
std
pop
mov
add
pop
jns
jp
push
sahf
lcall
push
cmp
mov
jg
in
push
decb
adc
adc
ret
jl
pop
lahf
in
ja
paddusw
and
jg
jo
cs
push
jno
test
scas
in
movsb
mov
pop
popa
fiadds
addr16
or
cld
stc
pop
imul
cmp
dec
xor
sub
xchg
push
fbld
cmp
shl
repz
mov
pop
out
outsl
dec
mov
repnz
std
repnz
add
popa
dec
cmp
mov
xor
repnz
and
out
stos
in
.byte
.byte
data16
call
add
sub
cmp
imul
mov
or
div
jg
notb
cmp
sub
mov
push
imul
mov
or
add
dec
std
mov
lock
add
cmp
sub
push
mov
sub
mov
sub
movl
cltd
push
add
add
add
add
sti
not
das
testb
add
adc
imul
add
sub
sub
sub
ficomps
sbb
cmp
sub
cmp
add
in
mov
scas
and
push
rorb
or
sbb
int
sub
or
pop
jp
adc
add
mov
mov
adc
push
out
sbb
adc
mov
mov
push
or
add
jmp
sub
or
adc
cltd
ret
or
jle
lods
adc
lock
sub
add
outsl
fucomp
movsl
mov
mov
mov
adc
xor
adc
dec
add
call
xor
add
movzbl
je
jbe
push
push
popf
or
sbb
fisubrs
clc
adc
decl
lods
sub
sbb
dec
cli
pop
mov
add
test
je
in
push
fcomp
mov
inc
adc
sbb
mov
xor
push
cwtl
or
add
out
pop
test
adc
xchg
mov
mov
rcll
aam
sbb
jbe
pushw
mov
jle
int3
repnz
test
callw
or
push
mov
xchg
sub
fidivl
adc
and
outsb
adc
dec
mov
mov
jnp
mov
gs
add
add
enter
fidivrs
xor
or
jbe
inc
mov
pop
ret
adc
sbb
or
insb
add
sbb
into
shl
add
rorb
popa
mov
adc
loope
add
pop
rolb
sub
pop
or
lcall
and
fs
push
sbb
add
jecxz
movb
leave
or
popf
rclb
mov
xor
loop
sbb
dec
or
add
add
push
cmp
sbb
je
adc
stc
add
mov
out
mov
dec
pop
lret
pop
mov
add
pop
jno
or
imul
cs
cmp
or
add
in
loopne
insb
push
pop
sarb
mov
rclb
out
sbb
int3
mov
cmp
outsb
adc
lds
pop
xor
loopne
mov
push
mov
pop
fcomps
xchg
mov
sbb
rcl
icebp
loope
fstpt
or
jo
sbb
sub
cs
rcll
enter
test
insb
cmp
in
aam
fwait
push
pop
push
add
sbb
addps
sbb
push
mov
lock
inc
pop
cli
test
xchg
xor
mov
je
add
leave
fisubl
fildll
or
add
loopne
jo
sbb
gs
movb
and
add
mov
incb
pop
mov
adc
shr
push
add
fs
mov
sbb
mov
in
push
add
inc
clc
dec
add
mov
pop
js
jge
pop
leave
fists
icebp
push
out
clc
inc
sub
cmp
jmp
dec
pop
mov
aas
cltd
adc
pop
mov
out
out
lock
add
adc
mov
add
shlb
mov
or
xor
cmp
dec
movsb
add
vcvttss2si
loope
or
mov
ss
sbb
test
leave
in
fiaddl
mov
adc
mov
xor
cli
push
enter
imul
push
cli
ds
or
shll
rolb
mov
add
or
sbb
lret
data16
sub
bound
xchg
add
push
add
roll
test
pop
cmp
divb
adc
sbb
inc
sbb
inc
popl
ja
ds
popl
pop
ljmp
cmp
adc
jb
call
mov
pandn
add
idivb
sarb
rorl
outsb
push
jne
mov
xor
pop
adc
adc
jl
jo
adc
rol
adc
push
pop
in
cmp
or
subl
cmp
xchg
cwtl
insb
cmp
or
mov
sub
cs
push
mov
add
out
cmp
mov
in
mov
push
ret
call
dec
gs
mov
cmp
sub
push
repnz
adc
ljmp
ja
jns
mov
rcl
mov
mov
mov
pusha
roll
cmp
adc
mov
sbb
loopne
cmp
mov
add
scas
add
adc
mov
lds
shlb
insb
adcb
pop
rcrb
push
cmp
and
sbb
or
xor
mov
add
sbb
push
jbe
sbb
js
stc
pshufw
add
ljmp
push
sbb
mov
adc
pop
stos
shlb
in
or
sub
fidivs
push
jb
cmp
aam
xor
add
fsubr
sarb
movsb
cmp
add
inc
out
push
dec
cld
cmp
and
pop
pusha
test
or
sbb
xlat
pop
daa
cltd
add
outsb
sbb
sbb
lods
shl
sbb
fdivl
xor
adc
push
cmp
fiaddl
lock
xor
or
cmpsb
cmp
insb
adc
push
sbb
lcall
or
ret
ds
inc
cmpsl
inc
adc
fidivs
call
cli
or
addb
enter
or
mov
sbb
je
cmpsb
sbb
and
in
scas
lods
dec
sbb
sub
or
imul
adc
add
adc
inc
or
and
mov
jecxz
adc
add
pop
cmp
fisubrl
add
roll
scas
inc
cmp
pusha
add
xchg
or
lock
icebp
push
lds
push
mov
or
add
dec
sahf
fs
mov
jecxz
sbb
clc
xor
adc
dec
ret
stc
adc
out
adc
sbb
and
sahf
lret
subb
aam
adc
sub
aam
ljmp
jo
pop
hlt
cmp
sbb
push
sub
sarb
mov
add
dec
test
mov
test
pop
ret
aad
rorb
ret
out
ret
adc
add
push
fdivr
pop
clc
adc
icebp
jne
enter
pusha
or
adc
add
pop
cli
dec
push
out
idiv
je
test
xchg
ret
cmp
shrl
sbb
xlat
pop
and
ficompl
sti
pop
and
jmp
sub
rcr
xor
je
push
sbb
lock
and
scas
into
jp
dec
add
shr
and
repnz
dec
imul
xchg
pop
cmp
sub
jo
xchg
sbb
insb
roll
mov
clc
sbb
test
cmp
jecxz
test
mov
ret
xchg
or
add
out
pop
sbb
shrl
adc
mov
adc
unpckhps
jg
idivb
outsb
ret
cmpsb
stos
push
iret
jmp
enter
jmp
cmpb
cmp
push
pop
addl
adc
rorb
push
jb
pop
fsubl
sbb
sub
ret
inc
mov
mov
test
loope
push
js
or
dec
push
ja
les
or
rorb
adc
mov
lcall
out
mov
add
mov
dec
lret
ljmp
ret
xor
mov
in
jbe
cmpl
js
sbb
push
and
notb
enter
add
sbb
je
test
in
push
ljmp
mov
sbb
dec
jle
and
sbb
jmp
adc
int3
sbb
pop
cmpl
fidivrl
inc
inc
ljmp
fisubrl
fmull
test
ficomps
test
fsubr
out
add
adc
mov
ds
sbb
sarl
loop
inc
add
adc
xchg
jne
add
aam
adc
js
xor
int3
dec
fcompl
lods
push
add
sbb
cmp
push
adc
imul
scas
lret
pop
lock
shll
or
pop
mov
cli
push
adc
leave
fisubl
cmp
inc
rcll
js
in
sbb
push
push
in
add
ret
loope
fimull
out
pop
in
and
pop
cwtl
pusha
cmp
xor
lock
lock
push
mov
je
movsb
enter
lock
sub
mov
cmc
push
movb
sarb
adc
sbb
push
add
addb
sbb
add
ficomps
pusha
sbb
jnp
std
movsl
sub
call
pushf
add
pop
ret
repnz
shl
data16
cmp
mov
jno
mov
and
adc
add
clc
xchg
and
rorb
ret
adc
mov
sahf
insl
filds
fdivr
mov
or
push
repnz
dec
cmpsb
add
pop
incl
mov
shl
push
and
imul
cmp
cmp
and
pop
sbb
inc
loopne
inc
dec
fisttpll
call
hlt
cmpsl
jns
test
jl
or
push
mov
sub
pop
test
pop
scas
mov
rclb
mov
push
outsl
pop
adc
aas
sbb
or
enter
adc
or
xchg
ljmp
add
fs
sti
adc
push
adc
call
pop
or
mov
orb
mov
fcoms
ljmp
test
and
dec
push
jne
adc
mov
jno
and
fsubrs
loop
jle
mov
loop
das
in
push
dec
mov
push
inc
cmp
pushf
cld
mov
loope
enter
fidivrl
adc
and
mov
mov
add
and
and
pop
mov
push
sub
push
mov
xor
popa
stos
shl
dec
or
sub
dec
sbb
push
arpl
and
sub
repnz
xchg
stos
add
sarl
jp
lock
movsl
loopne
ret
push
sahf
push
xchg
push
xchg
xchg
enter
lret
sub
shlb
push
shll
push
jno
sbb
sbb
imul
add
in
sbb
hlt
cli
cwtl
movb
sbb
push
mov
jl
icebp
jne
jmp
mov
sbb
movhps
mov
or
pop
push
push
or
leave
test
scas
cli
adc
in
or
ljmp
mov
push
add
mull
sbb
sbb
jp
cs
sbb
sahf
shll
pop
sbbl
insb
push
xchg
call
push
jb
xchg
inc
mov
cmpsb
dec
daa
nop
jge
in
lcall
mov
insl
bound
xchg
cmp
loope
ret
jle
inc
lods
sbb
inc
notl
ret
cs
adc
cmp
dec
lods
or
sbb
push
pop
stos
push
imul
jo
stc
xchg
adc
stc
daa
xchg
adc
enter
rcr
pusha
adc
add
jg
pop
xor
push
sarb
adc
xlat
push
push
lret
push
mov
roll
les
rcl
mov
dec
xchg
cli
inc
adc
es
leave
push
push
mov
call
shrb
insb
xchg
mov
jns
out
and
adc
add
aaa
stos
xchg
adc
les
adc
pop
inc
scas
in
push
xchg
scas
repnz
push
adcl
mov
arpl
scas
sbb
lods
mov
or
movb
mov
mov
push
pop
xor
jmp
jg
hlt
add
push
loop
shl
mov
or
add
inc
repz
pop
adc
int
push
xchg
rclb
or
aad
cmp
mov
pop
dec
or
push
mov
lods
sub
loopne
ds
rclb
add
clc
stos
jle
mov
mov
fnstsw
fs
xor
add
push
sbb
shrb
xchg
jno
sbb
sbb
ljmp
mov
sbb
mov
jle
mov
shlb
inc
xor
fsubl
pop
movsl
enter
pushf
mov
not
fs
jl
xchg
aad
xchg
push
mov
sbb
adc
add
gs
ds
xor
mulb
xchg
loope
in
jl
xor
push
cmp
cmp
pushf
mov
or
orl
push
test
call
dec
or
mov
test
mov
loopne
lock
mov
mov
dec
imull
dec
sub
and
xchg
adc
sbb
dec
je
cmc
icebp
ss
ret
mov
pop
add
adc
pusha
or
clc
sarb
push
and
sub
ljmp
call
sahf
xor
leave
add
test
xchg
ds
sarb
adc
cmpsl
xchg
sub
cmp
jl
hlt
adc
js
mov
pop
add
jo
sbb
inc
aaa
sbb
repnz
adc
mov
ret
push
out
daa
daa
push
enter
pop
jo
call
ret
shll
fldl
inc
lock
push
sub
dec
rcll
sbb
jmp
mov
mov
shl
cli
icebp
icebp
and
into
call
lret
in
rorl
push
rorb
jmp
xchg
jecxz
cwtl
mov
rcrb
push
adc
or
sbb
xlat
or
mov
xchg
push
push
xchg
inc
push
mov
fisubs
cmp
or
jmp
sbb
adc
sbb
fucomp
adc
int3
add
push
mov
mov
add
punpckldq
lock
inc
jp
cltd
ror
lods
clc
push
xorb
lret
add
mov
ret
adc
stos
shr
cs
test
clc
lret
inc
mov
add
push
into
mov
sbb
push
jle
jecxz
aad
out
mov
and
jmp
test
push
adc
ljmp
add
in
cmp
and
mov
shlb
add
ss
jmp
or
add
or
jbe
ret
jg
cmp
sahf
js
and
out
jmp
push
dec
mov
call
xor
push
mov
or
insl
rcr
add
pop
add
add
out
lock
push
inc
addb
out
push
mov
and
or
mov
or
push
add
shlb
pop
cwtl
sbb
and
push
mov
fcoms
mov
fimull
push
push
pusha
les
mov
push
jmp
add
cmpsb
xchg
pop
data16
movsl
sbb
sub
mov
ret
cmp
push
jns
pop
mov
add
mov
add
shlb
nop
add
jp
adc
dec
pop
xchg
leave
mov
xchg
into
adc
xchg
jbe
push
cmp
loope
sub
cmp
mov
dec
dec
mov
pushf
adc
or
push
adc
shlb
imul
cmp
push
out
or
inc
mov
sub
out
dec
dec
mov
xor
popf
and
mov
in
sub
outsb
pusha
mov
pop
xor
mov
push
and
mov
daa
push
or
imul
inc
mov
cmpsb
push
adc
cltd
push
mov
inc
cwtl
rclb
and
sub
bound
shrl
cwtl
dec
and
shl
scas
jne
mov
test
jp
mov
push
cwtl
sbb
imul
cmp
push
test
push
sbb
orl
inc
lcall
xor
cmp
sbb
jo
sbb
add
repz
sbb
jge
ss
pop
loop
into
int3
sarb
test
add
add
push
ds
inc
pop
inc
sbb
xchg
jmp
lods
les
sbb
addl
pop
jle
push
pop
add
cmp
sbb
xchg
adc
pusha
mov
mov
fpatan
add
or
shrb
sub
xor
pop
xor
pop
push
pusha
fcompl
and
test
lock
mov
jmp
mov
sub
sbb
cmp
cmp
push
xor
pop
into
in
lock
pop
test
mov
sbb
push
sbb
clc
fstp
dec
xor
push
test
add
mov
push
inc
or
sbb
add
shl
dec
mov
mov
data16
inc
fs
jne
or
pusha
les
repz
rolb
adcl
cmp
cmp
lock
loop
adc
adc
push
leave
xor
cli
cli
adc
push
dec
xor
add
rolb
add
cmp
shlb
dec
aam
pop
lcall
ret
or
rcrb
push
dec
sub
in
inc
stos
mov
or
push
movb
fcoml
xor
push
leave
and
xchg
xchg
cs
mov
jo
sbb
inc
js
xchg
adc
jb
push
mov
into
push
sbb
ret
or
shll
cmp
icebp
rcrb
inc
or
jns
ja
orb
movsl
les
adc
sbbl
loopne
add
xor
xor
fldenv
lret
mov
and
inc
xor
or
shrb
xchg
test
xor
enter
adc
daa
mov
cmp
das
or
cwtl
loopne
adc
or
call
leave
xchg
xor
sub
js
add
test
dec
iret
sbbb
adc
or
loopne
leave
insb
faddl
test
adc
sbb
add
add
pop
xor
or
jbe
adc
sbb
loope
push
mov
das
or
clc
add
rcrl
cmp
push
ffreep
mul
push
call
or
sub
aam
adcb
and
inc
scas
rcrl
addb
add
loop
insl
ret
dec
hlt
clc
add
xchg
add
add
mov
lcall
icebp
add
or
xor
xor
loopne
rcrb
sub
mov
mov
mov
push
mov
mov
sbbl
mov
dec
enter
sub
adc
in
and
pusha
js
rcll
inc
xor
push
jo
mov
mov
cmc
and
stos
adc
mov
and
fdivrl
sbb
daa
loopne
cmp
add
clc
sbb
mov
cli
nop
add
add
shrb
and
add
ret
sbb
aam
cmc
ret
fwait
sbb
inc
xlat
imulb
xchg
xchg
icebp
cmpsl
test
sub
sub
mov
rorb
hlt
adc
je
shll
jmp
and
xor
ljmp
rclb
push
pop
push
lods
cld
cmp
cmpb
sbb
ljmp
loopne
out
push
sub
and
add
cmpb
out
addl
sbb
adc
ss
jmp
movzbl
adc
mov
xor
xor
adc
xchg
sub
mov
rorl
sbb
push
orb
mov
out
lods
add
ss
lcall
outsl
dec
sbb
stos
stc
mov
mov
test
or
or
push
mov
out
cmpsb
inc
testl
ss
rcl
dec
push
mov
stc
adc
dec
leave
test
mov
ret
cmp
aam
or
xor
add
cmc
sbb
sahf
or
cmp
add
add
scas
jecxz
dec
pop
or
sbb
push
dec
addb
rorl
xchg
mov
or
push
and
jl
dec
das
rcrl
pop
mov
pusha
shl
loopne
or
rolb
add
ret
pop
loopne
loope
shll
push
sbb
scas
imul
clc
mov
rclb
sbb
rcrl
mov
add
clc
mov
adc
push
data16
in
or
add
inc
movsb
cmp
cmp
scas
push
notb
mov
jg
push
push
lods
push
loope
ljmp
or
sub
xor
xchg
or
jnp
mov
in
in
out
out
addr16
xchg
adc
sbb
dec
sbb
adc
adc
add
push
fadd
imul
add
sarb
push
adcb
cmp
push
loopne
xor
add
push
xlat
inc
dec
push
jmp
inc
sub
mov
adc
pusha
mov
inc
sbb
repnz
test
dec
xchg
mov
rorb
cmp
inc
add
cmp
lcall
add
addb
xchg
sub
ret
in
adc
or
fnsave
mov
cmp
sbb
xorl
mov
or
aaa
add
movsl
sbb
mov
or
push
mov
xchg
jmp
xchg
cmp
jne
mov
adc
cs
int3
add
fcmovb
sbb
sbbb
mov
cmp
push
mov
add
lock
hlt
push
and
xor
pop
push
enter
cwtl
add
imul
sbbb
sbb
xor
add
or
je
mov
ret
scas
cwtl
leave
test
push
ret
mov
mov
mov
sbb
add
jp
cmp
jmp
adc
push
push
jae
icebp
sbb
add
incb
sbb
data16
shrb
ffreep
rcrl
xchg
orb
sub
addr16
loopne,pn
inc
push
adcb
les
or
leave
dec
xlat
vpsubsb
into
pop
mov
icebp
push
jo
adc
xor
addr16
push
mov
mov
push
cs
rcrb
cmp
cmp
push
out
cmp
fcom
jp
mov
mulb
cmp
mov
mov
adc
xchg
pop
add
xorb
inc
cmp
cmpl
rolb
adc
orb
in
jg
sbb
mov
dec
icebp
mov
mov
cli
or
inc
push
lock
sbb
push
add
jb
push
mov
test
pop
test
loope
mov
inc
stos
lock
adc
pop
or
or
pop
mov
pop
les
xadd
test
cltd
adc
dec
lock
rcl
lds
jns
ret
mov
addb
or
add
repnz
jmp
pop
and
lock
mov
adc
subb
or
mov
sbb
ret
lods
daa
rcrl
mov
push
sub
xchg
mov
pop
ljmp
subb
pop
mov
sub
mov
rcrl
inc
pop
pop
adc
jbe
dec
sbb
aam
je
movsl
inc
pop
clc
paddd
outsl
shrb
adc
push
push
int3
shrl
xchg
cmpb
or
mov
es
loopne
andb
sub
ds
jo
adc
inc
aad
mov
dec
xchg
dec
add
push
lock
stc
sbb
xchg
dec
adc
or
hlt
popa
sti
or
push
das
jo
int3
jne
pop
rorl
xchg
or
pop
pop
jbe
and
xchg
inc
push
jb
cmp
loope
cltd
sub
push
mov
xor
mov
and
push
pop
popa
push
into
mov
nop
sub
or
ss
addl
les
xor
or
sub
sub
sub
pop
jbe
adc
inc
cmc
sbb
cmp
rolb
xchg
xchg
shr
pop
mov
push
jle
sub
sub
lock
mov
sub
lret
sbb
subl
fisubl
addr16
xor
inc
jmp
jno
push
fldl
ljmp
pop
push
stos
ret
adc
jge
or
js
xor
sbb
pop
ljmp
addr16
cmp
adc
rclb
cmpsb
cmc
daa
mov
pusha
fisttps
or
or
sbb
test
and
push
push
add
js
xor
push
xor
adc
add
adc
lock
jle
lea
push
hlt
ret
ret
inc
push
add
inc
jl
test
jl
sub
mov
or
mov
mov
inc
adc
in
inc
jb
popa
push
push
push
push
lods
add
add
dec
dec
movsb
pop
and
pop
mov
inc
idivb
jnp
cltd
lret
push
xor
sti
out
push
aam
pop
lea
inc
mov
ret
and
add
enter
addr16
mov
push
push
js
outsb
test
daa
scas
xor
icebp
aam
or
enter
pusha
jae
imulb
or
test
sahf
pop
in
lock
dec
shlb
xor
adc
pusha
adc
adc
and
add
pop
and
sub
rclb
and
xor
jp
mov
rcrb
mov
pop
hlt
add
adc
push
fwait
in
std
rcrb
test
call
sbb
aaa
icebp
dec
imul
jmp
dec
cmp
pop
jne
enter
mov
sub
ja
rclb
test
icebp
and
rolb
sbb
inc
sub
xor
mov
or
ret
imul
into
cmp
rol
bound
or
xchg
cmp
jb
inc
xor
je
mov
sub
push
and
dec
js
mov
jmp
je
dec
pusha
mov
xchg
mov
cli
pop
mov
lock
scas
adc
xchg
inc
enter
clc
adc
xchg
mov
xchg
mov
xchg
or
mov
sbb
pop
ret
lret
cmc
clc
xlat
add
dec
movsb
clc
push
jae
sub
or
cmpsb
pop
and
or
inc
pcmpgtb
outsb
xor
jo
jle
mov
daa
mov
xor
movsl
xor
repnz
nop
shl
sub
push
push
sbb
sub
movb
test
ds
xor
or
inc
loopnew
mov
pop
sub
out
and
pop
push
push
popa
jnp
push
rcrl
ljmp
loopne
mov
fidivrl
decb
jo
mov
rorl
in
push
dec
test
cmp
adc
dec
mov
sbb
pop
mov
sub
and
shll
scas
sub
push
orl
dec
ficompl
mov
inc
xlat
xlat
pop
call
push
xchg
sbb
or
push
mov
call
les
or
xor
stos
jo
inc
shll
jb
lds
add
imul
outsb
pop
negb
sbb
jo
rol
inc
jp
add
add
ret
xor
mov
ret
adc
push
push
leave
push
adc
push
dec
mov
in
loopne
and
cli
adc
push
or
sbb
mov
or
xor
add
sarb
mov
xchg
add
test
jnp
add
adc
pusha
lea
iret
lods
subb
movsb
lock
ret
je,pn
cld
mov
dec
adcb
push
dec
jb
and
lahf
lock
or
das
rorb
adc
sbb
leave
push
shrl
pop
clc
mov
xor
test
inc
push
jb
mov
movsb
imul
popa
imul
ret
sbb
xchg
and
das
inc
sbb
lods
rcrb
cmp
lock
call
inc
loop
sub
add
rorb
outsb
or
push
and
orl
je
cld
lods
roll
mov
test
add
loopne
out
dec
lret
fs
sbb
sub
and
mov
push
ljmp
lcall
and
mov
push
add
inc
xor
insb
loopne
pop
inc
loope
xchg
mov
lock
clc
cmp
add
fsubs
push
cmp
inc
cmp
xchg
mov
stos
mov
and
test
fimuls
inc
jo
mov
inc
call
or
or
inc
sub
xchg
shll
cmp
cmp
imul
xor
pop
sub
dec
decb
and
je
cld
cs
or
lcall
xchg
mov
stc
or
xor
inc
ljmp
or
dec
mov
das
mov
and
les
pop
cmp
dec
push
pop
leave
bound
rcrl
js
ret
cld
mov
lret
test
mov
sbb
js
lock
stos
enter
jo
mov
mov
rorl
push
adc
pop
orl
ret
sbb
cmpl
adc
dec
pop
push
jp
jno
mulb
xchg
test
div
mov
push
add
bound
dec
or
or
add
fisubrl
push
jecxz
fimull
push
xchg
cmp
sub
xor
add
inc
xchg
push
pushf
cmpsl
inc
popf
sub
fld1
sbb
xorb
stos
shrb
jmp
ror
inc
add
add
sbb
add
dec
insb
mov
rol
add
push
dec
dec
in
lahf
roll
cmp
out
addb
mov
or
sbb
xor
pop
cmp
add
push
jns
mov
es
adc
lcall
or
pusha
pushf
out
mov
or
jecxz
outsb
sub
mov
adc
negb
stc
pop
ljmp
jle
jle
push
call
adc
push
test
jb
bound
dec
test
in
enter
adc
push
cmp
cmpsb
and
js
roll
jno
and
jb
mov
icebp
sbb
add
adc
inc
mov
imul
addb
popf
xchg
shlb
js
sbb
or
push
adc
js
mov
and
jl
stc
mov
shr
out
or
ljmp
jae
shrb
push
push
pop
ljmp
rcr
loope
sub
jb
lea
flds
sbb
fs
xor
popf
or
leave
cltd
add
cmp
inc
xor
inc
fildl
outsb
pusha
xor
imul
adc
add
xchg
test
mov
ds
mov
shll
pop
add
mov
cmc
push
pop
push
lock
orl
or
sbb
mov
cmp
mov
daa
aam
and
sbb
pop
loope
push
mov
xlat
jo
leave
pop
mov
push
xchg
or
fisubrs
push
clc
pusha
insb
shrb
add
ds
mov
out
add
or
test
sbb
test
inc
pop
dec
adc
or
push
push
and
cmp
lock
insl
cmp
aam
or
cmpsl
lcall
pop
rcl
pop
paddd
dec
es
push
mov
dec
clc
push
out
test
dec
adc
arpl
test
push
out
cmpb
add
popa
adc
xchg
mov
es
cmp
adc
imul
fidivs
jmp
add
or
inc
mov
mov
push
test
push
adc
or
dec
mov
fisubrl
and
test
loope
in
mov
mov
or
insl
shll
adc
sbb
add
es
adc
push
xor
cmp
rorl
popa
push
xor
std
andb
push
es
adc
mov
loop
nop
addl
imul
push
pop
mov
incb
pop
shrl
push
xor
push
bound
fs
adc
enter
enter
bound
das
xchg
aam
ljmp
adc
mov
notb
dec
sbb
nop
jmp
add
arpl
test
xor
enter
cmp
dec
es
ret
aaa
jo
fs
pop
rclb
jecxz
or
hlt
adc
xor
pop
clc
add
and
shlb
xor
data16
les
add
or
jl
add
lcall
leave
adcb
loope
push
adc
add
movsb
and
dec
cwtl
hlt
dec
andl
scas
push
sahf
push
movsb
sub
jle
cli
or
insl
push
sbb
push
push
cmp
mov
push
jo
cmp
pop
mov
arpl
sbbb
popa
cmp
mov
cmp
mov
jmp
jne
sbb
and
mov
mov
and
lcall
lret
rcl
push
push
jno
ret
int3
call
rolb
js
mov
add
sub
shr
push
shrb
rcrb
mov
inc
rorb
ret
call
adc
test
rorb
ljmp
in
ljmp
lret
xor
pop
mov
hlt
lock
ljmp
and
rol
rorl
mov
pop
outsl
sub
push
loope
int3
ljmp
jmp
push
add
sahf
imul
or
or
dec
adc
xchg
out
insb
shlb
ljmp
jp
js
inc
data16
jl
or
test
or
adc
cmp
loopne
in
mov
push
push
push
mov
or
ljmp
inc
enter
insb
imul
lds
lock
test
mov
mov
les
das
mov
in
sbb
mov
sub
and
inc
and
ljmp
lock
sbb
mov
cmp
enter
lea
adc
imul
push
loopne
adc
adc
mov
out
js
mov
cld
sbb
test
cmp
call
ffree
pop
aam
pop
insb
test
cwtl
into
clc
sbb
push
adc
dec
xor
cmp
add
mov
adc
loope
es
ficoml
jp
ss
xor
bound
mov
icebp
adc
cmpsl
jge
mov
pop
popa
mov
jno
sub
cmpsl
push
out
jno
push
adc
lock
lret
jmp
pop
adc
loope
mov
adc
shrb
sbb
mov
inc
sub
in
push
add
ljmp
iret
push
ljmp
loope,pn
das
popa
es
mov
out
cmpsb
cmp
sub
cmp
xor
pop
mov
shll
xchg
testb
call
das
nop
ret
enter
push
subl
es
in
ret
or
adc
sub
sbb
imul
dec
into
imul
in
dec
cld
ljmp
loopne
clc
mov
roll
or
push
or
jae
ja
test
pop
shll
push
scas
out
repnz
sub
push
and
add
insl
inc
jo
jmp
repnz
adc
mov
xchg
lret
mov
aas
sbb
push
push
inc
gs
or
inc
mov
les
enter
xchg
std
lea
leave
cmp
je
fwait
jno
div
push
inc
lcall
or
or
add
shll
inc
pop
sub
rol
lds
mov
js
pop
nop
rcrl
adc
push
test
js
test
push
dec
and
push
adc
scas
or
out
sbb
cmpsl
cmp
add
clc
mov
aam
or
mov
fidivs
sub
out
jae
pop
jbe
push
sub
imul
fcomi
cmp
jnp
sbb
xor
sub
xlat
shrb
inc
out
cmp
add
push
dec
adc
sarb
test
das
dec
jo
sarb
pop
mov
add
dec
loopne
add
test
mov
test
cmp
es
mov
js
xchg
lods
jl
cli
or
push
pop
jecxz
mov
cmp
dec
push
push
rcl
or
sub
add
sbb
sbb
or
popf
inc
fidivrl
sbb
mov
inc
sbbl
inc
mov
push
add
fs
test
fcomps
adc
je
sub
xchg
adc
adc
xchg
push
shrb
push
test
imul
pusha
mov
adc
cmp
jb
retw
lret
jo
mov
mov
mov
sub
xchg
push
popl
sti
mov
icebp
fwait
add
adc
cmp
imul
add
ret
lock
ret
test
jl
xor
ljmp
adc
mov
mov
pop
rorb
cmpsl
sub
add
mov
rorb
push
pop
inc
mov
and
scas
mov
xchg
push
out
nop
lea
push
shl
sub
cmc
cmp
call
mov
fs
or
insb
lret
add
push
lcall
adc
dec
rolb
pop
inc
test
mov
sbb
movsb
sbb
dec
imul
addb
pusha
mov
adc
rorb
into
push
push
js
mov
fs
push
mov
nop
ds
dec
mov
jl
or
adc
add
xor
xor
push
divps
mov
add
push
lret
in
repnz
mov
adc
mov
add
jmp
push
fcoms
or
add
pop
lea
inc
movsl
inc
adc
lods
shlb
inc
cmp
mov
jmp
and
sbb
adc
push
shr
sbb
jecxz
mov
push
mov
ret
push
jns
add
lock
inc
shlb
xor
sarl
sbb
mov
add
push
push
push
push
mov
sub
cltd
push
xchg
aam
loopne
and
pop
jo
fsubl
call
stc
insb
push
lock
pop
popa
sub
int3
mov
out
sub
push
stos
or
ret
or
push
arpl
push
lea
jecxz
icebp
lods
adc
mov
test
or
fcompl
adc
fisubl
pop
in
or
xchg
or
pop
cmp
or
lret
test
clc
fdiv
xor
jno
adc
lahf
out
pusha
xchg
mov
loope
sub
dec
out
pop
sbb
mov
inc
jp
jl
sub
sbb
xor
cli
xor
push
into
inc
sbb
in
ret
test
cwtl
sbb
div
lea
rolb
inc
or
clc
decb
dec
add
cld
test
cmp
jb
shlb
cs
jo
mov
xchg
push
aam
cmp
cmp
leave
sbb
pop
xchg
loop
xchg
xor
flds
scas
add
lods
and
push
xor
fdivs
adc
mov
dec
adc
fs
mov
adc
dec
dec
pushf
clc
divb
movsb
adc
pop
mov
mov
pop
stc
or
push
jb
adc
stos
pop
test
test
sub
sub
es
push
xlat
add
push
xor
loopne
stos
sbb
xor
repnz
or
xchg
xchg
clc
pop
sbb
movsb
cmpsb
cli
icebp
push
xorl
mov
push
mov
ds
rol
aaa
lock
adc
or
add
cmpsb
add
icebp
mov
mov
pop
arpl
or
inc
cld
loopne
in
add
icebp
ret
add
and
call
stos
mov
les
pop
xchg
jbe
mov
jp
xlat
sbb
xchg
jp
clc
int3
pop
inc
xchg
push
xor
mov
push
aam
mov
xor
or
ljmp
sbb
pushf
cmp
loope
inc
sub
clc
sub
or
inc
mov
or
jge
adc
popf
imul
mov
push
xor
loopne
pop
or
xlat
dec
jp
ret
push
ret
add
push
adc
pop
das
scas
or
orl
into
xorb
mov
aas
jne
sbb
or
inc
popa
mov
pop
jno
les
push
insb
pop
shl
pusha
or
out
push
mov
or
sbb
adc
or
rcll
aam
adcb
repz
inc
xor
jne
pop
jbe
cmp
lea
sbb
jae
add
mov
xor
mov
push
and
addb
sbb
or
sub
cmovle
movl
lret
push
dec
popf
dec
mov
pushf
add
sar
and
or
mov
hlt
lret
fwait
jl
ret
add
sbb
push
xchg
sub
movsb
adc
mov
cli
nop
pushf
icebp
pushf
lock
rolb
xchg
mov
addl
push
test
xchg
pusha
or
mov
mov
in
ds
bound
icebp
and
subb
dec
mov
mov
xchg
pusha
cmpsb
repnz
jnp
test
test
sbb
mov
mov
cmp
sbb
nop
dec
xchg
data16
xchg
push
popf
push
cmp
shll
mov
rcl
hlt
adc
andb
sbb
push
lahf
jno
mov
out
cmpsb
pushf
xchg
or
push
ret
les
fs
inc
cmp
xchg
sbb
push
ret
jno
and
scas
mov
stos
push
xor
sbb
xlat
js
aam
inc
adc
mov
outsl
inc
xorl
xchg
je
int
inc
in
adc
mov
clc
fs
ret
lret
sahf
rclb
add
push
mov
mov
cmp
dec
jns
clc
adc
add
and
push
jge
add
push
sbb
push
cmp
sarb
les
ljmp
push
sarb
mov
cmovl
test
adc
jno
cltd
jp
or
ljmp
cmp
pop
lcall
push
rcll
push
mov
outsb
cmpl
pop
or
pop
dec
pop
sbb
inc
xor
leave
rorl
roll
or
movsl
out
jno
cmp
icebp
mov
repz
mov
sub
sbb
leave
adc
xchg
ret
out
jo
cmpsb
add
mov
cli
adc
movsl
jne
and
shlb
lock
mov
in
loope
cmp
adc
rcrb
pop
add
imul
cmp
dec
jp
add
rorl
push
and
sahf
mov
xchg
or
test
or
adc
or
rol
lret
and
rclb
andb
push
js
mov
push
in
dec
mov
stc
adc
jle
imul
adc
xor
pop
mov
fisubs
xor
rsqrtps
clc
jbe
add
push
test
aad
popf
adc
clc
mov
leave
ret
shr
add
xor
je
xor
es
scas
cmp
cltd
push
icebp
cmpsl
fnstenv
push
scas
adc
sbb
add
addr16
add
outsl
lret
push
or
popf
pop
inc
pop
rorb
aaa
mov
sbbl
cld
adc
add
and
xor
addr16
sub
cli
aaa
xor
insl
xchg
sub
or
push
incl
cmp
rclb
or
xchg
add
in
or
out
cmpsl
das
mov
and
js
data16
clc
clc
inc
jle
push
pop
test
sti
cld
sub
adc
pushf
call
lock
outsb
ret
into
inc
lods
fidivrs
add
or
pop
dec
xlat
cli
rcl
inc
adc
pop
shlb
push
outsb
cltd
push
imul
push
push
xchg
cmp
test
sub
add
mov
xchg
and
dec
cltd
andl
xchg
add
add
add
add
adc
call
nop
or
xchg
cwtl
mov
gs
xor
scas
les
ret
sub
push
push
inc
in
xchg
pop
nop
push
and
cmp
and
or
lea
test
xlat
push
dec
testb
mov
adc
movsl
sbb
data16
cmp
cmp
addr16
jg
stos
aam
cwtl
rclb
lock
loopne
xor
bound
add
or
out
adc
out
into
andb
orl
pusha
lods
push
test
and
adc
mov
adc
push
dec
sbb
or
fisubrs
or
icebp
test
daa
decb
and
fwait
loop
dec
inc
add
xchg
aam
lret
push
sbb
ret
outsb
mov
and
ja
xor
adc
enter
cli
jo
cmpsb
mov
add
push
inc
scas
and
das
addl
or
insb
cmc
aam
clc
test
ret
or
fwait
leave
jg
inc
rcrl
lea
test
pop
cmp
xor
mov
push
cmp
rorl
in
mov
ljmp
movsl
aaa
dec
shr
roll
or
pop
mov
push
add
and
push
stos
jb
fsubs
push
data16
mov
lea
mov
dec
jmp
outsb
pop
jl
jne
shll
imul
pop
aam
and
dec
jp
bound
inc
inc
push
mov
push
pop
rorb
adc
adc
adcl
cmp
shl
pop
xor
dec
in
orl
or
or
cmc
movsl
push
xchg
jmp
mov
ss
and
or
out
xchg
mov
or
call
add
push
or
js
push
and
in
arpl
jp
les
cmp
adc
out
xchg
inc
xchg
xchg
cmp
mov
leave
ret
and
mov
scas
or
fimull
mov
add
in
xchg
adc
inc
fmul
pusha
or
add
push
popa
ljmp
or
pop
or
das
sub
loop
sbb
cmpsl
es
adc
push
push
lods
insb
sarl
jmp
repz
loopne
loope
push
push
or
mov
cmpb
adc
add
mov
and
daa
sub
lods
ficompl
sbbb
icebp
xor
pusha
mov
pop
add
dec
cmpsb
add
push
inc
js
shlb
pop
xchg
cmc
dec
popf
into
push
adc
sub
sbb
shl
hlt
scas
enter
sub
mov
or
pushf
rolb
nop
inc
mov
jl
sub
lods
mov
js
mov
push
or
jae
sar
call
push
mov
jmp
jp
mov
mov
lea
daa
mov
les
xchg
cli
add
vpunpcklbw
cwtl
clc
dec
pop
call
push
in
push
rcll
or
aam
adc
xchg
sub
pop
call
stos
loope
push
mov
inc
mov
cmpsl
adc
jnp
add
rclb
and
xor
pop
shl
sarl
and
mov
mov
aad
js
push
leave
stc
pop
adc
test
sbb
test
dec
xlat
nop
jbe
mov
rcrb
pushf
pop
push
cmp
js
out
dec
in
pop
mov
imul
lcall
inc
loopne
xlat
pop
push
shll
orb
rcll
or
and
fs
mov
cmp
mov
pop
dec
cmp
mov
pop
sub
insl
add
outsl
adc
cmc
sbb
and
xchg
xor
xor
lret
or
sub
mov
sbb
inc
orb
scas
ret
fstps
jl
cli
repz
out
push
movsb
adc
movb
repnz
and
sbb
mov
pusha
inc
xor
dec
sbb
inc
clc
or
movb
or
dec
fs
add
outsl
sahf
xchg
leave
hlt
pop
dec
lahf
mov
dec
pop
adc
push
loop
out
mov
inc
out
je
mov
loope
out
test
sbb
jp
and
adcb
sub
add
xorl
sbb
mov
ret
lds
push
jns
mov
ret
or
rolb
hlt
out
test
lea
pop
and
sub
adc
cmc
cli
adc
es
js
mov
push
pop
mov
andl
scas
pop
aam
and
mov
add
pushf
cli
or
rorl
movaps
data16
xor
lea
imul
push
sbb
adc
sub
jmp
and
pop
neg
subl
mov
lea
jmp
cs
sub
pushf
les
mov
xor
imul
jo
adc
push
pshufw
mov
enter
dec
push
jp
adc
cmpsb
mov
pusha
test
addl
ja
mov
lea
nop
mov
les
lock
adc
cmp
sbb
insb
push
sbb
dec
mov
xor
stos
sbb
int3
inc
popf
mov
popa
sub
cmp
pop
cmpsl
vshufps
and
adc
pusha
test
rcll
xor
adc
sub
adc
inc
cwtl
roll
mov
sbb
jo
cld
dec
mov
xor
test
pop
daa
sbb
add
pop
pop
sub
and
push
jl
js
mov
sbbl
rcr
dec
movsl
lock
push
xchg
js
cltd
dec
js
shlb
sbb
nop
adc
lock
push
mov
mov
pop
xadd
rcrb
fwait
cmpb
inc
ret
cld
es
test
mov
pushf
and
js
sub
call
test
popa
or
sbb
cmpsl
and
add
clc
and
cld
or
dec
pop
add
loop
and
je
dec
insb
in
mov
test
sbb
xor
std
mov
nop
fdivrs
push
cmp
addb
shrl
pop
fcmovb
sbb
ljmp
out
popa
insb
sub
ffree
cmp
adcl
aaa
into
ljmp
dec
inc
jp
sbb
orb
lods
push
mov
imul
pop
mov
dec
or
pop
pop
test
loop
test
or
or
sbb
ljmp
rol
xlat
movsl
mov
ss
adc
stos
and
pop
pop
imul
cmpsl
rolb
adc
push
sahf
pusha
push
mov
add
sbb
pop
xor
sbb
sarb
lds
add
or
loop
nop
hlt
mov
add
jo
or
push
clc
ret
jecxz
test
dec
push
aad
mov
andb
xchg
adc
outsl
test
jmp
arpl
or
inc
or
mov
hlt
mov
mov
stc
fs
mov
aad
insl
in
cmp
and
dec
bound
rcrb
jo
and
fisubs
push
pop
inc
jo
lock
jbe
adc
enter
test
push
bound
ret
add
or
inc
rolb
rclb
mov
adc
and
ss
add
adc
or
push
sub
pop
test
imul
movsb
adcb
or
adc
scas
ds
insb
lock
and
adc
sbb
push
push
les
pop
dec
fadds
jbe
inc
push
sbb
pop
xor
shld
test
dec
js
idivb
sub
enter
push
inc
sub
ret
rcr
xchg
shlb
xor
push
imul
std
movsb
stc
pop
add
jo
push
push
adc
ret
lret
mov
sarb
push
mov
shl
insb
jae
dec
or
sub
sub
jmp
adc
add
cmp
sub
xor
or
and
sbb
sub
xchg
cmp
ret
sbb
dec
lods
sbbb
call
mov
mov
insl
bound
shrl
push
aam
scas
cmp
test
out
sbb
fistpl
xchg
addr16
mov
ror
mov
mov
sbb
cmp
call
out
rol
xchg
pushf
adcb
out
push
xor
ret
sbb
pusha
push
cld
add
push
mov
jp
icebp
cmpsl
adc
xchg
in
sbb
dec
outsl
jecxz
or
mov
sbb
or
notb
roll
out
inc
sahf
and
push
cmp
ret
and
dec
pop
or
sahf
stc
adc
xchg
push
orb
int
or
add
imul
je
fsubl
popa
jl
xchg
test
add
bswap
dec
cmp
push
cmp
push
push
mov
lods
andl
movsb
fistl
cwtl
add
cmp
lret
cli
imul
push
add
test
xchg
or
or
call
adc
add
or
or
push
call
or
pop
jbe
lds
jle
jns
arpl
xlat
push
dec
mov
cmp
das
jmp
xor
mov
mov
pusha
inc
daa
loopne
add
outsl
adc
ljmp
pop
jbe
or
add
lret
shr
test
pop
add
rorb
rol
add
adc
stos
bound
push
xor
je
jl
pop
add
mov
jns
xor
data16
jno
inc
cmp
call
jo
dec
outsb
scas
ljmp
enter
and
punpckhdq
js
inc
mov
stc
xchg
add
sarb
xchg
add
cwtl
cmp
int3
mov
add
fwait
mov
inc
push
xchg
rcrb
daa
mov
mov
je
xchg
and
cmp
out
jge
adcb
adcb
aaa
sub
popf
sbb
inc
test
adc
sbb
cli
or
adc
ljmp
pop
int
cmp
lock
in
nop
dec
jbe
cmpsb
inc
sub
loope
ret
lods
mov
adc
inc
or
cli
add
xchg
loope
sub
mov
popa
ss
pop
mov
add
mov
jb
or
or
loopne
mov
add
and
sbbl
mov
rclb
lods
xor
add
and
bound
adc
pop
pop
and
or
push
mov
push
stos
xchg
aam
pop
sahf
adc
dec
add
xor
pop
jne
add
and
push
mov
push
sbb
pop
jmp
add
inc
fcomps
stos
pop
loop
lods
je
in
fistpll
push
fwait
pop
loope
xor
out
movsb
push
push
ret
or
jmp
mov
into
mov
jo
ja
sub
movsl
cmp
aam
nop
inc
jae
pop
pop
jnp
ljmp
mov
ret
loope
cmp
jb
adc
jl
dec
out
dec
push
or
cmp
insl
push
add
add
mov
pop
sub
xchg
push
add
orl
add
pop
data16
push
push
or
cli
ljmp
xchg
loope
daa
sbb
push
sbb
xchg
adc
dec
pop
or
mov
fisubl
push
push
push
cmp
dec
fcompl
xchg
cmpsb
pop
inc
jecxz
inc
jl
add
aad
mov
sbb
adc
mov
fildll
push
dec
sub
repnz
lock
dec
jno
jb
inc
pushf
jmp
aam
inc
stos
pusha
push
lea
jl
xchg
pushf
cmp
sbb
mov
call
sbbl
jp
add
adc
mov
xchg
rorb
pop
adcb
or
sbb
pop
scas
test
dec
jge
jmp
rorb
cmpsl
mov
sbb
ljmp
inc
jmp
inc
je
loop
xchg
or
in
clc
aaa
into
jb
or
enter
pusha
jge
loopne
pop
fcmovb
sub
jbe
fcompl
adcl
in
daa
lea
ljmp
dec
lods
xchg
adc
insb
sbb
outsb
call
push
mov
rcrb
inc
jbe
movsb
outsl
lods
data16
lret
bnd
movsb
stc
das
jmp
cli
or
orl
dec
sub
cmp
add
movsb
mov
mov
add
nop
inc
enter
nop
xchg
push
js
movb
enter
sbbb
int3
sbb
jo
xor
adc
jnp
in
add
mov
xor
adc
adc
cmp
inc
aaa
xchg
pop
inc
popa
sarb
jp
sbb
rcrb
fs
adc
or
imul
test
loopne
push
lock
pop
inc
or
pop
push
cmp
repnz
pop
or
movsb
jp
je
mov
stos
mov
aam
imul
xchg
inc
sub
mov
or
mov
scas
orb
cli
jp
pusha
loopne
add
enter
jo
adc
movsl
cltd
loope
or
mov
xor
mov
test
cmpsb
shlb
cmpsl
sbb
mov
and
adc
shlb
sbb
nop
shll
adc
dec
lods
repz
xlat
pop
sbb
push
push
fidivs
adc
rorl
xchg
test
xchg
pop
pop
cmp
sbb
mov
sahf
ret
testl
cmpsb
rorb
inc
jb
mov
mov
add
xor
xor
mov
movsb
ficomps
ds
cltd
test
push
rorb
movsb
mov
inc
add
test
or
sahf
addr16
push
jp
inc
stos
setbe
stos
xchg
cmp
mov
adc
jne
jbe
and
inc
add
and
push
shrd
xchg
xor
adc
mov
xchg
sub
push
mov
or
or
push
add
cmpsl
sbb
add
add
notb
cli
dec
cld
sbb
mov
mov
pop
sub
jp
mov
cltd
sbb
cmpsl
or
add
subl
ret
pop
and
sub
xchg
pop
jno
sbb
ljmp
test
pop
mov
out
lods
test
adcb
loop
sub
inc
mov
and
addr16
sbb
iret
nop
loopne
jmp
ret
dec
pushf
test
add
fcomps
fldl
mov
adc
bound
push
jecxz
mov
cmp
sub
xchg
cmp
jae
push
imul
insl
leave
pushf
pop
je
inc
or
mov
xor
lea
fstpt
mov
push
rcr
gs
or
jbe
mov
add
pop
addb
mov
div
lods
dec
lock
push
or
mov
add
lock
lods
add
sbb
mov
fldenv
movsl
mov
pop
aam
adc
or
sbb
or
mov
cli
xchg
repnz
adc
push
into
loopne
pop
ss
stos
scas
rcl
popa
dec
xor
js
daa
cmp
xor
out
rolb
or
test
ja
mov
enter
adc
push
adc
test
lods
pop
lds
repz
push
jne
inc
jp
adc
mov
fcoms
or
shlb
sub
push
add
mov
sbb
or
dec
inc
ljmp
faddl
ret
aam
jl
pmaddwd
inc
and
mov
and
fnstenv
test
adc
xchg
leave
sub
pop
mov
iret
and
inc
push
sbb
xchg
movsb
cmpsb
daa
mov
add
or
out
mov
lock
inc
adc
or
dec
sub
jno
fisubl
mov
rcrb
or
push
push
adc
shrb
or
add
or
fidivrs
movsl
sbb
loope
mov
ss
add
sbb
andl
pop
hlt
adc
gs
sti
cmp
inc
out
leave
push
or
sbb
add
daa
js
pop
cli
add
std
add
sarb
adc
call
dec
jo
jbe
or
iret
clc
movsb
xchg
mov
adcl
ljmp
mov
mov
cmpb
push
lea
mov
xacquire
ret
pop
cwtl
movsb
xorl
arpl
leave
sub
lods
lcall
push
pop
cmc
dec
iret
sub
mov
jb
inc
xchg
jp
sub
mov
mov
mov
sarl
push
push
sbb
mov
add
adc
popl
mov
xchg
jle
sub
pop
sbbb
shll
movl
jecxz
into
and
xchg
cmp
fcom
fidivs
sahf
or
mov
or
sbb
rcrl
sbb
rcrl
cwtl
inc
mov
mov
movsb
fsts
cmp
inc
mov
lea
pop
adc
add
jecxz
xchg
into
icebp
dec
int
mov
sub
sbb
inc
and
dec
jge
adcb
xor
popa
adc
leave
inc
xchg
mov
fdivrs
loopne
adc
inc
mulb
loope
pusha
fs
sbbb
mov
sbb
push
mov
mov
and
push
mov
cmp
adc
push
or
xchg
pop
sbb
fidivrl
loopne
sahf
mov
lods
and
cltd
xchg
cwtl
andb
cmp
sbb
mov
jbe
add
aas
roll
push
sbb
add
jo
lcall
aam
push
xor
or
sub
adc
mov
add
xchg
lahf
add
call
and
enter
or
dec
jmp
mov
inc
lea
and
mov
pop
sub
ljmp
adc
pusha
push
pusha
and
add
xor
dec
add
lahf
mov
ret
pop
ret
clc
or
add
pushf
aad
push
int3
and
add
cmp
xchg
into
pop
daa
add
ror
mov
addr16
scas
pop
sarb
push
arpl
push
pop
or
test
cmp
sahf
jp
ss
or
sbb
inc
ficoms
xor
push
fs
stc
adc
mov
int3
arpl
cmp
xor
or
inc
add
ljmp
out
ljmp
pop
lds
pop
xchg
push
sbb
or
sarb
sbb
dec
faddl
sub
lret
inc
cmpsl
or
jb
adc
rolb
lock
pop
adc
sbb
aas
hlt
fldt
push
lahf
rcr
dec
pop
ret
sbb
fwait
bound
inc
adc
jl
js
adc
sbbl
push
imul
add
cmp
andb
and
negb
pusha
gs
push
inc
add
cmp
aam
adc
pop
or
jb
fdivrs
or
mov
cwtl
inc
add
pop
aaa
inc
xorb
pop
inc
cmp
add
xor
push
inc
test
jmp
jns
rcll
push
inc
loop
dec
adc
call
jp
adc
mov
push
fisttpll
push
inc
mov
mov
ret
mov
loop
popf
mov
mov
xor
shlb
loopne
cmp
xor
leave
aaa
repnz
xor
dec
fs
pop
and
popa
loop
adc
pop
jp
mov
cmp
or
xor
lock
cmp
aam
movsl
jne
xor
test
sbb
add
mov
lea
or
sbb
bnd
scas
in
add
leave
sub
shrb
push
add
and
clc
cwtl
add
mov
movb
stc
idiv
pop
lods
sub
rolb
push
sbb
xchg
push
loopne
loop
or
sbb
dec
cmp
jns
insl
xchg
add
jne
rclb
push
inc
movsl
add
sbb
aad
adc
cs
adc
insb
andb
dec
idivb
push
sub
rolb
add
pop
or
add
mov
mov
and
lret
sub
scas
out
or
and
or
mov
mov
enter
sbb
aam
push
stc
loopne
push
add
push
scas
add
repnz
clc
cmp
push
adcb
cmp
fiadds
pushf
rolb
jge
mov
popf
sbb
dec
and
sbb
lock
sbb
leave
scas
add
and
xor
andb
xchg
lods
jo
sub
shll
sahf
adcb
mov
cli
or
scas
add
jecxz
ret
mov
or
jecxz
mov
lret
pushf
jbe
xchg
cmp
pop
pop
out
dec
or
push
out
adc
add
adc
nop
add
andb
stos
shlb
jnp
pusha
rcrb
jp
pop
xchg
mov
sub
and
imul
xor
incb
leave
mov
arpl
repz
dec
pop
call
add
push
pop
test
adc
or
arpl
andps
cmp
rorl
cmp
mov
xor
pop
arpl
add
popf
aaa
add
cltd
inc
mov
push
and
mov
out
push
les
in
or
lcall
push
gs
aam
pop
mov
push
nop
cmpsl
into
jp
pop
or
addr16
jle
mov
xor
pusha
push
cli
push
call
dec
rclb
dec
lret
and
mov
add
or
add
adc
sub
scas
mov
sbb
sar
sbb
xchg
pop
into
scas
inc
cmp
js
call
arpl
pusha
cwtl
jge
inc
sbb
pop
xchg
add
or
or
push
aaa
je
and
xchg
push
pop
add
movsb
push
inc
leave
mov
out
sahf
add
xchg
or
js
pop
ret
add
push
pop
or
inc
mov
and
aam
mov
and
std
enter
ret
mov
pop
add
push
xchg
mov
pop
jo
adc
sub
cmpl
or
cmpsl
xchg
out
adc
mov
or
jge
rcrb
jle
cmp
jb
xchg
mov
add
test
or
sahf
cwtl
mov
imull
cmc
add
call
or
inc
push
dec
rorl
mov
in
in
add
mov
mov
loopne
mov
test
xchg
movsl
call
sbbl
fldcw
mov
lock
fmull
sub
xorl
mov
cli
jb
shr
sub
push
dec
mov
adc
leave
int3
and
rolb
cmp
or
mov
icebp
and
ljmp
enter
xor
pop
dec
int
in
imul
sbb
mov
adc
sbb
mov
ret
movsb
test
sub
mov
rcll
mov
cs
call
repnz
and
and
inc
stos
or
nop
cs
xchg
pop
push
mov
das
inc
sub
add
lds
adc
adc
je
jl
call
int3
rcpps
pop
flds
mov
pusha
lcall
xor
adc
and
out
pop
add
jo
rcrb
bound
adc
ljmp
xchg
cli
lods
pop
xlat
dec
mov
test
inc
cmp
mov
cmp
mov
decb
sub
ret
and
mov
or
dec
ret
jno
cmpl
and
sbb
fisubrl
push
shlb
xor
pop
je
movsb
cli
mov
jae
cmpsl
xlat
imul
cmp
mov
jecxz
sar
mov
sbb
mov
sub
fwait
mov
sub
lods
mov
rcll
adc
mov
rorb
xchg
jo
xchg
not
or
xor
push
fildl
inc
mov
inc
loopne
sbb
jo
pextrw
jp
lock
pop
loope
adc
roll
xor
pop
dec
imul
mov
dec
or
enter
sarl
lods
add
rcrl
xor
push
push
push
mov
or
push
mov
sahf
push
inc
scas
arpl
adc
pop
or
add
push
jge
jne
clc
cs
leave
dec
add
xlat
sub
fadds
mov
inc
pop
mov
push
sub
or
adc
lret
and
cmp
lea
push
sub
rorb
sub
shlb
cmp
insb
add
push
lcall
fcmovbe
xor
mov
add
fcomps
jle
lcall
sbb
sbb
dec
mov
punpckhbw
out
fadd
ret
imul
lods
add
in
mov
pop
addb
jmp
aam
lock
sti
shll
stc
or
rolb
pop
xor
fmull
push
imul
pop
push
test
xchg
inc
sub
push
lock
loopne
sbb
rcrb
or
mov
clc
mov
adc
cmp
pop
mov
add
rcl
loop
mov
sbb
or
xchg
je
or
dec
cmc
adc
call
cmc
mov
in
push
mov
push
add
rol
fildll
shrl
daa
aam
clc
dec
js
adcl
xchg
ret
into
lods
lock
mov
or
stos
xor
cmp
cmp
push
add
add
mov
pop
sub
jo
or
push
xchg
mov
adc
mov
adc
hlt
shrl
lods
cmpsl
sahf
in
push
xchg
invd
mov
loop
push
js
lods
sbb
push
or
sbbb
push
push
xchg
shlb
shrb
jb
sub
aam
inc
xor
ret
loope
jae
fimuls
dec
inc
pop
push
inc
icebp
cmc
repnz
cmp
pop
xchg
sub
movsl
lret
dec
dec
cmp
sbb
test
pop
pop
pop
push
movswl
lret
dec
inc
insl
sub
adc
xchg
nop
dec
lret
rolb
ret
stc
pop
pop
inc
dec
mov
enter
lea
das
jmp
into
add
mov
test
clc
mov
xchg
in
outsb
shr
lea
mov
or
sub
in
hlt
addl
dec
out
fsts
pop
rolb
lret
popf
or
pop
add
les
add
mov
test
push
sbb
pop
das
pop
push
lret
jb
mov
lcall
es
ret
je
imulb
pop
mov
addr16
lahf
jbe
jmp
ret
loopew
xchg
jg
fiaddl
jge
inc
or
xor
fsts
pop
fidivs
sub
sbb
inc
dec
push
test
cmp
shl
rolb
and
sub
pushf
pop
sbb
dec
loope
roll
xor
push
adc
mulb
pop
push
adc
leave
dec
dec
push
lea
add
aas
jno
push
mov
cmp
add
xor
movsb
push
push
push
sahf
lock
out
stos
push
or
cmc
xor
enter
sbb
mov
lret
or
sub
lcall
sub
xchg
push
arpl
add
mov
dec
jo
loop
cmp
push
adc
add
dec
xor
or
mov
call
jo
or
mov
sbb
adc
aaa
cmc
sbb
faddp
push
jae
pusha
add
push
mov
ds
test
and
adc
test
movsb
adcl
add
shlb
call
popf
mov
push
stos
test
imul
xor
loope
mov
add
pop
push
sbb
sub
pushf
xor
addps
sbb
or
jmp
test
sub
inc
sbb
cli
push
clc
or
dec
xlat
repz
add
cmp
xchg
mov
sub
cmc
fcoms
mov
xchg
pushf
or
fistps
pusha
jp
mov
xor
push
outsb
rcll
mov
pop
into
ret
mov
fs
jne
lret
jb
icebp
mov
nop
sbb
mov
lock
push
adc
xor
adc
sbb
xor
enter
push
adc
mov
xchg
sub
es
lock
movsb
insb
push
call
adc
dec
mov
mov
sahf
leave
push
cmp
xchg
icebp
test
ror
jne
xorb
clc
or
gs
mov
ret
pop
adc
js
ud1
cmp
sahf
xchg
movsl
pop
outsl
loope
push
add
dec
push
lret
popa
mov
xor
imul
sbb
loop
and
into
loopne
sbb
addr16
adc
dec
mov
push
ja
roll
test
mov
int3
lods
sbb
or
sahf
push
dec
lret
adc
xor
or
cmc
rorb
ljmp
sbb
and
or
ljmp
and
dec
push
fdivl
or
inc
xchg
xchg
sbb
das
insl
shrb
cmpl
lea
imul
sub
jl
and
popa
dec
pop
cli
icebp
arpl
add
add
mov
mov
push
add
and
notb
jno
fcoml
loop
jb
mov
dec
push
push
pop
icebp
xchg
ret
push
add
jb
cmp
add
pop
in
mov
jo
hlt
ret
imul
sub
cli
rorb
inc
add
jo
push
imul
xchg
orb
je
cmp
lret
js
iret
call
add
pop
lock
stc
pop
push
cmp
xor
dec
push
push
cmp
nopl
nop
push
sbb
add
sbb
cmp
cwtl
xor
push
movsl
inc
stc
or
jne
sbb
add
test
stos
adc
sbb
invd
ljmp
in
push
adc
dec
lcall
add
adc
fwait
test
aam
test
sbb
adc
adc
dec
cltd
xor
out
pop
cmp
imul
cmpsl
lret
cmp
es
inc
addb
out
ja
test
rcrb
xor
sbb
leave
hlt
add
jno
outsb
mov
cmpsl
mov
lret
or
cwtl
or
sbb
sbb
cmp
cmp
ret
push
fisubrl
je
insb
jle
inc
into
call
insb
punpckhbw
pop
icebp
push
inc
fisttpll
into
clc
pop
cs
cmpsl
xorb
push
xor
add
sysret
fiadds
fptan
xchg
push
sbb
cmp
jge
and
mov
add
in
push
and
pushf
mov
in
int3
mov
mov
ret
test
test
jbe
jns
xor
out
lods
dec
icebp
and
pop
insl
xchg
pop
dec
es
test
add
push
sbb
bound
insb
pop
call
fistpl
pop
shlb
pop
add
mov
push
int
notb
cmpb
or
push
jle
mov
pop
or
sbb
add
push
aam
mov
testb
loope
adc
imul
inc
or
cmp
mov
xchg
xor
jo
sub
add
inc
das
xchg
adc
jecxz
add
cmp
pop
inc
shl
mov
jo
jbe
or
jmp
and
inc
mov
xchg
in
js
nop
inc
es
mov
shl
xor
or
into
dec
xchg
jno
or
icebp
mov
sub
mov
jl
inc
test
pop
and
call
into
push
adc
inc
mov
int3
jp
repnz
loope
inc
sbb
gs
mulb
test
rcl
fs
jp
repnz
filds
popa
add
cli
cld
inc
js
ret
and
xchg
jo
jge
adc
cli
push
adc
test
dec
and
sub
pop
outsl
roll
mov
cmp
testl
sub
lcall
ljmp
xlat
lret
roll
dec
ljmp
adc
decb
cmpsl
mov
clc
mov
add
andb
or
out
xor
cli
mov
mov
cmp
xor
mov
test
xchg
mov
add
push
into
jmp
orb
ss
cmp
add
push
push
pop
popf
sub
push
call
inc
test
dec
je
sub
adc
xor
xor
adc
jo
mov
jo
js
arpl
sbb
leave
hlt
mov
cmp
and
ret
nop
mov
dec
leave
or
adc
repz
movsb
call
loopne
lods
andl
mov
push
jb
sbb
adcb
js
push
insb
pop
mov
adc
ljmp
pop
dec
cmp
cli
and
inc
or
jle
daa
xchg
push
push
js
pop
mov
call
push
jns
and
jb
pop
adc
pop
adc
push
xchg
or
jo
outsl
sub
rcrb
mov
lret
sub
and
mov
lds
sahf
jecxz
xor
xchg
add
jbe
mov
xor
cwtl
dec
fs
hlt
add
pop
pop
lods
test
mov
shlb
aas
ret
out
daa
into
push
ret
jo
pop
push
call
movsb
arpl
divb
cmp
mov
add
add
lret
push
hlt
stos
sbb
ret
sbb
test
adc
in
mov
xchg
dec
mov
xchg
sbb
or
out
leave
adc
test
mov
nop
fcoms
stos
loopne
daa
jmp
pop
out
jns
inc
adc
jnp
push
add
push
clc
or
or
jge
pop
jecxz
push
daa
out
adc
gs
pop
xchg
dec
mov
outsb
push
adc
nop
loopne
mov
lock
aam
adc
pop
sarl
mov
push
pusha
sub
push
xor
loopne
clc
inc
icebp
rorl
push
ds
test
jg
cli
mov
adc
dec
pop
in
sub
scas
das
loope
mov
jb
xorl
daa
gs
pop
ficoms
sbb
push
sub
xchg
es
dec
or
fistpll
fistpl
xor
inc
out
nop
inc
and
clc
sbbb
js
inc
lods
add
push
movsb
push
or
and
daa
rcrb
hlt
xchg
incb
jmp
sbb
add
icebp
aas
int3
cmpl
scas
or
icebp
xor
add
dec
ljmp
add
loopne
cld
push
jne
push
push
arpl
ljmp
cmp
inc
sbb
js
lret
add
mov
stos
mov
fwait
adc
push
aaa
mov
pop
sub
loopne
adc
adc
sub
add
int3
rolb
cmp
ficomps
adc
mov
test
shlb
stos
pop
pop
dec
xchg
or
inc
push
push
loop
mov
aam
enter
or
leave
push
xor
hlt
rcrb
cmp
cmovns
jp
push
jmp
push
inc
ror
sbb
cmp
into
sub
and
int3
xchg
ret
ret
les
sti
cmp
fldl
es
add
add
xor
mov
loop
add
xchg
push
int3
mov
pop
mov
js
jb
daa
sub
and
lea
or
jbe
inc
sbb
mov
stc
push
lods
mov
xor
sub
mov
js
popa
inc
mov
sahf
lock
add
movq
mov
ljmp
pop
fiadds
sbb
repz
sub
or
and
cmpsl
icebp
sbb
rcrb
or
inc
rcrb
fwait
inc
adc
daa
das
sbb
xchg
mov
xchg
inc
ret
mov
lock
dec
int3
mov
inc
shlb
adc
jne
mov
enter
and
stos
lahf
mov
subb
mov
push
js
mov
imul
rorb
loop
push
dec
movb
fidivrl
call
push
scas
or
leave
adc
lods
test
notb
lock
roll
nop
jl
movsl
popa
loope
les
pop
data16
orb
sub
orb
jle
mov
testb
adc
and
push
xchg
mov
daa
mov
inc
jp
cmpsl
mov
push
push
outsl
popa
leave
xchg
sbb
pop
and
cs
dec
dec
je
nop
sahf
and
push
cmp
sbb
sbb
andb
stc
push
xchg
js
inc
scas
push
lcall
loopne
sbb
pop
out
dec
cmp
pop
add
cmp
or
or
sbb
cmp
pop
adc
adc
les
push
add
jo
test
mov
add
pop
add
sbb
stos
lret
push
nop
dec
test
dec
iret
adc
and
loope
or
lret
loop
call
add
shl
int3
cmc
adc
movsl
add
sbb
sbb
cmp
ss
pop
mov
lret
xchg
mov
mov
dec
sub
call
cmc
push
pop
add
mov
cmp
xchg
orl
shll
or
adc
add
add
je
pusha
and
in
adc
jecxz
mov
hlt
ret
jns
addl
mov
aad
fndisi(8087
in
ret
xchg
cs
dec
adc
xor
and
fcoms
shrb
push
jecxz
jge
pushl
or
call
and
dec
int3
rclb
and
nop
rcrb
mov
pop
dec
into
mov
clc
repnz
aam
lea
test
pop
or
lcall
psrlw
orl
or
sarb
push
or
jp
push
push
push
pop
loop
clc
gs
ret
or
mov
mov
pushw
pop
pushf
xchg
out
adc
sbb
mov
loope
sbb
mov
xchg
dec
lock
or
movsb
adc
outsl
ss
stos
adcl
movsl
push
mov
push
jne
or
js
aad
push
rolb
xchg
mov
or
pop
inc
pusha
je
cmp
ficoml
and
jno
xor
dec
roll
shlb
loope
call
fcompl
mov
mov
push
push
push
cmp
or
dec
lock
add
bound
xchg
leave
inc
cwtl
or
push
icebp
xlat
sbb
mov
shll
shlb
add
popf
sbbb
loop
and
call
adc
je
popa
push
adc
repnz
cmp
ret
outsb
xchg
push
sahf
clc
or
movsb
inc
push
loope
popa
js
fsubp
dec
inc
cli
cmpsb
test
mov
push
push
data16
sub
xchg
inc
daa
add
mov
enter
rclb
out
rclb
push
lret
push
test
cmp
add
push
adc
push
dec
inc
repnz
int3
shlb
or
test
mov
adc
scas
dec
sahf
aad
arpl
push
add
mov
idivb
mov
pop
pop
fcoml
pop
sub
pop
or
or
adcb
addr16
add
xchg
loop
jnp
rorl
push
rcrb
icebp
adc
loopne
aad
mov
hlt
or
rcr
pop
inc
bound
mov
ret
sahf
add
or
pusha
shrb
bound
inc
popa
sahf
pop
dec
pushf
into
ret
cli
mov
fwait
jp
jbe
fwait
jp
or
sub
sbb
testb
push
mov
and
jo
icebp
loope
inc
jp
je
sub
xchg
les
in
insb
push
scas
lock
pop
xchg
or
sbb
add
push
rclb
add
movsl
cmp
jo
cld
cmp
loopne
jbe
and
lcall
clc
push
pop
lret
loopne
icebp
cltd
mulb
rorb
shl
mov
push
push
and
scas
sbb
adc
or
js
popa
and
loope
adc
popf
jno
ret
jmp
lret
clc
mov
movups
push
test
inc
or
sub
sbb
test
jno
ds
or
inc
loop
push
pop
outsl
shll
pusha
in
add
es
lock
jle
test
mov
push
icebp
xchg
test
pop
cmpsl
ljmp
loop
int3
ror
test
leave
sbb
fdivrs
adc
fsubl
or
aam
cwtl
lret
movsb
push
mov
xchg
faddp
pop
mov
movsb
pop
aad
icebp
jb
xor
ss
sub
or
sbb
mov
sbb
fidivrl
xor
push
insl
add
cld
loopne
mov
ret
and
sub
ficoms
lock
pop
add
xchg
pop
ja
stos
es
jno
adc
test
pop
movsl
mov
pop
inc
and
or
cli
sbb
mov
repnz
rolb
push
loope
add
mov
fisubrl
push
nop
sub
mov
fmulp
cmp
dec
rclb
adcb
add
cmpsb
xlat
cmp
mov
or
or
or
inc
jle
fidivrl
sbb
mov
sbb
cmp
add
push
stos
xchg
call
shlb
jp
add
sub
shlb
clts
pop
cmpsb
mov
inc
pop
nop
xchg
dec
ret
sbb
cli
clc
pop
mov
rorb
adc
add
sub
pop
inc
cmp
pop
sbb
push
pusha
clc
pusha
loope
inc
fsubr
pop
adcb
push
rclb
cmp
pop
mov
dec
xchg
xchg
pushf
or
mov
push
popa
push
fcomip
imul
mov
inc
xchg
push
shll
inc
push
insb
mov
jmp
mov
inc
adc
or
push
lret
bound
and
in
push
lods
rcll
xchg
or
jbe
dec
imul
add
mov
jo
sub
xchg
sbbb
sarb
imul
and
adc
cmp
xchg
lock
je
cmp
out
adc
adc
mov
sub
sbb
je
or
icebp
cmp
jbe
mov
mov
nop
pop
pop
inc
mov
add
loopne
dec
inc
pusha
cmpsl
pusha
mov
push
js
or
mov
push
xor
outsl
adc
push
les
inc
cli
loope
jo
dec
lock
adc
in
sub
dec
andb
test
mov
mov
jo
lret
data16
mov
jo
mov
movsb
pop
in
mov
pusha
rclb
sub
sbb
loop
adc
inc
sub
pop
sub
andb
and
jmp
mov
push
jnp
add
daa
pop
lret
ljmp
and
outsl
into
push
rclb
xor
jnp
pop
leave
das
inc
sbb
imul
lea
mov
sub
or
inc
sbb
xor
mov
jne
clc
adc
pop
clc
dec
sbb
psubusw
pop
add
add
mov
mov
inc
cmp
jl
int
addr16
fnstenv
mov
mov
rol
push
lock
lock
mulb
or
movb
outsl
call
notb
xor
add
pop
stos
cmp
scas
jno
push
push
enter
inc
pop
mov
xor
sub
into
dec
scas
and
xchg
add
sbb
dec
add
push
mov
push
sarl
ljmp
xor
mov
sbb
cmp
mov
push
push
sub
add
mov
or
and
inc
push
sbb
add
xchg
add
mov
adc
pop
adc
add
xchg
loop
and
xchg
test
test
nop
mov
fst
ret
inc
shlb
pop
push
add
lds
add
add
mov
mov
stos
insb
push
into
jne
mov
push
or
out
lock
leave
clc
inc
xchg
addr16
or
pushl
dec
ljmp
cmp
push
loope
dec
insb
dec
scas
xchg
mov
pop
cmp
or
adc
push
pop
jecxz
stos
test
mov
xlat
ds
push
jecxz
bound
add
mov
sbb
popa
dec
loope
xchg
add
jl
push
adc
push
sbb
add
inc
fidivl
mov
sbb
cmp
cmpsb
scas
push
dec
push
sahf
inc
add
gs
xor
out
sbb
pop
fs
adc
xchg
and
lods
mov
addr16
push
sbb
movsb
je
and
sub
ret
rolb
mov
imul
xor
adcl
call
and
or
inc
push
popa
sub
push
fsubrs
mov
jo
pusha
xchg
js
push
or
scas
push
out
into
ror
pop
xchg
jae
jne
cmp
loope
mov
popa
ret
pusha
jns
ja
jp
cmpl
inc
mov
xor
mov
pop
add
loopne
pop
arpl
mov
cmpsb
mov
sub
test
jp
in
nop
xchg
rclb
xor
mov
das
cmp
call
dec
add
or
ret
fiaddl
cmp
inc
mov
sbbl
xor
stos
fs
add
ds
ljmp
dec
add
mov
jbe
cwtl
adc
add
bound
stos
icebp
xchg
ret
xchg
clc
or
xor
and
sub
push
call
sub
out
xchg
jp
pop
sub
inc
leave
mov
mov
add
dec
aaa
push
push
sbb
pop
repz
shl
ljmp
dec
and
rcll
mov
and
xor
lock
rcl
dec
and
mov
js
cltd
into
out
push
push
or
mov
or
movsb
test
add
add
mov
jo
loopne
fwait
add
cmp
pop
lock
mov
cmp
adc
sbb
adc
sub
rorl
add
xchg
add
sub
add
repz
test
inc
rclb
aad
add
cld
push
adc
test
scas
mov
mov
push
out
popa
and
enter
je
sbb
addr16
push
mov
mov
repnz
xchg
add
out
cmpsl
xor
add
clc
std
cmpsl
test
mov
jbe
or
clc
xor
push
cli
push
inc
push
pop
adc
mov
clc
pop
lds
arpl
adc
pushf
das
sbb
jae
pop
lcall
rcll
sub
mov
sbbl
or
jmp
mov
cmp
mov
adc
xor
int3
imul
inc
or
sbb
test
xchg
rorb
sbb
les
cmp
adcb
xor
xchg
sbb
rcrl
pop
or
aam
sub
loop
push
movb
cmp
sbb
mov
mov
rolb
and
add
ljmp
mov
sbb
bound
xlat
inc
shlb
cmpl
and
out
les
mov
lea
outsb
shll
cmp
push
sbb
or
mov
push
mulb
rcll
pop
testb
xor
and
ret
ds
inc
into
push
add
adc
roll
cmp
shll
outsl
arpl
sarb
or
loope
cmp
cmp
punpckhbw
sahf
pusha
cmp
test
add
xor
imull
into
push
loopne
cmp
out
add
and
subb
adc
enter
leave
pop
ds
ret
mov
popa
jb
frstor
stos
cmp
loopne
jb
push
pop
xchg
es
pop
test
and
loope
add
jge
lret
ret
add
das
cmp
cmp
into
pop
popa
inc
mov
sub
cwtl
mov
add
add
xchg
lea
sbb
pop
jo
add
add
lock
cli
xchg
inc
mov
push
leave
fs
jg
dec
lock
shl
ljmp
gs
daa
cmp
or
pop
sub
lock
push
pop
les
push
add
cmpsb
xor
adc
sahf
aas
push
mov
pop
or
dec
cmp
addb
adc
jecxz
xor
xchg
shlb
call
xor
mov
jecxz
pop
sbb
xor
or
pcmpgtd
imul
push
cld
and
xchg
pusha
push
ret
adc
test
xor
xchg
aad
xor
call
cmpsl
push
or
repnz
sub
xchg
add
and
add
push
popa
imul
ret
xor
xchg
or
sbb
mov
push
xchg
ret
shl
cwtl
andb
push
imul
add
or
sbb
imul
fs
andl
inc
pop
pop
pop
sbb
scas
add
in
and
xor
scas
mov
je
cmc
imul
or
js
and
lods
add
inc
pop
add
adc
or
push
dec
xchg
hlt
and
shlb
xor
jmp
mov
xor
sbb
add
mov
add
inc
stos
add
push
test
sbb
add
loop
loopne
mov
repz
adc
push
inc
ret
or
cs
sub
xchg
stos
mov
lock
sbb
jecxz
sti
idivb
jo
or
xchg
cmp
stos
dec
dec
add
adc
sub
or
mov
pop
orb
stos
push
and
enter
sbb
adc
push
pop
adc
add
es
adc
and
ret
jb
rclb
ret
fidivrs
ljmp
js
mov
mov
push
cmp
push
cmpsl
push
jmp
aam
fadd
aad
js
adc
pop
decb
jbe
std
addb
outsb
xorb
pop
insb
or
or
sub
mov
adc
sarl
xchg
pushf
add
sbb
cmp
shl
jl
mov
sbb
add
push
aam
test
cwtl
jb
inc
test
or
mov
jp
sub
sub
je
cmp
js
sbb
push
rcrb
ljmp
lods
std
sbb
adc
cli
aaa
js
jmp
cmpsl
adc
pop
xchg
into
or
mov
je
push
aad
push
dec
push
pusha
sub
push
push
je
sbb
ljmp
inc
xchg
pop
pop
adc
push
sbb
movsl
sub
mov
add
in
fs
or
pusha
cltd
xor
jo
jo
popa
and
dec
rolb
lahf
es
add
dec
adc
call
sbb
jecxz
outsl
jmp
shrl
mov
jb
push
push
push
push
fdivp
or
ret
xchg
sub
repnz
jp
sbb
inc
and
push
xchg
jo
mov
adc
sub
int3
xchg
ret
into
in
cmp
mov
sbb
int
ret
test
pop
add
lods
xchg
or
or
enter
orb
mov
xchg
xchg
daa
dec
adc
add
jge
pop
popl
xor
addr16
mov
adc
xchg
mov
mov
add
and
sahf
lods
push
jne
push
fsubrl
pop
js
call
icebp
lock
mov
ljmp
cmp
push
dec
mov
sub
leave
or
lret
shl
ljmp
sbb
loopne
rol
rorb
shrb
or
jo
mov
pushf
adc
xor
fcmovb
and
and
adc
cmovp
lret
loop
cmpsb
das
sbb
rclb
rolb
pop
rol
lret
inc
xor
jmp
adc
inc
cmc
add
loope
aam
in
and
mov
xchg
mov
mov
xor
cmp
xor
outsl
cmp
sub
sbb
xlat
loope
pushf
sub
pop
invd
cld
or
push
push
jo
jne
lods
cmpsl
test
clc
adc
jb
xchg
fidivrs
nop
add
push
arpl
adc
out
sbb
dec
std
xchg
inc
lock
clc
adc
mov
rolb
push
mov
or
mov
or
sbb
enter
push
jae
mov
icebp
sbb
pop
add
add
sahf
insl
fnstcw
add
add
or
sbb
push
rcr
in
add
inc
ret
in
lods
xor
pop
add
adc
mov
repnz
arpl
sahf
cmp
idivl
inc
jp
aad
mov
adcl
lock
stc
adc
sbb
or
adc
fisubs
loopne
lock
pop
push
sbb
adc
or
pop
imul
mov
xor
and
mov
leave
leave
sub
jnp
testl
mov
adc
push
or
inc
add
mov
outsl
pop
sub
mov
pop
xchg
ret
jo
xor
pop
push
dec
jp
inc
and
repz
adc
xchg
or
stos
mov
jo
repnz
inc
cmp
mov
adc
mov
dec
mov
xchg
pop
sbb
sbbb
jo
cmp
das
add
fdivp
orb
push
push
stc
test
and
scas
xor
mov
jb
data16
cli
add
js
loopne
cs
push
adc
insl
inc
call
push
lret
or
cmp
push
scas
int3
test
or
jp
xchg
pop
in
add
shlb
add
push
dec
nop
adc
lea
pushf
mov
cmp
add
out
add
jo
fs
in
fwait
jne
xchg
ret
xlat
fildl
cmp
jbe
and
or
test
ret
repnz
push
insl
icebp
stos
add
mov
and
add
push
pushf
push
or
cmp
mov
add
mov
and
inc
jl
pusha
test
shl
rcrl
daa
fstps
add
and
or
adc
add
xchg
hlt
cmp
cmp
or
push
xchg
jno
je
int3
add
and
jo
add
or
rol
loope
mov
fldl
ljmp
test
adc
sbb
rol
fcompl
lret
shll
adcl
add
cmp
ret
mov
enter
or
leave
jmp
sub
mov
jne
pop
scas
inc
adc
mov
adc
ret
cmovs
dec
adc
mov
fildll
stc
stos
ret
out
in
push
rsqrtps
add
pop
loopne
add
pop
lret
mov
and
dec
cmp
adc
mov
push
lock
ror
sub
inc
or
sbb
cwtl
lea
rcrl
mov
jl
out
add
shrl
jl
dec
pushf
test
stos
clc
std
in
xor
xchg
jno
loopne
out
cmp
xchg
jae
dec
sbb
mov
push
xchg
icebp
stos
or
loop
ljmp
pop
mov
sahf
push
and
inc
call
mov
dec
jp
xchg
or
cmpsb
imul
test
inc
push
and
adc
sbb
add
flds
test
inc
andb
xchg
push
repz
adc
dec
fadd
and
xor
add
sbb
clc
or
mov
pop
fsubrs
mov
mov
mov
xchg
adc
xorb
adc
lcall
dec
sbb
ds
push
push
add
xor
push
xor
loope
dec
mov
stos
sbb
pop
int
push
push
add
xor
cs
xchg
shll
lock
xorb
xchg
fisttpl
push
cmp
dec
sub
dec
add
lock
pusha
gs
sub
mov
dec
dec
outsb
push
jno
movsb
adc
pusha
jne
push
pop
fistpll
jge
pop
dec
jae
psadbw
movsb
jb
pop
orb
and
add
out
push
aam
test
mov
mov
push
sbb
xor
adc
out
pop
push
sbb
inc
pop
loopne
pusha
lret
cld
add
add
add
loope
cmp
xor
adcb
cmc
ret
adc
xchg
mov
xor
push
cld
sahf
addl
les
sub
inc
add
add
adc
loope
call
mov
cmp
mov
pop
push
push
icebp
lods
lcall
mov
loopne
push
test
pop
test
and
add
aas
fs
nop
shrb
inc
lods
sbb
and
inc
jns
push
mov
aam
push
adc
rol
les
sarb
or
xchg
push
or
add
lret
xchg
fisttps
and
mov
xchg
xor
add
inc
xor
xor
aam
xor
and
sarl
or
sti
sbb
lret
in
adc
test
mov
rorb
les
ret
dec
sbb
fidivs
and
cmp
add
add
mov
aaa
pushf
adc
lds
cmp
mov
pop
lahf
and
mov
add
or
adc
push
int3
cli
inc
movq
push
aad
popl
dec
test
hlt
jae
rolb
sub
ljmp
mov
dec
insl
and
push
shl
lock
dec
sbb
jp
or
adc
pop
xchg
sub
cmp
sub
pop
add
xchg
lahf
call
imul
adc
jp
sub
stos
clc
sbb
inc
insb
or
sarb
jae
xor
fnsave
ljmp
gs
add
jmp
adc
dec
outsb
add
sub
or
lods
mov
sbb
das
cmp
xorb
or
rorl
pop
ret
cmp
mov
aam
call
cs
cmp
cmp
add
test
xor
dec
xor
movl
ret
sbb
sarl
iret
shrb
sub
and
in
sub
pop
nop
add
pop
push
dec
orb
xchg
pop
data16
stos
int
bound
sbb
sbb
sbb
adcb
rol
dec
pop
loopne
add
gs
cwtl
lock
inc
jo
ljmp
push
xor
sub
orl
sbb
mov
lret
bound
xor
dec
loopne
lret
inc
pop
sub
add
add
add
pop
xor
xor
clc
pop
ret
or
nop
clc
dec
fidivrl
in
push
dec
xchg
jo
icebp
movsb
and
adcl
add
ret
loopne
data16
movsl
mov
pop
pop
mov
adc
fldenv
add
outsl
aas
insb
insl
sub
sbb
stc
push
roll
insb
sub
ror
or
bound
ret
ljmp
inc
push
sbb
test
cwtl
add
scas
lea
sub
sub
cmp
call
jmp
ror
jne
popa
xor
lret
inc
call
rclb
jecxz
adc
popf
adc
dec
les
mov
test
mov
test
ljmp
sub
gs
dec
jmp
add
jno
push
rcrb
add
ss
mov
addb
stos
and
lock
addr16
scas
add
lds
xchg
cld
sbb
or
test
loope
push
out
dec
xor
sub
mov
nop
sub
cmp
js
mov
dec
loopne
dec
and
dec
aad
lods
into
and
sbb
dec
sahf
bound
sub
test
out
loopne
data16
add
pop
cld
fiaddl
fadd
mov
dec
je
daa
lods
scas
rclb
mov
push
dec
ljmp
inc
xlat
dec
sti
push
adc
loope
push
adc
outsl
push
outsl
rclb
add
cmp
adc
ret
dec
or
mov
jl
and
add
xor
lcall
add
and
ret
xor
jmp
mov
out
mov
or
xchg
adc
ljmp
add
xor
movsl
aaa
sahf
cmpl
cmpsl
enter
add
pop
jno
add
aaa
inc
pop
shlb
sub
dec
adc
cmp
dec
ja
dec
and
mov
pop
dec
ffreep
repnz
add
cmp
xchg
xchg
es
or
loopne
push
shrb
lods
jae
sub
push
mov
test
xchg
jne
jp
mov
call
les
mov
nop
leave
pop
sbb
push
lock
or
lcall
popf
lods
sarb
push
and
dec
push
cs
xchg
dec
sub
nop
push
mov
leave
cltd
or
xchg
sbb
sub
cmp
xchg
or
das
data16
mov
jb
sbb
ficompl
adc
fidivrs
test
stos
pop
movb
adc
pop
std
sub
cmp
or
lods
and
mov
add
push
in
or
inc
movsb
dec
push
xor
and
or
in
imul
sub
outsl
mov
add
rorb
push
aam
inc
cli
and
push
push
mov
xor
js
mov
mov
fadd
pop
or
dec
or
xchg
or
pop
and
sbb
xlat
pusha
mov
push
mov
or
inc
pop
js
mov
inc
fsubrl
add
xchg
dec
add
add
dec
lods
stos
mov
les
adcb
sbb
or
xchg
sbb
mov
xchg
cli
or
mov
sbb
inc
clc
add
into
push
sahf
test
rclb
jo
rolb
and
jg
jns
hlt
ss
or
cmp
xchg
cwtl
inc
push
testl
mov
cmp
mov
pop
or
add
cs
ficoms
movsb
mov
movsl
andl
xor
rcrb
bound
lcall
sub
fdivrl
pop
rolb
clc
xor
xchg
xor
add
or
push
fimull
sbb
adc
std
inc
cmp
or
loopne
pop
push
loopne
mov
fwait
loopne
xchg
add
sub
outsb
movsb
jmp
es
ljmp
pop
rorb
addl
push
pushf
jo
mov
add
push
dec
mov
push
and
mov
cmp
and
lret
ficoms
or
adcb
aam
rolb
repnz
push
leave
or
adc
rorb
fstpt
ret
scas
leave
and
xor
stc
dec
jp
rorb
mov
icebp
std
and
or
cli
jl
xchg
push
mov
pop
dec
inc
test
rol
add
pop
inc
fbstp
push
push
aam
jb
mov
add
movsl
daa
dec
scas
aas
jb
pop
jecxz
adc
adcl
xlat
xchg
add
jbe
loop
inc
rcll
dec
sub
call
loopne
in
clc
adc
loop
addb
push
ret
icebp
mov
mov
fiaddl
jl
jno
xor
add
xchg
lcall
sub
xor
arpl
sti
xor
pop
lods
sub
or
jb
cmp
cmc
push
or
gs
lods
push
jo
xlat
movsb
es
push
xlat
dec
call
enter
clc
fcoms
daa
rolb
xchg
aad
lcall
rclb
fcoml
xchg
lahf
pop
adc
sbb
fiadds
push
out
fs
sub
cld
sbb
lea
pop
sti
and
push
out
mov
xchg
or
or
sbb
jl
shll
or
cmp
pushf
add
sbb
ret
es
inc
jbe
dec
and
xchg
fstl
cmp
cmp
fwait
inc
in
les
or
xor
adc
divb
or
jp
add
sbbb
nop
or
andb
in
cltd
push
sbb
or
ret
push
mov
mov
movb
rcrb
lods
int3
xor
dec
cmp
xor
movsb
push
inc
sub
sbb
cmp
cmp
or
and
addb
cmp
or
xchg
mov
push
andb
dec
or
enter
popa
pop
push
mov
mov
in
adc
cwtd
mov
mov
pusha
pop
movsl
push
lret
sbb
inc
push
push
adc
or
push
mov
jb
mov
and
or
push
xchg
add
adcb
mov
ret
test
mov
loopne
cmp
cmc
adc
adc
xchg
dec
sbb
aaa
adc
lock
scas
mov
cmpsb
shrb
pop
or
mov
xchg
mov
xor
pop
popf
pop
ret
mov
push
jl
stos
and
es
sbb
xor
lcall
pop
fadds
mov
scas
incb
loope
cmp
arpl
fadds
repz
push
inc
cmp
mov
fsts
push
lods
lods
daa
xor
pop
pop
mov
rorb
dec
lods
xchg
push
push
andb
test
dec
js
add
xor
dec
seta
jp
dec
into
sub
imul
inc
pop
iret
xchg
pop
mov
out
add
test
sub
sbb
push
fnstsw
xchg
popa
pop
jno
xchg
sbb
push
dec
jl
call
push
jb
in
adcb
push
lods
dec
adc
ficoms
or
in
cmp
add
adc
and
rorb
test
mov
jo
shl
push
sbb
addl
sbb
sbb
rcll
dec
enter
push
and
add
hlt
add
jb
dec
idivb
clc
cmpb
push
adc
push
cmp
pop
xchg
adc
or
inc
push
inc
cwtl
xchg
push
ljmp
sbb
inc
add
sbb
fcmovnb
and
sbb
mov
add
lods
sbb
cmpsl
or
aam
add
push
xor
test
xchg
imul
arpl
ds
and
sbb
fdivrs
adc
mov
test
xchg
dec
add
or
pop
call
xchg
ss
xchg
or
or
dec
arpl
mov
and
aam
addr16
inc
cltd
subb
adc
xchg
out
inc
xor
push
mov
sub
xchg
mov
ds
and
nop
push
sbb
ret
push
or
cltd
fsubrs
add
clc
dec
lock
inc
mov
rcll
loop
sbb
push
ret
push
lock
adc
and
test
cs
in
add
mov
or
mov
pushf
add
push
lcall
and
rorb
sub
mov
adc
push
jmp
adc
test
add
jmp
adc
adcb
js
fs
sahf
sarb
lcall
imulb
or
fdivrs
push
xchg
lods
jl
inc
pop
push
xor
rclb
pop
addr16
in
in
cli
aam
fs
je
pop
jl
or
rcr
cli
lcall
inc
push
insb
or
mov
jb
or
cmp
js
push
xor
mov
push
adc
push
or
ret
add
jns
inc
and
sbb
outsl
popa
inc
mov
sbb
inc
inc
pop
xchg
mov
push
pop
xchg
adc
mov
into
data16
push
pushf
sbb
mov
adc
ret
or
lods
xchg
outsb
jmp
lock
push
sub
pop
adc
in
or
adc
xor
shlb
pop
fdivrs
push
adcb
mov
ss
or
mov
and
adc
sbb
arpl
popf
xchg
cmc
mov
jecxz
sbb
add
xor
loope
ret
shl
and
pop
bound
in
or
int3
jo
xor
mov
add
xor
dec
fcoms
popl
dec
mov
fs
dec
js
out
add
adc
hlt
adc
sbb
fs
xchg
orb
or
sub
xor
call
mov
je
or
sbbl
ret
cltd
xchg
ret
sbb
addr16
icebp
mov
into
or
xchg
mov
add
mov
sbb
imul
mov
sbb
popa
movsl
mov
push
bound
xchg
inc
loopne
add
movsb
int3
jl
add
adc
jge
push
xor
out
sbb
mov
movsb
add
movsb
pop
and
out
push
xchg
int3
orl
orl
or
sub
fimull
loope
inc
adc
lcall
popa
arpl
sbb
inc
loopne
fwait
cli
adc
push
loopne
push
mov
push
cs
test
cmp
pop
sbb
push
sar
enter
fs
xlat
xchg
sahf
fadds
stos
pop
shlb
movsl
scas
mov
xchg
add
push
rorl
or
gs
shrb
mov
and
inc
ret
mov
dec
loopne
mov
jae
mov
bound
mov
jp
imul
mov
sub
andb
sbb
mov
xchg
js
test
cmp
push
js
bswap
dec
jmp
sbb
sbb
pop
push
cmp
xchg
inc
and
jbe
xor
push
add
push
xorb
and
push
pop
inc
or
stos
mov
sbb
dec
fs
xlat
pop
aam
ret
inc
loop
push
sbb
rsqrtps
iret
bnd
push
ret
ret
into
imul
bnd
js
mov
sbb
dec
fsubrs
mov
in
nop
add
mov
pusha
add
inc
inc
sahf
push
sbb
addb
xchg
pop
or
test
or
cmpsb
loope
ret
imul
fisubrl
mov
pusha
insl
sbb
test
jp
adc
dec
subb
in
add
js
and
push
dec
add
pop
sbb
pop
mov
sbb
iret
cli
mov
dec
or
fmuls
add
or
cmpsl
pop
sbb
sub
push
xchg
data16
push
leave
jno
mov
adc
shrl
stos
pop
fisubs
scas
sbb
push
ret
lock
andb
mov
or
add
subb
mov
les
push
sbb
imul
mov
pop
test
pop
pop
add
push
pop
sbb
sub
and
aam
push
add
popa
insb
mov
in
inc
jle
addb
aam
es
shlb
add
nop
addb
jne
shr
push
or
icebp
mov
xlat
fdivs
sbb
dec
mov
aam
les
dec
lods
mov
orb
stc
push
sub
cli
add
adc
mov
or
cli
sub
lret
push
jb
bound
jns
sub
push
pop
jle
cmp
bound
lret
inc
push
lods
jp
lea
mov
sarb
rcrl
in
outsl
mov
xlat
and
loop
or
inc
dec
fcompl
sar
adc
push
jno
ret
add
push
jne
lock
cmp
jne
push
dec
cmpsb
sub
xchg
sbbb
dec
lods
or
mov
push
push
xor
sbb
icebp
cmp
les
shrb
mov
sbb
testl
xor
push
jo,pn
sbb
pop
or
std
push
cmp
bound
lret
sub
xchg
add
or
add
xorb
inc
push
into
roll
cwtl
or
loop
jo
rorl
cmc
jp
adc
dec
or
push
xchg
xchg
jne
and
punpckhbw
rolb
dec
ds
loopne
add
mov
inc
and
adc
aam
mov
and
loope
ljmp
lahf
or
cltd
add
or
lods
cs
loop
loopne
push
rorb
out
jl
jmp
inc
cmp
push
adc
ror
mov
call
add
inc
int
inc
adcl
cmp
ror
add
dec
sbb
or
mov
or
in
or
enter
and
shlb
dec
loop
or
into
sub
adc
xchg
or
fstpl
pop
push
daa
ret
add
fildll
je
lock
rorl
jge
and
push
sub
sub
sub
test
icebp
add
rcr
subb
or
inc
add
inc
loopne
hlt
sbb
push
xorl
test
xchg
push
and
aas
jnp
adc
or
test
cld
in
lock
clc
repnz
sub
ljmp
and
xchg
jne
outsb
js
sbb
sub
les
loop
jo
adc
sar
mov
xchg
push
sbb
cmpsb
mov
cli
adc
add
jge
lock
lcall
lock
testb
out
mov
mov
dec
bound
loop
sub
xchg
js
and
cmp
push
lock
hlt
xor
add
adc
dec
add
movl
sbb
sbb
cs
mov
mov
sbb
adc
xlat
insl
inc
add
shrl
xchg
adc
lock
or
push
or
or
or
jecxz
or
addr16
imul
loop
mov
and
jmp
adc
ss
leave
xor
xor
adc
popa
jno
fsubs
jmp
fcmovnb
xor
es
xchg
mov
push
mov
mov
adc
mov
add
xor
push
sbb
inc
mov
adc
rorl
les
dec
xchg
outsb
adc
ret
adc
loopne
inc
push
les
xchg
sbb
shl
sbb
imul
adc
sub
hlt
enter
sbb
mov
fsub
sub
imulb
je
add
mov
or
mov
sub
mov
push
adc
fwait
outsb
mov
fcoml
xor
movsl
rolb
mov
xor
inc
jbe
push
in
enter
lret
adc
adc
fidivl
add
pop
xor
leave
dec
loop
inc
js
movsb
push
mov
jmp
inc
and
add
add
mov
mov
or
and
mov
mov
push
adc
jge
and
sub
inc
lock
or
mov
adc
and
mul
mov
rolb
inc
pop
addl
inc
rcl
mov
mov
inc
xlat
add
fists
push
outsl
sub
je
push
fisubl
test
adc
test
iret
aaa
icebp
push
sub
adc
movsl
rorb
or
jmp
push
adc
inc
xchg
fcmovnu
movsl
js
sbb
pusha
negl
lret
in
pop
ret
mov
lods
sbb
mov
push
jge,pt
cltd
xchg
enter
jle
xchg
sbb
inc
push
mov
add
mov
or
pop
call
pusha
inc
add
addl
mov
orl
mov
and
ret
out
pop
sbb
nop
roll
mov
ret
pop
jecxz
mov
or
addl
movsl
in
push
jecxz
push
add
adc
pop
jl
lds
xor
or
xor
inc
sbb
es
shrb
mov
adc
and
clc
dec
cmp
and
ficoms
std
loop
add
mov
xor
push
jp
mov
xor
or
or
dec
or
push
add
rclb
ljmp
push
push
sub
es
xor
loope
push
push
or
addb
lret
xor
addb
mov
gs
leave
nop
rolb
dec
xor
ret
jne
clc
test
test
sbb
shlb
mov
xchg
jns
cmp
iret
add
mov
bound
ljmp
les
pop
movb
js
jle
int3
push
and
insb
mov
push
cwtl
add
sbb
rcrb
sbb
add
adc
sub
xor
hlt
dec
shll
or
dec
out
mov
xor
sub
sbb
xchg
clc
adc
or
mov
bndstx
cmpsl
inc
adc
adc
adc
mov
mov
jmp
dec
in
lcall
mov
test
xchg
mov
add
test
add
mov
pop
les
xor
mov
fisubrs
inc
push
add
nop
xlat
jle
xchg
pop
jo
or
lahf
mov
or
and
jle
mov
loope
loopne
sbb
lds
cmc
scas
dec
in
mov
lock
add
adc
jne
adc
pop
mov
int
icebp
push
or
or
mov
shlb
jp
sub
push
push
cmp
mov
or
xor
es
in
inc
pop
sti
push
mov
negb
enter
cmp
inc
in
clc
movsb
push
inc
cwtl
aam
push
in
push
jp
add
ret
sbb
mulb
sbb
mov
mov
mov
pop
lret
nop
push
loopne
dec
rcrb
and
sbb
mov
adc
enter
adc
je
mov
adc
aaa
sahf
push
int3
out
push
mov
ret
dec
insl
in
into
rolb
push
aas
push
rolb
loop
xor
sbb
or
mov
repnz
bound
dec
mov
and
pop
adcl
pop
js
lock
inc
cmpsl
xchg
inc
add
xor
xorl
bound
imul
push
out
jno
pop
shlb
push
pop
daa
sbb
and
mov
jmp
xchg
js
add
out
rorl
mov
or
es
add
sbb
ror
xchg
xchg
or
stc
or
nop
pop
push
lret
inc
clc
daa
add
jno
mov
cltd
and
clc
or
fs
mov
repnz
or
lsl
sub
fsubs
xor
out
rolb
ljmp
je
shl
cmp
mov
cmpsl
pop
mov
sbb
cmp
mov
arpl
adc
lcall
pusha
mov
or
or
lds
push
push
ret
adc
aam
lea
lds
adc
and
loop
sub
xchg
jp
add
sarl
test
mov
sbb
or
xor
cmp
aaa
rclb
out
xor
jo
cmpsl
jle
mov
div
add
cld
ljmp
add
add
shrb
ljmp
push
jb
gs
mov
pop
cmp
and
shrb
dec
xor
add
push
mov
rolb
sbb
pop
in
les
mov
pop
bswap
push
popf
and
jno
enter
loope
add
sub
add
nop
popa
subb
mov
adc
jecxz
pusha
cmpsl
dec
loope
pop
rorb
or
popa
pop
call
or
add
sub
push
cmpsb
add
dec
pop
or
cli
inc
cli
mov
add
dec
sub
or
pop
test
xchg
stos
rclb
push
add
bound
rol
mov
adc
mov
int3
inc
loope
aad
jnp
call
mov
push
pushf
test
test
xchg
cwtl
mov
mov
jmp
adc
mov
push
pop
push
pop
mov
sbb
pop
loopne
ret
dec
and
cmpsl
out
adc
bnd
dec
cli
push
rcll
ret
dec
cmp
mov
mov
test
aam
cmp
ret
js
gs
sbb
and
sarb
lret
es
jecxz
pop
mov
mov
enter
mov
mov
rorb
sub
xor
pop
mov
les
mov
cmpb
mov
cmpsl
out
adc
xor
push
js
imulb
or
mov
scas
add
jl
adc
and
push
add
adc
and
ds
loopne
or
sbb
fldl
leave
xchg
nop
jge
bound
in
cmp
add
or
test
cs
pushf
test
mov
ret
fistl
jmp
cmpsb
lret
test
test
stc
xchg
pop
cmp
clc
mov
mov
jns
pushw
fnstcw
push
xchg
mov
or
lret
add
fsubrl
fsubrs
sub
rol
loop
sub
lods
orl
dec
mov
push
or
arpl
xchg
dec
daa
xor
in
push
lret
inc
daa
cmovp
lods
adcl
mov
adc
pop
add
and
test
mov
es
rclb
mov
scas
lods
movzwl
std
js
cmp
movsl
test
addb
xor
mov
mov
idivb
add
mov
or
rcr
stos
repz
rcrl
dec
adc
mov
cmpsl
xorl
daa
mov
cmp
dec
mov
lret
nop
pop
inc
push
lock
rcl
or
add
xchg
inc
lock
mov
lods
mov
hlt
mov
lret
les
rol
out
adc
add
movl
inc
ds
inc
dec
and
sbb
inc
pop
call
mov
sbb
lods
aad
xor
mov
lock
push
xchg
aaa
test
sbb
inc
xor
rcrl
call
std
adc
mov
add
pop
add
rcl
lods
cmovno
mov
mov
sbb
push
mov
xor
inc
mov
lods
adc
or
mov
ljmp
movb
adc
jmp
sahf
or
push
jp
push
ljmp
sbb
or
jp
fcmovu
loope
cmp
sbb
sbb
in
daa
cs
jmp
add
lock
cmp
sub
lock
mov
jp
clc
fbld
shl
xorb
fldenv
sbb
enter
imul
imul
shl
aas
adc
test
int3
mov
mov
bound
sbb
push
sub
jle
or
push
sbb
fiaddl
sub
jb
jl
inc
mov
lods
ret
dec
ja
pop
cmp
mov
leave
adc
add
aam
xor
nop
jbe
add
and
add
loop
xor
rcrb
sbb
cwtl
imul
cli
testb
hlt
aam
mov
adc
xor
adc
sahf
xor
and
ljmp
cwtl
adc
dec
js
xor
rcrb
xchg
rcrb
rcll
or
add
ret
adc
imul
int
jecxz
and
in
loop
inc
or
test
sbb
loope
push
insb
xchg
xorb
xchg
sub
sub
xchg
xor
adc
inc
orl
ret
jecxz
hlt
sub
inc
fdiv
xchg
adc
mov
sub
scas
push
pop
add
mov
xchg
sub
add
fadd
inc
sbb
add
sti
shl
pop
xchg
stos
or
and
enter
sub
push
cmp
xchg
pop
push
adc
rcl
inc
push
mov
inc
cld
mov
mov
inc
sbb
rcrb
pushf
cmp
test
sbb
in
pusha
insl
xor
xor
push
fstpt
outsl
sbb
sbb
div
push
rclb
dec
add
add
mov
mov
ds
mov
xor
push
cmpsb
xchg
adc
xchg
js
pop
into
es
shlb
xchg
and
push
dec
addl
dec
gs
cmpb
call
pushf
push
aas
sbb
cli
lods
rcll
adc
cmpsb
push
push
dec
int
lds
cs
mov
mov
inc
push
mov
je
scas
add
pusha
pusha
and
fsts
jo
xchg
push
pop
jmp
pop
cwtl
mov
xchg
sub
fs
fiadds
and
sbb
xchg
mov
adc
movl
sarl
or
and
mov
subl
push
pushf
faddl
mov
add
stos
sub
adc
dec
dec
sbb
sub
lock
adc
pop
mov
push
push
mov
sbb
fsubs
xchg
rolb
out
mov
add
rolb
dec
pop
popf
sbb
dec
sub
sub
mov
xchg
or
sti
out
fistpll
cmpsl
and
jmp
clc
mov
xlat
inc
sub
rcr
push
adc
movsl
call
xchg
rclb
adc
push
cmpsl
int3
mov
and
mov
aam
rclb
repnz
xchg
sub
rorb
pop
xchg
mov
loopne
add
clc
repnz
add
mov
ds
paddw
sbb
sbb
push
inc
or
insb
test
xchg
orl
mov
xchg
mov
mov
ds
xchg
push
cmova
jo
mov
dec
jmp
rol
jp
inc
fs
stos
push
sbb
adc
mov
xor
int
push
mov
adc
rol
cli
call
pop
sbb
xchg
xchg
push
or
push
and
and
sub
mov
mov
shr
bnd
push
pusha
fimuls
cmovb
aam
mov
push
js
sbb
xor
adc
push
push
sbb
int3
adc
or
push
loopne
inc
add
push
push
lock
insb
mov
into
pop
mov
enter
adc
addr16
andb
lret
inc
sarb
sbb
dec
call
pop
cmc
push
sbb
push
sub
cli
dec
mov
add
or
arpl
shlb
adc
shrb
sbb
push
pop
adc
test
adc
jo
sub
imul
push
mov
or
or
shl
adc
push
push
testl
pop
pop
sidtl
mov
ja
or
cmc
push
inc
fcoml
inc
sbb
loopne
gs
js
outsb
and
mov
or
loop
cmc
iret
sbb
adc
aam
test
nop
icebp
orb
xor
xchg
xchg
mov
or
ljmp
add
insl
bound
sbb
cmp
jle
pop
xor
mov
xor
jb
testb
stos
sti
je
shrb
clc
add
js
test
push
ss
pop
push
into
and
das
fsub
adc
and
pushf
sbb
pop
not
call
pxor
fldt
add
ljmp
arpl
mov
fldl
sbb
jp
jno
and
pusha
mov
out
push
nop
dec
test
mov
inc
loopne
cs
push
xchg
shrb
jecxz
test
cmpsb
sub
inc
sub
add
dec
lock
or
test
lock
add
and
jbe
mulb
dec
mov
add
adc
adc
add
lock
fisubrl
push
lea
cmp
fildl
add
add
notb
repnz
movsb
imulb
sub
sbb
sub
mov
pushf
jg
rcrb
shlb
lea
mov
or
and
scas
fmuls
cmp
fbstp
subb
cmpsb
add
sarb
dec
pop
or
clc
lcall
rolb
inc
mov
push
push
pusha
mov
push
pushf
gs
pushf
inc
mov
and
mov
aam
push
push
cmp
pop
add
push
inc
cmp
cwtl
outsl
push
jmp
outsb
push
out
call
add
daa
jmp
mov
and
xor
roll
mov
inc
sbb
inc
ret
sub
xor
lret
sbb
lcall
and
and
arpl
jecxz
mov
push
lcall
orb
enter
cs
push
inc
jbe
mov
enter
push
aam
xchg
jb
add
rcll
in
mov
cltd
add
xchg
int3
push
sarl
mov
cld
sbb
lret
cmp
cmc
and
fldenv
jo
mov
xchg
push
xadd
and
add
or
inc
mov
sbb
imul
or
dec
lahf
aam
mov
shlb
leave
or
sub
loope
add
movsl
add
cli
imul
lahf
xor
pop
jecxz
dec
mov
dec
js
or
je
dec
mov
add
sbb
xchg
adc
mov
adc
ret
inc
push
mov
push
cmpsl
push
sbb
add
ror
xor
push
push
lods
adc
das
xor
add
or
lods
mov
mov
test
xor
xchg
push
sbb
adc
lock
loopne
ret
push
xorb
pop
push
jle
adc
or
test
add
mov
or
in
adc
pop
jmp
push
cmp
test
hlt
xchg
loop
inc
jl
push
jno
rcll
mov
push
push
shrb
dec
sub
sbb
sbb
cli
add
xchg
andb
push
push
push
pop
push
sbbb
inc
mov
stos
jnp
scas
stos
ljmp
xor
lock
sbb
scas
mov
push
or
pop
cmp
dec
lock
mov
push
sbb
push
add
cld
mov
ja
adc
rcl
xor
push
sbb
pop
add
xchg
adc
sub
ret
ret
lcall
dec
inc
push
add
lea
or
and
lock
jne
xchg
in
inc
cmpsb
lock
ficomps
dec
fsubs
xchg
add
xchg
push
icebp
in
or
fiaddl
scas
pop
pushf
xor
and
and
shl
cmc
xor
xchg
dec
or
mov
lret
stos
and
jmp
loope
sbb
mov
sub
or
xchg
sbbl
std
jb
add
adc
ficoml
mov
pop
or
cmp
mov
xor
pusha
andb
lods
xchg
push
mov
or
js
sbb
int3
test
adc
cli
jne
aaa
xchg
call
lods
dec
fadd
push
mov
push
push
pop
hlt
stc
dec
inc
jo
or
cmp
outsl
push
fcoml
push
shlb
mov
sub
ljmp
imulb
js
add
dec
add
add
rol
adc
jae
mov
sbb
pusha
leave
mov
test
mov
and
mov
or
adcb
xor
jno
jl
sub
int
in
cwtl
int3
js
es
sub
push
js
insb
add
addr16
pop
test
inc
push
xor
jae
loopne
sub
add
or
sbb
imul
sete
or
mov
imulb
cwtl
repnz
data16
and
mov
loopne
rclb
xchg
imul
add
aaa
sbb
js
add
imul
mov
rclb
cmp
in
imul
pop
movb
test
incb
movsl
cs
lods
or
push
ja
ror
or
and
orl
jne
push
lcall
pop
ja
mov
jle
andl
mov
and
or
icebp
and
lock
aaa
xor
shlb
les
fsub
movsb
jno
sbb
dec
pop
and
add
fwait
sbb
lea
cmp
adc
add
sbb
sbb
and
mov
mov
and
stos
push
int
test
jno
lcall
push
mov
mov
push
lcall
iret
add
mov
in
and
mov
mov
cli
and
ljmp
outsb
repz
ret
inc
add
jl
xchg
ss
pop
dec
jb
sub
and
pop
in
test
cmp
aaa
and
nop
aaa
xlat
or
xchg
out
adc
dec
fists
dec
test
aam
dec
xor
nop
orl
inc
sbb
xchg
push
xchg
and
cmp
jo
ret
rolb
adc
jmp
or
aam
push
adc
add
mov
cmp
pop
jmp
in
adc
push
lods
xor
repnz
inc
push
push
pop
xchg
adc
fs
push
rorb
pop
adc
pop
mov
adc
jnp
xor
cli
mov
andb
jae
sbbb
jo
dec
divl
cmp
pop
shlb
pop
or
pop
jmp
xlat
and
lods
and
push
add
mov
ffree
jne
inc
movups
jl
andb
ret
pop
in
push
add
mov
adc
cli
or
ret
adc
sub
sbb
popa
data16
cmpb
cmpsl
icebp
pop
dec
js
dec
xchg
mov
xor
add
shr
leave
inc
loop
and
jle
rcl
mov
sub
les
dec
imul
mov
mov
add
stos
add
sbb
adc
imul
sub
and
int
ret
mov
andb
imul
inc
mov
mov
imul
dec
repnz
movsb
mov
fs
enter
xchg
mov
mov
mov
jmp
and
orb
sbb
jbe
inc
sbb
popa
roll
push
sbbb
mov
or
sbb
es
leave
nop
add
out
insb
jo
movnti
cmp
aaa
dec
sub
and
cmpsb
lret
rol
mov
clc
add
into
adc
sahf
xchg
adc
dec
jno
jecxz
push
pop
dec
pop
add
add
or
sete
and
mov
pop
sbb
or
rclb
xchg
add
jne
sbb
insl
mov
jo
inc
jo
leave
rclb
add
sbb
mov
jno
xor
cmp
cmp
nop
sbb
dec
aam
or
inc
insb
cmc
adc
ret
rorb
inc
mov
enter
nop
mov
icebp
pop
lock
mov
and
dec
popa
add
push
punpckldq
jecxz
ltr
roll
rclb
nop
xchg
jg
pop
xchg
cmpsb
pop
rolb
add
dec
loopne
sub
imul
inc
or
call
xor
or
mov
dec
mov
pop
push
push
jnp
cmp
push
repz
pusha
shlb
arpl
and
or
movsb
xor
push
xchg
testl
inc
roll
lcall
pusha
add
lods
nop
mov
xor
or
jp
int3
test
or
push
or
push
call
js
add
jmp
or
add
cmp
xchg
enter
jge
dec
or
and
pop
mov
mov
cmp
pop
or
bound
pop
fmull
addb
sbbl
push
add
inc
test
hlt
add
and
bound
js
out
aas
div
push
nop
cmpsl
mov
adc
mov
fcmovb
xchg
dec
dec
orb
cmp
bound
push
ret
stos
adc
push
popf
jl
cmc
call
xchg
fisubrs
jp
or
push
mov
add
add
rcrl
jne
adc
movb
jge
adc
adc
xchg
inc
or
setb
lea
pop
adcl
mov
add
iret
jmp
push
cwtl
cmp
add
add
movsl
lock
ds
adc
and
and
sub
test
movsb
aad
pop
and
je
pusha
mov
sub
test
test
push
lret
les
inc
test
std
pop
enter
fidivrs
push
pop
add
push
push
lods
fisttpl
mov
rcrb
inc
or
adc
jle
push
pop
inc
adc
or
sub
adc
mov
test
cld
adc
push
lcall
sub
and
add
lret
dec
test
push
adc
aad
or
rolb
sub
imul
movsb
xlat
xor
mov
or
icebp
adc
pop
cmp
mov
or
psubsw
and
movsb
fdiv
mov
and
stos
add
xchg
sbb
loope
enter
xchg
scas
outsb
inc
add
ds
sbb
pop
adc
inc
jmp
mov
test
jmp
aas
imul
or
adc
loope
ret
pop
add
mov
fnstcw
pop
or
inc
rcll
mov
data16
xor
xchg
repnz
inc
mov
mov
or
push
push
loopne
xor
push
push
mov
xor
je
adc
insb
jmp
inc
imul
xor
leave
in
mov
xorb
lahf
addb
and
aam
xchg
pusha
dec
sub
cmpsb
lret
cli
ljmp
imulb
cmp
and
mov
mov
daa
add
out
xor
mov
cmp
int3
or
cmp
add
add
add
movsb
outsl
and
cmp
and
dec
mov
insb
rcrb
or
mov
and
add
or
pop
out
dec
ret
inc
lock
call
loope
dec
and
pop
addb
test
sbb
cmp
rorl
repnz
push
pop
pusha
push
xor
sbb
pop
pop
mov
lods
addb
icebp
fwait
addb
arpl
andb
and
xor
rclb
jno
rorb
sbb
sbb
lods
lods
mov
or
lahf
pop
rolb
add
add
pop
and
mov
mov
aad
jo
call
adc
inc
mov
sbb
loope
xchg
or
test
pop
add
cs
mov
xchg
xor
mov
fs
xchg
rolb
cmc
jnp
add
inc
sbb
outsb
mov
sub
mov
and
testl
xor
xchg
sbb
or
shrb
fisubl
fidivrl
andl
or
sub
sahf
mov
jmp
inc
arpl
xchg
jmp
roll
cmp
adc
loope
jp
pop
lods
or
sbb
xchg
cmpsb
je
or
adc
mov
add
pop
and
movsb
lock
sub
and
hlt
or
fadds
jo
inc
lods
or
and
inc
cmp
inc
or
inc
sbb
ss
lss
or
popf
mov
or
leave
out
adc
mov
ret
inc
movsl
or
push
ficoms
call
daa
inc
das
inc
inc
mov
fsubrl
scas
adc
std
adc
ljmp
shlb
aas
sub
mov
mov
adc
lcall
add
pop
pusha
ss
movsb
inc
add
loope
push
daa
xor
mov
pushf
arpl
sub
aam
sub
or
jo
data16
les
add
sub
sbb
mov
js
dec
adcl
lods
push
loopne
rcr
js
adc
pop
jne
pop
cwtl
add
lock
add
cmp
mov
decl
dec
mov
xchg
mov
pop
movsl
push
and
cs
add
daa
mov
popa
ret
pop
push
jno
lea
out
or
add
repnz
inc
bound
cmovle
loop
dec
xor
or
xor
mov
mov
lods
lock
bound
enter
mov
mov
xchg
push
js
out
xchg
movsb
add
push
test
aam
mov
and
call
out
inc
ja
incb
inc
loop
or
pusha
sbb
fnclex
dec
push
add
add
mov
sub
ljmp
and
add
movsb
sub
xchg
pusha
jg
rcl
or
cmp
cmpsb
js
push
mov
inc
ds
sub
adc
sbb
xlat
test
popa
add
xor
js
aam
hlt
mov
pusha
ss
push
je
fsubrl
inc
cmp
sbb
aam
sbb
pop
sbb
cmp
and
pop
mov
mov
adc
add
leave
lret
sub
xor
jp
sbb
and
stos
xorl
sub
cwtl
xor
mov
ss
pop
mov
or
xchg
addb
stos
adcb
fistpll
test
adc
rcl
add
inc
inc
ret
icebp
sbb
add
popf
lret
push
add
push
insl
int
jno
sub
inc
push
mov
add
in
shrl
jp
in
fnstsw
aad
ljmp
loope
sub
pop
movsl
xor
jno
mov
cmp
xor
push
jecxz
mov
dec
adc
xchg
ja
loop
or
popf
fxch
add
pop
int
rclb
mov
sahf
divb
test
xor
loop
stos
mov
sub
push
in
cmpsl
xchg
adc
mov
xor
xor
push
adc
sbb
jle
inc
add
ss
sbb
gs
loope
sbb
popf
mov
adc
mov
dec
push
popf
add
cmp
pop
popf
push
adc
cmpsl
movsb
add
pop
dec
sub
push
vmread
or
or
je
sbb
loopne
jno
xchg
adc
or
addb
clc
insb
add
mov
mov
inc
sub
sub
and
pop
fs
lock
nop
add
jecxz
subl
pop
data16
xor
inc
cmp
enter
add
and
hlt
push
jmp
push
movl
sahf
jl
loop
pop
xor
adc
adc
adc
sarb
ret
push
mov
rcr
push
jno
adc
push
sbb
js
roll
push
lock
dec
xlat
mov
mov
mov
fistps
and
sbb
or
xor
or
js
inc
rolb
or
xor
mov
xchg
addb
jl
sub
mulb
rcrl
xchg
push
pop
cmp
bound
xchg
and
or
jp
outsb
loop
adc
cld
pushf
or
jp
testb
insl
lods
ror
push
push
lods
inc
pop
lock
popa
movsb
or
push
ljmp
dec
dec
lea
cmp
sub
xor
adc
dec
jae
pop
cs
rolb
es
jmp
add
sbbl
call
pop
sbb
xor
icebp
mov
pop
js
add
rcl
push
sbb
inc
add
pop
adc
dec
or
xchg
and
dec
and
xchg
shlb
mov
inc
lea
jge
roll
addl
mov
adc
stc
mov
sbb
or
fcmovbe
arpl
inc
sbb
xchg
or
xor
pop
mov
movsb
loopne
dec
mov
xchg
lods
sub
ljmp
adc
add
sbb
jmp
or
mov
and
dec
adc
clc
es
mov
pop
pop
es
add
add
pusha
daa
into
cmp
xor
and
rorl
inc
push
ja
adc
sbb
or
jne
icebp
xchg
fidivrl
or
sbb
popa
movsb
push
movsb
or
pop
cmp
sub
sbb
mov
popa
aaa
test
dec
mov
add
mov
sbb
call
sbb
ds
inc
sbb
push
push
js
nop
jmp
dec
fxch
adc
cmp
xor
cmp
lret
cmpl
sub
sahf
jmp
pop
or
add
leave
sbb
xchg
push
add
pop
loop
pop
push
hlt
adcb
pop
cmpsl
xor
mov
pop
mov
xchg
xor
dec
shlb
ds
addb
pusha
ror
aad
adc
push
push
jecxz
pop
adc
call
ficoml
xor
nop
push
add
or
imul
and
add
and
cmp
ljmp
mov
or
xchg
xchg
test
adc
movsl
mov
xchg
or
push
push
mov
imul
jmp
call
movb
pop
add
or
adc
lcall
pop
shlb
adc
xor
inc
or
out
lods
xor
push
dec
imul
xchg
dec
pop
or
or
sub
cmpb
out
gs
mov
data16
or
nop
adc
add
inc
inc
sbb
dec
mov
out
add
pushf
nop
daa
popa
push
clc
cwtl
or
rclb
mov
mov
pop
lea
and
or
test
xor
pop
adc
push
cmp
jp
adc
and
fs
stos
testb
sub
adc
push
movb
add
mov
leave
pop
ret
cmp
jge
pop
jle
inc
xor
addl
xchg
fildl
lret
or
pusha
cmp
and
popa
lea
pop
bound
test
add
mov
xlat
or
xchg
jns
add
test
dec
rorb
mov
adc
pop
or
arpl
or
rorb
dec
ds
push
rorb
test
ret
fiaddl
dec
or
xchg
sbb
adc
or
inc
adc
lcall
nop
fidivrs
cmpsl
xchg
cmp
dec
or
ja
mov
dec
or
aad
lea
mov
lods
jmp
add
or
adcb
cmp
ret
inc
dec
adc
push
xchg
pop
mov
jb
aam
push
leave
cmp
and
rorb
push
xchg
xchg
into
xchg
mov
push
sbb
sbb
xor
sbb
or
xor
sbb
mov
or
push
inc
rorb
inc
out
mov
out
mov
loope
push
leave
jl
ljmp
cmpsb
jno
js
jmp
shll
push
push
xchg
push
mov
sti
sbbb
xchg
push
das
call
xchg
int3
mov
mov
lods
xor
fdivs
movsb
mov
push
inc
inc
xorb
and
lods
adc
xchg
xor
pop
loopne
cmp
adc
nop
mov
popa
rcrb
mov
pop
jl
aaa
jp
pushf
sbb
push
or
sbb
mov
xor
shl
mov
cltd
pop
adcb
les
negb
xlat
xchg
xlat
cltd
cmp
xor
xor
xor
ret
shlb
cld
call
pop
mov
or
xor
call
lret
and
popa
xchg
push
pop
pop
divb
sub
rcrl
clc
add
and
jo
inc
xor
jne
mov
pop
mov
mov
bound
jmp
mov
cmp
or
sub
pop
ret
or
xor
iret
xchg
subb
sbb
scas
xchg
fadd
ljmp
insl
sbb
mov
inc
nop
imul
int3
adcb
dec
mov
mov
inc
xchg
pop
pop
mov
push
sbb
cmp
pushf
pop
movsb
and
xor
dec
popl
sbb
scas
out
or
sub
fnstenv
enter
and
aad
jmp
push
test
sub
xor
fiadds
into
cmpsb
popf
or
mov
pop
mov
cmp
adc
add
adc
or
mov
jns
out
or
push
mov
hlt
test
arpl
xchg
xor
div
and
addb
insl
cmp
sub
test
xor
inc
push
hlt
dec
or
push
adc
les
cmpsl
pop
out
add
inc
sub
stos
inc
aaa
sbb
sbb
add
xor
xchg
sub
roll
cmp
sbb
bound
inc
pop
loope
pop
ret
movsb
jecxz
aas
sbb
xor
mov
dec
push
dec
ss
sbb
mov
movsl
cli
mov
push
clts
jo
inc
sbb
mov
xchg
jl
out
daa
mov
test
xchg
add
inc
adcb
sahf
test
jmp
rorb
jmp
imul
in
jb
push
xchg
xchg
pop
push
add
lock
adc
movsb
js
push
lret
and
outsl
cld
adc
ljmp
adc
aaa
adc
popf
jo
mov
scas
or
mov
add
in
pop
or
adc
add
pushf
or
sbb
lret
mov
pop
xor
xor
add
mov
mov
add
aas
add
or
mov
rorl
ret
cmp
sub
out
mov
or
push
sarl
jb
insb
jg
sarl
fldenv
xchg
jo
pop
fs
push
testl
into
call
mov
jb
aad
sub
ret
mov
loopne
dec
sbb
lods
addr16
dec
xchg
sbb
mov
sub
pusha
fimuls
push
mov
cmpsl
jbe
xor
bswap
cwtl
aas
aam
ret
movsl
pop
imul
push
or
cmp
sub
ljmp
push
xchg
mov
test
outsb
jo
xor
popa
dec
fisubs
loop
stc
push
mov
mov
inc
mov
fiaddl
inc
mov
mov
lods
dec
rcrl
jmp
leave
lock
nop
or
or
or
sub
or
ja
subl
out
push
add
sbb
and
mov
and
test
sbb
adc
mov
pusha
adc
add
xchg
xorl
dec
dec
sub
and
push
pop
stc
adc
ss
mov
daa
movsb
add
sub
push
add
ret
xor
and
stos
leave
push
sub
inc
loop
cltd
add
add
jne
add
xchg
mov
mov
cmp
sub
push
dec
push
inc
xchg
orb
adc
test
pusha
sub
or
outsb
and
dec
hlt
andb
inc
rcrl
imul
stos
ret
and
add
shrl
inc
movsl
gs
bswap
cwtl
mov
lods
std
mov
movsl
mov
cmpsl
xchg
adc
lds
popa
inc
sub
pop
fdivr
add
stos
fmulp
xchg
shrb
pop
imul
add
adc
jo
pop
adc
orl
push
pop
add
fbld
pusha
inc
mov
cmp
jmp
push
sarb
addr16
cmp
cs
xchg
or
or
sub
test
outsl
sbb
rorb
imul
add
mov
xlat
sbb
mov
pop
dec
pusha
daa
mov
shrl
stos
sarb
xor
mov
add
add
xchg
sbb
inc
loope
fsubp
adc
add
addr16
int3
movsb
add
inc
push
sbb
push
push
mov
xchg
inc
shrl
shll
sub
and
mov
pop
aam
or
rorl
ss
dec
pop
add
pop
jp
jp
dec
sarb
sysret
hlt
or
xchg
or
pop
adc
scas
sbb
call
push
add
inc
sbb
sbb
add
xchg
adc
fsubs
adc
nop
xchg
icebp
or
xchg
and
and
push
stos
arpl
xor
xchg
xor
mov
sub
push
sahf
imul
sbb
inc
mov
lock
ret
inc
inc
push
jb
sub
mov
mov
sbb
cmp
test
out
push
and
loopne
lret
add
sbb
rcrb
jo
ljmp
lret
lahf
mov
push
xchg
fisttpll
das
test
sub
mov
add
add
add
or
lret
mov
sub
dec
incl
js
icebp
push
jp
fstpl
sub
add
imul
cmp
enter
mov
adc
adc
xor
pop
xor
lahf
add
andb
ret
repz
push
xchg
sbb
pusha
and
dec
test
cltd
pop
pop
enter
call
sysret
add
and
xor
xchg
add
rcrb
and
xor
loope
and
xchg
mov
xor
push
add
lods
sbb
push
push
movsl
into
jo
movsl
movsl
test
jno
push
xchg
sbb
inc
std
sub
add
rsm
push
dec
sbb
lret
movsb
ret
ret
push
or
or
nop
dec
out
lahf
xlat
mov
xor
out
sahf
push
sbb
pop
pushf
mov
cmp
adc
sbb
movsl
xchg
repnz
jbe
add
adc
shll
or
sub
or
pop
xor
mov
lcall
js
fmull
add
loope
jo
imul
movsb
and
cltd
jne
dec
mov
in
dec
add
add
out
addr16
lcall
inc
xor
mov
xchg
adc
aaa
pop
mov
scas
out
mov
and
push
test
jo
rolb
sbb
sbb
dec
sub
cwtl
sbb
shrb
sbb
cmp
lds
je,pt
jae
std
shr
movsb
or
cwtl
arpl
mov
imul
xchg
addl
mov
pushf
sub
and
adc
inc
sub
mov
mov
movsl
sub
push
test
push
dec
sub
stos
das
fbstp
cmp
cmpsb
pop
adc
push
mov
xchg
cli
lods
daa
mov
and
cmp
fdivr
adcb
pop
xchg
mov
inc
adc
mov
ret
cmp
mov
addb
shll
data16
lahf
adc
das
dec
add
push
in
lret
test
loope
jb
jne
mov
rorl
xor
lock
push
xchg
and
jl
mov
jl
inc
sbb
pop
das
jge
sub
sub
push
sub
lret
dec
aaa
add
and
push
sbb
pushf
cli
inc
push
push
mov
pushf
movsl
hlt
xchg
xor
sub
in
jns
in
pop
imul
in
pop
mov
pushf
dec
push
insb
adc
into
push
and
add
pusha
loope
fnstcw
inc
sbb
in
mov
cmp
and
loope
and
test
sub
leave
cmp
dec
or
push
lcall
inc
ret
xchg
mov
dec
test
mulb
xor
mov
jno
in
imul
inc
loop
mov
or
or
xchg
xchg
mov
je
push
and
pop
xchg
add
inc
inc
push
inc
xchg
jo
or
mov
and
or
rcl
inc
mov
insb
sub
mov
pushf
pop
or
mov
push
xor
push
or
les
push
test
mov
adc
cmc
add
xor
sub
les
test
sbb
and
jmp
ret
and
js
orb
mov
sti
enter
pop
dec
ret
sbb
dec
mov
add
adc
add
cmovs
cmp
nop
xchg
das
js
add
mov
mov
icebp
jl
or
or
faddp
jge
mov
cltd
in
sub
insb
jnp
and
dec
shrb
enter
lret
sbb
xchg
cs
adc
mov
out
pop
loop
pop
cmpsb
mov
std
cmpsb
xlat
test
push
sbb
fimull
push
xorb
ror
stos
jns
mov
sbb
adc
mov
and
dec
loope
push
and
es
sti
in
push
push
pushf
push
jnp,pn
or
aam
pop
testb
mov
icebp
xorl
push
test
adc
and
mov
pop
leave
xor
mov
sahf
mov
dec
je
mov
mov
lods
mov
xor
out
cwtl
pop
inc
or
adc
push
leave
nop
subl
das
loope
inc
xchg
xchg
dec
mov
xchg
mov
int
out
mov
mov
lea
pop
loopne
rolb
jecxz
push
test
xor
and
adc
sbb
and
sub
ret
shll
push
mov
sbb
or
cwtl
push
adc
lds
call
cmpb
mov
add
add
int3
dec
mov
xchg
rcl
enter
xor
fs
cmp
lods
push
test
jl
mov
test
out
mov
xor
push
cmp
mov
push
loopne
xor
jns
test
xchg
aas
add
enter
push
mov
push
inc
data16
dec
loop
bndstx
mov
push
punpckhdq
subb
inc
test
or
js
add
lea
hlt
dec
mov
dec
sub
xchg
clc
shlb
rolb
test
out
sub
mov
scas
inc
cmp
xor
fdiv
add
nop
sbb
push
dec
insb
jns
movsl
mov
pop
inc
es
cli
add
mov
sbb
xchg
mull
sub
ds
flds
or
pop
dec
pop
add
adc
sbb
sub
stc
adc
add
cmp
daa
imulb
les
pop
sbb
int3
or
and
int3
and
insb
popa
dec
sbb
jo
loopne
lock
xor
loope
inc
lods
ljmp
out
pop
xchg
xchg
and
sbb
rcrb
xchg
or
ret
adc
nop
and
inc
sub
sbb
inc
xchg
xchg
mov
in
and
sbb
js
adc
and
add
and
ljmp
enter
mov
sbb
or
flds
outsl
call
into
adc
xorb
fs
add
data16
clc
inc
scas
adc
call
pop
jle
and
jmp
push
shl
pusha
inc
push
ret
sbb
popf
andl
pop
mov
mov
imul
xor
add
mov
mov
and
sbb
mov
dec
xor
into
inc
mov
jb
pop
add
or
mov
and
sub
or
add
sbb
or
xchg
rcr
and
jg
adc
pop
add
push
dec
pop
adc
inc
inc
add
popa
mov
lcall
sbb
sub
jg
sbb
popf
or
arpl
jo
fnsave
xchg
sbb
adc
sbb
in
push
test
scas
and
add
add
and
xor
or
pop
imul
sub
rcr
rolb
lock
in
movsl
rcrl
aam
inc
pmaxub
test
sbb
mulb
adc
iret
and
xchg
movsl
dec
sahf
fstpl
jno
sbb
add
xor
aad
and
add
mov
scas
pop
clc
test
adc
shrl
shlb
mov
cltd
cmp
or
inc
popl
jne
or
fnsave
mov
imul
cli
mov
arpl
sbb
add
popa
pop
push
test
iret
mov
xor
sbb
fs
ss
testl
or
push
outsb
and
push
loopne
ljmp
mov
bound
push
or
sbb
mov
movsb
dec
aad
rcrl
shlb
psubusw
push
adc
out
pop
adc
push
or
mov
push
mov
lds
jle
sub
popf
or
rcrl
das
push
adc
mov
or
mov
sub
mov
push
loopne
js
and
lret
mov
inc
lock
inc
xchg
mov
enter
adc
mov
test
or
jp
adcl
outsl
cli
adc
sbb
pop
mov
add
loopne
lahf
ljmp
sub
adc
add
xor
and
cwtl
in
or
movsb
movsb
je
loope
mov
dec
out
inc
rol
daa
call
dec
test
test
rcll
push
add
inc
xor
add
push
adc
inc
sbb
pop
sbb
add
leave
push
lret
jmp
xor
pusha
sbb
ljmp
test
xchg
and
scas
shrl
popf
add
dec
add
sbb
jl
cmp
leave
push
divb
pop
mov
or
jecxz
add
or
push
sbb
js
xchg
jg
repz
mov
xchg
lcall
mov
jns
inc
pop
ret
sbb
ds
rorb
cmpsb
push
xchg
arpl
jle
xor
push
mov
add
xchg
push
jmp
pushf
lret
inc
outsb
add
jle
pop
sub
lea
imul
mov
or
and
jae
mov
enter
mov
call
lock
sbb
mov
sub
pop
add
lea
pop
imul
int3
pop
movsb
sbbl
int3
sahf
and
jmp
flds
popf
xor
icebp
shrl
mov
outsb
mov
repnz
sbb
mov
lret
cmpsl
adc
loope
dec
dec
adc
add
cmpsb
sub
orb
rclb
inc
adc
pop
enter
add
xor
dec
push
ret
mov
xor
fs
shlb
push
mov
xor
xchg
inc
mov
inc
push
sub
cmp
pop
push
movsl
movb
inc
call
dec
ret
cmp
testl
movb
xor
imul
xchg
inc
or
add
ljmp
es
orb
inc
pusha
adc
daa
push
int
sbb
and
hlt
int
stos
test
dec
cmpsb
inc
mov
push
aam
push
inc
es
dec
jb
jge
mov
push
dec
lods
shlb
pop
or
lock
imul
sbb
adc
push
rolb
int3
ret
repnz
pushf
sbb
cvttps2pi
push
mov
pop
inc
cmc
xor
sbb
xchg
xchg
sub
loope
popf
dec
push
mov
push
adc
sub
push
adc
into
adc
in
aaa
sbb
clc
cmp
or
push
push
jp
enter
sbb
mov
icebp
ss
sub
test
dec
and
push
enter
rcl
lret
inc
mov
xchg
xorl
cs
sub
adc
in
push
push
mov
adc
pop
jecxz
cmp
or
inc
dec
ss
jecxz
mov
adc
lods
andl
sub
cmp
cmpps
lret
or
dec
xchg
test
push
pop
lods
mov
sbb
ret
push
das
xor
sub
inc
in
das
pop
jmp
or
push
shrb
ret
js
enter
dec
jb
push
cmp
or
scas
call
add
int3
mov
sub
inc
je
xchg
adc
adc
dec
mov
testl
prefetch
icebp
mov
inc
data16
push
pop
sub
push
add
inc
in
shll
adc
xchg
push
dec
cmp
loop
stos
inc
rorb
xchg
aam
push
and
das
adc
loop
and
int3
mov
add
adc
sub
sbb
xchg
pop
xchg
and
mov
mov
add
andb
add
test
inc
sbb
loope
mov
sahf
jno
popf
movsl
pusha
push
adc
pop
test
jmp
xchg
enter
jbe
scas
les
adc
mov
lods
outsb
push
punpckhdq
sbb
pushf
jp
add
clc
jge
cmp
mov
adc
addl
jb
xor
inc
lcall
insb
jmp
dec
sbb
cmp
jp
addl
shll
push
push
leave
xorb
mov
nop
push
es
movb
mov
and
xchg
sbb
xchg
call
add
iret
lock
pop
aas
sub
push
rolb
loopnew
dec
shlb
test
push
repnz
cmp
mov
popf
js
hlt
mov
jecxz
add
ret
dec
sbb
movsl
ljmp
mov
repnz
mov
lods
enter
pop
mov
add
rcrb
andb
mov
les
cmp
jo
push
popf
sub
xor
ret
and
sahf
adc
and
xchg
incl
xor
push
mov
into
xor
push
pop
ljmp
mov
inc
aam
mov
pop
shll
xchg
mov
lret
adc
push
ret
inc
test
jo
xor
adc
sbb
inc
cmp
add
je
mov
inc
pcmpgtw
sbb
and
push
dec
push
and
add
add
dec
das
lret
adc
mov
dec
movsb
cmp
add
ja
add
dec
test
loopne
push
xor
sub
mov
popa
or
fdivrs
repnz
pop
inc
and
push
fiaddl
xchg
pop
and
xchg
push
sbb
lret
fmuls
dec
popf
sbb
mov
test
cld
inc
test
adc
xchg
test
and
mov
sbb
push
dec
dec
sub
add
sub
movb
mov
or
xchg
loopne
test
sbb
rolb
test
sub
enter
xlat
sub
daa
cwtl
adc
sbb
or
adc
popf
movsl
test
pop
sbb
outsl
sbb
sbb
sbb
loop
loopne
inc
or
add
outsl
filds
int3
js
xchg
inc
mov
sub
cmp
mov
sahf
cmp
push
out
and
jo
inc
sti
jae
adc
and
mov
inc
ret
icebp
mov
push
pop
add
cltd
add
mov
dec
sbb
adc
pop
push
daa
enter
cmp
inc
cmp
insb
sbb
andl
add
mov
lret
stos
setle
cmp
or
aaa
adc
adc
add
add
das
jno
mov
ret
adc
pop
ret
adc
sbb
adc
push
rcrl
rorb
sar
adc
mov
in
adc
mov
xor
push
mov
sbb
mov
dec
xchg
es
pop
mov
add
ljmp
adcl
dec
inc
roll
mov
and
pusha
mov
and
icebp
in
scas
adc
push
xlat
lret
enter
out
push
jne
and
jb
nop
pop
sbb
aam
int3
mov
ret
dec
or
add
rcr
ds
gs
pop
jl
xchg
adc
xorb
mov
mov
shll
push
cmp
pusha
lea
fwait
leave
aaa
mov
adc
loop
and
cmp
xchg
xor
push
or
and
pop
dec
push
fs
dec
inc
or
and
push
xlat
or
cmp
dec
cmpb
movsl
movsl
mov
dec
shrb
aaa
enter
pop
jge
mov
out
sub
imul
xchg
sbb
loopne
jae
jl
pushf
pop
push
addb
rolb
add
stos
arpl
and
adc
inc
push
mov
jb
fs
sbbb
add
test
cmc
lret
loopne
push
xchg
add
popa
aad
cmp
js
ljmp
push
jmp
repnz
mov
sub
js
jno
mov
dec
jl
mov
push
push
sub
jmp
jecxz
inc
jno
add
lret
or
and
test
add
mov
les
adc
sbb
aaa
js
lock
les
iret
sbb
jb
sbb
mov
pop
add
sbb
fistps
jo
lcall
mov
pop
ficoms
xchg
into
xchg
mov
add
or
test
addb
shrl
enter
icebp
or
fistpll
mov
push
and
cmp
adc
pusha
sahf
push
shrb
jbe
lods
dec
orb
xor
push
xchg
or
bound
sbb
xchg
cmp
jne
into
push
sbb
or
mov
or
push
add
addr16
nop
je
loop
xor
xor
and
pop
out
pusha
test
sub
jp
pop
adcb
or
es
lods
dec
les
push
lret
add
ret
imul
and
adc
sub
cmp
icebp
dec
pusha
sub
shrl
loope
push
rclb
xor
hlt
cmpsb
jle
inc
pop
movb
mov
pop
in
jbe
rol
jmp
cwtl
sbb
xchg
inc
add
adc
cmp
or
sub
pop
popa
pusha
sbb
or
notb
testb
cmp
outsl
mov
inc
and
sub
shlb
test
movsb
imul
xchg
pusha
mov
adc
test
mov
leave
aad
mov
rorb
pushw
xchg
inc
inc
iretw
cmp
pop
cmp
icebp
dec
enter
and
adc
ret
popa
cmpsb
insb
adc
lods
xchg
xchg
fwait
lds
sub
fprem1
push
sbb
push
mov
xchg
outsl
imul
sub
pop
or
sub
inc
or
push
lahf
sub
es
dec
cli
or
xchg
add
xor
adc
inc
sbb
shrb
mov
adc
jge
add
fcmovbe
pop
adc
and
andl
or
sbb
push
fcmovnb
cmp
adc
mov
mov
mov
call
cmp
xor
pop
xchg
push
jp
push
cmp
add
insb
cwtl
nop
inc
push
pop
loope
xor
rcrb
adc
daa
popf
loopne
rorb
das
enter
mov
aad
and
test
add
clc
lahf
pop
inc
xor
dec
push
dec
add
out
mov
push
sub
rcrl
adc
mov
jge
rcrb
jp
sbb
in
leave
pushf
add
call
hlt
inc
outsb
push
push
andb
repnz
pop
imul
push
loope
push
pop
loop
addb
xchg
or
mov
rcrl
repnz
add
pop
push
sub
in
movsl
xchg
rcll
loopne
ljmp
or
add
ss
push
mov
push
in
pop
pop
dec
rorb
jp
jecxz
or
repz
ds
jmp
mov
cmp
out
add
lods
push
push
and
adcb
xchg
pushf
dec
push
jbe
movsb
push
outsb
xchg
sub
rcl
pop
fadd
int3
inc
sub
jmp
ja
mov
inc
les
pop
jns
mov
addl
pusha
icebp
cwtl
loopne
push
inc
jge
inc
daa
inc
inc
movsb
sbb
mov
mov
test
cmp
add
cmc
sbb
mov
push
js
push
shrl
in
adcb
sbb
lea
push
cmp
mov
inc
and
lea
xor
in
push
adc
jno
xor
dec
or
add
add
push
rol
gs
xor
mov
mov
das
pop
out
or
cli
ss
mov
sub
mov
adc
xorl
pop
mov
rolb
sbb
xor
inc
sub
nop
push
or
add
add
js
push
push
bound
add
fs
inc
iret
adc
adc
jg
inc
or
adc
pop
adc
adc
push
adc
xor
loopne
cmpsl
sbb
aas
or
in
mov
push
xchg
movsb
jb
mov
or
in
add
dec
and
ds
mov
sar
popa
data16
xor
dec
mov
sbb
test
xchg
rcrl
and
mov
inc
int
dec
inc
jmp
add
fidivrl
mov
or
adc
pop
push
sub
or
xchg
cmc
xchg
add
jge
sbb
xor
inc
add
sbb
push
loopne
repnz
movsb
or
push
jp
aam
and
addr16
inc
jp
sub
lret
ret
jg
rcll
or
imul
or
insl
loope
push
add
jb
fcmove
sbb
fldcw
or
push
lahf
sbb
lock
jp
mov
jl
shrb
xor
add
test
out
xchg
pop
push
or
mov
into
call
push
mov
dec
sub
inc
mov
push
xchg
stos
and
jb
inc
shrl
pcmpeqw
in
mov
fsubrs
hlt
or
pop
or
setge
jmp
cli
scas
pop
decl
dec
or
add
adc
ret
pop
push
mov
idivb
push
cmp
inc
push
mov
jno
ret
mov
and
sub
mov
push
cmp
je
ret
cmpsl
int
mov
jne
test
loopne
test
into
shlb
lock
push
jp
and
imul
sub
add
ljmp
jne
movsb
xchg
add
jp
sbb
cmpsb
or
fidivs
xor
xchg
pop
mov
pcmpeqb
adc
lret
lods
jg
sub
fldl2t
pusha
cmpsb
add
adcb
js
xchg
dec
mov
mov
aad
lret
hlt
push
test
leave
dec
mov
sahf
je
ret
je
push
rcll
xor
jmp
bound
inc
xorl
dec
shll
out
pop
xchg
dec
cmp
add
push
push
xor
adc
pusha
lods
ret
cli
dec
push
cs
push
test
fcmovnu
cmp
es
aaa
adc
mov
sbb
repnz
or
add
lret
mov
and
loopne
movsl
rorl
pop
movsl
repnz
add
and
stc
shlb
fs
imul
xor
test
ror
adc
mov
pop
sbb
add
or
repz
sahf
ret
rcrb
push
pop
dec
rolb
jecxz
inc
lock
lods
mov
pusha
inc
pop
or
cli
js
movsb
shll
xchg
adc
add
addl
shlb
lret
aaa
jne
mov
xorl
inc
inc
mov
sbb
dec
sbb
shl
mov
les
lret
fimull
aas
and
call
data16
mov
adc
sbb
xchg
jno
push
js
insl
popf
mov
movb
aam
loopne
test
xchg
pushf
mov
flds
movsb
icebp
in
mov
cmpsl
mov
test
adcb
sbb
sbb
shlb
xchg
xchg
pop
js
nop
cmp
lret
scas
int
subb
inc
sub
icebp
test
and
pusha
rcrb
cmp
repnz
sbb
or
call
test
mov
sbb
lea
add
cmpb
inc
xor
es
cmpsb
fwait
mov
loop
mov
shrb
sbb
inc
or
scas
movsl
inc
add
add
and
sub
or
jb
mov
adc
ret
or
xor
and
sbbb
pop
cli
adc
push
xor
mov
dec
or
xor
jno
dec
sarb
mov
pop
inc
cltd
jbe
adc
mov
push
mov
mov
mov
or
inc
js
bound
mov
push
in
xor
adc
add
push
or
inc
pusha
in
xchg
add
jns
mov
cmp
enter
fldt
sbb
loope
pop
test
push
ljmp
push
sbb
inc
push
jecxz
add
inc
cmp
js
sub
adc
sub
mov
and
push
push
sub
xchg
jo
inc
jecxz
insb
sub
sahf
pop
and
and
rclb
lock
lds
jo
cmp
lret
loop
or
pop
xchg
packssdw
sbb
or
adcl
adc
xchg
cmp
les
sub
push
push
in
inc
dec
mov
mov
cli
test
popa
xchg
push
cmp
repnz
dec
ss
jp
inc
mov
push
add
or
dec
push
mov
inc
lods
loopne
ds
push
push
fmul
cmp
push
push
dec
push
aam
jo
jno
push
or
and
rcr
and
dec
inc
test
mov
xor
xchg
sahf
test
pop
mov
outsb
hlt
rcrb
mov
mov
mov
pushf
ror
inc
cwtl
test
ss
test
test
or
sub
cmpsl
and
roll
mov
xor
add
sbb
dec
xor
enter
cmp
in
push
ljmp
test
pop
cmp
ror
mov
dec
inc
inc
add
sbb
xchg
clc
rcr
rcl
or
rcr
mov
sbb
popf
sub
sub
push
sub
movsb
dec
jae
lcall
push
or
or
fcomps
lret
adc
sub
xor
js
adc
enter
andl
push
push
add
je
adc
xor
xchg
sbb
gs
mov
sbb
ret
push
lods
pop
loope
pop
cmp
add
xlat
and
repnz
mov
adc
mov
or
inc
inc
add
rcrb
pop
pop
add
arpl
xchg
mov
lods
push
sahf
mov
shrb
xchg
test
sub
fistpl
sub
xor
push
invd
lret
xor
rolb
jno
push
add
cmp
pop
adc
mov
pop
sub
test
adcb
dec
cmp
into
xor
xchg
lds
sbb
jb
je
jbe
push
outsl
or
or
or
xchg
mov
push
mov
push
add
pop
enter
out
sub
push
and
mov
sbb
add
lret
lods
ja
or
pop
popf
sub
or
cwtl
sbb
inc
fmuls
push
xchg
insb
mov
add
push
out
xchg
and
pop
ljmp
and
addl
or
fnstcw
popf
adcb
add
and
add
cmc
inc
shlb
dec
lods
movsl
js
push
push
xchg
push
sbb
out
hlt
mov
ljmp
mov
push
dec
je
inc
sub
push
roll
push
jp
icebp
inc
out
mov
std
dec
repnz
push
adc
sub
pop
add
adc
jmp
loope
sub
mov
shlb
and
rorl
lock
add
dec
adc
ljmp
dec
pop
mov
jecxz
mov
aaa
push
mov
call
or
mov
cmp
ret
ret
cmpsl
andl
rclb
stc
addr16
out
les
and
pop
lret
push
adc
iret
jns
cmp
mov
sbb
in
mov
inc
push
xchg
roll
pop
insl
sbbb
xchg
popa
sub
je
mov
and
xchg
jmp
movsl
add
mov
pop
jae
inc
or
test
dec
pop
movsb
clc
mov
add
iret
add
push
add
cwtl
lea
sub
mov
mov
sbb
sub
push
das
sbb
int
ja
icebp
outsl
daa
mov
mov
add
pop
xor
loope
mov
dec
adc
jmp
sub
mov
sub
adc
movsb
xchg
gs
adc
adc
shrb
add
clc
adc
das
daa
rorb
mov
idivb
roll
xchg
lret
mov
xor
push
and
in
fsubrs
jne
call
orb
sbb
andb
jns
and
xor
xorl
xchg
loopne
jmp
push
mov
push
data16
xor
je
mov
inc
mov
inc
cmp
nop
out
sarl
inc
adc
popf
scas
insb
sbb
flds
inc
mov
mov
jp
js
mov
adc
cmp
dec
call
loopne
sarb
sahf
test
sbb
push
rcr
rol
add
cli
add
fsubl
mov
icebp
fcomps
aam
or
adc
mov
loope
sbb
xor
dec
enter
mov
daa
mov
cmp
xor
gs
lods
xchg
mov
in
push
and
mov
add
sub
dec
outsl
sub
mov
add
test
xchg
pop
or
ret
cld
loop
in
sahf
inc
in
in
pop
lea
mov
sub
repz
mov
cmpb
push
jne
or
stos
lret
push
jecxz
in
into
repnz
add
fmull
add
mov
push
push
aam
or
inc
push
xchg
xchg
or
mov
lods
jns
mov
and
push
xchg
add
add
mov
fsubl
add
loope
sbb
shlb
jl
jle
std
fiadds
dec
dec
or
dec
ds
imul
jecxz
mov
pop
adc
xchg
xor
or
mov
les
test
dec
sub
cmp
inc
add
push
js
daa
lods
add
mov
push
add
out
dec
ljmp
inc
jecxz
test
and
xchg
orl
push
rol
adc
imul
test
xchg
dec
add
lods
pushf
cli
push
or
test
cmc
gs
cmpsb
pop
push
ljmp
jle
insl
into
jno
ret
rol
fdiv
mov
or
sub
jns
jp
or
subl
cs
mov
or
adc
sbb
cwtl
clc
mov
cmc
add
nop
sbb
inc
sti
push
cmpsl
lock
into
xor
add
add
and
arpl
pmuludq
mov
aas
xchg
mov
loopne
add
int
dec
push
cmp
add
jns
jmp
js
push
add
cmp
shl
loop
add
add
and
jle
dec
popa
sub
shrb
sbb
out
sbb
mov
test
adc
push
aam
ret
lahf
adc
cmp
adc
rorb
mov
mov
rorb
adc
mov
adcb
cmp
inc
mov
imul
or
dec
xor
daa
jl
inc
sub
jo
push
xor
lahf
adc
or
popa
add
xchg
loopne
mov
and
sub
add
into
aas
out
pop
push
mov
movsb
daa
out
xchg
xlat
fsubrl
push
js
xor
push
xlat
xchg
enter
sbb
push
out
roll
call
enter
inc
mov
inc
add
andl
adc
add
ljmp
scas
and
mov
mov
call
fmuls
adc
inc
lock
por
sti
mov
rcrl
enter
mov
push
jmp
inc
or
xchg
push
cmpsb
pop
shlb
dec
adc
mov
mov
push
push
data16
add
setae
rol
sbb
xor
enter
enter
add
xchg
mov
sub
pop
mov
or
mov
adc
jne
insl
sub
mov
fiadds
mov
xchg
adc
and
add
into
xchg
xorl
cmp
and
jnp
add
inc
pop
push
or
stc
cmp
and
jb
sbb
push
adc
icebp
test
lcall
rcl
push
cmpsb
jne
adc
pop
cli
mov
push
shr
jo
pusha
add
mov
into
mov
js
call
and
mov
loop
lret
adc
and
adcb
pminsw
out
pop
addr16
and
push
xor
cld
rorb
mov
push
push
xlat
push
dec
jp
dec
lods
sahf
mov
add
mov
dec
das
jae
test
or
sub
cmp
or
mov
sbb
hlt
or
ss
or
pop
or
cmp
pop
pusha
ret
adc
or
xchg
xchg
icebp
pop
xchg
cmp
leave
or
loope
pushf
pop
cld
aaa
jno
push
test
mov
daa
pusha
mov
and
sbb
testb
or
push
adc
test
push
push
pop
test
imul
shl
and
push
enter
cmp
das
jl
xchg
scas
adc
and
pop
or
adc
push
mov
test
pop
sbb
bound
outsb
add
mov
psllw
pop
dec
pop
fs
cmp
rorl
in
loope
dec
outsb
sbb
rolb
mov
pop
rorb
xchg
rorb
hlt
adc
mov
mov
inc
rclb
sub
mov
push
test
or
movsb
dec
mov
in
shr
push
inc
jge
loope
das
push
mov
and
adc
and
add
xor
add
test
or
in
dec
fsubs
clc
dec
mov
in
add
rorb
movsl
cmc
cli
add
or
cmp
push
clc
xor
cmp
jecxz
es
sti
rorl
add
adc
adc
dec
movsb
subl
stos
fs
sbb
and
sahf
fs
dec
insb
arpl
inc
cli
sub
lret
sub
xor
aam
or
insb
inc
sub
rcll
mov
ss
dec
jg
clc
pusha
cltd
clc
inc
push
jp
jmp
ret
xlat
and
xchg
mov
dec
or
or
push
add
mov
mov
hlt
push
scas
das
enter
xor
sbb
or
or
mov
rcrl
lock
pop
or
in
sarl
stos
adc
pusha
cmp
daa
loopne
pusha
repnz
fdivr
or
test
push
add
xchg
fldl
sbb
cmp
add
cld
inc
mov
xchg
xchg
jp
sbb
xor
dec
in
iret
loope
sub
fildl
adc
roll
add
sbb
add
mov
xchg
movl
fcoms
loop
add
or
xchg
movsl
rorl
add
sbb
popa
loop
adc
inc
fidivl
jns
in
and
inc
add
jp
lahf
dec
jl
mov
sbb
and
or
mov
add
push
cmpsb
xchg
popa
jo
fcomi
aam
push
add
sub
push
fwait
stc
cmp
mov
sub
and
out
loope
or
loopne
insb
aad
sbb
jp
pop
sub
push
je
popa
in
dec
dec
loope
jo
mov
sbb
xchg
adc
ret
std
adc
loopne
stos
mov
inc
sbb
bound
stc
and
mov
push
test
add
xor
cmpb
sbb
or
dec
icebp
add
lods
imul
lret
add
jno
popa
test
or
into
ret
lods
cmp
rcl
or
movsb
dec
imul
addr16
push
adc
sub
fs
or
add
testl
adc
test
pushf
imulb
push
mov
cmp
xchg
sarb
pusha
add
add
test
dec
push
sub
lea
addps
sbb
pop
jo
inc
das
inc
shrb
pushf
adc
into
aaa
clc
lods
movsb
and
sub
cmp
jb
lret
cmp
push
rcrb
int3
xlat
adc
or
add
xorb
push
sub
add
dec
cmp
lret
push
into
xchg
add
enter
dec
inc
inc
bound
add
in
xor
and
jno
rclb
lea
sbb
cmp
lock
leave
and
add
inc
mov
call
sub
inc
mov
add
or
lret
rol
in
inc
es
sub
fimull
cmp
js
mov
xchg
inc
sbb
jnp
mov
add
pushf
sub
enterw
push
pop
dec
test
pusha
sub
push
insb
stos
imul
stc
les
nop
push
and
lea
mov
lock
xor
insb
out
repnz
cli
sbb
or
push
sub
daa
and
inc
cmp
adc
mov
loopne
je
mov
sbb
fcmovb
insb
add
pushl
push
cmp
and
pushf
adc
sub
cltd
mov
xchg
or
pop
fcmovnbe
mov
push
xchg
pop
add
js
ret
push
sub
mov
jge
call
cmp
add
xor
out
pop
lea
push
lock
push
inc
or
cmp
popa
sub
test
movsl
sahf
lock
add
imulb
adc
jo
dec
add
adc
mov
add
rclb
jp
andb
push
mov
add
into
out
rorb
xchg
push
and
lock
sbb
mov
call
push
push
or
mov
mov
mov
adc
add
xor
outsl
orl
ret
dec
sub
push
xor
aam
addr16
mov
pop
out
mov
sbb
or
dec
xchg
sub
sub
xor
orb
insl
push
adc
add
xor
addr16
xor
inc
addb
xchg
push
into
cmp
dec
out
xor
mov
add
adc
mov
jmp
xor
pop
test
pop
inc
jmp
addr16
push
inc
or
mov
or
add
mov
int3
push
faddp
or
call
popf
loope
rcll
adc
push
xor
pop
pusha
pop
and
xchg
dec
pop
pop
js
cmc
cmpsb
sti
xchg
and
add
bound
fprem1
pop
jmp
dec
dec
scas
retw
mov
fistpl
or
repz
push
hlt
sbb
push
mov
int3
stos
sbbb
cmp
rol
popf
or
xlat
insb
ljmp
push
loop
xchg
add
jp
stos
cmp
movsl
test
dec
dec
test
dec
push
mov
popa
xor
pop
push
jp
adc
inc
fwait
rcrb
mov
loope
cmpsb
mov
push
pop
dec
addr16
push
push
in
andb
addr16
mov
arpl
push
pushf
repz
push
push
and
sub
xorw
jecxz
ret
shlb
outsw
add
rorl
ret
add
mov
data16
adc
sub
adc
add
arpl
mov
sti
out
or
and
add
push
mov
mov
add
jo
das
or
sbb
jmp
mov
ljmp
push
sub
add
push
mov
or
and
test
or
dec
sbb
pop
fsubl
add
xor
adc
or
mov
and
shlb
sahf
cmp
ret
in
sbb
xchg
xor
shr
cmp
jl
repz
add
enter
movsb
add
adc
sub
sub
pop
adc
mov
sbb
sub
inc
or
and
cmp
cmpsl
in
xor
test
add
push
mov
loopne
xor
xor
pop
push
inc
add
jnp
daa
adc
orb
scas
push
rolb
jb
pop
lcall
pop
adc
mov
mov
push
data16
jb
clc
popf
jb
gs
push
push
add
pop
xor
mov
das
sub
cmp
xchg
js
adc
mov
inc
movsb
or
mov
in
mov
addr16
jns
mov
or
adc
mov
and
das
loope
shll
rolb
fidivrl
or
rolb
sbb
sbb
inc
lods
mov
ljmp
add
rolb
test
icebp
fs
js
data16
test
addl
mov
add
lods
or
or
mov
es
lods
xchg
adc
daa
adc
nop
push
push
pushf
push
mov
sahf
shlb
das
sbb
pusha
push
add
js
mov
push
sbb
sub
hlt
pusha
push
or
stos
insb
pop
dec
jg
addb
mov
stos
adc
add
xchg
jl
rcrb
sub
mov
xchg
stc
lea
inc
bound
jmp
cmp
fstps
or
pop
inc
leave
push
pop
push
decb
lods
fs
int3
mov
xchg
cmpb
or
inc
cltd
ficoml
cwtl
or
mov
rorb
or
pop
push
push
popa
mov
cltd
mov
cmp
adcb
mov
arpl
lock
jmp
push
pop
fisubl
mov
pop
int
js
shrb
ror
lock
jge
xchg
std
mov
loope
xchg
or
rcr
mov
cmp
iret
dec
and
stc
pusha
sbb
mov
push
movsb
adc
ret
pushf
repz
shrb
scas
add
jo
dec
mov
sbb
xchg
aas
test
test
out
or
loopne
dec
sbb
dec
popf
and
dec
sbb
pop
ds
loop
cwtl
and
push
push
inc
mov
outsb
xlat
xchg
mov
pusha
stos
std
jae
mov
lock
sbb
sbb
sub
add
or
inc
add
jecxz
push
lret
dec
cmp
or
sarb
jl
add
loope
call
test
mov
cmp
and
outsl
aam
push
xchg
xor
cs
xchg
add
lock
nop
xor
cmp
lock
pop
rorb
or
es
push
hlt
shr
pushf
shlb
or
jg
push
sbb
sub
fisubrs
jns
push
sarb
pop
icebp
mov
rolb
sbb
clc
fimuls
add
lods
push
inc
jp
mov
or
mov
push
add
or
pop
mov
in
loopne
mov
call
dec
test
lahf
jo
inc
into
leave
fs
inc
mov
lods
push
push
mov
add
add
adcl
add
les
sub
push
lock
nop
rclb
cltd
mov
ret
xor
sbb
lock
in
mov
push
or
sbb
or
dec
sar
xor
add
lahf
adc
sub
jecxz
mov
sub
js
mov
jo
jne
xor
in
adc
js
mov
fwait
jbe
icebp
shlb
sbb
push
ja
repnz
mov
pushf
rclb
inc
pop
xor
jl
aam
dec
xchg
cmpsl
xorl
int
and
push
mov
xor
push
mov
stos
out
add
fadds
jns
fistps
and
jecxz
sub
push
imul
lret
dec
shlb
jmp
lods
inc
inc
sub
fwait
cmp
js
push
lods
jo
pop
scas
push
pop
xchg
andb
shl
out
enter
jo
cmp
loopne
cmp
inc
lret
dec
mov
sub
mov
inc
sbb
jl
mov
xchg
and
cmp
or
stos
push
add
into
test
mov
mov
js
les
out
out
sbb
cmp
adc
in
add
popa
mov
dec
sub
cmp
or
sbb
test
addb
or
iret
push
fcomps
pop
test
jp
mov
jb
xor
aad
xchg
rorl
ret
lea
push
dec
adc
push
rol
add
icebp
push
mov
fs
or
pop
sub
jo
adc
pop
adc
aam
sub
inc
scas
aam
mull
subb
lock
mov
inc
inc
testl
rorl
mov
and
or
sbb
xchg
rol
popf
lret
add
inc
loope
ror
in
pusha
test
sub
jo
adc
dec
mov
xor
xchg
xor
pop
jmp
lret
sbb
jle
andl
sbbb
cs
rcrb
cmp
pop
and
js
push
call
in
dec
or
test
mov
add
lock
sarl
cmp
dec
sar
clc
mov
push
leave
add
addl
popf
les
jge
dec
add
std
lock
push
das
inc
push
incb
aad
inc
jl
insl
je
push
add
xchg
lock
mov
aam
rcl
or
adc
sub
out
mov
adc
stos
push
pop
jns
into
sbb
ljmp
add
adcb
lock
inc
lods
insl
cld
xchg
adc
push
icebp
add
int
dec
js
sub
faddp
adc
sub
and
punpckhbw
in
decb
enter
mov
sbb
cmp
and
clc
aad
xor
nop
scas
es
mov
mov
jb
mov
loopne
push
gs
inc
lock
shr
cmc
sbb
loop
stc
shlb
adc
adc
xor
rcll
push
mov
sbb
popa
sbb
mov
dec
sub
sbb
add
sub
add
outsl
int
mov
mov
sbb
jo
dec
inc
push
cmp
nop
or
loopne
sub
nop
xor
jno
mov
jb
push
scas
mov
xor
sti
les
rcrl
xor
out
pusha
add
mov
jno
or
test
lods
pushf
test
mov
pop
inc
push
sbb
leave
pop
repnz
push
icebp
xchg
rcl
push
adc
lock
in
add
jmp
pop
stos
push
mov
push
mov
incl
adc
in
fnstcw
mov
jmp
test
pushl
sbb
cmp
jp
pop
fcompl
pop
xchg
mov
adc
and
push
icebp
int
pop
xchg
add
pop
cmovne
hlt
push
push
invd
add
stos
cs
sbb
ret
loope
inc
js
lods
and
rclb
mov
inc
sub
cs
ret
add
jne
mov
push
xchg
je
addb
push
add
pop
push
dec
movb
push
daa
push
xor
je
pop
add
in
or
sbb
js
out
adc
ret
dec
sub
pop
ljmp
add
pop
int3
xor
pop
loopne
cwtl
add
sbb
sbb
rolb
mov
sti
movaps
movsl
rorl
or
xor
or
jl
xchg
adc
aam
mov
xor
adc
decb
leave
cmp
loop
adc
xchg
mov
out
test
dec
rol
mov
lcall
test
stc
cmp
stos
push
andb
test
sub
push
loop
sbb
inc
sub
inc
mov
iret
cmp
or
lods
inc
adcl
dec
fistps
adcb
mov
dec
stc
add
cmpsl
mov
sahf
test
xchg
stos
jl
xor
test
jns
push
es
add
xor
scas
mov
xchg
sbb
or
adc
mov
or
andl
sub
xchg
xchg
in
loope
jge
aam
xor
int3
sbb
int3
push
xchg
repnz
fs
arpl
xor
sarb
sti
rorb
stc
push
fdivs
movsb
mov
mov
mov
movsl
cmp
xchg
cmpl
push
xchg
clc
aaa
lods
dec
xchg
push
add
inc
cmp
xorl
jns
cwtl
fld
mov
mov
adc
js
add
mov
mov
sbb
add
sbb
xor
mov
or
dec
adc
ret
fs
repz
lock
mov
xor
dec
arpl
adc
cwtl
add
sahf
add
shlb
mov
rorb
rcrb
lock
inc
xlat
adc
push
sbb
xor
nop
mov
pop
and
or
cmp
jae
and
in
pop
fiaddl
add
mov
fisttpll
data16
xor
pop
push
cltd
pusha
fwait
repnz
movsb
cltd
call
pusha
fmul
sub
dec
mov
sbb
pusha
addr16
popf
inc
aad
mov
pop
add
mov
imul
adc
mov
mov
dec
scas
scas
cwtl
sub
xchg
mov
insl
add
jb
test
mov
sbb
fsubrs
xor
lock
cmp
push
jo
das
ljmp
mov
nop
mul
push
mov
cmp
enter
or
lods
sub
jp
test
push
sbb
andb
pop
cmp
in
rorb
sub
movb
js
mov
mov
mov
stos
in
add
adc
pop
add
push
daa
mov
call
ret
repnz
das
or
sub
pop
push
sarb
out
adc
or
push
add
sbb
push
test
pop
and
repnz
mov
popf
mov
arpl
add
adc
fistpll
dec
lock
mov
inc
cmp
mov
outsb
inc
dec
fiadds
imul
xlat
or
popa
imul
xchg
call
int3
mov
mov
sbb
ljmp
xor
sub
push
sbb
pop
jp
push
clc
and
fiadds
sub
aam
mov
dec
dec
mov
dec
imull
or
jmp
adc
enter
xor
ret
loopne
stos
mov
xchg
mov
or
lods
mov
ror
loope
adc
rcrb
fimull
ds
ss
add
movsb
enter
jle
out
mov
int3
sbb
mov
jp
scas
lods
sbb
sbb
leave
sub
xchg
adc
sbb
lock
pop
cs
mov
adc
rclb
mov
addb
and
out
adcb
shrb
push
rcrl
aas
movsl
add
push
inc
mov
pop
aam
add
test
shlb
in
clc
dec
shl
test
jp
and
imul
or
adc
xchg
arpl
add
lret
aad
mov
test
ds
js
icebp
nop
movsb
pop
inc
adc
adc
test
in
sbb
mov
seto
or
sahf
into
pop
test
mov
ljmp
push
loop
pushf
inc
es
xchg
mov
dec
add
add
pop
xor
pop
movsb
pusha
jecxz
mov
mov
xchg
smsw
jno
cli
stos
mov
mov
push
fiaddl
push
pop
xchg
xor
test
xor
hlt
sub
sbb
adcl
and
or
aas
lock
or
mov
les
and
and
in
mov
test
push
es
hlt
icebp
jge
push
cmp
mov
loopne
stos
arpl
jge
inc
andb
or
pushf
dec
and
movsl
or
inc
or
ret
or
xchg
scas
push
mov
andb
insb
jmp
sub
adc
loopne
enter
aam
pushf
clc
out
sbb
or
shlb
cmp
mov
or
xchg
push
ljmp
adc
cmp
mov
cmp
test
dec
imul
add
stos
enter
sbb
loope
push
or
add
lea
pop
xor
add
fists
dec
cmp
lret
pop
es
push
push
adcb
xchg
mov
xchg
je
jmp
push
and
aam
popf
dec
or
jo
or
inc
jns
in
testl
jb
adc
dec
cs
jo
cltd
and
ret
ret
xor
inc
mov
push
pop
ljmp
jecxz
pusha
pop
movsb
push
and
mov
mov
test
shrb
iret
lods
adc
adc
dec
roll
push
push
int3
mov
xor
inc
sysret
add
xchg
add
fdivrs
add
mov
loope
ret
dec
js
rcl
push
jmp
adc
call
and
mov
push
pop
rolb
xor
xor
add
mov
imul
dec
adc
cmp
and
outsl
inc
dec
rolb
ljmp
repz
add
xchg
add
sbb
mov
xor
shlb
mov
mov
add
cmp
fs
add
into
jl
rorb
jge
mov
sub
jne
jae
pusha
fistps
mov
rcl
rcll
xchg
gs
or
idivl
rorb
inc
decl
icebp
dec
xchg
push
cmp
lock
mov
in
jns
fisubl
or
add
test
mov
orl
popf
ficoms
jo
in
repz
pushf
inc
pop
rcrl
dec
mov
pusha
xchg
xor
xor
or
push
xor
cs
xchg
adc
in
or
mov
adc
mull
sub
cltd
hlt
xor
pop
mov
enter
adc
and
popf
pop
pop
or
lea
mov
fsubl
dec
notl
push
or
or
fadd
push
sub
enter
mov
sahf
dec
ljmp
into
dec
adc
mov
cmp
adc
cmp
test
pop
cmpsb
and
sbb
jge
add
in
stos
cwtl
js
sub
push
das
adc
xchg
cmp
inc
inc
iret
in
jecxz
xor
fiaddl
dec
fwait
into
js
shll
arpl
cmp
inc
push
sbb
sub
xchg
hlt
cld
sbb
xchg
or
add
cmp
out
sbb
xor
push
out
add
sub
and
add
dec
movsb
bnd
jno
cmp
nop
sub
out
push
mov
xchg
es
sub
or
cmpsb
adc
sbb
xlat
adc
bound
lahf
in
push
pop
jo
dec
pop
daa
or
popa
sbb
test
pop
lahf
sub
adc
xchg
add
test
or
cmp
mov
imul
adc
sub
aam
push
xor
jl
inc
jp
mov
fcoml
lds
sbb
shr
lock
add
roll
and
or
sahf
xor
sbb
xchg
push
jae
ljmp
orb
mov
push
movhlps
in
popf
test
dec
sbb
imul
mov
in
aaa
cmpsb
xchg
push
ret
mov
push
cltd
addb
xor
lret
imul
push
nop
adc
das
cwtl
xchg
dec
push
cpuid
dec
mov
stos
gs
aam
lock
gs
jo
push
jg
add
add
mov
jecxz
mov
jp
inc
imul
and
push
ret
cmp
cmp
fisubl
pop
or
adc
test
roll
or
shrb
pop
cli
shlb
add
dec
and
add
rorb
or
addl
test
or
adc
iret
bnd
jmp
add
out
lahf
pusha
add
shlb
inc
in
rcrb
mov
mov
push
or
cmp
sbb
addr16
mov
sub
push
ljmp
cmpl
daa
pop
mov
lds
add
pop
sbb
ljmp
or
pop
and
jge
outsl
fisubl
lock
mov
push
mov
add
movsl
push
pop
cmpsl
mov
mov
fcompl
and
dec
imul
ljmp
test
les
mov
ljmp
in
test
push
sub
mov
xchg
roll
inc
addb
rcrb
push
dec
out
test
aam
popa
or
cmp
adc
or
mov
or
sbb
addb
enter
test
repnz
bound
ss
and
cmp
enter
add
std
pop
sub
aaa
mov
or
xchg
xchg
mov
adcb
test
pop
mov
adc
ret
mov
lret
fmul
xorl
sub
mov
xor
rolb
ljmp
push
adc
inc
cmp
loope
push
pop
dec
rcr
out
sbb
and
push
add
jbe
fnstenv
idiv
sbb
mov
or
mov
fdivl
and
push
ss
mov
clc
adc
enter
ds
and
sbb
dec
ficomps
pop
testl
pop
pop
inc
pop
leave
leave
add
icebp
inc
or
lcall
or
push
sbb
in
je
mov
inc
add
iret
mov
addl
add
cmpsl
les
ds
lret
add
rcll
imul
or
shrb
cmp
jge
pop
mov
dec
aas
gs
shll
enter
sbbb
mov
das
or
ficompl
jo
js
adc
out
adc
jb
mov
sbb
push
or
mov
sbb
jp
repz
mov
test
hlt
movsb
add
call
xor
adc
sbb
mov
pop
lret
mov
cmove
fs
lods
add
push
jbe
pop
add
push
cmp
jp
push
sbb
dec
addb
dec
inc
dec
pop
or
lds
add
add
xchg
add
insb
cwtl
and
and
push
outsl
pop
pop
xchg
shlb
pop
hlt
int
dec
xorb
je
push
lods
into
or
push
add
mov
or
push
sbb
sub
cmp
std
inc
pop
push
and
or
inc
mov
add
outsl
loope
addr16
add
das
outsb
add
leave
add
mov
gs
sbb
test
enter
xchg
cli
push
cmp
loopne
daa
pop
cmpsb
mov
pop
and
pop
sbb
mov
add
sarl
ljmp
cmp
scas
inc
pop
mov
fstpt
and
dec
mov
push
push
push
inc
ljmp
in
xor
and
mov
les
sahf
xchg
sub
lock
xchg
mov
jbe
lea
push
cwtl
add
psubb
sbb
inc
adc
xor
cmp
mov
and
jbe
push
loopne
cmp
hlt
and
shlb
imul
xchg
andb
nop/reserved
add
int
or
or
outsl
adc
mov
lret
lods
jle
mov
sar
push
sub
imul
mov
pop
sbb
fwait
or
addl
or
jno
lret
dec
daa
cmp
leave
or
pusha
cmp
test
pop
stos
mov
adc
xchg
mov
mov
ret
call
call
or
xchg
cmc
lods
loopne
xor
sub
sbbl
or
pusha
adc
pop
icebp
jp
je
adc
add
js
notb
test
mov
xchg
and
bound
in
mov
pusha
adc
shll
das
hlt
mov
xchg
pop
inc
ret
jmp
loope
adc
xor
push
pop
jecxz
xchg
dec
pop
sbb
shlb
push
jle
mov
shlb
js
add
test
sahf
pop
cwtl
or
dec
cltd
sbb
mov
bnd
inc
sbb
outsl
pop
mov
clc
jp
aad
cmp
fldenv
sbb
sub
aad
mov
std
add
loopne
in
add
xchg
adc
adc
mov
add
adc
or
rclb
cmp
mov
loop
sbb
sub
inc
push
ret
mov
push
push
mov
rolb
mov
adc
ret
rol
and
pusha
add
mov
std
pop
mov
dec
jmp
lret
shl
inc
mov
xlat
or
sbb
repnz
push
inc
push
xor
or
mov
mov
mov
push
sbb
enter
data16
push
lock
repnz
sbb
daa
push
or
pop
mov
fidivs
bnd
push
push
xor
push
inc
adcl
out
mov
sahf
sbb
pop
leave
jo
xchg
push
inc
bound
imul
dec
repz
jmp
xor
sbb
dec
rcrb
sbb
scas
pop
or
jb
xor
into
mov
das
stos
call
cld
dec
scas
inc
cltd
lock
push
mov
test
clc
mov
shrb
addb
ret
lret
mov
ret
sbb
jg
sub
adc
iret
lods
mov
push
insl
adc
push
adc
xchg
call
sub
out
jge
movsl
addr16
enter
jo
push
sbb
inc
mov
or
ljmp
add
pop
pop
sbb
lret
add
lods
in
pop
lea
popf
hlt
mov
and
and
test
and
push
mov
mov
test
xchg
push
xor
bndldx
add
lea
faddp
or
dec
sbb
mov
mov
leave
rcl
xchg
dec
push
xchg
cs
inc
retw
adc
addb
jno
add
xlat
or
inc
sbb
je
imul
push
in
test
xchg
or
xchg
pop
mov
mov
xchg
mov
clc
add
push
inc
inc
xlat
adc
jp
xchg
enter
cmpsb
scas
rcl
aad
xchg
aaa
lods
mov
push
push
adc
mov
js
divl
out
into
xor
cmc
and
pop
add
sbb
sub
lods
fisubrl
popa
adc
mov
ret
mov
add
add
fdivrl
xor
scas
push
rcll
gs
arpl
hlt
add
mov
and
lods
push
nop
xchg
nop
push
stos
sbb
mov
mov
shl
adc
mov
cmp
add
and
mov
add
sub
pusha
push
lods
into
lcall
ret
lret
mov
pop
fs
xchg
mov
sbb
push
popa
and
lret
or
in
mov
dec
add
dec
sbb
loopne
orb
jmp
fcmovbe
inc
xlat
mov
shl
and
fidivrs
push
rolb
or
dec
bnd
mov
push
stos
pop
pusha
insb
or
cmp
jno
sbb
pop
rorb
xchg
sbb
adc
sbb
dec
fadds
arpl
sub
jbe
ficoms
ljmp
lea
xlat
sbb
push
icebp
test
pop
adc
cs
in
bound
mov
sbb
je
sahf
adc
psubd
js
or
xchg
jne
lret
lcall
mov
sub
loopne
xchg
ret
mov
test
lods
scas
movb
xor
lock
je
fiaddl
daa
adc
xchg
fxch
add
leave
adc
mov
rcl
mov
sub
js
adc
xchg
dec
sub
sub
dec
cmovnp
decb
pop
mov
mov
movsl
or
push
xor
xchg
push
lcall
add
js
popf
xchg
mov
push
hlt
aam
shrb
cs
lods
arpl
adc
repnz
scas
test
pop
call
ret
lods
into
dec
shlb
jno
inc
and
push
add
inc
push
jne
push
packsswb
xchg
cltd
xchg
dec
daa
dec
pop
das
jmp
adc
insb
loopne
ret
rolb
mov
dec
cmpb
lods
add
dec
xor
into
and
xor
loope
leave
xchg
nop
xchg
cmp
popl
dec
add
imul
inc
jno
push
das
dec
or
mov
fisubrl
sbb
push
xchg
sbb
xchg
and
jns
xor
test
nop
into
call
mov
test
or
xorl
pop
stc
mov
inc
or
lds
adc
push
loopne
inc
sahf
divb
cmp
rclb
fists
loop
call
cmpsl
push
push
adc
cmp
xor
xchg
fucomip
lock
or
hlt
fisubl
and
mov
mov
es
test
xchg
mov
push
sbb
add
xchg
and
popa
mov
cltd
or
cmpsb
das
pushl
jp
inc
inc
inc
mov
aam
dec
add
inc
or
dec
lret
and
ret
repz
shr
dec
mov
and
adc
sub
mov
xchg
das
pop
imul
cmp
testl
add
inc
loop
loope
push
and
sbb
lcall
cmp
or
sub
test
add
and
repnz
sub
jmp
pop
sbb
add
sbb
jle
shlb
mov
sarb
and
adc
jo
add
rolb
dec
adc
sti
jmp
je
push
jo
jecxz
sbb
adc
cltd
push
sub
push
xor
nop
cmpb
add
cli
xchg
lock
dec
jb
movlps
push
aad
aam
sbb
push
mov
test
add
sub
pop
leave
loope
lret
inc
push
mov
jne
rolb
adc
pop
mov
ret
pop
xchg
adc
add
scas
cmc
mov
dec
mov
lret
adc
cmpsl
in
lock
pop
imul
scas
adc
jle
test
rolb
pop
adc
push
push
ret
aam
sbb
arpl
cmp
adcb
in
gs
insb
mov
or
imul
dec
adc
jbe
rorb
outsb
out
push
mov
pop
rol
push
sub
gs
int3
add
loop
push
pop
icebp
repnz
pop
and
push
push
push
incb
dec
rorl
dec
inc
test
add
pusha
out
dec
in
dec
jp
push
pushf
shl
inc
or
cmp
jp
xchg
adc
xchg
and
andb
call
sbb
sub
mov
sbb
or
test
ret
xchg
adc
push
rclb
or
fs
sbb
jae
inc
add
adc
es
cmp
les
mulb
and
sbb
xor
or
sbb
inc
or
call
js
in
scas
or
push
xchg
xchg
jo
fs
mov
cld
inc
sub
lods
lods
inc
aad
les
mov
add
cmpsl
daa
cmpsb
jp
div
add
shll
push
outsl
push
dec
ljmp
stos
jae
clc
add
jmp
add
push
mov
push
and
in
cs
sbb
or
jo
jp
fimull
mov
add
in
pop
push
out
push
mov
cli
sub
inc
fsts
adc
adc
in
lods
popa
or
fwait
je
lret
dec
shl
aaa
pop
push
xor
push
or
xor
dec
lea
jecxz
mov
jno
pushf
push
inc
inc
test
sbb
push
xchg
jns
cmp
xchg
adc
mov
mov
adc
es
aam
pop
fucomip
insb
xchg
rolb
inc
mulb
ljmp
loope
sbb
rol
jmp
scas
push
xor
das
dec
fidivl
cmc
mov
lcall
ljmp
cmp
cmp
ss
pop
fldl
adcb
sbb
inc
sbb
mov
lahf
imul
push
imul
fs
push
les
shlb
xor
gs
cmp
xor
pop
and
mov
fs
cmpsb
dec
and
scas
testb
inc
adc
mov
fcmovu
jns
pop
push
add
sahf
in
aam
imul
clc
rclb
rolb
frstor
mov
fstps
shl
movb
inc
mov
pop
push
out
jp
and
adc
ret
mov
inc
pop
iret
fidivrl
movsb
mov
add
push
adc
mov
and
popl
and
dec
out
sbb
outsb
sub
xchg
xchg
icebp
push
cmpl
stos
out
enter
test
jge
sbb
and
or
push
add
rclb
shlb
mov
or
pusha
and
popa
mov
mov
rolb
cmpsb
fstpl
inc
mov
testl
lock
pause
fs
sub
adc
or
mov
out
iret
call
repnz
pushf
lods
inc
sbb
rcl
rcrl
cmp
xlat
cmc
pop
sbb
mov
cwtl
push
sub
insb
adc
push
and
lret
or
ret
leave
mov
sbb
mov
movsl
cmp
mov
loope
inc
test
rorb
lahf
repz
add
divb
test
pop
mov
ss
daa
jecxz
mov
xor
insb
or
add
dec
push
cmp
pop
fcoms
je
jl
push
sbb
rolb
stc
or
loop
add
pushf
test
mov
adc
xchg
xchg
add
adc
mov
push
mov
test
and
xchg
dec
pusha
add
add
add
push
ret
ret
andb
push
jbe
popa
push
loop
loop
mov
in
dec
or
imul
mov
or
xchg
cmp
test
sbb
cwtl
sbb
jne
push
mov
rorb
cltd
adc
mov
or
pop
inc
lods
sbb
jecxz
js
or
jecxz
and
sti
dec
call
and
xor
shlb
sbb
mov
adc
sbb
out
mov
adcb
mov
rorl
jp
sbb
test
add
mov
pop
xchg
orb
dec
xchg
xor
xlat
adc
sbb
pusha
test
cmc
or
push
cs
mov
adc
in
js
sbb
adc
adc
sbb
aad
sbb
loopne
adcb
adc
cmc
mov
jle
imul
sub
int3
ljmp
xchg
std
jne
sub
dec
rclb
jne
inc
loopne
ss
hlt
adc
outsl
scas
jb
jp
push
mov
pop
fnstcw
faddl
sbb
pop
sub
and
xchg
test
mov
or
aas
ds
ljmp
or
sub
sbbl
rorb
cmp
rcll
xor
xor
and
sbb
int
xor
and
jbe
xchg
out
loopne
inc
or
add
aas
dec
inc
push
fnsetpm(287
test
cmp
adc
popa
hlt
daa
jbe
test
dec
xchg
adc
xchg
mov
pop
jbe
and
test
mov
negl
xchg
inc
lahf
xchg
outsb
cmpl
inc
movb
mov
cld
prefetcht1
dec
inc
test
fildll
out
or
pop
test
or
add
mov
xor
clc
cmp
sub
ret
mov
and
sbb
dec
ljmp
add
push
insb
add
mov
hlt
push
in
inc
or
push
out
cmp
or
sbb
ret
je
and
cmp
or
jbe
push
cmpsl
jp
inc
add
adc
lock
movb
pushf
lret
dec
lock
sub
pop
sbb
cmp
jb
in
xor
sub
aaa
dec
push
pop
mov
movb
shlb
mov
adc
loopne
notb
xor
arpl
mov
inc
sbb
adc
lds
mov
add
dec
mov
cmpsl
es
enter
mov
aaa
sub
nop
sbb
les
sbb
je
les
sbb
fwait
mov
add
mov
inc
adc
pop
rcrb
sub
jle
pop
pop
inc
lcall
mov
jns
cmp
cmp
push
mov
loope
aad
mov
inc
jmp
pop
add
or
lock
mov
adc
push
lock
lods
xor
adc
dec
mov
inc
shlb
xor
jno
sbb
mov
inc
and
and
cli
and
pop
sbb
int3
ret
xor
movsl
xchg
pop
xor
pushf
mov
dec
pop
addb
inc
pop
test
jb
sbb
rclb
pusha
popf
inc
roll
xor
je
js
dec
or
clc
or
mov
mov
inc
or
loopne
ljmp
xor
in
les
xor
ret
into
push
inc
dec
sbb
loopne
inc
into
adc
jnp
pop
push
mov
sahf
add
nop
pop
xorb
xchg
xor
test
inc
jge
les
js
outsl
inc
pop
adc
or
gs
push
popa
mov
aas
cmp
lds
ja
out
xchg
sub
and
lods
add
dec
inc
mov
xchg
push
or
push
in
jo
loopne
aam
and
cmc
xchg
or
fs
jno
mov
aam
add
xchg
cmp
shrd
test
mov
mov
push
pop
scas
movsl
sbb
push
dec
js
sub
push
push
pop
push
test
inc
clc
adc
call
sbb
or
das
inc
lock
je
and
xchg
xchg
and
add
jae
loope
loop
xchg
add
add
call
xor
mov
jge
arpl
pop
addr16
push
std
cmp
sub
mov
dec
xchg
xchg
cmc
push
subb
mov
xchg
daa
jmp
sub
dec
stos
cmp
jmp
adc
inc
es
xchg
jo
mov
mov
movb
pusha
addr16
movl
or
sub
jb
fs
insl
fwait
sbb
jnp
mov
sbb
arpl
dec
add
arpl
shr
push
sbb
outsl
gs
add
sbbl
cmp
movsb
enter
add
add
adc
push
xor
loopne
adcb
inc
in
sahf
or
push
xor
xor
add
push
arpl
xor
xor
add
cmpsb
lock
dec
pusha
les
push
rolb
aaa
fwait
xlat
leave
xlat
or
sbb
push
push
std
lret
mov
in
or
cmp
push
xchg
cltd
jmp
jp
xor
mov
data16
push
mov
arpl
fwait
inc
mov
jae
and
xor
scas
addb
lea
sbb
jp
fiaddl
add
aam
push
ss
dec
imul
es
rcll
xor
add
mov
clc
xor
mov
and
and
or
rorb
mov
add
xor
xchg
cli
mov
xor
mov
sbb
push
xlat
pop
adc
shll
rorl
jo,pn
adc
lret
hlt
outsb
mov
jae
jo
xchg
rol
and
enter
lea
pop
fcomps
or
shll
shll
ss
xor
mov
fldl
lods
mov
add
and
xor
adc
inc
sbb
cli
lea
pop
mov
int3
inc
pop
push
jo
icebp
and
adcb
xchg
jne
or
add
ds
lock
aam
bswap
addb
lret
mov
mov
andl
adc
sub
inc
sub
dec
das
or
ljmp
inc
movb
mov
push
mov
insl
adc
fsts
cmpl
push
stos
cld
rclb
out
mov
in
push
and
fistpll
and
dec
in
pop
shl
popa
insl
mov
pop
dec
and
dec
push
push
inc
mov
mov
test
dec
lret
sub
push
lar
push
les
cmp
sub
cmp
sbb
pop
jle
mov
scas
inc
jb
add
jge
fnstenv
push
xchg
xchg
inc
and
in
mov
push
mov
pusha
cmp
inc
mov
push
call
add
dec
in
xchg
adc
adc
sbb
push
ljmp
ret
outsl
and
inc
sub
lods
insb
cmp
loope
jecxz
neg
pusha
and
inc
xchg
aam
add
pop
add
pop
lea
mov
push
mov
jge
inc
sbb
or
cmp
xor
mov
sbb
inc
data16
scas
xchg
je
xchg
push
pop
pop
jnp
test
push
dec
or
pop
jo
out
sahf
rcll
sbbb
leave
loope
movsb
mov
xchg
jno
or
push
mov
pushf
roll
arpl
cwtl
mov
lods
in
js
cli
jnp
out
mov
jo
sbb
pusha
jae
std
ror
dec
or
fiaddl
aam
std
leave
lret
insb
jmp
xchg
insb
sub
mov
mov
xlat
imulb
mov
adc
rolb
sub
outsl
pop
or
xchg
sbb
gs
popa
xor
add
sbb
xor
inc
repnz
lods
or
add
and
loope
stc
inc
out
xchg
mov
xchg
out
add
inc
test
push
sbb
dec
jbe
jb
and
push
cmpsl
adc
add
xor
cmp
andl
mul
enter
pop
pop
lock
addr16
das
adc
shll
imul
daa
fcoml
xchg
sbb
rolb
adc
mov
insb
fimuls
mov
xchg
add
push
lret
popa
sbb
outsb
roll
orl
sbb
and
dec
loope
push
es
das
loopne
inc
xchg
add
add
out
fstpt
jb
jl
adc
and
pop
push
add
push
xchg
xor
and
cmp
loopne
nop
mov
sbb
loope
pop
dec
xchg
xor
xchg
xor
das
sarl
leave
cmp
or
pop
dec
dec
data16
add
xor
push
inc
inc
push
jecxz
sbb
test
sub
addb
add
mov
dec
adc
test
xchg
nop
mov
push
adc
sbb
pop
cli
lret
xchg
pop
add
leave
gs
adc
icebp
cmp
adc
jbe
sub
mov
jge
aas
adc
xchg
fisttpl
dec
loope
loope
and
lret
adc
mov
jo
add
push
push
pusha
pop
sbb
xor
scas
cwtl
rcl
pop
loop
or
mov
roll
push
mov
ds
cmpsl
add
je
xor
gs
fisubrs
jo
xchg
jae
push
cmp
xor
add
mov
fs
mov
inc
sbb
xchg
into
cmpsb
pop
sbb
pop
bndstx
clc
push
test
rolb
pusha
xchg
cmp
add
lds
incl
jl
jl
lods
lahf
hlt
pop
cmp
add
xor
add
daa
cmc
mov
fsubrl
rclb
mov
dec
pushf
sub
loopne
xor
xchg
push
xchg
rolb
lcall
out
sub
cmc
mov
dec
and
sub
cmp
add
push
ljmp
cmp
roll
inc
pop
cmp
pop
or
mov
fs
sbb
xchg
rcrb
add
cmp
xchg
add
push
and
jo
je
imul
add
push
shlb
xor
push
push
rcrb
jno
add
cmp
and
add
xor
xchg
or
mov
push
pop
out
cwtl
lods
rolb
add
mov
hlt
mov
mov
sub
push
inc
leave
mov
cmp
cwtl
push
loop
cmp
pextrw
or
sub
xlat
cld
add
xor
loop
dec
int3
mov
cs
xor
push
add
and
mov
add
popf
pop
mov
loopne
lret
outsl
add
inc
mov
sbb
nop
add
sbb
sbb
movsb
ds
dec
or
imul
cmp
add
xor
std
leave
enter
add
mov
icebp
lds
cmp
push
xchg
jne
pop
dec
sbb
cmp
lock
pop
or
je
mov
pop
pop
ja
dec
jl
mov
rcrl
jp
push
jb
sbb
and
lcall
icebp
add
mov
add
adc
js
sbb
pop
pop
sbb
dec
in
jmp
stos
inc
lcall
mov
pop
cmp
or
add
fwait
push
aam
mov
mov
adcl
sub
add
adc
insb
add
fisttps
adc
or
mov
nopl
jmp
or
aad
stos
rorb
sbb
mov
clc
add
xadd
and
push
mov
rclb
fimull
sarb
mov
sbb
cmp
sti
repnz
addl
xchg
insb
enter
push
lea
push
aam
loope
daa
mov
push
inc
idivb
mov
jb
shl
ret
jo
adc
sbb
bound
jl
loop
push
lds
add
push
rclb
pop
movsb
xchg
xchg
rclb
inc
outsb
clc
pusha
add
pop
or
push
lock
daa
icebp
mov
ret
or
adc
cwtl
in
mov
dec
pop
mov
test
mov
ficomps
jp
imul
push
cmpsb
mov
lea
fsubl
bound
add
arpl
sub
aad
mov
adc
push
loope
cld
lods
loope
lea
loope
mov
xor
nop
je
inc
pop
into
adc
fisttpl
pusha
push
xchg
ds
jl
xchg
sbb
mov
xchg
test
ds
rolb
push
push
clc
push
notl
mov
ss
add
jecxz
or
adc
mov
mov
jb
rolb
mov
fldenv
aad
xchg
jo
inc
fsubr
push
or
adc
cltd
adc
or
push
ret
push
iret
xor
pop
testb
cmpl
subl
loopne
repnz
loopne
mov
js
pop
and
and
pop
dec
add
xchg
pop
cmp
xchg
adc
sbb
pop
mov
inc
mov
add
pusha
inc
int3
jo
leave
imul
les
push
xor
test
sbb
push
mov
shll
ror
pop
push
sub
in
jns
pop
cmp
sub
mov
adc
push
push
pop
xor
sbb
cmp
arpl
pop
mov
xchg
or
mov
xor
inc
rolb
ds
flds
cmp
subl
xchg
loop
add
fs
or
call
mov
jmp
jno
cwtl
xor
les
mov
and
pop
mov
js
sub
sahf
lret
js
aaa
xchg
js
push
sarb
enter
lds
pushf
mov
gs
or
mov
insl
jo
push
jb
pop
inc
fs
cmp
dec
cmp
mov
mov
pop
mov
jl
mov
dec
cmp
clc
mov
xchg
rol
incl
mov
xchg
loope
mov
push
pushf
xchg
mov
fidivs
mov
and
mov
fmuls
stos
sbb
js
pop
fst
sahf
andb
add
and
or
mov
sub
lock
push
std
cmp
rol
rorb
mov
mov
test
inc
and
mov
cmpsb
inc
push
addb
adc
push
pop
rcrb
lods
popf
sbb
adc
loope
lret
js
int
int
mov
inc
mov
ds
imul
mov
sbb
or
test
je
bound
fsub
mov
faddl
or
push
cmp
dec
rol
mov
pusha
jo
and
out
push
sub
iret
ror
mov
icebp
and
and
cmc
lea
lea
adc
fs
popf
sahf
push
pushf
sbb
jp
mov
adc
leave
shr
push
inc
mov
ljmp
popa
pop
dec
bound
add
subl
xchg
stos
xor
sub
add
and
jmp
sbb
and
and
xor
inc
int3
cli
dec
mov
mov
cmp
mov
add
and
push
sbb
dec
xchg
sbb
js
lock
jbe
outsb
pop
fistpl
mov
inc
bound
push
bound
push
pop
mov
mov
push
ret
movsl
mov
and
add
adc
and
or
lds
and
push
jns
fchs
aaa
mov
add
and
mov
sahf
and
movsl
push
adcb
imul
sub
push
scas
sub
sbb
out
shlb
inc
and
cmp
inc
push
mov
out
rolb
dec
adc
cmp
shll
xchg
sub
xchg
jne
ret
lea
mov
adc
subb
sbb
jnp
adc
cltd
sbb
inc
faddl
mov
pop
mov
or
and
jbe
fdivr
and
sahf
and
inc
dec
mov
cmp
or
add
mov
movsb
sub
mov
repnz
aam
xchg
cwtl
mul
inc
popf
mov
xor
pop
add
add
iret
out
pushf
rcl
pushf
xchg
test
hlt
shlb
or
loope
mov
push
jne
inc
xor
pop
inc
cmpsb
add
jmp
aaa
andb
stos
mov
daa
cmp
xchg
lock
or
fld1
stos
leave
cmc
ret
and
lret
pop
cltd
mov
push
js
sub
mov
in
adc
jno
cmp
push
sbb
inc
outsb
cmp
add
dec
inc
push
mov
pushf
enter
shlb
jmp
push
adcl
inc
xabort
mov
cmpl
add
inc
sub
not
clc
adc
icebp
dec
rorl
lea
xchg
or
les
xor
es
clc
movsb
adc
js
sbb
outsl
pop
mov
add
add
add
sbb
adc
fimuls
int
mov
cli
outsb
nop
enter
push
cs
loopne
aam
das
xchg
inc
dec
dec
adc
fcoms
add
jns
push
imul
push
cmovs
popf
mov
or
fs
adc
cmpsl
stos
fstpt
push
les
and
adc
cmc
and
add
insb
pusha
push
push
mov
rorb
cmp
scas
out
clc
mov
fcoml
and
insb
lea
cltd
add
fidivrs
sub
sarb
pop
arpl
adc
pop
dec
add
push
imul
fiadds
pop
jbe
je
fbld
push
add
shrb
mov
loop
sbb
or
enter
xchg
ret
add
push
add
sub
test
ret
push
pop
leave
and
xor
aaa
and
loopne
cmp
imul
pop
adc
nop
push
pusha
push
xor
sbb
pop
xchg
sbb
jnp
xor
pop
push
shrb
shlb
ljmp
sub
rcrb
or
push
cli
dec
andb
push
mov
mov
push
ret
dec
subb
nop
sub
or
dec
inc
inc
mov
daa
add
push
pop
mov
and
xchg
adc
xchg
pusha
je
ror
adc
loopne
ds
mov
test
insb
rcr
rcrb
mov
insb
lods
data16
jo
mov
inc
es
and
xchg
cmp
add
aam
dec
jne
daa
add
dec
outsb
imul
and
std
mov
enter
aaa
adc
inc
dec
lea
mov
mov
adc
add
js
cwtl
nop
adc
inc
call
in
xchg
mov
pop
add
cltd
dec
test
adc
inc
cmpsb
mov
sti
sahf
add
sub
fcomps
inc
pop
push
add
or
loope
sbb
inc
push
sbb
pop
popa
pop
lods
outsl
dec
scas
icebp
sub
daa
je
xchg
push
adc
cld
xor
mov
stc
adc
loopne
orb
xchg
cmpsl
popa
outsl
ficompl
inc
std
jp
sbb
jb
fwait
adc
sub
add
ja
pop
mov
hlt
ds
addr16
add
jne
test
data16
push
mov
and
adc
and
push
cli
cmpsl
fstps
add
cli
sbb
adc
xchg
scas
popf
fadd
inc
mov
mov
mov
lods
sbb
leave
add
rorb
clc
cld
sbb
sub
inc
or
xor
leave
add
loope
aaa
mov
mov
push
fdivs
ror
enter
inc
xor
popa
cmpsb
inc
cmpsl
and
pusha
add
push
pop
mov
andb
xchg
lds
jnp
inc
mov
pop
js
aaa
ss
push
sbb
inc
mov
inc
mov
movb
sbb
test
or
xor
imul
inc
mov
test
push
inc
cmp
addb
neg
push
movsb
dec
add
pop
adcl
xchg
inc
xor
pop
mov
jno
inc
adc
inc
push
dec
inc
sbb
cmp
jl
and
and
mul
rol
mov
mov
inc
stc
out
fwait
mov
dec
sbb
adc
push
cmp
jns
inc
mov
sbb
mov
xlat
pop
add
mov
shl
mov
cmp
mov
rorb
daa
push
jmp
xor
sub
loopne
jl
cmc
rorb
lock
jno
rcr
cmp
outsb
fisubl
cld
and
inc
setp
gs
cmp
mov
mov
sbb
push
jbe
ret
push
adc
cmpb
es
or
pop
add
aad
shrb
push
fcoml
jae
pop
push
mov
sub
ror
sub
lock
test
jb
push
add
sbb
daa
ret
xchg
xchg
lock
add
jp
pop
add
adc
negl
push
repnz
add
in
sub
mov
xor
movsb
and
arpl
enter
mov
dec
mov
push
arpl
test
xchg
mov
js
stc
sbb
sub
xchg
iret
push
jp
push
out
or
mov
pop
dec
inc
into
pop
cmp
adc
sbb
scas
dec
nop
mov
shr
loope
inc
add
stos
mov
adc
js
ret
test
rcl
fldl
push
mov
pop
lods
xchg
sub
mov
adc
xchg
push
push
adc
add
mov
push
cmp
sub
mov
dec
add
addr16
and
push
adc
movsb
dec
add
call
fistl
aam
arpl
jbe
loope
int
adc
cmp
pop
out
mov
dec
mov
lret
or
add
jbe
subb
add
add
or
insb
pop
mov
xor
aaa
dec
or
leave
mov
out
or
jp
push
sbb
or
sbb
adc
or
leave
sbbl
add
cltd
jo
cmp
sub
cli
stc
adc
aaa
loopne
es
push
clc
jb
xchg
xchg
jg
jbe
in
test
lock
adc
sbb
icebp
push
lock
sbb
dec
add
loope
daa
mov
jae
sahf
inc
lds
and
pushf
xor
insl
mov
mov
hlt
xchg
orb
xchg
mov
inc
xchg
iret
pop
bound
and
lods
sbb
pop
or
pusha
dec
in
sti
lods
and
popf
fs
jo
add
mov
add
mov
adc
add
in
adc
pop
loope
mov
add
pusha
sub
sbb
xor
loop
stc
adc
sbb
xchg
dec
jbe
add
sub
mov
mov
push
rolb
or
lret
adc
push
push
cli
cmp
jecxz
jae
in
dec
mov
popa
lea
or
nop
andb
inc
js
lahf
dec
or
test
ret
add
mov
in
pop
loop
into
and
inc
push
daa
repz
xchg
nop
rcrl
pop
scas
mov
cmc
negb
sahf
test
jl
cmp
inc
push
mov
sbb
jmp
push
jo
add
add
mov
xchg
or
push
fs
mov
push
popa
dec
es
or
loopne
test
movsb
jmp
mov
xor
adc
leave
jmp
pop
dec
add
dec
xchg
out
push
ret
aam
xchg
mov
sbb
nop
add
and
stos
inc
lods
arpl
mov
dec
dec
test
push
pop
shrb
sbb
sbbb
or
sbb
sbb
push
out
pop
xchg
or
jbe
jno
adc
mov
cmp
xor
dec
pop
jbe
and
sub
out
add
jl
xchg
gs
xor
mull
or
add
add
jno
std
in
mov
pop
sbb
sub
xor
dec
add
sub
or
lret
test
adc
lods
ret
add
bound
mov
cmp
shll
mov
pusha
add
and
cmc
add
adc
mov
cmp
add
dec
movsb
adc
loopne
mov
fld
popa
jmp
daa
pop
mov
inc
add
or
mov
nop
rclb
dec
out
add
enter
mov
cmp
xchg
mov
loopne
test
mov
adc
pop
pshufw
jmp
lods
dec
cmp
movb
or
xor
divb
scas
jae
sub
lea
cmpsb
popa
xchg
ljmp
out
das
xor
inc
mov
push
pop
in
es
jb
fwait
test
add
cmp
mov
cmp
or
mov
cmp
movb
dec
add
and
sub
cmp
and
test
and
or
pop
xor
add
push
push
pop
mov
imul
xchg
or
cmc
andl
jle
jno
inc
mov
adc
test
fstps
loop
and
cmp
pop
inc
lds
mov
cmpsb
inc
or
lock
punpckldq
xchg
add
test
inc
lods
dec
xor
dec
or
sbb
xchg
cs
psubusb
pushf
add
sub
or
imul
dec
clc
test
mov
sbb
imul
mov
loope
lock
cmp
or
and
adc
dec
ljmp
cmc
imul
xchg
jo
cmp
xor
mov
dec
pop
aam
je
cmp
adc
and
loop
insb
or
loopne
lret
iret
adc
shll
pop
or
or
inc
add
xchg
bound
mov
mov
dec
push
mov
sbb
jno
mov
dec
call
mov
nop
cmp
jne
out
jne
or
adc
adc
mov
add
dec
imul
test
mov
add
shlb
cmpsb
dec
cli
push
outsb
negb
push
inc
mov
insb
sbb
sbb
xchg
and
repnz
fs
lcall
add
enter
push
add
pop
ffreep
leave
sti
cs
rcrb
fsubr
sub
lret
out
out
or
or
hlt
xchg
inc
add
inc
add
verr
mov
push
test
sub
pop
xchg
sahf
xor
enter
mov
pop
ror
and
ljmp
push
sub
push
in
ficompl
cmp
pop
sahf
and
add
sub
dec
pushf
sub
push
nop
cmpsb
or
xorl
mov
pop
rorb
pop
mov
pminub
mov
add
mov
sbb
add
mov
and
push
push
pop
xchg
xor
cmp
add
test
xchg
sbb
ret
imul
inc
out
add
mov
outsb
and
inc
into
and
jmp
lret
les
mov
sbb
mov
das
lods
and
and
sahf
imul
pop
mov
mov
test
rol
shrl
mov
dec
inc
roll
xchg
adc
loopne
inc
mov
or
dec
sbb
xorl
sbb
jp
orl
jo
inc
cmp
or
inc
imul
sbb
inc
jb
sarb
mov
or
xor
leave
push
movsl
jne
ret
and
add
xchg
adc
push
jb
pushf
mov
sub
cs
sub
sub
jmp
sbb
cmp
and
int
lcall
pop
jmp
mov
mov
jecxz
pushf
add
orl
ret
in
cmp
adc
pop
cli
incl
dec
push
and
or
mov
cli
pop
or
jl
mull
add
movsl
mov
lods
add
shlb
or
and
pop
push
ja
add
mov
add
adc
fcomps
rcr
pop
pop
test
out
xchg
js
pop
icebp
test
sub
or
data16
push
outsb
fs
ljmp
js
nop
xor
int
loope
shrl
pusha
jbe
add
dec
mov
pop
or
paddq
lret
rclb
pop
pusha
push
adc
mov
or
xor
adc
xchg
xor
add
inc
dec
pushf
sub
cmp
pop
push
mov
push
cli
mov
dec
mov
dec
sahf
add
cmp
andb
xchg
adc
sub
movsb
test
add
mov
xchg
sub
pusha
xchg
mov
bound
mov
sub
lock
pop
sbb
xchg
sahf
push
iret
sub
push
jne
fmul
cmp
cmc
je
xchg
sbb
cmp
rol
mov
sbb
pushf
mov
jns
stos
gs
pop
push
rcr
ret
jle
mov
push
ljmp
psubusw
pop
loop
inc
push
ret
sbb
cs
adc
iret
insw
inc
push
mov
inc
sar
cmp
sahf
jns,pn
lods
and
ret
jmp
ret
or
adc
movsb
test
insl
add
call
sub
mov
mov
or
dec
add
add
add
daa
pusha
xor
xor
mov
icebp
xchg
lods
xchg
sahf
mov
mov
es
mov
pop
dec
mov
popf
out
sbb
imul
stos
xor
xor
mov
test
pop
and
movsb
pop
adcb
enter
and
mov
adc
xchg
adcb
pop
push
lods
mov
push
xchg
jne
sbb
jle
cmp
hlt
and
notl
pop
push
daa
mov
mov
das
and
mov
adc
add
jb
pop
adc
and
mov
add
pop
add
xor
adc
jne
push
lods
hlt
call
push
mov
repnz
push
cmp
xor
jae
loopne
or
cmp
pusha
movlps
mov
adc
xor
rcrl
outsl
sbb
inc
add
fisubrl
data16
lods
insl
loopne
lds
mov
xlat
push
mov
jne
mov
jb
mov
push
movsl
roll
rolb
sarb
and
mov
mov
xor
jmp
cmc
or
xchg
sub
outsl
mov
imul
nop
pushf
xchg
and
dec
shrb
mov
je
push
repz
mov
mov
loopne
adc
push
xchg
sbb
fmull
cld
pushf
push
es
mov
add
xor
pop
into
arpl
push
pop
or
push
inc
add
or
add
xor
addb
inc
lods
add
mov
add
add
or
jo
clc
xor
nop
jp
sbb
or
push
pop
pusha
jmp
sbb
cwtl
mov
test
out
shlb
push
addb
xchg
lods
dec
pusha
int
lods
nop
add
cmpsb
out
clc
dec
push
sub
pop
sbb
ret
push
mov
jae
addl
sbb
jl
adc
jp
pusha
push
cmp
lock
pop
loop
and
je
icebp
rorb
xchg
sub
jae
out
ljmp
dec
and
cmp
push
xchg
mov
inc
js
pop
test
xor
sbb
pop
imul
xchg
or
or
sub
test
xor
repnz
iret
dec
popa
push
mov
scas
adc
adc
lds
add
divb
test
pop
adc
ss
pop
roll
in
mov
add
push
inc
xor
lock
or
push
es
ret
js
addb
lret
jb
add
adc
enter
jp
mov
xor
lods
lods
in
add
std
adc
clc
fdivl
aad
mov
push
mov
adc
in
or
xchg
pusha
lea
or
adc
cmp
pusha
inc
cltd
add
ljmp
sbb
sub
sub
pop
cmp
mov
xor
push
push
sub
xcrypt-ecb
cmpsl
dec
and
ja
clc
testb
xchg
push
lods
loopne
loope
pop
sbb
shlb
je
push
push
mov
push
or
sub
pop
fadd
sahf
jmp
pop
add
inc
imul
repnz
add
or
cmp
cs
pusha
push
or
test
int
inc
mov
mov
loopne
stos
xchg
mov
leave
push
mov
push
loopne
sbb
jp
jl
add
adc
rolb
mul
and
gs
clc
loope
clc
cmp
or
sbb
xlat
jl
int3
pop
xchg
ja
or
add
jne
xor
imul
lcall
leave
push
ret
ljmp
mov
sar
cmp
and
mov
or
mov
sub
inc
and
inc
shrb
test
rol
pop
pop
imull
sbb
fistl
pop
lret
xchg
andb
inc
push
or
mov
arpl
sub
lock
cmp
sbb
adc
or
jge
push
push
xor
nop
sahf
lods
movb
repnz
call
punpckhbw
add
adc
ret
bound
add
add
sbb
sahf
testb
and
bound
rolb
mov
hlt
ret
out
mov
cmc
cmp
mov
mov
and
adc
loop
sahf
rolb
jae
rorb
cmp
push
insb
sbb
enter
lea
inc
repnz
xchg
ds
ret
flds
mov
fmuls
cmp
jmp
daa
sub
xor
add
lret
scas
add
mov
sub
lret
inc
pop
cs
mov
add
push
jle
jne
icebp
movsb
sbb
scas
mov
mov
mov
repnz
out
lret
loopne
leave
jne
pop
fldpi
fsubrs
setp
xchg
sub
out
push
or
call
mov
lahf
loopne
loope
jp
inc
inc
ss
out
repnz
jp
fs
xor
mov
push
dec
sub
mov
dec
mov
sahf
addr16
sub
scas
mov
mov
out
sbb
scas
mov
test
mov
mul
lret
mov
mov
inc
xor
sub
popa
jg
and
or
mov
repnz
repz
aad
cmpsl
jg
dec
jo
loopne
lret
seto
inc
das
xor
je
inc
fmull
lret
mov
push
mov
int3
sub
adc
or
xchg
arpl
jb
push
pop
jns
mov
ds
fistps
mov
xchg
mov
pop
push
push
repz
jae
or
sub
adc
push
out
ret
xor
orb
jne
repnz
add
in
jg
popa
lds
inc
lods
repnz
lcall
sbb
lret
mov
cli
inc
aaa
out
add
and
das
scas
mov
call
cmp
xchg
test
orl
cmc
push
mov
fptan
lret
imul
das
xor
lret
mov
ret
xor
out
inc
fwait
jge
scas
mov
sarl
iret
insl
inc
push
cmc
jo
sub
xchg
ficomps
sbbb
mov
cs
push
int3
scas
adcb
lahf
dec
xchg
cmp
dec
mov
mov
aaa
and
ja
shlb
xchg
mov
scas
call
sahf
jo
jp
flds
cmp
pop
inc
insl
repnz
loopne
bound
mov
jnp
data16
out
ficomps
dec
setb
out
sarl
in
push
iret
es
pop
pusha
jb
xchg
in
mov
in
push
pop
cli
xor
xchg
xchg
pop
mov
std
jb
sbb
dec
ljmp
mov
push
fdivrl
xchg
fcmovnb
xchg
or
adc
shr
repnz
out
aad
lock
movsl
sub
lret
mov
fidivs
jne
sbb
mov
scas
mov
ja
xor
mov
sarb
ljmp
lods
fidivl
push
cmpb
in
cmpl
lret
testl
xlat
or
mov
out
out
lret
repnz
jp
in
popa
test
jecxz
sub
ret
jb
scas
clc
dec
dec
out
mov
jbe
or
loop
dec
scas
mov
outsb
jg
repnz
or
xchg
pop
data16
xor
sub
mov
mov
outsb
adc
imul
mov
pop
movsl
lahf
je
addr16
int3
out
mov
mov
jge
push
aad
sbb
sbb
lret
scas
pop
rcrb
pop
and
push
jge
nop
out
jle
repnz
adc
pop
jnp
pop
fbstp
sub
in
sub
sbb
sbb
dec
sub
xchg
mov
int3
pop
mov
scas
mov
sbb
jp
lret
scas
mov
sub
test
lcall
xchg
leave
push
jbe
lds
lret
fwait
mov
fiaddl
stc
or
out
sub
xrstors
lock
mov
or
xorb
scas
mov
loopne
mov
adc
call
xchg
sub
push
mov
scas
nop
out
and
sub
stos
movsl
dec
push
xor
xchg
out
mov
xor
iret
lods
enter
pop
lret
lret
lret
cli
jmp
xchg
xchg
mov
xor
repnz
adc
xlat
and
lret
mov
cmp
xchg
sub
pop
test
in
shll
inc
rcrb
mov
sbb
push
data16
es
es
out
jg
pop
and
push
in
fists
imul
je
jle
repnz
andb
add
dec
sbb
in
mov
sub
mov
sar
mov
scas
mov
lret
inc
outsb
cltd
loope
jnp
cmpsb
push
pop
jns
cmp
mov
push
sbb
ss
jns
xchg
repz
mov
in
lahf
xor
push
jg
arpl
jl
mov
inc
mov
mov
aas
sbb
ja
pop
jns
jnp
push
sub
rorl
add
stos
out
lods
pop
jns
xchg
test
mov
pop
out
push
lahf
dec
push
mov
xchg
push
sbb
out
dec
or
fdivrp
mov
cmp
sub
jo
sub
mov
adcl
fdivrl
mov
jle
xor
push
jo
pop
mov
and
int
sub
sub
popf
push
orb
push
cmp
mov
scas
aam
es
int3
movsb
mov
jg
lret
cmp
sub
push
loope
icebp
add
mov
lcall
out
add
mov
div
lret
dec
sub
mov
sub
imul
call
test
mov
cli
mov
cwtl
inc
and
repnz
jnp
hlt
bts
les
lret
jle
jp
sub
mov
scas
mov
movb
dec
pop
imul
mov
sub
cmp
jns
mov
add
push
mov
repnz
cmc
xor
arpl
jnp
pushf
repnz
loopne
mov
ds
pop
in
or
psrld
mov
and
xlat
lea
mov
lret
aas
in
or
and
xor
adc
sub
ja
cmc
pop
pop
inc
pop
push
repnz
mov
aam
sub
in
push
repnz
xchg
mov
xchg
pop
sub
sbbb
sub
xchg
sbb
in
fwait
cmc
jg
ret
sub
mov
dec
xor
fidivrs
xchg
push
outsl
cmpsb
fistps
jl
call
movsb
xlat
fisubrs
push
inc
dec
iret
in
push
pop
cld
ficoms
mov
pop
pop
jns
ret
mov
pop
lea
iret
push
and
jl
in
dec
cmpsb
shlb
lods
out
ret
repz
test
in
fucomi
cli
or
add
push
aaa
fisttpl
adc
ret
sahf
add
push
popa
sbb
gs
ss
ja
jle
lret
das
cli
jo
mov
sbb
mov
lret
mov
inc
fs
lods
mov
dec
jb
scas
mov
cmp
pushf
add
aam
mov
and
mov
jo
lret
and
scas
aad
pushf
cmpsb
dec
xor
sub
int
mov
test
sub
inc
add
adc
jle
repnz
testb
adc
pop
scas
repnz
lcall
aad
aaa
nop
std
lea
lret
mov
pop
xorb
lods
jle
repnz
adc
je
jg
push
pop
jns
mov
push
das
xor
xlat
pop
jns
xchg
out
cmc
push
cltd
sub
dec
dec
loopne
mov
in
sub
repnz
std
in
push
pop
popf
xchg
insb
jne
ret
or
sub
push
pop
jns
push
mov
mov
das
sbb
scas
mov
mov
push
leave
mov
mov
mov
lock
mov
push
xor
out
pop
add
sub
scas
mov
cmp
fs
neg
in
scas
mov
xlat
mov
cmp
clc
and
mov
and
jmp
mov
repnz
andl
int3
sub
das
scas
mov
test
dec
xor
jb
aas
in
repnz
ljmp
mov
imul
fstpl
call
sbb
ljmp
imul
inc
dec
scas
xchg
out
lcall
push
pop
xchg
loop
xor
push
scas
cld
jb
jno
popf
js
sbb
add
or
fdivrp
repnz
mov
sahf
nop
in
in
cmp
sub
sub
mov
or
jmp
repz
repnz
inc
cmp
shll
push
push
cmpsl
cmp
repnz
pushf
add
in
pop
insb
mov
aas
imul
test
fwait
lods
out
mov
repnz
stc
jno
ja
add
xor
je
pop
jns
pop
je
cmp
mov
jmp
int3
cmp
xchg
push
into
rolb
ret
cwtd
pushf
sbb
insl
outsl
testl
inc
sarb
xchg
out
fldcw
ds
pop
jns
xchg
cmp
cmp
and
cwtl
in
cmpb
push
xchg
pop
std
jp
pushf
arpl
cmc
push
pop
add
in
jmp
adc
inc
push
pop
jns
and
icebp
outsb
or
cli
pop
pop
jns
xchg
push
in
dec
pop
dec
pop
in
inc
pop
push
mov
jns
xchg
push
jge
dec
xlat
push
push
jns
iret
aaa
and
xchg
push
pop
push
daa
pop
cmp
mov
xchg
push
pop
jns
iret
sub
popa
cmp
xchg
cli
or
pop
jns
jge
fwait
test
cs
fs
pop
jns
xchg
cmpsb
test
push
cmp
imul
cld
add
pop
aas
insl
cltd
pop
xchg
pusha
push
inc
pop
and
aas
jg
sbb
jno
sbb
jae
sbb
repz
sub
sub
testl
hlt
popf
addb
call
iret
out
jns
lret
inc
jb
xlat
jge
scas
xor
stos
fstpl
push
xchg
ja
pop
add
out
adc
xchg
dec
loop
sub
pop
jns
fdivrl
xchg
ret
orb
leave
es
inc
jne
pop
in
mov
jg
mov
shrb
jge
push
pop
jns
dec
push
push
fildll
mov
pushf
push
pop
jns
out
iret
fnsave
ljmp
pop
addr16
jns
in
mov
jge
add
jns
enter
pop
push
lds
push
xor
jae
xchg
push
pop
jns
ja
pop
mov
jns
scas
xchg
push
ret
rclb
dec
push
sbb
xchg
gs
mov
push
mov
mov
jns
xchg
push
mov
lock
push
jg
cmc
in
push
pop
push
cli
insl
test
xchg
push
pop
jns
mov
cmp
mov
jns
and
push
inc
pop
pop
adc
pop
pop
mov
outsl
adc
fidivrs
in
add
push
int
dec
cmpsb
dec
pop
mov
in
push
xacquire
sub
and
ror
push
pop
cmp
xor
leave
jne
cmp
push
pop
jns
shlb
pop
jno
fwait
xchg
dec
sub
jae
aas
fs
push
jle
mov
pop
pop
pop
frndint
stc
repz
jle
out
sbb
dec
cmp
leave
hlt
addr16
mov
mov
test
in
lahf
cld
imul
icebp
sub
xor
aad
in
push
ja
dec
call
popa
adc
push
pop
mov
push
sti
leave
sub
out
arpl
aas
adc
adc
movsb
pop
test
in
jp
fstl
and
pop
inc
pop
jns
xchg
sbb
mov
enter
xchg
push
ret
stos
imul
in
push
pop
push
in
frstor
cld
pop
inc
xor
jb
push
pop
jns
mov
test
lea
sub
jns
iret
cmp
fistps
jecxz
add
fstl
outsl
mov
ret
in
push
pop
int3
xor
arpl
pop
test
movsb
cwtl
test
or
mov
lret
push
fs
pop
jns
mov
jmp
ret
xchg
test
and
jns
xchg
dec
addr16
xor
rcl
pop
jns
xchg
push
jmp
out
mov
mov
push
pop
loopne
mov
ss
push
fsubl
pop
jge
xorb
push
popa
cmpxchg
mov
repz
cli
xor
push
add
push
shll
mov
jl
push
jecxz
jmp
fidivrs
push
push
inc
jnp
daa
out
lret
fstl
inc
mov
jle
andl
push
jle
pop
fistps
pop
jns
fwait
daa
addr16
jg
push
pop
jns
mov
rcrb
shlb
into
push
sbb
xchg
or
popf
dec
and
iret
push
and
das
scas
mov
dec
cmpsl
mov
fsubrl
lret
xchg
pop
mov
push
add
or
push
pop
jns
inc
fstl
inc
lods
je
cli
les
notb
fisttps
mov
fwait
lea
jl
stos
inc
test
mov
jmp
dec
imul
scas
mov
push
and
fcomps
xchg
push
pop
jns
lds
mov
ret
jg
jns
xlat
lret
mov
inc
outsl
andb
pop
inc
jmp
or
inc
lea
pop
jns
jne
jae
les
popa
outsb
push
pop
jns
jp
jp
pop
gs
pop
xchg
mov
sahf
ljmp
cmp
mov
in
pop
pushf
jbe
andb
ds
popf
lods
leave
in
push
mov
inc
mov
pop
adc
repnz
jg
xchg
mov
mov
cmp
mov
out
adc
mov
pop
repnz
popa
jns
mov
mov
dec
ss
jge
aaa
inc
push
shr
iret
pushf
sub
sbb
xchg
pushf
jne
rcrb
lods
andl
add
sub
loop
fs
lea
mov
mov
ja
add
inc
mov
mov
jbe
jae
pop
dec
out
xchg
sub
pop
cs
fcmove
xor
mov
loopne
xchg
jle
or
jbe
mov
push
inc
mov
pop
cmc
jp
mov
xchg
sub
push
push
test
in
push
pop
add
add
xchg
into
push
pop
pop
jns
xchg
lea
inc
dec
shrb
jp
aas
jg
cld
sahf
xor
cmp
aam
mov
out
lahf
iret
in
std
jb
jb
ss
sarb
faddl
mov
fs
cltd
cmp
mov
lret
aas
mov
jo
int3
add
subl
inc
and
pop
fidivs
fcmove
cmp
arpl
repnz
fwait
push
sub
sub
mov
scas
pop
out
psubusb
loop
rorb
mov
inc
push
pop
mov
and
push
into
loope
inc
sbb
test
sub
xchg
shll
iret
mov
clc
mov
popf
ljmp
and
ficoms
sub
outsl
mov
push
mov
imul
call
push
lock
add
stc
repz
jno
xchg
imul
push
and
or
xor
xchg
dec
cli
adc
aas
adc
pusha
les
fnstsw
scas
mov
mov
into
and
adc
repnz
cmovge
decb
pop
or
xchg
das
scas
mov
subl
jo
jb
mov
xchg
data16
jl
stc
lcall
mov
xchg
stos
inc
sbb
iret
scas
or
mov
loop
ds
pop
fcomip
push
cmpsl
in
call
cmp
fadd
setne
jns
pop
adc
shr
dec
push
inc
mov
in
xor
arpl
jns
xchg
ja
pop
es
cmpsb
jg
xor
xchg
push
pop
mov
pop
movsl
stos
ljmp
test
push
pop
jns
movsl
mov
test
add
fs
pop
jns
cmp
movsb
insb
ds
push
in
adc
pop
jns
xchg
test
adc
xor
or
xchg
push
pop
xchg
jbe
repz
jp
and
in
push
pop
lea
stos
push
mov
lret
test
push
fdivrp
jb
pop
es
inc
out
aas
add
dec
test
xor
xor
adc
jge
pop
jns
xchg
lock
call
add
les
lahf
fwait
pusha
das
dec
inc
and
push
pop
subb
mov
mov
call
pop
jns
das
adc
call
cs
fstl
dec
dec
mov
jl
mov
jle
and
das
out
pop
jecxz
sahf
jns
xchg
ja
cmp
add
adc
in
push
pop
popf
and
pop
ds
test
fxch
fildl
xchg
push
pop
jns
jge
add
dec
mov
inc
sahf
mov
repz
rolb
pop
test
lret
cld
stc
in
js
clc
shll
pop
mov
aas
movsl
inc
mov
outsl
loopne
mov
sbb
inc
aaa
shrb
repnz
lahf
pop
cld
and
cmpsb
inc
jns
mov
pop
jns
arpl
mov
add
and
dec
daa
push
ja,pn
mov
pop
push
scas
mov
mov
dec
cmp
cmp
ret
sub
sbb
mov
add
adc
test
jg
mov
in
pop
or
in
mov
mov
pop
jno
in
push
lcall
loope
dec
pop
jae
xchg
push
pop
jl
jl
stc
inc
pop
cmp
je
repz
jl
mov
sub
sub
xchg
jns
fisubrl
xchg
sub
inc
fbstp
in
and
pop
lret
outsl
out
sub
ljmp
dec
ret
mov
movq
dec
mov
stc
pop
lock
data16
rorb
jle
adc
call
xlat
mov
aad
xchg
bound
mov
inc
in
pop
je
scas
jnp
mov
scas
movsb
ficoms
iret
and
fisubrs
sub
xor
inc
mov
loop
mov
ficompl
lods
shrb
sub
jle
aam
mov
and
scas
xor
xor
or
dec
xchg
in
mov
adc
inc
adc
std
jmp
sub
mov
es
lcall
out
sub
call
add
xchg
in
jle
repnz
dec
mov
leave
xor
sbb
mov
or
xchg
stc
and
or
scas
mov
pop
and
mul
push
mov
leave
fldl
jmp
sbb
and
dec
repnz
lahf
mov
popa
call
push
lret
mov
shll
mul
mov
mov
lock
pop
nop
jle
loopne
loopne
scas
mov
sub
lret
cltd
stc
pushf
call
mov
add
xchg
mov
mov
repnz
test
mov
lods
mov
lahf
pop
jle
inc
test
in
test
pop
jns
dec
ds
fincstp
popa
add
xacquire
in
test
loopne
insb
setns
and
jns
orl
cmp
push
mov
lahf
aas
jg
xor
orb
aam
out
into
pop
add
lret
out
out
lcall
push
fisubrs
jo
jnp
in
push
scas
cmp
lods
jg
insl
mov
fs
nop
pop
mov
lahf
aas
jg
cmp
and
sub
mov
repnz
mov
loopne
loop
movsb
jg
out
jle
sar
add
jl
adc
aaa
mov
mov
sub
sub
jmp
repz
sbb
lret
mov
mov
fisubrs
out
out
arpl
jg
lret
imul
mov
lret
jmp
mov
lret
outsb
xchg
dec
fs
mov
in
rolb
sub
dec
in
mov
imul
mov
add
adc
lods
mov
jne
jb
popf
dec
mov
scas
mov
fistps
scas
cmpsl
les
push
lds
lahf
mov
mov
addr16
das
aas
xor
jl
push
or
add
inc
push
xor
lods
sahf
push
mov
repnz
adc
addr16
inc
mov
lret
mov
lahf
outsb
jp
inc
pop
sub
sub
jbe
pop
cmp
xor
jg
sub
lret
adc
cld
or
push
sbb
loope
adc
std
pop
shlb
sbb
xchg
push
xor
test
inc
cmp
fistpll
jg
cld
push
std
push
add
mov
aam
cmpb
jl
cmp
aas
mov
icebp
mov
push
je
adcb
out
push
xchg
or
mov
jp
mov
pop
lret
mov
fisubrs
dec
cmp
scas
mov
cmp
frstor
pop
scas
mov
and
out
jmp
dec
jns
aas
adcl
jge
mov
aam
push
pop
icebp
push
daa
inc
mov
mov
sub
into
incl
jg
lcall
stc
lret
in
push
arpl
mov
out
rorb
inc
rol
fildll
imul
repz
cs
xchg
mov
pop
daa
pop
mov
jg
cld
mov
xlat
sub
test
pop
jmp
fmuls
pop
mulb
iret
lahf
aas
fsubrp
mov
mov
cmp
sarl
repnz
in
xchg
ljmp
cmp
add
mov
fmul
cmp
fdivl
out
push
iret
lahf
aas
and
mov
xor
jmp
repz
lds
ja
inc
scas
ficoml
xchg
ja
jl
cmp
cmp
xor
mul
cmp
jae
xor
pop
cmp
or
xchg
push
cli
lahf
je
or
mov
mov
xchg
push
pop
notl
call
test
sub
scas
mov
ja
insb
movsl
mov
pop
pushf
cld
add
mov
dec
sti
into
cld
stc
repz
daa
push
mov
movsl
mov
in
ret
xchg
lahf
aas
jg
xchg
xchg
imul
fcoml
lret
pop
jne
mov
jmp
lret
push
fsubl
jbe
add
sub
pushf
jecxz
and
mov
into
xlat
test
jg
es
lods
pop
lods
clc
stos
cmp
repz
les
fisubs
in
outsl
adc
mov
lcall
mulb
mov
or
int3
pop
ja
inc
mov
push
mov
fwait
jno
scas
repz
mov
adc
mov
idivb
pop
jle
outsl
iret
imul
jg
cld
stc
dec
fdivrl
and
xchg
or
cmp
cmp
mov
mov
mov
mov
out
jle
repnz
or
push
pop
test
jmp
repnz
jl
repnz
sub
or
sbb
lret
in
lods
iret
das
add
lds
jl
arpl
sub
cmp
inc
mov
push
mov
mov
jmp
testb
mov
jle
repnz
mov
in
cwtl
mov
inc
mov
dec
repnz
out
pop
into
fwait
in
dec
in
loop
shlb
mov
popf
inc
xor
cmc
outsl
scas
mov
cwtl
bound
xchg
or
jns
inc
outsl
or
lret
and
dec
movsb
cmp
fistps
mov
jo
popa
push
mov
jo
ret
xchg
sub
add
scas
mov
dec
lods
jg
lods
inc
fldenv
push
pushf
adc
repnz
decl
mov
cld
add
mov
mov
adc
inc
push
iret
lahf
aas
or
add
adc
mov
repnz
shlb
jno
inc
cld
repnz
clc
cwtl
in
jp
xchg
pop
jle
movsb
insl
sbb
mov
iret
lahf
aas
lcall
int
inc
mov
arpl
mov
cmp
hlt
sbb
aam
xor
sub
pop
jo
push
loopne
loopne
and
scas
mov
xor
lods
push
jp
jb
jg
mov
add
xor
das
ja
xchg
and
ljmp
mov
ret
mov
pop
scas
sar
add
call
xchg
cltd
jns
shlb
adc
xchg
fbld
or
cmp
mov
sub
cmp
lock
push
insb
das
pop
loopne
pop
insb
aas
add
mov
add
insb
idivl
jle
pop
out
gs
xchg
push
fimuls
push
lcall
ret
sub
das
ret
push
mov
mov
imul
test
scas
mov
cmc
or
dec
inc
push
int
mov
mov
mov
insl
push
mov
pop
dec
pop
sub
xchg
mov
out
das
icebp
bnd
dec
pop
fbstp
pop
scas
mov
das
mov
mov
push
and
push
pop
jns
jmp
lahf
cld
sbb
ljmp
pop
jns
xchg
cmp
xchg
pushf
push
movsb
les
add
xchg
push
push
sti
out
out
mov
adc
xchg
push
pop
fstpt
outsb
adc
lods
mov
inc
xlat
jne
ds
aam
fbld
sbb
adc
dec
pop
fimuls
pop
mov
and
inc
push
mov
jg
add
aas
fwait
arpl
push
jae
inc
lret
outsb
sbb
nop
iret
fldl
push
das
dec
popa
mov
and
repz
mov
push
xor
cld
stc
or
outsb
cmpsl
jle
sub
call
out
lahf
aas
lock
ljmp
stc
repz
push
out
lcall
sti
cwtl
xchg
lock
jg
pop
dec
sub
mov
sbb
adc
in
xchg
lahf
int3
outsb
mov
fisubs
leave
lret
jb
adc
mov
jg
or
fsubl
in
aad
ret
in
and
push
aam
and
mov
inc
jl
cmp
push
or
push
mov
jns
xchg
sbb
or
push
std
push
sub
jns
xchg
push
addr16
cmp
xchg
pop
loope
ds
xchg
push
pop
lcall
lds
call
lock
icebp
imul
push
mov
fcoms
fadds
clc
or
sbb
stc
repz
out
mov
clc
push
mov
dec
movsl
mov
repnz
xor
dec
mov
scas
jo
xchg
loopne
orb
xor
mul
sub
adc
ss
dec
ss
in
push
pop
dec
je
mov
add
add
or
and
cmp
jns
cltd
lret
inc
mov
cli
xor
push
arpl
push
mov
out
ss
fstps
pop
cmp
dec
sbbl
fcoml
fmul
scas
pop
repz
lahf
scas
sub
cmp
mov
jl
cld
stc
sarb
mov
add
mov
test
jg
cld
into
add
aad
xchg
andb
mov
fiaddl
jg
in
lahf
test
subb
xchg
push
ficomps
jno
or
pop
jns
add
xor
pusha
cwtl
mov
lahf
loopne
cmp
cld
jb
xor
aaa
jmp
inc
rolb
fstpt
shll
xor
iret
lahf
jg
or
sarb
shlb
cld
aad
push
dec
pxor
cld
stc
xchg
mov
xor
test
daa
pop
jg,pt
in
aam
mov
clc
pop
push
pop
fdivrp
sub
and
das
xchg
test
sub
adc
je
jmp
into
jb
repnz
loop
xchg
dec
or
lret
lock
adc
aad
cmp
jno
repnz
test
cmc
iret
or
pop
jns
subl
iret
lahf
pop
jle
xor
aad
dec
cmp
jnp
xrelease
inc
mov
push
outsb
test
push
das
mov
scas
mov
sahf
add
cmp
repz
loope
test
and
iret
popf
gs
pop
mov
lods
leave
mov
lea
mov
mul
pop
mov
sub
mov
in
cwtl
out
adc
sahf
mov
scas
mov
mov
pop
sub
sub
aaa
dec
push
fsubrp
xchg
aaa
push
iret
shr
loope
xor
sub
enter
test
jne
iret
inc
jle
insb
inc
decl
adc
sub
imul
add
lea
dec
mov
ljmp
push
sub
mov
out
lahf
pop
pop
mov
mov
cld
pop
dec
das
xlat
cld
stc
repz
pop
cs
dec
fcmove
xor
imul
adc
dec
inc
xchg
mov
jns
xchg
ja
sahf
jnp
mov
int3
bound
jg
mov
iret
mov
mov
pop
sbb
sub
sub
fwait
into
cld
stc
repz
jno
movsl
cmp
jne
pop
mov
cmc
sub
movsl
pop
jg,pt
outsl
ljmp
outsb
in
cltd
lods
xchg
push
inc
loop
push
sub
fsub
lret
repz
jb
sub
lods
loope
lret
pop
ret
test
push
pushf
aas
push
pop
jae
inc
jecxz
or
mov
or
cltd
mov
and
add
stc
movb
sbb
shll
push
dec
repnz
mov
dec
adc
loope
lahf
pop
stos
loope
or
push
inc
add
in
iret
jns
sub
mov
inc
scas
out
hlt
rcrb
mov
lock
jmp
addr16
lret
shl
pusha
fmulp
jmp
add
jno
test
mov
ficoms
mov
arpl
lcall
testb
bswap
shll
stos
cmp
adc
daa
jecxz
sub
fwait
movsl
test
pop
lock
pop
daa
stc
test
out
add
jmp
push
dec
pop
imul
lock
scas
mov
dec
mov
push
lret
pop
sub
orb
mov
scas
mov
cs
mov
sbb
das
cmp
repnz
lods
aad
cmp
jbe
fidivrl
fsub
aam
push
xchg
or
scas
and
dec
cltd
mov
out
mov
dec
pushf
xchg
xchg
mov
lret
xchg
ja
dec
fidivrs
dec
fisubrl
push
pop
jns
push
pushf
addr16
xchg
inc
mov
arpl
cmpsb
inc
pop
jns
xchg
jnp
adc
into
pop
stc
mov
fcmovnb
pop
mov
jae
shlb
xor
lret
das
stc
pop
sbb
cmpsl
out
mov
cld
or
inc
fldcw
adc
jae
iret
lahf
aas
jg
fs
lahf
mov
push
jno
repnz
and
push
stos
adc
stc
adc
out
lods
lahf
std
push
test
out
lret
jg
mov
outsb
iret
pop
adc
scas
mov
cmpsl
in
push
add
sub
adc
push
or
sub
or
lret
ficoms
sbb
jmp
lahf
mov
cmc
add
mov
cmp
hlt
jo
dec
repnz
xchg
ljmp
sub
ret
scas
mov
sub
pop
pop
adc
sub
adc
cli
and
aas
push
cmc
mov
adc
mov
xor
lret
add
ret
out
sbbb
cld
sahf
xor
sub
sub
mov
mov
push
icebp
fildl
sub
repnz
das
dec
movb
or
jecxz
repnz
rorb
pop
lods
and
mov
mov
iret
mov
jg
test
call
lcall
jb
iret
lahf
aas
pop
dec
sbb
sub
jb
add
pop
inc
jl
scas
jg
cld
stc
ss
add
inc
adc
rcrl
xor
aas
jle
jle
fcomip
add
mov
cld
stc
rep
xor
das
pop
jns
adc
mov
pusha
insb
dec
in
xchg
ja
jle
pause
or
pop
dec
mov
pop
jns
in
arpl
enter
add
ss
aaa
lahf
jg
pop
cmp
out
pushf
mov
repz
idiv
shr
je
push
dec
push
lock
out
clc
push
xlat
insb
ds
cmp
negb
cld
stc
dec
xor
ljmp
lretw
int
inc
sahf
aas
outsl
icebp
push
loop
dec
jge
gs
lahf
aas
mov
jnp
inc
push
mov
mov
pushf
mov
lods
mov
jo
in
cmp
xchg
fstps
sbb
ds
dec
icebp
cld
daa
xchg
outsl
stc
repz
push
push
xchg
xorb
fs
mov
inc
mov
mov
push
ret
inc
pop
jbe
push
in
repnz
imul
nop
wbinvd
or
fistpll
lret
mov
mov
mov
mov
dec
daa
dec
fucomp
jl
hlt
xor
jno
mov
test
add
pop
xlat
test
imul
adc
lock
or
ret
sub
dec
jle
fisubrl
sub
sbb
mov
in
or
in
dec
arpl
or
lahf
aas
jg
mov
mov
inc
mov
insl
sbb
repz
jnp
aas
jmp
xchg
imull
mov
addr16
insb
cwtl
push
ss
lahf
jg
sahf
jmp
mov
repnz
loopne
sbb
push
scas
cmp
adc
ja
mov
aas
ss
in
push
fdivrs
jg
call
clc
nop
lds
mov
scas
sbb
xchg
push
shrb
and
incl
pop
xor
ljmp
push
pop
jns
lods
les
sub
addr16
jge
push
pop
jns
xchg
jnp
cmp
mov
shrb
gs
and
mov
in
ljmp
xchg
ja
ja
pop
xor
pop
jns
inc
push
ficoml
movb
es
lret
ja
insb
cmp
xchg
lahf
loopne
nop
or
sti
cmp
stc
leave
push
fwait
sbb
jle
or
inc
ja
jle
out
mov
xchg
sub
lret
xchg
cmpsl
orps
std
jb
xchg
mov
imul
dec
or
xchg
ja
fisubrs
jne
ud0
xchg
jns
push
pop
jns
push
pop
sub
mov
jns
fidivrl
in
dec
fists
jle
xchg
pop
stc
divb
sbb
fidivrs
mov
lret
inc
lock
icebp
sbb
pop
xchg
push
pop
jns
mov
or
or
mov
push
mov
ljmp
popa
aas
pop
or
insb
movsb
pop
jle
out
xchg
addb
mov
fisubrs
dec
jp
cld
stc
add
insb
sbb
pushf
bound
add
cli
xchg
fisttps
mov
in
lock
addr16
cmp
arpl
in
decb
outsl
cmp
mov
in
push
flds
imul
scas
cmpsl
insl
push
fdivs
out
jo
cld
sbb
enter
inc
lcall
sub
jle
xor
fbstp
fistpl
repnz
push
mov
daa
xchg
dec
push
loope
out
xchg
sub
add
rcrb
out
cld
cld
inc
clc
xchg
dec
inc
movsb
push
push
mov
dec
sub
mov
out
pop
mov
gs
push
icebp
test
pop
cmp
std
clc
mov
mov
jns
fstl
jg
ficoml
cmc
outsl
lahf
mov
push
icebp
mov
sbb
out
xchg
push
fidivrs
notl
pop
jp
inc
shrl
xor
insl
jl
in
or
lock
mov
and
decb
push
pop
pop
pop
mov
pop
std
jb
sbb
mov
dec
fsubrs
lahf
pop
inc
adc
cmpsl
mov
repz
sub
add
mov
jg
cld
inc
add
jecxz
mov
int3
sbb
xchg
iret
sub
enter
scas
xchg
sar
out
mov
mov
push
sub
das
cs
test
xchg
push
pop
adc
cmc
cwtl
push
mov
rcr
jb
mov
sar
mov
cld
add
xchg
movsb
popa
sti
and
add
mov
es
sqrtps
dec
pushf
stc
repz
iret
and
pop
dec
mov
aas
shrb
jg
cld
mov
and
xchg
sbb
sbb
cmc
in
ja
lcall
jb
mov
repz
das
pop
stc
pop
test
add
mov
cld
stc
sub
xchg
in
cmpsl
clc
in
push
xor
jmp
sub
enter
hlt
push
cltd
jle
sub
xor
mov
push
or
push
aas
fwait
shrl
jge
loope
add
inc
ror
stc
decb
call
mov
adc
in
lret
ret
and
jg
add
fbld
jmp
cwtl
or
lahf
aas
add
cmp
mov
repz
sbb
pop
imul
jbe
iret
lahf
aas
jg
xchg
dec
adc
cltd
loope
pop
xlat
push
repz
bnd
sub
sub
pop
gs
mov
push
push
rolb
mov
repz
mov
hlt
cld
test
pushf
popa
xlat
ror
pop
ss
dec
in
add
outsb
pop
mov
lea
and
mov
push
into
cli
add
xchg
mov
scas
mov
push
sbb
adc
add
popf
aad
sub
xadd
iret
pop
xor
iret
lahf
out
xchg
mov
xor
js
iret
xchg
and
adc
out
jecxz
insl
leave
lahf
aas
jg
push
aam
cld
cwtl
push
ds
xchg
mov
out
lret
iret
sub
test
mov
lret
mov
cmp
and
xor
xor
shrb
cmp
or
aas
sahf
repnz
div
in
scas
cmp
xchg
sbb
pop
jge
xchg
dec
fwait
lahf
aam
pop
test
aas
sarl
mov
iret
rolb
push
hlt
push
mov
lret
pop
js
push
into
pop
in
dec
mov
cld
stc
repz
into
ss
cmp
lret
lds
jg
sub
inc
mov
ljmp
out
lret
iret
out
sbb
cwtl
add
mov
mov
jg
cs
pop
inc
dec
dec
ss
daa
fsubrl
rcr
andb
push
xchg
aaa
lahf
mov
mov
xlat
cmc
mov
sbb
cmp
ret
cld
repnz
push
push
push
lret
dec
xchg
repz
loop
mov
loop
std
or
sti
into
dec
cli
cld
adc
out
popa
call
push
stc
lret
lahf
aas
jg
pop
mov
mov
daa
popf
fdiv
out
shlb
outsb
jb
int
jne
mov
fidivl
xchg
stos
inc
pmulhuw
jecxz
xlat
adc
sub
out
int3
shrl
mov
inc
mov
sub
mov
bound
subb
mov
std
lock
inc
inc
push
ja
imul
js
cli
jg
cld
stc
fildl
mov
decl
test
repz
or
xchg
out
lahf
aas
test
mov
xlat
das
sub
rclb
hlt
or
mov
jg
cld
stc
sbb
add
pop
push
pop
std
sub
out
lahf
aas
pop
mov
and
dec
pop
push
idiv
xchg
jge
mov
xchg
mov
mov
in
mov
push
aaa
sub
jle
ljmp
cmc
mov
in
or
test
push
lahf
aas
jg
cs
mov
out
sbb
in
out
gs
ficoml
pop
lret
push
dec
js
sti
sbb
mov
inc
push
lahf
mov
or
scas
push
cmp
in
lea
repnz
xchg
popa
mov
jae
sbb
add
pop
cld
std
addb
or
mov
inc
and
jns
into
or
pop
cmpsb
push
inc
pop
dec
in
cmp
in
les
daa
into
fisubs
pop
push
lret
dec
xchg
jns
xchg
push
dec
mov
adc
pop
xchg
ja
pop
nop
out
sbb
pop
shl
pop
and
icebp
jb
jecxz
push
outsl
imul
push
fdivrp
stc
xor
pop
jp
aas
mov
sti
mov
push
pop
jns
ss
leave
aad
mov
pop
pop
std
mov
in
shl
insb
mov
sahf
mov
in
push
pushf
push
push
jl
repz
mov
xchg
push
pop
adc
shrb
pop
jnp
loopne
add
push
pop
jns
rolb
and
call
ret
cs
pop
test
push
cmp
in
push
call
cmp
movsl
lret
xchg
push
pop
nop
mov
push
push
pop
jns
xchg
xchg
cmp
inc
lds
pop
push
pop
jns
xchg
lahf
cwtl
dec
sbb
movsb
notb
rorb
das
push
xor
fcomps
addr16
jbe
outsl
addr16
mov
jle
cld
stc
repz
arpl
das
xchg
xchg
adc
add
add
cltd
jmp
in
lahf
test
addr16
arpl
in
lahf
pop
loopne
gs
fidivs
out
jnp
aas
aam
push
out
pop
int3
cmpsb
popa
out
daa
mov
in
iret
lahf
add
inc
out
adc
inc
loop
mov
out
jp
pusha
mov
test
pusha
dec
jns
popf
int
mov
lret
test
mov
pushf
mov
cld
repz
outsb
mov
cmp
iret
lahf
scas
les
cli
add
shlb
out
cld
stc
adc
jle
or
mov
dec
inc
inc
sbb
sti
clc
out
pop
adc
aas
sbb
inc
out
scas
test
cltd
inc
cltd
sub
repz
ljmp
and
out
inc
enter
lahf
aas
jg
push
inc
test
xchg
xchg
xchg
loopne
stc
repz
incb
push
fildll
fisubs
mov
push
fstps
push
pop
jns
jl
incl
mov
xor
xchg
or
add
in
mov
out
pop
lods
dec
jg
cld
stc
xchg
or
cltd
lahf
fists
insb
scas
arpl
das
lea
jg
cmp
mov
repnz
into
lock
jecxz
dec
movl
and
dec
dec
mov
shrb
mov
fcoml
mov
inc
or
push
dec
stos
xor
jg
cld
mov
movsb
push
repnz
jmp
cmpsl
adc
add
lahf
aas
sub
aas
push
aas
iret
lods
ret
ljmp
je
pusha
xchg
push
fdivrp
and
pushl
cs
das
mov
cmp
andl
subb
jns
xchg
ja
cs
push
push
sbb
xchg
push
pop
scas
aam
iret
push
push
mov
enter
in
hlt
sbb
dec
jle
lcall
sub
stos
pop
xchg
mov
test
inc
clc
in
ror
xor
adc
jle
mov
cmp
lret
dec
nop
cmp
in
aas
jg
cld
mov
mov
outsl
pop
mov
decl
std
add
fstl
and
jle
mov
jns
sbb
pushf
or
call
inc
add
xchg
sahf
jl
xchg
push
xor
dec
scas
outsb
and
scas
nop
xchg
cli
popf
dec
pop
mov
aad
sub
pop
dec
adc
push
xor
mov
xor
add
dec
fucomip
and
mov
das
inc
sub
adc
push
das
mov
cmpsl
out
lahf
aas
movsb
sbb
jbe
jns
mov
mulb
mul
in
pop
cli
push
add
push
mov
push
stc
cmp
je
repz
lahf
and
mov
out
lret
jg
cld
stc
xlat
mov
push
inc
add
out
xchg
cmp
lahf
aas
inc
pop
negb
pop
or
pop
cld
cld
stc
repz
xchg
xor
hlt
sub
enter
mov
sub
pop
xor
jg
mov
xchg
sbb
cmp
stos
mov
lret
xchg
jl
adc
cld
stc
repz
ja
test
adc
lahf
aas
jg
pusha
sbb
lods
scas
test
mov
cmp
xchg
repz
jmp
je
outsb
in
fsubl
daa
mov
stc
ljmp
aas
jg
enter
setle
mov
cmp
mov
cmpsb
fsubrl
mov
sub
int
les
mov
repnz
xchg
xchg
lcall
in
and
push
pop
xor
xchg
sub
cld
stc
xor
sbb
xchg
push
fimuls
rorb
jo
push
push
xchg
and
jns
int3
rolb
outsl
and
xchg
ja
iret
mov
pop
xor
fidivs
pop
jns
lcall
xchg
scas
movsb
scas
jae
iret
ror
movq
or
adc
mov
add
push
rcr
or
push
mov
icebp
lods
in
mov
add
add
push
clc
in
jl,pn
test
lds
cld
stc
repz
dec
je
mov
out
add
xchg
aas
jg
mov
shlb
clc
add
jo
std
stos
test
mov
push
xor
mov
mov
push
fisubrs
pop
int
mov
clc
jg
rcrb
sub
movsb
jne
xchg
and
cmpsl
clc
mov
jge
hlt
xchg
rcrl
insl
iret
fstl
mov
push
sub
pop
jns
jl
stc
leave
lea
xor
pop
cmp
xchg
jnp
dec
dec
lods
jmp
js
stc
repnz
mov
lahf
data16
cltd
addr16
in
push
pop
addl
in
in
push
lahf
scas
fdivrp
cltd
mov
fbld
leave
lret
xchg
push
jb
mov
roll
iret
mov
jb
mov
orl
imull
ja
sub
sub
hlt
in
mov
inc
loopne
pop
push
aaa
mov
repz
rcl
mov
add
xchg
pop
cmp
adc
inc
jl
and
sbbb
into
xchg
add
jns
popa
xchg
aaa
push
insl
andb
push
jg
cld
inc
pop
int3
lods
push
notb
adc
imul
lahf
aas
aam
mov
adc
sti
repnz
jnp
sbb
cltd
popf
loopne
out
cmp
pop
scas
cmpsb
out
pop
lds
mov
decb
in
sub
ficoms
aad
pop
imul
mov
call
mov
mov
decb
pop
stc
or
inc
iret
lahf
aas
aas
cs
mov
or
mov
xchg
xchg
pop
aam
out
dec
lcall
pop
jns
push
std
fs
jg
xchg
stc
mov
bndstx
std
jb
xchg
adc
xchg
and
cmpsl
loopne
andb
out
mov
lcall
mov
sub
jbe
inc
jnp
mov
mov
push
cld
stc
mov
jnp
idivl
push
lock
cmp
jmp
fidivl
jp
sub
mov
in
add
sbb
stc
sbb
loopne
sub
cmp
or
lahf
cs
jg
inc
fmulp
xor
or
js
in
out
lahf
adc
jecxz
sbb
imul
add
cld
stc
lret
ds
dec
je
in
sbb
pop
or
xchg
jl
push
out
js
ja
stos
mov
pop
jg
ret
mov
pop
jns
xchg
add
je
dec
mov
lods
xor
inc
jg
pop
push
inc
sbb
pop
out
lahf
pop
out
loop
aaa
or
or
xor
jb
repnz
jg
cli
punpckldq
xchg
sbb
scas
aad
cltd
das
xchg
sarl
push
jbe
add
fmull
mov
cmp
stc
repz
push
pop
jo
ss
in
inc
js
cli
popa
insl
lahf
aas
jg
mov
add
daa
mov
mov
iret
sbb
cmpl
fsts
stc
aas
jg
cld
test
imul
mov
addb
cld
stc
repz
jl
int
lods
dec
jmp
adc
filds
add
push
and
mov
subl
push
mov
adc
imul
xlat
pop
into
xor
ficoml
cmpb
adc
xor
or
lret
mov
xchg
jecxz
in
imul
fdivr
loope
jp
push
xchg
dec
mov
add
test
adc
lea
jo,pn
cmc
loop
lahf
aas
jg
repz
test
je
out
adc
mov
add
in
pop
xor
xor
loop
repnz
fists
das
fistpll
fstpt
lret
mov
jecxz
insb
or
push
xacquire
push
loopne
jl
jl
adc
outsl
call
movsl
dec
push
gs
pop
push
xchg
sbb
mov
jg
mov
cld
pop
dec
cmp
lods
ss
into
push
out
lahf
aas
adc
pop
push
nop
cltd
push
out
out
pop
cld
stc
repz
mov
and
jo
sub
pop
fistps
inc
push
stc
inc
cmp
mov
sbb
push
iret
cmc
enter
add
shlb
out
lock
gs
dec
mov
jne
pushl
repnz
popf
popf
mov
mov
and
repnz
test
fadd
les
pop
scas
mov
rolb
dec
jecxz
xchg
cmp
repz
dec
cs
adc
inc
dec
sbb
pop
ss
cld
dec
mov
or
jmp
das
aas
fimuls
clc
jo
rorl
jnp
mov
aas
jg
mov
cmp
fnstenv
stos
pushf
cwtl
jnp
stc
repz
dec
mov
iret
add
inc
mov
aas
jg
cld
inc
shlb
adc
push
xor
rclb
adc
and
fnstsw
in
xor
jle
cmpsl
or
pop
xor
in
push
pop
mov
in
sti
in
push
call
cmp
xor
or
lahf
test
push
xchg
cmc
pop
jge
push
sbb
repnz
add
mov
push
aam
push
mov
add
adc
outsb
fdivr
popa
repnz
push
stos
push
stos
inc
in
xor
lret
sub
pop
loop
and
sub
stos
pop
mov
dec
mov
repnz
xchg
into
pop
leave
mov
data16
hlt
lret
dec
ds
mov
add
repnz
or
shll
jmp
inc
mov
jno
jns
lds
rorl
fidivrs
outsb
addr16
sti
jno
pop
pop
and
jmp
std
jb
xchg
mov
mov
sub
ficomps
push
dec
add
mov
push
sahf
bswap
jns
call
nop
push
fwait
aas
jg
cld
xor
in
xchg
jae
movlhps
rcrb
pop
repz
lahf
pop
xor
add
insb
xchg
cld
stc
lret
or
cmp
pop
int
loope
and
iret
lahf
aas
xchg
push
push
dec
fsubrl
cmp
mov
pop
jae
push
jns
push
je
and
nop
jg
pop
fimuls
inc
sub
and
pop
into
push
aam
repz
lahf
and
ja
xlat
xchg
stc
jb
mov
cld
stc
pop
mov
std
jge
mov
xchg
lahf
pop
adc
pop
mov
xchg
add
xor
or
nop
pop
das
push
inc
fisubrl
sub
outsl
call
xlat
jne
adc
int
lret
ss
rclb
mov
mov
sub
mov
inc
das
mov
sub
mov
or
aas
jg
cld
mov
pop
jns
xchg
bndstx
pushf
dec
lret
out
lahf
cmp
pop
sub
dec
add
testl
cmp
jae
outsl
xchg
push
pop
jns
add
dec
lods
inc
xchg
dec
filds
fistpll
lods
mulps
fstpt
mov
das
movsl
in
push
pop
jae
shll
inc
push
xor
xchg
push
pop
jns
sbb
mov
sub
test
xchg
push
pop
jns
aam
sbbl
jne
aas
lock
xchg
loopne
repnz
imul
sub
cmc
lret
cs
fcompl
or
mov
daa
ficompl
inc
lret
cld
mov
and
inc
flds
ljmp
ja
test
adc
and
rcrl
push
pop
jns
call
int3
into
jp
in
pushf
adc
jns
xor
push
es
jns
fistps
in
lock
mov
push
andb
in
ja
sbb
jo
mov
xchg
adc
popa
cld
jb
stos
push
pop
cmpsl
jne
cmc
push
nop
mov
nop
hlt
addr16
xrelease
sahf
out
shr
jno
and
ficomps
push
inc
jmp
out
xchg
sub
mul
cmp
iret
xor
mov
popl
cmpsl
sbb
and
push
inc
pop
stos
scas
mov
xchg
push
mov
loope
sarl
xor
lcall
ljmp
sbb
into
mov
mov
repnz
push
call
stc
ret
and
nop
jle
cs
dec
imul
sbbb
and
int3
add
iret
lahf
aas
fdivs
jb
xchg
or
repnz
jmp
imul
movsb
mov
cli
push
push
pop
adc
and
cltd
sbb
xor
negl
jo
iret
and
dec
adc
add
repz
lahf
push
sub
sub
inc
xorl
mov
cld
stc
xor
or
das
push
fdivrp
push
incl
pop
hlt
in
outsb
sbbl
jg
outsb
sub
fidivl
push
in
shrb
push
adcl
fidivrl
mov
xchg
pop
imul
mov
fbstp
sar
pop
fidivrs
mov
iret
cltd
inc
aas
mov
adc
iret
lahf
jg
jle
jae
in
cmp
in
clc
leave
adc
fiadds
mov
inc
mov
neg
push
stos
fsts
xchg
decb
fwait
cmpb
fwait
je
dec
scas
jbe
and
in
pushl
pop
test
outsl
jns
xchg
ja
test
decl
xchg
and
inc
jge
scas
mov
int3
xor
repnz
xchg
cs
push
mov
int
lahf
std
std
mov
test
pop
and
enter
jle
pop
mov
pop
cmp
arpl
repz
lahf
clc
and
pushf
in
pop
pop
popf
outsl
push
mull
mov
jl
imul
lret
cs
jle
fisttps
push
pop
xchg
out
mov
pop
stos
mov
das
scas
mov
cmpsb
jo
cmp
adc
sbb
dec
pop
inc
out
mov
xor
scas
out
popa
or
scas
cltd
sub
dec
inc
ret
addr16
xchg
ja
adc
xlat
xchg
pop
xchg
outsl
cmc
lret
in
insl
jne
shrb
leave
arpl
xchg
popf
mov
cld
daa
pop
pop
sti
mov
repnz
les
sbb
ljmp
mov
mov
mov
sub
shlb
dec
cmp
mov
repnz
sub
pop
setb
repnz
adc
xor
fstpt
inc
test
mov
mov
xchg
ss
aas
jg
dec
scas
sbbl
out
sub
jle
aas
jecxz
iret
push
adc
icebp
push
or
shl
out
lahf
movsb
dec
or
sahf
mov
sub
les
stc
mov
insb
jecxz
mov
iret
bound
in
xchg
in
lret
mov
iret
push
pop
jns
adc
imul
aad
jns
lret
xchg
jbe
fsubrs
scas
cmpb
sbb
push
pop
je
insl
adc
add
pop
xchg
push
pop
jns
fst
add
jge
sub
ss
ret
pop
jns
in
and
fistpll
and
in
outsb
jl
push
and
push
sub
cmpsl
sub
xchg
push
lods
les
add
xchg
stc
repz
repz
mov
cs
mov
jg
pop
push
test
sbbl
into
ss
std
adc
adc
fstl
iret
adc
add
xchg
push
pop
mov
sub
fcos
xor
call
pop
jns
mov
iret
add
loopne
pop
mov
pop
jns
arpl
xchg
cmp
adc
hlt
std
jb
xchg
cmc
insb
push
psraw
push
mov
push
fisubrs
lock
push
icebp
ret
xchg
push
pop
jns
in
xchg
inc
mov
aam
cld
in
test
add
call
cmpsb
lret
jns
mov
scas
sub
in
gs
js
adc
outsl
dec
and
jo
pop
incb
push
shrb
push
xchg
enter
sub
lahf
push
pop
les
pop
test
sbb
mov
add
clc
dec
imul
inc
fdivl
jbe
notl
xchg
pushf
inc
dec
pop
ds
punpcklbw
aaa
rorb
add
sub
jle
mov
inc
inc
or
jle
repnz
mov
arpl
sarl
push
xchg
lret
lahf
aas
aas
push
fcmovbe
inc
fisubs
in
jno
out
jg
add
jb
fldl
pop
lahf
adc
icebp
popa
inc
pop
lret
mov
dec
adc
dec
mov
ror
xchg
xor
or
imul
jmp
xor
repnz
in
pavgb
aas
push
aam
addr16
repnz
jne
int
push
scas
sub
and
lret
cld
cld
stc
xor
xchg
sti
mov
lret
sub
mov
sbb
xor
repnz
jae
pinsrw
scas
out
cmp
push
lods
aad
push
or
or
int
sub
out
sub
flds
jnp
mov
insb
scas
mov
negl
andb
jecxz
mov
inc
mov
repnz
xchg
into
jns
cmp
out
xor
stos
ja
fisttps
pop
mov
lret
cltd
and
xchg
push
pop
jns
sbb
jecxz
push
push
fistpl
loope
push
pop
jns
in
lea
addb
adc
aaa
push
or
fmull
jne
xor
repz
notl
mov
push
sahf
mov
shrl
sbb
pop
gs
push
lret
add
stos
xchg
push
out
lahf
pop
dec
and
or
shrb
mov
ljmp
push
sbb
xor
add
aas
jg
fs
xor
mov
cmp
add
lret
scas
clc
neg
jp
inc
out
push
iret
sti
xchg
scas
mov
pusha
pop
mov
pop
ds
cmc
mov
not
sti
or
arpl
das
lret
mov
frstpm(287
inc
out
fbstp
nop
out
mov
jbe
test
or
jecxz
push
pop
ficomps
xchg
lahf
mov
int3
mov
push
cltd
xchg
mov
scas
mov
pop
insl
out
lahf
dec
dec
aad
and
out
mov
cli
es
jb
sbb
scas
mov
inc
subb
rclb
rolb
adc
push
cli
in
sub
sub
inc
xchg
xor
xor
sti
dec
pop
xor
imul
iret
shld
xrelease
mov
sbb
repz
sahf
aad
mov
int3
in
fdivrl
fmuls
test
add
add
movsb
xchg
int3
out
lahf
pop
mov
mov
mov
repz
test
cmpsl
adc
aaa
adc
jo
addr16
das
aas
jg
out
movsb
pop
push
and
repnz
ljmp
inc
cmp
xchg
push
jle
and
or
das
ds
jnp
add
out
inc
cmp
ja,pt
push
sub
das
mov
xchg
fildll
repnz
push
or
addb
mov
in
cmp
mov
outsl
subb
adc
cltd
test
sub
xchg
mov
mov
push
pusha
insl
out
shrb
imul
dec
je
cld
stc
repz
lods
inc
mull
nop
mov
dec
sbb
aas
jg
adcl
mov
lods
cld
mov
fwait
jp
push
inc
dec
lret
hlt
sahf
sbbl
jb
sbb
jb
lahf
das
jg
jae
cli
or
cmp
jb
lret
out
cmpl
xchg
out
mov
fdivrp
std
mov
ret
icebp
outsl
pop
lret
cmp
lcall
in
jecxz
dec
ret
rcrl
sti
inc
xlat
incb
jns
xchg
push
mov
and
aam
shlb
pop
mov
mov
outsl
dec
inc
pop
mov
into
enter
loopne
outsl
mov
mov
adc
pop
pop
add
repz
into
scas
xchg
or
andnps
adc
repnz
addr16
ss
inc
pushl
sub
mov
imul
pop
in
pop
scas
mov
jmp
and
iret
pop
lods
mov
ds
xor
jne
paddusw
jns
add
sub
inc
ljmp
scas
mov
mov
fbstp
repnz
hlt
push
sbb
ja
scas
mov
lahf
orb
aad
dec
jno
adc
jg
stos
adc
or
lret
movsl
enter
lcall
incb
js
push
jg
shrl
repnz
pop
in
ja
cld
movsb
mov
daa
icebp
lret
mov
ret
pop
pop
mov
lcall
fldt
lods
dec
insl
inc
mov
mov
push
and
xchg
mov
ja
jecxz
jae
repnz
popf
int
xchg
test
mov
xor
cld
sbb
cmp
test
mov
das
lahf
aas
js
cmp
cli
cmp
xchg
sub
cmp
inc
sbb
push
in
ja
pop
mov
pop
mov
jns
xor
xor
sub
mov
jnp
pop
iretw
lahf
aas
ljmp
test
mov
shr
cld
stc
repz
lods
testl
icebp
test
in
and
inc
aam
mov
out
shrb
arpl
dec
cmpsb
cmp
stc
repz
push
dec
xor
xor
lahf
arpl
out
xchg
lahf
aas
jg
sub
imul
pop
jns
jg
rcr
cwtl
sbb
jge
mov
jns
xchg
push
insb
arpl
aas
repz
adc
inc
js
je
stc
mov
scas
xchg
or
outsl
iret
ds
jg
lahf
mov
xor
addr16
cmpsl
outsb
dec
popa
loopne
aas
jg
cld
inc
sub
fbld
sti
xchg
cmp
lahf
or
gs
in
out
mov
icebp
mov
add
das
or
int3
mov
sti
imul
imul
mov
pop
scas
mov
jne
sbb
jmp
xchg
notl
movsl
repnz
pop
mov
inc
lcall
rclb
popa
lret
mov
jecxz
adc
push
scas
mov
pushf
cmp
xchg
movsb
lock
cmc
repnz
xchg
das
cmp
mov
and
add
sti
movsl
lahf
adc
insl
scas
mov
out
lahf
aas
jle
dec
push
push
add
push
mov
subb
icebp
in
pop
popa
leave
je
push
push
adc
movsl
scas
push
inc
adc
sub
mov
cld
rcr
jle
les
jg
aas
mov
xchg
push
clc
in
sbb
sbb
scas
mov
sbb
sub
popf
orl
repnz
xlat
xor
pop
mov
cmp
adc
lret
push
cmpsb
aam
and
jecxz
xchg
sub
mov
popa
out
jns
stc
repz
jmp
cmp
mov
stc
rcll
jg
cld
in
cmp
xchg
int3
jnp
cmpsb
xor
in
xchg
lahf
xchg
ljmp
pop
jbe
aas
push
into
das
sbb
cmp
je,pn
xchg
fs
fimull
mov
jnp
das
jo
mov
cld
aad
push
repnz
dec
sarb
push
insl
and
lret
aad
cmp
mov
fiaddl
xchg
inc
mov
jns
pop
jecxz
push
cs
rcr
aaa
pushf
in
push
pop
cmp
jmp
scas
inc
icebp
enter
jns
insl
scas
xor
call
ffreep
scas
mov
scas
repz
iret
mov
fsubs
jl
adc
cmpsb
stc
data16
out
cmp
mov
lahf
aas
aas
adc
fistpl
or
repnz
xchg
iret
adc
hlt
les
push
and
repz
scas
mov
jbe
bound
rcll
pop
add
das
jg
fbld
psadbw
scas
fcmovbe
out
movsb
inc
jle
das
ja
lds
mov
mov
adcb
jne
outsl
lds
jge
popf
out
adc
pop
jns
lea
mov
mov
dec
fwait
xchg
jns
xchg
push
in
and
xchg
bound
push
divb
fdivrs
mov
jge
in
and
sbb
jbe
out
mov
pop
adc
lret
loopne
leave
cwtl
sarl
or
push
scas
jmp
cli
test
pop
addb
insb
sahf
dec
aam
cld
inc
clc
pop
mov
jne,pn
cs
fisubrs
xchg
mov
sub
xor
xchg
push
pop
jns
aad
jp
jg
std
mov
ret
pop
jns
frstor
cmc
lahf
add
fs
and
push
jns
xchg
push
xchg
addl
push
push
outsl
fxsave
in
push
pop
clc
shl
push
loopne
jg
test
mov
add
push
xchg
fimull
jns
repnz
jo
lahf
pop
sbb
xorb
das
stos
bswap
out
aam
fistpll
and
mov
scas
stc
test
xchg
out
add
subb
cld
stc
loop
inc
pushf
into
enter
push
add
cmpsb
movsb
loop
das
lahf
aas
mov
push
jns
fstp
iret
xchg
outsl
cmp
das
dec
in
push
pop
mov
mov
adcl
popa
add
ljmp
cld
stc
daa
push
gs
lods
fcomip
popa
inc
mov
aas
jg
das
cmp
push
add
dec
div
stc
repz
std
in
movsl
aam
cmpsl
jns
data16
imul
out
push
xlat
pop
lds
or
and
jg
cld
push
jne
mov
testb
movsl
xchg
iret
lahf
aas
or
js
cmc
sbb
lods
cld
stc
repz
sub
pop
flds
ljmp
adc
jle
mov
jecxz
inc
call
lahf
aas
aaa
cltd
nop
arpl
dec
push
push
ret
idivb
mov
sub
inc
mul
out
jg
fmul
fstpt
pop
scas
xor
xor
incl
pop
push
lret
iret
or
ds
pop
mov
xchg
ljmp
jmp
mov
xchg
cld
stc
repz
into
jp
pop
cltd
aas
jb
push
push
movsb
insb
insl
lahf
aas
jg
fmull
jno
out
dec
es
in
stc
repz
mov
test
xor
push
lret
cld
jecxz
cwtl
mov
sbb
out
jp
loop
jmp
add
pop
mov
sti
in
dec
xchg
enter
add
sahf
bound
mov
js
test
jp
xor
aam
and
push
pop
jns
sub
iret
jl
push
xchg
fs
and
push
pop
jns
or
fdivs
push
shll
mulb
std
jb
das
rcr
nop
fists
fildl
repz
std
dec
pop
repz
iret
adc
jg
xor
mov
jle
sub
and
stc
jecxz
test
stos
jmp
pcmpeqd
rol
pushf
dec
es
cld
stc
add
jo
lods
int
mov
repnz
jbe
mov
cmc
add
sbb
int
mov
in
ja
add
out
sub
daa
mov
xchg
push
pop
jns
iret
sahf
xchg
add
cmp
push
pop
jns
jecxz
cmp
adc
in
sub
sbb
mov
negl
lea
scas
cmp
loop
push
lods
scas
jle
imul
out
pop
sub
push
andb
pop
adc
fdivrl
sbbl
cmp
ret
nop
movsl
cmp
sub
cld
stc
repz
sbb
decb
ficoms
dec
cmpsb
fidivs
mov
lock
jns
xchg
movsl
ja
out
dec
pop
mov
adc
mov
dec
shrb
push
outsl
and
sub
out
test
pop
dec
sbb
call
or
sbb
pop
dec
mov
fwait
or
enter
xchg
jecxz
jecxz
and
imul
movsb
cld
aas
dec
daa
clc
lods
jg
add
push
pop
jns
in
xor
mov
push
pop
jns
sahf
data16
test
and
jns
xchg
adc
imul
das
push
ficomps
jecxz
mov
int
sbbl
sbb
cmp
outsl
cs
repz
cmp
ret
mov
dec
sbb
jle
mov
pop
subl
js
xchg
push
pop
int3
ljmp
jp
ja
mov
call
mov
cmova
cmpsl
sub
loop
ds
in
mov
stos
add
bound
scas
mov
iret
add
inc
lods
push
pop
inc
jo
test
mov
inc
loope
push
test
xchg
mov
mov
add
mov
xchg
sub
aad
jp
sub
ret
cmp
fldt
cli
sub
stc
adc
cmc
cmpsb
repnz
insl
mov
mov
sbb
push
jg
les
pop
mov
lret
icebp
jb
xchg
in
mov
and
push
std
sub
outsl
push
mov
ja
insl
or
push
pop
cmp
push
mov
push
add
iret
mov
pop
jge
cmc
push
jb
xchg
push
out
stos
mov
dec
jg
cld
ja
fdivr
xor
xchg
push
call
aas
shll
pop
jns
xchg
pusha
push
test
ds
out
lret
xchg
push
sub
fadd
adc
push
icebp
jg
lea
jmp
sahf
ljmp
test
lret
fidivrs
aad
outsl
inc
lahf
cld
stc
xor
mov
pusha
insb
mov
mov
mull
js
mov
inc
cmp
out
das
push
cmp
mov
fstpl
clc
repnz
popf
movsl
push
out
inc
cli
outsl
arpl
jns
mov
insl
fistpl
rclb
jg
aas
add
out
addr16
repz
lahf
lock
lret
movsl
inc
mov
push
stc
cld
stc
orb
pop
popa
cld
xchg
dec
ret
cld
lahf
jb
pop
outsl
outsb
aas
call
jle
shlb
lock
jecxz
mov
pop
fnsave
insb
cld
stc
repz
cmp
and
push
shll
loope
push
ja
jle
jg
add
testb
pop
pop
jl
in
xchg
mov
imul
pop
aaa
sub
out
dec
inc
into
mov
lahf
aas
jg
loope
sbbb
jp
out
leave
pop
popf
add
mov
sarb
jns
jle
add
test
clc
jns
repz
ret
pushl
ficomps
mov
cli
test
jle
cld
add
push
sub
iret
and
out
in
ja
dec
sub
into
jbe
addr16
jg
sub
insb
dec
sbb
push
callw
jle
hlt
arpl
lds
jns
xchg
ja
adc
jne
push
pusha
lcall
push
pop
cmpsb
adcl
jge
das
lahf
aas
jg
xchg
jp
dec
lods
pop
outsb
insl
std
bnd
clc
in
push
jp
xchg
out
sub
jg
cld
sarl
cs
xlat
cmp
ror
lahf
aas
mov
lcall
sub
sti
push
xor
out
movsl
fbstp
bswap
xor
das
es
add
xor
xor
and
jae
mov
in
out
hlt
bound
push
jnp
repnz
lahf
inc
ret
xlat
mov
test
pop
sub
imul
mov
jae
sarl
mov
pushw
out
iret
shl
lret
lahf
into
data16
cli
jp
jbe
ljmp
jecxz
call
dec
xchg
lahf
xchg
push
out
jle
repnz
dec
inc
imul
and
rorb
rclb
adc
and
add
sub
cmp
adc
push
and
ss
cld
scas
into
aaa
xchg
ja
cmp
sbb
mov
adc
in
imul
loop
adc
orl
aas
jg
cld
xchg
cmp
xchg
rcrl
rolb
lahf
cltd
fisubrl
in
in
jg
cld
push
jecxz
push
pop
pusha
cmpsb
out
xor
mov
and
ds
sbb
rolb
cmp
loop
cmp
cltd
lods
in
xchg
cltd
add
or
mov
sbb
stc
repz
mov
dec
leave
sub
cmpl
mov
aad
adc
movb
and
mov
dec
pop
jns
xchg
xchg
cmp
cmp
daa
push
mov
scas
ret
js
cmp
ds
jo
test
jae
pop
out
aas
das
sahf
int3
les
stc
repz
sub
repnz
das
jg
cld
fwait
or
and
inc
stos
or
adc
mov
rorl
cli
jnp
xor
sub
stos
ret
sbb
aas
jg
loopne
outsb
cmp
push
push
lret
addr16
pop
push
pusha
je
movsl
fists
outsb
rol
filds
mov
ret
lea
rcl
outsl
xor
ljmp
movsb
jg
popf
mov
das
aas
mov
scas
sarl
push
cmc
repz
pushf
inc
cmc
in
or
xchg
pop
rorb
stc
and
xchg
popf
movsb
inc
cmp
sub
jle
fidivrs
adc
cwtl
pcmpgtb
mov
dec
scas
mov
sti
and
add
inc
jmp
aas
mov
jo
jmp
xchg
lea
sub
jle
aaa
lock
mov
jle
popf
lcall
or
xorl
and
repnz
inc
pop
add
sub
ret
out
lret
sub
lahf
test
sbb
sahf
fidivrl
mov
or
roll
int3
cmp
jle
outsl
div
aas
in
cmp
or
sbb
stos
dec
loope
push
imul
in
push
ss
xchg
movsl
cmpsl
shlb
push
pop
cmp
cld
push
fstp
push
pop
jp
out
inc
jge
repz
out
pop
mov
jle
add
iret
mov
clc
pop
hlt
imul
cmp
stc
repz
int3
or
mov
sbb
sbb
test
pop
sub
push
scas
push
lret
sub
pushf
sbb
cli
in
cmc
push
inc
adc
shlb
in
ja
and
stos
nop
xor
mov
mul
pop
push
out
pop
ja
xchg
in
jo
xchg
push
pop
jns
fldt
lods
ljmp
xlat
rorb
sub
seto
inc
jle
loopne
aaa
cwtl
out
sub
aam
stc
sarb
das
faddp
and
out
jle
xor
rorb
insb
mov
dec
jmp
mov
test
jle
mov
or
push
jg
aas
mov
jecxz
in
pop
mov
sub
iret
lahf
pop
into
popa
xchg
dec
dec
pop
mov
xor
stc
rep
and
jmp
jno
ror
xor
aas
jg
mov
push
pop
push
fsubrl
cmc
lret
out
and
xchg
inc
fdivs
add
out
xchg
iret
jo
fcmovnu
pop
mov
loope
lret
pop
cmpsl
test
sub
push
push
add
or
dec
shrb
scas
mov
jae
shlb
imul
cld
jg
sbb
movsl
pop
dec
jle
xor
push
mov
and
pop
jg,pt
daa
xlat
sbb
inc
xor
nop
test
and
xchg
rorl
test
pop
inc
test
xchg
cmp
xchg
sub
rorb
or
in
xorps
icebp
out
lods
cs
cld
repnz
xor
push
fidivrs
sahf
mov
xchg
iret
icebp
in
mov
pushf
jne
dec
decb
in
sub
xchg
imul
sbb
in
aad
std
or
dec
pop
mov
aas
jg
push
cs
cmpsl
fwait
movsb
add
inc
repnz
iret
inc
pop
fisttps
push
or
gs
mov
jecxz
decl
pop
jg,pt
cs
xchg
inc
mov
mov
dec
push
sub
mov
xchg
sub
in
popa
fidivrl
add
out
pop
jg
test
fsubs
cld
stc
repz
mov
mov
loop
or
push
xchg
test
xor
xchg
ror
aas
filds
adc
xchg
in
mov
push
mov
scas
jl
cld
stc
jmp
imul
mov
mov
repnz
mov
aas
pop
dec
inc
push
cld
and
push
daa
loop
rsqrtps
hlt
aam
sbb
or
in
mov
sub
mov
mov
popa
xor
push
xor
fs
das
aas
jg
push
cld
bound
push
add
jns
xorb
cmp
push
xchg
push
ss
out
leave
adc
rclb
push
sub
mov
call
aad
scas
mov
lods
mov
test
jmp
lret
rorl
frstor
int
lret
inc
aad
xor
aaa
mov
sub
sub
mov
adc
jne
pop
ficomps
pop
or
jns
fisttpll
ljmp
inc
lret
xchg
push
pop
adc
adc
fdecstp
push
dec
pop
jge
imul
xor
iret
imul
jg
mov
mov
test
clc
adc
clc
movsl
or
insb
mov
jmp
pusha
fldl
cmp
lret
sqrtps
sub
adc
in
or
mov
pop
int
inc
scas
cltd
adc
lret
xchg
push
pushf
jmp
dec
sub
pop
jns
adc
and
rcr
mov
inc
sub
lcall
sub
aas
jg,pn
ds
mov
iret
mov
and
adc
or
lods
jp
xchg
dec
pop
xchg
sti
repnz
mov
cmp
cmp
scas
es
mov
out
fldcw
jg
inc
jbe
lret
sbb
insb
dec
stc
repz
cld
add
sahf
pushf
push
mov
fidivs
jo
cld
movsl
or
jecxz
cmp
stc
mov
sbb
into
daa
out
sar
jno
aas
aad
in
jg
or
out
fistpll
push
mov
int3
sbb
ds
xor
decb
lahf
inc
xor
out
jle,pt
fbld
addr16
lret
mov
faddl
lret
dec
adcb
es
add
mov
pop
ja
pop
jns
je
gs
jp
push
mov
xchg
sub
mov
inc
shrl
lret
mov
cmp
mov
mov
hlt
pusha
ret
jns
loopne
sbb
repz
in
pop
jns
xchg
add
cmp
mov
lock
jns
xchg
push
add
and
inc
ja
arpl
orl
sbb
iret
mov
test
aas
add
imull
iret
insl
dec
jecxz
pop
xchg
push
fdivrp
dec
xor
cmp
pop
dec
xchg
pop
jmp
int
hlt
in
lods
push
out
in
fwait
test
jg
cld
stc
sub
gs
cmp
outsb
add
jns
xchg
mov
or
push
mov
or
loope
loopne
mov
xchg
fimull
test
repnz
pushf
cmc
and
lock
adc
jnp
push
loope
jge
hlt
test
lahf
jge
xlat
shll
sti
sti
and
lcall
or
in
sub
dec
mov
mov
fstpt
inc
and
inc
cmp
jg
fisttpll
cmp
push
shll
lret
mov
sahf
xchg
and
inc
cli
repnz
ficomps
xor
into
pop
adc
mov
sbb
mov
leave
adc
cmp
jg
cmpsl
ds
push
outsl
in
pop
mov
test
sbb
cmp
scas
repz
das
into
sbb
cmp
scas
iret
mov
jge
mov
fistpl
insb
fistpll
call
and
repnz
faddl
shrb
gs
xchg
sbbb
dec
pop
mov
jns
cld
stc
test
mov
or
aad
jb
add
mov
rorl
in
jmp
sub
outsb
mov
lock
int
aas
aas
sub
stos
cmp
sahf
aas
lds
aad
pop
mov
iret
aas
dec
xchg
addr16
sub
ret
mov
or
jge
call
daa
aas
jne
push
in
xchg
sub
lods
or
or
out
iret
fisttpl
mov
dec
aas
and
dec
test
mov
fs
ds
mov
mov
cld
pop
bound
push
or
in
out
arpl
mov
jnp
leave
cld
sbb
jo
xor
push
stos
mov
iret
lahf
aas
jg
int
js
cmp
insb
and
shrl
push
sbb
pop
jp
shr
ret
aam
repnz
or
inc
mov
ja
cld
stc
add
jge
jmp
mov
ret
test
loope
mov
mov
das
push
mov
mov
mov
jns
dec
inc
in
push
fdivrp
iret
rorb
xor
fcoml
imul
push
pop
jns
movsl
in
xor
pop
sahf
push
pop
jns
insb
or
lahf
int
push
loopne
jno
sbb
aam
jb
xchg
ror
add
pop
xchg
pop
jle
repnz
and
call
mov
lock
push
cmp
repz
jns
cmp
inc
lahf
jmp
aam
daa
push
pop
pop
xchg
cld
ljmp
mov
adc
stc
repz
or
sbb
outsb
out
fs
mov
int3
lahf
aas
jg
jbe
mov
movsb
dec
lods
fs
out
lahf
jne
jbe
mov
mov
js
rolb
jae
adcl
push
mov
fwait
cli
rcrl
orb
test
lahf
aas
jg
and
es
mov
sub
stc
repz
fnclex
fstl
scas
imul
push
cs
fists
mov
xchg
lahf
aas
and
push
adc
or
jns
movsl
adc
hlt
filds
aas
jg
jle
jno
fsubrs
jmp
outsb
mov
xchg
cltd
push
mov
xor
repz
out
outsb
scas
mov
dec
fimull
pop
jle
push
dec
xor
jo
push
add
push
xchg
push
pop
jns
push
into
ret
cli
and
cmp
xlat
icebp
xchg
ja
in
pushf
push
aad
scas
cmpsl
mov
jns
mov
cmpsb
sub
nop
rorl
pop
jns
xchg
inc
pmaddwd
xor
rcrb
jns
xchg
push
fcmovb
stc
in
sbb
hlt
popf
xchg
ret
in
adc
adc
xor
xchg
ja
imul
jns
sti
add
sbb
fwait
daa
dec
jge
cltd
imul
das
sarl
pop
stc
pop
sbb
repnz
repz
mov
xchg
repz
pop
inc
inc
pop
fdivrp
and
push
outsl
sbb
pop
jg
cmp
mov
adc
or
jecxz
out
add
aas
testb
jl
fptan
mov
push
jl
idiv
mov
mov
into
xor
add
ja
popw
in
push
push
push
mov
ja
dec
add
add
sub
icebp
lret
xchg
or
icebp
fistps
adc
scas
jg
cld
stc
jg
notl
adc
out
add
mov
lds
sbb
pop
jl
xor
call
sbb
push
repnz
xor
dec
andl
jnp
lods
inc
aad
lret
sub
adc
loope
xor
repnz
add
fistps
adc
mov
mov
shlb
mov
out
pushf
bound
ret
fwait
cmpsb
cmp
outsb
loope
dec
pop
mov
loopne
iret
lahf
aas
cltd
cmp
test
in
push
lods
and
adc
nop
cli
imul
test
mov
mov
popf
mov
test
iret
lahf
aas
outsb
mov
add
data16
outsl
mov
cld
stc
repz
sbb
repz
add
aaa
or
pop
es
jmp
pop
pop
jns
fisttpll
and
add
adc
add
lret
xchg
push
movsl
mov
xchg
mov
push
pop
jns
mov
imul
loop
mov
jns
xlat
mov
mov
push
xor
test
in
ja
cmp
and
into
jg
add
push
pop
loop
into
jae
inc
sbb
cmpsb
out
hlt
in
lahf
scas
jle
mov
jg
cld
stc
mov
jnp
or
imul
aas
jg
std
xor
sub
scas
loop
push
mov
cld
stc
repz
inc
popf
xor
daa
lahf
jbe
icebp
movsb
loopne
pop
daa
mov
test
pop
repz
jecxz,pt
dec
or
gs
insb
in
iret
mov
movsl
cli
ds
test
inc
cld
stc
repz
ret
imul
notb
lahf
aas
jg
pop
scas
xchg
dec
and
repz
cli
stc
repz
loope
decb
xor
aam
push
imul
sbb
add
add
adc
mov
add
pop
out
pop
mov
adc
outsl
mov
xor
shll
ret
das
lods
adc
mov
lahf
cmp
scas
lret
mov
ljmp
mov
ds
xchg
jp
or
scas
mov
pop
aam
daa
mov
push
pop
and
in
sub
insl
and
cld
stc
mov
mov
je
jg
iret
lahf
aas
jg
jne
mov
sbb
fdiv
fildll
xor
sbb
fstl
mov
jecxz
das
add
pop
jns
xor
push
inc
in
inc
inc
loope
pop
jns
mov
jge
xor
add
imull
jns
xchg
ja
mov
out
mov
sbb
das
push
pop
mov
je
adc
xchg
xchg
inc
nop
mov
mov
xor
iret
xchg
xlat
sub
sub
lret
add
scas
mov
cmpsl
repz
xchg
jb
aad
cld
stc
repz
mov
test
jmp
aas
jg
xor
adc
push
and
sbb
pop
cwtl
je
in
xchg
mov
je
fists
and
cmpsb
in
push
pop
add
clc
mov
mov
lret
pop
jns
and
out
cmp
xor
outsl
mov
in
xchg
pop
fs
mov
in
ja
loope
js
lret
scas
movsl
into
std
lret
jb
mov
xchg
cmp
movsb
xchg
mov
push
mov
jae
add
dec
dec
sub
call
lret
xchg
push
es
je
ret
iret
push
aam
pop
daa
mov
mov
ffreep
pop
sbb
lock
shlb
cmp
lahf
aas
ljmp
xchg
and
popf
in
enter
gs
jns
cmp
jge
clc
adc
loope
outsl
dec
push
arpl
iret
xchg
aas
aas
outsl
push
xchg
ljmp
lds
stc
repz
ret
or
cmp
fdivrp
or
adc
insb
xlat
pop
cmp
fstl
ret
cmp
lods
pop
push
push
pop
jns
jl
push
xor
pop
push
ljmp
in
mov
mov
fstpt
jns
lret
xchg
cmp
lret
jae
repz
add
pop
add
dec
mov
cmpsl
comiss
jns
push
sub
addr16
dec
lcall
or
mov
xchg
push
pop
jns
cmovo
sti
cwtl
insl
xchg
sub
lods
jg
lret
loopne
sar
pop
sub
shl
iret
push
js
les
or
or
cld
stc
jae
adc
jo
imul
hlt
and
iret
lahf
aas
push
mov
mov
xchg
ds
mov
push
mov
addr16
scas
push
pushf
arpl
ret
xchg
pop
inc
pop
jle
sub
cmp
mov
dec
sbb
out
cli
outsl
adc
stc
repz
aad
push
mov
mov
add
bndstx
push
cmp
scas
in
aaa
pop
push
shl
out
xor
xor
bound
mov
jns
dec
outsl
mov
fcomps
imul
xchg
push
mov
fiadds
repz
jmp
iret
scas
cmc
jo
pusha
mov
jp
rol
lret
scas
mov
das
test
add
call
jns
pop
pop
jl
jecxz
xchg
je
stc
xor
cmp
xchg
push
and
ds
mov
adc
scas
lock
or
mov
sti
lcall
jnp
mov
sub
sbb
mov
cmpxchg
mov
inc
cs
xchg
xor
sub
or
inc
test
inc
mov
lret
out
pop
call
jle
jno
mov
into
stos
loopne
xchg
iret
clc
dec
cmp
das
scas
lea
or
jb
stc
repz
jl
or
mov
or
arpl
jg
cld
into
xchg
in
sub
les
pop
test
out
lahf
std
cmpsb
insl
adc
test
push
sub
stc
xor
push
and
dec
clc
int
jl
mov
or
in
xchg
jns
lahf
loopne
loop
push
fdivrp
scas
xor
and
mov
les
lods
xchg
sbb
fst
rolb
loopne
test
or
je
pop
jns
pop
insl
jmp
inc
fnsave
pop
and
stos
sti
jmp
shll
sbb
adc
jecxz
mov
lock
mov
leave
inc
int3
cmp
repnz
xchg
inc
mov
mov
sbb
sbb
cld
stc
repz
adc
test
popf
in
sahf
adc
cmp
and
or
subl
repnz
and
xchg
aas
sbb
xchg
push
pop
xorl
testb
and
push
sub
or
push
popf
mov
les
jns
out
in
add
les
sub
ljmp
test
pusha
or
aam
mov
mov
jg
xchg
mov
jg
scas
mov
sub
sti
sub
cli
repnz
mov
loope
mov
outsl
fdivrp
lods
repnz
jl
imul
in
rolb
inc
imul
mov
add
iret
push
xorb
repnz
jns
push
sub
mov
pop
popa
lret
pop
push
add
adc
adc
repnz
adc
inc
sbb
lret
fdivr
or
stos
xor
sub
sarl
das
out
outsl
dec
pushf
mov
xchg
add
aam
cmp
xor
add
cmpsb
push
sbb
sub
adc
sub
jg
mov
repz
scas
pop
mov
jns
popf
aas
mov
mov
sub
sbb
dec
xchg
ja
add
mov
cmp
cmc
lret
orl
das
adc
outsl
xchg
push
pop
jns
xorb
pushf
adc
lea
aad
repz
int
xor
in
fldl
shrb
fisubs
jle
jp
jp
xchg
lahf
aas
jmp
adc
rcr
scas
mov
cmp
nop
mov
lock
mov
cmpsb
mov
pop
sti
fisttpll
sub
mov
jmp
xchg
jg
jbe
aaa
xor
in
lret
ret
sbb
sbb
mov
scas
mov
imul
cmp
mov
push
lahf
or
lret
pop
inc
or
mov
scas
mov
lock
in
divb
adc
adc
pop
subl
scas
loope
mov
lret
mov
iret
lahf
aas
add
rcll
enter
mov
out
loope
and
pop
enter
dec
icebp
out
movsl
xchg
aas
jg
mov
orl
jno
repnz
fwait
mov
mov
das
scas
mov
movsb
sub
sub
adc
mov
cmp
sbb
loopne
mov
dec
enter
hlt
repnz
fisubrs
test
cld
stc
outsb
xor
xlat
push
test
cli
push
inc
dec
in
ja
inc
lods
cmp
in
scas
into
or
xor
jns
mov
mov
psubb
js
push
out
sub
bnd
out
add
hlt
cmc
jns
mov
fwait
mov
mov
dec
sarb
loopne
repnz
jnp
outsb
sub
stc
scas
xor
fs
and
push
push
lods
lods
xchg
mov
out
xchg
sub
mov
orb
iret
gs
dec
sahf
cmp
push
cld
inc
jnp
scas
aad
fsubp
xchg
sub
cmp
mov
out
pop
into
cmp
push
jg
sub
mov
xchg
push
pop
add
lcall
movsl
cld
jb
jns
inc
jp
sbb
repnz
jg
aam
aas
in
daa
xchg
lods
or
mov
pop
rcl
clc
addl
xchg
xchg
loopne
jp
shr
dec
add
dec
in
and
mov
rolb
add
mov
pop
pop
testl
loop
lret
addl
call
pop
inc
das
ja
lea
jno
jg
pushf
repnz
shr
jle
and
lcall
notl
daa
aas
int
int
ljmp
pop
jns
xchg
cld
mov
pop
push
cmp
aam
fsts
jns
das
pop
mov
popf
outsl
out
jb
jns
pop
push
data16
jecxz
cmpsb
mov
pop
pop
mov
mov
aaa
repz
lahf
push
cmp
popa
mov
cld
stc
add
fwait
xchg
test
gs
lock
cld
pop
pop
adc
xor
mov
add
decb
pop
out
mov
repz
into
cld
cmpsl
inc
push
dec
cmpb
jg
cld
cmpsl
inc
cmp
repz
ja
aas
mov
cli
sub
and
aam
or
or
lret
push
fildll
mov
dec
clc
and
rcll
lahf
jg
jb
push
ret
add
cld
stc
repz
out
push
sub
and
scas
mov
sub
dec
mov
jg
dec
mov
and
jns
mov
mov
mov
pop
rep
jp
nop
mov
xchg
and
cmp
adc
inc
cmp
xlat
rcrb
outsb
mov
clc
repnz
outsl
mov
dec
pop
pop
add
fdivrp
repnz
mov
push
dec
inc
jmp
pop
jns
xchg
and
cmp
cmp
adc
pop
sbb
pop
lahf
aas
dec
mov
jbe
mov
loope
sbb
mov
jns
test
lret
inc
or
mull
jns
xchg
sub
imul
dec
jg
mov
fisubl
das
test
pop
pop
in
cs
xorl
call
out
das
inc
int3
aaa
pop
mov
loop
jb
xchg
push
popf
in
mov
or
lahf
sub
sbb
scas
loope
jl
jg
js
lahf
dec
int
xlat
enter
pop
lcall
aam
jg
add
dec
daa
hlt
in
pop
subb
outsb
jg
cld
stc
fstp
inc
jle
sub
roll
pop
ds
lret
iret
lahf
aas
leave
jmp
aas
mov
nop
arpl
pop
jmp
cmp
inc
push
push
pop
jns
and
mov
call
xor
pop
jns
xchg
mov
aaa
jns
fbstp
fcmove
cs
xchg
push
mov
ret
mov
scas
mov
inc
das
xchg
push
pop
jns
icebp
adcb
pop
dec
push
dec
mov
fsts
jns
ficomps
cmc
in
cmp
shr
pop
jns
xchg
push
andb
fcmove
mov
xchg
push
pop
xchg
or
leave
je
xchg
ja
pop
andnps
dec
and
mov
jl
pop
pop
jns
mov
sub
ret
subl
adc
in
lret
jno
jle
cld
mov
or
cmpsl
inc
sbb
jg
sbb
sti
popf
fdivrl
pusha
and
addr16
add
out
pop
xchg
inc
mov
lret
imul
dec
pushf
xor
scas
adc
fdivrl
or
clc
sub
mov
add
aaa
xlat
iret
push
sbb
mov
aaa
push
test
lcall
pushl
popa
loopne
repnz
cmp
mov
je
pusha
idivb
in
xchg
sbb
ja
in
popa
adc
mov
out
daa
xor
call
repz
adc
adc
aaa
fldenv
cld
stc
mov
fstps
adc
repnz
sub
push
out
lahf
aas
lret
in
sub
dec
mov
in
rep
stos
push
jge
jae
sub
lahf
pop
mov
sbb
cmpsl
inc
rorb
repnz
xchg
out
ror
cmpsb
sub
sti
pop
xlat
jbe
pop
scas
mov
das
jne,pt
bound
out
aas
mov
and
or
aas
cld
inc
js
mov
lcall
dec
das
lahf
aas
jg
int3
popa
std
xorb
xchg
sbb
out
xchg
mov
dec
outsb
aad
xchg
jb
and
lret
shr
mov
sub
movsb
push
fidivrs
dec
xchg
mov
in
jg
or
mov
and
sub
pushf
or
xchg
push
xchg
pop
or
mov
lea
out
pop
jae
stos
pusha
xchg
inc
out
ds
mov
or
lahf
aas
jg
mov
ja
jo
mov
test
decl
pop
pop
push
jo
out
nop
jecxz
xchg
mov
cmp
clc
repnz
in
or
dec
shrb
fisubrl
test
sti
nop
icebp
repnz
into
rol
je
jns
sbb
mov
sahf
sbb
xchg
jl
dec
mov
add
push
iret
lahf
aas
jg
andl
jmp
cld
stc
repz
inc
insl
mov
sbbb
in
mov
cli
jle
imul
frstor
cld
stc
xor
mov
cmpsl
fsubs
jo
jg,pt
xchg
jbe
shlb
mov
mov
mov
pop
jle
pusha
mov
lahf
jmp
add
lret
ljmp
adc
sbb
xor
sti
push
and
scas
mov
fstps
pop
mov
and
sbb
sub
mov
iret
scas
mov
shrl
sbb
shrl
mov
aas
push
push
and
insl
push
aad
inc
dec
outsl
sub
imul
rorl
cld
in
ljmp
outsb
movsl
lock
popa
jl
divl
dec
aas
sbbb
jne
jecxz
aas
jg
into
fbstp
sub
pop
rorb
sarb
xchg
call
adc
scas
cwtl
repnz
mov
rol
sub
mov
jg
scas
mov
xor
xor
filds
iret
aas
movsl
mov
push
jns
in
in
pop
in
jns
test
xor
xchg
dec
ret
dec
mov
ja
pop
lods
push
data16
xchg
scas
mov
sub
aas
jg
mov
pop
pop
mov
subl
jg
fistps
mov
dec
js
rep
cmp
push
das
adc
outsb
jo
outsl
unpcklps
and
sbb
in
rclb
cmp
inc
push
outsl
jg
clc
sti
adc
adc
jl
test
repz
lahf
mov
mov
aam
cmpsb
cli
scas
push
stc
cld
stc
into
xor
rorb
push
mov
jns
popf
das
xor
mov
iret
gs
push
dec
shll
jle
cld
stc
repz
jne
dec
stc
daa
pop
addr16
test
int3
iret
lahf
aas
jg
inc
aas
pop
fcoms
pop
std
out
mov
jecxz
cld
stc
repz
iret
inc
inc
dec
movsl
mov
fistpl
mov
stc
xor
jo
orl
sbb
jno
iret
lahf
aas
fsubl
and
add
mov
out
sahf
aas
mov
mov
fidivrs
repnz
outsb
das
push
into
daa
add
pop
outsl
hlt
cmp
hlt
ret
sbb
inc
sub
pop
jge
fiadds
stc
lret
sub
pop
add
lahf
fprem
lret
es
ljmp
rcr
sbb
fdivr
repnz
cli
imul
cs
loopne
cs
jg
add
pop
or
lds
pop
dec
iret
scas
movsb
das
sub
ja
xchg
ret
in
xchg
or
xlat
adc
cmpb
clc
lret
iret
les
cmp
xor
outsb
stc
repz
push
imul
int3
dec
lds
push
jle
cld
and
fs
fiaddl
rcrb
mov
xchg
mov
jns
je
mov
cmp
repz
adc
pop
jns
test
ja
pop
dec
jge
mov
int
jno
xor
or
scas
sbb
push
mov
xchg
push
pop
jns
mov
scas
xchg
cmpsl
cmp
lock
pop
jb
lods
mov
pop
mov
xchg
in
fnstcw
jle
js
push
fildl
inc
sarl
mov
fs
xor
iret
lahf
movsb
pop
icebp
dec
in
ds
xor
test
mov
jecxz
sub
adc
icebp
das
push
jle
dec
je
push
xor
lods
mov
aaa
jecxz
repnz
iret
dec
inc
stos
adc
cmpsl
jmp
sub
and
jmp
dec
sub
inc
lods
inc
dec
insb
mov
lds
or
pusha
jp
lret
sbb
aam
jns
js
mov
aas
add
mov
sbb
inc
stos
subl
int
mov
jo
adc
pop
int3
inc
jmp
outsb
jb
xorl
iret
mov
mov
mov
out
xchg
pop
or
call
and
scas
mov
pop
scas
movsl
pop
leave
sarl
mov
pop
adc
leave
xchg
outsl
fildll
xor
push
orl
addr16
scas
mov
nop
add
ljmp
mov
push
pop
test
fdivrp
mov
pop
cli
out
mov
xor
mov
inc
scas
in
xor
cltd
jns
pop
iret
lahf
pop
adc
xchg
mov
imul
or
out
sti
cmp
xor
ljmp
outsl
mov
or
jg
out
dec
notb
testb
pop
inc
mov
cwtl
pop
jns
lret
sbb
lcall
sub
mov
jg
pop
int3
sbb
jg
insl
dec
out
lret
loopne
push
into
loop
std
repnz
repz
lret
push
sarb
lds
jl
mov
or
iret
lahf
aas
jg
ds
xchg
mov
repz
jmp
cmp
sbb
mov
cmpsl
enter
out
std
rolb
or
in
mov
mov
push
rsm
cmpl
std
push
fidivrs
push
mov
jnp
pop
xchg
sub
push
pop
jns
punpckhdq
mov
lret
stos
scas
cmc
lret
xchg
mov
or
sub
std
sub
dec
das
dec
cmp
inc
cs
clc
add
jmp
xchg
mov
mov
jl
fmul
cmc
jb
xchg
popf
in
fmull
sbb
jbe
repz
inc
sbb
ss
sbb
std
repnz
test
mov
fimull
fdivr
adc
in
into
cmp
test
push
xchg
fidivrs
cld
stc
outsl
rcll
sbb
sar
jmp
ret
sbb
in
ljmp
push
add
jns
popf
loopne
fwait
bound
adc
push
add
xchg
push
pop
mov
push
lcall
push
pop
jns
stos
push
aaa
jnp
aam
cmpsl
mov
jns
ja
fisttps
dec
ret
sub
jns
xchg
shrb
dec
pusha
lahf
jb
les
rclb
push
sti
ucomiss
ret
mov
xchg
push
icebp
stos
call
sub
cli
in
cmpsb
aam
push
lods
outsb
pop
mov
jae
push
mov
das
mov
insb
das
xor
pop
push
fsubp
xchg
sub
dec
pop
xchg
fistpll
clc
push
xchg
in
sub
loope
cs
outsb
out
clc
repnz
imul
pop
jo
cld
cld
stc
repz
xor
dec
std
add
cmpsl
jns
or
scas
pop
push
fwait
cmp
jg
inc
pop
les
js
mov
repz
lahf
leave
push
push
imul
daa
sub
jg
cld
stc
stos
enter
in
mov
pop
pusha
push
inc
ja
mov
cmc
pop
stos
fdivrl
pop
jns
xchg
xor
movsl
into
jecxz
lret
xchg
dec
jns
xchg
push
xor
addr16
jmp
jmp
xchg
in
push
pop
js
or
sub
cmp
inc
push
push
push
mov
outsb
scas
pop
lea
stc
lods
das
pop
out
fs
sub
ffree
adc
das
dec
push
iret
dec
insb
jg
outsl
icebp
sub
xchg
xchg
mov
and
call
sbb
out
iret
lahf
pop
or
lods
lcall
jnp
test
scas
or
in
aas
mov
fdivrp
inc
popa
subb
sar
ljmp
xor
cs
icebp
push
scas
daa
inc
xchg
out
pop
cld
cmpsl
imul
je
das
in
add
cld
test
dec
cmp
jns
out
and
ds
movsb
nop
dec
jg
cld
stc
icebp
loopne
lods
or
lds
stos
hlt
out
iret
lahf
aas
das
aad
int
shrb
imul
stc
repz
in
inc
jb
mov
in
xor
jg
ret
or
xor
inc
int
lock
fnstcw
test
repz
lahf
aas
mov
call
shlb
ljmp
mov
jnp
xor
lock
movsb
mov
jle
in
lcall
stc
jo
sub
sub
lods
je
inc
xchg
xchg
dec
mov
xchg
dec
xchg
jg
push
sahf
gs
mov
stc
xchg
hlt
enter
push
lock
push
loop
fsub
and
cltd
cld
or
cs
lret
iret
add
lea
pop
cli
add
add
pop
scas
mov
mov
outsb
lcall
repnz
push
lcall
stos
push
sbb
mov
xor
aaa
dec
pop
movsb
sub
mov
sub
cltd
out
add
xchg
clc
mov
shrb
icebp
mov
xor
mov
push
cmpsb
aas
lret
push
out
jnp
jns
lret
mov
lcall
aas
scas
sub
jle
pop
inc
iret
mov
out
inc
mov
popf
int
add
pushf
fucomip
pop
mov
movsb
jg
sti
cmp
push
lods
pop
stc
repz
mov
xchg
lods
ss
mov
cld
mov
pop
test
adc
rclb
data16
xlat
jne
xor
fldl
jmp
scas
out
test
in
cld
stc
and
movsl
cli
and
sub
iret
lahf
aas
jg
ss
outsb
in
adc
pop
jae
call
out
or
mov
jecxz
mov
aas
jg
jnp
pusha
mov
es
mov
mov
std
adc
pop
mov
subb
jge
lahf
jmp
lods
mov
mov
sbb
stc
repz
imul
iret
cltd
lcall
aas
scas
cld
mov
pop
cs
mov
rolb
loop
iret
fcmovnu
mov
repnz
cs
cld
stc
repz
xor
adc
mov
ret
xor
xchg
mov
pop
lock
mov
dec
pop
aaa
dec
mov
dec
dec
cmp
xchg
sub
ds
pushf
lcall
jge
jmp
filds
aas
or
xchg
inc
or
loopne
cmp
repnz
movsl
push
mov
es
mov
lret
mov
jg
scas
pop
push
cmp
lret
lcall
xor
cmc
jp
cli
div
repnz
outsl
js
inc
mov
fsubp
in
out
int
sbb
jle
movsl
jns
xchg
push
cmp
lahf
das
pop
mov
adc
sbb
lret
repz
pop
mov
int
pop
pop
mov
xchg
pop
ss
cld
inc
fmuls
pop
dec
push
and
add
pop
jle
fs
je
mov
xor
xchg
or
or
adc
sti
mov
rorb
lea
push
jge
push
jle
loope
popa
out
lahf
aas
adc
mov
mov
cld
stc
repz
mov
fincstp
call
dec
test
mov
mov
jecxz
psubusw
cld
fildll
ss
sbb
lcall
aad
and
lret
or
lock
iret
lock
push
psrld
or
mov
dec
cmpsl
sub
or
cltd
lahf
cmpsl
rcl
jg
push
mov
jl
jnp
push
adc
lahf
aas
push
add
insl
adc
pop
jns
fstpl
popf
insb
sub
jno
fstl
pop
cs
adc
add
jns
sbb
shlb
lods
xor
sbb
int
or
lret
pop
inc
outsl
into
loope
and
das
scas
mov
and
clc
cmp
jg
mov
ja
testb
aad
fcompl
das
lahf
pusha
add
inc
dec
scas
repnz
out
xchg
pop
push
adcb
jg
addb
fstpt
arpl
out
mov
adc
rol
xor
stos
pop
pop
icebp
repnz
data16
cmpsb
mov
or
jmp
je
xchg
jp
push
ret
push
stc
repz
mov
rolb
out
outsl
loopne
jg
cld
jne
mov
push
sub
dec
jle
push
jno
lahf
aam
stos
mov
shll
roll
push
pop
jns
pop
add
add
gs
aam
and
aas
aas
ret
into
sbb
jnp
aaa
push
dec
scas
aaa
out
push
lret
or
fwait
in
outsl
or
repnz
cli
cmp
imul
lretw
xchg
das
scas
bound
popa
scas
ss
pusha
jns,pt
cmpsl
icebp
jno
aaa
jg,pt
repz
nop
push
pop
pop
in
push
pop
push
push
xor
pop
or
pop
jns
pop
ret
jb
inc
enter
sub
in
or
mov
stos
nop
scas
jg
cld
stc
cmc
push
lods
into
fcmovb
out
gs
fidivrs
out
lahf
aas
subl
mov
in
dec
addr16
cld
stc
repz
jno
push
xor
test
push
cmp
jle
xorb
xchg
ret
inc
in
loopne
fmul
pop
and
push
pop
jns
aaa
mov
lahf
push
rcll
sbb
test
sub
xchg
sbb
adc
andl
sahf
cmp
aas
sbb
enter
icebp
mov
lret
mov
rol
hlt
dec
or
repz
fidivrl
call
idivb
jg
cld
push
and
ret
ljmp
arpl
iret
lahf
daa
or
movsb
cmp
in
cmpsl
fnstsw
stc
insl
adc
das
sbb
out
cmp
push
mov
or
ret
sbb
addr16
push
pop
jo
scas
sti
cs
dec
test
inc
jns
lret
popf
shlb
cmc
inc
xor
cld
xchg
clc
add
inc
pop
xor
stos
sbb
repnz
mov
lock
adcb
mov
in
lret
pslld
mov
jae
xor
incb
mov
in
fisubrl
out
push
iret
scas
lret
add
in
in
lret
out
in
mov
popa
xor
out
call
push
ret
enter
hlt
das
xor
adc
and
push
es
dec
pop
icebp
or
mov
andb
jmp
mov
pop
out
js
or
mov
insb
jb,pn
mov
repz
pop
hlt
xor
rclb
xor
add
ret
cmpsl
stos
mov
pop
cmpsb
nop
push
int3
adc
into
sbb
test
loope
push
jmp
sbb
das
push
pop
jns
xor
popf
mov
ds
decl
int
jl
lahf
out
xchg
push
mov
aad
cmp
stc
repz
mov
cli
imul
lahf
aas
jg
cld
jns
jg
push
sub
ds
fldl
lahf
xchg
xor
fdivrs
inc
call
outsb
movsl
sub
jg
icebp
iret
ud2
mov
dec
roll
out
iret
aam
aad
lahf
pop
inc
dec
push
and
pop
dec
js
ss
xchg
imull
jge
push
or
mov
cmp
cmp
jg
add
icebp
mov
dec
ret
les
add
movsl
mov
pop
lcall
jle
std
iret
aas
xchg
jno
lahf
aas
pushl
xlat
es
subl
iret
dec
fwait
dec
leave
xlat
sub
ljmp
movsl
icebp
shrl
idivl
sahf
cwtl
mov
xchg
push
pop
out
pop
test
mov
or
inc
cld
jb
adc
out
loopne
xchg
out
cmp
cld
dec
dec
jle
fs
mov
mov
js
mov
xchg
push
fs
in
xchg
fldt
in
mov
ja
pop
jae
aam
in
or
cltd
mov
cs
push
pop
jns
mov
shll
das
xchg
stc
scas
mov
push
sahf
pop
in
mov
mov
sub
mov
inc
sbb
sub
xor
jns
jp
xor
outsl
cmp
xor
in
push
lret
sbb
adc
popa
xchg
push
fdivrp
fwait
mov
loop
jb
fstpl
push
fcomip
mov
icebp
fidivs
inc
mov
push
fidivrs
jl
jg
sahf
push
imul
imull
aas
pop
in
lock
jno
shll
push
mov
les
test
pop
jmp
mov
stos
push
div
out
scas
mov
sub
das
out
jno
call
nop
sub
or
and
xor
repnz
imul
mov
int3
jp
cmp
dec
mov
mov
jns
lret
pushf
sub
ret
mov
cmp
adc
stos
outsl
mov
mov
out
cmp
and
inc
movsb
inc
pop
pop
out
ds
fldenv
sbb
pop
mov
subl
mov
sbb
sahf
cmpsb
push
jnp
repnz
scas
orl
fmull
out
fbstp
scas
mov
pop
xchg
mov
nop
cwtl
out
repnz
aaa
pop
sbb
filds
xor
sarb
sub
jnp
sub
lea
je
or
popa
mov
in
push
pop
xor
outsb
dec
and
pop
jns
loop
mov
lcall
or
wrmsr
mov
and
sub
pop
pop
outsb
xchg
xor
inc
jo
ds
pop
push
repz
std
adc
aas
adcl
sbb
jns
push
lods
add
mov
jns
lahf
out
fcomp
jge
fs
rclb
daa
in
nop
outsb
xchg
mov
lcall
clc
sbbl
repnz
jle
adc
in
inc
sub
add
out
xchg
sub
fs
sti
push
sti
push
into
sub
bound
jg
adc
addr16
lock
sti
repnz
fwait
mov
xchg
lret
pushf
jge
cld
cmpl
or
aas
rorl
iret
lahf
aas
mov
inc
push
aas
lock
jecxz
rol
js
aas
pop
jmp
xchg
cli
repnz
ds
stos
fbld
std
cli
cld
stc
repz
aaa
mov
mov
add
int
outsl
ret
aas
and
add
sbbb
out
xchg
lahf
aas
scas
ror
mov
aad
fnstenv
test
cmp
stos
dec
jne
test
insb
add
and
cmc
jae
lcall
xchg
push
pop
jns
sub
jp
mov
cmp
in
jbe
push
rcl
jp
push
cltd
enter
pop
jns
xchg
lods
loope
repnz
pop
adc
adcb
push
pop
xchg
ljmp
xchg
cs
xchg
push
pop
jns
sbb
shll
lds
in
cmc
lret
in
push
test
jge
arpl
xchg
jns
or
mov
jnp
xor
push
ret
mov
shll
dec
cmp
repnz
mov
inc
push
cltd
push
sub
mov
inc
sbb
cld
pop
pop
push
jge
clc
loope
repnz
xchg
into
jae
ljmp
fadds
pushf
xchg
repnz
rcrl
add
cmp
push
lea
xchg
inc
adc
add
dec
ja
mov
stc
cmpl
mov
mov
jg,pt
cld
inc
and
lock
and
cmpsb
mov
iret
pop
sbbb
subl
lret
subb
or
adc
jg
push
inc
jmp
stos
sub
shl
out
fwait
push
ss
fwait
imul
dec
jle
jne
dec
xor
cld
cld
mov
fidivrs
aad
or
cld
stc
push
jmp
mov
out
int
sub
hlt
push
pop
add
mov
jns
xchg
ja
iret
or
and
xor
pop
cmpsl
lds
lret
xchg
push
pop
pop
adc
cli
mov
mov
pop
jns
ret
push
mov
and
ficoms
pop
push
pop
jns
xchg
mov
adc
out
xor
mov
jns
xchg
push
xchg
push
cmpsl
rcr
cltd
push
dec
das
jo
in
push
pop
stos
lret
icebp
in
sbb
cltd
pop
das
push
pop
jns
and
mov
cs
jne
inc
das
jl
add
in
mov
out
dec
fwait
out
xchg
push
aas
mov
dec
into
test
add
lahf
subl
inc
cs
js
std
jge
stc
mov
mov
mov
in
jnp
sbb
and
pop
push
mov
push
ds
mov
arpl
cmp
fmul
shll
push
fdivrp
jb
lds
gs
mov
das
adc
push
jb
in
mov
in
mov
repnz
fiaddl
adc
scas
jne
pop
xchg
mov
sub
shlb
jg
scas
mov
mov
mov
jmp
mov
int
movsb
sahf
cmpsb
fimull
sub
repnz
mov
sbb
orl
mov
cltd
and
cli
fdivr
fwait
in
push
pop
dec
subb
stos
std
pop
inc
mov
mov
pop
fucomip
sbb
jnp
sub
jns
insl
popa
cmp
aas
xor
and
lret
pop
ja
jno
les
test
mov
iret
xor
in
pop
sub
xchg
and
cmc
xchg
fisubs
icebp
lret
out
lahf
pop
std
insb
lods
dec
frstor
call
test
and
push
ja
lcall
test
aas
jg
rcrl
lcall
out
ror
into
sarl
outsb
cmp
loopne
mov
stc
repz
ljmp
loopne
das
lahf
pop
dec
in
mov
call
pusha
lret
out
rol
jle
push
pop
ret
cs
divl
and
sub
outsl
in
in
in
push
pop
add
dec
lahf
fwait
add
sbb
xor
into
mov
addr16
scas
xchg
mov
xchg
push
scas
pop
inc
dec
fdivl
jl
jle
cld
cmp
fdivr
ds
out
in
dec
movsb
pop
movsl
in
lahf
aas
stos
pop
lret
std
push
inc
repnz
lahf
or
outsl
jnp
aam
lock
or
xor
jb
loope
cld
stc
mov
xor
xchg
aas
mov
shll
sub
jns
lahf
pop
mov
loopne
mov
std
add
jb
dec
xchg
bound
fidivrl
pop
and
lret
mov
sub
inc
outsl
ret
aam
lret
pop
adcb
jecxz
and
xchg
mov
les
fld
in
dec
adc
mov
sbb
cmp
sti
dec
adc
lret
cmpsl
fbld
xchg
xor
enter
scas
mov
push
dec
in
dec
adc
pop
repnz
clc
in
dec
std
arpl
sub
xchg
push
fdivrp
and
jecxz
dec
cmpb
daa
lods
sub
add
rorl
mov
cld
into
jns
inc
lea
mov
sub
fldcw
iret
aam
cmp
mov
push
push
aas
repz
cld
repnz
push
push
adc
outsb
cwtl
insl
leave
inc
sub
das
lock
inc
mov
mov
ror
out
movsl
cmp
cmp
sbb
push
dec
in
sbb
push
pop
aad
inc
xchg
dec
pop
xchg
push
pop
jns
flds
ret
push
add
jg
dec
in
xor
hlt
ljmp
aam
mov
push
je
stc
repz
jle
sub
arpl
jg,pt
push
and
pop
sarl
lock
push
fdivrp
or
int
scas
pop
hlt
stc
mov
arpl
in
pop
clc
and
push
sub
outsl
in
push
hlt
mov
fiaddl
sahf
mov
sbb
je
stc
rep
adc
xchg
sahf
mov
add
jg
cld
dec
nop
xchg
pop
xchg
call
das
and
mov
jmp
stc
repz
es
jo
pop
ret
lret
xlat
jno
pop
cwtl
dec
pop
jle
adc
or
mov
lahf
lahf
aas
or
outsl
idivb
test
popa
loope
pop
jle
mov
fbld
jbe
jbe
cmp
jg
mov
push
fsubr
mov
rcrb
push
push
jecxz
jns
xchg
mov
adc
cld
pop
inc
fwait
jb
out
jb
xchg
push
mov
gs
repz
pop
or
sub
cld
inc
lods
sbb
add
test
push
cmp
push
add
rcrb
das
mov
lahf
cld
cmc
push
int3
stc
repz
dec
jg
les
lock
jg
mov
inc
lods
je
pop
iret
cmc
out
and
sbb
inc
mov
jns
in
dec
adc
adc
jb
sarb
aas
jg
add
cmp
cmp
mov
aaa
in
mov
pop
pop
and
push
fimull
clc
pop
arpl
lret
out
gs
mov
add
movsb
mov
iret
and
sahf
aam
xchg
jecxz
lcall
sbb
cwtl
out
mov
cs
push
jl
lret
sub
repz
ljmp
push
lods
aas
jg
cld
mov
sub
in
cmp
das
lahf
xor
mov
pop
in
jp
jmp
out
adc
cmp
sub
repz
loopne
out
loop
inc
fs
adc
ja
jle
pop
cmpsb
aas
pop
out
gs
and
in
cmpsl
pop
pop
das
push
add
ds
fsub
sbb
in
addr16
subb
xchg
loop
pushf
jl
inc
fists
sub
mov
pop
out
in
cmc
pop
in
dec
int3
sbb
int3
stc
cmp
mov
jge
jb
push
je
scas
in
idiv
enter
ficomps
dec
mov
push
pop
jns
push
lret
loopne
mov
les
jmp
xchg
and
movsb
lds
inc
mov
je
push
jl
arpl
sub
sahf
outsl
add
test
xchg
ja
pop
or
imul
ret
mov
pop
jns
cmp
inc
out
xchg
mov
mul
xchg
xchg
push
jmp
jnp
mov
push
icebp
jg
sbb
lahf
push
mov
sahf
scas
mov
ret
sub
negl
hlt
sub
push
repnz
lret
sub
push
dec
pop
xor
das
scas
mov
leave
aas
push
gs
xor
pop
test
das
mov
sub
mov
in
repz
jle
das
je
cwtl
jb
and
repnz
aas
push
dec
iret
test
scas
push
xchg
into
arpl
fsts
pop
pop
jns
inc
adc
xchg
fnstcw
sub
daa
sbb
ror
out
into
push
dec
jne
jle
cld
stc
fildll
xor
mov
lds
push
dec
jnp
jle
lahf
pop
or
dec
pop
out
inc
das
sub
iret
xor
scas
aam
adc
sbb
cld
adc
iret
pop
adc
and
push
mov
leave
fldl
xchg
push
fiadds
call
jmp
pushf
jns
shrb
mov
cmp
in
mov
clc
std
xchg
aas
pop
in
mov
mov
cmp
vmaxsd
das
scas
jmp
pop
jecxz
das
rcll
lahf
add
sub
fistpl
scas
push
stc
jp
cmp
adc
jnp
pop
pusha
mov
js
inc
popf
or
mov
xor
out
into
mov
and
pop
push
or
sub
div
lret
xchg
pop
mov
stos
iret
std
repnz
clc
pop
rcr
pop
xchg
xchg
push
popa
in
repnz
mov
in
mov
stc
add
mov
xchg
mov
scas
mov
rorb
dec
outsb
frstor
cmc
out
out
pop
mov
xor
or
mov
fwait
adc
mov
nop
outsl
mov
fs
xchg
push
fisubrs
add
and
adc
pop
xchg
mov
push
sub
scas
cld
scas
push
add
in
sub
lcall
pop
clc
div
mov
and
xor
adc
stc
repz
popa
and
cs
fs
cld
jg
and
adc
sbb
int3
out
lahf
aas
js
ret
mov
or
repz
ret
fldenv
pop
fisubl
subl
out
push
jg
aas
mov
xor
out
rorb
sbb
popa
sub
cld
stc
mov
out
mov
icebp
flds
jno
xor
lret
iret
lahf
aas
cmp
adc
aaa
hlt
cmp
ja
xchg
ja
loope
dec
lret
movsl
mov
push
pop
jns
sbb
insb
jno
adc
aam
ljmp
lcall
hlt
cmpsl
hlt
xchg
dec
sub
cmp
ret
in
sub
pop
cmp
jo
push
stc
cld
leave
inc
xor
movsb
sbb
inc
lahf
stc
repz
cmp
outsb
fnsave
mov
aas
jg
cld
and
or
ss
fidivrl
xchg
icebp
into
mov
dec
push
jge
testl
mov
mov
fdivrl
lahf
aaa
mov
lret
lahf
mov
sub
je
aas
cmp
repz
ljmp
sbb
pop
scas
push
dec
decb
stc
sub
pop
stos
mov
insb
aas
mov
ds
lock
ljmp
out
sub
lret
enter
xchg
ja
ljmp
rorb
push
pop
jns
jecxz
xor
ss
lret
stc
dec
jge
in
mov
and
mov
sahf
jp
pop
jg,pt
imul
les
outsb
nop
add
cwtl
inc
jecxz
mov
std
repnz
lahf
jg
ja
mov
cli
add
mov
adc
or
mov
inc
outsl
lahf
pop
dec
jg
fs
mov
enter
xchg
pusha
sti
sbb
out
adc
mov
in
iret
lahf
lea
mov
clc
xorb
ljmp
sahf
jo
add
dec
cmc
in
shlb
mov
lock
push
aad
mov
mov
jp
pop
mov
fxch
js
fiadds
lret
xchg
ror
sub
imulb
push
fsubp
inc
repz
push
inc
incl
pop
xlat
jb
adc
stc
cmp
dec
or
and
in
ror
mov
iret
aas
lea
cmpsb
std
pop
sti
dec
push
cmp
cli
in
out
cmp
mov
repz
jle
je
mov
lea
jg
cld
notb
cmpsb
cmp
jne
bound
test
out
lahf
cmc
push
insl
stc
outsl
mov
lret
xor
aad
jg
cld
stc
in
aam
insl
mov
jnp
xor
mov
das
inc
xor
es
ret
ljmp
mov
pop
aas
push
cld
stc
repz
outsl
pop
inc
xor
pop
sbb
fsubs
mov
lock
sub
cwtl
fidivs
in
xchg
clc
testl
popa
in
rorb
mov
out
pop
jb
dec
ret
nop
cmpsl
dec
iret
jecxz
sub
insb
jbe
out
or
jle
xor
add
mov
out
hlt
jmp
inc
iret
cli
xor
pop
mov
dec
mov
lahf
cld
das
jns
pop
sbb
jmp
clc
in
xchg
je
pop
push
jp
jnp
sub
cmp
cld
inc
outsb
and
cmpsl
mov
rcl
aaa
xchg
iret
lahf
aas
addr16
push
mov
fstps
movsb
sub
out
xchg
jge
fistpll
ror
out
xor
jae
call
sub
push
push
or
movsb
cli
repnz
scas
iret
mov
mov
lds
repz
scas
and
dec
popa
cmp
cld
cld
std
in
shll
iret
lahf
aas
mov
add
out
jge
mov
in
mov
push
imul
lret
ljmp
cli
fildll
ja
xchg
insl
push
push
and
and
cld
stc
add
sub
idivl
frstor
subl
xchg
jb
xorb
das
inc
xor
sub
cmp
mov
dec
mov
cld
jb
imul
or
pop
sbb
repz
ret
rorl
mov
cmp
cld
jne
inc
jns
push
add
sub
test
xchg
lahf
mov
sbb
repnz
out
inc
addl
jg
cld
stc
sbb
inc
sub
fs
xlat
push
cmp
dec
out
lahf
aas
jge
cmpsb
jle
ficoml
les
push
stc
stc
repz
stos
mov
sub
jo
aaa
xchg
jg
inc
mov
adc
inc
jne
mov
out
lahf
aas
loop
mov
roll
lods
cld
stc
repz
or
pop
and
mov
out
add
adc
test
lahf
aas
jg
fsub
xlat
dec
inc
dec
cltd
subb
shl
repnz
in
out
inc
icebp
scas
pop
pop
mov
or
out
lret
out
pop
cmp
dec
inc
mov
hlt
jae
cli
jo
mov
psrad
dec
scas
pop
ds
and
jle
pushf
jl
jg
cld
stc
mov
pop
cld
mov
push
dec
test
lods
lods
jg
aas
inc
jl
cs
out
lret
iret
movd
mov
sarb
loope
fists
cmp
test
mov
sbb
out
mov
scas
mov
or
sbb
out
xchg
mov
lcall
out
insl
in
sub
lret
in
fiaddl
cmpsb
stc
sub
lahf
lret
and
int3
or
mov
sbb
jbe
cmp
insb
mov
add
jl
js
aas
or
std
std
jb
cmpsb
inc
fmull
dec
test
mov
clc
in
imul
adc
cld
lret
pop
ss
mov
pop
cmp
dec
cld
or
rorl
stc
push
cmp
dec
adc
ficoml
call
lret
xor
lret
popf
xchg
fwait
iret
jg
sbb
insl
stos
push
lcall
push
mov
shll
xchg
inc
jecxz
cmp
out
push
stc
movsl
xchg
mov
andnps
dec
mov
lret
cmp
add
mov
das
scas
push
clc
push
jae
inc
lcall
xbegin
ja
out
scas
shl
inc
cld
stc
repz
mov
outsb
rep
daa
hlt
adc
fdivrs
push
pop
iret
lahf
aas
jg
ret
popa
sbbl
fs
repnz
xchg
mov
pop
mov
sub
leave
xlat
iret
lahf
aas
leave
mov
and
add
cld
stc
repz
clc
imul
loopne
lods
fwait
cmp
stc
mov
bnd
scas
lods
dec
mov
mov
je
stc
ss
call
push
pop
jns
outsl
lahf
pop
je
in
sbb
push
aam
mov
xchg
sub
pop
push
ficompl
push
das
insb
xchg
dec
ljmp
lahf
xchg
add
xor
inc
mov
cmp
cmpsl
jo
pop
imul
cmp
loopne
stc
repz
arpl
lahf
pop
je
aas
jg
sbb
or
inc
dec
dec
push
sarl
lret
fnstsw
das
xchg
push
xlat
mov
pop
sbb
push
pop
jns
leave
sub
imul
in
pop
push
push
push
cld
inc
shrb
icebp
in
mov
out
xchg
imul
out
lret
iret
rclb
int3
adc
out
jle
cli
out
mov
cmp
and
int
pop
sub
rolb
jb
insl
lcall
xchg
frstor
xor
cld
stc
repz
sahf
std
into
hlt
mov
push
ja
xor
aas
jg
scas
xchg
mov
ja
scas
xor
or
jg
mov
push
repnz
enter
push
imul
inc
jl
in
fsts
and
pop
mov
or
jns
outsl
cmp
lret
sub
push
sub
pop
nop
cmp
aas
jg
dec
fiadds
mov
sti
adc
jns
out
lahf
cltd
mov
cmp
adcl
and
and
leave
push
mov
sbb
hlt
repnz
ficoml
aas
je
jle
sti
xor
xlat
adc
pushf
out
xchg
cld
stc
add
inc
into
pop
inc
fdiv
lret
and
std
ja
call
dec
pop
cmp
or
out
loopne
out
adc
repz
bswap
mov
xor
ljmp
fcmovbe
mov
push
je
sbb
mov
pushl
jns
fstpl
cmp
into
jmp
cmc
and
sahf
cmpsb
enter
xchg
pop
popa
mov
push
pop
sub
xchg
dec
mov
inc
ljmp
adc
cld
stc
repz
sarb
aas
mov
cmp
in
test
xlat
xor
jl
jnp
xchg
aas
call
mov
repz
scas
into
or
stc
sbb
iret
mov
insl
jg
cld
stc
adc
and
sbb
jecxz
jne
iret
lahf
aas
mov
ret
ja
ficoms
cld
stc
repz
xor
dec
cmpsl
int
xchg
ja
jle
pop
sbb
call
or
push
pop
jns
mov
cmpsb
mov
mov
data16
jb
xchg
repz
mov
xor
test
sbb
aad
xchg
sbb
scas
lret
cwtl
mov
mov
mov
sahf
adcb
xchg
fucomip
cwtl
jno
out
das
out
xlat
ret
aad
or
mov
repnz
repnz
cmp
andl
les
or
and
lcall
or
lret
push
push
inc
mov
div
or
aam
fsubs
sbbb
sti
pop
imul
push
cmpsl
roll
push
std
dec
jae
movsb
fistpll
popf
ret
repnz
mov
stc
mov
mov
shll
out
int
xor
ja
and
sub
inc
jnp
jp
and
movsl
mov
outsb
pop
fidivl
lahf
outsl
sbb
jg
cld
stc
pop
movsl
jo
stos
mov
mov
jg
mov
cwtl
dec
cmpsb
scas
cmp
in
lahf
aas
dec
pusha
stc
cmp
cli
scas
mov
scas
mov
das
fstps
and
jp
cmp
in
sub
fsubp
lea
or
mov
jb
dec
out
pusha
jp
aas
pushl
sbb
mov
inc
and
test
add
and
pop
stc
clc
mov
jns
outsb
addb
dec
xlat
repnz
imul
inc
cmp
inc
or
adc
and
icebp
lret
xchg
ja
cmp
inc
xor
ret
lahf
aas
mov
jo
mov
inc
xchg
sbb
xchg
scas
mul
pop
out
and
movsb
mov
subb
pop
out
js
mov
outsb
jno
lret
mov
cld
stc
repz
stc
dec
lds
inc
rcrl
inc
iret
lahf
aas
jg
ja
pushf
add
mov
ss
int3
pop
pop
cmc
repnz
rcrl
mov
add
inc
leave
add
cld
stc
repz
add
sbb
test
push
imul
sti
add
jle
fisttpl
and
pop
fildl
pop
jns
loop
sarl
or
fstps
mov
xlat
std
jb
xchg
test
pushf
inc
sbb
shrb
inc
into
mov
add
xchg
sbb
jmp
and
mov
pop
jle
pop
lods
aas
push
lret
jle
push
inc
hlt
les
cmp
and
jle
repnz
mov
xchg
rorl
xchg
and
sub
and
lret
xor
call
sub
jg
pop
ja
sti
xor
cmp
rcrb
loop
pop
movl
dec
js
and
out
cmp
jge
jle
ds
pop
setnp
adc
lret
lret
fs
out
in
movsl
cvtps2pi
sub
out
into
xor
lahf
aas
jg
out
repz
mov
dec
loopne
cltd
jne
jge
mov
scas
mov
popa
das
insb
pop
repnz
dec
cmp
inc
jp
repnz
lret
or
sbb
lret
cmp
cmp
les
and
adc
xchg
stc
repz
or
or
jle
das
mov
lahf
aas
jg
shl
add
pop
mov
aaa
lea
iret
fs
arpl
jbe
movsl
stc
int
adcb
ja
out
jae
ret
shll
push
pop
jns
and
jb
ret
arpl
mov
std
ss
mov
aas
and
jnp
xchg
jns
dec
push
arpl
mov
adcb
mov
dec
inc
call
pop
ljmp
out
jns
out
das
pop
int
dec
mov
mov
in
in
push
pop
and
sahf
jns
adc
and
out
icebp
xor
enter
mov
repz
sub
int3
sbb
aas
jmp
jle
jae
mov
add
and
out
lahf
xchg
cmc
push
icebp
jnp
aad
lods
push
iret
xchg
mov
cld
stc
stos
movsb
lock
popa
inc
and
jecxz
iret
mov
xor
repz
push
mov
xchg
mov
roll
jg
pop
les
mov
jb
mov
ja
jmp
pavgw
pushf
mov
xchg
lahf
dec
ret
pushf
cmp
jg
push
loop
xchg
sbb
sbb
or
cli
ficompl
ja
ljmp
lret
and
and
fidivl
push
jbe
push
inc
cmpsb
mov
pop
jle
cld
jno
lock
das
pop
or
xor
adc
ja
push
jle
mov
cld
out
or
in
test
movsb
arpl
xchg
mov
push
iret
bound
mov
dec
or
lret
xchg
push
pop
xchg
pop
movsb
mov
jmp
cmp
notl
stos
inc
nop
jecxz
xor
xchg
push
pop
mov
jmp
ror
or
daa
mov
ffreep
inc
fldenv
push
out
cli
popl
push
cmp
lret
jb
std
mov
outsb
daa
add
repnz
lahf
fs
cld
stc
adc
outsl
pop
sar
outsb
shr
sbb
stos
mov
lahf
aas
jg
es
adc
das
js
hlt
push
repz
xor
sub
lret
cli
fistpll
jg
cld
cmpsb
mov
arpl
mov
mov
iret
lahf
add
imul
out
mov
cs
fnstenv
lahf
aas
jg
sub
lods
mov
mov
jge
adc
mov
mov
mov
jl
mov
xchg
jbe
jp
mov
lahf
clc
das
sbb
mov
jle
inc
cmpsl
mov
dec
xor
sahf
fwait
or
lret
mov
lahf
gs
lods
dec
outsb
paddb
repz
test
xorb
lret
adc
sub
loop
jne
mov
aas
mov
xchg
sbbl
out
jle
enter
or
mov
popa
sahf
jl
cld
stc
adc
clc
xchg
leave
icebp
jmp
dec
pop
jne
mov
in
ja
inc
shll
out
xchg
and
insb
test
pop
jns
xorb
ds
or
push
jg
sbb
jmp
out
mov
loopne
out
lahf
leave
add
popf
fstpl
dec
stos
arpl
mov
imul
popa
push
sub
xchg
mov
jb
push
inc
scas
mov
shlb
imul
mov
stc
and
stc
and
sbb
mov
lds
cmpb
adc
jg
stos
aad
lahf
dec
lods
sti
mov
sbb
in
pop
je
inc
mov
pop
xor
jns
xchg
ja
cmp
mov
fnstcw
mov
clc
aaa
mov
push
pop
iret
scas
cltd
insb
mov
cld
adc
push
mov
pusha
std
cmpsb
roll
aas
sub
mov
stc
repz
cmpsb
inc
lret
cmp
mov
or
xor
cld
mov
dec
ret
mov
mov
add
out
lahf
pmulhuw
sti
sbb
movsl
and
stc
cmpsl
xchg
jne
sbb
and
fildll
pop
test
out
fbstp
cld
insl
pop
xor
mov
stc
pop
or
popf
jge
dec
or
loope
repnz
or
push
filds
xchg
push
pop
and
mov
cmp
push
fdivrp
jb
decb
fistpll
popl
loopne
das
xchg
pop
jns
xchg
icebp
in
mov
lds
sbb
jns
xchg
push
xor
popf
sbb
inc
cmc
xchg
in
push
pop
push
rcrb
not
fistpl
push
pop
jns
add
or
sbb
cmp
push
pop
jns
fnstcw
lahf
nop
in
mov
or
pop
rclb
xchg
mov
in
inc
mov
repz
xor
pop
mov
lret
mov
mov
inc
jae
aam
jns
pop
add
inc
and
jne
subb
cltd
in
iret
lahf
jp
nop
mov
xor
ja
iret
xor
inc
mov
mov
popl
movb
jecxz
add
or
testb
out
cmp
aas
sbb
or
add
push
mov
mov
xor
mov
xchg
mov
push
loop
pop
jle
jle
mov
mov
andl
mov
clc
mov
inc
cld
iret
lahf
aas
jecxz
xchg
stos
int3
daa
or
cld
stc
repz
scas
cwtl
cmp
pop
das
cmp
mov
xchg
ja
jg
jns
push
mov
pop
pop
jns
mov
divl
lahf
aas
adc
fdivp
sbb
lock
xchg
es
aas
int3
dec
repnz
dec
add
sahf
jo
jle
aas
pushl
aam
push
lcall
cmp
out
lahf
icebp
cmp
mov
and
out
in
jns
repnz
add
cs
xlat
cwtl
jae
mov
pusha
mov
movsl
mov
lcall
adc
sub
sbb
sarl
in
insl
push
pop
add
test
jmp
xor
xchg
test
adc
aas
aas
ds
cmc
dec
fsubl
and
in
push
pop
psubw
mov
add
push
iret
or
mov
sarb
add
or
gs
scas
mov
mov
ja
xchg
je
adc
cmp
push
out
xchg
outsl
out
pop
std
cwtl
sti
mov
fs
outsb
clc
pop
sbb
push
mov
mov
in
bound
repz
out
in
ret
jle
rol
lret
pop
sub
in
lea
sarl
and
and
pop
ds
xchg
xchg
movsb
push
mov
lret
out
adc
and
repnz
cmc
hlt
xchg
sub
sbb
test
out
mov
mov
jae
dec
jl
div
out
aas
cs
lcall
pop
push
popf
mov
out
jbe
iret
scas
xlat
adc
mov
aaa
arpl
mov
bound
out
lret
js
aam
cmp
xlat
add
mov
cld
stc
mov
stos
mov
mov
shll
pop
data16
sarb
scas
xor
adc
lds
xchg
aaa
cmp
fdivl
out
fiaddl
out
shll
cli
inc
lret
scas
jmp
insb
icebp
xchg
iret
add
cmp
in
jae
imul
popf
mov
add
lret
sub
pop
push
cmc
lret
imul
nop
ficomps
cmp
mov
jbe
insb
sbb
mov
jno
out
xchg
mov
mov
test
cld
mov
xor
rorl
pop
jb
sub
in
shlb
lret
aas
inc
inc
xchg
ljmp
orl
or
adcl
stc
mov
imul
call
push
cmp
out
lret
sub
add
and
outsl
call
cld
adc
jne
bnd
rcrl
cmp
pop
xchg
cld
stc
add
into
testl
js
lahf
aas
jg
adc
pop
add
xchg
sbb
pop
test
aas
das
bound
sub
mov
ss
xchg
mov
cmp
and
and
ss
fmulp
inc
leave
ret
mov
and
loopne
add
icebp
jb
pop
lahf
sub
lcall
iret
lahf
pop
dec
and
lods
push
dec
pop
and
repnz
or
repz
divl
in
push
pop
push
pop
jge
ds
add
pop
jns
int
rcrb
clc
ss
xchg
ja
outsl
jbe
je
fbstp
imul
movsl
xor
ja
in
jae
xor
mov
xor
adc
lret
cmpl
clc
cmpsl
std
iret
pop
or
divb
dec
in
push
pop
xlat
test
hlt
loopne
fwait
gs
fwait
ja
pop
jns
aad
daa
jg
std
popa
pop
inc
xlat
iret
ret
xchg
out
das
lret
mov
daa
ret
stc
pause
cmp
dec
lcall
test
inc
ret
cmpsb
dec
mov
lcall
inc
outsl
push
rcll
lret
mov
call
xchg
mov
fisttpll
fs
notb
or
sbb
iret
sub
mov
adc
add
xchg
std
daa
cmc
bnd
xchg
loop
add
iret
scas
add
lods
push
cli
lock
push
inc
setl
ss
dec
pop
faddp
mov
adc
das
sbb
rolb
pop
or
inc
dec
mov
out
mov
loope
pop
out
fistps
ret
mov
repnz
sbb
sbb
pop
push
into
call
push
fistps
xchg
cli
in
out
outsb
arpl
fnstsw
cld
push
bnd
lods
sbb
jp
jns
pop
imul
sbb
subb
imul
repnz
pop
test
enter
daa
aas
lret
sub
mov
mov
lock
aaa
sarb
mov
les
jp
push
scas
mov
lcall
mov
int
mov
cmp
nop
sub
cltd
dec
xchg
aas
jg
outsb
fstps
xlat
mov
xor
mov
sahf
push
iret
push
adc
mov
mov
lcall
ret
hlt
outsb
push
and
sub
lods
jbe
in
mov
mov
mov
push
mov
mov
sbb
lahf
scas
xchg
push
sub
sbb
pop
mov
das
mov
jg
loope
sub
rcll
sbb
pushf
fists
jns
or
gs
pop
mov
adc
in
mov
stos
popl
xor
inc
or
ja
fcompl
lea
mov
std
mov
xchg
lea
adc
divl
lret
sub
das
gs
cmp
pop
lock
insb
push
push
lret
sub
mov
jl
inc
into
jnp
mov
lock
mov
xor
cwtl
mov
clc
imul
mov
push
stc
and
lahf
aas
jg
and
xor
jmp
cld
stc
repz
lcall
mov
push
mov
dec
test
lcall
sarb
lods
xchg
mov
and
jns
lret
into
pop
mov
and
and
aas
lcall
inc
inc
popf
iret
fdivl
sahf
dec
add
les
hlt
sbb
cld
stc
repz
add
mov
cwtl
inc
push
xchg
or
mov
lahf
aas
jg
inc
decl
repnz
fcoml
sahf
adc
repz
lret
dec
outsl
fstcw
mov
cld
stc
sbb
inc
orb
insb
xchg
fstl
andb
xor
dec
imul
stc
cmp
mov
jns
xchg
push
xchg
xorb
mov
jne
int3
in
push
pop
xor
xchg
pop
inc
cmp
pusha
out
mov
pop
mov
push
cmp
inc
lock
xchg
das
add
push
jmp
cmp
jecxz
mov
sti
in
sub
mov
xchg
push
jle
add
sub
push
cmp
lock
fsubrs
sub
sarl
lock
mov
stos
dec
lret
lahf
aas
adc
add
sub
fistpll
mov
dec
dec
test
stc
cmp
cs
fidivs
es
mov
in
push
fimuls
sbb
imul
dec
add
pop
mul
inc
or
jge
int
repnz
dec
sbb
mov
xor
jns
outsl
loop
daa
mov
mov
in
push
pop
jg
xchg
pushf
mov
inc
in
dec
enter
jge
aaa
dec
stos
sub
mov
sahf
pop
inc
pop
scas
mov
mov
dec
in
mov
ja
xchg
sub
mov
gs
das
pop
jns
xchg
lds
xchg
lret
fstl
mov
jb
dec
jne
xor
cmpsl
mov
bound
and
push
repnz
xor
mov
cld
stc
repz
dec
cmp
das
inc
dec
inc
cmc
loop
ret
mov
mov
into
xchg
std
cs
repnz
enter
cmp
bound
cmp
clc
lret
lahf
cmp
orb
xor
stc
repz
lods
push
mov
pusha
push
rolb
pop
mov
in
call
ret
loop
dec
dec
lods
mov
out
lahf
aas
mov
sbb
iret
ja
repnz
xchg
jo
aas
inc
xchg
test
adc
imul
pop
das
push
fidivrs
lret
pop
inc
dec
jmp
xchg
in
stc
inc
pop
push
in
fcomi
jmp
int
adc
add
cs
cmp
shlb
sub
add
inc
shr
iret
nop
or
sub
scas
sbb
mov
pop
cmp
repnz
das
fnstenv
jae
cmpsb
xor
out
adc
or
sub
adc
jge
cmpsb
jns
scas
outsl
mov
in
mov
xchg
push
lcall
adc
mov
pop
cs
repz
stc
repz
cmpsb
pop
popl
adc
test
test
out
push
stc
cld
fwait
inc
sub
pusha
fisttps
xor
mov
inc
stc
push
std
mov
pop
xor
inc
enter
or
aas
aas
mov
pop
aad
fildl
popf
gs
stc
repz
xor
lahf
and
pop
aam
test
stc
repz
jl
push
jno
sti
jge
xchg
out
jp
or
repz
ret
dec
aas
xor
pop
iret
lahf
aas
jg
and
inc
jge
lods
xor
inc
adc
in
jns
dec
cld
cmp
int
pop
lock
dec
loope
nop
scas
sbb
push
fimuls
pop
jo
clc
fwait
insb
pop
or
push
pop
jns
mov
pop
push
mov
pop
jns
pusha
push
mov
sti
test
mov
js
sysexit
adc
in
lret
xor
add
in
push
js
in
fnstenv
add
mov
aad
adc
mov
and
push
jle
filds
pop
pop
jnp
pop
jle
pop
pop
sub
mov
mov
ror
cmp
cld
or
add
mov
pop
std
test
jg
jae
andl
push
shl
outsl
out
subb
cmp
iret
mov
scas
ror
push
mov
inc
jmp
push
xchg
dec
divl
mov
clc
cmp
pop
out
negb
imul
pop
dec
ss
push
xor
repnz
iret
adc
outsb
xor
sub
pop
push
pusha
cli
mov
stc
ljmp
lret
lahf
lahf
mov
jle
sti
dec
dec
rcr
or
pop
aas
inc
push
pop
jns
fwait
int
in
fsubrs
mov
aas
jmp
ror
jle
dec
inc
xchg
das
xchg
push
loop
iret
lahf
mov
pop
repz
loop
dec
mov
and
ljmp
push
xor
in
iret
into
dec
mov
enter
fwait
pop
push
in
iret
mov
or
rolb
lret
out
inc
xor
mov
add
sub
lcall
testb
pop
stc
stc
pop
sbb
gs
and
pop
popf
jp
das
mov
cmp
sbb
pop
and
fsubl
repz
push
xor
ret
add
mov
test
jg
scas
shr
jne
add
dec
arpl
outsb
adc
push
ja
xchg
iret
adc
cmp
scas
fidivrs
xchg
in
loopne
pop
lret
das
rcr
popf
xlat
jo
dec
into
push
sbb
pusha
adc
jns
es
mov
mov
es
mov
mov
mov
loop
mov
rolb
lret
cwtl
ds
jbe
xchg
push
pop
mov
sbb
xor
repz
push
pop
jns
jecxz
gs
scas
push
or
xchg
sbb
sbbb
shrl
inc
inc
int
xchg
jp
in
pop
jns
cld
mov
inc
movsb
push
sub
ss
pop
jns
xchg
pop
push
aas
and
pushf
jp
jns
xchg
push
jb
dec
data16
pop
push
test
fidivrl
add
sbb
in
out
lahf
pop
test
xor
gs
pop
adc
pushf
inc
sar
aaa
lock
mov
mov
lahf
aas
jg
out
or
add
cmpsb
jne
xlat
lahf
stc
repz
push
neg
addr16
pusha
mov
stos
mov
insl
mov
mov
mov
or
sub
xchg
cmp
outsb
rorb
ret
pop
adc
test
cld
stc
repz
into
sbb
push
aas
pop
jne
dec
inc
jne
sub
cld
cwtl
js
push
sub
lahf
aas
jg
clc
and
push
testl
dec
dec
sbb
aaa
je
sbb
in
gs
dec
sti
scas
rorb
cld
xorl
mov
mov
fdivp
add
das
repz
ja
jg
jg
loopne,pn
mov
fwait
rcrl
mul
xchg
inc
inc
pusha
push
mov
js
frstpm(287
xchg
push
pop
xor
je
enter
mov
hlt
imull
hlt
or
mov
iret
lahf
aas
pop
jns
mov
data16
push
in
sbb
imul
pop
ja
cltd
dec
xor
sbb
stc
repz
movsb
stos
bound
push
and
lahf
aas
jg
out
xor
pushf
push
lret
test
lret
iret
jb
out
ret
adc
shlb
push
jge
or
das
lahf
aas
or
cmp
inc
sub
mov
unpcklps
loopne
gs
mov
iret
push
pop
inc
mov
fldt
lahf
jg
jmp
data16
push
fsubp
push
icebp
fistpl
push
cltd
ret
into
push
pop
jns
negb
jnp
test
aad
popf
fcmove
fcoml
jns
xchg
push
mov
cmpb
adc
ds
xchg
push
imul
lret
out
das
into
mov
xchg
in
jb
cld
stc
mov
or
fsubrl
or
xchg
aas
jg
or
lret
aas
dec
xchg
cmp
stc
sub
sub
pop
jns
xor
push
mov
testb
and
mov
push
pop
ljmp
dec
pop
insl
and
cld
jbe
addl
cmc
shl
out
adc
arpl
sahf
fimull
lahf
out
icebp
mov
mov
sub
mov
add
mov
imul
mov
out
stos
and
clc
repnz
pop
push
jae
outsl
inc
push
incb
pop
das
push
dec
scas
mov
movsb
dec
es
pop
mov
fs
sub
and
ret
xor
push
and
hlt
popf
adc
mov
test
cmc
es
std
imul
lret
pop
inc
inc
in
scas
cwtl
js
sti
outsb
repz
adc
xor
lret
outsl
cmp
pop
shrb
xlat
mov
inc
sub
xor
stc
or
mov
mov
pop
nop
mov
push
mov
das
punpckhwd
cmp
dec
aad
cmp
sub
mov
xchg
decb
jb
or
enter
sub
dec
scas
outsl
scas
dec
aas
and
jge
ljmp
pop
sarl
frstor
inc
mov
or
aad
pop
fidivrs
inc
mov
leave
and
fiadds
and
jg
cmpb
scas
mov
out
push
outsb
shrb
pushf
repz
sub
mov
xor
push
cltd
mov
sub
add
fs
dec
jp
jp
outsl
mov
scas
mov
std
out
jbe
shr
and
dec
enter
mov
sbb
stc
repz
out
add
pushf
insl
test
xchg
cmc
sub
cmpl
dec
mov
in
out
cld
pop
cli
repnz
lret
push
je
pop
daa
mov
lahf
aas
jg
es
dec
mov
cmp
pop
subl
and
shlb
mov
sub
cli
pop
inc
pop
sbb
lret
sub
inc
into
rorb
and
and
lock
add
outsl
hlt
add
insb
out
adc
sti
enter
add
ljmp
cmpsb
test
scas
lods
and
into
sbb
pop
jle
jg
repnz
out
mov
pop
dec
cld
std
sub
jge
cld
ljmp
iret
xor
mov
out
lahf
aas
ds
shlb
cld
repz
or
repz
sbbl
test
iret
mov
aaa
sbb
repz
cld
stc
repz
xor
lret
xor
sub
enter
sbb
jp
jne,pt
lods
out
negb
in
sub
push
pop
es
ljmp
xchg
push
push
jb,pt
push
addr16
xchg
push
pop
jns
xchg
test
pop
aaa
or
xchg
jb
in
ss
pop
adc
int3
xor
repnz
push
or
jg
aaa
fcoml
outsb
cwtl
div
out
push
data16
in
sub
xchg
push
pop
jns
mov
call
dec
in
jmp
in
push
mov
push
or
lods
pop
jns
xchg
lret
dec
adc
cmp
dec
movsb
jg
das
push
jb
mov
movsl
mov
or
pop
ds
test
repnz
fildl
repnz
test
leave
nop
push
leave
insl
sbbl
push
fcoms
repz
lahf
outsb
mov
loopne
and
xchg
lret
adc
cld
stc
inc
sub
or
dec
mov
iret
lahf
aas
ret
in
push
movq
repnz
out
cld
cld
stc
repz
pop
mov
daa
fmull
lods
jns
sub
lahf
test
cmp
scas
xor
cld
popf
lahf
cmp
adc
mov
xchg
push
pop
jns
out
aam
in
bound
std
jnp
in
pop
mov
jg
dec
cmp
out
cs
scas
scas
mov
popl
mov
outsl
lahf
and
out
enter
popf
das
sbb
outsl
and
out
out
jle
jge
outsl
mov
xor
mov
cli
movsl
jl
les
push
or
mov
out
push
jecxz
sahf
and
xor
sub
lret
mov
mov
pop
jle
cld
xchg
jb
mov
repz
adcb
aas
jg
nop
stc
mov
jle
dec
mov
dec
stc
repz
sti
cwtl
and
mov
lea
jo
jg
cld
sub
pop
cmp
jbe
aaa
cmp
mov
mov
xor
test
xchg
inc
add
sahf
outsl
mov
shr
out
loopne
rorb
ds
fs
mov
jmp
cld
cli
sub
mov
outsl
dec
adc
jnp
inc
ja
ror
xchg
mov
and
loopne
into
fisttpll
out
sub
mov
jns
jmp
jns
iret
mov
lahf
rclb
test
and
cld
stc
repz
dec
mov
dec
sub
xorl
aas
jg
and
inc
adc
out
mov
cld
stc
repz
sbb
xor
lock
repz
mov
mov
es
insb
notb
stc
repz
adc
push
push
movsb
adc
inc
adc
cmp
cld
mov
dec
xchg
and
mov
pop
jge
out
lahf
pop
cli
pusha
push
and
int3
data16
pop
jns
lods
mov
cmpsl
in
jecxz
and
add
pop
jns
xchg
sahf
iret
cmp
inc
enter
insl
lods
mov
lret
xchg
push
aaa
push
mov
cld
out
xor
mull
movsb
inc
dec
lahf
cld
push
repnz
shlb
rcl
mov
inc
push
mov
jns
xchg
push
push
test
scas
inc
in
scas
mov
das
push
pop
cmp
popa
adc
in
xlat
cmp
sub
jle
idivb
imul
int3
lret
sub
cwtl
push
imul
jmp
jle
inc
scas
mov
dec
pop
lret
pop
push
cmp
lahf
mov
sub
adc
leave
ss
es
scas
hlt
mov
jp
fdivl
addr16
mov
lods
inc
xor
adc
inc
sti
div
repnz
pop
push
jnp
sbb
inc
push
pop
movsb
paddd
lret
clc
mov
add
ljmp
shr
incl
push
jne
lea
mul
fnstsw
pop
xchg
test
xchg
push
fidivrs
adc
dec
fmul
cmp
mov
mov
lahf
repnz
jecxz
or
adc
cmc
or
test
sub
xor
fimull
scas
movsl
mov
jb
push
inc
aas
jo
cmpl
xchg
push
pop
jns
bound
repz
push
mov
pop
jns
rcrl
ljmp
scas
mov
pop
sub
pop
stos
xor
mov
push
mov
sub
loopne
loop
sbb
mov
push
dec
mov
stos
mov
mov
xchg
scas
scas
sub
mov
shrb
call
xor
scas
lahf
aas
jg
ret
rcl
add
sbb
inc
inc
inc
sub
and
fstl
dec
ficoms
dec
nop
test
jl
xchg
push
pop
lret
xchg
nop
jp
outsb
icebp
out
lock
negl
push
mov
leave
inc
jnp
dec
out
push
sarl
rorl
inc
sbb
push
repnz
sub
xor
sbb
imul
in
dec
add
pop
movsl
in
sti
popf
loopne
cld
stc
adc
jmp
pop
sub
mov
iret
lahf
aas
jg
repz
ss
push
out
sub
repnz
sbb
jb
ret
xchg
pop
mov
invd
mov
dec
mov
jmp
pop
dec
mov
nop
mov
dec
icebp
imull
and
cld
call
xchg
lret
xchg
jmp
fiaddl
loop
mov
fisttpll
call
std
imul
cmpsb
test
mov
pop
dec
pop
jnp
add
pop
fwait
cld
cld
stc
mov
jo
add
or
repz
cld
sti
stc
cli
xor
jne
lea
faddp
stc
jg
cld
stc
shlb
flds
adcb
gs
mov
out
lahf
aas
and
gs
push
mov
adc
mov
jno
or
scas
mov
test
inc
inc
mov
pop
mov
and
dec
pop
lea
out
aas
jg
cld
cwtl
outsb
aaa
pop
inc
testl
push
fdivrp
xchg
cmp
mov
movsl
or
imul
xchg
nop
pop
subb
js
push
pop
jns
mov
jnp
push
or
adc
pop
stos
aaa
aam
addr16
outsl
adc
icebp
jmp
aam
push
or
xchg
aas
inc
jecxz
mov
ja
push
inc
sahf
add
jecxz
outsl
int3
jge
out
out
lahf
jg
dec
inc
lret
stc
or
xchg
test
test
push
push
outsl
jae
mov
movsb
popa
push
xlat
shrb
push
cmp
ret
cltd
adc
repz
mov
les
dec
int
fstp
sbb
call
pusha
push
pop
jns
out
push
inc
pop
sub
pop
dec
test
adc
mov
jns
xchg
mov
scas
lret
out
mov
mov
mov
jge
les
jne
mov
inc
lahf
sub
pop
add
and
jg
stc
ds
jmp
sahf
push
sub
ja
out
xchg
das
lahf
xchg
sbb
mov
xchg
mov
out
mov
pop
imul
pop
jbe
shl
xchg
es
aaa
cmp
gs
jecxz
sarl
inc
outsl
lahf
jg
mov
decb
and
repz
xchg
ds
test
scas
jno
fstpt
jg
cld
cwtl
mov
jno
adc
and
rclb
repz
lahf
cli
cmpsl
xor
leave
fcoms
xchg
mov
cld
stc
lods
push
das
or
cs
jp
aam
dec
ja
aas
test
xor
aas
iret
jb
adc
xchg
xchg
es
cli
les
lock
imul
sahf
inc
adc
shll
in
in
imul
push
push
iret
lahf
aas
mov
mov
pop
push
repz
es
pop
jae
lods
or
xchg
mov
jno
xchg
rcll
and
mov
in
dec
dec
pusha
pop
jno
cld
inc
dec
sbb
jle
popw
pop
pop
push
iret
iret
lahf
aas
jg
popa
jae
push
movsl
or
sbb
mov
repnz
xchg
incl
mov
adc
lcall
jle
cmc
scas
fsts
push
inc
push
stc
xchg
lock
test
ds
mov
mov
jg
cld
pop
mov
push
mov
in
push
mov
mov
dec
sub
not
mov
mov
lock
fsubs
mul
xchg
push
sub
lds
xrelease
stos
mov
jns
push
repnz
pop
xchg
std
shrl
and
pop
pop
jns
loop
filds
stc
jo
pop
mov
lret
lahf
pop
dec
outsb
fstps
xor
jns
fnstsw
dec
stos
fnstsw
ds
dec
inc
lock
push
fidivrs
fldl
into
xor
push
mov
lret
add
push
cmp
sarb
pop
push
aas
repnz
jle
aam
xchg
pop
icebp
fists
lahf
or
xor
test
jne
pop
inc
sub
pop
jns
xor
incb
lahf
repnz
dec
xchg
cmp
dec
lcall
mov
rdpmc
mov
adc
scas
mov
adc
mov
mov
loopne
fstl
push
jl
mov
cwtl
xchg
mov
pop
or
fisubrl
xchg
lret
add
dec
push
adc
shlb
pop
loope
adc
adc
adc
cmpb
fimull
and
je
pop
jns
xchg
mov
es
mov
pop
rclb
addr16
mov
rorb
scas
aad
jp
pop
fs
daa
lahf
aas
jg
imul
jg
lea
sbb
leave
jne
xchg
enter
out
lahf
aas
xchg
fsub
or
dec
outsl
fwait
lret
std
repnz
repz
iret
loope
adc
movsl
jl
repz
pop
dec
adcl
hlt
imul
push
cmpsb
mov
jne
inc
sbb
clc
or
out
lahf
mov
cmpl
pushf
aam
mov
movsl
mov
loopne
sub
jg
in
mov
rorb
mov
stc
repz
jmp
fwait
mov
mov
mov
adc
mov
push
lock
mov
sub
jecxz
scas
mov
scas
mov
pop
popf
test
jo
ror
sub
stos
mov
imul
iret
lahf
jg
push
in
fmulp
pop
mov
mov
repz
push
mov
pusha
fabs
cmc
repz
repz
pop
mov
mov
es
jle
cld
in
shl
dec
sbb
inc
gs
jno
scas
mov
and
mov
int
repnz
and
sub
punpckhbw
mov
dec
aas
mov
add
and
test
mov
mov
jle
or
addr16
je
pop
xchg
rcll
xor
ds
sub
jge
cmp
sbb
in
adc
adc
ja
jg
outsb
test
and
inc
push
inc
scas
jg
cmc
jns
fstl
mov
inc
adc
pop
insb
sbbl
lods
mov
mov
jns
sub
call
push
push
push
mov
rclb
sbb
cld
jg
cld
stc
mov
add
pop
movsb
dec
in
adc
jne
lahf
aas
sarb
push
sub
mov
outsl
dec
icebp
lret
and
test
ds
mov
sub
pop
call
adc
fsubrs
fs
and
dec
xchg
inc
cmp
pop
jge
jmp
iret
lahf
aas
push
xor
or
xor
push
ret
fidivrs
dec
push
negl
faddl
adc
and
jle
mov
mov
repz
es
push
inc
stos
dec
neg
add
jg
cld
stc
hlt
cmpsl
pop
in
pop
lods
mov
mov
stos
popf
fs
xchg
aas
xchg
or
das
outsl
cmpsb
cmp
repz
scas
fimuls
cmp
inc
push
cmp
cld
stc
dec
cmpsl
add
sar
inc
or
loop
add
sub
jmp
and
clc
pop
jne
fcomps
xlat
adcb
cmc
in
sahf
xor
cld
adc
xchg
mov
push
mov
das
loop
push
pop
dec
mov
cmp
cmp
addb
movsl
mov
repz
or
mov
out
test
cltd
inc
fbld
mov
popf
mov
mov
jg
aas
loop
mov
push
ja
xchg
adcl
dec
ret
rorb
fistps
fbstp
test
nop
scas
orl
mul
loop
testl
sbb
lret
incb
in
push
adc
sahf
jg
adc
pop
fdivrp
sarl
stc
fbld
dec
xchg
outsl
lock
mul
xchg
push
mov
inc
in
fwait
mov
push
cmpb
out
or
repnz
dec
nop
pop
push
add
fstl
scas
push
int3
out
call
in
xor
pop
dec
jmp
and
loope
mov
repnz
sub
mov
or
iret
shld
and
and
stc
stc
repz
repz
in
bound
adcl
mov
clc
dec
sbb
stc
repz
outsb
mulb
sbb
jmp
cld
push
mov
fidivrs
pop
ja
dec
cmpsb
je
lret
iret
lahf
and
insl
mov
and
mov
stc
repz
push
je
into
cltd
add
sbb
xchg
das
aas
jg
test
bound
pop
js
iret
lahf
addl
jecxz
out
fidivs
or
nop
pop
push
addr16
jecxz
or
inc
outsb
inc
div
scas
cld
dec
clc
in
lcall
or
repnz
aas
jg
sub
jb
cmc
jg
stos
cmp
js
push
lret
pop
lret
add
add
out
sbb
dec
dec
inc
sbb
lret
aad
push
pop
stos
add
mov
cmpsb
repnz
and
mov
mov
pop
or
mov
loopne
and
lret
adc
cmp
in
adc
jl
lds
xchg
cld
stc
subl
test
mov
push
xchg
aas
jg
sbb
xchg
insb
xchg
scas
test
movsb
movsb
dec
add
fstpl
mov
pop
push
cli
aaa
lahf
and
out
fdivrp
jnp
push
mov
daa
pop
push
dec
cld
loopne
lret
xchg
push
xchg
cli
mov
pop
inc
out
neg
rolb
cmpsl
pop
inc
pop
pop
jns
ret
into
sbb
adcl
das
lahf
pop
outsb
xchg
outsl
call
orb
loop
push
pop
inc
nop
and
mov
jge
stc
repz
xor
bound
daa
iret
arpl
push
fdivrp
out
inc
mov
xchg
fst
orb
pop
pop
jns
shr
call
cmp
imul
and
idivb
xchg
ja
aam
mov
lret
insb
mov
in
push
pop
cmp
and
mov
lcall
fistps
mov
clc
loopne
iret
lahf
aas
jg
out
dec
stc
lahf
dec
add
sbb
nop
sub
mov
out
ja
xor
aas
jg
pop
xchg
pop
dec
aam
add
and
iret
insb
dec
inc
push
adc
push
inc
mov
pusha
push
popl
sahf
adc
repnz
test
and
jns
xchg
shll
aas
fdivrs
sbb
out
in
and
roll
inc
adc
dec
jns
stc
daa
hlt
cltd
sbb
cmc
push
add
adcb
aas
jg
pop
inc
testb
mov
iret
das
mov
outsb
ret
mov
jle
repnz
rep
lods
xor
pop
ja
mov
ret
mov
cld
pop
inc
pop
sub
aas
xor
jge
inc
in
lahf
aas
and
xor
ss
dec
sbb
jmp
sub
push
mov
mov
and
jg
push
mov
in
cmc
out
lret
iret
lahf
jecxz
ret
sub
fiaddl
scas
xchg
jle
repnz
idivl
sub
testl
pop
pop
mov
jge
imul
and
int
gs
aas
mov
arpl
mov
rclb
hlt
das
lahf
sub
nop
and
sub
std
mov
sbb
repz
mov
mov
mov
cld
stc
xor
test
adc
hlt
ret
mov
ja
mov
add
stc
nop
arpl
in
imul
lds
xor
pushl
push
pop
pop
flds
inc
xor
mov
sub
jns
push
xchg
out
xchg
popf
outsl
lea
repnz
adc
jmp
mov
ror
cmp
pop
pop
xchg
and
out
jle
repnz
cli
ljmp
in
cmc
fildll
fadd
mov
push
pop
mov
insb
js
lret
mov
or
mov
mov
mov
aas
sub
mov
xchg
ds
pop
clc
clc
movaps
jl
cld
stc
cltd
lcall
xchg
or
jge
outsl
sbb
pushl
data16
aas
jg
outsb
push
ja
mov
ljmp
or
xchg
xchg
jmp
jle
jecxz
orb
lock
jmp
pop
jns
xchg
mov
add
lret
xor
repnz
arpl
pop
sbb
ljmp
scas
mov
popf
dec
movsb
xor
and
repnz
sahf
pop
dec
outsb
xchg
push
repnz
xchg
cwtl
arpl
cmpsl
jg
jmp
test
test
into
fadds
mov
xor
fbld
cld
jmp
aas
clc
pop
icebp
aas
cmp
mov
xchg
fildll
scas
mov
dec
sbb
pop
das
and
repnz
jmp
and
jne
xor
pop
loopne
sub
scas
xchg
lock
fimull
lret
pop
sahf
hlt
fdivrl
sarl
mov
mov
cmp
xor
push
jge
das
aas
jg
and
scas
and
push
rcrl
jmp
outsl
mov
test
stc
repz
or
popf
stos
sub
xor
and
std
mov
stos
pop
push
jo
xchg
rorl
fstpl
inc
dec
movsb
push
add
je
pop
jns
mov
data16
lock
repnz
call
jnp
push
cld
outsl
cmp
faddp
stc
stc
repz
mov
adc
xchg
xor
daa
mov
cmpb
and
xchg
lock
aad
sub
mov
adc
sub
xchg
icebp
repnz
bound
mov
sahf
dec
lock
lret
iret
int3
push
mov
outsb
lahf
aas
jg
push
sub
xchg
icebp
adc
ds
repz
inc
pop
repz
sbb
adc
nop
bound
cltd
add
mov
cmp
add
cltd
mov
stc
lcall
iret
mov
stc
sbb
adc
adc
jl
push
arpl
mov
sahf
mov
imul
lret
xchg
orb
adc
cmpsb
sbb
jg
cld
dec
mov
jns
leave
or
xor
ret
jg
pop
ds
add
adc
add
movsb
and
sub
leave
les
cld
stc
xor
shrb
in
pop
sbb
dec
jp
cs
cltd
and
or
jg
hlt
lahf
mov
and
cmc
mov
jns
xchg
push
fnstsw
aas
mov
xorb
jle
jge
adc
into
pop
insb
inc
sub
movsb
dec
in
ja
xor
test
inc
out
sbb
jns
push
ja
and
xlat
push
sub
jns
dec
popf
lods
and
std
adc
dec
stos
add
lret
fstl
iret
stos
mov
clc
pop
jnp
cld
stc
aaa
incb
mov
push
fmul
lahf
aas
jg
jo
scas
xor
and
fcoms
adc
and
xchg
daa
mov
jbe
insb
adc
jp
icebp
out
xchg
sub
aas
out
or
addr16
sbb
jg
push
cli
in
jge
call
push
int3
xchg
cs
iret
jns
cmp
nop
repz
and
fs
repz
cld
stc
sbb
mov
inc
mov
mov
das
cmp
cs
sahf
xchg
fucomp
xchg
cmpl
cld
stc
repz
jmp
sub
add
data16
out
lahf
aas
jg
jbe
jne
out
add
iret
in
sarb
lret
out
add
aas
popf
adc
fdivrl
xchg
push
pop
jns
adc
bound
stc
cmpsl
cmc
lret
sbb
lea
pop
cmc
mov
repnz
jae
inc
push
loop
out
iret
lahf
jg
into
ret
jno
jl
pusha
jecxz
stc
repz
aaa
xorl
call
hlt
subps
sub
in
push
das
aaa
pop
ror
cmc
movsl
clts
xchg
dec
icebp
xchg
mov
repz
mov
pushf
pop
push
sub
aas
jg
pop
sub
push
adc
ret
stc
repz
mov
popa
add
jns
rcr
outsb
mov
xchg
cmpb
aaa
mov
fs
push
pop
aas
iret
lahf
aas
dec
push
jmp
add
rclb
lret
out
xlat
or
mov
sahf
jge
aas
fwait
xchg
scas
lock
push
pop
cmp
jnp
enter
jns
outsl
mov
aad
jecxz
outsl
and
mov
add
mov
int3
xchg
and
int3
stc
repz
movsb
xor
mov
loopne
lea
jge
mov
jl
scas
stc
fstpt
in
xchg
xor
fisubrs
adc
jg
mov
xchg
in
push
pop
jg
pop
lahf
cmc
gs
xlat
ja
pop
jns
inc
mov
loop
add
pop
aaa
jg
mov
std
jb
xchg
sub
jp
int
mov
decb
fidivs
and
outsb
jb
iret
lahf
jo
inc
inc
loope
xor
dec
les
jg
cld
stc
mov
pop
mov
fcoms
sbb
jne
and
lahf
outsb
test
cmc
mov
add
out
ret
int3
adc
bound
scas
mov
jg
popf
push
cli
cltd
adc
inc
fistpll
fbld
adc
int3
jp
lret
sub
jle
lods
mov
das
cwtl
lahf
cwtl
xchg
in
inc
xchg
mov
outsl
push
cmp
lds
add
lret
out
jbe
pop
mov
xchg
or
out
adc
jns
in
cmp
imul
test
js
cld
mov
mov
and
das
jg
out
add
popa
jecxz
fisubrs
jns
xchg
dec
push
idiv
xchg
xor
addr16
adc
push
jb
push
daa
call
pop
push
adc
mov
pop
pop
jns
mov
xchg
jge
movsb
std
inc
in
fistps
in
repnz
sbb
add
dec
dec
outsl
mov
mov
in
xchg
ja
mov
pop
stc
or
jns
gs
ficoml
in
arpl
in
jg
jge
scas
add
dec
insl
sbb
jns
xchg
ja
and
dec
lds
cmp
mov
in
push
pop
arpl
mov
sbb
adc
es
xchg
push
pop
jns
flds
movsl
incb
scas
ljmp
cmp
jns
fcmovne
or
loopw
xchg
add
pop
hlt
or
cld
stc
xor
into
cltd
subl
jg
mov
jle
push
pop
mov
iret
lahf
aas
cli
push
fmul
sub
sbb
stc
repz
outsl
push
cmpsl
sbb
sti
pop
xchg
jle
scas
push
xchg
dec
lds
cld
stc
repz
xlat
js
push
xchg
jnp
inc
xchg
int3
or
icebp
das
push
pop
jbe
repz
dec
sub
cmpsl
enter
and
cmp
jg,pt
cld
std
in
dec
mov
jle
mov
je
cmp
mov
iret
lahf
aas
jg
cmp
add
cmc
mov
push
push
mov
int3
int
rcrl
das
adc
outsl
mov
aas
jg
sbb
add
xchg
imul
mov
pop
jl
loopne
mov
push
fwait
test
lret
icebp
mov
mov
insb
orl
jmp
out
or
adc
lret
mov
in
xchg
fs
cmp
jmp
cmpsl
mov
das
pop
scas
ret
pushl
inc
test
xchg
sub
mov
cltd
in
scas
loop
and
lret
xor
jle
push
add
sbbb
dec
push
add
mov
incl
pop
mov
add
enter
xchg
imul
xchg
dec
pop
mov
or
out
mov
pop
jmp
pop
lods
sahf
ret
movsl
js
dec
addb
or
mov
jmp
xor
fwait
mov
bound
mov
leave
lock
jmp
mov
cmpsl
out
mov
mov
xchg
jns
xchg
ja
ds
push
iret
sahf
pop
or
call
push
pop
jns
pop
cli
jbe
mov
cmp
mov
jns
lds
pusha
bound
ja
aad
sub
outsl
push
push
call
push
sbb
fnstenv
ret
repnz
jecxz
mov
insb
inc
xor
inc
mov
adcl
cld
stc
repz
dec
inc
int
lea
test
lahf
aas
jg
jne
sahf
dec
int
mov
iret
push
mov
stc
repz
xor
lds
inc
js
mov
push
jl
jg
mov
lods
mov
mov
inc
loop
cli
repnz
cld
scas
pop
repnz
mov
ss
fisttpll
lea
sbb
push
outsl
mov
sbb
xchg
fidivrs
in
dec
xor
mov
outsl
mov
adcl
ds
iret
or
xor
hlt
pop
sub
fsubrs
mov
adc
adc
test
adc
cld
stc
sbbl
loope
mov
mov
into
push
jle
and
sar
jg
xchg
fisttps
pop
scas
mov
test
stos
jg
mov
filds
cli
in
mov
pop
pop
ss
fiaddl
jne
jg
cld
push
jle
cmp
mov
jmp
iret
lahf
aas
lahf
je
les
push
jbe
cld
stc
repz
cli
mov
push
mov
xor
iret
lahf
aas
jg
mov
or
dec
xor
repnz
or
lds
gs
std
lock
cld
stc
inc
jl
cmp
lds
xlat
push
loop
sbb
jg
das
iret
test
jbe
xor
jae
jg
mov
in
adc
adc
push
jmp
adcb
jle
mov
xor
stc
xor
leave
les
xchg
ja
or
xchg
outsl
adc
sub
inc
in
push
pop
jecxz
ret
lea
sub
dec
rcl
sbb
cmp
movsl
mov
push
pop
jns
or
bound
bound
icebp
push
pop
jns
xchg
lret
push
andb
pop
rcl
clc
add
sub
jmp
inc
out
call
sub
ja
sub
out
cmp
jns
test
aas
push
stos
arpl
cmp
cli
fnstcw
jns
sub
or
lock
repnz
mov
xchg
sub
pop
sub
inc
out
cli
in
mov
loopne
push
push
and
test
inc
xor
jg
mov
cld
stc
sbbb
sti
sub
push
aas
jg
decb
adc
push
ljmp
loopne
iret
mov
mov
pusha
lret
outsb
cld
stc
repz
loop
jle
mov
mov
add
mov
dec
scas
push
sub
pusha
lahf
aas
jg
or
push
aas
xchg
pop
into
and
shl
repnz
es
mov
push
es
dec
std
jb
adc
dec
aad
imul
pop
jg,pt
or
dec
enter
adc
ja
enter
sub
or
xchg
pop
popa
dec
inc
js
jae
xchg
push
push
mov
push
das
mov
jge
pop
sub
out
mov
adc
mov
repnz
lcall
scas
mov
cmp
pop
push
pop
and
add
mov
imul
push
dec
xchg
and
cld
stc
push
mov
cmp
aam
jge
lcall
scas
test
dec
xchg
sub
lds
repz
push
pushf
imul
push
incl
cld
out
push
jo
pop
pop
xchg
inc
push
out
jg
cld
stc
into
push
and
sub
mov
in
iret
lahf
aas
loope
ret
arpl
lret
movsb
pop
int3
cld
cld
stc
repz
rol
cmc
out
fisubs
inc
fldenv
inc
scas
mov
mov
rcll
cmp
out
mov
push
mov
xchg
xorb
cld
cld
stc
fiaddl
adc
push
jecxz
cltd
fcmovb
das
lahf
aas
xor
lret
pop
jp
sbb
jg
sub
dec
movsb
xchg
dec
or
sahf
mov
scas
mov
push
inc
mov
scas
xchg
mov
lret
ss
data16
add
add
out
cmp
pop
ds
mov
lahf
aas
mov
jnp
push
in
out
cmp
lret
pop
jns
in
in
inc
sbb
iret
push
fmul
scas
push
cld
std
sahf
jns
xchg
push
repz
sbb
out
xchg
ja
pop
std
mov
xor
jo
shlb
cld
jb
imul
lea
xchg
xchg
jae
nop
mov
pop
fstpl
xchg
pop
mov
lret
or
jl
xor
jno
jno
or
sti
add
dec
or
outsl
aas
aaa
jle
mov
out
movsb
or
pop
insl
cli
pop
stos
inc
daa
out
xchg
sub
add
mov
iret
scas
mov
pop
ljmp
fdivs
shll
repnz
lods
fiadds
arpl
push
add
pop
scas
aam
insb
sbb
mov
xor
add
repnz
aam
xor
mov
xchg
aas
jg
rol
mov
shrb
or
pop
lret
test
pcmpeqw
pop
lds
sti
in
daa
jb
jo
push
adc
idivl
mov
mov
mov
inc
in
dec
in
sub
jbe
sub
in
repnz
outsl
xor
pop
mov
rcr
fistpl
add
xchg
fildl
lods
dec
mov
cld
stc
mov
es
xchg
sbb
aas
shrb
dec
inc
iret
fisubrl
outsl
in
push
pop
pop
cmpsb
int
arpl
fwait
lea
push
pop
jns
pop
pusha
mulb
shrb
in
mov
or
push
shll
mov
xchg
stos
and
pop
mov
out
inc
cld
stc
repz
fmull
ds
or
out
mov
rorl
ljmp
imul
aas
andl
arpl
sbbb
jb
daa
jle
or
xchg
iret
movsl
ret
fisubrl
cld
stc
repz
fwait
adc
push
jle
movsl
mov
jbe
jo
lahf
aas
jg
mov
outsl
int3
sbb
sbb
sti
repnz
mov
inc
test
jl
xor
scas
mov
adc
dec
cmpsb
push
in
js
mov
cmp
xchg
sub
or
pop
ljmp
xchg
dec
movsl
mov
jg
lret
femms
dec
shr
jg
mov
or
lahf
sti
repnz
lods
cmp
xchg
push
pusha
push
outsl
sub
mov
popl
ss
sub
adc
outsl
loop
lret
adc
fwait
das
ljmp
jne
sbb
push
xor
push
ds
push
pusha
nopl
sahf
sbbl
lock
fdivp
in
pop
pop
inc
adc
xor
xchg
pop
jle
cld
jb
fnstsw
mov
arpl
pop
inc
jg,pt
push
mov
mov
fldenv
adc
and
sub
jl
je
inc
sub
lods
mov
ja
mov
in
xchg
bound
iret
mov
pusha
push
out
loope
dec
cli
adc
add
xchg
xor
stc
repz
ficoms
cmp
jmp
or
adc
or
lcall
test
cld
decb
test
sub
dec
icebp
xchg
addl
xchg
loop
sbb
adc
adc
iret
lahf
aas
in
icebp
mov
rolb
mov
sub
das
fnsave
mov
lahf
aas
jg
pop
dec
or
std
mov
mov
addr16
in
dec
jp
push
xor
out
inc
clc
in
xor
loopne
pop
les
int
or
std
repnz
rorb
out
loop
sar
jg
mov
call
out
mov
sbb
pusha
mov
pop
and
dec
scas
aam
cmp
out
inc
ret
mov
adc
inc
jmp
adc
jae
dec
mov
lahf
aas
addr16
jp
cmp
dec
jnp
sti
in
outsl
iret
movsb
subl
sub
scas
lret
jle
fs
cmp
sbbl
jns
xchg
ja
jl
sbb
xor
xchg
push
pop
mov
sub
push
dec
push
call
adc
cmpsl
mov
out
in
bound
test
push
inc
jg
aas
rorl
add
pushw
ret
inc
xor
outsb
jb,pt
in
out
in
pop
cmpsb
mov
iret
lahf
pop
ficompl
jne
in
cmp
inc
loope
pusha
lret
rcrl
stos
jne
dec
mov
cs
mov
stc
push
mov
and
mov
xchg
jne
shrl
out
lahf
aas
mov
adc
mov
sbbl
sub
xchg
push
ficomps
test
add
pop
shlb
out
les
push
negl
xchg
push
pop
pop
fst
push
mov
insb
and
adcl
iret
bswap
lahf
aas
jg
cmp
adc
lahf
xchg
lret
cld
stc
repz
dec
test
nop
lcall
aas
jg
xchg
add
sub
jecxz
jmp
lret
das
mov
mov
pop
push
in
mov
out
lret
scas
scas
push
jne
mov
mov
mov
sbb
cmpsb
jle
pop
jg
in
lahf
aas
xchg
xchg
mov
gs
std
jb
hlt
bnd
int
push
dec
in
push
push
aas
cld
ret
ret
iret
mull
xorl
xchg
aas
jg
lret
xchg
pop
cmp
xor
repnz
ffreep
sub
pop
out
add
lret
adc
and
lret
sub
out
es
pop
jle
repnz
cmp
pusha
mov
jae
std
push
cmp
sub
pop
sbb
int3
sbb
imul
sub
ljmp
out
das
ja
jmp
out
decl
pop
das
aas
xchg
test
lret
pop
ror
arpl
jmp
scas
and
xchg
inc
bound
sbb
iret
lahf
aas
dec
inc
fnstcw
mov
xor
std
dec
mov
lret
out
arpl
je
push
xchg
aas
jg
dec
mov
or
cltd
mov
loop
xchg
push
fimuls
ret
or
cwtl
push
mov
pop
push
fidivrs
and
pop
out
and
sar
adc
xchg
pop
jne
mov
add
jg
mov
stc
lret
sbbl
or
sub
xchg
cltd
lret
mov
mov
sahf
or
mov
pop
push
xor
mov
mov
sarl
cs
cmpsl
adc
push
ds
arpl
repz
das
movsl
xchg
in
popf
adc
sti
xchg
sar
add
js
sti
das
inc
or
xchg
ret
xor
sub
jg
call
mov
clc
push
out
cli
repnz
add
loope
or
repz
mov
shll
mov
mov
and
dec
push
paddsb
mov
lods
outsl
negb
fldenv
repnz
sbb
cmpsb
jg,pt
cld
outsb
roll
cld
jmp
mov
sbb
out
jbe
aas
add
frstor
sub
insb
test
mov
pushf
push
pop
jns
loope
sbb
fs
inc
mov
pop
hlt
in
clc
in
cmp
jg
cld
stc
into
repz
lahf
push
test
inc
cltd
in
lds
sbb
add
and
sub
lret
mov
in
push
imul
pushf
xchg
jle
std
std
scas
lock
sub
cmp
out
sbbb
out
ja
loopne
pop
in
aad
pop
xorb
push
push
pop
jns
je
call
jns
outsl
sub
fdivrp
jb
xchg
fiadds
dec
mov
loopne
mov
das
push
ljmp
ss
sub
push
repz
or
js
insl
jb
xchg
rorl
jns
cs
test
jns
nop
inc
lea
loop
and
lods
out
fisttpll
scas
loop
in
push
xor
cld
sbb
push
mov
adcb
pop
sub
dec
rcl
jcxz
mov
xor
mov
jge
xchg
mov
pop
enter
jns
jg
clc
xchg
fdivs
inc
mov
xchg
out
adc
xchg
push
pop
jno
outsl
pushf
and
insb
jp
mov
add
inc
push
inc
jns
test
inc
jns
mov
push
pop
jns
in
dec
outsl
mov
aaa
push
ss
mov
in
lock
sbb
jl
fsts
dec
stos
add
fiadds
push
orb
mov
rcll
nop
lahf
aas
jg
jecxz
cmp
pop
sub
xor
out
popa
mov
lcall
inc
lahf
aas
jg
das
lret
pushf
call
mov
xchg
cmpl
mov
test
lahf
fstpl
loopne
lret
push
jo
jl
xlat
imul
in
xchg
das
lds
insl
adc
fcmovb
std
push
pop
scas
shll
int3
clc
out
aas
jg
sub
out
ja
push
ja
xchg
out
lahf
lcall
xchg
xchg
aas
into
jmp
jg
cld
stc
lods
pop
es
aaa
push
rorl
bound
dec
add
iret
lahf
aas
adc
loop
jbe
roll
jne
stc
repz
out
xchg
es
and
mull
lret
dec
js
iret
lahf
jg
push
out
lret
xlat
xchg
cli
test
repz
repz
mov
es
jo
pop
xchg
incl
cli
push
les
iret
adc
jmp
out
push
xor
and
dec
lret
xor
pusha
hlt
scas
jge
add
mov
int3
out
add
pop
cwtl
insb
dec
inc
mov
and
jmp
enter
sub
dec
mov
cwtl
dec
sub
sub
negb
jmp
call
mov
les
ljmp
mov
lock
daa
push
pop
outsb
sbb
mov
push
add
repz
lahf
mov
in
rorl
sub
mov
cmp
adc
ljmp
nop
sub
xchg
test
inc
jbe
cmp
push
notl
adc
add
cmp
sti
mov
jns
mov
daa
int3
sbb
mov
stc
mov
xor
or
jmp
das
jg
cld
and
fdivrl
sahf
jb
xchg
ja
inc
and
mov
xchg
mov
adc
out
lahf
aas
jg
push
lcall
sub
mov
scas
adc
repnz
sub
push
fiadds
xchg
mov
sbb
cmp
in
sub
inc
mov
sbb
pop
dec
sub
adc
lods
mov
lea
pusha
mov
and
or
mov
iret
aas
push
dec
pushf
add
xchg
cld
stc
repz
dec
scas
inc
gs
mov
ret
aas
jg
jbe
adc
lods
mov
out
lret
iret
in
xchg
jnp
clc
cmpsl
cmp
xor
sbb
out
cli
sti
nop
fwait
xor
cmp
sahf
add
stc
repz
jae
divl
push
xor
inc
push
push
clc
lahf
iret
lahf
aas
jg
inc
mov
sbb
pop
repz
pop
fidivrs
fistps
xlat
lea
fdivr
movsl
rcrb
sub
xchg
push
cmpsl
xor
cmp
or
notl
xchg
push
pop
lods
adc
xor
ret
mov
mov
jbe
out
ds
in
or
scas
mov
add
ja
mov
push
inc
scas
mov
cmc
icebp
or
cmp
ret
lret
test
imul
pop
adc
addr16
add
mov
arpl
iret
das
outsb
pop
jl
lock
ljmp
mov
cli
in
out
mov
in
notl
aas
or
stos
test
loopne
loope
lret
sbb
repz
jno
mov
and
pop
mov
in
sbbl
jnp
lret
lahf
aas
dec
push
jb
pop
mov
in
in
repz
scas
jno
cs
fidivl
in
xchg
push
pop
xchg
loopne
ret
jmp
mov
xlat
rcl
add
push
lods
sub
ret
leave
push
add
sahf
scas
cwtl
add
mov
scas
mov
or
sbb
ljmp
fwait
mov
mov
push
mov
mov
insl
cltd
out
adc
in
jno
inc
cld
stc
pop
lods
cmp
icebp
in
jbe
cmp
cld
dec
lds
test
mov
out
lahf
aas
push
push
bound
imul
jns
in
xor
cmp
cmpsl
dec
push
sub
int3
in
push
fisubrs
or
movsb
out
xchg
push
pop
jns
gs
sub
adc
jp
mov
xchg
hlt
in
xchg
xchg
xchg
xchg
fwait
dec
cld
lods
cld
cld
stc
aaa
ds
push
and
mov
es
fisubl
mov
dec
gs
lds
scas
mov
cld
stc
mov
push
adc
hlt
lds
pop
push
lret
sbb
mov
mov
in
xchg
repnz
dec
aam
add
pushf
push
lret
jg
cld
ja
mov
in
cmp
fwait
dec
pop
pop
jg,pt
ds
lods
inc
aas
fsubs
aas
movsl
mov
aas
nop
scas
jbe
add
mov
repnz
pop
ret
scas
mov
push
lods
push
ja
sub
into
adc
lods
stc
cmc
jg
add
in
dec
lds
rcrb
jle
std
stos
pop
fidivrs
mov
stc
das
aas
aas
add
jae
insl
out
iret
leave
les
lods
xor
mov
jge
pusha
mov
sub
out
out
mov
mov
aaa
jp
jle
mov
std
sub
pop
push
mov
repnz
dec
gs
add
in
sub
lods
test
cld
stc
daa
lock
mov
loope
mov
aas
jg
inc
ljmp
fs
movsb
scas
mov
repnz
add
cli
popf
fnstcw
stos
rolb
pop
cld
mov
xchg
cld
cmpl
out
lea
adc
lahf
aas
jg
testl
xor
xchg
subl
into
mov
mov
cmc
into
in
cmp
pop
xchg
mov
pop
scas
mov
repz
lret
arpl
inc
mov
add
mov
jle
in
pop
mov
mov
lahf
dec
gs
outsb
mov
xor
gs
in
add
push
add
add
dec
mov
and
out
scas
lods
fs
test
aam
iret
pusha
mov
in
push
and
out
cmp
sub
loope
cmp
xadd
mov
iret
mov
loope
dec
bound
push
lret
adc
outsb
je
add
push
not
jge
sub
bound
jl
and
mov
or
addl
movsb
lret
repnz
pop
jl
and
xchg
std
mov
lret
outsl
int
sbb
aam
shlb
jecxz
imul
stc
daa
pop
xor
aad
rolb
and
and
mov
xchg
push
inc
repz
seta
push
icebp
jnp
sub
imul
int
fisubl
repnz
xchg
sub
adc
mov
das
scas
mov
bound
adc
jg
mov
mov
mov
fptan
repz
jno
cmpsl
mov
sarl
jge
pop
dec
clc
pop
pop
into
push
fldpi
xchg
test
test
add
imul
outsl
jmp
push
pop
test
fisttpll
or
jg
cld
and
sahf
xchg
aas
sub
adc
lret
push
int
in
adc
xchg
movsb
sar
cld
pop
cli
daa
inc
add
or
jle
jne
sub
jle
nop
pop
jge
add
jmp
inc
and
mov
fs
outsl
mov
cmp
repz
repnz
cmpsb
dec
fsubrs
pop
lea
lret
push
lea
pop
mov
xlat
lcall
mov
or
push
fs
jg
fs
dec
or
in
or
mov
aas
jg
cld
push
popa
loopne
aas
cmp
mov
sbb
lret
inc
push
push
ljmp
cmp
and
sub
mov
jb
popf
inc
sub
cmp
fdivl
sbb
lret
cmp
in
cmp
sub
arpl
pop
pushl
out
cmpsb
ja
iret
mov
out
jle
lods
and
sbb
or
jo
or
sbb
lahf
aas
jg
outsb
or
jecxz
ffree
inc
inc
push
adc
repz
ficomps
pop
sub
xchg
and
pop
jbe
mov
jge
sbb
daa
jp
insl
lahf
iret
lahf
imul
pop
test
stos
sub
stc
repz
cmp
stos
sub
out
aas
jg
insb
xor
iret
call
das
stc
repz
xchg
addr16
std
jo
pop
out
int
mov
stc
dec
mov
dec
cmp
mov
out
dec
push
jbe
sbb
jmp
hlt
lret
xchg
sbb
sub
sub
mov
sub
jmp
imul
jbe
cld
fwait
cli
adc
in
jecxz
stc
pop
jo
push
out
mov
ljmp
repz
mov
int3
pop
jns
popf
nop
jg
iret
and
lahf
loope
pop
in
das
push
fsubrl
cwtl
scas
mov
mov
jle
jge
je
jle
dec
test
jle
movsb
jo
iret
lahf
aas
jg
cmpsb
jp
inc
jmp
stos
sarb
push
std
repnz
repz
sti
fisubrs
mov
ds
and
scas
lret
and
fisubs
adcl
divl
inc
inc
das
mov
mov
mov
pop
loopne
jns
xchg
or
mov
out
hlt
sub
das
ja
leave
and
push
lods
cmp
adc
icebp
lret
out
jle
packuswb
stos
push
clc
in
mov
mov
fisubrs
loop
jl
dec
aas
xor
mov
scas
push
cwtl
stc
xchg
mov
sbb
aam
mov
jle
std
repnz
lret
sub
pop
in
xchg
lahf
aas
jg
in
push
pop
sub
or
xchg
jle
push
scas
mov
xchg
stc
repz
int
jne
aad
pop
loopne
lock
pop
jae
aas
jg
cld
aam
dec
xchg
mov
and
iret
lahf
mov
cwtl
jg
inc
xchg
lock
sahf
adc
stc
pop
cmc
jae
mov
push
jno
xchg
aas
jg
shr
insb
hlt
push
sub
sbb
out
xchg
mov
xchg
andb
stc
cmpl
pop
fucomi
lahf
cld
in
add
cld
aad
jge
push
sub
jae
mov
dec
fs
cli
xor
xchg
out
in
pop
cltd
dec
and
fcomps
insb
pop
pop
scas
mov
aas
cmpsb
jmp
cmpl
shrb
xor
repnz
outsl
das
dec
negl
mov
xor
stos
jge
das
scas
je
jae
mov
mov
aas
subb
lret
cli
aam
loop
aas
rcll
jb
movsl
jle
xor
aam
dec
enter
jns
pop
jns
xchg
cltd
dec
lret
pop
std
pushf
jne
adc
lret
das
jbe
inc
sarb
xor
pushf
pusha
dec
lret
mov
xor
insl
and
scas
mov
mov
lds
scas
mov
xor
lock
push
xor
cmp
aas
adc
dec
scas
mov
call
movq
out
cld
stc
rep
mov
mov
adc
ja
jg
jp
pop
sti
insl
inc
lahf
jb
outsl
xchg
jmp
pop
jns
xchg
pop
loop
and
add
out
pushf
mov
lret
xchg
ja
dec
fldl
pop
cmpsl
dec
aaa
add
and
jns
push
insl
dec
rorl
das
add
lock
cs
addr16
jp
aas
add
add
in
stc
repz
add
xchg
mov
xlat
add
in
in
cmp
aas
jg
cld
arpl
pusha
int
loopne
cmc
fabs
lahf
out
in
lahf
int3
push
mov
jnp
scas
push
mov
cs
in
aad
shlb
das
out
xchg
cmpb
pop
add
push
sub
in
ja
pop
neg
jg
jl
cmp
fstpt
jns
cmp
cld
adc
lret
dec
popf
add
xchg
imul
aas
jg
pop
scas
cmovp
jmp
je
mov
fdivrs
in
arpl
push
jbe
lods
paddd
cld
pop
jg
pop
lret
movsl
hlt
mov
scas
inc
mov
scas
inc
sti
shlb
scas
mov
iret
loopne
jae
sbb
negb
sub
sub
mov
or
jno
dec
repnz
cmpsb
roll
lahf
les
sbb
and
in
mov
repz
movsb
scas
aas
pop
mov
xchg
xchg
insl
std
jb
mov
and
cmp
ficompl
or
lock
jns
repz
adc
lret
iret
dec
push
mov
dec
jle
cld
stc
repz
mov
lock
mov
rcll
ret
outsb
sti
or
pop
jle
sbb
cmpsl
test
jb
pop
ss
fucomip
and
inc
mov
adc
pop
add
mov
sbb
mov
mov
aad
xchg
xchg
das
sbb
mov
fwait
add
hlt
fwait
pop
lea
repnz
xor
stos
xchg
mov
in
mov
jb
xchg
sub
or
xor
lret
cld
mov
mov
stos
inc
mov
mov
add
adc
mov
mov
repnz
and
sbb
loope
int3
jl
mov
stos
jmp
js
push
sbb
mov
imulb
icebp
out
dec
sub
adc
mov
sahf
cmp
out
xchg
mov
aas
mov
lahf
daa
sub
cltd
daa
jmp
mov
lahf
or
inc
mov
mov
in
fists
sahf
cmp
pop
fldt
das
je
out
inc
shrb
out
or
call
insb
loopne
pop
int
enter
sub
mov
mov
aas
fsub
iret
lahf
aas
aas
mov
test
xchg
mov
in
mov
jle
in
sti
xchg
scas
push
jle
repnz
cmpsb
pop
sbb
cmp
inc
aas
mov
mov
pop
jns
xchg
jle
or
xor
cli
xor
mov
push
imul
test
loopne
addr16
push
pop
jb
into
sahf
lds
cmpsl
scas
mov
push
pop
jns
mov
inc
push
xor
pop
jns
out
fsubrl
out
mov
lcall
ja
sub
fstl
add
jge
xor
jmp
popf
xchg
std
jnp
in
dec
push
add
sub
jnp
lret
sti
das
cmp
aas
jo
push
aad
dec
nop
lret
push
sub
es
ret
clc
outsl
outsl
loope
mov
sub
out
js
outsb
stc
repz
das
dec
mov
jnp
mov
mov
dec
cld
dec
jp
cli
dec
xor
imul
aas
jg
fistps
push
mov
scas
mov
xchg
xchg
out
aas
and
sub
xchg
sub
aad
cmpsl
sub
push
test
repnz
cmpb
cmpl
ret
or
xchg
ja
xor
in
jg
xor
mov
das
push
pop
jns
imul
push
add
hlt
dec
into
pusha
rcrb
in
cmp
loopne
in
movsb
dec
adc
in
push
jg
add
inc
and
test
lahf
outsl
popa
nop
push
xor
adc
mov
addb
jg
lret
lahf
aas
jg
or
data16
repz
sbb
lret
fnstsw
mov
dec
sub
stc
daa
push
sarb
or
arpl
add
lahf
aas
jg
mov
xor
mov
add
cwtl
jb
cld
lret
inc
mov
fmul
sub
ds
mull
movsl
cmovs
cli
pop
sub
repnz
mov
aam
or
and
xor
push
fdivl
mov
icebp
repnz
test
mov
shlb
dec
cmp
stc
pop
push
sbb
and
loope
mov
ret
aas
jg
adc
cmpsl
subl
adc
mul
out
lea
pop
pop
xchg
out
scas
js
mov
cmovg
add
inc
out
lret
or
lret
lock
mov
add
incb
stos
hlt
in
mov
aas
aas
mov
stc
shlb
cld
stc
cmpsl
outsb
jb
repnz
xchg
lret
jle
add
loopne
cmp
cld
cmpsb
lahf
arpl
scas
mov
stos
jp
sti
pop
pop
xor
in
popl
lods
cmp
stc
jae
jne
sbb
adc
std
out
outsb
ljmp
stos
xchg
loope
enter
out
loopne
daa
xchg
js
bnd
icebp
or
out
ffree
adc
aas
mov
outsl
push
nop
push
into
daa
aas
dec
dec
repnz
push
inc
psubsw
lret
mov
lods
adc
inc
movsb
leave
mov
repnz
mov
out
sub
sub
xor
scas
mov
pop
scas
xlat
loope
es
out
xchg
pop
test
out
in
push
pop
mov
lea
sbb
push
rcrl
jae
orl
ja
adc
push
jns
mov
scas
mov
pop
sub
adc
push
lret
push
aaa
arpl
xchg
lahf
aas
aas
dec
jbe
xor
pop
adc
scas
lret
pop
or
call
test
loope
negb
mov
jp
mov
jmp
insl
sarb
fcompl
lahf
shll
xlat
loop
and
aam
pop
adc
fiaddl
sbb
adc
rcll
push
adc
stc
repz
mov
std
movb
aas
mov
cld
es
rorb
xchg
cli
dec
push
inc
mov
jns
xchg
cld
push
pop
fwait
out
jns
mov
in
push
pop
addr16
xor
hlt
pop
in
jg
lret
xchg
push
pop
mov
add
dec
and
xor
dec
and
insl
sub
daa
inc
lea
sbb
ljmpw
in
inc
jnp
lock
rcll
cld
cmp
xchg
test
and
stc
popa
xor
push
pop
pop
dec
into
dec
les
sub
mov
dec
cmpsb
inc
bound
out
incl
movsl
mov
sbb
inc
jg
pop
jns
test
mov
inc
push
jne
xlat
loope
andl
jecxz
add
adc
pushf
push
lret
xchg
push
and
cmpsl
out
testb
push
pop
jns
sti
push
bound
add
rol
add
rcrl
adc
fadds
sbb
jns
xchg
add
std
dec
mov
xchg
push
ficomps
clc
data16
stos
in
mov
out
lahf
lock
sub
repnz
mov
mul
inc
xchg
imul
popf
scas
mov
jl
std
add
mov
mov
cld
lret
outsb
sbb
repnz
lcall
pop
sub
jnp
call
mov
test
pop
jns
xchg
leave
cltd
mov
ret
and
push
jne
in
pop
mov
es
inc
test
pop
mov
push
loop
shl
sbb
repnz
jb
push
enter
dec
cmpsb
fistps
rcr
pop
jg,pt
cs
or
adc
adc
clc
sbb
mov
pop
jo
cmc
gs
movsl
faddl
xor
cmp
jl
sahf
movsb
push
mov
lret
inc
repz
loopne
fisttps
or
pop
cld
stc
mov
mov
xor
adc
jp
xor
ja
orl
cld
incb
cwtl
jae
lahf
insl
adc
dec
inc
mov
sub
pop
pushf
jp
pop
into
inc
repnz
dec
pop
inc
or
push
imul
jle
sub
cmpsl
scas
icebp
pop
dec
aad
mov
mov
adcb
icebp
iret
lahf
aas
aas
mov
mov
mov
mul
out
ljmp
and
adc
and
loope
pop
mov
lods
fcoml
jl
outsl
int
sub
xor
arpl
push
jo
nop
mov
jb
sbb
mov
lahf
aas
jg
jle
push
scas
inc
aaa
out
in
psrad
repnz
xchg
iret
mov
xlat
fcomp
mov
pop
adc
cli
mov
cltd
stc
lahf
or
xor
xor
adc
sub
scas
imul
jg
das
scas
ficomps
cmc
aas
mov
popf
push
jle
test
mov
sar
repz
dec
mov
lret
test
mov
cld
add
cmp
add
mov
adc
repz
lahf
or
pop
lods
int
test
mov
pop
es
push
lcall
nop
mov
mov
add
push
fistpl
jns
in
mov
fdivr
pop
loope
ljmp
fisubrs
fnsave
fsub
loopne
iret
fdivs
aam
add
scas
push
pop
jns
sahf
ja
movsb
mov
and
ds
cld
popa
pop
jns
xchg
sub
mov
and
test
iret
sub
push
gs
out
les
out
and
ljmp
push
std
add
pop
inc
and
xor
pop
mov
mov
iret
mov
push
ja
sbb
lods
cld
stc
repz
inc
ss
dec
loope
das
lahf
aas
jg
push
jge
xlat
pmuludq
xchg
xchg
shlb
mov
inc
push
scas
outsb
inc
mov
fldl
aas
pop
fiadds
clc
shll
in
inc
es
sub
cmpsl
fbld
in
loopne
ja
lea
jae
in
lcall
dec
mov
or
pop
add
pop
cli
repnz
sti
jle
mov
cmp
cld
cld
stc
repz
sahf
add
lret
mov
and
add
mov
cli
sub
lcall
les
push
add
cld
cmp
mov
adc
das
test
lret
into
sub
imul
test
ljmp
aas
mov
stc
in
inc
push
ss
xor
enter
iret
lahf
aas
in
cld
out
pop
sbb
pop
mov
xlat
xchg
mov
pop
add
subb
lret
fisubrl
and
repnz
pop
clc
or
jmp
jle
cmp
add
movsl
testb
hlt
nop
fsubrp
loopne
pop
imul
into
xchg
sub
cmp
fists
std
std
repnz
jb
fdiv
aas
jo
xor
xchg
xchg
jns
xchg
push
icebp
in
sub
js
mov
movq
pushf
pop
push
pop
pop
push
pop
sbb
pusha
mov
into
mov
sbb
out
lahf
cmp
popf
addr16
inc
mov
push
pop
jns
xorb
push
inc
inc
popa
pop
pop
rcll
jnp
jns
in
mov
bound
iret
push
negl
js
pop
mov
pop
call
fs
push
out
mov
sti
xchg
aaa
ror
lock
pop
jecxz
jne
loop
pop
jns
repz
sbb
jg
enter
lret
xchg
ja
add
cmp
xchg
sbbb
das
push
pop
pusha
popf
mov
cmpsb
adc
xchg
fisttps
ucomiss
jge
sub
bswap
in
jo
xor
fmuls
add
lret
sub
add
cmc
outsb
push
stc
repz
mov
arpl
cmc
mov
aas
jg
cld
adc
mov
out
mov
imul
adcl
clc
repnz
mov
fmulp
mov
jb
or
cld
sarb
es
pop
dec
stos
stos
hlt
adc
cwtl
mov
subb
movsb
in
cmpsb
jmp
lahf
aas
aas
pop
std
jmp
push
pushf
out
push
aas
or
das
into
lcall
xor
cld
stc
cmp
dec
leave
mov
push
rcrl
add
mul
fisttps
into
add
iret
push
cmpsl
sbb
and
xchg
jle
pop
mov
mov
sub
das
aas
jno
ds
outsb
out
aas
jg
lret
enter
out
loope
mov
mov
xchg
mov
mov
jle
repnz
add
cmp
addl
call
dec
add
stc
repz
dec
notb
mov
aas
jg
cld
and
add
cmp
adc
aaa
loop
jmp
iret
lahf
test
inc
lret
and
repz
outsb
adcl
sub
push
inc
push
lahf
aas
jg
mov
sbb
and
dec
push
das
hlt
stc
repz
push
sahf
daa
in
xchg
xchg
cwtl
data16
movsl
das
xor
jg
cld
loopne
adc
outsb
cmp
shll
lret
mov
mov
mov
aaa
cld
dec
clc
cmp
push
ficomps
dec
jge
pop
jle
fisubrs
iret
lods
scas
push
sub
pop
xchg
xor
repnz
lahf
add
mov
lret
mov
fisttps
loop
cld
dec
clc
repnz
xor
mov
mov
sub
pop
hlt
rorb
ficomps
ret
mov
repz
xchg
test
rolb
cmp
jle
cld
stc
jg
int
xchg
iret
pop
lahf
aas
mov
xor
cmp
repnz
in
outsl
pusha
test
cmp
mov
push
xchg
scas
mov
dec
dec
pop
fisttpl
push
push
jns
add
jg
in
mov
or
scas
in
add
xchg
push
pop
lods
cs
in
push
inc
jg
mov
or
or
jnp
aas
call
call
pop
xchg
dec
cs
in
std
repz
lahf
and
daa
pop
push
push
jno
clc
inc
clc
in
pop
mov
pop
repz
push
ja
cld
mov
ja
test
das
adc
das
jg
pop
add
dec
pop
punpcklwd
out
lret
mov
popf
sbb
jne
mov
push
pop
stc
fsts
push
or
adc
jecxz
fcompl
fst
cmp
sbb
push
scas
push
adc
lahf
aas
inc
mov
dec
les
jb
stc
repz
es
cwtl
scas
lock
push
push
hlt
push
adc
jle
cld
pushf
das
push
mov
insb
xor
and
roll
in
mov
add
push
jb,pt
stc
cld
stc
xor
mov
fmulp
sub
jle
iret
push
sbb
sbb
repnz
or
cli
mov
inc
mov
pop
cli
in
push
movsl
lds
repz
cld
stc
repz
out
adc
movl
dec
das
jg
and
xor
lahf
pop
cs
mov
mov
inc
jl
adc
dec
jmp
fdivrs
jle
or
out
enter
pusha
and
out
lahf
push
stos
ja
test
in
out
cli
div
jae
push
insl
outsl
cld
les
push
xchg
xor
sbb
dec
or
iret
lahf
pop
shrl
mov
mov
fs
cmpsl
xor
mov
stc
xor
adc
in
outsl
imul
fistpl
aas
jg
cld
push
lahf
jne
or
mov
pop
cmp
mov
out
lahf
rcll
mov
andl
cld
stc
cmp
or
xor
sub
icebp
jae
and
insb
fbld
mov
mov
fmull
lock
shrb
imul
cld
stc
repz
sahf
repz
cmp
inc
sarl
movsb
xor
data16
aas
jg
push
jno
dec
xor
ja
or
imul
test
cmp
mov
imull
lret
fdivr
fcoms
dec
sub
pop
sbbb
ljmp
sbb
outsl
sbb
stc
repz
in
adc
cmpsb
sub
repnz
push
jle
pop
xor
mov
in
shrl
loopne
gs
ret
jle
pop
pop
subb
mov
adc
gs
push
inc
inc
popa
inc
popf
or
xchg
pop
mov
or
jno
or
pop
pop
out
addr16
fcmovne
jl
push
in
sti
inc
cli
sbb
arpl
jmp
pushl
mov
cmpsb
and
aas
mov
fmulp
mov
cmpl
test
adc
stos
mov
mov
in
shlb
scas
cld
dec
std
cwtl
sbb
sub
jle
xchg
movsbl
xchg
add
in
stos
xor
mov
aas
cmpsb
nop
or
pop
xchg
mov
xlat
insl
sub
das
gs
fnstcw
out
test
mov
icebp
push
iret
sub
pop
jge
jge
inc
push
and
jbe
fs
push
fimuls
xor
sub
lret
out
sahf
sub
in
mov
aas
jg
sub
popf
push
sbb
pop
mov
lcall
lods
cld
out
mov
jge
iret
das
cmc
movsb
dec
push
xchg
mov
jo
call
jns
out
lret
jecxz
test
add
mov
in
push
pop
push
in
pop
pop
outsl
cmp
out
xchg
push
pop
jns
cmp
xchg
jg
int3
cmp
in
xchg
fcoml
aas
push
add
imul
in
cmp
adcl
jne
cs
test
mov
mov
mov
cli
test
movsb
sti
out
push
jmp
add
mov
cmp
pop
jb
scas
mov
mov
scas
xchg
aas
pop
inc
push
add
repnz
and
mov
mov
subl
dec
repnz
mov
mov
push
cli
out
push
cwtl
pop
mov
xchg
push
repz
lds
shrl
in
push
pop
clc
jno
jbe
cld
xorb
or
dec
stc
pop
push
and
push
xchg
jnp
out
push
jmp
xchg
call
add
mov
imul
xor
mov
outsb
popa
mov
cmpb
insb
jo
sub
into
mov
lea
pop
scas
mov
cmpsl
jg
sbb
dec
es
add
scas
out
in
inc
sub
lods
in
jle
lea
mov
repnz
mov
mov
mov
insb
jae
enter
mov
out
aas
mov
or
in
jb
rcrb
orb
mov
mov
mov
mov
mov
repnz
gs
dec
daa
push
mov
dec
mov
pusha
mov
add
mov
jg
iret
mov
sahf
ror
dec
mov
mov
arpl
mov
in
clc
movsl
repnz
lret
sub
sahf
insb
mov
imul
in
das
scas
mov
cld
cmp
pop
lcall
mov
data16
ljmp
cmc
mov
subb
jecxz
pop
ja
jl
out
sbb
mov
inc
call
jb
jns
xchg
arpl
repnz
mov
adcl
jns
xchg
push
dec
xchg
stc
add
sbb
cwtl
int
lret
out
sarl
xchg
push
jb
popf
iret
je
push
orl
mov
inc
movsl
mov
dec
rcr
dec
xchg
call
loope
les
out
addl
xchg
mov
iret
jbe
mov
in
repz
out
aam
pop
pop
sub
out
out
clc
repnz
arpl
sub
outsb
lock
inc
xchg
mov
ficompl
hlt
sbb
pop
mull
jg
incb
xor
outsb
xchg
clc
ja
lahf
aas
jg
add
stos
sahf
data16
cmc
in
loop
cld
stc
repz
mov
xor
push
les
fwait
jb
mov
mov
add
xor
mov
inc
pop
sub
cld
push
pop
scas
inc
mov
fwait
adc
sub
cltd
lret
iret
lcall
add
lret
aas
call
call
scas
mov
jnp
js
fs
cmp
xor
lret
loope
jge
scas
jae
lret
ds
lahf
pop
or
xchg
mov
shlb
and
xchg
iret
call
fisubl
iret
mov
neg
xor
pushf
inc
add
in
mov
popf
ds
stc
repz
xchg
xchg
jle
popa
push
jno
test
mov
mov
outsb
rolb
xor
adc
repz
adc
ret
inc
fdivrs
icebp
mov
cld
cld
sub
jl
iret
add
or
stos
popa
xchg
mov
pop
gs
xchg
mov
fwait
dec
pop
cmp
in
imul
add
adc
jne
cmp
and
out
cltd
pop
push
dec
scas
pusha
std
jp
iret
lahf
aas
push
mov
xor
cld
stc
repz
mov
das
cmp
in
pop
mov
pop
ja
mov
mov
loop
scas
rcrl
or
pop
scas
mov
scas
push
or
ljmp
test
mov
cld
stc
repz
rcr
or
hlt
out
adc
ret
lahf
aas
jg
and
jg
dec
into
rorl
cld
rol
add
lret
iret
pop
sbb
imul
cmp
repz
mov
sbb
add
xchg
lret
out
fildll
scas
sti
add
outsb
mov
scas
mov
jae
xchg
dec
in
cmp
aad
out
jbe
jg
aas
dec
fstps
insb
mov
cmc
in
rcrl
inc
sub
adc
sub
dec
dec
xchg
imul
jge
and
push
nop
call
xchg
loope
aaa
cwtl
cs
lock
test
sub
mov
je
jg
pop
outsb
xchg
stc
push
pop
jg
shr
mov
fidivs
popf
mov
push
leave
sub
inc
inc
xchg
fstp
pop
xchg
iret
lahf
pop
sahf
lret
lret
add
inc
rorb
push
xchg
lahf
pop
loop
adc
in
pop
cmc
mov
negl
in
xor
mov
enter
in
push
popa
and
pop
dec
and
pop
adc
das
push
pop
fistl
movsl
pop
out
je
sbb
mov
out
add
dec
push
pop
jns
stc
insw
aad
loope
repnz
push
repz
loope
jb
xchg
in
lods
dec
pusha
xor
inc
adcb
in
push
ficomps
push
test
adc
cmc
fistpll
sub
xchg
push
pop
jns
iret
xchg
inc
fistpll
repz
aas
mov
xor
int3
adc
iret
lahf
aas
das
sbb
cltd
imul
mov
inc
dec
andb
sub
jns
mov
int
in
push
adc
popf
movsb
cmpl
inc
cld
inc
pop
pop
lahf
hlt
addr16
lahf
add
sbbb
fisttpl
loopne
into
xor
popl
clc
in
mov
popl
adc
jp
cld
dec
inc
mov
inc
cmp
fildl
xchg
aas
leave
fldl
pop
pop
lahf
xor
jecxz
stc
repz
lds
aad
std
mull
xchg
add
jle
mov
inc
sahf
std
jle
rcll
ljmp
aam
ljmp
mov
jae
add
hlt
in
sub
shll
sub
iret
push
inc
aad
xchg
int3
xor
pop
stos
inc
pusha
pop
mov
jl
cld
nop
out
mov
movsl
inc
pop
jle
adc
add
pop
jmp
incb
fbld
xor
push
pop
jns
push
adc
enter
dec
je
pop
jns
xchg
jmp
sub
add
sysenter
cmpsb
fists
test
ret
adc
lretw
jns
iret
lahf
aas
jg
sbb
sbb
jo
int
pop
push
and
repz
jg
mov
xchg
xchg
sbb
xor
nop
ror
lods
lret
cmp
test
aam
lahf
aas
sbb
daa
out
adc
xlat
adc
stc
repz
out
jns
adc
cmc
cld
sub
idivl
jg
cld
push
xchg
sti
mov
add
dec
stos
dec
jp
repz
lahf
and
mov
mov
in
test
mov
cli
xchg
loope
pop
fists
sub
hlt
je
mov
jmp
lret
sub
mov
loop
testl
ret
mov
inc
imul
mov
add
sub
mov
imul
iret
and
scas
push
outsl
scas
mov
das
adc
dec
nop
hlt
push
aad
mov
pop
dec
mov
xchg
aas
inc
add
loop
imul
mov
jmp
xchg
in
fistpll
dec
mov
scas
mov
pop
cs
dec
daa
lock
sub
pop
loope
lret
xchg
push
xchg
repz
xchg
lods
scas
cmp
inc
xchg
bound
add
jl
cld
stc
pop
pop
pop
test
sti
mov
lods
repz
mov
aas
scas
xchg
push
stc
pop
pop
aas
divl
xor
in
aaa
cmp
dec
mov
jne
ja
push
pop
jns
mov
enter
jnp
loop
pop
jns
mov
sbb
adc
das
fwait
inc
mov
out
jg
sbb
stos
fimull
lahf
aas
mov
cmc
cs
lret
jne
stc
repz
sti
lock
lret
pop
rcrl
pop
jle
cld
orb
fstl
lahf
pop
mov
cmpsl
adc
lahf
pop
add
adc
inc
pushf
dec
pop
mov
out
xor
cld
call
mov
cs
jle
out
mov
cmp
roll
mov
dec
jg
adc
outsb
sbbb
add
loop
xchg
aas
mov
jmp
cs
stos
in
lret
lahf
push
or
movsb
fildll
dec
jl
bound
xchg
cmpl
hlt
cld
stc
and
lds
aaa
sahf
jg
mov
jmp
aas
jg
push
hlt
movsb
push
movsb
add
testb
xlat
das
jne
adc
mov
sbb
and
psllw
out
xor
andl
push
icebp
jg
movsl
pop
iret
mov
test
repz
pop
jbe
mov
pop
xlat
in
scas
mov
adc
popa
loopne
dec
mov
hlt
lret
jg
jnp
cmpsl
add
dec
jl
movsb
sbb
inc
or
aas
jg
ret
dec
lods
nop
das
and
add
inc
es
in
cwtl
mov
jg
cld
stc
or
mov
jle
pop
xor
jne
mov
fistl
das
lahf
aas
push
loope
iret
icebp
pop
adc
out
ds
dec
mov
mov
jno
mov
fadds
push
repz
jae
scas
mov
inc
push
xor
aas
movsl
xchg
add
scas
mov
pop
pop
mov
push
movsl
mov
mov
inc
push
sub
clc
dec
fists
sub
lret
iret
cltd
popl
out
mov
mov
in
test
push
icebp
rsm
cmpb
and
insb
js
xor
rorb
mov
notl
mov
scas
mov
frstor
jb
lret
out
lahf
out
cmp
xor
jns
adc
mov
push
pop
inc
arpl
push
clc
in
sub
loope
loop
dec
cmp
mov
jg
cld
jle
xor
inc
lods
dec
mov
sub
xchg
iret
lahf
sbb
jecxz
loop
movsb
and
pop
scas
mov
les
scas
lret
lds
mov
lret
scas
mov
sub
pop
lahf
leave
scas
pop
js
xchg
out
mov
das
jg
mov
xchg
jns
dec
mov
pop
aad
pop
jns
xchg
std
adc
out
cld
dec
push
pop
movsl
sub
stos
ds
mov
push
or
out
cmp
iret
popl
cld
jecxz
mov
jg
sub
mov
mov
repnz
aas
sub
mov
iret
das
sub
call
cmp
scas
pop
mov
movsb
out
les
dec
cmpsl
and
outsb
inc
movsl
fistl
dec
ret
mov
push
negl
das
mov
mov
mov
mov
stos
sub
xlat
cmp
aas
push
pop
jns
push
dec
xchg
bound
mov
mov
scas
xor
popf
aam
ljmp
xchg
icebp
inc
pop
cmp
jns
xchg
ja
shll
call
loope
jns
mov
mov
arpl
jns
cmp
scas
imul
stc
jb
lret
xchg
jae
and
or
js
out
or
xchg
scas
and
or
orl
xchg
push
rcrb
subb
jg
jbe
int3
mov
dec
jmp
das
out
pop
push
inc
cmp
nop
jp
add
and
out
lret
jns
pop
pop
or
loopne
icebp
or
js
cwtl
test
jp
in
sub
mov
lret
dec
imul
loope
sbb
stos
sahf
and
ljmp
jg,pt
not
xor
mov
xchg
mov
lahf
adc
aam
loope
mov
enter
fdivrs
repnz
sub
jb
in
jns
fstl
sbb
push
fisttpl
popf
lahf
or
imul
lret
fistpll
test
pop
pop
cmp
sbb
sbb
pop
inc
in
push
pop
pop
repz
arpl
mov
jb
aam
fdivrp
or
lcall
jle
ds
push
jmp
jae
out
mov
test
pop
mov
leave
insl
mov
loopne
cmp
dec
out
xchg
sub
clc
das
rsqrtps
lret
push
lahf
sub
mov
mov
sbb
push
mov
mov
or
cld
and
pop
jne
jb
sub
xchg
iret
fnstenv
ror
out
mov
scas
mov
ljmp
in
lret
decl
cmpsb
test
lret
sub
imul
fcmovne
add
mov
sbb
cwtl
outsl
psubd
mov
outsb
jle
mov
scas
frstor
jmp
and
in
xchg
cmovle
cmp
pop
jno
inc
xor
pop
jns
jl
cmp
sarb
aas
mov
pop
jp
pop
push
add
adc
push
mov
xchg
lods
xchg
or
mov
jle
and
nop
pop
sarl
pop
lret
cmp
mov
xchg
push
pop
push
imulb
jge
add
dec
or
jns
ja
popa
mov
push
ret
dec
nop
lock
lahf
jg
dec
push
lds
mov
popf
mov
add
cli
in
lahf
out
adc
xlat
aas
hlt
out
test
jg
cld
into
fisubs
push
sub
xor
add
xchg
sbb
dec
loop
lahf
fidivl
out
aas
test
jle
or
push
mov
jnp
repz
xor
movsl
mov
mov
lret
add
inc
pop
mov
js
lret
mov
push
stos
movsb
cmp
out
lea
scas
mov
inc
outsl
xchg
jns
sahf
adc
repnz
xchg
cmpsb
ja
repz
es
loopne
dec
mov
das
out
mov
cmp
call
lahf
aas
jg
sahf
ja
dec
cmp
aas
adc
out
bound
xor
sbb
cwtl
out
sti
xor
sbb
dec
lods
cmp
push
cld
mov
jns
aas
hlt
lret
and
xor
inc
rclb
scas
sub
repnz
bndstx
mov
push
xor
pop
jmp
jne
cld
stc
repz
outsb
call
ret
mov
aas
jg
sbb
out
imul
xchg
cmp
ljmp
push
je
sarl
cld
stc
repz
sahf
ja
xchg
sbb
pop
ds
cmp
lahf
aas
jg
push
hlt
and
cmp
cmp
stos
addl
repnz
repz
push
mov
fidivrl
stc
inc
stc
xchg
add
repz
mov
mov
mov
js
popa
sbbb
out
test
inc
pop
xchg
sbb
sahf
ret
dec
jbe
faddl
adc
andl
pop
xchg
ror
dec
in
push
aad
xor
pop
jns
mov
mov
test
sub
cltd
andl
mov
mov
mov
rcrl
or
lahf
aas
or
push
iret
movsb
addb
lret
fnstsw
fbstp
mov
stos
push
pop
jns
or
imull
test
into
movsl
ucomiss
add
popa
dec
lahf
aas
lcall
or
mov
ja
popf
cmpsl
js
stc
repz
push
mov
sub
pop
and
mov
fsubrp
outsl
mov
sbb
mov
gs
add
bound
pusha
jge
pop
push
dec
cmp
scas
mov
stc
xchg
icebp
in
scas
data16
movsl
mov
aas
jg
cld
ret
stos
mov
call
sbb
lret
lahf
nop
ds
push
sarb
push
mov
cld
inc
ds
pop
mov
mov
daa
ret
add
mov
mov
stc
mov
fisttpl
rclb
mov
jbe
ss
aas
pop
add
jae
into
push
sub
and
lds
in
mov
cltd
lahf
scas
movsl
dec
ss
cmp
push
and
das
js
ja
cmc
xor
xorb
mov
inc
pop
lahf
pop
lret
pop
xlat
pop
fstl
mov
sub
insb
aaa
mov
cli
mov
and
or
clc
push
sub
arpl
lahf
aas
jg
lock
sbb
subl
mov
sbb
lret
iret
sbb
mov
je
jo
pop
xchg
fstp
outsb
sub
mov
push
sete
testb
and
pusha
xchg
push
pushf
mov
loope
rclb
lods
jge
es
into
dec
jb
repnz
xor
xchg
ljmp
jo
rcl
cld
stc
adc
push
fwait
js
and
or
and
jg
vpunpcklwd
mov
outsl
cld
stc
and
cmp
int
scas
aam
jmp
sub
mov
das
pop
inc
mov
stos
loope
out
lahf
aas
cmp
inc
cmp
push
je
sti
sti
repnz
pop
fcompl
and
out
aas
xchg
mov
in
test
std
or
cmc
aas
pmullw
jg
lcall
outsb
fcomps
stos
jns
repnz
lret
iret
cmp
or
addr16
sub
stc
push
jg
aam
insb
push
sub
sbb
popf
leave
sbb
adc
mov
jg
jns
pxor
jns
call
inc
sbb
jg
dec
jl
dec
out
cmc
in
inc
fsubr
scas
rcrb
fsubr
xchg
inc
push
mov
sbb
xchg
mov
out
mov
xor
lret
aaa
ret
xor
or
stc
xor
mov
cmp
lock
fcmove
das
lahf
aas
jg
jno
fstl
adc
xor
adc
shlb
scas
dec
test
in
leave
pop
stc
repz
inc
pop
and
movsl
inc
xor
ret
push
or
into
aas
jg
cld
xor
cmp
insb
loopne
cmp
out
lret
mov
dec
or
movsb
ljmp
std
xchg
arpl
push
sub
iret
lahf
aas
mov
shlb
xchg
jmp
inc
add
in
xchg
add
cltd
and
fnstsw
repnz
daa
push
lods
std
push
jno
fdivr
lods
add
dec
cld
mov
push
data16
loop
mov
lahf
aas
xlat
pop
pop
jp
xorb
clc
repnz
lcall
cld
out
stc
ret
loopne
cs
dec
dec
mov
cwtl
stos
outsl
int3
sub
scas
inc
into
std
repnz
repz
cmp
imul
lods
push
push
cmp
int3
in
mov
pop
int
push
sbb
scas
rclb
mov
gs
rcrl
mov
cmc
ljmp
scas
push
js
shr
icebp
push
hlt
lret
pop
mov
xor
iret
lahf
aas
jg
mov
mov
push
adc
ljmp
dec
jo
cli
in
mov
shl
jl
jle
cld
cs
mov
rorl
mov
fdivrs
fldcw
adc
lahf
aas
jg
jle
sub
cmpsb
outsl
loope
dec
jne
repnz
lret
iret
push
pop
femms
jae
out
inc
imul
pop
scas
mov
cs
pop
sahf
push
lods
mov
pop
fcompl
stos
out
out
nop
loop
in
sahf
sub
int
pop
jns
repnz
out
mov
sbb
das
sbb
movsb
pusha
jns
xchg
push
jns
repnz
mov
push
pop
jle
and
lock
fstpl
push
ljmp
xor
adc
icebp
add
nop
inc
or
mov
outsl
int
int
pop
xchg
jge
sbb
lret
stc
mov
loope
cli
lds
vmrun
scas
mov
mul
jae
or
and
push
lret
ds
hlt
dec
mov
pop
sub
das
jns
mov
xchg
sub
lret
aaa
push
push
out
jp
incb
stc
push
call
out
fiadds
adc
sbb
inc
pop
jle
cli
mov
daa
mov
aas
lret
lahf
in
imul
push
xor
mov
or
lock
mov
aaa
cmc
in
stos
push
and
xchg
iret
sbb
sbb
repnz
fisubs
mov
and
sub
in
lahf
aam
mov
sub
inc
pop
adc
data16
fcompl
scas
add
and
call
pop
jns
nop
or
lret
and
pop
jns
xchg
xlat
in
ds
lea
lret
adc
pop
mov
in
xchg
xchg
push
add
aas
jg
or
jb
add
pop
fstpt
or
mov
add
pop
xor
lret
fstpl
out
mov
mov
jmp
dec
xchg
mov
sub
decb
jl,pn
aas
adc
mov
clc
repnz
xchg
adc
pop
pop
call
adc
loopne
pop
in
loopne
sub
sub
mov
or
and
repnz
dec
ror
adc
sbb
jg
cld
lcall
add
dec
movsb
iret
lahf
aas
scas
pop
jbe
push
adc
xor
fiaddl
cld
stc
repz
mov
pushl
fstpl
jnp
push
leave
lahf
aas
jg
xchg
hlt
push
jbe
bound
test
out
out
pop
jle
clc
test
pop
xor
rcrb
jg
ds
push
push
push
sahf
pop
into
pop
test
out
lahf
ret
mov
sub
or
dec
mov
dec
mov
out
fimuls
pop
mov
fisttps
arpl
mov
add
xor
mov
inc
repnz
sahf
jmp
xchg
add
mov
das
scas
mov
inc
sti
push
mov
cltd
add
sti
in
lock
mov
fwait
lcall
mov
enter
jecxz
nop
cmpsb
push
repz
pop
cs
sti
pop
shlb
sbb
stc
cld
stc
cmp
repz
stos
sbb
les
pop
jg,pt
mov
mov
dec
out
jo
aad
jae
or
cld
stc
repz
xchg
shl
enter
insl
arpl
int
lahf
aas
jg
push
je
out
and
js
mov
es
int
dec
cmp
adc
and
xchg
lret
jle
flds
fisttps
cmp
scas
mov
jns
xchg
iret
cmp
mov
sarb
repnz
or
dec
andl
lea
jns
xchg
push
push
out
push
ret
push
loopne
inc
enter
fidivrs
mov
lcall
xchg
aas
jg
dec
les
cltd
mov
mov
adc
repnz
outsl
idivb
ljmp
adc
lret
cmp
inc
lret
sbb
pop
push
jecxz
add
out
jg
cld
stc
mov
push
push
shrl
and
aas
scas
fstpt
jno
mov
and
cld
add
imul
sbb
inc
scas
sub
cs
aas
jg
loopne
sbbl
leave
aas
xchg
cltd
pop
scas
mov
or
ja
mov
mov
das
mov
push
sahf
pushf
adc
mov
idiv
or
inc
sbb
adc
or
or
pop
sub
ds
pop
cmp
ds
add
lret
cltd
xchg
repz
lahf
cmpl
scas
xchg
inc
dec
sbb
dec
ss
cmp
jle
sahf
mov
adc
lahf
aas
dec
cmp
push
mov
outsl
fdivrl
xchg
cld
add
rolb
jge
sub
inc
add
push
dec
lahf
aas
jg
ds
add
push
lods
dec
xor
jns
dec
loopne
enter
or
cmp
stc
push
fidivrs
cwtl
push
inc
jbe
ret
pmulhw
jge
ds
hlt
ret
cmc
std
jecxz
pop
and
xchg
pop
jmp
enter
arpl
outsb
pop
inc
sub
mov
mov
xchg
dec
sub
xchg
sub
icebp
inc
iret
arpl
fnstcw
pop
mov
addl
aas
mov
aad
push
adc
mov
add
test
cli
xchg
aam
push
pop
loop
push
out
push
mov
jg
sbb
ds
out
sti
xorl
jg
dec
into
mov
ds
ffreep
iret
sbb
jg
pop
hlt
out
and
jb
dec
pop
lcall
mov
test
push
es
in
sub
gs
mov
jne
sti
adc
or
jl
insb
cmp
xlat
adc
je
mov
test
inc
push
sti
decb
jle
mov
and
fstpl
in
jmp
push
int
fsts
pop
ret
xor
stos
mov
sti
in
adc
sbb
jo
inc
int
jg
cld
push
pop
out
push
mov
sarb
orl
inc
out
cld
cwtl
cmp
sbb
mov
xchg
mov
pop
adc
mov
ret
push
mov
pop
mull
push
int
or
rolb
aas
jg
pop
mov
dec
outsl
xor
xchg
scas
fidivrs
aam
sti
push
dec
or
xchg
lahf
aas
add
fbld
sti
mov
lret
push
test
ret
mov
push
test
xchg
push
fimuls
in
imul
cld
das
push
pop
jns
pusha
add
pushf
loop
fst
ficoms
sarb
cmp
push
mov
insb
repnz
das
inc
lock
push
mov
and
xor
pop
push
shl
aas
cmp
aas
push
out
add
lds
pop
push
jns
ss
je
das
dec
xlat
cmp
jge
jle
in
push
pop
sahf
sti
dec
es
jle
loope
jnp
lods
xchg
push
pop
jns
dec
and
jg
add
in
pop
mov
rclb
jle
adc
enter
enter
fmuls
xor
cmc
das
xchg
cli
outsl
jl
sahf
xlat
mov
out
lahf
cmpsl
setns
rcl
fnsave
inc
call
repnz
add
lahf
aas
jg
aaa
cmp
add
inc
dec
mov
jg
in
test
pop
outsl
outsl
repnz
dec
mov
outsl
repnz
in
sbb
cmpsl
cmp
dec
push
mov
movsb
mov
xorl
jg
cld
stc
mov
jmp
popf
push
adc
mov
xchg
lahf
aas
rcrl
pop
arpl
sahf
lods
pop
mov
out
add
mov
jb
mov
and
stc
iret
inc
stc
stc
jae
iret
loopne
jg
aas
sbbl
xchg
mov
iret
jmp
cld
das
dec
loopne
ljmp
test
scas
cld
mov
stc
repz
xor
pop
jg
xor
aas
jg
js
cs
scas
sub
in
mov
stc
repz
aam
jl
sub
andl
mov
or
jp
test
popf
mov
inc
pop
mov
push
fidivrs
jae
mov
bound
stc
out
sbb
jb
bsr
iret
pushf
mov
jg
insl
std
pop
pop
bound
dec
jne
mov
rcrb
in
outsb
leave
cmpsb
sub
in
stc
repz
std
scas
shrb
and
cmp
ret
stc
cld
ljmp
in
add
push
lret
xchg
test
loope
cltd
out
mov
loop
out
mov
xchg
inc
mov
repnz
mov
enter
mov
fmul
sub
add
fucomi
push
out
je
jle
repnz
stc
scas
xchg
andl
push
xor
outsl
xchg
adc
xlat
dec
in
jle
movsl
mov
pop
mov
xchg
scas
xchg
xchg
stos
out
xchg
push
pop
jns
in
jnp
js
push
sbb
sti
or
pop
jns
jge
fucomp
in
adc
test
push
sahf
cld
stc
xor
fisubrl
lds
dec
stos
push
xor
dec
mov
pop
push
pop
loop
test
xchg
xchg
lcall
sbb
xchg
jge
and
sbb
loopne
sub
stos
jns
repz
les
fidivrs
mov
xchg
clc
add
repnz
ret
adc
mov
cltd
mov
jns
cmp
xchg
ja
and
daa
popl
xchg
pop
sub
js
js
wrmsr
icebp
fists
cwtl
stc
inc
les
adc
mov
dec
pop
pop
jns
mov
imul
out
or
pop
push
pop
fisttps
nopl
lahf
jg
mov
jle
xor
out
rclb
jb
lods
and
cld
stc
repz
push
add
rclb
sub
ds
test
mov
repnz
sub
stos
hlt
jne
add
xor
movsl
add
repnz
pushl
subl
and
adcb
dec
fbstp
outsl
fcmovbe
jbe
xchg
les
lahf
aas
test
mov
add
dec
std
jb
mov
inc
inc
pushf
cltd
push
push
cmp
aas
jg
ds
mov
inc
lahf
and
in
iret
mov
inc
cmpsl
in
lods
das
add
jne
push
cmp
int3
cli
dec
stos
lea
loope
pop
das
jge
test
enter
repnz
flds
push
out
aas
jg
cld
out
jmp
mov
inc
notl
in
cmp
cmpl
mov
mov
pop
ss
insb
xchg
xor
xchg
sub
aaa
lcall
jns
add
mov
sbb
xchg
test
xchg
loope
lahf
pop
dec
adcl
and
cmp
cmc
pop
dec
cld
add
xchg
mov
lahf
aas
jg
les
inc
mov
cld
stc
repz
insl
mov
sarb
lret
cmp
push
lahf
aas
jg
sub
aas
mov
dec
jmp
xor
repnz
xchg
iret
popa
data16
lret
xor
test
xchg
cmc
frstor
call
dec
mov
and
dec
scas
mov
sbbl
push
lret
mov
imull
iret
lahf
pop
dec
mov
popa
mov
hlt
repnz
pop
hlt
subb
aas
stos
into
cld
sarl
xor
mov
add
cmp
push
pop
ret
cmp
jge
cld
scas
das
sti
aas
jecxz
ret
add
ret
xchg
push
push
frstor
and
cs
pop
lcall
mov
sbb
fildll
push
pop
jns
sub
sub
dec
ret
mov
jns
frstor
mov
pusha
mov
rolb
sahf
arpl
or
xchg
fisttps
sbb
mov
daa
stc
xor
faddl
lock
jle
jnp
xor
iret
push
xor
and
xor
cmpl
fnsave
mov
jae
dec
cmpsl
repnz
add
add
mov
ljmp
cs
jo
inc
loopne
mul
inc
cmpsl
dec
dec
mov
iret
pop
and
pop
jl
sub
pop
jp
out
icebp
sub
movsl
and
mov
cmp
decl
outsl
shl
stc
pop
mov
push
aaa
pop
jb
cmp
lock
add
outsb
das
fidivrs
fisttpll
outsl
mov
test
mul
xchg
push
xor
or
jns
mov
fsubl
iret
and
mov
pop
push
dec
fsubrl
mov
xchg
ja
out
andl
xchg
aam
fdivl
pop
jns
imul
xor
call
lret
hlt
insl
sarl
mov
mov
repnz
das
pop
inc
sub
or
jbe
lret
scas
stos
gs
out
orb
outsl
jge
lahf
pop
scas
mov
or
cmpsl
aad
pop
push
scas
mov
push
jp
adc
out
xchg
push
pop
jns
add
das
dec
inc
in
hlt
add
pop
pop
jns
and
cmp
dec
and
jg
shll
mov
jns
stos
adc
js
xchg
cld
inc
arpl
fwait
and
sub
call
fiadds
sub
xchg
sub
cmp
nop
test
xchg
outsl
orb
mov
cmp
inc
adc
adc
sub
scas
mov
adc
inc
rorl
scas
mov
jmp
push
dec
xor
pop
cmp
lret
pop
mov
inc
into
test
jns
fldl
cs
mov
fdivrs
xchg
push
daa
inc
lcallw
jecxz
leave
mov
das
push
pop
test
xor
and
ss
pop
jns
insb
cs
or
lret
push
es
jns
in
cltd
jns
inc
mov
fldenv
push
pop
push
lret
dec
jmp
inc
cli
xchg
push
pop
jns
inc
data16
cltd
adc
sub
jns
and
xchg
inc
mov
cwtl
xchg
add
jns
stos
or
jmp
mov
ret
pop
adc
ret
pop
sti
sbb
add
xor
loope
cmp
jbe
xlat
ret
scas
outsl
in
adc
mov
popa
cmc
or
mov
out
lods
pop
sbb
sub
insb
add
pop
cli
in
filds
mov
popf
mov
ds
inc
or
xor
std
aaa
mov
in
sti
fcmove
pop
icebp
adc
out
aaa
into
push
repnz
pop
xor
out
lahf
aas
jge
lock
inc
push
cmp
cmp
icebp
pop
loop
mov
or
insb
setle
movd
jbe
js
stc
cld
ret
call
mov
dec
lret
jle
loopne
ljmp
jle
xchg
pop
clc
in
jp
lret
rorb
or
insl
mov
mov
sbb
lahf
aas
or
jo
push
mov
ja,pn
fsubrs
lea
cld
cmpsl
mov
push
fdiv
adc
xchg
ret
adc
int
inc
add
pop
ret
test
push
xor
imul
push
test
aas
jg
test
loope
sti
out
loope
mov
iret
pushf
mov
jo
je
inc
lret
out
lahf
cmc
or
dec
cwtl
xchg
or
jns
dec
rcrb
cmp
mov
test
icebp
sub
xchg
push
pop
xchg
adc
sbb
out
push
mov
xchg
lret
sbb
das
cld
stc
mov
and
es
ja
pop
mov
and
sbb
bound
repnz
aam
je
dec
cltd
dec
adc
jns
repnz
or
adc
or
jb
xchg
push
cmp
inc
jo
xchg
test
inc
scas
xchg
pop
cmp
data16
push
cld
or
in
lods
inc
lcall
loope
add
jg
cmp
adc
push
aas
jle
jg
aad
inc
pushf
mov
aam
or
pop
inc
mov
push
jg
sub
repz
mov
sbbb
add
pop
xchg
std
repnz
fists
sub
aam
das
shll
aas
add
jo
sbb
icebp
out
lret
out
and
pop
or
lods
lahf
inc
stc
inc
jns
out
sahf
sarl
mov
gs
cld
cld
stc
fs
clc
mov
sub
repnz
scas
cmp
sbb
inc
scas
inc
xchg
and
scas
mov
out
adcb
mov
xor
stc
fmuls
dec
jl
sub
int3
rclb
test
xchg
sub
arpl
adc
repz
aas
out
adc
sub
jg
cld
stc
jns
or
add
iret
mov
mov
xchg
outsb
rcrl
cmpl
mov
arpl
or
push
les
cwtl
xchg
scas
dec
pop
iret
mov
shlb
and
xor
mov
gs
aad
dec
out
xchg
adc
xchg
push
pop
jns
test
dec
pop
jmp
shlb
xchg
inc
out
adc
push
or
push
pop
out
outsb
pop
sub
daa
pop
mov
push
pop
into
inc
push
stc
jns
xchg
ja
lea
nop
lds
shl
call
mov
xor
stos
jg
mov
sarb
inc
scas
mov
xchg
pop
inc
les
sub
jle
dec
shll
push
or
fcmovne
das
test
icebp
sbb
adcl
lahf
aas
jg
push
inc
mov
inc
es
dec
stc
repz
pop
decb
inc
loop
jne
mov
aas
jg
cld
notb
scas
jo
inc
fiadds
mov
xor
mov
test
mov
daa
jmp
out
adc
cmp
dec
dec
push
sbb
xor
jp
cmp
xor
mov
outsb
dec
xchg
or
loopne
stc
cld
lcall
popf
xor
out
sbb
xchg
sub
add
xchg
mov
imul
cwtl
js
xor
xchg
push
pop
jns
pop
push
xorl
sub
in
add
ficoml
push
mov
loop
cmp
stos
dec
pop
push
pop
jns
fs
int3
scas
inc
dec
push
std
xor
lret
xchg
pop
out
dec
jg
enter
cld
or
repnz
mov
aas
adc
xor
aas
jg
dec
mov
lahf
cld
sbb
sub
jg
adc
arpl
mov
xchg
ss
aaa
out
lahf
aas
add
mov
jno
pop
sub
cmp
ret
stc
repz
jmp
xchg
jno
sti
mul
repz
mov
xor
mov
mov
mov
mov
outsb
aas
sub
lret
ljmp
mov
mov
scas
mov
adc
xor
stos
pop
lcall
iret
mov
lods
pop
and
jno
mov
scas
mov
arpl
sbb
sahf
xor
mov
or
fdivrs
push
xchg
and
sub
int3
inc
jg
aas
aam
aas
iret
push
stos
pop
out
xchg
in
lret
lods
xchg
in
imul
out
lret
dec
rclb
push
popf
int
cmp
xchg
pop
add
mov
mov
lods
dec
ss
cld
orl
push
nop/reserved
jnp
mov
out
add
jg
mov
jmp
in
lahf
dec
cld
cs
pop
fs
lret
frstor
iret
in
cmp
jle
das
out
adc
jecxz
push
ljmp
lahf
iret
aas
imulb
jge
icebp
lret
xchg
mov
and
jmp
xor
xor
lahf
aas
jg
dec
push
fdivs
mov
push
pop
stc
ror
xor
xor
add
mov
sbbb
adc
movsb
inc
add
pop
xchg
mov
sub
and
das
push
mov
ljmp
inc
cs
jns
fnstsw
inc
pusha
push
icebp
in
fisubs
lahf
jnp
js
daa
jbe
imul
pop
pop
scas
xor
add
adc
lret
mov
xchg
fistpl
das
scas
mov
cli
arpl
neg
std
adc
call
das
repz
mov
jno
sub
dec
sahf
mov
adc
sub
mov
jg
pop
pop
jns
and
mov
inc
ret
cmp
das
lahf
aas
ficoms
jbe
inc
and
jl
data16
out
lret
xlat
push
in
mov
rcrb
lret
mov
in
jmp
popf
cmpsb
aaa
add
sub
jns
test
movsb
das
push
dec
sbb
push
scas
mov
mov
pop
cmc
scas
bnd
push
pop
in
mov
ret
mov
mov
push
add
andl
sar
cwtl
xchg
repz
shlb
lock
out
jg
cld
stc
sbb
mov
je
add
mov
das
aas
mov
sub
lcall
add
sarb
jecxz
adc
and
jne
mov
and
je
daa
mov
pop
cs
icebp
in
fidivs
repnz
ja
imul
repnz
mov
add
out
mov
lret
outsl
jp
mov
nop
push
mov
out
pop
in
icebp
out
out
lods
and
stc
repz
cmpb
inc
mov
xlat
ret
fistpll
pusha
add
jg
dec
mov
adc
and
imul
sti
in
ret
push
data16
out
cmp
jle
xchg
outsl
sahf
xchg
jnp
scas
addr16
js
gs
pop
xchg
scas
hlt
out
das
and
jge
pop
subb
repz
pushf
inc
xor
daa
or
stc
xchg
out
aas
fistpll
fildll
loope
lock
mov
cmp
jg
jmp
adc
cmp
sub
sub
setg
rolb
fldcw
iret
loopne
lret
xlat
cmp
pop
in
jecxz
sbb
bound
lods
fldenv
xchg
aas
jg
hlt
jnp
mov
mov
into
push
push
mov
jns
pusha
mov
subb
dec
add
sarl
jl
cld
stc
or
sub
pop
sub
test
lahf
pop
pop
sbb
dec
adc
dec
xchg
xchg
ret
or
sbb
sub
ljmp
cli
dec
mov
daa
shl
xchg
push
leave
sub
stos
stc
cmp
in
cltd
ds
roll
dec
mov
incl
dec
cmpsl
lret
cmp
iret
xor
je
outsb
repnz
cltd
sub
test
je
pop
mov
pop
jg
pop
jle
xor
sub
sub
lcall
mov
mov
dec
lret
xchg
mov
xorb
xchg
pop
pop
in
jne
andb
ja
nop
sbb
mov
jb
jae
mov
pcmpgtb
sub
adc
xor
filds
xor
dec
jmp
mov
jp
sbb
pop
outsb
pusha
jp
and
xorb
pop
xlat
ret
test
or
sbbb
jmp
cmpb
imul
shll
aas
mov
in
xchg
ja
cltd
cmp
xchg
inc
scas
addr16
cmp
mov
push
add
pop
nop
pusha
xor
adcb
outsl
xor
pop
dec
lcall
add
jge
rorb
scas
mov
xchg
jl
cmp
add
mov
dec
pop
dec
mov
out
xor
inc
sub
cwtl
sbbb
mov
pusha
xor
xchg
sub
cmpb
pop
cmpsb
lret
lahf
mov
sbb
push
in
das
lods
scas
pop
cmpb
into
push
lret
cltd
mov
lret
sets
outsb
mov
mov
cmpb
pop
xchg
leave
add
pop
in
cmpb
cmpsl
xlat
mov
cmpsb
mov
dec
cmpb
pop
sbb
pop
and
cmpb
lret
cltd
mov
popl
cwtl
dec
mov
cmp
mov
and
inc
clc
dec
mov
aas
xor
test
orl
das
lahf
aas
cld
pop
jp
in
mov
and
cld
adc
pop
lahf
fdivl
outsb
inc
push
into
rcrl
das
mov
jp
pusha
mov
add
aam
iret
mov
inc
in
jmp
mov
dec
push
arpl
sbb
stc
repz
clc
push
xchg
sub
jnp
xor
outsl
jl
or
outsl
jbe
sbb
or
adc
pop
cwtl
test
lret
mov
push
mov
sbb
xor
pop
movd
mov
jge
dec
dec
sbb
popa
add
jl
call
mov
iret
das
xor
pop
cmp
inc
sub
cmp
mov
sarb
aas
ret
aas
iret
popf
addr16
orl
pop
dec
cmpsl
add
pushf
notb
cmp
das
jg
cld
das
pop
iret
and
jne
loopne
sbb
fcoms
in
ja
pop
jbe
mov
jle
mov
pop
pop
sbb
dec
mov
add
xchg
push
pop
jns
insl
mov
lcall
jns
add
xor
imul
mov
sar
in
and
leave
filds
je
or
jg
popa
into
push
inc
mov
sbb
mov
push
ret
lret
iret
lahf
out
sub
or
imul
inc
jnp
repz
pop
dec
mov
movsb
sbb
sub
jle
or
pushf
insb
sbb
fistpll
bound
scas
mov
push
jae
xchg
push
mov
push
sbb
lret
js
incb
cmp
pop
ffreep
jne
out
pop
mov
jge
lock
out
shr
sti
add
or
fwait
push
pop
pop
inc
lahf
lods
ss
loope
loopne
inc
pop
jg
rorl
pop
fidivrs
mov
shlb
dec
dec
push
sub
mov
out
aas
jg
cld
cs
xchg
pop
adc
jae
fcmovnbe
and
fmull
jg
cld
scas
testb
loopne
or
adc
and
test
lret
out
dec
xor
mov
jle
cld
stc
jle
jb
sub
inc
pop
test
fucomp
lret
iret
lahf
aas
mov
xorb
arpl
loopne
out
subl
out
lahf
aas
dec
repz
loop
add
adc
mov
leave
flds
xchg
cld
push
sub
pushl
xchg
loope
aas
jg
fiadds
cwtl
jbe
inc
hlt
add
call
arpl
mov
sub
cmp
das
iret
cmpsb
add
mov
shlb
push
ja
repnz
jp
add
dec
sbbb
hlt
in
arpl
out
pop
jns
idivl
and
jbe
in
push
cli
sti
test
loopne
pop
dec
inc
pop
repz
les
test
in
jge
adc
cli
xor
rcrb
aas
mov
pop
je
xchg
mov
je
fstpt
dec
dec
push
mov
jle
and
sbb
fstl
out
mov
leave
pop
outsl
scas
mov
jp
or
sbb
lret
jns
mov
adc
data16
sub
mov
aaa
repnz
xor
inc
push
mov
sub
pop
loopne
cs
or
pop
add
aas
ljmp
stos
push
dec
icebp
or
and
xchg
cmc
lret
out
dec
mov
movsb
insl
ds
cld
repnz
inc
aad
mov
pop
pop
and
pop
jle
rcll
adc
cwtl
lahf
push
jg
xchg
incl
pop
out
dec
hlt
lahf
xchg
ljmp
mov
lahf
push
and
mov
notl
jo
mov
cmpsl
sub
pop
loopne
adc
insb
mov
push
lahf
aas
jg
add
imul
movsb
pop
adc
push
ret
push
mov
dec
das
ret
out
fisubrs
push
outsl
xchg
and
jb
iret
fcomp
pop
iret
mov
cld
stc
mov
xchg
std
repnz
add
lahf
aas
jle
arpl
das
rcll
adc
xchg
xchg
jne
lret
add
aad
and
loop
xor
loope
mov
das
cmp
inc
stos
movsl
mull
das
cmp
scas
aas
xchg
sti
fwait
jo
arpl
clc
cmc
add
pop
xlat
lods
and
in
aas
jg
and
push
mov
hlt
loop
jnp
cs
lret
mov
popa
pop
and
dec
sbb
clc
test
fnstcw
pop
cmp
pop
rorl
jns
fnsave
je
dec
js
ss
nop
in
insl
xchg
aam
push
or
les
jmp
test
add
sub
loop
or
push
mov
cld
jo
and
adc
aas
imul
jns
dec
cs
jle
xor
fcompl
bound
pop
inc
pop
jle
sbb
push
in
repnz
lahf
xor
movsb
hlt
inc
jl
loop
loopne
movsl
hlt
mull
pushf
xchg
inc
rolb
jg
cld
inc
mov
setge
jl
and
icebp
xlat
das
lahf
lods
inc
aad
mov
cld
stc
repz
pusha
fldt
or
pop
lahf
aas
jg
aam
mov
push
pmuludq
repnz
test
iret
adc
bound
fdivrp
and
mov
jb
sub
in
push
xor
cmp
std
lcall
repnz
out
pop
jle
cmp
iret
cwtl
mov
std
cmp
jecxz
fadd
pop
dec
aam
add
mov
push
cmovg
aam
iret
lahf
mov
imul
ss
dec
stc
repz
loop
mov
outsb
leave
jae
in
movsb
es
pop
jle
cld
cmpsb
ds
dec
cmpsb
loope
shrb
in
ja
test
dec
ret
mov
in
push
pop
inc
xor
add
xchg
jns
dec
push
in
xor
mov
xchg
sub
push
inc
bound
mov
or
and
mov
dec
jge
in
lret
mov
mov
data16
mov
xchg
push
pop
adc
add
stc
jno
pop
in
cld
stc
daa
icebp
add
scas
sti
push
ljmp
pop
xchg
push
fimuls
pop
lods
cmovl
test
ret
xchg
aas
jbe
in
pusha
inc
mov
pop
sbb
int3
jbe
jns
xchg
mov
fs
xor
xor
fdivl
in
push
pop
ja
adc
inc
or
hlt
xchg
push
pop
jns
rol
dec
inc
fldenv
mov
pop
xor
mov
sub
rcl
pop
das
repz
jl
add
scas
mov
push
data16
pusha
iret
or
loope
icebp
repnz
push
sbb
dec
daa
pop
ret
cli
xor
and
inc
mov
repnz
aas
xchg
push
cmp
stc
xchg
hlt
mov
cmp
call
lcall
jp
in
stos
mov
jbe
fistps
repz
lahf
cwtl
inc
pop
push
inc
enter
jg
cld
stc
test
and
test
xchg
ljmp
lahf
aas
out
cwtl
xchg
inc
add
test
icebp
in
fstl
mov
fisttpll
jns
xchg
aas
mov
movsl
iret
loopne
dec
push
pop
out
loope
fdivl
outsl
hlt
dec
mov
and
scas
fidivrs
mov
out
and
pushf
out
sub
aas
dec
sarb
cld
stc
jnp
push
scas
dec
jno
loope
aaa
jnp
mov
daa
mov
lahf
aas
ljmp
push
sahf
shl
das
xchg
push
pop
jns
in
clc
sahf
mov
insb
adc
pop
push
pop
jns
push
std
push
dec
movsb
mov
testl
xchg
outsl
xchg
fildl
push
push
and
sub
movsb
jns
xchg
push
out
add
pop
lods
ss
lret
push
pop
mov
fsubs
aas
mov
mov
sbb
out
inc
jne
mul
fnstsw
loop
outsl
hlt
mov
arpl
out
cld
mov
loope
movsl
mov
popa
jnp
mov
repz
xor
orl
test
idiv
in
dec
cmp
test
adc
jns
xchg
call
iret
pop
sub
andl
push
mov
imul
test
mov
xchg
sub
daa
cmp
pop
out
lret
jle
add
fwait
lods
and
sub
popa
sub
mov
jbe
fldt
xor
iret
pop
sub
test
repnz
pop
hlt
js
jp
in
push
aas
xchg
mov
mov
jne
out
lahf
adc
push
fistpl
cmp
xor
push
lahf
fwait
js
loop
pop
and
scas
mov
movaps
das
or
sbb
hlt
cmc
movsb
aad
or
mov
add
ret
repnz
pop
mov
pop
mov
lret
popf
jecxz
xor
pop
movsb
fdivl
sub
ret
cltd
pop
xor
xor
scas
mov
mov
aaa
add
mov
xchg
xchg
movsl
cmp
add
sbb
iret
pop
push
pop
jns
fldt
pmaxsw
mov
ds
pop
jns
xchg
rorb
and
cmp
xchg
push
popf
pushf
ret
mov
int
ret
in
push
pop
push
push
out
loop
pop
xlat
lods
push
sub
fdivrp
jb
and
or
data16
jnp
rclb
inc
pop
inc
outsl
mov
rorb
push
fldl
cmc
out
repnz
push
xchg
inc
mov
mov
cld
stc
cmpsl
cs
shlb
je
mov
lahf
aas
jg
or
mov
scas
repnz
mov
mov
xor
lret
out
sub
add
xchg
cmpl
cld
stc
popa
and
xlat
push
push
test
add
or
pop
sbbb
into
scas
push
jecxz
mov
pop
mov
les
out
leave
out
lea
xchg
roll
xor
xchg
ja
push
push
jg
mov
sbb
pop
lret
jns
dec
xchg
or
mov
inc
cmp
repnz
dec
lcall
data16
pop
std
push
shl
lret
cmp
pusha
repz
pop
ds
inc
pop
js
imul
lods
aas
jg
in
fsubp
imul
out
dec
jns
sub
and
aas
jg
out
loopne
jmp
and
nop
pop
ja
xchg
jae
fiadds
iret
sbb
and
cld
stc
xchg
hlt
mov
fwait
pop
ficomps
movq
cmp
inc
pop
xchg
pop
mov
insl
jge
jno
ficomps
loope
out
adc
xchg
loopne
jg
xchg
mov
cld
out
lahf
xchg
pusha
out
xchg
arpl
repnz
scas
mov
in
xor
lods
mov
ljmp
loopne
dec
inc
push
push
cli
sbb
jae
fwait
js
dec
bound
repnz
sub
mov
ss
test
lret
sub
sbb
lcall
gs
adc
fisubs
mov
mov
lahf
aas
jg
mov
sbb
push
je
lret
cmp
outsl
adc
lock
fwait
subl
cld
sahf
hlt
in
push
jae
cmp
scas
cmp
inc
mov
pop
leave
inc
jae
push
adc
sub
sbb
in
out
lahf
jg
outsb
add
repz
imul
sti
in
lods
lds
dec
adc
pop
mov
repnz
test
xchg
cltd
jbe
push
mov
iret
aaa
loopne
sub
add
imul
xor
sbb
mov
cli
in
mov
and
dec
ja
outsl
fidivl
jle
cld
pop
out
add
xor
mov
pop
dec
inc
cmc
das
lods
dec
lods
loop
lock
pop
jns
jp
les
fs
push
sub
repnz
xchg
sub
mov
xchg
jg
cmc
shrl
push
insb
adc
mov
int
repz
push
dec
rorb
cwtl
loopne
cmp
repnz
push
and
xor
jg
cld
fidivrs
icebp
or
cmp
stos
cli
sbb
xchg
pop
stc
loop
cmp
in
popa
jge
lret
pop
les
cs
iret
cli
cmp
sbb
mov
jbe
lret
xchg
cli
inc
sti
out
inc
fwait
leave
out
xchg
push
iret
ja
sti
in
out
in
sbb
maxps
xor
push
dec
cmpsb
jo
in
push
shrb
sub
insb
jmp
dec
mov
in
ja
scas
leave
adc
leave
ficoml
repnz
or
out
icebp
lret
push
xor
dec
mov
jns
jmp
lods
aas
and
pop
lcall
icebp
rol
test
mov
xorl
and
xchg
js
fmul
imul
jns
xchg
outsb
inc
pop
frstor
adc
dec
push
pop
jns
cmpb
lds
or
in
cmp
jmp
imul
aad
mov
sub
repnz
repz
es
jns
xchg
xor
leave
fcoms
repz
hlt
fwait
lods
pop
jmp
mov
adc
jle
ja
aas
jg
push
arpl
faddl
ret
sbb
stos
stos
imull
fcompp
mov
cld
xor
add
jns
enter
nop
out
rcrb
addb
dec
stos
movsb
push
cld
stc
repz
insl
xor
testl
sbb
jle
push
pop
shll
fs
mov
jae
aas
jp
xrelease
and
subb
loopne
pushf
loop
cmp
push
pushf
cmp
scas
pop
jae
xchg
ret
mov
sub
push
lret
lret
mov
int3
scas
xchg
push
jg
inc
or
repz
pushf
jmp
xchg
or
sub
bound
push
clc
repnz
cld
pop
imul
repnz
repnz
adc
pop
xchg
scas
xchg
pop
cld
cmp
hlt
sti
mov
mov
mov
iret
aas
rol
sub
mov
repnz
rorl
push
and
ret
dec
jns
jle
es
outsl
loop
add
xor
lret
outsl
push
inc
mov
cli
mov
repz
cli
fcoml
addr16
int
dec
sub
cld
stc
mov
or
lea
sbb
sbb
inc
in
lahf
aas
in
mov
cmp
inc
enter
mov
lahf
test
ljmp
aas
es
iret
shlb
filds
jns
repnz
xor
loopne
mov
fisttps
xchg
push
pop
push
and
pop
mov
xor
add
add
cs
adc
std
xor
cmpb
dec
popa
jg
xchg
pop
jle
cld
into
in
sbb
nop
popa
nop
jne
cmp
iret
test
pusha
orb
in
cli
outsl
scas
fs
jb
enter
jo
pop
jmp
iret
outsb
or
dec
iret
movsl
mov
ret
add
push
jbe
mov
rorb
jl
insb
cmp
adc
adc
xor
adc
pminub
mov
das
fisubs
push
les
mov
dec
add
popa
dec
pop
add
dec
pusha
aas
dec
sbb
inc
adc
fsubrs
mov
fcmovnbe
jo
xchg
mov
jmp
sahf
push
mov
stc
fildll
into
fisubl
jle
jmp
inc
loope
pop
cmp
mov
sub
cmp
int
std
jb
repnz
clc
in
icebp
test
jge
stc
sbb
jmp
filds
mov
ss
js
jle
mov
out
repnz
das
sbb
pop
sub
clc
idivl
incl
mov
std
mov
js
fidivrl
test
aas
mov
xchg
sub
mov
shll
sbb
fldl
jge
aas
incl
push
mov
and
cmp
jle
sub
test
iret
lahf
aas
jg
shll
outsl
fcomi
mov
mov
jp
repz
outsl
sbb
sub
in
imull
or
into
sub
pop
into
lods
daa
fucom
xchg
push
pop
xchg
test
jp
fnstcw
xchg
push
pop
jns
lds
sub
pusha
push
pop
jns
pop
dec
pop
jno
roll
jmp
rcll
adc
test
repnz
pop
mov
pop
pop
jae
lret
lret
scas
mov
dec
in
repnz
sub
or
push
mov
leave
xor
in
sti
in
fldcw
add
fidivrs
imul
scas
cltd
mov
pop
xchg
loopne,pt
outsl
shrb
gs
data16
xor
jg
adcl
mov
ja
jecxz
xchg
lahf
stc
inc
aaa
repnz
sub
inc
jp
in
rcrl
cmp
lahf
lds
ret
adc
scas
sbb
mov
jl
stos
scas
stos
shlb
mov
push
aas
jne
cmp
lahf
scas
push
subb
das
adc
xchg
lahf
jg
push
sbb
add
in
dec
test
pop
lahf
aas
jg
mov
cmc
cmp
xchg
test
adc
hlt
loopne
sub
fists
pop
jns
nopl
jno
or
shll
mov
into
xor
inc
iret
rolb
ficoms
fldcw
les
ja
cmp
into
pop
imull
iret
push
pusha
jns
pop
scas
sarb
inc
jg
idivb
iret
lahf
pop
mov
sbb
sbb
aaa
push
jg
repnz
xchg
test
xchg
lock
pusha
nop
jp
xchg
sub
orb
sub
clc
xlat
xchg
sub
les
negl
jmp
sbb
in
sahf
push
add
fimuls
lret
lahf
pop
call
sbb
sbb
arpl
out
sbb
mov
inc
adc
xor
mov
jns
xchg
push
mov
test
push
xor
xchg
sub
xor
xchg
push
pop
push
aam
aam
scas
dec
and
decb
push
pop
jns
dec
add
mov
stc
xor
and
ja
pop
jns
xlat
xor
pop
es
les
jbe
jns
xchg
sub
xchg
sub
cmp
fs
sarl
push
outsb
shrb
lock
ja
cli
les
push
pop
imul
rolb
lret
inc
scas
mov
mov
pop
fcompp
and
push
mov
jmp
jle
mov
mov
and
mov
repz
clc
imul
movsb
pop
dec
adc
aad
aas
jg
clc
add
in
mov
inc
and
xchg
movsl
jecxz
loop
cs
mov
xchg
in
push
pop
gs
mov
lods
xchg
push
pop
jns
ret
shrb
mov
mov
push
pop
jns
sbbl
rcr
aad
xchg
inc
ds
jns
xchg
pusha
mov
mov
test
add
das
push
push
data16
les
and
call
inc
das
mov
bnd
jg
sbb
push
test
ds
iret
lahf
aas
mov
add
mov
jnp
repz
mov
push
rcll
mov
scas
sbb
sub
dec
nop
sbb
xchg
ja
outsl
pop
push
mov
loopne
stc
repz
sahf
mov
xchg
dec
or
adc
push
fidivrs
jmp
stc
cmovge
xchg
in
jnp
into
ret
cli
cli
shl
leave
in
inc
fnstsw
inc
pop
dec
push
scas
mov
jg
pop
jns
loope
ss
lret
sbb
add
in
xor
out
add
mov
pop
into
jg
cld
stc
adc
stos
and
sbb
fldpi
add
paddusw
or
dec
stos
out
push
push
pop
jns
add
sub
inc
cli
lods
loopne
loope
pop
data16
jb
xchg
and
mov
jne
icebp
ljmp
mov
loop
repnz
pop
mov
xor
insb
mov
lahf
jnp
and
pop
sub
push
jle
mov
aaa
es
in
cmpsl
mov
inc
pop
mov
out
push
cmp
test
test
lahf
aas
jg
stos
lods
xor
or
jecxz
jns
xchg
loope
xor
xchg
dec
mov
xchg
push
pop
loopne
mov
cmp
orl
dec
inc
cmc
daa
jl
out
sbb
inc
cld
pop
jns
xchg
xor
es
pop
inc
rcrl
aas
lahf
daa
mov
movb
mov
jl
ljmp
in
or
mov
ss
mov
xchg
push
fidivrs
lcall
lds
pop
jns
js
pop
shl
repz
push
or
cli
sub
pop
les
xor
andb
outsl
loopne
out
jne
test
push
jno
dec
incl
stc
repz
int
int3
xor
fisubrs
jecxz
adc
sub
mov
mov
adc
pop
jp
and
mov
jp
dec
and
add
outsb
jg
cld
stc
fldcw
cmpsl
repz
inc
xor
xchg
iret
lahf
aas
mov
loopne
fsubs
stc
repz
loopne
lock
dec
sarb
aas
jg
stc
into
xor
inc
pop
jp
loopne
dec
cwtl
push
jle
repz
lahf
adc
cmpsl
push
sub
in
lock
lcall
lods
dec
pop
sub
ror
push
push
dec
iret
lahf
pop
pop
pop
or
sbb
dec
cld
stc
repz
js
pushf
loop
sarb
dec
pusha
mov
aas
jg
dec
pop
lds
or
ret
xor
pop
push
lret
ljmp
call
fists
std
ds
add
cmp
das
lahf
fdivs
data16
scas
pop
mov
xchg
push
lcall
clc
repnz
cwtl
and
sbb
mov
xor
lahf
aas
jg
add
rcrl
jge
cmpsl
pop
ljmp
jecxz
jb
mov
pusha
iret
lahf
test
sbb
ds
in
inc
arpl
stc
repz
scas
jbe
sbb
aaa
push
daa
scas
dec
stc
xchg
jle
notl
les
jp
aas
jg
cld
nop
lahf
sub
xor
mov
cmp
iret
lahf
sub
mov
pop
mov
aas
sti
mov
mov
cmp
pop
or
pushf
jmp
inc
cmp
repnz
inc
in
xor
outsl
ljmp
pop
pop
outsb
lock
jne
jne
faddp
mov
inc
push
scas
lahf
jmp
repz
pop
cmc
xor
imull
xor
sbb
and
jle
cld
and
mov
inc
mov
insb
data16
ds
sti
xchg
lahf
aas
mov
fs
cmp
xchg
das
dec
test
test
mov
cld
stc
repz
and
add
je
fdivrl
in
inc
push
cli
lret
pop
and
outsl
std
imul
sbb
shl
sub
fisttps
rorl
gs
aas
icebp
xchg
dec
jmp
les
inc
rorb
jge
aam
fstps
stc
repz
mov
into
sub
pop
mov
or
mov
cld
pop
sbb
daa
xor
mov
clc
pop
cwtl
in
cmp
aas
add
push
push
inc
cmp
test
setne
jns
adc
adcb
setp
bound
clc
jb
lret
inc
mov
sti
dec
and
les
jg,pt
sbb
sbb
sbb
mov
ljmp
rorl
cld
cld
cwtl
pop
ret
jbe
popa
outsb
xchg
cmp
cld
xchg
push
stc
inc
addr16
int3
xor
repnz
push
mov
in
pop
jg
jle
mov
outsl
filds
pop
mov
insb
xchg
dec
xchg
inc
dec
jo
sub
js
pop
stos
push
mov
lds
repnz
lret
sub
dec
mov
aaa
lret
inc
int
cld
addl
jle
mov
in
aas
jg
lcall
call
test
out
mov
xchg
ror
push
cmpsb
cld
adc
push
stc
cld
lea
leave
std
mov
fwait
inc
iret
lahf
aas
jg
lret
adc
lods
mov
add
repz
lods
xchg
out
out
adc
pop
jno
push
bound
aas
jg
add
cmp
andb
out
shlb
sahf
jnp
mov
idivl
mov
push
dec
mov
cld
repnz
repz
dec
cmp
fstpt
pop
jne
xchg
pop
decb
jne
fs
push
fildll
push
xor
aas
jle
out
clc
test
xchg
outsl
cld
mov
inc
scas
lds
je
jg,pt
xchg
mov
mov
lock
lret
aas
mov
push
scas
add
add
insb
jecxz
push
les
sub
ret
movsl
cmp
test
add
pop
push
and
cmp
xchg
mov
jg
stc
gs
into
jle
mov
jl
test
sub
out
xchg
outsl
sub
js
cmp
and
jbe
and
in
xchg
ljmp
push
adc
pop
xchg
add
mov
mul
repz
testl
out
cwtl
das
and
inc
clc
push
jnp
mov
test
aas
sub
pop
jns
sbb
xor
xor
cli
scas
mov
outsl
sbb
stc
repz
sub
jle
jne
test
and
sub
push
gs
xchg
loopne
addb
mov
jns
fldl
mov
mov
adc
in
push
pop
out
adc
int3
out
lods
push
stos
fmulp
xchg
push
pop
jns
movsb
dec
push
jns
and
fcmovne
mov
icebp
scas
sub
out
lahf
aas
push
not
and
insb
arpl
fld
fcmove
mov
push
and
pop
fsubrs
lea
repz
test
add
rolb
dec
les
jg
sub
jg
sbb
or
pop
nop
pop
jo
sbb
scas
push
cmc
arpl
in
or
sti
lret
add
cmc
pop
scas
mov
mov
js
sub
bound
jle
cmpl
push
or
jge
push
loope
jns
repnz
js
scas
inc
dec
jle
dec
dec
test
dec
xchg
sub
scas
dec
cmp
lods
in
ja
mov
cwtl
push
inc
cmp
and
pop
pop
jns
add
fdivrl
ljmp
and
cmpb
repz
jno
dec
sub
pusha
lret
dec
clc
out
mov
loope
mov
cmc
add
in
push
cmp
adc
lock
mov
das
das
scas
and
out
bound
mov
out
add
enter
jbe
pop
pop
jns
repnz
ljmp
xchg
dec
mov
fisttpll
push
xchg
ja
adc
rcrb
aas
jmp
repz
mov
mov
ja
pop
mov
adcb
pop
ret
xlat
mov
jge
repnz
test
leave
mov
xor
mov
out
das
ret
xor
or
xor
loop
lods
inc
mov
cli
repnz
mull
js
xor
in
movsb
jle
icebp
fildll
cmp
xor
pop
mov
rolb
in
arpl
in
xchg
dec
jle
sub
cmp
popf
setae
repz
clc
mov
loope
fiadds
xchg
int3
cmp
popa
stc
stc
pop
push
lods
fdiv
cmp
lahf
jo
lahf
jne
jle
jo
adc
repnz
jle
inc
stos
lret
push
jg
or
clc
rclb
adc
inc
fdivrl
xchg
fists
int3
jg
test
seta
inc
xor
mov
pop
mov
aas
test
dec
sub
enter
xchg
in
add
das
outsb
fidivrl
xchg
inc
pop
push
cli
or
adc
jns
iret
scas
test
push
inc
mov
jns
nop
cmpl
insl
inc
dec
inc
lahf
jns
xchg
push
push
ss
icebp
imul
mov
lods
and
push
adc
and
jg
cli
insb
jge
imul
outsl
jbe
xchg
jno
in
push
js
out
sbb
mov
jl
aaa
repnz
rcl
pop
lahf
nop
pop
int3
lcall
mov
xchg
movb
push
stos
ret
stc
stc
repz
insb
inc
daa
pop
mov
scas
adc
call
cld
jge
mov
scas
push
dec
loop
enter
mov
pop
incb
xchg
fs
fstp
push
dec
cmp
cmp
out
push
aas
scas
xor
sti
mov
loope
jg
repz
fdivrp
aaa
lock
pop
aas
ficompl
pop
jg
jecxz
out
in
push
outsl
mov
sti
xor
int
dec
sbb
in
xchg
push
pop
jmp
mov
aad
push
pop
jns
sub
jno
lcall
add
lock
jge
in
and
cld
stc
repz
lock
cmp
call
aaa
sahf
aas
jg
xor
push
popf
ss
sbb
es
popl
push
out
dec
add
loope
and
je
in
inc
dec
scas
insb
popf
jge
dec
xchg
sub
sub
clc
aas
and
enter
push
dec
mov
in
lahf
dec
rcll
mov
jg
cld
push
insl
arpl
mov
mov
mov
lahf
outsb
mov
ret
mov
sub
in
out
add
shlb
xchg
jo
repnz
mov
mov
test
scas
mov
aaa
decl
rcl
sub
xchg
mov
mov
call
and
and
das
sub
mov
and
mov
fidivrs
repnz
pop
mov
fidivrs
das
sub
pop
adc
xor
fiadds
xor
out
lahf
ret
add
lret
fbstp
dec
movsb
dec
jnp
or
jg
cld
stc
push
std
and
cltd
in
push
outsb
rcrb
pop
rcr
xor
sub
sarb
pop
jbe
jg
cmp
mov
scas
mov
clc
sbb
xlat
out
inc
fbld
xor
mov
sbb
in
mov
xor
mov
out
xchg
sub
fistpll
imul
or
sub
aaa
mov
das
push
fimuls
loope
scas
shll
enter
fdivrl
adc
cmp
jae
ucomiss
jb
repz
loopne
call
lds
mov
jmp
mov
xor
loope
xlat
nop
pop
orb
dec
cld
stc
repz
fs
push
stos
lahf
sahf
mov
xor
loop
inc
pop
jg,pt
sub
and
inc
loope
push
xchg
mov
jb
lret
imul
clc
xor
push
iret
mov
mov
push
fdivrp
in
lods
fldcw
adc
mov
imul
push
inc
shll
stos
push
cli
adc
lods
jne
push
mov
xchg
data16
loope
jmp
pushf
mov
pop
jns
aad
pusha
call
ja
in
sti
fsubrs
cwtl
int
cwtl
in
movsl
jmp
inc
pop
jns
jnp
cld
mov
aas
jg
out
lcall
fisttps
inc
mulb
sahf
sub
stos
paddd
leave
icebp
repnz
stos
and
adc
fwait
sti
out
adc
pop
cmpsb
aas
jg
mov
aas
jg
push
jge
cmp
cmp
repnz
lahf
aaa
fs
imul
add
loop
stc
xchg
icebp
pop
sub
lahf
jno
loope
aas
jg
lret
and
int
imul
mov
outsb
mov
je
xor
dec
dec
push
cmp
idiv
adc
lret
xor
fistl
push
jns
adc
xchg
dec
sub
xchg
test
cmp
test
fcoms
ljmp
or
sbb
sbb
or
cmp
lret
sarl
push
fidivrs
nop
das
leave
adc
aaa
bound
out
rclb
jle
mov
stc
repz
sbb
adc
mov
aaa
sub
ficomps
mov
push
dec
into
push
test
repnz
jecxz
inc
mull
mov
mov
lahf
aas
jg
ds
andb
pop
xchg
jl
addr16
iret
andb
jae
cmp
cmp
mov
jns
rcll
das
les
and
inc
cmp
roll
cmc
psubq
sub
pop
jns
mov
lea
or
jge
dec
mov
sahf
mov
mov
nop
xchg
stc
repz
sub
cs
movsl
push
jl
hlt
into
and
pop
repnz
arpl
lods
sbb
popa
mov
sbb
shll
jg
les
pop
jecxz
cltd
xchg
cmc
orb
cli
sub
hlt
shlb
scas
nop
jb
lock
mov
xchg
cltd
call
mov
out
dec
in
shlb
mov
ja
mulb
cld
stc
pop
fidivrs
dec
cmp
repnz
shlb
dec
sub
sub
bound
das
cltd
call
add
out
stc
jge
mov
mov
add
dec
outsw
xor
add
pop
jns
xchg
or
mov
adc
or
or
decb
inc
addb
cmp
xor
cld
add
mov
adc
xchg
sbb
test
inc
xor
inc
cmpsl
sub
or
fists
lahf
fs
pop
or
dec
popa
out
pop
sub
enter
sbb
sbb
stc
repz
int3
mov
mov
outsl
sub
pop
jle
and
insb
fistpl
lods
xor
out
add
add
xchg
push
pop
jns
sbb
xorl
dec
mov
push
pop
jns
nop
mov
imul
xor
lds
mov
dec
and
xchg
out
int3
das
test
push
test
pop
mov
pop
sbb
jl
jo
imul
xor
or
sbb
iret
cld
cmp
scas
push
rolb
mov
mov
dec
pop
push
and
out
in
xchg
or
inc
js
test
mov
xchg
push
pop
jns
mov
mov
bound
lods
sub
enter
es
decb
outsl
in
pusha
pop
stos
fsub
dec
imul
cld
stc
cmpl
jo
add
lahf
aas
jg
mov
ljmp
cmp
outsl
lock
and
aad
inc
mov
faddl
test
test
sbb
sbb
clc
or
pop
rorb
sarb
test
ds
dec
fdivrp
ficomps
sahf
aas
jne
aaa
dec
inc
fildll
lea
xchg
xchg
push
mov
in
loopne
fisttpll
jecxz
imul
sub
repnz
test
stc
movsl
icebp
sub
add
cmp
mov
jge
dec
add
jne
jmp
rcrb
icebp
loope
fnstsw
cmp
icebp
push
fcoml
mov
dec
loope
xchg
jg
xor
jle
icebp
xchg
jns
int3
int3
jae
push
and
cs
das
out
add
adc
pop
aas
dec
into
std
cli
pop
repz
clc
das
cmpsl
cmp
aam
repnz
clc
xchg
cwtl
leave
inc
jno
jl
aas
cwtl
addb
jl
xchg
or
outsb
nop
pop
iret
xchg
cmp
into
stos
aas
jg
cld
ret
push
adc
push
push
sbb
mov
out
lahf
rcrl
dec
sub
jle
jnp
shrl
testl
xchg
std
clc
insb
push
adc
stc
repz
lock
push
mov
sarl
adc
cli
add
push
gs
icebp
jbe
in
out
daa
mov
cmpsl
adcl
sub
jmp
das
out
sbb
mov
outsb
rolb
stos
mov
push
lock
fistps
inc
loop
inc
sbb
jmp
xchg
mov
ret
inc
jbe
repz
loop
lahf
cltd
mov
xchg
or
mov
push
pop
and
ds
setns
inc
add
push
sbb
mov
sub
xchg
pop
lahf
or
mov
adc
push
stos
out
adc
cmp
cmp
fimull
fs
mov
pop
lcall
sub
repz
mov
and
std
inc
rcrl
sub
cmp
pop
into
jecxz
or
repz
ljmp
cmpb
fstpt
adc
stc
repz
xor
mov
cmp
cs
sub
stc
test
enter
stc
repz
push
and
sbb
jbe
das
jg
jo,pt
popa
adc
mov
pop
or
popf
mov
mov
icebp
lret
sarl
cmc
push
push
repnz
loop
idivl
repz
or
repz
lock
push
aas
sti
call
scas
mov
dec
out
in
addr16
call
repnz
call
mov
pop
pop
cwtl
add
fwait
xchg
int3
xchg
ja
jg
lret
cld
out
mov
add
les
pop
jns
sub
pop
xchg
imul
aas
les
add
sub
stos
lcall
scas
jbe
inc
aas
fs
jg
pusha
cld
jb
fnstcw
xchg
lahf
aas
jg
push
lds
sarl
ds
in
repnz
jb
sub
dec
push
dec
add
sub
sub
test
sbb
mov
or
dec
mov
lea
repnz
out
jno
mov
inc
jg
aaa
add
xchg
movsb
mov
subb
sub
aas
jg
cld
sub
dec
pop
insb
cmpsb
fucomi
mov
sarl
fildll
lahf
lods
unpckhps
inc
sbb
pop
and
cmpsb
sub
pop
jns
cld
scas
push
and
mov
scas
mov
and
shlb
dec
mov
adc
xor
sub
xchg
and
nop
xlat
jp
mov
pop
jg
xchg
mov
push
push
scas
cmp
pop
jns
xchg
sahf
add
outsl
pop
pop
lret
shrb
idiv
adc
fidivs
out
fildll
ret
lret
xchg
or
add
stos
fcmovne
out
jl
cld
stc
imul
jmp
xchg
jle
js
ja,pt
sub
mov
cmp
and
in
adc
pop
pop
mov
mov
xchg
test
lret
push
loope
es
aad
mov
push
add
xlat
pop
mov
sub
scas
mov
xor
cld
and
insb
ss
mov
in
and
cmp
pop
aas
jg
mov
jae
out
out
aam
in
xchg
ror
push
add
arpl
lea
lret
flds
lds
fcomip
in
mov
adc
pop
dec
adc
das
cmp
xchg
aas
jg
mov
cli
loope
mov
cs
aas
aas
mov
pushf
jle
lahf
mov
in
xchg
lahf
fldenv
xchg
lock
add
xchg
cli
out
into
mov
push
pop
jns
add
in
push
aas
mov
in
jno
shlb
pushf
cwtl
out
out
jge
cld
stc
jae
and
xchg
sti
loopne
out
ss
jg
shll
lahf
inc
aas
mov
in
pop
push
and
dec
aam
iret
pop
adc
xchg
fcmovu
enter
repz
dec
das
dec
cmp
cli
and
shrl
cld
mov
jl
push
shrl
inc
adc
cmp
add
dec
adcb
das
pusha
mov
sahf
cs
pop
rclb
ja
stos
out
mov
and
out
cmpsl
mov
push
inc
test
mov
jp
cmp
and
mov
dec
rcll
lret
popl
xchg
sbb
fldpi
pop
call
xchg
mov
sbb
jbe
xchg
ja
mov
sub
or
js
adc
mov
rorb
outsb
daa
mov
cld
stc
adc
xchg
roll
insl
pop
ss
aas
movsb
jg,pn
sub
cmpl
mov
out
dec
mov
and
cmp
jo
outsb
les
mov
dec
push
jl
les
pop
and
lret
mov
in
pop
out
xchg
add
push
lret
mov
cli
pushf
daa
sbbl
inc
push
jae
jle
push
mov
iret
or
repnz
in
xor
lods
aam
and
lahf
pop
sahf
adc
xchg
pop
flds
jno
xor
cli
repnz
sti
adc
lahf
rcrl
mov
mov
fisubs
addr16
mov
mov
or
mov
mov
lods
jbe
xchg
sub
in
jmp
mov
xlat
push
leave
sub
out
out
xchg
icebp
xchg
jge
and
push
sub
int3
mov
mov
pushf
addr16
push
pusha
mov
testb
aaa
test
iret
mov
lret
frstor
out
fmull
xchg
add
loop
push
lock
ret
out
lret
sub
mov
xchg
inc
or
repnz
push
push
xor
leave
hlt
das
adcl
xor
in
out
and
lea
sub
push
pop
jns
test
mov
jecxz
rcl
test
out
jecxz
mov
lret
xchg
push
pop
pop
jnp
cmpsb
and
xchg
adc
std
jb
push
out
add
out
inc
dec
mov
popa
sahf
scas
mov
pop
dec
pop
movsl
sbb
mov
push
into
mov
movsb
daa
pop
repz
or
add
stos
mov
outsl
mov
fildll
les
lahf
aas
add
mov
xchg
xchg
lock
lret
out
fisubs
cmpsb
jno
cmp
dec
insb
rcrl
cld
stc
mov
pop
lods
lret
scas
dec
in
out
shll
lcall
jns
inc
inc
iret
enter
add
inc
adc
pop
mov
jg
fiadds
icebp
or
push
js
cmp
mov
dec
inc
sbb
mov
lret
into
push
fxch
mov
adc
fbld
movsb
arpl
scas
mov
sub
or
es
out
jo
inc
cld
stc
daa
lods
xor
mov
push
subb
mov
mov
iret
sahf
pop
ja
inc
push
rolb
repnz
repz
jp
imul
adc
inc
loope
pusha
cs
test
xor
mulb
xchg
cmc
add
dec
fdivrl
xchg
lahf
aas
fldenv
ss
or
cmp
cld
cld
stc
mov
mov
test
xchg
imul
adc
pop
test
mov
mov
jl
pop
in
adc
add
sbb
jo
ret
pop
cld
scas
lds
jl
arpl
adc
fbld
lahf
pop
fwait
sahf
cmp
jmp
scas
rcl
xchg
testb
sets
or
jmp
xchg
pop
into
fwait
mov
stc
repz
dec
in
loop
shlb
pop
sub
scas
or
lahf
push
jb
pop
sub
bound
loop
add
pop
mov
and
in
fbld
xor
test
repnz
and
pop
ret
push
rolb
pop
mov
cld
dec
dec
repz
jae
lods
je
inc
fldenv
push
pushf
pop
sub
jmp
out
lahf
sub
mov
mov
stc
repz
adc
inc
push
clc
add
adc
pop
push
mov
shlb
adc
jno
cwtl
in
imul
movsb
insl
cld
stc
mov
int3
stos
ds
mov
int
std
sub
gs
mov
fwait
inc
movsb
and
pop
jo
shl
fisubs
out
adc
fs
popa
jne
pop
jo
jg
cld
stc
push
loopne
loopne
lret
shlb
enter
jp
es
lahf
aas
inc
mov
addr16
in
or
aas
dec
pop
je
pop
in
test
sahf
je
jecxz
iret
sub
sar
add
xchg
aas
fistpl
stos
adc
mov
loope
inc
jo
scas
js
iret
mov
repz
icebp
pop
pop
gs
mov
lcall
or
ret
aad
ret
add
cld
shlb
cs
test
test
rcrb
and
mov
fxam
out
push
xor
stos
enter
in
mov
sub
xchg
scas
mov
jbe
push
scas
pop
jo
mov
sub
das
mov
mov
push
and
pop
enter
push
cld
ljmp
out
imul
movsb
les
add
sti
out
out
mov
mov
adc
adc
mov
out
je
jns
pop
sub
pop
ds
aam
sbb
adc
sar
aas
pop
push
jb
pusha
fisubrs
dec
pusha
and
and
push
mov
xchg
iret
aas
into
add
jae
inc
outsb
lahf
pop
leave
add
fldl
cs
pusha
cs
mov
and
lahf
aas
pop
pop
inc
pop
scas
mov
rolb
xchg
iret
das
sub
call
or
add
pusha
aas
jg
imul
test
iret
lahf
sti
cwtl
xchg
lock
push
cmp
fmull
cld
adc
outsb
mov
scas
rcr
mov
push
pop
pusha
out
imul
push
pusha
fiadds
or
fsubl
ret
in
rcll
popl
scas
or
add
pusha
cmp
jmp
mov
or
push
and
lahf
pop
inc
ret
add
cmp
out
pop
sbb
mov
mov
jae
inc
pusha
mov
iret
imul
xchg
pusha
into
mov
mov
inc
aaa
clc
or
mov
jmp
repnz
sbb
sahf
lret
add
push
mov
inc
popa
pusha
cmp
es
mov
pusha
into
loopne
sbb
iret
cmpb
ret
mov
imul
mov
mov
into
fmuls
jle
add
out
push
jb
or
pop
mov
mov
ret
pusha
lahf
xor
push
pop
scas
mov
mov
cmpsb
pop
dec
orl
lods
nop
scas
jle
mov
fmul
scas
mov
sub
cmp
xor
sbb
scas
mov
and
stos
inc
mov
add
pop
mov
mov
mov
sti
cld
or
andb
ret
fiaddl
jg
lahf
aas
jg
outsl
jae
lods
gs
or
inc
lea
lret
out
mov
jno
sahf
es
add
stc
repz
jmp
mov
pusha
std
and
mov
xor
mov
push
loopne
test
push
fstpt
repz
and
xor
jle
sarb
rolb
jmp
clc
lea
popa
mov
ficoms
add
aam
fcoml
hlt
add
cs
xchg
in
xchg
or
cs
pusha
cwtl
cmp
jle
dec
sub
and
inc
mov
out
loop
push
jg
pusha
aas
sub
outsb
xchg
cs
mov
lods
inc
mov
pusha
mov
in
aad
or
paddd
stos
in
jecxz
pop
or
subl
cld
stc
repz
cs
dec
cmp
sub
push
inc
outsb
mov
push
outsb
test
imul
jle
mov
dec
arpl
rcrl
ret
test
js
sbb
rclb
leave
mov
ja
push
js
pusha
fisttps
in
out
mul
pop
mov
cmp
out
mov
jmp
rclb
xor
fildll
mov
cmpsl
sub
das
and
pop
and
test
jne
sub
mov
into
pop
sub
out
scas
push
imul
orb
mov
cmp
popf
ja
jle
adc
lahf
aas
jg
mov
jbe
jae
pop
dec
das
xlat
es
lods
in
int3
pop
cs
dec
fidivrl
orl
or
jp
inc
mov
push
dec
push
pop
imul
cmc
jp
test
adc
in
ret
push
pop
test
clc
hlt
xor
movsb
pop
push
fidivrs
lock
setno
pop
lahf
xchg
lea
inc
dec
rolb
dec
das
das
jp
out
adc
pop
in
mov
push
pop
repnz
mov
cmpl
iret
test
lods
mov
dec
fs
loop
in
cltd
dec
mov
int3
jo
xor
int
or
test
outsl
fimuls
push
movsl
rcr
jge
or
sub
jg
xchg
push
pop
xchg
xchg
loop
or
or
or
dec
and
cld
scas
test
inc
in
xchg
lahf
aas
jg
inc
mov
loopne
mov
mov
ja
fdivl
popf
clc
and
inc
popf
ljmp
or
push
mov
jg
std
and
lods
push
jg
mov
cmpsb
mov
mov
adcb
in
jg
cld
push
pop
mov
xchg
imul
push
aas
jmp
cli
or
fistpll
shrl
sub
cmp
adc
pop
jns
lahf
les
adc
in
fmulp
and
mov
arpl
lret
mov
xchg
fwait
dec
jle
addl
pop
xchg
rcll
test
mov
pop
cmc
fistps
dec
call
xchg
mov
xchg
mov
out
nop
scas
repnz
xchg
andl
sub
mov
push
call
pop
sbb
scas
xchg
popl
cmp
lods
jne
dec
push
out
lahf
jg
inc
mov
std
and
sub
in
mov
das
test
aas
pop
xor
repnz
pop
mov
pop
ljmp
imul
repnz
in
test
sub
dec
dec
cmp
movsb
insb
push
in
lahf
aas
call
adc
and
out
mul
or
jbe
ja
mov
clc
pop
ljmp
fimuls
mov
pop
mov
push
pop
es
push
inc
out
add
dec
push
ficoms
in
xor
in
jb
inc
rclb
xlat
call
and
cs
les
fwait
pusha
dec
ds
and
jg
outsb
loope
test
mov
mov
or
lret
fldl
pop
call
cs
data16
imul
mov
aaa
pop
repz
pop
xchg
scas
cs
cmp
or
xor
adc
fstps
or
test
jge
add
clc
or
orb
mov
je
ret
movsb
pop
sub
mov
jle
into
pushf
ds
inc
mov
xor
xchg
aas
push
loopne
out
cli
mov
es
sarb
and
xchg
ja
cltd
cmpsb
inc
jns
mov
ret
in
ljmp
lcall
into
pusha
pop
push
inc
cmpsl
dec
popa
mov
push
sub
adc
cmp
dec
cmp
cmp
push
cltd
out
sbb
mov
daa
pop
es
adc
jle
in
cmpsl
sub
dec
in
out
lret
andps
add
scas
mov
out
dec
pop
jae
sbb
xchg
inc
pop
js
repnz
pusha
je
mov
sub
cmp
or
fisubl
xchg
lods
pop
scas
iret
xor
imul
push
fcmovb
cmpsl
pop
aas
in
lods
adc
cmp
pop
aaa
pop
add
mov
xor
in
ret
ljmp
dec
dec
push
or
dec
mov
lahf
pop
dec
pop
iret
or
xlat
mov
xchg
adc
or
xchg
shll
xor
daa
iret
lahf
mov
ficoms
iret
and
fisubrs
inc
xor
pop
cmp
add
xchg
mov
xchg
aam
sbb
pop
out
stos
mov
or
repnz
push
lret
or
out
push
dec
xchg
in
gs
inc
adc
outsl
xchg
push
pop
jns
mov
es
dec
sub
call
fbstp
jge
mov
ja
mov
iret
cmp
ret
xor
inc
scas
mov
dec
jecxz
mov
jo
dec
jge
repnz
fdivrs
iret
inc
cmpsb
xor
and
ret
ud1
xor
jmp
ja
pop
dec
jmp
xchg
lock
xor
sub
xlat
fcmovnbe
sbb
adcb
test
mov
fldcw
ljmp
mov
xor
jns
aam
in
aaa
rorb
jg
dec
xchg
push
xor
in
ja
xor
cmc
mov
mov
ja
pop
jns
jmp
sbb
xchg
cmp
pop
fidivrs
sbb
cld
pop
push
out
and
xor
mov
inc
inc
jle
jle
or
ds
inc
sbb
repz
cli
pop
inc
push
jg
mov
cld
sahf
jno
jmp
in
add
xchg
test
lahf
test
mov
mov
iret
ds
push
fdivrp
jb
jmp
mov
jge
xchg
pop
fwait
ret
loop
ret
into
xchg
jp
add
cwtl
push
stc
repz
inc
cmp
mov
mov
sub
in
xchg
imul
push
xor
and
test
bound
sub
mov
cltd
int3
cmp
xchg
out
sub
test
pop
inc
into
ret
jp
sub
lahf
aas
push
mov
mov
out
lahf
jg
add
dec
jns
stos
test
cld
stc
repz
cmp
adcl
xchg
pop
iret
lahf
aas
jg
ljmp
pop
cli
jmp
in
in
gs
jge
add
sbb
pop
test
mov
dec
cmp
ljmp
xchg
ja
jl
mov
or
xor
into
stos
test
std
jb
in
lret
jno
das
xor
stos
pop
shrb
jge
cld
inc
scas
push
in
pop
andb
push
fmulp
ss
push
daa
movups
push
pop
jns
adc
push
sahf
lret
loopne
mov
les
cmc
in
clc
pop
sub
outsb
mov
mov
stc
add
mov
dec
mov
sub
cmc
in
sub
mov
cmpb
mov
aas
jo
das
push
js
int3
push
mov
add
leave
sbb
std
popf
push
xchg
in
or
xchg
iret
adc
mov
mov
jno
into
jnp
jg
mov
scas
mov
movsl
fstl
es
outsl
and
jmp
push
sbb
push
test
mov
and
loopne
xchg
int
cmpsl
dec
fildll
cs
pop
pop
out
push
add
cwtl
out
jp
pop
ss
dec
insl
bound
div
in
leave
ds
xchg
stc
sub
and
cld
pop
xor
dec
xchg
js
das
lahf
mov
iret
scas
dec
sahf
push
push
iret
and
fdivrp
repz
loopne
push
mov
imul
cmpsb
jo
xchg
add
inc
loop
xchg
out
xor
and
xchg
cmpb
fs
mov
jmp
xchg
xlat
lds
jg
pop
sbb
fstps
xchg
lahf
pop
inc
pop
das
push
cwtl
mov
mov
and
lret
sbb
xchg
iret
cli
out
pop
scas
repz
dec
mov
jnp
stc
daa
sub
or
jns
adc
jl
in
adc
les
fnsetpm(287
pop
ret
clc
xor
or
inc
ds
xor
in
mov
js
stc
repz
push
dec
test
rorb
mov
cs
fdivrp
repnz
xchg
pop
pop
mov
jns
xchg
sub
aad
adc
rcll
sbb
icebp
dec
mov
out
movsb
mov
ds
icebp
push
not
das
stc
repz
xor
xchg
insb
or
orb
sahf
jae
pop
sub
fildl
clc
in
cltd
push
adc
mov
or
ret
pop
ds
outsb
mov
sti
xchg
outsl
xchg
push
fidivs
dec
call
shl
ror
imul
cld
stc
xchg
push
mov
scas
xor
aas
jg
pop
fcmovu
stos
inc
lcall
sbbb
or
aas
push
pop
jns
xor
popf
push
das
jmp
or
icebp
jmp
mov
das
lret
outsl
loopne
rol
mov
dec
sbb
xchg
aas
out
xchg
fs
stos
and
xor
jl
cmpsl
mov
mov
mov
aas
or
das
movsl
test
ljmp
lret
in
iret
aas
cs
or
push
jg
push
shr
loope
mov
xchg
repz
sbb
outsl
stc
jbe
adc
enter
movsl
outsl
jbe
insb
popf
jle
pop
xchg
leave
rolb
mov
pop
stos
inc
enter
jmp
mov
outsl
add
dec
xchg
js
add
das
dec
loope
jo
dec
das
dec
pop
xchg
dec
jg
ret
jg
iret
dec
testl
sti
outsl
xchg
push
pop
jns
adc
gs
dec
sub
iret
das
lock
das
fcomp
pop
cwtl
outsb
lahf
lret
add
sahf
jmp
cld
sbb
xchg
in
stc
inc
in
jg
jg
cld
pop
mov
sahf
mov
pop
rcrb
mov
mov
sti
test
movsl
dec
das
cmpsb
test
mov
jb
jle
cld
stc
repz
out
push
adc
mov
cmc
sbb
hlt
dec
jl
in
jg
jns
mov
cmpb
lret
xchg
push
pop
push
or
dec
mov
xor
add
mov
sub
inc
lcall
in
sahf
cmp
rcr
pop
into
pop
pusha
add
test
sub
inc
int3
push
and
out
mov
data16
sahf
outsl
test
dec
loope
bound
ds
out
stc
repz
cmpsl
push
js
sub
cmpsb
add
in
cwtl
push
stos
mov
jle
cld
ret
sub
ret
popa
xor
shlb
sar
push
inc
xor
lret
outsb
in
and
xor
imul
jp
or
mov
jecxz
pop
and
std
pop
mov
add
pop
jns
jp
push
sahf
lcall
push
cmp
mov
jg
in
push
decb
adc
adc
ret
jl
pop
lahf
in
ja
paddusw
and
jg
jo
cs
push
jno
test
scas
in
movsb
mov
pop
popa
fiadds
addr16
or
cld
stc
pop
imul
cmp
dec
xor
sub
xchg
push
fbld
cmp
shl
repz
mov
pop
out
outsl
dec
mov
repnz
std
repnz
add
popa
dec
cmp
mov
xor
repnz
and
out
stos
in
and
dec
jae
sbb
sub
or
xchg
pop
pop
pop
jns
pop
push
sub
pop
or
dec
call
pop
ds
out
mov
mov
pop
lea
pop
loope
fldcw
ret
adc
push
sahf
inc
ss
out
lahf
sbb
pusha
jbe
fwait
or
mov
addr16
outsl
cmpsb
adc
xchg
pop
dec
das
aas
scas
jno
jnp
mov
and
lret
mov
subb
xchg
sbb
lret
es
and
mov
mov
cmc
cmp
arpl
lock
pop
pushl
jno
repz
jle
adc
xor
mov
gs
or
cld
std
inc
jmp
mov
mov
cmp
xor
shll
into
loopne
pop
add
and
cmp
xchg
lahf
jg
mov
jns
xchg
jmp
iret
lahf
pop
push
jle
jecxz
sbb
pop
rcrl
pop
call
inc
outsb
cmpsb
outsl
push
sbb
aam
jo
xchg
pop
xchg
test
repnz
add
dec
gs
outsb
fsubl
mov
jl
jle
pop
push
fucom
push
inc
mov
pop
adc
imul
push
lcall
sub
scas
sub
or
mov
cmp
xchg
push
jb
lahf
imul
aas
adc
out
jns
jo
sahf
sti
hlt
repz
lahf
xchg
sub
mov
inc
repz
jmp
cld
stc
fsub
pop
out
and
pop
and
sbb
cld
stc
xor
jl
fnstsw
leave
and
in
outsl
adc
push
jg,pn
jnp
insb
and
pushf
mov
aas
je
push
into
pop
mov
sahf
mov
stos
sbb
lret
incl
sub
jne
jbe
cmpsb
cld
cld
mov
mov
sbb
lahf
aas
mov
lcall
lret
outsl
pop
jns
fstl
out
xchg
add
mov
push
test
xchg
push
or
dec
mov
data16
es
and
or
lahf
aas
call
dec
pop
aad
mov
pushf
sahf
jg
inc
je
sahf
jnp
mov
inc
pop
and
add
push
pop
and
cmp
jg
iret
cmp
mov
xchg
or
sahf
mov
or
mov
fsubrl
pop
scas
cs
and
cmpsb
mov
push
loop
ljmp
ds
pop
hlt
das
out
pop
sub
dec
lods
cmp
orl
scas
mov
aam
adc
addr16
inc
jecxz
or
mov
ljmp
mov
cmp
scas
test
mov
jno
xor
shrb
stc
mov
xchg
sub
out
repz
xor
and
inc
lods
mov
outsb
cmpsl
outsl
and
or
add
in
jo
dec
shlb
and
ficomps
cmpsb
pop
sub
aas
pop
bswap
fists
mov
mov
inc
push
imull
lahf
pop
inc
out
or
jl
mov
int
outsl
adc
or
shlb
pusha
icebp
out
cld
adc
arpl
add
or
xchg
pusha
das
lret
pop
call
dec
or
loope
dec
pop
or
dec
mov
xor
insl
decl
adc
mov
lahf
lods
xchg
pop
ret
loop
jle
loope
scas
mov
jp
jle
imul
dec
pop
dec
cmpsl
xor
cld
repnz
cmp
lret
scas
fildl
es
aas
jg
movsl
mov
ret
in
jb
mov
push
pmulhw
call
push
into
pop
out
cmpsb
lock
clc
ja
imul
cmpsb
lock
repz
shlb
add
lret
out
sub
cld
stc
addl
icebp
in
and
pop
lods
inc
mov
xchg
out
fucomip
or
in
in
test
xchg
sub
ret
pop
sarb
xchg
fisubl
inc
mov
nop
push
lahf
aas
mov
fwait
jmp
dec
mov
add
repz
sub
xor
je
mov
cld
pop
into
xchg
jg
cmp
out
and
testl
movsl
mov
stc
jne
lods
icebp
lret
pop
hlt
and
pop
gs
cwtl
hlt
sbb
repnz
mov
mov
lahf
mov
das
xchg
test
cmpsb
mov
aas
jg
inc
cs
daa
popf
ret
lret
mov
sahf
aas
clc
es
dec
xchg
lahf
jle
sub
repnz
cli
and
fistps
jg
sub
insl
movsb
popa
shrl
lahf
mov
roll
pop
imul
pop
push
pop
jns
movsb
dec
in
bt
mov
jns
xchg
test
test
les
cltd
mov
dec
sbb
cld
lea
mov
dec
jmp
dec
inc
mov
xor
in
pop
jp
outsl
das
pop
scas
mov
into
mov
jo
push
out
test
imul
lock
mov
sub
out
repz
mov
sbb
fwait
and
mov
addr16
int3
ljmp
fists
or
push
mov
jmp
pop
dec
ret
adc
mov
push
imul
daa
outsl
icebp
mov
adcl
outsl
add
pop
and
movsl
std
inc
xchg
aaa
pop
mov
xchg
fdivrl
push
jg
dec
xor
test
jp
xchg
push
pop
jns
loopne
jno
xchg
ljmp
cmpsl
hlt
out
in
in
les
out
cs
mov
cld
stc
lcall
subl
aas
icebp
arpl
ror
dec
inc
sbb
add
mov
lods
mov
rsm
lret
aas
popf
dec
jl
pop
jle
sbb
lret
out
mov
cs
inc
push
das
mov
decb
adc
jmp
xchg
fistps
stc
repz
mov
dec
aas
adc
gs
loop
mov
push
mov
jl
repz
sahf
push
jle
xor
loope
loope
loopne
shl
rcrl
xchg
sidtl
pop
jp
in
into
cmpl
insl
xchg
or
aas
add
loop
xlat
push
jno
jge
in
leave
imul
enter
xchg
add
pop
pop
pop
and
or
jns
xchg
xchg
ror
or
filds
dec
lods
mov
push
add
leave
xor
and
fcoms
idivb
xchg
push
dec
cmpsb
pop
movsl
mov
inc
mov
cmpsb
and
leave
pop
outsl
add
scas
and
leave
and
adc
loop
out
ljmp
pop
repnz
rorl
push
xor
loop
cld
dec
cli
test
out
mov
mov
nop
push
scas
inc
add
xor
lahf
pop
sbb
stc
or
cmpsl
stc
pop
lahf
aas
jg
or
fimuls
mov
inc
mov
pop
stc
repz
imul
pop
movsb
fnstcw
lds
jg
cld
leave
fwait
lea
mov
or
fstl
cs
jle
xchg
outsb
std
out
add
dec
jmp
data16
and
enter
mov
push
rcrb
icebp
out
mov
jo
out
aaa
jne
pop
ret
cli
repnz
jno
mov
cmp
insl
cld
out
test
lods
mov
aas
jmp
mov
cld
mov
adc
cmp
jp,pn
and
jg
fisttpl
mov
sub
jl
sub
enter
sbb
cmpb
mov
adc
sub
loope
pop
and
sbb
out
add
test
pop
cld
cld
ret
rcrb
ja
sub
pushf
adc
aaa
cld
mov
xchg
insl
or
in
ret
xchg
jp
das
aas
jg
out
push
pop
cs
dec
sub
lahf
andl
dec
xor
sarb
adc
jns
rcrl
adc
jg
sub
vpshlb
add
adc
out
test
mov
pop
out
jb,pt
sub
push
daa
aas
jg
ljmp
icebp
or
push
push
jle
or
fisubrs
neg
sub
loopne
adc
mov
decl
cld
or
pop
das
jmp
ret
cmp
and
enter
fidivrs
es
jle
cld
stc
pminsw
aad
aad
add
in
cs
lahf
ss
mov
rep
sub
ret
adc
std
adc
adc
jge
fisubl
test
pop
dec
out
clc
xchg
das
xchg
iret
xor
stc
add
fxch
fcmovnbe
sbb
sbb
cmp
dec
maxps
out
dec
inc
add
es
cld
lahf
mov
out
jl
idivb
arpl
and
fstl
sbb
push
mov
xchg
inc
mov
xchg
pop
shll
pop
add
fbld
repz
ret
push
les
pop
bound
repnz
xchg
xchg
dec
or
ds
iret
das
and
popf
mov
push
insb
mov
jb
pop
xchg
jns
push
aas
and
rorl
push
outsl
push
ret
and
adc
pop
mov
adc
jge
dec
jg
ror
in
sub
shll
xchg
filds
nop
jo
out
jg
arpl
jg
lret
xlat
outsb
jmp
push
lahf
test
mov
mov
loop
out
push
fisubs
push
cwtl
and
lret
lahf
pop
out
sbb
test
rclb
mov
pop
xor
cmp
add
dec
sbb
jg
and
adc
scas
fcomip
add
sub
imull
cltd
and
lret
icebp
movsb
inc
rorl
push
xchg
iret
lahf
jg
lcall
and
push
repnz
jmp
pushf
ja
es
mov
repnz
cmp
gs
lods
rcl
cmpsl
iret
adc
fists
pusha
loope
fs
or
stc
mov
or
insl
cmp
in
inc
cld
fwait
push
push
std
mov
addr16
sub
in
sub
mov
or
xchg
aas
dec
inc
or
pop
hlt
loop
mov
repnz
scas
lock
or
outsl
scas
push
pop
pop
imul
test
mov
fildll
stos
cmp
sub
dec
add
fxch
and
dec
cmpsl
pop
lods
fmuls
in
iret
xor
and
lock
jp
xor
out
icebp
leave
jg
pusha
seta
jns
inc
loopne
mov
xchg
out
daa
out
add
aas
les
outsb
sbb
test
inc
push
mov
loopne
in
sub
out
mov
int3
inc
inc
push
mov
push
sbb
push
out
repz
fwait
jo
fs
and
frstor
mov
movsl
shlb
sbb
sbb
mov
adc
add
jle
and
pop
sbb
std
or
push
orb
es
jnp
or
mov
aad
mov
shl
sahf
out
mov
lret
pop
fs
scas
mov
push
shlb
dec
fnstcw
cs
aas
dec
inc
mov
push
rcrl
mov
mov
mov
jle
xor
subb
dec
mov
mov
out
roll
mov
out
lahf
pop
mov
xor
dec
mov
lret
bnd
mov
xchg
loopne
js
in
xchg
add
xchg
sti
stc
repz
mov
jns
add
push
sti
test
mov
inc
addr16
shll
push
outsl
divb
outsl
subb
pop
cld
loopne
and
mov
push
add
ret
in
ja
mov
ret
sub
sub
stc
aaa
and
mov
jl
cmp
add
xchg
sbb
dec
inc
enter
out
mov
mov
repnz
call
fs
jo
add
adc
mov
repz
jno
mov
daa
inc
arpl
pop
test
ror
cmc
psubusw
push
adc
test
push
jle
insb
dec
sub
fidivs
pusha
mov
pop
stos
lahf
xchg
gs
fisubl
push
push
and
jmp
jle
das
fwait
xchg
ss
jae
icebp
inc
ds
sti
test
and
push
pop
lods
fs
rcr
mov
aaa
push
dec
scas
mov
dec
push
mov
pop
push
sbb
mov
add
add
js
scas
mov
or
inc
aad
lahf
pop
sbb
stos
dec
sub
cld
jae
je
js
repz
rorb
lods
inc
dec
test
lds
xor
imul
jbe
jl
cld
stc
pop
repz
sbb
push
mov
or
mov
inc
mov
das
lock
hlt
scas
int
mov
push
pop
jns
push
fistpll
imul
test
xor
icebp
out
pop
in
lea
das
inc
decb
push
dec
lcall
jl
cld
faddp
ds
add
std
jmp
inc
in
jge
dec
xchg
adcl
aas
pop
sub
dec
jno
or
xchg
out
sarl
lahf
push
push
xchg
mov
outsl
repnz
fdivrl
cmpsb
lea
cld
mov
shll
cmc
jg
inc
cli
jo
pop
cli
pop
add
cld
cltd
jo
outsb
call
in
or
test
or
xor
push
mov
jl
adc
insb
aas
lds
inc
mov
clc
inc
mov
in
push
push
adc
enter
aad
jno
rcrb
testl
pop
ret
push
dec
cmp
mov
dec
rcrl
jg
aas
dec
ds
imul
rolb
jl
iret
aad
and
mov
and
mov
or
into
cmp
repz
pop
add
cmp
insl
xchg
cwtl
mov
and
lcall
lahf
pop
push
mov
dec
call
fisubl
xchg
sbb
enter
xor
outsb
cmp
xor
repnz
pop
xor
xor
jecxz
xor
aaa
push
push
or
xor
daa
lahf
cs
mov
fdivrl
insl
insb
mov
and
xor
xor
mov
xor
xor
jecxz
mov
adc
xor
adc
lods
adc
xor
lret
popf
iret
hlt
xchg
testl
xchg
cmp
pushl
iret
or
movb
cmp
icebp
xor
xor
xor
idivb
sub
lahf
xor
loope
jg
pop
das
jle
or
clc
loopne
xchg
sbb
lahf
xor
xor
xchg
popa
shll
add
in
rorb
nop
sbb
or
fcompl
fidivrs
std
xor
mov
iret
xor
pop
outsb
cmp
xor
mov
xor
enter
xor
xor
cmpsb
fnstenv
cmp
outsb
pop
wrmsr
outsl
xchg
sbb
xor
xor
xchg
cwtl
cmp
out
xchg
out
xchg
movd
dec
xor
loopne
sbbl
pop
xor
xchg
lahf
push
mov
xchg
xor
pop
sahf
sbb
jo
aas
xor
mov
mov
push
outsb
jl
cwtl
xor
les
jecxz
lea
dec
xor
fdivrl
mov
sbb
xchg
adc
fdivl
das
scas
adc
adc
mov
xchg
sbb
xor
fdivrl
mov
xor
jns
lret
or
or
cmp
mov
mov
or
sbbb
jo
dec
xor
xor
ret
xor
sbb
out
fisubs
sarl
mov
out
dec
adc
xchg
push
inc
loopne
mov
mov
or
cs
push
cmp
or
repnz
icebp
in
push
xor
xor
or
pop
xor
xor
add
in
lea
xor
fsts
icebp
in
out
out
xor
add
xor
inc
outsb
xor
mov
xor
xor
movd
xor
out
xchg
xor
lahf
cmp
ret
xor
in
adc
xor
xor
and
lods
iret
xor
xor
xor
xor
aaa
mov
fildll
rorb
inc
sbb
pop
xor
cmp
loope
xor
xor
or
jo
bnd
xor
xor
lods
fdivrs
das
outsb
pop
stos
ret
aaa
xor
cmp
push
jo
xor
xor
cmp
loope
jg
mov
xor
xor
in
or
jl
adc
xor
xor
rorl
or
andb
movsl
xor
std
ret
dec
outsb
jl
mov
add
lahf
nop
jb
hlt
xor
and
adc
movb
pop
out
mov
xor
hlt
das
jns
or
xor
enter
adc
jnp
addl
outsl
mov
pop
xor
test
add
pop
adc
xor
scas
mov
outsb
js
lea
das
xor
jo
adc
pop
fdivl
mov
cmp
xor
rorl
sbb
outsb
js
xor
fdivl
xchg
xor
filds
dec
imul
aas
or
pop
and
imul
into
in
les
fdivrl
outsl
jmp
scas
mov
out
xor
js
pop
outsl
xor
jno
aaa
mov
dec
mov
mov
out
xor
ret
mov
pop
outsb
xor
xor
fdivrl
and
das
mov
out
xor
js
cmp
xor
xor
pushf
cmp
sahf
test
sbb
popa
or
xor
xor
ds
add
mov
outsb
sub
jg
fdivr
jo
lahf
xor
outsb
jl
xor
xor
jo
aas
xor
jle
daa
in
daa
inc
sbb
adc
inc
outsb
push
mov
cmp
xor
mov
sub
xor
xchg
pop
mov
sti
out
xor
xor
xor
or
cmpsb
iret
lea
inc
outsb
xor
xchg
xchg
into
xor
xchg
cltd
pop
aas
test
loope
aaa
lods
pushl
iret
push
outsb
pop
mov
lret
sbb
jg
mov
ret
lea
jg
aaa
fdivrl
xor
js
lea
outsl
xor
xor
dec
out
xor
xor
jl
aad
dec
xor
jb
or
scas
xor
sbbb
fbstp
das
in
and
xor
xor
and
sub
xor
dec
outsb
cmp
xor
sub
pop
jo
pop
xor
popa
and
ds
or
cmp
or
xor
xchg
imul
xor
ret
or
xor
pop
jo
outsl
xor
xor
out
cld
xor
test
icebp
fmull
js
sbb
xor
xor
xor
pushf
loope
in
push
jge
dec
adc
aaa
xor
add
arpl
lea
dec
mov
cld
xor
loope
pop
fdivl
aas
xor
xlat
adc
xor
lret
fbstp
call
fbstp
sbbb
xlat
pop
notl
fdivl
xor
xor
popa
add
jecxz
or
add
in
xor
mov
xchg
dec
iret
cld
jne
xor
xor
xor
test
pop
scas
xor
getsec
cmp
xor
xor
xor
xor
nop
sbb
xor
aas
dec
sbb
scas
out
sbbl
iret
xor
jecxz
lea
wrmsr
mov
add
in
in
pushl
pop
fnsave
xor
dec
outsb
cmp
or
sahf
fistpl
outsb
pop
sbb
sbb
jo
dec
xor
aas
and
sahf
xor
outsb
fsubl
xor
cmp
add
xor
xchg
sub
mov
xor
pop
dec
pop
adc
lahf
pop
jg
jno
inc
push
xor
xor
rorl
or
or
outsb
cmp
shlb
popl
jo
xor
sahf
fcompl
dec
shufps
aaa
xor
xor
sbb
jg
out
jne
out
iret
add
lret
xor
clc
dec
pop
lahf
ljmp
xor
jno
fdivs
rorb
sbb
or
nop
sbb
outsb
xor
pop
out
fdivl
aas
xor
es
xadd
pushl
aas
aaa
sbb
xor
xor
add
stc
dec
jb
inc
xor
xor
sub
test
jle
rorl
das
sahf
sbb
jo
pop
xor
xor
xor
xor
mov
movb
xor
xor
sbbb
outsl
xor
lcall
xchg
fdivl
aas
xor
xor
jo
lret
xor
xor
fdivl
sbb
wrmsr
cvtps2pi
cld
data16
xchg
nop
les
xchg
sbb
jo
fbstp
jb
repnz
into
jnp
imul
xchg
sbb
wrmsr
pop
loopne
pop
loopne
pop
xor
mov
xor
ret
or
icebp
fdivl
wrmsr
call
fidivs
xor
xor
xor
jecxz
xor
lea
xchg
pusha
xor
add
iret
xor
arpl
dec
or
pushf
xor
lea
pop
xchg
sbb
jo
mov
out
xor
xor
outsb
pop
jle
dec
xchg
nop
sbb
pop
xor
xor
add
mov
or
xor
in
xor
xor
xor
loop
pop
imul
xor
push
xchg
sbb
wrmsr
dec
or
mov
xor
xor
mov
xor
js
rorl
jo
sbb
decb
aaa
ds
pop
dec
or
arpl
mov
xor
insl
aaa
mov
xor
rorl
sbb
xor
outsl
inc
outsb
loope
xor
sbbl
xor
cmp
ret
lea
dec
xor
xor
pop
sbb
scas
out
xchg
xor
xor
xor
ret
jg
incl
pushl
push
xor
push
xor
icebp
push
in
lds
loopne
or
xor
adc
pop
xor
js
sbb
das
xor
dec
jle
ds
enter
adc
sub
mov
xor
bsf
loopne
xor
inc
add
sub
pop
pop
push
imul
xor
loope
outsl
or
mov
dec
test
xor
das
ret
add
add
inc
lock
mov
faddl
mov
inc
cmp
and
and
fiadds
mov
pop
nop
je
inc
lahf
push
push
xor
push
lret
mov
scas
sbb
rolb
mov
add
popa
jg
movsl
rol
xor
dec
les
outsb
sub
adc
dec
push
clc
test
mov
jns
mov
icebp
jmp
dec
and
movsl
cmp
cmp
mov
testb
in
xor
adc
add
sarb
inc
push
negb
cs
imul
out
nop
lea
jno
xchg
mov
sbb
or
adc
and
pop
xor
mov
gs
jns
lcall
xchg
js
mov
nop
sarb
enter
or
test
sbb
add
xorl
or
add
aad
sbb
or
fst
jmp
inc
arpl
jb
inc
scas
or
pusha
jp
into
dec
cli
sbb
nop
shrb
imul
ret
inc
xor
and
push
pop
or
mov
je
shlb
orl
mov
dec
inc
adc
fsubs
and
in
inc
sbb
rorl
and
push
or
rorl
and
aam
xchg
ror
rolb
sub
pusha
rclb
or
shll
leave
scas
out
sbb
lcall
mov
shlb
mov
jl
popf
and
inc
mov
fmull
mov
jae
dec
inc
mov
scas
jo
loopne
adc
test
xor
dec
xchg
push
shll
cmp
or
adc
imul
rorb
mov
and
mov
imul
dec
jle
pop
xchg
sub
in
ficoms
mov
mov
cmp
hlt
mov
dec
inc
xchg
cmpsb
push
lock
int3
add
mov
bswap
fmulp
inc
lock
pop
adc
imul
or
test
add
ret
pop
xor
and
adc
mov
jp
mov
or
mov
jns
rclb
lock
sub
bound
jbe
cli
inc
cli
add
fwait
inc
repz
sbb
jne
sbb
or
or
leave
icebp
addb
dec
pop
mov
push
movsb
sbb
insl
add
sub
das
adc
mov
xor
sub
push
leave
or
lret
shlb
arpl
xchg
sbb
fldln2
rorb
add
push
push
and
and
sbb
pop
nop
stos
daa
cs
fstpl
sbb
or
gs
cli
jmp
or
sbb
adc
popa
fistps
ds
inc
imul
pushf
cwtl
xor
mov
cmp
ja
add
pop
xor
or
or
scas
mov
push
xor
shlb
es
xchg
popa
jp,pn
fcmovb
lcall
xchg
xor
push
pusha
cmp
bound
jmp
inc
das
or
fists
add
rcll
fs
aam
mov
dec
inc
psrlq
insl
jecxz
fcmovb
inc
sbb
adc
jb
mov
cmp
ror
and
add
and
push
xor
adc
add
movb
call
rcr
sarl
lret
inc
dec
icebp
enter
aas
push
adc
cmp
mov
push
jle
push
cli
or
adc
hlt
dec
xchg
push
jle
clc
or
or
adc
push
imul
push
and
sbb
fdivl
push
lcall
enter
xchg
mov
cmpsb
mov
or
pop
sbb
hlt
pop
push
inc
add
mov
or
dec
aas
push
and
roll
and
lock
mov
cmp
lret
sbb
sbb
cli
mov
inc
pop
mov
add
and
mov
push
add
into
dec
pop
adc
fstpl
push
sbb
mov
mov
imul
outsb
cmc
and
xchg
add
mov
add
sbb
sarb
ja
loopne
sarb
dec
es
jmpw
push
add
sub
or
ds
mov
jle
adc
xor
mov
cmp
test
or
xor
sbb
add
pop
adc
ret
adc
adc
push
lods
adc
inc
rcrb
cli
bound
adc
cmp
mov
add
xor
lret
hlt
add
fmulp
mov
imul
dec
in
pusha
fucomp
pop
imul
popl
es
inc
cs
dec
fidivl
pop
pop
sbb
mov
sub
cli
sbb
push
sub
nop
flds
cmp
arpl
pop
loopne
into
sbb
movsb
inc
cli
and
push
lret
insb
bound
add
mov
mov
pop
or
sbb
jl
and
aas
sub
sarb
push
xlat
dec
fsubr
inc
loope
ret
push
inc
add
popa
or
out
adc
xor
call
sbb
push
adc
lds
pop
adc
mov
repnz
rcrl
pop
andb
jns
scas
inc
dec
mov
lods
cmp
mov
jmp
dec
and
push
and
or
xchg
repnz
dec
rolb
lea
imul
rorl
cli
das
adc
push
test
xchg
xor
lods
and
mov
mov
scas
testl
popa
add
push
and
outsl
orb
call
daa
aad
mov
sbb
pop
add
jmp
and
push
loope
cmpb
shll
ficompl
sbb
xchg
jg
sbb
call
or
jmp
ds
mov
sub
adc
ss
fidivrs
push
in
je
js
mov
or
mov
mov
xor
and
sub
jnp
or
lret
lcall
js
movsb
das
fprem
or
or
cltd
jg
push
pop
inc
xchg
add
les
orb
lret
adc
pop
fs
ret
iret
inc
leave
mov
or
jbe
sarl
xchg
dec
cs
addr16
shlb
outsb
adcb
push
push
test
or
faddp
insl
and
jecxz
fiadds
jl
mov
movsb
out
dec
int
call
mov
or
orb
insl
inc
jno
or
cwtl
xchg
movsb
dec
inc
or
lret
imul
adc
dec
das
dec
ret
fnstsw
ret
adc
sahf
push
mov
stos
test
mov
adc
and
cmc
lea
hlt
add
add
sbb
jbe
imul
ficoml
or
nop
xor
shrb
cmpsb
fsub
inc
sbb
pusha
fisubrl
movsb
repnz
mov
rorb
push
sbb
or
inc
cld
loop
orb
xchg
or
les
adc
cltd
lods
in
sub
and
jbe
adc
cwtl
jo
lret
add
andb
cmp
dec
cmp
mov
xor
pusha
adc
xor
xchg
fistps
ret
push
or
pop
mov
sbb
das
sub
xchg
enter
add
adc
adc
adc
pop
push
cli
subb
mov
lea
inc
ja
dec
sbb
data16
add
cmp
popa
adc
add
test
sahf
mov
hlt
stos
dec
sbb
popa
insl
call
or
test
nop
cld
stc
add
ja
add
or
inc
mov
andb
xor
sbbb
cmp
dec
repnz
mov
ds
movb
or
vmread
popa
clc
or
mov
in
movb
subl
mov
or
adc
and
mov
sbb
sbb
push
ljmp
mov
fdivrl
push
dec
sbb
stos
fwait
or
push
cmp
clc
fs
add
icebp
add
call
adc
jnp
and
add
call
icebp
les
jp
and
pop
xlat
push
push
jge
or
clc
adc
and
push
mov
subl
pushf
push
mov
ljmp
insl
inc
or
in
add
pop
adc
lods
xor
pop
add
ror
push
push
mov
mov
sbb
into
test
push
orb
push
mov
and
xor
push
imulb
out
or
in
sbb
enter
add
cwtl
jecxz
outsl
mov
inc
sbb
add
or
push
lods
sbb
out
call
xchg
inc
es
sub
mov
pop
pop
lods
sbb
test
cmp
imulb
insl
push
movsb
adc
and
jmp
xchg
scas
or
test
cmp
xchg
daa
and
push
push
inc
clc
lock
mov
nop
les
scas
or
add
pushf
jecxz
in
xor
mov
push
or
add
inc
inc
nop
and
sub
stos
in
push
adc
sub
ljmpw
xchg
push
out
pop
mov
mov
pop
mov
fadds
orl
push
cmp
xchg
jo
mov
sbb
in
addb
push
cmp
outsl
pop
lret
inc
sub
fdivrp
sbb
repnz
add
sub
mov
hlt
fwait
ljmp
jb
pop
inc
test
enter
int
pop
sbb
adc
out
test
sbbl
inc
adc
es
push
jbe
cmp
inc
jne
xor
inc
or
scas
inc
call
add
movb
sbb
stos
dec
push
insl
adc
jbe
js
fmuls
cmp
sub
push
cltd
je
cmp
mov
int3
call
sahf
or
shlb
jo
pop
xor
fstl
xchg
pop
cmpsb
push
adc
popa
test
push
pop
sbb
pusha
adc
shl
or
orl
or
test
mov
dec
mov
ret
adc
and
sahf
out
andl
test
inc
xor
js
lods
adc
mov
push
mov
je
bound
mov
add
cli
push
add
add
cwtl
mov
sub
les
push
iret
mov
subb
inc
sub
sbb
movsb
bndstx
cmp
push
popa
mov
call
jo
adc
dec
dec
lods
inc
dec
fdivrl
call
inc
sbb
or
pop
xor
or
subl
sar
cmpsl
shr
roll
and
mov
push
icebp
xor
push
mov
ror
std
clc
add
fsubr
out
out
pop
push
xchg
push
mov
add
xchg
mov
test
ljmp
push
xchg
jno
add
mov
xor
test
fisttpl
fs
roll
and
adc
and
sub
push
cli
mov
pusha
or
mov
add
imul
movl
inc
inc
jmp
lea
cmp
test
int3
sahf
gs
lock
lret
sub
adc
nop
and
ss
sbb
dec
fwait
into
call
sbb
movsb
inc
add
stc
adc
movsb
aam
jge
ss
cmp
lods
imul
adc
sbb
jp
xchg
xchg
add
jnp
add
pop
out
test
stos
pushf
add
and
call
jp
push
pop
or
pushf
movb
js
pop
cld
xchg
cmp
sbb
imul
and
xchg
js
jno
mov
cli
add
orl
jle
xchg
add
and
inc
adcl
stos
ljmp
loop
jbe
fs
lea
mov
push
adc
repnz
and
mov
or
push
pop
sub
xchg
inc
push
cld
call
insl
sub
sti
testb
adc
out
pop
lret
add
jp
push
in
rol
loope
sbb
movsb
rclb
daa
mov
inc
add
mov
clc
femms
sub
sub
fldl
adc
ret
movsl
push
dec
or
and
das
push
sbb
andb
push
lods
rorb
js
rcr
in
cmp
rcll
xchg
cmp
aam
outsb
sarb
ret
bound
xchg
lea
push
push
nop
addl
cmp
dec
and
or
ret
or
dec
push
das
pop
add
push
jae
push
mov
push
in
push
or
mov
jp
sbb
inc
push
lret
stos
subb
jns
and
inc
cld
push
cmpsb
pushf
int3
sbb
neg
pusha
sbb
sbb
js
sbb
frstor
divl
dec
push
je
xchg
mov
push
sbb
cmp
xor
xor
dec
cwtl
or
add
bnd
mov
xchg
ds
pop
lock
mov
cs
sbb
in
cmp
out
lods
mov
lds
sbb
test
add
mov
inc
inc
lock
pop
pop
ret
shr
cmp
and
mov
cld
jp
test
clc
ljmp
xchg
sbb
rolb
mov
pop
stc
lret
push
and
sbb
push
cwtl
dec
mov
pusha
sub
fidivs
movb
movsl
push
adc
decl
hlt
or
aas
notb
adc
sub
jge
xor
rolb
inc
push
and
pop
hlt
lea
jl
icebp
in
insb
and
sbb
inc
or
aad
push
or
cltd
les
cmp
push
adc
pop
pop
xchg
inc
push
aaa
fimull
and
dec
popl
mov
dec
adc
pop
add
mov
xor
mov
cmc
aas
mov
test
mov
test
jmp
inc
and
sbb
rorl
push
mov
loope
or
jp
push
xor
stc
or
mov
sahf
jp
or
mov
shrl
addr16
cs
mov
mov
pop
pusha
sub
add
ret
lret
or
imul
pop
or
dec
dec
add
push
lods
xchg
mov
stc
scas
into
adc
cltd
jae
push
xchg
fdivs
sahf
pop
rolb
fwait
cmpsl
pop
repnz
in
push
fadds
ret
jb
mov
or
sbb
or
test
dec
jg
pop
int3
bound
lea
push
je
lea
cmp
or
lock
ret
test
dec
test
inc
das
add
rcrl
call
into
inc
fsubs
aad
xchg
add
loopne
sub
leave
ss
call
dec
or
test
or
or
inc
rorb
inc
or
ja
push
xchg
jp
xor
aam
movsl
xchg
add
lods
cmc
mov
adc
dec
lea
or
dec
jge
into
xchg
lret
push
cmc
aam
mull
inc
pop
xor
adc
xchg
sbb
mov
sub
add
cwtl
nop
popa
test
test
or
add
out
call
add
pop
leave
xchg
inc
fsubp
dec
sbb
popa
adc
jo
loopne
push
sub
add
xorb
sbb
inc
push
add
adc
mov
add
rorb
int3
or
dec
cmp
pop
pop
fcoms
push
call
sbb
dec
fndisi(8087
rolb
xor
into
std
sbb
test
pop
iret
or
lods
inc
hlt
add
es
pop
xchg
and
xchg
pop
dec
mov
mov
xchg
xchg
lahf
js
mov
mov
outsb
push
jne
push
sbb
dec
dec
movsb
rcrl
and
cmp
imul
or
call
pop
popf
pop
push
jecxz
shr
push
add
js
shrb
shlb
fdiv
loope
and
add
lcall
push
xor
or
cmpsb
dec
arpl
adc
push
or
xchg
shrl
call
add
shll
pop
sbb
mov
inc
shlb
cwtl
cmp
adc
jg
push
adc
push
cmp
cmp
stc
jp
push
test
sbb
rorl
mov
insl
inc
out
sbb
arpl
push
les
sbb
inc
sub
shl
daa
arpl
sahf
rclb
xchg
movsl
inc
sbb
push
sbb
lret
daa
push
or
sbb
jo
push
mov
mov
mov
das
out
or
imul
cmp
adc
mov
push
pop
push
outsb
int3
pop
add
push
ja
pop
mov
push
imul
out
jmp
mov
add
das
rclb
adc
sbb
pusha
mov
inc
inc
pop
addr16
in
pop
or
sbb
in
repnz
call
mov
jecxz
dec
mov
push
xor
loop
push
mov
loop
inc
mov
mov
cmp
js
add
cmp
cld
add
cmp
aam
test
lret
and
jp
inc
pop
js
stos
les
pop
cli
leave
jno
inc
jp
dec
push
fsub
ljmp
fiadds
mov
or
xchg
fdivrs
mov
loope
aaa
push
sbb
dec
push
push
daa
cltd
mov
shlb
inc
outsb
sbb
rclb
addr16
xchg
jno
enter
xchg
and
add
lret
xor
adc
cmp
xlat
adc
jp
inc
inc
rolb
fiadds
push
and
inc
cli
cmp
mov
push
dec
push
jns
test
and
syscall
pusha
pop
fwait
inc
push
test
fnop
dec
add
fiaddl
jmp
cmp
and
test
lods
imul
jbe
pop
sbb
icebp
cwtl
cmp
sbb
les
call
rorb
and
imul
loope
out
leave
stos
mov
sbb
and
in
or
mov
cmc
scas
das
sbb
push
cmp
fnstcw
mov
pop
aam
xchg
adc
bound
dec
orb
daa
fisttpll
inc
or
push
int3
add
in
xor
and
adc
clc
add
cmp
addl
loop
mov
xchg
push
mov
ret
int
inc
sub
adc
idivl
cmp
insl
or
fcoms
xchg
enter
and
mov
dec
es
cmp
sbb
push
sbb
dec
popa
iret
xor
sbb
fidivs
fnstcw
outsl
fildl
jecxz
lds
enter
rolb
sub
ffreep
aaa
push
and
adc
pop
mov
or
gs
mov
push
ss
push
outsb
or
daa
pop
test
mov
xlat
and
xchg
add
test
and
bnd
hlt
pop
push
out
cmpsb
js
xchg
es
outsl
mov
jg
shlb
sbb
ffreep
cltd
jge
and
and
pusha
sub
ret
ret
cs
enter
addb
pop
fwait
je
test
in
sbb
test
adc
fimuls
mov
ret
add
sbb
aas
sbb
inc
mov
sbb
push
sbb
js
pop
cli
pop
dec
dec
pop
int
dec
rorb
sub
ss
sub
mov
ljmp
cltd
lock
jg
rolb
add
popf
test
loop
enter
popa
movsl
and
xchg
ret
addr16
iret
mov
loope
mov
adc
cmpsl
seto
ja
mov
mov
pushf
js
push
enter
dec
in
repnz
xor
push
shrl
aam
sti
dec
sbb
adc
les
add
adc
call
gs
cmp
sbb
sti
dec
arpl
cltd
sbbb
testb
lock
iret
call
and
movsl
stc
or
popa
add
dec
push
pop
inc
xchg
sbb
xor
jp
mov
or
cli
inc
mov
jne
xor
or
adc
popa
enter
pushf
pop
ss
adc
movsb
movsl
sbb
jns
and
lods
or
popa
inc
mov
les
mov
rcrl
out
ret
add
and
add
inc
cmp
daa
add
cli
inc
lods
mov
xor
lea
fdivrl
mov
cltd
mov
sub
adc
out
xor
mov
and
push
ds
je
or
hlt
mov
push
or
fcoms
sub
or
in
xchg
pop
enter
inc
push
ret
sub
sbb
lcall
sbb
out
mov
add
fiadds
iret
sbb
call
fadd
popa
mov
leave
stos
inc
and
or
gs
fsts
inc
cmp
mov
inc
jbe
nop
inc
ljmp
sub
out
sti
inc
scas
and
ud2
ret
mov
and
mov
loopne
sub
mov
ror
lret
rolb
flds
sbb
push
mov
outsb
sub
cmp
add
andb
jo
out
sbb
rcr
mov
mov
dec
cld
adc
or
ss
ret
inc
cmp
mov
adc
xor
sete
jne
rcll
stc
and
mov
sub
mov
or
cmp
nop
mov
push
lock
or
rcrb
shll
sbb
mov
and
insb
push
hlt
cmc
aam
lcall
mov
fcmovnb
addl
clc
xchg
adc
ffree
sbb
jle
fs
into
dec
push
or
mov
enter
mov
pop
sbb
push
outsb
adc
loope
add
xchg
inc
es
daa
fnstcw
pusha
ret
mov
sahf
outsl
aam
lods
lock
sarl
imul
aam
ret
or
dec
jp
push
xlat
cmp
and
adc
ficoml
push
mov
or
adc
and
scas
jo
pop
arpl
inc
pop
push
lock
adc
mov
pop
mov
push
pop
jmp
mull
adc
shrb
addl
adc
hlt
mov
pop
rol
sbb
pop
mov
movsb
push
leave
test
imul
sbb
sbb
cmpsl
push
fbld
xchg
and
cmpsl
pop
test
imul
adc
push
dec
clc
lcall
add
or
jl
xchg
or
fldcw
ret
in
les
stos
add
mov
mov
pop
add
sub
mov
or
loop
lods
les
cmp
dec
dec
jecxz
push
dec
fiaddl
adc
lock
push
pop
idiv
les
js
les
and
push
ret
xchg
rcrl
repnz
imul
add
ds
jl
pushf
dec
ljmp
dec
cmp
lret
inc
ja
nop
push
push
inc
movsb
push
jbe
adc
ss
mov
or
mov
jb
out
push
and
stos
out
inc
into
push
inc
xchg
pop
cmp
lds
push
or
hlt
mov
hlt
fs
sub
adc
test
cmp
ret
pop
into
call
sub
hlt
sub
jecxz
add
pop
aas
add
or
xchg
inc
pop
xchg
push
ss
in
mov
sbb
pop
pusha
rcll
push
mov
and
add
es
in
repz
mov
cmp
jge
repnz
in
mov
add
js
xchg
inc
inc
or
andb
ror
add
cwtl
out
adc
pop
ds
add
pop
cmp
fcmovnbe
rcr
dec
sbb
call
sub
pop
jb
xchg
inc
push
cmp
pop
cs
gs
ss
add
mov
das
mov
or
add
fmull
add
sbb
cmp
les
push
inc
xchg
popf
test
aas
cs
in
adc
pop
mov
ret
inc
dec
mov
pushf
je
ret
pop
push
push
or
pusha
pop
push
mov
push
ds
movb
push
hlt
pusha
push
aas
xchg
popf
clc
push
pop
nop
test
jmp
and
nop
pop
bound
or
dec
test
test
les
jmp
push
dec
loop
popf
leave
push
push
mov
imul
shll
lret
nop
test
subb
shlb
push
adc
sbb
fs
out
cltd
es
and
mov
icebp
in
sbb
sbb
cmp
mov
xor
ret
adc
gs
and
cmpl
lods
mov
sub
sahf
call
xchg
lret
nop
add
or
ficoml
sub
das
push
mov
or
ret
in
pop
clc
or
ljmp
call
mov
test
or
addb
add
or
rorl
sbb
std
add
jmp
mov
jb
or
mov
push
mov
into
sbb
out
test
icebp
push
or
dec
mov
lea
push
jns
xor
stos
stc
loop
cmovnp
inc
or
xchg
mov
pop
lods
and
xchg
jno
xchg
pop
rcrl
shl
cli
mov
mov
sub
pop
ficoml
pop
outsl
loope
xchg
pop
mov
dec
popf
shl
add
sbb
sub
jecxz
xor
les
jl
push
mov
arpl
add
jno
inc
imul
or
stos
mov
sahf
push
xor
push
lret
ret
mov
lods
xchg
jmp
pop
push
adcb
add
imul
or
xor
cmp
pop
pop
lret
xchg
dec
out
mov
xor
imul
xchg
jno
jo
nop
push
dec
mov
shll
pusha
imul
sbb
js
sbb
test
add
dec
pushf
sbb
fnsave
push
cmp
pushf
in
sbb
pop
cmp
xchg
xchg
mov
sub
xor
sbb
cltd
push
adc
test
push
pop
sub
push
adc
add
push
sbb
mov
jp
xchg
sub
loope
inc
push
cmp
add
add
lret
jmp
push
sub
jecxz
xchg
sbb
mov
mov
inc
cmp
sub
shll
jge
rcrb
mov
cmp
mov
roll
nop
fdivs
mov
aaa
or
test
fimuls
sub
pusha
leave
pusha
push
sbb
dec
mov
mov
icebp
pop
sub
nop
push
add
lods
push
and
out
shlb
pop
in
sbb
sbb
cmp
adc
cmp
dec
sbb
das
in
jg
mov
add
add
xchg
ds
mov
jge
and
rcrl
ror
push
cltd
popa
ret
or
adc
xor
xor
pop
subb
or
js
pop
call
add
adc
nop
pop
test
inc
ret
add
pop
mov
js
pop
ss
rclb
rcll
fcoms
pop
shr
movsl
sub
add
cmp
arpl
xchg
adc
jb
sbb
por
clc
mov
add
loopne
adc
pop
adc
sbb
mov
inc
mov
sahf
xor
out
loop
ret
loop
aam
lods
adc
sbb
add
rcll
movsb
cltd
or
sbb
sbb
aad
mov
js
push
dec
push
dec
rcl
mov
lret
and
mov
popa
ret
lock
sub
or
push
aad
add
clc
int3
ret
loopne
mov
loopne
sub
dec
lea
lods
xor
cli
xchg
fiadds
pop
sub
cmp
mov
add
loope
inc
sub
sbb
inc
push
dec
es
hlt
movsb
dec
mov
adc
test
repnz
push
jp
xchg
sbb
loopne
dec
mov
lcall
mov
add
push
xchg
shrb
dec
mov
pop
cmp
rcr
test
test
enter
aaa
and
mov
in
sbb
sub
dec
arpl
push
movzwl
shlb
or
push
add
icebp
push
mov
mov
push
sbb
sub
shlb
fs
ss
sbb
test
sub
fldenv
in
xchg
and
pop
mov
mov
je
push
push
icebp
js
test
aas
jnp
add
rcrb
out
mulb
lods
or
es
xchg
inc
cmp
push
inc
cwtl
pop
or
or
mov
or
and
sbb
addl
insl
jmp
mov
movb
icebp
aad
xchg
sbb
adc
nop
sbb
mov
ja
mov
cmp
addr16
cs
icebp
jb
jb
das
xchg
cmc
and
mov
mov
aad
pop
sbb
cmp
push
add
and
gs
cmpsl
mov
test
out
xchg
sub
or
pop
inc
es
push
xchg
adc
ret
push
fistpl
jo
sbb
push
pop
dec
fmull
ret
add
jle
cwtl
push
shlb
dec
jp
dec
mov
push
enter
cli
push
js
imul
add
cwtl
xchg
dec
js
outsb
sub
push
cs
or
test
xor
call
inc
mov
pop
inc
xor
xor
jg
and
pop
and
push
leave
push
andl
push
jno
sub
lods
push
iret
push
cmc
jns
or
pop
pop
aad
cmp
stc
js
pusha
ljmp
add
sbb
xor
and
or
and
inc
jb
inc
test
xchg
jp
rclb
dec
xchg
repnz
aad
push
or
addb
cmp
ret
mov
jo
pushf
mov
cmp
inc
mov
lods
adc
mov
push
and
pop
incb
sbb
rol
rcl
add
xchg
pop
xchg
xor
add
push
pop
insl
pop
or
xchg
push
lret
xor
cmp
pop
fucomi
sbb
stc
scas
or
popf
xchg
flds
adc
ret
ret
adc
push
or
ret
testb
add
xor
movaps
enter
pop
sbb
shlb
lret
mov
hlt
dec
enter
add
inc
insb
lret
test
push
xchg
mov
xchg
pop
push
movsb
inc
ror
xchg
and
mov
xchg
pusha
stos
mov
enter
inc
cli
xchg
pop
sbb
push
dec
mov
push
movsb
jb
push
nop
mov
sbb
and
jne
adc
cmc
dec
rorb
and
jge
in
pop
or
pop
sub
fidivl
popf
pop
add
pop
ror
shlb
cli
jp
xchg
or
or
xchg
mov
stc
add
adcb
andb
dec
push
and
nop
lods
or
push
daa
inc
mov
pop
je
adcb
adc
popa
popa
es
test
xchg
lahf
or
into
shll
push
push
push
mov
xchg
or
mov
dec
mov
adc
mov
dec
sahf
mov
sbb
sbb
mov
lea
sbb
and
cld
lods
xor
sbb
and
in
movsl
xchg
fs
stc
adc
cmp
mov
es
movsl
lock
data16
and
scas
jle
in
jecxz
movsb
js
cli
mov
adc
icebp
jns
adc
add
test
dec
xchg
and
push
add
jb
fld
mov
pop
icebp
sbb
add
add
mov
ss
xchg
xchg
xor
lret
and
push
or
or
movsl
jno
out
je
or
jo
xor
push
pop
adc
call
mov
push
sbb
mov
into
nop
pop
mov
mov
or
enter
icebp
pop
sbb
pop
and
idiv
xor
push
inc
push
sub
push
mov
mov
mov
xor
push
seto
popa
sub
xchg
subl
push
daa
push
sti
push
cs
mov
test
shrb
mov
inc
shlb
sub
or
lea
add
pop
arpl
ror
sub
stc
add
fnstcw
pop
aad
inc
dec
mov
out
test
dec
add
rorl
or
cld
cld
push
js
adc
rclb
sub
xchg
loope
mov
or
mov
nop
aam
push
push
push
xchg
mov
cmp
push
gs
adc
sbb
lea
xchg
fs
ss
sbb
and
inc
bound
sbb
setle
subb
rclb
and
add
pop
dec
pop
sbb
xchg
inc
insb
movsb
test
imul
shlb
xchg
clc
xor
add
fs
ret
add
int3
mov
dec
aas
xchg
lcall
push
xchg
test
inc
ret
and
pop
out
cs
xchg
stos
mov
repnz
pop
add
cmc
jnp
or
clc
push
mov
orb
or
or
scas
pop
clc
call
mov
adc
and
ret
push
dec
nop
mov
sub
jp
shll
sub
ds
push
ret
mov
cmp
pop
or
mov
cmp
in
mov
mov
xor
add
mov
push
lock
sahf
adc
andl
mov
loopne
adc
aaa
arpl
ds
push
xor
idiv
pop
xchg
jge
lret
adc
test
addr16
cld
in
lds
into
push
rol
xor
pop
add
add
sbbb
mov
mov
ret
xor
xor
xor
adcb
push
add
pop
pusha
push
rorl
test
lret
and
jne
inc
push
adc
cmp
xchg
xor
sbb
add
dec
js
lock
aam
je
mov
push
xor
out
fdivrl
repnz
or
ljmp
fcompl
adc
ss
in
push
bound
or
cmp
pop
sub
xor
hlt
mov
or
inc
pusha
jl
or
mov
es
repz
or
dec
or
mov
or
pop
ffreep
in
push
or
xor
ret
jns
out
inc
or
loope
rclb
jns
out
adc
xchg
in
inc
into
xor
int
sub
mov
cmp
push
xlat
inc
pop
mov
add
inc
outsl
sbb
inc
rcrb
pop
xor
shlb
je
loopne
in
addb
xor
adc
subl
dec
lahf
xor
fcomps
rorb
gs
cmp
test
push
shlb
je
add
enter
adc
rcrb
out
and
sbb
jbe
push
mov
in
lret
bound
mov
test
mov
movsl
cmp
aam
xchg
js
clc
adc
sbb
sbb
mov
pusha
roll
cmp
int3
arpl
xor
movsl
or
sub
mov
pop
testl
and
js
sub
call
mov
mov
dec
jecxz
into
outsl
loop
cmp
push
ret
pop
mov
pop
mov
shr
out
push
mov
repnz
or
imul
hlt
aaa
shll
hlt
adc
xchg
and
cmp
cwtl
sub
push
dec
cs
sbb
test
mov
loopne
dec
jmp
nop
pop
rol
adc
nop
into
sub
jg
mov
je
insl
int
repnz
insb
sub
cltd
cmp
ret
bound
sbbl
enter
shlb
in
fcoms
lcall
into
aas
adc
inc
jae
mov
mov
add
add
and
add
movsb
adc
jo
mov
xor
add
fs
xchg
adc
inc
dec
ss
dec
sbb
or
sub
arpl
inc
push
daa
push
jp
inc
push
sbb
hlt
lock
fs
push
jo
mov
popf
sbb
mov
lock
sub
mov
sub
mov
sbb
fst
movsb
add
mov
jno
or
int
cmc
add
dec
push
jmp
inc
cmpsb
add
pop
xor
adc
mov
shl
adc
adc
test
inc
cmp
dec
js
or
sbb
test
rolb
mov
int3
inc
push
lahf
push
push
adc
xchg
xchg
or
mov
sub
mov
outsb
testb
xor
inc
repnz
mov
dec
nop
cmp
xor
add
les
call
movsb
add
add
lea
cmp
add
mov
or
rolb
jl
decb
inc
ret
test
mov
insb
sbb
hlt
sub
scas
out
and
push
add
cmp
and
mov
pop
loope
test
inc
inc
or
add
inc
mov
sbb
and
pushf
fisubl
fs
or
cmpsb
or
add
adc
mov
sarl
movsb
fimull
sub
lds
sub
adc
addr16
sbb
stos
or
xchg
sbb
xchg
jno
sbb
jo
test
cltd
loope
jbe
faddl
jnp
jb
adc
add
pop
jne
inc
xor
cmp
sarl
shrb
rcrb
cs
nop
xchg
add
cmp
jl
ret
popf
dec
sbb
push
cmc
rcrb
push
cmp
data16
jb
insl
jl
push
push
dec
icebp
test
inc
add
or
and
and
adc
or
pop
lea
mov
mov
or
xor
or
xchg
les
iret
decb
sub
dec
cwtl
mov
pop
fucompp
js
sbb
pop
fmull
test
add
lock
popf
xchg
pop
andb
dec
lret
mov
adc
mov
xor
sub
jmp
and
leave
mov
pop
inc
mov
adc
xorb
push
dec
jmp
xor
sub
and
fdivl
and
je
mov
ret
push
jns
cld
sbb
sub
inc
xor
ss
mov
xchg
adc
mov
mov
icebp
movb
mov
sbb
and
dec
xor
imul
inc
out
fdivrl
test
insb
jne
push
lret
inc
sub
push
ss
dec
xchg
sbb
nop
je
cmpsl
lock
imul
mov
adc
lock
movsb
call
mov
addr16
call
adc
js
push
push
add
add
aam
xor
sbb
sub
loopne
jnp
adc
lock
adcb
lret
repnz
pop
je
jbe
mov
mov
ljmp
inc
push
push
sbb
add
add
scas
add
mov
push
xor
sbb
test
out
and
sub
loope
mov
add
dec
cmp
add
mov
js
movsl
jmp
pop
mov
push
mov
jmp
inc
jns
push
movsl
pusha
inc
pop
cmpl
inc
adc
rolb
les
sbb
je
hlt
or
inc
dec
and
in
xor
sbb
test
sbb
and
xor
jmp
adc
mov
dec
push
and
sbb
and
push
sbb
add
mov
popf
mov
stos
pop
xor
cld
rolb
rolb
into
nop
or
mov
lods
je
nop
pop
sbb
lret
add
xchg
sub
shlb
jns
sub
inc
mov
loop
inc
ss
andb
or
repnz
inc
loope
add
ficoml
dec
mov
jbe
sbb
cmpsl
and
xchg
sub
or
lret
xchg
jnp
pop
pop
pop
add
into
xchg
ljmp
cli
cmp
subl
adc
repnz
sbb
adc
add
mov
sbb
xor
movb
movsb
inc
sub
bound
inc
imul
inc
dec
es
aam
test
dec
or
or
pusha
lret
jbe
jmp
jo
add
fsts
and
lock
pushf
jb
ss
dec
xchg
xor
lret
inc
xor
ret
add
pop
pop
rol
sbb
adc
fwait
sbbb
int3
imul
ljmp
and
test
fnstcw
and
ljmp
sub
add
outsb
aam
adc
imul
add
or
je
ret
mov
nop
push
lds
test
movsb
popl
sbb
lods
and
xchg
pop
ret
cld
add
pop
cmp
and
add
call
jle
jg
inc
xor
adc
jo
inc
sub
xor
and
int
add
jl
add
andb
sub
pusha
mov
push
mov
sbb
mov
xchg
cvttps2pi
dec
rclb
cmp
xor
pop
rcrb
add
xor
mov
xchg
sbb
adc
mov
rol
sarb
push
cld
mov
jmp
bound
inc
cld
dec
clc
and
outsb
xchg
and
sbb
pop
jne
push
data16
and
add
and
in
lods
push
xchg
pusha
sub
in
push
fsubs
push
mov
daa
call
movsl
movsl
popa
fadds
cmp
addl
pushf
add
pusha
fwait
js
inc
sbb
add
ljmp
push
scas
inc
jecxz
push
mov
mov
ss
pushf
orl
ret
lret
or
pop
add
ret
popa
or
test
or
push
mov
sbb
popl
fisubs
add
pop
jns
inc
fwait
mov
cmp
add
sub
call
xchg
mov
xchg
push
test
or
es
xchg
test
insl
jl
lret
mov
xchg
je
adc
rcrl
mov
adc
mov
adc
mov
cmp
add
mov
gs
shrl
mov
lcall
or
mov
mov
jecxz
mov
dec
mov
out
insb
insb
or
xor
xor
fcomps
shlb
movsb
jl
mov
mov
add
or
cmp
xchg
nop
xor
dec
add
jp
aaa
enter
mov
xchg
mov
jp
sub
xor
xor
sbb
push
mov
add
jo
adc
iret
mov
sbb
push
insb
leave
std
sbbb
inc
sub
cmp
test
pop
stos
pusha
lods
mov
and
cmp
sub
mov
cmp
adc
dec
jo
and
cs
icebp
ret
repnz
jno
lds
adc
add
push
call
or
push
enter
in
jmp
mov
jle
imul
push
ljmp
dec
mov
aam
inc
jnp
sbb
xor
or
or
ret
adc
inc
mov
dec
cwtl
xor
imul
adc
or
add
repnz
sbb
and
or
mov
push
jmp
sbb
mov
mov
movsb
jl
mov
mov
add
push
mov
jnp
jmp
sub
imul
push
or
jo
xor
xor
cmp
frstor
lods
mov
aad
popa
or
xor
ret
js
xchg
xchg
neg
orl
cmc
add
pop
ficomps
leave
mov
les
cmp
jns
mov
add
pop
xor
ss
mov
jge
rolb
pusha
jp
insb
push
inc
or
out
xchg
add
int3
inc
pop
inc
das
add
mov
inc
movsl
enter
jne
pop
je
pop
sub
test
inc
mov
push
xchg
scas
scas
pusha
leave
scas
adc
xchg
xchg
add
push
pop
cmp
and
sub
and
sbb
jo
mov
movsb
inc
or
int
push
mov
fidivrl
inc
enter
jo
je
xor
xchg
or
jno
adc
test
lods
sub
or
sub
push
add
mov
mov
notb
punpckhdq
or
dec
sbb
xor
aam
mov
mov
adc
inc
sbb
sub
mov
adc
push
divb
ljmp
incb
and
cmp
jl
movsl
mov
jmp
push
gs
jbe
mov
jmp
sbb
pop
or
pop
or
mov
mov
rorb
cld
inc
sub
cmpsb
enter
dec
or
loopne
nop
and
aaa
xchg
push
dec
add
dec
push
ljmp
mov
ret
enter
in
sbb
push
fidivrs
jo
adc
movups
ja
jl
movsb
pop
or
xchg
mov
mov
dec
xor
jo
insl
jmp
pop
adc
leave
mov
dec
xchg
jmp
adc
andb
scas
dec
cmp
icebp
xchg
sbb
out
push
add
dec
mov
xor
xchg
sbb
sbb
je
or
adc
and
inc
add
call
or
add
adc
cld
xor
leave
cmp
stos
jo
sbb
jo
sub
mov
cmp
sarl
xchg
mov
mov
shll
sbb
adc
repnz
in
arpl
xchg
inc
sbb
insb
pop
adc
pop
mov
imul
ret
adc
mov
clc
add
repnz
ret
sbb
add
xlat
js
lea
jl
pop
insl
aam
xor
fsubrl
push
jb
sbb
fsubl
or
ret
imul
and
enter
jge
xlat
push
xor
into
cmpsb
js
andl
add
and
mov
jle
xor
mov
xchg
push
out
cs
cmc
lock
or
mov
aam
scas
push
sbb
movb
push
push
movsb
dec
or
push
jno
rolb
ds
dec
sub
pusha
pusha
imul
xchg
pusha
ja
jmp
fmuls
push
sbb
and
add
add
sub
dec
sub
pushf
xor
cltd
xor
inc
dec
sbb
lea
imul
jecxz
sbb
imul
lock
mov
xchg
jle
push
sbb
mov
sub
mov
or
jb
outsl
mov
sbb
jb
addr16
leave
movsb
ss
shlb
icebp
mov
pop
in
mov
xchg
mov
mov
and
xchg
dec
push
enter
test
js
dec
fsts
xlat
addl
mov
pop
sbb
mov
pop
divb
dec
adc
xlat
xchg
mov
jp
cmpsl
cmp
adc
ret
adc
jne
sbb
test
adc
add
call
or
add
fdivrl
dec
aam
add
jl
inc
iret
pop
xor
dec
sbb
push
insb
clc
sbb
es
sub
ja
adc
js
add
pop
cmpb
lods
lret
enter
loopne
mov
stc
in
and
mov
mov
adc
and
add
sub
pushf
aam
or
stos
dec
pushf
lea
rcrb
or
dec
loopne
adc
sbb
inc
push
dec
pushf
test
shl
ret
push
imul
mov
addr16
mov
sub
dec
nop
sbb
xchg
lret
mov
insb
add
or
cmp
jge
movsb
mov
idiv
in
nop
mov
xor
mov
pop
push
test
push
adc
pop
repnz
mov
jp
cmp
sub
inc
xchg
mov
inc
push
es
icebp
and
sbb
adc
sbb
popf
shrb
and
ret
lcall
adc
cwtl
push
into
ret
xor
roll
rorl
shrb
inc
add
lea
insb
sbb
mov
mov
fstl
add
out
pop
imul
dec
repnz
push
sbb
or
mov
adc
push
sub
mov
sub
loopne
inc
orl
inc
jle
and
movsl
xor
into
sbbb
cmp
or
jb
mov
or
hlt
push
sub
or
or
mov
clc
add
lea
pusha
pop
shrl
lahf
es
stc
movb
push
pop
adc
xor
out
dec
mov
dec
ljmp
adc
scas
sub
mov
mov
xor
jnp
mov
inc
sub
js
add
hlt
leave
push
ss
and
and
jl
add
push
jns
xor
push
xchg
outsb
xchg
or
or
repz
xor
jno
dec
inc
add
je
push
or
into
lret
test
dec
sbbl
aam
ss
sub
or
imul
push
nop
rclb
fcompl
jge
movsl
lock
fiadds
sbb
sub
or
ds
push
jnp
fs
and
add
bound
or
scas
push
xor
fnstcw
or
adc
rcll
dec
xchg
mov
adc
sbb
or
rolb
dec
xchg
cld
aad
call
mov
mov
mov
sub
sahf
and
shl
sbb
add
mov
aam
aad
jo
popf
cmpsb
mov
adc
ret
pop
andl
lock
xchg
mov
dec
int3
jecxz
rorb
mov
mov
popa
push
and
xchg
out
loopne
es
sarb
loop
add
jae
or
and
pop
mov
nop
enter
shrl
dec
nop
scas
add
mov
or
or
scas
leave
mov
dec
add
inc
or
pop
pop
int
cmp
inc
inc
imul
sbb
cmp
mov
jle
test
out
push
and
int
clc
add
cmp
stc
inc
mov
lret
jle
hlt
and
mov
loopne
lods
mov
xchg
mov
adc
shlb
dec
add
shlb
sub
cmpb
mov
add
push
pusha
outsb
ds
sub
sahf
inc
test
cmpsb
pop
xor
loopne
stc
loopne
jbe
jp
rol
or
imul
movsb
aam
add
nop
lods
push
adc
aam
shlb
mov
inc
js
repnz
icebp
push
dec
test
add
jmp
enter
gs
sub
pop
add
cmc
xchg
mov
inc
flds
inc
mov
or
dec
xchg
adc
mov
pop
push
cmp
fists
or
jle
movb
sti
mov
push
sub
and
add
push
out
pop
xlat
inc
xor
push
shlb
push
adc
jle
ds
push
je
push
xchg
leave
add
mov
or
mov
jl
and
xchg
repnz
lret
push
dec
sbb
mov
ret
cmpsb
lcall
jo
pop
xchg
dec
or
dec
xchg
sbb
jmp
mov
xchg
ret
add
cmpsl
mov
xor
aaa
sbb
pop
adc
bound
cmp
inc
daa
insb
les
daa
sbb
add
cli
or
sub
pop
or
in
cmp
xchg
adc
pop
sbb
test
dec
push
mov
push
leave
insb
add
aam
or
stos
add
pop
add
cmp
sub
push
push
add
jle
test
outsl
ret
mov
test
cmp
mov
es
cld
pmaxsw
pushf
lea
push
repnz
filds
dec
cs
sbb
jne
and
shrb
lret
xchg
xchg
mov
mov
adc
ljmp
js
daa
mov
push
mov
jo
mov
push
pop
lret
add
or
inc
push
push
ljmp
sub
push
xchg
or
or
add
xchg
loopne
jno
sahf
aaa
pop
adc
inc
mov
pop
add
dec
pop
xchg
jge
sti
cmc
add
ja
enter
push
in
xor
push
sub
aaa
and
pop
mov
push
xor
push
jo
jmp
push
jo
mov
sbb
dec
shr
xor
sub
dec
fstpl
shrb
mov
sbb
inc
js
cmp
xchg
sbbb
repnz
adc
mov
scas
xchg
xor
stc
or
mov
and
cmp
inc
rolb
ljmp
add
ficompl
add
movsl
pop
sbb
and
ror
push
pop
pop
and
pop
adc
adc
dec
fs
or
in
inc
add
sbb
and
push
pop
push
int
mov
adc
push
mov
mov
sbb
dec
xor
cltd
jmp
xor
call
cmpb
arpl
xchg
popa
rcrb
push
add
shrb
sub
push
xorb
popf
inc
sub
ret
sarb
pop
push
xchg
dec
sbb
mov
pop
jo
fisttpll
pop
mov
push
scas
xlat
aad
push
gs
push
xchg
mov
pop
stc
add
pusha
insb
cmp
add
inc
sysexit
loopne
xchg
push
push
loop
lahf
add
scas
push
sub
cmp
mov
dec
lret
sub
cmp
sub
sbb
and
mov
inc
xor
popa
dec
int
je
push
das
call
clc
sbb
pop
ret
and
and
inc
js
aad
adc
sub
lea
stc
jo
mov
shrb
in
jmp
lock
loopne
xor
popa
ljmp
inc
cmp
inc
call
sbb
sahf
loopne
roll
add
cld
and
mov
sbb
addl
jbe
cmp
mov
cld
repnz
inc
jae
push
jecxz
or
push
stc
jb
xchg
imul
and
out
adc
cmp
mov
add
mov
push
ljmp
or
push
pop
sti
shr
icebp
xchg
xor
push
lods
xchg
insb
or
loop
icebp
adc
insb
or
add
add
ror
push
lock
mov
in
mov
test
or
fldenv
and
icebp
jle
push
insb
loope
fisttps
adc
add
test
sbb
xorb
adc
pop
cmc
pop
xchg
rcrl
sub
cmpsl
shlb
mov
cmp
nop
lock
mov
pop
rcrb
adc
faddp
sbb
cmp
sbb
and
or
pop
pop
insb
or
ror
dec
xor
inc
popa
and
sbb
jb
addl
inc
pop
add
and
pop
xor
fs
inc
inc
cmp
leave
dec
test
lret
in
or
hlt
addb
push
pop
sbb
or
ret
lret
ja
data16
mov
dec
sbb
sub
mov
cmp
cmp
bnd
cltd
rclb
test
lret
add
sbb
andl
pop
cmp
mov
inc
adc
xchg
pop
shrl
lock
mov
addl
adc
clc
das
enter
add
inc
mov
inc
mov
xor
xor
adc
imul
js
adc
mov
push
cmp
lea
pop
pop
jbe
push
es
popf
lret
movl
pop
mov
mov
insl
ret
inc
or
dec
push
notb
nop
push
lret
push
add
insb
dec
js
adc
cmp
cmp
sbb
pop
dec
push
add
leave
push
test
push
outsl
fimull
pusha
xchg
xchg
add
xchg
inc
sbb
sub
int3
mov
sbb
mov
mov
push
cmp
rclb
push
lea
and
popa
call
loop
adcb
daa
push
ljmp
pop
cmp
or
sbb
push
adcb
mov
inc
popa
push
loopne
add
pushf
rolb
or
dec
mov
imul
sub
iret
xchg
jmp
add
insl
push
xchg
lret
ret
adc
add
and
add
pusha
pop
sub
cwtl
xchg
ljmp
mov
mov
test
clc
cwtl
inc
fs
lahf
or
ret
leave
add
loopne
xor
cli
dec
dec
dec
mov
pop
loopne
loopne
mov
ffree
and
ljmp
mov
sub
fidivs
push
adc
push
fimuls
adc
loop
rclb
xor
adc
loop
jge
pop
popf
inc
jge
xchg
ja
adc
push
and
adc
mov
push
add
sbb
test
sarb
fwait
pop
add
test
filds
xchg
pop
cs
aam
int3
jg
dec
call
mov
insb
jecxz
lock
lods
imul
pop
sbb
int3
add
mov
mov
insb
xchg
or
adcb
int3
mov
add
push
adc
adc
and
and
add
xchg
add
popf
imul
scas
cmc
jecxz
bswap
or
push
sbb
shrb
pop
adc
aam
popa
subb
mov
cmp
add
dec
and
jge
rclb
cmp
popf
push
mov
icebp
adc
rcrb
inc
push
xchg
jb
ja
add
jbe
jge
push
add
dec
cmpsl
mov
or
adc
je
stos
mov
mov
shl
dec
inc
pop
ss
pop
arpl
rorb
loopne
shr
adc
inc
shrb
nop
or
shr
sub
out
scas
and
sbb
shlb
bound
arpl
lods
mov
ss
dec
aam
xchg
out
jle
push
pushf
test
in
add
inc
jmp
lock
jo
lea
dec
or
fidivl
mov
jno
add
inc
pop
gs
xor
ret
dec
addr16
aam
repz
pop
cmpsb
adc
in
loopne
jne
gs
dec
or
pop
xchg
adc
mov
dec
nop
int3
in
mov
xor
sbb
dec
and
jnp
test
aad
sub
inc
pop
lcall
pop
pop
xlat
add
xchg
test
xchg
lock
inc
sub
and
xor
and
js
movsl
adc
sbb
test
mov
push
lcall
dec
rolb
js
pusha
rcll
add
inc
pop
adc
inc
adc
push
lahf
cmpb
and
jecxz
cmp
pop
jmp
pop
cmp
dec
push
sub
imul
jmp
and
and
gs
dec
pop
mov
aad
lock
movsb
mov
mov
mov
add
push
sub
pop
push
mov
xchg
mov
bound
push
or
or
cltd
cmp
inc
test
xchg
xchg
mov
cmp
xor
pushf
add
movsb
ss
jecxz
inc
icebp
push
pusha
dec
mov
pop
cltd
inc
les
js
dec
mov
test
pushf
and
andl
and
sbb
rorb
xchg
and
shrb
incb
push
push
add
mov
cld
sub
mov
fs
mov
push
pop
dec
es
movzbl
xchg
adc
outsl
call
andb
hlt
pop
sbb
das
and
dec
sub
xchg
sbb
sub
scas
and
and
fidivs
sbb
movsl
loopne
xor
mov
outsl
adcb
and
and
addl
push
adc
pop
adc
shlb
push
das
loope
add
or
push
lock
jno
movsb
cmpsl
mov
add
enter
push
add
ror
sarl
or
daa
sbb
jno
sbb
xor
int3
das
and
pop
js
jo
add
orl
into
or
insl
mov
xor
in
dec
pop
ret
sbb
inc
in
rol
les
add
sbb
jp
aaa
mov
mov
jo
sbb
xor
loop
push
clc
add
push
xchg
add
ret
sub
lock
fs
add
adc
sbb
lock
push
add
es
in
or
add
lods
test
in
or
mov
mov
call
fadds
pop
xchg
lcall
dec
dec
jb
cmpsl
xchg
add
push
add
in
repnz
sbb
pop
imul
adc
sbb
mov
fadds
nop
jecxz
jb
dec
psllq
xor
adc
or
inc
mov
push
pop
in
xorb
lock
shll
dec
or
add
test
xchg
repnz
sbb
mov
cmp
push
push
addb
scas
ret
add
push
inc
add
mov
adc
movsl
add
fwait
sahf
jno
lods
cmp
add
pop
test
adc
sbb
movsb
add
pop
sub
dec
push
movb
scas
add
xchg
sahf
pushf
sbbb
inc
add
cmp
push
xchg
pop
pop
ret
adc
push
mov
cmp
dec
cmp
ret
xchg
jne
call
mov
dec
pmulhuw
incb
data16
fs
push
cmp
cmp
rorb
jecxz,pn
sbb
jmp
or
sbb
mov
jp
sub
pusha
lods
mov
mov
test
push
fnstcw
xchg
mov
sub
sarb
xchg
xchg
cmp
push
push
sbbb
and
hlt
mov
fidivs
add
jns
js
lods
cmp
jae
dec
pusha
adc
jns
xor
and
xchg
movsl
mov
lea
mov
xchg
enter
mov
or
pop
sbb
and
or
mov
adc
sahf
adc
lds
adc
push
push
pop
nop
xor
add
or
jmp
lock
aam
sbb
inc
js
nop
loopne
pusha
xorb
lods
add
and
xor
test
lret
scas
or
loopne
sti
mov
stos
sbbl
xchg
pop
cmp
mov
mov
ret
xchg
ljmp
adc
stos
push
daa
add
popa
xchg
add
push
lret
dec
xchg
or
call
inc
xor
imul
sbb
negb
imul
xchg
lock
out
sbb
add
dec
mov
int3
dec
je
imul
mov
movsb
add
scas
test
or
cmp
adc
gs
jns
icebp
inc
sbb
adc
out
push
leave
pop
sub
dec
adc
sbb
push
pop
mov
and
clc
or
sub
cvtps2pd
and
sub
repnz
insl
cmp
mov
mov
cmp
xchg
xlat
rolb
lea
push
mov
shl
mov
inc
mov
adc
push
push
sub
lock
sbb
or
or
or
fadds
adc
xchg
lret
out
gs
mov
das
mov
push
ret
adc
and
sahf
js
push
add
add
subl
ds
push
and
stc
xchg
fstl
cltd
aad
cmp
xchg
xor
dec
jl
push
push
jns
outsb
aam
lea
loope
stos
mov
mov
imul
ss
cltd
clc
add
mov
ret
out
adc
xor
rolb
pushf
mov
add
push
icebp
mov
insb
incb
push
sub
mov
push
stc
pop
ret
pop
sbb
pushf
fcompl
pop
mov
add
xchg
xchg
mov
mov
inc
xchg
mov
inc
stc
add
and
or
inc
jns
sub
push
mov
rorb
hlt
or
lods
sbb
popa
sbb
push
enter
je
dec
cmp
mov
push
xchg
aad
andb
sbb
mov
fwait
inc
lret
pop
mov
out
shl
pop
jg
sub
les
repnz
mov
jl
andb
add
add
jo
mov
cmp
enter
add
add
shlb
sbb
jns
test
dec
fs
or
and
mov
push
add
loope
dec
ja
aas
add
je
pop
or
scas
inc
jecxz
cmp
xor
mov
outsb
movsb
xchg
inc
jns
push
adc
xchg
imul
arpl
pop
xor
adc
shlb
xor
jbe
and
push
inc
icebp
ret
lods
sysenter
pop
sub
mov
sbb
data16
nop
int3
mov
jmp
add
sbb
mov
mov
fcom
test
lds
mov
lcall
repnz
adc
inc
inc
or
scas
add
add
cmp
ss
rorb
xchg
cmp
call
shll
mov
insb
sbb
sbb
jecxz
jne
sub
xor
hlt
mov
adc
and
and
push
mov
jne
xchg
xor
mov
add
jge
movsl
shlb
dec
mov
cmp
out
adc
call
cmp
push
hlt
aas
mov
sub
addl
push
jmp
inc
xor
add
pop
popa
pusha
mov
mov
xor
adc
dec
test
imul
sub
test
pop
adc
and
sti
mov
lock
pop
adc
pop
imul
sbb
test
cmpps
test
ss
or
dec
xor
or
leave
out
xor
mov
mov
xchg
outsl
inc
inc
push
or
das
adc
imul
cmp
js
and
fcomi
cmp
push
mov
scas
adc
pop
xor
adc
mov
addl
jp
jo
sub
sbb
mov
ds
loope
push
fcmovnbe
dec
sub
lret
xchg
mov
and
mov
sbb
adc
adc
adcb
or
inc
dec
add
jmp
fsts
xchg
inc
call
push
inc
and
jl
sbb
sbb
or
insl
cmp
push
jno
pushf
dec
fdivrl
fnstsw
lret
inc
pusha
ret
push
pop
cltd
jae
sub
add
lret
add
cmp
insl
or
xchg
movsl
and
mov
dec
jp
mov
xor
arpl
jp
pop
or
add
dec
pop
imul
inc
sbb
inc
fdiv
jecxz
nop
jle
adc
ret
or
outsl
push
ja
inc
jb
inc
sub
push
nop
pop
sbb
push
lods
outsb
mov
aad
sbb
mov
push
push
mov
and
inc
daa
testl
add
xor
pop
jo
push
push
mov
push
sub
sbb
xchg
call
hlt
and
stc
cli
pop
jno
mov
push
xchg
mov
gs
inc
mov
dec
sbb
stos
and
int3
mov
add
cmpsb
pop
push
cmpb
out
pop
rolb
fmuls
push
dec
daa
sbb
add
shlb
test
inc
add
xor
cwtl
adc
jp
ret
insb
adc
popf
dec
xchg
sbb
add
movsl
arpl
shlb
loopne
in
adc
es
jno
adc
push
mov
pop
adc
dec
in
lret
adc
adc
add
movsl
cli
in
adc
addl
sub
shlb
inc
out
add
mov
lods
push
adc
adc
outsl
loope
jae
call
xchg
and
rolb
push
rclb
inc
je
adc
daa
sbb
push
mov
and
movsl
add
xchg
repnz
jecxz
adc
mov
mov
lret
dec
cmp
inc
flds
push
cmp
mov
or
test
or
leave
incl
into
mov
sub
insb
out
or
xchg
jb
cmp
and
pop
in
push
or
arpl
loope
add
adc
or
xchg
adc
sbb
inc
sub
std
inc
enter
add
sub
xchg
cs
in
mov
adc
pop
pop
lcall
add
jne
mov
mov
mov
fimull
push
loope
mov
shlb
ret
push
jo
scas
nop
jg
mov
xchg
adc
pop
mov
push
bound
enter
imul
xor
fidivl
and
push
rorb
in
dec
movsb
adc
je
sti
sbb
add
jp
push
push
pushf
jp
aaa
push
sbb
add
mov
out
xor
or
test
lea
and
cli
xchg
pop
daa
or
mov
jmp
lret
push
pop
mov
dec
call
mov
cmp
jp
add
push
inc
shlb
pop
mov
daa
dec
add
cmp
mov
mov
popf
cmp
xchg
cmpsl
jge
jmp
in
in
sub
pop
or
ret
out
pop
orb
cwtl
jno
lock
push
shll
mov
cwtl
pop
sub
dec
into
lret
or
adc
fldlg2
call
call
lock
pusha
orb
add
cmp
aam
dec
mov
shlb
xchg
adcb
cld
adc
movl
jp
xlat
orb
js
shlb
and
pop
insb
pop
xor
jmp
sbb
inc
mov
rorb
push
mov
mov
and
push
loope
pop
push
and
pop
pop
sbb
or
xchg
add
in
pop
add
sub
and
dec
outsl
pop
dec
ja
sbb
fs
mov
loop
sbb
imulb
pusha
inc
dec
movd
adc
or
adc
push
shrl
insb
ret
xchg
add
cmp
cs
sbb
mov
lock
imul
xchg
pop
add
inc
adc
jg
inc
xchg
add
push
or
or
enter
xchg
push
dec
sbb
jle
rorb
sahf
ljmp
xor
addl
mov
cmp
lea
in
vcvtps2pd
mov
dec
push
pop
push
cs
inc
jns
push
xchg
inc
jecxz
mov
ss
cmp
pop
cli
mov
xor
rolb
imul
or
lods
cmpsb
mov
jmp
cld
xor
add
push
adc
hlt
loope
nop
adc
add
pop
les
cmp
enter
out
sbb
jp
aam
pop
push
or
lret
add
lcall
mov
scas
sub
rclb
push
insl
mov
addb
push
jle
xchg
int3
pop
cmp
loopne
mov
inc
test
stos
ss
dec
push
add
sbb
mov
movb
mov
pushf
test
icebp
test
leave
fs
push
push
sub
xor
add
xor
push
adc
call
or
mov
pushf
sub
mov
inc
dec
add
jo
xchg
push
mov
mov
mov
dec
pop
scas
push
xor
sbb
pop
in
bound
lods
cli
mov
sub
popa
push
fwait
subb
or
lock
dec
sarb
lcall
lods
lcall
sub
shl
stos
and
insl
mov
outsl
sbb
data16
or
clc
ficoml
and
sbb
rolb
ficoml
and
call
dec
sbb
pusha
rorb
mov
push
int3
pop
push
mov
inc
xor
mov
jo
cmpsl
xor
xchg
notb
mov
lods
mov
xor
or
push
rcl
adcb
adc
pop
ficoms
or
xchg
xchg
adcb
int3
shll
imul
jo
les
or
test
leave
xor
lret
add
jge
mov
fs
mov
enter
add
dec
loopne
push
call
inc
mov
sbb
push
sbb
test
shll
pop
cmpsl
mov
cmp
or
or
mov
fwait
stos
jp
add
or
and
adc
dec
and
loope
lret
loop
inc
inc
and
fsts
push
sub
nop
sbb
dec
jp
or
jmp
inc
es
push
lods
sub
enter
nop
push
rolb
lea
shlb
out
add
xor
repnz
sub
movsb
imul
aad
mov
into
mov
in
mov
pmuludq
xor
scas
or
invd
in
jo
insb
dec
sbb
adc
orb
mov
loopne
add
loope
ret
mov
or
scas
push
scas
mov
push
shlb
enter
add
stos
or
xchg
xor
shl
dec
fs
mov
inc
add
rdpmc
enter
push
dec
xor
lock
scas
sub
pop
xchg
cmpsl
idivl
or
and
inc
cli
fimuls
push
sbb
or
enter
dec
sbb
dec
aaa
adc
and
sub
out
movsb
push
dec
js
push
cmp
mov
addr16
clc
sbb
aad
mov
dec
std
dec
jp
lock
push
xchg
add
daa
iret
push
jge
enter
mov
mov
sub
pusha
mov
push
xorb
aaa
push
mov
rol
insl
loopne
or
pop
cmp
cli
inc
ret
fnstcw
lret
push
sbb
loopne
les
lcall
xchg
mov
pop
sbb
arpl
push
adc
add
or
jo
mov
cmp
adc
jmp
sub
xchg
arpl
jne
push
js
icebp
out
sbb
and
add
push
pop
add
xor
je
std
xor
test
clc
adc
adc
mov
pop
je
mov
inc
ja
push
lods
lock
jmp
add
sbb
push
or
or
into
aam
fstps
hlt
out
adc
xor
dec
inc
js
mov
movsb
in
jnp
addr16
pop
inc
add
inc
pusha
ret
pop
inc
inc
push
pop
or
aaa
sbb
xchg
or
aad
and
dec
add
fdivrs
movsb
sub
sub
fcompl
add
subb
adc
nop
inc
or
xor
pop
jecxz
andl
sub
inc
fdiv
add
es
dec
pop
sub
movsb
xor
cmp
pop
mov
data16
mov
add
add
add
nop
lods
xor
call
inc
mov
lods
mov
and
test
mov
mov
js
addl
add
cs
popa
lods
movsb
pop
inc
ss
sbb
xchg
mov
mov
pop
push
push
pop
mov
sbb
rorl
addr16
xchg
jmp
sti
test
ljmp
movsl
add
mov
sub
popa
xchg
lock
add
sub
push
add
sub
and
pop
mov
dec
test
icebp
dec
das
inc
outsb
stc
pop
jp
add
mov
inc
xlat
and
aad
pop
and
rolb
jle
mov
adc
rorl
adc
push
repnz
sbb
fs
xchg
xchg
pop
test
pop
fstpt
mov
test
sbb
dec
add
inc
xchg
mov
ret
add
pusha
rol
sub
cli
and
sub
add
push
pmulhuw
cmpsb
jecxz
inc
movsb
mov
fimull
sahf
cli
xchg
adc
add
mov
test
add
mov
aam
test
out
sub
out
adc
add
fiaddl
sub
add
xchg
cmc
push
movsb
into
mov
sub
and
rclb
pushf
mov
sub
adc
or
cmp
or
icebp
std
enter
mov
push
add
ds
push
mov
add
push
jecxz
lock
mov
mov
call
mov
jne
into
ljmp
das
pop
std
movsb
add
mov
sub
jae
mov
into
daa
ljmp
xlat
sbbb
lock
cs
push
fildl
add
and
add
mov
rorb
mov
popa
inc
pushf
or
push
rcl
les
jne
push
jae
lret
loopne
mov
pop
dec
fst
cmpsb
mov
test
mov
or
mov
and
mov
sbb
lcall
jl
jo
cmpsb
adc
mov
cmpsb
cmp
dec
rclb
inc
mov
icebp
mov
outsb
ljmp
or
test
and
cli
add
mov
adc
push
faddp
arpl
add
adc
pop
mov
add
inc
sbb
arpl
rcrl
add
sub
imul
out
dec
add
xchg
jne
aad
jp
std
mov
adc
and
lods
adc
adc
sbb
call
test
rcr
sbb
arpl
fisubrs
xchg
in
mov
sub
or
pop
xor
sbb
jle
loope
xchg
sbb
xor
or
shll
push
test
lods
cmp
int3
rcrb
imul
cmp
cs
fs
mov
pop
pop
xor
xor
imul
sub
mov
cmp
jecxz
and
sbb
inc
xor
sub
push
push
aam
or
test
bound
shufps
adc
lcall
pop
rcll
lcall
sahf
je
add
xchg
pop
gs
add
js
mov
lods
pop
mov
mov
out
roll
xor
push
jne
mov
dec
inc
or
jno
and
je
inc
sbb
mov
push
out
fisubl
adc
clc
mov
icebp
mov
or
out
leave
push
inc
das
leave
subl
mov
out
or
inc
mov
hlt
insb
sbb
mov
pop
or
testb
fwait
pop
dec
int3
rorl
mov
shr
or
mov
push
or
mov
xchg
pop
sbb
push
inc
cmp
adc
xor
xchg
sbb
loopne
pushf
and
sbb
lods
xchg
stc
mulb
test
inc
daa
xor
jmp
loop
mov
gs
in
or
je
movb
dec
and
imul
int
add
test
lcall
and
or
sahf
ret
xchg
dec
add
andb
or
lea
nop
scas
loopne
and
into
pop
xlat
and
sbb
push
data16
sub
adc
sub
fs
cs
repnz
insl
cmpsl
mov
and
sub
or
int
enter
adc
push
add
js
js
push
inc
pusha
in
inc
mov
mov
xchg
xchg
nop
stos
xchg
ljmp
cs
mov
jmp
mov
sbb
negb
jno
and
mov
add
pop
movsl
into
adc
repz
lods
pop
into
sbb
addl
or
insl
and
mov
and
dec
pop
psrld
addr16
insl
ret
sbb
xor
imul
mov
or
jns
xor
ret
ljmp
cmp
adc
sahf
lea
adc
sbb
push
das
or
daa
sub
adc
rclb
shl
cmp
insl
pop
pop
sbb
repz
add
add
jmp
mov
ret
jl
inc
cli
les
mov
pop
cmp
inc
push
mov
xchg
adc
push
dec
xor
inc
xor
test
ret
fdivrs
outsl
sbbl
test
pop
or
das
mov
push
aam
loope
xchg
aam
push
push
ljmp
cs
sarb
dec
call
mov
dec
adc
cmp
js
lret
push
hlt
push
sub
test
negb
cmp
push
bound
adc
loope
in
mov
jo
call
leave
leave
and
xorb
push
adc
in
scas
adc
mov
inc
ret
push
fwait
or
lods
inc
cwtl
notb
add
pop
lods
movsb
movsl
push
adc
popf
dec
mov
push
adc
mov
mov
or
dec
jmp
into
or
or
adc
jle
cmp
dec
or
or
pusha
xor
sub
pop
outsl
or
pop
out
orl
rolb
jo
add
push
inc
jge
lea
sub
xlat
gs
cmp
mov
lret
nop
xor
sbb
xchg
mov
add
mov
mov
and
adc
adc
repnz
or
and
psrlw
in
mov
mov
or
or
adc
and
jg
sbb
rclb
pusha
mov
out
add
ja
sub
test
dec
das
out
push
gs
jo
add
cmp
add
nop
shl
das
jnp
adc
xchg
rorb
lea
add
mov
in
sbbb
sbb
inc
adc
mov
call
jg
inc
and
add
and
push
sbb
pushf
sbb
push
dec
add
adcb
mov
repnz
push
and
push
movsb
xor
jmp
shrb
and
pop
dec
dec
shlb
pushf
sbb
mov
inc
inc
leave
mov
cmp
insb
mov
popf
jne
loopne
xor
add
adc
add
inc
jp
in
mov
and
orb
and
push
push
rcl
push
outsb
pop
or
sbb
sbbl
sbb
dec
sarb
adc
aas
adc
jmp
sahf
inc
xlat
jo
lods
test
inc
jmp
xchg
or
and
mov
mov
adc
or
inc
lahf
push
nop
adc
jo
jle
lret
movsb
push
mov
sbb
rclb
inc
scas
sbb
inc
push
add
sub
pop
xor
movsb
cmpsb
cli
add
icebp
mov
sbb
mov
add
cmp
std
sarb
lods
cmovae
mov
or
nop
ffreep
mov
lea
shll
jp
jnp
sub
hlt
add
loope
inc
or
int3
add
sub
lret
adc
sub
xor
or
aad
jne
xacquire
pushf
orb
test
fs
adc
sub
inc
loopne
adc
sub
and
js
mov
stos
lock
js
sbb
adcl
inc
dec
test
adc
test
fimuls
xlat
push
mov
aam
inc
mov
jae
shl
and
pop
mov
test
ficoms
jns
out
cmp
enter
mov
pop
or
jmp
flds
push
mov
and
and
sbb
and
push
aaa
mov
lcall
sbb
rolb
and
sbb
mov
jg
inc
push
pop
jge
jo
cmpl
add
sbb
cmc
adcb
out
outsb
lock
dec
enter
sub
lahf
movb
and
or
push
fnstcw
fisubrl
inc
jg
jp
rorb
push
nop
xchg
loop
mov
mov
cmp
adc
pop
sub
out
into
add
leave
inc
aas
pop
push
xchg
pop
fldl
clc
xchg
add
push
shl
add
ret
and
cmp
push
mov
pop
fwait
call
mov
fdivrp
xchg
data16
adc
push
mov
or
iret
pop
mov
sbb
ljmp
pop
mov
cmp
xchg
push
cmp
movsb
enter
je
push
negb
add
addl
add
mov
ljmp
pop
movsb
add
pop
imull
cltd
mov
mov
dec
in
mov
lock
inc
jge
push
rcrb
rorb
imul
inc
pop
data16
or
popa
xor
inc
int3
ss
dec
add
dec
movsl
xchg
test
sub
loop
or
aad
insl
mov
add
or
pop
sub
cmp
push
test
cmp
lret
stos
mov
push
dec
clc
loopne
sbbb
ror
xor
add
lret
dec
sub
dec
pop
mov
mov
cld
gs
and
add
faddp
mov
push
add
or
pop
icebp
aam
les
bnd
cmp
movsl
aad
xor
mov
in
pop
and
sbb
mov
xorl
pop
rcll
xor
nop
push
mov
xlat
xchg
rolb
iret
roll
adc
adcb
xlat
rcl
es
bound
or
jecxz
in
push
adc
adc
pop
loop
sub
pop
mov
loopne
push
int
adc
add
ja
sbb
popa
dec
ret
ret
jne
sub
ja
xor
sub
aam
xorb
or
and
std
aam
sub
adc
ret
inc
or
or
dec
mov
sub
jne
inc
mov
in
scas
das
or
mov
enter
lret
dec
es
sub
testb
jno
jno
nop
shlb
les
into
add
imul
xchg
push
add
outsl
icebp
loope
popf
mov
mov
into
and
dec
mov
inc
movsl
and
dec
in
shrl
push
push
add
sbb
lods
test
lahf
adc
xchg
adc
shl
orl
jmp
cmp
and
movsl
orb
mull
xchg
or
or
jp
xchg
cs
xchg
adc
adc
stos
pushf
test
sahf
lds
and
mov
repnz
adc
lods
pop
push
jecxz
or
outsb
jo
jp
sub
push
test
loop
adc
stc
aam
dec
cmp
mov
push
faddl
jno
ss
cmp
or
sbb
mov
nop
lret
mov
sub
or
sub
or
xor
mov
jo
add
es
in
add
adc
aam
mov
pavgw
xchg
ss
inc
and
push
xchg
mov
inc
push
pop
test
mov
add
aaa
and
cmp
fsubrs
push
push
pop
sbb
inc
inc
jp
in
int3
adc
lea
xchg
mov
cmc
push
sub
jne
stos
int3
add
fsub
addb
mov
sbb
icebp
jmp
ficoms
lods
das
push
or
int3
imul
js
sbb
xor
mulb
out
mov
or
xchg
lock
cmp
adc
push
xor
test
add
stos
mov
mov
mov
push
scas
push
sub
xor
push
ret
push
xrelease
and
sub
fs
push
jg
xor
jo
lods
inc
sbb
mov
cs
lret
addb
add
shrb
aaa
sub
and
test
stc
pop
mov
xorb
adc
pop
jb
sarl
das
jo
sub
sub
js
fs
push
mov
xchg
shll
push
xchg
push
shr
push
jle
dec
test
inc
cmpsl
or
xchg
clc
leave
dec
movsb
subb
push
push
sub
dec
pop
mov
testl
push
push
inc
cmp
push
dec
repnz
pop
mov
cwtl
cltd
inc
push
xor
shrb
inc
mov
or
inc
cmp
lods
sbb
jmp
lahf
and
adc
inc
add
xchg
cmpsb
fwait
or
dec
inc
dec
loopne
inc
andb
or
js
out
aaa
or
xchg
in
jb
or
add
loopne
pop
les
cmp
mov
rol
mov
fs
cmc
adc
jl
pop
dec
jecxz
adcl
sahf
push
shlb
jno
movsb
adc
jne
pusha
lret
adc
or
adc
push
ret
sub
cmpb
or
xchg
jmp
fs
ljmp
clc
orb
push
xchg
es
jno
outsb
test
testl
add
xor
xor
ja
call
add
loope
dec
or
cs
jp
mov
pop
xor
movsl
push
movzwl
repz
loop
imul
dec
mov
aaa
gs
and
aad
xchg
imul
pop
scas
sub
imul
xchg
lcall
sbb
loopne
push
pop
lret
dec
or
popa
cmp
pop
popf
jecxz
inc
sbb
mov
xlat
or
mov
jmp
aad
add
dec
add
push
int3
add
jmp
jecxz
jb
pusha
mov
push
in
imul
jmp
xor
xchg
push
sbb
fs
xchg
icebp
stc
test
xor
aad
and
add
negb
cmp
sub
popa
dec
pop
out
or
or
scas
enter
push
stos
inc
or
rcr
adc
insb
adc
cmp
push
icebp
and
xchg
fs
or
subl
push
sub
add
clc
sbb
aam
mov
dec
stos
idivb
push
mov
loop
adc
sbb
fdivrl
arpl
push
adc
roll
shrl
adc
dec
jns
shl
xchg
jne
adc
cmpsb
lret
shrb
adc
scas
je
ret
xchg
fwait
rorl
insl
and
shrb
sbb
rcl
popa
or
adc
xchg
and
test
mov
adc
shlb
inc
jp
push
adc
pop
out
dec
adc
les
add
dec
pop
stos
inc
cld
push
adc
outsl
or
mov
flds
jae
push
cltd
or
mov
addb
cli
push
fs
inc
jge
outsb
in
daa
or
cmpsl
xor
sbbl
add
adc
xchg
fimuls
dec
outsl
nop
test
dec
ret
sub
dec
shlb
xchg
int
mov
adc
or
inc
push
cld
in
cmc
lock
sbb
roll
lret
rclb
addr16
cmp
stos
push
pop
popa
in
push
add
inc
sub
es
sbb
sbb
enter
test
rorb
push
pop
xchg
lcall
mov
jbe
jae
dec
int
pop
ret
add
icebp
dec
iret
out
inc
mov
loopne
add
xchg
add
inc
or
mov
mov
lods
xor
hlt
les
dec
inc
ss
xor
orl
mov
call
addr16
and
mov
jmp
lods
adc
sub
push
fs
adcl
into
nop
mov
pop
xor
mov
adc
in
or
sbb
mov
in
int3
dec
pop
outsl
jne
arpl
xor
xchg
in
jne
sbb
pop
cmp
adc
icebp
out
jo
dec
push
sub
cmp
call
push
jo
adc
andb
xchg
xor
xor
mov
adcb
test
shl
inc
loope
daa
mov
adc
adc
or
loope
mov
push
mov
xchg
or
adc
adc
add
cmp
movsb
lea
push
aam
push
mov
gs
sub
je
xor
dec
shrb
scas
out
push
inc
xchg
jo
xchg
stc
jp
xor
push
adc
mov
lods
cmpsb
sbb
xchg
xchg
cmc
je
push
ret
lret
cwtl
lahf
pop
icebp
sbb
mov
dec
loope
push
inc
xchg
inc
ljmp
sub
enter
jo
pop
mov
jg
jecxz
ret
mov
inc
mov
adc
dec
add
fs
test
and
lea
bnd
lods
xchg
clc
fs
out
dec
sahf
xor
mov
nop
add
mov
mov
adc
movsb
xchg
mov
inc
js
rolb
ja
fisubrl
add
add
sub
mov
dec
pop
cmpsl
push
or
out
mov
inc
stos
je
xor
popa
fists
dec
ret
test
push
push
dec
enter
popa
add
out
and
rclb
jge
cmpb
cmp
mov
rcll
and
adc
and
iret
pop
push
mov
inc
sbb
mov
fcmovb
leave
and
addr16
pop
mov
jnp
add
add
rolb
jo
test
and
and
mov
pop
jno,pt
xor
inc
mov
cmp
mov
sarb
or
arpl
sbb
stc
dec
aam
cmp
pop
or
pop
adcb
mov
xchg
scas
popa
std
rcrl
cmpb
jno
add
cmp
inc
jmp
jns
pop
push
cmp
and
sbb
pop
sbb
pop
add
nop
aam
gs
das
nop
pushf
cli
sarl
dec
das
push
or
xlat
sbb
negb
push
mov
mov
roll
aaa
rorb
rol
sbb
test
scas
dec
leave
sbb
rol
xchg
inc
mov
loopw
repnz
dec
pop
sbb
or
sar
adcl
add
hlt
lret
xchg
push
add
mov
jo
pop
sahf
sub
sbb
sub
rorl
cmp
dec
add
mov
addr16
pop
push
sub
jp
dec
outsl
add
imul
nop
mov
add
je
jne
mov
shrb
movb
or
pop
add
pop
lock
mov
push
mov
jb
sub
and
pop
pop
test
add
or
mov
sbb
cmp
add
xor
nop
and
orl
jbe
pusha
lea
and
ret
inc
les
andb
std
sbbb
dec
pop
shrb
pop
add
jge
cs
jb
or
inc
mov
mov
sub
int
sbb
lret
lock
xchg
pop
add
scas
cmp
or
cmpsb
sbb
orl
mov
inc
cltd
adc
pop
add
ret
xchg
and
decb
aam
pop
adc
jns
or
roll
adc
adc
xchg
cmp
xor
dec
arpl
ret
or
leave
add
movsl
xor
mov
jp
cmc
add
mov
orl
es
test
sbb
push
das
lods
out
mov
adc
data16
sub
xchg
rcrb
pop
ret
jmp
add
inc
mov
negb
orl
cli
and
out
rclb
pop
inc
mov
jmp
nop
adc
inc
pop
add
lret
rol
cmp
xor
inc
push
inc
rcpps
inc
adc
inc
jecxz
mov
add
test
js
and
pop
ret
pop
loope
add
pop
insb
pop
dec
adc
in
ss
mov
or
push
xor
leave
mov
movsl
scas
fists
pop
rcll
dec
sbb
adc
aad
add
cmp
mov
cmp
ret
scas
add
push
lock
or
pop
pushf
pop
push
fdivrs
ret
ret
inc
push
jl
jo
jp
arpl
lret
push
jne
sub
repz
add
cltd
inc
jecxz
int3
push
add
hlt
jecxz
insb
cmp
pop
ret
out
rol
mov
lret
jl
push
stos
adcl
ret
jne
icebp
sbbb
or
xchg
sbb
pusha
insb
push
je
mov
xchg
mov
mov
xchg
shll
adc
int3
mov
pushf
push
cmp
dec
pushf
mov
pushf
ds
or
lret
loop
and
cmp
addr16
hlt
test
mov
xor
push
cwtl
aam
not
hlt
or
xchg
dec
inc
js
scas
push
xorl
and
adc
add
push
into
jae
les
adc
cltd
add
fs
and
jnp
rorb
xchg
jge
daa
adc
sub
js
mov
aaa
lods
das
imul
js
sbb
dec
sbb
int
push
adc
orb
call
or
inc
lods
dec
lds
xchg
or
dec
sbb
and
jle
je
mov
xor
es
jo
mov
add
mov
dec
mov
xor
repnz
and
jp
enter
push
pop
adc
lods
arpl
mov
adc
cs
add
push
lret
sbb
loope
notb
xchg
cmp
nop
xchg
adc
mov
cmp
sahf
dec
xor
push
repnz
outsl
ljmp
loopne
and
inc
sarb
es
lcall
xchg
add
stos
outsb
cs
push
repz
ror
insl
cltd
outsb
pop
or
or
pop
int
divb
scas
loopne
popf
fcomps
pop
mov
sub
and
fs
jg
mov
mov
test
adc
gs
aas
shl
repz
insl
popa
cmpsl
leave
sbb
imul
out
add
arpl
sbb
test
or
sahf
cmc
dec
xor
js
mov
or
mov
test
add
inc
dec
dec
sbb
cmp
mov
sbb
lcall
jno
xchg
mov
cmpsb
push
adc
sbb
jecxz
xchg
jbe
orb
addb
and
sbb
nop
je
push
outsb
jno
cwtl
in
pushf
leave
xchg
jo
ret
lcall
out
nop
cmp
inc
jge
xor
roll
cwtl
cmp
mov
or
jns
and
popf
test
jmp
cmp
lds
les
addl
stos
xor
or
inc
jecxz
stos
adc
enter
inc
or
or
sbb
fs
inc
imul
es
icebp
and
add
inc
sbb
add
push
mov
inc
sbb
xchg
xchg
dec
push
add
inc
cwtl
push
mov
dec
adc
pop
adc
push
aam
dec
fadd
inc
cmp
jl
jnp
fnstenv
icebp
adc
ret
addr16
sub
adc
ds
push
add
arpl
or
dec
out
into
lret
sbb
add
insb
adcl
sbb
ret
and
cmp
ret
sbb
xorl
push
stos
das
shl
je
sbbb
js
jecxz
repnz
cltd
add
cmp
add
ret
out
adc
sub
and
sub
ret
xor
popf
pop
popa
or
sahf
xchg
or
inc
lds
mov
rolb
sub
leave
loopne
in
add
sub
cli
inc
push
das
cmp
fimull
outsb
sub
mov
push
cld
loopne
add
mov
sbb
leave
imul
dec
adc
pop
dec
add
inc
cmc
stos
movsl
mov
mov
push
rcr
and
xor
inc
ds
dec
daa
xor
imul
test
add
adc
movsb
dec
call
inc
xor
sbb
push
sub
or
and
aam
inc
xchg
cmp
add
movsl
cli
push
jl
xor
sbb
rolb
and
test
push
ret
pop
cmp
adc
dec
or
ret
and
lods
xor
movsl
xor
xor
andl
lcall
cwtl
cwtl
js
jae
popa
and
push
xchg
test
push
and
jbe
mov
cli
testl
into
aad
shlb
aam
outsb
sbb
adc
sbb
arpl
daa
mov
and
call
adc
xor
add
adc
rorl
leave
sbb
and
fwait
sbb
pusha
cmpsb
push
adc
cwtl
jns
add
cmpsb
xor
or
pop
xchg
test
lret
add
and
sbb
js
xchg
sarb
mov
adc
test
lock
push
popf
cmp
aaa
sub
xor
mov
push
call
lock
fnstenv
xchg
inc
sub
movsb
jno
mov
paddusb
dec
pop
jb
popa
std
mov
cmp
pushf
lea
mov
mov
movsb
leave
xchg
stos
xchg
sbb
jmp
xor
rcll
movsbl
js
fdivrp
adc
dec
add
add
push
push
mov
add
pop
mov
lcall
sub
shlb
xor
add
mov
sbb
mov
cmp
mov
jge
pop
lock
push
adcb
cmc
mov
enter
lods
push
jne
mov
mov
or
sbb
std
into
int
and
bound
js
push
rorb
push
pop
lods
and
dec
cwtl
mov
shll
aas
les
sub
mov
popa
xor
and
and
xchg
push
mov
mov
aad
sub
arpl
mov
and
mov
add
xor
push
stos
and
scas
sbb
dec
add
push
cli
mov
xchg
loope
pop
push
dec
add
pop
xorb
xlat
xchg
xor
sub
cwtl
inc
push
xchg
bound
test
sub
nop
sub
dec
dec
xor
or
sbb
or
shlb
lret
sub
add
adc
cld
int
mov
cmp
movsl
outsb
aam
mov
pop
jecxz
stc
sbb
cld
andb
mov
sub
cmc
adc
mov
mov
jne
js
pop
jmp
mov
dec
push
out
inc
pop
or
adc
jno
rorl
and
enter
mov
and
adc
dec
test
fidivs
sbb
ds
jb
mov
imul
sub
js
enter
or
or
or
cmpsb
arpl
jge
xor
and
cmpsl
xchg
jo
gs
dec
push
cmp
xchg
ljmp
push
add
loopne
lea
push
ja
sarb
insb
dec
and
inc
push
dec
sbb
aad
fs
aad
xor
movsl
dec
xchg
add
popf
mov
cmp
xchg
xor
or
adc
pop
pop
mov
mov
and
ljmp
push
pop
add
add
pop
adc
cmpsb
adc
je
stos
xchg
mov
andb
adc
cmp
jo
movsb
xor
dec
cwtl
ficoms
sub
rolb
aam
rcrb
test
insl
fildll
cmc
or
sbb
aad
movsl
rcr
pop
clc
xchg
push
and
lahf
pushf
or
stos
lds
mov
imul
jne
pop
or
fnop
cmp
mov
and
push
js
cmpsb
add
adc
and
cmp
nop
inc
pop
cmp
ret
and
or
inc
adc
enter
dec
dec
adc
scas
sahf
inc
cmpps
dec
xchg
in
addl
mov
gs
adc
movsb
inc
inc
xchg
insl
clc
jmp
out
scas
bswap
into
subb
or
pop
mov
fdivp
shl
js
jo
adc
jnp
lods
mov
add
loope
into
lock
mov
cmpsb
vmovddup
inc
mov
rolb
xchg
fwait
mov
inc
mov
and
cwtl
adc
mov
adc
mov
fdivs
mov
pop
jmp
std
or
sub
mov
ss
rcrb
cmp
push
sbb
mov
sbb
rolb
sub
outsb
cmp
arpl
sbb
or
sbb
or
add
add
enter
push
and
mov
add
movsb
inc
loop
leave
or
or
xor
xor
rorb
inc
dec
cmp
jmp
add
pop
enter
push
lods
and
popa
push
dec
jl
dec
clc
sbb
xchg
xchg
jb
and
inc
aaa
xchg
imul
jb
das
in
lahf
add
adc
fnstsw
mov
call
iret
pusha
in
mov
add
ret
rorb
xor
mov
sarb
pusha
das
mov
dec
sbb
out
mov
dec
or
and
icebp
sbb
cmp
out
or
xor
pop
imul
pop
or
dec
add
sub
sbb
push
add
add
inc
insl
cld
aam
push
xor
mov
sti
test
insb
or
sbb
movsb
inc
jae
ds
jo
into
inc
lods
push
add
mov
sahf
imul
fs
int3
out
subl
outsb
push
imul
rolb
pop
dec
test
add
sub
icebp
inc
es
mov
filds
fmull
sbbb
shlb
roll
inc
cmc
fs
mov
add
cmp
or
adc
xor
or
test
loope
mov
and
cmp
push
sub
rorl
mov
push
add
call
nop
pop
test
pop
cmp
test
clc
shlb
mov
addr16
mov
jne
push
jns
mov
or
mov
adc
add
enter
arpl
xchg
xchg
shlb
repnz
mov
pop
xchg
mov
sub
xchg
mov
lock
cmp
xchg
pop
fwait
and
or
cmp
loop
add
sub
push
lcall
test
push
inc
and
cli
inc
cmp
mov
lea
movsl
roll
fisubs
add
sbb
pusha
sbb
inc
mov
xor
or
xchg
rolb
push
pop
das
fildl
xor
imul
mov
repnz
push
xchg
es
sbb
into
push
mov
xorb
jb
push
andb
addr16
push
shlb
pop
push
pop
jp
movsb
sahf
movaps
jae
je
push
cmp
add
mov
aam
push
lret
ljmp
add
dec
lds
xchg
addr16
pop
sbb
pop
and
mov
pop
out
jmp
imul
mov
or
dec
lahf
iret
movsb
jne
and
adc
xor
mov
or
push
push
mov
popf
add
mov
test
add
imul
pusha
jno
aaa
hlt
pushf
mov
pop
adcb
mov
mov
mov
add
jb
push
je
in
adc
jmp
sub
ret
adc
shrl
les
or
or
stos
leave
loope
loope
jge
lods
jmp
mov
orb
leave
xchg
xor
pusha
movsl
sub
rcrb
add
push
cmp
add
dec
lea
sbbb
xchg
sub
scas
jl
push
adc
adc
push
pop
dec
cmp
mov
sbb
adc
mov
jne
call
lods
inc
es
in
adc
mov
nop
jno
lods
pop
sub
dec
lods
sub
cmc
dec
into
pop
imul
icebp
add
mov
orl
jecxz
bound
in
in
inc
cmp
clc
jg
and
lods
push
fmul
out
and
testb
and
pop
nop
shlb
inc
push
lret
dec
xor
fisubrl
jle
xchg
adc
xor
or
clc
cmp
xchg
pop
and
clc
xchg
sbb
daa
jmp
sbb
push
ja
push
sub
loope
push
rclb
fwait
enter
jo
add
mov
shr
push
daa
aam
mov
sub
or
push
push
add
jne
icebp
pusha
dec
leave
dec
adc
xlat
pop
nop
and
lahf
mov
loopne
cmpsb
cmc
push
inc
sbb
inc
add
pop
ret
dec
cmp
adc
jg
rcrb
adc
rcr
push
xchg
adc
icebp
loopne
outsl
mov
push
hlt
xchg
pop
lock
dec
loopne
xchg
push
shr
int3
ss
xchg
sti
xchg
cmpsb
lock
cmc
aam
aad
cmpsl
adc
adc
ljmp
in
mov
mov
outsb
xor
cmp
pop
rolb
ret
push
and
stos
ret
sbb
add
mov
xor
mov
adc
imul
faddl
mov
mov
mov
inc
rorb
xchg
jle
rcrl
jmp
pop
adc
jae
mov
adc
pop
int3
jb
nop
movsl
and
nop
fidivl
pop
mov
or
push
shrb
xor
pop
js
sub
sub
ret
leave
sbb
mov
loopne
xchg
ret
or
mov
mov
push
pop
adc
sub
inc
cld
adc
mov
mov
pop
das
adc
push
addl
pop
or
sub
addr16
sub
test
popa
push
adc
enter
mov
mov
adc
or
push
xchg
rcrb
mov
mov
mov
pop
sbb
xor
bound
pop
push
push
sub
pushf
es
xchg
and
movsb
lock
sbb
add
lods
std
sub
das
call
lret
sub
or
inc
addl
imul
mov
cmpsb
jp
jo
add
testb
or
add
fisttps
lods
pop
jns
hlt
lea
mov
xchg
pop
pop
xchg
pop
in
sahf
cmpsb
gs
add
xor
or
gs
xor
popa
rcrb
mov
pop
xchg
add
ret
shlb
roll
roll
pop
std
mov
pop
xor
orl
cs
rcrb
inc
lock
movsl
repnz
icebp
popa
out
in
mov
ljmp
jo
inc
or
push
adc
outsb
movsb
and
or
add
cmp
xor
sub
xor
addb
out
add
and
rcrl
cmp
add
ret
movsb
xor
lock
movsl
push
mov
pop
es
sub
and
add
divl
jge
test
xor
push
stos
nop
cmp
jb
fwait
cmpsb
mov
rorl
and
mov
enter
daa
dec
ret
orl
sbb
lea
dec
xchg
lret
cmp
in
or
ret
movsl
xchg
or
sbb
add
aam
adc
in
sub
pop
jno
ror
stos
or
mov
mov
inc
add
push
push
leave
int3
lret
ss
nop
enter
mov
sarb
in
fidivrs
xor
scas
or
inc
sbb
or
pop
dec
xor
fstl
imul
pop
or
and
sub
add
add
add
rol
jp
filds
push
jnp
sbb
push
inc
mov
mov
inc
pop
popa
pusha
les
ds
and
lods
xor
test
fabs
or
testb
rorb
sub
lods
pop
roll
fisubrl
sbb
pop
pop
test
sbb
cwtl
sbb
xor
lret
and
lods
push
scas
dec
xchg
sbb
ret
pop
sub
xchg
add
lret
jge
sub
cmp
in
cmp
jp
push
inc
and
lock
icebp
push
movsl
bound
out
pop
loop
lods
outsl
stos
iret
popa
cltd
lock
and
bound
or
sbb
sbb
add
negb
pushf
test
fwait
dec
stc
xor
pop
jmp
pop
lock
js
cmp
sub
lret
mov
sbb
into
inc
aam
jl
ret
mov
jns
shlb
mov
and
movsl
xchg
adc
sub
gs
jb
into
xchg
mov
sbb
pushf
dec
sbb
out
call
mov
pop
adc
mov
and
pop
js
movb
cltd
sbb
and
mov
mov
adc
dec
inc
cmpsl
mov
dec
ret
insb
fildl
ljmp
adc
rcrb
sbb
movsl
push
sbb
mov
mov
sbb
or
loop
into
mov
inc
or
mov
pop
ret
sub
pop
adc
leave
imul
jne
imul
mov
daa
test
je
lret
clc
mov
dec
jecxz
popa
je
mov
popa
sub
and
call
sbb
jo
push
movsb
pop
jo
or
arpl
stos
dec
call
inc
mov
xchg
mov
jno
je
icebp
ljmp
pop
or
sub
push
jl
mov
out
aam
or
or
push
loope
loopne
add
xchg
xchg
dec
add
fcompl
and
ret
or
and
push
inc
out
xchg
jo
inc
inc
stos
clc
shll
cmp
jmp
into
add
stos
add
and
xchg
adc
mov
pop
xor
loop
dec
sbb
inc
sub
jb
js
sub
lock
ret
and
xchg
test
imul
inc
in
sahf
cmp
mov
cmpsl
jge
data16
or
test
add
and
aad
xor
pop
mov
popa
sbb
fcmovnbe
cmp
and
je
addr16
sub
mov
dec
add
subb
mov
dec
xchg
dec
arpl
in
and
cli
jg
adc
cmpb
call
ror
adc
mov
call
in
jle
fs
add
mov
add
push
mov
call
rorb
pushf
aam
cmpsl
clc
sti
mov
xchg
loope
adc
xchg
shr
mov
adc
test
jne
negl
or
jae
adc
fcomip
std
enter
mov
adc
mov
das
lods
xlat
jge
jns
xchg
push
sti
mov
rorb
sbb
jne
mov
testb
sti
call
add
mov
aam
add
pop
cmp
push
push
inc
adc
inc
fcomip
fucom
add
jbe
push
jge
mov
mov
mov
push
mul
aas
dec
loop
sbbb
mov
std
divl
cmpl
sbb
pushl
adc
fsubr
cmp
lahf
mov
pop
dec
jne
shll
mov
lret
decl
cmp
loope
sbb
xchg
add
add
push
lcall
xchg
pop
cmp
int3
jne
cmp
aad
adc
sub
mov
mov
mov
mov
or
or
jno
aam
add
jb
mov
cmp
mov
sbb
inc
jae
pop
xor
adc
dec
sub
and
sbb
fistpl
pop
pop
pop
or
pop
pop
ret
add
int3
in
fs
outsb
dec
mov
divb
cmp
add
aam
push
mov
pop
lods
mov
pushl
cld
mov
rcrb
pop
lock
or
mov
sbb
cmp
or
pusha
or
sti
xor
push
mov
add
out
xchg
outsb
pop
lcall
mov
nop
test
pop
enter
cs
xchg
les
lea
dec
add
imulb
inc
cmp
cmp
jl
mov
das
xor
mov
jle,pn
cmp
inc
pop
push
xchg
pop
shr
cmp
cmp
and
sub
sbbb
cmpsl
jb
xchg
cmp
sbb
sahf
rcrl
lock
pop
jmp
rcll
loope
call
inc
push
or
jmp
inc
or
sbb
pop
leave
bound
aam
jge
pop
ret
cmp
push
push
je
lea
add
aaa
sarl
jae
cmp
jne
fisubs
or
cmp
lods
xor
pop
pop
ja
call
add
mov
cmp
jne
mov
inc
mov
adc
mov
pop
orl
je
inc
jmp
cmpb
or
jbe
inc
sbb
ja
push
push
add
jmp
fstpt
sbb
pop
push
mov
jp
decl
ret
mov
adc
xchg
push
add
call
int
scas
add
push
xchg
jg
xchg
scas
lods
xor
sbb
cmpb
je
ret
outsl
sti
fists
jae
call
xchg
and
cmp
pop
std
mov
pop
push
pop
push
pushl
icebp
int3
pop
les
std
mov
jne
pop
decl
sub
mov
je
orl
mov
outsb
sub
push
jnp
push
jb
push
cmp
inc
push
push
out
xor
clc
inc
sub
cmp
sahf
mov
adc
push
sub
push
push
push
aas
ja
mov
push
cld
add
and
mov
test
test
inc
or
dec
xchg
jl
mov
imul
adc
mov
cmp
push
mov
jmp
sbb
mov
dec
andl
jne
jge
movl
imul
cld
cli
aaa
clc
sub
add
mov
inc
ss
mov
inc
cmp
mov
scas
jl
test
je
shl
orb
mov
test
loopne
adc
aad
into
xchg
outsl
jae
sbb
add
cmp
inc
cmp
or
xorl
mov
inc
lret
mov
and
adc
jne
jne
dec
bound
decw
sbb
pushf
add
stc
pop
xlat
mov
clc
add
jns
push
adc
add
mov
scas
or
add
inc
jmp
and
push
rol
add
cmp
or
fstl
or
cmp
jmp
or
mov
sbb
shlb
sbb
xchg
ret
shr
mov
xorb
and
push
inc
adc
push
pop
inc
bound
jne
add
cmpl
mov
ds
push
mov
fs
aas
aaa
paddb
or
inc
call
out
ss
mov
andl
mov
loop
adc
pop
negb
xchg
mov
mov
push
jbe
fs
rorb
testb
jnp
lcall
jmp
dec
ret
mov
mov
mov
sti
cs
mov
flds
or
dec
ret
pusha
cli
cmp
out
inc
inc
adc
jne
or
repnz
cmp
sbb
add
shrl
mov
xor
xlat
push
jmp
xor
sub
je
cmp
andb
or
inc
sbb
sbb
daa
pop
mov
push
cmpl
and
add
or
dec
arpl
mov
je
inc
cmp
sti
or
andl
inc
aam
popf
push
notb
or
mov
movmskps
jnp
je
pop
pop
pop
scas
pop
clc
enter
in
dec
mov
sahf
or
jns
push
cmp
mov
lea
push
fiadds
andl
out
sub
dec
imulb
sub
inc
shr
mov
add
push
and
jae
fcomps
cmp
mov
mov
mov
movsb
mov
loopne
push
lock
in
or
or
fcoms
add
pusha
or
inc
repz
inc
mov
roll
jl
jmp
mov
ret
ret
and
loopne
mov
loop
mov
test
xor
or
push
dec
stos
or
push
push
inc
and
shll
adc
dec
rolb
enter
jle
mov
mov
mov
idivl
xchg
ja
push
inc
fildl
xor
jne
test
sbb
rorl
pop
nop
push
pop
jmp
ret
dec
neg
sbb
xchg
lret
clc
clc
cmp
push
sub
loope
and
sub
cld
jmp
pusha
popf
xor
adc
jmp
or
lahf
loopne
xchg
xchg
test
pop
add
mov
lods
and
inc
xchg
fdiv
jo
cld
mov
add
insb
sub
xor
pop
sbb
mov
in
lcall
pusha
inc
push
jae
cmpsb
pop
pop
ret
sub
mov
add
add
aam
push
pusha
push
or
dec
int3
push
psubq
enter
les
mov
fldenv
adc
aam
mov
mov
outsb
rcr
ficomps
push
cmp
ss
rclb
mov
mov
push
movnti
cs
push
adc
test
pop
jge
push
lock
setnp
in
stos
dec
sti
add
push
out
je
mov
and
pop
test
mov
and
push
push
xorl
sbb
xor
sbb
jo
push
sbb
je
mov
fcoml
jbe
mov
dec
or
jl
ja
mov
out
adc
pop
mov
jle
lcall
pushf
fdivl
popl
mov
cmp
fs
mov
mov
stos
jne
push
or
push
or
push
or
or
jne
push
mov
adc
fistps
add
add
imul
ret
test
stos
dec
push
inc
xor
pop
inc
xor
jnp
cmc
add
push
popa
pop
or
testl
inc
andb
ss
out
jl
jae
or
loopne
or
bound
lea
push
sbb
mov
or
js
dec
push
xlat
jl
loopne
push
data16
push
sbb
or
mov
xor
or
or
mov
jmp
test
sbb
jmp
mov
push
jg
sub
sti
mov
je
mov
push
push
sbb
mov
sar
or
mov
data16
add
stc
xor
int3
fcomps
mov
shlb
sub
stos
cmpl
leave
mov
je
or
outsb
adc
mov
jl
jp
out
cmp
orl
pushf
call
loopne
and
push
cli
push
push
icebp
testl
push
aad
pusha
adc
sbb
in
pop
pop
and
out
push
lea
lret
sub
add
bound
clc
sbb
xlat
or
clc
and
cs
insb
mov
enter
inc
and
into
cmpsb
jge
fdivrl
shlb
mov
sbb
adc
sub
push
dec
cwtl
cmpsl
jo
lods
xchg
xlat
mov
pop
jmp
es
out
adc
mov
xor
push
addr16
xor
sti
jl
lret
jmp
jmp
in
call
paddusb
xchg
cmp
lods
movsl
imul
add
cmp
shr
xor
jne
push
push
fst
cld
pop
scas
clc
pop
test
adc
daa
sub
pop
cmpl
or
fldl
mov
ds
or
test
outsb
jg
pop
and
test
sar
sub
sub
ja
pop
movzbl
ret
test
xorb
mov
push
movzwl
mov
add
jns
push
ds
mov
push
and
pop
mov
sarb
mov
pop
cld
sbb
mov
sub
test
repz
pop
je
push
xor
mov
je
sbb
int3
xor
pusha
stos
call
negb
mov
cmp
ret
inc
andl
shr
mov
call
lods
fildll
scas
cmpb
mov
dec
out
mov
test
sbb
pop
outsb
test
insb
xchg
add
andl
lahf
lea
mov
js
lods
add
lea
dec
je
outsl
icebp
sub
push
add
add
cmp
ja
sub
outsl
fucomp
cld
mov
popl
jbe
inc
inc
cmpb
scas
data16
aam
or
cmp
add
rol
scas
jo
fdivl
dec
mov
loopne
mov
pop
pop
fisttps
cmpb
inc
lret
mov
add
or
sub
push
jno
fsubl
and
push
mov
divb
add
push
loope
inc
cld
inc
xlat
sub
xorl
mov
sbbl
cwtl
jne
push
inc
sarb
mov
clc
movsl
mov
mov
sub
adc
je
jae
pop
jle
je
dec
je
movsb
mov
movsl
repnz
adc
or
push
jecxz
pop
mov
jl
aas
or
loopne
mov
or
add
push
in
push
push
inc
inc
in
rcll
cmp
cmpsl
push
jg
mov
xchg
mov
jb
mov
adc
test
and
push
repz
mov
cmp
ja
lea
sarl
jmp
loope
rep
inc
inc
mov
repz
pop
pop
push
in
cli
call
sbb
or
or
mov
leave
in
mov
push
lods
cltd
loope
nop
ds
icebp
out
push
xor
pop
xchg
lea
test
je
outsb
aas
mov
xchg
add
jmp
xor
je
push
movsb
push
inc
and
lock
mov
mov
mov
jb
pop
fs
and
push
mov
cmp
fcomp
jbe
ja
popf
cmp
and
loopne
xchg
mov
jo
adc
test
pop
xchg
sbb
jmp
lahf
test
mov
je
sbb
xor
pushf
scas
movsb
ss
pop
push
lods
sbb
je
int3
add
pop
clc
scas
mov
and
mov
push
test
inc
xchg
cmp
jne
mov
mov
mov
pushl
out
das
clc
add
fiaddl
xorl
rorb
sbb
les
aaa
mov
aas
lods
add
int
mov
jmp
std
jmp
push
xlat
in
xor
sbb
les
mov
inc
add
mov
shll
xlat
loope
xor
fsub
mov
ret
pmullw
jo
addr16
inc
sub
adc
inc
rcl
lods
fistpl
sub
mov
lock
stos
into
push
add
loopne
and
cli
mov
cmpsl
lret
xchg
fisubs
cltd
add
mov
pop
lock
and
sti
test
mov
and
mov
in
push
je
jno
mov
push
sbb
out
sti
adc
sbb
std
int3
adc
jo
nop
inc
icebp
out
fs
xor
inc
inc
push
imul
pop
jne
cld
std
int3
push
stos
jne
mov
mov
jmp
rorl
mov
cmpb
sbb
cld
int
pop
and
cmp
sub
movsl
jmp
jg
or
add
add
or
jae
xchg
in
test
xor
lods
nop
or
insb
imul
nop
and
mov
mov
pop
mov
or
lods
xchg
adc
shlb
fmuls
push
dec
add
add
movsb
cmpsb
lahf
inc
inc
inc
jg
jns
mov
cld
push
hlt
push
in
stc
jg
out
int3
mov
mov
out
sahf
out
call
out
sahf
lock
hlt
clc
clc
cld
pop
adc
jne
scas
iret
pusha
sbb
sti
clc
adc
loope
xor
ljmp
mov
cmp
repz
popa
xor
sbb
xchg
fdivl
lea
jl
cld
jmp
std
cld
out
mov
xchg
xchg
mov
stc
sub
inc
mov
push
enter
adc
add
fiadds
dec
mov
lods
mov
cmpsb
and
xchg
aas
inc
out
add
add
pop
mov
dec
push
shlb
ss
add
mov
jnp
sub
mov
fs
insb
je
iret
repz
test
pop
cs
sbb
adc
cmp
repz
adc
inc
repnz
or
add
js
negl
or
push
enter
xor
popa
mov
mov
icebp
pop
pop
daa
lret
push
scas
subl
or
xor
mov
or
aad
ljmp
ja
jp
ja
push
ja
dec
push
jne
test
jmp
and
pop
or
push
std
sub
test
sub
jno
lock
jmp
push
jnp
jmp
xchg
inc
add
lock
inc
pop
call
adc
mov
xor
xchg
mov
push
aam
rcrb
push
or
mov
jb
daa
in
add
jmp
rcl
and
lock
or
add
adc
fdivl
pop
fdivrp
push
shr
call
jp
imul
jge
xor
add
pop
xchg
or
idivb
add
clc
jne
sarl
pop
push
loopne
imul
iret
jbe
xchg
cmp
or
adc
adc
or
jae
mov
pop
shr
lea
not
and
decb
push
ljmp
icebp
jbe
shl
pop
inc
mov
lods
mov
mov
sar
jl
add
add
sbb
sbb
lea
mov
loop
aas
testb
andl
jne
cmovl
and
push
clc
dec
pop
cmp
dec
jbe
xor
lret
sti
cmpb
insb
inc
cli
jbe
cli
jle
imul
in
or
mov
in
and
pop
inc
shll
movsl
jle
lcall
add
and
xlat
add
push
or
dec
fmulp
mov
mov
lea
subl
pop
sbb
or
fistps
dec
dec
arpl
and
mov
jae
in
jnp
in
cmpb
push
mov
jmp
or
sbb
inc
bound
sbb
sub
lea
xor
or
popf
dec
pop
add
cmp
incb
mov
mov
jns
psrlq
mov
cwtl
ficompl
or
rcr
rclb
dec
or
sbbb
lock
pop
les
cmp
push
or
jbe
jnp
jae
adc
push
decb
lock
adc
inc
andl
and
ss
jne
push
pushl
mov
adc
mov
jmp
fildl
push
stos
sarl
dec
dec
adc
push
lea
push
push
rorl
decl
push
sti
rolb
mov
mov
push
ss
xor
fwait
push
int
rclb
cmp
jno
fsubr
pop
aaa
dec
pop
in
lock
aam
push
out
sbb
or
decl
dec
insb
xor
shr
test
xchg
mov
hlt
mov
mov
cmp
push
and
or
jne
add
cmp
xor
push
jne
mov
cmp
dec
adc
add
pop
dec
jae
cmpl
push
stc
scas
push
in
es
aaa
pop
out
push
sub
xorb
negb
sub
mov
mov
mov
cmp
mov
scas
xchg
shr
and
and
pusha
mov
xchg
add
and
shll
push
mov
js
inc
or
mov
jne
mov
cmpsl
pushf
cmp
xlat
je
sub
sub
mov
mov
in
dec
scas
into
jne
int
and
pop
test
jl
shl
inc
jmp
mov
stc
xchg
sub
rcll
scas
icebp
test
add
cmp
jle
pop
cmp
cmpsb
dec
aaa
pop
or
jge
and
stos
lcall
in
and
shr
negl
mov
decb
jne
stos
push
and
hlt
and
jmp
das
push
sub
vpcmpeqd
and
push
insb
xor
stos
jnp
or
jp
clc
dec
outsb
addb
ljmp
push
jl
test
inc
dec
rcrl
fs
decb
lret
aad
sub
and
push
mov
sbb
cmp
ljmp
or
jnp
fiadds
add
mov
or
mov
je
or
lcall
jl
add
in
and
push
inc
lea
jne,pt
cmp
jne
xchg
cmp
jmp
and
adc
test
add
cmp
jne
stos
aas
je
mov
xchg
push
das
ret
mov
adc
cmpsl
mov
cmpl
or
popa
push
adc
push
xchg
lock
sub
cmpsb
cmp
xor
jbe
leave
subl
movsb
add
jge
jle
incl
pusha
or
push
aas
add
rorl
xor
mov
jbe
ret
outsb
imul
loope
divb
add
rol
sub
or
out
add
push
imul
add
ficoml
cli
ja
lea
dec
in
mov
psubsb
inc
cld
lock
fstl
insb
sbb
decl
add
sub
sub
dec
pop
pusha
jbe
idivb
or
clc
clc
add
mov
mov
adc
dec
or
push
inc
fs
inc
test
mov
mov
push
test
hlt
pop
add
dec
add
js
mov
lock
shr
cld
push
lret
xor
lea
xchg
xchg
shlb
inc
xlat
mov
ret
inc
je
jmp
jmp
and
inc
cld
push
sub
mov
dec
mov
shlb
imul
idivb
push
and
and
cmp
pop
out
roll
add
cld
cmc
inc
cld
jp
push
mov
ljmp
adc
lcall
outsl
jmp
mov
inc
mov
inc
dec
je
std
into
into
sbb
sub
jne
pop
cmp
jecxz
je
add
adcl
push
pop
pop
pop
ret
mov
adc
jbe
in
popf
mov
je
insb
xor
pop
mov
push
jno
scas
mov
xor
lret
dec
shrl
or
jb
sbb
iret
xor
and
add
jbe
adc
or
and
pusha
jne
inc
mov
lret
add
movsb
inc
sbb
icebp
lahf
adc
pop
jo
inc
push
push
push
pop
push
popa
dec
or
stos
cmp
stc
mov
mov
cmp
sub
inc
jmp
inc
cmp
lods
dec
and
inc
jge
int
add
jge
jle
pushl
adc
or
call
cltd
jo
nop
mov
enter
add
aas
scas
cmpsl
push
mov
cli
inc
imul
scas
rorl
and
testl
popf
loopne
inc
loopne
mov
test
in
in
adc
or
test
add
pushf
int3
mov
mov
sbb
stos
jmp
loopne
jnp
iret
or
dec
and
push
cwtl
jbe
pop
fadd
inc
scas
call
sub
dec
mov
lock
cmp
je
testb
je
or
lock
cmp
mov
mov
nop
movsb
popl
gs
stos
dec
dec
or
dec
dec
rcrl
fmull
pop
cmpsb
and
push
add
in
je
push
data16
insb
or
sbb
and
loopne
andb
inc
jle
jno
test
add
lcall
rclb
lcall
fmuls
and
cmpsb
mov
jne
sub
ret
push
imul
lea
push
mov
push
pop
push
dec
mov
scas
or
mov
ret
jge
into
push
add
xchg
sbb
mov
add
addr16
and
lock
pop
sbb
push
xor
push
pop
push
jb
loopne,pt
je
lret
inc
ljmp
or
lock
push
jmp
imul
xchg
notb
mov
loopne
mov
pop
cmp
add
jmp
ljmp
paddusb
ds
jl
pop
orl
cmp
dec
or
stos
lods
je
cmp
mov
jb
neg
clc
je
fldl
mov
rol
rorl
lret
je
rep
push
pop
cmp
je
inc
dec
adc
in
xchg
jp
jg
fsubr
in
out
cltd
lock
nop
or
adc
jns
sub
jg
pop
and
jg
iret
repz
push
mov
push
iret
repz
xchg
mov
daa
cmp
lcall
sub
fwait
adc
jo
xchg
js
jo
mov
jnp
mov
test
jg
jns
jb
jo
jo
out
mov
or
push
sub
cmp
sahf
out
inc
dec
push
addr16
jae
add
or
ljmp
mov
cmpsl
cld
jbe
sub
pop
sub
jae
xchg
fsubrs
mov
jl
add
jb
enter
in
mov
mov
hlt
lock
xchg
lret
in
in
or
add
fadds
add
rcrb
jae
jb
and
ljmp
imul
outsl
jb
or
xchg
push
dec
dec
push
push
and
sbb
inc
fstpt
std
add
inc
and
push
xor
cmp
sub
jle
popa
bound
and
imul
fucomip
lret
dec
aaa
outsb
outsl
je
or
push
jg
jo
arpl
imulb
imul
pop
and
outsl
ss
data16
jb
jbe
jb
jne
mov
add
arpl
insb
push
mov
inc
pop
push
gs
das
mov
shll
mov
out
fidivl
gs
jae
push
fs
rcr
sub
dec
arpl
lock
fdecstp
insl
jne
je
push
outsl
arpl
outsb
sub
popa
divb
inc
inc
jb
add
les
mulb
popa
insl
inc
xchg
insl
insb
pop
fadd
inc
in
xor
lahf
and
jo
pusha
pop
push
cmp
fucomp
jle
jb
jne
jae
push
xor
push
lock
outsl
or
xchg
and
dec
pop
rolb
jb
sub
jae
inc
sub
and
sbb
sti
dec
imul
pop
sub
jne
and
push
test
and
add
rorb
fldt
outsb
ds
gs
popa
fs
shr
clc
add
gs
pop
jne
daa
pop
push
sub
call
pop
fs
push
gs
popa
addr16
outsl
js
add
dec
out
shl
js
xor
fs
jg
jle
sub
jnp
pop
xchg
xor
ss
cwtl
mov
mov
inc
push
add
out
das
xor
add
bound
ds
and
stc
add
rorb
iret
and
xchg
lea
jb
and
leave
and
xchg
dec
sbbl
cmp
and
mov
mov
mov
jb
or
cwtl
adc
xchg
and
adc
adc
sbb
jb
mov
js
push
js
and
inc
jns
jp
cld
mov
decl
mov
mov
add
mov
cmp
inc
adc
xchg
outsl
jg
les
jns
and
cmpsb
fisttps
mov
and
jle
test
rcll
mov
cmovo
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
sti
sub
neg
pop
fidivrl
xor
fcomp
loopne
jb
push
jno
xor
add
jp
jb
rcrl
add
and
inc
repnz
dec
add
test
sbbl
add
add
xchg
xchg
pop
push
adc
add
xchg
and
mov
dec
gs
jo
mov
outsl
arpl
dec
outsl
fs
gs
popa
outsb
fs
inc
and
popa
data16
outsb
outsw
outsl
mov
insl
insl
ds
imul
sub
aad
jle
inc
lods
out
or
arpl
fcmove
mov
mov
and
jb
outsb
dec
test
in
jnp
outsb
push
jo
mov
test
inc
imul
mull
popa
insl
xlat
inc
jbe
inc
add
sbb
xor
jge
push
push
imul
dec
pusha
test
jns
mov
sub
xchg
pop
lock
jbe
rcr
fs
or
gs
push
out
filds
push
insb
jae
push
popa
insb
jne
sbb
or
jo
pop
jne
inc
bound
scas
lods
cmpsb
flds
xor
popa
insb
js
or
je
je
imul
dec
mov
ret
xchg
adc
xor
cmpsb
mov
arpl
stos
sub
lods
sbb
mov
jg
pop
fists
inc
dec
adc
mov
push
gs
pop
outsl
xchg
mov
fs
dec
mov
mov
inc
add
sub
jnp
fwait
roll
pop
sub
and
sbb
arpl
ljmp
sbb
sub
xchg
inc
inc
xchg
cmpsl
clc
roll
insb
and
pop
inc
fcmove
push
push
cmp
xor
jge
sub
push
js
dec
xchg
rolb
arpl
arpl
mov
add
add
xlat
cmp
push
xor
int3
and
lock
outsl
outsl
je
cmp
sbb
push
dec
mov
mov
mov
sbb
imul
mul
fidivl
stos
insl
sbb
push
jo
jb
jg
aad
inc
jae
outsb
arpl
jns
inc
add
movsb
push
mov
incl
add
lock
xor
inc
sbb
inc
fdivp
adc
push
loopne
lock
fistpll
jle
add
ret
lock
aas
xchg
add
lock
idiv
outsl
incl
lock
add
add
mov
lock
add
in
mov
shl
not
cmp
mov
fimull
mov
std
cmp
rclb
add
lock
lock
fstpt
jp
mov
lock
cmp
test
mov
adc
jle
sti
rol
jl
aas
xchg
mov
lock
add
mov
pop
pop
dec
dec
cmpsb
lock
cwtl
iret
lock
into
push
xor
sbb
dec
mov
dec
lock
ja
lock
cld
add
js
mov
mov
jg
fdivrs
jg
int3
add
icebp
pop
lock
lock
mov
adc
push
mov
cmp
adc
lock
push
repnz
adc
jbe
testl
cli
add
jbe,pt
mov
imulb
cmpb
mov
add
incb
enter
xchg
add
orb
mov
add
lock
add
mov
and
mov
xchg
test
shll
jl
dec
add
in
or
loope
jb
adc
out
pushf
or
outsb
adc
lock
sub
lock
inc
int
push
push
jns
push
cmp
dec
fnstcw
outsl
sbb
sub
rclb
cld
fistpll
ja
adc
lock
add
add
mov
icebp
push
mov
cmp
je
fisttpll
stos
lock
out
mov
mov
lds
inc
cmp
add
add
out
xchg
lock
lahf
dec
cmp
lea
add
cmp
jb
test
fdivl
in
or
bound
inc
lock
popa
loopne
mov
push
out
insb
push
inc
jp
xor
nop
push
add
cltd
add
adcl
aaa
adc
pop
cmp
pop
add
cmp
push
inc
mov
dec
jnp
jno
add
inc
inc
push
js
addr16
jno
sbb
push
or
mov
sbb
xor
jle
jecxz
js
add
inc
lret
xor
add
js
fimuls
enter
ljmp
data16
inc
das
add
dec
pop
cmp
aas
xor
jns
enter
add
jl
js
lock
sti
out
std
loop
mov
mov
fs
push
xor
inc
ret
inc
cmp
cld
dec
int
cmpb
lock
cli
xor
dec
cmp
sub
iret
je
inc
dec
dec
sbbl
mov
jmp
lock
xor
xchg
push
fcomp
fcmovnbe
cs
jns,pt
and
adc
add
add
std
iret
jg
xchg
mov
add
lock
xchg
dec
pushf
xor
jbe
fwait
insb
hlt
sbb
movsl
add
in
and
pop
mov
cmp
aaa
add
nop
push
push
mov
fadds
sbb
hlt
sarl
pop
lea
xor
lock
pop
sti
inc
jae
cltd
nop
sbb
mov
fisttpll
push
cmpsl
jle
call
lock
mov
fnsave
adc
dec
xchg
inc
mov
lock
mov
and
dec
scas
or
add
mov
addb
inc
push
or
xor
lock
jb
xor
adc
push
add
add
lahf
out
test
in
dec
adc
sti
sbb
aas
cmp
sbb
add
ds
sbb
push
lcall
cmp
fcmovu
cmpsb
aam
pushf
push
push
push
xor
mov
xor
inc
cltd
inc
jno
mov
test
mov
add
push
ficomps
cmpsb
or
sbb
add
cmp
xor
push
pop
mov
stos
dec
jns
and
out
xchg
mov
les
cs
mov
jbe
out
fsubrs
push
test
inc
or
push
std
xlat
pandn
jae
jg
inc
lock
test
fstpt
out
mov
push
xchg
mov
loopne
fnstenv
cld
sar
add
leave
jl
out
aas
dec
mov
fistps
push
add
lock
fcoms
out
lds
and
inc
add
orb
fdivrp
sbb
je
shlb
or
mov
push
les
xchg
jae
jle
filds
xchg
int
mov
adc
fnstenv
dec
inc
adc
add
push
push
mov
add
and
ds
push
lods
fsubs
cmp
sbb
mov
insb
out
xor
dec
fs
xor
mov
js
mov
pop
subl
ss
icebp
lcall
je
cmp
cmpb
xor
inc
add
inc
adc
mov
clc
pop
add
inc
sbb
ret
adcb
scas
fs
pop
mov
or
dec
loope
mov
aas
ret
jle
cld
fs
arpl
nop
lret
scas
dec
stos
jmp
mov
mov
mov
sub
mov
fadds
in
jb
test
jg
xchg
adc
sbb
xor
xor
or
fwait
in
sbb
or
adc
pop
or
or
push
push
incl
test
cmovl
xor
inc
or
adc
or
dec
inc
jecxz
xor
aas
push
adc
push
and
pop
adc
and
push
xor
adc
push
sbb
loop
xchg
jb
pop
sbb
adc
pop
inc
imul
es
fcoml
daa
cmovb
or
adc
adc
sub
jmp
adc
sbb
or
adc
and
and
adc
pop
adc
fwait
mov
push
inc
xor
sbb
outsl
sbb
lock
lock
adc
or
push
movups
mov
cmp
ret
sbb
into
incb
sub
sbb
add
dec
push
or
sbb
adc
sbb
push
or
or
loop
lock
add
push
sbb
adc
or
mov
or
inc
cmpsb
add
adc
push
push
xor
or
cwtl
adc
fistpl
in
bound
mov
sbb
jg
loopne
pop
jo
or
push
sbb
xor
js
adc
insb
sbb
pop
lods
adc
push
adc
sarl
and
xchg
add
pushf
add
cmp
sar
imul
add
lods
or
fmuls
add
adc
lock
add
lahf
cld
incl
push
inc
add
dec
add
dec
add
add
mov
dec
dec
push
push
mov
mov
sahf
ja
mov
mov
add
cmp
inc
aas
out
cmpsb
lcall
inc
adcl
movlps
stc
out
xchg
fs
add
add
nop
or
loopne
add
sbb
adc
pusha
je
fdivs
scas
insb
popf
sahf
add
jbe
jo
and
jb,pn
cmpsb
imul
or
mov
sahf
inc
cs
dec
cld
or
push
sar
repnz
shrb
jae
arpl
jecxz
cmp
rcrb
jns
addr16
dec
push
loopne
mov
inc
add
fdivl
and
adc
cld
add
xchg
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
