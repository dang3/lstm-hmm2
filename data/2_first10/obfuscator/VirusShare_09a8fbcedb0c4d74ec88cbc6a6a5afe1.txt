repz
shll
and
jecxz
xor
sub
adc
and
push
jge
movb
and
and
inc
sbb
add
sbb
test
fldenv
std
daa
mov
bnd
adc
shll
andl
mov
andl
and
mov
pusha
dec
add
xor
sbb
test
lahf
pop
shll
add
and
add
subl
orl
adc
test
nop
fwait
or
adc
push
lods
aas
xor
inc
mov
sti
addr16
sbb
xor
in
or
sbb
fdivrs
jae
lret
xor
push
push
ja
adc
mov
daa
jecxz
nop
mov
xor
gs
popf
xor
test
push
cmp
popf
mulb
cwtl
roll
sub
cmp
jns
mov
test
scas
or
dec
scas
or
mov
pop
nop
enter
sbb
add
iret
test
adc
cmpl
add
xor
jl
xor
xor
xor
loop
pop
mov
mov
xor
pop
insl
sti
lock
xor
push
pop
orl
pop
mov
enter
movb
sub
cmp
mov
inc
xchg
xor
inc
aas
xor
aam
dec
pusha
jb
fnsave
std
mov
pop
stos
push
push
bound
in
lret
adcb
out
jg
popa
xor
loopne
xchg
enter
and
dec
dec
jno
mov
add
pop
outsl
sub
inc
or
mov
pop
pop
sbb
cmp
sbb
stc
mov
mov
and
jno
jne
push
jne
xchg
inc
inc
or
paddb
push
or
xor
inc
jmp
roll
sbb
dec
imul
shrb
adc
inc
dec
jno
and
inc
aaa
lahf
sub
imul
add
push
xor
pop
shrb
adc
insb
add
inc
stos
xor
and
sbb
mov
push
test
fiaddl
mov
shr
lods
sbb
lret
lea
imul
sbb
leave
fstl
cmp
lahf
and
mov
arpl
mov
mov
aad
fcmovb
cltd
xchg
add
add
mov
enter
add
mov
sbb
or
jne
adcl
rorl
sbb
mov
jmp
and
lock
xchg
daa
adc
cltd
adc
push
or
sbb
or
test
mov
out
push
arpl
or
shr
push
xchg
mov
xchg
psubsw
lahf
or
pop
cmc
inc
xor
jns
stc
mov
imul
insl
or
add
pop
jmp
sub
bound
or
jp
dec
push
rolb
xor
test
inc
ja
jae
push
stc
and
push
jne
xchg
aas
addl
cli
gs
dec
mov
inc
push
add
and
adc
add
pop
nop
inc
pop
sub
pop
push
xchg
dec
dec
and
test
mov
add
dec
sub
arpl
enter
push
setns
push
and
push
pop
shll
sub
test
ds
mov
pop
mov
daa
add
mov
fisubl
aad
mov
xchg
jmp
xor
cmp
and
add
add
inc
mov
jg
mov
mov
popa
je
adc
adc
xchg
mov
in
in
sti
loopne
mov
jecxz
int
sub
addl
pop
inc
ja
sub
ss
addr16
jmp
mov
inc
or
sub
xchg
adc
test
mov
dec
and
fiadds
or
sbb
and
sti
es
sbb
push
faddl
or
sbb
in
jo
xor
sarb
fwait
popf
mov
jae
cmpsl
mov
inc
mov
mov
or
push
cmp
dec
ja
adc
xorb
fwait
and
sbbl
cmp
subl
jne
les
loope
sbb
inc
rorl
popl
leave
jns
fwait
adc
in
out
movl
pop
xor
cmp
cmp
popf
popa
cmpsb
push
xorl
inc
push
fbstp
add
mov
mov
mov
iret
and
xchg
or
nop
and
adcb
adc
or
add
mov
cmp
iret
roll
pop
sbb
test
or
cwtl
xlat
push
fs
and
addr16
xchg
testb
rclb
jmp
lret
and
movsb
mov
add
shl
dec
adc
je
shlb
test
and
cmp
movsl
inc
enter
enter
es
cmpsl
arpl
sub
insl
fwait
mov
mov
cmpl
insl
loopne
scas
jne
lahf
int3
push
pop
mov
jne
mov
es
add
addr16
gs
mov
mov
cld
adc
test
jle
and
adc
icebp
jo
add
mov
xor
sub
arpl
and
push
mov
and
ret
inc
and
dec
and
inc
xorl
in
mov
loop
adc
sub
hlt
dec
mov
and
fiadds
adc
movsl
aam
cmp
mov
inc
push
mov
lret
xchg
push
push
cltd
clc
fcomip
xchg
or
mov
or
mov
dec
scas
mulb
push
fwait
xchg
ljmp
push
adcb
imul
cmpsb
adc
addr16
shlb
inc
or
dec
fiaddl
btr
jl
dec
push
sub
add
subb
mov
mov
pop
lret
in
jnp
es
outsl
test
push
sub
bound
jo
adc
sbb
pop
orl
and
call
lds
and
pop
cmp
push
inc
in
jo
pop
dec
and
cld
sbb
sub
sub
xor
fs
add
rcll
dec
fcmovu
mov
or
mov
pop
or
lods
pop
add
mov
or
xchg
btr
or
inc
mov
addb
cmpsl
inc
mov
adc
test
sbb
out
jae
fists
push
test
dec
lds
mov
cmp
incl
and
outsb
push
sub
push
lods
sahf
push
mov
pop
dec
sbb
cmp
pop
and
into
mov
and
in
mov
subb
into
push
in
in
xor
insl
nop
ret
fwait
push
call
add
push
push
call
roll
arpl
xor
pop
sub
mov
add
js
addr16
addr16
cmp
rcll
or
les
mov
sbb
outsb
dec
das
mov
sbb
shrb
out
mov
aas
pusha
mov
fwait
xchg
sub
scas
shlb
dec
adc
push
icebp
sub
pop
icebp
jae
aad
movsl
rcll
mov
ret
add
xor
lret
adc
lret
lods
or
rcrb
daa
mov
shrl
pop
pop
push
repnz
push
pop
cmp
leave
leave
sbbl
sahf
mov
add
mull
jnp
inc
stc
pop
mov
push
repnz
enter
adc
bnd
nop
daa
inc
fwait
lret
pusha
mov
jae
ljmp
mov
xor
cmpsl
mov
and
sbb
inc
insb
inc
pop
and
xor
push
sbb
add
cltd
leave
add
pop
leave
test
add
pop
adc
mov
lea
stos
or
and
push
into
add
xchg
mov
push
inc
jne
inc
sbb
jge
xor
sahf
mov
xchg
or
dec
or
mov
inc
inc
add
outsb
mov
dec
mov
add
scas
xor
mov
ss
popa
or
fmul
adc
shll
or
in
stos
pushf
adc
jge
aaa
xorl
dec
and
adc
stos
fldt
incl
or
stc
xlat
pop
lcall
push
scas
clc
lods
test
xchg
insb
cwtl
and
add
xor
cltd
fwait
dec
mov
clc
loop
mov
ret
add
jnp
and
inc
dec
mov
sarl
clc
data16
inc
adc
divl
mov
hlt
addl
pushf
or
movb
jbe
xchg
xor
push
mov
inc
ret
iret
cmovo
es
mov
inc
mov
movsb
and
repz
in
mov
mov
and
pop
jnp
inc
pop
push
adc
cmc
imul
mov
pop
add
jl
xor
sbb
jbe
cmp
mov
mov
pop
jmp
adc
sub
xchg
xchg
cmp
xor
inc
mov
jle
cmpl
je
jecxz
hlt
jmp
inc
add
mov
xchg
push
and
inc
jge
sub
jo
test
movb
rcl
inc
xchg
pop
inc
xor
push
jbe
push
mov
mov
jmp
jmp
mov
push
dec
movsl
iret
xchg
lret
shrb
xor
lret
test
pop
mov
mov
sbb
mov
out
ret
inc
adc
jecxz
ljmp
test
jo
subb
jns
and
sarl
xchg
or
adc
mov
cmp
mov
push
fs
call
sub
inc
ja
xchg
jo
sub
inc
rcrb
mov
cmc
cmp
mov
sbb
mov
add
add
cmpsb
mov
mov
or
loopne
add
and
cmp
mov
fistps
rol
outsl
les
dec
sub
pop
imul
movsb
or
push
mov
add
sub
inc
or
scas
fiadds
adc
leave
test
jne
dec
lods
imul
out
pop
leave
stos
jne
stos
cmp
dec
cwtl
xchg
push
ds
cmp
dec
jbe
pop
mov
call
imul
ret
push
inc
sbb
nop
shll
cmovbe
jb
inc
pushf
fstl
sub
shlb
in
inc
pop
adc
loope
push
es
or
arpl
and
sub
sahf
jae
insl
loopne
pop
pop
loope
add
stc
add
inc
or
inc
xchg
test
jnp
ret
lods
xor
pusha
gs
daa
push
inc
stc
mov
mov
xor
inc
clc
test
or
jno
stos
sub
cmpsb
aas
loope
add
xor
pop
push
sbb
pusha
hlt
or
dec
inc
adc
and
mov
rorb
fsts
daa
pop
test
adc
into
icebp
cmpsb
mov
dec
mov
adc
aad
pop
ljmp
inc
inc
popf
aaa
arpl
pop
cltd
aaa
xchg
adc
movsl
leave
sub
push
ss
mov
xor
nop
push
lret
movsb
mov
insb
dec
jmp
jmp
jge
les
aad
sub
in
sbb
inc
xlat
mov
push
mov
adc
push
and
subl
cmp
push
sbb
loope
fnsave
daa
outsl
cmpsb
cltd
dec
and
mov
mov
incb
jg
and
add
jg
cli
jmp
mov
cltd
int3
xor
adc
inc
mov
mov
std
int
add
lret
xor
jle
aam
and
pop
sahf
add
icebp
push
push
cmpl
loopne
rcr
and
std
ja
ja
inc
insl
push
fildl
xor
pop
sahf
rorl
adc
movsb
jns
leave
test
fisubs
add
pop
add
inc
xchg
rclb
dec
adc
xchg
lods
cs
andl
outsb
pop
pop
sbb
inc
int
dec
xchg
sbb
jecxz
mov
xchg
das
mov
and
push
lods
fiaddl
lea
popf
push
xchg
cltd
fstl
adcl
xchg
fnsave
test
aaa
sbb
push
daa
xor
cmpb
jmp
outsb
pop
stos
lds
add
sahf
mov
sbb
inc
fdivs
rcl
cli
loopne
inc
mov
dec
cwtl
push
bnd
fisubrs
das
or
in
gs
into
adc
adc
jecxz
in
inc
nop
add
arpl
and
and
jl
adc
mov
xor
sahf
adc
nop
orl
pop
and
pushf
stc
mov
fnstenv
inc
fwait
dec
daa
adc
aas
and
loope
fistps
mov
sbbb
pushl
mov
xchg
mov
jecxz
repz
shr
je
mov
pop
and
adc
std
xchg
or
mov
or
pop
sbb
test
jmp
jnp
xor
enter
js
inc
pop
test
mov
adc
adc
lock
hlt
inc
icebp
ficoml
inc
inc
pusha
fsubl
cmp
dec
xchg
mov
pop
mov
jp
stos
inc
and
inc
jp
or
adc
lahf
pusha
dec
inc
cltd
mov
loop
nop
dec
push
adcl
scas
test
sub
shl
add
cmp
fnstenv
mov
out
dec
popf
mov
fcompl
mov
jb
dec
xchg
imull
orl
leave
stc
repz
or
iret
insl
les
mov
sub
rorb
inc
inc
dec
pop
fcmove
cmp
fcmovbe
push
outsl
adc
sub
test
clc
xchg
or
dec
aad
lds
popf
xchg
push
and
jnp
add
movsb
adc
out
icebp
push
cmpsb
add
es
pushf
add
mov
sbb
push
ds
lcall
ret
pop
xor
adc
sub
movl
addl
insl
xchg
add
or
adc
lret
int
add
orl
push
ret
data16
nop
adc
mov
pop
adc
rcll
aad
fwait
or
cltd
and
adc
out
adc
pop
xorl
push
inc
mov
add
out
int
pop
inc
mov
jno
add
in
dec
sbb
sbb
pop
cli
ror
bound
adc
xor
gs
xor
inc
loope
cmp
lock
sbb
mov
pop
mov
loop
mov
add
or
popl
xchg
or
adc
and
pop
lods
xchg
stc
fsts
mov
sub
or
inc
xor
mov
bound
add
fildl
cmpsl
leave
jle
pop
bound
sbb
sbb
dec
sbb
sbb
add
push
rcrl
fldenv
data16
cmp
mov
fmull
mov
sbb
sbb
pop
rcrl
and
mov
jmp
push
push
loopne
dec
lcall
adc
stc
dec
jae
push
in
hlt
popa
and
lcall
loope
pop
mov
xchg
adc
mov
mov
push
inc
mov
icebp
repnz
into
jns
mov
pop
push
ja
inc
orb
inc
xchg
lcall
and
pop
jno
call
xchg
popf
inc
cld
xchg
lds
push
ljmp
push
and
popf
adcl
fimull
xor
push
fisubl
xchg
push
clc
pop
and
out
lods
mov
lret
mov
jno
bound
sbb
dec
ror
lcall
ret
leave
xchg
xchg
popa
rcll
jecxz
push
faddl
push
shlb
xchg
ret
jmp
push
cli
push
lods
push
dec
dec
dec
sub
pop
les
pop
insl
sahf
sub
jno
lret
add
shrb
push
das
pop
jl
enter
sbb
arpl
aaa
xchg
inc
test
or
adc
xor
inc
cmpsb
jle
push
mov
sub
in
and
sub
data16
sti
fsubrs
ret
or
push
mov
subl
push
add
jg
cmp
clc
js
fcmovnb
push
sbb
inc
fimuls
and
stos
xchg
jecxz
push
jns
callw
xor
push
iret
pop
les
ret
rolb
dec
cmpsb
jno
push
lret
lods
arpl
xor
and
mov
inc
mov
int
inc
pop
cli
inc
aas
clc
dec
inc
shll
in
pop
cmp
mov
mov
popw
aad
sub
cs
jp
rcrb
cmp
push
mov
pop
push
dec
lret
mov
sbbl
or
nop
fidivl
dec
push
pop
sahf
xchg
dec
mov
in
mov
push
fistps
mov
sbb
mov
loope
adc
or
hlt
adc
lock
push
mov
pop
rcll
pop
out
push
sub
sar
jp
adc
cmp
push
mov
out
outsl
push
mov
mov
pop
inc
cs
adc
mov
cmp
cmp
xchg
aas
mov
adc
jb
push
push
cli
dec
jae
push
test
push
scas
leave
xchg
stos
mov
mov
adc
xchg
xchg
test
jp
inc
xor
fwait
fwait
inc
mov
lock
mov
xlat
jp
aad
bound
push
mov
out
je
orl
push
xorl
dec
sbb
push
movl
prefetch
jmp
daa
lock
pop
inc
test
pushf
pop
dec
scas
in
aas
sbb
ret
loop
jg
in
sbb
push
xor
pop
sub
sti
sahf
add
adc
mov
dec
call
mov
mov
adcb
mov
in
inc
sub
popf
int
push
fstps
adc
lea
pop
xor
push
in
pop
push
jmp
add
fwait
jle
inc
pop
sub
outsb
ret
add
inc
orl
mov
popf
aam
mov
or
mov
dec
adc
loopne
sub
xor
xorb
dec
sub
mov
popf
and
xchg
adc
inc
daa
dec
inc
add
cltd
adc
cmp
dec
orb
daa
inc
adc
gs
jno
and
push
push
sbb
test
push
adc
xchg
ret
push
or
dec
and
ss
jp
sub
dec
xchg
sbb
mov
adc
lods
mov
fists
mov
push
add
pop
xchg
popl
push
inc
push
sub
sarl
xchg
adc
fwait
in
sbb
inc
pop
mov
mov
imul
add
and
stos
or
les
and
inc
lret
roll
sbb
ret
cltd
adc
adc
push
lea
test
cltd
sbb
adc
icebp
add
scas
mov
jg
sahf
jbe
nop
mov
cltd
mov
pop
sbb
xchg
add
mov
lea
xchg
das
daa
adc
sbb
jecxz
adc
ret
jo
xor
jno
or
imul
lods
and
arpl
mov
js
add
xchg
outsb
out
sub
fimull
ret
pop
xchg
sbb
fmuls
loope
popf
mov
test
adc
push
jo
jne
add
scas
inc
mov
inc
test
roll
lcall
sti
jle
xchg
push
test
inc
out
int3
mov
sbb
inc
adc
and
test
mov
inc
arpl
adc
xchg
nop
in
xchg
gs
sbb
sub
xor
sub
lea
or
mov
lds
pop
xchg
xor
lea
dec
and
loopne
iret
aad
sub
inc
sub
adc
mov
jno
inc
paddq
dec
sbb
dec
pop
in
and
mov
adc
arpl
andl
xor
faddl
xor
mov
dec
cwtl
rcrl
inc
out
pop
mov
jno
orl
iret
sub
mov
stos
ljmp
int3
scas
mov
xchg
faddl
in
or
push
or
jnp
stos
push
jns
imul
cmp
mov
lods
adc
gs
or
rcll
mov
cmc
adc
dec
lds
aad
sub
popa
push
rcrl
dec
out
pop
pusha
adc
fwait
xchg
ss
add
pop
push
adc
int
dec
test
mov
jg
inc
in
fisubrl
mov
and
inc
inc
inc
lock
dec
iret
mov
jb
addb
cmpsb
mov
lsl
mov
sub
sub
xor
test
or
mov
mov
addb
adc
jge
push
fs
lret
repz
popf
sbb
mov
enter
push
lods
push
rcl
sub
sbb
jae
out
mov
inc
fiadds
icebp
jae
cmp
mov
mov
sti
lds
xchg
icebp
in
lock
mov
sahf
mov
pop
push
mov
inc
or
or
dec
sub
sub
iret
dec
push
adc
xor
add
xor
aam
xchg
leave
xchg
cmovbe
pushf
mov
mov
imul
push
jg
pusha
mov
orl
cltd
pop
out
xlat
call
push
mov
rcll
and
push
aad
inc
rcrb
dec
sub
int3
ficoml
popa
stos
test
adc
sub
ja
add
jbe
dec
push
scas
xlat
dec
inc
sbb
pushf
sbb
cmp
shld
pop
mov
cmp
fcomps
xchg
int
push
pop
int
out
mov
notb
cmp
outsl
mov
fdivrl
sbb
mov
adcb
xor
add
adc
mov
and
lahf
push
js
cltd
and
xchg
lret
sbb
mov
aam
mov
push
cmp
in
inc
ljmp
inc
cmp
jns
cmpsl
shlb
sub
lret
dec
jmp
loopne
inc
testl
mov
mov
or
dec
fidivrl
adcl
mov
fisttpl
xchg
pop
outsl
mov
imul
push
add
dec
adc
sbb
pop
andl
out
and
xchg
addl
and
xchg
xchg
scas
inc
dec
pop
cmpl
mov
cmp
cld
jmp
sbb
mov
and
addr16
mov
in
sti
pop
sub
outsb
sub
xlat
inc
pop
insb
jae
or
fildl
rorb
sbbb
out
out
fs
push
adc
inc
push
push
in
xrelease
decb
lds
and
and
push
mov
test
subb
push
mov
add
lea
inc
pop
xchg
sub
mov
iret
xchg
xor
adc
std
roll
inc
mov
mov
movsb
dec
icebp
dec
xchg
cmpsl
dec
inc
mov
sar
lret
xor
es
and
jo
sub
and
in
mov
sub
pop
arpl
add
adc
lods
pop
sahf
addb
dec
subl
rolb
ror
jmp
add
insl
push
cmpsl
cltd
bnd
imul
mov
data16
pop
ljmp
jo
loopne
rorb
push
les
adc
xchg
gs
insl
jno
std
out
mov
fistps
std
inc
cs
dec
jl
jg
sub
shrl
outsb
jb
lahf
stos
sbb
and
out
divb
cld
js
cltd
cli
sbb
fstps
and
xor
jo
fistps
mov
stc
repz
cs
aaa
dec
loope
dec
adc
shlw
adc
outsb
jns
cwtl
cs
add
push
xchg
stc
imul
scas
add
mov
andl
sbb
mov
outsl
sub
pop
and
push
pop
sbb
sbb
xor
mov
iret
call
sub
sbb
call
int
mov
mov
subl
push
push
mov
cmpsl
inc
dec
xchg
mov
mov
test
push
dec
movsl
lds
inc
adc
bound
test
test
mov
inc
xchg
arpl
and
mov
mov
inc
and
sbb
adc
adc
and
inc
movsb
adc
or
mov
cmp
sbb
sub
add
es
ret
pop
push
xchg
data16
out
pushf
xorl
daa
and
push
mov
fsubs
add
inc
sub
bound
ret
std
arpl
or
and
lcall
push
inc
pop
add
inc
mov
xchg
pop
sbb
xchg
popa
imull
lea
add
dec
mov
lret
mov
sarb
push
cmp
sbb
cmp
stc
inc
cmp
xor
icebp
sbb
and
dec
push
in
fnstenv
xor
mov
sbb
mov
clc
inc
adc
xor
ret
outsl
xchg
out
and
sbb
jo
int
jno
loope
pushf
cmp
pop
cmovo
movsl
mov
mov
push
xor
jne
add
or
cmc
enter
or
icebp
jg
adcl
lcall
ficoms
jl
jbe
pop
ds
lea
sbb
ret
jl
cmp
jmp
and
ss
mov
xchg
lahf
jae
adc
xor
loope
pop
jge
jecxz
jne
add
mov
cmp
mov
xchg
fs
arpl
xchg
cmp
mov
mov
and
and
sbbl
aaa
insb
mov
insl
dec
fsubs
sbb
aaa
shlb
popa
orb
out
out
jae
pop
add
and
sbb
adc
pop
arpl
fsubs
cmp
dec
adc
ss
pop
sbb
mov
pop
lds
jns
and
arpl
pop
cmc
ljmp
sahf
cmp
dec
andb
test
sub
mov
push
add
loopne
xchg
scas
adc
lods
push
adc
stc
arpl
fwait
call
push
aas
notb
leave
call
test
adc
sbb
or
or
and
adc
inc
push
movsb
cltd
ret
inc
lods
adc
add
push
fwait
jp
jg
lods
jmp
ret
sbb
sar
rcr
rol
shl
sub
rcl
inc
sar
adc
mov
rcl
neg
rcr
sar
xor
neg
shl
xor
call
jns
sub
pop
mov
xchg
sub
dec
dec
lea
mov
pushf
lds
sub
mov
add
ret
fiadds
int
lahf
jg
xchg
inc
shrl
repz
int
js
fnstenv
fiadds
in
int
jg
sub
xlat
int
fistpl
out
jg
xchg
into
mov
and
lahf
and
pop
fsubr
adc
sub
int
cmp
fiadds
ror
int
jg
xchg
sub
push
enter
and
lahf
and
in
in
jae
mov
dec
xchg
sub
int
outsl
xor
jg
xchg
sub
jp
mov
les
jg
and
mov
in
jg
sub
enter
sub
rcrb
lahf
jg
and
imull
dec
push
jg
xchg
cli
dec
loope
lahf
jg
sub
ror
int
cmp
aad
xor
int
jecxz
jnp
lahf
jg
sub
int
and
lcall
jmp
cmp
rorb
sbb
jg
xchg
and
lahf
sub
jecxz
int
sub
add
sub
dec
xchg
sub
lret
into
into
xchg
jl
enter
pop
pushf
fstps
jmp
xchg
xchg
lahf
sub
ror
mov
pop
mov
xchg
and
mov
test
rcrl
jg
xchg
popf
sub
xchg
sahf
jmp
add
cwtl
lahf
jg
xchg
sub
into
into
into
sbb
cwtl
or
dec
lds
adc
int
and
test
mov
xchg
cli
sbb
aad
int
push
pop
cmpl
movsl
and
enter
out
int
fwait
dec
fidivrl
xchg
sub
int
jg
sub
int
cltd
es
lods
pop
mov
lock
lahf
and
outsl
cmp
rcrb
int
cmpsb
cmpsb
in
lahf
jg
xchg
sub
mov
jo
lahf
jg
xchg
lahf
jg
xchg
and
xchg
xchg
jge
lahf
jg
and
push
sarl
push
ret
int
and
lahf
jg
xchg
and
movsl
cmp
dec
xchg
pop
lcall
fmul
int
jns
xchg
sub
int
and
in
jns
adc
xchg
int
std
mov
xchg
lahf
jg
xchg
sub
in
sbb
rcll
into
into
int
sub
jecxz
int
movsl
out
pop
pushf
and
int
mov
sub
pushf
lods
pop
mov
dec
xchg
lahf
sub
insl
inc
jl
sbb
fs
jp
js
int
sub
fcmove
int
inc
popa
add
into
mov
and
sub
int
adc
add
int
lahf
jg
xchg
sub
ror
int
clc
fmulp
int
in
stc
mov
pop
mov
ret
cmpps
int
add
mov
lahf
sub
int
clc
pop
or
into
into
cmpsb
hlt
adc
rcll
sub
pop
inc
add
mov
int
jg
xchg
and
push
pop
test
lahf
jg
and
xchg
fwait
popf
sbb
fwait
pop
mov
sub
int
in
push
pop
mov
xchg
ret
sub
ror
mov
nop
outsb
mov
lahf
jg
xchg
ret
dec
ljmp
cmp
dec
clc
int
inc
out
out
int
and
and
inc
pop
movsl
fs
jp
pand
int
jg
xchg
and
add
lahf
mov
dec
xchg
ret
sub
add
loope
daa
xchg
pusha
lahf
jg
xchg
test
sbb
xchg
push
mov
dec
xchg
and
xor
jg
xchg
ret
lahf
jg
sub
int
std
mov
pop
test
sub
adc
mov
xchg
lahf
sub
int
stos
xchg
imul
imul
movsl
fs
jp
cmc
fcmovne
int
pavgw
int
cltd
test
push
stos
lahf
jg
and
andl
xchg
sub
and
int
inc
aaa
ljmp
loope
lahf
jg
xchg
popf
sub
int
movsl
clc
push
dec
insl
mov
mov
sub
in
int
rcrb
movsl
jg
xchg
mov
int
sub
ror
int
jge
mov
rcrl
ds
psrad
sahf
pop
mov
fiadds
int
lahf
jg
sub
lock
les
inc
jno
movsb
pop
mov
int
jg
sub
loop
int
shlb
pop
mov
fmul
int
dec
xchg
jl
dec
xchg
and
fdivrp
lcall
movsl
int
int
lahf
jg
xchg
dec
cltd
loope
and
jmp
pop
mov
pushf
fstpl
into
or
cmpsl
dec
lahf
jg
xchg
nop
and
jb
lret
add
jg
xchg
xchg
pop
cmp
push
ror
push
inc
outsl
test
rcrl
sub
lahf
jg
xchg
xor
and
or
jg
xchg
sub
int
lahf
jg
xchg
sub
xchg
adc
into
into
lahf
jg
xchg
mov
sub
fcmove
int
aad
pop
mov
loope
int
and
jg
xchg
dec
test
lahf
sub
lret
into
into
cmp
xchg
and
sub
jmp
cmovs
xchg
loopne
int
mov
loope
lahf
jg
xchg
and
lahf
sub
int
lods
sub
inc
add
int
mov
jg
xchg
movsl
fs
jp
mov
push
jae
adc
rcrl
shrb
sbb
mov
loop,pt
int
mov
xchg
cwtl
sub
cmc
enter
test
lahf
and
addl
into
mov
sub
rorl
pop
ror
int
sbb
into
into
push
nop
sub
ret
test
dec
xchg
sub
int
add
mov
lahf
jg
sub
pushf
lahf
jg
xchg
cmpsl
int
dec
lret
sub
jg
xchg
sub
ret
int
cwtl
cmp
popf
jg
xchg
pop
pushf
and
adc
sbb
cmpsb
mov
sub
into
into
fldl
pop
test
lahf
sub
fxch
int
stos
aas
and
lahf
sub
pushw
mov
lods
int
pop
test
movsl
adc
test
int
test
sub
dec
fwait
jg
xchg
lahf
sub
push
sub
loope
lahf
jg
sub
push
or
mov
dec
xchg
xchg
and
arpl
xchg
test
pop
mov
xchg
into
mov
into
mov
popf
sub
jmp
or
loope
movsl
icebp
les
lret
into
into
repz
xchg
lahf
and
push
sbb
jg
xchg
lahf
jg
xchg
sub
ljmp
int3
loope
popf
lahf
jg
xchg
add
mov
pop
xchg
ret
lahf
jg
sub
int
adc
out
pop
mov
stos
or
add
int
mov
pop
lods
and
int
mov
repnz
jg
xchg
iret
pop
lahf
jg
sub
xor
push
pop
mov
dec
sub
cmp
into
jge
dec
xchg
xchg
pop
cmp
leave
xchg
sub
int
dec
rclb
cmpsb
lahf
jg
xchg
sub
ficoml
xchg
dec
clc
int
inc
popf
fxch
int
jg
sub
int
aam
shlb
into
pop
or
and
ss
stos
or
xchg
pop
test
sub
pop
xor
xchg
sub
int
lahf
jg
xchg
and
xorb
and
dec
xchg
sub
jmp
int
stc
sti
lahf
jg
xchg
sub
xor
lahf
jg
xchg
and
cmp
aam
mov
mov
int
lahf
jg
xchg
sub
fstps
pop
mov
xchg
and
out
insb
pop
mov
xchg
popf
lahf
jg
sub
int
inc
fcmovne
pop
mov
ror
lahf
jg
xchg
mov
int
sub
mov
aam
mov
jg
xchg
lahf
sub
lret
into
into
lcall
xchg
sub
fmul
int
mov
pop
fistps
iret
int
fcoms
call
loope
into
sbb
pop
test
sub
into
into
mov
push
jg
xchg
mov
dec
sub
int3
into
into
mov
mov
dec
xchg
sub
pop
push
outsb
testb
loope
xchg
sub
aam
int
adc
lahf
jg
sub
int
stos
inc
sub
jg
xchg
sub
jmp
dec
xchg
xchg
lahf
sub
jge
movsb
sbb
dec
sub
in
int
fwait
mov
pop
mov
xchg
into
mov
lahf
jg
sub
cld
xchg
fidivl
into
test
fiadds
int
lahf
jg
sub
int3
into
into
and
inc
or
dec
pushf
and
sub
int
or
add
loop
into
into
mov
xor
xchg
or
ror
and
mov
add
sub
or
jg
xchg
leave
lahf
jg
sub
cmpsb
fnstcw
xchg
lahf
jg
xchg
repnz
int
cltd
loop
mov
lahf
jg
xchg
sub
xor
into
out
stc
pop
mov
and
pop
mov
lds
int
out
mov
into
into
lahf
jg
xchg
lahf
sub
enter
int3
ret
cs
fiadds
aaa
into
into
lahf
jg
xchg
dec
leave
les
xor
int
das
fmulp
xchg
mov
adc
int
lock
pop
mov
dec
inc
ror
sbb
pop
int3
into
into
fildll
movsb
cmp
xchg
pop
repnz
jg
sub
fmulp
int
into
sbb
mov
stos
rcrl
ror
int
icebp
mov
lahf
jg
sub
int
sbb
sbb
inc
lahf
jg
xchg
mov
sti
fiadds
fxch
int
sahf
cmp
into
hlt
mov
mov
fwait
pop
mov
insl
xor
into
dec
sbb
xchg
and
mov
movsb
ficomps
rcrl
jle
add
xchg
or
jg
xchg
xchg
repnz
int
mov
xchg
pop
push
int
int
insl
leave
into
into
mov
cli
pop
mov
dec
xchg
ret
lahf
jg
sub
int
hlt
in
jmp
or
pop
test
sub
sub
leave
pop
mov
enter
sbb
dec
sbb
sub
aad
int
jg
and
test
adc
shrl
int
sub
fcmovne
int
idivb
pop
mov
dec
and
dec
mov
nop
lahf
jg
xchg
repnz
xor
into
push
daa
xor
xchg
inc
bswap
and
fwait
xlat
lcall
loope
cmpsl
into
and
ret
jl
stos
or
ror
jg
xchg
sub
int
mov
lahf
jg
xchg
fidivs
test
into
jge
imul
lahf
jg
xchg
pop
pop
and
sbb
mov
dec
sub
int
inc
xlat
lret
clc
repz
jg
xchg
sub
mov
jne
add
sub
into
into
es
aad
xlat
jno
jg
xchg
xchg
pop
cmp
int
jge
jg
xchg
lahf
jg
xchg
movsl
int
int
sub
fxch
int
aas
je
pop
mov
xchg
sub
ret
int
lahf
and
xor
dec
inc
testl
xor
int
das
daa
jb
lods
fidivs
ret
lahf
jg
xchg
push
add
sub
and
adc
into
mov
and
lahf
jg
xchg
sub
int
pushf
lds
jg
and
fisttpl
sbb
lahf
and
nop
and
mov
vmovapd
ror
int
mov
loope
into
mov
lahf
sub
xor
fldenv
jg
xchg
lahf
jg
and
shll
jg
cmp
push
xchg
jg
xchg
pop
xchg
lahf
sub
loopne
int
outsl
mov
lahf
jg
xchg
popf
and
das
mov
or
add
xchg
lahf
jg
xchg
sub
fmul
int
enter
or
inc
mov
jg
xchg
sub
fxch
xchg
push
lahf
sub
call
cmp
mov
lahf
jg
sub
mov
inc
xchg
scas
stos
stos
sub
ror
int
cwtl
testb
xchg
fistps
lahf
jg
sub
int
or
test
pop
mov
int
sub
popa
jb
cmpsb
shll
and
cmp
jp
cmp
xchg
sub
adc
dec
xchg
pop
mov
lahf
jg
xchg
and
std
or
xchg
cmpsl
into
lahf
jg
xchg
movsl
fs
jp
pop
aam
int
addr16
xor
fs
pop
sbb
sbb
int
cwtl
cmpsl
lcall
jg
xchg
sub
aad
int
sub
xor
xchg
pop
cmp
fneni(8087
int
mov
loope
lahf
jg
xchg
inc
add
and
pop
sub
xor
and
mov
or
aas
jg
dec
xchg
ret
sub
into
into
adc
dec
xchg
lahf
sub
lret
into
into
mov
xchg
xchg
adc
xchg
jns
fcom
int
mov
jg
xchg
movsl
call
sub
cmp
and
leave
lahf
jg
xchg
pop
test
and
stos
clc
ljmp
sub
scas
push
jb
jg
xchg
sub
dec
fsubrl
dec
xchg
mov
iret
int
jge
shll
jg
xchg
pop
lods
lds
iret
int
pop
inc
adc
lahf
jg
xchg
and
inc
bound
mov
rcl
lahf
sub
fdiv
in
daa
jg
xchg
pop
adc
adc
int
dec
or
hlt
negb
dec
xchg
pop
dec
fstps
ror
int
lcall
rcll
inc
pop
dec
ret
loope
xchg
jl
jg
xchg
and
insb
mov
mov
sub
and
jno
lods
test
pop
mov
xorl
cmp
pop
cli
nop
orl
int
sub
int
ss
enter
loope
xchg
popf
sub
fmul
int
aas
shl
pop
pusha
xlat
lahf
jg
xchg
cmp
std
sub
int
lahf
jg
and
xor
pushf
lds
imul
xor
hlt
int
int
sub
int
add
loope
push
pop
sbbl
pop
xchg
fstps
mov
cmp
lods
popf
popf
lahf
jg
xchg
sub
int
sub
notl
jg
xchg
and
add
push
aas
out
mov
xchg
sub
xor
into
pop
mov
testb
lahf
jg
xchg
pop
test
into
xor
sbb
fistl
ss
into
mov
cld
lahf
jg
and
mov
aaa
jns
xor
lahf
cmp
nop
jg
xchg
sub
aad
int
les
sub
lahf
jg
xchg
cmp
jg
xchg
cli
test
into
into
push
ffree
dec
sbb
mov
sub
pop
negb
rcrl
fiadds
fxch
int
jg
xchg
lahf
jg
sub
xor
into
sub
dec
xchg
sub
jmp
daa
jg
xchg
into
sbb
int
orl
mov
sub
dec
xor
lahf
jg
xchg
ret
lahf
and
insl
and
pop
mov
stos
mov
xor
int
and
pop
icebp
pop
mov
leave
enter
popa
cmp
xchg
push
pop
mov
xchg
ret
sub
inc
jb
jl
pop
mov
test
into
push
loop
and
xchg
lahf
and
icebp
arpl
fistl
dec
xchg
sub
pop
dec
xor
jg
xchg
popf
into
mov
and
xor
pop
bound
int
lahf
jg
xchg
dec
test
int
push
pop
idivb
ficoms
jg
xchg
pop
iret
and
mov
dec
xchg
movsl
mov
mov
popf
sub
xor
into
mov
cld
jmp
lret
dec
xchg
inc
xor
and
lock
dec
jno
mov
sub
xchg
andl
jg
xchg
into
mov
sub
push
adc
add
mov
cmp
lahf
and
inc
pop
jb
addr16
pop
mov
ret
into
ret
add
dec
xchg
sub
inc
into
into
mov
mov
jg
xchg
dec
test
sub
int3
into
into
pushf
sbb
lahf
and
jbe
jae
mov
dec
xchg
popf
and
dec
fdivrs
fisubs
dec
xchg
xchg
sub
fcmove
int
pop
pop
mov
dec
sub
into
into
sbbl
inc
jg
xchg
add
int
push
pop
mov
fcmove
int
xor
scas
xchg
lahf
jg
sub
int
mov
add
xchg
lahf
jg
sub
into
into
jbe
mov
out
sub
rcrl
add
xchg
xchg
sub
into
into
xlat
fstl
cmp
popf
lahf
and
mov
xchg
and
lahf
jg
xchg
fiadds
ror
int
jp
int
cmp
loope
jg
xchg
and
outsb
arpl
dec
xchg
sub
dec
cs
xchg
pop
aad
jg
xchg
sub
int
sub
mov
loope
xchg
lahf
jg
sub
into
into
push
push
jb
dec
xchg
fimull
fiadds
into
into
lahf
jg
and
sbb
pop
ss
jns
shlb
into
inc
call
loope
jg
sub
ds
into
pusha
jl
imull
mov
fstps
aam
int
data16
xchg
cmp
jg
xchg
nop
sub
pop
lret
jg
xchg
pop
lcall
int
mov
mov
or
inc
ss
into
pop
mov
lahf
jg
and
fsubl
sbb
pop
mov
dec
xchg
cmpsl
lea
int
dec
mov
lahf
jg
xchg
xchg
pop
cmp
mov
into
into
popa
aad
pop
ds
pop
mov
xchg
repnz
int
or
call
jg
sub
int
in
pop
mov
lahf
jg
and
jle
mov
and
rcll
dec
sub
popf
or
loope
xchg
into
mov
and
sub
int3
into
into
cli
mov
xchg
or
sub
pop
dec
mov
loopne
int
jno
fistl
into
into
lahf
sub
xor
into
sar
enter
repnz
int
jecxz
and
push
pop
add
lret
int
fdivl
jg
xchg
ret
lahf
jg
xchg
sub
ret
int
push
enter
lahf
jg
xchg
pop
adc
jecxz
int
test
xchg
ret
lahf
jg
xchg
sub
lret
into
into
pop
data16
cmpsl
xchg
dec
dec
loope
lahf
jg
sub
into
into
xor
jg
xchg
pop
popf
icebp
lahf
sub
ret
sbb
fistpl
and
push
test
movsl
ror
int
test
movsl
mov
xor
into
int
pop
jg
xchg
pop
pushf
fldenv
sbb
or
test
jmp
jg
xchg
sub
into
into
lahf
mov
jg
xchg
lahf
jg
xchg
sub
into
into
dec
cmc
sub
mov
and
lahf
jg
xchg
pop
lods
sub
and
fsubl
fiadds
mov
into
hlt
pop
and
xchg
popf
into
mov
and
sub
or
mov
mov
xchg
and
mov
jg
xchg
lahf
jg
xchg
and
add
repnz
jg
xchg
scas
stos
sub
xor
into
addr16
es
xchg
xchg
and
xchg
mul
ret
pop
mov
dec
and
std
movsb
push
cmp
rcrl
int
adc
jne
dec
xchg
sub
int
adc
stos
and
lahf
jg
xchg
into
sbb
int
pop
mov
sarl
pop
test
cmp
jo
add
xor
or
into
into
fsubrs
push
loopne
pop
mov
sub
add
adc
xchg
lahf
sub
out
sbb
lahf
jg
xchg
popf
lahf
and
lcall
xchg
lahf
jg
xchg
add
int
mov
dec
xchg
rorb
lahf
jg
xchg
sub
fmuls
pop
push
mov
into
into
lahf
jg
xchg
and
pop
mov
hlt
mov
lahf
jg
xchg
stos
and
andb
pop
xchg
fstpl
into
mov
xor
cmp
into
into
mov
dec
sub
mov
int3
ror
cmc
mov
rcrl
mov
mov
jg
and
dec
sbb
pushf
lahf
jg
xchg
lahf
jg
sub
dec
mov
or
xchg
lods
lahf
sub
pop
aad
sub
pop
mov
jg
sub
into
into
nop
push
fwait
lock
sub
jg
sub
pusha
dec
pop
mov
push
add
jg
xchg
sub
ror
int
mov
cmp
test
lahf
jg
and
or
mov
xchg
lahf
jg
xchg
sub
into
into
xor
stos
jg
xchg
or
int
cmp
xchg
pop
ss
sub
ror
fisttps
xchg
xchg
pop
cmp
int
icebp
int
icebp
in
pop
mov
into
into
into
lahf
jg
sub
jo
jno
insl
loop
mov
popf
and
lahf
jg
xchg
and
and
and
mov
into
into
lahf
jg
sub
cmp
into
push
or
inc
ficoms
and
sub
loope
sub
sub
cmp
jne
pop
mov
pop
xchg
push
popf
and
lahf
jg
sub
stos
mov
jmp
jg
xchg
pop
lea
mov
int
call
les
lahf
jg
xchg
pop
dec
xlat
fxch
int
clc
test
ds
lahf
jg
sub
into
into
cli
rcrl
pop
mov
lahf
jg
xchg
and
jecxz
mov
xchg
inc
add
lahf
and
push
inc
ljmp
pop
test
into
in
push
push
xlat
in
pop
mov
xchg
ret
mov
into
mov
pop
mov
dec
xchg
xchg
and
subb
es
mov
pop
fistpl
into
push
mov
jmp
sub
into
into
sub
enter
inc
pop
ja
jg
xchg
pop
test
sub
int
mov
lahf
jg
xchg
sub
into
into
sub
xor
and
pop
test
lahf
and
rcrl
inc
lahf
jg
xchg
ret
sub
ds
into
in
insl
lret
dec
xchg
xchg
ret
lahf
jg
xchg
and
adc
in
lahf
jg
xchg
sub
into
into
je
cmpsb
ret
lahf
jg
xchg
popf
lahf
sub
xor
into
add
fwait
jle
xchg
dec
xchg
movsl
int
int
lahf
jg
xchg
and
jl
pop
jo
fwait
lahf
jg
xchg
fiadds
ror
and
enter
xchg
lahf
jg
xchg
xchg
pop
cmp
pop
leave
into
into
not
pop
sub
xchg
sub
fmulp
int
mov
xor
lahf
jg
sub
xor
into
and
cwtl
mov
adc
inc
scas
xor
int
popf
lret
ss
mov
xchg
and
into
jbe
lahf
jg
xchg
pop
test
lahf
and
sub
mov
into
into
lahf
jg
xchg
sub
fmul
int
ficoms
sub
xchg
popf
into
mov
and
lahf
and
xchg
aad
pop
scas
jns
mov
and
jo
and
inc
rorl
cmp
into
lahf
and
mov
psubusw
lahf
jg
xchg
lahf
jg
and
dec
sbb
lahf
jg
xchg
sub
testb
mov
dec
int
lahf
jg
sub
ds
into
push
outsl
ret
xchg
jg
lahf
jg
sub
int
loope
imulb
popf
lahf
jg
and
cmp
js
inc
aad
into
into
lahf
jg
sub
xor
into
sub
mov
jg
xchg
and
adc
dec
xchg
lahf
jg
xchg
pop
test
lahf
sub
into
into
sub
pop
mov
mov
popf
mov
int
jmp
lea
rcrl
into
into
insb
aaa
sbbl
int
xchg
pusha
pop
mov
xchg
and
lahf
and
or
mov
int
int
jg
xchg
pop
ljmp
int3
mov
cmpsb
pop
mov
fstps
outsb
int
pop
mov
cwtl
ret
lahf
sub
into
into
insl
decl
lahf
jg
xchg
dec
pushf
leave
and
ret
scas
or
lahf
jg
xchg
mov
sub
fmulp
int
or
loope
lahf
jg
xchg
sub
cmpl
xor
aad
into
into
inc
pop
cmp
mov
xor
into
into
std
or
dec
loope
or
jg
xchg
lahf
sub
xor
into
sbb
push
lahf
and
in
aas
into
into
lahf
and
push
jnp
lods
sahf
sti
pop
sub
jg
xchg
mov
mov
and
int3
mov
lahf
jg
xchg
and
cs
popf
and
sub
aaa
into
into
lahf
jae
pop
mov
lret
lahf
jg
xchg
xchg
sub
mov
pop
mov
adc
cmp
into
jecxz
out
pop
mov
mov
popf
into
mov
and
and
in
les
xchg
pop
pop
mov
dec
xchg
pop
lahf
fstps
int
sub
test
sbb
dec
xchg
nop
and
int
int
iret
pop
mov
dec
and
sub
mov
xchg
cli
cmp
into
into
lds
pop
mov
xchg
mov
jg
sub
sbbb
and
into
rcl
xor
mov
jg
xchg
sub
jnp
into
into
fiadds
dec
in
lods
dec
adc
sub
enter
jg
and
add
pop
mov
lahf
sub
into
into
ds
cli
cmp
into
mov
into
mov
into
mov
and
sub
ss
into
fdivrl
xor
popf
sub
leave
into
into
inc
addr16
cmp
movq
lahf
jg
xchg
sub
int
mov
cwtl
jl
pop
out
jg
xchg
inc
add
and
fimull
jl
jns
jg
sub
jmp
dec
ljmp
int
jg
xchg
pop
stos
fldenv
arpl
lods
lahf
jg
xchg
sub
jb
aad
xchg
lahf
jg
xchg
lahf
sub
mov
pop
mov
dec
sub
cmp
frndint
pop
mov
dec
xchg
pop
cltd
loope
lahf
sub
int
xor
push
pop
mov
xchg
lahf
sub
xor
into
pop
aaa
jmp
clc
lret
lods
repz
jg
xchg
sub
into
into
sub
int3
into
into
lock
mov
jg
sub
into
into
shrl
inc
addr16
into
lahf
jg
xchg
inc
add
sub
cmp
into
push
inc
out
test
xchg
movsl
mov
push
cmc
popf
sub
xor
and
xchg
pop
dec
lds
enter
fadd
cmp
shrl
and
into
lahf
sub
enter
call
ja
sbb
rcll
and
scas
adc
cmp
xchg
lahf
jg
xchg
sub
lods
mov
dec
xchg
sub
into
into
sbb
inc
push
pop
mov
jl
into
into
into
xor
pop
pop
test
and
cmp
pop
adc
jg
xchg
into
mov
sub
xor
into
pop
add
leave
lahf
jg
sub
jp
pop
dec
pop
mov
mov
dec
xchg
lahf
sub
fxch
int
xlat
xor
loope
dec
test
inc
es
into
pop
adc
dec
test
lahf
jg
and
adc
subb
mov
into
mov
into
mov
and
sub
sbb
push
cli
xchg
fstps
into
and
mov
lahf
jg
sub
lret
into
into
xor
or
lahf
jg
xchg
dec
test
int
xchg
loope
jg
sub
push
and
pop
cmp
xchg
mov
jg
xchg
stos
lahf
sub
es
into
push
lea
xor
test
lahf
sub
stos
adc
xchg
and
add
push
int
xchg
loope
lahf
jg
xchg
lahf
lahf
and
test
out
add
jg
xchg
fidivs
lahf
sub
int
int3
cli
ficoml
loope
pop
test
lahf
cmp
fstpt
mov
lahf
jg
xchg
and
sbb
cltd
insb
sbb
hlt
pop
mov
int
push
daa
into
into
stos
jne
addr16
sub
jg
xchg
sub
es
into
mov
sub
dec
xchg
and
test
ret
pop
pop
mov
dec
xchg
ret
sub
push
adc
cmpsl
test
sbb
adc
xchg
jne
into
into
sarb
mov
xor
sub
into
lahf
sub
into
push
lds
in
dec
xchg
lahf
jg
and
shll
sbb
sub
into
into
xor
iret
jg
xchg
pop
adc
sub
xor
into
mov
int
pop
mov
and
sub
lahf
jg
xchg
pop
xor
into
into
sbbb
sbb
mov
fstpt
into
into
or
ret
shl
mov
dec
xchg
inc
sub
lahf
and
adc
push
shrb
dec
xchg
add
sub
into
into
je
repz
pop
or
jg
and
dec
xor
cmp
jg
sub
int
fwait
xor
jg
xchg
inc
mov
fiadds
cmp
into
lahf
sub
sub
into
and
addr16
clc
jge
and
lahf
sub
add
stos
sti
push
jg
sub
and
mov
jg
xchg
into
mov
into
mov
xchg
and
inc
sti
pop
mov
fcmovne
into
into
cltd
or
aad
mov
dec
xchg
pop
nop
mov
into
mov
pop
mov
xchg
into
mov
xor
into
outsb
data16
jg
xchg
dec
test
fmulp
int
hlt
jo
sub
lahf
and
in
and
mov
jg
sub
mov
call
mov
into
mov
push
out
std
mov
lock
into
lahf
jg
sub
sarb
xchg
cli
pushf
lds
into
and
cmp
jg
xchg
and
lahf
jg
xchg
sub
cmp
jae
and
sub
inc
sub
int
lahf
sub
out
add
add
dec
xchg
nop
lahf
sub
int
leave
jne
arpl
pop
mov
xchg
fisttps
int
push
jp
inc
movsb
pop
mov
xchg
sub
into
into
sub
cmpsb
mov
mov
dec
and
leave
or
ds
jg
xchg
and
lock
pop
mov
mov
sub
into
into
or
xchg
lahf
sub
cmp
into
mov
in
pop
mov
lea
int
jae
sub
iret
out
jno
adc
and
pop
and
cmpsl
daa
in
mov
leave
and
aam
gs
mov
lahf
and
in
ficomps
ja
and
pop
mov
xchg
sub
into
into
xchg
pop
xor
loope
lahf
jg
xchg
sub
into
into
lods
sbb
xchg
test
jp
dec
ds
into
sub
into
lret
push
bound
and
rcrl
xor
into
into
ljmp
lahf
jg
xchg
sub
xor
into
jno
shll
cmp
repz
jg
xchg
mov
fiadds
int
and
mov
xchg
into
sbb
lahf
sub
es
into
adc
pop
das
dec
pop
mov
xchg
sub
lock
xchg
ret
lahf
jg
sub
fs
inc
gs
rcrl
cmp
jmp
sub
jp
jg
xchg
inc
mov
sub
mov
and
lahf
jg
sub
mov
lahf
jg
xchg
lahf
sub
cmp
xchg
add
dec
xchg
les
xchg
ror
int
xchg
mov
lahf
jg
xchg
fimuls
xor
into
and
cmp
nop
pop
mov
sub
xchg
jle
cwtl
sarb
xchg
pop
test
lahf
cmp
inc
xchg
popf
lahf
jg
xchg
cmpsl
into
sub
into
into
sbb
mov
sub
xor
into
lahf
jg
sub
or
test
and
lahf
jg
xchg
ss
ror
int
adc
int
jp
jg
xchg
sub
xor
into
push
lock
rcll
mov
outsl
jg
xchg
sub
mov
dec
mov
into
mov
cld
pop
jo
jg
xchg
movsl
fs
jp
daa
cmp
into
lahf
sub
sub
into
mov
jb
lahf
sub
cmp
into
setb
sbb
sub
into
into
fs
mov
lahf
jg
xchg
and
sub
into
into
add
pop
mov
xchg
and
cwtl
mov
rcrl
lahf
sub
into
into
dec
sub
stc
loopne
jg
xchg
dec
test
lahf
sub
lret
jle
and
mov
cmp
push
mov
add
mov
test
into
push
loop
xor
ret
jg
xchg
and
or
dec
xchg
pop
fstps
ror
mov
call
dec
lds
pop
sub
into
sub
iret
sbbb
ret
lahf
sub
and
into
jg
cwtl
sub
add
sysexit
into
into
lahf
sub
iret
int
mov
xchg
xchg
lahf
sub
into
into
aad
das
mov
jg
xchg
lahf
sub
sub
into
ficoml
pop
je
fiadds
xor
into
lahf
jg
and
outsb
inc
cmovb
in
inc
add
lahf
jg
xchg
inc
sub
and
iret
or
pop
mov
inc
mov
out
into
into
xor
fcmovu
push
repnz
pop
mov
sub
int
and
mov
loope
ret
lahf
sub
ror
gs
popa
or
lahf
jg
sub
and
into
cmpsb
hlt
mov
sub
inc
into
into
push
and
pop
mov
lods
fldcw
andb
xchg
jg
xchg
nop
lahf
jg
sub
into
into
cmp
xor
mov
clc
int
inc
mov
into
into
lahf
sub
pop
sub
into
and
add
dec
xchg
and
lahf
sub
pop
fs
jg
xchg
and
xchg
xchg
and
ret
jg
xchg
cwtl
and
jge
out
lahf
jg
and
sbb
hlt
es
into
into
into
lahf
jg
xchg
sbb
lahf
sub
adc
pop
xchg
pop
xor
pop
repnz
xchg
fimull
into
into
lahf
jg
xchg
sub
into
into
cmp
pop
pop
cli
sbb
into
into
sub
and
xchg
lahf
jg
xchg
lahf
sub
cmp
into
add
pop
mov
jg
xchg
sub
and
into
call
jg
xchg
cmpsl
int
jg
xchg
and
outsb
movsl
jg
xchg
jb
lahf
jg
sub
push
jg
xchg
sub
into
into
jecxz
xor
lahf
jg
xchg
popa
lahf
jg
sub
push
inc
ret
fucomp
pop
mov
and
and
cmp
lahf
jg
xchg
scas
stos
or
inc
mov
dec
xchg
sub
sub
into
mov
sbb
jle
into
into
bnd
mov
rcll
inc
mov
dec
sub
mov
dec
fwait
and
dec
xchg
pop
xchg
lahf
jg
sub
into
into
es
add
mov
xor
into
lahf
jg
xchg
and
mov
sub
pop
pushf
lds
into
xlat
add
jg
sub
inc
into
into
fsubrl
cmp
mov
sub
into
into
push
popa
jne
mov
stos
and
xlat
sti
stc
cmp
mov
lahf
jg
xchg
and
orb
xor
mov
xlat
aaa
jg
xchg
sub
into
into
inc
lahf
and
rcrl
stc
or
dec
xchg
lahf
jg
and
not
mov
pop
mov
dec
xchg
lahf
jg
sub
into
into
int3
sbb
pop
pop
mov
int
jg
xchg
sub
lahf
in
xchg
repnz
into
rcrl
jl
stos
or
ror
jg
sub
pusha
ret
loope
xchg
sub
ss
into
lock
push
fiadds
sbb
into
lahf
jg
xchg
into
mov
lahf
sub
xor
jg
sub
daa
into
into
movsl
sub
dec
sub
ds
into
dec
mov
xchg
xchg
lahf
jg
xchg
and
sub
pop
add
pop
mov
cs
into
lahf
jg
xchg
into
sbb
into
add
xor
jg
xchg
lahf
jg
and
xor
js
lret
xchg
xchg
repnz
xlat
and
into
gs
aad
mov
into
into
into
lahf
jg
xchg
sub
into
into
xchg
filds
loope
jg
xchg
popf
lahf
and
lods
push
addr16
ret
sub
sub
into
push
and
fiadds
xor
into
lahf
jg
xchg
jb
sub
into
into
inc
adc
jg
sub
leave
into
into
mov
jg
sub
imul
rcll
jne
into
into
pop
lods
push
pop
mov
xchg
fdivs
into
into
leave
xor
or
ror
jg
xchg
sub
into
into
mov
je
inc
push
mov
sarl
and
sub
push
into
into
in
cmp
xchg
mov
or
into
into
sbb
jl
jmp
pop
mov
xchg
pop
test
jns
into
into
in
and
lret
pop
mov
xchg
and
pop
loopne
or
mov
dec
xchg
sub
cmp
into
aam
gs
popf
and
sub
into
into
push
lret
mov
xchg
xchg
mov
lahf
jg
sub
push
jg
xchg
lahf
and
xchg
sub
fimuls
pop
mov
dec
xchg
fiadds
ds
into
sub
ja
or
jg
xchg
lahf
jg
sub
into
into
pop
mov
icebp
pop
mov
xchg
xchg
lahf
jg
and
loopne
into
xchg
push
test
int
int
lahf
sub
into
into
in
jnp
jg
xchg
fidivs
lahf
jg
xchg
sub
into
into
fidivl
iret
lahf
jg
xchg
and
cmp
mov
loope
jg
xchg
lods
sub
push
pop
mov
fxch
lahf
jg
and
sbb
jg
xchg
and
lahf
jg
and
sbb
cwtl
addr16
mov
lahf
jg
xchg
sub
pop
mov
jg
xchg
and
pop
sbb
dec
xchg
sub
into
into
movsb
sbb
loope
out
lahf
jg
xchg
push
test
int
int
sub
into
into
rcrl
loope
xchg
pop
test
dec
sub
into
pushl
sbbb
mov
and
call
dec
xchg
sub
xor
into
lcall
push
pop
clc
adc
out
sbb
ror
rol
int
jmp
sub
and
rol
sbb
or
mov
rcr
jmp
xchg
xor
fs
sar
adc
adc
adc
jmp
mov
add
ficoml
rol
ror
not
sbb
call
fists
ret
mov
hlt
mov
rcr
adc
not
call
cli
and
cmp
or
out
je
aas
add
add
loope
mov
and
or
rcl
rol
test
xor
jmp
sub
sarb
jmp
in
mov
jecxz
lea
rcr
shl
jmp
adc
popa
lahf
sbb
fs
neg
shl
adc
call
cld
sub
jo
lds
mov
test
rcl
call
add
xchg
aam
in
inc
cmp
jne
dec
data16
adc
mov
pop
or
rol
jmp
add
fld
out
adc
iret
or
cltd
decl
dec
sub
rcr
sar
cmp
jne
nop
inc
add
lea
sar
adc
sbb
rol
shl
call
test
insb
jnp
mov
xor
ror
cmp
jne
mov
int
loop
rol
rcl
rcl
inc
jmp
sbb
loop
pop
inc
not
or
mov
cmp
jne
inc
sub
leave
enter
or
xor
not
and
cmp
jne
adc
jne
lret
nop
flds
or
iret
push
neg
neg
mov
call
xor
dec
daa
sub
and
rcr
sbb
dec
neg
sub
jmp
sti
cltd
xor
pop
adc
dec
cmp
jne
test
and
test
cmp
jne
or
jae
jmp
inc
not
adc
inc
rcr
cmp
jne
push
mov
fs
shr
xor
or
cmp
jne
or
sbbl
lock
and
or
xor
jmp
xchg
lea
cld
xor
add
call
mov
push
notb
lret
and
mov
xor
shr
jmp
insl
inc
fiadds
or
ret
jae
xchg
in
test
js
xor
into
dec
sub
shl
ror
or
ror
cmp
jne
dec
fisttps
xor
xor
shl
sub
mov
jmp
jns
jge
imul
call
les
adc
inc
ror
xor
shr
cmp
jne
stos
and
cld
jmp
fildll
cli
mov
or
call
jecxz
gs
aad
fs
rcr
shl
inc
sbb
test
cmp
jne
clc
mov
xor
sub
call
sub
mov
bound
movl
push
or
add
pushf
sub
rcr
sar
shl
and
cmp
jne
fmulp
das
subb
roll
jg
ss
jne
mov
dec
mov
shll
repz
rol
test
cmp
jne
add
aad
fs
adc
neg
or
or
sbb
jmp
adc
shl
rcl
rol
sbb
jmp
xor
mov
or
xor
rcl
mov
rcl
inc
cmp
jne
cld
pop
es
shr
shl
cmp
jne
cmp
fs
rcl
inc
jmp
fbld
mov
fsts
mov
add
add
iret
test
or
call
es
push
loop
rcl
mov
or
and
cmp
jne
and
addb
mov
fsubrp
paddb
fprem
jnp
or
rol
shr
cmp
jne
rcrb
inc
and
inc
jmp
stos
cmpsl
in
fcmovb
fs
rcl
out
stc
sub
jne
rcr
mov
jmp
cmp
popf
iret
ror
sar
xor
rcl
or
cmp
jne
test
out
mov
rcl
cmp
jne
subb
cltd
mov
cmp
adc
shl
rol
cmp
jne
fstl
and
or
fldl2t
out
add
dec
cltd
mov
je
dec
add
rcr
mov
inc
call
and
fs
adc
cmp
cmp
jne
jge
cmp
out
sbb
dec
inc
push
clc
jne
bound
add
out
ror
add
add
call
add
pusha
dec
shl
rcl
sub
call
dec
loope
mov
and
shl
shl
cmp
jne
sti
insb
mov
push
mov
add
aad
cli
testb
adc
shr
sbb
call
fcompl
out
fisttps
sbb
cmp
jne
in
dec
loope
adc
iret
sbb
jmp
or
mov
shl
jmp
aas
add
int
adc
adc
call
xor
movsl
movsl
or
and
xor
neg
rol
add
cmp
jne
xchg
adc
sub
dec
jns
fs
or
rcr
cmp
jne
repnz
add
rcl
shl
cmp
jne
jmp
fs
shl
and
jmp
aas
push
xlat
popf
rol
sar
xor
jmp
jno
out
enter
mov
adc
xor
xor
add
call
out
fdivl
repnz
shl
shl
shl
mov
cmp
jne
lea
scas
lea
shr
or
call
fdivl
or
and
ror
call
inc
push
mov
sub
ror
sbb
cmp
jne
push
sbb
add
sbb
test
lcall
fs
lea
rcl
sar
xor
sar
call
xchg
or
out
sar
and
jmp
cmp
and
adc
add
ror
rcl
jmp
das
mov
lahf
into
or
add
mov
cmp
jne
inc
sbb
mov
shr
incl
add
push
xor
jae
out
cmpsl
shl
shl
shl
cmp
jne
ss
or
fst
leave
jmp
rclb
iret
in
rcl
lret
mov
mov
mov
test
mov
call
push
add
push
cmp
clc
adc
stc
aad
jnp
jne
popa
test
fs
cmp
rcr
rcr
cmp
jne
enter
mov
jp
push
cmpsb
rol
cmp
jne
pop
sbb
sub
sbb
test
xor
call
xchg
xor
add
adc
shl
jmp
lods
xchg
stc
test
fstps
and
or
and
not
call
lea
neg
rol
cmp
jne
ror
and
xchg
jnp
fs
xor
sub
ror
shl
cmp
jne
inc
or
in
into
add
out
adc
sarb
shr
shl
jmp
lods
xor
pop
or
hlt
sbb
shl
call
bound
jecxz
sti
sbb
sar
ljmp
xchg
scas
lea
sub
cmp
jne
je
je
insb
cmp
rcr
dec
call
mov
lea
sub
inc
not
or
sbb
jmp
dec
sub
lret
pop
and
ror
call
jecxz
pop
insl
aam
xor
shr
test
dec
call
fisubs
xor
stc
rcl
shl
rol
jmp
mov
jae
jle
inc
shl
jmp
cmc
cwtl
lea
and
shl
sar
cmp
jne
or
dec
lea
ror
call
xchg
int
lock
std
shl
shr
cmp
jne
sub
jbe
ret
sti
dec
adc
mov
test
ljmp
into
in
or
test
dec
inc
not
cmp
jne
and
add
fcmovb
cmp
jne
jb
push
fsts
cli
xor
sbb
not
rol
jmp
jbe
fs
leave
sar
rcl
rcl
adc
shl
shl
jmp
add
into
pusha
mov
popa
push
or
cmp
jne
clc
mov
jg
stc
lea
rcl
shl
rol
cmp
jne
setno
lea
dec
shr
ror
add
cmp
jne
add
std
popl
and
shl
inc
sbb
ror
cmp
jne
push
push
and
test
shr
mov
rol
sar
jmp
push
ja
adc
add
and
test
cmp
jne
add
lock
and
mov
shl
test
sar
cmp
jne
outsb
mov
add
jmp
fadd
in
or
repnz
jmp
out
cmp
roll
jmp
or
adc
mull
ret
jmp
insb
cmc
and
je
sub
test
sub
jmp
ret
and
inc
xor
sar
dec
add
cmp
jne
pop
jo
inc
mov
push
dec
sub
lret
add
cmp
jne
dec
je
addb
inc
adc
and
call
loope
cmp
fiaddl
call
mov
shl
ror
cmp
jne
shll
rcrl
inc
and
inc
add
call
into
into
xchg
mov
fldl
rcr
shl
call
mov
push
lods
rorl
in
add
dec
rcr
neg
jmp
enter
test
and
add
cmp
jne
pop
sti
rol
jecxz
shl
mov
shl
jmp
and
int3
fimull
xchg
rcr
ror
sar
dec
cmp
jne
scas
cld
inc
fwait
pop
add
sbb
cmp
jne
outsl
or
std
jne
leave
push
not
call
adc
xchg
add
inc
and
dec
cmp
jne
out
test
add
filds
xchg
jne
cmp
out
int
or
rcr
rol
jmp
lcall
neg
dec
adc
xor
add
sar
cmp
jne
cmp
rcrb
sbb
cld
lods
rol
ror
cmp
jne
jl
push
xor
fdivp
ret
push
xor
or
inc
lea
rcr
adc
call
and
xor
rol
inc
mov
sar
adc
neg
call
in
adc
loop
fs
adc
mov
mov
rol
shl
cmp
jne
push
adc
ret
ror
sar
and
sbb
call
loopne
fistpll
rol
pop
push
and
rcr
call
xchg
cli
pop
cmc
pop
adc
shl
cmp
adc
not
jmp
out
imul
sar
sbb
jmp
cld
in
ljmp
shl
shl
add
jmp
cli
lea
repz
shl
and
shl
call
leave
lds
ret
xchg
mov
add
adc
ror
not
cmp
jne
addr16
jge
jne
sub
sar
add
sar
cmp
jne
inc
push
shr
adc
cmp
add
shr
cmp
jne
aas
mov
shr
shl
xor
and
mov
mov
cmp
jne
ret
adcl
cmpl
hlt
icebp
jmp
rol
fildl
cmp
jne
mov
imul
jmp
ret
mov
arpl
lock
jne
popa
aaa
xchg
add
or
enter
rol
ror
add
adc
jmp
push
xor
and
loop
inc
shl
xor
shr
cmp
jne
mov
or
icebp
shl
adc
rol
shl
test
cmp
jne
nop
mov
lret
