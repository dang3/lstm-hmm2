clc
outsl
or
jg
mov
ret
sbb
jp
sbb
xorl
inc
jmp
cli
les
mov
push
xchg
jb
mov
sbb
mov
add
xchg
pusha
mov
sarb
and
xor
mov
loop
movsb
rorl
push
or
mov
sbb
inc
in
jae
xor
ss
das
ret
mov
push
loope
int
sub
cmp
ds
arpl
es
cmp
je
mov
mov
or
jle
je
cmp
lahf
add
mov
push
cltd
iret
roll
out
idivl
arpl
xchg
jle
dec
mov
mov
mov
pop
pop
stos
gs
ljmp
xchg
push
jg
fcoms
jge
cld
imul
pop
pop
xchg
pop
push
mov
sub
cmpsb
test
mov
xchg
in
jp
mov
cmpsb
sti
xchg
test
xchg
mov
into
popa
xchg
aam
jp
mov
or
insb
mov
inc
je
and
dec
fs
loope
mov
push
xchg
mov
call
ss
jae
adc
fidivl
and
movsb
addl
mov
out
fidivrs
in
xor
enter
mov
ja
imul
dec
jb
jnp
cmp
dec
or
adc
subb
xor
mov
ja
aad
pop
ja
adcl
add
mov
imul
cmpsl
sbb
rclb
pop
cwtl
cwtl
fadds
jb
es
push
mov
pushl
popl
jmp
out
pop
adc
fsubrl
lret
mov
aaa
lret
jne
aad
dec
sub
sbb
aad
mov
fnstsw
outsl
imul
lahf
xor
xchg
cmp
jb
clc
push
arpl
mov
loopne
mov
lods
mov
mov
jp
sbb
std
mull
mov
and
fdivr
rcrb
or
xor
pop
aam
push
push
mov
pushf
push
call
or
mov
pushf
lea
jne
bts
clc
mov
push
or
mov
jmp
pushf
movl
pushl
lea
jmp
bt
push
stc
rol
test
cmc
sub
mov
pushf
neg
mov
add
jnp
sub
jmp
insl
cwtl
inc
xchg
mov
adc
push
or
daa
pop
lds
xor
mov
sub
sbb
mov
mov
xor
xor
adc
cmp
jbe
cmp
dec
stc
movsl
icebp
xchg
idiv
lahf
mov
jne
clc
push
or
ficomps
scas
xchg
adc
xchg
or
push
dec
aaa
inc
lcall
cmp
sub
add
repz
scas
mov
push
mov
movb
pushl
add
test
bt
jmp
pusha
mov
push
stc
jmp
push
jmp
mov
sti
mov
sub
or
lcall
add
xor
mov
push
xor
xchg
pusha
aad
lock
xor
adc
inc
push
dec
dec
imul
sbb
cmp
xor
mov
cmp
mov
jge
mov
jo
jecxz
inc
ljmp
mov
insb
push
int3
enter
pop
loop
xchg
dec
xor
jb
fldenv
les
ds
push
adc
pop
es
sub
jecxz
daa
dec
pop
jl
xchg
outsb
xlat
fistpl
arpl
icebp
sub
and
push
mov
push
movl
push
movl
pusha
lea
jmp
cmp
pusha
jmp
pusha
movl
pushf
lea
jmp
movl
call
bt
cmp
pushf
jmp
pop
movzwl
pop
movsbw
lea
lea
pop
lea
jmp
rcll
xchg
loopne
out
adc
xchg
and
daa
pop
jg
fwait
mov
roll
pushf
dec
pop
into
lcall
es
aad
inc
bswap
adc
ja
xlat
loope
aad
xor
push
in
in
mov
and
push
mov
inc
pop
and
jne
sub
push
mov
lea
jae
pusha
jmp
pusha
pusha
push
movl
movw
movl
mov
mov
lea
jmp
adc
rol
pop
cmc
lahf
movsl
jae
add
add
jns
int
imul
stc
push
cltd
repz
insl
gs
mov
adc
lds
into
test
inc
loop
push
inc
jbe
push
mov
push
call
pop
mov
lahf
mov
push
push
cwtl
movl
pop
setbe
setbe
bswap
lea
pushf
pushl
movl
call
cmpb
gs
ds
jmp
dec
add
cmc
out
mov
inc
add
mov
and
push
xchg
fldl
or
inc
push
mov
and
mov
stos
push
mov
and
and
ficompl
jmp
mov
or
decb
sbb
xchg
ret
dec
jge
fsubrl
pop
in
pop
ljmp
xchg
scas
and
mov
in
int
push
mov
in
cs
mov
mov
mov
in
int
lods
outsb
jecxz
dec
jecxz
int
insl
insb
jecxz
int
jecxz
mov
insl
int
or
mov
lods
jecxz
in
mov
insb
shrd
or
or
pavgw
push
lea
jae
jae
pushf
pushf
pushf
lea
jne
pushf
pushl
stos
pushf
movb
lea
jmp
stos
add
imul
fstpl
dec
aad
push
rol
gs
fucom
adc
sbb
sbb
imul
mov
xchg
cld
or
clc
in
sbbl
dec
insl
shlb
mov
mov
in
xchg
pop
and
pop
inc
xlat
jne
push
loope
movsb
pop
add
xchg
popa
mov
dec
lods
mov
adc
fdivp
push
mov
xor
fisubs
inc
xor
jne
push
mov
fisubrl
out
dec
in
data16
mov
ds
or
mov
add
pop
mov
mov
cmpl
in
cwtl
sbb
xor
repnz
mov
in
xchg
jbe
or
loop
push
pusha
cmp
stos
adc
lock
push
mov
push
push
dec
jmp
aam
jno
rclb
fwait
int3
out
mov
push
inc
cld
mov
push
sub
mov
pop
cmc
adc
insl
add
or
pop
loopne
rolb
push
inc
insl
jg
xor
scas
mov
mov
movsb
sahf
cmp
ljmp
push
mov
in
pushf
pushf
movl
pushf
pusha
movl
push
pushf
pushf
push
lea
jmp
pusha
movb
lea
jne
bswap
mov
pusha
lea
jmp
pushf
pushfw
popw
push
setle
mov
call
cmp
clc
jmp
bt
pushf
clc
and
add
jno
add
clc
add
pusha
dec
call
cmp
pushf
lea
jbe
and
shl
pusha
mov
push
setp
lea
add
mov
mov
shr
shld
add
pusha
neg
pop
movl
movzbw
add
cmp
shl
mov
cmp
bt
cmc
stc
cmp
pushf
jmp
pusha
lea
jl
pushl
pusha
pushl
ret
stc
mov
call
jmp
push
cmp
and
addr16
push
enter
je
mov
adc
cmp
mov
mov
in
loope
shl
mov
jecxz
imul
sbb
andb
sub
cmpsl
jmp
adc
daa
pop
int3
jnp
popa
dec
mov
mov
sub
ljmp
and
adc
or
mov
adc
xchg
xchg
and
xchg
loop
xlat
inc
mov
mov
add
cmc
ficomps
rcr
scas
stos
xchg
xor
test
push
movsb
je
sub
push
pushf
pop
insb
sub
out
inc
rcrb
ljmp
mov
add
pop
in
or
aas
xor
inc
pop
dec
fs
insl
cmp
loope
testl
dec
adc
inc
data16
lret
or
std
sysexit
and
stc
rcl
cmp
clc
xchg
push
mov
icebp
dec
dec
mov
call
mov
sub
jp
inc
and
jne
lods
dec
fldenv
add
lret
mov
jae
or
pop
insl
push
sub
xor
pop
cmp
inc
mov
dec
xchg
xor
mov
xlat
fsubr
int
stos
add
test
dec
mov
scas
push
mov
pusha
add
push
push
fwait
int
std
cmp
dec
pop
dec
shrb
cmp
and
adcb
cmpsb
pop
cmc
mov
jns
mov
in
movsl
adc
inc
icebp
add
int3
push
test
leave
les
imulb
mov
inc
inc
lret
std
daa
push
jbe
mov
cwtl
pop
lea
jmp
movb
cmp
call
sub
mov
rep
pop
jmp
bt
clc
stc
sub
cmc
cmp
push
mov
cmp
movw
lea
jae
pusha
pushf
lea
jmp
mov
push
pusha
lea
jmp
pop
xchg
pop
clc
or
jb
mov
adc
pop
xor
cmp
pop
jb
or
lret
icebp
cmp
cwtl
and
pop
lock
loop
lods
sub
mov
push
dec
mov
dec
inc
mov
push
sub
lock
fwait
or
add
fldcw
jecxz
mov
cmp
test
cli
inc
add
scas
xlat
popa
imul
ret
rorl
jbe
pop
xor
cmpsb
and
pushf
adc
push
mov
jmp
call
stc
bt
test
pushf
call
jmp
pushf
push
movl
mov
pushl
pusha
mov
mov
pushf
pushl
pushl
ret
insl
cmp
bound
xchg
push
pop
xor
cltd
jge
push
inc
movsb
mov
push
xchg
or
dec
adc
xor
shr
xor
mov
cwtl
in
xchg
push
sbb
ss
insl
imul
pop
data16
jecxz
pusha
push
jmp
nop
dec
in
xor
and
push
mov
movl
bswap
lea
pushl
push
pushf
movl
pushf
jmp
pushf
call
add
movzbw
jmp
jg
ffreep
leave
dec
or
lea
nop
mov
and
pusha
mov
shrl
cmpl
mov
aas
rorl
xlat
mov
sbb
nop
in
push
lea
repnz
xchg
sbb
inc
jb
or
xchg
cmp
out
or
pop
inc
jle
cmp
testb
scas
das
mov
push
sahf
jle
sub
bound
inc
xchg
test
sbb
in
clc
pop
inc
adc
jbe
sub
lret
imul
ret
mov
jmp
jge
xor
cwtl
add
cwtl
in
es
dec
add
lret
pop
repnz
add
mov
dec
je
orb
jge
or
fisubs
mov
lea
mov
stos
jge
fldt
mov
push
sub
push
rcrl
xor
sub
xchg
imul
sub
mov
mov
jecxz
mov
add
lock
cmpsb
mov
push
mov
aam
daa
dec
es
push
jns
sti
sbb
jb
sbb
push
fucomp
les
and
outsb
sub
fstpl
icebp
in
nop
dec
dec
push
cmpb
inc
push
dec
into
xchg
sub
mov
push
jle
lret
repz
popa
jle
mov
mov
pusha
pushf
pusha
mov
lea
jmp
mov
mov
pushf
lods
bt
pusha
rol
call
shl
jbe
cmp
mov
pushf
movl
cmp
call
out
shll
int3
adc
inc
cmp
bound
ret
cmp
enter
sbb
fs
xor
mov
or
lods
mov
pop
les
xor
ret
in
mov
jbe
stc
jns
ret
push
shll
dec
xchg
mov
mov
lea
ja
xor
add
add
and
mov
stc
bt
cmp
cmp
push
call
mov
and
dec
ficoml
jecxz
test
test
sarb
fidivrs
not
jo
jg
add
pop
mov
mov
adcb
subl
mov
xchg
add
sub
push
sbb
les
cmp
pushf
clc
cmpb
fmull
pinsrw
mov
gs
pop
clc
fdivr
inc
or
adc
push
mov
test
cmc
repnz
movb
movw
lea
jne
sub
or
mov
adc
sub
pusha
lea
lea
pushf
call
addr16
repnz
rcll
push
cmc
aad
xchg
and
xchg
adc
outsl
cmp
mov
cmpsb
notl
pop
xchg
in
lahf
xor
fildll
loop
pop
jg
pop
inc
ret
pop
dec
adc
pop
jle
into
inc
jbe
ja
jnp
pop
data16
push
xor
and
xor
cwtl
lcall
mov
setle
mov
pushf
and
test
add
pushl
pushf
pusha
lea
jmp
stc
push
sub
add
clc
or
push
lea
je
lea
jmp
and
out
adcl
scas
inc
xor
xchg
test
and
idivb
cmpsb
fs
negl
or
stos
loop
dec
mov
jmp
mov
push
sub
xor
roll
in
jmp
push
outsb
je
fsubl
add
mov
mov
bswap
or
add
mov
pushf
pusha
call
lea
jne
cwtl
movb
lea
push
lea
call
addr16
leave
jg
in
lahf
xchg
jne
popf
sbb
push
xchg
push
mov
dec
mov
pop
int
push
xchg
daa
out
loop
adc
jecxz
xor
sahf
pop
enter
ljmp
adc
lahf
inc
cld
push
inc
fstpl
dec
jge
cmc
push
imul
mov
fldlg2
daa
cmpsb
call
pushf
mov
pushf
bswap
not
pushl
popl
jmp
call
in
push
xor
mov
xchg
clc
xchg
adc
rorb
or
xchg
test
xchg
and
mov
jb
or
jp
mov
push
pop
xchg
in
sub
adc
adc
pop
dec
mov
daa
xchg
and
pop
sbb
scas
sub
mov
icebp
jp
push
pop
cmpb
sbb
cmp
xlat
push
xchg
inc
cmc
add
pop
mov
cmp
mov
imul
in
xchg
push
insb
mov
fstps
call
cld
movl
call
movb
push
jmp
mov
lea
jae
call
pusha
lea
je
not
movzbw
jmp
dec
jmp
lea
je
sub
bts
mov
neg
add
inc
xor
jbe
mov
pusha
bt
bt
test
jmp
jne
call
inc
pusha
setl
inc
pusha
not
inc
inc
inc
pushf
adc
xchg
inc
mov
mov
mov
stc
xchg
clc
sar
mov
jmp
mov
pushf
pusha
movw
lea
jmp
pushf
jmp
not
lea
setnp
not
pop
pushf
movb
lea
ja
jmp
inc
movsl
mov
pushf
repz
or
xchg
or
add
inc
pop
ds
pop
cmp
jl
pop
subb
mov
pop
pop
jg
inc
jmp
scas
mov
push
push
mov
sti
push
out
push
andl
insb
mull
imul
adc
adc
lahf
mov
rcrb
cltd
mov
xor
mov
pop
jb
or
pop
jl
repnz
xadd
mov
inc
add
pop
icebp
sbb
lea
sub
inc
adc
push
mov
jle
cld
mov
ja
fcompl
pop
sbb
jecxz
imul
xchg
xchg
jg
repnz
jl
mov
mov
mov
sub
int3
jge
outsb
pusha
push
bound
test
push
imul
aas
jp
std
fs
pop
adc
cmpsb
xchg
pop
ja
in
movb
lret
fnstsw
mov
rcrb
rclb
mov
pop
push
inc
xchg
cmpsb
addb
inc
cwtl
cmpsb
lret
push
mov
jmp
jmp
btr
and
shl
aas
push
test
mov
or
sub
pusha
aad
aas
rcr
mov
sub
rcr
call
lea
jae
clc
cmp
pushf
jmp
jmp
pushf
movsbl
lea
jmp
ror
pushf
jmp
pusha
pusha
clc
add
pushf
cmp
call
dec
aaa
mov
cmp
movsb
dec
pushf
call
mov
pop
add
lea
ror
mov
and
add
sub
je
mov
dec
push
cwtl
or
inc
fwait
inc
mov
mov
add
sub
xor
insl
scas
sbb
push
push
mov
jmp
clc
cmc
cmp
neg
clc
lea
jb
pusha
cmc
cmp
movsbw
call
notl
lahf
lods
daa
adc
xlat
mov
lahf
jno
mov
daa
clc
dec
call
andl
and
xor
sub
outsl
jo
push
sub
add
out
mov
pusha
dec
rolb
xor
into
and
ret
mov
fadd
push
inc
sub
adc
inc
call
xchg
pop
inc
roll
les
cmp
movsb
fidivl
add
daa
daa
lcall
out
gs
xor
mov
loopne
mov
fdivrl
xchg
mov
cmpsb
and
and
leave
cmp
mov
mov
xor
pop
push
cmp
mov
xor
adc
movb
push
mov
lcall
or
adc
mov
push
repnz
stos
jnp
lock
in
inc
out
test
mov
mov
mov
xchg
adc
pop
cmp
int
mov
movsb
push
push
cld
pop
sti
aaa
repnz
repz
push
add
rclb
movsb
mov
jns
lret
mov
inc
stos
xor
flds
jae,pt
mov
sub
xlat
mov
ficoml
rolb
lods
jp
mov
xchg
in
mov
or
xor
inc
push
ret
loopew
cmp
push
pop
lds
inc
pop
jo
ss
aas
push
lret
je
addl
pop
fldenv
push
ret
inc
loop
and
stos
in
add
aas
ss
push
cmp
jns
push
es
inc
ds
nop
or
pop
push
push
cld
fidivl
or
jg
xchg
repnz
std
jb
cld
mov
cmp
movl
and
pusha
mov
xor
loopne
popf
push
sub
lock
ret
sub
lock
cmp
mov
test
xchg
cli
sbb
in
sarb
sbb
xchg
push
shlb
lock
xor
sub
sbb
in
mov
std
iret
xor
push
hlt
cmp
rcl
push
mov
pop
adc
pop
mov
cmp
mov
mov
sbb
mov
lcall
inc
bound
loope
or
or
mov
or
dec
mull
leave
mov
in
clc
and
mov
mov
jno
outsb
std
call
jg
jb
rclb
inc
shll
ljmp
movsl
push
mov
shll
lret
inc
mov
mov
inc
cmp
jl
nop
push
in
mov
inc
cmp
and
jmp
xor
and
xlat
fiadds
test
daa
dec
mov
aaa
aaa
mov
aaa
stos
xor
cli
push
mov
sbb
mov
leave
mov
mov
decl
adc
pop
or
pop
jecxz
popa
repnz
pop
movsb
aas
les
jno
icebp
lock
sarb
or
jne
out
movsb
sub
pop
mov
insl
xchg
mulb
sbb
inc
add
push
mov
das
add
xor
mov
push
sarl
lret
jo
sbb
movsl
dec
sbb
call
mov
and
push
js
ret
stos
shlb
andb
mov
cmp
ret
adc
mov
out
adc
xor
pop
mov
call
in
repnz
pop
popf
clc
rorb
cwtl
mov
xchg
int3
and
and
icebp
es
cmp
jge
scas
jb
mov
adc
or
push
lcall
xor
jo
mov
cmp
mov
xor
add
and
outsl
and
mov
sbb
cld
shl
mov
push
lock
fwait
cltd
sub
arpl
pop
sub
iret
jle
push
adc
fcomps
cs
mov
sub
xor
and
testb
xchg
mov
xor
out
daa
inc
stos
or
imulb
adc
aas
lods
inc
cmp
or
xor
jmp
fisubrs
pop
mov
ret
jb
out
mov
push
insl
cmp
jmp
jle
xchg
mov
and
clc
xor
mov
stos
mov
fisubrs
negb
push
sbb
sub
fxch
pop
adc
fmuls
adc
sbb
js
shlb
cld
movsb
jns
mov
mov
aas
loope
in
mov
in
or
xor
push
xchg
push
or
inc
mov
movsb
std
sub
mov
sbb
add
jge
and
or
sbb
mov
pop
repnz
mov
cs
mov
sub
mov
aam
jo
jle
js
sbb
cmp
mov
clc
repnz
jb
mov
pushf
mov
sub
popa
arpl
clc
mov
push
dec
jno
and
pop
push
inc
xchg
adc
jne
jns
cmpb
cs
ljmp
adc
mov
and
mov
xchg
push
stos
pop
jecxz
daa
mov
shl
imul
fsubl
add
mov
sub
lock
fnstcw
jge
push
rorl
cld
les
sbb
mov
cmp
xchg
lds
pop
ret
jnp
lcall
sub
sbb
cmp
xor
push
xchg
fstl
adc
mov
lods
movsb
cmp
jnp
adc
enter
jb
jle
stos
mov
imul
mov
arpl
enter
into
jle
mov
mov
pop
movsb
mov
ret
ret
inc
pop
inc
jge
push
cmpsb
pop
cmp
insl
daa
pop
xor
movsl
adc
shll
jno
adc
daa
rcrl
jmp
stos
and
std
adcl
inc
jmp
pushf
mov
sbb
arpl
dec
jmp
mov
and
std
ror
xor
inc
cli
mov
mov
mov
mov
xor
jmp
gs
mov
mov
or
hlt
cmp
movsb
je
ss
das
mov
pop
jo
mov
repnz
sbb
mov
mov
les
mov
jecxz
push
sarl
popa
aas
aaa
cltd
add
loop
mov
aas
cli
xor
mov
lret
rorl
loop
int3
push
mov
cmp
jecxz
arpl
xchg
mov
aaa
adc
xorl
jne
mov
or
test
xor
test
pop
rclb
cmp
xchg
push
adc
lret
shlb
cmp
leave
test
mov
push
aad
cld
sbb
aaa
jns
sarb
mov
or
push
js
and
stc
push
xchg
sub
pop
jle
mov
mov
cmp
or
shlb
lods
cmc
push
shll
dec
fiaddl
mov
popa
push
fisttps
and
xorl
pop
mov
fidivrs
iret
fs
pop
dec
aas
mov
jns
dec
mov
vmwrite
pop
in
mov
jle
movsl
mov
insl
inc
cli
sub
xor
jb
mov
gs
push
mov
icebp
nop
mov
sub
dec
mov
add
into
lea
push
das
jo
adc
lock
int3
inc
push
jo
add
clc
mov
ja
mov
jp
shlb
ljmp
ljmp
cld
mov
mov
std
ss
leave
data16
sbb
pop
jle
push
add
push
jge
insl
mov
mov
xor
mov
adc
outsb
xchg
sub
push
outsl
lock
dec
loop
ret
adc
int3
imul
in
jnp
mov
enter
fadds
push
push
mov
int3
inc
ja
fwait
adc
sbb
lock
jle
repnz
shr
xor
or
jo
and
daa
enter
int
cmc
adc
test
and
xor
push
stc
or
fs
mov
sbb
fidivl
pusha
xor
aam
and
js
cmpsb
sub
lock
int3
fwait
dec
jl
sub
js
push
mov
pushf
xchg
xchg
pop
jecxz
mov
imul
ret
rorb
fldcw
jmp
test
imul
mov
clc
lods
mov
mov
std
icebp
fidivl
mov
push
rcl
sub
jg
clc
bound
inc
xor
aaa
rol
push
mov
mov
idivb
pop
in
jmp
popf
mov
enter
add
ljmp
jo
mov
xor
jb
xor
fcoml
repz
fistpl
lods
std
aad
pop
add
in
out
lods
mov
cmp
fbld
mov
xor
pop
das
sub
jbe
mov
sbb
mov
cmp
nop
repnz
sbb
adc
loop
dec
mov
mov
pop
jae
jnp
xchg
mov
jge
lds
cmpb
dec
sbb
mov
and
cli
mov
data16
mov
fwait
inc
dec
adc
adc
sbb
movsb
xor
sahf
aaa
in
mov
test
movsb
jnp
sbb
clc
fsubs
mov
cmp
xor
jbe
aaa
lea
outsb
push
pop
mov
cld
sub
mov
aam
shll
test
push
fists
xor
xchg
or
push
popf
not
daa
or
cli
sbb
mov
ja
mov
insb
fidivrs
adc
das
arpl
pop
pop
mov
enter
mov
popf
and
jns
dec
lock
jle
rcll
iret
movsl
call
xchg
xor
aaa
inc
add
adc
fimull
repnz
cs
out
inc
lods
lret
xchg
cmp
push
xchg
mov
testl
mov
subl
pop
jmp
cmp
movsl
sbb
cld
dec
lds
adc
data16
push
ja
pop
cli
sbb
mov
and
jae
pop
mov
adc
add
icebp
fdivr
mov
aas
xor
mov
decl
adc
mov
push
dec
jl
leave
call
xor
dec
mov
mov
or
inc
ficoml
sbb
cld
pop
stos
fcomip
lret
and
mov
sbb
loop
mov
xchg
push
ds
pextrw
push
cmp
cmpsl
pop
je
popf
inc
sahf
ds
cmp
xchg
ret
pop
popa
or
fidivrs
bound
fstl
add
cwtl
mov
xor
cmp
xor
add
test
cmc
or
lahf
xor
mov
movsl
aas
pop
icebp
lock
sub
je
ss
fsubrl
cli
loopne
add
inc
pop
add
nop
push
push
mov
cmp
dec
adc
scas
add
mov
les
fsubp
pop
jle
lahf
shll
fcompl
je
push
and
into
aaa
loopne
out
xchg
shll
cs
push
xor
out
aas
add
mov
cmp
jbe
addl
mov
daa
push
xor
aad
test
fnstenv
cmp
out
movsb
ljmp
pop
daa
mov
sub
outsb
jae
popa
sub
rcrb
icebp
mov
jno
cli
pusha
ljmp
xchg
and
in
pop
dec
cs
add
sbb
sar
or
xchg
mov
cltd
lds
imul
comiss
push
add
mov
add
push
xor
jno
push
mov
and
or
inc
out
push
adc
mov
cli
clc
push
cmpsb
dec
aaa
or
mov
push
jb
scas
ljmp
mov
int
mov
xor
mov
aaa
mov
callw
lret
cld
in
sbb
andl
outsb
cmp
pusha
fiadds
lds
cmpsb
pop
sarb
shll
mov
add
movsb
fnstsw
jp
std
loopne
jno
je
sub
mov
mov
in
mov
gs
sahf
or
pop
lahf
cli
pop
xchg
dec
cmp
and
ret
mov
clc
roll
cwtl
loop
stos
fnsave
jo,pn
inc
pop
cmp
or
aaa
dec
sub
movsb
add
jae
fnstsw
push
daa
cmpb
mov
daa
xor
jecxz
jg
sbbb
aam
stos
xor
mov
jns
cmc
and
pop
mov
and
jno
jbe
sarb
sub
movsb
jl
mov
xor
add
mov
sub
jae
push
aam
in
fstpl
gs
lods
push
and
icebp
mov
scas
mov
xor
filds
xorb
test
adc
or
inc
out
ja
xor
enter
sbb
pop
vpaddusw
shlb
xor
inc
mov
mov
into
clc
jnp
sbb
es
insl
cmp
push
xlat
gs
sub
xor
mov
xorb
int
inc
cmp
cmp
jns
fcmovne
or
xchg
cli
pop
ss
mov
fwait
sbb
mul
inc
fmuls
adc
in
inc
sbb
add
aaa
mov
imulb
sbb
jle
stos
pop
jle
lea
mov
jb
dec
push
stc
dec
jb
shlb
mov
xor
outsl
das
pop
cli
shr
loopne
scas
aas
inc
mov
dec
mov
mov
cmp
sarb
mov
pop
pop
xchg
imul
aaa
push
pusha
add
cli
adc
xchg
push
adc
lods
mov
jecxz
xor
cmp
clc
roll
push
and
xchg
shr
xchg
xor
cmp
mov
mov
pop
sub
cmp
cld
les
cs
outsl
sarb
mov
mov
loopne
fs
mov
xchg
push
hlt
sarb
in
lahf
pop
ja
push
push
std
xor
icebp
jb
lret
push
cmc
pop
movsb
xor
cmpsl
mov
cmp
adc
pop
lock
loopne
add
popa
pop
push
jecxz
dec
pop
sbb
xorb
out
cmp
lock
dec
push
mov
xor
mov
mov
sbb
stos
mov
dec
cld
inc
arpl
icebp
xchg
lahf
push
push
sbb
xchg
inc
je
xchg
mov
and
popf
jg
cmpsb
cli
jle
push
jb
ficomps
dec
icebp
adc
sub
movsb
in
jmp
je
mov
shlb
dec
repz
xor
inc
jle
and
out
add
cltd
sub
mov
and
orl
leave
mov
xor
mov
mov
xchg
push
jge
adc
mov
mov
cli
lds
rcrl
mov
mov
lock
add
adc
inc
adc
and
xchg
mov
ret
mov
dec
xor
push
fists
mov
cmp
inc
stos
scas
shl
sbb
jb
aam
sub
fwait
mov
mov
xchg
mov
mov
xchg
xor
inc
and
call
xor
sbb
into
mov
xor
cmp
or
cld
scas
sbb
lods
outsb
inc
cli
push
shll
repnz
mov
cmp
sbb
test
mov
les
mov
aaa
loopne
loop
sbb
inc
mov
mov
jne
movsb
and
and
ret
stos
daa
mov
or
lahf
add
mov
jns
cmpsl
jl
mov
or
or
xchg
push
das
mov
scas
test
dec
repnz
xor
add
add
add
sbb
pop
ret
movntps
or
mov
das
mov
mov
pop
aas
xchg
fists
xor
pop
dec
daa
mov
lahf
and
pop
xchg
mov
jecxz
stos
es
sbb
jo
flds
das
inc
movsl
pop
or
in
dec
lock
and
jo
dec
fsubs
sbb
rol
sbb
repnz
cmpsb
cmpsb
xor
mov
cmp
mov
sti
push
inc
push
mov
add
jne
repz
sbb
aaa
mov
pop
aam
out
jb
adc
sbb
loope
add
mov
out
push
stos
pop
addr16
aaa
shll
mov
and
mov
push
mov
loopne
es
dec
add
enter
mov
bswap
call
dec
out
sbb
mov
pop
push
mov
fcoml
sbb
aaa
xor
push
cwtl
xchg
xchg
cmp
cmc
or
mov
cmp
xchg
and
arpl
cmp
add
sbb
add
negb
jg
push
loop
push
shl
mov
xor
mov
test
adc
push
jb
repnz
add
shl
dec
push
arpl
hlt
aaa
or
ret
mov
insl
add
mov
mov
daa
out
ret
push
cmpsl
xchg
sbb
inc
sub
mov
incl
and
mov
inc
nop
out
aam
pop
pop
mov
mov
push
xor
je
aaa
outsb
jbe
push
and
push
out
mov
xchg
mov
push
xchg
push
ds
aam
repnz
xor
mov
jns
mov
xchg
pop
daa
mov
sti
sub
aaa
cmc
cmp
repz
adc
mov
icebp
cmp
jl
sbb
pop
mov
and
jle
nop
inc
and
jecxz
loopne
sbb
jo
pop
mov
xor
dec
sub
jae
ret
mov
rcl
clc
jbe
jno
dec
jb
dec
movsb
inc
in
test
adc
sbb
ret
or
jg
stc
mov
push
mov
xchg
push
in
mov
mov
js
push
hlt
out
sahf
repz
push
ret
cmpsl
test
ret
add
arpl
mov
xchg
in
push
mov
mov
lock
daa
hlt
inc
inc
fwait
out
sbb
ret
xchg
lret
in
mov
into
in
call
jbe
or
rcrb
adc
inc
xor
sub
imul
sub
mov
out
sarl
pop
movsb
mov
mov
and
aas
push
mov
mov
loop
jbe
jp
ret
test
mov
adc
sbb
and
xchg
repnz
mov
mov
mov
scas
mov
dec
rcl
or
and
jb
repnz
mov
movsb
mov
and
sub
mov
int
mov
arpl
or
mov
or
sbb
cmp
ds
jns
push
clc
lret
pushf
sbb
das
mov
dec
push
xor
std
mov
lcall
mov
push
and
stos
xchg
add
nop
ljmp
adc
and
icebp
jmp
jae
cmpsl
adc
mov
sbb
test
popa
aas
data16
mov
sbb
mov
sbb
dec
aas
outsb
mov
cmp
ja
mov
ret
pop
or
leave
cmp
scas
aam
mov
jno,pt
fldln2
leave
cmp
lock
negl
push
push
mov
lds
and
lea
negl
jle
mov
mov
inc
mov
push
jb
outsb
xor
movsb
dec
and
jg
std
inc
mov
adc
aad
loope
aad
xchg
mov
dec
pop
vunpckhps
xchg
cmp
cmp
movsb
xor
pop
out
sub
inc
or
aad
ljmp
sbb
cmp
nop
sbb
mov
imul
aaa
adc
push
cmc
xor
mov
jae
jmp
lock
mov
mov
mov
mov
push
push
rclb
cmpsb
mov
cmp
sub
daa
pop
cld
stc
daa
cmp
movsb
leave
int3
push
cmp
push
jmp
sbb
in
push
cmp
push
push
adc
push
pop
cmc
mov
mov
loope
fsubs
mov
in
fnstcw
jge
scas
scas
je
mov
mov
js
int3
sub
adc
or
rcll
push
dec
push
jp
add
fld
and
push
inc
faddl
arpl
inc
ficoms
fnstcw
or
mov
stos
mov
mov
push
xor
test
adc
pop
mov
mov
cmp
cmpsb
xor
je
jbe
cli
add
clc
popa
and
push
dec
popf
jbe
dec
adc
mov
xor
mov
inc
test
adc
cmp
and
lahf
das
ljmp
sub
aam
jmp
push
adc
shll
inc
jo
out
cli
cmp
clc
mov
mov
mov
sti
sbb
xor
movsb
sbb
outsb
jge
sarb
aad
adc
push
add
lods
xchg
aam
mov
inc
push
mov
sub
or
call
cwtl
mov
rcl
push
mov
fsubs
stc
cmp
cwtl
mov
movsl
addr16
xor
inc
aad
sub
mov
repnz
insb
and
cmp
not
mov
fsts
xor
outsl
xor
jmp
pusha
mov
in
daa
add
mov
jns
jge
sub
or
xchg
mov
dec
or
ds
loop
leave
fmuls
movsl
icebp
add
in
test
pop
push
or
ds
cmp
push
cmp
rol
sbb
imul
adcl
in
inc
outsl
movsb
pushf
mov
mov
cmpsl
ss
cmpsb
daa
movsb
inc
test
jp
outsl
fcmovu
loopne
stos
addr16
in
sbb
in
cmp
shrb
sbb
add
mov
rorl
pop
jns
out
mov
sbb
and
idivl
xchg
xchg
and
stos
cmp
jmp
out
clc
jae
insl
mov
jle
xor
and
fwait
sub
daa
xchg
jae
sar
roll
lock
lods
out
push
mov
addr16
loopne
cmp
sub
das
loopne
and
outsb
adc
nop
sahf
int
lret
sbbl
cs
inc
addl
clc
adcb
pop
popf
scas
in
jg
push
jnp
pop
fisttpll
jp
push
mov
cmp
and
push
xor
jae
in
inc
inc
nop
add
xor
ret
mov
xchg
and
add
adc
jge
shr
adc
dec
je
sbb
mov
aas
daa
pop
inc
js
sbb
repnz
mov
in
pop
mov
mov
push
xchg
and
pushf
lret
cli
inc
pusha
jmp
sub
jp
inc
xchg
push
adc
adc
and
sbbl
dec
leave
stos
jmp
mov
add
push
jecxz
test
lea
repnz
inc
adc
mov
scas
fwait
cmp
mov
xor
and
xorl
fs
cmp
adc
cmp
jo
lods
in
mov
mov
xchg
fidivl
inc
or
cmpsb
imul
test
and
add
mov
mov
inc
mov
mov
add
sub
sbb
leave
lock
movsb
rclb
ret
inc
adc
gs
inc
mov
scas
movsb
sub
dec
pop
cwtl
mov
out
jno
aam
loopne
fisttpl
out
test
mov
cmp
mov
mov
cmp
cmpsl
push
data16
ljmp
mov
roll
in
and
adc
mov
xchg
jb
mov
jns
pusha
in
xchg
lods
fldenv
dec
cmpl
lock
inc
xor
jmp
cmpsl
ds
mov
xchg
clc
jo
adc
popf
movsb
outsl
icebp
movsb
sahf
out
shrb
shl
in
mov
std
xchg
cmp
add
stos
xchg
mov
sti
jno
add
lds
in
les
je
cld
loopne
inc
flds
cmpsl
jp
sub
jb
jno
out
xchg
add
das
sar
cmp
sub
scas
jge
mov
mov
mov
repz
sbb
adc
push
mov
les
mov
ss
das
push
push
xor
or
mov
mov
mov
sub
dec
repnz
in
cmp
divl
das
ret
mov
adc
jae
stc
inc
mov
sub
jne
jne
scas
es
loop
or
ret
mov
sti
push
clc
stc
xor
mov
ror
jne
daa
psubd
xor
jg
ret
and
dec
cmp
pusha
and
xchg
push
xchg
add
popf
or
fbstp
paddd
pop
pop
mov
adc
mov
add
jmp
jp
or
or
jle
movsl
mov
or
fidivl
clc
pop
pop
mov
rcll
sub
and
fprem
cwtl
jp
mov
mov
jns
popf
mov
sahf
inc
pop
loopne
call
test
mov
adc
icebp
adc
dec
mov
push
test
pop
mov
lea
push
adc
mov
cmp
shrb
movsb
rcll
out
jo
data16
or
dec
scas
out
js
jns
pop
lods
mov
jo
jl
add
scas
and
jae
jl
mov
stos
clc
mov
ss
mov
out
out
lahf
andb
lods
adc
xchg
aaa
dec
scas
dec
mov
mov
out
sub
cmp
loop
movsb
mov
mov
sbb
into
adc
mov
addr16
arpl
movsl
ret
cmp
inc
and
inc
ja
mov
repnz
jecxz
inc
adc
or
xchg
mov
push
cmovg
inc
es
sub
test
mov
lock
mov
pushl
jp
daa
arpl
gs
mov
stos
in
inc
push
imul
mov
inc
xor
inc
stos
lods
les
enter
sub
sub
movsl
aaa
out
add
lret
xor
daa
jb
es
mov
push
fwait
loop
movsl
xor
xor
cmpsb
push
mov
jecxz
mov
std
leave
sbbb
push
ljmp
mov
psubd
mov
jle
xchg
jecxz
mov
jbe
cmpsb
mov
cmp
shll
mov
int
lods
pop
cmp
daa
shl
cli
std
push
pop
jbe
inc
pop
out
cmp
jae
leave
stc
lds
movsb
bound
cmc
jo
cmp
and
xor
or
cmc
xor
jge
jno
dec
daa
lret
add
shl
jecxz
adcl
jno
test
or
or
jl
mov
push
jecxz
repz
cli
jle
je
xor
push
push
repnz
scas
xchg
cwtl
jnp
or
movsb
je
es
mov
cli
push
sbb
mov
xchg
mov
mov
mov
cmp
xlat
jb
push
mov
sahf
ret
mov
cmp
fisubl
pop
xchg
jne
mov
mov
and
mov
fwait
repnz
mov
pop
push
jbe
into
sub
add
and
inc
call
jmp
loop
and
out
lret
leave
dec
pop
loope
cmpsb
stc
aaa
ljmp
push
cmp
mov
mov
subb
roll
in
cmp
insl
mov
rcrl
movsb
xor
in
add
lods
sbb
repnz
mov
add
ret
shlb
jno,pt
mov
sbb
or
xchg
fsts
pop
inc
adc
cmp
daa
fistpll
jo
xchg
ljmp
cltd
jg,pn
lahf
inc
cmp
or
test
aaa
cld
movsb
jnp
jb
frstor
imull
cmp
and
mov
jmp
stos
mov
loope
repz
push
push
test
dec
pop
adc
adc
repnz
add
mov
mov
or
mov
push
jo
cmp
aam
cmp
sbb
or
std
loop
dec
inc
jp
mov
pop
repnz
scas
jg
pop
scas
ljmp
push
mov
ljmp
pop
cmp
dec
mov
push
outsl
sarl
and
jb
pushf
sahf
and
sbb
mov
dec
pop
mov
xor
mov
lret
loop
loope
mov
addr16
lock
aaa
adc
decl
pop
xchg
xor
pushf
aas
cmc
adc
mov
sbb
mov
and
lahf
cmp
sahf
push
fldcw
mov
lock
loopne
inc
sub
movsb
or
repnz
imul
cli
repnz
ds
mulb
insl
mov
repz
xchg
mov
jbe
lea
incb
jns
inc
adc
es
sbb
mov
jge
aas
mov
dec
cmc
sbb
std
xor
lea
rcll
inc
xchg
and
mov
movsl
mov
mov
dec
mov
cmp
cmp
mov
or
jbe
jp
std
dec
iret
daa
js
jl
lcall
add
out
test
mov
mov
sti
in
int
ljmp
ret
pop
popa
jae
mov
mov
xchg
jo
jb
push
icebp
je
mov
mov
in
imul
dec
fstl
push
jecxz
je
and
hlt
jo
repnz
in
sbb
pop
andb
dec
adcl
dec
mov
xor
movsb
fmull
adc
ret
jecxz
ds
jno
jne
lock
leave
jp
xchg
ja
sarl
cmp
mov
les
mov
shrb
adc
sbb
jg
daa
pop
movsl
popa
push
or
fistl
fildl
mov
xor
std
xchg
es
sbb
loop
mov
scas
icebp
mov
xor
test
push
cmp
push
jge
xor
in
adc
add
mov
mov
mov
push
sub
and
push
pusha
jle
pop
repnz
loope
xchg
addr16
in
push
je
enter
xor
inc
adc
out
es
mov
repnz
push
xor
aam
sub
mov
xchg
popa
fldenv
cmpsb
xchg
jecxz
push
scas
adc
int3
add
mov
mov
icebp
shll
in
fdivl
mov
repz
int3
or
gs
call
push
push
rorl
xor
sahf
addb
das
lods
int
shlb
xor
imul
lock
test
clc
nop
mov
mov
adc
jno
sub
pop
out
jecxz
cmp
sub
fscale
jp
mov
mov
js
cli
and
stos
mov
in
aas
ja
dec
dec
add
js
arpl
and
sbb
jecxz
xor
dec
adc
movsb
jno
jno
inc
les
out
shl
pusha
imulb
cmp
enter
fnsave
test
in
pop
ror
xchg
pop
mov
dec
inc
mov
mov
jge
scas
lret
ss
push
mov
mov
imul
cmp
cmp
add
dec
fsts
push
sub
and
in
sub
shll
jo
xor
add
inc
jo
or
les
cmp
int3
aas
outsb
mov
loope
adc
mov
movsb
add
out
mov
adc
fsubrl
lret
mov
into
popf
lret
ror
mov
mov
jp
and
pop
jg
xlat
mov
push
xorl
push
xchg
aaa
cmp
cmp
sti
mov
mov
mov
inc
movsb
lock
mov
shll
push
sub
lock
xchg
dec
std
movsb
cmp
mov
lock
adc
or
les
dec
xchg
pop
repnz
push
push
cmp
push
cmp
xchg
negl
jne
outsb
shlb
shlb
sub
lcall
cmp
fnsave
mov
mov
sub
popa
mov
repz
cmp
cmpl
fdivrs
in
xor
xchg
sbb
rcl
jmp
arpl
inc
mov
adc
jo
push
push
push
out
gs
rol
lahf
jmp
inc
loope
or
hlt
xor
movsb
push
ret
leave
int
fwait
inc
shll
mov
shll
pushl
icebp
mov
shrl
adc
mov
xorb
nop
rolb
mov
sub
add
jnp
mov
lock
and
jle
repnz
xchg
mov
push
jmp
mov
push
es
repnz
shl
adc
test
inc
mov
subb
lods
push
or
jb
cmp
jge
icebp
sbbl
lods
negb
lods
and
mov
jp
mov
xlat
jbe
sub
ljmp
pop
push
add
cwtl
in
test
sahf
hlt
gs
add
loopne
push
adc
sbb
mov
test
push
jecxz
add
bnd
in
and
push
scas
push
mov
sbb
sbb
xlat
and
hlt
sbb
fdivrs
sub
roll
push
popf
pusha
stos
gs
aaa
sahf
aad
jp
add
and
adc
add
cmp
mov
fwait
ljmp
xor
outsb
mov
inc
loopne
daa
mov
cmc
and
pop
pop
sahf
ss
mov
sarb
repnz
xchg
sahf
mov
jle
pop
mov
mov
mov
fadd
inc
adc
pusha
sbb
xor
mov
jo
lret
add
fiadds
adc
and
mov
jecxz
sbb
push
mov
repz
mov
cmp
pop
icebp
xchg
shll
notl
test
test
movntps
pop
jns
cltd
dec
aas
in
xchg
js
scas
pop
pushf
btcl
sbb
or
repnz
adc
imul
dec
jnp
xor
movsb
imul
int
fisubrs
movsl
stos
ret
es
and
iret
fwait
mov
xchg
int
jge
and
test
mov
mov
mov
pop
xchg
jl
shrb
sub
push
adc
in
clc
insb
adcb
xchg
jno
mov
or
adc
sub
pop
dec
das
mov
fadds
push
in
arpl
sub
lcall
insl
es
jb
pop
int3
shrl
mov
pop
dec
daa
inc
mov
xchg
inc
jle
xlat
mov
shl
pop
jecxz
shlb
xor
inc
dec
pop
pop
test
jge
fists
in
cli
aaa
jecxz
popf
mov
mov
mov
mov
sbb
xor
pop
push
adc
mov
inc
or
mov
sarb
mov
dec
xchg
and
cli
lahf
imul
sahf
mov
insb
dec
stos
aam
jbe
shll
cli
mov
jl
jecxz
dec
leave
sahf
adc
push
lds
adc
xchg
push
push
dec
jmp
mov
test
jmp
push
daa
out
push
cmpsb
fiadds
aad
and
mov
dec
xchg
push
jle
cmp
ds
cli
call
pop
scas
inc
push
cmp
sub
das
stos
loopne
aam
xor
fs
mov
mov
cmp
aam
dec
cmpsl
rclb
xchg
push
adc
insl
mov
push
inc
pop
scas
xlat
js
dec
js
out
jno
inc
rorb
push
es
ret
push
mov
rcrb
mov
adc
popf
imul
icebp
pop
in
jo
leave
loopne
mov
sbb
lock
cmp
push
addb
xor
jecxz
repz
xchg
dec
cs
das
icebp
retw
and
mov
or
xor
out
dec
pop
mov
mov
xchg
dec
aas
shl
mov
cld
xor
stos
and
inc
movsb
xchg
sub
cmpsl
cli
sbb
in
fmull
adc
dec
xor
mov
and
pop
ljmp
mov
jbe
loopne
fiadds
int
mov
sbb
notl
adc
mov
in
pop
imul
cmp
push
sbb
push
notl
in
fildll
cmp
cmp
add
and
sti
shl
xor
testb
das
pop
push
jmp
xor
mov
lods
xchg
mull
mov
and
mov
jb
inc
inc
jo
jns
call
push
ret
data16
mov
xchg
and
push
in
push
xor
jmp
pop
daa
mov
dec
add
test
mov
ffreep
lock
jl
les
ss
daa
stos
lods
mov
jg
ds
cli
cltd
cld
jne
call
mov
add
sbb
pop
inc
shll
add
mov
jmp
loop
out
mov
js
sub
rol
mov
xchg
dec
mov
dec
mov
loope
mov
fsubl
or
pusha
in
ds
sub
inc
or
movsb
xchg
lret
xor
push
mov
mov
lret
mov
cmp
pop
mov
sub
scas
cltd
dec
jne
loopne
int
pop
rcll
jle
jo
int3
fidivrs
adc
fwait
push
add
cmp
std
and
insl
mov
cmp
dec
xchg
addr16
jb
cmp
jle
popf
jle
in
cmp
fidivl
or
in
or
cmc
jle
outsb
cld
jge
dec
sub
cld
mov
cmp
jb
mov
push
pop
je
xchg
movsb
cli
pop
nop
out
mov
push
xorb
rclb
out
xchg
jg
push
xor
jl
and
repnz
movsl
daa
cmp
mov
js
mov
testb
cmp
mov
lea
aas
daa
sti
cmp
sbb
shll
mov
jns
mov
aas
aam
xchg
xor
sbb
jp
jne
test
pop
mov
std
and
mov
fidivrs
mov
in
es
aaa
jae
jae
mov
push
stos
xor
movsb
daa
add
xor
or
hlt
mov
push
mov
leave
sub
jb
adc
shr
out
xor
mov
adc
cmc
scas
mov
ss
push
dec
sti
stc
fdivs
pop
std
movsb
test
mov
addb
fsub
test
xor
and
xchg
adc
in
xor
imul
stos
adc
aaa
loop
jecxz
aad
xor
test
cmp
xchg
rorl
push
push
fidivrs
pop
mov
lods
xchg
lcall
fidivs
mov
jecxz
dec
aaa
xchg
andb
repz
and
rorb
aaa
push
ret
mov
ljmp
inc
cmp
mov
inc
mov
or
loop
cli
notb
dec
iret
sar
jl
clc
inc
xchg
out
in
icebp
xchg
xor
movsl
push
adc
and
and
jae
rorb
jecxz
test
cli
push
lret
std
imul
and
cmp
aas
or
jle
mov
mov
andl
push
xchg
xchg
inc
pop
ljmp
dec
pop
or
jbe
lea
jg
mov
or
test
fmuls
xor
jmp
adc
pop
pop
in
imul
jbe
mov
ljmp
jb
ja
mov
aad
jmp
mov
inc
out
push
mov
insl
fisubs
ret
into
adc
in
add
jecxz
inc
adc
popa
pop
sbb
outsl
fimuls
loope
out
cmp
jo
and
inc
jae,pn
or
cmp
pop
stos
pop
mov
cmpsl
mov
mov
mov
movsb
lods
ficomps
push
and
adc
ljmp
jb
in
fmul
pop
xor
nop
je
call
ss
jecxz
test
pusha
ljmp
push
scas
sbbl
repnz
cmp
test
pop
fiaddl
movsb
push
fildl
int3
adc
cmp
jbe
jmp
and
sub
jp
and
adc
dec
mov
push
xor
and
sub
xchg
dec
adc
jle
xchg
cltd
insl
cltd
cld
ds
mov
dec
cmp
loopne
out
add
mov
dec
sbb
rclb
adc
pop
mov
daa
cmp
repnz
inc
repnz
cmp
sub
pushf
call
push
sub
shl
xor
push
xor
sti
shrb
push
mov
out
cs
out
inc
add
sbb
xchg
aam
ret
push
cmp
dec
lahf
mov
and
xor
movsb
push
push
fidivs
into
loopne
xchg
lret
add
scas
movsb
and
imul
in
mov
or
xchg
sahf
out
xchg
fsubr
adc
movsb
inc
imul
popa
mov
cmpsb
sar
stos
in
pushf
mov
iret
aad
inc
jb
sub
dec
cmp
cmp
jns
pop
add
cmp
bound
ret
stos
mov
xor
stos
test
inc
xchg
andb
mov
jnp
pushf
xor
mov
adc
stos
aad
and
pop
movsb
xor
scas
loopne
xor
test
cld
cmpsl
rcl
lcall
stos
std
dec
adc
sbb
mov
fsubrs
shrl
std
xchg
lea
inc
ljmp
sbb
ret
inc
jns
sub
sub
es
mov
xor
xchg
jp
imul
add
mov
adc
pop
pop
jb
jecxz
in
push
inc
push
ja
stos
aam
scas
xor
daa
xorl
xchg
inc
and
pop
jae
push
jne
jne
fs
and
push
adc
adc
aam
or
icebp
mov
movsl
xchg
adc
mov
cmpsl
andb
icebp
popf
movsl
push
or
inc
sub
xorb
adc
adc
cmpsb
xor
sbb
into
cmpsl
pop
xchg
imulb
mov
cmp
call
xchg
test
dec
filds
mov
pop
mov
jno
rcll
leave
jecxz
rolb
push
loopne
pop
mov
jp
es
cmp
adc
in
mov
and
divb
mov
pop
mov
jmp
cmp
cmpsb
icebp
push
cmp
popa
jb,pt
sub
mov
call
test
sub
push
in
loopne
mov
jecxz
cmp
loop
mov
cwtl
in
int3
das
jge
push
pop
cmc
data16
pop
stos
push
cs
shll
hlt
cmp
out
orb
loopne
dec
ret
insl
cwtl
outsl
aas
mov
jno
rcll
lds
push
cmc
sub
push
pop
icebp
movsb
cmp
repnz
shll
fs
adc
ljmp
imul
jle
inc
and
xchg
loope
mov
outsl
push
and
sbb
adc
cmc
xchg
jge
stos
mov
jae
cmp
mov
jno
inc
adcb
loopne
mov
and
sarb
rolb
sub
inc
lods
push
jo
pop
pop
xchg
dec
mov
fisubl
mov
cld
jns
int
ja
adcb
jmp
in
stos
add
cmp
arpl
cmp
stos
aad
repnz
xchg
movsb
push
nop
push
xor
cmp
xor
push
cmp
in
xor
cli
shrl
std
out
pop
sbb
or
mov
pop
push
mov
push
imul
mov
loopne
jne
out
and
xchg
fwait
add
and
adc
imul
repz
int3
and
dec
dec
pushf
add
sbb
cmp
jg
xchg
push
inc
or
loope
and
sarb
repnz
nop
outsb
loope
mov
mov
cmp
xorb
daa
and
xor
lcall
jmp
mov
mov
jnp
sub
jp
or
test
sub
mov
dec
sbb
testb
fistpll
outsl
push
mov
cli
stos
clc
repnz
inc
adc
cwtl
sbb
inc
lret
add
push
test
cmp
out
dec
pop
loope
pusha
int3
int
sub
cs
mov
jns
cld
into
mov
mov
popf
mov
push
ds
push
pop
push
or
test
lcall
mov
ud1
adc
mov
shrb
nop
cld
repz
push
sbb
or
cli
sbb
sti
xchg
cmp
movsb
and
xor
aaa
xor
and
mov
stos
ss
scas
mov
shrb
mov
mov
ficomps
js
inc
insb
mov
out
fidivl
push
adc
inc
mov
dec
imul
jo
iret
int3
mov
mov
aam
jle
ds
jno
iret
or
stos
outsl
mov
movsb
mov
scas
test
icebp
bound
jp
push
sub
stos
xchg
xchg
sbb
mov
adc
jl
pusha
or
xor
les
rcll
jecxz
sbb
scas
cli
sbb
ss
adc
mov
push
fwait
jbe
add
into
icebp
sub
mov
out
xchg
and
dec
fidivl
jecxz
cli
shl
les
xchg
loop
aaa
loopne
mov
xlat
mov
pusha
mov
xor
push
sahf
lret
jle
dec
movaps
data16
addr16
popf
sbb
inc
push
adc
ljmp
scas
fisttps
pop
stos
adc
ljmp
xchg
sub
out
pop
call
movsl
mov
push
lahf
push
push
sbb
and
xor
into
cmpsb
push
cmp
in
or
lods
add
sub
jl
mov
outsb
scas
cli
stos
push
adc
repnz
mov
cmc
ss
dec
enter
inc
inc
insl
and
mov
push
dec
out
test
xor
cli
push
in
jge
jmp
xor
cmc
popa
ror
mov
pop
out
inc
cmp
mov
addb
or
xlat
repnz
jae
push
incb
mov
sub
movsl
jecxz
aaa
xor
lods
mov
mov
shll
sbb
xchg
aad
nop
sub
xorl
nop
sbb
icebp
aad
pop
bound
scas
inc
jle
sbb
daa
inc
and
adc
and
sahf
xor
addr16
jno
rcl
pop
jne
pop
push
cmp
daa
push
add
mov
pop
shll
push
repnz
pop
xchg
sub
data16
nop
negb
popf
fidivs
mov
out
ja
lea
ljmp
addr16
out
fs
stos
jmp
bound
inc
add
sbb
push
fnsave
fstps
pop
xor
xor
rclb
pop
mov
sbb
fisttpll
and
movsb
test
or
call
roll
push
into
loopne
xchg
xchg
fstl
mov
lret
repnz
out
js
mov
in
fidivrl
fcoml
xor
mov
jae
sbb
inc
pop
mov
adc
adc
cmp
aaa
mov
mov
inc
sbbl
jo
subl
inc
imul
addb
sahf
sub
inc
xchg
push
movq
inc
das
or
cwtl
adc
xchg
dec
cmp
ror
push
sbb
test
adc
xorl
adc
int3
aad
dec
push
add
loope
cmp
push
and
setns
sti
lock
cmp
aam
jmp
inc
jnp
fmuls
push
mov
jae
jecxz
inc
mov
xor
xchg
mov
adc
xor
pushf
pop
cld
pop
pop
int
jo
jae
or
sub
daa
and
hlt
pop
repnz
mov
mov
idiv
test
adc
mov
repz
out
xor
das
and
sbb
into
cmp
push
sub
sbb
stos
ret
mov
outsl
push
mov
jg
stc
imul
adc
into
push
lods
in
out
mov
pushl
loop
xchg
dec
cmp
in
lret
pop
jb
mov
stos
addr16
fsubs
sarb
out
out
test
aaa
adc
aad
loope
push
jmp
cmp
es
rcl
mov
xor
ss
pop
dec
adc
aas
mov
loopne
mov
jle
lock
jl
jae
dec
repnz
pushf
aas
ficompl
test
movsb
and
loopne
in
aam
mov
movsl
push
xor
ss
sbb
pop
mov
cli
push
cmp
mov
cmp
adc
daa
xchg
mov
mov
dec
cli
add
pop
mov
bound
fnstsw
sbb
in
xor
adc
mov
xor
stos
mov
out
sub
jbe
fwait
sar
and
jecxz
xchg
xor
rorb
aaa
mov
cmpsb
dec
pushf
mov
mov
xchg
sub
negb
lods
xor
fwait
adc
and
cwtl
dec
push
xchg
mov
dec
push
adc
xor
jg
aaa
lret
cltd
push
lahf
iret
xchg
jno
dec
mov
jns
negl
and
lret
std
stc
das
idivl
or
xor
add
inc
inc
pop
nop
das
das
jb
pop
sub
outsl
jl
and
jae
popa
push
es
lds
mov
mov
dec
xor
ja
popf
sub
loopne
adc
std
and
icebp
dec
aam
sbb
scas
addl
mov
jb
ja
rclb
mov
jbe
ja
shll
test
movsb
stos
jg
push
pusha
adc
ja
cs
cmp
addr16
scas
add
jp
in
movsb
jne
cli
cli
jecxz
lcall
imul
mov
dec
aad
data16
fdivrs
push
lahf
add
divb
mov
push
jbe
icebp
lcall
push
mov
xor
lods
inc
adc
or
inc
cmpb
cmpsl
sbb
out
fisubs
mov
pop
aas
arpl
aad
and
xorl
inc
xchg
enter
mov
mov
int
out
ret
sbb
decl
mov
xchg
add
fisttpll
divb
cld
out
pop
mov
mov
mov
mov
push
iret
push
clc
adc
mov
aaa
rolb
movsl
mov
push
loop
or
inc
cmp
popl
add
sahf
sti
cmpsl
jle
mov
cmp
xor
push
sarl
aad
mov
jl
insl
ficomps
xor
shlb
mov
push
pop
jmp
jae
sbb
cmp
push
push
inc
sbb
jae
xchg
xor
and
jo
mov
pop
je
adc
sub
dec
adc
mov
pop
adc
xchg
int
mov
addr16
or
repz
repnz
inc
mov
pop
sub
fs
stos
notl
adc
mov
out
ja
jmp
mov
push
out
js
xchg
pop
std
xor
xlat
daa
insb
push
ret
dec
mov
cmpsb
mov
add
mov
std
sub
mov
cwtl
repnz
popa
jge
inc
xchg
xchg
imul
divb
in
shlb
pop
mov
repnz
push
or
mov
cmp
int
mov
ss
mov
mov
pop
out
add
imulb
add
jl
push
mov
fcompl
dec
mov
pop
mov
mov
mov
adc
imul
bound
pop
aaa
imul
jb
dec
inc
mov
arpl
adc
mov
cmp
xor
test
jb
ficoml
mov
mov
jmp
pusha
dec
stc
jo
push
into
jle
add
jge
cli
pop
xor
cmpsl
in
mov
sarl
test
adc
shl
in
mov
mov
test
repz
int3
test
dec
ja
pop
bound
mov
in
pushf
loop
out
jle
frstor
jne
cmp
aaa
pop
ret
mov
test
iret
cmp
push
push
out
sbb
xchg
jmp
lods
xchg
lock
fcoms
addb
jno
sbb
mov
dec
or
lar
mov
adc
pop
add
pop
addr16
sbb
sub
cmp
std
mov
scas
std
push
mov
movsb
js
xchg
push
dec
enter
in
xchg
push
cmp
mov
adc
mov
push
mov
add
sub
or
loope
jge
mov
out
mov
lret
clc
jmp
mov
es
pop
mov
fstps
push
cld
sub
push
jmp
cld
xchg
stos
add
add
fnstcw
outsl
jmp
mov
roll
push
inc
xor
cmp
or
xchg
jmp
mov
ret
xor
xchg
mov
pop
jle,pn
cmp
ret
push
movsb
or
mov
xchg
shrl
inc
push
sti
push
shrb
add
add
inc
mov
movsb
pop
imul
out
and
cmpsb
pop
lods
push
jbe
pop
lret
mov
pop
shlb
loop
andl
jg
xchg
testb
pop
xor
stos
and
mov
clc
inc
loop
and
mov
push
mov
test
cmp
sbb
or
arpl
sub
repnz
mov
push
cmp
pop
test
push
and
dec
jp
mov
jae
cmp
adc
mov
or
ljmp
pop
cld
stos
and
pop
mov
jo
loop
push
push
and
adc
addb
ss
xchg
test
and
repz
scas
mov
in
xor
mov
pop
xchg
stos
lahf
imul
insl
lea
iret
mov
das
adc
sub
call
push
cmp
in
bound
xchg
pop
cmp
movsb
popf
mov
cmp
mov
xor
or
call
addr16
mov
aam
out
xor
and
push
pop
and
je
andb
cmp
jb
cwtl
sbb
pop
in
nop
rcrb
mov
ds
xor
jo
int
mulb
cmp
sub
xor
xchg
inc
lock
je
mov
rorb
pop
fwait
push
push
dec
sub
mov
lahf
ret
push
sbb
jecxz
mov
mov
mov
jg
cli
pop
mov
or
lock
stos
das
movsb
repz
cwtl
movsb
lret
nop
mov
sahf
pop
cmp
dec
add
xlat
or
or
mov
xor
dec
idivl
std
jnp
je
fcomip
mov
js
mov
xor
pop
ljmp
push
lds
dec
movsb
aaa
push
mov
shlb
lea
shll
xlat
insl
adc
xchg
mov
push
push
mov
movsb
cmp
lret
stos
movsl
jb
arpl
cmp
fiadds
mov
and
and
adc
cmp
loopne
mov
push
adc
cltd
out
inc
push
jns
cli
mov
in
mov
and
pop
sbb
pop
mov
xchg
mov
test
sub
add
inc
pusha
xchg
in
in
stc
in
xor
cs
sub
loop
mov
mov
int
popa
inc
pop
or
cmp
insb
push
xor
out
jb
inc
mov
pop
aas
mov
pop
mov
scas
jle
mov
xchg
ret
out
push
test
xor
sbbb
push
clc
inc
mov
and
jae
jns
xchg
cmc
mov
mov
mov
xor
sbb
cmp
cld
stos
or
mov
out
leave
mov
jp
shl
gs
sub
push
rcll
int
out
insl
fsubrp
xor
jg
fsubl
push
xchg
mov
xchg
aam
and
cmpl
cmp
mov
icebp
xchg
popf
sub
inc
mov
out
cmp
cmp
scas
ds
push
add
shl
frstor
and
not
out
movsl
sub
mov
fsts
lcall
rcrb
or
out
xchg
jge
mov
dec
cmpsl
loopne
lcall
clc
ds
adc
adc
add
mov
loop
or
mov
repnz
mov
push
arpl
adc
jmp
mov
inc
call
dec
sbb
xchg
and
stos
ljmp
sahf
filds
xor
jo
hlt
insb
lret
mov
mov
sahf
jb
inc
xor
inc
mov
outsb
xchg
int3
pop
sbb
icebp
cmp
repnz
pop
in
roll
les
dec
jp
loop
mov
cmc
mov
popa
jg
popf
or
scas
repnz
movsl
xchg
frstor
fcompl
in
int
in
add
ret
or
lret
sbb
cmp
ret
mov
cmp
je
push
pop
adc
arpl
bound
scas
jmp
mov
std
loop
mov
xor
xor
push
jbe
out
adc
lock
loop
mov
jle
bound
pop
xor
in
adc
notb
push
sub
adc
out
cmp
aaa
pop
or
xchg
xor
mov
fstpl
jecxz
ss
pop
sub
hlt
loop
mov
aas
mov
loope
and
dec
mov
cmpsl
push
stos
lds
outsl
call
mov
sub
jno
cmp
inc
hlt
dec
jmp
xor
and
jge
xor
scas
sti
divb
shll
xor
mov
mov
movsl
sbb
mov
fmuls
mov
inc
mov
fwait
clc
aas
and
mov
push
aas
aaa
xchg
in
mov
xor
lods
jne
adc
mov
and
out
aas
mov
aas
les
ret
push
loope
add
dec
std
jb
or
test
in
xor
into
mov
cltd
xor
cmc
clc
pushl
cmp
icebp
sub
cli
fdivl
lods
mov
fwait
pop
and
ss
cmp
push
idivb
xor
jo
icebp
fidivs
dec
je
sub
add
jmp
xor
and
mov
cmpsb
jle
cmp
mov
or
in
mov
ds
fnstsw
int
out
aaa
lods
cli
or
mov
clc
imul
mov
mov
and
mov
js
stc
xor
xor
mov
jno
xor
mov
mov
gs
mov
cmp
mov
xchg
mov
mov
mov
mov
jl
jge
cmp
jne
test
sbb
xchg
jne
xchg
mov
mov
jge
jg
jb
jb
cmp
sub
stc
clc
icebp
or
test
cmp
pushl
cmp
jp
push
cmp
sub
fisubs
sub
mov
or
and
fidivrs
js
sbb
jle
sbb
adc
xor
jp
js
cmp
or
xor
ds
cmp
cmp
fnstsw
das
mov
cmc
lret
aas
das
mov
stc
jo
jle
xlat
mov
ss
fdivr
sub
jno
pop
sub
mov
imul
mov
add
pop
dec
aaa
mov
loopne
test
leave
pop
sbb
lret
adc
adc
mov
pusha
int
mov
shl
daa
mov
inc
aaa
sub
loopne
addr16
aad
loop
in
jns
sbb
adc
movsb
stos
bound
ds
or
mov
dec
or
jae
mov
nop
repz
rcll
xchg
in
jae
pop
dec
and
loopne
ret
mov
in
adc
pop
mov
mov
xor
lds
mov
repz
sarb
out
xor
lock
test
push
sti
push
cmpsl
dec
xor
mov
pop
cmc
mov
cmpsb
and
xchg
cmp
shll
js
aaa
pop
push
cmp
fsubr
xchg
sbb
pushf
sub
mov
mov
sub
mov
mov
jns
sbb
cld
inc
in
jb
push
cmc
mov
pop
pop
mov
adc
sub
jno
subl
adc
mov
orl
pop
mov
rclb
mov
jae
outsb
jb
pop
jbe
mov
and
xor
aam
aas
sbb
loopne
test
pop
and
ja
xchg
mov
jns
das
jb
dec
sub
push
mov
shl
into
xchg
push
nop
mov
lcall
in
fs
mov
fadds
dec
cmp
add
orb
dec
icebp
hlt
mov
std
inc
daa
add
xchg
hlt
leave
leave
scas
cli
jmp
shr
mov
scas
xor
xor
daa
mov
jns
ss
es
sahf
jmp
mov
or
jns
gs
fs
sub
or
lcall
add
dec
sub
les
cmp
out
sub
or
pop
or
inc
stos
les
mov
mov
or
jns
sbb
add
iretw
shl
pop
testl
inc
xchg
pop
xchg
idivb
int3
es
outsl
in
lret
push
xor
scas
and
adc
push
jge
adc
sarl
lret
clc
cmp
stos
mov
push
mov
mov
cmp
sub
dec
mov
push
jno
mov
xchg
ljmp
in
jns
sub
int
popf
ret
nop
sub
cmp
sub
pop
daa
cli
or
leave
test
pop
shlb
jb
ret
push
inc
xchg
rolb
push
sub
int
dec
mov
cwtl
mov
inc
mov
scas
gs
cmpsb
aam
xor
shrl
pop
ret
push
addr16
mov
in
push
imul
aaa
adc
sbb
xchg
mov
push
aad
loop
clc
jecxz
dec
dec
fsubl
in
lcall
mov
cmp
leave
push
cli
adc
pop
popf
cmpsb
test
cmc
nopl
ret
popf
pop
adc
sahf
aam
sarl
shlb
or
mov
xor
insb
sub
mov
cs
push
iret
mov
push
and
mov
mov
pop
and
add
jecxz
cmc
xor
movsb
stos
push
fstl
rol
add
test
xchg
mov
rol
aas
idivb
inc
pushf
mov
insb
rolb
loop
push
inc
add
jno
ficoml
imul
adc
out
push
ljmp
xor
in
sbb
arpl
and
cli
mov
repz
dec
cli
dec
ss
lock
xor
adc
mov
lret
call
mov
sbb
fwait
dec
xchg
dec
adc
adc
incl
mov
repz
push
or
sbb
imul
and
mov
inc
dec
movsl
pusha
cs
dec
jnp
arpl
cmp
lods
jbe
xor
movsb
popa
pop
loop
ret
aaa
lea
add
stos
cmp
mov
xor
jecxz
xchg
test
jo
mov
stc
cmp
imul
enter
fistpl
iret
outsb
jg
inc
mov
push
cmp
adc
mov
aam
and
adc
cwtl
out
sbb
dec
jmp
dec
jle
push
movsb
or
icebp
cmp
mov
mov
inc
mov
mov
mov
movsb
inc
mov
jmp
push
imulb
and
inc
pop
cmp
sub
in
pop
mov
dec
ds
and
daa
cli
popa
lahf
sub
mov
das
je
mov
fdivl
aaa
mov
lcall
mov
outsb
pop
ja
sbb
test
sbb
mov
xchg
lock
scas
sbb
fnstenv
add
pop
mov
or
cmpsl
pushf
sarb
out
rcrl
hlt
ljmp
and
movsb
lods
sti
adc
repnz
mov
sub
cmp
push
mov
das
mov
lret
out
imul
xor
inc
ret
ret
mov
dec
in
pop
lret
push
stc
addr16
addr16
sub
inc
ret
addb
rcr
sbb
pop
fistl
jbe
or
push
aaa
mov
mov
out
mov
xchg
shrl
js
cmp
mov
add
test
mov
loopne
mov
jmp
sbb
ds
sub
cs
shll
xor
mov
das
scas
aad
sub
imul
sub
stos
cli
add
sbb
rclb
and
cld
inc
andb
push
dec
jno
xor
sahf
jae
adc
pop
lret
sbb
repnz
push
out
cmp
rclb
arpl
xchg
mov
push
ja
sbb
push
cltd
clc
mov
test
call
jno
xor
mov
sub
jle
cld
andb
movsl
int3
jp
mov
pop
sub
cmpsl
xor
lahf
mov
jg
inc
jg
push
cld
adc
stos
lret
pop
cmpsb
lock
push
pavgb
mov
movsb
sub
nop
fnstcw
mov
and
adc
cmp
inc
adcb
jbe
cmp
or
jle
dec
arpl
mov
sbb
arpl
fwait
mov
xchg
push
gs
out
sub
mov
rcll
rolb
imul
adc
test
movsl
int
add
mov
adc
inc
mov
mov
mov
int
cmp
xor
fidivl
add
scas
sub
jne
push
cmp
fs
push
mov
stc
arpl
stos
hlt
pop
int
add
xchg
pop
xchg
mov
xor
pop
aaa
mov
test
push
sub
ds
push
inc
sbb
mov
fmuls
je
cmp
shlb
mov
mov
leave
and
call
arpl
adc
mov
sbb
jb
push
mov
mov
cld
adc
xor
sti
jb
jne
xchg
shll
mov
ret
ja
dec
cmp
mov
popf
mov
movsb
in
xchg
mov
pop
adc
cli
shlb
adc
adc
cmpsl
sub
mov
sub
icebp
and
in
mov
mov
loop
fwait
stos
in
xchg
adc
test
mov
jo
add
push
test
arpl
xor
mov
mov
fldenv
mov
sub
jne
or
sub
jae
mov
xchg
jbe
aas
or
and
sbb
xor
imul
shlb
mov
mov
mov
popf
jns
mov
push
xchg
jl
cld
test
addr16
imul
sub
mov
cmp
fmulp
mov
cmpsb
imul
mov
lret
call
je
mov
sub
out
add
xor
imul
mov
repnz
xchg
movsb
loope
pop
into
xchg
dec
test
mov
xchg
mov
roll
xchg
addb
loop,pn
mov
mov
jecxz
push
dec
push
jmp
dec
repz
sbb
add
orb
dec
push
fnsave
mov
mov
testl
movsb
adc
or
cli
push
and
sahf
mov
mov
icebp
push
mov
mov
and
mov
dec
fidivrs
sub
add
mov
sbb
shll
jb
jp
jle
mov
xor
out
stos
sti
inc
popf
inc
cmpl
mov
out
clc
clc
int
add
push
mov
sbb
mov
das
add
inc
and
jo
push
xor
mov
imul
sbb
pop
ret
lds
out
add
dec
mov
fadds
dec
mov
popf
xorl
mov
pop
push
xor
push
aaa
cltd
and
mov
xor
scas
sahf
out
dec
dec
cmp
dec
add
mov
aam
aaa
mov
mov
pop
je
pop
sarl
add
mov
sub
mov
cmp
adc
and
out
cmpsb
out
pushf
adc
xor
sub
es
data16
call
aaa
add
inc
pop
and
addr16
in
xor
daa
das
fmull
movsb
sub
cmp
adc
cmp
fwait
mov
icebp
push
mov
dec
adc
movsb
jno
leave
sahf
cmc
add
aaa
movsl
repnz
insl
fnstcw
lea
roll
sub
push
sbb
push
jecxz
mov
mov
sbb
lods
test
xor
movsb
lret
scas
testb
jecxz
ret
add
xor
mov
xchg
cmp
shll
das
pop
mov
or
push
jle
popf
stc
jae
jge
ret
mov
dec
jecxz
sti
loop
incl
pop
mov
lea
inc
jb
lds
push
mov
jmp
and
pusha
mov
or
in
in
jl
xchg
addr16
lea
xchg
clc
repnz
lcall
xor
push
cmp
xchg
mov
iret
push
xor
jae
out
or
daa
stos
adc
test
lahf
lods
pop
scas
clc
test
stos
aad
push
imul
repz
ds
mov
xchg
xlat
xchg
flds
inc
cmp
pusha
fsubl
and
lds
cmpsb
push
sbb
pop
out
addr16
push
sti
dec
mov
mov
sbb
in
and
lds
aam
cmp
popf
mov
stos
cmp
xor
push
cmp
cli
je
and
aas
std
jno
inc
insb
fneni(8087
outsl
mov
mov
and
push
xor
leave
es
dec
daa
aam
rolb
lods
fisubrs
subb
lahf
dec
dec
fnstcw
sbb
pusha
ljmp
inc
mov
dec
adc
xor
aam
jle
mov
stc
filds
inc
or
pop
mov
mov
xchg
xor
cmp
add
clc
pop
jb
icebp
stos
inc
testb
loop
mov
add
pop
mov
daa
cmp
sbb
cmp
sti
lods
and
mov
repz
iret
inc
pop
ja
pop
movsb
stos
sub
mov
in
lds
mov
pop
xorl
std
mov
dec
fadds
add
fmulp
mov
inc
sub
lret
movsl
push
mov
jb
mov
push
lock
inc
add
adc
adc
lds
jns
jge
aaa
jge
jmp
push
adc
shl
ds
out
xor
imul
mov
lods
out
cwtl
sbb
aas
hlt
mov
ljmp
push
jecxz
inc
sbb
cmpb
fsubrl
xor
popf
dec
and
add
and
jo
dec
imul
mov
je
mov
nop
das
jns
cmp
insb
scas
mov
jnp
sbb
and
fwait
push
stc
je
loopne
stos
test
jp
enter
cmp
pop
inc
sbb
pop
out
jns
gs
mov
and
fidivrs
imul
sub
aas
cmp
xchg
mov
loopne
bound
in
test
or
xchg
sbb
aaa
cs
mov
push
sbb
mov
adcb
sarl
jns
dec
mov
xor
mov
ljmp
push
xchg
rcl
popf
push
cmp
stc
and
sarl
and
jmp
dec
xor
movsb
add
int
stos
testl
dec
hlt
xchg
mov
jecxz
cmp
mov
mov
cmp
jbe
mov
push
pop
dec
add
mov
inc
pop
pop
cmp
lods
xlat
roll
sbb
movsl
lcall
ds
sahf
loopne
or
xchg
lds
push
push
sbb
or
push
dec
es
xchg
sbb
mov
dec
ss
insl
mov
push
sub
mov
movsl
cli
out
fidivs
dec
lock
xor
call
out
cmp
mov
xor
adc
es
cli
mov
ljmp
ret
mov
adc
call
or
inc
mov
js
cld
sbb
arpl
sahf
addr16
imul
sbb
xorb
mov
and
sarb
mov
icebp
cli
dec
movb
jecxz
adc
jbe
std
mov
cli
mov
fs
rclb
xchg
mov
fcom
inc
inc
xchg
xor
mov
test
cmpsb
rcrb
xchg
in
lods
jle
dec
and
jg
aas
aaa
mov
push
inc
mov
clc
adc
gs
xchg
ret
inc
dec
and
or
int3
jo
ljmp
sub
xor
movsb
cmp
loope
xor
jo
mov
add
xlat
je
push
aas
dec
movsb
pop
or
ds
clc
sub
outsl
nop
mov
ja
sbb
imul
dec
lea
xchg
icebp
xlat
ss
loopne
pop
sahf
xor
repnz
mov
xlat
sub
xor
es
fst
scas
int
out
inc
cli
add
leave
mov
shr
das
lods
imul
mov
add
dec
hlt
mov
stos
sbb
adc
push
adc
hlt
arpl
adc
cmp
daa
or
mov
cmc
xchg
decl
mov
out
movsb
mov
das
mov
dec
sbb
fsubl
xchg
ja
xchg
stos
xor
mov
sub
jmp
cmp
cmc
pop
leave
ficomps
xor
movb
loopne
and
sarb
mov
xchg
aas
fisttpll
mov
push
inc
mov
cs
jns
cmpsb
mov
ja
mov
shl
sbb
and
add
ss
sti
push
inc
addb
inc
cmp
cmpsb
jb
mov
movsb
xchg
mov
cmp
lret
sub
pop
cld
mov
jge
repnz
loop
movsb
push
push
andb
je
mov
adc
shlb
jge
mov
cmp
and
lds
sub
in
cmc
sub
cmp
std
inc
and
pusha
cli
jae
inc
cmp
jb
xor
cmp
xchg
push
jg
xlat
mov
cmp
jp
je
jns
in
push
mov
nop
inc
sbb
sarb
cs
cmp
popf
aas
movsl
mov
push
or
rolb
xlat
push
push
mov
cmpsl
mov
add
cmpsl
mov
add
enter
dec
ret
out
hlt
outsb
sbb
loopne
and
inc
shr
add
je
xor
cmp
popf
out
pop
push
jecxz
mov
mov
and
test
mov
std
shll
mov
xor
cmpsb
ret
addl
xor
xchg
push
jl
cltd
pop
push
lcall
mov
xor
out
cwtl
fs
or
mov
mov
movsb
aas
push
sub
lea
hlt
loop
jmp
js
mov
cmc
aas
not
in
xchg
adc
cmp
movsb
pusha
leave
xor
jg
jns
outsb
push
lahf
xor
jb
rcrb
push
add
and
pop
lock
mov
mov
pop
ret
sbb
test
js
and
je
xor
aaa
pop
repnz
popf
cmp
xor
sub
outsl
add
adc
js
dec
cmpsl
and
push
xor
aaa
push
repnz
std
es
adc
gs
daa
cmp
pusha
mov
push
pop
movl
sub
jo
xchg
aaa
shll
jno
rolb
repnz
es
mov
xchg
xlat
cmp
inc
jg
adc
icebp
jns
sbbl
movsb
jl
xchg
adc
std
mov
enter
or
leave
aam
rcll
push
faddp
aaa
popf
arpl
repnz
outsl
rclb
imul
xchg
aaa
cmp
push
jns
mov
mov
mov
pop
xchg
addb
rcll
sbb
push
int3
jno
imul
ss
movsb
stos
pop
mov
and
pop
rcl
xchg
les
mov
int
cwtl
fs
sub
je
sbb
mov
movl
mov
mov
push
decb
mov
pop
push
out
push
push
sub
imul
xor
adc
jnp
pop
jae
pop
je
outsl
push
xlat
or
ljmp
jmp
pop
es
cmpsb
and
adc
cld
icebp
xchg
jbe
pop
shrb
push
jns
std
pop
cmp
sub
jle
addr16
push
sarl
daa
test
push
movsb
xor
faddl
xchg
add
gs
lcall
into
adc
ficomps
jns
cld
adc
incb
push
pop
mov
xlat
movsl
xor
test
cli
xor
sbb
mov
xchg
test
mov
inc
jnp
daa
inc
sbb
lock
mov
cmp
mov
dec
mov
nop
scas
xor
sbb
rcll
pop
call
nop
negb
add
xor
push
push
push
inc
sbb
iret
movsl
enter
icebp
jecxz
jae
mov
stc
add
or
mov
and
xchg
adc
aad
enter
shlb
sbb
mov
fildl
testb
mov
aas
pushw
mov
loop
inc
pop
aaa
xor
sub
adc
cmc
out
sbb
jne
adc
test
add
bnd
xchg
stos
les
ret
call
shll
sarb
push
movsl
sbbb
dec
js
mov
loopne
xchg
mov
mov
ret
sbb
mov
and
sar
jb
es
das
adc
xchg
cmp
mov
lcall
push
jg
mov
mov
ja
dec
pusha
or
mov
into
mov
fnsave
sub
fwait
shrl
leave
inc
mov
xchg
rolb
mov
imul
pop
popf
sti
loop
clc
into
jp
call
add
mov
pusha
adc
mov
push
inc
out
adc
push
jg
cltd
push
jmp
js
je
cmc
and
cli
xchg
mov
paddsb
mov
adc
std
arpl
test
rclb
xchg
ja
jecxz
xor
mov
sub
mov
push
sbbl
and
mov
rcrb
mov
push
fisttps
lea
jbe
in
movsb
jmp
push
mov
clc
push
or
mov
loopne
mov
es
jo
jmp
add
mov
int
add
mov
ret
ret
mov
test
idivb
call
mov
mov
inc
adc
aad
dec
adc
adc
push
xor
jbe
out
pop
mov
fnstenv
pop
mov
cmp
out
add
daa
mov
arpl
add
mov
movsb
fldenv
adc
cmp
js
sub
mov
or
mov
push
loop
aad
gs
inc
fisttps
enter
std
nop
cmc
shrb
fldt
icebp
pushf
adc
mov
fwait
push
loop
inc
sub
test
cmp
mov
xchg
jne
xor
dec
lahf
aam
mov
or
cmp
pop
clc
nop
fldcw
lds
jae
out
push
mov
int3
das
mov
mov
pop
test
mov
adc
cmp
mov
sub
and
mov
cmp
in
or
repnz
int
mov
stos
jecxz
xor
dec
xchg
rcll
or
repnz
mov
jns
pop
pop
push
and
jbe
xchg
add
cmpb
sahf
ja
sub
mov
test
daa
xor
mov
mov
sub
stos
outsl
es
dec
xor
xor
inc
addr16
dec
popf
cmp
mov
int3
enter
mov
bound
cli
push
push
out
jecxz
fists
mov
push
sub
lret
or
xchg
adc
mov
cmp
adc
imul
jae
mov
fdivl
jne
adc
int
pop
sbb
adc
mov
sub
ljmp
sar
mov
jmp
and
ret
repz
out
lods
sub
pop
jo
dec
insl
dec
imul
xor
clc
les
fimuls
cmp
mov
arpl
popf
jb
mov
ljmp
adc
dec
mov
and
ss
jp
rclb
iret
cmpsb
dec
clc
stos
mov
mov
sbb
out
sbb
sbb
fnsave
pop
ret
push
call
jne
rcl
adc
xchg
sub
ret
mov
mov
and
mov
mov
jo
pop
mov
int3
cli
or
pop
addr16
lods
inc
int3
pusha
mov
leave
dec
pop
jno
icebp
outsb
outsl
std
or
aaa
daa
divl
xchg
inc
jno
sarl
pop
add
sbb
fwait
loopne
pop
push
fisttpll
insb
fbstp
push
push
in
cli
nop
pop
mov
cmp
test
xchg
stos
jl
push
adc
movsb
xchg
push
xchg
pop
mov
shll
cmp
mov
and
shlb
shll
cs
std
test
cmp
sub
mov
es
loop
int3
lret
daa
mov
lahf
loopne
sbb
sub
daa
in
movsb
and
movsb
add
jo
adc
pushf
cld
lret
mov
shl
inc
or
cmp
divb
mov
movsb
test
cmp
popa
mov
cli
int
loopne
adc
movsb
sub
ret
or
adc
xor
movsl
arpl
mov
pop
jne
jno
movsb
fucompp
xchg
jg
jns
movsl
ljmp
inc
out
dec
push
mov
in
pop
and
rcr
mov
pop
mov
mul
mov
mov
jns
subb
or
and
xor
mov
mov
mov
cmp
jmp
jp
lret
popf
fincstp
mov
daa
or
out
inc
xor
mov
test
pop
mov
test
in
outsl
pop
sbb
and
inc
jecxz
lods
fwait
add
or
pop
adc
add
ja
xorl
sbb
cs
enter
dec
arpl
lea
out
aaa
and
fst
shl
or
inc
sub
push
and
aam
inc
pop
shll
sub
sub
mov
stos
jmp
fsubrp
jecxz
addr16
mov
sbb
mov
test
es
push
mov
fsqrt
movsl
sbb
sbb
pop
arpl
jno
push
mov
shll
into
data16
and
daa
cmp
mov
out
pusha
or
push
ret
xchg
and
int
mov
outsl
and
enter
loop
push
repnz
out
and
lahf
adc
xor
pop
cmp
jmp
dec
or
gs
cld
or
push
fiadds
jle
outsl
and
or
adc
les
aad
adc
call
test
pop
fcmovnu
jo
mov
cwtl
mov
sbb
cmpsb
mov
sub
jmp
sti
mov
ret
shrl
loopne
loop
adc
sub
pop
jbe
mov
clc
pop
mov
movsb
cmp
aas
mov
cmp
insl
xchg
or
int
sub
aas
add
scas
stos
in
call
ja
pop
faddl
lock
add
test
mov
cmp
loopne,pn
jg
inc
icebp
mov
cli
shl
stos
ret
andb
sub
pop
jne,pn
push
fnsave
sarb
jp
orb
add
sbb
cmp
iret
mov
mov
imul
xorb
hlt
popf
std
mov
cmpsb
lret
jnp
pop
mov
inc
jns
fcompl
rcll
mov
mov
adc
pop
push
aaa
mov
stc
mov
jb
out
aaa
out
cli
xchg
rcll
test
cld
std
and
inc
cmp
xor
stos
jg
cli
in
sbb
adc
insl
leave
aaa
stc
cld
push
dec
mov
mov
movsb
mov
sub
jns
test
mov
sahf
addr16
stc
shll
in
push
cmpsl
mulb
out
ror
mov
xchg
pop
nop
movsb
mov
inc
xor
scas
and
cld
out
iret
das
jle
mov
sub
aas
mov
lods
in
dec
sbb
push
push
sub
sbb
mov
imul
sbb
ret
sub
cmp
ja
test
and
xchg
mov
xchg
aaa
cmpsb
adc
mov
mov
cmp
fldl
or
push
cmpsb
mov
push
popa
pop
in
jnp
inc
cli
pop
push
unpckhps
mov
mov
rorb
jae
fstpl
mov
mov
jg
jae
loop
mov
idivb
xlat
and
xchg
xchg
and
into
mov
lcall
enter
xchg
pop
xor
dec
mov
call
sub
scas
mov
xorb
mov
cmpsl
jno
push
mov
mov
ret
lock
push
mov
ret
lock
test
inc
push
xor
push
mov
ljmp
adc
cmp
xchg
xchg
mov
add
cltd
hlt
add
scas
mov
aam
xor
jbe
mov
insl
sbb
mov
or
insb
mov
sub
xchg
fcmovnb
loopne
pusha
stos
jle
scas
and
mov
hlt
xor
xchg
and
ds
hlt
aaa
in
pushf
lcall
stos
mov
loop
jo
cmp
scas
daa
imul
fimull
es
shl
push
lock
jnp
jge
adc
js
stos
mov
xchg
test
xor
call
out
lret
xchg
adc
push
mov
pop
mov
and
cld
pop
fs
jno
mov
aaa
cmp
mov
fadd
stos
xor
sub
movsb
sbb
mov
push
jle
xor
pop
xchg
movsl
inc
mov
push
pop
out
mov
jbe
jb
mov
add
add
pop
and
pusha
xor
lock
mov
cmpsb
sahf
pop
or
sbb
stos
push
imul
fdivl
mov
xor
jmp
jmp
inc
lret
pop
in
xchg
lret
and
es
mov
div
fstps
testb
cmp
xchg
addr16
sbb
sub
push
stc
add
fsubs
movsb
ds
lods
xchg
pop
data16
xor
inc
mov
pop
sub
pop
cmp
lret
mov
dec
cwtl
add
movsb
cmp
out
nop
in
arpl
aas
repnz
mov
in
bnd
repnz
cmpsb
mov
addr16
jmp
imul
mov
or
mov
lods
rcr
fsubrl
mov
leave
xor
mov
xlat
and
aad
push
xchg
push
cmpsb
or
push
sbb
nop
add
aam
cmp
pop
sahf
or
sub
adc
in
mov
push
dec
cmpsb
fmul
sbb
ds
sub
leave
pop
or
jmp
test
cs
sahf
pop
add
outsb
mov
addr16
jns
sub
jmp
or
lds
cwtl
pusha
fcmovne
cmp
push
push
inc
fbld
push
aas
xchg
add
scas
jl
mov
or
jecxz
fidivrs
imul
fnsave
xchg
clc
out
cld
xchg
cs
lods
inc
xor
pop
mov
je
jo
dec
popa
adc
js
sarl
push
dec
sbbb
dec
popf
adc
inc
in
and
sbb
sbb
jg
roll
decl
dec
sub
sbb
and
pop
in
mov
shll
adc
or
movsb
and
dec
in
mov
mov
pop
inc
and
popa
cmpsl
aad
pop
int
lock
cld
adc
inc
sbb
sbb
and
inc
leave
inc
inc
sbb
cmpsb
mov
jne
mov
adc
pop
rcl
xor
nop
in
jp
rclb
insl
adc
mov
cs
les
cmp
jp
push
lods
add
sub
mov
cli
les
and
inc
dec
lock
js
jp
add
mov
fisttpl
xor
pop
loopne
add
jno
scas
add
mov
sub
fdivp
es
xchg
jge
sub
shll
ret
xor
scas
fnstenv
inc
pop
out
or
sbb
mov
adc
mov
mov
lret
xor
mov
lods
xor
xorl
lock
jo
mov
push
push
adc
xor
in
int3
fs
fistpl
and
fsubs
and
push
pop
cmp
sbb
inc
pop
sub
pop
adc
pop
jge
mov
adc
push
or
out
or
jmp
lar
xchg
pop
mov
aas
mov
into
pop
fsubr
mov
arpl
xchg
cmp
cmp
mov
clc
xchg
or
mov
mov
call
lock
xchg
jge
test
mov
cmp
negb
jb
mov
out
ja
push
mov
pop
push
cwtl
call
inc
jns
mov
mov
fsts
pop
mov
adc
xor
ret
xchg
jecxz
push
loopne
pop
lret
pusha
dec
sbb
jae
push
xor
mov
dec
aaa
je
pop
mov
enter
dec
jnp
and
push
lcall
cli
cltd
cmpsl
gs
adc
jp
imul
xchg
clc
cli
dec
daa
sub
fiaddl
push
repz
stc
jb
daa
ljmp
cli
stc
test
cmp
jno
das
sbb
dec
out
ret
cmp
movsb
and
jbe
cmpsb
dec
fiadds
mov
aaa
ds
push
and
ret
and
xor
rcl
cmp
mov
mov
ss
fimuls
xlat
fld
ret
fadds
rcl
mov
mov
nop
push
xlat
push
data16
cmp
loopne
rcl
mov
add
mov
mov
sarb
lock
lcall
pop
mov
cltd
mov
xchg
pop
jnp
into
hlt
divb
sbbl
pop
add
repz
mov
mov
and
sarb
mov
pop
cs
popf
jb
sbb
lds
sub
ret
loop
push
movsb
test
ljmp
mov
sub
clc
std
test
xchg
mov
pusha
in
jg,pt
mov
movsl
and
xor
call
and
sarb
pop
es
cs
mov
jg
movsl
xchg
push
xor
es
mov
mov
sbb
adc
filds
xchg
aad
push
leave
jb
lods
add
mov
lock
aad
pusha
rcll
lods
inc
andb
xchg
inc
sbb
mov
pop
enter
in
aad
jnp
jp
ds
fdivs
lock
adc
mov
sbb
mov
shl
mov
mov
out
jg
or
inc
lock
daa
mov
add
pop
ljmp
aas
iret
shl
xlat
stos
mov
xchg
cmc
imull
popf
rcl
adc
ret
outsb
xchg
lods
shlb
pop
mov
add
sub
add
rcl
inc
adc
rcrl
ljmp
fiaddl
test
cmc
xchg
dec
movsb
push
lea
lahf
push
cmp
adc
call
cmp
cmp
jns
push
and
js
cmp
shll
cmp
stc
sbb
mov
xor
mov
cmc
pop
cs
sarl
movsb
mov
stc
divb
pop
add
mov
inc
dec
adc
adc
or
inc
aad
in
mov
loopne
lret
mov
out
dec
clc
xchg
adc
enter
mov
dec
inc
popf
jns
mov
fidivrl
or
cs
and
xor
out
idivl
cmp
stos
cmp
negb
fldcw
mov
xor
jl
fidivs
xor
ds
xchg
pushl
popa
outsb
dec
mov
cmpsb
jnp
stos
xor
xor
and
jo
pop
jl
test
push
repnz
and
add
into
mov
dec
mov
bnd
mov
fildl
in
sbb
mov
mov
cli
addr16
cmc
xchg
aas
or
cmp
mov
out
mov
pop
mov
dec
and
fwait
add
pop
test
cli
or
ss
sub
sti
repz
ret
pusha
loope
dec
or
aas
push
mov
int3
adc
icebp
insl
mov
xorb
leave
shll
inc
inc
cltd
mov
jb
jbe
xchg
movsb
jbe
add
decl
jb
dec
mov
pop
adc
aad
and
movsb
inc
push
mov
mov
cmp
push
sbb
out
jbe
add
pop
mov
out
mov
fs
notl
sub
xchg
xchg
int3
pop
pop
cld
pop
xchg
adc
jno
mov
jge
imul
scas
fistps
mov
pop
xorl
mov
sbb
mov
pushf
fsubp
mov
xor
jp
inc
jmp
cwtl
test
std
ljmp
in
mov
xchg
jle
nop
test
adc
xchg
imul
pop
ds
rcll
movsl
imul
mov
outsb
add
das
mov
jns
push
pop
or
adc
loop
pop
jae
call
mov
xchg
cmp
ss
cmp
xchg
cmp
sbb
sub
dec
js
repz
dec
daa
mov
cmp
in
loop
jns
test
mov
jp
movsb
mov
rorb
dec
aas
mov
aad
loopne
movsb
sahf
cmpb
call
aad
mov
into
xchg
sub
inc
ss
cmp
push
ljmp
mov
out
hlt
roll
sbb
push
adc
xchg
jecxz
jp
push
inc
les
imul
lock
cmc
leave
cmp
mov
adc
jno
sar
icebp
push
not
cmp
push
mov
or
sti
sahf
push
adc
subb
xchg
pop
mov
popf
mov
fcmovu
mov
insl
imul
cmp
xor
inc
add
push
and
inc
push
push
pop
out
jp
nop
mov
jo
hlt
add
xchg
cmpl
jo
mov
repnz
mov
mov
jmp
rclb
add
into
shl
pop
cmpl
sub
fisttpll
sarl
fcos
test
sahf
cmpsb
xor
sbb
adc
xchg
jmp
pop
add
lea
jb
jecxz
cld
aas
jae
cmp
push
mov
aas
xor
pusha
outsb
aad
xor
rorl
mov
fldcw
insl
push
mov
xor
push
and
test
pop
sbb
lcall
mov
decl
ljmp
mov
mov
adc
xorl
xor
push
mov
mov
idivl
and
push
or
xchg
lahf
mov
push
popl
repz
add
mov
cmp
sbb
adc
mov
mov
xor
repnz
add
jge
adc
mov
adc
ljmp
sub
mov
lods
sar
dec
and
jb
lahf
or
pusha
push
loopne
std
dec
es
mov
rclb
cmp
movsb
bound
xchg
and
and
pop
clc
pop
sahf
jge
movsb
pop
pop
jp
jg
add
dec
sbb
mov
testb
mov
das
xor
addb
shl
add
std
mov
xorl
hlt
loop
adc
jnp
or
and
inc
lods
ficompl
mov
ss
jns
push
add
test
sarb
jg
mov
cmp
daa
imul
mov
call
mov
sub
daa
pop
sub
pop
jno
pop
lret
insl
pop
mov
jae
pop
push
stos
mov
int
xchg
mov
mov
sub
in
lret
sti
stos
andl
jae
sbbl
filds
and
pop
and
bound
jbe
pop
test
addl
das
jecxz
dec
ret
aad
gs
call
pop
leave
divl
dec
push
lock
xchg
arpl
mov
gs
pop
mov
in
push
inc
xchg
dec
mov
addr16
mov
daa
xchg
lcall
roll
pop
mov
out
loopne
or
cmc
xor
inc
mov
pop
cmpsb
push
inc
inc
cs
loopne
js
test
test
fwait
xchg
scas
adc
inc
jmp
fisttpll
adc
dec
sar
in
adc
inc
lret
xchg
inc
jns
js
push
and
mov
sub
pop
mov
cld
sti
lea
mov
movsb
lock
fstps
fsts
addb
sub
repnz
test
sarl
or
jae
ss
mov
mov
mov
push
lds
jnp
add
pop
mov
cli
nop
shll
cmp
sbb
pop
fwait
or
sbb
mov
enter
mov
jecxz
add
cmp
aaa
xor
popf
or
in
mov
lahf
mov
outsl
jae
out
jecxz
push
mov
dec
lods
cmc
push
xor
jb
and
shlb
pop
sti
add
push
sbb
xchg
and
movsb
inc
fildl
mov
aaa
outsl
mov
xchg
mov
push
mov
scas
out
sbbb
fiadds
cmp
imul
repz
js
mov
mov
add
icebp
pop
xor
pop
out
cmovno
xor
pop
insb
xor
xchg
test
sub
and
clc
ficoms
fldcw
pop
ret
xlat
fnstcw
call
inc
cmp
data16
fdivs
fisubs
icebp
mov
cld
sub
pop
sbb
sub
xchg
fsubl
sub
mov
js
jecxz
decl
xor
cmp
rorb
xchg
xor
mov
outsl
cmp
js
xor
xor
cmp
xor
mov
mov
jo
mov
xchg
cmp
mov
mov
daa
xchg
mov
jns
ss
ljmp
cmp
pop
sbb
cmp
cmpsb
jle
xor
fnsave
rclb
xor
mov
fidivrl
ss
stc
sti
ljmp
mov
sti
cmp
stos
inc
jp
lods
add
push
mov
adc
in
clc
pop
jae
mov
mov
ds
ja
xor
stc
mov
jne
mov
mov
xor
sub
mov
xor
jp
sbb
sbb
aaa
std
sahf
cmp
cmp
lahf
scas
mov
cmp
xor
xor
inc
xor
jno,pn
je
hlt
test
aas
shrl
xor
mov
mov
xor
aas
das
mulb
mov
lock
shll
lods
mov
bnd
sti
js,pt
cmp
mull
ds
sub
jg
ljmp
xor
out
ds
jb
jo
mov
jp
cli
cmp
stc
or
mov
mov
cli
sub
in
adc
cld
std
loope
mov
cmp
je
ja
hlt
test
xor
and
js
pop
sbb
into
sub
mov
mov
mov
xor
push
inc
call
mov
add
sub
sbb
rclb
mov
aas
movsb
sahf
pop
pop
sbbb
dec
aam
btr
sahf
jle
push
sti
pop
cwtl
xlat
cmp
dec
jb
ret
movsb
cmpb
in
adc
and
popa
push
jae
push
jg
lods
inc
mov
jae
fildll
pop
jmp
cmp
shll
mov
arpl
xlat
dec
dec
outsb
jle
notb
pop
push
add
or
icebp
mov
jnp
mov
pushf
sbb
repnz
shll
dec
xor
movsb
xor
fwait
adc
stos
push
pop
leave
adc
pop
and
push
stos
inc
lock
sub
mov
movl
insl
jae
cwtl
sbb
pusha
adc
add
add
mov
inc
jns
inc
sbb
and
dec
sub
push
lret
mov
mov
bnd
jae
add
jb
cmpb
push
push
shrb
sub
shll
js
adc
sbb
xor
out
test
cmpsb
sub
push
cmpsl
mov
inc
add
push
push
test
stc
sarb
outsl
pop
shll
mov
add
mov
jl
jnp
movsl
push
cli
jae
cmc
inc
adc
xor
dec
movsb
mov
pop
ret
mov
scas
iret
es
and
pop
push
divl
and
mov
push
xor
out
jecxz
mov
test
jbe
push
pushw
fsubl
data16
inc
and
mov
daa
jecxz
jge
enter
pusha
es
xor
imul
aaa
xchg
and
sub
std
adc
jae
xor
jge
shll
xchg
cmp
repz
mov
dec
jmp
adc
sarb
test
test
sbb
adc
push
push
mov
dec
cmc
cmc
nop
popa
repnz
mov
mov
sbb
ja
mov
mov
xor
loop
rep
ds
sub
mov
pop
pop
outsl
or
mov
xor
adc
inc
rolb
adc
andb
sbb
add
cmc
xchg
dec
ja
sbb
xor
push
enter
ret
cmp
inc
js
dec
icebp
or
loop
movsb
inc
inc
sbb
xor
push
sbb
mov
mov
lods
clc
cmp
mov
vandnps
ret
cld
stos
xchg
push
jecxz
or
gs
cltd
push
cld
ljmp
jle
jmp
sbb
lods
loopne
jnp
sbb
mov
sbb
xor
icebp
xchg
pop
inc
adc
rcl
push
push
push
call
test
enter
xchg
jae
mov
or
aam
dec
fstpt
pop
pop
mov
roll
push
imul
push
stos
je
and
fcmovnb
popf
push
push
dec
ljmp
incl
ret
daa
inc
sub
imul
movsb
insl
or
stc
pop
push
add
rorb
scas
mov
inc
das
pop
inc
clc
aad
xor
loopne
imul
lds
add
xlat
test
inc
xchg
xchg
imul
loop
gs
push
xchg
les
orb
das
cmp
adc
jl
add
mov
lock
ljmp
insb
cld
fwait
mov
ss
and
xor
das
ss
pop
cmp
rclb
cmp
mov
imul
loope
mov
jns
int3
or
ljmp
mov
mov
in
push
ret
jbe
add
sar
jge
sbb
pop
in
mov
outsb
xor
subb
js
mov
repz
mov
xor
sarb
icebp
mov
jl
arpl
pop
and
daa
out
popf
ljmp
testl
xchg
lret
dec
ret
dec
psubw
sub
idivl
movsb
hlt
jmp
ja
dec
mov
sub
ret
hlt
cli
add
into
sbb
inc
rcl
sub
xor
movsb
xor
cmpsl
push
mov
fbld
mov
loope
adc
pop
in
mov
xchg
mov
dec
call
jns
popf
and
loopw
mov
inc
jo
jecxz
movsb
stos
mov
icebp
dec
jnp
repnz
pop
fs
pop
cmp
lea
scas
cs
xor
shrl
pop
dec
sbb
cmpsb
pop
jg
or
sbbl
inc
scas
fwait
and
cltd
insl
push
out
mov
aad
movsb
push
fldl
jno
jmp
rorb
mov
xor
jo
push
fcmovu
push
cltd
rcl
mov
shlb
sub
test
mov
cmp
mov
call
int
jmp
ret
push
sbbl
adc
bound
or
sbb
dec
test
aam
push
divb
push
xchg
test
push
xor
push
ret
inc
cmp
mov
inc
test
mov
in
push
gs
mov
push
cmp
push
test
mov
push
pop
mov
sahf
rolb
cltd
push
mov
mov
dec
mov
repnz
into
sub
xor
je
loopne
mov
sbb
push
pop
cmp
xchg
loop
mov
cmc
mov
mov
cmp
leave
int3
inc
cli
in
mov
inc
jns
mov
xchg
mov
jge
xor
dec
mov
push
mov
dec
add
cld
or
jl
lds
mul
ljmp
in
mov
pop
je
lods
mov
rcl
mov
inc
cmpsl
or
jbe
jbe
cmpl
cmp
push
pop
sbb
mov
xchg
sub
or
lock
lods
adc
shrb
mov
jge
jbe
push
aas
or
fistl
popf
cmp
adc
cmc
test
and
xchg
mov
andl
movsb
cmp
pop
push
lods
xchg
jmp
sbb
repnz
adc
jecxz
push
add
sbb
sub
push
out
pop
push
push
mov
cmp
mov
mov
jno
movsb
call
pop
arpl
frstor
jge
jmp
and
adc
mov
xchg
mov
imulb
ja
jb
neg
pop
rolb
xor
hlt
clc
cmp
jmp
jae
mov
cmp
aaa
dec
idiv
push
jle
adc
mov
push
pusha
popf
xor
mov
mov
shlb
out
mov
fsubl
jle
push
mov
lahf
test
lret
in
xlat
or
sub
pop
dec
rorb
call
add
shll
sbb
or
iret
cli
gs
mov
push
insl
ss
push
addr16
adc
roll
imul
jns
xor
pop
sub
shl
xchg
cld
dec
mov
and
xor
je
cmp
loope
cmpsb
out
imul
aam
mov
mov
test
loope
fnstcw
jle
jnp
es
sti
out
push
sub
mov
and
pusha
mov
xchg
icebp
test
inc
movsb
push
idivb
mov
mov
sarw
mov
mov
push
into
lret
cltd
jne
and
cltd
fdivrs
add
mov
or
mov
aad
cld
jb
imul
in
repz
andl
sahf
jno
adc
hlt
gs
mov
xchg
adc
movsb
inc
mov
sahf
mov
xlat
cmpb
xor
mov
and
jle
ret
sub
andb
push
ss
xor
cmp
call
lahf
lcall
into
fisttpll
loope
sbb
popf
js
stc
inc
aad
pop
cmp
sub
push
xchg
sub
and
jg
popf
aam
adc
xor
cmp
sarb
es
sbb
inc
div
pop
ja
and
loopne
test
cmpl
add
loopne
ret
loopne
push
add
ret
mov
jns
cmp
sub
lock
dec
incl
sbb
addr16
cltd
adc
dec
pop
ja
mov
lea
mov
divl
aas
jns
pop
pop
adcl
lock
xor
xor
and
aam
push
lea
stos
dec
cmp
std
jmp
cld
ret
xchg
loopne
mov
push
and
fst
loop
dec
dec
xor
jo
in
mov
push
push
fisubrs
and
inc
jnp
fdivrl
shll
push
lret
mov
jg
dec
test
xchg
ss
push
bound
xor
out
shlb
mov
stos
xchg
out
push
push
mov
or
outsl
lods
mov
xchg
jnp
mov
mov
push
ss
stos
pushf
xor
and
xor
repnz
cmc
xchg
fildl
dec
adc
outsl
sub
xchg
movsb
xchg
fs
outsl
icebp
pop
aaa
sub
test
push
dec
call
movsb
jnp
and
cmp
and
imul
jno
test
ret
insl
mov
adc
ret
or
in
mov
repnz
clc
adc
ret
lds
and
mov
in
add
push
rclb
mov
push
inc
mov
aam
adc
mov
jecxz
push
xor
popf
fnsave
stos
call
sub
pushf
stc
dec
cmp
rcl
cltd
jmp
pop
mov
dec
movsl
sbb
or
rcr
pop
neg
push
clc
or
and
or
call
pop
cmp
call
ret
sub
mov
cmc
faddl
inc
sub
pusha
cmp
ret
std
jecxz
xor
mov
movsb
pop
mov
push
test
ss
push
dec
inc
xor
jg
sub
pusha
icebp
rol
pop
cwtl
sbb
repnz
xchg
dec
inc
xchg
addr16
dec
mov
jp
sub
lock
mov
mov
subb
mov
jmp
inc
lcall
add
scas
dec
stos
or
pop
test
sbb
xor
leave
adc
and
jmp
push
arpl
mov
push
popa
mov
mov
in
cs
or
jb
ljmp
fcoml
mov
dec
xor
repz
leave
mov
pop
adc
lock
mov
hlt
daa
ss
sar
jg
mov
xchg
adc
mov
and
mov
adc
sbb
sbb
sahf
fwait
lret
mov
sub
cwtl
ret
jns
jge
cmp
mov
jne
lds
or
mov
insl
dec
lods
negb
jg
loopne
pop
sub
das
inc
ds
jg
adc
sbb
fidivrs
cmp
push
xor
nop
mov
dec
stc
int3
fs
pop
rcr
aas
xor
adc
xor
les
sub
dec
rcrl
xchg
jecxz
fadds
dec
mov
fisttpll
mov
adc
cmp
mov
adc
mov
das
and
cmp
xchg
push
adc
add
nop
sbb
cmc
xor
xor
repnz
int3
dec
lds
icebp
mov
xlat
push
and
addr16
notb
mov
repz
sub
pop
pop
xchg
je
sbb
cmp
stos
push
insl
xor
mov
pop
aam
push
mov
push
mov
push
jb
mov
or
or
movsb
mov
loopne
mov
loopne
cmp
dec
in
xchg
xor
mov
adc
dec
and
mov
sbb
pop
stos
add
cmp
imul
in
imul
push
repz
push
inc
or
movsl
push
xchg
lock
das
pop
mov
sbb
and
pop
mov
cmpsb
mov
shll
fwait
mov
out
std
inc
test
bound
movsb
xchg
add
mov
imulb
adc
xor
enter
cmp
je
ljmp
adc
out
mov
push
adc
xor
pop
pop
dec
push
or
rcrb
jg
dec
push
gs
repnz
stos
insl
sub
jne
dec
xor
pop
push
mov
icebp
aaa
arpl
mov
jge
mov
jg
push
cmpsb
pusha
cmc
insl
daa
sbb
and
movsb
sbb
add
pop
cmp
xor
push
and
dec
lock
test
mov
stos
and
std
pop
mov
mov
iret
rclb
xor
sahf
add
cs
gs
jnp
push
out
lods
sbbl
push
push
inc
push
lcall
clc
stos
cli
std
xor
subb
push
negb
and
sbb
lea
addr16
mov
das
push
pop
cmc
push
push
aaa
lret
movsl
testb
or
sub
fisttps
fwait
push
andb
stos
sbb
jne
sbb
push
lds
jmp
shlb
movsl
push
cmpsb
test
mov
in
pop
insb
push
cwtl
pop
and
fidivrl
mov
sbb
lret
in
sbbl
push
xchg
mov
pop
das
pop
cmp
daa
cmpsl
mov
mov
rcll
dec
mov
adc
sub
iret
dec
cmp
pop
jo
sub
lret
mov
dec
and
mov
nop
mov
and
imul
mov
or
cmp
sahf
std
loop
push
es
sbb
cmovge
lods
xchg
repnz
push
mov
cmc
testb
es
mov
js
xchg
jns
sub
cmp
mov
sub
dec
std
data16
push
xor
lahf
jnp
out
mov
inc
sub
sub
call
xchg
loop
pop
movsb
jb
mov
cmc
jmp
shlb
add
cmp
xor
jb
mov
cmpsl
mull
adc
idivb
jne
jmp
ja
movsb
push
dec
out
adc
add
mov
cmp
push
xchg
daa
xor
or
sbb
xor
out
sbb
test
repnz
test
fwait
pop
in
ret
in
dec
mov
jl
out
mov
popf
hlt
int
imul
jle
sahf
dec
cmp
lds
std
mov
pop
jb
sub
sbb
push
push
xor
movsb
inc
cltd
pop
fcmovnu
lock
bound
mov
das
cmpsl
sbbb
mov
xchg
pop
mov
add
adc
sarl
jo
mov
add
jge
ljmp
mov
push
push
xor
repnz
jecxz
clc
and
inc
aaa
cmp
test
pop
dec
cmp
aaa
adc
addr16
mov
jb
push
jno
adc
hlt
call
and
push
fwait
pop
inc
daa
xchg
sti
clc
shlb
out
pop
je
scas
out
mov
push
sahf
jle
cwtl
or
mov
pop
sbb
cli
es
nop
lock
test
fisttps
mov
je
dec
mov
loop
push
ljmp
jb
idivl
das
adc
push
inc
adc
out
sub
dec
es
inc
js
js
adc
cltd
stos
cld
xchg
shl
or
fisubs
and
jb
bound
or
fcomps
jl
lods
cmp
mov
stos
lcall
xor
xchg
cmp
push
call
jmp
in
and
stos
shll
repz
xchg
adc
aam
push
mov
stos
sbb
and
jns
push
jbe
mov
ret
mov
pop
js
test
ds
mov
jecxz
cmp
je
shl
lret
enter
les
inc
lret
push
push
mov
xor
xorb
inc
push
mov
mov
hlt
in
shlb
cmp
icebp
addr16
mov
push
rcr
stc
cmpsl
cmpl
jne
push
in
jnp
mov
loopne
inc
mov
and
adc
outsb
dec
push
sub
pop
cli
adc
in
sbb
sbb
stos
test
ret
cwtl
xchg
loope
add
pushf
pop
cltd
mov
push
stos
mov
mov
xchg
and
test
mov
dec
sbb
inc
jle
mov
adc
mov
std
ljmp
cmp
mov
ret
shlb
loop,pn
fistpll
push
xor
dec
imulb
insb
pop
je
or
push
cmp
stc
repnz
and
mov
cmp
cmp
dec
sbb
ja
call
cmp
push
mov
push
pop
xor
and
pop
adc
lock
in
mov
addr16
mov
pop
ja
push
add
mov
loope
sbb
arpl
sarb
je
rcrb
pop
cli
jne
and
sbb
adc
mov
mov
loop
movsl
inc
cmp
aaa
movb
scas
lock
daa
jecxz
nop
icebp
fstp
pop
cmpsl
push
cltd
mov
and
adc
js
or
xchg
sbbb
lcall
std
xchg
aad
shll
pop
clc
mov
mov
pop
ficomps
dec
mov
push
in
cli
xchg
inc
pop
inc
fwait
mov
fsubs
cmp
std
xor
add
xchg
lds
push
mov
imul
leave
imul
and
pop
and
jmp
and
aas
xor
jg
mov
fnstsw
mov
mov
jne
or
lret
cmp
test
xchg
mov
xor
inc
mov
xor
and
loopne
ss
cmpsb
or
cmp
or
lods
pusha
lock
ljmp
xorl
xor
lods
in
sbb
shlb
das
imul
test
inc
lret
inc
mov
mov
es
movsb
cmpl
imul
cmp
stos
jle
in
lcall
inc
and
push
pushf
cmp
add
xor
movsb
iret
mov
out
dec
mov
shrl
sub
loope
push
sbb
xchg
jecxz
mov
hlt
inc
iret
std
sub
adc
iret
stos
mov
fwait
xchg
ret
xorb
pop
cs
pop
push
movsl
int
add
push
or
cs
ss
insl
sbb
jp
pop
jno
xchg
repnz
loop
fwait
inc
cmp
jge
jo
mov
insl
je
xchg
xchg
cltd
mov
push
int
movsb
pop
pop
ljmp
push
nop
jp
int
jecxz
xor
jno
leave
inc
rclb
or
jge
lret
aas
dec
push
les
sti
fs
cli
lcall
jbe
inc
sub
pop
cmp
addr16
mov
dec
pop
ja
hlt
repz
ret
cld
in
mov
cmp
pop
inc
enter
cli
inc
xchg
scas
push
adc
ret
pop
imul
gs
cmpsb
fcoml
push
sub
shlb
dec
rcl
mov
test
out
int
dec
mov
sub
jne
or
xchg
cmp
out
lea
push
hlt
shll
push
sbb
lret
bound
pop
and
imul
les
imul
insl
in
insb
jmp
xor
push
popa
cmp
adc
push
jb
cmp
pop
mov
inc
push
fnsave
adc
mov
test
adc
pop
dec
add
add
bound
pop
rorb
push
fsts
inc
sarb
pop
insl
je
popf
cmp
and
je
jae
test
xchg
adc
adc
jle
jp
pop
dec
inc
cltd
pop
jecxz
xor
in
negb
popf
in
inc
aam
xor
dec
inc
push
adc
mov
clc
mov
jns
scas
jo
xor
pop
dec
push
out
repnz
mov
mov
xchg
inc
adc
sub
mov
inc
mov
xor
mov
in
mov
mov
sbb
dec
in
cwtl
scas
sahf
mov
insl
ffree
mov
cli
cmpsb
aaa
gs
and
add
mov
out
xchg
ja
pop
cs
and
pop
mov
cltd
adc
in
dec
sti
push
sbb
loop
lods
fistpl
jbe
lods
cltd
rcrl
ret
pusha
mov
fisttpl
xor
fnstcw
and
int
cwtl
and
mov
inc
ret
sbb
push
sbb
mov
push
scas
and
stos
ret
adc
pop
lret
dec
aad
mov
inc
cmp
sbb
inc
das
mul
cmpsb
loop
jge
adc
xchg
mov
dec
inc
and
mov
adc
fnstcw
out
mov
inc
add
dec
ds
lea
in
inc
cmpsb
mov
icebp
repz
mov
jecxz
scas
push
cmp
xchg
push
inc
cmp
pop
sub
int
notl
roll
inc
sub
xor
bound
mov
mov
dec
add
hlt
xor
mov
dec
sub
xchg
shll
stos
fstpt
clc
mov
push
mov
repnz
rol
mov
add
stos
ja
daa
jbe
adc
hlt
xor
mov
pop
mov
mov
xor
jge
fnsave
pop
outsb
and
mov
lock
xchg
adc
inc
xchg
aam
aad
jb
sbb
dec
or
mov
sbb
nopl
cmp
cmc
and
lret
and
divb
pop
jg
lea
sub
shl
push
xchg
call
std
inc
dec
ret
sarl
inc
gs
push
cmp
stc
int3
mov
stos
sbb
insl
movsb
jle
add
mov
call
test
mov
sti
pop
mov
dec
shrb
mov
mov
jge
shll
mov
and
sbb
fucomp
stos
mov
insl
lods
rolb
push
adc
push
xchg
mov
mov
or
mov
icebp
ret
stos
dec
xchg
mov
or
push
or
xchg
outsb
test
gs
aas
mov
int
iret
rolb
cmp
jno
ljmp
jno
lcall
imulb
or
push
mov
repnz
shll
lcall
jmp
mov
ds
data16
repnz
bound
loop
jl
rorb
imull
cmp
dec
jae
stos
push
and
mov
dec
adc
push
inc
aas
mov
add
shll
mov
cmp
dec
mov
jns
mov
cmpsb
xor
jge
lret
sbb
shrb
out
in
lods
idivb
push
mov
cmpsb
or
out
fidivs
mov
sbb
mov
xor
jecxz
mov
daa
mov
add
add
fldl
or
inc
mov
cmpsl
adc
adc
or
push
pop
mov
loope
fstp
xor
test
sub
pop
jno
push
aaa
xchg
mov
cs
mov
jae
mov
jmp
std
cs
and
mov
scas
ss
push
jmpw
frstor
imull
pop
out
mov
ds
push
xor
mov
and
icebp
adc
rorl
shll
lods
mov
test
mov
or
loop
xorb
dec
in
ljmp
xchg
lock
popa
or
in
sbb
cli
push
call
inc
sub
std
lahf
xlat
adc
mov
sbb
int
cli
cmpsb
mov
test
lock
icebp
cmp
in
and
adc
pop
arpl
stos
shufps
and
sbb
nop
push
lret
xchg
outsb
xor
adc
lret
mov
in
mov
mov
pusha
aam
aam
and
mov
jo
ljmp
pusha
cmp
push
insb
xor
xchg
movsb
nop
lret
cwtl
test
sub
or
sahf
jl
stos
loopne
aam
out
icebp
repnz
cmpsl
int
and
hlt
adc
imul
mov
lods
lcall
sbb
and
xchg
popf
clc
hlt
mov
mov
push
outsb
enter
inc
movsb
push
and
cli
add
incb
cmp
fisubrl
sbb
pop
iret
rorl
mov
jae
inc
mov
push
shll
out
mov
mov
fsubs
aas
cmp
add
and
mov
js
and
add
push
mov
sbb
movsb
xlat
or
jne
mov
adc
scas
dec
in
mov
mov
mov
cmp
push
cmp
ret
xchg
mov
xor
jne
aas
lcall
pop
pop
cs
aaa
dec
leave
mov
cmp
xor
lds
push
movsb
xchg
add
sbb
test
xlat
aaa
mov
test
std
mov
jnp
repz
sbb
repnz
sub
adc
pop
cmp
movsl
cltd
mov
addr16
mov
in
daa
mov
push
shlb
mov
sub
jg
cmp
dec
out
fwait
sbb
setnp
or
sbb
pop
daa
lcall
push
dec
flds
loop
inc
xabort
cmpsl
lods
jmp
mov
mov
adc
insl
jns
mov
jle
stos
mov
fnstenv
mov
xchg
shll
xor
mov
mov
add
add
loopne
test
sahf
pop
insl
pusha
push
xor
add
movsb
shlb
call
sub
inc
lahf
out
push
mov
adc
mov
xor
jo
xchg
sbb
push
mov
xchg
iret
divb
push
gs
mov
inc
lods
lods
call
pop
adc
mov
cmp
xor
cmp
fstps
ljmp
jns
inc
jmp
insb
xor
xchg
inc
jle
cmp
lods
or
subb
inc
test
push
testb
jbe
sahf
mov
loopne
mov
repnz
xchg
sbb
ret
jp
xchg
div
sub
xor
shlb
inc
sbb
ret
add
stos
mov
xchg
jg
aam
adc
cs
imul
cmpsb
test
gs
cmpsb
in
fdivrl
or
push
sbb
shl
pop
push
lock
mov
mov
ss
arpl
mov
lcall
mov
ret
sub
jns
lods
cmpl
mov
xchg
pop
mov
pop
sub
jecxz
test
sub
shrb
xchg
jne
lret
and
lcall
cs
adc
push
dec
ljmp
jo
push
push
xor
ret
pop
pop
add
pushf
mov
popf
fsubrl
mov
mov
jle
and
leave
das
imul
daa
or
jne
jnp
and
jo
mov
pop
sub
imul
aaa
aaa
sbb
cmpsl
jns
and
gs
iret
xchg
mov
jo
mov
dec
pop
xor
pop
adc
aaa
sarb
ja
jle
mov
insb
mov
out
adc
inc
cmp
not
pop
pop
rol
int
push
cmpsb
stos
jp,pn
insl
mov
mov
adc
mov
aaa
pusha
push
push
jbe
insb
mov
xorb
aad
mov
pop
cmc
mov
fsqrt
or
lods
and
mov
jl
mov
je
pop
mov
sahf
push
faddp
mov
lock
mov
pop
lds
jb
sub
mov
ljmp
loop
dec
subl
jno
push
lret
inc
lods
mov
loope
or
xchg
cmp
cmp
popf
in
jno
imul
aad
mov
stos
sub
icebp
jnp
es
cwtl
and
lahf
push
repz
sti
bound
mov
in
scas
pop
stc
lret
pcmpeqw
out
sbb
je
dec
dec
mov
push
adc
pop
xor
dec
std
mov
and
cmp
mov
pop
js
repz
adc
lcall
mov
movsb
sbb
jp
leave
dec
push
add
pop
push
sbb
add
repnz
and
les
mov
inc
adc
pop
test
and
mov
sahf
push
stc
jp
add
out
in
pop
xchg
in
aas
test
pop
leave
or
movsl
mov
mov
mov
add
mov
mov
push
sar
dec
loope
sub
loope
push
xor
jns
or
aad
sbb
sti
jmp
jnp
outsl
pusha
stos
lret
aaa
adcl
mov
mov
xor
fmulp
xchg
lods
xchg
sahf
ficompl
in
ds
ret
mov
pop
push
xlat
aad
xchg
mov
pusha
das
cmp
dec
orl
mov
mov
pop
and
imul
mov
jns
sbb
jns
inc
fnstcw
mov
dec
xchg
cs
push
mov
cwtl
imul
push
jae
xchg
lea
sub
mov
jg
cli
jne
adc
jae
dec
cmc
jl
cmp
imul
mov
cmp
push
rcrl
cmpsl
sbb
mov
shlb
mov
lock
testb
leave
adc
inc
scas
add
push
movsb
add
push
fidivl
push
std
iret
into
jns
adcb
das
outsl
imul
mulb
adc
or
les
push
sbb
jle
push
xchg
inc
in
sbb
push
or
adc
adc
cmpb
loope
call
xchg
lahf
fidivrl
popa
popf
jb
mov
fdivr
leave
pop
test
shl
arpl
test
mov
pop
sbb
inc
js
and
mov
xchg
mov
popa
aad
dec
cld
jns
sbb
sahf
ja
nop
sub
or
sbbl
jbe
pop
fwait
push
sahf
xchg
sub
lret
imul
push
setg
mov
das
dec
mov
mov
or
popf
addr16
jo
outsb
cmpb
jg
lea
test
pop
mov
frstor
cwtl
scas
int
mov
dec
movl
xor
add
shrb
mov
jbe,pt
lahf
sbb
mov
jb
xchg
inc
xor
xor
mov
xor
lahf
out
jns
movsb
call
sub
stos
in
xorl
movsb
or
mulb
adc
push
jbe
inc
jo
hlt
push
leave
movsl
fcoms
cltd
xor
adc
lods
dec
je
ret
dec
icebp
push
push
lret
daa
add
push
jae
stos
mov
ds
fcmovnu
std
loope
movsb
dec
data16
lcall
mov
cmp
das
lods
andb
popl
cli
mov
ss
in
jb
movsb
cmpsb
adc
int
fidivrs
mov
mov
cltd
jl
cli
fadd
cmpsb
sub
push
cmp
out
and
xchg
int
xor
jnp
out
lret
pusha
fistpll
fstl
test
int3
xchg
add
inc
jp
sub
mov
xor
leave
sti
lods
addr16
xor
out
cmp
push
mov
add
sahf
std
sub
mov
repnz
xchg
cmp
outsb
mov
std
pop
cmc
jg
pop
jg
aas
movsb
jmp
add
or
mov
fdivs
rcll
je
sub
mov
in
repz
mov
lret
in
adc
into
jne
xor
lods
sbb
jbe
mov
movsb
outsb
jmp
mov
sub
lret
pop
cmp
das
rcll
mov
cmp
mov
sarb
inc
add
lea
xor
sbb
std
mov
dec
sub
inc
imul
in
gs
nop
pop
cmc
shlb
movsb
dec
lock
pop
popf
jne
mov
aaa
xor
push
test
jecxz
ss
adc
stos
test
push
dec
mov
in
cli
mov
or
inc
icebp
arpl
sub
mov
fnstenv
adcl
sbb
jo
movsl
pusha
and
hlt
pop
movsl
out
pop
ds
xor
cli
in
sub
cmp
pop
jmp
movsb
jl
sahf
call
mov
mov
lret
push
mov
sbb
int3
dec
jg
mulb
mov
sub
add
stos
push
mov
popa
cs
sub
cmc
push
add
daa
aaa
loop
lahf
bound
sbb
loop
mov
lods
fcomps
clc
cmpsl
loop
push
stos
ds
jns
pop
fdivl
cld
mov
aaa
pop
movsb
add
jns
movsl
mov
xchg
icebp
js
add
xlat
push
xor
inc
movsb
jbe
ja
scas
xchg
cmp
mov
sahf
ljmp
movsl
cli
mov
bound
sbb
add
pushw
in
daa
jb
and
lea
mov
cmp
outsl
nop
lahf
xor
jo
cmp
sbb
cmp
mov
ret
add
lods
push
frstor
jge
stos
sbb
adc
sbb
adc
jbe
dec
das
imul
iret
jo
ret
popf
sub
jecxz
and
xor
lret
int
dec
fdivl
xor
mov
inc
adc
jmp
and
fwait
int
mov
dec
xchg
cmpb
dec
add
and
mov
ffree
or
andb
mov
int
or
xor
push
aam
cmpsl
adc
mov
data16
dec
jb
negl
xchg
test
xor
aam
xor
lods
or
inc
adc
icebp
fsts
add
mov
mov
mov
xchg
mov
ljmp
lds
lock
jae
sbb
imul
sub
es
and
dec
add
jmp
and
repnz
mov
xor
pop
movsl
and
out
mov
xor
jmp
mov
negl
cmp
das
mov
mov
pop
dec
lds
fnstcw
lock
movsb
out
mov
mov
mulb
idivb
test
adc
rcr
sbb
lahf
test
add
cmp
lods
lahf
or
adc
and
arpl
xchg
lcall
aas
push
mov
lods
pop
pop
xor
aaa
push
sahf
mov
iret
lea
dec
adc
jle
decb
jecxz
movsb
push
dec
push
gs
push
mov
jns
mov
roll
push
mov
push
rcr
mov
inc
inc
or
sbb
imulb
icebp
jb
jns
lock
out
inc
push
loop
cwtl
mov
sbb
inc
aam
stos
lds
mov
cmp
idivb
rolb
out
push
xchg
adc
mov
fwait
add
or
daa
and
xchg
mov
cltd
int
lret
push
xor
mov
out
subb
jg
sub
jno
sbb
in
sbb
cld
pop
ret
xchg
in
mov
sub
ja
fwait
loopne
jae
loopne
lods
sbb
mov
sbb
xor
cmp
int3
imul
imull
and
sahf
push
add
cmc
jbe
jb
xchg
sbb
lea
push
imul
jmp
loopne
cmp
in
shlb
lret
daa
mov
jno
loope
ja
push
jae
push
enter
sbb
dec
insl
in
sub
cmp
mov
add
cmc
mov
sub
mov
frstor
mov
or
push
mov
push
cmp
or
lea
push
adc
cmp
aam
sti
mov
mov
mov
ret
cmp
pop
xlat
lods
add
mov
cmpsb
ja
add
fs
pop
enter
int3
mov
sbb
pusha
dec
imul
inc
push
pusha
inc
daa
push
shrl
add
ret
jae
jo
xchg
push
cmp
pop
shl
ds
cmpsl
cli
dec
mov
fdivp
test
mov
xor
das
jp
mov
add
xchg
jns
lcall
mov
mov
add
xor
push
fs
in
jns
jnp
mov
cmc
into
lahf
xchg
hlt
mov
gs
test
adc
jmp
or
test
insl
lds
ror
sub
push
icebp
movsl
shlb
xor
sarb
adc
shll
sbb
adc
and
sub
movsb
inc
cs
lea
je
xor
ja
inc
xor
mov
fldcw
jmp
pop
aaa
movsb
loop
int3
inc
mov
mov
scas
insl
daa
cmp
mov
movsb
inc
pop
addr16
push
mov
lods
aad
mov
test
dec
in
nop
and
jae
andb
mov
in
sub
cmpsb
xor
into
mov
stos
jmp
fidivs
sti
or
mov
sahf
pop
jl
das
xor
xor
idivl
pusha
out
lcall
jbe
inc
nop
es
js
negl
xchg
popf
cmpl
push
or
xchg
in
movsb
repnz
test
mov
adc
adc
pop
popf
fiadds
daa
cmp
mov
popa
xor
stos
sub
and
mov
xchg
push
rcrb
mov
mov
imul
daa
xor
dec
not
pop
mov
add
xor
push
xlat
jecxz
loopne
cli
add
fucomip
sarb
push
jns
adc
cmp
add
mov
repnz
mov
sbb
insl
xor
jmp
mov
sub
add
or
push
and
adc
add
xchg
icebp
cmc
jnp
es
int3
mov
or
dec
xor
faddp
shlb
sbb
add
xchg
iret
push
stos
aad
fsubl
mov
inc
leave
jle
bound
lods
xor
sub
adcb
in
xor
xor
mov
and
pop
scas
or
in
cltd
cmp
rcl
stc
call
jmp
mov
insb
cmp
cmp
mov
xchg
pop
and
int
mov
cmp
push
lcall
jbe
inc
sti
cmp
stos
xor
jmp
jl
push
fs
mov
shl
ja
push
leave
outsb
sbb
das
inc
ja
int3
inc
cmp
dec
fidivs
push
loop
jbe
pop
push
inc
icebp
cmp
ljmp
lea
stos
xor
fldcw
mov
mov
or
jno
xor
mov
aaa
push
xor
adc
cmpl
xor
ljmp
mov
std
ret
mov
sub
sub
or
dec
cmp
inc
out
or
adc
cmc
inc
sub
int
aam
fildl
dec
das
aam
mov
adc
push
int
js
stos
inc
aad
xchg
dec
sbb
out
push
sub
stos
loope
inc
rcl
faddp
stos
pop
stos
je
and
cmpsb
iret
subb
xchg
das
jecxz
movsb
cld
clc
push
adc
push
push
loop
cmp
push
test
hlt
jns
loop
cwtl
sub
adc
aas
sub
dec
repnz
sbb
cli
movsb
shr
fs
lock
mov
hlt
cmp
in
loopne
in
sarl
jmp
sub
sub
sub
orb
sbb
popa
fimuls
mov
mov
jno
sbb
adc
mov
jne
cld
jns
stos
mov
xor
pop
sahf
mov
cmp
out
cmp
arpl
sbb
std
sbb
in
rclb
sbb
out
and
inc
aam
mov
out
xchg
cmp
popf
and
jge
ds
inc
in
jle
mov
ss
push
mov
adc
fdivs
push
or
jle
cmpsl
pop
fwait
popf
xchg
jmp
xchg
cmp
out
pop
repz
insb
dec
sbb
and
std
xor
jns
outsl
inc
dec
adc
loopne
test
xorb
inc
push
aam
push
test
fstpl
and
push
xchg
or
adc
aam
scas
mov
mov
mov
push
loop
pusha
rcrb
movsb
psubsw
mov
push
daa
adc
cmp
push
and
ret
cli
adc
lret
mov
insl
cwtl
or
dec
js
loope
push
jecxz
jge
loopew
inc
xchg
icebp
shll
data16
xchg
sahf
adc
pop
fstl
inc
cs
shlb
dec
inc
adc
xchg
shlb
xchg
loop
push
xor
push
push
adc
pop
push
cmpsb
cmp
dec
adc
lret
fmulp
xor
or
cmc
hlt
call
push
clc
das
push
cmp
stos
les
cmpsl
add
pop
sub
lds
aam
push
mov
pop
mov
mov
jmp
mov
mov
pop
jb
inc
jecxz
test
cmp
pop
dec
mov
inc
push
pop
clc
out
sub
fwait
shrb
xor
jae
shll
jbe
mov
adc
out
jecxz
jmp
fimuls
adc
pusha
mov
aad
imul
popf
and
mov
pcmpeqw
sbb
dec
and
int3
ss
fidivs
in
cmp
es
mulb
ret
dec
jne
push
xor
jmp
push
sbb
mov
rol
ljmp
jb
mov
xor
ja
mov
jno
or
movsb
in
shll
rol
dec
ja
sbb
mov
test
xor
xor
push
or
mov
jmp
into
mov
pop
mov
cmp
lahf
dec
xor
xor
mov
outsb
jecxz
jo
and
inc
shll
fcoml
push
xor
or
jae
cmc
popa
loop
mov
jns
inc
mov
das
stos
subb
repnz
push
cmc
sub
in
sti
and
pusha
inc
jmp
test
scas
jecxz
divb
movb
push
mov
pop
jns
jge
cmpb
in
dec
in
adc
insl
mov
pop
pop
sbb
xchg
negb
lahf
ja
push
test
cmpsb
and
mov
movl
rclb
adc
pop
sarl
int
sbb
push
aam
fucomp
push
fs
cmpsb
out
jae
pusha
sahf
std
lcall
push
sbb
rclb
dec
jmp
movb
inc
pop
adc
push
xor
jo
xor
sbbl
in
icebp
scas
mov
jmp
movsb
sbb
add
mov
popf
adc
xor
fsubs
xchg
ds
mov
mov
adc
mov
jp
pop
mov
iret
sbb
cmp
insl
cmc
pop
in
jo
fistl
scas
std
lret
pushf
mov
ret
movsb
xchg
xchg
sub
scas
jbe
add
xor
sub
dec
cmp
mov
popf
cwtl
mov
push
sarb
pop
in
cltd
xor
in
jmp
mov
inc
repnz
mov
xor
ds
xor
push
mov
or
ja
out
into
cwtl
mov
push
cmp
push
pop
mov
inc
lahf
jmp
cwtl
xchg
dec
fisttpll
mov
fbstp
mov
pop
jno
in
xor
mov
es
push
orl
lret
pop
hlt
or
inc
iret
jle
mov
jb
mov
push
push
mov
in
fiadds
mov
adc
js
mov
pop
add
in
sbb
loopne
aam
lea
xchg
movsb
push
push
mov
sahf
xchg
sub
push
lcall
dec
subl
dec
stos
in
lds
scas
sbb
mov
adc
cmp
and
pop
cli
jnp
jbe
ret
sbb
push
inc
repz
in
sub
mov
ficoml
out
xor
sub
cmc
sahf
es
insb
push
xor
adc
pop
stos
push
test
frstor
push
mov
xor
and
cmp
mov
aaa
mov
cltd
sbb
iret
jle
mov
cmp
push
in
pusha
jp
mov
loopne
pop
pop
mov
call
mov
ljmp
xchg
xor
pop
ja
dec
out
addr16
mov
clc
shlb
jmp
movsl
mov
std
xchg
adc
mov
jnp
imul
inc
jecxz
repz
xchg
push
sbb
adc
int
sbb
dec
inc
fwait
mov
push
jb
push
push
shll
sub
mov
aaa
cmpsl
adc
in
nop
ret
ds
aad
out
xor
xor
movsl
add
fnsave
mov
mov
mov
push
xor
stc
cmpsb
xor
cltd
xorb
jecxz
sbb
cmpl
stos
jb
pop
fnstcw
sbb
adc
sbb
sbb
cmc
movl
push
es
mov
sub
and
es
mov
leave
and
mov
ret
jp
out
add
xor
pop
inc
cmp
lret
fidivrs
leave
mov
cwtl
jmp
sbb
pop
sbb
mov
lea
icebp
sub
sbb
sbb
mov
push
cmpsl
push
xor
shl
repnz
movsb
in
inc
adc
adc
iret
mov
mov
mov
pop
aaa
bound
cmp
inc
or
insb
xor
mov
loope
fcmovb
adc
aaa
push
lock
jnp
shlb
call
pop
testl
or
arpl
jae
push
lret
movsl
jo
nop
les
mulb
jb
ja
jg
out
sbb
add
dec
addr16
xchg
repnz
cltd
int
fmul
iret
lods
dec
icebp
jns
movsl
adc
das
mov
lret
cmp
xchg
test
push
add
mov
js
xor
and
xor
ljmp
mov
mov
add
das
pop
xchg
mov
outsl
mov
mov
mov
lahf
pop
adc
xchg
or
or
in
xor
mov
aaa
pushl
int3
mov
sbb
ret
xor
mov
aas
fisubrl
lss
dec
daa
xchg
cmp
mov
jg
dec
insl
xor
out
lret
mov
fs
xor
jne
cli
icebp
push
xor
cli
pcmpeqw
xor
cmc
cmp
mov
mov
jnp
loop
test
not
lods
fidivrl
cmp
and
cmp
xor
xor
xor
mov
jns
mov
cmp
xor
jp
ja
sub
lcall
mov
adc
adc
fdivrl
cmp
clc
xor
mov
nop
sti
ljmp
cmp
xor
jns
lock
mov
aaa
jae
mov
outsb
lods
and
gs
xor
sti
cld
repz
xor
mov
xor
jnp
mov
xor
adc
adc
mov
mov
icebp
mov
cli
mov
mov
mov
mov
jp
sbb
fnsave
hlt
cli
pushl
xor
imul
fnsave
mov
jle
idivb
or
int
mov
mov
xchg
cmp
jns
mov
repnz
or
and
mov
pop
mov
mov
xchg
divl
mov
shlb
sbb
sbb
mov
jnp
std
pushl
in
cmp
jo
mov
cli
mov
jge
aas
cmp
dec
jno
mov
mov
xor
aaa
sbb
movsl
mov
lods
xor
mov
xchg
div
data16
adc
divb
idivb
cli
xor
mov
fcompl
pop
xor
jo
cmp
rcrl
aad
mov
dec
imul
sub
push
jge
sub
stc
add
mov
sbb
in
xchg
or
inc
cmp
lcall
mov
inc
or
mov
xchg
and
adc
pusha
daa
xor
add
mov
out
jnp
adc
mov
movsb
jb
sbb
lret
out
xor
xor
je
sbb
sahf
stos
ret
jne
loop
aam
inc
xor
ret
outsl
iret
cli
subl
scas
les
lret
shll
mov
hlt
imul
paddsb
icebp
lock
pop
pop
jae
loopne
xor
ljmp
pushf
xor
cli
push
out
jbe
and
pop
inc
outsb
push
aaa
imul
add
inc
cmp
dec
imul
arpl
fadds
ret
mov
ret
push
popf
and
inc
leave
push
xor
ret
stos
les
xlat
pop
mov
daa
adc
mov
cmp
or
jnp
rclb
jno
mov
sub
mov
inc
cmp
push
movsb
ret
xchg
add
push
les
ljmp
add
pusha
xchg
out
ds
mov
mov
movsb
jo
push
repz
jb
iret
ret
rolb
popa
iret
ret
int3
cmp
hlt
int
imul
cmp
mov
leave
xchg
loopne
pusha
fsubl
dec
sbb
xchg
arpl
out
adc
cs
mov
and
mov
cld
repz
mov
loopne
adc
shlb
mov
outsb
mov
outsb
jo
inc
bound
and
divb
inc
jno
mov
std
outsb
add
stos
mov
shrl
inc
xchg
repnz
push
mov
mov
xchg
mov
outsb
mov
repnz
jns
mov
jb
adc
and
push
or
pop
nop
out
or
cwtl
roll
loope,pn
sbb
aas
movsb
mov
or
mov
xchg
inc
jo
and
lods
mov
sub
pop
fwait
push
sub
out
sub
xor
mov
cmp
inc
ljmp
pop
adc
mov
aaa
push
jmp
mov
push
dec
mov
xchg
and
cmp
imul
sub
xchg
imul
pop
scas
lods
in
out
sbb
jns
test
mov
inc
ss
adc
pop
in
pop
inc
pop
stos
stos
dec
add
imul
cmpsl
iret
std
negl
sub
mov
enter
nop
pop
js
rcr
mov
inc
mov
add
inc
lahf
mov
nop
mov
cmp
ret
fnstsw
mov
ret
ljmp
cmp
repnz
enter
ja
dec
pop
or
xorb
cmpl
dec
sbb
cli
movsb
jecxz
adcl
jle
add
rorb
in
fsts
mov
cmpsb
out
mov
je
test
in
loop
es
adc
and
ficompl
repnz
cli
dec
mov
mov
cmp
ret
out
jbe
mov
je
cmp
cmp
adc
loopne
fmull
and
adc
push
adc
mov
lahf
jle
and
push
imul
mov
adc
push
shll
or
cld
je
sbb
out
and
and
or
scas
push
xchg
leave
out
cmp
out
push
je
clc
leave
push
adc
xchg
mov
jg
xchg
pop
xorl
push
cmp
mov
push
push
mov
jmp
popa
lods
std
movsb
mov
out
cmc
and
lods
int
je
mov
pop
rcl
mov
xlat
stos
mov
add
repnz
mov
hlt
lock
add
imul
and
mov
mov
sarb
and
test
pop
dec
sbb
inc
mov
inc
iret
lods
sbb
jnp
aaa
repnz
mov
aad
and
xchg
pop
rclb
xor
das
lret
mov
mov
lds
leave
mov
adc
xchg
cli
mov
cs
adc
mov
mov
aad
xor
pusha
inc
and
jmp
inc
mov
ficomps
jle
push
mov
and
clc
mov
es
push
dec
adc
std
mov
loope
and
insb
pop
mov
sbb
dec
mov
add
pop
je
pop
pop
mov
mov
sbb
mov
dec
push
or
dec
mov
scas
stos
pop
jb
fstpt
outsb
sbb
movsl
cld
js
fadds
xor
cmp
mov
xor
loope
pop
out
mov
jbe
mov
scas
shll
push
and
loop
jae
outsb
fnstenvs
inc
jge
or
mov
add
pop
addl
mov
mov
mov
test
sub
adc
jo
ss
jle
jmp
addl
inc
loopne
addb
adc
in
inc
lods
xchg
sbb
call
add
shll
scas
movsl
push
mov
mov
cmp
dec
test
mov
test
fcomps
daa
cli
pop
add
jbe
bound
repz
xchg
cld
adc
mov
mov
fdivrs
repz
mov
leave
and
out
sbb
out
test
inc
or
mov
mov
and
mov
or
sbb
stos
lock
int
mov
mov
jno
out
xor
loopne
cmc
rorl
fmul
mov
jmp
addr16
js
cli
mov
cwtl
mov
cmp
sbb
fidivs
xchg
push
js
stos
popf
in
lret
jecxz
pusha
mov
pop
push
pusha
sahf
lea
aam
xor
jl
fcompl
xor
push
lock
dec
inc
movsb
mov
push
inc
mov
int
xor
call
shlb
cli
lea
xchg
adc
in
push
or
jae
lcall
shrb
loop
add
push
or
or
mov
sarl
lcall
adc
out
mov
inc
mov
cwtl
pop
jnp
push
aas
std
pushf
in
adc
stos
jno
in
std
jl
pusha
ret
and
pusha
mov
ss
repnz
aam
cmp
aam
lahf
xor
call
aad
pop
inc
lods
push
inc
stos
dec
enter
daa
push
mov
push
ret
sbb
cmpsb
cltd
and
or
cli
cmp
mov
xchg
gs
mov
dec
cmp
mov
lret
add
test
call
xchg
in
gs
clc
mov
test
cli
or
repz
xor
cmc
rclb
ss
mov
scas
mov
jno
jecxz
inc
sub
test
cli
ret
push
mov
sbb
jae
mov
cld
xlat
sub
idivb
addr16
push
popf
mov
push
les
mov
mov
insl
dec
pop
pop
mov
and
jecxz
mov
push
ret
pusha
aad
ret
sub
push
vpsrad
cli
xor
sbb
in
rol
push
std
mov
or
scas
adc
in
xchg
insl
ja
and
cmp
lea
dec
icebp
in
mov
mov
xchg
lds
mov
std
mov
sahf
repnz
movsb
mov
push
imul
ljmp
nop
mov
push
sub
xchg
push
in
pop
enter
js
mov
mov
xchg
mov
push
shll
movsl
sub
or
push
sbb
sbb
lods
pop
cmp
pop
fisubs
out
mov
fildl
jae
sub
mov
lods
inc
cmp
pop
jg
movsb
inc
js
dec
sbb
and
mov
push
out
scas
rcl
loop
push
fidivrs
repnz
outsl
jmp
cmpsb
fdivrp
negb
notb
loop
sbb
lods
push
inc
inc
or
or
and
mov
adc
mov
mov
dec
data16
jno
xor
popa
mov
jle,pt
pop
xor
pop
jno
jge
pusha
cltd
test
xor
repz
mov
insl
push
mov
insb
jp
push
mov
jae
lahf
inc
or
mov
aas
jae
out
arpl
inc
xor
or
rcll
pop
and
hlt
sub
and
imul
mov
xor
movsb
shr
sbb
mov
nop
xchg
xor
roll
xlat
xchg
daa
stc
sub
and
imul
push
jmp
push
loope
sub
pop
pop
scas
stc
ds
xor
push
xchg
mov
adc
popf
daa
hlt
adc
orb
sub
sahf
jnp
sub
push
data16
mov
sub
ja
push
pop
cmp
xor
dec
pop
cwtl
push
gs
and
lds
cmp
int
ret
into
dec
clc
or
das
mov
pop
push
arpl
adc
cmp
ret
push
addr16
jmp
es
xor
and
jmp
jne
cmp
push
sub
cmp
adc
clc
jae
scas
push
cmpsb
cmp
pop
aaa
lock
ds
jle
jecxz
mov
shl
jl
ficomps
or
sub
ret
mov
js
pusha
data16
mov
push
adc
icebp
mov
loope
mov
shlb
sti
ds
cmp
movl
lds
movsb
repz
lods
setge
in
mov
sbb
xor
xchg
add
mov
sbb
cmc
sub
ret
pop
push
adc
and
std
cmp
iret
xor
or
in
mov
jne
adc
push
rcll
jns
or
and
dec
sbb
dec
ret
lock
cs
sbb
or
popf
adc
lods
pop
inc
aam
lret
ds
stos
sub
shl
cltd
push
jecxz
and
js
decb
movsb
adc
loopne
cmp
inc
push
jmp
adc
inc
cli
jmp
ror
cmp
repz
mov
add
dec
stos
adc
xor
insl
push
push
ss
into
add
cs
xor
aas
loopne
pop
sub
in
loopne
or
mov
jne
adc
jne
adc
sub
aam
rorb
sbb
xlat
jnp
sbb
shrb
push
mov
xchg
mov
out
imul
sbb
cmp
ljmp
xor
xor
lret
pusha
xchg
pop
shrl
sahf
xor
jg
ja
sarl
cmp
inc
or
ljmp
jno
pop
xor
push
sbb
test
xlat
ss
out
mov
out
adc
out
test
mov
jne
fs
rolb
cmp
dec
sysenter
hlt
daa
push
mov
in
out
adc
mov
mov
push
xor
and
dec
enter
xlat
mov
pop
xchg
jae
push
fimuls
or
add
lock
movsb
mov
movsl
adc
pop
pop
mov
push
adc
mov
movsb
jae
cltd
or
loop
lahf
ror
and
in
sub
mov
lcall
iret
ds
sahf
sub
loopne
cmp
push
dec
add
hlt
neg
sbb
loop
dec
jae
pop
movsb
jmp
jo
add
jl
and
pop
stos
xchg
sub
jmp
xor
sub
xchg
repz
push
cli
aas
dec
mov
movsb
in
or
movb
mov
icebp
inc
fistpll
inc
jb
mov
jecxz
cmp
cmp
jno
pop
std
scas
mov
subb
inc
ja
lret
xchg
add
mov
pusha
and
nop
inc
aaa
xchg
jne
addr16
fdivs
mov
jae
adc
fwait
and
mov
mov
rcrl
push
xchg
lods
insl
mov
movsl
bound
xor
repz
mov
cmp
mov
loope
icebp
in
sar
shlw
mov
das
aaa
fidivs
xchg
xor
lcall
add
jle
mulb
jno
xor
popa
add
sbb
movsb
daa
leave
andb
mov
out
ss
cmp
shlb
and
outsb
cmp
jge
lock
sbb
jmp
inc
in
sti
xor
push
add
xchg
dec
int
loop
int3
enter
scas
sarb
adc
mov
xor
decl
push
bnd
push
aaa
shll
aam
push
mov
xchg
mov
in
test
push
push
insb
in
adc
aaa
repz
mov
and
mov
sub
rcrb
fidivs
xchg
shlb
subl
mov
cmpsb
add
cltd
fadds
adc
adc
in
jb
jae
movsb
mov
pop
dec
dec
jle
mov
mov
pop
shll
jg
inc
and
xchg
imul
cmpb
mov
jle,pt
mov
into
add
cli
arpl
addr16
das
adc
mov
sub
stc
jmp
jno,pt
fs
mov
jl
xchg
lock
push
cmpl
sub
ds
jns
les
push
loop
js
dec
push
mov
mov
lds
adc
ja
jns
movsl
cli
lock
xchg
loop
in
inc
mov
pusha
jns
scas
or
inc
ja
push
mov
sti
shlb
repnz
sbb
push
add
xchg
lret
add
inc
inc
mov
cmp
into
inc
inc
stos
dec
and
mov
adc
fcoml
icebp
inc
movsb
mov
inc
aad
popa
stos
stos
ljmp
dec
pop
jns
lret
fwait
in
stos
test
lea
cmp
xchg
push
dec
mov
sbb
imul
mov
cli
inc
sarl
nop
and
das
mov
mov
cmp
push
in
sbb
mov
mov
adc
out
dec
nop
xor
mov
aaa
and
repz
or
cmp
jmp
bound
mov
inc
xor
test
xchg
mov
add
cs
out
pop
repnz
cmpsl
rclb
stos
sbb
popf
lea
cmp
aaa
mov
xor
and
scas
push
je
pop
adc
xchg
add
gs
sub
js
jmp
xchg
fchs
dec
jg
sbb
cs
xchg
sub
inc
xchg
sub
inc
push
repnz
aam
std
movsb
push
sub
pop
andb
gs
xchg
mov
mov
mov
icebp
dec
xor
xor
add
push
shrb
fnstsw
jge,pt
das
lahf
aas
xchg
push
mov
popf
cmp
cmpl
shrl
xor
popf
lea
cmp
repz
sub
ret
push
int3
dec
xor
daa
mov
in
out
stos
aam
or
mov
enter
adc
das
sbb
lea
mov
xor
ret
int
and
cmpsb
cld
push
sti
sti
leave
call
stos
ja
rcrb
gs
mov
std
outsl
sub
test
dec
xorl
addr16
sti
mov
sbb
jns
cmp
in
popa
repnz
js
std
dec
mov
mov
xchg
scas
test
inc
je
push
test
shl
fdivs
mov
aas
rcrl
mov
jg
mov
adc
ss
sub
fs
mov
stc
cmp
mov
mov
jb
push
cmp
mov
sub
imul
xor
lea
repnz
and
push
rsqrtps
mov
mov
stc
loopne
xchg
push
mov
popl
iret
insl
xchg
xor
scas
movsb
icebp
sbb
enter
dec
mulb
xchg
das
cmp
cltd
dec
in
fcmovbe
aaa
cmp
xchg
imul
dec
out
add
adc
fwait
lret
mov
lcall
inc
add
mov
test
icebp
ss
sub
ret
int
sub
rcl
lods
adc
addr16
outsl
cmp
xchg
sub
jb
lds
jnp,pt
jg
ljmp
dec
mov
ret
mov
mov
es
mov
into
cmc
add
sti
cmp
cwtl
xor
xchg
and
adc
ss
push
adc
mov
movsb
and
adc
test
nop
es
dec
jge
inc
leave
fwait
mov
pop
xchg
js
mov
mov
dec
testb
cmpsb
pop
lret
lds
hlt
addr16
mov
and
mov
ljmp
adc
ret
add
dec
ficoml
jle
ljmp
inc
xor
lret
stos
gs
movsb
xchg
mov
and
sbb
and
xor
repnz
sbb
stos
loopne
push
cmp
jecxz
mov
mov
xchg
jnp
movsl
leave
sti
sarb
pusha
orb
xor
aam
xor
mov
lods
fmull
ret
sub
sbb
or
or
add
divb
mov
mov
inc
sbb
clc
mov
lahf
mov
daa
inc
adc
sahf
lods
and
movsb
outsl
add
mov
mov
std
dec
cmp
ja
shr
xchg
shrl
movsb
dec
sub
adc
das
xor
cmp
fcmovb
mov
xor
mov
in
or
add
dec
xchg
mov
sub
fdivrl
jno
jae,pn
pop
pop
adc
mov
adc
pop
pop
and
and
sub
rolb
aam
lods
push
test
cmovnp
mov
std
clc
jbe
mov
sbb
jmp
out
aad
cmp
subb
dec
add
mov
mov
imulb
outsl
outsl
jno
dec
mov
out
mov
xchg
iret
in
clc
xchg
xchg
jp
push
sub
aad
andb
xchg
lods
xchg
fsubl
pop
sub
cs
out
dec
movsb
fstps
mov
jmp
nop
push
scas
push
mull
mov
test
pop
jmp
add
sub
mov
jno
xor
pop
stos
dec
cmp
pusha
lock
adc
int3
ret
lods
movsl
cs
ja
push
adc
xchg
cld
inc
push
xor
mov
jge
mov
stc
mov
cltd
clc
repz
rcrl
cmp
shll
lea
je
daa
fnstcw
or
aas
sbb
movsb
jle
dec
test
sub
jno
adc
sbb
arpl
push
dec
cltd
outsl
mov
movsb
push
ror
lret
mov
mov
cmc
test
xlat
pop
mov
add
push
lock
jno
movsb
test
adc
sbb
sub
jno
sbb
lret
dec
dec
outsl
pop
xor
mov
call
js
mov
inc
sahf
shlb
sbb
jmp
out
aam
gs
cmp
imul
test
xchg
mov
int
cmp
mov
lret
mov
out
jge
decl
cmp
pop
sub
scas
mov
inc
adc
push
mov
mov
xor
roll
fstp
jb
popl
movsb
loopne
loope
mov
jnp
cmp
xor
and
je
dec
cmp
loop
ss
mov
sub
mov
push
or
movsb
adc
add
xchg
push
fbld
stos
icebp
mov
dec
js
mov
xor
mov
xor
rol
out
mov
out
pop
aaa
cs
and
lea
aam
in
pop
out
sar
pop
mov
mov
out
pop
cld
cmp
out
mov
push
bound
es
adc
les
lahf
mov
divb
out
or
jo
adc
mov
lods
xchg
pop
inc
mov
and
or
sub
ss
jge
cs
imulb
jns
adc
dec
cmpsb
jg
dec
fldl
inc
and
mov
cmp
mull
insl
cmp
cli
cmpsb
mov
lock
mov
mov
dec
mov
and
mov
test
sub
xor
jmp
fstpt
xchg
mov
aas
push
sbb
inc
hlt
mov
mov
and
rcll
sbb
loopne
das
movsl
xor
cmp
lahf
std
inc
mov
popf
popf
push
jg
lahf
mov
ljmp
decl
sahf
mov
add
mov
xchg
repnz
add
adc
rcll
cmp
jns
jecxz
push
pushf
mov
push
inc
pop
mov
mov
andb
sub
pushf
aas
scas
sub
lods
pop
sub
push
pop
mov
mov
fwait
cli
mov
stos
pop
mov
add
push
fadds
add
int3
inc
sbb
cltd
fisubrl
push
scas
adc
mov
cmp
push
xlat
cmpsl
cmpsb
add
out
sub
mov
xor
cmp
xlat
movsb
mov
push
cmc
mov
out
mov
repz
jo
mov
push
cs
repz
and
cmp
test
es
stos
xor
shrl
add
mov
adc
mov
push
bound
ja
lods
mov
shr
mov
insl
pop
or
jb
mov
jns
mov
shrb
xor
inc
vmovq
shlb
mov
cmp
fadds
xchg
imul
inc
add
xor
jecxz
pop
or
cs
mov
dec
sarb
aaa
arpl
adc
leave
hlt
fidivrl
notb
mov
adc
push
daa
rcll
xchg
xor
jnp
mov
aam
and
add
push
xor
sbb
mov
push
push
dec
pop
push
mov
aaa
cmp
nop
loope
xor
mov
lret
iret
sahf
push
sbb
call
adc
and
mov
xor
mov
jle
call
sub
fs
mov
xor
rcll
and
gs
cmpsb
dec
push
hlt
inc
repz
rcrb
pop
jb
mov
ds
sbb
loopne
out
jb
fs
stos
jbe
hlt
movsb
lea
jo
jp
addr16
decl
sbb
and
cmpb
aad
enter
rcll
cmc
mov
aad
pop
sub
xchg
xchg
jge
scas
dec
cmp
in
push
fisubs
inc
cmc
mov
mov
push
ja
ret
cmp
or
sar
loopne
popf
ja
cli
adc
out
inc
cs
lods
inc
sbb
xchg
and
mov
push
jbe
stos
adc
ret
dec
out
jmp
mov
jle
sub
mov
scas
aad
dec
repnz
mov
ja
dec
mov
lods
push
adc
xor
dec
mov
inc
mov
cmp
push
arpl
sarb
hlt
sbb
inc
into
lret
push
rcll
or
arpl
cs
cwtl
cmc
cld
aas
jmp
cmp
push
sbb
xor
xchg
pushf
mov
pop
dec
out
jecxz
leave
cli
or
sub
cs
jbe
xor
add
cli
aaa
ret
rcrb
wbinvd
mov
cmpb
nop
outsl
or
or
push
adc
jg
icebp
xchg
mov
ficoml
lret
lcall
fsubrl
mov
aas
cltd
imul
shr
fldl
rcrl
iret
pop
sti
stc
test
xor
or
test
cmp
xor
mov
mov
sbb
mov
cmp
lods
dec
aaa
xchg
mov
fnsave
cmpsl
xor
push
pop
aas
jae
out
inc
push
mov
test
orb
aas
pop
jecxz
frstor
mov
add
dec
ds
mov
out
hlt
jo
xchg
fdivrl
stc
fdivs
push
jmp
and
mov
cmp
push
jb
adc
push
pop
rcr
in
lock
mov
dec
enter
stos
divb
push
cmp
loop
and
nop
cmp
lds
mov
add
push
xchg
xchg
mov
pop
mov
lret
adc
clc
and
pushf
add
mov
jg
shr
in
scas
shrl
dec
stos
std
cmp
jmp
pop
dec
sub
movsb
loopne
and
mov
or
push
in
lods
jle
add
addr16
or
push
pusha
jg
ret
fldl
into
xlat
call
ljmp
aam
fnstenv
cs
cwtl
xchg
jl
inc
cmc
mov
cwtl
ja
aad
into
jb
xor
arpl
imul
cld
repnz
and
lret
cmpsl
sahf
xchg
cmp
cmp
ja
rolb
movsl
fwait
lock
dec
or
stos
loopne
cld
arpl
mov
sub
outsb
addr16
pusha
xor
nop
stc
jg
imul
outsl
push
mov
lods
sbb
stos
mov
mov
rol
ds
popf
cmp
repnz
xchg
dec
hlt
push
imul
push
sub
js
ret
mov
adc
insl
dec
adc
ja
or
icebp
mov
mov
inc
mov
fmull
push
push
cs
call
adc
inc
sub
push
push
inc
cmc
loop
nop
inc
stos
jl
sbb
daa
xchg
dec
mov
mov
cltd
fcomp
and
ret
adc
mov
int
hlt
sbb
repnz
sub
mov
ja
sbb
mov
repz
xchg
or
jnp
lahf
or
rclb
mov
bound
jmp
add
daa
cmpsb
and
arpl
testl
scas
out
out
inc
and
mov
cmpb
sbb
jge
push
int
or
xchg
dec
stos
insl
gs
jne
notb
jge
lods
stos
jl
lds
std
aaa
mov
mov
dec
dec
adc
sbb
sbb
stc
mov
push
xchg
cmp
addr16
stc
out
sahf
or
jle
xor
mov
enter
stos
sub
ljmp
gs
sahf
jecxz
sub
inc
shll
and
in
shll
and
adc
add
push
inc
lock
cmp
repnz
gs
in
dec
stos
scas
idivb
dec
jno
xor
cld
stc
pushf
sub
jmp
dec
shlb
pop
les
push
mov
inc
arpl
and
jns
bound
aaa
jge
shlb
or
icebp
xor
outsb
sbb
push
dec
jae
sar
hlt
fldl
or
mov
int3
je
pop
shrb
inc
pop
cmp
mov
adc
aad
jbe,pt
imul
sarl
inc
fwait
je
idivb
sub
int3
repnz
add
hlt
add
lods
inc
dec
enter
jge
push
movsb
inc
mov
js
icebp
adc
mov
mov
repnz
repz
sub
out
cmp
sub
jns
js
popf
jbe
imul
dec
xchg
cmp
ja
adc
pop
inc
pop
and
shll
and
xor
fst
out
push
rcr
mov
nop
adc
mov
and
in
ret
aaa
jecxz
pop
cmpsb
cmp
xor
pop
imulb
cmp
in
fsubl
jp
jmp
inc
scas
xor
jne
add
movsb
push
jmp
and
mov
loopne
and
and
sbb
cmp
sub
ficompl
popa
pop
dec
inc
xchg
outsb
mov
jns
xchg
xor
repnz
cmpsb
fistpll
mov
xor
jns
pop
jmp
sub
adc
and
and
and
jns
ss
and
inc
daa
jae
or
loope
stc
mov
mov
cmp
cmp
mov
mov
loopne
push
mov
adc
lcall
inc
adc
out
mov
cmp
or
push
test
cmc
push
mov
inc
fisttpl
pusha
es
stos
mov
insb
or
mov
mov
shlb
pop
fistpl
jg
mov
xor
inc
pop
cli
sub
xor
dec
aam
leave
jge
clc
xchg
sbb
mov
xlat
push
es
mov
std
fldenv
lods
jmp
shl
add
xor
and
mov
dec
xchg
ljmp
ret
cli
adc
mulb
dec
pop
sub
push
cmpsb
cmp
jae
cmpsb
mov
inc
cmp
mov
out
repnz
movsb
ret
lar
xchg
iret
xchg
cli
pop
jb
imul
lock
loop
add
sbb
adc
mov
jmp
jnp
cmp
push
movsb
mov
cmp
mov
sahf
icebp
push
shl
ror
mov
or
shl
and
rol
aaa
fnsave
xchg
insb
dec
xchg
lret
fimuls
sahf
jge
and
into
ja
movsb
in
out
xchg
scas
andl
cmp
xor
sbb
je
cmpsl
scas
inc
mov
push
mov
jl
pop
dec
pop
push
adc
add
aas
gs
jle
pop
cmp
pop
lock
sarb
or
xchg
ds
cmpsb
xor
adc
scas
les
out
xchg
pop
arpl
cmp
movsl
push
subb
adc
in
and
and
xor
movsb
adc
adc
int
fidivs
pop
cld
push
xchg
push
dec
loopne,pn
in
movsb
fcomps
cmp
pusha
repz
stos
in
ja
push
add
notb
mov
pop
pop
nop
mov
pop
and
lret
mov
cmc
jecxz
adc
sbb
mov
mov
scas
cmc
sti
jmp
sti
pusha
movsl
nop
push
add
mov
jno
mov
bound
je
and
jge
xor
jae
daa
and
cmp
je
push
and
in
push
inc
in
xor
mov
push
sbb
or
imul
popa
dec
movsb
adc
outsl
clc
xor
jecxz
repz
jl
add
xchg
mov
nop
arpl
pusha
jge
dec
push
and
mov
loope
mov
mov
mov
inc
push
mov
push
jb
sbb
das
pusha
mov
adc
shl
cli
adc
add
sub
pop
jg
mov
lds
and
fs
out
stos
push
inc
fsubs
mov
mov
dec
inc
movsb
rcrb
cli
push
stos
or
stos
ss
dec
pop
ss
sub
int
loopne
mov
jae
dec
mov
mov
jmp
push
pop
sbb
in
fstpl
movsl
or
cmpsb
jp
stos
sub
add
mov
mov
hlt
lock
xchg
sbb
xchg
hlt
adc
mov
pop
neg
push
iret
stos
push
fstpl
and
scas
std
push
int3
push
ljmp
jg
call
mov
adc
adc
arpl
sub
or
shll
mov
mov
xchg
pop
xor
mov
stc
mov
int
addr16
xor
out
push
inc
mov
fidivl
jo
mov
mov
lcall
outsb
imul
cmp
dec
or
scas
mov
jb
into
xor
add
mov
pop
and
fcomip
loopne
out
xchg
ja
std
icebp
sbb
aam
sub
xchg
jb
call
mov
das
sbb
mov
xchg
out
cmp
and
verr
imul
and
subb
mov
xchg
jle
shlb
rcr
mov
add
fadds
fisubrs
scas
add
cli
jbe
je
or
jae
orb
loop
call
mov
pop
sbb
or
push
std
mov
sbb
adcl
sbb
movsb
add
adcl
bound
in
int
and
das
ret
mov
adc
in
adc
push
bound
dec
push
rolb
mov
packssdw
movsb
push
push
or
pushf
mov
cmc
enter
adc
mov
fsubp
xor
push
and
stc
cmp
jecxz
pop
mov
movsl
push
adc
sub
mov
push
loop
jmp
in
mov
bound
dec
cmpsb
inc
addr16
mov
or
push
rol
lods
jmp
inc
push
scas
movsl
cmp
cs
shl
xchg
jo
aad
mov
out
pop
cli
jg
xchg
sti
mov
lret
sbb
jecxz
mov
adc
jecxz
cli
mov
in
or
add
imul
and
imul
test
cmp
outsb
inc
mov
ja
mov
or
jmp
sbb
xor
shlb
push
inc
movsl
cmp
cmp
or
sbb
push
mov
or
aam
jno
push
push
and
je
je
sarl
rorl
and
pop
mov
das
xor
mov
fidivrs
mov
aad
aas
pusha
xor
push
xlat
frstor
sti
jge
cmp
jne
sub
stc
and
adc
inc
xor
mov
lods
mov
cmp
push
cmpsl
and
adc
sahf
bound
lods
adc
shll
push
js
call
inc
cmp
data16
mov
sbb
jp
scas
jmp
sbb
inc
or
add
cmpsl
push
stos
lods
jb
and
cmpl
repnz
repz
cs
xchg
cmpsl
or
and
xchg
popa
int
xchg
dec
dec
std
sbb
scas
ss
inc
jp
sbb
and
ljmp
jecxz
and
lahf
addb
add
push
xchg
mov
dec
lcall
sub
aaa
mov
pop
adc
aas
lock
aad
pop
int
int
ja
out
ret
mov
sarb
insl
inc
and
ljmp
insl
inc
inc
push
adc
sub
in
push
sahf
jp
cmp
or
xchg
mov
popa
popf
pop
out
fistpl
xor
stc
sub
dec
pop
add
clc
fs
pushf
movsb
and
jns,pt
addr16
cwtl
adc
fdivr
xor
repnz
jae
sbb
shlb
sub
adc
std
repnz
jb
adc
gs
fisttpll
pop
fst
loop
das
and
pushf
push
in
mov
pop
testl
movb
sbb
fstpl
popf
xor
mov
jle
mov
or
ss
inc
pop
in
sahf
xor
xor
data16
push
xor
push
and
mov
xor
inc
push
adc
ss
sbb
loope
pusha
mov
push
repnz
test
ret
ret
mull
daa
sub
adc
cs
jp
imul
repz
push
shll
adc
xor
call
adc
push
cmp
add
rcrl
fwait
mov
jp
cmp
adc
loopne
adc
adcb
jo
mov
dec
pop
add
mov
cmp
mov
test
testb
mov
cmp
inc
fsubrs
sbb
mov
out
xchg
pop
or
sub
aas
cmp
xorb
jae
and
mov
sbb
stc
mov
sbb
mov
sub
adc
add
pop
xor
and
add
jae
adc
dec
fldcw
in
mov
repz
test
stos
mov
lahf
push
outsb
push
outsl
sarl
scas
mov
loop
sub
dec
jecxz
and
mov
mov
out
movsl
xor
mov
ret
jmp
cmp
sub
pop
cli
movsb
push
pop
mov
lds
aaa
movsb
jmp
jecxz
icebp
cli
cmp
xorl
mov
cmp
mov
in
pop
push
lock
clc
insb
mov
call
jmp
inc
dec
je
inc
sbb
inc
js
and
in
fstps
cmp
adc
fldenv
js
loopne
xchg
cmp
push
stos
mov
xchg
fnstcw
mov
iret
xor
faddp
and
aas
ret
xor
mov
movsb
mov
dec
xchg
call
jle
add
cmpsb
sti
mov
pop
mov
bound
mov
lcall
jp
fldcw
int
adc
sti
in
je
pop
insl
scas
jns
dec
pop
orb
jbe
xor
les
dec
cwtl
call
or
shll
cmc
aaa
and
daa
mov
sub
psrlw
shll
mov
nop
jae
and
imul
xor
mov
fdivrp
or
sub
stos
mov
mov
int
xor
inc
cmc
bound
push
scas
sbb
inc
push
sub
or
mov
loopne
pusha
jb
adc
aas
inc
dec
inc
test
ficompl
repz
icebp
ror
xchg
daa
cli
pop
iret
adc
add
mov
jmp
int3
sbb
mov
pop
ds
in
fwait
adc
jno
scas
fstps
es
xor
pop
and
ds
cmpsb
inc
sti
and
adc
clc
sub
mov
out
and
jo
pop
pusha
push
scas
mulb
ljmp
mov
stos
gs
pop
loop
mov
fs
dec
imul
xor
repnz
or
lock
scas
lock
insb
call
fs
xchg
stc
lds
sbb
movsl
cli
cli
movsb
ljmp
cmp
lods
out
or
pop
stos
jno
push
ret
mov
std
int
int
and
repnz
das
rorb
pop
jp
outsb
mov
jb
jne
dec
xchg
or
jmp
add
das
or
or
mov
xorl
lahf
es
and
mov
hlt
or
pop
mov
outsl
push
insl
or
daa
mov
scas
push
aaa
int3
mov
cmp
add
fwait
sub
xor
aam
jno
mov
std
mov
sub
scas
cmp
int3
add
movsb
add
mov
mov
mov
fstp
repnz
xchg
mov
xchg
movsb
jno
push
data16
xchg
ljmp
inc
cmp
mov
jns
xchg
or
lock
or
pop
cmp
or
aaa
jle
ss
dec
mov
mov
leave
mov
or
cli
outsl
mov
adc
inc
movsb
stos
jmp
dec
sub
pusha
cmpsb
jg
push
aas
aas
cmp
std
jns
stos
leave
mov
pop
enter
inc
arpl
cwtl
sahf
les
ret
lds
jl
dec
mov
add
and
mov
cmpsb
push
je
sbb
mov
lods
xor
icebp
push
bnd
frstor
xor
jo
fnsave
mov
inc
mov
jb
in
test
inc
sbb
push
ret
into
ror
lds
mov
cltd
popf
mov
push
inc
xor
std
movsb
loope
adc
cmp
jae
mov
cli
inc
cmp
or
call
sub
loop
dec
inc
or
mov
push
mov
jnp
repnz
les
lret
loop
icebp
and
rorb
push
mov
xchg
outsb
sbb
cltd
inc
int
push
aas
xor
ret
sahf
mov
xor
stos
lock
inc
es
inc
shrb
lds
cltd
add
add
xchg
xchg
std
in
xor
mov
or
loopne
jp
adc
sahf
inc
test
xor
mov
gs
callw
push
sub
cld
or
mov
sub
sub
stos
xchg
hlt
and
mov
push
mov
jnp
scas
shl
adcl
xchg
ss
loop
jb
mov
mov
mov
decl
lods
aaa
and
mov
jle
and
cs
cmc
jl
xchg
daa
loopne
cmp
es
in
jp
sbb
pusha
push
pop
pop
mov
mov
cltd
lahf
mov
or
stos
cwtl
push
std
imul
hlt
inc
mov
fisttps
lods
mov
pop
jp
mov
jbe
hlt
sbb
lahf
push
add
fcoml
pop
sbbb
mov
insb
dec
mov
incb
hlt
pop
sbb
cmp
push
push
pushf
xor
jo
push
sub
daa
repz
xchg
adc
call
sub
rcl
or
mov
das
loopne
loope
jge
loopne
adc
or
jle
push
jns
das
sub
loope
jbe
mov
add
ret
dec
lea
sub
xchg
and
addb
lret
jo
aas
inc
mov
xchg
loopne
clc
and
inc
lret
mov
stos
and
push
andb
fdivrs
ffreep
mov
jmp
pop
call
mov
add
jnp
xchg
lcall
aam
pop
mov
fcmovbe
inc
mov
roll
imul
ds
dec
sbb
dec
fstl
add
pushf
xchg
shr
cmp
sub
cmp
cmp
popa
xchg
jnp
push
dec
cli
mov
dec
mov
daa
aaa
xor
push
add
lcall
sbb
int
adc
mov
cmp
daa
call
jns
mov
stos
add
mov
aas
lods
inc
sbb
aaa
push
mov
shrb
jbe
mov
in
add
and
outsl
imul
mov
sbb
jp
pop
mov
test
aas
or
dec
sbb
pop
xorb
std
shl
inc
je
shr
test
rep
popa
int
inc
add
fstpl
sub
jle
daa
xchg
cmpsl
xor
das
jae
inc
or
shlb
bound
sub
push
hlt
icebp
rcr
and
inc
xorb
gs
addr16
fisubrs
and
aas
rcl
arpl
out
inc
or
mov
jno
jl
repnz
mov
dec
jbe
jecxz
fstp
xor
mov
out
jmp
call
add
stc
ror
mov
std
pop
jae
in
or
mov
cmp
ss
movsb
mov
dec
js
push
movsb
cmp
out
sahf
rcll
mov
in
sarl
cmp
loopne
daa
push
push
lahf
mov
xchg
add
jecxz
xchg
and
sub
inc
sbb
sarl
adc
lods
and
hlt
pop
arpl
movsb
pop
loopne
add
call
iret
lret
insl
mov
lods
mov
cmpsl
inc
mov
jo
cmp
sbb
xor
mov
adc
aas
xor
or
aaa
mov
mov
cmpsl
scas
or
cltd
and
fists
dec
pop
icebp
xor
test
adc
inc
cmp
xchg
lock
xor
mov
ficoml
and
gs
and
sub
mov
jns
icebp
sub
into
mov
push
sub
xor
xor
cli
stc
mov
xor
or
cmp
es
cmp
and
std
mov
and
mov
std
push
aas
xchg
mov
and
std
xchg
ja
mov
jno
lods
xor
push
adc
xor
mov
xor
fidivrl
push
xlat
sti
mov
mov
mov
pushf
pop
pushl
jmp
loopne
xor
jmp
mov
xchg
in
mov
aas
and
idiv
sbb
fdivp
xor
jl
mov
xor
mov
xor
mov
jo
jg
sbb
mov
test
cmp
aas
add
dec
fs
xor
xor
xor
out
cmp
sub
aas
sbb
mov
xor
sub
mov
xor
je
ficomps
mov
push
mov
cmpb
or
in
jg
mov
xchg
mov
cmp
pop
lock
lock
mov
xor
sbb
lods
lock
cmc
loopne
adc
xor
jle
lock
stc
fistpll
cmp
mov
jnp
pushl
cmp
lock
fistpll
push
icebp
fldt
mov
add
sbb
dec
and
stc
mov
pextrw
sbb
xchg
aad
xorb
lahf
lds
mov
int3
cwtl
adc
push
stos
test
mov
sbb
pop
mov
inc
pop
nop
movsb
cmp
mov
popa
stos
mov
xchg
jbe
fsubrp
imul
push
add
pop
or
and
sti
fcompl
mov
and
mov
repz
sahf
xchg
cs
lds
test
mov
test
sub
loope
or
mov
jecxz
pavgw
mov
mov
inc
out
xchg
cmp
inc
xchg
fs
dec
ljmp
inc
mov
scas
or
jb
call
icebp
pusha
loop
stc
rcrl
inc
pop
mov
loope
pop
dec
cmp
sub
mov
aas
xchg
ss
push
add
call
dec
sbb
sbb
jae
inc
jno
scas
adc
loope
mov
inc
push
xor
pop
mov
mov
jns
mov
xor
and
adc
cld
dec
sahf
ds
pop
das
sbb
xchg
cmpsb
push
dec
addl
or
aam
pop
mov
adc
testb
testb
cli
xor
mov
fisubs
mov
mov
cltd
cmp
add
movsb
mov
mov
push
xchg
fildll
sbb
or
movsb
mov
daa
cmp
and
test
pop
rcl
cmp
push
mov
mov
das
lahf
arpl
jns
sbb
adc
jo
push
mov
pop
add
push
aas
mov
dec
jecxz
sbb
sub
mov
add
mov
leave
xchg
mov
out
mov
cmp
lock
lods
icebp
in
push
repz
cs
push
or
xor
mov
insb
shll
pop
xchg
ss
sarb
data16
dec
aaa
imul
movsb
xor
add
xchg
mov
outsb
dec
adc
jno
jnp
popl
sbb
stc
sbb
inc
rep
addb
addr16
out
popf
out
xchg
or
scas
jae
adc
int
imul
je
inc
dec
adc
lret
fdiv
ljmp
test
inc
cmp
push
sbb
xor
stos
mov
jp
aad
push
int3
pop
stos
fwait
cld
lods
pop
lock
xor
ss
jae
xchg
imul
add
cld
loopne
xchg
fcmovb
icebp
jecxz
rcll
push
push
negb
mov
cmp
mov
or
orb
inc
repnz
xchg
adcl
cs
imul
pop
sub
lahf
roll
mov
sub
enter
lahf
jmp
mov
das
cwtl
pop
js
inc
lods
mov
inc
jns
ja
mov
out
cld
cmpb
add
xor
shrl
insb
sbb
cmpsb
repz
jecxz
xor
jmp
mov
push
jae
out
mov
adc
in
adcb
dec
push
daa
repnz
sbb
adc
loop
scas
inc
push
or
and
in
adc
or
mov
sti
out
rcl
and
cmp
addr16
ljmp
mov
in
movsb
adc
push
lods
mov
mov
push
jge
pop
mov
arpl
mov
imul
mov
int3
add
aaa
adc
adc
popa
push
mov
mov
adc
in
mov
sbb
mov
push
loopne
adc
mov
mov
add
lret
test
and
fs
stc
dec
push
or
push
aas
jecxz
aam
rcrb
clc
je
cmp
aaa
fs
cmpsb
ljmp
popa
xor
jo
aaa
mov
jbe
rcll
stos
jecxz
shlb
xchg
mov
sub
xchg
loop
test
jae
cli
adc
rcll
cmp
rcrl
in
jo
repz
js
dec
jmp
in
cmc
icebp
lods
adc
in
dec
mov
mov
fs
xorb
pop
clc
inc
pop
shl
arpl
adc
mov
mov
add
aaa
jno
test
xchg
add
cmc
inc
and
in
jl
xchg
sub
loopne
lcall
aaa
mov
pop
sbb
push
push
cmp
stos
push
dec
aaa
outsl
xchg
leave
shr
mov
inc
push
add
pop
imul
movsl
mov
jge
mov
jo
out
mov
imul
test
or
lcall
and
aaa
sub
pusha
mov
sbb
adc
jb
mov
ja
jge
inc
cmp
mov
hlt
setbe
adc
mov
pop
mov
inc
push
repz
aad
jg
mov
push
ds
jns
inc
inc
ss
mov
push
outsl
sbb
pop
pop
and
movsl
sub
loop
add
adc
mov
arpl
sarl
imul
sub
std
movsb
push
sti
stc
cmp
daa
in
fisubs
xor
inc
rcr
mov
mov
mov
aad
or
movsl
xchg
jbe
loopne
mov
jnp
cmp
jmp
clc
push
repnz
inc
mov
in
mov
pop
aaa
jae
pushw
incl
insl
movsb
scas
sbbl
xchg
test
sti
sub
inc
mov
loop
mov
mov
dec
cmp
push
rorl
imul
cmp
movsb
jl
adc
mov
push
mov
in
test
inc
bound
mov
shll
mov
push
loope
adc
push
pop
std
xor
push
mov
stos
inc
nop
pop
xor
push
adc
pop
sti
push
inc
xchg
push
adcl
cmp
mov
lret
adc
mov
fwait
lret
fcoml
pop
mov
cltd
subl
shlb
aad
aam
cmp
push
aaa
data16
mov
sub
sub
jbe
xchg
jmp
pop
push
sbb
and
aaa
pop
dec
and
xor
je
leave
jl
shrb
inc
and
add
xchg
mov
push
and
shlb
fdivl
repnz
je
leave
out
mov
inc
aam
aas
arpl
fidivrs
movsb
xchg
inc
addr16
les
and
pushf
stc
outsb
std
mov
xchg
jb
pop
mov
sbb
push
sub
sbb
mov
cmp
roll
mov
jg
xlat
mov
out
pop
dec
stc
mov
push
cmp
mov
push
pop
dec
jecxz
repnz
mov
cli
mov
cmp
jecxz
leave
push
int
daa
mov
lds
lock
imul
aaa
aaa
les
bound
test
cmp
adc
rorl
adc
arpl
mov
sub
cmpsb
mov
xchg
pusha
movsb
mov
cmp
add
sub
test
jo
aas
fcompl
testb
push
popf
inc
push
add
cld
stos
je
test
ljmp
cmc
mov
outsb
or
pop
mov
mov
lahf
enter
adc
dec
movsb
roll
xor
stc
scas
jge
sbb
scas
lock
stos
mov
call
mov
into
mov
add
ds
and
jne
movsb
cmc
adc
je
sbb
dec
fwait
pop
loopne
and
lret
xor
mov
adc
push
out
iret
out
mov
push
inc
adc
fimull
es
dec
gs
and
leave
stos
push
data16
inc
shrl
ss
aaa
mov
popf
cmp
push
test
xchg
je
pop
push
and
in
notb
mov
jae
mov
popa
sahf
rcll
push
ja
lods
lret
sbb
xor
xor
push
outsl
and
dec
jle
sbb
call
imul
ret
aam
inc
xor
mov
dec
cmc
in
aas
out
es
mov
adc
int
dec
sub
xor
jae
fs
mov
sub
aaa
out
clc
mov
xor
sarl
push
lcall
and
mov
mov
imul
test
hlt
cmp
mov
pop
adc
pop
jle
aad
loop
sub
lock
popf
scas
subb
pushf
rorl
scas
shll
mov
int
sbb
pop
xchg
mov
adc
mov
ret
sub
cmpl
dec
sub
xchg
test
aad
sbb
aas
daa
mov
dec
inc
cmp
push
pop
int
ret
push
and
inc
std
lret
mov
push
fwait
cmc
lods
addr16
adc
rcll
subl
sub
mov
cs
lret
fadds
dec
mov
jle
loop
push
mov
sahf
add
cmpsb
ljmp
into
mov
call
cmpsb
sbb
frstor
hlt
movl
aad
clc
imul
aaa
mov
push
movsl
xchg
add
xchg
cmp
xor
sbb
xchg
inc
mov
mov
mov
and
xlat
lahf
mov
jno
mov
adc
mov
adc
mov
in
add
jmp
inc
out
and
rorb
mov
inc
into
jns
andl
jmp
dec
or
xor
pop
push
xor
push
mov
je
bound
aam
lods
mov
adc
jnp
cmpsb
mov
icebp
and
mov
sub
sbb
inc
push
popf
fwait
dec
pushf
add
shll
cmp
jl
pop
or
popa
outsb
notb
sbb
enter
popf
pop
test
arpl
out
push
inc
push
adc
pop
mov
mov
cmp
js
stos
shll
xchg
inc
mov
xchg
pushf
inc
pop
loopne
pop
mov
xchg
ljmp
imul
andb
out
lret
xor
rorl
cmp
repnz
lahf
jp
fildll
repnz
sub
in
scas
cmp
inc
aaa
mov
daa
pop
jg
inc
lock
lret
cmp
jmp
flds
ret
pop
stc
iret
mov
jae
stos
test
mov
jmp
xchg
sbb
xchg
mov
icebp
cmp
push
xor
call
out
pop
insl
mov
pop
inc
add
repz
sarl
inc
mov
add
inc
shll
mov
fldl
inc
mov
mov
dec
add
cmp
pop
dec
add
jns
cs
or
sub
xor
mov
mov
xor
xor
push
xchg
xor
cmp
sub
dec
inc
imul
aad
lods
movsb
pop
mov
cli
outsl
loopne
cmpsl
ljmp
mov
push
dec
and
or
daa
out
push
cmp
aaa
pop
loop
adc
in
ljmp
aad
push
push
mov
add
out
jne
sbb
out
lock
es
jns
add
mov
mov
flds
cwtl
mov
ds
popf
mov
adc
sti
adc
in
je
adc
loopne
mov
xchg
daa
test
xor
sar
stc
cmp
adc
jmp
icebp
pop
adc
outsb
push
mov
xor
dec
mov
les
xchg
data16
scas
push
mov
jno
push
cmp
js
loope
and
mov
mov
xchg
loop
adc
sbb
inc
insb
pop
xorb
scas
repz
mov
mov
aaa
out
mov
xchg
jmp
loopne
xor
cltd
in
xchg
push
std
fnstcw
rcrb
sub
jmp
jge
cmpsl
or
jecxz
cmpsb
cmp
push
push
int
test
sbb
das
and
inc
mov
mov
push
jb
icebp
pop
loopne
sub
cli
and
cmp
popl
dec
les
rcrl
mov
ljmp
shll
jns
movsl
test
imul
hlt
push
mov
cmp
in
cmp
movsb
mov
and
and
sbb
cmp
mov
mov
dec
in
out
lea
mov
daa
mov
xor
mov
movsb
clc
xor
mov
jae
loopne
cs
cmp
repz
and
mov
jmp
dec
add
inc
mov
loope
xchg
ret
es
pop
cmp
mov
mov
lret
imul
pop
jae
and
ret
lahf
xor
adc
mov
add
mov
mov
mov
lret
hlt
cli
scas
push
cmp
mov
int
imul
add
scas
dec
xor
or
xlat
ret
pop
popa
jb
push
in
jle
aam
sahf
cwtl
sbb
out
std
mov
cli
aaa
sbb
dec
jg
int3
sqrtps
and
push
sarb
mov
pminsw
push
adc
hlt
fsts
mov
jp
and
in
push
rorl
sub
fs
es
push
out
xchg
hlt
and
push
imul
pop
notb
sbb
xor
dec
stc
lret
popl
jns
xchg
repz
xor
stos
cmp
jnp
and
scas
lret
imul
jl
xor
ljmp
imul
scas
mov
or
mov
pop
cmp
sub
pop
int
push
xchg
aam
stos
mov
gs
pop
cmc
aaa
int3
mov
daa
jo
push
inc
xor
daa
stc
sub
sub
add
pop
dec
jno
in
mov
subl
push
or
lods
stos
rorl
or
arpl
cmp
xchg
mov
mov
repnz
pop
fcmovnbe
mov
lea
xchg
jnp
loopne
je
rorb
mov
cwtl
mov
mov
mov
pop
sahf
in
adc
roll
pusha
lcall
aas
stos
sbb
loopne
mov
mov
push
and
mov
mov
mov
inc
or
push
push
sub
nop
inc
push
jle
int3
jecxz
sbb
xchg
aas
les
ficoml
push
push
aas
push
jns
mov
cltd
adc
out
xor
bound
inc
add
std
stos
mov
xchg
pop
sbb
push
and
test
xchg
sub
dec
adc
sub
mov
xor
mul
gs
fimull
adc
jnp
mov
jns
rorl
rcrl
lea
push
xchg
and
andl
cmp
shll
sahf
in
sbb
mov
push
cmpsb
add
and
fs
add
rolb
lods
das
ret
mov
mov
insl
shlb
push
xor
jne
ret
sbb
aaa
clc
data16
jns
push
pop
jmp
fisubl
jl
push
adc
cmp
insl
add
test
adc
push
jns
or
mov
repnz
xor
dec
jle
and
mov
fnstenv
xor
mov
daa
pop
popa
jle
outsl
mov
cli
xchg
adc
js
shr
fistpl
and
xchg
adc
jae
inc
adc
add
xchg
adc
movsb
inc
push
gs
cmp
rolb
push
adc
dec
test
pop
xorl
fwait
jp
test
cmpsb
adc
hlt
dec
sub
mov
shlb
jnp
sarb
cmp
pop
fistl
cld
and
in
out
clc
mov
pushf
nop
pop
mov
cmpsb
inc
and
dec
call
fchs
fmul
outsb
dec
fsubrl
add
clc
shl
mov
cmpsl
movsb
stos
pushl
lock
push
addr16
mov
test
fsubp
mov
adc
mov
sti
fisubl
push
cmp
dec
ds
sbb
pop
fdivl
and
xor
cltd
lods
and
call
aaa
jno
popf
jns
xchg
pop
test
push
ss
cs
hlt
rcl
pusha
popf
sbb
adc
rcl
sub
sub
testl
sub
jne
stc
mul
fdivl
bound
dec
push
jge
xchg
mov
insl
lock
xor
das
or
fldl
movb
push
mov
mov
sbb
mov
pop
sbb
dec
jb
inc
sbb
dec
rcll
in
scas
hlt
imulb
mov
sbbl
adc
mov
adc
push
cmp
mov
adc
popf
xor
andl
ret
icebp
jp
dec
fldenv
mov
xchg
xchg
push
int
sub
cmpb
push
inc
scas
addr16
lret
in
mov
push
in
inc
jno
in
push
mov
mov
sarb
scas
jmp
repz
test
hlt
mov
push
ffree
arpl
decl
stos
popf
xor
dec
jns
cmp
push
xchg
loopne
stos
clc
das
cmp
mov
mov
mov
pop
or
mov
mov
jne
cld
int
inc
repnz
data16
daa
mov
add
xor
mov
jecxz
test
arpl
jecxz
xchg
arpl
fidivs
adc
icebp
mov
test
adc
test
aaa
cld
inc
test
jno
pop
ljmp
lock
ljmp
push
cmpsl
and
push
cmpsl
push
pushl
mov
sbb
rcl
mov
lret
mov
nop
in
jbe
jle
out
sub
mov
inc
repnz
lcall
or
dec
sub
icebp
sub
xchg
dec
mov
adc
lahf
xchg
inc
test
movsb
stos
mov
cmp
and
or
je
xor
mull
xor
das
int3
std
mov
pop
fidivrs
mov
iret
pop
data16
jbe
out
and
lret
inc
shll
mov
pop
sub
push
cwtl
pop
jae
mov
push
test
nop
ja
cmpsb
xchg
and
loopne
mov
add
test
jecxz
sbb
push
xor
add
mov
fidivrl
xchg
dec
cmp
mov
mov
ffreep
aaa
pusha
daa
inc
lea
adc
adc
push
repz
test
sub
mov
push
pop
je
sti
sahf
test
and
mov
filds
rcrb
add
mov
mov
mov
mov
pop
int
or
add
cmp
sbb
movsb
pop
jne
sub
cmc
aad
pop
dec
pusha
test
mov
out
out
and
mov
and
fld
test
loopne
mov
lret
cmpsl
inc
xchg
pop
xchg
gs
inc
repnz
insb
dec
xor
sub
xchg
mov
mov
lock
mov
or
jl
ljmp
lods
xor
and
mov
das
movsb
aad
xor
jl
icebp
sub
test
push
mov
push
icebp
mov
or
push
std
push
and
andb
sub
inc
stos
ret
xor
loopne
xor
cmp
pop
cmpsb
loopne
loop
adc
mov
pop
mov
jmp
repnz
ss
cmp
repz
shlb
inc
inc
call
and
jle
xchg
adc
mov
adc
mov
mov
lret
jno
add
push
je
fidivl
out
xor
es
rorb
ret
or
or
pop
orl
icebp
lds
xor
xor
leave
adc
mov
xchg
sub
jnp
repz
jg
adc
daa
sub
fxch
and
sbb
sub
pushf
bt
les
pop
xchg
fists
sbb
clc
adc
xor
sbb
xor
push
call
add
aam
ja
cmpsb
ror
es
xorb
sbb
sub
or
movsb
sbb
sub
ror
cmp
rorl
imul
out
sub
inc
add
xor
mov
dec
sbb
pop
int
mov
les
sbb
fidivs
push
pop
adc
mov
add
inc
mov
or
mov
call
push
insl
dec
sbb
loopne
cwtl
add
js
xchg
cmp
cmp
loopne
add
adc
jl
std
xorb
push
sub
sbb
dec
shll
adcb
xor
lods
adc
incb
mov
sbb
fbstp
mov
cmp
xchg
lods
rcrl
push
mov
mov
xchg
cmp
pushf
clc
ficomps
dec
push
cmp
xchg
inc
mov
jo
cmp
push
ja
decb
scas
mov
inc
inc
mov
mov
pop
xlat
cmpsb
fwait
push
inc
test
ret
pusha
jb
fimuls
jo
es
movsb
jmp
mov
aaa
hlt
ret
mov
int3
repz
test
test
add
divb
in
jle
adc
pusha
imul
xlat
and
in
outsb
and
lahf
sub
add
fildl
add
mov
xor
data16
adc
dec
pop
mov
icebp
inc
mov
or
fldcw
mov
or
push
mov
xor
sub
push
jns
jno
push
xor
ljmp
test
outsb
mov
repnz
xor
out
sbb
or
repnz
shlb
ja
xor
cs
cli
xor
push
or
nop
pop
js
stos
orb
pusha
fsubl
ret
loopne
jl
xor
cmc
push
imul
sub
into
push
or
test
repnz
or
das
ret
lret
xlat
push
aas
stos
pop
stos
in
sbb
lea
cmpsl
out
roll
into
sbb
gs
loope
mov
inc
mov
ja
jno
dec
adc
test
pop
mov
inc
test
pusha
xchg
adcl
arpl
cld
aas
pop
cmp
je
fcmovbe
mov
sbb
rcl
mov
ss
test
sahf
es
shll
xchg
push
test
add
or
ja
xor
lahf
aaa
arpl
mov
lds
cmpsb
sarb
fnstenv
mov
mov
mov
in
ja,pt
push
dec
repnz
call
stos
pop
xor
inc
mov
mov
xchg
jecxz
mov
inc
shll
ss
lea
bound
aas
cmpl
mov
adc
aam
mov
repz
mov
push
in
sub
inc
test
lcall
jo
cmp
in
stos
or
lcall
adc
mov
imul
ss
mov
sbb
xor
cmpsl
jnp
xor
call
xor
shlb
mov
les
mov
loop
sub
mov
mov
repnz
movsl
add
xchg
sbb
mov
cmpsl
pusha
icebp
das
and
xor
pop
fidivrs
cmp
iret
mov
mov
xor
cltd
mov
repnz
aas
jecxz
sbb
mov
in
mov
aaa
lret
lcall
ljmp
mov
jg
jnp
out
outsb
cmp
and
test
fbld
mov
out
stos
xor
movsb
xor
cmovns
and
xor
mov
jle
mov
xor
lcall
cmp
cs
xorl
inc
xor
int3
cmp
mov
mov
loope
mov
push
or
mov
mov
pop
jb
xor
pop
cli
sbb
mov
sti
out
mov
aaa
std
cmp
in
repnz
mov
in
sub
jle
sub
test
repnz
jno
and
mov
jb
xor
je
jne
mov
xor
mov
xor
mov
mov
jno
mov
mov
mov
pusha
xor
mov
ja
mov
sbb
xor
lret
mov
sub
cmp
and
ss
mov
test
js,pn
mov
sbb
mov
test
mov
mov
pop
xor
repz
cli
push
clc
mov
jns
mov
wrmsr
mov
xor
xor
js
lock
js
mov
loopne,pt
xor
xor
jns
scas
cmp
jp
mov
pop
in
pop
mov
and
xor
sub
movsb
mov
or
cmp
dec
add
daa
test
mov
push
ja
shll
push
push
rclb
repnz
adc
add
cmp
es
xor
ss
xchg
mov
jecxz
adc
dec
fucomi
cs
lahf
stos
inc
nop
cmpsl
imul
mov
cmpl
leave
pop
pop
test
pop
repz
xor
push
pushf
jle
push
and
sbb
repnz
adc
dec
and
ljmp
adc
mov
sub
add
pop
mov
movsb
aam
jbe
daa
loop
adc
push
pop
mov
push
out
mov
hlt
sub
mov
sub
inc
mov
cmpl
out
fs
pop
xor
stos
stos
jae
or
mov
jae
mov
ror
xchg
call
aam
jae
cltd
push
sbb
movsb
std
mov
push
xor
pop
mov
mov
test
testb
repnz
cmc
ss
cmp
xorl
mov
cltd
adc
xorb
ret
mov
mov
fnstenv
cmpb
mov
insb
xor
test
push
pop
mov
sar
sarb
sbb
sub
jne
cmp
pusha
xchg
test
rorl
movsb
hlt
jp
inc
lahf
xchg
repnz
stc
and
mov
inc
dec
mov
std
mov
out
cmp
mov
iret
mov
mov
lcall
cmp
mov
lret
jo
sbb
xor
xlat
xor
cmp
sub
adc
sbb
add
movsb
mov
sub
insl
jnp
out
xchg
mov
xor
push
lret
dec
test
adc
push
cmp
push
cmp
or
and
dec
outsb
loopne
mov
rolb
or
pop
addr16
mov
testl
xchg
mov
stos
js
in
inc
mov
inc
stos
cwtl
iret
in
cld
mov
pop
pop
pop
shr
clc
mov
test
testb
adc
jo
push
mov
sub
pop
mov
je
pop
dec
and
cmp
jnp
xchg
sub
dec
and
dec
ds
mov
adc
sti
mov
cmpsb
mov
xchg
lret
sbb
cli
push
mov
jle
push
adc
dec
jo
cmpsb
cmp
inc
loope
stos
add
rcr
andnps
andb
mov
xor
movsb
subl
mov
cmp
rolb
mov
cmp
mov
pop
ja
in
rcrl
mov
int
fs
cmp
sub
loop
je
push
mov
mov
imul
aad
in
in
loopne
bound
imul
cmp
ret
xor
and
outsb
leave
sbb
inc
aam
in
arpl
xchg
incl
mov
int3
lret
xchg
mov
dec
jns
mov
cmpsl
jno
jmp
icebp
xchg
enter
cld
and
xchg
scas
dec
xchg
sarb
jae
aad
cmpb
into
and
cmc
imul
or
xchg
xor
pushf
push
int3
xchg
ljmp
mov
pop
movsb
jae
push
inc
adc
icebp
jmp
add
and
mov
cmp
es
xor
stos
push
andb
lea
cmp
mov
outsl
test
mov
imul
inc
ljmp
das
pop
jns
inc
xorb
mov
add
out
clc
cmp
mov
adc
or
mov
mov
sbbb
enter
xor
xchg
repnz
nop
imul
pop
xchg
xchg
repnz
sbb
mov
shll
sbb
mov
xchg
dec
test
insl
add
xchg
andb
lock
repz
aad
incb
and
mov
movsb
js
dec
push
lea
inc
cmpsl
adc
mov
cmp
push
jmp
adc
daa
jp
mov
fldt
fildl
stos
jg
cs
sar
repnz
ja
cli
loopne
sub
add
push
push
and
cmc
add
aam
inc
cmp
adc
inc
ss
jae
fptan
pushf
push
out
mov
cwtl
shrl
sahf
fucom
dec
add
lods
std
sub
mov
push
incb
sbb
push
fwait
leave
or
xchg
xchg
movsl
shll
inc
jmp
jle
adc
xor
push
jle
iret
xchg
mov
xchg
ret
push
mov
sarl
dec
pop
mov
aam
dec
mov
fnstcw
iret
cmpb
imul
movsl
jnp
jp
pushl
aas
fs
repz
popf
dec
cwtl
out
clc
mov
icebp
mov
loopne
xor
lock
cs
adc
imulb
or
cmp
sub
shll
movsl
daa
nop
mov
fwait
mov
stos
rcll
adc
jge
and
mov
movsb
call
rcr
xor
push
dec
shrb
scas
int
sahf
in
or
lahf
add
repz
aam
or
lods
mov
nop
mov
rcr
push
mov
lcall
mov
mov
cmpsb
movsb
imul
lds
hlt
out
xchg
loopne
rcrl
jp,pt
mov
aam
icebp
cli
movsl
mov
push
loop
push
inc
into
shrb
mov
ss
pop
in
insb
lahf
aas
movsb
push
ljmp
lret
jg
ljmp
mov
fldl
mul
inc
and
nop
mov
dec
dec
shll
push
mov
mov
cmp
stos
or
fnsave
mov
inc
shl
pop
sub
push
aam
pushf
dec
dec
adc
and
adcb
mov
pushf
adc
lcall
cs
out
add
sahf
cmp
fs
into
in
sbb
mov
imul
adc
test
ret
fwait
daa
push
xchg
in
push
jo
roll
add
mov
xchg
js
cmc
pop
leave
inc
stos
jnp
jns
repnz
mov
fistl
jge
or
add
xor
out
mov
ja
add
mov
aas
repz
sbb
inc
and
cmp
push
adc
sbb
fwait
repnz
jbe
push
cmpsb
add
and
mov
adc
arpl
fnstsw
negb
nop
mov
xor
mov
mov
push
mov
data16
les
sbb
movsb
push
cs
add
xor
jo
xchg
and
data16
push
shlb
mov
cmp
inc
jmp
pop
in
sbb
push
sti
out
mov
sahf
js
and
pop
aaa
mov
pop
push
cwtl
and
cmp
enter
pop
popa
pop
xchg
ljmp
insl
pop
out
es
pusha
subb
pusha
or
xor
inc
mov
add
xchg
enter
arpl
stos
pop
ja
jno
mov
xchg
sahf
mov
mov
je
xor
popf
fcompl
adc
xchg
add
and
mov
adcl
shll
xchg
js
aam
sub
cmp
loopne
stos
mov
ss
loop
mov
inc
mov
jp
or
fdivp
or
scas
xchg
jmp
arpl
mov
shl
popa
add
pushw
adc
adc
ret
mov
ljmp
and
pop
xor
daa
ret
adc
stc
out
cmp
mov
jle
int
cwtl
and
arpl
insl
and
mov
aaa
mov
push
lds
cs
arpl
adc
xor
movl
sub
and
mov
repnz
inc
pop
mov
sarl
lahf
cmp
mov
out
insb
aad
enter
loop
movsb
cwtl
lds
mov
jp
mov
push
call
inc
outsb
fimull
jle
adc
andl
les
cmp
gs
lods
ret
jne
inc
xchg
stos
ja
jle
pusha
push
xchg
data16
popf
jbe
popf
hlt
mov
xor
jecxz
jnp
leave
faddl
outsl
ljmp
mov
pop
cld
int3
das
fidivrs
pop
cmp
xchg
lods
scas
inc
std
out
rol
ja
mov
cmpb
mov
adc
xchg
psubd
mov
mul
dec
or
arpl
in
sbb
shlb
xor
mov
sbb
daa
mov
ds
mov
sub
lods
insl
sub
mov
cmp
cmp
not
mov
push
and
ljmp
arpl
mov
icebp
out
adc
inc
jb
cli
inc
adc
push
lds
lea
mov
mov
divb
sahf
jl
insl
in
loop
ds
mov
arpl
hlt
push
enter
mov
dec
push
hlt
addr16
stc
cmp
mov
movsb
jmp
fmulp
cmp
lahf
xchg
dec
pusha
movsb
ret
sub
or
push
xor
cli
mulb
inc
fst
call
stos
popa
movsb
repz
nop
repz
addr16
test
int
dec
mov
cmp
inc
xchg
adc
ds
pop
push
arpl
dec
je
int3
or
aad
sub
or
hlt
inc
sub
fstps
xor
lds
loopne
lcall
or
cmp
in
js
daa
int
aam
sub
aaa
inc
adc
or
and
pop
or
ficoms
or
mov
outsl
scas
xacquire
faddl
adc
and
adc
out
pushf
mov
lret
pop
aam
push
mov
mov
or
push
adc
ljmp
ror
int
jle
aad
in
leave
popf
and
iret
sub
icebp
hlt
push
ds
pop
aad
leave
clc
aas
loope
aam
inc
stc
jp
cli
push
adc
mov
mov
push
adc
jecxz
inc
js
aad
popf
outsl
cmp
jle
mov
mov
std
pushf
mov
jg
mov
xchg
inc
sti
sti
jp
pop
sub
pop
lds
pop
sub
push
stos
cmp
gs
or
xor
pusha
lahf
and
es
or
and
mov
mov
sub
dec
ret
push
and
fcoms
lds
push
ljmp
fwait
inc
jg
ret
popa
push
lea
mov
inc
xor
xchg
push
ret
enter
push
push
add
icebp
sbb
idivl
scas
jecxz
cmp
mov
xor
push
std
and
add
jmp
sub
mov
je
sarl
rsqrtps
movb
xor
and
mov
or
push
sbb
stos
fidivrl
enter
test
call
pop
push
popf
mov
mov
mov
repnz
lods
mov
mov
or
daa
inc
dec
hlt
inc
mov
pusha
cmp
inc
xor
and
cmp
cmpl
mov
sub
mov
mov
adc
arpl
sbb
data16
jnp
xor
mov
les
lea
mov
push
adc
fldcw
mov
aaa
divl
cmp
imul
out
cmp
xchg
pop
add
aas
mov
xchg
push
sub
jb
or
ljmp
cmpsb
fldenv
pop
push
filds
inc
sbb
sbb
or
and
and
cmpsb
fnstenv
sub
bound
mov
in
aad
mov
jne
aas
inc
rcll
dec
in
shll
mov
add
pop
inc
aas
in
ficomps
rcll
fnstsw
push
and
fcmovnb
pop
lahf
daa
fsubrl
repz
test
or
mov
jmp
cmpsl
adc
cmp
push
and
cmp
push
pusha
rolb
data16
test
mov
shrl
sti
cmp
lahf
ds
push
sahf
orl
repz
inc
mov
inc
sub
xor
lock
sbb
movsb
push
xor
popf
push
xchg
aas
inc
mov
fincstp
lock
push
aam
xchg
ds
data16
arpl
mov
sbb
mov
divl
std
cs
xchg
inc
jecxz
pcmpeqw
negb
adc
add
sub
xchg
inc
cmp
test
sub
enter
cltd
xor
push
lds
outsb
jg
pop
fwait
dec
mov
push
aaa
inc
rcrl
pop
in
mov
jmp
xor
or
aad
push
or
int
adc
pop
and
pop
pop
cld
dec
aad
adc
mov
mov
jb
bound
js
xor
add
mov
inc
imul
mov
rol
sub
addl
jnp
push
movsl
and
sbb
lcall
sub
lods
inc
out
outsb
pushf
gs
xchg
and
adc
or
movsb
mov
pop
push
xor
ljmp
mov
fistl
arpl
leave
out
push
push
sbb
and
mov
xchg
inc
in
jb
inc
divl
mov
sub
jge
arpl
addr16
jmp
mov
lods
jae
mov
stos
call
mov
xor
imul
jne
leave
or
idivb
cmpsl
mov
mov
jge
repnz
jecxz
xor
xor
pop
sub
int3
jecxz
decl
adc
sub
das
jecxz
stos
mov
call
sbb
dec
movsl
add
dec
std
cmpsb
mov
loop
sub
xor
push
xor
shlb
push
fsubs
mov
adc
dec
lock
inc
jp
xor
test
movsb
dec
stos
cs
outsb
aaa
pop
imul
scas
ja
ljmp
sub
enter
fldl2t
aam
pop
xor
xorb
or
xlat
scas
sarl
sbb
jns
movsl
fimull
fldenv
xor
pop
push
lret
addb
stos
xchg
test
leave
jmp
orb
outsl
andb
stos
mov
dec
and
fs
jge,pn
decb
rcl
arpl
out
mov
mov
push
mov
lds
addl
pop
sub
std
and
push
pop
dec
ss
cmp
stc
stos
test
mov
and
mov
xlat
call
mov
out
adc
inc
jl
cmpsb
ds
mov
push
fidivs
cltd
aam
insl
xorb
push
mov
repz
jns
lcall
xor
movsb
repz
adc
push
in
adc
mov
push
imul
cltd
sbb
fst
mov
adc
insl
xor
cli
je
inc
movsb
xchg
imul
push
js
and
lods
cli
push
lahf
pop
insl
mov
cmp
das
add
test
mov
mov
push
hlt
cmp
dec
in
stc
and
fsubrp
repz
bound
sahf
sub
xchg
fisttpll
fwait
and
dec
jecxz
xchg
cmp
sbb
addr16
sub
sbb
inc
sub
mov
mov
adc
mov
adc
ds
mov
daa
sahf
jmp
iret
movsb
jge
dec
mov
push
jo
push
inc
push
inc
xchg
pop
imul
das
adc
and
xorb
lret
mov
enter
cmp
out
pop
jecxz
jno
out
adc
push
in
int3
outsb
repz
push
pop
call
mov
sarb
jnp
mov
aaa
xchg
add
dec
xor
sub
rol
cli
inc
loop
mov
pop
int
mov
mov
stos
in
jnp
cmc
das
lock
and
sub
mov
mov
sahf
arpl
xlat
jns
push
testb
into
push
std
xor
inc
xchg
and
icebp
cmp
push
lock
push
dec
cmp
aas
repnz
idiv
mov
addr16
movsbl
adc
jle
adc
mov
imul
dec
icebp
cmpsl
push
scas
aaa
jb
xchg
stos
pop
loopne
in
mov
popf
dec
je
sbb
pop
cwtl
stos
out
dec
mov
xor
in
scas
faddl
pop
dec
add
lods
cmp
jb
sbb
scas
xchg
xchg
adc
inc
imul
xlat
fxch
push
test
ret
unpcklps
addr16
mov
dec
scas
or
cmp
add
jg
push
xchg
sahf
push
push
sub
jbe
push
std
aam
mov
xchg
sub
aad
roll
aas
imul
mov
jg
cmp
or
xchg
mov
or
lret
jae
enter
jmp
pop
daa
mov
jno
pushf
stos
xor
add
jecxz
inc
leave
lds
pop
jns
mov
rcrb
sub
mov
jp
cmc
out
in
sub
push
mul
cs
movsb
or
popf
cld
mov
mov
inc
mov
inc
test
out
int
les
insb
mov
push
adc
mov
loope
insb
fwait
or
adc
repz
dec
pop
jns
les
mov
aad
jno
inc
sub
jno
add
mov
push
sbb
clc
xchg
bound
push
ret
scas
popf
mov
cmpsb
arpl
mov
sub
xchg
insb
lret
xor
pop
push
mov
cmp
fsubl
adc
ss
cltd
in
mov
inc
js
aam
imul
xchg
adc
sub
sarl
mov
mov
shlb
xor
gs
inc
add
dec
arpl
pop
lods
stos
js
mov
cmp
cmpsl
outsb
popf
loop
in
mov
out
jp
addl
sub
mov
cmp
lock
xchg
pop
dec
mov
inc
movsl
aaa
adc
bound
orb
mov
xchg
aad
sub
nop
xor
mov
mov
jbe
cld
popf
dec
ljmp
pop
subl
mov
jbe
mov
mov
sbb
add
ret
xchg
add
ja
mov
daa
movsb
adc
leave
jnp
test
stc
fadds
dec
clc
and
mov
mov
in
mov
push
pop
jo
fstl
test
dec
xor
xlat
outsb
jae
mov
jbe
dec
push
xchg
mov
ss
mov
divl
cs
shll
or
ret
inc
jnp
cmp
mov
loopne
aad
adc
xchg
jge
mov
xor
push
cmc
pusha
movsb
sbb
ljmp
lds
aad
and
icebp
cmc
adcb
or
xchg
cmp
inc
cmpl
pop
ljmp
data16
mov
mov
mov
pop
loopnew
ljmp
xorb
repz
jnp
sub
lret
cmc
push
stc
lret
idivl
jno
mov
push
pop
or
mov
mov
outsb
xlat
jge
fisttpl
xlat
jnp
inc
mov
mov
mov
jmp
cld
and
inc
adc
xor
scas
mov
push
out
push
xchg
xor
sbb
int3
shrl
jnp
imul
lds
scas
push
add
pop
cmp
imul
std
stc
mov
adc
lret
adc
inc
mov
aaa
fadds
movsb
add
int
inc
pop
ss
cmp
mov
cli
movsb
dec
data16
jle
adc
cmp
xlat
jmp
sub
xchg
hlt
addr16
out
gs
cmp
pop
movsb
mov
push
xor
cmp
scas
cmp
arpl
out
pop
jns
pop
mov
mov
jge
sub
xchg
aam
mov
notb
add
adc
push
lret
call
cwtl
sbb
sbb
push
shrb
movsb
mov
sub
add
inc
jecxz
cmp
or
and
pushf
imul
mov
ljmp
cli
lahf
ss
jl
jecxz
stc
mov
das
leave
xchg
sbb
pop
jp
repnz
shll
pop
cmp
stos
outsb
mov
mov
pop
mov
dec
jmp
cmp
adcb
mov
or
mov
push
clc
inc
and
dec
incb
inc
push
or
fnstsw
aam
cmp
mov
mov
movsb
jns
and
stos
adc
into
test
mov
and
cmp
test
lock
push
push
adc
test
scas
div
sarb
rep
jmp
or
jp
pusha
dec
inc
ret
addr16
ljmp
mov
xchg
mov
jb
jl
add
pop
mov
in
pop
mov
cmp
cmpsb
mov
fbld
and
aad
and
and
mov
test
mov
std
sub
add
int
jge
mov
push
fcomps
stc
aam
mov
xchg
outsl
imul
mov
scas
mov
jmp
sub
sahf
scas
nop
push
add
jno
popf
push
lock
stc
jnp
loope
call
adc
enter
fidivl
jo
dec
and
repz
cmp
les
push
cmpsb
stos
adc
imulb
testl
addb
leave
std
xchg
xor
fisubs
movsb
mov
mov
aas
or
movsb
mov
imul
repnz
cli
fs
push
cs
mov
push
jecxz
adcl
daa
repz
mov
shlb
mov
popf
pop
sti
cmpsl
test
clc
sub
in
adc
pop
sbb
inc
mov
adc
cltd
mov
movsb
mov
das
or
push
loop
jb
fsubl
jae
dec
data16
sbb
sbb
int3
shlb
sbb
fsubl
mov
les
cmp
xor
push
inc
lock
inc
cmp
pop
mov
mov
or
mov
shlb
cmpl
xor
or
mov
inc
ds
ret
add
xor
mov
mov
mov
popa
shrl
mov
mov
mov
ret
jns
xor
cmp
xchg
mov
fsubl
mov
jne
sbb
jbe
dec
cmp
ja
mov
push
fidivrl
lea
mov
rcl
popa
adc
mov
test
add
mov
add
jmp
fs
jbe
adc
mov
dec
xchg
movsb
mov
mov
and
sub
inc
lahf
add
leave
push
outsl
cmp
movsl
jno
add
test
xor
cmpsl
daa
mov
jge
and
or
mov
dec
in
push
sbb
and
cmp
stos
mov
aaa
xlat
mov
and
xchg
push
mov
fistpl
cmp
push
mov
pop
dec
inc
or
push
xor
fiadds
lea
dec
int
and
inc
mov
adc
push
push
loop
cmp
pop
jecxz
adc
bswap
add
idivb
lret
jns
jge
add
in
mov
cmp
xchg
sub
jg
pop
out
fsubrl
cwtl
movsb
notb
sarb
xchg
pop
mov
xchg
pop
imul
cmp
pushf
in
mov
pop
mov
mov
jno
mov
movsb
mov
and
insl
sbb
insl
cmp
insl
rcl
out
mov
mov
mov
lds
mov
sbb
xor
iret
aam
mov
pop
imul
inc
out
jo
lods
gs
sbb
push
out
pop
dec
inc
cmc
pop
popfw
sub
mov
push
jle
je
sbb
aas
paddd
and
sar
jp
das
orb
mov
mov
ds
add
aaa
mov
fcoml
mov
orl
jno
notb
mov
add
push
test
loopne
dec
xor
push
mov
jo
stos
stos
cmp
outsl
inc
pop
negl
cmp
loope
fnsave
inc
xchg
nop
xchg
lret
stos
aad
mov
lods
mov
dec
hlt
test
scas
inc
aam
jns
add
jne
cmp
cmp
fwait
rcrl
adc
adc
xchg
loopne
inc
leave
inc
call
cmp
hlt
pop
adc
clc
xchg
xor
xor
jmp
xlat
testl
out
sub
cmc
in
pop
aaa
xorb
insl
jle
add
mov
mov
stc
mov
into
std
sahf
cmp
imul
ret
aam
mov
xor
sbb
mov
cmp
and
arpl
movsl
sbb
sti
and
cs
not
xchg
add
shll
sbb
mov
fwait
ja
add
dec
ret
andb
xor
adc
adc
xchg
cld
xchg
mov
mov
rcrl
dec
jns
lock
jno
dec
mov
pop
mov
aam
pop
inc
adc
push
int
je
cmp
movsb
cmp
inc
pop
cli
lret
xorl
adc
and
and
rorb
xchg
xor
jno
inc
mov
repnz
and
cmp
and
jae
jp
dec
fisubs
inc
in
jne
and
jns
fwait
cmp
in
andl
adc
cwtl
bound
jnp
ret
std
add
mov
xor
movsb
repnz
jns
cld
adc
mov
in
sahf
sub
push
loop
sahf
aam
test
repnz
jp
mov
movsb
sub
xchg
lcall
mov
movsb
add
sbb
mov
xor
orl
daa
mov
shll
jp
subl
in
shrb
mov
inc
dec
shll
pop
rcrb
adc
lret
sbb
shlb
sbb
mov
in
push
ret
leave
call
jecxz
mov
jbe
gs
leave
inc
jno
push
xor
ss
xor
in
arpl
addr16
lods
int
add
jnp
stos
jle
push
pop
iret
jl
std
mov
push
inc
in
hlt
dec
xchg
out
ret
mov
inc
das
adc
add
addr16
jns
cmp
flds
leave
jmp
adc
notb
popl
xor
mov
imul
aaa
data16
mov
xchg
iret
out
push
hlt
dec
jb
sti
cli
cli
movsb
ljmp
dec
xor
pop
ret
leave
lea
jbe
dec
dec
mov
sbb
subb
jmp
iret
adc
mov
push
mov
push
mov
cwtl
out
adc
je
sub
jg
cwtl
xor
jecxz
jb
dec
leave
pop
aaa
lock
jge
out
call
push
fdiv
mov
fstps
cmp
cmp
mov
sbb
inc
lds
daa
cmp
data16
addr16
js
aas
fcom
pusha
ja
je
pop
aaa
in
lret
jno
push
addr16
add
inc
or
mov
lret
mov
jae
push
jns
sub
mov
movsb
dec
fadd
fs
jo
stos
jle
pop
sub
mov
enter
pop
mov
xor
push
roll
mov
mov
lds
loope
test
jge
enter
xchg
adc
xchg
jbe
ds
les
inc
pop
adc
xor
bound
test
sarl
push
mov
sbb
sbb
and
inc
xor
mov
jge
movsb
pop
daa
mov
ret
rcll
push
daa
mov
outsl
mov
stc
test
ret
pop
xor
pop
xchg
mov
cmp
inc
xor
mov
xor
fnstcw
ss
push
lea
icebp
add
call
adc
outsb
pop
in
dec
xchg
jmp
aas
and
inc
xor
pop
adc
dec
int
mov
outsl
push
mov
cmp
push
mov
pop
ljmp
shll
xchg
mov
push
aaa
jecxz
push
or
aad
add
ret
mov
push
testl
sub
jecxz
or
cmp
imul
mov
adc
mov
jg
sarl
push
and
sbb
xchg
xor
xor
shll
cmpsl
cmp
movsb
xchg
dec
push
int3
pop
in
loop
fnstenv
and
xor
lock
mov
adc
sub
add
xor
xor
movsb
fwait
mov
imul
addl
flds
xchg
adc
lret
lods
push
jnp
xor
mov
mov
jg
add
and
xor
push
divb
pop
xor
jno
sar
mov
pushf
movsb
and
mov
jl
mov
aas
and
or
xor
lock
lea
lock
and
xor
xor
push
loopne
mov
ds
jl
inc
add
dec
push
cmp
mov
cmp
aas
pop
sarb
inc
ror
repnz
aas
popa
fnstcw
mov
mov
cmp
xor
sti
aam
jp
push
addr16
pop
xor
xchg
xor
mov
jg
cli
mov
push
inc
pushf
mov
loop
sahf
xor
xchg
cmp
stc
or
stc
cs
mov
add
push
repnz
mov
clc
cmc
jae
cmp
fnstsw
test
xor
idivl
cmp
fnstsw
mov
push
test
shlb
repz
lcall
mov
lods
cmc
bnd
mov
jo
pushf
xchg
icebp
add
xor
cli
aas
test
xor
xor
mov
jp
xor
das
pop
mov
add
and
mov
xor
mov
sti
lock
imul
je
jae
sbb
mov
fs
loop
hlt
cmp
jne,pt
cmp
mov
sub
aas
mov
aaa
nop
mov
mov
mov
xor
repz
incl
cld
cld
std
xor
repnz
mov
clc
fcomip
lods
mov
ljmp
mov
mov
adc
je
dec
xchg
jb
mov
clc
aaa
loope
pop
add
adc
sub
loopne
mov
fisttpll
int
sub
sub
dec
imul
bound
mov
xchg
mov
xorb
xchg
icebp
aas
or
enter
cmp
inc
shrb
pop
cli
jne
push
addr16
jb
leave
mov
lret
adc
jnp
inc
out
inc
cmpsb
push
scas
sti
mov
inc
jne
dec
rorb
loopne
dec
and
xchg
lock
shll
movsb
xor
sbb
lahf
sarl
loop
iret
cmp
pop
mov
mov
adc
cmpsl
mov
xchg
jns
xor
or
xor
xor
push
jb
pushl
jl
cmp
int
cmp
cmp
inc
jp
pop
mov
shrl
and
test
out
cmpsl
shlb
ds
jo
xchg
xor
mov
push
insl
xor
into
xchg
sub
test
cmpsb
inc
pop
mov
in
or
xor
xchg
cmp
lahf
cmp
mov
arpl
mov
mov
jno
clc
cmovb
xor
outsb
cmc
cli
or
loop
adc
mov
inc
das
icebp
outsb
xor
cli
jnp
cmp
mov
xlat
mov
lods
xor
xor
cmp
sub
cmpsl
in
jbe
icebp
ss
js
xor
jle
loop
cmp
sbb
ds
mov
add
mov
add
mov
mov
jp
and
aaa
mov
hlt
mov
jo
ss
aas
cmp
jns
icebp
cmp
jmp
mov
cmp
mov
aaa
mov
lock
adc
mov
mov
jne
jle
std
std
jno
lock
mov
jno
jb
mov
mov
pop
js
cmp
mov
or
sbb
jle
mov
xchg
xor
ja
jl
add
iret
jge
mov
in
lods
xor
mov
and
sub
cmp
xor
daa
clc
aas
es
mov
jns
aas
loope
cmp
xor
cmp
jle
mov
stc
cmp
mov
hlt
mov
mov
cld
jne,pt
cltd
cmp
pushl
xor
cmp
aaa
sbb
sbb
ds
mov
mov
cmp
xchg
in
mov
imul
add
sbb
mov
cmp
lea
and
mov
std
popf
mov
sub
sti
leave
sar
sbb
pop
aas
xchg
mov
cld
mov
ret
jnp
les
pop
lahf
ljmp
mov
mov
or
cmc
mov
div
ds
mov
fptan
repz
outsl
cltd
data16
shl
hlt
faddl
stos
pop
xchg
xchg
cmp
lahf
pop
jns
mov
jno
mov
std
mov
cmp
out
fstp
mov
daa
mov
inc
jne
jg
dec
sub
std
or
lcall
aaa
dec
out
adc
dec
arpl
out
repnz
sahf
inc
jo
push
jg
mov
sub
jg
jmp
push
lret
xchg
add
out
mov
and
pop
repz
or
push
ret
push
cmp
shrl
lock
lahf
outsl
inc
mov
xor
xchg
stc
aad
mull
popf
xchg
divb
jp
add
mov
in
cmp
push
ds
sahf
xor
ret
aas
jns
sbb
pusha
inc
inc
sbb
addr16
neg
nop
iret
mov
call
fs
fwait
jne
xor
jbe
xor
std
mov
jge
push
dec
and
sub
mov
mov
push
ficoms
sbb
popf
hlt
mov
cs
imul
and
and
xor
repz
rclb
and
mov
sub
mov
xchg
shrb
add
jo
pop
sahf
or
leave
xchg
mov
xchg
dec
xchg
les
mov
jns
inc
xchg
pop
or
loope
pop
out
push
sub
adcl
xor
jne
int3
icebp
and
cli
call
movsl
mov
daa
in
std
mov
mov
inc
andl
mov
lds
scas
cmp
cmp
xorl
push
xchg
inc
add
xchg
and
daa
adc
mov
xorb
sub
rcrb
dec
aam
xor
icebp
fistl
mov
sbbb
lods
addb
xor
inc
sub
xor
add
cmpsb
jns
jl
dec
std
icebp
or
and
pop
rcl
mull
dec
sub
cmp
mov
mov
add
xor
xor
fcmovb
xor
movsb
xchg
mov
push
push
mov
mov
mov
movsl
xchg
inc
mov
imul
loop
dec
movsb
scas
test
data16
lret
sbb
out
mov
rcr
mov
sbb
sub
mov
and
or
add
jbe
movsb
push
cmp
into
jno
or
mov
cmp
or
leave
lods
in
xor
stc
icebp
inc
mov
push
push
sub
dec
adc
shrl
xor
cwtl
pop
or
addr16
arpl
mov
scas
push
sbb
daa
mov
out
movsb
adc
clc
gs
dec
pop
dec
adc
inc
adc
add
scas
and
dec
sbb
loopne
mov
mov
divb
sbb
aas
push
test
push
mov
inc
cs
les
repz
sbbb
sbb
jmp
cmp
in
inc
cmc
or
test
adc
rorb
dec
pusha
pop
rcrb
das
iretw
mov
jne
stc
mov
movl
adc
xchg
push
shll
repz
leave
mulb
xchg
mov
out
aas
stc
rclb
jle
jmp
jns
call
popa
cmp
dec
adc
vxorps
stos
xchg
xchg
jno
in
int
cmp
cmp
movb
xchg
daa
in
xor
fs
stos
push
jecxz
out
fldcw
ret
xor
add
cmp
xchg
sub
aam
adc
mov
mov
pusha
pusha
add
movsl
daa
sub
jp
pop
adc
pop
lcall
je
sbb
push
jecxz
imul
scas
dec
sbb
aam
repnz
movsb
adc
cmpsb
mov
xor
push
enter
minps
add
insl
roll
pop
rol
mov
ja
and
notb
adc
xor
adc
std
ds
daa
imul
pop
jecxz
mov
mov
dec
leave
call
adc
icebp
jns
lds
divb
sarb
inc
mov
lds
inc
add
cmp
sub
jb
ret
jp
shrl
sub
pop
fidivrs
aam
pop
std
movsb
loop
les
leave
pop
xlat
ss
mov
lret
aas
shll
es
aad
mov
lock
test
mov
shl
and
xchg
adc
cmpsb
sub
rol
movsl
mov
xchg
movsl
popf
dec
test
sbb
outsl
dec
mov
adcb
cmp
push
sti
out
pop
mov
sub
mov
mov
fsub
pusha
fistl
xor
mov
push
fdivr
out
adc
ss
adc
pavgb
rclb
inc
sub
cs
sub
jne
popa
ja
subl
dec
aas
inc
cmp
mov
and
int
imulb
xchg
and
call
gs
fsubrs
jl
cmp
jns
rcl
ss
adc
aaa
cmp
push
outsb
imul
es
adc
xor
mov
shlb
pop
jns
cmp
push
cmp
push
shlb
mov
push
mov
pop
addr16
or
fnstenv
leave
in
xlat
shll
sahf
jns
adc
int
mov
jbe
shll
jmp
ret
inc
out
pop
jp
and
sub
dec
movsb
xor
ficoml
dec
xor
xorb
xor
push
mov
cwtl
fsubl
push
daa
andl
inc
push
push
lock
pop
pop
std
xchg
out
je
push
lret
pop
adc
cmc
je
daa
jne
pop
pop
imul
fidivl
add
xor
mov
in
or
sbb
fidivs
fldt
mov
inc
in
sti
mov
mov
cli
sbb
adc
xor
push
cltd
out
mov
pop
bound
push
mov
pusha
rcll
add
xor
lea
or
mov
imul
pushf
adc
imul
mov
fildll
inc
lcall
add
pop
fldl
jb
sub
int
adc
pop
cwtl
xor
and
aam
or
mull
cmp
jle
scas
mov
aaa
jmp
mov
adc
xchg
push
out
mov
inc
add
in
pusha
xchg
movsb
imull
inc
cmc
mov
dec
shl
hlt
test
pop
popa
jb
sti
dec
sbb
push
orb
mov
sbb
lahf
mov
aaa
mov
pop
call
stc
leave
ljmp
sbb
imul
fistpl
mov
xor
aaa
mov
rorb
sbb
popf
into
cmp
movsb
test
or
mov
push
sbb
jns
mov
fnsave
stc
sub
sub
aam
shr
add
outsb
dec
lret
mov
jge
in
xor
mov
in
ss
loopne
push
cld
inc
pop
cmp
jecxz
fcoml
rcll
es
dec
lock
push
pop
dec
clts
je
shr
push
push
sarb
mov
mov
pop
mov
xchg
pop
mov
pop
je
sahf
jecxz
push
in
mov
sahf
shll
mov
lcall
or
std
cmp
fwait
popf
test
push
mov
push
xacquire
aam
xchg
mull
and
sahf
mov
iret
andb
mov
dec
pop
pop
cmp
mov
push
rcll
mov
xchg
int
push
in
or
clc
mov
stos
imul
gs
in
jmp
leave
mov
mov
xor
pop
imul
mov
fs
out
std
ret
aaa
xchg
xlat
jb
pop
mov
xor
fs
loop
jbe
mov
adc
or
xor
xchg
cmp
mov
mov
add
mul
mov
xor
aam
test
orb
jmp
dec
adc
lret
scas
shlb
andb
mov
cmp
ss
sahf
stos
push
and
jecxz
ja
leave
push
das
daa
mov
jo
cmpsb
decb
xchg
xor
int
call
push
mov
pop
push
sbb
ljmp
adc
pop
xchg
out
push
cmc
xchg
iret
int3
xchg
sbb
leave
mov
ljmp
nop
shrb
jns
pop
je
leave
shrl
add
je
dec
mov
cli
inc
clc
sub
jle
inc
data16
enter
int
jle
push
addr16
movsb
pop
dec
out
out
xorb
inc
mov
sbb
jo
and
or
mov
add
insl
addr16
ss
jne
rcl
add
and
movsb
cli
add
in
lea
xchg
and
mov
cmp
sub
push
fyl2x
pop
sbb
xchg
cld
xchg
jo
arpl
lret
and
and
and
ret
adc
cmp
xchg
cmp
or
cmp
push
pop
js
stc
aaa
das
sub
mov
inc
push
xlat
jb
movsb
xchg
jmp
xchg
dec
sbb
jecxz
or
cmp
cmp
xor
inc
cmp
mov
adc
xor
ret
cmp
adc
stos
adcl
dec
ss
rol
sub
inc
xchg
ds
movsb
push
push
movsb
mov
daa
mov
testl
popa
mov
enter
pop
jmp
int3
into
ds
call
jne
pop
mov
dec
sbb
jae
mov
sub
jnp
mov
mov
pop
pop
jg
add
jbe
int
mov
xor
mov
sbb
xor
jle
and
cmp
data16
xchg
mov
rcrl
mov
xlat
ds
adc
out
roll
xchg
aam
lock
cmp
jge
inc
outsl
jmp
inc
cltd
sahf
dec
stc
adc
leave
mov
fmuls
ficoms
mov
movsl
pop
rcrb
and
in
clc
ljmp
and
movsb
xchg
jl
cmp
cmc
mov
dec
and
ss
sbb
lahf
xchg
cmp
not
inc
jecxz
pushf
nop
stc
shrl
mov
decl
clc
push
jecxz
imul
test
xchg
loope
xor
sbb
xchg
enter
cmp
push
xor
or
cmp
cmp
test
jno
cld
lahf
jp
pop
ret
xor
add
add
mov
lods
cmp
inc
or
mov
xchg
pop
xor
mov
jg
mov
aas
jl
mov
sbb
jp
aas
repz
mov
mov
xchg
cmp
pop
icebp
mov
cld
mov
xor
mov
sbb
loope
push
fidivrs
cmp
mov
cli
pop
fwait
ja
mov
icebp
icebp
nop
mov
mov
xor
mov
mov
stc
das
jb
xor
repnz
mov
ljmp
or
xor
mov
scas
sti
sub
mov
pop
mov
fdivl
mov
idivb
xor
fnstsw
mov
int
jge
xor
mov
and
loopne
lock
cmp
mov
mov
rcr
mov
xor
mov
je
or
xor
js
mov
jl
cmp
mov
scas
gs
xor
mulb
jg
xor
cmp
lock
mov
mov
outsb
cmp
out
std
cld
mov
xor
jg
js
mov
mov
lock
ja
jge
ss
mull
cmp
sbb
sti
sbb
sbb
aaa
stc
data16
clc
sub
jae
cmp
jl
mov
shlb
nop
mov
mov
mov
test
xor
mov
xor
cmp
xor
and
cmp
aas
cmp
aas
sbb
xor
cli
xor
pop
ret
mov
sbb
jle
sbb
mov
xor
fwait
ja
mov
xor
xor
cmp
add
push
mov
ljmp
push
jp
jb
xor
xor
xor
push
stos
sub
fwait
jp
or
pop
iret
lods
cmpl
cli
mov
inc
aad
jecxz
movsb
cmpsw
push
jmp
in
pushf
sbb
and
insb
lods
xor
cmp
cs
jmp
addl
rcl
ss
push
xor
push
xchg
test
dec
sbb
adc
jnp
scas
scas
sahf
movsl
pop
cltd
xchg
adc
into
cwtl
out
push
adc
sbb
push
sbb
ss
sarl
push
insl
bound
inc
out
cli
xor
inc
jno
test
movsb
push
imul
add
shll
hlt
xor
movsl
mov
xchg
fadd
fwait
shl
rcrl
add
mov
xchg
out
nop
sbb
cmp
gs
outsb
je
sbb
js
loopne
push
xchg
daa
xchg
mov
movsb
movsl
test
mov
xor
jmp
sahf
xchg
push
mov
mov
sahf
cmp
not
mov
jo
mov
xlat
sub
jle
icebp
flds
inc
rorl
cltd
add
mov
mov
add
jecxz
nop
sbb
add
pop
enter
test
mov
mov
aad
pop
or
aam
loopne
pop
inc
xchg
movsb
cld
cmp
sbb
sub
cmp
add
sbb
mov
cmpsb
repz
cmp
adc
push
jb
mov
inc
std
int
pop
imul
jo
in
xchg
cwtl
dec
pop
and
pushf
movsl
sarl
push
js
sbb
jecxz
jo
std
fcomp
dec
hlt
pop
inc
add
mov
sub
jb
mov
in
dec
test
xchg
imul
shrb
inc
popf
inc
ret
out
outsl
stc
aaa
mov
out
pop
inc
xor
in
pop
jne
adc
stos
test
add
pop
pop
cwtl
mov
loopne
mov
aam
sub
mov
and
cld
xchg
cmpsb
lret
push
es
cmp
repz
out
and
aam
mov
popf
pusha
inc
cmp
sbb
lods
push
adcl
mov
fldt
dec
mov
push
push
out
insb
jns
das
daa
cwtl
adc
arpl
jecxz
sbb
mov
cmp
push
sbb
cmpsl
lock
pop
inc
adc
lahf
xor
mov
icebp
dec
mov
lods
rol
mov
cmp
jmp
adc
and
int
dec
adc
sbb
or
jecxz
notb
divb
mov
pop
jmp
dec
xchg
imul
push
lcall
sbbl
out
insb
decl
inc
ret
test
add
or
and
mov
sbb
imul
dec
ljmp
js
xchg
mov
cmp
pusha
mov
dec
inc
xchg
cmpb
push
inc
into
xchg
in
in
mov
jo
or
xor
test
pop
inc
cmp
cmp
icebp
out
fldt
test
sub
push
lcall
call
cmp
stos
cmp
sub
jp
and
jne
dec
ret
xor
adc
pop
pop
ds
or
imul
mov
ljmp
xor
adc
mov
fnstsw
jecxz
mov
cld
daa
inc
xlat
data16
cli
xor
jo
pop
js
dec
xchg
jo
add
jge
aas
retw
in
and
xchg
in
push
xor
jae
pop
inc
add
ret
cmpsb
push
mov
jecxz
xchg
mov
push
repnz
xchg
xchg
cld
or
mov
sub
ficompl
ds
in
push
mov
push
movsl
adc
jl
in
movsl
imul
loop
pop
push
jbe
aaa
pop
push
xor
lock
jae
cmp
mov
imul
xchg
pushf
out
inc
jne
and
sbb
add
fcos
inc
cmp
and
repnz
sub
es
cmp
ret
cmp
mov
xor
cmc
addl
cmp
jle
jl
inc
sub
mov
push
push
sub
leave
cmc
daa
pushf
fstpt
test
jmp
cmpsb
adc
cmpb
cmp
test
pushf
mov
mov
mov
pusha
cmp
je
add
movsb
ret
movb
dec
lret
sbb
sarb
test
inc
inc
clc
loopne
outsl
push
cmp
jmp
ja
nop
adc
mov
lea
mov
mov
clc
iret
cs
push
push
es
ljmp
fwait
push
shrl
dec
daa
repnz
sub
mov
mov
cmp
adc
shrl
mov
cmpsl
pop
mov
push
xor
popl
add
das
push
lahf
movsb
push
out
dec
sbb
outsb
sub
or
cmc
xchg
aam
inc
rcll
aad
movsb
fidivrs
fwait
cmpsl
push
repnz
adc
push
hlt
mov
loop
jae
cmp
mov
aas
lods
movsb
decl
adc
push
sahf
inc
cmp
mov
mov
push
aas
imul
aam
add
rorb
cmpl
cmp
andb
inc
leave
sbb
sbb
and
push
mov
adc
dec
sbb
cmp
sub
dec
adc
mov
inc
lods
lcall
jae
popa
cmc
mov
test
scas
xchg
aam
scas
jo
sbb
jo
insl
sbb
movsl
cmp
jne
cmp
sub
stc
or
mov
repnz
mov
sbb
add
xor
or
sbb
pop
and
push
sub
mov
icebp
mov
jle
mov
js
cmp
jb
scas
mov
sbb
adc
inc
jg
mov
xor
ret
mov
out
mov
cmpsl
js
xor
jno
nop
fnstsw
and
sahf
mov
ret
sbb
cmp
rolb
jmp
push
popa
lods
cmp
and
icebp
mov
int
inc
xchg
lock
repnz
pop
mov
das
je
aas
pop
mov
cli
jb
mov
add
mov
mov
repz
cwtl
mov
mov
mov
out
cmp
sahf
xor
rolb
mov
xorb
daa
mov
mov
cwtl
add
mov
jge
or
xchg
dec
or
xor
fdiv
mov
push
adc
jb
int
jge
xor
push
cwtl
lcall
sti
mov
sbb
cmp
jnp
std
loope
icebp
mov
es
xor
stc
cmp
ss
mov
icebp
and
out
xorb
std
and
adc
and
js
cmp
mul
cmp
sub
inc
sarb
xor
mov
clc
out
xor
cltd
cmp
and
out
ss
jp
xor
icebp
sti
mov
mov
js
cmp
mov
cmc
fidivs
mov
cmpsb
icebp
stc
sbb
add
cmp
or
mov
stc
sahf
xor
mov
jno
loope
ds
pop
std
aas
jg
pop
jnp
mov
mov
jns
xor
ds
mov
cli
lcall
lock
fdivs
aas
push
xchg
xor
pop
mov
inc
sbb
jmp
aad
mov
pop
adc
adcl
adc
jl
fwait
mov
mov
int
fidivl
xor
cs
clc
fistpl
adc
cs
pop
xchg
pop
mov
pop
aad
sub
arpl
aaa
stos
push
push
in
aam
mov
sbb
xchg
stos
or
orl
pusha
mov
lea
jp
je
orb
jno
inc
test
mov
mov
scas
movsb
inc
mov
push
mov
test
sbb
in
add
es
mov
xchg
lahf
or
cmpsb
push
push
cwtl
xor
and
movsb
stos
shl
pop
mov
mov
in
mov
mov
push
cs
adc
out
lcall
aaa
jecxz
pop
cmpsl
cli
push
les
push
incb
push
inc
adc
fwait
clc
mov
dec
sbb
xor
push
cs
andb
icebp
jns
or
push
daa
xchg
cld
xchg
push
ja
jge
cmpsb
sub
call
adc
sub
cld
std
dec
test
cmp
mov
es
gs
out
push
inc
repnz
into
jp
jmp
in
cs
jg
arpl
and
push
sub
xor
mov
mov
fwait
mov
jmp
xor
mov
xor
mov
inc
lcall
test
xor
movsb
cs
inc
cmp
pop
int3
mov
mov
xchg
xor
repz
cmp
sub
ljmp
xor
add
sbb
insb
cmp
ja
mov
cld
cmp
mov
fnstenv
xchg
iret
dec
xor
mov
mov
sub
xor
xchg
icebp
test
ds
mov
ja
aas
rcrb
push
push
clc
mov
jbe
and
xor
jb
cmp
dec
fnstenv
cmp
addr16
mov
scas
sarl
cli
clc
divb
fnsave
mov
mov
cld
mov
imul
jecxz
divl
mov
pop
lret
lds
xor
cld
cmp
repz
xor
sbb
mov
jnp
loope
mov
fidivrs
and
je
xor
jp
sbbb
repnz
mov
pop
test
mov
aas
std
jae
jp
fldt
jnp
mov
pop
mov
jae
xor
mov
stc
loope
cmp
fnstsw
fidivrs
mov
and
enter
repnz
lock
cli
cmp
xor
js
mov
cli
or
out
ss
repz
sbb
cli
lock
xor
xor
mov
cs
lods
clc
sub
jo
xor
mov
mov
cmp
cmp
xor
mov
xor
mov
mov
jle
stos
inc
xchg
jge
jg
aaa
lcall
js
sbb
cmp
xor
sub
lock
jbe
sbb
mov
insb
jns
outsb
inc
iret
call
shrb
leave
cld
in
int3
pop
mov
ds
cmp
mov
movsb
clc
cmp
cwtl
push
es
mov
std
outsl
bnd
test
gs
mov
mov
xchg
scas
mov
adcb
andl
mov
cmp
xor
cmpsb
pop
jns
dec
iret
ret
mov
push
aad
inc
cmpl
push
imull
xor
push
lods
push
out
daa
cmpsl
pop
mov
out
call
lret
je
dec
hlt
int
js
lahf
jecxz
cmpsb
dec
adcb
mov
fadds
loop
daa
mov
push
movsb
lods
pop
xchg
std
lahf
pop
das
push
popf
push
dec
cmp
add
cmp
ds
cmp
iret
xor
pop
or
rcr
mov
mov
adc
enter
adc
hlt
mov
insl
mov
repz
test
add
hlt
cmp
repz
push
push
or
addr16
ja
jbe
shrb
xor
js
adc
dec
repnz
inc
inc
lock
pushf
inc
inc
lahf
fldenv
xchg
cmp
jg
ljmp
hlt
jg
imul
jne
dec
movsb
ds
mov
lock
pop
push
and
movsb
sub
dec
mov
mov
iret
add
mov
and
jge
popf
push
push
cmpsb
imul
ljmp
push
xor
add
pop
cmpsb
hlt
jp
pop
pop
fs
shr
daa
je
aaa
repnz
jp
lcall
mov
shl
cmp
sahf
adc
or
lret
arpl
ss
jns
mov
jnp
mov
iret
rclb
xchg
cmc
cwtl
mov
xlat
mov
insb
fwait
movsb
pop
pop
xchg
inc
jne
out
and
push
jg
mov
xchg
movsb
mov
mov
int
xchg
jne
mov
pop
inc
cwtl
leave
dec
cli
or
lock
lret
orb
add
adc
fwait
adc
pop
pop
xchg
xchg
and
mov
pop
push
mov
sbb
and
fnsave
push
sub
enter
outsb
add
sbb
in
ds
sbb
push
mov
cmp
loop
inc
mov
xchg
inc
shll
sbb
cld
std
push
adc
mov
cmp
add
fadds
jnp
cmpsb
push
aad
mov
inc
mov
inc
jbe
rcrl
or
push
push
jg
cs
negb
lds
sbb
test
sub
subl
mov
sti
mov
rorb
leave
and
out
popl
cmp
xchg
mov
xchg
pop
cltd
jle
or
xchg
inc
push
aas
xor
test
pushf
dec
xchg
scas
lock
lcall
movsb
sbb
or
mov
test
in
shlb
int
sahf
jno
mov
sbb
mov
mov
add
mov
mov
imul
xor
gs
mov
rol
das
movsb
arpl
shll
push
idivb
dec
fnstsw
dec
or
mov
arpl
push
inc
out
js
push
repnz
mov
test
dec
mov
sbb
cmp
mov
cwtl
je
int3
in
sbb
gs
shlb
mov
lcall
dec
cld
mov
or
movsb
add
nop
add
sarb
adc
inc
incl
aas
aad
mov
mov
js
pop
xor
or
lods
or
push
ss
repnz
mov
loop
fisubs
or
rclb
pop
clc
mov
xchg
pop
adc
adc
xor
std
pop
mov
imul
push
xor
div
aad
imul
inc
fnstenv
sti
std
xchg
sbb
push
mov
and
hlt
jnp
outsl
inc
jmp
mov
cmp
mov
test
inc
ds
loop
push
push
lds
adc
pop
xlat
jecxz
adc
cmp
xchg
dec
add
icebp
lret
lret
sbb
insl
test
mov
aam
es
cmp
sub
add
xchg
lret
rorl
mov
mov
inc
jae
adc
cwtl
mov
mov
cmp
add
cmp
int
scas
repnz
movsb
mov
adc
jecxz
xchg
inc
or
push
mov
cmp
cwtl
xor
dec
in
mov
jmp
adc
push
push
clc
or
xchg
adc
push
cmpsb
cmp
mov
cld
scas
adc
fildl
sbb
push
dec
mov
and
pop
lret
lret
outsb
cmp
cmc
jno
xor
lret
rolb
repz
push
ljmp
insl
in
arpl
outsl
sbb
pop
in
mov
dec
dec
or
idiv
stos
mov
xchg
adc
out
sbb
or
sbb
push
xchg
lret
cli
mov
mov
sub
mov
push
jle
out
or
add
sbb
lret
cmp
adc
sub
mov
jnp
cmp
inc
push
jecxz
movsb
out
fisubrs
xchg
push
cld
push
jge
jecxz
add
lahf
inc
inc
pop
dec
fs
sti
stc
cmp
and
iret
mov
iret
repnz
xor
jmp
and
mov
loope
jne
adc
and
int
imul
lds
mov
add
repnz
pusha
aaa
in
scas
loope
hlt
icebp
shll
push
scas
pop
into
mov
ja
mov
dec
aas
call
mov
jb
push
imul
mov
mov
pushf
sub
pop
iret
sbb
mov
cmp
negb
inc
jge
inc
dec
xor
sbb
test
push
loop
cmpsb
inc
jle
adc
mov
mov
sbb
es
push
popa
clc
xchg
call
push
aaa
cmp
pop
pop
stos
dec
jecxz
fsubr
aaa
pop
gs
call
cwtl
jbe
sub
or
lds
add
lods
or
jno
cmp
sbb
cmp
mov
pop
pusha
xchg
daa
jg
outsb
arpl
adc
ret
push
inc
xchg
mov
jns
mov
pushf
scas
xchg
movsb
push
enter
mov
rorb
test
rol
dec
stos
jg
xor
ss
insl
lods
jns
pushf
sub
jp
mov
jl
loopne
push
jae
sub
mov
aas
enter
icebp
inc
mov
lret
aam
push
sarb
jnp
adc
mov
daa
xor
adc
repz
sahf
imul
mov
dec
dec
adc
dec
jecxz
scas
lods
mov
inc
fistl
addr16
sbb
inc
cld
imul
fisubl
add
jns
lcall
out
out
pop
mov
lahf
adc
stos
jb
adc
rol
push
mov
clc
ja
xor
mov
mov
xor
mov
aaa
adc
mov
mov
out
inc
mov
jecxz
aam
cli
setbe
pop
sbb
addr16
dec
sbb
in
popf
shrl
insb
pusha
inc
icebp
outsb
xor
mov
cmp
xor
or
aas
jecxz
inc
mov
fwait
push
push
xor
dec
inc
jns
mov
mov
jns
mov
lahf
fwait
test
negb
xchg
test
testb
pop
mov
jle
mov
sbb
movsb
or
mov
inc
stos
in
xchg
sub
pop
int
sub
icebp
cmp
cmp
mov
inc
adc
inc
pop
xchg
push
lods
pop
adc
mov
ret
dec
mov
fdiv
out
sarl
test
add
add
arpl
pop
aas
insl
hlt
out
mov
mov
sub
pop
notb
and
lods
push
sbb
hlt
sub
mov
dec
and
push
daa
push
arpl
adc
mov
andl
in
sub
add
in
fstpt
or
hlt
adc
push
jb
sahf
jae
cmp
xchg
xor
or
mov
js
cmp
or
and
and
pop
mov
mov
stc
or
adcl
movsb
jno
jp
jb,pn
pop
xchg
jl
mov
inc
add
into
mov
mov
aad
add
xchg
ljmp
xor
inc
lock
sub
ret
flds
mov
ss
sbb
xor
or
aad
cli
aam
inc
mov
movsb
pop
push
loopne
out
shll
addb
cltd
mov
dec
in
fstpl
xor
and
movsb
cmpsb
jmp
ficoms
jb
in
jo
int
add
cld
fstl
lret
push
cwtl
arpl
cmp
nop
ja
push
lds
xor
popa
jb
nop
xor
mov
leave
mov
jo
pop
nop
les
mov
je
sarb
dec
insl
and
ss
jp
inc
leave
in
mov
mov
pop
ljmp
cmp
mov
sbb
xor
leave
sahf
sbb
mov
cmp
in
shrb
lea
xchg
adc
sbb
sbb
sbb
mov
mov
stos
lods
imul
pop
iret
push
xchg
xor
scas
das
dec
pop
mov
or
cmp
bnd
adc
hlt
dec
or
movsb
ds
mov
in
sbb
out
jmp
xor
sub
xchg
jo
push
jmp
lock
ret
sbb
ljmp
xor
pop
jbe
jmp
fwait
push
add
in
fdivrs
mov
mov
icebp
cli
sbb
mov
cmp
int3
mov
bound
mov
in
push
cld
lret
fidivrs
inc
aaa
shlb
mov
nop
aas
and
add
and
in
mov
aas
and
sub
mov
in
lea
xor
movsb
push
sahf
push
test
daa
adc
jmp
mov
mov
adc
mov
add
dec
clc
inc
lock
enter
movsb
and
sbb
enter
iret
pushf
add
cmpsb
movsb
sub
lret
fdivl
pop
fstpt
add
loopne
test
loop
clc
jp
push
jns
sub
inc
jbe
popf
repnz
push
rcrl
cmp
dec
sbb
mov
pop
jle
pop
inc
push
or
jecxz
nop
idivb
xor
xchg
pop
ljmp
xchg
lret
mov
dec
push
es
xorb
jno
mov
cmp
jno
and
push
sub
push
movsl
cli
jg
jae
xchg
xchg
cld
push
lret
pushl
or
aas
test
cmp
mov
xchg
aam
mov
cmp
mov
adc
scas
push
scas
mov
and
adc
stc
push
dec
cmp
push
mov
pop
sbb
mov
dec
push
dec
call
pushf
adcl
int3
cmp
rol
out
fs
jecxz
cli
push
xor
xchg
aas
fsubrl
pop
cmp
add
xchg
orl
jns
or
cs
dec
mov
insl
fadds
push
imul
lds
mov
dec
cmp
dec
xor
aaa
popa
insb
negl
and
mov
pop
inc
shlb
repz
incb
sub
cmp
orl
mov
imul
dec
xor
inc
xlat
insl
std
xor
jb
lgs
sbb
loopne
movsl
add
sub
mov
add
cwtl
nop
dec
mov
mov
sbb
sub
cmp
aas
xchg
cli
jl
adc
xor
ret
cmp
inc
jbe
bound
sub
addr16
dec
arpl
xchg
xor
or
pop
std
cmp
test
dec
in
push
jbe
notl
dec
dec
mov
jl
xchg
jle
jnp
sub
mov
sahf
out
dec
push
daa
adc
cmp
dec
stos
jle
ret
jne
jle
divb
test
cmp
leave
mov
hlt
popa
pop
add
mov
dec
add
mov
inc
maskmovq
idivl
stc
jnp
aas
mov
sub
sub
push
stos
bound
push
jge
mov
enter
mov
in
cmp
loop
frstor
cli
aas
jns
jne
or
aaa
pushf
xchg
sahf
inc
out
mov
xchg
mov
mov
cmp
inc
mov
jno
jmp
or
mov
scas
dec
inc
loop
shrl
pushf
cmp
lds
ret
lret
out
mov
push
mov
push
jge
and
sub
adc
loop
mov
test
xor
and
jae
adc
xor
cmp
inc
and
sti
fldcw
inc
push
mov
pop
dec
ret
lahf
ljmp
add
cmpsl
test
cmp
and
ffreep
movsb
hlt
jae
mov
mov
imul
inc
and
loopne
and
mov
xchg
rcr
xor
mov
in
scas
push
cli
xchg
bound
arpl
test
stos
icebp
test
xor
clc
test
xchg
push
dec
inc
and
jecxz
pop
jmp
dec
mov
inc
cmc
aad
cmp
or
jg
cmp
and
inc
aaa
jge
cmpsb
cmp
jge
cmp
shll
aas
fcoml
out
cmp
std
mov
pop
lea
xor
lret
dec
push
xchg
add
add
mov
xor
cmp
cmp
lea
and
scas
enter
xchg
jp
lea
daa
call
xchg
mov
inc
or
test
and
mov
xchg
arpl
dec
mov
lret
cmp
cmp
push
movsb
leave
cmp
scas
icebp
rorl
ret
loop
sub
mov
loope
out
loopne
xrelease
inc
jbe
sti
enter
mov
icebp
dec
outsl
imull
lods
clc
jmp
js
test
in
push
push
pop
mov
mov
hlt
test
rcll
cmp
push
fldl
hlt
adc
dec
rorb
or
xor
adc
jbe
mov
faddl
lcall
pop
jbe
adc
test
ss
outsb
xchg
ret
rolb
dec
sbb
fsubl
sbb
push
mov
rcll
or
adc
push
add
xor
pop
cmpsl
xor
mov
nop
movsb
out
repz
mov
cld
ds
push
js
pop
inc
and
sub
pop
cli
push
nop
dec
sub
daa
dec
dec
push
gs
xor
mov
movzwl
sub
mov
fs
sub
lods
cmpsl
mov
das
adc
inc
popf
mov
push
push
push
int
mov
pop
mov
adc
dec
out
repnz
mov
fsts
pop
cmp
or
dec
pop
pop
cmp
pusha
movsb
fildll
sub
sub
mov
mov
sti
icebp
movsb
jb
leave
add
mov
mov
mov
and
leave
xchg
inc
mov
xor
mov
je
push
popa
in
jns
in
add
in
lock
fmull
cmp
mov
inc
stos
push
jge
sbb
mov
mov
mov
cmp
nop
mov
push
or
inc
push
cmp
bound
mov
sbb
adc
sub
dec
fisubs
pop
cmp
outsl
adc
sbb
and
sub
popa
cmpb
mov
js
push
push
xchg
das
pop
imul
mov
mov
adc
adc
xchg
sbb
mov
sbb
mov
sub
xlat
or
sub
mov
movl
fbld
mov
adc
addr16
xor
out
aad
mov
push
mov
inc
mov
pop
jb
jno
mov
mov
push
mov
jmp
pop
xor
iret
push
imul
out
inc
daa
adcb
mov
push
stos
jl
aad
add
jp
fnsave
or
mov
insl
mov
scas
mov
pop
jb
jnp
gs
lods
iret
outsb
xor
inc
leave
adc
ret
pop
aad
adc
xchg
lds
mov
mov
jl
fimull
push
jecxz
jns
mov
rorb
js
cmp
addr16
cwtl
xor
xchg
mov
inc
dec
enter
imul
sbb
ret
dec
das
mov
cmp
rcrb
mov
out
xor
jmp
jnp
mov
mov
inc
loop
jp
mov
xlat
and
lds
bswap
ret
stos
pop
mov
movsb
outsl
ficomps
cmp
test
mov
cs
out
dec
imul
rcll
loopne
xor
push
jmp
pop
daa
stos
add
push
outsb
dec
sbb
add
push
sbb
jl
jb
insl
std
jns
enter
jo
shl
add
mov
or
mov
movsl
cmpsb
cltd
pmulhw
mov
movsb
ljmp
mov
pop
clc
popa
inc
mov
mov
fisttpll
jl
stos
cmp
aad
add
cwtl
and
fwait
sbb
movsb
mov
cld
divl
adc
lret
repz
mov
mov
lock
sub
inc
pushl
cmpsl
add
aas
add
enter
sbb
scas
push
fcomps
inc
inc
stc
jg
sbb
xchg
in
push
inc
xor
or
mov
aas
sbb
mov
cmp
xor
push
push
cli
sub
stc
dec
mov
xor
scas
add
xor
fbld
idivl
sub
adc
inc
cmp
jns
in
aam
mov
fsts
mov
lock
jbe
jge
jns
mov
aaa
or
inc
xor
movsb
and
jae
in
pop
mov
leave
mov
repz
pop
adc
dec
aas
lea
xor
pop
in
sbb
pop
and
repnz
rcl
xchg
fld
cmp
in
sti
cmp
loopne
jo
push
xorl
jno
push
cmp
scas
orb
gs
or
jno
push
arpl
pop
mov
call
jl
popa
push
das
mov
mov
xor
jb
sbb
outsl
cmp
mov
push
sbb
cld
ret
xor
js
sub
lahf
iret
or
pop
test
loop
pusha
ret
push
fists
jbe
jecxz
cmp
mov
lret
aaa
xchg
pop
insl
sbb
dec
insb
movsb
and
fisttpll
sbb
aas
mov
pop
jo
adc
mov
test
xor
mov
mov
add
add
push
nop
dec
sub
sub
lds
dec
scas
aaa
or
in
test
call
mov
cmp
xor
lcall
jge
out
leave
pop
add
loop
movsb
sbb
add
mov
cmp
lea
inc
loopne
jle
lods
jo
mov
sbb
adc
imul
fsts
sub
std
xor
imul
scas
push
mov
mov
testl
shlb
insl
add
repnz
sar
nop
dec
aas
mov
and
cmp
push
dec
lret
inc
mov
subl
jns
pop
jns
loopne
lods
push
xor
pop
mov
pusha
cmp
incl
add
in
test
stos
push
jae
push
out
rcrl
mov
in
inc
cmp
mov
mov
in
int
iret
mov
lock
push
adc
or
xchg
movsl
mov
jno
loope
lret
rorb
movsb
int
bnd
mov
insl
icebp
insl
mull
sbb
pop
movsb
and
aas
xchg
test
in
dec
adc
ret
xchg
addr16
pop
cmp
dec
out
clc
mov
mov
xchg
sub
mov
ror
mov
rep
clc
adc
mov
add
pusha
xchg
dec
cs
lcall
xor
inc
lret
dec
in
sbb
push
cmpsb
mov
cmp
fcmovbe
push
inc
cmpsb
push
adc
cld
pop
test
jbe
cmp
outsl
xor
mov
dec
mov
pusha
rorl
mov
mov
lock
or
inc
inc
rcll
js
pop
ljmp
inc
jo
xor
call
mov
sub
push
push
push
sbb
aad
add
mull
push
imul
pop
mov
loopne
or
xlat
dec
pop
insb
cwtl
mov
mov
lods
icebp
mov
dec
out
xor
mov
rcll
cmpb
inc
jge
or
call
pop
or
mov
stos
movsb
cmp
jo
test
pop
out
push
mov
into
dec
push
push
in
jmp
outsb
loop
mov
mov
test
jb
cwtl
or
mov
lret
mov
cmp
and
mov
stos
loop
int
lock
pop
fnstenv
xchg
mov
cmp
sti
lahf
ss
fisubrl
sbb
sub
shr
add
or
roll
mov
das
movsb
sbb
dec
imul
push
loop
outsl
mov
lock
mov
push
in
leave
negl
sub
loop
in
add
jg
in
adc
and
dec
enter
push
dec
das
out
movsb
and
imul
pop
xorb
sbb
jae,pn
cs
scas
leave
push
imul
mov
in
fwait
mov
sub
jecxz
cld
push
mov
int
scas
lahf
sti
cmp
test
xchg
imul
sbb
rclb
pop
and
mov
repnz
jmp
mov
inc
sub
repnz
adc
pop
add
jle
insl
mov
arpl
cli
into
sbb
pop
push
aaa
mov
xor
xor
mov
jns
adc
in
out
xchg
lcall
popa
imul
das
mov
pop
fidivs
insl
and
repnz
inc
jne
loope
pop
int
jg
fs
sub
xor
add
xor
fmuls
fmull
pop
push
mov
xor
test
nop
gs
xor
sbb
fdiv
jl
xor
jecxz
inc
repnz
data16
daa
mov
repnz
xor
xor
xor
xor
fldt
cmp
mov
inc
xor
test
loope
sbb
xor
cli
or
cmp
das
xor
add
repnz
and
out
gs
jnp
or
mov
and
push
mov
xor
sbb
xor
imul
mov
add
push
mov
shrl
int
das
out
mov
xchg
stos
jne
and
movsl
cmc
xor
mov
xor
cli
cltd
out
fldenv
add
cld
fiadds
cli
jmp
jecxz
ficoml
inc
cmp
and
neg
cmp
fmulp
mov
lock
mov
rcr
leave
xor
inc
and
imul
xor
pop
aaa
cmp
mov
sbb
push
xor
stc
ljmp
out
push
sbbl
aaa
cmp
fidivs
sbb
sbb
in
ret
cmp
fidivs
insb
nop
cld
sub
jno
ret
inc
jnp
imul
mov
and
das
sahf
dec
xor
mov
cmp
jno
mov
das
pop
xor
cmp
xor
rclb
xchg
or
jecxz
xchg
and
jbe
xor
leave
cmp
jle
movsl
clc
pop
ds
jne
ret
and
mov
push
and
jbe
bound
adc
mov
dec
jle
and
in
mov
or
pop
mov
pop
cs
xor
push
and
mov
xor
int3
cli
push
call
sub
add
repz
lret
decb
xor
sahf
xor
sbb
xchg
out
and
cmp
notl
fisttpl
pop
cmpsb
inc
mov
sub
test
les
ds
je
imul
xchg
mov
jge
mov
mov
aad
cli
adc
xor
add
push
neg
xlat
and
lret
cmp
and
mov
ss
icebp
push
fsubr
jne
jl
notl
xor
lret
cmpb
pusha
xor
popa
rorb
mov
adc
sahf
jmp
jne
mov
lock
cmc
jge
xchg
push
push
shl
loope
or
jne
mov
sub
addb
mov
inc
adc
std
jmp
div
mov
adc
movsl
mov
xor
push
repz
jge
add
cmc
mov
fdivrs
xor
xchg
imul
sbb
loop
dec
push
popa
xor
push
stos
push
popf
push
setg
mov
or
stc
xchg
cmc
xor
inc
sub
mov
or
pop
xor
outsb
pop
imul
jne
jmp
mov
testl
loope
ja
lret
xor
clc
mov
test
cmpsb
sahf
into
in
ss
mov
push
stos
or
pop
and
mov
add
xchg
out
aaa
shll
and
xlat
lahf
xor
push
xor
out
pop
sbb
jecxz
aad
or
test
xor
adc
pop
add
and
call
cmp
dec
mov
mov
push
xchg
inc
cmp
sete
ret
mov
push
jae
jno
push
lock
cmp
mov
add
pusha
xor
adc
movsb
lods
or
int
mov
adc
and
out
mov
add
cli
dec
adc
mov
xor
and
mov
adc
inc
adc
popa
cmp
movsl
sbb
mov
push
xchg
mov
movsb
cmp
push
xchg
loopne
aaa
daa
jl
fsubrs
aas
stc
inc
test
adc
adc
les
adc
nop
scas
std
test
dec
mov
lock
xchg
dec
add
loope
xor
outsb
mov
push
pop
je
pop
or
out
in
fsub
cmp
xchg
push
ljmp
in
jecxz
fiaddl
or
leave
das
mov
dec
xorb
push
push
sbb
pop
xor
sbb
shll
ret
in
ds
push
lea
jle
repnz
push
sbb
adc
mov
ret
sub
aaa
add
test
mov
fnstenv
add
xor
mov
mov
dec
cmp
xor
xchg
jmp
xchg
cmp
xor
pop
xchg
fwait
int3
in
xor
add
adc
xor
ja
insl
leave
out
xor
mov
jl
xor
xchg
insl
mov
dec
sub
dec
push
pop
sub
bound
adc
jne
mov
jo
add
ja
aaa
or
xor
pop
cbtw
mov
push
xchg
cmp
jbe
popf
dec
mov
loope
leave
cmp
jo
mov
je
sbb
scas
in
dec
in
pushf
das
add
xchg
xor
dec
stos
and
xor
push
icebp
xor
mov
dec
jl
int
mov
aas
add
cmp
xor
sbb
rcrl
push
ficoms
mov
jp
lahf
pop
cmp
mov
adc
dec
mov
stos
cmp
add
add
xor
push
adcb
mov
xchg
cmp
adc
clc
xor
xchg
dec
cmp
and
cmp
fstps
cld
or
pop
jmp
jne
adc
add
nop
push
jmp
cmp
ret
lods
sbb
xor
xchg
arpl
cmp
imul
sub
xor
push
fs
add
mov
or
stc
test
xor
adc
mov
jno
cmp
hlt
scas
xor
jl
pop
mov
fldenv
test
mov
mov
adc
ret
xchg
loope
aas
adc
pop
mov
and
cmp
int
jmp
xor
aam
mov
and
movsb
or
fs
int
adc
or
jg
sub
ds
jo
xor
mov
jne
xor
push
out
xor
sub
adc
mov
sub
mov
aaa
dec
dec
xlat
lret
push
imul
cmp
and
jbe
cmp
and
test
loopne
sahf
popa
lret
testb
movsb
int
call
adc
and
inc
push
or
lcall
add
adc
mov
in
addr16
loopne
test
shl
mov
xor
cmp
or
jbe
loop
mov
clc
pop
xor
stc
xchg
add
mov
mov
or
lcall
mov
enter
mov
mov
aaa
notl
and
push
pop
clc
fstpt
sbb
xor
sbb
das
cmp
lcall
xor
mov
sub
repnz
add
cmp
xor
push
in
sbb
mov
sbb
aam
mov
cmp
push
popf
add
xor
inc
xor
jge
fnstsw
lock
mov
mov
sahf
mov
mov
imul
bswap
or
push
adc
jno
mov
clc
fnstcw
sahf
insb
leave
push
sub
movsb
std
or
mov
repnz
or
call
cmp
pop
or
jnp
loop
loopne
imul
adc
lock
add
mov
loop
js
pop
mov
mov
repnz
mov
adc
mov
popw
fbstp
int
popa
xor
fxch
mov
test
cmpsl
mov
negl
loope
int
xor
pop
mov
and
sbb
and
dec
arpl
aaa
mov
push
sbb
push
and
cltd
pop
cmp
add
inc
shlb
push
inc
xor
aaa
pop
sbb
fdivrp
pop
xor
push
fistpl
jne
cltd
mov
mov
pop
jge
outsb
xor
add
xor
sahf
xor
movswl
pusha
outsb
xor
push
pop
pop
lret
lock
jne
adc
push
cwtd
xor
inc
xor
cld
cmp
stos
xor
push
sahf
insl
shlb
arpl
mov
push
mov
push
in
out
test
inc
cmp
or
add
mov
mov
inc
inc
push
in
or
fcomp
xor
mov
push
scas
imul
push
pushf
pop
sbb
cmp
mov
or
mov
sub
inc
mov
das
sahf
and
nop
divb
adc
fs
addb
xor
ret
lds
mov
push
movsl
adc
xor
ds
mov
in
mov
xor
loope
pop
sarl
mov
adc
sub
lock
xor
xor
push
ss
les
filds
jo
xlat
adc
mov
in
popf
adc
aas
inc
arpl
lock
mov
out
mov
fs
inc
sub
push
iret
add
ss
xor
fnstenv
add
dec
dec
cmp
and
sahf
gs
fs
mov
inc
mov
mov
outsb
test
sbb
xchg
jmp
push
mov
loopne
push
or
loop
fldenv
out
aas
cmpsl
sbb
bound
xchg
xor
or
movb
idivb
cmpl
repnz
scas
mov
inc
das
adc
hlt
popa
pushl
jbe
andl
inc
pusha
xor
sbb
mov
xor
addb
mov
mov
mov
lock
pop
je
movsb
lahf
int3
stc
jbe
mov
xor
jnp
cmp
and
dec
es
leave
loop
aad
or
cmp
push
je
repnz
fmulp
and
xchg
lahf
repnz
mov
cmp
or
sub
fnstenv
inc
insl
jle
or
outsl
dec
xor
push
sbb
lock
mov
int3
cmp
bound
add
push
repnz
xor
push
and
arpl
mov
push
sahf
push
nop
clc
cltd
dec
idivl
fwait
mov
ret
mov
and
jg
add
jno
mov
cmp
enter
fists
xor
outsl
lret
cld
xor
sub
ss
in
xchg
cmp
lahf
outsb
push
bswap
dec
movsl
leave
ret
xor
in
push
adc
mov
mov
adc
pop
insl
or
jo
xor
scas
add
jg
xor
movsb
fildll
sub
lcall
mov
loop
adc
clc
jo
andb
mov
hlt
mov
aaa
push
bound
std
sub
jle
dec
aas
daa
ds
xor
insl
mov
adc
mov
add
jno
lcall
jne
and
and
aad
mov
mov
cmp
and
sbb
cmp
xor
push
lods
lahf
jae
sarl
or
cmp
mov
stc
adc
jno
leave
cmp
iret
insb
scas
inc
lahf
sbb
sti
std
fcmovnu
ret
cmp
rclb
pop
mov
jmp
out
iret
or
scas
mov
mov
mov
aas
xor
dec
cli
hlt
divl
cmp
mov
jecxz
jno
stc
sub
fcomip
outsl
or
test
add
ja
jno
mov
or
call
ss
adc
sub
mov
out
jno
mov
and
and
push
nop
cmp
clc
xor
cmp
sub
dec
sbb
sti
jno
add
inc
sub
inc
jno
mov
mov
jmp
mov
aaa
repnz
mov
scas
cmp
sub
pushf
scas
adc
jg
add
or
enter
or
or
daa
addr16
mov
frndint
outsl
lea
test
and
scas
adc
lcall
mov
jmp
add
xlat
loope
repz
xor
or
and
inc
xor
lahf
pop
hlt
insl
scas
jg
lahf
jbe
sysenter
xor
aaa
mov
je
and
test
int
rcr
mov
daa
adc
cmc
jg
pop
out
repnz
dec
adc
fbstp
iret
push
lret
hlt
mov
pop
xor
mov
inc
out
sbb
pop
out
aaa
aas
in
mov
mov
idiv
xor
jp
lea
adc
add
ret
popf
rclb
sub
jno
xor
adc
push
hlt
sarl
fbstp
lea
lock
loopne
stos
popa
cltd
sub
cmpsb
mov
mov
popa
shll
and
xor
das
mov
out
sbb
sti
cmpsl
jno
fbld
iret
sbb
pushf
mov
bound
jg
outsl
les
loopne
mov
and
aas
dec
mov
jae
or
dec
or
mov
push
jle
xor
icebp
testb
mov
fwait
add
jl
jnp
scas
iret
or
lods
sub
mov
cmp
cmp
sbb
sti
cmp
lock
ret
sahf
int
sarl
cmpsb
and
pop
ds
cli
xor
xor
imul
shl
ret
out
bound
dec
sti
xlat
xchg
add
xor
scas
xor
push
and
sbb
sti
daa
subb
jmp
lahf
xor
sarb
lret
push
xor
add
cmp
or
mov
popa
aad
mov
pop
pop
add
adc
jle
inc
and
rolb
add
cmpsb
out
scas
cmc
jle
ljmp
fisttps
iret
enter
push
mov
fwait
shrb
es
sbb
jno
jg
clc
mov
pop
cld
rorb
jb
mov
inc
inc
cmp
push
cmc
push
bswap
clc
push
or
setno
ror
add
push
dec
mov
rcr
bsf
dec
bt
mov
setg
xor
mov
shl
sar
not
shl
sub
seta
lods
ror
pusha
rol
rcr
jmp
call
clc
pushf
stc
call
not
jmp
call
pushf
call
pushf
mov
jmp
inc
add
addb
add
or
pop
add
add
add
inc
push
add
push
add
push
push
add
push
add
and
add
add
add
sub
fwait
add
loop
sbb
test
inc
mov
or
lods
scas
cmpsb
pop
sub
inc
dec
or
js
adcl
outsb
mov
ja
mov
and
pop
cmovs
sbb
cmp
enter
mov
movsb
xor
mov
call
mov
xorl
lods
dec
fldcw
or
sub
mov
stc
mov
js
cld
loope
mov
adc
jmp
add
es
xbeginw
ficomps
or
xchg
lcall
xchg
into
repz
movsl
inc
test
mov
xchg
sbb
sub
les
sub
xchg
adc
dec
or
mov
inc
xor
mov
in
lret
and
ficompl
icebp
jb
cld
sub
je
cmp
jne
test
or
ljmp
out
add
sub
test
scas
les
adc
mov
rol
arpl
pop
cmp
jo
mov
and
outsb
xor
mov
sbb
sti
clc
and
adc
or
xlat
out
lods
and
dec
imul
insl
je
dec
sbb
aas
mov
popa
mov
adc
push
cmp
fisubrs
loop
int3
into
out
jp
cs
dec
out
pusha
xchg
test
mov
pop
xor
pop
cmp
test
movq
inc
stc
lea
call
pushf
movw
lea
jmp
movsb
inc
bound
ds
fidivrl
in
repnz
pop
sub
sarb
popf
sahf
and
ds
xchg
pop
jnp
addr16
rcll
push
aaa
dec
or
xor
mov
jbe
and
inc
fnstsw
xchg
lods
xor
cmp
loop
pop
jno
xor
cld
pop
xor
mov
rcrl
xchg
xchg
clc
cltd
inc
fisubs
push
mov
enter
cwtl
add
dec
mov
jo
ficompl
into
into
pop
add
mov
decl
adc
and
dec
mov
lret
cmp
rcrb
aad
add
daa
mov
sahf
mov
jae
fwait
ljmp
jb
xor
push
fisttps
shl
or
jo
xor
pusha
lea
jb
push
push
mov
movb
pushl
ret
cmc
pushl
add
mov
pushl
lea
jmp
pusha
movl
push
movl
pushf
pushf
lea
jmp
push
pusha
push
movl
pushl
movl
pushf
pushl
mov
pushf
lea
jmp
pusha
pusha
pushf
movb
inc
pushl
adc
mov
pushl
ret
str
push
movl
call
and
mov
jg
mov
nop
dec
aam
data16
mov
and
lods
sub
pop
xchg
jno
stos
icebp
mov
dec
mov
repz
mov
jge
add
pop
add
insb
cmpsb
xor
mov
xor
jne
mov
std
subl
inc
push
sbb
or
mov
xchg
sub
or
lcall
sub
or
pushf
add
stos
jecxz
mov
shlb
xor
pop
pop
cmpsb
cmp
ret
comiss
mov
jmp
dec
les
dec
and
inc
cmp
shll
outsb
nop
pop
xchg
cld
adcb
jmp
mov
sub
push
mov
imul
push
cltd
in
das
xchg
xchg
jg
xor
loopne
pushf
xchg
stos
sbb
stos
cli
mov
mov
rorb
mov
cmp
jb
fildl
mov
jmp
mov
jle
out
and
cld
dec
push
pusha
add
xor
dec
pop
fistpl
gs
jb
push
xor
xor
stos
mov
or
xchg
dec
daa
mov
xchg
dec
push
and
mov
ffree
push
js
in
push
mov
or
insl
or
int
jecxz
cs
jecxz
mov
pop
add
test
xchg
call
leave
shld
inc
mov
jmp
clc
jmp
and
stos
sub
sub
sbb
in
jl
mov
in
test
add
int
lock
ljmp
jmp
shr
fldenv
std
and
xor
push
mov
jmp
cmc
pusha
or
movb
call
clc
stc
sub
push
movb
lea
call
cmc
bt
cmp
pusha
lea
jae
jb
cmp
jmp
cmpsl
sbb
sbb
lock
mov
aas
sub
jecxz
jns
pop
mov
jae
in
sbbl
clc
andl
xchg
cmc
jecxz
cmp
int
jge,pn
les
jge
push
cmp
mov
cmp
mov
push
cmpsl
and
or
cmp
or
setne
jmp
fwait
nop
in
mov
cwtl
cmpsb
ret
repz
xchg
cli
ja
mov
iret
ss
insl
popf
mov
jno
outsl
or
sbb
pop
jne
repz
mov
xlat
decb
scas
mov
lahf
out
and
sbbl
das
push
dec
leave
daa
fstpl
push
cmp
and
es
mov
push
pop
outsl
adc
pop
testl
jecxz
sub
mov
loop
pop
aaa
or
sbb
and
and
sbb
out
mov
out
stc
or
pushf
or
mov
xchg
repnz
test
call
and
lds
jmp
js
ret
roll
mov
sarb
int
out
push
pop
mov
jns
repz
pcmpgtd
fimull
fistps
insl
sbb
xchg
cmp
inc
mov
sub
pop
cli
pushf
lea
jne
push
mov
call
lahf
pop
hlt
xchg
movsl
jp
jb
mov
test
mov
adc
jo
enter
sbb
xchg
insl
cmp
scas
push
and
xchg
leave
aaa
pop
imul
mov
je
push
lods
rclb
xor
sbb
rcrb
into
in
sbbl
push
les
call
push
lret
mull
iret
scas
fwait
mov
rorl
adc
push
faddl
adc
in
stos
pop
ss
hlt
mov
call
pushf
xchg
add
cmpsb
fwait
mov
out
aad
movsl
fidivs
inc
frstor
in
hlt
or
shll
loope
or
jle
fs
test
fwait
pop
sbb
sub
sbb
jmp
mov
xor
cltd
mov
out
stos
push
inc
outsb
dec
cmp
cwtl
xchg
rcrl
in
sbb
lods
or
push
mov
pslld
add
clc
jbe
stos
cmp
lea
or
or
test
lret
cmp
loope
push
sub
add
push
mov
pop
inc
cmpsb
mov
fldenv
imul
repnz
xor
ret
sbbl
pop
ret
dec
andb
mov
scas
xchg
push
add
loopne
dec
mov
xor
xor
push
data16
fdivr
push
mov
lea
jb
cmc
jmp
push
pushl
xchg
pop
pop
movl
movsbw
lea
lea
pushf
movl
jmp
shl
jb
sbb
and
xor
mov
les
and
dec
push
or
mov
outsb
cld
cmc
shll
jp
mov
out
into
dec
sti
mov
fnstcw
leave
mov
mov
sub
imul
inc
add
addb
add
or
pop
add
add
add
inc
push
add
push
add
push
push
add
push
add
and
add
add
add
mov
mov
scas
inc
adc
ljmp
cmp
cmpsl
xchg
gs
jns
dec
xor
dec
bswap
xor
aad
out
jb
push
cmpsb
sub
inc
mov
jo
inc
push
push
or
sub
pop
insl
cmpsb
nop
add
xchg
mov
jg
sahf
sub
pop
cmpsb
arpl
sbb
dec
push
mov
sub
push
mov
xor
mov
stc
stc
bt
cmp
push
push
mov
lea
ja
pushf
mov
xchg
not
lea
pop
mov
jmp
pusha
lea
jb
cmc
pusha
cmc
cmpb
pushf
pusha
jmp
push
pushl
mov
cmc
test
call
jmp
cmc
clc
cmc
add
pushf
pusha
mov
movsbw
bts
rcr
mov
jmp
call
jmp
lea
call
jmp
pop
or
ljmp
aas
mov
push
in
pop
sti
mov
lcall
cli
and
or
sub
movsl
push
and
sahf
out
divl
xor
lcall
movsl
les
ds
mov
xchg
or
out
fidivrl
pop
and
test
xchg
mov
call
jge
sti
subl
repnz
add
inc
push
or
cmpsb
in
js
add
addr16
or
or
push
and
shlb
mov
xchg
int3
pop
inc
xchg
mov
push
add
pushf
ljmp
movsl
call
imul
call
lods
adc
pushf
test
push
mov
mov
testl
leave
dec
iret
mov
pop
push
xchg
seta
in
popf
jns
jle
jmp
push
imul
lahf
sub
jbe
or
jp
and
jmp
adcl
or
pusha
out
mov
mov
mov
or
jo
xchg
jmp
out
lea
jno
jne
scas
adc
mov
mov
iret
mov
mov
fadds
sub
shrb
pop
ds
mov
loope
popa
call
es
rorl
sar
push
mov
jmp
sti
sbb
xor
xchg
adc
xchg
orl
xchg
fstps
in
adc
filds
pop
std
fmull
jl
xchg
iret
dec
cmp
sbb
inc
or
ja
cld
aas
sbb
das
jb
sbb
pusha
or
aaa
inc
push
out
jb
xor
xor
gs
cs
push
rolb
out
out
es
xchg
cmpsl
gs
test
mov
in
xor
push
ss
pop
loop
mov
cmpsb
cs
or
jp
aas
loope
scas
pusha
sub
sbb
add
push
insb
mov
insb
mov
mov
mov
jbe
mov
stos
jge
rclb
icebp
push
dec
ja
add
push
mov
lods
sub
mov
hlt
jbe
mov
push
das
push
fsubrl
mov
xor
lods
push
mov
and
jae
sti
jle
mov
cwtl
and
xor
imul
pop
pop
lret
xchg
jne
push
lock
outsl
mov
sub
inc
push
push
mov
call
setl
movsbw
adc
dec
mov
cmc
push
cmpb
push
push
pushl
pushf
lea
jne
bt
xor
dec
mov
pushf
cmc
sub
add
add
clc
mov
bt
pusha
pushf
clc
test
pushf
lea
jge
je
bt
cmc
sub
pushf
cmp
pusha
jmp
test
test
cmp
pushf
call
outsb
cmp
mov
mov
lods
inc
dec
mov
rorl
shll
mov
push
sahf
popf
std
sub
rcrb
outsb
mov
mov
mov
push
add
cs
test
cmp
mov
cmp
inc
pop
jmp
das
push
pop
inc
bound
loope
xchg
loopne
jo
mov
add
jle
push
jo
push
and
xchg
push
mov
test
add
pusha
pushf
mov
lea
jne
not
jmp
call
jmp
cmc
pushf
inc
je
mov
mov
adc
jp
cmp
lcall
popf
call
out
cmp
add
add
ret
cltd
rcrl
repnz
addb
sub
inc
sahf
addr16
pop
popa
outsb
jne
xchg
mov
js
and
enter
inc
push
out
or
sqrtps
repz
mov
xlat
dec
mov
sub
mov
adc
lret
in
or
sbbb
cmpb
cli
xor
nop
repnz
ss
rclb
dec
call
int
frstor
stos
mov
test
push
mov
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
cmc
movl
rol
stc
pushf
cmc
push
sub
cmp
neg
mov
clc
cmc
call
fldt
xchg
lods
pushf
es
scas
push
icebp
repz
pop
iret
jno
cmp
and
lahf
xor
xor
popa
adc
stos
mov
call
adc
jmp
out
cld
mov
push
sbb
lret
jecxz
movswl
scas
add
adc
nop
push
jbe
aas
scas
cmp
cmp
cmc
xchg
aam
xlat
inc
lret
jle
cmp
push
adc
sbb
mov
out
cmp
sahf
jp
dec
ror
xor
adc
lods
push
add
fidivl
test
popa
mov
insl
pop
int
mov
jns
push
adcl
inc
pop
jmp
jge
loope
push
push
mov
jo
jmp
cs
jae
sub
push
lret
out
lret
sbb
adc
xor
nop
cmp
ss
mov
call
lcall
or
fdivr
sarl
jl
lret
push
lea
inc
repz
inc
mov
push
dec
xor
jbe
inc
or
into
cmc
cmc
adc
testb
push
jno
movsb
jnp
add
fisubrs
jl
sub
repnz
and
bound
je
pusha
clc
cmp
pusha
sub
lea
call
clc
cmp
mov
not
lea
not
mov
call
movb
inc
lea
push
lea
call
jmp
lea
je
call
cmp
and
popf
dec
mov
in
outsb
push
cld
or
cmp
push
push
testb
push
mov
std
mov
fdivs
movsl
cli
sbbb
loope
inc
cmp
jmp
xchg
scas
jbe
pop
inc
lods
mov
or
and
pop
stos
pop
cmp
adc
es
imul
jle
push
subl
sbb
xchg
sbb
ret
sbb
lds
movsl
aas
cmp
rep
daa
sub
lods
scas
jg
jl
fimuls
cs
adc
aaa
push
mov
inc
add
and
jle
and
test
imul
pop
cmc
adc
or
xchg
jge
cmpsb
cmp
out
inc
add
pop
mov
popa
sub
sub
jne
push
popf
inc
mov
adc
call
in
lret
mov
fistl
pop
icebp
sub
fdivl
xchg
scas
data16
and
push
adc
cli
sti
inc
mov
and
rcrl
mov
loop
outsb
jae
adc
out
push
adc
cs
cld
popa
inc
icebp
jp
mov
mov
push
mov
mov
pushf
push
push
inc
cmp
xor
mov
sub
dec
sarl
xor
outsb
test
pusha
jle
scas
push
mov
lea
je
cmc
pushf
bt
pusha
sub
stc
pushf
pushf
cmp
mov
pushf
jmp
inc
jmp
imul
add
fldt
jnp
jecxz
mov
xchg
pop
notl
push
es
in
or
jge
mov
pop
aam
js
testl
dec
loopne
rcrb
ror
test
fisubl
popa
ret
mov
jmp
mov
xchg
fsqrt
js
push
adc
sub
mov
xchg
xchg
imul
iret
imul
jl
add
shl
sub
xchg
das
movsl
inc
addr16
jp
rclb
pop
pop
xchg
mov
mov
add
pusha
pusha
lea
jmp
call
lods
lea
jl
clc
stc
rol
cmp
bt
sub
stc
neg
cmp
pushf
pushf
test
sub
pusha
call
pusha
adc
bsr
sub
and
neg
cmc
mov
pop
add
mov
inc
rcl
add
clc
cmc
bsf
movzbw
shr
shrd
mov
bsr
sub
xor
add
pop
mov
call
mov
not
movb
lods
pushf
pushf
bt
rol
mov
jmp
lea
ja
pushf
sub
add
jl
push
bt
clc
add
add
pushf
movw
pushf
lea
jmp
lea
jne
pushf
movb
mov
call
std
fs
xlat
push
xlat
sbb
mov
les
aam
pop
adc
loopne
pop
test
mov
jge
es
and
dec
int
aam
and
xor
out
jmp
mov
and
or
dec
mov
testb
mov
or
pop
sub
xchg
xlat
push
fwait
and
dec
xchg
push
scas
mov
fmuls
call
push
scas
mov
dec
gs
or
xchg
pop
iret
orb
fsubr
aas
shr
int
xorl
adc
mov
mov
lcall
sti
cmpsl
xor
sbb
leave
in
jns
add
pop
imul
das
xorb
pop
push
jmp
js
ret
dec
xchg
js
adc
fs
pop
or
arpl
mov
jmp
push
shl
push
mov
sub
push
lea
call
pusha
jmp
neg
test
push
push
push
sub
cmc
pushw
popfw
push
call
inc
xchg
mov
pop
cmp
data16
int3
shrb
shlb
hlt
xchg
push
mov
pushf
aad
mov
dec
shlb
cli
inc
ja
push
sub
lock
jmp
push
mov
incl
jb
insl
movsb
std
push
fcoml
nop
adc
fsubl
jl
inc
mov
gs
mov
sahf
adcb
lods
in
dec
cmpsl
cmp
sbb
mov
dec
fdivrl
push
sbb
pop
jecxz
in
push
mov
mov
mov
sub
cld
push
mov
sbb
mov
cmpsl
scas
fisubrl
and
out
out
mov
cmp
int
inc
sti
add
sbbb
pop
push
into
cmp
cmpsb
adc
aaa
mov
push
icebp
jmp
mov
add
sbbb
pop
sub
xor
sbb
push
dec
lods
and
pushf
push
lea
jg
pushf
pushl
popl
push
pushf
pushf
pushl
ret
pop
sti
loope
dec
stc
add
mov
lahf
and
fstl
das
xlat
pop
nop
aaa
add
mov
and
cli
mov
shlb
dec
jle
jbe
ss
cmp
adc
inc
sbb
push
std
mov
lret
int3
bt
loope
push
and
out
mov
lods
xchg
shll
andb
sbb
and
loopne
aas
mov
xchg
adc
sbb
jmp
pop
mov
adc
mov
roll
insb
push
mov
lods
push
mov
lea
jbe
call
pusha
lea
je
test
add
clc
push
pushf
cmp
cmp
pushf
push
push
pusha
lea
jb
clc
pusha
push
cmp
call
neg
jmp
icebp
ficomps
iret
push
fcoms
xlat
mov
xchg
lea
add
lahf
push
lret
addl
dec
jae
jnp
mov
cmp
ss
sub
imul
nop
add
loop
push
test
dec
dec
les
inc
xchg
dec
jg
adc
in
fisubl
movsl
fcmove
dec
xchg
pop
mov
push
push
incb
jne
inc
push
jl
xor
mov
gs
cmp
mov
pop
mov
push
mov
dec
mov
neg
mov
sbb
shld
mov
bts
cwtl
pop
sete
mov
clc
jmp
lea
jb
clc
stc
bt
clc
cmp
jmp
mov
jmp
inc
movl
adc
shrd
sub
jl
mov
bt
clc
stc
cmp
pushf
call
jmp
push
jne
and
xor
xchg
sub
cmp
popf
repz
loope
inc
adc
xor
loopne
das
mov
repnz
mov
adc
cmp
mov
lea
ja
jmp
cmp
lods
and
pop
dec
outsb
fldt
dec
ror
enter
xchg
in
or
inc
and
dec
inc
dec
sub
aas
jnp
adc
daa
pop
xor
adc
cmp
loope
roll
mov
or
test
push
push
mov
lea
movzbl
lea
mov
mov
call
pushf
push
jmp
lea
ja
dec
inc
inc
pusha
call
push
lea
jne
pusha
pusha
pushf
inc
jmp
call
push
pusha
pushf
push
push
lea
jmp
call
call
test
je
adc
fwait
mov
sbb
test
push
mov
mov
and
sbb
scas
mov
pop
xchg
loope
loope
jg
push
add
inc
jge
sbb
sub
mov
js
mov
dec
pop
mov
xor
aad
mov
fisttpl
xor
fs
mov
pushf
mov
lea
je
jmp
xor
xorl
daa
mov
stos
xor
mov
enter
sbb
mov
and
xor
xchg
inc
loopne
test
cmp
cmp
movsb
mov
jp
fmuls
lock
outsb
adcl
cltd
aam
test
shl
shl
sub
movsbw
or
mov
lea
push
bts
mov
clc
add
xchg
cmp
shr
rcl
bts
clc
mov
and
movsbw
cmc
add
pushf
bswap
bswap
mov
lea
call
call
jmp
pusha
movl
pushl
lea
call
test
sub
pushf
jmp
not
pushf
mov
pushf
call
pushf
adc
push
pushf
pusha
mov
lea
jmp
add
je
fmuls
aaa
mov
xor
sub
adc
inc
sar
pop
or
insl
or
les
jp
cmp
sbb
add
sarl
jb
push
stc
xchg
loope
test
lcall
daa
mov
xchg
andb
sbb
and
adc
sub
adc
stos
adc
push
icebp
loope
jmp
das
mov
sub
push
mov
mov
mov
pusha
inc
pushl
call
push
lea
jae
bsr
mov
dec
mov
shrd
push
mov
push
clc
cmc
clc
xor
pushl
repnz
pushf
movb
movb
pusha
lea
jne
xadd
push
bswap
ror
mov
clc
movsbw
sub
stc
cmp
lea
cmc
sub
call
lea
not
pusha
pushl
lea
jmp
lea
jne
btr
not
jmp
cmp
push
mov
lea
jae
pusha
lea
jmp
movl
call
push
inc
bt
pushf
neg
bt
mov
stc
bt
ror
cmp
stc
pushf
mov
cmc
test
add
push
jmp
pusha
inc
lea
mov
inc
add
and
ror
rol
xchg
setns
rcl
daa
call
pusha
movl
pushf
push
movl
pushf
pushf
pushl
pushl
lea
jmp
clc
test
call
cmp
call
lea
jb
call
test
call
mov
lea
ja
push
pusha
lea
jb
test
jmp
pushf
add
pusha
push
pushf
add
jmp
pusha
mov
movb
pushl
pushf
mov
mov
pusha
pushf
jmp
cmp
pushf
call
push
push
lea
ja
cmp
stc
add
push
pusha
pusha
test
or
push
lea
je
cmc
cmp
push
pusha
jmp
call
jmp
movb
rep
push
lea
jmp
mov
mov
push
pusha
lea
jmp
clc
cmpb
pusha
pushf
lea
jne
lea
cmc
btr
mov
call
xchg
sub
imul
and
es
les
lcall
fistpll
cmp
loop,pt
pop
cmpsl
shll
mov
push
mov
mov
push
mov
mov
cmp
ja
pop
cwtl
test
sar
aas
adc
push
lods
sbb
out
fimuls
inc
scas
sub
ljmp
xchg
lds
dec
dec
xlat
mov
jl
mov
jb
push
mov
int3
popf
call
pushf
lea
call
push
jmp
mov
pushf
jmp
push
ss
je
xchg
aad
cmc
stos
arpl
iret
leave
test
push
loope
stos
iret
incl
std
sub
lods
test
or
push
dec
adc
dec
mov
add
mov
lcall
and
outsb
inc
movsb
stos
sub
fucomip
dec
cmp
daa
pop
sub
icebp
loope
repnz
out
mov
mov
jbe
notb
push
mov
rcl
sar
bsr
shld
mov
clc
cmp
jmp
movsbw
call
movzbw
movzwl
pushf
pushl
lea
not
mov
movb
call
pushf
lea
jae
push
cmp
jmp
add
scas
mov
fmuls
divl
push
out
outsb
push
ret
cmpsb
push
mov
or
jae
or
xor
mov
xchg
push
inc
in
fmull
push
outsb
sahf
mov
insl
push
xchg
push
js
bound
mov
pop
cwtl
dec
fs
repnz
and
ja
sub
popf
xchg
xor
sub
arpl
sti
icebp
loope
cmc
sbb
sarb
std
jge
cltd
scas
sbb
mov
push
mov
push
push
call
movzbw
lea
bswap
mov
mov
pushf
lea
call
pushf
pusha
push
lea
jne
movzbw
jmp
popf
rdtsc
nop
pusha
pusha
movb
movl
jmp
pushf
adc
call
mov
jmp
call
int3
movsl
popa
or
add
outsl
jns
fistps
rorl
cwtl
test
jmp
lock
sbb
mov
jne
ret
sub
jne
pop
cmp
mov
jecxz
push
clc
inc
aam
js
mov
out
in
sub
push
mov
fbld
add
or
mov
fs
mov
pop
repnz
or
gs
jnp
mov
push
repz
ss
pop
lods
imul
fisubrl
cmp
in
jecxz
roll
sub
insl
jle,pt
xchg
push
jnp
push
aas
out
mov
outsl
subb
les
jge
xor
outsl
lret
int3
or
pop
jb
fsts
push
push
sub
enter
insb
jle
in
nop
test
out
test
push
push
icebp
xchg
popf
cmp
mov
pop
sub
aas
pop
loope
jo
push
inc
xchg
pop
and
mov
jle
xchg
std
mov
cmp
dec
int3
int3
sub
pop
inc
dec
sti
les
dec
mov
pop
push
add
in
push
bound
dec
and
leave
mov
ret
test
repz
fidivrl
push
lods
or
cli
ds
loop
and
xchg
sbb
andb
xor
or
iret
adc
sbbl
lret
aad
xor
mov
and
pop
adc
enter
jg
std
aas
xorb
int
jae
int
or
jns
and
in
mov
sub
aas
cmp
sti
mov
call
xchg
aaa
push
sbb
sbb
sbb
push
arpl
jl
lea
push
fstpl
push
cmp
xor
jle
pop
and
add
or
sbb
mov
clc
add
pushf
add
push
cmp
adc
add
sub
test
ret
xor
add
mov
das
loop
push
mov
imul
repnz
xchg
sbb
sti
or
mov
aas
insl
arpl
stc
mov
push
mov
and
mov
cltd
add
mov
xchg
jp
fldl
add
jmp
adc
int3
mov
add
outsl
mov
scas
jle
sahf
fdivrl
mov
arpl
clc
out
mov
insb
mov
aaa
sbb
or
xor
push
mov
fnstenv
mov
dec
in
mov
sbbb
rclb
bound
repnz
inc
mov
jbe
and
leave
adc
shlb
push
mov
and
lcall
xor
mov
into
xor
jnp
loopne
xor
sbb
clc
sarb
adc
mov
and
cld
mov
mov
fimull
mov
repnz
and
repz
cld
jge
mov
fimull
sti
mov
lgs
ja
mov
adc
mov
psubd
lock
adc
xor
fimull
jle
jl
jae
aaa
cld
call
cmp
btr
icebp
cmp
mov
mov
and
mov
mov
xchg
adc
cmpsb
fwait
add
fistpll
xchg
xor
adc
jmp
sbb
xor
or
scas
sub
inc
jbe
call
xor
or
xor
and
xor
outsb
cwtl
mov
mov
lahf
dec
push
inc
and
jb
cwtl
cmp
sti
cld
stos
mov
add
dec
sbb
add
and
sahf
mov
ss
data16
sub
mov
add
or
sub
pusha
jmp
ds
icebp
nop
add
fisubrs
xor
cmovl
add
repnz
pop
xchg
repz
dec
jle
xor
push
sbb
divl
and
pop
add
push
xchg
repnz
lret
popa
aas
rol
and
mov
out
ds
add
enter
and
jle
fstpl
out
and
sbb
push
cld
jl
mov
push
sbb
pop
jg
xor
sbb
test
mov
cld
jbe
mov
jae
je
add
mov
jecxz
mov
push
inc
loop
jno
mov
push
scas
adc
mov
xor
xor
cld
add
jl
sbb
add
and
je
cmp
cli
loop
jne
mov
mov
repz
jg
repnz
pop
cmp
and
mov
jb
xchg
pop
xchg
cmp
sub
add
test
mov
out
mov
scas
jle
push
mov
xchg
push
lods
out
and
mov
xchg
out
in
cmp
sub
loop
mov
add
cli
push
mov
and
and
adc
repz
mov
stc
jge
das
lret
lahf
and
mov
rorl
cmpl
arpl
xchg
repz
mov
mov
pop
jo
jp
daa
mov
xor
xchg
sub
mov
sbb
push
jl
mov
icebp
int
and
xor
jno
and
addr16
jmp
inc
stos
dec
rcll
mov
js
jle
mov
idivl
hlt
push
mov
pop
jb
divl
ja
int
cmp
xor
xor
cmp
scas
cmp
xor
xor
push
adc
xor
jo
push
nop
xor
jp
pop
les
jnp
sbb
lods
push
dec
enter
popa
daa
out
loop
in
mov
push
outsl
xor
xor
mov
adc
setg
repz
fisubrs
outsb
pop
or
sti
xor
lds
push
test
cld
es
jge
pop
scas
cmp
dec
jle
jo
jmp
sar
mov
mov
cmp
int
jp
lcall
mov
sbb
ljmp
push
dec
mov
nop
test
cmc
mov
mov
jne
xorb
sti
adc
mov
xor
jnp
ss
push
cmp
popa
sbb
stc
int3
jo
icebp
mov
adc
ss
repnz
adc
xchg
repnz
xor
jbe
pop
ss
stos
jle
jb
jge
xor
xor
pop
jnp
sbb
inc
daa
or
mov
lock
sub
pop
sarl
pop
pop
aaa
ss
jle
push
cld
mov
inc
cli
jbe
ss
lahf
stos
mov
and
xchg
cld
data16
jae
loop
das
fbld
sbb
pop
mov
in
shrl
mov
out
inc
movb
test
pop
lret
cmp
mov
orb
jmp
jno
lods
add
ficomps
sub
pushf
jle
and
jge
pop
mov
lock
fdivs
xchg
ds
pushl
dec
cmp
sub
xor
cwtl
pop
mov
enter
fs
inc
jnp
mov
sti
bswap
mov
aaa
pop
in
lret
adc
jbe
xor
push
add
cmp
dec
lret
cmp
fnstsw
dec
pop
pop
lahf
xor
mov
int
decb
imul
and
add
cmp
push
pop
repz
jno
aaa
sub
lock
sahf
mov
cmp
aas
mov
clc
xchg
and
mov
inc
ret
je
adc
sbb
mov
sub
loopne
daa
jo
push
adc
push
xor
shll
jae
mov
inc
bnd
jb
mov
shlb
inc
adc
jl
aaa
adc
cmp
jb
imul
xchg
push
add
mov
and
dec
mov
jb
fsub
mov
inc
inc
xor
clc
stos
mov
hlt
sub
mov
push
cmp
jns
out
fcompl
xor
mov
mov
xor
mov
mov
pushf
add
notb
mov
rcl
jae
sti
mov
jno
lods
xor
xor
rep
je
pop
cmp
pop
bound
mov
insl
pop
lret
and
pop
cmp
inc
jno
je
iret
mov
xor
insl
cmp
inc
or
movb
mov
mov
clc
adc
cs
sub
sbb
jbe
popf
divb
shlb
mov
mov
mov
cmp
mov
addr16
mov
stc
ficompl
xchg
rcrl
xor
mov
jo
xor
mov
sarl
ja
xor
inc
push
icebp
test
inc
pushf
push
insl
pusha
mov
mov
mov
jno
jne
lock
movsl
jne
adc
stos
sahf
out
mov
aad
lcall
lds
pop
mov
cs
cmc
ljmp
xor
push
lods
jo
stos
xchg
jne
and
ja
jae
mov
mov
or
ljmp
xor
fwait
xor
mov
mov
js
and
add
sub
imul
mov
push
push
jns
or
lds
jnp
cld
fbstp
or
ss
cmp
mov
sub
cld
sub
iret
out
xchg
push
cs
mov
stos
stc
mov
stc
inc
push
mov
mov
popa
adc
scas
jge
jge
stc
cmp
ljmp
sbb
cmp
outsl
lock
ud0
jg
fidivrl
dec
cmp
sbb
int
aam
cltd
jmp
push
mov
sbb
push
enter
xchg
adc
pop
mov
popa
push
std
xor
jbe
push
ficomps
lock
sbb
inc
imulb
outsl
aaa
in
and
in
mov
jl
mov
sub
adc
xor
sub
xor
ja
mov
push
cs
or
int
mov
out
push
lcall
mov
sbb
ljmp
rorb
mov
lods
imul
pop
cmp
xchg
and
test
push
mov
xchg
and
repz
stos
jg
pop
pop
repnz
mov
inc
mov
cmpsb
cltd
xchg
imul
sbb
outsl
xor
jecxz
push
mov
adc
xchg
js
fcoms
test
mov
xorl
mov
mov
and
or
mov
scas
stos
outsb
cltd
mov
jg
hlt
mov
fs
mov
mov
add
mov
mov
mov
sbb
mov
aad
jle
cmp
mov
pop
mov
sbb
or
mov
jmp
mov
repnz
andb
insl
push
vmptrld
mov
sub
or
js
or
mov
mov
int
pushf
xchg
pop
ljmp
pop
adc
and
jb
repz
ret
pop
sub
loopne
pusha
and
xor
sub
jl
pop
jae
aam
fstl
lea
mov
jb
aaa
push
nop
mov
shl
pop
aas
divb
outsl
jb
and
popa
xor
out
push
fbstp
mov
cli
mov
and
or
lahf
ds
xor
divb
xor
scas
inc
cmp
pop
cs
mov
mov
sbb
inc
pop
jmp
xor
xor
jg
cmp
mov
cmp
dec
fimull
push
sub
cs
into
add
cmp
sbbb
push
add
call
or
sbb
jecxz
push
add
jnp
jno
inc
and
cmp
arpl
and
jbe
mov
adc
sub
icebp
mov
stos
adc
pop
cs
cmp
and
push
sbb
mulb
push
rcl
sub
and
adc
add
mov
sbb
stc
sbb
mov
push
mov
mov
shrl
mov
mov
pop
call
jl
mov
cli
mov
and
sub
mov
pop
mov
loope
xor
scas
or
sub
fdivrl
push
pop
adc
repz
mov
cli
pop
mov
adc
mov
fwait
push
les
call
push
adc
les
ja
hlt
mov
sbb
cmp
xor
and
xchg
pop
adc
sbb
std
mov
test
scas
es
jno
out
pop
std
dec
push
scas
in
cmc
das
cld
adc
dec
popf
lock
jmp
or
push
mov
jb
jae
pop
popf
pop
jl
imull
sub
sti
divl
bnd
sbb
ja
sub
push
jns
cmc
mov
add
sbb
adc
push
add
or
leave
sub
push
pop
int3
inc
testl
shr
sbb
sbbb
shlb
push
fisttps
add
nop
cmp
in
or
xchg
push
push
sbb
in
adc
icebp
in
mov
push
cwtl
xchg
negl
loop
or
adc
aas
xor
and
adc
imul
xor
mov
add
cmp
aas
enter
mov
sbb
enter
mov
cmpxchg
inc
sub
xor
cmp
mov
xor
and
adc
sub
call
daa
push
daa
dec
jns
out
mov
dec
daa
pop
ja
fsubl
mov
mov
repnz
inc
push
cmp
stc
mull
jg
repnz
adc
push
lods
jmp
fsubrp
test
pop
cmp
test
lock
add
pusha
or
das
xor
cs
jg
std
icebp
mov
icebp
and
lods
int3
call
lock
adc
sub
or
divps
stos
sbb
push
push
mov
addr16
and
cmc
lock
jo
mov
fstpl
mov
dec
lods
jp
nop
shl
in
jb
imul
mov
shlb
fs
lcall
mov
popa
mov
cmc
ljmp
inc
fmuls
lcall
adc
stos
repnz
mov
push
adc
shrl
sahf
ja
fdivs
outsl
shll
mov
push
ret
rolb
subb
filds
add
adc
add
mov
shl
jle
movb
ja
mov
push
imul
sbb
fs
xlat
jnp
repnz
dec
mov
add
and
stos
inc
xorb
repnz
mov
lock
add
hlt
push
and
inc
ret
push
mov
and
mov
pop
xor
out
bound
and
mov
add
push
ret
xchg
xor
jae
and
cmovae
daa
mov
and
inc
pop
jp
clc
xor
inc
repnz
aas
dec
add
mov
push
dec
mov
mov
fidivrs
cmp
sub
aad
dec
fld
xor
add
pop
xor
xor
sub
dec
icebp
cmpb
xor
jge
pop
and
cmp
fdivl
cmpsb
jg
xor
mov
add
aaa
xchg
ret
sub
xor
cmp
xor
mov
push
jno
mov
das
xor
and
cmp
ret
shl
pop
repnz
ja
xorb
popf
pop
data16
jle
xchg
pop
and
inc
repnz
mov
sub
rcrb
mov
mov
jp
or
ss
scas
cmp
int3
mov
icebp
jge
jbe
sti
xchg
mov
mov
in
jl
or
xor
mov
pop
pop
xor
push
or
mov
stos
adc
mov
adc
stos
cmp
lahf
adc
mov
adc
cwtl
adc
pop
mov
pop
call
adc
mov
mov
xlat
mov
sbb
sti
mov
pop
adc
stos
push
shll
adc
xchg
stos
js
pop
lock
mov
mov
icebp
adc
cmc
sub
adc
cmp
lock
mov
push
xor
mov
mov
cmp
mov
mov
adc
xchg
pop
adc
xor
sbb
lcall
fidivl
adc
push
pushf
stos
hlt
adc
adc
repnz
lahf
mov
mov
sub
xor
adc
lock
pushf
jo
daa
cli
and
mov
pop
sub
adc
fdivrl
and
mov
mov
sahf
lock
adc
daa
xor
hlt
adc
lock
mov
fsin
lcall
sbb
mov
cwtl
stc
sbb
push
mov
and
mov
lock
pop
adc
pop
adc
fnstsw
sar
mov
aas
pop
xor
mov
sub
and
sub
jnp
mov
pop
sub
pop
call
stos
xchg
mov
xchg
adc
std
fdivl
mov
fisubrs
call
sar
adc
mov
adc
sub
sbb
stc
fisubrl
push
mov
jno
mov
aas
inc
mov
cmc
shll
sbb
stos
pop
adc
lock
mov
mov
stos
jb
rcll
adc
sub
adc
cmp
stos
cmp
pop
lock
mov
nop
push
adc
adc
lock
mov
clc
cmp
stos
sti
adc
adc
push
cmp
lock
cmpsb
lock
mov
xor
stos
div
jb
jae
pop
aas
xchg
xor
add
xchg
mov
stos
mov
clc
adc
mov
add
shll
adc
rol
mov
mov
sbb
sub
stos
jmp
lods
repnz
stos
call
or
adc
mov
mov
ds
ds
sub
xor
and
inc
adc
lock
hlt
sub
xchg
mov
lock
mov
cli
sub
push
stos
hlt
adc
adc
sub
adc
mov
mov
xchg
hlt
repz
repnz
jle
mov
sbb
fnstcw
push
xchg
xchg
stos
mov
repz
data16
jo
mov
pushf
stos
jnp
sbb
fdivrs
jne
xor
stos
jb
hlt
jno
mov
stos
pop
icebp
shll
jne
cs
jae
inc
jmp
icebp
shlb
mov
shlb
adc
addr16
enter
xchg
ret
shlb
insl
mov
mov
jb
aaa
or
scas
stos
add
mov
cli
pop
adc
popf
and
ds
push
adc
adc
jo
loope
inc
ficoml
mov
mov
ds
sahf
lcall
jae
subl
mov
xorb
mov
mov
and
pusha
mov
or
xchg
mov
int
mov
sbb
aam
cmp
fcompl
xchg
adc
lock
mov
xchg
pop
fprem
xchg
mov
lcall
mov
mov
imul
push
pop
dec
push
or
push
lea
mov
ljmp
sti
inc
xor
mov
inc
adc
inc
or
pop
xor
xor
mov
pop
repnz
xchg
stos
insl
jno
mov
push
add
aaa
fnsave
xchg
jo
jg
fcmovnbe
lds
and
clc
fidivrs
cmp
push
fst
sub
sub
sub
mov
cld
pop
sbb
cs
aam
loop
stos
push
and
mov
add
lcall
dec
icebp
mov
aaa
adc
les
scas
xchg
andb
cmp
js
aad
xchg
shlb
mov
push
xor
or
lea
push
cmp
mov
popa
test
lock
hlt
aas
mov
nop
adc
imul
adc
in
pop
cwtl
inc
sub
ljmp
repnz
fimuls
adc
test
adcb
or
xchg
sbb
and
add
jns
jb
or
mov
pop
mov
test
sub
mov
add
pop
jg
sti
jl
mov
jp
setns
dec
mov
xchg
sti
mov
and
pop
adc
xor
movsb
pushf
ds
insb
repnz
and
pop
mov
in
add
ret
cmp
jns
filds
push
adc
xor
mov
aas
or
mov
sbb
push
add
sbb
or
push
decb
lock
mov
jb
push
movsb
in
mov
and
jp
sbb
adc
shlb
fdivs
movsb
lds
lcall
cmp
jb
fidivs
shrl
jb
movsb
sub
in
pop
mov
adc
cli
mov
mov
mov
ret
mov
imul
sub
lea
stos
fistl
aam
dec
mov
insb
adc
sarb
xor
xor
inc
and
insl
mov
frstor
adc
jnp
fldl2e
and
xor
aaa
jno
mov
jmp
pop
into
out
jne
hlt
iret
jnp
dec
sub
mov
mov
hlt
dec
jnp
dec
sub
adc
pop
xor
mov
adc
lcall
push
adcl
xor
jnp
dec
sub
sbb
lret
adc
pop
into
les
add
int3
mov
sbb
hlt
cwtl
jnp
mov
loop
stos
stos
and
adc
push
out
xlat
pop
into
mov
mov
mov
sahf
hlt
mov
dec
sub
ds
into
cs
mov
dec
lock
push
into
adc
rorb
push
mov
push
dec
sub
ret
xor
mov
lret
fsubrs
stc
inc
add
dec
sub
xor
insb
sub
push
into
mov
cmc
sbb
or
ds
sarl
xor
stos
jne
loopne
shrb
jg
lret
cmp
pop
orl
into
inc
xor
push
dec
sub
adc
mov
mov
dec
lock
jl
cld
push
push
mov
cmp
sbb
pop
pop
or
ss
fs
cmpsb
mov
fs
or
jmp
test
decl
dec
pop
leave
cmp
sbb
xchg
sbb
repnz
cmp
add
fwait
mov
xor
pop
cld
repz
or
scas
jp
sbb
adc
enter
xor
pop
out
xchg
sti
jl
and
mov
fucom
pop
mov
jae
inc
pop
adc
jno
mov
sbb
sub
cmp
adc
lret
clc
pushf
mov
push
ss
into
jae
bsf
popf
out
xchg
test
push
push
add
mov
out
mov
mov
xor
fnstsw
xchg
jne
sub
clc
jle
sti
mov
add
outsb
xor
jb
scas
mov
jmp
sti
push
mov
jg
jb
or
lods
fincstp
lret
push
push
ljmp
jbe
mov
or
xor
xor
push
mov
push
and
push
jmp
sbb
mov
cmp
pop
leave
daa
repz
mov
and
jns
mov
mov
insl
mov
jg
or
and
jge
jno
loop
cwtl
pop
push
aas
imul
jb
int
mov
bound
loopne
test
ret
outsb
xchg
cmp
daa
outsl
repz
sub
jb
pop
insl
pop
lds
pushf
xor
push
lods
jnp
add
add
jmp
add
stos
and
and
fldl
sti
lock
adc
inc
or
stos
adc
xor
int
pop
mov
push
jno
jnp
mov
fsubrl
jp
ffree
add
dec
test
in
enter
icebp
mov
push
fwait
std
add
jbe
pop
call
adc
inc
aaa
mov
ret
mov
mov
pop
mov
cwtl
jg
pop
cmp
push
repnz
xchg
and
adc
imul
rorl
loop
mov
pop
jbe
fldl
std
push
or
imul
lods
lods
dec
or
sbb
fidivrl
jae
push
or
cmpsb
push
int
or
cmp
and
sub
mov
jmp
lods
inc
cli
jle,pt
fldcw
sub
and
hlt
rcr
int3
icebp
xchg
mov
ficoml
lea
cmp
out
mov
sub
rorl
nop
int3
xchg
mov
sub
dec
movsb
sahf
in
sub
in
jae
inc
push
xchg
jb
jge
push
imul
cs
sub
test
mov
mov
jmp
bound
js
sub
mov
je
jb
adc
pmullw
inc
pop
outsl
je
xchg
cs
sar
push
mov
pop
inc
jg
mov
jge
add
cli
or
clc
ds
or
rcll
mov
iret
loopne
cmp
lret
loope
xorb
ret
pop
push
into
test
movsb
xchg
pusha
aam
mov
add
cld
sar
movsb
les
jne
push
push
xor
pushf
movsl
scas
pop
cld
jb
cmpsb
and
fcoms
cmp
pop
pop
xor
or
jae
mov
repnz
mov
pop
pop
pop
dec
mov
push
pop
adc
add
stos
lret
lar
xor
and
push
imul
xor
pusha
idivb
mov
dec
push
mov
pusha
mov
xchg
popa
add
pushf
cmp
xchg
push
mov
loopne
or
add
xor
lods
je
xchg
cmp
out
sti
sbb
cmpsb
pop
mov
lahf
xor
repnz
push
sub
mov
stos
popf
jne
cmp
pop
lock
inc
xor
mov
movd
push
addr16
xor
xlat
xchg
stc
mov
ds
scas
shr
outsb
mov
jb
cmp
iret
and
rol
push
dec
sti
sub
rcl
or
popa
repz
cmp
fsubrl
jmp
lock
sub
aas
shlb
mov
outsb
mov
jae
pushf
outsb
das
jmp
loope
jo
cmp
sbb
pop
in
cld
add
push
sbb
and
jmp
into
call
xor
pop
mov
cmpsl
mov
push
cmp
jb
mov
std
les
fimull
loop
inc
cmp
mov
in
mov
loope
ljmp
popa
scas
out
xor
adc
aas
dec
incl
jge
movsb
cs
das
mov
rcrb
in
sar
aaa
pop
jbe
mov
mov
pop
adc
popf
roll
or
outsl
fmul
jno
dec
jb
daa
pusha
and
sti
insl
adc
jl
shr
mov
push
outsb
shlb
push
sti
inc
and
add
mov
inc
aaa
arpl
mov
mov
jae
inc
xor
outsb
cmp
cmpsb
jmp
dec
scas
jl
test
stos
movsb
addr16
pop
scas
mov
sub
js
dec
push
icebp
test
xor
cli
int3
or
adc
jb
adc
xorl
or
and
cli
and
inc
mov
adc
mov
and
aam
sbb
pop
ljmp
mov
divl
mov
pop
push
inc
shlb
pop
lea
push
jns
stc
xor
popf
aas
mov
lret
test
sahf
add
mov
int
cmp
sub
push
pop
sub
fcompl
aam
pop
iret
sti
mov
mov
pop
mov
pop
dec
test
scas
add
jmp
clc
lods
push
mov
int3
mov
mov
es
dec
pop
or
fidivrl
jno
icebp
or
mov
fwait
inc
mov
adcl
movsb
jno
fcompl
sub
lcall
mov
das
jnp
inc
cmp
or
stos
mov
das
aad
mov
cwtl
mov
add
mov
loope
jp
mov
icebp
push
and
loop
jo
mov
mov
scas
arpl
mov
shr
loope
icebp
sbb
in
cmpb
subl
les
mulb
mov
sub
lock
bnd
test
xor
push
js
lea
cmc
pminsw
pop
mov
push
and
xor
mov
xchg
pop
jb
xorb
and
push
stos
nop
mov
out
mov
pushf
pop
pop
fnstenv
add
cmpsb
ljmp
les
dec
sbb
xor
pop
push
add
sub
cmp
mov
mov
or
adc
add
pop
shrb
xor
sbb
xchg
fwait
addr16
adc
ss
into
dec
divb
mov
xor
sub
pop
fisttps
fdivs
outsb
in
test
xor
pop
popf
repnz
and
pop
das
adc
mov
dec
sub
xor
or
sbb
mov
pop
push
lret
je
fisttps
jnp
xchg
xor
push
adc
adcb
cmp
stc
and
push
aam
mov
into
push
inc
pop
jl
mov
and
inc
push
mov
push
sub
xchg
mov
dec
mov
push
mov
jmp
push
dec
mov
pop
shl
cmp
xor
and
inc
mov
jae
pop
lret
aas
mov
icebp
mov
inc
and
int3
and
inc
mov
jp
shlb
inc
inc
outsb
jmp
push
cmpb
lods
mov
jl
lock
sbb
or
mov
daa
sti
add
xor
xor
rcr
lock
subb
sti
inc
cmp
xor
xchg
fsubrl
mov
dec
ret
cmp
mov
inc
jge
mov
icebp
sub
repz
adc
pop
mov
lea
rol
mov
fistpl
jno
mov
xor
orl
adc
shlb
js
mov
and
mov
das
sub
test
push
rorb
loop
test
notl
pop
cmp
inc
xchg
mov
xor
push
jecxz
popa
xchg
divl
adc
in
push
cmc
ljmp
dec
sti
bound
mov
dec
jp
mov
mov
jae
mov
sub
inc
mov
push
fiaddl
cmpsl
adc
cmpb
pusha
mov
subl
mov
jle
js
adc
cmp
fisubs
lahf
test
pushf
shlb
jle
cld
fbstp
sbb
jl
pop
hlt
in
xchg
mov
mov
out
push
daa
sub
lods
sbb
jmp
daa
mov
data16
sahf
jmp
lock
mov
push
movsb
mov
cmpl
push
lret
xor
and
cmp
mov
in
shlb
ret
mov
xor
mov
clc
insl
mov
andl
and
push
or
adc
movsb
lret
cmp
and
sti
out
xchg
mov
insb
mov
mov
sub
jp
fisubrl
mov
test
jbe
mov
xchg
push
rorb
mov
in
popl
or
xchg
and
outsb
lods
test
and
pop
cmp
adc
aas
imul
es
jo
adc
inc
mov
loope
mov
lcall
loop,pt
xor
lret
cmp
add
or
ret
sbb
rclb
mov
cmp
sbbl
lret
ljmp
movsb
pop
cmp
sbb
mov
and
mov
ljmp
pop
dec
sbb
mov
out
icebp
mov
cmpl
xchg
mov
stos
mov
fcompl
inc
arpl
mov
stos
je
dec
icebp
cmp
cmp
mov
add
dec
jecxz
xchg
and
and
mov
or
loopne
cmpb
shlb
fdivl
icebp
add
int3
mov
movsb
mov
mov
dec
mov
xchg
inc
js
push
add
test
mov
repnz
pop
xor
negb
mov
adc
fsubl
movsb
push
add
fstpt
scas
jae
cmpb
and
xchg
movsb
nop
movsl
out
cmp
test
sbb
adc
cmp
icebp
jmp
xor
xor
test
pop
jo
lock
rcl
std
push
inc
and
lret
add
jns
adc
daa
cld
in
xorl
push
aam
sub
lcall
popl
push
fildl
int3
stos
insl
hlt
xor
mov
mov
pushf
scas
inc
adc
lock
mov
and
dec
sti
xchg
stc
and
mov
fldenv
mov
jg
mov
shll
fnop
sbb
subl
inc
arpl
cli
lods
shll
out
and
xorl
in
jmp
and
icebp
mov
jae
push
jb
fisttpl
cmpl
ss
sbb
mov
loope
xor
lock
cs
xchg
inc
cmpl
insl
xor
stos
jecxz
sub
addr16
jbe
add
pop
lds
aaa
leave
mov
dec
les
dec
or
adc
rcl
mov
loope
stos
sahf
jmp
pop
out
stos
addr16
jecxz
cmovbe
neg
push
or
pusha
xchg
imul
and
inc
pop
fcomp
pop
mov
out
push
pop
sub
out
leave
xor
adc
insl
inc
into
jae
sbb
and
nopl
test
mov
dec
sub
cs
arpl
subb
test
add
xchg
jnp
ds
aas
mov
pop
fdivs
pop
repnz
das
repnz
xchg
out
popa
outsb
icebp
mov
in
or
movsb
adc
jnp
inc
mov
lods
add
push
pushf
or
jmp
jle
adc
shlb
pop
outsb
ds
and
insb
jne
ficoms
xor
mov
mov
sub
in
ret
int
push
repnz
cmp
mov
inc
mov
fwait
xor
fisttpll
mov
add
pop
shll
mov
push
xor
in
sar
movlps
test
movsl
lods
ficoms
stos
imul
jge
xor
mov
mov
push
fstps
cli
and
xor
out
ja
cli
pop
mov
dec
xlat
pop
mov
mov
ja
es
imul
mov
xchg
into
popa
addb
pushf
cld
sti
gs
mov
dec
mov
pop
pop
daa
mov
mov
orb
xchg
or
push
jae
pusha
jne
scas
sbb
movsb
int
test
push
fwait
fwait
mov
test
aad
push
and
sbb
adc
push
dec
loopne
sbb
movsb
mov
int
push
ds
sahf
fidivrs
je
outsb
xor
lods
jle
out
jp
int3
jb
adc
xchg
int
and
pop
arpl
xor
xor
ds
imul
push
decl
imul
in
repnz
or
mov
out
xor
lret
outsb
dec
shlb
fcmove
xchg
imul
fdivrl
cmp
testl
into
mov
add
inc
adc
mov
lock
sbb
into
fstpt
xor
cmp
xorb
pop
icebp
das
mov
mov
cmp
push
movsl
mov
outsl
sbb
mov
outsb
or
adc
mov
fisubl
xlat
into
addl
cltd
mov
pop
enter
movsb
fucomi
mulb
mov
dec
imul
lret
sbb
mov
or
pop
xor
mov
rorb
mov
ljmp
adc
sbb
sub
jg
mov
aas
popa
mov
out
fiadds
and
cli
insl
and
add
mov
sbb
aam
or
scas
mov
mov
pop
jbe
inc
mov
adc
rolb
add
and
adc
jbe
pushf
mov
or
adc
and
icebp
xlat
in
mov
sub
xchg
mov
dec
pop
add
mov
clc
adc
das
mov
jno
bnd
jo
adc
scas
sti
ret
mov
xlat
mov
jmp
xlat
stos
and
movsb
stos
shll
dec
test
loopne
and
mov
aaa
cmp
dec
std
xorl
orb
mov
mov
add
repnz
xchg
mov
pop
std
pop
cmp
popf
xor
test
sub
test
sub
xchg
sarb
cltd
sbb
call
adc
loop
mov
aam
repnz
mov
lock
lcall
cmp
sub
int
sub
sub
loope
scas
sub
jmp
jecxz
in
lock
shlb
mov
or
adc
mov
pop
lock
scas
and
pusha
mov
mov
cmp
out
in
jmp
hlt
sarl
loopne
scas
and
adc
repnz
daa
push
or
mov
adc
stos
add
xor
and
rol
sti
mov
divl
xor
jno
mov
mov
pop
aas
push
les
xor
dec
xchg
mov
sbb
jb
push
insb
push
aaa
xchg
es
sbb
mov
push
sahf
xorl
dec
xchg
jb
rol
mov
push
aad
xchg
xchg
pop
nop
ja
jmp
and
fdivr
ret
lcall
and
xor
xor
or
push
and
jmp
sub
nop
cld
movsl
stos
rcr
mov
and
pusha
sarb
repnz
cmpsb
pop
je
inc
shlb
cmpb
push
mov
cltd
pop
push
in
jbe
inc
lahf
rolb
pop
jp
xlat
out
sbb
jbe
data16
xlat
test
movsb
jbe
cmp
cmpsb
adc
push
fdiv
push
movsb
add
ret
inc
xor
jnp
lock
arpl
jnp
pushf
push
repnz
stos
aaa
into
inc
andl
and
pop
jnp
repnz
scas
jecxz
int
xchg
sub
and
xchg
jge
shl
cld
ds
sti
stos
and
in
icebp
add
sti
add
cli
mov
cs
cltd
or
movsb
xchg
les
outsl
adc
push
ja
add
test
cld
dec
push
loop
mov
or
mov
loope
bound
mov
fisubrs
jp
loopne
pcmpeqd
jno
fs
mov
bswap
xchg
ds
scas
adc
mov
loopne
ss
mov
and
mov
or
rol
ret
int
dec
call
roll
mov
test
mov
pop
mov
pop
inc
jnp
mov
sub
scas
mov
push
or
pop
push
inc
xor
ljmp
ret
mov
sti
adc
cmpsl
cld
dec
aaa
into
mov
pop
daa
fldt
or
jl
mov
in
add
lcall
loop
int3
fidivrl
call
aad
pushf
sti
lret
insb
cmp
scas
mov
pop
xchg
add
jb
push
outsl
jg
loopne
xor
push
inc
push
arpl
fldenv
adc
cld
adc
cmp
and
xchg
sbb
jge
pop
out
repnz
ss
jg
mov
les
aas
mov
out
xchg
or
shlb
sbb
mov
daa
test
mov
popl
xorb
mov
push
int
push
test
mov
xor
sub
push
xor
jb
sti
adc
or
daa
arpl
lret
loop
jmp
or
mul
stos
push
rcl
in
xor
movsb
jno
mov
or
mov
sti
cmp
imul
ds
cmp
std
mov
xchg
arpl
test
and
test
adc
push
mov
test
rcrl
cmc
loopne
push
pop
or
je
push
addr16
pop
xor
int
sub
aas
in
leave
push
mov
jg
inc
push
mov
loopne
ret
repz
ljmp
jnp
shlb
sub
mov
sbb
shll
or
mov
leave
and
xor
cli
add
hlt
addb
es
mov
add
mov
or
jne
repnz
push
cmp
movsb
adc
call
add
movsl
aaa
repz
adc
xchg
mov
pop
push
sbb
inc
push
scas
es
into
das
and
adc
filds
dec
fdivrs
xchg
mov
xor
push
dec
mov
out
int
pop
sbb
das
push
inc
dec
jno
push
pop
icebp
push
icebp
pop
int3
icebp
jg
testb
scas
or
pop
push
jb
sbb
movsb
lret
mov
icebp
lcall
icebp
xor
mov
ds
jae
lods
rcrl
mov
sbb
cmc
into
insb
jl
xchg
xchg
or
or
jae
dec
push
mov
or
scas
add
adc
mov
jecxz
pop
iret
lcall
jnp
cltd
insl
sub
dec
mov
pop
scas
pop
hlt
aas
cltd
pushl
int
dec
inc
hlt
mov
xchg
inc
cli
sbb
push
loop
icebp
jb
jmp
fcomi
enter
fadd
and
outsl
mov
sub
shrl
jb
and
add
jb
mov
add
pop
and
ret
int3
fstp
xchg
mov
fcoms
icebp
pop
sbb
lods
sti
inc
sbb
incb
add
leave
mov
lahf
aas
icebp
xor
popl
mov
rclb
mov
pop
out
in
pushf
add
adc
push
imul
jg
and
xchg
jnp
sbb
add
out
adc
repnz
cmp
add
shr
shl
fsubrl
hlt
or
ret
repnz
lahf
gs
aas
or
cmp
add
sahf
loope
mov
shlb
out
scas
push
add
sbb
jl
add
sub
leave
mov
xchg
mov
bound
mov
imulb
sbb
cwtl
cmp
call
and
sbb
mov
cmp
pop
mov
insl
jne
jbe
stos
icebp
ds
idiv
mov
repz
add
and
xchg
adc
cld
sub
mov
aas
add
sahf
cs
jno
or
test
adc
pop
cmp
and
fnstenv
fdivrp
lret
pop
aas
cmp
ljmp
and
jge
mov
lock
rorl
sbb
add
sub
out
jl
rsm
rorb
mov
and
rcll
stc
roll
rolb
clc
push
pop
sub
sbb
sbb
push
or
jnp
je
lds
adc
in
pushf
add
and
pop
int3
ds
or
pop
pushf
movsb
add
jno
out
mov
out
jge
mov
pop
inc
aad
pop
inc
push
jb
jmp
aas
ds
xor
insb
scas
xor
sti
xchg
rcrl
adc
mov
xlat
lds
clc
stc
sub
xchg
sbb
pop
mov
into
inc
mov
ret
inc
mov
adc
jle
lret
and
movsb
iret
pop
popa
neg
and
add
xor
mov
sbb
mov
cwtl
push
stos
add
mov
push
call
dec
sub
push
dec
add
push
ret
push
and
and
or
mov
cmpsb
rcr
icebp
es
loop
shr
lret
xor
xor
pop
mov
roll
hlt
popf
rorb
aad
push
aaa
insb
insl
sub
in
rorl
add
mov
test
lods
inc
stos
bound
jle
xchg
cltd
cltd
repz
pop
outsl
fsts
mov
enter
push
loop
cmpsb
lods
cmp
divl
outsl
repnz
mov
jno
fsubl
adcb
pop
pop
es
call
divl
addr16
mov
aas
das
icebp
xchg
in
mov
jbe
shl
pop
sti
rorl
pop
adc
cmpsb
adc
pop
int
xor
lock
test
add
data16
loopne
jns
mov
xor
mov
adc
adc
or
inc
and
insb
aas
mov
test
lock
leave
or
jno
loopne
hlt
push
and
mov
jno
mov
xchg
cmpb
mov
cmp
inc
lds
rcll
and
lock
jbe
push
pop
mov
loopne
and
xor
sub
aad
rorb
jbe
adc
pop
mov
cmp
xor
jle
pop
inc
xchg
aaa
aaa
xor
mov
fnstsw
push
movsl
leave
adc
shll
in
xchg
dec
out
pop
pop
lods
mov
push
scas
push
or
adc
mov
adc
xor
lods
aas
sti
sub
pusha
cwtl
add
inc
inc
daa
mov
or
mov
push
ret
inc
ficoms
jg
sahf
jmp
pushf
xor
push
push
sub
mov
jge
pop
arpl
push
lahf
mov
shll
ret
cli
mov
sbb
xchg
mov
test
mov
and
jne
mov
adc
mov
scas
pushw
fwait
xchg
scas
dec
lock
das
add
fldl
stos
jp
xchg
sti
repnz
jecxz
mov
mov
stos
xor
jle
xor
lods
adc
imul
add
xor
pushf
call
sbb
pop
jmp
sub
cmc
outsl
add
mov
sub
mov
testl
mov
sub
fsubr
mov
fmull
and
cmp
xchg
aas
in
movsl
andl
push
dec
inc
and
sbb
js
dec
dec
stc
cmp
fimull
cmp
fistpl
cmp
sub
xor
add
pop
fidivrl
cmp
mov
lods
popa
push
enter
gs
mov
test
or
clc
mov
enter
push
lahf
push
mov
cmp
inc
clc
aas
xchg
ja,pt
loopne
cli
cmp
aaa
int
ds
add
mov
aas
xor
scas
jl
das
subb
fnstsw
fcmovbe
jp
sti
jmp
push
imul
push
enter
imul
add
loopne
xchg
fnstenv
lret
jnp
movsb
hlt
mov
push
push
jo,pn
jecxz
ret
xor
imul
jmp
into
xlat
mov
daa
movsl
imul
sbb
scas
stos
roll
mov
xorl
push
dec
xor
push
pop
nop
add
jo
dec
jle
xchg
xor
popl
imul
sub
pop
jg
mov
xchg
jnp
jb
loopne
sbb
imul
mov
jno
lahf
mov
rcrl
popf
lret
mov
jb
test
mov
sub
ficomps
cli
push
push
cmpsb
ds
sbb
jbe
xor
mov
jo
rcl
and
mov
lods
aas
fdivrs
testl
and
add
push
daa
je
jb
pop
stos
das
fsubs
inc
mov
lea
pop
xor
stos
notb
sti
shlb
cmpxchg
xchg
ret
popf
inc
jmp
dec
jl
rclb
rolb
mov
lock
push
add
or
lock
inc
dec
push
mov
xchg
ljmp
mov
fnstcw
lret
pop
nop
jl
mov
inc
xchg
repz
inc
mov
mov
push
rorb
jb
inc
and
pop
xor
pop
dec
fisubrl
aam
xor
mov
mov
ds
popf
ljmp
ljmp
jae
mov
ljmp
dec
add
xchg
es
xor
mov
popf
loope
add
inc
inc
adc
inc
or
mov
inc
or
mov
mov
leave
add
push
lock
add
nop
sahf
push
jg
mov
adc
cmpl
fucomip
add
mov
xor
jb
nop
mov
pop
sub
push
push
jnp
pop
jns
iret
or
outsl
or
divl
jp
mov
push
data16
into
add
js
sbb
stc
neg
in
xchg
inc
sbb
mov
test
fistpl
pusha
xor
fcomps
mov
pop
lcall
repz
and
mov
pop
bnd
fnstsw
pop
mov
push
ret
cmp
adc
mov
and
into
mov
mov
test
xor
mov
cwtl
jb
or
jno
imul
inc
add
aas
push
ret
inc
push
sar
inc
rclb
push
int
mov
dec
and
push
add
mov
add
leave
out
test
jo
lock
xlat
cmp
jle
shlb
int
popa
in
lods
inc
mov
ret
inc
arpl
ror
push
sub
push
mov
int
dec
pop
shrb
cmp
idivb
stos
cmpsb
mov
sub
imul
xor
cmp
inc
scas
pop
clc
mov
jo
mov
xchg
cld
pop
xor
loop
mov
mov
adc
sub
repz
sub
bnd
sub
std
lods
mov
jns
mov
shll
pop
cmp
fimuls
inc
out
aas
xchg
push
inc
psubsb
sbb
mov
push
loopne
ljmp
ds
jle
jmp
jae
test
mov
cmp
fdivrs
cld
inc
int
stos
mov
pop
movsb
cmc
repz
clc
daa
pop
cli
clc
sbb
insl
cmpsb
push
js
lea
popa
push
push
add
in
enter
aas
mov
scas
sahf
mov
push
xor
aaa
and
lret
pop
mov
jnp
and
repnz
mov
jo
xor
jb
mov
ret
out
jmp
push
int
mov
and
rsm
dec
cmp
mov
jo
and
aas
push
jno
std
xchg
pop
aam
and
inc
mov
outsl
js
rcr
repnz
mov
scas
inc
lea
rorl
xchg
adc
or
xor
adc
inc
xor
sti
iret
popf
in
testb
or
dec
and
insb
aam
aas
mov
pop
hlt
pop
out
cmpl
mov
lret
jnp
xchg
in
mov
jge
enter
mov
popa
adc
jno
adc
pop
jno
mov
int
loop
pushf
ret
or
in
mov
ret
pop
dec
and
jnp
js
je
test
lods
cwtl
imul
xor
enter
imul
fwait
into
out
dec
stos
daa
loopne
stos
add
sbb
xor
xor
lock
xchg
ljmp
lahf
imul
jp
mov
lods
push
lea
fistpll
loopne
or
outsl
incb
adc
cmpsl
daa
and
or
hlt
push
and
sbb
or
jge
lcall
or
fwait
sbb
mov
sbb
rol
lods
mov
or
enter
addl
and
push
mov
sub
mov
jp
and
in
xlat
inc
ljmp
or
inc
mov
cmc
jno
cs
gs
push
xor
cmp
mov
jo
xor
call
aas
sbb
cmp
adc
sbb
xor
rolb
cmpsb
cmp
das
lcall
mov
adc
pop
lods
mov
sbb
mov
daa
pusha
push
aad
in
add
loopne
push
sti
push
jae
jle
imul
cmp
rcll
aas
adc
loope
jnp
mov
mov
mov
cs
sub
xor
fcmovnb
into
loopne
into
mov
and
add
dec
lret
repnz
loop
into
and
stos
iret
test
pop
xlat
jb
pushf
mov
jmp
dec
test
mov
leave
sbb
xor
push
xchg
adc
test
push
xchg
mov
lock
lret
add
jmp
sbb
push
fs
or
mov
lods
pop
stos
ret
dec
mov
mov
xlat
sub
jnp
mov
or
jle
out
mov
pop
pop
jnp
in
add
sti
fsubl
pusha
rcrl
test
ljmp
xor
negl
mov
shlb
movsb
sub
loopne
mov
pop
clc
push
jae
lea
aas
push
sbb
mov
and
jg
aad
adc
mov
icebp
push
mov
and
xor
push
ret
lods
jne
mov
mov
sarl
mov
xchg
cmpsl
mov
jno
cmc
cmc
addr16
jmp
mov
shlb
repnz
ljmp
push
jo
inc
or
test
pop
popf
stos
mov
push
sarb
mov
mov
incb
std
rclb
xor
in
mov
and
mov
mov
mov
in
test
das
push
shrl
mov
jmp
dec
clc
sbb
inc
iret
push
call
dec
xchg
dec
add
mov
dec
inc
lods
xor
fisttpll
loopne
and
pushf
mov
xor
add
cmp
cmp
test
cmp
jmp
lahf
movsb
fildl
mov
mov
or
dec
fcomps
jnp
push
ficompl
xor
xlat
mov
jo
imul
out
loop
jo
xor
adc
out
mov
sub
cmp
sbb
adc
div
add
loope
lods
mov
dec
cmp
adc
push
add
int
test
arpl
stos
mov
sti
push
cmp
xchg
sbb
cmp
mov
or
in
sub
add
out
pop
jo
inc
adc
mov
popf
cmpsb
stos
jle
sub
jmp
fmull
push
pop
mov
rolb
aas
mov
outsl
pop
mov
fsubs
push
xor
push
xor
outsb
mov
mov
inc
mov
sahf
or
aad
mov
and
fsub
xor
pop
inc
call
push
and
cld
push
lea
popf
adc
pop
into
jo
int3
mov
aas
mov
xor
mov
cli
jmp
icebp
cmp
and
lcall
sarl
cld
adc
subl
adc
das
jle
incb
in
sahf
jo
es
or
dec
stos
cld
ss
das
in
cmp
loope
mov
adc
mov
mov
adc
aam
out
inc
push
inc
xchg
popf
dec
mov
sti
cld
jg
lret
lea
bts
outsl
mov
imul
ss
loope
lea
push
rcl
push
and
pop
test
add
insb
jno
xor
push
xor
mov
test
mov
add
pushf
loop
mov
repnz
movsb
mov
jle
or
outsl
cmp
rcr
mov
cmpsb
pop
mov
mov
dec
into
xchg
int3
xchg
xor
push
adcb
shll
cli
dec
push
loop
mov
leave
and
or
xchg
in
lods
cmc
jb
cld
dec
icebp
jle
cmp
mov
pushf
cmp
sbb
pop
movsb
push
sahf
inc
add
dec
in
and
dec
sbb
add
xchg
mov
stos
mov
adc
scas
nop
gs
and
movsl
jmp
push
fdivs
leave
sbb
loop
loope
wrmsr
arpl
pop
jmp
dec
and
loope
jbe
mov
stos
outsl
jmp
sbb
cmp
pop
mov
adc
cmpsl
pusha
jmp
mov
mov
out
loope
mov
test
xorl
and
je
xor
mov
jbe
je
lcall
mov
push
and
cmc
and
mov
test
xor
mov
cli
test
movsl
xor
cltd
pop
mov
xorb
jns
repz
pop
test
lock
dec
pop
inc
scas
shrl
cli
xorb
daa
scas
or
hlt
enter
fldt
cli
push
dec
pusha
mov
sbb
push
ja
mov
aas
leave
lods
push
lahf
pusha
push
js
xchg
xor
or
addb
and
pop
xchg
mov
xchg
icebp
push
add
sti
fwait
cmpsb
push
ds
popw
lea
dec
cs
je
jo
subb
or
adc
xor
push
enter
adc
shl
stos
mov
jo
sub
push
cmc
sbb
xor
cmp
mov
test
fwait
int
cmp
add
sahf
mov
mov
scas
xor
mov
xlat
jb
lock
lcall
add
push
ja
mov
fidivrl
jno
fidivrl
xor
stos
mov
lods
psrlq
jbe
push
fwait
outsb
mov
add
popa
xchg
mov
movb
loop
je
nop
jno
ret
xor
cli
jg
and
cmp
btc
mov
xor
xor
cli
and
mov
mov
mov
cmp
and
mov
loope
mov
mov
push
xchg
test
mov
jnp
push
ds
push
mov
ficoms
dec
inc
ds
adc
mov
pop
rorb
add
push
jp
xchg
rorl
push
mov
stc
mov
jns
out
cmp
adc
repz
cli
stos
test
dec
inc
test
lock
daa
push
cmp
insl
test
jo
cmp
icebp
imulb
cmpsl
jl
fidivrs
jg
xor
mov
pop
mov
pop
scas
loope
cmp
loope
mov
xor
idivb
or
mov
pop
cmp
cmp
jno
ret
mov
pop
jg
mov
mov
mov
xor
ret
jb
jge
idivb
jb
inc
adc
cmp
sti
repnz
js
imul
ljmp
add
in
mov
mov
cld
cmp
mov
mov
test
inc
and
pop
cmpsb
and
jb
gs
stc
cmp
adc
in
lock
or
lock
mov
xchg
jo
incw
adc
popa
fisttps
jno
adc
ds
push
xor
imul
orb
repz
popf
add
xchg
es
mov
xchg
mov
fadd
adc
aas
xor
rclb
icebp
lock
xor
daa
aam
sub
les
mov
mov
dec
stos
cmp
jo
fistpll
shrb
mov
jno
mov
sub
adc
inc
test
test
sahf
xor
push
sub
jno
iret
adc
push
movsl
xchg
cmp
inc
fimuls
jnp
aaa
xor
sbb
mov
das
pop
cmpsb
push
sub
mov
dec
mov
mov
push
dec
jbe
fadds
scas
cmp
cmc
push
les
lock
movsb
lods
pop
repnz
rolb
or
xor
mov
enter
ret
repnz
add
ljmp
xlat
pop
ja
orl
inc
lret
xor
mov
jmp
fwait
xor
aam
dec
xchg
xor
sarb
mov
cmp
sahf
int
or
cmp
mov
cmp
adc
icebp
pop
jns
sub
cmpsl
jg
jo
add
mov
push
rdmsr
jo
repnz
lret
jb
jp
add
cmp
aas
movsb
mov
dec
mov
fdivrs
repnz
cmp
cwtl
cmp
leave
sbb
dec
loopne
push
scas
pop
loop
mov
int
pop
xor
ror
leave
pop
cli
negb
jae
and
outsl
stc
out
xor
ret
stos
mov
daa
adc
dec
add
jno
outsb
arpl
cli
dec
cltd
sub
pushf
iret
or
daa
mov
cmpb
inc
lods
std
cld
in
rolb
mov
sti
pop
inc
dec
mov
arpl
jns
popf
lods
jecxz
fsubr
lock
loop
mov
sbb
pop
sub
jmp
sbb
dec
mov
push
jg
pop
sarb
adc
pop
mov
das
mov
repnz
js
imul
adc
sbb
sbb
sahf
mov
int
ss
addr16
sub
and
cli
lods
mov
cli
aas
adcl
jno
out
jnp
rorl
mov
dec
cmp
adc
sti
mov
fstl
mov
int
out
lock
loopne
aaa
lods
stos
and
in
js
ljmp
aas
out
nop
aas
cmp
mov
loope
push
sti
inc
sahf
iret
push
andb
outsl
out
loopne
mov
pop
push
out
and
jp
fldcw
mov
inc
adc
xorl
movsl
inc
rcr
loopne
addr16
cmp
xor
sbbb
adc
mov
jecxz
lds
sub
clc
imul
add
pusha
loope
das
fldl
out
stos
insl
les
jns
xor
pop
insb
xor
fiadds
pushf
add
stos
push
jae
add
sbb
inc
ficoml
pop
in
push
push
mov
xor
pusha
mov
ljmp
icebp
inc
in
xor
xchg
add
push
cmp
push
rorb
and
xor
dec
ds
push
push
dec
add
sti
outsb
in
add
mov
add
fidivs
lret
mov
pop
jge
push
test
dec
rcll
std
aas
ds
jmp
loop
in
pop
imulb
jmp
inc
lret
lret
and
jmp
lock
cmp
loopne
or
sbb
push
stos
stc
mov
cld
movsb
outsb
stos
loop
and
fisttpl
inc
xor
scas
inc
out
mov
fdecstp
in
sub
rcrb
sub
inc
cmp
ret
xchg
jns
dec
out
aas
stos
mov
mov
inc
lea
adc
in
cmp
adc
cli
shl
fldl
lret
test
mov
dec
xor
roll
test
or
push
shrl
adc
ja
push
lods
inc
ss
pop
xchg
mov
mov
aaa
cmp
sub
scas
jns
cmp
mov
mov
mov
ficoms
inc
or
mov
cltd
xor
insl
lret
pop
pop
sti
and
pop
imulb
push
add
decb
mov
shlb
cmp
fimull
mov
jp
adc
cmp
mov
add
stc
push
adc
aas
mov
ds
adc
aad
inc
mov
cmp
and
mov
cli
and
mov
cmp
xor
xor
mov
cli
std
and
cmp
cmp
and
jmp
pop
aas
loope
mov
adc
xor
in
mov
loope
pop
loope
in
xor
fstp
hlt
loop
pop
jg
jb
jne
mov
push
cli
and
ja
adc
rorb
mov
jp
mov
cld
ja
inc
jbe
fsubl
cmp
cmp
add
lods
push
repnz
popf
push
mov
push
xchg
lcall
and
jp
loop
add
add
out
std
push
xor
shlb
mov
mov
and
ds
inc
je
sbb
lds
mov
sbb
fnstsw
loopne
xlat
testb
mov
mov
inc
sub
adc
cmpsb
inc
mov
mov
jp
rcrb
pop
insl
push
xor
imull
push
cmp
sbb
outsl
mov
loope
pop
in
adc
scas
xchg
shrb
cld
or
jnp
xorb
movsl
mov
pushf
call
scas
sysret
in
test
cld
pusha
stos
mov
mov
mov
ja
ja
xchg
repnz
loop
pop
shr
mov
ds
mov
outsb
pop
mov
sbb
cwtl
andb
fmuls
fdivs
cmpsb
dec
sbb
sub
notl
mov
ret
ja
addr16
sub
shl
cmp
dec
fdivl
ret
into
mov
jecxz
jno
addl
pop
mov
jmp
and
xor
push
mov
stos
adc
shrl
test
fsin
insl
or
call
inc
jb
loopne
cmc
mov
lea
icebp
push
cmp
and
cmc
adc
mov
lcall
jmp
add
shrb
pushf
sahf
or
out
add
les
mov
xorb
shl
cltd
or
xchg
adc
fwait
adc
test
xlat
cmp
mov
jmp
lods
int3
in
repnz
outsl
pop
lcall
lcall
loop
inc
push
test
loop
push
xor
pop
and
xor
sub
mov
or
ljmp
ss
pand
jae
call
loope
test
test
pop
into
mov
lods
lods
popa
push
and
mov
ss
into
cmp
mov
mov
dec
popf
adc
repz
push
sbbl
push
adc
popa
cmp
ds
lcall
mov
sub
xchg
pop
mov
adc
popl
pop
out
sbb
mov
aad
pop
or
mov
jo
sub
popa
fisubs
and
cmp
mov
cld
jns
pusha
jp
repz
pop
mov
cmc
xchg
cmp
fmull
cmp
je
pop
data16
mov
fadd
ret
shll
fisubs
call
pop
mov
mov
ds
cmp
mov
mov
jb
test
jne
mov
icebp
add
jp
pop
insl
fidivs
mov
orb
pop
push
jg
mov
popf
and
pop
lcall
push
mov
in
adc
push
stos
ss
pop
cmp
add
and
pop
jb
std
popa
sbb
cmc
inc
std
sub
lods
pop
mov
repnz
movsl
add
adc
cmpsl
leave
pop
fldcw
dec
pop
mov
ret
mov
jbe
repz
mov
jb
imul
ds
sbb
jae
lea
xchg
sbb
out
out
lods
mov
pushf
loop
mov
or
int3
add
stc
mov
and
jo
inc
adc
sysexit
jg
or
push
icebp
std
orl
push
stc
xor
mov
mov
add
pop
aas
and
cmp
push
movsl
sar
xchg
icebp
xor
out
and
xor
lods
loope
mov
jno
sub
jg
ror
or
outsl
ss
popf
daa
mov
bound
rcr
btr
xchg
cmp
push
jo
xchg
inc
loop
inc
cs
xor
mov
scas
divb
in
add
pushf
inc
adc
adc
jae
sbb
enter
sbb
mov
hlt
sti
push
cmp
jp
mov
lea
push
loop
aam
in
sub
adc
or
addr16
jno
lret
jmp
inc
cmpsl
gs
popf
push
cmc
rcr
rorl
sti
in
in
outsb
inc
data16
jae
push
outsb
shrb
ficomps
jno
mov
xor
jae
movsl
cwtl
jb
loope
stc
inc
cwtl
sarl
icebp
lds
cmp
jle
push
loop
mov
cs
arpl
cmp
xorb
adc
push
xchg
mov
inc
repz
pop
push
movsl
pop
mov
add
cmp
pop
inc
jg
aas
cli
andb
cmc
or
push
pop
pop
jb
aad
fwait
ljmp
stc
cmp
add
popl
mov
jmp
push
mov
sub
ljmp
pop
je
cmp
fld
or
or
call
imul
mov
ss
sub
das
or
and
or
cmp
decl
or
xchg
sub
stos
test
mov
daa
sahf
jl
pusha
popf
jp
mov
movsl
mov
mov
imul
pop
daa
pop
test
insb
xor
mov
stc
loopne
outsb
xchg
mov
or
ret
jl
adc
cmp
dec
add
test
dec
lods
adc
pop
push
imul
insl
cmp
push
hlt
add
dec
sarb
jb
test
push
pop
jne
jg
mov
mov
ss
imul
mov
out
sbb
mov
fdivrp
aad
mov
test
ss
jle
shll
pop
mov
addl
cmp
negb
insl
mov
nop
nop
pop
ds
mov
jae
sti
mov
push
jecxz
test
xchg
rcr
jns
xchg
add
pop
movsb
lods
out
and
pop
movsl
and
xor
xchg
sub
mov
jp
imul
test
pusha
inc
jg,pt
icebp
mov
fidivrs
add
into
inc
mov
je
ret
in
dec
push
ret
cmp
loopne
and
adc
test
mov
leave
scas
int
sbb
sar
and
add
push
repz
xor
cmp
pop
dec
jl
cmpsb
xor
ss
scas
or
mov
xchg
iret
incb
lock
pop
adc
and
out
push
fnsetpm(287
jne
or
pminub
push
push
aam
dec
add
push
xchg
fwait
and
sbb
ret
dec
mov
push
and
test
mov
ja
movsl
pop
sbb
outsb
icebp
adc
lods
cmp
sub
add
aas
test
or
mov
push
scas
pop
jge
or
pop
push
cld
push
inc
push
addr16
sbb
xchg
test
ret
pushf
mov
fidivs
jge
stc
mov
mov
mov
mov
push
mov
test
arpl
add
stos
inc
clc
sti
test
iret
add
lea
add
xchg
and
ret
add
jb
mov
xchg
push
mov
pop
out
cld
dec
shlb
and
push
mov
jmp
test
mov
fsubrp
pop
xor
sbb
mov
xor
mov
add
call
repnz
mov
orb
insl
xor
xchg
dec
xchg
rol
push
loope
adc
mov
cwtl
sbb
test
ds
sbb
adc
jbe
test
pop
sbb
and
xchg
outsl
or
dec
jge
mov
jg
sbb
lret
pushf
incl
sbb
mov
xchg
or
jns
mov
out
lret
xor
jp
add
cs
sarl
xor
or
pusha
fstl
sub
test
aas
sbb
ja
pusha
lods
pop
cmp
mov
xchg
xchg
sti
pop
pop
mov
lods
cmp
jae
cli
nop
mov
shll
pusha
pop
add
push
xor
andb
insb
lods
inc
jb
fstps
shrb
xchg
sti
iret
or
pushf
adc
sbb
jmp
std
out
add
mov
rolb
adc
cmp
jmp
mov
icebp
into
test
xchg
lcall
sbb
push
jb
into
mov
shlb
cltd
mov
cmp
fcmovu
and
cld
jae
mov
pop
fdivrl
inc
inc
push
pop
stc
out
lds
push
jl
movsb
push
cmp
mov
hlt
shll
add
push
icebp
sbb
shlb
jp
push
int
cltd
das
pop
ds
jae
pop
jge
add
jbe
push
jb
scas
repz
fdivr
sbb
jb
mov
xchg
dec
dec
xchg
adc
inc
jo
pop
movsl
dec
pop
bound
xchg
xchg
mov
scas
mov
or
jne
ss
jb
adc
aaa
push
in
xor
pop
adc
shll
mov
jnp
imul
or
cli
cmp
sbb
repz
sbb
jbe
xor
xor
mov
negl
loop
cli
mov
je
mov
sub
rclb
icebp
sbb
stc
sub
test
daa
jle
xchg
add
xor
cltd
lods
xor
icebp
test
test
or
add
pop
in
loopne
fstpt
mov
pop
adc
xlat
orb
push
push
std
xchg
scas
es
loop
popl
mov
lods
rcrl
add
cltd
into
push
mov
jne
mov
ss
jno
and
test
out
mov
cmp
dec
jp
loop
push
pushf
iret
int
and
faddl
mov
sbb
pop
add
es
repnz
repz
scas
test
push
xchg
push
sbb
repz
push
rclb
pushf
sub
and
add
rorb
fstpt
std
outsb
or
call
jae
mov
mov
ja
push
decb
daa
loope,pn
mov
fstl
adc
arpl
aaa
cmc
inc
xor
adc
lds
mov
pusha
mov
sti
jae
addr16
xor
mov
sarl
movsb
out
push
mov
pop
repnz
loop
scas
fnstsw
ljmp
mov
test
sbb
popw
xchg
pop
pop
jmp
mov
push
fwait
pusha
or
int
je
mov
loop
mov
sbb
mov
cli
clc
divb
subb
nop
mov
mov
cs
mov
cmp
rcrb
stos
fdivrp
stc
dec
sub
mov
std
adcb
push
mov
dec
cld
add
bound
push
mov
cmc
mov
sahf
test
stc
lcall
notb
mov
sbb
push
shlb
ljmp
data16
xchg
jp
jp
enter
testb
cmp
jbe
out
add
iret
adc
mov
subb
sbb
mov
sti
out
jno
lret
rolb
mov
mov
daa
sbb
ja
lock
stc
or
mov
pop
addr16
nop
sub
lock
stos
adc
shll
mov
repnz
lret
cmp
push
jno
push
mov
mov
shrl
jle
cmpsl
cmp
adc
and
jb
push
mov
clc
test
push
scas
lods
add
sub
subb
stos
loopne
mov
shlb
sbb
add
mov
push
test
and
data16
mull
mov
sti
jb
and
cmp
clc
push
ficomps
test
xor
and
lods
inc
jle
test
ds
movsl
dec
repnz
lcall
cmp
cli
and
mov
jno
jmp
shll
jae
enter
cmp
pop
sahf
pop
movsb
repz
jle
ret
pop
jl
sub
sub
dec
dec
xchg
xchg
mov
orl
xor
movsw
pushl
xorl
mov
dec
test
je
cmpsb
jp
jae
pop
adc
cld
cs
cltd
pop
std
and
pop
pop
cmc
bound
arpl
and
xchg
mov
mov
add
mov
jg
nop
and
leave
movsb
mov
fbld
mov
ja
gs
push
adc
idiv
pop
mov
sub
adcl
or
roll
xor
lods
or
mov
test
and
inc
pop
adc
and
mov
sbb
add
cwtl
int
jle
adc
cmp
mov
divb
mov
js
inc
push
rclb
sub
pop
and
fildl
mov
cmp
insl
stos
daa
icebp
lret
popa
push
xor
lock
dec
mov
push
mov
cmp
mov
mov
neg
pop
jp
add
push
testb
sub
mov
ret
add
and
mov
mov
pop
out
xor
cmp
ret
and
mov
imul
xor
pop
cmp
xor
pusha
not
fwait
cmp
loope
xchg
adc
pop
cmp
out
adc
push
xchg
les
adc
push
mov
es
push
mov
jp
mov
adc
and
mov
mov
add
inc
jb
adc
mov
rdtsc
and
sub
adc
add
mov
mov
decl
sbb
mov
sbb
sahf
mov
adc
xor
mov
bound
and
xorb
mov
loope
mov
xchg
lods
add
mov
push
pop
sub
xor
aaa
and
cmp
sbb
aaa
jno
pop
mov
movsb
lds
cld
push
in
jb
cmp
cmp
lock
xchg
ret
fidivrs
je
popf
dec
sub
shlb
mov
das
lock
cli
lods
mov
mov
out
lock
lock
es
inc
mov
sub
mov
cmp
in
negl
cmp
xor
bound
cmp
test
ficoml
jle,pn
mov
rorb
test
fidivl
fwait
cmp
addr16
mov
mov
cmp
xor
mov
dec
cmp
mov
les
fdivrl
add
nop
mov
xor
bound
mov
ljmp
insb
bound
xchg
xlat
clc
adc
push
call
cltd
xor
int3
mov
or
movsb
dec
test
cmpsb
jg
pop
notb
lods
daa
repnz
adc
les
mov
push
dec
dec
push
mov
xor
aam
xchg
inc
xchg
cmc
jnp
pop
xchg
dec
mov
and
loopne
pushf
stc
jle
mov
sub
outsb
sbb
fimull
pop
mov
movsl
je
cmpsl
ja
mov
mov
decb
ficompl
pop
xchg
sub
adc
mov
iret
lods
cmp
insl
icebp
inc
pop
adc
dec
xchg
shlb
daa
and
jo
pop
mov
jg
ficoms
sbb
std
clc
inc
out
inc
ret
add
or
push
sub
sub
mov
jno
loopne
xlat
push
imul
jmp
and
subl
stos
stos
pop
xor
add
and
jb
popf
cmp
xor
aas
test
inc
out
outsl
mov
fucomp
push
imul
sahf
add
or
imul
xor
aas
mov
sahf
pop
jp
in
in
pop
out
das
push
mov
add
aam
push
or
repnz
sub
pop
dec
test
rcrb
fldl
pop
jge
mov
pop
push
das
xor
pop
pop
mov
add
mov
mov
not
inc
push
nop
xor
pop
jge
aad
pop
mov
mov
dec
es
mov
das
mov
adc
cld
ljmp
sti
mov
popf
fcoml
hlt
add
lds
aas
lds
rol
sub
idivl
cmp
stc
div
mov
push
cltd
repz
cmp
mov
outsl
call
rcr
xchg
arpl
mov
sahf
je
xchg
dec
std
cmp
sub
xlat
mov
rcr
faddl
jne
jl
shll
xor
cld
stos
mov
rclb
and
jmp
or
sub
mov
pushf
xor
rolb
mov
and
mov
jg
jno
mov
xchg
loop
test
or
shll
pushf
mov
mov
jb
leave
push
xor
adcb
sti
stos
add
jmp
jp
pushf
adc
cmp
cmp
and
scas
xor
lahf
leave
cmp
sub
jl
mov
daa
xchg
adc
bound
movsb
push
mov
adcb
jl
scas
mov
inc
sahf
xor
pop
jno
inc
xor
xchg
jno
mov
mov
mov
mov
inc
repnz
movsb
jecxz
push
adc
adc
inc
lahf
push
sbb
and
pushf
mul
inc
pop
inc
push
das
scas
mov
xor
rolb
es
jns
or
es
jnp
pop
shl
ljmp
mov
ret
sbb
pop
cmp
ljmp
pop
sahf
cmc
and
pop
dec
push
nop
mov
ds
xchg
or
fidivrs
sub
push
xor
sahf
xorb
and
or
mov
icebp
movsb
and
mov
shr
xchg
xchg
inc
loop
pushf
add
loop
movsb
lods
pop
outsb
jnp
scas
repnz
mov
repz
mov
popf
adc
sbb
frstor
xor
mov
jns
mov
rolb
fcoml
and
in
shlb
adc
mov
mov
pop
mov
test
outsl
stc
orb
mov
popf
hlt
add
stos
add
test
inc
jl
adc
mov
inc
add
int
loop
lock
mov
pusha
xor
leave
inc
xor
pop
fdivl
mov
fisubrs
sub
mov
mov
mov
mov
xor
xchg
aaa
pop
add
jg
idivb
cmp
mov
jle
mov
mov
aaa
sbb
mov
jns
sub
inc
dec
lea
mov
mov
jecxz
xor
sbb
xor
mov
or
adc
jl
nop
sbb
clc
outsb
jmp
inc
add
fnstsw
dec
js
xchg
stos
push
mov
mov
mov
xchg
cltd
gs
sub
fdivr
adc
sbb
into
cli
out
mov
fmuls
popf
lahf
sub
sarb
or
out
into
cmp
int3
mov
int3
mov
int3
or
mov
cmp
cli
js
mov
lock
arpl
mov
jl
inc
sti
mov
das
scas
xor
shr
add
test
adc
adc
xchg
mov
lock
pop
aam
jge
int
mov
push
orl
loop
or
xchg
subl
imul
negl
xlat
jmp
pop
movsb
cmp
mov
and
test
add
mov
jle
shr
aad
jle
movsb
mov
icebp
sti
inc
lea
lock
adc
fcmovne
sbb
dec
movsl
fbld
adc
lret
icebp
jnp
xor
jl
cmpl
punpcklbw
daa
add
mov
mov
and
lea
mov
in
testb
mov
bound
hlt
inc
stos
icebp
dec
dec
shr
test
push
addr16
enter
sti
dec
aad
cmp
push
mov
les
xchg
push
jns
sti
sarl
mov
in
mov
ljmp
ret
mov
stos
jo
add
imul
out
add
les
scas
pop
stos
stc
mov
mov
popf
or
lahf
stos
and
xor
mov
push
mov
jo
cmpsb
push
mov
inc
inc
mov
xor
dec
cmpsb
mov
adc
lods
icebp
sbb
clc
dec
mov
mov
popa
addr16
or
adc
mov
mov
jp
nop
sbb
pop
mov
fiadds
cmpsb
pop
or
push
fildll
xor
popf
jge
cli
pusha
mov
inc
dec
pop
or
mov
pop
nop
inc
mov
pusha
lcall
cmp
pop
xchg
dec
hlt
lds
sub
push
mov
mov
pusha
mov
scas
imul
push
aas
cltd
mov
das
mov
mov
sti
adc
pop
hlt
gs
pop
inc
mov
push
jbe
inc
testb
divb
imul
repnz
and
push
dec
add
mov
rorl
sti
mov
jmp
dec
push
nop
pusha
inc
mov
ds
cltd
mov
xchg
sar
push
test
xor
cmp
jbe
jge
cltd
dec
dec
cmp
test
cmp
push
pop
push
sti
out
popf
xor
jno
jb
icebp
adc
aas
and
leave
mov
jbe
pushf
lcall
fidivrs
out
imul
cmp
repz
xor
rolb
pop
cld
sbb
jae
jg
mov
lock
mov
jb
pop
rorl
repnz
jmp
fiaddl
xor
pop
icebp
dec
jmp
clc
xor
cmp
cmp
ret
insl
add
cmp
jne
inc
pushl
jb
into
shr
push
sbb
out
push
test
or
je
mov
fstpl
pushf
jl,pn
pop
dec
push
jle
and
xor
imul
or
inc
bound
sysenter
ss
jnp
jmp
adc
sub
inc
mov
fsubrp
sahf
aam
xor
loopne
insb
cmpsb
repz
xchg
pop
jle
adc
sbb
push
jmp
test
inc
repz
and
pop
mov
jae
sbb
push
pop
mov
clc
nop
das
cli
dec
pop
mov
xor
adc
push
add
xchg
ficomps
testb
jb
and
lods
xlat
das
push
fnstcw
fsubrs
cltd
fidivs
test
mov
lods
pusha
je
out
xchg
dec
adc
inc
int
aam
pop
js
push
adc
sub
jbe
out
popf
mov
loopne
hlt
hlt
cwtl
mov
sub
mov
mov
aas
lods
mov
adc
cmpsb
mov
stos
lea
mov
fidivrs
paddsb
je
push
andl
std
out
movsl
cmp
mov
add
sarb
mov
add
inc
stc
icebp
mov
adc
mov
daa
lcall
mov
data16
push
lds
inc
clc
pop
mov
cmpl
shll
imul
push
pop
sub
adc
mov
jb
sub
mov
add
jne
push
ret
icebp
in
mov
call
mov
ja
lods
adc
mov
mov
stos
jbe
sub
sahf
adc
test
adc
cmp
cwtl
mov
fiaddl
sti
jno
cld
loope
mov
rcrl
xchg
mov
mov
adc
fnstenv
add
adc
xchg
movhlps
popf
pop
stos
mov
cmp
addr16
in
mov
xlat
sub
dec
ret
lock
inc
ret
and
push
pop
and
inc
pop
or
cld
scas
ds
in
daa
fmull
pop
jb
loopne
ds
sbb
leave
xchg
and
int
and
movsb
push
repnz
lahf
das
cli
shr
dec
pusha
movsl
test
dec
ljmp
push
mov
dec
das
dec
cltd
fisttpll
loop
xor
rorb
nop
xchg
xor
xor
lret
cs
es
stc
push
rorb
imulb
jp
mov
mov
lock
dec
add
fsubrl
mov
out
and
cmp
xorb
loop
fiaddl
jae
mov
mov
sub
xchg
out
inc
repnz
mov
insl
push
mov
jmp
xchg
push
or
cmp
mov
xchg
movsb
mov
movsb
pop
push
imull
cmp
inc
dec
ret
cli
ds
mov
mov
icebp
pop
jl
fists
mov
mov
mov
add
sti
cwtl
jo
aam
mov
pop
scas
sbb
adc
and
pop
leave
fmuls
je
cmpsb
cwtl
repz
cmp
movsb
lods
push
popa
mov
xor
xchg
cld
xor
mov
ja
test
jb
push
shrb
sar
fucom
jle
sahf
pop
neg
jmp
inc
mov
movsb
insb
push
dec
fucom
add
pusha
cmc
lods
ret
nop
xlat
cmp
sub
hlt
pop
mov
shrb
test
mov
dec
xor
jno
mov
stos
push
xor
fnstenv
ljmp
insl
pop
fsubrl
inc
rcrl
stos
jnp
sti
mov
or
xchg
notl
test
adc
or
cmp
push
jne
mov
xchg
cmc
stos
jle
dec
decl
or
mov
jl
add
pushf
loop
rcr
mov
push
xchg
dec
and
push
ds
lods
lcall
adc
stc
adc
push
stos
out
sar
test
xlat
jmp
mov
andb
mov
sub
call
flds
xor
pop
std
stos
test
dec
jae
mov
sbb
or
sarb
mov
xchg
xchg
leave
xchg
push
lds
or
sub
xor
sahf
loope
mov
jp
mov
fdiv
jb
out
xchg
xor
or
xor
jnp
test
cli
outsl
pop
std
mov
loop,pn
inc
mov
pop
pop
int
xor
jno
ret
adc
test
adc
inc
lds
cmp
xor
mov
xor
mov
and
ljmp
ret
rorb
mov
jnp
adc
icebp
xchg
inc
in
ficoms
movsb
loopne
dec
shl
xor
std
ljmp
jb
loopne
dec
sub
mov
mov
in
pop
lods
cli
pushf
repnz
cmp
aaa
add
jmp
sbbl
pop
rclb
push
xor
lret
pop
mov
shl
and
jp
inc
shll
aam
pop
lods
mov
pop
mov
daa
push
xor
jle
add
das
xor
clc
fidivl
cmp
daa
out
fbstp
sub
scas
pop
movsb
cmp
test
or
jle
mov
popa
mov
loopne
push
pop
andl
sbb
add
jbe
jo
repnz
xchg
movl
xor
xor
addb
int
or
xor
loop
jmp
pushf
sahf
stos
ss
jp
inc
and
bound
ljmp
inc
in
stos
das
jno
jge
jle
int
mov
mov
mov
cltd
lock
pop
mov
jno
push
cmp
sti
mov
call
mov
roll
sbb
test
push
cltd
xor
xchg
cmc
fimuls
fcmovu
cmp
dec
push
loopne
lret
pop
cmp
dec
orl
inc
dec
inc
jno
xchg
push
xor
push
mov
xlat
icebp
cs
sarl
sub
loopne
cmp
gs
cmpl
dec
sub
push
dec
mov
sti
fwait
cld
jge
aam
out
rcl
shl
inc
jb
loope
mov
add
pop
push
test
adcb
mov
rorb
and
scas
gs
jecxz
sar
shlb
jg
shrb
xor
mov
mov
or
ret
rorl
gs
out
sub
loope
ficoml
mov
inc
das
lret
adc
cmp
shlb
mov
inc
cmp
out
sbb
aad
aas
mov
lcall
mov
or
mov
lahf
adc
idivb
cld
out
xor
scas
sbb
adc
sub
rolb
inc
scas
int
popf
loop
jo,pt
lcall
aad
cmp
cmp
outsb
inc
sbb
mov
rcrl
lods
mov
ljmp
test
sub
loopne
sub
sti
xchg
xchg
hlt
add
jo
jmp
das
ds
int
icebp
mov
fcompl
ljmp
or
xor
mov
add
repnz
pushf
pop
mov
pusha
inc
push
clc
inc
add
clc
xor
lods
sbb
mov
pop
pop
and
jb
cmpsl
sub
out
pop
cmp
and
cmp
sub
mov
push
ljmp
mov
out
loopne
xor
test
inc
cli
pushf
movsl
push
adc
sbb
and
pop
sbb
rolb
adc
xchg
mov
hlt
cmp
cs
test
bndldx
inc
cmp
in
and
stos
jb
cmp
js
sub
mov
cmp
mov
sbbl
xor
les
lock
out
popf
jb
out
cmp
ficomps
addr16
sub
mov
push
fcoms
cld
mov
mov
pop
pop
pop
add
dec
mov
lcallw
jg
cmp
cmp
int
jne
pop
pop
repz
cld
cmp
jo
jmp
inc
jb
outsl
lcall
aaa
pop
fcomi
push
and
adc
sub
add
rolb
shll
sbb
test
rorb
fnsave
cmpsb
jnp
fcmovb
cld
icebp
mov
scas
repz
xor
in
cmove
mov
sarb
dec
ds
xor
pusha
add
adc
nop
fsubl
add
mov
adc
ja
pop
mov
lods
sbb
dec
fiadds
and
mov
pop
jge
sbb
cmp
mov
repz
pop
mov
pop
rsqrtps
stc
pop
ljmp
cmp
mov
arpl
dec
mov
inc
sub
and
mov
jmp
jne
add
pop
shlb
inc
movsl
push
mov
shrb
mov
mov
lret
adc
mov
out
sahf
sar
adc
mov
jge
and
cmp
lock
imul
pop
int
xor
inc
lret
xlat
jge
fdivp
jnp
cltd
adc
adc
sbb
dec
xor
xor
out
daa
push
sbb
nop
loope
stos
jp
icebp
xor
add
add
mov
jo
add
imul
add
cmp
fildl
xchg
xchg
test
call
inc
add
mov
mov
wrmsr
cmp
ljmp
mov
icebp
inc
pushf
jns
clc
push
nop
lock
or
insb
pop
mull
jae
ror
mov
and
insb
mov
orb
mov
jmp
mov
rclb
xchg
pop
lods
push
cld
test
stos
push
dec
or
pop
movsb
jmp
aas
cmp
mov
les
add
push
inc
inc
sbb
sbb
mull
xor
jmp
mov
and
out
test
cs
or
dec
jp
movsb
mov
ds
cmp
jb
negb
movsb
out
push
int
stos
aaa
jg
and
jge
gs
mov
mov
and
push
inc
cmpsl
subl
scas
xchg
jno
in
jecxz
push
clc
mov
loop
add
cmp
add
xor
je
repnz
das
xchg
imul
test
cmp
ds
adc
lods
xor
jmp
push
and
xor
inc
test
nop
cli
pop
or
repz
mov
inc
cmp
iret
je
adc
xor
jmp
lods
cmpsl
mov
enter
push
mov
stc
lock
xchg
fisttpll
lds
or
in
push
add
mov
int
cmpsb
js
movsl
test
pop
or
sbb
and
fidivs
dec
lock
nop
cmp
sbb
and
clc
jo
and
call
and
stos
jnp
cmc
xlat
addl
fistps
loopne
cmp
add
enter
mov
or
sti
lcall
push
xor
test
roll
clc
cmc
adc
xor
sbb
adc
sub
mov
sar
mov
mov
stos
js
mov
popf
inc
jp
jg
fmulp
shll
and
repnz
mov
push
jo
push
jnp
mov
hlt
xor
jg
clc
mov
dec
cmc
pop
pushf
adc
jnp
mov
adc
popa
fidivs
pop
xchg
jae
es
sub
xor
ss
addl
lea
pop
rcr
pop
and
jmp
adc
pop
int
xchg
ljmp
enter
cs
mov
sub
aas
cli
mov
cmp
in
lcall
mov
dec
lock
clc
cltd
daa
jns
pusha
je
repz
cs
xchg
aas
pop
push
stc
cmpl
pop
add
jecxz
stos
mov
push
inc
push
cmp
sbbl
dec
stos
roll
xchg
dec
loopne
cmp
dec
repnz
scas
js
call
je
mov
int
mov
aad
loop
jmp
mov
leave
and
mov
xor
dec
icebp
scas
inc
mov
and
pusha
xor
and
mov
divl
movsb
cmp
mov
imul
xor
incl
push
data16
xorb
mov
mov
xchg
pushw
lock
repz
mov
sub
out
rcrb
sub
repz
mov
mov
jns
and
sti
ds
stos
out
repnz
out
in
mov
cmp
inc
push
jno
cmp
in
mov
mov
adcb
mov
mov
pop
jne
adc
xchg
pop
ret
adc
clc
mov
out
stc
push
das
pop
icebp
xor
fsubrl
mov
cmp
mov
inc
ret
push
cmp
xchg
in
addr16
jns
and
push
jmp
insl
sub
add
xchg
mov
mov
shrb
cmp
stos
fsts
push
cld
adc
dec
and
cltd
push
push
pop
lret
or
xor
sub
and
mov
dec
dec
adc
loope
and
icebp
sub
mov
ds
push
stos
shlb
jmp
dec
xor
movsl
pushf
ret
add
ja
and
inc
data16
hlt
jmp
fdivr
push
inc
loop
adc
mov
push
iret
mov
adc
or
jo
fiadds
fwait
or
test
movsl
jno
mov
cmpsb
dec
sbb
jno
lret
decb
cmp
dec
adc
rclb
push
lods
jns
lret
jno
adc
jmp
pop
cmp
shrb
adc
ret
cmp
jnp
cmp
aas
cmp
pause
xor
sti
bound
and
fwait
mov
leave
pop
jb
pop
jg
jmp
stos
dec
jns
inc
nop
loopne
adc
popa
lcall
xchg
cmp
dec
cmp
adc
lret
icebp
xchg
mov
mov
das
out
push
push
sar
mov
enter
lcall
fadds
adc
pop
mov
add
mov
add
dec
clc
andl
hlt
fbstp
ds
fmul
add
daa
jl,pt
test
rol
adc
pushf
xor
mov
mov
pop
jns
cld
leave
out
sub
mov
idivb
jg
rorb
pop
mov
out
add
xor
adc
es
sbb
fdivrp
pop
jb
sti
xor
sbb
sbb
push
dec
pop
shl
out
and
jbe
incl
stos
mov
out
ficoml
mov
into
les
and
stos
xor
xor
icebp
or
mov
jmp
dec
hlt
cmpsl
fiadds
pop
test
rcrb
es
adc
xchg
or
mov
and
icebp
loopne
lods
pop
mov
sarl
jno
inc
loopne
fcomi
popf
orb
in
insl
mov
xlat
movsb
stos
mov
jnp
cmp
sub
sub
dec
mov
mov
mov
push
dec
in
rcr
dec
mov
jo
and
xchg
pushf
cmp
xor
dec
mov
aam
std
aas
ja
mov
ds
xchg
test
mov
sub
loope
dec
add
aad
push
dec
mov
xor
lahf
inc
aas
daa
or
je
sbb
inc
mov
or
lea
lds
repz
scas
dec
push
mov
and
inc
daa
cmp
daa
dec
sub
pop
dec
push
add
push
xchg
pop
inc
and
setns
add
hlt
adc
outsb
rep
das
push
mov
mov
and
cltd
xchg
or
push
push
cmc
loop
cmpl
mov
xor
arpl
stos
into
jb
shlb
cmp
mov
pop
andl
repnz
mov
shl
inc
mov
mov
scas
xor
jg
cwtl
mov
loope
push
mov
in
aad
add
or
mov
fidivrs
mov
xor
cmpsb
fcmovb
push
hlt
and
jmp
xlat
cltd
jbe
dec
aas
jno
pusha
pop
popa
mov
sub
ret
mov
loopne
sahf
cmp
iret
ds
push
mov
not
mov
mov
popf
stos
pop
jle
int3
std
ficomps
xchg
enter
fwait
mov
out
icebp
cmpb
rcrb
add
pop
pop
and
and
leave
sub
xor
mov
shrb
rcr
mov
cmpb
mov
pop
jno
push
xor
xchg
push
mov
sbb
repz
shll
push
pop
cmp
jmp
pushf
popa
adc
fucom
ficomps
in
test
jbe
mov
cmp
and
add
les
ds
pop
loope
sub
mov
cld
pop
aas
sub
popf
pop
jnp
pop
cmc
jo
cmpsb
cmpsl
pop
cmpsb
dec
sbb
ret
data16
lcall
test
jp
lods
loop
mov
stos
stos
push
sbb
subl
push
mov
sub
iret
pop
mov
push
inc
dec
arpl
aas
cltd
test
pushf
popa
mov
xor
jns
das
stos
xor
push
or
mov
xor
ds
inc
mov
jae
adc
sar
xchg
push
shr
test
and
das
popa
jae
aas
xor
mov
test
and
cmpb
pop
leave
lret
stc
jnp
mov
mov
mov
icebp
xor
fidivs
fcmovb
test
jp
adc
and
mov
jmp
or
adc
arpl
adc
js
gs
test
test
rorb
xor
lods
fwait
ja
mov
push
int
iret
mov
ret
mov
sbbb
ljmp
and
sub
mov
or
push
int
in
push
or
mov
push
aam
lahf
cmpb
test
sub
adc
adc
jmp
or
scas
pop
fmull
jge
enter
stos
push
add
lods
clc
push
lock
andl
inc
pop
mov
pop
sarl
in
xchg
jp
mov
fdivrp
aas
cmp
out
xor
fst
fsubrs
and
push
add
aas
cmp
outsl
push
hlt
xor
ficoml
cli
adc
sub
out
enter
adcl
loopne
mov
xlat
pop
inc
xchg
fisttpl
shrb
and
xor
dec
lds
push
sbb
sbb
insl
xor
sub
mov
shrb
repz
cmpsl
mov
mov
hlt
adc
pop
jmp
mov
nop
cli
fnstcw
xor
ss
int
cmp
pop
push
fldl2t
aas
pop
ljmp
pop
mov
jb
pop
and
das
push
shll
pusha
cmpl
push
mov
fiadds
ss
in
into
and
out
cli
xor
gs
in
cmp
les
and
fwait
pop
loopne
movsl
in
mov
mov
popf
sub
sbb
xor
jl
mov
std
loopne
loopne
cld
jecxz
mov
dec
pop
test
sbb
addr16
inc
stos
repnz
sti
arpl
adc
and
mov
cld
lods
push
insl
in
mov
cli
push
push
mov
xchg
xchg
pushf
in
icebp
or
fnstcw
mov
mov
sub
inc
mov
test
cmc
mov
lods
jg
and
push
dec
sbb
or
dec
stos
lret
mov
cmp
add
mov
rcrb
aam
mov
sbb
mov
add
outsl
dec
sub
jns
push
dec
sub
pop
jmp
cmp
jno
loopne
leave
pop
data16
xchg
loopne
xchg
jb
or
pusha
fildl
out
frstor
xchg
pusha
fcomi
push
imul
xchg
fisubrl
scas
xor
mov
mov
mov
cmp
in
ret
test
in
mov
out
cltd
cmpsb
inc
jmp
mov
pop
mov
sti
popf
out
add
inc
jg
push
sbb
in
sub
and
mov
add
aas
cmpsb
insl
pop
mov
mov
jle
mov
in
inc
jge
dec
xchg
cmp
loopne
adc
in
test
lahf
mov
xchg
jmp
outsb
cmp
dec
cmpb
in
outsb
addr16
add
mov
sub
lock
cmp
push
jno
add
xor
into
aas
inc
ds
lock
mov
push
pop
fdivrs
ds
aad
sbb
dec
insb
push
adc
xor
or
mov
mov
lcall
push
xlat
xchg
push
jmp
adc
cmpsb
pop
aam
mov
call
mov
lcall
xchg
jl
cmp
jle
loope
mov
inc
mov
sbb
mov
dec
out
adc
inc
sahf
adc
rcr
xor
pusha
jne
mov
mov
add
mov
inc
pushf
frstor
notl
pop
jg
dec
bound
inc
nop
add
mov
repnz
push
xchg
sahf
movsl
mov
stc
mov
pop
clc
out
cmp
pushf
out
js
mov
pcmpeqd
fcomps
cmp
adc
jmp
movsl
pusha
imul
cmp
test
push
add
xor
pop
lock
mov
inc
and
shll
xor
xor
cmpsl
jne
xlat
xor
xchg
repnz
xchg
xlat
lds
push
pop
adc
lock
xchg
lret
stos
jge
scas
and
xchg
mov
cli
add
inc
mov
movsb
cmp
adc
pop
mov
das
xor
jmp
adc
xor
bnd
cmp
lret
push
ds
fidivs
jns
push
jae
sub
mov
mov
xlat
out
arpl
adc
xor
inc
imul
inc
fnsave
push
mov
xchg
into
je
ljmp
movsb
mov
xor
dec
add
in
add
adc
jecxz
adc
lods
push
scas
icebp
and
outsl
pusha
jae
call
push
icebp
mov
and
gs
dec
jb
xchg
jae
shl
call
bound
mov
cltd
add
pop
lret
mov
inc
pusha
mov
mov
sub
orb
lahf
xchg
rolb
dec
movsl
push
pop
clc
cltd
mov
mov
inc
popf
xor
test
jno
in
icebp
inc
std
cli
and
cmp
into
mov
cvtps2pi
imul
xchg
mov
pop
jmp
xchg
cmc
imull
ljmp
and
enter
and
out
insb
cltd
xchg
pop
and
cltd
rcrl
mov
leave
mov
mov
adc
sub
mov
nop
fdivs
mov
push
cld
daa
movsb
popf
dec
out
sti
ja
jo
cmpl
pop
cmc
nop
cli
ficompl
xor
push
push
cmpsb
sub
int
mov
mov
repz
into
add
mov
popf
lcall
and
cmpsb
adc
fnstsw
mov
mov
jle
std
jae
movsb
and
ss
and
fldenv
sahf
push
out
mov
or
sahf
jl
mov
leave
sub
test
aas
test
cs
push
mov
call
xchg
sbb
sti
push
dec
push
xchg
pop
sub
push
mov
cmp
adc
lock
in
stc
and
mov
repz
add
scas
test
aaa
push
clc
push
push
cmpsl
mov
xor
add
cmpsl
aad
inc
fdiv
aad
mov
lahf
sbb
les
jl
out
aad
sbb
pop
mov
xor
or
and
adc
mov
div
xchg
sub
adc
movsb
movsl
popf
fildl
xchg
cmp
push
loop
test
xor
sarb
adc
ret
jle
jnp,pn
enter
jae
or
mov
push
push
ds
lret
jge
insl
popf
push
cmp
arpl
push
repnz
rcrl
ss
mov
dec
cmp
adc
rolb
call
es
xor
xor
inc
in
test
dec
out
jae
push
pop
stos
lahf
call
pop
loopne
andb
xchg
and
adc
js
cmp
pop
cwtl
adc
call
pop
mov
repz
daa
pushf
xchg
aaa
sub
aam
inc
push
shlb
outsb
mov
insb
jbe
pop
fiaddl
popf
ss
and
bndstx
dec
sub
dec
ret
pop
mov
insl
int
mov
cli
cmp
pslld
mov
dec
mov
xor
pop
int
xor
pushf
movsl
ret
in
and
dec
xchg
jl
inc
cmpxchg
scas
test
and
in
lahf
jnp
gs
addl
es
sti
mov
xchg
stos
pop
and
into
jno
dec
adc
sbb
lret
sti
jle
mov
imul
nop
pushf
adc
loope
xchg
add
mov
adc
sbb
mov
mov
lock
ja
sti
cmp
xor
mov
test
xor
cmp
rcrl
mov
inc
mov
std
imul
fcoml
dec
bound
sub
ss
mov
adc
jb
lock
mov
movl
leave
push
sbb
lods
lret
adc
sbb
mov
cli
jbe
aas
icebp
dec
mov
enter
imul
outsb
or
mov
loopne
ds
daa
and
lahf
sti
mov
mov
scas
sub
adc
aam
mov
lock
adc
das
stos
hlt
adc
std
push
pusha
test
adc
sbb
or
sti
push
inc
pushf
sarl
lock
sbb
pushf
jle
xchg
mov
jo
fnstsw
das
mov
loope
xchg
jg
lea
imul
jp
shlb
and
out
jmp
inc
iret
lahf
shr
mov
push
rcl
sbb
jns
cld
fcomip
in
and
adc
lods
cmp
fs
notb
xorl
out
andb
fsubr
xor
iret
mov
inc
shl
jns
ror
movsl
leave
leave
dec
xlat
lods
add
repnz
shll
je
fldcw
jnp
mov
mov
mov
mov
add
mov
lea
lock
xor
call
ret
mov
arpl
enter
jb
xor
repnz
and
movsl
cmp
aas
and
test
mov
and
jbe
inc
movsb
mov
in
loop
fcompl
iret
nop
inc
lock
push
mov
stos
fisttpl
cmp
cwtl
xchg
rep
aad
cli
mov
arpl
pop
push
add
inc
xor
or
mov
or
shrl
test
mov
xor
fcoml
mov
inc
jle
push
xor
loopne
inc
inc
mov
popf
int
adc
insl
sahf
adc
push
addl
fisubrl
mov
pop
adc
jmp
xchg
add
call
lock
call
movsb
rorl
imul
stos
push
pop
push
repz
loop
cmp
mov
or
cs
js
out
mov
pop
aam
push
and
std
and
stos
cmc
push
adc
xlat
js
mov
jg
pushf
sub
ss
or
cld
bound
xor
or
cmp
out
popa
les
xor
outsl
cmp
inc
lret
arpl
xor
add
pop
nop
into
mov
and
xchg
xorl
jae
daa
out
mov
lea
daa
sbb
xrelease
sub
push
jne
jg
call
std
add
daa
rolb
jne
stc
xor
ror
inc
fdivr
out
cltd
call
pop
icebp
fisttps
mov
imul
ja
xor
arpl
mov
rorl
in
cmp
mov
int
cmpsb
daa
fwait
sarb
cmp
dec
xlat
adc
popf
repnz
movsb
sub
shl
or
sub
das
inc
repnz
mov
sub
fwait
sbb
add
out
mov
jle
shl
cmc
sub
sbb
pop
or
xor
sbb
or
pop
or
cli
xchg
sti
inc
in
pop
sbb
ret
sti
stos
in
movaps
mov
sbbl
scas
jb
or
das
xor
jnp
out
pop
cmp
dec
pop
pop
lock
repnz
inc
shrl
xchg
jbe
in
imul
mov
hlt
ror
pop
out
sbb
mov
pop
dec
nop
movsb
fwait
mov
sbb
test
jbe
ja
js
addr16
rolb
les
adc
inc
roll
cmpsb
fstps
in
ret
sbb
adc
and
stos
fcmovb
push
mull
movsb
popf
xor
pop
mov
gs
pop
push
ja
dec
iret
mov
jbe
sahf
dec
hlt
adc
and
add
sbb
sbbb
jg
or
push
mov
mov
ss
add
aas
pop
jnp
imul
push
int3
sbb
pusha
and
jno
in
cmp
adc
inc
and
or
jnp
dec
arpl
scas
je
adc
adc
idivl
or
inc
rcll
ds
pop
xchg
cld
aas
pop
lret
pop
aaa
jmp
dec
pop
cwtl
jae
lcall
mov
or
lret
xor
in
fldt
lahf
xchg
outsl
arpl
sbb
hlt
mov
sub
imul
pop
jno
fidivrl
xorb
fnsave
repnz
add
push
push
mov
push
xor
inc
inc
pop
xor
add
jecxz
cwtl
cmp
cmpsb
sti
pop
mov
pop
ds
xor
mov
arpl
fiaddl
xchg
mov
jmp
xor
pop
and
dec
scas
mov
adc
js
lret
fisttpll
js
je
pop
pop
dec
jno
or
fildl
adc
or
dec
bound
dec
imul
movsb
adc
addr16
repnz
mov
and
pop
bound
mov
inc
sub
xor
insb
enter
xorb
stc
and
mov
inc
and
int
xor
in
xchg
and
push
mov
insb
dec
mov
ds
pop
adcl
fmuls
xchg
pop
add
and
inc
and
in
mov
mov
pop
and
sub
aad
imul
fucomip
repnz
cmc
push
sub
ret
je
pop
repz
add
loope
jmp
or
sbb
add
sub
outsl
mov
lret
push
loopne
arpl
xor
add
pop
popf
jp
fisttpll
adc
lods
jp
pop
ret
cmovbe
pop
dec
cmp
push
loop
push
cld
xchg
ljmp
loopne
mov
jmp
into
hlt
sub
call
inc
std
dec
hlt
mov
lds
mov
mov
mov
pop
sub
pushf
or
sahf
pop
mov
adc
lcall
lods
out
mov
add
mov
sbb
inc
inc
cmp
mov
fwait
sahf
cmpsb
mull
and
mov
or
xchg
push
into
fidivs
and
lods
or
xchg
jge
xchg
out
dec
cmp
and
sub
pushl
loope
aaa
stc
fisttpll
mov
push
in
mov
push
add
loope
sub
and
out
leave
push
out
int
mov
sub
test
pop
icebp
lret
icebp
stos
push
or
fdivs
fdivl
cmp
out
repnz
incl
xor
out
cmc
inc
and
dec
xlat
cmp
out
pop
mov
int
xchg
push
push
jg
pause
mov
rolb
and
mov
repnz
or
and
push
jmp
jbe
jmp
lahf
and
jecxz
lods
sar
lock
in
jmp
addr16
jl
xor
push
stos
rclb
popa
xchg
daa
push
scas
sbb
mov
popf
dec
adc
aas
pop
push
or
push
xor
lcall
into
adc
fcmovnu
cmp
outsb
jo
push
or
jbe
cmpsb
mov
adc
jbe
cli
leave
mov
push
mov
sub
or
mov
mov
test
ljmp
mov
dec
fsubl
sahf
roll
xor
mov
jmp
mov
jle,pn
jp
aam
mov
sbb
fisubl
xor
test
jge
cmp
jle
dec
jl
ljmp
popf
mov
and
mov
pop
sub
fnstsw
adc
sub
push
jp
addr16
mov
outsl
cmp
das
xor
mov
jbe
mov
push
call
in
out
xchg
cli
add
inc
sub
cld
cmp
mov
js
add
pop
jle
das
cs
mov
jmp
ljmp
push
cmp
inc
and
shl
cmp
xor
pop
sahf
inc
or
add
cmp
stos
cs
jbe
jae
outsl
hlt
or
add
loop
aaa
hlt
out
xor
loop
add
fmuls
cmp
fnstsw
push
repnz
in
mov
sub
pop
mov
adc
inc
mov
or
fnsave
aas
jae
adc
mov
ret
shlb
jl
xchg
or
push
pusha
sub
and
adc
mov
cmp
roll
fcomps
sti
incl
jg
aad
cld
and
mov
push
xchg
sub
xor
fstl
dec
xchg
mov
mov
push
and
fisubl
ret
pop
sub
lahf
fstl
in
bound
xor
mov
in
mov
mov
cmp
arpl
shlb
jb
loop
mov
xchg
jecxz
xor
mov
jmp
jle
mov
and
test
fldl
jl
push
push
icebp
mov
xor
pusha
scas
mov
lahf
sub
add
shll
lods
mov
push
out
cmp
paddusb
pop
dec
out
dec
aaa
adc
mov
daa
push
adc
sbb
xchg
mov
test
lds
int
xor
and
mov
rol
int
inc
sbb
pop
adc
jnp
sbb
es
or
mov
cwtl
stos
ficoms
and
pop
and
cmp
jmp
push
loop
hlt
inc
loopne
aaa
or
nop
fs
pusha
mov
ljmp
lock
cmp
and
gs
push
mov
mov
cmp
fsubrl
fldt
cmp
add
mov
imul
stc
jb
aas
mov
icebp
add
mov
shll
sub
pop
cwtl
adc
inc
les
sti
xchg
sarl
repz
loopne
jecxz
shlb
pop
daa
stc
fsubrp
rcrl
dec
loopne
dec
adc
or
dec
sub
call
mov
out
lock
je
pop
pushf
arpl
rcl
std
xor
cli
push
pushf
mov
subb
xor
imul
ret
popa
rep
mov
cld
mov
test
mov
xor
sbb
push
mov
jbe
scas
add
ss
pop
add
pop
outsl
mov
jnp
sahf
fs
xor
cs
mov
xchg
jae
nop
das
jmp
adc
add
cwtl
or
mov
enter
jb
xor
loope
mov
movsl
je
shlb
mov
in
dec
pop
jp
outsb
icebp
test
push
push
mov
sbb
add
and
inc
loopne
adc
je
fxch
mov
notl
adc
outsl
hlt
aad
popf
and
cmp
mov
ds
jle
shrb
popf
or
pop
mov
cmp
push
sbb
mov
or
adcl
pop
push
icebp
pop
ds
mov
push
mov
mov
dec
or
int
out
xor
jle
lea
xorb
icebp
mov
leave
je
pop
adc
xchg
pop
inc
jge
mov
mov
mov
movsb
dec
push
lcall
cltd
cmp
xor
movsl
sbb
cmp
sub
std
push
bound
pop
lret
dec
jo
cmp
xchg
push
fiadds
inc
jmp
mov
cmp
stos
jmp
aas
dec
mov
lcall
cmpl
test
inc
push
lea
xchg
imul
jge
sti
jl
pop
aas
movsb
test
sarb
mov
scas
stos
movsb
xor
test
push
sub
stos
repnz
lret
inc
ret
mov
add
sti
jmp
mov
addr16
mov
push
inc
ja
nop
sarl
out
loope
sub
jo
mov
mov
aas
test
movsl
adc
test
aaa
fists
out
cltd
fiaddl
mov
push
ja
in
xorb
and
inc
popf
and
jne
js
outsb
xor
out
mov
push
adcb
mov
adc
xor
aaa
int
insb
push
mov
jbe
push
jle
mov
mov
loopne
mov
adc
in
lret
xchg
outsb
sub
pop
mulb
and
loop
adc
lea
adc
stos
push
xor
repnz
lcall
daa
jne
or
es
xor
and
out
cltd
lcall
lock
xchg
sub
adc
std
jge
and
insl
insb
icebp
cld
shrb
or
adc
push
sub
pop
jno
sub
xor
mov
mov
out
mov
add
mov
xor
adc
adc
pop
sub
cmp
jno
sbb
nop
sti
mov
pop
add
inc
scas
or
xchg
in
push
sub
mov
or
inc
shlb
imul
loopne
test
adc
aaa
fbstp
das
sub
mov
mov
adc
xor
sbb
repnz
cmpsl
push
cli
cmp
cmc
movb
pop
pop
xchg
cmp
in
or
cmp
stc
repnz
jbe
mov
loope
xor
mov
inc
test
pop
fnstsw
outsl
fwait
push
loope
popf
mov
es
rcl
decl
repnz
jmp
pushf
shlb
or
pop
repz
into
loop
aad
rcrb
xor
int3
shrb
or
jns
cmp
mov
repz
mov
stos
lods
mull
outsl
std
jno
fstl
mov
xchg
pop
ret
fdivrl
adc
notb
out
fdivrp
dec
loope
ja
jmp
cmp
subl
adc
mov
xor
imul
and
jb
outsl
mov
lcall
loop
jg
xchg
test
ss
jno
cmp
mov
sbb
call
bound
mov
adc
repnz
add
xchg
and
jno
xchg
pop
callw
jmp
out
fstl
adc
inc
or
hlt
jp
imul
pop
sub
mov
mov
cmp
xor
test
lahf
fs
inc
adc
mov
inc
or
inc
lds
mov
test
outsl
mov
pop
fcoms
stc
rcr
je
lcall
pop
jg
lods
mov
add
int3
outsl
mov
jns
adc
scas
fwait
cli
and
jnp
add
int
fmull
sbb
push
pushf
loopne
ljmp
mov
icebp
pop
mov
subb
add
push
adc
dec
mov
mov
stos
sti
jb
sti
imul
repz
imul
mov
ljmp
mov
mov
ds
scas
adc
pop
das
cmp
mov
pop
mov
ja
sti
and
in
mov
aad
and
fldenv
adc
cwtl
fwait
mov
jge
or
adc
daa
lret
das
in
mov
loop
and
jmp
arpl
pushf
stos
insb
mov
fnstsw
in
loope
stos
into
cltd
rorl
loope
inc
sbb
jmp
lock
test
loop
mov
mov
sti
loop
inc
xchg
jmp
scas
jl
repz
push
sbb
mov
adc
mov
cmc
inc
mov
inc
jbe
pop
stos
out
shlb
inc
dec
jb
inc
or
lahf
xorb
lcall
lds
nop
sbb
sub
xchg
xchg
push
or
das
sahf
aaa
xchg
sbb
mov
push
mov
push
lods
ret
and
xchg
jb
pop
sub
lcall
xchg
mov
mov
push
fiadds
push
push
pop
mov
mov
scas
add
cmp
cld
or
and
ret
jbe
mov
push
mov
cmp
fsubl
aas
fsts
orb
clc
pop
push
xchg
aas
push
rclb
mov
andb
adc
cmc
daa
cmc
adcb
pushf
pop
push
mov
testb
cli
mov
and
cmpsb
mov
pushf
int
ss
jp
xor
dec
jae,pt
leave
out
xchg
test
and
lret
and
mov
int
jae
or
cmc
jae
or
loop
inc
add
mov
dec
adc
aas
sahf
xor
sub
xor
mov
leave
xor
movsl
out
mov
pop
dec
pusha
mov
loopne
out
lds
ret
rcr
jae
add
adc
push
aam
movsl
sahf
xchg
mulb
lahf
test
addr16
outsb
mov
add
sub
clc
and
repnz
xor
mov
clc
inc
push
lret
out
dec
call
dec
loopne
arpl
pop
jle
push
sbb
in
adcl
addb
loopne
sti
lcall
push
das
mov
jne
xorl
sbb
daa
clc
sbb
jecxz
scas
dec
mov
jne
pop
adc
adc
push
cmp
repz
jae
adc
inc
sbb
xor
push
in
pop
adc
mov
jns
push
mov
xor
outsb
mov
inc
cmp
xchg
cltd
xchg
fisttpll
sti
xor
push
addb
repz
dec
ret
shll
cmpsb
mov
push
sub
clc
out
cmp
loope
sub
mov
pop
mov
gs
repz
shll
jae
push
loop
adc
push
int
bound
dec
or
fisttps
cmp
xor
add
cmp
mov
mov
shrl
shll
dec
stos
pop
inc
inc
sti
pop
jge
xchg
cmp
pop
cmp
aad
or
cli
outsl
in
jno
push
cltd
lea
jns
notb
xor
movsb
jne
dec
dec
sbb
cmp
jmp
adc
gs
mov
mov
aad
and
cmp
xchg
mov
jns
fiadds
mov
loop
mov
shll
std
adc
mov
cmp
mov
mov
cs
pusha
jmp
xchg
das
sub
outsb
sbb
mov
psrld
adc
decl
in
push
dec
cld
in
nop
pop
ds
scas
scas
test
mov
and
inc
cmpb
fsubr
fildll
out
fdivrs
xor
in
xor
lock
dec
jae
sub
movb
lret
sub
mov
adc
mov
cmp
in
push
xchg
and
nop
ret
fidivl
insl
ss
jo
arpl
xor
inc
mov
adc
mov
jae
loopne
pushf
mov
sti
pop
xorb
cmp
psrld
cld
and
mov
loope
inc
add
jge
xor
pushf
fdivrs
lcall
jae
xor
mov
and
cmp
fidivrl
add
mov
mov
mov
mov
clc
mov
test
pushf
pusha
mov
mov
mov
loop
jg
pop
dec
pop
shlb
clc
and
inc
out
inc
shll
mov
daa
jp
jb
push
cmpsb
and
and
mov
clc
cld
ds
std
or
mov
stos
ljmp
and
xlat
mov
fs
dec
sbb
sub
jae
loopne
jg
or
xchg
hlt
cli
and
cmp
and
xor
mov
daa
out
add
mov
addb
inc
in
mov
fbstp
adc
push
jl
or
fucomp
scas
dec
xchg
xor
push
jg
imul
mov
dec
cmp
stos
and
jp
cs
jae
sub
xchg
mov
aaa
mov
jbe
int
pop
inc
cmp
mov
out
pop
dec
pusha
mov
and
mov
enter
jb
scas
in
orb
and
pushf
mov
mov
cmp
push
xorb
push
and
cmp
aam
testb
out
mov
loopne
mov
insl
push
das
sub
je
call
es
inc
lret
push
ljmp
lods
cmp
sub
sti
push
outsl
jb
inc
lods
je
in
mov
jnp
loopne
in
mov
sub
and
cmpsl
roll
enter
and
mov
movsb
adc
mov
adc
mov
lock
fnstsw
xor
ss
repnz
pop
loope
shrl
push
orb
ficoms
loope
pop
dec
test
loop
xchg
push
adc
pusha
cld
hlt
or
xor
pop
adc
ja
out
jnp
cmpsl
xor
fcoms
dec
jnp
jno
jbe
pop
mov
mov
lcall
dec
cmc
cltd
repnz
pop
xchg
outsl
sub
mov
add
pop
mov
mov
aas
sbb
mov
cmp
stos
ja
rcr
out
xor
inc
xor
mov
xchg
stos
mov
add
sub
scas
das
cmp
out
lahf
fisubl
shl
repz
xchg
push
push
stos
jp
repz
jmp
mov
adc
jno
scas
pop
shlb
stos
add
push
cmp
jnp
scas
inc
adc
xor
jns
cmp
sub
pop
jmp
loope
xor
pop
or
mov
call
flds
aaa
mov
lods
and
repnz
enter
icebp
adc
push
je
or
xchg
insb
outsl
mov
inc
rcr
int
jne
outsl
mov
ss
pop
leave
in
push
aam
mov
push
test
cmc
movsb
lret
adc
mov
inc
repnz
pop
inc
cmp
mov
ficompl
cmp
and
mov
and
andl
push
shrb
outsb
sub
cli
mov
adc
punpckldq
out
shlb
cli
inc
adc
pusha
ficoml
cs
ret
mov
mov
and
fimull
mov
push
xchg
pusha
mov
lret
jle
lods
cltd
imul
gs
push
movsb
pop
icebp
bound
adc
or
add
xchg
mov
add
stos
mov
mov
mov
cmp
mov
les
sub
push
test
aas
cmpb
adc
not
sti
jno
cmp
stos
sarl
mov
mov
mov
push
push
pushf
adc
xchg
imul
sbb
leave
mov
ror
jge
add
push
repz
and
outsb
pushf
fcomip
push
loope
das
subb
dec
scas
aad
scas
imul
int
jg
inc
pop
fidivs
negb
jbe
mov
adc
addr16
rcl
push
pushl
lds
pop
mov
andl
or
sbb
mov
insl
xchg
popa
or
jl
mov
and
mov
lahf
shll
pop
sub
dec
repnz
fdivrl
rolb
outsb
dec
mov
insl
sbb
rolb
ja
mov
sub
and
rorl
pushf
and
test
int3
push
mov
lods
loop
sub
inc
sbb
ljmp
mov
xor
jmp
sbb
negb
cmp
out
or
xchg
push
inc
sbb
or
adcb
in
adc
xor
rorl
mov
fisttpll
aam
add
sub
xor
icebp
push
stos
mov
icebp
sbbl
xor
and
xor
inc
movsb
popf
outsb
fdivrs
ljmp
shl
jle
jl
test
mov
outsb
mov
and
xchg
cli
movsb
mov
xor
negl
rorb
pop
stos
sbb
ja
mov
push
push
in
mov
xorb
and
mull
xor
mov
fwait
stos
movsb
popa
inc
je
xchg
xor
aad
rolb
out
scas
or
xlat
sub
mov
or
xor
test
shll
jmp
adc
lds
out
jle
push
aas
sub
mov
xchg
mov
or
dec
call
pop
cmp
leave
xchg
add
ja
ret
out
hlt
lret
into
cmp
out
xchg
mov
lahf
daa
mov
test
adc
repnz
cmpl
sub
mov
adc
xchg
xchg
mov
jge
dec
movsb
xchg
mull
mov
jns
cmp
test
cmp
mov
cld
cmp
lret
mov
mov
xchg
loop
inc
enter
sub
shlb
add
movsb
and
mov
cmc
addl
sahf
mov
sbbb
out
mov
sahf
mov
dec
mov
xchg
icebp
loop
xor
and
shll
sbb
rclb
jnp
sbb
cs
in
movsb
jl
jno
out
jo
lret
sub
lea
mov
jne
dec
test
pop
cmp
loopne
mov
cltd
int3
stc
popa
ds
cwtl
pop
add
xor
fistpl
mov
pop
pop
cltd
sbb
aaa
jmp
xchg
cmp
cmp
mov
mov
mov
movsb
das
xchg
insl
call
cmp
movsb
inc
aad
mov
push
ja
mov
nop
movsb
sbb
aaa
test
clc
pop
pop
dec
mov
cli
mov
ret
mov
sahf
dec
xchg
sub
repnz
xor
les
or
jg
pop
mov
in
scas
movsb
addr16
mov
or
test
loop
ficompl
adc
in
inc
cwtl
or
jo
mov
cmp
adc
sub
add
movsl
pop
popf
bound
mov
call
cli
jmp
adc
mov
mov
lcall
out
inc
sbb
xchg
in
mov
icebp
in
push
inc
dec
mov
jo
out
lock
push
icebp
mov
push
jbe
mov
sub
push
dec
shrb
fistl
adc
in
push
jmp
xor
repz
je
ljmp
leave
movsb
pop
pushf
dec
les
aam
lret
jle
jmp
sub
mov
xor
pop
sarb
add
adc
cmp
push
and
ret
lret
mov
adc
sub
mov
cmpsl
and
cmc
inc
jb
push
mov
aas
add
and
jle
aas
sbbb
mov
and
jbe
aam
mov
pop
and
test
add
adc
pop
and
shlb
mov
and
and
jmp
testl
mov
mov
repnz
test
lods
test
adc
lock
in
and
jbe
outsb
movsl
pop
jbe
mov
in
mov
mov
sahf
repnz
imul
or
push
push
ss
lcall
and
cmp
in
adc
icebp
sarb
arpl
mov
cwtl
imul
add
fstl
inc
or
mov
xor
push
out
fiadds
cmp
mov
jmp
cltd
aas
pop
mov
jnp
out
sti
add
insb
fdivs
in
push
cmc
out
xor
xchg
mov
jmp
gs
pop
adc
and
mov
fildll
cs
fisttpl
sub
jb
pop
adc
rorl
cli
mov
add
dec
xor
sub
jb
mov
sub
outsl
cmp
push
cmpsl
lret
pop
inc
cmp
stos
mov
aaa
and
les
inc
inc
cs
cwtl
sti
mov
push
cmp
insl
roll
scas
or
bound
mov
dec
cmp
push
ss
adcl
push
clc
mov
cmp
sbb
scas
shlb
or
cmp
mov
ljmp
aas
jno
lods
cmp
ljmp
jb
or
jmp
cvttps2pi
sub
dec
fsts
jns
out
mov
mov
lcall
and
fisubrl
jle
pop
adc
jb
cmp
movsb
jl
out
cmp
or
push
dec
mov
push
and
adc
mov
or
push
xchg
cli
mov
bnd
icebp
push
adc
mov
sahf
jmp
sbb
cs
jmp
test
xchg
out
sub
lods
sub
cld
fisubl
xchg
pop
cli
cmp
shll
xchg
popa
rorb
xchg
loop
loop
cmp
daa
test
jb
ret
xorb
orl
popf
es
push
mov
xor
outsl
icebp
push
dec
mov
mov
aas
pop
pusha
int
out
loopne
outsl
aaa
sysenter
pushf
gs
or
dec
icebp
push
das
mov
pop
loop
pop
and
dec
mov
mov
shrl
push
pusha
inc
adc
roll
cli
mov
mov
ret
outsb
leave
ret
pop
orb
enter
jnp
int
js
sbbl
adc
mov
jno
ret
enter
dec
movsl
loopne
arpl
dec
mov
hlt
jl
jo
inc
je
cmp
adc
cli
mov
mov
push
cmp
jo,pt
xor
sub
pop
inc
int3
pop
mov
add
add
dec
adc
icebp
scas
loopne
cmp
jae
outsb
and
mov
cwtl
cmp
mov
iret
out
loop
xorl
adcb
adc
mov
jb
push
sbb
cmp
mov
imul
pusha
add
add
jb
insl
rolb
cmp
ret
mov
jle
and
out
mov
and
pop
add
mov
orl
cli
xor
inc
imul
cmc
xchg
daa
mov
dec
dec
adc
xor
dec
rorl
mov
cmp
dec
jge
dec
lods
inc
aad
loopne
pop
push
cmp
pop
inc
push
mov
ret
test
sti
into
mov
repnz
test
and
rorb
dec
mov
jle
int
fistpl
xchg
xor
mov
aas
add
adc
repz
daa
out
mov
xchg
insl
xchg
shlb
lds
lock
pop
lock
ds
loope
push
jo
pop
jg
lock
aas
lea
xchg
cmpl
subl
es
neg
lret
jge
push
pop
mov
ljmp
popf
fstl
jae
sub
int3
xor
lods
test
jae
xchg
inc
and
xor
leave
mov
repnz
push
adc
or
jle
pop
mov
cmp
aas
add
adc
idivl
jp
aam
scas
shll
mov
sub
cmp
leave
lea
cmp
aaa
jl
test
jmp
ds
sbb
ljmp
push
xchg
mov
add
loopne
imul
mov
sub
dec
ds
movsw
nop
mov
fs
push
mov
js
xchg
cmp
test
fwait
shll
sbb
scas
daa
ja
movsb
sbb
out
imul
std
jecxz
shrb
add
sti
aam
clc
sbb
iret
push
daa
loopne
mov
mov
or
iret
test
xchg
jle
xchg
sbb
or
push
leave
aas
cltd
xchg
shll
xchg
shlb
ret
xchg
rorl
fsts
pop
push
adc
adc
mov
mov
push
cltd
sti
jmp
sub
inc
je
xchg
xor
movsl
sub
xchg
add
divb
das
fnsave
mov
add
and
mov
inc
jecxz
test
sbb
les
xor
loopne
mov
shl
lds
daa
lcall
xor
cmpb
jb
sbbl
push
loop
mov
add
and
jnp
test
inc
inc
sub
inc
add
aas
xorl
xchg
xchg
imul
lret
add
or
roll
orb
mov
cwtl
ret
pop
dec
dec
outsb
mov
push
stos
jne
adc
xor
add
js
test
cmpb
idivl
inc
lahf
mov
and
push
lds
rcrb
shl
push
xchg
rcll
jbe
imul
scas
mov
jge
push
call
jb
sahf
pop
push
mov
aas
jle
repz
les
outsb
lret
jo
xor
jg
loopne
cmc
xor
mov
fdivs
or
cmp
scas
mov
mov
mov
test
shlb
cmp
adcl
cmp
sarb
fbld
sti
mov
cmp
pop
fnstsw
movsb
lret
cltd
inc
sub
mov
lcall
fsub
jne
sub
xor
jl
sti
sub
popa
jecxz
testb
mov
nop
inc
int3
icebp
sti
dec
mulb
das
cltd
xor
ror
push
jge
nop
jmp
popa
xor
pop
cmp
psubd
mov
mov
sbb
loop
mov
sub
inc
mov
sbb
cwtl
out
mov
test
scas
xor
and
sbb
cmp
mov
lock
call
push
cli
jo
test
xchg
or
xor
jo
cmpsb
lds
shlb
arpl
mov
les
inc
cmp
push
into
xor
pop
adc
xchg
out
jmp
bound
mov
inc
sti
mov
add
repnz
dec
adc
add
mov
fcoml
push
sbb
loop
fsubrl
js
cld
xlat
mov
adc
mov
test
and
mov
cmp
and
and
push
and
jge
stos
cli
cmp
cs
repnz
push
add
nop
adc
jmp
or
icebp
xor
sbb
out
xor
xor
lahf
adc
adc
mov
pop
xor
push
jle
mov
adc
enter
cmp
mov
jb
adc
popf
jbe
sbb
sub
adc
lock
aas
adc
xchg
hlt
jne
add
sbb
adc
das
ja
jle
int3
mov
rclb
xor
mov
adc
pop
mov
mov
lock
cmp
lcall
jp
adc
inc
stos
stos
sbb
mov
cmp
cmp
mov
mov
adc
push
inc
mov
or
mov
stc
out
popf
mov
cli
mov
xor
outsl
jp
sub
xchg
xchg
mov
mov
pop
test
stc
scas
dec
repnz
stos
clc
loopne
aad
je
pop
mov
into
ret
ds
jg
scas
and
cmp
dec
js
mov
jp
fistl
inc
or
xor
mov
mov
push
cs
sub
popa
mov
xor
ljmp
xor
adc
jg
mov
cmp
cmp
clc
push
mov
mov
std
mov
cmp
cs
jb
cmpl
mov
mov
aas
xor
mov
xor
jne
mov
jl
add
mov
dec
testb
ss
lahf
jp
inc
push
xor
push
cmp
icebp
addl
mov
pop
mov
xor
in
lahf
mov
pop
sub
dec
aaa
cs
jo
mov
dec
mov
test
inc
sahf
sub
cmp
adcl
and
imul
and
jb
imul
nop
lcall
jmp
aad
xor
mov
jge
inc
int3
fdivr
sub
loope
mov
icebp
lret
lock
push
aaa
fdivrl
mov
jae
inc
stos
mov
sbb
sbb
sub
jmp
jge
aaa
mov
or
sahf
xorl
xorb
testl
pop
scas
fiadds
cli
xor
scas
ds
pop
jo
add
jl
imul
movsb
or
fcoml
loope
pop
shrl
les
cmp
xchg
mov
loopne
push
scas
aaa
dec
mov
lret
aam
pop
movzwl
push
pop
aad
fists
mov
inc
jbe
out
mov
add
xchg
jl
insl
xor
and
loopne
call
mov
pusha
jno
sbb
xchg
sahf
jnp
int3
dec
out
and
outsl
sti
out
xor
mov
andb
movsb
stos
inc
push
xchg
test
mov
jmp
push
loopne
aas
lods
mov
sar
stos
push
clc
arpl
jne
idivb
pop
xor
mov
push
jae
aas
mov
ret
mov
cmpsb
arpl
adc
dec
pop
mov
xor
pop
stos
jge
xor
and
inc
popf
or
and
cs
aaa
xchg
lock
jle
mov
scas
lea
enter
jmp
fldcw
aaa
inc
mov
fs
push
insl
cwtl
add
daa
movsb
es
adc
aaa
adc
xchg
xchg
inc
add
cmc
sti
adc
xor
mov
out
mov
dec
pop
scas
leave
sahf
sbb
lods
xor
ds
sub
jo
inc
inc
fistpl
call
xlat
ds
jae
mov
mov
push
mov
and
jl
push
xor
pusha
inc
pop
mov
ret
lcall
cmp
js
sbb
jo
hlt
jns
adc
insb
je
and
lret
pop
in
pop
jle
and
int
jmp
dec
mov
adc
ds
mov
das
repnz
or
xor
imul
roll
pop
incb
mov
adc
mov
inc
mov
hlt
rcll
jecxz
imul
std
std
jmp
xlat
sahf
jp
sti
add
or
or
pop
stos
mov
dec
jno
movsl
xor
mov
lods
add
push
sti
cltd
pop
mov
dec
adc
mov
repz
fstpl
xor
adc
popf
iret
clc
push
or
imul
jl
dec
shll
xor
add
sar
test
mov
lock
pop
sub
call
ds
cwtl
shll
and
push
mov
sub
scas
daa
mov
sbb
inc
rcll
int
xchg
inc
jge
xchg
xchg
icebp
xchg
mov
mov
dec
test
xchg
sub
jne
xchg
clc
mov
adc
clc
jbe
scas
shl
movsb
test
mov
push
fsubp
push
cmp
popa
scas
inc
movsl
add
popf
test
nop
mov
inc
call
decb
andb
mov
cli
jae
sbbl
push
xchg
xor
mov
mov
xchg
jae
loopne
test
xor
adc
jg
pop
aad
and
dec
and
jae
pop
mov
lret
dec
sub
mov
xchg
loope
jecxz
sub
add
pushl
jb
stos
mov
jne
and
mov
daa
int3
jmp
imul
xor
mov
loopne
sub
pop
ret
out
mov
lock
cltd
imul
push
jmp
mov
pop
mov
mov
or
jmp
leave
xor
cwtl
sbb
mov
adc
push
jbe
push
fists
xchg
add
xorb
push
pop
cmp
daa
lret
scas
adc
repnz
mov
or
mov
das
daa
psubb
icebp
outsl
filds
iret
pushf
in
xchg
popf
push
popa
test
mov
in
flds
pop
sbb
divl
mov
cld
jmp
inc
nop
lods
lods
pop
jl
mov
pop
sbb
test
push
mov
dec
into
push
cmpsl
inc
jno
sub
scas
pop
inc
rorb
roll
mov
adc
and
shr
mov
or
push
aaa
mov
mov
cld
insb
xchg
fs
mov
xchg
clc
test
jnp
out
mov
sahf
mov
lock
push
mov
cmpsl
aad
mov
mov
sub
or
das
and
jnp
mov
mov
icebp
pop
adc
out
xor
or
add
adc
stos
inc
xor
pop
or
divb
mov
mov
pop
inc
jae
or
fs
pop
sbb
jns
shl
jae
daa
jge
aad
repnz
scas
sbb
and
nop
gs
lret
add
mov
xchg
xor
imul
sti
loope
pop
ss
add
arpl
mov
shlb
loop
pop
inc
lret
inc
fbld
rclb
mov
push
mov
addr16
push
sbb
sti
cmp
jmp
iret
mov
scas
sbb
shlb
jne
rcl
loop
inc
mov
loopne
xor
fildl
movd
lods
icebp
popa
xrelease
mov
shll
add
aam
mov
sbb
movsb
and
nop
pop
xchg
and
sbb
cmp
shrb
mov
out
jmp
shrb
in
stc
add
popa
call
aas
cmc
in
xchg
mov
and
jmp
stc
lock
xor
and
fisttpl
or
sahf
push
lock
inc
pop
push
in
daa
mov
sti
stos
pusha
mov
loop
out
dec
je
mov
or
mov
adc
jg
mov
scas
cmpsl
cs
mov
cltd
push
inc
sub
and
pop
sub
sbb
mov
ficompl
lret
jmp
shlb
cmp
push
push
sbb
sbb
ljmp
insb
lods
rolb
sub
push
sbb
jp
mov
scas
jl
and
add
pushf
or
and
and
sub
inc
mov
mov
scas
cmc
push
pop
fucomi
push
shrb
xchg
dec
shlb
adcb
inc
jmp
mov
roll
repz
and
fimuls
pop
mov
repz
scas
les
outsb
fnstenv
mov
mov
pop
les
jnp
xchg
test
and
cmp
and
sub
scas
xchg
pop
mov
adc
fdivrl
push
mov
xchg
shlb
xchg
xor
xchg
mov
scas
lock
mov
mov
out
bound
and
js
mov
mov
sub
xorb
shll
mov
mov
adc
mov
mov
dec
pop
mov
jge
sub
mov
mov
aas
mov
mov
movsb
xchg
mov
mov
mov
dec
frstor
lods
mov
and
aas
ljmp
es
test
icebp
mov
add
adc
xchg
mov
std
adc
jae
mov
cmp
mov
call
das
and
adc
cmp
xchg
push
jno
xor
data16
cs
cmp
mov
jge
mov
loop
or
xor
cmpsl
scas
lahf
pop
das
push
mov
mov
js
data16
pop
das
add
mov
mov
cmp
jmp
cmpsl
cmp
fwait
and
push
adc
mov
cmp
sahf
lods
rcll
scas
lds
ja
out
pushl
ds
xor
inc
mov
das
test
or
mov
sbb
add
mov
xor
mov
ljmp
mov
mov
and
sub
and
and
jmp
push
pop
jp
mov
mov
lret
sub
mov
inc
mov
aaa
pop
mov
cwtl
sbb
jp
mov
jb
push
mov
adc
cld
sti
sti
jbe
jbe
xchg
mov
or
cmp
pop
das
add
and
outsb
lds
pop
in
mov
inc
jl
mov
outsl
fidivrs
mov
sub
aas
cld
stos
mov
or
add
add
adc
mov
pop
jl
mov
int3
fdivl
das
bnd
cmpsl
push
out
pop
mov
sbb
cli
mov
pop
repz
cmp
jbe
and
adc
mov
and
and
jb
sti
xor
pushf
sti
icebp
notl
movsb
or
test
lahf
lret
icebp
fdiv
dec
push
add
je
fstps
push
dec
scas
mov
xchg
sub
ss
jg
dec
xor
jne
cmp
scas
push
repz
and
ret
int3
ja
push
inc
mov
ja
in
jnp
and
or
lods
push
add
aam
insl
xchg
mov
dec
and
jbe
adc
cld
push
mov
cmp
pop
pop
add
inc
mov
xchg
out
xor
lcall
add
jno
cwtl
cmpsl
xchg
pop
loope
mov
aas
adc
andl
sub
sarl
mov
inc
and
mov
add
inc
cmp
mov
cmp
mov
daa
or
push
adc
cmp
xchg
mov
sbb
jl
test
mov
jb
jmp
mov
repnz
jecxz
sarb
loop
and
stc
leave
pop
shrb
daa
xor
sub
repnz
sub
dec
std
mov
cmpsl
test
sub
xchg
jne
jno
jle
ret
inc
mov
lahf
imul
xor
cmp
ja
xor
pop
adc
lods
pop
scas
jge
xchg
sarl
test
mov
push
jo
notb
mov
mulb
push
jbe
xor
mov
add
test
idivl
js
das
cmpsl
mov
mov
test
icebp
idivl
cli
out
mov
or
cmp
mov
mov
jge
idivl
nop
jbe
jmp
fdivl
shll
ja
das
and
mov
pop
add
mov
mov
mov
add
add
mov
jbe
sub
inc
xor
ja
mov
in
js
sarb
imul
inc
jno
xor
xchg
stos
cmc
push
or
imul
sarb
adc
cld
jmp
in
cmp
aas
movsb
int3
mov
stos
rorb
mov
jp
movsl
mov
mov
push
push
mov
out
jns
pop
or
adc
stos
and
lods
sbb
cmp
dec
mov
shlb
push
xor
jle
frstor
sbb
pop
fwait
mov
fmull
sbbb
sub
cmp
mov
sbb
mov
pushf
sub
sub
sub
mov
nop
mov
sbb
punpckhbw
cmp
or
inc
push
jae
push
xor
paddusb
addr16
push
repnz
stc
xchg
test
arpl
add
and
aas
jno
daa
sub
mov
dec
cmp
mov
gs
dec
sbb
jmp
xchg
mov
icebp
adcb
mov
mov
xor
mov
ja
mov
sahf
addr16
popf
xchg
mov
stos
push
ja
cs
stos
push
dec
jl
lcall
in
lret
push
dec
add
and
push
push
adc
dec
mov
xor
dec
adc
loopne
orb
adc
int
mov
movsb
outsb
jmp
sub
fldenv
inc
test
inc
mov
mov
or
sub
stos
add
mov
sti
insl
loop
test
loopne
and
rorb
inc
sbb
bound
cltd
push
in
xor
iret
sahf
aas
mov
mov
lahf
jns
or
mov
adc
movsb
scas
add
and
xor
mov
ja
lock
inc
and
mov
outsl
ds
cwtl
mov
shll
sbb
es
jnp
shl
in
push
lock
arpl
inc
xor
ret
mov
pop
adc
mov
push
rcrl
jl
ds
lcall
stos
add
cli
scas
insl
fnsave
jl
faddl
pop
pop
lahf
daa
mov
inc
push
jo
jae
jle
add
cltd
test
test
cmp
push
mov
mov
idivb
jmp
adc
mov
push
cli
nop
stos
subb
jb
cli
add
and
push
outsb
adc
xor
and
hlt
jp
xchg
add
cmp
ljmp
push
icebp
xchg
xchg
inc
push
scas
ds
cld
mov
pusha
cmpb
pop
dec
fimuls
lods
pop
cmp
mov
popa
mov
sbb
loop
fcmovnb
xor
or
aaa
cmp
imul
jle
add
pop
mov
or
push
add
pop
mov
mov
mov
mov
js
mov
mov
stos
sub
stos
loop
clc
fcoml
and
out
aad
inc
xor
mov
add
frstor
inc
cmp
cmp
mov
scas
inc
push
int
adc
pop
dec
das
push
mov
cmp
and
mov
insl
jmp
fwait
adc
add
lods
push
fcoms
dec
imul
mov
jb
mov
and
dec
mov
xchg
sbb
and
inc
int
xor
dec
adc
jo
scas
jbe
pop
mov
mov
mov
lahf
shll
jbe
sbb
iret
leave
or
fstps
and
sarb
push
mov
cmp
aas
xor
aas
and
lcall
or
and
mull
mov
inc
lods
dec
adc
xor
orl
inc
out
int3
mov
cli
arpl
jb
and
movsb
add
fstpt
lods
mov
in
mov
fstpl
jb
or
adc
lock
mov
mov
jns
xor
mov
jo
test
fwait
xchg
add
clc
stos
cld
cmpsl
mov
jnp
lods
aas
lods
mov
test
sub
pop
aas
lahf
or
mov
xor
mov
pusha
cmc
xlat
aas
mov
cli
mov
pop
mov
ds
movsb
sbb
xor
leave
push
inc
out
ret
xor
movsl
leave
cmc
cltd
ds
out
test
push
leave
jne
mov
ret
jo
movsl
jno
test
ret
mov
add
lea
mov
sbb
and
cmp
and
mov
push
gs
jecxz
xchg
pop
je
inc
aaa
dec
mov
mov
lds
nop
stos
mov
mov
sub
repz
mov
int
aad
inc
fcmovne
cmp
mov
in
xor
sub
jb
hlt
xchg
mov
xor
xchg
icebp
out
out
sbbl
es
shl
jae
movq
and
lock
mov
xor
mov
andl
mov
cltd
in
adc
shl
mov
and
int
jmp
cmp
pop
add
cs
je
mov
icebp
mov
jmp
cmp
mov
jmp
mov
stos
mov
clc
pop
and
jno
fwait
mov
xor
bound
add
scas
jbe
xor
pop
adc
mov
pop
out
mov
addb
in
int
xor
xor
stos
popf
pop
rdpmc
imul
repnz
imul
xchg
xor
add
push
mov
and
and
scas
xchg
adc
fdivs
push
cltd
cmp
lock
jne
mov
popa
test
sub
movsb
imul
inc
pushf
adc
sbb
movsb
mov
or
and
sub
mov
cmc
movsb
sbb
mov
cmp
and
mov
jae
rol
mov
inc
mov
ss
test
push
sbb
mov
inc
pop
pop
data16
push
pop
xchg
loopne
mov
dec
mov
ret
adc
setns
fucomip
pop
cltd
sub
inc
stos
sub
shlb
cmp
sub
mov
dec
xor
jmp
mov
mov
pushf
cmpsb
lcall
pop
pushl
loop
es
test
pop
jno
mov
mov
xor
dec
jecxz
arpl
stos
sbb
je
adc
rorl
cmp
ret
mov
xor
fcoms
push
fbld
xchg
stc
cmp
push
icebp
loop
out
into
mov
dec
add
imul
mov
ljmp
or
and
adc
fsubrs
pop
std
cmc
dec
push
add
icebp
dec
pop
pushf
int
or
mov
daa
lock
stc
shl
aas
test
add
cli
pushl
cld
jo
or
mov
stc
xchg
add
or
in
outsb
cmp
jae
movsb
mov
les
mov
cwtl
in
inc
imul
xchg
mov
rcrl
adc
shl
jbe
ljmp
jne
je
xorb
push
mov
and
idiv
cmp
jle
pop
fcmovbe
pushf
pop
pop
mov
in
jne
das
mov
jg
ss
add
sbb
addr16
cmp
popf
mov
int3
shrb
addr16
fs
jle
ret
xchg
or
outsl
mov
into
icebp
test
xchg
push
loope
andl
push
jbe
into
addr16
and
cmp
fcmovnb
inc
and
fisubl
cmp
dec
cltd
mov
outsb
add
xor
xor
mov
xor
push
mov
mov
mov
pop
xchg
mov
sub
mov
pop
cmpsl
mov
and
mov
int3
mov
and
loopne
jbe
out
and
mov
dec
inc
pop
sub
mov
sub
mov
cmp
inc
mov
mov
mov
mov
adc
hlt
mov
aas
je
and
ficomps
jnp
std
cmpsl
aas
sbb
loope
rorb
xor
pushf
and
cmpsl
popf
mov
leave
add
mov
stc
cmp
or
xor
xor
mov
cmp
xor
inc
mov
push
lods
pop
ss
mov
test
and
or
mov
sub
scas
or
mov
sub
and
push
mov
stos
mov
and
mov
int3
mov
xchg
call
push
mov
sub
ja
and
mov
or
lahf
cmp
stc
and
mov
and
mov
mov
and
lods
mov
test
icebp
fs
pop
lock
pop
mov
mov
mov
call
mov
enter
inc
call
das
adc
imul
movsl
adc
mov
mov
mov
cs
xor
pop
push
jae
insl
mov
sub
movsl
mov
into
lcall
xor
push
lcall
sbb
sarl
fcoms
and
pop
and
jnp
fsubl
jbe
mov
mov
fnsave
mov
pop
jp
mov
xor
cwtl
sub
cld
jnp
sbb
and
pop
mov
mov
xor
movsb
nop
fwait
mov
cmpsl
test
loop
adc
ja
xor
mov
inc
aaa
in
ficomps
lods
fdivrl
push
sub
sub
pop
inc
cmp
mov
lock
mov
idivl
xchg
jg
jecxz
cmp
pop
ja
mov
xor
icebp
push
adc
test
add
and
inc
jp
mov
outsl
cli
mov
mov
ret
in
xor
cmp
push
fstpt
imul
mov
mov
cs
and
jp
cmp
fcmovu
or
add
or
push
aaa
bound
jecxz
pop
mov
mov
mov
pop
rorl
add
icebp
stos
mov
sbb
cmp
dec
pop
cs
xor
cld
cmp
imull
pop
cmp
nop
cwtl
repnz
mov
jns
cmp
fisubrl
or
hlt
pop
es
sub
sub
lods
aaa
mov
xchg
into
push
mov
sbb
mov
push
mov
jnp
xor
lahf
adc
lods
mov
aaa
sbb
sbb
adc
mov
or
and
xchg
dec
clc
mov
mov
cmp
xor
cmp
cmp
xor
push
sub
add
stc
mov
pop
mov
mov
or
int3
adc
mov
std
adc
sbb
mov
cmc
int3
in
cld
mov
fidivrs
enter
ljmp
mov
mov
cmp
dec
jbe
enter
icebp
ljmp
jmp
and
aaa
hlt
outsl
gs
jg
pusha
jno
sti
icebp
or
add
push
xchg
adc
pop
ficoml
mov
aam
fs
sub
sti
out
imul
mov
inc
jb
shrb
mov
sub
mov
pop
test
pop
stc
sub
push
lahf
aaa
repnz
pushf
repz
jmp
jb
jbe
or
mov
jg
fwait
data16
mov
inc
xchg
fimuls
inc
jl
ljmp
shrl
mulb
pop
add
xor
pusha
lcall
cli
mov
mov
pop
xchg
movsb
imul
cmc
subl
rcrl
testb
sbb
and
loope
jb
lcall
xchg
imul
cmp
add
push
sbb
jl
or
shr
dec
ror
mov
sbbl
adc
xor
loop
sbbb
cld
push
orb
cmp
repnz
mov
xor
adc
cmpb
aam
lea
fcompl
and
in
xor
in
pusha
and
xchg
popf
out
mov
lods
mov
js
pop
test
cs
std
add
lds
stos
pop
or
les
adc
mov
push
ret
adcb
push
or
jno
push
aam
sub
arpl
add
aaa
jnp
and
push
cwtl
sbb
fisttps
add
adc
dec
cmp
lds
jns
or
movb
ja
movsb
mov
and
or
sahf
test
fldl
pop
js
shll
push
mov
mov
loop
inc
sahf
scas
clc
and
xor
iret
scas
add
ret
adc
div
push
cmp
inc
jecxz
nop
ret
into
aad
outsb
xor
mov
cmc
push
das
cltd
mov
cmp
fisubrs
aad
mov
dec
cmp
pop
leave
mov
push
xor
adc
xchg
jbe
xor
or
nop
cmp
cli
mov
pop
jge
sub
sub
pusha
pop
xor
clts
lods
ja
fdivl
popa
mov
mov
dec
dec
lods
pusha
fabs
push
std
iret
xchg
cmp
push
mov
movsl
shrb
lock
jns
xor
cld
mov
sub
sti
xor
das
mov
pop
mov
jo
shrl
adc
fsubrp
rolb
mov
int
mov
xor
or
shll
inc
jmp
mov
jmp
fcompl
xchg
jae
jp
jo
mov
stos
adc
xor
xorb
loope
mov
fsts
mov
std
mov
xchg
mov
repnz
or
in
mov
sti
add
inc
test
jmp
cmp
cltd
adc
daa
sbb
aaa
add
jbe
and
cmpsl
mov
push
movsb
pop
sub
adc
in
sub
dec
fisubrs
aaa
cmp
mov
insb
inc
pop
cmp
pop
jmp
imul
and
xchg
lret
arpl
decl
inc
push
les
pushf
nop
inc
or
mov
pop
arpl
jl,pt
mov
rcrb
dec
pop
push
cmp
stc
pop
or
out
cmp
fucomp
adc
daa
andb
xor
cmp
pop
hlt
jl
addr16
pop
mov
imul
mov
push
loop
sbb
das
sahf
scas
or
pop
xchg
and
add
push
dec
cld
pop
stc
outsb
orl
and
mov
das
jno
ret
sub
jle
lods
imul
sub
mov
xor
mov
pop
mov
xchg
out
cmp
scas
pop
dec
sarb
mov
inc
jge
sti
adc
xor
add
or
cmp
dec
test
lahf
and
fdivp
dec
hlt
mov
or
inc
jbe
pusha
fidivs
mov
and
push
subb
cmp
xor
jmp
test
add
and
mov
xchg
lret
mov
adc
mov
setb
mov
xor
lea
add
lret
push
icebp
mov
inc
mov
cmp
sqrtps
dec
shll
test
inc
cmp
add
mov
or
leave
xchg
mov
inc
mov
mov
repnz
mov
push
ret
jne
jge
jbe
ss
stos
mov
loop
imul
mov
mov
loop
jae
push
jbe
leave
xor
mov
xor
xchg
push
sbb
pop
lds
fwait
imul
test
cmp
ljmp
int
in
or
scas
pop
mov
loope
popf
xchg
hlt
or
sbb
mov
inc
aas
dec
cwtl
jae
shrb
dec
inc
sti
add
adc
mov
or
xchg
sbb
sub
out
bound
adc
mov
loopne,pn
aaa
test
mov
pop
adc
jmp
jbe
aas
cmp
mov
movsl
mov
jmp
mov
xchg
out
mov
int
pop
std
jl
mov
icebp
fidivrs
adc
jge
movsl
pushf
pop
lds
loop
pop
adc
and
mov
in
pop
inc
int
outsb
icebp
dec
andb
outsl
sti
inc
mov
pop
xchg
pop
mov
cmp
sahf
push
movsb
rcr
mov
sub
push
xchg
in
and
push
jge
mov
popf
adc
sbb
mov
fisubl
aas
xor
mov
and
mov
std
mov
jge
mov
cmp
insl
xor
je
xchg
sub
and
sub
mov
jge
push
adc
mov
adc
mov
loop
ds
mov
xor
pop
jg
sbb
aas
cmp
mov
sub
std
movzbl
mov
and
mov
mov
pop
icebp
rorb
setno
mov
adc
cs
mov
cmp
mov
ret
scas
out
hlt
sub
mov
jbe
fisubrl
call
gs
pusha
daa
dec
and
push
repnz
push
push
rcr
push
xor
lods
xchg
aas
addb
mov
sarl
mov
mov
mov
dec
cmpsb
cmp
fidivl
cmp
cmp
test
int
mov
lods
cltd
jo
add
dec
xor
jo
push
sbb
mov
and
jmp
adc
and
add
hlt
test
cli
scas
mov
js
pop
in
push
dec
cwtl
stos
roll
out
aad
jle
xor
sub
mov
subl
sahf
pop
jne
lods
lods
les
jp
adc
xchg
sahf
stos
arpl
mov
xchg
inc
and
cli
out
xchg
imul
xor
incl
in
sarl
adc
inc
adc
mov
ficoml
or
xor
push
mov
stos
cs
fwait
sbbl
jmp
adc
pop
stos
roll
in
mov
fstl
mov
mov
test
cmp
clc
std
mov
lea
xchg
sub
ret
mov
mov
test
adc
stos
mov
sub
ljmp
dec
mov
adc
dec
nop
xchg
js
or
xchg
ret
lods
out
sbb
jmp
pop
mov
icebp
push
dec
imul
mov
sub
addr16
xchg
xor
adc
stos
outsb
cltd
pushf
mov
imul
mov
add
or
sub
or
xor
notb
sub
loopne
lock
push
bound
not
xor
sti
inc
or
stos
es
test
js
mov
call
popf
test
push
add
mov
scas
pop
icebp
jl
stos
inc
jb
pop
xchg
mov
xchg
mov
arpl
sub
push
aaa
cmpsl
pop
jl
jnp
jle,pt
cmp
dec
and
loopne
popa
sbbl
out
jge
out
xchg
and
mov
adc
outsl
loopne
adc
and
add
push
sbb
jle
jo
dec
jb
sub
loope
lock
fwait
and
push
std
les
jo
mov
lret
dec
pop
hlt
xchg
or
and
test
xchg
shrl
mov
aas
stos
jl
loopne
aas
lods
sbb
out
cli
add
iret
cli
xor
jecxz
data16
in
jae
xor
dec
jnp
call
decl
add
lret
jne
clc
adcl
and
ljmp
mov
stos
stc
loop
push
cld
push
inc
sbb
cs
sub
add
bound
lds
sbbb
insb
sbb
mov
jns
jnp
xor
icebp
and
sar
addr16
push
lock
lds
lods
mov
sahf
into
and
cmp
incb
jno
jno
pop
ret
mov
push
jle
cmc
push
push
out
cmp
movsl
xchg
mov
jno
mov
adc
dec
enter
leave
test
es
mov
stos
jp
xor
frstor
fs
icebp
adc
lds
aas
bound
test
push
lds
dec
rdmsr
imul
or
and
sub
mov
jb
arpl
arpl
arpl
xchg
adc
dec
sarb
pop
inc
popa
xchg
sbb
inc
adc
or
mov
nopl
sub
pop
or
sbb
leave
mulb
aas
or
push
xor
mov
jno
mov
inc
push
idiv
pop
adc
jle
scas
mov
fdivl
rcll
jb
xor
cld
fdiv
xlat
lods
inc
xchg
roll
bnd
cs
mov
ret
inc
dec
jae
mov
pop
test
mov
test
push
mov
mov
mov
jle
adc
mov
push
orl
mov
inc
mov
or
movsb
stc
add
xchg
push
mov
insl
jb
sbb
xor
cmp
jmp
or
xor
addl
in
push
push
pop
xchg
adc
pusha
inc
sbb
ljmp
icebp
fdivrp
psubusw
pusha
lret
xor
shll
int3
xor
enter
add
jle
cmp
adc
and
cmp
aas
adc
add
dec
movsl
bound
call
xchg
mov
inc
inc
push
movsl
xchg
dec
shll
aas
pop
mov
out
icebp
mov
ss
lods
mov
add
ficomps
xorb
jmp
jb
xor
aas
bound
lcall
outsl
pusha
dec
in
out
movsl
loopne
hlt
test
stc
cmp
movsb
fs
push
xor
cltd
push
notb
and
xor
cmp
aad
mov
shl
imul
inc
mov
xor
daa
push
adc
xchg
dec
insl
mov
sub
out
sbb
add
mov
stos
pop
pop
adc
fidivl
repz
cmp
pushf
fsubs
outsl
movsb
mov
or
into
mov
jnp
test
mov
push
loopne
test
push
out
sub
idiv
xor
and
adc
jae
jbe
loop
ds
lock
mov
icebp
fidivl
lret
xor
pop
sbb
inc
pop
xchg
bnd
dec
cmpsb
xchg
loope
shll
mov
xor
pop
pop
cmp
out
adc
sti
lods
adc
pop
xor
and
andb
jge
outsb
aaa
popa
and
sbb
push
mov
repnz
fildl
sti
out
shl
test
pushf
adc
pop
push
sub
rorl
in
mov
sbb
in
xor
inc
cmp
add
and
mov
add
rcrb
out
sbbb
mov
mov
push
mov
dec
shrl
and
in
xchg
scas
popf
pop
je
stos
pusha
fcomi
lret
mov
bound
push
mov
sbb
add
stos
fidivrl
sahf
and
jb
insb
dec
add
ja
daa
push
mov
and
add
pushf
pop
das
jg
push
pushf
push
loope
inc
xlat
mov
xchg
int
jle
xchg
sub
add
popf
xchg
fcompl
popf
imul
sub
jmp
dec
and
inc
pushf
add
cmp
push
mov
xor
lods
fldcw
shlb
cmp
xor
outsb
mov
push
pop
sub
lods
mov
add
cwtl
adc
clc
cltd
lods
in
lods
sub
push
outsl
pusha
iret
mov
pushf
rcrb
inc
mov
mov
pop
enter
test
jp
jne
cwtl
mov
aas
sub
cli
loopne
add
adc
push
jmp
pusha
jo
sbb
lods
shl
mov
sub
mov
fcmovb
push
jne
pop
pop
pop
sbb
repz
mov
dec
xor
or
jns
push
mov
lock
mov
and
xor
stos
rclb
daa
in
aad
sbb
cld
stos
sbb
push
pop
fwait
cltd
lcall
cmpsb
in
icebp
xor
pop
mov
stos
pop
cwtl
sbb
xor
jae
dec
negl
int
inc
dec
gs
adc
pop
ss
int
cltd
inc
cli
cmp
add
add
test
adc
enter
mov
stc
int3
dec
sbbl
cs
fsub
inc
sbb
and
stos
sbb
int3
imul
data16
negb
jb
xchg
sbb
xorl
repz
ficompl
pop
pusha
jmp
push
sub
xchg
lea
lahf
jle
aas
jle
mov
inc
jnp
ljmp
stc
pop
cld
daa
addr16
or
dec
je
mov
dec
inc
pushf
inc
das
inc
bound
xchg
pop
mov
and
outsl
or
mov
and
xchg
add
pop
and
fs
cld
mov
shrb
ss
xor
jns
and
and
mov
fnsave
rorb
xchg
pusha
sbb
pop
lods
gs
call
fsubl
xor
cli
lcall
mov
xchg
jge
jg
xor
orb
push
fsts
pcmpgtb
scas
iret
jae
jnp
sub
adc
jge
frstor
das
fists
mov
push
cli
push
cmpsb
mov
push
inc
lds
pop
xchg
outsl
shrl
dec
mov
int
mov
mov
popf
xlat
popf
push
xor
aad
push
loope
xor
xadd
sbb
xchg
sahf
movsb
cmpsb
pop
mov
in
and
cs
ds
loope
pop
pusha
pop
pop
jb
xor
or
ror
xor
jnp
dec
and
daa
les
mov
mov
fidivl
push
fisttpll
dec
jnp
cmp
sub
loop
lock
xchg
dec
add
sub
sbb
mov
inc
mov
add
adc
and
loopne
popa
cld
and
mov
loop
scas
dec
inc
mov
into
icebp
pop
and
test
mov
mov
aas
lcall
dec
icebp
dec
fsubl
mov
xchg
inc
je
leave
dec
cmp
mov
adc
ss
jmp
xor
or
xor
pop
xor
sub
mov
xor
xor
xor
and
icebp
imulb
mov
shrl
shr
cli
sti
adc
push
out
inc
arpl
and
or
cmpsl
pop
mov
mov
jle
pusha
jbe
sbb
mov
push
loope
adc
imulb
cltd
lods
sub
mov
sbb
ret
out
stos
cld
sub
std
decb
aam
test
xchg
jmp
bound
outsl
mov
aas
scas
ljmp
cltd
divl
push
mov
jl
rcr
cmp
sub
call
shlb
xor
cmp
or
aas
push
or
adc
mov
add
ret
and
repnz
adc
leave
jae
data16
scas
stos
imul
hlt
jmp
lahf
xor
pop
xchg
js
and
cld
mov
add
aaa
orb
aas
lea
mov
subl
ret
mov
push
cmp
adc
movsb
inc
inc
psraw
addr16
add
cwtl
movsb
push
cmp
jge
jae
je
sub
or
ret
mov
stos
addr16
mov
loop
out
cmp
popa
dec
cld
adc
jmp
dec
adc
add
pop
cwtl
sub
fdivrs
movsl
sahf
mov
sub
xor
stos
cmc
imul
jne
stos
cmpsl
cmp
pop
xchg
add
add
mov
cmp
mov
mov
push
mov
mov
das
mov
mov
mov
mov
loope
and
mov
pop
pop
fnsave
icebp
lods
dec
stos
andb
clc
jae
lock
dec
mov
mov
add
out
shlb
jb
rcll
mov
add
cltd
fisttpll
jg
add
dec
outsb
je
mov
adc
or
mov
adc
push
shll
or
cmp
or
fdivrl
notl
mov
mov
pop
jmp
shr
cmp
inc
imul
rcrb
cwtl
mov
and
xchg
js
out
sbb
push
adc
adc
jns
ja
inc
sti
pop
movsl
insl
jg
icebp
inc
inc
popf
cmp
btr
add
scas
adc
sbb
sub
or
mov
sub
or
xchg
mov
mov
pop
mov
cmc
pop
pop
cmp
stc
pop
jb
mov
or
cmp
mov
loope
outsl
dec
xchg
pusha
mov
push
mov
jne
cld
and
sti
adc
mov
jae
cmc
ret
cmpsb
je
movsl
loopne
cld
sub
ret
call
ficomps
adc
ss
xchg
loopne
shrl
adc
inc
xor
inc
jp
cmpsb
mov
pop
repz
leave
aad
mov
fbld
ja
mov
mov
mov
adc
mov
xor
mov
or
mov
push
stos
ljmp
popf
mov
into
xchg
not
fsts
cld
ss
nop
icebp
in
in
jb
add
mov
cltd
ds
test
mov
lea
cmp
das
sbb
adc
shll
in
add
hlt
ss
cwtl
icebp
xor
test
movsb
and
jnp
enter
cmp
stos
adc
cmp
int
mov
decl
push
inc
xchg
sbb
andb
xorb
sub
scas
pop
mov
mov
sub
loop
add
aad
adc
rolb
movsb
push
aas
mov
movsb
cs
inc
add
shlb
add
shr
add
sarb
rol
ds
mov
push
mov
loopne
enter
adc
scas
popf
rcl
mov
ret
push
loope
repnz
or
shll
fsubrl
iret
outsl
dec
je
fs
xchg
aaa
repz
mov
cmpsb
scas
cmp
leave
adcb
cmp
mov
adc
iret
stos
pop
mov
push
dec
sub
fsts
inc
ficomps
xor
mov
icebp
stos
fnsave
pusha
cltd
out
fisubrl
insl
or
jbe
insl
lods
jge
repnz
sbb
test
lea
mov
xchg
leave
jno
jne
cmpl
rorb
pop
push
adc
mov
pop
xchg
ror
sub
push
mov
pop
into
and
scas
addr16
pop
arpl
jno
sar
loopne
fwait
xorb
inc
adc
shll
inc
mov
lret
mov
addl
lcall
in
jne
adc
push
sub
xorb
fs
mov
repnz
in
lock
jnp
xchg
mov
mov
rorl
popf
xorl
lock
pop
mov
imul
mov
mov
sub
add
pop
imul
sub
cmp
push
jmp
sahf
mov
adc
faddl
xchg
pushf
cld
adc
sbb
bound
mov
sub
mov
adc
add
or
pop
push
inc
test
and
pop
pop
push
push
cli
jp
les
xchg
or
mov
inc
xchg
mov
loopne
fidivs
push
std
mov
lcall
shr
push
push
adc
xor
cmp
push
ror
or
shrl
inc
bound
adc
sub
mov
rorb
mov
sti
add
ss
cmpsb
cmpsb
iret
mov
shlb
popa
lret
xchg
push
movsl
call
not
adcl
ds
inc
xchg
pop
enter
sbb
jge
idivb
xchg
and
inc
andb
in
je
xorl
mov
aas
stc
movl
xchg
and
lahf
push
add
inc
ds
inc
jo
sti
cmp
pop
testb
jmp
mov
push
daa
fistl
movsb
xchg
fwait
sahf
push
pop
dec
lret
rcll
mov
sub
xchg
push
mov
sti
mov
outsb
icebp
cmp
scas
pop
and
xor
rclb
sbb
pop
cmp
jae
lds
jbe
pop
stos
outsb
mov
fdivrl
out
mov
sub
jecxz
add
std
das
adc
xorb
stc
iret
push
std
jmp
pusha
dec
pop
ja
dec
push
loop
lret
ja
xor
add
adc
jge
push
scas
stos
ljmp
test
jge
pop
xchg
and
inc
sub
cmc
adc
dec
jecxz
sarl
pop
ds
outsb
out
add
mov
rcl
add
mov
mov
add
loope
jmp
js
movsl
ja
xor
mov
jp
mulb
lret
push
sarb
sbbl
lcall
xor
ss
jae
xor
stos
aaa
mov
cmp
ficoml
dec
addl
insl
pop
adcl
sbb
inc
xchg
push
outsb
clc
mov
pop
int
dec
and
mov
dec
enter
dec
into
test
cltd
test
js
jns
adc
cmp
aad
fsubs
pop
adcl
addr16
aad
fwait
pop
mov
insl
movsb
je
mov
imul
mov
test
xor
shrb
sub
xor
rcrb
int3
gs
pop
mov
pop
mov
aas
repnz
scas
dec
lock
fidivrs
and
adc
mov
pop
push
nop
jecxz
jo
loop
push
stos
out
adc
xchg
cmc
test
popf
xchg
ds
arpl
outsl
icebp
fcomps
mov
xchg
mov
fisttpl
mov
sub
inc
ljmp
pop
sub
and
cwtl
cmc
cld
rorl
or
adc
push
xor
mov
xchg
adc
mov
push
and
jge
sarb
mov
shrl
insl
jmp
sub
sti
orl
cmp
loopne
shr
mov
lds
or
xor
push
push
xor
mov
or
cmp
stos
sahf
test
repnz
addb
push
mov
mov
adc
std
clc
mov
add
or
lock
mov
pop
pop
add
cli
adc
sahf
in
sahf
es
outsl
mov
push
pop
mov
push
imull
ds
mov
std
pop
jnp
inc
pop
dec
pop
int
xchg
inc
fnsave
data16
mov
adc
out
adc
cmp
cmp
lods
in
mov
xchg
lock
outsl
pop
pop
and
rolb
repnz
sub
sub
mov
test
lds
xchg
data16
jge
mov
loop
and
mov
mov
jg
mov
or
and
in
mov
incl
mov
mov
fimuls
adc
sub
mov
push
sub
mov
cmp
shll
add
jo
bound
cmp
dec
xor
push
or
inc
leave
sahf
push
stos
cmp
xchg
sub
fimuls
dec
ljmp
test
cld
jne
xchg
ret
mov
xchg
fstps
stos
lods
arpl
call
jge
jmp
mov
loope
sub
dec
dec
mov
jb
cmc
sub
and
aas
jo
fisubrl
dec
adc
push
les
mov
push
nop
pushl
mov
clc
pop
in
sbb
pop
jno
test
mov
add
out
lods
push
incl
adc
xchg
scas
mov
nop
call
shl
fcmove
add
je
pusha
adc
stos
cmp
test
sub
xor
and
scas
push
pop
sbb
les
fiadds
lahf
jo
cmp
fadd
inc
push
aas
dec
jp
out
movsb
pushf
sub
sub
jbe
cmp
pop
mov
loope
cmp
push
addb
sarl
sub
mov
mov
inc
or
sahf
pop
mov
pop
cli
inc
lock
and
add
and
mov
test
or
dec
mov
pop
stos
and
mov
lcall
stos
cmpl
and
pop
sub
xor
out
mov
inc
loope
mov
push
loopne
rcl
add
outsb
idivl
loope
xor
mov
sub
mov
sub
mov
sbb
dec
adc
sub
cmpsl
push
cmp
add
cmpb
adc
mov
addl
and
adc
xor
pushf
icebp
dec
insb
mov
repnz
sub
or
and
fidivrs
or
ljmp
jmp
push
arpl
mov
jae
aad
pop
add
icebp
xor
cli
xchg
jmp
mov
mov
in
mov
or
sti
mov
and
lock
out
pop
mov
pop
add
aaa
clc
or
leave
mov
sub
adc
incb
cs
pop
xchg
cld
cli
bnd
out
pop
call
test
mov
pop
bound
sbb
cwtl
adc
sti
fbstp
push
push
xchg
clc
mov
testl
mov
fsubrl
cmpsb
shlb
int3
push
fiadds
inc
lock
adc
mov
int
dec
adc
mov
test
testb
mov
xchg
aas
bnd
ret
xor
sbb
sub
scas
jo
jg
daa
addr16
dec
loop
out
dec
xchg
pop
cmp
and
icebp
scas
ds
gs
xlat
add
rclb
sti
into
sub
jnp
in
test
in
repnz
mov
ret
daa
jnp
push
jb
fcoml
xchg
pushf
repz
stos
and
or
ljmp
daa
js
cmpsb
mov
mov
adc
jno
adc
stos
push
mov
bound
cld
movsl
mov
mov
stos
inc
sub
loopne
in
sbb
sahf
dec
cli
push
sbb
sub
push
inc
sbb
mov
andb
lea
dec
scas
testl
aaa
xchg
mov
sahf
mov
pusha
mov
jg
hlt
mov
icebp
daa
lret
je,pn
ret
repz
mov
js
lock
xor
jae
dec
not
pushf
push
cmpsb
inc
inc
rcrl
dec
ret
mov
sbb
out
fs
inc
sub
cli
int3
push
mov
mov
int
sub
push
mov
jbe
mov
xorb
lret
cmp
xor
bound
fsubs
clc
mov
jnp
lcall
push
into
mov
push
mov
xor
loopne
sahf
sti
add
jno,pt
lret
cmp
fsubrl
mov
lcall
fsts
add
or
and
sub
repnz
test
cmpb
clc
add
bound
outsb
pop
push
xchg
int
sahf
push
ljmp
cmp
sub
add
sub
movsb
push
mov
pop
inc
mov
repnz
fidivrl
adc
jnp
pop
pushf
fnstenv
pop
push
stos
shl
lods
push
push
nop
push
loop
movsb
pop
jg
bnd
and
repnz
pop
inc
aas
scas
daa
sbb
fiaddl
jmp
mov
inc
test
arpl
mov
bound
inc
xchg
movsb
inc
xchg
enter
push
mul
push
imul
loop
push
push
in
jg
xor
inc
pop
cmp
incb
xchg
ss
jle
lea
ds
dec
divb
out
repnz
and
movsb
jmp
movsb
shr
cmp
clc
pop
xchg
cmc
mov
das
shlb
cmp
inc
sub
jle
movsl
push
adc
xchg
call
jnp
cltd
stos
jl
push
or
iret
pop
and
adc
pop
repnz
pusha
imul
mov
mov
adc
sub
mov
pop
mov
xchg
out
aad
inc
xor
mov
sti
mov
js
adc
mov
repnz
sbb
jge
fwait
bound
or
dec
sti
mov
loop
icebp
xor
mov
lret
mov
das
call
cs
mov
inc
add
shl
xor
int3
cmp
mov
loopne
mov
or
fdivl
subl
cmp
lods
xchg
push
outsb
repnz
ja
cmpsb
pushf
sbb
dec
mov
pusha
movsb
mov
xchg
stos
pop
lods
ja
inc
popf
sbb
test
jl
icebp
xchg
jg
fdivrp
and
xchg
adc
jo
mov
mov
rcrb
jge
cld
js
ljmp
mov
leave
sar
push
leave
sbb
cmp
add
mov
push
das
lcall
rcll
fsin
cmp
add
test
je
push
dec
loopne
or
mov
fldt
or
std
dec
mov
adc
fwait
mov
sti
xor
inc
idivl
or
loopne
ror
icebp
cmp
sbb
loope
popa
mov
jecxz
jne
popf
lods
enter
ds
imul
fdivrs
rcrb
mov
in
loope
or
mov
jl
adc
add
gs
out
pusha
ss
fnstenv
mov
fadds
adc
inc
aad
and
inc
outsl
pushf
sub
jb
lock
scas
cwtl
sarb
aad
xchg
jle
loopne
sub
inc
push
adc
and
or
xor
sbb
jbe
popa
mov
inc
daa
es
out
xchg
xchg
loop
loop
or
xor
jno
fsub
lret
xchg
icebp
cmp
sbb
mov
adc
dec
xor
fmull
cs
out
mov
xor
cmp
in
mov
clc
pop
sub
je
cli
push
ds
sbb
mov
mull
loopne
dec
jge
aam
pop
sti
inc
stos
mov
lock
rorl
pop
das
popf
hlt
push
lahf
sbb
cmpb
sub
mov
mov
dec
inc
clc
mov
scas
sub
mov
hlt
xor
jae
sbb
cld
mov
je
adc
add
push
or
or
sete
jle
pop
pop
mov
jnp
ljmp
dec
ss
sti
test
sub
aaa
jnp
mov
rcrl
adc
add
xchg
mov
mov
xor
int
ds
add
out
cmc
xor
out
inc
xchg
ror
cmpl
loopne
in
hlt
push
out
mov
int
imul
and
sub
push
fsubs
pop
js
shl
and
xor
std
and
std
or
mov
jmp
dec
xchg
push
xor
push
roll
inc
shr
sbb
in
add
rol
or
aas
dec
test
fldl
icebp
outsl
mov
shr
jecxz
xchg
xor
jb
jmp
mov
fisubl
add
push
fidivs
jb
xchg
cltd
fs
adc
cmpsl
push
hlt
lock
mov
push
icebp
ss
lock
jg
xor
jecxz
movsb
fldcw
mov
add
dec
es
mov
cltd
loopne
incb
dec
dec
pop
xlat
outsb
nop
push
jns
mov
mov
jnp
mov
clc
jb
jae
in
rcr
mov
rcll
int
jp
aad
xchg
std
sub
cmp
pushf
adc
push
popl
push
jmp
jp
or
mov
mov
lods
add
pop
mov
dec
bound
inc
push
pop
and
sub
mov
mov
push
cmp
sub
cld
xchg
cmp
jae
mov
in
xor
inc
into
orb
nop
lds
bound
cwtl
fistpl
scas
test
pop
or
adc
push
push
lcall
and
sub
test
rorl
xchg
pop
jo
mov
mov
mov
mov
push
mov
cli
xor
cli
loopne
sub
jg
mov
les
stos
ds
jno
lods
inc
and
push
inc
or
aas
add
and
movsl
push
popa
pop
shl
imul
cmp
pushf
xor
inc
std
mov
mov
mov
shrl
jl
adc
movsl
cs
mov
iret
push
or
adc
inc
push
pop
add
pop
add
mov
jno
jb
xchg
xor
mov
inc
dec
int3
insl
pop
push
pop
xor
push
mov
loopne
push
mov
xchg
cmpsb
cli
xchg
out
call
clc
xor
xchg
adc
mov
hlt
inc
xor
push
add
call
mov
and
fnstenv
lret
rcrl
movsb
jnp
dec
adc
jb
or
int
or
mov
adc
jb
fidivl
inc
push
cmp
and
pop
inc
imul
jnp
stos
xchg
inc
push
shlb
lods
aam
out
pop
jae
and
sarb
ja
lods
mov
fidivl
adc
dec
sbb
xchg
out
or
pop
ret
stos
testl
repz
push
in
rcr
pop
push
xor
ss
and
sbb
xor
jno
mov
das
mov
into
push
stos
add
cmp
sbb
pop
out
sti
xor
push
sbb
sbb
cmp
test
test
test
out
popa
and
pop
and
je
dec
shll
insl
gs
stos
xor
xchg
mov
jmp
es
sbb
jmp
xlat
pop
push
nop
xchg
push
dec
dec
sub
jecxz
test
in
icebp
adc
push
mov
cli
sub
inc
pusha
mov
adc
stos
cmp
scas
mov
repnz
mov
leave
lret
pop
daa
icebp
pushf
subb
aaa
push
inc
pop
scas
sbb
push
mov
adc
scas
mov
lods
mov
mov
in
pop
popa
leave
movsb
aad
inc
testb
add
dec
stc
addb
inc
lret
sub
icebp
or
lahf
mov
adc
test
divl
test
dec
xor
and
mov
inc
aas
cmc
fidivs
popa
mov
mov
pusha
jnp
mov
stos
jb
inc
pop
rcrb
jecxz
cmp
mov
gs
es
sbb
mov
iret
fisubrl
xor
dec
add
push
popf
daa
adc
pushf
mov
hlt
mov
pop
mov
mov
sbb
lret
lahf
inc
lock
addb
arpl
cmp
add
scas
imul
mov
cltd
xor
in
pop
shlb
loop
aaa
lock
orb
lock
sbb
mov
cld
jle
sbb
dec
pop
cmp
jnp
pop
scas
mov
or
adc
cmp
dec
lret
pop
mov
les
pushl
jmp
hlt
mov
movsl
test
sahf
cld
xchg
pop
push
adc
stos
sahf
mov
shrl
movsl
in
mov
fwait
cs
jmp
sar
icebp
ja
rcll
repnz
xor
jmp
adc
add
inc
adc
je
jle
stc
xchg
mov
bound
mov
sbb
add
test
imul
cli
jo
lret
cmpsl
push
test
push
mov
faddl
int3
arpl
loopne
push
xlat
bound
push
push
adc
loope
inc
js
pop
int
sub
hlt
push
aam
pop
cmc
nop
stos
fdivp
mov
jnp
inc
int
pop
add
xor
daa
cmc
test
sub
sbb
adc
push
mov
or
add
out
mov
pushf
xchg
clc
in
xor
push
mov
stos
test
shl
xchg
xchg
ljmp
cmp
icebp
ss
icebp
pusha
inc
fbstp
insb
mov
adc
repnz
scas
xor
lahf
out
dec
mov
sbb
lret
pause
pushf
mov
mov
mov
js
aas
out
inc
mov
or
xor
lods
pop
scas
js
pop
sti
jle
mov
sti
mov
xlat
out
xchg
cld
cmp
outsb
mov
mov
scas
addr16
and
je
rolb
xchg
push
cmp
notb
call
jmp
or
push
loop
or
adc
pusha
cmp
jmp
mov
xor
add
push
adc
pop
lgs
sub
add
lock
movsl
lods
sbb
pop
fisubs
sbb
stos
xchg
in
adc
mov
shll
icebp
repnz
ret
test
sbb
fcompl
dec
push
movb
inc
loopne
xchg
jns
push
cld
fcoml
frstor
fnstenv
push
imul
insl
mov
mov
push
sbb
push
pop
inc
stos
cmp
into
loope
cmpsb
pusha
dec
inc
fildll
addr16
psrlw
arpl
sarl
sbb
lret
bound
pop
outsb
inc
cmpsb
sbb
push
jne
ljmp
imul
mov
sti
adc
popf
outsl
sub
cmc
das
aad
rclb
pop
adc
mov
inc
xchg
cmp
add
inc
sub
push
in
pop
test
xchg
lods
jmp
addr16
inc
adc
mov
mov
sbb
mov
mov
aas
push
mov
xchg
mov
cld
call
mov
mov
sbb
arpl
fmull
js
sahf
adc
add
jl
inc
mov
mov
sbb
icebp
mov
enter
inc
inc
aad
fbstp
xchg
mov
sahf
cmp
push
cmp
cmp
mov
popa
xchg
jl
adc
test
mov
in
cmp
icebp
nop
push
xor
inc
xchg
mov
mov
sbb
sbb
into
das
xor
mov
add
xchg
cmc
cmpsl
mov
lock
in
jmp
fwait
xchg
pusha
aas
and
pop
pop
icebp
jo
xchg
daa
test
lcall
das
cli
sahf
fidivrl
pushf
test
int
sbb
repz
push
pop
test
jg
out
popf
mov
arpl
les
test
and
int
stc
sub
inc
clc
repnz
push
xor
xlat
repz
xor
shll
sti
jne
mov
mov
lds
mov
leave
stc
pop
stos
rdmsr
jmp
scas
cmpsb
ss
sbb
ficomps
dec
mov
adc
fdivrl
push
out
cltd
inc
mov
div
scas
ljmp
xor
test
imul
inc
shll
push
cmp
je
pop
shlb
int
xchg
movsb
das
jmp
mov
fnsave
popf
div
inc
xor
lods
add
loopne
xor
sub
mov
jle
mov
and
push
pop
mov
mov
mov
sbb
rcrl
lea
dec
xchg
jb
push
test
addr16
xchg
mov
data16
adc
mov
rcrb
insl
rcl
test
mov
jp
into
scas
out
ds
ljmp
jo
out
shll
xor
cs
push
stos
imul
adc
add
xchg
jmp
jae
push
cmpsb
ss
pop
out
imulb
in
into
add
and
mov
lcall
push
imul
rorb
out
xor
leave
jp
repnz
nop
adc
inc
mov
test
sahf
faddl
mov
mov
nop
stos
loope
jge
mov
aad
divb
push
inc
sbb
xor
fwait
xchg
ds
jmp
mov
in
jnp
push
dec
shll
in
cli
xorl
jl
stc
sbb
ljmp
cs
inc
ss
inc
sbb
test
fmull
xchg
jmp
pop
mov
mov
movsb
stos
lahf
xchg
fbstp
cmpsl
pop
or
and
les
add
mov
xor
stos
sub
popa
lcall
xor
adc
stos
cmpsl
clc
icebp
repnz
xor
mov
rorb
jo
or
add
mov
pop
shl
push
out
repnz
mull
lea
inc
sub
rcrb
jp
aas
icebp
mov
cld
mov
mov
mov
xor
ret
mov
pop
mov
jb
aas
push
jne
mov
adcb
stos
sub
loope
sbb
movl
sbb
cwtl
not
pop
jp
push
push
rolb
pop
test
je
dec
mov
pop
jg
dec
in
addr16
xchg
and
or
mov
sbb
arpl
add
imul
adc
sub
or
mov
push
mov
outsb
xchg
pop
sub
jnp
fwait
ds
bound
sahf
push
lcall
lcall
lods
arpl
shl
jle
mov
decl
shlb
xor
repnz
ljmp
jl
ljmp
cld
shl
mov
dec
pop
add
gs
cmp
jl
out
hlt
inc
popf
dec
add
mov
mov
data16
mov
and
fwait
and
jns
dec
jae
push
and
jl
mov
add
loopne
mov
daa
flds
cmp
pop
add
mov
sbb
mov
cwtl
aas
ret
mov
fcoml
int
lcall
adc
xchg
scas
push
mov
leave
int
sub
outsb
lock
out
loopne
sub
cmp
in
js
int3
mov
adc
xchg
pop
rorb
in
cmp
jae
fisttpl
push
testl
aad
pop
or
cld
cmp
xor
inc
leave
dec
lock
ja
mov
sbb
rcrb
sbb
add
imul
roll
stc
cld
je
sbb
cmp
call
mov
add
negb
mov
mov
xor
dec
sub
scas
js
lds
mov
add
cmc
or
scas
mov
or
call
test
adc
shr
mov
inc
jg
pop
loopne
in
fucomp
lea
adc
insl
jecxz
int
arpl
adc
in
jmp
jno
xchg
xchg
cmp
and
xor
jns
pop
mov
push
sbb
jg
roll
mov
mov
jp
sbb
shl
scas
cltd
popf
pop
lcall
lret
mov
and
mov
cmp
pushf
out
push
mov
in
xor
mov
or
pop
mov
fucomi
test
mov
xchg
or
xlat
mov
pop
data16
cs
dec
out
test
scas
xchg
enter
sub
stos
dec
cmp
jae
inc
cmpb
mul
and
ret
lods
adcl
aas
inc
jb
arpl
arpl
mov
imul
cmp
bound
addr16
leave
sti
xchg
xor
mov
je
mov
mov
pop
push
jno
jp
shlb
ljmp
jmp
adc
inc
popf
mov
lea
test
orb
outsl
xor
imul
ss
ds
mov
dec
lock
mov
pushf
or
jb
rclb
das
rclb
xor
outsl
lea
adc
lret
jge
scas
dec
test
je
loopne
lret
push
test
mov
sub
xor
inc
sbb
adc
les
jge
mov
dec
mov
mov
ljmp
jle
add
push
cmpl
push
subb
or
jp
loope
mov
popa
xchg
mov
cmp
dec
loope
mov
xlat
sbb
cltd
test
ja
dec
dec
mov
jbe
fmull
fcmovnb
out
xchg
mov
pop
stos
in
jge
mov
cs
xchg
in
mov
call
mov
xor
mov
cwtl
in
sub
loopne
je
xor
scas
rcl
out
mov
cltd
mov
shll
popl
jmp
insb
mov
cmp
shl
mov
loopne
int
or
push
mov
cmp
cwtl
add
mov
call
icebp
pop
cmp
movsb
mov
adc
mov
mov
outsb
mov
mov
and
das
sahf
scas
in
push
jle
mov
xor
lock
cmp
jmp
xchg
jns
xchg
xor
jno
xchg
mulb
insl
sbb
gs
pop
xor
sti
repnz
adc
loopne
je
inc
and
pusha
movsb
or
push
xor
insl
and
mov
mov
repz
xor
outsb
in
adc
cmp
mov
jbe
pop
mov
sbb
cmp
add
loopne
xchg
add
pop
pop
adc
xorb
sti
mov
repnz
or
xchg
fcmovb
pop
movsb
movsb
jecxz
loop
popf
sbb
xchg
or
loope
mov
pusha
test
adc
cmpsl
fidivs
add
push
cs
outsb
lock
jp
les
movsb
sahf
mov
mov
add
fistpl
faddl
mov
lds
sahf
jmp
outsb
dec
jne
fnstenv
addr16
lock
bound
sbb
ret
stc
outsb
mov
adc
daa
test
mov
xchg
mov
es
loope
xchg
mov
xor
test
adc
inc
lock
lods
adc
pop
fisubrl
cld
cli
enter
addb
inc
cmp
cld
sbb
push
and
adc
pop
and
or
mov
inc
ja
imul
add
xor
xor
lock
sbb
stos
pop
gs
pop
add
faddl
jb
pop
clc
mov
inc
mov
icebp
movsb
push
add
scas
push
mov
ljmp
out
sahf
hlt
adc
sbb
pop
dec
mov
or
or
mov
inc
lock
adc
cmp
dec
jl
movl
push
mov
mov
das
xorb
push
iret
pusha
data16
mov
xor
and
mov
es
jb
mov
inc
sub
bound
daa
sarl
cltd
mov
jne
and
pop
ret
xor
stos
jl
jl
addb
clc
push
jl
loopne
outsl
das
loopne
testl
mov
mov
aas
mov
pop
test
sub
pusha
mov
int3
or
mov
jmp
enter
jnp
add
cmp
stos
lahf
xchg
lret
or
imul
add
mov
stc
xchg
arpl
cmp
movsb
imul
mov
rcrl
xchg
ds
lret
in
pop
ljmp
movsb
icebp
loop
xchg
jp
in
sub
pop
mov
shld
add
js
cli
xchg
sub
adc
pop
shrb
loop
and
cld
mov
movsb
jle
sub
xchg
adc
cmpsb
ss
out
cli
adc
dec
insl
xchg
faddl
add
xor
mov
jecxz
push
add
mov
fsubl
jo
jp
lods
test
sub
push
xor
orl
xor
roll
mov
jg
sbb
jno
sub
xchg
jo
mov
mov
mov
jne
lret
dec
mov
cmp
and
jmp
mov
sbb
sbb
fadd
push
mov
jge
fs
pop
mov
rcrl
sti
sub
add
and
loop
lods
mov
sub
dec
mov
lret
test
movsb
dec
and
fsts
cmp
push
fistpll
divl
jne
imul
fiadds
sbb
mov
test
push
dec
test
dec
sbb
sbb
cli
adc
sbb
and
pop
ds
xchg
cmpsb
mov
fimull
jb
rcr
xor
mov
push
fldt
sahf
mov
aam
dec
pop
js
cmp
xchg
cmp
sbb
aaa
pop
inc
jg,pn
cmc
sti
pop
aas
repnz
xlat
xchg
mov
sub
inc
aam
jg
jnp
fsubrl
xor
int
adc
fistpll
int
outsl
pop
shl
pop
addr16
pop
lahf
test
int3
jno
pushf
or
les
into
mov
mov
or
adc
jae
or
add
dec
sti
mov
dec
insb
sbb
xor
xor
ljmp
pop
add
imul
aas
fmulp
cli
roll
xchg
add
scas
js
jbe
dec
add
jecxz
sbb
leave
repz
push
mov
mov
mov
pop
cpuid
sbb
mov
dec
jns
out
in
and
push
sti
push
xchg
jmp
or
pop
scas
mov
pop
push
int
rcll
and
bound
inc
sbb
iret
push
sub
sbb
or
add
xchg
js
ret
or
xchg
pop
int
std
inc
lods
subl
cmp
or
xlat
push
pop
repnz
jno
mov
aas
cmpsb
dec
in
sbb
jge,pt
mov
inc
push
shl
jg
fstl
push
mov
mov
and
shlb
test
jg
pop
arpl
cmp
mov
adc
clc
dec
fiadds
or
aad
cmp
test
addb
xchg
ror
mov
pop
add
pop
ljmp
inc
mov
and
ds
mov
jb
imul
push
std
aam
scas
jle
inc
test
xchg
mov
lock
sti
loopne
imul
adc
jae
jmp
jmp
nop
pop
das
in
or
pop
jbe
cmp
xor
inc
dec
scas
inc
xor
lret
sub
pop
and
xor
mov
mov
ds
aaa
or
loop
repnz
fs
xchg
lods
sbbl
stos
push
or
xchg
mov
imul
add
cmpl
into
xor
les
addb
push
and
mov
test
or
mov
pop
leave
shl
adc
dec
adc
fisubs
sub
and
sarb
popl
out
pop
pop
jae
and
scas
jmp
push
data16
sti
push
rcrb
enter
mov
fldl
dec
ss
sub
jb
test
inc
test
rcrl
push
scas
pop
cmpsl
sbb
scas
push
fdivrs
movl
jmp
xchg
xchg
cmp
cmp
and
into
movl
fisttpll
xor
mov
inc
and
aad
popa
xchg
pusha
cmp
mov
sbb
sub
insl
iret
cmp
sub
xchg
test
repz
jnp
call
scas
rcrb
and
movsb
shll
es
movsl
push
inc
negb
inc
and
fwait
xor
push
pop
sti
ficomps
xlat
sti
enter
xor
xor
push
cli
out
dec
int
adc
push
fsts
xor
data16
test
fdiv
into
dec
jnp
and
sub
pop
rclb
adc
xor
pop
jnp
xor
xor
xor
mov
loop
xor
push
jmp
das
ror
mov
and
ss
test
mov
inc
sub
xor
imul
lea
pop
xor
sub
or
adc
dec
scas
mov
mov
mov
test
ja
lea
das
pop
adc
mov
test
loope
or
mov
dec
sarl
mov
dec
push
test
loope
or
mov
mov
mov
mov
and
testl
push
stc
pop
pop
movb
mov
gs
ret
push
sahf
cmp
xor
push
das
lea
fs
inc
mov
mov
int3
imul
mov
push
and
sub
jl
dec
and
sarl
adc
and
cmc
or
aas
lea
sbb
cmpl
xorb
and
clc
mov
rclb
cltd
mov
dec
or
xchg
dec
movsl
mov
xchg
ret
bound
adc
and
jmp
je
add
in
xor
call
cmpsl
mov
dec
mov
pop
shrd
mov
mov
call
in
xor
jbe
scas
dec
cld
lock
mov
mov
mov
add
xor
gs
data16
aam
mov
sub
mov
scas
cwtl
jmp
cmp
and
mov
dec
loopne
test
adc
sub
adc
mov
mov
movsl
pop
mov
adc
mov
cmp
adc
shrl
mov
mov
jnp
sarb
push
and
aas
sub
aas
imul
or
mulb
cmpsb
movsl
jbe
push
in
stos
pushf
jbe
clc
mov
lcall
adc
mov
inc
and
faddl
inc
fldl
pop
and
jge
lods
sbb
mov
jne
aad
dec
call
add
mov
adc
aam
sarb
lret
mov
and
je
xor
xor
push
jmp
mov
inc
jp
push
fnstenv
les
adc
outsl
out
rcl
add
inc
in
mov
icebp
xchg
repnz
ljmp
push
mov
xor
leave
insl
loope
xor
mov
pop
adc
adc
inc
sgdtl
int
add
test
pop
push
jb
xor
add
push
lods
hlt
fbld
ret
stc
xor
sti
sub
or
jg
jl
fxtract
cmp
cmp
mov
cli
jg
and
mov
dec
mov
pop
ds
xor
fisubl
mov
sbb
cmp
and
ds
mov
xchg
add
jle
mov
shrb
adc
cmp
inc
mov
sub
and
data16
pop
imul
repnz
dec
cld
push
dec
jb
bound
fst
mov
dec
cltd
xchg
lds
sti
pushl
push
sub
mov
pop
test
ja
rorb
sbb
bound
addr16
xchg
cmpsb
leave
dec
test
in
stos
xchg
stos
icebp
jb
adc
and
adc
shlb
ret
cmp
xchg
push
mov
sarl
jmp
clc
mov
mov
and
lods
out
insb
call
pushf
arpl
adc
pop
fidivs
jo
fiadds
lcall
fildl
cld
fisubrl
fcoml
sbb
test
aas
insb
cli
stc
lret
faddl
incb
or
std
inc
sahf
out
loopne
push
sti
push
mov
pop
stos
rcr
push
pop
int
scas
into
or
or
add
pop
or
sbb
insl
test
int3
xor
jg
repnz
sbb
insl
jns
cmp
cli
sub
sbb
test
pop
fsubs
add
sub
cmp
sub
mov
in
cwtl
or
movsl
push
jecxz
fiadds
jmp
repz
icebp
mov
xchg
jmp
xchg
scas
pop
push
cmp
xor
push
cmp
xchg
adc
sbb
adc
test
adc
ss
ds
sub
mov
or
cmp
mov
and
lcall
test
insl
push
mov
out
sahf
jp
jp
fsubp
pop
cmp
inc
negb
mov
aas
imul
cli
jb,pn
mov
sahf
jle
test
sbb
add
cli
jnp
inc
sub
ljmp
mov
dec
scas
lea
mov
leave
lea
int
sbb
mov
add
cmc
adc
lds
and
lret
adc
jb
testl
dec
and
adc
mov
movsb
orb
outsb
sbbb
pop
or
dec
dec
lcall
movsb
pusha
lcall
mov
sbb
cmpsb
gs
fildll
insl
aam
ds
sbb
cmp
inc
pop
mulb
lcall
adc
daa
fs
inc
les
mov
jno
add
hlt
jae
dec
add
lcall
push
inc
lds
and
lea
adc
loope
jo
repnz
mov
cs
cmp
dec
shlb
daa
xorb
pminub
in
stos
pop
or
inc
mov
xchg
mov
inc
fmull
or
or
adc
arpl
jb
jb
sub
ret
jge
push
imul
push
fsts
out
fwait
or
std
loop
repz
pop
sub
inc
scas
mov
pop
push
cmc
loope
sub
inc
push
jmp
mov
pushf
test
sbb
push
jno
adc
out
dec
es
xor
dec
aam
imul
iret
xchg
or
or
repnz
test
ror
loopne
adc
jno
push
cmp
mov
mov
imul
mov
push
push
cwtl
addr16
jae
inc
jns
jp
mov
adc
imul
pop
stc
imul
es
mov
xor
icebp
out
movsl
mov
mov
flds
mov
cli
addr16
xchg
inc
fnstenv
stos
pop
aas
div
sti
and
pop
decb
in
fdivs
ret
xchg
test
mov
xor
pusha
lret
mov
gs
jbe
mov
jae
lock
mov
sbb
dec
and
bound
inc
jg
mov
mov
lock
test
sahf
xor
dec
jge
mov
add
jnp
fisttps
in
out
inc
aad
push
xor
mov
mov
pop
in
call
pop
dec
and
push
shlb
insl
push
dec
jecxz
daa
cmp
test
lock
jae
mov
jnp
and
xchg
int
lock
ror
movsl
outsl
in
dec
jbe
cmp
inc
or
imul
mov
movsl
insl
pop
test
inc
jle
into
or
mov
jle
lds
inc
icebp
xchg
jle
std
lods
scas
inc
mov
jle
jne
cmpsl
mov
inc
stc
jne
adc
roll
sahf
inc
xchg
out
pop
stos
fiadds
cmp
sti
push
mov
lahf
mov
cmc
aad
mov
sahf
test
cmp
pop
xchg
subb
imul
icebp
pop
pop
nop
ds
xlat
into
pop
sti
and
and
ss
mov
pushf
ja
out
rclb
cmp
xchg
push
in
xchg
scas
push
push
imul
push
ss
mov
add
pop
xchg
stos
int
mov
cli
adc
rcrl
inc
mov
and
mov
pop
jmp
jge
and
pop
adc
fidivrl
popf
cmp
sbbb
jg
or
arpl
ftst
add
nop
out
mov
call
es
nop
jecxz
and
add
push
push
and
xor
rcrl
pop
ret
mov
pop
mov
jle
dec
push
jge
adc
jno
adc
idivb
insl
xchg
pop
jnp
cmp
jge
mov
add
adc
pop
arpl
jb
and
notl
xlat
enter
test
xor
aas
jmp
mov
ds
loopne
cwtl
xor
pop
gs
mov
xlat
aad
add
mov
push
xor
repnz
daa
jmp
aam
cli
fimuls
sarb
out
scas
inc
or
and
push
add
lock
scas
imul
sti
jb
pop
mov
sub
mov
mov
xor
outsl
ljmp
pusha
jno
mov
je
icebp
out
or
daa
dec
and
test
lock
push
scas
in
jl
or
and
mov
outsb
hlt
or
dec
jne
sbb
pop
xchg
lret
das
lock
addb
mov
sbb
mov
ss
out
cmc
outsl
inc
orb
je
out
stos
js
ss
mov
mulb
out
sub
loop
mov
jg
jne
jmp
loope
adc
popa
in
adc
mov
daa
je
lds
cmp
dec
inc
out
push
movsb
cmc
push
pop
sbb
fimull
or
int
jmp
add
mov
push
repz
lea
mov
sbb
xor
pusha
mov
gs
or
xor
push
cmp
lcall
mov
enter
push
xor
xor
imul
xlat
mov
push
loop
xor
sbb
inc
jo
js
idiv
sub
push
sbb
inc
add
inc
adc
pop
mov
xor
ret
in
inc
xchg
lock
cmp
pop
ljmp
stos
mov
mov
dec
pop
test
mov
ret
jno
decl
and
fists
out
pop
xor
aad
jnp
xor
cmp
sahf
iret
and
mov
cmp
ja
jne
push
cmpsb
and
cmp
cmp
pushf
sbbb
add
jp
adc
sbb
arpl
pop
lds
out
nop
xchg
ljmp
loopne
lods
hlt
negl
add
sbb
shrb
mov
loopne
xchg
rep
subb
aas
xor
mov
aaa
pop
xor
sub
jno
or
subl
and
xchg
mov
dec
cld
das
and
mov
or
ja
bound
xchg
mov
rolb
lods
add
and
icebp
jbe
imul
push
das
lret
cmpb
das
adc
mov
ljmp
fsin
les
pop
mov
into
xor
les
into
add
icebp
cmp
out
lret
fdivrs
lods
ljmp
icebp
lcall
aad
xchg
jno
call
ss
out
xor
jno
cmp
pop
add
xchg
outsl
xchg
arpl
mov
push
jae
fnsave
inc
dec
mov
test
xchg
enter
jbe
and
nop
cmp
cmpb
scas
imul
or
or
fdivrs
ficomps
dec
jb
icebp
and
nop
mov
clc
imul
add
sbbb
add
lds
icebp
mov
inc
jl
notb
loopne
pop
xor
jbe
outsb
lock
cmc
adc
or
and
jno
fcoml
dec
adc
movsb
inc
std
mov
jp
and
cs
mov
movsb
mov
mov
mov
adc
cmpb
imul
jne
sbb
mov
mov
insl
aad
in
sub
or
rorb
and
cmpsl
mov
std
pop
pop
fcoml
out
lds
sti
mov
inc
or
clc
push
adc
lock
and
xor
xor
daa
pop
cmp
test
jecxz
loopne
fwait
pop
or
pop
cmp
std
xor
or
pop
test
jne
movsb
gs
mov
mov
jns
stos
mov
dec
xor
jg
jecxz
adc
fistpll
pop
imul
push
sub
stos
sti
sbb
pop
adc
mov
mov
ljmp
movsl
adc
pop
jno
adc
out
stc
imul
sub
pop
in
push
dec
cltd
mov
shll
repnz
pusha
pop
rclb
ret
adc
jp
sbb
pop
sbb
rolb
lret
push
pop
dec
mov
cmp
xor
pushf
adc
nop
mov
repnz
nop
pushf
mov
lock
mov
push
jb
pop
test
stc
scas
fildll
inc
xor
jae
lods
mov
lds
addr16
dec
add
cmp
cwtl
adc
ljmp
test
dec
mov
not
jbe
stos
out
xchg
das
dec
mov
fs
stc
pop
test
bound
mov
imul
or
ds
push
fistpl
xor
repz
fsubrl
mov
inc
and
idivl
pushf
xchg
adc
or
jge
sub
incb
loope
xor
faddp
add
inc
lret
out
popa
sti
cwtl
cmpl
jl
sbb
mov
leave
pop
inc
xchg
cli
pop
pop
mov
xlat
das
int3
icebp
repnz
sub
loope
popf
arpl
cli
mov
xchg
mov
outsl
sub
mov
insl
xor
in
pop
mov
mov
mov
jo
movsb
mov
icebp
jbe
ljmp
aaa
jae
and
inc
adc
scas
sbb
cwtl
dec
jbe
lock
lea
dec
insb
dec
pop
xlat
cmp
mov
add
ja
cmp
add
adc
loop
add
data16
repz
repz
push
mov
pusha
push
aas
movsl
inc
push
xchg
push
dec
mov
int
add
pop
sub
outsl
les
pop
fldcw
inc
push
jno
mov
dec
adc
ss
out
jo
ds
mov
ds
mov
ret
and
mov
sbb
bound
cmp
jb
fimull
mov
out
xor
dec
sbb
adc
sub
sti
out
adc
cmp
dec
divb
ljmp
push
loope
jge
add
pop
mov
mov
sub
std
int3
inc
xor
push
push
mov
pop
pusha
mov
mov
push
sbb
cmp
pop
clc
mov
rclb
cmp
cmp
adc
cld
ret
fdivrl
xchg
xchg
add
mov
sub
aam
xorb
sub
int
in
addb
dec
pop
lea
fnstenv
test
xor
scas
cmp
outsl
xor
sbbl
inc
fdiv
je
xor
mov
je
movsl
loop
movsb
cltd
int3
pop
or
sbb
mov
jecxz
pop
push
or
mov
mov
leave
imul
jbe
testb
cmp
sbb
pop
or
push
sbb
lret
shll
mov
mov
out
mov
push
mov
cmp
dec
mov
lock
ret
mov
cltd
pop
mov
lahf
test
bnd
sarb
test
leave
sub
stos
mov
scas
add
push
daa
sbb
out
loopne
lods
fs
push
arpl
ret
fistpl
bound
mov
jg
xchg
xor
scas
dec
mov
loopne
hlt
insl
neg
jno
rorl
mov
cmp
inc
pop
mov
shl
jo
lahf
sti
loope
cmp
cld
imul
pop
sub
in
rcrb
repnz
xchg
sbb
loopne
and
dec
adc
adc
fidivrs
xor
jnp
fsubrl
fnsave
outsl
xchg
mov
fwait
ds
mov
movaps
push
mov
fnstenv
xor
mov
ljmp
mov
sbb
addb
jne
loope
push
xor
jmp
test
inc
mov
roll
test
pusha
jae
imul
sbb
push
add
cld
ja
pushf
cmp
pop
push
cmpb
int
and
mov
or
dec
mov
popf
ss
adc
xor
mov
cmpsb
arpl
je
mov
mov
jmp
sahf
inc
sbb
daa
cs
push
jno
add
sbb
mov
push
icebp
cli
push
inc
cli
adc
cmp
stos
sub
pop
dec
inc
loopne
mov
jbe
mov
movsb
xor
shlb
icebp
orb
mov
mov
bound
sub
imul
inc
push
pop
jmp
jno
gs
cmp
mov
movl
cmpsl
sub
mov
jge
xchg
mov
cmp
dec
rclb
push
mov
inc
mov
xor
aaa
pop
xchg
jmp
mov
adc
test
push
fildl
sbb
mov
cmpsl
aam
xor
push
test
movsb
push
xor
push
test
mov
lret
mov
lea
add
mov
push
imul
push
test
into
es
sub
or
mov
mov
mov
sub
orl
mov
add
jbe
pusha
sub
mov
mov
adc
mov
enter
jl
mov
xorb
sti
iret
shrl
movsb
outsb
fs
shll
cs
mov
jmp
jge
cmpsl
sbb
sbb
ds
pushf
pop
xchg
mov
cmp
pushf
test
cs
pop
and
aas
shl
xchg
std
add
sbbl
fisttpll
sub
and
shlb
movsb
mov
mov
loopne
cmp
scas
stc
mov
rcrl
and
jmp
push
mov
int
and
repnz
and
sbb
popl
fsubs
ljmp
mov
sbb
mov
icebp
orl
in
insl
xchg
add
lods
cmp
popl
jmp
cmpl
xchg
lcall
jns
cmp
add
dec
sub
aad
inc
mov
ficoms
jg
dec
cld
xor
lret
ds
pop
aas
cmc
push
or
testl
out
call
jno
ljmp
jmp
cmp
mov
pop
scas
adc
sub
mov
xor
inc
jle
in
movsb
mov
shlb
push
andl
into
ficomps
inc
icebp
cld
cld
out
cwtl
xchg
jg
aas
rcr
jge
cwtl
mov
fisubrs
jne
mov
cmc
scas
loop
add
push
sub
sub
xchg
and
and
mov
mov
sbb
aas
addr16
jge
aam
pushf
jb
mov
adc
or
test
xchg
or
mov
mov
pop
lcall
and
pop
mov
ftst
dec
sbb
jo
sub
cmp
testb
and
clc
je
loopne
inc
lea
push
imul
cli
out
js
popf
or
lods
fs
aam
lea
imul
xchg
mov
cmpsb
in
adc
and
add
mov
jmp
clc
dec
cs
mov
xchg
lret
imul
and
out
sub
dec
xor
std
mov
or
inc
adc
and
out
and
stc
cmp
mov
cs
rcrl
aam
adc
out
ficompl
xlat
dec
fidivrs
notb
jnp
test
inc
sti
xchg
shr
popf
scas
adc
adc
subl
and
and
orl
mov
push
cli
and
and
fnsave
cmpsl
mov
sti
add
fld
std
sub
sahf
adcl
sbb
daa
xchg
shlb
inc
rcrl
in
adc
mov
mov
popf
mov
and
sbbl
mov
cwtl
call
int
test
push
inc
mov
push
adc
rcrl
adc
jb
xor
subb
mov
mov
dec
pushf
add
fst
aas
rcl
in
mov
repz
cmp
cmp
sbb
or
ljmp
sub
sti
push
std
movhps
jb
mov
into
jl
sti
mov
push
loop
imul
mov
mov
jb
mov
inc
inc
mov
push
repnz
xor
mov
andl
imul
and
pop
jg
iret
push
sub
loop
dec
cmp
lea
iret
jnp
movsb
mov
shrb
dec
js
sub
out
cli
cmp
loope
lock
ror
popf
outsb
dec
nop
xchg
iret
sub
pushf
xchg
mov
push
adcb
popf
cmp
lret
cmpsl
lcall
mov
pusha
out
push
xchg
fisubrs
andb
shlb
adc
mov
popa
dec
dec
dec
aas
shrl
rorl
pop
add
test
jecxz
add
xchg
cltd
push
adc
adc
pushl
mov
cmpl
mov
jno
loopne
sub
xor
inc
ds
sbb
shll
jae
leave
in
add
je
in
test
sub
sti
pushf
push
fsincos
daa
xchg
std
shl
mov
addb
add
sbb
mov
sbb
pushf
std
addb
repz
adc
in
int
mov
mov
mov
rclb
in
xchg
adc
ds
xorb
shll
mov
aaa
lock
fsubp
aas
sti
les
pop
shll
ss
notb
test
jecxz
mov
cmpb
inc
pop
pop
jmp
loopne
je
jg
aas
xor
cld
and
add
sbb
or
fidivs
pop
mov
jmp
imul
ret
inc
adc
out
loop
loop
orl
cli
dec
imul
lea
pop
insb
sbb
mov
imul
mov
sbb
mov
fwait
mov
aad
lods
in
je
cmp
jg
mov
xor
and
mov
mov
stos
into
jno
sbb
in
mov
xor
out
lock
inc
pop
jb
jg
ss
mov
imul
ret
into
xor
idiv
xchg
pop
pop
mov
add
jnp
mov
ror
bnd
in
cmpsl
movsl
jb
mov
push
rcrb
ljmp
mov
pop
out
jnp
lret
pop
icebp
outsb
push
add
cmp
pop
out
imul
add
mov
mov
jl
adc
bound
xor
or
or
fcoml
jg
imul
shll
jmp
inc
stos
mov
dec
notb
and
mov
xchg
push
das
dec
nop
and
mov
mov
xorb
shrb
push
leave
scas
pop
pushl
dec
stos
xor
pop
sbb
mov
imul
test
movl
pushf
mov
adc
or
cwtl
pop
sbbl
xor
and
cmpsl
stos
outsl
scas
leave
lock
ds
push
mov
and
mov
mov
movsb
mov
out
sub
jb
mov
ret
adc
push
shr
pop
pop
lea
rorb
test
sub
fnstcw
cmpl
pop
pop
call
sub
fimull
dec
push
lock
mov
and
mov
fwait
cli
imul
shrl
mov
xchg
cmp
jp
add
mov
jmp
pop
or
xorb
inc
rcrb
fs
mov
fxch
push
jmp
mov
es
ds
xor
or
add
cmp
arpl
push
push
and
repnz
add
adc
lock
or
xchg
lea
cmp
adc
lock
loopne
cmp
xchg
and
call
mov
mov
inc
jno
cwtl
ss
jne
mov
mov
jnp
scas
sub
xor
in
sub
jne
cmpsb
fdivs
push
xor
loopne
repnz
ss
mov
testb
test
insl
adc
ret
jne
jl
test
xlat
std
mov
int3
jno
divb
lcall
jl
cwtl
mov
mov
and
sbb
lret
stc
and
mov
jle
xor
xchg
ficoms
cli
or
rclb
sub
imul
inc
push
xor
adc
xchg
or
insl
test
cwtl
push
sub
jns
xor
lock
add
rorl
jb
nop
mov
sub
jnp
cmp
jns
xor
or
mov
ret
add
pop
sbb
shll
icebp
sub
inc
mov
xor
mov
leave
call
ss
fs
push
inc
cmp
lock
add
dec
push
bound
mov
nop
add
mov
xchg
sbb
jnp
mov
mov
mov
xchg
test
and
ss
sti
xchg
and
icebp
test
jecxz
xchg
mov
enter
mov
xchg
push
jmp
aad
into
mov
gs
mov
rcl
mov
mov
xor
mov
push
xchg
adc
inc
mulb
mov
jl
push
add
jae
pop
cli
mov
push
rclb
mov
push
add
jecxz
adc
jmp
xlat
fwait
repz
mov
ss
sahf
mov
jp
dec
add
pop
xor
fsubrl
adc
fisubrs
shlb
lahf
add
mov
push
movsb
in
imulb
push
stc
inc
xchg
mov
ds
data16
aaa
pop
mov
mov
je,pn
push
addr16
das
sub
jb
mov
mov
adcl
or
mov
jl
pop
sbb
jle
adc
cmp
mov
sti
out
jae
shlb
jo
cmp
or
decb
xchg
fiadds
jno
xchg
mov
inc
scas
xchg
sub
inc
scas
jmp
adcb
inc
jne
clc
cmp
cmp
into
clc
xlat
jecxz
lock
popl
or
mov
sub
jp
mov
dec
mov
movd
lock
imul
popf
jg
pop
lret
mov
bound
ljmp
sarb
int3
scas
std
inc
or
push
pop
aam
cld
fbld
ljmp
jb
jb
jo
js
in
aam
mov
leave
dec
sbb
repnz
call
test
inc
push
es
in
jno
push
sbb
xchg
test
imul
xchg
jno
imul
out
enter
cwtl
add
add
mov
adc
addl
ficomps
add
sahf
inc
xchg
subl
xchg
xor
mov
adc
xlat
jne
cmp
jbe
inc
adc
leave
mov
es
add
idivb
lods
jnp
cld
mov
scas
or
mov
iretw
inc
adc
fnstcw
sub
mov
arpl
outsb
push
cld
je
fcoms
add
jg
aaa
mov
mov
mov
xchg
and
mov
ss
jmp
push
sarl
adc
sbb
incl
xor
lcall
movsl
cltd
rcll
ss
out
jb
or
hlt
divl
sub
mov
stc
and
mov
subb
aas
add
or
loopne
ror
sbb
xor
enter
cmpsb
ret
mov
dec
jmp
dec
mov
sub
and
inc
daa
xorb
stos
jnp
inc
jmp
jo
cmp
dec
stos
mov
xchg
or
fnstcw
xor
mov
in
dec
xlat
mov
mov
cmp
mov
push
and
dec
dec
icebp
leave
mov
adc
mov
dec
mov
daa
stc
fs
sub
xor
repnz
adcb
lea
repz
xchg
pushf
nop
cli
lahf
push
out
scas
imul
loope
and
icebp
sub
mov
ss
test
aaa
in
adc
jg
insb
repnz
icebp
pop
jle
mov
loopne
cmc
and
leave
bound
aad
pusha
jne
or
ja
daa
outsl
aam
xor
push
sub
jae
data16
or
pop
mov
int
dec
cs
mov
mov
inc
hlt
in
mov
add
pop
hlt
pop
jae
cmc
jecxz
or
icebp
mov
fstp
loope
sbb
inc
jno
decb
mov
add
jno
lret
cmp
push
jae
outsb
call
push
cltd
cmpsl
cltd
pushf
jns
sbb
lret
xor
or
pop
push
add
fcoms
mov
rolb
adc
jp
cmp
push
dec
push
fdecstp
ficoml
mov
aaa
cmp
into
push
repnz
xchg
es
xchg
add
mov
ficomps
mov
popf
mov
out
movsb
mov
cli
call
es
sub
xor
ret
es
lret
sbb
aad
xchg
pop
stc
xor
loop
push
mov
mov
xchg
sbb
add
sti
pop
bound
xorl
mov
ss
enter
or
lods
jl
or
mov
out
xor
stc
lret
icebp
inc
cli
lahf
jo
imul
in
add
mov
test
icebp
pushf
adc
xchg
movsl
sub
pop
inc
jb
xor
imul
fs
daa
or
pop
xor
iret
cmpsb
mov
pop
jbe
imul
xchg
andb
pop
inc
pushf
sarb
mov
pop
cs
mov
jge
lds
adc
push
loope
out
outsb
cld
jb
fsubrl
cltd
jno
cmc
lock
sbb
adc
int
out
jo
je
fisttps
addl
imul
add
cmp
movsb
sahf
push
scas
push
mov
mov
lcall
xchg
nop
fisttpll
addr16
jb
dec
cld
sbb
lods
pop
mov
jbe
jb
jae
arpl
ja
mov
das
out
jae
popa
or
loopne
pop
movsl
mov
rcrl
lock
sbb
cs
stc
push
test
cmp
and
mov
shr
cld
xlat
cmpsb
jne
adc
dec
in
jle
adc
push
fsts
pop
jns
mov
adc
adc
fisttpll
cs
push
idivb
fcmovnu
out
test
push
mov
cltd
mov
cmpb
dec
leave
movsl
pop
add
enter
mov
ds
cmp
lcall
in
cltd
test
jg
jmp
sub
add
push
mov
and
lahf
push
mov
hlt
xor
adc
xlat
cmpsl
rsm
sbb
rcrb
fbstp
jb
sub
nop
and
adc
ret
lods
pop
pop
pop
add
and
ret
mov
aam
mov
and
std
roll
jge
inc
mov
mov
push
test
out
mov
sub
fbstp
ja
xor
jg
push
std
icebp
mov
mov
mov
clc
in
and
repnz
pusha
shl
iret
mov
pop
xor
outsl
push
mov
sarb
sbb
sub
fldt
add
add
daa
and
adc
repnz
repnz
loopne
cmp
js
xchg
and
xor
mov
jb
cs
mov
xorb
mov
out
pop
jg
lret
test
mov
clc
js
hlt
int
mov
das
cld
sub
mov
mov
fsubl
cmp
mov
dec
jge
js
mov
mov
pop
adc
mov
push
mov
xor
nop
mov
mov
jbe
jb
rcrl
push
notb
mov
or
stos
xchg
lcall
hlt
sahf
mov
or
jo
fnstsw
mov
ss
out
mov
imul
jge
stos
mov
sti
jmp
ja
pusha
adc
sub
mov
cs
aas
ss
nop
adc
je
xchg
sub
mov
adc
or
sub
mov
imul
jns
or
sbb
loope
jo
cmp
add
dec
push
mov
jns
cld
sahf
mov
es
mov
movsl
cs
mov
xor
inc
xor
aam
sub
jge
mov
addr16
xor
xlat
sub
cld
icebp
or
and
fs
xor
cmp
dec
dec
and
adc
cmp
pop
inc
mov
sbb
mov
int3
sub
and
and
outsl
mov
mov
adc
fmul
mov
sbb
mov
nop
sarb
push
sub
xchg
out
mov
and
test
add
adc
insb
push
cs
add
lret
and
test
repnz
clc
add
stos
add
inc
inc
pop
je
or
mov
mov
popf
mov
sub
cmp
sub
call
mov
push
mov
fistpl
xor
das
jp
jo
push
test
sbb
mov
mov
stc
lock
jle
mulb
add
ficomps
lahf
cmp
sbb
jecxz
adc
sub
adc
add
mov
cmp
out
jecxz
std
mov
adc
adc
pusha
or
mov
jo
or
mov
pop
jb
jl
ds
sub
xor
cld
cmp
mov
adc
daa
jb
mov
mov
cmp
sub
ja
xchg
and
xor
xor
movl
pop
and
adc
shl
xor
test
mov
jno
loop
iret
stos
sub
pop
adc
arpl
sub
adc
mov
lds
jbe
aas
mov
or
mov
popf
xchg
sar
mov
mov
xor
loop
ret
mov
dec
and
bound
xor
adc
add
loope
shll
test
sahf
jecxz
rcll
clc
push
outsl
push
in
push
dec
rclb
clc
mov
jp
icebp
xchg
mov
jne
lea
nop
into
mov
xchg
xchg
lcall
dec
xor
mov
mov
or
push
inc
dec
sub
test
mov
ljmp
sub
or
pop
icebp
mov
fcmovbe
leave
jge
loopne
iret
pop
and
int3
mov
dec
fiadds
inc
pop
jp
mov
mov
ss
mov
ljmp
jle
mov
xor
lea
mov
adc
mov
mov
mov
movsb
inc
int
cmp
cmp
cwtl
cli
test
adc
mov
cld
jmp
adc
xchg
sbb
cmp
and
pushf
pop
int
clc
and
insb
push
imul
scas
add
dec
mov
and
mov
daa
scas
lcall
push
repnz
mov
movsl
push
mov
adc
dec
or
sahf
je
ja
add
xor
add
mov
jmp
mov
xor
mov
xor
faddl
arpl
repnz
fimull
jns
testl
decb
adc
mov
jl
out
lods
scas
add
pop
adc
xor
imul
dec
jno
shrb
repnz
stos
xchg
repnz
push
xlat
shlb
es
into
lahf
inc
jle
test
xor
test
mov
mov
pop
push
ljmp
out
ss
loopne
jnp
out
inc
lcall
loopne
dec
lcall
and
mov
es
pop
fstps
rcl
loopne
sbb
xor
flds
or
mov
xchg
ret
insb
loop
in
push
jbe
orl
icebp
sbb
mov
mov
xchg
fimuls
push
je
push
jl
adc
ds
repz
sbb
lret
shll
jb
adc
lods
loop
ret
lea
xor
push
pop
cmpsl
in
dec
mov
cmp
mov
repnz
call
jae
lods
rclb
mov
cmc
test
sahf
je
adc
push
jge
adc
out
push
int3
sub
mov
sub
pusha
xor
xor
dec
sub
imul
adc
inc
jb
xchg
pop
mov
icebp
or
lcall
out
push
lea
lock
cwtl
and
repnz
test
dec
sahf
je
push
push
and
cmp
xor
adc
adcb
and
mov
test
adc
push
dec
lock
sub
int
popa
lods
or
push
pop
cmp
negb
and
mov
popf
xor
clc
mov
push
aad
cmpb
mov
test
jecxz
aas
loope
mov
and
pusha
dec
jle
shll
into
loope
push
xor
jb
clc
sbb
pop
xor
scas
into
cmp
or
mov
loopne
mov
and
fstpt
mov
cmp
pop
pop
xor
xchg
hlt
cmpsb
xor
mov
test
lods
jle
fists
push
clc
add
insl
mov
nop
mov
inc
and
xor
mov
clc
lret
loopne
test
and
js
fldt
xchg
inc
pop
bnd
repnz
jns
shr
into
mov
repz
add
loop
inc
push
rcrb
andl
scas
inc
and
shl
orb
dec
xor
mov
cmpsb
pop
out
push
pop
xchg
jae
into
lock
sub
jb
loopne
mov
repnz
std
and
jp
jle
mov
and
jmp
lcall
mov
pop
sbb
jo
mov
mov
push
popf
scas
shlb
xchg
sahf
cwtl
sbb
pusha
int
add
xor
rclb
mov
cmp
daa
loopne
inc
loop
jmp
lret
inc
repnz
jmp
cwtl
add
push
dec
xchg
popf
rol
idivb
shlb
mov
movsl
adc
mov
insb
stos
test
std
and
out
jecxz
or
and
ds
scas
dec
or
aas
not
pop
jo
fnsave
inc
jo
sbb
fcomp
clc
jno
push
lea
push
out
orl
repz
and
cmpsb
cld
decl
sahf
aas
or
mov
rcll
push
pop
dec
nop
xor
push
ss
mov
jmp
cld
mov
clc
lods
insl
loopne
and
cmc
in
pop
xchg
movsb
rcl
pop
mov
mov
xchg
cmp
rcll
daa
add
jno
ret
ss
push
insl
pop
xchg
mov
movsb
lcall
sub
and
mov
dec
mov
mov
push
pushl
js
dec
pop
and
sub
jb
dec
mov
jb
or
jae
xchg
addb
pop
add
sbb
inc
daa
inc
dec
inc
sub
dec
mov
popa
pop
adc
jp
outsb
adcl
mov
stos
ret
shl
push
stos
sbb
fnstenv
sub
ljmp
xor
push
or
scas
cmpl
mov
mov
or
dec
sbb
orb
fsub
jg
cli
push
mov
roll
loop
xchg
add
xor
inc
sub
sub
and
add
pop
sbb
dec
shrl
cs
loopne
push
out
sub
jno
outsb
loope
outsl
mov
mov
mov
push
mov
and
insb
xor
and
lret
shlb
jne
pop
mov
adc
stos
fldt
xchg
mov
clc
cld
jge
bound
mov
mov
scas
mov
sti
mov
shll
xor
mov
xchg
iret
mov
sub
loop
sbb
cli
out
mov
push
xchg
jno
test
imul
push
cmp
or
inc
fistpl
xchg
into
pop
out
and
stos
lods
xor
add
sbbl
ljmp
cmp
fcoms
repnz
adc
shll
insb
xor
out
mov
rcll
xchg
test
mov
pop
loope
lds
fisubs
iret
shrb
iret
scas
mov
adcb
or
sahf
pop
sub
movsb
iret
mov
mov
stos
outsl
cmc
inc
or
popl
fiaddl
mov
or
movsb
mov
shll
xor
lea
bound
roll
or
jmp
shll
arpl
loopne
inc
icebp
fbstp
aam
leave
js
mov
aad
dec
jg
sbb
and
push
push
mov
jmp
lahf
xlat
loope
cmpb
or
mov
popf
and
mov
pop
push
fwait
cmp
add
cli
adc
add
test
fcmovu
adc
mov
fsubr
fstpl
fistpl
push
dec
pusha
mov
sti
inc
icebp
mov
and
rcrl
jo
dec
sbb
xchg
mov
stos
adc
or
jne
cmc
addl
xchg
ljmp
cmp
ret
inc
push
or
test
imul
sti
shrl
mov
jecxz
push
push
idivb
adc
repnz
hlt
cmp
or
mov
popa
pop
mov
jb
lds
into
repz
pop
jno
add
mov
rcl
adc
mov
ret
scas
pop
sub
push
repz
aad
add
add
lahf
stos
lods
test
sarl
xchg
mov
mov
dec
daa
stos
out
or
sbb
cltd
mov
xor
fidivrl
jb
lcall
lock
or
inc
imul
xor
stos
mov
cmc
cli
push
ror
jne
sti
xchg
stc
push
fnstsw
add
je
mov
mov
inc
push
popa
lock
movsl
dec
mov
in
mov
push
cli
fcompl
cmp
mov
sarb
mov
loop
jnp
or
jae
dec
clc
filds
lock
dec
adc
xor
pop
mov
stc
or
mov
jg
imul
inc
mov
push
add
repnz
repnz
mov
imul
cmp
and
mov
lods
daa
mov
push
xor
jmp
iret
loop
adc
movsb
test
test
cmp
xchg
xchg
sbb
jb
mov
mov
out
divl
call
cli
inc
cmpsb
clc
cmpsb
adc
movsb
shrb
mov
dec
adc
xor
jnp
mov
in
xor
shrb
pusha
pop
pop
inc
mov
xor
stos
and
jns
fcoml
or
xchg
or
movsb
lods
mov
pushf
cltd
fwait
sub
add
bound
xor
out
and
aad
pop
test
add
fisttps
push
aas
adc
pop
arpl
mov
pop
cmpsl
sub
loope
and
shrl
jle
pop
pushf
xor
je
jns
push
sub
push
movsl
adc
daa
pop
xorb
test
push
or
adc
movsb
sub
mov
jns
std
rcr
xchg
pop
call
pop
push
adc
jge
shll
popf
andb
fnstsw
xchg
mov
aas
jg
testb
fdivs
xor
and
fnsave
and
into
int
sbb
mov
add
lods
and
imulb
mov
repnz
cmp
cmp
sub
and
mov
mov
or
and
stos
das
call
stos
ret
ret
cld
pushf
mov
inc
mov
mov
fnstenv
cmpsb
mul
or
icebp
mov
add
gs
or
mov
sub
lock
mov
cmpsl
push
cmp
stos
adc
add
cmp
mov
pop
loopne
pop
jbe
mov
fwait
jmp
shrl
add
repnz
enter
stos
sbb
push
cli
or
repnz
test
lcall
cmp
repz
das
dec
andl
xorb
outsl
icebp
loope
and
jno
rolb
pop
jg
aad
fnstcw
mov
xlat
in
bound
daa
out
xchg
mov
incb
jbe
outsb
cmc
mov
mov
cs
scas
jns
inc
jmp
push
xchg
pop
mulb
xchg
iret
adc
mov
sub
orb
pop
fwait
mov
fcoml
xor
cmpb
mov
xor
es
aas
mov
aam
jle
push
loopne
scas
subl
pushf
and
dec
pop
jle
xor
orb
out
adc
scas
mov
mov
mov
fs
jmp
and
push
aas
cmp
and
repnz
outsb
inc
adc
xor
shl
add
mov
mov
fldcw
cmpsb
imul
xor
mov
stos
and
jbe
test
sub
jl
xchg
and
or
sbb
xchg
rolb
add
adc
mov
push
popf
and
shlb
jecxz
and
test
mov
aad
stc
or
sbb
scas
dec
mov
lcall
xchg
xor
jg
jg
std
adc
out
mov
adc
pusha
pop
dec
dec
jns
or
pop
sbbb
push
aaa
mov
add
test
sub
dec
push
test
lods
loopne
xchg
lods
lds
pop
popa
cld
adc
call
lds
adc
mov
and
sbb
jle
sar
outsb
or
out
mov
mov
lock
movsb
pop
es
lods
repz
mov
mov
push
in
stos
sti
dec
mov
add
cwtl
sub
negl
negb
add
push
popf
data16
test
stos
dec
or
dec
sbb
mov
cmp
je
cmpsl
sar
mov
pusha
xchg
mov
xorb
sarl
sti
shlb
add
out
xor
fistl
je
mov
iret
sbb
in
xor
pop
scas
arpl
ss
add
add
out
cmp
sub
cmp
adc
iret
pushf
in
add
mov
push
add
xchg
ljmp
cmp
push
mov
call
movsl
adc
sub
out
and
jg
fnstsw
movsl
pushf
jo
jp
cltd
rol
inc
sub
and
or
add
icebp
jne
mov
sub
mov
in
jecxz
push
out
mov
lcall
mov
sbb
rcrb
mov
dec
adcb
dec
mov
mov
decb
mov
inc
pop
pop
mov
aad
and
inc
scas
pop
sbbl
push
jle
pop
sbb
push
cld
push
notb
mov
add
xor
movsb
repz
aas
mov
adc
clc
push
lret
lods
pop
mov
adc
and
pop
adc
push
adc
repnz
jne
mov
popf
adc
cltd
jecxz
test
ljmp
sbb
mov
adc
mov
fstl
add
mov
frstor
sub
pop
sub
mov
mov
lods
orb
mov
rolb
jecxz
lods
jae
add
ss
cwtl
daa
jge
loopne
dec
test
in
mov
es
xchg
nop
ja
cs
sbb
cs
inc
andb
xchg
std
sub
popf
stos
rcrb
inc
dec
xchg
cmp
mov
out
imul
jp
push
mov
repz
daa
inc
cmp
iret
mov
add
cmpsb
cmc
ja
jne
imull
stos
stc
shl
out
mov
dec
adc
cmp
xchg
lea
ja
add
push
lret
fdivl
in
outsl
xor
xchg
imul
jb
and
inc
push
adc
in
and
push
inc
dec
jne
ret
movsl
mov
cmp
ljmp
testb
xchg
cli
adc
jno
sub
xorb
xchg
mov
pop
movsb
repnz
mov
lods
push
mov
mov
mov
mov
repz
inc
mov
jb
push
sbb
mov
movsl
jb
addr16
stc
mov
dec
add
jg
shlb
pop
or
push
xchg
fidivs
adc
cmp
stos
fcos
sub
addb
adc
pushf
mov
push
xor
sub
add
xchg
xor
jae
mov
out
gs
icebp
daa
add
pop
or
pushf
xchg
and
in
cltd
dec
xchg
dec
lret
ljmp
pusha
rcrl
mov
and
dec
fwait
hlt
xchg
movsb
cmpsl
inc
jecxz
and
pop
jb
rorb
aas
xor
sbb
mov
push
fildl
adc
mov
addb
inc
mov
fsubl
mov
scas
add
push
xor
xor
cmc
loop
xchg
popa
aas
ret
lods
shrb
cltd
and
push
test
rcrl
xor
fimuls
bound
sub
aas
data16
adc
stos
je
lret
mov
aam
pop
jl
jne
mov
mov
add
outsb
and
and
adc
sbb
mov
loope
fsubs
mov
mov
mov
dec
aas
add
and
mov
outsl
test
icebp
push
sub
and
push
add
mov
cmpsb
aas
loope
and
bound
sti
push
imul
scas
cmp
jl
movsl
jbe
add
sarb
xchg
cld
out
inc
push
cmpsl
aas
add
enter
imul
aad
add
flds
push
and
loope
stos
add
jecxz
popa
movsb
jbe
mov
das
daa
sbbb
aas
fsubrp
sub
arpl
aas
adc
push
lret
leave
aas
fsubrl
pusha
mov
dec
aad
cmpsl
scas
jbe
lret
aas
mov
sbbb
xchg
insb
cmp
hlt
mov
inc
sbb
lret
jmp
mov
adc
jbe
jo
and
and
stos
mov
push
aas
or
enter
xor
fs
ljmp
mov
pop
cmp
adc
lock
pop
aas
mov
mov
mov
shrb
aas
mov
sbbb
xchg
xor
jbe
test
mov
clc
mov
sub
pop
mov
rsm
int
lret
fsubs
jp
pop
mov
pop
sub
fsubl
in
fdivl
mov
fsub
sti
xchg
add
pop
jp
in
popa
add
adc
popf
dec
lods
pop
push
cmp
ds
mov
and
cmp
mov
jle
mov
mov
ret
mov
jge
and
mov
mov
dec
mov
addr16
outsl
xor
xor
and
shlb
enter
lret
push
jo
in
in
add
test
leave
jo
popa
scas
rolb
mov
mov
icebp
jb
mov
cmpsb
fdivrs
fstps
test
cli
mov
pop
pop
movsb
push
insl
and
fistl
jnp
sahf
out
cltd
cmp
dec
aad
adc
mov
dec
mov
divb
push
push
mov
dec
ret
or
test
repnz
xchg
cld
cli
pop
aam
cltd
xchg
lret
or
xchg
pop
int
repz
lcall
mov
sti
leave
loopne
mov
ds
add
sbb
fdiv
stos
jnp
fucomi
int
jnp
mov
sbb
sub
scas
sti
test
inc
cmpsl
xor
dec
aaa
push
mov
inc
add
sti
push
xchg
xor
test
psllq
pop
mov
adc
add
enter
lcallw
mov
pusha
test
push
mov
in
mov
es
push
inc
or
mov
jae
or
imul
lea
enter
jmp
mov
mov
add
add
xor
cmp
mov
mov
mov
pop
mov
sahf
cmp
je
rol
movsb
adc
mov
pop
rcrl
test
xorl
jns
xlat
lea
pop
add
jnp
jae
or
jb
jg
and
pop
jp
sbb
sti
imul
cld
shlb
stos
pop
cmp
dec
mov
pop
cmpsl
dec
leavew
sub
loop
adc
dec
jb
or
mov
cli
inc
jge
push
inc
int3
sbbl
out
loop,pt
mov
push
int
mov
sub
jnp
sbb
mov
pushf
cmp
not
xor
mull
loope
push
mov
mov
add
mov
stos
cmp
dec
test
lods
int3
lea
pop
cmp
and
pop
pop
add
fdivp
leave
xchg
inc
gs
jne
out
inc
fidivl
jno
mov
inc
adc
mov
ss
rcrl
loope
mov
rcr
scas
push
shlb
adc
xor
xchg
mov
mov
icebp
ja
pop
cmp
inc
lahf
fs
aas
scas
inc
jmp
jbe
mov
push
mov
adc
stos
addl
out
repnz
testb
and
inc
mov
loop,pn
dec
cmp
xchg
jne
pop
mov
adc
mov
testb
mov
inc
idivl
icebp
pop
jb
lock
inc
xchg
insb
imul
mov
shlb
aad
add
pushf
jo
daa
lahf
push
out
pusha
ret
iret
mov
dec
sbb
cmp
and
add
mov
add
clc
sub
inc
lret
xor
das
push
push
jb
cs
sbb
pop
jge
ficoml
subb
and
inc
or
xchg
jbe
sbb
xchg
cmc
ds
pop
dec
and
cltd
loope
sbb
popa
imul
loopne
negb
adc
test
xchg
mov
mov
xlat
xchg
jmp
push
pop
aam
movsl
mov
rcr
ds
sti
push
sub
push
dec
add
mov
sub
xor
jo
arpl
daa
mov
inc
shr
pop
lods
mov
mov
inc
das
and
je
adc
dec
and
fdivs
push
jno
sbb
fisubl
adc
inc
js
dec
cmp
push
or
jg
cli
mov
lret
dec
and
scas
xor
fs
test
divb
mov
jecxz
xorb
mov
inc
cmpsb
jae
adc
sub
ret
fisubrl
inc
mov
test
cli
shll
jl
adc
and
mov
push
shlb
pop
cmpsb
mov
cmp
push
imul
lock
cmpb
imul
jae
xchg
cli
cmp
decl
adc
leave
stos
jns
mov
stc
xor
or
or
cmpl
es
sti
mov
pop
push
adc
mov
add
mov
js
dec
add
out
mov
dec
repz
cmc
ds
or
adc
and
add
cwtl
push
loop
adc
or
test
mov
scas
testb
cmp
fmuls
out
xor
inc
or
cmp
mov
lock
das
cli
rcll
jnp
cmpsl
in
cmp
push
arpl
cli
lods
push
or
ret
andb
xor
insl
sti
xor
inc
pop
pop
xchg
scas
and
or
icebp
xchg
lret
mov
ljmp
stc
inc
fdivp
sub
jg
xchg
movsb
cli
and
mov
dec
call
stos
mov
cli
rorb
shll
and
pop
mov
imul
adc
loop
or
jmp
mov
push
test
xor
mov
into
and
adc
jnp
lods
and
mov
into
cmp
jmp
inc
jge
loope
or
sub
push
lret
mov
imul
lahf
mov
sar
push
movsb
lret
call
push
loope
mov
dec
nop
iret
leave
imul
xor
or
imul
loope
inc
mov
mov
sti
pop
push
mov
lds
outsl
fidivrs
into
inc
pop
cmp
jg
and
cli
arpl
notb
xchg
sub
and
sbb
movsb
mov
xchg
push
jne
dec
jp
imul
mov
loope
ljmp
cmpb
push
adc
sbb
andl
cld
insl
scas
sbb
adc
jge
clc
loopne
sbb
movsl
in
negb
popf
mov
add
clc
mov
adc
cli
xlat
cli
adc
fisubl
jnp
adc
movsb
xor
or
xchg
adc
mov
int3
daa
cmp
in
es
inc
mov
push
push
jmp
cmpsb
lock
ljmp
test
orl
outsl
sbb
xor
test
es
jno
push
mov
and
mov
pop
jmp
int3
nop
lock
rolb
cmp
pop
fdivl
xlat
test
in
jmp
fsubs
orl
jecxz
sub
out
les
add
lret
dec
loopne
popa
movsl
int3
xchg
and
int
data16
mov
int
mov
mov
add
and
inc
jbe
pop
popa
sub
cmpsl
xchg
mov
fwait
aam
lcall
sub
gs
fistpl
nop
jmp
jbe
add
and
jns
ja
outsb
lods
push
dec
xorb
lcall
gs
bound
mov
dec
mov
push
dec
pop
cs
rorl
ret
into
ljmp
fstps
cltd
paddw
cmpsb
adc
loop
ljmp
ret
add
ljmp
pop
je
xlat
pop
mov
imul
imull
inc
mov
sub
push
dec
leave
std
mov
mov
test
cmp
jmp
sahf
mov
outsb
jl
repnz
xor
mov
xor
sbb
and
mov
cmpl
icebp
mov
mov
push
lds
fbld
or
dec
lock
mov
out
cwtl
pop
stc
in
out
mov
adc
rcl
pusha
mov
jae
mov
cmpsl
xorb
and
jbe
arpl
sub
daa
call
cmp
and
mov
sub
adc
adc
fisubrs
jno
data16
jo
mov
mov
incb
ljmp
andb
jb
and
mov
out
push
loop
sub
rcl
push
jne
hlt
data16
mov
ret
scas
jae
div
mov
inc
pop
loope
das
cmp
pop
fisubrl
ss
and
push
arpl
rcrb
data16
add
jnp
leave
cmp
inc
push
sbb
lahf
scas
and
adc
push
out
sub
adc
jo
shlb
dec
stos
test
lahf
adc
shrl
adc
pusha
pop
pop
fdivrp
bound
or
mov
sbb
rdmsr
and
cmp
test
leave
adc
mov
lods
add
mov
mov
orw
ja
ds
mov
add
inc
js
ss
inc
and
pop
or
cmp
loope
mov
cmp
loope
outsl
je
xchg
bound
jo
cld
fimull
jge
cmp
stos
out
inc
fstpt
dec
xor
je
and
and
xchg
das
xchg
xor
xor
leave
roll
inc
gs
jb
mov
add
js
add
daa
in
mov
or
push
mov
gs
mov
repz
mov
jmp
mov
xor
push
arpl
imul
xor
inc
dec
data16
sbb
and
out
divl
fbstp
adcb
mov
jo
xor
cld
adc
sti
jae
adc
sahf
xchg
test
sub
xchg
and
int
add
or
push
mov
imul
push
adc
add
mov
mov
sbb
inc
adc
dec
xor
stos
push
push
iret
int
mov
mov
out
add
scas
cwtl
jnp
push
loopne
xchg
pop
outsb
mov
in
jae
loop
repnz
push
cbtw
movsl
je
sahf
pop
cmpb
sti
push
call
fldl
mov
arpl
mov
lret
out
push
dec
das
call
scas
sti
imul
iret
repz
pushf
pop
cmpsb
push
and
inc
jle
push
jmp
scas
xor
cmp
adc
add
inc
jmp
push
arpl
adc
adc
mov
cmp
pop
push
mov
inc
jecxz
add
popf
push
inc
mov
xor
sbb
xchg
dec
fs
addb
sub
or
stos
mov
xor
ds
adc
lea
add
fs
mov
push
push
fildll
cmp
cwtl
mov
incl
test
or
aad
mov
jns
andb
mov
shrl
in
pop
mov
cli
dec
daa
cmp
and
pop
ljmp
ret
cld
or
in
jb
int
addr16
cmp
lahf
cmp
cmp
in
adc
xchg
aad
movsb
pop
cmp
stos
stc
aam
jae
repz
jmp
ja
insl
je
sbb
mov
fdivs
cmp
fistl
ljmp
das
push
das
push
in
ds
sbb
sbb
jb
lods
bsf
jp
and
xchg
inc
xlat
sub
loopne
pop
jle
pop
mov
cmc
sbb
mov
xchg
jge
pop
mov
mov
cmc
insl
xchg
mov
pop
popa
int
jmp
push
mov
je
dec
outsl
imul
or
jno
inc
icebp
pop
cmp
pop
pop
das
or
das
dec
aaa
mov
shll
test
fdivr
cld
push
jmp
int
xchg
jbe
add
data16
mov
orl
aaa
test
ficomps
xchg
mov
add
repnz
jp
adcl
orl
and
int
loop
outsb
xor
pop
shll
mov
push
ret
in
clc
mov
mov
icebp
xor
inc
fiaddl
pop
mov
inc
add
sar
lock
fnstcw
cmp
add
add
jle
sbb
adc
pop
or
jb
in
dec
ljmp
or
jecxz
mov
mov
sub
jno
into
imul
fs
and
jb
add
mov
jnp
lcall
sub
push
fbld
sbbl
test
push
rcrb
xchg
and
rcll
shlb
sti
sub
jp
lret
cli
mov
mov
mov
adc
mov
dec
into
loopne
adc
jne
hlt
mov
lcall
daa
jno
pop
pop
pop
in
iret
xchg
inc
mov
jnp
das
vmovddup
adc
dec
add
mov
dec
and
cmp
dec
scas
lea
adc
fistl
sbb
mov
xor
bound
xchg
shl
sbb
jno
aas
push
ljmp
sahf
pop
stc
or
pop
test
pop
jo
dec
cmpsl
sbbl
ljmp
jmp
popl
mov
fxch
jnp
cmc
and
rclb
adc
cmp
xchg
push
je
scas
enter
jmp
imul
push
in
cltd
lahf
jmp
adc
sub
sbb
scas
in
jb,pt
gs
enter
jmp
mov
mov
shlb
jge
dec
ss
pop
mov
add
adc
out
in
cmp
jmp
scas
sbbb
dec
sub
das
iret
int
mov
iret
adc
cmp
mov
add
mov
sub
lret
je
add
mov
mov
aaa
pop
dec
sbbl
test
sbb
inc
add
leave
sarl
sbb
cltd
jge
sbbl
rcr
cmp
test
xor
sbb
ljmp
mov
lea
jb
adc
and
adc
enter
adc
cmp
mov
mov
js
mov
icebp
add
jp
pushf
push
inc
push
pop
cwtl
cld
test
xchg
add
call
sub
xchg
add
mov
sub
xor
shrl
and
into
jae
and
shl
cmp
popa
fcomp
xchg
shrl
notl
push
lahf
icebp
ljmp
mov
pop
adc
or
mov
addr16
cmp
and
test
shlb
jp
push
inc
adc
and
clc
mov
icebp
out
mov
out
movsb
int3
inc
sub
sbb
inc
jle
xor
mov
pop
ds
push
sub
and
mov
cmpsl
enter
xchg
test
sub
xor
imul
movsb
ficompl
mov
jb
js
jle
addr16
faddl
sbb
cmpsb
jbe
sar
pop
idivl
lcall
xchg
dec
lods
sub
mov
call
loop
pop
cmp
or
fidivrs
and
daa
xor
adc
leave
repz
out
fld
sub
clc
xor
movsb
push
cld
lods
ljmp
lret
sbb
clc
mov
enter
pop
lcall
shll
pushf
popa
cwtl
add
cmpsl
mov
push
js
and
adc
cmp
adc
sub
mov
cmp
pop
loopne
pop
jmp
mov
and
es
xor
xchg
ret
push
sti
adc
stos
mov
movsb
loop
xchg
mov
cmp
sarl
adc
fwait
mov
and
mov
shll
add
xor
ret
mov
xchg
outsb
roll
test
int
cmp
stos
and
stos
mov
mov
mov
sbb
cmp
push
pop
repnz
sarb
and
xchg
movsl
ss
lock
dec
push
push
into
pop
jae
xchg
mov
sbb
icebp
pusha
sbb
pop
add
mov
subb
mov
imul
sbb
adc
bound
ds
mov
jmp
rcr
lds
insb
dec
and
idivb
add
out
mov
std
or
pushf
sbb
push
stos
jle
addr16
pop
mov
sti
fildl
push
xchg
dec
hlt
jp
pushf
loop
xchg
pop
mov
add
pop
enter
and
jmp
push
int
lock
repnz
add
mov
cmp
or
xchg
push
cmp
scas
or
insl
mov
mov
imul
adcb
jae
stos
imul
int
pop
mov
fmull
xchg
mov
and
jp
mov
adc
sbb
push
stc
stc
out
loop
ja
adc
nop
std
xor
xlat
cmpsb
loop
jmp
push
clc
mov
imul
and
int
loope
cwtl
jle
mov
ljmp
int3
shll
or
std
inc
fidivrl
test
jb
xlat
mov
xor
roll
sub
mov
fcomps
mov
fnstenv
mov
daa
imul
adc
jb
fidivrl
add
push
pop
xchg
loope
dec
mov
jp
cli
movsl
xchg
cltd
aaa
rolb
push
xor
lcall
repz
inc
jno
popa
mov
mov
ficomps
sbb
dec
jb
cmpsb
repnz
pop
cli
mov
movsl
adcb
mulb
in
push
adc
int
dec
dec
cmp
es
inc
sarl
dec
lock
sbb
pop
jge
xor
cmp
test
mov
mov
es
cmp
cli
push
lcall
call
inc
and
jns
test
jmp
fwait
movsl
or
in
xchg
cmp
cmp
adc
mov
sbb
cmpsl
or
dec
sub
dec
divl
clc
or
adc
rep
lret
pop
add
add
mov
rcl
call
push
outsb
lcall
out
call
das
fistl
cmp
loopne
aas
push
pop
xchg
ds
popa
ljmp
jns
push
rcr
cltd
inc
iret
in
enter
jnp
inc
add
inc
lea
mov
mov
push
lret
sub
mov
dec
std
shr
stos
into
xor
in
lods
inc
sahf
pop
arpl
scas
dec
sub
orb
or
loop
movsl
sahf
daa
xor
test
das
cmp
mov
outsl
ds
sbb
jge
jnp
cs
jmp
movsb
inc
sub
jle
lret
movq
pushf
adc
rorb
jb
cmpsb
popf
xchg
inc
stc
daa
andl
int
mov
lcall
sub
adc
lar
leave
and
pop
mov
mov
sub
mov
dec
mov
fs
fdivs
pop
loop
ror
mov
pop
xlat
nop
jb
test
xor
popl
icebp
xor
loope
fistpl
inc
inc
sti
mov
hlt
adc
ljmp
mov
faddl
sub
call
fcompl
rclb
push
enter
scas
cwtl
jecxz
or
pop
inc
dec
addr16
aas
mov
mov
shll
xchg
or
cwtl
or
cld
xchg
loopne
mov
lea
adc
mov
jo
shrl
pushf
and
push
ficoms
movsl
sub
mov
mov
fsubl
and
shr
sub
jle
inc
push
cmpl
push
push
xchg
mov
ds
movl
in
iret
rol
xchg
and
sub
jbe
push
mov
xor
pop
sub
jnp
icebp
sahf
or
dec
les
ds
sysenter
repnz
mov
andl
stc
gs
sub
mov
push
or
sarl
jecxz
jp
int
fs
pop
jnp
add
daa
inc
xor
or
and
in
scas
xchg
and
addr16
cli
sbb
fadd
outsl
cmc
into
shrl
dec
gs
scas
jl
aas
jmp
pushf
test
and
add
inc
add
jb
mov
mov
or
dec
out
loop
lea
cmp
scas
pop
lock
jmp
fs
popf
popa
repnz
fnstcw
inc
jp
adc
out
and
punpcklbw
shlb
loop
insb
jne
je
xor
push
mov
insb
dec
mov
insb
mov
mov
addr16
mov
loop
test
dec
and
roll
cmp
rolb
mov
inc
rcll
sbb
jl
cmp
ds
cmp
sub
inc
int3
call
mov
xchg
lret
adc
cmp
xchg
sbb
and
rorl
aaa
pushf
pop
xchg
outsb
fildl
lea
mov
mov
xor
stos
popf
shlb
test
cmc
rcrb
mov
leave
dec
hlt
out
jecxz
mov
hlt
mov
aam
rcr
push
leave
push
push
or
or
repz
mov
cmp
fwait
mov
fisubrs
repnz
es
inc
mov
jecxz
jmp
imulb
sbb
dec
std
movsb
mov
in
pop
pop
cld
jno
inc
jae
pop
shlb
pop
cmp
in
adc
aas
pop
jb
dec
sbb
fldenv
addr16
jb
lock
arpl
jbe
and
jne
lea
mov
pop
push
mov
aas
shrl
add
aas
mov
cli
movsl
mov
mov
push
sahf
fdivrs
jbe
and
mov
cld
ja
push
arpl
add
and
mov
lea
icebp
inc
dec
aas
and
ja
lods
inc
js
sub
push
loope
out
lcall
mov
adc
add
xor
popf
fdivrs
je
aas
or
inc
jp
les
lock
repnz
cmpb
adc
sbb
mov
aas
das
aas
mov
sub
ljmp
aas
sub
add
fidivs
shlb
and
push
loopne
out
pushf
lcall
mov
jo
sbb
std
xchg
aaa
mov
in
or
xor
inc
cmp
cmc
cmp
lcall
mov
std
aas
or
mov
popf
fidivrl
outsl
in
into
xor
jmp
mov
cmp
jb
mov
hlt
cli
inc
mov
or
adc
xchg
mov
push
add
mov
sub
xorb
test
pop
lcall
cmp
mov
mov
mov
test
mov
nop
push
jbe
scas
mov
int3
mov
adc
xchg
mov
add
scas
mov
inc
mov
adc
sbb
stos
mov
cltd
mov
repnz
add
das
out
xchg
js
loopne
repnz
insl
adc
xor
lods
mov
push
or
mov
push
mov
sub
dec
xor
stos
push
and
popf
sub
stos
nop
sbb
popa
jmp
lret
pop
add
pushf
mov
xor
das
jp
pop
sti
xor
mov
jecxz
mov
and
dec
push
push
inc
dec
inc
sub
mov
mov
mov
xchg
push
in
in
mov
mulb
adcl
hlt
jb
and
mov
mov
mov
mov
test
mov
add
mov
dec
dec
jb
mov
and
mov
mov
xor
fsubr
mov
xor
jns
pop
sbb
das
mov
pop
aaa
fbstp
sub
mov
stos
mov
imul
andb
and
mov
jg
lods
stos
jnp
sub
fdivs
or
and
aaa
jbe
add
je
dec
cs
cmp
lret
push
imul
fdivl
sub
cmp
rcrb
adc
dec
lods
cmp
shll
mov
fucom
mov
ret
popa
mov
imul
and
call
pop
push
adc
lock
mov
popa
adc
shrl
and
push
mov
mov
mov
lret
test
daa
in
stc
and
repz
ds
fnsave
jns
int
jle
mov
mov
jecxz
jb
mov
stos
and
xchg
jno
mov
sar
pushl
aas
and
mov
push
xor
mov
mov
jg
mov
lea
and
inc
mov
mov
xchg
mov
stc
mov
daa
stos
pop
sub
cmpsb
and
repnz
mov
mov
and
mov
popa
test
test
test
test
test
test
test
sub
andl
lock
scas
cmpsl
lods
das
pop
test
icebp
js,pn
jbe
and
test
jp
mov
sti
mov
mov
loopne
dec
ss
or
dec
stos
lret
or
or
lahf
mov
ss
sub
add
stos
pushf
dec
sub
cmp
add
add
or
sub
ret
mov
push
or
pop
cld
das
xchg
sti
jno
mov
jb
xor
add
mov
mov
add
fidivrl
inc
push
adc
push
lds
inc
push
inc
push
cmpsb
out
rcl
aad
les
fstl
mov
and
or
mov
jl
dec
mov
ret
push
popl
jg
dec
cmc
ja
arpl
sti
lods
daa
sbb
or
pop
loope
and
fmuls
mov
inc
sbb
lds
pop
ss
inc
mov
cmp
pop
sbb
sti
add
add
lcall
sti
pop
push
ljmp
mov
mov
cld
jp
sub
mov
loope
mov
movsb
xor
and
mov
add
je
sahf
xchg
jo
and
hlt
arpl
in
scas
rcll
adc
inc
push
es
inc
mov
push
xor
popf
and
cs
jb
rdtsc
imul
out
mov
mov
mov
fisubl
ds
mov
mov
jge
pop
pushl
cmp
and
jecxz
jne
mov
pop
dec
mov
mov
push
mov
mov
ss
repnz
outsl
les
mov
mov
mov
outsl
jno
mov
adc
xor
xchg
or
stos
daa
in
es
jbe
int
pushl
mov
inc
xor
inc
cmp
inc
and
mov
cmp
and
xchg
xor
hlt
mov
fs
push
pop
aam
inc
and
enter
sbb
test
mov
mov
cmp
and
xor
lock
mov
js
scas
in
scas
imul
int
ljmp
dec
subl
add
inc
mov
xor
test
mov
int
push
pop
rcrb
ret
mov
or
mov
push
addr16
sub
and
jb
add
add
or
les
mov
and
inc
arpl
js
add
sub
and
mov
push
imul
sahf
lea
cwtl
dec
push
xor
adc
inc
mov
and
popf
mov
xchg
push
jbe
push
out
dec
or
es
adc
mov
mov
int3
mov
push
jmp
adc
js
shr
daa
push
mov
fnsave
lods
mov
aas
add
mov
out
sub
loopne
std
cmpb
cmp
pop
mov
sahf
xchg
inc
cmp
divl
mov
cmp
loop
das
inc
and
int3
mov
push
adc
shlb
push
sbb
pop
cmpsl
jl
sbb
mov
sbb
xchg
push
mov
daa
xchg
adcl
add
and
and
bound
xor
mov
and
ds
pminsw
jl
add
jno
mov
das
repnz
lret
aas
inc
cmp
addr16
enter
xchg
lds
cwtl
and
bound
int3
iret
adc
or
pop
xor
movsb
sbb
imul
jnp
sub
mov
sbb
loopne
inc
scas
test
mov
jae
stos
testb
add
fcoml
cmc
push
inc
ljmp
nop
dec
adc
push
jge
movsb
adc
push
int
pushf
jp
cli
loope
cmc
and
pushf
xchg
xchg
in
int
loop
lcall
jne
mov
dec
subb
push
push
cs
lahf
pusha
popf
in
cmp
scas
push
sbb
mov
mov
push
repz
test
movsb
arpl
in
inc
dec
mov
xchg
push
pop
xor
jmp
cwtl
in
and
mov
cs
icebp
repnz
or
xor
in
add
stos
cmp
cmpsl
lock
and
aam
dec
hlt
loop
mov
insl
stos
mov
in
inc
mov
push
fnsave
and
push
inc
jmp
pop
inc
daa
add
jo
jge
mov
mov
les
and
mov
ret
add
adc
sub
inc
push
pop
xorl
mov
andl
sbb
cmp
mov
cli
fidivs
jno
inc
mov
push
push
sbb
push
xchg
and
decb
mov
adc
push
lock
and
rolb
mov
rorl
mov
add
daa
mov
adc
cmp
pop
mov
test
fistpl
popf
inc
mov
mov
int3
push
and
inc
fstpt
or
sub
or
mov
ss
push
dec
mov
dec
out
or
int
scas
inc
jne,pn
lock
sarl
xchg
rcl
outsb
jne
movsb
dec
add
mov
jg
mov
jnp
mov
sbb
push
mov
jg
lods
push
lock
jo
mov
jl
ds
and
popf
add
and
ficomps
jle
jecxz
sbb
outsb
jle
jae
dec
sub
std
pop
enter
iret
aad
sub
mov
mov
fwait
push
shll
subl
xchg
add
test
call
adc
jae
cmp
ror
jmp
scas
repnz
dec
out
adc
daa
movsb
subb
xor
dec
adc
add
repnz
and
mov
inc
jae
sbb
pop
adc
cmpsb
pop
cmp
test
mov
lret
sub
popf
jo
sbb
sti
stos
lock
pop
jno
mov
mov
js
sub
loop
dec
aas
pushf
xchg
push
add
test
or
pop
mov
mov
lock
adc
std
dec
mov
pop
push
mov
add
shlb
and
mov
cmpsb
aas
in
dec
sahf
mov
xchg
idivb
dec
push
int
test
mov
cmp
nop
test
push
outsb
xor
clc
cwtl
mov
cvtps2pi
imul
jbe
call
mov
inc
out
icebp
and
lods
adc
aas
fidivl
fisubs
das
lret
push
repnz
lret
hlt
push
and
jb
shll
insl
sti
outsb
xchg
pop
xchg
hlt
cs
or
mov
cwtl
xor
mov
in
roll
jae
lea
test
cmp
icebp
mov
xor
xor
ds
pushf
pusha
test
jecxz
out
adc
jl
lock
mov
stos
mov
jecxz
mov
mov
stc
scas
repnz
sub
lahf
mov
loopne
mov
sar
cmpl
fsubl
mov
push
jmp
lcall
or
test
stos
pop
mov
faddp
les
test
stc
leave
mov
cld
jb
xchg
mov
mov
clc
add
jle
sbb
mov
pusha
dec
jb
mov
adc
popf
inc
ret
aas
fstpl
or
mov
mov
push
pop
mov
into
pop
ss
stos
add
sub
movsl
ljmp
mov
lea
cwtl
inc
sbb
sbb
push
aam
int
mov
stos
rcl
les
sub
int
adc
popf
xorl
jae
add
dec
cmpsb
pop
arpl
jo
pop
dec
cmpsb
cs
dec
mov
push
pop
int
push
mov
sbb
pop
dec
negb
jns
jg
es
lret
repz
addr16
lea
out
mov
in
ret
imul
jge
nop
loopne
xchg
out
scas
int3
mov
xchg
sbb
cld
push
adc
add
xor
std
scas
adc
cmp
inc
sarb
or
adc
ss
mov
xlat
jmp
add
push
fdivs
in
lods
adc
jp
js
push
ljmp
push
das
lods
cwtl
pop
sahf
mov
xchg
push
add
shl
push
xchg
les
xchg
mov
mov
lds
xor
and
mov
sti
shrl
inc
das
mov
inc
inc
in
out
arpl
cmc
adc
sbb
jne
sbb
mov
mov
out
std
or
div
insb
into
push
in
into
inc
adc
xor
xor
popf
pusha
insl
repnz
cld
roll
adc
jecxz
xor
aam
add
adc
mov
ficoms
mov
cmp
jae
sti
sbb
loop
dec
push
adc
mov
push
and
jno
lea
adc
int3
outsb
xchg
mov
out
lcall
ljmpw
adc
adc
or
stc
jno
dec
fimuls
sub
inc
stc
sub
jae,pn
cmp
push
add
loop
pusha
and
dec
cld
cmp
sbb
fbstp
aad
popf
xchg
dec
in
mov
xor
mov
rorl
adc
in
push
push
jl
jmp
pop
mov
loopne
mov
adc
xor
icebp
loopne
ja
aad
fisubs
xor
jmp
movsl
repnz
shll
mov
mov
dec
ss
dec
cmp
dec
cmovg
rdmsr
mov
push
mov
inc
mov
inc
mov
inc
mov
inc
xor
divb
mov
jecxz
outsl
mov
dec
cmp
or
xchg
outsl
mov
add
bound
and
das
or
jne
pusha
cmp
rcrb
lods
lods
push
push
adc
or
jecxz
adc
sub
mov
add
or
jp
es
and
repnz
cld
xchg
lcall
addr16
xchg
mov
cmp
scas
loop
loopne
push
sti
push
cs
shll
pop
sub
dec
ljmp
mov
mov
arpl
outsl
xor
aas
in
push
and
insl
les
jge
paddsb
inc
mov
jnp
or
cmp
xor
push
add
lahf
push
push
adc
fstl
cmpsl
xor
es
mov
dec
rorb
jbe
pop
pop
dec
aaa
jns
scas
inc
push
hlt
cmc
adc
imul
mov
call
ss
push
cmc
xchg
xchg
push
mov
xchg
das
imul
mov
fwait
enter
push
push
push
lds
push
mov
and
shlb
ficoms
rclb
jno
xor
mov
adc
xlat
adc
aad
cmpb
mov
cwtl
sbb
jo
frstor
mov
push
in
repnz
test
divb
je
cmc
sub
or
mov
mov
sbb
mov
sti
repz
mov
mov
addb
jno
add
sub
cmpsb
xor
jo
mov
call
adc
jmp
hlt
pop
mov
inc
fistl
xor
mov
lret
mov
and
push
stos
ds
idiv
sbb
popa
dec
dec
popa
or
and
push
faddl
test
lods
int
test
test
adc
movsb
icebp
sti
mov
fiadds
pop
jecxz
inc
pop
pop
push
fiaddl
cmp
addr16
xchg
sub
lcall
inc
shll
add
push
in
into
popf
dec
repnz
daa
cwtl
lds
or
fnsave
xchg
popl
jb
jno
pushf
sub
lods
stos
adc
sbb
js
aad
jne
pop
push
mov
dec
cld
mov
movsl
mov
xchg
jl
jns
xchg
xchg
int
add
fsubrs
icebp
and
push
daa
mov
pop
into
jnp
xchg
xor
icebp
xchg
fcmove
xor
sahf
repnz
and
jo
push
ss
cmp
arpl
jae
je
ljmp
dec
iret
and
jmp
insl
inc
movsl
mov
pop
pop
dec
cmpsb
pop
push
cli
ljmp
add
jno
xchg
mov
icebp
dec
int3
mov
in
mov
jb
and
aad
shl
fs
fnsave
cmpsl
mov
mov
sbb
addr16
out
ds
add
into
rcr
hlt
adc
or
mov
sbb
ret
jne
scas
cmp
pusha
movsl
cld
mov
mov
addr16
das
imul
jp
in
std
dec
je
test
lods
pusha
adc
mov
fsubrl
add
cmp
dec
lock
push
add
mov
dec
loopne
cmp
jae
call
aas
adc
xor
mov
mov
xchg
test
push
xchg
cmpsb
lods
xchg
hlt
sub
je
push
andl
adc
loopne
xchg
gs
xchg
jne
inc
adc
pop
test
sub
or
mov
adc
pop
fwait
jbe
add
test
push
push
jmp
cmpsb
int
loope
repnz
jl
or
mov
mov
add
es
pushf
add
mov
jge
jb
dec
lss
fldenv
mov
lret
aas
jecxz
adc
sub
lahf
adc
jnp
jb
je
inc
xor
xor
rol
push
les
dec
and
and
mov
ret
adc
std
outsb
imul
divb
push
leave
lahf
and
je
outsl
fsubl
in
out
sub
xor
sbb
sbb
outsl
mov
pop
stos
sub
inc
xor
cmp
jnp
jnp
pop
scas
sub
imul
and
hlt
or
push
cmp
js
imul
incb
xor
inc
lea
cmp
adc
fmul
and
cld
dec
mov
jb
mov
negb
js
mov
data16
adc
clc
cmp
cltd
hlt
jp
scas
mov
das
mov
sub
mov
mov
mov
mov
test
mov
add
adc
scas
mov
test
mov
xor
test
adc
gs
rcr
cmp
int
mov
add
cmpsb
adc
test
mov
or
push
leave
lcall
dec
mov
xor
lea
inc
ss
xor
xor
cmp
and
cs
ds
lahf
and
ja
add
xor
mov
fdivs
je
jbe
add
xor
push
xor
or
xor
mov
mov
cs
iret
jmp
pusha
dec
fdivs
xorl
jge
in
jb
and
js
ror
stc
mov
dec
out
xor
ss
jle
arpl
das
test
xlat
int
negb
mov
dec
cmp
and
fucomp
repnz
ds
jp
xor
sub
adc
lods
stos
mov
cld
ret
jb
mov
outsl
sub
adc
and
gs
cld
mov
xor
push
push
mov
mov
jb
scas
dec
ss
daa
je
dec
cmp
sub
jae
fistl
out
cmc
stos
das
mov
rcr
sarb
rorl
mov
and
pop
stos
jb
cmp
mov
cmpsb
pop
aam
dec
pop
xor
push
cmp
dec
pop
lods
les
mov
xor
mov
lods
movsb
cli
das
add
jo
adc
insl
outsl
mov
sahf
xchg
loop
repz
mov
mov
outsl
out
mov
cmp
pushf
push
aaa
int
mov
cmpsl
mov
shrl
and
icebp
imul
stc
shlb
adc
cmp
lahf
in
and
mov
adcb
cmp
hlt
scas
push
inc
mov
loope
dec
fs
xchg
add
repz
ret
xchg
lahf
and
adcl
clc
dec
outsl
cmp
sbb
repz
jae
repnz
xchg
push
mov
jge
out
xor
les
adc
jmp
mov
and
lret
arpl
ds
stos
int3
xor
stos
call
pop
ret
add
in
dec
imul
into
fbstp
adcl
fcmovnb
jns
sti
or
rcl
mov
jg
movsb
add
popf
sub
xchg
add
xor
ret
repnz
jnp
out
fistps
cwtl
shlb
add
xor
jbe
inc
es
test
ret
stos
cli
popf
int
mov
mov
add
ja
pop
pop
mov
loopne
out
cli
cmp
arpl
and
fstl
xchg
and
jge
jo
pop
call
mov
ljmp
outsb
movsl
xor
mov
inc
lds
dec
hlt
cwtl
xchg
push
jo
sub
xchg
sbb
cmp
fstpl
adcl
test
sbb
mov
dec
adc
add
jo
pusha
fidivrl
mov
and
and
push
cld
or
and
sbb
ds
cmpb
pusha
sti
sbb
out
and
mov
cmpxchg
or
mov
and
cmc
negb
pop
jmp
xor
xchg
mov
adc
add
jecxz
mov
or
mov
sahf
lea
fcmovnu
sub
dec
sub
scas
roll
sbb
xchg
mov
add
loopne
xor
shr
ss
sub
xor
shll
jmp
bound
mov
sar
lea
dec
lret
mov
mov
xchg
mov
mov
les
xor
in
call
das
jb
mov
sahf
adc
mov
and
and
cmp
mov
xor
and
mov
es
mov
jg
aas
aad
inc
cmpsb
inc
mov
mov
sar
add
ja
icebp
mov
inc
adc
dec
mov
cs
int3
ss
movsb
and
pushf
dec
cli
sti
add
in
call
in
xor
cmp
popf
rorl
xor
xor
mov
fldenv
jno
mov
out
jge
test
movsl
jb
daa
cld
pop
mov
lds
push
test
mov
lods
loop
adcb
sti
and
pop
out
mov
js
xor
mov
mov
mov
xor
fiaddl
jno
incb
clc
and
imul
dec
icebp
test
scas
xor
into
sbb
dec
fsubrl
jge
sbbb
sub
mov
push
daa
adc
mov
cmc
sub
cmpsw
aam
sub
cld
xchg
push
xor
inc
loop
adc
rclb
mov
repnz
les
sub
cld
cmp
mov
xlat
sbb
push
icebp
addr16
push
idiv
adc
icebp
pop
mov
insb
push
mov
xchg
addr16
push
cs
sbb
add
jbe
arpl
xor
inc
outsl
adc
push
fidivrs
pop
dec
jmp
inc
rorb
add
insb
fidivs
adc
imul
jmp
subb
cltd
das
push
dec
loop
mov
test
scas
insl
icebp
mov
mov
shlb
mov
sbb
imul
push
xchg
imul
xor
icebp
cmp
and
fnsave
sbbl
push
xchg
notl
mov
cmc
adc
add
jo
sub
mov
loopne
mov
mov
lahf
xchg
adc
xor
mov
rclb
pop
dec
add
ret
fsubrl
cmp
or
mov
push
adc
ja
inc
lock
mov
flds
fldenv
dec
fdivr
push
lret
stos
divb
les
jne
cli
xor
adc
mov
xchg
mov
pop
movsb
addr16
mov
mov
adc
or
in
loope
cmp
leave
jmp
jmp
lahf
idivl
cmp
icebp
shrl
jecxz
push
loop
xlat
and
jmp
mov
mov
mov
inc
das
adc
mov
js
psubusb
iret
sahf
cmp
cmp
cmp
or
cmp
sub
mov
and
dec
dec
adc
scas
mov
nop
sbb
in
mov
andb
jae
or
outsl
xchg
stc
test
test
scas
pop
mov
add
push
inc
xor
cmp
mov
pop
cmc
jns
push
adc
addr16
adc
dec
mov
add
xchg
mov
addb
jnp
pushf
mov
adc
into
test
jb
scas
xchg
sti
add
fnsave
xor
mov
pop
adc
and
fisubrl
lods
xchg
imul
leave
or
xor
cmp
ds
enter
faddp
adc
sbb
jecxz
lea
mov
pop
mov
std
push
jmp
push
leave
subl
fstpl
jae
and
aas
icebp
shlb
bound
push
in
xor
mov
add
cmp
mov
lahf
pop
js
dec
xor
mov
loop
pop
pop
xchg
mov
mov
cmp
mov
push
lock
sub
orl
jmp
add
loope
push
or
and
mov
mov
inc
loop
out
jo,pt
movsb
scas
das
in
adc
in
sbb
dec
fwait
or
fisttpl
ret
aas
and
xor
mov
lock
push
fdivrl
jns
sti
rcll
mov
sbb
daa
add
scas
pop
mov
inc
enter
fisubl
sub
push
idivb
call
scas
and
adc
fisubrs
test
scas
pusha
das
jo
mov
jp
dec
test
pop
test
add
sbb
push
and
inc
jle
mov
pop
mov
inc
push
push
or
test
lret
lock
loope
and
jno
fwait
jnp
xor
add
mov
outsb
lret
cmp
icebp
mov
lock
cmc
cld
jecxz
or
mov
jl
imul
add
inc
pop
out
jle
test
jbe
lret
jae
mov
orl
inc
outsl
xchg
clc
sub
in
repnz
jp
lcall
pop
cmpsl
cltd
insl
jb
jmp
ds
loop
je
jbe
jp
popf
loope
pushf
cmp
push
xchg
push
insl
sti
daa
sub
adc
rclb
mov
imul
sahf
dec
mov
mov
push
ljmp
add
je
add
lcall
inc
mov
sbb
notl
add
add
lock
pushl
jp
lret
xchg
lock
push
lret
and
jns
mov
aad
jg
mov
mov
loopne
push
mov
mov
imul
cmpsl
push
stos
aad
fs
ja
popf
insb
cltd
cmp
dec
mov
clc
ja
icebp
mov
negl
shrl
jl
rolb
push
mov
mov
sarl
xor
loopne
jmp
int3
fsub
std
jb
adc
or
add
scas
je
mov
adc
push
gs
lahf
push
jp
hlt
mov
outsl
loopne
add
les
mov
icebp
jge
vmovaps
push
xchg
xchg
imulb
mov
imul
orb
popa
jo
es
mov
int
mov
pop
sbb
push
push
repnz
outsb
pop
inc
add
sbb
clc
bound
in
xor
shr
inc
push
pop
and
sbb
inc
outsl
fimuls
lock
iret
add
adc
std
xor
je
xor
ret
pop
cmpl
sti
mov
icebp
std
cmp
sahf
mov
cmc
outsl
xchg
xlat
cmp
mov
pop
leave
mov
fdivrl
sub
loope
xor
mov
mov
call
imul
lock
sbb
fsubl
jno
sbb
mov
xor
shl
and
add
push
in
dec
ss
test
stos
fildll
xchg
inc
stos
imul
mov
jo
jnp
insl
fsubrl
xlat
lcall
and
stos
or
and
mov
lods
pop
into
inc
clc
das
add
mov
lds
jb
or
mov
inc
add
inc
iret
or
fwait
rolb
mov
rorb
lea
fistpll
sub
adc
and
mov
data16
pop
or
mov
out
jae
jo
push
scas
in
sub
loop
out
roll
inc
add
push
fistpll
pop
add
dec
maskmovq
mull
jno
stc
jo
hlt
jnp
in
inc
xchg
cmp
fbld
pop
ficompl
std
clc
push
lcall
into
icebp
or
iret
mov
or
and
movsb
cmp
and
lock
aaa
cs
jbe
pop
rorl
xchg
jmp
in
pop
out
je
lcall
push
mov
leave
mov
cmc
dec
cmp
xchg
testl
inc
aaa
push
popf
outsl
pop
xchg
adc
add
call
mov
lea
sahf
test
mov
mov
xchg
iret
mov
or
icebp
iret
sbb
xchg
outsl
mov
jb
sbb
jmp
xchg
jge
mov
sti
aas
add
adc
call
push
aaa
sarb
inc
xor
xchg
mov
imul
mov
add
loop
jmp
rclb
inc
xchg
idivl
dec
add
push
cmp
adc
mov
jmp
into
xor
ss
imul
pusha
dec
test
mov
ror
sub
std
aaa
xorb
xchg
shl
sbbl
jmp
ds
cmp
ljmp
pop
jae
add
pop
pop
push
cmpl
stc
stc
sub
ror
daa
in
ss
adc
imul
data16
ret
test
mov
xchg
ds
add
jl
pop
inc
mov
stos
or
mov
sarb
sbb
jno
dec
test
cli
mov
bnd
lods
or
xor
je
xchg
lock
cmp
ret
push
scas
mov
enter
aas
icebp
sbb
cwtl
xor
ficoml
mov
test
add
mov
xchg
imul
lods
cwtl
scas
and
jne
jns
inc
or
mov
cmc
jno
in
sahf
imul
jne
out
mov
mov
aas
push
mulb
mov
test
repnz
lods
inc
or
movsb
dec
pop
lods
push
mov
push
xchg
sbb
cmp
dec
adc
and
cmpsl
rcr
out
and
pop
popa
out
xchg
pushf
and
adc
dec
and
cmpsl
lret
andb
movsb
jl
mov
outsl
std
jno
pushf
sbb
mov
push
xor
das
push
cmp
test
mov
sub
sar
shl
lcall
inc
mov
aas
xor
fistpll
jnp
nop
sub
rcll
int
popa
mov
icebp
inc
incb
cmp
and
or
rclb
rcrl
dec
mov
loopne
test
movsb
xchg
mov
repnz
mov
add
mov
cmp
jb
and
test
mov
gs
popf
adc
loope
test
add
mov
std
call
fnstenv
mov
pop
sti
mov
jecxz
ds
hlt
pop
inc
repz
out
jb
adc
cmp
inc
inc
out
fwait
dec
adc
and
xchg
mov
or
pop
fs
insb
fnstsw
mov
int
std
inc
stos
popa
xchg
xchg
and
inc
push
and
mov
inc
stos
icebp
mov
daa
lock
test
outsl
clc
add
dec
gs
int
or
lock
bound
pop
mov
fwait
mov
jo
jp
imul
inc
loope
cld
ja
jg
cmpl
jno
jp
movsl
ja
fdiv
iret
cmp
mov
add
sti
insb
jmp
sahf
mov
and
movsl
int3
xchg
stc
adc
dec
mov
mov
dec
jns
addr16
cmp
sar
xor
pop
sub
cld
mov
or
test
pop
repnz
jb
cmp
mov
sbb
insb
xor
cmc
jns
lret
nop
jne
int3
mov
ret
out
in
cmpsl
add
mov
add
mov
pop
fwait
push
std
hlt
push
iret
rcll
mov
or
aas
add
dec
in
jecxz
pop
sub
mov
call
movlps
loopne
mov
and
push
mov
dec
arpl
mov
lret
stos
pop
mov
adc
inc
rorl
push
fists
popf
test
or
inc
stos
or
fsubrl
iret
and
pop
sbb
xor
pusha
enter
fsub
push
movsb
scas
mov
psubq
mov
add
xchg
scas
and
sti
sbb
or
daa
pop
xchg
arpl
mov
and
arpl
rclb
stos
push
test
ljmp
mov
and
push
mov
out
fstl
fcoml
push
insl
xorl
movsl
sub
popf
and
add
inc
sahf
ret
xor
shll
mov
mov
addr16
lds
dec
mov
shl
xor
pop
into
xchg
iret
pop
adc
sub
arpl
lds
fidivrs
lock
leave
std
and
decb
fbstp
xor
jl
stos
pop
adc
lock
cmp
sti
jb
mov
leave
push
test
ja
xchg
fadd
adc
jb
jnp
xor
cmpsb
lret
stos
icebp
dec
xor
mov
je
sbb
adcb
movsl
push
pop
cld
insl
jae
ja
cmc
int3
imul
cs
adc
jo
mov
mov
xchg
sub
int3
loope
lcall
adc
jmp
inc
imul
test
xor
pusha
frstor
cmc
popa
clc
aaa
addb
es
push
pop
scas
mov
xor
icebp
cld
iret
arpl
add
pushf
lea
push
sub
push
stos
xor
out
loope
jo,pt
hlt
out
push
fmull
outsl
mov
add
mov
adc
je
inc
jns
cmpsb
in
jo
mov
jle
and
loope
cmc
mov
sbb
xchg
mov
mov
cmpsb
repnz
movsl
mov
cli
fdivp
int
push
mov
test
mov
xchg
xchg
fdivs
sarb
inc
xchg
push
gs
xor
xchg
insb
mov
fidivs
mov
int
out
mov
mov
icebp
insl
dec
stc
imul
adc
sub
mov
mov
pop
out
rclb
mov
or
jb
jb
icebp
repnz
stc
push
or
adc
shll
xor
stos
lock
push
cmp
cmp
dec
cmp
and
stc
jnp
sub
mov
push
xchg
in
repz
adc
mov
int3
movl
jno
std
xorl
dec
scas
mov
sbb
mov
adc
xor
xlat
xor
add
int
inc
adc
pop
xchg
inc
jmp
mov
enter
aad
cli
std
inc
xor
lock
mov
popa
dec
ja
xor
dec
cli
and
cmpb
push
jb
test
jmp
hlt
xor
out
icebp
das
mov
mov
loop
adc
xor
xor
xor
movsb
cltd
add
std
inc
cld
fisttpll
incl
cmp
jbe
nop
mov
subl
jg
cmp
lret
clc
adc
sbb
jle
fbstp
add
mov
lock
test
pop
sub
xchg
pop
xlat
imul
lods
cmpsl
negl
nop
repnz
pop
loopne
and
das
cmp
stc
aad
cli
lret
push
add
sub
push
mov
xchg
adc
call
scas
mov
mov
ljmp
and
cmp
call
mov
movsb
rol
out
je
mov
pop
jo
cltd
cmp
enter
arpl
out
and
movsb
fs
mov
stos
push
inc
int3
and
cs
jmp
pop
shrb
mov
jge
mov
jp
add
pusha
and
push
shl
mov
cli
inc
sbb
rolb
int
sbb
xchg
lahf
daa
and
jns
mov
and
pop
lret
mov
mov
xlat
jae
out
popa
pushf
bnd
cmpb
xor
inc
stos
and
adc
test
ds
sahf
fisubrl
or
push
push
jmp
repz
xor
jmp
inc
or
mov
xor
xchg
adc
inc
lds
adc
jo
sbb
fs
sbb
insl
mov
nop
mov
fstp
pop
iret
mov
dec
lea
std
ror
fcom
xchg
stc
adc
sti
rclb
pop
out
mov
fcomi
pop
cmp
xor
xor
jo
cmpl
pop
pop
jl
out
push
sub
int
addr16
cmpsb
in
and
fwait
jns
daa
mov
jb
sbb
repnz
ror
mov
pusha
shrl
pop
inc
inc
mov
mov
ficomps
call
mov
mov
and
xchg
sub
into
ficomps
cmpsl
jle
jnp
jo
adc
mov
addr16
mov
mov
sub
ret
add
jo
nop
inc
mov
pop
jp
imul
mov
mov
push
bound
enter
lahf
inc
das
mov
mov
dec
jle
and
test
adc
adc
lret
mov
and
adc
xor
sti
loope
cmpsl
mov
push
loopne
mov
loopne
je
pusha
sub
and
mov
xor
adc
inc
mov
dec
fs
fbstp
add
inc
jmp
xor
push
sti
fwait
push
and
jae
shrb
testl
and
sub
ljmp
adc
mov
mov
mov
xor
fld
sub
xchg
test
leave
daa
movsl
add
out
mov
fwait
imulb
sar
jp
nop
xchg
scas
sub
inc
clc
mov
negb
add
out
frstor
jae
or
daa
cmp
or
mov
inc
xchg
das
pusha
add
adc
push
mov
add
pop
int
insb
dec
enter
jnp
inc
movsb
push
rclb
mov
sti
mov
ds
or
iret
test
xor
adc
sbb
jmp
inc
and
aaa
mov
jg
dec
leave
push
and
out
lock
cmpsl
in
sbb
mov
pushf
push
mov
mul
mov
push
jnp
sub
pop
xor
lcall
mov
lock
push
mov
lcall
rcl
addr16
loopne
in
fidivrl
sahf
xor
cld
std
enter
aas
dec
add
sub
insb
lds
cmpsb
aad
push
inc
fimuls
push
pusha
mov
aas
xchg
popa
mov
sti
adc
std
dec
cmc
adc
jno
bound
insb
mov
cli
jmp
cli
dec
and
xlat
mov
push
xor
outsb
sbb
imul
arpl
inc
inc
and
movsl
aad
xor
shl
add
pushf
xchg
movsl
push
push
int
mov
movsb
mov
popf
loopne
enter
lea
jb
fwait
sub
push
aaa
add
arpl
xchg
cld
int
sbb
shl
fsubrs
jmp
movsb
mov
jb
into
enter
xor
daa
popa
jo
lret
push
cld
fildl
aaa
push
mov
mov
jns
pop
mov
xor
icebp
stos
test
cmp
ret
sahf
stos
das
jnp
mov
fdivp
or
test
dec
fdivrs
pushf
or
stos
jle
daa
leave
add
mov
jecxz
aaa
cli
jno
push
scas
sbb
repnz
xorl
cmp
mov
jae
adc
xchg
dec
push
je
mov
stos
sub
push
pop
sti
popa
inc
fildll
clc
ds
mov
pop
iret
lds
dec
and
std
cmp
jge
scas
mov
aas
icebp
cltd
mov
mov
loopne
fidivl
push
inc
push
sub
data16
andl
lock
inc
inc
add
mov
jb
ret
jo
cli
ffree
sbb
jge
pop
ds
in
fsubrp
inc
mov
jp
insl
xlat
pop
and
jl
out
xor
xchg
jecxz
sbb
sbb
mov
xchg
fcom
mov
and
jmp
rorl
dec
les
and
stos
add
mov
popa
outsl
cmp
adc
xor
add
movsl
mov
sub
mov
aad
mov
cmp
movsl
into
mov
lret
adc
jmp
adcb
pop
mov
cmpl
and
push
lock
lods
in
ss
lcall
lds
mov
push
das
add
hlt
inc
dec
ret
or
in
push
enter
push
pop
mov
les
jb
test
shrl
mov
jp
xchg
jle
das
fdivrp
rolb
jle
mov
aaa
pop
popl
mov
pop
outsb
sbb
pop
mov
add
mov
decb
xchg
or
sarl
xchg
mov
mov
imul
lret
ret
cltd
pop
stos
jo
or
add
arpl
sbb
mov
outsb
ds
aam
sub
cli
mov
xchg
mov
jl
les
push
fstps
add
aas
push
dec
adc
xor
cli
jb
sbb
call
inc
mov
cmp
test
xchg
jnp
call
test
rcrb
sbb
xchg
sti
lods
sti
mov
sbb
jp
push
lret
mov
jnp
inc
insb
sti
dec
mov
cli
xchg
call
stos
movsb
arpl
shrb
sub
push
and
stos
inc
mov
mov
jns
movsb
int
mov
pusha
jae
mov
stos
mov
loop
sub
fcomip
xorps
inc
mov
push
or
cmp
bound
das
adc
adc
mov
push
dec
es
sti
leave
inc
sbb
lret
repnz
les
push
push
mov
clc
cmp
push
mov
sub
push
mov
mov
leave
int
push
jg
lds
lret
iret
mov
outsl
mov
sbb
jg
int
inc
cmpsb
lods
jo
dec
push
ss
mov
cmc
js
or
or
test
sahf
jge
lds
test
mov
jecxz,pn
xor
stos
ret
mov
loopne
and
fsubs
lock
aas
add
add
ret
mov
cmp
sti
mov
xor
std
cmpsl
ds
mov
stc
add
xor
divb
imul
and
mov
out
pushf
xor
movl
test
jmp
pusha
mov
push
clc
adc
lock
pop
ret
in
push
cmp
cmpsb
mov
push
mov
xchg
cmp
cld
inc
jmp
arpl
sbb
adc
shlb
jo
int
sub
jmp
inc
adc
mov
fbstp
add
push
xchg
xchg
in
adc
jg
adcl
xchg
jne
cltd
mov
shlb
cmp
out
mov
test
add
rolb
xor
sahf
arpl
int
ret
fsubrp
inc
addr16
inc
cmp
mov
movsl
push
push
out
pop
pop
mov
std
movb
mov
pop
sahf
icebp
add
sbb
scas
repnz
daa
popl
shll
popa
pop
test
xor
dec
jo
add
xchg
mov
jb
mov
int
clc
in
in
out
popa
mov
icebp
or
jns
xor
cli
adc
or
insl
stos
xor
adcl
jmp
scas
jne
iret
icebp
inc
sahf
jb
mov
xchg
jle
jmp
icebp
pushf
xlat
mov
lods
bnd
add
fs
push
mov
imul
push
fisubl
cmp
cmp
jae
inc
dec
icebp
lcall
mov
roll
aam
enter
imul
inc
inc
push
cmp
mov
fwait
jb
pop
test
sti
mov
test
icebp
insl
mov
cli
lock
loopne
ljmp
sbb
mov
or
cld
xor
scas
pop
xor
mov
daa
jecxz
mov
fstl
sub
or
rorl
jmp
mov
fcomi
jmp
cltd
sub
icebp
pop
mov
mov
stos
outsb
inc
add
pushf
repnz
cmp
mov
gs
mov
icebp
pop
xchg
sarl
push
or
movb
movsl
fstpl
push
lds
mov
sahf
sarl
or
movsb
jmp
jmp
xchg
ret
inc
ja
xor
or
icebp
popf
mov
xor
push
mov
dec
out
shr
add
pop
jno
sti
sahf
sub
into
js
cmpsb
pop
jb
xor
fldl
repnz
scas
and
mov
ljmp
lret
mov
roll
inc
aaa
das
jb
movsb
xlat
cmp
nop
mov
ret
and
inc
mov
pop
jmp
mov
cmp
sahf
jmp
pop
mov
mov
cmp
aad
mov
shrb
pop
jne
xchg
mov
xlat
cmp
jbe
ds
push
lds
push
mov
repnz
pop
loopne
mov
imul
jnp,pt
mov
je
add
decl
sbb
sbb
pop
push
mov
mov
xlat
fistpl
jmp
sarl
subb
punpckhwd
repz
mov
arpl
mov
jp
mov
stos
mov
movsb
mov
push
loopne
add
ja
and
mov
push
jno
pop
jae
sbb
mov
pop
inc
mov
dec
aam
sbb
std
outsb
cli
cli
inc
mov
mov
out
jo
out
pop
mov
xchg
lcall
in
arpl
adc
int
dec
sbb
inc
and
mov
pop
mov
jmp
cmp
xor
hlt
adc
repnz
mov
or
icebp
repz
or
or
cmc
ds
mov
ret
xchg
adc
xor
mov
repz
mov
fucomp
sub
mov
loop
stc
mov
ficomps
nop
mov
and
add
aaa
push
sahf
mov
popa
call
pop
stos
jns
jle
mov
testl
sbb
pop
sti
or
jo
push
cmp
popa
cmp
xor
or
jnp
ja
sbb
mov
jp
fimuls
add
jg
out
jo
sub
cli
lret
stos
and
dec
mov
insb
fists
push
push
ds
test
mov
jo
push
aaa
push
jmp
lcall
and
das
inc
sahf
adc
jo
pop
inc
xchg
bound
insb
and
mov
pop
or
sbb
fs
xchg
mov
stos
cmpsl
jl
add
dec
imul
scas
test
jecxz
test
stc
mov
pusha
and
pop
xchg
mov
test
pop
push
or
add
inc
mov
je
dec
insl
xchg
pop
mov
mov
or
imul
push
popa
add
push
add
or
dec
or
pushf
loopne
pushf
mov
jge
mov
push
mov
or
ds
xchg
push
xor
adc
xchg
jb
xlat
jmp
sbb
push
inc
xor
aas
int3
adc
popa
mov
xchg
test
mov
mov
lds
nop
pop
sti
xchg
test
repnz
test
in
mov
aaa
push
dec
icebp
push
aam
adc
into
orb
jnp,pn
aam
xchg
dec
out
adc
lock
xor
mov
pop
daa
jns
adc
jmp
test
repnz
aas
or
lret
shl
cmpsl
roll
rol
fadd
daa
xor
jmp
int
mov
sti
mov
adc
adc
bound
and
arpl
outsl
ja
mov
mov
mov
shl
xor
insl
mov
adc
inc
pop
xchg
cmp
fstl
test
hlt
inc
push
lahf
sub
pop
ret
test
inc
sbb
add
pop
mov
mov
mov
add
lea
add
bound
lcall
incl
out
addl
jb
imul
pop
cmp
icebp
lods
ret
and
roll
pop
arpl
mov
imul
call
add
aam
fwait
jg
enter
lea
sbb
add
fsubl
push
push
or
or
and
popf
pop
jb
aam
mov
faddl
sub
push
cmpsl
jno
add
loopne
into
jmp
xchg
rolb
test
inc
push
leave
push
mov
pop
mov
xchg
mov
jmp
testl
xchg
jmp
adc
dec
add
mov
scas
mov
je
or
xor
xchg
hlt
fldt
mov
outsb
subl
divb
xchg
movsb
cli
icebp
cwtl
add
loopne
outsb
in
cltd
pushf
adc
insb
int
jbe
xchg
addr16
jmp
pop
mov
mov
sub
xchg
pop
xchg
add
sub
dec
jp
popf
imul
or
psubq
xchg
fnstsw
mov
push
lock
out
pop
jnp
jmp
adc
push
shll
into
dec
movb
xchg
mov
dec
into
mov
rcrl
push
cmp
fdivrs
jmp
sbb
sub
test
mov
pushf
lcall
repz
cmp
push
mov
pop
dec
mov
mov
add
test
out
inc
pop
or
pop
es
mov
ljmp
mov
pushf
outsl
fisubrs
add
outsb
adc
jnp
or
adc
sub
lea
and
js
aam
inc
or
mov
into
ret
cmp
jnp
pop
jnp
fwait
dec
sarl
jge
ret
dec
mov
fs
arpl
mov
out
ret
mov
lea
pop
push
jge
cmp
test
daa
xchg
pop
adc
pop
xchg
jae
out
mov
leave
mov
pop
cli
pop
shrl
call
xchg
fdivs
icebp
dec
adc
jno
rolb
jmp
inc
ds
pop
mov
xchg
sub
push
adc
sar
and
mov
jmp
pusha
and
in
stos
test
jno,pt
pop
jae
stc
xlat
push
adc
rorb
and
popa
rcr
sbb
jg
cmp
imul
inc
mov
pop
adcb
inc
xchg
rolb
push
test
mov
pushl
cmp
cs
lock
pop
xor
mov
loopne
jb
call
cld
push
push
lret
add
jecxz
rcrb
xchg
dec
adc
dec
dec
mov
xchg
cwtl
jg
push
mov
pusha
ja
sbb
jb
cmp
add
sahf
lds
pushl
mov
cltd
mov
ljmp
lods
push
sub
pop
gs
inc
scas
jno
pushf
adc
pop
jg
fcoml
jo
xor
hlt
push
jnp
stos
xchg
xor
call
mov
mov
add
scas
sbb
jp
xor
mov
sbb
popf
dec
shlb
pop
cwtl
fnsave
mov
add
mov
daa
add
repz
xor
mov
pop
mov
js
stos
pop
aam
leave
sub
mov
or
push
fsub
mov
jnp
ljmp
aam
mov
cmp
jo
mov
push
sbb
adc
pushf
cli
out
and
cli
and
jmp
out
xchg
fsubp
cli
xor
test
aad
decl
xor
imul
shll
cs
inc
dec
fidivs
and
sti
fildll
cld
adc
cmp
test
xor
in
rcll
ds
cmpsl
mov
mov
insb
scas
ljmp
fldl
jp
mov
dec
or
mov
mov
mov
stos
mov
sbb
repz
or
ret
jmp
insl
test
adc
clc
das
sub
sti
lahf
mov
test
and
adc
jnp
clc
movsl
fs
lock
xor
divb
flds
rcrl
xchg
mov
aad
ret
jns
dec
dec
test
fidivs
cmp
int3
mov
icebp
int3
push
pop
jge
in
xchg
xor
outsl
clc
xor
pop
push
jmp
mov
push
sbb
xor
adc
adc
jne
insl
addb
jae
push
rcll
jnp
sub
adc
mov
pop
hlt
xchg
lea
dec
adc
adc
pop
cmc
add
into
and
out
mov
cmpsb
jnp
je
lea
aam
inc
iret
ljmp
rol
test
rcll
xor
xor
push
xor
push
ds
mov
fnsave
test
push
and
jl
shr
add
xchg
adc
mov
jb
pop
clc
push
insl
pop
jo
lds
sarb
daa
push
push
fwait
pop
movsb
enter
sahf
ret
hlt
shr
test
je
pop
jge
mov
cmp
mov
adc
sbb
stos
mov
cltd
lods
sbb
cs
decl
cmp
mov
or
push
sti
loop
sahf
sbb
popa
sbb
pop
xchg
jmp
jl
mulb
jnp
sbb
sti
cmpsb
mov
sub
mov
mov
setb
inc
cmp
pop
stos
pop
push
and
add
lcall
not
push
leave
cmpsb
mov
dec
jg
gs
push
sbb
idivl
js
sub
dec
std
sahf
rolb
pop
out
test
jecxz
and
lods
adc
adc
or
stc
lret
add
loopne
pop
ret
mov
xchg
and
jb
mov
ret
jo
sti
js
loopne
and
call
cmp
stos
pop
std
push
add
inc
mov
jnp
cmpsb
sub
je
lret
dec
mov
loop
je
mov
dec
inc
lahf
aad
ret
jae
repnz
gs
repz
add
ret
pop
fldt
lods
sti
dec
cli
fcomp
adc
sub
and
leave
or
repz
dec
ja
jbe
mov
jns
cld
mov
and
push
fmull
fldenv
xchg
adc
mov
and
addr16
std
mov
addr16
lea
lcall
jae
mov
jmp
mov
pop
mov
cmpb
shrl
mov
push
adc
mov
pop
dec
mov
stos
push
ss
stos
shlb
pop
shrb
sub
add
mov
jg
mov
stos
rclb
mov
jbe
push
idivb
js
push
mov
es
lcall
fwait
mov
mov
push
inc
lock
sub
inc
pop
ds
es
and
jb
cmp
ds
popa
push
frstor
mov
jns
pop
or
mov
inc
mov
mul
mov
sti
into
mov
sbb
sbb
fmuls
cwtl
mov
xor
or
jp
jno
ljmp
imul
dec
mov
out
xor
cmpl
hlt
mov
pusha
push
daa
daa
outsb
jp
fiadds
xor
sub
xor
mov
addb
mov
std
inc
cmpsl
pusha
xchg
jmp
popf
mov
push
cmp
fdivs
jle
mov
mov
scas
mov
pop
inc
fldl
pop
aam
jle
jle
popa
pop
jb
ds
jp
inc
sarl
push
lret
adc
pushf
pop
jmp
dec
pop
out
out
inc
addb
add
ja
cmp
ss
mov
jne
adc
push
xchg
cli
xor
pop
imul
aas
adc
sbb
cmc
inc
out
lock
shlb
or
movsb
jmp
sub
and
mov
mov
push
aaa
push
mov
popf
cmp
adc
movsb
shr
fistl
mov
sbb
pop
cli
call
jo
out
mov
fcoms
out
fsubrl
popa
repnz
sti
push
mov
mov
popf
mov
lock
mov
cmpl
sti
call
jg
sarb
notl
mov
add
jl
dec
icebp
call
stos
enter
xchg
sbb
mov
dec
adc
jnp
aad
lret
mov
loopne
cwtl
out
aas
xor
test
and
stos
cmp
or
inc
stos
xchg
std
sbb
xchg
loop
mov
mov
adc
outsb
mov
cwtl
ds
out
jb
rcrb
lret
arpl
xor
cs
clc
push
movsl
jnp
in
ret
cmp
push
dec
mull
dec
imul
and
push
cmpsb
in
in
int
out
jge
movsb
outsl
mov
lea
shll
daa
inc
adc
ds
and
addr16
xchg
cmc
jnp
shr
insl
in
sar
mov
or
loope
roll
adc
jne
ja
notl
pop
cmp
pop
mov
ljmp
addr16
sbb
imulb
or
push
jmp
shlb
in
subb
fdivrl
sbb
enter
adc
mov
lcall
mov
xchg
fsubrl
lock
inc
adcb
xor
lret
dec
sbb
in
mov
das
adc
or
hlt
push
ljmp
repnz
sub
sub
sahf
xor
sarb
shll
ret
cmp
shll
sahf
add
outsb
mov
mov
rorb
fdivl
ficoml
mov
scas
leave
jecxz
adc
es
adc
sub
xchg
sub
imulb
es
movsb
inc
sub
cmp
and
cmp
mov
xchg
and
xor
mov
stos
call
adc
pop
mov
push
or
cld
shll
sub
aaa
rcrb
inc
js
adc
mov
scas
fisttpll
mov
icebp
mov
daa
mov
push
add
cltd
test
jae
cmp
sti
mov
sbb
fdivrl
lds
enter
dec
mov
mov
jo
xchg
bound
inc
jo,pt
pop
jle
inc
movsl
pushf
fldenv
inc
je
fstl
mov
call
pop
push
jae
and
xor
mov
mov
lods
icebp
addr16
push
xor
lods
scas
lds
out
lock
pop
and
insb
cmpsl
shrl
push
mov
mov
divl
inc
data16
xor
rcl
sti
sub
stc
or
sahf
xchg
xchg
cmpb
les
push
mov
iret
mov
push
popl
decl
bound
lcall
push
rclb
xor
and
adc
push
repz
push
sbb
mov
stos
sarb
les
cwtl
pop
inc
sbb
orl
sbb
push
adc
and
test
or
lcall
icebp
mov
popf
xor
leave
clc
ja
in
and
cmp
repz
mov
xorb
mov
adc
stc
pop
out
sub
mov
pop
sbb
jb
mov
pop
mov
xor
shrb
and
shlb
and
sub
xlat
incb
aaa
loopne
pop
stos
das
mov
xchg
push
scas
ljmp
mov
int3
dec
xor
pop
mov
sub
cmp
out
je
cli
mov
fs
lea
insl
jle,pn
jg
push
sub
fdivl
sarb
or
xlat
push
cmpsb
negl
or
shll
stos
cld
and
shl
loopne
inc
dec
mov
repnz
int
fsts
inc
inc
push
xchg
sbb
scas
loop
dec
stc
rolb
mov
lock
lcall
jl
mov
fsubl
rolb
adc
xchg
sti
adc
faddl
cld
lock
sub
scas
mov
add
mov
sub
cmp
mov
pop
je
jb
xorl
cmp
sti
pop
cli
push
push
scas
imul
mov
ss
pop
loopne
xchg
mov
movsb
cmp
or
arpl
insl
aaa
test
mov
sbb
fcoml
jg
ljmp
movsb
arpl
jge
cmc
or
jecxz
push
mov
sub
or
mov
mov
repnz
rclb
mov
loopne
pushf
insl
push
cwtl
addr16
mov
notl
or
sub
mov
xor
lret
aad
mov
add
lods
push
xorl
psllw
imul
mov
pop
pop
xlat
xor
ljmp
add
lahf
inc
shll
movsl
xor
mov
jl
xchg
outsb
lret
in
mov
dec
adc
cmpsl
cmp
xchg
cmc
add
dec
mov
iret
ljmp
mov
arpl
addl
mov
xchg
sbb
loopne
je
mov
stos
ret
inc
push
adc
xchg
fucomi
popa
mov
aad
push
stos
ds
jb
test
fsubrl
test
mov
movsl
cmp
cmp
xchg
loopne
xchg
xor
fisttpl
inc
aad
scas
leave
js,pt
jo
int
imul
ret
lahf
cmpsb
repnz
sbb
sub
inc
lret
bound
adc
and
loop
mov
rorb
pop
sbb
add
negl
xchg
mov
push
mul
add
scas
sar
pop
sub
cli
pop
inc
loopne
test
pop
cmp
mov
jae
stos
adc
adc
jecxz
xchg
pop
push
insb
enter
inc
scas
xchg
loope
push
repz
imul
sti
xorl
mov
jbe
mov
add
ja
xchg
daa
popf
lret
filds
jb
std
ficoml
loope
test
or
sahf
dec
mov
adc
cld
adc
and
scas
or
loopne
adc
inc
xchg
fmull
testb
pop
mov
sub
cli
xchg
adc
push
jns
dec
in
test
xchg
sbb
rorb
fmul
cmp
imul
das
jo
pushf
clc
xor
fnstsw
das
daa
fadds
ret
icebp
out
in
fcoml
inc
pop
lock
out
fldcw
mov
inc
lret
cmpsb
dec
lods
pop
mov
out
xchg
cs
movsb
dec
hlt
insl
imul
jnp
and
dec
adc
mov
sbb
mov
imul
push
xor
push
lret
inc
xchg
sbb
xchg
mov
shlb
stos
jb
mov
iret
cmpb
sub
cmpsb
mov
scas
and
and
and
nop
into
push
pop
inc
push
jecxz
mov
jmp
leave
dec
push
popf
pop
pop
bswap
jb
cmpsb
shlb
stos
cmp
shlb
call
mov
pop
aaa
mov
repnz
push
lods
sbb
push
xor
int
mov
cld
shlb
insl
ret
lret
pusha
jno
outsl
or
mov
fisubrs
pop
and
pop
repnz
rcrb
add
addb
xchg
xor
das
daa
cmp
fcomi
mov
incl
pop
jle
in
and
jmp
jb
pop
sahf
jg
ds
shrl
mov
add
cmp
mov
loope
shr
jge
cs
inc
sbb
test
pop
xor
pop
lods
sbb
push
jb
das
daa
dec
pop
add
dec
jmp
xchg
cmpsb
int3
push
push
das
fcoml
rcll
fstpl
aam
add
jae
push
lock
push
xchg
add
in
aad
fcomps
cmp
nop
sbb
jb
sub
adc
ret
add
pop
into
and
test
fidivs
gs
dec
mov
sbb
add
mov
mov
ret
mov
bound
add
xchg
adc
inc
cmc
mov
adc
or
mov
push
inc
cmpsb
ret
jno
imul
lahf
adc
xor
repz
push
sub
lahf
fdiv
inc
stc
jo
aad
push
jge
nop
mov
and
lret
add
mov
xchg
imul
xor
mov
adc
xchg
jns
fisubrs
and
pop
add
rolb
movsl
cmp
jno
iret
pop
fsub
mov
lock
jb
add
add
mov
repnz
gs
fcomps
lret
cmp
push
jmp
push
add
jo,pt
jp
and
test
adc
add
in
sbb
int
cli
and
es
push
mov
push
mov
cli
in
insl
jg
mov
mov
push
mov
mov
jno
xlat
add
cwtl
xor
sub
mov
pop
mov
sbb
pop
mov
mov
lods
pop
adc
cmpsb
cmp
ja
loope
cmpsb
mov
xor
xchg
or
and
es
lahf
xchg
popa
or
das
or
xchg
jb
fs
jmp
std
arpl
cmp
push
dec
negb
inc
mov
imul
pop
add
leave
push
adc
jns
bound
cmp
jbe
mov
aam
dec
int
js
int
cmp
push
pop
add
out
das
jae
and
dec
mov
mov
aas
jle
xchg
imul
cmp
push
movsl
sub
jnp
jnp
in
mov
add
aas
int
push
aad
jmp
mov
jp
adc
adc
pop
sarl
pop
jle
aas
push
mov
mov
lahf
adc
in
enter
lcall
hlt
dec
stos
cs
cltd
out
insl
out
loop
push
mov
mov
cmp
add
mov
jae
adc
inc
mov
cmp
xlat
adc
inc
mov
sub
pop
insl
mov
jno
sbb
pop
lret
loop
push
mov
mov
scas
push
frndint
xchg
add
bndldx
repnz
shl
aad
sahf
cld
jle
dec
arpl
int
lret
outsl
mov
mov
jg
fcomip
imul
and
nop
jge
adc
std
pop
mov
mov
mov
lret
out
mov
jbe
xor
push
cmpl
rolb
enter
jecxz
fsts
lea
incb
push
sub
aaa
or
add
shrl
ja
out
push
repz
int
mov
and
loop
lea
xor
sarb
shlb
in
out
jno
inc
xor
iret
idivb
xor
aaa
add
bound
push
inc
xchg
adc
lret
movsl
push
adc
sub
mov
stos
xlat
imul
ret
sub
ret
in
cld
push
and
fsubrp
push
sarb
xlat
pop
cmp
cmp
mov
mov
test
mov
inc
xor
fdivrl
nop
jnp
leave
inc
jns
xchg
cmpsl
in
xchg
mov
popa
push
inc
mov
pop
cmp
and
jae
out
pop
ds
mov
jns
xchg
in
lods
sbb
sub
mov
lea
in
loope
aas
ret
pop
and
sahf
cwtl
jo
pop
sahf
mov
ret
jo
movsl
mov
test
icebp
dec
or
lock
mov
mov
push
cmp
xor
push
jg
test
dec
or
pop
dec
mov
inc
pushf
jne
xchg
xor
mov
leave
sbb
pop
ss
cltd
aas
mov
imul
cmpsl
dec
int
test
jge
shl
stos
fstps
int
outsl
movsb
aaa
in
xchg
in
push
andb
and
mov
xor
fidivrl
push
cmp
cmp
icebp
push
inc
int
sahf
sbb
lret
movsb
cltd
je
inc
pop
sub
jb
daa
lahf
popl
mov
mov
xchg
pop
mov
test
push
mov
je
cli
pushf
repnz
js
loopne
mov
cmp
dec
mov
std
psadbw
cmp
sbb
fsubl
and
xchg
shrb
xlat
ret
push
xchg
jns
sbb
mov
shrb
mov
stos
nop
cmc
jb
jb
scas
jnp
inc
imul
xor
xor
cmp
mov
lcall
push
aas
mov
dec
mov
outsb
inc
push
leave
adc
mov
mov
hlt
lahf
mov
sub
mov
jae
in
insb
sbb
imul
jb
jb
adc
add
adc
popf
mov
ret
pop
push
negb
xchg
mov
aas
dec
divb
rolb
cmp
jb
pop
test
mov
dec
rcl
cmp
and
mov
ja
mov
push
and
mov
lock
and
dec
mov
ds
hlt
cltd
jb
int
jae
mov
mov
jbe
cmp
and
pop
cmp
dec
ds
cmp
and
movsb
mov
lret
and
xchg
lret
es
cltd
std
scas
adc
dec
scas
lds
out
jl
sbb
xor
sbb
pop
dec
push
ficoms
movsb
ds
mov
fiaddl
addb
push
dec
mov
adc
jno
xchg
lcall
pop
jp
ret
clc
cmp
js
mov
pop
das
ds
mov
cli
jo
scas
mov
addb
push
ret
jbe
ds
dec
push
imul
stos
sub
sbb
and
es
ljmp
push
testb
push
or
loopne
adc
sub
lock
xchg
sbb
mov
inc
adc
jb
daa
cwtl
fimuls
stos
adc
stos
add
sbb
mov
mov
mov
inc
fcomip
push
in
arpl
sub
shl
stos
iret
sub
mov
adc
movsl
popa
add
mov
jno
lock
ret
cmpsl
xor
jnp
das
cs
push
out
xor
push
pop
cmp
gs
out
popa
or
aam
stc
hlt
mov
pushf
ret
negb
jb
repnz
sti
sarb
fidivs
imul
fadds
btc
cmp
mov
sub
repz
icebp
cmp
push
out
js
imul
adc
add
das
cmp
sti
add
dec
scas
mov
sbb
sub
sbb
mov
cmp
mov
inc
bound
mov
arpl
arpl
stos
jbe
fldenv
sahf
adc
repnz
mov
cwtl
outsl
enter
dec
je
mov
js
in
cli
pop
lret
jno
cwtl
fdivr
fldenv
pop
pop
ds
lret
sub
sbb
jecxz
push
int
or
adc
loopne
stos
adc
lea
push
ret
jae
inc
or
fstpt
cmp
fstpt
push
jg
insb
in
push
push
mov
push
jmp
sub
ds
movsb
push
push
inc
mull
movsb
and
or
adc
and
leave
imul
mov
xchg
lds
ret
push
orb
fsubrs
sub
or
xchg
stc
push
add
repnz
lock
rcrl
pop
push
sbb
test
mov
pop
xchg
test
mov
mull
or
dec
data16
inc
adc
adc
push
pushf
mov
mov
rcl
lods
add
movsl
mov
addr16
out
mov
stos
adc
push
cmp
lods
fsubl
rcll
push
xor
pop
mov
sti
cmp
jo
out
mov
jne
scas
vmaxss
push
cmp
outsb
or
testl
testl
jle
and
movups
jo,pt
sbb
sub
arpl
push
adcl
pop
mov
push
lcall
mov
loopne
daa
mov
mov
fsts
add
xor
pop
jno
aad
mov
cmp
add
shl
shl
inc
lret
push
loope
adc
loop
rorb
pop
push
adc
sub
daa
add
cmp
nop
jns
lods
and
dec
adc
add
sbb
pusha
fisubrs
mov
fisubl
ja
sub
pusha
mov
jne
movsb
dec
jle
je
lea
popl
dec
adc
dec
mov
iret
jmp
xchg
test
pop
sub
sbb
outsl
jl
hlt
insl
mov
add
inc
mov
out
xor
aad
pop
adc
sub
js
pop
dec
xchg
pop
mov
inc
into
jge
int3
mov
cli
sbb
hlt
mov
repnz
mov
pushf
adc
stc
mov
sti
pop
cmp
in
xor
aas
andb
cmp
mov
push
add
mov
cmp
xor
shrb
cmp
popf
cmp
fucompp
jo
dec
es
inc
jbe
movsb
pushf
out
mov
fimull
fisubrl
leave
add
pop
xor
aam
sbb
popf
orl
call
mull
xchg
mov
jb
inc
push
imul
inc
xor
pop
fisttpll
pushf
loop
pushf
jae
pop
iret
add
ja
xor
test
clc
shl
xor
loop
loopne
in
sbb
scas
xchg
xor
xor
sahf
lret
jmp
leave
movsb
cmp
jp
jb
xor
pusha
pop
icebp
mov
je
inc
fsts
xor
test
int
xor
add
stos
jl
lock
pushf
adc
xchg
and
mov
stc
push
icebp
jbe
sti
mov
mov
pop
mov
jno
lods
and
imul
fsubs
cld
inc
out
das
inc
adc
mov
dec
mov
push
inc
clc
sub
int
xchg
out
inc
call
repnz
adc
and
stos
insl
xor
dec
es
popl
or
loope
lret
icebp
cli
nop
icebp
fidivs
roll
push
push
rclb
or
ljmp
and
inc
sbb
adc
xchg
mov
dec
and
adc
mov
call
or
cmpsl
mov
sbbl
fnsave
fnstcw
sbb
outsl
bnd
xchg
inc
push
adc
sub
add
xor
jmp
inc
nop
jns
cmp
ss
adc
test
inc
and
int
mov
push
xchg
lcall
cmp
jae
mov
dec
into
data16
or
and
push
popf
mov
mov
mov
xlat
xor
rolb
fs
scas
mov
ficompl
jmp
outsl
push
adc
add
in
mov
or
and
pop
xchg
jns
push
jns
or
cmp
fsubl
and
lret
stos
ja
movsb
lahf
mov
add
mov
lcall
push
fidivs
push
clc
add
sub
jne
jo
push
lods
add
mov
jmp
fmul
pop
cwtl
les
mov
mov
addr16
xor
imul
in
jmp
add
repz
sbbl
adc
jmp
das
or
xchg
fsubr
roll
fmull
push
sbb
mov
mov
jb
pop
adc
lea
jae
leave
mov
shlb
cld
mov
xchg
mov
sub
cmc
std
test
mov
jp
jbe
pop
jp
mov
dec
imulb
adc
rolb
jmp
jb
jno
sti
inc
scas
mov
sahf
sub
jmp
icebp
cwtl
repz
ror
sub
push
stos
cmpsb
sbb
push
mov
mov
add
dec
je
ds
in
icebp
imul
adc
xorl
cmpb
mov
jp
pop
adc
mov
je
mov
out
jae
pop
add
shlb
push
mov
imul
clc
aad
inc
jl
outsb
xor
push
xchg
mov
cmpsb
cwtl
aam
sahf
ljmp
jge
pop
add
and
in
xor
out
ret
sub
nop
lock
jmp
cmc
cmpb
cmc
movsb
pop
mov
sahf
mov
test
cmpb
push
inc
test
mov
ret
mov
es
push
inc
scas
jecxz
mov
loopne
xor
sub
jmp
lock
mov
mov
mov
rcrl
cli
loop
mov
rcrl
mov
int
es
dec
popa
cmp
mul
pop
imul
lock
mov
ss
shl
cmp
mov
stos
sub
push
xor
mov
mov
icebp
inc
mov
sub
mov
add
arpl
sbb
mov
cmp
dec
test
cli
add
aam
mov
cld
pop
or
enter
inc
mov
cli
pop
ss
fsubr
mov
push
or
push
mov
sahf
imul
loope
mov
fnstsw
mov
ljmp
dec
arpl
xor
jg
push
int3
adc
mov
mov
mov
hlt
xor
mov
mov
mov
and
or
insl
cli
lds
aad
mov
pop
xchg
add
out
xchg
xchg
dec
mov
push
mov
mov
dec
scas
das
xor
and
add
pop
sbb
fdivrs
sbb
ljmp
mov
jbe
repnz
push
test
cmpsl
pop
aad
les
mov
decb
push
leave
jp
cs
push
js
mov
scas
mov
mov
mov
fmull
mov
adc
movb
fsubrl
shrb
imul
sbb
stc
jecxz
mov
fdivrs
pop
and
push
push
xor
mov
pop
xor
aas
inc
fdiv
js
leave
cmc
xor
enter
xchg
xchg
dec
data16
and
ss
push
dec
out
divl
pushf
xor
aad
lcall
mov
pop
inc
add
mov
dec
std
test
add
pop
cmp
popf
nop
int3
imul
inc
sub
cmc
mov
add
mov
xor
push
mov
nop
mov
or
pop
cmp
lret
mov
call
xchg
test
insl
jle
xchg
push
pop
cli
xchg
mov
in
mov
mov
mov
iret
jmp
fsubrl
pop
xlat
arpl
pop
and
stos
fstpl
stos
sbb
xorb
mov
daa
xorl
mov
out
ret
imul
and
adc
pop
mov
or
dec
es
mov
test
mov
mov
popa
mov
pop
mov
inc
xlat
mov
push
imul
mov
imul
mov
outsl
lret
movb
ss
push
push
pop
jbe
cmp
inc
xor
div
add
mov
aas
xor
cmpsb
xchg
pop
js
fidivs
xchg
insl
push
xchg
xor
mov
cs
inc
pop
imul
repnz
mov
jo
ficoml
push
loop
mov
jo
fwait
dec
cmp
mov
scas
push
dec
nop
push
nop
shll
sub
stos
out
add
in
lcall
scas
lock
test
sub
std
popa
icebp
sbb
ljmp
loope
add
subb
mov
jbe
je
hlt
leave
lret
or
xchg
bound
icebp
pop
push
mov
test
rcl
jecxz
pop
pusha
cmp
pop
shll
push
pop
call
sbb
lcall
int
mov
lea
lahf
lss
dec
sahf
pfrsqit1
gs
dec
and
sub
out
stos
mov
cli
pop
jb
xchg
inc
ljmp
and
xchg
aas
js
leave
jmp
adc
jge
add
jo
pop
sub
js
xchg
scas
mov
mov
lods
out
jb
mov
out
shrl
popa
jl
adc
jmp
loope
push
mov
nop
out
mov
jo
or
xor
fsubrl
push
inc
sbb
shll
out
cs
push
push
in
push
add
adc
adc
repnz
sti
addr16
leave
pushf
int
addr16
mov
loopne
and
bound
popa
mov
mov
dec
fldcw
fcoml
cltd
sub
jl
mov
adc
jle
lock
pop
int
jbe
fcmovnu
pop
fwait
mov
stc
xor
rclb
xor
xor
in
mov
cwtl
enter
daa
jno
inc
mov
cmp
scas
sub
pop
das
int
es
orb
in
and
fwait
jle
ja
adc
movsl
mov
lret
loopne
dec
sbb
mov
insl
xor
test
and
sti
sar
leave
mov
xor
jle
out
out
mov
xchg
and
dec
scas
dec
cmp
out
clc
out
sub
sti
xchg
jnp
loopne
xchg
repnz
repnz
pop
mov
pop
fisttpl
mov
bound
jg
jmp
cwtl
or
xchg
rclb
or
mov
pop
cmp
mov
test
in
jno
mov
jns
mov
jae
adc
sti
cs
scas
adc
jg
popl
cmp
jp
mov
xchg
jl
mov
in
movsl
mov
cmp
jmp
test
push
mov
test
cli
js
push
in
js
xor
mov
outsb
nop
push
sbb
sbb
jl
dec
loopne
shrl
xor
aad
and
shrb
repnz
dec
add
mov
mov
jo
mov
fistpll
mov
neg
test
imul
adc
mov
xchg
jae
pop
cmp
outsb
mull
cmp
out
push
mov
xor
pop
sbb
sbb
test
dec
xor
mov
inc
push
jns
sahf
mov
in
xchg
imul
repz
loopne
loopne
and
adc
jmp
push
xor
int
clc
inc
xchg
loop
mov
pop
mov
div
or
lock
leave
cld
sub
icebp
movb
push
add
cmp
and
cmp
pop
sbb
jge
call
loopne
xor
and
bound
mov
repz
add
dec
cmp
jg
mov
xor
mov
repnz
push
fldcw
ljmp
pop
cmp
hlt
test
push
dec
test
adc
sbb
push
pusha
jl
sbb
cmp
int3
paddw
out
aad
and
test
push
jg
loopne
scas
sti
lds
icebp
fstl
cwtl
stos
push
jecxz
pushf
mov
push
xor
pop
sub
jae
mov
scas
cmc
clc
aad
and
bound
das
dec
sbb
mov
push
push
pushf
insb
mov
xor
mov
leave
call
sub
test
div
inc
cmp
push
je
cmc
xchg
fisttps
sbb
lock
mov
aaa
sbbl
pop
sub
or
pusha
into
cmpsb
mov
mov
sahf
inc
std
lret
lea
jge
dec
add
ficoms
xor
mov
jecxz
das
ljmp
cmc
and
push
sub
ja
cli
data16
mov
icebp
mov
or
fcmovnb
inc
dec
push
adc
sub
inc
andl
ret
gs
stos
cmc
pop
dec
add
pop
xor
clc
xor
xor
out
sti
mov
jo
hlt
cmpsl
pop
mov
or
stos
adc
ficompl
jno
mov
loopne
fdivrs
push
sti
mov
ds
sub
scas
jns
push
push
mov
jb
fldenv
je
dec
jmp
xor
outsb
das
fdivr
jb
mov
pop
rolb
shll
sbb
mov
pop
mov
les
jb
aaa
in
addr16
fdivs
mov
pop
mov
stc
or
sub
icebp
into
adc
cli
mov
add
dec
push
pop
out
push
pop
int3
sti
faddl
orb
repz
mov
aad
movsl
push
ljmp
repnz
dec
js
push
push
pop
push
or
dec
bound
call
mov
ret
mov
stos
loopne
aaa
jge
es
cmc
loopne
daa
ja
subb
xor
std
pop
push
out
and
pop
mov
ljmp
mov
cmc
cmp
adc
sub
dec
mov
stc
lods
pop
mov
icebp
push
mov
lds
popf
int
mov
lret
mov
jl
jns
ficomps
outsb
jmp
js
and
push
nop
test
jmp
out
sub
iret
push
and
mov
arpl
arpl
das
scas
imul
loopne
mov
sti
das
je
imul
aaa
cmpsl
scas
sbb
adc
outsb
add
add
addr16
pop
sti
bound
adc
mov
data16
enter
aas
sahf
int
ljmp
movsl
arpl
loopne
pop
inc
int
xlat
loopne
imul
cmp
dec
stos
movsb
in
loope
cltd
scas
dec
in
adc
mov
stos
push
ja
out
data16
aad
call
and
or
pusha
lods
lds
leave
mov
mov
xchg
push
push
push
sub
sub
stos
sbb
mov
sahf
jp
xchg
mov
ja
lea
push
insl
mov
adc
xchg
mov
es
movsb
iret
stos
add
movsb
pop
shrl
push
adc
adc
add
and
pusha
mov
hlt
rcrb
orb
sub
pop
popl
jne
xchg
lock
dec
jno
or
or
sbb
imul
ljmp
mov
ds
mov
and
int
adcb
inc
imul
inc
aam
int3
frstor
xchg
pop
ret
aad
andb
mov
push
inc
xor
cmp
cmp
daa
shlb
mov
push
inc
cld
fdivp
movsb
int3
and
push
stc
jg
stos
jb
orb
jge
dec
push
sti
mov
jb
std
add
ret
ficomps
pushf
fwait
adc
xchg
fmuls
xchg
in
insb
dec
and
cmp
aam
loopne
and
push
dec
jl
dec
addr16
xor
pop
mov
bound
popa
lahf
leave
sti
popa
arpl
adc
rorl
jo
cwtl
push
stos
out
insb
add
mov
test
xor
outsb
push
je
push
mov
xchg
push
mov
imul
jb
mov
outsb
fbstp
cmc
xchg
push
sbb
popf
or
inc
addr16
and
popa
test
dec
mov
cmp
iret
leave
and
mov
pop
call
fwait
insl
xchg
xor
and
inc
inc
ss
dec
sub
movsl
adc
test
daa
push
cmp
scas
repz
popf
out
ds
sub
mov
cld
mov
xor
jb
gs
adc
leave
xor
mov
push
sub
jno
sub
add
push
int
test
bswap
je
jle
test
enter
fwait
in
sti
pop
aad
jae
jnp
aas
les
das
fsubl
bound
jno
push
jl
and
aaa
xorb
pop
into
mov
out
ret
sbb
cwtl
dec
fs
xor
fidivrl
sbb
aad
daa
jnp
xlat
sub
orb
repz
imul
xor
cs
lock
jo
js
mov
mov
out
jbe
ret
orb
aas
mov
mov
dec
roll
add
ljmp
jb
shll
xchg
lds
inc
call
call
jno
notb
adc
xor
popf
fdivs
adc
in
add
sbb
roll
inc
and
popf
mov
int3
xchg
inc
mov
loopne
outsl
fdivrs
jp
adc
rcrb
aad
or
lock
push
add
jne
stos
je
adc
test
loope
movsl
rcl
or
movsb
je
pop
shl
aad
fstpt
out
into
mov
add
scas
pop
aas
and
imul
mov
ret
cs
xor
jmp
add
fldl
es
inc
and
sub
sbb
pop
test
or
ret
xor
push
mov
lock
roll
ret
shlb
imul
dec
test
push
fwait
push
jne
cwtl
adc
sub
imul
sub
inc
xor
dec
mov
stos
loop
imul
adc
or
push
daa
pop
cmp
push
lods
movsl
dec
imul
jmp
lea
sahf
dec
mov
in
std
test
mov
insb
js
and
pop
mov
mov
pcmpgtb
rcrb
mov
adc
test
popf
lock
in
cld
ljmp
scas
cmp
sahf
enter
cmp
enter
mov
cmp
lea
ljmp
cmp
push
mov
mov
sub
xchg
mov
pushf
adc
ja
jnp
mov
push
jb
add
jp
fstpt
std
or
sub
cmc
sbb
fimuls
inc
mov
nop
lods
adc
push
cld
filds
data16
adc
cltd
ror
mov
out
jg
lret
lds
adc
push
sub
adc
pop
and
shrl
sti
lahf
jle
xor
jne
mov
sti
rorb
jmp
xor
pushf
jns
sar
jae
lret
rcrl
xchg
mov
lret
mov
cmp
jmp
inc
sub
mov
xor
or
mov
cmp
mov
mov
dec
mov
push
add
adc
push
cmc
dec
and
nop
mov
and
icebp
xor
roll
sbb
mov
or
xchg
je
sub
mov
mov
imul
or
and
jg,pt
test
out
int
in
ss
sub
cmpsb
cmpsb
aas
mov
xchg
adc
inc
add
mov
fildl
cmp
popl
imul
pop
adc
test
mov
xchg
adc
pusha
jb
add
hlt
inc
outsl
jl
cmpsl
repz
mov
pushf
adc
xor
pop
loope
jecxz
jae
or
gs
cmpsb
in
jbe
xor
rcll
add
scas
sub
fildll
and
pop
cli
cmpsl
mov
stos
mov
jge
movsl
test
icebp
adc
mov
sahf
xorb
cmpsl
push
aas
sbb
daa
mov
ss
addr16
cltd
fisubs
or
ljmp
inc
mov
jg
push
sub
mov
and
aas
and
adc
jno
xor
pop
adc
jmp
in
bnd
cli
and
cld
cmp
cld
cmp
fcoml
xor
testb
out
push
xor
jae
push
aas
xchg
add
add
sti
pop
aad
push
pop
adc
dec
push
pop
mov
pop
pop
jle
jecxz
mov
pop
das
cmpl
adc
mov
je
jae
scas
cmp
cmp
shl
push
fbstp
xor
bnd
shlb
lcall
test
dec
mov
inc
mov
test
mov
sub
stos
paddusb
das
mov
fsubrp
lods
mov
std
sbb
aad
sbb
mov
ret
jg
xor
adc
mov
adc
pusha
iret
and
int3
repnz
inc
aas
pusha
movsb
jae
sbb
lcall
adc
push
lcall
push
cmpsb
cli
xchg
cmp
or
pop
jg
add
sahf
nop
rep
pop
das
jp
fisttps
mov
in
adc
add
sti
xchg
jbe
dec
push
push
cmpsb
dec
or
stos
lahf
and
xchg
sbb
js
jo
ds
mov
clc
ds
xchg
insl
mov
xchg
xor
ret
or
pop
ret
mov
jb
mov
dec
bnd
popf
mov
cld
adc
das
mov
sub
bound
mov
lock
mov
pusha
clc
lods
push
int
stos
pop
pop
addr16
mov
mov
aaa
bound
inc
lcall
or
fstpl
out
jnp
scas
mov
sbb
cld
into
lods
movsb
jmp
push
or
out
jge
jl
mov
push
xor
mov
andb
shll
xor
add
leave
mov
jo
xor
xor
dec
push
xchg
jb
cs
pop
mov
mov
jg
loopne
cmp
dec
in
mov
or
test
jp
out
sahf
aam
mov
jo
lds
mov
loop
push
pop
mov
cmp
pop
push
es
xchg
out
or
and
test
sbb
fstps
hlt
ljmp
sbb
mov
lods
shlb
cli
dec
xchg
fnstcw
xor
xchg
shrl
ss
adc
mov
and
jecxz
fwait
jb
shlb
mov
dec
dec
mov
hlt
lahf
jb
sti
decl
mov
fisubs
lock
lock
pop
jo
xor
jb
pop
mov
sub
test
mov
fidivrl
cld
mov
xor
dec
negl
mov
adc
inc
movsb
pop
cs
xchg
and
mov
cld
cwtl
aas
mov
cmp
and
icebp
ret
ds
insl
mov
in
and
test
sbb
je
std
movsl
mov
roll
aas
jl
push
jne
in
js
rcrb
inc
push
test
call
in
clc
movsb
insb
imul
jo
and
bound
nop
pop
out
sub
pop
adc
das
fwait
add
jl
test
insl
lea
stos
outsb
mov
adc
icebp
jmp
mov
or
xchg
push
and
and
and
cwtl
data16
dec
mov
ljmp
gs
lahf
xor
jae
xor
hlt
cld
hlt
xor
sub
imul
clc
ljmp
mov
add
jno
ret
or
in
popl
pop
fs
orl
mov
mov
je
pop
jge
sti
jno
lcall
pusha
cmp
test
cmpsb
in
fwait
inc
loop
fdiv
and
mov
nop
mov
jmp
ret
sbb
cli
jno
sbb
cld
lock
and
adc
xchg
jne
ds
fstpl
cmc
sbb
outsb
cmp
xor
xor
or
xor
pop
push
cmpsb
fcoms
xor
cmpsl
and
mov
or
sahf
push
out
mov
pop
jmp
cltd
adc
adc
repnz
in
fs
test
arpl
into
outsb
mov
adc
sbb
movsl
aaa
adc
pop
scas
xchg
pop
and
outsb
dec
mov
add
pop
fidivrl
insl
jle
adc
mov
inc
lock
push
pop
push
inc
push
sub
xor
xchg
cmp
incb
jno
pop
mov
sbb
addr16
popf
inc
adc
shlb
and
outsl
test
inc
mov
mov
push
int
imul
shll
xlat
and
lret
cld
xchg
inc
insb
inc
lods
std
inc
and
out
and
pushf
adc
das
xor
fnstenv
call
fistpll
mov
lahf
add
mov
jo
dec
add
dec
push
xor
loopne
ljmp
mov
daa
inc
jmp
adc
push
ja
adc
test
xchg
cwtl
mov
jae
leave
pusha
push
mov
out
and
mov
and
or
push
adcb
test
or
pushf
cli
mov
mov
mov
cmp
mov
pop
xor
loopne
ds
cmpsl
mov
jle
loop
pop
jno
popa
xchg
inc
stos
cmpsl
mov
int
aaa
cli
not
adc
gs
mov
xchg
aam
jl
xchg
aaa
loopne
sti
cmc
adc
test
addb
jmp
orl
outsb
mov
enter
sbb
push
mov
mov
jmp
jns
sti
inc
jmp
mov
jb
jl
dec
imul
mov
jno
cmpsl
mov
cld
cmp
lcall
ds
jge
mov
shlb
and
fldcw
and
mov
mov
hlt
mov
dec
pop
xchg
loop
xorl
dec
xor
xor
push
mov
clc
mov
cmp
jns
mov
jae
dec
sbbl
repnz
pusha
jne
repz
pusha
mov
mov
daa
inc
sbbb
jae
bound
adc
xlat
jle,pn
jne
daa
icebp
test
ljmp
icebp
das
adcl
scas
inc
pop
xor
mov
dec
add
xchg
js
mov
inc
mov
shlb
ljmp
dec
mov
and
mov
js
shl
fistps
scas
and
outsb
cld
in
jge
adc
pop
mov
sbb
dec
mov
mov
xor
ja
lcall
les
cmpb
and
ss
pop
repnz
inc
mov
loope
psadbw
push
cmpsb
ds
movb
dec
lcall
sti
pop
movsb
mov
lds
fisttpll
inc
test
mov
xchg
dec
pop
sub
call
sub
stc
and
in
lret
sbb
pushf
andl
adc
jb
sbbl
mov
push
clc
add
out
mov
xor
in
in
adc
mov
push
xor
adc
bound
ja
adc
inc
pop
loop
mov
scas
das
clc
test
xor
fs
scas
jne
mov
ljmp
imul
cld
in
out
or
mov
sbb
dec
ret
lock
pop
xor
inc
cmp
fidivrs
lea
jp
or
mov
pop
push
sub
adc
sar
lret
add
call
cltd
pop
and
test
mov
inc
push
mov
rcr
add
mov
sti
push
mov
fstps
scas
popa
mov
fldl
test
imul
xchg
jno
enter
cwtl
data16
cmp
jmp
xchg
xor
mov
push
jmp
and
mov
mov
push
xor
inc
movsb
jnp
int
rcrb
mov
push
mov
ficomps
dec
and
sbb
scas
pop
jecxz
mov
inc
mov
sbb
popf
sbb
push
cmpb
cli
xorb
jns
xchg
xchg
movd
mov
push
lock
lods
lret
mov
inc
xorb
int3
aas
aam
into
mov
icebp
xchg
mov
ror
daa
xor
addb
jb
into
icebp
and
add
sti
stos
push
je
pop
adc
and
js
mov
jb
test
dec
test
add
dec
dec
pop
push
mov
lock
sbb
xchg
stos
pusha
cmp
xchg
sbb
icebp
adc
loop
addr16
in
mov
sbb
xchg
insl
add
clc
ljmp
inc
or
ret
push
enter
lret
cmp
inc
push
pop
lcall
push
jnp
cmc
or
popa
push
sbb
sbb
cs
jge
not
stc
lahf
push
adc
mov
loop
push
inc
leave
push
jg
je
mov
and
shrl
ja
or
adc
scas
je
inc
sub
insb
mov
inc
jne
icebp
sub
jno
cmpsb
inc
adc
sbb
mov
fdivl
repnz
neg
add
ret
aam
lea
outsl
aam
in
mov
push
gs
xor
movl
xchg
clc
mov
loopne,pn
ret
or
cs
mov
enter
jp
cmp
movsb
lea
jmp
lods
call
jecxz
mov
mov
out
mov
xor
cmpb
inc
shll
and
fsubr
and
ds
int
or
pop
repz
mov
sarl
ljmp
insl
mov
mov
incb
sti
sub
cli
adc
sbb
and
lock
fnstcw
push
mov
dec
lcall
mov
pop
dec
xor
les
inc
shl
pop
adc
insl
sub
and
out
xchg
test
outsl
pop
mov
mov
adc
pop
enter
pop
hlt
adc
int
adc
ss
fildll
andb
pusha
stos
sub
jb
cld
repnz
js
inc
out
mov
lock
and
pop
cltd
dec
mov
xchg
inc
sub
sub
das
leave
push
lahf
push
pop
dec
push
adc
aas
cmpsl
inc
push
jae
pop
andl
adc
shlb
inc
cmp
jg
or
xor
outsb
stc
ret
in
jl
clc
inc
ja
mov
testl
xor
push
popa
push
dec
mov
sbb
ret
cli
mov
mov
mov
mov
lods
push
loopne
call
inc
pop
mov
push
cs
push
repz
sub
jge
sti
inc
out
cmp
mov
shlb
std
fidivrl
mov
loopne
int3
sub
stos
sbb
push
int
push
jecxz
xchg
shll
jmp
sti
pop
pushf
inc
fcoml
mov
or
pop
lods
jge
out
psraw
dec
shr
inc
xchg
mov
sub
out
xor
bound
or
push
icebp
fidivrs
fsubl
jmp
and
imul
pop
xor
cwtl
ret
sub
jns
cli
iret
cs
pushf
scas
and
ret
xchg
and
pusha
cmp
or
and
add
in
loop
cmp
jns
and
add
cltd
jmp
in
aad
pop
mov
add
jns
xor
add
cmp
stos
lret
add
xor
cmp
test
neg
icebp
roll
das
or
xchg
dec
nop
jb
push
sub
adc
arpl
inc
cmp
out
cmp
ljmp
mov
movsl
sub
xor
push
fwait
pop
push
adc
pop
ss
cli
fs
sbb
cld
loope
pushf
loop
in
and
ds
enter
stos
shrb
shl
cmpsl
lea
imul
or
lds
adc
or
mov
jbe
mov
jae
inc
pop
mov
pop
mov
mov
inc
scas
jne
ljmp
mov
inc
mov
mov
fists
jl
push
push
jne
repnz
in
orb
sub
icebp
fstl
mov
lods
dec
sbb
and
test
clc
rcrl
stos
std
jae
test
inc
dec
xor
sub
lahf
or
ds
mov
test
xor
jae
ss
xor
ret
cltd
scas
int
push
add
inc
shr
push
xor
dec
push
mov
mov
add
je
xor
jp
adc
cs
call
call
repz
jge
fnstcw
cmp
or
mov
aad
mov
in
lods
aaa
mov
lret
dec
cmpsb
sbb
jb
jp
xchg
loopne
dec
lret
mov
mov
jne
dec
repnz
imul
sub
iret
jmp
hlt
mov
cli
sbb
xchg
push
mov
testl
add
lock
adc
bound
mov
push
ds
and
adc
sbb
js
lock
jecxz
stc
dec
pop
lds
fdivs
dec
movsb
dec
pop
pusha
mov
aas
add
xor
cli
pushf
cmp
lcall
pop
imul
mov
out
xchg
enter
das
xchg
test
mov
minps
stos
pop
mov
adc
jmp
loope
ret
xorb
adc
cmp
jbe
inc
lret
mov
popf
and
mov
cmpl
leave
mov
mov
cld
mov
fsubrp
pushf
js
sbb
pusha
adc
das
xor
icebp
inc
adc
cmc
fdivrp
adc
or
std
mov
test
in
inc
pop
aas
mov
mov
sub
pop
clc
pushf
jg
mov
pop
loope
fcmovnbe
ret
sti
cmp
cs
sbb
in
imul
jo
cld
mov
cmc
push
pusha
movsl
lcall
sbb
xor
jno
xlat
mov
mov
arpl
jno
lods
cwtl
and
lock
inc
je
pop
jp
insl
vrcpps
pop
xor
ds
and
rcrl
mov
push
idivb
loopne
jg
stc
aad
pushf
mov
addl
js
mov
mov
js
hlt
push
int
icebp
scas
repnz
inc
push
iret
call
pop
bound
arpl
sbb
sub
test
and
ss
xor
ljmp
push
xchg
adc
pop
clc
mov
mov
add
adc
fwait
ret
fmuls
or
mov
jnp
dec
movsl
sti
cs
jno
xlat
in
cmp
add
xor
jmp
cmp
mov
in
xor
add
movsb
out
mov
mov
lea
in
iret
mov
or
push
adc
mov
jp
ss
fstpl
popf
lds
shl
add
adc
adc
gs
shll
inc
xor
and
cmp
stos
and
loope
test
mov
lret
icebp
push
out
enter
and
popl
jmp
adc
fdivr
xor
pop
jl
mov
ror
ficompl
inc
into
dec
ret
sbb
imul
and
test
rolb
sub
jmp
sub
fucomi
and
js
mov
inc
cld
inc
clc
sahf
mov
mov
sbb
jo
imul
cmp
fsubrl
jne
push
ja
je
outsb
adc
das
dec
ds
inc
mov
sti
mov
inc
jb
push
xchg
jb
aam
incl
push
and
lock
xchg
mov
sbb
fdiv
jp
and
imul
scas
xchg
xchg
test
ficoms
push
mov
mov
call
add
lods
shlb
mov
inc
mov
andb
pop
mov
cmc
pusha
insb
push
adc
sbb
je
mov
incl
into
icebp
push
xor
xor
pop
and
lock
mov
mov
pop
push
ds
mov
inc
test
jl
dec
pop
shrb
lea
cli
jmp
out
fstpl
pop
adc
mov
imul
add
mov
sub
iret
jns
fstpt
sbb
cmp
stos
fcmovu
enter
inc
movsb
in
push
mov
inc
cmpsb
gs
popa
mov
test
mov
pop
xchg
adc
pop
lds
repnz
adc
aad
rcrl
leave
loopne
push
xlat
lods
push
dec
mov
mov
sbb
fidivs
icebp
sahf
aas
cmp
push
jb
or
sbb
jmp
std
lcall
aaa
pusha
pop
adc
stos
out
ret
xchg
rcrb
push
negb
jne,pt
cmp
adc
and
xor
push
mov
mov
mov
mov
jnp
es
mov
push
sbb
rorb
mov
std
cmc
pop
icebp
jbe
test
xchg
pop
std
pop
lods
xchg
jle
and
inc
mov
out
mov
mov
jbe
jle
shrb
xor
jo
inc
cltd
push
nop
cli
or
popf
hlt
pop
leave
lock
pusha
mov
leave
push
jno
hlt
mov
aas
jmp
decl
mov
or
repz
xchg
pop
fs
push
lock
or
xor
xlat
lret
rclb
faddl
pusha
fiadds
sarl
cld
push
lahf
mov
out
and
mov
fdivs
mov
inc
mov
sub
xchg
xor
cld
mov
ret
jbe
sub
out
inc
dec
adc
pop
dec
lea
jmp
shrb
push
or
sbb
jl
out
sti
lahf
or
out
insl
fidivs
sbb
lret
rorb
lods
sub
outsl
mov
js
jbe
mov
fstpt
jmp
insl
fidivs
mov
fimuls
pop
jg
inc
push
lea
loope
cli
nop
mov
leave
xchg
lcall
mov
jmp
sbbb
ljmp
mov
lock
jns
pop
xchg
ja
mov
add
mov
push
and
and
xchg
rol
jae
ss
xor
xchg
sbb
out
loopne
je
fisttpll
sub
sub
mov
sahf
jb
add
push
xchg
mov
test
cmp
mov
lcall
push
mov
cmp
inc
hlt
dec
in
cmp
nop
and
cmp
mov
sub
aas
daa
loopne
xor
sbb
mov
and
jb
adc
xor
jmp
test
xor
mov
inc
mov
imul
adc
ds
inc
cltd
idivb
pop
jl
add
jge
aas
stos
int
cmc
fstpt
js
and
roll
clc
das
xor
rcrl
test
roll
add
inc
pop
push
and
xor
xchg
cmp
xor
jg
icebp
cmp
mov
mov
mov
aaa
in
adc
fwait
and
inc
cmpsb
cmp
lret
pop
dec
add
fisubs
mov
ja
or
scas
shrb
cld
xor
lret
scas
test
in
cli
scas
xorb
cwtl
pushf
ljmp
pop
lods
loope
adc
adc
cmc
sarb
mov
mov
push
inc
dec
repnz
add
xchg
xchg
cltd
and
lock
cld
add
inc
sbb
imulb
aam
pop
repnz
lcall
sbb
dec
shrw
push
jecxz
dec
add
nop
jge
jns
xor
fisubrl
nop
movsb
cmp
in
jno
mov
into
xor
mov
adc
sbb
aas
imul
stc
movsl
xchg
aas
in
insb
repz
movsb
or
mov
cmp
pop
aad
sbb
pusha
sti
scas
imul
fwait
or
mov
andl
insl
xor
clc
and
lret
cmpsl
adc
loopne
out
mov
jae
aad
jo
outsl
bnd
nop
fcoml
inc
dec
aas
pop
bound
into
hlt
ret
mov
mov
jno
mov
js
dec
sarl
jbe
sti
pop
cmpsb
les
in
jle
jbe
add
shll
test
mov
arpl
aad
jl
push
and
cmp
cmpsb
xor
mov
inc
dec
add
push
push
daa
adc
mov
adc
ss
jmp
cld
rorl
push
jbe
imulb
mov
aam
ret
test
push
stos
mov
addl
cltd
hlt
pop
pop
loopne
loop
inc
fsubs
stos
add
insl
icebp
xor
jle
fadds
mov
fs
mov
dec
repz
popf
ret
ds
enter
cmpb
shl
xor
mov
outsl
jno
mov
testl
stos
jns
icebp
xor
mov
call
insl
out
jb
lods
mov
inc
imul
sbb
rcll
inc
xlat
mov
pop
orb
sub
enter
mov
or
out
test
mov
pop
aas
orl
or
addr16
lret
stc
jne
push
leave
pop
cmp
mov
loope
mov
in
push
mov
in
mov
rcll
fdivrp
repnz
int
cs
cli
sahf
adcl
loopne
jno
int
mov
dec
pop
popf
pop
adc
inc
mov
mov
mov
sbb
stos
mov
push
pop
shrl
xor
aam
inc
hlt
cmp
stc
insl
popa
bound
loopne
inc
in
push
or
fstps
jno
shlb
mov
push
adc
test
cmpsl
mov
loopne
cwtl
shl
mov
sbb
arpl
push
dec
jns
xor
pop
sbb
jmp
cmc
decl
push
adc
jl
xchg
cmp
pop
mov
adcb
mov
mov
or
test
ds
movsl
xor
sbbb
xchg
xor
sbb
dec
inc
sbb
ljmp
aam
push
mov
add
icebp
push
push
aaa
lea
ds
je
arpl
xchg
xor
sbb
jecxz
cwtl
xor
jmp
xchg
or
add
das
inc
or
cmp
loop
mov
pmaxub
xor
arpl
push
test
or
pop
test
das
cmp
cmp
lret
rclb
mov
stos
push
xchg
addr16
pop
aas
pop
mov
mov
cmp
jb
daa
mov
sarb
push
and
rclb
adc
cmp
jae
sub
or
mov
fsubs
js
sbb
sbb
out
cmpsb
fwait
pop
jmp
mov
mov
jne
inc
dec
inc
scas
mov
and
and
cmc
and
ret
leave
loopne
mov
push
jp
js
sbb
dec
pop
pushf
ss
mov
cmp
sarb
xchg
jae
mov
icebp
iret
push
mov
loope
xlat
loop
imul
inc
add
imul
pop
sahf
fmull
out
sti
test
out
jmp
out
jb
cmpsl
fs
jecxz
mov
cld
push
movzwl
mov
es
movsb
sbb
test
xchg
or
cld
mov
xchg
cmp
ja
mov
xor
pop
mov
in
es
repnz
fstps
jle
scas
inc
mov
sbb
dec
sub
icebp
movsb
imul
lock
lods
or
ds
mov
scas
xorb
into
jge
sbb
mov
sti
out
adcl
add
adc
out
xchg
adc
fildll
cmp
dec
aaa
mov
and
outsb
add
sub
sbb
aam
jmp
xlat
aas
cs
aas
adc
aas
imul
out
cmc
mov
mov
sub
outsl
cwtl
incb
add
mov
cmpl
bound
adc
sbb
insl
push
and
mov
jae
mov
jmp
jg
adc
mov
fnstenv
test
mov
xor
or
rol
enter
dec
cmc
por
add
xchg
jmp
imul
jmp
inc
mov
insl
rcr
sbb
test
repz
mov
xchg
adc
repz
and
sti
rol
cld
scas
jno,pn
mov
movsl
inc
fisttpl
mov
mov
jmp
leave
pop
dec
adc
pop
sub
jbe
jle
xchg
mov
sub
pushf
das
or
xor
pop
mov
jb
addr16
add
mov
mov
push
int
lcall
out
cmpsl
push
clc
movb
dec
pusha
rorl
loop
popf
icebp
sub
dec
and
mov
addr16
pop
dec
cli
ljmp
jmp
inc
jmp
mov
nop
jge
dec
enter
mov
xor
push
pop
adc
ja
push
mov
cmp
mov
rcll
jmp
xor
ja
adc
imul
sub
inc
xor
adc
push
insb
jno,pt
push
inc
mov
cmp
int
mov
lock
cmp
mov
daa
xlat
nop
das
scas
mov
dec
xor
mov
xor
xor
dec
ss
xchg
or
pop
add
enter
xor
jle
movsb
icebp
mov
outsl
in
hlt
sbb
out
cmp
ja
mov
mov
es
hlt
push
jbe
icebp
clc
shll
xchg
mov
into
ljmp
mov
aas
out
xor
mov
loopne
mov
lods
jmp
push
subb
cmp
pop
es
cmpsb
out
nop
jae
xchg
pop
cmp
jmp
hlt
shrl
lods
sbb
mov
icebp
adc
and
mov
sub
jno
fs
cli
cmp
and
bound
sti
faddl
xchg
stc
stc
pop
sahf
mov
cmc
dec
mov
in
mov
sbb
cmp
adc
add
inc
add
pop
mov
outsb
pushf
loopne
cmpsb
lret
push
leave
xor
sbb
test
xor
test
push
add
dec
dec
mov
cs
nop
and
mov
jbe
loope
push
cld
mov
out
shlb
push
xchg
test
jp
sahf
cmp
mov
repz
xor
jnp
sbb
cmpsb
push
jnp
cmp
cmp
movsl
xchg
cld
dec
test
or
aas
add
rcrl
daa
inc
jns
add
mov
pop
cmpsb
fsts
fwait
add
loop
lods
adc
xchg
mov
bswap
push
lods
jg
xor
insb
outsb
test
cld
das
jnp
in
hlt
in
je
add
push
inc
or
sub
bound
cld
mov
mov
rorb
cmp
lret
clc
ljmp
loop
jno
fucom
push
into
arpl
fwait
and
pop
dec
flds
cmpsb
jo
jp
in
cli
xchg
push
sub
and
xor
hlt
mov
enter
mov
scas
mov
popf
dec
mov
add
popa
sbb
xor
jl
imul
adcl
repnz
pop
add
xlat
cmpsl
jmp
lcall
test
jbe
loope
pop
incl
cmp
pop
fimull
push
adc
and
imul
lahf
jbe
cmp
loope
jbe
fldt
sbbb
imul
in
add
mov
jo
shlb
sbb
lahf
pop
cmpb
mov
out
fbstp
mov
andl
dec
arpl
jns
push
repnz
pop
xchg
mov
add
nop
insb
pop
scas
xor
movb
add
mov
imul
rcr
into
cmc
xor
fldcw
lods
cli
cli
call
imul
sub
push
mov
ret
inc
aaa
imul
pusha
jnp
jae
cmpsb
stos
inc
fistpl
mov
repz
or
adc
xchg
jae
jbe
sbb
mov
cmp
imul
xchg
pop
xchg
cmp
xchg
inc
push
and
outsl
les
addl
hlt
aad
mov
mov
shr
mov
shl
ret
push
out
sub
push
shlb
xor
dec
mov
inc
sbb
shrb
mov
adc
pusha
outsl
xor
pop
cmp
sub
mov
mov
pop
dec
adc
sbb
push
leave
pop
mov
mov
xchg
xor
mov
roll
mov
mov
repnz
jmp
shl
mov
rclb
mov
mov
aas
push
mov
mov
fidivl
xchg
mov
mov
cld
scas
mov
fsubp
sahf
scas
or
xor
into
xor
and
xor
jp
std
add
andl
mov
xchg
push
scas
mov
xchg
mov
cmp
adc
inc
loope
pushf
jno
mov
mov
push
das
sti
xor
adc
test
cmp
mov
fwait
xor
jo
sub
add
jl
and
pusha
cmp
out
push
pop
lds
sub
push
adc
test
adc
mov
ret
test
test
in
pop
dec
mov
hlt
adc
shlb
mov
xchg
inc
mov
add
cld
xor
xor
shr
lods
mov
test
sub
and
scas
f2xm1
mov
inc
and
mov
addr16
cmpsl
xchg
mov
hlt
stos
push
jmp
cmp
cmp
test
loope
cmp
xor
add
lods
mov
test
and
pop
pop
mov
stos
sub
aad
xor
inc
std
xor
popf
and
stos
in
xor
push
sub
add
shll
adc
iret
lds
xor
test
push
stc
push
add
mov
lea
push
pop
xchg
sbb
sarb
out
pop
and
outsl
cmp
pushf
sub
adc
pushl
push
repnz
inc
jge
pop
jae
jl
lret
lock
pop
and
dec
mov
push
repnz
pop
scas
jne
xchg
sub
js
mov
insb
iret
xor
mov
repnz
das
sub
fdivl
mov
or
and
mov
mov
sub
mov
xor
icebp
cltd
repz
push
imul
mov
mov
imulb
out
sarb
mov
add
and
pop
cs
xchg
test
and
add
test
add
nop
stos
imul
mulb
stc
jp
xlat
fnstenv
jbe
ja
lcall
addb
add
lods
mov
jmp
dec
jmp
int
lahf
cld
jo
xchg
nop
cmp
mov
pop
adc
cli
sbb
pushf
mov
push
ljmp
ljmp
xor
ljmp
fcmovnbe
lcall
or
pusha
jge
mov
mov
xchg
xlat
ffree
and
xchg
in
imul
lea
test
ss
xchg
xchg
push
xor
dec
cmp
in
stos
add
fisttps
or
mov
imul
outsb
inc
sbb
loop
mov
arpl
inc
je
cld
dec
orl
imul
push
mov
hlt
lahf
subl
test
jae
sahf
je
std
fucom
jnp
push
loop
dec
lahf
push
clc
mov
mov
push
pop
aam
xor
mov
inc
daa
loop
sahf
sub
push
mov
loopne
ffreep
lcall
les
andl
sbb
and
mov
js
fsubrp
bound
enter
mov
xor
adc
sub
sbb
dec
insb
jne
dec
dec
xor
aas
cmp
loope
dec
jns
fbstp
fcoml
push
pop
xorb
bound
rclb
mov
push
push
mov
mov
sti
je
gs
xlat
or
inc
inc
xchg
inc
lcall
test
mov
shll
cli
push
test
push
pop
push
push
cmc
jae
jnp
cmp
adc
pop
mov
pusha
lret
in
jle
shrb
nop
jp
lock
jae
jne
movsb
push
mov
adcl
lret
sbb
pop
popf
and
and
lods
int
xor
mov
dec
ljmp
addr16
adc
lret
ja
popa
je
jmp
addb
dec
out
popf
push
jmp
adc
mov
sbb
or
pop
pop
fisubl
stos
int
sub
sbb
or
mov
jb
jmp
jmp
cmp
jnp
push
les
test
dec
dec
xor
jnp
jbe
jmp
das
movsb
mov
cs
outsb
jb
cmp
in
jle
adc
addr16
popa
imul
in
mov
dec
pop
rclb
repnz
test
sbb
xlat
mov
ret
jb
or
out
inc
testb
adc
inc
and
ret
and
imul
clc
mov
fnstsw
dec
sbb
cmc
pusha
cmc
cld
xor
pop
fs
sti
mov
scas
mov
adc
aam
movsl
dec
out
pushf
pop
adc
leave
mov
mov
jne
lods
ds
mov
sbb
stos
pop
std
cmc
rcr
inc
cmp
rolb
movsb
loopne
mov
inc
jo
lret
cmpsb
repz
outsl
cmp
repnz
or
push
push
push
in
es
lret
sarl
mov
pop
andl
jmp
int
and
and
es
add
enter
mov
sbb
shlb
scas
push
cmpsb
inc
cs
xor
mov
mov
pop
cwtd
inc
inc
jge
out
mov
daa
loop
pushl
add
push
lods
insl
cs
xchg
add
jl
mov
cmpsb
jb
sub
sbb
lea
shrl
cltd
push
mov
imul
out
icebp
arpl
cmp
out
divb
gs
mov
jbe
xor
dec
mov
outsb
sbbb
mov
mov
or
xor
cld
vxorps
out
cmc
jmp
mov
adc
mov
aas
jbe
mov
adc
repnz
fidivrl
imul
clc
xor
in
jp
test
pop
imul
int
pusha
xor
imul
jae
dec
imul
dec
pop
fcoms
mov
out
mov
ss
push
mov
cltd
jb
jo
mov
ss
repz
dec
dec
popa
mov
dec
iret
test
ss
inc
scas
daa
and
push
fs
insl
xor
insl
sub
test
mov
js
pmullw
or
repz
cld
scas
cli
cmc
xchg
dec
push
sbb
cmpsl
adc
jae
lcall
jno
lret
shrb
xor
sub
ds
mov
icebp
inc
mov
rol
sub
add
jmp
pop
shr
ret
xchg
shll
imul
test
fmul
xor
in
js
mov
mov
sti
pop
and
push
adc
mov
sbbl
sbb
aaa
mov
cli
out
mov
test
pusha
int
xor
repz
or
dec
repnz
cltd
and
clc
mov
sbb
adc
mov
dec
xor
cld
cli
mov
mov
adc
jb
popf
pop
adc
bound
ficomps
rcrl
xchg
ficoms
adc
insl
mov
test
sar
xchg
sti
inc
and
jmp
jb
cmp
ljmp
xor
push
test
sbb
dec
adc
test
dec
mov
dec
dec
stos
in
inc
test
dec
or
stc
jne
cmp
pusha
dec
mov
mov
repnz
loop
mov
sub
daa
cmp
jns
dec
jg
rcrb
xchg
cmp
into
cwtl
push
lret
sbb
cmc
dec
xor
cmp
mov
inc
popa
sub
pand
lods
iret
fcmovnu
nop
test
push
pop
pop
loopne
push
stos
mov
imul
xchg
icebp
push
sub
nop
xor
jmp
mov
jo
sub
mov
lods
sti
and
icebp
mov
repz
xor
daa
stc
cld
sbbb
stos
adc
in
cmp
inc
mov
mov
inc
push
jp
inc
addr16
cld
sbb
mov
in
pop
and
pop
outsl
pushf
addr16
icebp
ds
scas
dec
jmp
adc
mov
push
scas
pop
mov
sbb
push
mov
pushf
mov
cld
mov
hlt
outsl
mov
add
fwait
dec
xchg
das
divl
sub
andb
dec
sar
test
inc
or
mov
push
ret
adc
out
lret
outsl
sub
je
add
rol
loopne
loope
sub
in
outsl
xchg
pushf
loop
loope
push
ljmp
sub
dec
loope
xor
or
adc
add
movsb
lds
mov
call
and
adc
mov
add
add
rdtsc
and
xchg
sbb
orb
int
hlt
mov
ret
and
mov
and
and
movsl
xor
sub
push
mov
and
or
or
loop
push
out
mov
sub
mov
cld
lea
mov
pop
mov
in
mov
dec
mov
mov
icebp
pushf
fdivs
dec
dec
scas
mov
stos
jne
outsl
cld
pop
negb
ret
mov
push
shr
mov
pusha
jbe
and
mov
cmc
out
mov
dec
inc
push
xor
mov
in
test
scas
nop
adc
sahf
sub
fwait
out
push
daa
addr16
push
ljmp
stos
jg
leave
or
lock
popa
arpl
scas
inc
push
test
shrl
out
xchg
outsl
cli
sub
mov
sti
jo
or
jmp
lret
dec
push
das
push
outsl
mov
mov
sub
arpl
es
xchg
lods
loope
and
dec
bound
ljmp
mov
aas
mull
mov
fwait
cmp
mov
cmp
je
enter
fldenv
sub
aam
jne
jecxz
sbb
insl
clc
fisubs
loopne
fistpl
icebp
jb
movsb
fmull
jl
test
cmpsb
jb
pop
or
xor
sti
mov
and
push
ja
or
jb
sbb
fdivrl
sbb
or
stos
stc
in
loopne
ficomps
jb
pop
sbb
push
or
pushf
insb
cmp
pop
js
xchg
adc
in
adc
insl
pop
call
leave
add
push
jp
ret
in
adc
inc
pop
xchg
dec
addr16
loopne
mov
xchg
aad
mov
iret
push
and
mov
pop
mov
pop
sbb
jmp
xlat
mov
insl
in
stos
pop
arpl
mov
addb
sbb
inc
mov
sub
shl
and
push
cltd
and
lea
push
mov
idivb
inc
add
inc
jmp
sub
and
sbb
mov
je
push
shlb
repnz
scas
test
pop
dec
leave
cmp
adc
lret
je
shlb
push
ret
or
lcall
jo
testb
pop
lar
in
repnz
call
shll
xchg
stos
sbb
jl
inc
inc
inc
daa
push
adc
lods
inc
pop
rcl
mov
or
and
cmpl
sbb
mov
lret
movsb
adcb
idivl
jae
repz
xchg
ds
cwtl
cs
jae
lock
sbb
rcll
stos
in
lret
mov
imul
pushf
lock
mov
lea
push
js
mov
mov
inc
je
mov
dec
pop
jle
pop
adc
jns
aas
add
pop
and
cwtl
icebp
stc
inc
mov
mov
xor
out
cli
pop
std
xor
mov
int3
xor
sbb
or
cmp
arpl
push
ror
push
out
xchg
mov
xor
push
hlt
rcrb
test
and
out
cli
subb
shrl
jo
shlb
push
lret
and
or
xor
imul
xor
loop
mov
mov
js
hlt
fwait
int
xchg
cmpsb
in
mov
or
mov
out
push
sub
mov
xor
aad
imul
jmp
scas
insl
clc
sti
inc
xchg
mov
mov
nop
push
pop
or
sar
cwtl
xchg
push
jnp
xchg
or
mov
inc
call
sahf
fisubrs
scas
push
jecxz
imul
popa
adc
roll
ds
jnp
adc
sub
in
int3
cmpsb
xor
je
push
push
mov
xlat
dec
xchg
add
sbb
sub
test
inc
notb
dec
pop
cmp
adc
fwait
es
xchg
icebp
xchg
pop
add
clc
lods
cwtl
aad
out
mov
xchg
dec
sbb
pop
mov
inc
scas
int
enter
add
mov
dec
ds
push
mov
pop
pop
mov
int
and
ds
mov
test
push
enter
out
leave
mov
cmp
daa
fldl
popf
into
add
pop
and
jne
mov
dec
scas
mov
cmp
mov
pop
mov
jb
insl
movsl
bound
xchg
jle
shlb
addr16
jnp
ds
fdivl
xor
jbe
mov
add
imul
mov
aas
mov
adc
jmp
or
aaa
adc
pushf
xchg
leave
in
sbb
sub
sub
add
call
push
jp
pop
cmp
inc
lods
xchg
dec
lds
lret
pop
iret
xor
xchg
loopne
in
out
movsb
call
adc
fldenv
imul
mov
mov
pop
jnp
sbb
push
adc
fidivs
cmp
jne
mov
xor
mov
mov
out
sbb
lret
fldenv
frstor
adc
jae
dec
sahf
push
aam
dec
dec
scas
jg
pop
call
and
mov
push
stos
jno
pushl
adc
test
sbb
shr
rolb
mov
mov
xchg
jo
dec
mov
mov
push
int
loope
jae
push
daa
outsb
add
dec
dec
xchg
push
dec
jnp
push
cmp
sbb
push
push
int
mov
push
in
mov
pop
sub
ljmp
push
outsl
and
dec
jae
mov
leave
fldcw
and
mov
sub
test
les
push
clc
inc
dec
adc
pusha
mov
fucomp
shl
adc
add
inc
test
pop
push
and
movsb
repnz
loope
ljmp
add
loopne
movsb
shl
cmpsl
sub
adc
add
ja
or
dec
pop
jb
jb
stos
std
bound
cmp
mov
addr16
mov
adc
mov
outsl
sti
int3
pusha
and
sbb
scas
xchg
push
push
pusha
inc
inc
in
xor
call
sahf
adc
ret
xor
pop
pop
stos
ds
xchg
mov
dec
dec
adc
imul
lahf
repz
repnz
xor
mov
test
jnp
jge
das
xlat
pop
ljmp
lahf
xchg
mov
mov
xor
xchg
and
lret
ja
cmp
cmp
fildl
sbb
add
push
mov
in
jb
adc
fnstenv
xor
sub
mov
loopne
popa
xor
pusha
adc
jp
imul
iret
xchg
xchg
int
mov
insl
stos
sbb
pop
and
push
or
sarb
jg
repnz
cmp
push
cld
inc
push
cmp
rcrl
idivl
ja
jb
xchg
fiadds
xor
jnp
dec
adc
in
mov
rorb
sub
repnz
inc
mov
fbstp
pop
fwait
mov
mov
mov
mov
and
dec
mov
add
or
mov
call
out
call
int
int
push
mov
add
out
movsl
into
adc
ret
mov
icebp
insl
aas
ljmp
xor
je
push
xor
pop
dec
sub
add
rcr
in
lods
bnd
xchg
mov
push
fistpll
adc
and
repnz
adc
adc
mov
lret
loop
sti
adc
into
mov
sahf
sbb
out
sub
mov
mov
clc
or
pop
inc
shl
jmp
mov
das
add
inc
sbb
aas
mov
ss
add
xor
stos
jg
inc
insl
das
add
push
addr16
clc
cwtl
mov
ds
mov
int
popf
cmpsl
mov
enter
dec
cld
mov
add
scas
mov
push
das
or
popl
repz
push
test
test
jge
das
push
pop
addb
sarl
scas
mov
dec
outsl
xchg
dec
mov
sub
in
cmp
cld
jle
push
in
aaa
adc
icebp
dec
scas
or
gs
cmp
jae
aam
loope
out
call
push
sbb
pop
adc
mov
or
jecxz
aad
int
and
stc
lcall
mov
repnz
mov
push
cmpsb
xor
xchg
mov
cmp
and
adc
dec
mov
int
mov
cmp
xchg
aad
inc
stc
mov
sbb
cmp
sbb
or
lods
pushf
mov
and
sbb
adc
push
hlt
cwtl
push
loope
adc
div
sbb
push
data16
nop
add
add
leave
push
add
adc
test
xor
adc
xor
test
mov
xorb
xor
mov
ret
shll
inc
stc
xorl
xchg
cs
enter
ds
icebp
fistpl
loop
jnp
and
or
mov
push
jbe
lret
jle
pop
jnp
aas
scas
fs
dec
data16
push
dec
sub
mov
in
and
sbb
in
xchg
divb
dec
rcrl
rcrl
jb
jns
lret
iret
ljmp
or
push
subb
loopne
xor
or
out
loopne
cld
cltd
into
push
popa
les
hlt
lds
repnz
gs
jge
xlat
pop
sar
shll
mov
es
fwait
mov
adcb
dec
stc
cmc
das
and
dec
mov
cwtl
sub
aas
sbb
cmpsb
pop
xchg
xor
outsb
sub
into
fisttps
in
int
mov
cld
jp
push
jb
push
or
loope
mov
adc
sbb
cmp
insl
mov
cmp
mov
xor
scas
jle
pop
sti
mov
jmp
sbb
roll
lods
mov
and
into
or
shr
daa
pop
ds
fistps
jo,pn
lcall
dec
sub
sub
cli
fidivrl
rol
scas
inc
dec
or
fwait
pusha
sub
jae
das
cli
dec
sahf
addr16
adc
adc
nop
sub
sarl
add
dec
mov
cmp
je
dec
xchg
sahf
orb
pop
lahf
xchg
sbb
cmp
fcomps
xor
adc
jmp
pop
in
arpl
leave
in
mov
cs
outsb
popa
push
out
xor
addb
or
adc
mov
imul
jle
je
rolb
mov
loopne
pop
hlt
test
mov
ljmp
jecxz
dec
cmpb
out
xchg
xchg
arpl
std
mov
scas
jg
inc
lds
es
mov
dec
lret
pop
in
push
mov
mov
xlat
sbb
lret
sbbb
adc
mov
mov
in
in
ja
pop
hlt
mov
sbb
stc
pop
out
dec
push
jle
lods
clc
sti
mov
and
cmp
jp
inc
add
push
cwtl
stos
jae
icebp
es
adc
leave
cmc
lods
pushf
lahf
dec
fldl
mov
dec
push
mov
jb
mov
out
test
aad
div
lods
jb
pushl
xor
jno
sub
cli
movq
jnp
cli
pop
aaa
jbe
mov
int3
lea
ret
xchg
in
int3
scas
ret
sbb
mov
lods
sub
stc
xor
fwait
adc
and
xchg
jnp
aad
xchg
mov
nop
xchg
cltd
imul
scas
mov
mov
push
cld
push
cmp
stos
and
push
adc
sahf
icebp
or
divb
xchg
mov
dec
pop
gs
repz
icebp
jle
mov
jp
scas
dec
repz
xorb
mov
jmp
cmpsl
mov
push
dec
pop
and
jo
gs
or
push
mov
icebp
xchg
mov
sbb
arpl
js
push
in
insl
inc
cs
sahf
je
sbb
int
cltd
add
icebp
rcrb
pop
mov
out
push
sbb
popf
pop
pushf
das
fwait
mov
int3
inc
mov
mov
jmp
mov
jmp
adc
outsb
sub
ds
dec
scas
pop
je,pn
xchg
movsl
push
adc
mov
add
sti
outsl
mov
loope
jo
stos
push
sahf
jb
cmc
sbb
into
adcl
pop
pop
ds
cmp
adc
xor
sti
pop
test
sub
adc
sbb
add
mov
mov
mov
dec
push
mov
push
xchg
mov
add
adc
mov
and
popa
and
push
pusha
lcall
adc
or
xchg
sbb
cmp
pusha
jmp
adc
push
cmp
inc
movsl
je
and
jnp
out
rol
fcmovnb
fstpt
push
stos
pop
outsl
mov
push
jnp
add
aad
in
cmp
loopne
inc
pop
jle
ss
imul
pop
jae
mov
jbe
mov
ret
sbb
bound
lcall
xchg
pop
cld
mov
mov
test
cmp
mov
imul
mov
shlb
mov
ret
test
std
cld
jl
cs
jb
push
lds
outsl
shll
push
jmp
xchg
mov
fsts
xor
fmuls
shll
and
imul
mov
scas
sbb
add
xorl
sbb
mov
cmp
iret
out
jmp
bound
ds
mov
ljmp
dec
test
bound
xchg
outsb
and
mov
das
call
jb
sbb
shll
fs
inc
testl
mov
dec
xor
dec
pop
pop
xchg
pop
pop
sbb
jp
int
push
adc
movsl
mov
jmp
je
sub
mov
inc
add
or
sbb
or
xchg
mov
lods
rol
lahf
pop
cmpsb
rcrl
push
popl
dec
dec
mov
icebp
or
mov
xor
cmp
push
addb
mov
divb
in
xor
int3
cmp
cmp
sub
sahf
adc
jo
mov
dec
mov
int3
sahf
les
out
mov
mov
jmp
pop
ror
lds
inc
loop
lret
xor
aad
push
imul
push
lds
js
push
ror
stos
stos
test
jecxz
xchg
loopne
mov
jns
mov
or
or
xchg
add
jae
push
out
ljmp
iret
cmp
or
sbbb
jge
inc
fidivl
lock
das
jno
sbb
inc
shlb
xor
mov
shll
xor
or
mov
and
xor
mov
adc
inc
test
push
xor
psraw
in
jl
dec
adc
mov
rcll
das
or
pop
cmp
lods
lret
mov
add
bnd
mov
jg
rcrl
mov
cmp
pop
orb
jbe
xor
hlt
clc
insb
out
add
cld
push
xor
pop
stc
in
mov
out
notl
jae
jno
mov
in
sarb
lds
fdivrl
mov
rolb
dec
adc
fldenv
aas
hlt
add
pop
push
xor
sbb
xchg
icebp
out
orb
addr16
mov
pop
pop
and
scas
pop
lcall
adc
mov
js
fsubp
mov
or
cmc
lret
mov
inc
jle
imul
jae
pushf
lods
and
xor
je
dec
unpckhps
sbb
push
dec
cmc
stc
repz
out
icebp
imul
pop
ret
jecxz
push
adc
loopne
push
jns
cmc
cmp
add
jbe
testl
adc
outsb
ja
mov
mov
push
mov
adc
das
cmpsb
popf
pop
stos
mov
sahf
and
cmc
jno
push
adc
jne
cmp
mov
xchg
mov
pop
pop
push
mov
pop
mov
mov
jnp
mov
jbe
call
jns
add
mov
inc
jno
inc
mov
xor
push
mov
xchg
adc
lock
adc
ss
mov
fs
jnp
mov
mov
xchg
movsb
movsl
mov
leave
cmp
add
jae
dec
sarl
iret
xor
cmpsl
fcoms
mov
fucomp
or
push
xor
jnp
lret
adc
mov
add
cmpsl
jle
adc
xor
add
push
pop
mov
sub
mov
pop
adc
sbb
push
jo
lea
jmp
shrl
repz
rolb
ljmp
in
cmp
cli
cmc
lds
lret
fiadds
mov
xor
fnstcw
dec
jle
roll
rcr
test
stos
or
rcll
add
pop
jle
dec
ja
clc
adc
push
fs
or
sub
test
xor
aad
adc
xchg
hlt
cmp
mov
call
cmp
adc
pop
pop
repz
cmp
jae
xchg
out
mov
xorb
popa
xor
lahf
es
orb
mov
sbb
mov
clc
cmpsb
roll
xchg
clc
cmpsl
mov
dec
adc
pop
icebp
sub
cmpsb
fimuls
add
xchg
sub
cmp
test
icebp
inc
clc
data16
fsts
mov
aam
cmp
xchg
cs
cmp
sahf
pop
jnp
push
and
mov
push
inc
or
mov
sbb
orb
xor
iret
clc
scas
loopne
jne
xchg
adc
fidivl
sahf
shlb
cltd
shlb
mov
cld
inc
stos
jl
ja
out
outsb
stos
dec
lahf
lcall
rclb
into
aaa
scas
mov
pop
adc
inc
inc
sub
mov
repnz
xor
ds
into
mov
sub
fiaddl
push
addr16
cmp
aad
shrb
inc
enter
icebp
lods
mov
inc
and
sahf
or
orb
xchg
jb
or
jo
xor
adc
mov
jbe
add
mov
add
je
sbb
jg
mov
mov
pusha
shlb
mov
pop
inc
pop
mov
rclb
cs
pop
or
or
pop
jbe
les
mov
shlb
pop
cmp
das
xchg
jmp
ds
mov
adc
leave
rcrl
sahf
mov
mov
sub
mov
jl
add
jb
pop
outsl
adc
jb
inc
int
xchg
shrb
sub
outsb
repnz
movsl
shll
cli
xor
and
ss
xchg
mov
jb
pushf
je
movsl
loopne
mov
adc
mov
test
inc
push
mov
mov
inc
in
inc
ds
sbb
pusha
jne
clc
jbe,pn
add
cltd
adc
cld
jne
stc
sbbl
imul
in
push
je
cltd
jecxz
stc
lea
call
jne
pop
pusha
jb
jae
lods
adc
arpl
inc
das
push
xchg
loopne
shrl
or
lahf
mov
sti
xchg
outsl
shll
rcrl
adc
loop
pop
out
or
mov
or
mov
push
out
mov
mov
fld
mov
imul
addr16
mov
jmp
xor
push
test
and
or
aad
push
jl
push
addr16
mov
adc
gs
idiv
mov
ja
leave
mov
xlat
dec
pop
repnz
fsubrs
movsb
fwait
mov
imulb
cs
push
pusha
push
inc
data16
jg
lea
pop
pop
bound
std
in
psrlw
movsb
std
dec
stc
test
in
pushf
jbe
je
incb
sbb
mov
xor
mov
repz
or
ja
scas
jo
sbb
mov
mov
jne
jmp
test
fucomp
push
inc
out
repnz
adc
sbbb
scas
mov
aam
mov
gs
and
xchg
xor
es
rorl
cmp
jp
in
clc
sar
mov
fists
jg
and
dec
lret
push
add
dec
dec
sub
jle
cs
xchg
pop
pop
icebp
dec
lods
insb
push
cmp
sub
pop
out
lret
xchg
out
aas
add
mov
xchg
xchg
xlat
pop
stc
in
test
sarl
test
jmp
outsl
scas
pushf
adc
lock
loope
adc
push
inc
mov
out
jl
pop
mov
lret
inc
inc
icebp
out
pop
cmpsl
rcl
loope
outsb
mov
ljmp
pusha
dec
in
and
insl
lret
ret
imull
ficoms
jl
mov
jno
nop
sbb
xor
out
inc
pop
cs
adc
jecxz
pop
repnz
mov
xorl
cli
int
sbb
out
ret
mov
sub
mov
jb
lcall
out
sti
xor
and
push
sti
iret
fcoml
push
icebp
ret
xchg
cmpsb
xchg
lahf
loopne
test
cmp
jae
xchg
rol
test
idivl
inc
insb
mov
mov
mov
jmp
test
jmp
sti
lahf
mov
cmpl
divb
insl
mov
test
mov
push
pop
adc
inc
mov
nop
rorl
ret
adc
adc
add
jbe
out
jae
pusha
jg,pn
mov
xchg
scas
sbb
das
call
jle
addb
pop
icebp
cmc
inc
lret
jmp
ficomps
jnp
jecxz
dec
sbbb
addr16
mov
mov
add
pop
gs
xor
jmp
dec
mov
mov
lret
orb
adc
mov
int
cmp
pop
pop
sbb
jno
fbld
stos
mov
fnsave
andb
jne
test
cld
pop
aas
je
add
repz
leave
add
lock
das
mov
add
mov
neg
ja
push
sbb
pop
xchg
jo
mov
lahf
popf
and
dec
enter
fstpt
sahf
lods
inc
test
dec
jge
cld
dec
dec
mov
xchg
jmp
mov
cmp
pusha
in
pop
sahf
jo
test
mov
sbb
push
jge
outsl
out
sub
xchg
jge
push
xchg
das
add
fnstsw
push
ds
adc
rorb
lcall
mov
daa
xchg
adc
jno
push
iret
inc
inc
mov
and
add
xchg
cmp
mov
adc
xor
rdmsr
or
cmp
mov
lods
icebp
jb
ljmp
jb
ljmp
jb
ljmp
jb
ljmp
adc
rorl
shlb
shrl
add
mov
mov
dec
pop
scas
mov
xchg
adc
fisttpl
mov
push
add
sbb
mov
or
or
xchg
sbb
xor
scas
jg
fisubrs
std
mov
aas
lcall
sub
dec
adc
mov
repz
sbb
pop
decb
jmp
mov
xor
enter
lods
xorl
sub
testb
int3
or
dec
sbb
xchg
adc
popf
cmc
mov
push
mov
shll
sub
sbb
fnop
scas
xchg
jle
jne
pop
mov
test
add
mov
xchg
add
adc
inc
dec
out
jae
fcmovnbe
adc
ffreep
xor
inc
mov
push
stos
mov
rorl
fucomp
add
adc
movsl
int
pop
push
inc
adc
icebp
push
sbb
and
insb
movsb
stc
int
push
jo
and
insb
inc
add
sbb
insl
mov
outsb
add
pop
pop
push
xchg
cmp
fcmovu
mov
rol
adc
scas
push
jmp
jae
mov
jp
test
inc
test
movsb
aad
sbb
scas
or
mov
jae
sub
std
adc
mov
push
cmp
rclb
repnz
lds
mov
shlb
inc
jnp
mov
mov
adc
mov
int
les
push
sub
fwait
sbb
xchg
aaa
dec
adc
outsb
int
stos
push
cmpb
scas
outsb
inc
push
xchg
test
pop
push
sbb
ja
dec
daa
mov
adc
frstor
loop
inc
into
arpl
mov
dec
adc
std
loope
gs
mov
push
xor
je
negl
outsb
ds
push
xchg
sub
jb
mov
stc
aas
pop
pushf
sub
cld
jb
and
shll
outsb
hlt
mov
add
mov
mov
pop
mov
jle
mov
lret
pop
scas
jns
fisubrs
mov
nop
adc
rcl
xor
cltd
mov
xchg
cmp
and
inc
sahf
mov
cmpsb
std
stos
icebp
jae
cmp
lock
insb
jge
push
test
cltd
mov
decb
icebp
clc
pusha
repnz
aas
lcall
or
mov
jne
jp
add
sub
dec
repz
and
xor
fsubs
cmpsl
and
pop
or
cmp
in
or
mov
jo
cmp
cli
mov
push
mov
xchg
pop
push
xor
mov
push
jnp
push
add
sbb
ret
in
arpl
cmpsb
cs
xchg
pop
pop
cmp
faddl
ficompl
mov
mov
dec
cmp
std
das
arpl
and
out
mov
jecxz
mov
pmaxsw
xchg
das
sbb
pop
mov
cmp
fdivrs
loop
pop
shll
std
and
leave
test
or
jnp
addb
and
push
rolb
shr
sub
mov
xchg
daa
push
add
aam
ret
xor
mov
nop
fdivs
pop
insl
fwait
xchg
loope
enter
pop
pop
push
inc
mov
orb
dec
cmp
mov
or
mov
cwtl
and
push
pop
leave
inc
mov
pushf
sbb
cmc
imul
mov
inc
popa
cmpsb
scas
pop
adc
mov
sub
enter
out
mov
ret
mov
add
and
xchg
mov
in
or
icebp
or
mov
push
aam
dec
push
pop
jae
pop
sahf
sbb
jae
lds
std
adc
cmpsl
jae
sti
sahf
cwtl
stos
mov
mov
push
es
push
lahf
cwtl
push
outsb
dec
repnz
adc
jp
sbb
lcall
and
shrl
out
push
rorb
adc
push
fs
fsubrl
mov
pop
sti
nop
je
cmp
xorb
mov
mov
mov
negl
lcall
shl
sbb
iret
add
mov
shrb
imul
cmpsb
push
mov
and
pusha
sti
popa
dec
sub
cmp
cli
and
mov
xor
rcl
pop
dec
adc
inc
mov
into
imul
mov
xor
sti
roll
dec
lcall
sti
and
cmc
shll
jno
cmpsb
stos
xchg
int
xor
xlat
pusha
pop
jnp
mov
out
dec
call
cltd
lock
loop
pop
aaa
and
insl
dec
testl
addr16
je
ds
jb
shr
in
cmp
lea
dec
cmc
mov
js
shl
sti
push
xchg
jmp
lods
mov
das
es
jne
repz
inc
xor
ss
stos
sti
mov
and
sbb
lock
jle
adc
stos
bound
clc
pop
andb
mov
loopne
repnz
inc
ja
sbb
mov
push
dec
sti
sahf
mov
adc
dec
dec
sbb
outsb
xor
adc
pop
pop
aam
sti
push
popf
add
cld
mov
mov
pop
jnp
int
adc
inc
sub
add
mov
and
inc
mov
js
and
and
xor
repnz
iret
mov
mov
lea
mov
jb
push
adc
mov
jge
clc
aam
not
push
add
inc
sub
mov
fiaddl
cltd
jle
and
les
mov
push
lret
dec
in
orl
push
inc
daa
aam
jae
sbbb
inc
mov
scas
pop
arpl
xchg
mov
xchg
insl
jno
pusha
pushf
xchg
insl
jg
jmp
out
mov
or
filds
jae
and
cli
push
mov
loop
jno
sbb
jo
mov
pop
mov
ds
dec
in
xchg
xor
aaa
xchg
std
addr16
loope
mov
incl
fs
leave
ret
sub
inc
idivb
lahf
imulb
sti
subb
cmpsl
push
sti
scas
xorl
mov
mov
jb
mov
out
dec
shr
aas
ss
lds
jl
outsb
rol
clc
movsb
mov
adc
mov
mov
flds
ljmp
test
dec
sub
xchg
icebp
ret
test
mov
pop
fisttpl
push
add
lea
xchg
enter
shlb
stos
mov
mov
fildl
jne
lods
pop
mov
pushf
ret
pop
dec
lods
or
pop
into
sbb
jnp
cltd
in
int
in
jbe
mov
mov
addr16
push
sbb
add
add
dec
hlt
dec
xchg
or
shl
es
mov
jb
mov
sub
stos
ficoms
jo
add
jae
pop
mov
sub
int3
daa
into
push
jnp
call
sub
sbb
in
push
in
pop
ja
fcom
stos
in
ret
push
jns
in
aam
pop
fidivs
sti
lahf
or
adc
mov
ja
jge
mulb
sub
lcall
adc
add
mov
lcall
mov
lcall
push
in
sbb
mov
mov
fcmovnb
in
mov
and
stos
jge
mov
pushf
loop
movsb
xchg
sbb
cmp
jg
mov
jnp
es
add
dec
movsb
ret
sub
mov
outsl
jle
pop
pop
xor
lds
int
lea
push
ret
jg
and
pop
or
jno
and
shrb
int
fisttpll
fisubl
mov
jnp
popf
arpl
in
jg
imul
sub
cwtl
shll
sbb
es
pop
sti
lea
or
popa
mov
fsubs
aas
push
sbb
mov
int
incb
mov
sbb
outsl
cmpsb
bndldx
pop
cmp
mov
add
xchg
and
mov
sahf
out
mov
dec
rorb
push
mov
cmp
shll
push
leave
push
aas
sub
mov
sub
mov
jmp
out
jmp
jle
test
pushf
push
mov
dec
rcl
sarl
out
dec
dec
pusha
adc
fcoml
and
xchg
dec
sbb
mov
and
ficompl
stc
adc
nop
push
inc
mov
inc
cmp
dec
xchg
sub
js
mov
mov
jle
xchg
adc
sbb
jl
adc
and
rcll
xchg
aaa
sbb
mov
add
dec
mov
cli
lods
shrd
xchg
dec
in
mov
es
int3
xchg
fcoml
loopne
jmp
and
push
xchg
mov
mov
adc
mov
xchg
jae
in
mov
adc
aad
aas
movsb
push
pop
addr16
adc
or
pop
ss
jp
sub
pop
mov
jo
scas
lret
loopne
mov
sbb
sti
bswap
popf
jecxz
hlt
jae
mov
pusha
es
sbbl
aas
mov
test
jmp
lret
js
and
sarl
cmp
repz
out
mov
xlat
adc
sahf
pop
lods
pop
into
pop
pop
sub
loop
jo
dec
mov
cli
push
stos
into
adc
lock
fwait
cmp
fildll
pop
rcll
mov
in
lret
mov
mov
aad
mov
push
and
inc
rcrl
sub
lret
push
dec
aad
mov
xchg
jp
mov
movsl
xchg
pusha
imul
pop
cli
lea
aam
add
pop
inc
add
dec
sub
add
sbb
cmp
int3
rolb
icebp
and
sbb
cmp
movsl
sbb
xor
xor
pop
shlb
popa
mov
aas
add
je
adc
add
sbb
sbb
aas
xchg
mov
mov
loopne
and
mov
dec
pop
out
mov
sub
add
mov
fstpt
cmp
cwtl
mov
out
dec
mov
jb
loop
dec
cwtl
jae
testb
pop
divl
push
sti
inc
std
mov
inc
mov
out
call
fsts
xor
int3
cli
jecxz
mov
aaa
icebp
fisubl
cld
mulb
fdivs
ficompl
out
xor
mov
or
fnsave
icebp
pop
fmull
shrb
dec
lret
jge
das
xchg
dec
ja
jo
scas
dec
mov
jno
js
and
adc
adc
cmp
rorl
aas
adc
sbb
push
loope
int
mov
fwait
sub
scas
jb
hlt
call
repnz
fadd
mov
repnz
leave
jecxz
test
adc
xor
jmp
sub
jmp
dec
aad
jne
mov
nop
and
push
sahf
es
sti
pop
stos
pop
add
mov
lret
jae
mov
push
pop
enter
lcall
jo
stos
orb
stos
xchg
icebp
dec
movsb
test
imul
jmp
call
inc
hlt
jne
movsl
adc
cld
add
push
cmove
mov
mov
and
ja
cli
and
shl
lea
loope
pop
push
repz
and
out
inc
iret
xchg
aad
pop
xlat
cmp
jle
pushf
jp
xor
scas
mov
jl
ja
enter
mul
and
pusha
rcrb
je
sub
enter
in
xchg
inc
repnz
jae
inc
sub
jb
xor
mov
popf
dec
js
ss
out
cli
jl
ja
cltd
xor
in
and
push
jo
mov
sbb
addb
push
cli
pop
loop
ret
pop
leave
bound
rclb
sub
sbb
lahf
and
xor
xchg
ljmp
and
lods
daa
sahf
out
xorb
arpl
add
pop
int
xchg
pop
add
push
pusha
push
jbe
lock
pop
adc
int
mov
mov
shll
mov
mov
mov
push
inc
movsl
sbbl
and
ja
stos
out
mov
xor
outsb
mov
pop
xchg
mov
xchg
imul
add
loop
and
dec
into
fucomip
jl
cltd
popa
push
pop
ds
stc
cmpsb
cli
add
sti
pop
pop
mov
add
sbb
mov
push
cltd
fs
js
divl
push
jmp
xor
jcxz
loopne
inc
pop
dec
and
fistps
imul
xor
xor
sub
mov
clts
xor
xchg
push
sub
out
push
pop
pop
out
push
xchg
negb
jge
sub
inc
sbb
ret
dec
repnz
fldl
mov
jge
loop
int
je
movl
mov
lock
lods
test
int
mov
shl
mov
fldl
pop
xor
cmp
xor
cmpl
lret
pop
dec
mov
imul
sti
push
xor
imul
aas
test
dec
cli
jp
inc
leave
pop
data16
adc
dec
mov
cmp
inc
add
xchg
ss
call
fstpl
adc
call
insb
sahf
add
mov
or
and
sbb
mov
aas
hlt
push
jne
pop
jecxz
mov
add
mov
push
cmc
add
repnz
call
cmc
icebp
faddl
dec
jl
ds
popa
outsb
dec
mov
jno
mov
adc
pop
jns
push
cli
imul
insb
sbbb
mov
ds
data16
adc
pop
repnz
adc
pop
push
shlb
lods
cmpsb
mov
sub
jg
sbb
fnsave
outsb
cmp
push
jg
daa
cld
mov
out
aam
daa
mov
aam
pop
cmp
add
push
mov
adc
int3
dec
xor
xor
dec
sub
mov
push
adc
mov
pop
xor
xchg
test
jmp
icebp
in
icebp
inc
add
mov
imul
mov
sbb
call
inc
mov
adc
fstpt
sub
nop
and
int
adc
sahf
jae
mov
add
fbstp
jo
outsl
les
cwtl
pop
inc
pop
adc
push
and
and
repnz
pusha
arpl
mov
and
jmp
cmp
leave
es
pusha
xor
lret
jo
fldl
daa
cmc
xchg
testl
add
or
loopne
call
out
std
xchg
xchg
sti
stos
cmp
insl
adc
popf
mov
xchg
xchg
loop
inc
das
add
mov
sbb
int3
out
add
xor
ja
cmpsb
rcl
out
mov
pop
add
and
push
mov
sub
repz
sahf
inc
clc
ds
mov
xor
ret
sub
sbb
and
je
dec
cmpl
popf
inc
pop
adc
loope
pushf
xor
push
and
mov
inc
mov
add
data16
cmp
xchg
jmp
inc
stc
pop
fwait
addr16
test
out
out
test
xor
jl
repnz
jecxz
orl
adc
dec
negb
inc
loope
leave
push
hlt
outsl
mov
mov
push
jns
hlt
mov
fs
pop
sbb
mov
mov
mov
pushf
arpl
push
sahf
icebp
lea
mov
push
push
sbb
mov
xorb
je
xor
push
call
int
lea
jns
xor
cmp
aas
jns
aas
fiaddl
xchg
mov
cmp
push
xchg
mov
or
ret
adc
jb
adc
mov
movsb
mov
push
jne
les
sarl
mov
mov
pop
jge
testl
sub
outsb
and
roll
gs
fwait
aas
rcrl
inc
int
xchg
movsl
out
mov
aam
fsubp
jae
fwait
xchg
mov
sub
sbb
hlt
mov
mov
cmpsl
in
aaa
movsb
je
inc
push
outsl
je
jno
out
pop
and
arpl
xchg
inc
jge
jecxz
inc
lret
mov
ja
in
push
mov
das
pop
int
xchg
movsl
test
mov
cmp
lds
call
out
xchg
and
pop
cmpsl
int
or
dec
mov
bnd
sbb
pop
es
push
bound
rorb
cmp
jmp
int
and
pop
xchg
out
stc
xor
and
jle
icebp
ret
mov
or
test
push
jnp
push
loope
addr16
pop
mov
xor
mov
int
mov
insl
insb
cmc
mov
pop
test
sarl
in
xchg
jno
cmp
pop
out
jge
jmp
bound
xor
dec
push
fsubrs
mov
daa
jp
or
adc
mov
jp
pusha
cmp
jno
scas
insl
xchg
pusha
mov
out
xor
dec
out
cmp
dec
mov
adc
popf
xchg
add
jnp
inc
mov
icebp
xchg
xor
out
xor
adc
cli
lds
and
mov
add
and
push
sti
cli
addb
jnp
shlb
push
mov
rcrl
popa
jae
aaa
jbe
push
sti
mov
out
fldl
stos
fists
mov
fnstcw
pop
push
ja
mov
pop
leave
mov
icebp
adcb
icebp
add
repnz
mov
and
mov
or
icebp
lcall
movsl
pop
add
mov
pop
push
jmp
dec
loopne
sbb
ds
dec
test
inc
imul
pop
mov
sbb
or
mov
jo
std
scas
and
push
testl
sarl
adcb
cmp
fidivrs
jle
adc
jg
mov
imul
je,pt
jmp
xorb
imul
ret
jb
or
loopne
cs
sbb
mov
mov
mov
jmp
pop
and
shlb
mov
daa
cmp
inc
mov
push
inc
sub
pop
mov
inc
sub
test
mov
mov
lock
mov
imulb
js
add
mov
lea
mov
cmp
loope
dec
cmp
mov
fidivrl
imul
mov
mov
mov
imul
es
mov
nop
mov
mov
xor
jle
aaa
xor
mov
mov
imul
xor
xor
mov
les
out
imulb
clc
adc
cmp
add
cmp
mov
lds
add
adc
mov
icebp
fsts
cli
cmpsb
jae
aaa
xchg
pusha
cmp
out
add
inc
xor
arpl
cwtl
push
popw
push
cmc
ds
xchg
cld
mov
mov
dec
xchg
pop
cmp
mov
fcmovbe
sbb
ss
xor
adc
jnp
cmp
and
cltd
mov
cmp
fst
adcl
fiaddl
fwait
stos
je
or
mov
and
push
xor
mov
adc
arpl
dec
and
ljmp
jp
pop
int
lds
push
and
add
js
fidivs
dec
pop
lock
les
mov
out
and
lahf
lahf
xchg
adc
mov
dec
ljmp
inc
add
out
xorl
sti
mov
lea
jb
jb
test
push
sbbl
sahf
enter
int
xorl
orl
mov
cmpsb
pop
and
add
lock
xchg
cmp
fistl
xchg
xor
pop
les
clc
sbb
mov
cmp
jp
int
mov
stos
jbe
outsl
mov
mov
or
xchg
add
jnp
pusha
pop
push
mov
test
dec
mov
add
jne
fistpll
ds
mov
push
stc
sub
inc
sbb
add
lret
pop
mov
stos
sub
movsl
fstp
adc
out
xorb
int
jae
pop
call
rcrb
and
daa
xchg
and
fsubrl
adc
mov
adc
adc
ss
mov
addb
sub
adc
lods
int3
add
lret
stos
orb
shll
push
push
and
and
inc
jnp
daa
xchg
and
dec
or
aas
xchg
stc
aaa
loopne
test
pop
sbb
jae
imulb
daa
xchg
insl
mov
xchg
mov
push
movsl
dec
xchg
popl
dec
dec
jno
xchg
mov
inc
or
dec
inc
pop
bound
cmp
adc
push
add
jae
sub
jmp
xor
mov
js
adc
sub
mov
mov
mov
mov
add
decl
mov
inc
test
adc
lea
dec
xchg
jge
test
call
cmc
in
fnstenv
imul
mov
xor
dec
fisubrl
add
cmpsl
mov
jmp
aad
inc
aam
jmp
sbb
jp
stos
mov
jp
sub
jge
or
cwtl
adc
sbb
push
inc
outsl
jo
xchg
jns
repnz
cwtl
out
cmpsb
repnz
or
xchg
xlat
fistps
xchg
and
or
cmp
pop
stc
repz
push
pop
or
sub
insb
idivl
jne
mov
mov
iret
aam
dec
addr16
daa
mov
fidivrl
fimull
int
movsb
scas
xchg
mov
hlt
call
ja
adc
aas
stos
mov
js
inc
xchg
jne
outsb
fs
addb
mov
and
icebp
movsb
test
shlb
sbb
pushf
xchg
dec
sbb
test
push
aas
or
push
fwait
imul
shl
xchg
loope
inc
jp
mov
outsl
lcall
fxch
push
cs
xor
addr16
and
mov
jl
or
into
pushf
mov
mov
movsl
cltd
fsts
in
sahf
fnstsw
xchg
dec
and
nop
hlt
mov
xchg
xor
adc
add
cwtl
icebp
jb
jp
inc
or
shl
pop
lods
stos
movsb
push
clc
mov
dec
movsb
add
movsb
sbb
mov
lock
pop
jne
xchg
ret
and
or
inc
ret
or
and
adc
adc
and
popa
das
or
mov
inc
adc
adc
push
std
repnz
xor
push
push
es
mov
ret
repz
sti
stos
push
jmp
mov
movsb
pop
sub
cmp
cs
test
dec
or
xchg
movsb
or
sbb
scas
mov
jecxz
inc
lock
and
sahf
cs
pop
inc
imul
bound
sti
iret
jl
repnz
inc
add
inc
filds
jo
ds
and
out
sti
out
pop
into
xor
jmp
into
outsl
mov
sti
ror
cmp
cli
cmp
sbb
pop
sbbb
out
and
xchg
xchg
test
aam
inc
hlt
inc
add
xchg
movsb
mov
mov
mov
fyl2x
movsb
cmp
mov
pop
ljmp
sbb
sbb
andb
enter
cmp
push
mov
xor
mov
in
loop
movsb
fistpll
xor
sub
ljmp
loop
add
and
xor
mov
dec
or
mov
jbe
imul
cs
ljmp
add
int
das
push
and
imul
inc
fcomi
mov
pop
sbb
dec
dec
add
xor
test
mov
stos
movsb
insl
mov
ffree
mov
std
push
mov
pop
mov
or
cmp
adc
push
clc
lock
incb
int3
and
jno
lock
loop
mov
mov
les
push
in
mov
aad
movsb
push
cmpsb
sbb
jge
lea
push
push
push
push
inc
in
lcall
dec
rclb
jb
rcr
das
sahf
lret
fiaddl
fs
sub
in
loopne
adc
bound
dec
in
xchg
hlt
inc
es
in
mov
mov
mov
sub
out
into
mov
xchg
sub
xchg
leave
repnz
mov
outsl
push
data16
adc
icebp
push
mov
xor
adc
dec
xor
mov
jo
mov
sbb
dec
insl
sub
mov
or
push
mov
inc
mov
es
push
jnp
jnp
clc
icebp
xorl
inc
lds
test
fsubrs
xchg
jbe
insl
cld
mov
rcr
subb
xchg
xchg
in
mov
mov
test
mov
stos
mov
shlb
outsl
sti
cmp
and
jne
popa
jp
mov
sub
mov
fnsave
dec
mov
out
sbb
add
mov
inc
ljmp
xchg
arpl
jo
imul
inc
clc
neg
int
mov
nop
std
mov
cli
test
dec
mov
test
jp
popf
loope
pop
mov
decb
sbb
aam
popa
jb
push
int
pusha
jb
xor
ret
xor
sti
int3
mov
into
ljmp
xchg
popf
dec
mov
cs
ret
mov
mov
mov
out
pushf
loop
stos
cmpsb
loopne
cmp
cld
cli
scas
das
inc
fiaddl
dec
std
push
jb
mov
sub
shll
sub
cltd
adc
aas
jmp
insl
pop
jle
pop
test
inc
ficoml
fisubs
insl
jb
fisttpll
mov
call
pop
fmull
jb
arpl
fmull
setg
stos
push
pushf
xor
shrb
loopne
mov
insl
sub
push
mov
out
add
xchg
out
stos
jmp
xor
sahf
adc
in
mov
imul
jp
fdivrl
test
sbb
jb
icebp
xchg
pop
cltd
aas
pushf
adc
loopne
lock
push
fbstp
cmp
pusha
je
cmp
pop
enter
jecxz
mov
lods
mov
jne
push
pop
pop
fidivrs
insl
cmp
daa
mov
mov
xlat
rorl
dec
mov
test
arpl
jl
mov
pop
pop
adc
adc
adc
movsl
add
or
cmpsl
jb
jae
flds
push
cli
jl
popa
mov
testl
jle
push
jg
sub
icebp
pop
cmpsl
or
stc
pop
cmpsl
test
jg
sbb
jb
shlb
aam
cmp
cmp
fdivs
xchg
add
jne
xchg
push
cmp
lock
dec
dec
fbld
mov
test
jmp
sarb
xor
cmc
add
aas
pop
icebp
jnp
inc
adc
adc
scas
lret
std
dec
rcr
sbb
mov
aas
arpl
sub
and
repz
imul
xchg
pushf
sarl
test
aas
push
mov
mov
push
inc
mov
xchg
fdivs
dec
lea
hlt
jo
rcr
cli
loope
inc
cmpsb
pop
and
mov
test
outsl
and
mov
inc
mov
sbb
xchg
andb
fdivl
cmp
push
cmp
je
mov
cmp
es
sbb
jns
inc
jmp
mov
adc
dec
jae
mov
sti
loopne
or
pop
pop
mov
pop
pop
sub
mov
mov
fisttpll
xchg
out
adc
jmp
imul
cmp
hlt
push
xor
and
pop
fdivs
lea
push
lcall
adc
mov
push
and
js
or
arpl
xchg
cs
jecxz
mov
push
scas
mov
repz
negb
dec
and
sub
mov
shrb
dec
mov
adc
inc
pop
xchg
out
lds
mov
jg
sarb
int
je
inc
jnp
pusha
cltd
xchg
lret
frstor
outsb
jg
xor
std
lret
or
jmp
popf
ds
sub
addb
mov
push
arpl
cmpsl
das
js
dec
lcall
pushf
jb
flds
adc
scas
addr16
or
push
cmpsb
xchg
test
das
pop
imul
push
dec
sbb
stc
dec
mov
push
out
js
cmp
pushf
jae
pop
data16
mov
pop
stc
add
mov
pop
push
ret
dec
in
xchg
shlb
out
andl
push
mov
adc
pop
fistps
lahf
push
data16
in
inc
sbb
xor
pop
mov
xor
cld
pop
mov
sbb
sbb
pop
out
and
arpl
shrb
and
idiv
imul
mov
dec
aaa
inc
mov
sahf
mov
pop
mov
popa
cmp
outsb
jb
cmpsb
dec
jl
std
xchg
addb
ljmp
adc
and
sbb
in
rolb
add
inc
mov
mov
add
out
repnz
or
mov
add
and
cmpsb
movzwl
mov
adc
stos
pop
jle
and
inc
dec
xor
mov
bound
inc
mov
das
xchg
inc
bound
jno
pusha
and
xor
pop
push
loopne
mov
adc
sti
and
ret
xor
xlat
out
lods
cmpsb
xchg
jmp
or
adc
pop
loopne
sub
jmp
ret
jae
sub
fdivrl
test
inc
mov
sar
mov
in
add
sbb
fisttpll
jmp
cmp
jmp
mov
int
pusha
sbb
dec
faddl
aas
xor
sbb
sub
leave
pop
mov
mov
cmp
cli
int
data16
ljmp
sub
inc
sbb
call
ds
cmp
inc
jp
aaa
push
iret
add
fisttpll
push
popf
mov
insb
hlt
mov
add
add
and
icebp
adc
cmc
jnp
mov
add
mov
sarb
faddl
and
out
xor
stc
dec
ljmp
jo
imul
cmc
push
mov
add
addl
push
sbb
sub
lea
cmc
inc
out
fcompl
push
add
ds
adc
and
push
mul
mov
iret
test
xor
mov
mov
repz
xlat
adc
mov
pop
aaa
popf
setno
mov
cmp
jo
add
cmp
push
mov
mov
dec
pop
js
cmc
mov
stos
inc
dec
mov
sti
popa
push
insl
fs
xlat
or
icebp
mov
sub
mov
mov
pop
js
mov
ss
test
divb
dec
push
in
and
sbbl
hlt
pop
lret
loope
sbb
mov
sub
mov
lcall
fimuls
call
push
mov
pop
lea
pop
es
mov
pop
inc
movsb
pop
outsb
sbb
cld
adc
and
out
fs
xchg
cmpxchg
push
pusha
push
jae
lock
inc
sbb
lea
dec
adc
cmp
jns
inc
jb
mov
sbb
fcompl
fsubr
in
imul
xchg
mov
loope
mov
ror
xorb
jno
sti
dec
aam
sbb
dec
lock
dec
cwtl
sbb
dec
push
cmpsl
mov
xchg
outsb
cmp
jbe
arpl
out
cmp
jne
mov
aas
or
mov
sbbl
add
stos
loop
adc
test
es
movsb
mov
movsl
mov
dec
xor
adc
adc
mov
cmp
cs
jb
sti
or
xchg
mov
lock
jbe
push
loopne
cltd
lret
xchg
fwait
xchg
xor
cld
xor
ljmp
mov
les
cltd
pop
push
outsl
js
xor
das
mov
icebp
pop
adc
sti
jo
shl
popf
push
ja
aad
push
lret
test
subl
sub
or
test
out
mov
je
add
add
cmp
adc
mov
lret
cmp
out
ja
lea
dec
clc
mov
vaddps
or
rcrl
out
cwtl
adc
es
lcall
mov
push
out
jb
scas
in
mov
adc
rolb
shlb
outsb
mov
ss
nop
adc
imul
ds
subb
lock
cmp
imul
pop
gs
xchg
insl
or
cs
aaa
pop
jmp
cwtl
mov
out
rclb
mov
lret
aaa
out
fwait
inc
sub
mov
pop
mov
int
rol
sbbb
call
pop
jecxz
in
fadds
fwait
add
pop
loopne
inc
lret
call
pop
imul
xchg
mov
mov
pop
mov
dec
mov
test
out
hlt
inc
or
adc
push
sub
shl
mov
xchg
push
in
jne
jb,pt
jo
hlt
push
sbb
xor
adc
cmp
sbb
push
xchg
cwtl
movl
call
mov
jb
jnp
fs
mov
lods
inc
push
sahf
fisttpll
dec
scas
out
fildll
shlb
mov
into
fwait
loopne
mov
fimuls
cmp
popa
pop
xor
push
jmp
out
mov
out
pusha
dec
sbb
std
shlb
jae
xchg
mov
lods
pop
test
mov
stos
ljmp
push
jmp
shrl
inc
jp
repz
adc
dec
lcall
jmp
popa
cs
or
lock
dec
stos
jo
imul
mov
std
adc
jl
lcall
sbb
in
ret
out
or
pusha
shrl
and
rorb
inc
out
add
std
lock
popa
adc
sbb
push
fldenv
fcmovb
nop
sbb
sub
cmc
dec
les
rcrl
sahf
sbb
jg
pop
mov
push
jmp
push
xchg
sbb
dec
jns
cmc
push
das
stc
pop
cli
pushf
sti
push
push
popa
inc
stos
mov
ret
bound
cmp
pushl
push
cmpsb
fsubrl
sbb
stc
in
cwtl
push
pop
pushf
add
lahf
aas
dec
xor
xor
frstor
and
cld
jne
and
mov
pop
sub
sti
popf
inc
mov
mov
je
or
fistl
stos
pushf
icebp
sti
jp
rclb
pop
dec
rolb
add
sbb
xor
sub
sbb
add
jle
mov
or
jb
lock
push
leave
aam
scas
add
mov
js
dec
stos
cmp
mov
mov
dec
xchg
xor
mov
aas
imul
xlat
xchg
iret
inc
adc
mov
or
add
cmp
cmp
xorb
mov
and
mov
add
aaa
dec
cmp
mov
lahf
loope
popa
or
dec
push
xchg
stos
cs
arpl
fs
jae
pop
pop
lock
mov
lahf
loopne
cmp
add
in
aaa
int
outsl
shrl
std
inc
out
scas
in
push
sbb
and
adc
jmp
adc
orb
int
jnp
xchg
lret
push
add
shl
aaa
cmp
sbb
push
fldenv
sbb
lock
sbb
shr
pop
xchg
std
arpl
and
dec
arpl
xchg
shr
aas
aad
fistpl
push
xchg
xorb
sub
sahf
mov
mov
or
pop
pop
xchg
sti
imul
clc
test
inc
cli
lods
mov
add
jecxz
jmp
sbb
mov
sti
mov
mov
sahf
pushf
repnz
pop
mov
sahf
add
jne
push
add
add
or
push
jns
inc
movsl
cs
dec
push
sarl
mov
loop
inc
jecxz
imul
inc
and
jl
adc
jmp
cmp
push
scas
bound
sub
mov
push
mov
mov
out
xchg
out
or
and
mov
std
jl
mov
inc
lret
adc
sub
jle
movsl
outsb
int
scas
stos
mov
and
jb
inc
jmp
mov
mov
xchg
js
mov
add
sbb
mov
lock
arpl
and
cli
or
xor
mov
or
aaa
shll
das
mov
push
sub
xor
jne
or
adc
mov
sbb
push
dec
pop
adc
mov
aaa
nop
adc
jne
mov
mov
cmpsl
jp
mov
inc
mov
and
loope
adc
pop
pop
es
loop
push
adc
xor
clc
aad
jmp
rcrb
push
rorb
ds
cmp
mov
ja
pop
imul
jle
sub
ds
sub
inc
mov
fldl
repz
lret
add
adc
aas
lds
sahf
mov
loop
xchg
test
push
adcl
adcl
mov
xor
mov
out
mov
lock
mov
es
push
mov
sahf
loopne
adc
loope
in
out
test
leave
push
sbb
mov
push
mov
cmp
fucom
dec
pop
mov
push
shlb
mov
adc
mov
inc
cltd
mov
das
inc
movsb
lahf
in
popa
dec
and
jae
jle
fimull
repz
sti
jp
cmpsb
pop
sub
dec
cwtl
sub
jno
int
jecxz
pop
mov
inc
fstpl
mov
gs
push
dec
sarb
ret
fisubl
lock
jge
dec
dec
jecxz
imul
push
dec
dec
cmp
mov
ljmp
fdiv
pop
incb
fmuls
xor
idivb
dec
rorl
int
pushf
mov
lods
mov
dec
bnd
mov
push
pop
add
pop
push
xchg
insb
imul
repnz
push
pop
sub
and
add
xor
or
negw
rcrb
in
in
cmpsb
and
rcl
xor
int3
adc
repnz
xchg
jnp
adcl
sub
hlt
pushf
nop
and
xchg
xor
repnz
sub
add
and
mov
mov
cli
add
mov
push
sarl
push
mov
inc
mov
pop
push
hlt
sbb
dec
sub
add
aaa
and
in
cli
cmp
mov
mov
sbb
sbb
outsl
movsl
icebp
or
out
cld
ficoml
jno
nop
jmp
insl
test
dec
sti
add
les
pop
jno
add
jae
and
push
dec
sub
bound
stos
adc
aad
dec
ret
cs
mov
xor
scas
dec
jno
sti
jmp
shll
pop
mov
test
dec
testb
mov
sbb
pop
push
dec
sub
cmp
cli
jl
xchg
pop
test
clc
mov
pop
xchg
jle
jle
push
jae
jle
jecxz
lahf
xchg
sahf
sbb
pop
ret
in
scas
daa
xor
out
test
cmp
pop
imul
aam
dec
movsb
inc
fildl
das
inc
and
insb
lea
push
fsts
pop
jnp
icebp
inc
idiv
adc
mov
lea
test
test
mov
inc
mov
pop
adc
dec
mov
mov
lods
xlat
je
fimull
pushl
les
movsl
mov
inc
pop
mov
icebp
adc
mov
pop
jmp
mov
test
loopne
cmc
inc
idivb
sbb
ficoml
pusha
jne
lods
jb
push
dec
mov
pop
sti
jmp
pop
stos
xchg
clc
shrb
hlt
dec
xor
cmc
xlat
fs
mov
adc
inc
das
xor
out
rcl
pop
in
jbe
int
jp
ffreep
pop
mov
sub
orb
lcall
sarb
rorb
push
aad
add
pop
mov
xor
xchg
mov
call
sbb
fmul
cmp
test
in
xor
cmp
mov
xor
int3
ljmp
mov
push
jl
stos
outsb
pushl
mov
mov
testl
testb
jp
cmp
ret
sub
out
fadd
repz
or
jb
enter
cmpb
mov
ljmp
movsb
pop
rcll
add
lcall
lods
xor
mov
cmc
jmp
jmp
sbb
dec
add
movsb
inc
cli
pop
add
aas
lds
or
pop
jno
loopne
bound
lods
rcr
xor
loop
stos
xchg
sbb
and
and
or
add
sub
mov
or
mov
loope
rorl
lock
mov
fsubs
movsb
lsl
cmpl
xchg
xor
shlb
sbb
and
fidivs
push
fwait
shrb
lock
mov
xor
test
xor
xorb
mov
jno
dec
leave
pop
lret
jns
mov
mov
jmp
lahf
xor
sbb
jg
or
mov
clc
adc
into
sbb
out
clc
mov
fwait
push
sti
leave
popf
pop
imul
jp
inc
test
sub
inc
mov
sbb
push
mov
xorl
sti
mov
cmp
xchg
jbe
cmc
sahf
sub
sub
xchg
aam
xchg
cltd
pusha
mov
gs
rcrl
or
fisttps
sub
cltd
in
out
jnp
and
outsl
sub
inc
jbe
lret
insl
es
inc
add
scas
movsl
sbb
icebp
xor
pop
lods
mov
stos
and
popa
jae
sbb
xchg
push
clc
out
mov
sbb
inc
jp
paddd
lods
call
xor
int
inc
sub
sbb
pop
sub
push
xchg
arpl
sbb
jecxz
jo
jns
int
push
lea
inc
jp
pushf
rorl
repnz
scas
addr16
jge
jle
mov
lds
sbb
mov
into
sub
shrb
dec
mov
lcall
js
cmpsb
shrl
lds
pop
scas
push
sbb
scas
cmp
lahf
in
iret
dec
sahf
lods
cmpsb
loopne
popa
mov
mov
jmp
dec
dec
imull
nop
xlat
sub
imul
xor
sbb
loope
push
sub
fdivrp
loope
mov
mov
sarb
jnp
stos
fnstenv
ds
jl
jmp
add
sti
add
movsl
jae
inc
call
jbe
sahf
or
js
daa
mov
adcl
and
sti
xchg
dec
mov
mov
fs
repnz
push
mov
pop
xchg
das
loopne
mov
addr16
pop
jo
sbb
pop
push
ss
je
adcl
sbbl
stos
and
shll
push
repz
cmp
mov
xor
mov
mov
cmp
addr16
xchg
mov
mov
daa
mov
lret
test
sub
pop
repz
cmp
ror
push
pusha
out
ror
cmpsl
aam
jp
adc
inc
icebp
es
or
mov
add
fdivl
jb
adc
mov
sarl
and
icebp
nop
add
sub
push
dec
jbe
mov
subb
and
out
cltd
cmp
psubsw
scas
je
jmp
stc
add
repz
mov
leave
push
aaa
adc
cmp
cltd
nop
clc
jge
adc
call
inc
xor
je
mov
xchg
out
repz
out
push
mov
inc
mov
adc
lods
das
jae
jle
out
dec
mov
or
int
lds
cmp
push
das
sbb
div
adc
stos
push
pop
inc
int3
jle
sbb
jne
scas
mov
adc
repnz
rcr
dec
mov
repz
mov
aaa
push
inc
cmpsb
stc
loop
push
xor
fidivrs
nop
dec
out
sub
imul
shl
mov
add
push
js
mov
inc
std
push
lods
dec
dec
sbb
push
je
sbb
and
mov
xor
mulb
clc
in
adc
mov
loop
leave
mov
jnp
fdivrs
sub
xor
je
dec
shrb
adc
mov
inc
lret
out
push
xor
dec
mov
cwtl
cmc
xchg
dec
stos
cs
jnp
cmc
jno
push
push
push
dec
push
int3
mov
push
repz
pop
imul
and
push
rorb
or
addr16
stc
inc
stos
ret
push
mov
jle
fiaddl
int
dec
or
lds
and
xor
imul
pop
pop
dec
inc
ds
jg
shlb
mov
pop
arpl
das
mov
sti
icebp
inc
cmp
dec
sub
xchg
pop
sbb
sbb
or
in
leave
cli
lods
popf
mov
mov
xor
in
pop
rol
imul
mov
fsubrl
pop
or
ss
lret
mov
test
xchg
je
cmpsb
jb
cmc
adc
mov
dec
mov
mov
sbb
xchg
mov
fxch
jle
shl
pop
xchg
faddp
ja,pn
shll
xor
int
jnp
pop
icebp
test
mov
inc
shll
pop
ljmp
cs
mov
sbb
push
xchg
xor
mov
sahf
pusha
rcrl
mov
icebp
leave
lcall
push
nop
ret
cs
sbbb
adc
ficompl
sbb
ret
leave
enter
loope
dec
mov
or
call
out
cld
xchg
loope
insl
xor
push
push
dec
adc
mov
mov
lcall
adc
mov
mov
in
and
add
jno
mov
and
aas
mov
stos
or
cmp
imul
shrl
fsubrl
and
jns
mov
andl
test
mov
sbb
sub
jle
sub
mov
or
adc
bound
mov
pop
mov
das
mov
or
mov
cmp
xchg
adc
push
jecxz
cmp
and
ret
adc
jo
add
aas
add
xchg
arpl
and
or
pop
xor
xor
nop
dec
mov
mov
adc
popa
add
adc
and
sarl
adc
jbe
xor
gs
cmp
movsb
and
or
das
mov
pop
test
xor
cmp
mov
inc
mov
mov
add
adc
pop
mov
and
jp
inc
pop
mov
add
mov
add
mov
adc
and
test
sub
adc
jo
fists
stos
cli
repnz
movsl
mulb
jp
arpl
mov
cmp
push
mov
jle
out
scas
ljmp
sbb
cwtl
out
mov
push
add
push
mov
and
out
mov
pop
adc
repnz
pop
rolb
or
adc
adc
popf
mov
mov
adc
out
jns
aas
xchg
and
add
cwtl
cmpsl
je
test
pop
test
hlt
and
notl
mov
cs
rolb
loope
int3
mov
mov
sbb
inc
or
xor
mov
aam
push
jp
mov
mov
mov
mov
ljmp
mov
xchg
and
bnd
test
cmc
mov
sub
cmp
mov
shlb
bound
nop
adc
push
mov
xchg
or
aas
mov
jbe
cmp
or
lods
sahf
std
xchg
mov
and
stos
and
in
cmp
xchg
xor
xor
cmp
adc
ss
mov
psadbw
mov
mov
nop
cmc
mov
sbb
scas
hlt
cmpsb
sbb
movsb
xor
pop
mov
mov
scas
pop
mov
scas
and
aaa
cmpsb
cld
lret
xor
lds
mov
mov
xchg
mov
xchg
sahf
and
mov
add
mov
lods
aam
mov
stos
push
and
out
and
jp
and
sbb
aas
push
imul
inc
fidivl
stos
add
outsl
lock
and
adc
test
pop
mov
and
mov
jbe
andl
data16
lahf
cmpsl
cmp
adc
add
rcll
and
adc
mov
jmp
mov
insl
mov
imul
mov
sarl
add
adc
or
and
aas
sub
xchg
daa
or
dec
xor
cmp
jo
cld
test
ja
or
in
mov
mov
or
repnz
stc
clc
mov
xor
repnz
daa
sub
insl
sub
mov
mov
cmc
scas
pop
shrb
adc
and
jbe
hlt
icebp
sti
mov
mov
fidivs
and
fcompl
pop
mov
ret
outsb
mov
pop
mov
add
insb
mov
mov
daa
mov
jbe
fwait
mov
xor
mov
mov
xor
ror
mov
jo
jnp
fcmovu
xchg
lods
inc
mov
mov
mov
dec
jle
mov
test
test
jnp
fsubl
and
adc
dec
and
mov
pop
cs
test
add
and
xchg
lods
ret
stc
sbb
inc
xor
jae
pop
pop
pop
movsl
aas
mov
movsl
idivl
movsl
and
popa
jp
xchg
jl
or
gs
mov
xor
or
mov
adc
mov
mov
movsb
cmc
inc
out
push
test
fldcw
jge
adc
mov
shlb
out
movsl
adc
icebp
push
xor
pop
orl
movsl
push
ret
mov
mov
mov
pop
test
inc
cmp
mov
bound
jle
jge
andl
mov
dec
adc
pop
lret
adc
sbb
test
pop
adc
mov
pop
jle
jae
stc
cli
imul
repnz
jnp
pop
sbb
ret
in
add
imul
ret
std
xor
xchg
add
in
fdivs
shl
lahf
sub
sbb
lods
adc
frstor
sub
outsb
mov
mov
sbb
jl
mov
pop
or
xchg
loop
mov
inc
push
dec
mov
hlt
or
mov
sar
std
xchg
adc
and
mov
cli
ds
addl
repz
imul
xor
leave
jge
cmp
inc
or
add
sub
scas
fiaddl
mov
jmp
lret
push
lods
mov
std
push
gs
fildl
je
popf
mov
sbb
mov
jecxz
jmp
push
jmp
pop
hlt
test
test
clc
stos
leave
pop
add
xchg
push
sbb
out
push
push
xor
jne
sub
add
xchg
imul
and
xchg
mov
add
xchg
stos
daa
jmp
xor
lahf
aam
sbb
subb
xchg
subb
loopne
mov
bnd
outsl
sbb
cmp
dec
xor
imul
hlt
pushf
jb
push
ds
fimull
inc
jo
hlt
sub
xor
mov
sub
jb
xor
cmpsb
stos
add
mov
jmp
cmp
or
add
ja
out
add
cli
mov
iret
aas
inc
lret
punpcklbw
xor
arpl
outsb
lds
mov
pop
lods
fidivl
mov
mov
cmc
add
mov
mov
in
mov
jne
mov
outsl
aas
imul
xorl
mov
mov
mov
xor
push
jl
leave
addl
imul
imull
sbb
frstor
sti
jle
mov
or
cli
mov
xor
idivb
mov
push
pop
adc
add
cld
dec
cwtl
mov
out
lds
jno
rorl
sarl
std
jmp
xchg
sti
mov
shll
cmp
aas
ds
mov
jns
lret
repnz
das
stos
mov
sbb
movsl
pop
pop
mov
mov
dec
mov
and
ror
xor
adc
add
testb
and
fwait
int3
jmp
pushf
sarl
push
into
lret
cmpb
pop
jb
jmp
or
cmp
mov
push
rolb
shlb
push
pop
xchg
stc
rclb
push
xchg
test
jno
xor
push
add
addb
jl
pop
stos
repnz
out
insl
pop
fnstsw
je
clc
xchg
test
pushf
add
aaa
cmp
imull
ds
push
jg
mov
jmp
sarl
rorl
inc
stc
iret
add
sti
int3
sti
adc
jle
notb
lds
push
xor
adc
inc
and
push
mov
clc
ret
mov
pop
xchg
int
sub
int
in
push
mov
loope
daa
mov
mov
push
inc
cmpsb
adc
xchg
xor
aam
dec
insb
test
stos
icebp
scas
dec
push
cmp
ds
in
pop
ret
mov
push
push
lret
or
repnz
loopne
xchg
inc
out
test
daa
xor
cmc
mov
cld
sub
jbe
inc
stos
loopne
dec
push
sbb
mov
cltd
xor
test
rcll
inc
fucomp
mov
mov
leave
xorb
mov
ds
sbb
cmp
inc
data16
fisttps
imull
in
pop
fbld
sbb
jo
cmpsl
ror
inc
sub
in
and
into
and
mov
inc
loop
pop
and
inc
pop
mov
xor
xchg
bound
sub
jl
mov
dec
add
cmpsb
mov
push
jae
mov
and
or
test
mov
pushf
cmp
sub
fisttpl
xchg
mov
gs
notl
in
cmc
and
or
pop
dec
icebp
mov
mov
ror
push
cmp
sub
mov
out
movsb
hlt
cs
stos
lahf
sbb
test
jne
out
and
out
inc
sub
add
sti
mov
negl
js
jle
or
cmpsb
ficomps
and
icebp
or
movsb
repz
mov
push
scas
inc
mov
pop
mov
in
jg
mov
pop
push
xchg
push
cmp
mov
aad
adc
mov
push
jmp
js
mov
and
fs
pushf
jb
test
fnstenv
inc
mov
dec
sahf
fstl
into
out
and
arpl
xchg
sbb
inc
mov
pop
cmpsb
adc
loope
mov
in
bound
std
sbb
test
jb
les
mov
out
cmp
push
bound
mov
rolb
lret
and
push
jmp
jle
ret
repnz
cld
adc
jecxz
mov
outsl
add
jmp
fcmovb
adc
sub
out
xchg
in
sti
movb
sub
jnp
imul
adcl
out
mov
mov
aad
test
ss
stc
adcb
cmp
popa
imul
sub
xchg
xor
ds
mov
jp
mov
je
inc
xchg
movsl
test
fstl
pop
inc
movsl
jl
int3
jo
scas
mov
cmc
adc
adc
xchg
add
cmp
into
mov
scas
pop
jl
add
movsb
or
and
dec
sbb
loopne
in
mov
xchg
xor
cmp
inc
push
mov
xchg
cli
adcl
and
call
dec
mov
pop
icebp
sub
outsb
mov
dec
shll
psubd
iret
sub
and
jmp
stc
mov
fdivrs
dec
shrl
sub
or
mov
xor
loopne
xor
jmp
mov
lods
loopne
add
mov
xchg
or
dec
add
xchg
out
pusha
jno
xor
dec
sahf
jmp
nop
out
push
push
inc
pop
pushf
push
jae
test
dec
mov
xchg
cmp
sub
lods
outsl
and
mov
xor
pop
xor
loop
pop
jl,pn
dec
mov
out
pop
cs
cmpl
loop
hlt
sbb
sbb
adc
call
lods
lds
xor
lods
sbb
dec
shlb
stos
xor
out
incb
adc
repnz
sbb
fidivrs
mov
or
and
adc
repnz
jl
sub
mov
jecxz
orb
movsl
sbb
xor
stos
mov
push
lods
enter
vandps
adcl
mov
xchg
mov
outsb
mov
lods
mov
cmp
shlb
adc
mov
int
pusha
jmp
mov
bound
sub
outsb
dec
mov
shlb
es
ss
mov
nop
xchg
xchg
add
cmc
sbb
rorl
daa
movsb
shll
or
cmp
pop
and
and
scas
dec
movb
imul
mov
test
dec
aad
in
sbbb
sarb
popa
push
dec
aam
pop
icebp
or
adc
es
notb
cmp
mov
mov
fsubr
cmp
xchg
xchg
xchg
lret
repz
jb
sbb
jae
cmp
leave
push
sub
fiadds
ss
les
fstp
xorb
dec
jl
pop
mov
jns
rcll
mov
jno
mov
mov
inc
hlt
lahf
out
movsb
push
test
mov
pop
and
xchg
cmp
notb
pop
sub
cwtl
xchg
lods
mulb
lds
stos
shrl
stos
mov
mov
cmp
mov
mov
inc
xchg
mov
ss
jmp
lods
ds
adc
lahf
mov
push
push
mov
lea
lds
mov
xchg
leave
mov
mov
imul
jo
mov
or
test
ror
jae
out
arpl
and
test
es
enter
out
sahf
jmp
xchg
scas
jb
add
pushf
lahf
js
jl
cmp
cs
push
repz
pop
aad
add
jp
pop
fidivs
mov
call
xchg
shll
push
ret
add
addl
sbb
aas
gs
sti
jge
loop
int
insl
mov
inc
lds
xor
aas
mov
push
cmpl
pop
leave
sub
adc
cmp
outsl
push
and
and
sub
fadds
cltd
lods
and
into
out
mov
das
lock
mov
cmp
popf
push
lock
je
xchg
jl
pop
imul
xor
int3
nop
adc
adc
mov
and
and
dec
and
nop
add
sti
bound
xchg
hlt
fnstsw
inc
out
mov
mov
add
xor
jnp
add
repz
sub
mov
cmp
jge
pop
or
mov
jb
jp
and
and
scas
cli
jno
mov
push
mov
jmp
push
add
testb
rclb
sub
out
inc
shr
data16
out
popf
in
and
mov
inc
dec
sbb
ss
xorb
inc
daa
in
loope
insl
mov
cmp
notw
xor
dec
push
je
aad
orl
sbb
xchg
ss
movsl
nop
sub
or
sbb
xchg
pusha
add
out
mov
jae
sub
scas
cld
xchg
outsl
inc
sahf
repz
jb
or
sub
and
push
inc
stc
cmp
push
jmp
arpl
pushf
xlat
dec
xchg
out
icebp
or
adc
aaa
je
loope
mov
mov
dec
aad
outsl
arpl
data16
dec
in
fidivl
pusha
push
pop
inc
icebp
push
mov
popf
xchg
pusha
insl
push
arpl
dec
mov
adc
popf
pop
pop
xchg
mov
loopne
icebp
mov
lods
jecxz
jnp
dec
out
push
push
std
adc
sahf
or
aam
sbb
pop
fidivl
adc
jb
xor
loopne
out
cmpsl
xor
sar
arpl
jae
cmp
pop
cmpsb
lods
in
sbb
cmpsb
movsl
mov
pop
cld
jp
flds
adc
add
cli
mov
pusha
sarl
and
lcall
testl
cmpsb
push
imul
push
cmp
fst
sti
mov
jbe
andl
mov
repnz
or
adc
push
jecxz
aad
adc
mov
cmp
ficomps
stc
cli
lods
loope
adc
pshufw
jb
dec
pushf
shl
shl
xor
out
add
jns
stc
pop
xchg
jae
repz
int3
jl
popf
movsb
jb
shl
xor
das
adc
mov
sahf
mov
sbb
sahf
mov
add
das
mov
or
and
push
xchg
clc
mov
inc
adc
pushf
daa
out
xor
jnp
repz
frstor
push
jmp
gs
inc
dec
dec
xor
or
xor
icebp
jo
lcall
in
ljmp
iret
xor
jl
test
imul
push
decb
pop
sub
hlt
jnp
or
ljmp
xchg
in
flds
hlt
loop
mov
adc
enter
jnp
xchg
xor
mov
add
addr16
jmp
push
or
test
ss
pop
xor
in
shll
popa
xchg
lahf
les
into
jmp
push
aam
sub
xor
out
fwait
scas
iret
sbb
push
out
jge
scas
in
adc
xchg
add
cmc
out
add
shll
repz
out
into
or
imul
je
mov
pop
inc
out
inc
pop
ds
jno
dec
cmp
sti
pushf
pop
sub
cld
loopne
push
gs
pop
push
repnz
ss
sub
pop
shll
xor
or
push
jno
idivb
inc
lahf
or
movsb
xchg
addl
movb
movsb
insl
xchg
or
mov
pop
pop
push
aam
lea
inc
stos
push
adc
mov
fwait
rclb
push
fs
add
test
sub
cld
ret
repnz
test
push
sbb
adc
jmp
jle
in
inc
out
jns
push
pusha
scas
cld
icebp
pop
adcb
inc
push
scas
enter
imul
aas
mov
inc
push
stc
jecxz
mov
daa
ss
push
sti
xor
xchg
leave
sub
sarl
or
test
dec
mov
pusha
test
jmp
andl
mov
push
sbb
push
lcall
sub
xor
sub
dec
mov
and
sub
add
pusha
push
add
out
les
insl
ret
jge
jmp
out
movsb
data16
fwait
add
sbb
dec
cmp
or
outsb
ret
jns
jmp
inc
adc
push
xor
pop
movsb
xor
fucomip
ja
push
add
cmc
shll
xchg
adc
dec
orl
adc
leave
push
loopne
sub
cmp
add
cli
fcoml
jp
ret
mov
sbb
sub
fadd
inc
mov
add
enter
mov
shl
fs
call
mov
adc
cmp
dec
mov
aas
sbb
mov
cmp
xor
call
fbld
mov
les
push
inc
cli
lds
inc
mov
push
mov
cli
sub
xor
repnz
enter
lcall
or
dec
and
gs
js
in
push
int
call
push
mov
bound
mov
lock
movsl
fstps
into
enter
or
mov
mov
pop
scas
inc
cld
shlb
adc
lea
and
mov
pop
adc
mov
in
loopne
cmpb
cli
int3
enter
xchg
mov
pop
leave
mov
ljmp
cltd
cmovl
mov
and
adcl
into
adc
xor
sub
mov
xor
cwtl
xor
pusha
pop
xchg
adc
adc
popf
jmp
loopnew
xchg
scas
lret
jae
shrb
andl
push
push
addl
push
std
cmp
cld
fcmovne
es
and
mov
xchg
or
pusha
mov
dec
call
mov
loope
mov
adcl
jg
xchg
sbb
mov
pop
and
imul
clc
jae,pn
cld
popa
and
stos
pop
imul
mov
out
test
mov
mov
out
sub
sub
fmull
mov
shlb
std
dec
sarb
add
mov
jmp
dec
out
loopne
cmpsl
fnstsw
sub
movsl
add
pop
mov
lods
aaa
lahf
mov
mov
stos
and
lahf
out
mov
mov
pop
dec
std
shrb
xor
adc
jp
shlb
lods
lea
xchg
jb
repz
jp
ljmp
divb
mov
rolb
adc
das
and
mov
pusha
mov
testb
rorb
pusha
pusha
sub
sbb
push
std
push
mov
fnsave
imul
add
mov
sub
sub
mov
popf
xchg
and
fwait
jbe
stos
loopne
pop
pop
addr16
jl
or
mov
mov
faddl
repnz
stc
xchg
mov
add
dec
jae
mov
mov
js
fimuls
test
mov
stos
cwtl
push
dec
stos
and
popf
inc
push
adcb
xchg
sahf
sbbl
nop
pop
negb
inc
sub
mov
cmpsl
xchg
xor
jae
jnp
inc
push
inc
dec
mov
dec
getsec
or
ds
out
jns
fldt
loop
repnz
or
leave
jge
xchg
adc
popa
lcall
mov
xchg
jge
adc
dec
sbb
test
xchg
sti
jmp
xchg
out
sbb
push
rcrb
faddl
jno
cwtl
cmpsb
xor
insb
xchg
pop
xor
pushf
sbb
push
mov
rcr
lret
pop
push
ret
xchg
jg
in
pop
xor
pop
xor
lock
scas
jl
aas
sub
fcomps
pop
lock
sub
fidivrs
adc
adc
jnp
mov
jae
cmc
jle
cmpsb
negl
aam
dec
mov
cmp
mov
lcall
js
repz
mov
imul
pop
jae
jecxz
test
in
adc
cmp
sub
add
mov
mov
out
sub
push
jmp
xchg
fwait
push
out
adc
xorb
mov
mov
jae
mov
sub
clc
iret
das
repnz
jg
mov
lock
pusha
xor
and
cmpb
fnstsw
cmpsl
or
mov
aas
mov
xor
pop
fiadds
inc
mov
xor
mov
mov
rorl
mov
mov
rclb
pop
sar
push
jp
pop
xchg
xchg
call
inc
cmpsl
and
jg,pt
ljmp
das
dec
mov
call
xlat
cli
cli
sub
and
jle
test
movsb
pusha
cmp
stos
loopne
je
mov
jmp
in
orl
mov
cmp
out
and
jae
repz
add
sbb
sub
add
roll
pop
jnp
or
sarb
aad
xor
fidivs
leave
pop
mov
incb
jnp
ds
pop
mov
pop
outsl
sbb
lret
lds
jne
std
xchg
mov
icebp
ljmp
fdivrl
loope
inc
in
popf
mov
push
out
jno
jo
mov
xchg
dec
es
enter
lret
arpl
mov
sbb
fmull
mov
push
loopne
ret
xchg
pop
leave
jecxz
jl
or
sub
cltd
pop
lcall
dec
pushf
adc
add
pushf
bnd
adc
loopne
fnsave
pusha
es
imul
and
aam
mov
cmp
mov
in
xlat
xor
dec
mov
mov
sbb
out
rcrb
or
test
jbe
mov
push
xorb
push
mov
dec
add
cltd
movsb
rcl
and
mov
movaps
mov
cli
or
mov
add
and
push
mov
sahf
ret
insb
fwait
nop
cmpsl
out
push
sbb
jge
mov
sbb
out
xlat
cmp
in
iret
push
xchg
sbb
dec
jne
fidivrs
mov
jl
adc
sarb
adc
mov
shr
dec
repnz
cmpsb
mov
nop
inc
push
lret
andl
lock
dec
sbb
jmp
rorb
imul
jnp
push
sbb
dec
xchg
sahf
icebp
sahf
mov
bnd
push
adc
xor
cmpsb
imul
pop
arpl
pop
out
icebp
fwait
test
or
cmpsb
into
jl
stos
cmpsl
push
xor
hlt
mov
bound
dec
movsl
test
aad
ret
sbb
jnp
jp
mov
movsl
loope
jb
je
fidivrl
repz
mov
stos
pop
jecxz
addr16
aaa
rcl
dec
jae
fwait
dec
stos
and
sub
out
pop
jl
test
xor
ret
xchg
sbb
mov
jb
mov
mov
cmp
scas
sbb
cmp
inc
scas
mov
adc
adc
div
xor
xor
or
icebp
popl
jnp
repnz
mov
inc
testl
xor
aaa
add
femms
pop
pushf
pop
cmpl
lock
cvtpi2ps
push
hlt
xor
adc
pop
pop
popf
cmc
sbbb
lret
add
xchg
jge
push
stc
push
cwtl
repz
mov
fldt
dec
pop
sbb
lock
out
add
or
cmpsl
in
ljmp
loop
into
mov
xchg
ret
enter
daa
push
scas
jb
ss
cs
add
and
add
js
into
sbb
push
xor
or
lcall
pop
or
stos
mov
xchg
mov
mov
shrl
inc
je
mov
mov
sub
push
adcb
xor
insb
loope
sbb
ret
adc
mov
mov
hlt
inc
roll
adc
mov
rorb
icebp
push
mov
push
scas
sti
sarl
mov
pop
jne
adc
jle
dec
lcall
mov
mov
test
cltd
push
sub
pop
fisubs
lcall
pop
sarl
and
icebp
inc
mov
fldenv
rorb
fidivs
out
adc
jno
xchg
or
pop
daa
out
and
pop
push
xor
out
rorb
mov
imul
xchg
mov
pop
cltd
sub
call
push
clc
sub
xor
scas
cmp
fcoms
mov
cmpsl
lods
addb
inc
pushf
push
mov
call
notb
repz
cmp
mov
dec
mov
inc
mov
aad
adc
push
push
test
xor
push
push
mov
sbb
cmpsb
leave
mov
dec
adc
xchg
jb
xor
or
xchg
stc
push
stos
jg
adc
mov
fsubl
cli
sub
mov
pusha
in
loope
dec
repnz
adc
jle
mov
sub
addr16
scas
cmp
daa
int3
je
xchg
repnz
jnp
shl
ss
mov
mov
mov
ffree
daa
mov
add
das
loope
pop
mov
add
mov
out
sub
cmp
mov
jb
in
fsubr
and
repz
xor
mov
ljmp
lods
add
in
mov
xor
icebp
call
jl
jo
mov
out
lea
mov
stos
in
scas
scas
ret
addr16
insl
push
cmp
test
sti
jb
imul
jg
pop
stos
lea
adc
pop
divb
pop
sbb
int
movsb
dec
jmp
std
adc
les
int
sub
ss
and
pop
jl
mov
sbb
mov
xor
imul
loop
out
add
popa
in
push
jb
pop
repnz
inc
add
add
mov
ret
push
es
lock
cld
mov
scas
push
push
xchg
jns
jnp
jns
adc
out
clc
cmpl
stos
icebp
jb
scas
adc
int
push
sbb
lret
stos
mov
mov
adc
imul
mov
ljmp
fcom
das
ljmp
inc
mov
das
mov
shll
cmp
fnstenv
dec
dec
adc
scas
xor
mov
dec
adc
or
and
pop
push
cwtl
cltd
sbb
pop
jg
hlt
int
repz
mov
pushf
imul
mov
jae
mov
xchg
and
adc
pusha
mov
hlt
stos
push
jmp
mov
in
pop
or
hlt
je
xor
sbb
push
mov
mov
lret
int
fnsave
ljmp
xor
and
test
inc
mov
pop
das
mov
xor
xchg
in
dec
and
dec
cmp
je
mov
scas
pop
jb
pop
pop
cmp
xor
and
sbb
jo
bound
lea
sub
push
mov
mov
sahf
cmp
divb
jge
movsl
clc
out
mov
loop
loopne
mov
jae
pop
push
sub
loopne
add
xor
cs
fdivl
lods
adc
pslld
add
rclb
repz
repnz
xor
xor
icebp
aas
jno
adc
dec
pop
mov
jb
mov
mov
xchg
dec
hlt
jle
cmp
push
imul
adc
popa
aaa
mov
push
icebp
int
sub
cmc
pushf
loop
test
push
mov
cld
mov
adc
fs
idivb
jo
and
out
cmc
push
push
cwtl
and
call
add
mov
aaa
mov
push
and
lock
test
inc
in
sub
negl
mul
mov
adc
fldl
mov
adc
int
mov
cli
lds
addl
arpl
mov
xlat
cmp
jnp
mov
sub
int
adc
cs
jb
fmull
sbb
cld
outsl
pop
add
addb
fistpll
lods
dec
add
pop
dec
inc
test
mov
mov
xor
jno
and
lock
xchg
scas
xorl
jle
mov
push
cli
mov
mov
dec
jae
lss
push
fisttpll
or
stos
popf
in
and
pusha
mov
xorb
xor
push
cli
div
ja
xor
out
out
sahf
cmp
ret
mov
jbe
push
sub
loop
xchg
js
mov
sub
int
ja
xchg
pop
mov
jae
hlt
mov
adc
mov
rclb
mov
add
or
fmull
sbb
stos
xchg
in
push
mov
pop
push
stos
mov
mov
shrb
negl
xor
aam
cmp
in
sbb
push
pop
add
testl
lock
pusha
icebp
repnz
cli
xor
xor
push
adc
je
ret
adc
adc
int3
pushf
icebp
in
stos
mov
loop
stos
push
fcmovnbe
repnz
loopne
xchg
imul
mov
cmp
fucompp
jge
inc
cs
push
and
hlt
rcr
lods
lret
out
lret
nop
push
test
mov
mov
pushf
mov
mov
sub
leave
push
enter
sti
ljmp
mov
daa
loopne
lock
xor
into
adc
xchg
sbb
inc
popf
inc
push
mov
jp
mov
inc
push
mull
sbb
fdivs
gs
inc
pop
testl
xchg
inc
mov
adc
cmp
or
jo
cmp
jmp
pushf
mov
ja
jae
cmpsl
dec
in
xchg
adc
stc
mov
sub
cli
adc
push
jo
jne
inc
sbb
pop
mov
cmp
stos
add
les
mov
jl
xchg
aad
cmp
push
fstpt
jne
jb
pop
push
sub
fidivl
adc
add
dec
cli
inc
mov
cmp
movsb
cmpsb
push
pop
fnsave
fbld
fisubs
imul
push
push
xchg
adc
push
mov
leave
dec
jmp
imul
pop
inc
aas
cmp
inc
imul
aam
pop
mov
mov
aam
adc
adc
mov
ja
and
and
scas
into
mov
es
cli
cmp
sti
mov
mov
lods
mov
loopne
fcompl
rolb
pop
pop
repz
push
push
jno
mov
jmp
push
fs
int
pop
jnp
icebp
out
or
mov
std
jp
cli
pop
lar
adc
and
push
and
scas
sub
mov
notl
in
mov
or
stos
ret
xorl
dec
lock
dec
pusha
loop
mov
mov
sub
sbb
push
jb
ss
adc
mov
adc
and
loop
sti
xchg
ret
subl
iret
push
mov
cmp
lret
outsb
dec
cmc
mov
push
jb
and
mov
in
jb
sbb
push
rcrb
jb
arpl
jae
dec
inc
jmp
fidivs
xchg
add
xor
and
imul
inc
mov
jmp
imul
jl
xchg
pop
mov
in
or
imul
lahf
mov
xchg
ds
out
jl
mov
fistpl
inc
inc
testb
xchg
add
fsubr
mov
loop
rorb
test
shl
dec
xchg
ja
xchg
and
fs
push
cmc
pop
arpl
jns
mov
lahf
inc
mov
pop
xor
adc
jmp
int
cmp
and
nop
mov
lds
jle
and
xchg
bound
sbb
adc
scas
jle
subl
imul
sti
cmpsl
or
add
lret
es
out
pop
addb
mov
lret
ja
je
data16
push
xchg
pop
sti
in
cmpsb
jae
add
add
lds
loope
mov
lods
pop
mov
jecxz
fucomp
jle
jecxz
movsb
popl
lock
icebp
jnp
orb
push
popa
sbb
push
jb
mov
add
popl
inc
pop
and
jp
push
or
mov
nop
test
hlt
int
in
add
mov
xorl
and
jo
cmc
sub
fmull
icebp
sbb
push
pop
inc
stos
icebp
out
adc
fisubrs
outsl
pop
pop
mov
repnz
inc
or
mov
add
jo
add
cli
pop
es
xor
dec
sbb
jp
jnp
mov
add
div
mov
sti
pop
scas
fbstp
fcmovnbe
iret
jmp
jae
shl
add
jg
jb
cli
addl
js
rol
mov
or
mov
mov
add
ljmp
and
mov
negb
ds
push
cli
push
mov
cld
lock
and
xchg
sahf
shll
in
je
fdivrs
mov
cld
mov
lcall
lds
pop
cmp
push
aam
subl
orb
adc
shrb
mov
or
cld
inc
in
pushf
subb
je
test
nop
ret
popa
sub
mov
mov
push
and
scas
or
dec
inc
xor
xor
jns
mov
sahf
dec
setl
add
dec
xchg
rolb
xor
ret
rcl
fidivs
stc
mov
push
adc
inc
fdivrp
push
pop
icebp
dec
fmuls
addr16
pop
xchg
pop
push
or
addb
roll
or
jg
cmp
and
testb
test
cwtl
repz
repz
push
test
cmpsb
mov
mov
adc
nop
fcompl
cs
cmp
cmp
loop
mov
enter
mov
adcl
push
adc
in
out
mov
fwait
test
pushf
call
sub
pop
jle
cmp
fmull
scas
push
es
fidivrs
push
stc
jae
stc
pop
lcall
adc
adc
and
mov
int3
jecxz
push
mov
out
cli
pushf
sahf
sbb
cmp
jmp
xor
dec
xor
scas
out
sar
test
nop
sbb
out
cltd
or
mov
loop
shll
jmp
cmc
mov
xchg
push
scas
mov
adcb
sbb
sbb
pop
cltd
shlb
add
call
enter
jo
sahf
jmp
add
daa
in
push
mov
jae
or
cmp
ret
mov
andl
xor
mov
aas
mov
cs
test
repnz
jb
adc
xor
cld
xchg
push
divb
xchg
dec
mov
push
dec
pop
mov
std
xchg
out
jb
sub
lods
lock
lock
divb
dec
shlb
mov
push
idivb
mov
inc
in
jg
in
inc
mov
push
lods
pop
jno
add
mov
sbb
ret
lds
adc
and
mov
xchg
aaa
ja
outsb
aaa
push
je
jmp
pop
lcall
testb
je
mov
outsl
cmp
lret
into
je
aad
mov
or
jne
icebp
push
push
cs
lds
into
mov
das
push
jge
push
call
into
mov
pop
ss
mov
dec
mov
xchg
jne
mov
jmp
loopne
ret
cmc
sub
pop
sbb
jne
xchg
dec
mov
xor
xor
jb
push
adc
hlt
xchg
fsubr
push
xor
pop
or
inc
sahf
mov
adc
pop
notl
notl
pop
cltd
lahf
xor
ja
ficomps
cli
adcl
and
loope
jge
fs
popa
xchg
lret
movsl
imull
imull
addr16
pop
and
scas
adc
mov
pop
adc
fmul
pop
mov
jg
mov
jae
cli
mov
jae
popf
loopne
mov
dec
adc
xorb
xor
cmp
mov
push
push
lods
dec
push
cs
jae
lock
push
cmpsl
mov
push
js
dec
jae
pop
pop
and
jno
mov
xlat
xor
mov
inc
mov
cld
out
loop
push
ljmp
cmpsb
aas
ret
xor
or
mov
call
imul
push
sbb
loope
arpl
sbb
pop
mov
cmc
inc
mov
xor
sbbl
xor
mov
sahf
mov
sub
push
repz
sbb
fisubrs
adc
inc
dec
rep
stos
and
pushf
test
pop
sub
pushf
mov
mov
out
icebp
sti
adc
lret
or
ja
insl
push
gs
aas
int
jnp
cmp
mov
sahf
mov
mov
push
mov
cwtl
rcll
mov
and
scas
cmp
stc
jle
inc
jnp
jb
push
sub
hlt
rorl
repnz
push
sbb
scas
mov
sub
les
shlb
inc
cmpsb
scas
jle
cmpsb
push
mov
fcmovnbe
stos
mov
test
push
ret
inc
mov
ds
rcrl
mov
sbbb
leave
negb
push
and
daa
inc
repnz
out
sub
mov
add
repz
push
jae
je
cmc
cltd
int
inc
lcall
xchg
jbe
mov
push
add
inc
and
int
xor
std
orl
test
dec
adc
call
imul
inc
test
cld
pop
scas
sub
leave
jb
add
int
daa
ss
imul
into
add
ret
mov
add
cmp
push
mov
push
dec
addr16
jno
add
lcall
test
pop
cmp
cmp
test
imul
std
xor
fldenv
and
jnp
mov
cmp
sub
inc
dec
shl
pushf
mov
rcl
push
mov
fistpll
add
dec
pop
mov
and
sub
jp
addr16
add
sahf
ljmp
xor
mov
xchg
outsb
ss
jae
clc
cmp
add
lock
cmc
or
loope
imul
xchg
pop
test
adc
xchg
ds
shll
add
lods
or
lea
xor
jmp
into
test
pop
inc
dec
pushl
xor
je
mov
int
lock
cmc
hlt
je
cmp
inc
into
imul
out
jnp
or
push
ljmp
ds
clc
std
stos
xor
or
lret
icebp
mov
insb
mov
dec
adc
test
jns
sbb
cmp
inc
sub
jbe
mov
in
sbbl
imul
mov
sbb
pop
fistps
and
xor
ret
pop
pusha
or
ljmp
mov
mov
pop
dec
sub
sarl
mov
mov
cmp
dec
mov
push
repnz
fistl
push
push
inc
mov
jno
sahf
xor
sbbb
cli
outsb
dec
fwait
add
or
jnp
dec
enter
mov
sarb
pop
mov
push
push
xor
jmp
lea
pop
rolb
jmp
xor
movsl
jo
popa
mov
add
dec
push
call
sbb
jmp
sub
and
push
jno
xor
dec
jo
jo
int3
fwait
icebp
push
cmc
ds
mov
mov
xchg
sbb
popa
and
jno
decb
pop
mov
mov
inc
jae
outsl
clc
dec
outsb
push
adc
dec
mov
mov
inc
jnp
popf
stos
je
mulb
dec
xchg
sbb
mov
inc
clc
mov
mov
push
jnp
outsb
pop
lock
jns
mov
mov
jnp
or
mov
push
pop
call
cmc
lea
sbb
rorl
xor
and
push
push
ja
dec
xchg
insb
lret
push
ja
sbb
int
cmp
dec
ficoms
cmpsl
mov
jne
sub
leave
xchg
rorb
mov
aaa
dec
or
adc
lret
xchg
sbb
mov
push
lods
xor
or
mov
sahf
stos
shll
xchg
mov
jle
loopne
lahf
jmp
subl
cmpb
mov
jl
cmp
fidivs
clc
insb
cmc
xchg
lds
or
add
cwtl
mov
lods
and
push
jns
and
jb
stos
ljmp
cli
sub
cmp
cmpb
add
imul
adc
push
jae
je
repz
cmc
ds
jne
je
mov
add
pop
cs
cmp
mov
xor
in
leave
loopne
iret
repz
aad
xchg
jo
mov
test
add
je
xor
cmpl
fsubl
dec
xchg
ja
sbb
mov
sbbb
and
data16
ret
dec
pop
push
adc
adc
and
mov
jmp
xchg
xchg
xchg
mov
xchg
jo
add
mov
and
in
daa
xor
fiadds
adc
repz
mov
imul
push
push
inc
pop
enter
push
fmulp
sub
cli
or
lock
mov
mov
shrb
sub
and
or
jge
mov
int
push
or
shr
jl
sub
mov
xor
mov
mov
clc
mov
pop
fucomp
bnd
lock
repz
outsl
sti
lahf
mov
popf
scas
imul
xchg
cli
scas
lahf
aam
cli
or
jmp
movsl
cwtl
mov
fwait
mov
mov
fdivrp
fadds
ja
fidivrs
jno
in
push
aam
pop
mov
add
and
mov
repnz
inc
inc
into
mov
push
ds
xor
and
dec
cmc
and
stos
stos
push
and
mov
cmp
ret
test
pop
pop
adc
fwait
stos
int
xor
cmp
rol
mov
add
mov
xor
popf
or
ror
xor
jnp
loope
fiaddl
adc
daa
dec
sarl
cld
nop
mov
mov
pop
sahf
mov
mov
inc
jmp
mov
aad
push
xchg
inc
outsl
jnp
dec
mov
pop
pushf
hlt
ficompl
test
add
test
xor
mov
mov
add
outsl
flds
in
lcall
mov
pusha
sub
cltd
and
stos
pop
xchg
xchg
in
mov
test
mov
in
aas
cwtl
shl
mov
sbb
mov
mov
clc
stos
test
in
jg
add
shll
cmp
inc
jb
out
mov
aas
mov
push
orb
mov
ret
jo
ds
aas
sarl
pop
jno
scas
dec
push
mov
mov
scas
mov
movsl
push
jbe
std
rolb
jmp
std
or
lret
inc
mov
or
popa
out
cmp
sbb
aad
daa
xchg
shrl
cmp
jae
adc
lea
je
out
out
push
push
xchg
fsubrs
out
mov
mov
fstps
lret
aam
mov
mov
rorl
rolb
test
mov
push
cmp
dec
outsl
add
jb
xor
dec
popf
imul
mov
fisubrl
mov
insl
and
push
push
pop
stos
xorb
fistps
out
xor
bound
aad
test
inc
cmp
xor
andl
sbb
pop
into
xchg
movsb
jecxz
inc
mov
test
insl
ja
xor
pusha
arpl
int
testb
jg
jae
xor
mov
popf
fbld
out
xchg
or
dec
add
movsb
cmp
scas
pop
sbb
pop
push
sti
push
fwait
repnz
jno
out
clc
addr16
sub
mov
fidivrs
ljmp
jmp
adc
sub
sub
in
adc
xchg
jp
mov
rclb
fadds
add
ficoml
push
mov
and
rorl
xchg
adc
jp
mov
movsb
js
stc
or
imul
loopne
mov
fsubp
pop
das
in
and
pop
popf
out
aas
jnp
adc
lods
cmc
lods
inc
jbe
cmpsb
cld
lods
jbe
pop
mov
add
xchg
sbb
repnz
pop
mov
pop
imul
jge
popf
lock
test
xchg
push
lea
or
mov
pop
mov
pushf
mov
rol
sbb
xchg
adc
adc
push
out
addr16
test
and
push
add
gs
pop
push
and
mov
movsl
scas
insb
repnz
pusha
jecxz
push
pop
stos
stos
xchg
and
add
sbb
gs
dec
xchg
jb
dec
mov
inc
lds
mov
add
sbb
xorl
add
push
repnz
xchg
shl
scas
imul
adc
jmp
xor
lods
inc
iret
mov
lret
lahf
cmp
push
sarl
mov
aaa
cmp
and
cmp
aas
and
mov
adc
mov
and
dec
dec
fmuls
cli
test
test
adc
stos
xor
add
fwait
cmp
cli
lea
cld
sub
mov
push
mov
ja
enter
inc
sti
loopne
lret
push
loop
jo
cli
in
negl
sti
pop
and
xor
movhps
jae
in
int
adc
pop
bound
mov
dec
cmp
inc
fcomps
cmpw
rorl
jb
bnd
shll
enter
jb
stos
sarb
xchg
xor
pop
clc
rcl
sbb
ja
sub
inc
or
mov
pusha
or
dec
xchg
pop
lret
jmp
in
rcl
mov
mov
repnz
mov
jp
inc
push
sub
lock
sub
mov
mov
inc
fmulp
cli
jbe
jle
enter
mov
movsb
push
mov
and
mov
or
nop
xlat
popf
jnp
xor
enter
inc
xor
je
testb
mov
inc
notl
sbb
lds
jb
sub
xchg
shrl
xchg
je
mov
and
jae
or
xor
or
roll
adc
push
aaa
clc
mov
xchg
xchg
das
je
mov
mov
push
pop
out
jmp
sahf
pop
xor
pop
dec
add
std
pop
movsb
dec
jbe
cmp
lds
mov
mov
xor
adc
adc
daa
test
jns
std
mov
pushf
cmpsl
mov
mov
lret
je
sub
jne
sbb
aad
jns
sti
shlb
adc
dec
adc
push
push
inc
fs
enter
mov
int3
pop
shll
adc
jae
mov
xor
inc
jae
inc
mov
adc
sub
in
loopne
repz
insb
xchg
push
sub
pshufw
adc
aas
jb
mov
cld
bound
mov
pop
test
and
fbld
adc
xchg
hlt
dec
jo
loopne
or
loop
addl
adc
sbb
ret
xorl
roll
pop
dec
lods
push
jge
jmp
xlat
out
dec
cwtl
and
or
adc
in
sbb
es
in
xor
daa
lret
xchg
stos
pop
push
rcr
popa
mov
cwtl
mov
mov
call
loopne
pop
push
out
xchg
xor
cmp
cmp
jnp
cmpsb
xchg
xor
adc
stc
mov
xchg
dec
push
into
jo
push
std
ss
mov
or
or
dec
mov
enter
sbb
fs
in
iret
jns
inc
imul
push
xor
xlat
sti
or
pop
loop
sub
pop
xor
mov
in
sbb
movsb
push
cli
and
mov
pop
pushf
fadds
loopne
lret
arpl
dec
icebp
dec
fucomp
popf
imul
mov
inc
xor
push
adc
fwait
aad
add
test
sub
pop
bound
mov
mov
and
push
push
pop
sub
xor
and
movsl
sahf
data16
jae
sti
inc
mov
cmp
xor
inc
and
pop
fwait
lock
hlt
mov
dec
test
mov
mov
sahf
xchg
push
inc
imul
mov
push
dec
enter
std
lahf
push
sub
nop
inc
or
or
xchg
fldt
arpl
push
pop
mov
lret
push
push
adc
movsb
mov
in
adc
dec
lods
dec
lods
fnsave
lret
movsb
pop
out
and
bound
cltd
jmp
ss
stos
jg
scas
pop
aaa
clc
cwtl
out
sbb
jg
push
leave
pop
mov
pushf
jge
mov
xor
mov
adc
icebp
stos
fistl
sub
out
and
into
pusha
jo
outsl
pop
loop
fidivs
xchg
dec
mov
mov
mov
xor
mov
xor
jg
mov
and
push
mov
jle
sarb
xchg
std
icebp
xor
fwait
jb
jb
mov
xor
aaa
xor
cmpsb
inc
movsb
sub
call
mov
sub
loopne
stos
call
cwtl
mov
mov
insl
clc
jmp
cmpsl
dec
jne
and
xlat
mov
xchg
bound
je
ljmp
les
cli
in
mov
and
push
push
mov
shrb
sti
mov
sbb
imul
push
or
mov
mov
jecxz
lds
adc
push
sbb
lahf
sbb
mov
jb
rcr
rcrl
ljmp
out
and
cpuid
and
add
mov
mov
or
cli
nop
pop
scas
or
lcall
dec
fsubl
push
ss
or
cli
mov
fiaddl
sti
into
rolb
arpl
pop
push
pop
scas
and
and
pop
mov
adc
sbb
lea
imul
adc
imul
addr16
cmc
imul
fcoms
sub
leave
xlat
scas
dec
mov
mov
cmp
dec
ret
hlt
sarb
cmp
xor
and
rclb
mov
push
and
test
cs
xchg
icebp
int
loop
adc
sub
xchg
ja
jp
pop
repz
ds
sti
mov
mov
stc
pop
aaa
mov
xor
fsubp
hlt
ljmp
mov
rcl
push
mov
adc
stc
fimull
daa
sarb
in
sbb
ds
add
add
cmp
xorb
jg
repz
out
movsb
or
movsb
aad
insb
decb
stc
aad
jns
sub
clc
mov
aad
lods
out
popl
jb
imul
pop
jg
jmp
loope
add
arpl
subb
jns
fs
test
or
mov
cltd
adc
popf
dec
mov
or
lds
rcll
mov
mul
mov
cltd
lret
mov
mov
push
pop
mov
jnp
out
movsb
adc
movsl
repnz
mov
pop
lods
stos
in
mov
mov
or
pusha
mov
clc
cs
hlt
pop
stos
int3
inc
inc
jmp
mov
aaa
pushf
xchg
movsl
push
push
xor
insl
mov
cmp
repz
outsl
shll
pop
adc
insl
in
sbb
jle
mov
and
and
scas
pop
adc
jmp
cld
stos
push
or
loop
pop
cmp
jl
push
int3
push
addb
push
xchg
ds
leave
ror
lds
pop
xor
jnp
daa
pop
dec
in
jb
lds
xor
cld
lea
xor
adc
cmp
bound
lcall
xchg
imul
lock
iret
stos
shrl
push
mov
lea
mov
mov
test
addl
cmpsb
and
ret
or
int3
je
add
xor
mov
adc
or
jg
fiadds
add
mov
es
or
cmpsb
add
loopne
lahf
jge
cmp
sub
nop
shlb
ror
cmpsb
rcr
sub
pop
sub
pop
or
sbb
add
cli
das
mov
stos
decl
outsl
nop
test
clts
dec
cmpsb
mov
xor
mov
jb
cmc
adc
dec
int
into
shll
mov
ret
mov
repz
leave
add
or
movsl
jp
mov
mov
mov
mov
pop
sub
pop
insl
pop
cwtl
dec
loop
stos
jmp
xor
test
clc
or
cmp
ja
out
fnstsw
clc
mov
pop
jle
lds
mov
out
mov
fmull
loopne
aad
testb
adc
and
std
sub
in
dec
dec
xor
cmp
and
inc
pop
xor
rorb
mov
cmp
int3
adc
jo
test
cld
jge
push
push
xlat
xchg
sbb
popa
add
ss
push
into
es
movsl
xorl
fxtract
xchg
mov
lcall
xor
fstl
push
cmp
les
out
sub
cli
push
ds
pop
inc
mov
add
sub
xchg
fs
pop
test
adc
aas
fcmovnbe
stos
pop
xchg
pop
jmp
dec
std
mov
lods
xchg
movsl
pop
dec
idiv
scas
sbb
mov
inc
aad
shlb
mov
outsb
jo
cmc
in
or
incl
popa
int3
rcrl
mov
shlb
neg
pop
imul
fwait
notb
inc
cmpsl
push
shr
fs
cltd
xor
xor
xchg
sbb
xor
push
faddl
movsl
mov
popa
outsb
pop
dec
inc
stos
popf
sub
repnz
and
adc
out
popa
int
adc
lret
roll
int3
cmp
xor
mov
jmp
jp
loopne
in
mov
jecxz
or
loopne
in
out
repz
imul
mov
orl
in
ss
push
jb
mov
ljmp
push
pushf
jmp
inc
je
jecxz
stos
outsb
jecxz
in
int
lds
pushf
rorb
xchg
aad
and
jo
ss
sarb
inc
cmp
rcrb
xchg
das
lret
jge
add
repz
dec
mov
xchg
ffree
dec
push
cltd
adc
bnd
sbb
lods
shll
out
adcb
outsb
sub
push
jb
jp
dec
pop
jle
jnp
xor
aaa
and
sub
mov
test
cmpsb
dec
jno
xchg
or
mov
imul
xor
jo
test
lcall
loope
hlt
jo
adc
mov
cmc
cmp
fisttpl
inc
je
pop
popl
test
stos
pop
ret
std
sbb
leave
fmuls
mov
xor
mov
fdivrs
shll
xor
imul
mov
das
dec
xor
xchg
push
xchg
cld
popf
lods
pop
sbb
into
enter
int3
mov
sub
mov
push
adc
stos
addr16
and
data16
popf
enter
inc
das
aad
ja
fisubs
pop
aad
arpl
inc
test
push
popa
lock
jp
pusha
test
xchg
test
and
stc
fildl
cmpsb
mov
subl
mov
sahf
stos
nop
or
pop
cmp
cmp
and
xor
xor
xchg
ljmp
or
loop
and
pop
in
sbb
cmp
pop
mov
cmp
or
lods
mov
ljmp
cmp
stc
lcall
sarb
mov
dec
jecxz
sbb
cs
pop
in
jp
xchg
mov
pop
add
xchg
out
xor
pop
xor
adcl
adc
jo
pushf
imul
jle
inc
int3
imul
jl
out
mov
loope
xchg
sahf
mov
call
dec
shrl
or
jae
into
push
xchg
mov
in
dec
shlb
add
movsb
mulb
iret
mov
icebp
jo
xor
jg
rcrb
and
mov
mov
mov
mov
sbb
loopne
dec
pushf
movsl
cmpb
jmp
std
cmp
push
lret
cmc
pusha
mov
leave
push
fldt
negb
cld
push
xor
repnz
or
cwtl
jge
jae
mov
icebp
aad
scas
ret
mov
push
jle
and
cmp
outsl
and
loopne
sbb
pusha
jnp
in
div
mov
mov
cmp
sbb
push
push
push
and
jns
stos
rcll
push
aad
lock
mov
adc
add
push
hlt
jbe
sub
sahf
push
adc
adc
daa
outsb
jp
mov
mov
push
inc
data16
add
scas
push
repnz
jp
les
sub
movsl
call
inc
xor
out
pop
nop
pop
popa
xor
mov
into
pop
stos
jno
insb
mov
mov
mov
movsl
pushf
adc
stc
or
or
and
lcall
pop
shl
pop
sbb
push
cmovo
js
addr16
fistps
sbbb
mov
inc
push
sahf
xor
nop
je
test
mov
mov
inc
je
adc
fnsave
repnz
mov
xchg
xchg
lods
sub
cmpsl
sbb
fsubp
daa
sahf
mov
cmpsb
pop
inc
out
jecxz
xchg
incb
xor
roll
cmc
push
sahf
xchg
xchg
mov
inc
sbb
stc
mov
imul
shlb
stos
aad
inc
mov
xor
loop
decl
and
jg
xchg
pop
int3
sbb
xchg
cmp
movsl
mov
insl
sbb
or
and
es
ss
xor
in
push
xor
dec
xlat
nop
notb
aad
sahf
or
popa
mov
push
xor
pusha
loopne
rcrl
bnd
push
ljmp
inc
call
mov
push
stos
mov
imul
mov
xor
dec
icebp
sbb
je
mov
insl
les
pop
pop
xchg
jnp
in
stos
fucomi
sub
or
mov
sbb
int
dec
push
or
shrb
fisttpll
inc
xchg
lcall
xchg
xor
or
repnz
es
rcll
jae
xlat
rol
ficomps
add
push
loopne
sub
jb
ljmp
out
mov
or
mov
stos
jo
mov
out
cli
mov
sub
loope
adc
fdivs
push
sbb
je
data16
add
andb
adc
xchg
adc
and
xchg
iret
dec
fcoms
mov
push
adc
lret
or
mov
and
jl
iret
mov
push
cltd
xorl
pop
push
inc
call
dec
cmp
cs
addr16
gs
sbb
test
add
push
lds
pop
xor
jbe
sub
jmp
mov
dec
add
or
fildll
mov
dec
ficoms
sub
inc
das
push
cld
push
xor
inc
aad
or
xchg
mov
sbb
aas
push
cld
xchg
repz
or
mov
mov
pop
pop
ss
or
mov
pop
inc
dec
daa
mov
lock
call
arpl
out
nop
es
add
inc
sub
rorb
cli
sahf
inc
pusha
mov
mov
sub
mov
add
imul
push
movsl
fwait
pop
ljmp
mov
xchg
push
adc
mov
push
aaa
popa
or
mov
add
popa
inc
loopne
in
mov
and
cs
mov
inc
xor
and
je
ret
fwait
adc
push
into
int
cli
add
cmp
push
shlb
push
pop
mov
add
and
bound
outsb
mov
repnz
mov
dec
mov
cmp
sahf
mov
mov
adc
repnz
mov
jmp
sbb
pop
ret
je
out
push
adc
push
fstpl
inc
cld
mov
fsubl
jg
fiadds
sbb
mov
leave
mov
sbb
rcll
push
jns
ficompl
xlat
popa
loopne
in
sbb
std
mov
shr
int3
push
adc
inc
aad
mov
fisttps
mov
ret
jno
rclb
pop
push
jne
mov
mov
inc
mov
and
insl
push
inc
movsb
repnz
outsb
stos
inc
out
in
adc
js
push
cmp
lods
fdivs
pop
ja
xor
jl
shrl
xchg
mov
rcrl
xor
test
jno
cwtl
jmp
cmpsb
push
mov
and
pop
leave
repnz
aas
xchg
jle
adc
testb
dec
cli
mov
push
sar
lret
dec
xor
add
loop
and
cmp
pushf
movsl
jnp
mov
fadd
shrb
xchg
outsl
xor
mov
push
adcb
lcall
mov
cmpl
mov
push
outsb
cld
inc
mov
addl
or
mov
cs
cmp
jge
mov
pop
xor
pushf
cld
cs
icebp
inc
mov
arpl
es
xorl
inc
dec
js
xchg
push
mov
xor
icebp
xchg
add
flds
cld
fisubs
mov
idiv
inc
nop
loopne
xor
or
sub
imul
clc
xor
aad
dec
ljmp
mov
cli
pop
push
mov
push
loope
fdivs
in
mov
or
sbbb
aam
mov
jecxz
inc
adc
andl
aaa
scas
lret
stos
shl
xor
icebp
add
dec
ja
daa
fnstsw
and
stos
mov
cmp
inc
cwtl
clc
std
dec
jp
fstl
cmc
repnz
pop
inc
mov
push
sarl
mov
jno
fxch
xor
sub
js
xorb
pusha
push
jecxz
aas
mov
je
dec
xchg
shll
mov
aaa
xchg
jmp
cld
out
cmp
jmp
in
dec
sahf
jbe
push
lds
test
dec
jne
pop
mov
pusha
lock
mov
js
mov
test
daa
pushf
test
push
repz
or
nop
sub
jecxz
pop
test
out
inc
inc
inc
sbb
enter
and
in
mov
dec
mov
mov
sbbb
in
xor
es
mov
cmp
cmp
shl
xchg
cmp
mov
sbb
mov
lds
mov
ret
pop
xchg
mov
cmpsb
andl
pushf
jae
pop
lods
das
jp
bound
fadd
jno
scas
sub
push
outsl
les
dec
aas
dec
jle
sub
pushf
inc
jno
xchg
xor
lret
xor
or
mov
inc
mov
mov
mov
popf
arpl
add
dec
fistpl
call
gs
js
loop
jp
cmp
xor
shll
icebp
or
or
and
mov
pop
mov
xchg
neg
aaa
mov
out
mov
add
or
mov
xor
je
add
cmpsb
mov
push
xor
imul
mov
test
mov
xchg
lock
cli
movsl
icebp
ret
cltd
cmp
adc
mov
scas
shlb
sbbl
sti
cmp
movsb
ljmp
push
test
sbbb
jmp
jns
hlt
pop
outsl
jae
push
jae
movsl
add
pusha
stos
test
push
sbb
out
mov
adc
stc
aam
jo
mov
lock
dec
and
add
ljmp
test
inc
repnz
push
push
ficoml
mov
ds
sahf
test
sbb
mov
enter
cvtpi2ps
push
clc
sbb
enter
inc
push
scas
dec
pop
cmp
inc
pop
mov
leave
repz
jnp
push
sub
std
cmp
adc
mov
add
daa
cmp
sti
cli
mov
fistps
nop
call
cwtl
lret
fldt
mov
cmpsl
mov
mov
shll
scas
stc
xor
and
and
andb
mov
js
mov
and
clc
dec
xlat
and
sahf
les
mov
ljmp
add
push
cld
lret
cmp
lock
pusha
icebp
pop
cld
sub
or
xchg
mov
dec
movsb
in
mov
mov
imul
adc
cli
xchg
clc
xchg
es
push
mov
adc
nop
subb
mov
ret
and
loop
jnp
fwait
jecxz
inc
std
lret
sbb
pop
and
ret
push
xchg
mov
push
mov
add
inc
and
aad
or
rcl
pushf
xor
mov
xchg
lret
stos
dec
scas
cmp
loopne
push
adc
shl
xchg
mov
mov
decb
addl
xchg
arpl
jle
sub
sub
lds
sahf
adc
add
ds
mov
mov
inc
shrl
sub
jmp
pop
mov
lret
dec
and
test
jecxz
jnp,pt
inc
xchg
add
sbb
ret
lods
leave
add
dec
xchg
outsb
cmpsb
and
aaa
in
jg
jmp
and
div
dec
mov
pop
and
xor
dec
jmp
inc
inc
or
mov
cmp
mov
stos
mov
inc
mov
xchg
cmc
lds
sbb
dec
or
insl
or
add
sbb
cwtl
insl
scas
fnsave
add
pop
add
and
test
mov
jb
cmc
ss
cwtl
mov
pop
sub
mov
mov
cmp
pushf
dec
adc
push
pop
cmp
mov
push
mov
aas
lea
mov
sbb
nop
mov
pushf
pop
cmp
dec
out
push
add
xor
pop
mov
out
arpl
dec
add
cmp
lcall
inc
or
loope
outsl
mov
push
jmp
pop
idivl
xchg
cmpsl
das
pop
fadds
xchg
sar
jno
mov
mov
jno
xor
sbb
int
xchg
cmp
cmp
out
rclb
mov
std
sarl
adc
cmp
clc
xor
and
mov
sti
ficoml
add
mov
push
lods
xchg
lret
cmp
push
scas
push
cli
cmpl
ret
clc
movb
xlat
aas
xchg
xor
mov
jmp
adc
push
pop
dec
pshufw
mov
in
push
push
cmp
mov
arpl
out
fiaddl
ja
xor
inc
ljmp
arpl
inc
mov
fidivrs
cmp
in
sub
sti
or
adc
shll
cmp
cs
nop
pop
xor
or
inc
xchg
js
add
outsb
mov
cmpsb
xor
mov
xchg
and
out
ljmp
aaa
cli
sub
mov
sbb
gs
mov
icebp
fmull
dec
sarl
lock
jbe
mov
xor
xchg
or
lret
add
sbb
repnz
add
daa
or
cmc
je
pop
aaa
in
out
mov
mov
dec
fwait
dec
mov
adc
insl
mov
ds
xchg
dec
repz
stos
add
lods
loop
daa
out
ds
orl
sbb
mov
ret
sub
pop
mov
out
mov
push
std
lods
push
xchg
push
pop
stc
jae
call
js
and
jne
dec
sbb
loop
mov
pop
adc
sub
ret
cmpsb
add
inc
outsb
jns
loopne
mov
lcall
mov
rcrl
sub
jae
fbstp
push
lock
loop
rcl
mov
mov
mov
mov
push
icebp
xor
je
or
xor
cmpsb
rclb
add
je
sbb
fisubrl
mov
fadds
cld
add
int
push
mov
mov
ficoms
or
cli
or
into
adcb
arpl
fwait
in
mov
mov
cmp
cwtl
ficompl
or
fsubrs
pop
inc
mov
cmp
loopne
push
shrl
je
sbb
std
pop
pop
test
adc
sahf
dec
in
push
jecxz
fnsave
mov
cwtl
movsb
push
ror
not
adc
jge
xchg
popa
jle
mov
lock
pop
sub
movsb
jge
pop
decl
adc
sub
sub
nop
pop
or
mov
daa
das
stc
fbstp
lret
xchg
pop
push
xchg
lcall
repnz
jge
adc
jno
cs
sub
and
push
cmpsb
out
inc
mov
test
jp
out
cs
xchg
in
cmp
push
stos
add
push
jns
movsb
lods
push
fsubrl
mov
jmp
xchg
iret
repnz
push
dec
jb
icebp
out
xor
mov
pop
adc
outsb
aas
lcall
jno
movl
xchg
fwait
dec
imul
cmp
nop
std
movl
iret
sar
cld
lcall
jno
or
shll
movsb
cs
xor
stc
pusha
ror
js
ss
leave
movsl
mov
jb
fldcw
call
lds
cli
jmp
inc
data16
in
arpl
roll
clc
stos
pushf
fbstp
test
jns
stos
mov
cli
icebp
xor
inc
lods
in
mov
mov
adc
cmp
fmuls
clc
cli
jmp
mov
insl
sahf
adc
ret
xchg
pop
stos
test
inc
mov
js
adc
xchg
adc
dec
cmp
push
mov
xorps
lock
mov
fistps
decl
xor
mov
es
ds
lea
jno
test
xchg
sbb
lods
addr16
dec
insb
stc
inc
rcr
addr16
lds
pop
jmp
in
fsubrp
test
fwait
orl
ljmp
clc
pop
pop
pop
xor
mov
mov
cmp
int
jo
pop
xchg
dec
xchg
sub
mov
sbb
insl
fsubr
movsb
int3
inc
dec
or
lret
aaa
movsl
jmp
lcall
mov
cltd
xchg
jno
mov
sahf
imul
xor
cmp
aas
bound
adc
rol
xchg
jp
out
ret
push
xor
negb
sub
test
push
loopne
or
lock
addb
add
xor
adc
or
sub
mov
mov
outsb
jne
and
shl
xor
jb
jo
push
mov
addr16
sbb
pushf
ja
fisubrs
repnz
stos
cwtl
cld
cmpsb
cltd
insl
lret
clc
jnp
lds
std
idiv
sbb
icebp
and
adc
cmp
lcall
pop
inc
aaa
xor
mov
mulb
test
fnstsw
iret
push
push
sbb
mov
mov
cmp
push
outsl
daa
xor
mov
and
test
add
add
cmpl
push
and
cmp
ss
pop
fsubrp
in
mov
sub
mov
cli
add
jp
insl
dec
push
xorb
mov
mov
sub
or
mov
jo
cmp
shrb
push
mov
sbb
das
sbb
mov
sbb
pop
adc
pop
inc
sti
add
adc
adc
mov
inc
testb
adc
pushf
sub
sbb
xlat
xor
xchg
sti
inc
jbe
test
mov
outsb
sbb
mov
dec
push
xor
xor
adc
jo
xchg
into
push
rolb
mov
dec
lea
push
mov
xor
xchg
cmp
rorb
lock
mov
mov
mov
add
add
ret
jecxz
pop
or
xor
push
jae
mov
inc
das
out
pop
pushf
loop
hlt
adc
sbb
dec
sahf
pop
jle
in
mov
clc
nop
sub
mov
divb
ficompl
lods
repz
xlat
rorb
nop
mov
data16
fsts
cmp
movsl
pusha
push
pop
ds
push
mov
mov
sahf
lcall
lret
xor
sub
shlb
cmpb
repz
icebp
sbb
push
push
outsb
shl
mov
adc
imul
sbbl
lock
shl
out
mov
lods
push
aad
cmp
loope
dec
or
push
xchg
imul
hlt
sub
sbb
dec
icebp
or
pop
cli
out
add
xlat
mov
mov
xchg
jne
xchg
aad
stos
push
push
dec
nop
pop
mov
dec
rcrb
jne
mov
push
xchg
fadds
mov
xor
aas
jmp
mov
sbb
or
ja
push
fidivs
jb
push
cltd
add
repnz
mov
int
es
or
pop
push
mov
test
add
jbe
lret
dec
repnz
mov
inc
pop
adc
sbbb
jl
daa
dec
in
into
aas
inc
xor
es
dec
adc
push
pop
mov
pushf
stos
fadd
xchg
stc
mov
push
mov
mov
cmp
pop
sbb
sbbb
scas
pop
std
das
mov
sbb
mov
jno
rcrl
push
cmp
jl
sub
adc
popa
or
stc
orl
hlt
insl
xchg
clc
sbb
inc
cltd
lds
push
mov
dec
mov
mov
xor
dec
mov
pusha
scas
pop
sahf
rolb
mov
enter
inc
xor
sub
and
add
hlt
push
add
mov
stos
lahf
xor
mov
stc
mov
imul
enter
sbb
out
xchg
ds
inc
cmp
cmpsb
pop
pop
jb
sub
mov
mov
mov
subl
jno
mov
mov
sub
lcall
push
mov
loope
arpl
xor
or
pop
shr
cltd
gs
scas
pop
dec
jmp
inc
xchg
or
imul
jecxz
loope
pusha
mov
or
ss
or
inc
adc
das
leavew
xor
mov
loopne
xchg
mov
in
mov
jl
aas
ds
push
or
mov
push
cmp
bound
and
pushf
xor
subl
jb
hlt
int
je
loop
mov
insb
jge
or
pop
push
lds
pop
in
pop
lods
pop
jb
aas
scas
aam
fisttpl
xchg
ret
les
jne
test
push
mov
stos
mov
pop
sti
adc
xor
mov
out
arpl
sub
jno
in
inc
cli
adc
aad
mov
cmp
push
pop
xorl
mov
mov
scas
fs
shl
xlat
jb
jno
stos
jae
and
sti
je
addr16
out
inc
cs
int
repz
lret
add
sub
xchg
mov
inc
iret
dec
cmp
mov
push
icebp
xor
adc
imul
push
mov
dec
inc
or
dec
pusha
cmpsb
dec
sbb
test
cli
mov
out
pushf
xor
mov
addr16
stc
mov
inc
lock
gs
mov
mov
xor
xchg
lock
repnz
std
jb
adc
add
test
movsl
inc
xor
rol
mov
pusha
frstor
sbb
int
sub
dec
jge
sti
int3
out
cmp
pusha
ret
dec
fmuls
push
add
cmp
in
mov
test
imul
inc
rorb
cld
bound
cmp
and
movswl
dec
adc
mov
or
pop
sbb
call
lods
xchg
xchg
ja
stos
cmc
push
mov
inc
mov
add
std
loope
movsl
push
xor
int
pop
push
pop
stc
popl
adc
sub
mov
and
jbe
sbb
push
jl
inc
lcall
mov
jecxz
mov
into
add
popa
add
jl
lods
or
inc
int
push
xor
jmp
xchg
lea
movsb
pop
sbb
xchg
inc
jbe
lea
das
jge
cmp
push
lock
andl
xor
dec
sarb
mov
xor
imul
in
jae
dec
icebp
int
arpl
mov
adc
inc
aam
mov
sub
outsl
adc
pop
sub
dec
test
adc
cmp
clc
sbb
and
mov
cmp
xor
push
call
shrl
mov
jmp
xor
rcl
repz
mov
les
push
mov
add
sti
shll
adc
mov
fmuls
rcrl
xor
testl
out
aas
sahf
movsb
push
push
mov
ja
data16
mov
add
std
pop
pop
psubusb
sub
cld
out
and
or
xchg
mov
jne
mov
imul
jle
mov
std
arpl
push
jae
ret
cmp
hlt
out
sti
lea
xchg
pop
cmp
push
push
jmp
pop
or
adc
fistpl
adc
ljmp
mov
mov
mov
out
mov
in
lret
movsl
and
or
push
ror
pop
loopne
inc
rorl
or
loop
push
je
inc
sahf
fisttps
bound
pop
scas
stc
and
mov
mov
and
cmpsb
dec
daa
pop
mov
incl
sub
enter
xchg
cs
and
sbb
shlb
flds
std
dec
out
mov
xchg
mov
clc
mov
mov
or
add
cmpsb
pop
pop
int
repz
xchg
dec
ss
mov
sbb
mov
push
je
mull
fcom
xchg
aaa
sbb
push
push
or
add
cmp
ljmp
mov
mov
dec
jb
mov
xor
mov
sub
ror
sti
nop
je
mov
jno
push
inc
ds
jle
xchg
mov
pop
sub
into
xchg
popa
xchg
scas
nop
decb
sbb
push
repnz
mov
loope
test
sub
fs
lret
int
dec
sub
ds
ret
into
jae
mov
and
cmpsl
jb
leave
add
rol
mov
fdivr
and
repnz
sahf
push
outsl
hlt
cmp
ds
andl
xchg
and
loop
xchg
imul
out
movsb
pop
add
scas
and
ljmp
fwait
sbb
repnz
out
loopne
stos
xchg
aas
fcom
push
sub
mov
add
repz
mov
lsl
mov
xor
xor
mov
test
imul
movsl
and
adc
mov
insl
nop
cmc
mov
inc
arpl
shlb
shrb
sub
mov
sbb
rcll
mov
sbb
cs
sbb
stos
pop
cli
jne
into
xor
mov
push
dec
loop
std
test
dec
mov
add
cwtl
shll
and
inc
inc
jl
int
xchg
movsl
rolb
out
xor
lock
mov
dec
fisttps
pop
and
jmp
jbe
pop
mov
push
pop
sub
xchg
ret
bsr
adc
jne
jae
push
jmp
inc
inc
fldt
mov
or
cli
mov
pop
mov
insl
fnsave
add
adc
test
orl
jmp
ja
mov
jecxz
sbb
jae
and
push
inc
and
mov
shrl
sahf
fs
inc
nop
add
pop
ja
pop
ja
fisubs
repz
or
jnp
cld
cs
out
movsl
das
mov
int
inc
fldl
or
add
enter
push
out
sbb
jmp
mov
pop
push
icebp
pop
fmull
int3
test
push
loop
dec
mov
cmp
test
push
icebp
mov
mov
push
mov
and
sbbb
sbb
xchg
or
cld
jle
cmp
shl
repz
imul
mov
sbb
mov
mov
test
sbbb
lahf
add
pop
push
push
xchg
outsl
loop
adc
sarb
adc
mov
loop
sub
fimuls
mov
and
out
sbb
and
pusha
adc
int
add
fdivrl
pushf
adc
sub
sub
xchg
sub
mov
es
sub
cmp
rcrb
scas
fistpl
lret
stos
mov
push
sbb
mov
mulb
loopne
js
pavgb
mov
and
push
adc
shll
and
sbb
xor
jmp
adc
arpl
jae
inc
cmp
push
mov
mov
mov
xchg
jbe
ljmp
mov
fdivs
js
dec
repz
push
dec
inc
test
pop
popf
dec
mov
roll
call
add
dec
jae
mov
mov
mov
jb
addr16
xchg
das
adc
inc
loope
add
xchg
jg
incl
adc
lea
bsf
push
fcompl
or
sub
xchg
mov
cld
dec
inc
stos
bound
pushf
insb
lret
xor
and
xor
xchg
stos
add
outsl
ljmp
xchg
cmp
sbb
jbe
lods
inc
and
jle
hlt
imul
outsl
and
jmp
pop
inc
fwait
adc
fisubs
ds
xor
xchg
fwait
aas
mov
out
das
mov
sub
mov
outsl
xchg
leave
pop
sub
movsb
sub
add
shll
fisubs
mov
xor
rorl
movsb
in
mov
xor
icebp
and
xchg
cli
sarl
pop
shr
adc
faddl
adc
icebp
pop
mov
cmp
jp
jnp
adc
bnd
stos
xor
adc
or
and
xchg
push
int
hlt
add
xor
rcrl
jge
pop
pop
int
jne
add
xor
mov
sbb
or
lea
jge
leave
insl
loope
andb
daa
andl
sahf
loop
xchg
repz
fs
lahf
test
jecxz
pusha
cmc
inc
movsl
cmc
js
push
cmp
mov
push
stos
jb
cwtl
sti
push
and
dec
arpl
mov
push
ret
xchg
and
popf
mov
int3
mov
sub
frstor
push
dec
xchg
das
adc
outsl
xchg
mov
mov
xor
dec
in
mov
arpl
adc
mov
or
push
jb
ret
cltd
stos
and
and
inc
cmpsl
mov
pop
mov
popf
jp
out
mov
dec
push
add
mov
test
nop
xchg
mov
mov
bound
mov
cwtl
sbb
test
push
sti
bound
inc
xchg
pop
cwtl
jg
inc
shrl
hlt
insl
xchg
orb
pop
push
mov
mov
and
adc
loop
mov
sub
adc
mov
and
mov
repnz
cwtl
sbb
shll
jno
icebp
mov
out
cltd
shll
jno
dec
mov
push
push
dec
xchg
movsb
cs
movsb
repnz
jbe
jno
fnstsw
jo
arpl
ljmp
sbb
shl
fsts
pop
movsl
push
aas
mov
sub
add
cmp
push
or
addl
cs
cmp
push
stos
mov
mov
sahf
mov
js
mov
out
sub
or
or
xor
ret
add
xor
lds
cmc
sub
sbbl
adc
jmp
das
mov
inc
inc
jno
rcrb
jle
icebp
jno
pop
into
dec
jo
icebp
pop
test
cwtl
cld
inc
xor
fistpl
xchg
loop
in
mov
push
dec
and
jp
ljmp
dec
shrb
rolb
imul
push
xor
repz
jmp
jge
xorb
mov
inc
sarl
divb
jae
push
pop
or
sahf
mov
push
cltd
shrl
aas
out
push
lret
cld
push
js
ret
sti
add
repz
cs
adcb
aam
xchg
lahf
mov
jp
in
inc
ljmp
dec
pushf
xor
pop
dec
cld
or
adc
xor
jb
in
inc
mov
lcall
mov
or
push
pop
xchg
mov
push
rol
cmpsb
pop
pop
lock
fimull
lods
or
lock
xor
inc
pop
ret
push
inc
sub
and
cwtl
ljmp
stos
sbb
test
pop
cmpsb
sub
mov
mov
mov
daa
mov
mov
cmc
fnstenv
jmp
das
sub
xor
and
adc
inc
push
sbb
cmp
jae
ss
mov
jb
lods
push
test
adc
loop
movsb
mov
cli
jb
je
sbb
lret
pop
jnp
pop
sub
shr
and
pop
repz
lret
push
cs
mov
roll
add
jg
jg
shlb
add
lock
add
aad
incl
add
dec
arpl
xor
jge
pop
jno
int
mov
inc
jnp
addr16
mov
lods
jmp
out
mov
fldln2
or
mov
int
jno
cwtl
xor
jno
cmp
pop
xor
loop
subl
inc
sbb
pop
sarb
xor
leave
loopne
insl
and
and
loopne
adc
loopne
addr16
in
jmp
dec
sbb
mov
or
mov
inc
mov
stos
mov
and
mov
lahf
sbb
cmp
adc
mov
cli
call
mov
pop
adc
add
mov
jns
mov
fisubs
mov
xchg
lock
mov
jnp
repnz
insl
mov
xor
enter
xchg
jnp
into
and
pop
mov
adc
mov
xchg
jge
jnp
icebp
rorl
and
fdiv
adc
jge
or
lea
imul
in
test
sbb
ds
push
sub
pop
orl
icebp
or
in
pushf
int
jb
push
cmovl
mov
fdivl
daa
cs
repz
mov
mov
icebp
xchg
test
inc
inc
or
out
shll
and
popa
push
imul
pop
dec
sub
shrb
jge
jae
or
fmul
fisttpll
rorl
ds
xchg
and
xchg
dec
fsubp
leave
scas
imul
inc
enter
in
xor
daa
das
loopne
xor
jbe
in
mov
pop
sbb
push
lcall
aam
arpl
add
adc
dec
jbe
out
out
aaa
sub
dec
mov
jp
aaa
mov
ss
cmc
mov
add
icebp
xor
outsl
jb
lret
mov
sbb
mov
daa
das
mov
pop
push
or
lods
inc
inc
xchg
arpl
mov
sub
mov
mov
adc
xor
outsb
pop
adc
sahf
adc
or
adc
mov
sahf
jbe
or
les
pop
mov
xchg
loope
mov
push
mov
test
push
scas
fs
mov
mov
movsb
lds
mov
mov
adc
lods
cmp
loopne
inc
stos
dec
loop
mov
sub
adc
pushf
push
enter
mov
flds
lcall
loop
int
mov
icebp
outsb
out
lret
mov
cmc
mov
mov
xchg
and
sti
ds
mov
xchg
pop
jae
aam
mov
jecxz
inc
jbe
cli
loopne
das
mov
ds
mov
jbe
and
xchg
pop
fldenv
mov
adc
push
fmuls
int
jp
push
cmp
popf
daa
add
inc
fs
andl
cltd
jg
add
cli
push
adc
mov
mov
and
inc
inc
sub
mov
mov
cmp
test
mov
fdivrp
out
lcall
or
push
and
inc
jns
mov
pusha
ds
add
stos
in
and
mov
stos
adc
jo
stc
jl
out
cmp
and
jbe
xchg
adc
jo
sahf
call
push
cmc
ja
mov
repnz
mov
nop
loope
mov
mov
jp
jg
sub
cmovno
lods
das
lahf
pop
iret
add
repz
hlt
stos
xchg
test
dec
mov
inc
mov
ds
jbe
filds
adc
repnz
mov
inc
test
cld
jl
inc
or
pop
jge
idivb
cmpl
jge
jge
mov
sub
mov
stc
xchg
loopne
add
push
mov
jl
test
push
fcoms
outsl
mov
sbb
int
clc
popa
xor
in
sahf
outsl
push
call
inc
add
fsubrs
push
inc
in
xor
shl
push
xor
cwtl
and
aam
pop
dec
call
call
and
nop
adc
ljmp
ja
push
or
sti
inc
and
pusha
sbb
mov
lcall
push
push
andl
add
nop
scas
inc
sti
add
add
movsb
adc
xlat
flds
or
push
sbb
mov
pop
add
mov
dec
mov
and
ss
pop
arpl
dec
lds
lock
pop
scas
outsl
cmp
test
loop
in
xor
and
xor
iret
ret
cld
mov
xchg
psubd
xor
mov
add
jne
ret
xchg
fisubrs
or
jnp
dec
ljmp
out
and
aam
xor
mov
inc
cs
fistps
cmc
jnp
jecxz
sbb
mov
leave
stc
dec
test
jl
xchg
lock
lods
sti
stc
lock
pop
aam
stc
inc
adc
stc
push
inc
shrl
jp
mov
xor
jg
pop
shll
sarl
popa
insl
sbb
stos
outsb
ret
dec
aaa
pop
icebp
daa
les
or
mov
cmp
repnz
jecxz
faddp
jnp
rclb
icebp
lahf
cmp
shlb
stos
lcall
lock
xor
imul
push
jmp
xor
icebp
repz
and
mov
mov
mov
dec
aas
push
xchg
lret
xor
jle
insl
pop
inc
mov
call
sbb
pop
mov
hlt
xor
jg
test
in
push
jbe
jnp
mov
dec
xor
cmp
mov
aas
xor
clc
nop
ljmp
sbb
pop
xchg
inc
sub
sarl
inc
sbb
lods
enter
testb
xchg
shll
cmpsb
test
stos
arpl
xchg
push
jecxz
add
or
mov
lret
in
repz
in
mov
mov
inc
das
jmp
mov
add
stc
mov
or
add
daa
repnz
jmp
jo
sar
inc
pusha
scas
mov
xor
mov
jbe
pop
xchg
adc
ljmp
fstps
pusha
jnp
outsb
xor
fimuls
pop
jno
pop
rcl
inc
sbb
push
iret
mov
inc
mov
iret
lods
test
enter
pop
jae
jbe
mov
scas
test
inc
push
mov
mov
into
cli
mov
dec
in
je
je
dec
lock
sub
scas
std
inc
xor
ret
lret
lock
add
add
daa
fcompl
addr16
cmpsb
pop
mov
int3
in
scas
fbstp
jb
jb
sbb
test
push
lods
aas
aaa
repnz
add
hlt
das
mov
sub
addb
int3
stos
int3
dec
xchg
jp
mov
or
push
cltd
or
push
shlb
es
loopne
jb
xor
mov
addl
adc
add
cmp
dec
push
aam
mov
dec
mov
into
push
sbb
insl
into
mov
push
sub
push
js
adc
loopne
loope
pop
pusha
loope
icebp
fnstsw
add
mov
out
mov
push
dec
push
cmp
nop
and
push
aas
ret
movsb
lea
and
mov
xchg
or
push
push
cmp
in
cmp
test
cmpsb
xor
mov
push
lcall
inc
and
lahf
ficoml
adc
add
or
clc
hlt
inc
dec
xor
cld
xor
pop
and
inc
ror
dec
insl
shl
sub
adc
aas
sub
xorb
cmpl
insl
cmc
lock
dec
adc
inc
mov
xrelease
das
jmp
cmp
sbb
add
loope
jb
shrb
outsl
or
ljmp
sub
ljmp
mov
idiv
xchg
ds
xor
cmp
mov
jle
scas
jge
das
mov
sub
pop
fbld
sub
xchg
and
add
dec
shll
mov
addr16
pop
ret
aaa
mov
jge
pop
cmp
sbb
push
in
mov
loope
add
aas
jo
sub
jecxz
fists
dec
xor
and
and
ds
loop
mov
mov
mov
push
sbb
cmp
dec
add
sbb
jle
int3
dec
add
jecxz
add
dec
push
sub
movsb
mov
mov
pop
icebp
mov
push
adc
mov
mov
inc
add
enter
std
mov
adc
mov
push
pop
lea
jp
movsb
jo
mov
jns
mov
pop
hlt
xor
inc
mov
push
mov
out
push
rorl
sbb
and
loopne
mov
jae
dec
jge
popf
adc
jnp
in
ficoms
shll
dec
adc
call
jnp
mov
into
mov
inc
dec
mov
or
push
cmp
xchg
adc
cs
jb
cmp
movsb
stos
push
hlt
aaa
pop
clc
pusha
pop
xchg
xchg
imul
std
and
push
cmc
jbe
inc
add
nop
aas
vpxor
es
jmp
sbb
add
repnz
adc
jmp
sbbb
mov
imul
mov
xor
jbe
or
das
and
push
mov
inc
fidivs
inc
push
rcr
jle
dec
mov
movsl
inc
ds
xor
dec
loope
jo
imul
push
add
adc
push
stc
clc
inc
ja
stos
inc
jge
pop
mov
dec
mov
mov
cmp
adc
dec
and
icebp
shrb
dec
mov
dec
and
sub
add
cwtl
push
xchg
mov
into
push
push
aad
out
test
cmp
dec
fidivs
xchg
mov
pop
movsb
pop
testb
movsb
subl
dec
ss
aaa
scas
mov
mov
mov
cld
mov
imul
insl
inc
sbb
movsb
fbld
push
movsl
negb
adc
sub
fstpl
rcl
and
and
adc
notl
lods
adc
xchg
and
lcall
xchg
xor
sbb
fcoml
lea
imull
sahf
jge
inc
data16
cmpsb
mov
cmp
sti
pop
mulb
adc
stc
movsb
lods
sub
in
fidivrl
mov
jns
inc
cmc
and
stos
adcl
jle
cmpb
lcall
xor
icebp
stos
test
loopne
js
cs
sbb
sub
jns
dec
jbe
ret
movsb
orb
mov
mov
mov
cmc
inc
icebp
js
sbb
pop
mov
push
mov
add
fcmovnbe
pop
or
pop
arpl
jbe
xchg
xchg
dec
inc
and
cmc
and
cmc
and
jae
mov
arpl
mov
push
add
enter
push
lret
andb
movsl
and
dec
pusha
jae
popf
jecxz
push
lds
xlat
cmp
sbb
xor
ljmp
rep
sub
mov
inc
add
dec
shlb
out
inc
insl
pop
cmp
xchg
mov
lods
xlat
loopne
add
jns
mov
icebp
loop
mov
icebp
popa
xor
sbbl
xor
jle
lahf
push
or
mov
mov
or
lock
pop
addr16
adcl
mov
mov
negl
jbe
mov
bound
mov
adc
xor
xchg
adc
xchg
movsb
sarb
insl
jae
mov
sub
adc
jno
cmp
mov
jb
sbbl
add
sbbb
test
jmp
xchg
test
out
lock
jbe
cmpl
mov
sbb
sbb
push
loope
cmp
lds
xor
or
push
mov
adc
jae
pop
pop
xchg
xor
ret
mov
idiv
pop
jg
push
pop
xchg
push
scas
cmc
rorb
xchg
idivl
icebp
dec
dec
xor
push
and
pop
or
mov
leave
adc
js
mov
push
xor
sbbb
mov
jp
in
sub
lods
mov
xor
test
loope
inc
dec
mov
daa
test
and
stc
jae
icebp
stos
fwait
mov
bound
loop
mov
mov
push
adc
std
mov
push
cwtl
sub
movsb
nop
push
cmp
adc
stos
xor
mov
dec
mov
inc
pop
out
lret
mov
lea
into
xchg
mov
jbe
cmpsl
shll
push
push
xor
pop
stc
cmp
test
mov
push
imul
mov
addr16
pop
cmp
bound
push
jb
rcl
jmp
cmp
xchg
stos
mov
test
in
dec
xor
icebp
sub
jecxz
cli
adc
fisubs
mov
xchg
and
test
mov
rcrl
inc
test
punpckhwd
negb
outsl
cmp
sub
cs
push
sahf
xchg
das
rorl
rcll
mov
or
lods
sub
dec
or
add
mov
xchg
xchg
adc
shlb
ret
add
mov
inc
bound
mov
les
jb
jb
mov
cltd
jecxz
lods
jbe
cltd
loopne
adc
add
xchg
popf
lcall
and
add
push
in
ret
les
xor
mov
push
mov
ds
roll
lfs
insb
ds
int3
imul
mull
icebp
push
test
push
xchg
ret
add
out
repz
mov
jns
fldt
push
in
or
and
push
jb
jecxz
insb
dec
mov
xor
xchg
mov
inc
jecxz
add
cld
push
mov
ds
jle
data16
sbb
dec
cmp
push
testb
loop
int
and
icebp
mov
mov
and
ljmp
lcall
pushf
leave
xchg
or
mov
mov
sbb
xor
fisubl
arpl
or
mov
iret
mov
dec
jne
scas
ss
cli
add
movsb
jno
sub
notb
sbb
pop
je
and
cmpsl
push
shlb
popf
or
push
inc
out
jp
pop
adc
jnp
add
add
pop
stos
cwtl
leave
push
inc
and
mov
jne
push
psadbw
pop
loopne
push
sbb
enter
cmp
int
dec
or
fbstp
outsl
adc
mov
bound
inc
aas
push
divb
jae
jecxz
inc
sub
add
out
pop
cmp
adc
fucomi
mov
and
or
jp
ret
push
dec
movsl
and
xor
pop
mov
out
sub
outsl
out
das
adc
cmp
pop
stos
in
scas
dec
repz
mov
mov
push
pop
test
aas
cmp
scas
js
lcall
push
xor
sahf
roll
repnz
test
bswap
shlb
ret
insb
imul
shrl
adc
ret
das
or
adc
nop
lcall
sbb
stos
fcmovbe
loopne
enter
jl
and
popf
and
in
jbe
xchg
addr16
mov
mov
xchg
inc
jb
cli
dec
lods
sub
in
xor
fidivl
addr16
fisubs
leave
sub
pop
test
jb
outsl
push
movsb
nop
pop
jp
inc
popa
xor
mov
hlt
push
lods
cmp
dec
lret
jb
xor
cmpsb
cmp
xor
test
pop
aas
lret
mov
xor
scas
inc
or
mov
jmp
adc
sub
leave
lock
stos
xor
sahf
mov
sbb
jle
out
sub
scas
pop
std
leave
ret
andl
dec
mov
xchg
into
cmp
dec
icebp
or
mov
lcall
shll
jmp
dec
and
stc
add
lret
hlt
mov
xchg
sbb
jae
not
xchg
sbb
je
pushf
adc
ret
aaa
mov
loope
adc
test
ret
pushl
xor
stc
test
and
push
xchg
mov
int
je
mov
inc
test
iret
lret
int
pop
in
repnz
ss
inc
cmpsb
jae
sbb
pop
xor
mov
cmp
pop
mov
add
push
xchg
notl
and
inc
mov
adc
jmp
rorl
cmp
ja
out
pop
call
jl
fistpll
inc
movsb
sub
fwait
js
sbb
mov
data16
outsl
pop
fnstenv
cli
mov
mov
js
mov
mov
push
sub
or
mov
addr16
movsb
or
mov
loopne
inc
fidivs
inc
jne
movsl
in
movsb
aad
and
mov
jo
pop
loopne
lods
sbb
and
dec
mov
jge
xchg
sub
subl
sarl
adc
cld
mov
in
stos
or
inc
mov
pop
sbb
xchg
mov
jg
sbb
insl
jae
sub
aad
loopne
mov
scas
cli
popf
iret
add
in
sub
js
ljmp
popa
add
subb
pop
jno
mov
xor
adc
ret
mov
icebp
loopne
jmp
sbb
inc
push
sbb
lea
idivb
fs
push
jmp
adc
mov
xor
test
test
int
idivb
xor
lret
dec
pop
inc
or
jae
mov
andb
fisttpl
movsb
xor
fdivr
mov
xor
movsb
xor
pushf
add
stos
or
dec
add
mov
dec
push
js
cmp
divl
insl
and
add
xor
sbb
fwait
or
loop
daa
or
xor
xor
sahf
dec
pop
adc
stos
aad
aad
add
inc
mov
adc
and
xchg
clc
jnp
cltd
pop
dec
push
push
mov
pop
mov
mov
or
mov
sarl
imul
pop
mov
or
sub
xchg
addr16
jmp
inc
je
dec
fdivl
pop
movsb
jge
xor
ds
inc
push
jge
aad
dec
jl
jmp
movsb
and
dec
adc
pop
mov
cmpsb
mov
mov
mov
add
push
xor
jb
pop
add
cmpsb
pop
and
push
mov
xor
push
cmpsl
mov
jg
jmp
shlb
je
ret
shll
push
movsb
int
cli
pop
fcomi
aas
adc
rolb
aad
inc
mov
sahf
movsl
in
lahf
cmc
and
inc
xor
push
je
shll
xchg
inc
popf
and
mov
xchg
mov
mov
cmp
dec
cmp
or
pop
cmp
mov
xor
pop
out
ficoml
xchg
jle
jo
repz
mov
sub
and
or
sbb
subb
mov
cli
cmp
push
orl
int3
imul
inc
dec
arpl
fsubr
sbb
push
jge
add
sar
and
or
mov
movsb
cmpsl
into
scas
jmp
jne
xor
movsb
insl
push
aaa
inc
mov
je
icebp
je,pt
mov
xchg
setp
fisttps
adc
mov
xor
loop
xor
fidivs
xor
daa
loopne
jb
std
in
repz
push
dec
inc
sub
pop
push
xchg
push
ret
sbb
ja
jp
push
inc
imul
push
sbb
mov
unpckhps
icebp
xchg
cmpsl
or
movsb
lods
add
rclb
mov
std
jle
mov
loope
in
mov
ds
movsb
dec
adc
mov
popf
testb
decl
cmpsl
mov
mov
aaa
cmpl
cli
js
push
jmp
push
pushf
push
aad
fmuls
shrl
sbb
sahf
and
in
stos
ret
lahf
xchg
movsb
insb
ja
push
jbe
add
enter
push
inc
rcl
dec
scas
dec
mov
add
out
rcl
cs
mov
jnp
or
popf
mov
inc
xor
add
stc
in
inc
cwtl
pusha
jl
fisttpll
and
in
lods
pop
pusha
jg
orb
jno
and
adc
imul
push
repz
sbb
out
cmpsl
fs
rorb
mov
fwait
ret
xchg
lods
push
jae
mov
push
xchg
sub
rolb
sub
aaa
jmp
mov
sbb
or
push
adc
filds
repnz
outsb
shlb
mov
mov
fisubrl
and
inc
addr16
xchg
ds
adc
pop
push
mov
sbb
sub
pand
lods
cmp
hlt
xchg
gs
orl
outsb
neg
fst
xchg
loop
insl
repz
test
mov
je
sbb
mov
jbe
adc
xchg
fsts
jo
jge
pop
movsl
icebp
dec
jae
int3
fwait
call
mov
mov
mov
dec
testl
inc
push
aad
jb
jb
repz
and
xchg
adc
scas
pop
mov
mov
push
imul
mov
jno
cmp
ss
in
cmc
jmp
pop
xchg
aaa
sahf
add
pop
sub
cltd
cmp
cmp
stc
inc
dec
pop
test
cmpsb
shlb
cld
jbe
mov
push
hlt
adc
cmc
mov
pop
xor
fstpl
push
sbb
in
add
lea
ljmp
adc
mov
loop
insl
xor
mov
pop
xor
push
fdivrs
das
lret
push
push
cmpsb
repnz
lods
icebp
stc
jae
imul
xchg
fdivl
jns
loopne
dec
jae
cmp
shll
push
jecxz
js
movsb
or
cwtl
mov
or
cld
scas
push
hlt
inc
sarl
push
adc
pushf
jne
repnz
popa
cmpsb
icebp
xor
stos
push
loopne
and
dec
ficoml
sarl
cmp
shll
sbb
add
fstl
cs
daa
dec
ds
jae
into
imul
cltd
mov
pop
loop
adcl
mov
pop
pop
movsb
jno
pop
arpl
sub
or
and
fsubs
sub
daa
pusha
mov
mov
jo
call
xorl
sbb
add
or
test
enter
cmp
adcb
sub
and
cmp
pop
mov
outsb
shll
xor
add
shll
cmp
movsb
out
shrl
mov
arpl
test
sbb
lret
std
add
mov
std
fimull
lcall
dec
es
dec
cli
call
pop
push
adc
mov
sub
mov
cmp
loop
pop
mov
aam
stos
pop
shll
rorl
add
jns
xor
xor
and
cmp
cld
stos
adc
roll
cld
mov
aaa
icebp
jge
mov
sub
pop
pop
sbb
cs
and
push
ret
mov
stc
dec
ret
test
loop
mov
xchg
dec
push
adc
jp
fistpll
dec
fdivl
jbe
xor
mov
mov
add
xor
movsl
mov
std
pop
mov
cmpsb
pop
jmp
in
push
mov
dec
aas
out
imul
imull
shrb
repnz
testl
notb
aaa
dec
fiaddl
push
out
repnz
test
cltd
loope
adc
call
fstp
js
mov
pop
aam
sarl
dec
pop
cmpb
das
mov
sub
sbbl
out
push
test
out
subb
test
sbb
das
loope
xor
xchg
repz
fdivp
je
jno
mov
out
gs
sbb
and
es
imul
push
in
hlt
lcall
repz
mov
fdivl
pop
mov
repnz
stos
pop
aad
mov
sub
repz
ret
scas
int
dec
cs
and
mov
fnsave
mov
leave
arpl
dec
xchg
xchg
in
jns
mov
aaa
mov
adc
push
imul
mov
or
jns
mov
idivb
mov
rclb
xchg
push
int
mov
negb
mov
stos
fadds
add
outsb
jne
fimuls
jae
adc
jb
mov
mov
jle
xchg
je
dec
sub
movsb
fdivl
scas
insl
dec
add
test
jno
mov
popf
push
ret
pop
jmp
add
test
jmp
outsl
std
popf
aad
stos
cmp
adc
mov
std
imul
mov
jg
sbb
mov
pop
cmp
mov
push
loopne
lret
sub
pop
mov
xor
imul
jmp
dec
and
jp
nop
cli
divb
stos
inc
test
mov
cli
jmp
fisttpll
nop
movsb
pop
fisttpll
cli
fsubrs
xchg
and
sti
pop
pushf
mov
push
inc
push
call
and
scas
call
dec
adc
out
movsb
into
loopne
popa
cmpsb
and
dec
mov
pop
jnp
cld
jb
and
pop
lods
mov
inc
bound
sub
dec
cmpl
lret
mov
popa
test
test
test
rorb
sbbb
mov
jp
aad
aaa
push
or
mov
jp
jp
xlat
fisubrs
add
in
ljmp
mov
xor
shrb
shl
orl
fnstenv
imul
sti
movsl
aas
scas
sub
fiaddl
stos
push
xor
fwait
mov
sub
stos
jae
and
mov
push
mov
movsb
or
adc
dec
inc
xor
jb
fidivrs
outsl
xor
mov
loope
mov
xchg
or
dec
setg
and
insl
ret
pop
push
test
aad
adc
mov
lods
push
dec
xchg
cmc
adc
push
scas
sarb
adc
popf
sub
and
mov
negb
jnp
pop
clc
in
mov
dec
adcl
mov
pushf
repnz
pop
fst
call
xor
aas
push
hlt
pop
cmp
push
aam
dec
cwtl
xchg
scas
jb
and
jb
ljmp
insl
mov
xor
ror
fnstsw
cli
sbb
jecxz
stos
loopne
mov
xchg
jge
mov
bound
jno
xor
inc
ljmp
imul
outsl
pop
stos
pop
xchg
lret
enter
xor
lcall
xor
cltd
mov
fidivl
mov
cs
jb
push
add
outsl
pop
cli
in
mov
adcb
push
push
lcall
stc
ja
dec
movsb
out
repnz
cmp
adc
fdivr
push
fbstp
xchg
iret
xchg
xorl
in
jb
imulb
fcompl
pop
loopne
stc
push
mov
clc
xchg
cmpsb
sub
mov
jge
xor
shll
cmc
leave
pop
addr16
xchg
xor
mov
loopne
ret
xor
bound
mov
aas
ret
rcr
div
scas
jo
cmp
adc
or
jb
adc
mov
fstl
test
mov
and
pop
push
mov
cmc
out
movsb
in
jo
inc
jbe
std
xchg
push
cmp
jge
xchg
aad
mov
dec
pop
sbb
in
int
jno
fcmovb
add
cmp
test
loopne
xchg
inc
cmc
popa
pop
push
jp
push
cli
out
test
cmpsb
adc
or
or
lcall
clc
push
or
mov
addl
pop
push
shrb
sbb
fmuls
sarl
out
pop
adc
pop
mov
xchg
adc
xchg
dec
popa
arpl
inc
iret
and
xchg
dec
bound
sbb
pop
and
adc
sbb
lahf
jmp
and
call
add
icebp
and
xchg
cli
loop
sahf
dec
sbb
daa
test
scas
pop
xor
aaa
fprem1
testb
push
clc
jae
sar
xchg
and
cmp
in
cmp
nop
jnp
pop
jbe
xor
cmpsl
call
icebp
test
mov
xor
fwait
fs
xor
add
inc
idiv
movsb
out
stc
mov
adc
cwtl
xor
xchg
add
mov
add
stc
dec
aaa
and
std
orb
test
ds
push
cwtl
jmp
sahf
popw
nop
xchg
add
xor
jmp
adc
mov
mov
pushf
xor
pusha
mov
andb
dec
stc
xor
push
mov
int
cmpsb
in
jmp
out
xor
pushf
test
cmp
call
sbb
cmc
jns
hlt
adc
dec
sbb
sub
sti
push
lcall
jb
imul
shrb
icebp
lahf
nop
pusha
pop
push
or
xor
negb
jb
sbb
testb
mov
testl
dec
sub
fcmovnb
sbb
lock
sbb
mov
nop
shrl
xchg
gs
pusha
push
out
std
aam
xor
mov
sbb
mov
and
in
aam
cli
push
leave
repz
cli
sub
and
jns
jnp
movsbl
push
dec
aas
jmp
xchg
jns
mov
div
xchg
aas
lcall
popf
outsl
sub
inc
mov
sub
pushf
repnz
sub
lcall
mov
fs
and
rcr
cld
mov
loopne
lcall
decl
jg
cld
bnd
pop
push
mov
adc
je
ret
sbb
adc
jl
mov
or
test
mov
fnstsw
cmp
mov
pop
imull
adc
xor
push
mov
movsl
sbb
loopne
xor
lods
pop
in
lret
jp
lea
mov
arpl
mov
cld
jg
fsubrl
adc
push
leave
xchg
popa
jnp
and
adc
xor
sbb
stos
mov
xchg
mov
sbb
loopne
stc
lahf
inc
lods
aad
mov
inc
popa
call
mov
and
das
jmp
adc
ret
pop
cs
push
in
mov
xor
mov
in
cli
pop
ljmp
inc
xor
inc
cli
addr16
add
sub
outsb
lcall
rep
dec
call
out
inc
jl
xchg
ds
cltd
ljmp
sub
push
enter
cld
jb
sbbl
mov
addr16
sarl
mov
dec
daa
imull
nop
arpl
xor
add
adc
fidivrl
dec
and
jg
adc
mov
and
iret
fisttpl
pusha
jge
cltd
je
je
pop
push
push
xchg
jle
mov
ljmp
ds
iret
add
out
stc
leave
push
arpl
and
and
mov
adc
stos
push
sub
sub
in
cmp
js
sbb
repnz
lock
and
jmp
inc
adc
in
cltd
pop
out
call
and
movsb
sbbb
test
push
mov
imull
xchg
es
ret
iret
inc
mov
adc
lock
xor
xor
pop
fsts
insb
ss
jno
mov
jg
pop
out
xchg
movsb
sbb
cmp
mov
mov
cwtd
mov
jp
and
push
xor
into
cmp
hlt
ja
cld
dec
fdivr
mov
jae
test
fnsave
hlt
fidivs
movsl
pop
lcall
sar
stc
add
cmp
fistl
inc
dec
test
xor
add
cli
mov
outsl
mov
jmp
negl
mov
sbbl
lock
push
push
sub
push
xchg
fcomi
cmp
sub
mov
and
divl
pop
cmp
xor
jno
push
jae
insl
xor
aaa
adc
lock
jp
mov
xchg
or
push
lahf
xor
dec
pop
arpl
arpl
enter
loopne
pop
jae
xchg
rcrb
xchg
mov
or
sbb
fcomp
mov
scas
cmp
fidivs
add
call
loopne
xor
je
aas
insb
push
cmp
and
mov
rol
cli
mov
ret
adc
mov
mov
mov
mov
jle
jbe
xor
daa
leave
incb
cmp
jmp
xchg
in
cmp
xchg
es
shll
dec
icebp
pop
mov
mov
movsb
push
fwait
enter
mov
das
push
push
fldenv
mov
cld
sub
cmp
mov
hlt
out
clc
and
loope
mov
and
mov
mov
int3
repnz
ror
sub
popa
fs
mov
nop
mov
movsb
sub
xor
xor
nop
add
sub
das
push
stos
shlb
push
negb
jp
xor
dec
aad
cli
xchg
aam
jge
push
mov
mov
jbe
orl
dec
in
jmp
mov
adc
out
shrl
add
xchg
sbb
pop
xor
mov
aaa
mov
push
aas
mov
mov
dec
scas
fldenv
inc
ds
jmp
cmp
jae
inc
ror
push
inc
leave
push
pop
ficoml
fidivrs
or
ret
lea
outsb
mov
loope
gs
mov
inc
imul
test
inc
dec
pop
aas
xchg
adc
mov
cli
jae
enter
lods
push
outsb
xor
icebp
lcall
popl
push
addr16
jp
cmp
pop
inc
inc
mov
into
outsb
adc
mov
sub
and
mov
cmp
adc
lds
mov
aad
fsubl
push
mov
mov
push
jl
jae
pusha
ret
and
mov
or
out
scas
xchg
mov
pop
into
add
xchg
mov
lock
add
ja
mov
xor
test
loopne
inc
decb
mov
std
addb
ljmp
adc
sub
out
xchg
leave
in
adcl
out
jecxz
xor
add
adc
shl
icebp
push
fldl
mov
mov
repz
inc
je
das
incb
jg
fidivrs
push
xor
mov
jg
pop
pop
lret
pushf
adc
stos
cli
stos
jne
pop
push
in
push
mov
xlat
dec
mov
jns
sub
pop
fisubrs
jbe
push
leave
cmpsl
gs
lcall
xor
push
scas
or
adc
xchg
jge
dec
iret
ret
push
hlt
mov
inc
mov
mov
mov
popf
insl
pushf
mov
lret
bts
add
and
pop
mov
call
sub
lahf
loope
popl
pop
in
enter
inc
push
push
or
ds
inc
pop
mov
mov
xchg
gs
add
stos
mov
push
hlt
inc
pop
mov
pop
xchg
int3
xor
mov
aad
stos
xchg
and
out
repz
adc
mov
jl
ja
lahf
add
icebp
mov
out
jo
xor
test
jno
ja
xor
popf
enter
mov
test
ja
inc
cs
hlt
fsub
mov
adc
and
inc
mov
xchg
push
shl
inc
xor
adc
js
rcr
stos
ret
push
add
inc
lds
pop
dec
or
les
andl
sub
sbb
dec
adc
pop
js
sbb
mov
das
jb
sub
fnsave
popl
inc
cli
fiaddl
mov
mov
push
aaa
jo
mov
rclb
mov
ret
imul
cmp
or
inc
mov
sti
xchg
inc
xchg
push
inc
fiaddl
cmpsb
stos
jg
lods
mov
mov
stc
sub
add
repnz
aas
cmp
loop
mov
je
testl
push
add
imull
call
movsl
cmp
sahf
xlat
mov
xchg
jnp
xlat
cwtl
mov
push
adc
inc
mov
test
cmc
inc
mov
mov
cmp
movsl
pop
movsb
icebp
inc
imul
inc
push
push
pop
inc
sbb
sbb
daa
movsb
call
ss
cmp
mov
xchg
dec
call
lods
xor
adcb
push
xchg
push
aas
fildl
ss
sub
cltd
mov
into
fwait
sbb
sbb
fdiv
fcomi
mov
jnp
lret
in
xor
xor
lret
xor
mov
dec
clc
mov
cmp
push
mov
xor
mov
mov
push
pushf
mov
cmpsl
aam
lods
test
xor
and
loopne
mov
outsb
sub
scas
xor
push
xor
and
jbe
andl
add
ljmp
das
nop
add
lock
jge
ljmp
je
adc
xchg
das
cmp
sbb
sbb
mov
imul
pop
cmpsb
push
pop
sahf
sti
icebp
mov
sub
pop
cmp
xor
test
cmp
add
andl
sub
test
sub
mov
loope
xchg
dec
mov
xor
jb
xor
mov
dec
jle
mov
icebp
inc
mov
insl
xor
mov
idivb
cmp
mov
xlat
xor
cwtl
adc
cmp
fidivrs
mov
test
fiaddl
cmp
imul
xchg
pop
bound
mov
mov
pushf
out
add
dec
fstl
fcmovnbe
pushf
dec
add
and
xor
imul
cld
mov
pop
jecxz
hlt
stos
push
or
mov
cmp
dec
shll
pop
outsb
ds
int3
dec
nop
decl
test
in
sub
fisubs
xor
sbbl
scas
popa
jl
lret
push
imul
jns
jae
clc
sbb
inc
adc
add
mov
mov
pop
xor
call
dec
dec
push
push
movsb
mov
jle
arpl
and
cmpl
mov
inc
testb
fnsave
popa
push
enter
test
fstpl
xchg
out
enter
inc
movsb
mov
cmp
xchg
test
loopne
adc
adc
mov
or
mov
cmc
xchg
cmc
movsb
mov
pop
into
enter
xchg
adc
or
movsb
stos
or
mov
mov
inc
jae
rcr
push
shrl
sub
push
sahf
mov
pop
fcomps
icebp
movsb
sbb
movsb
inc
inc
inc
mov
mov
xor
sbb
or
in
mov
mov
or
in
in
movsb
shlb
andb
mov
int3
sub
sbb
testb
lds
test
jmp
stos
movsl
enter
lods
icebp
add
or
mov
and
std
sub
movsb
sti
test
es
dec
sub
sbb
pushf
add
jae
in
aam
pop
mov
mov
lods
pop
sub
shrd
leave
mov
ror
popl
lock
add
stos
pop
call
cltd
inc
adc
jle
sbb
jno
or
loop
jmp
sbbb
inc
ficomps
int
adc
xchg
movsb
repnz
mov
jns
jbe
jnp
adc
ja
std
add
imul
cmp
inc
jae
subl
fadd
into
cmp
lahf
test
adc
jo
jno
add
xchg
push
into
shl
out
push
insl
cli
mov
loope
sbb
mov
sbb
fisubrl
leave
jecxz
rol
mov
lods
fwait
sti
cs
clc
icebp
mov
fcmovb
dec
in
xchg
movsb
sbbb
mov
divb
adc
cmpsl
ljmp
dec
sub
adc
or
xchg
shlb
shr
test
ucomiss
rcll
mov
fucompp
arpl
out
mov
call
mull
mov
mov
push
adc
and
mov
lcall
movsl
ret
xchg
dec
lret
fistl
sbb
push
xor
inc
fistl
xor
movsl
cltd
push
xchg
push
lock
sub
mov
andl
orl
sahf
jae
mov
push
into
jae
aam
add
cs
add
in
js
adc
pop
inc
aas
insl
int
add
orl
sarl
stos
out
jge
outsb
dec
jae
push
and
add
test
xor
fistpll
into
shlb
jecxz
pop
cmp
and
cmp
shr
pusha
clc
pushl
sub
dec
cmc
mov
shl
clc
cmp
pop
push
cmp
loop
jno
push
sbb
sbb
or
sub
ds
push
and
mov
test
outsl
push
xchg
jp
cs
cltd
mov
add
movsb
lock
cmpsl
mov
mov
inc
or
push
hlt
call
xor
inc
jp
mov
push
out
or
pop
jb
jbe
movsb
xchg
sub
jb
sbb
pop
dec
jle
push
adc
mov
in
adc
xorb
icebp
mov
shrl
mov
icebp
ljmp
mov
jecxz
out
fwait
into
lods
lret
ret
nop
inc
add
cmpsl
cli
sti
loope
or
pop
push
das
fidivs
out
dec
adc
xorl
dec
xor
das
cmp
jae
notb
out
mov
ljmp
and
sbb
imul
mov
int3
out
leave
push
jmp
sub
adc
mov
or
adc
mov
call
test
hlt
repnz
out
jnp
test
lock
adc
in
mov
js
cmp
lret
daa
xchg
rolb
les
xchg
add
mov
jmp
pop
mov
pop
mov
and
cmpl
add
popa
andb
les
or
clc
adc
shrb
decb
in
cmp
dec
mov
notl
jbe
sbb
subl
mov
ficomps
and
div
insl
movsb
push
mov
dec
pop
mov
sbb
repnz
xchg
mov
sub
popa
xchg
repnz
popf
imul
adc
test
sbb
fidivs
sub
cs
xor
pop
jae
sbb
and
adc
rcll
es
inc
nop
nop
jno
rcpps
ljmp
sbbb
jne
dec
cltd
cmp
xor
stos
or
andl
inc
les
mov
data16
xchg
cmpsb
cli
pop
test
jae
stos
mov
mov
dec
sbb
in
adc
jg
sub
imul
cmp
scas
lds
stc
fs
out
pop
mov
push
push
lods
xor
outsb
stos
lahf
push
sahf
daa
pusha
jne
enter
inc
mov
mov
push
cmpsl
pop
push
jecxz
push
and
dec
or
mov
dec
mov
js
mov
mov
sbb
cmpsl
xchg
add
sbb
inc
jne
je
lds
pop
stos
movsb
mov
xchg
jb
sub
test
jae
movsb
xchg
adc
and
bound
loopne
nop
sub
lret
xor
dec
fidivl
or
ret
je
fistpll
or
jae
or
data16
leave
mov
adc
dec
xchg
sbb
ret
aam
imul
fs
mov
mov
idiv
dec
xchg
ret
clc
sbb
push
lret
popf
andl
or
fsub
jmp
adc
adcb
ss
stos
and
push
loopne
shlb
xchg
pop
mov
mulb
or
mov
sub
jb
cli
decl
mov
mov
or
and
pop
repnz
cmp
xor
insl
movsb
std
popa
imul
cmp
dec
pusha
xor
pop
jb
lret
mov
cwtl
mov
adc
shll
lret
jbe
dec
pop
and
xchg
or
and
and
add
mov
pop
loopne
cld
and
lock
mov
shlb
sbb
and
stos
push
adc
insb
sbb
mov
fimull
sysenter
lret
inc
sub
movsb
xchg
adc
push
mov
je
sub
adc
xchg
xor
mov
xlat
icebp
push
sub
in
outsb
icebp
mov
push
repz
imul
add
push
xlat
rcrb
dec
aas
popa
repnz
mov
orl
mov
cld
lret
jno
shlb
fbld
sahf
lcall
cltd
mov
adc
pusha
fistpll
adc
mov
aam
adc
pop
pop
enter
xor
inc
and
and
jg
cmpsb
out
lods
loope
pushf
push
xor
mov
filds
mov
ljmp
popf
iret
testb
testb
mov
and
lret
loopne
in
jns
pop
push
js
mov
lcall
cltd
rcrl
leave
and
and
movsb
cmp
pusha
cmp
inc
mov
cltd
add
mov
pop
sub
push
push
dec
or
and
icebp
fnstsw
cmp
loopne
repz
mov
psrlq
jo
jbe
adc
cli
fldl
leave
and
xchg
sub
out
mov
adc
push
jecxz
stos
xor
sbb
sbb
jmp
and
insl
jbe
test
das
popf
xchg
xchg
sbb
leave
fstpt
push
setno
jne
test
xor
movl
sbb
inc
mov
fwait
sub
sti
out
cli
pushf
inc
sub
test
lcall
jecxz
push
mov
xchg
test
push
mov
push
pushf
mov
xor
xchg
addb
push
data16
out
lods
lss
mov
fs
orb
mov
clc
sbb
daa
repz
and
movsb
mov
lret
test
and
bound
into
repnz
arpl
or
push
adc
ljmp
cmpl
sub
in
fcmovne
or
mov
mov
or
pop
xchg
ret
scas
sub
shl
aaa
mov
outsl
dec
test
xor
mov
sub
into
insl
mov
sbb
lock
dec
rolb
inc
pop
mov
sbb
pop
es
ss
and
add
pushf
inc
popf
into
push
pop
cmp
cmp
pop
movsb
ficoms
push
stos
aas
mov
out
add
push
fisttpl
repnz
inc
cltd
or
mov
push
mov
ljmp
fiaddl
push
or
icebp
jp
jge
jnp
shll
pop
rcrl
sbb
xchg
inc
add
aas
inc
adc
shrb
nop
cld
or
mov
frstor
mov
pop
dec
mov
sub
pop
push
sub
add
cwtl
sbb
mov
in
fwait
mov
aas
mov
jae
pop
repz
push
mov
cli
fistl
repz
pushl
mov
jnp
rorb
jmp
lods
mov
test
mov
jns
test
movsb
push
and
popa
push
mov
iret
fcmovbe
add
inc
adc
shlb
cs
das
push
nop
cli
pop
inc
mov
cs
scas
ds
mov
dec
stc
inc
jp
pop
orl
adc
add
ljmp
shlb
out
xor
stc
cmp
lahf
xchg
mov
sbb
pop
mov
jne
or
dec
in
cmc
mov
jge
test
dec
pop
hlt
dec
push
add
out
ret
push
push
or
cmp
mov
xor
movsl
std
stos
dec
in
cmp
sbb
inc
mov
fisubrl
mov
es
mov
mov
xchg
mov
xor
sti
lds
sub
imul
xor
loopne
scas
push
movsl
dec
jmp
or
inc
push
push
adc
push
adc
cmc
sbb
pop
mov
sbb
xor
xorb
jbe
out
mov
jge
cmpsl
pop
mov
mov
cltd
mov
mov
sahf
fcoml
pop
sub
adc
stos
idivb
and
std
sbb
clc
aaa
aas
fcompl
jge
push
mov
pop
push
repz
cmp
xchg
fsubr
mov
mov
xchg
cmp
jne
xchg
test
mov
xor
imull
xchg
xchg
inc
loope
sbb
scas
out
outsl
test
lds
cmc
mov
cmp
or
sbb
pop
cmova
or
mov
outsb
mov
xlat
jecxz
test
loopne
mov
in
jp
popf
std
ret
scas
mov
mov
mov
pop
mov
div
les
dec
movsb
movsl
push
fidivs
aam
ss
add
or
inc
jmp
sti
and
jle
movsb
add
sahf
xor
jbe
adc
fldt
cwtl
mov
xchg
sub
jg
push
sub
sarb
jb
cli
outsl
std
inc
cmpsb
xchg
dec
cmpb
insl
mov
jg
lcall
cmpb
mov
fimull
fdivrp
push
xchg
repz
dec
es
outsb
fcmovb
sub
sbb
fyl2x
dec
rcll
aas
and
push
inc
add
adc
sbb
adc
insb
and
scas
imul
shlb
cs
arpl
mov
rorl
inc
cli
adc
sub
sub
ds
push
dec
mov
fstpt
jno
mov
mov
leave
movsl
das
lock
pushf
inc
sbbb
mov
sub
lcall
and
push
add
push
add
std
test
cmpsl
int3
xchg
imulb
sbb
push
jb
cmp
xchg
popf
mov
xor
in
push
leave
fwait
clc
and
sbb
xchg
dec
mov
aad
push
lock
pop
cmp
inc
xor
dec
rol
insl
test
push
cmp
sub
rorl
cmpsb
pop
gs
shl
cmp
rolb
loopne
push
dec
mov
add
pop
ret
es
mov
pushf
push
pusha
lock
mov
xchg
sub
sbb
lahf
mov
or
add
jg
xor
xlat
push
push
sbb
je
mov
sub
sbbb
jbe
test
xor
jne
cmpsb
xor
xchg
mov
hlt
movsl
std
in
enter
mov
bound
push
shrd
jge
fdivrl
push
xchg
test
stos
sti
loope
mov
movsl
int
xor
adc
xchg
push
sbb
sub
sbb
sbb
adc
and
scas
mov
dec
outsb
add
mov
mov
mov
popa
xor
push
jns
or
lret
int3
and
test
or
subl
mov
add
test
and
movsb
push
clc
mov
add
aas
mov
call
push
mov
or
in
sbb
pop
pop
xor
mov
in
fnstcw
out
and
and
or
mov
aaa
out
mov
xchg
cltd
pop
xor
and
sahf
idivb
iret
mov
pop
nop
test
inc
jp
add
dec
scas
inc
dec
jg
call
inc
mov
cmpsb
leave
andl
divb
testb
js
cli
roll
movlpd
jbe
inc
cmpb
mov
or
cld
sub
mov
out
mov
sbb
sub
cmpsl
xor
adc
inc
sarl
mov
popa
fmull
mov
mov
sarl
add
test
rol
ds
inc
mov
outsb
testl
gs
insb
cli
and
xor
imul
add
idivb
add
inc
xchg
icebp
xchg
xor
stc
jb,pt
cld
rcr
mov
sub
imul
aad
xor
sub
imul
sbb
adc
out
movsb
xchg
pop
jcxz
or
outsl
int3
cmovbe
cmp
push
test
dec
jne
add
int
imul
les
cmp
enter
leave
fadds
push
jl
pop
icebp
mov
sbb
pusha
add
pusha
imul
or
add
and
mov
xchg
arpl
pop
aam
icebp
pop
sub
sbb
mov
adc
psubsb
in
push
jg
lock
cmpsl
frstor
mov
mov
repz
mov
pushw
mov
xor
aaa
movsb
pop
push
dec
dec
jmp
cmp
lret
and
ret
and
sti
cs
cmp
add
dec
mov
adc
and
add
xor
adc
push
imulb
loop
andl
push
adc
pop
add
add
add
cmpsb
es
data16
jbe
stos
popa
test
jmp
js
into
mov
mov
shrl
push
mov
frstor
xor
push
sar
push
mov
mov
shlb
xor
and
sahf
aad
jb
icebp
aas
mov
cmp
pusha
subb
test
int
call
mov
sarl
xor
sbb
jg
pop
xor
or
mov
xor
xchg
fidivl
mov
sub
push
stos
push
xchg
sbb
nop
jnp
loopne
nop
mov
lods
mov
orl
sbb
and
adc
adc
clc
out
pop
dec
cmp
mov
or
add
dec
jb
sbb
and
adc
jae
fnsave
jb
adcl
data16
fs
fdiv
mov
mov
and
or
push
push
cs
push
jmp
popa
push
dec
orl
pop
push
repnz
sbb
lcall
xchg
jb
and
sahf
adc
cmp
xor
jmp
pop
imul
aas
push
xor
clc
sbbl
cld
cs
xchg
es
ss
stos
insl
and
or
mov
test
xor
int
js
lea
jb
push
sbb
fldl
inc
jmp
mov
js
inc
inc
mov
adc
mov
and
lahf
mov
sahf
outsl
js
mov
ljmp
mov
notl
inc
insl
pusha
jno
push
push
sub
in
imul
in
xor
ss
xor
pusha
jmp
fildl
cld
popa
test
xchg
loope
out
mov
add
arpl
mov
fcmovnbe
hlt
rcr
sbb
movsb
and
push
jl
popa
arpl
push
and
mov
inc
sti
and
xchg
pop
insb
cmc
lock
sbb
or
push
add
movsb
and
sub
xor
pushl
pop
pop
mov
lcall
fadds
icebp
lods
pop
xchg
orb
xor
clc
in
inc
push
xor
xchg
rorb
jg
jle
add
arpl
xchg
scas
pop
xor
ljmp
cmp
jb
icebp
movsb
sahf
cltd
add
push
in
mov
push
in
pop
sub
add
pop
jge
pop
mov
push
lods
push
push
xchg
pop
aam
subl
int
outsl
jge
int
adcb
pop
push
sbb
push
popa
add
lahf
xor
test
icebp
cmp
cs
cmp
addr16
leave
bound
mov
xchg
lods
in
xchg
xchg
jo
xor
sub
inc
test
mov
sbb
cli
andb
jmp
sub
loop
in
cmp
js
sub
push
jno
outsl
movsb
sbb
cmp
jae
js
push
xor
xor
out
hlt
push
mov
or
loop
push
jne
push
adc
popf
idiv
dec
pop
add
int
repnz
add
cmp
fstl
or
sbb
mov
xor
pop
in
jae
loopne
das
sbb
rcl
mov
sbb
fs
icebp
out
aad
icebp
repz
sbb
adc
daa
loop
sub
aas
xor
cmp
lcall
push
orb
push
xchg
sti
add
loopne
adc
add
adc
cmpsb
fs
fninit
fisttpll
xor
add
imul
push
sub
cmc
rcll
scas
add
mov
addr16
fcmovu
and
mov
sbb
ja
enter
cmp
pop
test
popf
jle
sbb
cmp
std
cmp
lods
rcrb
xchg
pop
int
pop
mov
popa
push
add
jge
inc
push
cmp
jge,pt
mov
fcoml
sbb
lea
lcall
jno
jecxz
jmp
std
icebp
cltd
push
xor
sub
cmovno
stos
cmp
jae
aad
loopne
push
xorb
mov
jns
xchg
outsl
adc
int
mov
pop
adcb
add
out
jbe
outsl
std
sub
add
aad
dec
mov
mov
fidivs
sarb
int
push
loope
movsb
outsb
add
jno
mov
push
jg
xchg
ret
in
mov
mov
pop
sbb
stos
and
ja
push
inc
rcll
jne
pop
scas
into
sbb
sbb
push
pusha
pop
lock
sbb
mov
jns
sbbl
enter
call
gs
mov
add
insb
or
and
push
arpl
and
mov
sub
mov
or
in
repz
mov
pop
sub
jb
jp
push
adc
leave
and
sbb
pop
es
pop
push
adc
loope
push
sbb
add
sbb
ljmp
int
inc
mov
outsb
push
xor
mov
inc
push
mov
jp
inc
cli
scas
push
push
mov
push
mov
or
or
jge
stos
pop
mov
push
pusha
mov
lcall
movzbl
cmp
xorb
inc
mov
push
sarl
sub
dec
and
or
and
jnp
adc
inc
and
fnstsw
add
lock
inc
mov
filds
mov
mov
xchg
and
push
imul
insl
cmp
stos
mov
out
cli
repz
js
test
repz
call
sub
xchg
mov
xchg
push
in
push
dec
and
lock
add
or
mov
dec
ds
lcall
cltd
push
das
das
jp
lods
rcl
lea
and
jbe
leave
xchg
fnstcw
ret
daa
sub
ret
daa
dec
inc
clc
xor
xor
mov
sub
pop
mov
adc
imull
int
fisttpll
clc
mov
sti
and
push
push
ret
icebp
mov
mov
fnstsw
mov
cmp
xor
inc
aaa
test
scas
jmp
xchg
fwait
test
push
mov
pop
mov
sbb
pop
test
cmpb
sub
dec
add
inc
cmp
hlt
into
fs
sub
xor
hlt
movsb
in
out
push
mov
fidivrl
sbb
hlt
ja
and
call
jnp
dec
jmp
out
out
mov
stc
and
lcall
dec
xchg
lret
jle
rorl
int
mov
loop
xchg
cmpsb
pop
jle
fdiv
scas
xchg
das
movsb
ret
adc
mov
mov
push
adc
jno
inc
test
jnp
inc
ficompl
adc
clc
cmpsl
cld
inc
call
shrb
sarl
inc
ror
out
xor
cltd
lea
mov
or
ret
mov
sti
das
repnz
mov
adc
loope
dec
inc
cli
icebp
scas
imul
or
adc
aaa
mov
aam
lret
xchg
stos
jb
aas
inc
adc
sbb
push
and
loopne
xor
adc
jl
mov
mov
out
xchg
sarl
sar
arpl
andb
lcall
aas
add
in
fcompl
mov
xor
lds
push
dec
lahf
out
cmp
xchg
xlat
add
xor
push
pop
jp
shl
fcmovnb
mov
adc
rcl
xchg
lcall
push
mov
jmp
movsb
jae
xchg
test
xor
cs
cltd
lcall
dec
push
outsb
or
sbb
and
dec
test
stc
aas
jae
fldt
lods
outsl
push
in
pop
push
insl
je
shll
test
mov
and
mov
or
dec
test
mov
adc
test
les
daa
je
test
xor
mov
stos
push
loope
cld
out
clc
add
pop
dec
test
lcall
shl
or
lret
push
jae
cmp
cmp
xchg
fmul
inc
stos
mov
adc
sti
arpl
dec
jnp
xchg
jle
pop
int
jne
stos
pusha
movsl
dec
xor
dec
pop
push
clc
mov
cmc
out
sub
stos
jnp
movsl
in
push
fs
out
lea
lods
pop
fisubrs
inc
push
sub
dec
das
cwtl
mov
mov
sub
push
sbb
xor
adc
ljmp
sti
inc
cli
orb
movsb
xchg
out
scas
xchg
adc
cli
add
and
pop
push
call
popf
cmp
adc
aas
mov
movsb
jge
cld
jae
mov
jbe
orl
jo
movsb
mov
push
popa
jne
out
test
jl
cmp
fwait
push
jo
push
xor
int3
mov
leave
inc
push
push
mov
arpl
mov
xlat
cltd
inc
pop
jmp
adc
fidivs
shl
shlb
sbb
cmpsl
or
cli
arpl
loopne
ljmp
cs
mov
pushf
xchg
sub
je
dec
pop
pop
xor
and
std
jmp
stos
cld
fidivrl
mov
jmp
xchg
cmp
xor
push
mov
cli
jae
rep
push
ret
dec
xor
jnp
add
dec
movsl
inc
or
pop
and
icebp
fs
jne
filds
scas
push
dec
add
jns
pop
push
pop
mov
jecxz
test
fnstsw
nop
call
imul
cmp
sti
sti
loopne
mov
out
shlb
inc
dec
mov
push
jnp
dec
xchg
pop
out
or
daa
roll
add
or
pop
outsb
push
jg
cmp
and
and
mov
mov
jmp
inc
dec
cli
nop
xor
mov
push
dec
mov
clc
xchg
sbb
lret
pop
add
fwait
mov
mov
cli
cmp
movsb
out
test
insl
adc
mov
fnstsw
je
and
stos
mov
pop
jno
sbb
sub
leave
sub
jae
add
jnp
loope
mov
cmp
lret
push
mov
push
dec
out
jbe
jge
mov
into
cli
mov
sub
lahf
int
cmpl
fcompl
out
hlt
sub
xlat
aad
jo,pt
xchg
xorl
sbb
sbb
pop
inc
and
jb
xchg
dec
cmp
mov
int
sbb
and
adc
jle
rolb
je
inc
popf
adc
sbb
gs
dec
andb
or
and
mov
gs
in
mov
dec
add
testb
int3
push
mov
cmpsl
xchg
aam
loope
push
mov
out
pop
das
jns
imul
mov
bound
ret
dec
iret
mov
in
in
pop
scas
push
and
stc
cmp
stc
loopne
mov
or
sbb
in
or
mov
mov
fisubrs
out
outsl
stos
add
aas
pop
aaa
das
add
repz
push
fimull
dec
pop
adc
cli
test
orb
cmp
adc
mov
jecxz
les
inc
or
mov
cmpsb
push
xor
lret
push
iret
or
test
sub
movsb
sub
push
ljmp
xor
shlb
daa
packssdw
nop
sbb
or
or
xchg
xor
js
inc
mov
push
leave
insb
pop
xor
mov
cmpsl
cwtd
ffree
jno
adc
cmp
mov
sub
repz
fmuls
mov
push
ds
inc
int3
pop
mov
aas
pop
and
dec
int
xchg
and
fcmove
movsb
movsl
popf
mov
fs
lods
aaa
in
xchg
adc
into
lds
in
test
icebp
sub
sarl
mov
xchg
hlt
inc
push
pop
jb
mov
jb
mov
sahf
sti
mov
dec
push
xor
xchg
jb
movsb
sub
mov
inc
mov
jae
cli
in
xor
jns
push
mov
mov
jmp
add
popa
into
loop
pop
inc
push
and
lcall
mov
sub
lahf
add
adc
imul
mov
out
sub
mov
shlb
aaa
sbb
lahf
aaa
mov
cmp
vpaddusb
shlb
push
loope
sbb
int
stos
sub
into
and
fs
cmpsb
mov
imul
jnp
jne
pop
jmp
xchg
addl
movsl
test
sub
push
and
aad
loop
xchg
pop
mov
sbb
sub
inc
iret
mov
lcall
mov
cmp
inc
es
rolb
sar
inc
push
aam
sahf
mov
inc
xor
lock
dec
das
cmc
cli
or
mov
inc
push
push
enter
mov
movsl
js
addb
inc
mov
add
test
jecxz
adc
adc
std
cld
mov
out
push
jns
stos
jecxz
mov
js
push
pusha
inc
push
mov
shll
cld
xor
movsb
fs
xchg
mov
pop
daa
pop
xchg
clc
sub
and
inc
and
or
or
bswap
mov
cli
data16
cmp
inc
repnz
add
lahf
ljmp
movsb
lea
dec
mov
push
mov
adc
mov
inc
stos
outsl
inc
hlt
mov
mov
dec
hlt
nop
and
mov
lret
jno
rorl
mov
dec
mov
mov
jmp
sub
push
xchg
xor
jb
fbstp
adc
and
mov
ds
je
push
cmp
iret
pop
orl
pushl
mov
pop
or
mov
mov
in
mov
adc
sub
lods
cwtl
sub
stos
pop
xor
in
xchg
scas
addr16
mov
addb
repz
icebp
fcmovnbe
in
inc
nop
testb
or
loop
es
insl
and
inc
shll
aas
mov
pop
shr
nop
xor
and
jb
and
fnsave
int
sub
lahf
roll
cmp
dec
xor
cmc
or
in
and
pop
xor
mov
sub
xchg
fnstenv
stc
and
mov
or
adc
xchg
inc
leave
scas
fwait
pop
mov
inc
mov
sti
test
fisttpl
fdivrs
mov
pop
in
pop
inc
and
cwtl
push
mov
push
dec
lcall
inc
mov
jmp
xchg
dec
cs
sub
pushf
sbb
mov
dec
andl
popa
test
movsb
sbb
faddl
aas
dec
or
fdivrs
inc
movsb
nop
loopne
push
repz
fiadds
imul
stos
pop
xor
outsl
inc
lret
aad
scas
adc
xchg
cmpsl
testl
xchg
sbb
cmpb
cmp
xor
into
idivb
jns
push
mov
inc
stos
mov
mov
pop
shrb
lahf
fs
imulb
mov
cli
test
scas
sbb
addr16
mov
movsb
jnp
inc
jns
fdivr
mov
jl
fldcw
fwait
iret
mov
inc
jbe
xchg
addr16
adc
fdivp
xor
jbe
lds
push
mov
cmp
ss
jbe
and
pop
cmp
shlb
xor
lods
pop
xor
insb
nop
jne
popf
or
stos
jl
js
mov
leave
js
adc
es
dec
adc
addr16
mov
shl
mov
scas
fs
mov
imul
jle
push
jno
je
sbb
and
out
test
xor
add
pop
daa
leave
cld
mov
mov
push
mov
test
adc
mov
out
mov
mov
imul
xor
in
cmp
and
xorb
movsb
pop
jne
xchg
mov
add
jno
push
sarl
int
and
daa
jb
add
shr
sbb
cmp
and
adc
mov
mov
loopne
sti
sbb
rclb
sbb
stos
fidivrl
gs
sbb
sbb
subl
cmp
push
loope
adc
mov
jle
lock
lahf
mov
daa
aas
movsb
enter
mov
movsb
outsb
push
cld
sub
mov
sbb
in
cli
xor
nop
out
out
out
mov
and
movsb
mov
icebp
xor
and
test
fwait
je
adc
push
cmp
jbe
jmp
mov
fucomi
mov
insl
sub
xor
ficompl
arpl
push
jmp
pop
in
cs
push
lea
dec
jge
jbe
add
addl
test
fidivl
lret
movsb
mov
push
pusha
cs
xor
sub
shlb
or
sub
fisubrl
sub
and
test
js
pop
inc
sarb
subl
iret
shrb
jge
mov
std
push
shrb
jae
fmull
sarl
sahf
repz
icebp
push
jo
mov
pop
shlb
mov
ds
cmp
daa
outsl
jnp
dec
xor
inc
rorl
sub
jb
scas
cld
inc
mov
inc
sbb
fwait
mov
and
std
rclb
pop
int3
mov
dec
icebp
add
roll
mov
std
xchg
hlt
repz
sub
push
ret
stos
notl
inc
mov
lret
mov
adc
mov
push
inc
mov
mov
cmpsb
cwtl
lock
hlt
fbstp
mov
mov
lock
lock
mov
dec
pop
out
mov
aad
fcmovnu
mov
and
and
lcall
pop
adc
lea
jae
pop
push
jge
cld
in
movsb
pusha
aas
cmp
pop
mov
xchg
iret
cltd
mov
enter
lock
in
mov
jns
dec
mov
cmc
fiadds
sbb
or
mov
mov
imul
xchg
lock
push
mov
fldlg2
gs
jne
push
mov
aad
shrl
mov
sub
pop
loop
jle
sub
or
add
add
mov
xor
mov
pushf
push
jo
cmp
sub
mov
jl
imul
and
aas
inc
pop
arpl
dec
aad
out
xor
ja
push
imul
mov
cmpsb
sub
add
icebp
cmp
mov
mov
xor
daa
into
push
mov
ret
cli
fwait
mov
mov
cs
xor
sbb
loopne
scas
cmp
sti
adc
pop
stos
mov
jl
mov
ljmp
std
ds
int
xlat
pop
movsb
fstpt
cmc
or
mov
push
fcomp
jbe
into
scas
sahf
dec
ss
jmp
pushf
popa
mov
add
lods
sti
fldenv
stos
mov
cmp
bound
inc
jbe
or
add
movsb
out
loop
fwait
add
stos
push
jmp
lock
rclb
mov
push
mov
loopne
inc
scas
sbb
adc
or
push
pop
repnz
lock
xor
adc
adc
mov
or
loop
in
popf
sub
fwait
push
sti
jb
popa
xor
mov
movsb
hlt
loope
push
jb
mov
mov
mov
loope
push
lcall
jnp
rorl
jmp
inc
loop
rolb
pusha
fwait
movsl
daa
push
add
idiv
jno
test
loopne
push
in
or
pop
hlt
inc
pushl
cmp
adc
imul
leave
es
mov
lds
and
sbb
push
jl
pop
add
loope
xchg
ljmp
sub
loop
cmp
sbb
and
dec
ret
fcmovnu
movsb
shrb
sub
sbb
inc
jne
std
or
mov
loope
jb
mov
movsb
scas
push
sub
inc
movsl
pop
arpl
aam
test
mov
ficoms
movsb
dec
enter
lods
xchg
ds
push
jae
movsb
sbb
jmp
mov
js
jnp
pop
add
pop
mov
mov
mov
xchg
into
cmp
out
jnp
xchg
mov
and
pop
lock
dec
add
dec
sahf
idivb
jo
mov
jg
mov
icebp
test
dec
mov
push
in
cmp
mov
popf
pop
mov
test
loope
jl
adc
lds
mov
fldenv
add
inc
mov
rorb
push
loop
mov
fcmovnb
xchg
adc
or
jae,pt
cs
xorb
gs
loopne
std
aad
sub
out
jb
rolb
aas
or
jp
jecxz
inc
lret
roll
js
popa
loope
popa
cmpsb
sbb
cmp
and
jno
jae
std
popa
loopne
push
push
adc
xorb
lods
ds
add
test
mov
or
stos
xchg
jnp
xchg
sub
mov
dec
stc
adcb
mov
imul
adc
adcb
and
out
cmc
mov
add
mov
and
flds
int3
mov
sahf
sbb
xorb
xchg
jno
bound
mov
pop
sti
adc
popa
adc
and
rcl
adc
mov
mov
mov
xchg
mov
jge
jbe
mov
cmpb
mov
std
mov
adc
cmp
popf
outsl
imul
mov
and
and
icebp
jae
subl
jno
clc
das
fs
das
cmp
or
mov
loopne
cmp
movsl
or
and
pop
cld
mov
sbb
fnsave
jno
adc
das
mov
das
into
push
lret
fisubrl
aas
push
loope
mov
sbb
adc
push
and
cmp
jp
pop
out
mov
xor
mov
sub
dec
cld
cmp
xor
sbb
adc
jmp
sti
xor
outsl
jmp
jp
sti
sahf
pushf
jge
jns
adc
xor
inc
xor
and
repnz
mov
inc
rcl
in
add
xchg
in
ficomps
loop
ds
xchg
mov
das
xchg
jmp
pop
bound
jmp
fs
adc
shlb
rcl
jmp
or
ja
lret
push
ds
ret
stc
sahf
mov
fcomps
mov
test
dec
int
or
xchg
jecxz
xor
mov
imul
sti
jp
mov
xorl
push
dec
stos
out
xor
into
ja
mov
add
icebp
lods
mov
jno
daa
push
mov
cli
adc
out
sbb
int
sbb
movsb
jae
xchg
movsb
inc
imulb
shll
push
sbbb
dec
mov
icebp
xlat
js
iret
sti
xor
sarb
sarb
ljmp
xor
inc
or
inc
inc
xchg
lret
clc
jecxz
movsl
sbb
dec
bound
adc
stc
scas
shrb
mov
push
mov
in
fnsave
fst
and
sti
ds
adc
cld
out
test
lock
das
shlb
repnz
aaa
pushf
and
dec
mov
inc
adc
das
ja
outsl
inc
popa
pushf
add
dec
popf
es
jae
jbe
xor
repnz
scas
and
jb
imul
or
movsb
add
dec
mov
push
mov
loopne
out
jae
or
pop
push
or
sti
add
in
jg
pop
adc
or
mov
rcr
mov
loope
jae
adc
cmp
movsb
pushf
out
mov
stos
jno
dec
push
roll
scas
mov
xchg
and
pop
pop
adc
pushl
cs
sub
push
fwait
loop
inc
cmp
repnz
lahf
in
jge
mulb
mov
jp
add
aad
stos
inc
mov
movsb
in
mov
and
mov
iret
adc
xor
lcall
movswl
inc
xchg
inc
ficompl
lock
push
out
movsb
lahf
adc
jl
addb
sti
shrb
add
lcall
add
pushf
shrl
inc
lcall
xor
inc
aas
mov
outsb
xor
mov
pop
stos
in
mov
addr16
orb
bound
aaa
mov
pop
icebp
leave
aas
jle
push
rclb
jbe
xor
push
mov
ljmp
push
inc
mov
xchg
pop
ss
jge
mov
jg
sbb
xchg
fstl
hlt
or
cmpsb
adc
add
add
pusha
adcb
adc
int
add
mov
or
inc
leave
les
mul
adc
and
mov
movsb
insb
decl
pushf
jnp
and
adc
ret
mov
xchg
adc
mov
lahf
add
xor
loope
and
loopne
mov
scas
fstpl
add
add
sahf
popa
pop
xor
loope
lret
mov
dec
adc
add
cmp
xchg
cmp
jl
fldl
push
mov
lods
cmp
in
in
imul
mov
fsubrs
sbb
aas
adc
add
sbb
mov
ss
mov
clc
push
inc
jg
dec
xor
mov
aam
imul
hlt
dec
xor
or
jg
adc
inc
aam
loop
aas
push
or
ficomps
push
dec
fwait
push
mov
sbbl
pop
rcl
outsb
push
mov
mov
sti
dec
bound
in
shrl
sub
sti
arpl
sbb
lock
xchg
jg
mov
inc
arpl
cmp
test
ret
sbb
sbb
jle
add
ljmp
xor
add
cmp
loope
test
xor
or
mov
out
push
mov
jge
icebp
sbbb
push
inc
pushw
adc
and
movsl
stos
mov
adc
cmp
xchg
or
cld
push
adc
dec
cmp
mov
xor
or
shll
mov
aam
arpl
sbb
fisubs
push
pop
pop
je
scas
ss
and
loopne
aad
hlt
repz
je,pn
add
cltd
out
pop
pop
or
push
push
imul
rcl
loop
mov
pop
push
cmpsb
sti
add
repnz
jns
mov
xchg
jne
mov
push
or
sub
or
cld
cmp
aas
movsb
xchg
jmp
jge
stos
jmp
ficoms
adc
jmp
pop
loope
mov
sti
or
int
mov
fmull
mov
in
inc
lods
pop
mov
xchg
xchg
aam
loop
enter
nop
xchg
jg
mov
stos
cmpl
aad
cmc
ja
mov
mov
pop
ja
aam
loope
sti
push
loope
test
xchg
push
sub
loopne
mov
pop
fisttpl
mov
lret
pusha
scas
push
repnz
aam
jns
pop
sub
icebp
xor
mov
sbb
movsb
pop
rcrb
ljmp
std
out
xor
bsf
sbb
pop
fwait
or
mov
push
push
popf
cmpb
lcall
fwait
mov
popf
push
das
out
push
fisubrl
xchg
xchg
xor
je
xchg
xor
fidivrs
fsubrl
rcrb
in
fcomi
lret
shll
mulb
sbb
mov
je
xchg
sub
dec
or
aaa
pop
repnz
test
in
mov
and
mov
push
int3
and
fisubs
icebp
mov
add
mov
inc
outsl
das
pop
jbe
dec
adc
sub
and
xor
xor
add
jp
jge
sub
dec
mov
cmpsl
adc
test
addb
cmp
and
div
or
dec
inc
mov
pop
pop
stos
xor
mov
movsb
stos
and
test
aas
and
mov
mov
in
adc
push
loope
les
scas
dec
sub
int3
jmp
cmp
stos
out
add
and
lea
repz
xor
mov
test
fcomi
test
hlt
mov
fwait
sarb
sahf
fdivp
popl
jmp
xchg
fisttpll
pop
out
adc
popf
movsb
dec
out
and
jmp
imul
mov
sbb
je
mov
ljmp
clc
fcmovnu
push
cmpsb
xorl
xchg
dec
sub
pusha
mov
int3
dec
fisubrl
jae
pop
test
ficoml
and
stc
cld
cwtl
xchg
js
sarl
mov
insl
into
mov
popa
test
push
shl
mov
xor
imul
out
lods
pop
test
sbb
testb
jae
pop
pushf
leave
sbb
mov
fidivrl
ljmp
dec
cmc
incb
or
sti
mov
repz
pop
scas
sub
push
into
push
push
insb
icebp
imul
test
dec
or
mov
pushl
out
push
dec
inc
and
mov
ds
pop
data16
sub
test
xor
stos
mov
xor
mov
int3
push
push
push
add
sar
sub
loop
arpl
test
xor
lods
cmpl
inc
sti
push
das
lret
cmp
jb
inc
dec
out
test
mov
inc
rcll
pop
icebp
xor
fldenv
mov
mov
popa
push
imul
nop
jo
divb
inc
imul
mov
js
sbb
sbb
mov
dec
push
push
or
inc
mov
int3
xor
push
mov
cmp
inc
movsl
pop
sbbb
int
pop
xchg
inc
add
cmp
jl
jp
jmp
pop
mov
dec
and
adc
inc
movsb
in
adc
fs
dec
pushf
mov
dec
sahf
sarl
add
mov
cmp
stc
bound
stos
inc
pop
stos
fisubrl
mov
jnp
push
push
aam
cmp
mov
jb
movsb
cs
adc
pop
or
jmp
dec
pop
frstor
leave
sub
xor
test
mov
jmp
jno
xor
int
mov
pop
add
push
mov
cld
pop
cmp
and
push
adc
ds
rolb
dec
mov
push
lock
aaa
cmp
xchg
ss
int
ret
movups
add
popf
inc
xchg
lock
and
mov
and
xor
mov
mov
and
and
pop
mov
inc
push
pop
fbstp
outsl
and
xchg
sub
inc
imul
out
aas
inc
jno
pop
cmpsb
andb
mov
mov
ljmp
dec
xchg
icebp
sub
ljmp
rcr
mov
fbstp
push
sbb
push
pusha
movsb
add
xchg
push
mov
sti
adcb
sbb
mov
loopne
and
aaa
pop
mov
jmp
jns
mov
and
lret
es
icebp
jnp
std
sub
es
in
stos
sbb
andb
mov
fsubs
lds
cmp
jne
dec
xor
in
in
nop
jg
out
push
out
daa
fcom
rolb
and
or
xor
xor
int
leave
push
jne
inc
repnz
movsb
icebp
lret
daa
xorb
imul
orl
dec
scas
cld
mov
jle
in
mov
das
fidivs
adc
mov
mov
std
xchg
enter
cmc
xchg
rolb
push
loopne
cli
mov
push
mov
movsb
push
imul
pop
push
jp
cmp
push
xchg
inc
aam
adc
push
dec
bound
xchg
pop
adc
clc
mov
add
btr
in
scas
adc
cmp
jae
hlt
pusha
lods
scas
cs
std
mov
ret
xor
add
mov
mov
in
jge
xchg
cmp
or
sarl
aad
push
lcall
test
lea
jmp
inc
sub
or
jp
inc
loope
jb
cmp
insb
jle
cli
fnstcw
mov
daa
sub
ret
push
shrb
push
arpl
lock
out
or
and
pop
mov
sti
push
jae
stos
je
sub
or
add
xchg
psllw
lock
or
lods
subb
lret
adc
and
or
inc
daa
xchg
jb
outsl
das
and
jnp
out
mov
sti
push
add
aad
mov
rolb
adc
arpl
fstl
pop
hlt
lds
push
adc
das
ret
dec
stos
imul
jmp
movsb
out
jp
filds
movsl
push
nop
adc
movsb
xchg
fwait
mov
inc
stos
or
jl
incl
stos
cwtl
fcoml
pop
nop
outsl
mov
and
adc
int
cltd
jnp
push
cli
outsb
js
xor
jge
and
pop
add
int
nop
adcl
sbb
dec
add
push
inc
lret
sub
cmp
fsubl
push
movsb
mov
dec
and
push
sbbb
ss
mov
loop
or
xor
mov
test
bound
xor
popa
pushf
repnz
movsb
xchg
sub
xchg
xor
movsb
add
jnp
ret
push
mov
dec
imul
repz
and
das
sahf
and
adcb
scas
mov
pushf
cli
shrl
loopne
cmp
and
ss
repz
xor
jnp
sub
jp
add
cwtl
sub
mov
mov
repz
movsb
imul
add
push
outsb
push
or
pop
and
shrl
cwtl
cwtl
and
push
mov
cld
pop
popa
mov
inc
mov
cld
xlat
dec
cld
mov
ror
sbb
sbb
push
out
inc
mov
xor
push
jae
cmp
sbb
cs
movsb
ds
or
jle
push
repnz
mov
stos
ret
push
lret
icebp
dec
fldl
and
test
mov
pop
push
adc
mov
testb
cwtl
push
aam
pop
and
push
add
lock
pop
bound
sub
mov
andl
jb
sti
out
mov
mov
mov
aam
das
rcll
das
nop
mov
testl
xor
jno
push
lds
scas
push
pusha
mov
sarl
pop
xor
add
das
mov
stos
mov
add
and
dec
shl
in
ficomps
push
pop
movsl
stc
push
adc
pop
mov
inc
imul
data16
xchg
sahf
mov
iret
clc
bound
inc
movsb
jl
in
mov
pop
loope
enter
stos
fdivs
dec
pop
or
sub
xchg
dec
sbb
scas
outsb
or
fidivs
aad
inc
in
ss
inc
and
stc
jmp
and
das
mov
clc
or
push
and
add
clc
cmp
lods
ljmp
out
icebp
call
push
pop
clc
xchg
mov
xor
lret
cmpl
pop
ja
std
shl
xor
or
int
mov
les
outsb
lods
mov
std
pop
rorb
jg
stc
pop
fdiv
cmp
orl
repnz
push
outsl
icebp
mov
push
lcall
imul
sub
push
add
inc
popa
pushf
cmp
and
ljmp
push
xchg
testb
cmp
add
pop
push
ds
inc
lahf
sti
inc
pop
sub
jae
adc
push
xchg
ljmp
std
ret
lret
mov
icebp
adc
adc
push
and
ret
or
mov
mov
dec
adc
shlb
dec
sub
cmp
pop
jge
movsb
inc
add
stos
mov
inc
fists
dec
dec
jge
fisubrl
icebp
movsb
pop
add
bound
sarl
sub
cmp
sbb
xchg
pop
mov
gs
loope
adc
pop
int
mov
cmp
jmp
dec
sub
mov
pop
mov
ret
ficoms
icebp
dec
push
mov
mov
adc
mov
mov
xor
dec
sub
aas
inc
push
fcomi
int
push
add
movsb
nop
lret
out
scas
push
pop
pop
mov
pop
fildl
xchg
sti
popa
or
jle
insl
dec
pop
sub
jge
scas
loopne,pt
mov
sbb
das
and
mov
push
adc
xchg
cwtl
inc
scas
rolb
inc
cmp
fnstsw
gs
inc
sar
loopne
dec
xor
pop
mov
jmp
push
adc
lret
mov
jg
rcrl
xor
cwtl
or
dec
in
movsb
nop
pop
or
sbb
loope
mov
push
dec
lret
jge
jb
mov
subb
punpckhdq
mov
xchg
inc
outsb
hlt
mov
dec
jmp
xchg
mov
lret
adc
dec
cmp
std
daa
adc
add
pop
mov
daa
ret
add
lods
jne
cltd
jge
insl
and
fisubrs
dec
add
jp
js
in
cld
mov
mov
adc
sar
and
pop
mov
popa
outsb
mov
subl
xchg
stc
dec
loop
mov
mov
adc
push
ds
and
pop
in
repz
js
pop
fs
clc
mov
jg
fistpl
mov
loop
loopne
pop
hlt
ret
int
dec
gs
icebp
adc
dec
push
jae
fnstenv
inc
mov
es
test
scas
out
mov
mov
in
lcall
sub
xorl
inc
adc
jae
pop
mov
mov
inc
sbb
movsb
test
pop
mov
arpl
sbb
aas
fs
fidivrs
ds
or
pop
fdivrl
test
stc
and
or
sti
aam
cmp
inc
sub
scas
arpl
aas
test
xchg
xor
movsb
jl
dec
sar
lock
stc
and
test
or
icebp
pop
mov
mov
stos
outsb
mov
lret
rcr
out
movl
das
inc
add
jmp
fidivrs
mov
adc
adc
mov
loop
movsl
jge
imul
das
sbb
out
inc
adcl
loop
jb
imull
pop
insb
pop
mov
lods
ficoml
repz
add
inc
loope
inc
dec
faddl
sahf
mov
sbb
xor
outsb
mov
jae
push
loope
and
mov
loop
faddl
lds
inc
rcrl
push
mov
clc
inc
popa
mov
test
clc
cltd
sbb
mov
clc
mov
push
cli
mov
mov
lahf
imul
pop
mov
dec
mov
or
mov
out
sahf
add
jne
jmp
aas
sub
pop
jb
mov
add
adc
sub
mov
pushf
fbld
stos
sub
jno
test
cld
adc
jae
mov
mov
add
lret
das
dec
cli
lcall
xchg
addb
mov
jbe
stc
push
in
ljmp
inc
movsb
shrb
inc
inc
ljmp
push
repnz
and
sbb
xchg
icebp
sti
bound
nop
xor
in
cmp
sub
ja
addl
cli
xchg
adc
adc
fnstcw
adc
arpl
repnz
and
mov
aas
jmp
dec
cs
hlt
loop
cmp
aaa
ds
pop
dec
push
cli
add
xchg
mov
pop
repz
mov
sbb
lahf
cmc
subb
mov
inc
aas
adc
dec
cmpsl
out
mov
mov
sahf
shll
sub
inc
sbb
std
mov
jnp
mov
pop
or
pop
outsb
stos
cmpsl
cmp
fistps
mov
icebp
jmp
cs
adc
test
and
xor
mov
push
inc
jecxz
in
fnstsw
or
ret
sarl
into
or
mov
std
dec
test
test
and
shrb
lcall
das
scas
xchg
xor
push
loope
repnz
xor
repnz
lahf
adc
sbb
inc
mov
mov
test
iret
dec
add
mov
aam
inc
xor
mov
cli
cmpsb
adc
or
fwait
shrl
mov
pop
nop
popa
xchg
jnp
sbbb
inc
loop
xor
rcll
cmp
repnz
cmp
sbb
mov
cmp
fdivr
bound
mov
outsb
jo
mov
dec
in
inc
push
nop
cmp
pushf
pusha
mov
call
icebp
pop
lcall
lock
jno
pop
rcll
sub
pop
fisttpll
lret
icebp
xchg
mov
repnz
mov
je
and
aam
adc
fsubl
add
mov
outsl
dec
and
in
stos
pusha
jne
cli
push
mov
das
jp
or
add
sti
pop
mov
fs
add
jp
fbld
inc
mov
push
push
inc
add
cwtl
incb
add
sbb
dec
loop
jecxz
mov
loopne
and
push
mulb
cmp
xor
cmp
jecxz
movsb
adc
push
xorl
mov
or
sbb
lea
or
bound
adc
xchg
stos
bound
mov
or
icebp
mov
test
push
aam
push
out
cli
cmp
inc
sub
ljmp
dec
sti
mov
mov
popa
movsb
dec
insl
lcall
insb
cmpsl
mov
pop
and
test
stc
loope
sub
mov
pop
aad
lcall
and
test
mov
xor
addb
xlat
repz
loope
aaa
imul
mov
cmp
pop
add
daa
movsl
arpl
jae
mov
mov
sub
rcrl
cwtl
adc
mov
jg
mov
jb
sub
xor
jecxz
enter
aaa
xor
xorb
int
inc
and
lcall
ret
mov
cmp
jne,pt
cmpsb
add
xor
jge
rolb
inc
repz
cmp
inc
loope
inc
xor
arpl
enter
popf
jl
fs
sbb
mov
sbb
fidivrs
mov
mov
movsl
adcb
and
lock
inc
cmp
stos
outsb
cmp
cs
mov
movsb
add
mov
fnsave
xor
sti
fmul
in
in
or
adcb
sub
xor
xor
xor
or
fwait
ss
testl
xchg
repz
pop
mov
push
addl
mov
stos
xor
sub
mov
ss
pop
jnp
scas
pop
repnz
out
mov
or
mov
xor
mov
add
sbb
push
mov
jmp
adc
fs
sbb
repnz
ret
daa
pop
or
ljmp
ljmp
enter
lods
mov
xchg
sti
mov
mov
xchg
xor
addb
sub
rorb
pop
xchg
push
xchg
dec
cmp
bound
movsb
rcll
mov
xchg
scas
mov
dec
mov
sub
jl
adcl
add
les
push
mov
add
fisttps
movb
cmpb
scas
aaa
sub
xor
xor
pushf
loop
daa
xor
xchg
xor
insl
ret
mov
adc
push
push
std
sbb
xorl
pop
adc
jecxz
ret
sbb
call
cmp
cmc
add
das
adc
and
loop
jle
daa
mov
mov
in
scas
push
sbb
lods
pusha
jle
repnz
or
mov
repz
cmp
xlat
lods
loop
mov
add
pop
xchg
cmp
inc
lock
ret
outsb
mov
clc
and
repnz
mov
xchg
or
adc
sub
pop
sbb
cmpsl
dec
and
ret
pop
jo
jae
icebp
or
pop
jl
icebp
aas
xlat
jmp
subl
rcll
mov
inc
mov
addr16
dec
sbb
jecxz
xchg
or
add
adc
or
xor
movsl
icebp
xchg
inc
sbb
dec
mov
sti
push
sbb
xchg
hlt
mov
es
xor
gs
xchg
adc
adc
pop
inc
pushf
dec
cld
cmp
or
adcb
mov
mov
pop
mov
mov
push
clc
dec
inc
into
arpl
aaa
test
aas
fidivrs
mov
inc
sbb
push
out
repnz
push
pop
mov
outsb
movsb
mov
loope
in
daa
lret
cmp
xchg
add
jnp
cmp
inc
pop
pushf
pop
add
xchg
mov
mov
icebp
mov
pop
daa
mov
jg
push
mov
cmp
out
movsb
sub
mov
icebp
sub
dec
push
nop
jb
cmp
mov
je
loope
inc
sbb
sar
cmp
cmp
and
xor
lahf
das
bound
adc
pop
pop
addb
pop
and
jne
loop
mov
fldl
pop
xchg
jmp
cmpl
lock
jmp
push
xor
inc
shlb
fcmovbe
daa
adc
fisubs
push
ljmp
and
int3
out
xchg
sbb
mov
mov
outsl
lock
arpl
pop
mov
push
sti
jp
orb
and
pop
mov
and
pop
loopne
sbb
jo
sub
mov
pop
sbb
mov
mov
mov
lods
and
mov
sbb
mov
repnz
xor
mov
movsl
mov
mov
or
mov
repnz
cmp
add
aas
cmpl
in
shl
lahf
push
sbbb
mov
cld
loopne
jl
vmwrite
xor
cmp
mov
inc
lods
je
pop
push
push
and
xchg
scas
pop
fcmove
inc
adc
push
loope
adc
std
lods
cmp
addl
mov
dec
add
aas
outsb
pop
xor
pop
jo
xchg
dec
push
rcll
sahf
dec
and
jle
and
ret
push
push
jb
cmp
scas
repnz
es
add
jecxz
aas
mov
sbb
out
cmc
into
cmp
dec
test
inc
fwait
sar
fistpll
mov
cmc
sub
or
movb
sarl
fdivl
sub
loope
xor
mov
je
pop
xor
xor
mov
mov
jae
jge
iret
icebp
inc
sub
and
mov
jnp
xor
aaa
adc
jno
jo
loope
cli
adcl
lock
mov
mov
test
jo
xchg
mov
xor
mov
call
hlt
mov
sbb
mov
push
pusha
adc
push
dec
mov
shrl
mov
outsl
mov
lretw
aas
pop
mov
add
pop
mov
adc
lock
inc
daa
xchg
pop
inc
xlat
push
ret
mov
adc
repnz
xor
push
sub
sahf
rcl
repnz
addr16
lods
divl
cwtl
mov
movsb
xchg
jmp
pop
xor
inc
pushf
cmp
shlb
repnz
mov
xchg
dec
mov
int
mov
mov
loope
lods
xchg
push
cmc
pop
outsb
hlt
xor
adc
mov
sbb
xchg
push
mov
mov
dec
inc
mov
ss
push
stos
out
shlb
cmp
loope
or
jmp
and
dec
pop
mov
mov
int
mov
lret
js
mov
mov
jno
test
jg
lcall
jbe
cmp
fnsave
push
and
adc
scas
and
push
lret
xchg
nop
push
test
loopne
and
inc
add
add
add
mov
scas
out
mov
ljmp
jae
mov
hlt
pusha
adc
mov
jg
sub
xchg
lock
xor
adc
test
adc
adc
and
pop
mov
pop
push
inc
pushf
aad
jno
push
stos
mov
aam
xlat
sub
sar
mov
sbb
fildll
pop
in
arpl
test
in
data16
pop
loop
push
and
orl
call
jmp
jg
mov
inc
push
aas
add
or
mov
sub
ds
jne
and
inc
or
lods
sub
sub
icebp
mov
pop
repnz
jne
lcall
nop
out
cmp
movsb
lock
aas
adc
inc
lret
cmp
jne
sub
push
push
mov
jo
push
das
negl
in
cmp
cmp
scas
mov
push
jb
nop
cli
adc
popl
les
scas
jle
loope
data16
xchg
stos
notl
cld
fildll
sub
arpl
loopne
xor
jb
ss
push
push
sbb
mov
fldt
sub
and
mov
mov
cs
addr16
adc
psllw
outsb
mov
hlt
dec
call
mov
jp
pop
ds
hlt
xchg
rcl
dec
sahf
lods
fidivrs
inc
rcr
xorl
sub
mov
push
icebp
roll
mov
or
mov
dec
dec
and
cmc
aaa
push
cltd
pop
out
lret
mov
adc
test
cmc
mov
repnz
and
daa
push
fidivrl
jno
mov
aas
ret
mov
mov
sbb
sub
dec
and
push
in
jnp
jle
ja
jbe
mov
mov
jno
daa
adc
cmp
cli
fnsave
cwtl
jmp
jl
out
mov
das
adc
cs
xor
jo
or
add
stos
mov
jns
into
imul
ss
movsb
push
pop
icebp
repz
aaa
out
sbb
lods
pop
jae
fdivp
mov
testl
scas
fisubrl
mulb
mov
clc
in
mov
daa
hlt
lods
insb
push
mov
inc
dec
sbb
test
call
jb
mov
fldcw
out
fs
movsb
xchg
cli
aaa
lods
call
jne
ds
mov
aas
sti
insb
lea
dec
bound
icebp
fcmovb
push
andb
mov
mov
in
and
dec
inc
jno
push
cli
out
adc
aas
mov
pop
daa
test
mov
lock
in
xor
add
inc
sub
jle
cli
sub
jbe
pushf
inc
or
push
fisttpl
cmpsb
es
inc
mov
lea
cmp
mov
sub
sbb
repnz
sbb
push
jg
movsb
stos
fcompl
mov
mov
out
dec
mov
jno
adc
pop
int3
mov
mov
mov
inc
and
aas
cmp
roll
add
pop
cld
jae
int
adc
dec
push
aam
and
nop
mov
lock
mov
iret
dec
cmc
adc
mov
andb
xchg
shrb
pop
aas
mov
mov
imul
lods
adc
inc
int
in
mov
inc
mov
jno
fldl
clc
sahf
sbb
xor
pusha
and
jle
sti
dec
icebp
dec
sbb
roll
xor
jle
jne
xchg
xchg
bound
cmpsl
push
xchg
dec
jle
loop
shll
mov
aas
repz
xchg
mov
adc
fstpt
mov
mov
cs
mov
cli
jo
ljmp
lret
nop
cmp
jle
ss
bound
push
push
sub
lret
repnz
daa
addl
inc
idivl
mov
movsb
repz
pop
shrl
lcall
and
icebp
pop
xor
xor
pusha
push
imulb
jno
movsl
lret
or
push
mov
mov
pop
and
add
sbb
inc
push
sbb
push
nop
popf
stos
sbb
cmp
faddp
push
sti
rol
mov
fnstcw
lcall
adc
gs
movsb
lret
gs
cmp
in
ds
lods
xchg
and
insl
pop
sbb
inc
sub
inc
push
xchg
mov
push
xor
mov
mov
stos
jbe
sbb
orl
jns
call
ds
jmp
inc
or
mov
lods
pop
movsb
mov
inc
dec
dec
ret
add
sub
data16
mov
push
and
pushf
bound
iret
shr
cmp
mov
hlt
and
insb
jle
jbe
mov
test
shlb
mov
out
rorl
scas
and
pushl
sub
dec
ret
popf
fcmovbe
adc
pop
ds
imul
cmp
cmp
push
leave
mov
pop
and
mov
inc
cmp
xor
or
decl
xor
movsb
xor
mov
mov
or
sbb
jb
inc
test
rolb
xchg
mov
std
lods
mov
test
xor
fdivl
mov
repnz
mov
jnp
jnp
xor
sarb
mov
pop
sti
inc
je
cmp
shl
div
cmp
dec
push
jo
sub
cmp
xor
outsl
test
mov
xchg
je
xor
repnz
mov
repz
mov
repnz
hlt
mov
subb
jecxz
cmc
incb
mov
ret
ffree
rcrl
push
add
xchg
jg
js
sub
jno
pop
xor
add
fs
out
adc
sub
dec
lock
roll
dec
dec
arpl
add
or
in
adc
mov
mov
fisttpl
mov
out
cs
pop
xchg
incb
repnz
dec
push
push
xchg
sub
push
xchg
mov
mov
scas
into
sbb
cmp
fidivs
mov
sahf
jo
test
push
pop
stos
jmp
repz
adc
xor
fdivl
mov
sub
jg
popl
inc
inc
push
loope
test
mulb
fstl
cmp
inc
dec
shlw
add
movsb
dec
add
push
xchg
shrl
xchg
and
adc
push
incl
scas
out
mov
adc
push
in
mov
shll
dec
jmp
add
cmp
faddl
fldenv
sbb
inc
sub
sbb
popa
rcrl
mov
sbb
sub
stos
lcall
loopne
sti
sti
shll
aas
cli
ret
adc
aam
insb
mov
fdivrl
lds
clc
xchg
pop
push
insb
push
insl
in
fstp
mov
xchg
ret
mov
lock
ficoml
jle
xor
mov
rorb
ljmp
pop
mov
lret
call
and
inc
dec
sbb
loop
xor
ret
lods
mov
lahf
add
adcb
es
imul
mull
push
mov
mov
addb
push
pop
andb
inc
sub
mov
nop
mov
xorl
add
jmp
xchg
push
dec
add
imul
and
mov
pop
cmp
pop
imul
fsubs
sub
xchg
add
aam
pop
arpl
cmp
or
insb
jg
out
cs
xor
push
int
or
mov
loope
dec
xchg
jp
mov
ja
jge
fmull
mov
adc
push
shll
pusha
popa
mov
int
loopne
rcrl
in
xchg
jb
iret
std
loop
test
push
add
mov
fildll
std
cld
fnstsw
in
dec
and
push
add
xor
push
test
mov
mov
sbb
sbb
sub
jno
cld
test
test
and
adc
xor
cmpsl
xor
add
cltd
or
xchg
mov
mov
mov
cmp
test
pushf
add
int3
stos
or
movsl
mov
and
enter
add
xor
adc
je
in
stos
addr16
rcrl
repnz
mov
xchg
icebp
pop
loopne
pushf
xor
mov
xor
cmp
add
jne
mov
jo
movsb
repnz
clc
mov
sarb
or
mov
or
mov
add
cmp
push
jb
les
ds
cmp
mov
jmp
mov
loop
jg
add
sarl
push
dec
or
inc
mov
hlt
pop
jmp
inc
mov
daa
push
cmc
xchg
sbb
cs
das
mov
cmpsb
bound
jp
xorb
lock
test
push
cmp
movsb
jne
and
and
xchg
icebp
xchg
arpl
iret
lret
or
movsb
jg
fstl
repnz
mov
cmc
add
mov
inc
sub
and
cmp
jb
and
pop
pop
mov
out
xchg
cmp
pop
loope
popa
mov
cmp
imul
xor
loop
mov
jmp
sahf
push
sub
dec
push
shrl
out
loope
loopne
push
or
aam
and
mov
bound
loopne
adc
stos
imull
orl
loopne
lcall
mov
jnp
dec
stc
cmp
jmp
inc
enter
mov
and
popa
ds
mov
cmpsb
out
sub
mov
lcall
and
ds
pop
cld
adc
add
out
mov
and
movsb
or
es
mov
cmp
test
mov
mov
lea
dec
mov
inc
mov
jp
xor
int
loopne
jl
push
repz
rcll
enter
loope
jo
loop
mov
jbe
jmp
jb
arpl
daa
pop
nop
aad
sbb
inc
data16
rorb
xchg
icebp
xchg
cmpsl
loopne
cli
xchg
in
popa
mov
shll
add
icebp
lods
mov
lahf
push
fucomip
sarb
repz
cmpsb
pusha
hlt
inc
jno
popf
pop
xchg
add
adc
push
and
stos
add
enter
push
lods
push
xchg
mov
add
mov
dec
jae
adc
sub
push
fmuls
jge
rolb
sbb
mov
and
ja
jo
call
xchg
push
aam
mov
nop
ret
push
mov
lret
mov
jmp
out
xchg
push
inc
mov
pop
lods
addb
sti
sahf
cmp
nop
sbb
enter
std
jb
sub
repz
fs
xlat
repnz
inc
out
call
pop
adc
aas
cmpsb
ds
std
ljmp
jecxz
jb
pusha
xchg
mull
inc
call
loop
hlt
test
lret
push
sbb
cmp
sub
cmpsb
imul
std
and
sub
js
cmpl
es
andb
lahf
mov
ret
inc
sub
mov
dec
adc
sahf
mov
jo
scas
and
jmp
pushf
pop
ds
rolb
lret
jo
loope
push
xor
in
jo
xchg
in
test
loope
and
stos
stos
imul
jp
jg
mov
cmp
fnsave
ds
adc
mov
mov
imul
shrl
or
mov
bound
daa
jns
adc
sub
aas
js
das
adc
aas
in
shll
insl
clc
daa
int
push
andl
mulb
push
out
nop
jns
movsb
cmp
jno
xchg
pop
aas
mov
pop
hlt
movsb
dec
push
pusha
sub
popf
pop
sbb
lock
lahf
out
mov
in
push
xchg
dec
cld
and
pop
lock
push
rcrl
pop
mov
movsb
loope
in
das
shl
inc
xchg
loope
mov
cli
in
dec
xchg
push
jbe
adc
mov
lock
pop
sub
ret
add
inc
js
xchg
out
ljmp
xor
mov
push
and
imul
or
mov
push
add
adc
mov
adc
loopne
pop
bound
mov
xor
mov
daa
inc
int3
cld
mov
jg
mov
aas
push
adc
jae
repnz
jmp
hlt
aam
fdivrs
or
sub
adc
outsb
fisubrs
mov
sub
push
movsb
rcl
lcall
shlb
xor
mov
jecxz
adc
lock
push
lock
fwait
idivl
arpl
test
ret
mov
mov
aaa
std
nop
adc
pop
movsbl
add
and
add
call
insl
adc
pop
jno
dec
lods
fnstenv
sub
enter
xor
sbb
out
sbb
or
inc
mov
push
xor
jmp
fmull
add
pop
cs
imul
dec
cmp
jnp
data16
push
jo
add
cmp
stos
outsl
push
sub
lea
push
out
xchg
cli
pop
cmovle
lock
mov
arpl
repz
pushf
arpl
inc
cmpb
and
mov
out
adc
scas
dec
jl
mov
mov
mov
push
add
dec
fwait
stc
or
nop
cli
pop
xchg
xor
mov
fisttpll
movsb
sarb
jmp
movsl
mov
push
ds
ljmp
and
mov
ljmp
push
aas
or
scas
adc
ljmp
mov
daa
lds
mov
xchg
repnz
ss
and
pop
pop
dec
mov
into
lahf
lea
nop
std
mov
pop
imul
subb
sub
cmpsb
lock
ficoms
cmc
or
dec
dec
dec
or
xchg
lock
out
cmp
xor
in
mov
sub
stos
das
mov
xor
mov
test
imul
and
cmc
les
jns
cmpsl
jnp
or
inc
mov
sti
fistpl
scas
cmpsb
and
mov
push
loop
push
shlb
rcrl
mov
cmp
ss
sahf
adc
int
xchg
lock
sarl
pop
or
mov
lcall
jecxz
int3
sub
pusha
xor
jnp
push
sub
stos
movsl
mov
sub
push
sub
jecxz
jno
sti
push
pop
cmp
sub
sub
lret
mov
mov
push
adc
mov
sub
cmp
movsb
in
mov
stc
add
or
mov
push
adc
push
add
or
mov
adc
rclb
or
cmp
dec
fstpt
icebp
push
adc
push
lods
nop
xchg
mov
pop
andb
ret
movsl
and
mov
add
loope
ljmp
add
push
cmp
loope
push
loopne
mov
push
cmp
mov
mov
lret
cltd
js
sub
lret
adc
movsb
pusha
dec
mov
jl
xchg
fidivl
mov
arpl
mov
mov
add
mov
mov
rol
cmp
sub
adc
mov
nop
imul
mov
bound
push
xchg
aas
shlb
and
or
cmpsl
cmp
cs
sbb
mov
lds
insl
jl
jg
mov
idivb
int3
stos
jae
outsb
aam
adc
test
adcb
imul
int
cmp
inc
outsb
ljmp
dec
push
popa
or
adc
adc
mov
xchg
imul
push
jo
cmp
cltd
mov
mov
shll
pop
pop
inc
push
mov
sub
jo
int3
xchg
aam
fucom
xchg
rep
mov
test
idivl
xor
cmp
xor
mov
mov
pop
mov
dec
scas
cmp
push
in
out
fsubl
pop
leave
aas
aas
js
xor
scas
sarl
xor
daa
lock
loop
sbb
lods
ficoms
and
jmp
ficoms
bound
ds
rcrb
adc
adc
dec
jnp
push
push
pop
adc
add
pop
out
popf
clc
fwait
jne
cli
xchg
jp
or
sub
adcb
pop
test
sbb
mov
mov
sub
xchg
mov
loop
mov
or
sbb
pushf
mov
inc
nop
sti
push
and
mov
adc
sarl
out
cli
insl
stc
jbe
and
icebp
shrl
aaa
pop
jno
inc
pop
push
pusha
dec
pushf
mov
push
dec
rolb
cmp
addr16
sub
subl
aad
lahf
pop
jp
pop
das
adc
push
xor
sub
sbb
loopne
push
add
mov
movl
roll
jb
sbb
sub
xlat
popa
test
and
push
xor
xor
fdivp
cmpsb
iret
jns
adc
mov
out
hlt
lea
jns
aam
dec
and
adc
loope
ffreep
lds
in
xor
xchg
nop
test
enter
mov
in
cltd
mov
pop
rorb
mov
pop
cld
test
ja
mov
and
push
fnsave
xor
dec
mov
adc
xor
xchg
dec
shlb
fcom
pop
adc
pop
icebp
mov
adc
dec
cmp
sarb
fsubl
cld
xlat
dec
sub
xor
cmc
and
add
mov
mov
aaa
or
rcrb
mov
jns
stos
pop
sahf
add
push
daa
or
mov
sbb
mov
xchg
test
rclb
aam
popa
rorl
and
enter
mov
rorb
xchg
jmp
sub
daa
cld
mov
mov
adc
ficoms
adc
inc
fstpt
mov
sub
movsl
lds
jae
mov
jge
inc
fwait
stos
mov
sbb
jns
stos
jmp
das
mov
xabort
adc
stos
stc
dec
cmc
repnz
and
sbb
pushf
loope
sub
notl
pop
pop
sbb
mov
inc
outsb
ds
mov
xor
dec
insb
xchg
lods
das
xor
aas
push
stos
and
xor
ss
mov
push
push
dec
mov
and
mov
cmp
add
mov
jmp
dec
loopne
enter
fcoml
getsec
aam
push
repnz
lcall
mov
mov
mov
loopne
inc
and
shlb
xor
jp
mov
cmp
lret
dec
xchg
icebp
push
loop
andb
loop
dec
jg
mov
xchg
shlb
rdtsc
test
mov
jmp
mov
mov
push
mov
cld
lret
sahf
push
test
xor
stos
cmc
jmp
or
std
inc
cmp
jg
adc
lcall
pop
mov
movsb
mov
scas
inc
addb
outsb
movsl
xor
cmpsl
test
adc
sub
lock
clc
rcrl
ja,pt
cld
lcall
cltd
jo
xor
xor
sub
add
sub
jecxz
lret
aas
mov
or
xor
jae
xor
and
mov
sbb
xor
fucom
scas
ss
pop
loopne
pop
xor
insl
add
sbbb
sub
sub
clc
add
mov
fiaddl
jo
inc
mov
dec
xor
cwtl
jle
into
jb
das
xchg
mov
movsb
and
and
mov
push
and
movsb
daa
in
xor
ljmp
mov
and
stos
into
inc
mov
fsubr
repz
movsb
adc
and
dec
pop
and
inc
jmp
mov
ljmp
cmc
sbb
movsb
xchg
pusha
sbb
xor
or
xor
cmpl
rolb
lret
in
sahf
out
mov
push
sti
loopne
dec
inc
bound
dec
in
push
std
xor
cmp
xchg
test
xor
xchg
sbb
sub
pop
sbb
in
jl
aas
sub
movsl
int
aas
and
cmp
push
outsb
movsl
ds
jno
aaa
sbb
mov
push
xor
add
movsb
je
fsubs
mov
and
cmp
xor
shlb
inc
mov
mov
dec
cmc
loopne
mov
push
mov
xlat
xor
ja
cmp
std
mov
inc
insl
mov
outsb
sbb
insl
pop
adc
loop
cld
sub
and
sbbb
stc
xchg
inc
or
mov
adcb
lds
jno
push
aam
pop
sarl
add
test
sbb
nop
fsubr
fidivl
inc
or
mov
cmpl
dec
jbe
inc
dec
clc
add
xor
and
cld
fidivrl
mov
bound
imul
push
fcmovbe
sub
pop
jno
or
cld
push
cs
test
mov
mov
inc
xor
stos
repz
and
inc
mov
jae
push
scas
inc
mov
mov
jge
dec
xor
and
icebp
mov
and
and
mov
fbstp
imul
insb
sti
shll
fidivl
sar
mov
xchg
fcompl
mov
jecxz
negb
lea
mov
add
jl
cs
outsb
decb
imul
lods
lahf
adc
loop
cs
sahf
stc
bnd
cmpsb
jmp
les
jb
adc
rcrl
xchg
xchg
inc
outsb
xchg
cmp
pop
notb
sub
sub
mov
ret
idivl
dec
adcb
movsb
bound
imul
icebp
movsb
bound
imul
lcall
jbe
mov
push
push
or
rcll
cmpsl
add
loope
andb
sahf
loopne
pop
dec
jne
cmpsl
in
jle
jecxz
bnd
test
dec
ss
pop
stos
in
pop
jno
int
jb
std
ss
les
loop
xor
adc
jge
loopne
adc
stc
into
dec
add
das
dec
sarb
cmp
xor
lock
arpl
jns
cltd
inc
cmp
lret
aaa
ds
or
pop
divl
jl
lahf
pop
scas
ss
sti
push
and
ret
sbbb
jb
jno
mov
in
icebp
add
mov
test
fadds
ss
jmp
or
sti
jb
daa
rol
add
or
and
lock
test
add
scas
and
dec
mov
ljmp
cmp
lods
pushf
mov
mov
push
jl
cmc
xchg
mov
int
insb
divb
mov
pop
adc
add
sub
push
dec
add
xchg
xor
jb
pushf
inc
cs
cmp
jno
sar
repz
mov
ficoml
cld
ds
xor
sbb
out
adc
push
into
lods
mov
xor
lock
mov
pop
arpl
outsb
jae
rclb
stos
jns
adc
sub
outsb
add
movsb
xchg
adc
mov
xor
xor
mov
aad
sub
xchg
ljmp
mov
xchg
out
clc
pusha
jo
inc
add
int3
inc
lods
push
pushf
scas
aas
stos
stc
daa
ret
mov
pop
xchg
xor
jnp
mov
xchg
in
dec
stc
test
sub
shr
push
mov
in
mov
call
pushf
lea
stos
dec
push
pop
shrl
add
mov
or
pop
dec
std
inc
and
inc
ret
and
xchg
into
dec
mov
ret
pop
into
shrl
sub
sbb
push
dec
mov
mov
mov
jb
mov
xlat
inc
xor
xchg
stos
pop
xor
jmp
pop
inc
ds
mov
or
int
mov
mov
and
fsubl
mov
fsubs
pop
aad
and
testb
xor
clc
data16
dec
ss
xchg
mov
mov
out
sbb
jmp
adc
cmp
rcr
jb
mov
js
sbb
insl
aas
inc
movsb
adc
fadds
nop
inc
cmp
xchg
push
sub
enter
mov
cld
add
scas
pushf
out
xorl
movsl
pminsw
fsubrp
adc
push
and
loope
jne
and
jecxz
push
dec
ja
call
pop
push
scas
pusha
jg
les
movsb
das
lahf
mov
addr16
and
pushf
loop
inc
imul
scas
cmp
mov
jne
fucomip
fistpl
je
sub
repz
pop
adc
pusha
lods
rclb
addr16
fmul
arpl
insb
and
cmp
push
mov
xor
stos
das
mov
or
negl
stos
mov
sahf
sub
mov
mov
imul
mov
test
cmp
xorl
jle
mov
or
lea
mov
pop
jle
iret
movsb
nop
out
sbb
cmp
and
icebp
pushf
ljmp
into
cmp
xchg
inc
stc
dec
mov
ljmp
mov
mov
lahf
mov
popf
pop
lea
es
sub
rolb
aas
jno
mov
sbb
pop
jno
pop
jo
dec
rorb
mov
mov
sbb
push
pop
hlt
lds
shl
xor
mov
and
mov
lcall
stos
mov
cmc
and
enter
sahf
aam
cmp
scas
lds
or
sub
push
jo
repz
ret
xorb
push
sbb
pop
mov
xor
in
enter
xchg
push
mov
aad
adc
sbb
loopne
adc
fdivs
call
lret
cli
add
pusha
add
mov
mov
add
mov
loope
repnz
jo
shll
stos
loope
iret
dec
pushl
inc
mov
popa
loopne
rcl
fisubs
cmp
sbb
in
mov
aas
add
incl
dec
shl
and
push
mov
sub
inc
orl
sub
stos
cltd
idivl
mov
movlhps
pop
cmc
mov
cs
cs
out
fisubrl
inc
fadd
lcall
mov
push
jns
mov
movsl
push
and
movsb
or
push
outsb
mov
mov
fidivl
pop
test
movsb
cs
nop
roll
mov
push
and
test
aaa
mov
lock
iret
pushf
adc
mov
xor
mov
dec
lret
cli
push
push
cmpsl
adc
add
shlb
cmp
jecxz
shlb
xor
add
std
out
jmp
sub
cmc
and
and
andb
and
hlt
push
icebp
in
dec
test
cmpsb
fnsave
push
cli
jmp
popa
cmp
ret
cmpl
pushf
push
and
mov
cmc
xor
adc
insl
pop
imul
dec
mov
ljmp
sti
cld
ret
jp
int3
sbb
inc
mov
xchg
out
xchg
ds
xor
mov
xchg
pop
add
iret
test
inc
enter
pop
lcall
inc
jg
lcall
ret
stos
lret
into
test
dec
sbb
fldt
je
rolb
jmp
push
pushf
push
mov
push
pop
sub
sbb
sbb
lds
jmp
add
or
cmpsb
test
imul
in
add
ficoml
or
stc
popa
cmp
and
movsb
and
int
movsl
pusha
shll
rcrb
idivl
in
bound
pop
jecxz
movlps
push
adc
roll
test
movb
stos
ds
aaa
lock
rep
pop
push
imul
insl
inc
popf
pop
xchg
or
lock
jmp
stos
scas
add
mov
fidivrs
xor
or
adc
pop
orb
loop
daa
jo
lods
adcl
nop
xor
cli
xor
lret
sub
adc
push
xchg
add
mov
mov
mov
push
les
sub
xor
adc
push
pop
les
gs
ljmp
jb
mov
insb
jae
outsl
outsl
call
jb
subl
orb
fsubs
lods
mov
lods
pop
aad
mov
and
stos
xchg
mov
subb
cmp
xchg
xor
mov
xor
mov
cmp
dec
jb
push
push
adc
negl
fldl
xchg
push
xor
sti
cmp
jmp
leave
int
nop
adc
adc
popf
popf
mov
xorl
cld
movhps
jg
negb
cwtl
scas
pop
adc
mov
clc
or
jbe
push
in
fdiv
jb
fs
cmp
lock
cmp
dec
mov
shlb
insb
mov
xchg
mov
mov
repnz
orl
sub
test
mov
pop
adc
je
aad
add
mov
cmp
inc
lea
es
push
mov
mov
scas
cmp
test
scas
repnz
push
movsb
aas
outsl
cmp
or
dec
cld
pop
adc
repz
sub
loop
xchg
lock
cmpsl
sti
add
pop
mov
jnp
dec
shlb
sar
and
mov
ret
rclb
jo
insl
call
jno
adc
movsb
int
push
jmp
xor
out
or
loope
stos
insl
mov
adc
xchg
hlt
movsb
sahf
insl
mov
mov
mov
mov
mov
shll
push
fwait
sub
js
ret
rclb
jb
push
inc
xor
iret
lock
mov
mov
dec
lret
xchg
dec
lret
fstl
pop
fbld
xor
rclb
pop
adc
xor
sbb
imul
jg
rcll
lea
mov
mov
dec
xor
or
mov
jle
pop
push
popf
fsubs
bound
jo
jnp
lock
mov
sbb
xor
loopne
push
cmp
loop
add
cltd
jbe
mov
pop
xor
lods
movsb
lds
andb
nop
ja
sub
mov
pop
nop
mov
shrl
test
dec
data16
out
sub
mov
cmp
pop
dec
mull
mov
gs
push
jbe
leave
mov
inc
cmp
mov
shl
cs
xor
push
addr16
fnstenv
add
pop
loop
js
mov
jle
xchg
movsb
jb
cmc
mov
in
lea
inc
and
popa
cmp
fwait
sub
jo
outsl
lahf
popa
mov
dec
push
mov
mov
mov
movsb
sbb
mov
fnsave
or
ret
push
xchg
pop
cmp
mov
ds
cmp
add
rcll
repnz
jg
pusha
into
das
insb
incl
sahf
hlt
lock
out
inc
scas
packsswb
mov
mov
cmp
leave
call
mov
cmp
movsb
mov
cld
mov
push
stc
jbe
jae
mov
lahf
ret
push
xchg
fldcw
aaa
das
mov
or
mov
pushf
repnz
mov
jmp
adcl
pop
mov
xor
cs
add
mov
mov
movsb
xlat
pusha
add
rolb
out
bound
inc
push
lret
lock
addr16
rcr
xchg
push
inc
jle
in
outsl
mov
xchg
adc
subl
pop
orl
push
aas
incl
imul
arpl
fcmovnu
and
repnz
pop
cwtl
push
cmp
iret
xor
mov
divb
jmp
xor
pop
xchg
and
hlt
adc
popf
and
and
mov
lret
mov
xor
test
cmp
leave
pop
not
mov
pop
fbld
dec
xor
cmp
ret
imul
fst
inc
mov
sarl
test
sahf
aad
orl
sti
rcl
testb
testb
jae
push
inc
jbe
mov
and
popf
dec
inc
mov
out
pop
mov
cs
push
xacquire
sbb
clc
add
cmp
sbb
into
lods
or
add
imul
movsb
fidivrs
sub
cmc
jns
popf
ficompl
dec
pop
loopne
push
pop
mov
xchg
adc
mov
loopne
ficomps
sbbb
or
repnz
ljmp
movsl
ljmp
cmc
and
sbb
jmp
cmpsb
popa
int
mov
jp
es
shll
sub
mov
mov
in
mov
ds
dec
pop
sub
nop
pop
outsl
add
xchg
mov
scas
movsl
sub
lcall
in
push
or
cmovs
jns
cltd
mov
sti
sahf
loop
jmp
sub
pusha
sbb
das
lret
and
test
push
jge
jecxz
sub
ret
pop
movsb
dec
or
xchg
jl
out
inc
fwait
xor
cmpsl
loop
xor
push
outsl
rcll
mov
icebp
sub
daa
and
fwait
jbe
jb
jge
scas
push
dec
ja
call
and
add
xchg
mov
icebp
outsb
cmp
sti
add
jge
cld
xor
bound
add
add
mov
into
push
rorl
mov
jge
sub
icebp
push
mov
stos
pop
lahf
scas
jl
outsl
dec
nop
mov
jo
or
loope,pn
jne
je
mov
mov
push
das
mov
cmpl
les
test
testb
adc
cli
stos
xchg
sub
negb
filds
sti
arpl
pop
inc
andb
arpl
stc
inc
popl
nop
mov
aaa
jge
repnz
lcall
scas
subb
sti
ds
xchg
loop
std
ljmp
xorb
icebp
mov
loop
ljmp
orw
mov
add
dec
fldenv
fistpll
cli
dec
cmp
orb
je
mov
jns
add
inc
leave
push
fadd
loopne
hlt
movsb
lock
movsl
mov
aas
xchg
movsb
je
dec
fsubrp
xor
pop
push
cld
lret
repnz
jno
jnp
pop
sbb
push
aas
ficoml
not
inc
xchg
dec
inc
adc
xor
pop
dec
es
dec
sbb
push
fstpl
mov
shlb
imul
mov
mov
dec
sbbb
shll
adc
xor
sbb
and
faddp
shl
mov
or
es
add
movsb
in
das
mov
mov
popa
imul
jge
jno
sub
xor
dec
aad
add
loope
push
leave
subb
out
leave
adc
loop
jns
test
xlat
jp
mov
aas
test
js
mov
icebp
xchg
aaa
cmpsb
xor
pop
dec
arpl
jno
stos
pop
mov
sub
cltd
jmp
aaa
pop
push
rcrb
adc
push
lret
pop
sbb
pop
insl
adc
push
mov
xchg
inc
jecxz
lahf
imul
inc
imul
out
dec
xchg
adc
mov
cltd
mov
push
ds
es
inc
dec
fsubrl
jae
lods
jnp
shrb
push
sbb
arpl
and
clc
xor
push
out
leave
lock
frstor
scas
fnstenv
add
dec
mov
add
mov
inc
or
pop
js
mov
xlat
inc
iret
xor
mov
dec
imull
ljmp
jmp
add
in
cmp
jo
ja
and
mov
push
mov
bnd
jo
popa
mov
xchg
push
jno
icebp
mov
pushf
es
and
movsb
stos
add
aas
xor
pop
dec
jno
arpl
aad
jle
push
loope
mov
xor
jae
pusha
cltd
push
adc
sbb
stos
les
shll
cmc
jae
js
vpcmpeqb
fdiv
mov
jecxz
dec
sub
ror
outsb
je
repnz
and
icebp
addr16
pushl
rcll
fdivl
lock
pushf
adcb
cltd
mov
mov
inc
es
leave
push
cli
jnp
mov
dec
adc
mov
cmpsb
mov
mov
pop
xor
xor
or
repnz
pop
push
outsb
addr16
mov
xor
lcall
sub
cld
cli
scas
add
dec
aaa
xor
repnz
sbb
pop
mov
movsl
mov
ficompl
lock
xor
movsb
pusha
sbb
and
xor
mov
lods
or
add
sbb
cld
add
inc
jbe
out
ficompl
test
cmp
imul
gs
aam
and
inc
cs
leave
push
inc
stc
ja
push
push
sbb
aad
mov
cs
dec
roll
mov
enter
fsubr
and
dec
fcompl
sub
jl
mov
hlt
mov
push
mov
lock
jg
imul
movsb
pusha
test
push
cltd
ds
imul
xchg
cli
xlat
pushf
or
cwtl
shrb
inc
and
inc
je
mov
rclb
in
add
mov
subb
mov
into
sar
test
inc
in
mov
sahf
cmp
scas
push
icebp
xor
das
push
and
sbb
mov
xlat
xor
nop
xchg
mov
cld
mov
inc
pop
stos
dec
mov
rcrl
out
mov
sbb
adc
push
enter
int
shll
hlt
or
gs
adc
data16
push
mov
jne
mov
mov
fucomi
fsts
mov
push
jno
mov
es
jb
add
push
cmp
mov
mov
aas
mov
mov
mov
xor
and
cli
test
mov
cmc
jbe
hlt
cmp
fstp
test
pop
stos
or
ds
jb
adc
pop
loope
shll
mov
in
incb
sbb
jl
inc
xor
cmpsb
cmp
dec
adc
call
cmpb
or
inc
or
loopne
popa
scas
sub
clc
inc
mov
mov
movsb
mov
rolb
inc
mov
push
sti
and
inc
cld
bound
rolb
fwait
xchg
pop
call
hlt
movsb
sbb
ljmp
aas
imul
cmpsb
cmp
or
test
test
xor
pop
in
test
sbb
mov
sbb
popf
into
aas
sub
jb
adc
add
pushl
repnz
repnz
and
loop
mov
lret
int3
jg
std
in
mov
and
stos
fidivrl
insl
mov
mov
inc
mov
in
bound
pop
addb
repnz
push
mov
stos
movsb
mov
cld
sbbb
lret
dec
adc
scas
insl
jb
adc
and
lcall
xchg
push
rclb
xor
gs
popf
adcb
in
repz
fistl
cwtl
daa
sbb
push
enter
mov
lock
btl
cmpsb
fistps
sub
adc
imul
mov
xor
pop
xchg
push
dec
jge
in
jle
insl
sub
nop
sti
in
bound
cmc
outsb
push
imul
inc
mov
movsb
lods
inc
imul
inc
rcr
arpl
mov
and
leave
xchg
dec
cli
sub
lea
mov
popf
data16
rorb
push
in
pop
inc
mov
in
sbb
daa
shll
inc
lcall
aaa
aad
mov
xor
xor
cli
or
add
push
gs
pop
jmp
lock
adc
jle
daa
hlt
push
dec
mov
lock
and
pushf
or
push
stc
sub
mov
cmp
inc
cmpsb
rcr
xor
arpl
push
repnz
cmpsb
adc
xor
lock
and
inc
add
int
push
out
and
lcall
jle
cmc
mov
sbb
mov
in
fstl
pop
mov
and
mov
push
xchg
jle
stos
pop
aas
movsb
jg
jl
pop
push
sbb
sarl
mov
mov
loope
sahf
repnz
mov
mov
stos
ja
adc
push
add
fcmovnbe
rcll
sahf
adc
mov
scas
in
icebp
adc
xor
pop
es
or
and
pop
filds
or
mov
push
stos
in
push
stos
call
jmp
cli
and
bound
adc
adc
mov
std
call
xor
xchg
je
or
jle
and
or
mov
adc
dec
jbe
cmp
and
add
aas
arpl
mov
jb
dec
loope
hlt
mov
inc
lea
stos
adc
cwtl
jle
pusha
ss
xchg
repz
mov
fsub
adc
lret
xchg
int3
or
ret
sbb
test
pop
outsb
jl
cmpsb
mov
sbb
aas
repnz
mov
int3
cmc
add
xchg
test
inc
in
jge
testb
add
add
ds
repz
and
data16
push
aam
popa
mov
pop
outsl
js
mov
test
and
adc
adc
mull
mov
xor
xor
fwait
sub
inc
lods
pop
lret
out
pushf
stos
mov
mov
xchg
adc
jecxz
lods
and
add
and
test
xchg
test
add
aas
nop
pushf
xor
cmc
xor
pop
xor
mov
frstor
test
mov
jge
sub
lea
mov
int3
adc
jle
sarw
xor
mov
xchg
mov
fstl
enter
xchg
adcl
dec
in
jnp
and
outsb
mov
mov
adc
dec
jmp
mov
dec
insb
pusha
int
lods
dec
and
neg
shlb
dec
mov
dec
and
mov
lea
xor
mov
shll
push
xor
sbb
pop
mov
shrl
rcrl
pop
xor
ret
imull
out
add
push
jo
and
mov
pop
lcall
pop
shll
mov
push
push
sbb
sahf
adc
push
insl
mov
cmpl
lret
pop
inc
test
xlat
int
fldcw
mov
add
scas
xor
adc
inc
outsl
into
jno
adc
test
add
pop
fs
das
pop
nop
adc
repnz
xor
fwait
jae
insb
mov
sar
je
rolb
test
fstpt
cld
subb
rorl
lods
mov
pop
int
xchg
mov
scas
clc
pop
adc
loop
mov
sub
in
jne
gs
pop
aam
orb
push
popf
das
in
push
mov
sub
movsb
mov
xchg
mov
sub
ja
mov
popf
adc
pop
adc
scas
push
test
cld
shl
clc
lds
movsb
bound
adc
mov
adc
mov
or
push
xor
rorl
add
lock
mov
aam
pusha
jae
push
xor
mov
icebp
xchg
pop
shrd
adc
sbb
jbe
jmp
xchg
repz
fildl
dec
in
inc
imul
filds
adc
mov
or
cmp
xlat
add
iret
add
jno
and
movsb
push
sub
sar
iret
test
repnz
data16
jno
sbb
insb
test
push
je
xchg
cmp
int
pop
pop
ljmp
add
and
inc
mov
xchg
shll
loopne
xchg
ret
cmc
rcrl
push
aas
aad
xchg
shl
pop
out
inc
pop
out
adc
imul
pop
ja
inc
cld
mov
xor
and
popf
pop
out
adc
fsubl
in
icebp
mov
int
or
push
stos
jnp
and
mov
xchg
adc
mov
loopne
mov
mov
repz
sar
rorb
xchg
mov
call
pop
call
sub
xchg
mov
fidivl
push
rorl
sbb
xorb
pop
cmp
inc
xchg
dec
ret
add
or
movsb
xchg
pusha
scas
cmpb
xchg
push
andl
mov
sbb
pop
mov
mov
or
lods
mov
and
gs
popa
cmp
sub
cmc
xchg
mov
jnp
sahf
in
outsl
lcall
and
aam
icebp
jno
sbb
enter
mov
sub
testb
sub
and
js
repz
sub
xor
mov
hlt
sti
rcll
bound
sub
ja
jnp
mov
test
xor
ss
outsb
xor
subb
add
scas
sbb
mov
pop
add
dec
aas
lods
lds
icebp
add
push
pusha
sahf
mov
cs
scas
js
jmp
and
aas
mov
test
cs
cmp
shl
adc
pop
mov
dec
lock
push
xchg
aad
adc
mov
ret
sar
test
mov
movsb
cmpsb
and
outsb
and
jmp
xor
fadd
ss
sahf
pop
imul
jb
movsb
dec
jge
cmp
daa
enter
jne
or
mov
mov
pop
pop
fstpt
fbstp
repz
cmpsb
ja
mov
int
xor
mov
loopne
jge
dec
lds
or
shl
test
adc
mov
incl
repz
adc
pop
movsb
inc
fsubs
pop
push
mov
dec
sbb
lea
daa
add
loopne
push
xchg
ror
adc
aam
push
mov
mov
xchg
mov
dec
orl
aaa
rcll
jmp
sub
mov
inc
and
dec
mov
xchg
or
mov
mov
xor
adc
popf
dec
sub
rcrl
jne
or
inc
aas
jnp
std
insb
jge
xor
ror
aas
pop
repnz
add
jbe
cmpl
repz
jle
xor
loope
lds
lcall
adc
or
shrb
mov
iret
imul
in
xchg
adc
push
xor
cmp
jmp
push
nop
dec
repnz
xor
roll
and
leave
add
repnz
stos
std
mov
leave
int
leave
sub
fsubrs
xorl
imul
mov
cltd
stos
mov
dec
pop
jmp
sub
push
mov
ficoms
cmp
dec
movsb
and
arpl
fidivrl
outsl
divl
jge
cmp
decl
test
or
add
into
jno
aas
adc
or
negb
sub
inc
cmpsl
dec
pop
cli
push
jle
cli
addl
cltd
push
cli
and
adc
stos
or
xor
jbe
inc
stos
aad
inc
pop
push
cwtl
xchg
adc
sahf
fwait
in
inc
xor
into
mov
int
xor
mov
pop
in
es
and
push
cmp
mov
fmull
shlb
xor
repnz
aaa
popa
clc
inc
das
mov
xor
add
xor
mov
mov
in
scas
fidivrs
scas
or
jo
scas
scas
xor
pop
in
mov
test
adc
xor
push
or
not
ret
inc
add
mov
imull
cmp
ret
cmp
or
je
dec
push
sub
push
sbb
lock
sarb
out
sbb
xor
mov
mov
and
cld
push
cmp
inc
jmp
mov
dec
xchg
cmc
cmp
test
and
icebp
jno
push
je
or
adc
in
das
inc
adc
jbe
sub
call
xor
lods
or
xchg
adc
sub
call
xor
sti
pusha
cmp
adc
nop
mov
adcl
or
sarb
sub
mov
insl
jle
aaa
sbb
popf
lret
sahf
mov
out
add
inc
test
sub
js
clc
loopne
xor
sbb
pop
xchg
data16
scas
inc
mov
fdivrs
sbb
push
or
pop
or
cmpsl
mov
lahf
or
mov
inc
xchg
repnz
pop
ja
loope
std
mov
ja
mov
pop
cmp
mov
cltd
mov
xchg
movsl
mov
hlt
ja
jae
sub
dec
sub
fidivs
shll
test
leave
xor
int3
push
push
movsb
out
stos
jae
jp
or
fstps
mov
ret
mov
mov
sti
xchg
jmp
xchg
aam
loopne
sbb
jb
mov
ret
xor
cmpsb
mov
jne
icebp
je
cmpsb
jbe
inc
cmp
aaa
fmull
adc
jo
fwait
sbb
imul
cmpsb
mov
mov
adc
into
mov
icebp
imul
arpl
jecxz
clc
imul
gs
ret
ja
int
rorb
mov
jae
imul
fidivs
fisubs
jae
les
int
xchg
mov
test
ret
inc
jb
xor
jg
lods
pop
stc
jp
loop
mov
ret
push
and
repnz
cmp
aaa
jbe
jge
pop
lahf
push
cwtl
mov
xchg
mov
ret
xchg
imul
movsl
stos
inc
xlat
fldt
aas
mov
add
ja
adc
stos
xlat
pop
cmpsb
jno
push
mov
adc
test
fadds
ss
sub
jp
mov
in
icebp
xchg
imulb
cmc
xor
ljmp
out
repz
push
mov
orb
push
xor
push
push
jae
nop
push
inc
jg
test
clc
mov
movsb
in
fisubrs
test
bound
stos
lods
mov
add
push
test
orb
out
add
out
cmp
movsb
and
add
jg
cmp
sahf
mov
cmp
sub
xlat
and
mov
push
sahf
add
repnz
andb
into
and
aas
cmp
jno
fwait
adc
test
rcr
xchg
mov
and
rol
loope
rorb
outsl
cmpl
sbb
push
jb
mov
jl
mov
sti
inc
fcoml
mov
jo
shll
lock
mov
add
lret
push
ss
jle
dec
out
call
jne
mov
dec
push
sbb
repnz
push
fnstsw
lahf
inc
adc
stos
mov
or
loopne
and
stos
sub
xor
scas
popa
xor
xchg
mov
int
add
daa
aas
jmp
sahf
fidivrl
sub
adc
rcrl
inc
add
mov
mov
cs
sub
mov
xor
push
jo
sub
je
into
fsubr
mov
xor
mov
mov
add
loopne
pop
xorl
jge
mov
and
inc
call
mov
sarl
jge
sub
pop
stc
inc
push
subb
push
mov
and
xor
in
jne
pushf
cmp
cmp
jbe
pushf
sub
pop
push
sti
mov
fidivl
adc
jb
sub
cmp
push
fcmovbe
adc
ud2
mov
pusha
xor
and
lds
jge
stc
xchg
mov
inc
and
or
xor
in
cltd
mov
sbb
leave
dec
sbb
imul
in
ss
mov
ret
gs
mov
sti
push
cmp
xor
into
inc
push
scas
out
pop
mov
cmp
or
and
add
mov
stos
mov
icebp
inc
jecxz
push
add
cmp
andb
jno
jo
loop
or
dec
xor
pop
mov
into
xchg
cmp
data16
fnsave
ljmp
mov
pop
mov
xor
adc
push
outsb
ret
stos
and
adc
or
ljmp
aas
push
add
adc
ficomps
adc
test
dec
mov
adc
or
orb
dec
sahf
cmp
divb
adc
jae
faddp
xchg
lods
and
mov
cmp
or
pushf
repnz
xchg
cmc
hlt
jae
in
pop
mov
testb
and
in
sahf
push
cmc
cmpl
adc
sarb
sbb
ja
sub
inc
lds
in
mov
jle,pt
cmp
push
jle
mov
jb
add
movsb
std
push
or
fcom
fisubrs
sub
and
mov
sub
or
xor
inc
dec
test
mov
out
xor
sahf
pop
leave
scas
and
int
std
or
xor
sbb
push
sti
shl
jae
add
repnz
sub
xor
out
sti
and
enter
aas
mov
sub
or
sahf
in
inc
dec
jb
sti
rclb
and
mov
outsl
outsb
adc
mov
test
cld
pop
mov
fidivl
popa
scas
fidivrl
dec
jmp
xor
aam
inc
fsubl
xchg
pop
and
hlt
fbld
jae
inc
ss
int3
jmp
sub
in
dec
js
xor
sbbl
sbb
sahf
sub
out
das
and
adc
push
jne
lcall
test
outsb
lock
addr16
or
mov
sub
xor
repz
and
outsl
adc
xor
addr16
inc
or
cmp
loope
movsb
repnz
push
inc
fwait
push
cmp
xchg
add
int3
popa
or
lds
adc
insl
push
sbb
out
insb
xor
mov
cmp
fldenv
movsb
lret
pop
in
pop
lods
imulb
sti
lea
popa
arpl
lods
test
imul
dec
jmp
push
loopne
xchg
aad
stc
cs
jb
pop
call
ds
mov
mov
lods
mov
and
dec
sub
sarb
lods
and
es
dec
das
imul
push
push
cmpsb
imul
aad
test
pop
aas
mov
push
mov
dec
mov
xor
mov
les
inc
imul
sub
pop
sbb
int
in
mov
mov
shlb
and
fwait
iret
mov
mov
sar
out
adc
xor
cld
cmpsl
pop
loopne
loopne
sbb
loop
inc
sbb
cltd
arpl
mov
add
inc
and
inc
pop
ret
and
adc
pusha
mov
adc
clc
add
add
pusha
mov
jae
cmp
sarl
jge
mov
sbb
and
insl
rorb
ds
mov
movsb
popw
enter
aas
dec
cli
sbb
iret
arpl
cld
pop
sub
or
and
push
sub
mov
dec
inc
pop
lods
push
add
add
mov
push
lahf
loopne
sbb
sub
popa
push
daa
jne
outsl
aaa
mov
ss
sub
push
add
imul
fcoml
cmpsl
xchg
stos
push
movsb
orl
xchg
cmp
mov
incb
push
out
sahf
scas
xor
scas
dec
js
out
sbb
fisubs
inc
fbld
adc
jg
adc
test
push
mov
cmc
mov
sub
mov
pop
cmc
jge
stos
test
fldenv
xchg
inc
jmp
jo
pop
sbb
sub
fld
mov
enter
jg
in
nop
fdivr
pop
mov
jb
fmuls
jmp
das
adc
sbb
icebp
push
dec
or
cltd
cwtl
and
adcl
jo
popa
nop
xchg
push
push
sub
pop
outsb
lds
pop
test
adc
add
lcall
adc
xchg
pop
mov
cmpsb
sub
cmp
or
adc
xorl
gs
out
mov
stc
push
adc
cmp
add
jg
orl
jae
arpl
jae
hlt
push
push
lds
loopne
in
cmp
or
dec
push
cli
add
and
daa
xchg
and
into
mov
mov
jno
aam
div
jbe
add
xor
sbb
mov
lds
scas
fstpt
pop
pop
push
cwtl
shll
mov
scas
jmp
pop
cli
js
in
outsb
mov
and
pushf
out
or
inc
test
cmp
push
pop
fstl
xchg
adc
jg
hlt
movsb
je
into
loope
mov
popf
mov
mov
lret
pop
push
push
inc
pop
gs
push
and
fs
shr
xor
outsl
jp
scas
inc
lcall
test
repz
call
icebp
sub
fwait
ja,pt
pusha
int
mov
pop
dec
jp
push
inc
pop
xor
imul
jns
mov
ds
add
mov
mov
movsl
add
mov
mov
dec
lods
sbb
push
outsl
mov
xlat
jno
jl
xor
xor
add
sub
and
aam
mov
xchg
movsb
incl
add
cli
loopne
outsb
jge
mov
adc
inc
jns
mov
xlat
addr16
popf
lcall
adc
fs
sbb
test
sbb
push
xor
xor
or
lds
movsb
mov
fstpl
dec
push
mov
fidivrs
pop
popa
dec
or
mov
cmp
lcall
outsl
mov
nop
add
loope
mov
add
xlat
adc
cli
xor
inc
lock
rorl
fdivrs
test
ret
jae
xchg
pop
jle
and
das
pop
sub
mov
das
jae
mov
cmc
mov
lahf
pop
xchg
jb
jmp
jno
xchg
mov
mov
or
mov
mov
insb
xchg
dec
xchg
in
add
lods
jecxz
mov
xor
adc
test
cmpsb
outsl
xor
test
cmp
cmp
hlt
or
nop
insl
jmp
mov
das
fsubl
sahf
nop
adc
lret
insb
xor
sub
adc
cmc
push
push
inc
pop
mov
cmp
stc
stc
dec
addl
stos
mov
jle
loopne
sti
push
ret
push
cmpsl
int
stc
clc
push
cmp
mov
pop
rcr
shrb
adc
in
jmp
loopne
addr16
or
pop
in
inc
sub
jge
ud1
jg
adc
sub
adc
cs
addb
fnstsw
sub
aam
mov
or
pop
fstpl
loope
and
push
cli
enter
jge
pop
enter
mov
adc
icebp
cli
jne
shl
cli
je
cwtl
ret
sbb
ds
adc
mov
aas
pop
daa
pop
fistpll
pop
cltd
pusha
and
inc
pop
mov
jmp
adcl
movsb
xchg
or
inc
ret
outsl
into
mov
scas
out
sub
mov
ret
cmpsb
jmp
aas
adc
popf
push
mov
sub
dec
shrb
data16
mov
jo
in
cli
push
push
xchg
xchg
aaa
xchg
incb
out
mov
sub
clc
sti
xchg
repz
loop
mov
pop
adc
cmp
mov
dec
arpl
inc
add
aas
sub
xchg
lfs
mov
int
loopne
adc
out
jb
outsb
and
rcrl
xorl
cmp
dec
xor
or
pop
cmp
mov
cli
ljmp
out
popf
loopne
push
pushf
mov
and
and
loope
inc
in
iret
and
mov
adc
xchg
dec
pushf
inc
push
cs
icebp
icebp
fcomp
rol
push
je
sub
aas
sub
jl
dec
mulb
jle
ja
adc
cmpsb
adcb
xchg
daa
and
outsl
dec
xchg
imul
cli
add
nop
cmp
xchg
imul
push
push
cmpl
pop
popa
flds
popf
push
xchg
adc
int3
jmp
push
ret
pop
lock
xor
mov
mov
xor
loopne
test
stos
push
movsb
mov
leave
cmp
lods
jecxz
inc
call
outsl
cltd
inc
jl
adc
mov
sub
orl
cmp
push
jp
cmpsb
pop
push
push
push
mov
cmp
mov
push
dec
ljmp
test
mov
and
fwait
cmp
mov
lods
mov
test
cmpsb
mov
jg
in
popa
lahf
or
mov
mov
sbb
xor
jge
ficomps
mov
xchg
js
mov
push
mov
cmp
pop
fdivs
iret
outsb
mov
jne
ss
fisttpl
sbb
mov
lock
int3
es
out
xor
and
std
mov
add
fists
dec
rorl
or
push
cmpsl
int
pusha
test
add
inc
mov
jae
mov
cli
or
fistps
shrb
jle,pt
push
int3
mov
mov
inc
gs
cmp
dec
call
shll
loope
push
cmp
imul
mov
idiv
mov
je
shlb
lret
lods
stc
mov
push
pop
mov
je
or
loop
and
cmpsl
or
cmc
xor
movsb
ss
mov
sti
movsl
rcrl
bound
dec
jmp
adc
das
push
jg
jle
icebp
or
inc
adc
pusha
push
rorb
push
jno
dec
je
pop
mov
push
push
out
repnz
movsb
add
iret
or
xchg
sarl
test
mov
pop
je
stc
lcall
and
push
stos
mov
and
stc
call
call
rorb
mov
sahf
into
jecxz
ret
mov
jmp
lcall
mov
pop
jle
add
fsubrs
add
jg
mov
in
jge
rorb
sbb
aam
ss
dec
push
gs
adc
and
jmp
and
lcall
iret
mov
jae
sub
sahf
cmpsl
sub
mov
mov
movsb
cmp
and
inc
add
fisttps
xor
sti
add
or
movsb
scas
gs
pop
mov
and
mov
add
adc
in
cmpb
loope
ret
sbb
adc
sbb
push
sti
and
imul
mov
dec
repnz
lea
lods
gs
sub
test
sarl
sbb
cmp
dec
xor
dec
xchg
repnz
mov
out
cld
fidivs
mov
rorb
xchg
cs
mov
icebp
push
aas
push
push
fldcw
adc
jno
and
jl
mov
scas
sbb
lcall
jg
push
into
mov
jp
cld
sti
int3
jno
mov
fnsave
xor
popa
mov
subl
mov
mov
movsl
fsubrl
es
xor
push
cmpl
into
or
jb
pop
outsb
dec
push
mov
mov
pop
jmp
push
mov
mov
cli
std
popa
lock
add
sbb
sti
push
mov
cwtl
jecxz
jo
aas
mov
mov
sbb
loop
mov
lock
sbb
dec
mov
push
add
shl
test
cmp
and
clc
sub
xchg
clc
lods
cmpsl
jmp
add
add
lahf
ret
and
or
icebp
mov
mov
test
out
and
into
push
cld
js
data16
push
std
mov
dec
sub
rcrb
mov
mov
adc
xchg
test
insl
jb
sbb
lahf
movsb
and
lcall
mov
in
adc
repz
pop
mov
xchg
add
mov
jae
mov
fldcw
add
mov
scas
pop
pop
add
js
insl
nop
cli
push
fmuls
mov
out
int
mov
jle
lcall
add
adcl
adc
mov
push
mov
jns
cmp
cld
cmp
nop
rorb
xchg
sbb
adc
ja
je
arpl
sbb
lock
stos
es
aad
addr16
or
sbb
inc
mov
ret
hlt
popl
jp
mov
mov
sarl
sbb
and
icebp
push
adc
pushf
xor
aas
jae
dec
push
es
test
push
je
sub
clc
cmp
pop
cmp
xchg
mov
shlb
das
cmp
das
gs
push
pop
jle
int
push
iret
push
mov
stos
rorb
mov
in
cmc
fwait
inc
mov
fs
add
xchg
dec
push
push
std
dec
sub
push
pop
jle
test
adc
loop
cld
dec
jo
mov
push
daa
cmp
mov
rcrl
out
push
cmpl
adc
adc
repnz
push
mov
add
fs
out
mov
pop
xchg
movsb
faddl
xor
into
xor
cmp
rolb
jmp
pop
xor
xor
fstpt
icebp
dec
jb
ror
iret
cli
cmp
cmp
std
jmp
out
lock
inc
dec
jnp
cmp
lods
sub
cmp
jmp
shrl
xchg
pusha
jmp
xor
sub
cld
or
adc
xor
dec
xor
mov
add
jae
jo
repnz
cmp
insl
clc
ja
pop
xor
pop
push
push
dec
test
pushf
and
jne
add
xchg
stos
imul
movsb
loop
adc
dec
xor
stos
insl
lret
xchg
push
nop
mov
pusha
inc
addb
add
mov
loope
push
jmp
movsb
lret
sbb
iret
scas
and
adc
add
movsb
lods
push
inc
sti
sbb
movsl
and
int3
xchg
sub
rcrl
cmpl
mov
add
push
adc
xor
test
adc
dec
testb
mov
jno
rcll
adc
xor
jmp
mov
incb
jb
xor
loope
repnz
or
jo
add
fildll
mov
mov
adc
out
xchg
aaa
cwtl
in
stc
xchg
push
pop
out
not
pop
das
dec
mov
cli
gs
cmp
jle
out
xchg
mov
push
xchg
aas
call
jge
lcall
mov
push
addl
repnz
adc
mov
pop
mov
scas
adc
xor
add
shlb
sub
cwtl
test
idiv
lods
cmp
mov
mov
sbb
fidivs
mov
adc
and
insl
push
sbb
scas
or
pop
cmp
jae
push
sti
orb
push
xor
std
out
andb
addr16
sbb
std
dec
sbb
add
mov
dec
cmp
mov
imul
push
js
imulb
push
ret
sbb
call
and
fisubs
arpl
xchg
rcrl
sbb
jmp
or
sti
shll
xor
mov
aad
xchg
xor
cmpl
idiv
test
cld
ret
mov
jp
pop
sub
pop
inc
xor
or
lock
lea
pop
cli
adc
cltd
mov
xor
or
cmp
loope
les
lea
xchg
jl
add
xor
inc
enter
jo
add
cmc
inc
ret
hlt
stos
cmpl
mov
ja
out
rcrl
cli
ret
and
lds
movlps
cmpsb
push
sbb
and
sbb
je
cmp
push
inc
call
faddp
jle
xor
sti
popa
dec
repz
hlt
jb
adc
insb
xchg
xor
pop
je
push
xor
fsubrl
push
andb
push
movsb
clc
mov
movsb
negb
mov
mov
push
mov
push
out
stc
xor
adc
add
loop
xchg
inc
imul
inc
and
lcall
and
add
pushf
sub
les
shl
jmp
xchg
lods
push
aas
xchg
pop
shll
jo
mov
stos
inc
std
es
jo
bound
xchg
jo
mov
xor
out
pop
inc
je
pop
jbe
xor
push
mov
cmp
push
jmp
mov
pop
popa
pushf
movsb
hlt
int3
jmp
insb
sti
rcr
arpl
movsb
mov
test
sub
iret
mov
jecxz
je
push
jb
arpl
loopne
aaa
dec
shll
lock
cltd
sahf
orb
mov
enter
pop
jb,pn
call
fstpl
adc
add
adc
cs
je
loopne
cmc
and
js
sbb
test
shll
mov
sub
not
testb
add
xor
aad
je
and
mov
ds
fiaddl
loope
lret
imul
repnz
ljmp
mov
flds
into
icebp
fisubrs
out
std
decb
lods
jns
xor
ds
xchg
dec
cmp
loopne
add
mov
push
adc
jnp
mov
icebp
mov
lock
sbbb
inc
mov
mov
dec
push
js
dec
lret
jp
bnd
negb
adc
push
rcll
sarl
bound
dec
lret
inc
or
xchg
scas
out
call
loopne
mov
push
loop
dec
mov
mov
jbe
cmp
mov
pop
dec
pusha
cmc
lsl
mov
int3
inc
fsubs
repnz
nop
cmp
movsl
lds
shrd
lcall
push
push
imul
ds
push
pop
mov
fcmovnb
jmp
jle
pop
clc
push
adc
movsb
leave
repz
add
test
aaa
pusha
push
ret
dec
sub
scas
les
add
mov
adc
cltd
ljmp
pop
in
ret
mov
cmp
cmp
jmp
and
loope
sbb
dec
sub
push
and
sbb
mov
push
loop
sti
add
inc
lcall
pusha
cli
dec
outsb
outsl
stc
popf
outsl
jns
xor
lock
stc
pop
sbb
das
cltd
xor
push
sbb
into
xor
pop
xchg
and
mov
scas
and
in
sti
lock
cs
fistpl
repnz
aas
sahf
movsb
in
outsl
fcoml
fimull
xor
aas
mov
stos
cmp
add
sbb
jp
or
adc
inc
rcr
adc
mov
xchg
stos
pop
shrl
sbb
cld
ljmp
sbb
icebp
js
add
stos
fisubl
rolb
push
scas
sbb
and
repnz
cmc
daa
sub
pushf
in
repz
push
or
add
push
mov
imul
cs
jmp
imul
pop
sbb
inc
jo
jb
movsb
and
pushf
rcr
fisubrl
pushf
bound
dec
sbb
push
faddp
movsb
mulb
arpl
scas
adc
and
pushf
inc
movsl
ja
mov
sarl
adcb
mov
clc
dec
sub
out
imul
jp
pop
push
repz
xchg
xor
repnz
lock
pop
sub
loopne
adc
lea
pop
jns
insb
ss
xchg
sub
adc
rorl
xchg
stos
mov
shll
pop
xchg
pusha
push
fmull
stos
adc
inc
mov
dec
ds
mov
pop
cmp
cmc
pop
mov
add
outsl
popa
imul
mov
inc
adc
and
sti
pop
imul
dec
aaa
shrb
add
leave
lcall
hlt
fisttpl
ja
mov
cs
xor
shlb
ljmp
aad
jbe
cmp
push
jge
inc
xchg
test
and
mov
sub
add
in
mov
imul
sub
mov
addr16
in
xor
cmp
in
imul
sti
xchg
cmpsb
popf
mov
mov
sub
int3
fcoml
jmp
mov
adc
pop
sahf
mov
nop
or
imul
mov
rclb
dec
mov
shll
jbe
xchg
adc
sub
pextrw
int3
xchg
fs
in
inc
je
lds
mov
xor
add
mov
cli
repz
aad
xor
pop
test
fidivrs
dec
int
imul
cltd
ror
adc
addb
pop
sahf
shll
adc
or
xor
int
sbb
sbb
movsl
sbb
xlat
xor
loop
or
adc
addb
jnp
aad
mov
sbb
imul
sub
insl
add
ss
aas
and
fldz
outsl
inc
inc
jl
push
test
adc
insl
idivb
mov
xor
cmpb
mov
inc
jnp
test
xlat
xchg
ja
cmp
mov
gs
jmp
sub
ljmp
push
xorb
pop
incl
adc
std
add
jg
cmp
xor
xor
adc
mov
bound
mov
jae
popf
add
cmovb
ja
fidivl
jbe
sub
mov
and
rcrb
shll
int3
lcall
mov
mov
dec
fsubrl
in
fdivl
mov
jae
cmp
and
sti
inc
xor
nop
ret
loope
clc
int
test
mov
xchg
xchg
loope
movsb
sub
dec
ljmp
pop
loopne
xchg
cmp
jbe
daa
mov
inc
xchg
cmc
sbb
or
sarl
inc
bound
jne
fsubp
cmc
aas
adc
dec
sarl
add
push
dec
dec
in
xchg
mov
add
shlb
mov
cmp
adc
mov
cmp
stc
std
xor
inc
femms
std
and
ror
aas
scas
mov
lret
imul
popl
arpl
xor
mov
repnz
sahf
pop
lret
push
aad
int3
push
lret
sarl
loopne
or
cmp
mov
test
cwtl
pop
jp
adc
ret
add
jmp
leave
or
push
dec
out
fisttpl
jmp
call
mov
cli
adc
jne
mov
sti
bound
xor
jp
mov
jno
movsb
outsl
loopne
in
js
pushf
pop
mov
push
mov
aad
pop
imul
sub
mov
add
mov
jbe
push
inc
cs
in
arpl
push
sahf
insl
add
scas
sahf
ja
hlt
nop
mov
sar
mov
clc
pop
imul
fwait
repnz
icebp
sahf
mov
into
movsb
dec
mov
fdivl
insl
jno
mov
jmp
ljmp
les
es
push
xchg
xor
out
loope,pn
and
adc
jne
insl
adc
out
mov
cmpsb
mov
xor
frstor
scas
mov
sbb
leave
aaa
out
fidivrl
stos
scas
xor
icebp
cmpsl
push
and
loop
into
dec
pop
lods
inc
stos
push
add
jl
sahf
jae
movsb
mov
shlb
and
shlb
js
adc
cmpsb
ss
stos
cs
cmp
or
stc
jle
mov
sub
mov
popf
pop
add
mov
and
inc
enter
out
add
push
add
and
sub
loopne
xor
loop
adc
pop
pop
cmp
cmp
xchg
and
mov
jg
jnp
nop
cmc
imul
add
adc
xchg
mov
push
push
xlat
sahf
cmp
mov
mov
jne
iret
out
sahf
addb
mov
mov
lods
lods
xor
fstpt
mov
loop
in
andb
mov
cmp
clc
leave
outsl
xchg
dec
pop
xor
ret
fldcw
aaa
andl
inc
ds
xor
adc
movsb
or
cmp
cmpsb
jb
add
outsl
sub
dec
addr16
xchg
scas
sub
cmp
cmpsb
pop
mov
je
aas
jne
mov
pop
cli
int
sbb
adc
or
xor
call
jae
mov
inc
cs
sub
divl
fs
ljmp
push
mov
rcrl
movsb
or
inc
mov
add
movsl
dec
jno
mov
xchg
jae
pop
xor
insl
xlat
pop
inc
mov
fistpll
pop
cld
popa
mov
push
mov
cmp
jbe
xor
mov
mov
movsb
in
mov
imul
sbb
clc
push
add
cli
insl
gs
outsb
xlat
sbb
xor
popf
sub
inc
mov
push
push
in
popa
ljmp
movsb
jnp
mov
mov
cmp
add
push
and
mov
outsb
arpl
mov
mov
mov
movsb
pop
sub
jmp
xor
outsl
xor
bound
jl
jae
movsb
std
sbb
sbb
icebp
or
and
push
cli
mov
jmp
incb
int3
xor
ret
cmpb
mov
fwait
adc
lcall
add
and
nop
sbb
loope
mov
adc
pop
lods
mov
loop
enter
fsub
scas
bound
push
adcl
push
cmp
ds
inc
and
movsb
mov
mov
inc
and
mov
mov
inc
stc
pop
xor
pop
ss
cli
fdivl
stc
mov
pop
scas
adc
and
mov
and
push
push
pop
notb
xor
and
cmp
fsts
pushf
cwtl
fadds
mov
addr16
mov
sub
and
int
add
mov
adc
jg
add
lods
and
sbb
pop
and
gs
arpl
inc
sub
or
mov
imul
mov
imul
mov
or
roll
mov
dec
ja
fidivrl
int
add
mov
cld
cli
fs
or
sahf
mov
xchg
lcall
ja
cmp
mov
imul
cmc
inc
pushf
mov
add
mov
div
popf
inc
andl
mov
es
and
data16
mov
cmp
cli
fsubl
sbb
mov
add
roll
mov
jg
aas
stos
and
adc
ret
cbtw
and
lods
sub
sbb
add
xchg
or
cwtl
push
and
inc
pop
mov
xlat
jne
mov
mov
xchg
into
jge
pop
mov
lcall
cltd
jo
mov
xorl
test
pop
repnz
adcl
or
mov
push
cmpsl
xchg
xchg
movsb
testl
mov
mov
xchg
ljmp
lock
ja
xchg
pop
les
pop
frstor
in
aad
mov
arpl
xor
mov
in
xor
dec
test
sarl
test
push
pop
mov
mov
inc
xor
mov
inc
cmc
iret
outsl
insl
sub
cmp
mov
sub
jmp
clc
pop
add
nop
cli
mov
push
or
cld
arpl
loope
les
jb
loopne
mov
sub
pop
mov
xchg
cmp
mov
mov
mov
sbb
cli
cmp
bnd
arpl
pop
jmp
xchg
icebp
pop
push
das
jmp
sub
pop
stc
loope
adc
mov
aad
movsb
insl
and
fmuls
sub
mov
imul
orl
js
out
xor
add
out
fwait
add
lea
xor
lahf
rcr
inc
mov
scas
push
push
dec
mov
repnz
sahf
inc
mov
cmp
pop
jo
mov
xchg
xor
repnz
mov
enter
dec
xchg
cltd
mov
enter
xor
adc
xchg
jno
nop
pop
jle
pop
icebp
jo
test
push
lea
mov
lret
adc
jnp
test
mov
jno
in
ja
xchg
imul
cmc
sub
f2xm1
cwtl
adc
inc
push
adc
add
lds
aaa
stos
scas
pop
adc
jb
es
adc
daa
push
mov
les
and
addr16
mov
push
pop
stos
arpl
mov
daa
test
xor
mov
std
lods
and
lock
cmc
aas
ret
mov
scas
adc
xor
mov
testb
aad
bound
cmpsb
pop
or
add
popa
mov
inc
jp
call
mov
hlt
or
test
scas
pop
jg
sahf
xor
mov
daa
daa
sbb
adcl
jg
adc
ficompl
movsl
fcmovnbe
mov
arpl
imull
xor
shlb
mov
std
sub
int
iret
xchg
mov
call
mulb
push
cwtl
test
and
ja
jmp
loope
mov
pushf
add
repnz
clc
jae
pushl
icebp
adc
mov
incl
sbb
cmp
dec
rcll
jb
or
shrb
clc
pop
jl
push
std
or
popa
pushf
and
adc
xchg
mov
dec
dec
stc
mov
mov
fnsave
cmp
bound
jp
das
fidivl
push
cli
rorb
add
mov
nop
lcall
stos
outsb
xor
push
jbe
pop
ret
out
adc
stos
mov
mov
decb
lods
cmp
jne
fstpt
loop
loop
out
xor
std
dec
cs
imul
out
mov
adc
or
mulb
test
add
sbb
loopne
fstpl
insl
movsb
lods
jb
lds
push
adc
loope
shll
inc
out
cmp
loop
movsb
xchg
mov
fnsave
xor
mov
and
aaa
xorb
in
dec
incb
pop
hlt
aam
mov
ljmp
daa
sub
loope
lret
sahf
hlt
icebp
xor
adc
mov
je
popa
into
and
popf
pushf
add
mov
jb
shrl
push
pop
mov
gs
pop
add
and
mov
cmc
lret
imul
ror
adc
in
mov
iret
add
push
cmpsb
imul
jbe
out
jno
push
jb
xor
std
ljmp
mov
inc
hlt
aad
push
pop
or
push
mov
jecxz,pt
mov
sti
sub
mov
fildl
hlt
popf
cs
push
add
stc
data16
test
enter
idivb
mov
xor
movsb
insl
mov
out
cs
aad
lock
jnp
loopne
cmc
outsb
or
imul
dec
daa
inc
ficompl
out
pop
in
xchg
or
inc
or
std
lock
sahf
pop
push
push
lcall
jb
jnp
in
mov
lods
or
icebp
pushf
push
mov
sub
out
or
jno
jo
add
in
or
int3
cmp
dec
shrb
out
jl
adcb
jp
jb
mov
cmpsl
shll
jo
pop
mov
adc
lods
jo
inc
dec
repnz
cmp
roll
push
sub
shll
pop
imul
push
mov
mov
les
xor
ret
push
xor
out
movsb
mov
pop
push
adc
cmc
imul
decl
push
sub
mov
cmp
mov
cmp
movsb
in
cmpl
jb
ds
mov
xor
outsb
pushf
jo
std
xchg
inc
mov
mov
mov
repz
negb
enter
out
movl
rorl
inc
pop
repnz
lods
push
cmpl
imul
std
stc
das
dec
mov
push
push
out
rorb
les
jb
mov
sarl
lcall
add
dec
aad
lret
movsb
adc
in
mov
push
pop
into
in
movsb
jne
cmp
into
loopne
push
mov
adc
sub
movsb
inc
mov
ljmp
repz
adc
subb
sti
pop
inc
sbb
sbb
loopne
push
subb
xor
fisubrs
xchg
push
ds
pop
pop
push
cmp
pop
daa
int
add
push
inc
adc
xrelease
inc
cmp
dec
sub
sbb
mov
test
outsl
out
fistl
ss
daa
pop
mov
and
loop
sti
bound
outsb
mov
enter
mov
loopne
dec
fsubr
mov
movsb
cmpsb
and
adc
lahf
jg
mov
cld
lahf
js
movsb
flds
pop
mov
in
sarb
mov
mov
movsb
pop
jp
inc
xchg
imul
jne
icebp
adc
les
mov
lods
pop
xor
imul
movsb
icebp
mov
lods
clc
add
lods
mov
xchg
orb
dec
out
daa
xchg
jb
lds
ret
lcall
insl
xorl
xchg
js
cmp
lock
rolb
jg
sbb
pop
add
movsb
mov
in
in
mov
outsb
movsb
test
sar
sbb
fcmovb
jmp
pushf
add
xchg
and
icebp
in
movsb
testb
out
lahf
outsb
push
mov
pushf
jae
xor
jmp
cmp
fidivrs
cmc
mov
dec
lods
imul
xchg
call
and
enter
mov
xor
pop
push
push
in
bound
cltd
xor
cmp
pop
test
icebp
loope
mov
ret
xchg
clc
dec
xor
fidivrs
and
sub
inc
xchg
vcvtpd2dqx
rclb
std
add
pushf
shll
sbb
push
push
mov
and
out
dec
je
mov
sbb
jmp
addr16
sub
repnz
mov
or
imulb
or
sub
je
push
pop
sar
jb
xor
jnp
ror
push
lock
movsb
push
pop
pop
and
pusha
test
pop
mov
sbb
adc
scas
adc
and
ss
inc
decb
call
xor
and
insb
ss
or
in
shrl
int
pop
int
mov
movsb
test
sub
and
mov
popa
test
pop
mov
lods
push
scas
lods
sub
rcl
cwtl
lock
push
push
pop
lds
mov
clc
inc
hlt
adcb
jl
or
mov
scas
xor
bound
mov
icebp
adc
inc
add
popf
scas
mov
or
loop
mov
jb
dec
sahf
jo
add
add
movsb
arpl
xchg
insl
addb
push
and
icebp
das
mov
cmp
insl
mov
and
sbb
jl
pop
movsb
je
arpl
adc
outsb
jbe
popa
stos
shll
clc
fs
test
inc
pop
mov
jo
xchg
push
xchg
jle
push
push
cmp
aas
pop
sbb
mov
into
xor
sub
sbb
lock
cmp
pop
lods
mov
arpl
xchg
icebp
dec
pop
jb
xchg
pop
mov
divb
mov
mov
sarb
jbe
jecxz
rclb
loop
sbb
pushf
scas
cmp
sbbb
cmp
cmp
lock
loope
pop
mov
stos
adc
adc
mov
push
xchg
jge
jne
jmp
or
out
jp
loope
push
pop
cmp
inc
rcl
ds
xor
icebp
cmp
stos
inc
imul
cli
es
fs
ljmp
add
lret
pop
mov
cmp
push
shlb
dec
mov
ljmp
jecxz
xor
jp
pushf
mov
push
btc
inc
je
dec
ds
pop
mov
into
adc
repz
rorb
jne
hlt
mov
jbe
aaa
mov
mov
test
cli
out
add
sbb
push
icebp
cmp
imul
mov
pushf
test
jbe
lock
fs
xchg
push
scas
mov
lret
cmp
iret
push
fidivl
xor
rol
mov
lods
push
cmpl
push
and
jl
push
fnstcw
daa
sbb
clc
dec
out
inc
cli
xlat
xchg
add
lret
stos
loopne
xchg
repz
inc
push
mov
fadd
mov
scas
xchg
lcall
dec
lahf
leave
into
push
jle
or
fdivrl
repnz
movsb
aam
bound
mov
out
jge
mov
icebp
in
notl
dec
mov
lret
jle
fsubrs
dec
add
xor
je
xor
mov
mov
and
xchg
mov
insl
andl
mov
test
mov
or
sbb
mov
push
nop
dec
fldenv
pop
stos
scas
inc
push
dec
loopne
xchg
pop
pop
ds
mov
sti
inc
and
nop
aam
cmp
lret
xchg
mov
mov
decb
repnz
or
fsubrl
outsb
pop
shll
pop
ds
or
rclb
fimull
movsl
sbb
idivl
mov
stos
add
test
movsb
aaa
sub
push
dec
xchg
iret
adc
lret
inc
add
push
mov
sbb
sbb
out
add
je
mov
out
mov
mov
repz
iret
rol
loopne
jmp
and
mov
sarb
pushf
and
pushf
xchg
lds
fwait
sti
or
pop
mov
icebp
cmp
jbe
pop
cmc
sub
test
pushl
cmc
mov
inc
dec
daa
xlat
aad
push
cmpsb
xorl
pushf
testl
aas
stos
sbb
dec
adc
icebp
cmpsl
das
adc
jl
jp
fwait
inc
or
fdivl
or
aas
lret
dec
scas
ss
nop
sub
mov
and
mov
test
cmp
jmp
mov
sub
mov
xchg
cmp
scas
cmp
add
jns
repz
push
mov
adc
inc
xor
shlb
stos
mov
popf
push
push
div
fwait
test
dec
fwait
lods
outsl
imul
and
push
lock
add
dec
add
jae
jo
push
mov
dec
jp
jne
sub
dec
xor
aaa
mov
in
mov
adc
std
xor
mov
movsl
enter
cmp
insl
adc
rol
adc
pop
jle
test
mov
mov
popf
sbb
push
les
pop
mov
lods
adc
shll
add
jge
mov
lds
jle
ljmp
int
fsubrs
pushf
icebp
pusha
je
scas
lods
ret
and
jo
imul
ret
push
insl
push
inc
jae
rorl
inc
sbb
fisttps
out
enter
sbb
cli
or
xchg
orb
fists
mov
movsb
add
fs
push
lods
and
aaa
dec
push
cmp
testb
mov
mov
loopne
mov
jae
mov
rorb
sub
jle
mov
out
xor
mov
mov
pop
pop
inc
out
cld
inc
ja
lcall
or
xor
jge
dec
fistpl
out
mov
ret
push
xorb
js
in
jb
scas
imul
sahf
aas
or
fistl
jmp
call
in
dec
into
int3
movb
mov
add
fdivrs
xchg
jnp
es
ret
icebp
and
stc
cmp
loopne
mov
fidivrl
shl
or
icebp
sub
add
ret
inc
mov
mov
gs
cs
mov
cmp
pusha
pop
dec
out
mov
ret
sbb
push
faddp
addr16
jle
jbe
mov
movsb
dec
cmp
jno
shrb
je
mov
sarb
inc
daa
and
push
mov
adc
movsb
dec
sub
adc
dec
leave
sub
mov
and
add
pop
adc
dec
fidivs
leave
and
adc
xchg
in
xor
ljmp
sub
dec
sbb
ljmp
cmp
scas
inc
mov
std
add
lock
into
jbe
scas
je
mov
ljmp
mov
jns
inc
mov
in
lcall
imul
scas
mov
sbb
andl
adc
rclb
jmp
push
cmp
scas
ds
cs
pop
mov
sub
mov
sbb
pop
lods
sbb
cmp
jno
daa
cmpsb
xchg
jb
faddl
adc
in
sub
cmp
addr16
insl
es
sbb
rolb
push
add
icebp
jp
mov
sti
int
mov
and
insl
repnz
repz
mov
sub
dec
push
sti
sub
out
test
sbb
fdivr
loopne
in
jns
scas
insl
repz
fstl
pop
cmpsl
mov
jecxz
aad
pop
sarl
pop
mov
sahf
mov
mov
insl
fstps
lock
jge
push
and
jbe
jnp
mov
and
dec
sahf
testb
repz
loopne
jmp
and
mov
test
aas
mov
jbe
leave
aas
pop
xchg
xchg
mov
out
stc
xlat
cmp
jmp
cmp
xchg
adc
dec
test
shlb
enter
adc
dec
sti
push
xchg
and
loope
cmp
jge
or
cmpb
lea
ds
out
mov
adc
out
jg
pop
pop
lock
xor
sub
xchg
or
push
add
scas
icebp
inc
cmp
jae
sbb
lds
enter
mov
in
sbb
mov
movsb
arpl
sub
add
jmp
loopne
cmpsb
cmp
aad
inc
mov
or
ljmp
jbe
cld
mov
loop
cmc
inc
mov
movsb
cli
fbstp
inc
stc
xlat
repnz
sub
rep
je
shll
xor
jg
pop
cmp
xchg
fnsave
sbb
std
ljmp
stos
pop
xor
or
jae
test
rcrb
cmp
bswap
out
mov
or
add
repz
inc
sbb
mov
and
ss
mov
in
lods
fcmove
sbb
or
cmpb
shlb
ret
lds
inc
popf
ret
popf
arpl
xchg
lea
sbb
int
pop
or
jae
inc
imul
sbb
jge
add
repnz
dec
call
aaa
mov
add
add
loop
add
xchg
in
sub
xchg
mov
shlb
cmpsb
xorb
outsl
push
mov
jp
pushf
aaa
popf
push
and
fimuls
pop
xorl
pop
movsb
dec
enter
test
lods
mov
xchg
shll
movsb
mov
xchg
add
pop
ss
sarb
or
fiaddl
movb
sub
fdivl
mov
mov
push
lcall
rcr
mov
mov
shl
mov
adc
loope
fcmovnbe
inc
fiadds
jmp
bound
orb
mov
mov
movsb
cmp
pusha
xor
ret
and
jecxz
sahf
xorl
inc
push
cmp
outsb
hlt
mov
rcll
xchg
ret
push
xorb
adc
scas
sbb
pop
repnz
out
cmp
cmpsl
lock
mov
cmp
cli
nop
out
pop
ficoml
cmp
cwtl
repnz
orb
adc
xor
xor
loope
movsb
lock
movsb
push
xor
or
inc
inc
jp
fdivl
adc
jmp
insl
adc
cmp
sub
ja
jecxz
xchg
std
dec
inc
das
mov
push
and
pop
lcall
negb
push
sub
sub
mov
rcl
loop
adc
pop
add
jb
rolb
lcall
mov
xor
inc
hlt
mov
jp
test
mov
jb
and
movsb
cmp
es
inc
mov
int
cs
cmp
dec
sub
pusha
cmp
pusha
inc
lret
mov
bound
mov
aaa
in
pop
mov
mov
cmpsl
inc
jb
je
hlt
sub
pop
cmp
jae
or
mov
xchg
inc
xor
lods
mov
push
push
xor
adc
jp
jae
mov
push
fidivl
sub
add
popa
xor
ds
lcall
lret
dec
das
inc
addb
stos
fbstp
pop
or
test
or
mov
add
cmp
push
bound
dec
cwtl
ss
jbe
sbb
lds
adc
push
or
cmpl
or
lcall
scas
nop
cld
movb
and
loopne
aaa
xchg
mov
mov
into
arpl
adc
stos
mov
add
sbb
or
iret
sub
das
jb
repnz
pop
sbb
pusha
mov
xor
add
scas
push
inc
stc
lods
pop
sbb
imull
sub
jnp
fwait
shrl
mov
ljmp
cmc
xchg
cwtl
sbb
mov
mov
dec
dec
movsb
outsb
sub
add
xchg
push
outsb
je
inc
jge
inc
pop
pushf
shrl
das
ret
push
aam
and
xor
cmp
push
ss
sbb
xor
jge
loopne
mov
cmpsl
lret
cli
push
push
pop
ljmp
push
in
xor
imul
dec
add
push
ret
sti
jno
jle
das
mov
enter
sbb
lock
sbb
int
lock
cmc
repnz
scas
xchg
aas
aam
movsb
lods
mov
cmp
leave
and
in
es
and
aas
stos
pop
or
mov
mov
nop
std
adc
and
fiadds
andb
sub
ror
fldenv
cmpsl
and
sbb
sti
push
mov
scas
inc
mov
push
scas
xchg
stos
jo
sti
test
test
dec
dec
mov
ljmp
mov
pop
imul
ljmp
les
roll
xor
pop
pusha
adc
sbb
xchg
lcall
stc
int3
mov
lret
mov
add
dec
xor
push
call
cmp
mov
cmpsb
dec
cmp
test
lods
lds
cwtl
sbb
hlt
stos
addr16
or
xor
cmp
xchg
dec
shl
xor
insl
je
dec
mov
aaa
and
inc
sub
or
xchg
negb
int3
cli
xchg
xor
loop
sti
push
mov
popa
adc
movsl
jb
cmp
jl
movsb
pop
fisubrs
xchg
data16
inc
sbb
je
mov
fs
xchg
xor
dec
xor
sarl
xlat
loope
push
inc
pop
pop
xchg
jo
aas
pslld
xchg
test
push
jge
popf
loope
movsb
add
rcll
popa
test
push
icebp
mov
add
sub
cmp
pusha
outsl
jnp
out
add
jb
aas
add
sub
fcmovnb
xchg
jno
dec
push
dec
xor
mov
dec
es
and
xchg
cs
orb
push
jge
shrl
and
mov
mov
mov
mov
xchg
jle
or
popf
cmp
rep
mov
aas
jae
aas
in
jmp
fbld
xor
lret
pusha
jbe
jb
shrb
adc
and
out
adc
mov
mov
enter
movsb
dec
add
and
mull
pop
test
sbb
ja
cld
call
daa
popa
ljmp
addb
mov
loop
cmc
push
jle
add
adc
rorl
xchg
clc
scas
push
xchg
and
lods
push
in
mov
imul
push
jno
data16
mov
or
mov
repnz
mov
sbb
sbb
rorl
or
mov
fwait
push
scas
dec
andb
loop
rorb
inc
ret
in
mov
cmp
or
scas
insl
loop
lret
jle
and
icebp
ds
push
dec
jle
or
nop
icebp
into
fwait
sti
pop
outsb
outsb
test
mov
add
xchg
sbb
orl
imul
xchg
clc
nop
dec
mov
repnz
hlt
stc
ss
out
les
das
sarb
int3
sbb
outsb
sbb
sti
jb
push
pop
adc
lcall
mov
jno
cmpsb
mov
les
call
jae
inc
cltd
stos
pop
add
xchg
leave
mov
mov
loop
sti
pop
and
cmp
cli
in
cwtl
inc
xor
aam
test
mov
enter
add
insl
mov
movsb
sbb
pushf
pop
ret
dec
mov
mov
mov
sahf
mov
pop
mov
rol
loope
adc
mov
sbb
lock
sub
aas
ss
jl
imul
mov
jecxz
xor
imul
sbb
je
test
jecxz
mov
pop
mov
add
jnp
or
cmc
pop
enter
testl
movsb
jns
fbstp
lcall
adc
test
leave
icebp
stos
mov
in
mov
pop
lock
fistps
sub
aaa
xlat
loopne
ss
adc
pop
push
sub
adc
hlt
imul
jo
xor
out
jp
xorb
movsb
jae
insl
jnp
int3
mov
mov
sbb
push
push
pusha
movsb
pop
xlat
xor
mov
lahf
jae
xorb
movsb
cwtl
cld
lds
push
lcall
sub
sub
repnz
sarb
stos
fsubrl
lcall
add
pop
xor
shl
sbb
cmp
jb
xchg
fists
std
push
repz
cld
cmp
leave
out
or
stos
rcrl
jp
aas
lcall
jg
rclb
shl
sti
mov
or
stos
sbb
adc
test
scas
insl
mov
mov
jne
cmp
push
movsl
dec
pop
add
pop
xchg
jmp
push
je
add
movsb
popa
in
xchg
popf
faddl
mov
mov
je
aaa
mov
sahf
cmp
int
or
add
sbb
sub
das
cld
fadd
add
icebp
pusha
fcompl
mov
loop
or
push
cmp
mov
adc
cld
out
scas
add
sub
push
inc
in
repnz
cli
sub
xchg
add
bound
pop
call
sub
imul
sahf
int3
addr16
xchg
pop
or
push
jo
xchg
cmc
xor
rcrb
inc
sarl
mov
out
adc
sbb
daa
or
and
rcll
pop
jne
sbb
and
jns
and
cwtl
sbb
movsb
test
and
negb
sbb
mov
in
xor
shrl
sbb
pop
dec
andl
mov
shll
jnp
jecxz
mov
lea
ss
mov
push
fimuls
out
pop
outsb
loop
fsts
ja
adc
sahf
xor
pop
dec
adc
popa
and
scas
xor
sbb
mov
sbb
std
push
xorb
pop
push
in
jle
lods
inc
inc
cmp
scas
out
outsl
jnp
shlb
lret
out
sbb
mov
jle
sar
inc
stos
aad
xchg
sub
add
pop
aam
arpl
fistl
pop
repnz
mov
mov
mov
and
and
popa
jg
fistps
shrb
dec
aas
outsb
icebp
or
js
and
and
push
xor
adc
int3
sub
cmp
xchg
cmpb
pop
sti
test
arpl
xchg
movsb
test
sub
outsl
push
add
fs
pushf
popf
getsec
xorl
mov
sahf
jnp
clc
arpl
jo
out
pop
sbb
fdivrl
cltd
push
loopne
sbb
imul
inc
andl
and
leave
in
popa
xor
clc
push
mov
add
stos
and
pop
sub
dec
pop
mov
and
lods
mov
adcb
ljmp
repnz
popf
lods
ljmp
testl
in
imul
mov
jno
lea
cli
mov
rclb
adc
stc
cld
mov
pop
sub
js
cmp
lods
xor
mov
mov
pop
ret
adc
jmp
pop
add
add
addr16
lock
or
outsb
xor
daa
iret
nop
movsb
aaa
add
inc
ret
mov
push
xchg
repz
lahf
inc
fwait
test
xchg
cmpsb
leave
add
in
bound
hlt
add
movsb
cs
jg
js
dec
pop
cwtl
lret
ljmp
add
pusha
les
ja
cmp
pop
xor
add
mov
mov
mov
mov
xor
inc
mov
inc
xchg
or
gs
jl,pt
mov
iret
xlat
inc
jmp
and
rorl
popa
sub
mov
cmp
mov
cs
inc
mov
jp
jae
adc
jg
inc
xchg
pop
inc
nop
repnz
aad
aam
scas
or
mov
mov
xor
mov
inc
inc
inc
rclb
or
aam
and
adc
ret
ss
bnd
leave
sti
push
cmp
mov
mov
inc
mov
scas
cmpsb
dec
dec
jae
dec
notl
popf
lods
sbb
scas
loopne
add
fmulp
xor
xlat
loope
rorl
repnz
sbb
mov
cmp
aaa
push
push
test
shlb
loopne
dec
jb
or
or
popf
lret
test
cmp
push
sbb
std
pushf
insl
cmc
jmp
sbb
imul
jbe
je
add
xchg
cs
cld
jle
xor
mov
out
shll
add
mov
cmp
dec
adc
popf
movsl
pop
dec
lds
shll
inc
mov
inc
cwtl
push
xchg
imul
push
sub
rep
mov
pop
loope
add
jae
mov
push
mov
pop
cmp
mov
jne
mov
popf
ss
pop
sub
xchg
movsb
mov
jno
mov
or
andb
xchg
repnz
push
je
xor
scas
xchg
dec
jle
popa
cli
andl
imul
roll
lret
popa
mov
icebp
test
sbb
xorb
adc
ret
into
xchg
out
pop
test
pop
pop
xchg
andl
mov
mov
xchg
outsb
arpl
inc
daa
popf
inc
hlt
add
xlat
adc
xor
or
popa
pop
shrl
in
shl
repnz
test
or
adc
and
mov
idiv
lret
sbb
inc
lret
cs
imul
xor
adc
test
pusha
scas
mov
xchg
inc
pop
lds
aam
fists
pop
jo
dec
cmp
das
add
cs
push
loope
movl
in
ds
aaa
mov
cmp
ljmp
and
shrl
cmp
inc
adc
sub
sub
ljmp
push
ss
adc
jnp
adc
lock
dec
and
jno
outsb
cmpxchg
pop
push
ret
xchg
push
mov
shll
sbb
sbb
sbbb
mov
rolb
in
ret
pop
sbb
sbb
dec
mov
daa
mov
mov
lock
xor
cmp
shll
into
shl
push
rolb
std
hlt
inc
add
ds
into
pop
jle
pop
add
adc
xor
jp
jns
jo
mov
es
inc
daa
dec
and
dec
std
fildl
ja
sub
cltd
lods
inc
cmc
cltd
loopne
hlt
loopne
fadd
shlb
lods
ror
xor
lret
adc
cs
push
adc
dec
add
add
mov
fimuls
or
repnz
ret
jge
jl
push
cmp
cmp
sahf
push
sub
jp
xchg
jmp
mov
mov
xor
mov
sub
out
out
enter
mov
cmp
pop
pop
jp
outsb
jb
add
lock
sub
stos
mov
mov
pop
out
mov
mov
cmp
sbb
fyl2x
cwtl
stc
mov
pop
repz
repz
lret
stc
aad
xchg
sbb
or
jle
adc
gs
adc
movsb
insl
aaa
push
clc
jne
js
mov
xor
les
mov
xor
pushf
inc
xorl
mov
and
fimuls
out
xor
mov
push
sbb
daa
push
add
push
xor
mov
pop
mov
mov
in
iret
or
lea
fimull
movsb
mulb
daa
inc
mov
mov
or
pop
repz
into
sub
pop
cmp
lcall
adc
aas
or
shll
popf
push
mov
jae
cmp
xor
jno
icebp
mov
push
pop
and
mov
ror
and
adc
push
call
mov
mov
and
inc
cmovb
mov
xchg
arpl
push
pusha
mov
add
cmp
ds
pop
pop
jle
adc
jno
or
dec
fldenv
xor
mov
fdivrl
lods
mov
inc
mov
ljmp
pop
scas
cwtl
bound
cli
adc
push
sahf
mov
insl
andl
push
mov
outsb
and
and
xor
mov
loopne
inc
jge
pop
xchg
loopne
inc
cmpsb
xlat
mov
push
mov
ss
xor
or
mov
andb
inc
pusha
data16
xor
daa
add
pop
fstp
mov
jg
aaa
movsb
push
cmp
mov
or
gs
push
movsb
lock
outsb
inc
and
xchg
in
fiadds
cmc
xchg
fwait
imul
or
ljmp
xchg
dec
pop
or
jl
pop
jae
rdmsr
adc
movsb
fadds
mov
pop
dec
mov
jmp
cwtl
cmpsb
popw
movsl
ja
sub
popa
pop
mov
repz
jg
inc
ret
fwait
je
inc
sub
xor
xchg
jecxz
in
adc
jnp
pop
inc
mov
or
mov
into
pop
xor
mov
addr16
push
insl
jne
sub
mov
lods
mov
addr16
ljmp
inc
ret
mov
and
add
ficoml
cli
jo
fwait
inc
sbb
mov
movsb
cmpsl
das
pushf
ret
sub
lods
bound
addl
cmp
pop
loop
dec
shlb
sub
mov
mov
push
enter
cmp
stos
adc
mov
daa
in
xor
movsb
push
testl
xor
mov
xchg
das
pushf
mov
sti
adc
bound
daa
and
loopne
stos
sub
inc
stos
cs
mov
sbb
clc
fbstp
loopne
aad
or
pop
dec
push
mov
dec
xchg
jmp
jle
test
out
lea
movsb
popa
cld
push
inc
adc
maxps
jno
sub
jb
mov
push
cwtl
add
cli
aas
lock
scas
andb
and
adc
imul
aas
outsb
xchg
mov
es
sarl
out
cmc
and
int
jne
leave
mov
pop
jl
movsb
sbb
out
mov
cmp
out
cli
jmp
lret
push
jg
ja
jns
das
in
loop
dec
daa
mov
mov
lahf
sub
fiadds
adc
add
cltd
pop
loopne
pop
dec
outsb
and
xchg
notb
nop
jmp
popf
test
inc
pop
mov
ljmp
push
addl
testb
aaa
aad
fimuls
adc
outsb
adc
rcr
xchg
xor
scas
inc
xor
hlt
xchg
imul
daa
jno
enter
inc
lock
mov
inc
sub
cwtl
decb
iret
test
xchg
inc
mov
outsb
inc
add
mov
scas
loope
jmp
mov
jbe
je
sub
popa
shll
push
pop
mov
movzbl
mov
imul
add
cld
ret
mov
movsb
add
mov
xor
jmp
cmp
dec
mov
pushf
pop
sar
push
push
orb
cmc
push
or
pushf
and
jae
pop
jl
shlb
inc
aam
leave
xchg
pop
xor
and
add
push
ss
shl
mov
mov
lahf
mov
cmp
pop
xchg
push
inc
jae
mov
dec
lahf
js
push
inc
subb
xor
fcoms
ret
cmpsb
jne
mov
clc
mov
mov
decl
mov
dec
je
and
stos
icebp
and
push
xchg
push
and
pop
xchg
push
mov
cs
ror
add
push
rorb
and
iret
loope
addl
jno
mov
ss
repnz
add
xor
mov
fisttps
lret
xor
arpl
pop
dec
jno
repnz
xorb
aad
scas
mov
jmp
test
or
cmp
outsb
push
jl
xchg
and
xor
mov
add
adc
int
fwait
nop
ficomps
push
rclb
jg
dec
jecxz
clc
mov
add
sub
pop
ja
sbb
daa
es
push
xor
mov
xor
jno
ds
mov
repnz
mov
push
out
xchg
xor
mov
cld
and
aaa
or
in
mov
xchg
lds
xor
mov
into
popa
sbb
test
pusha
shll
mov
or
jg
stos
stos
add
sub
pop
mov
mov
fsubrl
and
shll
push
xchg
es
mov
in
pop
repnz
out
mov
cmp
cmp
push
mov
fmul
mov
or
push
jnp
pop
and
xchg
sub
daa
mov
pop
das
jne
inc
popa
in
or
cmp
fidivrl
xchg
mov
inc
add
imul
dec
negb
out
das
or
mov
in
lahf
dec
push
adcb
or
lret
mov
fstl
in
insb
mov
outsb
xor
mov
jmp
mov
sbb
push
pop
sarb
jmp
cmp
fnstsw
iret
sbb
mov
push
sti
rcrw
inc
jbe
aad
mov
mov
add
xor
mov
out
fbld
mov
inc
icebp
mov
dec
xor
mov
aas
repz
sub
cmpsl
adc
pushf
xchg
mov
daa
icebp
ljmp
stc
cs
cwtl
das
pop
mov
add
ja
dec
mov
cwtl
sbb
push
lods
ds
out
pushf
push
adcb
add
inc
lock
inc
popf
aaa
mov
push
idivb
std
ss
adc
ror
jg
cs
lock
lods
daa
lcall
and
dec
cmc
mov
mov
xor
das
stos
jmp
jae
add
cmp
fisubrl
add
adc
jns
stos
jmp
hlt
into
outsl
fstps
mov
jl
jmp
rcl
fs
loop
push
sub
inc
nop
push
rcr
sub
repnz
inc
mov
in
mov
mov
test
test
ds
push
stc
mov
cmc
lods
fs
mov
gs
jmp
gs
push
ror
push
test
aas
jle
jne
jbe
or
and
adc
jbe
and
add
scas
sbb
movsb
lea
testl
mov
scas
das
xchg
mov
pop
inc
lcall
sub
xchg
push
lea
add
xorb
dec
pop
mov
xor
cld
push
bnd
pop
fucomip
mov
inc
xchg
idiv
inc
je
test
pushl
icebp
cli
inc
adc
cmc
dec
pop
pop
in
dec
stos
or
stc
inc
shl
mov
imul
adc
daa
lahf
push
pop
mov
mov
adc
inc
mov
xor
pop
scas
aad
leave
push
ds
imul
fistpll
insb
adc
fldt
ljmp
xor
xorb
idivb
and
add
hlt
js
adc
jmp
ljmp
notb
mov
pop
xor
sbb
stc
inc
add
push
scas
icebp
int
loop
ja
xorb
push
cmp
jg
pop
lds
rorl
adc
shlb
cmpsl
mov
roll
es
or
pop
xchg
add
scas
lcall
mov
jb
mov
or
outsl
div
lock
adc
add
je
imull
sub
rcll
enter
addb
pop
repz
mov
inc
ljmp
pop
outsl
sbb
rcrb
xchg
mov
mov
into
ret
mov
xchg
adc
push
mov
add
cltd
dec
mov
mov
pop
icebp
popf
mov
jmp
xchg
mov
lock
icebp
pop
idivb
mov
cmp
repz
shlb
clc
mov
mov
sub
lahf
cmp
ljmp
outsl
cmp
xor
sub
pop
jb
aas
ja
mov
inc
pop
arpl
push
stc
mov
in
push
lods
mov
cmpb
or
cltd
jp
add
das
bound
mov
or
cwtl
ret
pop
call
mov
nop
and
loope
xchg
pop
pop
jb
cmp
sti
jb
ss
subb
push
shr
jae
adc
js
fsubrp
mov
mov
sti
push
pop
sarl
mov
jecxz
dec
rorb
repnz
or
and
xchg
imul
loopne
xlat
repz
stos
xchg
pop
jb
pop
in
idivb
or
pop
push
jae
mov
bswap
aaa
jg
and
cmp
call
dec
lret
jp
dec
out
movsb
fiaddl
rcr
mov
roll
dec
jne
xchg
cmpsb
mov
fiaddl
mov
push
pop
cmpsl
adc
ss
das
inc
int
xchg
adc
mov
testb
or
dec
jbe
xchg
shll
adc
aaa
adc
cmpsb
add
or
sbbl
or
cmpl
das
pop
inc
icebp
icebp
xchg
xchg
in
mov
ss
shr
mov
adc
xchg
test
pop
xchg
pop
rorl
stos
xchg
leave
mov
cli
aam
in
movsb
sbb
jle
outsl
or
loope
adcb
adc
or
clc
jb
bound
daa
aaa
adc
xor
frstor
test
pop
or
popl
jg
cmpl
fistl
or
push
and
out
pop
test
std
dec
xor
rorb
enter
scas
repz
loopne
out
or
loopne
xor
cmp
push
sahf
mov
cmpsb
int
push
xor
fwait
jmp
aad
pop
fsubl
popf
sub
inc
aam
inc
sub
loope
imul
ds
movsb
dec
test
pusha
sub
mov
fwait
aad
xor
and
or
bound
stc
sarl
mov
sbb
jae
cmp
cld
inc
sahf
mov
and
inc
mov
stos
xor
fsubrs
jb
shll
mov
mov
mov
jl
addr16
mov
jmp
test
repz
cs
sbb
int
cmpsb
mov
mov
pop
jb
mov
push
cmp
fwait
les
add
or
xor
xchg
cwtl
push
loop
fdivrs
rcl
jnp
stos
cmp
cs
pop
pop
jno
jle
sbb
mov
leave
aad
lods
sar
jl
xchg
pushf
icebp
pusha
add
inc
adc
sbb
inc
rcl
cld
movsb
sub
mov
pop
adc
in
push
or
mov
imull
mov
jmp
repnz
mov
loopne
addl
testb
pop
pop
add
lahf
push
outsl
test
hlt
pusha
in
fsubr
test
stc
cmpl
mov
mov
ret
ja
and
leave
inc
pusha
mov
jno
stos
add
pop
movsb
scas
outsb
dec
pop
xor
jp
sti
out
mov
sbb
loopne
mov
fdivp
loop
aaa
push
and
mov
cmp
pop
lods
aas
data16
or
lea
push
int
mov
std
mov
pop
jne
xor
pop
lods
lock
leave
insl
shlb
lret
and
push
jns
xor
mov
cmpsl
cmp
inc
xchg
and
mov
das
inc
adc
jbe
mov
push
int
aas
fstl
std
outsl
push
mov
or
int
mov
in
mov
inc
and
scas
cmp
in
and
sarl
jecxz
add
cld
mov
sbb
xorl
imul
mov
shlb
jp
inc
xor
adc
scas
xchg
icebp
sub
iret
imulb
mov
aaa
or
test
fistl
fcomip
xchg
jbe
inc
rorb
aaa
adc
lret
adcb
mov
outsb
and
dec
or
add
in
mov
out
mov
mov
je
orb
flds
and
sbb
int3
lea
aas
orl
loope
cld
cmp
dec
lock
in
or
and
mov
sub
loop
mov
mov
or
je
xlat
fadds
dec
movsl
adc
xchg
add
lahf
loop
cld
mov
int
jbe
aad
mov
rcrl
lods
out
sti
mov
sbb
out
mov
xchg
adc
xor
ja
dec
pop
rclb
pop
ja
icebp
icebp
lock
int3
xchg
movsb
push
and
push
mov
rcl
adc
imul
xlat
out
fadd
rdmsr
mov
bound
mov
cld
icebp
loop
adc
pop
repnz
sub
cwtl
jae
ljmp
sub
cmp
add
xlat
cmp
loopne
out
call
ljmp
push
popf
movsl
xor
mov
mov
roll
aaa
add
xor
test
mov
repnz
cmpsb
loop
cmp
jnp
das
pop
pushf
jno
and
call
jb
sub
loop
scas
loope
das
mov
or
and
jb
adc
test
xor
notb
jb
xor
jne
cmc
mov
and
shr
ds
sbb
dec
push
xor
cmp
addl
push
out
fsub
aas
jmp
or
adcb
mov
out
mov
ds
xor
in
xchg
push
mov
test
xor
dec
es
adc
mov
jne
jbe
push
clc
sbb
jmp
jo
mov
in
xchg
std
fisttpll
xor
test
inc
inc
xchg
sbb
movsb
mov
aam
or
cltd
mov
xor
lcall
roll
jns
and
mov
inc
lahf
jns
mov
enter
pop
cli
xlat
out
add
mov
jb
enter
rcrb
data16
mov
cmp
sub
sbb
jmp
fstps
ss
mov
into
push
test
xchg
mov
push
fs
sbb
ljmp
push
outsl
push
fs
and
adc
stos
js
aad
jns
lods
loopne
shr
insb
aad
or
push
xor
mov
push
push
sbbb
rcr
add
add
das
movsb
adc
and
cmp
das
mov
fdivrp
mov
rorl
adc
xchg
imul
mov
lock
jb
or
lahf
pop
push
rolb
lahf
popf
negl
add
fsubrp
decl
pusha
clc
inc
push
into
repnz
adc
dec
xchg
sbb
negl
shl
mov
xchg
clc
ret
push
mov
imul
stos
pop
stc
sbb
inc
pushf
push
jne
xchg
call
repnz
inc
dec
push
cmp
push
mov
cmpb
sub
lcall
out
adc
jmp
ficomps
int
rorl
test
and
rcll
pop
mov
out
daa
sbb
stc
or
lock
ret
inc
sti
pushf
mov
lret
and
bound
mov
dec
notb
adc
test
dec
mov
imul
pop
inc
adc
jl
jns
aas
jb
xor
leave
mov
jnp
adc
mov
imul
iret
icebp
cmp
scas
add
xlat
ljmp
cmc
cmpsl
loope
mov
fcompl
add
lcall
pop
xchg
fcomps
jno
push
pop
imul
lds
test
mov
cli
loop
jae
adc
dec
addr16
add
add
sub
test
in
cli
imul
cmpb
mov
mov
cmp
adc
popa
mov
mov
jno
xchg
cmp
out
cmp
and
jp
adcl
test
and
ret
push
out
insl
mov
das
movsb
stos
push
lahf
add
xor
aas
xchg
into
mov
mov
lret
xor
mov
fiadds
jp
movsb
cs
rorl
shl
mov
or
sbb
cld
and
push
scas
or
lods
loop
mov
popa
sub
cmp
mov
popf
xchg
repnz
sbb
inc
sub
mov
fwait
push
nop
je
xor
sti
jb
icebp
in
sbb
lcall
out
mov
add
and
inc
mov
jnp
mov
adcb
add
sahf
dec
out
push
test
fcoms
and
mov
data16
sub
ffreep
jge
or
fldenv
xchg
dec
les
and
mov
cs
clc
and
adc
ficompl
adc
xor
cmp
mov
rcrl
inc
push
mov
jnp
popf
mov
or
daa
jbe
pushf
adc
xor
xor
xor
dec
andl
add
and
or
push
or
clc
xorb
mov
mov
jge
outsb
xor
and
cmpb
add
dec
cmp
mov
sub
and
hlt
cmp
xor
pop
inc
sahf
inc
pop
xor
cmc
outsl
mov
gs
inc
lcall
pop
dec
punpckldq
dec
and
jge
into
sbb
scas
les
xor
mov
stc
pop
bnd
jnp
jg
jae
mov
ret
mov
jo
aad
and
pop
xlat
fldt
rcll
mov
aaa
insl
xchg
lods
jl
inc
xor
sub
cmp
xor
mov
aas
daa
out
sti
dec
adc
movb
in
pop
shl
loopne
sar
xchg
push
stos
imul
push
pop
dec
in
movsb
sub
rcrl
int
mov
lods
push
pop
inc
jmp
push
jo
iret
and
pop
inc
or
call
mov
icebp
xchg
mov
adc
fstl
ss
mov
inc
sub
and
ds
pushf
cmc
mov
jns
pop
mov
cli
cli
or
aaa
add
aam
jp
or
lea
aam
cmpsl
test
aad
xchg
inc
out
adcl
loop
mov
jno
cmp
rcl
loopne
nop
push
ja
or
pop
shll
scas
cli
adc
stos
and
pop
ja
ds
jbe
mov
jno
add
mov
jb
loopne
mov
sbb
inc
push
mov
pushf
movsb
lods
xorb
nop
call
jecxz
mov
jle
mov
pop
js
pop
data16
mov
int
test
dec
aaa
sbb
push
and
idivl
shll
xor
xchg
add
xchg
and
fistpll
inc
jmp
mov
cmp
inc
dec
pop
jb
inc
jle
movsl
xlat
pop
cmp
rcrl
cmpb
push
aas
dec
or
jo
sub
mov
inc
clc
mov
mov
filds
in
xchg
subb
mov
sub
ss
jnp
ljmp
adc
lret
test
cmpsb
nop
jb
and
inc
xchg
mul
sbb
mov
push
sbb
jne
and
xchg
cmp
cmpl
andl
and
pushf
shrb
aam
stc
adc
xchg
lret
push
jb
adc
leave
xchg
hlt
imul
pop
jge
and
jnp
in
stc
mov
mov
movq
mov
pop
loop
jmp
divl
push
cmp
ret
add
xchg
movsb
jecxz
jmp
rorb
cmp
xor
push
cmp
inc
mov
xchg
outsb
rcll
orb
and
lahf
jge
mov
mov
adc
mull
in
add
xchg
mov
lret
jg
add
sahf
inc
mov
repz
test
inc
pusha
cli
pop
mulb
lea
mov
and
mov
test
jle
ja
jne
dec
fsts
add
lahf
out
shrl
push
clc
mov
sbb
push
xor
xorb
jno
cmpsb
ljmp
push
inc
sbbl
jo
push
ljmp
xor
lods
dec
push
mov
xchg
mov
xor
or
sarb
icebp
cwtl
ss
fidivrl
and
push
or
or
adc
mov
fadd
or
test
enter
adc
xor
call
dec
xchg
outsb
cmp
das
fwait
in
inc
xor
push
repnz
adc
das
cld
add
jle
jns
push
pusha
pop
stos
dec
pop
js,pn
pop
movsb
mov
jo
pop
fnstenv
movsb
shrb
das
mov
int
or
sti
shrl
sbb
loope
and
je
jb
leave
call
xchg
sub
push
sbb
pop
mov
mov
sbb
loopne
scas
push
mov
or
xor
pop
aad
mov
mov
fmull
mov
test
dec
lods
jae
xor
and
enter
and
or
cmc
mov
mov
out
and
or
clc
push
lods
mov
incl
cmp
int3
mov
clc
orb
mov
cmc
aad
mov
loopne
mov
in
dec
jae
xor
adc
push
mov
lidtl
jmp
test
jl
in
out
fwait
and
dec
dec
cmp
arpl
mov
and
cmp
mov
mov
decl
js
aas
mov
hlt
pusha
fwait
xchg
rclb
sti
lcall
xchg
fstpt
loopne
pop
adc
mov
mov
test
push
mov
test
stc
adc
mov
xchg
and
loope
je
mov
push
cmpsb
das
negb
fdivr
mov
shll
into
xchg
add
lea
mov
ljmp
mov
pop
stos
push
test
sbb
sbb
orb
add
lods
push
mov
or
lea
test
shrl
xchg
mov
sti
fucomi
mov
inc
mov
and
roll
movsl
xchg
mov
mov
push
xor
jmp
loopne
adc
mov
mov
ljmp
repnz
sarb
test
pusha
cmp
loop
test
adc
sub
or
dec
movsb
fisubrs
std
out
xor
dec
popf
sbb
lds
pop
test
mov
mov
lret
dec
icebp
outsb
mov
pop
lea
add
adc
inc
xor
jo
mov
inc
fmul
mov
frstpm(287
or
push
add
jp
or
mov
pop
mov
cmp
mov
lret
mulb
mov
jo
add
xchg
jb
cmp
test
lcall
xlat
sbb
xchg
xchg
xchg
insl
in
shlb
cmpsl
push
push
mov
cli
lods
or
lret
mov
enter
push
data16
not
push
jg
mov
icebp
adc
mov
mov
adc
out
lods
mov
dec
and
push
jl
test
js
xchg
add
dec
cmp
rorl
loop
and
pop
add
sub
cmp
int3
mov
xchg
pop
fimull
jl
push
pop
test
xchg
ljmp
mov
test
or
push
stos
and
mov
imul
outsb
adc
push
sbb
loop
ja
loop
daa
and
inc
ret
daa
in
nop
addl
cwtl
xor
stos
or
ljmp
or
push
mov
push
lret
dec
call
jae
xor
test
stos
mov
jae
das
ret
mov
xchg
cmpsb
sbb
mov
sahf
repnz
mov
test
sbb
push
mov
test
mov
arpl
scas
mov
sub
mov
shlb
cmp
pop
loop
das
fucom
and
scas
xchg
fists
cmp
rcrl
std
je
mov
jnp
call
fidivl
sbb
pop
enter
shlb
adc
jb
add
leave
icebp
dec
lea
in
mov
sbb
jns
mov
or
movntq
adc
jne
and
xor
js
aam
pop
cs
aas
mov
mov
in
mov
ud2
mov
scas
xor
in
sbb
pop
pushl
dec
push
imul
pop
lret
add
test
pusha
jae
sub
inc
mov
jne
out
stc
inc
cmp
cmpsl
out
mov
cmp
outsb
roll
test
push
repnz
cmp
clc
cmpsl
add
jns
bound
movsb
adc
pushf
cmp
fcmovu
sarb
adc
and
lret
mov
add
xlat
loope
jmp
jge
test
stos
add
cmp
popf
rorl
jge
lock
fcomps
js
dec
div
or
push
dec
jg
pushf
ret
test
jge
mov
addr16
adc
lods
stos
fwait
xor
adc
lcall
mov
cmp
das
add
pop
test
pop
mov
mov
testb
out
cli
in
xchg
fwait
sub
jb
adc
xchg
fbstp
enter
xchg
mov
mov
cmp
repnz
add
xor
out
dec
ret
xor
shlb
cmc
lock
jl
pushf
lods
gs
push
in
es
ds
jbe
in
xchg
mov
dec
sbb
adc
sbb
insb
shrb
out
mov
pop
in
insl
mov
dec
sub
out
movsl
lock
dec
repnz
andl
int
xor
cmp
fisubrl
sti
xchg
push
lods
lds
mov
jae
out
std
push
inc
cs
mov
mov
rcll
test
xor
ds
adc
lret
inc
leave
cwtl
xchg
sub
ss
lds
adc
int
lcall
popf
pop
jns
and
mov
mov
and
es
jbe
and
mov
xor
sub
ret
and
or
mov
lock
stos
loop
and
outsb
push
cmovle
mov
dec
or
into
in
sti
test
jmp
push
pop
push
sub
mov
rorl
dec
in
arpl
lahf
cld
pop
mov
xor
cmovae
into
dec
sbb
adc
inc
int3
lods
push
push
test
repnz
xor
jmp
aas
cmpsb
and
xor
pop
add
fldt
cmp
xor
fcomip
imulb
sub
cmp
stos
inc
mov
xor
adcl
sub
adc
pop
into
or
xor
push
into
and
inc
adc
int3
mov
fdivs
add
sbb
les
inc
cli
mov
dec
sub
adc
pop
into
fidivs
int3
fsubrs
stc
lret
mov
cmp
inc
xorl
aas
push
movb
lea
jno
ds
aas
and
mov
iret
cmp
sub
and
xor
cmpsb
inc
shlb
cltd
xlat
xor
xlat
xor
je
push
mov
mov
test
xchg
ljmp
nop
add
cmpsl
jnp
dec
or
in
jl
push
push
sbb
pop
repnz
lock
jg
dec
cmp
add
xor
mov
sbb
and
adc
mov
loop
movsl
imul
dec
test
loope
notb
xor
rcrb
insb
cmp
xchg
jl
lods
sbb
pop
rclb
mov
cld
lods
mov
mov
add
cmp
rorb
sbb
push
pop
scas
dec
push
scas
rcll
in
rcll
scas
aad
and
jp
pop
mov
xor
mov
or
xchg
and
cmp
and
ja
aas
xor
adc
mov
test
mov
and
mov
mov
and
addr16
and
scas
loopne
or
and
jb
mov
and
adcb
incb
mov
out
sub
jle
xor
inc
cld
mov
sti
adc
negl
aas
mov
stos
clc
adc
pop
popf
and
nop
mov
mov
adcb
and
adc
pusha
iret
stos
lock
cmpsl
jge
jae
or
loop
and
mov
mov
mov
xor
mov
scas
xor
fdivr
lods
stos
mov
insl
jp
jo
mov
mov
jb
xor
sti
adc
in
jae
jmp
jl
and
test
daa
pop
and
fwait
or
or
mov
scas
push
mov
icebp
rcll
lahf
pop
adc
int3
jle
cld
mov
ljmp
lcall
cmp
fwait
adc
sbb
jle
sub
xor
and
mov
adc
icebp
add
cs
movsb
loope
mov
aaa
adc
mov
xorb
cld
shll
pop
and
and
xor
and
loopne
mov
arpl
pusha
adc
jnp
sbb
out
cld
inc
mov
add
adc
and
fisubs
lcall
sub
jne
mov
mov
ljmp
cli
int3
mov
mov
mov
into
pop
cmp
mov
mulb
dec
sub
xor
mov
mov
mov
mov
dec
cli
out
pop
and
in
mov
ret
cli
jmp
cs
and
movsb
jns
dec
js
vmwrite
xchg
cmp
inc
cmovs
cli
cmp
mov
xlat
inc
jp
and
fnsave
pop
xor
push
mov
out
push
pop
pushf
cmp
aaa
and
mov
cmp
xor
xchg
and
xlat
mov
fucom
mov
mov
imul
and
push
xor
xor
repnz
jecxz
loop
add
sbb
jl
add
cmp
push
inc
mov
lods
pop
cld
repz
test
cmp
sbb
xor
andl
in
dec
mov
add
jae
xor
movzbl
sti
fisubl
xor
pop
xor
shll
mov
pop
adc
push
mov
cmp
insl
xorl
mov
out
sahf
insb
cmp
xor
leave
pop
adc
and
aam
cmp
sub
xchg
ret
jae
imul
pop
aaa
mov
push
int
pop
fwait
outsb
ljmp
sbb
out
xor
aaa
aaa
push
pushf
mov
cwtl
rolb
sub
or
push
xor
int
cmc
repnz
jae
mov
mov
fbld
adc
loop
or
xor
and
cmp
add
xchg
xchg
xor
jns
daa
jmp
fidivrl
dec
sub
lds
jo
aaa
xlat
sub
mov
xchg
repnz
jb
xor
cmp
xor
repz
xorl
pop
mov
xchg
xor
rcrl
mov
mov
push
cmp
cmp
in
fdivp
and
lock
subb
xor
cmp
out
mov
icebp
xor
mov
fistpl
cmp
cmp
negl
cmc
mulb
and
aas
pop
data16
lds
and
pop
and
adc
aas
insb
bound
jl
mulb
outsl
pop
repnz
mov
rep
mov
add
lods
jge
mov
lcall
sti
sbb
and
mov
idivl
mov
mov
std
jge
push
or
js
mov
add
pusha
icebp
sar
xor
or
imul
mov
mov
mov
jne
sub
mov
mov
and
jecxz
mov
adc
mov
adc
movsl
xchg
mov
mov
adc
cmp
fisubrs
xor
stos
imul
lock
pop
repz
mulb
mov
mov
and
mov
xor
jbe
sbb
pop
sar
lods
insb
in
xor
repz
mov
xchg
mov
jle
push
add
inc
sbb
jns
outsb
mov
push
fbstp
pusha
xor
mov
sti
dec
in
xchg
pop
inc
push
je
jno
les
mov
xor
sti
jnp
jmp
int3
mov
fdivrl
mov
lods
jg
mov
sti
cld
push
out
xor
sbb
mov
push
cmp
xlat
xchg
arpl
push
mov
cmp
lods
mov
ret
adc
dec
mov
cmp
or
or
dec
and
iret
mov
jo
mov
popa
sbb
cld
out
xchg
lods
mov
jnp
jl,pn
in
getsec
sub
int
xor
mov
out
xchg
pop
mov
dec
das
rorb
stos
sbb
shlb
cmp
dec
int3
orl
test
ds
pop
push
pop
jo
push
jno
push
mov
sahf
sub
pop
lcall
jb
pushf
loopne
scas
fnstsw
lock
push
out
pop
jb
fdivl
jecxz
decb
outsb
push
sub
and
repnz
inc
jle
xchg
js
shl
inc
fisubs
mov
ds
lahf
fdivs
push
adc
and
pop
xchg
lret
xchg
pop
mov
sub
add
xchg
ds
dec
jmp
mov
sub
pop
arpl
and
jmp
add
scas
enter
cmp
sahf
cmp
cmc
aas
pop
aad
or
xor
insl
jne
adc
cmp
cmpsl
clc
mov
push
xchg
les
mov
cmp
insl
out
cmp
sbb
mov
lea
jl
cmpxchg
aaa
mov
xchg
popa
mov
icebp
xchg
lea
scas
sbb
mov
inc
scas
add
jl
push
dec
out
adc
sub
mov
or
std
lret
dec
shrb
jno
les
xor
int3
rcll
xor
out
jo
adc
push
mov
sbb
outsb
fcmovb
or
loope
repnz
mov
out
jl
mov
rdtsc
repz
adc
xor
bound
icebp
lock
mov
sub
repnz
or
lret
jae
dec
xchg
sti
scas
rcrl
inc
jecxz
insl
mov
mov
inc
push
iret
fsincos
icebp
dec
cmp
jg
int
xor
xchg
push
jbe
jle
aad
imul
scas
pusha
outsb
out
das
iret
cmp
adc
xchg
mov
adc
popa
push
lcall
mov
push
jbe
stos
xchg
jp
adc
add
add
push
and
cmp
push
mov
and
cld
push
jnp
dec
cmp
iret
jb
and
sub
fcmovu
das
decl
out
sahf
and
sub
mov
cmp
loopne
cs
ss
push
jb
lea
icebp
sahf
mov
push
and
xorl
inc
sahf
adc
push
inc
xor
and
xchg
xor
fstl
pop
mov
mov
cmpl
add
sub
mov
pop
adc
ret
xchg
cmp
jo
sti
rorl
pop
inc
and
aas
mov
mov
mov
push
jae
or
and
into
mov
stos
sub
jnp
sbb
stos
mov
int
mov
cltd
fwait
int
push
retw
jno
stos
add
imul
mov
imul
add
cld
je
xchg
push
pop
mov
dec
out
cli
pop
jmp
or
int
rclb
or
push
adc
push
pushf
xor
mov
sti
mov
xor
les
pop
jno
mov
stos
add
repnz
pop
lea
sub
mov
mov
pop
ds
loopne
jecxz
stos
xchg
push
clts
cmp
mov
jle
sbb
testl
sbb
lds
pop
sarb
jb
sbb
jno
jae
cmp
or
jmp
jo
xor
nop
xor
repz
ss
mov
mov
pushf
pop
mov
cmp
mov
push
test
pushl
daa
mov
leave
icebp
stos
xchg
sahf
psrlw
pop
dec
test
sbb
cli
imul
lret
mov
jmp
inc
pushf
push
mov
sub
push
cmp
add
insl
inc
mov
push
adc
jge
icebp
aas
fadd
mov
push
xchg
xchg
ljmp
popa
pop
call
inc
out
xor
fnstenv
and
lea
dec
sub
mov
nop
test
jecxz
cmp
jb
mov
clc
shl
pushf
pusha
xchg
mov
mov
test
pop
push
pop
dec
divb
ljmp
sub
adc
sbb
mov
dec
sub
jno
in
inc
fsubl
xlat
ret
sub
sbb
mov
jb
das
shlb
cmp
in
test
and
jb
mov
in
shlb
int
test
pop
test
pop
subl
and
add
mov
std
mov
push
leave
fistpl
mov
push
fistpll
movsb
movsl
push
inc
pop
adc
cmp
lock
cli
cmp
lock
lcall
dec
cli
xlat
lret
gs
mov
dec
jmp
cmp
cmp
jo
or
inc
and
addr16
jg
push
mov
hlt
jg
pushf
add
fimull
add
push
push
add
sub
sub
in
mov
add
or
aas
nop
push
push
jo
mov
push
xchg
cmpsb
aaa
shlb
scas
inc
insl
fcompl
xchg
ficomps
xchg
push
pop
repnz
or
cmp
pushf
in
add
sti
out
sub
nop
ljmp
insl
and
mov
lock
pop
popa
mov
arpl
xchg
mov
ljmp
jecxz
ja
adc
pop
jmp
dec
icebp
daa
push
pop
clc
lret
mov
icebp
jno
in
adc
xor
lock
movsl
data16
mov
scas
inc
sbb
lods
out
xchg
mov
mov
mov
mov
sbb
mov
insl
push
ret
adc
xor
cmp
inc
mov
sub
or
stos
cwtl
push
cld
push
jb
add
pop
push
jle
adc
bound
push
inc
or
cmpsl
stc
ja
shrl
and
out
icebp
mov
sahf
adc
mov
dec
int
fwait
and
jb
mov
sub
int
xchg
xor
aad
adc
xchg
imull
dec
repz
xchg
mov
adc
call
and
cmpsl
push
cmp
add
xor
in
sub
sub
stos
cmc
push
aaa
in
stos
imul
xchg
dec
int
std
sbb
push
addr16
neg
loop
mov
aas
cli
loopne
push
mov
std
in
xchg
addr16
cld
lock
sbb
mov
pop
jb
pop
loopne
icebp
and
inc
mov
arpl
cmp
out
sub
setbe
add
adc
cmpsb
imul
push
pop
call
loop
sbb
mov
push
cwtl
sahf
cld
push
xchg
xchg
jo
and
sbb
jno
fstl
cli
mov
sbb
push
pushf
std
inc
idivl
add
mov
cwtl
mov
in
lock
into
stos
movntps
popa
fimuls
jae
xchg
test
lea
scas
or
jns
repnz
mov
lods
mov
std
mov
call
push
mov
in
inc
pop
vmwrite
sbb
aas
inc
andl
les
int
in
sbb
jg
lret
push
addl
movsb
cmc
and
pop
into
test
and
xchg
mov
mov
xorb
push
sbb
or
cmp
popa
pushf
adc
cwtl
dec
imul
and
mov
jnp
cmc
je
pop
jae
cmpsb
jb
mov
jg
jmp
jbe
daa
jle
jge
mov
cmp
cmp
xchg
jne
loop
movsb
sub
or
jno
cmc
mov
repnz
pop
cmp
es
loope
xor
cmp
ficomps
mov
in
mov
adc
shlb
mov
add
stc
xor
cmp
inc
mov
movsb
test
mov
dec
sbb
or
and
clc
scas
dec
and
lds
push
pushf
adc
ret
gs
mov
mov
mov
jo
sbb
sbb
imul
xorb
mov
cmp
mov
jnp
add
mov
je
push
adc
cld
imul
test
repnz
movsb
lea
xchg
add
lret
sbb
mov
cmp
insl
push
imul
and
adc
lret
xchg
sub
mov
cli
adc
mov
divb
aas
mov
ret
mov
repz
mov
hlt
and
nop
adc
add
adc
mov
gs
mov
lock
dec
pusha
lods
popa
call
fwait
xor
lods
aad
add
movsl
xor
push
jns
lods
jl
jno
lea
loop
outsb
jae
aaa
popl
mov
mov
xchg
adc
xor
test
neg
fildll
mov
adc
stc
pop
mov
bound
adc
jne
jae
sbb
shlb
scas
in
mov
pop
ret
ss
stos
and
dec
in
divl
sub
mov
into
push
rcrl
mov
test
inc
push
pop
mulb
mov
fcmovbe
ds
pop
sub
jnp
fsubrl
pusha
pop
cmp
mov
mov
mov
mov
mov
testb
dec
lods
das
cmc
repnz
pop
add
mov
adc
mov
fcomps
inc
inc
mov
int
dec
sbb
test
xor
cmp
add
test
pop
dec
push
jge
xor
aas
pop
xadd
xor
divb
shl
imul
das
test
adc
test
push
push
fidivrs
loope
pop
aam
add
xor
adc
pop
idivb
sub
pusha
or
out
jbe
shrl
and
sub
jle
sbb
jle
fiaddl
inc
cmp
icebp
adc
lods
inc
inc
jp
mov
push
je
mov
push
sub
mov
and
xchg
add
xchg
imul
imul
fxch
mov
lret
xor
sbb
icebp
in
mov
dec
push
outsl
dec
mov
js
test
stos
sbbb
aad
add
push
and
imul
insl
jns
and
sarl
mov
stos
xchg
mov
adc
cs
iret
loopne
nop
jb
fsubrl
pop
sar
dec
inc
pop
and
mov
in
fistpl
lods
cmp
cwtl
mov
dec
add
pushf
in
mov
popf
mov
fucomi
addr16
jnp
adc
pop
sti
jo
inc
adc
mov
and
imul
push
push
xor
or
mov
cs
aaa
or
scas
xchg
cmc
lea
mov
lret
mov
add
xchg
cmpsb
pop
test
jae
and
in
aam
cli
mov
test
sub
mov
sbb
dec
sbb
push
xor
push
shlb
xor
mov
dec
mov
lret
cmp
test
out
stc
in
sbbl
test
adc
data16
jb
or
push
xor
push
repnz
cltd
adc
adc
push
aas
jno
frstor
dec
ljmp
push
mov
pop
adc
fwait
xchg
lea
mov
or
lock
inc
sahf
mov
jg
mov
jno
xor
fadds
fbstp
fisubs
clc
xor
int3
ds
icebp
daa
jnp
xchg
add
add
push
cmc
jmp
or
pop
cmp
xchg
jbe
fwait
xor
pop
mov
push
inc
test
out
ja
loop
sub
mov
push
and
mov
cmp
jecxz
ret
cltd
or
sub
mov
ljmp
pop
mov
jnp
mov
outsl
xor
jmp
sahf
pop
xchg
adc
jb
mov
cli
shl
mov
dec
inc
aas
jle
push
push
lea
sti
clc
pop
jb
es
aas
and
mov
scas
mov
add
mov
and
shufps
jmp
scas
lahf
mov
adc
rcrl
imul
shlb
pop
roll
xchg
sub
or
mov
test
mov
mov
xchg
push
and
inc
cwtl
aad
and
loope
gs
popa
fs
fcoml
mov
mul
or
decl
lret
push
into
rcr
outsl
mov
add
into
add
xchg
xor
xor
ror
xor
dec
inc
inc
mov
jno
add
mov
cld
cmpl
mov
push
pop
push
sub
mov
mov
call
ret
push
sub
xor
loopne
bound
lods
mov
aam
ret
add
cltd
add
xor
push
inc
cmp
out
gs
jg
fidivs
aad
xor
stos
mov
cli
ss
pop
jae
pop
js
shll
cmp
rorb
ret
cmp
leave
ss
punpckhdq
push
push
decb
ljmp
lahf
add
jns
adc
aas
imul
mov
or
mov
repz
xchg
adcl
imul
out
stc
sbb
js
jo
mulb
popa
notb
daa
cwtl
xor
push
and
daa
sbb
test
jle
dec
inc
push
jae
ss
rclb
sbb
ss
fwait
sub
xchg
cltd
ljmp
cmovnp
xor
rcrl
aaa
mov
jnp
pop
adc
mov
xor
cwtl
add
jg
call
and
outsb
not
cs
jg
jp
mov
ja
daa
out
cmc
imul
aam
and
pop
mov
clc
ja
rcr
rorl
fwait
mov
pop
push
cmc
insl
mov
mov
and
inc
lods
lahf
das
mul
in
int
icebp
mov
mov
pushf
decl
cwtl
hlt
pop
jo
arpl
sar
out
xor
jb
push
aaa
xchg
lret
in
stc
scas
gs
je
cmpb
push
or
mov
loope
mov
test
fwait
imul
xchg
sbb
cmp
rorb
mov
cmpsl
jle
outsb
jle
bound
gs
ret
mov
inc
mov
push
imul
jp
shlb
xchg
stos
mov
lock
jl
cltd
mov
ret
mov
mov
sbb
ret
shrb
adc
cld
ret
in
add
jb,pt
loope
push
mov
jge
xor
cmp
mov
fdivs
push
pushf
sbb
mov
mov
jo
insl
enter
mov
sahf
xor
add
mov
test
rcrb
cmp
fisubrs
imul
mov
jg
and
into
add
aad
xchg
push
and
loope
xor
fsubl
mov
fisubrl
and
je
mov
outsl
add
jp
es
daa
stos
inc
mov
jl
push
mov
test
mov
push
cli
mov
icebp
or
das
adc
fs
cmp
xor
test
and
dec
adc
or
repnz
out
movsb
mov
imul
fs
xchg
pop
and
lock
call
lock
jmp
xorl
adc
mov
scas
jb
sahf
jmp
sub
pop
filds
lods
call
mov
clc
adc
aas
inc
mov
outsl
sub
jecxz
xchg
cmpsb
pusha
xchg
jmp
les
jmp
mov
mov
jmp
aaa
push
mov
push
and
lock
xchg
clc
jno
pop
mov
ja
pop
notl
or
jbe
and
daa
push
pop
inc
je
lods
xchg
jp
xor
adc
mov
cld
imul
inc
stc
xor
movsb
test
fisttpll
xlat
mov
lock
ljmp
push
mov
mov
mov
dec
insl
arpl
shrl
int
xchg
fmull
mov
add
scas
jo
xorb
imul
xchg
push
mov
jbe
js
lahf
mov
popf
or
and
fidivs
push
mov
loope
pop
je
ret
lds
sbb
lret
negb
xchg
das
roll
rcr
add
jns
mov
xor
cltd
mov
jae
ds
and
adc
xor
jle
pop
push
icebp
pop
jb
rclb
je
cli
loope
inc
jp
adc
lahf
push
xor
adc
mov
lock
cli
ds
adc
outsb
jb
loopne
mov
loop
mov
pop
mov
jl
sub
dec
pop
ljmp
xchg
out
cmp
or
sbb
lcall
and
sti
jle
fbld
rcr
ret
xchg
por
pushf
mov
fidivrl
add
lret
mov
cmp
lods
mov
jge
int
movlps
or
mov
mov
repnz
fsubs
pop
sarb
mov
in
mov
pop
jp
sti
test
bound
mov
inc
mov
fsts
inc
sub
icebp
mov
xchg
stos
stos
or
sub
push
stos
test
mov
lcall
sbb
add
mov
mov
mov
mov
xor
mov
xchg
sub
jae
pop
mov
ret
pop
lcall
jb
inc
fstpl
dec
out
shlb
pusha
bnd
imul
cmc
and
fmuls
mov
fstps
lds
test
dec
test
inc
mov
repz
xchg
mov
call
outsb
xor
sub
outsl
mov
test
fwait
xor
add
stos
jmp
xor
test
imul
fdivl
es
sahf
sub
rcr
divb
loopne
pushf
push
stc
clc
pop
popa
mov
mov
call
mov
cwtl
ds
imul
inc
cld
mov
je
test
sub
int
stc
sub
mov
fdivs
sti
cmp
lock
ret
add
sti
pop
push
shlb
inc
mov
xor
test
movsb
in
cmp
out
and
ret
psllw
popf
mov
movsb
rcl
mov
call
push
pop
popl
pop
add
je
jno
movsb
sub
leave
jle
push
push
ret
jnp
fldenv
imul
shll
cmpb
movsb
insl
fdivs
mov
inc
lods
shlb
xchg
pop
mov
lcall
pop
arpl
scas
jg
mov
cmp
shrb
icebp
int
icebp
mov
cmp
outsl
mov
cmp
sbb
lcall
dec
bound
js
fidivrs
jno
cli
into
cs
and
bound
cmp
inc
sub
into
add
ret
xchg
jle
cmp
xor
dec
clc
sbb
and
imul
sbb
ds
pop
dec
cmp
fwait
stos
mov
ljmp
xchg
and
jmp
mov
pop
pop
push
cmp
es
inc
repz
jmp
stos
xor
das
imul
mov
and
or
or
and
sbb
das
lahf
push
rolb
mov
cmpb
ljmp
lods
mov
inc
jae
or
adc
imul
outsl
xor
sbb
inc
jle
push
ret
decb
jnp
xchg
sub
ljmp
cmp
pop
iret
sti
mov
lret
fistpl
or
loop
add
pop
jno
mov
gs
aam
test
cwtl
daa
inc
mov
notl
insl
sti
mov
shll
adc
mov
xor
sbb
jne
leave
and
psubq
push
imul
jae
icebp
not
loopne
jno
adc
test
push
lcall
xlat
jns
sbb
lods
sub
dec
imul
inc
push
shl
push
inc
or
mov
sti
push
mov
repnz
cmp
xchg
mov
jl
jmp
push
mov
adc
add
push
push
push
cmpsl
xchg
or
pusha
test
fstpl
jo
adc
test
mov
scas
lds
in
std
out
test
push
shll
lea
test
push
push
inc
mov
popa
adc
cld
mov
push
inc
loope
or
fidivl
adc
push
shrb
mov
or
sbb
jmp
pushf
xor
or
inc
sub
mov
ds
scas
repnz
and
mov
sub
loop
lahf
jmp
xor
push
divb
xor
pop
js
aas
gs
cs
aaa
inc
pop
cld
add
aam
mov
popf
mov
sbb
push
enter
icebp
jmp
sub
fmull
mov
jae
pop
or
daa
add
mov
mov
mov
pushf
loope
mov
sub
cmp
dec
mov
arpl
or
ds
push
decl
mov
lock
add
sub
sub
hlt
push
mov
push
mov
hlt
insb
pushf
and
out
cmpsb
jp
and
cmp
pop
mov
repz
daa
adc
icebp
cmp
out
je
icebp
fcomps
adc
cmp
mov
adc
stc
in
or
xchg
outsl
sbb
push
or
sti
popa
sarb
mov
mov
lret
cmc
mov
cmp
jbe
fs
jge
idivl
jb
mov
into
jb
xor
xor
loop
mov
pushf
shll
and
jno
ljmp
shlb
lcall
sbb
or
cld
stc
popa
cmp
int
roll
add
ja
or
xor
mov
cmpsl
in
mov
fs
mov
adcb
fisubl
pop
pushf
mov
inc
insb
icebp
xchg
lock
sbb
xor
shll
inc
lock
test
push
cmp
addr16
push
add
mov
mov
in
xchg
pop
mov
jne
xor
ficoms
and
add
dec
mov
push
push
push
popf
jmp
cs
mov
test
cli
cs
mov
cmpsb
sbb
mov
scas
cwtl
andl
ds
mov
mov
pop
xchg
cld
jl
jmp
jno
mull
loopne
mov
and
cwtl
addr16
add
jmp
jbe
push
push
sbb
and
insl
shll
stos
push
lods
xchg
pop
jle
in
inc
cmpsb
mov
xchg
mov
cmpsl
add
adc
sub
fbstp
ss
rcrl
ljmp
mov
inc
mov
ss
ljmp
adc
repnz
testb
enter
ss
adc
ljmp
and
cmp
shrl
arpl
jae
aas
sub
test
popl
sahf
int
test
punpcklbw
mov
or
fcoml
pop
aam
fscale
icebp
push
sarl
bound
inc
pusha
xor
subl
push
and
mov
call
sub
or
sub
sub
push
fsubs
out
lods
fmull
dec
jb
leave
out
adc
aad
enter
fisubl
popa
imul
mull
roll
lret
pop
or
dec
adc
sti
mov
lahf
inc
inc
cs
mov
push
ja
js
jg
inc
stc
inc
pop
or
dec
aam
adc
loopne
lds
cmpsl
fs
mov
scas
jno
addr16
pushf
mov
sarb
adc
sub
fcmove
mov
or
sub
das
cld
pop
xor
ja
aaa
sub
cs
cmp
lds
jecxz
cmp
jge
fdiv
cld
sbbl
inc
outsl
inc
lahf
mov
mov
mov
xor
dec
dec
ljmp
rcr
and
xor
shlb
leave
rorl
jp
cld
dec
inc
rcrl
adc
push
icebp
popa
sub
xchg
pushf
xor
mull
imul
and
xchg
cmp
cmp
mov
shll
loopne
ds
jb
stos
movlps
push
mov
jb
xor
jb
xor
cmpsb
das
hlt
jb
sbb
pop
mov
lcall
aas
jge
push
lcall
mov
push
iret
or
test
cs
in
fprem
jno
xor
rorl
dec
jns
iret
shl
sti
mov
sub
pop
sub
pop
idiv
je
or
jge
cmp
es
enter
in
insl
int3
adc
icebp
adc
jno
lods
ds
mov
mov
pop
cmp
jmp
lods
sub
jle
adc
std
mov
jae
into
mov
aam
out
aas
inc
xchg
xor
inc
es
xchg
mov
test
inc
push
out
sbbb
cwtl
push
shlb
inc
add
mov
pushf
scas
lcall
jae
jae
jne
xchg
lret
mov
xor
add
jb
adc
dec
cmp
movsl
das
pop
add
adc
mov
js
xor
mov
jne
add
aas
out
in
jp
xchg
cmp
and
clc
je
lahf
push
jne
pop
dec
push
int3
mov
push
ljmp
or
mov
fisttps
and
loop
mov
movsb
xchg
std
mov
addl
movb
xor
dec
nop
outsl
mov
sub
mov
push
decb
rorb
aas
sub
add
pop
and
jle
loope
and
ret
add
mov
cmp
out
dec
cli
sub
inc
mov
mov
sbb
adc
lret
push
outsb
xchg
and
xchg
or
jae
push
and
pop
cmpsl
aas
cwtl
dec
ds
pop
sub
loope
test
movsb
shl
ret
pop
test
add
call
mov
fst
imul
fdivrl
pop
cwtl
lods
pop
mov
cwtl
daa
push
jle
sub
nop
mov
hlt
icebp
fists
sbb
pusha
mov
cmpb
and
pop
adc
jb
pop
bound
sub
call
adc
sbb
sbb
cmpsb
pop
xor
lcall
adc
hlt
or
das
xchg
mov
pop
mov
xchg
fwait
pop
test
pop
movsb
pop
loop
mov
mov
xor
lret
pop
mov
stc
push
test
lods
das
xor
bound
adc
mov
cld
mov
rclb
clc
fidivs
jae
faddp
stos
push
clc
sub
shlb
inc
cld
cmp
ja
in
xor
mov
mov
mov
cld
cmp
dec
mov
cmp
out
aas
pushf
jbe
add
xchg
ss
xchg
icebp
xchg
pop
inc
mov
sarl
cmc
repnz
in
xlat
repnz
and
or
out
inc
sar
jmp
mov
mov
cld
in
je
lock
xchg
ja
es
insb
loopne
pop
push
sbb
lea
add
jb
pop
mov
and
adc
clc
pop
icebp
or
or
mov
xchg
mov
mov
loop
test
jae
data16
clc
xchg
andl
out
ds
and
mov
inc
xor
int
imul
mov
lahf
or
sbb
test
jb
mov
jp
inc
push
lds
iret
push
inc
push
cld
fisubrl
jb
shl
test
movsl
out
mov
pop
jmp
pop
push
xor
jb
jl
int
dec
sub
mov
hlt
mov
push
das
aad
xchg
aas
fldt
mov
je
cmp
xchg
stos
dec
mov
popf
movsb
lret
fucomi
ljmp
mov
insl
bound
lock
mov
mov
mov
pop
test
fadd
in
pop
jge,pt
jae
mov
sbb
mov
jmp
call
out
jae
push
je
jae
pop
mov
pop
and
push
jmp
pushf
xchg
lds
loop
adc
pop
hlt
rcrb
out
ds
adc
dec
lds
and
add
mov
add
movsb
xchg
and
mov
xor
or
mov
jg
mov
or
fisubrs
mov
scas
jnp
mov
jns
cltd
mov
sbb
fnstcw
and
icebp
in
jge
adc
leave
push
dec
into
mov
add
and
push
jmp
movsb
adc
in
mov
xor
mov
popa
push
xor
loope
jge
movsb
mov
imul
insl
jo
pop
scas
mov
xchg
movsb
sbb
in
leave
push
mov
lods
mov
mov
in
cmp
inc
ljmp
cltd
push
inc
cmpsl
mov
and
cmp
aad
lods
lds
shrb
in
xchg
add
outsb
pop
or
mov
rdtsc
xor
mov
adc
pop
mov
jo
mov
add
mov
mov
stc
push
cmpsb
jl
loop
mov
or
loop
jns
ss
loopne
add
pop
daa
fimull
stos
fnstcw
mov
cli
fadds
std
push
fstl
mov
out
test
mov
and
rolb
scas
pop
cmp
sbb
jne
std
orl
jg
js
sub
mov
jno
add
and
xchg
inc
sti
jne
and
xchg
and
ds
dec
popa
sub
mov
mov
dec
mov
jb
repnz
cmc
jb
out
dec
sub
jmp
jp
mov
mov
repz
jb
sub
jb
inc
adc
inc
rolb
sub
mov
cmp
cli
and
cmpsb
repz
nop
lea
test
pushf
jg
mov
jg,pn
lret
mov
pop
nop
sub
mov
lods
mov
dec
mov
xor
pop
inc
bound
movl
sahf
mov
lcall
xlat
xchg
pop
fstl
into
jb
or
or
aas
adc
mov
add
cli
std
arpl
pop
push
das
popa
adc
mov
pushf
int
lcall
jg
add
mov
mov
icebp
jp
mov
pop
or
ljmp
mov
cmp
sti
notb
sub
mov
divb
cmpsl
mov
xor
dec
cmp
jl
cmc
paddq
and
pop
fiadds
mov
pop
push
into
icebp
and
hlt
repnz
sub
in
loope
insb
insb
push
mov
orb
sahf
add
or
xchg
fwait
jo
jbe
xor
pop
pop
ljmp
mov
aam
push
pop
mov
inc
cmp
rcl
test
shlb
xchg
ss
movsb
outsb
mov
mov
xor
sub
lods
adc
cmp
sub
dec
xchg
mov
inc
int
xor
dec
sbb
movsb
sarb
jle
jae
mov
pop
lods
icebp
pop
mov
test
bound
lcall
push
or
mov
pop
jmp
push
xor
mov
dec
jg
enter
push
cmpsl
idivb
fcom
subl
dec
mov
xor
popf
out
push
jns
mov
bound
mov
cld
xor
in
ss
addr16
les
lcall
cmp
cli
lock
add
adc
addr16
loopne
fsubrs
rorb
je
lcall
jmp
fadd
cmp
pop
cmp
mov
dec
cmp
test
and
shl
pop
in
in
or
jg
cltd
scas
mov
mov
cmp
mov
or
icebp
pop
jl
aad
fisttpl
pop
movsl
and
pop
mov
pop
xchg
sbb
and
mov
sbb
daa
repz
push
jmp
xchg
mov
nop
cmp
cmp
mov
push
push
or
inc
stos
mov
fidivl
xor
cmp
xchg
push
jmp
aas
push
jns
mov
or
adc
fbstp
ret
adc
pop
sub
mov
pop
mov
bound
in
cmpxchg
fstps
sbb
shrb
movsl
icebp
mov
andl
sahf
add
xor
cmp
icebp
lock
inc
out
mov
and
ret
mov
and
ja
inc
ficompl
idivb
addb
jbe
add
cwtl
pop
xchg
push
inc
mov
daa
mov
push
dec
push
popa
and
and
pop
dec
mov
cli
cmpsl
xchg
filds
andb
dec
daa
movsb
mov
mov
into
mov
addb
iret
or
jbe
dec
add
aaa
mov
jae
inc
in
and
add
add
cmp
loopne
imul
add
pusha
mov
fmull
dec
jne
or
out
fucom
xchg
jle
into
mov
xchg
add
cmpsl
jl
push
mov
or
push
and
insb
push
jle
sarl
or
fldl
fucomp
push
or
repnz
and
push
in
xlat
jno
loopne
jb
mov
adc
in
sar
lahf
mov
into
fwait
xor
lcall
push
imul
outsb
idivb
loope
psubusw
dec
fcomps
mov
sbb
icebp
aas
data16
ja
js
ficomps
in
fnstenv
leave
les
fcompl
int3
dec
popf
xchg
jmp
lods
push
dec
shrl
and
xor
mov
mov
sbb
out
fcomps
es
pop
cmp
aad
push
push
jne
pushf
xor
mov
cmp
or
in
dec
call
divl
jno
pop
pop
icebp
test
mov
loope
fidivrl
sub
test
xlat
sbb
aas
ret
add
int
adc
mov
push
cltd
xchg
xorb
test
xor
pushf
add
repnz
popl
inc
cli
outsl
cltd
jmp
loope
movsl
daa
dec
pop
or
mov
lock
xor
daa
adc
xor
stos
pop
sti
je
sub
loopne
inc
repnz
lock
jb
mov
movsl
push
inc
xor
jmp
adc
arpl
pop
adc
adc
push
std
and
mov
jmp
pop
shll
sahf
repnz
jmp
sbb
int
add
jge
push
out
cli
pop
mov
scas
insb
mov
dec
jb
icebp
cmp
aas
jmp
lds
into
incl
dec
adc
addr16
cmp
jb
and
adc
call
test
jo
rclb
or
out
mov
ljmp
sbb
sub
jae
idivb
jne
xor
daa
movsb
sar
lret
xchg
push
mov
or
mov
push
mov
push
aaa
sbb
in
fwait
sub
movsl
push
xorb
xor
shrb
and
xor
xchg
xor
insl
cmpsl
cmp
cmp
sub
rolb
or
pop
sbb
insb
jecxz
jmp
cmpsb
jp
add
jbe,pt
xor
repz
in
andb
rcll
ret
imul
lea
adc
sub
out
and
pop
adcl
outsl
jno
sub
stc
sbb
and
flds
aaa
out
dec
lea
dec
movsb
jg
xchg
push
clc
and
or
bound
adc
cld
icebp
xchg
and
sti
into
sarb
push
adc
into
mov
cs
jle
mov
ficompl
pop
scas
jg
xlat
andb
cld
cmp
push
mov
sbb
jo
ljmp
pop
jle
push
mov
jno
adc
cmp
sbb
sub
mov
pop
xchg
or
push
cmpsl
xchg
dec
push
push
cwtl
pop
add
push
mov
push
cmpl
lret
bound
scas
adc
cs
int3
mov
mov
mov
bound
mov
cli
mov
jae
jg
xor
jecxz
pop
adc
mov
jno
iret
pcmpgtb
mov
xchg
add
in
rcrl
out
in
clc
and
ss
mov
fdivr
pop
adc
aad
adc
jno
imul
mov
sbb
hlt
stc
jg
xchg
stos
sahf
adc
xor
mov
das
insl
cmp
loopne
xor
push
dec
call
push
add
xor
push
pop
mov
pop
mov
stos
push
out
pop
out
ds
pop
sahf
call
fidivs
fbstp
mov
push
fs
leave
movsb
dec
test
mov
xchg
mov
sub
js
shlb
inc
xchg
ljmp
mov
xchg
lods
fiadds
push
mov
and
ds
out
lret
push
je
ds
dec
divl
push
aaa
jmp
shll
ja
mov
jns
jg
repnz
pop
bound
inc
mov
mov
data16
jp
mov
dec
xlat
loop
xor
movsb
fs
hlt
shrb
push
movsb
test
jp
call
clc
scas
jnp
inc
add
into
inc
inc
add
jg
xor
aam
popf
adc
stc
cmp
pop
andl
loop
mov
sbb
sbb
into
cwtl
lea
adc
mulb
mov
lea
xor
sbb
sti
cmpsl
xchg
rolb
xor
loope
arpl
fsubs
mov
push
sub
imul
imul
xlat
int3
andl
dec
mov
incb
dec
sub
mov
mov
daa
mov
mov
bound
push
das
pop
stc
jl
stos
popa
sub
mov
and
cmp
test
dec
push
les
cmp
mov
stos
push
xor
sti
lods
fdivrl
jge
sbb
iret
int
and
inc
data16
sub
mov
adc
dec
cld
and
rcl
adc
imull
jecxz
cmpsb
pushf
pop
inc
call
pop
cmp
sub
adc
push
cmpsb
mov
in
testl
subl
fidivs
int3
sahf
addr16
sbb
call
add
mov
scas
push
push
fwait
adc
int
loope
push
inc
arpl
mov
add
add
nop
push
fdivrp
adc
js
add
pushl
cli
sub
ljmp
lret
push
cmc
jmp
lea
adc
out
pop
mov
jb
and
sbb
lret
cmp
arpl
and
adc
mov
lret
push
clc
add
sbb
xor
xchg
mov
hlt
int
xor
icebp
rclb
xchg
xor
jnp
jo
mov
adc
xorb
xor
ljmp
lcall
mov
pop
jae
sbb
arpl
sub
xor
cwtl
clc
pop
pop
test
das
hlt
inc
sbb
popl
arpl
rclb
out
jl
lods
cli
push
das
pop
out
pusha
aaa
in
lock
cld
mov
loope
test
test
shll
std
decl
rolb
push
sub
ss
insl
mov
adc
or
push
call
and
mov
jmp
js
nop
mov
lods
and
dec
and
inc
loopne
sahf
ud2
shl
lds
rorl
jno
nop
adc
fnstsw
adc
ja
or
sub
sahf
or
mov
int
pusha
shrb
mov
aas
es
into
mov
jbe
sti
sub
adcb
pop
fsub
rcll
mov
cs
ja
mov
pushf
jge
mov
imul
aad
or
mov
pusha
mov
cmp
jbe
sub
dec
sbb
xchg
ss
xchg
cld
adc
ret
dec
dec
mov
lds
xor
xchg
idivb
inc
xchg
jmp
and
rcrb
xorl
or
mov
ja
pop
lock
and
lods
cli
outsb
sti
je
icebp
xchg
and
push
stos
mov
test
sbb
xor
test
adc
mov
idiv
mov
xorb
mov
jno
repz
sub
mov
xchg
outsl
push
pop
lcall
pop
fwait
jg
mov
lods
cmp
repz
sbb
movsb
lcall
mov
clc
sbb
jo
mov
das
enter
fdivrl
sub
pop
bound
cmpsb
fcoml
pop
xlat
xor
fisttpll
mov
xchg
cmp
sub
popa
insb
xor
jb
dec
jl
sbb
fcoml
icebp
inc
loopne
inc
inc
sahf
lcall
imul
adc
mov
or
mov
into
sarb
jl
and
pop
rclb
ja
lock
sti
xor
aas
mov
mov
jnp
jb
aam
push
xor
test
adc
in
mov
sahf
jl
sbb
xchg
sysenter
lds
mov
jnp
aad
aas
adc
adc
popa
sahf
cmc
push
outsb
cmp
pop
into
push
sub
jp
shll
loop
mov
inc
pop
je
in
mov
das
cli
data16
sahf
xor
xor
and
mov
imul
push
cmc
lods
mov
jl
cmc
icebp
and
cmpsb
adc
pop
jnp
or
inc
shlb
xlat
jns
cld
cld
jno
pop
jno
cmp
pushf
lcall
popf
xchg
xor
xchg
mov
sub
lds
call
in
sbb
ljmp
dec
cld
int3
jmp
psadbw
xor
cmp
lcall
add
dec
rorl
jae
lret
adcb
mov
mov
test
add
mov
mov
idivl
lret
ds
std
mov
mov
pop
je
jb
mov
xor
xchg
jg
push
lcall
aaa
ret
cmp
xor
icebp
cmp
sub
lret
mov
cmpsl
mov
fs
mov
mov
sahf
daa
push
arpl
add
popf
repz
roll
int
jno
mov
addl
mov
jg
pop
loope
test
aas
mov
pusha
inc
pop
lret
mov
inc
mov
push
cmp
test
ja
leave
mov
dec
inc
sahf
out
aaa
or
scas
mov
jl
dec
pop
push
das
push
popa
xchg
jns
fimuls
add
das
xor
dec
sahf
jb
and
imul
dec
cmpsl
fldenv
rcrl
arpl
es
mov
dec
sbb
lock
shll
add
xchg
popa
movsl
jmp
push
rcll
sarl
loope
push
fsubrl
std
sbb
inc
fisttpll
lock
mov
sti
sarb
repz
fsubrs
adc
leave
cs
icebp
mov
rcrb
gs
ds
xchg
subl
jb
mov
push
cmp
out
lret
repnz
add
shll
aaa
cmp
mov
dec
nop
mov
add
push
or
pop
push
scas
jnp
or
jb
icebp
fistps
push
imul
xchg
jns,pt
mov
cmpsl
insb
out
mov
push
iret
cld
in
xchg
mov
loope
out
xchg
jg
xchg
fsubrl
es
jmp
mov
cltd
cwtl
mull
stos
mov
loopne
sub
sahf
lcall
mov
cli
pushf
arpl
je
and
jl
imul
aad
lcall
out
mov
sub
mov
je
cmp
aad
inc
add
subb
jle
dec
outsb
daa
adc
xchg
inc
sbb
adc
mov
push
lods
stos
scas
dec
mov
int
mov
xchg
xchg
pmuludq
mov
mov
cwtl
repnz
out
dec
dec
ss
rolb
cmpsb
xchg
lahf
cmpsl
sub
dec
ljmp
lahf
cmovle
and
cmp
pop
xchg
cli
lret
cld
pop
shll
push
push
in
dec
std
repz
sbb
add
jp
int
enter
arpl
aad
xchg
movb
fisttpll
jle,pn
and
aas
inc
pop
lods
rcll
mov
in
ja
dec
lock
pop
xor
and
and
daa
insb
in
xchg
fimuls
stos
mov
jmp
imul
cld
push
jbe
mov
xchg
jg
xor
divb
insl
test
pop
adcl
push
mov
cld
popf
and
and
pop
mov
mov
mov
sub
mov
add
adc
cmp
sbb
dec
icebp
test
jno
in
mov
andl
adc
stos
adc
mov
pop
mov
pusha
jle
adc
push
and
je
jnp
pop
xor
cmp
mov
mov
and
or
xor
cmpsb
aad
pop
idiv
add
addr16
clc
xor
jmp
movb
dec
xor
mov
ds
aas
sbb
jle
add
sbb
sbb
and
jbe
lock
fidivrs
jne
cwtl
push
mov
adc
pop
fnstenv
ror
adc
ret
sti
jle
pop
fstpl
ja
pusha
imul
cmp
or
jb
ljmp
sarb
and
movsb
aad
mov
xchg
pushl
pushf
cmp
inc
lea
pop
sbb
ffreep
divb
inc
hlt
mov
push
lret
stos
xlat
adc
cmp
divl
mov
pop
mov
mov
test
mov
lcall
cs
int
fisttps
out
push
insb
and
call
add
pusha
push
jmp
dec
cmc
inc
cmp
add
test
cltd
fdivrl
sti
jle
lret
add
pop
pop
and
or
lahf
and
push
or
ds
mov
pop
jecxz
fistpll
loopne
mov
pop
insl
roll
inc
xchg
mov
int
cwtl
imul
dec
mov
aaa
adc
adc
ror
sarb
xor
sbb
imul
add
add
ljmp
scas
jne
sub
mov
fnsave
xchg
dec
nop
daa
dec
pushf
out
loop,pn
fidivl
sbbb
outsb
lea
into
jns
add
lahf
jle
pop
cmp
mov
pusha
sub
imul
mov
and
mov
or
sbb
flds
pop
mov
inc
sub
andl
inc
into
sti
leave
or
mov
mov
pop
out
jnp
out
ffree
sti
sub
sub
mov
jmp
dec
pop
jg
lret
sbb
jo
cmpsb
pop
nop
arpl
ljmp
mov
adc
add
xor
mov
jb
add
aad
sbb
push
lods
mov
aas
movsb
in
add
icebp
lods
cld
sub
ret
and
outsb
loopne
icebp
xor
mov
inc
push
ja
sub
std
adc
xchg
mov
jmp
std
test
and
mov
out
mov
popa
sbb
mov
jo
pop
jmp
dec
ds
sbb
cmpsl
xchg
mov
or
xchg
pushf
xchg
push
mov
clc
addl
xlat
cmp
mov
sub
jne
shl
divl
lds
js
sub
xor
sar
dec
push
sar
mov
mov
test
jg
out
rorl
pop
push
xor
pushf
fs
sbb
jmp
pushf
jo
sub
and
push
mov
cmp
jecxz
cs
mov
cmc
add
fistpll
or
sbb
aas
jo
out
stos
lret
mov
mov
pushf
loop
jnp
mov
mov
ds
shll
jb
add
or
nop
dec
jle
mov
mov
repnz
mov
in
push
sahf
xchg
out
push
mov
sbb
adc
push
xor
pop
jno
sub
mov
rolb
mov
and
inc
and
push
dec
add
xlat
jp
and
cmp
iret
sbb
or
xchg
mov
jae
inc
sub
orb
out
mov
mov
clc
dec
push
loop
out
and
ja
xchg
xchg
lcall
xchg
fldt
and
jo
movsl
pop
fimuls
push
dec
mov
frstor
mov
clc
sub
mov
add
adc
call
movsb
call
mov
fdiv
and
mov
mov
pop
cltd
mov
movsb
ljmp
aaa
cltd
xchg
das
jmp
repz
cmp
fistpl
xchg
aas
ljmp
xchg
hlt
adc
pop
cmp
ljmp
les
nop
jo
pop
ds
xchg
mov
pop
xchg
pop
xchg
push
push
mov
mov
add
push
loopne
lret
mov
pop
bound
outsb
push
and
push
pop
jae
mov
loop
loopne
push
mov
mov
xchg
shrl
mov
xor
and
mov
mov
arpl
int
pop
and
add
ret
sbb
mov
xchg
and
pop
pushf
clc
ljmp
outsl
jg
pop
fisubrs
xor
idivl
and
jae
cmp
lea
stc
pop
lret
push
inc
mov
xor
inc
jb
cmc
cli
jae
dec
mov
sbb
scas
pop
out
in
sbb
in
aad
mov
int3
cmp
mov
rcll
jae
push
mov
mov
mov
js
addr16
dec
cs
fmuls
inc
les
mov
cmpsb
aad
xchg
test
stos
fstpt
xor
shlb
cmp
adcl
out
push
ret
and
imul
orl
jno
adc
add
gs
xor
push
xor
repnz
mov
push
cs
aas
pop
jmp
lea
jge
mov
and
or
mov
dec
add
jmp
jmp
mov
jecxz
stos
cld
mov
jge
sahf
or
cmp
inc
cli
repz
mov
lcall
nop
cmpsb
imul
cmp
subb
arpl
imulb
cmp
fdivs
in
pusha
loope
xchg
xchg
mov
cli
dec
xor
sub
mov
mov
addr16
sarl
push
frstor
sti
mov
jecxz
aas
fucom
outsb
pop
push
mov
fidivs
stos
jmp
jne
xor
jbe
mov
or
addl
add
adc
pusha
mov
pop
inc
mov
stc
dec
mov
movsl
mov
xor
scas
or
je
sar
jp
xor
cmp
iret
jge
push
mov
mov
incb
push
mov
mov
adc
xor
rcrl
int
movsl
adc
fisubrl
sub
mov
push
scas
data16
call
and
aaa
lahf
pop
and
lahf
daa
sbb
push
cli
ljmp
test
lcall
mov
sbb
mov
jbe
xchg
jae
lods
xor
adc
subl
mov
mov
xchg
daa
dec
and
jae
jne
mov
push
mov
mov
mov
jo
popf
bound
jb
and
mov
stos
out
movsb
sbb
sub
inc
mov
lock
sbb
loope
sub
sti
lret
subb
and
data16
push
and
push
inc
ret
mov
jb
sub
imul
adc
xchg
jnp
xchg
and
and
mov
mov
pop
mov
fcomp
pusha
jnp
sti
fidivrl
adc
inc
jg
mov
roll
sbb
xor
imul
stos
ret
repnz
jb
dec
mov
sub
inc
inc
movsl
sub
mov
push
push
lea
pop
pop
jmp
shlb
bound
jge
in
dec
out
mov
or
out
jbe
loop
icebp
mov
cwtl
sar
mov
mov
rcl
mov
and
sub
into
mov
mov
pushf
cmp
dec
shlb
pop
push
insb
push
push
pop
popf
dec
push
jns
int3
call
push
andb
jne
repnz
jns
cli
push
pushf
adc
jae
push
xor
pushl
out
in
sahf
or
sbb
divl
imul
fnstenv
sbb
xchg
aaa
test
aas
sbb
lret
inc
mov
push
sbb
lods
mov
repz
test
dec
push
movsb
ror
lea
fcom
fistl
ret
push
aaa
mov
fsubr
sub
daa
data16
pushf
out
push
sbb
adc
imul
mov
pushf
push
fldt
mov
scas
and
mov
xor
fsubr
mov
adcb
cwtl
pop
daa
inc
scas
mov
repnz
ljmp
fimuls
fmull
jmp
inc
jl
mov
lcall
inc
lret
cmc
or
or
jbe
stos
imull
pop
inc
xor
fdivrs
pop
cmp
mov
mov
lock
jle
lock
adc
and
adc
es
hlt
xor
jo
jle
mov
mov
shl
inc
xor
inc
inc
xchg
mov
int
hlt
sbb
ss
daa
jne
mov
lea
loopnew
jne
and
pop
dec
mov
xchg
push
mov
movsb
lods
lret
scas
push
jp
mov
imul
ja
clc
xlat
test
inc
pop
add
test
stos
subps
sbb
out
fidivrs
sbb
sti
popf
cli
imul
add
stos
loope
pushf
jle
jp
popf
cmp
jp
into
repz
and
mov
mov
inc
mov
mov
lcall
mov
scas
dec
ffreep
mov
mov
and
fcmovnu
inc
jecxz
mov
lods
fbld
jo
push
pop
sub
cli
inc
out
cmpsl
in
sub
sahf
dec
movsl
sbb
or
cld
dec
mov
into
jnp
mov
shlb
sti
loopne
xchg
jge
adc
stc
jbe
aam
or
std
xchg
xor
push
or
xchg
pop
dec
adc
fmull
push
xor
decb
cmc
mov
pop
xchg
and
paddd
jo
in
ljmp
es
int3
mov
ljmp
lods
lea
loope
xchg
mov
lods
in
popa
xor
inc
mov
xchg
xchg
icebp
dec
xchg
inc
jle
out
mov
inc
ucomiss
push
pop
inc
add
js
daa
pop
pop
cmp
aad
mul
add
jae
xor
pop
adc
jns
into
mov
sahf
test
decl
lea
test
mov
mov
gs
clc
shl
sbb
inc
adc
sar
bound
jb
sub
repnz
mov
mov
jno
xor
xor
lock
leave
hlt
add
dec
push
test
loopne
mov
leave
out
pusha
sub
hlt
mulb
fiadds
pop
leave
dec
mov
dec
out
repnz
xchg
pusha
mov
sub
in
loope
mov
mov
inc
out
mov
mov
jb
inc
adc
mov
lods
cmp
inc
in
scas
stos
pop
aad
push
jmp
jp
lods
push
repz
xchg
mov
and
cmp
ljmp
dec
out
dec
sbb
int3
scas
mov
dec
andb
cld
scas
sti
sbb
jg
lcall
mov
fildl
mov
out
ljmp
in
add
mov
pop
pop
mov
sarl
shl
sti
jg
mov
dec
shll
xor
mov
jb
in
xorb
int
push
roll
lret
jg
test
jl
pop
xor
test
sbb
ja
loop
rorb
pop
jg
cmc
icebp
mov
das
scas
in
and
cmpsb
imul
pop
inc
push
jo
xchg
add
aas
decl
push
sti
aas
mov
xchg
add
mov
lret
jbe
xchg
scas
fdivrp
inc
adc
xor
mov
mov
addl
mov
add
fisubs
pop
repnz
stos
jne
imul
or
pusha
cmp
inc
lcall
jmp
fnsave
sbb
add
addr16
xchg
xchg
rcl
push
loopne
add
stos
sub
sar
mov
insl
icebp
mov
pop
sbb
aaa
mov
pop
mov
outsb
sub
lldt
mov
jp
loopne
mov
data16
xchg
add
pop
jg
arpl
dec
ror
jle
addb
sub
test
sub
or
sub
push
jns
test
mov
call
bound
mov
add
loope
js
nop
xchg
xor
cmp
push
and
inc
xor
mov
lahf
stos
cmp
add
call
sbb
leave
jo
and
and
jl
and
fiadds
adc
mov
popf
xor
orl
xor
mov
mov
xchg
pop
movsl
in
or
xchg
jge
add
movsl
pop
out
jp
daa
pop
mov
sub
lds
cmc
test
mov
adc
xor
jmp
pop
and
jmp
gs
adc
test
adc
pop
out
cli
pop
aas
mov
sub
pushf
pusha
in
xchg
addr16
jp
jp
out
sub
mov
mov
mov
fs
int3
loope
adc
dec
add
jo
or
mov
dec
cmpsl
xchg
das
addb
fdivs
int3
mov
int
xchg
and
cld
popa
sti
pop
imul
mov
iret
ljmp
mov
les
jge
mov
sub
push
inc
mov
sbb
xchg
in
pop
stc
cmp
dec
dec
sti
and
dec
outsb
and
sbb
shlb
cmp
popl
jl
pop
into
cmpb
jae
mov
fildll
std
pop
lea
icebp
lret
hlt
fadd
mov
jns
leave
sub
dec
xlat
jp
imul
xor
mov
mov
push
test
fdivp
cmc
fwait
cld
icebp
aaa
push
mov
add
pushf
popf
mov
xor
cmpsb
or
rol
fnstcw
xor
inc
or
pusha
pop
rcrb
mov
fildll
out
in
cmp
mov
je
adc
sbb
dec
sub
stos
add
jecxz
pop
mov
iret
fidivrl
xchg
xchg
cld
ljmp
push
int
jmp
orl
mov
mov
ficompl
shlb
jo
mov
mov
sbb
dec
cmp
push
test
and
mov
pushf
dec
pop
dec
ljmp
call
push
addr16
out
cmc
or
xor
xchg
lea
iret
arpl
adc
add
xor
mov
dec
push
push
frstor
mov
bound
xor
mov
les
or
jg
cmc
lret
sbb
out
xlat
mov
push
fwait
clc
sbb
stos
pusha
std
mov
mov
es
pop
add
or
ret
ljmp
or
cmc
mov
pop
xchg
pop
mov
incb
xchg
cmp
mov
xchg
hlt
jb
xchg
lahf
inc
mov
xchg
adc
rolb
addr16
xchg
icebp
int
xchg
xor
adc
push
adc
push
add
mov
mov
js
inc
sbb
or
cmp
mov
mov
lahf
xchg
add
fs
dec
shlb
in
push
dec
ss
sub
mov
jle
lcall
xor
pop
dec
and
out
testb
mov
sbb
fidivrs
stos
pop
pop
out
lret
adc
test
cmpsb
out
jb
or
mov
loope
scas
jne
loopne
rorl
inc
inc
rcrl
dec
mov
lods
setnp
push
mov
add
fnstenv
cld
loopne
pusha
pop
ret
jmp
mov
jg
sti
scas
sub
mov
cwtl
xlat
cmp
mov
jne
pusha
vcvtps2pd
popf
adc
and
push
mov
jns
jecxz
and
cld
cli
sbb
or
sbb
ror
out
sub
adc
daa
inc
into
adc
mov
push
leave
stos
pop
pusha
daa
add
dec
add
sbb
fnstcw
sub
test
push
lcall
xor
ret
les
sbb
and
jnp
pusha
push
hlt
add
and
push
xchg
add
mov
cmpsb
movups
cwtl
xchg
jns
xchg
inc
or
dec
lds
aas
outsb
jmp
cmp
call
mov
mov
ret
mov
xor
inc
jne
lret
bnd
jbe
pop
fucompp
jg
cli
jp
xlat
enter
int
into
mov
fcoms
pushf
ss
push
arpl
aas
dec
int
stos
sub
xor
cs
ja
in
nop
dec
scas
stos
push
lcall
cld
xor
fdivrs
adc
xchg
and
call
mov
dec
add
or
in
cmp
jmp
sbb
push
and
adc
aad
mov
lock
popa
in
sub
js
push
inc
xchg
pop
mov
xchg
iret
push
sti
lret
js
sub
rcrb
fsub
mov
loop
orl
sub
mov
aad
xlat
loopne
inc
xor
mov
lret
fstl
lods
fdivl
mov
push
stos
push
movsl
inc
mov
rol
or
jno
xchg
mov
imul
sub
dec
mov
mov
or
icebp
int
push
jno
mov
clc
scas
sub
push
sti
lods
scas
stos
std
lret
push
cwtl
jmp
cmp
mov
jmp
inc
push
mov
cmp
pop
adc
adc
jnp
sti
rcl
lret
mov
stos
lea
das
fidivrl
jae
loop
mov
jg,pt
test
push
mov
scas
mov
mov
lret
int
cwtl
int
jae
add
sarl
cld
mov
in
repnz
lock
es
mov
cwtl
push
adc
push
cs
aam
and
push
aaa
sub
xor
je
loopne
and
sbb
movsl
mov
jnp
mov
or
pop
aas
rol
sub
push
shlb
fbstp
call
lret
sub
inc
cld
sub
or
cmp
inc
into
ja
out
mov
adc
scas
adc
scas
and
mov
jnp
stos
cli
std
nop
xchg
sahf
sub
es
adc
insl
pop
pop
jg
cmp
xlat
inc
cmp
hlt
fsts
out
fnstsw
xchg
adc
push
out
stc
cmpsb
pusha
jle
adc
jae
jns
daa
pusha
out
add
repz
stos
dec
adc
scas
stc
and
adc
dec
stos
and
sub
test
sbb
sbb
jno
lcall
scas
lret
sub
sub
adc
jp
icebp
mov
fdivrs
push
adc
add
sbb
dec
adc
and
mov
sbb
std
test
pop
jecxz
adc
shr
inc
jmp
sti
cmp
xchg
mov
xor
shl
add
imul
and
jmp
pop
mov
cmp
mulb
sti
add
rorl
xchg
das
dec
mov
dec
cmp
dec
xchg
and
or
mov
mov
push
mov
sti
shlb
mov
xor
mov
adc
je
ljmp
pop
popa
in
out
mov
aas
dec
mov
dec
sbb
popf
dec
pop
jmp
lods
xchg
in
xchg
ja
mov
xlat
cli
or
lock
gs
cmp
mov
mov
addb
outsb
push
and
push
jmp
xchg
adc
mov
lcall
xor
dec
adc
shrl
scas
mov
xchg
sub
insl
out
adc
inc
popf
mov
test
xor
sbb
cmp
jno
and
shr
iret
sbb
dec
scas
jo
int3
popa
pop
jo
data16
lret
pop
cs
outsb
mov
ds
jmp
push
sbbl
and
or
xchg
add
push
repz
mov
enter
fistpll
pop
adc
and
mov
popf
and
fdivrp
test
mov
pop
mov
ds
mov
shrl
jne
mov
test
mov
imul
cmp
ret
sbb
int
and
icebp
pop
mov
scas
xor
mov
aas
sarb
test
add
mov
xchg
and
mov
loope
mov
shlb
pusha
pop
or
xor
sbb
pusha
push
add
adc
shlb
jmp
mov
test
and
lret
dec
push
movsl
je
shlb
mov
ds
scas
xchg
dec
xor
flds
mov
test
in
xor
ret
jns
cld
pushf
repnz
push
bound
stos
push
scas
sbb
mov
and
adc
mov
test
sub
cmp
stc
shlb
ficoml
test
inc
xor
add
fisubrs
repz
cmp
mov
mov
ret
nop
add
push
stos
jp
rcr
sbb
stos
rorl
inc
pop
cwtl
mov
in
push
sub
pushl
xchg
shlb
add
sbb
cmp
insl
mov
inc
push
adcb
outsb
sbb
adc
xchg
mov
jecxz
daa
mov
cwtl
cmpsl
or
xor
mov
adc
pop
inc
cmp
mov
nop
pushf
push
mov
jecxz
outsl
fnsave
and
or
fwait
cmp
mov
push
sarb
inc
or
mov
sub
pop
les
int
xchg
mov
imul
jns
xchg
add
inc
push
fldt
incl
aas
outsl
pop
xor
ret
loopne
adc
out
adc
aaa
bnd
gs
ljmp
scas
std
jne
outsl
mov
stos
incb
sub
lods
arpl
ljmp
xorb
and
cmp
cs
push
sbb
stos
mov
mov
or
icebp
cwtl
adc
dec
adc
imul
in
xchg
and
nop
mov
sbb
daa
scas
mov
cwtl
mov
inc
sub
daa
mov
xchg
cmpsb
push
add
xchg
mov
rcrb
jp
outsl
inc
arpl
jns
test
lret
mov
push
jnp
sub
test
inc
sbb
mov
xchg
push
dec
pop
adcb
jecxz
xor
fbld
and
daa
lock
mov
sub
dec
mov
jle
add
shr
sahf
ds
lret
xor
mov
mov
clc
or
int
xor
push
outsb
bound
or
adcb
adc
jg
sarl
sub
push
jo
push
std
mov
fnsave
cli
jl
ja
lret
lock
daa
jmp
push
fdivs
dec
xor
lea
lods
xor
cmp
pop
xor
mov
mov
into
cmp
push
aaa
lahf
stos
popl
fidivrl
push
cmp
sbb
in
outsb
test
add
cld
sub
lds
push
inc
stos
push
xchg
imul
call
add
pop
lret
push
lds
mov
movsb
jmp
add
enter
sbb
dec
insl
sub
sarb
xchg
fdivs
push
sbb
sub
push
lea
add
notb
pop
add
sub
push
adc
repnz
into
sub
repz
and
xor
cmpb
fcompp
and
add
test
sar
out
mov
or
fidivrs
out
mov
outsl
arpl
push
xchg
lods
stos
cltd
mov
repz
push
add
jno
jecxz
mov
xor
adc
pop
mov
push
fiadds
daa
aas
movsb
mov
sbb
push
jbe
cli
mov
insl
xor
in
adc
ds
fidivs
and
js
jae
jo
xchg
les
mov
sti
jns
cld
or
cwtl
mov
cmc
add
sub
clc
mov
adc
int3
loopne
aad
xor
xor
pop
inc
pushf
aad
xchg
je
stc
inc
dec
ds
cmpsl
movsl
adc
mov
int
push
pop
dec
cmpsb
aas
cmpsb
adc
sbb
mov
lret
mov
sub
aas
popa
js
sarb
mov
in
push
scas
in
jns
mov
aad
inc
jge
imul
out
cmpxchg8b
int
dec
dec
out
push
insb
add
fbld
addr16
sbb
push
insb
jl
stos
dec
aaa
and
adc
loop
out
fistps
aad
add
mov
stos
test
pop
xor
adc
dec
icebp
jmp
inc
inc
ds
jno
mov
mov
ja
cs
fisubrs
popf
bound
cmp
xor
dec
lea
nop
add
jmp
cli
sahf
sbb
test
inc
push
rorb
sub
lock
jnp
mov
sahf
lock
mov
xchg
jnp
inc
push
or
inc
sbb
mov
mov
add
decb
ffree
call
ret
pushf
in
push
andb
pop
mov
mov
mov
fstl
out
shl
lods
push
mov
push
cmp
pop
lods
sbb
and
js
jbe
push
loopne
xor
stos
pop
repnz
scas
mov
aas
mov
mov
fidivl
rcrb
push
icebp
ret
movsl
mov
stos
sbb
pusha
lods
repz
jmp
mov
fs
xor
and
add
cmc
aam
inc
jnp
sahf
mov
mov
mov
scas
cmp
shlb
sbb
pushf
jo
inc
add
jbe
rol
xor
sbb
jle
ret
mov
and
xorl
lods
data16
sub
mov
mov
jns
mov
add
mov
or
test
inc
data16
pop
inc
adc
push
or
insb
adc
xchg
pop
out
stos
mov
adc
pop
xchg
fwait
shll
jle
pop
pusha
pop
mov
popf
and
ja
or
xchg
cmpsl
and
jle
jmp
add
js
inc
scas
lret
cld
or
cmp
mul
sbb
aam
and
xchg
mov
imul
movsb
sbb
ja
jbe
mov
ss
jb
add
push
xor
and
and
xchg
nop
std
out
pop
hlt
inc
and
jl
mov
jno
fs
stc
mov
popf
lods
mov
add
dec
cld
pushf
sbb
add
sbb
subps
and
cs
xor
cmp
sbb
mov
sti
sbb
mov
idivb
mov
pop
shll
mov
jmp
jge
mul
jnp
mov
mov
clc
das
paddb
jg,pn
shlb
xor
loopne
add
ret
xor
les
jle
lods
inc
push
lahf
jg
mov
jp
cli
out
scas
adc
iret
mov
mov
bound
mov
sbb
pushf
adc
mov
jnp
inc
push
mov
imul
jl
sbb
ret
dec
mov
inc
notl
outsb
mov
cs
inc
rcrb
cld
mov
rclb
repnz
jle
mov
ljmp
adc
and
adc
pop
xchg
mov
call
scas
mov
jp
je
push
mov
mov
aaa
cld
inc
nop
mov
mov
aad
dec
hlt
cld
sbb
push
cmpb
and
mov
sub
push
and
call
in
and
andl
push
fidivs
pop
xor
lock
cwtl
add
mov
jo
ds
add
testb
cld
rcll
jg
push
mov
hlt
fistpl
call
mov
jle
and
fwait
dec
sub
loope
loopne
imul
mov
dec
sub
xlat
jo
popf
insl
sbb
xchg
sahf
fs
add
int
pop
leave
pop
push
stc
icebp
loope
xor
sub
sbb
and
je
repnz
and
shll
xor
insl
out
mov
adcb
outsb
outsb
jne
push
mov
and
mov
adc
xor
adc
pop
mov
and
adc
adc
and
idiv
mov
mov
and
lret
ljmp
addr16
xchg
adc
daa
movsb
push
pushf
mov
and
dec
sti
pusha
cmpsl
scas
sub
and
mov
lods
stos
lcall
movsb
sub
inc
sub
xchg
lcall
icebp
inc
mov
test
xchg
jae
outsb
pop
dec
psubq
mov
mov
cvtdq2ps
cmp
pop
and
dec
bound
movsl
cli
outsl
daa
jno
push
mov
dec
xlat
adc
xor
fsubl
add
jg
les
cs
xchg
add
mov
movsb
mov
add
ss
sti
and
mov
inc
pop
std
movsb
dec
icebp
bswap
xor
movsb
jl
xchg
inc
sub
push
outsl
adc
iret
cs
and
jge
incb
push
call
jno
inc
cmpsl
and
mov
clc
sub
mov
sti
sbb
lock
xchg
add
xchg
xor
movsb
inc
das
arpl
imul
pop
sbb
test
pop
movsb
pop
and
adcb
movsb
or
cmp
mov
fwait
movsb
and
adc
aas
mov
lock
mulb
rorl
les
dec
dec
inc
cmp
inc
andb
xchg
outsb
arpl
push
rclb
cmpsl
lods
push
jmp
mov
mov
outsl
mov
jmp
daa
dec
push
mov
and
push
add
sbb
or
loopne
mov
test
fidivrs
mov
dec
sub
xor
push
dec
cmp
cltd
testl
xor
out
daa
jmp
mov
mov
enter
movsb
cwtl
stc
mov
jno
shrb
scas
push
and
xor
mov
hlt
hlt
out
xor
dec
and
fisttpl
iret
add
mov
clc
xor
push
push
xor
int3
jbe
fists
mov
and
bound
xorl
jp
cmp
out
dec
add
ljmp
cs
push
lock
or
pushf
jp
cld
sub
adc
mov
jge
pushf
pop
in
pop
jae
and
fcompl
add
pop
add
loope
cmpb
mov
pop
subps
sub
xchg
daa
icebp
les
and
and
xchg
nop
sbb
mov
cli
movsl
and
leave
scas
mov
dec
push
negb
jmp
int3
push
mov
dec
xor
mov
ljmp
xchg
add
xor
cmpb
and
sbb
pushl
fidivs
decl
sbb
jo
add
adc
sbb
fidivrs
aaa
pop
mov
mov
pusha
out
fldcw
jae
jle
js
fidivrs
jl
cli
xor
leave
cmp
mov
push
movsl
movsl
pusha
jno
pop
add
cmp
and
fidivrs
cmp
mov
push
pop
movl
cmp
out
imul
push
clc
leave
push
and
fstpl
adc
dec
or
inc
mov
cmpsb
inc
mov
or
cmpsb
fadds
push
jmp
dec
jmp
and
adc
jb
frstor
popa
xor
stos
popl
fsubl
and
call
sbb
clc
outsl
xchg
inc
jp
mov
dec
adc
icebp
andb
pop
jnp
clc
std
repz
rcr
cld
mov
ljmp
je
testb
pop
andb
pop
xchg
jno
call
mov
xchg
pop
jne
mov
adc
cmc
imul
sbb
dec
push
inc
rorl
mov
dec
pop
lret
push
call
xor
xchg
fisubrl
mov
pop
sbb
sub
pop
mov
mov
rcl
repz
mov
adc
or
dec
mov
cmc
gs
repz
inc
push
adc
addb
mov
and
mov
push
ds
out
adc
pushf
mov
movsb
dec
mov
leave
cmp
mov
sub
movsb
push
sti
popf
mov
daa
shr
mov
push
loope
mov
adc
push
mov
sub
push
mov
mov
add
arpl
mov
pop
mov
inc
sbb
sbb
sbb
push
dec
icebp
xchg
shrl
xchg
sub
jb
insb
add
mov
pusha
sub
int
not
cmpb
push
iret
xor
cmp
dec
test
js
fidivrs
mov
ret
mov
pop
mov
cmp
sbb
imul
add
lock
mov
push
sub
push
mov
divps
xor
xor
xor
stc
push
pop
inc
mov
mov
push
mov
bnd
popa
add
xchg
cmpsb
adc
flds
push
jae
pop
fnstcw
dec
aam
arpl
shrb
jmp
push
push
repnz
inc
lret
cmp
inc
int
mov
scas
imul
mov
movsb
cld
icebp
pop
outsb
lcall
jge
repnz
or
in
rorb
leave
add
iret
fsubs
adc
xrelease
cwtl
lods
nop
sub
nop
loopne
dec
stos
clc
inc
lret
stc
cltd
out
sti
cs
xchg
adc
inc
xorb
and
sub
icebp
jno
mov
shrl
dec
arpl
and
adc
rclb
xchg
or
lahf
xor
test
mov
jle,pn
add
leave
ret
ds
call
mov
sub
xchg
mov
mov
stos
idivb
xorl
inc
stc
int
xor
pusha
jo
jl
clc
nop
pusha
jne
in
subb
call
rclb
push
mov
mov
sbb
in
cwtl
xchg
movsl
fcmovb
adc
bound
repnz
jg
sarb
and
adc
fbstp
mov
lods
jbe
call
jmp
mov
arpl
and
call
into
shl
aam
in
fnstenv
in
xchg
pop
in
insb
pop
mov
jae
adc
clc
and
mov
push
adc
adcb
mov
push
and
mov
or
outsl
jo
stos
out
jmp
incb
pop
shrl
push
mov
repz
xor
ja
sub
push
popa
shll
test
push
xchg
sub
inc
mov
dec
outsb
jg
dec
sbb
jp
bound
inc
jmp
repz
fwait
add
xchg
popf
xor
push
cmpsl
cmp
cld
bound
mov
push
int3
ss
mov
shrb
inc
mov
aas
xchg
dec
stos
out
push
inc
push
ds
daa
cmp
mov
test
shll
dec
pop
loop
out
adc
xor
inc
mov
subl
mov
cmp
popf
mov
ficomps
ss
push
adc
test
add
push
lds
cmp
dec
and
sbb
clc
idiv
imul
add
lds
inc
fs
sub
popa
add
mov
dec
mov
and
push
sbb
idivb
incb
movsl
mov
or
clc
inc
mov
cmp
xor
les
push
or
add
jge
pop
sbb
cmp
dec
mov
call
std
mov
sub
mov
mov
mov
call
jo
or
mov
cld
push
mov
jge
lret
fldcw
sub
xchg
mov
orl
lcall
lds
mov
push
cli
pop
je
insb
and
cmp
cli
aas
or
psllw
push
adc
mov
aad
test
inc
jo,pn
cmc
cwtl
sbb
shlb
fstpt
cmp
mov
pop
inc
xor
cli
add
out
push
pushf
add
int3
xor
xchg
gs
dec
jbe
rolb
dec
ss
mov
push
scas
adc
jmp
adc
shlb
in
out
in
ds
pusha
xor
test
test
out
sub
mov
fmuls
add
jl
push
pop
xchg
scas
jge
and
leave
inc
shrl
mov
dec
cmp
cli
popf
cmp
daa
mov
adc
loopne
icebp
and
loopne
test
in
cmp
in
lret
xchg
mov
sti
lods
jmp
cmp
jmp
jge
and
push
xchg
mov
movsl
aad
popa
idivb
xor
mov
js
sbb
push
iret
and
shll
lcall
gs
clc
shll
xchg
xor
xchg
call
jl
inc
add
scas
mov
mulb
xor
rorb
cmp
outsl
movsb
data16
icebp
push
sbb
icebp
aad
mov
push
icebp
pop
iret
push
inc
mov
mov
lea
xchg
scas
jbe
repz
stc
xchg
ret
sub
and
roll
push
enter
pushf
pushf
adc
jl
mov
and
movsb
pusha
mov
lret
xor
pop
mov
movsl
adc
jns,pt
pop
outsl
jns
subb
sbbl
cli
mov
jnp
ljmp
cmp
out
imul
test
mov
push
lcall
test
mov
mov
pushl
sub
pusha
sbb
or
pop
pop
mov
add
scas
inc
fdivrp
inc
dec
dec
pop
mov
mov
xor
mov
std
and
orb
mov
xchg
sbb
pop
jno
clts
scas
adc
push
inc
inc
adc
xor
pop
lds
shlb
jecxz
mov
out
adc
cli
pop
push
add
add
iret
dec
daa
rcrl
xchg
mov
rcrb
aad
stos
xor
push
mov
pop
push
je
adc
and
pop
mov
and
imul
ror
sbb
mov
and
outsb
mov
cmpl
lock
lret
cmp
push
sub
jne
cmpsb
sbb
or
mov
int
jo
inc
jns
dec
sbbl
jge
js
add
shll
push
jbe
adc
mov
jl
outsl
nop
jne
std
xorl
pop
lcall
push
je
mov
inc
in
mov
xlat
mov
mov
and
mov
insb
xchg
mov
sub
iret
sbb
mov
mov
add
cmp
mov
out
jp
jno
xchg
xor
mov
popa
jbe
imul
and
jge
scas
lret
in
xor
movsb
inc
test
mov
xchg
int3
xchg
push
cltd
mov
mov
test
adc
sbb
popa
popf
xor
push
push
js
push
dec
and
ds
aas
mov
jmp
mov
and
imul
sti
pop
add
inc
add
or
xchg
lock
push
push
lock
enter
pop
sub
push
mov
push
mov
inc
mov
cmp
mov
jg
lods
inc
pushf
inc
decl
pop
mov
push
gs
mov
ds
or
cwtl
mov
fwait
scas
lret
pusha
ds
cmp
mov
sbb
jp
mov
jb
jle
ss
push
push
mov
ret
int3
roll
pop
jnp
movsb
mov
into
sub
sbb
pop
fimull
fdivr
aas
mov
pop
jno
insl
inc
and
add
bound
dec
xchg
stos
adc
inc
mov
call
std
xor
icebp
scas
push
aam
jo
mov
push
test
int3
sbb
jo
movsb
dec
call
loopne
add
lock
push
sarb
add
jp
icebp
fstl
push
and
xchg
xchg
bound
pop
bnd
test
jmp
xchg
and
loop
mov
xchg
test
mov
aaa
in
popf
fstpt
data16
mov
nop
and
jno
adc
xchg
add
dec
add
out
pop
jl
and
loopne
sub
mov
adc
jae
or
mov
out
in
adc
dec
and
insb
mov
mov
scas
shrb
pushf
and
out
fimull
sbb
test
and
cltd
scas
enter
fisubrl
add
jmp
lock
arpl
mov
sub
cmpsl
dec
cld
leave
out
test
inc
and
push
mov
pusha
jl
add
xor
mov
lea
shrl
xor
sti
add
xor
xchg
loop
adc
pop
jecxz
movsl
ja
sbb
movsb
sbb
std
push
lods
hlt
jl
mov
stc
hlt
add
cmp
cmpsb
fisubl
ds
icebp
test
sub
mov
aaa
push
cli
pushf
xor
imul
pop
int3
mov
pop
push
and
xor
out
adc
in
sar
or
scas
push
aad
aam
loopne
rcll
loopne
out
lods
rolb
outsl
test
adc
addr16
ret
jge
jns
inc
cmp
cltd
dec
es
pusha
sbb
repz
fisttpll
inc
mov
ret
mov
add
xchg
leave
fsts
cmova
push
shll
xor
fildll
daa
jl
int
lret
sub
xchg
add
out
shlb
aad
dec
pop
mov
arpl
fisubl
push
ss
adc
movsl
insl
mov
push
rolb
aaa
push
mov
stos
jae
dec
out
sub
or
mov
pop
or
jo
jae
sbb
sub
push
xchg
add
mov
dec
cmpsb
jbe
icebp
testl
je
push
xor
mov
and
and
xor
sbb
jno
jne
add
jbe
xchg
notl
mov
mov
xor
out
inc
inc
lock
pushf
sbb
call
pusha
cs
in
aad
into
pop
or
jo
xor
pushf
adc
dec
xor
sahf
dec
das
fcomps
push
adc
xchg
mov
popf
sub
shl
and
push
sub
addl
aad
mov
data16
jg
mov
out
aas
jecxz
int
not
mov
jmp
mov
out
xor
add
cs
xor
ljmp
mov
leave
std
lret
popf
repnz
pop
mov
push
mov
nop
je
fidivs
pop
mov
mov
mov
push
das
cli
mov
cld
jae
ret
and
and
xor
cmc
mov
ljmp
js
neg
int
mov
or
adc
loope
jb
ljmp
xchg
fmuls
sarl
xor
aad
out
jmp
cmp
inc
mov
and
addr16
movsb
mov
xchg
insl
mov
fisubs
pop
movlps
mov
sbb
icebp
mov
push
xor
lods
fwait
mov
mov
sbb
lock
std
fidivs
mov
add
mov
ljmp
add
divb
sti
sub
mov
imul
shll
sbb
movsl
xor
pop
xor
hlt
mov
mov
xor
jne
into
and
cmc
jno
add
jbe
xor
mulb
and
mov
xor
hlt
sub
pop
xor
xor
in
or
adc
sub
pop
shll
icebp
push
mov
mov
lock
dec
leave
fdivs
dec
aad
ja
push
ljmp
pushf
xor
je
pop
addr16
aam
popf
sbb
das
arpl
jno
fsubp
mov
inc
idivl
or
in
adc
lods
in
test
inc
mov
push
push
inc
cmpsb
negl
push
mov
dec
ja
sub
mov
clc
push
and
jae
mov
adc
mov
and
and
jb
js
pusha
mov
add
shlb
sub
mov
mov
jne
and
cli
movups
idiv
lds
js
or
sub
cwtl
dec
or
je
clc
push
xchg
push
and
sbb
loop
ret
push
ljmp
test
inc
pop
outsl
xor
dec
filds
inc
imul
loope
mov
clc
and
push
ret
xchg
pusha
test
jne
mov
repnz
test
pop
dec
das
push
cli
dec
imul
jae
pop
nop
cs
ret
inc
inc
pop
xchg
jns
sbb
sti
ret
jmp
loopne
jo
inc
test
mov
xchg
stos
and
imull
pop
and
adc
test
mov
dec
loop
jge
jae
jmp
fnstcw
pop
inc
roll
xor
negl
stos
jmp
movsb
fs
rclb
pop
add
pop
mov
ljmp
mov
sti
mov
cld
xor
mov
adc
push
test
jae
sbb
cmpsb
incb
xor
inc
xchg
adc
pushf
sti
or
js
in
push
push
outsl
mov
xor
in
outsl
push
jl
add
mov
mov
out
aaa
arpl
adc
lock
leave
out
dec
sarb
push
out
movsb
arpl
ficompl
std
lahf
sti
cmp
sbb
and
mov
adc
pop
into
jle
dec
add
mov
cltd
adc
mov
mov
add
jg
and
sti
push
inc
sbb
add
lret
jno
xchg
mov
ret
loope
sub
cmp
in
sbb
stos
sti
jb
mov
mov
out
dec
sbb
and
sti
xor
push
jmp
inc
add
nop
scas
pusha
mov
dec
shrl
pop
pop
stos
pop
push
jbe
cli
dec
mov
js
cli
jno
xchg
imul
ret
inc
pusha
int3
xchg
out
fwait
lret
mov
cli
into
loope
and
jbe
xorb
cmp
ljmp
mov
mov
daa
and
mov
ljmp
inc
xchg
out
pop
inc
sub
jl
fists
pop
pop
shr
leave
into
int
ret
adc
jb
add
jle
mov
test
push
mov
movsb
mov
dec
mov
inc
mov
fucom
icebp
pop
and
enter
das
movsb
lods
add
pop
stc
xor
xor
mov
addb
fucom
jns
scas
lds
xchg
cmpb
xor
jp
ficomps
mov
psllw
divl
test
push
mov
dec
test
and
dec
mov
cmp
into
and
mov
cmp
mov
jp
cmp
daa
negb
std
adc
cmpsb
mov
jle
jo
pslld
int
stos
jb
lods
mov
and
scas
or
loopne
lods
jmp
sahf
je
mov
outsl
into
jge
mov
pop
mov
mov
mov
mov
push
daa
outsl
mov
repnz
or
or
cs
xor
int
adc
test
add
inc
add
mov
adc
aad
mov
jmp
jmp
notl
popa
icebp
push
hlt
lock
test
pusha
js
int3
je
fsubrs
lock
lods
sbb
jecxz
popa
xchg
andb
cli
and
mov
push
lock
adc
cmpsl
lcall
insl
cli
cs
pusha
pop
mov
mov
pop
pop
movsl
xchg
jl
push
jo
adc
add
push
es
sahf
jbe
cmpsl
pop
adc
out
cli
add
inc
mov
mov
xor
mov
xchg
outsl
fdivp
xor
sbb
jae
mov
jge
and
cmp
shll
mov
inc
jle
out
jno
aaa
leave
jg
fstpl
nop
testb
and
divl
mov
mov
mov
test
cld
mov
ljmp
mov
and
cld
and
push
mov
mov
pop
sbb
lgs
mov
or
adcb
mov
mov
cmp
mov
push
pusha
cmp
push
pop
jmp
lcall
leave
xor
add
push
sub
flds
cmp
cmp
movsb
push
jae
cmp
ret
pop
xchg
rcll
mov
inc
adc
sbb
pop
bnd
mov
add
pop
and
shl
scas
adc
es
sub
mov
fdivl
filds
mov
dec
call
cs
bound
sub
and
mov
dec
insb
and
mov
mov
and
lcall
cmc
icebp
fidivs
sbb
mov
aam
leave
lahf
lods
pop
test
daa
not
fistl
adc
into
adc
dec
sub
pop
push
jg
mov
mov
fstl
inc
xor
and
fistpl
jo
xchg
icebp
mov
add
lahf
stc
stos
xchg
xchg
jecxz
int
stos
lahf
insl
xchg
pop
adcl
imul
sub
std
insl
xor
call
cmpsb
test
cmp
outsl
aaa
xchg
and
mov
ss
and
xchg
pop
push
push
cli
mov
add
jae
roll
adc
cmc
mov
mov
loope
jo
jbe
or
sub
mov
loope
mov
inc
mov
dec
xor
mov
psrlw
add
push
repz
js
or
push
outsl
adc
pop
movsb
btr
pusha
fists
or
rcr
je
push
xor
dec
adc
sti
fiadds
adc
mov
nop
jb
pop
test
ret
push
and
sti
loope
xchg
rsqrtps
adc
push
movsb
ret
xor
popl
scas
sub
push
mov
sbb
xor
jge
mov
xor
or
test
add
adc
ficompl
or
xor
adc
push
jge
pop
scas
adc
cmp
fisubl
out
and
imul
mov
movsb
push
and
aam
pop
sub
loop
pop
mov
testb
hlt
mov
push
push
inc
iret
add
lret
xchg
mulb
cli
mov
shlb
out
lods
icebp
test
sbb
jg
pusha
dec
adc
inc
push
fmull
mov
xchg
mov
mov
les
sub
movsl
das
cmpsb
pop
aam
pop
dec
inc
add
test
pop
std
lret
xchg
imul
in
add
add
jp
xorl
inc
js
fisttpl
stos
int
cmc
add
xchg
cmp
sbb
mov
lcall
jbe
mov
jnp
sarb
inc
nop
icebp
cmp
addr16
mov
stc
icebp
lcall
out
cmc
lret
mov
cli
into
icebp
mov
sbb
mov
das
push
aam
push
and
pop
lds
or
out
movsl
je
adc
leave
imul
call
adc
sahf
mov
cs
idivl
mov
icebp
add
shll
and
cmp
and
or
mov
fdivp
adc
push
mov
jns
mov
aas
push
ljmp
pop
sub
int
adc
cmp
push
xor
xchg
popl
jbe
repnz
fnstsw
xchg
add
ret
ret
cmp
sarb
mov
fsubp
icebp
mov
mov
ljmp
xor
data16
xchg
nop
daa
pop
mov
push
data16
jae
mov
xchg
mov
pop
jo
or
sub
jnp
mov
cwtl
lods
inc
loop
push
rcrl
sahf
pop
inc
ss
outsb
jb
add
pop
jo
jae
addr16
xlat
popf
sbb
or
rcll
pop
je,pt
loope
int
into
push
xor
scas
aad
test
jne
scas
call
dec
out
adc
sbb
shll
mov
jae
lods
and
mov
mov
loopne
addr16
add
mov
add
and
rorb
jmp
jmp
adc
test
pop
stos
and
shll
add
mov
xchg
std
inc
int3
mov
jge
popf
and
adc
test
shr
xor
mov
xor
testb
outsl
sahf
xchg
icebp
das
adc
push
sarb
jp
jno
xorb
mov
pop
mov
clc
push
imul
lahf
pop
testl
pusha
jp
inc
movsb
push
sbb
outsb
mov
cs
out
dec
mov
lret
mov
mov
pop
leave
arpl
fcoml
insl
icebp
mov
lret
test
cmpsb
cld
daa
mov
add
inc
pusha
dec
cmc
rorl
jno
pop
jmp
lods
push
xchg
lahf
mov
in
push
out
iret
ss
push
xchg
xchg
jo
jo
leave
fmull
loope
out
pop
add
push
test
dec
push
xchg
cwtl
and
int
dec
fstl
insl
or
jno,pn
js
nop
pop
pop
mov
lods
xchg
xchg
fadd
jnp
mov
mov
push
mov
mov
adc
mov
out
pop
outsl
adcb
push
daa
pop
repnz
fldl2t
mov
sarb
jp
cs
or
jb
mov
test
int
fildl
aaa
add
dec
sub
jmp
mov
push
adc
mov
or
add
out
adc
shrb
lcall
movsb
push
rclb
pushf
xlat
pusha
mov
xor
push
test
js
cmp
cmp
adcl
ds
cltd
dec
cmp
cmp
shlb
mov
scas
sub
mov
in
mov
iret
inc
jnp
pop
test
dec
aaa
jle
adc
loop
sti
adc
pop
push
loop
mov
adc
mov
test
lds
test
mov
lea
and
push
dec
ja
imul
inc
vmovlps
shlb
xor
cmpsb
fidivs
repz
lret
inc
xchg
data16
orl
mov
pop
movhps
xor
test
sbb
shlb
jmp
or
jle
mov
divl
mov
shrb
jg
mov
sbb
pop
mov
mov
iret
mov
in
and
cmc
dec
outsl
int
iret
pop
xchg
xchg
hlt
stos
push
and
sbb
xchg
push
loope
jne
and
dec
mov
out
jmp
adc
or
dec
ss
loop
mov
adc
leave
clc
roll
inc
stos
aad
and
hlt
mov
jo
jnp
jmp
repz
mov
xor
aas
mov
ljmp
cmp
lods
push
cmp
adc
mov
mov
out
ds
pop
and
and
or
mov
jbe
addr16
cs
imul
push
dec
jbe
sub
hlt
add
movsb
in
jmp
arpl
iret
and
or
and
adc
push
ljmp
addr16
sbb
push
cwtl
jg
xor
pop
xor
insb
aaa
pop
sub
mov
addr16
mov
test
mov
pop
jbe
into
cmp
cmp
adc
mov
mov
adc
rcll
outsl
mov
inc
dec
sbb
bound
sbbl
stos
adc
movsb
ja
add
sbb
stos
cmp
fnsave
lds
and
cmp
ss
cmpsl
es
fadd
aad
inc
mov
xor
mov
push
psubb
xlat
lea
aas
lods
cmp
dec
mov
pop
dec
mov
shl
mov
insl
xchg
sub
jle
push
ja
mov
xchg
fnstcw
pop
out
xor
pushf
out
shrl
int3
shll
outsb
ja
adc
adc
pop
add
movsb
out
aad
adc
pop
inc
jb
pushf
repz
test
fucomi
cltd
lcall
pop
sahf
aas
xchg
imul
xorl
adcb
mov
out
int
pop
or
rorl
sbb
mov
loop
xchg
inc
xchg
loopne
dec
testb
out
xchg
pop
pop
adc
ret
leave
lods
jg
inc
lock
mov
cli
stos
les
pop
cmp
and
mov
dec
dec
adc
out
repnz
in
xchg
outsl
cmp
notb
popf
mov
ficoms
and
aad
push
mov
or
mov
push
or
int
mov
xchg
aas
arpl
push
js
or
shll
sbb
les
aam
pop
scas
lea
testb
mov
loope
adc
cmpb
mov
int
movsb
pop
aad
out
hlt
mov
pop
test
push
repnz
shrl
mov
sahf
mov
fwait
push
call
push
mov
test
inc
pop
jns
mov
jno
and
jmp
fwait
push
jo
out
mov
leave
es
outsb
adc
xchg
imul
scas
and
and
hlt
in
push
scas
outsl
fucomp
sbb
sub
and
sti
xchg
mov
clc
out
jmp
sarb
testl
pop
cs
pop
and
neg
jne
shrl
inc
cmp
dec
mov
ds
cmp
dec
mov
add
call
inc
cmp
repz
adc
cli
cld
jb
inc
pop
cwtl
sub
mov
jmp
mov
fcomp
jno
andb
push
gs
xor
rcl
pop
sarl
jae
cli
mov
out
inc
loopne
and
into
xchg
adc
push
out
push
add
pop
rol
ret
clc
adc
xchg
mov
cmp
sbb
leave
pop
jae
jb
add
mov
adcl
mov
hlt
jle
jge
bound
adc
rclb
or
lret
out
xchg
dec
sub
lahf
shll
pushf
cli
sti
mov
loopne
adc
mov
sbb
push
loopne
and
sub
push
lahf
loopne
and
loop
xchg
xor
shlb
mov
jmp
pop
loopne
xor
in
xchg
sahf
push
bound
add
stos
rorl
pop
ds
rcl
add
pop
icebp
pop
and
pop
pop
aaa
pusha
push
lods
xlat
in
jbe
xor
shl
testb
cmp
mov
xchg
inc
orb
jb
negl
jne
dec
sbb
push
loopne
lods
loop
mov
lock
rcll
cwtl
mov
xchg
lret
shrd
adc
cli
jno
sarb
xor
hlt
add
pop
sub
es
jne
cld
jmp
inc
imul
les
pop
sti
ficoms
mov
je
hlt
mov
mov
mov
movsl
push
adc
out
icebp
pmaddwd
jl
inc
sbb
mov
add
sti
out
roll
clc
rcrl
gs
in
xlat
sbb
xor
and
cmp
sub
mov
mov
adcl
movsl
aaa
mov
arpl
pop
shr
add
dec
cli
sbb
fistps
jp
orb
mov
jge
ja
jne
cld
orb
sahf
adc
lods
cmpsb
mov
mov
cmp
movsb
push
jns
roll
orb
inc
mov
mov
stc
test
repnz
in
les
push
inc
push
pop
push
je
adcb
scas
pushf
lea
setbe
mov
in
loopne
push
sbb
or
into
scas
adc
movsb
in
mov
and
jns
mov
imulb
jb
inc
loope
mov
jbe
jno
xchg
inc
sub
popa
push
lods
cmpsl
orb
mov
dec
jl
cmp
pushf
not
jl
lcall
jmp
js
cmc
mov
mov
sahf
std
or
dec
push
cmp
add
mov
push
mov
scas
xor
sub
mov
stos
stos
pop
pusha
pop
arpl
mov
loope
das
sahf
test
sahf
sbb
mov
mov
mov
sbb
test
cmpb
cltd
mov
stos
leave
test
sub
iret
xorb
push
leave
icebp
ljmp
les
mov
sbb
jae
jmp
adcb
adc
in
mov
scas
ds
xchg
rol
adc
imulb
movsb
cltd
idivb
fbstp
dec
es
loopne
loope
repz
fisubrl
xor
jle
and
out
divb
mov
push
rclb
inc
sahf
adc
sbb
mov
pop
les
xor
xchg
sub
jl
cmc
cld
fldl
loop
aaa
cli
cmp
lret
cli
and
lret
or
insl
or
jb
pop
fistl
jb
mov
adc
inc
negb
cmp
shl
add
mov
loopne
out
imul
mov
inc
imul
mov
pusha
loopne
mov
jns
das
int
fmull
js
pop
jb
mov
cwtl
jle
xchg
jl
in
ljmp
cli
sbb
into
and
jno
mov
movsb
rcrl
jae
pop
loopne
sub
arpl
sar
push
dec
or
daa
dec
pop
xor
icebp
pusha
imul
add
out
movl
out
inc
cld
fcmovu
cltd
xor
mov
sahf
cwtl
cld
movsb
push
subl
pop
xchg
and
repz
roll
jb
pop
cmp
jmp
lock
mov
jg
pop
rorb
mov
inc
cmp
dec
mov
jbe
movsb
push
sahf
repz
in
add
xorb
ss
add
arpl
repz
dec
adc
and
xchg
xorb
or
cmp
jmp
sub
cltd
xchg
dec
mov
mov
repz
test
and
icebp
mov
sub
xchg
shlb
jge
cmp
pushf
jg
addb
repnz
jle
cli
test
cwtl
mov
int
and
in
clc
jb
lea
popa
daa
fisttpll
sti
shll
push
lea
or
cmpsl
mov
mov
loopne
pop
xlat
mov
hlt
mov
leave
pop
add
xlat
and
testb
mov
push
cmp
push
sti
jb
ficompl
xor
cmp
fwait
sbb
testl
mov
adc
mov
cmp
sbb
adc
sbb
rorl
shrb
mov
mov
lcall
inc
adc
sub
jne
jmp
cmp
pusha
jae
out
dec
cmpsb
std
movsb
inc
inc
pop
aas
lea
cmpsb
and
jge
movsl
jmp
sub
sbb
pushf
inc
add
cli
mov
xor
push
sub
sahf
xchg
mov
mov
mov
push
bnd
in
inc
mov
pop
ja
cmc
rolb
lds
or
data16
pop
loope
arpl
adc
pop
push
fnsave
adc
pop
cs
dec
mov
and
or
xchg
bnd
pop
sub
pop
icebp
pop
sbb
mov
fs
sbb
mov
inc
xor
push
mov
xor
fnsave
imul
sub
mov
jge
in
lods
lahf
and
loop
push
inc
xor
flds
cli
popa
shll
pop
insb
loope
pop
and
loopne
push
imul
sub
sub
add
mov
loope
sbb
mov
aam
sbb
sahf
jno
push
out
inc
lret
and
jno
jae
jg
adc
xorb
je
pop
sarl
mov
mov
dec
push
lcall
popa
add
dec
rclb
stos
add
xor
loope
mov
call
out
xchg
sbb
inc
and
fidivrl
icebp
ds
sbb
sbb
daa
das
jmp
ljmp
pop
mov
dec
ljmp
fisubrs
hlt
add
movb
pop
mov
mov
jle
adc
stos
ljmp
mov
stos
shlb
insb
test
add
test
mov
jnp
mov
insb
daa
mov
and
aas
adc
and
mov
sub
int
xlat
and
add
daa
cs
mov
xor
call
pop
or
sbbb
aas
mov
imul
mov
adc
push
int3
cld
icebp
dec
and
daa
sub
mov
ljmp
xor
int3
sbb
imulb
adc
mov
push
das
dec
arpl
xchg
cmpsl
in
and
jae
hlt
insl
and
and
mov
ljmp
movsl
push
add
mov
cli
insb
andps
jbe
cld
test
outsl
addr16
popa
dec
loope
or
popa
sbb
ret
pop
out
aas
movsb
xchg
mov
xor
and
push
cli
and
mov
dec
cmp
rcll
cmp
shll
and
mov
out
loopne
jae
cmp
mov
ret
pop
dec
cmpsl
dec
bound
push
std
daa
mov
cmp
mov
std
jnp
sub
loopne
push
dec
jg
mov
pop
cmpb
pop
repz
stc
jp
and
notl
popf
lret
sub
cltd
and
loopne
shll
mov
insb
mov
sbb
negb
and
sub
lock
mov
and
ljmp
sbb
pop
mov
out
test
jp
jl
sub
jmp
inc
mov
mov
or
cs
sbb
sbb
movsb
and
xchg
int3
repz
push
mov
mov
sbb
imul
mov
int
lods
jg
and
add
incb
nop
inc
push
adc
and
adc
jmp
negb
push
test
mov
push
aaa
mov
int
pop
repnz
movsb
push
in
cmp
xor
jmp
and
ljmp
mov
inc
stos
shl
je
fbld
movsb
fistpl
xor
sbb
xor
push
lret
sbb
pop
scas
jns
andb
xchg
lods
push
fistl
arpl
jnp
mov
pop
repnz
icebp
orb
ret
jecxz
inc
jp
or
pop
test
in
jle
and
mov
int
in
mov
pmuludq
pop
rclb
ljmp
mov
adc
lock
sbb
dec
mov
xchg
into
dec
icebp
jae
hlt
sbb
test
cmp
roll
adc
punpcklwd
push
and
inc
cmpsl
add
mov
add
fisttpl
mov
mov
jmp
imul
fbld
and
inc
pop
clc
dec
pusha
cmp
inc
ja
gs
sbb
xor
outsb
jbe
daa
dec
daa
or
mov
leave
lahf
call
fistl
mov
xor
mov
xor
jnp
mov
pop
inc
add
outsl
fists
adc
dec
jo
push
repnz
push
addr16
mov
mov
jnp
movsl
mov
jnp
cld
insb
stos
mov
xchg
push
in
push
inc
leave
adc
jmp
mov
cwtl
mov
xchg
repnz
jmp
lret
movsb
data16
jge
xchg
fildll
mov
add
daa
jno
movsl
push
pop
insl
ja
out
jl
fldl
fwait
pop
mov
sarl
lcall
clc
pop
mov
loopne
mov
mull
and
scas
nop
insl
cmp
add
sub
cmc
jge
fwait
dec
lock
idivl
and
adc
js
ljmp
ror
decl
cmc
idiv
xchg
outsl
sub
inc
cmc
jmp
insb
inc
mov
push
fdivrp
inc
cmp
mov
and
push
lock
mov
push
mov
cltd
cmpsl
lds
push
mov
mov
and
mov
jnp
inc
cmp
jbe
fucomp
subl
dec
sahf
xchg
mov
and
inc
stc
dec
xchg
test
mov
std
fs
js
jl
ljmp
mov
daa
push
cli
into
mov
jl
adc
test
lods
test
or
xor
in
jo
pop
enter
rcrb
ret
and
fcoml
dec
and
rorb
or
js
push
fnsave
add
addr16
les
aad
stos
jmp
mov
cld
push
lods
xchg
movsb
cmc
mov
push
adc
hlt
xchg
adc
push
cs
push
movsl
jge
movsb
in
fsubrs
jle
push
mov
pop
dec
decb
mov
loop
adc
mov
mov
loop
outsl
clc
mov
cmpsb
xchg
lahf
mov
rorl
repnz
repz
addb
cltd
sbb
repz
dec
add
mov
imul
mov
pop
mov
cmp
cli
mov
mov
in
mov
jne
mov
add
push
mov
xchg
mov
es
push
adc
dec
add
insb
stos
imul
in
inc
push
pop
pusha
dec
push
into
fdivs
out
insl
je
xchg
bnd
cmp
setno
or
xchg
dec
gs
pop
or
push
icebp
cmp
fwait
lods
or
pop
lods
and
shrl
ss
mov
and
pop
int3
add
inc
popl
data16
adc
adc
jno
xchg
jnp
adc
mov
xchg
ffreep
inc
rol
add
loope
test
push
cmpsl
mov
add
clc
pusha
and
fldenv
xchg
sbb
gs
mov
jl
in
push
lea
sbb
pushf
outsb
or
mov
push
scas
imul
or
jo
mov
mov
sti
gs
xor
movsb
xor
add
jno
aas
push
sub
dec
and
jae
cli
mov
in
cltd
xor
lock
test
sub
push
fimull
pop
not
mov
shll
or
or
and
ss
loope
cwtl
sarl
cmp
sbb
cmpsb
mov
push
jge
jno
ljmp
adc
adc
test
or
jp
mov
ds
scas
add
mov
sub
test
lock
fnstsw
cld
int
dec
xor
sti
xchg
inc
sbb
cmc
mov
vpacksswb
and
mov
repnz
push
clc
test
ret
sub
in
fistpl
jnp
sti
mov
or
inc
jmp
int
mov
push
push
les
test
incb
or
dec
in
fnstenv
inc
inc
hlt
into
data16
test
out
clc
cli
repnz
push
cmp
and
cmp
push
out
jo
adc
pop
push
mov
mov
mov
mov
test
cli
mov
gs
push
jmp
sti
push
divb
jae
jne
in
scas
stos
cmp
es
jae
jne
cmp
fsubs
jnp
cli
push
jae
adc
push
mov
xchg
pop
xchg
sahf
ja
inc
repz
mov
and
cmp
fsubl
mov
fistpll
cltd
add
nop
imul
jmp
testb
nop
jmp
jle
scas
and
mov
sbb
dec
push
rorb
adc
js
cmp
mov
add
leave
repnz
mov
jge
scas
ds
pop
adc
inc
ror
or
jbe
es
or
aas
push
sahf
test
mov
xor
push
inc
inc
cli
loope
stc
jecxz
stc
jle
data16
and
mov
dec
push
std
mov
inc
xor
andb
je
leave
xor
in
xchg
imul
call
xchg
shll
testl
xor
and
sub
pop
test
xchg
sub
xchg
xor
sbb
cli
inc
cmpb
imul
pop
mov
movl
icebp
into
cmc
mov
lock
std
fildll
jg
das
xor
std
push
cli
add
inc
xchg
mov
pusha
push
push
idivl
stos
cmc
jb
jg
jnp
iret
addb
repz
sbb
add
ss
adc
adc
adc
call
pop
push
inc
cmp
fdivr
inc
jns
stc
sti
shr
andb
jo
mov
cs
jnp
sub
jne
test
sub
or
mov
dec
mov
les
dec
into
into
out
adc
imul
scas
shl
adc
inc
jbe
mov
cmp
cli
repz
and
ror
xacquire
popa
test
or
mov
and
je
std
mov
mov
popf
insl
fdivrl
outsl
adc
test
sarl
shll
pop
and
push
xorb
mov
inc
jg
mov
pusha
sbb
lea
adc
pushf
mov
fs
inc
leave
and
out
xlat
and
push
shl
mov
fsub
xchg
int3
pusha
adc
sub
mov
lahf
negb
shlb
arpl
scas
loopne
mov
pusha
mov
inc
shl
and
enter
call
push
aam
and
bnd
pop
fldl
xor
push
in
sub
lods
dec
lods
dec
ds
sub
xor
jge
jno
mov
mov
add
adc
pop
scas
in
stos
push
cmp
nop
clc
push
movsl
and
hlt
cmpb
cmp
push
push
pop
mov
out
movsb
mov
mov
rcrl
cwtl
pusha
jmp
mov
xchg
fdivp
mov
mov
add
imul
mov
pushf
or
lods
xor
xorb
xor
pop
sub
fidivs
ret
leave
into
sbb
jmp
inc
test
pop
mov
jecxz
enter
mov
test
arpl
or
adc
xor
jmp
lahf
adc
xchg
rorb
movl
add
cmp
jnp
push
adc
inc
das
mov
scas
repnz
jmp
outsl
imul
pusha
repz
mov
divb
inc
cli
sbb
lea
out
xor
mov
sub
cs
add
mov
adc
fcmovnb
movb
mov
mov
out
cmc
mov
test
push
and
mov
sbb
jmp
mov
push
test
mov
fmull
sbb
jno
fadds
shrl
test
mov
stos
dec
mov
mov
sbb
sti
lahf
sahf
inc
int
mov
mov
sub
mov
dec
cltd
aad
sti
loopne
push
lahf
push
iret
and
out
cmpsl
nop
inc
scas
fsub
sbb
add
adc
int3
sub
add
jb
mov
jno
xor
leave
sti
mov
scas
lock
add
add
xchg
rorl
sti
rcll
mov
sub
sub
and
or
int
xchg
sbb
scas
cs
js
pop
sub
add
and
mov
sti
aad
pusha
xchg
cmp
mov
xchg
test
call
or
movsb
push
push
shl
xor
sahf
repz
dec
inc
hlt
shll
add
shrb
repz
imul
adc
pop
jle,pt
mov
pop
inc
jae
or
outsl
jbe
sysenter
flds
imul
mov
and
daa
sub
enter
sub
notb
cld
lock
popa
dec
mov
push
sub
mov
lahf
and
push
jb
lock
push
jae
ljmp
xchg
adc
or
aas
xor
mov
sahf
fsubrs
dec
xchg
sbb
mov
pop
movsb
test
mov
xor
mov
bound
mov
sub
cli
pop
or
gs
push
jae
xchg
outsb
add
call
repnz
insb
adc
mov
je
mov
mov
sbb
call
cmpsl
pusha
fnstenv
xor
cmp
cwtl
dec
icebp
test
xchg
call
mov
xchg
mov
orl
sti
adc
adc
mov
test
adc
pop
sub
xchg
addb
push
jle
mov
je
and
cmpl
jle
int
ret
cmpsl
cld
jb
addb
mov
icebp
xchg
lds
movsb
cld
or
int
fldcw
imul
frstor
out
fmul
pop
adcb
jbe
bound
rorl
mov
popf
mov
mov
lods
ror
shlb
insl
or
push
fcmovu
sarb
jle
mov
sarb
add
lds
mov
push
int3
ds
sahf
pop
shr
cmpb
stc
pop
inc
mov
dec
inc
xor
cmp
pop
je
fwait
loop
add
out
inc
cwtl
mov
inc
mov
jmp
stos
rol
lods
add
aad
loopne
fwait
sbb
cs
mov
iret
xor
mov
test
sub
shr
xorl
int
mov
mov
loopne
scas
ror
jmp
inc
rcrb
adc
out
in
and
orb
mov
testl
mov
bound
pop
js
push
sbb
cmp
pushf
cmpsb
out
enter
test
repnz
imul
pusha
push
push
cmp
aas
testb
jmp
ret
imul
xor
add
or
xchg
repnz
xor
xchg
jae
push
popa
inc
sti
shl
push
mov
jo
scas
fisubs
or
scas
inc
and
push
jb
jle
jmp
out
push
pop
movl
lock
adc
mov
movsb
stos
xor
adc
adc
adc
rcll
xchg
cltd
adc
popf
xlat
in
cld
xchg
ret
loope
mov
adcl
test
rolb
xor
mov
push
mov
mov
shll
hlt
cmpl
out
dec
and
lods
sbb
pop
push
pop
sub
xchg
jmp
cmpsl
int
and
or
xor
incb
hlt
les
cmp
xor
mov
and
loop
test
jp
mov
sub
inc
lock
xchg
mov
mov
iret
bound
sar
mov
das
loopne,pt
rcll
icebp
add
sub
loop
push
test
mov
mov
add
mov
loop
push
push
out
mov
xchg
sub
mov
lret
aad
lret
test
dec
shl
in
mov
pushf
dec
sbb
cmpsb
repnz
xor
rcl
imul
pusha
xor
xor
jmp
jae
ds
imul
popf
or
daa
test
add
out
imul
mov
push
fildl
cld
sub
lods
push
in
data16
mov
jnp
leave
int3
daa
rclb
inc
sub
mov
pop
adc
pop
add
pop
jmp
loopne
pop
js
mov
stos
push
insl
mov
sub
adc
lahf
jae
aad
pop
clc
xchg
jecxz
mov
jmp
rclb
sar
pusha
fisttpll
and
dec
ds
xor
and
daa
dec
sarl
rorb
adc
aaa
or
and
add
inc
scas
sahf
mov
into
lahf
push
pusha
sbb
stos
roll
or
das
mov
scas
mov
mov
adc
or
sub
hlt
lahf
jnp
xchg
push
mov
rcrb
lahf
outsb
xchg
fildl
lret
stos
push
lds
mov
mov
addr16
or
adc
mov
and
push
sti
inc
incl
int
sub
adc
cmp
pop
dec
in
iret
jp
inc
add
push
out
inc
jnp
pop
pop
dec
jne
mov
aaa
insb
ret
pushf
scas
and
aaa
xor
loopne
and
cli
into
int
or
jmp
call
mov
mov
sub
inc
aad
pop
mov
outsl
push
sar
mov
mov
jns
enter
repz
and
cli
lods
cld
int
lods
test
mov
divb
jmp
out
scas
insl
mov
mov
out
push
mov
neg
lret
bound
xchg
dec
mov
xchg
pop
sub
stos
mov
pop
push
leave
xchg
loopne
mov
mov
shl
aas
cmc
mov
aaa
adc
jecxz
lret
call
jmp
push
sub
rcr
lret
mov
cmp
mov
hlt
inc
sbb
adc
ss
lcall
in
int
adc
dec
dec
movsl
cmc
inc
testl
cld
mov
fucomp
mov
push
hlt
outsl
std
mov
das
sbb
mov
ds
or
push
adc
ret
and
scas
sti
mov
ja
aas
loope
push
cwtl
mov
jnp
xor
es
mov
push
dec
add
cli
ja
sub
lods
jns
std
orl
leave
jp
das
or
mov
sarl
das
add
xorl
sub
int3
jbe
sub
sbb
jb
sbb
jnp
das
jae
jo
mov
bound
cli
and
mov
cltd
mov
push
aas
mov
ret
enter
xor
cmpsb
test
movsb
xchg
clc
and
scas
sub
loop
mov
mov
cmpl
scas
mov
inc
movsb
cmp
mov
and
shl
cmp
push
jecxz
pushf
ja
or
pop
test
push
mov
jns
pop
ds
push
lods
stc
shll
or
addr16
adc
jb
adc
add
fs
jbe
sbb
lret
or
enter
rorl
cmp
jl
adc
out
mov
cmp
push
lcall
xor
aas
fiadds
push
jge
loope
stc
mov
jno
cmp
jge
mov
add
popa
xchg
test
cld
adc
sbb
imul
ds
into
mov
jp
scas
hlt
mov
xor
mov
stos
adc
lahf
pop
test
cmc
imul
or
xchg
sbb
adc
je
or
xor
ds
dec
adc
fs
mov
fisttpl
mov
xchg
sub
nop
data16
call
mov
stos
out
dec
rcr
add
xchg
mov
xor
push
mov
cli
sbb
or
sbb
cmpb
stos
negl
shl
jp
mov
mov
loopne
push
js
push
test
ret
sbb
sar
test
push
jmp
xor
mov
ficompl
and
int
push
movsb
int3
inc
outsl
jae
sbb
shll
xor
jmp
scas
mov
jge
and
out
inc
shlb
stos
neg
imul
push
xchg
into
and
insl
jecxz
ds
pop
cs
loopne
and
out
aas
popa
outsb
cmc
mov
and
push
and
xor
stc
out
adc
enter
jno
scas
push
mov
adc
loope
push
jae
push
ret
int
sub
call
add
daa
dec
je
cwtl
mov
arpl
repnz
jecxz
jae
sub
push
pusha
mov
fstps
fidivrs
loope
xor
and
sub
leave
icebp
fsts
jmp
xchg
or
stos
ret
sub
imul
lock
repz
sub
push
sahf
pop
repz
mov
mov
adc
in
fmulp
jno
imul
ss
push
in
mov
and
mov
xchg
pop
nop
sbbl
lock
dec
xchg
and
jnp
loopne
inc
push
cs
and
dec
adc
mov
adc
pop
dec
hlt
jae
cmovle
mov
mov
mov
sti
loop
fldln2
inc
testb
ds
in
shlb
shll
loope
outsb
jae
pop
subb
test
shr
jo
icebp
rcrl
pop
insb
sahf
fiaddl
adc
fnsave
jmp
ds
mov
mov
mov
jmp
mov
adc
cli
mov
mov
xchg
les
andl
int3
pushf
inc
adc
mov
sub
out
jo
jno
adc
mov
inc
loope
rorl
lock
mov
mov
inc
adc
adcb
pop
push
repz
mov
sbb
into
adc
outsl
xor
sarb
xor
inc
add
dec
insl
inc
xor
or
fistpll
jb,pt
mov
xor
repnz
sarb
cmp
imul
pop
mov
pop
sub
cmpb
jbe
sub
adcb
fbstp
repz
push
push
scas
in
xchg
dec
jmp
mov
movsb
in
jnp
out
jg
jnp
jge
in
add
push
sbb
aam
nop
mov
mov
and
xor
pop
xor
adc
fwait
sahf
lods
jge
scas
jmp
sbb
les
fs
mov
or
cmp
cmc
xchg
push
sub
mov
inc
stos
adc
jae
stos
jno
xchg
shll
xchg
pop
xchg
cli
dec
mov
fcomi
push
mov
push
rorb
in
mov
fistpll
adc
mov
lock
push
jb
inc
adc
mov
call
mov
mov
ret
dec
mov
pop
addr16
imul
mov
pop
ds
out
lea
mov
mov
stc
dec
add
movsl
shlb
mov
femms
xor
push
push
mov
pop
xor
push
divb
push
add
sub
and
les
stos
inc
mov
lret
mov
sub
push
subl
xor
pop
jae
cli
adc
cld
mov
xchg
out
xchg
pop
sbb
xchg
jo
jb
subb
push
mov
and
loop
adc
call
lods
cmp
mov
stc
filds
mov
sub
inc
gs
cmc
or
jns
aad
les
cs
adc
mov
andl
jne
fnstsw
pop
lea
cli
push
inc
inc
icebp
jge,pn
adc
inc
mov
xor
dec
movsb
out
cld
push
jmp
jbe
scas
ds
mov
xchg
jp
inc
dec
insl
inc
shlb
stos
std
mov
mov
xchg
adc
xchg
push
in
imul
into
pop
pop
sub
xchg
insl
mov
jmp
js
jae
imul
jmp
jg
mov
mov
mov
sub
push
dec
jnp
stos
jae
out
in
add
mov
aaa
icebp
mov
lcall
leave
pop
cmp
xor
adc
xchg
mov
scas
mov
pop
mov
jno
dec
or
lcall
mov
mov
out
pop
icebp
sbb
rcrl
testb
arpl
int3
adc
aam
xchg
pop
repnz
loop
shr
in
mov
movsl
inc
sub
movsb
add
mov
mov
roll
cli
mov
stc
test
out
dec
push
mov
pop
mov
out
stos
mov
cli
mov
sahf
ss
jns
mov
stos
adc
fisubrl
jp
imul
imul
imul
int
inc
inc
lods
or
pop
stos
in
push
shrl
sbb
bound
mov
sahf
cmp
adc
adc
pop
ljmp
fistpl
and
jle
ficomps
mov
int
dec
ljmp
xchg
pop
mov
cli
scas
addr16
repz
inc
xor
xchg
or
cmp
movsl
mov
sub
cld
mov
cmp
ficompl
push
cmp
arpl
pop
std
outsl
dec
dec
xchg
dec
out
xchg
ret
jl
jnp
pop
and
jp
mov
inc
mov
ljmp
addr16
ret
mov
dec
hlt
rcrb
icebp
xchg
push
dec
mov
lret
mov
or
jae
sbb
cld
xor
test
sub
sbb
mov
fcmovu
xor
loopne
hlt
inc
sub
rolb
sahf
loopne,pn
shlb
out
loopne
adc
jnp
pop
push
ret
lahf
push
jmp
mov
ficoms
and
sub
jb
out
outsl
mov
mov
xchg
idivb
push
xchg
xchg
adc
mov
lcall
jg
into
or
lcall
es
stc
xchg
lcall
cs
mov
jb
adc
mov
cs
xor
and
je
aas
vpmacssww
mov
xor
sub
negb
sbb
outsb
cmc
aas
add
daa
xchg
ss
mov
ret
es
pop
mov
pop
cmp
mov
and
cmpsb
testl
cmp
mov
out
cmp
cmpw
test
push
bound
add
outsb
repz
jmp
and
add
push
xor
mov
pop
sub
cmpsl
and
cli
add
movsb
sti
adc
push
inc
ds
scas
and
mov
lcall
jp
and
imul
ljmp
movsb
pushf
inc
or
loopne
out
dec
xchg
mov
jp
cmp
inc
shll
decb
pop
hlt
pop
jl
lods
sub
shrl
mov
cs
or
dec
push
jo
jg
jg
dec
stos
jg
adc
stos
dec
in
test
inc
jge
adc
mov
adc
repz
sub
pusha
jne
out
push
ds
nop
aad
std
xor
lock
mov
hlt
cli
pop
lock
xor
jecxz
push
pop
mov
xor
jne
loopne
mov
dec
lods
int
cli
movsb
loop
add
jno
or
inc
pop
jo
loopne
inc
jecxz
dec
jmp
inc
push
addr16
sbb
shrl
scas
mov
xchg
cmp
cmp
out
pop
divb
mov
call
mov
aam
pop
ljmp
icebp
jmp
mov
outsl
aaa
xacquire
mov
jnp
insb
ja
cli
adc
jg
push
lods
mov
ja
jl
pop
cli
mov
sbb
sti
pop
mov
movsb
mov
popa
lcall
bswap
or
adc
pop
lea
out
sahf
aas
mov
cld
loopne
movsb
fdivrl
fimull
and
and
adc
mov
lock
movsb
add
jecxz
jg
lcall
sub
mov
add
xor
sbb
and
inc
add
xor
add
pop
jg
and
iret
push
mov
adc
std
fcmovu
add
sub
mov
scas
jno
mov
insl
jae
add
gs
cmp
jmp
push
fidivl
sti
add
mov
adc
imul
cmpb
lret
pop
dec
mov
fistpl
push
cs
rorb
cld
pop
jo
push
inc
movsb
pop
ja
test
sahf
imul
hlt
nop
mov
fimull
xor
dec
mov
scas
inc
out
lods
mov
xchg
lods
ficoms
jnp
lods
mov
sahf
mov
dec
mov
xlat
inc
cmpsb
cmp
or
incb
mov
loope
cmc
loope
fsub
fistps
leave
push
and
mov
mov
arpl
decb
sbbl
push
cli
jae
lret
sbb
mov
icebp
int
pop
pop
mov
jg
mov
pusha
es
incb
mov
jl
or
sbb
cld
lock
or
nop
mov
jae
in
cmp
arpl
cmp
insb
cmp
add
mov
push
nop
add
mulb
ret
mov
aad
outsl
push
mov
xor
gs
and
aaa
out
lahf
mov
mov
loopne
mov
movsl
and
fwait
cli
movsb
shll
or
mov
inc
mov
clc
dec
ss
inc
jp
leave
jge
sbb
mov
mov
push
xor
lret
add
sahf
jnp
jge
cli
push
stos
shr
cmp
mov
dec
and
pop
push
and
jl
fcoml
in
jns
jmp
lahf
icebp
jno
push
cld
push
mov
dec
stos
icebp
decb
sub
icebp
ja
jge
and
adcb
ds
jb
arpl
push
mov
into
mov
cmp
adc
repnz
adc
pusha
cs
sbb
fldl
dec
lcall
in
cmovs
frstor
or
mov
out
pusha
adc
into
flds
shll
sbb
mov
scas
adc
mov
sarb
and
fdivl
out
add
jmp
mov
inc
or
xor
fists
jnp
pavgb
xor
jae
testl
xchg
int
inc
pop
push
lds
xchg
adc
repz
lods
std
sub
mov
sbb
les
fcompl
cmc
push
add
cld
mov
adc
mov
adc
mull
hlt
jb
jp
aad
lcall
mov
jg
cwtl
dec
negl
sub
stc
test
dec
les
jnp
jl
je
pop
push
mov
rcr
out
mov
or
sarb
jle
pop
push
test
sbb
sti
jo
pop
push
xlat
mov
jecxz
dec
sti
dec
xchg
std
dec
call
mov
stos
pusha
sbb
add
cmpsb
mov
lods
aad
lods
hlt
jnp
push
sbb
andb
push
sbb
mov
inc
mov
jne
cs
je
sbb
lods
push
xchg
xchg
push
inc
pop
sbb
int
and
rclb
sahf
xor
pusha
adc
push
and
dec
enter
sub
push
xchg
out
shlb
push
cmpps
lock
ret
es
out
vmovdqu
and
jae
mov
sub
mov
cs
leave
dec
mov
jne
xor
add
sbb
pop
push
and
notl
int3
push
out
mov
pop
xchg
mov
test
shll
or
sbb
sbb
xlat
scas
mov
push
adc
mov
inc
mov
pushl
andl
mov
dec
pusha
test
out
mov
out
imul
jnp
push
je
push
cmp
lahf
hlt
adc
adc
inc
mov
add
dec
sub
xchg
ret
sbb
lods
aad
mov
push
xor
std
mov
flds
imul
adc
ret
inc
loope
jnp
mov
arpl
nop
popa
pop
ret
lahf
adc
loop
aam
test
outsb
aas
push
testb
cmpsl
adc
and
sbb
and
cmpb
iret
sbb
push
xor
mov
nop
je
pop
lret
sub
fdivl
ficomps
mov
mov
push
sahf
js,pn
pop
mov
out
pop
sbb
or
inc
cs
cli
mov
mov
imul
stc
faddl
pop
mov
adc
subb
shrb
adc
in
nop
adc
mov
pop
jge
fnstenv
push
ljmp
pop
push
fisubs
mov
jb,pn
dec
movsb
xlat
loop
mov
adc
dec
ljmp
pop
ljmp
cwtl
mov
mov
and
icebp
add
fdivrp
and
sahf
fcoms
testb
adc
sbb
xor
mov
out
xchg
pop
shlb
out
pusha
push
loope
pop
mov
jecxz
rorb
pusha
add
adc
sti
dec
xcrypt-cfb
cmpsl
loope
incl
fiaddl
adc
push
inc
xlat
cmp
ss
lock
jmp
jecxz
out
addb
cwtl
rclb
sbb
jle
gs
cmpsb
inc
xchg
in
or
mov
xlat
xchg
loopne
movsl
ret
inc
push
fsubrs
lret
inc
mov
lods
xor
dec
sub
and
mov
xchg
jnp
je
cmc
mov
jg
addr16
lock
or
xchg
dec
idiv
mov
xchg
test
cmpsb
stos
mov
adc
daa
mov
imul
add
mull
jnp
xchg
lcall
pop
jp
addr16
or
mov
and
int
insb
fstl
jg
adcb
movsl
and
pop
mov
jns
movsl
outsb
enter
in
xchg
mov
out
inc
mov
dec
inc
cmp
loop
mov
divb
jl
movsb
loope
cmpsb
and
outsl
push
mov
add
dec
js
rolb
rol
je
callw
inc
pop
xor
sbb
xor
push
mov
cmp
xor
mov
das
sub
dec
mov
cmp
mov
cmp
shlb
or
adc
in
fs
dec
cltd
xchg
sahf
dec
arpl
adc
faddl
push
mov
push
dec
push
sbb
mov
rcrb
test
out
inc
loopne
sbb
xchg
nop
loopne
stos
mov
mov
sbb
jne
repz
add
sahf
je
cli
push
loop
outsb
jne
mov
xor
fistpll
mov
sub
lret
fisubl
pop
fbld
xchg
jmp
lahf
call
mov
jl
lcall
add
mov
mov
lods
scas
and
fcmovnu
cmp
inc
sub
dec
mov
jne
dec
cwtl
out
je
mov
insb
idivl
xchg
lods
fs
cmpsl
sub
xchg
xor
sbb
lahf
xlat
arpl
sbb
into
call
sbb
icebp
into
idivl
cmp
inc
mov
movsl
subl
push
pushf
ror
incl
testb
loope
repz
ret
mov
cld
pop
adc
arpl
nop
jecxz
dec
stos
jnp
xchg
shlb
out
outsb
dec
adc
lahf
mov
leave
xor
mov
adc
fwait
sbb
out
jl
scas
mov
push
push
push
adc
sbb
and
movsl
popa
add
push
outsl
cvtpi2ps
flds
mov
push
jge
adc
out
push
cld
adcl
mov
fsubl
xor
int3
lds
mov
outsl
pop
dec
add
movsl
inc
in
xchg
cld
cmp
push
test
loope
std
clc
lock
push
lock
cmc
inc
dec
rclb
dec
sbb
idiv
into
mov
hlt
icebp
cs
das
fnstenv
mov
data16
add
sub
hlt
mov
les
pop
mov
andl
icebp
insb
andb
push
orb
inc
ds
or
fsubrl
xchg
push
push
jg
or
pop
mov
and
popa
dec
cld
push
cld
cltd
jae
push
cmpsb
out
sub
sbb
xchg
cmp
jae
mov
xchg
push
xchg
sbb
adc
sub
fldt
adc
ret
xor
aas
inc
push
adc
fisttpl
mov
xchg
sahf
mov
orb
out
cwtl
pop
pop
lcall
sub
int
popa
aam
stos
push
adc
fsubs
fwait
mov
lahf
dec
out
pop
jno
jl
jge
ds
mov
push
and
cmpsl
jmp
and
mov
or
sbb
adc
add
mov
or
mov
stc
inc
sub
xchg
inc
es
ss
movsb
rcrl
negl
sub
mov
leave
sub
jmp
mov
stos
and
jp
cmp
xor
cs
xchg
add
lcall
leave
lea
repz
out
divb
mov
pop
and
mov
je
xor
movsl
inc
push
ja
aam
adc
add
aas
inc
xorl
xchg
add
adc
adc
into
repnz
mov
cmp
pop
adc
and
out
sub
push
cmc
push
sbb
adcb
outsb
sar
sti
push
shrl
jge
loope
adc
xchg
cmp
lock
sbb
sub
int
inc
roll
dec
pop
push
xchg
in
mov
mov
std
and
push
add
cmp
ss
hlt
mov
sub
clc
mov
sub
mov
or
fidivl
push
js
mov
sti
adc
jmp
es
jp
aad
fs
sbb
cmp
cld
pop
int
inc
loop
sub
popf
inc
push
push
cmp
cmp
test
add
xchg
ss
pop
js
cltd
mov
fwait
pushl
test
xor
aam
cwtl
out
aad
xchg
adc
insl
stos
push
aas
adc
int
xorb
ja
mov
mov
xchg
cmp
push
jne
rcl
out
testb
pop
fsubr
lods
insb
xor
or
fisubrl
fidivrl
pop
pop
stc
movsl
imul
out
scas
fsubrl
jbe
mov
add
pop
xchg
loopne
pop
mov
pop
inc
mov
or
mov
test
enter
insb
adc
fstl
iret
or
test
mov
jl
cmp
test
fldcw
cmp
sbb
sub
stos
movsb
sub
cli
insl
repz
push
add
hlt
arpl
je
je
inc
cmp
mov
push
fucom
pop
jns
adc
jae
and
int3
xchg
ret
and
gs
mov
jge
jno
ss
inc
lock
sub
loopne
lods
mov
push
mov
int
push
mov
inc
push
jmp
xorb
inc
lcall
jnp
xor
neg
popa
test
jb
int
xchg
nop
cmp
sahf
mov
mov
repnz
push
icebp
lahf
pop
ljmp
addr16
mov
xchg
cmp
push
aas
mov
scas
popf
sti
mov
push
jp
adc
pop
ret
call
push
imul
movsl
xchg
ja
test
inc
xchg
jbe
gs
pop
stos
stc
mov
mov
inc
lahf
lods
or
adc
sub
call
sub
mov
gs
shll
pop
div
jb
stos
repz
jb
mov
insl
or
push
push
fwait
cld
mov
mov
into
sub
mov
push
cwtl
and
push
ret
mov
mov
cmpsb
sti
mov
mov
jmp
testl
aad
icebp
jae
test
int
mov
insb
mov
mov
sbb
ds
or
loopne
pop
pop
test
test
add
xor
hlt
movsb
mov
sbb
adc
pusha
push
std
roll
xchg
add
mul
xchg
lea
loop
sbb
sbb
adc
sbb
sbb
icebp
jg
and
loopne
stos
adc
xchg
or
lock
fsubl
movsb
cmp
cmp
xor
int
mov
outsb
jl
push
mov
inc
pushf
ret
dec
pop
fimuls
sbb
push
fstps
adc
mov
dec
xor
negl
fisubrs
sbb
pop
out
aas
sbb
orl
add
hlt
push
push
sbb
loopne
cmp
sub
popa
mov
adcb
out
mov
shlb
mov
push
and
xchg
jecxz
jg
push
mov
cmpsb
hlt
fcmovnb
add
lods
sti
lea
cmp
sbb
outsb
fsubr
ja
es
bnd
ret
and
dec
mov
iret
and
pop
dec
inc
subb
imul
sahf
inc
xchg
sbb
adc
sub
xchg
jbe
shrb
push
dec
shl
add
fnstcw
lahf
sti
fisubs
sbb
int3
stc
pop
leave
in
ror
jmp
scas
scas
cmc
stos
ffree
mov
xchg
test
and
ja,pt
push
adc
sbb
cmc
lret
push
icebp
shlb
das
cwtl
and
test
pop
cld
out
jae
insl
bound
das
xchg
mov
pusha
inc
popf
rcl
loope
sub
lock
outsb
subl
add
or
cmp
sbb
movsl
call
mov
dec
loop
in
fimuls
adc
mov
ret
icebp
ret
sub
fisttpll
test
xchg
adc
mov
sub
lods
cmp
stc
adc
cltd
xchg
mov
jae
pop
std
ljmp
aad
jb
pushf
pcmpgtw
jg
out
inc
hlt
sbb
scas
idivb
jp
rcrb
je
int
jmp
scas
and
sti
popf
mov
iret
push
das
int
stos
push
std
cwtl
dec
in
push
push
aad
nop
push
in
pop
sub
aad
andl
out
test
jb
mov
loop
fimuls
inc
mov
ficoms
xchg
mov
or
mov
mov
mov
pop
jnp
mov
subb
mov
imul
pop
inc
shlb
jge
iret
pop
inc
xlat
mov
push
xor
jb
adcb
and
arpl
mov
mov
repz
or
or
xchg
incl
jp
mov
and
sbb
shll
xchg
or
xor
ja
jle
imul
icebp
mov
das
jno
enter
mov
or
cmpsb
nop
repz
stc
jge
sub
fnstsw
jle
aas
lock
lock
jmp
sub
push
lret
cld
adcb
pushl
and
fldl
fdivrl
inc
ss
gs
pushf
and
mov
fcompl
mov
jae
je
jb
cmp
add
push
dec
fsubrs
repnz
xchg
dec
sti
add
in
mov
or
xchg
cltd
test
pop
jge
dec
popa
xor
popf
sbb
dec
cmp
es
push
pop
test
cltd
mov
inc
std
movsb
out
push
mov
aaa
mov
loopne
orb
jg
pop
lock
and
int
nop
sbb
bnd
in
popa
and
loope
inc
idivb
dec
cmp
pop
cld
std
xor
pop
sahf
sbb
out
and
add
adc
cmp
push
adc
jge
dec
mov
push
mov
dec
in
js
mov
mov
mov
mov
jae
ljmp
stos
shrl
stos
pop
shrl
insl
ja
int3
and
jb
ljmp
push
mov
icebp
movsl
sbb
sarb
mov
pop
dec
sub
cli
sub
mov
cs
popa
lcall
std
lock
pop
push
imul
xchg
lret
xor
push
ja
imul
xchg
in
and
mov
lahf
and
push
xchg
fdivr
hlt
mov
rolb
je
mov
shll
xchg
or
sub
bound
adc
mov
xchg
sub
ret
in
xor
inc
btc
mov
lock
scas
insl
in
shr
push
lock
cmp
cmp
movsb
mov
movsl
pop
shll
pop
lret
ds
jno
and
mov
xor
sub
std
orb
dec
cmp
mov
mov
and
mov
or
inc
icebp
addb
cs
sbb
mov
popl
leave
inc
xchg
adc
adc
mov
mov
js
lods
adcl
mov
mov
mov
xchg
cmpsl
and
mov
fsubrl
fistps
pop
adc
lock
pop
es
pushf
cmp
sbb
lret
cmp
mov
pushf
adc
in
push
lcall
imul
and
mov
cli
cld
mov
ds
jo
hlt
jg
call
add
or
mov
iret
jmp
mov
xchg
jmp
sbb
mov
ss
mov
mov
mov
je
mov
inc
or
cli
adc
lcall
cmpsl
or
dec
sub
scas
pop
andl
xor
push
jmp
fisubl
mov
rorl
inc
sub
or
repnz
cs
xor
adc
out
lahf
fdivrs
mov
and
imull
cmp
mov
fs
out
jno
in
sub
icebp
cmp
jae
pop
popf
pop
test
movsb
jge
arpl
inc
cli
imul
push
xor
xchg
ja
adc
ljmp
subb
mov
scas
mov
cmp
or
pop
push
push
sub
rorl
xor
mov
and
push
fnstenv
das
push
call
and
mov
stos
sbb
scas
scas
cmp
jmp
ds
loope
inc
out
cmp
jnp
push
cltd
or
adc
mov
lods
scas
filds
xor
cs
jnp
xor
cmpsb
and
loope
jae,pn
dec
adc
jb
or
icebp
jle
cli
push
cmp
in
ds
add
lds
adc
lods
and
jb
sbb
push
or
in
lods
stc
dec
and
and
mov
jmp
mov
mov
hlt
sahf
nopl
addl
mov
fs
add
jge
xrelease
jae
mov
jno
cld
ficomps
addr16
lods
mov
push
push
das
pop
int
mov
leave
inc
loop
test
adc
xor
push
dec
mov
sti
adcl
xchg
pop
cmp
sub
mov
mov
inc
adc
int
cwtl
cmp
das
sahf
aad
cli
pushf
jmp
mov
lock
xor
test
cmp
push
loop
int
xor
lret
lock
jmp
addl
pop
mov
test
ds
jecxz
clc
push
dec
cmp
test
faddp
push
sbb
std
inc
xchg
andb
js
lds
fwait
xor
jmp
mov
rcrl
sbb
fnsave
and
inc
repnz
fsubrp
cmpsb
inc
stc
mov
icebp
cmpsl
loop
jmp
loopne
xchg
sub
jns
lods
in
cmc
sahf
dec
cltd
mov
jae
jae
mov
xchg
test
sbb
scas
mov
mov
push
clc
and
inc
stos
fcmovbe
jmp
lock
xchg
out
shlb
outsb
push
stos
pop
lcall
xchg
add
push
imul
stc
inc
pop
mov
xor
cmp
int
mov
popf
scas
push
jle
mov
imul
pop
enter
repz
xor
sti
loope
inc
xchg
lock
ret
cltd
mov
cmp
mov
lret
in
cmpsb
xchg
xor
push
out
fbld
jg
je
xchg
loopne
cwtl
ss
push
aaa
dec
adc
mov
fcompl
jmp
and
jno
int
pop
mov
sub
and
add
xor
adc
jbe
jb
sahf
int3
mov
push
sahf
xor
fldenv
arpl
mov
stos
test
bsf
and
push
in
nop
mov
xor
insb
add
adc
lods
mov
rolb
ficomps
mov
fsubp
movsl
fs
push
stos
les
cmp
mov
sbb
xchg
mov
shrl
push
xor
je
sbb
cmp
loop
repz
pop
pop
insl
sub
dec
pushf
adc
cmp
add
fsubs
lea
cmpsl
mov
fsubrl
into
xchg
scas
ljmp
pop
je
cmp
sahf
cmp
dec
lret
movsb
scas
sarl
push
popl
adc
mov
jmp
dec
mov
sbb
push
sbb
add
aam
fisubs
inc
pop
js
fdivrs
lods
xor
lcall
js
cmp
mov
test
push
es
dec
fstpl
jnp
sti
lods
pop
cmp
mov
mov
sti
mov
jbe
xor
outsb
arpl
cmp
pop
popa
xchg
sarl
or
pop
push
inc
test
sub
xchg
adc
mov
ja
pop
or
mov
fildll
jg
dec
adc
mov
lods
mov
mov
sub
sti
das
call
mov
jmp
adc
sahf
inc
push
push
xchg
lret
scas
xchg
cmp
ljmp
mov
adc
xor
mov
jl
ljmp
mov
int
mov
jb
outsb
inc
dec
in
negb
mov
mov
cmpl
jb
cmp
dec
xor
imul
adc
scas
in
push
addb
mov
das
add
sub
std
mov
loopne
sbb
push
jbe,pt
aas
dec
mov
sbb
xor
cmpsb
nop
mov
push
repz
shrl
repnz
aaa
xor
mov
test
xor
rolb
mov
mov
inc
adc
lret
jp
mov
xchg
stos
and
jno
xchg
in
fnstsw
rolb
mov
shrb
adc
jmp
rolb
leave
dec
jns
add
ja
push
pop
sahf
fmul
xor
mov
stc
fmul
repnz
adc
div
jmp
sbb
addr16
cmp
push
adc
loop
xor
fwait
pushfw
call
clc
lcall
shll
scas
jb
daa
xor
and
popl
mov
xorl
fimuls
jmp
adc
ds
out
loopne
and
icebp
add
adc
stos
ret
xlat
out
mov
mov
pop
adc
int
lcall
into
push
pop
sbb
pop
int
jne
mov
sbb
inc
cmp
pop
push
and
das
jecxz
addr16
sti
mov
sub
or
dec
scas
mov
nop
out
push
adc
adc
jo
js
sub
mov
mov
les
push
inc
clc
mov
mov
sbb
mov
add
mov
das
adc
call
cmp
shrl
pop
add
je
hlt
sti
int3
push
loopne
arpl
les
mov
ss
xor
pop
leave
push
lock
aad
mov
inc
sbb
sub
jns
stc
inc
pusha
cmp
push
inc
xchg
and
and
fsubrl
outsl
mov
enter
lods
inc
dec
pop
cmc
repnz
push
jbe
rolb
scas
mov
je
and
cmpsb
mov
dec
shr
jae
loopne
cmp
add
ljmp
add
sub
pushf
add
xorl
fsts
pop
mov
test
mov
mov
aas
xor
enter
in
xchg
inc
add
adc
arpl
add
subb
xor
repnz
nop
xchg
adc
push
daa
test
jecxz
and
push
ljmp
clc
loop
cmp
adc
pop
mov
and
push
arpl
jbe
or
mov
dec
xchg
sub
mov
test
sti
scas
push
and
and
loop
jl
mov
out
daa
ds
jg
pusha
and
mov
ss
mov
aad
push
stos
mov
mov
in
xchg
jp
mov
or
xor
mov
and
jae
push
dec
sbb
repz
xor
mov
jne
jb
mov
les
jb
dec
add
cs
mov
adc
cmp
jno
xchg
repnz
mov
fs
lock
movsb
mov
mov
push
xor
xchg
xor
movsb
push
es
es
xchg
mov
aam
loop
movsb
push
jne
cmp
cmp
gs
inc
and
lret
jo
sbb
pop
jmp
lock
pop
inc
adc
adc
roll
pop
pop
and
arpl
mov
scas
sub
dec
mov
cwtl
loopne
mov
pop
jnp
cmp
mov
cmp
das
outsl
xchg
sbb
lea
ds
int3
jle
je
push
adc
roll
icebp
sahf
cmp
dec
push
stos
sub
cmp
inc
std
and
sbb
push
xor
aas
mov
fldcw
loope
stos
lods
scas
imul
lods
andb
sbb
ret
inc
add
jmp
sub
repnz
mov
sbb
addl
push
popa
sub
jns
or
emms
rcl
xchg
push
jo
sti
xchg
jmp
cmpsl
jns
mov
test
mov
shlb
xor
adc
rol
insb
xor
call
je
xchg
mov
or
ret
daa
add
mov
or
fsubr
cmp
xchg
cmp
mov
sub
ret
inc
sub
pushf
test
dec
mov
leave
add
mov
cs
mov
bound
pop
movb
inc
sbb
pushl
das
icebp
ds
out
xchg
inc
pusha
sbb
lods
cmpsb
imul
xchg
jne,pt
ds
aad
or
mov
aas
cmp
and
xor
stos
bound
add
cli
pop
nop
ret
push
push
cmp
pop
jnp
inc
xor
lret
jmp
inc
adcl
imul
push
outsl
mov
cmpsb
push
sub
mull
push
test
mov
shrb
mov
pop
outsb
mov
add
les
adc
sahf
jl
test
ljmp
mov
jp
jno
pop
adc
js
mov
and
jb
icebp
xor
xchg
mov
aad
ljmp
adc
mov
icebp
outsb
xchg
cmp
pop
cltd
mov
les
xchg
jo
ljmp
lods
pop
addb
pop
cmp
aas
ror
mov
cmp
and
xor
and
push
adc
outsl
aas
adcb
repz
cmp
frstor
xchg
adcb
aad
cmpsb
mov
cmp
pop
mov
and
cld
cltd
push
inc
adc
mov
pop
leave
repz
cwtl
icebp
mov
sbb
shll
insb
or
fcompl
cmpsb
shlb
and
push
testb
xor
test
insl
and
lcall
mov
sbb
jne
divb
pop
das
call
shl
repnz
std
xchg
inc
and
dec
add
push
pop
or
push
fsubrl
push
js
jno
cmp
shrb
in
mov
pushl
push
dec
inc
xor
pop
add
ret
test
je
jo
add
and
imul
pop
mov
xchg
push
imul
iret
movsl
out
aaa
cmpsl
pushf
xor
aas
frstor
loop
add
into
xor
dec
and
cmp
xor
cmp
cmc
loope
sub
mov
in
mov
daa
and
jne
adcb
sbb
sbb
fstps
aaa
and
mov
std
popf
jae
mov
loop
ljmp
es
or
add
mov
mov
pop
ds
out
movsb
roll
mov
stc
sub
cmp
jns
in
fwait
xchg
ja
lods
test
shlb
test
repnz
mov
int
sub
cli
pop
jle
jnp
aas
out
fildll
jb,pt
mov
xlat
aaa
std
cmp
xor
and
jmp
cmpsb
shll
ljmp
icebp
test
jnp
ja
lock
mov
jl
mov
mov
push
rolb
fistpl
adc
and
rcr
cmp
sti
rorl
push
cmp
xor
xchg
xchg
das
hlt
fidivs
push
push
inc
hlt
aam
jle,pt
add
insl
xchg
and
sub
lcall
pop
decl
xor
xor
sbb
and
add
int
cld
adc
cli
imul
cs
into
jle
stos
shll
pop
and
cmpsb
cs
cmp
push
jb
adc
in
jle
push
int
imul
pop
inc
cmpsb
lahf
adc
lds
mov
in
je
inc
jecxz
xchg
sarl
pusha
pop
mov
push
dec
ds
push
lods
mov
aas
jb
outsb
cmp
push
enter
inc
cld
jae
xor
mov
pop
and
add
sub
dec
int
add
cmpb
lods
insl
and
js
sbb
inc
in
faddl
mov
jae
dec
mov
inc
mov
inc
repnz
loop
mov
mov
pop
dec
insl
push
aam
les
xchg
loop
rcll
and
jbe
stos
inc
scas
lods
std
out
rcrb
and
mov
jns
mov
cmp
inc
mov
mov
ja
add
xchg
xor
jb
mov
aad
jo
insl
xor
inc
stos
xchg
cmp
add
inc
and
dec
mov
xchg
jno
push
and
lahf
fldenv
ds
and
sbb
push
leave
inc
sbb
out
mov
pop
sarl
stc
mov
jo
xlat
jb
mov
jno
inc
mov
mov
pop
orl
fwait
pusha
pop
sub
cld
popa
je
mov
js
hlt
and
adc
xor
ja
cmp
lea
shrl
push
pop
cmp
mov
sub
mov
data16
mov
pushf
sti
cmp
xchg
cli
je
xor
mov
xorb
cli
ret
inc
mov
sub
hlt
ds
jmp
mov
nop
idivl
and
mov
out
dec
cmpb
ds
rcrl
aad
cmp
and
daa
mov
test
or
inc
loopne
aas
cmp
and
pop
movsb
add
aaa
repz
leave
test
mov
imulb
sbb
icebp
mov
call
lahf
in
std
dec
inc
arpl
mov
sub
adc
xlat
pop
xor
jmp
jnp
sti
add
push
notb
cmpsl
mov
lcall
jbe
stos
jbe
out
pop
xor
lock
xchg
pop
loope
push
adc
outsb
xor
lcall
sarb
lods
in
icebp
mov
lods
cli
into
jo
outsb
jno
out
lock
data16
icebp
nop
scas
or
ret
and
mov
jp
add
scas
test
adc
mov
inc
lret
jns
mov
xor
in
aad
rcr
pop
popl
sbb
mov
leave
daa
mov
repnz
lret
xor
fdivl
repz
adc
je
mov
loopne
arpl
push
lock
bound
aad
jbe
out
adc
lods
lret
sub
inc
xor
repz
jl
adc
test
jne
dec
inc
jp
repz
mov
ljmp
pop
xor
sbb
push
add
xor
ds
shrb
mov
mov
loopne
add
xchg
lods
enter
rcpps
addr16
sub
pop
fcomp
cmp
fists
pextrw
mov
shlb
cld
pop
ja
add
inc
mov
and
stos
scas
imul
lea
push
aad
outsb
push
jno
popa
inc
je
xorb
sbb
fnstenv
stos
mov
dec
mov
pop
or
cwtl
pushf
shrb
out
arpl
out
xchg
dec
cmpsl
fisubs
daa
and
outsl
jmp
xchg
push
push
ret
imul
xorl
pop
cmpsl
sbb
jb
mov
xchg
mov
sub
stos
inc
mov
dec
pop
insl
adc
in
jmp
js
adc
aad
pop
pop
pop
mov
sbb
inc
cmpb
test
or
jb
cld
aam
gs
into
or
mov
stos
fidivs
push
xor
jbe
mov
jno
jo
lock
pop
xlat
scas
in
and
stos
mov
lret
add
repnz
cs
test
negb
cmp
jae
cs
jae
movsl
mov
scas
mov
and
and
xor
test
imul
push
shll
sbb
arpl
sbb
movsb
dec
mov
pop
je
aas
mov
adc
jp
rcll
jmp
push
xchg
stos
or
rolb
push
pushf
loop
mov
sbb
mov
cmc
or
int
movsb
cld
in
repnz
lock
adcb
in
addr16
call
int
ret
fists
stc
xorb
mov
xlat
cmp
adcb
add
adc
in
push
into
mov
mov
and
push
fistps
aas
jno
fcmove
xor
inc
cmp
mov
and
in
shrb
jb
icebp
inc
int3
icebp
push
scas
lock
mov
int3
fbstp
xor
and
lea
xchg
pusha
cmpsb
mov
mov
xorb
js
adc
sub
sub
lds
jp
jnp
dec
push
push
xchg
mov
in
imul
adc
rcr
sbb
outsb
inc
icebp
mov
inc
jp
test
lods
pop
push
aas
daa
xor
lcall
mov
cmp
leave
add
shl
mov
xchg
mov
inc
lcall
sbb
sti
pop
cld
mov
add
popf
xchg
popf
stc
inc
push
stc
push
shll
mov
nop
mov
sbb
mov
hlt
pop
addr16
push
xchg
incl
outsl
jecxz
dec
adc
shll
ss
jnp
test
and
incb
insl
mov
rolb
adc
sub
mov
arpl
cmp
fcomi
fisubl
mov
cmc
adc
or
sub
dec
gs
lods
pop
fisubrs
fisubrl
pop
pop
mov
lods
add
pop
icebp
adc
dec
mov
loopne
popf
aam
rcl
sbb
mov
ds
dec
sti
les
fidivl
lock
pushf
verr
daa
lret
stos
outsl
push
sub
mov
sub
out
sbb
add
movsb
jae
inc
xor
mov
cmp
inc
xor
dec
mov
int
daa
push
imul
repz
movsb
lods
pop
lahf
adc
sti
daa
scas
xor
out
mov
xchg
mov
and
ss
aam
push
and
movsb
jb
stc
ljmp
pop
cmp
and
insb
pop
das
les
clc
xor
in
fstl
lahf
mov
ret
sbb
cmp
mov
jmp
xor
int3
sti
addb
call
je
mov
jo
mov
mov
stos
lret
inc
aad
mov
lret
jb
mov
dec
add
iret
adc
mov
pop
add
mov
sbb
stos
ds
ljmp
mov
mov
jo
shll
in
into
push
jp
xchg
mov
push
and
sbb
stos
mov
mov
shrb
mov
adc
xchg
fwait
adc
dec
push
mov
push
pushf
mov
inc
aad
fsts
sbb
test
push
jns
das
mov
or
daa
sbb
loope
push
push
leave
shrl
jmp
ljmp
dec
repnz
sub
in
pop
clc
jae
fldenv
and
xchg
ret
mov
pop
fistpl
insl
cmp
loopne
xchg
in
cs
data16
decb
sti
cmp
out
enter
pop
sbb
mov
arpl
sahf
inc
in
push
leave
jmp
scas
sbb
loopne
and
rorb
addr16
sbbl
mov
xorb
test
je
lds
jo
mov
dec
loopne
lahf
xchg
and
loopne
fnstenv
and
int
ljmp
xor
out
mov
ret
jp
repz
xor
xor
clc
add
mov
outsb
shll
lods
out
aas
push
inc
out
mov
lock
cmp
add
test
or
sbb
loopne
mov
scas
ds
cmpsl
push
mov
jb
stc
mov
mov
jb
cs
cmp
rcr
mov
test
add
pop
pushf
xchg
out
out
add
imul
mov
cld
mov
jo
xchg
repnz
or
lock
cmp
cmpsb
push
lods
fildl
lods
add
repnz
lock
roll
loopne
adc
cmp
stos
mov
cmpsl
movsl
movsl
pop
push
xor
fnstcw
sub
add
insl
fwait
mov
sub
jo
hlt
aaa
fimull
xor
lahf
cmp
pop
rcrb
repz
inc
fsincos
jle
push
and
test
mov
fs
bnd
jp
mov
adc
xor
mov
mov
mov
jmp
pushf
adc
cs
or
lcall
and
push
sub
mov
stc
and
adc
cltd
cmc
or
add
xor
mov
xchg
fadd
loop
adc
mov
xchg
lods
jnp
pusha
test
mov
orb
mov
push
icebp
int
rcl
ds
jnp
sbb
sarb
subb
shlb
stos
cmovp
xor
mov
jo
icebp
jb
sub
movb
xchg
mov
les
cld
mov
and
popa
mov
jmp
clc
jl
mov
sub
mov
sar
pop
ret
adc
push
lods
xor
sahf
xchg
sar
out
adc
cmp
test
add
xchg
bnd
pusha
pop
sbb
add
stos
loopne
and
or
ret
jecxz
xor
dec
push
and
movsb
xor
stos
fneni(8087
call
push
popa
loop
mov
sub
fnsave
mov
adcl
out
push
xor
test
lea
jge
outsb
flds
sbb
cmpsb
pop
xchg
enter
xchg
xorl
xchg
pop
sahf
mov
mov
dec
pop
mov
test
mov
out
pmaddwd
pop
das
movsl
adc
pop
mov
repnz
aas
mov
pop
testb
int
mov
jg
push
je
stos
into
in
mov
mov
or
icebp
mov
leave
fucomp
cltd
cs
fstpt
and
imul
mov
outsl
mov
jmp
cs
sbb
push
mov
cwtl
sti
scas
and
fistps
scas
inc
sbb
in
jns
mov
rorl
inc
bound
stos
xchg
adc
lret
mov
cmp
dec
adc
stos
movsb
loop
adc
xchg
icebp
mov
pop
dec
xor
mov
dec
inc
mov
mov
mov
mov
add
cwtl
pusha
mov
je
ljmp
je
dec
repnz
jp
addr16
pop
imul
stos
inc
mov
mov
aaa
add
or
jle
stos
and
sub
bound
repnz
movsl
fiadds
clc
lea
mov
adc
popf
cmp
in
jecxz
mov
mov
and
sarb
inc
orl
bnd
cli
mov
dec
out
pop
pslld
loope
push
dec
fxch
insl
jno
outsl
mov
loopne
xor
pushf
xchg
jge
mov
mov
jne
adc
sahf
vpmacswd
and
mov
movsb
push
xchg
pop
loop
into
and
jo,pn
gs
lock
sub
ds
ja
xchg
icebp
xorl
sbb
pop
sbb
fsubp
jns
fwait
out
stc
sbb
adc
push
cmpsb
jmp
outsl
mov
sub
mov
sti
push
mov
test
ror
insb
dec
add
mov
xchg
stos
loope
sti
subl
xchg
mov
aad
mull
cmpsb
sbb
mov
int
ss
adc
xchg
repz
ds
pop
mov
cmp
mov
in
out
pop
mov
fisttpl
mov
mov
cmp
clc
lock
ljmp
loopne
adc
inc
pop
xlat
cmpsb
sbb
test
pop
xor
inc
push
push
or
aas
jo
xor
inc
imul
mov
push
push
mov
mov
shll
fldl2t
jg
pop
jns
mov
icebp
sti
repz
pop
stos
sti
adc
sub
inc
push
jge
inc
stc
push
mov
xorb
xchg
mov
xchg
add
cmp
jp
fcmove
int
and
mov
mov
inc
mov
push
movsb
fcomps
cmp
inc
mov
adc
hlt
stos
leave
insl
sub
popf
or
out
and
jl
repz
ds
mov
mov
push
loop
pushf
jb
leave
cmp
movsb
xchg
cmp
sub
dec
add
or
iret
mov
cmp
test
jae
insb
mov
pop
enter
shlb
insl
dec
shll
jbe
aaa
cmp
iret
jae
outsl
scas
ljmp
add
je
push
jno
jmp
pop
and
repnz
cmpb
ret
add
ficomps
out
mov
ss
push
jnp
xchg
sarl
lods
xor
pop
mov
bnd
and
pop
xor
pop
sbb
stos
dec
std
pop
inc
sub
pop
inc
rorb
insl
and
int3
push
pop
enter
in
xchg
ds
fdivrs
cwtl
add
repz
add
pop
pop
xchg
aad
pushf
mov
jbe
mov
setns
jo
xlat
sar
lock
adc
test
imul
inc
jmp
push
shl
xchg
nop
pop
out
sbb
push
les
call
mov
shlb
mov
jnp
jno
cmp
sub
or
mov
test
mulb
nop
xchg
pusha
sti
mov
pop
push
leave
jb
push
ds
ret
ja
push
add
xchg
jmp
imul
push
pop
icebp
jbe
mov
xor
lock
adc
jmp
xchg
add
pop
mov
scas
or
mov
adcb
lods
cli
std
jns
push
add
cli
push
mov
stc
cld
jmp
xchg
xchg
imul
rcr
insb
mov
xor
jmp
sbb
dec
mov
aas
imul
xor
fs
cmp
dec
pop
jnp
mov
mov
out
shlb
add
clc
clc
cmpsb
lahf
xor
push
mull
mov
out
xchg
pop
ja
sub
mov
xor
sub
jmp
mov
arpl
icebp
pop
sbb
inc
inc
add
loop
pop
pop
and
fnstenv
mov
cmp
loopne
out
jae
daa
add
xchg
cmpb
ficoml
jnp
cmpsb
test
add
mov
pushf
push
jle
out
push
mov
and
or
pop
inc
jmp
inc
xor
andb
into
push
xor
mov
adc
sub
xchg
mov
inc
push
mov
ret
fcoml
std
pop
xchg
mov
sti
adc
es
push
fucomp
mov
test
call
jle
xor
jo
push
mov
mov
fidivs
stos
and
test
clc
sarb
scas
mov
lds
scas
jae
fdiv
cld
mov
mov
outsl
icebp
mov
call
xchg
flds
fldcw
xor
xchg
movsb
lods
mov
mov
sbb
jmp
je
mov
xor
fldcw
cmpsb
insl
push
dec
and
loope
movsl
mov
or
out
dec
cmp
icebp
iret
mov
aad
loop
int
or
pushf
add
stos
scas
cmp
ret
scas
and
outsl
and
jmp
and
rorl
lock
adc
inc
mov
mov
jo
add
xchg
xor
adcl
xorl
mov
mov
or
adc
sub
cltd
loope
cmp
xchg
cmpsb
in
xor
or
das
arpl
push
or
fwait
xor
aad
shr
sbb
outsb
sub
loopne
xor
adc
lods
pusha
cmp
and
hlt
sbb
lods
mov
rcr
scas
loop
push
adc
inc
stos
sbb
jecxz
dec
fwait
clc
pop
jns
mov
jae
cli
or
pop
int
popf
and
movsb
mov
jne
and
sahf
cmc
out
lret
mov
inc
xor
cli
lds
mov
xchg
sub
adc
imul
pop
out
mov
xchg
in
xor
cmpsl
cmp
push
in
xor
jmp
mov
sti
lret
mov
cld
fcomps
inc
cld
mov
jnp
inc
push
and
cmp
dec
jbe
imul
stos
cmp
sbb
mov
scas
paddq
mov
icebp
movsl
mov
je
inc
push
out
sub
repz
call
inc
adc
dec
mov
cmc
mov
jb
push
or
or
pop
cmc
enter
mov
test
int3
jnp
dec
sub
adc
mov
mov
sbbb
lahf
mov
cmp
stos
ret
dec
mov
es
stos
pusha
pushf
push
scas
das
cmp
fldt
leave
push
cltd
lock
ret
mov
mov
ds
lods
out
cmp
jnp
jnp
push
mov
inc
sbb
xchg
xchg
push
push
and
test
loope
stos
inc
mulb
pushf
xor
mov
testb
lods
mulb
xor
push
testb
push
out
icebp
ljmp
mov
ror
xchg
lods
loopne
xor
fstpt
int3
pmullw
xor
xchg
mov
daa
or
nop
or
and
adcb
movsb
sub
or
inc
cmp
jns
jae
into
mov
lcall
and
xchg
ret
mov
sub
push
and
jne
incl
pop
mov
out
xor
sbb
add
mov
add
pop
add
adc
sti
loop
jb
movsb
jnp
xor
pop
loope
mov
pop
aas
sbb
pop
sahf
jnp
ljmp
mov
push
sub
ljmp
bnd
xor
lds
cmpsb
xchg
cs
mov
xor
push
push
imull
or
push
push
mov
xor
pop
cld
pushf
push
fs
push
mov
push
mov
and
cmpb
adc
push
mov
call
mov
pop
push
arpl
lods
rolb
fdivrs
inc
movsb
addl
js
test
pop
jae
inc
pop
pop
push
imul
jae
ja
mov
pop
xor
inc
mov
push
xchg
mov
xchg
stc
jbe
jno
mov
arpl
push
test
push
jae
xchg
ss
jmp
mov
rcll
jne
divl
dec
adc
xor
pop
xchg
mov
sub
cmp
sti
insb
jbe
into
fisubs
inc
jno
lcall
lods
lcall
fdivrl
das
btr
sub
cld
adc
push
push
xchg
mov
mov
pop
repnz
pop
jmp
fsub
ss
jp
pop
mov
imull
pop
movsb
xchg
cmp
sub
gs
icebp
cmp
push
sbb
mov
daa
push
adc
scas
loopne
sbb
mov
push
mov
es
mov
xchg
cmp
xchg
cmpsb
scas
cmp
mov
pop
jl
in
add
sti
dec
adc
loope
sub
adc
or
xor
adc
mov
xlat
mov
pop
jmp
aad
js
push
xchg
xor
mov
leave
pop
mov
adc
pop
fiaddl
aas
rorl
ja
add
scas
sbb
gs
mov
mov
and
movsl
push
mov
mov
movsb
scas
push
jg
pop
mov
inc
cld
add
shrb
loopne
mov
shlb
jle
push
or
dec
cld
or
mov
hlt
cwtl
add
int
out
inc
jo
mov
clc
dec
push
adc
in
jne
pop
ljmp
add
into
mov
jnp
mov
divl
pop
xor
sti
in
adc
sbb
mov
mov
scas
aaa
loop
mov
mov
decb
test
das
lock
dec
test
xor
mov
xlat
and
hlt
cltd
and
and
stos
mov
ror
call
add
lcall
fcmovu
mov
or
repz
inc
movsb
int
shrl
cs
mov
pop
sbb
out
test
insb
or
adc
test
push
test
dec
cltd
rcl
jle
int
push
sbb
cmc
jnp
ficoms
sbb
sub
mov
jne
pop
stos
inc
jo
push
popf
or
inc
negb
enter
push
jge
nop
out
sar
adc
leave
sahf
sub
or
inc
xlat
pop
inc
mov
scas
jg
loopne
cwtl
adc
add
jmp
push
adc
loop
cmp
hlt
xchg
loope
into
mov
repnz
mov
test
test
lret
std
sbb
adc
nop
push
dec
mov
loop
xor
jecxz
mov
pop
sub
xchg
pop
in
jle
pop
add
test
into
outsb
and
rorb
dec
pop
adc
ror
and
inc
mov
lahf
sbb
aam
test
or
push
jmp
not
or
pop
cltd
mov
jp
push
jmp
add
pop
mov
cmp
mov
lea
inc
mov
sub
js
cmp
mov
lahf
lock
ret
addb
into
mov
add
imul
test
mov
mov
sbb
jae
rcl
shr
ficoml
cmp
mov
out
cmp
int3
fnstsw
xor
and
scas
imul
mov
mov
lock
sub
cmpsl
icebp
xor
mov
cmp
add
jbe
add
inc
inc
iret
testl
test
call
and
cmp
clc
adc
pushf
and
int
idivb
or
stos
mov
pushf
ja
add
sub
mov
adc
adc
jns
pop
sahf
in
mov
idivl
cmpb
xor
rcll
ss
pushf
mov
ja
add
sbb
repz
adc
push
aas
sbb
imul
mov
mov
dec
mov
insb
jb
fdivrl
adc
sbb
ja
subb
movsb
pop
mov
mov
push
pusha
jl
lods
jge
icebp
adc
roll
scas
dec
icebp
rorb
mov
xor
inc
shlb
ss
cld
mov
jbe
aam
cmp
cmc
aas
ss
lock
mov
std
add
inc
movsl
bound
addl
pop
out
mov
cmp
pop
icebp
push
cmpsb
test
push
add
xchg
pop
push
arpl
push
arpl
push
pop
push
enter
cmp
mov
dec
je
and
frstor
hlt
xor
jne
or
cli
xor
jno
adc
jne
sub
mov
xchg
out
loopne,pt
cs
int
jb
loopne
notl
mov
push
sti
dec
outsl
mov
pop
push
mov
and
sub
jmp
dec
shrl
mov
jae
in
int
pslld
fstpl
jbe
mov
mov
data16
and
cltd
xchg
cmp
aas
testl
leave
repz
mov
flds
mov
mov
pushf
mov
fcomps
out
jp
adc
mov
test
stos
mov
push
xor
dec
in
xor
jb
mov
insl
mov
xchg
dec
mov
add
aas
insb
pop
jo
out
push
test
addr16
lods
rcrb
push
roll
cmp
dec
das
shl
xchg
pop
add
pop
inc
add
pop
fbstp
pop
cli
xor
outsl
shrl
jno
aas
scas
loope
dec
test
std
aam
push
scas
insl
in
jnp
jbe
repz
lock
dec
pop
mov
mov
jle
mov
or
call
insl
je
xor
imul
js
adc
pop
inc
jno
ljmp
aas
scas
xor
xchg
dec
out
mov
sbb
xchg
mov
daa
add
add
les
repnz
cltd
sub
pop
dec
pop
sub
mull
inc
sbb
inc
fstpl
hlt
std
xchg
xor
jg
sti
jo
je,pn
jl
mov
mov
jecxz
call
mov
pushf
sub
mov
sbb
adc
pop
add
shrl
add
mov
push
jnp
xchg
repnz
scas
subb
iret
scas
in
sti
xchg
lds
shl
in
fimull
sbb
mov
fsub
mov
pusha
xchg
jecxz
jns
xchg
cld
testb
push
imul
cmp
sub
mov
iret
push
mov
imul
or
sub
popa
sti
push
cmpsl
js
iret
mov
adc
sbb
lock
cwtl
jnp
sub
inc
pop
lods
add
cmp
cltd
lock
stos
mov
xor
jae
dec
mov
adc
cmp
lcall
or
mov
dec
fwait
sbb
shlb
lret
loopne
mov
ficoms
into
cmpsb
mov
repnz
dec
jno
or
jae
xchg
jnp
mov
adc
xlat
mov
icebp
subl
cmc
xchg
xchg
out
xchg
jp
lock
test
mov
or
mov
mov
loopne
popf
jnp
xor
icebp
je
pop
insb
fsubr
dec
mov
sbb
xchg
mov
or
xchg
inc
mov
mov
xchg
inc
jb
movsl
mov
mov
outsb
shll
sbb
sbb
mov
mov
stos
mov
jmp
push
sbb
leave
mov
ja
enter
xor
js
sbb
leave
mov
notl
stos
lret
ds
cwtl
or
mov
xor
imul
pushf
dec
aas
or
stos
mov
jecxz
cmp
sub
xchg
adc
outsl
int
lahf
cmp
pushf
xor
cmp
pop
int
mov
lock
mov
inc
jl
pop
add
sub
and
ret
mov
mov
sub
out
call
mov
sub
sbb
mov
cmpb
and
out
xor
xchg
mov
mov
decl
pop
aas
mov
shr
mov
movsl
mov
add
subb
xor
xchg
ror
adc
jmp
rcrl
mov
loope
in
inc
nop
xchg
repz
jmp
pop
aaa
jmp
leave
clc
btr
shrl
xor
mov
mov
sbb
mov
adc
mov
outsl
fcmovu
mov
push
fcoml
ret
imul
add
ret
lahf
push
adc
loopne
mov
jno
ljmp
popa
cmpsb
fstpl
ds
inc
int
mov
jbe
repnz
inc
fstl
xor
add
inc
stos
into
in
ds
ret
cmp
or
mov
push
add
or
int3
adc
add
mov
jmp
mov
aad
scas
sub
loopne
dec
std
xchg
notl
pop
lea
cmp
movsb
sub
sbb
test
sti
fnsave
mov
adc
cwtl
add
aad
mov
call
or
jl
xchg
or
inc
lods
arpl
clc
lock
lock
inc
fisubrs
lcall
jae
xor
lock
xor
pop
dec
cmp
inc
scas
enter
adc
in
shll
popa
add
dec
in
jb
js
dec
push
mov
push
mov
pushf
add
lahf
stc
rolb
ret
aad
dec
cmp
sti
out
out
pop
cmp
jg
cmp
popa
mov
pop
lahf
pop
pop
cmp
sti
push
aas
xor
ret
in
je
push
inc
push
scas
mov
mov
cmp
out
lea
sarb
in
push
xchg
xorb
push
mov
mov
aas
cmp
popf
popf
adc
ret
cmp
xchg
push
push
jns
aad
mov
add
aas
scas
jle
pop
cmp
sti
push
leave
sti
xchg
call
dec
sub
ja
or
jo
pop
sbb
xchg
dec
dec
xchg
daa
movsb
jmp
xchg
popl
mov
subb
test
pusha
aaa
xor
jmp
adc
jp
mov
pop
hlt
push
rcll
jle
test
xchg
mov
mov
out
fmuls
enter
cmc
data16
cmpsl
andb
dec
jo
mov
push
adc
leave
dec
mov
and
or
repz
mov
js
out
lea
cld
jge
notl
push
pop
ds
mov
pop
xor
roll
icebp
dec
mov
xor
pop
repz
xchg
scas
inc
je
inc
push
add
ret
loopne
push
pushf
jg
sbb
insb
mov
jne
stos
loop
add
dec
ret
inc
cmpsb
jae
fs
push
mov
add
inc
fstpt
lret
jmp
sti
add
pop
int
insl
int
push
cmp
xchg
test
lock
cmp
data16
repz
push
cld
jp
xor
ret
xor
mov
inc
mov
xor
adc
test
js
cltd
push
and
jb
roll
mov
ss
jns
scas
and
in
in
daa
ds
and
test
push
xchg
mov
in
pusha
pop
mov
sub
push
pusha
fisttpll
add
mov
std
daa
pusha
popf
pop
imul
call
or
jo
lahf
mov
call
popa
out
cmp
mov
aad
jmp
test
mov
movsb
pop
and
leave
xor
in
adcb
mov
sub
dec
mov
clc
mov
sahf
xorl
aad
fidivs
lods
lock
movsl
jmp
arpl
dec
loopne
loop
cmp
pop
push
sbb
pop
pop
sub
mov
loopne
sub
mov
test
stc
rorb
das
jnp
ficoml
repnz
ds
jmp
dec
mov
dec
and
jle
imul
bound
mov
fstl
push
icebp
das
adc
lcall
aas
mov
cmp
mov
mov
fs
jnp
jne
jae
mov
addl
mov
jns
adc
jmp
repz
mov
and
dec
lahf
add
loopne
push
lret
pop
xor
xor
stos
adc
sbb
push
sub
push
out
xchg
adc
test
mov
fs
cmpsb
sbb
push
pusha
hlt
or
mov
std
lds
out
loope
mov
fiadds
sbb
push
cs
sbb
xor
dec
bound
push
stos
push
ficomps
ja
mov
jnp
jmp
xor
jge
jne
idivb
mov
lcall
div
mov
cmp
pop
inc
repnz
jbe
jmp
bound
push
xchg
aam
pusha
jne
mov
mov
push
push
sub
sub
addb
xor
push
imul
lcall
adc
loope
push
movsb
lods
push
out
bound
mov
notl
bound
daa
imul
push
cmc
inc
adc
rolb
pushf
rol
xor
aam
test
jno
adc
push
mov
pop
push
loopne
adc
loop
pop
faddl
hlt
icebp
mov
je
cmc
jo
mov
in
mov
loope
lea
push
movsb
sti
setle
mov
cld
sbb
sbb
mov
cwtl
data16
imul
imul
xchg
pop
mov
xchg
lods
leave
out
repz
sub
xor
mov
pop
arpl
jns
sbb
jno
dec
xchg
sub
add
pop
stc
loopne
xor
jge
inc
mov
push
shlb
mov
jp
pop
xor
xor
fidivrs
pop
andb
add
mov
mov
fldt
adc
mov
pop
fsubr
jecxz
fisubrl
loopne
add
adc
jno
mov
shll
ljmp
test
fadds
dec
inc
pushl
lea
fisubrs
shl
mov
sub
insb
jne
icebp
xor
jbe
sbb
jp
icebp
cmc
or
pusha
push
mov
mov
shrl
out
mov
mov
and
jecxz
xor
and
xorb
xlat
cmp
bound
adc
push
dec
xchg
sbb
rcrb
cmp
lods
mov
fiadds
push
jo
jo
jne
xchg
ds
and
sti
fwait
sub
mov
loopne
add
and
sub
jmp
cld
imul
or
imul
and
mov
push
in
inc
mov
int
xor
imul
mov
jae
cltd
stc
sub
js
xchg
inc
cli
inc
mov
sbb
mov
pop
mov
mov
nop
scas
movsb
popa
xor
xor
jmp
shll
lea
iret
ja
loopne
sbb
inc
stos
fadds
pop
in
jg
dec
adc
std
outsl
push
pushf
inc
jb,pn
mov
cli
testb
mov
xchg
adc
insl
imul
lock
jmp
mov
inc
or
out
daa
mov
mov
mov
mov
clc
loop
fdivp
lcall
ljmp
pop
out
ja
and
adc
lods
inc
in
sub
pop
dec
js
mov
sbb
mov
and
pop
sub
mov
mov
test
mov
push
insl
cltd
aas
loope
stos
pop
fnsave
testl
xchg
sub
ds
aas
mov
push
push
jo
scas
lret
imul
dec
mov
std
loop
pop
pusha
aam
aad
jnp
mov
cmp
icebp
imul
xchg
and
rorb
insl
sbb
fcmove
pop
xor
sarb
inc
or
adc
imul
cwtl
sarl
mov
fucom
daa
ds
in
movsb
nop
adc
mov
popa
mov
stc
jnp
lahf
inc
adc
pop
mov
mov
jo
loopne
daa
jg
mov
negl
movsl
loop
out
xor
xchg
adc
cmc
mov
mov
notb
mov
sbb
mov
xor
sub
mov
or
lods
stos
sbb
clc
jb
xor
in
lock
mov
adc
mov
or
fcom
outsb
jae
dec
add
cs
inc
jb
mov
jae
dec
xor
cmc
push
stos
adc
adc
and
xor
sahf
imulb
mov
dec
cmp
repnz
xchg
adc
mov
mov
in
ja
subb
mov
mov
pop
cmp
jno
stc
xor
test
push
jmp
popa
pop
jp
insl
mov
aas
pop
mov
shrb
mov
xchg
mov
mov
xor
jp
mov
popa
mov
fidivs
and
xor
clc
sbb
cs
push
adc
pop
push
test
mov
rcrb
mov
fadds
cmpsb
adc
jne
push
xrelease
ret
adc
ret
add
test
sub
push
mov
popf
pushf
cs
xor
mov
leave
stos
dec
loopne
lock
js
and
mov
sub
xchg
sahf
sub
pop
pop
xor
jb
mov
ret
push
adc
iret
addb
mov
sti
or
sub
adc
iret
shrb
mov
sbb
pop
mov
add
pop
or
out
mov
adc
cmpsl
jl
cli
and
xor
xchg
stos
jb
ljmp
repnz
leave
xchg
and
ret
pop
sbb
mov
xchg
mov
add
mov
cld
mov
add
jae
clc
add
loop
pop
fbld
aaa
sti
and
jecxz
mov
sub
push
in
mov
outsb
sbb
loop
mov
test
test
test
mov
push
and
jp
xchg
mov
add
adc
xor
stos
in
mov
sbb
jecxz
sbb
loop
pop
loop
inc
scas
push
xlat
das
in
jmp
dec
inc
ret
rorb
js
loopne
cmp
sbb
xchg
addr16
daa
int
xchg
mov
push
pop
xchg
cli
ss
inc
leave
bnd
cli
xor
mov
repnz
and
mov
jb
test
cmpsb
xor
mov
or
xorb
stos
cs
xor
pop
movsl
jno
push
xor
shrb
lcall
xor
es
xor
shrl
and
out
xor
mov
loopne
arpl
call
dec
fsts
das
pop
sahf
inc
pop
adc
mov
or
mov
or
mov
xor
lock
enter
sbb
and
jo
stos
adc
dec
jmp
jb
pushf
ds
mov
lahf
ds
mov
icebp
js
sbb
lods
leave
sbb
sbb
jmp
pop
mov
add
sub
aaa
jmp
movsl
js
fidivs
aas
jnp
push
repnz
sub
and
jae
int
jg
test
mov
lods
push
and
aas
ljmp
mov
daa
popa
aas
mov
lret
pop
sarb
xchg
sbb
adc
scas
fadds
std
sub
stos
icebp
or
divb
lds
inc
sub
leave
dec
inc
or
mov
pop
cmc
jmp
stos
push
add
push
cmpsb
das
jno
xchg
hlt
jae
pop
inc
js
adc
call
sbb
push
xchg
jnp
in
mov
add
dec
sbb
mov
fimuls
rcll
mov
sahf
xor
or
imul
pop
mov
repnz
push
test
mov
mov
mov
loope
dec
iret
ret
loopne
rcr
and
pop
daa
or
fnstcw
cs
cmpsb
dec
ljmp
test
jae
ljmp
xchg
mov
sbb
lret
sub
adc
sti
mov
in
pop
jae
in
ss
inc
dec
adc
inc
push
push
scas
std
mov
xor
out
test
push
scas
pop
mov
mov
call
pop
xorb
sub
push
or
mov
lds
xlat
mov
and
adc
pop
repz
loop
xchg
je
rolb
dec
mov
pop
cmpsl
jp
mov
sti
mov
mov
outsb
cmp
push
pop
scas
adc
pop
lcall
mov
adc
nop
sub
out
pop
cmp
mov
inc
cmp
pop
mov
lods
cli
jle
fwait
ljmp
adc
ds
loopne
in
jp
mov
lcall
sbb
cmp
cli
leave
xor
mov
sub
lret
jmp
pop
dec
sti
xchg
ror
pop
std
push
fstpl
inc
inc
add
push
nop
sub
aad
mov
adc
data16
pushf
nop
cwtl
adc
ja
cmc
xor
xor
xor
pop
pop
fmuls
xlat
mov
adc
push
hlt
mov
mov
mov
faddl
test
jl
jnp
push
jo
loop
in
add
test
insb
push
fmull
xchg
lret
dec
jb
pop
fwait
xor
imul
mov
xchg
in
movsl
mov
inc
mov
mov
loopne
test
lret
push
cld
outsl
ja
inc
aaa
push
ds
sti
jle
outsl
xchg
jb
sti
pop
xor
aam
rclb
icebp
push
bound
je
test
arpl
addr16
sarl
lret
test
mov
push
iret
or
inc
out
inc
inc
pop
push
sub
shlb
stos
add
mov
aaa
xor
fsubp
jae
mov
pop
lds
icebp
mov
std
dec
push
dec
or
or
xor
ds
xorl
loopne
xor
rolb
out
jmp
cwtl
push
add
push
addr16
icebp
stos
xchg
in
movsb
mov
icebp
cmp
lods
arpl
sbb
adc
dec
mov
jmp
and
inc
jle
cltd
or
or
add
jp
notb
mov
inc
xor
lret
fs
jg
adc
jnp
xchg
add
sub
in
add
sti
dec
xor
test
loopne
fcompl
arpl
mov
push
out
jo
xor
pop
nop
dec
jmp
pop
mov
leave
int3
in
sbb
sub
cmp
mov
or
and
outsl
enter
push
cmp
movsb
lods
shrb
lahf
and
aaa
xchg
sub
movsb
ds
test
ja
ljmp
lods
jp
fcoml
sub
sbb
int
in
xor
dec
aaa
mov
xchg
dec
xor
cld
sti
ret
das
add
std
adc
jno
adc
add
cld
pmullw
das
xor
pusha
inc
rcrb
xor
int
or
mov
jne
sbb
in
push
popa
sar
sub
push
push
adc
fst
xchg
into
push
fdivl
aam
cmpsb
lcall
imul
stc
dec
data16
pop
and
imul
icebp
mov
test
pop
pop
ret
leave
fcmovnb
das
mov
push
outsb
lret
das
jle
pusha
mov
ja
repz
daa
or
adc
mov
bound
adc
mov
cmp
repz
jmp
adc
adc
mov
cmc
or
pushf
call
inc
stc
jmp
out
or
xchg
nop
hlt
cld
cmpsb
mov
and
movsl
sahf
mov
scas
in
or
and
sahf
mull
inc
loopne
ds
lahf
call
mov
sub
test
int
pop
cmpl
mov
arpl
sub
loope
sahf
jbe
mov
imul
test
add
cmpsb
in
adc
jae
scas
inc
xchg
test
mov
push
mov
aaa
loope
inc
mov
lahf
pop
mov
int
aam
shrb
pop
outsl
test
cli
lret
iret
je
jle
xchg
inc
subl
sub
jne
mov
push
faddl
mov
add
mov
add
mov
movsb
mov
add
push
sbb
shrl
icebp
add
cwtl
xor
jno
or
mov
test
mov
in
sbb
dec
out
pop
dec
mov
xchg
and
cwtl
subb
pop
mov
rcll
cmpb
int3
mov
mov
cltd
xlat
icebp
cmc
lock
mov
xchg
js
clc
jae
dec
cli
jno
mov
jmp
push
out
dec
gs
xchg
in
fidivs
push
sbb
add
mov
xchg
ds
and
jae
lret
dec
scas
imul
scas
xchg
adc
lods
jo
xor
jl
std
push
jbe
mov
mov
pop
enter
push
nop
jle
pushf
loope
adc
sub
rolb
jp
mov
test
sahf
inc
dec
push
cwtl
xchg
push
iret
jmp
inc
mov
jno
stos
xor
sarl
insl
and
lret
inc
push
adcb
mov
pop
or
rcl
pop
sbb
jmp
pop
dec
cmp
mov
jb
rolb
add
shlb
nop
mov
fs
jne
ficoms
or
in
sbb
les
dec
ljmp
cli
ljmp
xchg
mov
sti
pushf
ret
add
xor
leave
aam
icebp
mov
pop
ljmp
cld
mov
andb
notb
mov
cs
mov
mov
fs
cltd
or
sub
and
xchg
adc
js
pop
icebp
sbb
and
or
pop
cltd
pop
lret
sbb
cmpsl
sbb
mov
dec
mov
push
hlt
inc
shlb
lods
dec
push
jae
in
je
adc
out
inc
out
out
cwtd
mov
test
dec
and
pop
scas
add
add
in
or
lds
jno
push
push
int3
or
cmpsb
push
push
in
cmp
fstpl
inc
mov
sahf
nop
imul
lock
inc
je
das
mov
mov
or
mov
push
pop
mov
test
lds
cli
mov
xchg
clc
xchg
scas
push
imul
daa
sbb
das
sbb
lcall
xor
mov
lds
pop
push
sbb
xor
inc
scas
jg
aam
add
mov
dec
mov
dec
test
sub
sbb
lock
bound
lret
mov
sti
stc
test
cli
ret
and
cwtl
sbb
sbb
mov
cmpsb
mov
fidivl
push
ds
pop
out
mov
data16
lahf
jb
xor
int3
mov
frstor
out
sahf
ja
jle
jb
lods
dec
fst
dec
shrl
dec
mov
jne
or
mov
hlt
or
and
lods
loopne
inc
mov
lds
repnz
or
inc
push
cltd
push
jne
xor
push
mov
jb
mov
outsb
fwait
lods
pop
xor
cld
div
mov
dec
jbe
fcompl
add
cmc
xor
pop
loopne
adcb
icebp
jae
rep
xchg
ret
push
inc
mov
lahf
mov
test
sbb
inc
mov
fildl
cmpb
sub
cmp
mov
lods
and
cs
repz
mov
xchg
arpl
ficompl
pop
lahf
dec
fnstsw
popa
mov
popf
cmp
or
or
movsb
pop
xchg
aam
scas
mov
jp
aas
or
dec
add
push
sarl
lods
aaa
dec
cmp
loopne
xchg
or
inc
mov
add
mov
popf
out
rcrb
add
scas
xchg
hlt
pop
mov
cwtl
pushf
imul
mov
movsb
lods
xchg
jne
jns
jge
jl
outsb
cmp
pusha
mov
rorl
jns
sbb
addb
sub
repz
adc
daa
adc
fs
nop
loopne
mov
nop
push
mov
push
out
fimuls
jecxz
push
dec
jl
cld
fiaddl
rclb
in
lea
mov
cld
pop
in
cmp
cmp
ds
punpckhwd
int
cld
pop
dec
pop
out
das
and
xchg
jae
repnz
subl
pushl
xor
add
mov
cmp
hlt
mov
xor
popf
ds
hlt
sub
es
out
inc
ss
mov
addr16
insl
mov
test
fstpl
movsb
sub
test
fsubs
dec
int
out
es
stos
push
inc
jl
aas
inc
adc
addr16
lods
jge
in
repz
push
pop
and
xor
mov
jb
jnp
insl
icebp
inc
popa
movb
addl
mov
data16
cmpsl
mov
js
pop
shrb
xor
stc
outsb
pop
nop
dec
xchg
or
int
or
jl
addr16
jge
stos
sbb
sbb
xchg
jecxz
int3
pushf
push
push
xchg
fisttpll
enter
leave
insl
pop
push
mov
in
xor
sbb
and
shll
out
out
inc
mov
cwtl
jp
aad
sub
add
fiadds
fsts
mov
stos
shlb
xchg
lret
cmpsb
cmpsl
mov
negl
xor
popa
icebp
dec
or
or
mov
jl
scas
pop
push
sti
pop
mov
nop
pop
movlps
mov
hlt
mov
insl
sahf
lods
dec
pop
mov
icebp
aas
mov
daa
adc
idiv
ss
scas
push
push
rcrb
pop
cmp
push
add
bound
sub
sub
xchg
popf
xor
or
xor
jnp
sbb
sti
push
ds
outsb
cmp
jge
jne
pop
mov
test
xchg
lods
imul
test
mov
pop
and
fmull
mov
cmpsb
je
mov
mov
ljmp
xchg
inc
lret
out
sub
or
add
jmp
insl
sub
adc
cmp
jnp
cmp
stos
inc
mov
pop
cmp
sbb
or
mov
je
xchg
ja,pt
lock
fnstenv
cmp
scas
mov
or
loopne
fldcw
pop
push
pushf
adc
loope
inc
movsl
shll
jmp
fadds
sub
mov
mov
push
lock
clc
mov
cmp
cltd
icebp
push
ficoms
mov
ss
xor
scas
mov
testl
sub
mov
dec
mov
out
call
mov
js
inc
jg
sti
inc
enter
adc
add
xchg
xchg
lock
xchg
cmc
add
mov
ret
cli
and
xchg
and
lock
movsb
rclb
mov
lock
xchg
push
je
repnz
aas
daa
aam
pop
lret
mov
jmp
xchg
and
arpl
mov
sarb
mov
int3
and
jno
push
xor
aas
mov
push
test
inc
xor
xor
adc
je
int
lea
jae
cltd
dec
pop
mov
pop
shlb
lock
out
mov
cli
insb
add
cmpsl
jmp
inc
cmc
jne
pop
jl
mov
push
mov
fndisi(8087
test
repz
xchg
jne
push
mov
dec
push
rcl
cmp
adc
pop
fstps
cld
mov
mov
std
pop
lock
repz
das
xor
xchg
xchg
cli
aad
inc
ret
push
inc
xor
mov
fnsave
xchg
bound
jo
xchg
xorl
repz
xchg
pushl
pop
int3
int
jne
adc
jno
dec
insl
mov
cmp
lods
rol
ljmp
fldt
leave
ficomps
stc
insl
lock
push
xchg
pop
imul
daa
cwtl
arpl
sbb
or
xor
ss
testb
movsl
loop
stos
jo
inc
push
push
inc
sbb
mov
push
jge
faddl
push
dec
mov
xchg
push
cltd
fists
insl
xchg
pop
mov
xchg
addl
pop
aas
idivl
test
pop
push
mov
sub
pop
mov
xchg
sbb
jno
test
paddw
outsb
mov
arpl
xor
shll
pop
movsb
mov
jnp
movsl
movb
push
in
movsb
xor
xor
mov
lcall
iret
or
mov
popf
idivb
xchg
mov
adc
mov
pop
inc
popf
sub
or
pop
std
mov
jb
mov
cmp
out
push
dec
or
aaa
addr16
aad
shll
stos
ficoms
mov
xor
mov
inc
mov
mov
mov
jg
out
mov
push
daa
lcall
xor
inc
lods
adc
std
repnz
cmp
sti
mov
or
popf
mov
shl
push
cmp
mov
lods
jge
movsl
jecxz
test
sub
mov
test
hlt
fs
push
pop
roll
mov
lahf
lcall
aaa
cs
pop
scas
xorl
xchg
inc
pop
sbb
daa
js
dec
or
xor
pop
int
shl
pop
and
bound
inc
test
jbe
cli
es
xchg
das
cwtl
mov
add
lock
in
pop
sti
mov
leave
cmpsb
jg
sbb
xor
add
adc
jnp
sbb
negb
adc
addr16
and
cmp
mov
lods
dec
es
adc
ret
mul
lock
or
push
push
cmp
pop
push
addb
cmc
push
fsub
sbb
mov
mov
xchg
push
bound
mov
xchg
popf
pop
add
lods
dec
push
pop
mov
icebp
xchg
imul
clc
jne
test
push
push
and
pop
sbb
jle
clc
push
cmpsl
jnp
loop
jb
sub
out
daa
adc
pop
out
jge
in
add
ja
daa
cwtl
and
inc
int3
int
pop
imul
sbb
mov
mov
dec
out
push
sub
ret
addr16
ds
xor
jbe
pushl
icebp
push
jo
imul
daa
push
jne
mov
imul
dec
mov
push
lock
rorl
mov
dec
xchg
push
int
movsl
imul
andb
fisttpl
js
push
push
pushl
push
xor
push
push
iret
xchg
mov
mov
jno
imul
jno
mov
mov
lea
call
or
mov
mov
sar
out
mov
add
test
loop
loop
cld
xchg
imul
mov
call
notb
faddl
call
xadd
das
sub
mov
xchg
jno
jg
test
sbb
pop
mov
aam
mov
mov
xchg
or
cmp
jle
adc
sti
and
push
pop
loop
stos
mov
dec
adc
inc
mov
movsb
pushf
arpl
sub
mov
add
or
scas
aas
dec
pop
adc
inc
adc
imul
data16
adc
jns
jmp
iret
mov
popf
repnz
mov
repnz
add
lock
and
fst
lret
test
push
xor
add
stos
int
push
jp
add
sbb
jmp
aas
bound
hlt
xor
and
fwait
add
jecxz
mov
rorb
stos
sub
out
pop
mov
repz
mov
cmpsl
sbb
mov
add
sti
addr16
mov
xchg
inc
insl
push
popf
loopne
int3
bound
mov
mov
clc
aas
jmp
ljmp
test
cmp
stos
jmp
mov
cmp
hlt
jae
mov
mov
mov
gs
jp
xor
shll
hlt
cwtl
adc
sbb
mov
icebp
lret
cmp
add
leave
repz
and
sbb
stos
pushf
mov
call
out
mov
or
push
xchg
mov
lret
out
stos
imulb
mov
out
mov
ret
lods
dec
test
xor
mov
jmp
xchg
es
fnstcw
addr16
pushf
fisubs
addr16
pop
add
rolb
mov
jmp
pop
arpl
mov
pop
mov
andb
mov
mov
xchg
or
ficoms
mov
pop
or
scas
mov
pop
loope
cs
scas
inc
ljmp
aas
test
stc
xchg
xchg
jnp
cmp
into
xor
insb
pusha
mov
fwait
rcr
cmp
jbe
mov
jo
and
add
shrl
mov
sbb
sbb
sub
je
sti
sar
mov
stos
gs
mov
ret
arpl
jne
push
bound
aas
stos
pop
popl
outsb
cmp
in
xchg
cmp
jmp
movsb
pusha
pop
dec
cmp
scas
xchg
pop
loop
pusha
in
jo,pt
mov
sahf
adc
fisttpll
xchg
xor
leave
xor
scas
pop
mov
enter
add
bound
test
fcmovnbe
mov
xchg
or
shrl
bound
aad
movsb
out
test
and
icebp
jae
clc
loopne
pop
ficompl
imul
xor
fimull
sbb
lock
inc
les
push
mov
lea
sbb
sbb
sbb
push
xor
inc
cmp
xchg
neg
push
adc
sub
mov
imul
jo
pop
dec
push
bound
jae
rcl
sbb
adc
in
into
sbb
sahf
adc
fiaddl
mov
cltd
mov
xor
or
inc
adc
pop
sbb
sbb
movsl
ljmp
test
mov
mov
out
fwait
movsb
gs
hlt
mov
add
push
or
ja
loopne
repnz
inc
sti
dec
js
aas
aad
inc
mov
pop
inc
imul
xchg
pusha
mov
adc
sbb
xor
lea
push
push
filds
imul
xchg
aas
out
pop
mov
mov
in
aam
loope
ds
fcmovnb
xor
push
rorl
das
mov
xor
xchg
sti
dec
shl
xchg
jmp
lcall
popa
in
jbe
adc
out
imul
sbbl
loopne
mov
and
mov
jo
mov
cmpsb
sbb
mov
push
call
sbb
mov
xchg
sbb
inc
scas
fs
inc
addr16
out
pop
push
sbb
inc
fisubrs
lea
js
cs
in
dec
sub
mov
test
mov
shlb
mov
sbb
fidivs
rclb
jl
pop
cli
mov
into
sub
lret
push
aas
outsl
dec
cld
or
jge
mov
imul
pop
xor
lret
movsb
lea
imul
mov
daa
xorb
loop
sarb
stc
stc
add
push
push
add
sbb
psllw
int
inc
xor
cmp
sub
and
jnp
jle
pop
icebp
es
adcb
xchg
dec
mov
and
loopne
popl
jbe
push
lret
sti
or
sbb
arpl
scas
xchg
mov
add
push
ds
cwtl
cmc
fs
repnz
lahf
inc
in
ret
cmp
inc
mov
jnp
addr16
pushf
mov
dec
mov
inc
or
mov
nop
call
xor
xor
dec
dec
repnz
mov
dec
push
mov
outsb
mov
sub
jmp
sub
out
push
or
lods
loop
push
test
and
int
sub
lods
cmp
bound
inc
pop
addr16
pop
adc
jo
or
out
scas
mov
sub
imul
pushf
push
or
adc
mov
adc
js
popf
mov
cmp
mov
fisttpll
sbb
ss
xchg
lea
mov
pushl
mov
in
dec
add
test
enter
xchg
aam
divb
push
jmp
ds
jge
stos
test
in
mov
into
mov
adc
clc
mov
xchg
mov
leave
add
cmp
in
add
fwait
cs
shrb
jnp
stos
mov
mov
cmp
shlb
xchg
lds
jae
div
pop
or
jge
cmpsl
arpl
push
xor
inc
cld
bound
fildll
pop
repnz
adcb
jne
icebp
mov
mov
imul
int
xchg
fwait
insl
xorl
add
jno
mov
inc
imul
std
add
enter
daa
sar
pop
rcrl
sahf
inc
outsl
xor
jb
xchg
pushf
int
pop
daa
imul
orb
arpl
xchg
or
mov
mov
das
jmp
int
adc
shrl
lsl
push
xchg
jnp
xchg
cld
in
sub
xchg
fs
cwtl
enter
imul
push
pop
fnstsw
pop
or
test
add
xor
gs
fstpl
pop
cmp
jno
cmp
push
es
xchg
mov
sbb
imul
inc
call
push
mov
mov
add
inc
mov
scas
mov
clc
clc
jns
gs
xchg
push
leave
xchg
jns
imul
ljmp
dec
jbe
repnz
jnp
loope
sbb
fstl
cli
lcall
inc
adc
add
fdivrl
dec
ja
test
jno
xchg
pop
lea
dec
arpl
push
xchg
mov
idivl
lahf
inc
and
sub
fcoms
inc
notl
jl
arpl
xor
fiaddl
jle
add
pop
pop
mov
mov
mov
inc
mov
adc
sbb
push
cmc
push
movsl
aaa
xchg
jmp
mov
cld
mov
jmp
mov
jne
mov
xchg
jb
and
lea
mov
testb
insw
mov
add
es
sbb
adc
push
mov
mov
cmpsb
notb
sub
fcomps
jge
pop
inc
add
faddp
ss
test
test
pop
pushf
inc
lret
xor
xor
es
mov
sbbb
nop
mov
push
push
mov
repz
pop
cmp
xor
jge
dec
xchg
sti
pop
scas
inc
stos
lock
fildl
scas
sbb
fbld
mov
cwtl
and
aaa
and
mov
xor
int
imul
jns
inc
cmp
push
das
cmp
test
mov
bound
or
dec
sarb
outsl
jne
cmpsl
lods
adc
mov
mov
aaa
xor
push
push
cmp
pop
mov
mov
jb
mov
test
icebp
je
loop
inc
pushf
inc
icebp
jle
mov
xchg
jecxz
mov
pop
in
ss
test
push
xchg
xchg
mov
adc
jmp
mov
inc
jmp
test
cmp
mov
inc
sub
mov
in
lock
outsl
mov
push
sub
xor
loopne
add
outsb
push
daa
dec
daa
lahf
loop
jmp
call
int3
mov
fildl
rolb
adc
ss
push
push
push
in
inc
sbb
cmc
cmp
or
inc
leave
cltd
mov
es
clc
shlb
dec
adc
mov
jns
sarl
pop
add
cld
mov
jb
inc
or
mov
add
xor
leave
hlt
pop
lods
outsb
jle
mov
hlt
lods
pop
push
cmpsb
leave
repz
and
pop
int3
xor
sbb
clc
loop
incl
ds
push
lock
imul
inc
cld
aad
push
sub
xchg
push
clc
dec
adc
iret
push
fisubrs
mov
shl
xor
xchg
je
pop
cli
xor
sub
cmpsb
mov
or
and
lods
orl
pop
mov
sahf
cmp
mov
push
push
jle
cmc
push
adc
test
icebp
imul
lods
stc
sub
fisubrs
cmp
adc
sub
lods
loop
xor
or
mov
xchg
inc
xlat
mov
mov
jb
mov
les
stos
in
stos
out
std
push
fistpll
das
pop
adc
into
mov
sbb
fs
ret
repnz
je
int3
ds
and
sbbb
das
sbb
imul
pop
es
and
xchg
jge
icebp
jle
sub
jae
or
dec
shll
aaa
mov
mov
cmc
jns
idivl
cld
pop
cs
add
lods
or
popf
xlat
into
push
rcrl
sub
jg
push
push
xor
cli
mov
in
lret
in
xor
cmpsb
mov
insl
lea
int
loopne
mov
sub
mov
std
pop
inc
push
call
ja
ret
imul
rorl
lods
and
jl
sbb
insl
and
test
shr
hlt
aaa
cmpsb
pop
repnz
add
dec
sbb
add
cld
mov
ljmp
in
mov
lret
adc
mov
aad
ficomps
leave
icebp
xchg
les
or
cmp
jns
call
mov
mov
test
adc
jge
adc
pop
jb
jmp
inc
mov
rol
sbb
lock
outsl
sub
incl
push
das
sbb
push
mov
enter
loop
scas
sbb
mov
sub
ja
push
std
idivl
call
call
sub
xchg
xor
ljmp
mov
inc
out
fcmovu
mov
and
mov
xor
lret
push
mov
xchg
jecxz
dec
dec
daa
add
push
push
repnz
cmpsl
cmp
loope
adc
push
cmp
inc
stc
pop
pop
pop
xchg
push
jno
and
js
test
daa
pop
repnz
mov
enter
out
push
fdivs
lcall
cmpl
adc
aaa
fcomp
inc
cmp
jb
ljmp
jp
mov
inc
jae
mov
jmp
cltd
pop
out
arpl
sti
in
xchg
and
fmull
sbb
mov
int3
push
add
loopne
xchg
xchg
lcall
fimull
xlat
dec
sub
lcall
xchg
daa
mov
cmp
icebp
pop
repnz
sbb
movsb
and
sbb
das
es
test
aas
jns
jmp
cmpsb
addr16
sub
testl
jg
das
xor
adc
cwtl
ret
add
icebp
xchg
pop
repnz
add
pop
mov
mov
movsb
lock
mov
mov
sub
out
adc
test
imul
dec
mov
pop
jno
lock
aas
repnz
mov
adc
mov
and
es
ret
aam
rclb
pop
loop
shrb
pop
pusha
ret
mov
nop
movsb
lock
add
outsb
adc
jmp
cmp
mov
and
adc
xor
movsl
xor
jge
insb
pop
popf
xlat
sbb
daa
mov
insl
and
icebp
cmp
xor
xchg
or
mov
xor
jb
icebp
sbb
jmp
and
adc
jb
push
mov
sub
dec
jae
cmp
shlb
sbb
lcall
shll
aas
inc
mov
mov
add
into
mov
rcrb
jb
shrb
ds
push
jae
movsl
push
add
mov
loop
xchg
cmp
pushf
ss
pop
scas
jmp
stos
xchg
movsb
xor
sub
adc
sub
pop
movsb
sbb
mov
into
sbb
scas
bound
push
jbe
pop
rcll
jns
js
mov
loope
notb
pop
inc
or
pop
dec
push
lds
cmp
insb
lock
insl
inc
popa
mov
dec
es
push
ret
das
jl
mov
inc
imul
call
shlb
or
inc
fs
jo
xor
or
call
inc
cmpl
jb
stos
leave
testb
xor
and
lds
jae
and
cld
dec
loop
jae
mov
cs
jne
in
stos
or
sbb
cmp
insl
sub
aas
outsb
dec
xor
xor
pushf
decb
mov
movsb
fstpt
mov
fwait
inc
out
fucomp
bound
pop
ljmp
jg
cmp
repnz
fstpl
icebp
pop
out
mov
pop
loop
decb
test
cmp
repnz
iret
js
stos
inc
sahf
mov
test
push
std
add
out
filds
mov
insl
adc
xchg
decb
dec
in
jne
testb
pop
out
pop
in
ja
mov
adc
cli
cmp
xchg
adc
shr
push
pushf
sti
std
xorl
mov
cli
loopne
mov
loopne
aad
int3
lock
mov
mov
sahf
repnz
mov
cmp
mov
mov
add
arpl
sarb
mov
cmp
sbb
lods
push
jp
mov
cli
ja
icebp
mov
mov
xchg
and
mov
ljmp
push
sbb
outsl
cld
movsl
push
adc
inc
loop
mov
sub
lret
sbb
mov
sub
push
mov
and
mov
push
adc
shr
in
jno
das
adc
jge
jg
and
jno
cmpsl
aas
xor
sbb
xor
mov
jne
rcrl
adc
icebp
iret
push
add
push
das
loopne
jae
mov
sub
sub
add
pop
je
int
mov
xchg
xchg
sub
cmpsb
cmpb
out
outsl
mov
and
jb
jno
xchg
cltd
dec
adc
pop
popa
mov
bound
adc
mov
stos
push
lock
addl
test
sbb
shll
cmp
loope
ja
sahf
mov
jecxz
imul
jg
push
pusha
jno
add
scas
pushf
add
lock
movsb
mov
movsl
movsl
push
mov
sub
push
cmp
dec
mov
mov
mov
push
movsb
test
xchg
outsl
sbb
sbb
xor
and
add
inc
pushf
sub
sub
pushf
mov
sub
xchg
mov
jp
jg
fs
and
mov
xor
pop
mov
and
lret
repnz
cmp
adc
cmp
jmp
pop
sub
jl
pusha
mov
insl
shrl
cmc
cs
pop
xchg
jne
scas
xchg
push
stc
or
addr16
mov
mov
ds
push
daa
loopne
loop
mov
mov
js
adc
xor
movsb
dec
stc
fistps
cli
xchg
fsubr
cmp
lea
cwtl
mov
ds
out
std
mov
popf
cmpl
subb
push
mov
je
loopne
gs
in
cmp
stos
fwait
adc
test
repnz
mov
dec
lods
sahf
fsubr
rol
loop
sub
mov
pop
mov
outsl
jb
or
xchg
icebp
out
cmp
pop
push
int3
xor
xchg
xor
sub
jmp
mov
rolb
pop
push
jecxz
jmp
pop
sahf
pusha
shrb
mov
sahf
in
stos
ret
jb
arpl
popa
std
out
push
lret
inc
mov
out
mov
xchg
sub
sti
test
inc
lds
mov
bnd
sbb
push
xor
xchg
sbb
mov
je
xor
ret
push
mov
fisubrs
sti
mov
pop
push
inc
cltd
ds
mov
int
lods
mov
in
nop
mov
jge
jp
jbe
fldl
pop
or
icebp
push
mov
mov
or
in
jae
sub
jb
or
push
lds
mov
adc
cmp
rolb
mov
push
decl
stc
lock
jb
dec
loop
fcmovnu
cwtl
jmp
pop
push
mov
jmp
jecxz
cmp
into
or
mov
inc
pop
scas
in
mov
jno
pusha
jmp
cmp
subb
add
in
lea
ret
cs
jno
cmp
jmp
sub
lea
sahf
aaa
xchg
inc
push
adc
add
fdivs
cmp
sub
push
cli
push
pop
scas
sbb
inc
pop
pop
adc
mov
jmp
lahf
shlb
lcall
decb
sub
xor
loope
fisubl
push
bound
or
lock
xchg
cld
shr
and
jp
ret
fidivs
push
insb
jb
ficomps
mov
jae
test
aad
mov
repz
cmp
movq
cmp
fiaddl
mov
mov
notl
inc
cld
sbb
aam
sbb
js
mov
pop
into
sub
loop
pop
inc
mov
xor
mov
ljmp
inc
in
pop
mov
aaa
daa
sahf
aam
mov
and
and
push
mov
ljmp
adc
repnz
jp
ljmp
pop
add
leave
fwait
inc
lret
xor
push
jb
inc
pushf
rolb
nop
loopne
cmpsl
mov
mov
loopne
sub
pop
mov
or
pop
cmp
into
fucom
push
out
or
mov
call
lock
xor
stos
jle
cwtl
std
xchg
dec
mov
mov
testl
lods
pop
test
stos
dec
pushf
inc
xorb
sub
in
and
and
and
fisttpll
fwait
xor
xor
xorl
lock
mov
inc
sub
stos
jle
mov
jo
cmp
adc
repnz
pushf
sub
cs
xchg
cmp
ret
sarl
sarl
stos
std
mov
jmp
stc
mov
mov
inc
fimull
xor
mov
inc
ret
popl
into
cmp
push
xor
and
pop
mov
cmp
sub
xor
into
xor
sbb
dec
lods
or
xor
scas
cs
aas
test
xchg
in
je
leave
jo
push
xor
add
popa
inc
and
test
sbb
outsl
xor
jp
push
stc
lods
idiv
inc
xor
pop
mov
add
fsubrp
movsl
adcb
cwtl
out
pop
adc
fwait
outsb
punpckhwd
sar
mov
loope
add
imul
jnp
mov
cmp
adc
dec
pop
sbb
sub
and
inc
andb
and
sbb
stos
or
sub
xchg
mov
shrl
xchg
lea
sarl
insb
mov
roll
imulb
xor
fcmovnb
fsub
sbb
xchg
pop
mov
int3
sub
cmp
add
aad
sub
or
popa
dec
popf
loop
daa
hlt
xchg
mov
std
mov
jb
test
sti
dec
cld
mov
fwait
stc
std
mov
pop
dec
mov
push
inc
test
aas
add
iret
sub
inc
lcall
mov
cmp
popl
popf
pop
scas
mov
inc
and
arpl
ja
fmul
sub
rorl
ror
rcrb
repnz
mov
and
int
fcompl
rcrl
pop
xchg
add
cli
xchg
sti
outsl
or
mov
div
imul
hlt
scas
iret
jno
add
mov
repnz
imul
jecxz
in
aaa
push
inc
mov
and
in
lods
lds
xchg
sbb
push
pop
lcall
pop
divb
jle
lcall
or
bound
sbb
rclb
ret
aad
stos
adc
test
or
bound
push
jb
fstpt
and
mov
loopne
clc
mov
mov
jo
lds
clc
fucom
rcrb
push
fistl
aam
out
push
sti
stos
pop
mov
outsb
popf
mov
fisubrs
aas
add
sub
pop
cmp
pop
and
sub
mov
loope
xchg
cld
loopne
mov
xchg
mov
mov
jp
cmpsl
xlat
mov
shrb
mov
jb
mov
jmp
cmc
in
imul
pop
xchg
mov
inc
push
xor
aaa
mov
or
shrl
inc
push
scas
jnp
imulb
push
mov
andb
sub
pop
leave
adc
and
push
sub
mov
inc
xchg
pop
mov
jb
xor
rolb
repnz
loopne
icebp
lea
sub
jno
test
sbb
xlat
fisubs
pushf
out
jmp
and
rcll
shl
stc
repz
out
xor
sbb
jnp
in
std
xchg
pop
xor
mov
push
inc
inc
pop
jnp
cmc
and
add
pop
data16
jne
adc
xor
mov
cmp
sub
leave
test
in
or
xchg
jecxz
xor
outsl
sbb
fcompl
xor
addr16
push
ljmp
mov
cmpsb
dec
adc
add
ret
inc
push
xchg
mov
jp
inc
popf
xor
push
lret
cmpsl
jp
mov
pop
xchg
cmp
adc
hlt
fdivr
inc
in
dec
mov
mov
inc
in
sub
xchg
lea
sub
loope
pop
movsb
sub
lret
or
mov
push
pop
dec
fnstsw
push
inc
sahf
mov
stos
or
not
mov
test
jne
out
jecxz
sbb
and
mov
sbb
aas
int
mov
mov
push
mov
nop
test
inc
in
push
hlt
sbb
jb
push
shll
dec
lds
adc
inc
sbb
jle
pop
lds
or
and
xchg
repnz
xor
roll
mov
outsl
mov
jno
pusha
push
in
scas
jge
and
sbb
bound
pmuludq
jmp
scas
out
sti
loope
pop
popa
push
movsl
loop
sbb
imul
sub
dec
loopne
fidivrs
mov
or
cld
fucom
sbb
cmp
cmp
dec
jns
sbb
pushf
mov
mov
adc
add
inc
inc
and
inc
xchg
fwait
sub
mov
leave
shrl
sub
pop
test
mov
idivb
ds
sbb
sti
xor
and
inc
add
rcrb
mov
test
icebp
repnz
adcb
and
fdivl
lods
sbbl
test
dec
sub
sbb
add
adc
mov
popf
xchg
ret
fidivrl
mov
rorl
std
xor
mov
jbe
jb
inc
inc
outsl
jp
mov
out
mov
mov
fimuls
cli
sub
loopne
stc
notl
aad
sub
notb
int
xor
stc
mov
lret
sbb
jbe
adc
out
push
movb
xor
cwtl
or
test
cmp
nop
pushf
cld
mov
je
push
popa
lods
ret
and
cmpsb
nop
mov
sbbb
mov
jp
lcall
daa
and
jecxz
and
les
into
inc
jmp
stos
cmp
jle
test
jo
fldl
xor
sub
dec
mov
jns
inc
mov
shll
imul
stos
shlb
aaa
sti
dec
pop
pop
jmp
mov
aad
xor
dec
mov
jo
jne
xor
mov
jo
repz
jle
incb
ret
adc
or
xlat
xor
jl
scas
in
or
les
mov
cmp
and
pop
cmp
lcall
fucomi
mov
loop
mov
js
or
bound
aaa
mov
pop
xor
sti
into
push
testl
ds
push
push
repz
lods
pushf
shl
sti
std
add
jo
cmp
lahf
mov
mov
int
mov
jge
testb
int
push
cmc
mov
mov
pusha
mov
xor
shll
inc
cmp
add
fbld
cli
mov
hlt
movsbl
xor
fcomps
lock
roll
scas
lret
es
rolb
xchg
add
stos
mov
sahf
jmp
aam
push
outsb
mov
js
lret
mov
mov
adc
stos
rorb
sub
add
rolb
cmpb
loop
std
mov
int
mov
daa
xchg
loop
mov
pop
push
ret
adcb
push
es
enter
cmp
inc
pop
rorl
and
es
inc
pushl
mov
adc
testb
xchg
mov
mov
lock
test
mov
pop
pushf
cmp
test
in
cmp
jno
xor
shl
pop
xor
ret
mov
imul
dec
push
nop
inc
adc
lock
jg
add
push
inc
loop
les
jle
or
lahf
jg
nop
mov
arpl
mov
nop
or
mov
jp
xchg
lods
pop
or
and
fdiv
jb
mov
xor
aam
push
movsb
sahf
fwait
movsb
xor
adcb
test
add
and
push
jo
push
or
loop
fwait
mov
stos
jmp
dec
mov
andb
mov
sub
rcll
inc
cld
loope
jmp
int
xor
inc
xor
je
push
outsb
ret
jns
in
mov
mov
mov
je
jbe
ds
jne
ss
in
jno
movsl
jmp
push
xchg
mov
pop
mov
lahf
clc
mov
push
mov
ds
pop
sbb
aad
inc
nop
aad
sbb
add
ds
std
inc
jg
jp
nop
out
mov
xchg
fcmovne
xor
dec
mov
fsubrl
xchg
mov
rclb
call
lock
mov
fidivrl
push
xchg
mov
jmp
fwait
pop
and
sbb
out
mov
inc
xor
dec
std
movsl
inc
lock
test
jle
cmpsb
lcall
loop
test
jge
sbb
int
mov
pop
hlt
cltd
in
inc
shll
push
jg
popf
pop
jae
scas
scas
xor
mov
jno
jo
mov
sub
mov
push
daa
inc
cmpsb
xor
fdivrs
int
sbb
push
sbb
cmp
sub
mov
mov
inc
popf
fld
xchg
pop
leave
sbb
lock
mov
cmp
xchg
mov
and
fistpl
loope
mov
ljmp
mov
jg
lret
lcall
push
lret
mov
sub
icebp
adc
mov
xor
xchg
cld
mov
icebp
mov
bound
cld
xchg
ss
sti
pop
mov
daa
cmp
or
and
fistl
and
mov
jge
adc
mov
sub
inc
push
outsl
xchg
xorb
mov
outsl
mov
bound
out
cmc
mov
inc
jg
ss
xchg
mov
add
jb
mov
lahf
add
enter
xchg
jp
mov
leave
aaa
shrl
es
fbstp
das
xor
cli
pop
jp
outsb
loope
mov
cmp
or
mov
dec
jbe
bound
imul
shl
add
xchg
push
jbe
imul
adc
mov
call
shrb
fsubrl
ds
push
jbe
xlat
mov
loope
mov
xchg
jnp
sub
and
adc
mov
mull
cld
nop
das
sbb
pop
divb
mov
push
xor
in
push
pop
pop
adc
bound
or
in
scas
repz
jns
call
push
sarb
leave
aad
out
fnsave
mov
sbb
mov
insl
fmul
cmp
sub
fsubp
inc
add
cmp
not
and
int
into
inc
cmc
inc
pop
and
mov
jno
cld
mov
repnz
sub
pop
outsb
or
fwait
adc
jae
mov
dec
add
icebp
bswap
sar
xor
sub
loopne
adc
cmc
repnz
mov
out
pushf
repz
imul
call
stos
mov
xchg
repz
push
adc
sub
test
jp
add
mov
jb
adc
sti
leave
pop
push
cmpsb
jecxz
push
cmp
lock
jg
int
sbb
xor
fadds
push
sbb
repnz
dec
pop
stos
loope
push
mov
aad
repnz
xor
or
icebp
fwait
rcl
mov
jecxz
pop
or
insl
call
movsl
xchg
insl
icebp
jp
das
scas
pop
and
fstl
xor
mov
lock
push
call
and
sbb
fsubs
add
fwait
out
jle
out
mov
scas
outsl
clc
cmp
jmp
xchg
ljmp
fisttpll
lock
in
mov
xchg
mov
jae
dec
lds
lcall
int
iret
mov
imul
mov
mov
ljmp
addr16
adc
lock
sbb
cmp
outsb
pushf
jno
or
xor
int3
mov
inc
add
lea
mov
add
test
dec
clc
pop
mov
push
mov
mov
sub
sbb
cmc
sarb
in
mov
mov
push
pop
cli
push
mov
pusha
out
add
mov
test
lock
fstl
pop
pop
adc
icebp
mov
mov
xorl
rcrl
fucom
pusha
mov
clc
leave
pop
add
loop
pop
or
mov
imul
js
rolb
mov
or
add
scas
fnsave
push
mov
mov
add
inc
fwait
iret
mov
cmp
add
iret
ret
aam
in
add
mov
mov
and
push
rcr
cmp
test
aas
and
aad
lret
dec
outsb
mov
dec
jb
mov
shr
push
add
mov
or
inc
addl
fisubs
cmp
cld
notl
lea
push
mov
xchg
jae
dec
ret
test
or
pop
and
dec
adc
sti
pusha
fwait
iret
lea
push
xchg
icebp
test
cmp
fcoml
lock
les
jecxz,pn
test
fimuls
mov
xor
out
or
loopne
daa
bound
sbbl
int3
jb,pn
dec
jg
hlt
fists
pop
bound
pop
jl
mov
cs
mov
or
fnstcw
sarb
lret
mov
mov
jp
std
mov
movsb
cmc
icebp
dec
lcall
push
inc
push
loopne
xchg
imul
mov
shll
icebp
fstl
xor
push
adc
pop
xchg
fidivl
jne
push
xor
cmp
gs
popf
js
popf
xor
jno
lock
sub
ss
and
aad
add
inc
jle
lods
jne
or
ljmp
inc
add
xrelease
jno
push
add
andb
xchg
and
mov
addr16
popf
or
fcoms
mov
ja
inc
xor
inc
and
popa
sub
dec
xor
bound
mov
inc
fdecstp
and
and
subb
and
xor
sub
sub
lcall
mov
out
xchg
imul
sbb
pop
adc
inc
pop
aad
in
add
loopne
sub
bound
push
adc
cmp
jmp
add
clc
cmpb
xchg
add
mov
dec
adc
aaa
call
dec
mov
sub
and
pop
pop
cld
pushf
push
jbe
imulb
add
dec
daa
inc
pushf
mov
cld
pop
dec
lock
stos
pop
or
fs
repz
in
lods
lret
mulb
adc
adcl
jbe
enter
dec
shrl
insb
and
mov
jecxz
lcall
pop
pushf
cmp
mov
xor
test
stos
popl
hlt
imul
xor
xor
xchg
adc
cwtl
inc
enter
xor
xor
mov
mov
in
mov
and
test
adc
mov
push
xorl
jne
mov
cli
xorb
push
lock
cmp
je
stos
adc
xchg
jne
fistpll
add
in
pop
inc
lcall
add
push
out
push
int3
mov
push
inc
and
mov
push
mov
mov
push
inc
ficomps
jb
enter
rcrb
add
mov
int
sub
sbb
pop
lock
jp
sbb
fcomi
jmp
shrl
pop
dec
iret
and
stos
ljmp
mov
lock
lods
in
cmc
sbb
xchg
sti
push
frstor
add
xchg
add
icebp
pusha
mov
scas
ret
jmp
adc
dec
call
push
jg
scas
repnz
shrb
ds
xor
dec
or
or
fs
outsb
scas
mov
scas
cmp
sti
and
xchg
test
mov
jmp
pop
negl
into
lock
mov
mov
loopne
icebp
sbb
or
rcl
icebp
jae
rorb
in
std
add
xor
xor
add
dec
shlb
sub
jae
sub
push
repz
icebp
hlt
repnz
jne
inc
stos
cli
subl
or
mov
push
bsr
xchg
xor
xor
and
dec
repnz
lahf
sub
pop
push
cmp
xchg
or
jo
push
daa
push
pop
pop
adc
mov
mov
cltd
sub
push
rep
dec
cmp
sarl
sub
arpl
and
rcr
mov
mov
cmpsb
or
int
aam
insb
out
js
mov
daa
xchg
mov
pop
clc
sub
outsb
or
shlb
addl
cltd
mov
test
push
std
sbb
lcall
lods
test
data16
fdivp
push
inc
rcl
and
lahf
ss
jo
mov
pop
pop
inc
cli
sbb
adc
mov
in
add
push
fidivs
dec
jle
add
int
jns
mov
rolb
add
repnz
int
xor
js
lock
ljmp
loop
jno
push
adc
aas
pop
sbb
mov
movsb
insl
add
mov
mov
adc
xor
inc
dec
sbb
fwait
pop
cmp
lds
sbb
aas
shl
dec
cmp
sti
bound
fidivrl
adc
arpl
sbb
mov
out
push
mov
loope
or
in
sahf
xor
dec
mov
addb
imul
dec
in
cmp
and
cmp
faddl
aad
fiadds
testl
and
cmpsl
mov
xor
shll
mov
ja
cmpsb
stos
xchg
xchg
fidivl
aas
adc
cmp
ds
ljmp
sbb
movsl
mov
sarl
push
lock
sti
adc
aas
and
mov
loop
mov
or
add
pushf
ret
jno
mov
enter
xchg
int
xor
inc
add
mov
bound
mov
dec
mov
ljmp
leave
jbe
adc
mov
cmp
stos
pop
pop
xor
lock
push
mov
adc
popf
jmp
lods
pushf
jae
mov
stos
cmp
pop
xchg
or
shrl
fists
pop
je
sbb
jne
sbb
jno
mov
or
adc
and
cmp
xor
jmp
mov
cltd
mov
xlat
loop
mov
mov
imul
scas
loopne
dec
pop
rcrb
outsb
cwtl
and
cmp
lds
xchg
repnz
adc
outsb
imul
xlat
cmp
xchg
mov
jbe
cmp
sarl
xor
pop
jb
popa
in
jb
cmp
icebp
sbb
mov
loop
push
test
out
pushf
mov
push
int
xchg
fwait
cmp
addr16
dec
push
and
and
ss
pop
lcall
shlb
test
lret
mov
inc
jge
sbb
mov
push
push
ret
jne
jmp
mov
sti
xlat
xlat
insb
ljmp
mov
jl
stos
xorb
adc
inc
and
pop
stc
cmpsl
push
xchg
pop
out
aad
jne
ffree
sbb
mov
and
mov
sbbb
icebp
cwtl
or
and
sub
push
xor
mov
mov
jecxz
icebp
sbbl
jnp
sub
lahf
and
rcr
lock
mov
js
mov
mov
jge
adc
jl
xchg
pop
fwait
scas
int3
mov
mov
pop
sbb
xor
lods
not
sbb
mov
inc
push
mov
repnz
sti
xchg
cmc
mov
lcall
xchg
pop
loope
add
xchg
fwait
lea
cwtl
es
adc
lret
fimuls
mov
jge
mov
lock
jecxz
fsubs
cmp
imul
jb
fsubs
loop
mov
add
pop
adc
adc
pop
out
sti
jnp
push
adc
sbb
je
ret
mov
ljmp
mov
sarb
jnp
in
xor
mov
stc
xchg
sahf
bound
cli
sbb
adc
fistl
ds
loope
mov
add
test
lods
mov
add
cmpsb
and
sub
cmp
cli
arpl
call
scas
loop
and
sub
ds
dec
insb
adc
and
xchg
cltd
das
lret
mov
sub
shrl
mov
lea
pusha
mov
and
add
imul
stos
stos
mov
lahf
push
mov
add
loop
arpl
pop
xchg
leave
sub
shll
cmpsb
andl
arpl
push
cmpsb
dec
xor
lret
pop
mov
pop
shrl
pop
cld
mov
mov
push
mov
sbb
imul
loopne
das
inc
mov
inc
or
dec
arpl
ja
cmp
lret
dec
and
mov
test
jb
adc
das
and
sbb
popa
lea
jno
mov
psubw
loop
or
aaa
xor
and
addr16
dec
push
outsb
push
pop
aas
cs
mov
cmp
mov
jb
repnz
adc
inc
mov
dec
adc
mov
xchg
nop
and
dec
sub
icebp
hlt
lods
mov
pusha
sti
pusha
and
rcrb
mov
mov
leave
mov
andb
int
mov
je
jl
popf
xchg
es
jge
in
stos
loop
sti
mov
popf
lods
arpl
sbb
adc
mov
dec
pop
mov
pop
xchg
mov
push
inc
ss
cld
mov
les
shlb
sub
add
leave
mov
mov
ljmp
jne
sub
mov
in
bound
loopne
test
pop
pop
xor
xchg
push
add
movb
pop
sbbl
xchg
inc
sub
repnz
std
movsl
mov
rolb
inc
and
stos
and
push
scas
cmp
call
mov
push
mov
pop
mov
xchg
dec
test
sub
cmp
jp
das
sbb
or
lret
kxorb
add
repz
test
jno
cli
shlb
jecxz
enter
inc
ljmp
repnz
vrcpps
pop
out
xor
push
and
ljmp
dec
rorb
push
or
dec
adc
pop
imulb
xchg
mov
cmp
sub
sub
dec
jo
adc
sti
or
push
rcll
inc
mov
lock
fimull
and
aas
call
xchg
shll
jecxz
lret
mov
into
int3
inc
and
insl
pop
push
lcall
pop
and
cld
sub
sbb
dec
pop
repnz
das
mov
daa
mov
inc
cwtl
bound
or
bnd
inc
dec
xor
push
inc
mov
aaa
int
xchg
sbb
jb
iret
sub
je
loopne
aad
das
jmp
ljmp
icebp
cmp
pop
add
xor
stos
pop
pushl
jle
mov
xor
mov
lods
adc
jecxz
es
fwait
inc
jbe
popf
jmp
fidivrl
push
xor
inc
imul
push
imul
shrl
test
cltd
cmc
lods
sahf
scas
pop
aas
xor
out
call
fbstp
fimull
repz
mov
mov
in
mov
cli
push
adc
mov
push
mov
pop
xchg
aas
in
add
rorb
sti
mov
push
mov
jnp
adc
aaa
mov
xor
lock
fiaddl
mov
loopne
jle
and
mov
cmp
cmpsl
das
adc
push
inc
sbb
bswap
int3
pop
jb
sbb
out
imul
loopne
aam
sbb
cmpxchg
adc
xchg
mov
pop
sub
xor
inc
pop
inc
mov
xchg
xor
jns
stos
mov
in
and
aam
in
adc
fnstenv
insb
jo
push
adc
ud0
mov
dec
mov
mov
inc
dec
sub
lea
movsl
int
popf
jae
roll
mov
mov
mov
outsb
notb
sbb
addl
pop
adc
jle
dec
ficoml
orb
imul
loop
xchg
cmpsb
repnz
mov
pusha
cmp
mov
stos
or
inc
test
jmp
or
jae
push
xor
xchg
push
xor
sti
jno
push
xchg
cs
mov
out
ss
notl
push
mov
xor
jb
mov
mov
or
iret
sbb
mov
ja
or
adc
jb
adc
lea
cmpsb
imul
scas
fdivr
divb
adc
scas
mov
lock
addl
out
pop
mov
stos
out
pushf
fdivrs
mov
loope
shrl
mov
cld
pop
mov
push
std
dec
shrb
cmp
push
sub
jne
add
mov
jle
sub
jp
imul
sbb
out
mov
aas
int3
fidivrs
mov
jmp
loopne
jae
test
jb
mov
ret
sub
hlt
jb
cmp
arpl
dec
mov
scas
mov
pop
mov
repz
movsb
dec
int
jle
js
cmp
mov
cli
xchg
inc
dec
cmpsb
add
in
dec
mov
sti
xor
xor
dec
add
mov
mov
filds
in
ljmp
in
push
mov
imul
outsb
dec
mov
and
fsts
dec
or
pop
out
sbbb
insl
lahf
push
scas
mov
loopne
mov
pushf
repnz
fistpl
sub
pop
clc
aad
dec
cmp
add
cmpsl
xor
and
adc
sti
ljmp
push
cli
sub
out
icebp
sbb
mov
fmull
sbb
hlt
in
lds
aas
rorl
mov
aas
arpl
cltd
mov
and
sbbl
jge
or
xchg
cmc
mov
aas
dec
sbb
insb
jb
lret
jmp
fidivrs
fisttpll
mov
adc
in
movntq
rclb
xor
cmpl
aas
icebp
aam
clc
pop
sub
mov
mov
adc
stc
and
mov
into
lret
lods
mov
arpl
fldl
sbb
mov
mov
scas
adc
sti
push
adc
add
ljmp
and
scas
subl
shlb
stc
sbbl
ficoml
repz
mov
xchg
nop
dec
pop
daa
lock
cmpl
loopne
cs
push
movsb
push
clc
jmp
dec
mov
repz
lea
std
movsb
fbstp
shrl
incl
cmpsl
pop
push
cld
adc
mov
shll
or
add
jl
adc
call
aaa
pop
and
mov
cltd
mov
sbb
push
shrb
mov
fdivrs
ds
cmpsl
mov
nop
hlt
pusha
or
arpl
rorl
jno
pop
aas
int3
movsb
or
adc
mov
sub
ja
idiv
push
inc
stos
repz
mov
sub
shll
inc
jne
dec
push
lods
dec
pop
pop
scas
insl
mov
sub
jnp
and
or
lea
mov
std
in
mov
inc
leave
arpl
aaa
jl
icebp
or
lock
hlt
jg
push
fcmovbe
rcl
push
mov
add
sar
adc
into
push
pop
xor
sub
popa
bound
mov
dec
push
pop
pop
shlb
pop
test
addr16
sbb
dec
lcall
roll
mov
adc
mov
lret
dec
movsb
mov
into
shr
cs
sub
mov
and
cli
jle,pn
xorb
mov
add
je
dec
push
jecxz
subl
inc
out
imul
or
mov
sbb
inc
or
jno
ret
ss
push
mov
sub
xchg
mov
clc
and
push
movsb
xor
push
mov
or
lods
pop
adc
je
jno
lret
mov
jns
pushf
adc
and
int3
stc
shr
out
xor
fstps
dec
jb
cmc
jge
inc
leave
jnp
out
mov
or
cli
pop
xor
push
pop
mov
adc
xchg
data16
push
popf
jnp
mov
mov
je
ret
push
cmp
push
mov
and
fisttps
jp
mov
sbbb
and
xchg
mov
lea
adc
sbb
out
shl
idivl
inc
lret
add
jb
pop
xchg
mov
cmp
lcall
das
scas
dec
inc
and
pop
sub
push
lahf
daa
pop
mov
clc
add
inc
mov
daa
add
jae
adc
stc
dec
push
je
aad
sbb
popf
scas
push
fistps
inc
mov
std
out
mov
pop
sub
popa
sarb
and
sub
out
pushf
push
repnz
int
push
loopne
jmp
xor
jmp
je
mov
aaa
mov
xor
mov
sub
iret
loope
aas
cmpb
hlt
ja
shrl
jne
test
roll
jge
pushf
xor
mov
mov
lods
in
pusha
jmp
fs
pop
jb
ret
xchg
inc
outsb
mov
scas
xchg
xchg
adc
and
repnz
push
inc
adc
lea
xchg
xchg
cwtl
shrl
jg
xchg
lret
jne
cmp
mov
mov
and
pop
mov
stos
bound
mov
xchg
jae
pusha
mov
jb
jmp
fstl
sub
aas
mov
jle
mov
dec
xchg
sarl
icebp
or
stc
aas
ljmp
xor
pop
cltd
xor
push
mov
or
negb
pop
cmp
pop
mov
pushf
jne
or
xchg
sbb
cmp
cmp
scas
stos
rorb
mov
jno
mov
test
jae
xchg
mov
mov
inc
xor
push
loopne
loop
cli
pusha
popf
pushf
jae
lock
add
call
xchg
dec
xchg
loop
cmpl
xor
dec
mov
push
push
sub
fnsave
jmp
sbb
daa
les
rcl
dec
sub
dec
arpl
movsb
xor
aam
pop
mov
and
and
out
popa
sahf
lahf
add
fidivrs
pusha
ss
add
in
fcomi
clc
test
pop
iret
ss
fcoml
pushf
jbe
cltd
dec
lods
lds
popl
and
movsb
lret
push
inc
jge
in
daa
adc
fimuls
sub
cld
mov
xchg
pop
fisttpll
add
xor
xor
jmp
pop
dec
pop
push
movsb
jno
cmp
fnstsw
insb
cmpl
and
sub
xor
jb
cld
mov
add
push
adc
mov
adc
sar
inc
in
push
fmul
fdiv
cli
aad
enter
hlt
adc
imulb
xchg
sub
xchg
sbb
mov
in
int
cli
mov
jnp
inc
inc
fcompl
adc
cli
jbe
arpl
aad
pop
adc
jl
add
out
sahf
orl
aam
mov
sub
testb
imul
push
mov
jge
adc
adc
fisubs
rolb
imul
xor
mov
je
sbb
sbb
imul
mov
mov
dec
mov
aam
lock
sbb
in
sbb
cwtl
and
and
pop
imul
and
ds
clc
pop
cmp
lds
cltd
cmpb
loop
push
lcall
add
das
jb
and
mov
bnd
cmp
mov
sub
icebp
mov
cli
inc
dec
mov
out
jb
mov
cmp
in
mov
mov
jle
or
ds
repz
js
addl
add
out
pop
pop
in
test
add
fsubrl
push
push
repnz
lock
adc
and
aas
adc
adc
andl
das
nop
inc
sbb
mov
shlb
lret
iret
sti
mov
insb
out
or
jb
je
mov
push
test
movsb
scas
ss
outsl
pusha
mov
xor
and
xchg
xorl
xor
mov
into
outsl
xchg
inc
sub
mov
sti
push
aad
mov
rorb
mov
out
inc
fsubs
std
xchg
push
movsb
push
jae
mov
jbe
out
mov
pop
mov
leave
sub
das
xchg
cmp
andb
jge
adc
or
dec
andl
add
mov
in
icebp
cltd
das
or
aaa
mov
inc
xor
dec
xor
and
pop
jle
inc
xchg
lret
movsb
dec
dec
inc
mov
icebp
pusha
cld
bnd
stos
or
mov
xor
jp
into
rclb
stc
outsl
loopne
cmp
jae
add
call
ljmp
adc
enter
test
sbb
xor
cmp
fwait
subb
cmp
ljmp
into
cmp
add
cmp
fidivrl
movsb
out
faddl
sti
sbb
outsb
or
ret
xchg
leave
aad
sbb
cmc
loopne
in
xchg
xlat
jnp
xor
daa
aam
add
ret
mov
dec
dec
out
and
sbb
out
sahf
push
mov
lahf
push
dec
inc
pop
scas
mov
andl
loopne
bswap
adc
jns
mov
sbb
cmp
aam
addr16
xchg
pop
add
pusha
mov
xchg
jl
sub
xor
sbb
xchg
scas
lret
dec
sbb
hlt
sbb
push
sub
nop
mov
xor
scas
mov
mov
sbb
mov
in
stos
out
mov
or
pop
fstpl
fs
sub
ror
ds
sbb
push
sti
pop
push
xchg
xor
sub
shll
mov
cwtl
adc
pop
sub
add
cmc
cmp
ds
data16
xor
mov
sarb
lret
adc
sti
push
addr16
mov
adc
jg
xor
pop
in
and
test
sbb
inc
movsl
fisubrl
popw
fiaddl
sub
lds
jb
test
imul
pop
sub
xor
das
push
test
hlt
ljmp
loopne
sti
loop
shr
xor
jge
mov
adc
inc
jle
sarb
cwtl
lcall
stos
jo
sub
lea
lock
idiv
add
dec
movsb
mov
fsubr
sub
xchg
and
jb
out
repnz
jo
xor
sub
clc
mov
outsb
adc
roll
jne
call
mov
push
pop
loopne
ror
mov
std
in
ret
addb
arpl
and
shll
push
xchg
dec
lret
push
int3
mov
mov
test
pushf
jle
mov
sbb
sbb
dec
pushf
xor
sarb
adc
cmp
loopne
xchg
divl
loopne
mov
out
les
mov
insl
inc
mov
clc
inc
mov
adc
stos
ljmp
test
or
mov
xchg
inc
push
les
insl
mov
repz
xlat
pop
scas
mov
lahf
mov
mov
or
push
xor
mov
mov
int
inc
fldl
gs
mov
mov
outsb
dec
lock
rclb
xchg
outsl
or
mov
sbb
jne
xor
aad
add
into
ret
loop
bound
rdtsc
test
test
popa
scas
sub
mov
jg
jo
out
push
inc
imul
pop
mov
pop
sub
jg
push
and
adc
cmpsb
add
es
push
movsl
out
xor
pop
pop
outsl
dec
and
fsubs
add
out
push
sbb
jno
sbb
pop
pop
add
mov
aam
sahf
sbb
jg
adc
loope
flds
xchg
repz
test
sbb
imul
cmpsl
sti
subb
rcl
dec
icebp
stos
mov
jo
and
jb
sbb
lea
mov
fs
cmpsb
int
xor
add
push
ret
es
adcb
pop
jno
inc
add
pop
mov
add
outsl
aas
inc
fisubs
xlat
mov
or
icebp
ds
xchg
das
pop
icebp
icebp
mov
lds
lcall
repz
test
pop
mov
xchg
ds
push
mov
sti
xchg
mov
inc
cmc
add
int
imul
popf
ss
xor
xchg
je
ret
shlb
mov
lea
into
mov
xchg
test
shlb
arpl
push
pop
xor
es
idivb
test
leave
std
cmc
pop
cld
pushf
inc
mov
jp
push
mov
pop
repnz
jns
push
sti
pushf
xchg
loopne
add
mov
inc
mov
mov
lcall
stos
mov
xchg
outsb
mov
je
mov
les
mov
cmp
fdivrs
jmp
icebp
das
and
fincstp
mov
jae
pusha
pushf
nop
inc
add
mov
lds
jo
lahf
nop
leave
add
fidivrs
cmpb
cmp
adcb
das
ret
shll
cmp
sarb
sarb
sbb
add
inc
push
and
or
call
outsl
sub
cmpb
out
popf
stos
mov
push
add
daa
nop
sahf
jmp
pushf
ret
push
js
mov
fnstsw
adc
mov
push
adc
cli
out
ss
rcrb
or
stos
cmp
ficompl
ret
ficoml
arpl
adc
sbbb
mov
jle
and
repz
sarb
jns
mov
mov
lock
xchg
push
fidivrl
shll
movsb
adc
sbb
mov
xchg
imul
mov
fdivp
sahf
cmp
mov
jns
sbb
and
adc
shl
pushf
add
add
pop
xor
nop
add
mov
dec
mov
incl
pop
mov
sti
mov
mov
mov
xorl
and
xchg
push
bound
imul
cwtl
adc
shlb
push
shlb
mov
aad
sbb
adc
add
sbb
adc
ficoms
dec
pop
inc
lods
fwait
iret
cmp
fidivl
sub
ss
adc
repnz
je
test
js
stos
addr16
insb
into
pushaw
loop
ficoml
inc
ficoms
jnp
lods
mov
sbbl
loop
in
mov
adc
pop
or
incl
sbb
idivl
cmpsb
dec
movsb
dec
mov
stos
pop
mov
adc
jnp
push
mov
das
out
fbstp
fidivl
push
fmuls
mov
mov
fldcw
cmp
cmp
adc
adc
sub
fisttps
adc
stos
and
sbb
mov
mov
leave
sub
sbb
test
aam
xchg
mov
loope
ljmp
gs
jo
jb
int
repnz
nop
sub
jno
mov
push
loopne
jbe
cmp
loop
scas
xchg
aas
mov
aam
cmp
sub
sbb
mov
push
outsb
movsl
hlt
iret
mov
jg
pop
test
aad
lock
mov
sub
or
inc
sbb
push
enter
jae
fdivp
xor
mov
xchg
sbbb
stos
loope
jmp
mov
cmpsl
inc
xor
insl
mov
lahf
inc
stos
mov
mov
jmp
rcrb
es
aaa
sub
xchg
pop
or
cmp
pop
lods
rolb
loop
and
add
dec
ficomps
std
push
mov
movsb
push
loopne
jle
loopne
cltd
adc
nop
mov
xor
mov
add
hlt
push
rorl
ss
xor
xchg
or
es
call
loopne
inc
cmpsb
andb
push
inc
mov
divl
jl
ss
xor
or
mov
xor
movsl
add
mov
cmpsl
int
out
mov
xchg
lea
xchg
lret
scas
pop
in
mov
jmp
in
fnstsw
addr16
sarb
aaa
cmp
sub
or
lock
pop
or
pop
test
xor
inc
sub
mov
js
or
mov
cs
inc
movl
imulb
movsb
or
out
lret
fwait
push
testb
inc
mov
test
add
push
sbb
sarl
or
cwtl
or
sbbl
loopne
shll
aas
and
push
stos
push
mov
push
and
dec
sti
das
sbb
xchg
test
subl
nop
pop
mov
lea
dec
movsb
dec
clc
jb
adc
mov
fildll
andl
out
mov
push
mov
aaa
adc
bound
clc
ret
das
mov
test
xchg
push
and
push
repnz
mov
xor
imul
ljmp
inc
adcb
fidivrs
sahf
js
sub
pop
jnp
mov
loope
sbb
mov
sbb
mov
xchg
out
stos
dec
jge
mov
arpl
adc
jo
fistps
mov
loop
mov
out
sub
sub
and
in
rcll
jae
repnz
fs
sbb
scas
mov
mov
lcall
jbe
pop
inc
rcll
daa
xchg
pop
div
out
add
lss
or
out
pop
mov
or
repnz
call
xchg
ret
ret
mov
ds
or
jp
lods
ficoms
sbb
push
mov
frstor
sbb
out
sti
popa
adc
cmpsb
mov
push
sbb
ret
clc
insb
imul
mov
pushl
mov
xchg
inc
js
stos
xor
cltd
lcall
icebp
hlt
adc
xchg
stc
jno
jecxz
aaa
add
call
test
fldl
cmpsb
icebp
pop
rcrb
stos
or
out
out
arpl
sbb
ljmp
adc
cmp
pushf
xorb
aaa
push
xorb
loop
and
aaa
mov
enter
xchg
repz
push
shlb
sbb
sbb
pop
lret
in
aam
sub
fdivrp
inc
out
and
jle
iret
mov
gs
xor
sub
fwait
dec
adc
xchg
shl
out
xor
ss
push
insl
and
pop
test
fisubs
test
andb
add
jge
ds
ficompl
mov
sbb
xor
lds
arpl
sahf
xchg
add
adc
xor
mov
push
loope
or
stos
imul
sub
inc
movsl
mov
ss
cld
pop
mov
add
fdivrp
fildl
fdivrs
mov
outsl
mov
and
jo
icebp
test
stos
outsb
adc
std
mov
push
sub
mov
mov
inc
mov
scas
cmc
xor
rolb
lcall
mov
mov
xor
movsb
rorb
inc
mov
inc
dec
cmpsb
rorl
mov
lds
xor
pop
cli
icebp
xchg
ljmp
mov
outsb
mov
clc
dec
jg
mov
out
outsl
shrb
sub
cltd
inc
mov
rcrl
xchg
mov
jmp
subb
icebp
pop
jmp
dec
xchg
aaa
movsb
mov
gs
nop
sbb
mov
mov
xor
addb
inc
aam
add
loopne
cli
mov
mov
jne
xchg
bnd
xchg
add
movsb
bound
sbb
lea
lcall
int
lcall
cmpsb
cmc
movsb
cli
movsb
jl
cmc
and
push
mov
push
ret
les
xor
adc
testl
cwtl
bound
jne
stos
add
icebp
movsb
cmp
jb
cli
xor
movsb
dec
ret
add
dec
and
push
inc
mov
sbb
jmp
pop
rcrl
insl
jmp
pop
js
arpl
sbb
ja
mov
add
imul
push
pop
stos
or
pop
test
xor
and
ret
movsb
lcall
cli
sbb
xchg
sub
mov
icebp
ret
mov
aaa
shll
fwait
xor
sub
sbb
cmp
sbbl
shrb
stc
pop
cmp
and
pop
cmp
mov
loope
adc
sti
stos
sub
xor
imul
fisubrl
add
je
push
lret
add
sti
ljmp
or
xchg
out
lock
sbb
test
in
mov
leave
xchg
aad
scas
into
cmpsb
xor
jecxz
mov
out
out
add
adc
fidivs
adc
mov
sbb
or
add
pop
mov
mov
sub
dec
outsl
push
inc
mov
repz
stc
lcall
aam
xorb
into
sub
mov
inc
dec
sub
shlb
add
xor
shll
cmp
mov
and
repnz
mov
mov
add
mov
nop
in
lods
adc
sbb
idiv
ret
pop
mov
and
arpl
out
mov
push
ljmp
adc
jae
xchg
aad
lret
mov
stos
ret
inc
sahf
into
scas
inc
adc
repnz
xor
xchg
icebp
aad
dec
mov
ret
fidivs
xor
lea
add
sbb
stos
mov
inc
cmp
mov
es
mov
mov
cli
outsl
adc
loop
mov
and
mov
outsl
jge
adc
mov
cs
mov
rclb
in
xchg
outsb
jb
inc
xchg
cmp
fldl
or
ds
mov
jnp
hlt
sbb
jbe
rcr
fadd
or
and
mov
pop
cmp
shrb
xor
loopne
inc
popf
push
jb
jl
push
imul
jecxz
and
icebp
xchg
mov
in
inc
pop
jb
hlt
std
jo
fsts
scas
pusha
jb
adc
popl
gs
mov
cs
sbb
ret
cmpsl
or
lock
shrl
pop
js
subb
sarl
dec
mov
stc
inc
push
mov
shll
adc
call
shlb
mov
dec
out
cmpsb
icebp
clc
mov
pop
icebp
xchg
mov
shlb
lret
add
int
aaa
cmc
push
jmp
sbb
pushf
lea
dec
dec
mov
rorl
xchg
inc
imul
xchg
adc
xor
mov
add
sub
pop
add
xor
rorb
pusha
jmp
lds
aas
push
pop
adc
testb
mov
and
mov
loopne
xor
cli
aaa
arpl
cwtl
rcll
ret
pop
push
mov
inc
fldenv
adc
or
shlb
stc
icebp
ficomps
out
aad
sub
jae
sub
stc
int
sahf
rol
xchg
or
xchg
sbb
dec
sub
sbb
push
repnz
sbb
cld
xchg
push
jg
lea
and
mov
ds
adc
shrl
outsl
mov
pushf
scas
hlt
js
mov
ret
jmp
pop
mov
fnstsw
jne
jge
stc
out
xchg
cmc
mov
stos
in
add
sub
lds
mov
cmpsb
fs
cs
inc
cs
mov
in
ss
adc
xor
mov
frstor
aad
out
std
xor
jge
jecxz
dec
mov
cmp
cmpsb
mov
mov
adc
mov
or
inc
cmp
ret
mov
mov
lea
sbb
pop
adc
add
jb
dec
jge
lods
in
sbbb
sub
adc
cmp
mov
fcoms
mov
xor
or
or
mov
push
ret
lock
jp
ss
movb
in
mov
ja
mov
and
adc
loop
std
aaa
and
fisttps
cs
in
jns
rorb
cmp
mov
adc
inc
pop
mov
fstl
dec
xchg
lock
repnz
lds
cmp
mov
cli
nop
or
adc
mov
rorb
cld
cmp
cmpl
pop
cmc
xchg
mov
cmp
jo
xchg
and
js
pop
jnp
fdivs
and
out
cli
nop
aad
mov
bound
and
mov
stos
mov
pop
push
jnp
jg
gs
or
andb
shll
add
sub
or
jns
mov
loop
test
outsl
mov
pop
push
push
testb
push
sahf
dec
xchg
push
stos
mov
jnp
mov
bnd
out
popa
xchg
pop
in
je
push
adc
lea
mov
xor
mov
daa
rep
mov
addl
cmpsb
pop
lret
mov
fidivs
shrl
cmp
adc
jb
or
dec
daa
jmp
in
pop
repnz
rorb
push
mov
cmp
arpl
xor
psubusb
stos
das
clc
xor
jge
pop
lcall
cmp
stos
or
mov
rorb
inc
push
in
icebp
xor
int3
add
jae
and
cmpsb
fldlg2
hlt
lahf
xchg
xor
mov
lcall
cld
cvtdq2ps
lock
stos
and
repz
push
mov
sbb
stos
sub
xor
xchg
pop
mov
jmp
or
push
aas
sbb
pop
cmp
adcb
mov
inc
jns
fsubrs
mov
mov
sbb
mov
cmp
popf
push
leave
sbb
sarl
popf
movsb
jae
mov
ret
push
pushf
cld
jp,pn
mov
hlt
shll
add
jne
push
mov
pop
or
mov
adc
imul
cmp
push
frstor
inc
push
adc
jmp
mov
stc
sub
jb
mov
das
xor
scas
push
imul
clc
mov
and
mov
inc
shlb
bound
mov
jne
fcoms
inc
adc
shrb
cmc
fcompl
xchg
das
fnstenv
mov
jo
xor
or
mov
jp
mov
adc
cmpl
test
mov
movsl
xchg
add
ds
fistpll
pusha
es
add
xlat
adc
ret
jb
xchg
fsts
cmc
push
fcoml
mov
adc
mov
mov
data16
jle
inc
mov
in
loope
adc
mov
repz
jl
cmpsb
aaa
imul
cmp
inc
adc
sub
add
je
inc
loop
jne
addb
and
xor
xor
fbstp
mov
into
push
enter
icebp
sbb
sub
mov
js
sbb
dec
int
mov
sahf
clc
mov
dec
pushl
sub
pusha
inc
xlat
mov
adc
lock
xor
push
mov
addr16
dec
loopne
push
arpl
ds
sti
xor
fs
fwait
dec
jb
pop
subb
cltd
repz
push
sub
xchg
adc
adc
fisubl
mov
test
dec
hlt
push
push
shr
cmp
mov
sar
js
rorl
in
cmp
inc
inc
es
lock
and
push
add
fcompl
mov
mov
mov
clc
sub
bound
or
dec
in
mov
sbb
insl
aas
xchg
and
pop
jbe
mov
mov
push
xor
lret
sbb
and
outsb
or
mov
adc
int3
sbb
clc
cld
in
fisttps
rorb
adc
mov
and
mull
pop
cmp
sbb
xlat
xchg
push
ds
scas
loopne
mov
outsb
adc
xchg
lret
jne
loop
pop
test
adc
push
push
mov
inc
add
mov
repnz
jno
stc
dec
and
loope
mov
jns
or
dec
pop
xchg
mov
dec
xor
insl
push
mov
xor
xchg
repz
pop
mov
push
jg
sbb
jnp
fcom
jno
sbb
popa
push
stc
int
add
notl
in
adc
fwait
inc
dec
je
jmp
and
clc
pop
dec
fcoml
jb
fidivs
adc
push
sahf
inc
shlb
lock
xchg
outsb
or
add
fisttpll
pop
pop
inc
and
fwait
mov
mov
and
and
add
mov
loope
mov
adc
mov
and
mov
mov
dec
and
test
loopne
adc
adc
adc
jle
loopne
xor
xchg
dec
dec
cmp
inc
dec
cld
aas
xchg
push
std
cmp
cmp
and
cltd
inc
add
nop
nop
sbbb
dec
or
dec
cmp
imul
das
jg,pt
pop
sub
notl
pop
and
test
fwait
stos
out
arpl
rorb
fldt
jl
jae
sbb
shlb
xor
pop
std
loopne
sbb
imul
jbe
aaa
cld
mov
jmp
xchg
xchg
sbb
fstps
mov
jge
pop
and
hlt
or
xchg
mov
jmp
add
push
ljmp
and
icebp
sbb
enter
and
adc
lret
pop
jmp
add
jbe
cmp
stc
cmp
push
dec
call
scas
mov
sub
xor
adc
adc
sbb
test
lahf
je
xchg
sbbb
pusha
mov
mov
lret
ljmp
mov
jg
mov
stos
mov
jecxz
imul
sti
inc
sbb
xor
or
adc
and
mov
jp
orb
lods
popf
mul
mov
cmp
out
stc
jecxz
out
jle
pushf
pushl
xor
xchg
ss
int
push
lock
and
inc
jno
mov
data16
bnd
mov
fldcw
lea
pop
shlb
add
xor
not
je
cld
daa
sbb
xchg
ljmp
xor
std
cmc
jnp
ret
pop
and
test
aaa
fldenv
adc
jns
mov
cli
cmpsb
mov
leave
lret
adc
stc
dec
cmp
out
movsb
jbe
sub
andb
or
pop
leave
pop
std
ss
subl
js
mov
ss
movsl
insl
add
jnp
pushf
sub
movsb
pop
push
xor
push
lock
and
xor
es
add
movsb
iret
out
rcll
aad
push
xchg
and
aam
add
movsb
pop
cld
mov
ror
xchg
pushf
imul
xor
mov
aaa
loope
fildll
mov
cmpsb
in
test
out
aaa
and
sbb
and
call
xchg
pop
out
xchg
lret
sub
cmp
cmpsb
inc
add
les
push
inc
push
dec
mov
vpunpcklwd
cmp
adc
stc
clc
mov
pop
arpl
sbb
jno
roll
sbb
and
mov
aas
cld
add
ja
mov
jb
sub
pop
loope
mov
outsl
aas
pop
xor
adc
mov
dec
adc
cli
mov
inc
jns
mov
sub
cmp
dec
mov
cmp
push
adc
sub
ret
outsl
xor
sbb
test
jb
mov
dec
lcall
mov
repz
aas
imul
inc
pop
and
int3
popf
mov
cmp
jne
sub
add
adc
rcll
xor
jb
xor
mov
add
xchg
or
je
sahf
stos
mov
or
mov
popf
bnd
mov
jle
movsb
sub
xchg
mov
mov
ja
sub
stos
xor
adc
adc
push
push
push
jo
repnz
mov
pusha
in
mov
pop
mov
push
pop
and
test
adc
call
fnstenv
je
out
mov
mov
push
mov
and
stc
movsl
xchg
jns
push
xor
pop
push
xrelease
or
imulb
mov
fimull
leave
int
mov
shl
xchg
pop
adc
pusha
sti
push
xor
movsl
mov
fwait
rcll
pushf
adc
mov
push
sbb
pushf
cmp
mov
int3
dec
mov
popf
mov
add
jle
cwtl
xor
shl
bound
add
inc
sub
jg
fsubs
scas
je
fistpll
and
sti
jmp
and
jp
leave
pop
call
pop
sub
xlat
repnz
mov
xchg
xchg
adc
shlb
ljmp
hlt
push
scas
push
lret
mov
stos
mov
loope
push
int3
mov
fdivp
sbb
cpuid
into
cmp
std
fidivrs
xor
dec
imul
pop
cmpsb
cmp
push
sarl
sbb
lds
pop
je
mov
xchg
jmp
xor
mov
stos
inc
in
fsubrp
jmp
out
test
test
pop
fadd
lret
dec
sbb
push
into
into
stos
xchg
push
mov
sbb
xchg
push
shl
xchg
int
shlb
and
xor
daa
fidivrl
int
mov
adc
pop
out
aaa
rorb
jo
sbb
hlt
lock
pop
adc
mov
pop
jbe
into
cld
adc
sbb
cmpsl
sub
xor
and
cld
aam
mov
ret
adc
xchg
push
movl
sub
sub
lcall
dec
lods
lock
xchg
sbb
add
mov
rol
cmp
dec
mov
mov
rorb
inc
sarb
xchg
jmp
mov
fsubl
dec
mov
sbb
sub
arpl
aaa
xor
mov
pop
jae
out
jae
mov
in
ficompl
pop
pop
out
std
repnz
add
mov
mov
mov
xor
and
popa
in
ss
imul
movsb
mov
add
adc
and
scas
out
negb
dec
lods
sahf
add
mov
bound
loope
sub
in
add
fnsave
xchg
bound
aas
and
icebp
or
jp
mov
sbb
and
icebp
push
mov
push
pop
popf
lcall
lcall
aam
ds
mov
jae
imul
sub
mov
inc
jmp
and
xor
xchg
mov
aaa
test
dec
mov
jle
and
mov
lods
lock
rcr
sub
push
jle
shlb
lods
jle,pt
mov
jns
or
sti
jg
loope,pn
ds
jbe
sti
scas
push
stc
xchg
adc
iret
scas
arpl
decb
sahf
fnstcw
outsl
push
insl
inc
lret
ja
fiaddl
push
jo
cli
insl
hlt
subl
pop
jnp
or
stc
and
fwait
or
xchg
mov
sub
mov
xor
icebp
mov
cmp
std
sarw
popf
ljmp
and
fsin
inc
fcmovu
mov
pop
mov
pop
jle
mov
mov
divb
fnstcw
mov
and
mov
aad
cmp
idivb
sbb
adc
mov
mov
bound
adc
lret
xchg
mov
scas
shrl
sahf
jmp
mov
int
pushf
lods
or
adc
mov
jo
ds
stc
stos
aas
in
pop
and
sub
inc
sahf
into
cmc
dec
scas
hlt
mov
sbb
mov
adc
adc
and
sarb
shll
mov
sahf
je
sbb
nop
loopne,pt
outsb
adc
rcl
fdivl
push
and
and
nop
pop
rol
adc
dec
scas
dec
repnz
addr16
rol
sub
test
push
sbbb
xor
sub
or
dec
and
and
jg
mov
push
push
scas
rcl
xor
xchg
shlb
lods
sbb
jmp
cmpsb
icebp
dec
stos
and
dec
jbe
test
and
mov
xchg
sbb
leave
xchg
and
nop
xchg
fldl
nop
xor
pop
xchg
jb
cmp
adc
mov
icebp
mov
stos
jne
stos
xor
test
jle
lcall
sbb
mov
bound
xor
add
sarb
cli
adc
mov
and
lock
addb
mov
sub
push
xchg
pop
jmp
lock
sar
subb
rcr
xchg
sbb
aas
lods
mov
dec
jo
inc
pop
in
aas
mov
xor
inc
lock
popa
es
mov
std
fisubrs
pusha
loopne
and
xor
push
scas
imull
mov
stos
xor
adcb
mov
jne
or
lahf
leave
sbb
adc
sub
dec
insb
add
bound
ret
xchg
insb
test
adc
cli
mov
sti
mov
in
and
call
mov
outsl
mov
scas
loope
jnp
push
and
lcall
xchg
shlb
mov
jmp
lahf
stos
cmp
loop
stc
sbb
dec
xchg
or
mov
bound
arpl
push
pusha
ret
mov
pop
in
pop
fmuls
mov
and
dec
xlat
mov
sbb
adc
push
push
rcr
push
jb
add
lock
push
stos
lods
lock
sub
cltd
std
push
rolb
push
xchg
xor
lcall
push
mov
mov
mov
add
push
rclb
mov
push
jge
pop
push
mov
rolb
lods
sub
mov
cld
gs
sub
mov
mov
jae
push
adc
out
and
jo
out
mov
xchg
js
adc
mulb
xchg
rcl
pop
push
sub
mov
hlt
lods
fldl
adcb
mov
jae
outsb
repnz
sbb
mov
add
and
ljmp
and
stos
and
sbb
cmp
jns
mov
stos
sbb
or
mov
mov
adc
repz
push
mov
test
and
mov
orb
jns
mov
rorl
push
adc
ss
stc
sbb
xor
testl
xlat
hlt
icebp
jo
xor
add
pop
adc
dec
mov
fcomp
flds
sahf
jo
xor
rclb
cltd
adc
xor
adc
jne
roll
mov
sub
pop
dec
mov
es
sbb
add
jno
daa
in
inc
in
lret
imul
lods
xchg
jle
or
fsubrs
dec
imul
pop
xchg
lea
ljmp
das
mov
aad
cld
xor
jae
push
testl
call
je
cmp
movsb
push
jmp
jmp
sti
int
test
insl
cmc
xchg
push
ret
add
mov
sbb
movsb
and
adc
shll
push
push
fdiv
mov
sub
jp
and
xchg
fnsave
shl
push
mov
divb
mov
mov
lcall
aam
push
test
outsl
cmp
mov
int
mov
dec
push
pmaxub
push
int
shll
ljmp
fstpl
repnz
popf
sub
add
in
insl
push
jb
int
jmp
xchg
stos
cli
ds
adc
adc
lods
xor
cmp
fisttpll
shlb
jp
lods
push
pop
imul
xchg
add
add
ret
addl
mov
mov
pushf
fldenv
ss
mov
repz
pop
neg
sbb
jnp
arpl
in
enter
insl
push
std
and
jp
movsl
into
mov
or
adc
cmpsl
pop
cmpsl
inc
mov
cs
mov
push
sbb
es
decb
push
movsb
filds
cld
jb
pop
outsb
sahf
sbb
shlb
js
sahf
xor
and
adc
das
adc
pop
adc
jb
pop
roll
or
repnz
and
loopne
xlat
lret
adc
call
cmp
push
adc
mov
or
add
jo
shrb
and
or
loopne
repnz
rcrl
shll
les
xchg
popa
adc
dec
enter
test
add
dec
popa
mov
imul
inc
shll
xor
sub
nop
push
adc
adc
xchg
aas
ljmp
sub
scas
xchg
cs
stos
rorb
inc
push
add
push
lock
or
xor
xchg
ds
mov
icebp
stos
sti
lods
cli
inc
repnz
add
scas
pop
sub
mov
fildl
push
sahf
stos
and
icebp
fcomip
roll
and
jmp
aam
mov
xchg
lret
push
add
shl
or
pusha
mov
clc
jmp
push
jecxz
rolb
sbb
mov
shrl
aam
jne
and
xor
adc
sbb
add
sub
inc
push
add
lods
movsb
pop
out
jb
repnz
imul
fst
mov
or
les
pop
lock
mov
cmpsl
andb
call
insl
loopne
inc
mov
frstor
push
int
jecxz
mov
stc
cmpsl
gs
sti
pop
push
push
mov
push
hlt
bound
aam
adc
add
add
push
std
movsb
call
addr16
movsb
stc
and
adc
ds
push
xor
sahf
rep
adc
inc
out
and
lcall
add
xor
js
ret
fwait
pop
pop
jnp
sbbl
mov
dec
cmpl
adc
imul
clc
sub
xchg
jmp
pop
cmc
sbb
sbb
mov
cmp
or
xor
inc
mov
mov
sub
pop
jnp
mov
loopne
icebp
mov
jb
movhps
mov
orl
xor
enter
ret
std
adc
out
xchg
push
pop
cltd
mov
sub
out
pusha
repz
push
mov
mov
or
int
call
fnstsw
movsb
loope
jmp
xchg
in
jmp
xchg
mov
and
cltd
add
push
mov
cmp
cmp
test
mov
cmpsb
push
sbb
jecxz
lea
mov
es
and
imul
and
mov
cmc
ds
call
and
into
mov
push
test
xor
lcall
std
inc
sahf
or
in
adc
rcr
fadds
fs
mov
enter
arpl
mov
es
or
pop
jp
mov
xor
ret
and
lea
sti
mov
pop
int3
jp
int
js,pt
and
cltd
xchg
and
add
dec
jo
test
jae
push
rcr
push
adc
xchg
subl
and
xchg
ret
cwtl
mov
imul
add
jae
mov
imul
add
sbb
icebp
mov
inc
adc
imul
jne
ja
sbb
and
mov
mov
mov
xlat
negb
addr16
sahf
imul
int
adc
lcall
sub
incl
jb
xchg
push
or
xor
ret
add
sti
loope
aad
loopne
fdivrs
ror
push
cmpsl
jmp
je
pusha
arpl
seta
jnp
inc
out
out
sbb
das
sbb
rcl
aaa
fisubrs
push
call
mov
andb
push
icebp
sub
ljmp
rcrl
iret
pop
out
mov
and
loope
mov
mov
adc
add
jne
and
xor
test
popf
repnz
adc
adc
mov
leave
and
repnz
inc
cmp
repz
cmp
pusha
pop
push
stos
rorl
stos
sti
jg
pop
inc
mov
xor
lcall
femms
sti
insl
inc
iret
xchg
push
mov
fcomps
daa
xor
sti
nop
jo
fildll
add
int
jmp
inc
mov
lcall
std
cmpsl
sub
ds
or
das
mov
clc
jle
xor
sub
jmp
push
adc
push
adc
lock
dec
and
xor
shrl
mov
enter
push
icebp
repnz
shll
xchg
imul
shll
rcll
cmc
adc
dec
loope
sbb
pop
sub
jo,pn
xchg
popa
stos
out
cltd
pop
add
scas
jae
ljmp
test
aad
adc
xchg
lds
adc
xor
jo
fisttpll
mov
push
popa
addl
jb
nop
loop
or
adc
sub
rol
cs
jae
sbb
mov
jae
xor
leave
mov
sbb
test
jmp
push
sub
movsb
pop
pop
sub
inc
jb
cli
into
xor
out
sbb
shrb
ret
hlt
inc
pop
xchg
jge
xchg
add
aas
test
stos
dec
cs
adc
pop
adc
push
cs
imul
scas
pop
xchg
popf
xor
push
sub
mov
adc
and
cmp
inc
jae
mov
cmc
and
mov
and
mov
pushf
sbb
jb
in
sbb
mov
cmpsb
push
xor
imul
adc
adc
xor
and
cld
sbb
pushf
mov
xor
out
dec
nop
pop
enter
push
and
dec
mov
sar
fmull
adc
rcl
push
adc
xchg
and
lock
add
popa
mov
push
loop
cwtl
cmc
xor
sti
add
dec
cmp
mov
test
push
test
and
pop
cmp
cli
bound
mov
test
or
in
pop
inc
cli
sahf
insb
cmp
rcr
das
inc
mov
xlat
lcall
lock
mov
adc
call
sar
add
xchg
lcall
fists
xchg
inc
dec
hlt
pop
rcrb
aad
pand
push
jbe
rol
into
rorb
xchg
clc
cmp
icebp
lods
cmpsb
sarb
xchg
xlat
shll
mov
sarl
loop
movsb
add
inc
dec
enter
push
mov
add
add
mov
fs
cmpsb
lcall
mov
xchg
dec
jecxz
pop
sti
push
sbb
loopne
mov
jl
stc
xor
mov
fnstenv
jb
pop
ss
lret
add
mov
cwtl
sbb
mov
adc
mov
clc
sbb
daa
lret
bound
sar
outsl
mov
cmpsl
inc
nop
rcrl
ljmp
mov
mov
iret
nop
xor
jno
mov
hlt
movsb
sub
pushf
into
addr16
fnsave
and
enter
repnz
xchg
and
xor
xchg
pusha
adc
data16
xchg
sti
mov
xchg
fcmovne
pusha
xchg
popa
out
xchg
jb
loop
in
pusha
into
push
adc
loopne
inc
ficoms
or
orb
add
adc
push
dec
loopne
call
cmpsl
icebp
mov
movsb
mov
sbb
mov
xlat
imul
adc
jmp
sbbb
mov
inc
xchg
mov
xchg
inc
bound
xor
push
pop
mov
adc
mov
push
mov
arpl
xor
aam
hlt
mov
jl
cwtl
xchg
inc
pop
fwait
aam
jg
pop
jne
popa
bound
cwtl
lret
mov
fmul
lahf
rcr
jbe
adc
sbb
dec
sbb
or
imul
out
fcomps
addl
and
imull
mov
shll
les
bound
jbe
ret
call
testl
adc
cmp
pop
lea
and
ss
repz
shll
lret
xor
sbb
adc
out
mov
mov
cmpsb
subb
popa
mov
clc
rclb
outsb
enter
ljmp
lcall
movsb
mov
xchg
fwait
aas
nop
repnz
shrl
push
jg
outsl
rol
cmpsb
dec
add
dec
mov
pushf
addb
dec
dec
cmc
popa
inc
adc
imul
cmc
movb
jmp
mov
push
jno
pop
mov
ds
mov
push
movsl
xor
mov
sub
repnz
in
imul
cmpsl
gs
ret
cmp
mov
cs
es
sub
push
xlat
jle
mov
lock
and
pop
dec
pop
shll
ds
test
incb
fs
roll
cmp
movsb
add
sarb
or
mov
add
lahf
out
xor
adc
rclb
lods
fiaddl
or
mov
es
add
aam
add
pop
ds
jl
mov
adc
cmp
lea
xor
add
cmp
xor
leave
cmp
push
mov
jg
pop
loope
ss
pop
mov
jns
stc
mov
pushf
cmp
lcall
cmp
int
outsb
and
pusha
push
nop
stos
push
mov
icebp
pusha
fsubp
js
push
jno
jb
scas
pop
lock
pop
xor
shrb
and
mov
inc
push
mov
pop
leave
aas
xchg
add
pop
inc
push
nop
divb
or
pop
lock
cmp
xor
add
sbb
push
or
jmp
or
or
adc
fidivrl
jno
sub
adc
mov
sub
divl
pop
jno
mov
fs
adc
rcr
daa
insb
inc
ljmp
idiv
mov
pop
xchg
mov
outsl
mov
and
bound
mov
int
sbb
jnp
and
jmp
inc
adc
cmp
xchg
gs
mov
test
jb
cmp
cmp
test
adc
cld
fsubrs
mov
xchg
dec
imul
fidivs
outsb
adc
addl
sbb
cmp
mov
cmp
fwait
daa
mov
jg
add
stos
ds
jle
gs
bound
and
or
pop
cmc
jmp
mov
and
and
mov
adc
jae
shlb
mov
xor
lcall
mov
mov
mov
and
cwtl
shr
jae
jmp
lcall
mov
cmpsl
pop
jmp
inc
setne
and
mov
movsl
pop
xor
icebp
out
dec
ja
js
adc
jmp
xor
arpl
insl
repz
ret
xchg
pop
dec
xchg
inc
dec
das
imul
insb
xor
cmpsb
out
sub
mov
jecxz
xchg
js
jbe
mov
inc
stc
rorb
in
lret
in
xchg
out
cmp
xor
pop
test
mov
mov
cwtl
mov
jp
push
sbb
sahf
mov
sbbl
in
repnz
jno
fists
and
orl
sub
or
and
cmpsb
push
add
in
ss
out
pusha
mov
xor
sub
testb
filds
jno
push
or
jmp
loopne
lcall
cmp
test
pop
mov
adc
add
mov
jmp
add
int
and
jnp
cmpsb
out
pop
and
jbe
push
add
cs
cmpsb
dec
mov
stos
inc
and
dec
add
cli
xor
lret
ds
jns
rclb
push
mov
mov
aam
imul
inc
add
popf
cwtl
aas
dec
or
jmp
out
in
jo
outsl
sub
jg
jb
loopne
fbstp
push
cld
push
mov
je
sahf
repz
xor
scas
dec
pop
in
jno
cmpb
push
mov
enter
xlat
shlb
lret
or
dec
push
popa
push
add
jecxz
mov
js
ds
and
push
sti
adc
cmp
pop
fs
dec
fdivrl
and
call
mov
mov
xorb
cli
push
loopne
xor
xchg
loopne
push
test
xor
dec
jge
clc
push
xchg
adc
pop
xchg
adc
out
call
cmp
dec
daa
and
ret
sti
push
cmp
mov
icebp
xchg
repnz
iret
icebp
dec
mov
sbb
push
lods
std
rclb
mov
fsubl
gs
lods
adc
test
xor
jmp
js
xor
add
fdivrp
mov
lcall
mov
mov
sub
fisttpl
adc
mov
loopne
adc
mov
add
inc
mov
imul
adc
jmp
adc
mov
test
lods
xor
xor
ljmp
xchg
fwait
cmp
adc
xor
inc
xchg
imul
xchg
inc
push
mov
dec
mov
mov
mov
loop
and
dec
inc
test
sbb
movsl
hlt
lock
ja
pop
stc
cmp
adc
xorps
cltd
push
mov
loope
jg
pop
cmp
lret
jne
pushf
mov
mov
xor
lods
pop
pop
jg
je
or
and
inc
adc
arpl
ret
xor
jno
push
subl
jmp
test
movsb
mov
push
lock
mov
xor
add
pop
jae
das
aad
lock
loopne
or
stc
cmp
sub
lret
in
mov
sbb
cld
jo
push
jns
loope
test
lret
or
dec
aad
cmp
ds
adc
jo
fldl
out
mov
loopne
cli
sub
pop
aas
outsb
test
add
xchg
lock
rdmsr
sar
adc
mov
inc
mov
add
inc
inc
popf
dec
cli
test
inc
imul
popf
pushf
xchg
mov
mov
das
cmp
xor
xchg
and
andl
inc
fmul
icebp
rcrb
movsb
mov
pop
fbstp
add
mov
and
lcall
add
out
sbb
cld
push
jb
add
inc
testb
xor
cmp
pop
mov
fldcw
cmc
adc
arpl
mov
jno
imul
test
sub
and
movsl
pushl
mov
cmp
mov
int
mov
dec
cmc
aaa
push
movsb
rcl
popa
xor
iret
mov
adc
call
loope
cld
mov
cmp
jae
push
or
mov
push
out
repz
fsubl
jae
jb
mov
adc
sti
aad
push
pop
xor
add
aas
mov
imull
jmp
shl
mov
pop
jmp
adc
imul
out
push
push
std
rcrb
and
movsl
ljmp
mov
and
xlat
mov
xchg
lock
sub
jb
mov
sub
ds
or
out
leave
arpl
lock
xor
mov
testb
cmp
aas
sahf
jo
add
ljmp
xorb
adc
mov
fisttpll
pushf
fnsave
clc
test
pop
mov
bound
mov
dec
out
pop
pop
ror
xor
ja
mov
push
cmpsb
cmp
and
dec
add
add
das
div
movsb
lods
mov
lahf
pop
mov
shrb
cli
jl
sub
stos
xor
dec
mov
and
mov
pop
xchg
mov
cs
mov
shll
cpuid
inc
xlat
int
dec
ret
mov
bnd
push
dec
sti
dec
mov
stc
das
mov
sbb
inc
mov
jecxz
stc
mov
sbb
xchg
mov
mov
out
scas
clc
cmp
xchg
adc
mov
hlt
dec
popf
cld
inc
mov
and
mov
in
clc
loop
jnp
push
scas
xorl
mov
aad
stos
sbb
or
stos
dec
popl
fistps
int3
push
repnz
xor
popf
fnsave
xchg
sub
pop
je
loope
sub
pop
fmuls
xchg
jle
out
xchg
in
push
loope
js
push
xchg
adc
sub
mov
and
outsb
jge
sbbl
popf
sbb
and
cmp
nop
or
fsubrs
loopne
push
loope
repnz
mov
add
jne
xchg
stos
push
jo
add
pop
mov
les
outsl
adc
rol
jg
ret
out
jns
xchg
push
rol
rorb
jmp
or
xchg
div
inc
xor
ljmp
sti
bound
icebp
lret
leave
cltd
xchg
stos
mov
adc
push
push
pop
push
mov
mov
pop
sahf
or
movsb
push
and
sbb
jmp
sub
mov
pop
fidivs
add
cmp
aas
mov
arpl
sub
and
cmp
mov
push
shll
push
shrl
dec
repz
mulb
aam
insl
insl
rcl
xor
popf
cmp
mov
jno
lds
jmp
push
cmp
popa
xlat
int3
mov
repz
sti
cmp
sbb
add
outsl
sti
pop
xor
aaa
rclb
aad
cmpb
and
scas
daa
nop
and
dec
mov
add
icebp
pop
aad
lea
int
loop
test
mov
jl
rolb
pop
stc
dec
mov
dec
jnp
xor
pop
dec
clc
cli
jno
and
in
fnstsw
cmp
xchg
cs
xor
ss
sbb
adc
add
mov
scas
push
mov
dec
xor
ss
sbb
or
xor
mov
sbb
dec
pop
or
loope
mov
adc
pop
or
ret
imul
push
popf
adc
aad
or
inc
lret
in
jl
bound
cmp
and
inc
and
adc
inc
cmp
xor
repnz
shl
fimull
adc
push
mov
ja
sbb
sahf
je
out
and
js
and
jno
es
adc
push
jnp
pop
addr16
adc
mov
mov
mov
add
ds
std
stc
adc
ss
ljmp
push
sbb
imul
jmp
in
xchg
adc
sbb
hlt
inc
add
loopne
arpl
and
int
push
add
js
sub
out
xchg
mov
dec
jo
mov
cld
ret
andb
cmp
testb
cmpsb
adc
daa
adc
cmp
ss
inc
lcall
scas
mov
or
dec
daa
dec
mov
jecxz
cmpsb
mov
dec
sti
or
imul
sahf
dec
fldl
fimuls
sahf
or
or
adc
dec
out
ja
sub
ret
nop
sbb
lcall
sbb
cmc
mov
imul
pusha
xchg
hlt
add
icebp
xor
or
jb
mov
push
push
xlat
test
pop
push
and
xor
inc
push
and
clc
or
mov
loopne
ret
and
and
in
fcoms
sbb
mov
insl
jb
jnp
dec
movsb
pop
push
mov
push
rcrb
xor
push
inc
in
xor
mov
movzwl
jmp
ljmp
in
mov
sbb
jo
fsub
ds
sub
cli
icebp
push
cmpsb
sahf
lahf
pop
popf
icebp
jp
shlb
cli
out
adc
mov
hlt
xchg
fsubl
shll
fsubr
jp
xor
movsb
mov
xorb
cmp
mov
push
test
pop
in
vmovups
call
dec
xor
in
sti
xor
lea
mov
daa
divb
rcrl
xor
mov
or
cli
ja
stc
mov
lret
cmp
xor
lahf
sar
xor
into
jnp
mov
sub
imul
or
and
sahf
xor
lss
and
je
push
add
xor
xorb
aas
shlb
mov
call
movsl
fcoml
xchg
out
add
cs
stc
int3
je
mov
addr16
jecxz
jns
movsb
inc
mov
pop
fstpt
xchg
push
xor
lock
adcl
push
xor
mov
push
or
and
andl
pop
popa
addr16
ljmp
outsb
leave
in
cmc
icebp
lock
shrb
dec
or
inc
faddl
adc
movsb
test
scas
push
xchg
adc
sub
push
mov
push
orl
mov
cmp
xchg
ret
mov
outsb
repz
out
and
push
dec
lcall
jge
mov
movsb
sbb
out
out
imul
and
sub
or
mov
sub
repnz
jge
int
in
push
icebp
cmp
xor
mov
pop
loop
test
sbbl
popf
cmpsb
movups
push
in
cmp
cmp
adc
pop
test
cmp
adc
adc
mov
movsb
cli
xor
xchg
adc
sti
xor
jg
shlb
mov
cld
in
lahf
jle
stos
mov
jb
xor
shll
sbb
mov
daa
daa
and
inc
pop
test
cmp
sub
add
dec
sub
cmpsb
lcall
daa
xchg
add
mov
sbb
xchg
out
mov
pop
mov
adcb
ljmp
cltd
sbb
adc
pusha
adc
shll
mov
rorb
mov
andl
pop
xor
popa
aad
bound
pop
inc
mov
mov
cs
call
adc
movsb
neg
cmp
jno
push
std
inc
rcrl
push
cmp
cmpsb
lods
sti
mov
stos
dec
jle
sub
xor
sarl
mov
data16
cmp
mov
dec
mov
adc
add
dec
cltd
inc
adc
and
and
mov
pushf
xor
loopne
xor
data16
adc
mov
mov
adc
mov
lea
mov
imul
pop
mov
mov
aaa
lods
jmp
aas
fldl
mov
leave
jae
popf
cwtl
in
loope
add
push
jge
adc
in
mov
jmp
mov
pop
cmp
push
dec
pop
insb
mov
add
mov
daa
aaa
pop
aad
add
cmp
in
mov
cmp
sub
mov
xchg
cmpsb
std
mov
mov
mov
dec
mov
mov
xor
hlt
mov
pop
jge
sbb
jle
jle
scas
pop
add
jg
bound
loop
lock
je
add
shrb
mov
pop
in
mov
stc
gs
xlat
stos
pushf
inc
repnz
pop
mov
sub
fnsave
mov
cwtl
aaa
sti
sti
orb
lahf
adc
pop
xchg
hlt
sbb
push
mov
lock
push
and
ja
ljmp
mov
xor
mov
ds
adc
int
sbb
push
mov
jnp
iret
jp
jnp
rcr
hlt
cmp
test
ljmp
jne
jae,pt
dec
cmp
dec
sbb
lret
and
adc
adc
cmp
hlt
mov
sti
mov
push
pushf
xor
insl
xor
xchg
cwtl
imul
dec
mov
scas
dec
xor
adc
pop
ret
clc
mov
scas
dec
dec
movsb
cmp
imul
mov
out
xchg
insl
int3
leave
lods
sub
cmpsb
addr16
stos
ret
les
xlat
inc
xchg
out
add
or
xchg
repnz
mov
loop
incb
and
xchg
cs
xor
inc
lcall
mov
daa
mov
push
lock
pop
outsb
rclb
icebp
cltd
out
sub
lret
call
xorb
daa
mov
mov
test
mov
ja
sbb
mov
and
ret
orb
mov
ljmp
nop
ds
xchg
in
stc
dec
add
or
je
mull
addr16
add
adc
mov
loop
mov
testb
add
jb
mov
ret
mov
lock
mov
shlb
iret
add
repnz
fiaddl
sub
das
dec
nop
or
mov
daa
pop
xor
repz
inc
dec
xor
add
add
inc
repnz
ljmp
cmpsb
bound
jnp
aas
repz
jge
loope
mov
pop
cmc
xor
xchg
mov
in
mov
movsb
jns
call
inc
hlt
iret
mov
movsb
add
xor
xchg
xor
mov
jecxz
ja
xchg
out
call
pop
test
outsb
jge
into
sbb
fistl
cwtl
hlt
mov
stos
pop
sub
sbb
iret
mov
test
test
fdiv
leave
mov
mov
test
xchg
adc
mov
pop
mov
or
int
and
mov
out
insb
lods
aam
xchg
or
add
cmp
out
int
imul
dec
adc
das
adcl
stos
aam
nop
je
cmpsb
sarl
fdivrs
lcall
in
movsb
mov
lock
and
div
mov
dec
jno
imul
mov
fsts
sub
push
cs
jnp
inc
add
push
jle
js
int
lods
imul
cmpsb
nop
test
add
lods
push
xor
or
mov
call
sti
popa
mov
jae
js
ret
cmp
cmp
inc
fidivrs
notb
bound
iret
and
int
add
ds
xor
inc
cltd
adc
push
mov
roll
adc
adc
fmulp
push
pop
aas
or
pop
mov
push
mov
fldenv
pop
and
and
mov
jg
jl
fiaddl
aaa
cmovnp
dec
daa
sbb
xorb
xor
outsb
jbe
cmp
ss
pop
mov
mov
mov
rdmsr
jne
sahf
xchg
cmpsb
xor
adc
adc
js
enter
sub
fs
enter
mov
xor
jne
dec
lods
icebp
cmpsl
inc
xor
xchg
sub
ljmp
xlat
cmp
adc
mov
inc
jp
mov
mov
je
test
repz
xor
das
mov
xor
and
addr16
xchg
mov
icebp
sti
xor
xor
lahf
pushl
mov
fisubs
and
loop
cmp
sti
mov
xchg
adc
push
mov
les
bound
or
pop
add
sbb
subl
movsb
fstps
imul
aam
int
and
sbb
mov
pop
movsb
sahf
push
inc
jmp
jge
subb
pop
push
jge
ds
inc
or
movsb
or
inc
mov
pop
add
pop
mov
cmp
lods
push
das
outsl
fwait
adc
xchg
xorb
call
mov
xchg
shl
es
mov
pop
dec
repz
lods
and
pop
test
and
dec
mov
cmp
ja
ljmp
or
popf
sbb
movsb
ret
mov
in
add
aas
cltd
mov
gs
cmpsb
dec
rcl
dec
xchg
ret
lea
fmull
push
dec
mov
jns
gs
nop
lcall
insb
in
inc
lea
movsb
sub
pop
add
mov
cli
popa
xchg
fidivrs
xor
jmp
sbbb
mov
mov
fidivrl
call
pop
dec
mov
pusha
pushf
or
lods
lds
leave
int
fwait
mov
push
rcll
push
inc
mov
mov
jne
dec
jle
cmp
and
lret
mov
sbbb
xor
inc
stos
les
popf
andb
adc
scas
mov
call
lods
dec
cmpsb
or
lods
sahf
mov
xchg
mov
out
mul
pop
jecxz
in
leave
add
das
fwait
cs
dec
adc
dec
cmpb
jne
jnp
push
cld
fcmovbe
or
inc
addl
pop
sahf
stos
xchg
xchg
and
add
mov
mov
ret
cmp
cmp
imul
rclb
cmpxchg
add
jne
sub
ss
pop
cmp
adc
push
int
insb
or
lahf
push
loopne
movsb
pop
icebp
mov
xchg
aas
mov
push
mov
ds
aaa
mov
sbb
sub
sarl
mov
in
lret
jmp
pop
inc
mov
ja
mov
add
xchg
mov
or
pusha
adc
dec
mov
gs
sahf
sub
mov
div
loope
push
stos
shl
ljmp
xchg
call
push
xor
and
cmp
lock
push
dec
movsb
xchg
iret
sbb
test
xchg
xor
mov
and
test
adc
xor
mov
je
dec
lea
int
shlb
mov
lcall
clc
gs
fmuls
shlb
mov
or
adc
push
jns
mov
mov
xchg
loopne
pop
mov
lock
std
sbb
jns
lods
fldl
aas
fs
out
inc
hlt
cld
pop
mov
xor
or
dec
stos
mov
adc
in
xor
pushf
fnsave
push
dec
ds
xchg
fnsave
add
mov
pop
sbb
and
or
pop
mov
cmpsl
sub
test
ficomps
mov
pop
test
aad
in
sub
sbb
clc
in
je
xchg
fldenv
aaa
mov
and
aam
dec
jnp
jg
loop
int3
call
mov
inc
mov
lock
jle
xchg
add
jmp
inc
xchg
mov
in
adc
outsl
ljmp
cli
push
aam
jnp
cmp
lcall
xchg
fimull
xor
push
jp
test
xor
js
enter
jecxz
leave
jo
movb
shl
pop
rcrl
add
or
test
loopne
mov
std
daa
jle
cmp
test
or
pusha
mov
ljmp
and
sub
bound
ss
test
mov
mov
mov
mov
mov
fs
sub
xchg
movsl
jae
loop
mov
cmpsb
lahf
xor
cmpsl
dec
andb
jae
mov
nop
data16
cmp
es
gs
mov
pop
xchg
shrl
clc
mov
or
dec
lods
inc
cs
mov
jo
mov
and
fucomi
dec
or
pushf
xchg
xlat
aas
mov
sbb
adcb
lods
fsubrl
mov
or
shrb
mov
jbe
roll
outsb
push
popa
cld
cmp
add
dec
ret
adc
adc
cmp
push
jns
push
dec
sub
pop
adc
xor
je
jb
scas
iret
pop
mov
xchg
adc
ret
sbb
test
popf
xchg
xor
test
test
adc
xchg
pop
xor
jg
mov
sbb
sub
divl
push
in
adc
cwtl
add
pop
mov
push
iret
outsl
test
loope
xorb
mov
mov
pop
popa
clc
leave
jno
js
div
cwtl
repz
pop
or
jb
and
and
loop
mov
push
outsl
ret
dec
shlb
daa
jnp
jae
cmp
and
pop
ja
mov
inc
ftst
mull
nop
addr16
dec
mov
inc
jmp
hlt
sub
and
or
imul
loopne
jle
popa
mov
shlb
or
ds
inc
push
and
mov
xor
push
mov
aas
out
cmp
push
repnz
jb
mov
dec
inc
nop
stos
push
icebp
sbb
or
inc
mov
mov
aaa
lret
jg
insl
xor
add
dec
aas
mov
icebp
push
push
pop
pop
jmp
mov
fs
stos
jmp
push
out
mov
add
cmpl
xchg
ds
adc
fdivl
or
daa
aad
or
mov
jno
leave
out
inc
stc
pop
sub
and
loop
repz
popa
fmuls
daa
xchg
add
add
xchg
mov
pop
dec
dec
xor
jp
dec
mov
int
pop
aam
adc
push
ss
cmpsb
xchg
pop
lret
test
sbb
stc
jmp
jp
jle
dec
stos
ret
push
sbb
sub
inc
ss
inc
loopne
mov
mov
mov
sti
or
or
mov
mov
sbb
mov
mov
bound
lock
push
add
shl
leave
and
xchg
xor
mov
and
fisttpll
int
aad
movsb
int
adc
in
aam
adc
sub
mov
stos
inc
mov
ret
xor
popa
inc
je
push
push
jne
mov
in
repz
xor
cmpsb
push
mov
sahf
xchg
cmpsb
mov
es
popa
push
je
adc
lahf
dec
xchg
icebp
xor
xor
mov
xchg
xchg
in
idivb
fdivs
scas
sahf
setnp
sbb
jecxz
aaa
rclb
pop
je
mov
mov
xor
jl
xor
jae
mov
pop
sahf
loop
mov
mov
jl
jp
outsl
mov
aad
sbb
push
dec
std
mov
dec
cmp
jb
or
xor
mov
aas
mov
nop
inc
inc
jle
xor
int
cs
sahf
mov
xchg
sti
loopne
mov
mov
inc
fnstcw
pop
jae
hlt
cmc
in
insl
jne
and
sahf
push
jp
clc
lcall
pushf
mov
lock
xchg
jo
dec
je
xlat
jns
and
fbld
mov
mov
testl
sbb
daa
jns
fs
jnp
scas
repz
mov
dec
mov
mov
mov
mov
stc
inc
cmp
cld
mov
inc
in
leave
je
divl
in
or
jnp
sbb
neg
sahf
cmp
push
pushf
mov
loope
and
roll
pusha
push
xor
pop
adc
test
xchg
dec
in
rorl
inc
mov
mov
pop
lcall
adc
push
push
sahf
jmp
mov
int
lods
mov
push
jb
adc
pop
mov
push
shll
inc
cmp
fistpl
mov
arpl
test
mov
loope
adc
mov
adc
test
int3
ja
mov
in
sub
cmpb
adc
je
imul
test
notl
nop
test
and
enter
and
in
cmpb
cs
mov
das
bound
imul
sub
loop
mov
fwait
add
pop
jle
add
jnp
cmp
mov
ret
paddw
push
sub
adc
int
mov
into
loope
push
adc
cli
test
mov
push
adc
dec
inc
dec
nop
sbb
cmp
in
shl
jbe
in
fldcw
xchg
aas
stos
xor
imul
inc
inc
aam
jl
cs
xor
jae
icebp
je
enter
pop
add
jno
cmpsb
aaa
push
addb
push
aas
lcall
jg
mov
pop
rclb
add
call
fbld
and
pushf
jmp
mov
sub
repnz
sbb
cltd
dec
mov
lock
or
xchg
sbb
cli
push
jmp
push
pusha
rcrl
cmpsb
int
out
aad
or
mov
jo
scas
mov
jmp
daa
iret
adc
mov
dec
jle
xor
xor
mov
mov
mov
adc
sbb
pop
lds
outsb
lods
rcrb
test
js
aas
out
fstl
out
jle
inc
inc
and
mov
push
mov
xchg
scas
mov
outsb
jle
inc
adc
lret
push
dec
dec
daa
xchg
sbb
cld
repnz
mov
inc
mov
push
jl
arpl
int
pop
mov
test
addr16
sub
pop
jmp
xchg
cmp
mov
xchg
mov
inc
push
sbb
icebp
out
fwait
lcall
movsb
insb
lcall
sti
das
dec
test
gs
fmul
lock
mov
mov
adc
popf
and
lcall
addl
mov
mov
push
cmp
imul
inc
sub
test
sar
inc
xchg
stc
mov
js
jb
rol
push
mov
lock
idivb
loopne
sbb
cmp
cli
push
popl
xlat
dec
orb
mov
dec
push
adc
subb
or
fs
loopne
movsl
icebp
sbb
jmp
mov
and
jae
scas
inc
test
cld
mov
mov
push
arpl
pop
shr
out
xchg
push
ffree
cwtl
inc
or
adc
inc
fnsave
outsl
pop
push
xchg
ljmp
fdivrs
mov
sahf
xor
lods
shll
jae
js
and
jmp
icebp
hlt
dec
push
aad
fstps
leave
test
dec
or
push
fstp
js
xchg
mov
mov
sbb
sti
repnz
outsb
xor
aad
jne
mov
inc
xlat
lcall
loop
lock
cmp
adc
xor
add
jae
loope
mov
shll
xchg
mov
stc
addr16
push
out
pop
sti
loop
rcrb
iret
arpl
mov
pop
rcll
mov
push
mov
repnz
loop
popa
inc
jbe
push
js
or
call
xchg
or
xor
outsl
jmp
mov
fcoml
pop
push
jmp
adc
pop
ss
sub
rcl
adc
fs
push
test
aas
stos
test
popf
push
sub
pushf
mov
dec
out
dec
aam
mov
leave
pushl
mov
pushf
loop
sbb
fldcw
mov
pushf
fadds
jmp
jae
iret
frstor
movsb
nop
repnz
inc
push
mov
jp
repnz
cs
mov
add
in
lret
mov
cltd
call
add
ds
inc
test
cmp
push
dec
movsb
test
xchg
cmp
cs
adc
leave
ds
aad
and
loopne
sarl
cmp
add
loop
das
xor
jnp
adc
xor
jo
cmp
mov
sub
inc
or
and
push
scas
loopne
ds
cwtl
fnstsw
loope,pn
loopne
std
jg
jl
lods
mov
jne
sbb
rcr
push
cmpsb
and
xor
sbb
or
rclb
loope
xor
ret
push
push
pop
push
jbe
ljmp
push
inc
pop
cmp
dec
cmpsb
mov
cmp
popa
mov
aas
pushf
lods
icebp
ljmp
pushf
mov
test
xchg
enter
lret
pop
fnstsw
inc
xor
jo
or
mov
out
mov
lahf
dec
pop
xchg
mov
jg
or
stos
sbb
test
mov
jg
mov
add
fldenv
fdivl
inc
adc
adc
or
sub
adcb
dec
cli
sub
movsb
sti
fmulp
not
das
jae
int
push
cmp
cmp
jmp
test
adc
jbe
stos
lods
stos
dec
or
push
out
cmp
xor
add
arpl
idivl
in
daa
aas
adc
inc
xchg
mov
dec
loop
lret
add
mov
lcall
xor
lock
mov
test
mov
dec
sub
pop
mov
and
inc
lret
iret
sti
out
aas
push
and
sbb
mov
and
pop
loope
sarb
jmp
lea
dec
data16
xchg
lea
sbb
xchg
les
repz
mov
sbb
jnp
pop
xchg
jb
repnz
dec
cmp
pop
ret
add
push
cmpl
shll
mov
ss
sti
mov
cmpsl
mov
inc
stos
sbb
popf
ja
mull
xor
ljmp
fidivl
jp
and
stos
outsb
ret
and
arpl
cmp
or
mov
daa
les
movsb
imul
loopne
cmpb
mov
pop
jmp
mov
cltd
movsl
test
mov
xchg
cmp
roll
mov
sub
icebp
call
mov
frstor
leave
scas
popa
xor
loopne
mov
ja
outsb
xor
imull
fldl
lds
push
and
xchg
je
pop
ja
notl
xchg
pop
addr16
std
popf
incl
add
jae
daa
mov
cli
leave
dec
fsub
and
adc
pop
add
dec
xlat
cmp
xor
daa
mov
aaa
movsl
lea
dec
push
and
orl
fs
out
xor
popa
xor
mov
dec
mov
loop
add
fadds
xorl
lock
mov
pop
jno
cld
call
sti
in
add
xor
outsl
sbb
jns
std
jb
test
inc
sub
nop
sbb
push
fisubs
mov
icebp
add
sahf
stos
and
mov
add
decb
mov
push
cmp
adc
dec
or
leave
testb
aaa
stos
into
jo
pushl
mov
pop
xor
or
push
jmp
push
cmp
js
sti
popf
cmp
push
cmp
xor
inc
xchg
and
scas
mov
jne
lahf
cmpsb
pop
mov
rol
sahf
push
adc
ss
or
mov
mov
aaa
push
or
ja
mov
inc
fiadds
sbb
movsb
fstpt
cs
mov
lcall
bound
sbb
cld
ret
das
jnp
aas
fimuls
jo
iret
imul
in
in
cmc
push
jg
sub
dec
repnz
aad
hlt
rcrb
jb
xor
jo
xor
sbbb
in
jbe
js
sbb
or
daa
mov
xor
push
aas
scas
push
adc
pop
cmpsb
or
test
fisttpl
leave
xor
xchg
test
adc
mov
or
lods
cli
fs
in
jae
add
adc
jo
loopne
mov
jae
adc
aaa
rolw
dec
int
daa
and
dec
xorl
push
pop
inc
xor
jge
push
xor
sahf
arpl
data16
pushl
aas
mov
ds
subb
jb
call
sbb
in
jae
fdivp
and
subb
add
adc
cld
push
lock
jo
mov
mov
dec
in
xorb
xor
test
frstor
adc
xor
adc
out
jno
mul
mov
rorl
mov
cli
bound
mov
ds
repnz
cs
sahf
add
dec
fadds
xor
ds
lea
les
dec
sbb
inc
jne
xor
repnz
mov
pusha
mov
hlt
popa
in
fwait
xor
int
aaa
insb
cs
mov
loope
pop
and
divb
push
cs
mov
sub
fisubs
out
cs
sahf
pop
stos
lret
push
insl
sbb
jae
mov
fs
dec
lock
mov
and
mov
out
lret
ljmp
pop
jne
loope
jae
adc
xchg
lea
mov
mov
clc
jne
jae
jne
rep
inc
test
in
daa
mov
sbb
mov
insl
jle
notb
and
in
sti
dec
out
mov
fsubr
xchg
push
rorb
mov
sub
lock
aaa
or
sti
cld
jmp
push
pop
outsl
insb
scas
push
or
mov
cmp
pushf
mov
outsb
loopne
ljmp
loope
cmpsb
stos
loope
xchg
jmp
lahf
sub
xlat
sbb
inc
push
add
xchg
and
mov
pop
adc
test
loopne
inc
sub
sarl
inc
mov
push
lahf
dec
lcall
push
pop
movsb
jp
mov
lea
xchg
mov
ds
ja
sbb
ljmp
clc
test
cmpsl
pop
push
xchg
lock
xor
rclb
sti
repnz
xor
es
aas
jo
mov
mov
lret
pop
shlb
mov
inc
ljmp
pop
jno
lds
nop
fdivrs
shl
sarl
or
sbb
icebp
mov
ljmp
cmpsb
lds
shlb
and
iret
sbb
andl
inc
cli
into
mov
shlb
mov
push
jecxz
and
mov
xchg
test
dec
pop
les
in
push
pusha
fwait
ds
inc
jmp
mov
cmpl
aad
xor
das
mov
test
movsl
jb
es
test
dec
sti
add
jl
test
adcl
pop
lcall
jnp
loopne
jecxz
sahf
and
scas
ret
scas
cmp
imul
aas
mov
jle
shlb
lahf
xor
and
loop
repz
push
out
dec
jns
mov
fs
pusha
insb
imul
adc
sahf
sti
js
sarb
mov
mov
dec
xchg
sbb
outsl
enter
mov
cmp
pop
sbb
dec
lock
jnp
loop
lock
fnstcw
add
cltd
xor
add
test
in
enter
jl
ds
xor
dec
push
xor
movsb
jno
mov
xchg
aad
pop
xor
repnz
addr16
mov
or
push
jmp
inc
sub
imul
lret
mov
fisubs
lahf
mov
xchg
nop
gs
cmc
fildl
hlt
repnz
push
loopne
fisttps
outsb
addr16
ffree
push
push
cmp
mov
xchg
xor
dec
adc
pop
pop
sbb
mov
mov
push
jno
andb
mov
loopne
arpl
xchg
mov
fwait
rcll
cmpsb
pop
icebp
mov
stos
das
mov
mov
xchg
roll
movsl
add
xchg
sti
jnp
mov
imulb
nop
xor
movsl
in
adc
into
lods
xchg
xor
adc
in
or
pop
jecxz
add
fcomip
lahf
xchg
out
inc
push
dec
repz
roll
jle
cmp
add
and
mov
lods
jmp
mov
int
mov
add
scas
pop
lock
sti
push
ja
outsl
and
sahf
cli
fistpl
mov
adc
push
gs
cld
inc
and
out
xor
add
lcall
insl
hlt
mov
stos
sub
mov
xchg
push
loope
cwtl
jle
push
orl
popf
dec
ja
mull
inc
cld
xchg
loope
mov
in
sbb
cmc
mov
enter
shlb
pop
xchg
lret
mov
push
repnz
inc
and
jbe
jge
push
xchg
int
dec
jp
and
xchg
pop
pop
fwait
loopne
cs
jmp
push
clc
pushf
mov
lret
sub
insl
jb
into
repz
cmpsb
jbe
sbb
cmp
loop
je
out
jo
repnz
mov
cld
testb
mov
imul
or
scas
add
imul
and
add
inc
jp
adc
shr
xchg
icebp
pop
imul
loope
pop
cmc
inc
add
mov
cltd
mov
fisttps
mov
imull
cltd
js
insl
inc
xor
out
frstor
imul
mov
cmp
mov
push
stc
inc
icebp
loop
icebp
div
inc
xchg
pop
stos
push
inc
cmp
xor
mov
mov
adc
push
mov
add
hlt
sub
stos
cltd
outsb
mov
scas
push
push
xor
mov
add
rcrl
jb
or
jge
scas
push
das
inc
enter
mov
test
test
sub
jg
push
push
and
sub
ljmp
sub
fdivrl
jno
push
je
push
xchg
jmp
andb
repnz
or
popl
mov
cmp
mov
shrl
mov
outsl
push
dec
testb
mov
cmp
xchg
sub
cmp
scas
jp
xchg
daa
and
add
push
dec
pushf
icebp
pop
xlat
and
mov
jcxz
repz
xchg
repz
mov
iret
mov
fsubrl
push
cmpsb
push
out
fidivl
or
cs
sbb
mov
nop
push
lods
rcrl
lea
xor
inc
aas
push
adc
xchg
push
shl
adc
pusha
int
or
cmpb
sub
mov
stos
test
lret
loopne
aam
cltd
cmp
scas
loop
mov
insl
stc
test
std
inc
xchg
add
loopne
fsubrl
dec
jnp
fsub
inc
push
or
sub
stos
orl
adc
or
jge
jle
cmc
out
and
push
popf
xor
int3
pop
or
in
jg
sub
ret
xor
fiaddl
scas
xor
inc
sbb
xchg
test
push
ret
mov
mov
mov
repz
jne
icebp
jle
into
pop
dec
xchg
into
fadds
push
mov
mov
push
cltd
jp
xor
cs
adc
or
jbe
hlt
mov
jbe
nop
dec
es
sar
repz
test
jp
xchg
scas
push
into
and
jp
roll
scas
and
test
enter
push
jecxz
mov
pop
leave
in
jo
lds
enter
dec
jmp
adc
int3
cmp
cmpsb
pop
lret
loop
mov
push
out
fistps
stos
cmp
mov
jne
mov
daa
shlb
scas
mov
ljmp
jne
enter
cmc
mov
jno
mov
adc
call
lret
cmp
sub
fsqrt
jo
cld
jae
hlt
xor
pop
or
xor
out
add
pop
sub
imul
sub
sub
das
push
adc
adc
lret
mov
xor
pop
cld
ja
sub
pop
pusha
dec
lds
scas
ficoms
scas
mov
sub
ret
sahf
fs
lret
cli
dec
mov
movsl
mov
mov
pop
mov
test
notl
jmp
mov
cmp
fdivl
inc
outsl
xorl
sbb
fstpt
loopne
subb
rcrb
dec
out
push
xor
repz
shlb
xor
cli
jl
jno
xchg
xor
data16
hlt
push
mov
adc
divl
stos
shll
xor
mov
jno
cwtl
add
aad
addr16
push
adc
jno
insl
or
cld
sub
bound
inc
lahf
outsb
test
jp
sti
mov
rorb
push
mov
mov
sub
sub
lea
and
push
test
mov
repz
sbb
movsl
sub
scas
adc
fstpl
inc
mov
std
gs
xor
stos
repz
xchg
jbe
loope
leave
ror
mov
dec
call
scas
rcr
scas
scas
lcall
loope
inc
inc
iret
cmp
ja
loopne
cs
ljmp
andl
fnstsw
xchg
cs
lods
test
jb
sbbb
in
or
jb
push
push
cld
nop
xchg
push
push
mov
and
dec
xchg
mov
pop
mov
pop
and
and
inc
ljmp
sarb
sti
xchg
imul
dec
inc
arpl
stos
jbe
pop
jne
add
xchg
hlt
scas
mov
xchg
xchg
sbb
outsl
pop
pop
rclb
loopne
mov
outsb
call
daa
pop
jmp
pushf
shrb
int3
push
add
fstps
jbe
mov
push
hlt
xorb
popa
xorb
mov
mov
xor
xchg
repnz
minps
dec
stos
jae
sub
fs
movsb
fidivrs
push
hlt
imul
cmc
mov
or
inc
lret
mov
sahf
mov
mov
or
shll
sub
jns
sti
adc
rclb
mov
pushf
ret
lods
xchg
or
inc
inc
int
jl
mov
es
mov
icebp
push
sbbb
push
dec
sbb
and
stos
or
movsb
out
dec
out
loopne
adc
mov
push
push
add
dec
add
or
imul
das
mov
xor
push
mov
lock
mov
jno
cmovb
or
int
repz
mov
lcall
mov
inc
inc
es
mov
xchg
mov
cmp
mov
jno
fwait
cmp
mov
jmp
lret
sub
add
stc
loop
fstpt
xchg
jne
scas
adc
sti
loopne
lds
repnz
mov
psllq
mov
incb
xchg
jecxz
add
push
add
xor
cmp
jmp
adc
lods
stos
lods
mov
sti
sbb
pop
cmpsl
mov
add
int
mov
ds
xchg
pop
mov
orl
add
test
inc
fidivrl
add
inc
mov
pop
loopne
pushf
fwait
mov
ds
inc
add
mov
push
aaa
insl
lret
mov
adc
mov
sub
scas
insl
ss
inc
mov
add
in
stc
lock
insl
cmc
iret
loopne
gs
pop
pop
xchg
int3
call
gs
repnz
out
cmp
test
enter
dec
ret
test
sti
inc
pop
mov
cmpsl
ffree
jg
pop
xor
and
sub
pop
scas
cmp
in
pop
dec
xor
sbbb
std
aad
cmp
adc
sbb
shlb
mov
cwtl
adc
loop
xchg
or
mov
xlat
lahf
loope
mov
mov
sti
add
push
push
mov
test
or
push
out
rclb
insl
adc
lahf
in
test
mov
inc
inc
andb
mov
popl
das
xor
xor
mov
push
xchg
leave
mov
lea
cmp
cmp
sbb
cld
lock
inc
jo
jmp
cli
fdivl
mov
rorb
addr16
add
add
idiv
mov
movsb
fdivl
sti
xchg
add
mov
rol
out
ljmp
mov
push
add
ret
mov
test
imulb
push
das
out
cmp
push
adc
aaa
push
pop
push
movsl
mov
push
rcll
dec
adc
fstp
add
sahf
es
sti
ret
add
cmp
loopne
daa
jmp
js
xor
rolb
jno
mov
xchg
fnstsw
mov
lods
mov
das
dec
fidivs
mov
sub
popf
cmpsb
out
sahf
shll
xorl
sub
aaa
ds
cmpb
adc
push
repnz
mov
out
mov
mov
mov
ja
pop
cs
inc
and
mov
mov
test
cmp
mov
cmpl
sti
mov
pop
mov
nop
lods
adc
push
mov
out
shlb
cs
mov
ljmp
inc
popf
xchg
jo
icebp
inc
out
cltd
fnstenv
jp
jo
cli
pop
pusha
cmp
ret
imul
ret
stc
pop
cmpsb
mov
jno
cmpsb
sub
adc
jg
inc
frstor
mov
xchg
mov
mov
das
xor
add
push
jnp
adc
adc
lea
popf
mov
mov
push
adcb
push
dec
stos
cmc
sub
ds
add
stos
xchg
mov
sub
jnp
cmp
mov
rcrb
add
mov
shll
out
popf
and
test
dec
adc
mov
dec
sub
outsb
xor
pop
jle
pop
mov
dec
in
fistps
sahf
in
mov
pop
jns
sbb
fucomp
scas
inc
xchg
jns
mov
mov
add
fdivp
mov
adc
jmp
xchg
xor
mov
imul
cltd
push
sbb
sar
jne
add
es
push
push
jae
test
pop
xchg
mov
sub
add
repnz
pop
cld
stos
rcrb
les
shll
sub
push
test
jbe
cld
sahf
aas
add
inc
dec
mov
std
andb
clc
popa
cmp
mov
aas
sub
sub
dec
mov
xchg
jmp
xchg
int
ljmp
fists
push
ljmp
dec
scas
std
jmp
mov
mov
xlat
push
jmp
scas
sub
fldl
lret
testb
mov
fdivl
orb
sahf
mov
push
mov
xchg
rolb
mov
cs
addl
cmpsl
hlt
or
rolb
mov
int
movsb
add
xor
sub
cld
repnz
inc
push
xchg
into
icebp
mov
pop
in
and
cmp
scas
stos
xor
push
ret
movsl
ret
sub
xchg
ljmp
mov
xchg
andb
lahf
je
mov
test
das
or
lock
cli
movsl
xchg
jecxz
and
hlt
mov
fs
mov
mov
sbb
das
sub
xorb
test
dec
push
call
sbbb
jb
push
jb
incb
lods
mov
mov
addl
sub
cmpsl
cmp
xchg
repnz
and
leave
sub
cmc
je
push
cs
push
fwait
xor
popf
add
leave
shll
adc
das
xchg
into
movsb
in
add
sbb
cmp
aad
lcall
or
aas
outsl
push
mov
je
add
jmp
mov
push
mov
pop
out
push
repnz
push
clc
js
dec
scas
push
dec
adc
das
and
scas
push
arpl
bound
and
push
popl
leave
bound
out
jbe
sbb
popf
pop
fs
arpl
loopne
movsl
mov
cmp
aaa
pop
insl
mov
std
mov
push
idivl
ds
jmp
ljmp
pop
and
pop
xchg
pusha
nop
fsubs
lock
test
popa
in
lret
pushf
jnp
sub
or
das
push
add
movsb
lock
xchg
xor
push
and
inc
loop
jmp
orl
push
xor
cld
jle
jo
out
mov
and
adc
fisttpl
mov
es
in
push
push
adc
icebp
cmp
sub
mov
rcrl
cs
push
into
sbb
je
stos
fwait
ret
insb
inc
dec
xor
fcmovnb
sub
rcrl
xor
sub
dec
mov
mov
jo
mov
leave
cmpb
fwait
sti
mov
mov
push
sahf
inc
jl
xchg
push
push
sbb
shrl
imul
icebp
rcr
xor
stos
adc
mov
add
scas
aad
outsb
xchg
rcrl
jp
xor
cltd
jnp
daa
out
xchg
and
rclb
adc
scas
loop
and
sbb
jle
fwait
mov
push
pop
ret
jb
outsb
xor
xor
cmp
lods
pop
push
decb
pushf
adc
fnstsw
cmp
or
fisubrs
mov
ret
mov
mov
add
dec
jg
cli
lret
shr
movb
sbb
dec
sub
lahf
pop
xchg
lret
push
int3
mov
rolb
lock
dec
cli
mov
daa
out
jnp
fwait
cmp
and
lock
adc
shlb
loop
mov
mov
in
push
inc
xor
popa
stc
jg
test
or
ds
inc
cwtl
sbb
push
sti
mov
std
push
pop
xor
enter
adc
push
ljmp
xor
sub
andb
sub
movsb
push
dec
cmp
mov
inc
scas
orl
mov
xor
lock
cwtl
push
pop
mov
push
pop
push
ret
orb
push
mov
push
mov
pusha
repnz
mov
pop
adc
ja
repz
lods
or
insb
mov
icebp
popa
or
jle
shr
jl
mov
jbe
scas
mov
stc
sbb
mov
repz
mov
fnstenv
stc
jmp
mov
stc
mov
pop
dec
out
test
mov
in
enter
sti
hlt
lds
addr16
sub
mov
mov
mov
ljmp
js
pop
fisubrs
pop
stos
shll
inc
repnz
dec
jns
jns
sahf
adc
ss
mov
pop
xor
add
pop
push
fidivl
sahf
adc
dec
loopne
jbe
and
pop
sarb
repnz
repnz
shrl
lahf
cmp
negl
repnz
mov
mov
push
arpl
std
sbb
mov
cmp
cld
movsb
lret
mov
repz
outsb
sub
and
int3
xor
stos
xor
mov
jmp
inc
test
push
stc
mov
loopne
aas
mov
aaa
cwtl
cmp
ss
int
dec
stos
into
push
pop
loop
and
add
stos
mov
fldenv
mov
rcrl
hlt
mov
sbb
cli
xor
fld
dec
xorb
testb
std
xchg
shll
cld
imul
std
mov
sarl
out
and
pushf
cmp
es
andb
mov
push
in
xor
addr16
sbb
sbb
mov
out
sbb
add
rol
fcoms
mov
add
mov
xchg
jmp
sub
lock
sti
cmp
jb
scas
xor
ds
pop
jo
add
jae
je
mov
adc
jmp
cmovg
enter
pop
xchg
jg
test
lock
ret
fdivs
out
repnz
je
xchg
push
int
mov
cmp
stos
and
push
fwait
repnz
mov
movsl
ljmp
inc
sahf
inc
dec
dec
neg
mov
cmp
pop
jp
jo
popa
pop
jnp
xchg
popf
dec
lds
mov
lahf
xlat
push
xor
push
mov
mov
dec
loop
jae
shl
scas
cmp
pop
jge
addb
xorb
test
lahf
mov
sbb
scas
popa
xor
mov
inc
mov
fbld
shlb
lock
add
dec
lock
lea
cwtl
cmp
fwait
cmp
cmpsb
jmp
sbb
cs
xchg
jle
sub
adc
iret
sti
mov
cmpsl
inc
push
mov
cs
dec
cli
dec
mov
aam
jns
mov
andl
sub
lret
add
lds
inc
scas
adc
add
jg
scas
rcll
pop
lock
cmc
sub
xchg
insl
xor
out
leave
pusha
clc
arpl
sti
inc
adcb
push
loop
inc
cmp
mov
sub
andl
xor
sub
mov
aas
imul
inc
sbb
jb
ljmp
adc
test
sbb
ljmp
nop
cmpsb
sarb
inc
and
pop
decb
mov
iret
xchg
jg
ficoml
pop
popf
mov
sub
loop
mov
xorb
xchg
and
sbb
xchg
lea
mov
cmp
imul
lock
mov
xor
mov
movsl
mov
lcall
pop
push
pop
adc
loopne
loop
mov
jno
daa
dec
aas
sti
mov
shll
imul
mov
stos
mov
inc
fidivrs
iret
and
adc
imul
mov
mov
movsl
adc
fdivl
cmp
pop
mov
leave
imul
dec
fcomps
in
cmpsl
sbb
jge
out
or
rcll
scas
imul
cmp
mov
sub
jge
push
mov
sub
xchg
lods
lock
insl
hlt
addr16
in
icebp
clc
clc
sub
mov
es
enter
xor
pop
sbb
jmp
or
movsl
dec
or
inc
sbb
testb
cltd
incl
in
imulb
fwait
sbb
push
cmp
mov
jo
mul
stos
sbb
push
lret
fwait
jno
add
imul
sbb
mov
arpl
sbb
push
je
adc
mov
jge
hlt
pop
out
sbb
jp
inc
loopne
insl
mov
rcrl
orl
xor
adc
lods
or
mov
adc
repnz
push
cltd
pop
int3
hlt
jge
inc
push
mov
mov
stos
pop
shl
sub
lock
imul
push
shll
mov
push
cmp
mov
lea
or
mov
inc
mov
popf
scas
mov
mov
pop
sub
lock
aaa
lea
test
add
mov
inc
adc
dec
and
mov
fcompl
adc
sub
inc
sub
outsb
lods
loope
cli
xor
loop
mov
inc
jb
jnp
std
mov
sbb
lods
cltd
mov
fdivrp
in
sub
pushf
jne
pop
shll
int
inc
xor
test
rcr
adc
sbb
sub
pop
aas
mov
pop
pop
fwait
cmp
xor
mov
cmp
add
shlb
nop
jle,pt
nop
into
lock
aas
test
decb
mov
jbe
es
test
mov
aad
mov
aas
xor
scas
jle
jg
sub
loop
repnz
loope
addl
jo
testl
mov
arpl
out
sub
xor
mov
add
lcall
jae
pop
and
xchg
mov
mov
mov
jmp
cmpsb
movsb
xor
outsl
push
dec
mov
hlt
sub
push
data16
mov
test
dec
in
call
insl
jae
imul
mov
mov
or
insb
movsb
jg
add
mov
mov
add
pop
and
sarl
sbb
lcall
fdivrp
arpl
mov
lahf
mov
cmp
repnz
mov
and
lds
xchg
pop
or
cli
pop
cmp
aad
loop
sbb
int
xorl
pop
push
inc
jmp
stc
scas
adc
cmpsb
icebp
and
stos
or
xchg
in
push
sub
xchg
sbb
je
loop
sbb
and
mov
clc
rclb
mov
or
ud2
test
mov
into
or
add
sub
cmp
out
add
add
push
xchg
divl
jmp
pushl
pop
xchg
mov
xchg
mov
je
repz
hlt
iret
dec
ljmp
inc
popa
jmp
ret
fistpl
fstl
push
leave
sti
pop
scas
movsl
jp
lret
divb
in
xchg
sahf
shll
or
stos
xor
fidivrs
lea
push
mov
mov
cmp
mov
push
xchg
xor
je
movsb
mov
mov
xchg
ds
cmpb
push
stos
jge
std
movl
push
mov
hlt
mov
outsl
pushf
pop
sarb
xor
btr
arpl
ret
mov
dec
adc
icebp
sub
mov
add
pop
mov
xchg
mov
mov
insl
or
rcrl
call
shlb
lock
rcll
hlt
sti
mov
imul
cmp
ljmp
rorb
into
and
test
jp
shll
repnz
adc
pop
mov
loop
popa
sbb
loop
ds
dec
fisttpll
cmp
pop
sub
mov
lcall
pushf
shrb
xor
pop
ficoms
add
xchg
fsts
xchg
hlt
repz
lock
inc
mov
icebp
fdiv
mov
and
lea
sub
lods
pop
icebp
jbe
pop
out
aas
mov
imul
xor
xorb
daa
ljmp
and
jnp
and
loope
mov
push
mov
pop
mov
lret
cmp
rorb
mov
lahf
mov
dec
fwait
push
std
iret
add
mov
mov
and
mov
mov
stos
fidivl
xor
or
or
add
xorl
push
icebp
lds
mov
mov
push
xchg
dec
sahf
sub
popf
and
in
sarb
xor
and
lcall
ret
lcall
mov
mov
inc
push
adc
testb
cmp
test
cs
mov
adc
test
imul
push
lock
int3
mov
xor
loope
mov
mov
adc
fs
add
adc
negl
rolb
xor
sbbl
rcr
leave
mov
mov
decl
pop
icebp
imul
xor
jnp
mov
xor
lret
xor
icebp
pusha
addr16
pop
or
aas
adc
and
jge
in
xor
xor
cmpsb
cld
lret
push
sbbl
lods
jl
adc
in
fisubl
pop
push
xor
scas
jl
call
cmc
leave
test
jb
aas
cld
or
xor
ror
cltd
lods
pop
leave
int
movsl
test
jl
pushf
mov
ds
ret
and
lret
bound
mov
push
sub
inc
shr
lret
sub
pop
pop
hlt
lcall
mov
insl
cld
xor
push
in
mov
lods
les
ja
subl
mov
leave
shlb
bound
cltd
adc
cmp
cmpsl
dec
ljmp
lcall
jl
ljmp
and
stos
mov
pop
mov
and
lahf
movsb
rorb
mov
push
push
aam
mov
dec
lods
fs
div
push
sub
add
xlat
pop
ds
push
mov
lea
mov
mov
jmp
push
pop
mov
mov
inc
inc
iret
inc
cmc
rorl
js
push
xchg
aad
aam
mov
aas
adc
cmp
sti
and
or
jmp
das
adcb
lret
xor
lahf
or
push
das
xchg
daa
cmc
repnz
cld
mov
out
stos
dec
repnz
mov
outsl
aas
dec
sbb
inc
push
cmpb
cmp
leave
lea
loop
das
push
nop
cmc
pusha
pop
out
xchg
sub
cmpsb
pop
arpl
and
xor
fnstenv
xor
pop
rcrl
mov
jecxz
cmp
fdiv
addr16
xor
mov
add
sub
or
mov
loopne
push
addb
push
loop
jns
outsb
add
ja
pusha
jecxz
push
insb
rcl
cs
arpl
mov
inc
cli
mulb
in
pop
cmp
pop
movsb
and
cmp
aas
lock
dec
daa
and
fadds
test
orb
push
loop
mov
push
je
cmpsb
pushf
pop
jp
cwtl
mov
leave
in
add
movsb
push
mov
xchg
std
stos
in
mov
outsl
cmpsl
sbb
stc
mov
jmp
outsb
xchg
mov
mov
sahf
flds
mov
or
aaa
popf
int3
sub
add
aas
sbbl
add
leave
addb
rcrb
neg
and
stos
mov
push
ljmp
mov
pop
add
cmpsb
adcb
repnz
and
nop
sti
mov
add
mov
les
subb
xor
mov
dec
jl
jns
xchg
scas
sub
pop
in
cmpsl
add
stc
jbe
ret
ret
into
daa
call
scas
hlt
pusha
decl
mov
pop
mov
jg
movsb
xchg
dec
xor
mov
test
out
mov
mov
call
int
pop
jb
mov
xchg
jnp
testb
das
outsl
cmpsb
pop
add
xorb
lds
mov
cltd
push
aas
inc
inc
push
mov
fmull
push
dec
dec
mov
icebp
adc
adcl
cmc
add
fwait
jbe
mov
mov
adc
or
lret
ljmp
outsb
inc
imull
pop
cmp
inc
mov
mov
aas
call
jne
dec
sub
mov
adcb
lea
pop
dec
jbe
jne
sbb
jg
sahf
mov
xor
jl
sbb
not
cmpb
nop
mov
sbb
dec
mov
sbb
fsubs
xchg
pop
out
push
mov
push
and
test
fnstenv
mov
mov
push
in
mov
pop
clc
insl
xchg
icebp
inc
jno
movsb
and
mov
xchg
sbb
mov
mov
ret
loopne
rorb
call
rorl
ds
sbb
loop
sti
sub
xor
aas
lods
adc
xchg
iret
lret
scas
mov
pop
mov
pushf
pop
addb
pop
aaa
rcr
cmp
mov
aad
sub
leave
mov
inc
fists
adc
dec
xor
ds
mov
repnz
and
jmp
mov
out
ljmp
and
nop
rcrl
movsl
in
call
stos
bound
mov
add
leave
scas
pop
inc
icebp
jp
mov
cwtl
push
dec
xchg
dec
cmpsb
cmp
mov
fmul
fdivl
and
ficoms
mov
stos
into
mov
jmp
mov
mov
and
fs
dec
scas
push
dec
mov
xor
and
sti
shll
xor
mov
lret
sbb
test
cs
movsb
fstp
dec
xchg
adc
out
mov
loope
cmp
pop
sahf
sti
jne
xchg
cli
popa
adc
outsb
test
lret
les
mov
cmp
cltd
incb
hlt
add
cmpsb
pop
cs
sti
aaa
sbb
pop
add
sahf
je
mov
repz
shll
add
bnd
cmp
nop
jmp
jns
loope
adc
xor
sahf
sub
jg
stos
dec
or
add
pop
inc
add
aas
std
movsb
andl
ret
and
cmpsb
xchg
cld
cld
icebp
mov
push
pop
mov
dec
jb
pop
jmp
ret
cmc
xchg
addr16
lds
dec
xor
pusha
mov
dec
stos
or
or
cmpsb
adc
popa
fbld
lods
out
xchg
xchg
sbb
mov
das
sbb
pop
mov
movb
add
inc
lods
mov
scas
pop
mov
pop
ljmp
jno
pop
test
sahf
push
xchg
stos
std
shl
xchg
icebp
dec
xor
dec
and
mov
flds
rorl
enter
mov
pusha
inc
xchg
nop
mov
outsl
ror
popa
xor
pushf
out
push
mov
and
stc
sub
nop
out
push
imul
ljmp
and
sbb
or
mov
nop
mov
icebp
pushf
push
ret
imulb
pop
cmpsl
inc
push
das
decb
xchg
stos
popf
xor
cmpb
cmp
jp
push
insb
or
test
into
lcall
inc
sub
cmpsl
xchg
aad
jb
jae
mov
aas
or
insl
pop
in
mov
sbbb
pop
or
mov
lret
imul
mov
je
jecxz
adc
jae
mov
push
int
xorb
mov
jp
xchg
xor
sbbb
cmp
push
arpl
call
aaa
push
aam
sti
sarl
lcall
lret
sti
push
pop
lret
jb
jb
iret
mov
inc
sbb
jp
daa
mov
inc
arpl
fcmovu
cmp
aam
mov
ljmp
rorl
shll
push
xchg
jns
imulb
sbb
pop
dec
add
cld
jmp
sbb
mov
pushf
ss
pop
in
cmp
push
ss
pushf
sbb
pop
sbb
sahf
insb
xor
mov
in
xor
jbe
in
addb
idivl
cmp
lcall
and
je
aad
test
mov
or
sub
and
imul
sub
insb
repz
pop
sub
ss
sub
clc
insb
insb
xor
daa
aas
mov
cld
subb
or
arpl
stc
inc
mov
repz
sub
dec
mov
jb
les
lret
xchg
xor
and
lahf
push
loopne
dec
ret
sar
xor
xchg
out
icebp
cwtl
mov
movsb
mov
shrb
push
outsl
jle
xchg
sub
js
call
push
imul
mov
movsl
or
lahf
call
jecxz
pushf
jbe
in
jp
xor
xor
xchg
popa
cmp
in
rcll
sahf
cwtl
sub
je
cmpl
orb
mov
mov
pop
mov
aad
lods
xchg
inc
push
xchg
lock
mov
inc
dec
and
add
int
mov
sti
dec
call
sub
ds
xor
sub
vcmpps
mov
pushf
clc
xor
xor
lcall
jnp
and
into
push
add
pop
fnsave
push
std
pop
lret
orb
mov
lods
add
mov
jnp
inc
and
dec
std
das
mov
aad
dec
push
dec
int
inc
loopne
test
leave
pop
push
cmp
cmpsl
jno
pop
sbb
mov
jbe
out
xchg
stos
or
jb
push
sarb
and
cmp
mov
nop
jo
xchg
push
clc
or
add
cs
popf
repz
lcall
cli
enter
push
sub
or
pushf
xchg
dec
mov
mov
fstpl
dec
adc
mov
bnd
mov
xchg
lea
repnz
outsl
flds
xor
out
aam
stc
jecxz
sbb
scas
loop
cmpsb
nop
pushf
xorb
xlat
add
mov
xor
push
icebp
movsl
xor
lock
ljmp
inc
mov
add
cli
scas
xchg
sbb
lods
out
sti
or
adc
pusha
aaa
scas
mov
daa
jnp
arpl
pop
int
clc
sbb
sbb
jecxz
and
sahf
mov
shrl
cmpsb
sbb
roll
cmp
jns
out
push
mov
dec
push
shlb
inc
and
mov
adc
cmp
repnz
add
pop
mov
inc
lcall
mov
sbbb
pop
jl
sti
push
jo
jbe
mov
hlt
lret
adc
call
adc
std
movsl
jg
and
or
loopne
test
mov
adc
push
add
fnstenv
ret
in
mov
mov
fldl2t
lea
int
mov
inc
test
xor
jg
xor
leave
test
add
and
adc
jmp
test
cmp
pop
and
gs
cld
jnp
test
repnz
jae
insl
scas
rcl
sub
mov
fucomip
push
inc
mov
aam
add
f2xm1
rclb
sti
mov
mov
sbb
mov
cli
out
test
movsb
negl
mov
arpl
cmp
or
mov
mov
sahf
and
xchg
xor
movsb
jae
and
mov
cmc
mov
clc
sbb
loop
mov
sbb
les
push
mov
pop
push
inc
cltd
test
push
loop
stc
dec
sahf
jmp
and
sub
sub
lahf
cltd
mov
xchg
pop
shlb
repnz
dec
cmc
aas
aaa
dec
sub
inc
ret
ret
cmp
ret
int3
pop
shll
xor
sub
les
insl
pop
test
pop
pop
std
mov
aam
fbstp
xor
das
sbb
mov
dec
shr
xchg
mov
mov
repz
fs
cmp
out
mov
pusha
daa
cli
pop
fsub
mov
test
fcomip
dec
lahf
ret
jecxz
es
sub
jg
int
fisubrl
mov
stos
ror
ljmp
decb
pusha
nopl
push
icebp
pushf
mov
cmp
mov
sub
ss
imul
test
movsb
add
pop
leave
std
addr16
sahf
ss
dec
nop
test
test
mov
jbe
pop
push
lcall
mov
test
inc
adc
push
dec
test
mov
xchg
je
rcll
add
int3
pop
mov
shl
fwait
pop
jne
addr16
cmp
sbb
mov
cwtl
aaa
xchg
mov
dec
inc
push
ret
filds
out
mov
repnz
xchg
jo
sbb
inc
sbb
mov
testl
pop
jns
dec
icebp
mov
add
xor
adc
push
aad
and
faddp
hlt
inc
movsb
push
loopne
jge
lods
push
imul
clc
rcrl
lahf
subl
mov
es
loopne
add
mov
sbb
sub
insl
add
stos
mov
dec
inc
wrmsr
enter
jb
push
xor
aas
and
jp
xor
pusha
sahf
pop
movsl
in
scas
jp
shlb
pusha
mov
mov
lret
lods
adc
inc
xchg
mov
lock
mov
icebp
stos
out
or
mov
mov
mov
pop
je
daa
cmpsb
xchg
xor
sub
sbb
ja
pushf
xor
popf
lock
repz
mov
cli
cmp
jmp
mov
pop
loopne
jp
popa
ficompl
cmp
out
sbb
out
inc
stc
xchg
rcrl
loopne
xor
lods
push
inc
or
inc
sub
jl
mov
and
cmp
sahf
sarb
pop
mov
shl
inc
push
adc
repnz
fstpt
icebp
mov
mov
jmp
scas
aaa
fadd
adc
andb
icebp
xor
fisttps
cli
gs
jns
mov
adc
mov
sub
sub
out
sub
push
stos
mov
pop
jle
ds
xchg
pop
sahf
loop
pop
pop
mov
jb
repnz
mov
dec
lea
push
pop
hlt
push
xorb
xor
jb
adc
repnz
dec
jmp
scas
cmp
mov
xor
xchg
mov
fdivrs
incl
lock
sub
aam
ljmp
push
ffree
push
fmuls
xor
and
sbb
into
cmp
mov
mov
and
mov
fstl
call
inc
mov
xor
mov
fnsave
scas
bsf
repnz
insl
push
mov
inc
xchg
and
loopne
frstor
adc
and
inc
ret
orb
fwait
cmp
add
mov
ljmp
sbb
xchg
mov
rorb
mov
call
pushf
ljmp
into
cmp
pop
fbstp
outsb
imul
loope
test
cmp
pop
sbb
pop
dec
add
pop
lods
lock
mov
pop
daa
add
or
xchg
jne
fneni(8087
ret
pop
xchg
mov
enter
leave
cmp
jmp
in
jge
shl
pop
stc
cli
inc
aam
pop
fnstsw
pop
data16
pop
push
aaa
mov
push
xchg
jl
ss
ljmp
call
cmp
ds
icebp
js
jb
push
sub
jbe
pusha
dec
adc
adc
push
cmpl
mov
in
cmc
pop
mov
rolb
mov
popf
ss
mov
popa
fcomps
in
scas
adc
push
cmp
mov
xorl
mov
mov
adc
sahf
xchg
inc
sub
mov
test
add
and
xor
addr16
aaa
cmp
out
das
mov
movsl
cmpsb
mov
lock
jmp
dec
cli
es
loopne
rorl
add
pop
and
orb
xchg
and
cmp
sub
mov
or
add
mov
test
bound
mov
gs
add
loop
rcll
pop
and
mov
jae
cmp
sub
dec
adc
and
cwtl
push
pop
ljmp
fmul
sub
cmp
aad
dec
cmpsb
adc
jp
movsl
fistpll
xor
ss
jnp
rcll
dec
jge
out
lods
incb
popf
jmp
adc
lods
mov
jge
cld
pop
mov
rorl
cmpsl
mov
scas
xchg
cs
push
jmp
std
mov
xor
dec
pop
rcl
jns
xor
mov
mov
dec
adc
pushf
sbb
dec
xchg
insl
stos
mov
cmp
xor
scas
mov
jle
pop
fadd
repz
jmp
pop
mov
pop
push
dec
fidivl
jae
imull
add
cmp
je
enter
jo
add
pusha
cli
in
mov
ffreep
fsub
or
mov
rcll
lds
inc
fnstenv
lcall
sbb
mov
addr16
fnstcw
inc
pop
and
ss
jg
int
cld
repnz
daa
fstpl
push
cli
push
xor
shrb
out
jb
pop
imul
jbe
jae
aad
bound
mov
addl
or
push
add
add
adcl
inc
popa
mov
adc
adc
clc
cmp
pextrw
mov
cmp
mov
arpl
das
roll
scas
fsub
jmp
loope
push
and
nop
inc
mov
frstor
pop
cmp
xchg
add
mov
cmc
arpl
mov
sbb
cmp
out
push
cmpsb
inc
xor
aaa
shrb
testb
push
pop
dec
adc
xchg
mov
out
fnstcw
fs
rcl
and
sbb
test
stos
and
aas
dec
jbe
cmp
loopne
jmp
outsl
arpl
call
sbb
rcll
push
mov
test
movsl
xor
mov
mov
loop
mov
dec
mov
mov
jb
daa
mov
aaa
inc
outsb
frstor
sahf
addr16
adc
in
jno
push
add
call
aas
mov
fisttpl
and
mov
jns
add
das
xor
mov
jb
push
sbb
int
or
fldl
iret
dec
int
mov
test
lahf
xor
icebp
stos
xor
mov
mov
cwtl
loopne
inc
in
xor
mov
mov
mov
sbb
sbbl
test
ret
xchg
jmp
das
xchg
movhlps
mov
sahf
push
lock
pop
cmp
push
sbb
cmp
and
mov
xchg
mov
cmpsb
das
jmp
add
repnz
cwtl
lock
add
pusha
push
mov
jb
aad
add
mov
fwait
stos
icebp
adc
xchg
bnd
xchg
xor
adc
and
pop
jns
and
and
inc
adcb
movsb
movsb
inc
xchg
pusha
lret
movsb
mov
or
bound
push
iret
stc
pop
push
pop
or
adc
lahf
push
cmp
sbb
pop
xor
ljmp
daa
mov
mov
sti
lods
aad
popf
int
dec
push
cmp
sub
rolb
fucom
push
pop
push
inc
jbe
push
test
cmc
mov
dec
hlt
ja
adc
movsb
jp
cmc
repnz
mov
rcll
shr
add
stc
jle
pop
icebp
add
cmp
outsl
mov
es
xor
jle
mov
mov
stos
add
and
and
jb
and
mov
testl
jecxz
lret
aad
aas
stos
fdivp
mov
jg
sub
rcl
inc
call
inc
out
add
lods
cltd
jnp
hlt
mov
shrb
xchg
in
pop
mov
jnp
xor
xchg
mov
in
js
das
dec
add
jp
xor
ss
cmp
data16
loop
or
adc
gs
es
xor
inc
popf
ret
in
inc
mov
or
lods
mov
data16
scas
mov
mov
dec
rcl
movsl
sarl
xchg
jp
mov
int
mov
add
out
into
and
insb
push
cltd
push
gs
js
and
push
sbb
and
mov
add
fistpll
pop
std
int3
dec
mov
nop
out
mov
repnz
loopne
cmpsb
adc
jb
das
sbb
jae
mov
test
cmp
lds
leave
in
xor
pop
shrb
shrb
rcll
adc
cmp
icebp
pop
stc
push
cld
cmp
mov
cmpps
xlat
xor
negb
lock
xor
adc
mov
call
imul
repnz
push
or
int
lock
stc
aam
repnz
cmpsl
adc
xlat
mov
popa
mov
lods
lcall
add
popf
stos
pop
icebp
dec
cwtl
ljmp
push
adc
out
fwait
or
test
dec
xchg
mov
rol
jp
or
cld
popf
mov
pop
mov
mov
icebp
or
int
and
lret
xor
push
int
mov
sbb
ret
inc
lods
adc
jle
daa
js
mov
leave
xor
leave
negb
pop
insl
outsb
dec
into
test
xor
sahf
ja
shrb
add
xchg
adc
cs
push
dec
inc
and
call
xor
sub
or
shll
xlat
cs
repz
scas
inc
mov
xor
xor
das
xor
lock
cmpsb
imul
icebp
push
sti
stos
add
mov
imulb
pop
mov
loopne
fldcw
adc
xorps
add
test
lds
mov
mov
add
cmp
adc
jp
jb
loop
fidivs
testb
xchg
cli
leave
movsl
cmc
out
test
cmpsl
call
add
add
inc
pop
outsl
dec
stc
push
mov
adcb
mov
imul
sbb
shrb
sub
sti
mov
adc
push
xor
insb
ds
adc
mov
inc
loopne
xorl
rorb
push
fwait
mov
in
sbb
cs
mov
scas
push
jle
cmp
inc
int
popaw
mov
push
roll
xchg
mov
and
sbb
leave
dec
mov
loopne
pop
icebp
lcall
jg
jmp
imul
sarl
cld
cmp
leave
sub
scas
ljmp
mov
dec
push
ds
aam
push
add
movsb
pop
or
rcll
je
enter
pop
xchg
push
out
std
insl
jge
mov
lock
sub
icebp
sub
pop
les
pop
xor
mov
into
mov
gs
scas
add
lds
movsl
pop
mov
add
mov
dec
mov
hlt
cmp
mov
aas
rorl
stos
xchg
repz
loop
repnz
mov
test
fwait
mov
or
ja
das
push
rcll
xorb
sub
cs
addr16
and
push
daa
mov
rcrl
mov
in
sbb
push
cmpsb
lods
adc
fldenv
mov
push
sahf
rolb
sub
xor
lea
adc
fcomps
aaa
mov
sti
jmp
adc
jo
sub
scas
mov
incb
movsl
sbb
sbb
mov
and
push
loopne
adc
xor
xchg
push
and
xor
andb
sub
jbe
xor
cmp
fcomi
jb
andb
je
pop
addr16
aaa
inc
and
pop
pushf
adc
cli
shrb
push
daa
pop
jae
test
int3
subb
and
js,pn
pusha
and
cs
out
outsl
xor
in
cmp
arpl
sbb
aaa
push
or
aas
mov
sahf
push
incl
push
fisubs
loope
aaa
ds
je
lcall
inc
sub
leave
mov
mov
push
sbb
insl
and
dec
mov
push
sahf
inc
push
cmc
pop
dec
adc
or
rcll
add
mov
fwait
lods
leave
daa
cmpsl
xor
xor
fisubs
in
hlt
push
jb
dec
sti
mov
or
aam
jae
movsb
pop
dec
jae
jbe
loop
sti
pop
inc
adc
jns
mov
std
std
xchg
lods
push
clc
daa
inc
rcr
jle
aam
cmp
jb
adc
sti
cmp
shr
xchg
adc
push
pop
cmp
add
adc
sbb
lret
fistl
sti
sbb
fldcw
lcall
add
adc
jl
sub
stos
test
pop
repnz
dec
loopne
pop
sub
arpl
cltd
cwtl
adc
mov
cwtl
pusha
pop
and
adc
dec
push
test
scas
pop
mov
incb
adc
and
mov
es
stc
jne
lea
out
mov
sti
mov
stos
das
push
hlt
sbb
cmp
sub
mov
xor
and
int
in
les
data16
aad
add
stos
sbb
mov
mov
stos
jecxz
cltd
push
inc
sahf
hlt
das
mov
inc
cmpsb
adc
inc
jmp
rclb
xchg
mov
incb
and
aas
lock
repz
insl
mov
xchg
xchg
lods
cld
scas
loopne
pop
ljmp
adc
fsubrl
roll
inc
lahf
repz
cmc
sar
pop
aaa
aam
bound
adc
cmp
cmp
pushf
add
orw
leave
fcom
popa
rorl
outsl
inc
cmp
cli
in
inc
push
loopne
add
sub
cmovns
frstor
mov
int
fdivrl
push
sahf
pop
sub
mov
jae
mov
xor
pop
fisubrl
stos
push
bound
xorl
cmpsb
cmp
std
aam
lret
jno
ds
xor
popa
push
mov
jl
loope
sub
in
movsl
out
mov
lds
xchg
mov
movsb
dec
test
sahf
inc
cmp
cmpsl
aam
jo
enter
popf
mov
test
iret
loopne
lock
pusha
in
outsb
daa
pop
mov
push
sbb
xchg
aaa
cmp
push
sbb
decb
nop
ds
xchg
and
shll
mov
mov
dec
mov
call
cmpsl
stos
jne
and
mov
push
inc
push
into
scas
in
lret
loop
loopne
push
mov
adc
push
imul
xchg
fsubrl
scas
mov
rcll
jbe
aas
sub
dec
sub
fs
jae
pop
sub
cmp
mov
add
and
mov
fisubs
rolb
mov
sub
and
stos
and
jecxz
adc
enter
xchg
lahf
ret
ljmp
mov
enter
sti
xor
pop
jge
pop
mov
cld
sbb
mov
mov
leave
inc
stos
stos
xchg
test
sub
adc
rorl
xchg
mov
push
aas
xchg
test
test
dec
sub
hlt
fistpl
mov
mov
pop
jmp
int
inc
dec
cmp
arpl
ljmp
stos
hlt
insl
es
idiv
arpl
roll
aas
inc
repnz
fucomip
mov
dec
sub
in
lods
aas
and
loope
js
ret
adc
adc
xchg
xchg
fisubrs
nop
push
mov
pop
cmp
ret
xor
cmp
mov
shlb
dec
ljmp
dec
cmp
xor
jb
icebp
jne
outsl
hlt
pop
mov
add
fadds
add
shrl
mov
repnz
jnp
mov
nop
xchg
cld
push
mov
pop
jl
add
mov
sub
add
scas
leave
xchg
inc
pop
cmp
xchg
jle
xchg
scas
scas
cltd
adc
mov
rorb
jecxz
mov
loop
pop
loop
pop
jle
pop
jae
xchg
and
imul
je
inc
clc
push
shll
sub
pusha
xorb
sahf
pop
insl
mov
inc
add
mov
iret
adc
jnp
inc
adc
dec
jnp
test
dec
cmpsb
mov
aaa
xchg
sub
dec
xor
add
das
test
and
out
mov
jge
jne
cld
push
adc
mov
pop
pop
sub
xor
xor
shlb
insb
loopne
adc
pop
add
xor
pop
lret
mov
outsb
mov
leave
cmp
bound
adc
stos
andb
scas
insl
imul
fdivl
adc
xor
mov
xchg
arpl
popa
repnz
daa
loopne
adc
xor
divw
xchg
fldenv
mov
xor
dec
jae
movsb
dec
adc
shl
scas
in
xor
jnp
sbb
je
xor
inc
je
test
lret
pop
sub
xchg
popf
pop
jo
out
mov
loop
pop
out
ljmp
dec
es
rorl
and
int
sbb
aas
sti
arpl
mov
sbb
shlb
adc
sbb
imul
xor
fstpl
inc
jae
mov
in
pop
movsb
ds
repnz
adc
xchg
imul
pushf
push
jae
movsb
dec
shlb
enter
xor
pusha
mov
adc
and
push
sti
orb
aad
cmp
not
xor
cltd
ret
jae
adc
in
mov
add
xchg
and
rcrb
gs
cmp
cmp
fldcw
mov
fstpl
std
add
pop
push
adc
ret
lds
sub
dec
in
ljmp
jb
adc
fwait
movsl
cmp
adc
mov
test
rorl
ljmp
xor
inc
ret
fwait
arpl
cmc
cwtl
cld
mov
out
in
sub
cmpsl
imull
inc
lcall
add
in
icebp
mov
adc
xor
sbb
pop
xor
imul
inc
jae
push
ds
mov
fsubrp
mov
jl
mov
xchg
mov
loop
pop
mov
mov
sbb
mov
out
addl
mov
and
jle
movsl
das
add
push
jo
mov
pop
inc
pop
out
dec
dec
push
xor
test
sahf
inc
push
callw
xchg
lret
sub
ret
adc
aad
add
int
insb
sub
sub
pusha
add
jle
insb
mov
cs
push
mov
sbb
jnp
hlt
das
push
cmp
pop
cli
mov
aas
xor
xchg
fs
push
push
imul
and
push
in
mov
mov
jp
inc
cltd
sbb
mov
mov
cld
imulb
out
push
mov
loop
scas
add
push
sbb
dec
and
add
add
lcall
xchg
or
xor
lds
push
adc
jecxz
jnp
pop
cmp
leavew
xchg
mov
ja
cmp
sub
push
vmread
add
daa
in
test
pop
xchg
and
inc
mov
lock
arpl
adc
jo
ret
leave
jl
test
imul
sub
jo
mov
ret
arpl
adc
shll
sti
add
inc
pop
call
jnp
fbstp
lods
mov
push
sbb
enter
mov
jb
mov
pop
xor
cmp
mov
std
dec
push
stc
repz
mov
mov
push
xlat
xchg
aas
adc
dec
sub
dec
mov
fnsave
call
shll
mov
push
mov
test
adcb
insb
je
inc
push
xor
xchg
bound
inc
mov
inc
test
test
insl
call
push
decl
add
cld
pop
adc
or
push
mov
jecxz
jb
xchg
mov
sbb
sub
hlt
cmpsb
adc
and
push
rolb
jge
imul
mov
mov
and
in
icebp
jmp
loop
xchg
add
xchg
cmp
sub
inc
jecxz
lahf
cmp
xor
jle,pt
mov
xor
addr16
mov
xchg
mov
push
fisubrl
das
pop
divl
inc
testl
and
inc
and
jb
test
das
mov
mov
cmp
jae
movsb
das
in
adcb
repz
mov
lea
and
or
call
jge
fwait
dec
mov
jle
or
adc
pop
mov
pushf
inc
lods
push
sub
leave
aad
popa
loop
jle
cmp
sub
jge
fsubp
cs
jns
stos
mov
mov
out
xlat
hlt
jb
scas
mov
inc
sub
pushf
adc
cmp
mov
leave
lea
sbb
xor
inc
mov
jno
fwait
sbb
inc
xor
sub
push
popa
rcl
aas
push
mov
sub
cmp
mov
cmp
mov
lods
daa
add
fisubrs
pop
shrb
aam
cmp
mov
mov
add
push
push
js
jno
fs
sub
sbb
testb
fidivl
pop
gs
sti
push
push
aas
leave
into
jg
mov
popa
jmp
out
nop
fsubp
mov
movsb
jnp
nop
into
mov
jmp
dec
aam
rorb
jmp
mov
fiadds
sub
stos
loop
dec
popf
int
arpl
mov
inc
fcmovu
das
scas
push
xchg
shlb
and
dec
mov
sub
and
mov
xor
rol
inc
cmpsb
rorb
and
aam
jnp
das
inc
cmp
cmp
mov
repz
test
aam
xchg
out
mov
shl
jae
mov
shll
sub
stc
out
mov
mov
sarl
jmp
addb
repnz
mov
xchg
shl
pop
inc
mov
mov
cmp
and
cmp
mov
bound
mov
inc
push
fndisi(8087
pop
scas
jge
and
push
xor
in
jne
cmp
pop
pop
inc
jg
mov
ror
rcrl
mov
cmpsb
mov
aam
mov
jge
add
subb
inc
clc
jp
xchg
and
scas
cmp
mov
lods
dec
stos
into
or
push
out
cmp
adc
icebp
insl
icebp
mov
or
push
dec
mov
cmp
inc
in
lods
mov
xor
adc
lret
outsb
push
hlt
dec
icebp
mov
xchg
lock
inc
pop
mov
jae
mov
push
xor
jle
add
adc
xor
nop
lock
adc
loop
mov
sbb
lds
add
arpl
sbb
stos
mov
daa
sti
icebp
mov
pop
jb
insl
aaa
mov
add
xchg
outsb
mov
mov
mov
xor
fnsave
sbbl
in
mov
rcrb
jbe
or
fidivrl
jne
cmp
movsl
pop
fxam
popa
and
inc
mov
test
adc
mov
mov
jl
sub
adc
loopne
or
aas
add
mov
ficompl
in
and
call
repnz
ja
sbb
sub
inc
insb
lods
cmpsb
jl
or
push
jae
inc
adc
inc
stc
pop
adc
lcall
repnz
jge
xor
adc
mov
imul
call
adc
mov
sub
mov
aaa
lahf
sub
mov
sub
scas
aam
call
jmp
push
scas
pop
jle
xchg
stos
pop
push
les
mov
adc
dec
call
test
and
in
es
maxps
jg
mov
daa
ljmp
sti
cmp
sub
pusha
push
push
call
mov
inc
fidivrs
cmpb
in
mov
out
dec
cmp
roll
inc
dec
or
dec
mov
cs
xchg
or
ret
addr16
sahf
xor
scas
fnsave
in
cmpsl
or
add
pop
or
stos
les
je
sub
shlb
cwtl
ficompl
xor
xor
pop
pop
mov
push
xchg
cmc
lea
imul
pop
mov
or
loope
cli
pusha
ret
cld
out
adc
iret
sbb
push
jbe
arpl
add
xchg
loopne
in
ss
xchg
inc
lock
popf
mov
mov
cmp
cmp
repnz
mov
sbb
mov
shll
adc
cmp
bound
scas
popa
aas
inc
ja
jmp
daa
pop
inc
mov
sar
popa
xchg
scas
cld
ds
mov
sarl
popf
xor
mov
das
out
mov
xchg
out
imul
push
jns
add
test
mov
lret
arpl
icebp
dec
subl
movsb
ret
ret
test
out
arpl
out
jl
mov
fisubrl
and
mov
xor
or
ret
xor
mov
sarl
mov
push
push
xchg
push
js
cld
cld
adc
cs
ss
ss
pop
iret
inc
incl
sub
add
push
loopne
mov
jne
roll
movsb
mov
mov
or
je
mov
mov
pop
mov
jg
cli
repz
dec
mov
push
shll
fnsave
in
push
sbb
aad
shll
or
ss
mov
sbb
faddl
cmc
popf
pop
dec
in
repz
mov
pop
lods
lods
jns
and
lret
cld
inc
mov
push
cli
pop
shll
sbb
cmp
adc
fisubrs
mov
and
or
cmp
enter
fsub
jne
cwtl
xor
mov
inc
sbb
push
jg
xchg
cmp
and
shll
mov
cmp
popl
ror
loopne
push
repnz
xlat
push
lds
sti
add
xchg
icebp
inc
pop
jno
andb
popf
xor
mov
sar
and
mov
sbb
fcomps
aad
jle
into
sbb
mov
std
dec
ljmp
push
xchg
jne
cmp
cmpsl
mov
pop
ret
loopne
jae
adc
mov
cmp
mov
fwait
repnz
adc
daa
es
sbb
or
fdivl
pop
cmpsb
fs
data16
dec
negl
mov
pop
adc
mov
push
jo
fs
sti
mov
push
sbbb
inc
and
lds
test
cs
inc
sar
lea
stc
jb
mov
test
dec
push
inc
ljmp
inc
scas
in
insl
xchg
shr
imul
sti
cwtl
sbb
cmpxchg
sahf
sub
dec
div
add
dec
rolb
mov
mov
out
adc
pop
jp
int
dec
neg
sbb
mov
sbb
dec
bound
mov
fistl
jge
mov
pop
dec
lock
jmp
jbe
or
imul
addr16
cmp
push
pop
insl
sbb
arpl
pusha
mov
xchg
adc
fsubl
mov
fidivrs
adc
push
movb
out
mov
mov
fstps
dec
std
pop
data16
mov
rorb
nop
jmp
push
js
daa
mov
xchg
cs
mov
inc
push
lea
js
push
in
pop
jns
jecxz
outsl
or
sbbb
add
or
popf
std
mov
add
test
inc
sub
call
leave
imul
inc
scas
or
mov
jb
les
xor
pop
and
mov
mov
dec
flds
mov
data16
jo
sub
mov
sti
jb
icebp
mov
mov
jle
dec
adc
sbb
jbe
stc
ud1
cli
add
cmpsb
mov
add
push
div
jp
ljmp
mov
stc
sub
sbb
repnz
mov
mov
inc
aam
ja
ss
lea
push
lock
xor
push
push
mov
pop
xchg
push
and
jg
imull
shll
xlat
or
cld
ja
outsl
leave
jg
ljmp
into
mov
ds
and
loopne
mov
ds
por
into
and
cltd
rclb
in
and
cmp
dec
mov
or
mov
cmp
pusha
inc
mov
mov
xor
xlat
jb
lods
mov
ja
repnz
into
fldl
addr16
fstl
stc
mov
mov
jns
into
es
inc
repnz
clc
sub
jl
cli
out
cmp
dec
mov
lea
js
sub
fidivrl
mov
sbb
jo
test
mov
jns
sub
test
pop
test
ficomps
mov
andb
or
loope
or
int
fldt
repz
push
dec
mov
ja
jmp
jmp
int
push
repnz
movsl
mov
cs
and
adc
scas
adc
in
xor
mov
jb
jb
add
jne
movsb
inc
pop
sub
daa
jmp
cli
mov
inc
inc
std
or
jp
mov
jg
ja
clc
push
mov
gs
cmp
in
or
xor
pop
into
in
pop
xchg
and
test
paddd
mov
call
jns
cmp
in
lahf
arpl
jb
inc
adc
leave
stc
pop
leave
clc
and
and
lahf
in
dec
sub
shlb
loop
fcoml
nop
scas
pop
mov
adc
cli
out
das
jae
ja
adc
cmp
xor
lcall
jbe
adc
pop
jmp
mov
sub
scas
jecxz
cmp
push
cmp
xor
shrl
aas
cmp
and
pushl
xor
or
mov
inc
ret
push
ret
add
xchg
add
icebp
lock
mov
hlt
popa
jl
add
clc
dec
imulb
ja
stos
rcl
ret
mov
iret
in
fistpll
jge
pop
cmp
in
add
test
test
and
repnz
cli
adc
mov
mov
inc
add
icebp
jno
lock
stos
loop
sub
loop
movsb
or
jnp
icebp
pop
inc
shrl
xchg
mov
and
dec
iret
lock
xor
pop
fstl
scas
lock
adc
lcall
or
or
ffree
mov
rcrb
jge
mov
inc
repnz
rcrb
xchg
repz
jg
popa
shr
cmp
daa
add
push
cmp
mov
imul
dec
jb
imul
pop
mov
xor
sarb
mov
movb
mov
pop
lea
push
in
jg
mov
nopl
pop
cmp
roll
and
loop
imul
ljmp
movsl
sbb
lds
stos
cli
mov
mov
js
mov
mov
outsb
mov
out
mov
jb
test
dec
push
mov
or
mov
xor
inc
cmpsb
inc
test
jmp
inc
xchg
xor
dec
mov
div
fistpl
jge
fs
add
test
sti
and
idivl
sbb
shlb
mov
repnz
cwtl
ja
sbb
ds
sbb
pop
xorb
imul
xor
sub
ljmp
jecxz
into
sti
les
sub
add
push
and
lds
mov
pop
pop
lret
dec
insl
sahf
lahf
push
rclb
lock
lock
stc
mov
push
cmp
or
inc
dec
fadd
addr16
xorl
push
push
mov
sarl
sbb
push
and
std
or
pop
aad
mov
mov
aaa
mov
insl
mov
mov
test
dec
test
or
ret
out
xor
rcll
sti
loopne
mov
sbb
repnz
jb
pop
es
sbb
inc
sbb
jo
mov
shrl
pop
lock
repnz
mov
adc
in
dec
insl
pop
movsb
xlat
test
daa
test
cmp
sub
pop
adc
cmc
lock
dec
sti
loopne
adc
notb
rclb
xorl
stc
and
movsb
push
xor
mov
movsl
sbb
arpl
and
and
in
sahf
std
mov
pop
jge
push
and
nop
cmpb
cmp
mov
adc
pop
adc
js
inc
xchg
lret
in
xor
aas
lods
sbb
out
jno
adc
or
ljmp
clc
mov
inc
jnp
xor
mov
inc
ja
and
rol
jmp
push
inc
add
insb
fbstp
sahf
xchg
pop
xchg
ss
mov
das
dec
mov
mov
stc
les
loopne
cmc
js
lcall
pop
mov
repz
mov
xchg
fucomp
xchg
repnz
insb
and
test
or
adc
imul
lret
lock
adc
add
push
fstl
jb
fidivs
dec
jo
out
adc
cmp
jno
mov
sarl
mov
add
lock
jne
lahf
aas
pop
mov
addr16
movsb
push
dec
or
outsl
pop
repnz
dec
xor
sbb
inc
ds
mov
int
mov
xchg
ja
lret
cmp
shrl
rorl
shlb
cli
pop
cs
push
shrb
scas
mov
mov
adc
cli
xorb
and
pusha
fwait
push
xor
jb
in
aas
cmpsb
in
ja
cld
jb
mov
xor
cli
das
jo
xor
out
mov
jle
jmp
repnz
mov
das
aas
movsb
inc
dec
adc
dec
sub
cmp
lret
and
aas
std
mov
sub
mov
cltd
adc
adc
or
sti
fbstp
out
in
push
xchg
jle
inc
out
and
sti
mov
add
add
inc
xor
mov
xchg
xchg
push
out
je
add
mov
cmpsl
sub
mov
cltd
add
push
dec
pusha
cmp
fcoms
mov
adc
dec
dec
push
cli
or
inc
inc
scas
inc
lea
lret
push
sarl
inc
shrb
mov
lea
mov
and
xor
call
jne
and
inc
movsb
mov
aam
mov
push
xchg
stos
rolb
mov
stc
mov
outsb
add
int
int3
pop
adc
mov
outsb
pop
lods
incb
cmp
pop
mov
mov
pop
ds
sbb
sbb
or
push
pop
sub
push
sub
cmpsb
cmp
sub
in
add
jo
or
lods
xchg
mov
sub
dec
mov
adc
mov
sbb
inc
sub
addb
mov
mov
xchg
insb
jb
cld
adc
mov
fildll
adc
or
mov
push
sub
stos
pushf
popf
add
sub
outsb
sub
scas
jge
pushf
xor
xchg
aaa
aad
lock
leave
hlt
ja
cmpsb
outsl
mov
leave
mov
sar
aam
push
lds
add
push
adc
inc
and
pushf
loop
test
in
xor
mov
pop
mov
xchg
cmp
xor
mov
pop
xchg
push
rcll
std
mov
jg
adc
scas
xor
xor
pop
aaa
in
inc
stos
flds
jbe
xchg
xchg
xchg
lods
mov
jp
out
mov
sbb
daa
or
hlt
adc
fs
pop
shll
mov
add
fidivl
xor
repz
mov
push
dec
nop
and
xchg
add
and
pop
pop
fxch
pushf
mov
and
jecxz
outsb
xor
lock
mov
mulb
lds
cmpsb
or
jae
jg
imul
push
xor
in
push
pop
outsb
popf
xchg
xor
xor
cli
fwait
mov
loop
out
jp
rorl
lods
mov
add
mov
in
movsl
es
ljmp
sbb
movsb
data16
daa
or
subl
push
out
pop
mov
and
mov
jle
add
lds
mov
jp
mov
mov
mov
dec
jle
jbe
popf
dec
shlb
out
xor
leave
mov
rclb
cli
fldt
mov
mov
jge
inc
or
stos
mov
xchg
shlb
fcmove
jge
push
sub
inc
add
and
sbb
movsb
push
in
pop
jle
jo
pusha
shll
dec
xor
bnd
dec
mov
testb
and
sahf
mov
sbb
ss
stos
dec
test
das
mov
dec
sbb
sti
inc
das
or
mov
jl
lds
cli
or
mov
popf
outsb
pop
loope
jp
rol
shlb
and
lahf
outsb
mov
testl
gs
jb
icebp
push
adc
icebp
push
mov
sub
mov
push
inc
int3
sbb
test
clc
push
pop
add
ds
mov
jge
mov
ds
push
mov
test
sbb
addr16
xor
rcll
fnstsw
adc
ret
cli
or
cwtl
dec
pop
pop
mov
cmpsb
cmc
aad
xchg
frstor
add
cltd
pop
cli
mov
cwtl
cld
out
mov
mov
jno
enter
or
dec
daa
mov
lret
hlt
ret
and
out
out
aas
xchg
lea
repnz
cmp
mov
sahf
fistl
arpl
xchg
jae
jmp
rolb
mov
add
push
out
dec
xchg
stc
push
test
jno
add
cmpsl
ficomps
cld
in
cmp
or
mov
mul
mov
cld
mov
mov
or
arpl
push
or
inc
cmc
dec
test
pop
push
insl
mov
jecxz
mov
push
das
adc
mov
fstpt
cli
es
mov
lahf
and
push
mov
push
mov
ret
arpl
push
shrl
pop
into
fdivp
ljmp
scas
bsf
cld
mov
icebp
jg
enter
mov
cld
xor
mov
imul
bound
andb
stos
popf
scas
xorb
pusha
out
xchg
pop
xor
lock
jmp
fwait
jecxz
jns
inc
in
pop
inc
add
pop
in
popa
scas
out
pop
pushf
jecxz
bound
loopne
cltd
out
fwait
dec
dec
fsub
rcl
lock
cs
inc
sub
inc
out
mov
mov
mov
subl
mov
clc
push
add
daa
popf
add
adc
daa
lea
adc
je
pop
test
scas
or
adc
jge
movsl
lock
xor
mov
adcl
cltd
cmpsl
lds
jg
jb
push
push
cmp
fldt
dec
push
sbb
xor
js
jb
push
inc
pop
or
sahf
xchg
jg
ljmp
jae
icebp
loopne
adcb
pop
loop
mov
mov
xor
insb
xorl
aaa
pusha
adc
loope
jge
push
sbb
jmp
es
adc
ljmp
cmp
outsb
inc
es
pop
pusha
mov
sbb
sbb
mov
sub
xor
mov
test
arpl
aad
cmp
mov
test
fldenv
mov
xchg
out
cli
lea
shl
mov
sbb
addl
add
jno
sbb
sti
in
test
add
fsts
adc
pushf
js
xlat
xor
test
insl
pop
pushf
xchg
jmp
cmpsb
jmp
jb
adc
dec
sahf
xchg
enter
or
jmp
mov
xlat
jmp
cmp
jmp
sub
addr16
jge
mov
test
movsb
adcb
cld
pushf
aad
mov
mov
ficomps
sti
inc
sbbb
in
xor
test
testb
ss
push
enter
adc
adc
int
lcall
out
cmp
mov
popl
dec
js
stos
push
hlt
jecxz
pop
lcall
sub
sti
outsl
mov
push
sbb
lock
loop
andb
sbb
ret
repz
icebp
xor
sti
pop
mov
add
outsb
fsubs
stc
dec
and
mov
cmp
popl
repnz
adcb
push
cld
mov
scas
mov
aas
mov
aaa
insb
test
aas
inc
ds
movsl
std
cs
arpl
push
mov
arpl
mov
daa
sub
pop
test
mov
cmpsb
mov
cltd
xchg
mov
or
and
inc
dec
xchg
mov
lock
push
jb
pusha
fstps
sub
push
pop
xor
bnd
clc
es
adc
loopne
cmp
stos
lcall
pop
or
lea
and
pop
bound
dec
test
xchg
test
pusha
pop
mov
xchg
sbb
stc
ret
fimull
lret
in
pop
ret
or
call
loopne
jo
cmc
loop
pop
xor
xor
mov
xor
mov
cli
loopne
jae,pt
pop
mov
mov
pop
adc
int
out
cmpsb
imul
cmp
ds
addb
inc
dec
iret
in
cmp
and
dec
xor
shl
sbb
bound
nop
rolb
imul
jo
cmp
add
jae
mov
test
sahf
add
cmp
inc
outsl
arpl
cmp
push
lds
xor
mov
xchg
push
arpl
fwait
movsb
xacquire
pushf
or
sahf
rolb
xchg
in
loop
stos
and
imul
xor
icebp
dec
mov
adc
andb
push
movsb
lret
dec
push
jae
xchg
in
int
mov
xchg
jmp
je
dec
xor
fwait
adc
xchg
push
lcall
sahf
cmp
hlt
gs
push
mov
mov
and
mov
mov
fnstsw
cmp
mov
cmp
mov
jnp
sub
addl
mov
mov
xchg
xchg
add
mov
dec
and
dec
addr16
aas
push
pop
int
fdiv
test
ljmp
cltd
test
xchg
je
std
pop
lds
mov
ss
push
xor
or
imul
inc
fnstenv
sti
push
sti
insl
pop
add
bound
fdivl
cmp
cmp
add
daa
fmull
insb
add
cli
jnp
and
insl
push
pop
mov
mov
push
add
push
outsl
and
jmp
dec
fldt
fcomps
fst
add
xor
mov
rcl
add
jle
scas
imul
mov
push
popf
inc
pop
push
mov
or
test
mov
push
out
add
add
ds
aaa
int3
mov
inc
dec
adc
aad
scas
insl
xchg
gs
mov
inc
icebp
popa
rep
mov
add
inc
push
or
push
mov
pop
shll
sub
sbb
inc
mov
lret
xchg
andl
xchg
stc
xor
jnp
sub
jne
lret
xchg
xor
cmpb
imul
cmp
pop
pop
movsb
sarb
cmp
mov
jmp
push
sahf
mov
push
cmp
adc
push
inc
sub
addr16
out
xchg
adcb
sub
cs
pop
pop
dec
or
sub
xlat
mov
rcll
shrl
dec
jge
daa
push
aad
mov
lret
push
push
jmp
test
ljmp
cwtl
jns
or
incb
jno
jg
test
mov
pop
cmp
push
add
jle
jg
push
hlt
sbb
jge
cmpb
jae
clc
jns
jmp
jg
inc
stos
push
adc
cwtl
rcrl
ret
xchg
cwtl
mov
movsl
subb
stc
add
xor
sub
push
mov
stos
and
addr16
inc
cmp
xchg
xchg
jmp
rcl
dec
push
ja
xlat
rclb
jbe
leave
es
enter
fstpt
pop
sbb
por
fcmovb
shll
jecxz
jecxz
push
shlb
dec
sub
xchg
inc
mov
lcall
in
jmp
inc
inc
ret
push
cmpsb
push
mov
fcomps
inc
int
dec
jl
aas
push
fsts
lahf
mov
xor
ja
push
ja
ret
daa
jae
addb
xchg
add
nop
mov
cmp
push
mov
in
sub
arpl
lahf
xchg
cmpxchg
jno
aad
iret
je
xchg
mull
or
loopne
mov
outsb
cmp
mov
imul
push
jecxz
mov
movsl
mov
pop
push
stos
add
xor
stos
inc
sbb
pop
addr16
test
xchg
sbb
cmp
adc
jge
pop
mov
fnsave
pop
out
inc
jbe
mov
ss
push
nop
dec
mov
and
xor
fsubl
testb
int
mov
mov
inc
mov
mov
jb,pn
bound
dec
add
xchg
xor
lret
sarb
mov
lahf
call
lds
mov
lea
xchg
nop
jb
pop
aaa
dec
pusha
mov
or
xchg
inc
nop
in
add
dec
sbb
jge
cs
cmp
push
push
testl
and
andb
hlt
pop
jb
mov
movb
testl
ljmp
movsb
push
loope
mov
stc
shlb
pop
and
dec
adc
ss
lods
sbb
int
movsl
mov
lea
lcall
jbe
push
imul
movsl
inc
cli
out
cmc
adc
adc
out
aad
xchg
hlt
lret
lea
int
inc
dec
pop
lahf
repz
mov
jg
imul
mov
jne
movsl
jno
and
pop
sbb
imul
xor
xchg
and
push
adc
mov
cmpl
cltd
iret
test
xchg
jbe
lcall
push
ds
andb
push
mov
fadd
repnz
push
fwait
dec
scas
cmp
xor
popf
mov
sbb
cmp
inc
cmp
pop
xchg
cmpsb
jbe
ss
and
mov
sbb
divb
sahf
jae
test
mov
repz
sahf
jge
cmp
sti
push
imull
fisubrl
xchg
out
into
in
movsb
xchg
cld
or
fdivrp
push
sbb
mov
insl
cwtl
jb
jno,pn
test
mov
subl
stos
int
fcompl
add
test
scas
inc
mov
push
std
sbb
das
cmc
into
add
repnz
pop
adc
inc
push
mov
sub
mov
mulb
xor
pusha
adc
sbb
mov
loop
sti
push
fisubs
bound
cmc
adc
stos
adc
leave
imul
or
rcr
xorl
pop
inc
xchg
pop
outsb
pusha
mov
xor
cmp
aas
cmpsb
lret
aam
mov
sub
sub
es
in
loopne
in
imul
push
add
sub
int
icebp
negb
mov
popa
jb
shlb
rcrb
push
in
push
das
scas
sub
or
mov
nop
adc
lock
inc
out
mov
jp
push
loope
add
into
or
mov
repnz
lcall
sahf
jmp
push
sbb
fwait
jp
rcll
mov
mov
inc
mov
push
and
imul
ljmp
out
xor
inc
stos
pushf
or
jae
mov
loopne
sub
add
mov
fyl2xp1
shlb
iret
mov
xchg
dec
ja
lock
fisubs
xor
movsl
test
ret
pop
mov
rorb
mov
sub
cmp
out
fdivs
mov
pminsw
fwait
jns
and
push
add
adc
pop
pusha
pop
xchg
lock
mov
leave
push
stos
or
push
imul
mov
pop
jns
insl
cs
add
ds
jnp
adc
sub
cmp
dec
lret
repz
adc
call
cmp
test
sbb
sub
xchg
xor
loope
and
call
cwtl
movsb
icebp
pop
hlt
aas
cmpsl
xlat
ror
push
mov
sub
mov
cmp
mov
add
fdivr
das
repnz
rolb
mov
iret
jmp
mov
in
cmpsb
scas
loopne
xor
shr
sahf
pop
inc
jle
mov
repnz
mov
pop
scas
sbb
daa
adc
inc
dec
mov
nop
dec
pop
rcrl
lds
repnz
cmp
ljmp
cld
mov
loop
inc
sub
pop
add
adc
inc
or
rol
loopne
inc
mov
sarl
imul
lds
lret
cs
jl
popf
pop
cmp
jmp
sti
mov
out
dec
push
and
lds
sub
xor
sti
jp
stos
ds
test
das
bound
js
xchg
ret
jg
xchg
sbb
pop
scas
lds
mov
icebp
lret
nop
sti
push
jb
inc
jmp
enter
and
test
popa
inc
test
lret
ds
lret
fildl
jmp
fstp
or
stos
leave
insb
ret
lock
add
rcrl
rcll
das
data16
out
push
adc
test
icebp
mov
lock
outsl
inc
popf
xchg
cmp
clc
into
leave
rcrl
dec
xchg
addb
fs
pop
addr16
mov
push
push
icebp
movsb
notl
cltd
mov
pop
cmpsl
les
mov
pop
fldcw
push
pop
divb
sub
mov
pop
ds
shll
mov
inc
add
pop
lret
sub
sbb
xchg
inc
sahf
fiaddl
or
mov
mov
push
cli
adc
js
adc
jmp
icebp
or
pop
ret
mov
xor
mov
fidivrl
mov
jmp
adc
sti
rcll
pop
jle
xor
dec
ret
sub
jno
call
arpl
and
xor
call
bound
mov
cld
and
sub
pop
icebp
ljmp
and
and
jmp
push
mov
xor
xchg
inc
sub
jl
jnp
or
jge
les
pushf
inc
add
sarb
cmp
push
sub
jle
xchg
lcall
mov
mov
out
sub
jne
add
mov
mov
pushf
adc
aaa
inc
xor
and
stos
mov
push
adc
cmc
inc
push
sub
movsb
inc
or
push
cli
pusha
mov
jmp
pop
xor
fnstsw
or
mov
cld
mov
mov
movl
sar
xchg
mov
mov
sti
out
sarl
and
ret
jle
mov
fs
leave
cmp
push
movsb
jnp
js
mov
push
stc
movsb
inc
or
aad
mov
pop
add
mov
mov
fcompl
outsl
or
adc
sti
out
sbb
and
mov
xchg
adcl
mov
or
sbb
dec
jp
dec
shll
roll
sub
es
sahf
or
ja
test
das
xor
shlb
push
or
mov
cmp
push
int
sbb
inc
xor
jge
add
repnz
out
ss
cmp
scas
inc
sub
ja
inc
adc
mov
and
mov
inc
sar
sub
movsb
popa
jge
loope
sub
int
iret
stos
cld
xor
enter
scas
dec
cltd
xchg
mov
xchg
inc
fcmovnu
fdiv
sbb
jne
hlt
loop
add
push
aas
push
aas
daa
add
or
bound
mov
pushl
mov
not
ds
ss
rcrl
shll
popa
mov
push
lds
jle
xor
xchg
mov
lcall
xchg
test
int3
clc
nop
xor
test
popf
aad
jg
mov
cmp
xchg
in
arpl
jmp
xlat
loope
scas
add
mov
lcall
pop
jl
mov
mov
lds
jl
int3
push
mov
xor
stc
mov
sbb
mov
out
push
or
mov
cltd
jp
adc
xchg
mov
push
mov
icebp
xchg
mov
imul
cltd
mov
test
std
insb
jo,pt
movsb
cs
jo
pop
add
xor
jge
sbb
xchg
inc
call
xor
rcrl
jno
mov
and
jmp
call
jo
cli
stc
icebp
or
icebp
shll
out
rorb
movsb
mov
shlb
cmpsl
mov
sub
xor
push
aad
dec
adc
add
mov
mov
mov
mov
leave
lret
mov
cmpsb
xchg
fsubrs
mov
into
mov
ljmp
dec
mov
sti
and
andl
nop
je
daa
int
xchg
push
mov
mov
xchg
ss
jns
sbb
jg
push
and
cmp
push
mov
pop
xchg
mov
repnz
and
mov
pusha
pop
ficoml
popa
pop
loope
mov
and
adc
movsl
mov
jecxz
inc
sub
gs
lret
xchg
jbe
jg
lock
imulb
cli
and
jmp
pop
cld
loopne
inc
xlat
add
movsb
test
sub
mov
or
sbb
mov
sub
dec
xor
insb
mov
sbb
std
jg
idiv
jecxz
fidivrl
adc
stc
mov
sub
push
adc
or
push
iret
frstor
stc
dec
lds
lahf
xchg
rolb
bnd
add
sbb
jb
movsb
jecxz
gs
xlat
push
pop
pop
add
mov
and
pop
ds
int
mov
rolb
movsl
jge
lods
mov
mov
jae
in
mov
movsb
lods
and
mov
xchg
and
xor
xor
and
mov
incb
incl
add
sub
mov
mov
and
mov
mov
stos
jmp
pop
and
test
adc
call
cmp
mov
hlt
clc
mov
adc
mov
sarb
xchg
cmp
cmp
and
xor
imul
imul
test
mov
mov
test
sarb
pop
pop
lahf
test
jnp
lahf
test
hlt
adc
inc
pushf
xor
stos
std
jnp
sarl
aas
sahf
aaa
daa
inc
cmp
clc
sbb
in
sbb
xchg
loope
mov
mov
xor
jns
mulb
xor
roll
scas
and
les
jge
call
xor
repz
adc
dec
out
clc
sub
mov
xchg
sahf
cmp
and
ds
call
pushf
dec
cmp
xchg
xor
fistpl
xchg
mov
adc
shll
imul
mov
nop
mov
stos
jno
xchg
sbb
xor
ret
mov
xchg
clc
mov
push
pusha
or
cmpb
adc
sti
icebp
adc
sub
add
les
cwtl
push
nop
fidivs
xchg
lods
out
imul
sbb
js
jb
ja
inc
in
jmp
xor
outsb
cmp
adc
divl
fwait
clc
adc
jp
cmc
ret
push
mov
push
int3
cmp
and
xlat
insb
sub
adc
jo
mov
sti
das
call
paddusb
ds
jg
dec
jge
pop
ret
xchg
add
or
add
jno
loope
sbbb
pop
cld
add
xchg
lahf
das
push
mov
inc
mov
sbb
das
add
jnp
and
inc
sbbb
add
pop
test
pop
jmp
pop
xchg
inc
xchg
cmp
jl
dec
out
or
shlb
fidivl
cld
rcrl
enter
push
push
mov
hlt
dec
sbb
add
shlb
pop
sahf
xchg
test
push
mov
or
cmp
outsl
out
test
mov
repnz
pop
stos
inc
add
es
push
mov
push
dec
sub
fldl
or
imul
pop
and
push
in
mov
push
xor
cmpsl
add
stos
cld
dec
dec
xor
icebp
mov
gs
hlt
sahf
iret
cmp
fdivl
push
repz
adc
push
aad
jp
push
into
arpl
scas
mov
inc
mov
insb
in
xor
sbb
xchg
in
adc
mov
mov
loope
mov
hlt
push
or
dec
nop
xor
ds
ds
mov
pop
cltd
stc
xor
repz
aam
lcall
repz
fdivr
or
xchg
xor
cs
mov
push
xchg
scas
cmp
mov
daa
dec
and
movsb
lcall
jecxz
push
inc
repnz
inc
or
jnp
shlb
xchg
sti
pop
mov
xor
mov
adc
cld
dec
mov
pop
out
stc
inc
push
mov
insl
adc
popl
aas
add
imul
mov
push
dec
add
mov
mov
je
mov
jg
xchg
push
daa
push
loop
sbb
jmp
xor
xchg
xlat
xor
mov
adc
add
jo
shrb
lock
bound
sar
fisubrl
repz
orb
lcall
xlat
adc
mov
xchg
push
das
adcb
xor
clc
test
jbe
sub
gs
jno
out
gs
lret
xor
mov
cmp
arpl
inc
push
cmp
test
and
xor
jb
repnz
les
mov
mov
xchg
inc
scas
fdivr
cwtl
orl
add
push
dec
cli
ljmp
mov
sbb
in
add
mov
mov
xor
pop
fs
mov
xor
stos
ficompl
jbe
lock
insb
lods
lahf
mov
pop
inc
orb
pop
mov
add
scas
pop
or
out
xor
cwtl
sbb
ret
sub
push
dec
cs
test
lret
jl
rcrl
push
jno
dec
rcll
sbb
outsb
icebp
push
in
or
cwtl
jp
cmp
ret
push
cld
jnp
xchg
test
mov
stos
incb
add
sbb
push
lret
xor
ret
aad
push
aaa
push
aam
scas
dec
jl
jecxz
scas
adc
fwait
adc
sbb
or
mov
sbb
das
in
sub
aas
aaa
mov
pop
nop
jnp
xor
sbb
insb
jae
mov
adc
mov
aas
mov
mov
and
stos
cld
pop
test
xor
push
lret
mov
cmp
into
xchg
lods
and
add
push
lock
pop
inc
xor
loop
daa
test
jae
movsl
jae
fdivp
lea
sub
stos
mov
xchg
nop
je
push
xor
sbb
jge
mov
pop
lock
cltd
out
aad
lods
add
and
jecxz
enter
addr16
jl
mov
mov
dec
andb
push
and
pop
cmc
jne
rorl
cltd
iret
mov
jns
pop
adc
mov
mov
cmp
mov
in
jne
pop
jmp
lea
cmp
loope
inc
mov
mov
jae
mov
add
lock
aad
mov
and
mov
lock
mov
jnp
xchg
dec
mov
mov
mov
popf
xor
fmul
inc
add
and
cmp
cmpsb
dec
add
mov
mov
pop
sbb
mov
ret
adc
popl
push
jnp
push
sbb
sbb
xor
and
xor
push
pop
insl
mov
xor
mov
das
pusha
rcll
or
fnstsw
clc
cltd
mov
add
pop
out
cld
or
cmpsl
fstpt
mov
add
call
mov
push
loop
mov
jnp
shll
loope
adc
into
mov
test
lock
add
mov
sbb
out
imul
imul
mov
push
sarl
jo
loopne
call
lds
imul
sbb
mov
sbb
imul
mov
out
push
sbb
sub
pop
jo
pop
fs
scas
dec
mov
std
dec
sub
inc
enter
xchg
scas
jo
mov
sbb
xor
sbb
ds
pop
mov
jmp
call
mov
loopne
fcompl
sti
iret
jno
adc
adc
ret
cmp
test
imul
jmp
mov
pushf
mov
clc
out
dec
cmp
arpl
push
hlt
sub
push
lods
out
incb
bound
jne
sbb
pop
mov
fildll
fldcw
lds
mov
xlat
mov
std
xchg
push
xchg
push
cmc
es
movsb
aas
mov
hlt
push
nop
lock
and
inc
dec
xchg
adc
subl
enter
repnz
out
push
mov
or
cltd
movsl
fst
jg
sub
sbb
mov
sub
scas
lods
xor
and
aad
hlt
lods
icebp
inc
sbbb
fwait
or
add
jg
daa
jb
dec
cmp
mov
mov
jg
pop
cmpsl
rcrl
test
test
mov
sbb
jnp
ret
add
mov
adc
sub
cmpsl
cwtl
fisubrs
decl
inc
jle
hlt
pop
jg
ret
ret
scas
mov
rcll
ja
mov
roll
insb
lods
mov
lea
sbb
inc
sahf
cwtl
xchg
xchg
dec
es
call
stos
push
inc
mov
inc
mov
test
jae
ja
outsb
stos
and
dec
sbb
das
push
repz
cmc
fdivp
pop
ds
jmp
test
pop
xor
dec
or
icebp
test
popa
cs
push
aas
cmp
test
adc
scas
jb,pt
xchg
jp
xchg
xchg
adc
loope
orb
popa
jae
stos
dec
adc
dec
fiadds
stos
add
and
push
sarl
mov
cmp
or
or
push
inc
daa
aam
push
jle
punpckhwd
insl
mov
stos
out
lock
lret
mov
data16
fists
dec
push
inc
icebp
shrb
or
push
mov
mov
push
in
lock
add
xchg
lods
add
call
or
pop
mov
stos
mov
inc
mov
ret
mov
xchg
sub
ja
icebp
lcall
stc
add
sub
jl
ss
jmp
daa
fistpl
cltd
xor
adc
cli
sbb
xor
fdiv
sti
cli
cmp
cmp
bound
xchg
lock
adcb
xchg
xlat
rorb
push
mov
andb
shlb
cli
je
sbb
pushf
inc
mov
lods
call
fldl
or
xchg
add
push
stos
cs
and
push
sbb
sbb
mov
gs
iret
movsb
sub
mov
in
jnp
out
dec
test
hlt
je,pn
or
xor
pop
icebp
rolb
and
mov
inc
rolb
inc
stos
loop
scas
jnp
add
pop
pop
cli
jno
shl
cmpsb
stc
dec
jno
fcoms
sahf
and
mov
or
shrl
jmp
sti
lcall
adc
mov
cs
push
fstpl
sahf
in
lods
divb
je
adc
pop
out
rorb
cs
xor
sbb
pop
mov
clc
jns
xor
xchg
div
mov
outsl
sti
data16
popf
mov
mov
mov
fsts
jo
push
sub
push
inc
adc
cwtl
xor
pop
mov
pop
sahf
dec
cwtl
sbb
stos
push
mov
pop
xor
dec
stc
xor
mov
ss
enter
es
mov
int3
ja
mov
pop
and
sahf
sub
out
js
and
lcall
cmc
loopne
push
xchg
cmp
jb
jmp
aas
imul
cmp
cmp
xchg
sahf
mov
iret
adc
sbb
pop
adc
mov
or
xchg
pop
lret
mov
sarl
pushf
jo
push
dec
sub
pop
pop
xor
nop
pushf
mov
mov
push
or
push
mov
mov
add
scas
aaa
add
xchg
mov
sub
pop
fildll
ja
adc
adc
sub
ret
pop
scas
xor
fstpt
or
xchg
inc
movsl
push
nop
and
dec
outsb
leave
cmp
fnsave
jl
ret
lcall
cs
push
repnz
jnp
ja
xor
adc
cwtl
test
gs
jle
adc
mov
xchg
leave
mov
dec
xchg
xorl
and
loope
repnz
push
hlt
pop
imul
jl
adc
adc
shl
or
add
testb
sarl
outsl
mov
push
mov
loop
inc
jge
test
jno
test
pop
shlb
ret
cli
sub
inc
mov
pop
dec
adc
enter
mov
mov
inc
out
pop
in
stos
push
repz
sbb
jo
lret
adc
adc
test
insb
sbb
lock
pop
push
xor
je
pop
sbb
push
loopne
xor
incl
pop
out
jle
scas
jb
jge
xchg
jb
icebp
mov
cli
test
addr16
inc
les
sbb
nop
xor
push
inc
and
movsb
xor
aam
sarl
sbb
test
jmp
loop
sar
sbb
inc
and
xor
dec
jg
mov
push
inc
push
xchg
int
sub
imul
pusha
inc
or
pusha
push
jns
ljmp
mov
mov
jne
fwait
adc
add
mov
xchg
mov
cmp
cmp
repnz
xor
adc
popf
loop
adc
ret
and
or
pop
lods
mov
stos
or
sub
fs
out
cmp
xchg
or
sub
or
xorb
pop
repnz
rcrb
das
out
mov
fwait
sti
jae
clc
inc
je
pushf
push
pushf
rolb
fdivrs
xchg
pop
sti
dec
scas
fimuls
sbb
mov
leave
idivb
sti
adc
mov
inc
das
inc
mov
adc
sbb
jmp
push
add
ret
insb
xchg
xor
mov
sahf
or
xorb
shrl
fsin
sti
mov
push
sti
stos
mov
mov
xchg
incb
hlt
lret
push
add
xor
mov
iret
xchg
pop
mov
pop
loopne
sarb
xchg
adc
pop
mov
xchg
mov
movsb
or
sbb
mov
popa
inc
cs
ficoml
dec
and
movsb
lods
outsl
inc
cmp
pop
xlat
push
adc
pop
pop
jo
sbb
pop
mov
cmp
out
or
inc
std
push
xor
lds
or
ret
stos
fwait
pop
sbb
sahf
sub
xor
imul
movsl
loop
std
iret
xchg
scas
fisubrs
icebp
push
rclb
mov
inc
sbb
xor
stos
mov
adc
mov
add
jge
div
and
adc
scas
adc
or
cli
ret
xchg
scas
notl
ljmp
outsl
popa
nop
jb
mov
adc
mov
add
xor
out
inc
sbb
mov
fnstsw
lcall
mov
in
repnz
add
fwait
leave
inc
sub
push
mov
push
popf
inc
sub
lods
mov
movsl
push
cmc
pusha
sub
push
adcl
mov
push
fdivs
jmp
aad
into
subl
add
rorb
es
push
cmc
jecxz
rol
push
sbb
xor
cltd
in
ja
std
add
jl
adc
mov
mov
jb
jne
add
mov
shll
nop
jge
jg
in
dec
scas
outsb
inc
push
xchg
mov
dec
insl
push
or
negb
scas
push
cld
insb
mov
sti
out
xchg
dec
mov
sbbb
cmpsb
ljmp
adc
mov
push
es
jge
ja
test
dec
aad
hlt
iret
inc
push
xchg
mov
inc
mov
mov
dec
sqrtps
mov
stos
adc
jo
pop
jp
movsb
jle
popa
fcoml
adcb
adc
dec
mov
cmp
das
mov
in
test
push
sub
sub
add
or
mov
push
test
or
fidivs
xchg
mov
imul
popf
andl
int
nop
pop
push
stos
inc
push
and
or
or
inc
pusha
mov
mov
hlt
dec
dec
and
cwtl
mov
adc
movsb
pop
cmp
mov
test
ret
sti
xor
sub
jmp
out
sti
cmpsb
lcall
cltd
cmpsb
mov
cmp
jmp
dec
lock
icebp
call
mov
mov
adc
sti
mov
pop
pop
sbb
mov
jge
sub
jbe
jecxz
seto
add
adc
pop
scas
sbb
sbb
arpl
pop
leave
ljmp
xchg
lds
cwtl
add
imul
xlat
jle
sbb
jmp
xchg
fldl
pop
movsb
test
scas
icebp
test
cld
in
andb
das
jecxz
jnp
xorb
ljmp
mov
adc
add
pop
aad
mov
dec
gs
cmc
movsb
and
mulb
fidivrs
mov
lret
push
add
stc
and
mov
hlt
cmpsb
push
cltd
shlb
jl
ja
bound
test
outsb
scas
lods
mov
iret
cmp
xor
cltd
push
adc
inc
mov
aam
dec
xor
int
insl
push
leave
das
jle
sub
sub
sti
cmpps
jl
inc
fstpl
shrl
jecxz
notb
inc
rolb
aas
or
icebp
dec
inc
push
add
cmp
sub
cwtl
adc
loop
test
xchg
push
xchg
adc
xchg
push
jns
mov
es
push
daa
add
stos
xor
test
mov
popf
repnz
outsl
mov
jbe
jno
into
loope
lods
mov
test
popf
xchg
lea
pop
cwtl
divb
add
sbb
lret
cltd
ds
adc
mov
arpl
fs
insb
and
push
push
lods
inc
xor
mov
cmc
jo
inc
add
addb
jp
icebp
push
push
ljmp
nop
sbb
push
ds
stos
fxch
pushf
inc
cwtl
jmp
pusha
mov
pop
je
pop
push
sub
mov
pop
popa
or
push
jnp
mov
pop
sti
daa
test
lock
movb
push
test
sahf
cmpsb
push
jne
or
imul
mov
clc
shrl
jecxz
mov
in
imul
cmp
enter
and
ds
imul
nop
mov
cmp
lods
fcoms
cmp
hlt
or
jge
pop
ficoml
mov
imul
pushf
adc
div
xor
xchg
sub
icebp
xchg
test
fwait
mov
dec
imul
cmp
adc
push
ljmp
je
stos
dec
push
lock
and
sbb
cmc
insl
outsb
sbb
imul
xor
cmp
mov
out
movsb
icebp
jecxz
stos
xorl
rorb
xchg
jmp
divb
pop
cwtl
filds
out
ret
dec
jl
rclb
xor
xchg
push
inc
mov
pushf
cltd
daa
and
xor
test
cs
in
out
out
cmpsb
cwtl
push
or
adcb
movsb
stos
insl
cmp
push
lcall
xor
xlat
test
adc
mov
shlb
cmp
adc
jno
stos
and
cmp
loopne
int
popf
xor
xor
nop
push
ss
js
jae
mov
pop
sub
inc
jb
inc
lock
sbb
jmp
mov
xchg
fwait
hlt
or
lock
fyl2x
sub
xchg
sbb
dec
out
icebp
test
aaa
aaa
clc
mov
xchg
or
cmpsl
ja
leave
add
and
xor
and
dec
out
or
loop
jle
xlat
loope
add
ffreep
int
hlt
cltd
push
repz
pop
sub
shl
push
sub
xrelease
ficoms
mov
inc
mov
and
xchg
icebp
loopne
lds
in
aas
mov
jge
movsb
out
loopne
mov
push
dec
shl
add
mov
jb
cmpl
imul
popf
cmp
repnz
aam
inc
mov
add
push
pop
mov
clc
adc
cmp
xor
mov
loop
jp
nop
sbb
scas
dec
jo
arpl
into
mov
mov
or
dec
mov
icebp
push
push
mov
pmaddwd
cmpsl
inc
mov
hlt
adc
mov
sti
pop
inc
fndisi(8087
push
pop
cld
std
iret
in
inc
data16
fimuls
sbb
cs
sbb
inc
imul
jae
enter
scas
ljmp
orb
scas
push
fstp
mov
pusha
jmp
filds
das
lcall
scas
loop
jb
push
push
notl
test
sub
push
aas
mov
je
nop
mov
fldenv
or
mov
pop
and
icebp
sub
sahf
stos
testb
push
jbe
int3
mov
sar
mov
ds
in
int
lcall
dec
push
fistl
aad
hlt
pop
mov
adc
scas
mov
mov
pusha
dec
mov
or
cmpsl
mov
mov
pusha
jmp
add
es
pop
mov
xor
push
mov
stc
dec
mov
lods
mov
shl
loope
jg
stos
bound
push
icebp
clc
fucom
lcall
sti
sbb
std
mov
das
js
movsl
loope
push
and
and
mov
mov
mov
mov
dec
sub
jmp
mov
mov
inc
sti
test
jmp
pop
lcall
jb
xor
std
or
mov
mov
sub
repnz
adc
mov
fildl
xor
and
or
cltd
sub
int
jmp
repnz
jbe
jae
adc
push
repz
ret
divl
insl
and
and
int
repz
xor
ja
testb
aad
push
mov
jg
pushl
cs
and
cld
fwait
cmpsl
or
dec
pop
scas
push
aad
sbb
test
push
push
sbb
cltd
pop
pshufw
and
rorb
int3
int3
stos
loopne
sbb
iret
in
push
and
icebp
int
jle
sbb
shll
out
cmp
repnz
adc
pusha
js
push
dec
sub
scas
cmc
cmpb
stos
mov
jge
shlb
sbb
adc
pusha
fldl
arpl
sub
stc
adcb
dec
adc
ljmp
inc
pop
lahf
jmp
adc
lea
mov
mov
leave
pop
rcll
imul
rolb
mov
shl
xor
pop
adc
mov
xchg
and
lahf
inc
push
xor
icebp
jb
int3
mov
pushf
loop
outsl
mov
flds
jecxz
inc
pop
xchg
xchg
and
sub
push
mov
fnstcw
fidivrs
jns
lret
ret
imul
adc
push
and
insl
adc
push
dec
mov
orl
xor
sbb
loope
lcall
cmp
sbbb
sbb
scas
and
mov
adc
call
mov
cmp
add
cmp
and
and
xchg
loop
cwtl
and
loopne
rclb
mov
popl
es
sub
xor
dec
lahf
pop
shrl
lahf
inc
jo
shl
out
loop
mov
fcmovnbe
push
out
adc
mov
std
mov
push
repnz
jp
mov
imul
loope
ds
mov
xchg
and
repnz
cmp
fistl
add
push
jl
add
imul
mov
addr16
bound
mov
push
jae
mov
stos
mov
inc
pop
mov
mov
mov
mov
test
push
jae
cs
popf
pop
push
jo
cltd
fldl
test
out
mov
push
movsb
add
push
or
jmp
mov
or
dec
pop
pop
data16
in
shlb
and
popf
cmpl
jnp
push
inc
jns
xchg
adc
scas
shll
mov
or
hlt
jg
add
pop
pop
lods
sti
out
xchg
jb
mov
shrb
pop
xchg
add
pop
add
push
mov
add
rcrb
ds
scas
xor
bound
into
popa
jmp
push
and
and
cs
test
dec
pusha
aaa
push
mov
mov
shl
and
jne
icebp
pop
sbb
call
and
icebp
lock
xor
mov
mov
xor
and
mov
loopne
pop
insl
je
cmp
lods
inc
dec
mov
sti
adc
cmp
xor
fidivrs
mov
jle
lods
outsb
ret
outsb
and
test
adc
xchg
ljmp
in
inc
je
sbb
pop
lods
cwtl
mov
ret
mov
xchg
ret
mov
mov
lods
inc
adc
pusha
jmp
mov
pop
jno
outsl
stos
pop
xor
sub
lret
fs
repz
out
test
out
pop
je
lret
int
push
repnz
divb
ds
jle
mov
jecxz
sahf
mov
out
dec
in
sbb
jo
mov
xlat
rcrl
mov
xchg
movsl
dec
xorb
cmpsb
xchg
inc
imul
jmp
aas
es
insb
js,pn
out
mov
push
dec
dec
roll
sub
push
test
test
lds
sub
mov
mov
mov
lock
inc
xchg
pop
mov
lds
dec
mov
test
inc
loop
pop
icebp
jno
mov
mov
cmp
je
jge
lock
pop
insl
jae
movsb
das
xor
jno
jae
mov
js
cmpsl
hlt
in
icebp
fucomp
in
stc
lock
dec
stos
add
adc
inc
dec
and
test
fld
jo
sti
nop
sti
iret
mov
rorb
movsl
outsb
jb
push
xor
jb
repz
scas
js
and
lcall
movsb
and
inc
sub
out
adc
in
jle
cmpsb
icebp
lret
lahf
mov
repnz
pop
ss
test
inc
fwait
imul
fwait
and
bound
cmp
mov
loopne
cmpsb
sysret
pop
and
mov
and
sahf
inc
notb
or
pop
popf
push
add
dec
pusha
add
mov
stos
fiadds
stos
das
push
test
inc
pop
movq
and
push
inc
mov
addr16
mov
stos
jb
dec
movsl
rolb
in
mov
ret
lcall
jle
mov
in
mov
repnz
cmpsb
int
adc
test
push
imul
lods
jmp
out
inc
sub
mov
mov
arpl
jns
ds
dec
adc
adc
jno
das
adc
call
into
jno
movsb
dec
lock
ljmp
add
out
ds
push
mov
mov
xchg
shrl
inc
dec
bound
xor
pop
sarb
fsubrl
push
mov
popf
add
or
push
and
test
mov
int3
push
test
sti
mov
test
xor
das
pushf
jg
movsl
rorb
push
dec
mov
or
in
filds
std
jo
add
leave
sbb
push
inc
leave
jle
or
cmp
iret
xchg
inc
andps
xchg
add
push
mov
push
icebp
push
ss
mov
mov
fcmovu
ucomiss
clc
mov
stos
cwtl
out
jg
ret
mov
mov
push
inc
lret
daa
sarl
scas
icebp
std
mov
pop
and
daa
inc
pop
push
inc
and
movsb
jmp
pusha
pushf
bound
xchg
push
inc
cli
lret
imul
cmp
cld
inc
aaa
cltd
pop
mov
dec
sbb
jb
and
push
jp
pop
mov
push
pusha
imul
and
aad
loopne
faddl
jle,pt
sub
aas
inc
rcr
ret
pavgb
sahf
or
loop
xor
inc
sbb
jmp
jg
rcpps
inc
rclb
push
out
mov
stc
sub
xchg
push
loope
jb
lret
loop
in
shl
sahf
shlb
sbb
int
xchg
mov
adc
inc
stos
aas
icebp
mov
fldt
das
lret
mov
mov
mov
adc
int3
xor
cmp
mov
sub
std
nop
xor
test
jb
push
mov
dec
cmp
and
jge
or
mov
pop
pop
sub
ret
inc
addb
addl
add
popf
cmpl
pop
adc
xchg
add
sbb
and
sub
sbb
aas
pop
cmp
xor
push
inc
int
mov
adc
cmp
repnz
mov
rclb
pop
or
bound
jmp
inc
sub
addb
ds
push
pop
adc
ljmp
add
daa
and
push
imul
testb
jnp
jle
and
ficoms
insl
nop
mov
xchg
cmp
mov
pop
subb
xchg
ret
pop
mov
pop
mov
sbb
lods
test
sub
cs
xor
cli
js
test
or
mov
jmp
mov
jae
adc
mov
sar
add
sbb
inc
lock
cmpsl
repz
fwait
pop
dec
or
pusha
push
push
pop
adc
mov
cmpsb
dec
inc
xor
or
ret
pop
push
mov
xchg
push
cmp
stos
fstl
xor
unpckhps
int
test
mov
leave
sbb
dec
jae
adc
out
addr16
mov
loopne
test
lcall
int
dec
fcoml
push
inc
mov
test
or
movsb
adc
add
jp
mov
adc
mov
sar
xchg
add
sbb
inc
pop
ja
sti
pop
movsb
jnp
ret
sub
xchg
push
out
test
fwait
pop
fldenv
sbb
stc
aaa
mov
fisttpl
xchg
push
test
sub
lea
int
or
pop
inc
xchg
mov
cmp
xchg
xor
add
jo
ficompl
pop
mov
cld
pop
mov
cmpsb
fdiv
xchg
pop
push
rcll
sub
or
scas
insl
cmp
enter
cmp
xchg
xor
out
mov
xchg
push
dec
ret
adc
test
cltd
adc
adc
xor
or
or
ja
arpl
test
sti
inc
xor
rol
lahf
daa
dec
cmp
jmp
mov
aad
dec
sub
mov
jmp
leave
orb
mov
scas
imul
cmp
mov
xor
adc
and
fnstcw
sarb
jecxz
mov
ret
cmp
aaa
cwtl
enter
add
int
pop
mov
aas
test
call
xor
pusha
lcall
ds
popa
ffree
push
push
lret
scas
jp
pop
lret
cmpsb
jmp
inc
xlat
ret
cmc
ret
div
xor
push
lds
xor
and
xor
jmp
cmp
pop
loop
stc
push
inc
popa
add
push
mov
leave
xchg
es
pushf
add
sub
mov
mov
filds
push
pop
cmc
mov
push
sti
adc
pushf
fwait
shll
dec
sbb
cli
push
mov
inc
lahf
orl
xchg
sbb
pop
sub
mov
lds
sbb
adc
mov
fcoml
mov
xchg
dec
testb
jg
dec
pop
cmpl
cmc
push
push
add
mov
es
and
sub
and
lahf
xorl
inc
shrb
fdivp
sub
adc
pop
xlat
add
pop
jge
dec
in
cld
mov
adc
inc
mov
insb
test
scas
lret
mov
xchg
mov
sbb
stos
stos
cs
push
test
iret
mov
pushf
shll
mov
lret
insb
sub
and
xchg
das
fstl
sub
xor
imul
or
lahf
mov
push
lods
add
lods
dec
cld
pop
and
ja
jle
adc
std
rcrl
sbb
arpl
js
sub
add
jmp
adc
push
sbb
mov
or
dec
icebp
outsb
xchg
jno
scas
dec
cmp
push
js
xchg
dec
and
add
xor
roll
cld
mov
adc
mov
lar
jl
ret
int
into
jno
lock
pushf
sbb
cmpsb
add
pushf
sbb
jb
loopne
cmpsl
hlt
js
in
and
jb
sub
mov
mov
cmp
andb
fucomi
in
arpl
pop
xchg
into
mov
mov
push
ficoml
popf
push
adc
jmp
dec
sbb
cmc
ficompl
das
mov
aaa
pushf
push
push
lcall
test
pop
pop
ja
push
pushf
mov
dec
daa
or
inc
lods
lock
xchg
sbb
jp
test
out
jns
sti
andb
sti
mov
jl
subb
mov
jl
std
daa
cmpb
xlat
xor
insb
int3
arpl
aaa
push
es
leave
orl
fstpl
sbb
xlat
aaa
shlb
mov
int
mov
jb
idivb
push
cmp
loope
std
pop
sub
mov
pop
or
rcl
jnp
pop
jmp
test
mov
aaa
dec
push
inc
out
aam
cmpsl
rorb
pop
pusha
xor
loop
sub
jp
mov
dec
jno
lcall
xor
cmp
imul
lods
lret
imul
lock
xchg
inc
cmp
mov
lcall
jg
sub
sbb
adc
jbe
xchg
mov
cmp
jnp
mov
aaa
sub
fcoml
jmp
sysret
lret
lock
sub
in
popf
xor
jnp
sub
sub
sub
div
rcrb
aam
and
mov
push
shl
stos
lea
sbb
aaa
jb
mov
sub
inc
jg
push
rcl
xor
mov
xor
mov
dec
sar
cli
int3
inc
stos
jmp
outsb
dec
xor
add
mov
jmp
shll
inc
cmp
popl
call
or
mov
inc
incl
addr16
cmp
mov
cmp
or
or
nop
mov
mov
lods
dec
pop
adc
sti
pusha
scas
pop
jo
outsb
mov
lea
push
int
mov
push
jnp
les
stos
push
stos
orb
imul
add
sbb
jg
in
inc
fldl
or
jmp
pushl
lds
stos
loop
arpl
and
xor
mov
and
jnp
mov
js
in
aam
cwtl
jl
aaa
bound
cmc
inc
divb
mov
xor
pop
dec
inc
fninit
aas
pop
or
mov
pop
jecxz
xchg
ja
xchg
or
push
lahf
cmc
mov
imul
int
xchg
lret
loopne
inc
jno
mov
mov
call
loop
leave
mov
mov
xchg
loopne
into
sti
inc
cmp
sub
sub
pop
mov
repnz
addr16
adc
mov
popf
jno
call
test
inc
inc
shll
aaa
xchg
and
and
or
push
and
daa
test
test
inc
jb
in
or
xchg
addr16
mov
cltd
leave
movsb
lock
mov
sbb
fistpl
add
inc
fcmovb
push
icebp
loop
jb
adc
xor
jb
cli
jg
ret
cs
mov
inc
and
sub
popa
mov
popa
cli
lea
jns
ffree
sub
adcb
mov
mov
loope
mov
loopne
push
jmp
sub
shrb
adc
ret
jnp
push
popf
sti
adc
scas
push
push
pop
leave
pop
js
in
lea
cs
jge
xor
inc
adc
neg
inc
xchg
add
xor
je
cli
jo
mov
inc
aad
push
sbb
or
pusha
mov
adc
fwait
xchg
ljmp
adc
jb
mov
scas
jns
lret
shll
pop
push
icebp
mov
lcall
ja
sbb
fldcw
ficoms
popf
lods
test
gs
scas
push
loopne
mov
pusha
aam
push
sub
cmp
jbe
pushfw
fldenv
test
dec
jo
cmp
sbb
sbb
cmpsb
fdivrs
jmp
jb
mov
stos
jmp
dec
jmp
movsb
lods
lret
hlt
push
cwtl
pop
jns
decb
cmp
imul
mov
rorb
data16
dec
repz
mov
cmc
lock
pop
sbb
pushf
popf
lock
mov
repnz
jo
int
dec
xor
lock
loopne
dec
cmp
mov
mov
pop
clc
jge
out
iret
stos
hlt
iret
pop
lahf
fldcw
in
xchg
std
insl
adc
mov
pusha
incb
cmp
adcb
shl
push
mov
pushf
int
push
mov
or
fdiv
mov
jb
cmp
rorb
add
sbb
cmpsb
cmp
push
js
sub
inc
rcl
lods
test
cs
cmp
ljmp
in
jae
fs
jge
dec
nop
push
fildll
cltd
mov
out
cmp
lock
xchg
shlb
rcl
imul
pushf
xor
cmpb
shlb
push
call
sti
push
xchg
jle
mov
sub
cmp
out
or
xor
ret
loope
push
inc
mov
and
or
outsl
mov
mov
jo
and
push
shrl
or
mov
xchg
mov
loop
mov
cltd
cs
jnp
cmp
pop
dec
fwait
in
cmp
incl
mov
mov
sbb
xor
das
sub
loopne
pop
lcall
mov
inc
cld
inc
clc
dec
mov
mov
mov
pmaxsw
gs
mov
rcll
xor
jmp
dec
fcoml
mov
repz
sub
push
push
pop
cmp
mov
icebp
cmp
aad
scas
pop
sbb
push
icebp
cli
cld
sbb
sub
mov
sbb
dec
mov
repz
pop
jae
jo
mov
sub
pushf
ret
lahf
ss
stos
icebp
xchg
imul
pop
es
js
fimull
je
inc
fistpl
lock
scas
mov
ffree
adc
popl
and
in
pop
lret
sbb
inc
push
shlb
pop
mov
cmp
mov
mov
insl
cs
addb
mov
or
pop
std
lea
cwtl
mov
inc
je
repz
test
test
fdivs
jecxz
cmp
add
dec
sbb
sub
test
sub
sbb
int3
mov
dec
aas
idivb
xor
pop
fstp
stos
xchg
mov
les
mov
mov
shll
fidivl
mov
sbb
push
inc
jecxz
out
pop
test
add
cmp
mov
mov
int
adc
sti
dec
lcall
fcmovne
fiadds
mov
inc
sarl
push
or
adcl
pop
roll
daa
jb
xchg
out
lret
fsubl
ja
jb
jo
icebp
or
ds
and
xor
dec
loop
dec
repz
cs
shrb
mov
xchg
push
repnz
cmp
dec
movsb
in
xchg
imul
rcll
sahf
xor
fildll
aad
bound
mov
in
xor
pop
cmpb
jae
push
adc
add
test
push
cs
push
inc
add
addl
adcb
loop
iret
push
jmp
xchg
nop
sbb
scas
in
popf
subb
stos
movsl
arpl
jae
sti
ret
neg
jae
mov
jbe
sub
jmp
ds
loopne
rcll
mov
scas
and
lret
insl
mov
ja
jo
pop
jle
dec
cmp
stc
movsb
int3
mov
iret
cmp
lea
inc
insl
ds
push
push
sub
push
je
mov
sub
xchg
or
fisubs
sbb
push
adc
ja
leave
jbe
lcall
scas
pop
adc
push
mov
mov
jb
xchg
mov
lret
mov
xlat
mov
push
add
jge
rol
xor
aaa
lret
cs
stc
out
xor
rcl
mov
jbe
popa
jp
loope
pushf
int
subb
f2xm1
in
or
dec
lock
call
out
add
ljmp
cmp
pop
pop
push
sahf
or
leave
bound
fdiv
xchg
pushf
mov
mov
lods
push
jl
out
cli
test
sub
xor
dec
push
mov
add
jl
je
arpl
les
pop
cwtl
loope
dec
subb
jnp
sub
and
sbb
ds
sti
push
push
jbe
arpl
arpl
ljmp
push
and
and
aad
or
mov
dec
push
cwtl
loope
popa
push
add
rsm
das
or
sub
jb
cli
ds
xor
ja
inc
xchg
fwait
imul
xchg
rorb
mov
xor
stos
cs
xor
pop
fbstp
xchg
sub
jge
cmp
pop
into
repnz
sti
pop
sub
mov
loop
xchg
ljmp
paddsw
dec
outsb
sub
jb
adc
mov
push
arpl
dec
push
js
daa
loope
loope
fcmove
cmp
jle
jle
test
xchg
mov
stos
mov
icebp
adc
aad
test
mov
add
jp
xor
add
shlb
xchg
rclb
push
jae
xchg
pop
rcl
lock
stc
push
mov
cmpsb
adcb
insb
push
and
xor
sbb
adc
sbb
ror
bound
in
dec
out
mov
int
xlat
push
adc
cmpsl
mov
mov
repnz
jle
rclb
cmp
cmp
pop
mov
sbb
pop
loopne
mov
outsl
cld
repnz
adc
jb
mov
daa
xor
outsb
incb
fdivrs
cs
loop
mov
out
js
aas
adc
dec
sub
test
mov
lds
negb
cmpsb
in
xchg
jnp
nop
aad
lock
mov
mov
sub
jnp
imul
push
stos
ret
je
ds
jmp
mov
sub
and
insl
jecxz
loope
xchg
leave
xchg
add
sbb
pop
adc
adc
nop
and
pop
jo
jb
sarb
stos
add
mov
push
xchg
xor
xor
sub
stc
fidivs
test
scas
lcall
imul
xchg
fstl
frstor
and
dec
sbb
mov
and
xchg
xor
mov
dec
movsb
adc
movsl
andl
mov
fsubrs
divb
mov
xor
mov
mov
lret
test
bnd
pop
orl
mov
and
mov
dec
jbe
add
mov
sbb
popl
jae
push
hlt
shl
inc
mov
mov
xor
int
or
lret
or
and
xchg
call
adc
test
jae
lcall
pop
insl
mov
ja
xor
pop
repnz
test
jbe
popa
sbb
push
lahf
inc
push
mov
daa
push
adc
int
inc
div
xor
std
xor
jl
xor
jae
xchg
and
xor
mov
xchg
push
imul
hlt
test
jp
sub
scas
shll
dec
js
cs
push
inc
into
mov
icebp
sbb
mov
mov
paddq
dec
ja
repnz
shr
mov
in
and
movsb
lahf
xchg
dec
rol
push
int
xchg
or
fld1
add
in
repz
clc
out
inc
pop
fcomip
stc
mov
testb
sbb
dec
aaa
cmp
jmp
sub
and
and
arpl
mov
push
dec
jmp
mov
pop
push
mov
xor
jmp
adc
dec
dec
fldcw
cltd
testl
cwtl
enter
movl
inc
pushf
loop
int
call
mov
pop
cmp
int3
mov
stc
inc
lods
or
xchg
daa
mov
mov
push
pop
mov
xor
addb
xchg
fisubrl
mov
jae
mov
or
xchg
pushf
adc
in
mov
insb
shrl
sbb
stc
adcb
mov
jbe
movb
jno
mov
lock
mov
add
mov
pop
out
jle
mov
pop
ljmp
mov
sub
mov
adc
lods
sbb
lods
lcall
adc
add
push
or
xor
popf
push
je
clc
xchg
mov
test
add
pop
push
adc
dec
push
push
mov
fadd
out
jb
add
add
aas
int3
ret
xor
rcrb
lcall
push
arpl
sbb
or
outsl
scas
push
xchg
icebp
pusha
test
vpmaddwd
adc
sbb
je
mov
mov
test
sbb
mov
jae
xor
cmpb
push
xlat
mov
push
adc
and
jb
imulb
mov
xchg
ds
add
shll
mov
inc
outsl
mov
call
cmpsl
jb
push
add
xchg
lds
jns
sbb
fsts
jecxz
daa
jle
pusha
pop
xchg
mov
aas
xchg
and
sbb
mov
repz
sub
jnp
sbb
je
lcall
mov
scas
loop
xor
mov
push
aaa
push
in
jae
jge
fldcw
inc
test
jo
jnp
shlb
xchg
adc
movsb
test
cmp
sbb
xor
fcoms
xchg
ljmp
sbb
out
loope
adc
sbb
mov
nop
out
sub
and
pop
fadds
jle
push
sbb
and
fldcw
cmp
and
add
mov
call
test
push
in
jecxz
nop
pop
cmpb
mov
and
push
xchg
shlb
ret
cs
arpl
pop
dec
and
cmp
lods
push
jae
fsubrl
inc
flds
shll
mov
jb
jg
mov
add
sbb
scas
mov
add
adc
insl
bound
xchg
push
jne
test
jb
sbb
pop
push
push
mov
add
shll
xchg
test
sub
out
jmp
aas
mov
pop
popa
aas
test
in
sbb
mov
or
sti
dec
push
jb
or
mov
mov
sti
loope
xor
adc
pop
in
cmp
in
rorl
leave
dec
adc
mov
lds
inc
mov
inc
dec
cld
fisttpll
xchg
cmp
add
mov
ret
or
pusha
jo
int
ja
inc
adc
test
data16
data16
pop
cmp
inc
pop
mov
mov
pop
inc
ljmp
idivb
dec
out
dec
in
out
pop
add
pop
popf
jecxz
mov
stos
mov
jmp
addr16
push
pop
das
or
outsb
xchg
fldl
rcr
pop
mov
imul
popa
repz
ret
movsl
test
ss
mov
hlt
sub
fildll
in
test
cmp
sbb
aad
jp
push
sahf
push
inc
loop
je
arpl
xchg
outsl
pop
push
test
xor
lret
mov
pop
cwtl
push
mov
hlt
gs
nop
adc
sar
sti
jne
inc
mov
jne
dec
mov
adc
cmp
push
xor
andl
cmp
or
xchg
daa
inc
decl
es
push
cmpsb
push
xchg
and
test
mov
jmp
orb
jl
clc
or
lcall
mov
xor
loopne
sub
sbb
ljmp
pushf
leave
jae
cmc
mov
mov
ss
inc
pop
sub
enter
mov
jb
lcall
pop
js
adc
sub
sub
mov
jbe
and
dec
ds
fadds
dec
hlt
mov
xor
xchg
out
cs
div
xchg
add
adc
dec
in
ret
xor
sbb
ljmp
repnz
rclb
push
xor
push
test
or
jmp
adc
ljmp
jae
sub
ror
xor
jno
adc
imulb
xor
mov
jo
repnz
ds
xor
fistpll
cwtl
sarb
lcall
inc
mov
leave
stc
das
mov
into
push
inc
lock
js
cltd
dec
bound
and
arpl
loopne
xor
aaa
jns
mov
push
adc
icebp
xor
stc
sub
in
xor
pop
mov
pop
push
test
lcall
test
andb
add
in
jle
lods
repnz
lods
mov
imul
and
mulb
jne
jnp
rorb
cld
jae
mov
je
push
jns
scas
stc
xor
sarb
fcom
icebp
sbb
xor
out
in
stos
xchg
outsl
in
test
pushf
sbb
xor
aaa
scas
popa
inc
or
fimull
jns
inc
mov
mov
js
fldcw
lahf
sbb
jo
pop
mov
sbb
inc
push
test
iret
add
lods
xor
popf
cs
aam
imul
sbb
pop
push
icebp
mov
cmpsb
ss
push
cmp
aam
imul
test
mov
jnp
inc
clc
gs
sarb
mov
cmp
sbb
dec
loop
add
lock
mov
ljmp
sahf
and
mov
or
lods
enter
insl
cwtl
sbb
testb
nop
xchg
rcrb
pop
mov
loopne
into
jb
aad
mov
mov
push
push
mov
push
jno
ret
dec
mov
cli
mov
test
dec
jge
shlb
push
mov
push
enter
jo
mov
cmp
jne
popa
sbb
jnp
faddl
fwait
sahf
bound
mov
xchg
popf
sti
aam
iret
pop
mov
cli
mov
loopne
fisubs
iret
imul
or
adc
add
out
stos
ja
adc
je
pop
movsb
jnp
fstl
leave
mov
cmp
adc
aas
push
xor
mov
adc
push
ficomps
lock
push
pushf
es
ret
orb
push
lcall
sbbb
insl
loop
jnp
adcb
pop
push
adc
out
stos
and
xlat
icebp
rolb
and
loopne
mov
lock
leave
fldt
mov
mov
xor
hlt
jg
pusha
mov
lahf
shrb
sahf
sub
iret
mov
movsb
inc
mov
rclb
fldl
loopne
and
xor
repz
outsb
push
and
stos
jmp
pop
les
push
push
lcall
shll
dec
icebp
stc
adc
xor
pop
into
mov
scas
out
mov
fisubrl
cmp
divl
call
sbb
xor
adc
or
push
repnz
lahf
xchg
sbb
xchg
pop
xor
adc
pushl
cmc
cs
cmpsl
pop
adc
jg
push
ljmp
loopne
mov
in
jle
nop
sti
jno
daa
pushf
hlt
xchg
out
pop
pop
adc
out
sbb
out
mov
loope
jo
mov
adc
push
cld
mov
aad
xchg
mov
xor
rcll
loopne
out
xor
fstps
adc
mov
imul
rcr
imul
jle
bound
repnz
add
idivb
push
jo
sub
cmp
popa
jno
sbb
mov
test
jle
testb
sbb
xor
sbb
mov
jecxz
test
push
aad
and
fists
mov
int3
jg
mov
sbb
mov
mov
movsl
jecxz
mov
mov
or
repz
ud2
icebp
imul
add
mov
jo
jno
sub
mov
fimuls
xchg
out
stc
in
iret
mov
cs
in
lret
call
arpl
add
in
in
addl
push
fisttpl
jl
repz
cmc
cmp
adc
jl
xor
or
ja
mov
insl
sub
int
push
cmp
fst
aas
add
int
popf
pushf
aas
dec
mov
iret
xchg
xor
add
inc
in
push
pop
iret
jmp
std
arpl
xor
mov
insb
fs
add
pop
jmp
push
dec
stos
push
pop
jl
call
mov
xor
daa
inc
cmp
cmp
imul
sbb
xchg
dec
fcompl
pop
inc
in
cwtl
dec
mov
cmp
loop
shr
adc
sbb
sahf
sbb
sbb
mov
sbb
xchg
xorb
int
daa
jp
add
and
or
push
jae
mov
ret
mov
stos
mov
sbb
data16
mov
adc
scas
arpl
adc
adc
lock
xchg
fsubrs
outsl
xor
cmpsb
mov
sub
mov
lds
add
test
loopne
xchg
stos
in
loopne
les
clc
push
xor
lds
push
jge
inc
ret
inc
cltd
pop
insl
mov
pop
ja
jno
dec
stc
sbb
leave
cmpsb
xor
jne
mov
out
adc
adc
xchg
jns
hlt
adc
roll
push
leave
fimuls
pop
cwtl
clc
cmp
flds
mov
enter
ss
mov
imul
pop
jae
jl
in
idivb
add
mov
shlb
xchg
insl
fwait
fs
pop
lret
lock
mul
add
push
cmpb
and
push
xor
jecxz
sub
cmp
insb
pop
xchg
fistpll
pop
addb
sbb
daa
push
testl
adcb
sbb
out
clc
jnp
sub
mov
jge
and
push
or
dec
ret
dec
mov
and
xchg
mov
stos
pop
xchg
push
xchg
sbb
sub
push
xchg
sbb
ss
pusha
xor
push
loopne
push
jne
sub
imul
sub
imul
xchg
out
ret
and
adc
cli
sub
or
mov
cli
fidivrs
pop
mov
stc
push
push
inc
cld
xlat
scas
dec
pop
int
jp
sbb
jae
cld
in
pop
pusha
ds
adc
aas
shrb
pop
add
mov
add
add
mov
sub
addr16
aad
jp
daa
xor
add
xor
mov
je
mov
stos
jno
loope
mov
adc
cmp
cmp
loopne
popl
aam
sub
subb
fidivs
mov
cmp
add
or
addr16
jecxz
ss
repnz
mov
jbe
jmp
pop
and
call
add
stos
mov
mov
in
jl
lock
mov
je
punpckhwd
xchg
mov
pop
cwtl
arpl
pop
mov
xor
cmpl
insl
mov
cmp
cmp
ficoml
pop
sub
int3
arpl
xor
fsub
loop
pusha
fistl
lods
lret
in
jno
dec
adc
xlat
jle
pop
pop
push
mov
int3
inc
inc
push
mov
jne
out
push
shr
xchg
adc
cmpsl
es
and
push
out
inc
cmpsl
in
addr16
sub
lret
popf
dec
xor
test
repz
loope
mov
push
jae
insl
mov
mov
popa
bound
or
or
stos
mov
in
pop
or
sbb
out
jmp
xor
adc
pushf
xor
sub
mov
jno
in
mov
mov
add
push
xchg
mov
insl
and
ds
shlb
mov
xor
xor
jne
pop
jno
mov
test
inc
jle
mov
xor
xchg
daa
jnp
add
add
jmp
and
out
push
mov
jecxz
dec
aam
add
push
jbe
xor
leave
out
and
sti
and
sahf
stc
mov
rcrl
loopne
hlt
shl
outsl
loope
adc
scas
mov
stos
test
ds
fstpt
push
adc
jbe
or
repnz
cmpsl
inc
cmpsb
loop
sub
or
push
lahf
add
sub
aaa
push
sub
or
loope
push
mov
xchg
mov
es
push
fistl
cs
jo
decl
mov
jno
loop,pt
and
sbbl
sbb
aaa
scas
push
mov
dec
mov
mov
and
jg
rclb
jb
aas
icebp
dec
rolb
icebp
or
and
call
dec
orb
sub
mov
sub
mov
addr16
xchg
mov
cmovnp
vprotb
stos
pop
idivb
pop
xchg
jmp
inc
mov
ds
out
in
cmp
or
in
iret
test
fs
or
ds
dec
or
je
cli
jp
das
mov
add
mov
jmp
in
cmp
push
jb
push
ss
ret
xchg
cmp
lods
shr
js
fdiv
jb
sarb
divb
scas
stos
dec
push
out
cmp
fsubs
jmp
filds
stc
nop
adc
icebp
test
mov
pop
add
sbb
xchg
xchg
jg
dec
lcall
inc
sti
add
das
mov
add
stc
cld
repnz
lock
ds
and
aad
loopne
out
mov
mulps
scas
fldcw
adc
push
adc
xchg
cmpsl
dec
xor
jo
sbb
fbld
jnp
lea
cmp
rclb
mov
cmpsb
dec
push
fistpll
inc
testb
lds
jo
xchg
outsl
jmp
in
adc
adc
xchg
cmpsb
add
mov
pusha
pop
fnstsw
cltd
test
jg
mov
test
add
in
mov
test
icebp
aaa
xor
lock
inc
test
mov
pop
sbb
sahf
pop
stc
addr16
mov
scas
cmc
xchg
mov
stos
sahf
repnz
imul
out
sbb
pop
mov
mov
mov
nop
mov
pop
cmp
inc
cmp
jb
mov
pop
sbb
into
call
push
push
xchg
jae
xchg
scas
mov
loopne
mov
mov
shl
mov
xor
mov
xor
aam
pushf
cmp
adc
mov
mov
aaa
ljmp
mov
sub
sub
icebp
loope
mov
test
call
das
sbb
ror
sub
icebp
shr
mov
adc
fistpl
lea
inc
xor
aam
add
orb
dec
rorl
push
or
cmp
mov
ss
jge
or
sarl
sbb
xor
add
cli
sbb
xchg
jbe
add
lock
push
mov
ss
sti
xlat
jp
mov
fistl
and
add
inc
repz
xchg
les
mov
sbb
and
dec
pop
fdivs
dec
ja
adc
shr
mov
ljmp
xchg
and
mov
pop
mov
jb
jge
arpl
xor
push
int
clc
leave
xor
push
orl
adc
int
push
push
sub
jecxz
in
or
ds
jg
mov
aas
jmp
rorl
insl
xor
out
cmp
sub
adc
loopne
xor
adc
mov
out
movsl
add
sbb
inc
fisubrs
xchg
and
movsl
mov
test
inc
xchg
xchg
insl
cmpsl
cmp
out
cmp
mov
add
les
mov
fldt
lock
and
lea
enter
add
scas
in
and
fidivrl
cmp
rcrl
mov
push
or
sarb
je
cmp
in
jmp
out
and
lret
popf
dec
add
pop
int
sub
pop
push
push
mov
inc
rorl
mov
icebp
pop
out
pop
pop
stos
mov
add
test
mov
in
inc
jmp
icebp
mov
push
ja
std
xor
out
push
ja
loopne
std
das
scas
stos
xor
cs
add
imul
adc
mov
iret
mov
dec
mov
jbe
mov
leave
xor
aaa
jno
inc
and
inc
push
lods
std
mov
imul
add
push
jno
das
stos
lcall
addr16
jb
mov
jnp
les
push
mov
mov
adc
push
popa
sbb
inc
stos
dec
cs
push
fisubrs
test
sti
push
aas
xchg
scas
repnz
pop
cmpl
adcb
imul
pop
jge
stos
lcall
inc
mov
pop
xor
pop
movsl
andb
and
imul
inc
je
or
andl
mov
into
jecxz
inc
cmp
loopne
hlt
pavgb
cmpsl
adc
inc
daa
jge
or
repnz
and
or
test
jge
into
adc
xor
jb
jmp
xchg
mov
call
leave
mov
pop
and
out
add
iret
cmpsl
das
or
cs
cmp
push
clc
push
in
mov
and
insl
repz
cld
mov
ret
and
xor
dec
scas
jnp
xchg
mov
ja
shlb
sarl
sub
stos
adc
rcll
inc
negb
pop
pushf
xor
ds
stos
mov
add
decl
and
pop
daa
cmp
aas
movsl
mov
jg
pop
mov
jnp
mov
xchg
test
daa
popa
push
sub
jmp
sti
icebp
daa
shrb
mov
lahf
inc
sub
outsb
adc
mov
cli
in
loopne
loopne
pop
rcrl
sahf
mov
add
jg
adc
aad
pop
xor
test
ljmp
cmc
addl
stos
lahf
xor
repz
xor
adc
imulb
ds
mov
mov
adc
scas
test
adc
jmp
push
sub
das
and
pop
xchg
xchg
scas
shlb
jg
jmp
outsl
test
out
je
mov
jge
jo
iret
pop
das
add
aaa
mov
lea
in
cs
pop
mov
mov
mov
js
jo
push
leave
js
and
in
jge
jae
das
rcll
jnp
mov
inc
and
nop
mov
loope
test
sti
add
rcl
xchg
idivl
adc
jecxz
paddusw
xor
leave
pop
icebp
add
inc
jns
popa
cmpsl
fidivs
fildll
xchg
lar
jmp
adc
test
test
ja,pt
inc
movsl
sahf
insl
inc
sub
or
dec
inc
outsl
icebp
dec
sbb
xchg
stc
gs
cmpsb
sub
sub
xchg
xchg
jno
mov
faddl
dec
dec
cs
jno
repz
pop
cmc
lahf
inc
inc
fisubrs
and
movsl
lahf
gs
rcll
inc
ficomps
nop
subl
jnp
test
in
mov
xor
xchg
jecxz
sub
rcrb
sbb
in
in
adc
popf
aas
mov
adc
xor
mov
mov
sahf
cld
mov
pop
lds
mov
stos
inc
mov
cmp
fwait
std
pushf
repnz
or
dec
repnz
jb
mulb
lret
call
or
lock
lret
out
mov
nop
mov
dec
psubw
adc
sti
lock
lock
mov
inc
repnz
jle,pt
cmpsb
mov
xchg
dec
pop
and
mov
sti
mov
fsts
icebp
mov
sbb
mov
jne
xchg
es
inc
mov
cmp
jbe
mov
idiv
mov
or
xchg
jge
popa
jecxz
lock
inc
pop
dec
mov
imul
or
data16
mov
cmp
loope
andb
testl
ja
dec
js
push
dec
repz
out
jle
cltd
cli
popa
cmp
shll
jl
repz
xchg
in
push
pop
xor
mov
cmp
je
push
leave
sub
xor
adc
jl
inc
test
jge
outsl
mov
and
inc
push
decl
mov
repnz
nop
sti
add
cmpsl
dec
repz
sbb
inc
sbb
mov
mov
ja
ret
jns
xor
pop
xchg
data16
jmp
adc
adc
ja
fs
xor
push
sub
cmc
push
imul
xchg
sub
push
rcrb
addr16
decb
fwait
repz
xorb
cmp
ljmp
ljmp
push
imul
mov
mov
lock
xchg
pop
inc
popf
je
nop
gs
sbb
iret
cmpsb
out
stos
pop
or
test
pusha
out
stos
mov
out
fisubrs
sbb
ja
lret
nop
pop
mov
add
xchg
gs
inc
add
or
out
shl
lock
fwait
scas
sbb
movsb
jg
adc
ds
xchg
jnp
adc
mov
pop
arpl
xor
je
call
xchg
sbbb
xchg
and
sbb
repnz
mov
imul
test
mov
pop
mov
insb
mov
shlb
jl
dec
je
fdivr
dec
out
cmpsb
mov
mov
dec
and
mov
std
and
dec
lcall
mov
int3
leave
mov
dec
mov
test
mov
xorb
bnd
or
popa
and
outsb
mov
add
fidivrl
jae
sub
mov
jp
aas
dec
mov
ds
pop
popf
repz
andl
mov
mov
fimull
jns
mov
clc
adc
inc
fistpll
ja
shll
xchg
push
adc
shll
out
dec
test
add
sti
pop
xchg
xchg
push
test
stos
icebp
push
fadd
repnz
cmp
cmc
xchg
sbb
ret
mov
jb
and
mov
mov
add
xor
cmp
orl
mov
fldz
mov
stos
push
push
adc
mov
shr
sar
nop
icebp
movsb
pop
dec
or
push
movsb
pop
mov
jae
idivb
adc
bound
ja
in
push
nop
mov
pushf
jae
xchg
sbb
xchg
xor
fdivrs
icebp
xlat
nop
ss
sarl
mov
out
xorl
rclb
add
sbb
hlt
fistpl
iret
popa
mov
jge
fimuls
and
mov
mov
push
xor
sbb
ds
test
mov
stc
jl
mov
icebp
pop
jge
or
or
in
mov
lods
adc
sahf
icebp
ja
push
int
cmpsl
push
mov
in
sbb
xchg
pop
stos
push
fwait
nop
setae
sub
out
ja
loopne
pushf
pop
dec
cltd
sbb
lock
mov
lea
mov
add
pop
add
mov
or
mov
xor
pop
mov
ret
xor
scas
mov
inc
push
mov
bound
sarb
push
adc
push
out
push
xor
jnp
stos
mov
sbb
clc
or
out
ljmp
adc
mov
mov
add
mov
xor
loopne,pt
ja
or
inc
shrl
lods
incl
fdivrl
cmp
xor
add
iret
sahf
es
cmpsb
scas
sbb
and
mov
add
adc
loope
push
and
cmp
pushl
aad
push
cmc
push
loop
movsb
lods
icebp
and
fstl
dec
lods
cmp
inc
push
daa
push
je
cmp
aad
mov
daa
outsl
adc
xchg
jns
cmc
jge
mov
cmp
cltd
xchg
push
hlt
addr16
int
and
adc
jb
or
lcall
imulb
inc
sti
cli
push
js
subl
les
fdivs
bnd
xchg
xchg
xacquire
pop
push
mov
cmp
imul
ret
and
cmp
sbb
rcr
sub
xorl
es
or
jp
cmp
pop
imul
adc
pop
jno
jne
inc
loopne
sbb
fs
outsl
cmp
scas
sub
cmp
ret
int
sarb
cltd
icebp
adc
aas
add
ret
mov
test
pop
xor
cmc
int
fsubrl
aam
xchg
stos
out
mov
lods
das
mov
stc
mov
not
xor
or
cmp
sub
or
sbb
sub
cli
out
pushf
inc
add
test
loopne
pop
ret
mov
out
jmp
fwait
sarb
insl
pop
xchg
sub
xor
adc
jmp
scas
inc
cmp
push
jg
cwtl
loope
pop
popf
adc
mov
cmp
mov
fidivrl
mov
xchg
push
movsb
lret
call
xor
and
mov
or
movsb
ret
mov
icebp
insb
adc
pop
dec
loopne
rcr
daa
jb
mov
es
pop
ljmp
gs
dec
push
add
mov
push
test
add
sbb
xchg
add
cmp
fiadds
repz
repz
icebp
out
mov
inc
and
xor
dec
sbb
sar
mov
out
cmc
popl
int
jbe
and
jo
xchg
adc
mov
xor
shrl
xor
shr
stos
add
bound
ds
aas
subb
jb
xor
pop
lea
adc
xchg
loope
in
cmpsl
dec
mov
ljmp
stos
imul
inc
lcall
mov
add
inc
mov
mov
mov
mov
call
fbstp
jns
push
sbb
jg
idivb
xchg
sbb
data16
mov
mov
jl
jb
movsb
pop
mov
lret
test
lret
addb
sub
mov
in
mov
stos
xor
add
push
jb
mov
cmp
loopne
add
pop
xchg
add
cmpsb
stos
fisubrs
cld
dec
mov
push
xor
scas
stos
mov
mov
push
add
rol
cli
shlb
repnz
stc
daa
aad
pusha
mov
push
jb
cmp
push
ret
jnp
jmp
inc
ljmp
dec
push
jae
mov
sti
pushf
mov
inc
and
ja
add
mov
jne
cs
push
push
mov
ds
sub
adc
and
add
push
jae
sti
sub
sub
cli
rol
test
sahf
out
sbb
mov
sbb
add
mov
mov
hlt
xchg
out
adc
repnz
jb
inc
push
dec
por
icebp
sahf
icebp
call
repnz
jp
push
xor
xor
int
xor
outsb
icebp
shll
dec
adc
lds
mov
cmp
pop
bound
mov
add
test
std
mov
and
adc
cmp
sub
fsubrp
xor
ret
decl
inc
add
xor
imul
push
shlb
xchg
incb
movsb
sub
mov
jb
sub
movsb
xor
push
inc
and
enter
pop
mov
push
add
sahf
jb
adc
lods
arpl
repnz
stos
adc
out
out
loop
decl
mov
ds
rorb
dec
xchg
repnz
dec
jmp
xor
ds
xchg
inc
leave
mov
sahf
mov
push
adc
cmp
test
mov
jg
addr16
aam
adc
nop
mov
imul
pushf
mov
test
inc
pushf
xor
push
in
pop
aad
testb
adc
xor
or
test
sbb
lds
inc
in
mov
add
jle
pop
into
mov
repnz
leave
leave
test
subb
pushf
mov
pop
and
jae
adc
test
scas
add
addr16
in
cmp
mov
and
ss
or
xchg
fst
stc
out
sub
js
sub
jne
xor
adc
aaa
push
mov
jne
jne
cmp
jnp
scas
lret
adc
inc
sub
add
scas
jb
das
aad
mov
jle
mov
jmp
mov
inc
inc
das
jmp
mov
or
movsb
shrb
mov
mov
cmp
mov
mov
test
pop
dec
push
push
mov
mov
stos
repnz
sbb
std
jle
andl
insl
decb
mov
pop
dec
cmc
loop
ss
jno
dec
cs
xchg
je
testb
xor
js
inc
sarl
ret
fistl
and
lock
clc
mov
xor
pop
ljmp
sub
test
fidivrs
dec
cmp
cmp
pushf
loop
mov
out
ljmp
add
xchg
jl
jne
pop
sbb
inc
add
insl
cli
in
adc
add
xor
mov
stos
pop
aas
adc
pop
mov
cmp
push
incl
inc
int3
lret
cld
dec
xchg
pop
push
scas
fsts
xor
sub
lret
mov
ret
mov
xorb
les
es
push
mov
stc
inc
dec
in
and
sbb
mov
adc
sarb
lret
out
adc
idivl
jns
pop
cmc
add
aad
push
fimull
or
pop
mov
lret
dec
dec
inc
test
adc
loopne
jl
aaa
mov
xor
aam
mov
mov
popl
xor
mov
mov
xor
cli
dec
stc
dec
inc
xor
mov
cmp
aad
lods
ljmp
inc
and
stos
enter
andb
outsl
pop
mov
push
pop
scas
pop
adc
loop
push
mov
sahf
push
jp
mov
mov
movb
inc
test
push
lahf
push
mov
sub
es
mul
mov
lock
sbb
cmp
aad
aas
sub
sub
and
sub
sub
dec
mov
outsl
dec
cmp
jae
mov
clc
and
jmp
inc
lcall
cmp
loopne
jne
std
stos
cmpsb
je
xor
and
xor
xor
fwait
xor
scas
pop
jae
adc
xchg
adc
cmp
mov
int
adc
cs
mov
pop
sbb
dec
out
mov
push
xchg
mov
int
cld
jmp
jae
mov
dec
clc
das
push
cmp
fsubrl
jbe
mov
inc
sbb
scas
xchg
push
daa
int
lock
mov
add
jmp
cmp
pop
xchg
inc
inc
loopne
mov
pop
add
scas
pop
adc
sbb
arpl
or
data16
ljmp
mov
pushf
sbb
fisubrl
pop
out
inc
push
clc
int3
test
xchg
rorl
test
sbb
jnp
mov
rcll
jp
cli
btr
mov
stos
int
fisubs
mov
loopne
xchg
cmp
mov
mov
mov
loop
jnp
gs
repz
mov
icebp
in
aad
cli
movsb
mov
sub
mov
mov
mov
add
movb
push
lods
dec
hlt
mov
sbb
cmp
and
pop
sbb
mov
add
es
outsl
mov
clc
test
push
mov
mov
imul
adc
xor
mov
movsl
repz
jmp
mov
add
lods
fnstcw
mul
movsb
std
ret
sbb
jl
jecxz
movsb
stc
pop
loopne
into
lea
pop
loopne
shlb
inc
arpl
leave
sti
mov
lret
xor
push
lods
push
insl
repz
xchg
inc
rorb
sbb
outsb
loop
es
mov
jns
xchg
mov
cld
jbe
icebp
loop
fmuls
enter
fcmovnb
xor
and
add
cmp
lea
icebp
sarb
imul
xor
cli
shrb
jmp
mov
fcmovu
xor
aas
xor
pop
mov
mov
mov
fisubs
pop
xchg
pop
jg
xchg
imul
fcmovb
and
mov
ffree
lds
repnz
adc
sbb
xchg
ficompl
mov
and
cmp
iret
test
ret
inc
mov
and
inc
dec
mov
shlb
pop
jo
mov
adc
aad
xchg
mov
mov
bound
pop
aas
fnstcw
and
push
fcoml
sbb
jg
aaa
add
push
mov
pop
mov
push
js
in
sti
or
int
imul
mov
xor
cmp
xor
dec
add
shll
fidivrs
sbb
rcrl
stos
testb
pop
cmc
bound
shlb
xor
pop
cld
sarb
shlb
mov
mov
mov
outsb
mov
leave
pop
hlt
ja
arpl
push
or
or
mov
andb
lret
inc
and
and
sbb
ret
loopne
pop
adc
out
adc
sub
int
imul
pop
aas
testb
cwtl
mov
loop
mov
xor
lods
xchg
cld
out
in
call
inc
fsubl
adc
push
rclb
lock
mov
add
xor
push
jmp
mov
aad
flds
ret
mov
scas
mov
inc
hlt
xor
mov
push
sub
imul
test
call
out
test
icebp
jb
repz
xor
inc
sub
arpl
sti
xchg
or
xlat
jb
jb
movsl
xchg
mov
cmc
push
movsb
sar
pop
scas
push
jg
fcoms
push
and
adc
in
repnz
or
mov
mov
aaa
adc
xor
pop
adc
and
adc
and
push
mov
jno
sbb
into
dec
adc
mov
std
mov
push
jmp
ffree
jmp
mov
test
lret
fldt
pop
mov
mov
sub
lcall
sti
sbbb
pop
ret
jbe
jb
adc
gs
xor
xor
xor
pop
pop
lret
mov
push
icebp
fwait
dec
mov
mov
sbb
mov
mov
dec
ljmp
jnp
call
les
lret
pop
pop
sbbb
push
arpl
mov
mov
cwtl
jo
jae
or
fisubl
xor
mov
mov
xorl
xchg
adc
jb
sub
movsb
addr16
xchg
loope
loop
or
sub
push
sarb
adc
fnstcw
xchg
repnz
jbe
sub
test
lahf
mov
sbb
cltd
or
pmaxsw
std
hlt
and
test
ss
emms
adc
xlat
jge
mov
sub
sahf
sub
popf
sbb
mov
das
inc
lea
icebp
loopne
cmc
leave
cmpsb
clc
adc
dec
jae
or
or
xchg
add
sbb
dec
stos
ljmp
ds
rorb
sbb
push
insl
mov
sti
lret
push
push
sbb
leave
push
pop
sbb
xor
adc
or
lahf
nop
jae
das
repnz
inc
rcl
repnz
add
repz
icebp
xor
jmp
push
inc
mov
jp
sahf
es
ljmp
ficoms
adc
jmp
movsb
xchg
pop
jbe
mov
cmpsl
pop
jbe
mov
movsb
sbb
inc
dec
in
xchg
mov
pushf
or
mov
push
leave
adc
fsubl
add
cmpsl
stos
mov
mov
jne
in
stos
mov
mov
sbb
sbb
repz
cmp
sub
mov
jge
ja
xor
mov
push
clc
imul
repnz
push
jg
inc
movsl
pop
popa
adc
push
mov
mov
jle
insl
lock
lret
mov
mov
and
push
cmp
xchg
xchg
aas
dec
loope
push
rclb
jg
jo
fwait
ljmp
jg
mov
inc
mov
fcomp
loop
add
jmp
cmp
scas
jnp
xor
loopne
pop
ljmp
sbb
loopne
xor
xchg
xchg
inc
push
or
lods
inc
mov
movsb
jg
xchg
push
push
push
push
imul
mov
in
xchg
and
cmc
jae
jg
inc
cmp
aad
pop
arpl
or
sbb
jecxz
sbb
scas
xor
pop
mov
ret
sbb
xchg
mov
imul
test
leave
dec
repnz
push
aam
dec
lock
sbb
xor
pop
dec
shrb
add
int3
and
pop
mov
repnz
mov
in
movsl
andb
jg
movsl
filds
add
mov
adc
sub
mov
stos
xchg
jnp
push
dec
and
mov
mov
mov
clc
mov
cli
test
inc
out
mov
movsb
mov
mov
hlt
xor
loop
out
in
and
mov
negb
mov
mov
xor
mov
xor
sar
xchg
insl
divl
mov
sahf
ja
cli
pop
stos
lods
jo
pushf
pop
mov
push
push
jp
mov
stos
add
pop
cmc
ret
test
fisttpll
mov
mov
add
js
movsl
fdivl
fnstenv
mov
adc
jbe
repz
into
adc
lahf
and
pop
in
insl
daa
mov
nop
das
pop
xor
dec
pop
lcall
rcrl
adc
mov
aas
push
jmp
rep
jnp
add
jb
dec
sbb
outsl
icebp
push
and
loope
mov
mov
cmp
bound
inc
xor
into
in
iret
jne
pop
pop
cwtl
loope
mov
push
mov
mov
out
adc
scas
in
or
sti
ja
dec
mov
loop
xor
xlat
imul
aam
sahf
cmp
clc
add
push
pop
add
jp
shrl
and
jne
push
stos
pop
fdivl
icebp
mov
aas
mov
mov
mov
jae
xor
jle
jb
sbb
cmp
out
lret
add
fnstsw
lock
cld
jnp
pusha
dec
add
xor
mov
xor
popl
and
mov
scas
imulb
xchg
scas
pop
mov
sbb
int
push
inc
add
aas
mov
pusha
out
xchg
jno
push
jge
loopne
inc
addr16
stos
int
xorl
repnz
and
mov
sbb
xor
xchg
jg
jle
daa
rcl
cmpsb
xchg
jnp
pop
sti
outsl
in
adcl
sti
mov
imul
repz
mov
cmp
xor
sti
mov
jo
repnz
outsl
xor
pop
ja
fidivrl
test
mov
push
mov
push
in
leave
mov
inc
mov
xchg
pop
xchg
sbb
movsb
int
dec
call
ja
cmc
push
adc
movsb
shr
sbb
stos
adc
cmc
das
mov
pop
xor
stc
add
and
lahf
jmp
shrl
repnz
xchg
inc
movsb
and
ljmp
addl
pop
lea
ljmp
mov
and
mov
stos
lcall
sti
xchg
dec
or
imul
bound
bound
sbb
call
shrl
adc
add
cmp
mov
pop
stos
xor
imulb
js
jno
or
fsubrl
xor
test
in
insl
je
mov
data16
sub
pop
pushl
fstpl
push
push
faddl
inc
sahf
fldl
xchg
loopne
inc
je
rol
mov
xor
ret
and
xor
out
jnp
and
sub
ljmp
mov
push
jno
sbb
add
inc
mov
cli
stos
je
not
push
add
mov
icebp
in
scas
call
in
roll
mov
mov
adc
adc
jae
call
into
add
outsb
mov
int3
pop
xchg
icebp
std
adc
sarb
adc
pop
dec
inc
pop
adc
pop
sbb
ffree
adc
ss
and
nop
fsubrs
sub
test
pop
sar
jo,pn
mov
movsb
insb
mov
daa
popf
dec
xchg
mov
scas
pop
inc
jmp
fwait
inc
mov
scas
mov
pop
test
pop
pop
sbb
aaa
popf
repz
adc
add
paddd
jmp
sub
pop
add
mov
add
test
pusha
mov
fs
aas
sbb
pop
sub
enter
shl
jp
xchg
sahf
adc
stos
movsb
xchg
dec
mov
stos
mov
loope
adc
loopne
pop
testl
int
loopne
mov
dec
jnp
mov
mov
cmpsb
mov
jne
dec
hlt
xor
aaa
mov
rorl
dec
mov
or
dec
mulb
lcall
xchg
leave
xchg
test
mov
push
inc
gs
fwait
out
bound
and
lods
out
inc
movsb
mov
mov
mov
push
sbb
mov
cwtl
rclb
jmp
xor
imul
sub
xor
lock
pusha
cmp
into
es
jl
push
or
outsl
pop
loope
push
jmp
cmp
inc
sbb
jmp
dec
fidivs
adc
inc
jno
dec
add
xchg
test
pop
pop
js
lods
xor
add
jmp
nop
inc
mov
sub
cmpsb
push
imul
mov
jge
mov
outsl
pusha
jne
subl
and
xchg
adcl
sahf
jecxz
inc
xor
jne
ja
int3
rol
pop
enter
mov
lcall
xchg
scas
int3
push
negb
cmpsl
data16
mov
mov
orl
push
xorl
out
popa
int
cltd
scas
xor
mov
test
or
mov
mov
push
add
jae
push
leave
movsb
adc
ret
and
outsl
mov
orl
push
int3
mov
lds
mov
push
ds
pushw
rol
cmpsb
jecxz
lcall
inc
jns
inc
popf
lods
sahf
mov
addr16
mov
xchg
dec
mov
ss
mov
or
ficoms
jnp
sahf
mov
popl
shl
mov
or
mov
fnstsw
pop
adc
xchg
leave
std
mov
stos
daa
pop
pop
lahf
xorb
fs
icebp
jae
sti
nop
jmp
cmp
xor
sub
lret
scas
mov
fxch
ljmp
insb
and
cs
cmp
call
mov
push
mov
scas
rcl
and
and
movsb
ljmp
mov
pop
push
data16
pushf
sbb
insb
xor
cmpsb
sbb
mov
pusha
stos
mov
testl
mov
adc
out
fisubs
lods
pushf
fcoml
idiv
pop
xchg
stos
dec
andl
mov
jle
jb
xchg
popa
inc
mov
push
adc
dec
cmp
jl
adc
clc
dec
in
sub
xchg
mov
shll
lahf
das
mov
mov
aas
xchg
rcll
fistl
and
repnz
xchg
stc
dec
add
out
jmp
pop
out
fnstsw
mov
shrl
jne
mov
push
jmp
fsubl
das
mov
xor
cmp
lea
shr
mov
pushf
and
and
inc
adc
pop
shlb
push
and
cmp
mov
in
jo
loopne
loop
loop
fldl
inc
rcrl
cmpsb
mov
hlt
outsl
outsb
xchg
out
roll
jecxz
pop
lock
inc
pusha
pop
dec
fsubl
js
shll
cli
mov
push
mov
outsb
mov
push
pop
sub
lret
in
sti
pop
sti
pop
clc
and
xor
cmc
xor
leave
rcrl
lods
jae
cmp
ds
cs
push
sub
in
mov
sub
dec
sbb
pop
movsbl
lods
mov
add
mov
mov
add
inc
pop
jl
jg
int
orl
jecxz
mov
in
test
sbb
mov
xor
popl
test
test
pop
or
sti
imul
mov
jg
inc
imulb
jp
ds
push
mov
inc
cmc
push
mov
xor
add
orb
push
and
adc
mov
fistpll
cmc
scas
or
xor
mov
mov
pusha
jne
out
gs
cld
sbb
loopne
mov
sub
inc
jno
testb
or
mov
aaa
cs
mov
test
pop
lock
jp
mov
add
xchg
es
adc
cvtdq2ps
mov
push
sbb
loope
imul
lods
xchg
dec
movsb
push
test
dec
mov
mov
lock
cmc
xchg
pushf
xor
mov
shrl
inc
out
sarb
insl
repz
inc
clc
out
iret
cwtl
loopne
call
xchg
aaa
push
ljmp
ss
popf
bound
loop
lock
cmp
mov
xchg
int
mov
pop
mov
aas
clc
out
or
rorb
negb
lcall
rcrl
add
aas
push
sbb
arpl
call
mov
inc
cmpsb
xchg
scas
rcr
jno
stos
rcll
mov
add
and
ljmp
push
cmp
pop
and
sbb
mov
mov
pop
xor
xor
es
xchg
stc
mov
dec
lea
outsb
ret
inc
push
ret
std
jg
sti
fstpl
test
xor
xor
stos
ficoml
scas
mov
mov
mov
xchg
test
jle
dec
mov
push
repz
add
mov
icebp
add
adc
sarl
hlt
inc
addr16
je
xor
dec
js
movsl
nop
cmp
push
je
stos
adc
sahf
out
data16
dec
adc
sbb
sbb
and
mov
scas
into
xor
gs
je
test
int3
cmc
scas
and
shll
test
add
jmp
mov
mov
xor
repz
mov
out
mov
orb
xor
adc
cld
ss
idiv
dec
adc
jnp
ljmp
sbb
adc
dec
sbb
loopne
cmp
mov
push
or
inc
adc
push
sbb
and
rclb
dec
xor
leave
icebp
arpl
out
js
enter
leave
lock
push
scas
icebp
fwait
test
in
lcall
cli
adc
sbb
or
pop
mov
imul
adc
jnp
or
int3
mov
adc
inc
or
or
cmc
fbstp
jge
test
out
lret
loopne
mov
or
mov
mov
aas
mov
mov
mov
cmc
sbb
cli
xchg
loopne
sub
adc
icebp
arpl
outsl
shlb
ljmp
popa
and
ljmp
jecxz
loop
mov
xchg
xchg
mov
mov
sbb
leave
ficompl
mov
incl
loopne
mov
xchg
cmpsl
ds
mov
scas
sbbl
divb
pop
add
cmc
add
add
inc
lret
mov
clc
lds
pop
push
push
sahf
jg
inc
es
sti
int3
push
shlb
mov
and
push
xchg
adc
and
out
pop
jnp
adc
sahf
cmp
inc
pusha
mov
jl
test
aad
jle
lock
cmpsl
adc
push
int
out
into
cmp
adc
out
mov
dec
jb
jae
xor
adcb
sarb
adcb
ss
mov
and
mov
dec
movsb
cmp
std
xchg
ss
fs
push
scas
and
sti
dec
bound
jno
mov
cwtl
add
das
out
imul
cmp
xor
jl
loopne
movsl
stos
xchg
loopne
leave
imul
hlt
repnz
xchg
sbb
mov
fisubrs
dec
jg
push
inc
dec
fucomi
cmp
data16
mov
add
jae
mov
roll
mov
pop
repz
jmp
xor
pop
mov
rolb
subb
xor
xchg
cmp
out
jmp
fmull
push
rcl
cmpsb
push
adc
shll
or
gs
call
mov
mov
xor
cmp
xchg
xchg
mov
pop
aaa
jnp
imul
cmp
cmp
xor
aaa
leave
dec
stos
pop
adc
mov
repz
xor
jae
mov
stos
pop
sbb
and
and
flds
icebp
cmp
jb
es
imul
xchg
rcl
lea
test
or
mov
adc
rep
outsl
jl
inc
inc
xchg
loop
or
push
xchg
jmp
movsl
mov
mov
xor
cmp
pop
int
push
dec
scas
imul
movsb
xchg
leave
push
and
and
jno
mov
adc
test
jno
adc
subl
test
dec
std
pop
xor
push
xchg
sti
rolb
shlb
xor
aas
ret
shl
cmp
adc
cld
mov
mov
xor
xlat
xchg
cmp
scas
cmp
aaa
mov
cmp
xchg
addb
nop
aas
xor
call
cmp
xor
icebp
repnz
adc
mov
xor
jo
push
stos
cmp
mov
push
pop
xor
adc
cld
jl
jno
push
ficoms
lahf
dec
test
or
fstl
ds
cmp
sub
push
rorb
int3
push
loope
inc
ss
mov
mov
notb
ss
xor
push
adc
mov
cmp
lahf
mov
stos
push
and
adc
xlat
adc
cmp
fdiv
pop
mov
push
repnz
xchg
aam
mov
mov
xlat
mov
pop
sbb
stos
cmp
mov
push
and
hlt
lock
mov
js
pop
jp
mov
mov
adc
icebp
mov
mov
stos
cmc
adc
lock
cmp
lcall
jle
lahf
lock
mov
xchg
and
mov
stos
clc
and
ja
mov
mov
adc
lock
mov
jns
mov
xor
adc
lcall
fisubl
aaa
mov
hlt
rcll
aas
xor
lahf
mov
pushf
mov
mov
sub
icebp
lock
call
lock
cli
test
adc
lock
and
cmc
mov
mov
sahf
cmp
lock
mov
and
hlt
cmc
pop
stos
sbb
sbb
fnstcw
sbb
nop
pop
sub
stos
xchg
adc
lock
mov
sbb
cmp
adc
jp
mov
aam
mov
cwtl
sub
sarb
and
mov
cmc
adc
xlat
mov
jnp
mov
pop
adc
pop
mov
xchg
mov
lock
mov
sarb
adc
adc
mov
stos
xchg
adc
sbb
sti
cld
push
stos
pop
adc
lock
mov
mov
and
lock
pop
fcompl
lock
mov
jb
rcll
adc
cmp
sbb
cmp
pop
push
stos
adc
sub
adc
xor
addr16
hlt
cmc
stos
pop
adc
lock
mov
sti
fdivl
push
icebp
repnz
cmpsb
f2xm1
mov
mov
xchg
mov
mov
mov
imulb
and
and
xchg
mov
jb
mov
xchg
mov
mov
sarb
xchg
mov
xor
icebp
mov
mov
mov
aas
and
stos
test
adc
sub
adc
jmp
lods
repnz
jle
and
rclb
mov
mov
sbb
xchg
mov
jl
mov
and
adc
bnd
hlt
mov
xchg
lock
adc
mov
js
push
lock
mov
adc
fildll
cld
mov
pop
cmp
stos
xchg
adc
lock
cmp
adc
push
jg
jle
mov
sub
adc
mov
xchg
lock
mov
repnz
sahf
adc
sub
adc
push
mov
jne
xor
jae
jb
test
mov
cmp
add
sti
sub
add
sbb
or
out
dec
pop
cmpl
or
inc
jle
sbb
daa
sbb
mov
adc
adc
add
std
dec
outsb
jmp
xchg
jge
stos
pop
sub
mov
cmpsb
pop
int
mov
mov
adc
fistl
or
out
xlat
pop
int
mov
mov
into
or
sbb
sti
sub
or
mov
pop
push
or
cld
rcrl
adc
scas
mov
push
pop
push
jecxz
cmp
mov
cmp
push
sub
pop
xor
out
mov
int3
fisttpll
and
dec
insb
xchg
or
in
push
fcomip
lods
lahf
loopne
mov
xor
andl
sbb
arpl
mov
fnstcw
fstl
or
aad
mov
sbb
jmp
cmp
sub
sbb
push
loopne
jg
std
lods
notl
or
cli
outsb
jle
cmp
rcll
lahf
fcmove
xchg
pop
xchg
scas
int
xchg
in
ds
pop
push
and
dec
cld
fimuls
pop
sub
lock
aaa
add
lret
or
xchg
sbb
mov
ss
cmp
int
repz
and
lret
fldt
loopne
sub
pop
cld
lahf
cmp
sbb
sub
add
pop
fcoml
cld
repnz
sbb
das
sbb
mov
jmp
in
or
repz
cld
sub
pop
ret
jp
add
sbb
nop
xchg
push
jmp
stos
adc
lods
pop
rcll
mov
lock
pop
femms
lods
fwait
cld
add
pop
scas
pop
fnstenv
or
xor
aaa
and
ss
mov
cli
sub
in
pop
fwait
xor
fs
sbb
xchg
adc
ja
mov
or
inc
mov
int
cwtl
mov
sub
data16
test
jmp
push
xchg
push
lock
push
add
insb
xor
xchg
jns
push
outsl
fdivl
fdiv
push
or
xchg
mov
mov
jb
fs
push
scas
push
cmp
into
sbb
mov
jns
jmp
pop
nop
imull
xlat
cld
shlb
inc
repz
stos
cmp
mov
push
popa
movsl
dec
jmp
add
or
mov
imul
mov
outsb
jb
fstps
negb
icebp
push
arpl
imul
icebp
add
jl
sarl
ret
mov
push
js
daa
mov
in
sbb
mov
fisttpll
pop
sbb
mov
mov
mov
adcb
mov
dec
aad
jbe
mov
add
into
frstor
lods
aas
jne
rolb
popf
loop
lcall
cmp
outsb
adcl
sbb
dec
dec
je
test
stos
mov
sahf
mov
in
fcomi
out
movsl
fbld
test
xchg
imul
stc
shlb
fsubrl
hlt
lock
jg
inc
pop
mov
xchg
dec
adc
jns
mov
xchg
les
xor
mov
sahf
sub
scas
aad
cs
fldz
dec
and
add
out
stc
ds
insb
dec
mov
sbb
or
jne
sub
rolb
sub
xchg
movsb
inc
lcall
mov
fstpt
scas
insb
jne
icebp
jo
aam
cmpsb
sub
dec
pop
scas
imul
and
idivl
into
inc
push
lods
jecxz
jnp
sub
jp
lods
or
sub
sub
je
jbe
shr
push
mov
out
sbb
shll
and
and
lret
xor
mov
dec
mov
and
sub
push
loopne
and
mov
sub
jl
mov
mov
or
cli
call
dec
stc
ja
jns
lods
dec
sbb
cmp
mov
sbb
hlt
mov
push
and
mov
xor
mov
pop
jns
rorl
in
mov
rcrl
insl
sub
loopne
adc
mov
ja
pop
mov
and
pop
ss
and
insl
mov
mov
mov
push
shlb
jmp
lods
scas
imul
mov
call
or
lods
data16
popa
add
int3
pop
stos
lock
lock
in
xor
add
lahf
cld
jl
cmpsb
ja
adc
loope
jne
push
add
pop
push
enter
or
mov
mov
outsl
mov
pop
or
out
adc
dec
ds
clc
js
loope
mov
scas
and
sti
lock
jle
pop
and
push
mov
das
dec
or
rorb
outsb
mov
pop
pop
sub
adc
mov
xchg
mov
jp
push
sbb
fadd
cmp
or
idivl
stc
sbb
insb
cmp
mov
xor
out
movsl
push
pop
mov
jge
scas
call
cmp
xchg
lea
xchg
sti
scas
scas
leave
jns
pop
adc
cwtl
sub
mov
setbe
xchg
insb
mov
mov
pop
jge
xchg
push
pop
mov
mov
mov
daa
das
andl
sbb
cli
std
pop
repnz
add
fstps
mov
cli
mov
and
sub
xchg
jo
jne
sbbb
jb
xchg
cmp
sbb
call
jl
seta
clc
mov
dec
fildll
shrl
gs
dec
jbe
and
mov
inc
repnz
sbb
test
sub
daa
jecxz
xor
mov
out
scas
stc
mov
les
add
lahf
cmpsb
xor
or
mov
pop
jmp
adc
xor
cmp
mov
dec
testl
stc
adc
stos
push
stos
sarb
loopne
mov
push
outsb
xchg
adc
fldcw
mul
jg
push
pushf
ja
fnsave
adc
mov
xlat
push
cltd
mov
or
fcoms
imul
ds
test
loopne
add
les
xor
push
int3
jle
pusha
xor
ja
stc
xor
cld
sub
lock
sbb
icebp
or
sbb
jo
mov
adc
inc
xor
xor
addr16
es
sti
cmpsb
andb
mov
iret
add
push
lods
mov
int
fisttpll
popf
pop
imul
stc
xor
insl
sbb
and
dec
xor
clc
lock
jp
cmpsb
rcll
jo
les
sbb
in
icebp
push
scas
sbb
lea
adc
cmc
stos
repnz
jle
sbb
lods
xor
lcall
out
push
iret
adc
pusha
xchg
stos
ds
xor
jge
pop
popf
mov
jle
cmp
shll
inc
mov
ds
shr
mov
fsubrs
mov
pop
mov
jmp
scas
cmp
aas
sub
jo
out
push
sbb
and
cmp
loopne
loop
lock
sbb
pop
mov
out
inc
jns
lock
push
mov
loope
mov
adc
sbb
shld
in
cmp
and
or
stos
gs
add
mov
rcr
push
mov
sub
and
lea
adc
xchg
mov
cwtl
mov
loopne
mov
push
daa
shlb
add
mov
psadbw
arpl
jle
div
and
fistpl
adc
jle,pn
fcompp
push
push
lret
sbb
fsubr
test
testl
sbb
pop
jno
sbb
inc
adc
subb
punpcklbw
mov
adc
add
dec
popf
adc
adc
mov
lock
push
cmp
mov
adcl
pop
sbb
fwait
lock
sbb
fldenv
mov
mov
mov
movsl
mov
lods
aas
lcall
bsf
in
xchg
cld
push
insb
stc
xchg
loopne
lea
sub
or
rcr
ficompl
jb
stos
push
stos
xchg
int3
jle
int3
sarl
add
jne
mov
inc
lea
popf
outsb
mov
hlt
mov
js
shr
mov
stc
insb
push
aaa
out
mov
frstor
cld
loopne
lods
pop
mov
jno
adc
push
sti
jae
rorb
out
cmp
ja,pn
scas
or
sti
jb
mov
rorl
and
jne
das
icebp
ja
or
xchg
ljmp
cmp
shll
jo
sub
xchg
cli
or
add
or
cmpsb
add
lock
cli
and
and
mov
sahf
gs
and
mov
cmp
hlt
xchg
add
add
mov
xor
std
stos
cld
add
and
mov
stc
fstp
out
icebp
test
cld
push
mov
ja
les
add
jl
xor
aas
lcall
mov
sbb
push
jge
mov
stos
and
enter
push
xchg
stc
rcr
adc
sub
dec
lock
stc
pushf
adc
or
jo
lahf
hlt
adc
out
xchg
outsb
sub
stc
dec
mov
jge
mov
loope
or
ret
cmpsb
push
pop
js
sbb
jnp
stos
sarl
dec
xor
sbbl
fistpll
jb
sub
loope
lcall
xchg
pop
mov
cmp
pop
test
mov
inc
nop
jecxz
fwait
loop
cmpsl
dec
neg
add
and
adc
arpl
and
loope
jmp
mov
cmpsb
jne
movsb
push
cmp
xchg
cs
sahf
int3
cld
lahf
jp
sub
pusha
xchg
lods
pop
je
shll
xor
cmp
and
dec
or
and
lahf
jl
insl
sbb
xor
mov
inc
adc
mov
jbe
in
sarl
mov
repnz
xor
mov
out
rcr
in
pushl
sbb
mov
cld
scas
fxch
mov
loopne
dec
sub
out
mov
push
bound
adc
out
test
scas
and
sbbl
in
fistl
das
push
pop
mov
mov
icebp
mov
fs
ja
lock
push
out
adc
outsl
imulb
xchg
mov
das
lods
mov
dec
adc
lret
cmc
movsb
xchg
aaa
adc
jl
pushf
push
out
repz
in
cmpb
or
inc
scas
lret
cmp
fistl
cmp
fdiv
stc
movsb
pusha
pop
sti
movsb
push
ret
shll
mov
ja
jl
jle
sahf
add
hlt
mov
sarb
jg
rcl
cld
cmp
arpl
sbb
adc
mov
cs
cmp
jo
push
pop
fidivl
lea
push
push
dec
stos
mov
mov
add
sbb
xor
fisttps
jne
fstpt
mov
lock
aaa
mov
mov
fsubl
pushf
aas
mov
sub
adc
mov
add
mov
ss
dec
and
in
mov
mov
mov
mov
cmp
hlt
xchg
xchg
jno
adc
xor
push
or
mov
add
mov
mov
mov
mov
mov
sub
mov
lock
test
jle
and
pop
popf
sbb
repnz
jnp
cmp
mov
mov
cmp
mov
and
xchg
sub
ss
iret
mov
mov
stos
mov
adc
jno
mov
hlt
xor
mov
mov
and
jo
adc
mov
jae
jbe
je
mov
sarb
cld
mov
sub
cld
jb
notl
mov
js
ss
popa
jne
clc
mov
mov
mov
pop
xor
lods
fucomip
mov
mov
mov
sub
bnd
jl
and
mov
cmp
addl
test
sbb
mov
cmp
xor
mov
mov
jp
das
mov
ss
mov
mov
and
mov
push
fnstsw
sbb
mov
popf
mov
add
or
cli
mov
lea
das
mov
pop
cmp
jnp
add
and
xor
push
xor
enter
fldt
mov
mov
xor
pop
and
push
mov
and
cmp
loop
sbb
mov
xor
mov
mov
sti
jp
pop
and
loop
mov
mov
or
nop
ds
idivl
jp
and
or
cmp
in
xor
mov
xchg
push
lret
mov
jo
adc
and
mov
mov
jb
and
add
sub
and
mov
jg
sub
mov
mov
mov
test
and
daa
lock
js
and
orl
mov
mov
jp
add
and
xor
rcrb
and
jno
jl
add
rclb
ret
pop
mov
cmp
fwait
int
cmp
xor
mov
sbb
mov
cmp
mov
mov
es
and
mov
aas
push
cmp
ds
add
mov
hlt
mov
ss
xor
mov
fdivrs
out
cmp
mov
test
faddp
icebp
xor
mov
mov
xor
and
and
mov
mov
mov
mov
mov
hlt
mov
xor
cmp
mov
push
mov
jno
in
sub
mov
xchg
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
aas
cld
adc
add
aas
loope
sub
sbb
mov
or
repnz
jb
sub
fcoms
stos
mov
mov
imul
ds
fists
std
cwtl
dec
dec
fistpl
shll
add
push
jle
std
jp
jp
sub
xor
fsubrl
outsl
aam
ret
cmp
fs
aas
mov
pop
cld
in
xchg
jg
pop
in
popf
xchg
dec
xchg
mov
cmp
daa
call
and
add
jno
sbb
stc
ds
mov
jl
adc
icebp
in
sub
cmp
aas
mov
sbb
cmp
mull
pusha
and
xchg
pop
lea
xchg
in
pop
sub
jp
mov
mov
and
mov
push
inc
and
psubq
mov
int
dec
inc
mov
ret
xor
mov
in
hlt
stos
je
sub
mov
in
loop
bnd
mov
pop
add
adc
sub
and
scas
clc
popa
mov
mov
pop
and
cmp
xchg
cli
jmp
pop
movsb
inc
and
mov
idivb
repnz
and
or
inc
jo
xor
adc
add
loope
xor
mov
push
lret
xchg
xor
sbb
jne
add
ds
jge
gs
add
jnp
jnp
outsb
jae
addr16
test
jo
and
fdivs
popa
repnz
psubusw
pop
stos
dec
inc
and
hlt
sub
lret
repz
cmp
jle
fcomps
inc
mov
sub
sub
dec
xor
pop
cmp
sbb
imul
sub
xor
inc
sbb
cmp
fnsetpm(287
mov
xchg
cmp
xchg
jp
loop
xchg
sbb
push
aaa
dec
inc
pushf
mov
jge
push
mov
xor
sti
stc
je
inc
mov
mov
icebp
sub
test
jle
loope
shlb
xor
rcrb
and
xchg
xor
add
ret
or
and
sbb
ror
fisubrs
dec
test
jae
cs
in
xor
out
ficompl
cmp
cmp
in
pop
bound
jns
jno
mov
and
and
or
pop
outsb
mov
insl
test
push
out
int3
and
sarb
jecxz
in
sbb
dec
mov
jmp
jmp
or
loope,pt
lods
fistl
sbb
sbb
mov
scas
mov
dec
adc
lods
sahf
sbb
lret
lock
mov
cmp
and
jp
mov
cmp
sti
test
and
in
call
xchg
sbb
xor
add
xchg
mov
mov
mov
pusha
xchg
mov
lods
in
outsb
ss
push
sub
pop
jmp
xor
push
bound
cs
sti
mov
push
fiadds
fidivs
out
js
mov
stos
mov
mov
xor
lret
imul
and
mov
sbb
mov
stc
sub
lahf
mov
test
mov
adc
sti
xchg
test
jnp
fcoms
outsb
xor
cli
and
fildll
cmp
lcall
xchg
stos
mov
add
adc
aam
sub
adc
movlps
mov
mov
push
mov
adc
push
cmp
notb
mov
or
mov
pop
cli
and
pop
xor
xor
lock
daa
jl
fnstsw
lock
pushf
dec
cmpsb
mov
outsb
push
sbb
clc
je
adc
cmp
in
fsin
push
repnz
and
cld
mov
mov
inc
cmp
cmp
xchg
shrl
xor
or
repnz
jmp
xchg
jecxz
popf
adc
int
dec
xchg
push
ds
push
das
scas
stos
jle
lods
push
out
mov
mov
fdiv
cmpb
ljmp
xor
jb
xor
adc
mov
cltd
xor
aaa
fidivl
mov
add
repnz
loop
rcrb
and
mov
scas
aam
loop
dec
in
or
xchg
pop
movsl
fwait
push
sub
push
cmc
push
and
out
dec
xor
aaa
mov
cmc
and
sub
adc
mov
int3
xor
sti
cs
dec
push
in
pop
push
lods
push
hlt
shlb
xor
xor
fdivr
sub
orb
icebp
fnstenv
add
xor
xchg
idivl
jp
mov
call
aam
mov
insb
int3
jge
jo
pop
mov
sti
jno
icebp
cmpsl
sti
mov
sbb
nop
mov
mov
xor
sahf
jo
icebp
mov
fwait
iret
push
ror
xchg
lods
test
push
sub
jge
jnp
jle
orps
jno
mov
xchg
lods
pop
popf
xchg
aas
test
rclb
xor
sub
adc
jb
cmp
pop
out
aas
adc
xor
mov
cmp
ja
jle
mov
mov
mov
cmp
and
repnz
jno
js
aas
rclb
xor
push
cmp
cmp
das
sbb
xchg
bswap
dec
jmp
jbe
jmp
insb
mov
mov
ds
out
sahf
rcl
sahf
dec
mov
sbb
adc
pop
cmp
pop
xor
pop
xchg
test
lods
aaa
mov
into
adc
into
sub
cld
mov
mov
mov
adc
adc
sbb
scas
pop
test
cmp
jns
int3
fcomp
cmpsb
jl
jle
xlat
cltd
hlt
or
xor
xchg
jmp
sbb
xchg
imul
pop
mov
dec
outsl
xchg
mov
xor
dec
lret
mov
mov
incb
movsl
xor
or
dec
lret
cmp
imul
data16
fimull
xor
shlb
jg
mov
jle
mov
fidivs
jmp
sarl
inc
pop
mov
cmp
test
out
mov
adc
cmp
icebp
xorb
mov
aaa
inc
sub
xor
inc
lret
popa
inc
mov
mov
lock
loopne
imul
hlt
pop
sbb
das
cmp
dec
repnz
or
jmp
imul
fisttpl
adc
jmp
adcb
mov
sbb
scas
mov
xchg
ja
stos
jb
je
mov
daa
xor
xor
xor
mov
cmp
xor
cmp
int3
cmp
mov
mov
js
idivl
sti
mov
sbb
dec
xor
pop
std
cli
xor
fnstsw
out
cmp
push
in
dec
cmp
or
adc
lock
pop
fdivl
cmp
hlt
repnz
ds
pop
mov
cmp
mov
xchg
cmp
fdivp
pop
int3
adc
mov
xor
fmul
push
mov
adc
sbb
mov
xchg
cwtl
nop
mov
lods
jo
stc
push
test
mov
sub
jns
loope
lahf
in
lock
dec
xor
rcll
stos
stc
xchg
test
jg
mov
scas
push
cmp
adc
loopne
xor
mov
cmp
inc
cmp
jge
mov
stc
mov
jno
mov
sahf
lock
ljmp
out
ds
ret
stc
cmp
xor
mov
lcall
dec
adc
mov
imul
cmp
jmp
ret
addr16
scas
pop
cmp
inc
and
addr16
fcmovnbe
jmp
xor
arpl
sub
es
jge
pusha
pop
adc
jl
mov
cld
cmp
xor
push
add
mov
outsl
stc
scas
pop
cmp
idivl
orb
fidivrl
mov
cmp
int3
aas
bound
xchg
scas
jge
les
outsb
lods
mov
repz
and
sub
popa
sbb
xor
mov
and
cmc
mov
sarl
jb
cmp
imul
cmp
jl
loop
out
cld
xor
push
dec
xchg
dec
jmp
inc
fisubrs
fucomp
push
sbb
mov
inc
pop
aam
push
mov
sbb
adc
dec
lock
addr16
enter
mov
lret
lcall
pop
mov
jae
scas
push
jle,pt
das
lods
ja
mov
inc
push
mov
out
cmp
mov
push
leave
adc
sbb
rcr
xor
mov
popf
scas
xor
int
jb
cli
movsb
movsl
insb
in
sbbl
scas
mov
push
lods
test
mov
push
insb
mov
mov
mov
das
icebp
ror
lods
insb
mov
mov
call
fistpll
xor
adc
jno
into
int
push
imul
fnstsw
cmc
out
cmpsb
xor
fcomps
inc
call
push
jb
jle
icebp
pop
mov
mov
xchg
mov
mov
cli
push
jo
pop
or
not
in
xchg
adc
js
xor
jle
inc
xchg
loope
jle
das
mov
out
pop
push
adc
ss
rorb
sti
push
mov
std
fidivl
dec
or
sub
pop
jle
push
js
ljmp
scas
mov
mov
xor
add
cltd
cmp
push
and
sbb
mov
mov
scas
icebp
sbb
jge
sub
jle
mov
in
test
cli
jge
mov
vpsrad
push
movsl
loop
jno
jb
movsb
rclb
fdivs
sbb
sar
mov
inc
adc
fdivrs
addr16
ljmp
std
and
xor
pop
adc
xor
push
or
out
push
adc
mov
int
out
idivb
pop
push
xchg
cmpsl
mov
inc
and
wbinvd
push
inc
and
and
sbb
xor
outsb
lock
popf
push
lock
push
or
xor
inc
xchg
push
jae
inc
jbe
mov
aad
push
ret
mov
das
pand
insb
lods
jp
xor
lock
mov
test
mov
jmp
divb
push
and
sub
adc
cmp
cmp
lock
sahf
mov
lock
add
scas
push
aas
divb
mov
cmp
mov
mov
add
sub
xchg
dec
xor
add
inc
cmp
jne
and
out
addr16
mov
and
push
add
mov
mov
shr
cmp
lcall
xor
cld
aas
cld
ds
fdivp
inc
dec
mov
bsf
mov
cld
mov
mov
or
cmp
mov
into
add
jbe
and
sbb
xchg
cmp
xor
xor
fdivrs
andb
mov
sub
push
mov
mov
fdivrs
sarb
aaa
hlt
mov
stos
test
mov
ds
test
hlt
ss
jns
push
adc
adc
shll
mov
push
jg
or
mov
push
jno
pusha
in
mov
add
sub
adcb
mov
adc
repnz
jb
xor
insl
mov
fnstenv
add
pop
jmp
inc
mov
aas
and
cmp
cmp
aas
jge
jnp
negb
stc
mov
cmp
lcall
sahf
mov
adc
mov
js
jno
mov
xor
mov
adc
xor
stos
and
lock
rep
adc
stc
adc
xchg
jge
stos
lock
jae
jp
push
je
stos
stos
jne
fwait
lock
jae
mov
inc
mov
stos
shll
mov
pushf
sbb
not
jns
ret
jb
icebp
out
icebp
stos
or
add
sti
jo
jno
mov
imul
and
mov
scas
out
jle
das
pop
into
push
ds
stc
push
mov
push
mov
int
cmp
jle
insb
or
adc
sbb
shlb
jmp
mov
sbb
xor
scas
cli
jle
sub
xor
jge
clc
fdivrs
enter
stc
push
xor
loope
dec
jb
sbb
fnstcw
push
aaa
idivb
pusha
mov
sbb
inc
mov
scas
jp
add
adc
insb
fldl
sub
test
js
and
mov
movb
and
adc
incb
ds
and
stos
aaa
adc
and
adc
mov
mov
lahf
lcall
xor
icebp
inc
mov
and
mov
jg
ficoms
cmp
ret
mov
adc
mov
mov
and
aas
mov
xchg
sub
xor
cmp
stos
ss
mov
imul
mulb
adc
mov
jnp
adc
sbb
lahf
mov
and
sub
adc
mov
stos
xor
inc
inc
xchg
mov
mov
stos
add
mov
push
jno
outsl
idivb
cmp
fcoml
mov
imul
xchg
and
xchg
adc
lock
sub
adc
mov
stos
xor
mov
sub
adc
icebp
adc
mov
pop
lock
sbb
cmp
jno
adc
lock
mov
aaa
incb
stos
xor
xor
and
mov
mov
sub
adc
loope,pt
xor
xor
dec
stos
and
mov
and
xor
lock
sub
inc
stos
mov
mov
das
cmp
adc
lock
cmp
push
fwait
stos
mov
fiadds
adc
lock
mov
stos
scas
adc
sub
aaa
stos
outsb
adc
sub
mov
adc
xor
stos
mov
mov
std
adcl
lock
adc
mov
stos
xor
mov
decb
aas
lock
mov
cmp
dec
mov
lock
adc
decb
repnz
pushf
xor
cmp
adc
cmp
mov
mov
or
xor
mov
adc
lock
ds
mov
mov
fwait
adc
jnp
mov
imul
xor
xor
ret
sub
adc
sub
call
mov
fs
mov
mov
out
mov
lock
pushf
sub
adc
adc
lock
frndint
cmp
mov
mov
adc
sub
jne
mov
xor
adc
adc
imul
mov
cmp
mov
and
mov
and
mov
pop
movswl
inc
cmp
mov
mov
movzwl
mov
lgs
inc
cmp
adc
jae
lret
dec
and
mov
mov
mov
inc
ss
lret
dec
and
divb
mov
bsr
inc
cmp
mov
mov
inc
sub
pop
btr
mov
cmpxchg
inc
cmp
mov
mov
adc
inc
inc
unpcklps
mov
adc
mov
mov
hlt
mov
mov
btc
inc
cmp
mov
pop
lret
dec
and
sbbl
mov
pop
movsbl
mov
and
mov
arpl
mov
lfs
inc
mov
mov
mov
cmp
mov
mov
ud1
inc
cmp
mov
mov
hlt
mov
xor
hlt
mov
and
mov
mov
mov
and
mov
mov
mov
pop
and
mov
pop
movswl
inc
cmp
mov
mov
movzwl
mov
lgs
inc
cmp
adc
jae
lret
dec
and
mov
mov
mov
inc
ss
lret
dec
and
divb
mov
addb
cmp
push
mov
push
xor
push
xor
cmp
sub
adc
push
mov
lret
mov
ss
dec
mov
jns
mov
dec
mov
mov
and
adc
push
xor
xor
and
push
xor
xchg
xor
mov
clc
push
and
push
xor
aad
push
pop
ljmp
es
repnz
xor
and
cmp
das
ljmp
xor
dec
mov
jnp
mov
fcoms
mov
dec
repnz
push
push
jl
into
fucomp
ja
mov
xor
out
jo
js
xchg
rorl
loop
xor
mov
adc
and
cmp
aad
jg
mov
dec
popf
xor
add
icebp
loop
pusha
ds
adc
cmp
mov
icebp
mov
xor
cmpb
xor
push
call
mov
cmp
cli
outsb
xor
xor
and
loope
pop
cmp
pop
and
fidivrs
mov
sub
inc
xor
sbb
jo
jl
scas
cmp
mov
aas
sub
sbb
xor
and
pop
stc
aas
jnp
cmp
xor
and
cmp
hlt
ss
sub
aas
incb
cmp
sbb
repz
fwait
xor
cmp
aaa
pop
add
xor
jl
and
push
xorb
xor
je
aad
mov
mov
jno
xchg
pop
xor
push
std
xor
fcmovne
mov
popf
lods
xchg
xor
dec
scas
cmp
push
xor
and
rclb
mov
add
pop
xor
xor
jno
jp
push
idivb
divb
xchg
sbb
mov
ret
mov
sub
xor
push
jo
divb
outsl
daa
inc
sub
lahf
xor
psubd
mov
sbb
sahf
mov
mov
aaa
mov
sub
add
sbb
aas
xor
idiv
xchg
xchg
cmp
cmp
decb
mov
insl
adc
jno
ss
lret
js
icebp
mov
jo
fidivrs
mov
cmp
jmp
or
jp
cltd
aas
mov
dec
xor
xor
jno
lcall
jmp
jge
sarl
pop
stc
sbb
into
cmp
xor
push
sarb
jb
xor
mov
idivl
xor
pop
jne
mov
cli
cltd
mov
enter
lret
push
icebp
xchg
xor
ja
adc
xor
jmp
xor
push
cmp
ficoms
xor
negb
xor
jg
xchg
cmp
faddl
pop
xor
xor
fldenv
and
fs
inc
xor
inc
xchg
negl
mov
push
mov
dec
xor
sbb
jg
xor
or
mov
xor
cmp
jne
xor
jnp
mov
cmp
fmuls
cld
lret
lret
dec
mov
mov
fstp
push
idivb
cmp
cmp
lods
jo
push
out
aad
ds
cmp
in
xchg
decb
rorb
aad
dec
loope
xchg
bound
and
sbb
icebp
cld
xor
cld
in
and
add
mov
test
and
fucomi
inc
hlt
push
sub
push
rcrb
imul
sub
sahf
movsl
decl
pusha
test
mov
cmp
rcrb
lods
cld
and
setne
mov
and
sub
inc
add
test
sbb
cli
fdivr
jge
push
lahf
add
aam
sub
in
cmp
shlb
jge
xor
in
mov
jo
inc
adc
fwait
notb
lock
mov
sbb
or
cmp
lea
mov
xchg
mov
mov
movsl
bound
adcl
addr16
pop
add
cltd
jmp
mov
fdivrs
lcall
adc
loopne
rcll
std
std
sub
adc
pop
sub
mul
repz
mov
ds
loope
sahf
cmpsb
fcoml
movsb
imul
fstpl
imul
imul
leave
mov
mov
mov
add
xchg
or
push
xlat
jle
sub
lcall
mov
test
repnz
sarl
adc
pop
jno
push
dec
movsl
je
push
scas
adc
jmp
fldpi
add
es
repz
enter
push
adc
notl
lret
stc
xor
xchg
int3
xor
test
cmp
or
mov
jno
mov
jns
lods
cltd
jg
push
cmp
fwait
sbb
sbb
fcmovbe
jge
cmp
fcompl
add
fistpll
push
cld
popf
fnstsw
jle
mov
ficoms
lock
cld
fisubrl
jl
aad
xor
loope
enter
rcrl
nop
lods
fbld
cs
jge
mov
out
xchg
adc
das
into
rorb
lcall
js
sbb
sbb
pop
xchg
out
adc
push
dec
sbb
jl
mov
fdivs
insb
lret
adc
lods
ja
clc
cs
xor
cs
sbb
mov
jge
mov
push
pop
movsb
andl
adc
sub
jno
and
test
jl
push
adc
adc
adc
add
xchg
adc
push
mov
mov
ret
xor
out
mov
mov
xchg
mov
fldenv
xchg
jno
mov
push
es
aaa
cs
lea
cmp
test
repnz
add
sbb
mov
inc
lock
adc
lcall
repnz
add
iret
sahf
test
jns
mov
and
loop
sbb
cli
je
sbb
test
rcrb
cld
icebp
das
aam
mov
ja
dec
push
sti
xor
xchg
and
arpl
inc
aas
ds
stos
xor
jle
test
sbb
daa
adc
leave
mov
imul
sbb
stos
push
jo
add
jg
push
and
cmp
inc
mov
push
mov
inc
mov
mov
arpl
xor
roll
and
arpl
repnz
popa
adc
and
push
or
mov
inc
repnz
pop
adc
xor
call
rcl
nop
mov
cld
push
mov
jl
jge
mov
repnz
lahf
repnz
xor
cmp
repnz
inc
mov
stc
sti
push
dec
cmp
repz
or
xchg
inc
mov
adc
fisubs
aas
lock
ss
jo
and
ljmp
xchg
xorl
add
divb
mov
adc
push
imul
mov
lods
sbb
sbb
jl
cli
mov
int3
sub
scas
test
daa
jo
adc
adc
jnp
mov
shll
in
test
mov
data16
sti
cmp
shrb
xor
in
std
mov
jo
sbb
cmp
js
repnz
xchg
xchg
push
js
das
stc
je
adcb
loope
pop
xchg
and
aas
dec
adc
jnp
xor
jp
mov
nop
jp
cmp
shlb
ds
mov
pop
cmp
jg
sbb
jge
test
xlat
and
rorb
into
cmp
cld
adc
add
loopne
jl
push
mov
mov
into
jne
push
stos
std
cmpsl
pop
rcrb
and
lds
jb
mov
xor
ret
xor
add
xor
out
rcll
insb
nop
shll
xchg
pop
and
repnz
jae
cmp
mov
cmpsl
pop
pop
or
cmp
sbbb
cmp
fnstsw
pop
cmp
loope
lret
xor
adc
inc
xor
int3
mov
xor
test
cmp
xor
xor
and
pop
jno
repnz
aaa
and
push
ds
bnd
call
lods
cmp
pop
jp
int3
and
insl
sti
inc
add
jg
out
xchg
sub
sti
mov
cmc
push
lret
and
imul
ret
xchg
xor
jl
lret
push
or
inc
sub
sub
pop
jl
lcall
adc
aad
sti
mov
cmpsb
data16
js
std
mov
mov
rcr
xor
push
jg
jbe
pop
ds
dec
jns
add
adc
adc
incl
xor
into
dec
aam
cli
xor
rcll
dec
and
cmp
sti
aas
and
aas
push
add
adc
xor
jno
call
inc
inc
mov
mov
push
mov
jb
push
mov
mov
and
mov
xor
xor
sahf
sbb
inc
loopne
jbe
push
sub
test
jo
mov
mov
adc
mov
add
mov
aad
xor
mov
xor
sbb
mov
mov
push
sti
mov
jae
imul
sbb
pop
jns
test
sub
and
xor
xorb
adc
add
cli
mov
mov
lret
mov
and
push
aad
mov
in
xor
lods
out
lret
xor
stos
pop
push
clc
and
shl
faddl
mov
pop
push
xor
rolb
out
sarb
inc
xorb
inc
mov
sub
xchg
decl
cli
bound
jp
mov
jp
fnstsw
xor
cmp
and
pushl
cwtl
adc
sbb
dec
inc
mov
loope
jle
mov
add
xor
adc
xor
and
lods
das
and
ss
and
popf
clc
inc
cmp
push
cmp
dec
cmp
mov
mov
mov
fstpt
pop
xor
mov
inc
cmp
cmp
cwtl
outsb
and
cmp
mov
and
sbb
cmp
and
xor
xorb
xlat
mov
push
stos
and
jno
xorb
out
dec
xchg
inc
and
dec
xor
add
adcb
jb
outsb
and
push
mov
loope
adc
pop
loopne
add
loopne
pop
in
push
sbb
and
mov
arpl
arpl
test
xchg
popf
sarl
dec
repz
ret
shrl
scas
jmp
xor
push
mov
dec
bnd
popa
and
nop
test
jp
stc
sub
xchg
ss
lcall
aad
stc
cs
lahf
push
cmp
test
sbb
cmp
xor
shl
ljmp
xor
insb
adc
dec
xor
push
or
cmp
mov
xor
negb
cmp
es
popf
cli
aas
dec
xor
into
and
repnz
mov
jb
xor
push
mov
pushf
cwtl
xor
aas
mov
mov
mov
mov
out
loop
repz
ret
das
ds
fcomip
xor
adc
iret
cmp
jg
loope
add
sbb
mov
xor
push
adc
cmp
push
inc
imul
and
sbb
jle
int
aas
sarl
fwait
repnz
repnz
sahf
or
add
adc
shl
fidivrs
dec
cmp
and
xor
ja
ljmp
call
xchg
jae
repnz
fwait
neg
mov
xor
mov
sub
test
inc
lock
mov
mov
cld
lahf
clc
push
jne
mov
rclb
repnz
xor
mov
shlb
jg
sarl
std
repnz
jb
adc
xor
decb
push
inc
call
adc
mov
xor
dec
movsl
dec
cwtl
repnz
mov
mov
popf
mov
adc
push
mov
in
pop
jne
mov
jb
mov
into
xor
jae
jmp
mov
pushl
push
mov
pop
push
sub
sti
pop
adc
add
pop
ret
xor
dec
aad
mov
jb
dec
sub
pushl
cli
stc
das
jecxz
dec
in
cmp
jb
ret
test
aas
mov
mov
pushl
arpl
loop
aas
and
ret
and
lret
mov
mov
test
xor
call
adc
cmp
jp
xor
clc
mov
popf
ds
mov
mov
mov
mov
and
adc
in
aas
ds
aas
mov
in
repnz
sti
and
mov
xor
adc
and
mov
xor
and
mov
mov
xor
icebp
adc
lock
sarb
cmc
push
jle
push
adc
push
jbe
adc
pop
mov
cli
mov
push
xor
fcoml
out
mov
dec
pusha
ficoml
ffreep
mov
xchg
fcoml
cli
jae
xchg
gs
shll
inc
dec
fs
iret
nop
test
fiaddl
shlb
cmp
arpl
adc
cmp
notl
ljmp
xor
cmp
and
inc
inc
inc
int3
js
in
cli
gs
mov
shl
inc
jnp
fstp
jl
cld
bound
or
xor
aad
or
push
mov
jo
nop
rclb
mov
pop
stos
lcall
or
xchg
sub
jns
push
sbb
cmp
push
scas
in
jb
mov
push
repz
pop
in
xor
inc
jno
mov
xchg
sahf
push
adc
push
rdpmc
leave
gs
and
cld
std
aas
fiaddl
push
jb
std
mov
clc
hlt
cli
jp
mov
fists
rcrb
xor
mov
mov
outsl
xor
out
jb
sub
sti
sub
addr16
aas
sub
xchg
ror
lret
movl
push
cli
stc
xchg
shll
sbb
sub
jp
cmp
nop
bound
stc
flds
adc
fidivl
bound
test
xor
xchg
loope
mov
clc
and
mov
pop
and
mov
cltd
pop
cmp
jno
cld
bound
scas
xchg
test
mov
jae
mov
outsb
push
add
les
xlat
mov
js
mov
mov
jle
in
clc
out
shll
adc
cli
lahf
adc
push
push
jge
cmp
inc
rolb
test
out
rcrb
adc
fsubrp
hlt
and
scas
adc
or
mov
or
out
fistpll
int3
push
lret
xchg
test
xchg
pop
test
mov
int3
dec
jle
xor
cwtl
lahf
adc
or
sarl
xchg
iret
cld
adc
out
lods
lcall
gs
mov
mov
dec
popf
sbb
push
jp
pop
out
sub
sub
mov
jb
ror
arpl
inc
xor
sub
pushf
push
cmp
mov
xchg
mov
xorb
test
jb
pop
test
mov
cltd
aas
iret
mov
mov
fisubrs
fcoms
clc
std
mov
xchg
fidivrl
sub
cld
loop
js
pop
jmp
cmp
nop
jae
pop
stos
jb
shrb
add
adc
mov
sbb
hlt
jb
xchg
mov
xor
xchg
xchg
adc
cmp
or
or
or
shll
repnz
loop
xor
mov
mov
push
aaa
mov
ss
dec
dec
mov
push
sub
xchg
idivl
sbb
lock
inc
mov
mov
dec
push
pop
mov
in
jl
outsb
pop
cmp
fstpt
mov
inc
dec
shll
cmp
lret
jl
mov
adc
mov
sbb
cmp
das
lock
mov
adc
imul
sbb
fnstsw
cld
adc
stc
mov
cmp
nop
cmp
push
mov
mov
icebp
add
pop
roll
mov
ret
icebp
dec
stos
shlb
mov
xor
loop
sbb
adc
stc
sbb
xor
shlb
xor
jbe
jb
loop
xor
xor
inc
mov
xor
add
xor
inc
ret
mov
add
stos
push
data16
shrl
mov
push
test
into
mov
stc
icebp
lahf
bnd
sbb
fsubl
cmp
push
mov
cwtl
stos
in
add
mov
sbb
pushf
adc
js
repz
bound
inc
cmp
jnp
adc
inc
mov
mov
mov
and
jb
mov
add
sbb
test
sar
xor
fcomps
and
icebp
or
int3
mov
cmp
push
icebp
inc
mov
xchg
mov
fadds
fst
cmp
cmp
fsubs
or
mov
orb
jb
adc
mov
cli
test
push
adc
add
stc
and
xor
cmpl
mov
sub
push
sbb
movsl
ret
aas
pop
loope
hlt
and
int
lret
push
lock
inc
clc
xchg
xchg
pop
xchg
stc
xchg
jns
clc
jnp
jns
lock
es
or
mov
nop
sarl
popa
andb
dec
and
test
loopne
je
cmp
cld
adc
sti
loop
xor
mov
cmp
fnstcw
repnz
cltd
sar
cmc
hlt
inc
lret
mov
xor
in
call
movsb
xchg
mov
pop
mov
push
sub
clc
xchg
adc
pop
xor
mov
jbe
mov
jb
idiv
mov
add
icebp
repnz
push
mov
mov
mov
into
and
aas
in
mov
push
xchg
cmpsb
push
aas
psrld
stc
lahf
pushf
subb
cmp
cmp
jle
jl
sbb
and
aas
push
into
jo
stc
scas
adc
ds
pop
stc
and
mov
inc
sub
nop
mov
cmp
ss
xor
inc
stos
pop
clc
pop
lret
mov
stc
xor
jns
mov
push
inc
adc
jns
mov
sub
imul
mov
into
adc
xor
jb
rep
pop
mov
adc
push
lret
mov
or
iret
fsubrp
ret
inc
mov
shlb
inc
mov
cmpsb
cwtl
lcall
loop
push
push
mov
jo
shll
or
inc
inc
cld
mov
into
jo
xor
sti
mov
ret
mov
cmp
adc
mov
dec
cmpsl
sub
clc
clc
cmpsb
and
xor
mov
push
imul
xrelease
push
or
mov
scas
repz
repnz
aas
movsb
fdivl
mov
mov
mov
and
cmp
sbb
jae
inc
inc
les
lods
adc
lahf
repnz
fdivrl
test
push
lods
sahf
loopne
in
icebp
pushl
pop
sbb
rolb
xchg
cmp
pushf
sub
pop
xor
and
stos
aas
pop
cli
jno
nop
inc
les
in
push
lock
movsl
sbb
cmp
rorl
mov
pop
or
jo
jns
inc
mov
fcmovnbe
jae
shlb
mov
adcl
push
cltd
cmp
cwtl
aad
daa
mov
cmc
aam
mov
or
mov
push
das
ja,pt
sbb
in
fdivrl
push
insb
mov
sbb
clc
sbbl
mov
dec
in
cmp
rorb
mov
ret
mov
push
mov
ret
cli
add
and
xchg
outsb
xchg
in
cltd
pop
pop
or
adc
repz
adc
cmp
sbb
inc
mov
out
gs
mov
mov
hlt
xchg
into
mov
cli
sbb
popf
push
push
xacquire
cmp
js
cwtl
js
sarl
cmpsl
rolb
cmp
jl
hlt
dec
cmp
xchg
xchg
subb
xchg
adc
push
jecxz
jmp
cmc
cmp
cmc
xor
jg
loope
dec
sti
rcll
xchg
lods
xchg
fbstp
bound
in
std
mov
rcrl
mov
imul
inc
add
subl
mov
add
fs
mul
sub
in
aaa
gs
cmp
inc
es
sti
or
into
js
mov
adc
mov
sub
xchg
push
add
inc
and
ljmp
repnz
fldcw
dec
aad
call
pop
mov
sti
repz
sbb
stc
xor
das
mov
sbb
mov
pusha
ffreep
dec
xchg
shrl
icebp
scas
pop
addr16
test
mov
mov
pop
sarl
push
adcb
adc
jns
push
adc
shl
cs
jns
adc
or
xor
fcomps
push
xor
js
mov
inc
fbld
outsl
lods
aaa
mov
inc
sbb
stc
sarb
xchg
ret
nop
lea
add
mov
cwtl
test
mov
ret
lret
mov
icebp
xchg
aas
push
cmp
sbb
xor
mov
cmp
sub
push
pusha
xchg
xchg
pop
cltd
pop
jmp
in
daa
sub
jmp
dec
sti
add
js
mov
inc
pop
addb
mov
aaa
fs
xchg
mov
data16
push
sbb
icebp
fnsave
movsl
fs
mov
adc
popf
sarb
fwait
aam
sub
xor
mov
xlat
jge
dec
std
dec
push
inc
imul
jmp
outsb
fistl
popf
cmc
xor
mov
cwtl
mov
sti
mov
shlb
lods
sti
xor
cmp
xor
pop
inc
sahf
orb
push
push
rol
popf
mov
jb
sbb
dec
xor
xor
sbb
inc
mov
mov
mov
mov
inc
cs
loop
std
in
mov
jp
lock
sbb
idiv
sbb
jb
movsl
xor
pop
mov
push
mov
rclb
aas
ds
xchg
ret
xor
xor
popa
test
pop
idivl
mov
xchg
push
cmp
pop
sub
adc
shlb
pop
jb
inc
iret
fwait
imul
iret
imull
ret
pop
dec
add
nop
popf
stos
rolb
insl
shl
sub
push
mov
push
pop
int3
xchg
dec
adc
pop
jbe
cld
loop
sti
xor
out
push
mov
jo
test
pop
popf
xchg
mov
push
repnz
push
clc
ficomps
ret
lcall
xor
mov
frstor
mov
rcr
repnz
cld
mov
xchg
ds
jbe
push
mov
xlat
ret
in
lock
pop
repz
mov
imul
inc
xor
lock
push
cmp
ds
in
sub
repz
mov
shlb
cmp
rol
pop
movsb
jle
dec
push
in
into
and
dec
mov
lods
mov
mov
call
jbe
mov
or
shll
shrb
lock
testb
inc
xor
inc
sti
das
push
adc
or
loope
mov
sbb
xchg
jle
cld
mov
push
xor
xor
call
imull
loopne
push
mov
mov
bnd
sub
sti
mov
scas
sarb
xchg
mov
push
mov
mov
icebp
ss
cwtl
sub
jns
fisubrs
adc
aam
pop
rol
mov
jb
pop
cmp
inc
cmpsb
pop
xchg
pop
cmp
pop
push
aas
call
xorb
clc
sbb
cmpsb
mov
push
call
mov
scas
xor
dec
cwtl
cmp
out
bndstx
pusha
sti
xchg
std
push
push
cmp
xchg
fcomps
sbb
dec
call
rcr
mov
adc
add
cmp
push
mov
shrb
aas
xlat
push
loopne
shll
lods
xchg
fsubrp
loopne
adc
and
xor
xchg
call
sub
mov
es
inc
xchg
into
push
cmc
cmp
xchg
push
lcall
repnz
xchg
cmp
stos
adc
int3
sbb
mov
add
in
adc
push
sar
jno
inc
mov
xor
push
jecxz
pop
xor
xchg
das
ret
mov
inc
xor
push
jb
adc
sbb
jbe
mov
outsb
adc
jae
enter
lret
adc
lcall
xor
xchg
lret
int
cld
push
add
popf
cmp
xchg
sarl
test
xchg
pop
pop
shl
cmp
clc
test
pop
icebp
mov
enter
push
push
lods
js
imul
mov
mov
subl
aad
ret
fsubl
enter
xor
enter
adc
cmpsb
mov
sub
ds
xor
ljmp
stc
shrb
test
push
or
movsb
mov
aas
fsts
cmp
incb
js
jp
icebp
outsb
mov
sbb
mov
outsb
pop
inc
mov
sbb
mov
mov
sbb
into
test
sbb
lods
incb
cmp
xor
xor
pop
sti
pop
pop
sar
xor
sahf
jmp
leave
repnz
fcoms
fdivrp
jmp
imul
xchg
call
sahf
mov
jle
nop
pop
pop
outsb
pop
push
testl
mov
cmp
pop
sarb
cld
ds
add
mov
ds
xor
push
adc
xor
cmp
lock
int3
mov
mov
orb
jnp
inc
mov
cmp
pop
ljmp
xchg
jle
ficomps
fs
mov
out
faddl
out
push
pop
mov
std
add
jnp
imul
enter
jno
ret
pop
inc
jb
xor
mov
pop
aas
repnz
sub
fcmovnbe
repnz
dec
repz
mov
and
jb
fisubs
repnz
and
adc
xchg
xlat
cmc
rep
mov
push
fidivrs
pop
hlt
adc
adc
pop
push
xor
sbb
lock
lahf
sahf
out
cwtl
sbb
push
mov
fstpl
mov
mov
aas
dec
xchg
std
mov
fisttpl
adc
xor
mov
push
call
and
pop
adc
xchg
icebp
push
sbb
jge
push
shl
cmpb
adc
sarb
jno
mov
cli
mov
in
xlat
rclb
or
dec
in
shrb
xor
pop
mov
rcrb
and
loopne
fdivr
jg
dec
xor
push
lahf
scas
adc
xchg
pop
mov
sub
dec
scas
push
nop
xor
es
sub
jg
xchg
std
push
divb
pop
rcll
aad
push
xchg
in
out
pop
cmpsb
fistl
cli
das
adc
cmp
ficomps
lcall
mov
popf
xchg
add
adc
fsubrp
pushf
sub
or
cld
fdivrs
sbb
fisubs
sbb
cmp
pop
or
ss
js
test
xchg
fidivrl
in
or
fdiv
mov
fnsave
arpl
sbb
xchg
dec
rcrb
rcr
stc
push
rorl
mov
sar
fimull
and
ja
es
pop
mov
adc
mov
adc
aas
and
lret
adc
icebp
xchg
xchg
xor
fsubrl
repnz
fnsave
jns
mov
pop
jb
mov
mov
mov
push
test
ja
fldenv
jno
dec
xchg
cwtl
jbe
in
inc
pushf
jecxz
and
mov
scas
popa
dec
fcmovne
mov
add
cmp
in
jmp
mov
shll
cmovs
aaa
cs
pop
pop
add
fldenv
arpl
cmp
jo
jnp
jecxz
sbb
int
fcomp
cld
and
fidivrl
jne
dec
push
mull
mov
or
adcb
std
ss
enter
loope
inc
cs
cltd
and
push
insl
push
shlb
scas
inc
pop
jns
dec
cmpsb
mov
push
dec
and
jb
fdivrl
push
rclb
in
das
int3
int
mov
addr16
jno
xor
jecxz
nop
jle
push
and
cmp
mov
jl
and
jae
lods
nop
out
sub
leave
push
xchg
outsl
lea
enter
lds
jae
repnz
dec
aad
mov
xchg
cmp
sbb
and
ret
and
dec
imul
dec
scas
ja
push
push
mov
sub
stos
sti
push
mov
mov
mov
adc
clc
pop
cld
test
aad
jmp
add
das
sbb
idiv
testb
inc
aad
mov
sbb
push
sub
ds
push
notb
mov
xchg
std
in
xchg
jbe
lock
mov
jmp
sarb
mov
push
fimuls
and
int
cs
jge
in
jne
ds
incl
repnz
and
dec
mov
mov
and
stos
xor
stos
mov
mov
mov
ja
mov
mov
aad
mul
icebp
cld
loop
mov
shlb
clc
xor
incl
cmp
mov
and
xor
std
cmp
jno
jb
stos
hlt
and
xor
sti
mov
and
xor
xor
mov
and
stos
mov
jge
adc
adc
add
mov
icebp
and
xor
xor
mov
adc
adc
xor
jo
xchg
cmp
adc
xor
cli
mov
and
xor
push
adc
inc
clc
mov
adc
adc
and
mov
adc
divb
mov
adc
xor
aas
lock
jno
sub
adc
adc
xor
mov
sub
cmp
repnz
xor
adc
repnz
lock
mov
je
je
inc
mov
mov
hlt
pop
aas
movsb
icebp
xor
mov
adc
fnstenv
sub
icebp
cmp
jbe
mov
cmc
insl
mov
out
lret
mov
mov
mov
mov
mov
lret
mov
jae
mov
adc
inc
mov
loop
fistpll
test
mov
push
jb
cmc
jnp
sbb
lcall
lock
xorb
mov
and
sbb
dec
cld
cwtl
jbe
out
mov
icebp
adc
test
and
stos
mov
decl
js
fidivs
jl
into
xor
xor
repnz
cld
mov
sbb
loope
mov
xor
push
filds
repnz
bnd
iret
mov
mov
xchg
cld
and
cld
cmp
scas
mov
pop
cmp
mov
mov
rcrl
in
gs
cmp
sbb
mov
mov
cmp
cld
clc
pop
imul
cld
in
aaa
and
pop
mov
outsl
cld
jno
mov
xchg
dec
and
incb
out
popa
lahf
pop
mov
cld
movsl
xor
ds
ss
das
filds
clc
nop
fsts
stc
mov
xchg
jl
cld
jo
fwait
daa
push
inc
cld
stc
jb
icebp
andb
xchg
cli
cld
mov
addb
stc
mov
daa
dec
cld
hlt
cmpsb
int3
cmp
jae
fisttpll
mov
push
iret
and
daa
sahf
cld
push
cmp
nop
stc
bound
movsb
push
test
out
mov
mov
rcrb
lds
mulb
xor
js
pop
into
je
mov
adc
xchg
mull
fnstsw
cmp
mov
mov
hlt
push
out
popf
aaa
mov
es
mov
cmpsb
adc
cmp
cmp
mov
mov
jns
shll
mov
jb
mov
push
addr16
cli
call
icebp
or
stos
inc
cld
cs
jo
mov
cmpsb
dec
aaa
das
add
jle
mov
enter
push
sub
mov
adc
aas
xchg
cmp
loop
mov
cmp
xor
pop
fnstenv
cmp
adc
sub
jo
jl
adc
cmpsl
shl
aaa
dec
mov
or
xor
loop
aas
add
stos
xor
decl
cmc
cld
adc
out
xlat
push
out
jo
incb
lcall
mov
mov
xor
mov
mov
mov
mov
ljmp
jbe
lea
daa
cmp
mov
std
push
iret
mov
cmp
add
jle
nop
cmp
mov
fisttpll
mov
cmp
cmpsb
xchg
daa
mov
cmp
mov
add
mov
and
sahf
cld
push
jle
mov
cld
je
pop
into
std
adc
xor
movsb
push
loope
push
pop
mov
leave
cld
ss
scas
jne
call
push
inc
bnd
sub
add
cmp
mov
lock
xchg
mov
inc
jle
repnz
mov
mov
pop
stos
popa
xor
div
or
push
mov
cld
jg
jle
and
mov
sarl
sbb
js
cs
mov
stos
sti
sub
hlt
jle
or
daa
push
in
lods
add
and
jle
mov
cld
push
xor
lock
xor
mov
loopne
add
mov
mov
pop
out
popf
inc
mov
mov
cmp
push
cmp
clc
cmp
dec
add
stc
cld
mov
mov
nop
cmp
inc
mov
mov
cmp
push
cmp
mov
cmp
adc
mov
mov
sbbl
mov
and
and
std
mov
mov
stc
bnd
xor
cmpb
xchg
xor
sub
and
repnz
cmp
aas
outsb
stc
mov
sub
cmp
cmp
cli
testl
fildll
cmp
mov
insb
dec
mov
repnz
dec
mov
cmp
aaa
loope
push
cmpsb
out
and
shlb
loope
mov
xchg
daa
mov
xor
inc
xor
cmp
mov
mov
cld
push
xor
xor
cld
into
mov
mov
add
mov
sub
mov
adc
out
ret
int3
adc
testb
hlt
cmp
lock
jge
jno
sbb
mov
mov
cld
cmp
mov
mov
sti
xor
cmp
xor
adc
out
rcll
xor
clc
dec
mov
imul
mov
testb
fidivrl
clc
cld
mov
xor
xor
loop
mov
stc
xor
sti
movsb
xchg
push
cmp
jle
xor
ljmp
cmp
xor
mov
mov
ljmp
mov
insl
loop
ljmp
clc
shll
push
jne
mov
cld
xor
or
aaa
mov
stos
mov
cld
cld
mov
jo
pop
js
mov
push
mov
jbe
and
daa
cmp
jg
mov
and
loop
sub
mov
hlt
jo
mov
ja
sub
jp
div
mov
mov
jne
neg
cld
ds
clc
fstpt
xor
stos
pop
sarb
jl
ljmp
cld
ja
das
filds
clc
mov
test
clc
ljmp
call
mov
mov
dec
push
mov
divb
ja
and
cwtl
lock
ja
enter
and
ret
jns
stc
aas
mov
pop
clc
cld
aas
icebp
mov
jno
pop
out
adc
cmpsl
mov
jle
jae
int3
sarl
movzwl
push
cmp
mov
mov
ds
or
sub
cld
mov
movsl
or
cwtl
mov
mov
shlb
cld
jge
dec
out
or
mov
repz
add
adc
sti
adc
iret
push
imul
inc
mov
cld
adc
jnp
ret
adc
movsb
xchg
or
cld
aaa
sbb
scas
js
and
daa
call
lock
fdivr
add
mov
notb
stos
movsb
xchg
or
repz
xor
lock
push
cmp
xchg
push
and
xor
sbb
jno
xchg
push
and
ret
cld
fdivl
pop
fldenv
sbb
mov
cmp
mov
cmp
ret
mov
pop
sti
daa
jmp
stos
pop
repnz
or
xor
mov
adc
cld
adc
push
imul
adc
jnp
push
loopne
test
push
adc
leave
nop
mov
loop
sbb
add
jo
xor
insl
and
jg
mov
andb
cld
push
xor
push
cld
xor
mov
mov
xor
xchg
pop
mov
pop
jle
push
mov
mov
mov
cmp
cmp
mov
std
cld
mov
and
jg
fdivr
and
aas
enter
sbb
je
cmp
mov
mov
cmp
rclb
xor
mov
add
sub
and
adc
mov
mov
jp
cmp
ret
mov
cmp
mov
xor
aas
subb
mov
sbb
lods
aaa
ja
ljmp
cld
adc
sub
and
sahf
mov
popf
cld
sahf
cmp
loope
mov
jne
bsf
adc
cld
jne
fnstenv
lcall
xchg
cmp
jbe
jl
or
insl
jo
xchg
sbb
jae
mov
xchg
jo
cld
mov
mov
pop
lock
pushl
ljmp
cld
jle
and
jg
mov
cmpsb
out
aas
in
dec
inc
cld
mov
jns
xor
cmp
and
out
mov
jo
mov
daa
push
push
mov
adc
cmp
cld
cmp
ss
mov
sbb
testb
clc
adc
push
cmp
mov
loop
mov
mov
jne
mov
adc
xor
cld
cld
jle
xchg
mov
ss
rclb
fstps
rclb
shr
adc
xor
loop
dec
leave
hlt
mov
std
jge
lock
mov
xor
jb
inc
sarl
and
sahf
mov
mov
cli
mov
jle
push
xor
mov
cld
jbe
and
sbb
movsb
pop
nop
ja
rclb
cli
mov
repz
mov
jge
push
jbe
nop
lods
cld
pop
jne
mov
cmp
jo
jno
cmpsb
and
mov
mov
scas
xor
xchg
cmp
cld
mov
push
cmp
mov
scas
out
clc
cmp
xchg
js
into
cli
adc
xor
cwtl
mov
mov
and
xchg
lcall
call
cld
shlb
jge
negl
icebp
jb
pop
push
jae
in
rcrl
and
jbe
pop
and
lods
dec
cld
mov
xchg
sbb
adc
mov
cmp
mov
cli
bound
xchg
xor
and
daa
movsb
mov
cmp
adc
dec
jb
cmp
mov
sub
jle
cmp
dec
daa
enter
scas
leave
mov
sbb
mov
xchg
out
dec
mov
mov
cmp
push
xor
fdivrl
and
mov
cli
adc
divb
cmpsb
sub
fxtract
dec
mov
mov
mov
leave
or
aaa
rorb
jbe
out
jbe
cmp
mov
gs
or
push
and
outsb
sub
inc
and
sub
incl
pop
sub
jno
lcall
cmp
sbb
or
scas
testl
add
fldt
sub
push
cmp
sbb
pop
add
xor
mov
dec
sub
inc
cmp
sti
push
cmp
neg
sub
mov
sub
adc
lock
sbb
mov
mov
cmp
jne
and
in
adcl
mov
aas
sarb
sbb
mov
testb
jl
cmp
sbb
lock
mov
cmp
fnstenv
mov
clc
mov
mov
into
testb
push
lret
cmp
xor
call
xor
add
add
hlt
and
jb
in
sub
mov
mov
mov
jnp
lcall
xor
mov
lcall
mov
je
jg
shl
fs
push
jne
xlat
mov
repnz
mov
pop
mov
xlat
mov
jbe
stos
sbb
xor
cmp
fstl
jne
xlat
mov
mov
add
adc
fadds
pop
into
enter
sbb
pop
push
cmp
je
stos
cwtl
inc
xor
icebp
adc
sub
adc
lahf
loop
stos
push
xor
and
adc
pop
xor
add
pop
shll
mov
mov
mov
shrl
adc
pop
cmp
stos
testl
dec
mov
xlat
dec
sub
aas
add
dec
mov
mov
mov
ret
push
xorl
ficoml
xor
mov
clc
mov
jo
aam
imul
mov
mov
adc
mov
repz
add
adc
jmp
lock
mov
jno
mov
out
pop
out
cli
outsl
ja
fidivs
cmp
push
and
add
aas
subb
mov
mov
mov
mov
sbb
cld
mov
sub
xor
mov
jl
mov
ds
adc
imul
jns
xor
sub
jae
mov
adc
xor
std
mov
imul
popf
jbe
in
mov
add
cmp
xlat
mov
jp
aaa
sub
sub
xchg
out
dec
sahf
mov
push
aad
in
adc
stos
mov
jno
fdivl
lock
cmp
mov
adc
into
shl
mov
shlb
mov
add
rolb
sti
mov
mov
pop
mov
jg
mov
xchg
std
mov
cmp
xor
jne
mov
inc
add
mov
mov
mov
fsubrs
stc
jg
lcall
xor
xlat
mov
sarl
dec
mov
int3
mov
jge
inc
adc
adc
lock
imul
js
xchg
fdivl
adc
repnz
enter
fmulp
jbe
and
cmp
fcoml
inc
push
xchg
xor
xor
loopne
stc
loope
mov
in
mov
mov
sub
stos
lods
and
mov
repnz
mov
xor
ss
mov
xor
jae
mov
xor
jno
mov
jb
aas
mov
push
mov
cmp
jbe
lret
je
and
mov
icebp
xor
loope
mov
add
push
sub
lcall
mov
sbb
cmp
mov
aas
inc
pop
mov
jg
ss
mov
adc
mov
mov
xor
sub
cmp
and
mov
adc
ss
aas
add
mov
stc
into
nop
cli
aaa
cmpb
stos
clc
outsl
fstps
shlb
or
pop
and
jb
scas
into
repnz
push
loop
push
sub
test
mov
mov
jo
or
jb
bound
push
xchg
inc
jns
xor
in
adc
add
cmp
adc
push
psrlw
and
sub
popa
fnstenv
scas
push
mov
aas
cmp
xor
and
mov
lock
loopne
jb
lret
adc
push
push
mov
stos
addb
hlt
pusha
jg
lret
cmp
fnstenv
and
mov
call
lea
mov
sti
cld
dec
jl
adc
push
xchg
sbb
pop
lods
stc
out
sbb
jmp
xor
scas
xor
pop
xor
mov
mov
cmp
cmp
sub
test
cmp
movsl
sub
jg
xor
and
pop
stos
dec
and
sub
js,pn
ret
mov
arpl
and
clc
dec
adc
mov
xor
adc
mull
scas
mov
jecxz
mov
cli
sub
test
push
divl
mov
pop
icebp
jb
and
stos
testl
sub
iret
mov
jle
repz
mov
imul
push
mov
mov
cs
lahf
xorl
loopne
jbe
jbe
notl
jne
pop
je
cmp
sub
cmp
sub
cmp
icebp
jg
xor
cmp
mov
sub
cmp
mov
xchg
and
xchg
cs
pop
cmp
mov
sti
xor
jl
mov
scas
cmp
mov
push
and
sub
jae
and
mov
mov
xor
ret
push
cmovl
or
and
mov
fstpl
sub
cmp
dec
pop
sti
xchg
xchg
mov
sti
sti
add
pop
call
fisubrs
jnp
inc
mov
rcrb
icebp
mov
sbb
in
jbe
sti
mov
imul
int3
pop
mov
pop
inc
sahf
inc
imul
mov
pop
stc
mov
jecxz
mov
or
ja
sbb
mov
call
sub
xchg
aaa
adc
cwtl
push
insl
std
sarl
int3
call
mov
sbb
in
cmp
adc
mov
aaa
xor
jle
aaa
icebp
pop
push
bnd
and
test
jno
nop
mov
icebp
loop
mov
hlt
sub
mov
fsubrs
in
sahf
dec
shl
into
jne
push
mov
sub
sub
aas
mov
add
sub
pop
sbb
mov
dec
ds
dec
inc
scas
dec
imul
pop
sti
sub
icebp
mov
out
aas
loope
jl
sbb
mov
data16
imulb
pushl
mov
inc
adc
aam
lret
loope
into
push
orl
mov
jns
mov
jg
popf
or
dec
mov
xchg
cmp
lock
test
pop
sti
xor
js
les
or
mov
jle
dec
jl
ds
mov
fs
loop
push
adc
xorb
mov
icebp
mov
push
enter
or
mov
xor
mov
pop
adc
inc
jp
mov
ret
adc
sarl
data16
or
xor
mov
mov
in
add
int
push
sub
mov
xchg
push
ja
cmp
fadds
add
mov
ljmp
daa
stc
jg
mov
lret
sub
cmp
daa
xor
mov
mov
adc
fimull
inc
outsl
xorb
loope
scas
adcl
pop
les
js
cmp
sahf
xchg
pop
stc
and
jge
xchg
jns
lea
mov
jbe
cmp
adc
ljmp
pop
imul
inc
jns
rorl
in
outsb
cwtl
shlb
repnz
xor
scas
lock
and
inc
ja
mov
std
lret
lock
into
cmp
inc
out
aas
xlat
sarb
jns
mov
mov
pop
xorl
jmp
outsl
ds
in
or
mov
mov
icebp
aas
loopne
loope
xor
js
lcall
cmp
cmp
pop
mov
cld
lods
data16
mov
dec
pop
std
pushf
loopne
lods
icebp
mov
sar
fadd
scas
pop
xor
cmp
icebp
icebp
mov
jbe
insl
or
mov
cmc
rcrl
lods
inc
xchg
push
arpl
fadds
push
mov
cmp
into
movsl
pop
push
cmp
mov
or
rolb
cld
popf
clc
test
fwait
ds
mov
adc
in
xchg
mov
mov
aas
pop
jg
add
xor
cmpl
das
mov
lock
mov
mov
sbb
sbb
lret
cmp
cmp
popa
mov
in
push
loopne
rcrl
adcl
icebp
jo
movsb
push
cmp
lret
and
pop
pop
scas
into
cld
insb
insl
mov
inc
daa
inc
adc
jno
push
mov
lret
xor
aaa
xor
pop
call
xor
adc
mov
fidivs
enter
popf
mov
cmp
mov
notb
dec
lret
sub
push
adc
sbb
push
scas
stc
jmp
enter
push
mov
cld
rcrl
jo
fstpl
mov
xor
and
shrb
js
mov
shll
addb
jl
fwait
mov
cld
shrl
jp
scas
shl
mov
jge
lcall
sar
andl
mov
cmp
daa
mov
outsl
pop
and
repnz
div
divb
jb
and
sahf
add
xchg
and
jne
push
jo
hlt
das
pop
jo
int
xorb
fdivrs
ret
scas
repz
shlb
das
adc
jle
adc
mov
mov
mov
rcll
and
add
cmp
les
push
jle
mov
mov
nop
fdivrp
cli
rcll
in
xor
js
mov
xchg
sub
xor
das
mov
std
cmp
push
xchg
rorb
lahf
add
clc
ds
pusha
or
jmp
imulb
repnz
lock
cmpsl
xor
aaa
xor
push
lcall
ds
adc
inc
jne
movsb
aas
jle
cmp
scas
inc
add
outsb
mov
mov
rcll
in
clc
jb
pop
lods
insb
or
mov
xchg
xor
fld
mov
pop
nop
or
cmpsb
xor
aas
pop
xor
fld
adc
xor
adc
test
mov
popa
xchg
hlt
cmpsl
aaa
icebp
ja
std
xchg
inc
jno
loopne
int
jge
jno
pop
imul
sbb
mov
out
mov
xchg
add
jl
icebp
xor
ljmp
int
xor
cmp
fidivs
icebp
mov
sarl
inc
pop
lock
ficoml
lods
and
shrl
lcall
sub
sti
mov
mov
mov
out
mov
notb
lret
mov
xor
test
jle
adc
fwait
decb
cmp
scas
adc
mov
pop
out
das
or
mov
mov
xor
mov
and
ss
jns
mov
jl
shl
mov
bound
and
sbb
cld
test
repz
jle
lret
insb
movsb
add
mov
mov
jg
add
icebp
inc
sub
call
and
mov
sub
pop
jmp
divl
out
adc
pop
mov
jp
and
not
xor
push
or
in
icebp
mov
jge
bound
dec
xchg
mov
mov
adc
and
decl
jecxz
xchg
mov
cmc
xor
pop
xor
adc
lret
cwtl
icebp
xchg
cld
divb
rorb
mov
scas
pop
xchg
fildll
cli
bound
mov
call
repnz
xchg
cld
loop
xor
icebp
pop
out
xchg
cltd
jnp
cmp
mov
pop
icebp
jbe
je
fmulp
inc
int
out
mov
repnz
sub
and
cs
sti
mov
cmc
testb
cmp
push
mov
xor
sbb
dec
negb
call
sub
repnz
test
and
jno
xor
out
gs
jle
cmp
or
ds
fidivrs
fdivrs
cmp
mov
les
jmp
and
nop
jmp
repnz
add
jb
xlat
sti
leave
xchg
xor
or
repnz
mov
lock
mov
lock
cmp
lock
lods
mov
popf
xor
xor
xor
push
xor
sub
and
nop
adc
xor
cmp
xor
lods
pop
xor
jge
lods
int
jl
xor
push
push
aas
or
cmp
mov
jnp
jl
lock
repz
js
dec
lock
jae
push
or
mov
out
and
ljmp
sbb
xor
xchg
jno
jl
insb
push
mov
inc
cld
clc
mov
ljmp
lcall
lods
popf
cli
lods
jne
adc
mov
dec
icebp
repz
bound
mov
jno
xchg
icebp
mov
subb
test
lods
cmp
ss
stc
mov
push
jge
idivl
icebp
sahf
mov
aas
push
jb
xor
ljmp
divb
add
xorb
scas
adc
mov
mov
hlt
loope
jo
out
out
loopne
jo
cmc
xor
jo
push
add
aaa
jnp
lret
scas
stos
mov
xor
test
mov
lahf
stc
adc
xor
lock
cmpb
adc
pop
pop
hlt
pop
dec
dec
stos
out
mov
pusha
xor
xchg
stos
cmp
pop
fldt
imul
jge
orl
jno
lock
inc
xchg
sub
fs
outsb
mov
sbb
fdivrs
sahf
jb
mov
xor
cmp
or
jnp
mov
in
mov
cmc
xor
lods
dec
push
xor
and
and
incb
cmp
pusha
xor
lock
idivl
xchg
add
call
sahf
fwait
jo
das
jae
stc
mov
mov
fdivs
inc
pop
test
aas
push
ss
lods
lods
xor
testl
jle
or
aas
jno
sub
mov
pop
in
or
negb
add
and
pop
sbb
lock
ss
xchg
lock
icebp
mov
pop
xor
jbe
shll
push
fdivp
mov
pop
cmp
int3
dec
jmp
bound
fdivrs
xor
mov
mov
jl
outsb
push
int3
aas
xor
inc
cli
mov
add
xchg
addb
and
loope
adc
jmp
repz
clc
mov
movsb
lock
pop
test
pop
mov
ljmp
insb
xlat
stos
jnp
pop
aaa
out
mov
cld
cmc
sbb
lock
sub
jno
stc
stos
jno
arpl
jle
stos
mov
xor
xchg
mov
movsb
fisubrl
adc
cs
and
mov
add
popa
xor
das
mov
push
push
mov
incb
insb
stc
mov
repnz
jmp
jl
lea
pop
dec
stos
fdivr
lret
jo
aas
jecxz
cmc
add
dec
push
sbb
or
xchg
xor
jp
hlt
xor
idivb
pop
sub
fmull
pop
pop
jbe
xor
test
lds
jbe
popa
inc
and
dec
push
push
cmp
and
jle
in
jle
decb
stos
mov
loope
cld
xchg
scas
fdivrl
mov
mov
xor
std
sub
and
in
in
dec
icebp
cld
mov
repnz
notb
scas
jno
mov
out
xor
sub
inc
adc
negl
and
sub
pop
sub
aas
jno
ds
xor
in
and
adc
jne
cmp
adcb
int3
shl
lock
sbb
cmp
mov
mov
adc
push
sahf
push
fidivs
subb
sub
mov
dec
mov
cmp
outsl
mov
fcmovne
mov
cltd
cmp
aas
stc
mov
pop
jno
sbb
mull
mov
int
std
negb
jno
sarl
jle
dec
mov
jg
mov
cmp
dec
push
fbstp
stc
xor
loope
cmp
call
ret
popa
mov
pushl
loop
dec
test
aaa
adc
mov
cmp
dec
int
out
shll
add
adc
test
mov
mov
ja
mov
iret
mov
fidivrs
and
fdivp
inc
adc
add
push
shrl
daa
mov
xchg
cmp
add
add
mov
mov
pusha
test
dec
mov
js
mov
cmc
ds
cli
sub
xchg
lods
push
dec
lret
sbb
sub
jge
loope
cmp
cmp
adc
mov
push
or
aas
mov
das
jb
pop
or
push
xor
add
ret
mov
adc
out
cmp
mov
sub
mov
lods
mov
mov
ss
enter
xchg
mov
xor
pusha
push
ss
stc
jb
cld
es
adc
cmc
and
mov
imul
mov
mov
jmp
xchg
jmp
lcall
mov
xchg
je
add
bsf
mov
hlt
dec
pop
push
dec
xor
mov
arpl
sbb
xchg
jp
mov
loope
lock
mov
out
cmp
clc
jns
cltd
pop
fcompl
icebp
jns
pushl
jp
cmp
cmpb
fisttps
inc
xor
std
mov
adc
insb
sbb
cmp
push
lea
sahf
jns
jb
mov
stc
push
xchg
mov
cmp
xchg
lcall
sub
push
xchg
pop
mov
xchg
rclb
popa
rcll
test
and
ja
add
mov
sarb
xor
lock
adc
or
cmp
loop
sbb
and
repnz
call
pop
scas
cli
lcall
push
xchg
pop
lcall
scas
mov
lods
push
sub
jbe
adc
dec
sub
jmp
mov
not
xor
sbb
mov
jmp
mov
clc
shll
out
and
outsb
sbb
std
xchg
mov
stc
ljmp
mov
add
mov
mov
stc
mov
hlt
subb
idiv
and
mov
das
add
pop
fdivr
lock
sbb
jle
mov
pop
jp
mov
icebp
mov
mov
gs
das
jg
test
pop
lods
cmp
mov
lods
sbb
sarl
das
or
lods
sbb
sbb
mov
mov
cmp
sub
jecxz
hlt
mov
mov
push
stos
mov
mov
push
shl
push
mov
jbe
sbb
xor
sti
or
cld
shll
out
and
jl
mov
repz
repnz
cmc
jp
out
sbb
adc
jge
or
xor
push
aad
aas
inc
divb
sbb
sbb
or
xchg
cmp
into
sub
icebp
sbb
mov
and
jle
mov
movsl
fistl
jle
aam
incl
test
mov
sbb
pop
insl
cmp
jnp
cmp
fcompl
sub
addr16
mov
jnp
sbb
mov
and
jge
sub
das
jo
mulb
jo
mov
and
jne
xor
jns
aaa
js
cli
movsl
icebp
inc
mov
xor
dec
cmp
in
xor
cmp
imul
rorl
test
ds
psllw
je
lock
fidivl
or
call
ljmp
enter
cmpsl
aaa
icebp
shll
add
lods
dec
out
mov
xchg
xor
jp
xlat
cmp
mov
dec
cmp
stos
bound
cmp
repnz
jbe
push
add
sti
out
and
pushf
dec
shl
fidivrl
inc
icebp
shlb
inc
stos
mov
add
xor
pop
rcrl
enter
jle
cmp
xor
cld
fdivrs
jnp
sbb
mov
fcoms
ds
xor
pusha
mov
pushl
xchg
cmp
mov
jne
clc
cmp
rcll
jge
imulb
stos
mov
test
cli
sarl
mov
jno
repz
xchg
jl
lea
into
loopne
sar
push
and
jle
sbb
mov
in
shl
jge
or
pop
mov
dec
fsubrl
mull
push
mov
icebp
das
icebp
dec
in
adc
leave
mov
imul
xor
sahf
mov
adc
std
pop
ja
xor
sbb
mul
mov
xor
and
mov
pusha
cmp
or
xchg
popf
mov
mov
lock
jge
sbb
cmp
and
sahf
adc
jg
pushl
xor
push
mov
aad
xor
testl
in
pop
cmp
nop
cmp
mov
sar
js
jmp
sahf
or
and
mov
xor
and
mov
hlt
add
jle
mov
test
xor
push
dec
enter
xor
xchg
mov
insl
fldcw
dec
icebp
jge
pop
xchg
clc
loop
cli
adc
lock
lods
fwait
and
hlt
xchg
adc
xor
jno
mov
in
adc
repnz
sbb
xor
shrl
clc
sbb
shrb
shlb
pop
push
xchg
cmp
xor
mov
push
lret
jg
and
pop
inc
push
aam
xlat
cmp
cmp
xor
xchg
clc
bound
jnp
jmp
mov
mov
cli
mov
xor
cs
scas
in
mov
mov
add
xchg
cmp
ljmp
cmp
jl
std
cmp
divb
cmp
cld
jae
fnstsw
mov
ljmp
add
xor
ljmp
dec
hlt
xor
scas
mov
or
stos
and
xchg
mov
jne
pop
push
jae,pt
adc
xor
mov
aas
xor
cmpsb
dec
push
in
subb
nopl
jns
cmp
shrl
inc
sbb
sarl
push
loop
mov
adc
cmp
mov
inc
sub
test
jmp
mov
pop
repz
cltd
adc
pop
and
jle
subl
shll
pop
jne
xor
rcl
cmp
push
xchg
and
sbb
jns
mov
stos
cli
or
mov
ss
ja
and
inc
lcall
loopne
movsl
jo
cs
jnp
xchg
add
push
adc
stc
jno
xchg
call
in
repnz
jmp
cltd
jo
mov
lods
cmp
shrl
jae
jg
clc
ja
xor
sub
push
frstor
adc
cmp
cld
and
xorb
xchg
mov
jno
or
push
xor
mov
add
lods
mov
mov
stc
cmp
xor
mov
xor
mov
xchg
push
fdivl
cld
cmc
mov
jnp
leave
int3
fimull
xor
loopne
jno
mov
cli
sub
in
mov
jbe
pop
cmp
mov
negb
mov
lods
cli
mov
jle
push
cmp
mov
mov
jl
xchg
leave
xor
cmp
or
pusha
sbb
loopne
jl
mov
add
adc
out
and
push
shl
or
sti
mov
loope
pop
popa
ss
jo
cmp
jne
lock
pusha
aas
mov
pop
out
adc
hlt
outsl
lods
nop
or
xor
jmp
sub
mov
repz
add
mov
loop
jecxz
int
test
lods
cli
or
shll
and
add
icebp
mov
aam
js
xchg
cli
fidivl
sbb
adc
hlt
push
stc
mov
mov
leave
xchg
and
mov
mov
mov
xor
mov
cmp
push
sbb
cmp
js
mov
jl
mov
inc
sbb
cmp
call
daa
xchg
xor
divb
ds
mov
jmp
mov
sti
icebp
mov
nop
jge
xor
add
sub
mov
adc
icebp
xchg
mov
ss
fs
icebp
mov
movsb
stos
pop
jl
icebp
xor
icebp
icebp
and
cmp
ljmp
fnsave
adc
adc
imul
pushl
sbb
xchg
xor
sub
mov
ljmp
out
scas
xchg
je
mov
mov
or
mov
sti
adc
inc
mov
fdivl
or
mov
cmp
mov
imul
xlat
idivb
mov
push
mov
std
xor
mov
push
mov
mov
fsubr
repz
insb
test
notb
mov
sahf
mov
jl
inc
cmp
pushl
mov
mov
outsb
sub
popa
bound
enter
loope
lock
aam
adc
aaa
loopne
push
sbb
stc
cmp
push
sti
cmp
or
aam
add
jo
mov
call
pop
clc
lods
mov
sbb
jne
lods
inc
flds
cmp
mov
cwtl
jno
mov
and
mov
imul
std
mov
fdivr
jo
cmpb
out
xor
loop
cwtl
adc
push
clc
and
cmp
push
mov
divl
adc
jnp
sti
fcmovne
push
lcall
mov
sbb
and
out
shl
xor
sbb
push
mov
nop
pop
add
push
cwtl
and
mov
idivl
xor
add
fnsave
mov
xor
insl
out
shrb
or
das
jno
cmp
xor
pop
jno
xor
xchg
push
sarl
scas
mov
xor
fbstp
cmpb
cmp
mov
pop
ret
jno
jno
sub
mov
fimuls
pushf
lock
cmp
xor
shr
sbb
hlt
mov
dec
addr16
aas
icebp
mov
jo
dec
imul
repnz
mov
xor
mov
cli
and
int
xor
lods
cmc
fldz
mov
add
std
sbb
jl
cmc
decb
mov
and
dec
test
pop
and
adc
push
jnp
cmp
ja
xor
aaa
popa
fimull
mov
cmpb
xor
sbb
cli
inc
mov
js
push
scas
or
sbb
ljmp
jl
cmp
lcall
jle
es
xor
testb
cmp
xor
lcall
sub
out
ds
xchg
lcall
es
pop
mov
andl
imulb
shrl
jmp
mov
stc
xchg
xor
mov
mov
call
mov
cmp
jge
mov
std
or
hlt
and
xchg
and
jle
and
inc
lret
pop
or
cmp
repz
sub
mov
rcrb
lods
lods
js
in
inc
divl
jl
repz
cwtl
data16
loopne
outsl
sub
mov
sbb
sbb
jbe
aas
and
xchg
xchg
aas
xor
leave
xor
jmp
pusha
pop
and
push
adc
cmp
or
sub
mov
xor
cli
jg
pop
jmp
jp
mov
mov
lea
mov
adcb
imul
aas
mov
js
ret
xchg
xchg
and
sti
and
pushl
scas
add
aas
test
das
fdivr
clc
outsl
mov
imul
or
xor
mov
ret
aam
clc
xchg
in
mov
mov
sbb
mov
cmp
aas
orb
adc
repnz
and
jno
jo
mov
jae
fstpt
divl
flds
xor
stc
mov
xchg
fstl
aas
jno
out
cmp
jge
cmp
repnz
cmp
sbb
adc
pop
cmc
mov
pop
out
repz
adc
mov
pop
std
icebp
jns
jo
aaa
stos
xor
mov
cli
data16
and
cmp
jno
hlt
orb
jns
jmp
cmp
ss
je
sub
push
xchg
sbb
and
mov
and
mov
test
mov
testb
bound
sub
jo
cmp
mov
inc
mov
sarb
scas
xchg
mov
clc
dec
nop
pop
incl
mov
lds
imulb
and
sbb
shlb
mov
ds
out
jo
loopne
ds
std
sub
mov
inc
shl
or
stos
ja
cmp
in
cmp
repz
jno
jl
inc
rclb
std
cmc
adc
in
adc
in
shl
cltd
hlt
sub
pop
aaa
mov
adc
jle
pushf
sahf
rcrl
icebp
xor
fildll
xor
pop
push
or
mov
mov
cmc
data16
loope
dec
or
ja
xor
or
inc
repz
pop
mov
loopne
mov
decb
divl
in
hlt
mov
ds
mov
add
cmp
mov
cli
adc
into
pop
and
sub
push
sub
jnp
stos
or
cmp
jbe
jno
fisubrl
cld
dec
xor
mov
pop
push
pop
jge
cld
jl
jnp
and
add
cmp
dec
jl
jae
idivb
push
xor
and
pusha
push
xor
sbb
inc
out
mov
push
loop
adc
ss
jle
push
imull
sbb
mov
ret
fwait
jno
test
xor
mov
pop
dec
stc
mov
mov
outsb
mul
aam
std
sti
xchg
mov
idivl
pop
aaa
aas
mov
ds
sbb
push
jg
call
and
xor
je
or
ja
cld
sarl
mov
lock
in
mov
lea
xor
mov
icebp
bound
fistl
xor
idiv
push
cmpsl
and
cmp
loopne
push
fisubrl
in
xchg
adc
jl
mov
adc
xor
jno
pop
mov
jno
xor
jno
inc
xor
jb
ljmp
jg
sbb
push
jl
cmp
icebp
mov
sub
jp
add
jo
fnsave
jb
jg
mov
in
inc
icebp
cmc
bound
and
jg
negl
sub
popf
mov
mov
jp
lea
jb
mull
jle
cmp
mov
test
test
cmp
vsubsd
mov
pop
push
jge
jb
mov
mov
lea
fbstp
sti
jo
sarl
fidivrs
add
test
and
jo
jo
out
clc
xchg
dec
hlt
aaa
adc
adc
incl
cmpb
cs
xor
in
sti
mov
popa
mov
adc
je
cs
test
mov
and
mov
pop
mov
push
daa
cld
sub
cli
xor
sbb
rorb
lods
or
mov
std
scas
incb
pop
push
pushl
adc
inc
cmp
shll
sub
cmp
push
scas
stc
mov
mov
mulb
jo
xor
ds
mov
icebp
inc
fstpt
adc
lahf
cmp
inc
sbb
push
mov
cmp
xor
sub
das
mov
dec
pusha
repz
xchg
sub
mov
cmp
inc
aam
sbb
xor
cmp
mov
push
repz
cld
mov
aad
movsl
cld
inc
jl
pop
jae
mov
shl
mov
add
jp
icebp
sbb
insl
mov
adc
out
movsl
mov
js
pushf
outsb
shrb
push
std
xor
mov
imul
adc
btc
aas
pusha
repnz
jge
push
sub
pop
cld
mov
cmp
dec
in
lods
push
and
xchg
mov
out
aad
xor
repnz
cmp
add
notb
fcomip
sub
lahf
sub
iret
cli
setl
xor
mov
jle
jno
push
sub
mov
pop
cmpsl
mov
jl
dec
es
clc
adc
lods
inc
push
jns
jno
mov
mov
mov
sti
subb
sti
rolb
sub
or
mov
out
std
and
hlt
pop
sti
lret
push
mov
mov
roll
test
adc
idiv
cmpsb
adc
shlb
ss
sub
xor
inc
out
sub
pop
push
test
mov
mov
jno
mov
or
scas
jle,pt
jnp
push
and
repnz
jo
test
cmp
divb
ss
int3
or
mov
bound
out
icebp
cmpl
mov
xchg
mov
insb
add
cmp
popf
cmp
inc
lahf
divl
cmp
xor
sti
cmp
push
push
mov
inc
sub
outsl
jb
push
pusha
in
jb
jg
xor
mov
cmp
fcmovnu
mov
mov
ss
xor
lock
inc
pop
ja
dec
or
push
loopw
loope
dec
sarb
mov
cmc
outsl
cmp
pushf
loopne
mov
mov
mov
loope
fcoms
and
gs
imul
shrb
ja
lods
ror
mov
rorb
cmp
adc
cmp
jmp
or
cmp
xor
jl
js
mov
imul
enter
cmp
mov
scas
scas
dec
mov
outsl
scas
mov
mov
or
pop
push
pushl
xchg
lcall
mov
mov
or
xchg
sbb
lcall
ja
daa
lock
popf
adc
loope
jl
xor
sub
je
sub
xor
jl
jno
call
lret
outsl
add
mov
dec
mov
repnz
jp
dec
jne
dec
cs
mov
mov
mov
or
inc
mov
outsl
cmp
test
cli
cltd
inc
push
lcall
sti
jmp
jl
fdivl
jg
adc
dec
mov
xchg
jecxz
mov
mov
cli
mov
pop
mov
test
ds
lcall
add
and
xor
mov
xor
leave
cmp
jno
jge
fidivl
sbb
bound
mov
jle
mov
dec
xchg
cmpsl
jecxz
sti
jbe
mov
or
and
lcall
es
mov
mov
ret
sbb
mov
sbb
daa
mov
dec
push
notl
jo
mov
push
inc
and
fidivrs
mov
mov
fwait
decb
lds
mov
dec
mov
xor
int3
mov
cli
loope
mov
or
jle
aaa
pop
aaa
sarl
push
outsl
mov
lock
jmp
lcall
jo
jno
cli
jnp
hlt
lods
loop
sbb
jle
jnp
and
sbb
leave
jnp
cmp
mov
jo
add
and
push
jge
jp
das
add
out
xor
xchg
hlt
sbb
xor
stos
in
pusha
mov
mov
mov
out
mov
mulb
xor
int3
mov
mov
mov
mov
mov
adc
cmp
out
add
cmp
mov
mov
rcr
andb
mov
sub
or
jns
test
jne
mov
dec
xor
dec
call
icebp
js
and
fucomip
insb
fildll
jge
lods
cmp
in
mov
mov
cltd
cmp
sbb
stc
jg
mov
icebp
mov
cmp
pusha
rclb
test
jo
lret
repz
test
xor
lods
pop
cwtl
or
stos
cmpsb
mov
push
jbe
cmp
dec
out
inc
call
lods
sub
mov
ret
fsts
mov
icebp
das
cmp
xor
jno
dec
xchg
sti
add
lock
xor
repnz
mov
in
mov
ss
jns
xor
cmp
push
cmp
das
push
fnstcw
aas
je
inc
jb
stos
movsb
mov
aad
jl
pop
rcrl
call
jno
dec
outsb
leave
sbb
out
xor
aaa
dec
cmp
pop
sub
sar
std
jmp
icebp
mov
adc
in
lock
arpl
jl
call
and
adc
sahf
aad
fisubrl
in
sub
push
iret
test
inc
xchg
mov
xor
mov
ds
cmpsl
mov
dec
pop
or
ljmp
ret
mov
jno
loope
into
insb
xorb
jae
rcll
mull
out
clc
sub
push
add
sbb
cmp
shlb
fistps
and
mov
xor
lahf
mov
pop
pusha
cmp
mov
es
jmp
imul
fildl
dec
int3
incb
push
xor
or
push
push
imul
les
mov
sbb
and
push
aad
insb
pop
fisubrs
jo
or
les
mov
mov
sub
iret
mov
pop
mov
pop
dec
lods
sbb
test
dec
xlat
adc
mov
rcrb
in
ds
add
scas
nop
rcrl
dec
in
cmpsb
and
xor
gs
cld
xchg
inc
mov
mov
mov
cmp
xchg
or
mov
aaa
lods
jmp
ss
in
fs
gs
movd
rolb
js
scas
push
int
ja
fucomp
push
dec
into
mov
add
das
aam
or
cmpsb
jo
add
mov
cmp
pop
in
jo
add
popf
shrl
push
aam
jns,pt
loopne
inc
adc
mov
gs
lcall
mov
mov
mov
pop
scas
sbb
xchg
jno
inc
test
mov
pushf
int
int
sub
inc
jbe
fcompl
xlat
sub
or
cmpsb
mov
mov
mov
jmp
sbb
adc
mov
ss
mov
mov
shl
xchg
add
call
clc
filds
das
adc
loope
lahf
out
cs
mov
lcall
mov
ss
inc
mov
hlt
repz
push
mov
hlt
fucomi
nop
cmpsb
sbb
ja
std
mov
lods
dec
mov
js
push
push
pop
xor
cmpsb
int3
lds
lahf
repnz
or
fnstenv
mov
adc
ds
pushf
sahf
gs
mov
xchg
pop
jl
mov
cmp
cmp
sbb
mov
test
and
jle
sbb
jbe
lcall
sub
shr
aas
fdivs
push
pop
pop
lock
mov
test
jb
dec
push
xlat
pop
mov
sbb
jmp
stc
add
mov
and
sbb
scas
cld
push
push
mov
jl
out
add
repz
arpl
hlt
jo
shll
adc
mov
mov
int
push
xchg
lods
and
dec
push
adc
outsb
aaa
sub
movsb
mov
loopne
mov
xchg
inc
jmp
cli
xchg
jns
xor
std
insb
sub
test
mov
mov
xchg
in
mov
mov
scas
xchg
call
sub
lret
test
add
fldt
push
aas
xor
or
cld
push
dec
stc
lcall
sbb
xlat
mov
leave
jmp
ret
mov
mov
int3
stos
stos
stos
and
lock
cmp
sbb
notl
scas
xchg
xor
adc
popa
sahf
neg
push
or
fldln2
push
and
xor
adc
lods
clc
or
push
mov
jnp
cli
fucompp
pop
movsb
mov
ss
mov
dec
mov
jno
mulb
xchg
add
stc
fs
xchg
imul
ljmp
fiaddl
lods
sbb
iret
mov
mov
adc
rcll
cmpsb
sbb
adc
push
cmp
mov
test
hlt
lret
mov
insb
pop
mov
jecxz
fcoml
push
lahf
pushl
adc
mov
push
negb
neg
arpl
shrb
sub
mov
sbb
add
test
into
and
out
inc
adc
sbb
iret
ja
jge
push
push
hlt
ja
in
adc
or
lods
out
mov
cmc
xor
mov
push
mov
jmp
dec
rorb
jae
je
popf
sbb
or
into
jmp
mov
out
pop
out
mov
lock
out
sbb
clc
pusha
xchg
cs
aaa
xchg
aad
imul
mov
stc
in
or
cli
jae
out
xchg
andb
pop
cmc
in
lock
ljmp
dec
push
mov
xor
push
xchg
fcoml
or
enter
loopne
je
int3
pushf
mov
pop
add
orb
gs
outsb
mov
cs
pop
testl
cltd
adc
and
mov
repnz
js
dec
sbb
adc
jne
cmp
pop
loope
and
fistpll
adc
leave
imulb
fldcw
test
jmp
aaa
repnz
dec
jbe
jb
pop
mov
xor
or
jns
loopne
cmp
mov
push
sbb
mov
xor
imul
out
xchg
rorl
sub
pop
int
and
outsb
jno
es
out
inc
neg
insb
xchg
pop
xor
push
mov
pop
insl
out
and
loope
xor
and
lock
loopne
push
test
out
sub
mov
popf
into
cmp
shll
sar
or
pop
hlt
gs
sbb
leave
mov
jbe
adc
adc
lahf
mov
xor
adc
out
jns
loopne
ljmp
inc
jp
lret
in
lods
sbb
lret
jmp
mov
sbb
mov
sti
scas
out
add
pushf
decb
adc
in
sbb
add
sti
scas
in
push
sbb
jo
daa
jl
lock
xorl
pop
cmpsl
aad
stc
adc
push
push
scas
pop
mov
sub
ficoml
push
jnp
rol
sbbl
loopne
mov
jo
adc
nop
stc
pop
mov
or
cmp
mov
mulb
mov
dec
insb
xor
and
jno
inc
and
jb
das
mov
push
imul
jne
imul
xor
xchg
movsb
jb
into
xchg
pusha
mov
push
or
add
inc
test
mov
out
rcrb
loop
insb
mov
nop
jge
clc
mov
mov
mov
mov
mov
pop
flds
mov
clc
pop
shlb
stc
bound
mov
jnp
testb
stc
adc
sub
mov
xor
mov
lcall
inc
push
mov
jge
scas
imul
gs
sub
sbb
in
cmp
int3
bound
mov
loopne
ja
ja
ret
and
adc
rcll
xor
jno
push
mov
neg
xchg
int
nop
mov
cmp
xor
mov
add
and
or
mov
pop
pusha
imul
push
shl
mov
cmp
cld
pusha
sub
icebp
and
rcrb
notb
std
lcall
push
test
enter
mov
adc
icebp
xlat
subb
push
mov
inc
adc
lods
in
lock
loopne
mov
lods
mov
fists
sbb
scas
hlt
or
iret
push
inc
fadd
jle
push
repz
in
loopne
xor
pop
int3
mov
adc
addl
jle
lcall
sbb
sbb
repz
pop
int
sbb
cltd
sub
jo
sbb
and
inc
call
push
adc
jmp
sbb
sub
cltd
adc
mov
mov
in
sbb
xor
xchg
loopne
in
or
orb
cmp
insb
push
push
data16
lret
jae
jle
xchg
jae
loopne
sbb
addr16
scas
pop
push
add
aad
sbb
and
jmp
insl
fadd
nop
cld
inc
dec
push
lcall
mov
cld
addb
lock
std
adc
sbb
shr
fsubrs
aad
fldl
shr
scas
clc
shrb
cld
test
fildll
leave
push
xchg
js
scas
lret
mov
aas
cmpsl
cmc
xor
sbb
xor
mov
nop
pop
dec
pop
cmp
movsl
mov
xchg
testl
scas
sbb
inc
fcmovb
push
leave
xchg
stos
pop
fstpt
jb
jbe
sub
adc
cmp
lods
sbb
stos
push
je
jns
add
jns
jp
fnstenv
jl
jmp
leave
adc
cwtl
push
push
das
pop
in
mov
mov
jno
call
xchg
mov
cltd
mov
jge
imul
jl
out
icebp
test
push
xchg
mov
jno
fdiv
pop
popa
cmpsb
add
mov
icebp
fmul
aad
cmp
jo
stc
mov
sti
push
idivb
and
idivl
lods
insl
int3
add
pop
int
dec
sahf
mov
fstl
in
mov
jbe
repz
jmp
repz
or
sahf
adc
fstl
popf
mov
sub
xor
rorb
sar
pusha
mov
pusha
roll
push
mov
mov
inc
inc
cld
jl
stos
push
fsts
xor
fwait
push
test
flds
fiadds
lods
call
jge
cli
jg
cmc
jmp
push
mov
cmpsl
jno
dec
jo
mov
in
js
cld
push
mov
test
lods
fcoml
adc
in
imul
mov
sub
dec
loopne
sahf
stos
es
mov
mul
lret
roll
jne
jl
stc
jno
sahf
jmp
aad
dec
cltd
stc
mov
insb
cld
cmp
adc
sub
xchg
add
mov
and
out
das
inc
out
adc
pop
dec
iret
and
sti
in
cmp
jge
stos
push
cmp
dec
insb
fmull
cmpl
imul
ds
sub
test
cmpsl
ja
push
sub
pop
imul
clc
shlb
pop
ror
popa
clc
pop
imul
xor
push
clc
insb
push
inc
mov
mov
in
movsb
ja
lods
inc
pop
xor
mov
fdivp
dec
or
es
xchg
in
sub
int
int3
aaa
cmpsb
rcrb
shrb
sub
xor
push
clc
das
ret
imul
push
test
push
cmpsb
pusha
rol
lahf
dec
cld
mov
mov
sbb
sahf
in
or
mov
aad
mov
into
xor
jle
add
js
cmp
mov
push
dec
mov
roll
fimull
xchg
mov
lret
sbb
dec
dec
ss
push
push
mov
mov
lret
push
sti
dec
sarl
sub
orb
jle
cwtl
jge
mov
pop
xlat
insb
mov
stc
cmp
lods
loope
outsb
test
mov
dec
lret
dec
or
cwtl
sbb
shlb
stc
cltd
test
jbe
and
pusha
inc
mov
mov
or
pop
push
push
movsb
stos
add
xor
ja
xchg
mov
das
xchg
push
js
hlt
sbb
fdivl
lcall
icebp
cwtl
pop
xchg
adc
push
dec
cmp
scas
test
movsb
inc
xchg
imul
pop
xor
xchg
loope
lahf
ds
cli
add
outsb
ja
inc
stos
add
out
lahf
ror
push
sub
enter
out
stos
rorb
xchg
xor
aad
or
out
or
xchg
xor
lock
mov
or
jne
cli
or
in
add
movsl
add
fdivp
cs
stos
cmpsb
sbb
clc
sahf
lcall
xchg
nop
or
xor
mov
mov
and
inc
nop
xor
icebp
imul
push
stc
cmpsb
fildl
push
pop
leave
cmp
push
jg
sub
inc
push
stos
sbb
nop
inc
sub
sub
in
sub
pop
out
xor
aad
rorb
imul
jne
or
xchg
adc
mov
shr
push
cmp
loope
cmpsb
dec
out
inc
inc
popf
fists
inc
jle
test
pop
loopne
inc
arpl
fsubrs
fs
es
mov
push
divl
jmp
addr16
imull
mov
inc
mov
jge
jg
clc
push
es
mov
es
dec
stos
and
add
pop
mov
dec
insb
dec
out
sahf
mov
push
aas
pop
mov
mov
in
cmp
fyl2xp1
lds
int3
out
in
ss
sub
sub
mov
sbb
jg
jl
mov
inc
inc
ficomps
jb
adc
push
or
mov
or
outsl
xor
lock
call
outsl
call
jne
add
push
push
jmp
sbb
or
cmpb
andb
mov
shll
mov
adc
inc
mov
lds
fnsave
icebp
ds
push
jecxz
dec
lods
or
pop
test
pop
mov
or
jo
mov
ljmp
divl
sub
test
scas
popa
cmp
xchg
mov
aad
je
mov
mov
es
fwait
test
push
test
xchg
cld
sahf
adc
mov
data16
dec
jge
movsl
in
je
xchg
lds
add
popf
sub
sbb
std
stos
int
inc
mov
lahf
dec
test
add
mov
fxch
inc
push
sar
repz
mov
cli
sub
lods
mov
mov
adc
jae
or
sbb
and
jno
or
pop
adc
stc
mov
pushf
dec
sahf
sub
into
loopne
addr16
dec
sub
mov
push
pop
adc
cmp
inc
bswap
in
pop
pusha
jg
leave
test
push
stos
jmp
loopne
or
xchg
and
int3
jmp
gs
push
mov
push
pop
loope
mov
add
sub
fcoml
cli
into
insb
jo
xor
sbb
stos
cmpsb
jo
mov
adc
dec
push
fdivl
pop
push
lods
add
dec
cld
cltd
cmp
mov
dec
adc
push
add
js
stos
movsl
mov
lods
pop
out
nop
lahf
jno
outsl
jle
mov
cmp
jmp
add
adc
inc
fists
fidivs
idiv
ja
fisttpl
dec
mov
cmp
sbb
sbb
hlt
stc
xor
mov
push
mov
push
or
push
mov
loopne
push
ret
lea
les
jecxz
inc
push
sbb
cmp
inc
stos
addb
sbb
cmpsl
jecxz
test
jns
xchg
lcall
clc
pop
iret
adc
cltd
push
jnp
into
outsl
movsl
jecxz
pop
stos
jns
stos
jmp
sbb
rcrl
stc
mov
adc
out
mov
andl
je
cmc
pop
fldt
dec
movsl
cltd
and
ret
push
jb
jp
push
mov
loopne
mov
int
out
hlt
cmpsb
vpaddusb
mov
imulb
pop
nop
imul
popf
push
mov
xchg
jnp
pushf
add
testl
out
nop
into
incl
cmpsl
pop
cmp
sbb
imul
jl
mull
jg
adc
test
mov
adc
or
sub
scas
ss
jl
movsl
sub
push
stos
in
jo
push
cwtl
or
repnz
lcall
mov
mov
pop
lret
adc
xchg
repz
scas
in
f2xm1
dec
sti
stc
popa
sbb
int
js
cli
fsin
push
sbb
stos
or
lea
cmp
movsl
inc
mov
jo
dec
jg
sub
stos
dec
push
xchg
imul
popf
cmp
xchg
push
out
cld
or
popa
mov
lret
cli
subl
test
xchg
lock
push
mov
xor
mov
push
scas
cmpsl
cmp
leave
cs
push
jbe
mov
adc
push
cmpsb
mov
scas
fisttpl
xor
test
cmpsb
or
adc
pop
jmp
inc
icebp
mov
sbb
and
mov
mov
fildl
jge
sub
mov
pop
loopne
clc
add
push
rcr
aam
imul
mov
test
repz
add
stos
cwtl
pop
insl
pop
aad
sub
lahf
test
mov
jae
or
ret
or
icebp
or
mov
mov
hlt
inc
jns
sbb
mov
mov
ss
dec
aam
sti
mov
test
mov
fcomi
ret
sbb
mov
mov
cmpsl
pop
push
mov
incl
xchg
js
mov
xchg
dec
cmp
fcomip
adc
cmp
sti
fidivrs
mov
repnz
hlt
int
add
mov
insb
movsb
cmp
fwait
lods
dec
xor
call
inc
dec
in
pushf
push
mov
xchg
mov
insb
mov
push
jmp
add
mov
xchg
mov
push
out
lods
stos
pop
imul
repz
dec
fcompl
and
inc
pop
gs
fsubs
inc
jp
xchg
xchg
xor
scas
testb
ds
sti
and
rclb
dec
aam
pop
mov
das
pop
sbb
mov
cmp
sub
repz
mov
mov
inc
mov
loopne
pusha
mov
js
mov
mov
call
sbb
xor
lret
out
rcrb
lock
rolb
jb
mov
inc
lea
fwait
mov
icebp
icebp
cmp
imul
adc
loopne
lock
mov
lods
frstor
sub
fstpl
sti
mov
jnp
icebp
dec
jmp
rcl
addl
outsl
dec
fucomi
pop
adc
dec
mov
daa
das
inc
jb
or
ret
mov
mov
lahf
push
jle
jns
jl
lds
xchg
sbb
ja
cmpsl
stc
scas
adc
jnp
shrd
repz
fucomp
leave
icebp
notl
xorb
add
sub
in
stos
enter
jno
cmp
lea
inc
clc
rorl
lcall
cmp
movsb
repz
scas
cmp
call
popa
sub
cmc
add
and
icebp
cli
imul
lea
fsubr
notl
or
mov
in
sarb
stos
in
shl
push
imul
out
mov
dec
inc
mov
ret
clc
mov
push
jbe
pop
add
pop
in
xor
or
in
lock
sub
sub
scas
mov
int3
dec
lahf
mov
push
xor
test
pop
gs
mov
adc
jns
jl
rcll
sbb
lcall
push
adc
mov
inc
hlt
sti
sbb
sti
mov
rorb
lds
mov
sub
cmp
cmp
into
or
mov
hlt
inc
lret
aaa
cli
sub
leave
call
add
jmp
js
push
divb
jl
dec
stc
out
mov
in
or
mov
mov
jmp
or
out
cmp
xchg
push
fdivr
dec
mov
cld
xchg
out
stos
push
adc
mov
push
insb
fldcw
xchg
repnz
stc
idivl
xorl
sbb
pop
cmpsb
mov
push
popf
addr16
mov
mov
sbb
insb
jb
or
fdivrs
xor
sbb
pushf
imul
dec
jecxz
sbb
pop
lret
inc
or
jle
jmp
inc
add
dec
call
inc
mov
jl
sti
ficompl
arpl
out
mov
pop
jmp
cmp
pop
les
jle
push
inc
out
repnz
in
jnp
les
rol
sbb
mov
adc
popf
mov
lcall
fisttpll
jae
icebp
pop
or
testb
push
addr16
xor
lea
push
pop
movsl
mov
jmp
outsl
out
pushf
scas
or
sbb
ss
jl
mov
or
int3
fsubrl
mov
or
jecxz
mov
mov
int
push
inc
sub
jnp
mov
out
cmp
xchg
cli
dec
addr16
mov
pop
andb
in
movsb
add
jae
cmpsl
push
cltd
loop
add
jns
rorl
pushl
lock
cmp
pop
fs
arpl
add
xor
pop
push
xchg
sub
rcrl
xchg
xchg
lea
cltd
orl
cmpsl
jo
adc
inc
out
jl
pusha
mov
xchg
loope
push
clc
out
std
leave
out
jnp
mov
dec
mov
push
cs
notb
fimuls
repz
negl
jae
inc
mov
pop
clc
lods
push
push
out
movsl
jmp
jge
jnp
mov
js
jmp
cmpsb
pop
loope
inc
cmpsl
and
insl
cld
aad
or
add
cmp
jnp
scas
loopne
pusha
inc
xor
sbb
sbb
ss
cmpl
test
adc
jl
notl
std
inc
push
cs
mov
cwtl
mov
mov
xchg
aas
imul
divl
and
ret
add
jae
push
loop
cwtl
rorb
mov
adc
loopne
cmp
aad
mov
pop
sti
xlat
mov
hlt
or
dec
cwtl
sub
enter
idiv
jmp
lahf
fstsw
je
cltd
fs
mov
mov
enter
dec
movsl
call
ljmp
inc
enter
addr16
adc
leave
pop
push
faddl
push
pop
add
test
outsb
in
cmpsb
rcll
sbb
jl
jmp
cmc
repnz
adc
test
cmp
jle
insb
add
mov
xchg
cmp
stc
jle
pop
pusha
xchg
cltd
cmp
movsl
inc
push
and
aad
cmpl
or
inc
dec
mov
mov
jmp
jno
inc
outsl
sub
pop
test
mov
push
and
push
push
out
iret
push
fistps
mov
lcall
mov
jle
in
pop
xor
dec
inc
adc
mov
outsl
push
push
scas
inc
stos
movsl
je
fs
mov
bswap
stos
lock
sbb
mov
fcoml
pop
xchg
fisubl
mov
adc
idivl
dec
cwtl
in
push
stc
lret
rol
jmp
stos
movsb
xor
mov
sbbb
fcompl
push
sti
sbb
push
pusha
js
cld
popf
test
pop
mov
push
mov
cmp
jne
sti
pop
movsl
je
or
xchg
aas
mov
cmpsb
gs
aam
dec
loopne
pop
jp
push
push
and
lcall
cmp
or
xchg
in
icebp
jae
in
mov
loopne
sbb
scas
push
jb
int3
cmp
es
mov
lods
push
pop
pop
jmp
mov
sar
call
or
std
insb
jnp
push
push
cwtl
cld
fistpll
push
loopne
fcomps
cmpb
mov
xor
pop
mov
loope
sub
pop
int
scas
dec
inc
stc
outsl
sub
dec
xchg
lret
sahf
out
les
jge
or
adcb
mov
or
out
pop
jmp
jae
jg
jmp
jno
out
lahf
shlb
in
popa
mov
loope
mov
inc
sbb
insb
fldcw
imul
outsb
or
sbb
pop
xor
clc
test
stos
stos
int
push
xor
sub
xor
popf
adc
or
mov
test
dec
dec
xor
int3
mov
loopne
inc
jno
imul
mov
test
jmp
lock
testl
loope
push
mov
notl
cmpsb
fdivrl
push
and
xor
insl
popf
lea
mov
imul
sub
inc
mov
sahf
xchg
sub
mov
ds
dec
clc
mov
mov
lods
enter
int
jb,pn
lea
gs
cmc
out
jp
sbb
popf
jae
push
xchg
sarl
testb
push
cmc
jae
out
pop
push
in
testb
inc
push
add
push
scas
jne,pt
push
cld
push
inc
xchg
lods
lea
clc
out
jp
cmp
dec
es
shrl
mov
adc
pop
or
insl
idiv
sahf
cs
jae
inc
and
sub
int3
dec
lahf
xor
cmp
fisttps
and
test
adc
inc
sarb
stos
sub
stos
ja
rorl
std
ja
leave
pop
cmp
pop
movsl
mov
mov
adc
cld
pop
test
lea
push
jmp
aam
stos
jl
lahf
fcomi
mov
mov
add
or
xchg
repz
inc
arpl
jle
mov
and
push
out
shrl
aas
bnd
sbb
sub
jae
xchg
lea
sub
out
cmpb
cs
jns
jle
mov
or
mov
ds
mov
pop
lcall
mov
xchg
mov
ds
mov
int
adc
jg
imul
push
int
jge
cmp
xchg
cmp
ljmp
imul
or
lods
lahf
lcall
hlt
lods
mov
dec
pop
aad
movsl
xor
cmc
lds
call
or
xchg
jno
ljmp
enter
or
push
imull
testb
movsl
or
sahf
cld
leave
lock
dec
mov
mov
add
cmpsb
dec
clc
test
pop
scas
push
loop
mov
mov
flds
xor
jg
mov
nop
dec
cmc
push
xchg
movsl
lods
mov
mov
jnp
xchg
aam
js
and
in
out
xor
js
sahf
jae
clc
dec
mov
or
das
mov
notl
leave
imul
xchg
push
sbb
mov
inc
idivb
lds
push
mov
sbb
dec
jns
imul
dec
call
shl
pusha
dec
ds
mov
push
cwtl
xchg
cwtl
fsts
repnz
inc
ds
dec
lahf
xlat
jno
je
leave
sbb
mov
pop
cld
xchg
inc
movsl
repz
loopne
clc
out
pop
pusha
mov
repz
cli
or
rclb
push
inc
push
out
sub
lock
jne
iret
and
ja
pusha
mov
inc
mov
dec
mov
xor
sbb
ss
pop
adc
insl
ss
negl
push
or
push
mov
lds
lods
shll
dec
pusha
lea
outsb
jns
xchg
cltd
xchg
lea
jnp
popf
and
mov
hlt
push
pop
inc
sahf
addr16
cli
inc
inc
dec
pop
aam
popf
aam
stos
stos
mov
repz
or
dec
push
fstpt
es
movsb
inc
pusha
mov
sub
pushf
leave
cmp
xchg
lods
pop
movsb
inc
cmp
imul
jle
xchg
inc
jp
push
sbb
inc
push
and
or
inc
jns
out
jb
aad
add
jge
iret
aas
movsb
in
jbe
cs
inc
popf
mov
dec
inc
popa
inc
data16
pushf
xchg
adc
xor
cmpsl
cmp
xlat
icebp
mov
jl
jge
stos
xchg
insl
jge
in
mov
or
and
or
xchg
dec
les
lods
mov
idiv
mov
mov
push
lcall
scas
jecxz
adc
jge
lret
les
adc
stos
lods
js
fisttps
push
sbb
xor
leave
icebp
and
aas
mov
sbb
jnp
iret
pop
mov
ds
pop
les
fwait
xor
pusha
insb
sarb
scas
imul
jecxz
mov
cli
xchg
std
cmp
mov
adcb
cmp
mov
pop
mov
mov
sbb
pusha
out
cwtl
jg
and
xor
rolb
jge
scas
and
lcall
adc
out
ja
dec
adc
aad
mov
shll
inc
pop
adc
in
add
pop
dec
jl
jo
add
loope
shr
jbe
fsubrp
mov
scas
inc
insl
cmpsl
push
jmp
incl
sbb
aas
jo
cmp
xorb
lret
inc
dec
mov
mov
sbb
mov
aas
in
mov
add
pusha
mov
and
mov
mov
aas
sbb
mov
icebp
bound
xchg
mov
mov
scas
cmp
xor
pop
into
cmp
and
cmp
outsl
sbb
test
fidivrl
fprem
rcrb
xor
pop
lods
mov
into
mov
hlt
xor
mov
mov
and
in
mov
pop
testb
lcall
jle
mov
ret
sub
jl
in
pop
mov
cld
cmp
mov
mov
mov
mov
mov
sbb
jno
pop
cmp
jp
aaa
add
xor
ljmp
and
andb
adc
cmp
sti
push
aas
icebp
mov
div
xor
xor
ds
cmp
cmp
mov
push
mov
mov
aas
mov
add
mov
sub
test
fdivs
into
test
fiadds
add
sub
mov
daa
pop
push
mov
and
icebp
mov
mov
stos
xchg
aaa
adc
add
cmp
mov
data16
mov
scas
mov
into
mov
in
mov
mov
in
adc
xor
xor
mov
mov
xor
mov
inc
xor
xor
idiv
rcrl
jno
fdivrs
mov
mov
in
adc
pusha
scas
cmp
mov
push
mov
lcall
mov
mov
pop
push
xor
xor
mov
push
mov
jo
divb
sub
and
mov
cld
lods
sub
loop
cmp
xorl
xor
mov
mov
mov
scas
mov
add
ja
sbb
jp
cmp
mov
sub
out
adc
push
mov
mov
mov
sub
xchg
mov
cld
test
xor
xor
mov
scas
addr16
pop
into
cmpsb
sarl
mov
and
and
xor
mov
mov
add
mov
adc
jno
fdivrs
xor
mov
int3
bnd
adc
jp
mov
xor
sbb
mov
jno
pop
push
xor
cmp
mov
mov
mov
fdivs
xor
shlb
cmp
mov
mov
in
adc
mov
sti
pop
into
mov
jbe
mov
imul
sub
mov
xor
mov
das
stc
mov
mov
hlt
mov
mov
add
mov
test
fidivrl
cmp
jp
mov
inc
inc
push
jecxz
test
push
shlb
rorl
add
push
jmp
fistps
cmp
leave
in
jp
icebp
mov
xor
cmp
jmp
add
leave
aas
shll
push
test
stc
mov
andb
cmp
mov
mov
inc
shlb
add
in
bnd
fldl2t
lods
mov
cmc
mov
and
bound
mov
bnd
leave
lods
ss
mov
xchg
data16
sub
adc
loopne
add
adc
cmp
or
mov
cmp
mov
mov
out
push
lods
jnp
icebp
loop
cmp
bound
mov
in
jle
and
test
sub
bound
adc
cltd
cs
jg
icebp
divl
mov
mov
and
cmp
sbb
idivl
out
sub
js
xor
mov
xchg
loop
jmp
jmp
mov
lea
test
sub
xor
mov
jae
or
or
inc
sub
ret
addr16
stc
xor
and
cld
stos
icebp
inc
das
xor
jno
js
mov
adc
push
lock
jae
stos
xor
push
mov
adc
std
mov
add
in
mov
cld
repnz
xchg
lock
loop
inc
dec
mov
int
inc
sbb
mov
mov
test
mov
lods
mov
popf
adc
push
setge
mov
sysenter
mov
cld
xchg
insb
xchg
lock
mov
mov
inc
sbb
insl
xor
cmp
jb
repz
pop
mov
dec
adc
push
cmovge
push
dec
adc
cld
inc
insb
xchg
lock
jb
push
or
cmpsb
sbb
mov
loop
stos
ret
lock
adc
bound
inc
adc
sarb
cld
cld
mov
cmp
idiv
mov
stos
repz
lea
mov
cld
sub
adc
imull
jg
fdivrs
divb
xorb
push
cmp
repz
xor
outsb
hlt
mov
mov
fdivrl
adc
int3
xor
push
mov
jae
ljmp
cmp
mov
xlat
xor
mov
lods
and
jno
mov
or
loop
xor
mov
mov
loop
push
jg
mov
or
and
pop
xor
mov
and
sbb
xorb
inc
sub
xor
adc
xor
cmp
mov
mov
adc
push
push
xor
inc
sbb
js
mov
xor
cmpsl
mov
push
mov
pop
pop
cmp
mov
sbb
je
sbb
cmp
mov
push
mov
mov
sbb
cmp
mov
ljmp
stc
and
sbb
mov
lret
jge
lods
lret
stc
mov
jnp
mov
fidivrl
stos
adc
nop
mov
jge
sti
jp
cmp
mov
cmc
dec
je
xorb
dec
sub
mov
jne
and
adc
jle
cmpsb
push
clc
mov
mov
dec
shl
fidivs
mov
hlt
std
mov
call
mov
ss
js
mov
push
repz
ret
adc
pop
push
shll
and
xchg
cs
icebp
lret
mov
mov
and
cmp
push
mov
and
mov
adc
cvtdq2ps
sar
dec
insl
adc
cmp
or
or
push
lcall
sub
and
fucomip
test
lock
test
fiadds
daa
rcll
sub
cmp
mov
push
and
push
push
cmp
mov
movsb
adc
push
nopl
inc
cld
or
pmuludq
clc
mov
sti
mov
clc
fcmovu
and
xor
fnstenv
adc
and
pcmpeqw
adc
adc
push
add
mov
add
adc
lock
cld
shrl
sub
jle
rcll
rcr
push
push
lock
jg
fcmovu
mov
rcll
mov
movsl
xchg
sarl
idivl
clc
mov
subl
inc
and
sub
adcl
andl
popa
jb
push
inc
sti
stos
cmp
inc
xchg
mov
xchg
mov
cmp
mov
test
insl
adc
jb
divb
adc
fucomip
add
lock
add
ficoms
push
mov
cmp
mov
and
test
add
shrl
rcll
mov
jno
popa
mov
xor
and
stos
cli
test
adc
mov
ds
cmp
xor
add
cmp
mov
sub
adc
mov
jns
ja
stos
jae
xor
mov
jbe
mov
cmp
nop
mov
xor
mov
add
adc
divl
insl
mov
mov
mov
cmp
mov
insb
out
jle
mov
jmp
cmp
dec
fldenv
push
mov
mov
fnstenv
add
rcll
xor
lahf
cmp
test
pop
cltd
mov
sti
aas
iret
clc
lret
iret
and
adc
jnp
lret
sub
idivl
cmpsb
fldt
mov
lret
adc
mov
lret
pop
cmp
call
stos
and
jbe
xchg
xor
divb
mov
stos
mov
stc
test
dec
cmc
sub
xor
je
lahf
call
sti
cli
icebp
bound
std
jae
sub
ret
xor
shlb
ljmp
and
jg
mov
xor
jns
into
cmpl
mov
jg
mov
cmp
repnz
movsb
sub
lods
mov
pop
fnsave
cmp
adc
jge
xor
xor
lea
mov
mov
mov
mov
jmp
icebp
mov
int
jg
mov
ja
enter
pusha
clc
adc
xor
jb
stos
stc
inc
das
icebp
adc
xor
jmp
negl
xor
jg
cmp
jo
mov
mov
lods
mov
sub
add
hlt
cmp
xor
mov
jle
jo
push
int
jg
ds
add
mov
inc
in
loop
jle
mov
andb
mov
xor
inc
cld
mov
adc
mov
scas
jnp
mov
lods
jge
inc
push
lret
and
cmp
stos
aaa
inc
das
icebp
pop
mov
xor
cmp
sbb
mov
xor
ss
mov
clc
mov
icebp
lods
jns
jge
icebp
pop
jg
jl
add
aam
repnz
loope
xchg
cmp
cmp
mov
sub
adc
mov
rcrl
sti
mov
mov
mov
add
rcrl
mov
jnp
rorl
mov
xchg
mov
into
enter
xor
cli
and
stos
sbb
jno
mov
icebp
aas
popa
cmp
int
jg
jp
fldl
mov
cmp
sub
shl
ss
mov
in
popa
dec
jg
mov
ljmp
pop
jg
xor
push
jns
and
fstps
jae
mov
and
jg
iret
jae
adc
decb
mov
pop
add
jg
cld
sbb
in
mov
loopne
mov
sub
xor
cmp
hlt
cmp
std
adc
mov
out
rcrb
divl
addr16
cli
mov
mov
jo
mov
fildll
ss
aas
icebp
xor
mov
jg
sub
sarb
enter
loope
jg
aaa
std
jns
mov
icebp
xor
nop
mov
cld
nop
add
subb
xor
mov
xor
out
cmp
pusha
sbb
insb
mov
bnd
int
jg
ss
jo
shlb
jg
cmc
mov
mov
mov
mov
push
lea
mov
jmp
sub
mov
aas
jl
mov
xor
adc
insb
stc
stc
adc
sbb
clc
mov
mov
cmp
pop
cmp
adc
mov
and
andb
cmp
mov
inc
add
imulb
push
sbb
jge
xor
mov
mov
adc
mov
jg
xchg
icebp
ds
loope
mov
jb
push
mov
adc
repz
or
push
arpl
or
pop
adc
dec
mov
repnz
ret
jno
pop
into
xchg
add
hlt
bound
pop
into
add
inc
rcrb
and
mov
mov
into
adc
add
icebp
mov
hlt
sar
mov
sub
pop
into
mov
jne
jb
and
mov
xchg
and
mov
hlt
mov
and
xchg
cli
jno
sbb
adc
divb
fidivs
std
sub
lret
ret
popa
adcb
movsb
hlt
stos
jo
xor
shlb
pop
stc
mov
ss
lahf
sbb
scas
sti
push
mulb
je
mov
cld
cmp
jne
mov
jecxz
xor
jbe
mov
mov
repnz
adc
jns
jbe
jae
icebp
push
add
mov
repnz
jnp
shlb
leave
les
mov
sahf
xchg
mov
jmp
jo
add
stos
xor
icebp
xor
cs
test
xor
dec
sub
jge
ds
scas
cmp
jge
insl
mov
jb
mov
mov
lahf
jmp
mov
in
adc
add
fisubrs
add
sbb
sarl
out
sti
ja
sbb
sbb
mov
jp
xchg
mov
jo
fimull
loop
or
jnp
or
rol
mov
lock
jnp
push
jg
ret
jno
cld
ret
loopne
jl
out
mov
clc
pop
mov
xor
inc
fcomip
cmp
stos
add
mov
jle
or
sub
cmp
sub
dec
or
push
mov
negb
xchg
rorl
mov
and
hlt
es
stos
mov
jg
sub
jo
icebp
andb
sbb
push
cmp
hlt
jne
call
cs
sbb
out
icebp
in
outsl
cmp
mov
jb
fisubs
xor
mov
mov
lock
inc
mov
pushl
jnp
cmc
and
cmc
xchg
sub
or
stos
sub
xor
scas
mov
adc
fdivr
sub
stos
aaa
adc
lock
xor
jo
push
icebp
mov
aaa
jae
jge
ja
mov
cmp
mov
xor
cld
jl
xor
cld
adc
adc
sar
xor
shrb
inc
dec
leave
mov
push
jl
jg
jnp
repz
cmp
std
cmp
cmp
dec
stos
mov
push
push
lcall
imull
idivb
sbb
mov
jno
repnz
xor
dec
mov
mov
xor
xchg
mov
jmp
lret
cmp
ljmp
xchg
mov
cli
cmp
cmpsl
cmp
sub
jg
mov
xchg
xchg
cs
jg
repnz
jl
jbe
imul
cmp
xchg
xchg
and
ds
mov
sbb
into
repz
pop
lock
mov
push
insl
jmp
xor
fwait
test
jae
std
dec
scas
ja
jno
push
inc
repnz
faddp
xor
repz
jo
cmp
sub
out
scas
mov
cmp
xchg
popf
outsb
xor
xor
and
mov
mov
cmp
pop
mov
add
shl
ds
push
aad
popf
inc
jg
and
mov
jns
push
stos
jl
jg
push
jbe
mov
cli
pushl
mov
jb
repnz
stos
jns
jg
inc
mov
cmp
jne
add
stos
inc
jg
sarl
lods
ja
and
aam
fnsave
aaa
scas
mov
mov
jnp
mov
xor
mov
push
add
cmp
js
repz
mov
mov
mov
into
sti
cmpsb
pop
cmpl
and
aad
fwait
loop
jb
jg
mov
popf
inc
mov
incb
jns
sub
mov
popf
aad
fwait
loop
push
dec
jg
mov
mov
push
pop
into
mulb
jl
lods
mov
jg
xchg
mov
mov
xor
mov
jo
ljmp
push
xor
sbb
jb
stos
jns
rcl
aas
int
mov
adc
jg
data16
rcrl
sti
mov
jne
jg
mov
mov
shrl
test
pop
mov
jnp
ss
iret
bnd
js
mov
mov
jg
dec
xor
xchg
sbb
aad
out
loop
je
enter
cmp
fprem
or
ja
hlt
cmpsl
testb
sub
clc
repnz
std
add
mov
jb
mov
pop
into
jge
cmp
clc
mov
hlt
hlt
fstpt
pusha
stos
mov
aaa
push
xor
sti
adc
push
idiv
test
and
mov
std
cmp
repnz
adc
ja
mov
adc
mov
xor
cmp
xchg
enter
pop
incb
xchg
and
fnstenv
adc
mov
into
jne
push
sahf
cmp
jne
clc
iret
xchg
cmp
je
mov
test
adc
sbb
jbe
ss
ja
sbb
into
jg
es
jns
js
sub
mull
cmp
mov
sub
cmc
jl
sub
mov
adc
insl
ja
push
fdivrs
insl
ja
bswap
mov
cmpsl
movsb
sahf
jl
jne
xchg
jbe
movsb
mov
icebp
mov
addr16
jg
in
pushf
cmp
jno
xchg
shl
mov
stc
add
jo
push
clc
cld
test
icebp
cmp
jno
stos
clc
mov
pushf
jbe
mov
hlt
dec
cmp
sbb
test
jb
adc
mov
stos
je
ss
arpl
jg
mov
mov
mov
xchg
loopne
movsl
mov
fcmovu
mov
out
clc
sar
lcall
adc
and
mov
mov
test
pop
clc
pop
sub
xor
es
inc
nop
xchg
inc
fnstsw
lret
std
mov
adc
xor
bnd
sahf
xor
mov
pop
jg
sub
jno
scas
jg
and
divl
int
clc
and
push
xchg
xchg
xlat
jno
jmp
adc
ss
clc
jno
add
adc
jnp
xchg
mov
lock
outsb
clc
jns
add
bnd
adc
jg
pop
xor
push
cli
rcll
clc
negl
out
xor
xchg
clc
jne
div
sahf
ss
rep
aaa
mov
movsl
jno
int
clc
jg
jmp
adc
mov
clc
fcmovne
jg
mov
sqrtps
js
and
pusha
adc
xor
sub
sahf
loop
clc
hlt
mov
xor
xchg
mov
pushf
jnp
decb
xchg
mov
xlat
mov
and
jg
adc
hlt
add
fimull
add
ret
stos
ret
jb
ljmp
scas
int
hlt
ss
mov
jns
and
inc
loopne
std
mov
xor
mov
xor
loopne
mov
ljmp
mov
adc
insl
pushl
mov
ror
adc
add
mov
andb
iret
adc
jns
mov
divb
loopne
and
jg
mov
mov
notb
shr
aam
adc
add
inc
out
sbb
mov
pop
pusha
push
ja
repz
jg
and
mov
and
enter
andb
sbb
js
repnz
xor
roll
xchg
insl
loope
and
loope
jg
mov
adc
and
cmp
fnsave
icebp
adc
stos
mov
and
jmp
call
jg
repnz
repz
lret
cmp
div
push
aaa
cmp
push
ss
push
cmpsl
mov
xchg
leave
jno
jmp
adc
hlt
mov
xor
add
add
add
popf
int
cmp
int
mov
add
repnz
and
cmp
negb
lahf
int
jg
jo
cld
mov
inc
cmp
repnz
mov
sub
dec
hlt
cld
mov
jl
cli
add
sub
mov
je
sub
adc
jg
mov
and
xor
pop
xor
cmc
jl
sbb
sbb
xchg
shlb
jae
fnstsw
jge
jmp
and
leave
cmp
icebp
sahf
cmp
mov
divb
popa
lock
mulb
or
mov
jb
imul
out
xchg
adc
ud0
and
out
mov
lods
cmp
push
sahf
xlat
mov
mov
cmp
mov
inc
cmp
adcl
xchg
push
pop
xorb
jb
wrmsr
sbb
fistpl
jle
and
sub
repnz
stos
and
aas
adc
jnp
mov
hlt
mov
adc
pop
out
cmc
fdivrl
mov
enter
pop
out
mov
mov
and
shlb
into
ja
jl
jns
mov
jnp
imulb
js
cmp
jg
push
ljmp
orb
mov
dec
nop
jg
xor
adc
jg
cmc
pop
into
cmc
pop
mov
pop
mov
nop
jg
in
fucom
mov
aad
mov
adc
int
jg
push
mov
loope
jno
xor
vhaddpd
push
lock
divl
std
mov
and
mov
idivb
jnp
pop
xor
mov
arpl
sbb
pop
xchg
adc
shll
test
xor
jge
fcmovne
jg
ss
out
jne,pn
xchg
stos
jne
aaa
std
jmp
jnp
pop
jmp
addb
std
jmp
jnp
out
stos
push
addb
std
jmp
jnp
and
mov
jnp
testb
aas
popf
rclb
jg
std
xor
xor
xor
jo
inc
jg
mov
dec
loopne
stos
jae
and
mov
fs
jg
mov
dec
loopne
stos
jae
adc
mov
fs
jg
and
loope
incb
add
popa
mov
and
mov
jbe
jno
icebp
mov
jmp
jnp
push
jnp
mov
mov
sub
repz
mov
out
jo
xchg
mov
cmp
aad
jo
mov
and
add
cli
xor
or
mov
dec
aaa
pusha
into
jo
sub
cld
les
movsl
mov
jecxz
ss
and
jg
sub
mov
jg
mov
mov
rcrb
imul
mov
std
sub
iret
adc
dec
jo
icebp
xor
adc
ss
std
adcb
stos
mov
mov
sbb
addr16
cltd
cmp
nop
xor
repnz
mov
lahf
sti
aaa
xchg
dec
ss
jo
repnz
ror
mov
cli
repnz
pop
mov
cmp
repnz
loopne
xor
enter
cmp
mov
icebp
ret
jae
mov
xor
mov
aas
mov
jmp
iret
jnp
jg
les
rclb
loope
fxch
sar
dec
mov
mov
mov
leave
iret
shll
iret
jge
icebp
cmp
std
mov
repnz
test
orl
mov
repnz
icebp
call
mov
icebp
ljmp
divl
inc
xor
jg
sub
fiaddl
iret
loope
out
les
lds
ss
out
fidivrs
cwtl
shrl
hlt
xchg
mov
xor
cwtl
mov
andb
cs
icebp
sbb
loopne
xor
jg
cmpsl
ja
dec
xor
dec
iret
xchg
mov
mov
mov
inc
jg
cmpb
cs
adc
pop
mov
xor
jg
mov
iret
cmp
iret
ljmp
loope
pop
dec
push
ds
pop
lock
loopne
lods
aaa
mov
mov
repnz
pop
fnstcw
enter
xchg
out
lcall
mov
stos
mov
sbb
cmc
inc
fstpt
loop
stc
data16
push
dec
hlt
divl
call
adc
xor
fs
cs
push
mov
cmp
jg
push
add
subb
jg
icebp
inc
mov
push
jo
jg
pop
out
sbb
out
sbb
adc
sub
inc
jg
jle,pt
stos
ss
and
sbb
icebp
mov
mov
jg
jmp
xor
inc
jg
mov
scas
lret
imul
imulb
enter
movsb
lret
imul
in
les
push
and
and
mov
jb
mov
cs
insl
jg
add
ss
iret
jb
inc
mov
repz
add
testl
negl
sti
call
jg
mov
std
addb
out
cwtl
xorb
xorl
lock
mov
mov
leave
mov
ss
dec
in
aaa
insb
mov
dec
jae
ja
fs
jg
mov
adc
push
xchg
std
xadd
jecxz
mov
xor
repz
repnz
mov
inc
repnz
add
mov
xor
hlt
pop
dec
cmc
push
xchg
jg
clc
sbb
out
loop
repnz
sti
mov
jne
je
mov
sahf
ret
cmp
add
push
ja
inc
mov
sub
loopne
push
xor
adc
aas
movsb
jg
pop
cld
mov
jo
jle
sub
shl
mov
movsb
jb
sti
cmpl
jne
mov
xchg
sahf
add
or
xchg
mov
leave
jg
xchg
addb
loop
icebp
mov
insl
pop
jo
mov
ljmp
aas
pop
jg
mov
jg
ret
pop
mov
addr16
jne
mov
xor
mov
insl
sarl
iret
jnp
push
out
jge
push
out
sub
cmpsl
jnp
insl
mov
jne
add
cmp
adc
mov
mov
mov
adc
mov
js
cmp
xor
mov
jl
adc
and
mov
push
mov
xor
leave
mov
xor
xchg
jae
mov
adc
mov
push
inc
enter
leave
jl
sarl
movsl
jl
adc
pop
jae
xor
stos
jnp
repz
pop
repnz
mov
xor
loop
mov
shlb
ds
xchg
add
notl
jae
mov
inc
test
mov
adc
push
cpuid
adc
loopne
jo
xchg
dec
cmp
je
mov
lahf
xor
mov
dec
push
unpcklps
lock
lret
mov
nop
mov
cld
jnp
aas
mov
xor
sbb
dec
cmp
and
jg
and
adc
xchg
xor
mov
mov
fucomi
icebp
and
pusha
mov
xor
and
xlat
xor
mov
and
mov
xor
mov
and
mov
sti
sbb
sarb
mov
jbe
xor
addb
and
mov
jmp
mov
mov
xor
leave
push
enter
subb
jg
icebp
mov
stos
cmp
sub
cmp
in
mov
push
mov
xor
lret
ret
test
jnp
push
loopne
mov
hlt
inc
pop
xor
jg
adcb
mov
cwtl
adc
notl
out
jno
adc
lret
pop
sahf
cmc
xor
andl
aad
les
pop
jg
lcall
jg
push
push
movsb
xor
mov
sbb
mov
push
divb
movq
push
mov
and
fdivl
fnsave
cmp
xor
repz
cmp
push
dec
xor
and
mov
popf
jg
icebp
aaa
les
ss
dec
in
inc
cltd
xor
repz
fst
mov
aaa
push
mov
fs
jg
push
cmpb
not
mov
aaa
push
mov
fs
jg
lock
dec
xor
fcmovnu
mov
push
movsb
jnp
fcmovne
jg
mov
test
testl
xchg
mov
jg
mov
mov
sub
pushf
mov
mov
orl
mov
jle
movsb
movsb
fstpt
fstpt
mov
jno
mov
mov
xor
xor
mov
push
je
arpl
mov
mov
repnz
and
mov
lods
cld
adc
jbe
neg
push
mov
mov
pusha
jno
outsl
cld
sub
sahf
and
std
mov
jg
jg
fdivrs
cld
ss
call
sahf
mov
jmp
jo
cld
mov
cld
cmp
and
jo
dec
std
jmp
les
cld
dec
and
jg
and
nop
cld
jbe
cs
or
repz
jg
clc
mov
test
push
je
inc
lcall
je
je
je
leave
lods
mov
mov
icebp
sarl
cld
negl
inc
cmp
cld
sub
out
cld
jnp
jp
test
cmpb
jg
sti
cmp
push
pushl
mov
cmp
dec
test
mov
xchg
stos
pop
jmp
cmp
mov
test
inc
mov
insb
iret
and
mov
mov
jo
mov
mov
in
cs
lcall
icebp
mov
mov
idiv
ror
jg
xor
mov
call
sbb
sbb
mov
test
in
lahf
jno
into
jge
pop
mov
icebp
xchg
jae
enter
jb
repnz
lds
jne
repnz
cwtl
sbb
mov
repnz
into
repnz
push
repnz
xor
cmp
mov
aas
jnp
stos
repz
cmp
xor
jne
xor
add
out
inc
pop
mov
add
dec
mov
cmp
popa
jl
sub
sub
xor
and
sbb
icebp
mov
bound
lock
mov
jg
jl
test
inc
push
std
lds
jnp
pop
jg
hlt
fisubl
jnp
jae
stos
jbe
mov
je
arpl
cld
push
cmp
leave
ds
push
xor
addr16
nop
aas
out
hlt
test
pop
cli
adc
xorb
sti
idivl
pushf
insb
jl
jl
pusha
cmp
push
xor
pop
adc
jp
push
lods
push
xor
xchg
xor
and
out
js
je
xchg
and
mov
adc
cmp
add
mov
popf
xchg
cld
sbb
mov
popf
xchg
cld
jbe
and
mov
pop
popf
xchg
cld
jbe
and
mov
sbb
or
mov
xor
jb
mov
icebp
push
adc
lock
mov
push
into
xor
scas
sahf
mov
stos
scas
add
adc
lock
lahf
lret
mov
mov
sahf
mov
lods
jg
clc
adc
loopne
jo
outsl
sub
mov
mov
jae
pop
loopne
push
lods
jne
repnz
sar
pop
dec
dec
mov
jo
lea
repnz
mov
jnp
sar
fnstsw
fucompp
mov
pop
jmp
orl
subb
jg
add
std
lcall
jle
add
test
push
jns
gs
lods
std
lea
cmpsl
push
js
rep
mov
insl
fs
dec
mov
lea
jbe
repnz
jg
das
push
push
jns
jg
nop
sar
adc
cs
ds
inc
push
jns
lret
jmp
mov
jns
in
ucomiss
jg
icebp
cmp
ret
jns
pop
jg
mov
in
out
ljmp
aad
std
cmpsb
out
push
bnd
icebp
mov
leave
jns
jle
pop
jg
decl
gs
mov
jg
mov
mov
lods
ficomps
cs
mov
sti
cmp
notl
lret
mov
pop
into
mov
das
jg
icebp
lods
scas
dec
mov
lea
jns
pop
jg
out
inc
dec
jl
std
mov
jge
mov
ljmp
fs
dec
jnp
xchg
lret
sbb
adc
mov
scas
cmp
sahf
scas
sbb
xor
ror
jg
mov
sub
std
sbb
idivl
icebp
aaa
repnz
jnp
popa
jns
jg
insl
mov
dec
jns
sub
mov
stos
mov
sub
dec
ds
shll
lds
js
push
jl
mov
adc
idivl
pop
xor
push
jl
jg
je
dec
add
in
outsl
shr
cmp
mov
enter
jg
addr16
jg
pop
mov
jl
pop
cli
fbstp
shlb
jg
outsb
mov
mov
shrb
movsb
jg
pop
mov
ja
jae
jb
out
jle
icebp
mov
repnz
lods
mov
xchg
xor
jg
outsb
mov
sbb
xchg
mov
loop
addb
jo
dec
out
mov
mulb
jo
jbe
add
push
loop
sbb
ss
mov
and
cs
popf
jg
cmp
push
mov
insl
aas
sbb
out
cmc
jmp
sub
fnstsw
je
pop
jo
inc
mov
cld
inc
add
loope
std
movq
push
xchg
lret
into
je
xor
xor
stos
cli
sbb
icebp
mov
and
and
imul
inc
cli
mov
cmp
pushl
ljmp
inc
sub
scas
incl
jg
shlb
lods
xor
mov
inc
sub
and
cld
repz
jg
mov
fimull
mov
xchg
ret
loope
inc
jnp
fwait
loop
iret
dec
jg
mov
pushf
mov
mov
out
mov
icebp
pop
lahf
div
and
scas
jg
mov
fimull
jg
stos
into
cli
mov
hlt
jbe
xchg
rorl
jb
jg
jno
movsb
mov
or
addr16
repz
pop
icebp
mov
movl
std
push
loopne
mov
mov
jle
jae
inc
icebp
xor
sbb
mov
mov
jne
aad
pop
mov
jb
pop
mov
sahf
jle
cmp
repnz
inc
mov
jge
ja
mov
cmp
lock
and
add
mov
mov
neg
add
stc
xchg
pop
cmp
xor
stc
testb
mov
jo
mov
or
ljmp
xor
ficoms
push
xchg
mov
in
xchg
cs
jg
in
inc
pop
mov
pop
jae
je
xchg
lods
jbe
xchg
loop
mov
mov
ret
js
adc
xchg
bnd
xor
mov
mov
jle
mov
mov
pop
out
jae
jge
lods
out
xchg
xchg
js
lods
out
pop
popf
test
jge
popf
out
arpl
cmp
popf
mov
out
xchg
xchg
repz
jae
sti
or
jge
xchg
jge
push
ss
inc
insl
lods
jb
insl
and
fisubrl
dec
pop
fwait
xchg
pop
gs
incl
jge
dec
lea
std
dec
jb,pn
cmp
mov
or
jnp
lds
iret
sbb
pop
mov
jbe
inc
jo
fcmovu
inc
jae
ljmp
and
mov
rorl
mov
add
jle
add
or
xchg
ret
adc
sarl
cs
scas
jno
adc
jmp
dec
cmpsl
xor
jno
lods
jnp
sti
adc
mov
pop
jne
repnz
and
notb
lock
mov
repnz
mov
mov
jns
sbb
inc
cli
mov
jg
xchg
dec
jns
inc
mov
and
push
ja
cli
cltd
mov
add
scas
fimuls
mov
mov
cmp
test
mov
mov
adc
test
pop
out
and
in
jno
aad
cltd
mov
mov
mov
mov
and
mov
jge
leave
test
pusha
lahf
cli
mov
jnp
std
idivb
popf
mov
adc
fdivrs
jg
jns
sbb
mov
jg
lods
int3
mov
xor
clc
inc
aaa
movq
push
lcall
scas
jg
pushf
jnp
pop
jg
icebp
imul
dec
lods
lock
in
mov
jl,pt
mov
test
mov
xor
sbb
jl
jl
xor
mov
lret
mov
insb
fnsave
jl
cmc
add
pusha
movsl
lock
rcrb
popf
repz
mov
loopne
out
push
mov
imul
push
lock
loopne
pop
sbb
mov
mov
jp
jecxz
lock
test
jecxz
lock
or
jo,pn
jg
sub
mov
push
mov
dec
jg
mov
std
imul
mov
jg
sbb
cmp
in
xor
dec
jg
mov
bound
pop
pop
or
je
movsb
adc
mov
ljmp
mov
jmp
xchg
dec
jg
and
dec
lock
sbb
ljmp
mov
insb
ds
mov
push
notb
jg
stos
cmp
jmp
int
testl
sub
xchg
mov
mov
mov
mov
in
repz
out
mov
push
fwait
dec
jl
pop
mov
xor
pop
mov
mov
lret
cmp
mov
mov
cmp
mov
sub
mov
inc
repz
into
mov
jg
mov
std
andb
jo
hlt
repnz
xor
xchg
mov
lods
addb
jb
xchg
cs
divl
mov
lods
xor
lcall
aas
and
cmp
mov
pop
lods
jg
add
push
xchg
xchg
xor
mov
mov
mov
js
clc
pop
jg
mov
jns
sbb
mov
lahf
xor
jg
lods
mov
js
sbb
hlt
jl
push
mov
mov
xchg
sbb
cmp
pop
mov
das
repnz
cli
mov
dec
movsb
arpl
hlt
test
stos
rcll
shrl
into
xchg
adc
addr16
hlt
mov
jae
mov
sbb
aaa
pop
add
and
jae
repnz
repnz
jge
mov
pop
add
and
mov
or
repnz
movsb
arpl
cld
pop
cld
jnp
mov
repz
xor
hlt
scas
xor
loop
mov
xor
mov
inc
jp
xchg
iret
push
xor
sub
and
call
mov
mov
frndint
push
mov
dec
test
xor
out
mov
mov
test
sbb
imul
sbb
cmpl
mov
mov
fnsave
cmp
hlt
sbb
dec
jb
sysexit
xchg
xor
mov
and
dec
call
push
jo
mov
aas
mov
mov
imul
test
mov
cmpsb
enter
xchg
stc
and
sbb
cmp
jno
mov
cmp
ja
mov
xor
repz
sbb
aas
xor
jae
dec
cmp
repz
push
aas
jno
lods
jnp
jl
lret
xor
sub
mov
jle
and
mov
setp
lock
mov
jae
lods
jp
dec
jns
push
repnz
push
mov
lcall
add
pushf
mov
dec
dec
cmc
mov
stc
jbe
sbb
dec
cmc
sub
xor
js
aaa
jns
xchg
mov
cmp
or
ds
or
adc
and
idiv
dec
adc
push
mov
xchg
jmp
movsl
mov
je
cmp
mov
call
jae
stos
mov
mov
movsl
push
mov
cmpsl
std
js
mov
icebp
xor
loop
stc
mov
jnp
push
clc
rolb
cltd
sahf
cmp
shl
mov
les
and
pop
jg
cmp
mov
out
jp
icebp
mov
stos
idivb
repnz
sbb
jg
mov
cmp
and
and
adc
jp
cs
xor
jns
jno
pop
mov
mov
cwtl
adc
ret
push
and
imul
sbb
mov
pop
jne
inc
jg
mov
test
jg
pop
mov
lock
adc
bound
test
loopne
jle
jmp
insl
adc
xor
jp
dec
adc
mov
dec
ja
pop
repnz
jg
out
clc
rolb
cmp
aas
aas
icebp
mov
arpl
inc
jg
movsb
jne
dec
jp
sub
pop
jne
scas
dec
addr16
jg
sahf
jno
jp
psrlw
sub
sbb
icebp
aaa
loop
repz
jp
into
and
jg
xchg
mov
mov
xor
jne
or
mov
jmp
jg
pop
xor
icebp
lea
clc
clc
test
clc
call
jg
test
in
in
into
repnz
std
or
loope
mov
jg
call
scas
jno,pn
and
popa
jg
sub
lahf
je
mov
xor
push
nop
jp
fsubr
cmp
sbb
inc
jmp
cmp
xor
test
cmp
mov
notl
sbb
mov
xor
clc
pop
jg
xor
mov
repz
cs
mov
xor
cmp
xor
jg
fs
jp
mov
into
je
icebp
xor
pop
xchg
sbb
pop
jp
sub
sub
cwtl
out
mov
icebp
addr16
jno
lahf
rorb
sub
mov
mov
nop
into
mov
push
lods
add
mov
icebp
pusha
stos
mov
out
icebp
push
push
jp
sti
xor
mov
cltd
mov
add
cmpsb
in
repz
ss
mov
repz
mov
clc
cmp
jmp
loopne
repz
fldcw
hlt
mov
jl
mov
dec
movdqu
xchg
insb
xor
hlt
jge
pop
mov
pushf
push
ss
pushf
xchg
mov
lods
dec
pop
mov
rcrb
cmpsb
scas
mov
lea
mov
mov
cmp
pop
cli
aad
fs
jg
xor
mov
stos
sub
mov
fstpt
pop
lahf
aad
repz
jg
or
jl
es
xchg
jle
jb
mov
mull
js
push
xchg
and
cmp
add
lahf
inc
xlat
icebp
out
sti
push
cmp
lcall
nop
stos
ds
jge
hlt
cmp
and
xchg
divl
movsb
aas
fcomps
pop
cmp
icebp
and
cmp
pop
fdivs
out
mov
out
dec
adcb
or
sarl
xor
aas
je
mov
das
xor
shlb
clc
xor
out
xchg
rcrb
mov
pminub
mov
add
idiv
xor
mov
out
pop
dec
jg
cli
adc
mov
clc
dec
sub
mov
lods
out
andb
xchg
fnstsw
mov
pushl
xor
mov
mov
lods
mov
mov
es
scas
adc
cmp
sbb
mov
pop
sahf
mov
cld
mov
xchg
mov
divb
sahf
push
jle
fimull
outsb
adc
jbe
ja
jne
outsb
ljmp
push
xor
std
mov
jae
add
icebp
jg
dec
andb
jmp
mov
and
adc
mov
push
aas
icebp
aas
das
rcrb
lods
cmp
jg,pt
ds
std
push
jo
pop
stos
das
repnz
sub
mov
xchg
icebp
cmp
mov
std
idivb
push
jg
mov
and
sub
cmp
hlt
adc
shll
sti
and
int
stos
mov
mov
aad
mov
lods
adc
icebp
cmp
mov
lods
gs
mov
jb
dec
in
fwait
push
jg
inc
pop
aas
inc
jmp
pop
out
orb
decb
shll
sbb
in
jg
xor
shlb
ds
inc
cmp
xor
sbb
push
into
push
and
hlt
and
mov
pop
or
out
mov
jns
scas
sahf
repnz
out
scas
lock
sbb
pop
or
out
scas
mov
jbe
adc
repz
into
cmp
xchg
push
xor
mov
ja
in
aaa
ja
pop
sbb
jns
repnz
test
inc
mov
ss
js
repnz
test
inc
mov
repnz
mov
jg
jle
jl
add
mov
rorb
out
or
adc
add
scas
hlt
xor
mov
fdivl
xor
mov
jno
adc
mov
adc
aaa
jae
mov
ja
mov
fnstenv
cmp
iret
jl
ja
ljmp
sub
out
sbb
cmp
mov
jl
xchg
cmp
mov
call
xor
jge
out
roll
mov
mov
xor
mov
sarl
js
ljmp
inc
add
addr16
cmp
inc
push
push
xor
sub
lret
shll
xor
andb
jmp
sub
sub
bound
jne
jge
icebp
mov
jl
push
repz
bound
lds
fs
cltd
repz
mov
xor
test
and
pop
jg
xor
jle
daa
pop
imul
mov
mov
jo
test
dec
shll
sub
mov
mov
addr16
lock
mov
mov
incb
mov
lahf
mov
mov
cmp
cmpsb
jge
pop
xor
and
lods
testb
scas
fnsave
pop
lret
loop
test
mov
jae
mov
mov
scas
jae
jbe
out
cmp
jg
enter
cmp
fs
test
jp
jecxz
mov
aad
cmp
cwtl
adc
mov
aad
jge
movb
mov
mov
cli
mov
push
and
aas
andb
stos
mov
cmc
cmp
jge
jae
into
stc
dec
cmp
cmc
jno
mov
out
push
cwtl
push
jne
mov
pop
cli
out
mov
and
lcall
lods
jg
xchg
jae
std
addr16
mov
cmp
mov
xchg
mov
mov
push
or
fwait
lcall
divl
sti
call
mov
pop
mov
dec
xchg
mov
cli
mov
xor
lret
loop
adc
mov
data16
adc
fs
jg
mov
into
xor
sbbb
negl
lea
dec
pusha
ss
sub
adc
testl
jmp
mov
jno
test
jae
jg
sahf
mov
push
jb
out
mov
push
xchg
fs
jg
and
cmpl
out
leave
std
mov
scas
cmc
xor
les
jg
jmp
in
jmp
ds
in
mov
mov
mov
jae
cmpsb
and
cld
std
sbb
idivl
aad
mov
sbb
cli
mov
std
adc
ljmp
push
cld
pusha
lds
rolb
cmp
pop
mov
and
sub
jno
cmp
imul
into
ljmp
imull
xor
in
loop
imul
ss
cmp
imul
jg
fwait
jae
mov
icebp
add
subb
jg
jbe
mov
mov
movq
xchg
xor
adc
fs
pop
icebp
lds
fs
pop
icebp
inc
nop
cmp
repz
call
jg
stc
adc
popa
icebp
mov
jmp
pop
xor
mov
fs
jg
xchg
mov
jle
sbb
adc
cltd
lock
mov
fcomi
mov
outsl
clc
repnz
in
xor
repnz
and
xor
in
push
inc
cli
aad
mov
fldenv
xchg
mov
add
cmp
mov
test
test
cmp
cli
lea
xlat
cmp
adc
mov
jo
mov
adc
mov
lock
mov
pop
xchg
adc
std
ss
and
mov
rolb
pop
idivb
jnp
mov
test
and
mov
jne
jne
mov
jmp
push
mov
ss
push
inc
and
cli
inc
mov
cltd
ja
hlt
scas
mov
insb
sarb
lret
lods
lods
mov
std
push
jne
loopne
mov
sahf
clc
xchg
jge
mov
test
adc
sarl
inc
movq
mov
add
icebp
mov
shlb
xchg
inc
jg
mov
adc
std
cmp
jmp
add
loop
cmp
jge
mov
mov
clc
pop
jg
push
cmp
add
nop
nop
cmp
pop
cmp
cmp
adc
jg
hlt
mov
test
cmp
pop
test
mov
fimull
in
mov
into
cmp
and
pop
dec
les
inc
jmp
mov
imul
lods
inc
pop
mul
xchg
pop
mov
mov
call
std
mov
and
sbb
cmp
pop
cs
jns
shll
pop
push
in
cmp
jg
sbb
xor
pop
mov
into
xor
adc
hlt
ret
mov
inc
sti
std
add
and
pop
scas
repnz
cmp
gs
mov
dec
cmp
test
add
jge
test
shll
mov
ret
mov
cwtl
jmp
mov
mov
mov
outsb
lock
mov
mov
mov
fmulp
and
mov
mov
pop
and
or
mov
mov
and
repnz
insl
jb
pop
mov
mov
mov
mov
js
pop
mov
dec
loop
mov
push
clc
add
mov
dec
iret
dec
cs
lods
jg
mov
mov
inc
jg
in
mov
jge
insl
enter
out
xchg
sub
movsl
ss
mov
push
jns
fcmovne
jg
loop
nop
mov
es
out
mov
repz
out
xor
mov
push
iret
out
cmpsb
imul
mov
xor
jg
add
jo
push
pop
jle
pop
mov
cs
fnstcw
or
lcall
call
repnz
xchg
add
ja
jnp
jg
insb
xchg
cmp
pop
pmaddwd
cld
dec
lock
dec
out
ja
cmp
call
xchg
cmp
mov
aam
jmp
add
sub
fstpt
negl
pop
adc
subb
jg
sbb
mov
fcmovne
jg
and
xor
dec
popf
jg
or
xor
jg
out
xor
lea
mov
xor
aas
hlt
pop
jg
adc
inc
inc
cmc
xchg
sti
cmp
jne
div
icebp
mov
xor
arpl
addr16
jg
xor
loope
and
add
cmp
jl
loopne
aas
ja
into
repnz
cmp
inc
loope
sbb
or
jp
xor
pop
jg
xor
sar
fidivl
xor
jge
divl
js
loop
aas
sbb
mov
pusha
cmc
jns
roll
mov
cmc
push
inc
mov
test
dec
push
xchg
sti
dec
movsb
mov
out
ss
imull
aas
and
dec
jge
or
inc
test
inc
adc
jnp
jne
stos
cmp
ljmp
jns
out
cltd
jne
insl
stos
jns
sub
sarb
pop
lods
stos
fwait
sbb
add
jno
mov
cmp
jne
mov
mov
jne
jnp
cmpb
bound
mov
es
and
or
mov
push
cli
mov
mov
enter
mov
cmc
cmpsb
dec
jecxz
icebp
cld
dec
xchg
ret
ds
pop
cmc
movq
sbb
cmp
icebp
fst
mov
js
jle
jg
ret
jnp
xchg
mov
js
dec
insl
sub
imul
cs
adcb
xorb
mov
std
mov
dec
jg
cmp
outsb
ja
jp
adc
loopne
jl
or
mov
cmp
dec
pop
mov
cmpl
jo
cli
xchg
test
icebp
mov
push
or
cmp
repnz
ds
ds
test
sbb
ret
sti
cltd
mov
cmp
lds
icebp
pop
das
pusha
cmp
push
aas
mov
cmp
xor
jae
leave
movsl
jo
mov
loop
mov
mov
movsl
jbe
mov
mov
stos
icebp
mov
jge
mov
mov
mov
cmp
cmp
adc
fnstcw
xor
mov
xchg
and
lea
xor
jp
and
cmp
and
pop
add
fnsave
sub
jg
out
movsb
cli
ljmp
mov
fidivs
fnstsw
xchg
jb
cld
jle
or
lods
and
cmc
in
and
jne
in
bound
mov
fcmovne
jg
es
pop
push
jb
or
jnp
inc
jbe
jg
and
jmp
fnstsw
ss
xor
enter
jg
xor
int
xor
inc
sub
jns
inc
jg
div
ja
cwtl
mov
movsl
and
mov
jbe
inc
jg
loop
sti
cwtl
adc
add
cld
out
and
jbe
jg
and
out
push
negl
icebp
mov
imul
cmp
mov
cs
xor
cli
lods
jne
fcmovne
jg
loop
lcall
jbe
mov
cmc
repz
jg
and
cmc
jnp
std
je
sbb
dec
out
mov
mov
ret
aaa
pusha
fnstsw
into
and
jg
ss
hlt
inc
repz
jg
xor
js
shll
lds
pop
jg
cwtl
push
ds
rorl
mov
jl
dec
mov
mov
push
pop
jg
jae
sbb
jg
jae
sub
lods
repnz
lds
xchg
mov
xor
dec
add
std
mov
xchg
jmp
cmc
rcll
ja
pop
jg
push
ja
mov
xchg
ja
dec
adc
mov
in
adc
sbb
inc
push
jle
icebp
cmp
shlb
mov
jno
rorb
out
jnp
popa
jmp
popa
sub
mov
lcall
icebp
and
jo
inc
xchg
jl
nop
jns
arpl
jo
ret
dec
cmp
cli
xchg
icebp
push
arpl
cmp
dec
into
jnp
or
fnstsw
jg
icebp
xor
pushl
push
pop
jnp
jg
sbbb
rorl
repz
mov
or
push
push
movsl
push
out
mov
mov
das
repnz
pop
add
call
jne
and
mov
idivb
loopne
jmp
test
lds
cld
mull
mov
sub
mov
scas
repnz
insl
es
jne
jns
in
mov
clc
xorl
mov
inc
out
cmp
out
ljmp
out
shll
out
jge
adc
jge
add
cmp
out
ljmp
out
sarl
ljmp
jl
fisubrl
and
lcall
icebp
xor
cmp
in
shrb
imul
cmpl
cld
xchg
dec
mov
lods
jo
subb
andb
cmpsl
emms
ljmp
push
jo
ficompl
push
nop
mov
xlat
jns
jp
and
sbb
test
jnp
jle
jo
jb
mov
icebp
push
jne
ljmp
and
jmp
jecxz
mov
and
pushf
cs
jg
icebp
loop
jne
xorb
imul
xchg
stc
push
imul
icebp
push
pushf
mov
imul
insl
jg
imul
clc
shr
cs
lcall
pop
mov
mov
jg
push
lcall
pushl
jg
lahf
xorb
movsl
repz
mov
aas
fs
jg
jae
dec
adc
jp
jo
mov
inc
mov
jg
nop
adc
dec
fnsave
jg
dec
jmp
mov
imul
aas
lock
aas
mov
aas
lods
jae
popf
sarl
int3
mov
das
cs
jg
das
cs
dec
movsl
mov
inc
jg
jno
dec
dec
icebp
enter
add
stc
inc
repnz
stos
shll
mov
fisubs
and
aad
xor
mov
xor
jmp
sbb
inc
sahf
scas
icebp
xor
adc
dec
inc
jg
mov
mov
jmp
cmp
es
mov
push
decb
cmp
mov
std
cmpsl
xchg
inc
jg
std
es
je
sbb
in
rep
fiadds
xor
mov
xor
mov
stc
jge
inc
lock
iret
jnp
ja
jbe
jae
push
dec
mov
repz
jmp
sub
in
cli
es
xorb
into
lcall
mov
cmp
mov
push
mov
jl
mov
push
dec
mov
mov
cmpsl
mov
mov
ljmp
mov
in
sahf
idivb
pop
jge
iret
push
mov
cli
jnp
fcomip
push
pushf
mov
fildll
jb
clc
cmc
divb
xor
ja
mov
jge
pop
jnp
popf
mov
int
jg
outsl
jne
jg
lcall
jg
addr16
push
int3
cmp
hlt
or
mov
jg
mov
inc
jg
idivb
pop
xor
mov
jle
inc
loope
cmp
xor
mov
mov
stos
xor
cli
xor
das
bnd
fidivrs
aad
cmp
jg
outsb
ret
out
cmp
jg
test
into
repnz
pop
jmp
pop
orb
mov
hlt
pop
jg
sub
and
push
stos
dec
iret
imul
decb
lcall
and
ja
and
xchg
jmp
mov
jg
inc
int3
aaa
fdivrl
cs
xor
ds
mov
pusha
stos
mul
dec
aas
aam
cs
jg
icebp
mov
mov
repnz
add
push
inc
ds
aaa
lods
cs
mov
out
inc
outsl
aaa
sub
arpl
mov
pop
push
iret
shll
fnstsw
icebp
cmp
inc
sarl
in
aaa
cmp
jle
xorl
and
push
mov
mov
icebp
repnz
inc
ljmp
mov
and
xchg
lds
mov
out
add
xchg
lahf
std
popf
je
xchg
lock
jo
icebp
outsl
icebp
jno
out
loopne
cld
sti
sub
fwait
sarl
jg
and
xor
repnz
xorb
inc
xor
shl
fwait
inc
jg
loop
ja
je
ljmp
call
loopne
jg
inc
aam
inc
movsl
repnz
repnz
fucomip
int
mov
jg
pop
ss
int
jg
je
repz
jg
je
ja
cmp
push
lods
idivl
cmp
inc
cltd
bnd
repnz
mov
ret
stos
mov
jg
lea
cmpb
test
nop
lea
jg
mov
jo
mov
mov
lods
jne
cmp
jge
mov
dec
std
mov
lock
xor
insl
cmp
mov
repnz
mov
cmp
arpl
dec
and
fwait
jae
movsb
inc
iret
jl
jae
xchg
dec
mov
push
icebp
repnz
loope
sarl
gs
imul
repnz
push
mov
bnd
mov
je
test
repnz
imul
fisubs
stc
mov
out
pop
enter
arpl
es
xchg
shlb
insl
outsb
repnz
cld
cmpsb
arpl
add
mov
cmp
aam
addr16
pop
in
or
or
sti
and
test
cld
std
jo
dec
iret
xchg
mov
dec
xor
dec
sbb
jnp
in
push
jbe
jle
and
fmul
dec
cmpb
fmul
test
ja
movsb
fwait
pushf
mov
or
xchg
insl
pop
repnz
mov
int
xor
repz
dec
int3
aaa
cmp
or
fisubl
mov
shll
jbe
push
push
xor
cmpsl
aas
lds
jne
cmp
and
out
mov
pop
lock
dec
ss
or
or
ret
push
jg
cmp
repz
inc
loop
data16
xor
cmp
rcll
mov
inc
pop
out
jmp
jae
out
popa
cmp
aaa
popa
cmp
push
scas
les
nop
test
aas
push
stos
jns
adc
mov
cld
xor
je
pop
jg
mov
push
inc
mov
jns
pop
stc
sbb
push
ret
jae
fdivr
hlt
aaa
mov
fs
ljmp
push
jnp
push
mov
and
jle
add
stos
add
pop
mov
lcall
adc
ljmp
mov
out
jmp
clc
popa
inc
adc
add
xchg
adc
mov
lret
lcall
sbb
cli
sbb
out
adc
xor
je
inc
xor
mov
aas
and
inc
lret
mov
cmp
xor
mov
xor
pop
rcll
ret
ret
xor
std
or
in
xor
fadd
cmpsl
adc
pop
shl
lods
sti
bound
lods
rcrb
out
cmp
sub
jg
fidivs
mov
int3
push
repnz
jg
xchg
ljmp
lret
repnz
imul
loop
xchg
mov
mov
adc
mov
mov
lea
jns
in
sbb
cmpl
je
xor
call
test
jle
outsb
cld
pop
ds
adc
xchg
fistps
xorl
push
sahf
and
push
movsl
cmp
fnstcw
jo
push
and
stos
rorb
push
jbe
stos
cmp
pusha
icebp
jno
repz
jb
sti
mov
jb
cwtl
jae
dec
daa
jo
shr
lret
push
jns
sahf
iret
jle
lcall
pop
jg
cmp
xchg
add
sbb
xchg
outsl
cmp
scas
sbb
push
lahf
int3
mov
cmp
sbb
pop
xchg
xchg
jo
sbb
xorb
loope
aam
ljmp
stos
cmp
adc
cmp
repz
sbb
sub
jmp
mov
sar
pushf
lock
add
cmp
out
std
lods
add
js
pop
mov
outsb
mov
mov
mov
mov
nop
mov
movsl
cli
mov
mov
lods
fdivp
mov
cmp
and
daa
jp
add
outsb
std
ds
mov
std
cmp
mov
lret
rclb
cld
sbb
divb
insb
xchg
cmp
pushf
xor
jg
sbb
cmc
cmp
cmp
mov
mov
sbb
lods
cmp
pop
in
sbb
js
jbe
loop
mov
lret
add
cld
mov
mov
and
daa
roll
xor
std
stc
mov
scas
stos
cmpsb
pop
jne
int3
mov
mov
scas
cld
sub
stos
pop
mov
mov
xor
mov
mov
mov
daa
loopne
lock
mov
js
xor
inc
jle
add
cwtl
jae
jle
pop
cmc
inc
mov
adc
sahf
jle
pop
cld
push
mov
std
dec
xor
fnsave
call
mov
loopne
in
or
call
cli
in
jge
xor
movsb
adc
call
lock
inc
jae
cmp
lret
outsl
adc
cmp
pop
mov
pop
cmp
mov
ljmp
mov
pusha
push
jle
je
ljmp
ds
notb
lahf
cmp
fsubp
xor
clc
std
adc
mov
paddw
cmp
movsl
jle
fcos
clc
add
mov
sub
jns
dec
push
stos
out
mov
pop
mov
dec
and
icebp
add
fstpt
nop
ss
mov
aad
mov
push
idivb
lods
push
cmp
jmp
or
sub
int3
icebp
jl
idivl
lock
or
fbstp
fimull
fldlg2
or
add
hlt
and
jb
xor
fdivl
xchg
ja
mov
in
outsb
icebp
xor
es
test
adc
cli
sarl
cmp
dec
repnz
add
cli
cmp
mov
stc
push
ds
in
push
inc
incl
sbb
insb
lock
xor
push
push
fnstenv
xchg
xchg
js
cmc
pop
mov
mov
lock
dec
cmp
mov
pop
ds
sub
xchg
stc
decb
fbld
lahf
mov
xlat
cmp
stc
sub
lods
ficomps
aas
loope
cmp
fwait
inc
jns
sbb
jo
jmp
in
xor
jno
negl
pop
jne
fwait
lock
fdivrs
or
mov
xor
cmp
xchg
imul
or
add
xchg
sarb
fucom
mov
cmp
mov
int
mov
notl
in
jbe
jl
sub
mov
stos
mov
jmp
dec
mov
fwait
in
clc
jbe
ficompl
jle
ret
int
stos
push
jle
cmp
shrb
push
adcb
fidivl
pop
xor
mov
adc
cmpsb
stos
sar
pop
decb
cwtl
adc
nopl
mov
pop
mov
mov
mov
clc
stos
daa
jo
jl
rcrb
out
iret
stc
dec
jo
adc
sti
fcoms
mov
inc
test
push
push
add
mov
mov
add
mov
pop
shll
ror
lock
push
xor
xchg
js
jnp
xor
cmp
and
out
cmp
xor
in
add
sbb
icebp
inc
cli
je
lock
aad
jg
add
jne
mov
pop
sahf
jo
std
dec
rcll
pop
cmp
push
xor
insb
and
in
dec
and
jns
loopne
xor
out
hlt
popa
xchg
std
add
shrb
inc
jo
mov
rolb
loop
std
leave
pop
iret
pop
mov
mov
push
pop
jge
mov
xor
cld
adc
imul
or
and
loopne
dec
cld
xor
divl
cmpsb
scas
in
dec
imull
cmp
pop
jmp
repnz
and
leave
cs
daa
jno
and
mov
mov
adc
in
stc
mov
pop
pusha
jo
adc
lods
fidivrl
leave
sub
rorl
shll
stos
pusha
clc
mov
pop
mov
das
mov
adc
lods
sbb
mov
lcall
test
xor
cli
lret
fimull
loope
imul
and
jl
sbb
rcr
jno
and
adc
mov
in
sti
lods
pop
sub
outsb
push
std
sahf
inc
or
xchg
adc
cld
sti
xchg
inc
outsb
sbb
fnsave
mov
xor
dec
repnz
test
call
pop
mov
dec
mov
das
repnz
and
loopne
fimuls
hlt
mov
xchg
lcall
cwtl
stos
stos
nop
fcoml
push
shl
fisttpl
and
jge
je
xchg
scas
pop
jne
addb
dec
aas
hlt
mov
adc
or
fidivrl
aas
js
dec
cmp
aas
push
in
mov
adc
push
xchg
out
nop
add
jo
ljmp
sbb
jns
mov
repnz
add
jge
cli
and
mov
pop
test
fcmove
movsb
mov
loope
jo
fcmove
je
incl
mov
push
fcmove
xchg
rorb
push
lods
and
insb
sarb
scas
mov
push
pop
mov
popf
push
in
hlt
dec
push
adc
xchg
jb,pn
decb
shl
in
data16
pop
jge
stos
mov
repnz
aad
xor
mov
or
jl
xchg
lret
jl
sti
adc
xor
loopne
hlt
sbb
sti
lcall
scas
movsb
add
cmp
dec
rclb
sub
hlt
scas
arpl
pop
mov
or
nop
jno
shll
mov
jb
mov
jo
rorb
pop
mov
call
mov
push
repnz
dec
scas
mov
mov
mov
sbb
mov
inc
je
dec
call
cmpb
lahf
jb
lret
add
add
mov
xor
push
push
cs
daa
inc
popl
cmp
sbb
daa
rclb
dec
les
inc
jno
ret
jb
rolb
or
adc
push
pop
shr
rcrb
mov
pop
xor
lret
adc
mov
rclb
push
cmp
mov
rcr
push
xor
clc
xchg
add
mov
add
aas
lods
daa
or
xchg
popf
fists
lock
cwtl
mov
ds
nop
inc
mov
nop
shrb
pop
jle
aas
cmpsl
mov
into
jnp
jge
mov
cld
sahf
jg
out
pop
sti
popf
pop
ss
adc
push
popf
mov
stos
in
icebp
mov
cwtl
jns
xor
mov
inc
mov
mov
mov
test
insb
adc
rcl
mov
mov
sub
repnz
insl
jg
adc
fsubl
sbb
scas
mov
fnstcw
or
ss
mov
lahf
sub
fisubrl
not
or
mov
and
mov
arpl
mov
mov
iret
dec
mov
mov
lods
xor
fnstcw
insl
xor
pop
lcall
and
jnp
pop
nop
sub
mov
loope
jno
fdivrs
lea
rcll
std
pusha
fldenv
hlt
mov
lds
xor
mov
call
jg
mov
mov
dec
mov
mov
adc
out
iret
rcrl
pop
aad
xlat
scas
sub
ret
mov
xchg
loop
adc
icebp
cmp
jbe
mov
cwtl
mov
cmp
fmul
push
xor
ja
movsl
xor
mov
je
cmpsb
xor
clc
lahf
xor
sbb
imul
shlb
add
cmp
stos
sbb
jp
sti
test
repz
out
loope
adc
jo
and
or
mov
xchg
cmp
js
test
add
jns
xchg
outsl
inc
adc
add
dec
sbb
sbb
inc
hlt
loop
jp
adc
sarb
cld
dec
stc
pop
not
inc
cmpb
aas
cmp
mov
xor
outsb
jg
mov
test
pop
icebp
test
cmp
jg
lods
cld
lods
cmp
cmp
jo
dec
cmp
addr16
cld
lods
cmp
cmp
push
jp
cmpsb
mov
cmp
divl
dec
loope
jl
cld
fisubl
push
ret
inc
pop
icebp
dec
mov
jle
fimull
inc
lds
negl
xchg
lock
mov
xchg
bound
pusha
jbe
loopne
ss
mov
push
mov
cmp
xchg
pop
std
push
sbb
xor
mov
adc
adc
mov
sbb
rcl
xchg
ss
sub
divl
popf
sbb
inc
jle
xor
jle
push
xor
and
add
sub
push
mov
dec
fisubl
add
sub
rorb
cmpb
sti
pushf
sahf
mov
imul
dec
outsb
pop
or
mov
nop
lcall
add
cmc
mov
pop
jmp
mov
jo
mov
ds
fwait
push
mov
mov
int3
mov
mov
xchg
std
stos
fisttpll
lods
mov
ja
iret
push
inc
jbe
cmp
fidivs
push
push
xchg
movsb
mov
cmp
cmp
movsb
jnp
in
call
icebp
jae
ja
sbb
mov
popf
mov
in
mov
stos
xchg
inc
inc
aas
sbb
aaa
out
inc
and
mov
sbb
mov
sysexit
dec
lcall
lcall
leave
sbb
insl
fsts
fdivrs
adc
adc
repnz
push
sub
adc
int
sahf
incl
fnsave
push
jbe
divl
sub
adc
xor
pop
clc
leave
mov
cld
fidivs
stos
sti
push
sti
stc
sti
jl
fcmove
add
fcmovu
pandn
pop
cld
cld
aam
mov
mull
inc
jno
dec
xchg
pop
xor
fisttpl
mov
push
cmp
pop
dec
xchg
ds
mov
cmpl
push
fs
cmp
test
shl
das
inc
pushf
mov
jnp
ror
fs
mov
nop
repz
xor
mov
in
pop
test
popf
test
shl
in
and
add
jnp
loopne
mov
paddsw
sti
lods
popf
cmp
std
dec
aas
xor
and
std
or
jle
inc
mov
jge
adc
cmp
jle
mov
in
jns
icebp
mov
add
jb
les
jecxz
lcall
inc
ss
mov
pop
pushf
jl
jmp
test
inc
jo
cmp
loopne
push
dec
js
push
xor
pusha
test
ret
push
sub
pushl
sti
dec
jae
jno
ret
cltd
div
inc
mov
loopne
jns
in
pop
sbb
mov
push
outsl
iret
mov
cmp
shll
es
dec
lcall
adc
iret
repz
pop
mov
lcall
mul
pop
push
mov
movsb
pushl
cmp
inc
fcmovbe
push
and
xchg
xor
dec
pusha
and
jbe
ss
mov
repnz
push
ds
repnz
sub
sbbb
je
lret
xchg
movsb
idiv
jns
loopne
hlt
adc
mov
xor
mov
pushf
pop
mov
int
pop
xchg
cmp
or
sahf
fidivrs
dec
mov
cmp
notl
jmp
mov
xlat
cli
cld
cmpsl
imul
inc
cmp
mov
ret
daa
sub
nop
nop
jp
inc
push
pop
cwtl
jno
pop
push
pop
add
push
icebp
mov
stos
sbb
je
xchg
mov
mov
adc
out
hlt
mov
loopne
outsb
xor
xchg
aad
jno
sub
clts
shrl
push
jns,pt
loopne
cmp
leave
dec
push
xchg
lahf
push
repnz
rol
rolb
mov
cmpsl
cmp
lcall
mov
roll
xor
cmp
mov
shrl
sbb
lcall
cld
ja
mov
mov
mov
out
sti
mov
mov
pop
cli
pop
mov
xchg
adc
iret
cmp
sbbl
pushl
mov
dec
jl
repnz
xor
dec
adc
mov
add
xor
cs
aad
mov
mov
pusha
aam
cmp
mov
ret
lret
adc
mov
jne
and
push
dec
repnz
pop
lcall
xor
add
jae
inc
ljmp
push
arpl
fwait
inc
sub
xor
ret
sub
mov
out
ds
cmp
adc
mov
cmp
repz
add
cmp
mov
in
into
ss
xor
xor
jnp
ret
repnz
pop
jg
ret
aas
push
aaa
fldl
repnz
scas
jae
add
pop
jns
adc
mov
std
fnstenv
push
sub
ss
xor
and
in
mov
jb
out
pop
adc
mov
subb
mov
xchg
dec
xchg
cld
rcrl
or
cmp
test
jle
notl
sub
rcl
icebp
ret
in
mov
cmpsl
push
pop
add
xchg
sbb
sbb
sti
xor
sahf
mov
cmp
movsl
ds
xchg
xchg
mov
icebp
sbb
pusha
ret
add
xor
nop
stos
adc
leave
push
mov
jns
shr
mov
int
adc
shrl
cmp
out
aad
int
push
push
lock
push
jp
shll
int3
hlt
aam
stc
loope,pn
mov
cld
jmp
add
insb
xor
adc
cmp
pop
and
ds
pop
jl
xchg
scas
jg
pop
out
mov
sbb
jl
mov
xor
call
add
rcll
mov
push
clc
and
sahf
fistl
cmp
fidivs
dec
loope
sbb
std
dec
outsb
lock
pop
inc
sub
stc
sti
mov
fninit
icebp
push
or
dec
in
pop
sub
jge
jo
pop
mov
scas
jnp
outsb
aas
std
fiaddl
pop
dec
pusha
xchg
push
aad
mov
mov
orb
xchg
push
jle
aaa
sbb
push
pop
jnp
in
cmp
sti
push
test
ljmp
jmp
sbb
mov
add
mov
call
cmpsl
scas
xchg
cmpsb
or
fcmovnu
jo
jecxz
js
or
cld
or
pop
call
jbe
pushf
fcomps
jge
or
idivl
jnp
insb
test
push
adc
push
xchg
mov
ds
pushf
jo
push
fnsave
xchg
scas
jge
push
lock
xchg
fwait
decl
adc
aam
sub
adc
jno
add
sbb
repnz
icebp
stc
scas
adc
mov
das
not
sub
ljmp
push
jmp
jns
fsts
sbb
in
js
sbb
int
mov
push
mov
aas
dec
jge
xchg
icebp
clc
sbb
or
fmul
aam
outsb
jnp
sub
insb
fnsave
pop
sub
into
xchg
mov
aaa
loopne
rcr
repnz
push
sbb
push
enter
push
xchg
push
jo
mov
lods
sub
je
in
iret
xchg
test
sti
icebp
mov
cld
lahf
lcall
mov
dec
leave
mov
ror
cmp
dec
rcrb
sbb
scas
jl
mov
data16
mov
into
sbb
pop
xor
hlt
sbb
cld
out
pop
loope
cmc
data16
fnstenv
sbb
pushf
notb
jo
sbb
jb
std
xchg
fwait
pusha
xor
repnz
test
sbb
aad
jnp
shr
adc
lock
call
outsb
mov
or
div
xor
xchg
clc
xchg
clc
fstpl
adc
fists
int
mov
mov
into
xlat
loope
jmp
mov
insl
sbb
call
rorb
mov
sbb
popf
or
pop
xor
hlt
mov
in
xor
mov
mov
aam
adc
in
mov
jne
icebp
sbb
sbb
mov
pop
mov
pop
fs
loopne
push
rcll
in
jp
mov
and
pop
cli
lret
test
adc
fisubl
filds
mov
xor
scas
cwtl
movsl
jne
dec
xchg
fstps
mov
fistpll
xor
cld
push
nop
adc
loope
cmc
jnp
sti
out
adc
push
sbb
lods
pop
push
xchg
mov
clc
xor
ja
imul
int3
pusha
cmp
lock
test
mov
adc
cmp
aad
mov
sbb
mov
jnp
cld
jmp
xor
sbb
push
stos
mov
push
notl
fmul
es
pop
clc
dec
sub
shlb
sbb
cld
rcl
fdiv
sub
fiadds
jnp
js
test
pop
popf
jns
mov
dec
rcrl
cmp
stos
adc
movsl
sbb
adc
pop
std
lcall
adc
mov
sbb
pop
xor
jns
cmpsb
nop
aaa
aas
mov
clc
xor
or
push
cld
fisubs
or
fcmove
mov
jo
mov
movsl
sbb
mov
dec
aad
pushf
push
sub
xchg
xchg
outsl
out
push
stos
lock
cmpsb
rclb
sub
mov
mov
push
sahf
cltd
xor
pushf
fsubl
jnp
loopne
cvtdq2ps
mov
adc
jae,pt
sbb
je
cld
loope
sub
mov
jg
jae
add
stc
cmp
cli
aas
in
mov
ss
int3
jno
arpl
pop
sub
loopne
orl
stc
cmc
imul
mov
mov
cs
push
mov
mov
sub
aas
pop
xorl
cmpsb
fsubrl
sbb
sti
pop
cwtl
movsl
cmp
jo
clc
cmpsb
push
ja
push
jb
sbb
mov
fnstenv
mov
jbe
mov
cmc
cwtl
sbb
jbe
bnd
mov
adc
pusha
lods
mov
mov
xchg
cmp
fwait
cmpsb
jl
dec
jno
leave
cmpl
jg
push
sbb
sarb
pop
sbb
mov
aam
movsb
xor
lea
cmp
lret
test
push
mov
fidivrs
sbb
add
insb
ss
sti
in
xor
scas
jl
fstps
pop
into
jg
pop
xchg
stc
jecxz
cmp
jnp
push
stc
xor
lock
add
rcl
and
jne
into
jns
or
push
xor
mov
sbb
xchg
pop
sbb
adc
mov
stos
lret
pop
mov
scas
pop
out
push
inc
pop
sqrtps
fldcw
out
pop
movsl
in
dec
scas
jb
push
mull
xor
xorb
ja
cmpsl
mov
xchg
cmp
pop
loope
aas
stos
sbb
pop
jecxz
cmc
es
jae
repz
fwait
mov
mov
pusha
jl
sbb
int3
lcall
movsl
aas
rclb
mov
loopne
jbe
xlat
xor
mov
nop
test
cmpsb
into
pop
push
jo
dec
or
mov
jmp
mov
fcompl
pusha
into
decl
mov
pop
mov
push
jle
adc
cwtl
fistl
mov
clc
inc
add
sbb
fsts
stos
out
jge
push
mov
fstp
push
mov
cld
xchg
inc
stos
cld
pushf
lods
ds
cmp
ja
sbb
xor
scas
pop
adc
jg
int3
pslld
adc
andl
in
adc
fnstcw
out
mov
push
jno
dec
cmc
sahf
push
dec
shlb
fnstcw
leave
int3
or
xor
int
cwtl
call
cmp
stos
or
pushf
lea
sbb
cltd
sbb
mov
cmp
mov
les
pop
mov
inc
mov
push
sbb
cmpsl
xchg
and
jp
lods
jmp
add
xchg
testb
leave
lahf
jg
mov
jl
loopne
mov
push
jno
cmp
lahf
mov
lahf
sbb
shr
mov
sbb
je
mov
and
adc
pop
xlat
sbb
fcompp
cltd
scas
mov
push
cld
sbb
idivb
popf
cs
and
cmp
dec
push
nop
adc
adc
mov
fidivl
jns
sbb
and
adc
icebp
shrb
or
jo
js
lods
dec
lahf
cld
jb
fisttpll
repz
lahf
mov
fmull
xor
sbb
inc
push
enter
mov
leave
jns
pop
xor
clc
or
and
scas
push
repz
int3
cmpsl
pushf
sub
dec
xchg
mov
add
lahf
jge
xchg
push
push
cmp
out
sbb
or
xchg
nop
xorb
inc
lods
out
std
lock
test
in
xor
pop
loopne
add
adc
scas
mov
shlb
mov
sahf
push
rcrb
jmp
cld
cltd
test
xchg
sub
fists
sbb
mov
std
push
je
sbbb
icebp
sarb
pop
xchg
mov
mov
lock
or
mov
lods
cmc
xchg
pusha
int3
mov
cmp
jge
add
mov
lcall
adc
mov
and
pop
nop
js
jns
stc
fstps
mov
jmp
mov
out
xchg
xchg
int
mov
cld
push
div
xchg
outsl
adc
jns
jl
cwtl
loopne
sti
dec
sbb
cmp
add
adc
adc
and
push
insl
shll
lahf
lcall
movsb
popf
pop
adc
mov
pop
ljmp
call
call
popf
fsubrs
fs
xlat
pusha
dec
icebp
sbb
xchg
push
std
or
mov
cmp
data16
shrl
stos
in
out
rcrl
test
pop
ljmp
repz
push
in
shll
push
sub
stos
pop
enter
xchg
xor
test
frstpm(287
sbb
jno
imul
mov
pop
adc
mov
test
in
mov
jo
xchg
xchg
in
push
rorb
clc
sbb
mov
push
lds
pop
ja
push
hlt
mov
push
loope
scas
push
mov
aam
out
xchg
jne
push
jl
fmul
mov
hlt
in
xor
push
jae
pop
scas
jne
inc
rcl
mov
ja
jns
dec
dec
push
mov
arpl
dec
aam
fstps
push
fnstsw
aaa
stos
cld
ret
idivl
fildl
xchg
inc
lea
clc
push
mov
cmpsb
mov
repz
pusha
xchg
icebp
mov
repz
mov
pusha
add
xor
adc
rorb
cmp
inc
inc
push
fwait
push
inc
pop
pop
or
fsts
jg
fbstp
je
cmpsl
iret
fisubs
stc
mov
mov
repz
push
sahf
sub
nop
xchg
jmp
stos
push
mov
inc
jns
adc
jns
imul
sbb
cld
jmp
jge
mov
psrld
out
cmp
jl
js
jmp
ja
sbb
pop
sub
mov
mov
sbb
imul
aad
pusha
movsl
fisubrl
inc
xchg
or
sbb
pop
push
aas
lods
push
lea
idivl
xor
je
test
pop
cmp
adc
ja
mov
fisubs
ljmp
stc
push
mov
lcall
cmpsb
or
dec
cltd
pop
inc
lea
lods
cmp
fsubl
dec
and
sbb
mov
lahf
jne
pusha
sub
jmp
sbb
fstl
out
cld
pop
shrb
pushf
movsl
popf
push
sbb
adc
add
mov
push
xchg
pop
push
rcr
push
dec
sbb
pop
incb
lahf
push
lcall
stc
sarb
leave
jmp
and
fsub
push
xchg
mov
xor
rolb
push
mov
xchg
lahf
mov
xchg
cmpsb
mov
jmp
jbe
cs
movsl
mov
sbb
shll
jno
loop
pop
mov
cld
jne
repnz
mov
pop
cltd
xchg
cld
xor
mov
push
pop
fiadds
push
addr16
fisttpl
fidivrs
mov
xchg
mov
into
inc
bnd
xchg
adc
mov
fbld
inc
popf
imul
out
push
mov
push
call
rol
mov
jecxz
icebp
mov
xchg
hlt
lcall
xor
hlt
adc
jg
push
sahf
pop
ss
cld
jo
inc
mov
or
out
out
xorl
icebp
push
push
push
inc
insb
test
xchg
out
add
iret
shr
mov
xor
loop
repz
aam
mov
loope
leave
or
jp
mov
rorl
push
dec
repz
in
gs
or
sti
notb
mov
fstpl
jl
mov
pop
mov
mov
dec
xlat
rorb
out
or
stos
sbb
mov
pop
mov
out
mov
sti
cmpsb
cmpxchg
mov
jle
pop
lcall
fs
dec
push
cmp
jle
dec
xlat
insl
fcmovbe
and
push
xor
adc
adc
adc
out
xchg
stc
fcmovb
pop
fidivl
scas
nop
pop
sahf
sahf
cmpsl
lock
jne
mov
mov
pop
sahf
sub
test
push
push
out
test
clc
sbb
mov
fdivrl
sbb
cld
pop
dec
fsub
jo
clc
pop
inc
adc
add
xor
push
std
in
mov
pop
fnstenv
cwtl
dec
out
mov
push
popf
jne
pushf
idivl
push
in
leave
imulb
js
clc
cmpsb
nop
sbb
push
clc
cs
adc
xchg
outsb
push
cmp
addr16
mov
cli
iret
sbb
cmp
jl
xchg
add
in
and
push
cmp
fucomip
call
pop
push
pop
sbb
jmp
push
addr16
adc
xchg
pusha
and
sbb
push
ja
sti
sti
arpl
cmpsb
popa
out
jne
divb
stos
or
sub
mov
in
fisubrs
adc
fsts
dec
dec
hlt
mov
jmp
dec
mov
xchg
mov
adc
sti
mov
int3
mov
std
cli
jo
pop
stc
adc
xchg
dec
xchg
jge
adc
in
lahf
sbb
xor
mov
pop
push
jp
sbb
idivl
cmpsb
in
hlt
sub
mov
sbb
jae
dec
sti
jns
cltd
lods
mov
jmp
push
cltd
mov
rcrl
je
call
mov
inc
inc
pop
push
movsl
push
mov
dec
adc
sbb
out
mulb
jno
stc
je
clc
stc
cmc
xchg
push
les
sub
jns
lods
push
out
add
rep
testl
fsts
adc
hlt
cld
cmp
push
adc
jmp
dec
push
nop
pop
jmp
rcrl
js
fsts
cmpsb
pop
fstps
xchg
adc
pop
clc
outsb
xchg
sbb
std
sbb
sbb
movsl
xlat
push
lods
cmp
mov
xor
mov
jmp
dec
rcrl
repz
pop
mov
out
jns
decl
nop
pop
fldcw
jbe
jg
sub
sub
adc
mov
pop
jmp
negb
mov
neg
dec
push
shl
pop
sti
fstps
adc
fsubl
push
mov
xor
push
push
pop
dec
mov
pop
negl
inc
xor
faddl
xchg
xorb
fildl
int
jl
insb
xchg
sbb
div
hlt
sbb
push
lahf
icebp
in
ds
cmp
mov
je
jbe
jl
out
loopne
cmp
jge
shlb
insb
test
fs
xchg
fwait
aas
push
mov
jmp
movsb
imul
xchg
dec
in
xor
sub
mov
inc
cltd
sbb
popa
movsb
pause
fwait
rcr
pop
mov
jl
mov
leave
loop
jae
cmpsl
stos
shl
jae
addr16
sub
jge
pop
loopne
jae
add
stc
inc
scas
jl
clc
sbb
mov
je
in
xchg
test
mov
stc
push
push
and
mov
pop
popf
lods
decl
shr
pop
aad
int3
jl
xor
jmp
fcmovu
std
add
or
addr16
dec
popf
addr16
inc
jle
popf
sbb
pusha
rorb
inc
xor
sti
sub
xchg
push
jne
mov
add
mov
fstpl
xchg
sti
fadds
inc
jl
cmp
aad
jo
push
mov
push
cs
sti
fprem1
movsb
fnsave
aad
cld
sub
outsb
adc
mov
xchg
int
stc
push
scas
mov
mov
adc
dec
dec
cld
popf
jmp
fisubrs
lock
xchg
xchg
pop
sahf
adc
mov
pop
ljmp
inc
pop
hlt
pop
xchg
jge
out
dec
pop
fdivrp
jle
xor
mov
jbe
jg
jmp
pop
ss
fwait
lret
push
push
out
pop
add
es
push
lahf
shl
inc
insb
xchg
push
addr16
enter
dec
xchg
fwait
sbb
mov
jg
addr16
xchg
pop
mov
dec
xchg
addb
lea
dec
push
clc
dec
loop
push
adc
into
movsl
mov
fstpt
fisttpll
dec
cmpb
iret
out
jnp
lods
inc
dec
push
push
add
lds
xchg
mov
pop
insb
push
rcl
ja
xchg
in
pop
sahf
leave
in
jmp
loopne
cs
ret
loopne
sti
jmp
shl
inc
lods
cmp
mov
inc
mov
ds
pop
les
shlb
je
imul
scas
inc
push
rorb
cmp
pop
pop
hlt
stos
mov
pop
sbb
push
out
adc
sbb
sbb
sbb
cld
push
stc
sbb
mov
push
mov
pusha
lock
not
lods
dec
nop
rorb
jle
mov
pop
inc
in
je
loope
shlb
push
mov
sbb
pushf
mov
inc
fcoml
add
out
imul
sbb
xchg
and
push
mov
es
push
hlt
xchg
inc
fucomi
mov
adc
push
or
or
sbb
pop
xor
lahf
sbb
sub
sub
inc
pop
sbb
rclb
adc
inc
adc
push
mov
xchg
rcrl
pushf
rorl
fcmovnb
into
adc
xor
lcall
negl
pop
or
pop
pop
ret
icebp
xchg
pop
xchg
sub
in
js
shlb
scas
jge,pn
push
pop
lods
int
sbb
loopne
aam
push
fsubp
pop
push
scas
mov
fwait
rcll
in
cmp
out
shlb
sbb
lret
incb
les
and
sbb
leave
outsl
rorb
fstps
sub
jge
pop
push
out
xor
cs
pop
imul
imul
stos
sbb
mov
outsb
ds
leave
scas
add
call
dec
in
xchg
push
lods
mov
ja
lds
sbb
and
lods
jno
xchg
int
pop
fwait
ret
leave
xor
jl
pop
cmpsl
jg
push
push
adc
xchg
cmpsb
std
fstpl
loopne
pop
movl
popf
in
movsl
xchg
push
lds
hlt
inc
inc
stc
sahf
adc
sbb
sbb
ja
adc
sbb
dec
lahf
test
movsb
dec
push
stc
ja
xchg
int
push
sub
mov
ja
jmp
push
rcl
push
mov
pop
popf
jmp
repnz
aas
fstl
gs
lock
xor
icebp
lds
or
call
clc
dec
aam
in
outsl
jl
out
mov
jnp
popf
gs
sbb
mov
xor
pop
dec
nop
call
push
xchg
pop
mov
mov
scas
xchg
dec
add
ss
push
pop
lcall
jge
xlat
fxtract
push
dec
xchg
pusha
pop
and
std
imul
push
pop
fbld
pop
xchg
jecxz
xchg
imul
outsb
xchg
dec
dec
sti
shlb
ret
rcll
adc
leave
jae,pn
lret
xchg
xchg
in
xor
sarb
inc
inc
leave
push
sbb
jle
sbbl
js
ljmp
mov
sbb
jno
inc
lahf
dec
mov
insb
fwait
repz
inc
out
inc
push
rcrl
pusha
pop
jle
cltd
jl
xchg
sahf
or
push
sbb
adc
fcoml
xchg
jmp
inc
jg
xlat
xchg
leave
xchg
imul
movups
rcl
sub
icebp
push
out
outsl
jo
scas
jmp
xchg
fnstenv
hlt
in
insb
repnz
mov
jo
icebp
push
lods
sbb
dec
rclb
mov
mov
decb
mov
xchg
sbb
stos
sahf
ror
mov
call
add
adc
popa
pop
add
push
push
stos
cld
dec
cltd
pop
jne
movsb
lods
shlb
stos
std
test
iret
push
test
sbb
lds
push
push
mov
test
std
clc
pop
or
sysexit
das
stos
jne
adc
jge
pop
jmp
into
xchg
or
subl
nop
or
in
sti
cmc
push
stos
jno
jg
sahf
dec
inc
inc
push
adc
inc
lods
rcrb
rcrb
inc
push
pop
mov
cmp
xchg
repnz
jg
pop
dec
test
jle
mov
mov
jg
leave
pop
jle
ret
shll
mov
negl
repnz
sub
out
sbb
fcomps
adc
out
push
sahf
orl
popf
mov
mov
int
ss
ljmp
popf
in
in
xchg
jl
int
ror
lods
mov
pop
fwait
xor
pop
cwtl
lea
xorb
pop
aam
pop
mov
or
xor
push
dec
loopne
adc
mul
push
rorl
xchg
ljmp
pop
std
leave
lcall
test
enter
jle
sti
jg
xchg
pop
xlat
xchg
popf
and
lods
in
mov
jne
loopne
cmp
dec
xchg
rcrl
push
push
adc
or
mov
dec
push
int
xor
mov
push
sbbb
lahf
fnsave
xor
mov
sub
pop
xlat
pop
fsts
xchg
pop
sahf
gs
ja
cwtl
xchg
cmpsb
mov
dec
fidivrs
fwait
insl
fucomp
and
dec
fldt
dec
pop
lods
xor
fistps
scas
jmp
jo
int
sbb
and
mov
fcomps
jge
pop
arpl
push
mov
dec
sub
jge
dec
movsb
sti
imul
mov
repz
sbb
dec
cmp
jns
adc
xchg
dec
mov
rclb
popf
mov
lods
xor
fisubl
icebp
push
leave
sti
fidivrs
push
dec
test
push
mov
dec
ja
enter
adc
dec
jl
popf
inc
push
fistpll
jno
in
xlat
inc
sbb
jl
adc
mov
pop
int
push
mov
shrb
pop
insl
add
push
fists
pop
hlt
mov
imulb
sbb
adc
push
pop
xor
sub
mov
xor
sahf
mov
sbb
xchg
sarl
pop
adc
xchg
sahf
test
lcall
xchg
jnp
sbb
lock
push
sbb
xchg
pop
fs
addr16
adc
jecxz
jns
pushf
repnz
lahf
push
cwtl
lcall
les
dec
das
dec
sahf
sbb
outsb
cmp
xchg
sbb
pop
hlt
dec
pop
lahf
xchg
clc
test
pushf
enter
loopne
push
call
mov
repz
dec
xor
loopne
inc
xchg
sahf
mov
jne
dec
fistps
pop
xchg
sbb
inc
out
jae
lahf
neg
inc
inc
jno
js
adc
sti
fstl
in
fnstenv
out
mov
aam
lea
mov
adc
pop
popf
insl
out
xor
std
add
enter
negl
pop
sub
cwtl
mov
fwait
ret
loop
imul
mov
mov
cli
lds
ds
popf
dec
adc
xchg
push
lods
cmp
roll
mov
hlt
stos
inc
pop
fdivrl
mov
mov
clc
imul
or
testb
fisubrl
jg
xchg
int3
inc
outsl
adc
cmp
gs
pusha
cmc
inc
js
test
adc
cmp
xchg
es
into
sbb
cmp
lods
dec
jl
push
pop
test
out
inc
push
in
cwtl
sbb
movsb
fwait
jg
ljmp
inc
pop
divl
cwtl
popf
sub
pop
mov
test
mov
shll
cld
mov
sarl
jnp
sbb
repz
fnsave
mov
lods
icebp
lods
sarl
dec
cmpsl
cmc
or
nop
aaa
dec
cli
push
dec
aad
push
sbbb
dec
fwait
xchg
popf
xchg
jg
lds
push
xorl
jge
mulb
lods
pop
or
push
push
fwait
xor
push
aaa
leave
dec
adc
aaa
push
push
dec
fistl
test
xchg
add
lret
rorb
fstl
fucomp
push
jbe
gs
shrb
call
inc
rcr
add
in
pop
xchg
sub
xchg
dec
push
sahf
icebp
call
gs
fistps
rcrl
xchg
in
aad
repnz
jmp
imul
jmp
xor
es
cmp
hlt
pushf
not
pop
shr
test
cmc
popf
sti
pop
mov
pop
jae
cmp
rclb
lahf
aad
ss
jle
sub
push
sbb
mov
nop
les
xchg
sbb
insb
pop
xchg
mov
sub
or
cmc
addr16
mov
xchg
mov
push
lcall
cli
leave
jge
clc
sbb
imul
inc
adc
pop
shlb
pusha
fs
call
add
enter
xchg
mov
mov
cmpsb
lods
dec
out
cmp
outsb
cmc
pusha
pop
sbb
jge
push
in
int3
jne
mov
cmp
push
cmpsl
in
aad
xchg
aad
cli
js
xor
pop
cltd
xchg
lods
rclb
lock
mov
js
xchg
adc
call
sbbb
fdivrl
movsb
inc
jl
cltd
xchg
sub
push
jne
imul
pop
fcompl
jecxz
mov
jl
inc
das
insl
pop
negb
inc
inc
ja
xchg
mov
clc
pop
fcomp
pop
sbb
pusha
add
pop
dec
pop
testl
cltd
lock
pop
stos
xchg
dec
mov
push
lods
sbb
in
adc
mov
icebp
div
mov
aas
fcomps
dec
mov
or
cmc
ffreep
or
cmp
ja
sbb
test
mov
scas
sbb
cmpsb
ret
fistps
test
jne
push
push
addr16
loop
rorb
cmp
leave
jle
inc
fdivr
insl
int
addr16
enter
jge
mov
dec
adc
jge
push
leave
fldenv
xor
pop
pop
cld
push
cld
mov
pop
arpl
lcall
popf
jecxz
fcompl
xchg
shll
lods
pop
mov
push
int
pop
shrb
imul
add
ja
pop
cli
and
aas
lods
in
les
mov
imull
popa
pop
loopne
cmp
imul
arpl
mov
dec
ds
push
pushf
push
js
leave
jne
int
jge
pop
rcr
push
int
mov
ja
jg
stc
jecxz
cmp
cmpsl
xchg
xchg
sbb
int
xchg
dec
clc
push
jnp
insb
push
sti
mov
xchg
xor
js
push
pop
repz
ja
cmp
pop
fdivs
cmp
leave
iret
jge
pop
ds
test
xchg
sub
popf
imul
adc
pop
popf
fnstsw
mov
es
pop
push
notl
stc
into
mov
imul
sbb
pop
test
xchg
fbstp
push
int3
mov
aad
repz
jmp
imul
mov
mov
testl
out
jne
fstl
test
sub
mov
fdiv
scas
negl
lahf
fwait
les
es
mov
mov
dec
sbb
test
cmp
sti
mov
fwait
imul
mov
cmp
push
inc
lods
and
aaa
insl
inc
mov
clc
xchg
mov
js
stc
sarb
xchg
cmpsb
repz
jecxz
pop
push
or
jecxz
xchg
std
cwtl
push
test
das
jae
in
sti
xchg
imul
push
mov
jmp
ja
int3
fwait
enter
mov
jo
jg
inc
movsl
cmp
in
nop
lods
cmc
mov
push
push
testb
test
insb
push
call
push
push
pop
sahf
scas
mov
push
sysenter
pop
inc
pop
fdivs
dec
dec
stos
cmp
aad
push
cmp
lret
sbb
shll
jge
aam
inc
out
sbb
jmp
inc
push
arpl
mov
lods
leave
push
adc
out
pushf
xor
gs
bswap
mov
enter
xorb
lods
xor
jae
clc
test
mov
and
jb
in
rorw
popf
push
adc
arpl
push
push
adc
test
addr16
push
inc
adc
stc
dec
pusha
xchg
jnp
out
push
test
cld
adcl
cltd
test
adc
popa
mov
call
out
nop
aad
jge
cmpsb
insl
outsb
rcrb
push
sti
jmp
cmc
gs
pop
xor
addl
xlat
cli
push
mov
cmp
mov
out
xchg
sub
pop
ja
repz
jno
aas
inc
test
pop
loopne
lret
dec
cld
test
mov
cmp
push
fs
cmpsl
rcrb
push
pop
aaa
sub
jnp
lahf
xchg
icebp
es
xchg
cmpsb
mov
dec
popf
sahf
add
xchg
dec
out
pusha
fcompl
addr16
pop
sbb
adcl
lods
cmp
jmp
lock
imul
pusha
jge
fisttpl
pop
sbb
cld
fcom
mov
sti
lcall
fwait
inc
or
sbb
fwait
mov
cltd
cli
push
jo
out
cmp
adc
pop
push
call
out
rcr
outsl
fcomps
xchg
dec
arpl
xorl
lahf
fwait
xor
cs
test
mov
push
int
sti
es
in
mov
fiaddl
fdivrs
mov
mov
lret
jae
fs
ds
xor
mov
les
jge
dec
jae
push
outsl
fstl
loop
enter
lcall
ds
fcmovnb
xorb
shl
add
sbb
cld
inc
repnz
push
jl
push
mov
movsl
icebp
dec
mov
inc
xor
mov
rcrl
out
jo
mov
jo
jle
pop
pop
xchg
mov
nop
or
or
add
adc
imul
scas
or
fwait
out
sub
pop
xchg
cltd
in
aam
hlt
mov
pop
or
pop
out
jns
xlat
jp
into
mov
ss
sbb
mov
sahf
icebp
adc
addr16
pop
push
pusha
jo
hlt
outsb
sub
pop
sbb
mov
jo
xor
sbb
call
test
push
sbb
pushf
out
dec
mov
push
adc
adc
inc
decb
pusha
add
xchg
cmc
leave
loope
jae
xchg
imul
push
ficomps
lea
inc
xor
mov
pop
add
ds
xchg
xchg
mov
arpl
xchg
popf
jg
and
mov
push
xor
int
fdivs
fistps
fldl
cld
mov
int
dec
sbb
test
outsb
mov
rcll
mov
jge
mov
clc
xchg
jbe
xchg
mov
repz
push
cmp
fwait
imul
mov
subl
call
dec
popf
icebp
ss
jo
shr
inc
xlat
cli
sbb
imul
mov
shr
and
in
in
sbb
stos
ret
out
and
es
jnp
pop
dec
push
pop
or
lret
outsb
cld
call
sbb
call
jl
faddl
push
xor
cmp
pop
pop
mov
jns
inc
cs
lods
inc
add
inc
repnz
pop
xchg
mov
sbb
cmp
pop
or
jb
daa
xor
pop
popf
push
adc
jl
and
insl
test
adc
movsl
mov
scas
mov
dec
or
cs
hlt
push
leave
sub
fwait
out
mov
scas
pop
mov
lahf
adcb
fs
fcomps
mov
push
sti
incl
xchg
sbb
push
mov
jbe
mov
jp
jmp
jl
insl
or
push
addr16
movsb
inc
out
sub
sbbl
mov
inc
lcall
filds
outsl
aam
xor
sbb
addr16
outsl
jnp
pop
adcb
push
fsubl
cmc
xchg
pop
mov
loopne
jnp
lret
push
pop
test
js
enter
push
lods
data16
fsts
or
jmp
cwtl
inc
push
cmp
outsl
mov
mov
push
push
xchg
mov
mov
jmp
lea
mov
mov
inc
std
jnp
sbb
lods
shrb
dec
mov
sar
sub
or
shlb
insl
inc
dec
aad
out
flds
sbb
sarl
push
pop
pop
scas
xchg
call
push
or
mov
sbb
adc
lds
lods
mov
dec
cmp
push
leave
mov
push
push
xchg
jg
xorb
mov
lcall
cld
flds
jb
in
les
push
inc
lahf
leave
xchg
imul
test
adc
push
sub
sbb
dec
in
cmp
ffree
pop
xchg
insl
add
xor
sbb
pusha
push
test
into
sbb
adc
pop
mov
stos
mov
xor
clc
sbb
hlt
mov
jae
out
mov
cmpsb
out
xchg
int3
sub
mov
fs
adc
mov
cmc
pop
ljmp
mov
inc
je
test
lds
arpl
xchg
xlat
sarb
int3
jb
adc
jge
sbb
push
add
cltd
std
repnz
cltd
adc
imull
arpl
clc
mov
mov
std
mov
imul
imul
cmpsb
in
mov
sbb
push
sub
push
xchg
fwait
cltd
jecxz
adc
sbb
hlt
test
test
cmpsb
mov
insl
fistpl
dec
push
mov
cmp
xchg
and
arpl
cmp
addr16
xchg
in
dec
push
push
add
xchg
cmp
mov
pop
fsubl
pop
mov
call
cwtl
jl
mov
test
dec
stos
clc
mov
sbb
sbb
adc
pop
xor
xchg
adc
sub
roll
repz
xchg
jo
mov
cltd
hlt
fldenv
in
xor
sarl
cs
movsl
add
push
hlt
nop
mov
jne
sbb
js
clc
xchg
or
xor
dec
or
enter
imul
or
sarl
pop
pop
adc
push
xor
adc
js
out
mov
dec
pop
add
lock
sahf
nop
mov
mov
aad
xchg
popf
out
fmull
ss
push
arpl
jl
pop
jo
push
mov
adc
call
lock
push
cwtl
dec
sbb
imul
pop
dec
rcll
ljmp
cmpsl
popf
jge
ja
or
int
sbb
insb
aam
sahf
pusha
cmp
jecxz
pop
push
jae
inc
insb
je
inc
out
pop
in
sbb
push
xchg
inc
movsl
adc
jb
xchg
aas
or
sahf
mov
pop
out
adc
call
sbb
lds
popf
int
mov
insl
dec
cs
or
jae
addl
inc
xchg
popf
jecxz
fsubrl
packuswb
push
push
dec
rorb
and
mov
mov
gs
xchg
jno
push
sarl
or
jge
jnp
insl
pusha
xchg
xchg
sarl
inc
mov
sbbb
insb
ret
aam
push
gs
repz
inc
arpl
clc
push
enter
cmpb
dec
leave
xlat
sbb
mov
movsl
repnz
push
test
jle
sbb
jno
xor
cmp
imul
arpl
dec
pop
push
inc
mov
push
test
gs
in
jnp
mov
adc
pop
inc
test
xor
sbb
pushf
out
sub
lcall
cmp
sub
pop
mov
pushf
mov
testb
adc
out
arpl
leave
add
popf
dec
in
sbb
loope
jp
aad
mov
decl
ret
jg
lcall
lock
clc
or
dec
xchg
pusha
xor
insl
loopne
js
add
rcll
mov
xchg
clc
sub
fisubl
ds
mov
aad
jae
jmp
xor
sti
mov
popf
imul
pop
popf
loope
adc
cltd
xor
push
jno
push
xor
fisttpll
clc
adc
sti
jl
jno
pop
mov
inc
stc
xor
xchg
jge
add
cmpsb
int
xlat
push
and
mov
pop
sar
mov
jecxz
jno
sub
leave
int
mov
into
cwtl
pop
jge
std
sub
jge
jns
in
sub
sub
stc
pop
shlb
frstor
jecxz
jae
lock
mov
fisttps
lock
sub
sbbb
mov
pop
aad
mov
pop
fsubl
adc
push
add
popl
cmp
or
pop
lahf
push
xlat
adc
sub
push
es
mov
jmp
push
icebp
rcll
push
int
xor
out
rorl
clc
pushf
xor
and
jge
xchg
scas
ret
imul
ja
xchg
loope
push
mov
fucomi
inc
push
mov
xchg
test
mov
cmpsl
andl
and
xchg
ja
loopne,pt
in
cld
and
negl
inc
adc
and
ror
add
mov
xchg
imul
jmp
mov
nop
dec
aad
in
fnsave
jb
cltd
jb
push
sub
cltd
xchg
and
jl
cmp
pushf
jmp
xor
jg
sahf
mov
mov
insb
adc
shr
cld
js
mull
test
xchg
or
into
inc
push
sahf
add
sbb
xor
lods
push
pushf
pushf
fidivrs
hlt
shlb
jo
test
shl
insl
int3
fucomip
pop
mov
xor
xchg
rcll
fisttpll
fwait
push
dec
mov
jb,pn
pushf
pop
jo
ss
pop
xor
fcompl
cmp
rorb
and
adc
lea
mov
inc
es
test
inc
movsl
loop
lahf
shll
shr
mov
sti
xlat
push
or
xor
or
out
xchg
mov
adc
pop
flds
jb
push
loope
dec
movsl
xor
fbstp
iret
jecxz
icebp
mov
jb
bound
fcmovne
mov
or
pop
mov
pop
or
pop
mov
pop
or
pop
mov
pop
or
pop
xchg
pop
pop
pop
pop
xchg
pop
push
pop
lds
pop
inc
pop
add
aaa
test
jmp
into
scas
fcomip
lahf
push
push
push
iret
pop
or
mov
int3
hlt
sbb
mov
or
cmp
lock
pushl
push
incb
ds
add
add
add
add
add
xor
pop
inc
hlt
mov
inc
je
xor
repz
mov
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
scas
dec
popa
pop
movsb
add
or
mov
xchg
sbb
push
push
outsb
pxor
mov
movsl
je
scas
lahf
popa
lahf
and
pusha
pop
and
dec
scas
dec
outsl
dec
das
dec
out
dec
scas
dec
outsb
dec
cs
in
dec
lods
dec
insl
dec
sub
dec
insb
dec
sub
jmp
stos
dec
imul
ljmp
dec
jmp
dec
sub
dec
test
push
negl
or
sbb
enter
sbb
push
into
cltd
sarb
xchg
enter
and
fwait
xor
sub
scas
add
push
mov
pop
arpl
shr
jne
and
xchg
cmp
xor
repz
scas
iret
add
mov
bound
das
pop
mov
sbb
sti
into
fstpt
sti
pop
mov
pop
movsb
pop
mov
inc
pop
lret
jno
mov
rorb
cmp
adc
mov
pop
sbb
sti
mov
mov
lcall
js
adc
inc
mov
mov
repz
mov
scas
adc
cmpsl
je
scas
add
lahf
enter
pop
push
cmp
scas
lahf
pop
cmpsb
jg
outsl
xor
nop
je
jno
out
cmpsb
imul
fists
loopne
vmread
enter
movsl
sub
mov
mov
mov
sub
ds
jno
cs
xchg
or
sti
or
xor
shll
repz
pop
pop
pop
cmpsb
pop
ss
lds
pop
in
je
dec
xchg
push
and
pop
inc
pop
roll
inc
nop
dec
jmp
mov
xor
shrb
scas
les
int
pop
in
les
les
xchg
aam
mov
les
test
cmpsb
les
vandnps
nop
and
adc
dec
mov
imull
popa
pop
pop
push
push
dec
aad
jns
mov
pop
stc
icebp
mov
pop
mov
pop
mov
ja
aaa
pop
negb
pop
jbe
ss
cmc
pop
mov
jne
xor
pop
xor
repz
mov
jae
lcall
sti
mov
jb
xor
jno
xor
pop
mov
jo
cmpl
cmpsl
jg
aas
jae
jae
jae
jae
push
std
jae
jae
jae
jae
arpl
mov
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
arpl
sbb
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
sbb
pop
mov
jne
add
add
add
ret
add
repnz
pop
icebp
push
mov
jno
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
hlt
cmpsb
push
iret
inc
mov
push
inc
xchg
inc
mov
sub
cltd
or
or
daa
add
xchg
add
add
add
xor
lahf
aas
cmp
sbb
negl
push
xor
xor
pop
and
inc
inc
inc
rorb
dec
jmp
mov
fsubl
sub
inc
mov
add
nop
sti
and
das
and
jae
jae
jae
cltd
idivb
stc
pop
mov
clc
dec
mov
dec
testl
dec
testb
jbe
ss
cmc
dec
mov
jne
xor
dec
je
xor
repz
mov
scas
outsl
repnz
mov
jb
xor
pop
mov
jno
xor
leave
xor
push
jae
cltd
cli
cmp
sti
rcr
outsb
mov
pop
aad
jae
loop
lock
jl
inc
jl
jmp
mov
inc
inc
inc
hlt
inc
fs
lods
repnz
ss
repnz
mov
mov
and
push
and
xor
pop
inc
inc
rolb
cmpsb
mov
jae
jae
jae
jae
sbb
pop
out
push
pop
test
adc
sbb
pop
xchg
or
sti
inc
inc
mov
and
xchg
pop
add
jb
loope
popa
or
pop
pusha
push
filds
cs
add
add
add
add
jecxz
nop
inc
lods
fwait
and
mov
cs
pop
inc
ljmp
and
aam
scas
fistps
xchg
xchg
push
and
jo
pop
mov
xchg
scas
or
hlt
sahf
mov
stc
sbb
es
iret
outsl
fimuls
in
or
pop
pop
sbb
dec
sbb
hlt
test
js
mov
jb
add
into
or
push
mov
jne
adc
and
shll
movsl
loopne
jo
push
adc
push
pop
jge
fdivr
cmp
sub
jae
scas
lcall
push
stc
xrelease
push
jae
jae
cltd
js
add
inc
out
imul
ret
and
or
iret
jmp
sub
xor
lock
mov
jo
xor
xchg
dec
adc
dec
decb
dec
jle
ds
std
dec
sarl
cmp
inc
jl
cmp
sti
cmpsb
mov
cli
mov
cmp
jns
cmp
js
cmp
ja
aaa
mov
jbe
mov
jne
xor
je
xor
xrelease
icebp
enter
les
lock
inc
mov
inc
mov
std
add
add
add
add
adc
cs
cli
les
aam
jge
push
sti
out
xchg
jno
jnp
pop
popa
or
jno
jg
imul
ret
and
sar
pusha
lret
call
add
add
add
add
adc
mov
xchg
pop
movsl
pop
xor
pop
jecxz
jae
rcrb
imul
pop
pop
rep
xorl
lahf
push
loope
jno
cmp
cmp
add
or
mov
jae
sub
repnz
mov
jb
xor
xor
jo
xor
jg
aas
mov
jle
mov
jge
cmp
lock
jae
jae
jae
jae
jae
sbb
mov
inc
sarb
cmp
inc
mov
testl
lods
divl
mov
push
xor
outsb
je
dec
repz
mov
jae
scas
add
shlb
icebp
dec
mov
jno
xor
xor
inc
mov
hlt
incb
fistpll
ds
adc
lods
jg
mov
adc
xchg
jno
incl
orb
insb
pop
jmp
sbb
out
push
adc
cmp
jge
fdivs
test
lret
iret
cmpsl
cmp
jb
out
clc
lahf
jg
lods
jns
fcompl
insb
dec
cltd
xor
mov
add
jae
jg
jo
push
sbb
fwait
lahf
and
mov
fstpt
dec
ljmp
dec
dec
in
loop
jp
jl
dec
inc
cmpsb
mov
or
lret
cmp
xor
hlt
cli
mov
je
xor
repz
fnstcw
inc
jns
cmp
or
ficomps
pop
ja
aaa
lods
notb
xchg
lock
cmp
pop
mov
jmp
in
jg
loopne
cli
ficomps
xor
jae
loop
in
or
cmp
in
hlt
insb
stc
mov
sbb
or
adc
jl,pt
xchg
pop
and
mov
adc
mov
inc
jo
push
popa
push
lock
fadds
lret
and
jg
push
adc
inc
sarb
pop
mov
pop
clc
pop
mov
pop
negl
pop
ja
aaa
pop
push
int3
push
xor
scas
or
dec
pop
test
cmp
scas
outsl
scas
rorb
pop
aam
sahf
pop
lock
repz
sub
hlt
je
jae
decl
or
jno
iret
pop
imul
loopne
cmp
fs
pop
push
lahf
outsb
out
arpl
loope
push
or
pop
cmp
dec
add
lahf
push
cmc
jo
push
dec
repz
mov
jb
adc
dec
mov
xor
shll
fsts
aas
pop
pop
mov
pop
mov
mov
pop
call
aas
aaa
mov
inc
dec
xor
adc
add
cli
cmpb
fwait
sub
cmp
sbb
sti
add
into
lahf
cwtl
mov
jb
add
pop
and
adc
mov
enter
pop
cmp
cli
mov
jae
stc
popf
icebp
push
mov
mov
push
fstps
pop
enter
inc
jno
fistpll
xor
dec
mov
ret
pop
pop
pop
cmp
dec
mov
mov
imull
mov
pop
mov
push
clc
sbb
loope
popa
mov
je
xor
repz
fwait
mov
push
lret
mov
int3
dec
cli
pop
cmp
mov
je
xor
repz
jae
jae
fsts
fsts
andl
dec
mov
inc
pop
xchg
lret
mov
fadds
add
add
adc
lods
xchg
andb
scas
jle
lock
les
in
xor
jae
xchg
ds
in
mov
push
xor
jb
ret
cmp
enter
and
sti
inc
jno
adc
leave
orb
inc
fisttpll
les
les
pop
cmp
lahf
sbb
loopne
lret
pop
fld
dec
mov
je
sbb
ss
adc
inc
dec
insl
xchg
shlb
les
daa
in
or
add
adc
mov
adc
push
imul
pop
fcomps
adc
pop
sbbb
push
ror
push
cmpsb
icebp
lock
push
adc
push
mov
popf
cli
jae
jae
fsts
testb
cmc
dec
gs
repz
mov
add
push
vphaddubw
cli
jo
dec
sub
fxch
cmp
enter
addr16
in
or
bound
lahf
fimuls
push
stos
pop
pop
outsl
cmp
pop
and
push
sahf
lock
call
mov
cmp
xor
aas
and
mov
aas
jge
add
xor
pop
mov
sub
lods
lcall
negb
pop
jbe
mov
mov
mov
je
xor
repz
pop
jae
shll
cmp
sti
lret
leave
enter
mov
jns
sbb
pop
inc
dec
inc
shlb
cmp
cmp
add
sub
and
pop
dec
je
addl
lahf
sbbb
or
cmp
js
cmp
mov
inc
shlb
inc
testb
jbe
ss
cmc
inc
mov
jne
adc
xor
repz
repnz
mov
ja
push
mov
cmp
mov
ja
jl
jg
popf
imul
aad
mov
cld
dec
fsts
pop
jp
adc
dec
mov
or
sbb
mov
mov
enter
push
dec
shlb
ss
xor
cmpsb
jb
out
clc
push
les
add
arpl
push
mov
mov
mov
stos
ljmp
xchg
dec
sbb
fs
inc
sti
inc
mov
xchg
les
sarl
inc
testl
leave
mov
pop
mov
pop
jl
stc
push
lock
pmaddwd
mov
adc
repnz
xor
jno
xor
mov
jo
xor
jg
aas
cmpsb
das
pop
jle
mov
cmp
mov
mov
jae
xlat
lock
cli
dec
mov
dec
stc
dec
mov
dec
clc
dec
mov
dec
testl
dec
testb
jbe
ss
cmc
sbb
lret
les
hlt
repz
repnz
mov
xor
jnp
xor
dec
mov
xor
dec
jge
xchg
std
les
cld
leave
ret
in
push
pop
jnp
cmp
jae
sbb
pop
cmp
sub
mov
mov
jbe
ss
jp
jae
jae
jae
jae
jae
xchg
fstps
insl
jae
scas
repnz
mov
pop
xor
push
push
push
popf
nop
jne
adc
aad
aad
lahf
push
imul
pop
cmpsb
int3
cld
push
cmpsb
xor
repz
mov
les
push
ret
shlb
icebp
lret
jno
xor
lock
mov
adc
cmpsb
jle
cmc
pop
std
dec
mov
pop
cld
pop
mov
mov
mov
pop
scas
outsl
sbb
dec
push
pop
mov
xor
mov
xor
or
fwait
idivl
and
sub
outsl
fldcw
fnstcw
adc
jo
fnop
jl
movsb
jg
sub
sub
add
push
mov
movsb
jg
push
cmp
push
mov
xchg
dec
cmc
inc
mov
mov
hlt
mov
ss
jge
mov
jae
jno
repnz
inc
xor
dec
mov
jo
xor
pushl
test
std
les
cld
les
sti
les
cli
les
ja
sarb
div
add
xchg
sti
loope
cmpl
lods
jo
adc
iret
push
sbb
lret
les
ss
jmp
mov
jae
ja
inc
mov
jae
jno
xchg
inc
jno
xor
pop
xchg
sar
xchg
cmp
sti
jg
dec
jnp
cmp
cli
ret
les
hlt
stc
mov
dec
jns
cmp
out
fmulp
mov
jbe
pop
shl
pop
jne
xor
pop
mov
pop
mov
rcll
dec
bnd
popa
jb
xor
or
mov
jo
xor
stc
mov
les
mov
dec
mov
jo
aad
jl
cmp
sti
dec
mov
dec
mov
dec
stc
dec
mov
or
cmp
js
cmp
ret
les
aaa
mov
jbe
aad
in
cmp
jae
jae
jae
jae
jae
cmpsl
mov
xor
repnz
mov
jb
xor
add
xor
add
add
rcll
jle
out
or
aas
pop
pop
mov
std
add
adc
sti
cmp
fnstcw
adc
std
mov
inc
mov
jbe
lock
jae
jae
jae
jae
jae
push
jbe
xor
repz
mov
jae
jno
repnz
jno
xor
jae
jae
imul
sar
adc
mov
jge
inc
repz
inc
mov
inc
sti
inc
mov
inc
mov
cmpsb
stc
mov
pop
jns
cmp
cmp
add
add
adc
cmc
mov
dec
mov
jbe
ss
cmc
dec
mov
jne
xor
dec
je
xor
cmc
adc
or
hlt
stos
adc
int3
mov
leave
enter
mov
dec
xchg
repnz
mov
push
repnz
sbbb
roll
dec
scas
jge
push
xchg
xchg
lods
ja
mov
loopne
aaa
hlt
test
dec
hlt
mov
pop
fnstenv
aad
jo
lods
push
fisttpll
mov
mov
fmull
fcomi
insl
aas
rcrb
jo
mov
enter
pop
add
js
fldenv
icebp
xor
sti
repnz
jbe
xchg
inc
stos
std
dec
jbe
cli
dec
push
shlb
pop
cmp
repz
pop
push
pop
pop
sbb
cmp
jns
xchg
test
icebp
xchg
es
mov
jg
jmp
mov
mov
xchg
pushf
and
dec
dec
fimull
mov
sbb
std
dec
push
lcall
lahf
dec
sysret
ficompl
dec
push
pop
rcrl
inc
cli
mov
cmpsl
and
dec
and
nop
out
scas
mov
outsl
pop
pop
stos
dec
cmp
fsubs
fildl
push
mov
pop
push
pop
add
or
or
or
test
lock
sub
ror
add
adc
cmp
pop
pop
pop
push
pop
movsl
pop
jb
adc
jnp
ret
adc
sub
sbb
test
mov
out
push
hlt
movsl
xor
jae
cmpsl
sti
xor
scas
std
movsb
and
sub
jo
ror
cmp
pop
dec
cltd
jge
scas
adc
fstpl
lahf
stos
mov
add
sbb
pop
jbe
insb
or
add
adc
cmpsb
mov
sbb
pop
lahf
jo
adc
fsts
jne
jo
hlt
push
imul
sub
call
dec
jae
jae
imul
pop
push
out
lods
mov
int3
pop
cli
jmp
pop
or
adc
lods
cltd
dec
mov
testl
push
mov
out
iret
sbb
sbb
or
lret
ljmp
je
xor
repz
dec
fcmovnu
imul
mov
adc
ss
sahf
enter
mov
mov
fs
add
mov
into
sti
hlt
mov
adc
std
xchg
inc
ficoms
int3
pop
dec
pop
fimuls
inc
push
lea
mov
adc
sbb
mov
mov
pop
add
pop
cmp
sar
xchg
mov
idivl
push
dec
xor
and
hlt
mov
adc
pop
push
insb
push
leave
mov
lahf
sti
pop
fisttpl
cmp
pushf
adc
mov
cmpsl
enter
push
in
inc
les
ret
rolb
ds
adc
test
jo
cmpsb
push
xor
adc
faddl
int3
fcmovne
inc
enter
les
in
mov
and
adc
shrb
lahf
mov
mov
pop
test
loope
loop
lahf
jge
jbe
cmp
testl
cld
and
mov
sbb
xchg
hlt
adc
jb
jl
movsb
push
jnp
into
idivb
stos
or
leave
adc
movsb
out
inc
mov
xchg
and
push
repnz
inc
and
push
int
leave
jmp
aas
jp
cmp
xchg
jae
jae
jae
jae
test
ret
nop
pop
sbb
pop
andb
mov
or
adc
jae
jae
jae
jae
jo
rcll
mov
sbb
fisttpll
mov
dec
inc
inc
adc
mov
in
sbb
int
jne
xor
imull
push
pop
pop
hlt
xchg
mov
dec
push
pop
pop
adc
mov
pop
jne
pop
ficomps
or
sarl
mov
int
aaa
rcll
and
lea
cmp
out
daa
fistl
xor
lods
lahf
stos
dec
lock
mov
or
adc
fnstenv
aad
in
xor
inc
roll
xchg
adc
cmp
out
mov
mov
mov
cmp
movsl
jmp
xchg
push
sub
or
pop
movl
leave
pop
out
cmp
add
inc
dec
ljmp
in
arpl
fisubs
pop
lea
or
push
mov
sbb
push
in
mov
lahf
stos
push
loope
iret
mov
pop
cmp
cmp
aaa
jbe
popf
daa
adc
es
inc
jecxz
jno
push
sbb
cmp
pop
jnp
adc
xor
xor
cltd
sti
mov
sbb
mov
mov
sbb
jno
popf
xor
push
lret
add
scas
dec
loopne
mov
mov
mov
jae
test
int
fsubl
cs
testl
outsl
bound
sub
nop
inc
stos
fistpll
rorb
mov
inc
scas
lret
in
push
aaa
test
repnz
inc
dec
ret
sbb
ljmp
push
shll
xor
xor
push
icebp
popa
or
xchg
pop
rol
adc
cmp
push
add
mov
jl
or
cwtl
pop
ss
fadd
loop
push
sub
aad
arpl
shrb
outsl
clc
pop
lds
pop
loope
sbb
cmp
jp
cmp
jne
jg
cmpsb
bound
sbb
notb
cmp
push
inc
popf
inc
xchg
popf
mov
repnz
mov
push
mov
xchg
test
rep
push
adcb
out
out
jl
inc
fistl
fisubl
jl
nop
mov
shl
pop
jnp
add
adc
fnstsw
lret
lock
stos
dec
cmp
sbb
xchg
mov
repnz
sbbb
cmp
push
xor
xlat
jns
add
pusha
mov
int3
test
sahf
scas
insb
mov
xor
jno
jg
imul
sahf
mov
je
sbb
jbe
jb
add
je,pn
sub
push
lods
jno
add
adc
iret
fnstcw
mov
cmp
into
or
sbb
push
rol
aaa
jno
fcomps
rorb
pop
ds
sbb
or
cmpsb
mov
add
dec
push
adc
mov
pop
rclb
dec
push
stos
repnz
sahf
popf
cs
pop
pop
push
fildll
or
or
mov
adc
je
scas
dec
lahf
mov
cs
pop
pop
ficoml
fdiv
scas
xor
pop
push
ret
int3
mov
or
inc
xlat
cld
std
pop
adc
inc
pop
mov
inc
lahf
stos
xlat
mull
pop
sbb
dec
data16
xor
fnstcw
ret
add
into
mov
lock
push
shrb
sahf
mov
mov
pop
fiaddl
adc
aad
inc
dec
dec
xlat
cltd
addr16
std
decb
sbb
pop
dec
cwtl
leave
pushf
xor
push
xchg
jno
imul
lock
sbb
xor
mov
or
ret
ret
loop
xor
jg
push
lahf
adc
push
loopne
ljmp
idivb
scas
xor
mov
mov
cmp
mov
jmp
mov
inc
imul
repnz
ss
negb
test
and
loopne
mov
mov
das
jne
jo
lahf
ss
cmp
sahf
dec
mov
sub
xor
sbb
dec
inc
pop
jb
xor
inc
shld
inc
sbb
js
push
xor
pusha
leave
negb
lcall
dec
pop
out
inc
sbb
sbb
mov
jae
imul
shl
push
int3
out
lds
sub
pushl
hlt
sbb
ret
lret
popf
lahf
das
pop
push
pop
icebp
pop
mov
divb
lcall
adc
lea
jae
xchg
cmpsb
dec
mov
shr
dec
pop
adc
cmp
mov
inc
hlt
push
mov
hlt
sbb
jl
pop
adc
jp
dec
lcall
sbb
inc
imul
jp
mov
fs
test
cli
imul
mov
js
mov
pop
mov
cmp
mov
xor
push
mov
adc
insl
cli
std
fnstenv
inc
sti
mov
test
dec
ret
mov
mov
xor
jmp
mov
pop
or
fnstenv
and
ja
popl
ret
int
pop
hlt
in
ja
dec
or
fwait
loopne
and
fwait
cmpb
ficomps
or
push
adc
xor
sti
insb
sahf
or
push
cmp
sahf
pop
hlt
jmp
or
sbb
sbb
nop
ds
cmpsb
imul
daa
xor
mov
out
jae
shr
mov
and
dec
and
jnp
shlb
inc
lock
and
inc
mov
daa
mov
addb
dec
mov
adcb
pusha
in
xlat
dec
lods
clc
or
lahf
stos
loopne
sub
push
mov
add
sub
pusha
jg
mov
push
aaa
mov
push
pop
cmpsl
int
aad
scas
and
in
cld
cmp
enter
jns
enter
test
movsb
jg
rcll
xchg
mov
jb
xchg
scas
movsl
fsts
insb
fldenv
xchg
fstpt
jmp
sbb
scas
test
jae
in
jne
sbb
icebp
push
sti
jne
jle
fistl
ret
adc
into
into
ds
int
mov
ljmp
cmpsb
dec
mov
mov
cli
jo
jae
dec
gs
les
push
xor
pop
rorb
movsb
lcall
add
adc
pop
push
add
cmp
add
das
pop
and
sbb
repnz
adcb
inc
outsb
inc
int
sub
pop
xchg
cwtl
lret
lret
les
and
popa
sahf
popa
pop
or
movsl
int
mov
pop
hlt
or
sub
ret
lds
decl
and
cmp
idivl
mov
clc
add
mov
mov
push
nop
mov
sbb
adc
out
dec
adc
mov
add
xor
push
insb
jp
repnz
pop
fwait
and
xor
ljmp
cmpsb
cmp
mov
iret
sbb
lods
rcrl
cld
push
xchg
jae
cmp
cmp
pop
pop
pop
pop
movsb
pop
popf
lock
call
pop
xor
aas
repnz
pusha
pop
add
popf
fldcw
in
and
popf
int
sbb
lahf
popf
rorl
mov
inc
pop
mov
call
mov
shr
pop
icebp
insl
cld
xor
mov
aas
daa
cwtl
cmp
adc
addr16
hlt
mov
mov
sarl
and
jno
dec
pop
shr
pop
push
fninit
lret
mov
mov
or
cld
and
loop
int3
push
fistl
push
test
shll
jnp
pusha
add
inc
inc
fisttps
dec
into
dec
sbb
stos
loop
push
hlt
dec
mov
inc
dec
aam
fs
ret
into
xchg
in
and
jg
les
ljmp
sub
push
mov
popf
outsb
inc
mov
lods
sti
xchg
into
pop
in
cmp
call
aad
fwait
dec
fisubl
mov
mov
mov
sbb
sti
pop
jno
fists
xchg
xor
lea
cli
mov
test
pop
mov
adc
pop
fisttpl
sbb
mov
mov
scas
push
lock
xor
shll
xchg
cmp
ds
jno
loopne
leave
jge
popa
popf
fwait
push
xchg
gs
jb
nop
pop
jg
or
mov
icebp
lock
cld
and
das
mov
adc
push
adc
pop
mov
mov
aam
jge
ds
jmp
cwtl
pop
xchg
pop
xor
and
mov
xchg
xchg
adc
xor
sbb
fdivrs
frstor
outsb
jecxz
hlt
sbb
push
adc
lods
cmc
pop
rcll
pop
push
test
loopne
push
fcmovne
fbstp
fwait
enter
mov
xchg
mov
jno
and
inc
pop
sti
cmp
pop
lods
pop
insb
pop
sub
jmp
shrb
ljmp
cmc
cmpsl
pop
dec
and
push
ljmp
or
jmp
shrb
xlat
aam
lock
cmp
mov
frstor
pop
mov
lock
rolb
pusha
out
ret
call
imul
push
jne
cmc
push
mov
mov
mov
mov
mov
cmp
icebp
pop
ds
sbb
pop
push
adc
ror
xor
outsb
pop
adc
sub
jne
arpl
xchg
pop
xor
adc
pop
xchg
ss
xor
cmp
dec
mov
sti
pop
mov
outsb
xor
scas
fwait
jbe
sbb
lock
mov
inc
mov
std
push
and
rcrl
je
dec
jge
mov
pop
jecxz
bound
mov
jg
out
mov
or
xchg
arpl
mov
sbb
push
cmc
inc
movsl
xchg
and
sbb
lods
cs
jg
inc
sub
jae
mov
push
sbb
gs
sbbb
push
jp
lds
inc
cmp
push
xor
sti
push
mov
pop
cli
cld
dec
sbb
ds
add
and
jb
nop
pop
mov
sbb
enter
daa
test
cwtl
inc
rcrb
imul
ss
frstor
loop
call
xchg
xorb
stc
push
dec
leave
dec
push
das
and
push
dec
xor
cmp
lea
pop
loop
push
sahf
pusha
cmp
aas
scas
iret
fstpl
loopne
adc
xlat
data16
xchg
pop
pop
or
gs
cli
mov
loop
icebp
xor
push
xchg
shrl
ljmp
cmpsb
jae
adc
adc
loop
push
adcb
inc
data16
insl
iret
fcmovnb
sub
sbb
clc
adc
test
daa
aas
popf
out
pushf
sub
sbb
inc
ret
daa
push
andb
daa
cmp
mov
loopne
subb
xchg
enter
xchg
sub
lahf
in
lock
call
inc
adc
xor
lahf
adc
pop
xor
cmp
sbb
fs
adc
and
push
adc
ss
dec
sbb
call
lret
xor
cmpsl
test
mov
loop
jle
icebp
sbb
fwait
hlt
ret
xor
adc
pop
pop
loop
iret
lret
jae
pop
popf
rcll
dec
imul
out
cli
fdiv
mov
add
aam
pusha
mov
js
pusha
mov
pop
sahf
jae
cmp
ret
lods
loopne
push
mov
sub
aas
mov
pop
sbb
shr
or
data16
cld
xor
xor
sbb
pusha
or
sbb
int
std
add
add
adc
mov
jno
inc
loopne
or
jmp
sbb
rcll
pop
ljmp
adc
mov
adc
scas
stos
aaa
pop
xor
jnp
mov
inc
inc
cld
mov
std
sti
lods
vmread
rolb
je
cs
xchg
inc
aaa
loop
and
iret
ja
sarl
gs
mov
dec
sub
movsb
jmp
push
mov
xor
xor
mov
mov
push
mov
pop
mov
mov
das
sbb
inc
test
sbb
jp
loop
or
sbb
js
addb
in
sbb
rcrl
pop
imul
adc
lock
repnz
and
xchg
mov
adc
push
add
leave
fcomip
pop
sbb
adc
dec
adc
fdivrl
nop
aam
jns
xor
mov
mov
rcrb
lahf
clc
xchg
add
mov
scas
ljmp
cmp
sahf
je
xor
rep
jmp
xlat
xchg
adc
xor
mov
inc
cmc
mov
mov
popa
negb
and
jg
outsl
jmp
mov
divb
sahf
rclb
loopne
repnz
push
sbb
sbb
xor
or
pop
test
sbb
pop
cmp
sbb
sbb
mov
sti
push
scas
iret
cmpsb
pmaxub
adc
cmc
loopne
mov
mov
pop
inc
scas
ret
in
xor
cmp
sbb
cmp
ret
sub
xor
jnp
dec
xor
mov
cmc
jae
imul
cmp
jg
scas
jmp
fs
je
adc
ja
scas
in
loopne
daa
push
push
and
imull
pop
sbb
push
pop
pop
les
push
pop
jecxz
sbb
scas
xchg
leave
and
cmp
subb
or
pop
pop
or
or
jnp
jo
add
or
mov
xor
cmp
cmp
insb
sub
and
scas
inc
cwtl
pop
pusha
adc
loop
das
push
in
xchg
sti
jmp
dec
dec
clc
cmpsl
addb
sahf
xchg
push
cmp
push
jp
xchg
aad
adc
mov
xchg
popa
jmp
ret
cld
sub
sti
add
jl
adc
mov
jmp
pop
mov
push
popf
sahf
inc
pop
flds
pop
adc
jne
inc
out
pop
testb
fidivrl
mov
aas
sbb
in
jg
hlt
xchg
jmp
pop
inc
push
jnp
mov
rcll
movsb
xchg
aas
sub
xor
sahf
inc
or
push
in
ss
lret
sbb
push
fstp
sbb
mov
dec
push
js
cmp
xor
sub
das
mov
cmp
sbb
mov
iret
pop
sbb
sbb
adc
out
js
adc
mov
loopne
jge
popa
add
or
ds
xchg
add
insb
hlt
or
repnz
lea
jo
movsb
push
or
adc
push
or
out
cmpsl
stos
repz
adc
push
loopne
sbb
jno
leave
sub
es
mov
cmp
sbb
cld
jge
mov
push
adc
jo
add
fstpl
jnp
lahf
fdivs
negl
mov
mov
shrb
sbb
repz
cmc
sahf
sti
js
lahf
test
xlat
inc
add
sbb
push
push
cmp
mov
fdivs
mov
mov
and
add
jge
popf
fildll
adc
mov
pop
mov
repnz
lods
xor
adc
test
sahf
fs
shl
xor
add
clc
rclb
or
scas
push
push
fstps
mov
xor
mov
dec
movsb
push
cmp
xchg
cmp
mov
cmp
cmp
pop
insb
pop
or
stos
pop
pop
sti
sbb
test
xor
jmp
xchg
jns
cmp
sbb
test
push
jecxz
xor
leave
sets
adc
mov
loopne
loop
dec
xor
repz
out
or
aad
jecxz
sbb
fwait
ljmp
testb
pop
sbb
movsb
push
stos
sti
jb
mov
sti
mov
outsb
inc
xor
add
mov
loopne
pop
xchg
adc
ja
stos
or
mov
aam
mov
jecxz
push
popa
or
adc
adc
scas
fimull
adc
gs
stos
jge
jmp
pop
aad
std
or
xor
idiv
add
and
daa
mov
or
sbbl
mov
sti
lret
sbb
mov
mov
push
jo
ror
sbb
mov
aam
adc
jecxz
addl
sbb
ljmp
in
dec
or
stos
out
xchg
sub
mov
cmp
pop
fisubrl
fidivrs
pusha
jge
pop
pushf
push
jbe
add
inc
in
lret
in
sarb
jl
inc
hlt
mov
popf
sahf
cmpb
xchg
fcompl
rorb
push
jae
adc
pop
push
dec
sbb
pushf
jp
pop
fimull
lahf
inc
sub
outsb
jmp
adc
adc
enter
fistps
lahf
inc
out
mov
movsb
rolb
sbb
ljmp
bnd
xor
in
repnz
mov
inc
mov
mov
cmp
sti
cs
insl
aad
leave
inc
pop
cmpsb
call
pop
xchg
pop
daa
dec
xchg
pop
cmp
add
jmp
xor
nop
fcmovnu
mov
mov
call
xlat
popf
lods
lock
out
sbb
cmp
dec
or
in
call
in
push
cmp
addr16
lods
cmpsb
in
lods
movsl
insl
and
lods
fstpl
sub
xlat
stos
xchg
mov
ljmp
jmp
push
call
push
sub
cmp
dec
out
xchg
data16
adc
inc
outsl
pop
out
push
nop
cmp
mov
dec
aam
movsb
mov
mov
movsl
sbb
shlb
pop
frstor
imul
rorl
lock
pop
sbb
sahf
enter
nop
pop
xchg
cmp
jo
mov
in
cwtl
push
cmc
push
js
rcrb
mov
pop
popa
inc
cli
bound
adc
into
fdivl
mov
out
lahf
xchg
xchg
add
pop
or
pop
sahf
pop
mov
sbb
stos
sbb
cmp
inc
inc
pop
outsb
inc
lcall
jno
cmp
shll
xor
and
cmc
xchg
rcl
cmp
outsb
loop
insb
xor
popa
or
push
or
cmpsb
sarb
jmp
ret
das
mov
jmp
loop
or
and
orb
sbb
lret
ret
leave
hlt
imul
popa
dec
outsl
lret
stos
mov
cwtl
xchg
sbb
pop
ds
stos
pop
test
adc
adc
and
and
out
into
dec
sub
mov
push
sti
adc
repnz
mov
pop
sbb
push
sub
xor
jb
popl
cli
sarl
fisttps
cli
pop
cmc
push
mov
mov
pop
mov
pop
lret
sub
dec
inc
je
inc
test
stos
mov
popf
sarb
int
fcoms
repnz
jle
notrack
scas
and
sbb
aad
and
add
lock
sbb
cmc
xchg
dec
xchg
push
sahf
mov
pop
jns
imul
shrb
sub
inc
clc
pop
pop
dec
lods
sbb
lcall
jns
add
sbb
xor
push
cmp
mov
pusha
and
add
mov
test
pop
pop
sti
ficoml
rcl
mov
ss
sbb
xchg
jb
mov
es
movsl
fistl
xchg
or
add
mov
jle
jo
dec
notrack
ljmp
dec
loop
cmpsl
xchg
mov
jae
mov
mov
loopne
cmp
test
xor
decl
push
push
or
dec
sbb
ds
sahf
adc
pop
mov
pop
mov
push
popa
add
mov
fdivrl
adc
mov
call
push
dec
movsl
cmp
adc
jae
mov
hlt
pop
mov
je
ja
repnz
loope
cmp
popa
xor
loopne
xchg
shll
hlt
dec
sub
sti
pop
sahf
lock
push
call
ret
dec
push
or
xor
cmp
stos
call
xor
pop
xchg
mov
lea
cmp
add
rorb
vprotb
jne
lret
sbb
mov
xor
faddl
iret
and
daa
lock
pop
push
roll
ss
xchg
fmuls
push
mov
ret
inc
push
cmc
fisubl
out
and
mov
pop
popa
fdivs
imul
sub
pushf
shll
popa
push
push
cli
add
popa
add
ds
cmpsb
mov
inc
scas
ret
lock
mov
jno
imul
dec
pop
in
cmpsb
sub
inc
pop
jge
cmp
xor
std
dec
leave
lret
out
icebp
mov
ret
ud0
lock
loopne
lret
shll
pop
cltd
test
sub
push
sbb
int
mov
xor
cmpsb
xchg
movsl
in
test
das
je
push
sti
jns
add
fcmove
jmp
mov
icebp
cmp
lock
lahf
adc
enter
sbbb
mov
hlt
push
enter
or
dec
or
lods
cmp
jge
jnp
cltd
ret
imul
mov
dec
inc
adcb
testl
insb
ds
sbb
mov
adc
mov
push
pop
pop
repz
inc
repnz
fs
ljmp
fists
jg
cmp
std
out
push
xchg
adc
sub
sub
jns
sub
dec
xchg
cmp
push
dec
or
aad
adc
mov
push
push
jg
nop
fdivs
lret
andb
mov
lahf
stos
loopne
lret
clc
pop
xchg
pop
xchg
imul
cmp
cmpsb
lahf
iret
es
pop
pop
nop
mov
fiadds
sbb
push
outsl
and
mov
ds
pop
add
cmp
xor
aad
shrl
repnz
outsb
add
adc
cmp
stc
and
xor
sbb
lahf
sbb
xchg
arpl
mov
ds
sbb
jno
out
inc
imul
xor
imul
xchg
or
lret
jmp
push
leave
enter
test
decl
push
dec
or
daa
aaa
inc
lahf
pop
test
mov
int3
hlt
leave
mov
push
xchg
or
cs
mov
dec
xchg
scas
dec
dec
cmpsb
or
jb
mov
cmp
add
decl
inc
and
repz
and
jbe
dec
cmp
inc
xor
repz
call
add
pop
ss
jnp
nop
pop
sub
mov
pop
in
jecxz
cli
rcrl
lock
das
xor
rcll
aas
outsb
lods
adc
mov
pop
mov
pop
shlb
xor
push
push
rclb
xor
mov
movsb
sub
cmp
stos
in
int
push
ljmp
add
lahf
dec
pusha
sub
inc
aam
ret
pop
movups
loop
cmp
push
out
ds
mov
popf
mov
cwtl
adc
mov
sarb
pop
aam
adc
cmp
aad
cmp
insl
ss
sbb
xor
lret
ret
in
mov
cmc
cmp
pop
sbb
adc
pop
cli
popa
enter
je
sar
repnz
sbb
mov
es
pop
inc
cltd
xchg
mov
xor
sti
fistl
dec
icebp
sbb
das
ss
mov
das
adc
sbb
aad
add
mov
push
cmpsb
mov
sbb
dec
fwait
inc
sahf
in
mov
pop
dec
dec
sbbb
xor
icebp
scas
stos
lahf
pop
inc
xchg
mov
and
xchg
sbb
push
add
add
dec
fdivrs
insl
mov
adc
ds
xor
add
jae
loopne
das
mov
dec
inc
popf
mov
xlat
push
adc
and
je
mov
mov
pop
mov
lahf
mov
rorb
cmpsb
mov
sahf
shll
pop
pop
or
lock
jns
sahf
mov
daa
xor
repz
nop
pop
xor
pop
imul
scas
mov
lret
mov
pop
xorl
add
dec
out
popf
sbb
sbb
xor
dec
or
xchg
notb
adc
sub
cld
jle
mov
scas
mov
pop
adc
in
cmp
sub
jge
das
lahf
dec
into
dec
adc
daa
clc
sbb
lcall
push
leave
or
and
rcrl
mov
stos
stos
enter
cwtl
jae
rolb
dec
mov
es
cmpb
cmp
cmp
jae
scas
fisttps
push
scas
ds
xchg
shll
rcrl
cmc
adc
jo
sub
jbe
jns
loop
outsl
jg
xlat
sbb
mov
mov
inc
inc
jecxz
repnz
sbb
pop
push
sahf
push
mov
gs
adc
mov
xor
xor
and
lods
rcll
iret
ljmp
pop
jne
jecxz
mov
pushl
ss
sbb
mov
cltd
pop
push
repz
or
and
shlb
mov
mov
sti
dec
fisttpl
das
push
mov
pop
rcrl
cmp
mov
mov
adc
aas
xor
mov
sti
jmp
lret
dec
mov
sub
or
or
push
pop
inc
dec
addl
sahf
cs
cltd
fldenv
adc
in
js
pusha
shrb
mov
dec
cmp
icebp
pop
pop
push
sbb
cmc
push
shll
fisttpl
sahf
mov
ljmp
lret
cli
mov
inc
fbld
mov
pop
mov
loopne
mov
fstpt
push
mov
les
sbb
mov
daa
js
inc
mov
adc
pusha
and
cmpsl
push
loopne
repnz
ja
inc
stos
repnz
xchg
adc
daa
fisubl
jns
scas
adc
or
jl
stos
mov
and
adc
sti
pop
xor
clc
cmpsb
push
test
shll
loop
jg
adc
stos
roll
push
jns
add
jne
adc
fistps
push
je
stos
push
mov
scas
cmp
ror
sti
inc
and
dec
cmp
inc
cli
sbb
push
pop
sub
or
or
sbb
popf
call
xor
rorl
mov
sbb
js
pusha
lea
xchg
push
shll
xor
mov
jl
sbb
adc
pop
xor
int3
hlt
sub
iret
cmp
movsl
neg
das
and
je
xor
repz
mov
pop
mov
push
mov
in
jae
jae
scas
mov
fwait
sbb
mov
dec
ss
lods
pop
mov
cli
pop
xchg
pop
push
or
mul
shlb
xchg
push
rcrl
pop
ds
or
dec
lcall
and
adc
jg
loopne
lret
clc
iret
adc
aas
cmc
aaa
stos
idivb
pop
scas
push
shlb
test
mov
xor
adc
mov
fs
mov
outsb
mov
mov
add
sbb
rorl
scas
mov
mov
push
push
pop
subb
adc
xor
lods
inc
pop
mov
pop
push
pop
push
xchg
pop
mov
iret
cmpl
mov
mov
andb
pop
cld
pushf
sbb
mov
ret
cli
dec
mov
ljmp
dec
aas
std
add
dec
sti
sub
adc
inc
loope
out
jge
mov
mov
aaa
cmpsl
loopne
in
aam
mov
div
repz
add
cmp
xchg
ja
lahf
das
loopne
and
call
jmp
pop
inc
push
sub
test
in
mov
sbb
mov
push
fdivs
adc
stc
sbb
sub
mov
mov
or
xor
inc
pop
jb
sbb
inc
pop
pop
stos
cwtl
in
sub
stc
pop
add
sbb
pop
pop
cmp
xchg
cwtl
sbb
ja
loopne
mov
enter
cmp
xor
pop
fadds
xchg
xor
xchg
sbb
push
inc
scas
lret
xchg
aaa
inc
jnp
push
pop
sti
dec
std
pop
popa
cwtl
rcrl
pop
rolb
inc
push
cmpb
xchg
cmp
adc
pusha
push
mov
fwait
sarl
pop
push
pop
adc
sbbb
jnp
xor
movsl
cmp
sub
popa
mov
pop
fisubs
sub
adc
sbb
lahf
adc
jae
push
xchg
clc
cmp
mov
adc
popa
sub
mov
scas
mov
adc
sub
mov
mov
add
adc
repnz
aas
mov
outsl
jp
pop
xor
je
repnz
cmp
dec
sub
sti
scas
lcall
sub
cltd
repnz
xchg
mov
popa
or
fwait
pop
fs
or
pop
jmp
push
push
lahf
and
pop
fldenv
mov
int
jb
sbb
jb
repnz
mov
fldl
pop
adc
ret
adc
sti
fcmovbe
push
mov
jg
rolb
add
inc
ss
stos
sub
cmp
in
push
mov
dec
lret
xor
fsts
dec
push
sbb
loop
xor
fnstenv
inc
aaa
xor
scas
mov
pop
mov
in
lea
sbb
lods
sbb
pop
fistl
add
aam
je
add
les
xchg
lods
push
add
in
cmp
inc
je
xor
repz
popf
pop
or
push
loope
ljmp
pop
ds
pop
lcall
inc
cmp
clc
loope
mov
test
imul
cmp
mov
je
lret
xor
fistpl
xor
sub
ss
cmp
dec
call
sbb
loop
iret
mov
out
mov
clc
mov
xchg
das
adc
cmpsb
fnstsw
loopne
xor
insb
fisttps
fcompl
movsb
loop
jno
mov
mov
ja
and
dec
add
or
js
fdivl
cli
negl
cwtl
aaa
xor
scas
jno
xor
outsl
loop
loop
mov
sbb
lock
or
test
sar
pusha
mov
lcall
cmp
ret
pop
mov
daa
aad
and
test
cmp
hlt
shll
inc
into
rcrl
pusha
imul
push
jp
leave
sub
idivl
push
mov
adc
cmp
adcb
cmp
mov
addr16
push
inc
inc
xor
out
sub
xchg
jmp
popa
xor
fnstcw
mov
pusha
fstpl
stc
jl
cmp
push
divb
dec
movsb
mov
mov
sbb
mov
mov
sbb
push
jge
pop
sti
mov
mov
jne
push
daa
roll
pop
xchg
dec
daa
xor
pop
push
sbb
pop
test
xorb
adc
ds
mulb
mov
mov
iret
mov
push
jo
mov
and
jg
outsl
rclb
jmp
xchg
jg
dec
clc
decb
addr16
leave
pop
sbb
insl
jnp
sarl
or
sbb
sbb
pop
mov
dec
imul
adc
mov
lock
xor
repz
jno
repz
std
xacquire
mov
pop
pusha
daa
cld
int
lock
mov
mov
out
fisubrs
cmp
test
das
sahf
call
lock
push
dec
lret
cli
test
jb
nop
jnp
stos
out
push
repnz
jg
xchg
push
jne
fistl
mov
dec
leave
sub
jb
sbb
xor
inc
mov
mov
stos
insl
ret
in
push
popf
idivl
sbb
sti
sbb
js
mov
adc
mov
lcall
gs
add
adc
push
ret
roll
pop
dec
cmp
cld
lahf
fwait
mov
sarb
xchg
ret
lahf
or
dec
cmp
mov
je
push
push
xchg
lret
lret
das
cmp
repnz
add
pop
add
out
pusha
jp
cli
jae
jae
jge
in
das
jle
and
mov
subb
out
fmull
sub
mov
cmc
pop
mov
jge
push
jp
xor
cmp
pop
mov
xor
out
push
push
push
cltd
hlt
sbb
scas
out
mov
jmp
sub
dec
gs
std
cmp
xchg
int3
cmp
inc
xchg
xchg
xchg
lahf
fs
addb
call
lahf
pop
or
ss
in
jle
aas
aaa
mov
inc
and
and
jmp
mov
adc
jbe
add
sub
ret
adc
sbb
and
addb
nop
xorb
cmp
pop
dec
in
pop
out
fcomps
mov
mov
cmp
fcompl
inc
xor
dec
mov
jno
repnz
lock
jae
jae
stc
ja
decb
dec
jle
ds
sbb
cld
popl
jl
cmp
ss
cli
cltd
fwait
pop
cmp
mov
js
aaa
mov
dec
mov
jbe
adc
mov
xor
pop
adc
repz
mov
dec
cltd
push
pop
jno
pop
xchg
rorl
mov
in
enter
dec
push
fldt
xchg
enter
lret
loope
enter
push
adc
lods
jne
popf
in
jl
jg
aas
inc
pop
ret
jne
push
xorb
xor
call
push
adcb
jne
mov
notl
pop
adc
fists
inc
dec
xchg
sahf
mov
dec
mov
fs
mov
dec
les
inc
dec
fstps
adc
fs
xchg
popf
push
je
testl
pop
push
je
push
mov
dec
lcall
je
mov
lahf
push
inc
ds
movsb
sti
je
fistps
pop
enter
push
sbb
addr16
inc
mov
jo
sbb
mov
xlat
out
notl
mov
mov
shlb
and
mull
sbb
addb
into
lahf
int3
sahf
ljmp
dec
stos
fstps
sbb
lods
xchg
mov
leave
loop
mov
jne
pop
push
jno
or
inc
xlat
sub
jg
pusha
inc
and
dec
sbb
das
in
repnz
cwtl
inc
aas
sbb
cmpsb
fdivs
jmp
test
ds
lock
lahf
and
pop
mov
xor
jmp
jle
mov
aam
sub
dec
sbb
xchg
out
dec
imul
or
scas
xor
imul
lock
das
cld
cmp
scas
outsl
adc
pusha
fs
test
xor
sbb
ljmp
cmp
cmp
add
pop
lds
xchg
decl
jmp
mov
pop
jnp
popa
in
xchg
jg
mov
sbb
pop
sub
cmp
cmp
sahf
xor
pop
sbb
xchg
imull
es
cld
std
and
mov
pop
cmp
repnz
int3
sahf
pop
ljmp
add
mov
sbb
aaa
scas
and
adc
sahf
xchg
cmp
jmp
mov
es
movsl
xchg
cmp
std
mov
sahf
ficoms
mov
push
ret
cwtl
scas
es
cmp
lahf
enter
xchg
dec
mov
add
mov
jg
pop
push
push
shll
jno
cmp
cmp
lea
mov
popa
dec
leave
call
add
xor
movsl
movb
enter
or
sbb
xorb
subb
lock
mov
movsb
mov
jmp
cmp
mov
lret
lret
dec
cmp
repz
pop
adc
cmp
repz
shrl
pop
jl,pn
adc
dec
sbb
mov
dec
inc
sbb
je
pusha
adc
stc
popf
ljmp
jmp
xchg
push
xor
inc
mov
ret
daa
pop
mov
call
sbb
cmpsb
mulb
jns
loop
jnp
push
jo
sub
dec
fldenv
std
repz
push
pop
popf
xchg
repz
ss
clc
roll
mov
sbb
jmp
mov
mov
cmpsb
jns
xchg
adc
mov
mov
dec
cmpb
ds
lds
xchg
movsb
adc
outsb
mov
pop
shrl
ja
pop
fcmovnu
rcll
repz
sub
mov
test
rolb
outsb
repz
daa
jle
push
pop
sbb
lock
xchg
fldenv
cli
fcmove
je
rcl
jo
divl
xchg
shr
pop
lret
dec
mov
xor
jae
popa
gs
shl
scas
cli
into
sub
repz
mov
mov
sub
add
pop
jp
pop
jmp
iret
int
fwait
mov
xchg
mov
jns
add
mov
repnz
dec
mov
mov
push
mov
mov
notl
pusha
out
imul
pop
pusha
sub
mov
test
ljmp
jo
adc
cmpl
inc
bnd
or
repz
push
inc
ds
pop
repz
dec
or
roll
cli
repnz
push
push
js
ds
jb
adc
adc
das
mov
mov
rcrb
add
mov
mov
dec
fwait
xor
rclb
loop
sarb
dec
inc
and
jmp
push
into
push
sub
shl
lods
and
out
cltd
adc
stc
add
das
sahf
in
pop
mov
pop
xor
sbb
xchg
push
jnp
cmpsb
mov
lahf
sahf
mov
sbb
hlt
ficompl
jmp
jbe
mov
pop
clc
xchg
jmp
mov
inc
je
pusha
dec
mov
push
addr16
sahf
aas
xor
daa
push
mov
pop
xchg
mov
pop
lock
xor
popa
test
jnp
mov
mov
je
xor
imul
rcrb
arpl
incb
or
in
sbb
fnsave
inc
ret
push
sarb
out
dec
dec
mov
inc
insb
mov
ss
pop
dec
rolb
or
xor
pop
shrl
mov
jecxz
hlt
movsb
push
dec
stos
xor
jo
dec
mov
push
or
or
sbb
cwtl
outsb
xlat
cmc
loopne
ds
aad
xchg
adcb
cltd
call
js
cmpb
ss
fldt
rclb
sbb
or
sbb
fwait
push
pop
ljmp
test
ret
and
sbb
adc
mov
sub
es
jbe
sbb
scas
jo
sti
mov
adc
nop
mov
push
movsl
pop
and
js
dec
push
xchg
dec
out
jp
push
jmp
fisubrl
repnz
push
push
mov
mov
jo
pusha
divb
jl
lahf
cld
sbb
adc
cmp
inc
jno
fs
xchg
push
jmp
pop
jae
cmp
pop
loop
iret
nop
scas
sbb
jl
movsb
bound
xchg
pop
imul
pop
lods
mov
fnstenv
jg
mov
mov
cmp
adc
into
fidivrs
dec
ret
adc
xchg
sti
pop
jmp
int
mov
sub
jge
cmp
mov
cmpsb
leave
clc
std
dec
sbb
enter
lock
inc
sub
popl
dec
test
rol
and
xor
lea
dec
pop
jp
sbb
xor
push
xor
out
test
pushf
es
push
mov
mov
lgs
repz
jmp
pop
popl
sub
adc
xor
scas
int3
notb
cltd
or
and
hlt
in
movsb
fs
lods
push
jecxz
push
dec
arpl
jmp
push
mov
ja
inc
loop
mov
out
mov
data16
xchg
pop
push
ljmp
mov
cmp
mov
push
into
ss
inc
cmp
int3
pop
pop
add
pop
mov
cli
rclb
jge
or
cmp
jle
and
iret
xor
sbb
ja
dec
hlt
shl
pop
mov
mov
jmp
xchg
inc
divl
icebp
pop
std
sbb
xchg
cmp
popf
lea
sbb
mov
sti
pop
jns
shrl
pop
add
scas
xchg
cmp
mov
ret
lret
rcr
and
insb
xorb
lods
jnp
nop
xchg
cltd
pop
ret
push
adc
testb
sbb
cmp
mov
popf
out
hlt
enter
test
jno
mov
mov
lods
sub
scas
enter
gs
mov
loopne
dec
fwait
mov
into
sbb
lock
nop
dec
push
shl
mov
mov
daa
adc
es
lock
mov
cltd
loop
xchg
sub
inc
das
mov
jo
lahf
jecxz
aas
das
ss
stc
int3
jmp
sahf
inc
jmp
pop
jp
pop
mov
pop
std
mov
sarl
ret
inc
jmp
pushf
test
loope
ficompl
pop
lea
pushf
dec
dec
inc
hlt
lcall
inc
pop
xor
popa
jmp
push
sbb
aad
shll
scas
fistps
pop
daa
sbb
pop
and
fimull
mov
push
cmpsb
mov
inc
mov
lock
or
cmp
pop
into
cmpsb
outsb
es
mov
rclb
push
jg
outsl
aam
pusha
repz
repnz
mov
fwait
or
lock
sbb
aam
jmp
jae
in
cmp
jno
or
repz
xchg
fiadds
repnz
je
xor
daa
xor
mov
jns
rcrl
ret
into
int3
sub
mov
sbb
cmp
lea
in
pop
push
jno
or
pushf
mov
popf
dec
repnz
mov
mov
inc
subb
call
add
add
pop
mov
cli
mov
sahf
outsb
xor
leave
xor
xchg
cmp
movsl
pop
cmp
jle
ficomps
pop
lret
xor
xor
ja
lock
shrl
sbb
jae
stc
xor
out
cli
ror
sbb
mov
mov
ss
cmp
dec
mov
in
mov
jno
aas
dec
cmp
xor
stc
push
adc
xchg
push
lahf
scas
pop
sahf
inc
stos
inc
dec
mov
mov
pop
mov
push
ffreep
daa
jns
jo
pusha
aaa
sbb
loopne
leave
fiadds
out
or
clc
pop
or
pop
push
inc
mov
pop
fnstsw
sti
or
loop
push
push
adc
and
lock
ja
jg
pusha
add
pop
mov
sub
mov
cmp
lahf
sahf
pusha
jmp
mov
cmc
and
adc
sbbb
mov
push
cmp
add
mov
jnp
xlat
daa
movsl
in
lock
or
loop
hlt
mov
mov
mov
sub
testl
stc
sbb
dec
rcrb
mov
pop
test
cmpsb
stos
inc
ss
sbb
repnz
dec
sub
jo
mov
rcrl
xor
je
divl
jns
cli
rorb
sti
inc
pop
mov
cli
pop
mov
popf
loopne
lret
ror
pop
push
xlat
leave
xor
mov
ret
lock
mov
jge,pt
cmp
xor
hlt
popa
fwait
lock
negl
idivl
ds
hlt
std
addr16
push
mov
out
fldcw
xor
pop
das
push
cmpsb
mov
adc
cmp
hlt
loope
mov
clc
loopne
js
iret
and
lahf
xchg
jno
sbb
xor
cmp
lret
daa
incl
pop
cmpsb
sub
loopne
bnd
inc
push
clc
dec
stos
push
adc
cltd
outsl
je
loopne
loop
les
mov
ljmp
mov
adc
pop
sub
ret
int3
jnp
inc
pop
sub
test
adc
push
cmc
cli
lock
pop
cli
in
jg
mov
mov
fcompl
mov
sahf
bound
cmp
jb
push
cmp
arpl
and
lahf
sbb
mov
fimull
sti
fwait
rcrl
sahf
mov
std
leave
in
addl
push
adc
sti
pop
xor
pop
xor
push
xchg
dec
rcll
sub
pop
xchg
leave
repnz
mov
movsb
and
dec
or
pop
or
mov
imull
stos
pushf
cmp
popf
mov
cmpsb
inc
mov
jb
loope
std
cld
lods
addl
dec
cwtl
inc
cmpsb
inc
xchg
cmp
jmp
or
stos
cmp
sbb
jae
pop
cmp
popf
imul
cmpsb
movsl
cmp
pop
ret
pop
xchg
pop
push
jo
lcall
hlt
sbb
mov
dec
pop
sub
mov
mov
ljmp
mov
push
lcall
xor
add
test
xor
negb
pop
sbb
sbb
popf
jo
adc
js
out
push
fists
mov
aas
or
ja
mov
mov
sti
push
outsb
cmp
fdivp
xor
aad
or
pop
adc
jne
sbb
xor
sahf
lret
cmpb
lock
mov
movsl
mov
pop
push
xorb
nop
stos
and
lahf
jle
pusha
pop
lret
int3
es
ret
push
sbb
call
stos
repz
es
loopne
xor
xor
or
stc
pop
mov
pop
mov
push
xor
jae
stc
sti
inc
jecxz
xorl
sub
adc
out
dec
fwait
jne
mov
jo
sub
pop
repz
or
mov
lds
fcoml
adc
rcrb
dec
mov
lcall
adc
xor
xor
inc
cld
aas
sahf
cmp
test
mov
scas
push
add
movsl
push
aam
loop
bound
push
pop
sbb
daa
mov
cmp
and
cld
jo
dec
lret
enter
in
jae
loopne
ret
lock
flds
addr16
push
cmpsb
testb
pusha
lcall
jnp
mov
push
fisttpl
jne
inc
mov
loop
push
fcomps
aas
mov
or
adc
imul
sbb
cmp
push
test
lock
gs
or
mov
mov
in
pop
mov
fildll
lcall
sahf
lea
icebp
xor
loopne
notb
xchg
jg
shrb
shl
cmp
push
xorb
dec
loope
xor
sbb
cwtl
dec
loopne
ja
pusha
repz
mov
rclb
lret
mov
xchg
cmp
adc
inc
and
cmp
mov
js
pop
push
mov
cmp
je
pusha
and
pop
mov
mov
mov
mov
hlt
pop
jp
mov
jmp
and
xchg
adc
repnz
pop
jp
in
negl
roll
sub
xor
repz
adc
push
sbb
mov
lods
push
bnd
pop
int
fwait
out
push
jb
mov
cmp
lea
bnd
adc
sbb
inc
ret
in
sbb
mov
sub
xorl
cli
jne
test
and
fs
cmp
mov
pop
sbb
cltd
add
pop
xor
adc
xor
jmp
sbb
inc
adc
clc
movsb
cmp
mov
xor
jle
xor
pop
adc
inc
dec
mov
cmc
adc
sbb
loopne
cmp
sahf
xchg
cmp
lods
out
mov
lock
sbb
cmp
mov
and
mov
inc
inc
cwtl
js
outsb
ds
flds
mov
lcall
cli
data16
pop
jnp
xchg
mov
lahf
mov
mov
jns
shl
cmp
sbb
or
inc
mov
xlat
adc
dec
cmp
xchg
cwtl
sbb
inc
cmpsb
pop
sbb
inc
icebp
test
sti
adc
adc
ss
mov
cmp
sti
inc
adc
dec
xor
pop
cmc
pop
and
sti
mov
mov
cwtl
negb
cwtl
sbb
push
mov
dec
adc
jp
and
pop
xor
jecxz
push
cmp
roll
xor
repnz
pop
ja
jg
outsl
xchg
loopne
das
push
fisttps
jl
stos
sarl
xchg
jecxz
jnp
movsl
ja
rol
pop
sbbb
xorb
aad
repz
je
mov
mov
dec
mov
and
std
mov
mov
shlb
ljmp
sbb
push
adc
iret
adc
mov
je
imul
inc
jae
test
jp
mov
sbb
mov
hlt
mov
xlat
push
cld
add
cmp
leave
and
mov
pop
lea
push
lods
adc
lcall
out
jno
aas
mov
mov
shll
adc
xor
loop
mov
push
rorl
rcr
ja
dec
cli
popf
aaa
aam
add
call
pusha
fbstp
ljmp
adc
mov
inc
mov
jmp
push
pop
insl
pop
or
sahf
lahf
popf
push
sbb
sbb
mov
mov
ljmp
jno
leave
pop
cmp
xor
leave
sarl
icebp
ds
xchg
shlb
dec
movsb
adc
cli
mov
outsb
sbb
ret
insl
arpl
pusha
outsl
and
add
popa
mov
mov
sarl
xor
cltd
cmp
push
in
xor
mov
mov
pusha
sbb
aas
stc
pop
mov
pop
es
rcll
nop
pop
jae
sbb
cwtl
pop
cmp
loopne
sbb
fcompl
jg
cmp
fistl
cmpsb
pop
stc
and
test
fwait
rclb
and
sahf
inc
dec
das
fxch
nop
mov
mov
jle
mov
ret
sarb
aad
dec
das
lock
push
popa
fwait
xor
adc
pop
xor
rol
xor
iret
repnz
mov
jnp
dec
test
pushf
fildl
fistps
adcb
ja
cli
push
mov
daa
leave
daa
jnp
pop
push
lahf
pop
stos
stos
mov
dec
aaa
pop
mov
sbb
scas
pop
mov
fsubrs
dec
pop
insl
mov
lahf
lea
adcb
mov
jg
lock
leave
imul
xor
mov
pop
xchg
dec
cmp
outsl
test
shll
std
stc
cmp
xor
aad
mov
pusha
in
pop
xchg
out
mov
sbb
ja
lock
loop
sbbb
mov
push
mov
dec
mov
add
inc
loopne
xor
je
addr16
negb
mov
inc
jge
sbbb
outsb
mov
push
jb
jb
push
adc
xor
into
imul
sbb
inc
sbb
sbb
mov
imul
sahf
negl
xor
cli
pop
dec
mov
sarb
test
dec
xchg
dec
test
popa
xor
cli
pop
ss
ja
xor
sbb
ret
lock
mov
rolb
or
cmp
dec
add
jne
cmp
pop
add
xchg
lods
fistpl
jnp
pop
mov
dec
mov
pop
mov
lret
addr16
mov
jb
and
fwait
loop
pop
mov
cli
stos
mov
xor
and
pop
sub
cltd
cld
push
mov
jns
fs
mov
cmpsb
mov
pop
inc
adc
cmp
jnp
pop
fcompl
cmpsb
pop
xor
and
jle
fsub
pop
das
adc
and
pop
adc
push
dec
pop
ret
and
fistl
push
leave
sub
stc
jns
shll
xchg
adcb
es
mov
push
dec
mov
pop
daa
test
loop
mov
cli
cmp
inc
push
mov
push
dec
mov
push
or
rorl
sbb
sbb
sti
mov
mov
test
dec
cmp
mov
xor
pop
pushf
inc
sahf
add
fwait
sbb
cmp
pop
mov
push
xlat
dec
les
push
pop
outsl
pop
scas
stos
daa
cltd
test
out
cmc
push
pop
repz
or
pop
aad
scas
fdivrl
sbb
inc
mov
loopne
iret
xor
addr16
jae
leave
ret
in
xor
xlat
not
ret
add
test
sahf
cld
adcb
mov
ss
inc
ffreep
pop
cwtl
xor
scas
std
sbb
adc
adc
pusha
mov
cmp
xchg
aam
test
mov
mov
pop
pop
push
movsl
cmpsb
mov
dec
xorb
add
mov
jg
outsl
sbb
das
sti
pop
mov
ja
cmc
out
ficoml
adc
fisttps
js
dec
iret
dec
outsl
mov
sti
pushf
out
jnp
jp
jae
xchg
rcrb
pop
xchg
pop
sbb
scas
push
push
mov
mov
adc
pop
adc
sbb
ret
lock
inc
adc
lods
jg
lods
xor
mov
pushf
stos
in
hlt
push
outsb
enter
shlb
push
xchg
push
push
je
je
push
sbb
mov
fstpt
stc
mov
popa
rcll
adc
xor
mov
cmp
sub
pop
pop
sbb
lods
decl
and
mov
sbb
sarb
pop
adc
push
add
je
pusha
push
repnz
xor
xor
adc
xchg
pop
inc
xchg
xchg
jno
leave
push
xor
cli
push
fidivrl
lahf
lods
sti
pop
sbb
sarl
sbb
or
test
push
jnp
add
and
xchg
mov
dec
outsl
push
fwait
andl
stos
daa
sub
repz
jo
and
jl
outsl
jae
push
and
mov
fildl
inc
insl
nop
xor
mov
ja
push
dec
mov
in
iret
je
aas
pop
punpckhwd
mov
pop
mov
lea
ja
cmp
mov
xchg
iret
out
dec
neg
lea
mov
scas
mov
pop
sbb
lods
xchg
adc
xchg
imul
pop
sbb
js
ljmp
loopne
ss
jge
add
fsubs
daa
hlt
fdivr
push
out
cmp
mov
xor
repz
add
cld
jle
aas
mov
mov
ss
cmp
xchg
push
sarl
and
sub
aad
sbb
mov
sahf
jo
xchg
pop
sbb
adc
jns
mov
fistps
mov
nop
rorl
je
addb
mov
outsb
js
inc
cmc
mov
push
insb
xlat
shrl
xor
dec
notl
std
adc
xchg
inc
push
aaa
jo
pop
rcrb
out
jb
adc
dec
sub
in
and
cmpsb
add
out
pop
push
pop
pop
fldl
inc
sbb
dec
enter
adc
mov
push
adc
rorb
je
inc
lret
daa
push
jg
lahf
add
xor
stos
movsb
push
movsb
push
push
mov
sahf
mov
jge
jo
or
ja
xorb
add
out
and
icebp
add
imul
pop
xorb
push
popa
jmp
dec
pop
out
cmc
pop
aas
mov
ljmp
sub
dec
mov
shll
add
push
pop
xor
pop
and
cmpsb
pop
ss
cmp
lods
fcmovne
mov
sbb
jge
mov
loopne
je
in
lock
aas
cltd
mov
sahf
lahf
xor
mov
jge
imul
fcoml
stc
mov
and
scas
aas
sarb
mov
sbb
mov
sti
subl
mov
mov
repnz
push
mov
mov
inc
mov
jo
mov
xlat
adc
test
adcb
ss
pop
and
add
xor
xorb
in
xchg
mov
xor
pop
xchg
xor
jle
mov
mov
cmp
mov
or
maskmovq
idivl
popa
aam
add
jae
notl
sub
lahf
aam
ffree
imul
pop
daa
icebp
out
lock
xlat
sbb
adc
pop
cwtl
add
adc
shl
jns
leave
daa
nop
jl
xchg
cmp
stos
mov
jp
dec
out
push
sbb
shlb
cld
jno
cmp
rclb
adc
leave
cli
mov
xchg
mov
popf
jmp
ds
push
pop
adc
ja
rcrb
aad
sbb
std
mov
xor
in
mov
jnp
add
cli
xchg
xchg
and
or
mov
incl
pop
insl
pop
int3
jb,pt
cmpsl
pop
sbb
iret
pop
mov
fiaddl
mov
push
lahf
sbbb
jne
shrl
daa
pop
add
jle
hlt
jl
fisubrs
dec
lahf
pop
das
pop
pop
xchg
sub
xor
stc
add
jg
xchg
sbb
xor
aas
mov
shrb
pop
in
adc
mov
mov
lods
lret
push
mov
xor
out
lock
mov
nop
ret
mov
je
xor
cltd
xchg
dec
mov
xchg
jne
sbb
pop
mov
jae
mov
popa
fcmovbe
jns
pop
stos
orb
pop
aad
and
repnz
ret
icebp
lock
pop
adc
mov
inc
dec
ret
les
xlat
in
xchg
sub
stos
repnz
sti
popf
dec
sbb
jmp
repz
or
cli
aas
push
fsubl
adc
daa
push
ret
pop
xor
lea
rol
cmp
pop
lock
loopne
fnsave
out
sbb
pop
jae
pop
push
shll
add
cmp
pop
sbb
mov
aam
ret
pop
jg
sbb
neg
popf
inc
es
aad
push
mov
mov
mov
sbbb
repz
hlt
sti
sub
hlt
mov
cmp
cmp
inc
cmpsl
xlat
scas
inc
loopne
and
rcl
outsl
pop
rorb
pop
jo
jle
loopne
mov
shrb
imul
fpatan
leave
cmp
popf
mov
push
popf
inc
pop
push
enter
add
xchg
sti
cmp
mov
cmp
stc
daa
popa
xor
pop
rorl
and
rcrl
fsubs
ss
sahf
stos
cwtl
push
xchg
sbb
mov
lahf
push
in
cmpb
mov
ljmp
pusha
cltd
xor
pop
xor
cmp
sub
std
pusha
enter
sarl
rclb
inc
ret
inc
leave
cmp
popf
dec
inc
push
out
inc
dec
dec
pop
test
mov
les
mov
sarl
add
imul
jle
ds
dec
xor
cmc
in
sbb
jg
ds
sti
cmp
cmpb
jg
sub
jo
aas
xor
pop
dec
lret
int
jmp
sbb
repnz
adc
lahf
aas
lock
cli
dec
mov
sar
adc
mov
mov
pop
in
mov
loopne
fildll
lock
mov
mov
shll
sbb
pop
frstor
xor
loopne
shll
rorb
pop
icebp
cmp
out
cmc
lods
mov
fdivrl
sbb
cmp
cld
stos
inc
add
cmp
fcoms
scas
xchg
loopne
repz
je
fidivrs
daa
cmp
cmpb
lock
je
lahf
je
aas
mov
inc
adcb
sbb
icebp
imul
xor
mov
jo
cmpb
push
mov
mov
jp
mov
sahf
lcall
xchg
cmpb
cmp
or
out
cmpl
sub
sti
xor
cltd
jns
xchg
mov
inc
out
in
cmp
out
adc
jo
out
jp
xor
push
push
push
or
push
rcrl
sbb
add
xor
mov
pop
jno
pop
std
cmp
mov
sahf
xchg
mov
pop
hlt
add
sbb
mov
push
das
pop
or
inc
mov
mov
adc
jbe
sti
add
push
aas
add
xor
sub
xor
subb
mov
je
das
fimull
mov
xorl
dec
jg
adc
sub
mov
shll
ljmp
mov
in
add
pop
int3
jmp
pop
sti
fnstcw
js
dec
fs
test
neg
lret
nop
lock
push
push
repz
mov
stc
pop
outsl
cmp
push
mov
push
and
push
pop
cmp
mov
dec
sbbb
mov
pop
mov
call
popf
push
sbb
push
out
rclb
lods
andnps
cli
cwtl
sub
sbb
enter
xchg
dec
adc
pop
sbb
jnp
shll
pop
fdivp
cmp
sbb
inc
inc
adc
mov
pusha
sub
jle
daa
pop
lahf
and
shll
or
jp
mov
dec
mov
mov
mov
sbb
enter
push
push
shr
pop
xlat
cmpsb
lds
xor
pop
sti
pop
lea
aad
nop
fwait
cmp
leave
ret
out
cli
das
sahf
lcall
mov
ss
pusha
iret
test
fwait
shll
jg
push
stc
sti
icebp
or
mov
stc
call
shlb
imul
or
cld
xor
xor
shlb
shlb
insb
or
jle
push
sti
dec
fldt
jmp
pop
push
pop
in
daa
frstpm(287
ss
sahf
pop
or
cmpsb
sbb
lds
push
hlt
repz
xchg
loopne
fs
xor
jae
stos
mov
cmp
mov
das
jae
pushf
repnz
jno
pop
fistpl
das
mov
lahf
sub
push
ret
loopne
sub
pushf
dec
ret
sub
cli
aaa
dec
sbbb
repnz
dec
pop
sbb
push
stc
ds
loopne
daa
std
mov
adc
pop
push
sbb
jae
rcll
pop
xchg
push
fcoms
jns
xchg
pop
push
adc
shrb
adc
dec
adc
rorb
push
cmpsb
adc
adc
pop
cmpsb
fidivrs
push
sbb
les
les
out
mov
lahf
pop
lock
fnstcw
and
pop
adcb
test
mov
jle
cld
pop
fs
aad
cmp
pop
cmc
cmp
mov
xchg
xor
pushf
rorl
mov
cld
mov
mov
sub
iret
jl
sbb
mov
push
cli
mov
fidivrs
xor
sbb
mov
inc
push
ret
mov
scas
imulb
roll
sbb
jae
cmp
lret
lret
loopne
cmp
sbb
testl
adc
lret
hlt
rclb
iret
shll
pop
and
adc
lret
ret
hlt
xchg
sbb
fstpt
cmp
cld
sahf
mov
mov
int3
adc
std
sbb
mov
xor
es
mov
orb
adc
aas
and
jae
out
icebp
sbb
mov
jae
sbb
insl
aad
inc
xor
push
cld
mov
mov
je
jo
push
int3
jg
scas
cltd
rcr
ljmp
adc
lock
nop
or
cltd
xor
pushf
xor
loop
jns
sti
add
sbb
mov
fcomps
xchg
sub
and
jne
lahf
cmp
int
pop
je
xor
repz
pop
jg
mov
sbb
mov
mov
out
mov
jo
inc
jl
mov
push
popf
jge
loope
mov
ljmp
popf
jg
adc
inc
leave
lds
xchg
repnz
sti
ljmp
lock
xor
jo
xchg
clc
xchg
sar
cmp
and
iret
jbe
jp
lods
push
movsw
es
pop
movsl
not
inc
and
cwtl
dec
std
and
fldt
dec
mov
dec
ret
sub
push
cwtl
or
loop
jg
ja
lahf
movsl
mov
cmp
cmp
hlt
adc
and
mov
push
outsb
aas
sbb
jne
cltd
fstps
sbb
cmpsb
and
pop
mov
inc
stos
scas
cmp
pop
fldcw
ss
in
mov
addr16
sub
fnstcw
lea
loopne
xor
mov
ja
nop
bound
fisttpl
sahf
pop
cltd
or
inc
inc
xchg
adc
jo
xlat
aam
adc
idiv
pop
cltd
fnsave
rcll
pop
add
mov
push
mov
pop
nop
pushf
adc
pop
push
repnz
js
pusha
inc
cmp
sbb
sti
jno
adc
sti
push
inc
stos
sub
push
xor
fs
addr16
loopne
mov
shlb
xchg
jnp
mov
jge
adc
cmp
fadd
shlb
scas
dec
and
xor
ret
lods
jp
pushf
fwait
mov
adc
lock
pop
cmp
xor
mov
pop
cmp
imul
insl
mov
iret
shrb
ljmp
sahf
sbb
cmp
scas
pop
mov
sahf
fcoml
dec
mov
je
jmp
repz
cmp
xchg
mov
cmp
jno
add
sbb
adc
cmp
push
inc
and
in
nop
xorb
mov
pop
cmp
jno
scas
out
xor
mov
jle
jge
xchg
ror
xor
outsl
leave
movsb
pop
inc
cmpsb
xor
mov
out
jg
hlt
mov
jbe
dec
repnz
pop
cwtl
push
mov
mov
sbb
cmc
adc
je
sbb
fistpl
adc
cmpsl
ljmp
cli
xchg
push
jb
jmp
pop
mov
jmp
imul
xlat
subb
adc
adc
aad
push
pop
popf
hlt
xor
mov
pop
jmp
cli
es
cmpb
mov
shll
out
xor
daa
mov
dec
sub
cmp
mov
dec
mov
jno
fsts
rclb
xor
adc
ljmp
decl
pop
out
into
inc
cmp
sub
mov
mov
mov
xor
and
mov
loop
dec
ljmp
fwait
inc
dec
aam
cli
sbb
shrl
call
loop
and
pop
scas
mov
inc
loop
jge
xor
jae
xlat
pushf
rclb
lahf
push
loopne
sub
pop
lahf
loopne
or
sbb
repnz
push
mov
shll
inc
hlt
subl
adcb
scas
xchg
xor
dec
dec
or
pop
or
sbb
shl
jmp
jmp
xlat
sahf
cmp
dec
dec
inc
xchg
xchg
daa
shlb
jg
inc
hlt
jg,pt
jl
adc
jno
cmp
pop
mov
mov
xchg
je
cmc
xor
nop
xor
or
sarl
clc
ss
sahf
mov
pop
repz
mov
push
push
cld
fnstcw
sbb
cmp
sub
cmc
mov
je
xchg
mov
out
clc
inc
stos
aas
push
addr16
fnstcw
lock
sarl
scas
js
test
jo
rcr
mov
jno
je
inc
stos
jne
push
xor
stc
cwtl
adc
std
ss
je
mov
dec
jle
mov
movsb
aaa
dec
cld
cmpsb
jl
and
dec
mulb
push
shll
aaa
mov
mov
pop
loopne
insl
lock
je
mov
xor
jl
adc
cmp
sahf
mov
adc
sbb
popf
mov
fimull
mov
mov
cmp
mov
fdivs
jbe
pop
mov
mov
xchg
pusha
xor
mov
idivl
aam
enter
mov
ret
hlt
icebp
pop
jne
mov
adc
xor
incl
xor
adc
movsb
pop
jge
sbb
pop
adc
sbb
pusha
stc
lret
in
cmp
jae
negl
cmc
fnstenv
divl
mov
mov
push
jno
sbbb
js
adc
sub
mov
inc
ljmp
jp
stc
jae
dec
sub
mov
push
out
rcll
mov
aam
push
push
jl
cmp
lret
hlt
testl
pop
js
movsb
cld
inc
mov
testb
fisttpll
ficomps
pop
ljmp
mov
sarl
mov
or
fnstenv
mov
push
jnp
sti
cmp
je
xorb
fmuls
cld
test
mov
cmp
aas
jb
mov
fsts
xorb
sub
xchg
in
shl
pop
xor
add
adc
pop
outsl
jbe
xor
divb
mov
xor
mov
std
mov
pop
xor
add
lahf
xchg
jl
mov
jmp
int
xlat
adc
push
push
mov
push
xor
push
jle
sbb
lock
xor
mov
dec
adc
cmp
fnstenv
mov
xor
ja
shl
cltd
repnz
adc
jmp
sahf
rcll
sbb
std
push
je
repnz
sbb
std
mov
lock
pop
jge
cld
out
ror
jae
repnz
ljmp
adc
cld
sti
stos
cli
sub
and
and
and
jge
or
inc
dec
xor
jl
cld
sbb
xchg
and
xchg
jns
adc
jle
mov
ret
shlb
ret
push
int3
outsl
shrb
adc
mov
xchg
and
std
pop
int3
scas
xchg
cmpb
push
iret
jg
cmp
add
int3
inc
add
cmp
sbb
cmp
jg
dec
dec
mov
sbb
pop
adc
fnsave
int
repnz
sub
xor
sbb
sub
mov
mov
icebp
ja
adc
fneni(8087
add
sahf
mov
lods
jno
push
insl
or
loope
jne
xor
dec
mov
pop
and
popa
rolb
imul
xchg
add
fucomp
sbb
push
hlt
int3
push
pop
xor
ret
sti
int3
pop
push
lret
cmp
and
jo
scas
ss
xor
enter
push
pop
sti
sub
je
push
xor
and
xor
adc
sbbb
jle
das
or
xchg
std
lods
dec
push
xadd
ds
jl
mov
and
push
shll
cmp
imul
push
mov
adc
cmp
in
imul
sti
push
stc
adc
sub
mov
cmp
push
xor
xor
jnp
pusha
dec
xor
enter
and
xchg
push
mov
jmp
cmpsb
add
ret
movsb
cmp
jb
test
sarl
lret
imul
xchg
arpl
mov
mov
fptan
lret
and
xchg
inc
sub
in
push
inc
cmp
loop
fistpll
xor
push
adc
push
jns
ficompl
xor
leave
pushf
neg
jae
mov
mov
push
add
add
pop
mov
sbb
pop
and
xor
jbe
or
adc
mov
xor
cmpb
xor
sbb
adc
and
pop
sub
sbb
incl
rcrl
dec
rcll
or
or
cmp
jmp
cwtl
test
xor
xchg
xchg
xor
dec
mov
imulb
jne
xchg
int3
pop
mov
hlt
inc
sub
in
es
cmp
dec
cli
outsl
js
lret
mov
mov
adc
cmp
xor
or
and
arpl
and
out
sbb
adc
fists
xchg
es
mov
aad
xor
insb
or
dec
fadd
cmp
int3
sub
cmp
lahf
inc
ror
adc
push
fisttpl
test
in
cmp
lock
or
shlb
outsl
or
add
adc
pop
and
in
mov
rolb
push
xchg
adc
sub
and
or
push
cmp
loope
cmp
rcrb
icebp
scas
test
push
mov
mov
mov
enter
pop
es
mov
out
mov
and
inc
add
dec
jmp
pusha
aam
add
mov
cmp
ds
fs
xchg
test
mov
xor
aad
ljmp
jno
add
inc
cmc
jle
jns
nop
jne
add
mov
inc
enter
icebp
push
xor
pop
sub
cmc
mov
mov
dec
or
sbb
mov
sub
js
lahf
cmp
jle
std
pop
popf
fwait
in
mov
push
cli
hlt
into
cmp
outsl
je
cmp
cmp
nop
jmp
lahf
lret
test
push
jmp
inc
mov
outsl
test
cmp
dec
cmp
and
loope
or
xor
mov
adcb
inc
ds
jmp
sar
sti
outsl
sub
jo
mov
sub
aas
rcrb
mov
and
xor
lock
jmp
lret
or
jmp
mov
mov
push
xor
add
cmp
sub
mov
cmpb
push
pop
xor
mov
lods
mov
push
repz
add
push
loopne
jb
xchg
add
inc
icebp
and
inc
repnz
aaa
rcrb
pusha
add
or
and
lock
push
or
jbe
int3
xor
pop
add
bound
xchg
outsb
push
add
fwait
xor
test
xchg
test
cmp
pop
sbb
clc
and
add
xchg
out
mov
loop
aaa
dec
and
pushf
test
popl
stc
mov
add
push
imul
clc
adc
dec
js
xor
loop
inc
out
je
mov
xchg
lock
or
adcl
pushf
insl
xor
add
xchg
lock
daa
push
mov
mov
orb
ret
sub
mov
dec
lock
and
int3
adc
rcl
and
ss
or
jno
rcrb
push
xor
loope
xchg
out
rolb
lods
xor
inc
or
stos
adc
test
adc
inc
sahf
lods
cmpsb
stos
jl
mov
jns
adc
jno
push
movsb
inc
or
in
popa
test
addr16
cmp
adc
pop
xorl
test
loopne
mov
push
jmp
imul
in
jne
cmp
pop
cld
stos
push
js
jns
xor
dec
cli
fmull
out
xor
jg
inc
xor
sbb
sub
add
mov
out
adc
add
les
test
scas
xor
add
cltd
jl
sub
sub
test
cltd
ds
mov
icebp
dec
loop
les
xorb
cmp
cmp
push
lret
inc
xor
adc
addl
or
std
xor
pop
arpl
popa
fwait
insb
sti
aaa
dec
mov
fldenv
int
cmp
adc
ret
inc
lea
mov
push
sub
int
xlat
jg
shll
lret
repnz
rcll
cmp
jmp
aad
xchg
xor
mov
cmp
push
or
ljmp
inc
push
call
rcrb
sbb
popl
xor
leave
cmp
lea
cmp
xor
icebp
sbb
outsb
pop
inc
xchg
cmpsb
outsl
aaa
sub
iret
hlt
adc
divb
jmp
add
mov
out
fs
lock
and
pop
xor
mov
aam
adc
int
jo
out
into
mov
inc
jae
mov
test
std
lods
push
lock
insb
dec
cmpsb
aas
cwtl
push
loop
and
push
dec
xor
xchg
adc
lods
aaa
jae
cmovb
xchg
sbb
mov
pusha
push
in
popa
sub
lcall
jno
mov
add
js
pop
movups
arpl
shll
shll
lahf
push
repnz
divb
jae
xchg
mov
mov
adc
and
xor
repz
int
add
scas
push
std
xlat
xor
mov
adc
aad
fimull
mov
out
mov
jo
fwait
xor
cmp
ss
dec
daa
push
fistps
mov
test
and
mov
add
xor
push
in
inc
dec
fisubs
in
fdivrs
or
dec
enter
shll
add
pushf
subb
and
cmc
mov
cltd
mov
pop
gs
mov
shrl
aad
inc
adc
adc
pop
dec
fsub
andb
repnz
xchg
push
add
and
bound
or
mov
xor
xor
ret
push
in
cld
insb
xchg
adc
cltd
mov
mov
xor
sbb
lahf
cld
in
inc
push
adc
ret
ds
test
arpl
mov
sbb
loope
mov
xchg
xor
inc
lahf
adcl
insb
iret
add
push
jp
arpl
out
adc
inc
lock
cmp
jne
je
pop
xor
into
mov
inc
mov
idivl
into
xor
scas
pop
pop
std
pop
and
insb
mov
jns,pt
pop
enter
sahf
rorb
out
dec
fsts
imul
xor
cmp
sub
scas
std
sahf
inc
mov
mov
xor
jmp
testl
mov
dec
mov
inc
mov
cwtl
and
cmpsb
outsb
mov
pop
xor
out
cmp
lahf
cld
xor
jmp
or
mov
xor
cli
cltd
test
xchg
cmp
aad
xor
cmp
fadd
jge
xor
add
std
add
mov
les
push
sti
cmove
ret
scas
aam
js
and
and
arpl
ret
and
fsubp
loope
xor
hlt
loop
cmp
daa
cmp
or
mov
sbb
pop
lock
cmp
divb
adc
loope
cld
cmp
push
mov
jae
xor
data16
pop
lods
imul
xchg
push
icebp
mulb
inc
andb
adcb
fsubr
cmp
dec
das
scas
cs
nop
inc
add
pop
lret
inc
or
adc
jae
inc
mov
jp
aam
out
notl
dec
adc
out
pushf
scas
lods
stos
mov
outsb
pop
jae
hlt
scas
mov
pop
inc
cmpsl
inc
nop
add
aad
xchg
test
ljmp
adc
push
cmc
aaa
insb
mov
dec
cld
or
imulb
sarb
iret
xorb
mov
sub
xor
jmp
std
stc
sub
pop
sbb
ja
call
stos
dec
out
xchg
pop
adc
jmp
inc
cld
push
les
jg
or
jno
and
cmp
push
mov
dec
js
xor
and
add
cmp
push
rorb
xchg
jl
addl
mov
sub
fcompl
inc
shlb
into
test
or
xor
inc
inc
or
jne
shlb
jae
mov
lock
push
fbld
xor
jecxz
movsl
pop
inc
xor
lods
ficompl
inc
subl
insl
inc
add
and
pop
cli
and
cltd
pusha
mov
pop
pop
out
push
mov
inc
fstps
test
xor
pop
inc
push
and
cmpsb
into
sub
jns
dec
nop
into
cmp
xor
cmpb
jnp
push
xor
es
pop
inc
lahf
sti
lds
xor
xor
out
dec
cltd
stos
mov
xchg
into
push
in
pop
mov
pop
adc
mov
adc
dec
push
xor
xor
mov
ss
xor
push
mov
outsl
fisubl
cmp
cmp
sarb
int
xchg
mov
aam
xor
or
push
add
xchg
inc
movsb
call
add
xor
pop
in
or
xor
shl
popf
pop
push
mov
xchg
inc
fsubs
into
sub
loopne
add
popa
dec
mov
daa
pushf
lea
loop
cmp
fnsave
xchg
dec
mov
in
lcall
arpl
jp
lret
sahf
lret
test
rol
inc
bound
mov
inc
adc
movsb
in
rclb
adc
int3
lock
inc
incl
scas
fidivl
aad
je
add
push
mov
out
aam
loop
into
ds
aas
sbb
mov
jecxz
mov
scas
or
call
mov
xor
xor
cmp
pop
dec
pop
shl
sbb
shrl
or
cmp
clc
dec
xor
sub
inc
inc
repnz
pop
fisubrl
jl
push
insb
mov
mov
shll
mov
jmp
sti
or
stos
inc
adc
nop
call
inc
aam
add
out
add
std
xor
jne
gs
fwait
inc
xchg
enter
xor
roll
orl
xor
fisttps
into
jno
addr16
xchg
int3
aas
mov
scas
push
xor
pop
mull
insl
cmp
adc
outsl
adc
popa
enter
xor
pop
out
in
fildl
lods
fnstcw
inc
cmp
movl
xlat
mov
xor
add
mov
stos
sbb
jl
xor
jne
cltd
inc
adcb
xchg
jp
lahf
out
enter
lret
and
imul
mov
jl
arpl
jo
dec
outsl
mov
cmp
jg
and
sti
movsb
cmp
gs
aaa
fisubl
cmp
popa
xorb
dec
fldl
sub
sbb
and
into
xor
jo
jbe
pop
movsl
xor
mov
jp
push
sbb
or
mov
xor
mov
sub
dec
rclb
xchg
fmuls
push
test
mov
xchg
and
repnz
sub
adc
mov
rorl
cmp
sub
xor
add
jb
xchg
fwait
mov
push
lods
orb
inc
stc
scas
jno
and
aaa
xor
gs
int
jp
loop
stos
push
jb
and
popf
cmp
cmp
jmp
psraw
cmp
pop
xchg
or
sub
cmp
cmpsl
lret
clc
adc
mov
sbb
dec
bound
repnz
imul
aam
cmp
loop
pushf
xor
push
xor
aam
mov
popa
xor
mov
mov
sbb
dec
jmp
movsl
in
mov
repz
shll
pop
in
pop
xor
add
pop
cmp
jle
std
push
xor
xchg
mov
xor
and
pop
outsb
popa
cwtl
clc
outsl
sbbb
add
cs
inc
mov
out
ja
jae
jb
popf
push
in
xchg
xor
mov
bound
data16
cmp
xchg
fcomps
or
add
stos
mov
daa
sbb
xor
inc
insl
pop
mov
hlt
aaa
icebp
add
pandn
ret
xor
jecxz
lret
lret
pop
mov
stos
sub
shll
inc
bswap
cmp
inc
add
pusha
mov
push
scas
cmp
pop
aas
outsl
shll
fsubl
test
or
lea
xlat
inc
gs
cmpsl
out
jno
insl
jno
mov
jmp
sbb
call
mov
or
and
rol
out
aaa
cld
or
xchg
clc
jae
cmpsl
rclb
xor
bound
xchg
cmp
and
xchg
xchg
or
in
ja
cmc
jg
push
inc
mov
sahf
or
stos
ds
popa
cmpb
test
mov
xor
popf
mov
repz
xor
xchg
and
std
sub
adc
xor
incb
mov
mov
push
repnz
stos
ds
mov
loopne
sub
pop
mov
and
jl
adc
xor
adc
insb
xor
stc
pop
testb
shlb
fdivr
jo
mov
mov
ret
stos
aaa
cmpb
xlat
mov
xor
inc
push
xor
cltd
push
xor
int
mov
mov
xor
shlb
xor
jae
cmp
fbstp
mov
jmp
sub
mulb
xchg
mov
pop
jmp
push
cmp
xor
and
jne
inc
stos
movsl
push
xor
xchg
insl
xchg
out
push
xor
aad
or
loope
mov
pop
int
sub
inc
cmp
xchg
in
add
fs
dec
in
mov
sbb
xor
cmp
std
and
cs
cmp
mov
loope
icebp
mov
push
pop
dec
es
scas
cmpsl
jb
jge
lds
cltd
dec
in
adc
push
push
mov
scas
clc
loopne
in
ja
sti
xchg
jecxz
lock
movsb
rcrl
cmp
enter
and
jno
mov
mov
xorl
push
add
loop
pop
enter
jmp
fwait
lret
ja
or
repnz
cmp
xor
imul
inc
adc
or
sbb
lret
jle
jne
dec
fstl
and
fsts
mov
into
out
std
into
insb
jle
fimuls
dec
fmuls
inc
cltd
inc
popa
stc
arpl
push
inc
xchg
aas
xchg
mov
test
add
and
imul
aam
sub
push
mov
push
repz
pop
fdiv
fsubrl
sbb
ljmp
cmp
inc
xchg
aas
mov
xor
adc
arpl
sbb
add
jge
sub
xchg
js
adcb
cmp
addr16
cmp
or
or
aas
ljmp
bound
daa
pusha
add
inc
leave
or
mov
pushf
pop
inc
xchg
dec
bound
and
pop
xchg
daa
fcmovnb
and
and
mov
roll
cmpsl
push
mov
and
roll
int
push
fs
push
mov
sub
xor
pusha
push
mov
push
mov
sub
xlat
jne
sbb
xchg
cmp
loope
ds
pop
stos
jl
mov
inc
lret
idivl
pop
push
inc
jo
dec
add
adc
cmp
jne
sub
mov
mov
xlat
sbb
negl
test
push
and
xor
mov
cltd
daa
ljmp
sub
test
fisubl
dec
sub
mov
fwait
mov
mov
lds
fsubl
jp
in
mov
std
adc
hlt
push
in
sbb
inc
push
mov
movsb
cmp
mov
out
dec
cmp
test
add
mov
popf
mov
pop
out
pop
inc
scas
inc
or
mov
and
scas
pop
int3
data16
mov
testl
cmpsl
scas
call
repz
mov
push
cmp
mov
push
cmp
movsb
pop
scas
fidivrs
test
int3
test
mov
push
xor
add
movsb
into
notl
cmp
add
movsb
or
lcall
add
test
push
outsl
nop
mov
mov
fldlg2
push
mov
add
int
fs
jne
shrd
clc
mov
jmp
inc
not
sbb
mov
pusha
pusha
mov
bt
cmp
neg
lea
jb
pushf
pusha
inc
mov
pusha
bt
stc
neg
cmc
cmc
call
ret
mov
mov
cld
cwtl
xchg
divb
inc
stos
push
push
pop
add
jecxz
pop
sarl
int3
jae
xor
jle
repnz
mov
sbb
out
push
sub
dec
xchg
jb
mov
in
push
sbbb
push
sbbb
cmp
mov
loop
pop
fsts
scas
out
int3
cmp
aam
xchg
jmp
xchg
iret
lahf
cmpsl
xchg
jmp
jmp
aad
cmp
add
movsb
cmp
jo
imul
mov
or
adc
lock
or
push
mov
ja
sarb
xor
sti
sbb
sbb
xchg
inc
and
add
mov
xchg
push
mov
ds
icebp
mov
add
in
aad
insl
lea
jg
sbb
mov
add
mov
mov
lock
and
fcmovnbe
lret
xor
adc
push
push
enter
pop
sahf
mov
adc
mov
cmpsl
sbb
mov
push
repz
movsl
insb
or
xchg
mov
sub
iret
xor
mov
in
adc
pop
dec
or
popa
or
mov
jnp
mov
stos
sahf
into
in
sbb
insl
xchg
les
aad
push
xchg
bound
stos
test
fimuls
loop
cli
inc
and
pop
or
in
inc
stos
mov
xchg
xor
inc
out
andb
cs
xlat
and
push
pusha
hlt
jbe
rcr
popf
leave
aaa
dec
ljmp
or
xchg
inc
jecxz
clc
call
nop
dec
pop
xchg
cs
dec
mov
sahf
repz
testl
into
add
cltd
dec
jnp
std
sbb
dec
sbb
aas
and
pop
arpl
ficoms
mov
add
pushf
jmp
lea
ja
pusha
mov
stc
imul
jmp
cmp
cmp
push
cmp
push
pushf
jmp
pop
std
frndint
or
mov
pusha
xlat
mov
adc
daa
mov
and
arpl
in
adc
sbb
in
in
stc
hlt
dec
jne
stos
out
mov
sub
push
shll
rcrl
fidivrs
pusha
mov
ss
xchg
dec
add
pop
and
cs
cmp
jle
inc
jns
loopne
xor
inc
jbe
xor
orb
add
insl
ds
out
pop
les
lret
or
inc
pop
jnp
int3
pop
sarl
jbe
xchg
ds
faddl
inc
adc
lods
sbb
pushf
pop
xchg
inc
cltd
mov
mov
fwait
addr16
pop
cmp
cmp
pusha
cli
cmp
add
push
jo
popf
fs
xor
outsb
ret
cmpsb
imul
test
pusha
jae
sbb
roll
mov
sbb
mov
dec
mov
lods
add
hlt
jbe
mov
and
cmp
fwait
jae
or
outsb
cmp
mov
mov
fwait
add
mov
ja
loopne
jmp
orb
xchg
jbe
jbe
and
push
sahf
testl
imul
adc
mov
jo
sbb
aaa
imul
leave
push
loope
adc
ja
dec
je
sub
in
jl
sbb
xchg
lods
or
lock
loop
jp
and
adc
enter
adcl
mov
sti
pop
sahf
xor
lret
test
inc
mov
stos
stc
xor
stos
push
or
mov
out
xchg
mov
xchg
stos
movsb
dec
mov
mov
push
add
std
in
mov
stos
jmp
fdivrs
les
rclb
test
xor
bound
xlat
push
mov
in
mov
pusha
lea
jnp
adc
pushf
lea
call
call
pushf
lea
je
pusha
pusha
lea
jmp
pusha
pushl
pushl
ret
loope
cmp
ret
mov
data16
loopne
pop
or
ds
das
rcl
pop
mov
mov
lds
mov
repz
scas
repz
inc
repz
sbb
dec
push
addl
and
popf
imul
scas
push
sub
stos
clc
inc
sbb
push
stos
popf
std
mov
mov
mov
data16
sahf
cmc
cltd
inc
push
lds
mov
lods
mov
aam
popa
sub
add
or
cmp
mov
push
movsb
cmp
and
inc
mov
fnsave
jo
sub
jo
lea
lret
iret
pushf
mov
or
es
adc
fimuls
dec
xor
mov
or
sbb
loop
repnz
cmpsb
cmp
dec
pop
add
xor
sbb
pop
jl
xorb
mov
mov
mov
and
out
sbb
mov
mov
inc
mov
inc
mov
daa
in
sti
addr16
push
sbb
sub
cmpl
pop
sub
push
push
mov
adc
add
mov
shlb
and
je
setg
push
movzbl
jmp
lea
je
not
jnp
movzbw
lea
movzbw
lea
lea
not
movzwl
jmp
lea
jb
jmp
mov
lea
jne
push
jmp
mov
lea
je
pusha
mov
add
pushf
movb
lea
jmp
push
lea
jae
stc
sub
pushf
lea
call
pusha
jmp
js
mov
inc
jnp
shll
fbld
pop
xlat
mov
push
xor
adc
mov
lret
adc
dec
mov
les
cmp
clc
loopne
cmp
lahf
bound
push
scas
test
jae
jnp
adc
sbb
pop
ss
enter
sahf
and
jne
add
inc
pop
push
pop
fisttpll
fistpl
aad
mov
sub
cmp
cwtl
movsl
or
ss
push
aas
in
xchg
sbb
sbb
out
adc
test
cmp
sbb
imul
mov
out
or
mov
sarl
lahf
es
mov
addr16
jecxz
sub
push
cmp
xchg
orb
loope
dec
pop
mov
iret
mov
mov
pop
adc
inc
cmp
and
xchg
push
mov
lods
dec
hlt
dec
in
fs
mov
daa
adcb
je
stos
test
stos
mov
adc
push
imul
loope
mov
imul
outsl
mov
mov
mov
and
xchg
sti
xchg
jl
leave
add
sub
gs
mov
mov
loop
inc
push
sub
jnp
outsl
jno
cwtl
scas
or
sub
aad
push
insl
inc
sbb
pop
or
daa
push
andl
push
inc
int3
mov
mov
push
xchg
lahf
shrl
test
push
mov
xor
dec
imul
gs
xor
cs
insb
add
add
add
mov
repz
add
dec
outsl
popa
fs
imul
add
sbb
pushl
popl
pushf
push
movb
pushl
ret
pushf
pusha
lea
jae
bt
test
call
pop
mov
adc
aad
out
add
mov
frstor
iret
gs
je
call
clc
popf
add
popf
pop
sar
scas
cltd
inc
mov
inc
mov
adc
fstpt
inc
movsl
xor
mov
adc
or
mov
xchg
dec
insl
inc
stos
mov
pop
pop
push
out
scas
int3
fisttpl
fs
out
jbe
push
push
test
mov
xchg
and
insb
cmp
shrl
insb
pushf
aam
cmp
pushf
or
mov
cmpsb
out
lea
push
lea
jmp
mov
sbb
btr
pop
cmp
mov
push
stc
call
pusha
mov
cli
xchg
pop
push
cmc
lds
lret
fists
mov
pop
xor
orl
jmp
aas
call
mov
outsb
sub
out
jmp
cmp
xor
inc
xchg
lret
lcall
and
jns
xchg
adc
jg
add
mov
inc
or
jnp
pop
loopne
add
cmpl
pop
out
inc
jle
pop
rcrb
stos
cmp
cmpsb
test
leave
inc
xchg
push
push
js
sub
cmp
dec
mov
mov
mov
sbb
int3
repnz
push
mov
cmpsb
push
xor
jb
sbb
xlat
ss
scas
xor
scas
or
sbb
pushf
stc
or
pop
cmp
inc
dec
pushl
sbb
mov
fdivrl
jmp
loop
imul
mov
xor
or
mov
push
outsl
xchg
out
pop
gs
fmuls
js
push
in
sub
fwait
shl
jo
cmp
ret
sbb
xchg
pop
add
pop
xchg
adc
mov
aaa
sarb
adc
or
in
mov
inc
sub
push
xor
outsl
fs
sbb
gs
jmp
jl
mov
push
adc
and
lods
nopl
jb
lock
sbb
in
sbb
jge
cmp
cwtl
mov
rol
inc
lds
imul
jge
jg
mov
cmp
movsl
dec
in
xchg
mov
push
pushl
popl
push
pushl
ret
jmp
push
cmp
pushf
pushf
jmp
movb
mov
call
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xor
jecxz
icebp
mov
test
inc
sbb
dec
cmpsb
and
pusha
mov
jge
push
ja
dec
sub
dec
ds
data16
dec
rolb
jl
jl
fsubrs
inc
sub
sbb
cs
ret
shlb
mov
fcompl
int
or
jl
fistl
orl
out
mov
jbe
pop
add
pop
inc
mov
jns
popf
mov
push
mov
repnz
lock
add
push
add
lock
add
pop
add
jg
add
add
add
setle
not
setl
movsbw
lea
not
pushf
movzwl
bswap
pop
movsbl
call
mov
arpl
push
and
push
leave
dec
add
lret
mov
sbb
das
cld
jbe
addb
out
mov
sbb
cmp
sbb
mov
push
sub
pop
loopne
pop
les
jne
mov
jge
popf
jb
je
dec
out
or
jecxz
pop
sbb
lods
cmp
shrb
mov
mov
jb
pop
int
fcompl
adc
add
bound
or
jecxz
es
mov
cmp
loop
ret
not
call
test
or
call
loop
fstl
push
cmp
ds
mov
mov
jle
pop
std
and
sub
cmpb
ja
pop
jne
mov
icebp
jg
cmpsb
mov
and
imul
dec
or
cld
mov
mov
push
xor
pop
or
ret
mov
rorl
push
hlt
and
int3
inc
inc
insl
sub
test
cmp
adc
movsb
sbb
mov
insb
push
repz
sbb
and
xchg
or
or
jg
mov
ja
sub
sub
dec
mov
dec
push
fldcw
push
mov
les
mov
lret
stos
xchg
mov
mulb
mov
loopne
adc
pop
dec
jbe
pop
nop
inc
add
ficoml
jecxz
mov
mov
xchg
jae
js
inc
or
push
and
sub
in
xchg
lret
jle
std
push
mov
jo
xor
loope
push
sub
imul
data16
insb
sbb
divl
loopne
jmp
sbb
lods
push
in
mov
jne
shl
loop
out
enter
push
sbb
and
fimuls
ss
rolb
ret
jmp
or
add
fs
in
cltd
jns,pn
jne
mov
ds
cmp
mov
dec
aad
scas
sbb
inc
xchg
das
in
inc
ss
repz
jmp
jo
mov
sbb
mov
push
mov
movsl
loopne
lea
cwtl
pushl
mov
call
not
not
mov
pushf
pushf
movb
push
lea
jmp
pusha
movl
movw
call
bound
pusha
xchg
fwait
sub
push
les
sbb
cmc
in
inc
push
cmc
xor
jbe
dec
mov
mov
mov
jl
jb
mov
fimuls
rcll
push
loop
mov
sbb
or
mov
mov
pop
adc
lcall
dec
clc
call
movsbl
movsbw
lea
mov
jmp
inc
mov
mov
lea
jmp
and
push
mov
add
jle
mov
jb
push
mov
clc
or
sarb
push
aad
sub
arpl
into
std
ds
sbbl
bnd
and
fisttps
pop
pop
imul
adc
dec
dec
add
xchg
ss
pop
push
in
or
mov
and
pusha
pushf
mov
movl
jmp
bswap
movzbw
mov
pushf
pusha
pusha
lea
jmp
add
cmc
call
lea
je
setbe
and
bsr
add
shl
dec
btr
btc
mov
jmp
jmp
jmp
fsts
aad
mov
adc
cld
ljmp
pop
sbb
sub
adc
aas
adc
xchg
fwait
lahf
sbb
out
push
jno
push
out
xchg
jle
addb
insl
insl
inc
fs
jge
adc
jae
and
data16
fucomip
and
jnp
call
test
movsl
add
ret
das
inc
mov
inc
in
imul
sub
daa
mov
sub
ret
sbb
cmp
push
xchg
pop
test
je
push
sbb
and
ljmp
aad
ret
aam
test
mov
out
adc
loopne
js
stos
inc
inc
mov
jp
mov
push
jl
xlat
pop
fsubr
adc
out
add
xor
inc
insl
xchg
xor
inc
mov
jp
pop
sub
divb
sub
xor
mov
lcall
jno
mov
adc
idiv
cltd
xor
ficoml
sahf
lock
lea
jae
pusha
dec
call
push
mov
int
insb
or
test
insl
insb
jecxz
int
jecxz
mov
insl
int
or
mov
lods
jecxz
in
mov
insb
shrd
or
or
pavgw
dec
ja
fldcw
push
ljmp
rolb
or
aam
rorl
cmp
cmpsb
sub
inc
loop
jne
andl
dec
ds
rorl
mov
mov
dec
aaa
pop
pop
mov
sub
jmp
dec
xor
mov
xor
push
pop
aaa
imul
inc
mov
push
lcall
ja
subl
fwait
addr16
stos
outsl
out
jae
aad
pushf
push
mov
xor
shlb
cmp
xchg
push
rorb
push
or
in
mov
pushf
inc
push
subb
mov
fdivs
ja
cltd
mov
dec
int3
or
and
fs
jns
mov
lret
jl
pop
call
cmp
lahf
push
cmp
jne
and
js
dec
adc
pop
adc
lret
mov
inc
fs
int3
movsl
les
fadd
mov
mov
cld
jecxz
cld
pop
jae
shlb
pop
mov
repnz
out
xchg
inc
mov
add
lods
shl
xchg
jne
js
leave
cmovns
dec
clc
iret
jp
xor
push
lahf
sbb
inc
sbb
adc
dec
mov
fwait
jns
aas
jle
xor
andl
js
ljmp
in
cmpsl
adc
push
ret
inc
lcall
mov
mov
or
das
sub
push
mov
mov
add
or
fists
jecxz
xchg
dec
jge
jge
ret
cmp
push
negb
push
sub
je
adc
movsl
lcall
movsl
pop
popf
inc
imul
cld
cmpsb
hlt
sbb
loop
push
and
jl
adc
sub
push
mov
cwtl
fidivs
dec
call
int3
mov
out
push
pop
js
sbb
pop
mov
inc
popl
xchg
mov
xchg
sub
clc
pusha
jne
sbb
push
je
loope
hlt
mov
lock
jge
lea
jg
pusha
push
dec
insl
out
call
pop
js
or
sti
xchg
cmp
mov
aas
bound
jl
fisttpll
sub
sarb
daa
inc
lcall
pop
xor
cmc
imul
dec
push
fisubrs
inc
xchg
cmc
out
adc
xor
fdivr
mov
jge
fnsave
in
cld
test
xchg
mov
outsb
dec
lcall
mov
mov
and
and
xor
jnp
popf
mov
or
mov
mov
iret
pop
rcrb
push
cmp
je
insl
fcomi
sbb
add
and
lock
add
ss
pusha
int
les
cmp
dec
mov
mov
fisubl
push
jb
inc
jge
fsts
scas
lods
aad
inc
adc
sub
mov
in
add
test
xchg
jmp
andb
sub
lss
test
loop
or
ss
xchg
inc
or
lret
ret
lcall
or
gs
bound
lret
cli
add
or
xor
jns
xor
aaa
push
add
out
mov
inc
sahf
mov
mov
xchg
mov
xchg
pop
or
inc
out
jg
scas
in
and
ss
push
add
inc
cwtl
fadd
fmull
dec
sub
int
and
scas
mov
in
imulb
fs
sub
cwtl
inc
nop
out
cwtl
push
insl
mov
std
push
lret
rolb
addr16
in
movl
popl
push
ffree
push
push
xor
lcall
iret
movb
mov
bswap
movzbw
pusha
mov
push
movb
pushf
pushl
ret
mov
bswap
mov
pushf
push
mov
lea
movzbw
mov
lea
pop
push
pushf
pushl
ret
pushl
inc
ror
setp
and
xchg
aad
mov
rcl
dec
mov
bt
test
movw
push
xchg
cmp
test
sar
mov
clc
sub
call
fcompl
leave
lahf
dec
shld
inc
scas
sbb
and
jmp
sbb
bound
cltd
xchg
adc
jnp
mov
push
or
cld
mov
pop
andb
jne
mov
mov
inc
cmc
add
in
in
jl
push
stc
in
add
lret
test
pop
cwtl
xchg
push
jne
adc
dec
cld
push
in
pop
xchg
xchg
rolb
mov
mov
jge
sahf
push
and
int3
mov
ds
js
sub
loopne
enter
pop
popf
cmp
pop
lretw
mov
sub
ds
jecxz
cmp
sar
fisubrs
cmp
push
sub
add
out
mov
std
cmp
pushf
lea
jne
cmp
btc
test
mov
call
lea
je
lea
test
add
test
shl
adc
sub
rol
shr
bsf
shl
mov
dec
cmp
add
not
bt
add
push
mov
movb
mov
pusha
cmp
shr
jmp
mov
bswap
btr
shr
mov
movsbw
sub
pushf
movzbl
pushf
lea
pusha
call
add
test
test
mov
movzwl
pop
mov
bt
pushf
cmc
add
cmc
mov
stc
test
pusha
movl
lea
je
pushf
clc
cmp
pushf
add
test
clc
cmc
cmp
jmp
jne
push
aas
ss
loope
inc
push
push
test
mov
stos
mov
push
cltd
sbb
in
sti
mov
xor
mov
pop
xchg
fstl
cltd
pop
pushf
call
mov
cmpl
dec
inc
lcall
adc
adc
aaa
bnd
xchg
and
cwtl
cmp
inc
xchg
rcl
icebp
fisubrs
loop
push
lods
push
pusha
and
and
lea
dec
add
outsl
mov
jecxz
cmp
lods
ror
mov
pop
fildl
xor
sub
ret
push
mov
js
scas
sbb
cltd
lcall
adc
mov
scas
insb
dec
insb
jecxz
pop
xchg
fs
imul
mov
adc
lcall
inc
mov
inc
cmp
enter
sub
jp
add
pop
pop
mov
stc
push
mov
shrd
in
pusha
lea
je
cmp
cmp
push
call
push
lds
into
jnp
adc
cmpsb
test
push
lret
mulb
pop
jmp
push
cmp
mov
inc
or
sub
adc
mov
mov
mov
mov
or
test
rolb
jbe
and
mov
mov
add
jnp
or
scas
cmp
sub
rorb
outsb
mov
daa
push
outsl
sti
aaa
xlat
icebp
ficoml
sbb
push
lea
scas
loop
mov
push
mov
pop
pop
add
add
popa
insb
inc
jb
gs
xchg
push
dec
scas
inc
pop
and
cltd
insb
pop
xor
dec
aam
pop
mov
outsb
add
pop
cs
jbe
cmpsb
inc
pusha
cld
or
pop
ja
xor
push
rcl
mov
call
adc
push
cmp
pop
ja
test
outsl
push
and
popa
pop
mov
clc
sbb
cmpsl
push
lods
or
xchg
push
fmuls
or
sbb
in
adc
xchg
movsl
push
ret
push
fucomp
je
and
repnz
adc
mov
inc
dec
iret
sub
cmp
pop
adc
nop
mov
fisubrs
mov
pop
sub
xchg
jge
sbb
jge
sub
push
cld
int
test
adc
push
mov
sbbb
mov
sbb
and
repz
push
xor
push
jmp
push
pop
push
pop
out
jo
or
inc
mov
sbb
cmpsb
icebp
rcrb
jg
orl
sbb
mov
mov
cmc
dec
scas
test
jbe
sbb
insl
jg
mov
popf
ja
pop
pop
pop
movsl
repnz
jg
cmpsb
jno
push
lret
daa
dec
rcrl
popf
lods
push
mov
ret
inc
loop
sub
push
repnz
cmpsl
xchg
test
mov
pop
pop
pop
into
jle
jmp
fdivl
mov
push
shlb
cwtl
cli
xchg
ja
adc
mov
cs
mov
lods
imul
mov
addr16
jecxz,pt
pop
mov
xchg
mov
enter
shl
jmp
pop
insl
xchg
or
jmp
jae
lea
or
ds
or
test
mov
mov
stos
fldenv
out
push
mov
or
ljmp
shll
lds
mov
outsl
mov
dec
test
mov
out
std
pusha
fnstenv
aad
test
fildl
test
shr
in
jg
inc
stos
popa
lret
psubw
mov
in
adc
or
rorl
fldt
inc
addr16
or
clc
push
cmc
jno
sbb
add
xchg
and
xor
shll
in
add
xchg
cmp
addb
push
mov
icebp
xor
ror
shl
mov
pushf
cmp
movb
pusha
lea
jb
jmp
in
push
lret
xor
aaa
dec
sbb
int
jns
loope
pushf
sub
sbb
ja
fcoms
test
sbb
mov
cmpsl
lret
pop
jmp
bound
push
flds
notl
bound
jl
bound
cwtl
cmp
js
loope
xchg
jge
adc
add
sbb
jb
add
push
imul
mov
adc
xchg
repz
and
fsubr
push
mov
add
test
into
scas
lea
ja
jmp
pusha
movl
pusha
movb
movl
mov
movb
lea
jmp
movl
pusha
pushf
lea
jnp
push
push
pushf
movl
push
lea
jmp
sub
fadds
push
stos
cli
addr16
pop
or
icebp
shlb
in
pusha
cmc
or
in
les
in
stc
popf
push
xchg
loop
enter
jmp
decl
dec
icebp
mov
sar
adc
inc
jmp
mov
lods
inc
aas
leave
add
add
out
je
jge
mov
push
xor
repnz
jb
and
or
sub
int
mov
jecxz
iret
lea
jne
call
stc
pushf
cmp
call
pusha
lea
jne
bswap
push
mov
pushf
movw
mov
movb
lea
jmp
jnp
es
fisubrs
sub
xor
or
aad
dec
out
out
scas
std
data16
cmp
out
out
jns
add
push
mov
jo
enter
adc
fldenv
mov
pop
fistps
ret
add
out
pop
push
mov
push
sub
or
fisttpl
push
sbb
outsl
scas
inc
mov
jg
mov
lret
rclb
dec
inc
ds
push
imul
icebp
ficoml
mov
add
mov
fs
sbb
jecxz
mov
stc
fucomip
adc
xor
scas
jmp
popa
mov
jb
xor
daa
cmpsl
and
aaa
mov
jg
mov
jmp
sub
insb
add
jb
pushf
or
mov
pop
push
cmp
or
arpl
sbb
imul
enter
das
xchg
jecxz
adc
adc
push
or
cmp
je
test
adc
les
mov
jno
mov
inc
xor
xchg
rcrb
inc
and
lods
loop
or
mov
mov
jae
bound
mov
movb
rorl
push
push
push
mov
jno
aas
jmp
dec
jnp
mov
jge
iret
test
test
sub
stos
and
xorb
aam
into
loopne
dec
push
mov
pop
test
popa
test
or
jne
adc
scas
xor
repz
lods
inc
les
mov
add
in
jnp
out
ljmp
mov
pushf
sbb
ret
shlb
mov
pop
insl
shld
cli
pop
daa
xchg
fdivrs
mov
outsl
out
mov
sub
sbb
push
ljmp
roll
mov
jmp
cmp
fldcw
sbb
out
cmp
add
out
jae
adc
push
int3
iret
xchg
sbb
mov
es
jle
inc
xchg
sub
fwait
pop
xchg
add
mov
das
mov
mov
rclb
testb
lds
hlt
aaa
or
or
pop
mov
mov
adc
add
pushf
add
call
out
outsl
cmpsl
int3
cmp
lret
mov
fcmove
mov
adc
mov
and
stc
pop
data16
ret
out
in
add
out
push
sarb
inc
push
mov
adc
jg
xchg
xor
jno
rclb
pushf
repz
filds
inc
or
clc
es
fbstp
mov
mov
mov
dec
mov
fidivrl
addr16
popa
push
fdiv
fimull
and
std
das
sti
cmp
pusha
cwtl
clc
inc
push
push
mov
mov
and
cmc
xchg
jbe
cld
xor
stos
cmp
call
movsb
sub
ficomps
lods
dec
out
mov
inc
inc
fistps
out
cmp
scas
inc
mov
push
push
icebp
fimull
cmp
adc
jge
fsubl
sbb
faddl
push
mov
outsl
or
jb
negb
xor
imul
mov
jg
lods
lret
mov
jne
loopne
es
int
mov
out
mov
in
or
and
pusha
sbb
or
sub
in
dec
or
call
sub
pushf
mov
loopne
aaa
and
xchg
sub
ret
addl
sub
repz
push
push
mov
or
cmc
jmp
cmp
stc
stc
cmp
push
lea
ja
rcl
sub
shr
rol
bswap
movsbw
add
add
mov
adc
adc
test
cmc
mov
pushf
mov
jmp
pusha
pushf
pushl
ret
push
jecxz
sar
fadds
push
adc
xchg
inc
iret
addl
pop
sbb
cmp
xchg
sti
adc
popa
in
mov
inc
rorb
mov
mov
push
mov
mov
and
inc
je
testb
jl
jbe
cmp
push
pushf
movsb
das
xor
xchg
notb
rolb
les
insl
xor
push
or
push
and
fcmovnbe
and
push
mov
jo
mov
ret
shrl
lods
arpl
int3
sbb
push
out
pop
aam
cmp
jne
push
xor
jp
xor
xorl
icebp
incb
bound
js
adc
data16
lret
sub
push
mov
cmpl
sub
ja
mov
xchg
pop
add
xor
pop
call
add
out
pop
jae
negb
popa
cld
mov
mov
mov
inc
outsl
inc
out
mov
adc
mov
sbb
sahf
mov
imul
lds
das
pop
xchg
mov
addr16
adc
std
stc
dec
mov
adcb
jnp
lahf
cmp
push
scas
rclb
mov
mov
loope
inc
int3
fbstp
loope
jno
add
xor
scas
xor
das
pop
and
xchg
das
data16
dec
fwait
scas
mov
loope
cltd
push
mov
push
sti
rorl
push
and
push
jb
jp
mov
sbb
pusha
adc
dec
xchg
pop
dec
mov
push
xlat
int
pop
xor
push
mov
clc
xchg
jno
bt
pushf
or
pushl
jmp
pushf
movl
push
lea
jmp
add
lods
adc
sub
sbb
push
mov
je
cmpsb
push
mov
jo
sub
pop
mov
fdivl
dec
sub
lock
je
adc
jmp
call
push
mov
in
inc
arpl
mov
bnd
jno
hlt
fstl
fwait
adc
jmp
movsb
mov
or
and
cli
jb
push
sbbb
loop
pop
cmp
dec
pop
sbb
jns
popl
xor
cmp
sub
push
cld
pop
outsl
loop
js
sbb
mov
xchg
jmp
fwait
leave
das
sub
icebp
imul
push
mov
push
inc
mov
xchg
sub
call
out
xorb
test
outsb
les
and
sarb
loope
orl
imul
cltd
mov
sahf
aam
call
sub
lcall
xlat
mov
gs
loop
mov
sub
loop
push
pop
test
nop
mov
jnp
adc
cvtps2pi
mov
mov
mov
jno
and
fdivl
pop
sub
mov
mov
or
adc
add
sbb
sub
loope
mov
mov
jno
and
sub
mov
push
and
jb
mov
mov
add
sub
cltd
or
jge
fildll
jno
stc
inc
addr16
lea
mov
jno
and
in
pop
xchg
aaa
es
push
mov
ret
scas
rep
pop
pushl
mov
pushf
pushl
pushf
pushf
lea
jmp
push
fisttps
cli
or
mov
sbb
out
push
sbb
mov
mov
cltd
int3
leave
push
lods
pop
push
jmp
sbb
movsb
or
adc
ror
sbb
das
dec
loope
push
pop
icebp
push
mov
adc
xor
push
or
out
fadds
dec
and
push
sbb
les
or
dec
gs
cmp
pop
insl
sahf
dec
inc
mov
mov
stos
adc
inc
imul
xor
stos
push
cmp
into
aas
icebp
cwtl
outsb
out
mov
inc
lret
add
lret
jbe
mov
sbb
fsubrp
xlat
rolb
pusha
lret
je
out
mov
shll
cmp
mov
popa
lods
daa
push
popa
cmp
ds
fimull
xor
sbb
divb
cmpsb
rclb
push
mov
inc
in
pushf
movb
lea
jb
stc
clc
cmpb
pusha
push
lea
jne
btc
mov
cmp
push
movl
add
pushf
bt
movzwl
sub
neg
mov
cmc
clc
cmc
cmc
add
clc
mov
clc
test
pushf
jmp
add
add
pusha
movl
call
shlb
into
jno
xor
mov
push
add
loopne
test
push
xchg
push
sub
mov
lea
xlat
inc
cmp
sbb
mov
in
adc
cmpsb
imul
imul
fnstenv
mov
xchg
dec
rol
jae
daa
out
adc
dec
inc
dec
iret
sbb
and
js
aad
stos
subb
add
dec
or
mov
lods
dec
xchg
push
pusha
push
insb
cmp
adc
jae
push
jne
std
imul
ljmp
fsubr
enter
hlt
mov
das
pop
aad
or
fisttps
sbb
filds
sti
mov
out
adc
imul
push
inc
inc
hlt
fisttps
inc
cld
adc
aad
or
dec
xor
and
push
mov
ja
cltd
mov
cmpsb
shll
push
cmp
xlat
inc
push
cmp
pop
test
mov
fs
sub
pop
std
std
xchg
adc
xorl
push
std
daa
rcrl
cli
ss
fwait
mov
imul
mov
or
add
out
das
adc
test
xchg
and
out
ret
add
sbb
repz
xchg
push
push
stos
and
or
sub
mov
xor
jmp
sbb
dec
dec
xor
in
dec
adc
inc
push
inc
mov
fcmovnbe
addr16
push
adc
cmp
insl
stc
mov
push
mov
inc
pop
pop
cmp
fucomi
out
dec
mov
push
and
nop
movsl
test
sub
call
pusha
stos
nop
pushf
add
inc
inc
jb
lock
cltd
mov
mov
cmp
das
mov
cwtl
loop
mov
les
push
mov
imul
cmpsl
pushf
lea
jae
pushf
mov
pushf
lea
jmp
mov
movzbw
mov
pushf
jmp
int
mov
mov
sub
into
sahf
jb
les
andb
sub
and
sub
std
mov
stos
shr
inc
cmp
cmp
dec
cmp
pusha
incb
cmpb
add
outsl
mov
loope
inc
iret
push
xchg
sub
pusha
mov
jg
call
out
je
mov
cli
jge
sub
sbb
imul
xchg
or
out
mov
inc
mov
fidivrl
sbb
mov
or
fs
jne
mov
pusha
push
pushl
mov
movb
pushl
pushf
movb
lea
jmp
lea
jne
jmp
lea
call
jmp
in
jg
sti
or
jae
lods
cld
jae
ret
jnp
or
dec
loope
xor
jl
lret
and
mov
aam
aas
pusha
rorl
xchg
mov
fsubl
mov
push
sbb
out
dec
xchg
daa
hlt
call
dec
adc
adc
in
js
mov
out
mov
inc
jle
pushf
mov
movl
pusha
pusha
lea
jmp
add
push
jmp
jmp
call
pushf
movl
movb
lea
jmp
test
push
pusha
cmp
call
daa
call
pusha
lea
je
js
bswap
push
lea
call
lods
ss
lock
cmp
xchg
in
jmp
cmp
fwait
dec
loopne
push
mov
xor
lock
cmp
xchg
mov
out
es
sub
mov
sub
cltd
cli
test
test
or
das
dec
iret
adc
aad
push
mov
or
dec
jae
add
add
add
add
add
add
add
push
add
addr16
add
addr16
add
add
add
add
addr16
add
dec
outsb
dec
mov
sbb
xor
mov
or
in
inc
dec
xchg
cmpsb
dec
inc
sub
daa
repnz
xchg
pop
push
push
in
fsubrl
dec
lds
repnz
xchg
test
pop
fldl2e
cltd
inc
xchg
insb
mov
daa
adc
lock
cs
push
int
pop
cld
adc
pop
jp
movsb
test
outsl
mov
sbb
pop
dec
mov
xchg
mov
push
dec
mov
mov
mov
and
out
dec
cwtl
dec
fs
jg
pop
fcoms
dec
or
lret
jbe
cmp
and
icebp
popf
out
clc
lods
mov
mov
xor
int3
das
and
sub
dec
pusha
cmp
test
mov
sub
loop
mov
adc
inc
xchg
sbb
in
loop
dec
or
mov
or
das
and
stos
sbbl
int3
xor
inc
sarl
xor
fst
stos
fistpll
es
les
adc
sub
mov
ret
xchg
loopne
mov
inc
mov
mov
cmp
pop
jp
scas
out
mov
in
dec
xchg
repz
jnp
test
pop
push
out
adc
fs
inc
fucomi
movsb
imul
push
jmp
test
dec
mov
loopne
outsl
arpl
cltd
arpl
cwtl
test
cltd
xchg
mov
ret
inc
adc
inc
sbb
mov
jae
test
cmp
aaa
sarb
fisubrs
enter
sub
push
lahf
icebp
xchg
xchg
lret
and
mov
and
push
push
cld
lcall
cli
ds
aas
nop
ja
fwait
add
mov
pusha
pop
cmpsb
data16
cmpb
imul
xchg
sbbl
xor
add
lret
add
ret
mov
xchg
fchs
dec
out
pop
xchg
outsl
in
inc
bound
jb
rcrl
adc
int
in
test
mov
into
xchg
mov
and
cmp
push
insb
jns
pop
fdivrs
cld
outsb
add
daa
je
push
xor
das
push
mov
repz
fucomp
fs
outsl
sub
inc
pop
mov
cmc
out
jp
xlat
sub
pop
ret
inc
lods
add
dec
flds
mov
and
mov
push
mov
xor
push
cmp
daa
bound
pusha
jnp
push
sub
inc
pop
lret
sti
inc
leave
mov
pop
inc
and
sahf
mov
lods
jns
mov
jg
loop
push
push
pop
push
test
sub
jae
jp
mov
or
sub
test
cmp
shlb
sbb
ror
and
popl
cwtl
cli
stos
jo
stos
dec
mov
rorl
ret
xchg
ljmp
push
enter
xchg
jns
inc
aam
jmp
mov
sahf
jne
xor
pop
pop
jmp
mov
jp
fidivl
fcoml
pop
inc
jo
in
sarb
comiss
push
lea
data16
push
xor
call
xor
jecxz,pn
cltd
les
mov
filds
pop
xorb
or
arpl
lret
aas
jnp
add
adc
es
push
pop
xchg
sbb
arpl
pop
cmp
xchg
jbe
or
cs
xchg
enter
movsl
insl
mov
mov
or
or
cmp
fstps
clc
mov
adc
into
lcall
ds
xlat
mov
push
dec
push
push
scas
jl
daa
xorb
sahf
mov
jecxz
sub
jg
pop
bound
push
pop
out
loop
popf
fisttpl
jnp
jb
out
dec
mov
mov
sub
push
adc
mov
mov
add
insb
xor
repnz
aad
ja
adc
ret
inc
loope
fsubrs
fnstsw
insl
and
and
ret
leave
repz
xor
add
sarb
mov
nop
cli
cmp
ljmp
pop
add
loop
icebp
std
push
inc
std
sub
push
icebp
inc
push
cmpsl
and
mov
mov
mov
cmpsb
mov
xchg
or
push
lock
push
xorb
in
push
add
lock
pop
cltd
or
pushl
push
add
cmp
int
insl
aaa
pop
xchg
aam
dec
bnd
push
shll
mov
sahf
mov
cmp
jnp
clc
int
lret
ret
dec
in
arpl
mov
bound
dec
mov
je
pop
stos
add
movsl
and
mov
jns
and
mov
iret
mov
rolb
xchg
je
imul
cli
mov
jmp
mov
divb
xor
incl
mov
lock
mov
sahf
xor
test
cmpsl
psrld
sar
add
and
lods
lar
push
fistpll
adc
es
add
bnd
mov
push
subl
rorl
sub
mov
xor
fisttpll
xor
push
leave
dec
adc
sub
fdivs
push
mov
inc
inc
and
ljmp
sbb
es
mov
daa
add
adc
sti
mov
dec
cmc
lods
sbb
push
mov
repnz
rolb
std
roll
bound
shrb
inc
iret
xchg
or
sbb
dec
int
sub
push
and
js
xlat
fdivl
mov
jnp
sbb
fstl
shrl
call
decl
adc
test
pushf
in
push
je
mov
adc
push
xor
jmp
inc
rclb
nop
mov
popf
xor
xor
xor
mov
mov
in
mov
das
push
stos
test
cmp
add
fwait
aas
pop
and
mov
dec
mov
sub
adc
push
inc
int
in
mov
ljmp
sub
aad
sub
sbbl
aam
mov
cmpsb
popf
incb
cmpsl
cli
xor
es
jae
cmp
xchg
repnz
sub
jle
fcom
js
inc
mov
insl
xchg
mov
int
push
xorb
pop
mov
push
jae
or
mov
mov
or
jns
cmp
push
xor
mov
inc
mov
das
fimull
dec
cmpsb
jmp
jl
pop
in
insb
push
pop
pop
add
mov
fcoml
dec
mov
jle
ret
pop
enter
jle
cmp
bnd
dec
sub
test
sahf
xor
push
jb
dec
ss
ds
fs
rorb
fcomps
push
mov
mov
fsubp
xchg
push
jmp
mov
cmpsl
pop
inc
sar
pop
dec
push
int3
loope
scas
lds
fldcw
in
xlat
xchg
dec
test
popa
xchg
daa
lock
xor
cwtl
popa
lahf
jne
mov
or
jne
or
jb
mov
dec
mov
jmp
mov
sub
fs
adc
arpl
repnz
inc
das
repnz
std
shlb
call
mov
shrb
imul
fildl
or
dec
inc
adc
insb
mov
or
lcall
xorb
lock
inc
setp
int
enter
and
mov
jg
int3
dec
dec
sub
idivl
inc
cmp
fucomp
pop
adc
lock
or
decl
shlb
cmc
ljmp
cwtl
dec
inc
push
jmp
scas
mov
das
out
xor
sub
push
popf
js
adc
inc
sbb
cmovp
adc
xchg
add
sbb
mov
insl
orl
in
cwtl
enter
push
cmpsb
lret
or
daa
pop
sbb
incb
les
jo
loopne
inc
or
xor
xor
cmpsb
outsl
mov
or
arpl
nop
mov
js
dec
mov
cld
cmpsl
xchg
mov
jno
mov
int3
out
mov
and
std
inc
sub
dec
adc
ret
push
xchg
mov
sub
out
imul
es
js
sbb
popf
sub
push
inc
ret
and
ficoml
inc
jns
push
std
adc
ret
fildl
and
frstor
daa
adc
fcmovnu
dec
test
negl
call
mov
movsl
cmp
ds
cmp
andb
nop
mov
loope
std
loopne
push
mov
out
dec
push
mov
decl
mov
mov
add
sti
fistps
in
loopne
xor
mov
dec
mov
fsubrl
mov
int
out
add
pop
push
or
and
mov
sbb
jge
stos
inc
xchg
pop
inc
dec
leave
ljmp
mov
out
incb
jmp
lcall
arpl
aad
or
int3
xchg
xor
cmp
or
push
mov
imul
mov
imull
daa
add
dec
ret
sbb
push
inc
xor
ja
repnz
jl
ret
test
or
addr16
push
iret
into
cli
push
sub
aam
inc
mov
test
lds
fnstcw
push
clc
jns
cld
orl
in
ljmp
mov
sbb
int3
mov
lea
pushf
js
jecxz
pop
scas
sahf
cmp
sbb
sbb
stc
inc
sub
test
clc
or
sub
mov
xor
les
popa
jnp
lret
or
or
mov
sti
xchg
mov
sbb
lea
in
mov
mov
test
and
scas
mov
or
and
mov
mov
xchg
loopne
jmp
pop
xorb
stos
add
cmp
dec
hlt
push
xor
rcll
xchg
mov
int3
mov
or
movsb
xchg
bound
sbb
adc
and
pop
dec
out
inc
std
or
addr16
in
lcall
pushf
cmp
dec
lcall
lcall
adc
mov
rcr
mov
icebp
mov
sbb
icebp
cld
filds
cltd
stos
int3
pop
xor
inc
and
cmp
sub
cmp
cmp
jb
push
fcomps
mov
out
dec
inc
out
sub
in
push
ds
cmpsb
into
mov
movsb
add
add
cmpsl
faddp
push
js
or
in
testb
dec
mov
sub
dec
shlb
lcall
bound
data16
mov
add
add
add
je
outsl
fs
gs
imul
add
sti
sbb
add
xor
fisubrs
and
iret
imul
gs
xlat
imul
out
ret
das
iret
addr16
mov
repz
out
and
adc
xor
xchg
mov
jmp
xor
lcall
mov
sub
xorl
mov
dec
jl
in
mov
mov
popf
jl
hlt
adc
push
pop
movsb
xor
rol
fcoml
ror
repz
mov
or
or
outsb
lea
call
push
adc
pushl
pusha
lea
jae
jmp
or
push
mov
xchg
push
leave
in
outsl
pop
pop
testl
lret
in
pop
mov
add
stos
inc
ja
push
ret
add
out
jp
call
mov
jg
shl
notl
mov
sti
or
push
in
xor
xchg
in
test
stos
fiaddl
push
in
or
adc
jb
sub
prefetcht2
cmp
jnp
mov
outsl
in
jno
inc
fcompl
ret
sub
push
fidivrl
push
dec
imul
add
scas
dec
push
push
mov
imul
dec
sbb
call
mov
push
adc
push
jp
imul
js
sub
cmpsb
lods
push
push
cmpsb
clc
in
cmpsb
pop
adc
xor
jg
js
add
movsl
ret
jecxz
mov
pusha
dec
pop
and
add
shl
pop
pusha
andl
out
into
aam
add
pop
push
mov
jne
fisubrl
out
shr
push
movl
movw
lea
je
call
lods
jno
mov
iret
push
addl
jmp
pop
lds
sbb
xor
push
popa
lret
jbe
inc
movb
lds
pusha
rorb
push
and
dec
sub
js
and
and
in
addr16
test
test
jg
shl
pushf
pushf
lea
je
jg
pusha
mov
pusha
pushf
call
pushl
pushl
popl
mov
pushl
ret
pop
mov
setg
movzbw
pushf
mov
call
lea
call
push
pushf
jmp
cmpsl
loop
push
inc
shlb
repz
dec
in
mov
inc
xchg
pushf
rcr
arpl
adc
jno
cmp
jne
push
adc
adc
push
clc
push
mov
push
lods
ret
pop
cltd
mov
insb
dec
idivl
stos
or
int3
jno
jmp
jne
push
test
dec
add
rcl
pop
sub
and
pop
aas
int
sbb
or
and
insb
sub
sub
sbb
mov
inc
push
gs
mov
mov
inc
sbb
add
pop
add
push
add
adcb
inc
jns
add
adcb
add
add
mov
and
jmp
repz
push
jmp
mov
jmp
leave
push
inc
push
jg
sbb
shrl
incl
mov
or
lods
movsl
adc
enter
sub
cmp
sbb
mov
in
ljmp
push
es
mov
dec
pop
inc
imul
mov
clc
adc
mov
pop
jo
scas
leave
jb
ret
lods
neg
mov
test
pop
add
cmp
xlat
mulps
sti
sub
mov
outsb
test
clc
jmp
gs
incl
add
fs
jbe
btc
sar
shrd
xchg
mov
mov
bswap
add
jmp
mov
rcll
lods
inc
or
dec
sub
mov
xchg
andl
ficoml
mov
push
in
pop
repz
or
rcr
ss
popa
pop
iret
jbe,pt
es
aad
pop
mov
mov
pop
mov
fadds
loopne
adc
cli
divb
mov
and
nopl
lcall
xlat
mov
dec
scas
mov
inc
xchg
xchg
and
notb
outsb
adc
add
loopne
jmp
add
pop
mov
cltd
inc
dec
cmp
stc
and
push
jle
jecxz
out
mov
xchg
xchg
mov
xchg
in
adc
xor
cs
inc
arpl
ja
aad
rol
or
jns
popa
pushl
xchg
jmp
mov
stos
mov
or
mov
mov
sub
paddq
adc
fs
std
fisttpl
cwtl
or
add
xchg
rorl
dec
aas
mov
push
dec
mov
pop
in
stos
and
fdivr
fimull
sub
mov
sbb
xor
lods
adc
pop
add
pop
out
mov
lods
xchg
out
cmp
or
daa
pop
cmp
jmp
adc
inc
iret
inc
mov
or
fwait
ds
jb
push
enter
mov
mov
jb
ds
jmp
pushf
adc
call
pushf
pushl
popl
pushf
pushl
ret
lea
ja
push
lea
jb
pusha
cmpb
pushf
jmp
push
jge
xlat
lock
gs
and
arpl
iret
insl
cmc
leave
jnp
adc
xchg
add
pop
mov
imul
lods
loopne
pop
ss
push
in
mov
repz
dec
aaa
pushf
stc
scas
jb
popf
fwait
or
sub
sbb
jmp
out
scas
pusha
or
enter
loope
dec
loop
jo
pushf
sub
mov
mov
add
xor
push
outsl
push
icebp
test
lcall
jle
std
push
mov
adc
adc
lea
call
pushf
call
je
ret
dec
cmc
xlat
aad
gs
insl
sbb
repz
mov
pop
inc
cmp
mov
xchg
or
into
mov
div
mov
mov
push
icebp
mov
pop
pop
push
adc
and
inc
popa
jb
lahf
cmp
jae
cwtl
mov
push
subl
cmp
in
mov
pop
jb
xchg
sub
push
mov
dec
sbb
dec
pusha
mov
pushf
pushf
call
aad
call
pop
dec
add
out
mov
xchg
cltd
loope
fsub
imul
add
adc
pop
pop
jecxz
pusha
sub
add
mov
xchg
pop
xchg
mov
adcb
jl
pop
jns
cmpsb
xor
jmp
imul
test
out
jp
rolb
cmpsl
jg
pop
sbb
out
pop
popa
jo
clc
dec
dec
mov
push
pop
lcall
xchg
shld
neg
mov
pushl
add
jmp
bswap
mov
seto
lea
pushf
call
not
mov
not
mov
movb
mov
lea
pop
pushf
pushl
ret
add
and
and
aas
xlat
cmpsl
sbb
or
mov
dec
cmp
test
les
mov
aas
and
push
adc
cmpl
add
test
out
loopne
lods
or
inc
popf
das
daa
es
push
push
mov
roll
push
jne
jecxz
inc
push
mov
pop
mul
mov
xlat
inc
lahf
daa
add
repz
push
dec
daa
sti
and
shrb
xor
xor
mov
int
hlt
mov
cmp
push
outsb
mov
add
sub
les
lcall
jl
ds
in
aad
adcl
inc
mov
lods
dec
jo
mov
lds
repz
mov
scas
push
mov
dec
scas
mov
mov
or
mov
jb
inc
into
fwait
daa
push
inc
jl
ret
das
ret
icebp
pop
mov
or
iret
or
xchg
dec
pop
test
outsl
lcall
decl
jmp
in
pushf
mov
pushf
movb
pushl
ret
lea
jg
push
pusha
pushl
movl
pushf
movb
push
pushf
lea
jmp
lea
jbe
btr
not
xchg
shrd
sub
shrd
pusha
shr
mov
shld
mov
or
add
sbb
sbb
shr
cmc
rol
rcl
mov
rcl
bswap
or
neg
add
movsbl
mov
bswap
mov
jmp
pusha
pushf
setl
lods
jmp
push
movb
movb
movl
movb
mov
pushl
lea
jmp
cli
jg
cmpsl
int3
xchg
stc
and
push
aas
jae
mov
dec
cmp
rorb
notl
out
repnz
rcr
jmp
xchg
mov
sbb
pusha
test
and
mov
push
jbe
xchg
add
xor
push
daa
fucomip
mov
or
fmulp
xor
jno
pop
sub
pop
or
popa
jno
pop
idivb
das
imul
aad
mov
inc
clc
pop
imul
in
pusha
test
movsb
mov
inc
inc
inc
jge
sub
insl
xchg
cmpb
sbb
dec
dec
repz
inc
and
sar
lret
push
or
pop
cmpb
push
lock
push
push
jle
sti
test
dec
pushl
sub
xchg
imul
mov
add
or
jns
mov
mov
xor
dec
mov
js
data16
clc
cld
js
add
push
push
mov
cltd
aam
push
mov
lea
jne
call
bsr
mov
sar
and
clc
push
btc
sub
inc
cmp
push
stc
push
xchg
rcl
rcr
push
neg
lea
movsbl
neg
mov
test
call
call
pushf
mov
movl
push
movl
pushf
push
mov
pushf
lea
jmp
movzwl
dec
call
push
call
sub
loope
pop
jle
sbb
xchg
xchg
and
les
ljmp
int3
and
fnstsw
add
mov
call
xchg
xor
mov
adc
mov
cltd
ljmp
loopne
jmp
les
mov
mov
inc
jge
bound
push
sti
in
pop
lea
and
mov
dec
scas
clc
andb
jns
sahf
icebp
addr16
xchg
enter
push
imul
mov
cmp
mov
and
cltd
mov
mov
mov
cmp
push
xorl
test
add
popf
or
pop
inc
adc
out
lahf
sbb
repnz
sub
mov
test
pop
stc
inc
int
pop
jo
lret
fwait
sbbl
xchg
cmc
pop
gs
out
call
xchg
stos
fldt
jmp
push
jg
leave
call
cmp
push
std
lods
mov
push
insl
and
mov
lcall
rcrl
aas
and
jg
jg
stos
lds
mov
inc
jnp
push
mov
sub
mov
hlt
outsb
mov
addr16
fs
idivl
pop
add
cmp
inc
sub
push
iret
sbb
popf
aam
ret
int
cli
testb
out
clc
shrb
push
mov
ret
into
and
jle
xchg
xor
mov
push
mov
fcomi
into
jo
sub
xchg
and
sbb
call
and
jno
test
adc
mov
xchg
cmp
mov
cwtl
cld
cmpb
fsub
stc
das
add
shl
or
mov
addl
popa
add
push
mov
std
fwait
sahf
xor
jmp
pushf
lea
ja
call
dec
int3
movsb
sub
in
testl
inc
lret
movb
mov
in
int3
cmc
jg
pop
ret
rorb
mov
dec
iret
mov
icebp
jne
or
pushf
pushw
add
and
sti
adc
xchg
leave
arpl
push
shlb
fwait
dec
sbb
jb
in
or
repnz
adc
add
jmp
movsl
daa
push
inc
repnz
call
jmp
in
arpl
push
xchg
xlat
pop
pop
dec
push
mov
pop
cld
jmp
movb
pushf
stos
mov
pushf
lea
jmp
jmp
iret
sbb
mov
and
and
stos
jl
push
ret
add
push
out
fdivrl
in
outsl
sbb
xchg
pop
or
cmp
test
rorb
icebp
rol
sub
push
nop
lret
cmp
jbe
nop
sbb
and
and
dec
in
push
out
mov
aam
in
test
xor
loopne
call
in
xor
mov
dec
xor
inc
aam
sub
xchg
inc
pop
stos
faddl
push
lcall
xchg
dec
cmpsb
push
imul
gs
stc
xchg
aad
cld
mov
pop
push
sub
sbb
push
aam
inc
jl
sub
add
mov
incb
into
push
xchg
scas
cld
and
push
mov
pop
stc
push
xchg
push
int3
clc
pop
mov
bound
addb
test
loop
mov
fdivrs
out
addb
pop
mov
inc
jmp
xor
push
xchg
mov
and
pop
jo
outsl
jl
sti
cmp
push
inc
int
cmp
imul
and
mov
and
add
shr
das
mov
inc
or
jne
shlb
push
into
push
mov
mov
lcall
stc
adc
mov
std
btr
cmpsl
pop
xor
fbld
popa
aad
pop
cmpsl
je
mov
clc
add
in
ret
inc
jge
add
jb
cltd
push
mov
jmp
and
outsb
sub
and
xor
lcall
lahf
xor
loop
into
outsl
movsl
jle
out
mov
call
lret
out
xchg
sub
scas
push
sbb
into
orl
sub
movsl
pop
pop
fimull
mov
out
mov
xchg
and
sub
cmp
addb
mov
in
mov
mov
mov
xor
movl
mov
pushf
pushf
lea
jmp
pop
pushf
push
movl
call
pusha
mov
not
push
lods
cmc
pushl
rol
bt
push
neg
push
pushf
dec
pushf
pushf
neg
call
cmp
pushf
lea
jae
bt
cmc
cmp
push
jmp
push
pushf
movl
jmp
jmp
fwait
in
push
sbb
push
lret
jae
sub
fwait
jne
or
mov
jg
push
filds
lahf
mov
xor
std
jnp
jae
fadds
add
test
das
mov
and
jg
loopne
xor
sbb
lret
hlt
pop
sbb
shlb
aad
xor
and
inc
andb
adc
popa
xor
xlat
lods
out
or
stos
mov
nop
jp
mov
stos
xor
les
cmp
jne
jae
repz
pop
enter
push
sbb
pop
pop
sub
imull
cmpsl
out
dec
or
push
sbb
push
mov
pop
out
xor
icebp
cmc
xchg
push
out
pop
out
and
lret
sti
les
mov
loop
dec
xor
lods
mov
inc
addr16
or
jg
and
jb
sti
mov
jae
sub
lock
sbb
push
mov
ljmp
sub
sbb
ret
popa
int
jno
icebp
jg
and
es
jae
pop
dec
rolb
loop
adc
adc
ss
test
icebp
ficoml
prefetch
lods
int
js
cmp
stos
lods
adc
sbb
jp
mov
cmp
push
in
outsl
or
inc
push
jns
xchg
pop
mov
je
add
adc
sbb
push
fldcw
outsl
jmp
js
hlt
pop
inc
addr16
das
lock
in
sub
xchg
xor
loopne
sub
outsl
and
test
das
inc
jnp
jns
aad
daa
push
cmp
jecxz
es
xchg
mov
sbb
dec
mov
push
mov
fistpll
lea
call
push
pusha
cmc
cmp
push
push
lea
jae
cmp
stc
cmp
pusha
pusha
jmp
jmp
jmp
push
leave
cmp
add
push
push
sbb
popa
xlat
jns
jmp
shrl
mov
sub
cmp
test
ret
xchg
out
jne
pushl
js
je
add
mov
mov
lea
sahf
les
push
icebp
jne
sarb
mov
and
xor
mov
mov
inc
mov
xchg
xchg
sbb
pusha
or
sub
mov
xchg
notb
and
and
mov
sub
jg
gs
icebp
insl
mov
pop
xor
fs
in
lea
pushf
movzbw
pushf
call
pusha
movw
movl
pushl
movl
pushf
movb
lea
jmp
call
lea
jle
push
inc
lea
jns
pushf
adc
lea
push
pushf
pushl
jne
ret
pusha
call
movzbw
mov
not
movzbw
bswap
movsbw
mov
lea
pushf
mov
movzbw
mov
push
pusha
push
pushl
ret
mov
inc
pushf
call
pushl
popl
pushf
pushl
ret
mov
mov
sub
cmpsl
cmp
pop
jno
into
insb
addl
testl
popf
mov
dec
fndisi(8087
cmp
dec
dec
lahf
mov
int
sbb
pusha
add
ljmp
test
pop
adcl
cltd
push
scas
adc
add
jp
imul
daa
in
sbbl
mov
jg
js
inc
stos
mov
stc
popa
repnz
inc
leave
lret
mov
loopne
fnstsw
or
push
mov
cltd
mov
pop
mov
jmp
shlb
js
loopne
sub
jle
adc
mov
mov
gs
push
adc
sahf
sub
lret
jnp
add
xchg
push
mov
loop
add
sub
ret
cld
movsl
roll
sub
xchg
push
es
cmp
mov
fsubl
lock
mov
dec
or
out
sar
pop
out
or
mov
out
mov
pop
lods
xor
leave
or
xchg
ljmp
fdivr
cltd
ds
inc
mov
rcll
xchg
or
push
ljmp
imul
insl
les
cli
shrd
and
mov
push
jmp
popf
inc
xchg
scas
rcl
pop
inc
lahf
sbb
dec
ds
lock
andb
adc
inc
retw
pop
pushf
adc
mov
mov
xlat
ret
int3
add
call
dec
shrb
xchg
cmp
bnd
add
rcrb
out
and
into
cmp
out
scas
stos
mov
add
and
mov
das
popf
sbb
in
sar
xor
in
xor
xor
cmp
add
daa
iret
imul
cmpsb
push
movsb
dec
out
ss
shrl
xor
jecxz
jne
shll
test
mov
cmpsl
sbbl
or
cmc
sbb
push
xchg
repz
mov
jecxz
jg
fstps
ret
jns
call
addb
xor
jne
hlt
jns
shlb
sub
cmpsb
sbb
pop
inc
lret
add
sti
lock
push
movsl
aaa
mov
cmp
add
pusha
enter
push
imul
cmpl
inc
xchg
ljmp
push
mov
sub
pop
add
into
movsl
or
lret
insb
jne
pop
push
or
mov
xor
or
js
add
and
ret
push
pand
out
in
xchg
call
aam
mov
aaa
lods
popf
bound
addr16
add
pop
dec
adc
cmp
daa
push
cmp
loopne
mov
call
push
adc
xchg
sbb
pusha
lret
test
jno
push
mov
fcoms
push
iret
addr16
add
popf
pop
mov
dec
rolb
push
pop
push
mov
out
push
mov
adc
dec
xchg
ljmp
pop
ds
rol
xlat
mov
sbb
pop
addr16
testb
push
lds
lock
adc
adc
lea
and
rol
push
aaa
in
jp
cmpsb
or
sbb
mov
mov
aad
xchg
imul
cli
mov
stos
mov
rorl
jge
sub
lret
and
mov
push
clc
mov
pushf
add
cltd
cmp
imul
inc
push
mov
aaa
cmp
mov
arpl
mov
adc
jmp
scas
cmc
jnp
std
ja
sbb
mov
dec
call
idiv
mov
lahf
setl
call
ja
test
clc
pushf
cmc
add
pusha
test
jmp
jmp
jmp
adc
push
mov
mov
and
push
fisubs
adc
sbb
fwait
xor
nop
or
xchg
in
vpmaxsw
ret
pop
add
xor
xor
ret
mov
push
mov
mov
and
je
bt
bsf
shl
call
push
movl
push
pushf
pushl
lea
jmp
call
lods
lock
fidivs
lcall
add
imulb
fdivp
outsl
lds
mov
adcb
add
mov
or
scas
sbb
fsubp
jae
sub
push
div
js
mov
add
lods
ja
xchg
mov
jecxz
add
sbbb
add
in
pop
mov
cltd
pop
iret
pop
cmpsl
xchg
xchg
test
fldt
or
mov
fistps
inc
sbb
sti
dec
stos
adc
fs
leave
dec
inc
aad
stc
xchg
insl
inc
loopne
ds
orl
aad
scas
xchg
nop
pop
js
loopne
mov
xor
icebp
dec
nop
arpl
pop
and
adc
dec
insb
subb
lahf
les
aaa
xchg
aaa
fwait
bound
icebp
fcomp
addl
addr16
js
and
mov
or
or
lcall
xchg
mov
push
xchg
push
aas
sub
push
arpl
ret
ficoms
fsub
xchg
pusha
dec
mov
pusha
shl
push
call
mov
not
pusha
mov
call
lea
jne
cmc
shl
push
mov
cmp
add
jmp
lea
call
jmp
inc
ret
jo
out
push
push
incl
mov
add
stos
pop
inc
test
mov
arpl
ret
and
push
mov
out
repnz
ret
xor
faddl
jno
push
mov
add
mov
jmp
jno
mov
aas
aaa
aam
jecxz
gs
and
xor
adc
shlb
movsb
sbb
mov
inc
loope
cmpsl
orps
aam
and
fcompl
pop
fst
lret
cmpsl
dec
and
xchg
cmp
and
push
rolb
pop
ja
dec
and
dec
and
insb
testl
xchg
divb
push
cmp
jl
mov
les
mov
std
jb
or
cli
cmpb
movsl
test
test
adc
lret
inc
cli
mov
cmp
sub
sub
pop
xlat
pop
sbb
aas
mov
ja
aas
sbb
push
xchg
jns
jg
cmpsl
dec
cli
mov
xor
adc
mov
mov
ret
cmp
mov
data16
and
cmpsl
clc
or
shlb
ret
fidivs
add
sub
mov
sbb
je
mov
pop
jg
mov
sti
mov
and
fcmovnbe
jbe
push
lods
out
jnp
lcall
stc
ret
pop
xor
mov
out
xor
xor
fistpl
or
cld
jl
lcall
mov
xchg
add
mov
xor
xchg
push
xchg
mov
jl
loop
movsb
and
test
and
cli
adc
leave
mov
cmp
adc
mov
mov
stos
mov
add
or
in
cmp
std
mov
mov
xor
sub
ja
dec
pop
mov
mov
rorb
push
insl
aas
xchg
adc
xor
push
push
xor
xor
aam
jle
push
cmp
cli
mov
sub
jbe
pop
mov
push
pop
cmp
xchg
dec
pop
xor
adc
out
lret
adcl
in
mov
xchg
es
iret
std
push
testb
movsb
pop
fsubp
jns
pusha
mov
xchg
je
or
mov
loope
adc
das
and
psubb
scas
mov
scas
pop
out
std
push
dec
bsr
sti
hlt
jl
or
sbb
pop
das
xor
loope
push
and
pop
xchg
inc
and
ja
fdivrl
cmp
mov
scas
sbb
lock
out
cwtl
jle
icebp
xor
and
mov
push
xor
fnstenv
cld
repnz
cld
scas
mov
cmp
mov
xor
je
adc
xor
xchg
and
add
cld
mov
scas
cmp
add
and
and
mov
mov
xchg
mov
xor
loope
mov
cmp
xor
fcomip
fbld
mov
repz
cmp
cmp
stos
notl
je
mov
xor
jno
lock
mov
mov
cmc
mov
imull
jge
xor
and
mov
subb
decl
stc
mov
fidivs
out
cmp
cmp
mov
and
inc
ds
insl
sub
cld
lahf
inc
mov
ss
jb
cmc
scas
push
xor
out
and
repnz
mov
and
pop
insl
div
and
add
mov
inc
jp
rcrb
and
sbb
mov
and
xor
jo
int3
jp
daa
mov
sbb
idivb
sbbb
sbb
dec
mov
bnd
xor
and
out
shll
push
and
jle
dec
loop
sub
add
xor
ficoms
mov
and
xchg
lock
mov
loop
jne
xchg
stos
mov
int3
jle
mov
and
sub
jae
mov
add
fdivr
stos
mulb
jnp
cmpsl
xor
cs
stos
mov
xor
and
mov
mov
mov
aaa
loope
jne
divl
mov
lahf
mov
mov
cmp
adc
icebp
mov
sub
out
add
push
test
cmp
cli
mov
test
add
or
mov
mov
jmp
cmp
mov
mov
aaa
cmp
lods
mov
mov
mov
jp
cmp
divl
stos
hlt
rcl
mov
jge
mov
dec
xor
mov
mov
hlt
xor
fdivs
and
push
jns
mov
icebp
sub
pop
or
mov
mov
mov
clc
inc
mov
jbe
mov
sub
mov
aas
das
cmp
cmp
jle
jne
cmp
dec
cmp
cmp
or
sarb
and
cmp
cmp
movntps
xor
mov
cmp
mov
lock
jge
mov
jl
xchg
add
sarb
mov
lahf
jp
and
lods
jp
mov
and
mov
sbb
mov
mov
cmp
jp
cmp
ficoms
mov
adc
cmp
xchg
jns
mov
mov
cmp
cmp
mov
mov
mov
jno
lret
xchg
aaa
mov
mov
clc
mov
stos
mov
push
cltd
mov
fdivrs
mov
mov
jge
adc
mov
pop
mov
jne
je
mov
mov
hlt
sarb
fdivp
mov
into
mull
ret
sbb
cmpsb
clc
ret
add
loopne
xor
ja
mov
ja
jp
mov
add
ds
scas
inc
inc
and
rcrb
push
inc
mov
idivb
xor
scas
mov
xor
lret
shl
xor
icebp
push
add
shlb
add
sub
mov
stos
clc
outsb
mov
lock
cmc
scas
bound
repnz
mov
hlt
bnd
pop
ds
into
jne
loop
negb
mov
adc
adc
hlt
pop
jecxz
add
stc
jnp
movsl
jb
sub
and
adc
mov
lods
je
mov
mov
cmp
mov
and
add
ret
addl
mov
enter
stos
add
jo
inc
mov
lea
stc
mov
and
mov
arpl
idivl
icebp
cld
xorb
bnd
cmp
pop
mov
pop
dec
and
ds
std
jmp
repnz
idivb
dec
call
ret
mov
hlt
jbe
pop
ljmp
mov
xor
popa
dec
cmp
incb
jl
std
jo
xchg
je
lret
and
ja
cmp
movsl
negl
push
adc
incl
and
in
cli
dec
cmp
xor
cli
adc
inc
stc
mov
pop
pop
jp
xor
inc
mov
push
nop
jge
and
ljmp
and
jnp
icebp
dec
jns
jns
push
jbe
mov
fsubrl
add
xchg
hlt
pop
mov
jo
sub
andb
pop
xor
pop
hlt
ljmp
dec
cld
mov
mov
andb
pop
lock
pop
mov
mov
and
cmp
mov
pop
cli
repz
pusha
shl
and
cld
divb
cmp
into
xor
pop
rcrl
mov
jns
icebp
cmp
sbb
icebp
wrmsr
mov
and
dec
in
mov
cmp
xor
adc
adc
xchg
out
pop
movsb
add
aad
pop
xchg
sbb
clc
adc
cmp
mov
add
mov
jle
and
jo
sbb
jo
sti
icebp
fdivrs
in
jb
mov
xor
popf
jge
jnp
sarb
popa
push
and
jmp
in
and
fisubs
sbb
test
rol
cmc
pop
adcb
negl
sbb
jne
sarl
inc
ret
ret
dec
mov
mov
push
mov
fnstsw
lods
mov
xor
mov
push
lods
push
pushf
mov
insb
cmp
lea
sub
sbb
or
rcrl
jmp
popf
ror
sbb
jp
hlt
adc
sbb
repz
xor
jb
mov
jb
add
in
sbb
jbe
add
adc
mov
addr16
pop
scas
cmp
mov
pushf
jmp
or
xor
addl
jnp
mov
arpl
jmp
negl
jns
mov
pop
cld
int
dec
lret
jbe
sti
lods
cmp
fidivrs
inc
adc
lds
into
in
sti
or
pop
sub
outsb
test
cmp
adc
fimuls
inc
std
mov
ds
imul
div
inc
jp
ds
dec
adc
dec
adc
xchg
pop
lods
pushf
sbb
sub
xchg
and
idiv
imul
dec
cmp
sbb
lock
jbe
mov
mov
lahf
je
lret
sub
fadd
aas
push
js
pop
in
int3
das
and
xor
mov
push
jnp
jo
push
adc
push
fnsave
std
add
sub
sbb
lret
insb
sti
stc
aas
cwtl
jmp
and
wrmsr
dec
dec
xorl
or
cmp
mov
sub
mov
es
push
add
movsb
mov
lds
stc
dec
loop
lock
out
pop
jge
jb
mov
punpcklwd
jo
cld
sbb
xchg
mov
adc
fisttps
insl
int3
loop
insb
adc
fisttpl
notl
loope
or
jbe
mov
pushf
cld
mov
sub
xor
scas
cmp
and
fmull
adc
insb
dec
out
jno
mov
std
xchg
xor
mov
pop
das
fists
jle
jns
lods
js
and
outsl
andl
xchg
cmp
adcb
xchg
loop
jmp
dec
push
add
cltd
cwtl
cmp
stc
jge
repz
cmp
mov
adc
insb
shll
pop
adc
call
outsl
mov
jge
push
sbb
dec
scas
xorl
mov
mov
pop
mov
fisubs
jmp
or
notb
cmp
ljmp
jmp
movsl
in
sti
cmp
dec
jge
pop
jg
stos
aas
jb
mov
mov
adc
mov
sarb
setg
ror
and
or
outsb
or
push
sti
xor
inc
push
jmp
jl
popa
dec
pop
cld
stos
dec
jge
test
mov
fwait
jle
push
orb
icebp
rolb
jbe
mov
loopne
jno
jns
in
test
xor
mov
enter
dec
jno
mov
sub
scas
pop
gs
in
xor
aaa
insb
cmp
andb
addb
xor
jle
push
lahf
pop
xor
lods
mov
xchg
pop
mov
sbb
sbb
jno
adc
jae
sti
sub
and
mov
xchg
adc
push
mov
cli
jo
push
pop
test
add
out
lock
fidivrl
push
out
xor
fcoms
mov
xor
and
mov
loope
cmp
stos
cmp
bound
bound
cmp
jno
loope
mov
pop
lods
jmp
sarb
jo
cmp
lahf
push
pushf
icebp
fcomps
mov
mov
mov
jge
cmp
jl
cmp
sti
jns
mov
sbbb
jnp
ja
repnz
mov
in
pop
adc
xchg
jb
js
pop
xchg
scas
adc
fbstp
mov
cmp
rcrl
push
adc
idiv
push
cmp
ss
sbb
out
outsl
lock
adc
icebp
push
jl
in
in
jl
inc
enter
sbb
jle
adc
or
and
pusha
jb
jns
jb
cli
outsl
mov
adc
cmp
push
sub
xor
inc
jb
cmp
int
fistpl
jo
pop
sbb
jno
jmp
in
inc
mov
icebp
int3
sub
mov
inc
cmc
lcall
scas
mov
cmp
std
filds
jle
push
push
cs
jo
fdivrl
inc
std
pop
mov
mov
xor
push
shrl
mov
xchg
ss
jle
fidivrl
jp
xor
fdivrs
mov
movsb
aas
mull
ds
nop
fistps
sub
cmp
sub
sbb
mov
or
lock
jno
inc
scas
sahf
pushf
adc
inc
sbb
push
hlt
jecxz
mov
popf
jle
sbb
pop
mov
fcoml
sbb
lea
and
or
lods
push
cmpl
cmp
jp
shrl
sti
cld
sub
clc
test
mov
cld
std
sbb
insb
mov
fildll
cmp
jg
jnp
xor
xchg
mov
cmp
pop
inc
sub
mov
stc
cmp
xlat
das
adc
cmp
aas
and
mov
and
adc
pop
dec
ret
jle
cmpb
fucomp
flds
fcomip
adc
xchg
mov
cmp
leave
pushf
flds
xor
mov
mov
dec
sub
sar
mov
sahf
fbld
stos
cmp
pushl
inc
cmpsl
shrb
adc
shlb
mov
sub
out
roll
xor
mov
sbbl
inc
dec
mov
jle
lahf
or
repnz
xor
mov
push
pop
dec
dec
mov
jmp
mov
pop
inc
push
in
jo
ss
ds
xchg
cmp
repnz
xchg
jb
xor
xchg
out
ss
fcom
cli
pop
cli
xchg
cmp
inc
pop
mov
mov
cltd
push
mov
adc
mov
dec
mov
cli
out
xchg
bnd
fsts
pop
movsl
in
hlt
xchg
push
cmp
cmp
and
push
xor
mov
jno
pop
js
adc
mov
mov
jb
mov
jp
adc
add
jb
xchg
sub
cmp
cs
jno
ss
popa
inc
mov
test
cs
xchg
dec
sub
xor
cmpb
repz
or
push
mov
mov
cmp
mov
push
push
adc
xchg
fstl
pop
cmp
aas
mov
cmp
pop
push
stos
mov
pop
sub
insb
lahf
std
sub
in
cmp
sbb
push
idivb
lock
pop
fisubs
ja
mov
push
icebp
xor
aas
mov
sbb
clc
push
outsb
inc
cmp
pop
fdivs
lcall
call
or
mov
jle
mov
leave
aad
mov
imul
xchg
pop
cmp
cld
repnz
data16
jae
push
inc
icebp
jle
jle
jle
rcll
sbb
cli
jge
in
shl
cwtl
lock
pop
js
mov
aaa
jb
fwait
stc
mov
cmpsb
sbb
cmp
or
xchg
lods
je
push
xor
movsb
sbb
out
pop
mov
push
add
cmp
cmp
mov
jne
jge
or
push
pop
negl
xchg
fcomps
or
loopne
iret
je
lahf
ja
mov
outsb
dec
out
stos
push
mov
out
lods
mov
shlb
xor
cmp
pop
jl
sti
lahf
sub
mov
cmp
lret
adc
mov
sti
xor
repz
mov
xor
sbb
pop
stc
movsl
xor
sahf
mov
mov
inc
push
push
mov
rclb
scas
adc
cmp
push
sahf
mov
cld
leave
mov
pop
fsubrs
imul
cld
clc
cld
mov
in
mov
outsb
in
sarb
pop
push
sarl
stc
js
mov
or
fcoml
negb
cmp
pop
div
movsl
adc
push
sbbb
inc
push
insb
aaa
fnstcw
sbb
xor
xor
cli
divl
sbb
cmp
pop
dec
popf
push
lods
jno
dec
repnz
pusha
cmc
mov
lahf
dec
fistpll
jge
and
rorb
cli
mov
sti
and
loopne
jbe
sub
pusha
daa
jle
fxch
mov
pusha
std
adc
sbb
lcall
mov
sbb
or
mov
jb
adc
sahf
adc
negl
loopne
cmp
jno
adc
rcrl
ds
nop
jo
out
mov
push
rcrl
jns
fnstenv
lods
mov
sbb
das
ds
scas
pop
xchg
push
std
mov
jns
aam
add
divb
push
cmp
icebp
lahf
sub
mov
sbb
aas
xor
push
sarb
cmp
adc
in
mov
mov
mov
push
pop
pop
insb
mov
std
fnstenv
sub
cmpsl
xor
sub
sti
mov
test
inc
js
loopne
inc
cmpsb
call
push
pop
mov
jmp
mov
push
mov
jle
pop
pusha
jl
mov
cltd
scas
sub
mov
inc
mov
ljmp
scas
mov
xor
xor
mov
push
xor
test
pop
fstpl
cmp
xor
aas
repnz
loopw
mov
insb
cltd
nop
adc
sbb
xor
jne
ds
cld
sub
and
shlb
xor
ret
mov
mov
insl
pop
mov
jo
jo
cmp
scas
xor
mov
scas
cmc
push
dec
and
les
add
jns
mov
jl
movsl
ds
jns
jge
dec
cmpsb
mov
ds
les
shl
sub
mov
cs
push
mov
js
je
sub
or
pop
mov
jp
fdivl
cmc
xchg
sub
jns
jl
jne
mov
xor
bound
lods
nop
mov
jbe
mov
aas
bnd
ss
cmp
xor
aaa
movb
negb
jbe
cmp
mov
mov
jns
sub
hlt
sub
adc
mov
les
aam
std
hlt
mov
test
ja
ds
jle
mov
jno
sub
and
outsb
xor
sub
ja
xor
adc
sub
cwtl
jns
out
mov
jae
mov
xor
jp
daa
jbe
mov
cmpsb
std
mov
mov
out
or
xor
mov
add
sub
sub
adc
fildll
scas
push
aas
xchg
xor
xchg
shll
sub
sbb
jb
aaa
fstl
icebp
push
js
aas
pop
add
and
pushf
lret
jno
push
add
mov
jp
mov
aad
mov
ds
clc
mov
scas
push
movsl
mov
mov
jbe
push
mov
mov
sbb
xchg
call
adc
xor
je
mov
leave
aam
add
xor
mov
cmp
insb
sub
fidivrs
sti
iret
push
and
mov
nop
ja
mov
mov
jle
xchg
sub
push
mov
mov
ficompl
daa
in
mov
jns
pop
jmp
mov
hlt
test
std
cli
adc
into
jo
mov
mov
ds
ss
add
mov
adc
mov
sbb
js
mov
adc
xor
fnstsw
cmp
push
mov
std
jne
scas
push
cmp
aad
push
fbld
mov
adc
and
jmp
rolb
into
xorl
add
jno
and
or
mov
or
inc
aas
inc
mov
ja
jno
pop
dec
add
sbb
push
and
pop
push
pop
mov
lret
repnz
ljmp
mov
mov
cld
mov
dec
cmp
rcrb
fwait
subb
jecxz
andb
xor
mov
or
gs
stos
jno
jb
add
icebp
bound
and
rolb
adcl
dec
add
mov
leave
mov
loop
adc
jecxz
pusha
cmp
add
mov
sbb
idivb
loop
mov
ret
dec
pop
cmp
popa
stos
and
add
xlat
inc
adc
push
popa
pop
mov
stc
lret
mov
push
cli
cmp
xorb
and
lret
hlt
ret
jae
repnz
pop
lret
sbb
pushf
mov
or
repnz
nop
xchg
dec
lret
xchg
mov
lods
test
loop
add
mov
ljmp
lret
in
mov
mov
xorb
pop
xor
mov
lds
sti
ds
sub
or
out
add
roll
mov
cmp
dec
aam
mov
jmp
mov
lret
loope
shr
and
jge
mov
mov
loope
mov
and
cwtl
in
mov
jno
mov
and
jb
mov
xchg
clc
push
adc
out
dec
lret
ud1
pop
or
sub
repnz
lret
mov
and
cli
cmpsl
xor
mov
js
cli
mov
push
std
push
in
lret
push
cwtl
and
jb
pop
cmp
shrb
loop
jb
popa
lret
clc
stc
inc
inc
mov
or
lods
mulb
xchg
and
push
pop
cwtl
jge
or
repnz
add
mov
and
mov
cmp
test
push
pop
add
add
and
pop
ret
fildll
add
shll
leave
cmp
mov
push
or
mov
mov
mov
xor
pop
test
dec
xor
clc
mov
mov
shlb
add
push
dec
mov
shrb
loop
add
mulb
cmp
outsb
pop
add
mov
add
stos
call
inc
mov
popf
and
sub
mov
stos
add
or
xor
cmc
mov
sub
mov
push
or
dec
add
cmp
rorl
repnz
sbb
lock
int
icebp
aaa
add
shrb
imul
cmpl
mov
inc
sub
pop
into
cmp
mov
pop
push
loope
out
sbb
mov
add
daa
adc
out
inc
cli
mov
roll
pop
sub
and
pushf
sbb
lret
or
mov
test
inc
jg
push
xor
dec
repz
inc
pop
lret
cmp
mov
clc
stos
adc
push
jbe
pop
inc
setb
arpl
pushf
sbb
pop
int
add
push
cmp
das
adc
mov
pop
ljmp
rcrb
fwait
push
out
addr16
jo
cmpsl
mov
mov
dec
cmp
mov
out
je
or
loop
mov
out
fstpt
fsubs
js
out
and
fiaddl
adc
iret
and
jb
shll
pop
aam
scas
mov
and
xchg
movsb
inc
push
adc
repnz
push
jge
int
call
mov
push
sahf
lret
repnz
stos
fucomp
push
and
mov
mov
cli
mov
push
repnz
dec
js
push
xchg
ds
leave
popa
cmc
pop
xchg
pushf
mov
sarb
icebp
and
xor
lcall
xor
loopne
xchg
movsb
mov
pop
push
imul
lahf
call
pop
push
pop
testb
mov
jmp
fisubrl
xorb
dec
mov
mov
mov
pop
mov
shll
mov
mov
pop
and
push
lock
or
pusha
push
sub
jb
pop
pusha
aam
jmp
mov
pop
and
mov
add
addb
out
lds
outsb
push
iret
pop
dec
cmp
dec
sbb
ja
andb
push
jb
loop
jne
leave
adc
mov
adc
sub
mov
js
push
cvtps2pi
or
dec
out
mov
mov
xchg
cmp
add
push
mov
out
xor
jne
frstor
mov
inc
sub
push
jo
ljmp
push
cmc
fnstsw
mov
adc
adc
js
aas
loop
jmp
cwtl
icebp
inc
jb
cmc
and
mov
rorl
xor
aad
mov
das
stos
leave
mov
cmp
or
xchg
nop
aad
jae
lahf
dec
testb
mov
and
mov
mov
adc
or
les
js
push
orb
dec
mov
jge
sbb
mov
jle
push
lcall
sbb
stc
inc
adc
dec
fidivrs
cmp
sub
dec
sbb
dec
jb,pn
or
xor
loop
repnz
aaa
js
adc
clc
movsb
cld
or
das
lret
fldl
xchg
mov
enter
mov
pop
or
stc
dec
cmp
pop
ljmp
sti
xchg
mov
nop
mov
loop
lcall
cwtl
jb
pop
ljmp
test
sbb
xchg
pop
sub
mov
mov
jno
inc
mov
mov
pop
mov
and
ss
inc
shlb
pop
push
sbb
cmp
lret
mov
adc
jae
fidivrl
fisubl
jle
imul
xchg
pop
xchg
icebp
fstpl
in
cmpsb
mov
rorl
popa
xchg
lock
xchg
or
mov
fnstenv
imul
es
jge
rorl
mov
in
fstpl
push
dec
jo
jno
popf
int
mov
pop
stos
mov
adc
sarl
add
or
jno
popa
mov
sbb
movsl
jo
mov
adc
dec
xchg
int
pop
pop
jle
rcrb
insb
icebp
je
cmp
and
and
repnz
sti
jb
sub
push
xchg
sarb
mov
inc
jb
call
and
mov
mov
clc
jnp
adc
test
and
jge
mov
or
stos
sbb
es
test
lret
mov
xchg
sahf
popa
dec
lea
cmp
adc
pop
mov
mov
dec
roll
rcrl
and
std
mov
dec
jmp
and
sbb
adc
or
lods
fdivs
dec
xlat
in
popa
mov
imul
dec
mov
xor
mov
jle
out
in
dec
mov
fidivrs
and
nop
mov
lock
loopne
bound
add
pop
mov
and
pop
xlat
lods
cmp
adc
fnstsw
jne
loop
push
and
cmp
xchg
call
cmp
push
clc
cmp
push
aad
ret
mov
or
stos
or
sbb
xchg
popa
adc
cli
fnstsw
loopne
pusha
loope
loopne
cmp
ret
stc
dec
adc
stc
outsb
fmul
dec
mov
call
shlb
adc
adcb
pop
stc
ffreep
ljmp
divb
xchg
mov
mov
ja
pop
jno
sub
cmp
mov
mov
lods
bound
pop
into
out
fwait
div
or
cmp
inc
cli
cmp
adc
dec
push
xor
xchg
add
cmp
je
sub
push
dec
ret
xchg
fadd
pop
aaa
daa
mov
mov
mov
jbe
dec
add
mov
popa
push
pop
jmp
sbb
imul
daa
loop
xlat
jo
mov
sbb
cmp
test
mov
pop
mov
sbb
dec
in
addb
fsubs
cmpsb
mov
lret
pushf
cmpsb
mov
jb
adc
xchg
stos
loop
jle
sub
jnp
mov
scas
ds
and
psadbw
cmp
mov
adc
cmovg
jns
mov
arpl
inc
adc
leave
add
mov
push
pop
mov
stos
icebp
popa
pop
fcomps
cmp
bound
arpl
sbb
pop
jae
nop
mov
pop
adcl
jbe
mov
cmp
ret
loop
add
sbb
push
pop
adc
fisubl
dec
lahf
sbb
pop
or
lea
pop
into
pop
std
ljmp
stos
mov
psadbw
mov
ljmp
sbb
cmp
leave
jecxz
xchg
lea
xor
xor
xchg
out
aaa
pop
fnstsw
hlt
fwait
lock
imul
cmpsl
xchg
jb
loop
rcr
lahf
pop
sub
xor
sbb
mov
mov
addr16
push
mov
repnz
push
loop
xchg
add
loop
sbb
in
sub
adc
rolb
add
pusha
xlat
subb
mov
push
mov
mov
mov
pop
sub
cli
js
adc
cmpsb
mov
fidivs
xchg
stos
fadd
rorl
loopne
mov
leave
mov
leave
jns
inc
lret
cwtl
aad
inc
push
push
mov
stos
sbb
and
call
mov
sbb
pop
dec
cmpsl
cmpb
mov
fstps
shrb
xor
add
mov
mov
cmp
push
or
dec
adc
mov
xchg
add
cmp
jl
and
mov
mov
shl
inc
orb
sbbb
and
movsb
push
movsb
mov
push
dec
movsb
daa
or
mov
aad
or
dec
mov
or
cmp
sub
xor
cmp
dec
and
fsts
arpl
dec
lea
dec
and
push
inc
addr16
xor
sub
je
and
out
inc
cmp
push
add
ljmp
or
dec
adc
and
xchg
outsl
dec
into
lcall
dec
pop
into
lret
pop
into
sub
sub
pop
in
jnp
pop
into
cli
pop
and
mov
xor
mov
movsl
lret
and
and
ret
add
jae
cli
push
mov
cli
mov
jnp
dec
jno
adc
pop
or
mov
cmp
dec
sub
aaa
add
push
or
xor
je
mov
es
scas
and
cmp
sub
mov
mov
or
adc
pop
mov
and
add
inc
inc
mov
pop
popa
jle
jae
push
xor
in
pop
sbb
xor
daa
mov
inc
fdivs
cmp
mov
dec
xor
dec
mov
scas
mov
xchg
inc
mov
and
jae
aaa
ret
repnz
cmp
add
or
push
dec
das
jle
inc
or
xor
sbb
fldenv
and
sub
mov
ds
xor
ret
scas
jno
ss
cmp
sub
cmp
lcall
mov
xor
xor
dec
iret
lods
loope
and
push
cmc
mov
idiv
dec
push
xor
and
sub
imul
push
fdivrl
xor
lcall
dec
in
xlat
lcall
mov
icebp
pop
ret
test
xor
lret
lret
cmp
adcb
stos
daa
push
and
dec
scas
xor
dec
push
pop
jp
mov
pop
ficompl
adc
adc
aaa
and
mov
sub
cmp
pop
jae
daa
ret
pop
inc
xchg
xchg
dec
xor
xor
inc
sub
jns
clc
sub
and
xor
inc
jbe
push
xor
cld
sahf
fldcw
xor
aad
sub
shlb
fwait
jae
insl
xor
daa
dec
jb
fisubrl
pop
fucomi
xor
dec
sahf
pop
inc
xor
mov
mov
repnz
sub
xor
and
xor
dec
and
add
ljmp
clc
mov
lock
xor
add
or
jne
jne
push
js
arpl
add
xor
inc
add
sub
xor
and
imul
fimull
loopne
daa
popa
sub
xor
fisubl
cmp
sti
pop
xchg
sbb
inc
xchg
push
shlb
or
xchg
jae
je
repnz
stc
pop
push
sbb
cmp
pop
xor
aaa
dec
dec
dec
dec
and
add
repz
int3
adc
mov
jae
hlt
cmp
inc
pop
mov
add
mov
enter
mov
add
sub
and
out
xor
push
jno
cs
dec
cld
jno
pusha
cld
mov
es
cmpsb
jg
hlt
mov
loope
jns
add
lds
mov
popa
push
xor
mov
mov
cmpsl
xor
sbb
aas
add
mov
les
mov
out
shll
add
lock
mov
aam
cli
mov
mov
add
adc
daa
subl
mov
inc
cmpsb
js
adc
cmp
and
sub
xchg
mov
mov
adc
or
leave
ss
stos
xor
out
fnsave
sub
in
aad
jns
out
or
push
jp
ds
dec
enter
mov
push
mov
loopne
in
lds
or
xor
mov
add
iret
and
in
and
cmc
ja
cmp
lds
bound
cld
add
or
mov
and
jae
pusha
lods
mov
scas
ss
cmpsl
xor
add
adc
stos
mov
mov
incl
repnz
add
fisubrl
xor
stos
jb
bswap
lock
es
jbe
mov
aas
jb
aas
jmp
into
inc
add
test
jns
sahf
or
in
add
jnp
jo
hlt
cli
or
mov
mov
and
bnd
lea
mov
jg
stc
cltd
mov
mov
sub
cli
into
add
lret
add
mov
cli
fisttpl
dec
mov
clc
push
inc
sub
add
mov
js
mov
ja
jo
xor
xor
scas
xchg
sbb
cld
push
das
inc
data16
jae
xor
ds
aas
into
int3
push
test
out
into
cmp
int
repnz
or
sbb
aam
scas
sub
mov
dec
mov
add
scas
push
aas
cmc
test
xor
leave
mov
jl
xor
subb
pop
add
jb
andb
pxor
xor
mov
push
jns
or
int3
cmp
aas
push
mov
pop
ds
mov
lea
neg
popa
daa
int
mov
popf
lea
sbb
xlat
aaa
xor
mov
dec
push
ficoms
das
icebp
sub
pop
sahf
jb
dec
imul
mov
clc
mov
scas
shll
mov
jno
mov
rcrb
mov
rcrl
add
negb
out
rclb
call
aas
dec
mov
das
xor
iret
add
popa
ja
xor
repnz
cwtl
jge
pusha
les
mov
nop
loope
jp
jo
pusha
hlt
aam
inc
loop
test
jle
and
lock
xbegin
push
scas
inc
scas
shll
lret
push
popf
lea
cmp
bound
inc
xor
add
scas
loope
cmpsb
rol
xor
scas
xorb
xchg
mov
pop
xor
adc
pop
mov
sbb
scas
jb
pop
jp
inc
movb
aaa
leave
pusha
inc
or
push
rolb
dec
jae
mov
dec
add
insl
xor
dec
inc
aam
dec
popa
mov
fwait
mov
mov
imul
cltd
mov
inc
push
mov
push
rorb
hlt
push
and
outsl
or
mov
les
push
ds
add
jg
jp
xor
pop
jge
sbb
loope
sub
sub
lret
in
mov
xchg
cmp
int3
test
xchg
add
icebp
jp
idivb
int
add
jp
clc
lds
fsubs
fcoml
cmpsl
cmpsb
and
mov
fcomi
mov
call
std
inc
js
fnstenv
testb
mov
and
mov
adc
dec
lock
mov
inc
sub
jge
jge
pop
into
sti
mov
push
mov
movsl
jge
xchg
and
jl
adc
xchg
mov
jl
mov
jge
inc
jp
adc
mov
scas
insb
jge
add
pop
or
cmp
xchg
and
mov
xchg
mov
jl
jge
mov
mov
mov
push
jle
inc
fdivr
push
xor
mov
cli
xchg
add
in
sbb
loope
jl
insl
testb
cmp
hlt
and
scas
ret
jno
pop
into
push
mov
cmp
xor
loope
hlt
sarl
rcr
into
mov
mov
fdivrs
notb
xchg
mov
negl
inc
sbb
mov
fistpl
popf
add
jno
ss
sti
mov
mov
mov
sahf
testb
icebp
push
hlt
sbb
test
outsl
xor
mov
std
out
mov
test
adc
fdivrs
notb
cmpsl
mov
shl
push
sub
insl
jge
fwait
sti
cmp
hlt
jno
xor
push
jl
inc
add
loop
sar
ss
lock
hlt
push
sbb
scas
mov
popf
enter
jnp
icebp
push
and
and
add
inc
xor
add
pusha
test
fstl
mov
fld
andb
and
rclb
or
fbstp
outsb
xor
inc
adc
repnz
daa
cmpsb
movsl
pop
mov
adcl
dec
adc
lock
mov
jb
mov
or
and
clc
jg
mov
jb
loopne
pop
mov
push
mov
mov
or
or
std
push
jb
inc
loope
mov
test
rcrl
bound
and
add
in
and
inc
call
push
idivl
cli
adc
mov
notl
mov
adc
es
hlt
ja
adc
enter
daa
mov
inc
and
fdivrs
ss
push
stc
xor
or
push
nop
mov
call
mov
mov
push
mov
mov
xchg
cmp
adc
and
aaa
inc
stc
cmp
aaa
nop
jg
emms
cmp
sub
and
jge
notb
lds
je
out
mov
pusha
data16
mov
pop
frstor
mov
cmp
bnd
call
cmp
test
mov
inc
mov
cmp
push
and
mov
push
and
aas
aaa
imul
notb
mov
aas
aas
xor
iret
add
mov
inc
scas
divl
mov
shl
repnz
les
add
push
ss
and
jle
sbb
and
orl
jbe
mov
mov
add
repnz
je
mov
mov
test
ja
mov
insb
inc
scas
mov
pop
push
mov
or
xor
mov
arpl
hlt
jecxz
mov
ja
cmp
das
mov
pop
cli
add
repnz
jmp
enter
cmp
push
shll
adc
in
mov
or
cmp
xchg
dec
fidivrl
jae
idivb
jmp
push
aaa
add
adc
dec
data16
xor
das
cli
cmpsb
add
jb
xor
push
lds
aas
pop
outsb
inc
loop
xchg
ret
mov
cmp
mov
js
push
cmp
inc
push
jbe
dec
xor
and
inc
mov
xor
or
xor
push
loop
mov
mov
movsl
jge
and
vmovlpd
out
ds
inc
jno
sbb
fistpll
xor
jge
test
cmp
mov
int3
push
push
ljmp
sbb
push
ret
adc
mov
popf
or
imulb
hlt
lahf
imul
mov
sub
idivl
and
cmp
adc
and
mov
aas
es
fidivl
gs
mov
and
ss
shl
sbb
xor
push
cmp
fwait
mov
mov
out
mov
out
pushf
lock
divl
repz
add
push
xchg
adc
jle
mov
clc
adc
push
test
add
jne
and
mov
inc
xor
out
cmp
test
out
xor
shll
mov
inc
js
push
xor
adc
div
clc
cmp
jp
idivb
cmc
in
sub
mov
mulb
dec
sub
jns
lods
pop
mov
emms
outsb
stos
adc
lds
outsb
mov
sub
sti
cmp
ret
test
jbe
mov
shl
add
movsl
insb
mov
addr16
test
xor
out
jnp
stos
fstl
repnz
outsb
into
mov
add
mov
xchg
cmp
mov
mov
jl
ss
jle
cmp
aad
cmp
ss
jg
stos
gs
xor
xchg
sbb
cmp
sub
call
loopne
mov
sub
sbb
xchg
mov
shl
lds
mov
adc
xchg
aaa
stc
lds
sub
mov
sub
sub
lret
icebp
and
push
sub
jne
popa
ss
mov
dec
stos
push
adc
cmp
cld
xor
sti
nop
data16
jbe
stos
jbe
mov
mov
cs
xor
xchg
cmp
in
pop
shll
cmp
xchg
jno
fst
xchg
jae
push
div
jbe
or
outsl
stos
lds
fwait
std
jb
pop
ja
mov
mov
in
scas
mov
aad
xor
adc
sub
cld
push
fcoml
push
push
mov
pop
mov
add
es
incb
ds
pushl
jnp
sub
adc
imulb
mov
pop
cli
xchg
outsl
inc
jae
mov
add
add
jno
mov
mov
pop
mov
sub
gs
mov
and
lret
jne
push
and
xor
cmp
scas
push
jbe
sbb
fcos
adc
mov
xchg
sub
fdivrs
mov
scas
jge
daa
sub
push
icebp
test
cmc
mov
jl
test
out
ja
jb
stos
stc
lahf
cmp
lret
mov
pushl
jo
stc
cli
jb
ss
adc
ret
jge,pt
fs
out
mov
add
jnp
xchg
mov
jg
rclb
flds
jnp
imul
jae
pop
xor
popf
lods
jge
mov
out
sbb
pusha
adc
aaa
mov
add
cmp
xor
loop
ds
jb
jae
add
pop
fstpt
pop
jmp
ss
push
jb,pt
jbe
mov
aaa
mov
mulb
mov
shrb
ss
icebp
or
xor
jo
fildll
pop
fwait
call
mov
sbb
test
js
jno
xorb
adc
aad
xor
mov
rol
bnd
movsl
and
jle
ds
mov
xor
sbb
mov
hlt
and
jb
sti
xor
mov
mov
adc
repz
mov
and
cmc
mov
sub
jns
ja
insl
and
jo
adc
lock
dec
cmpsb
and
xchg
cmp
mov
jne
mov
loop
push
jg
ss
mov
pop
mov
adc
mov
lea
jne
cs
cmp
add
xchg
pushl
outsb
pop
mov
push
loop
add
sbb
mov
push
mov
lods
dec
adc
push
jb
mov
mov
stos
out
xor
push
sbb
sbb
clc
jo
lcall
sub
outsb
mov
and
adc
jle
mov
inc
cld
mov
fnstenv
push
mov
xchg
jmp
out
and
ja
ja
lds
jg
jmp
orl
je
mov
mov
lock
divl
mov
insl
data16
xchg
idivl
clc
jns
repnz
je
int3
mov
and
push
inc
loopne
out
cmp
add
scas
xor
stc
cmp
jp
bnd
loope
jp
es
clc
mov
lock
ds
fsin
mov
jo
xor
jne
mov
jb
cmp
jg
icebp
push
ljmp
js
ss
push
in
xorb
ss
out
sti
in
cmpsb
aaa
mov
scas
in
cmpsb
cmp
and
xor
mov
mov
jne
jbe
lock
push
adc
cmc
mov
imul
push
cmp
push
aad
scas
hlt
adc
jae
xor
int
cmc
mov
push
js
push
jbe
mov
mov
sbb
mov
mov
and
inc
mov
sub
sub
aam
mov
mov
pop
adc
cmp
sub
sahf
in
xor
mov
jne
js
ja
jo
push
jp
lock
ja
sub
sbb
mov
mov
sahf
lods
clc
cmpsb
and
xchg
push
cld
jle
mov
aad
fnstenv
add
mov
dec
adc
and
clc
push
out
xchg
xor
lcall
inc
push
xor
test
ds
mov
sbb
outsb
enter
stos
pop
jge
sarl
jb
mov
cs
adc
ss
mov
nop
xor
mov
push
std
bnd
cmp
cs
sahf
in
cmp
lods
push
cmp
cmp
mov
mov
je
mov
sub
notb
fldenv
pop
inc
jo
sub
xor
jns
xchg
aas
mov
aaa
sub
mov
xor
imull
std
cld
lcall
xor
add
mov
jl
loopne
push
lret
inc
inc
call
lock
xor
ss
mov
mov
lock
outsb
fsubl
scas
or
xchg
loopne
sub
push
xchg
jl
ljmp
and
testl
data16
stos
aam
jns
or
test
cmc
sub
pusha
mov
and
scas
ss
mov
ret
icebp
gs
adc
outsb
je
jo
jl
stos
mov
jb
lods
clc
mov
mov
lock
stc
cltd
sub
aas
insl
cmpb
stos
icebp
lea
cmpl
movsl
outsb
mov
sbb
jno
cmp
dec
push
jo
push
scas
cmp
mov
std
pop
aaa
fcomps
sti
pop
mov
mov
sbb
jae
lret
add
jle
mov
fidivrs
jbe
out
sbbl
mov
mov
add
jnp
mov
mov
loopne
xor
loopne
jl
add
bound
test
rcl
add
sti
mov
pop
repnz
fists
cmp
add
call
gs
js
sbb
bnd
icebp
out
das
jb
int
sbb
lock
adc
repnz
mov
xor
adc
jge
test
enter
sub
stos
dec
adc
into
loop
enter
stos
adc
lret
adc
push
mov
adc
scas
pusha
adc
lock
sti
push
in
mov
insl
cmpb
cltd
xchg
pop
mov
pop
ja
pop
adc
cmp
mov
aaa
data16
scas
mov
xor
leave
clc
jle
js
lock
cmp
jo
push
xor
and
cmp
cmp
lock
sarl
adc
repnz
ds
mov
sahf
loop
cld
sub
dec
mov
jl
aaa
mov
ljmp
repnz
repnz
ss
dec
push
mov
cld
stc
mov
pop
rclb
jns
mov
pop
repnz
pop
std
test
cmp
jne
jp
icebp
jnp
lds
mov
pop
es
jg
mov
sti
mov
lock
cmp
test
movsl
mov
fwait
sti
clc
xchg
mov
ja
add
icebp
pop
add
jns
mov
ja
test
lds
jns
sub
in
xchg
jp
repnz
cmp
pushf
addl
xor
aaa
ret
mov
xor
mov
adc
int3
sub
xlat
icebp
xlat
mov
addr16
clc
sbb
fnstenv
push
dec
mov
mov
clc
cmp
addr16
sub
xor
sub
xchg
cmp
btcl
mov
jns
aas
mov
js
test
sahf
mov
mov
mov
mov
mov
mov
fsin
mov
mull
repnz
lock
ss
mov
mov
scas
cli
fwait
and
in
je
add
xchg
lret
fists
es
daa
mov
pusha
mov
das
pop
stc
notl
xchg
mov
push
lock
sti
call
vpminsw
xchg
mov
mov
add
mov
mov
fistpll
adc
rclb
lock
xor
jge
fisttpl
cli
mov
ds
mov
icebp
push
mov
cmp
loopne
cmp
leave
outsb
jbe
pusha
stc
shlb
push
lods
and
or
lods
bnd
and
xchg
insl
jnp
and
xor
bnd
ja
pop
stos
fists
mov
sub
mov
ret
cld
testl
push
sti
mov
sub
mov
fstpt
popa
mov
cld
test
adc
cmc
inc
push
xor
fnstenv
lods
and
shlb
mov
or
mov
jo
jbe
loopne
lds
cmp
into
testl
sub
dec
mov
test
jbe
jne
shl
jg
lret
push
xor
mov
lret
adc
cmc
xlat
sbb
arpl
in
ss
aad
dec
jne
adc
lret
sbb
lods
aas
loop
cli
mov
lds
sti
push
mov
mov
divb
repnz
subb
scas
push
lret
aas
mov
jb
add
ret
into
mov
cmp
sbbb
xchg
jnp
push
adc
jnp
xor
stos
mov
cmp
lods
data16
mov
sbb
stc
xor
and
add
jbe
aaa
xchg
adc
jg
clc
mov
cmpsb
adc
adc
xor
fnstcw
aam
stc
push
xchg
sbb
push
lret
ret
xor
mov
fprem
shrl
mov
lock
mov
xchg
fwait
mov
pushf
mov
jl
sarb
mov
xchg
dec
and
js
fwait
mov
pop
jp
xor
loopne
mov
dec
cmpsb
mov
aas
sti
data16
cmp
mov
pop
mov
das
cli
xor
xchg
inc
imul
std
cmp
cmp
dec
mov
clc
cmp
movsb
ja
mov
insl
push
mov
movsl
mov
cmc
jnp
aas
xor
mov
mov
jp
adc
dec
mov
push
dec
mov
push
mov
push
xchg
js
cmp
sbb
mov
sub
mov
insb
lock
out
shlb
mov
testl
mov
jnp
or
ljmp
dec
sbb
aad
notl
push
shll
jle
outsb
mov
jne
jo
jno
popf
sahf
test
lahf
cmp
aaa
mov
mov
jb
xor
sub
jno
dec
inc
jns
adc
sbb
push
jg
push
mov
pusha
repnz
sub
xchg
ds
cmp
push
aas
lods
loop
mov
mov
pop
stos
sti
xor
jne
std
mov
in
enter
mov
and
mov
mov
sarl
push
mov
inc
mov
call
lcall
cmp
push
xor
mov
jae
push
lock
cmpsb
repnz
lahf
cmc
mov
xor
lock
adc
jmp
adc
xor
cli
in
xchg
push
and
mul
cmc
lret
js
mov
mov
mov
int3
out
adc
mov
pop
mov
push
scas
pop
mov
and
jnp
cmpsb
pop
jnp
mov
mov
les
add
shl
aam
sub
mov
xchg
xor
xor
fidivs
cmp
mov
jg
mov
inc
add
movsb
ret
les
push
mov
mov
inc
add
dec
mov
xchg
and
xor
mov
mov
cs
mov
fsubrl
mov
outsl
inc
push
insb
xor
aam
pop
arpl
icebp
and
pop
shll
mov
push
xor
mov
jb
xor
push
arpl
pop
pop
dec
mov
xor
pop
inc
push
adcl
add
hlt
dec
mov
sbb
and
mov
inc
clc
mov
jmp
jl
adc
clc
mov
add
orl
hlt
adc
mov
nop
cmpsb
mov
mov
ljmp
cld
cwtl
aad
std
inc
shl
jne
mov
mov
stos
aad
dec
adc
and
adc
repz
cmp
ss
sbb
cmp
out
fnsave
ja
sub
cwtl
pop
jg
arpl
shll
stc
mov
mov
and
ljmp
cmp
js
mov
push
pop
cmp
adc
adcb
fistpl
cmp
aas
mov
mov
mov
jae
scas
adc
dec
mov
xchg
mov
jbe
pushf
jns
cld
sahf
aaa
or
adc
les
aaa
dec
nop
adc
cmp
mov
or
daa
sarb
mov
and
imul
inc
popf
cmp
mov
dec
mov
dec
out
mov
mov
xor
xor
icebp
call
inc
jmp
mov
out
data16
stc
jle
in
and
jne
pop
cmp
cmc
pop
jge
cmp
cld
les
stos
jge
shll
lcall
jge
fscale
mov
xor
xor
sub
stos
mov
popf
or
cmc
ljmp
mov
jb
and
cmp
cmp
test
nop
xor
lahf
mov
xor
mov
in
cmc
xor
loopne
mov
scas
movsl
mov
dec
daa
mov
push
mov
es
jnp
inc
sub
mov
popf
loop
jp
xor
sub
out
mov
cmp
adc
xchg
xor
xor
mov
lods
xchg
rolb
jle
cmp
xor
mov
mov
mov
cmp
stc
adc
lock
cli
mov
testb
out
gs
js
jnp
mov
in
or
inc
ret
mov
mov
es
mov
inc
adc
mov
enter
push
mov
mov
cmp
cmp
stc
or
stos
jne
inc
mov
aad
clc
pop
push
stos
lods
mov
aaa
jmp
mov
xor
mov
cmp
shr
jecxz
mov
mov
mov
jle
aaa
and
test
push
mov
cld
xor
sbb
adc
jbe
mov
js
sub
mov
cmp
cmp
cmp
leave
and
mov
aas
inc
dec
jne
add
push
mov
sahf
xor
mov
mov
sbb
mov
and
lcall
xchg
cmp
lea
sbb
mov
fidivl
loopne
mov
xor
mov
call
and
xor
lds
cmc
xor
sub
pop
mov
add
mov
or
enter
add
lock
mov
cli
negb
ja
iret
pop
aaa
out
rclb
mov
cmp
jbe
repnz
or
es
pusha
orb
cmp
xchg
es
mov
icebp
inc
stc
mov
clc
xor
mov
ja
scas
repnz
jno
ja
scas
pushl
ss
mov
in
mov
xchg
js
outsb
mov
mov
xor
test
jb
jbe
movsb
inc
dec
cli
negl
mov
adc
push
jbe
idivb
mov
cmp
adc
popf
cmp
mov
scas
mov
mov
rcrb
push
mov
pusha
jbe
out
cmpsb
std
push
mov
adc
mov
cmp
movsl
bound
sbb
xchg
mov
xor
jo
sub
aad
adc
mov
pusha
aam
sub
lods
sarl
mov
mov
add
xor
int3
sahf
mov
jbe
xchg
xor
in
scas
std
push
or
fwait
xrelease
sbb
in
and
add
out
inc
push
mov
icebp
xor
test
cli
sbb
dec
mov
mov
xor
mov
fnstsw
xor
cmpsb
mov
pop
mov
and
xor
mov
lods
mov
mov
daa
cld
sub
call
mov
mov
fwait
lea
cmc
adc
stos
mov
mov
mov
test
mov
jmp
loopne
pop
adc
cmpsb
scas
pop
jnp
and
aaa
movsl
and
xchg
clc
mov
adc
sub
lock
movsl
mov
inc
mov
and
testb
sub
sub
xor
loop
and
lcall
in
idivb
jp
lods
outsl
jns
pop
js
cmpsb
jnp
push
and
mov
push
cmp
scas
lock
cmp
mov
sbb
mov
xor
push
adc
lods
push
mov
es
push
aaa
ror
ss
lea
push
cmp
lcall
sbb
mov
pop
xchg
mov
ja
pop
lods
aas
cmp
adc
int3
sar
stos
mov
in
ds
es
rol
mov
hlt
mov
mov
mov
in
sub
cmp
mov
incl
cmp
jne
and
adc
xchg
ds
jae
fisubrl
ja
jl
jne
rol
push
mov
cmp
mov
sbb
sarb
mov
mov
jne
cmpsb
in
mov
push
push
int
mov
mov
push
pop
std
adc
mov
push
daa
jns
adc
adc
bnd
in
ljmp
fnstcw
sbb
test
and
aas
out
jle
fbstp
jge
jno
cld
xor
ds
xor
xchg
push
mov
ss
cwtl
mov
test
repz
cmp
rcl
xchg
aas
cltd
cmp
jl
mov
shrl
jnp
shlb
loopne
fs
cmp
cmp
jb
ljmp
dec
cli
aaa
shlb
mov
lods
fs
jnp
pop
jno
cmp
imull
ss
bound
insb
cmp
cmp
es
rolb
mov
push
jl
test
scas
std
loopne
idivl
mov
mov
ja
cmp
lock
xor
and
xchg
sahf
cli
xchg
mull
cmpsb
aas
or
icebp
jmp
rcll
sub
lods
add
dec
lock
mov
cmp
mov
xor
xor
scas
repnz
fwait
adc
lds
sahf
sbb
es
xor
adc
sarb
adc
sub
xor
ss
insl
lock
cli
jg
stc
aas
cwtl
scas
mov
mov
cmp
testl
sti
jns
in
and
jg
jno
cld
into
push
add
xchg
mov
or
add
stos
xor
jo
mov
mov
mov
mov
mov
or
xor
imul
mov
mov
push
cmp
stc
sti
fs
adc
stc
jo
xor
mov
sar
icebp
in
repz
mov
mov
pop
into
jne
xchg
mov
and
mov
jle
mov
cmp
push
push
xchg
xor
dec
or
dec
sarb
pushf
pop
in
jne
shrb
mov
mov
dec
xor
mov
cmp
pop
ja
xchg
mov
int
mov
jecxz
icebp
mov
mov
mov
icebp
test
jge,pt
sub
push
mov
mov
push
push
xchg
out
je
mov
test
in
cmp
mov
mov
leave
add
jae
jae
mull
dec
mov
jne
loopne
data16
cmpsb
jae
sti
repnz
inc
jo
mov
jge
jnp
inc
mov
inc
mov
ja
adc
jae
inc
add
sbb
xor
rclb
shlb
or
mov
jge
xorb
dec
in
jle
sahf
and
dec
sub
add
aas
in
mov
cmp
sub
dec
cld
cmc
in
and
cld
xor
loope
cli
push
add
fnstenv
test
cmc
add
mov
scas
ljmp
mov
in
cmp
vandnps
cmp
xor
cmp
dec
into
xor
push
out
cmp
loope
sbb
mov
loopne
inc
shl
fwait
movsb
or
mov
in
dec
and
jnp
sahf
mov
xchg
push
cmp
xor
xor
lea
popf
jb
sti
mov
imul
dec
pop
std
lock
adc
mov
mov
out
dec
and
xor
sub
mov
rolb
cmp
cmp
jo
mov
bound
scas
stos
push
adc
loopne
outsb
xor
es
mov
mov
push
repnz
adc
adc
jle
lret
xchg
cmp
es
jge
sbb
mov
shll
add
and
and
repnz
sub
mulb
test
call
cli
cmp
xchg
cmpsl
out
clc
mov
mov
into
cmp
loope
xchg
inc
jae
jge
cli
pop
scas
cmp
sbb
ds
inc
div
or
jbe
in
mov
xchg
mov
mov
inc
shrb
mov
movsl
js
dec
insl
cmp
fsubrl
aaa
sub
es
fwait
popf
ja
lret
sbb
mov
mov
test
push
int
in
jle
call
loopne
xor
aam
pop
sarb
and
ret
jb
mov
test
imul
cmp
or
fnstenv
add
push
je
clc
jnp
sbb
mov
icebp
xor
sti
sub
cli
fidivrs
std
out
mov
and
ja
cs
mov
jae
adc
lcall
mov
mov
lock
jle
data16
dec
add
pusha
call
mov
dec
adc
nop
or
mov
add
loop
add
adc
daa
adc
bound
xchg
or
pop
andl
adc
xchg
jns
sarb
mov
fstl
inc
and
das
aad
pxor
fisubl
jbe
jnp
jo
pop
rclb
sbb
mov
out
les
out
testb
clc
and
adc
cmp
inc
clc
pusha
into
loop
iret
or
xor
and
xor
adc
call
mov
push
adc
and
div
jle
or
mov
pop
pusha
aas
out
and
loop
pushl
jb
cmp
and
lock
scas
inc
mov
ret
jge
inc
and
lods
fcompl
jle
ret
inc
shl
loop
rclb
sbb
pushf
icebp
mov
mov
jns
incb
push
jb
and
lods
inc
movsb
pop
data16
mov
adc
xor
mov
xor
mov
xchg
cmp
packssdw
imul
xor
rcrb
xor
mov
and
adc
jb
push
pop
imul
add
fwait
push
inc
mov
push
dec
xchg
incb
push
jecxz
out
stos
adc
mov
jle
sbb
adc
cmovl
xchg
push
mov
in
cmp
xor
adc
add
adcb
push
imul
push
inc
lret
rorb
and
mov
bound
pop
push
pop
xor
icebp
mov
stc
loop
jb
pop
cmc
das
pop
pop
mov
das
add
and
into
clc
push
addr16
inc
gs
test
cld
out
inc
int
mov
add
loop
mov
xchg
jmp
outsl
fs
or
add
and
adc
xchg
das
xor
sub
adc
xor
sub
sub
add
loope
push
daa
sbb
xor
ret
push
xor
and
or
sbb
shlb
decb
std
cld
out
pop
or
xor
rcll
adc
cli
pop
push
jmp
add
shlb
clc
ljmp
repz
jecxz
xor
fcmovnu
xlat
aad
aam
iret
into
int
lret
lret
enter
hlt
pushf
pop
add
in
out
xor
and
adc
repnz
adc
loop
sub
icebp
mov
and
es
lock
sub
jmp
sarb
sub
shl
out
pop
push
ljmp
in
adc
out
mov
push
nop
add
sbb
sbb
leave
xor
movsb
mov
dec
pop
lds
push
xor
xor
in
clc
jecxz
dec
js
mov
cltd
jns
test
aad
and
fwait
pop
mov
insb
push
mov
jno
dec
push
aaa
inc
ret
lea
inc
xor
adc
cld
pop
jae
xor
call
push
sbb
in
movsb
xor
sub
shrl
out
clc
iret
mov
xor
outsl
dec
dec
rcrb
out
xor
sbb
rolb
pop
fadds
and
xor
lods
push
int
jo
jb
adc
cmp
add
cmp
repz
mov
xchg
lock
dec
sub
int3
jno
push
rorb
into
mov
push
jnp
insl
sarl
xchg
addr16
aam
add
dec
xchg
jb
mov
xchg
call
pushl
pop
mov
in
mov
xor
fidivrl
adc
fdivr
int3
mov
push
mov
arpl
or
int
xchg
mov
xor
inc
lea
shlb
je
or
dec
jmp
ret
data16
ds
or
xor
and
mov
push
or
jne
arpl
scas
inc
pop
xor
mov
mov
xor
aas
push
dec
or
insl
cli
leave
iret
lds
xor
jmp
pop
and
cmpsl
js
pop
inc
fnsave
dec
inc
fwait
xor
addr16
ret
or
xor
in
testl
shl
aas
mov
cmp
jle
xor
and
mov
ret
pop
outsl
in
lret
sbb
bound
mov
mov
or
iret
lods
pusha
arpl
xchg
xor
xor
mov
xchg
cpuid
sbb
es
push
jnp
sub
xor
dec
push
fidivs
jg
pop
sbb
add
ss
or
jge
clc
das
xor
aaa
enter
push
loop
bound
jg
xor
fsubl
popa
iret
fs
add
out
lahf
ja
mov
shlb
and
into
fisttpll
mov
xor
cli
ja
mov
xor
leave
cmpsl
inc
or
push
push
xor
sahf
pop
dec
xchg
jge
xchg
and
testb
xor
pop
popf
add
jb
push
daa
cld
xor
jae
insb
int3
fadds
lds
outsl
push
ret
and
fldt
sbb
movsl
jno
sarb
xor
sub
test
ret
es
cmp
dec
aad
xor
inc
xrelease
cmp
imul
ret
fs
pop
out
mov
push
cwtl
mov
cmp
rcl
pop
ljmp
sub
xor
in
add
iret
and
mov
inc
mov
loopne
mov
xor
imul
dec
xchg
mov
sbb
and
mov
imul
mov
sbb
push
iret
mov
jo
arpl
jecxz
inc
movsb
pop
add
aad
dec
mov
cmp
dec
jb
sub
mov
into
pop
fldl
sub
aaa
scas
movsl
in
xor
cmpsl
je
cmp
mov
inc
dec
xor
outsb
outsl
pop
mov
mov
dec
rolb
sub
imul
push
add
ret
push
mov
dec
and
scas
mov
mulb
rcl
cmp
mov
cltd
or
hlt
sbb
xor
mov
imul
pop
pop
adc
xor
push
inc
push
mov
xor
fs
push
iret
je
xchg
sub
jne
xchg
jae
and
lea
mov
sbb
aad
leave
or
fcoml
fistpll
in
in
or
xor
inc
sub
lcall
inc
xchg
inc
pop
cwtl
xor
test
mov
insb
cs
push
leave
or
push
mov
xor
push
jae
fisubs
inc
xor
aaa
arpl
insb
xchg
imul
sbb
sbb
lret
xor
fs
shlb
push
xor
inc
push
xor
int
push
ret
mov
or
aad
in
mov
xor
xchg
xor
jae
xor
pop
xchg
jmp
fstl
daa
fs
pop
aam
movl
mov
push
cmp
call
pop
lds
mov
xor
aad
sub
jl
jb
popa
jne
cmp
or
adc
sar
and
mov
xor
stos
sbb
repnz
pop
add
push
aaa
push
fwait
mov
mov
jnp
mov
rolb
and
dec
push
cmp
ss
xchg
and
cmpsl
dec
jecxz
outsl
ds
int3
movsb
js
out
dec
cmp
or
addr16
xchg
stos
gs
call
pop
dec
repz
aaa
lret
minps
fcmovnb
addr16
stos
bound
dec
test
or
mov
mov
xchg
enter
lods
xor
repnz
push
add
jns
les
sub
xlat
pop
iret
out
dec
mov
dec
xor
jl
sbb
or
xchg
pop
add
cmp
imul
push
xor
adc
in
push
js
cmp
insl
lock
xchg
inc
es
pop
jns
sti
add
xor
or
xor
and
dec
shl
dec
push
lret
jae
movsl
mov
xor
jo
mov
cwtl
aad
fldcw
mov
xor
aam
mov
leave
shrl
cmp
dec
add
js
and
inc
arpl
xor
xor
mov
incl
sbb
xor
addr16
or
push
mov
test
push
lcall
and
pop
orb
sarb
repnz
add
movsb
xor
mov
xor
aas
stos
jbe
test
iret
push
pop
inc
lock
sarl
dec
jg
push
xor
shrl
test
push
fcmove
lcall
or
jecxz
jb
mov
leave
xor
xor
cmc
clc
leave
push
push
adc
ret
out
mov
dec
and
repz
jbe
inc
push
push
xor
cmp
pop
jl
inc
js
aaa
mov
call
pop
mov
and
inc
sub
jge
jns
sbb
aaa
mov
aam
pop
xor
dec
xor
inc
cwtl
arpl
add
mov
lahf
ret
dec
and
push
jecxz
jp
hlt
push
fwait
xor
inc
addr16
les
aaa
std
iret
lock
xchg
mov
pop
out
pop
push
cmp
popa
and
inc
mov
stc
sub
rolb
push
cld
dec
fldenv
fnstsw
js
adc
insl
xor
pop
xor
inc
xchg
ljmp
jne
adc
lock
push
sbb
fbstp
xor
cmc
mov
cmpsl
test
push
pushf
repz
adc
das
movsl
dec
sub
push
test
pusha
sub
into
sbb
mov
pop
nop
xor
pop
ret
dec
mov
xchg
inc
movsl
hlt
fs
inc
jge
add
and
push
or
sahf
adc
clc
bnd
fs
fsubrs
adc
and
dec
cmp
fcomip
loope
push
xor
mov
mov
fisttps
xchg
push
sarb
xchg
lcall
sub
adc
jl
rcrb
test
shrb
popf
ficoms
and
cmp
mov
push
xchg
inc
and
add
dec
lahf
jno
adc
mov
jnp
mov
adc
repnz
push
pusha
fbstp
add
popf
js
jecxz
pop
imul
stos
sbb
or
leave
ret
sub
mov
loope
and
and
pop
jmp
adc
inc
rcrb
inc
sbb
or
mov
std
push
insl
jl
pop
int3
mov
fdivr
xor
sti
add
push
push
mov
rorb
and
movsl
jle
mov
fnsave
in
adc
jo
ret
sub
dec
add
dec
sbb
scas
dec
ds
pop
insb
pop
popa
jb
push
ljmp
sub
jne
pop
sbb
fisttpl
cld
push
inc
stos
cmp
pusha
sub
scas
adc
pushf
xor
jmp
jae
scas
out
mov
adc
or
in
cmp
sub
int3
enter
xchg
mov
push
outsb
jle,pn
arpl
pusha
stos
mov
fwait
das
inc
mov
and
ret
mov
ss
inc
lock
jg
inc
or
pop
inc
inc
cmp
jae
dec
insl
add
xchg
pop
into
mov
in
mov
cmp
das
cltd
or
outsb
scas
inc
xchg
lock
or
in
inc
mov
or
mov
stc
mov
cmp
mov
and
xchg
icebp
jo
and
pop
jb
mov
mov
mov
mov
push
pop
hlt
add
and
push
sbb
inc
add
push
push
push
sbb
fdivrl
xchg
cmp
in
mov
mulps
cmp
and
sbb
repnz
inc
negb
push
sub
test
inc
sbbb
dec
xor
jg
jbe
mov
xor
mov
inc
xchg
jg
jo
adc
jno
outsb
xor
cmp
in
mov
je
mov
jg
or
cld
rorb
jg
mov
sub
mov
jl
mov
mov
rcll
mov
mov
ja
outsl
imull
adc
sub
inc
mov
fiaddl
cld
fcompl
dec
test
cmp
add
adc
cmp
mov
adc
fbld
mov
add
cmp
push
mov
xor
xor
shrl
sub
push
push
and
push
in
out
leave
adc
adc
in
push
inc
scas
inc
in
jge
das
sbb
inc
cmpsb
iret
shrb
or
in
and
xchg
fmulp
xor
sub
jnp
stos
push
inc
sbb
pop
call
scas
inc
sub
iret
ljmp
jno
movsb
test
mov
sbb
js
pop
and
insl
rcll
mov
test
inc
shlb
test
cmp
dec
inc
xchg
add
push
add
mov
dec
arpl
icebp
push
lahf
mov
stos
cs
test
icebp
sub
test
shr
or
jle
sbb
jp
and
icebp
into
mov
mov
filds
xor
pusha
cmp
icebp
cs
xchg
pop
adc
mov
in
inc
cmp
mov
or
je
pop
loopne
pop
popf
out
pusha
push
repnz
sarb
subb
nop
xchg
xor
dec
ds
hlt
stos
call
sub
nop
popf
lahf
outsl
and
push
dec
addr16
jo
xchg
and
jmp
push
jo
cli
test
test
stos
jl
mov
push
or
scas
mov
xchg
or
icebp
jno
in
add
add
pop
sub
fsubl
inc
imul
mov
push
or
pop
cs
iret
mov
in
pop
std
lret
and
int
or
jg
cmp
lods
xchg
int3
in
inc
lahf
pushf
cmp
sbb
icebp
ror
cmp
aam
fnstcw
push
fimuls
and
xchg
pop
cmp
lret
cli
cmp
adc
and
mov
and
shl
iret
stos
pop
cmp
les
adc
hlt
mov
jg
cmovb
add
iret
ret
pop
adc
xor
sbb
ret
movsl
xor
movaps
sahf
jno
adc
adc
gs
ret
add
je
and
inc
das
cs
add
sub
mov
or
sbb
sbb
ud0
sbb
xor
or
rorb
or
ffreep
std
cld
sti
pop
rclb
adc
xor
fdivrp
divl
fldl
in
mov
adc
add
mov
ljmp
xor
mov
mov
xor
scas
lods
lods
xor
cmpsb
movsl
movsb
xor
pushf
fwait
lcall
xchg
xchg
push
data16
pop
pop
dec
rcrb
jmp
test
sarb
or
adc
xchg
sub
daa
dec
xor
pop
loope
sbb
lock
sbb
sbb
push
loopne
or
loop
out
adc
or
out
mov
shlb
iret
adc
loop
mov
push
xor
das
xchg
loopne
movsl
jno
not
push
movsb
sti
out
mov
mov
fistl
mov
int
pop
out
popf
inc
jb
inc
ss
divl
mov
fisttpll
mov
cmpsb
inc
push
add
pop
das
cmp
lds
xor
mov
mov
lahf
xor
jo
dec
jb
mov
in
enter
mov
sbbb
pop
adc
sbb
aas
movsb
inc
add
repz
mov
inc
xor
dec
mov
and
and
mov
pop
adc
mov
in
xor
push
test
mov
jbe
cmp
dec
rcrb
mov
insb
pop
clc
insl
xor
mov
shlb
mov
pop
shr
enter
test
dec
movsl
xchg
xchg
stos
xor
fldenv
outsl
lret
adc
ret
inc
lods
arpl
rorl
cltd
je
sbb
pop
icebp
sbb
lea
and
loopne
adcb
outsl
rcll
sbb
jno
jae
sub
lds
jmp
xchg
cmp
xchg
xor
pop
out
not
sbb
add
mov
pop
loopne
stos
pop
cmp
insl
mov
push
lods
or
mov
inc
scas
je
push
sti
cmpsb
xor
or
add
and
xor
mov
dec
dec
pop
cmp
inc
outsl
stos
mov
rcll
jb
scas
push
stos
aam
cmp
xor
aad
or
call
mov
das
fadd
mov
test
mov
xchg
dec
in
addl
mov
jg
or
mov
pushf
sbb
mov
insl
jecxz
and
dec
outsl
mov
jbe
push
mov
or
xchg
es
call
cmpsl
adc
in
mov
lcall
stos
lods
add
setge
subl
and
sub
sub
push
jae
xor
push
cwtl
cmpsb
mov
sbb
add
xor
sbb
test
lcall
imul
xor
aad
movsl
dec
jae
lds
inc
fldcw
sub
add
cltd
jnp
mov
test
xchg
add
push
pushl
adc
popa
js
mov
mov
xor
and
ret
shlb
xor
add
mov
pop
ret
test
cmp
xchg
xchg
je
mov
aaa
in
addr16
outsb
mov
cmp
hlt
xchg
sub
jbe
xor
pop
call
ret
jno
cltd
int3
cmp
mov
pusha
dec
scas
out
test
or
movsb
mov
test
jae
xor
xchg
aam
or
popa
call
mov
xor
into
outsl
pusha
cmpsl
xchg
xor
addr16
xchg
test
jb
or
and
inc
sahf
shll
stos
aaa
push
xchg
adc
add
inc
mov
aam
xor
pop
mov
ja
xor
dec
out
xchg
mov
push
inc
int
xlat
sbb
orl
push
movsb
in
mov
movsl
add
jg
xor
stc
mov
lock
repz
xor
int3
cmpsb
call
mov
xor
scas
dec
adc
stc
rcrb
cmp
dec
cs
mov
mov
inc
or
imul
xor
shll
fstpt
xlat
mull
xchg
xor
inc
cmpb
cmp
fmull
addr16
jb
pop
cs
mov
and
repz
popa
je
sub
lahf
jl
add
rclb
mov
dec
or
std
in
or
mov
pop
test
fstps
dec
data16
dec
or
into
mov
test
js
cmp
pop
lcall
xchg
sti
cld
nop
adc
testl
sbb
aad
sbb
mov
and
dec
fists
iret
jo
std
mov
repz
and
loope
adc
inc
ja
push
or
adc
pop
xor
inc
out
movsb
xlat
xor
arpl
dec
xor
mul
aas
fnstcw
popa
inc
imul
popl
cmpsb
out
aaa
cltd
mov
gs
notl
pushf
xchg
mov
dec
mov
mov
mov
push
flds
cmpsb
mov
dec
decl
cmp
in
mov
int
out
into
in
imul
push
pop
cmpsl
aas
enter
cs
aad
in
repz
mov
lods
xor
push
rcl
or
divl
and
xor
cmp
mov
push
clc
dec
es
test
repnz
xor
outsb
insb
sub
data16
inc
or
adc
clc
mov
das
cmp
stc
outsb
and
cmp
lret
ss
fisttpll
mov
sti
mov
xor
push
add
push
jmp
xor
ja
insl
push
out
add
adc
mov
enter
scas
mov
mov
arpl
inc
jge
movsl
xor
xchg
mov
and
sbb
and
pop
fsub
stc
cmp
push
xor
insb
add
aam
sbb
mov
xchg
and
xor
and
notb
es
xor
cs
xor
or
and
add
icebp
xor
jp
lds
mov
je
mov
adc
mov
lret
aaa
stos
aas
je
xor
inc
inc
jmp
pop
sub
es
jae
xchg
xor
inc
repz
rorb
js
ret
and
jle
sbb
lret
mov
mov
lds
fdiv
xor
xor
mov
mov
shll
js
into
jo
scas
aas
mov
jg
xor
adc
jl
scas
orb
cltd
dec
xor
test
xchg
and
ja
je
xchg
cmp
push
int3
divl
mov
mov
adc
xor
fucom
loop
test
cmp
movsb
aam
xor
in
pop
fwait
push
ret
cld
outsb
cmp
pop
jg
bound
imulb
jp
inc
cs
imul
pop
jl
ret
dec
jmp
arpl
aad
popa
loop
in
xlat
cmc
aaa
lahf
enter
push
adc
insl
das
pop
xchg
test
sub
fidivs
cs
cmp
pop
xor
jmp
imul
mov
lods
or
sarb
jge
or
mov
addr16
and
lret
ror
sub
xor
sti
imul
js
jmp
lcall
xor
push
add
mov
xor
fs
aam
mov
mov
dec
inc
aad
mov
les
cld
add
cmp
mov
pop
ss
adc
xor
jns
mov
ja
adc
leave
jg
fbld
or
push
adc
xchg
pop
into
shll
loop
imul
cmp
cmp
xor
addr16
cmp
testl
xor
xchg
fistpll
mov
pop
in
push
and
adcl
push
lods
xor
data16
xor
push
repz
int
cmp
lods
cld
sahf
push
mov
out
pushf
mov
pop
sbb
fisubl
dec
jo
fdivrs
xor
sub
imul
je
aas
mov
flds
sub
mov
xor
mov
popa
idivb
mov
push
scas
pop
jnp
pop
xor
adc
sub
data16
dec
xor
in
jae
sub
popl
xor
cmpb
fbstp
xor
push
icebp
xchg
aaa
pop
lea
sub
push
mov
cmp
mov
je
movsl
mov
mov
jbe
inc
push
lret
mov
xor
int
ret
dec
jae
hlt
sti
fdivs
fsubrp
icebp
fcoms
mov
ja
jecxz
xor
movsb
dec
rcrl
iret
cmp
inc
or
les
and
dec
mov
xor
sbb
xor
add
lret
mov
rol
aad
inc
mov
push
xor
pop
xchg
xchg
loop
pop
add
push
adc
mov
mov
xor
les
repnz
ret
aaa
lahf
push
lods
jo
pop
movsl
add
jp
and
xor
testl
in
jo
jecxz
push
mov
pop
popa
clc
cmp
xor
sub
cld
jae
scas
cmp
sbb
ficompl
push
and
mov
out
jne
pop
xor
mov
dec
lock
adc
sbb
jp
adc
cmp
jo
pop
xor
outsl
mov
test
and
in
add
add
pop
cli
xchg
fsubl
mov
shlb
es
or
aam
dec
imul
sbb
pushl
xor
clc
sub
push
mov
and
test
aas
add
jnp
xor
jmp
outsb
adc
mov
aaa
sub
fcmovu
mov
xor
jno
jmp
inc
insl
push
sub
mov
daa
out
lret
in
and
mov
aam
mov
fnstcw
shlb
aam
xor
and
lahf
dec
xor
push
adc
ret
je
xor
xorb
xor
imul
mov
out
xor
loope
negl
arpl
xor
push
shll
cs
into
add
push
out
shrb
les
push
mov
lahf
sbb
test
push
mov
or
sti
and
repnz
in
scas
inc
cmp
dec
into
sbb
sub
xor
lea
xor
ret
sub
cmp
jg
pop
mov
lock
xor
sbb
xor
loopne
xor
cmp
orb
aaa
cwtl
sti
inc
repz
sbb
inc
in
lret
ss
mov
or
xor
sarb
add
or
adc
xor
cmp
insl
xor
xor
arpl
mov
and
sub
je
jle
pop
int3
pop
cmp
push
dec
add
dec
xor
aad
sbb
pushf
mov
or
xor
outsl
mov
bound
ds
xchg
sub
fiaddl
xor
iret
sarl
les
xchg
popf
negl
fst
hlt
xor
cmc
fsubp
jno
fnstenv
mov
xor
data16
mov
leave
and
inc
je
mov
scas
xor
cmpsb
fsubl
cmp
testb
aaa
xor
dec
mov
xor
ss
inc
mov
mov
xor
dec
add
xor
test
lods
push
cltd
pusha
mov
cmpsl
xor
sahf
inc
ret
sbb
pop
int3
xor
ficomps
and
sbb
in
xor
or
xor
xchg
outsl
add
jo
inc
bound
mov
mov
fmull
call
sub
mov
mov
inc
pusha
jae
cmp
adc
aam
or
outsl
stos
xor
arpl
dec
jbe
push
jno
orl
seto
lds
hlt
jo
cmp
cmp
adc
add
orl
aaa
dec
add
leave
dec
fistps
cmpb
sahf
add
pop
fidivrs
xchg
ljmp
xor
mov
push
mov
repnz
xchg
push
data16
cmp
ficoml
push
ljmp
ret
lods
push
mov
cmpsl
push
add
push
jo
hlt
mov
xor
dec
xchg
dec
or
shlb
and
and
pushf
mov
mov
mov
leave
xor
mov
scas
xor
in
mov
add
repz
add
insl
mov
lret
push
dec
mov
jmp
decl
stos
xor
inc
outsl
das
jge
lea
stos
loop
push
pop
push
lods
loope
xor
adc
pusha
insl
xor
cvtps2pd
mov
mov
ss
cmp
cmc
rorl
test
sub
sbb
jno
xor
xor
adc
cwtl
xchg
clc
push
aam
add
sub
mov
cmp
stos
and
rol
cmp
test
adc
addr16
jg
in
jp
pop
xchg
mov
xchg
movsl
or
xor
or
orl
mov
xor
arpl
xor
xchg
xchg
jg
add
and
mov
push
sub
cmpb
adc
ret
xor
shrb
fprem
aad
stos
xor
mov
push
lea
jbe,pt
scas
and
xchg
and
stos
inc
iret
in
pushf
aaa
mov
add
test
int3
pop
mov
xlat
shrb
aas
into
mov
icebp
jle
xchg
psubsb
repnz
jl
dec
adc
rcll
push
adc
inc
xor
cli
push
cmp
aas
enter
adc
in
das
adc
std
xor
ficoml
test
or
pop
mov
iret
cmp
int3
test
push
fs
scas
pop
add
fiadds
push
cmp
jge
push
sbb
jno
mov
mov
lods
ds
inc
stos
dec
lea
je
push
mov
mov
and
jecxz
dec
aad
hlt
xchg
jbe
cmp
sub
rorb
push
jg
xor
and
push
pop
pop
shll
xor
jle
loope
aas
sbb
dec
jns
mov
dec
mov
and
popa
lock
sub
push
bound
ret
push
and
mov
rolb
xor
fidivrl
pop
adc
xacquire
cmp
push
and
or
dec
data16
sub
mov
decb
pop
fisttpl
xor
rorl
adc
xchg
dec
mov
aam
add
loopne
pop
inc
push
cmp
dec
and
mov
mov
xor
add
adc
negb
sub
dec
jmp
xor
pop
outsb
aaa
push
fadd
rolw
in
dec
sbb
pusha
xor
dec
les
jmp
mov
cmc
dec
loop
fadds
aaa
xor
iret
mov
pop
loopne
xor
inc
jl
fcmovnb
push
lods
and
xor
or
jb
push
push
nop
add
xchg
fs
xor
dec
sbb
and
cltd
adc
mov
xchg
mov
jg
hlt
mov
sti
stos
call
jmp
push
push
add
enter
xchg
int3
xchg
inc
push
repnz
cmp
inc
out
test
ljmp
jo
pushf
lods
xor
adc
or
cmp
in
adc
mov
pop
xor
xor
xor
movsb
sti
pop
cmp
cmpsb
mov
inc
lahf
xor
add
leave
call
dec
xor
lds
mov
inc
mov
sub
ds
and
xor
dec
insl
pop
jne
enter
lods
jno
fsubrl
pop
fs
xchg
and
add
dec
mov
mov
cmp
xchg
xor
hlt
outsl
push
sub
add
dec
add
xor
shrl
sub
xor
mov
xchg
int3
orb
push
jle
cmp
jbe
xor
testb
jg
xor
dec
jo
ret
inc
ret
sub
or
mov
aaa
mov
cmp
xor
mov
xchg
mov
push
push
push
aad
jae
mov
xor
daa
xchg
xor
push
dec
xchg
repnz
push
mov
pop
inc
xor
xorl
xchg
ds
repnz
into
popa
add
aad
adc
mov
jae
imul
outsl
fmull
add
inc
dec
popa
repnz
sahf
aas
push
popa
jle
std
mov
xchg
call
cmp
mov
dec
int3
pop
pop
dec
jae
fnstsw
xor
adc
pop
rorb
mov
scas
adc
and
dec
in
dec
adc
fs
sub
pop
lods
lea
hlt
jno
xchg
movsl
js
je
mov
jmp
aaa
notl
inc
add
scas
ss
dec
sbb
ds
arpl
mov
insb
xchg
pusha
or
jnp
pop
mov
loope
push
mov
pop
jbe
cmp
xor
aam
imul
and
inc
sub
ds
pop
dec
xor
jl
lds
add
ret
cmp
dec
pop
shlb
jns
adc
mov
stos
xor
aam
pop
inc
cld
add
pop
inc
popa
adc
sub
sub
rcr
jno
cwtl
xchg
and
popa
xchg
xor
push
bound
mov
loop
adc
icebp
xor
dec
insl
xor
fnstcw
stos
fdivs
or
fwait
out
mov
loop
pop
cmpsl
repnz
sbb
ss
jnp
mov
cwtl
cmpsb
dec
jo
jbe
jb
gs
std
sbb
rcl
jecxz
insl
fcompl
xor
pop
scas
mov
adc
dec
push
pushf
lret
xor
filds
jp
inc
and
addl
repz
lret
aad
push
xor
test
pop
cmp
call
mov
xor
lcall
out
xor
sbb
mov
dec
jg
cli
adc
in
pop
mov
inc
rcrb
mov
jmp
mov
xor
inc
push
and
jg
inc
mov
pop
test
fdivl
jbe
fs
ret
mov
xor
fwait
or
mov
fs
movsl
mov
xor
push
sub
mov
jg
cmp
cmp
outsb
leave
mov
fwait
in
aam
jae
bnd
mov
je
mov
sbb
push
ret
adc
icebp
insl
iret
roll
lock
xacquire
pop
and
int3
ret
xorl
cmc
jle
pop
pushf
xor
xor
pusha
push
add
mov
out
cmp
ret
add
notl
xor
loope
add
ret
popf
js
ss
xor
mov
xor
and
movups
inc
mov
dec
ss
sub
lock
sti
dec
mov
es
ljmp
inc
push
jecxz
xchg
dec
push
repnz
dec
mov
xor
mov
and
sub
push
dec
and
fsubrs
mov
repnz
add
loop
test
mov
mov
mov
lods
cmp
lds
test
mov
ljmp
cmpb
ret
adc
jmp
inc
js
scas
mov
inc
rolb
shlb
xchg
mov
repnz
and
loopne
ret
adcb
xor
clc
push
pop
jb
add
mov
ret
jle
pop
and
add
xchg
xor
xchg
ret
cmp
aas
pop
fisubl
xchg
mov
mov
dec
xor
push
mov
mov
xchg
lret
rcrl
xchg
jae
pop
and
inc
sub
divl
cld
and
bound
adc
cmp
daa
popf
mov
aad
das
and
add
cli
jnp
mov
mov
cs
mov
adc
sub
lods
and
add
adc
stc
data16
and
pop
outsb
jb
mov
cmpsb
rorb
leave
and
mov
mov
fildll
not
mov
movsb
je
add
xchg
push
cs
mov
mov
or
mov
fidivs
sti
inc
es
pop
ss
mov
mov
nop
ss
pop
pop
sti
movsb
rorb
lods
sbb
sti
sub
ljmp
repz
cmpsb
outsb
jbe
pop
mov
mov
idiv
and
and
loop
rol
or
jg
pop
adc
lar
mov
pop
clc
lahf
mov
mulb
orl
mov
mov
cmp
mov
es
int
ss
lock
clc
jae
sarb
xor
scas
loope
popf
stos
cmp
mov
fnstsw
or
xor
jns
xor
add
push
data16
jbe
loop
mov
repnz
or
and
adc
fiaddl
cmp
xacquire
jbe
fcoml
jmp
mov
mov
sbb
inc
mov
stc
loope
data16
pop
fidivrs
push
aas
jb
add
adc
rcrl
adc
repnz
mov
and
mov
mov
inc
bound
nop
push
jl
sbb
push
adc
or
mov
cwtl
jae
inc
push
icebp
push
or
jbe
lahf
in
and
call
mov
fs
add
mov
rcrb
call
sbb
sti
cld
mov
nop
adc
and
push
cmp
cmp
inc
ljmp
sbb
mov
orb
sbb
divb
call
sub
das
jl
sbb
mov
repz
lock
pop
add
fadds
dec
jb
push
decl
icebp
loope
dec
das
mov
je
icebp
clc
repnz
adc
dec
sbb
lcall
sub
cmp
xor
aas
add
push
into
jge
ds
stos
mov
repz
jno
outsb
scas
lcall
outsb
movsl
cld
xor
pop
mov
xor
inc
and
add
shlb
aad
xchg
xchg
xor
in
mov
data16
insb
xchg
or
push
loopne
jl
mov
cmp
cmp
pusha
decb
aad
ds
jno
mov
jecxz
mov
stc
cmp
ds
imul
sub
sti
std
fs
stc
roll
ds
mov
jno
sbb
adc
push
and
jecxz
and
jno
daa
jl
int3
jns
xchg
fsub
aam
jne
bound
test
sbb
jle
inc
and
hlt
xchg
mov
mov
add
or
mov
mov
xchg
and
cld
cmp
idivl
mov
sub
sarb
repz
test
mov
mov
inc
adc
popf
mov
test
cld
mov
and
cmp
rolb
icebp
mov
stc
pop
adc
jmp
xchg
aas
data16
fidivrl
lcall
repnz
sub
shll
jb
add
lds
adc
repnz
xchg
add
adc
test
lock
inc
arpl
mov
mov
xchg
popa
shlb
add
fwait
in
or
loope
xor
mov
mov
jecxz
mov
shlb
jno
lahf
jle
cli
cmp
shl
mov
sub
nop
add
inc
fcomp
inc
das
cmp
lock
lret
popf
push
aam
popf
adc
das
pop
movsl
call
sbb
jp
pop
jg
daa
cmp
mov
cld
mov
cli
sub
sub
jle
jg
jno
jnp
fdivs
mov
pop
mov
mov
pop
lock
dec
cmp
jo
adc
rorb
jno
out
clc
sbb
mov
fsincos
inc
or
push
mov
jge
dec
mov
movq
mov
xchg
jae
repnz
clc
mov
jecxz
jge
ss
cmp
loop
fcmovnb
sub
mov
jno
or
sbb
mov
aam
sub
or
cmp
fdivr
loope
adc
mov
adc
jge
mov
jno
sub
sbb
inc
imul
xor
mov
adc
mov
insb
adc
cwtl
xlat
fstpl
fbld
cmc
loope
or
mov
testb
outsb
push
pop
adc
mov
jle
cld
in
and
adcb
hlt
and
xchg
incl
scas
je
push
mov
xchg
sub
mov
shll
add
aam
fistps
and
mov
and
xchg
sub
xlat
fidivl
ds
mov
and
sarb
and
mov
out
pop
push
icebp
movsb
je
hlt
mov
xorb
icebp
adc
lods
xor
rorb
push
push
mov
sbb
mov
hlt
cmp
add
nop
adc
rcr
out
xor
push
imul
rcr
fmull
pop
adc
in
push
jle
pop
lock
jmp
dec
lea
ljmp
cmp
repz
sub
sub
cmp
mov
sti
pop
test
mov
out
sbb
pop
adc
btc
jns
cmp
pushl
jno
repnz
stos
sti
dec
jae
jo
cmp
ds
icebp
shlb
cmp
shrb
sbb
mov
in
inc
jge
xchg
push
sti
sub
xor
mov
cli
jmp
mov
and
sub
fbstp
add
sbb
flds
push
cmp
stc
mov
add
fidivrs
jns
lahf
lock
and
movsl
into
repz
jg
bound
sub
aas
inc
roll
add
insb
mov
push
mov
lods
shl
xor
push
mov
xchg
cld
mov
aad
lcall
std
repnz
lcall
addr16
pop
fnstsw
insb
test
sub
shrl
mov
fsts
pusha
jo
mov
mov
mov
xor
xchg
aas
add
or
push
xor
loope
jb
dec
cmp
jecxz
adc
rcll
xor
test
jge
je
xchg
jb
out
lahf
icebp
leave
stos
jl
jg
mov
jo
jo
cmp
mov
xor
jo
mov
lock
xor
lock
imul
jge
mov
xchg
cld
push
scas
call
cmp
xor
mov
fs
scas
lock
mov
mov
adc
leave
outsb
aas
imul
fnsave
mov
push
sarl
inc
fists
mov
xchg
jle
jmp
jno
and
bnd
xor
fisttpll
cmp
mov
add
inc
xlat
stc
in
mov
and
mov
adc
dec
push
das
shlb
bound
pop
xchg
push
xchg
jecxz
int3
rolb
dec
or
cld
or
movb
ret
int3
and
movsb
mov
mov
aam
push
cs
mov
ljmp
jne
aam
inc
das
mov
lock
mov
stc
ss
mov
and
scas
insb
sbb
lahf
outsl
ljmp
cmp
mov
incl
mov
pop
xor
shll
jbe
jg
lahf
or
cmpsb
cld
cmp
cmc
mov
jl
ja
push
cli
popf
hlt
pop
mov
insb
jle
cmp
in
add
inc
lock
push
cmp
jge
push
aas
inc
xchg
and
scas
mov
mov
loopne
repz
leave
xor
sub
jb
lds
movsb
rorb
repnz
mov
or
out
push
shll
pop
dec
pop
loop
xor
and
cs
adc
adcb
aad
sbb
mov
and
mov
ret
ret
hlt
cmp
les
and
aas
cmp
std
mov
push
mov
mov
and
std
leave
inc
ficoms
hlt
push
xor
test
arpl
lods
lock
mov
subb
push
add
xor
dec
shlb
adc
mov
adcb
and
ror
out
leave
je
lods
mov
jbe
inc
enter
mov
jne
fld
jle
cmp
f2xm1
pop
ss
push
add
mov
push
mov
movsl
adc
jnp
and
mov
hlt
pop
sbb
add
je
lcall
hlt
jmp
lock
outsl
push
mov
jo
pop
jl
xor
add
mov
lock
xchg
xchg
jno
fmull
pop
mov
mov
lret
push
or
lock
lcall
xor
inc
lds
mov
mov
jo
fidivrl
mov
xchg
mov
cs
call
insl
and
xchg
pop
xchg
scas
jmp
ret
nop
nop
fxam
mov
rol
ficoms
lods
dec
mov
mov
repz
jb,pn
notb
ss
lock
arpl
mov
shl
decb
cld
roll
shlb
repz
icebp
jp
shl
cld
xor
aad
xor
call
sub
cmp
icebp
mov
sub
pop
cs
lea
jb
movsl
scas
push
test
push
jb
pop
das
repz
shl
push
dec
adc
mov
sahf
pop
pop
rcrb
cli
rcrl
aas
clc
scas
pop
loop
cli
push
adc
shl
arpl
addb
cli
cmp
push
icebp
outsb
or
mov
mov
mov
test
aam
adc
repz
cmc
movsb
lahf
jo
icebp
mov
add
mov
imul
fsubrs
sbb
les
xor
xchg
test
ret
arpl
adc
add
xor
ret
xor
fsts
icebp
sub
push
into
push
cmpb
mov
jae
xor
cmpsb
pop
and
cmp
cmp
sub
mov
dec
mov
jl
push
xchg
arpl
mov
cmp
mov
add
mov
insb
jae
inc
mov
and
dec
xor
les
cmp
jmp
xor
data16
jecxz
jae
push
sub
jg
mov
xor
pop
mov
xchg
and
add
mov
sahf
push
push
sbb
push
ljmp
push
mov
mov
pop
aas
xchg
adc
rclb
call
cld
stc
or
ljmp
icebp
dec
idivb
adc
adc
scas
mov
scas
loopne
shll
adc
jbe
fiadds
not
jae
ja
mov
cmp
fneni(8087
and
into
add
and
ss
or
xchg
dec
ds
nop
lods
mov
decb
jns
lock
xor
into
inc
jnp
shlb
popf
dec
mov
inc
and
dec
cmpsb
ret
mov
in
std
shll
adc
push
jmp
xor
sub
cmp
sbb
rcr
xchg
push
ret
sti
aaa
pop
pop
scas
push
sub
push
pop
xchg
push
xchg
cs
jge
push
cltd
imul
or
push
lods
mov
xchg
pop
sbb
lahf
jo
cli
jl
outsb
adc
cmp
mov
mov
xor
mov
aas
pop
cmpl
adc
mov
inc
adc
jge
sbb
mov
push
std
pop
push
sti
inc
pop
std
mov
ja
dec
hlt
add
sarl
jb
adc
adc
inc
or
jg
jb
mov
inc
loope
shlb
add
pop
arpl
adc
sti
jecxz
lods
daa
xchg
xor
js
pusha
mov
es
sbb
fadd
push
or
pop
sub
sbb
jecxz
or
pushf
mov
sbb
icebp
nop
outsb
xchg
das
ror
mov
mov
idiv
lods
sub
cmp
loopne
daa
icebp
fdivrl
adc
jb
ljmp
in
mov
mov
in
sti
sti
xchg
xchg
stc
adc
out
jno
xorl
insl
nop
fcoms
insl
lods
push
fnstenv
mov
adc
popf
xlat
sbb
lods
xchg
mov
ljmp
xor
mov
jp
sbbb
mov
lods
mov
sub
sahf
cwtl
mov
mov
pop
mov
xor
in
fldcw
insb
push
mov
sbb
xlat
xor
sti
mov
push
scas
adc
xchg
aas
sbb
lcall
cwtl
repnz
cmp
js
lret
js
ljmp
out
addb
adc
loope
iret
js
push
mov
fstpl
scas
sbb
lahf
rcr
rol
mov
pop
sbb
xchg
xor
and
mov
psllq
jl
subl
idivl
xor
xor
cmp
sti
mov
stos
aas
mov
sub
inc
and
xor
cmp
bnd
pop
sbb
out
xor
adc
lock
sbb
mov
jmp
dec
fnsave
mov
aaa
fs
rcl
lahf
mov
xor
and
ret
sub
leave
into
or
sub
inc
push
mov
sub
xlat
cld
pop
jmp
arpl
arpl
ja
rclb
mov
repnz
adc
loopne
jg
scas
aas
jge
cld
mov
sahf
push
out
mov
mov
sti
pop
pop
lcall
cwtl
jns
xor
pop
pushf
int3
sbb
loop
xorl
mov
sti
jb
icebp
out
stos
mov
enter
mov
lret
jl
jae
rcl
outsb
nop
add
sbb
loopne
pop
push
pop
clc
stc
cs
push
add
out
jno
pushf
sub
xchg
ja
ss
and
bound
jecxz
sbb
and
inc
adc
jle
mov
test
jg
in
inc
repz
bound
lods
jp
push
bnd
out
xorb
add
stc
push
fcompl
sti
jmp
pop
xchg
dec
mov
int3
adc
cs
testb
jns
xlat
cmp
jle
fists
push
and
jmp
testb
push
fdivrs
push
sbb
shl
out
loope
dec
cmp
repz
jno
adc
je
xor
testb
mov
pop
push
scas
mov
mov
les
lods
jo
push
rcrl
outsb
nop
and
bound
mov
int3
xor
adc
xchg
lock
mov
sub
mov
mov
dec
ss
sub
scas
dec
icebp
mov
pop
pop
ljmp
xor
and
push
sub
add
fcompl
mov
aas
ja
xchg
jge
notb
outsl
lods
push
mov
outsl
sub
repnz
jg
dec
ss
loop
xchg
clc
shrb
sbb
subl
aad
sbb
repz
dec
imul
add
cmp
inc
out
mov
fnstenv
adc
mov
cmc
cmp
sbb
jbe
cld
clc
mov
adc
out
icebp
pop
jae
mov
dec
fadd
outsb
jp
jecxz
clc
popf
hlt
push
mov
in
or
out
shlb
xor
xor
pop
adc
dec
pop
cld
ds
cwtl
nop
pop
test
fisttpll
inc
nop
xchg
repnz
adc
shlb
loope
dec
cmp
lods
mov
add
jno
pop
xchg
mov
sub
fcoms
adc
mov
mov
jno
push
mov
sub
aas
jb
aas
xchg
sbb
out
ds
add
out
xor
aas
add
ja
xor
add
loopne
and
pop
fidivrl
cli
mov
jp
call
in
out
rcll
jl
sub
les
push
flds
pop
push
xor
jmp
or
ljmp
dec
add
cmc
add
cmp
adc
addr16
pop
fdiv
jae
call
enter
and
add
xlat
jb
aad
in
xor
push
sbb
and
inc
out
shr
jae
ss
movsl
ret
out
cmp
ret
lcall
repz
xor
cmpsb
or
in
repnz
sahf
movsl
pop
dec
inc
rclb
jno
loop
xor
mov
dec
and
mov
or
scas
movsb
in
add
pop
mov
cwtl
and
mov
es
addr16
inc
xor
or
test
daa
adc
mov
lea
adc
js
iret
pop
aas
jg
or
iret
push
mov
cli
lcall
addb
leave
mov
leave
push
pop
adc
mov
loopne
repnz
out
dec
sbb
fcomps
cmp
xchg
sub
test
cmp
or
sarb
lahf
sbb
cmp
pop
dec
dec
add
push
cmp
insl
xor
and
sbb
out
cld
scas
ficomps
inc
das
imul
fs
pop
stc
or
mov
leave
dec
shl
daa
repnz
mov
mov
aaa
shlb
cmpb
ret
adc
dec
dec
mov
dec
popa
sbb
push
pop
add
push
dec
mov
ror
ds
ror
ds
lret
ror
pop
loopne
shlb
jmp
push
push
cmc
sahf
ret
xor
and
ret
push
sub
pop
stc
jb
popa
pusha
rcll
sbb
xor
mov
std
fisubrs
add
sub
mov
es
mov
ljmp
ds
out
sarb
inc
adc
or
pop
sbb
mov
popa
push
aaa
and
int3
jnp
adcl
ljmp
aas
jle
movsb
in
aas
pop
jg
cld
pop
push
test
mov
cmovge
mov
mov
pop
mov
lret
adc
outsl
rcrb
xchg
mov
inc
or
xchg
mov
pusha
shlb
jnp
insb
bound
add
jne
xorb
addb
adcb
adcb
or
jb
or
adc
js,pn
sub
loopne
xlat
in
sahf
jb
inc
adc
clc
fs
pop
iret
inc
or
xlat
pop
outsl
incb
loope
cwtl
mov
cld
loopne
hlt
xorb
scas
pop
lcall
negb
arpl
mov
sbb
fwait
push
movsl
ds
jns
lds
push
adc
adc
lahf
mov
xlat
fadd
hlt
add
stos
out
jns
loop
scas
rcr
add
lcall
fwait
lcall
bound
shlb
jae
hlt
dec
jbe
xor
xor
idivb
cmp
or
mov
mov
test
imul
scas
mov
jb
mov
push
jle
cmp
out
xchg
adc
loopne
test
dec
cmpsb
lock
aam
icebp
or
adc
roll
jno
jg
es
fcomps
adc
mov
push
sbb
mov
sub
adc
xorb
inc
push
adc
loope
cltd
mov
icebp
push
jae
mov
mov
divb
pusha
repnz
iret
jge
and
cmp
call
jg
inc
mov
les
xchg
jne
fbstp
lock
cmpsb
leave
jecxz
std
push
insb
add
stc
inc
pop
mov
cmc
arpl
jno
lock
andb
sarb
rolb
xor
xor
ss
inc
iret
xor
lret
xor
iret
xor
mov
push
jnp
and
cmp
cmc
lea
stos
and
xor
rcrb
push
leave
mov
popf
data16
xor
adc
mov
push
pop
pushf
ds
cs
int3
stos
aas
rcrl
rol
adc
bound
addb
and
mov
repnz
inc
xchg
xor
push
sbb
add
sbb
mov
add
scas
mov
mov
xchg
mov
push
lods
push
jge
and
sbbl
test
cmpps
and
sbb
cwtl
cmc
loop
push
and
aas
outsb
xor
fldt
cmp
pusha
cmp
fcoms
test
mov
fiadds
lock
lock
lods
xchg
icebp
xor
push
inc
or
aas
pop
mov
xchg
xor
in
out
push
idivb
adc
out
stos
jne
aad
dec
mov
pop
xor
out
lret
arpl
mov
pusha
das
jbe
inc
pop
mov
repnz
inc
and
xor
xor
mov
mov
adc
mov
cmp
int3
mov
mov
adc
mov
mov
jae
iret
lock
xlat
xchg
test
insb
cmp
sti
xlat
fdivrl
dec
clc
lock
adc
pop
sbb
into
xchg
mov
ljmp
mov
xor
shlb
mov
jmp
fsubrl
sahf
sub
adc
jae
inc
dec
adc
aas
out
fisubrs
clc
outsb
mov
push
mov
rcrb
sbb
mov
fcomip
fdivs
pushf
neg
ds
sbb
fbld
lds
ret
mov
lcall
sarl
iret
jmp
out
es
add
test
jl
jl
cmp
dec
pop
sub
std
lods
js
bound
jecxz
sub
add
mov
iret
mov
loop
popl
mov
in
call
andb
in
and
push
mov
xorb
addb
enter
or
outsl
add
dec
out
dec
sahf
adc
jno
push
ds
movsl
jle
adc
mov
lock
arpl
shrd
das
rol
into
cld
imul
arpl
jno
dec
mov
incb
jno
mov
or
daa
sub
xlat
xchg
lret
pop
test
jle
mov
ljmp
jae
ds
shl
std
push
sbb
shl
mov
mov
push
adc
mov
mov
jb
mov
mov
repnz
loopne
loop
bsf
pop
lcall
push
js
and
mov
jg
shl
mov
push
and
sub
mov
lret
and
dec
les
dec
cmp
mov
and
sti
mov
xchg
sbb
ror
sbb
jp
mov
adcb
lock
jb
or
lods
dec
jne
adc
jb
movsl
push
clc
adc
imul
mov
js
add
repz
sbb
or
loopne
ficomps
add
lock
sbb
scas
sub
cmp
fisttpll
and
sub
push
or
lods
lods
int3
jl
repz
cmp
cmp
stc
and
add
adc
xlat
jle,pt
mov
pop
and
sub
push
cmpsl
in
and
fs
xchg
pop
jp
and
adc
ret
adc
sbb
and
leave
inc
mov
jno
adc
mov
sbb
mov
stc
icebp
jl
cmpsb
idivb
xor
fldl
add
shlb
mov
mov
add
xchg
xor
sub
sub
cs
and
cs
inc
and
xor
mov
sbb
pop
pop
push
cs
icebp
lahf
scas
loope
mov
mov
jbe
push
xor
adc
mov
fcomps
pusha
sahf
es
xchg
jns
push
in
in
push
sub
pop
int3
in
fwait
stc
enter
cwtl
in
or
adc
out
sti
push
mov
lret
jno
out
adc
outsb
rclb
int
out
icebp
push
pop
inc
ds
leave
je
call
repz
icebp
mov
daa
push
mov
nop
lret
cld
mov
cmp
add
mov
cli
cmp
push
lods
adc
lods
cwtl
sarb
inc
nop
test
loope
push
add
pushf
fisubrl
shl
mov
cltd
push
cmp
mov
xchg
lret
xor
in
stos
sub
jecxz
mul
push
jnp
push
and
sub
jno
shll
add
mov
aam
dec
xor
fsubrp
lock
cmp
loopne
sub
push
jno
lods
imul
aad
lret
cmc
xchg
js
aad
sti
mov
mov
mov
sub
int
jp
lcall
pop
arpl
aaa
jb
dec
xchg
sarl
std
repnz
int
cmp
arpl
cmpsb
std
aad
xchg
std
jp
xor
shlb
sbb
jl
fdivr
cmpsb
xor
lock
lock
mov
icebp
das
cmpsl
jnp
jnp
mov
in
sub
lahf
mov
mov
lock
mov
mov
mov
mov
mov
out
movsb
push
push
pop
jecxz
inc
or
ss
cmp
xchg
push
movsb
sysexit
and
insl
stos
mov
sub
mov
mov
mov
mov
bound
mov
mov
and
scas
mov
mov
mov
mov
mov
pop
mov
pop
sub
cld
aam
lods
and
mov
lock
pop
vshufps
idivb
jns
shl
jo
data16
adc
out
inc
dec
lods
sahf
push
adc
push
mov
mov
and
sti
lock
rep
adc
ret
das
bound
jns
add
repnz
or
ss
bound
jne
xor
pop
hlt
mov
popa
inc
push
fdivrl
push
pop
jns
push
cmp
movsb
loopne
scas
and
mov
mov
mov
jmp
ljmp
push
adc
call
pop
jno
push
cmpsl
fs
out
cmpsb
push
test
jl
divl
jo
js
test
dec
xlat
add
mov
sub
sub
notl
adc
pop
gs
sub
inc
sbb
push
scas
rorb
inc
xchg
sub
xchg
mov
mov
push
jecxz
ret
adc
add
cmp
mov
loop
or
or
cmp
jmp
xor
mov
scas
cmp
dec
push
scas
shlb
dec
dec
bt
neg
call
jne
gs
xor
fs
insb
add
ret
stc
btr
and
mov
call
movzwl
sbb
shl
bsr
rol
mov
movb
movb
cmp
jmp
jmp
sbb
test
cmpsb
and
or
jg
mov
mov
or
mov
mov
aam
sub
nop
inc
testl
es
push
insl
fildll
cmp
mov
pop
lods
loope
popf
mov
cmpb
push
xor
and
cmp
xor
stos
flds
inc
outsb
sahf
ret
scas
into
sti
cltd
xchg
pushl
lea
ja
test
pusha
add
and
not
mov
pushf
cmp
call
and
stc
push
cmp
add
pushl
movb
push
pushf
lea
jmp
imul
jp
repz
test
mov
sub
shlb
xor
jns
ja
mov
xorl
movsb
out
out
jp
sbb
sbb
inc
or
mov
mov
add
icebp
cmp
scas
into
push
ffreep
call
enter
and
push
repnz
jmp
stos
push
sets
mov
movw
mov
pushf
lea
call
pusha
pushl
lea
jae
stc
sub
push
call
lea
call
jmp
movl
pushf
movl
lea
jmp
push
lock
std
std
andl
xor
aas
shlb
push
stos
ret
jge
insb
xchg
pushf
mov
pop
push
xor
addr16
in
sub
push
cwtl
dec
inc
pop
and
aam
push
iret
add
in
daa
adc
test
test
mov
insb
out
inc
out
and
xchg
push
push
test
fmuls
fwait
nop
enter
aad
or
push
sbb
bsr
shrd
mov
and
call
ljmp
clc
pop
shll
add
rcll
out
ret
int
mov
sub
imul
in
and
repnz
repnz
cli
leave
repnz
pop
xchg
sbb
xchg
lahf
sahf
pop
add
dec
andb
jle
cmp
jb
lods
mov
lret
in
mov
adc
dec
adc
jo
popf
fnsave
mov
or
push
and
sbbl
cmp
jp
push
mov
jmp
jae
notl
in
sub
ret
dec
add
in
sub
test
das
sti
pop
jmp
mov
cmp
jne
mov
hlt
push
mov
add
push
scas
int
js
mov
mov
add
sbb
sbb
mov
sbb
jmp
addr16
divl
mov
insl
or
movsb
in
push
mov
iret
add
fcoml
popf
das
addr16
stc
sbb
scas
int3
xor
lea
jb
call
ret
lahf
mov
cmpsl
inc
mov
outsl
gs
pop
or
fninit
inc
insl
cld
sub
loop
push
push
cmc
std
inc
leave
fs
rclb
jae
mov
mov
cmc
mov
scas
fisubrl
mov
or
incl
mov
ja
and
push
ja
fists
pop
xchg
mulb
in
std
mov
xor
rcrb
mov
pop
pop
lret
out
push
or
sbb
jo
fcompl
sbb
enter
add
push
loopne
hlt
mov
iret
popf
inc
loope
xor
ja
and
pop
stos
cmpsl
out
mov
mov
in
inc
das
pushf
aas
cmpsl
loop
fmuls
and
push
mov
inc
cmp
dec
push
pushf
in
adc
mov
jo
inc
ljmp
cmp
and
f2xm1
lea
call
push
push
jmp
cmp
movw
call
clc
cmp
pushl
pushl
popl
call
pushf
adc
pushf
pushl
ret
jmp
std
sub
pop
outsl
push
jns
test
fisubrs
cmp
mov
ficomps
sbb
xor
jnp
lahf
or
add
out
sub
sbb
cmp
add
out
push
push
pop
shlb
add
shlb
adc
sbb
repz
in
mov
or
xlat
xor
xor
mov
ja
outsl
arpl
fdivs
pusha
jmp
add
inc
js
je
jb
arpl
jae
das
fs
ds
enter
add
lods
cmp
outsb
xor
push
dec
jo
xchg
pushf
orl
xchg
jnp
cmp
gs
in
lea
push
arpl
outsb
sub
lret
call
xchg
dec
call
sub
insl
cmpsl
pop
lods
sbb
lods
testl
mov
or
stos
loope
jle
out
aas
xor
fwait
mov
xor
mov
push
mov
cmp
scas
leave
cmc
xor
call
push
insl
ficomps
outsl
das
xlat
lret
xchg
dec
and
jo
cmp
add
add
mov
andb
pop
imul
cwtl
mov
ret
in
mov
or
fmuls
mov
mov
sbbl
mov
outsl
repz
inc
outsb
out
sub
jns
and
rol
cmp
addr16
add
dec
ja
pop
dec
xchg
and
int3
xchg
es
push
mov
mov
js
lret
mov
add
and
mov
scas
leave
mov
jecxz
movb
cmc
sub
jmp
pushf
pushf
movl
push
pushf
movl
pushf
lea
jmp
push
xchg
lea
movl
not
cwtl
lea
jmp
jmp
push
sub
call
lea
jb
pushf
pushl
ret
mov
pushf
inc
jmp
lea
ja
jmp
cmp
cmp
call
movl
jbe
push
movw
pusha
movl
push
lea
jmp
or
pushl
lea
je
cmp
bt
call
jle
andnps
push
cmp
lea
pushf
outsb
dec
push
rorb
mov
inc
aad
mov
lret
jge
mov
xchg
add
lahf
mov
fsubrl
mov
sub
sarb
andl
clc
xor
in
sub
push
addl
jns
popf
test
idiv
add
pop
push
pusha
inc
cmp
dec
dec
add
int
rcl
push
imul
rcrl
xor
dec
scas
ret
icebp
repz
inc
nop
dec
sub
call
imul
test
pushf
pushf
push
jmp
bt
rol
pusha
cmc
pushf
push
sub
jmp
stc
bt
bt
or
jmp
mov
jmp
dec
ja
jmp
fldenv
pop
bound
lcall
fisubrs
push
mov
jo
ret
cwtl
or
xor
push
sub
jp
mov
pop
negb
xor
or
mov
mov
out
lcall
movl
movl
pusha
call
call
sti
sbb
lock
cmp
hlt
xchg
ret
scas
lret
mov
push
lds
and
iret
movsl
cmpsb
and
rclb
ret
cmpsb
pop
ss
mov
nop
data16
outsb
push
jp
pop
pop
jp
pop
add
jmp
movsb
shr
sub
mov
and
sahf
mov
push
mov
fadd
jno
movsl
xchg
lock
xor
fdivl
mov
pushf
jl
xchg
subb
ljmp
stos
jp
or
enter
lret
cmpsb
dec
or
cmp
adc
orl
xor
add
mov
fadd
dec
sub
xchg
pop
sbb
popf
imul
and
test
xlat
push
outsl
jns
sub
insl
inc
popa
dec
mov
nop
decb
cmp
mov
cld
mov
inc
jecxz
shlb
and
sub
inc
pop
lea
and
in
pop
dec
aaa
jecxz
popa
mov
les
inc
cmpsb
stos
leave
mov
cltd
push
loop
xchg
mov
mov
sar
cmc
mov
stos
mov
and
test
ds
sti
push
scas
adc
cli
sub
sub
dec
lret
mov
sarl
in
xchg
or
jge
negb
and
inc
push
fsubp
imul
pop
xchg
push
scas
push
clc
adc
add
pusha
push
lea
jmp
clc
pushf
pusha
call
gs
adc
pop
mov
xchg
jge
sbb
leave
mov
add
sbb
push
xchg
sub
xor
pop
xor
and
add
xchg
movsb
mov
mov
fs
fdivr
or
loopne
mov
lds
in
xchg
pushl
xchg
lea
sete
movsbw
pushl
popl
movsbw
push
not
mov
push
movl
movsbw
bswap
sets
lea
pushf
jmp
or
adc
add
addl
lcall
cltd
sub
xchg
rcrl
hlt
cwtl
mov
or
scas
sbb
ljmp
repnz
fcmovne
cmp
je
ficomps
ljmp
jae
scas
lds
sbb
mov
cmp
xchg
lods
push
sub
mov
mov
xchg
test
daa
push
popf
sub
and
ret
icebp
flds
mov
aaa
fildl
cmp
icebp
cmp
or
scas
les
pop
mov
movsl
cmp
outsb
in
mov
movb
pop
pop
or
add
xchg
ja
outsl
ret
push
sbb
xchg
pop
stos
sub
in
sub
dec
sbb
push
int
addb
leave
jp
sbb
and
inc
add
jns
fdiv
xchg
mov
inc
mov
push
inc
test
mov
lret
mov
imul
cmp
rcrl
and
and
ds
iret
insl
mov
inc
insl
pop
mov
bound
mov
test
dec
int3
imul
outsb
mov
xor
andl
mov
stc
xchg
mov
shrl
into
gs
inc
sbbl
repz
push
mov
pushf
push
lea
jmp
jmp
inc
cmc
xchg
stc
pushl
mov
bt
mov
push
cmc
stc
pushf
xchg
xor
bswap
mov
cmp
pushf
pushf
sub
movw
rep
pushf
call
push
not
lea
mov
push
movl
lea
ja
pushf
push
pushl
popl
pushl
pusha
pushf
pushf
pushl
ret
mov
insl
push
ja
xchg
adc
mov
add
insb
es
xor
mov
test
mov
push
clc
pop
stos
sub
mov
inc
ret
cmp
sub
xchg
inc
pop
mull
adc
push
cltd
jbe
mov
xchg
mov
xchg
mov
xchg
sbb
sbb
add
push
pop
cmpsb
arpl
jecxz
adc
add
rcll
cmp
xchg
mov
fnstcw
dec
push
hlt
push
inc
icebp
push
add
sub
jns
out
or
imul
mov
jno
icebp
sbb
lea
jge
push
cwtl
rcrl
pop
sub
ffree
lds
ret
loop
scas
sar
sub
fprem1
decl
push
inc
push
dec
xor
inc
dec
dec
add
addl
jmp
subb
fs
je
rcl
xor
dec
clc
sbb
pushf
mov
and
and
mov
shr
cmc
setle
shr
sub
bts
movsbl
mov
call
pusha
not
movb
mov
lea
pusha
push
pushf
pushf
lea
call
call
pushf
pushf
lea
jae
jmp
nop
seta
negb
sbb
lds
mov
or
push
out
mov
je
adc
mov
inc
push
xchg
lret
or
nop
fucomi
jge
jmp
fisubl
pop
add
inc
or
adc
sbb
movsl
enter
in
or
push
mov
pop
les
push
dec
xor
xchg
popa
fstps
push
and
rorb
lret
ljmp
mov
pop
inc
sub
push
sbb
xchg
adc
loopne
pushf
call
pop
xchg
and
loop
nop
mov
roll
xor
push
idiv
decb
repz
inc
loopne
jns
idivl
ret
mov
and
es
xchg
jae
inc
into
rcrl
outsl
movsl
jecxz
sub
adc
leave
inc
f2xm1
scas
aad
bound
push
mov
jb
cli
cltd
leave
jne
out
adc
out
aad
pop
scas
stos
jl
xchg
pop
and
jle
mov
stos
ds
in
stos
ret
mov
fabs
or
add
in
push
sahf
xchg
add
jns
push
fmuls
push
ret
cli
xorb
sub
mov
scas
rol
xchg
push
andb
icebp
push
lret
mov
add
sbbb
dec
jecxz
pop
inc
sarb
enter
cmp
mov
or
addl
ljmp
inc
dec
nop
lret
sub
pop
pop
imul
sarb
cmp
test
test
push
adc
bts
mov
clc
stc
cmp
sub
call
cmp
jno
push
lea
je
pushf
push
pushf
movl
lea
jmp
jb
stc
pop
je
data16
pop
pop
cmp
lret
loopne
or
mov
mov
xor
das
dec
fwait
dec
mov
and
cmp
nop
mov
pop
jle
es
jle
not
lahf
popl
pop
insl
mov
jmp
fcoml
repnz
shl
and
aam
test
push
dec
pop
aam
jp
mov
mov
pop
cmp
xor
lret
mov
pop
push
xlat
ljmp
xor
mov
stos
ret
leave
in
sub
sbb
xchg
iret
fs
icebp
fnstcw
add
dec
inc
jle
sub
test
scas
mov
mov
idiv
or
pusha
pushf
jmp
fidivrs
pop
iret
in
pop
pop
xchg
mov
sbb
xlat
push
dec
and
sti
insl
stc
shll
pop
and
jp
jo
sub
popf
fxch
xorl
mov
or
arpl
mov
cmp
push
mov
pop
adc
pushf
test
mov
aaa
aas
cwtl
mov
or
or
dec
and
push
mov
cmp
cmpsb
jmp
test
fistps
add
sub
lock
lcall
movsb
adc
fdiv
stos
xor
iret
test
loopne
gs
fs
add
cli
es
cmp
add
xor
xchg
xchg
movl
fstps
jle
shll
pushf
rclb
and
jmp
ljmp
xor
adc
xor
mov
push
pop
xchg
aad
insb
sub
cmp
and
sbb
and
sub
jg
add
call
test
cs
repnz
iret
imul
sbb
andb
cmp
inc
mov
xor
pop
xchg
movl
ljmp
inc
add
xor
mov
lret
test
xor
ds
paddsb
or
inc
mov
sbb
cmp
cmc
mov
xchg
icebp
test
cli
popa
mov
xchg
mov
mov
in
add
mov
inc
push
sti
and
cmc
addr16
icebp
jnp
orl
std
sub
es
cmpsl
aas
ret
mov
inc
mov
outsl
dec
lret
mov
mov
jmp
pushf
jl
mov
pop
adc
dec
pop
mov
shll
and
sbb
hlt
jge
mov
mov
adc
cltd
repnz
fwait
push
xlat
std
lret
repz
inc
sbb
adc
push
gs
cmp
inc
add
scas
cmp
mov
jo
sbb
cmc
leave
jno
push
jb
insl
or
xchg
leave
push
stc
pop
outsb
iret
movsb
mov
push
fiaddl
dec
fisubs
pop
adcl
hlt
popa
sbb
xor
lock
pop
sub
aaa
pop
movsb
cmp
fimuls
sbb
pop
or
lods
sbb
adc
aaa
jae
out
fbstp
test
xchg
ret
cmpsb
xchg
push
outsb
cld
lcall
jl
mov
loop
pushf
loop
clc
ds
fs
mov
notl
sub
clc
push
mov
push
mov
and
xor
fdivr
xchg
cld
out
mov
add
jnp
lods
cld
push
mov
dec
push
jmp
pop
cmp
jle
push
in
pmaxsw
sub
addr16
or
jge
cmc
xchg
cmc
pop
jae
inc
cltd
xchg
aad
dec
push
cmc
jecxz
arpl
cltd
pop
cltd
jbe
or
sbb
cmpsl
adcl
pusha
enter
imul
dec
jmp
inc
and
adc
fs
jmp
jmp
call
jmp
xchg
pusha
movl
movl
pusha
movl
movb
pushf
movb
movw
lea
jmp
and
mov
xchg
rclb
lret
into
or
cmp
adc
jo
out
mov
inc
fcomps
push
jle
push
imul
inc
pop
jo
dec
loopne
jp
fsts
mov
xchg
movl
call
mov
mov
mov
push
jmp
lea
jbe
jmp
pusha
sub
add
pushf
pushf
mov
lea
jmp
mov
movl
movb
lea
ja
call
add
dec
gs
popa
addr16
outsl
js
add
orl
push
xchg
shld
xchg
mov
movsbw
pushf
mov
not
mov
test
call
stos
pushf
lea
jmp
xor
pop
ss
xor
cmp
xlat
cmpsl
sub
or
jle
cmp
sbb
pop
movsl
cld
adcb
enter
ss
sarb
pop
sbb
jl
push
xchg
mov
push
jp
lea
xchg
mov
dec
filds
lock
cmpsl
pcmpgtb
lahf
out
inc
mov
dec
mov
repz
adc
pushl
iret
sbbl
bound
ret
mov
out
rol
xchg
sub
sub
mov
and
push
scas
mov
cmp
lahf
movzbw
jmp
call
lea
mov
sti
adc
mov
push
push
mov
inc
mov
cmpsb
push
cmpsb
hlt
jmp
js
xor
or
clc
ret
sbb
repz
hlt
cmp
mov
mov
call
jb
sbb
jo
add
in
jbe
xchg
mov
mov
cmp
call
insb
fprem1
cmp
imul
dec
or
add
shlb
clc
fdiv
push
loop
add
push
jnp
jmp
jo
fstpl
testb
cld
leave
sbb
push
lock
mov
aad
push
adc
stos
xor
or
mov
push
jl
pop
lcall
outsl
sbb
test
fprem1
stc
clc
cmp
pusha
mov
lea
je
jmp
inc
lret
sete
inc
loopne
cs
jl
cs
insl
and
push
xchg
push
pop
mov
mov
sub
inc
sub
stos
hlt
out
popf
adc
mov
pop
mov
dec
lods
pop
xchg
movsb
shrl
nop
adc
sub
jnp
jecxz
dec
in
adc
lret
js
outsb
cmp
push
int
pop
jns
lds
divb
das
div
gs
xchg
arpl
fbstp
mov
aad
xor
mov
xor
sub
hlt
sbb
push
into
mov
sub
pop
int3
cmc
gs
mov
lods
cmpsl
cmp
dec
sub
cmpsb
sbb
ret
leave
and
leave
lds
jecxz
pop
int3
divl
mov
lcall
add
adc
into
add
jl
ljmp
imul
and
dec
movb
call
mov
cmp
mov
inc
dec
inc
frstpm(287
pop
dec
pop
movsl
xchg
and
nop
add
test
ljmp
adc
sti
mov
jmp
icebp
sbb
lods
insb
cmpl
xor
out
cmpsb
mov
ret
pop
lahf
lods
aas
cmp
out
mov
test
pop
lcall
and
cli
jg
pop
fdivl
test
mov
aam
pop
and
rclb
push
adc
xchg
sti
xchg
in
push
scas
mov
mov
xor
adc
lea
scas
xor
jne
cmp
test
mov
idivl
jns
add
out
test
lahf
adc
push
sub
das
enter
in
mov
ss
cli
cmpb
data16
cmpb
mov
jp
mov
shr
xchg
adc
or
scas
lods
mov
sub
in
cmpsb
push
xchg
adc
es
xor
cld
shll
jb
sub
push
mov
pop
adc
aad
decl
arpl
jecxz
int
push
mov
scas
mov
shrb
jne
pusha
pusha
stos
pushl
pushf
movb
movw
lea
jmp
test
add
jmp
jno
fs
or
arpl
outsb
push
add
cltd
lea
lods
pop
fnstsw
pop
inc
pop
sti
lret
mov
xchg
sahf
cltd
jnp
pop
mov
ss
or
mov
sbb
orl
imul
test
lahf
lods
stc
lahf
jo
stc
push
cwtl
mov
jmp
mov
inc
loope
aaa
add
add
vmread
pop
and
mull
mov
leave
enter
jb
adc
mov
out
push
cmp
sbb
dec
push
scas
mov
add
mov
call
mov
ds
jae
jp
cwtl
dec
out
in
dec
ss
xchg
in
in
ja
movsl
pop
stos
mov
ljmp
bound
lcall
ret
sahf
mov
loop
xchg
insb
xchg
mov
rclb
jo
adc
add
push
scas
mov
add
mov
adc
mov
fmul
push
loopw
push
sahf
test
add
lcall
adc
xchg
cmp
push
xlat
inc
mov
aam
xchg
lods
sbb
fbstp
addr16
add
test
jnp
cmpsl
add
mov
orb
jbe
jno
mov
in
imul
mov
sub
stos
shlb
pop
fwait
scas
mov
fsubp
or
imul
cld
add
shll
mov
push
pushf
pop
cmp
imull
push
xchg
inc
cli
jb
or
cmp
sahf
fsubrl
cwtl
or
push
scas
mov
jo
insl
mov
sub
lock
cld
outsb
cmp
or
lcall
pushf
pop
cmp
ret
push
out
mov
ss
push
mov
fcompl
mov
int
cld
jmp
addr16
subb
sub
repz
dec
adc
pop
cmp
insl
imull
xor
adc
push
inc
jo
add
push
scas
mov
gs
bsf
btr
mov
sbb
ror
lea
mov
bswap
shld
sub
das
test
mov
push
shrd
push
call
inc
call
jmp
pushl
pushf
lea
jb
cmc
cmp
jmp
cmp
call
pop
pushf
pusha
movb
pushl
ret
sub
inc
neg
or
shl
cmc
sub
lea
ja
push
not
stos
call
pusha
mov
clc
call
mov
pushl
popl
pushf
pushf
pushf
pushl
ret
neg
call
cmp
push
movb
lea
ja
movsbl
pushf
pop
setp
pop
setg
mov
pop
lea
push
push
mov
bswap
movsbw
mov
mov
pushf
mov
jmp
fimull
arpl
add
in
fwait
jae
or
aad
scas
popa
or
inc
xor
lods
jns
mov
add
out
adc
outsl
add
pop
hlt
icebp
jl
mov
in
repz
mov
xchg
or
test
test
andl
cmp
mov
dec
and
aad
inc
ss
xchg
push
pop
jle
sqrtps
shll
mov
and
mov
cltd
fidivrl
pushl
fnstsw
rcll
mov
mov
or
int3
xor
mov
ljmp
negl
cmp
mov
shll
loope
add
adc
lahf
call
das
mov
in
mov
shr
and
imul
ss
and
xor
pop
jle
stos
rorb
cmc
mov
and
push
aaa
fcomip
pop
iret
jge
daa
push
mov
test
xor
repnz
inc
popf
loope
sbb
mov
scas
mov
and
gs
or
sub
dec
test
cmpsb
push
inc
inc
gs
inc
inc
and
inc
gs
and
rcl
sub
dec
push
inc
gs
sarl
das
sub
dec
in
and
push
inc
xlat
dec
fucomip
aas
cltd
sub
aaa
push
inc
gs
fwait
sub
add
popa
mov
dec
cltd
sub
push
inc
gs
movsb
adc
sub
in
inc
gs
popa
sub
pop
xor
xchg
dec
fldenv
pushf
sub
push
inc
gs
sbb
xchg
jo
inc
gs
push
aam
mov
cmpsl
push
inc
gs
and
lea
mov
icebp
adc
pushf
sub
push
inc
gs
mov
push
mov
push
lea
gs
popa
xor
push
inc
gs
subb
xchg
push
inc
gs
out
push
inc
gs
sbb
mov
cmpsb
jg
inc
gs
and
ds
sub
xor
gs
aam
xor
mov
inc
ds
inc
gs
mov
sub
adcl
xor
std
dec
inc
mov
mov
jbe
push
inc
rolb
add
mov
cmpsb
cmp
inc
gs
xchg
lret
mov
mov
push
inc
gs
setl
gs
sbb
movsl
push
inc
gs
push
jp
inc
gs
xor
sub
push
inc
gs
or
sub
icebp
adc
pop
push
inc
gs
adc
sbb
jbe
push
inc
gs
fbstp
call
xor
mov
cmpsb
and
inc
or
mov
push
inc
gs
in
jo
stos
sbb
jbe
pop
inc
gs
mov
push
cmp
gs
int3
mov
sub
dec
pop
inc
gs
mov
xchg
aaa
rolb
mov
setle
add
call
movl
pusha
lea
jmp
xor
lea
push
push
mov
pop
adc
jnp
add
jmp
cmc
mov
sti
call
inc
jo
pushf
and
lcall
mov
xor
push
roll
cmp
jg
pop
jns
mov
nop
roll
test
jne
enter
andl
or
mov
bound
jmp
and
xor
iret
pushf
inc
pop
mov
hlt
or
xor
cmp
sub
shll
cmp
in
cmc
dec
mov
js
sub
in
cmpsb
int3
ss
push
jmp
cmc
rcll
int
andl
mov
fs
push
jmp
fcomps
inc
dec
les
sub
mov
aaa
push
addr16
ljmp
sub
xor
popa
int
pop
popf
cltd
int
push
scas
scas
add
test
and
addr16
inc
cs
leave
cmp
mov
outsl
ja
pop
add
loopne
adc
mov
ja
xchg
mov
mov
inc
mov
test
cmc
mov
popa
ret
dec
or
xchg
pop
dec
pop
sub
inc
lret
ljmp
dec
ja
adc
adc
push
subb
sub
cs
or
aaa
mov
ficompl
xor
cld
sbb
pop
outsl
push
scas
scas
test
xchg
sar
int
in
sbb
xchg
add
ror
ss
pop
xor
call
cwtl
popa
leave
jecxz
leave
roll
repnz
lcall
repz
mov
mov
cmp
push
sbb
sahf
inc
mov
sbb
pop
scas
push
scas
lods
fnstsw
stc
jmp
into
dec
adc
loope
addr16
push
lods
dec
adc
jb
lock
sbb
in
paddd
mov
movsb
add
or
nop
xor
sub
sub
xchg
xchg
add
in
sbb
fmul
push
xor
and
push
adc
rcll
mov
popf
sub
das
xchg
dec
adc
lahf
jmp
in
xchg
mov
push
xchg
call
cli
sbb
sub
pop
and
xchg
in
int3
mov
dec
lods
int3
lock
pushf
out
push
pop
iret
ret
push
jbe
aas
adc
pusha
inc
xchg
xlat
fldenv
sbb
test
xchg
loopne
lea
jae
cmp
jle
pop
repnz
fstl
test
fsts
xchg
rcrl
aaa
imul
test
xor
in
mov
or
ljmp
jns
pop
push
cwtl
aas
ret
fists
add
ret
lret
push
cmp
jbe
or
icebp
sbb
pop
adc
xchg
lahf
mov
cmp
mov
push
or
out
cmpsl
dec
fcoms
mov
subb
mov
adc
adc
lods
sub
xchg
jmp
mov
pusha
add
call
mov
pusha
cwtl
pop
cwtl
mov
call
call
push
lea
call
pushf
lea
jae
call
pusha
pushf
lea
ja
stc
pushf
cmc
stc
imul
mov
jmp
call
mov
btc
dec
mov
test
clc
cmp
or
pusha
lea
je
call
mov
push
jmp
mov
js
sti
push
mov
cmp
add
cmp
ret
push
push
mov
out
hlt
out
les
imul
xlat
cmp
xor
mov
ljmp
jle
lret
push
scas
stos
loope
int
and
add
clc
push
bt
neg
bt
cmc
sub
bt
clc
sub
push
call
pushf
call
mov
mov
pushf
push
mov
lea
jmp
mov
pusha
push
mov
pushf
popl
movb
mov
jmp
lea
lea
push
xchg
mov
movsbw
mov
mov
pushf
cld
call
dec
rcl
rcl
mov
mov
test
jmp
call
add
jmp
call
mov
mov
pushl
popl
pushf
push
pushf
lea
jmp
mov
pushf
jmp
mov
push
mov
movw
pushf
mov
jmp
mov
pushl
mov
mov
pushf
pushl
ret
pushf
mov
jmp
pushl
repz
popl
jmp
shl
push
call
jmp
call
or
btc
movzbw
mov
test
test
call
pusha
add
pushl
call
pushf
pushl
mov
pushf
jmp
jmp
call
movzbl
bt
jmp
pusha
sub
bt
stc
call
call
mov
push
lea
jmp
pusha
pushf
pushf
popl
movb
pushl
pushl
popl
pushf
lea
jmp
push
call
pushf
mov
pushf
repz
popl
jmp
cmc
clc
cmc
not
pushf
not
pushf
call
push
add
pusha
jmp
mov
mov
jmp
pusha
xor
pusha
call
shr
sub
jle
or
jbe
cmp
pusha
xor
mov
lea
ja
push
inc
push
pusha
call
mov
movb
call
inc
bswap
pushf
not
notl
pushf
neg
mov
jmp
bswap
add
bsf
not
movzbw
mov
cmc
mov
call
call
sub
pushf
add
stc
neg
call
pushf
mov
pushf
pushf
jmp
pusha
rol
cmc
mov
neg
pushf
cmc
call
call
mov
pusha
pusha
jmp
push
jmp
add
pushf
mov
pushl
pushl
ret
pushl
mov
lea
je
mov
pusha
pushf
pushl
lea
jmp
call
mov
pushf
pushf
lea
jmp
call
movw
pushf
mov
pushf
mov
pushl
lea
jmp
pushl
popl
pusha
pushf
pushf
lea
jmp
mov
mov
pusha
mov
pushf
pushf
pushl
mov
jmp
mov
push
pushl
mov
jmp
pushf
mov
pushf
lea
jmp
test
cmp
sub
cmc
mov
stc
pushf
add
test
pusha
xor
bt
sub
test
xor
movb
bt
cmp
cmp
add
cmc
pushl
cmc
mov
mov
movb
bt
clc
clc
sub
pushf
pushf
clc
mov
pushl
call
mov
push
mov
push
push
mov
lea
jl
pushf
pusha
pushl
popl
pusha
pushl
push
lea
jmp
clc
pusha
test
cwtl
mov
mov
pushl
sub
pushf
push
call
aam
clc
xor
mov
rcl
push
call
sbb
bsf
bt
mov
cmp
bt
and
shl
mov
jmp
movb
mov
movb
mov
push
lea
jmp
jmp
pushf
pushl
lea
ja
aam
shrd
mov
mov
inc
shl
ja
lea
xadd
aad
sub
shrd
xadd
sbb
btc
lea
bswap
and
rol
sub
jmp
seto
jg
test
pusha
lea
stc
jmp
rep
rcl
mov
std
clc
pop
mov
call
call
call
lea
jp
pushf
lea
jmp
mov
push
pushl
mov
lea
jmp
pushf
clc
bt
cbtw
add
jge
cmc
cmp
bt
cwtl
clc
cmp
cmp
call
cmc
test
add
call
rcl
mov
pusha
jmp
add
sub
bt
movzbw
xor
ror
rol
ror
add
dec
setns
bswap
xor
bswap
lea
pusha
call
push
call
dec
neg
mov
cmp
bt
stc
add
pushf
pushl
pushf
lea
jmp
push
xchg
mov
repz
sar
xadd
push
mov
rol
rcl
call
mov
pushf
lea
jmp
neg
push
pushf
xor
xchg
jle
push
mov
lea
push
pushl
popl
rol
push
and
pushf
movzbw
dec
mov
dec
rol
neg
bts
sbb
xadd
bts
xor
and
add
ror
lea
and
pushl
sub
mov
sbb
shrd
shl
mov
dec
mov
xadd
bts
rcl
add
push
mov
sub
add
lea
xor
clc
ror
ror
add
jmp
mov
call
mov
bt
sub
jmp
push
mov
mov
mov
mov
pusha
movw
lea
jmp
jmp
mov
push
lea
ja
push
mov
pusha
lea
jmp
pushl
mov
call
pusha
call
push
pushf
mov
jmp
mov
movb
pushf
pushf
lea
jmp
bt
jmp
pusha
call
pusha
pusha
mov
movb
movb
jmp
shld
bts
xchg
mov
bsr
setnp
mov
btr
sub
bts
add
shl
setnp
rol
neg
setp
not
or
and
pushf
sub
not
mov
pushf
pusha
pushf
dec
call
jmp
movw
test
mov
test
clc
call
pushf
repz
popl
pusha
mov
jmp
mov
mov
pushf
bt
movl
pusha
add
pushl
push
pushf
pushf
popl
call
pusha
movl
mov
call
btc
cmc
pusha
mov
pushf
mov
jmp
mov
pushl
push
lea
je
repz
pushf
pusha
jmp
stc
movw
ror
push
call
neg
stc
pushl
jmp
rol
rcr
pusha
bsf
shld
and
movsbl
mov
bt
push
sub
push
lea
jle
mov
push
mov
pushf
lea
jmp
jmp
jmp
mov
jmp
mov
pusha
pushf
mov
movb
mov
call
mov
push
mov
mov
mov
lea
jmp
add
pushl
pushf
lea
jmp
pusha
movw
push
call
add
call
call
movl
pushl
inc
stc
cmp
pushl
pushf
xor
pusha
push
cmp
mov
add
jmp
pushf
pop
pushf
movsbl
cld
jmp
sub
test
pushf
cmp
clc
and
call
pusha
movb
pusha
mov
pushf
mov
mov
push
pushf
pushf
lea
jmp
pushf
movzbl
cmc
cmc
sub
add
test
xor
movb
sub
cmc
setbe
sar
xor
btr
adc
call
decl
push
jmp
jmp
xchg
pushf
lea
jp
bswap
seto
push
not
push
lea
xchg
pushf
setge
repz
popl
not
cmc
push
not
btc
jmp
pushf
pushl
pushl
popl
mov
pushf
pusha
lea
jmp
cmp
pusha
mov
mov
lea
ja
rdtsc
lahf
bt
ror
mov
cmp
rcl
lea
jmp
mov
jmp
call
jmp
pushf
pushf
mov
jmp
mov
call
mov
pushf
mov
call
add
sub
shl
mov
neg
add
or
sbb
btr
xor
bswap
shl
mov
mov
call
pushf
movb
mov
movb
call
call
mov
jmp
pushf
pushl
decl
push
lea
jne
pushf
call
adc
mov
pushf
adc
setle
shr
mov
cmp
push
pushf
sub
call
jmp
mov
push
call
cmc
jmp
pusha
pushf
mov
pushf
mov
movb
pushf
lea
jmp
mov
call
pushf
mov
push
movb
movl
lea
jmp
pushf
pushl
mov
mov
jmp
bts
rcr
mov
pushf
sub
call
mov
movb
lea
jmp
pushf
mov
lea
jne
pusha
pusha
pushf
mov
mov
pushf
lea
jmp
pushf
mov
jmp
push
call
push
call
call
jmp
pusha
pushf
mov
pushl
pushf
call
push
mov
pushl
pushf
repz
popl
push
mov
pushf
jmp
mov
pushl
call
jmp
pushf
not
jmp
call
jmp
clc
clc
call
lahf
pusha
movzbl
mov
jmp
lea
push
call
pushf
movb
push
lea
pushl
mov
mov
mov
pushf
movw
lea
jmp
pushf
mov
push
lea
jmp
sub
pusha
pushl
mov
test
sub
push
jmp
mov
push
mov
lea
jmp
jmp
call
setp
pusha
movsbw
sar
not
rcl
xor
jmp
call
call
ror
sub
xchg
sar
lea
bts
push
movsbl
neg
and
cmp
sar
sub
movsbl
bswap
pusha
mov
bswap
pushf
pusha
pop
mov
movsbw
pusha
mov
call
mov
movzbw
movzbw
mov
bswap
pusha
pushf
pushf
popl
pushf
push
xchg
not
call
add
movb
pushf
pushl
lea
jmp
jmp
jmp
mov
jmp
mov
pushf
pushf
lea
jmp
clc
mov
sub
not
mov
cmp
sub
clc
bt
shl
call
clc
mov
pusha
sub
pusha
call
mov
pushf
call
push
pushf
popl
movb
pushf
push
pushl
popl
pushf
lea
jmp
jmp
jmp
call
not
bt
shl
xor
pushf
lea
dec
clc
lea
rcr
add
inc
btc
ror
bswap
movzbl
cmp
call
pushf
mov
pusha
push
pushf
lea
jmp
pusha
repz
popl
call
movb
mov
push
lea
jne
and
mov
push
and
pushf
pushl
cmp
movb
jmp
mov
movb
push
pushl
ret
pusha
call
mov
call
pushl
mov
pushf
lea
jmp
bt
and
push
push
jmp
jmp
mov
push
lea
jmp
push
jmp
pushf
mov
mov
jmp
pusha
jmp
push
pusha
movb
pushf
inc
jmp
bswap
mov
stc
test
clc
add
pusha
call
bsr
mov
or
mov
bt
pusha
pusha
add
pushl
pushf
mov
pushf
push
lea
jmp
movb
mov
mov
push
push
lea
jmp
pushf
pusha
mov
call
pushf
popl
push
push
call
mov
call
pusha
mov
pushf
lea
jmp
call
mov
jmp
jmp
jmp
jmp
xor
mov
cmp
bt
stc
stc
neg
jmp
sub
call
push
call
pushf
call
pushl
mov
push
mov
movb
repz
popl
jmp
movw
mov
mov
mov
pushl
push
lea
jmp
lea
jbe
popl
push
pushf
movb
push
lea
jmp
mov
pushl
pushf
push
lea
jmp
add
stc
bt
cmc
sub
jmp
push
pushf
jmp
mov
pushf
movw
pushf
lea
jmp
xor
xadd
test
mov
bt
pushf
inc
add
pusha
rcl
ror
bswap
inc
rcl
lea
pop
call
mov
pushf
pusha
mov
jmp
add
mov
call
pusha
pusha
mov
push
call
mov
and
sete
or
mov
jmp
aaa
mov
pushf
test
cmc
bswap
call
mov
movb
pushf
pushl
pushf
pushl
ret
call
pusha
jmp
ror
push
lea
pushl
xor
push
shld
mov
call
cmc
cmc
shl
call
pushf
push
mov
jmp
ror
jmp
pusha
pushf
pushf
pushf
popl
movb
pushf
pushl
popl
pushf
lea
jmp
push
pushf
pushl
pushf
push
mov
pushf
pusha
pushl
mov
call
push
repz
popl
mov
jmp
cmc
add
pusha
push
push
pushf
lea
jmp
mov
pushl
lea
jmp
mov
mov
lea
jmp
cld
call
mov
mov
call
jmp
mov
jge
pushf
mov
push
pushf
pusha
pushf
mov
push
jmp
jb
bt
pusha
shld
jmp
movw
mov
pushl
push
pushf
lea
jmp
cwtl
pushf
mov
seto
jmp
sub
cmc
add
cmc
cwtl
bt
stc
pushf
sub
pushf
stc
mov
jmp
not
push
test
bt
mov
not
jmp
mov
push
mov
push
push
pushf
lea
jmp
call
pushl
popl
pushf
lea
jmp
jmp
add
movb
mov
pushf
pushf
push
mov
mov
pushl
lea
jmp
jmp
call
decl
jmp
call
mov
repz
popl
mov
call
bts
shrd
bsr
bswap
mov
jmp
cmc
lea
neg
shl
ror
bsr
xor
movw
add
not
bsf
shld
lea
shl
sub
btc
mov
movsbw
not
xchg
mov
cmc
adc
stc
add
shrd
stc
jmp
cmp
test
stc
test
shld
jmp
call
pushl
pushf
popl
push
mov
pushl
movl
pushl
popl
pushl
lea
jmp
test
clc
add
jmp
mov
movw
call
add
cmp
popf
pusha
push
pusha
lea
jmp
setp
movzbl
jmp
stc
clc
rol
call
decl
pushf
pushf
jmp
aas
adc
mov
shl
push
stc
mov
pusha
push
sub
cmc
shr
pushf
call
repz
popl
push
push
mov
pushf
jmp
pusha
xchg
pusha
not
pushf
jmp
lea
jne
popl
pushf
push
movw
pusha
lea
jmp
push
push
mov
pushl
mov
movb
movb
movw
mov
pushf
mov
pushf
pushf
pushf
repz
popl
movw
pusha
mov
pusha
call
shl
shrd
inc
mov
seta
ror
sar
pusha
mov
jmp
rep
shl
mov
rcl
btc
rol
mov
bt
pushl
popf
pushl
pushl
lea
jmp
cbtw
cmp
cwtl
test
cmp
bt
test
sub
push
mov
pushf
push
pushf
pushf
lea
jmp
push
dec
stc
call
pushl
popf
movb
movb
mov
lea
jmp
stc
jmp
add
jmp
bswap
bts
shl
not
pushf
or
btc
shl
xor
rcr
btr
rol
bswap
and
adc
mov
jmp
pushl
mov
push
pushf
mov
lea
jmp
mov
jmp
mov
push
jmp
push
jmp
inc
lea
js
xor
movsbw
push
bswap
dec
cmc
add
shl
movzbl
shld
lea
pushl
rcr
mov
test
neg
stc
add
pusha
pushf
jmp
stc
add
bt
sub
stc
stc
not
test
call
xadd
mov
shr
bt
sete
not
mov
push
sub
jmp
clc
shl
push
pushf
mov
jmp
jns
cmc
test
test
cwtl
test
call
cmc
jmp
call
mov
call
push
lea
js
mov
pushf
pushf
pushf
pushf
lea
jmp
movw
mov
push
repz
popl
push
push
mov
pushf
call
jmp
lahf
pusha
mov
pushf
divl
call
add
mov
pusha
pusha
cmp
cmp
add
pushl
pushf
pushf
lea
jmp
mov
push
call
lea
ja
pusha
mov
pushf
call
mov
movb
lea
jmp
cmc
cmp
add
movw
push
push
lea
jmp
aaa
rol
sbb
stc
mov
jmp
cmp
mov
pusha
add
pushl
pushf
lea
jmp
lea
jne
jmp
pusha
pushl
mov
jmp
add
mov
push
lea
jmp
movl
lea
jae
jne
call
mov
pusha
call
btr
and
mov
push
call
bt
call
pusha
lea
jne
pusha
pusha
mov
pushf
pushf
pushl
push
lea
jmp
cmp
dec
sar
mov
pushf
add
push
mov
movw
pushf
lea
jmp
cmp
push
stc
pushl
popl
stc
jmp
pushf
call
push
mov
pushf
mov
jmp
sub
pushf
movb
push
mov
pushf
pusha
lea
jmp
mov
jmp
movb
mov
mov
mov
pushf
lea
jmp
cmc
bt
sub
call
mov
push
movw
jmp
call
add
pushf
lea
jmp
lea
jne
rcl
xorb
movzbw
movsbw
pushf
pop
pop
pusha
pusha
lea
jmp
cmp
xadd
mov
call
pushl
sub
call
mov
mov
pushl
pushf
pushf
pushl
ret
push
push
repz
popl
jmp
pushf
pushf
lea
jmp
pushf
mov
pushf
lea
jmp
jo
mov
pushf
lea
jmp
call
call
mov
pushf
repz
popl
jmp
setle
lahf
movzww
cmc
push
xchg
push
jmp
bt
test
xor
call
repz
popl
call
mov
movb
pushf
pusha
pushf
lea
jmp
mov
push
mov
movw
pushl
lea
jmp
bt
test
cmp
add
pushl
mov
pushl
pushf
movb
push
lea
jmp
push
mov
jmp
mov
pushl
lea
jmp
repz
popl
pushl
pushl
movw
call
lea
mov
bsr
btc
mov
cmp
add
jmp
mov
pushf
lea
cpuid
stc
bt
clc
sub
push
bt
cmpl
push
call
jmp
pushf
popl
pusha
jmp
mov
lea
push
mov
pushf
call
jmp
mov
jmp
pushl
popl
push
pushl
pushf
push
lea
jmp
mov
shld
push
neg
mov
not
sub
mov
jmp
movzbw
push
call
shl
not
neg
lea
sar
sub
movzbl
lea
sub
shr
pusha
btc
and
cmp
sub
jmp
mov
jmp
repz
popl
jmp
pusha
mov
push
jmp
xchg
cmp
mov
rol
add
pushf
mov
setp
pusha
mov
call
movb
mov
mov
pusha
mov
lea
jmp
call
dec
mov
pusha
rol
add
btr
pop
or
sbb
movzbl
stc
or
bsf
mov
mov
clc
cmc
neg
cmc
pushl
stc
add
pushf
pushl
jmp
lea
jne
push
mov
movb
pushf
mov
lea
jmp
mov
pushf
mov
pushf
push
lea
jmp
mov
xor
mov
jmp
pusha
mov
movzbw
movzbw
call
mov
movl
mov
push
lea
jmp
mov
pusha
mov
pushf
mov
push
lea
jmp
xor
neg
push
not
mov
push
test
call
pusha
shl
mov
ror
sete
mov
pusha
cmc
stc
sub
pushl
cmp
cmc
pushl
shr
push
pushl
mov
mov
pushf
popl
movb
push
call
and
push
pushf
pushf
popl
pushl
call
cmp
call
push
pushf
movb
mov
push
movl
repz
popl
call
movb
repz
popl
mov
mov
call
pusha
movw
push
mov
pusha
jmp
cmc
add
pusha
pushf
pushl
call
jmp
movb
jmp
mov
pushf
push
movl
lea
jmp
jmp
movb
push
mov
pushf
mov
pushf
lea
jmp
pushl
mov
call
cmc
bt
add
stc
push
test
sub
pushl
push
pushf
mov
movw
push
movw
lea
jmp
mov
mov
jmp
call
mov
movb
mov
mov
repz
popl
jmp
pushf
pushl
lea
jne
call
mov
pushf
mov
movb
pushf
jmp
pusha
pusha
mov
mov
mov
lea
jmp
jmp
mov
pusha
lea
jmp
cld
movb
rep
pushf
std
mov
bsf
and
lea
mov
cld
cmc
pushl
popf
pushl
mov
pushl
lea
jmp
xor
rdtsc
rdtsc
pusha
cmp
sub
push
pushf
jmp
dec
pushf
mov
jmp
mov
lcall
call
mov
ljmp
mov
ljmp
mov
mov
call
mov
jmp
mov
incl
push
scas
mov
lcall
mov
call
lods
mov
jmp
xchg
mov
push
test
clc
movsb
mov
mov
stos
mov
call
cmpsb
mov
jmp
movsb
mov
ljmp
mov
ljmp
test
incl
mov
ljmp
mov
lcall
pushf
mov
incl
mov
ljmp
mov
mov
inc
cmpsl
mov
ljmp
mov
inc
mov
call
mov
pushl
mov
jmp
mov
ljmp
mov
call
movsl
mov
pushl
xchg
mov
lcall
mov
mov
decl
mov
fildll
mov
call
mov
ljmp
mov
lcall
cmpsl
mov
call
mov
decl
mov
call
fwait
mov
ljmp
mov
lcall
mov
ljmp
mov
dec
lods
mov
call
mov
ljmp
mov
mov
ljmp
fwait
mov
call
mov
lcall
call
mov
call
pushf
mov
call
mov
jmp
cmpsb
mov
ljmp
mov
incl
popf
mov
mov
cmpsb
mov
call
stos
mov
push
scas
mov
inc
mov
push
test
incl
mov
incl
mov
push
lods
mov
lcall
mov
call
stos
mov
call
mov
lcall
mov
call
movsl
mov
incl
mov
cmp
mov
ljmp
mov
mov
push
lods
mov
call
stos
mov
incl
mov
call
mov
pushl
mov
jmp
cltd
mov
incl
mov
decl
mov
incl
scas
mov
call
stos
mov
lcall
mov
lcall
mov
incl
ljmp
fwait
mov
jmp
mov
mov
call
mov
jmp
mov
mov
incl
mov
fildll
mov
mov
mov
mov
incl
mov
call
movsl
mov
call
stos
mov
pushl
mov
call
mov
jmp
mov
mov
jmp
xchg
mov
call
mov
incl
mov
mov
push
lods
mov
pushl
mov
incl
mov
call
stos
mov
lcall
mov
mov
mov
incl
mov
ljmp
stos
mov
incl
lcall
mov
jmp
mov
incl
popf
mov
ljmp
xchg
mov
lcall
mov
incl
mov
clc
movsb
mov
jmp
test
call
mov
decl
mov
incl
call
loop
mov
sar
dec
pusha
cmc
mov
jmp
pushl
popl
mov
movb
pusha
pushf
lea
jmp
clc
add
mov
pushf
push
pushf
popl
call
jmp
movl
mov
movb
pushf
jmp
add
pushf
lea
jmp
shrd
jmp
pushf
call
bsf
add
shl
mov
pusha
stc
inc
call
mov
clc
bt
push
xadd
neg
push
sar
add
rcl
pushl
xadd
sar
push
xor
bswap
mov
bt
neg
stc
sar
inc
xor
not
add
inc
mov
movsbw
cmc
neg
sub
pusha
sar
pushf
lea
bt
bswap
not
shl
mov
pushf
add
bts
mov
and
push
sub
add
test
xor
jmp
rcr
shl
bts
mov
stc
adc
stc
shr
mov
cmp
sub
bt
jmp
call
btc
push
mov
mov
pushf
clc
cmp
add
pushf
pushl
pushf
pusha
lea
jmp
bts
sbb
mov
call
pushf
mov
push
lea
je
pushf
pusha
mov
call
call
lea
jg
push
mov
push
call
mov
repz
popl
pushf
jmp
call
bsf
bswap
test
push
mov
cmc
movw
test
xchg
jmp
push
movl
pushl
mov
call
rcl
cmc
lea
ror
shl
xor
inc
lea
setl
dec
dec
sar
ror
add
pushl
jmp
cwtl
bswap
jmp
pushf
popl
pushf
call
movb
mov
mov
movb
pusha
pushl
pushf
popl
pushf
movb
mov
pushl
popl
pushf
push
movw
movb
lea
jmp
push
cmc
add
bt
cmc
movw
bt
shrd
call
mov
pusha
mov
push
mov
pushf
lea
jmp
pushf
pushf
mov
pusha
mov
push
lea
jmp
call
call
add
pushf
mov
mov
pusha
pushl
pushf
lea
jmp
sub
push
pushf
cmp
add
push
pushf
popl
pusha
pushl
popl
mov
lea
jmp
mov
pushl
mov
movw
lea
jmp
jmp
lahf
call
lea
jbe
lea
pusha
pusha
inc
movb
xor
call
mov
pusha
movb
jmp
pushl
pushf
inc
jmp
bt
pusha
test
or
push
add
jg
bt
xor
pusha
inc
mov
decl
lea
jp
push
lea
jne
jmp
pushf
lea
call
movw
mov
mov
mov
push
lea
jmp
and
mov
movzbl
rdtsc
ror
pop
pusha
aad
shrd
movsbw
mov
shld
shl
mov
mov
aaa
pop
inc
mov
shl
mov
xor
mov
movzbw
pushl
popf
xchg
lea
mov
movzbl
bswap
not
mov
bswap
mov
lea
not
mov
movzbw
bswap
jmp
clc
stc
add
jmp
pushf
popl
call
mov
movw
mov
pushf
pushf
pusha
push
lea
jmp
call
movl
mov
call
mov
movw
pushf
repz
popl
jmp
pushf
mov
pushf
pusha
pushf
lea
jmp
pushf
popl
pushf
pushl
popl
pushf
push
mov
push
lea
jmp
call
lea
je
cmp
bt
cmc
sub
bt
pusha
xchg
stc
mov
pusha
cmp
sub
pushf
lea
jne
cmc
cmp
test
sub
pushf
push
xchg
push
mov
pushf
movl
pusha
mov
pushf
pushf
pushl
movl
pushl
ret
pushf
pushf
mov
jmp
shld
movzbl
bsf
call
rol
mov
jmp
stc
daa
mov
stc
cmp
pushf
add
pushl
pushf
push
mov
push
mov
pusha
pushf
pushf
lea
jmp
pushf
jmp
mov
inc
lea
jge
pushf
decl
jmp
shld
rol
mov
call
call
mov
call
inc
cmp
mov
bt
xor
cmp
pusha
call
mov
mov
pushf
lea
jmp
call
shld
rol
mov
rcl
cmp
mov
stc
add
jmp
cmp
lea
stc
bt
movb
pushf
or
call
mov
pushf
push
mov
pusha
pushf
mov
push
mov
pushf
jmp
pusha
mov
movb
mov
lea
jmp
bt
add
cmc
ror
pusha
pushf
jmp
push
cld
mov
cld
xchg
mov
push
lea
call
cmp
cmp
call
mov
not
lea
pushf
pushf
pushf
xchg
not
cld
cld
mov
mov
call
mov
mov
call
movb
add
pusha
movw
pusha
pushf
lea
jmp
xor
movzbw
shld
bswap
add
adc
movsbw
movzbl
clc
mov
pusha
call
bt
sar
mov
call
add
stc
sub
jmp
mov
mov
mov
pushl
push
jmp
jbe
pushf
mov
movb
pushl
pusha
mov
lea
jmp
mov
pushf
mov
pushf
call
jmp
pushf
mov
push
push
lea
jmp
pushl
popl
pushl
lea
jmp
call
pusha
mov
pushf
call
pushf
popl
movb
call
movsbl
pushf
not
mov
jmp
jmp
call
adc
mov
jmp
shr
jmp
setg
cwtl
mov
pushl
mov
pusha
call
pushl
mov
pushf
call
lahf
bts
shr
mov
cmp
pushf
cmp
add
call
pusha
pushl
pushl
popl
mov
push
lea
jmp
jmp
push
call
mov
jmp
jmp
call
repz
popl
lea
jae
pusha
mov
pushf
mov
call
test
stc
add
push
lea
js
cmp
cmp
shld
push
mov
pusha
mov
push
call
mov
jmp
add
add
jmp
mov
pushl
popl
mov
mov
movb
lea
jmp
daa
mov
call
push
mov
jmp
mov
neg
jmp
call
mov
mov
pushf
lea
jmp
pushf
neg
bt
jmp
push
mov
pusha
mov
pushf
call
call
call
pushf
jmp
pushl
popl
mov
movl
movw
lea
jmp
