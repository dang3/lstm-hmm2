add
add
add
add
addb
add
js
add
enter
or
add
push
add
add
add
add
or
add
add
add
add
or
add
add
sub
add
mov
add
add
add
call
add
add
add
addb
add
cmp
add
pusha
add
addb
add
mov
add
fadds
add
add
add
sub
add
push
add
orb
add
js
add
mov
add
add
add
add
add
add
push
add
or
add
add
add
cli
add
call
add
add
add
add
add
out
add
call
add
add
add
add
add
into
incl
sub
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
jbe
add
add
add
add
add
add
add
push
dec
add
add
add
add
add
add
pop
add
add
add
add
add
add
fs
add
add
add
add
add
add
xor
add
sbb
add
inc
add
addb
add
or
add
add
add
push
add
add
add
add
add
add
add
add
add
insb
add
inc
add
add
add
add
add
or
add
add
clc
pop
add
addb
addb
add
or
add
sbb
add
add
roll
add
rolb
addb
add
or
add
add
add
repz
scas
add
add
xor
adc
add
add
push
add
and
add
add
call
add
sbb
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
add
add
add
add
sbb
add
add
add
push
add
pop
add
adc
add
add
add
add
or
xor
add
add
and
test
add
or
and
add
add
and
test
add
or
sbb
add
add
and
mov
add
or
adc
add
add
and
push
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
xchg
add
mov
mov
add
or
xchg
js
mov
mov
add
mov
clc
mov
add
pop
mov
mov
add
add
mov
mov
add
add
mov
mov
mov
mov
add
add
add
add
mov
mov
clc
mov
add
add
add
add
mov
clc
mov
mov
add
add
or
mov
mov
mov
add
add
or
clc
clc
mov
divl
mov
clc
mov
add
or
mov
xchg
ja
mov
add
add
mov
jns
jns
clc
clc
mov
add
mov
xchg
divl
xchg
add
add
add
mov
xchg
cwtl
xchg
mov
mov
mov
add
add
mov
clc
xchg
mov
add
add
add
vpmacssdqh
xchg
clc
decl
add
mov
clc
xchg
mov
clc
mov
add
add
mov
incl
cwtl
cwtl
cltd
jns
clc
mov
add
add
js
ja
xchg
xchg
cwtl
xchg
lahf
add
add
popl
jns
jns
jg
mov
add
add
mov
clc
clc
mov
xchg
cltd
cwtl
decl
add
mov
clc
xchg
jg
mov
add
add
mov
clc
decl
cltd
mov
add
add
mov
clc
cltd
jns
mov
add
add
mov
decl
cltd
cltd
decl
add
mov
clc
cltd
cltd
cltd
mov
clc
mov
add
add
mov
clc
negl
add
or
clc
clc
clc
clc
clc
xchg
cltd
cltd
jg
decl
add
mov
clc
clc
clc
clc
clc
mov
add
add
or
mov
decl
popl
or
clc
clc
clc
clc
mov
add
add
mov
mov
clc
add
add
add
or
data16
mov
mov
jbe
clc
mov
mov
clc
mov
xchg
mov
call
add
ja
add
add
xchg
xchg
add
add
insb
jo
add
add
js
ja
ja
addb
add
add
js
call
add
xchg
add
incl
add
incl
add
lock
incl
add
loopne
incl
add
addb
incl
add
add
jg
incl
add
add
ud0
add
incb
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
incb
add
add
add
incb
add
add
add
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
incl
add
incl
add
sldt
inc
add
jg
add
inc
jo
incl
add
inc
add
add
inc
add
add
jmp
add
add
push
add
add
incl
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
add
mov
or
add
or
mov
add
add
or
mov
add
add
or
add
add
add
mov
mov
add
add
mov
clc
ja
clc
mov
mov
ja
mov
add
mov
jns
jg
mov
js
cwtl
js
clc
addb
add
jns
cwtl
jns
clc
clc
addb
add
ja
xchg
cwtl
cwtl
popl
mov
mov
add
add
jns
jns
jns
incl
mov
xchg
cltd
jns
clc
addb
add
jns
xchg
xchg
incl
mov
jns
lahf
mov
mov
lcall
addb
add
jns
lahf
clc
incl
clc
decl
mov
mov
decl
decl
add
mov
or
clc
mov
clc
clc
addb
add
add
add
mov
xchg
add
ja
xchg
add
mov
push
add
xchg
add
lcall
clc
add
clc
add
clc
add
clc
add
push
add
aas
lock
add
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
incb
add
push
add
push
inc
jg
lock
push
add
incb
ljmp
add
add
add
add
add
add
add
add
add
and
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
mov
add
add
add
mov
clc
mov
add
or
mov
or
clc
mov
js
mov
mov
or
xchg
cwtl
clc
mov
add
mov
mov
mov
add
mov
xchg
js
add
or
cwtl
xchg
cwtl
clc
add
or
jns
cwtl
mov
add
clc
cltd
js
clc
add
or
cltd
cwtl
decl
clc
clc
cltd
cwtl
decl
decl
or
mov
mov
mov
clc
clc
add
add
add
ja
out
mov
add
add
add
xchg
ja
js
mov
add
add
incl
cld
jg
add
ud0
loopne
incl
loopne
jg
loopne
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
orb
incl
incl
incl
incl
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
add
add
add
add
add
mov
add
clc
lock
clc
lock
lahf
addb
decl
push
cwtl
incl
clc
cwtl
lock
mov
add
or
mov
add
add
mov
add
add
add
out
add
incl
add
incl
add
aas
add
rorb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbbl
sbbb
xchg
add
jb
add
jbe
add
jle
add
sbbb
outsb
add
add
imul
test
mov
arpl
mov
data16
nop
outsb
add
je
test
je
mov
mov
mov
jae
lods
xchg
jl
mov
xchg
jge
mov
pop
cmpsb
add
mov
dec
dec
mov
dec
dec
mov
add
mov
add
mov
add
stos
add
stos
add
mov
imul
add
add
daa
flds
xor
rolb
xor
fiaddl
or
out
add
push
jecxz
add
push
testl
or
cli
add
adc
add
sbb
add
adc
add
loop
and
in
add
jmp
aaa
aaa
out
cmp
in
xor
call
add
int3
add
add
les
pop
pop
lret
inc
add
fildl
dec
dec
fldl
push
push
rolb
pop
pop
aam
push
push
fildl
pop
pop
fadds
pusha
pop
ret
add
enter
rolb
bound
add
into
add
rolb
inc
inc
loop
dec
dec
loopne
cmpb
cmpl
add
mov
scas
cltd
lea
mov
addl
mov
popl
mov
mov
mov
lcall
mov
xchg
add
xchg
add
cwtl
add
mov
xchg
add
mov
cltd
add
mov
sahf
add
fwait
add
scas
add
mov
add
movsl
mov
add
test
mov
add
lods
cmpsl
add
scas
test
mov
movsb
mov
add
fwait
addl
les
lea
ret
stos
xchg
add
stos
xchg
add
lods
popf
add
test
lcall
scas
mov
add
mov
add
mov
add
mov
add
mov
add
mov
stos
add
mov
scas
add
mov
add
mov
mov
lret
mov
mov
lret
mov
mov
lret
add
ret
ret
fadd
mov
fld
mov
ffree
mov
fmulp
mov
rol
mov
add
lds
add
enter
enter
enter
leave
mov
add
lret
fcmovne
mov
add
int3
mov
add
ret
add
mov
add
roll
pushf
les
xchg
xchg
int
cmpsl
mov
lret
lods
iret
add
scas
leave
add
leave
add
mov
add
mov
les
iret
leave
int
rol
ret
lret
les
fcmovne
rolb
int
add
iret
leave
add
int3
lret
rol
add
rol
add
ror
add
ret
roll
mov
fldl
int3
lret
fiadds
ror
fiadds
aad
faddl
fldl
loopne
rolb
rol
add
rol
add
aam
add
rol
add
rol
add
aad
add
lds
in
leave
add
lret
add
fmul
add
fcmove
add
aad
add
fcmovbe
add
add
add
loope
add
jecxz
add
loope
add
in
add
call
loopne
out
loope
jecxz
out
loope
out
call
loopne
repz
hlt
out
jmp
add
lock
add
repnz
add
hlt
repz
cmc
repnz
clc
cmc
add
cli
stc
add
add
lods
in
mov
insl
insl
add
rcl
fucomip
mov
lods
shrb
xchg
jecxz
in
shlb
lods
xchg
insl
addb
push
mov
jecxz
jmp
jecxz
mov
add
push
shl
jmp
jecxz
jecxz
jecxz
lods
xchg
insl
addb
add
add
ljmp
in
ljmp
fcmovnbe
mov
add
jmp
in
jecxz
ljmp
jecxz
shrb
add
add
ljmp
ljmp
out
jecxz
fcmovnbe
mov
xchg
mov
ljmp
ljmp
ljmp
mov
xchg
insl
addb
add
ljmp
ljmp
out
sub
in
in
xchg
fninit
jecxz
in
ljmp
ljmp
push
and
sub
out
in
add
xchg
fninit
ljmp
loop
ljmp
ljmp
sub
ljmp
xchg
sahf
add
sahf
xchg
jecxz
ljmp
in
rcl
ljmp
inc
inc
inc
inc
and
ljmp
add
ljmp
ljmp
ljmp
es
in
in
in
ljmp
xchg
movsb
fcmovnu
in
ljmp
in
test
inc
sub
inc
inc
dec
inc
test
cmc
out
out
in
ljmp
add
add
add
add
fnclex
in
ljmp
in
test
dec
push
dec
dec
inc
dec
push
dec
dec
dec
push
inc
ret
div
out
in
out
fwait
add
jae
in
ljmp
out
test
dec
dec
push
push
push
push
push
push
push
push
dec
test
stc
stc
imul
repz
add
add
add
data16
frstpm(287
in
ljmp
cmc
xchg
dec
dec
dec
dec
push
dec
dec
dec
dec
dec
dec
inc
cs
stc
out
in
int3
addl
add
add
add
in
ljmp
stc
ret
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
pop
fprem1
repz
jp
add
ljmp
in
out
stc
ret
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
dec
fyl2xp1
cmc
sarb
add
in
ljmp
std
rolb
push
push
push
push
push
push
push
push
push
inc
inc
aas
aas
dec
fyl2xp1
cmc
sarb
add
in
ljmp
std
repnz
mov
push
aas
aas
aas
aas
inc
inc
inc
inc
inc
ds
xlat
stc
clc
iret
addb
pop
fcmovnu
loop
ljmp
cli
std
std
std
std
cld
repnz
cs
inc
ds
inc
ds
sarl
add
in
ljmp
std
std
std
std
mov
inc
inc
dec
dec
cmp
xor
std
not
insl
add
imul
ljmp
mov
cmp
mov
aad
clc
shrl
add
in
ljmp
mov
cmp
mov
sti
cli
not
insl
add
fcmovnu
in
ljmp
std
std
mov
cmp
mov
sti
imul
shrl
add
cmc
stc
cld
cmc
idiv
std
std
std
std
mov
aaa
aaa
mov
div
in
shrl
sahf
movsb
in
in
stc
stc
cld
cld
out
out
out
idiv
cld
std
std
std
sti
sti
mov
cmp
mov
sti
div
out
jmp
add
add
add
add
add
idiv
std
std
std
out
ljmp
div
stc
stc
imul
fcmove
les
imul
out
in
out
imul
add
add
adc
cli
std
std
std
repz
in
in
in
in
out
in
out
out
out
in
out
cmc
imul
out
out
in
in
loop
popa
add
cld
cld
cli
cli
idiv
cmc
div
div
cmc
in
in
ljmp
in
in
in
in
in
in
out
loop
push
xchg
jae
shr
jmp
in
in
in
fucom
in
out
cmc
div
out
imul
out
out
in
in
loop
loop
fldt
fwait
xchg
jp
xchg
xchg
xchg
movsb
cmpsl
cmpsl
adc
add
in
in
in
loop
in
out
out
out
out
out
in
in
in
loop
jnp
add
add
add
add
loop
adc
in
in
in
in
loop
out
cmpsb
xchg
xchg
add
add
push
or
jae
lea
fcmovnu
fidivs
add
sbb
add
add
sbb
push
add
sbb
mov
or
sbb
add
xchg
push
push
push
adc
or
add
or
pop
sbb
push
push
sbb
push
add
add
sbb
sbb
push
pop
pop
pusha
pusha
push
or
add
pop
fwait
incl
add
incl
add
lock
incl
add
loopne
incl
add
addb
incl
add
add
jg
incl
add
add
ud0
add
incb
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
incb
add
add
add
incb
add
add
add
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
incl
add
incl
add
sldt
inc
add
jg
add
inc
jo
incl
add
inc
add
add
inc
add
add
jmp
add
add
push
add
add
incl
incl
add
incl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
popa
inc
add
jnp
add
jge
add
subb
andl
test
test
xchg
lods
mov
mov
outsb
add
mov
stos
mov
lea
lods
jp
stos
jge
lods
xchg
jge
mov
xchg
jbe
mov
xchg
jns
rcrl
add
mov
pop
pop
mov
add
mov
outsb
push
add
mov
add
add
mov
jnp
mov
cmp
fiadds
sbb
call
add
add
add
or
add
sbb
add
repnz
sbb
add
and
add
das
loopne
sub
out
sub
es
add
cs
xor
add
cmp
add
xor
add
push
ret
pop
roll
pop
movl
pop
pop
leave
add
int
dec
dec
xlat
add
fildl
dec
dec
flds
dec
dec
filds
dec
dec
fldl
pop
pop
roll
pop
pop
add
aad
push
push
fildl
push
push
flds
push
push
faddl
pop
pop
fadds
insb
push
add
enter
int
push
outsl
into
add
int3
add
roll
insl
insl
roll
push
jb
add
loop
inc
inc
loope
dec
dec
loopne
cmpl
cmpb
scas
cwtl
xchg
scas
cwtl
mov
mov
addb
fwait
mov
mov
mov
xchg
add
test
add
mov
add
stos
movsb
add
scas
cmpsb
add
mov
mov
add
mov
xchg
add
lods
xchg
add
test
pushf
add
lods
sahf
add
scas
movsl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
lods
add
mov
mov
leave
mov
mov
int
mov
int3
mov
mov
iret
ret
mov
leave
sarb
into
les
add
lds
add
mov
rol
mov
add
mov
add
enter
leave
mov
add
int3
mov
add
rolb
mov
test
roll
ret
mov
add
mov
movl
roll
enter
lret
lret
ret
lret
add
leave
xlat
add
fadds
loopne
roll
rol
add
rol
add
aam
add
rol
add
rol
add
lds
jmp
ror
add
aad
add
aam
add
ror
add
aad
add
int3
add
aad
add
xlat
int3
add
fmul
add
fxch
add
fxch
add
fcmovne
add
fmul
add
add
add
fcmovbe
add
add
add
fst
add
fst
add
fcmovnu
add
add
fstp
add
loopne
add
loopne
add
loope
add
loopne
add
loope
add
in
add
loopne
add
jecxz
add
in
add
out
add
loop
add
jecxz
add
in
add
out
add
call
jecxz
rcl
loop
fcmovbe
jecxz
loop
in
out
loopne
loop
in
out
in
in
call
add
ljmp
bnd
jecxz
imul
jecxz
bnd
add
jmp
add
in
out
hlt
in
out
repz
jmp
add
lock
add
icebp
jmp
repnz
repnz
hlt
repnz
div
add
repz
cmc
icebp
add
div
add
div
add
clc
cmc
add
stc
testb
cli
stc
add
cli
stc
add
cld
sti
add
jp
push
mov
xchg
outsb
addl
add
mov
pushf
cmpsl
cwtl
xchg
test
mov
mov
cmpsl
xchg
imul
add
mov
les
cwtl
subl
add
add
mov
enter
mov
scas
cmpsl
mov
mov
mov
ror
enter
shlb
add
xchg
mov
enter
mov
mov
push
add
add
add
add
shrb
enter
sbb
push
xchg
push
add
add
add
js
mov
enter
shrb
cmp
cmp
mov
add
add
add
mov
enter
enter
pop
outsl
and
lret
int
addl
add
addr16
mov
int
scas
mov
push
push
ds
inc
inc
dec
leave
in
jmp
add
add
add
scas
mov
mov
inc
inc
inc
inc
dec
inc
inc
sahf
lods
loope
leave
xchg
add
add
add
popfw
mov
int
stos
push
inc
dec
dec
dec
dec
dec
dec
inc
inc
inc
push
loope
mov
add
add
add
addr16
mov
int
vpaddsb
inc
pop
pop
pop
pop
cmp
inc
loopne
popl
add
add
add
jbe
mov
jmp
pop
inc
inc
cmp
cmp
in
popl
add
add
add
jbe
mov
in
div
hlt
push
xor
xor
loopne
popl
add
add
add
jnp
mov
out
push
sub
fsubl
add
add
add
subl
in
idiv
push
sub
sub
in
div
in
popl
add
add
add
mov
out
idiv
cld
push
sub
sub
in
imul
xlat
xchg
add
add
add
add
ror
in
in
in
in
imul
lods
mov
imul
aam
lea
add
add
add
mov
div
idiv
jmp
rol
rcl
xlat
aam
xlat
xlat
xlat
mov
add
add
xchg
lret
rcl
aam
rcl
rol
fcmovnu
xlat
aam
enter
mov
add
je
add
mov
mov
ret
add
add
add
add
jnp
sbb
sbb
mov
add
add
add
orb
add
adc
je
push
or
or
push
add
mov
jae
pusha
adc
adc
sldt
add
add
pop
add
add
lcall
clc
add
clc
add
clc
add
clc
add
push
add
aas
lock
add
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
incb
add
push
add
push
inc
jg
lock
push
add
incb
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
andb
andb
imul
mov
insb
add
jne
lods
lea
lods
jns
mov
jno
scas
xchg
jg
mov
js
mov
jnp
mov
jl
pop
pop
mov
push
push
mov
add
mov
sbb
jmp
add
add
add
or
add
push
stc
add
adc
add
push
icebp
add
out
add
sub
add
in
add
ss
ds
xor
jmp
add
movb
pop
movb
pop
lret
pop
int
dec
dec
filds
dec
dec
fiadds
pop
pop
roll
pop
pop
xlat
add
add
fildl
push
push
fiaddl
pop
pop
fadds
pusha
pusha
iret
add
rolb
fs
jp
roll
inc
inc
jecxz
inc
inc
loope
test
add
test
popf
add
pushf
mov
add
movsb
mov
add
movsl
lea
leave
mov
cwtl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
stos
add
mov
mov
les
mov
lret
mov
mov
int3
mov
mov
add
lds
add
ret
mov
add
leave
mov
add
lret
mov
add
or
xchg
add
xchg
xlat
add
mov
add
ror
fxch
rolb
int3
rolb
iret
movl
fmul
lret
rcr
mov
fildl
into
enter
leave
rolb
fst
rolb
loopne
ret
rol
add
rol
add
rol
add
aad
add
aam
add
movb
ror
add
aam
add
aad
add
aam
add
xlat
into
add
fxch
add
fxch
add
add
fnop
add
fcmovbe
add
add
fst
add
fst
add
add
add
loopne
add
loope
add
loop
add
in
add
in
add
loop
add
jecxz
add
in
add
jecxz
add
out
add
in
out
in
out
add
out
add
jmp
loop
bnd
add
jmp
add
in
out
cmc
in
out
hlt
out
jmp
add
icebp
in
add
cmc
icebp
add
div
add
clc
testb
cli
stc
add
cld
sti
add
add
dec
add
add
jg
pop
insb
dec
push
add
add
jg
xchg
jg
pop
cmp
push
ja
mov
jg
insb
dec
push
add
push
ja
mov
mov
jns
pop
cmp
add
add
add
add
mov
mov
jg
pop
inc
add
add
add
dec
jns
mov
mov
adc
jo
andl
add
add
dec
ja
mov
cmp
and
and
xchg
mov
add
inc
jns
mov
es
das
das
das
jne
lcall
add
mov
das
sub
sub
lcall
inc
jl
mov
sub
sub
xor
addr16
dec
add
add
add
mov
jno
xor
and
sbb
add
add
add
mov
cmpsl
cmpsl
xchg
sbb
sbb
xor
dec
add
add
add
xchg
cmpsl
cmpsl
xchg
sbb
sbb
add
add
add
xchg
mov
cmpsl
cmpsl
jae
push
pop
push
mov
add
add
mov
nop
xchg
xchg
xchg
nop
jbe
mov
add
add
jo
sahf
nop
xchg
mov
mov
jl
pop
push
dec
push
add
jge
jl
jge
xchg
lea
add
or
cmp
pop
aas
push
inc
pop
add
inc
inc
add
add
ss
lsl
add
add
incl
cld
jg
add
ud0
loopne
incl
loopne
jg
loopne
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
orb
incl
incl
incl
incl
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
pushf
jbe
add
xchg
mov
jns
outsb
push
add
mov
add
cs
xor
in
pop
pop
movb
pop
leave
add
into
add
xlat
add
filds
dec
dec
filds
dec
dec
fldl
push
push
aam
pop
pop
roll
push
push
fildl
jnp
fldl
inc
inc
loopne
inc
inc
in
scas
xchg
addb
xchg
test
mov
mov
mov
mov
mov
lea
add
mov
xchg
add
mov
lods
add
mov
mov
int3
mov
mov
lret
add
shll
rol
mov
add
lret
xchg
int
test
and
xchg
xchg
loopne
mov
loopne
ret
add
mov
aad
ret
int3
roll
enter
int
add
into
rolb
fildl
loopne
ret
rol
add
rol
add
rol
add
aam
add
aad
add
xlat
int
jmp
fmul
add
fmul
add
fxch
add
fmul
add
fcmovbe
add
fst
add
add
add
add
fstp
add
add
add
loope
add
loopne
add
loope
add
in
add
loop
add
in
add
in
add
add
aad
add
jecxz
add
loop
add
ljmp
cmc
out
call
add
icebp
jmp
clc
repz
add
hlt
out
add
div
add
sti
cli
and
add
cmp
sub
and
inc
cmp
add
add
and
inc
dec
dec
add
add
add
and
xor
or
add
and
or
adc
dec
dec
add
add
inc
dec
dec
cmp
adc
unpckhps
dec
dec
add
add
inc
dec
push
pop
push
xor
or
or
add
add
inc
push
pop
pop
pusha
pusha
adc
dec
add
add
push
pop
dec
pop
pop
pop
adc
das
pop
push
dec
add
add
pop
push
push
push
push
push
dec
dec
inc
inc
dec
add
add
add
xor
add
daa
pop
dec
inc
sub
add
add
add
add
sbb
sbb
pop
sbb
incl
add
incl
add
aas
add
rorb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
incl
add
add
add
add
add
add
add
and
add
add
andb
add
movsl
pushf
pop
mov
fwait
pusha
mov
add
add
jp
sub
xorb
and
mov
mov
jmp
xchg
jp
cmp
add
add
jnp
je
popl
std
fadd
mov
fcmovne
mov
lods
popf
xchg
in
cmpl
jns
push
xchg
jnp
push
xchg
jnp
cmp
mov
mov
jmp
rol
jmp
mov
fcmove
mov
call
enter
lods
cmpsl
jmp
xorb
outsb
inc
xchg
jnp
push
xchg
jp
cmp
popl
std
sar
rol
jmp
aad
jmp
xlat
int
ljmp
fcmovne
mov
ret
iret
ret
int
call
enter
mov
std
stos
popf
xchg
out
xorb
jns
pop
xchg
jnp
or
add
add
lea
fld
mov
fmul
mov
jmp
int3
jmp
fcmovbe
jmp
fcmovnbe
in
loop
ret
fmulp
sar
rol
jmp
aam
jmp
aad
jmp
ror
jmp
rol
jmp
iret
ret
iret
ret
lds
mov
xorb
jp
ss
jnp
or
add
add
cwtl
mov
fmul
mov
jmp
aam
jmp
fnop
call
fst
out
in
jmp
rol
ret
ror
jmp
xlat
int3
jmp
fmul
jmp
xlat
int
in
int3
jmp
ror
jmp
rol
ret
int
call
lds
test
xchg
loopne
xorl
xchg
jnp
or
add
add
mov
mov
jmp
xlat
int
call
jmp
out
in
jmp
rol
jmp
into
ret
aam
jmp
fmul
call
fcmovbe
call
fmul
jmp
xlat
int3
jmp
aam
jmp
rol
jmp
iret
ret
jmp
int
fmul
sar
lds
movsb
xchg
mov
cwtl
jle
jnp
jp
cmp
add
add
cmpsb
cwtl
out
fmulp
sar
rol
jmp
fmul
call
jmp
xlat
out
in
jmp
rol
jmp
into
ret
aam
call
fcmovbe
ljmp
jmp
fnop
call
xlat
int3
jmp
aad
jmp
rol
jmp
rol
jmp
into
sar
int3
mov
mov
cwtl
nop
fists
jns
dec
xchg
jl
add
add
add
stos
pushf
cmc
sar
ror
jmp
fmul
call
jmp
out
in
jmp
rol
jmp
into
sar
rol
call
fcmovnbe
ljmp
ljmp
ljmp
call
fxch
jmp
lret
jmp
aam
jmp
rol
jmp
rol
jmp
int
fmul
sar
ret
mov
mov
adcl
add
add
lods
lahf
clc
sar
rol
jmp
fxch
call
jmp
out
in
jmp
rol
jmp
into
sar
rol
call
fcmovnbe
ljmp
jmp
aam
jmp
sar
ljmp
call
iret
lret
ljmp
jmp
xlat
int3
jmp
aad
jmp
rol
jmp
rol
jmp
into
sar
int3
mov
mov
xchg
mov
xchg
jg
cmpsl
xchg
jns
cmp
add
add
mov
cld
sar
ror
jmp
fmul
call
fst
jmp
aad
out
jecxz
jmp
rol
jmp
int
jmp
rol
call
fcmovnbe
ljmp
jmp
aam
jmp
aam
jmp
aam
jmp
aam
in
sar
cmpb
jne
lods
jmp
mov
ljmp
jmp
aam
jmp
rol
jmp
into
sar
int3
mov
dec
sarb
mov
jle
imul
add
cltd
jle
outsb
mov
sar
ror
jmp
fmul
call
fst
jmp
aad
out
jecxz
jmp
rol
jmp
int
jmp
rol
call
fcmovnbe
jmp
sar
jmp
sar
jmp
aam
jmp
aam
in
fst
in
fst
jmp
aad
incl
inc
mov
dec
dec
mov
imul
xchg
mov
jmp
fcmove
call
aam
jmp
rol
jmp
into
sar
lret
mov
dec
mov
popf
notl
add
add
mov
jmp
int
jmp
ror
jmp
fmul
jmp
jmp
aam
out
jecxz
jmp
rol
jmp
int
jmp
rol
jmp
fcmovnbe
in
fst
in
in
fst
in
fst
in
fst
in
fst
call
test
decl
mov
decl
mov
ljmp
stos
dec
rol
in
ljmp
jmp
aam
jmp
rol
jmp
int3
mov
inc
mov
lcall
add
add
mov
jmp
int
jmp
rol
jmp
xlat
into
jmp
jmp
aam
out
loop
jmp
rol
jmp
int
jmp
rol
jmp
fcmovnbe
fcmove
lret
fmul
leave
in
fst
push
loope
in
fst
in
fst
ljmp
call
mov
call
call
sar
push
ret
call
mov
push
loopne
in
fst
in
fst
ljmp
jmp
rol
jmp
int3
mov
lcall
add
add
lods
jmp
int
jmp
ror
call
fcmovnbe
jmp
sar
jmp
sar
out
loop
jmp
rol
jmp
int
jmp
rol
ljmp
ljmp
pop
cmpsb
pushl
stos
lcall
mov
iret
jmp
mov
lcall
vcvtsd2ss
lcall
lcall
lcall
mov
push
jecxz
push
loop
out
loope
out
in
call
rol
inc
mov
jbe
lahf
test
sarb
sar
rol
call
fcmovnbe
jmp
sar
jmp
sar
out
loop
jmp
rol
jmp
into
sar
ror
jmp
iret
out
ljmp
pop
mov
lcall
mov
jnp
mov
lcall
lcall
lcall
leave
lcall
leave
lcall
lret
pop
lret
lcall
ljmp
out
push
in
push
in
push
loop
out
loopne
ljmp
dec
mov
js
mov
shll
in
call
fcmovnbe
jmp
sar
jmp
aam
out
loop
jmp
rol
jmp
rol
jmp
aad
in
push
loope
pushl
pop
mov
lcall
lret
pop
lret
lcall
int3
lcall
jmp
ret
jmp
int
pusha
pusha
int
pusha
pusha
into
jmp
into
jmp
sar
pop
pop
lret
test
jecxz
repz
jecxz
repnz
push
in
in
jmp
ret
mov
cltd
movsb
mov
ret
loope
sar
ror
call
fcmovnbe
jmp
sar
jmp
aam
out
loop
jmp
aam
jmp
rol
call
push
in
pushl
pusha
sar
pop
int
pop
pop
int
pusha
pusha
into
jmp
iret
jmp
iret
lcall
sar
pusha
pusha
sar
pusha
pusha
sar
pusha
pusha
sar
pop
pop
sar
pop
pop
sar
pop
pop
iret
ljmp
jmp
stc
lock
push
ljmp
out
loop
ljmp
lcall
add
cmpsb
lea
jmp
iret
ret
aam
call
fcmovnbe
jmp
sar
jmp
aam
out
loop
jmp
lret
jmp
aad
ljmp
push
out
pushl
pusha
vmaxsd
lcall
sar
pop
pop
sar
pop
pop
sar
pop
pop
aam
pop
pop
aam
pop
pop
aad
pop
pop
aad
pop
pop
lcall
xlat
lcall
fdivr
pop
pop
fdivr
pop
pop
sar
jb
ljmp
ret
sar
out
loope
repz
out
out
in
loope
call
mov
movsb
test
sbb
les
jmp
aam
call
fcmovnbe
jmp
sar
jmp
aam
out
jecxz
jmp
fmul
call
push
in
push
ljmp
pusha
pop
enter
aad
pop
pop
lcall
lcall
xlat
lcall
fdivr
pop
pop
fdivr
pop
pop
fcos
push
push
fcos
push
push
push
push
push
push
push
push
fdivr
push
push
dec
dec
push
push
aam
pop
pop
lret
incl
fcomp
push
jmp
ror
ret
lcall
add
add
xchg
test
fcmovb
mov
loope
ret
aam
call
fcmovnbe
jmp
sar
jmp
aam
out
jecxz
jmp
fcmovnbe
out
loop
push
out
clc
out
call
lcall
int3
call
push
push
push
push
push
push
push
push
fdivr
push
push
fdivr
dec
dec
dec
dec
fdivrp
dec
dec
fdivrp
dec
dec
dec
dec
loopne
dec
dec
loopne
inc
inc
loope
inc
inc
loope
inc
inc
loop
inc
inc
in
push
push
sar
aad
repz
out
lock
call
int
lcall
add
add
xchg
xchg
fcmovnb
mov
jmp
aad
call
fcmovnbe
jmp
sar
jmp
aam
out
jecxz
ljmp
out
in
push
jmp
stc
icebp
in
pushl
push
decl
dec
dec
loopne
dec
dec
loope
dec
dec
loopne
dec
dec
loopne
dec
dec
loopne
inc
inc
loope
inc
inc
loope
inc
inc
loop
inc
inc
jecxz
inc
inc
in
aas
aas
in
cmp
cmp
cmp
out
cmp
out
push
push
sar
aad
fdivrp
hlt
out
ljmp
iret
leave
lcall
add
add
cltd
mov
fmul
mov
jmp
aad
jmp
fcmovnbe
in
in
out
jecxz
jmp
in
loope
push
call
ljmp
fucom
mov
pushf
add
data16
incl
aad
inc
inc
fdivrp
cmp
out
cmp
out
cmp
out
aaa
aaa
out
xor
xor
pushl
xor
pushl
xor
ljmp
das
ljmp
inc
fdivr
ror
fdivrp
div
in
push
jmp
lret
lcall
add
add
pushf
mov
mov
jmp
aad
jmp
fcmovnbe
jmp
sar
in
out
loop
in
loop
out
in
push
ljmp
stc
repz
sti
div
cld
stc
cmc
stc
div
push
lock
out
ror
fdivrp
lods
lods
iret
pushl
mov
pushl
xor
ljmp
das
ljmp
sub
ljmp
in
jmp
daa
out
ljmp
sub
jmp
daa
in
jmp
es
ds
int3
lret
fdivrp
clc
repz
push
in
in
fcmovbe
int3
jmp
add
add
mov
mov
jmp
aad
jmp
fcmovbe
jmp
sar
jmp
sar
out
loop
in
jecxz
push
out
push
in
out
div
out
cli
div
sti
clc
idiv
sti
stc
idiv
cld
stc
clc
cld
cli
clc
cld
cli
stc
std
cld
cli
stc
stc
stc
call
sub
jmp
daa
out
jmp
es
jmp
and
jmp
and
decl
int3
incl
xlat
ljmp
loop
and
jmp
dec
clc
hlt
out
push
in
in
into
jmp
add
add
ror
add
movsb
xchg
fmulp
mov
jmp
aad
jmp
fcmovbe
jmp
sar
jmp
sar
out
loop
out
in
push
call
jmp
cli
div
sti
stc
idiv
sti
cli
clc
cld
sti
cli
cld
sti
cli
std
sti
cli
std
cld
cli
stc
stc
stc
call
and
lcall
pop
icebp
lcall
push
repnz
repnz
sbb
lcall
sbb
decl
loopne
mov
fdivr
nop
nop
into
ljmp
mov
clc
repz
push
in
in
int
mov
add
add
ror
pop
xchg
jns
push
mov
lret
in
ret
jmp
aam
ljmp
jmp
sar
in
push
in
out
out
push
ljmp
stc
cmc
repnz
sti
clc
idiv
cld
cli
clc
cld
sti
cli
std
cld
sti
std
cld
sti
std
cld
sti
std
cld
sti
stc
stc
clc
call
push
repz
idiv
adc
idiv
adc
idiv
adc
clc
decl
or
call
sti
clc
std
sti
std
sti
cli
div
clc
repz
push
lock
fst
int3
jmp
add
add
ror
or
mov
jmp
lret
in
ret
jmp
aad
ljmp
out
push
jecxz
push
jmp
loopne
icebp
ljmp
clc
cmc
repnz
cli
div
cld
cli
clc
std
sti
cli
std
cld
sti
std
cld
sti
std
cld
sti
std
cld
sti
stc
stc
clc
call
idiv
or
cli
decl
or
decl
or
decl
or
incl
cld
call
stc
cmc
cld
stc
idiv
cld
div
sti
cmc
icebp
stc
repz
push
in
in
icebp
out
fst
lret
mov
add
ror
push
xchg
js
je
mov
jmp
into
sar
aam
ljmp
out
loop
push
jmp
call
out
call
loopne
repz
call
stc
cmc
icebp
cli
clc
hlt
sti
stc
idiv
cld
cli
clc
cld
cli
stc
cld
cli
stc
cld
cli
clc
stc
clc
cmc
call
add
std
incl
add
incl
add
incl
add
incl
add
decl
div
sti
div
sti
cmc
lock
stc
icebp
ljmp
jmp
xlat
fst
enter
xchg
fcmovnbe
int
xchg
js
adc
scas
jmp
rol
jmp
loopne
push
in
push
jmp
in
clc
repz
cli
cmc
repz
out
out
out
in
push
ljmp
div
ljmp
hlt
out
cli
div
cli
div
cli
div
sti
div
stc
div
lcall
xor
jmp
daa
fcos
push
push
jecxz
or
out
incl
add
incl
out
sti
cmc
icebp
cli
repz
clc
out
in
cmc
jmp
push
out
out
loope
fst
xchg
xchg
fcmovnbe
int
xchg
js
xchg
fadd
mov
in
loope
push
out
push
jmp
push
out
jmp
stc
div
cli
clc
idiv
out
in
ljmp
push
out
push
call
loopne
bnd
loope
hlt
jmp
push
in
jecxz
cmc
in
in
imul
in
repz
in
in
jmp
dec
leave
int
mov
mov
sar
mov
push
lock
out
out
cmc
jmp
lock
in
fst
ret
jmp
add
fcmovbe
int
xchg
jp
cltd
ret
out
in
push
jmp
ljmp
cmc
repz
div
stc
clc
clc
out
out
call
fcmovne
jmp
iret
in
in
in
out
loopne
out
loope
out
loop
out
loop
out
loop
push
jecxz
push
in
push
out
push
out
push
out
push
out
push
out
push
out
push
call
fdivrp
repz
push
in
push
loop
out
jmp
lret
into
sar
xchg
mov
fcmovbe
int
cwtl
jge
test
fcmovbe
push
out
ljmp
div
push
div
push
hlt
repnz
icebp
out
push
out
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
ljmp
repz
fcos
out
loope
in
in
jmp
into
ljmp
ljmp
ljmp
jmp
lret
in
fmul
in
out
out
out
in
jmp
lret
fmul
sar
xchg
mov
fcmovnbe
into
pop
cwtl
jge
mov
mov
jmp
fcmovbe
call
in
in
in
fmul
in
fmul
in
fmul
in
out
out
fmulp
jmp
sarl
icebp
loop
push
jmp
fdivrp
hlt
jmp
loope
repz
loopne
repz
lock
out
loope
in
jmp
lret
ljmp
jmp
xlat
call
aam
jmp
rol
jmp
rol
ljmp
add
add
jns
push
xchg
ja
inc
xchg
js
imul
mov
scas
xchg
mov
mov
lods
sahf
in
lret
mov
stc
ret
mov
ljmp
cmp
test
lcall
xchg
ja
in
fmul
in
fmul
in
fmul
in
out
push
loope
ljmp
push
out
push
ljmp
hlt
ljmp
repnz
out
jecxz
out
loope
in
fst
jmp
into
call
lahf
xchg
out
add
add
jp
adc
jp
xor
jnp
inc
cwtl
jge
bound
jns
movsb
mov
nop
push
incl
gs
incl
jae
jmp
int
jmp
fcmove
in
fcmovne
jmp
leave
call
mov
push
call
mov
in
out
in
in
in
fmul
in
fcmovne
in
fmul
jmp
call
lds
jmp
xchg
xchg
js
mov
jbe
jmp
xchg
stos
test
test
jge
in
xchg
test
lcall
mov
ljmp
andl
mov
sar
aad
jmp
aad
jmp
sarb
dec
mov
xchg
xlat
mov
jp
pop
xchg
jp
sldt
add
xchg
jns
mov
mov
popf
cmp
pushf
cmp
nop
outsb
call
jp
inc
xchg
jp
inc
xchg
jp
cmp
mov
imul
mov
test
stos
xchg
test
mov
nop
repnz
xchg
imull
test
cltd
jle
pop
xchg
jnp
sub
xchg
jns
leave
mov
addr16
lahf
test
shrb
nop
dec
lahf
cmp
sbbb
jle
jmp
jle
jmp
mov
mov
mov
mov
jp
dec
xchg
jp
or
jp
adc
add
add
test
ret
dec
stos
xchg
dec
movsl
inc
lcall
mov
imul
andl
andl
test
stos
test
subl
popf
jns
repz
jnp
dec
xchg
jnp
jne
jnp
hlt
mov
stos
xchg
inc
lods
fwait
mov
xchg
cmp
cmpsb
xchg
mov
test
cmpsb
mov
lahf
subb
insl
push
lcall
outsb
cmp
add
add
jp
jg
subb
je
stos
mov
stos
jns
scas
xchg
jp
mov
jge
mov
jg
mov
cmp
lahf
mov
mov
xchg
jnp
mov
jp
mov
add
add
jnp
sub
jnp
inc
xchg
jp
pop
xchg
jns
js
js
mov
push
xchg
js
mov
xchg
jp
enter
xchg
add
add
ror
add
ror
or
ror
or
ror
adc
ror
sbb
ror
push
fcmovnbe
into
and
iret
sldt
add
incl
add
clc
jg
incl
add
rorb
incl
add
addb
incl
add
add
jg
incl
add
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
cld
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
clc
add
add
sldt
inc
add
add
add
inc
add
pop
add
inc
add
jg
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
push
add
add
incb
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
lock
or
out
out
or
add
add
xorb
popf
xchg
lret
cltd
int3
popf
test
xchg
jnp
and
add
add
jge
push
mov
aam
ret
mov
loop
leave
sar
mov
out
mov
inc
xchg
jnp
push
xchg
jnp
push
popf
xorl
mov
neg
into
ret
aad
jmp
fmul
mov
fmulp
sar
lret
les
mov
xchg
jge
imul
add
cwtl
jge
pop
int
stos
fmulp
sar
lret
jmp
fcmovnbe
jmp
fcos
fmulp
ret
rol
jmp
aad
jmp
aad
jmp
rol
ret
call
les
lock
mov
xchg
jl
aaa
xchg
jnp
or
add
add
ret
mov
loope
jmp
fnop
jmp
loop
jmp
rol
jmp
rol
jmp
fmul
jmp
fnop
jmp
fmul
jmp
lret
jmp
rol
jmp
iret
ret
leave
mov
cli
test
mov
cltd
xorl
popf
xorl
enter
aam
call
in
loop
jmp
iret
ret
rol
call
fcmovnbe
ljmp
call
int3
jmp
ror
jmp
rol
fmul
sar
mov
fwait
loopne
mov
xchg
jnp
cmp
add
add
leave
mov
call
in
loop
jmp
iret
ret
rol
call
jmp
sar
ljmp
jmp
aad
ljmp
jmp
rol
jmp
into
sar
mov
hlt
movsb
xchg
mov
xchg
jl
popa
xchg
jnp
or
add
add
lret
mov
call
fst
in
loope
jmp
iret
ret
rol
call
jmp
sar
jmp
aam
jmp
aam
out
sar
jne
test
inc
mov
jmp
ror
call
ror
jmp
iret
ret
int3
mov
pushl
xorb
ror
add
add
add
mov
call
in
loope
jmp
iret
ret
rol
jmp
in
fst
in
fst
in
fst
call
outsl
mov
dec
dec
mov
ljmp
mov
test
fmul
jmp
aam
jmp
into
sar
mov
mov
fwait
ljmp
add
movsl
lea
mov
jmp
in
loopne
jmp
iret
ret
rol
ljmp
pushl
lret
lret
in
fst
jnp
mov
push
push
sar
push
ret
push
ret
ljmp
mov
out
sar
out
in
call
into
sar
test
jmp
ror
sbb
add
add
int
jmp
aam
jmp
in
loopne
jmp
iret
ret
rol
jmp
sar
lds
mov
incl
mov
mov
pop
pop
lcall
enter
lret
push
jmp
fcmovnu
push
in
out
loop
in
fst
jmp
aad
mov
ror
pop
mov
mov
loopne
mov
jmp
in
loopne
jmp
rol
jmp
aam
in
fst
inc
mov
sar
pop
lret
pop
int3
lcall
lret
lcall
lret
pusha
into
lcall
iret
lcall
sar
insb
push
ljmp
push
call
fdivr
ljmp
out
fcmovnbe
int
mov
mov
loopne
sar
aad
jmp
in
loopne
jmp
aam
jmp
loope
dec
mov
enter
sar
pop
pop
sar
pop
pop
sar
pop
pop
sar
pop
pop
aam
pop
pop
aad
pop
pop
lcall
int
xchg
xchg
dec
jmp
fnstsw
push
call
fdivr
ret
out
fcmovnbe
int
mov
xchg
call
out
lret
jmp
in
loope
jmp
fmul
in
fst
push
out
dec
ret
pop
pop
int
pop
pop
lcall
xlat
lcall
fdivr
push
push
fcos
push
push
push
push
push
push
fdivr
dec
dec
dec
dec
dec
dec
xlat
ljmp
enter
out
in
inc
mov
int
mov
movsb
xchg
lock
sar
lret
jmp
in
loope
jmp
loop
push
jmp
dec
push
push
into
decl
dec
dec
dec
dec
dec
dec
dec
dec
loopne
inc
inc
loope
inc
inc
loop
inc
inc
jecxz
ds
cmp
in
dec
dec
fcos
loop
icebp
ljmp
fcmovnbe
int
mov
test
sar
lret
ljmp
out
loope
jmp
xlat
push
out
push
out
jmp
out
ljmp
stos
test
leave
jmp
int
inc
inc
cmp
out
xor
xor
pushl
xor
ljmp
das
ljmp
cmp
in
repz
out
leave
sarb
mov
lods
sahf
std
loop
sar
lret
ljmp
in
loopne
in
jecxz
push
jmp
clc
repz
cli
div
sti
clc
idiv
std
sti
stc
std
sti
stc
push
icebp
repnz
into
ljmp
sub
ljmp
sub
jmp
es
ljmp
cmp
ljmp
sub
pushl
xor
fcmovbe
jecxz
hlt
out
call
neg
ror
cmp
add
add
mov
jmp
into
sar
aad
ljmp
out
loopne
out
out
push
in
call
sti
stc
idiv
cld
sti
stc
std
sti
sti
std
sti
sti
cli
cli
stc
ljmp
sar
sbb
repnz
sbb
lcall
sbb
ljmp
das
loopne
rcl
loop
mov
jmp
push
in
in
int
mov
cmp
add
add
mov
jmp
into
sar
aad
jmp
iret
in
push
out
push
out
push
out
jmp
cld
stc
clc
std
sti
cli
std
cld
sti
std
cld
sti
cli
cli
stc
ljmp
aad
push
push
clc
decl
stc
decl
or
jmp
and
call
stc
idiv
cld
div
clc
bnd
bnd
mov
cmp
lahf
xchg
mov
enter
sar
lock
push
in
out
div
in
out
out
push
jmp
push
repnz
stc
cmc
icebp
sti
clc
cmc
cld
stc
idiv
cld
cli
idiv
cli
clc
cmc
jmp
sar
or
idiv
add
add
lcall
call
sti
div
stc
icebp
jmp
imul
jecxz
lock
dec
ret
mov
inc
lahf
xchg
lret
mov
push
out
push
in
out
clc
repz
cli
div
in
loop
out
jecxz
push
jmp
jecxz
hlt
in
in
imul
out
imul
call
dec
leave
xlat
ljmp
sar
jbe
sar
jo
int3
jmp
loop
stc
icebp
jmp
imul
jecxz
repz
out
dec
ret
mov
inc
mov
xlat
lret
out
out
push
out
ljmp
div
push
div
push
call
xlat
out
jecxz
out
loop
in
loopne
in
in
in
out
loopne
push
loope
push
jecxz
push
jecxz
push
jecxz
push
in
push
in
push
jecxz
out
loopne
jmp
lret
ret
fcmovnbe
iret
inc
mov
ret
in
jmp
out
in
out
loop
out
loopne
out
out
push
loop
in
fmul
out
push
call
fdivrp
repnz
push
in
push
jecxz
out
loope
in
jmp
int
ljmp
ljmp
jmp
rol
call
lds
inc
mov
jp
sbb
outsl
popa
pushf
xorb
popl
lds
mov
out
lods
xchg
cld
test
incl
sbbl
in
fcmovne
in
in
fcmovne
ffree
mov
out
ret
push
out
push
out
push
in
out
loop
in
loopne
ljmp
cmc
fst
roll
add
add
jp
and
cltd
je
jmp
jnp
pushl
cmpsl
cwtl
ror
mov
in
pushf
jle
stos
jg
mov
xlat
jmp
rol
fld
mov
les
sbbb
ror
or
add
add
jne
enter
rcrl
rcll
imul
ja
lods
xchg
cmpsb
lea
stos
xchg
test
cltd
jle
dec
xchg
jnp
pop
xchg
jnp
add
add
add
xchg
jns
into
test
test
mov
outsb
ljmp
andl
xchg
test
jns
notl
jnp
add
add
add
mov
shlb
pushl
jp
test
jge
lahf
subb
jbe
loopne
jnp
pop
xchg
jl
add
jnp
dec
cwtl
jl
jbe
jl
xchg
fwait
jle
test
subl
mov
subb
jnp
dec
call
loop
push
out
fisttps
out
ficoms
out
ficoms
out
fists
lcall
clc
add
push
add
push
add
push
add
push
add
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
push
add
push
add
push
add
push
add
incb
ljmp
add
add
add
add
add
add
add
add
add
add
add
into
add
ror
das
into
add
add
add
xorb
movsb
xchg
fcmovnu
lret
sar
stos
mov
jl
jnp
sbb
add
add
xchg
test
aam
jmp
lret
fcmove
mov
inc
mov
cli
cmpsl
xchg
mov
xchg
jnp
add
add
add
lret
mov
call
fnop
jmp
rol
jmp
lret
jmp
aam
jmp
rol
call
les
ficompl
jnp
pop
cmpsl
popl
jmp
fcmovbe
ljmp
jmp
rol
call
fcmovbe
call
aad
jmp
rol
fcmovne
sar
mov
mull
jl
ds
jl
add
add
add
call
jmp
fcmovbe
jmp
rol
jmp
ljmp
jmp
xlat
into
call
rol
jmp
iret
ret
ret
mov
xchg
aam
xorb
jnp
adc
add
add
rol
call
fst
jmp
fcmovbe
jmp
rol
jmp
jmp
aam
jmp
aam
mov
mov
ljmp
ror
jmp
aad
jmp
rol
fcmove
mov
hlt
sahf
xchg
mov
lea
call
call
rol
ljmp
in
in
fst
mov
push
mov
lcall
mov
fmul
lret
fcmovnbe
jmp
aad
jmp
int3
mov
ret
mov
xchg
lret
loop
jmp
call
rol
in
incl
insl
mov
mov
pushf
mov
lcall
lcall
call
lock
out
jmp
lret
mov
add
mov
rol
jmp
jmp
aam
out
loopne
decl
pop
lret
lcall
int
pop
pop
lret
pusha
iret
lcall
sar
pop
pop
iret
call
leave
sar
cmc
jmp
push
out
jmp
aam
mov
fwait
int
add
add
test
fcmovbe
jmp
sar
ljmp
push
in
decl
pop
sar
pop
pop
aad
pop
pop
lcall
xlat
lcall
fdivr
push
push
pop
pop
int
xchg
out
in
mov
add
add
lods
lahf
repz
jmp
in
in
loopne
push
in
out
test
dec
dec
fdivrp
dec
dec
fdivrp
dec
dec
inc
inc
loopne
inc
inc
loop
inc
inc
jecxz
ds
xchg
xchg
xlat
push
jmp
mov
add
add
mov
cli
in
ljmp
in
loop
out
out
push
icebp
in
jmp
loope
inc
rcr
fwait
lcall
ss
xor
jmp
ljmp
in
ljmp
sub
decl
out
jmp
fldl
add
add
mov
jmp
rol
ljmp
out
jecxz
push
jmp
stc
cmc
repnz
sti
stc
idiv
cld
cli
stc
std
sti
cli
inc
and
out
jmp
and
lcall
push
icebp
jp
sar
fs
mov
jmp
out
add
add
mov
ljmp
push
out
push
in
out
stc
div
cld
sti
stc
std
cld
sti
std
cld
sti
inc
adc
idiv
push
push
stc
decl
or
inc
std
cli
clc
stc
cmc
lock
jmp
mov
add
add
lds
push
jecxz
push
out
ljmp
jmp
in
stc
div
sti
clc
cmc
sti
stc
idiv
leave
sbb
jmp
incl
add
mov
cmc
lock
out
out
lock
inc
mov
in
mov
popf
push
loope
out
in
push
out
ljmp
out
ljmp
loop
out
in
push
in
push
out
push
out
in
jecxz
fst
sar
lret
jmp
push
jmp
push
in
in
fmulp
inc
mov
out
mov
iret
in
out
push
jmp
lock
push
jecxz
push
in
in
push
in
push
jecxz
out
loop
out
loope
out
loopne
in
jmp
int3
jmp
lret
jmp
lret
aad
inc
mov
lock
add
xchg
jp
pop
xchg
jp
cmp
xorb
mov
scas
xchg
mov
scas
xchg
jbe
test
lcall
xlat
in
fmul
call
mov
ljmp
push
loop
in
jmp
aad
mov
add
add
lea
mov
insl
lcall
mov
scas
mov
mov
insb
mov
mov
pushf
loope
xchg
xchg
xchg
jnp
add
add
add
mov
leave
mov
push
ljmp
test
lcall
pop
cwtl
jnp
jg
xchg
jge
mov
xchg
mov
jl
lods
jns
scas
xchg
jg
mov
jnp
insl
mov
cmpsl
sahf
sub
cmpsb
pushf
pop
mov
cmpsb
popf
popa
cld
jg
add
pop
incl
loopne
incl
loopne
incl
loopne
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
incl
jg
inc
incl
incl
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
mov
add
into
ret
lds
add
cwtl
jge
and
loopne
fcmove
mov
loope
xchg
xchg
mov
xchg
mov
aam
ljmp
jmp
xlat
int
jecxz
leave
call
ret
mov
mov
xorl
jnp
pop
mov
xlat
into
jmp
fdivr
loope
jmp
fcmovnbe
call
aam
fmul
sar
mov
frstor
outsl
sbb
add
add
stos
popf
iret
out
int
in
jmp
rol
ljmp
jmp
push
lcall
enter
rol
dec
mov
stos
popa
les
int
in
jmp
rol
fmul
lret
call
ljmp
mov
ljmp
loopne
jmp
lret
dec
mov
add
leave
mov
jmp
xlat
int
in
jmp
aad
fcmovne
sar
pop
pop
leave
lcall
into
lcall
sar
pop
pop
sar
xchg
int
out
out
loop
dec
ret
mov
add
mov
into
in
ljmp
call
aam
push
push
dec
dec
dec
dec
inc
inc
loopne
dec
dec
xlat
jmp
mov
rol
mov
std
jmp
out
in
push
icebp
out
fcmovnu
out
mov
loopne
inc
inc
cs
xor
out
xor
in
out
in
ror
les
add
add
iret
ret
mov
jmp
loopne
push
ljmp
cld
sti
cli
cld
sti
cli
incl
in
adc
idiv
addl
push
jmp
lds
add
add
iret
ret
mov
push
in
push
repnz
out
out
push
out
call
stc
hlt
out
jnp
inc
inc
out
xchg
xchg
loopne
stc
icebp
jmp
icebp
in
call
lret
les
add
add
rol
mov
push
ljmp
out
loop
out
loope
out
loope
push
jecxz
push
loop
out
loop
out
out
ljmp
mov
xchg
jp
push
cwtl
jge
cmp
xchg
xchg
pushf
jbe
call
mov
scas
clc
lret
lods
xchg
in
jmp
xlat
leave
sarl
mov
lods
mov
mov
push
loop
test
lahf
test
lcall
push
pushf
jg
jae
nop
jle
cmpsb
mov
cmpsb
mov
fwait
jge
mov
repz
add
lock
or
lock
add
loope
add
sarb
rorb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
lcall
add
adc
test
fcompl
ret
pop
clc
in
pop
and
push
cmpl
repnz
cmp
inc
lods
sbb
xchg
gs
add
or
call
repnz
xchg
inc
movsb
sbb
rcl
bound
xchg
push
pop
imul
in
insl
pop
or
popa
pop
push
and
jp
and
sbb
or
add
inc
dec
lock
inc
fidivs
adc
subl
movl
insl
lret
sub
push
adc
adc
mov
popa
stos
jmp
xchg
cmpsb
sbb
sti
adc
jne
sahf
lcall
adc
adc
fwait
test
lods
sub
fsubrl
repz
xlat
push
pop
testl
jg
fdiv
jbe
mov
clc
ret
out
jne
mov
dec
inc
in
mov
jne
aad
add
jbe
xchg
in
push
jp
sbb
data16
pop
shlb
cmc
mov
out
push
mov
xchg
sub
xchg
pop
jae
sub
pop
shrl
ret
subb
xchg
or
mov
xchg
popf
or
fmull
dec
adc
xor
cmp
sbb
sub
or
inc
xchg
xchg
mov
int3
test
in
pushf
inc
int3
hlt
popf
mov
stc
lods
mov
push
test
sbb
loope
push
cmp
jno
inc
fiadds
out
adc
dec
daa
mov
ja
into
add
xor
xchg
mov
add
insb
out
lock
cmpsl
mov
push
outsl
fstpl
inc
pop
ljmp
cmovle
pop
pop
testl
mov
or
iret
lret
insl
sub
mov
push
xchg
sub
int3
aad
sbb
lods
out
aaa
leave
sbb
adc
or
xor
ja
subl
jbe
mov
jbe
lods
adc
lods
clc
fistps
out
les
jns
add
adc
pop
fs
sub
adc
xchg
pop
lahf
jbe
jns
andb
jle
negl
repnz
or
fst
cmp
mov
adc
mov
inc
stc
add
mov
sti
orl
mov
fnsave
and
cmp
mov
lds
add
lea
sub
outsl
ja
or
lods
pop
dec
cwtl
sub
sbb
lahf
mov
scas
mov
in
dec
mov
mov
popa
push
xchg
lods
int3
push
mov
jne
push
mov
std
push
repz
xor
mov
mov
cmp
mov
hlt
nop
jmp
lds
xchg
iret
pop
jns
add
add
fiadds
push
cmp
or
or
add
dec
andl
and
aam
mov
ja
xor
jo
cmp
fsubrs
loope
push
dec
mov
imul
mov
sub
push
iret
cmpsl
cmp
pop
rol
push
xchg
scas
pop
xor
push
cltd
sub
sbb
mov
push
test
dec
mov
fadds
pop
test
das
inc
xchg
push
call
int3
roll
inc
fsubrl
je
jbe
mov
jae
adc
cmp
sbbl
loop
jno
sub
ja
dec
dec
idiv
and
jecxz
push
je
loopne
lock
push
and
xchg
inc
sub
jo,pn
adc
add
mov
sbb
push
push
lods
push
dec
mov
or
out
sub
pop
cmp
roll
push
sbb
mov
daa
popa
dec
popf
sub
jns
sbb
inc
enter
test
std
xchg
sub
jb
push
pop
mov
mov
jns
lahf
std
idiv
sbb
xchg
cmc
idivl
je
lret
dec
or
sti
in
bound
mov
cmpl
sahf
sub
test
stos
negl
xchg
mov
int3
push
inc
pop
mov
jo
ret
mov
out
adc
das
js
sti
mov
adcb
out
movsb
xor
rorb
jnp
pusha
push
push
mov
cmc
cmp
movsb
lods
push
cmp
jecxz
dec
xor
call
xor
add
xchg
jno
lds
push
jg
xor
lcall
add
orb
aam
daa
jae
lret
into
icebp
add
adc
inc
pop
adc
mov
jnp
mov
hlt
add
andb
shrl
stc
ficoml
shr
rorl
pop
pop
sub
out
jp
xor
pop
int
ret
mov
or
xchg
daa
popf
ret
sti
fmuls
imul
and
jne
repz
pushf
icebp
pop
sub
sub
mov
or
data16
in
and
aas
outsb
mov
repnz
inc
mov
add
sub
pop
and
dec
ss
pop
std
mull
iret
pop
cmp
and
xchg
sbb
mov
es
adc
xchg
mov
movsb
sub
mov
aad
mov
lods
dec
sbb
inc
mov
mov
adc
pop
xor
push
cltd
jp
aad
push
stos
lea
aad
mov
mov
jecxz
adc
or
or
in
fisubrl
hlt
loop
sub
ss
xchg
jno
pop
sbb
sub
mov
imul
adc
fildll
mov
and
ret
inc
jo
adc
mov
dec
xor
in
push
mov
and
fwait
adc
insl
xor
out
pop
jl
push
and
call
dec
mov
add
dec
add
mov
test
icebp
cmpsb
sbb
std
sub
sar
xor
jmp
or
test
and
scas
sahf
jmp
rcll
into
dec
shll
and
fpatan
out
imul
dec
int3
inc
movsb
movsl
xor
xchg
mov
sub
int
out
push
fmull
pushf
adc
inc
sbb
test
out
movd
sbb
enter
fldt
pop
aad
add
fwait
out
mov
xchg
stc
mov
and
jbe
inc
push
adc
gs
pusha
outsl
sub
dec
mov
xor
loope
sub
mov
mov
dec
mov
sub
pop
pop
lock
movl
fisttpll
hlt
pmaxub
bound
cmpb
inc
pop
lea
cmc
push
dec
repnz
icebp
out
sbb
sbb
roll
jecxz
rorl
jge
imul
xchg
add
push
rolb
ljmp
mov
cli
fiaddl
dec
jno
and
repnz
jmp
ljmp
xchg
movsb
das
lahf
inc
sbb
daa
push
aad
fistps
lcall
sbb
outsb
cmp
sbb
lods
sub
push
inc
mov
jne
sub
test
loopne
rcrb
mov
cs
popf
cmp
sbb
sahf
mov
lock
aam
sbb
push
cltd
imul
dec
lret
xchg
push
pop
adc
sub
insl
mov
mov
cmp
pop
mov
mov
cli
lock
loope
xchg
iret
xchg
cmpsl
cmp
dec
push
mov
insl
stos
test
lahf
or
shl
enter
fs
pusha
iret
nop
shll
jp
lret
pop
dec
in
sbbb
icebp
lahf
xor
pop
inc
ja
bound
xchg
gs
inc
iret
outsl
mov
in
jne
jno
test
dec
adc
test
loop
inc
mov
jnp
adc
lock
rorl
lcall
fsubrs
mov
icebp
mov
add
or
icebp
push
mov
fimull
aad
xchg
mov
add
sarl
sbb
scas
ds
lahf
mov
lret
dec
out
dec
dec
arpl
dec
pop
dec
rorb
pop
push
or
add
jl
jns
mov
xor
jb
test
jge
andl
inc
jl
dec
adc
xchg
mov
mov
pop
dec
std
xor
push
pop
mov
outsl
jo
jno
mov
sub
add
in
xchg
sahf
dec
mov
repz
mov
mov
pop
jae
shr
shrl
pop
sbb
sbb
mov
bound
push
and
sub
rcl
jmp
pop
into
pop
sub
fsubrp
push
jg
out
out
sbb
adc
sti
mov
cmp
mov
xchg
jmp
ljmp
mov
lods
add
and
xchg
scas
dec
xor
mov
dec
and
or
mov
test
stc
inc
pop
stos
cltd
push
jbe
fimuls
jne
dec
push
jp
movups
xchg
or
add
hlt
insl
xchg
ret
into
loope
imulb
rcrb
dec
mov
sub
test
ret
push
sbb
push
push
out
test
jl
ret
loop
mov
jo
ud0
jns
jmp
jnp
push
shl
push
in
xchg
fisttps
dec
push
add
xchg
loopne
xor
jmp
xor
cmc
sbb
aaa
jbe
lods
push
dec
data16
mov
movsb
decl
mov
sbb
mov
xlat
inc
pop
out
inc
sub
in
jecxz
xchg
xchg
cmpsb
and
imul
sub
pop
movsl
or
xchg
add
xchg
ret
xor
cmp
push
mov
test
sub
aas
add
push
repnz
add
jo
mov
andl
mov
out
loop
fnsave
fsub
xchg
repnz
cmpsb
cmp
xor
xchg
js
int3
jp
inc
shll
les
dec
nop
shlb
cmp
fs
stos
cmp
jnp
pop
dec
xor
mov
bound
nop
test
xchg
lds
push
adc
jnp
outsl
scas
test
insb
ss
mov
dec
push
dec
stos
adc
xor
ljmp
bound
inc
jae
lds
inc
sarl
movsl
cmc
out
xchg
bound
sbb
push
out
enter
mov
fisttpll
shrb
sub
sbb
fwait
pop
jns
push
ret
xchg
dec
lds
or
adc
decb
incb
ret
pop
test
push
arpl
sahf
or
icebp
sbb
cmpsl
stos
and
lret
inc
xchg
mov
push
add
imull
fwait
mov
movsl
test
pop
lods
and
push
mov
mov
push
mov
jno
mov
xchg
call
jg
mov
lcall
in
sbb
mov
cmp
test
flds
adc
jge
inc
test
dec
cs
fistpll
ret
es
loopne
les
push
movsl
xor
out
xorl
and
into
add
mov
dec
outsb
fistpl
and
cmp
shll
std
test
dec
es
or
stos
dec
imul
mov
das
lods
repz
push
fmuls
into
lods
pop
aas
mov
aas
xorb
sub
adc
sbb
and
popf
pop
sbb
push
jle
loope
sub
sbb
xchg
outsl
mov
and
inc
lods
push
ljmp
fnstcw
pop
fsubrl
pop
rcr
rorl
jl
inc
or
mov
add
leavew
pop
add
mov
stc
cmp
dec
insl
pop
shlb
dec
and
imul
jnp
lods
in
push
fstpt
cmp
push
popa
stos
mov
mov
ret
pop
push
or
decb
inc
lcall
or
push
lcall
jns
popa
xchg
stos
sbb
cmp
test
mov
xor
mov
mov
fdivl
xchg
inc
sbb
jl
imull
sahf
lahf
mov
jmp
mov
mov
and
inc
in
dec
pop
add
mov
push
xor
sub
iret
data16
mov
sti
roll
cmpb
dec
ror
in
or
dec
leave
adc
lods
fwait
es
and
rcrl
cmp
mov
add
sub
mov
test
cmp
inc
leave
repz
pop
jecxz
xchg
adc
push
es
push
pop
xchg
aam
jno
cmp
sbb
hlt
or
outsb
jg
adc
mov
test
pop
dec
repz
loopne
cltd
cmc
jae
jecxz
cmpsl
inc
adc
xchg
cmp
push
out
jecxz
aas
pop
rorb
lods
mov
icebp
jmp
or
out
adc
jle
add
mov
ss
inc
adc
cwtl
mov
das
mov
adc
jne
imul
add
pop
mov
aaa
push
mov
loope
xchg
clc
jp
ss
mov
je
fidivs
andb
pushf
adc
xor
inc
jge
dec
leave
sbb
addb
int
jecxz
test
pushf
sti
mov
jle
dec
mov
dec
mov
aas
loopne
dec
sbb
clc
dec
out
lret
xchg
pop
add
pushf
adc
orl
mov
scas
and
cmc
xor
mov
fstl
insb
fnstsw
sbb
xor
cmc
jle
mov
push
xchg
push
out
cld
xchg
rorl
pop
outsb
jns
in
dec
int
dec
jge
jo
sbb
repnz
mov
ret
mov
mov
frstor
lret
or
hlt
cmp
cmpsl
push
outsl
pop
sub
inc
mov
aad
pop
jmp
test
inc
addb
ja
sub
pop
mov
iret
sub
mov
movsl
inc
out
stos
add
outsl
int
test
or
sub
and
push
add
pop
cmp
push
fmull
ds
jge
aam
cs
xor
or
jp
dec
add
cmpb
iret
leave
adc
mov
aam
jmp
enter
xorl
cmp
xor
gs
add
insl
xor
pop
scas
pop
aad
sti
jg
jp
bound
test
mov
cmp
push
cmpsl
mov
fs
clc
je
adc
jno,pt
mov
bndstx
push
dec
stos
mov
cwtl
aaa
sub
and
push
mov
das
and
rol
iret
adc
dec
mov
cli
adc
in
jle
jns
incb
xor
mov
sbb
and
inc
ljmp
fiaddl
push
mov
add
xor
fnstsw
lods
adc
popa
and
in
mov
imulb
sub
les
pop
fstpt
flds
cmpb
sub
xchg
insl
xchg
mov
int
jae
dec
inc
fnstcw
or
cld
xor
mov
ret
mov
test
sub
fldenv
jge
jl
pop
cmp
fidivs
push
xor
jle
mov
add
loop
push
xchg
outsl
cmc
sub
add
inc
dec
ds
add
lcall
in
cs
int
popa
sbb
arpl
lcall
pop
mov
out
je
std
fildl
repz
lret
or
jge
push
stc
out
cmpsb
test
lods
or
lret
dec
mov
mov
jae
adc
out
cmp
and
xchg
adc
pop
xchg
xor
lret
loope
sahf
pop
push
mov
int3
xor
pop
add
xchg
test
int
mov
mov
lock
push
ds
jmp
outsb
or
mov
int3
ds
outsl
pop
test
add
push
sub
mov
js
lret
jle
out
mov
jnp
adc
and
jne
out
mov
mov
clc
adc
aaa
xor
loope
je
push
jge
xchg
inc
inc
push
jnp
cwtl
dec
push
pop
pushf
inc
repz
test
pop
adc
lds
ljmp
insb
push
lock
xor
lock
lcall
mov
daa
mov
adc
iret
in
ficoms
or
mov
loopne
test
enter
cmp
lods
stc
fmull
add
dec
mov
loopne
push
addr16
ret
stos
dec
dec
mov
out
das
mov
mov
incl
movsb
lahf
je
movsb
mov
out
cli
xchg
pushf
or
shrb
cmp
fwait
mov
fdivrs
cmp
cli
std
mov
dec
ljmp
inc
stos
mov
mov
inc
sbb
jp
lret
lret
jle
inc
pushf
movsl
dec
call
adc
clc
mov
js
fisttpl
aam
fst
test
or
aas
xchg
mov
lret
mov
aaa
sbb
sar
loop
inc
aad
mov
mov
dec
js
sub
dec
xchg
scas
sub
jmp
loope
mov
popf
das
stos
mov
loopne
pop
lds
popf
scas
sub
xor
pop
push
mov
jl
mov
call
lds
push
push
fwait
jbe
jno
rcrb
daa
in
enter
fadd
cli
orl
cmpsl
jecxz
int
sbbl
jns
sbb
hlt
andl
dec
mov
sub
fcomps
pop
cltd
je
pop
das
xlat
dec
rcll
js
sbb
push
cltd
dec
jb
call
jge
int
shlb
xchg
xchg
cmpsl
js
shll
dec
push
mov
jno
dec
cmc
or
mov
in
jg
fdivrs
mov
stc
ror
ret
ja
movswl
xor
adc
xor
cwtl
insb
ret
dec
dec
inc
or
icebp
add
das
ss
dec
test
mov
stc
jns
sbb
push
mov
fst
push
movsb
xrelease
fwait
cmp
push
out
loope
mov
clc
dec
mov
sub
xchg
push
sbb
cmpl
push
mov
mov
push
les
fstps
into
roll
enter
sbb
cld
adc
filds
dec
lret
sub
pop
mov
ds
in
ljmp
jbe
sub
add
mov
ja
maskmovq
divl
lea
mov
add
lods
pop
add
and
stos
loop
ja
xchg
push
xor
ds
sub
cmp
out
mov
push
or
pop
mov
xlat
lret
enter
ret
mov
addr16
mov
jp
repz
dec
lock
loopne
cmp
mov
add
ljmp
dec
arpl
jp
test
subb
pop
add
popl
xchg
lods
mov
shrd
inc
and
mov
movsb
sbb
clc
in
adc
mov
sub
ss
or
xchg
sbb
mov
mov
fcmovb
mov
mov
xor
imul
or
mov
push
cmp
push
dec
lods
inc
rorl
fwait
test
enter
jo
push
leave
push
push
inc
pushl
fidivl
in
mov
sub
jl
ds
cs
popa
mov
xchg
jno
mov
rcl
jle
or
ja
dec
jle
cs
mov
scas
fadds
xlat
inc
inc
or
stc
shr
imul
mov
popf
sub
fwait
stos
pop
mov
dec
aas
xor
icebp
lret
aaa
in
pop
cmpsl
inc
mov
push
add
jbe
in
xchg
dec
xchg
and
push
inc
jp
movsl
inc
push
adc
insb
adcl
xchg
enter
xchg
adc
adc
in
mov
out
sub
mov
mov
mov
dec
adc
in
ds
idivb
in
lcall
sbb
push
add
cmpsl
sbb
mov
addr16
cmp
inc
xor
gs
and
cmp
pop
mov
jp
stos
mov
or
sbb
jmpw
cmp
jl
add
insl
jmpw
rorl
flds
xor
cltd
mov
movsl
pop
sub
dec
or
fimuls
jge
pop
mov
adc
xchg
mov
aad
rcrb
test
in
rol
aaa
das
sbb
scas
pushf
xchg
bound
aam
imul
fisubrs
aad
aas
popa
ret
lret
xor
pop
ljmp
cld
pop
add
ljmp
fs
clc
mov
repz
pop
fistps
outsb
pushf
in
cmp
xor
and
adcb
and
rcrb
lods
test
xorps
push
imul
and
aaa
icebp
pusha
sbb
sbb
leave
pop
cmp
push
imul
stos
bound
jle
iret
ds
lods
data16
cmp
dec
push
nop
shrb
stos
sbb
mov
and
outsl
cwtl
pop
sub
add
fdivs
leave
and
repnz
data16
cmpsl
lds
into
xchg
mov
dec
inc
mov
imul
pusha
sti
out
lret
inc
lret
mov
xchg
data16
int
jp
push
push
pushf
mov
mov
outsb
dec
loop
jo
inc
gs
xor
lea
mov
lret
lds
popa
insb
sbb
shl
push
mov
aad
push
lods
sahf
sbb
adc
fs
cltd
jae
mov
out
adc
gs
xchg
nop
xchg
mulb
or
cmpsl
jl
in
pop
cmp
cmp
fildll
add
dec
inc
sbb
jo,pt
push
lods
dec
mov
repnz
in
push
outsb
pop
mov
adc
inc
lahf
mov
sbb
test
and
cmpsb
xor
cmpsl
push
or
mov
aas
dec
adc
fldenv
sub
mov
push
push
jno
sbb
sbb
push
out
jnp
lret
gs
fldcw
pop
dec
or
test
sbb
cmp
lods
sbb
pop
fs
inc
mov
scas
xor
mov
cwtl
mov
jnp
inc
pop
xor
aaa
sti
pop
mov
rcrb
nop
jle
lock
cmp
push
jg
push
pop
mov
inc
loope
fdivl
psrld
push
arpl
daa
test
fistps
xchg
pop
fs
and
push
sbb
scas
mov
or
cmp
sub
inc
enter
mov
jns,pn
mov
insb
xorl
pushf
outsl
jae
xor
mov
dec
dec
ss
mov
push
pop
test
insl
outsb
sbb
push
mov
jge
sub
aaa
cmp
in
and
cli
cmp
mov
lods
mov
add
jns
push
jecxz
test
mov
jno
mov
and
mull
data16
jmp
inc
sbb
cwtl
dec
ret
add
mov
xor
inc
test
test
outsb
into
ljmp
in
and
clc
sub
nop
adc
mov
sub
add
cs
push
repz
mov
xchg
das
add
ret
jg
mov
pop
xchg
and
mov
xchg
hlt
mov
and
jnp
pop
jne
fdivrs
xorb
xchg
mov
and
gs
fisttpl
lock
push
rorl
stos
dec
dec
jmp
dec
mov
xor
mov
lret
lcall
adc
inc
test
push
divl
inc
pusha
lret
testl
xchg
jp
enter
sbb
out
or
iret
lds
ja
popa
inc
loop
mov
and
mov
mov
mov
pop
sti
lret
mov
mov
jl
fdivrl
xchg
std
lret
xor
into
and
mov
std
cmpsb
insb
or
push
out
pushf
xchg
push
inc
or
dec
xchg
xor
sbb
pusha
outsl
fadd
jmp
cmc
cmc
cmp
fs
mov
push
push
imul
cmp
sub
out
fistpll
jae
aas
adc
push
adc
jmp
pop
push
data16
int
and
push
jmp
dec
loop
mov
icebp
enter
pop
fldenv
gs
std
inc
in
jmp
cmp
aam
testb
jae
aas
sahf
mov
pop
aad
add
xor
sub
xchg
pop
or
mov
lods
adc
mov
add
sbb
lahf
push
scas
add
push
jae
xchg
arpl
lock
ret
pop
hlt
out
into
iret
out
sbb
cmpsl
xchg
lcall
mov
aad
es
xchg
out
push
push
xor
std
mov
lea
jg
xor
jge
cltd
jae
sbb
adc
ret
add
fisttps
pop
lea
and
mov
addr16
jo
call
gs
sbb
xchg
ss
mov
push
jnp
negb
mov
les
fnstenv
fsubr
outsl
jo
jb
fistpl
xchg
adc
or
add
lods
and
or
xchg
scas
mov
sub
iret
aam
scas
push
lcall
xchg
sbb
clc
int3
je
mov
lea
cs
lds
push
sbb
test
jp
adc
add
movsl
jo
lret
jle
es
push
or
cmp
bound
daa
jne
sbbb
rcrb
push
out
pop
scas
push
aam
xor
xor
adc
shll
jle
ds
ja
std
push
jmp
sub
je
sub
dec
ja
xor
in
sbb
cli
js
push
mov
xor
mov
dec
or
adc
sarl
loopne
xchg
dec
lea
xchg
jne
inc
pop
daa
or
test
push
add
sub
cmp
and
cld
data16
sbb
or
int3
cmp
mov
sarb
and
xchg
mov
ret
cmp
sbb
test
sub
lock
push
xor
sar
push
cmpsb
push
pop
and
mov
dec
das
jmp
stos
and
hlt
shll
pop
pop
ja
pop
les
jmp
mov
test
inc
rolb
xchg
out
jmp
xchg
popa
dec
mov
loop
rcll
out
fsubrs
jp
adcb
or
ds
cmp
inc
imul
push
stc
jmp
xchg
aaa
jno
test
stos
aad
jnp
jo
lods
out
sbb
fistpll
les
inc
lcall
push
or
ss
jl
and
dec
dec
outsb
and
and
ret
jb
in
cld
popa
cs
adc
pushw
loope
rcll
add
push
add
push
rcrl
popa
xchg
and
outsl
movsl
mov
fdivrs
add
addr16
and
jg
pop
push
fstps
xor
imul
sbb
jmp
scas
add
inc
das
dec
pop
lahf
repz
dec
push
xchg
xchg
int
xchg
call
mov
mov
xchg
inc
xor
or
push
mov
iret
xor
mov
dec
cmp
jbe
in
dec
aad
lods
repnz
fwait
jp
adc
popa
testl
sbb
jo
pop
lea
xchg
mov
sbb
dec
pop
out
lea
bound
and
insb
dec
push
outsb
xchg
xchg
cwtl
cmp
insb
cwtl
cmp
push
dec
xlat
and
mov
or
push
mov
xchg
cmpsl
sbb
addl
add
in
cmp
or
repnz
out
push
push
xchg
sbb
ja
add
out
pop
pop
xchg
enter
cmp
mov
jo
mov
cmp
mov
mov
pop
mov
lcall
jge
pop
sbb
push
sbb
sbb
sub
rol
repz
add
cmp
jne
outsl
mov
cs
xchg
dec
lds
cmp
xor
std
cmpl
jl
lock
xlat
push
outsb
mov
sahf
insb
mov
sbb
mov
shr
and
mov
lret
das
xchg
jmp
repnz
pop
int3
sub
inc
add
bound
xchg
jno
mov
xchg
inc
in
daa
dec
push
notb
mov
cld
or
mov
push
or
call
out
sar
adc
jg
je
iret
test
lods
fwait
cmp
sub
nop
cmp
inc
out
push
mov
test
dec
ja
fdivrp
sbb
repnz
push
xorb
push
in
adc
cmp
mov
lods
or
ja
push
dec
into
sahf
sub
dec
pop
add
enter
repz
imul
mov
movsb
in
xor
jnp
mov
repz
sbb
and
loope
mov
fs
push
fcmovnbe
inc
stc
les
rorl
xor
xor
or
les
and
or
mov
pop
insl
sbb
in
inc
xchg
xor
dec
sbb
push
pop
pop
ss
xor
rorl
add
xor
clc
or
pop
sbb
stos
lds
nop
mov
cmp
mov
ss
and
cwtl
mov
mov
mul
xor
test
inc
and
repnz
decb
pop
mov
test
push
addr16
and
pop
fistps
jp
in
jmp
rcrb
xchg
fsubs
out
mov
sub
movsl
jge
lret
mov
test
add
dec
mov
outsb
dec
leave
sti
inc
xor
leave
out
ss
mov
nop
and
jp
fcomi
push
pop
imul
sbb
in
mul
mov
cmp
xchg
popf
mov
fildll
pop
lea
test
in
in
out
sbb
sti
leave
popf
test
lcall
mov
je
pop
leave
shll
xchg
mov
add
sbb
dec
jmp
cmp
jb
aas
or
and
dec
test
fnstenv
adc
mov
addr16
sarl
fidivrl
scas
xchg
jo
int3
adc
xchg
es
clc
scas
dec
insl
int
adc
cmp
enter
aas
in
in
jge
adc
fmuls
mov
into
mov
inc
cmp
cmpb
sahf
mov
jle
push
nop
pop
inc
aaa
sub
mov
jo
adc
lcall
xchg
int
fsts
sbbl
repz
xchg
clc
pop
mov
pop
mov
mov
popa
nop
std
sarl
push
pop
leave
xorl
xor
jge
jp
aas
xchg
lcall
fidivs
jno
lret
lds
push
ficompl
mov
test
cmp
ljmp
sub
fidivl
leave
sub
sbb
xchg
inc
dec
add
or
jge
mov
nop
mov
js
out
mov
or
inc
mov
clc
mov
inc
int
mov
stos
jle
inc
sbb
mov
icebp
fidivl
or
sarb
mov
jecxz
mov
mov
xor
fdivs
cmp
pushf
jge
sub
jno
jns
inc
jbe
push
dec
in
xchg
mov
fdivl
mov
mov
int
int3
ds
mov
addl
imul
dec
fdivrl
nopl
mov
movsl
ds
jmp
push
mov
inc
arpl
mulb
xchg
adc
out
add
inc
mov
cmc
xchg
mov
adcb
cmp
xor
or
cmp
out
sbb
pop
or
jp
enter
mov
mov
stc
loop
push
testb
stos
xchg
pop
rcr
push
outsl
rorb
addr16
pop
push
mov
or
xor
mov
loopne
jo
call
lds
inc
bound
xchg
in
push
push
in
rol
inc
push
cmp
adcl
hlt
pop
pop
imul
or
lods
fwait
mov
sti
out
push
inc
fadd
inc
dec
shrl
inc
loope
jle
adc
mov
shlb
mov
xchg
jb
push
popa
and
jne
push
into
dec
jns
mov
les
lds
mov
push
and
push
push
jp
loopne
sub
or
mov
rcl
mov
pop
jle
lcall
stos
cmpsb
mov
pop
loopne
xchg
cltd
ficompl
xchg
ja
xchg
or
mov
pop
inc
hlt
add
roll
cwtl
cmp
loopne
jp
cmpsb
push
out
and
cmpsl
cmpsb
add
rcrl
push
sub
cmp
and
dec
fwait
pop
add
das
iret
idiv
xor
ret
in
sub
stc
push
mov
inc
cmc
dec
movl
test
pop
push
fwait
imul
dec
cmp
cwtl
sbb
fadd
inc
jo
data16
test
adc
xchg
std
dec
mov
and
dec
pop
xor
push
adc
mov
ret
jns
lock
lock
xor
enter
movsb
enter
aam
out
push
xchg
adc
or
or
fldl
test
jmp
lock
loopne
xchg
jg
sbb
mov
stos
xor
lea
inc
jae
push
dec
push
adc
mov
push
mov
movsb
lahf
jo
enter
jmp
push
jp
mov
es
shll
rclw
xchg
scas
push
xchg
inc
mov
xor
aad
jg
sahf
daa
dec
scas
jp
mov
add
push
out
sbb
adc
sbb
rcr
in
mov
mov
cld
sbb
mov
out
outsl
addl
gs
imul
jmp
xchg
ds
aas
sarb
sub
push
cmp
adc
loopne
cwtl
xchg
mov
or
insb
pop
mov
je
icebp
xor
sub
sub
add
ljmp
fisttpll
out
fnsave
test
jge
aad
enter
xchg
enter
sbb
xchg
jno
jb
cmp
pop
dec
daa
fcoms
cmp
sub
adc
add
pop
arpl
leave
mov
mov
push
popf
cmp
lea
jp
adc
adc
repz
xchg
push
sub
mov
mov
fdivrs
cwtl
inc
lcall
stc
daa
bound
mov
push
jbe
loopne
div
cmp
mov
stos
mov
andl
roll
jno
mov
xchg
cmc
jle
xchg
fcoms
mov
xchg
sub
mov
adc
imul
xchg
cltd
mov
sub
shll
cmpsb
loopne
adc
flds
mov
iret
int3
out
adc
fwait
call
xchg
and
lea
sub
ret
inc
add
ret
js
xchg
hlt
mov
jo
dec
sub
and
leave
add
adc
mov
mov
daa
cmp
dec
add
rcll
adc
cmc
sahf
or
mov
mov
cmc
inc
stos
in
cwtl
ret
push
popa
imul
push
mov
xor
out
das
pop
sbb
dec
and
mov
test
iret
inc
test
in
inc
sbb
movsb
decb
xchg
adc
insl
jb
and
push
cs
mov
jns
mov
ds
in
jg
lock
cmp
sarb
push
cmp
push
cs
jno
or
cli
pop
insb
imul
add
cmpsb
bound
fcoml
xchg
test
andb
add
iret
insb
dec
pop
lahf
cmp
fcmovu
mov
xor
push
jmp
xchg
xchg
push
mov
andb
nop
sub
sbb
adc
and
lock
or
mov
mov
sub
xchg
xchg
fisttps
xorl
scas
jo
pop
lret
cwtd
pop
test
xchg
shlb
imul
jmp
arpl
roll
add
xor
ja
test
jg
jg
ss
icebp
test
cld
pmuludq
mov
addl
dec
sub
lret
xor
sbb
mov
dec
dec
les
sti
cmp
or
je
inc
stos
sarb
pop
sbb
fwait
cwtl
xchg
xor
mov
pop
movsl
jp
sub
jmp
xchg
cmp
sub
out
outsb
mov
shrl
shl
pushf
pop
sbb
fldenv
ljmp
mov
dec
inc
jno
jle
addr16
popa
cld
stc
mov
sbb
hlt
jno
js
imul
cmc
lods
xor
jge
rcrb
rcr
add
pop
shlb
mov
fidivl
imul
cltd
and
mov
or
pop
orb
rclb
mov
lret
inc
call
mov
fstp
out
in
insl
repz
mov
mov
pusha
push
jnp
jae
lods
mov
xchg
jnp
and
sbb
jns
mov
push
mov
xchg
or
jge
cltd
push
orl
fwait
int
lods
mov
jmp
sbb
insb
add
fsubp
pop
jecxz
aas
sbb
incl
fildl
sbb
xchg
push
in
dec
inc
sub
push
or
sti
sbb
jno
sbb
test
inc
pop
nop
pop
push
dec
or
jo
push
add
cmpsl
jmp
push
out
lahf
pop
cmp
push
cli
xchg
add
sbb
push
je
jns
sbb
int3
inc
push
add
mov
ret
pop
mov
mov
mov
push
dec
xchg
add
bound
cmp
out
ret
fwait
in
lods
adc
xor
cmp
lods
out
pop
pop
cmpsb
mov
or
pop
and
sar
mov
out
shll
leave
push
and
mov
fwait
insl
mov
orb
in
das
movsb
incl
shll
outsb
and
push
add
xor
push
pop
jge
xchg
popa
inc
and
ljmp
fcoms
pop
outsb
int3
push
and
pop
test
jb
mov
push
push
insb
mov
out
cs
and
and
sub
icebp
adc
addr16
inc
repnz
outsl
xchg
lods
in
sub
rorl
and
inc
fstpl
test
out
es
leave
mov
fidivrs
xchg
test
cmp
adc
and
shl
js
inc
dec
or
in
mov
in
adc
mov
fdivp
sbb
movsl
xor
scas
mov
adc
inc
loop
loopne
cmc
push
fbld
fwait
mov
jbe
test
packuswb
mov
leave
into
and
frstor
lret
movsb
repz
mov
dec
sti
or
or
jne
nop
adc
pop
and
push
mov
jp
inc
pop
push
fadds
cwtl
ret
jl
int3
push
pop
lods
gs
inc
scas
and
dec
xchg
std
lret
outsl
sub
lods
mull
add
cld
cmpsl
push
cmpsb
test
lods
jle
jp
pushf
pop
mov
shufps
mov
es
fdivrl
pop
xor
jl
mov
adc
jo
rcr
push
out
loope
imul
mov
rorb
fisubs
aas
data16
filds
xor
mov
xlat
data16
xchg
pop
cmp
inc
jp
sub
imul
in
cld
adc
jmp
stos
and
sbb
push
stc
leave
into
mov
movsl
fcmovne
daa
mov
test
adc
mov
addr16
mov
mov
outsl
inc
js
aas
je
adc
shll
xchg
jl
pop
mov
out
in
pop
daa
adc
mov
jmp
add
xchg
pop
pusha
mov
in
lds
xchg
sub
adc
stos
lock
ljmp
ljmp
mov
sarb
sbb
int3
adc
xor
xchg
or
inc
loopne
jne
cmpsb
sub
inc
pushf
out
inc
shl
pop
cmc
mov
fdivrs
fs
pop
pusha
inc
push
jmp
sbb
test
sub
inc
push
mov
push
cmp
lods
xchg
and
loope
in
xor
fstl
call
pusha
mov
insb
gs
pop
and
pushf
dec
out
xchg
add
add
push
jns
or
mov
mov
lcall
push
xor
jne
pop
pop
push
mov
cmc
mov
jmp
mov
push
ret
xchg
cmpsb
int
push
sarb
movsb
sbb
mov
cs
arpl
lcall
push
enter
ds
jle
add
loopne
push
xchg
movnti
sbb
add
add
sub
std
test
xchg
lds
out
dec
notl
test
mov
inc
or
or
clc
scas
negl
jmp
ficoms
push
sub
add
push
mov
out
leave
pusha
push
push
jno
popa
dec
adc
xchg
ja
imul
test
xlat
jbe
jp
les
dec
adc
enter
ret
mov
cmp
cmp
je
loop
mov
scas
rclb
push
add
aad
movsl
jmp
push
es
mov
in
mov
mov
loope
dec
pop
pop
aaa
cld
out
mov
nop
push
push
lock
mov
int
jb
inc
inc
dec
nop
imul
sahf
fidivrs
mov
jge
popf
mov
sahf
dec
cld
pop
out
or
sub
cwtl
cwtl
mov
and
jl
and
add
sbb
pop
sahf
aaa
cmpb
sub
xor
dec
sub
stos
or
cmp
in
sbb
pop
orl
adc
mov
shr
mov
cli
movsb
xchg
pop
sbb
arpl
in
lret
sub
sbb
rol
test
jns
les
ret
mov
lods
pusha
imull
pop
mov
pushf
pop
mov
jae
ja
fisttpl
fwait
inc
sub
xor
pop
sub
push
cmpb
pop
jge
adc
cmpb
inc
aaa
cli
loopne
decb
jmp
xor
ficompl
mov
mov
divb
xchg
aam
cli
sbbb
push
push
cmp
add
push
pusha
cmp
xchg
xor
mov
rorb
jg
addr16
cmpsl
dec
lods
nop
xor
push
mov
mov
push
nop
test
icebp
enter
shr
add
sub
out
inc
push
mov
xchg
cmpsb
fs
pop
sub
and
jp
or
inc
aad
push
popf
aas
push
xor
mov
dec
fstps
test
std
lcall
aad
jno
cmpsl
ret
leave
incb
imulb
cmp
sarb
leave
adc
shlb
insb
or
not
sbb
loop
sbb
or
pop
xchg
loop
sbb
push
std
dec
mov
mov
hlt
xchg
xorl
jecxz
push
mov
shl
sahf
out
cmp
dec
call
fstl
fimull
and
sarl
push
jge
xchg
call
lret
xchg
mov
inc
dec
add
iret
jp
push
push
cmpl
or
adc
push
int
pop
jle
fisubl
push
mov
scas
pop
out
sub
pop
mov
jns
fmull
shrb
jo
jno
fistpl
sub
dec
loope
idivl
je
mov
pop
es
pop
mov
push
pop
jbe
pop
mov
dec
add
lods
and
sub
push
mov
mov
clc
dec
out
and
push
outsl
ret
std
lods
dec
sub
idivl
and
lds
das
imul
mov
int
mov
xchg
pop
jp
push
push
lock
xchg
mov
mov
jns
orps
insb
lods
cwtl
lret
ret
lcall
cmpb
and
jmp
pop
jl
sbb
push
fcomps
loope
test
in
cs
lret
scas
jmp
aas
ljmp
mov
repnz
inc
xorps
xchg
inc
jmp
sbb
aas
in
popf
push
fmul
mov
lret
xchg
sub
rol
mov
fwait
repnz
repz
fidivrl
notb
jg
loop
sbb
pop
dec
inc
icebp
fsubr
daa
in
jae
jle
jmp
push
or
shl
lret
test
sub
out
dec
insl
fsubrs
mov
mov
pop
lods
jl
and
lds
sbb
frstor
repnz
fcmove
xchg
mov
mov
aam
cmp
mov
loop
fwait
mov
pop
push
mov
sbb
jb
loop
add
cwtl
loopne
addb
or
inc
adc
jg
cmpsl
xlat
push
xchg
mov
clc
add
sbb
das
test
xchg
test
loop
sub
inc
inc
xor
out
aas
repnz
test
xchg
shl
loope
xchg
jge
xor
call
fistpll
sbb
mov
stos
sub
cmp
inc
mov
and
pop
insl
shl
sub
push
daa
fbld
jne
mov
bound
popf
add
or
cltd
mulb
sbb
adc
test
imul
push
repz
mulb
xor
shll
mov
je
ret
fsubrs
pop
leave
adc
adc
lods
mov
xor
ja
iret
xchg
mov
mov
pushf
gs
mov
aas
lret
lcall
js
push
mov
imul
jb
xor
push
add
cltd
mov
sbb
rep
bound
pusha
adc
sahf
mov
bound
lock
push
aas
repnz
xor
test
leave
cmpsb
aas
mov
or
sub
jnp
leave
push
jmp
xchg
test
adc
stos
fucom
and
or
jmp
jmp
mov
and
jnp
sbb
imulb
inc
push
mov
in
pop
pop
mov
sti
lods
jb
mov
popf
mov
nop
sbb
cs
mov
mov
and
jno
and
add
aas
cmp
leave
pop
cwtl
shr
outsl
and
inc
mov
push
sbb
lcall
cmp
sbb
rcll
ljmp
mul
int
lods
adc
mov
popa
jge
cli
cmpsl
nop
sbb
vmovups
jae
adc
daa
movsb
aam
rorl
mov
cmp
int3
pusha
or
cmp
inc
inc
loop
sub
shl
lret
movsb
ret
pop
inc
out
rcr
push
xor
inc
jno
cs
pop
hlt
push
push
mov
and
in
fildl
add
adc
push
clc
add
jmp
sbb
inc
push
data16
ficompl
cmp
pushl
out
incb
rcrl
cltd
pop
pop
lods
jmp
cwtl
repz
xchg
test
mov
orl
lds
test
dec
and
lods
xchg
or
push
call
xchg
mov
mov
dec
ss
mov
fwait
cld
je
xlat
aas
outsl
mov
icebp
test
sub
out
lea
gs
mov
add
mov
out
sti
jmp
sbb
cmpsl
adc
mov
lahf
xlat
shll
push
sbb
test
sbb
mov
cmp
or
xchg
sub
xchg
and
mov
cmp
in
jmp
push
enter
pop
xor
xchg
std
loop
cmp
leave
roll
test
jns
lods
mov
ja
add
pop
dec
dec
mov
les
das
test
dec
add
cld
mov
cmp
mov
add
cmp
scas
adc
movsb
cwtl
repnz
ret
hlt
fdiv
movsl
lods
test
fstps
ret
and
push
xchg
mov
repnz
push
jg
cmp
fdivrl
lahf
call
cmp
sbb
vshufps
mov
mov
lahf
lds
pusha
push
mov
dec
push
dec
inc
mov
jmp
notb
jne
jge
pop
or
jg
cmp
mov
insl
icebp
jb
jb
imul
xchg
hlt
aas
jecxz
jp
cmp
push
addl
xchg
dec
mov
jbe
dec
dec
mov
in
push
sbb
data16
das
imul
lahf
jbe
subb
pop
inc
hlt
xlat
jo
pop
lods
mov
fcomps
mov
push
leave
mov
cmpsl
lds
sub
jmp
or
mov
cmc
stos
insl
cwtl
lahf
pushf
push
ficompl
cmp
ret
in
inc
cli
sub
inc
mov
mov
inc
stc
insl
cmp
movsl
js
xor
stc
sub
pop
cmc
inc
out
out
add
cmp
fnop
dec
fucomi
out
fwait
jmp
sti
lea
inc
pop
icebp
sub
jp
mov
daa
fbld
lret
adc
mov
adc
jns
jno
andl
ret
lods
dec
mov
shll
pop
xchg
or
cmp
bound
xor
xchg
and
pop
std
inc
insb
pop
lcall
adc
mov
jbe
pop
cld
jp
scas
fiaddl
test
cmp
or
or
test
dec
mov
sub
insb
insb
xchg
push
sbb
pop
jp
test
cld
xor
xchg
and
lret
nop
fwait
rolb
sbb
pop
mov
adc
or
mov
je
inc
sbb
xor
mov
ss
dec
xchg
adc
and
das
xor
cmp
addr16
inc
fs
adc
ljmp
xor
jp
outsb
jo
fsubr
outsl
mov
inc
cli
jb
xchg
sbb
pop
cmp
mov
inc
sti
lods
jae
jae
imul
push
daa
xor
jmp
leave
jp
pop
dec
xchg
jg
lret
mov
or
mov
addr16
sub
lds
inc
sarl
call
or
xor
xor
rclb
pop
lret
push
scas
out
dec
adc
and
cs
sub
mov
jo
fcomps
scas
mov
add
inc
jnp
jg
xor
aam
dec
fildl
addr16
rcrb
mov
xor
pushf
add
mov
in
sub
mov
lea
xchg
push
nop
mov
xchg
pop
inc
pushf
mov
jno
mov
mov
push
call
jbe
int
fwait
je
cmpsl
leave
adc
gs
jmp
sbb
das
mov
sub
stos
cmp
fdivrl
call
jae
jmp
movsb
xchg
inc
js
push
sti
scas
jo
movsl
dec
outsl
nop
outsb
cmp
adc
jl
sti
adc
addr16
jne
push
jbe
jg
sbb
subb
imul
lods
xor
iret
shll
cmp
add
jae
sbb
mov
aad
cmp
xchg
mov
mov
xchg
sub
data16
rcr
inc
pop
movsb
imul
sbb
cltd
pop
inc
mov
jae
sub
push
mov
and
ret
cli
ret
orb
mov
into
mov
inc
add
cmc
addl
jbe
lret
pop
test
or
mov
cmpsl
mov
nop
icebp
mov
xchg
mov
ja
xor
adcl
cs
shrl
mov
enter
sti
push
flds
cmp
and
push
xor
inc
insb
push
mov
dec
pop
in
sub
mov
jle
mov
dec
mov
negb
test
jnp
pop
add
dec
xchg
ja
jmp
imul
ret
sbb
cld
aas
add
adc
mov
test
lods
jmp
gs
fdivrp
push
out
sbb
xchg
shrl
jle
jo
mov
es
and
pop
cmpl
xorb
mov
sbb
std
insl
sbb
fcmovnb
lods
mov
movsl
pop
sub
ror
pusha
sbb
push
push
mov
sbb
fdivrl
test
loop
cwtl
ret
push
repz
pushf
dec
dec
push
insb
popa
les
adc
fs
cmp
cmp
loopne
imul
sarl
sbb
int
xchg
scas
and
adc
out
jp
insb
mov
mov
in
fsubrs
jmp
mov
xor
sbb
push
dec
mov
push
push
inc
or
xor
lock
dec
stos
rorb
stc
or
loopne
test
push
cmp
movsb
xlat
loop
sub
hlt
xor
push
pop
dec
jp
divb
push
sbb
idivl
mov
push
stos
pop
or
imul
jmp
fdivl
lock
andl
js
dec
adc
cmp
repnz
pop
out
ljmp
and
hlt
xor
sub
mov
shlb
add
lea
lahf
add
push
js
movsl
in
pop
pop
ret
or
adc
flds
jae
cmp
xlat
mov
arpl
adcl
fistl
lea
ficomps
xchg
cmp
std
out
jmp
sub
and
mov
out
adc
jnp
outsl
imull
dec
cmc
sub
mov
sub
fcom
loop
xchg
pop
mov
xchg
add
gs
mov
hlt
push
jp
ficoms
adc
adc
maxps
pop
enter
lcall
fwait
and
ss
pop
mov
in
sbb
movsl
dec
jl
in
jmp
jge,pn
mov
leave
xor
and
popa
lret
and
int
icebp
xchg
mov
icebp
push
sub
mov
mov
out
mov
cld
stos
xor
out
pushf
ret
stc
into
js
shlb
mov
in
call
outsb
mov
dec
mov
xchg
mov
add
jl
daa
dec
sbb
scas
loope
imul
sbb
into
lret
test
out
mov
insb
test
xchg
test
mov
out
setb
shll
add
cmp
cltd
mov
mov
mov
pop
ja
mov
dec
dec
inc
icebp
es
adc
xor
or
mov
xchg
loop
push
pop
push
aaa
leave
cmp
mov
pop
lods
mulb
push
lahf
gs
mov
les
dec
sbb
sti
outsb
repz
cmp
sbb
popa
scas
pushf
fstl
pop
hlt
insl
mov
adc
pop
lahf
popf
repnz
mov
outsl
xchg
out
pop
inc
xor
push
fimuls
mov
rcrl
add
jge
repnz
jmp
lea
ret
int
mov
rcrb
loop
daa
das
rolb
mov
and
cmp
pop
fsubl
test
lea
lods
mov
sbb
jb
rorb
push
pop
push
lods
push
mov
pop
or
xchg
addr16
scas
add
pop
repnz
fnstenv
sub
cmp
push
in
push
mov
out
je
mov
cmp
gs
push
int3
mov
dec
cmpsl
pop
adc
jge
xor
mov
dec
cld
pop
shrb
or
setg
addr16
iret
movsb
sti
imul
out
adc
dec
movsl
mov
adc
clc
es
int
or
mov
lcall
mov
xor
mov
scas
cmp
and
cmp
pop
push
mov
xchg
add
jmp
repz
popf
mov
arpl
adc
mov
je
popf
xlat
ret
aaa
jge
sub
cmpsb
ja
js
jg
lcall
sahf
mov
int
fistl
add
cmpsl
divl
out
loopne
dec
nop
data16
in
cmp
loopne
inc
push
je
mov
xlat
push
inc
xlat
jbe
test
fiadds
push
sub
jg
clc
pusha
jmp
stos
je
or
je
arpl
rolb
xor
add
xorb
enter
jno
dec
sub
inc
sub
mov
pop
cltd
in
test
push
pop
dec
inc
cmp
mov
rcll
jmp
xor
xor
add
push
test
ficomps
pop
push
das
lods
cmp
iret
sub
xchg
mov
into
cmpsb
jp
ret
andl
in
leave
pop
pop
stc
cmp
adc
dec
jbe
mov
in
aam
icebp
cmpps
sub
push
add
sahf
fs
stos
cmpsb
mov
call
adc
jo
dec
lods
cmp
push
jl
cmp
and
fildll
lock
ret
test
dec
push
and
and
add
jl
test
or
xor
insb
call
jmp
xchg
cmp
sarb
cmovns
jge
sub
add
bound
imul
push
dec
cmpsl
sbb
in
mov
xor
cmpsl
in
mov
hlt
cmc
pop
and
sub
cltd
xor
outsb
lds
les
mov
adcb
insb
test
xor
jnp
push
inc
adc
aam
imul
push
sub
or
aas
pop
insl
sub
mov
xor
movsl
mov
mov
cs
sbb
scas
jp
incb
jne
sbb
movsb
aas
cmp
aad
stos
out
xchg
jle
ja
icebp
mov
ds
dec
inc
ja
out
jns
cld
push
mov
rorb
xchg
stos
ret
insl
xchg
pop
ficoml
scas
test
mov
stos
add
sbb
add
sub
pop
push
es
push
out
adc
aaa
sub
sub
fcmovbe
ret
or
js
ja
cmpsl
mov
fsubrl
scas
outsb
and
cs
xchg
pop
bound
dec
xor
push
pop
cmpsl
cmc
ss
and
lret
loopne
insl
dec
bnd
push
xchg
movsl
sahf
les
mov
mov
cmp
test
or
pop
out
dec
inc
fisubs
sub
loop
inc
jne
cltd
mov
pop
add
xchg
sarb
popf
dec
mov
js
xchg
cmpsl
mov
cmp
nop
aad
lret
loope
repz
rcr
lods
mov
andl
ljmp
adc
xchg
cmc
stos
inc
stos
sub
pop
or
mov
inc
movsb
enter
jecxz
ja
adc
cmp
push
aas
add
call
out
iret
daa
add
xor
orl
enter
lea
sbb
insl
mov
add
out
add
adc
push
mov
icebp
test
lea
add
stc
inc
test
clc
jno
lcall
mov
pop
cs
scas
stos
cmp
lea
mov
insb
repnz
fadds
fisubrl
or
in
push
test
xchg
iret
push
mov
rcr
lods
imul
mov
mov
nop
mov
sbb
int
inc
ljmp
jns
test
add
mov
push
sub
jl
sti
test
mov
jl
jg
push
add
pop
cmpb
loopne
mov
aaa
jno
xchg
test
push
mov
add
adc
inc
clc
push
aam
sub
lret
pop
cmp
stc
js
xlat
xchg
aad
pop
mov
lods
jmp
adc
mov
sub
pusha
incb
repz
xchg
ja
sub
add
inc
pop
popw
xchg
fwait
adc
and
dec
pop
and
mov
push
xchg
movsl
out
pop
jge
jns
push
repnz
mov
es
rcr
pop
mov
jge
lds
outsl
test
insl
int
mov
cmpsb
mov
jecxz
jno
jl
aam
test
mov
fpatan
in
inc
dec
imul
sbb
adc
iret
fidivl
mov
cs
sub
cmp
leave
mov
movsl
jae
jnp
lret
jg
ljmp
lods
cltd
bound
adc
popf
cltd
sub
bswap
gs
lods
test
mov
pop
sahf
mov
icebp
sub
or
scas
add
jnp
iret
call
and
mov
testb
sbb
lret
aaa
cmpsb
inc
pop
xchg
cmpsl
add
divb
jp
sbb
adc
inc
push
cltd
jb
lds
sub
sub
dec
rcl
dec
xchg
mov
xchg
stos
mov
and
push
les
stc
rcl
shl
pushf
shll
pop
mov
mov
dec
mov
inc
pop
daa
imul
add
jne
mov
rcrl
cld
pop
cmpsl
sub
cwtl
cmp
jle
xchg
pop
decl
mov
es
sub
add
shll
iret
adc
jecxz
or
cwtl
repz
xor
popf
sub
lret
out
inc
add
sbb
sbb
inc
inc
loop
pop
lods
popf
les
pop
loope
sbb
stos
into
outsl
mov
inc
mov
movsb
add
fwait
ds
idivl
jl
movb
je
dec
call
mov
push
sbb
loopne
add
pop
mov
xchg
out
and
scas
jmp
xor
mov
ret
jecxz
int3
test
into
test
aam
loop
nop
in
push
nop
sub
inc
cmp
lock
fistl
pop
push
xlat
jle
pusha
sub
std
mov
adc
jbe
shll
ret
xlat
xor
mov
loop
out
sbb
sub
jbe
mov
pop
or
inc
mov
sti
adc
xchg
call
out
pop
mov
adcb
out
xchg
jne
push
mov
fcomip
mov
inc
sub
push
dec
mov
in
out
sub
ds
rcrb
push
xchg
adc
add
mov
xor
std
das
mov
jg
xor
imul
and
push
ljmp
add
adc
insb
test
jecxz
movsb
mov
fmull
sub
push
or
sahf
ja
jmp
bound
xor
fnstenv
sbb
push
mov
mov
enter
sub
pushl
test
push
push
out
adc
imul
push
lret
shll
in
shrl
testb
jmp
push
mov
shlb
pop
dec
push
in
adc
sbb
and
nop
xchg
notb
xor
sbb
jae
sahf
lfs
nop
xchg
rcll
lods
rorl
or
add
std
call
pop
dec
ja
pop
fs
xor
or
push
cmpsl
fs
leave
sbb
jbe
and
test
lahf
mov
sbb
add
les
lods
sub
out
mov
ror
stc
stos
test
push
arpl
mov
aas
out
jne
popl
sbbl
lret
pop
inc
out
push
xor
sub
dec
insb
mov
and
mov
jg
out
jg
xor
les
xor
je
xchg
stc
mov
repnz
roll
mov
lock
test
add
jne
cwtl
repnz
mov
push
aad
popa
adc
cmp
in
push
and
sub
lods
testb
jae
movb
push
jb
mov
shlb
pusha
xchg
loopne
and
or
jg
or
pop
and
or
adc
loopne
aam
mov
sub
sbb
pusha
adc
movsl
lods
add
fmuls
jbe
js
pop
add
or
flds
jb
mov
out
fidivrs
mov
sbb
arpl
push
test
lock
push
es
sub
enter
mov
cmp
mov
jge
movsl
sub
and
lds
push
arpl
or
sub
loop
js
negb
inc
dec
aam
dec
push
mul
test
or
pop
pop
mov
lock
iret
xchg
sbb
ljmp
outsl
cs
repnz
jae
cmp
xor
testl
pusha
and
and
je
mov
xchg
xor
mov
mov
adc
adcb
mov
outsb
enter
arpl
mov
decb
mov
jb
xchg
xor
rep
int3
fbld
xchg
jg
ds
xor
mov
xor
cmp
fnstcw
mov
shl
xor
nop
sbb
sbb
lahf
cld
clc
fdivl
std
and
push
mov
imul
pop
inc
pop
nop
cmovbe
arpl
adc
jno
and
movsb
mov
dec
push
sahf
imul
xchg
lea
or
xor
sbb
cmp
sub
adc
pop
mov
movl
inc
push
cli
out
je
and
xchg
jmp
push
cmp
dec
dec
inc
sbb
adc
inc
sub
lcall
mov
push
addr16
and
or
dec
sbb
testb
add
adcb
mov
mov
mov
movsl
add
ds
lahf
nop
jp
mov
adc
mov
adc
out
add
lret
dec
mov
cmp
out
cmp
outsb
pop
addr16
lds
cltd
xor
push
mov
sub
leave
sbb
and
and
test
in
add
jo
mov
inc
loope
addr16
add
fcmovne
jg
repz
xor
scas
lods
mov
mov
std
aaa
cmp
jnp
pop
rcrb
imul
inc
fsubrs
pop
mov
ret
fldpi
inc
mov
loopne
jg
or
ljmp
or
gs
xorb
popf
sti
test
pushl
bound
pusha
push
fsubrl
fcomp
arpl
cwtl
outsb
and
sub
adc
mov
lock
push
stos
data16
mov
shll
cmp
sbb
push
mov
ret
out
sub
lods
jae
popf
data16
push
mov
add
lods
lret
adc
loop
jmp
div
in
js
pop
sbb
adc
ljmp
mov
jb
xchg
dec
xor
jbe
std
mov
mov
rclb
or
inc
push
in
hlt
push
cmpsb
push
push
roll
ficoms
mov
dec
stc
jae
push
xlat
pop
daa
fiaddl
ljmp
push
and
das
dec
incb
aad
addr16
mov
rep
mov
add
cmp
loopne
or
fidivrs
popa
int
ret
sbbb
push
cltd
dec
in
and
arpl
inc
pop
xchg
or
lret
ret
lret
and
std
pop
lcall
inc
add
dec
dec
or
je
aam
adc
sbb
push
ja
outsl
jo
xor
pop
fbstp
js
pop
imul
jmp
test
add
add
cmp
sbb
mov
es
jb
push
add
mov
test
into
addb
and
fadd
lods
aam
fdivs
imul
stos
inc
ljmp
adcb
inc
or
out
sub
or
mov
mov
xor
push
fldenv
and
in
add
ret
adcb
fnstenv
push
out
testl
mov
cmp
ficoml
out
inc
fisubrl
pop
push
mov
sbb
and
std
out
mov
loop
lods
jp
cli
aam
jbe
cmp
movsb
imul
adc
xchg
ret
add
push
cmpb
or
test
mov
jnp
sub
sub
pop
pushf
rcr
adc
xchg
sarb
fcoms
mov
inc
sub
sub
pop
stc
pop
loope
mov
adc
adc
pop
dec
mov
lock
pop
xor
decb
std
inc
in
jl
pop
mov
repz
test
inc
sbb
cmc
dec
mov
and
mov
xchg
xor
popa
dec
sbb
mov
pusha
out
mov
and
das
lods
push
imulb
mov
loopne
leave
push
rcrl
jo
insl
js
xlat
pop
xor
add
pop
push
js
das
dec
mov
mov
and
mov
pop
pop
popf
mov
ret
int
pop
mov
push
jo
sub
pop
lock
push
jecxz
xchg
push
cmp
cmp
pushf
cld
inc
sbb
repz
in
sub
fstpt
sahf
cmpsb
jno
loopne
dec
scas
scas
cmp
pop
imul
fcoms
outsl
nop
lods
aad
mov
movsl
inc
popa
inc
rcrb
add
mov
data16
mov
das
test
int
outsl
sti
scas
lret
dec
inc
pop
into
mov
je
cmp
mov
inc
add
jne
lods
lds
aam
jp
mov
cmpsb
test
divb
push
or
or
lock
nop
inc
mov
mov
jg
xor
hlt
lahf
sub
sbb
scas
mov
add
cmp
nop
xor
cwtl
insb
inc
lods
xchg
inc
mov
xchg
repnz
xchg
xor
push
inc
aaa
lods
xor
sub
push
jns
sub
test
test
fsubr
ljmp
sbb
sbb
sbb
cmp
mov
inc
movsb
jnp
call
lret
push
int3
sbb
inc
movsl
push
cmp
fisubrl
scas
mov
test
xor
js
dec
push
push
and
dec
test
inc
xor
push
dec
insl
push
mov
stos
outsb
push
in
sti
adc
scas
mov
mov
mov
sbb
mov
out
scas
test
xchg
pop
ds
stc
dec
cwtl
loope
pop
add
daa
mov
loop
rorb
xchg
xor
subb
sbb
push
push
call
fistpl
repnz
or
add
scas
scas
add
mov
ja
add
lret
sbb
pop
mov
dec
xchg
sbb
lcall
ficomps
testb
dec
mov
push
sub
lock
xlat
pop
lret
mov
cmp
popa
shlb
fisubs
sti
outsl
xchg
xor
xchg
pop
js
pushl
dec
jo
xchg
inc
repz
xchg
js
jne
dec
inc
push
je
cs
pop
mov
sub
sbb
adc
aam
jge
test
inc
pusha
ds
adc
popf
insl
vprotw
test
pop
pusha
repnz
dec
inc
repz
loopne
adc
push
xchg
loop
jbe
hlt
aaa
in
mov
jns
inc
and
jbe
mov
scas
or
loopne
push
xchg
test
je
push
push
lea
xor
xor
aaa
mov
jmp
movsl
inc
dec
scas
mov
das
movb
jl
xchg
daa
stos
dec
notb
adc
out
pusha
movsl
push
loop
lea
daa
cli
mov
and
cmpsl
cmc
jl
adc
add
loop
testw
lahf
jo
es
push
mov
push
jne
es
mov
or
popf
xlat
adc
adc
jne
or
push
pop
jmp
out
pop
pusha
pop
pusha
mov
push
scas
mov
sub
cmp
inc
imul
pop
and
and
aad
adc
in
push
dec
loop
or
aam
cmp
repz
leave
mov
insb
addb
test
and
jns
or
es
pusha
jns
in
outsl
leave
shll
sub
xor
fsin
and
sbb
lea
mov
inc
pop
out
cmp
push
mov
sbb
mov
cmp
sbb
mov
and
out
jb
popa
daa
ja
js
or
cwtl
aad
cmc
in
xor
mov
adcl
and
outsl
sub
cmp
lcall
mov
ja
test
dec
xchg
into
js
call
stos
pop
cmp
or
add
mov
rcr
push
or
push
mov
jns
fstpt
xor
insl
add
pop
push
or
iret
jp
cmp
xor
stc
lods
xor
lret
pop
lock
pop
xchg
mov
xor
sbb
rorb
xchg
adc
imul
mov
dec
jae
cltd
mov
cwtl
add
xor
adc
aaa
andl
sbb
sub
or
add
test
sti
xchg
mov
pop
in
fildll
mov
pop
xchg
push
xor
jns
pop
push
mov
mov
push
mov
jb
or
mov
push
das
dec
jge
mov
shl
in
pusha
ljmp
lahf
push
cmc
inc
push
test
cli
sub
popf
addl
pushl
mov
movsl
dec
dec
inc
add
repz
loope
jno
push
push
xor
mov
test
mov
sbb
aas
ds
fmulp
cmp
nop
mov
movsb
repz
xchg
dec
mov
jne
mov
mov
mov
jmp
std
out
mov
rorl
pop
and
mov
lahf
pop
test
cwtl
dec
and
mov
add
mov
scas
push
out
out
inc
ret
push
xchg
inc
adc
scas
and
add
xor
xor
lcall
call
loop
mov
adc
add
sarb
js
xorb
sbb
pushl
lret
xlat
dec
push
and
ds
jmp
shrb
cmp
mov
loop
out
negl
scas
cmpsb
cmpsb
mov
push
pop
jg
add
imul
add
adc
shll
sbb
es
lahf
dec
aam
push
pop
jle
dec
lea
inc
sahf
sub
lds
repnz
cmpsl
aas
stos
cmpsl
mov
lret
mov
mov
outsb
xchg
push
push
xlat
data16
es
jp
out
inc
jp
mov
lcall
fistps
bound
cltd
mov
rsm
push
mov
sahf
and
sub
cmp
pop
and
sub
subl
sub
imul
or
mov
adcl
in
sbb
pop
lret
mov
and
mov
rolb
pushf
shll
lret
rcrb
xchg
das
sub
je
adc
scas
xor
mov
sbbb
shlb
mov
out
repz
jb
jae
rcrb
pop
sti
jo
or
push
clc
mov
mov
out
mov
sbb
xor
loope
push
sbb
in
orb
punpckhbw
jbe
das
push
adc
inc
xor
js
repz
aad
cmp
sbb
inc
add
xchg
cwtl
pop
jge
out
fsubrl
xchg
rolb
push
insl
int3
lahf
pop
lret
jno
outsb
pushf
fbstp
jle
sbb
lea
jno
cmc
pop
jns
jge
mov
or
fistpll
xlat
jns
inc
fisttpll
mov
leave
testb
xor
push
jbe
js
dec
and
mov
je
out
ret
mov
adc
or
cltd
lods
mov
lods
mov
out
ss
out
mov
test
ljmp
jg
mov
shl
push
mov
jp
and
out
xor
div
clc
mov
out
dec
push
movsl
sbb
sub
cs
dec
push
sbb
lret
inc
mov
xor
cmp
pop
add
jne
mov
mov
cmpsb
push
add
fdivrl
sbb
mov
rclb
inc
push
cld
push
fxch
stos
jg
pop
movsb
mov
xlat
push
or
adcl
daa
push
lret
cmp
or
or
jecxz
into
adc
mov
fimull
rorl
fmuls
xchg
fstpl
je
stc
sti
or
push
push
fadds
pop
enter
inc
pop
push
jbe
loope
shrb
mov
insl
jge
sub
int3
imulb
lods
jne
cmpb
ja
out
in
int3
nop
mov
into
imul
cmp
jae
mov
pop
pusha
adc
rcll
cmp
aam
shrl
pushf
lods
mov
jle
aas
mov
repnz
pop
xchg
xor
enter
fsubl
inc
dec
dec
adc
lods
cmc
mov
push
not
int
and
dec
mov
pop
lahf
adc
adc
adc
shufps
sbb
or
lea
icebp
enter
lods
fst
xlat
in
dec
mov
pop
lahf
sub
pop
mov
gs
pop
xor
pop
and
lret
mov
lods
movsl
xorb
aas
popa
sub
pop
cmpsb
sti
enter
and
in
or
jne
mov
pop
sbb
jg
push
dec
xchg
scas
stc
dec
ret
jl
sbb
cmp
scas
mov
sub
jns
adc
xchg
pop
mov
and
ja
out
or
adc
insl
push
dec
sbb
jecxz
stos
adc
sbb
in
pop
addr16
bnd
dec
rcrl
mov
adc
imul
and
cmp
fimull
test
sbb
cmp
shrb
repnz
fisttps
inc
and
mov
sub
decb
pop
imul
mov
push
pushf
mov
loop
or
sbb
cmc
inc
aam
gs
cwtl
sbb
cmp
fdivrs
dec
icebp
test
mov
push
loope
sub
icebp
fcoms
les
popa
test
cmp
lds
pop
imul
andb
jns
fildl
icebp
add
nop
gs
mov
push
int
mov
push
xchg
out
push
dec
pop
mov
test
mov
test
sub
outsl
cmp
jg
sub
out
xchg
sti
scas
mov
mov
cmpl
aas
jge
pop
scas
shll
push
inc
or
data16
xchg
pushf
dec
dec
adc
cwtl
xchg
add
sahf
inc
cwtl
out
pop
cltd
cmp
adc
and
cmc
jo
sub
adc
pusha
and
xor
xchg
xor
xchg
sbb
in
mov
jg
in
cli
stos
cmp
scas
adc
imul
cmc
mov
mov
xor
lods
sbb
add
mov
out
test
mov
int
mov
aaa
scas
pop
jl
icebp
adc
repnz
icebp
jne
lahf
fldt
inc
mov
jge
lods
jmp
ds
or
pop
ret
aaa
imul
sbb
iret
xchg
jge
lahf
jns
or
cmp
or
leave
ret
test
ret
test
imul
sub
dec
dec
sbb
jg
and
cltd
loopne
dec
pop
outsb
adc
jmp
cli
mov
iret
mov
mov
test
sub
mov
jno
imul
mov
dec
mov
xchg
sub
jno
test
or
dec
lods
inc
xlat
mov
test
movsb
push
mov
jno
pusha
clc
and
jnp
bound
and
fnstcw
push
ljmp
pop
xchg
cmp
and
aam
push
rcr
jb
xchg
addr16
mov
mov
fs
ror
inc
loop
aas
pop
mov
sub
xorl
push
xor
loope
pushf
sbb
xor
jp
sbb
loop
dec
fmuls
mov
mov
repnz
jmp
test
mov
fsubl
ret
mov
jmp
sbb
mov
mov
outsl
push
out
call
adc
sarb
or
mov
jae
or
in
ret
sub
ds
sarb
pusha
ds
stos
popf
inc
adc
in
sub
cld
rclb
shll
cmpb
adc
jle
add
iret
rep
jl
dec
cmp
cmp
xlat
mov
in
xchg
loop
xchg
dec
inc
cs
sub
int
mov
test
adc
lea
fstps
xchg
adc
pusha
mov
ja
mov
shrl
adc
jo
std
mov
dec
or
xchg
shll
sbb
dec
daa
loop
and
mov
in
pushf
aas
cwtl
push
aas
adc
lods
gs
fcoms
mov
fldcw
dec
sbb
lahf
icebp
mov
sbb
cwtl
pop
lcall
adcl
mov
cli
lahf
or
pop
out
lods
loopne
lea
dec
mov
push
jle
addr16
dec
jns
jg
jp
out
fbld
stc
enter
add
add
push
dec
inc
shll
and
jno
push
hlt
test
pop
push
mov
jmp
iret
xor
test
outsl
add
jns
js
mov
in
mov
push
inc
out
pop
sti
dec
fistps
xchg
das
pop
jl
sub
inc
fldcw
and
cmp
repz
aaa
loope
xchg
xchg
sbb
push
fidivl
xchg
mov
jbe
xor
je
pop
dec
frstor
lods
testl
xor
xchg
addr16
iret
mov
and
mov
in
or
xchg
mov
add
mov
lock
nop
movsb
push
dec
aam
or
hlt
dec
into
mov
test
aas
dec
mov
pusha
cmp
push
pop
inc
inc
inc
leave
movsl
rcll
aam
ja
pop
xor
mov
fsubr
mov
xor
adc
mov
ds
mov
ds
mov
pop
mov
xchg
and
fmuls
popf
cs
xchg
or
xchg
test
mov
inc
aas
cltd
ret
add
rclb
xor
pop
arpl
jns
push
cltd
xchg
aas
jecxz
loop
push
sti
arpl
test
out
cmpsl
jns
sub
cmpsb
jmp
xor
cmpl
sbb
sbb
dec
ret
mov
pop
shrl
xor
sub
cmpsb
sbb
add
sarb
pop
fcoms
imul
xchg
xchg
add
xchg
cltd
rorb
addl
mov
mov
add
or
push
push
add
loopne
std
push
jg,pn
jns
jno
les
in
pusha
mov
je
ret
enter
dec
sbbb
adcb
and
lods
sbb
mov
fistpll
dec
and
jbe
sbb
mov
xchg
cmc
insl
addr16
aam
xchg
jge
inc
adc
and
push
es
and
scas
pop
push
es
xchg
int
jb
aas
lds
xchg
mov
lcall
repnz
add
fldenv
and
ss
mov
out
sub
in
out
pop
test
movsb
stos
or
scas
iret
mov
adc
sti
test
lods
shll
mov
jecxz
sti
jmp
outsb
cld
xchg
lock
add
les
inc
jns
push
into
mov
adc
or
cmp
arpl
pavgb
push
data16
test
mov
jp
xchg
dec
jecxz
and
add
mov
xchg
stc
mov
fldcw
vmovaps
add
mulb
dec
rolb
cmp
push
not
cmp
gs
sbb
ja
sub
inc
push
mov
push
xchg
add
jo
fmuls
jl
inc
loope
int3
xor
hlt
ret
jecxz
setl
dec
icebp
nop
dec
lret
lds
ss
imul
test
pop
push
and
mov
fisubrs
aam
lret
pop
push
xchg
orb
adc
mov
sbb
pusha
xor
jns
mov
push
int
dec
pop
sti
test
out
jg
fisubrs
mov
scas
cld
dec
sub
lret
fwait
sti
sub
fdivp
scas
or
add
adc
cld
arpl
jmp
in
int
arpl
add
mov
cmc
lock
push
mov
mov
sub
and
mov
inc
xchg
out
sbb
push
jne
mov
into
sbb
into
lret
stos
jbe
icebp
and
xor
lcall
adc
or
cmpsl
test
ss
and
std
fsubs
pop
dec
add
aam
daa
stos
xor
out
cwtl
mov
scas
sub
aad
jmp
add
jae
mov
aaa
outsl
lahf
jno
jae
push
xchg
xchg
loopne
test
in
xchg
loope
inc
mov
xor
xchg
mov
mov
ljmp
cmp
stos
js
ja
sub
xchg
adc
mov
xchg
push
clc
inc
xor
pushf
negl
stos
mov
out
xchg
push
cmp
mov
jecxz
dec
scas
mov
dec
and
inc
pushf
or
push
add
pusha
jmp
inc
pop
lret
fcoms
push
add
xchg
loope
dec
insb
div
test
cs
cmpsl
sbb
mov
aam
cmpsb
hlt
xchg
sbb
cmp
mov
cmp
out
imull
enter
pushf
mov
call
lock
into
mov
or
pop
fs
aad
andl
int3
loop
jecxz
push
mov
fwait
lcall
rcrl
mov
roll
inc
pop
outsb
fdivrs
fsts
movsl
cs
push
icebp
fsts
ss
je
cwtl
inc
sar
mov
and
mov
mov
aas
pop
inc
xor
dec
lods
hlt
mov
dec
pop
fwait
mov
enter
xcrypt-ofb
cmpsl
sub
mov
sti
mov
cmp
xor
ds
mov
faddl
inc
mov
mov
fidivs
pop
ss
pop
pop
jl
mov
push
inc
lock
es
aas
jmp
rorb
dec
jno
loope
sbb
das
int3
mov
add
das
and
sub
xor
shlb
push
into
lds
sub
out
jle
ffreep
sub
test
cli
ret
aad
pop
adc
pop
adc
or
nop
sub
out
lahf
sbb
mov
mov
mov
adcl
or
js
push
fisubs
popa
lds
xorl
fildl
mov
fistps
dec
dec
inc
movsb
mov
inc
popf
sar
ja
push
clc
mov
jb
cmp
imul
int
xchg
std
mov
add
pop
push
nop
push
cmpsb
push
cmp
cmp
pop
push
or
leave
xchg
hlt
inc
out
xchg
jb
scas
inc
mov
jno
mov
out
mov
xchg
mov
test
fdivrs
out
cmpsb
bound
ljmp
sub
pop
fildl
aas
stos
leave
mov
mov
cltd
jecxz
loope
dec
xor
xchg
cld
jae
inc
loopne
insl
aas
pop
push
sbb
hlt
push
add
outsl
sbb
stos
sub
test
out
inc
pop
lcall
and
xor
adc
jmp
push
loope
cld
mov
std
mov
mov
mov
mov
lret
ret
adc
adc
leave
and
sbbl
dec
in
insl
mov
xlat
mov
arpl
orl
pushf
cltd
ret
lret
pusha
into
rorl
mov
jp
or
aad
je
ja
pop
je
push
or
xor
jb
jne
and
sub
inc
fcomps
adc
das
jbe
bsf
inc
xchg
int
push
fadds
mov
push
mov
mov
mov
call
pop
pop
lcall
out
jl
loop
mov
out
xor
jmp
les
fsubs
cli
mov
or
cmp
adc
test
xchg
dec
or
icebp
sub
push
addr16
pop
rcrl
into
add
mov
add
data16
adc
sbb
lds
lods
stos
push
rorl
idivb
arpl
nop
jmp
adc
pop
std
cmp
cli
popa
sbbb
mov
cmp
jl
pop
inc
aad
pop
fwait
jno
leave
jmp
loop
aas
out
xchg
xlat
mov
jle
sbb
movl
js
fnsave
loop
fidivrs
add
xchg
notb
dec
mov
mov
jmp
pushf
push
cmp
add
add
bnd
dec
fisttpl
pop
dec
test
lds
dec
data16
sub
push
popa
or
ss
loop
sub
push
xchg
jp
mov
cltd
cmpsl
loopne
adc
cmp
fs
sub
push
sbb
dec
insb
in
sub
data16
cmpsl
xchg
icebp
call
rcll
std
mov
bound
push
fwait
in
dec
jecxz
mov
movsl
xor
xor
out
and
pop
sbbb
outsb
cmp
inc
mov
div
pop
ret
and
and
gs
jmp
jb
pop
inc
cmpsb
push
mov
mov
bound
dec
in
push
adc
jp
and
faddl
je
loopne
adc
int3
cmpl
cltd
sbb
lock
fldl
push
add
mov
mov
xchg
dec
pop
mov
inc
sbb
sub
jae
push
lahf
mov
jle
mov
out
and
adc
or
testl
cmpsb
push
mov
adc
fcmovne
push
jle
mov
fisubrl
add
arpl
mov
mov
pop
mov
and
xor
fmul
sub
test
sbb
iret
and
ret
mov
scas
xor
mov
mov
or
cld
mov
cmp
xor
aas
outsb
jbe
je
xor
cmc
fcomip
xor
lea
push
mov
testl
mov
dec
cwtl
orb
sub
cmp
fnstenv
jb
out
and
outsl
or
cmc
movsl
adc
mov
dec
imul
mov
mov
push
test
jb
sbb
outsl
jae
jbe
and
movsbl
sahf
je
dec
sbb
jecxz
imul
pop
dec
sahf
popf
shlb
rorb
jle
data16
lea
mov
lods
pop
addr16
sahf
sbb
xchg
sbb
mov
fnstsw
xchg
into
roll
popa
and
pop
out
int3
mov
shl
das
fsts
arpl
in
cmpsl
adc
inc
out
aam
test
mov
mov
ftst
mov
ret
and
out
shrl
int
sub
popf
aaa
xchg
or
or
adc
mov
out
fsubs
inc
lea
inc
dec
mov
into
jae
jge
jb
add
fmull
adc
sbb
pop
es
mov
das
sub
add
mov
outsb
shrb
gs
jle
jge
outsl
jbe
sahf
mov
enter
pop
mov
lret
sbb
mov
pop
test
push
cmp
shll
add
aas
push
xchg
adc
and
rol
ds
sahf
test
mov
mov
mov
mov
sub
xor
dec
and
popa
mov
jae
aaa
hlt
dec
pop
add
push
cmpsl
dec
cwtl
mov
add
in
loop
in
in
xorb
ret
xchg
xor
jle
inc
lods
or
je
clc
rcrl
hlt
sub
inc
sbb
adc
push
dec
adc
rorb
jg
clc
sub
xchg
xor
popf
xchg
and
xchg
arpl
mov
push
and
add
jg
jnp
je
jo
imul
xchg
scas
pushf
testb
mov
incl
movb
sub
fcompl
mov
popf
popf
sarl
subl
aaa
adc
lods
hlt
leave
mov
xchg
and
enter
hlt
fdivrs
loope
scas
mov
test
into
xorb
aad
pop
daa
jg
jae
xor
nop
gs
mov
adc
outsb
dec
jnp
jmp
sbb
mov
gs
inc
ss
and
lret
inc
cld
es
mov
popa
mov
jns
adc
mov
ret
insb
add
cmp
outsl
mov
mull
lret
adc
sar
sbbl
push
rol
mov
jecxz
out
adc
mov
inc
out
ds
lods
loopne
in
cmp
movsl
ret
shrl
or
xor
fisubs
es
and
jbe
ja
jbe
lret
dec
mov
test
inc
and
cmpsb
clc
xchg
loopne
sbb
mov
stos
jno
xchg
adc
loope
pushf
cmp
addr16
ds
popf
inc
pushf
sbb
mulb
int3
or
sahf
jmp
in
adcb
sub
test
jl
into
add
mov
outsl
mov
fidivrl
jecxz
push
adc
mov
es
add
sub
adc
add
pop
clc
dec
andb
ss
pushf
lds
insb
pop
sbb
outsl
inc
stc
xchg
fcmove
jnp
cld
pop
jae
sub
arpl
test
pop
push
mov
push
jb
jo
adcb
lea
xchg
rcrb
subb
dec
testb
mov
dec
add
or
dec
mov
fidivrl
mov
ljmp
int
fs
ds
push
mov
jno
dec
popl
pop
int3
mov
mov
fcoml
addr16
in
cltd
ds
push
adc
sti
mov
jmp
mov
inc
movsl
xor
push
js
xchg
mov
sbb
int3
dec
mov
jle
pushf
or
test
sbb
jecxz
or
add
push
jp
add
fisubs
xchg
mov
enter
or
mov
push
push
mov
sbb
mov
divl
rcrb
cmp
fildl
fcompl
push
add
xchg
scas
sbb
xor
fucomp
jnp
cmp
cmpsb
push
jne
sub
ja
xchg
mov
lret
mov
je
mov
out
xor
das
imul
push
rorl
dec
repnz
stos
dec
ss
test
repz
fiaddl
adc
fildl
cmp
repnz
jns
out
jne
insl
jae
ss
popa
jg
push
push
aam
jnp
mov
cmpsb
scas
mov
xlat
push
negl
push
lret
add
sbb
sub
pop
or
sbb
das
xor
mov
jl
lret
aas
test
ret
cmp
mov
push
ljmp
mov
pop
cmp
inc
clc
lcall
sahf
push
das
inc
lcall
pop
insl
inc
ret
popa
lret
sarb
aam
adc
test
cs
stos
insb
in
mov
sub
cmp
rol
outsb
das
adc
imul
xchg
add
pusha
test
cmpsl
push
adc
cmc
daa
arpl
addb
loopne
push
rolb
and
out
pop
insl
mov
mov
push
nop
loopew
xchg
xor
mov
adc
jecxz
gs
ds
sub
int3
jae
es
add
jg
stos
cs
inc
cld
test
push
stos
les
in
cmp
ficoml
fsubp
outsl
cmp
and
sbb
test
clc
adc
cltd
cmpl
cmpsl
cmpsb
stos
addr16
inc
lods
xchg
stos
push
xor
popf
pushf
lea
pop
imul
or
imul
ja
fisubrs
adc
lret
rclb
fsts
push
push
xor
popf
sub
push
and
jmp
add
subb
scas
sti
pusha
sub
addr16
stos
loope
push
rorb
add
xor
mov
les
inc
jmp
in
ja
andb
mov
add
and
mov
mov
mov
lcall
jg
jge
cmp
sub
push
jb
int3
scas
outsl
mov
mov
rorb
scas
lods
push
xchg
and
jg
ror
lds
adc
inc
mov
sbb
int3
lea
xchg
pop
aam
ror
leave
stc
mov
popf
movsb
pop
mov
outsl
stos
and
adc
in
push
sbb
jb
jnp
and
adcb
sbbl
lret
and
mov
pop
nop
lds
cwtl
jno
in
mov
xlat
add
movsl
js
cwtl
mov
adc
lret
sbb
mov
call
sub
aad
dec
adc
push
fs
out
push
mov
rorl
lock
dec
fdivrl
and
cmpsb
mov
mov
test
inc
enter
int3
and
adc
sbb
push
andb
mov
iret
fidivrl
pop
rclb
cmp
aad
dec
and
sbbl
inc
push
sbb
pusha
mov
jmp
adc
icebp
cmp
out
aam
ja
nop
mov
mov
js
sbb
mov
adc
push
fs
sub
xor
push
push
cmpsb
jg
adc
fstp
mov
jmp
mov
iret
lahf
push
test
mov
stc
test
scas
mov
mov
clc
xor
loop
int3
xor
adc
mov
sbb
insb
cmp
lock
sbb
fbstp
jl
cmp
add
je
lds
arpl
jb
cmpsb
sub
rorb
mov
sub
sub
loop
cmpsl
loopne
pop
addr16
mov
test
xchg
cmp
xchg
cmp
es
pop
test
ss
adc
pop
popf
sbb
nop
insl
xor
jnp
xchg
cmpsb
std
lods
cmp
xor
push
mov
lock
xchg
outsl
xchg
bound
push
testb
mov
pusha
cmp
mov
adc
lahf
mov
les
push
mov
fildl
xchg
add
fmuls
mov
mov
enter
mov
insl
fidivrs
insl
arpl
cmp
xchg
fnstenv
or
pop
adc
jns
lock
xor
mov
mov
orb
sbb
in
sti
in
mov
or
clc
in
push
pop
shll
push
push
adc
aaa
movsb
jns
movsl
arpl
mov
imul
sti
push
xchg
and
stos
ret
xlat
sub
fsubrs
enter
xor
push
cmp
jmp
andb
mov
cmc
cmp
cmp
jbe
std
and
cmp
ljmp
neg
adc
mov
sub
cmp
pop
xorl
daa
mov
jb
and
cmp
int3
and
inc
call
jae
cmpsb
in
cltd
mov
cmc
dec
xor
out
out
lcall
in
jne
pop
scas
adc
and
mov
adc
dec
pushf
inc
pushf
stos
fimuls
sub
mov
ret
leave
jl
jl
xorb
mov
popa
loope
das
adc
dec
push
sbb
xor
and
dec
push
movsb
ret
sti
ds
add
das
fcoml
lea
pop
std
jmp
add
pop
movsl
xor
mov
lds
push
fcomi
jl
jge
cltd
pop
xorb
cmpsb
xor
pop
mov
fisttpll
sub
mov
pop
pushf
repz
adc
and
cmp
sbb
int
and
hlt
and
inc
sahf
sti
ja
stc
mov
inc
push
mov
or
adc
xor
es
mov
mov
jb
add
push
jmp
mov
sbb
arpl
adc
iret
sub
mov
push
popf
cmp
xchg
mov
clc
or
pop
jns
test
scas
mov
ret
add
into
inc
data16
mov
aad
imul
mov
mov
or
sub
clc
fdivrs
xchg
adc
sub
mov
gs
push
mov
insl
adc
mov
fsubrp
dec
pop
js
hlt
nop
les
popa
lahf
test
aas
in
mov
push
int
mov
aas
inc
cwtl
inc
xchg
stos
xor
sub
data16
cmp
inc
and
adc
cs
adc
push
cltd
bound
ror
lcall
fbstp
cmp
pop
fdivs
adc
cli
lock
or
loop
ja
xor
aas
dec
dec
rcr
pusha
test
icebp
mov
cmpsb
sub
cld
insl
aas
mov
pop
adc
push
stos
xchg
jae
loope
nop
repz
push
cmp
arpl
inc
mov
dec
jecxz
mov
fmulp
mov
inc
inc
adc
cmc
jno
jne
mov
adc
cmpsb
imulb
mov
xor
cmc
mov
loop
mov
xor
cltd
mov
cld
pop
jne
adc
sahf
cmp
dec
test
orl
jo
adc
sub
or
ss
scas
ljmp
pop
pushf
nop
adc
fcom
icebp
inc
mov
cmpsb
xlat
clc
inc
outsl
fisttps
loop
mov
mov
in
out
push
ja
push
ror
sub
std
inc
je
in
mov
in
ffreep
movsl
cmp
mov
or
or
pop
scas
arpl
loopne
jo
inc
dec
mov
adcl
sbbb
sbb
aad
insb
test
pushf
and
mov
data16
test
int
jb
js
outsl
or
js
pop
mov
jle
lods
dec
push
repnz
xor
nop
sub
jnp
mov
js
push
cmpsl
aad
xchg
mov
cli
mov
mov
mov
xchg
fbstp
rcrl
cmp
lods
imul
sbb
jge
sub
push
sahf
fadds
sbb
mov
xlat
sub
xchg
and
cltd
or
daa
in
ror
push
mov
xchg
rol
jb
ret
div
popf
test
pop
ss
add
outsb
adc
andb
mov
fcmovnb
or
pop
rcr
lahf
and
pushf
cmp
pop
adc
faddp
push
cld
xchg
loop
cmp
insb
xchg
mov
mov
out
cmp
or
push
jne
ret
or
repz
mov
retw
pushf
mov
movsb
aas
mov
fisttpl
cli
fidivrs
mov
test
push
movsb
int
in
inc
ror
inc
mov
js
pop
aaa
dec
and
mov
xchg
add
jg
js
repnz
pop
jmp
or
sbb
xor
rclb
mov
adc
mov
mov
cltd
adc
rcrb
dec
or
bound
mov
jb
sarl
ss
stc
and
pop
mov
pop
insl
sbb
push
add
add
push
inc
mov
xchg
ret
test
push
loop
xchg
repnz
mov
out
cmp
inc
aad
xchg
sub
addb
in
jno
rorb
adc
push
movsb
xchg
fcoml
add
sbb
sbb
add
add
cwtl
popf
add
test
mov
jge
arpl
in
push
adc
bound
add
mov
fs
iret
and
push
stc
xchg
xchg
mov
xchg
add
outsb
xchg
sbb
mov
scas
call
lahf
jmp
fldenv
mov
fmull
sbb
in
fcmovnu
lahf
ss
dec
popa
aam
inc
cmp
ds
ror
xorb
xor
jo
mov
fwait
pop
xchg
ret
cmp
mov
insl
xchg
scas
ret
test
push
mov
test
pusha
pop
arpl
add
enter
bound
jecxz
icebp
xchg
adcl
and
cmp
repz
popa
iret
mov
aaa
push
or
aad
jnp
stos
lahf
or
cmp
jb
sub
cmp
add
lret
lcall
jbe
adc
mov
and
cmp
mov
repnz
cwtl
out
xchg
fimull
push
sub
mov
stos
scas
cli
shll
out
mov
xchg
dec
test
mov
push
rcl
jb
jecxz
sbb
mov
jne
cmp
loope
ja
movsb
add
jne
ret
xor
dec
sub
mov
lret
scas
jg
push
std
mulb
mov
fiaddl
dec
jbe
clc
fsubrp
aad
sti
sub
arpl
sbb
aam
jle
cmpsl
movsl
test
daa
push
cwtl
inc
cmp
or
jb
clc
into
cmpsb
add
mov
outsl
adc
lock
and
dec
pop
scas
mov
adc
outsb
sbb
xor
cli
stos
test
sub
scas
sub
jle
adc
cmp
stc
push
clc
pop
arpl
sub
and
int
jp
dec
lock
inc
imul
fistps
sbb
nop
adc
adc
fistpl
fiadds
fwait
mov
ds
dec
xor
incb
out
test
hlt
jp
cmp
lret
fldt
jl
dec
arpl
cmc
shl
adc
insl
out
popa
pop
pop
mov
test
lock
inc
sbb
add
pop
mov
test
fisubrl
adc
cwtl
pop
pop
mov
xchg
xor
dec
sbb
jne
or
mov
xor
aaa
pop
mov
aas
inc
arpl
sti
lods
sub
inc
mov
sub
scas
iret
inc
insb
fwait
inc
ret
bound
jl
cmp
adc
cmpl
je
js
andl
pop
xchg
sbb
cmp
dec
xchg
mov
mov
je
jg
rcll
fwait
inc
mov
jmp
stc
sub
mov
inc
int
dec
mov
gs
push
mov
jp,pt
inc
sbb
and
clc
out
push
cmp
outsl
mov
shrb
test
pop
loop
and
lret
ja
sti
call
stos
dec
cmp
xchg
mov
popf
jp
and
fbld
loope
sub
shll
sub
rolb
push
cmp
jg
stc
sbb
jae
inc
lock
and
dec
shll
lahf
cmpsb
std
loop
mov
sub
lods
or
cld
dec
int3
fnstsw
dec
adc
fists
xchg
lods
and
push
pop
mov
or
dec
leave
jecxz
mov
shll
mov
insb
adc
int
pop
stc
xor
aaa
jno
daa
push
sar
orb
mov
ds
shl
ds
cltd
sti
lods
pop
xchg
add
lods
push
adc
cmovs
add
leave
leave
inc
mov
shl
jno
pop
shrl
or
push
pop
das
mov
std
xor
xchg
inc
popf
xchg
pop
jae
shll
mov
xor
mov
ret
out
sbb
cmpsb
sub
sub
std
mov
cmp
mov
sub
jle
cmp
lret
loope
cwtl
sahf
nop
shrl
sub
xchg
je
fcoms
push
stc
dec
enter
andb
cli
add
cli
add
xchg
jne
and
adc
and
fisubs
dec
stos
aas
push
pop
jmp
or
fcompl
aam
pop
out
cmp
push
pop
shl
leave
fistpll
stos
mov
imul
in
call
and
jo
mov
addr16
jecxz
mov
loop
sbb
fsubrl
addb
xchg
sbb
arpl
xlat
addr16
lock
and
adc
mov
cmp
push
addr16
mov
jge
push
stos
rcll
cmc
add
test
dec
shlb
add
sub
mov
mov
push
mov
xchg
sbb
cmp
mov
out
mov
iret
and
repnz
movb
leave
inc
cmc
leave
fdivrs
imul
or
xchg
out
sub
adcb
gs
mov
nopl
mov
pop
iret
test
sbb
jnp
imul
jp
addb
sbb
mov
fcomp
popf
and
icebp
sub
in
and
jmp
push
xchg
cs
movsl
ljmp
xorb
sub
xchg
nop
out
mov
add
mov
movsl
popa
mov
inc
cltd
add
and
js
loope
add
add
adcl
inc
xchg
adc
cmpsl
out
mov
push
call
fisttpll
or
mov
call
andl
ljmp
je
jae
call
clc
cmpsl
adc
mov
fcmovnb
xchg
jns
aaa
mov
cmp
icebp
sub
push
dec
cmp
imul
pushf
mov
cmp
std
mov
dec
add
lcall
jecxz
xchg
add
and
dec
lock
nop
mov
bnd
movsl
jns
add
xchg
and
xlat
or
mov
jecxz
mov
mov
cwtl
es
push
ficoms
xchg
sub
insl
cmpsb
jmp
mov
and
xchg
into
add
out
push
mov
jmp
dec
mov
add
mov
cld
pop
popf
popa
cs
test
repnz
loop
filds
add
and
aam
lock
loope
sbb
mov
sbb
jle
repz
sub
orb
dec
ss
cld
sub
dec
icebp
add
xchg
or
adc
sbb
xlat
aad
cmp
push
mov
ds
xor
ficomps
lea
sbb
cmpsb
addb
ret
fdivs
stos
mov
mov
jae
sbb
inc
add
cmp
aas
mov
xchg
sbb
leave
adc
mov
aam
mov
push
push
rcll
and
inc
or
daa
es
pusha
es
and
adc
push
xchg
jmp
outsl
xchg
call
icebp
or
dec
mov
push
js
mov
inc
add
pop
push
sub
out
stc
sbb
das
aad
sbb
test
loope
add
in
lods
sub
enter
js
cmp
hlt
out
fwait
sarl
popf
sbb
mov
xor
xchg
mov
insb
xchg
add
loope
in
sub
lea
cmpsb
xlat
movsb
decb
cld
jb
ljmp
fcmovb
add
cmpsb
setno
fdivl
lea
inc
pop
fwait
lcall
insl
pop
adc
push
ds
jns
scas
dec
mov
pushf
cmc
into
stos
mov
cmp
or
fidivs
test
scas
icebp
xchg
mov
mov
jo
dec
pop
and
gs
add
push
xchg
bound
mov
mov
fwait
insl
cmpsl
add
inc
fbld
push
lret
cltd
mov
lods
imul
sahf
stc
stos
xchg
das
int3
pop
adc
popf
jb
imul
inc
repnz
repz
mov
jne
frstor
mov
outsl
pop
cs
cmpsl
sbb
fistl
adc
xor
les
mov
les
cmp
scas
xchg
add
js
jecxz
pop
ljmp
mov
stc
shrl
arpl
xor
out
pop
cmp
loop
sbb
daa
or
mov
test
jle
divl
addw
xchg
out
sub
popf
ret
imul
add
pop
stc
push
push
loope
inc
xchg
rcrl
jle
xchg
data16
mov
ret
scas
adc
inc
into
dec
test
mov
adc
adc
repnz
iret
clc
cld
jb
or
or
enter
leave
mov
and
jnp
loopne
push
nop
sbb
mov
int3
cltd
fdivrl
mov
ror
mov
lahf
xchg
ror
jne
mov
mov
aad
sub
cld
frstor
les
cmp
roll
test
push
aaa
bound
xchg
jns
ljmp
jb
xor
and
aas
stos
inc
subb
sahf
in
lock
dec
mov
sub
jbe
xor
loopne
scas
fwait
mov
mov
ret
icebp
xchg
lret
fwait
and
in
outsb
add
sub
repnz
dec
mov
cmp
add
dec
inc
lock
iret
fcomps
stos
ds
leave
adc
rcr
rclb
or
jns
and
andl
push
xor
inc
pop
dec
fcomps
inc
jo
or
fstpl
nop
pop
pop
push
ds
and
inc
mov
mov
cmp
pushf
pop
sub
cmp
mov
push
mov
xchg
cld
cwtl
or
jns
mov
ss
int
inc
lret
ret
mov
sti
mov
inc
xor
mov
cmc
jp
sbb
mov
test
arpl
or
or
and
xchg
or
inc
sbb
add
imul
loopne
fdivr
cltd
hlt
pop
cs
lods
movsl
mov
shrb
lahf
cwtl
lcall
ret
lds
xor
push
mov
lret
or
jp
and
sub
std
jo
xlat
sbb
ret
out
pop
scas
pop
insl
mov
leave
adc
jg
mov
mov
xchg
dec
mov
dec
jne
and
pop
stos
add
push
dec
out
adc
xor
sub
test
imul
mov
jns
lcall
mov
mov
lods
jnp
pop
movsl
mov
dec
add
stc
pop
fmull
pop
push
xlat
imul
sub
imull
xchg
pop
mov
adc
jp
cld
push
imull
leave
jle
push
icebp
shl
imul
repnz
add
out
mov
mov
rcrb
or
mov
cmp
clc
xor
xchg
nop
rorl
loope
push
inc
jbe
mov
mov
xor
lret
call
mov
pushf
loop
xor
cmp
repnz
adc
xor
or
shlb
shlb
pop
ret
cmp
call
and
pop
mov
and
fwait
adc
mov
std
jne
mov
mov
xchg
add
mov
dec
inc
lret
popa
push
rorb
addr16
pop
inc
les
pop
mov
out
pop
mov
add
adc
pop
pop
outsb
scas
mov
fcomps
mov
jmp
mov
pop
push
stos
and
outsl
push
jbe
or
xor
int
fsts
sbb
jnp
dec
push
or
or
cltd
sub
hlt
mov
jmp
xchg
xor
pop
xchg
lret
insb
mov
jne
pop
aas
inc
push
jno
addr16
mov
xchg
push
mov
fstp
mov
pop
mov
pop
inc
mov
pusha
scas
ja
ficoml
pop
cld
xlat
push
stos
enter
mov
or
or
rcll
std
push
enter
sbb
int3
mov
inc
xor
dec
push
stc
ds
gs
mov
xor
dec
and
push
fs
or
divb
inc
bound
int
sbb
popf
loope
cs
call
xorb
or
mov
push
sti
fnsave
fsts
xor
inc
cltd
in
pop
sbb
lds
leave
in
aad
stos
lds
adc
and
in
cmp
sbb
xor
push
neg
xor
sub
sbb
pop
mov
mov
adc
pop
dec
ret
into
stos
mov
iret
push
mov
fcompl
outsl
and
pop
enter
mov
js
sbb
roll
pop
push
adc
rorl
in
insl
inc
mov
pop
cmp
xchg
dec
push
dec
aas
add
les
in
and
les
test
cmc
push
cmp
mov
int
dec
jmp
add
add
fstpl
pop
jp
cmp
push
or
jmp
xchg
call
mov
dec
xchg
enter
insl
push
pushf
jno
mov
adc
lcall
in
in
bound
bound
daa
jne
mov
les
push
add
fimuls
cltd
or
sarb
aam
mov
shl
sub
out
jg
adc
mov
adc
and
ss
cmpsl
lret
out
adc
sub
mov
pop
sub
pushf
outsb
jns
fisubrs
inc
jbe
rcrl
cltd
cli
sti
pop
jg
fiadds
lods
adc
cli
daa
popf
icebp
push
test
push
out
rcrb
jnp
repnz
test
outsl
imul
xchg
dec
jo
roll
loope
stos
sub
int
popf
rcr
fidivrs
repz
out
pop
cmc
subl
pop
dec
frstor
xor
xchg
xchg
ret
push
xor
push
hlt
arpl
std
cli
stos
movsb
cld
push
sbb
mov
mov
stos
sub
iret
pop
adc
or
xor
push
iret
mov
push
add
addr16
dec
insb
lods
pop
pop
daa
jecxz
insl
cmp
iret
push
cli
imul
jmp
sub
mov
xor
and
adc
push
cwtl
hlt
sub
fisubl
pop
idiv
xchg
int3
sarl
test
and
sahf
adc
loope
pop
push
out
cmp
rcr
lcall
dec
sub
test
pop
into
sub
into
out
inc
inc
in
cmpsl
mov
sub
call
and
aad
repnz
in
daa
clc
cmp
cmp
push
loop
daa
mov
add
and
in
xor
dec
cs
int
adc
mov
inc
cmpsb
jno
mov
mov
in
rclb
rcrl
inc
pop
pop
int3
lods
xchg
mov
push
outsb
or
insb
mov
push
jne
daa
dec
xor
jp
call
stos
popa
lods
lcall
add
into
inc
cs
out
add
in
dec
mov
insl
mov
lds
mov
sahf
ja
or
and
or
mov
leave
jecxz
jg
iret
cmp
add
insl
sub
xchg
sub
cli
or
aam
icebp
out
ret
ret
mov
or
adc
cli
outsb
insb
xlat
push
ds
mov
push
and
sub
jno
sbb
pop
push
dec
pop
ja
in
mov
add
push
jp
mov
insl
push
pop
lea
ret
jge
es
dec
mov
pop
lock
out
cs
or
dec
jl
fdivs
mov
in
shlb
mov
stos
lahf
sub
jbe
je
imul
or
mov
jecxz
loopne
xchg
jecxz
pop
push
push
adc
sbb
stos
sbb
mov
add
inc
es
add
cmp
loopne
sub
aas
mov
imul
jl
out
shll
push
pushf
nopl
push
sub
inc
sarl
pop
sbb
int3
xor
add
dec
mov
jecxz
divl
cmp
or
push
repz
movsl
push
inc
in
pushf
insl
xchg
mov
dec
js
jns
pushw
xor
push
mov
fidivs
sub
pop
push
or
adc
inc
jbe
out
ret
cmp
and
repz
sar
pusha
xchg
jno
xchg
gs
mov
cmpb
xchg
xchg
inc
movsb
call
xor
es
mov
cvtps2pi
push
leave
cmpsb
add
std
xor
popf
arpl
jb
stos
and
dec
and
sbb
sub
or
rolb
cs
add
adc
call
add
sbb
mov
and
cmp
xchg
stos
adc
test
jecxz
xor
pop
adc
popf
inc
out
jp
fistpl
repnz
xor
loop
jbe
cmp
jl
or
jae
stc
push
mov
outsb
mov
mulb
mov
inc
fisttpl
sti
mov
add
adc
loop
test
cwtl
jp
enter
loop
dec
inc
mov
xor
push
iret
xchg
mov
aad
mov
mov
sub
and
jns
aas
push
push
mov
mov
push
inc
bound
pop
jne
cmp
shrb
ret
cmpsb
xchg
inc
mov
add
bnd
push
shl
mov
adc
mov
xor
in
xchg
testb
lods
fbld
xor
es
inc
jns
lods
or
inc
cmpsl
pop
sub
in
es
mov
sbb
call
mov
fmuls
loope
add
addr16
sub
fwait
add
test
incl
sub
lret
aam
dec
mov
nopl
inc
cmp
lret
xlat
cli
pop
or
mov
dec
subb
sbb
popa
xorl
lea
stc
push
cmp
jl
clc
mov
xchg
shld
movsb
and
and
jge
dec
mov
mov
fsubr
sbb
movsb
repnz
cltd
out
sub
sub
jle
enter
dec
movb
dec
int3
adc
pop
es
cmp
daa
mov
shlb
jl
lret
mov
pop
xor
rcll
cmp
push
aaa
les
jbe
inc
shrb
xlat
enter
into
sub
adc
sti
xorl
test
mov
pop
fists
popa
mov
xor
push
ss
mov
jns
mov
fstp
cmc
out
fadd
cmp
xchg
and
jg
cld
int
in
in
xchg
xchg
sub
sub
mov
pop
add
int
stos
push
pop
xchg
lods
loopne
ja
movsl
fdivs
dec
popa
imul
enter
nop
clc
push
or
jno
dec
xor
std
mov
mov
adc
and
popa
fldt
icebp
sub
mov
sbb
loope
mov
mov
inc
or
lahf
das
rcr
and
clc
shl
pop
loopne
cmp
or
sti
lret
mov
leave
leave
mov
pop
loop
or
rclb
cwtl
scas
sti
imul
pop
fsubrp
cmpl
rcr
fisubs
xchg
inc
add
sbbl
fstpt
inc
fwait
pop
push
dec
jmp
movsb
mov
jae
aas
ljmp
loopne
lods
nop
stc
repnz
aam
nop
lret
jno
shrl
in
out
ret
scas
jecxz
push
cmp
and
arpl
and
in
mov
jns
iret
mov
mov
jle
ret
lret
sarb
pop
gs
arpl
pop
movsl
in
clc
fistps
dec
lds
lea
pusha
add
push
pusha
adc
xchg
negl
bound
cltd
sbb
mov
dec
stos
in
xchg
les
mov
dec
lods
mov
xchg
in
out
add
jae
and
xchg
add
in
jne
popa
int
sbb
out
adc
nop
test
addr16
divl
mov
dec
cmp
fs
gs
jne
leave
ja
mov
and
daa
inc
sbb
sub
sub
xchg
sbb
rcrb
cld
adc
mov
and
mov
ret
cmp
sub
xor
fwait
dec
mov
push
mulb
cmp
mov
mov
jge
jne
and
dec
adc
cmp
pop
jbe
xor
lods
out
loope
fdivrs
mov
jnp
mov
shlb
std
in
pushf
jle
sahf
test
mov
pusha
nop
pop
mov
push
lods
shl
adc
pop
inc
jbe
subl
popa
es
cmp
xchg
jb
cmp
clc
jne
and
xchg
in
sub
xor
push
mov
sbb
or
jns
scas
jl
pushf
inc
shlb
xchg
dec
arpl
ljmp
cmc
mov
out
jecxz
pusha
or
jno
mulb
xchg
insl
cltd
xchg
add
mov
mov
add
std
adc
mov
add
inc
add
sarb
jno
push
or
jnp
dec
mov
js
or
std
add
movsb
jo
roll
or
fdivr
adc
orb
andb
jp
mov
dec
out
push
nopl
pusha
sbb
jl
lea
adc
shrl
test
data16
cld
subb
mov
push
xchg
xchg
jge
cmc
jno
fldl
out
lret
cmpsb
ds
push
jo
and
mov
fmull
scas
imul
push
rcrb
out
jg
cli
cmc
xchg
mov
mov
mov
xor
pop
or
stos
lds
jnp
jbe
adc
inc
mov
lret
add
arpl
gs
and
or
call
xchg
jle
mov
test
inc
test
or
ret
fnstcw
imull
mov
in
outsb
inc
dec
icebp
mov
cmp
fwait
cs
loopne
into
loop
push
cvtps2pd
mov
pop
dec
fs
lods
dec
or
repz
int3
adc
mov
pop
fwait
jmp
out
dec
inc
jg
bswap
clc
fsubrl
inc
shl
insl
or
lods
jae
stos
roll
enter
int3
lret
popa
sub
inc
insl
inc
xchg
push
test
push
rcrl
pop
push
lcall
or
fnstcw
gs
sbb
sub
fsubr
test
dec
mov
sub
ret
jmp
dec
adc
rorb
pop
add
mov
cli
xor
pusha
fisttpl
cmpsb
xchg
stc
cld
repz
jp
js
xorb
pop
adc
out
cmp
mov
ds
add
mov
out
or
dec
aam
test
lret
xor
cwtl
daa
enter
dec
fsubrs
pusha
testl
xchg
testl
xchg
adcb
dec
nop
mov
orb
subl
clc
dec
leave
add
sbb
cmp
insb
sub
xchg
xlat
hlt
in
lods
jmp
stc
sub
sahf
lcall
arpl
out
int
in
insb
fiadds
inc
add
add
jp
das
fisttpl
fcomps
mov
ds
or
xchg
jmp
sahf
loop
add
jmp
std
pop
lahf
adc
mov
test
mov
cld
and
cmp
dec
push
mov
test
dec
adc
fisubrl
pop
insb
cmc
sub
movsb
test
jns
rcll
idivb
std
shll
sbb
sbb
repnz
jnp
add
push
or
xor
jge
out
leave
iret
cmp
out
pop
sbb
pushf
clc
imul
push
sbb
das
adc
adc
and
stos
sahf
cmp
mov
andb
je
adc
dec
adc
xchg
and
outsl
mov
bnd
push
dec
add
insb
stc
mov
inc
pop
sbb
das
lods
and
sbb
subb
in
je
jnp
jg
xchg
and
cltd
lods
rclb
stos
sub
jne
lret
add
mov
scas
cmc
je
push
jo
jmp
or
arpl
aas
add
push
scas
fisubrs
cmp
ja
or
push
adc
dec
stos
adcb
stos
stc
ficoml
sti
lods
and
jge
jecxz
jge
pop
insb
dec
inc
loopne
dec
push
pop
das
and
jnp
xor
dec
ds
out
test
jo
push
shll
inc
mov
cmp
out
pop
lret
adc
pushf
push
mov
jno
js
clc
cmc
lock
xchg
ds
imull
sub
fdiv
out
ret
imul
loopne
outsl
mov
mov
jns
pusha
jge
jmp
cltd
xchg
rorb
stos
inc
dec
lods
sub
push
add
outsb
lods
aaa
inc
push
ss
xchg
out
jmp
cmp
push
mov
iret
test
push
push
xor
stc
imul
jge
js
andnps
aam
pusha
cmp
int3
std
mov
push
dec
cmp
push
lahf
std
ljmp
push
enter
int
fnop
xor
repz
or
mov
test
cmp
repz
sbb
shl
pop
out
ss
push
mov
push
in
clc
sbb
push
xor
das
mov
mov
ljmp
in
inc
mov
ljmp
and
xlat
hlt
sub
jo
cmp
cmpsb
xchg
jecxz
lahf
mov
sbb
push
or
jg
sbb
scas
adc
add
imul
fucom
mov
pop
push
xchg
adc
dec
mov
out
jo
xlat
xchg
or
xor
add
pop
xchg
imul
mov
iret
push
push
push
rcl
push
jne
mov
xchg
daa
shll
xor
jae
insb
std
in
shrb
ss
pop
std
outsb
pushf
push
push
dec
pop
out
lock
nop
aad
test
mov
sub
sbb
out
test
sub
push
mov
mov
mov
cmp
mov
push
aam
call
dec
dec
add
test
in
cmpsl
out
and
loop
jle
insb
mov
out
mov
nop
cli
cmc
and
sub
mov
xchg
icebp
jne
xlat
lcall
xlat
mov
or
lcall
add
dec
sbb
fstl
pop
loope
dec
xchg
cld
inc
in
jecxz
add
fildl
dec
repnz
sahf
and
ret
mov
out
xor
aas
stos
pop
movlps
lods
adc
and
outsb
jb
cmp
jo
lahf
icebp
push
pop
arpl
cmp
or
mov
mov
icebp
add
xor
stos
or
inc
jo
js
jl
push
loopne
js
ja
ss
mov
int3
lcall
xor
pop
push
into
aad
in
rclb
sub
push
imul
xchg
subl
xchg
cmc
jbe
push
shlb
popf
mov
aas
aam
cmp
outsb
daa
pop
mov
dec
loopne
push
nopl
sbbl
icebp
jg
out
jne
shlb
mov
dec
fs
das
ja
mov
ja
nop
and
mov
adc
inc
inc
cmpb
mov
pop
jb
dec
sub
inc
inc
cmp
dec
rcll
sbbl
sbb
pusha
jg
das
adc
addb
imul
inc
cmp
sbb
pusha
cmp
mov
jmp
jb
scas
ljmp
repz
cwtl
inc
jb
ss
call
ds
xor
les
rcll
push
pop
scas
xchg
adc
loopne
pushf
leave
mov
rcll
push
cmp
add
sub
imul
lods
loope
mov
movsl
push
in
push
pop
adc
icebp
leave
dec
popa
ljmp
push
into
adc
xor
pop
into
inc
cld
xchg
enter
arpl
lcall
pop
mov
aas
xor
mov
xchg
fimull
es
xchg
orb
inc
mov
xor
jae
inc
dec
pop
mov
add
push
dec
ret
hlt
sub
cmp
daa
mov
adc
or
cmp
nop
jne
std
mov
mov
pop
adc
stos
dec
mov
aam
sahf
in
js
out
cmp
rol
and
inc
fxch
xor
mov
mov
jl
in
inc
aaa
jno
rcl
jo
subb
test
jo
das
pop
addl
pop
cmp
cmp
and
cltd
sub
test
ss
ds
inc
pop
jbe
sbb
movsl
sub
xchg
scas
ror
enter
and
int
cmpsb
fidivrl
int3
inc
adc
subl
push
jmp
es
mov
divl
pop
scas
add
lahf
and
mov
cmpsl
sub
cs
lret
xor
pushf
ja
xchg
xorl
out
lea
movsb
mov
jp
mov
in
inc
aam
inc
mov
das
mov
dec
jle
mov
xchg
adc
aas
adc
insl
or
mov
push
push
loopne
inc
push
int3
mov
stos
mov
or
mov
cltd
imulb
fs
jbe
dec
mov
psllw
adc
jmp
add
fists
push
pop
lods
out
adc
fs
in
out
ss
xchg
subl
jae
andl
fwait
outsb
sbb
sub
mov
ret
imul
inc
lahf
jmp
push
addr16
and
pop
pop
or
mov
mov
or
fwait
mov
addr16
mov
pop
xchg
add
shr
push
ss
movsb
lahf
dec
and
push
lea
lds
adc
and
add
stos
addb
and
pop
sbb
out
add
mov
sub
inc
das
cwtl
jp
pushf
xor
ja
bound
push
adc
daa
dec
mov
inc
out
in
mov
xlat
ret
testb
cmp
mov
mov
xor
pusha
rorl
mov
dec
clc
and
sti
in
fnstenv
iret
or
push
cmc
add
cmpsl
mov
cmpsl
fbld
scas
and
or
cltd
sti
xor
inc
mov
ja
ss
xlat
inc
jnp
add
add
in
push
ds
or
cmp
push
sbb
subl
inc
loope
inc
int3
aad
hlt
xor
sub
dec
aaa
fwait
cmp
adc
and
mov
clc
es
cmpsb
fwait
aas
lcall
sbb
pop
call
xor
sub
nop
xor
inc
adc
imul
sarl
adc
lret
and
leave
fs
sbb
test
push
dec
push
push
adc
sub
adc
and
add
call
or
cwtl
dec
in
jb
in
cmpsb
hlt
sbb
push
inc
lahf
push
pop
movsl
cmp
test
fdivl
xchg
push
jne
lret
stc
xor
cwtl
hlt
loopne
pop
cli
sti
loopne
xor
aaa
in
or
mov
mov
mov
xchg
cmpsl
pop
add
push
arpl
mov
adc
int
ljmp
xor
and
jne
frstpm(287
xchg
enter
pop
dec
lret
popa
push
dec
mov
inc
in
ret
fdivs
ja
repnz
in
or
mov
cmp
arpl
mov
daa
lret
cs
hlt
hlt
fldcw
js,pn
in
repz
mov
adc
jl
jecxz
in
loop
lcall
mov
jge
mov
bound
jge
daa
sarb
repz
rcrl
lret
loope
push
push
daa
fistl
repz
mov
jecxz
sarl
imul
inc
inc
aaa
mov
inc
test
lret
pop
mov
sbbl
and
loope
icebp
and
pop
pop
les
dec
mov
in
mov
loop
or
int3
ret
lahf
mov
inc
lret
xchg
repz
add
ret
xor
cmc
int3
lock
mov
clc
xchg
add
imul
mov
xor
lock
mov
hlt
lret
xchg
aas
loope
imul
imul
inc
fs
xor
sbb
pop
dec
nop
jo
cmp
cmc
cmc
mov
mov
addr16
sub
fildl
pop
push
push
push
popf
and
jae
lcall
ds
jl
call
cs
and
jno
mov
or
jg
aad
test
cmp
fbstp
ret
insl
insl
movsl
xchg
and
shrb
mov
insb
cmc
cmp
lods
jns
cli
xor
addr16
fidivrs
insl
mov
mov
in
jmp
jg
addl
outsb
lcall
stos
cmp
ds
js
push
push
in
jp
xor
pop
scas
pop
add
fsub
scas
ror
mov
in
xchg
fsubrs
dec
and
push
cli
add
xchg
repz
jp
cltd
mov
cld
lods
int3
inc
cmc
or
push
out
sarb
push
mov
mov
jo
dec
mov
and
xchg
dec
xchg
push
mov
and
mov
pusha
inc
pop
cmp
insl
sub
jns
jne
xchg
in
adc
roll
test
aas
sahf
pop
dec
int
popf
test
fldcw
mov
mov
jp
sar
out
mov
rclb
cmpsb
or
jnp
ret
jnp
imul
jo
inc
rcl
xlat
dec
int
addr16
fstps
popf
xlat
xchg
dec
push
sub
jle
ret
inc
rcrb
pop
jns
aam
push
mov
lods
jb
es
jnp
call
int
mov
mov
sbb
shlb
inc
stos
sbb
scas
xstore-rng
cmpsl
inc
sarl
filds
lock
outsl
pop
dec
jo
dec
scas
jge
push
cmp
arpl
popa
in
test
arpl
aas
lds
arpl
push
mov
mov
mov
lea
dec
aas
aas
jmp
cmp
cli
mov
in
sbb
aad
std
in
add
loop
mov
jg
cltd
addr16
xlat
push
add
icebp
mov
ficompl
loop
outsl
repz
icebp
cmp
mov
sbb
cmc
outsl
aas
sub
out
inc
loop
mov
sub
mov
push
fiadds
xor
jmp
xchg
push
mov
push
add
sbb
and
fisttpl
xchg
jbe
sarl
ja
xor
imul
insb
sarl
pusha
mov
cmp
add
inc
sbbb
in
adc
ret
mov
push
stc
push
sbb
push
add
pop
repz
cwtl
push
mov
out
jne
loop
xchg
scas
sbb
adc
xor
push
fs
aaa
pop
stc
inc
stos
arpl
fs
sti
test
push
pop
and
movsb
mov
mov
dec
mov
jne
and
inc
fistl
lcall
imul
sbb
sbb
inc
push
xchg
push
jg
or
ss
sahf
adc
emms
sub
dec
push
xchg
popa
rolb
inc
xchg
lock
or
addr16
out
ja
pop
cmp
mov
or
std
in
ja
adcb
iret
add
imul
mov
lahf
xchg
mov
xorb
lea
insl
inc
add
sbb
sbb
orl
jnp
out
inc
pop
gs
or
dec
jge
int3
leave
leave
rolb
lea
xchg
pop
push
inc
out
sbb
add
pop
fmul
cmp
xor
cmp
clc
mov
xor
sub
movsl
sub
daa
push
mov
shrb
or
test
lret
push
js
leave
and
pop
and
sub
cmp
lcall
push
pushf
cs
popa
notb
loope
jg
adc
ljmp
sti
xlat
sub
lret
mov
out
in
call
dec
test
adc
imul
xor
leave
jg
ljmp
sub
daa
ret
mov
and
addl
rorb
cmpsb
mov
push
outsb
push
inc
pop
fucomip
inc
xor
and
cmpsb
push
or
xchg
fcoml
pop
jno
xor
push
mov
int3
out
loope
xorl
mov
xchg
movsb
xchg
xchg
mov
lret
xchg
sbb
rcrl
jle
adc
popa
dec
popa
mov
jae
cmp
fidivrs
bnd
inc
push
leave
subl
push
lods
stos
mov
pop
mov
popa
arpl
les
dec
pop
dec
cmp
mov
dec
mov
repnz
jo
sub
adc
lret
les
or
push
inc
and
in
inc
jnp
xchg
mov
arpl
cmp
inc
push
aaa
mov
mov
cli
jb
cmp
leave
in
jl
pop
scas
mov
xor
pop
test
fnstenv
jmp
pop
lea
aas
inc
mov
mov
sbb
mov
pusha
std
dec
jnp
xor
popa
push
mov
cmp
jb
testb
inc
cmp
in
jne
dec
dec
mov
inc
insl
push
mov
cmc
mov
push
inc
pop
fcmovu
xchg
shl
in
addr16
mov
mov
lods
add
adcl
in
dec
test
or
inc
jbe
pop
push
xor
pusha
cltd
mov
lock
pop
push
mov
jns
movsl
fadds
js
mov
shlb
dec
mov
pop
loopne
fdivrs
jg
adc
es
enter
bound
ret
movsl
dec
inc
shl
or
aam
mov
inc
mov
dec
scas
mov
xchg
dec
or
xor
push
inc
ja
sbb
vmovddup
icebp
pop
mov
jnp
lds
mov
mov
jp
out
ret
cmpsl
sub
mov
gs
push
fnstcw
mov
jmp
xor
lret
sbb
les
push
jle
ret
insl
xchg
inc
inc
push
sbb
mov
xchg
jno
mov
insl
mov
or
xor
lods
mov
cld
cmp
fildl
ret
cmp
out
mov
xchg
push
push
jmp
adc
or
xchg
xchg
ljmp
inc
mov
out
mov
cwtl
push
data16
adc
negb
shlb
jmp
test
shl
sbb
push
fs
jle
lret
jle
add
xlat
data16
mov
imul
add
jnp
outsl
lds
cltd
scas
push
scas
pop
inc
outsl
sbb
fildl
jecxz
mov
xchg
add
sbb
mov
push
or
mov
lret
mov
nop
imul
sahf
shll
cli
cmp
insl
sub
data16
adc
cmp
cltd
ja
mov
sbb
test
aas
fistl
adc
add
add
xlat
test
sarb
push
cmc
or
add
xor
aaa
and
jns
add
mov
pop
ja
sbb
jbe
or
clc
xchg
sbb
xchg
jge
jecxz
into
insb
mov
jmp
add
js
test
and
dec
or
push
mov
movsb
int3
push
mov
shrb
add
jo
mov
test
inc
add
popf
popa
stos
push
fbld
fadds
and
enter
pop
add
cmp
add
fldcw
mov
test
push
sub
dec
jae
jbe
lock
enter
fcmovnbe
or
insb
hlt
sbb
mov
stc
pop
adc
mov
xchg
cmovbe
mov
addr16
mov
lret
outsb
movsl
fidivl
jae
mov
stos
push
inc
stos
stos
test
jbe
fadds
popa
xchg
or
das
icebp
ljmp
jg
sahf
cmp
icebp
pop
dec
cmp
and
cmc
orl
xchg
add
pop
jnp
sahf
or
jp
fiadds
pop
push
jle
lds
dec
mov
push
push
lret
xor
bound
ds
mov
mov
pusha
mov
jp
mov
ljmp
sub
stos
sbb
add
test
fisubl
lods
movl
ljmp
lea
shr
sahf
loop
add
sub
dec
ja
pop
test
gs
popa
or
subb
subps
imul
aad
mov
insl
cmp
mov
pushf
into
fcmovnbe
and
pop
jg
cmc
xor
jl
cli
jne
jno
fidivl
sarl
ss
and
js
jae
jle
xorb
fsub
je
pushf
xor
loop
push
push
ds
addr16
add
sbb
cmp
sub
cmp
fildl
aaa
lds
in
daa
dec
test
mov
mov
arpl
jbe
fcoms
pop
fnclex
sbb
push
or
sar
sti
xor
lret
adc
shl
test
jns
clc
sahf
or
or
xchg
out
or
je
aam
sti
xchg
repz
pop
xor
call
or
data16
scas
out
fnclex
outsb
pusha
xor
push
xchg
inc
rorb
lods
test
sbb
inc
andb
lods
dec
push
outsl
fucomip
scas
and
cmp
iret
dec
js
movsl
sti
xor
fcoms
js
mov
repz
lds
lea
addb
push
fmull
cmpsl
test
insb
mov
push
es
mov
shrb
jle
out
daa
mov
js
jnp
aas
mov
pop
ds
push
dec
sbb
add
mov
movsl
test
rorb
hlt
xor
sub
dec
fimull
or
cmp
cltd
and
data16
pop
fisubrl
inc
addr16
mov
das
cmp
sbb
xor
add
fmull
mov
push
mov
adc
notl
scas
je
mov
cmc
stc
adc
iret
jno
ret
aaa
and
mov
pop
pop
je
add
adc
mov
int3
je
shlb
sbb
mov
mov
sbb
repnz
sarl
dec
daa
int3
divb
or
fistl
lcall
imul
jbe
inc
xchg
loope
loope
mov
lock
inc
aam
enter
xchg
cmp
into
mov
rcrl
jae
out
enter
add
shlb
jle
cmp
popf
fidivs
out
ja
and
rcll
push
pop
test
scas
cmp
sbb
es
lods
jne
scas
xor
clc
lret
cmpsl
push
enter
pop
aaa
and
push
ja
xchg
adc
xor
sbb
or
xchg
sahf
lods
add
adc
in
dec
out
sbb
dec
out
push
sbb
or
sahf
ljmp
sub
nop
and
aaa
int
ds
cld
shrb
jle
vrcpps
movsl
leave
inc
sbb
dec
pop
xor
in
enter
xor
scas
sub
and
xchg
xchg
jmp
fstp
int3
and
push
mov
xor
jns
loopne
cmpsl
push
in
sub
sbb
and
lock
shl
in
lea
adc
scas
out
lds
cmpsl
adc
scas
out
fcmove
cmp
lcall
adc
mov
ficoms
jg
jle
rcll
cmpl
mov
scas
lret
jmp
add
ret
aas
push
pop
jle
jae
push
add
mov
inc
push
xchg
lret
lds
sar
subb
stc
cmp
jg
fcomip
gs
cmp
xchg
cmp
je
dec
aaa
jmp
repz
shl
popf
insl
push
fsubr
fmuls
pop
repz
dec
inc
jno
daa
scas
pop
pop
jmp
sti
ja
les
icebp
adc
into
cmpsl
inc
sbb
ja
push
push
pop
sub
std
mov
lea
mov
push
jno
xor
stos
add
push
scas
mov
in
jns
loope
popa
bnd
push
and
in
add
decl
dec
mov
and
jge
push
dec
mov
mov
or
out
push
xor
pop
mov
push
test
xor
out
sub
adc
mov
in
loope
cmp
lock
sub
subl
jecxz
aad
adc
in
pop
pop
jecxz
inc
cmp
or
repnz
xchg
jne
gs
push
imul
adc
lods
xchg
repnz
imul
mov
or
lock
dec
pop
jnp
fsubrl
data16
stos
push
push
setbe
mov
cmp
pop
js
test
stos
das
scas
aam
in
push
je
iret
dec
dec
push
cmpsb
adc
xorb
enter
lret
stos
push
fcoml
inc
scas
cs
pusha
add
sti
xchg
inc
add
fwait
out
xchg
sbb
insl
cmpsb
mov
and
lret
shl
xor
movsl
push
mov
push
push
push
mov
sbb
mov
je
pushl
cltd
sub
push
jecxz
ja
fldl2t
shl
sbb
push
xor
scas
sbb
push
push
leave
adc
inc
mov
mov
insb
inc
pop
in
jno
loope
cmp
sub
push
and
lcall
adcb
pop
hlt
jb
mov
data16
dec
test
repz
stos
hlt
fwait
in
xchg
dec
pop
mov
daa
mov
addb
sbb
pop
sbb
adc
fldenv
sbb
jge
test
rcll
jg
mov
fbstp
test
sbb
mov
xor
dec
pop
push
lcall
arpl
lcall
and
mov
imul
int3
mov
and
jg
icebp
insl
push
cmp
dec
clc
js
inc
add
shll
pop
and
mov
sub
out
pop
or
mov
push
jg
fistl
pop
mov
sbb
mov
push
out
pop
testl
cs
mov
jle
stos
dec
enter
cli
or
notl
adc
shrb
aam
adc
sarb
sub
fsubs
inc
sub
xor
cmp
icebp
jge
imul
stc
dec
or
divl
lds
push
rorl
hlt
xor
sub
push
jbe
pusha
and
dec
dec
iret
jp
rolb
mov
stos
inc
aam
sub
dec
dec
mov
int3
mov
sbb
arpl
dec
pop
enter
data16
adc
loop
rcrb
cs
call
imul
mov
cmc
mov
xchg
nop
and
inc
lahf
lds
int
or
repz
mov
out
xchg
andb
mov
into
fmul
sub
mov
add
lods
sbb
and
and
and
jo
mov
rorb
jnp
jl
add
nop
filds
fidivs
mov
repnz
fcmovb
in
xor
scas
outsb
cltd
push
push
sti
xor
add
xchg
xor
xor
cmpl
pop
lahf
loope
pop
adc
stos
lods
arpl
outsb
fidivs
dec
popa
push
adc
dec
cltd
int3
sub
mov
inc
adc
push
in
lret
push
es
mov
push
out
jns
out
push
jmp
or
jle
incb
inc
xor
mov
pop
das
test
test
dec
dec
cmp
jno
ss
insb
or
add
popa
mov
loop
imul
add
xchg
or
inc
jo
aas
and
inc
rorb
dec
ret
jo
popa
cmp
mov
pop
out
ljmp
adc
xchg
lret
push
and
cmp
in
aad
arpl
shl
lahf
movsl
inc
cltd
and
jo
push
dec
outsb
xor
sub
sub
push
std
pop
mov
shrl
out
das
xchg
or
mov
jns
xor
bound
ret
jo
pop
in
outsb
or
dec
rcl
mov
fidivrl
mov
ret
js
adc
cmp
pop
adc
jle
int3
cmp
mov
das
out
popa
ds
adc
mov
loope
repnz
loope
xor
sahf
dec
mov
dec
mov
stos
cmp
aaa
jg
xor
sub
cmpsb
xchg
mov
pusha
fwait
loope
lea
sbb
mov
mov
push
sahf
mov
xor
push
ds
rol
inc
in
mov
andb
scas
pop
shr
dec
scas
or
je
dec
jnp
in
in
dec
push
dec
dec
push
insl
in
addr16
cmp
aam
mov
in
popf
jg
jno
cltd
test
jl
addb
inc
das
andb
cmp
sarl
sub
dec
cmp
inc
xchg
ds
aad
imul
idivl
push
cmp
xchg
and
nop
imul
pop
push
das
fnstcw
in
mov
or
and
inc
pop
out
push
fimuls
inc
and
or
mov
mov
ljmp
lcall
add
inc
add
ret
repz
fcomps
push
es
jne
cmp
and
jno
mov
lods
pop
cmp
pop
adc
dec
inc
fucomip
clc
andb
add
add
in
incl
bound
xchg
and
scas
mov
jl
pusha
pushw
jae
aam
jns
mov
mov
sub
dec
cmpsl
repnz
dec
inc
mov
cli
mov
mov
mov
sub
repnz
fwait
inc
dec
js
push
add
out
mov
mov
and
sub
and
arpl
add
jg
lcall
scas
je
sub
dec
pop
pop
jae
or
popf
cmpsl
cmp
mov
cmp
jl
pop
sub
sbb
sbb
pop
mov
idivl
push
cmp
jbe
jns
aad
imul
jne
ret
rdmsr
adc
mov
xor
jle
fnsetpm(287
jg
rcll
pop
scas
notl
shlb
flds
xchg
push
ljmp
stos
mov
jb
mov
add
mov
cli
scas
das
repz
sbb
jp
pop
mov
das
adc
push
or
les
pop
test
sub
loope
int
mov
pop
int
movsl
adc
cmp
loopne
inc
sbb
movsl
and
add
dec
inc
outsl
dec
mov
cmp
mov
push
rcl
adcl
jnp
jmp
adc
xchg
adc
xchg
and
xchg
and
gs
loop
mov
stos
pop
xor
jbe
and
ret
inc
ret
mov
decb
adc
mov
jle
and
imul
xlat
mov
cmpsl
add
xor
in
dec
push
outsb
test
mov
fistl
inc
insb
cmp
xor
xchg
rcrb
daa
sbb
arpl
aas
movsb
ljmp
mov
adc
or
cltd
inc
inc
mov
xor
scas
lds
arpl
mov
adc
into
movsl
js
js
cmpsl
cmp
inc
push
pushf
jg
subb
mov
jle
jecxz
dec
pop
and
data16
jp
cs
jno
mov
repz
shl
insl
jno
mov
xchg
sub
outsl
adc
pushf
xchg
lret
mov
es
fidivrs
jb
jns
shlb
and
or
pop
mov
ret
int
cli
xchg
scas
fxch
push
xor
ja
enter
hlt
pop
xchg
mov
in
add
sbb
xchg
and
inc
dec
outsb
mov
adc
les
jo
jo
in
xor
cli
mov
jp
js
jecxz
or
loopne
lahf
cmp
push
jnp
jne
jne
loope
das
ja
xchg
dec
cmp
out
jbe
shrl
mov
lahf
dec
hlt
mov
repnz
cld
and
fwait
jns
cltd
insb
sub
stos
jl
and
sbb
ds
cs
das
adc
insb
popf
fildll
dec
sub
add
lret
jae
push
fnsave
xor
sub
inc
loopne
lds
inc
mov
xchg
cld
add
xor
test
or
pusha
mov
and
daa
push
mov
sahf
add
xchg
and
pop
loopne
jae
jl
adc
adc
fdivrl
sub
lds
pop
std
out
stc
fwait
xor
arpl
test
in
or
jge
inc
repz
jne
mov
pop
daa
dec
js
sbb
xor
pop
nop
jle
movsl
fdivrs
cmp
and
hlt
cmp
repnz
or
imul
sub
int
data16
mov
insl
or
sub
sbb
jno
rcrb
push
cmp
jecxz
lahf
pop
lea
repnz
dec
subl
cmp
out
scas
icebp
adc
jl
loopne
cmc
and
enter
cmc
aad
cwtl
arpl
and
add
adc
add
or
into
mov
inc
inc
insl
into
mov
je
jno
pop
in
pop
mov
cltd
sub
dec
pop
jo
xchg
mov
cmp
insb
imul
cmp
sbb
movsb
jecxz
hlt
or
out
mov
shl
push
lret
sbb
loope
mov
test
hlt
clc
and
cmp
adc
mov
xchg
or
adc
push
outsb
push
gs
push
test
outsl
xchg
push
addb
cmp
push
fildl
lea
test
aad
or
push
xchg
rol
sub
js
mov
aas
popf
mov
add
sub
push
xchg
mov
inc
pushf
fstpl
pop
xchg
fistps
shll
cs
xchg
xchg
fwait
pop
cmp
dec
in
cmc
adc
jecxz
roll
in
or
clc
inc
arpl
aad
cmpsl
push
push
xor
jbe
in
cld
rorl
outsb
insl
push
call
adc
jmp
or
aam
mov
jb
jns
xchg
call
lock
push
std
inc
push
mov
cmp
or
push
ret
cmpsb
lods
push
lret
jle
movsl
and
sbbl
or
fwait
xor
adc
mov
jno
mov
mov
lahf
scas
push
ja
mov
adc
loop
cmpsb
xchg
cmp
movsl
addr16
fsub
popf
mov
cmp
add
dec
mov
pushf
jp
adc
insb
sbb
add
pushf
push
xor
adc
js
mov
mov
pop
mov
les
pop
fildll
push
sub
inc
pushf
enter
mov
xchg
stc
pop
adc
lahf
imul
shl
xchg
bound
gs
xor
lret
mov
xor
negl
and
mov
and
push
cmp
or
xor
lea
pop
sti
cmpsb
mov
and
push
cwtl
notb
imull
add
inc
fldenv
adc
xchg
sub
mov
lock
xchg
popf
arpl
xor
aaa
lds
lea
push
sbb
lahf
jo
out
mov
xor
push
xchg
imul
enter
test
sub
loope
sarb
sub
call
dec
and
out
xchg
cmp
mov
fucomip
sub
pop
inc
cmp
jmp
jg
fisubrl
mov
movsb
pop
jnp
dec
or
jmp
push
iret
inc
mov
jecxz
cmc
es
pop
int3
mov
stc
dec
in
repz
aas
sub
mov
or
inc
push
test
mov
mov
mov
in
and
and
daa
out
idivb
shrl
sbb
mov
jecxz
rcll
cmp
sbb
imul
stos
icebp
stos
dec
xchg
shrl
push
jle
cmpl
vmovd
pushf
mov
push
lcall
push
ja
push
cs
inc
pop
jmp
addr16
pop
jbe
adc
jle
ja
xchg
daa
dec
dec
sarl
xchg
mov
rcrl
dec
enter
aad
sbb
pop
and
shr
stos
mov
inc
sahf
daa
and
clc
mov
loop
sbb
mov
imull
xor
imul
fidivrs
scas
and
test
jns
mov
jge
xchg
stos
add
es
sbb
mov
mov
mov
sahf
xor
fadds
jle
ret
xor
add
xchg
push
sub
fisubrs
jne
mov
pop
outsl
adc
inc
fnstsw
jg
rolb
pop
fbstp
les
aaa
ljmp
sti
subb
and
es
mov
push
xor
push
inc
cmp
add
fs
pusha
xor
mov
or
test
pop
movsb
fisubrl
rcrb
iret
pop
repnz
jns
jp
ja
sub
and
lock
mov
arpl
popa
pop
stos
adc
or
sbb
and
scas
jbe
fstps
push
out
mov
ret
dec
xor
int
push
pusha
lock
fs
inc
sbb
sbb
leave
mov
fldenv
ljmp
and
cmpsw
and
push
pop
std
cli
mov
adc
ficoml
inc
and
rcl
jge
xchg
xor
dec
xor
stos
pop
xor
jbe
es
mov
sahf
sbb
inc
and
ret
paddsw
loopne
sti
mov
das
push
xor
mov
jne
js
xchg
adc
orb
loopne
pop
pop
xor
jae
dec
mov
inc
mov
cwtl
sbb
stos
call
scas
xor
pop
orb
sub
shl
clc
loop
xchg
mov
in
jae
subps
mov
pop
dec
mov
mov
mov
and
testl
daa
mov
jns
cwtl
jb,pt
or
lods
sbb
fs
jp
popa
rol
clc
call
inc
sub
sbb
pop
fisttps
mov
or
xor
add
push
lods
aas
jle
xor
cmpsb
movsb
sbb
add
inc
jo
sbb
fstps
xor
xor
shrb
push
es
ret
mov
fbstp
sbb
mov
jmp
jmp
inc
hlt
cltd
popf
out
push
subb
pop
add
mov
push
insl
cmpl
sbb
sbb
or
or
fsubs
mov
in
inc
mov
mov
mov
dec
sub
pop
add
stos
cld
cli
lcall
mov
xor
mov
jns
lahf
mov
or
aas
popa
jg
add
jo
mov
pop
loopne
mov
mov
mov
push
mov
repnz
jns
sbb
mov
jns
add
cltd
in
lods
gs
mov
mov
sbb
xor
scas
pop
je
fucom
sti
cwtl
imul
shrb
add
mov
rorl
adc
cmpsl
add
sub
aam
jmp
nop
stc
das
or
mov
subl
into
rcr
mov
sub
in
mov
adc
cmp
mov
dec
fsubs
rcll
cvtps2pd
cwtl
movb
mov
xchg
jmp
outsb
mov
addl
imul
cwtl
dec
inc
add
sub
add
jle
mov
inc
cs
xchg
mov
pop
enter
pop
jecxz
cmp
outsb
fmuls
or
pop
dec
dec
mov
and
cmp
and
nop
sahf
out
adc
xchg
push
add
je
in
shll
cmp
jne
mov
iret
lret
dec
stos
jbe
lcall
cmp
ja
jbe
enter
adc
mov
loope
or
ret
lds
out
pushf
jae
scas
jle
fnsave
aam
fcmovne
push
inc
dec
into
and
ja
adcb
push
add
stc
cld
loope
xor
push
shrb
into
cmp
dec
xchg
jge
lds
es
repz
inc
icebp
lods
addr16
xchg
into
fistpl
mov
inc
mov
mov
imul
xor
jl
mov
jl
aad
jne
repnz
dec
xchg
orb
pop
push
cwtl
adc
or
loope
scas
mov
inc
aas
mull
sbb
les
cli
mov
sbb
mov
sti
shlb
xchg
gs
out
adc
cmp
xchg
adc
out
not
iret
jg
push
jae
push
mov
or
jae
test
mov
xchg
jge
xor
push
xor
ljmp
sub
and
sbb
sbb
mov
mov
sub
aas
inc
stos
hlt
cmp
and
push
shrb
mov
sub
stc
icebp
lods
jmp
stc
std
in
fildll
jmp
sbb
xor
mov
mov
and
stos
loope
mov
push
ret
mov
mov
xchg
cmp
popa
and
out
rolb
sbb
test
mov
stc
arpl
jb
inc
ret
push
pop
imulb
and
ret
push
out
jle
jl
xchg
mov
popa
push
push
xchg
xor
orb
fmuls
adc
pop
int
mov
dec
leave
aaa
mov
jns
lods
imul
pushf
std
aam
push
sbb
popa
lock
loop
mov
mov
movsb
movsl
js
sbb
xchg
scas
push
les
das
cs
mov
xor
dec
jge
mov
jns
mov
jae
and
and
nop
inc
jecxz
imul
icebp
and
mov
mov
mov
gs
mov
mov
and
or
dec
fs
inc
dec
mov
inc
mov
pop
jo
xchg
lds
sub
pop
add
loop
jmp
pusha
jb
movsl
and
out
xor
mov
sbb
int3
cmp
inc
in
and
or
dec
in
mov
stos
lods
adc
cmp
ret
xchg
jb
insl
lock
adc
sbb
jp
out
aas
movsb
mov
jns
and
scas
xor
lds
sbb
xchg
mov
pushf
les
fnstsw
dec
andl
fcmovbe
addr16
push
clc
or
enter
push
in
jle
aas
dec
xor
cmpsl
rorb
je
jmp
pop
jmp
mov
addr16
inc
aad
jl
sub
rclb
pusha
push
ficoml
add
fdivl
js
insb
add
jmp
sti
and
sub
arpl
sub
aaa
cmp
mov
add
jge
dec
jbe
push
data16
stos
cs
shlb
stc
push
inc
loopne
push
cmp
push
insl
cmc
and
cmp
rcl
subb
xchg
push
das
insl
sti
lods
lods
insl
lahf
sbb
jl
out
cmp
inc
loop
bound
aaa
push
pop
cmp
adc
movsb
dec
pop
jl
push
fistpll
push
push
xor
scas
and
out
mov
xchg
shrb
loope
sbbl
mov
mov
fwait
pop
repz
xor
daa
push
sbb
jae
ss
outsb
cmp
xor
xor
cltd
icebp
mov
aaa
push
or
jno
dec
pop
dec
jo
pushf
push
inc
or
movsl
add
xor
loope
mov
mov
push
sbb
dec
adc
stos
adc
xchg
mov
aad
aad
push
jo
xchg
cmp
mov
cs
out
shrb
lock
adc
fmuls
imul
push
xchg
sub
mov
sbb
outsl
dec
mov
push
and
jecxz
outsl
mov
sub
jecxz
scas
nop
and
repnz
ss
sti
xor
aad
jge
jne
jnp
test
sbb
scas
push
mov
push
cmp
fcmovbe
inc
pop
inc
das
lods
shll
dec
jg
imul
pop
xchg
dec
sbb
push
faddl
cmpsl
mov
cld
pop
inc
orb
mov
xchg
xchg
dec
inc
mov
loop
pop
jb
cmp
mov
hlt
jecxz
enter
pop
fsubrl
adc
cmc
xor
out
push
aam
ljmp
mov
aaa
pushf
add
imul
jns
test
mov
push
push
adc
jae
dec
daa
arpl
test
and
gs
sbb
push
scas
pop
bound
gs
outsl
fs
cmpsb
jb
ss
pop
mov
and
filds
sub
push
mov
cltd
mov
fldt
add
add
mov
adc
scas
nop
das
mov
shll
add
add
fsubrs
fimuls
stos
sbb
push
sub
add
pusha
push
aam
adc
sub
je
pop
push
cwtl
je
out
sub
dec
xor
mov
xchg
pop
shlb
sbb
loop
aam
jno
scas
xor
lret
sar
outsl
xchg
xchg
daa
sub
into
inc
and
mov
movsl
jg
daa
push
loopne
addr16
push
xor
cmp
pushf
movsl
fdivrl
inc
cmp
negb
std
inc
fnsave
jbe
push
pop
mov
inc
lea
sub
sbb
test
leave
repz
outsl
sbb
mov
addr16
lods
into
mov
and
ret
shl
in
cltd
xchg
xlat
inc
fnsetpm(287
mov
loopne
leave
pop
fnstcw
add
fstl
icebp
adc
lret
sahf
jle
js
shrl
or
mov
and
jmp
movb
das
mov
jmp
sbbl
mov
scas
xchg
jle
mov
inc
jp
fdivrp
outsb
adc
inc
fs
lods
sub
test
xchg
sti
inc
jb
enter
leave
mov
test
mov
insb
sbb
lahf
and
into
dec
in
out
push
inc
jp
fbstp
lcall
mov
dec
in
cmp
dec
ja
ja
ja
push
adc
or
clc
or
cmpsb
jge
pop
cmp
or
rolb
in
xchg
shlb
xchg
dec
xor
loop
test
bnd
stc
andb
pop
ds
xchg
sub
xchg
bound
mov
pop
pop
es
or
dec
adc
mov
stos
notb
jbe
cltd
test
mov
ljmp
fadds
mov
mov
inc
cmpsl
mov
fnstcw
scas
mov
dec
add
movsb
repz
push
fldcw
and
lret
cmp
lods
test
mov
sub
push
mov
cwtl
fwait
fwait
rolb
pop
mov
fidivrs
jg
lods
addr16
loope
and
mov
repz
fisubs
add
andb
cmovno
cmp
cmpsb
push
mov
mov
mov
shll
cld
and
inc
and
cmpsb
loop
push
aaa
adc
aam
imul
test
fimull
sub
sub
ja
hlt
or
xor
xor
pushf
sahf
lahf
jb
inc
lods
lret
and
and
data16
pop
mov
arpl
push
fs
mov
in
test
leave
bound
les
mov
pop
rorb
incb
jno
push
jno
rcrb
popf
aam
mov
test
stos
lds
inc
push
jecxz
loop
stos
inc
xchg
jle
movsb
das
lret
mov
jle
mov
sti
mov
dec
jmp
test
dec
push
popa
push
enter
pop
inc
pop
pop
icebp
xor
mov
in
xor
mov
adc
cli
or
dec
out
test
lea
imul
test
dec
mov
sbb
cmp
fiadds
pushf
inc
jne
icebp
mov
mov
jp
and
call
stc
lods
pop
pushf
adc
pop
imul
fcoml
lods
mov
pop
pushf
mov
fsubl
add
pop
mov
jns
iret
fisubs
jl
movsl
jecxz
sub
ds
pusha
pop
adc
push
roll
ret
fisubrl
mov
sbb
and
addl
cmp
jl
push
out
dec
push
mov
aas
push
or
imul
mov
inc
mov
xchg
mov
fistps
out
sbb
rol
test
pop
sub
pop
dec
jge
or
hlt
pop
sub
xchg
xor
lret
in
add
fldl
vpsubq
cmove
std
dec
aam
fnstcw
cwtl
out
sbb
pop
jnp,pt
ja
pop
out
push
xor
cs
dec
pop
xchg
sbb
repz
jge
imul
xchg
out
xchg
inc
pushf
jb
sbb
dec
enter
sahf
testl
gs
rorb
fcompl
push
push
je
cmp
xor
xchg
mov
cwtl
mov
cmp
je
ljmp
push
sub
popl
jo
add
out
or
or
cmp
fistpll
out
arpl
push
sbb
addr16
mov
insb
cmp
and
cli
inc
sub
loopne
lret
insl
imul
lahf
inc
repz
dec
ja
pop
loop
xlat
test
test
and
jae
cmp
jge
add
cmpsb
repnz
pop
push
sub
xchg
fcmovbe
movsb
loop
inc
add
loop
sbb
jg
mov
jecxz
mov
push
sbb
and
das
rol
mov
sub
imul
adc
outsb
aad
xor
jmp
jecxz
fdivl
push
or
cwtl
int
les
mov
adc
sbb
sub
sbb
cwtl
arpl
sub
mov
add
sub
movsb
xor
sbb
sbb
adc
outsl
in
outsb
call
movsl
cs
mov
adc
sub
xchg
stos
lret
test
mov
dec
mov
lahf
addr16
xchg
pop
sbb
cmpsl
sbb
out
dec
daa
int3
push
xchg
mov
cmpsw
cmpsl
jp
or
enter
sbb
cld
mov
movsl
pop
push
push
stos
adc
fistl
ret
stc
xchg
lret
adc
xchg
mov
cmp
andb
aas
movlps
ret
dec
hlt
mov
js
add
sbb
cmpsl
outsl
cmc
push
out
mov
mov
rol
sub
cmpsl
leave
sbb
hlt
push
dec
pop
je
sbb
decl
ljmp
fnstcw
pop
iret
fwait
inc
dec
add
cmp
call
ret
mov
inc
sbb
mov
repnz
stc
call
inc
pop
fwait
scas
sbb
fdiv
inc
adc
jmp
pushaw
stos
push
cmc
je
in
push
xor
mov
xchg
dec
inc
and
lahf
cmp
test
imul
cwtl
mov
inc
mov
xchg
nop
push
add
jmp
lock
sbb
ljmp
xor
pop
mov
or
push
dec
clc
sbb
mov
jle,pt
stos
cmp
pusha
shll
loop
dec
mov
or
aas
cmp
addr16
mov
and
lds
push
sti
mov
mov
sti
mov
push
jmp
adc
leave
adc
ss
dec
cmpsl
aas
ror
xlat
cmp
inc
inc
mov
mov
aas
mov
lds
popa
jg
test
and
or
test
in
inc
aam
fnstsw
mov
mov
es
push
pop
mov
and
cmp
les
xchg
rorl
xchg
sub
cmpsb
addr16
dec
push
cltd
and
aaa
inc
jae
or
cld
movsb
loopne
or
icebp
cmpb
inc
lds
pop
insl
push
aad
xor
mov
aad
xchg
sarb
cmp
mov
cmp
cltd
outsb
das
and
mov
sti
xorb
loopne
xchg
jp
std
fisubl
mov
rorb
ss
in
mov
outsl
adc
dec
add
adc
or
sbbl
lahf
push
jp
cmp
add
clc
cmp
fs
loop
dec
mull
sbb
push
jmp
stos
loopne
xor
mov
and
in
inc
jle
pop
dec
xchg
and
aam
int3
and
adc
es
mov
or
std
lret
lret
sub
out
ret
dec
push
mov
mov
adc
jns
daa
mov
movsb
std
popa
repz
pop
mov
jnp
loope
xchg
pop
std
fcomps
adc
inc
ds
fwait
cmp
adc
push
mov
sahf
arpl
enter
ret
pop
inc
cmp
or
xlat
das
and
jnp
fdivl
jb
and
insl
xchg
fcomip
pop
pop
mov
xchg
jno
mov
stos
lcall
mov
add
mov
pushf
jl
in
inc
xchg
mov
mov
jge
stos
arpl
sub
pop
push
adc
sbb
cmpsb
dec
test
push
test
imul
pushf
jle
sbb
push
fldenv
or
cs
dec
mov
inc
push
fidivrs
outsb
xorl
xor
sub
jo
mov
sbb
mov
add
bound
movsl
rorl
sub
das
hlt
push
lret
jne
cwtl
add
sbb
pop
jbe
outsb
sub
dec
pop
add
xor
inc
call
pop
pop
shll
test
xor
sbb
iret
or
mov
pop
pop
and
fdivr
popa
cmp
add
rclb
push
sub
jno
subl
mov
inc
in
or
xor
dec
js
dec
dec
inc
filds
mov
lods
cwtl
mov
fnstenv
xor
add
or
jne
inc
mov
inc
addr16
insb
mov
pop
ficompl
sbb
aad
out
and
popa
rcr
push
sbb
inc
add
or
std
cmp
adc
push
sub
lds
sub
xor
push
into
jae
dec
movsl
inc
out
sub
dec
stos
pop
sub
and
sub
fsubrs
xchg
cld
mov
pop
decl
das
fstps
push
ljmp
call
sub
test
inc
xchg
jp
out
cmp
jle
dec
faddl
dec
pop
xchg
push
cld
push
pop
mov
inc
xor
loop
pop
add
and
roll
call
cmp
jge
into
pop
in
lcall
fidivrs
jno
adc
pop
xchg
xlat
pop
call
cwtl
jns
xchg
stos
mov
addr16
xchg
xchg
fnsave
mov
popa
jns
imul
sbb
pop
push
sub
fs
add
loope
push
lods
lds
push
repz
add
mov
fistpll
mov
xchg
dec
pop
sbb
fs
sar
icebp
mov
out
mov
ja
mov
push
cmp
dec
mov
mov
repz
jae
cmp
cmp
dec
sub
call
subb
dec
fldenv
mov
stc
jg
jmp
jle
rclb
xor
cmp
pop
fsubs
les
cli
mov
push
adc
fdivs
jbe
rol
cs
pop
sbbl
or
cli
sub
ljmp
push
xchg
mov
fdivs
add
and
daa
jg
mov
lods
adc
adc
popa
xchg
popf
mov
fldenv
call
cs
clc
cwtl
movsb
fwait
jecxz
in
or
xor
cmp
outsb
lds
addr16
repnz
dec
push
push
addr16
outsb
jle
pop
and
ja
and
jbe
aam
xchg
cwtl
inc
pop
or
mov
add
scas
cmp
adc
jne
mov
xchg
and
sbb
lcall
in
and
out
les
mov
pusha
pop
out
data16
push
fs
mov
mov
cmpsl
dec
jno
sub
cmp
jecxz
or
or
gs
dec
ret
jbe
bound
dec
pop
lods
sti
test
and
jo
xor
xlat
stc
addr16
negl
loope
pop
fimull
sub
sarl
pop
xchg
test
mov
loopne
or
lds
hlt
dec
test
add
iret
mov
outsl
mov
cwtl
andl
enter
and
fmuls
pop
popf
add
repz
adc
cmp
dec
call
jb
popa
pop
sbb
in
hlt
lds
mov
mov
scas
dec
sub
ja
pop
pop
int
adc
jle
jl
bnd
shlb
aas
mov
std
jmp
inc
fistps
imul
inc
mov
sbb
mov
aaa
in
test
push
cmp
or
in
and
imul
push
movsl
push
popa
popa
loope
cmp
jmp
adc
in
sub
icebp
bound
push
xchg
cmpsb
dec
and
jge
xchg
clc
test
test
inc
jnp
imul
jnp
shr
mov
arpl
lock
sub
xchg
test
in
mov
mov
push
lret
ficomps
jp
hlt
push
sub
mov
pop
cltd
imul
sub
or
mov
loop
pushf
out
aaa
jbe
loopne
pop
or
mov
jno
mov
imul
xchg
adc
cmp
xchg
rorl
ret
xchg
fstp
xor
cmpsl
in
add
sbb
pop
pop
out
add
aam
je
movsb
call
and
mov
jmp
cmp
leave
adc
sbb
pop
push
push
in
mov
and
fwait
adc
ljmp
stos
iret
jg
mov
xor
int
icebp
mov
repnz
jae
mov
sahf
sbb
xchg
es
fucom
scas
cwtl
movsl
sbb
nop
fcmovne
lods
in
gs
sub
pop
jnp
jo
call
out
xchg
jge
xchg
push
ja
mov
pop
lret
scas
adc
mov
in
cld
sbb
arpl
stos
daa
xchg
inc
rcll
jne
cmc
sahf
aad
frstor
mov
cmp
rcrb
int3
add
sub
push
hlt
jo
mov
call
test
mov
insb
ret
push
push
sbb
xor
cmc
dec
inc
test
adc
jns
adcb
lahf
lods
pop
js
in
mov
les
mov
jg
mov
push
cs
sub
inc
inc
mov
shlb
mov
lcall
and
cs
and
lahf
push
cld
iret
aad
mov
ds
ja
sbb
xor
mov
fidivrs
addl
dec
rolb
roll
mov
mov
imul
mov
add
sbb
jo
shlb
pop
adc
xor
faddl
sub
xor
nop
jne
scas
popa
lods
cli
mov
jg
mov
xchg
int3
cwtl
enter
pop
xchg
lods
xlat
dec
out
pushf
push
jg
shlb
mov
daa
sahf
cs
lea
fs
enter
dec
dec
mov
repnz
outsb
call
out
xchg
xchg
sub
and
xor
mov
pushf
sub
dec
sub
pop
int3
cmp
jmp
adcl
imul
and
int
bound
test
inc
out
sub
xchg
gs
fsts
fadds
pop
nop
stos
loope
out
fpatan
lea
xor
addr16
dec
mov
sub
sub
in
ret
push
pushf
js
jbe
pop
sbb
fisubrl
lcall
insl
jg
in
jmp
xchg
lahf
adc
pushf
repz
imul
mov
insb
cmp
mov
insl
push
fisubs
movsl
sub
icebp
mov
inc
pop
mov
movl
jne
xor
jo
or
sub
ss
icebp
in
adc
cmpsb
in
in
outsl
ja
mov
push
mov
push
xor
inc
or
push
mov
inc
out
rol
cmp
stos
daa
imulb
and
stos
lea
xor
int3
pop
mov
jo
push
xchg
movsb
jecxz
loop
mov
ljmp
in
cmp
xchg
scas
pusha
pusha
fidivs
sbb
xor
jg
out
iret
lea
push
test
cmp
inc
imul
inc
icebp
push
add
popa
icebp
or
cmp
negl
addb
pop
mov
push
icebp
dec
pop
lea
jmp
sbb
scas
xor
mov
inc
out
mov
int
pop
rcll
cmp
or
in
add
xor
sbb
push
mov
cwtl
xchg
ja
xchg
jae
pop
jae
aam
rorl
xchg
lods
sbb
xchg
das
addr16
js
or
insb
cmc
push
or
mov
scas
sti
mov
push
pop
stc
loop
sbbb
inc
xor
daa
dec
dec
loope
test
dec
jg
ficomps
sub
in
xor
and
test
mov
cmc
cld
gs
aam
push
xchg
xor
test
in
les
das
mov
and
jp
jp
push
push
cli
ret
dec
iret
ficomps
jge
cld
ret
push
push
mov
aaa
or
imul
mov
mov
scas
adc
data16
xchg
pop
inc
jecxz
pop
xorl
clc
ds
push
pushf
push
fldt
fsubs
sbb
mov
pop
loop
out
das
loope
loopne
or
jmp
push
jo
clc
add
cmc
mov
aaa
sub
lret
insb
ljmp
mov
rcr
push
rolb
or
loop
xchg
dec
shll
dec
jl
in
shrb
ficoml
fsub
inc
mov
js
dec
cmp
cmp
xor
mov
in
push
pop
pop
lea
aad
stos
aaa
xor
adc
push
div
adc
adc
out
pop
xor
pop
or
jb
pop
pop
jl
cmc
push
out
jbe
xchg
enter
insl
sub
and
sbb
mov
adc
or
into
std
dec
pop
pop
xlat
push
dec
jg
or
movsb
xchg
fistpll
xchg
dec
push
test
addb
sub
inc
sub
push
or
hlt
adc
inc
mov
into
sub
mov
inc
pop
pop
add
inc
out
dec
pop
aam
arpl
ror
xlat
cwtl
dec
sub
ret
mov
int3
push
xchg
adc
test
lock
scas
in
mov
aam
jo
ds
sbb
mov
les
pop
xor
popf
mov
jl
sbb
push
pop
rdmsr
sahf
mov
scas
mov
in
xlat
out
xlat
out
sub
cmp
sbb
imul
push
test
jge
sub
sar
cmp
lret
or
insb
mov
aam
leave
gs
pop
inc
pop
sarl
mov
or
cmp
and
andb
sub
daa
add
pop
jmp
or
out
pop
test
int
leave
into
mov
inc
push
ds
xchg
xchg
popf
scas
ljmp
outsb
mov
pop
dec
sbb
and
fs
imul
xor
imul
pop
and
sbb
inc
pop
xchg
adc
fdivr
aam
xchg
jecxz
cmpl
dec
and
sub
mov
pop
fidivrl
sbb
movsl
fwait
repz
in
rcr
jb
enter
imul
inc
adc
insl
sarl
xor
or
mov
ret
xchg
es
loope
mov
hlt
imul
or
icebp
add
dec
loope
pshufw
in
xchg
xchg
add
and
cmc
sbb
inc
xchg
sar
loope
stos
xchg
add
lret
in
jge
ja,pt
jg
shll
shrl
test
jo
fs
hlt
xchg
jnp
fs
bndstx
jbe
shr
xchg
pop
lods
in
dec
filds
mov
sbb
jge
faddl
ret
stc
nop
mov
test
xor
or
insl
and
or
xor
xor
push
aaa
fildl
jne
xchg
cmp
dec
mov
xchg
imul
fs
mov
sbb
movsb
mov
xor
mov
cvtps2pi
mov
add
pop
mov
push
or
or
repnz
xchg
gs
cltd
addr16
fwait
mov
xchg
test
pop
sti
fnsave
or
xor
nop
jl
cmpsb
aaa
xchg
mov
mov
or
movsl
addb
mov
pop
cmp
and
movsl
ja
outsb
enter
pop
aam
inc
fwait
mov
pusha
add
cmp
push
jg
cmp
adc
and
adc
incl
loope
mov
out
mov
in
jae
scas
mov
mov
mov
sub
sub
mov
out
ds
dec
cmp
xor
or
xorl
repz
pop
add
and
pop
adc
insb
loop
adc
movsl
inc
xchg
adc
add
and
imul
in
shlb
inc
jo
mov
sbb
or
sub
cmp
xor
ljmp
shll
aam
repnz
enter
cmpl
xchg
add
prefetch
or
aaa
pop
stos
insb
add
cmc
sub
iret
jmp
frstor
testb
cmpsl
pop
roll
arpl
cli
imul
je
fsubr
sti
aaa
out
mov
mov
scas
shrl
pop
cmp
sub
or
mov
jae
pop
cmp
mov
loope
push
lahf
aam
jb
ret
rolb
or
lret
jecxz
ret
inc
fimull
xor
loope
cmp
js
adc
out
and
or
shl
pop
sub
push
mov
icebp
mov
shl
pop
sbb
scas
sub
or
jns
scas
lods
dec
or
ds
mov
jmp
add
xor
adc
xor
push
pop
mov
add
lcall
shl
cs
adc
loope
icebp
adc
loopne
mov
sbb
in
imul
js
jmp
inc
gs
or
cwtl
inc
jo
js
lahf
xchg
andb
lret
mov
ljmp
xchg
roll
shl
popf
in
and
jns
or
out
outsl
cmc
jecxz
sbb
leave
hlt
test
testb
jmp
pushf
icebp
push
fcomps
fistpll
sub
xchg
sbb
xor
mov
or
xchg
in
xchg
mov
lods
ds
xlat
dec
fs
lret
jge
jae
or
loop
sbbb
in
out
ljmp
xchg
sbb
loope
shll
xor
mov
in
imull
cmp
ds
push
pop
filds
pop
adc
sbbl
push
subl
pop
inc
fs
dec
push
pop
mov
or
fs
ret
sub
lret
adc
jbe
movsl
sbb
xor
jb
adc
mov
inc
pushf
jmp
sbb
jno
lea
aam
ja
xchg
out
pop
leave
cltd
les
inc
cld
jnp
push
notl
mov
pop
flds
push
adcb
adc
bound
dec
mov
insl
mov
push
ljmp
mov
add
push
xor
leave
and
pop
out
inc
dec
add
repz
push
test
mov
int3
mov
or
ficomps
or
je
sbb
test
sbb
mov
rep
jecxz
inc
js
fidivrl
mov
aam
push
cltd
sbb
dec
xchg
mov
mov
pop
jmp
mov
sub
sub
or
cwtl
test
xorb
sub
loopne
pusha
mov
fsub
adcb
mov
popf
test
fisubrs
cwtl
push
jns
add
ss
mov
rol
cmp
or
call
idivl
les
add
push
sbbl
repnz
cmp
fnstenv
jmp
mov
into
out
data16
dec
test
cmc
test
jecxz
out
inc
cmp
inc
sub
shl
outsl
stos
add
mov
mov
cmc
cmp
cltd
mov
mov
pusha
scas
cmp
inc
mov
jmp
inc
in
fisubrl
push
daa
jbe
adc
pop
outsb
test
pop
cmpb
roll
inc
xor
jle
outsb
out
add
dec
sub
jle
xchg
pop
mov
push
xchg
push
out
adc
push
mov
decb
ffree
sbb
repz
add
xor
mov
mov
and
lret
inc
push
test
enter
jg
cltd
ds
pop
js
lahf
cmpsl
clc
cmc
cltd
cmp
sub
ss
bound
bound
popf
sub
repnz
inc
hlt
dec
mov
popf
mov
add
jns
std
pushl
mov
mov
jns
cmpsb
mov
aas
popf
in
cld
pop
cmp
jno
inc
fsubs
add
xor
pop
pop
leave
sbb
or
out
data16
imulb
dec
aaa
bound
xchg
mov
out
ror
rcrb
neg
mov
repnz
jno
pop
cmp
aaa
inc
dec
test
pop
in
cli
xchg
xchg
loopne
sub
sbb
add
lcall
push
mov
jp
mov
fstpt
fadd
jecxz
aaa
add
inc
loope
loop
aaa
fisubrl
dec
int3
in
call
add
or
lea
xor
orb
pop
lret
js
aam
cmp
idivb
jns
xor
mov
in
and
pop
dec
fwait
enter
aaa
xchg
cmc
add
imul
cmp
mov
mov
pop
pop
es
sub
jne
mov
insb
aaa
xchg
ficompl
add
add
add
pusha
sub
mov
ja
out
dec
mov
lea
rep
mov
popa
fisubl
inc
stc
cmpsl
and
aas
sbb
jns
dec
add
cmp
fs
xchg
hlt
sbb
push
popf
sahf
jno,pt
push
out
test
in
inc
out
ret
js
mov
pushf
movsb
and
fs
stos
lea
inc
insl
mov
sbb
and
xor
mov
pop
inc
or
mov
aad
cmpsb
add
cmp
test
das
inc
testb
xor
scas
out
mov
ret
ljmp
mov
pop
pusha
jl
xor
mov
pop
mov
sbb
xor
test
jl
std
into
xor
jecxz
pushf
lret
sub
or
jmp
js
jno
hlt
or
popl
sbb
lock
imul
dec
insb
lds
loope
shll
mov
mov
inc
test
ret
es
jbe
jp
mov
xor
test
add
push
add
mov
filds
xchg
or
cmp
dec
xor
sub
mov
sarl
mov
xor
sbb
lock
test
adc
jo
fnstenv
imul
add
add
xor
arpl
cmpsb
xchg
aam
jbe
in
icebp
xchg
sbb
or
bound
shlb
fnsave
mov
pop
sbb
and
lret
mov
ret
dec
xor
cmpsb
xchg
dec
xchg
push
js
enter
daa
jg
stos
or
shll
xor
push
ja
pop
pop
pop
scas
cmp
sbb
pop
shrl
pop
out
shlb
lret
inc
jnp
push
stos
sbb
rorl
shll
cmp
mov
jl
xor
and
add
cmp
mov
imul
fistpll
cmp
adc
dec
daa
cld
sub
pop
jecxz
inc
sub
leave
add
into
mov
pushf
enter
xchg
xchg
pop
scas
pop
cltd
or
jae
repnz
inc
adc
pop
sbbb
push
add
iret
jne
mov
stc
lods
rcll
cmc
cmp
pop
lods
bound
cmpsl
stos
and
mov
adc
lret
add
inc
push
mov
fdivrs
cmpsl
daa
pop
lcall
jl
xchg
into
fcmove
jb
xchg
push
mov
and
fbld
add
ljmp
jo
xchg
jnp
faddp
cs
and
mov
or
mov
mov
lods
and
repz
les
arpl
lahf
ljmp
sbb
inc
stc
je
pop
and
loope
sbb
filds
in
add
pop
fisubl
mov
or
arpl
jmp
addr16
fsubl
shrl
push
push
dec
xor
jmp
pop
mov
mov
xchg
and
adc
movsb
mov
mov
loope
cwtl
cmpsl
fisttpl
mov
or
or
inc
hlt
adcb
add
outsb
push
jns
pop
lahf
jmp
repz
cld
int3
inc
push
jecxz
sub
repz
xchg
jge
push
inc
dec
test
notb
repnz
loope
inc
in
daa
adc
or
lcall
add
dec
rcrl
fldl
adc
sub
cmp
push
adc
jecxz
inc
xor
pushf
repnz
mov
repnz
xlat
cmpsl
test
std
push
pop
jecxz
sbb
cltd
cwtl
sub
cmp
ret
mov
push
and
addr16
inc
lcall
repnz
incl
es
sub
test
sbb
sahf
xlat
xor
or
test
pop
gs
les
sub
into
stos
and
sbb
or
and
popf
sbb
fisttpll
int
xlat
add
mov
pop
inc
int
mov
push
and
imul
adc
lds
movsl
outsb
push
std
cvttps2pi
aas
adc
mov
or
repnz
dec
enter
scas
aas
jl
xchg
mov
mov
scas
popf
push
incb
shll
inc
push
mov
icebp
ret
sub
imul
mov
aad
ficoms
jbe
dec
scas
jg
jecxz
insl
xchg
inc
int3
or
xchg
jne
js
aas
jns
dec
cld
jae
loop
jae
xchg
jl
pop
cmp
adc
shlb
cmpsb
lock
aaa
jb
int
sub
inc
enter
xchg
clc
fistpl
sarl
dec
gs
and
fisubs
xchg
movsl
jo
stmxcsr
cltd
hlt
xlat
data16
subb
and
mov
mov
dec
and
dec
xchg
jle
sbb
and
fadds
xchg
jo
mov
fldlg2
rorb
mov
or
lcall
arpl
adc
or
push
mov
aad
sbb
int
xor
cmpsl
mov
test
dec
dec
dec
or
and
ja
popa
xchg
inc
cs
jg
fadd
std
push
in
add
pop
cwtl
repnz
xchg
cmp
cltd
jp
adc
outsl
inc
jle
pop
or
mov
rolb
popf
in
lock
cmc
mov
sbb
repnz
xchg
aam
stos
sbb
mov
sti
push
pop
std
sbb
pop
dec
scas
add
xchg
adc
xchg
rcrb
repnz
fistl
add
out
mov
mov
mov
in
mov
in
scas
outsb
dec
jbe
or
fs
dec
gs
cld
xrelease
jecxz
sbb
shr
pop
jae
aad
dec
scas
push
jb
mov
mov
not
imulb
xor
testb
and
mov
xchg
negl
pop
sbb
mov
out
inc
jecxz
pop
pop
inc
rcr
jmp
add
inc
sbb
sbb
int3
mov
xor
stos
sti
xchg
scas
dec
icebp
xchg
and
jl
and
xchg
addb
movsb
mov
ljmp
lock
mov
js
sbb
ret
jg
jmp
dec
xorl
fs
fimull
pop
outsb
add
push
xor
cld
add
sub
xchg
les
movsw
inc
push
push
icebp
xor
leave
xchg
and
mov
ret
xchg
stc
or
int
shlb
mov
xchg
mov
sub
into
push
ljmp
push
jae
add
movsb
xlat
mov
stc
std
xchg
cmp
popf
sti
fmul
push
and
adc
test
mov
es
dec
cmpsl
fdivrl
aaa
stc
mov
mov
mov
xchg
pop
dec
test
rcr
addb
jns
adc
sub
rcll
xor
mov
pusha
add
push
pushf
cs
int3
rcrb
lods
inc
or
outsl
add
cmp
bound
movsb
call
dec
cld
jbe
and
fcomi
and
adc
lods
pusha
repnz
xchg
sbbl
jbe
adc
addl
in
negb
jg
jno
jge
pop
jb
out
sti
or
cmp
lahf
mov
mov
dec
ss
nop
and
out
inc
fisttpll
ret
push
jecxz
gs
xor
testl
xor
daa
rcrl
cwtl
testl
les
outsl
scas
mov
add
inc
ret
sbb
adc
fwait
push
int3
mov
ja
and
scas
repnz
fcoml
std
popf
aad
aam
iret
mov
ffreep
mov
pop
pop
xchg
jmp
pop
testb
lea
aaa
cwtl
sub
cmp
dec
and
repnz
inc
pop
add
mov
mov
jp,pn
sub
fnsave
sbb
out
mov
test
outsl
lret
hlt
rolb
jb
mov
lods
sbb
xchg
sarb
ret
xchg
nop
gs
mov
ja
sbb
ds
jno
xchg
sbbl
leave
or
dec
xchg
daa
mulb
dec
test
test
mov
cmc
stos
mov
jecxz
adc
xchg
clc
out
mov
jl
shrb
flds
or
push
loop
cli
cmp
in
push
add
in
sub
push
hlt
int3
sbb
repnz
inc
mov
pop
jb
or
imul
xor
xchg
add
push
mov
pop
ljmp
pop
jecxz
sahf
or
push
insl
jecxz
sub
or
popf
and
dec
jge
or
jg
mov
add
and
movl
cmpsb
dec
cmc
test
sub
cmp
and
pop
adc
pushf
sbb
inc
addr16
mov
inc
push
leave
cli
mov
jecxz
sti
jb
mov
mov
push
add
stc
mov
mov
in
das
cli
hlt
and
or
daa
stc
mov
loope
frstor
enter
jo
fwait
jb
mov
sti
dec
dec
jmp
cmc
popl
mov
xor
dec
inc
mov
sti
dec
int
daa
clc
out
ljmp
sub
add
cmp
mov
adc
sub
out
push
pop
pop
imul
push
in
mov
rolb
js
cwtl
cmp
lret
ja
push
or
fcomps
xlat
xor
cmp
mov
test
inc
insb
lods
push
add
or
sahf
fcmove
into
or
mov
ljmp
in
movsl
xor
jno
jo
adc
les
in
daa
add
std
mov
or
xchg
sub
add
push
iret
mov
pop
mov
mov
mov
rolb
insb
in
scas
adcb
dec
xor
cld
lods
in
in
inc
cltd
lahf
lret
ja
jns
subl
out
mov
fistpl
sbbl
pop
test
lds
andb
fdivrl
pop
sahf
cmc
out
add
das
add
out
mov
jle
xor
mov
nop
jae
lods
and
mov
gs
sub
ficoml
jo
fsubrp
pushf
fldenv
push
mov
push
pop
mov
andl
mov
cmp
lds
jg
inc
cltd
aad
push
dec
hlt
sbb
inc
gs
add
out
insb
dec
push
pop
aam
dec
leave
es
mov
cmc
mov
imul
inc
adc
mov
mov
pop
orb
sbb
and
cmp
push
xor
outsb
int
inc
test
xor
adc
push
xchg
sbb
adc
or
mov
test
stc
adc
fildll
mov
mov
lds
ss
das
cmpsl
rorl
sub
push
jp
jb
popf
or
sub
mov
stos
sti
pop
or
add
mov
xchg
lods
dec
sub
inc
xor
jmp
inc
mov
std
lock
cmp
mov
xchg
lock
pop
rcrb
inc
or
sub
jecxz
les
callw
inc
pop
push
ret
dec
out
dec
jp
inc
cld
hlt
pop
in
cltd
mov
hlt
dec
push
fidivl
sbb
lds
sbb
and
xchg
loope
mov
add
dec
push
inc
lcall
mov
xlat
push
aad
shll
pop
stc
sbb
push
insl
sahf
nop
dec
mov
cwtl
in
rcl
pop
jno
bswap
imul
out
das
test
mov
sahf
sub
data16
cwtl
push
test
imul
mov
fnstcw
adc
inc
mov
xor
jb
mov
lds
xor
sarl
sbb
mov
addb
push
into
rcrl
pushf
fwait
mov
orl
cmp
and
outsl
adc
clc
mov
loopne
fsts
hlt
adc
sub
sbb
js
mov
repz
or
jns
jb
jns
mov
jge
ror
das
xor
fildl
rolb
in
in
dec
mov
mov
mov
aam
xor
pop
mov
stc
in
cs
loopne
lds
jl
jo
pop
flds
inc
and
test
inc
leave
loope
mov
inc
push
loop
xchg
inc
mov
cmpb
pop
pop
repnz
imul
add
aam
addb
jno
cmpsb
cmc
ficompl
dec
add
dec
mov
ficomps
mov
into
idivb
js
mov
sbb
fs
std
jns
les
sbb
push
sbbb
dec
aas
sub
dec
int3
ret
add
adc
ljmp
dec
inc
push
sbb
xor
xor
add
pop
dec
out
iret
mov
cltd
outsb
enter
mov
repz
xor
xor
popa
xchg
adc
div
dec
jge
enter
push
and
xchg
flds
ss
mov
jae
out
jb
orl
and
iret
sbb
pop
mov
cmpsb
repnz
shll
dec
cmp
jl
mov
movsb
dec
pop
dec
mov
ja
sbb
out
out
lea
mov
and
mov
addr16
repnz
xchg
jecxz
push
call
sahf
scas
mov
cmp
arpl
pop
insb
dec
scas
mov
into
aam
lret
into
and
in
shl
push
mov
inc
lds
xor
xchg
sarl
mov
sbb
mov
data16
push
mov
test
mov
leave
xchg
testl
mov
lcall
test
loope
sbb
and
out
cli
and
push
mov
imull
imul
das
fimull
lret
popa
mov
loopne
or
fstpt
lock
dec
push
rcll
jns
inc
cltd
and
sub
fs
xchg
cmp
inc
inc
adc
rorb
mov
lcall
insb
inc
scas
adc
sub
mov
mov
xor
std
mov
or
stos
push
and
addr16
out
rcr
cs
lcall
fiadds
jle
bound
lahf
jne
cli
ret
sbb
sbb
lcall
xchg
or
jg
push
cli
dec
push
mov
mov
mov
push
or
fcmovnb
pop
jnp
xlat
jmp
imul
ss
add
jl
mov
sub
aaa
jge
inc
addr16
lret
lcall
enter
stos
sub
pop
dec
mov
or
cwtl
adc
pop
add
jge
cltd
aam
aam
and
or
ss
in
pop
mov
push
popf
mov
dec
stos
cmc
jne
pop
mov
jg
lods
add
lds
es
lods
addr16
mov
xchg
movsl
in
jb
inc
mov
test
adc
inc
xchg
mov
scas
pop
push
cs
les
stos
push
nop
adc
lcall
and
lret
into
and
inc
adc
lods
mov
mov
sbb
cmc
rorb
test
repz
insb
cmp
pushf
scas
scas
inc
jmp
cmova
dec
movb
int
xchg
cld
add
and
or
lahf
fstpt
lea
fwait
bnd
jg
xchg
stc
or
clc
clc
cs
jnp
mov
pand
jbe
rcrb
test
push
gs
push
popa
repz
vpackuswb
sub
dec
jg
mov
mov
cli
dec
xchg
inc
xchg
or
rcrl
test
pop
xchg
fsubp
aad
lods
adc
jne
mov
jmp
xor
rolb
aam
adc
fwait
fwait
mov
jns
or
jge
push
daa
sub
xchg
insb
out
and
sub
out
xor
and
dec
orb
cmp
cmp
mov
pop
dec
scas
subl
fidivrl
bnd
jl
lret
popa
mov
lds
icebp
push
ja
addr16
jg
popf
cwtl
out
add
sub
addr16
imul
rcll
xchg
js
xchg
adc
mov
mov
fidivrs
lock
shlb
ljmp
outsl
in
test
std
popa
push
pushf
leave
push
xor
xlat
movb
repnz
xchg
xchg
jne
test
cmc
movsb
mov
inc
mov
imul
psubb
cmpsl
cmp
adc
iret
mov
push
pusha
dec
mov
mov
cmp
dec
mov
pop
scas
outsl
add
push
data16
cld
mov
and
or
add
in
and
push
shll
adc
xor
cmp
xor
push
add
or
movl
je
into
add
add
lcall
dec
jmp
das
ja
cld
enter
sub
sbb
jge
movaps
test
jge
inc
outsl
outsb
in
gs
inc
pop
dec
adc
nop
add
mov
xor
adc
jmp
mov
adc
xor
out
outsb
insl
popf
fldenv
add
or
gs
imul
adc
fiaddl
xor
stos
adc
xchg
dec
fimuls
shr
test
jbe
adc
pop
lds
mov
ljmp
data16
out
sbb
xor
xor
adc
loop
jb
xchg
mov
or
scas
xor
mov
or
lods
xchg
out
movsb
mov
cmp
pop
dec
pop
xor
mov
push
ljmp
or
sub
cltd
cmp
imul
mov
fisttpll
out
ja
vpor
or
sub
sub
pop
cmp
jge
aas
out
and
or
popa
or
jae
jne
jae
mov
dec
dec
xchg
mov
cmp
sbb
xchg
lock
xchg
addr16
cmp
mov
pop
shrb
test
sti
ljmp
bound
add
sbb
mov
xor
rorb
xorb
dec
aad
ss
xchg
dec
andl
out
push
and
addb
xlat
push
mov
sti
int3
sub
fldenv
adc
push
ret
add
fistps
test
add
repnz
jo
pop
xchg
test
daa
xor
ljmp
lea
ret
mov
ficomps
inc
xor
fstps
mov
push
loope
mov
sub
loope
sbb
dec
out
mov
sahf
test
inc
jecxz
adcl
sbb
xchg
outsb
add
jbe
sub
and
insb
xchg
cmpl
outsl
and
inc
jmp
dec
jbe
aaa
and
loop
out
lock
mov
push
mov
inc
lock
daa
lods
push
pop
sbb
ret
dec
add
fs
into
stos
addb
out
mov
xchg
popa
inc
cs
js
pusha
mov
cmp
push
jp
add
dec
inc
sub
adc
jnp
mov
outsl
jg
cmpsb
fcoml
lds
movsb
mov
mov
sub
pushf
sbb
shrb
sub
jo
and
arpl
insb
mov
shlb
pop
add
imul
lds
insl
icebp
shll
js
aam
adc
lcall
outsl
cld
not
inc
xchg
xor
adc
push
in
adc
mov
movsb
push
hlt
cmp
in
cmp
int3
cltd
jg
xchg
leave
or
or
adc
out
adc
xchg
sbb
sbb
cmp
imul
lahf
push
lea
jle
push
xor
or
mov
rclb
adc
hlt
pop
jne
inc
repz
cmpsl
je
pop
loope
mov
rcll
mov
loopne
mov
scas
cmpsb
fwait
rcl
scas
adc
inc
pop
mov
jo
inc
pop
in
inc
cmp
std
jmp
movsl
xor
test
fs
sub
jge
addr16
mov
mov
pop
sbb
incb
lods
stos
mov
pop
pushf
mov
out
out
adc
push
pop
dec
sub
mov
popa
xchg
mov
test
ja
push
pop
push
in
insl
movsl
push
or
scas
adc
pop
dec
sub
je
add
std
push
pushf
aam
sub
sbbl
and
cltd
xchg
cli
inc
lods
sub
mov
xchg
sbb
or
loopne
push
or
pop
aam
imull
lods
das
nop
pushf
inc
testb
and
jmp
mov
addr16
pop
push
add
mov
lock
and
dec
int
pop
push
rcrl
or
pop
jae
dec
sub
jmp
and
cmc
aad
sbb
jl
jns
inc
cmp
popa
inc
xor
sbbl
jb
push
or
inc
arpl
inc
push
sti
loopne
out
test
push
sar
push
arpl
pop
repnz
add
faddl
sub
pop
popa
mov
sub
inc
jno
cwtl
push
outsl
jl
out
sti
test
cmp
cltd
lret
out
jne
sbb
out
popa
insb
push
jo
adc
sbb
adc
loope
pusha
sbb
bts
daa
add
or
xor
push
dec
ret
pop
roll
and
jle
mov
xchg
jae
popf
jo
cmpsb
sbb
loope
sub
cmpsb
or
fsubrl
xchg
sub
sbb
mov
aam
push
fildll
jle
push
sbb
arpl
in
jno
ret
sub
sub
mov
pop
push
and
ret
mov
jle
shr
add
cltd
fsubl
mov
and
mov
cwtl
cmpsl
pushf
movsl
inc
lock
insb
lods
lcall
xchg
mov
xchg
push
sbb
pop
add
and
leave
mov
and
and
lods
mov
and
leave
int
inc
lods
pop
or
movsb
insb
iret
icebp
stos
and
inc
or
sbb
cmp
cmp
ja
test
jae
jno
push
pop
pop
adc
or
test
xor
test
in
mov
fldt
dec
sahf
aas
pop
sbb
in
mov
add
cmp
shll
insb
in
pop
mov
rol
inc
push
mov
mov
rclb
mov
aaa
ja
jecxz
or
idivl
mov
in
and
in
in
fcoms
push
cli
xor
mov
cmpb
in
jnp
js
push
push
movsl
jo
sub
shll
mov
fdivrl
sub
or
add
xchg
add
fdivrp
mov
mov
xchg
inc
cmpsb
inc
imul
inc
sbb
je
push
or
stc
cmpsb
xchg
test
jecxz
pop
xchg
mov
aam
test
sarl
fwait
add
xor
pop
scas
bnd
mov
push
in
push
pop
jmp
insl
pusha
lret
mov
mov
pop
add
inc
movsl
sbb
mov
ficomps
dec
push
cs
dec
mov
xchg
outsb
dec
roll
lahf
sahf
loop
mov
icebp
mov
loope
mov
fimull
adc
cld
lea
sti
aad
icebp
insl
movsl
test
addl
notb
lahf
leave
inc
xchg
cltd
mov
mov
mov
call
jo
int
or
pop
push
fnstsw
sbb
ja
insb
mov
pop
pop
aaa
mov
sbb
add
sbb
lods
jle
in
out
mov
xchg
sub
xor
jmp
and
cmpsl
repz
push
inc
in
sub
xor
mov
jns
loopne
mov
xor
popf
test
or
sub
mov
mov
xorb
aas
popf
jle
lds
loope
adc
push
popf
outsl
xor
or
adc
fstps
push
pop
xlat
cmp
adc
dec
mov
inc
xchg
push
ret
shlb
mov
gs
in
mov
and
or
dec
sbb
jecxz
mov
sbb
aas
cli
outsb
push
ljmp
dec
lds
arpl
mov
mov
cmpsl
mov
aam
icebp
sub
adc
push
ljmp
clc
push
bswap
repz
enter
test
jno
mov
enter
nop
adc
inc
stos
mov
loopne
adc
mov
pop
mov
shrl
pop
aaa
fs
repz
leave
sub
jle
pusha
mov
in
arpl
xchg
fcmovbe
jns
loopne
xchg
pop
fninit
int
incl
dec
cltd
and
jnp
lea
aad
repz
sub
shr
jge
add
int3
aad
xor
add
icebp
sbb
dec
push
sbb
mov
adc
xor
jg
or
and
sbb
pop
mov
movsb
rorb
repnz
sbb
adc
cmpsl
push
push
outsl
xchg
mov
and
mov
mov
in
cmp
stos
mov
icebp
loopne
adc
lret
mov
xor
and
out
int
cmp
rolb
enter
cmpsl
jns
cld
cltd
or
push
xchg
cli
xor
ffreep
stos
push
jo
or
jge
and
and
stos
scas
shlb
dec
lock
icebp
mov
cmp
mov
mov
test
sbb
in
leave
jp
pop
addr16
and
cmp
pop
int
pop
pushf
adc
outsb
clc
rcrb
cmp
int
jmp
mov
in
mov
addl
cmp
ljmp
xchg
mov
loope
mov
cmp
dec
push
out
xchg
xor
jae
aas
lods
jecxz
jno
add
jns
dec
pop
pop
xchg
jae
xchg
xchg
dec
lods
push
jg
fcomps
or
and
adc
and
cwtl
lea
lods
cwtl
jle
dec
cli
adc
lcall
jecxz
inc
push
cmp
push
aaa
cmpsl
mov
dec
sub
or
sti
scas
xor
sbb
dec
xor
xchg
out
jmp
and
push
adc
dec
leave
sub
mov
test
push
pop
adc
jae
inc
dec
jge
mov
insb
sub
push
inc
mov
and
aaa
add
std
cli
adc
push
mov
add
fwait
inc
mov
push
sbb
out
add
cmp
insl
fsubrs
insl
call
sub
fsubrs
mov
dec
ds
xchg
es
int
lret
dec
sub
insl
and
pop
imul
orl
add
fistpll
xor
add
cmpb
fcom
sbb
testl
inc
ret
mov
mov
sti
clc
and
pop
scas
pop
jge
outsb
mov
mov
dec
fstcw
xchg
shr
lds
pop
xchg
jo
ret
jno
sub
pusha
jae
stos
add
adc
dec
lret
loopne
push
aaa
mov
aas
ss
jge
cmp
or
aad
jbe
test
or
cli
add
in
xor
rolb
xchg
sub
sbb
add
pop
hlt
int3
scas
sbb
mov
pop
dec
push
pop
and
lcall
shll
ret
decb
lods
fstl
xor
xchg
pop
pop
inc
pop
ret
dec
popf
sub
aas
push
sbb
dec
or
mov
sahf
and
jbe
lret
in
cmpsl
lret
iret
sbb
iret
insb
inc
or
aam
dec
jl
pop
mov
inc
cmp
mov
mov
cmp
loop
aad
ja
jp
xchg
mov
or
movsl
rclb
lods
je
enter
stos
cmp
inc
cmc
test
addr16
pusha
adc
ret
clc
es
push
push
push
arpl
in
dec
popf
int3
and
cwtl
mov
je
or
adc
jmp
mov
lret
iret
and
in
fwait
cmp
mov
aad
in
inc
mov
adc
sub
call
jge
movsb
adc
dec
jno
pop
dec
nop
ja
sar
ret
jne
outsb
jne
mov
int3
xchg
movsb
or
pop
out
or
aad
or
pop
stos
ds
dec
cwtl
faddp
mov
icebp
les
mov
cmpsl
popf
cmp
jg
mov
rolb
pop
cmp
stos
test
or
pop
rcl
pop
jno
loope
sbb
cltd
push
add
or
ljmp
out
mov
les
hlt
mov
test
ljmp
into
dec
ret
sub
jmp
sub
adc
inc
inc
dec
and
cltd
mov
and
movsb
dec
push
bound
filds
sarl
andl
imul
loop
enter
dec
cmp
imul
sarb
sbb
xor
hlt
jmp
lods
pop
lret
push
cmp
jo
scas
es
sbb
rorb
pop
icebp
pop
push
cmp
cmp
stos
push
sbb
xchg
mov
mov
cmp
sti
jmp
imul
nop
mov
dec
hlt
insl
and
adc
call
push
scas
xchg
out
cmp
xor
clc
pop
sub
incb
cmp
push
mov
cmp
outsb
mov
pop
add
pop
and
jecxz
pop
dec
dec
lahf
aaa
fs
cs
jp
add
mov
jo
test
dec
mov
das
mov
ds
inc
loope
add
sbb
mov
adc
and
aaa
dec
jns
push
jl,pt
xchg
rolb
adc
cmp
fstp
pushf
mov
pop
fldcw
daa
xchg
dec
movsl
and
test
in
frstor
fidivl
and
adc
xchg
unpcklps
subb
mov
sbb
dec
mov
iret
outsl
insl
sti
gs
jns
cmpsl
std
xor
adc
sbb
fadds
cmpsl
sti
scas
and
outsl
cmc
stos
jnp
imul
xchg
push
mov
movsl
test
lahf
addb
std
insb
outsl
xor
sub
in
pop
cmp
cli
xor
ss
xchg
adc
jle
insb
adc
inc
cwtl
ret
je
lock
xor
cli
and
xor
in
mov
cmpl
mov
adc
fstpl
loope
and
pop
mov
arpl
mov
inc
dec
add
divl
into
sahf
cmp
lahf
push
pushf
adc
imul
mov
repz
lret
lods
mov
lods
or
lahf
xor
jg
cmc
nop
push
sub
nop
or
nopl
subl
jl
pop
push
rclb
xor
movsl
mov
push
push
cmp
ljmp
out
jno
movsl
cmpsb
in
pusha
push
stos
cmp
pop
ret
sub
in
push
add
and
or
or
test
jb
rclb
add
fldcw
sub
outsb
sub
pop
jle
pop
mov
and
test
jmp
mov
mov
jns
adc
inc
cmp
loope
sbb
cmpsl
adc
das
add
loopne
and
and
mov
sub
es
mov
imul
loopne
cmp
aas
shll
jmp
cmpsb
add
loopne
mov
iret
lcall
test
mov
mov
stos
mov
popf
mov
add
pop
test
adc
xchg
loopne
inc
sub
add
es
stos
into
repz
sub
insb
or
jle
sub
lret
inc
pop
into
inc
xchg
lea
std
fstl
xchg
out
inc
sti
push
cmc
or
inc
movsb
lods
insl
enter
ds
in
lods
fdiv
pop
xor
ja
lret
jle
cmp
out
cmp
sub
inc
dec
call
jns
xor
out
push
aaa
faddp
dec
xchg
out
mov
fcmovne
mov
aad
dec
jge
loopne
dec
mov
mov
pop
lahf
shlb
add
mov
cmpsb
mov
out
notl
iret
fnsetpm(287
xlat
inc
test
dec
rorl
ljmp
cwtl
cmp
xor
xlat
cmp
sti
aas
jb
xchg
dec
fldcw
adc
lret
out
pop
push
push
push
out
mov
lods
mov
and
adc
inc
aam
in
loop
push
add
or
xor
dec
aam
jb
clc
lret
inc
rep
fidivl
inc
sbbb
loop
ss
stc
inc
mov
sub
sbb
mov
jp
jmp
jg
ss
repz
inc
and
xchg
xchg
or
fisttpll
jge
xchg
fbstp
mov
loopne
xchg
pop
pop
dec
jmp
jle
aad
pop
and
pop
repnz
pusha
movsb
das
fwait
cwtl
dec
push
shrb
xorb
shrb
scas
imul
sarl
ds
out
add
jp
and
popa
lret
lret
mov
and
mov
cmc
xchg
fstps
cwtl
inc
push
cmpsb
sbb
int3
inc
jmp
or
loopne
out
rorb
cld
xor
cs
cmp
pop
loopne
gs
ret
pushf
push
and
pop
mov
nop
jb
outsl
mov
andb
push
sub
inc
cmp
data16
add
cs
int
lds
mov
flds
push
pop
xor
hlt
loopne
push
rcrb
adcb
test
std
mov
push
ss
std
cmp
mov
sbb
and
mov
pop
push
mov
sub
scas
inc
and
loop
or
jne
jge
jne
test
rolb
pop
pusha
outsl
xorb
stos
xor
sub
push
pushf
xchg
lds
ja
cmp
adc
pop
sbb
or
dec
int3
xchg
pop
push
pop
scas
cwtl
xchg
or
data16
fldt
pop
inc
cmp
push
stos
test
test
cld
in
fbld
jb
outsb
add
xchg
push
lcall
mov
dec
insb
push
mov
push
jb
mov
data16
mov
push
inc
test
enter
jbe
push
mov
sub
xor
xchg
xor
ljmp
repnz
movsb
insb
inc
mov
mov
mov
xchg
push
or
stos
cld
fdivr
in
and
ror
movsb
mov
adc
push
test
test
addl
cmpsl
dec
cmp
sti
mov
push
test
cmp
sub
push
loopne
mov
mov
out
lods
rcr
jp
fsubrl
popf
data16
es
sbb
sbb
jo
aam
test
lods
imul
in
lods
mov
mov
jl
jbe
es
cmpsb
push
adc
repnz
cli
fcmovnbe
inc
aas
in
bound
sbb
push
push
mov
sub
and
jg
mov
sbb
xchg
inc
adc
mov
xchg
pop
add
inc
out
or
call
lods
jmp
insb
loope
inc
xor
xchg
gs
fs
jge
pop
enter
or
and
cmpsb
and
loop
fsts
incb
lret
mov
xchg
js
cmp
test
jae
inc
jp
es
cmpsl
or
loopne
fs
inc
push
mov
repz
test
in
sbb
dec
jp
pop
fwait
pop
in
mov
xor
sbb
shll
pop
or
push
rcrb
and
and
cmp
sysenter
out
adc
cli
in
add
lea
fs
cli
dec
pop
pop
mov
in
jb
dec
fs
inc
cmp
pop
loope
sub
push
mov
cmc
orl
scas
pop
out
ss
adcb
iret
notb
andl
mov
mov
lcall
adc
push
jp
sar
xlat
out
and
out
out
outsl
or
mov
xor
loop
aas
add
mov
pop
dec
mov
out
inc
push
pop
cmp
adc
mov
adc
adc
andb
scas
loopne
fidivrl
and
or
push
and
push
sbb
jns
test
jno
std
xchg
mov
add
push
mov
lret
mov
pushf
push
mov
mov
add
stos
mov
xchg
pusha
add
ja
stos
sub
out
rorb
test
pop
pusha
add
or
aaa
mov
mov
xchg
pmulhuw
jecxz
addb
adc
lcall
pop
lahf
xchg
pop
lods
test
mov
inc
pop
adc
das
leave
movsl
aad
and
and
in
fldl
mov
pop
stc
sbb
mov
xchg
mov
fsubr
sbb
stos
and
xchg
xor
leave
jb
loop
mov
aaa
ficomps
pop
lret
in
jmp
push
push
add
cwtl
push
inc
ljmp
in
es
or
cmp
mov
or
loope
xor
lock
dec
dec
lods
xor
and
xchg
int3
popf
out
pusha
cmp
fsubl
push
jge
sub
jb
mov
push
lcall
out
jl
fcomip
aam
in
dec
jp
popf
push
lcall
jecxz
xchg
insl
aaa
push
jg
xchg
add
cmp
adc
out
addr16
lods
test
loope
pusha
mov
mov
inc
adc
je
xor
mov
pop
add
scas
add
push
jae
bound
add
cwtl
stos
push
xor
cmc
xor
xorl
je
mov
pop
cmp
cld
xor
xchg
xchg
xor
in
cmp
aad
or
xor
push
mov
scas
pop
movsl
mov
test
int
fbstp
aaa
xor
out
mov
xor
pop
sub
cli
fiadds
cmp
inc
pop
inc
or
test
sub
dec
mov
sub
jns
cmpsl
dec
mov
dec
jbe
rcrb
push
stc
mov
filds
lcall
sbb
cli
sarb
outsl
fcomp
sahf
and
cli
sbb
inc
aam
shlb
ret
lahf
ret
leave
mov
jns
jns
jle
cmp
xor
add
adc
sbb
adc
in
jmp
loop
daa
adc
and
push
xor
mov
test
mov
fdivrp
jp
dec
mov
leave
data16
shlb
cmp
fsub
cmpsb
push
fwait
dec
std
cmp
dec
fs
adcl
aad
dec
jbe
mov
lret
loop
add
ljmp
aam
xor
jb
inc
add
inc
xchg
adc
xor
jp
push
adc
jle
and
xor
pop
mov
jno
repz
in
jge
std
mov
subl
push
ja
out
pop
push
fnstsw
add
std
out
adc
push
inc
mov
adc
cmpsl
dec
jbe
lods
pop
push
add
push
inc
and
jnp
movzwl
push
popa
mov
xchg
lea
or
mov
dec
lahf
inc
or
stos
call
push
add
inc
pop
jnp
sub
mov
ss
push
mov
add
dec
sub
push
pop
mov
mov
dec
and
xor
inc
push
in
jo
lods
fs
call
pop
add
call
shll
cltd
daa
adc
cmp
dec
movsb
into
adc
mov
aad
xor
cmp
and
les
adc
xor
cwtl
cmp
fucomip
loope
aaa
das
jne
stos
sbb
or
inc
sub
ret
cmpsl
fidivs
lds
mov
sbb
lock
inc
add
jmp
push
pop
movsl
lods
xchg
sar
push
pop
out
or
arpl
mov
add
cmc
push
popa
in
xchg
nop
xchg
out
mov
lock
pusha
sub
andl
loopne
jne
test
jb
clc
fdivrs
cwtl
imul
add
sub
enter
mov
add
iret
cmpsb
insl
and
or
clc
push
in
jge
push
jno
mov
call
je
lahf
xor
insb
sbb
div
inc
xor
lret
outsb
xor
jae
shll
movsl
inc
xchg
jge
push
cwtl
leave
sub
stos
rcrl
js
into
ret
andb
xor
or
lods
fcmove
cmp
pop
shll
xchg
xchg
adc
jp
ja
aam
es
aaa
mov
pop
out
and
lods
pop
mov
mov
add
jge
mov
iret
movsb
mov
inc
repnz
mov
in
pop
xor
arpl
inc
lcall
stos
xchg
pop
in
ss
mov
movsb
add
push
cld
cmpsl
mov
lea
movsl
out
mov
pop
mov
push
xchg
push
or
mov
pop
pop
in
mov
cld
mov
add
fdivr
jecxz
pop
or
gs
jecxz
arpl
jne
adc
scas
push
idivb
sbb
icebp
out
jnp
rorl
cwtl
ret
bound
iret
xchg
lret
adc
loopne
insb
mov
cli
sub
add
xchg
lret
dec
std
xchg
xchg
mov
pushf
xor
and
testb
fdiv
ret
mov
movsb
jge,pn
lds
push
addr16
mov
xchg
imul
imul
or
scas
pop
xchg
xor
pop
insb
aaa
scas
imul
mov
shlb
xchg
aaa
adc
out
xchg
sub
jmp
imul
or
mov
ret
cmpsl
mov
out
test
pop
fidivrl
push
std
loopne
mov
dec
inc
test
repz
sti
mov
sub
fdivs
gs
push
imul
jno
clc
outsb
mov
je
inc
les
xchg
push
js,pt
mov
xchg
cmc
add
push
pop
push
pop
add
mov
sbb
cs
imul
xchg
sub
sarb
fs
pop
lods
scas
or
mov
test
test
jo
xchg
pop
repz
aaa
push
call
inc
fisubs
xor
clc
nop
ds
out
push
cwtl
pop
call
dec
xchg
les
dec
jmp
insb
add
ja
xor
sarb
inc
out
pop
imul
mov
hlt
lcall
aas
pop
push
test
mov
mov
mov
stc
std
negl
sbb
push
movsb
enter
ljmp
xchg
push
mov
pop
stos
sbb
mov
es
and
xchg
adc
xchg
jle
rcrb
lea
sbb
mov
cmp
test
inc
aas
and
shrl
mov
pop
notb
mov
dec
and
push
jp
les
daa
mov
shrb
repnz
add
sub
mov
xor
cltd
pusha
jb
dec
cmp
out
dec
sub
mov
mov
ret
ljmp
add
int
movsb
enter
ret
in
dec
jno
mov
mov
pop
iret
sub
sub
cli
add
push
js
mov
pop
insb
and
push
dec
sti
pop
cmp
xchg
lcall
outsb
adc
adc
lock
sub
clc
cli
jecxz
jle
bound
push
sub
lcall
sbbl
push
add
xor
cmpsb
scas
fistps
shll
es
mov
mov
or
push
xchg
sbb
add
les
cld
fs
imulb
rorb
mov
cmp
hlt
pop
dec
lds
arpl
mov
push
loopne
shlb
or
scas
mov
jl
pop
and
jns
mov
push
cmp
arpl
fbstp
pop
mov
mov
mov
ljmp
dec
xchg
push
or
push
pop
mov
cmp
push
pop
sbb
sbb
pop
pop
lcall
dec
das
lods
pop
xchg
and
xchg
loope
dec
mov
dec
cmp
arpl
stos
jmp
mov
pop
mov
sbb
lcall
and
mov
xor
pop
mulb
in
insb
fidivrs
or
add
dec
mov
aam
and
xchg
dec
add
dec
popa
pop
cmpsb
int3
and
cmp
loop
jo
ficompl
pop
ret
and
xchg
xor
add
jne
repz
jle
mov
xor
imul
mov
in
int3
scas
and
sub
jne
cli
lcall
inc
pop
cmpsb
xlat
and
adc
rorb
mov
pop
popa
mov
mov
cmp
int3
mov
inc
push
daa
sbb
lods
js
in
int
jo
lret
pop
fisttpll
repz
aaa
sub
int
or
push
addl
cmp
orl
adc
pop
cltd
jae
xchg
fstps
icebp
jnp
jno
xor
jg
outsb
adc
pop
int3
jmp
cltd
dec
es
push
aam
and
lea
aam
test
std
movsl
cwtl
jbe
andl
xchg
in
in
loope
jnp
adc
mov
pop
fldl
xchg
push
xchg
fcoms
pop
fistl
cmp
mov
mov
sbbb
ret
pop
push
lret
loope
pop
push
cwtl
inc
ficoms
jp
icebp
mov
sbb
mov
inc
pop
loope
mov
pop
dec
addb
stos
cmp
in
popf
mov
sahf
insl
sarl
pop
inc
mov
dec
mov
shll
push
dec
sbb
int
lods
lea
inc
add
cli
push
fsubrs
sub
push
mov
pop
cli
sbb
cwtl
sub
push
cmp
xchg
jbe
xor
xchg
mov
inc
cld
sbb
push
lcall
or
aas
ljmp
cld
xchg
sub
out
xchg
inc
insb
add
push
fsubrl
mov
je
imul
xchg
scas
lock
xlat
jmp
inc
or
adc
loop
dec
daa
bswap
out
and
loop
imul
ljmp
jmp
cmc
testl
dec
or
movsl
add
jp
mov
pop
stos
mov
mov
adc
sbb
out
push
adc
pop
and
adc
bound
int
movsb
xor
xor
roll
fs
push
sub
std
insb
mov
push
std
les
pop
jb
push
push
xor
sbb
js
xor
jl
mov
mov
pop
pop
nop
and
in
adc
xchg
mov
imul
ss
sahf
mov
cmpsl
dec
lea
sub
xchg
xlat
dec
aas
mov
aad
cmp
push
and
in
es
jne
cld
lods
aam
loope
in
shll
mov
std
sub
sti
jo
sub
sub
sbb
pushf
mov
rcrl
scas
in
mov
adc
lahf
mov
mov
add
push
leave
in
cli
pop
shl
cmp
cltd
mov
cmc
xchg
rclb
adc
or
push
add
xchg
push
jb
jl
mov
inc
bound
outsb
lods
out
lcall
out
xchg
pop
lret
outsl
cmc
jp
outsl
js
repnz
icebp
mov
xor
cld
cmp
mov
jo
jne
mov
stos
xchg
xchg
inc
daa
in
out
lret
sbb
gs
push
add
in
xchg
data16
int
lock
push
sbb
cli
xor
insl
add
orb
mov
sti
push
loopne
popf
mov
xlat
push
out
out
pop
mov
bound
cltd
or
pop
adc
iret
mov
pop
loope
in
jmp
int3
mov
cmp
int
mov
sbb
jmp
fildl
sbb
xor
mov
ja
mov
adc
adcb
pop
mov
cld
or
pop
mov
dec
das
lret
pop
add
pop
and
fistpl
xchg
or
stos
jl
jae
add
mov
aad
push
xor
or
bswap
cmc
inc
pop
aam
outsb
std
stc
test
xor
pop
ljmp
mov
cmp
xchg
and
jne
rcr
adc
pop
test
sub
enter
cwtl
aaa
jb
idivl
sub
push
ret
lods
sbb
xchg
cmp
pop
sub
or
xor
cli
and
jmp
int
insl
cli
mov
mov
js
imul
loop
cmp
xchg
lret
mov
leave
add
mov
jge
or
loope
jg
add
subb
pop
dec
inc
movb
dec
imul
leave
rorl
lcall
jb
lahf
xchg
push
push
in
call
xor
push
lret
mov
fildll
testb
ds
dec
jno
es
rcll
inc
sub
pop
repnz
leave
and
sub
dec
in
test
fidivl
cltd
loop
sbb
jns
shr
xchg
dec
dec
mov
jp
mov
and
addr16
dec
inc
hlt
popa
out
mov
fwait
dec
movsb
out
je
sbb
mov
stos
fsubs
mov
rorl
dec
fstl
repz
fsts
inc
cmc
loope
daa
sbb
jo
mov
sbb
cld
lds
sub
xchg
fwait
jge
cmp
mov
fwait
cld
mov
adc
jns
cmp
je
mov
call
nop
jb
dec
mov
pop
je
jmp
inc
mov
mov
ret
ljmp
adc
imul
jg
mov
lods
aad
jge
mov
sti
lret
dec
fucomip
gs
test
aaa
mov
push
inc
data16
push
pop
or
repz
add
and
insl
frstor
movsl
jecxz
mov
ret
adc
add
sbbl
inc
mov
pop
jnp
jmp
xor
jo
in
mov
test
push
dec
fldcw
xor
hlt
pop
mov
sbb
hlt
popa
mov
adc
mov
xor
fwait
push
test
aaa
jb
clc
cmp
vshufps
sub
fidivl
cmp
mov
outsl
or
dec
cmp
cmp
mov
enter
int3
aam
aaa
sub
stos
aas
pop
xchg
cltd
mov
movsb
dec
mov
inc
adc
and
daa
xor
adc
outsl
dec
ror
xlat
or
push
sbb
in
clc
mov
cmpsb
ret
hlt
out
aad
push
push
out
xor
cmpsl
adc
rolb
ja
xchg
jns
xor
cmp
push
jbe
call
mov
lret
pop
les
mov
mov
add
sbb
cmp
scas
js
popa
out
push
fwait
lcall
lods
sbb
aam
stc
mov
sbb
sub
das
addr16
fldenv
add
scas
sub
or
mov
cmp
sub
int3
and
sub
adc
stc
inc
jmp
ljmp
sarl
cmp
pop
scas
shll
roll
or
adc
cltd
inc
in
test
xchg
push
or
pop
out
mov
outsl
insb
ja
pop
je
ljmp
jecxz
sub
sbb
xchg
adc
sub
mov
xchg
jo
push
decl
aam
shr
xchg
sub
adc
jno
pusha
pop
out
pusha
mov
inc
pop
sub
insl
lret
and
rcll
test
ljmp
ret
adc
cs
add
fsubl
outsl
es
dec
rep
add
xor
adcl
xor
shlb
xor
imul
add
push
jns
ja
and
cwtl
dec
jmp
xchg
lods
pop
stos
xor
insl
fwait
cmpsb
mov
xor
sbb
je
test
fistpl
xchg
sub
mov
insb
js
nop
or
addr16
mov
ss
cmpsl
arpl
test
out
nop
lock
loop
lret
pop
test
or
xor
lahf
test
push
mov
xchg
xchg
push
jne
jbe
mov
ljmp
das
sbb
mov
testl
test
scas
add
sub
jbe
daa
pusha
jmp
cmpsl
mov
bound
andb
std
cmp
jmp
fldl
lods
stc
rcll
and
push
pushf
sti
mov
rol
sbb
sbb
fsubl
pushf
popf
fcmovnbe
idivl
stc
xor
xlat
mov
jg
test
inc
jae
lret
push
sub
cwtl
add
dec
popa
push
fcomip
jl
popf
cmp
mov
jbe
imul
and
adc
push
fwait
pop
in
mov
ss
jnp
imul
loopne
pop
lret
add
push
test
lock
fs
pop
addl
mov
jp
loope
insl
mov
sub
sbb
xchg
push
test
mov
jbe
dec
mov
std
sar
mov
cs
add
xchg
xchg
push
and
in
fldl
xor
adc
movsl
dec
hlt
cwtl
dec
inc
push
cmp
xchg
xor
push
push
imulb
add
ficompl
mov
jno
iret
jo
pop
mov
divb
adc
jne,pn
mov
mov
dec
xor
test
push
or
sahf
sbb
ret
out
stos
orb
shrl
jb
test
mov
fwait
xor
lcall
fldenv
mov
sarl
loope
mov
mov
ja
inc
in
sbb
mov
xor
fcomip
dec
mov
xchg
push
push
int
xchg
xchg
ret
je
mov
les
or
loope
ja
jno
clc
inc
mov
jb
dec
aas
xchg
adc
cmpsb
or
cmp
xchg
jl
scas
ret
imull
dec
pop
mov
mov
mov
inc
fs
mov
adc
cmp
sbb
insb
js
sub
xchg
cvtdq2ps
cmpsb
roll
fdivl
rcr
inc
sub
les
sub
insl
mov
aas
jne
lret
sbb
sbb
mov
lods
add
inc
pop
pop
sub
mov
movsl
mov
adc
inc
mov
mov
push
inc
test
sub
jns
test
xor
aas
fldcw
mov
and
cltd
ret
setne
arpl
push
xor
popw
jp
dec
js
mov
cli
add
repz
or
ja
mov
sbb
sub
into
fsubp
test
mov
pop
xchg
out
insb
insl
mov
fisubs
cmc
arpl
fistl
or
or
popa
pop
frstor
dec
insb
and
rcll
inc
xchg
ret
mov
in
rcll
jge
aam
or
notl
jmp
loopne
push
outsb
and
js
aad
lea
das
mov
inc
pmaxsw
data16
sarb
sbb
pusha
dec
sub
aaa
xor
ds
in
sahf
out
mov
or
sti
loopne
pop
jl
add
mov
in
xor
cltd
mov
or
ja
sbb
or
pop
fadds
mov
lock
xor
pop
push
mov
gs
jle
jo
mov
in
sub
pop
and
and
mov
idivb
mov
or
pop
pop
addr16
xor
dec
pop
daa
mov
push
inc
and
push
xor
sbb
int
mov
cld
lret
lret
imul
mov
push
push
adc
popa
jb
or
scas
pop
push
dec
mov
out
jecxz
jl
mov
les
clc
les
push
xchg
rcr
dec
xor
push
cmpsb
dec
inc
push
adc
and
sub
mov
dec
test
or
popf
lret
push
and
cltd
mov
hlt
dec
xchg
outsb
dec
pop
in
mov
pop
xchg
dec
and
cltd
mov
imul
dec
or
mov
aam
xchg
pop
addl
mov
or
push
mov
dec
cmpb
cmpsl
int
rclb
repnz
test
dec
pop
mov
sbb
fidivl
mov
out
sub
ret
mov
mov
mov
outsl
inc
mov
lock
insl
scas
sub
jne
aas
sbb
test
hlt
fcmovnbe
bsr
jbe
xchg
mov
xor
cmpsb
inc
sbb
mov
push
mov
add
mov
mov
pop
or
movsl
shll
push
out
lret
push
nop
mov
push
jle
jo
in
loop
pop
sub
and
mov
stos
xor
cmp
loopne
or
cmp
shll
cld
and
test
push
xor
call
shr
pop
pushf
mov
movsl
mov
mov
mov
push
int
sub
jmp
movsl
fildl
adcb
sbb
inc
jle
out
and
jne
lcall
decl
mov
sub
xchg
aad
dec
in
neg
das
pusha
dec
iret
adc
cwtl
inc
insl
push
test
test
jo
fnstenv
fstps
ret
cmp
negl
fwait
push
int
sbb
es
lahf
push
or
cmp
in
gs
sti
inc
loop
test
ret
ret
imul
data16
leave
push
sahf
mov
rorl
lea
repz
cmpsb
push
outsb
and
dec
mov
lock
stos
sub
push
lret
add
jl
pushf
xchg
sahf
adc
insl
icebp
pop
xchg
testl
aam
pop
cli
pushf
std
call
imul
pop
addr16
sahf
jb
or
fistpll
repnz
xor
pop
out
jbe
xchg
sub
cmp
cmp
adc
addr16
push
mov
pop
stc
pop
gs
clc
xchg
scas
sarb
push
cmpsb
jbe
sbb
or
jne
mov
jne,pn
pop
push
sub
cmc
push
lret
mov
push
lcall
sbb
sbb
stc
sahf
fs
in
pop
icebp
jnp
outsb
arpl
fisubrs
nop
xor
insb
ror
shll
fwait
pop
cltd
call
xchg
and
hlt
cmpsl
loope
and
sbb
xor
xchg
pop
mov
test
xor
sub
inc
dec
adc
xchg
icebp
sub
sbb
jle
dec
sbb
mov
sub
add
dec
mov
lret
mov
push
lret
jg
xchg
inc
popf
cmp
push
aaa
mov
xor
xchg
mov
jl
push
ficoms
mov
faddp
int
out
pop
movsb
mov
daa
add
or
add
and
into
mov
notb
adc
iret
mov
mov
into
push
test
push
cmpsb
push
and
sbb
loope
rcrl
loope
test
mov
iret
test
inc
and
mov
adc
or
xor
popa
add
in
lds
xor
cmp
pop
mov
mov
jns
mov
mov
test
ret
mov
sarb
ret
adc
leave
cmpsl
repz
iret
ret
rorb
mov
mov
std
mov
lods
push
pop
aad
popf
jnp
lods
popa
out
lea
or
add
push
jp
lds
popf
mov
scas
xchg
out
sub
fldenv
lahf
jne
sbb
daa
lcall
pop
sbb
jbe
adc
rcrl
sbb
scas
add
sub
jp
inc
cmp
int3
xchg
or
cld
pop
push
and
cs
call
xor
or
mov
push
pause
jbe
pop
mov
mov
and
and
lcall
cwtl
jmp
push
xchg
out
cmc
xchg
ficoml
clc
and
sub
shrl
adc
fisubl
mov
add
cmpsb
cmp
mov
inc
inc
pusha
jb
mov
inc
fidivl
enter
dec
push
mov
jo
sti
jae
push
sbb
pop
andl
das
cltd
mov
in
ja
out
and
pcmpeqd
imul
popl
push
xchg
stos
test
pusha
mov
mov
jge
in
push
pop
pop
pop
loopne
ret
lock
push
divb
test
std
cltd
pop
gs
subb
xor
inc
out
cmp
adc
out
ret
sub
rcrl
arpl
sub
fs
pop
dec
out
or
or
xor
aam
aam
mov
xlat
nop
pop
jae
and
bound
xchg
testl
ret
dec
fsts
xor
inc
push
xchg
pop
pop
sahf
sbb
lea
fsubl
xlat
mov
sbb
mov
insb
inc
stc
dec
and
lahf
mov
sbb
pop
fs
aaa
cli
scas
stos
mov
faddl
dec
push
mov
mov
fidivs
adc
mov
add
test
cmp
jge
stos
mov
sbb
test
or
jno
stos
jecxz
decl
cmpsl
mov
xor
scas
stc
movsl
xchg
imul
stc
or
jnp
sbb
andl
inc
test
xor
andb
push
jmp
cmpsb
test
leave
scas
jl
mov
testl
iret
lock
xchg
inc
jle
mov
dec
popa
enter
adc
pop
stc
pop
negl
or
fsub
or
mov
cmp
push
fmul
cmpsb
movsl
outsb
cld
cld
mov
mov
popf
jp
daa
movsl
mov
cmp
ds
rcrl
js
inc
loope
divb
andb
mov
jl
sarb
pop
addr16
leave
das
pop
dec
insb
xchg
lret
out
jmp
pop
mov
mov
negb
movsb
push
pop
loopne
ret
jae
cmpsl
sub
adc
mov
jno
push
clc
ja
fdivrp
sub
inc
pop
or
in
xchg
cltd
ficomps
add
mov
aaa
negl
call
inc
pop
movsb
sbb
push
mov
sbb
jle
loop
mov
shlb
hlt
stos
repz
cmp
and
ficompl
cmp
xor
in
inc
jg
sbb
popf
ljmp
mov
xor
insb
dec
sub
imul
cmp
stos
push
jp
mov
call
test
dec
inc
mov
rcrb
lods
cmp
fiaddl
nop
add
pop
push
dec
cmpsl
stos
pusha
imul
mov
clc
test
rorl
aas
data16
stos
aad
adc
in
jmp
mov
or
lods
dec
or
cmp
mov
add
sbb
xchg
test
ficompl
xchg
push
push
iret
mov
cld
jns
adc
xor
xor
orl
in
push
popf
insb
lds
xor
and
adc
fs
jno
jno
loopne
lcall
adc
stc
addr16
and
sub
add
sub
fcomip
popf
jno
mov
mov
mov
lods
inc
pop
lods
jg
enter
add
pop
inc
push
push
rorl
ss
cmp
ljmp
je
out
sub
mov
dec
xor
dec
in
sar
ja
push
push
jo
sbb
add
sbb
fimull
mov
not
mov
inc
mov
push
scas
mov
sbb
jge
gs
out
mov
rcll
out
andb
xor
repnz
in
in
sbb
sahf
sbb
or
jmp
out
xchg
in
xor
gs
aaa
mov
cltd
mov
lods
sbb
cmpb
stc
pushf
leave
out
je
test
bound
jae
insb
outsb
movsl
fistps
mov
adc
mov
stc
cmpsb
shrb
lret
cmpsb
xchg
mov
mull
xor
aaa
mov
gs
sahf
push
sbb
add
lcall
cmp
sub
cmp
icebp
cmp
push
jmp
ret
mov
fsubl
add
jo
pop
fcoml
and
pop
lds
inc
add
test
cmp
jnp
dec
jae
push
cmp
sbb
sub
add
imul
test
je
js
or
dec
bound
rcll
jecxz
loop
jmp
mov
std
fadds
xor
jge
loop
mov
pop
cmp
adc
mov
subl
cmp
jbe
jmp
fucomi
enter
and
lock
loop
and
inc
lods
inc
mov
ja
ds
mov
addl
dec
add
aaa
sahf
mulb
cmp
hlt
mov
cs
xchg
clc
std
cmc
xor
vmovd
sub
adc
mov
and
mov
subl
adc
imul
andl
jnp
push
es
cli
sbb
xchg
and
adc
cmp
scas
xor
fcmovbe
push
frstor
scas
enter
loop
mov
jnp
aaa
mov
fcom
mov
imul
or
jp
push
add
dec
pop
movsb
stc
and
sbb
mov
scas
push
inc
dec
cwtl
mov
and
roll
cwtl
sbb
push
arpl
and
sbb
out
add
sub
add
add
dec
adc
mov
sbb
pop
push
add
add
fwait
fwait
adc
push
jbe
add
aad
jg
cmp
xchg
les
pop
xor
or
les
ds
xor
iret
das
ss
cltd
xchg
ds
cld
orl
les
push
cld
test
call
cwtl
push
cmc
inc
popa
popa
push
cmp
pop
out
stos
fcompl
add
addl
fildl
cmp
mov
jno
cmp
enter
stos
fs
adc
mov
fs
std
jg
fwait
imul
fldenv
cmpsl
xlat
pop
cmc
aaa
test
push
frstor
mov
pop
lea
stc
mov
sbb
push
or
and
sbb
into
outsb
enter
test
shrl
lods
rcrl
hlt
fsubl
mov
adcb
sbb
pop
inc
dec
pop
xchg
aaa
dec
push
xchg
in
adc
shrb
loope
sub
xchg
loop
and
stos
mov
ret
jecxz
sub
jp
pop
into
ret
mov
inc
cltd
loop
lret
push
push
pop
xorb
in
bound
push
mov
cmp
repz
inc
aaa
iret
push
test
inc
es
lods
popa
cli
in
test
dec
ficoms
je
pop
arpl
xor
push
and
lahf
setbe
ljmp
jg
arpl
xchg
leave
or
fcos
adc
out
add
sbb
xchg
dec
std
scas
sbb
test
lock
sbb
push
push
xor
rclb
sub
mov
int
xor
js
out
push
jns
dec
enter
int3
sub
rcll
lahf
xor
mov
leave
mov
cmp
ljmp
xlat
inc
jbe
mov
jecxz
jl
fdivl
ja
inc
inc
outsb
fildll
fists
cmp
push
adc
and
pop
jo
pop
fs
or
xor
roll
fisttpl
push
sub
scas
cmp
andb
xchg
scas
fdivrl
adc
mov
jo
addb
dec
mulb
addr16
je
fsubr
dec
out
clc
fsubrl
in
push
mov
push
arpl
push
inc
int3
mov
pop
mov
sub
sbb
jmp
inc
mov
iret
loope
mov
jle
inc
xchg
nop
sub
in
gs
ds
cmp
xor
sub
fidivl
in
sarl
ds
rep
add
pop
shll
cmp
push
mov
dec
lds
lret
stos
loopne
enter
leave
cmp
jae
jecxz
jno
pop
pushf
or
xlat
xor
movsl
lods
out
jne
es
vpaddusb
adc
lock
inc
push
mov
imul
mov
or
cld
test
push
aaa
daa
scas
sub
mov
pop
addr16
push
test
jno
mov
mov
bound
mov
or
int
lcall
pop
push
xchg
sbb
ret
stos
in
das
ret
pop
push
lret
fs
popl
ror
insb
cmp
loop
shll
jns
push
out
and
mov
push
jecxz
push
add
sub
jl
or
cmc
movsb
test
dec
gs
std
mov
pusha
ror
sbb
and
cmp
andl
jmp
cwtl
jae
int3
inc
mov
add
shlb
add
or
lock
dec
mov
cltd
dec
sub
imul
mov
popf
clc
and
mov
test
cs
xor
pusha
call
lods
popf
sbb
stc
pop
fdivl
pop
call
mov
lret
or
pushf
hlt
fiadds
aas
clc
pusha
cmp
popf
clc
mov
js
pop
dec
inc
mov
xchg
add
mov
fidivrs
xchg
lods
sbb
jmp
pusha
push
add
stos
sbb
test
les
sbb
popf
sub
add
inc
js
xor
shr
stos
cmp
out
outsb
lods
in
add
es
ss
fidivrl
jo
stos
movsb
push
sahf
js
jbe
fldcw
sbb
cmp
out
push
add
push
pop
or
cmpl
xlat
dec
xchg
cmp
lcall
dec
pop
or
dec
stc
sbb
sub
dec
gs
int
inc
sub
mov
in
lea
sahf
out
sub
cmp
jmp
mov
pop
mov
mov
cmp
sub
mov
fsts
lock
sbb
mov
add
cwtl
testl
push
xchg
inc
add
sub
loop
mov
jg
test
pusha
ret
addr16
daa
jl
clc
mov
aas
xor
push
mov
sub
insl
or
lret
in
adcb
push
pop
es
pcmpeqb
push
loop
push
jg
jb
mov
add
jge
xor
insl
dec
mov
fnstenv
mov
sahf
das
inc
out
push
sbb
rcrb
sub
stos
mull
pop
in
fistpl
push
cmp
sub
cmp
cmp
in
xchg
add
mov
enter
cmpsb
stos
lods
push
add
les
xor
jg
xchg
loope
mov
mov
stc
imul
ljmp
mov
jp
jo
jae
lods
push
es
rolb
popf
mov
xchg
dec
or
or
shrl
movsl
push
xchg
repnz
mov
push
dec
ja
shll
xchg
pop
test
xor
push
mov
mov
out
add
lea
out
xlat
iret
cmp
aad
repz
pusha
clc
push
xor
out
add
fwait
addb
push
rorl
into
movl
mov
mov
jp
ds
cmc
imul
bound
xchg
cltd
cltd
rorb
sbb
mov
ljmp
ret
jno
jmp
dec
fdivl
outsl
mov
adc
test
jnp
fsubrl
mov
sets
pop
loopne
insl
add
push
enter
and
dec
cmp
test
pop
push
insl
jecxz
cmp
dec
or
adc
cltd
je
ss
jl
mov
cmpsb
repz
rolb
and
rcll
test
aam
jne
push
inc
pop
xor
pop
or
xchg
movsb
pop
fisttps
sbb
ror
jnp
aaa
cli
stc
filds
cs
push
stos
xchg
bound
out
xor
and
enter
ljmp
sbb
and
repz
mov
and
xor
das
xlat
or
divl
mov
mov
mov
int3
or
add
iret
push
adc
rolb
mov
pushf
pop
mov
iret
int3
dec
adc
sahf
outsl
mov
mov
test
pop
rcl
es
leave
dec
or
or
popa
nop
sbb
xor
or
aam
push
sti
int3
sub
test
movb
mov
mov
xchg
and
pop
aad
loope
adc
jl
xchg
loope
xchg
sti
xor
je
lods
lods
gs
aaa
cmp
shrl
test
out
sub
loop
sbb
ds
jbe
idivl
mov
sub
dec
fiadds
xorl
or
dec
pop
jns
xor
xor
psrld
push
test
or
mov
pop
into
sbb
dec
jmp
in
and
aaa
inc
sti
fsubs
ljmp
xchg
mov
or
mov
mov
int3
push
mov
gs
xlat
data16
inc
xchg
pusha
bound
loopne
frstor
lock
and
mov
rcr
xchg
pop
test
push
mov
fsts
fidivs
sub
in
mov
sti
and
les
pop
adc
push
xor
mov
mov
std
cmp
sbb
jns
xor
pop
repz
bound
in
mov
add
xchg
push
jae
cmp
loope
jnp
adcl
jecxz
cmpsl
mov
adc
loopne
andl
je
pop
sub
xchg
outsl
aas
add
lahf
or
xchg
mov
rcll
fdivrs
add
sbb
out
dec
inc
mov
dec
loopne
mov
int
inc
mov
xor
ljmp
xchg
out
in
hlt
lahf
mov
mov
mov
inc
push
std
pop
jo
inc
xchg
fimuls
pop
cwtl
cltd
repz
cmp
xchg
lret
je
xor
adc
cmp
mov
outsl
inc
or
repnz
mov
sbb
in
sbb
fwait
lods
cmpsb
push
arpl
movsb
shlb
cmp
out
xor
jmp
sbb
cltd
sub
sub
jmp
jno
mov
and
cmpsb
call
mov
out
push
or
fcmovnb
je
out
shrl
mov
aam
dec
shrl
lret
push
inc
aas
stc
lods
lcall
xor
mov
inc
xor
or
leave
out
pusha
ud0
sub
jbe
adc
outsl
inc
fmull
insl
cmp
lods
or
enter
sub
mov
push
hlt
cmc
and
pop
add
push
mov
dec
fisubrs
rcrb
das
xor
popa
mov
push
xor
push
jmp
mov
addr16
and
lds
ret
cmp
mov
das
iret
cmp
adc
adc
in
enter
inc
insl
sbb
push
into
inc
add
adc
sub
add
cmp
pop
push
push
dec
inc
les
adc
test
lock
sub
sub
rcrb
xor
mov
sbb
xor
in
iret
repnz
push
add
cld
add
sub
sbb
out
mov
scas
mov
jg
lahf
leave
insb
push
lea
push
into
cmp
sub
cmpb
pop
jb
pop
mov
push
ja
lds
sti
xchg
sti
lods
in
xchg
les
popa
jns
lock
stos
pushf
frstor
pop
pop
cwtl
mov
popf
stos
fwait
push
jno
push
mov
popf
jmp
mov
add
popa
xor
fcoml
mov
mov
imul
inc
cld
push
mov
fstps
adc
adc
out
xor
ret
inc
mov
xchg
lahf
sbb
jmp
jp
cmp
hlt
movsb
ficomps
cmp
pusha
xchg
inc
mov
imul
mov
push
xchg
adc
push
jmp
ret
jns
std
push
andl
dec
and
sbb
pop
mov
cld
loopne
in
or
sub
sbbl
je
push
jp
pop
lds
popa
push
ds
dec
shll
out
out
pop
mov
lods
jbe
dec
repz
pop
lods
std
mov
cmp
lret
inc
test
int3
jo
mov
lods
add
addr16
mov
sar
imul
stos
and
mov
xchg
mov
mov
dec
adc
out
ss
shr
push
sarb
sarl
iret
lock
aas
popa
ret
push
adc
repnz
xchg
leave
je
pop
and
shll
dec
test
icebp
icebp
mov
mov
or
andl
xor
sbb
mov
hlt
pop
pop
inc
sub
mov
rcl
pop
inc
mov
divb
jo
fnstenv
outsb
aam
sub
push
sub
inc
cmp
lods
add
adc
cmp
jne
scas
inc
inc
dec
stos
add
test
fidivrs
jne
or
idivl
or
aaa
es
mov
enter
jge
and
mov
ficoms
inc
pushf
mov
std
cli
push
stc
adc
add
sbb
xchg
es
ljmp
mov
pop
lods
xor
cmp
pop
repnz
pop
aas
lcall
leave
testb
das
scas
jmp
mov
xlat
add
ljmp
scas
and
jg
mov
xor
cmp
adc
mov
and
mov
inc
pop
push
sahf
add
push
data16
std
cwtl
roll
sbb
adc
xor
sub
xchg
clc
cltd
sahf
addr16
pop
push
ss
loopne
loope
mov
dec
jp
mov
add
in
dec
add
repz
lds
mov
out
adc
mov
or
cmp
sbb
dec
and
mov
fucomip
inc
xor
pop
jb
add
pop
adc
icebp
xor
mov
xchg
sub
daa
rcll
fstpt
scas
jns
inc
xor
int
add
popf
push
mov
add
push
cmpsb
idivb
ret
js
aam
scas
loop
rolb
mov
dec
enter
call
pop
fwait
jnp
jg
mov
clc
loope
mov
scas
push
arpl
cli
sbb
push
jle
bound
js
pop
and
cmp
mov
insl
sub
mov
xchg
xor
sub
pop
lahf
push
fld1
sar
cld
dec
ret
push
popf
or
loop
jae
dec
inc
mov
leave
jge
stos
inc
dec
or
shrb
sbb
push
in
loop
mov
cwtl
loope
scas
inc
std
arpl
popa
popa
scas
mov
fcoml
das
push
les
je
cmpsl
xor
lret
adc
daa
loopne
out
mov
sahf
lahf
cltd
mov
mov
arpl
stos
add
ret
sti
sub
adc
mov
dec
dec
test
lahf
pop
out
int
scas
add
and
or
roll
adc
adc
jnp
xor
pop
sub
dec
inc
push
or
mov
mov
outsl
mov
clc
fstp
ljmp
mov
mov
cmp
mov
jge
adc
adc
fwait
and
iret
jns
insb
aam
push
jo
dec
jg
rcrl
cmp
test
pop
cmp
inc
mov
out
xor
data16
or
repz
pop
xor
inc
adc
fnstcw
or
aam
fimuls
push
jnp
loop
sub
or
mov
add
lods
adc
in
xchg
leave
push
dec
shl
inc
addr16
lds
push
sbb
rcrb
lods
xor
cmp
or
imul
aaa
sbb
cmp
inc
ljmp
popf
fdivrp
inc
jno
jne
jnp
stos
aam
xor
dec
fidivl
je
mov
xchg
jne
fldl
mov
dec
cwtl
adc
stos
adc
pop
fsubr
xchg
push
push
cli
mov
lret
push
fdivs
mov
neg
imul
pop
or
xchg
shr
cmp
pop
out
cmp
push
pop
xchg
adc
xchg
sbbl
fdivrl
stc
xchg
adc
mov
cmc
push
xchg
adc
lds
mov
xor
pop
lods
enter
pop
sahf
pop
fbld
sbb
mov
hlt
in
sbb
pop
add
xlat
popf
cltd
popa
xorl
scas
testb
out
jecxz
sub
mov
sub
lret
jns
and
mov
push
pop
add
lock
mov
mov
cmp
aam
cmp
xchg
xor
shrb
mov
in
jp
orb
ds
mov
sub
dec
mov
gs
lea
aam
int
mov
sets
addr16
xorl
outsb
dec
inc
adc
sub
insl
repz
loop
fnstsw
xchg
fmuls
inc
ja
xchg
or
data16
dec
mov
stc
push
test
insb
mov
add
sbb
mov
pop
add
inc
aaa
outsl
jp
das
scas
xchg
mov
adc
or
jnp
pop
mov
push
mov
and
insl
pop
ficoms
xlat
unpckhps
inc
xchg
shrl
hlt
iret
adc
jp
or
jo
imul
add
popa
addr16
mov
sub
mov
fnstcw
ret
adc
mov
dec
pop
mov
stc
pop
sub
int3
push
lcall
sub
sarl
push
jecxz
adc
or
push
lds
pop
pop
cmp
cs
push
jg
push
pop
sti
sbb
push
adc
stos
lea
inc
mov
cmp
dec
and
sub
mov
arpl
movsb
mov
or
hlt
mov
or
sarb
push
mov
jbe
xor
or
push
push
push
subl
sbb
sarl
cmpb
fstl
call
les
lock
xor
add
stc
je
sub
mov
push
mov
mov
add
jg
cmpsl
insb
xchg
aaa
test
xchg
fwait
stc
inc
and
fcomps
cmp
popa
add
loopne
mov
pop
push
inc
push
mov
dec
inc
outsl
fsubr
pop
test
cli
in
inc
in
push
mov
cmp
enter
movl
fs
cltd
scas
mov
cmp
mov
lret
test
mov
cld
repnz
daa
in
das
test
inc
mov
pop
and
clc
hlt
nop
mov
inc
dec
xor
xorb
jg
push
ret
leave
daa
popf
inc
nop
push
xchg
mov
nop
push
lods
popa
notb
xor
mov
jnp
inc
dec
lods
mov
or
pop
mov
sub
jo
data16
popa
stos
mov
sub
daa
cli
popa
sahf
imul
test
push
mov
push
xchg
push
repz
daa
cs
push
mov
int
push
clc
dec
or
imul
cld
daa
pop
adc
movsl
xor
negl
cs
add
or
mov
xlat
lahf
hlt
in
sbb
or
xchg
pop
xchg
push
push
stos
notb
rcl
stos
and
loop
push
pop
mov
movsb
ss
scas
call
jae
mov
adc
push
push
xor
les
mov
add
sbb
mov
xchg
fiaddl
xchg
mov
jbe
sbb
lds
pop
mov
mov
sti
mull
pop
or
jecxz
xor
and
mov
jo
cmp
inc
shrb
ljmp
xchg
jns
imul
xchg
pop
xchg
xor
je
pop
adc
jmp
and
push
out
adc
rolb
pop
push
dec
or
xor
nop
inc
jo
mov
nop
dec
outsl
mov
jns
and
rcrb
push
xor
sbb
in
xchg
fiaddl
mov
imul
lret
dec
out
mov
dec
lret
pushf
jnp
in
mov
cmp
ret
xorb
dec
mov
enter
fmuls
adc
jecxz
cwtl
xchg
aam
or
or
fwait
mov
jmp
jbe
ja
into
pop
addl
mov
xor
scas
loope
dec
cmp
insb
jecxz
or
xchg
jge
popa
mov
xchg
enter
lods
push
repz
cmp
add
adc
arpl
xchg
aad
imul
imul
mov
js
outsb
jmp
xor
aad
shl
cmp
sub
iret
imul
mov
int3
mov
jae
gs
cmp
jmp
xchg
cwtl
cmc
sti
and
inc
lods
jge
adc
cs
imul
cmp
stos
lahf
add
mov
cmp
fwait
aaa
nop
cmp
lods
fucomp
aaa
rcrb
jle
mov
dec
stos
imul
vmptrst
cmp
pop
clc
sbb
inc
xchg
mov
fs
mov
xlat
push
lahf
push
ret
cmpsl
sub
inc
or
mov
mov
bound
fsubs
je
mov
iret
sahf
mov
sarl
icebp
stos
jmp
mov
add
pop
xchg
loope
ss
adc
xorl
mov
add
insl
fdivs
fisubl
jo
mov
outsb
pop
jmp
inc
shll
movsl
pop
aaa
loop
cli
adc
push
les
mov
int
pop
pop
jle
cwtl
xor
adc
push
adc
sbb
stc
iret
lret
std
adc
jmp
mov
lahf
push
es
clc
push
mov
adc
sub
mov
mov
jae
mov
jmp
add
xor
fisubrs
lret
and
and
ss
mov
inc
or
and
jecxz
fsts
ja
mov
mov
push
sahf
addr16
gs
test
popf
jne
sub
lret
mov
mov
sahf
icebp
adc
data16
dec
shlb
mov
pushf
iret
dec
rcr
ss
shrb
aas
outsl
and
stos
mov
dec
mov
inc
lods
sub
aad
roll
pop
add
lods
ret
push
cmp
loop
lahf
loopne
adc
push
insb
lcall
out
cld
mov
enter
leave
inc
sub
dec
xchg
cli
lds
add
add
push
clc
ljmp
sbb
mov
popf
aad
pop
mov
push
xchg
ljmp
mov
lahf
add
mov
sub
jmp
dec
adc
aaa
scas
dec
dec
lock
cmpsb
cmp
pop
push
push
lock
lods
jl
fcmovnbe
jle
sbb
jmp
lock
lods
aas
adc
add
add
mov
jbe
jg
cmp
pop
xor
fisttpl
out
add
xor
outsb
iret
rcrb
dec
je
add
add
xchg
sbb
xlat
jl
mov
and
lock
xchg
aaa
insb
mov
inc
scas
push
movb
aam
and
xchg
pop
ds
xlat
pop
cmp
das
andl
stc
cmp
and
pusha
or
gs
icebp
outsb
in
add
call
movsl
es
cltd
faddl
aam
mov
pusha
xor
jle
inc
inc
aaa
insl
adc
mov
sbb
lahf
sbb
lret
jecxz
dec
ja
push
test
rcrl
cmp
mov
xor
outsb
jb
mov
cltd
fistl
jg
sbb
cmpsl
xchg
rorl
fcmovnu
test
push
push
rcrb
pop
aad
and
xchg
mov
out
dec
add
out
adc
adc
xchg
xchg
xor
or
dec
jmp
push
mov
pop
imulb
loopne
pushf
cmp
add
add
cwtl
gs
scas
ds
mov
push
js
and
add
cmc
cmc
mov
mov
mov
leave
lock
mov
cmp
inc
das
push
imul
xchg
push
shll
les
out
negb
push
loop
xchg
lods
jl
js
xchg
stc
in
mov
xor
pushf
mov
outsb
jno
jmp
cmp
xchg
fiadds
xchg
sahf
push
add
xor
inc
adc
popf
icebp
sbb
mov
pop
test
cmpsb
fdivr
mov
xor
add
xchg
jno
mov
cltd
gs
dec
lods
sub
and
jecxz
pop
in
pop
inc
aaa
pop
adc
cli
jb
jmp
popf
lods
xlat
inc
stos
add
cs
fstpt
std
les
shrl
movsl
pop
mov
mov
mov
out
push
push
pop
lock
mov
cmpl
shl
dec
insl
popa
in
mov
mov
add
out
adc
repz
xor
setle
mov
jb
scas
js
push
lea
mov
mov
and
arpl
shlb
or
inc
int3
sahf
gs
push
mov
mov
imul
push
loope
sbb
arpl
jb
imul
sti
repnz
fs
imul
ljmp
jp
push
enter
sub
or
dec
adc
insb
mov
int
add
dec
insb
and
cmp
mov
xor
sbb
xor
aam
or
je
mov
stos
and
pop
or
cmpsl
or
push
repz
test
pop
mov
nop
mov
testb
arpl
mov
push
aas
dec
out
out
dec
add
insl
shl
loope
imul
mov
adc
mov
xchg
xor
adc
dec
mov
sbb
push
dec
cmp
and
roll
mov
js
out
cli
lcall
frstor
and
xchg
adc
or
test
mov
lahf
imul
cmc
jnp
leave
mov
xchg
push
stc
outsl
out
jo
cmpb
push
pop
dec
adc
inc
xor
cmpsl
sbb
daa
outsl
bound
push
xor
xchg
loope
sarl
mov
movsl
push
jmp
inc
mov
mov
mov
icebp
xor
inc
insl
shl
add
mov
insl
mov
xor
xchg
add
fistpl
xchg
cmp
xchg
es
mov
jno
test
mov
cmp
add
inc
cmc
and
mov
pop
pop
in
adc
jne
flds
pop
jno
faddl
mov
sub
fidivrs
test
fisttpl
test
xchg
mov
xchg
loope
pushf
mov
push
mov
fimull
addr16
adc
ret
mov
stos
xchg
mov
jbe
mov
xchg
add
dec
call
daa
lret
mov
in
out
pusha
mov
insb
sub
gs
negl
cmp
add
mov
mov
sbb
mov
test
jl
jp
mov
les
xchg
in
mov
repz
xor
inc
or
lahf
adc
imul
ljmp
fstps
fcmove
inc
fwait
dec
mov
scas
xchg
inc
or
pop
cmp
jbe
nop
and
inc
jae
dec
sbb
sub
cli
pop
jne
cwtl
cmp
lahf
adc
dec
xchg
std
and
fcmovnbe
mov
or
loop
mov
ds
out
lock
sub
inc
loope
push
add
stos
outsb
inc
in
shr
adc
ss
movsl
movsb
jecxz
pop
push
das
and
sahf
sub
jne
gs
fldcw
add
push
adc
jbe
nop
jne
xor
loopne
aas
mov
test
lcall
idivl
cmp
mov
sub
jecxz
xor
lcall
and
shrb
std
push
pushf
and
fcoml
sub
scas
xchg
mov
fwait
pop
icebp
daa
pop
xchg
xorl
fstl
dec
jo
xchg
inc
cmpsb
rcll
cmp
dec
fs
addr16
insb
insl
lds
and
filds
outsl
cld
xor
dec
clc
add
int
je
mov
ja
pop
dec
movsl
and
std
imul
les
sub
dec
ja
sbb
icebp
add
push
pop
dec
sbb
pop
test
push
stc
jbe
push
roll
push
jl
sub
mov
and
cltd
push
adc
mov
dec
sbb
and
inc
jmp
call
jne
sbb
mov
jp
lret
out
pop
arpl
stos
and
sub
jbe
mov
or
jne
call
push
hlt
scas
test
pushl
jno
xor
mov
test
imull
dec
adc
adc
andl
fstps
aad
leave
lds
shll
adc
pop
xchg
lret
inc
aas
out
cmp
or
xchg
lret
or
bound
pop
adc
ret
outsl
add
repnz
push
and
dec
mov
or
iret
dec
aaa
adc
movsb
roll
xchg
inc
jge
xor
mov
pop
add
cmpb
mov
dec
xor
andb
sbb
push
adc
adc
add
dec
fdivr
movsl
out
sbb
xor
push
cmpsl
popa
xor
repz
mov
jne
sbb
enter
hlt
sbb
out
ficoml
xchg
mov
pop
stos
xor
mov
or
sbb
xchg
inc
test
loop
sbb
call
xor
mov
push
xchg
cmp
adc
dec
xchg
add
rcrl
and
or
xor
repz
sub
jmp
leave
xor
repnz
lods
int
and
dec
xor
fwait
js
cmp
xchg
fistpll
push
insb
fildll
dec
or
mov
sti
mov
call
xor
testl
adc
xlat
loopne
lods
lret
sbb
sbb
fsubrs
iret
lcall
aaa
test
mov
imul
mov
arpl
xor
sub
scas
cmp
cmp
sub
in
or
mov
pop
les
mov
push
mov
jns
clc
std
and
and
fiaddl
mov
fiaddl
pop
aad
call
mov
pop
es
repz
cmp
scas
in
or
and
jp
fildl
jae
mov
mov
cmp
rclb
inc
pop
inc
bound
xor
add
movsb
push
es
jns
lea
inc
fnsave
and
out
insl
xchg
lods
aas
or
adc
mov
fisubl
loope
or
arpl
cmpsl
mov
xchg
xchg
add
test
ret
pop
push
cmp
mov
stc
pop
fidivrs
sub
mov
or
adc
cpuid
cmp
mov
inc
insb
and
xchg
insb
cwtl
lcall
repz
mov
shll
mov
and
cmp
jg
pop
fisubs
jo
nop
add
cmp
mov
loop
dec
xchg
lods
lock
mov
inc
mov
xchg
cmpsl
mov
iret
and
push
std
js
inc
xor
jnp
popf
cltd
inc
sbb
aam
loop
shlb
ret
xor
jge
adc
divl
lret
mov
test
jmp
sub
in
loope
aam
cmc
xchg
inc
xorl
loope
inc
mov
add
jbe
andl
mov
adc
xchg
sub
jge
ja
jno
add
mov
sub
daa
sub
cmp
xchg
or
imulb
or
popa
stos
cmp
lods
scas
aas
jnp
pop
push
ss
in
dec
leave
mov
dec
cs
rcll
lahf
outsl
mov
fdivs
dec
shrb
movsb
jae
push
add
inc
or
scas
jno
push
popa
sbb
add
pop
jo
clc
cwtl
jns
ja
cmp
adc
into
call
fbld
mov
aas
mov
dec
nop
add
inc
in
arpl
movsl
jecxz
mov
jecxz
stc
mov
gs
stc
dec
jnp
add
vmread
xchg
xlat
pop
dec
mov
ret
gs
xchg
mov
shl
pop
xlat
jp
outsb
out
xor
int3
xchg
add
ret
and
dec
push
and
lret
pop
xchg
jae
xor
iret
and
sub
pusha
pop
addl
faddl
mov
fsubl
sub
ret
les
jns
xchg
imul
scas
int3
mov
lahf
add
xchg
xchg
nop
sub
xchg
cmp
into
arpl
cmpsb
mov
push
or
sbb
mov
jg
icebp
jge
jge
lock
mov
lods
lcall
mov
data16
fisubs
aas
insb
mov
jb
inc
enter
mov
sub
mov
mov
push
fdivrl
xchg
cmp
mov
hlt
sbb
sub
or
adc
push
or
insb
std
cmovnp
sub
lss
in
dec
pop
sbb
push
ds
xchg
outsl
jne
xlat
stc
cmc
or
in
dec
adc
nop
sub
jbe
or
es
inc
mov
cld
or
pop
pop
ds
xor
inc
jne
mov
cmp
mov
not
fbstp
loop
inc
sbb
shrl
inc
arpl
push
add
jae
test
xor
sbb
mov
insl
mull
cs
mov
mov
sti
xchg
cmp
xor
xlat
dec
add
or
je
xrelease
aaa
add
mov
mov
jns
and
push
add
iret
pop
ss
negb
cmp
subb
cmp
ret
out
xchg
je
insl
scas
stos
out
cmp
lahf
mov
sub
enter
mov
or
scas
pop
mov
sub
pop
pop
or
mov
aas
cli
ret
xor
push
cmpsl
and
jns
push
in
loope
mov
xchg
aad
xchg
pop
jge
in
xor
push
inc
hlt
notb
mov
xor
es
les
cmp
jno
lock
sub
mov
mov
sub
and
ss
jmp
adc
pop
xor
mov
add
fwait
dec
push
fldl
fcmovne
dec
or
push
stos
in
fstps
mov
fwait
push
cwtl
sub
test
jl
inc
int
jge
ret
out
xchg
mov
sub
fisubrl
sbb
das
clc
cmpsl
mov
nop
sub
ret
xchg
jo
add
dec
mov
loope
xchg
xchg
rcr
fisttps
or
int
jne
outsb
lcall
xor
jno
cmp
inc
mov
fldenv
rcll
ja
adc
daa
fs
movsl
lock
sub
clc
dec
fucomp
and
mov
cli
pop
fs
loopne
shll
das
pusha
stc
add
sbb
movsl
inc
mov
jb
adc
xor
pusha
inc
mov
dec
mov
sti
pop
inc
sub
sbb
lahf
sbb
cmp
push
add
daa
lcall
clc
add
out
pop
addr16
xor
adc
pop
mov
js
mov
mov
xor
cmp
pop
add
sarl
mov
lods
mov
pushf
and
fwait
psllw
stc
mov
into
pop
lahf
dec
aas
pop
mov
aam
stos
inc
ss
stos
rclb
xor
insl
mov
xchg
sbb
pop
cmp
mov
gs
pop
jmp
rorb
push
and
jg
sti
add
xchg
loopne
fistps
ds
xor
dec
in
lods
xchg
pusha
xor
or
add
lea
clc
testb
hlt
inc
cmp
ret
addr16
adc
pop
imul
dec
je
jo
call
fwait
in
pusha
push
pop
mov
jge
push
in
xchg
cmc
jl
pop
loop
jge
cli
cmpb
fs
pushf
fs
jle
std
les
dec
xor
add
lahf
and
loope
mov
or
mov
cmp
inc
pop
sbb
cld
testb
pop
inc
xor
in
shll
jne
cmp
ja
xor
jnp
repz
pxor
jg
sbb
push
fcomp
xor
mov
mov
sub
shlb
adc
xor
les
or
leave
mov
cmpsl
sbb
push
aam
or
pushf
fdivr
xchg
push
pushf
cwtl
add
lret
mov
addr16
pop
dec
mov
fcmovb
nopl
stos
dec
adc
dec
mov
pop
data16
xor
pop
inc
cmp
xor
hlt
jle
xor
mov
xlat
dec
inc
movsl
sub
or
push
ret
add
inc
mov
mov
cmp
jbe
adc
xchg
js
pop
mov
enter
dec
idivl
cmpsb
mov
sub
aaa
mov
leave
test
sub
pop
mov
loope
test
call
scas
nop
cwtl
lods
fs
inc
ds
out
and
fnstcw
mov
jb
mov
and
jl
mov
sbb
lret
sti
aad
inc
push
lret
stos
xchg
xor
hlt
int3
lahf
pop
adcb
into
adc
jb
ret
adc
insb
push
aas
and
es
xchg
scas
stc
lahf
cmp
xchg
out
inc
test
inc
push
mov
xor
dec
leave
shll
jno
xchg
mov
sbb
and
dec
js
sbb
pop
pop
enter
sub
pop
xor
cs
mov
loopne
loopne
pop
fdivl
cmp
movsl
out
inc
int
sub
or
es
popf
cmp
mov
push
and
push
cmp
pop
push
dec
stos
iret
fidivrl
inc
cmpsb
sbb
pop
add
pushf
xchg
stos
cmp
mov
hlt
mov
popf
sti
aad
jge
inc
jle
scas
xchg
inc
cs
xlat
and
xchg
push
fnstenv
ja
fisubrs
push
ss
push
fsubl
imul
aas
and
cmp
clc
stos
sbb
icebp
mov
loopne
cmp
js
xor
ret
push
and
mov
push
out
bnd
push
test
arpl
xchg
pop
pop
orl
xchg
xchg
adc
pop
das
and
daa
lods
ret
ss
cmc
icebp
inc
pop
mov
adc
inc
xor
test
jp
stos
add
cwtl
mov
flds
sahf
in
xchg
inc
xchg
or
outsl
enter
mov
pop
xchg
imul
scas
cli
push
in
add
mov
clc
inc
sbb
rol
ds
pop
dec
popa
lret
add
pop
inc
imul
pop
in
jg
and
and
insb
mov
xchg
xchg
sarl
repz
aaa
xchg
scas
cmc
cmp
lcall
rcrl
outsb
ds
sbb
pop
sti
cmp
dec
jmp
or
pop
sahf
lock
fmulp
mov
mov
clc
cmpsl
pop
sbb
add
std
out
cmp
xor
loop
movsb
rorb
ljmp
into
cmpsl
dec
cmp
ret
mov
ljmp
iret
fcmovnb
and
mov
xor
jp
mov
push
jle
and
rorb
jp
pop
cmpl
mov
mov
cs
add
or
inc
lods
out
jg
xchg
sbb
loopne
fnstsw
xchg
sub
and
pop
cmpsb
mov
test
dec
cmp
out
lods
mov
cmp
inc
bound
adc
imul
xor
push
call
or
test
xchg
mov
adc
or
xchg
clc
pop
jno
ljmp
push
xlat
push
pop
push
popa
bound
imul
dec
inc
mov
sbb
jle
int3
stos
pop
pop
gs
inc
jae
xchg
stos
lcall
sub
andb
or
pop
mov
adc
fs
jecxz
cwtl
inc
gs
loope
sub
aam
jmp
loopne
mov
and
pop
adc
dec
jmp
ret
es
and
or
mov
or
jmp
fdivl
in
in
add
inc
loopne
hlt
rcrb
int3
mov
dec
jge
sub
push
adc
fidivrs
popa
cmp
xchg
sbb
fucomp
or
adc
das
aaa
adc
adc
xlat
push
dec
std
sbb
lret
sub
test
pop
int
imul
lret
pushf
mov
mov
aam
stos
fistpl
not
loope
and
xchg
cs
std
das
mov
clc
stos
pop
cs
iret
test
push
into
jb
jle
into
mov
pop
dec
sub
mov
loopne
adc
fldcw
mov
jno
mov
add
daa
aad
sub
jbe
cmp
adc
dec
sub
pop
cmc
std
addr16
adc
inc
call
jb
jns
mov
popa
adc
sub
cmpsl
popf
popa
lret
mov
mov
aas
idivl
jo
cmp
lcall
arpl
js
xor
push
mov
pop
sbb
inc
push
daa
dec
push
dec
sbb
mov
fstpl
in
mov
pop
in
daa
mov
xor
and
vpunpcklbw
or
push
cmp
icebp
arpl
ds
dec
test
loope
and
fwait
mov
lahf
test
xchg
push
xchg
xor
adc
jl
test
jg
sub
dec
and
pushf
sub
cmp
enter
shrb
sbb
jg
jmp
sbb
dec
xor
and
popa
dec
push
xor
cld
cli
inc
mov
lret
cmp
push
shll
loope
leave
xorb
adc
inc
and
mov
pop
subl
jne
push
shl
push
mov
adc
cli
rcrl
add
sbb
mov
jmp
mov
xchg
mov
push
sbb
jl
mov
clc
and
out
les
popf
inc
sbb
push
movsl
fdivs
iret
incb
lret
push
scas
les
xor
pop
dec
inc
push
push
cmp
data16
mov
add
out
xor
adc
jno
mov
cmp
or
add
xchg
movsb
aad
dec
dec
pop
test
in
sub
rolb
loope
or
inc
std
in
inc
div
xor
nop
cltd
cmp
pushw
jge
shl
outsl
and
loop
xor
cmp
mov
rcrl
adc
lcall
sbb
or
loope
cmp
xchg
aas
jecxz
xlat
nop
adc
pop
divl
in
inc
fisubrs
inc
lock
add
mov
jo
ret
aad
xchg
xor
dec
ljmp
inc
scas
mov
loope
insb
ret
enter
lods
mov
push
push
or
dec
jno
outsb
stos
sbb
add
insl
hlt
orl
test
push
in
lock
in
arpl
and
mov
pop
enter
les
mov
mov
fdiv
push
push
rorl
sarb
dec
iret
sub
adc
stos
mov
or
inc
mov
push
jecxz
push
nop
inc
cmp
out
push
lret
mov
scas
jbe
push
inc
xchg
push
add
mov
adc
pop
cld
jbe
pop
arpl
mov
faddl
cld
fcompl
data16
and
mov
sub
test
inc
xor
lret
fwait
shr
loopne
mov
insl
test
lea
push
arpl
daa
int
jp
and
sub
out
sbb
jg
lcall
inc
test
mov
or
sbb
je
movsl
out
test
jnp
xor
inc
inc
cmp
pop
loop
or
jne
push
arpl
push
iret
and
cli
push
or
pushf
push
mov
loopne
mov
lcall
es
test
shrb
sbb
xchg
xor
mov
mov
dec
roll
dec
fiadds
adc
mov
pop
mov
xor
mov
or
lahf
lcall
jne
sub
cltd
sub
movsl
inc
dec
sahf
inc
add
cli
pusha
lret
sbbl
hlt
jg
cmp
lock
repnz
in
and
ja
jae
push
mov
inc
push
push
dec
pop
or
mov
addr16
jae
andb
outsb
inc
js
mov
adc
dec
lods
lods
inc
dec
fisubs
sbb
mov
lods
cmp
push
cmp
jae
fnsave
jb
pop
cmpl
loope
push
rorl
ja
in
into
aaa
mov
or
outsb
mov
movsl
mov
jp
ss
mov
lahf
lahf
dec
inc
mov
sub
mov
add
xor
mov
in
or
mov
loop
pop
dec
jnp
mov
popf
addr16
dec
les
rclb
ljmp
xchg
in
das
or
sbb
out
int
decl
sbb
sub
mov
test
jne
test
popl
jbe
adc
cs
jns
mov
sub
adc
sbb
ja
dec
or
es
inc
lods
inc
or
xchg
jmp
mov
addr16
xchg
bound
popa
xchg
mov
clc
jge
jnp
pop
xorl
or
add
jmp
add
icebp
sbb
push
test
repnz
adc
gs
js
mov
sbb
sbb
ljmp
mov
or
subb
pop
xor
push
jle
popf
push
inc
out
pop
dec
test
jb
pop
xchg
or
jle
and
lods
mov
outsl
aad
iret
cmpsb
jb
inc
rolb
jb
add
sub
dec
aaa
mov
jg
pop
lods
loopne
std
push
imul
rcr
jl
mov
cmpsb
mov
jae
ljmp
mov
sub
imul
cmp
pop
pop
and
popa
or
or
inc
or
push
jl
and
gs
lcall
scas
jle
std
daa
jp
or
jnp
sub
fisubs
or
sub
mov
out
add
push
xor
ljmp
and
or
dec
lods
add
inc
and
loope
adc
sbb
jno
insl
call
dec
sub
stos
mov
stos
mov
add
fstpl
aas
outsb
es
xorl
popf
push
push
sahf
jno
loop
cwtl
xchg
jo
ss
push
mov
mov
push
inc
in
xchg
sbb
call
inc
cmpb
imul
push
dec
jo
fisubs
roll
and
mov
adc
xor
xchg
xchg
add
fists
dec
jmp
subl
adc
jne
add
enter
out
pushf
loope
cld
xchg
dec
insl
lods
dec
sbb
dec
push
rcrl
or
fcoms
xchg
dec
fnstenv
nop
mov
push
push
fidivs
mov
lock
stc
das
mov
adc
sbb
aaa
sbb
sbb
and
test
inc
pop
cwtl
xor
jg
mov
xor
xor
and
bound
dec
in
in
aam
cmp
inc
jge
pop
cmp
addr16
fisttps
sub
jbe
dec
test
pop
xor
jns
inc
xor
cmpsl
ret
dec
sbb
lods
outsl
cmpsb
sbb
lcall
xchg
sub
sbb
xchg
lahf
andb
push
out
icebp
push
popf
xor
test
push
aaa
fistpl
lods
ret
jae
jne
dec
fnstenv
sarb
mov
add
test
and
lods
xchg
inc
sbb
mov
pop
jne
lret
cld
sbb
ficoml
orl
dec
rcrb
push
fsub
push
or
gs
mov
pop
in
mov
mov
pop
mov
or
push
pop
aas
lahf
mov
jae
or
mov
stc
cvtdq2ps
xchg
call
dec
dec
pop
sub
adc
clc
jne
mov
and
ret
mov
stos
xor
xor
push
testl
adc
xchg
and
pop
xor
add
icebp
cmpsl
icebp
pop
or
pop
mov
das
or
mov
pushf
in
fsubrs
les
add
roll
out
inc
pop
xor
inc
cmpsl
xor
mov
ret
sbb
scas
call
in
add
sbb
test
cmp
and
test
mov
dec
rorl
js
subl
loope
test
mov
mov
fisubrs
push
pop
jle
sbb
xor
and
add
add
or
and
mov
dec
pop
out
cmpsb
pop
lahf
test
xchg
ja
adc
sbb
rorl
xchg
bound
in
adc
mov
cwtl
jp
test
jp
mov
pop
call
mov
pop
leave
fstpl
mov
scas
or
test
fisubrl
jp
push
mov
pusha
and
insl
aas
jg
jg
push
movsb
bound
mov
aaa
mov
int3
repz
sar
les
es
sbb
jbe
push
fsubrs
mov
mov
in
xor
mov
add
push
push
mov
dec
cmp
clc
pushf
xchg
orl
sub
fistps
mov
push
add
imul
adc
jo
mov
push
adc
sbbb
jae
add
mov
cmp
push
and
and
call
mov
cmp
popa
repz
sahf
dec
lret
mov
add
cwtl
mov
stos
push
aam
sarl
je
shlb
lds
dec
lcall
pop
mov
xor
rcrl
and
mov
inc
xor
repz
jecxz
les
call
inc
push
dec
jns
adc
or
lock
decl
jo
inc
icebp
sub
jecxz
mov
pop
scas
mov
out
and
cmp
cwtl
cmp
cmp
sub
add
fimuls
inc
sbb
cmp
push
lret
pop
out
aam
fistpl
int
mov
dec
insb
jnp
into
aad
or
bound
xor
ret
cmp
clc
jo
mov
rcl
nop
adc
fwait
out
push
push
fimuls
xor
repnz
lods
add
inc
cwtl
hlt
inc
fcoms
adc
jns
mov
lahf
imul
mov
loopne
fwait
jnp
lock
cmp
mov
std
dec
pop
and
xor
out
repz
xor
dec
out
fdivr
and
dec
test
or
jge
pop
pop
bound
inc
jo
cwtl
or
pop
add
push
push
imul
pop
cltd
push
popf
aaa
cmpl
stc
jb
shlb
xor
pop
sub
js
es
pop
sbb
jbe
cs
scas
addr16
mov
lock
shrl
hlt
xchg
pop
ret
pop
jb
nop
ret
out
test
cld
jmp
hlt
out
push
xchg
dec
sti
xchg
lea
cmp
mov
aaa
das
adcl
xorb
or
inc
sub
push
daa
cmp
ret
pop
xor
xchg
in
push
js
scas
inc
push
jne
or
cld
push
iret
cltd
pop
mov
push
mov
sbb
nop
aaa
aas
cld
cmpsl
outsl
aam
push
lods
mov
or
jns
insb
test
loopne
xor
lods
cmp
enter
sub
dec
push
jns
dec
xchg
mov
pop
jns
outsb
xor
ja
loope
sahf
sbbb
out
ss
push
ds
addb
jle
fs
cmpsl
push
add
pusha
lea
or
mov
je
inc
imul
fiadds
cmp
ret
inc
das
pop
dec
push
mov
adc
push
hlt
mov
inc
loopne
stc
mov
lahf
inc
cmp
cmp
in
pop
imul
lds
test
fidivl
inc
add
sub
mov
cld
insb
sub
ret
cmc
inc
mov
pop
and
in
cmp
dec
mov
pop
mov
pop
test
dec
push
js
jp
adc
inc
xor
xor
and
bound
sbb
mov
aaa
shrl
adc
mov
cmp
xchg
jge
jmp
dec
addr16
fsubp
sub
xchg
shrl
or
outsl
test
or
or
out
lock
rcrl
xchg
shll
in
jmp
jl
push
pop
fldenv
int
xor
enter
sbb
int
mov
adc
add
mov
jl
into
lahf
leave
dec
inc
sub
dec
xorb
pusha
mov
cli
clc
adc
pop
pop
sahf
add
mov
sahf
push
xor
js
cltd
jae
mov
adc
xor
xor
mov
cmp
cmp
out
dec
ds
mov
adc
mov
and
sahf
insb
lcall
or
lock
dec
enter
nop
push
push
ret
dec
xchg
pop
dec
mov
sti
insl
ljmp
shr
or
loop
and
aam
inc
ret
mov
mov
jnp
adc
in
shll
push
pop
pusha
or
mov
shlb
sbb
jae
or
or
jb
mov
hlt
cmovs
jp
dec
add
mov
xchg
lds
inc
in
repz
jmp
jecxz
stos
mov
cmc
jle
dec
cmpsl
xor
cmc
cmp
mov
xchg
pop
adc
leave
cli
repz
dec
push
lahf
sahf
or
loopne
xchg
pop
les
mov
push
sahf
std
sbb
cmp
jl
mov
movq
mov
rolb
dec
in
or
leave
mov
bound
and
mov
xlat
shrb
hlt
cmpsl
les
fbld
push
pop
mov
inc
push
arpl
daa
nop
popa
push
mov
sti
xlat
test
fs
adc
aam
inc
mov
clc
push
inc
mov
js
out
xor
int
out
push
out
jmp
lods
xor
cli
dec
rorl
pop
xchg
inc
lret
addr16
pop
nop
ror
movsl
sbb
jmp
xchg
inc
dec
push
inc
fdivrl
fstps
movsb
cwtl
je
pop
mov
outsl
addr16
push
clc
xlat
sub
pop
shrl
int
out
add
fldenv
ret
xor
push
jbe
xor
add
out
dec
lahf
sbb
push
aam
sbbl
aam
es
add
xor
add
mov
bound
jbe
lods
testl
mov
inc
cmpsl
loop
test
aaa
fwait
out
adc
lahf
inc
nop
push
pop
xchg
fidivrl
cmpsb
aam
imull
xor
ret
mov
stos
mov
enter
push
das
or
cmp
xor
adc
mov
leave
mov
inc
sub
xchg
cmp
xchg
shl
in
xor
cmp
cmp
adc
out
sbb
in
loop
xor
sarl
mov
dec
movsb
mov
sti
stc
xorb
jle
mov
inc
mov
or
stos
ja
add
adc
sbb
pop
mov
sub
push
cmp
call
ret
fs
cltd
pop
int
sbb
loop
xlat
adc
xchg
loope
add
nop
xchg
movsb
cmpsl
inc
xchg
stos
stos
cmpsb
shld
cmc
clc
repz
repz
lret
mov
or
cmc
cmp
inc
outsb
les
push
pushf
test
mov
inc
pop
jl
repnz
or
out
adc
daa
pop
dec
inc
aam
das
rcrl
mov
jp
in
xchg
sbb
std
das
xchg
out
ljmp
insl
xchg
out
shlb
push
and
lret
xchg
add
cmpsl
hlt
aam
or
test
mov
sbb
pop
pop
into
and
pushf
in
movsb
int3
jnp
jnp
and
es
inc
hlt
fdivl
inc
pop
hlt
ja
iret
xchg
shll
cmp
call
jg
pop
jmp
inc
cs
decb
loope
rcrb
lods
cmp
pop
call
orb
test
loopne
push
mov
mov
int
int
pusha
gs
shr
add
mov
sbb
enter
loop
jne
jb
sub
sbb
mulb
xchg
or
cmpsb
xor
add
scas
xchg
xchg
jle
in
dec
adc
sub
imul
cmp
fnstcw
mov
out
repnz
bound
mov
mov
or
ds
and
addr16
test
push
je
pop
pop
js
notb
mov
out
mov
enter
mov
lret
cs
lahf
push
pop
movsl
jmp
aam
cmp
add
or
into
dec
aam
push
ss
das
fildl
cmpsb
cmp
xor
sub
mov
push
ret
out
sub
pushf
stos
mov
insl
inc
mov
lahf
mov
or
sub
mov
ret
negb
dec
sbb
jl
divl
addb
cmp
mov
add
pop
movsl
mov
into
rorb
push
inc
sub
imul
mov
sub
test
ljmp
dec
in
das
jg
lock
xchg
jbe
fwait
inc
shl
pop
rorb
icebp
sub
jb
xor
sbb
inc
mov
or
add
cmp
rcrl
popf
ds
push
mov
sbbl
sti
pop
mov
mov
adc
jg
adcl
xor
push
jae
lea
inc
iret
into
es
dec
mov
fdivrs
loopne
loop
mov
test
sahf
sub
sbb
jo
or
push
gs
mov
jecxz
xchg
fwait
into
cmp
rep
pop
push
jmp
inc
push
mov
aam
ss
sub
and
aad
icebp
or
pop
rcl
jmp
bnd
cmp
xchg
xchg
pop
mov
cltd
dec
movsl
loope
andl
inc
dec
mov
mov
adc
inc
incb
repz
dec
mov
jno
test
lods
xchg
loopne
into
sub
push
cmp
mov
ja
push
mov
sub
sub
dec
in
push
dec
dec
or
andb
popa
pop
sbb
pop
sbb
in
cmp
daa
mov
sti
imull
sbb
fmull
jg
lods
mov
aad
add
pop
add
ljmp
push
fisubrl
push
imul
es
cltd
lock
aad
lahf
std
add
ja
aam
or
inc
sti
sub
dec
pop
xor
repnz
outsl
sahf
imul
adc
aas
xor
and
pop
mov
ret
xor
cmp
aas
fwait
sbb
cs
dec
idivl
clc
mov
fs
dec
xchg
pop
push
bound
sbb
adc
int3
dec
dec
rorb
arpl
lret
imul
insb
das
jne
jb
mov
mov
mov
leave
adc
leave
stos
daa
fs
cmp
nop
push
or
jg
out
jne
les
add
cmpsl
into
cld
push
shrb
addl
in
rclb
adc
addr16
cmpsl
mov
jns
add
int
xchg
jne
adc
ss
mov
out
rorb
jmp
adc
inc
cmp
dec
ds
jle
mov
sbb
call
movsb
outsl
vmovq
xor
or
xchg
jae
xchg
adc
iret
into
xchg
jl
lcall
mov
mov
fiaddl
cwtl
cmp
imul
fmuls
and
push
hlt
aaa
mov
or
clc
fisubs
inc
adc
inc
xor
mov
sahf
sbb
mov
mov
adc
jno
fwait
jl
and
pop
jae
mov
and
mov
xor
mov
fdivp
rorl
sub
loopne
ret
repz
dec
jno
sbb
inc
mov
dec
popa
ret
jo
xor
xchg
cmp
fldcw
sbb
aaa
or
and
imul
cmp
jno
lret
mov
rolb
movsb
lret
das
scas
sbb
xor
pop
movsl
insl
jp
rcrb
ficoml
insb
adc
pop
inc
cltd
subl
mov
and
cs
xchg
scas
imul
sub
sub
roll
push
mov
xor
nop
repnz
test
lret
inc
js
adc
lret
sbb
mov
je
out
dec
das
inc
or
aam
sbb
jecxz
mov
loop
das
ret
jo
pop
sbb
sbb
jmp
jno
xchg
pop
adc
repnz
xor
dec
inc
dec
pushf
dec
shl
test
inc
inc
xchg
push
mov
add
push
xorb
sahf
mov
mov
insl
jle
in
fnstcw
adc
pop
xchg
stos
pop
shrb
cs
xor
pop
dec
or
clc
pusha
cmp
in
imul
xor
inc
push
lret
push
fwait
test
cltd
cmp
cmp
test
add
add
es
in
and
jo
addr16
push
mov
mov
lods
mov
mov
stos
mov
clc
jp
les
or
dec
rorb
xor
xor
cmp
insb
sahf
xchg
push
pop
negb
mov
cmpsl
push
mov
sub
or
mov
imulb
jge
loope
aad
lds
jge
int3
sub
aas
lods
sub
pop
cmp
or
or
scas
cwtl
or
cmp
clc
jo
push
mov
pop
sbb
loope
add
mov
lods
in
jle
fstps
push
repnz
rcll
test
push
inc
frstor
dec
mov
jl
add
pushf
xchg
pop
adc
out
sub
cltd
mov
inc
inc
push
sub
ja
jg
mov
sti
adc
adc
add
cwtl
lods
in
lcall
test
in
adc
and
addb
jp
sbb
cltd
cld
scas
jle
and
ret
daa
in
cltd
loopne
into
or
rcl
mov
xchg
ret
adc
sbb
fcompl
cmp
sub
jl
add
sub
pop
out
or
lds
test
inc
lret
adc
lcall
and
jno
cmp
mov
jl
mov
pop
jo
pusha
imul
mov
inc
mov
cli
out
in
push
loope
push
pop
gs
or
pop
aad
and
ret
or
out
test
in
scas
sbb
cmp
fcomps
adc
gs
iret
lds
inc
sbb
lret
outsb
fdiv
test
sub
inc
mov
mov
push
mov
rorb
jne
call
push
jmp
icebp
cmp
sub
loopne
pop
sub
mov
stc
fbstp
and
stc
in
mov
pop
mov
xor
cmp
in
mov
lcall
cmp
test
mov
lret
outsb
cs
clc
push
imul
jecxz
js
sub
xchg
test
xor
sub
lods
push
add
mov
push
mov
push
xchg
pop
and
cmpsl
aam
mov
push
popf
mov
mov
pop
lahf
lods
pop
or
jecxz
dec
test
sti
cmp
mov
sub
movsl
je
xor
lods
pop
dec
push
jae
out
mov
mov
or
adc
sub
hlt
inc
jns
pop
outsb
mul
or
cmp
inc
adc
push
xor
or
add
xlat
push
aas
sbb
enter
cmp
adc
lret
xor
xchg
in
inc
xchg
and
lods
sarl
outsl
push
jecxz
mov
loop
pop
test
rcrb
jge
mov
movsl
pop
ja
fcompl
nop
daa
out
push
scas
jl
adc
shl
scas
data16
mov
pop
xchg
js
xor
mov
nop
scas
jo
mov
aas
insl
int
and
sbbl
add
das
pop
decl
pop
sbb
bound
int
rclb
dec
add
push
lds
adc
fsub
fcomps
hlt
nop
mov
push
dec
xchg
push
jb
out
sub
loope
dec
test
ss
push
test
push
scas
push
scas
jge
add
pop
mov
hlt
mov
fstps
dec
jae
movsb
mov
dec
inc
int
xchg
lods
push
jecxz
adc
and
fimuls
jl
frstor
xor
pop
sbb
xchg
fisttps
xchg
xchg
pop
sbb
xor
fldcw
subl
ficoml
add
inc
imul
test
push
pop
or
jo
mov
lods
ja
inc
adc
xchg
and
push
das
movl
dec
mov
xlat
push
xor
addb
add
daa
hlt
xchg
int3
jns
push
fs
ds
mov
iret
jbe
add
or
mov
inc
repnz
mov
sub
shlb
inc
and
ret
xor
sti
mov
cmp
in
xchg
mov
xchg
add
aaa
sbb
pop
inc
rorb
pop
je
cmp
cmp
data16
sar
add
stc
inc
jnp
fldl
xchg
jne
mov
jl
pop
dec
xor
push
jl
fimull
dec
xor
les
lds
xor
push
push
jge
pop
push
out
mov
dec
or
jecxz
jge
and
icebp
aas
mov
frstor
or
js
jns
jo
cmp
arpl
outsb
int3
lea
dec
mov
jge
mov
adc
xchg
insb
xor
leave
xor
pop
std
ficompl
mov
imul
aad
pop
outsb
add
cmp
rorb
push
dec
dec
lret
mov
mov
into
pop
push
shll
push
push
cwtl
cli
mov
daa
popa
std
sub
push
fst
xchg
insl
and
mov
cld
push
jnp
ficompl
push
data16
adc
adc
push
fstl
pop
insl
jge
dec
movsl
aas
xchg
mov
sbb
mov
pop
mov
cmp
testb
sbb
out
sti
adc
inc
mov
and
call
bound
push
mov
enter
mov
add
popf
xchg
sbb
push
inc
or
insb
dec
jge
mov
imul
inc
xchg
daa
scas
popa
in
lods
stc
xor
mov
xchg
ret
pop
add
cwtl
int3
sub
jmp
add
ljmp
ljmp
jmp
cmp
lahf
pop
test
out
inc
sub
jo
mov
inc
xor
mov
aaa
fcompl
fcompl
xor
adc
jnp
lods
clc
ds
subl
cmp
ds
mov
xor
inc
subb
cmp
aam
pop
je
aaa
rorb
cmp
sbb
push
push
rcl
jo
cmp
repnz
add
push
xchg
mov
dec
push
cmp
pop
push
mov
test
mov
aad
mov
subb
test
stos
fnstsw
int3
insl
enter
xor
or
fwait
add
mov
fcoms
enter
xchg
ja
arpl
fcmove
clc
lret
popf
rorl
pusha
dec
push
cli
mov
daa
stos
cmpsb
add
xchg
dec
and
mov
iret
xor
inc
mov
pop
jge
lea
mov
aas
stos
jae
insb
shrl
cmpb
jo
rolb
movsb
clc
push
in
xlat
inc
jb
xor
pop
and
jmp
xchg
shlb
cwtl
add
sahf
nop
pop
negb
mov
out
lock
sahf
jg
sbb
lds
cltd
loop
aaa
loop
jnp
test
mov
inc
popa
leave
lock
push
sub
adc
push
mov
mov
scas
xchg
cmp
into
sbb
adc
hlt
add
mulb
cltd
sub
out
mov
cs
outsl
xor
mov
sub
cwtl
xchg
scas
lcall
sti
and
push
cs
gs
insl
popa
xchg
pop
pop
sarl
bound
es
mov
mov
or
push
xor
dec
fwait
test
ret
inc
ss
out
icebp
sarl
push
cmp
in
dec
xchg
sub
cmp
jmp
sub
and
adc
clc
jnp
scas
es
pop
and
and
enter
shr
out
jmp
mov
push
test
or
xlat
push
mulb
push
ret
arpl
mov
cmp
push
frstor
jbe
ja
pop
push
cmpl
and
add
mov
pop
idiv
subb
push
fadd
lret
mov
out
push
jo
popf
sbb
out
push
or
mov
test
push
jae
dec
sbb
or
cltd
ds
jns
ret
xchg
cmc
imul
and
rorb
mov
xor
fidivrs
mull
aad
xchg
xor
xchg
cmp
ret
push
pop
jl
mov
movsl
xor
imul
gs
outsb
in
ret
fbstp
dec
xchg
in
adc
test
out
adc
and
inc
negb
jns
inc
sbb
adc
lock
xchg
add
mov
mov
xor
xchg
push
aas
pop
jne
dec
inc
loope
pop
jnp
cld
cld
les
lret
js
jb
dec
cli
std
fdiv
cmpsb
rclb
stos
mov
ljmp
fwait
push
loop
fcmove
into
lret
test
add
push
les
dec
push
mov
es
sbb
cmp
mov
lahf
push
mov
mov
rol
je
out
out
bound
cmp
mov
inc
dec
jmp
jle
fisubs
and
xor
cltd
sbb
xchg
dec
leave
jne
push
lock
mov
iret
lods
or
mov
sbb
fbstp
pop
nop
jmp
jp
inc
data16
xor
adc
cwtl
clc
cmp
sti
and
add
gs
mov
dec
fdivrl
nop
fnstcw
rorb
repnz
clc
arpl
pop
mov
adc
add
movsb
cmc
inc
or
and
jmp
sub
sub
pop
aas
push
pop
sub
aas
mov
add
pop
and
pop
add
jl
fcmovb
push
xchg
imul
leave
pop
xor
jle
int3
test
mov
sbb
sbb
mov
hlt
or
xchg
sub
movsl
jp
out
gs
dec
jo
das
pop
sbb
dec
xchg
add
inc
adc
je
pop
daa
jne
insb
cmp
mov
lea
fadds
movsb
adc
loope
mov
sbb
mov
sarl
leave
xchg
jl
or
jne
cs
lcall
das
scas
xor
sbb
insl
sub
push
aad
arpl
out
pslld
dec
aaa
lret
sub
sbb
jg
in
or
inc
pop
push
and
push
push
sbb
inc
shrl
mov
loope
push
out
insl
push
in
js
mov
lods
xor
sbb
es
aaa
inc
stos
cwtl
pop
cld
je
fisubl
jne
mov
mov
inc
jl
stc
xor
das
mov
add
and
test
xor
mov
sub
cmp
jl
sub
addb
pop
aas
mov
popl
fmuls
adc
jne
mov
xor
and
adc
inc
xor
cmpb
xor
pop
pop
cmp
test
adc
clc
xor
fldl
inc
repnz
inc
xor
mov
mov
call
xchg
ja
or
ret
xor
xor
xchg
hlt
repz
cmp
inc
mov
adc
lea
sti
dec
popf
ljmp
mov
adc
fmuls
fs
jge
repz
mov
sbb
sbb
mov
add
dec
rcrl
mov
shrb
sbb
cmp
cmpsb
jb
xor
movsl
mov
push
or
sahf
movsb
pop
mov
mov
push
jae
dec
repnz
imul
jnp
mov
outsb
cs
test
movsl
aaa
sbb
nop
mov
dec
int3
stos
arpl
das
test
push
je
in
pusha
jne
push
in
push
push
lock
xor
or
rclb
subb
sbbl
mov
fcmove
jmp
lret
dec
lret
sub
lret
dec
fisubrs
push
push
lret
rorb
pop
iret
ficoml
addr16
cli
adc
mov
jmp
xor
sub
xchg
xor
and
frndint
shufps
jg
pusha
js
test
mov
lock
cs
ficomps
pop
subb
adc
inc
mov
and
ror
ss
cld
dec
sbb
mov
push
xlat
pop
mov
popf
data16
sub
mov
xchg
clc
mov
dec
adc
xchg
mov
rorb
push
push
das
sbb
leave
fwait
ss
jl
dec
adc
out
inc
pop
and
adc
test
jp
inc
push
into
andl
inc
inc
std
ret
dec
pop
inc
dec
cmp
fs
das
fcomps
sub
pop
inc
cmpb
cld
lds
mov
xchg
adc
sti
aas
lret
arpl
clc
shlb
xchg
add
sub
mov
jg
outsb
mov
pop
mov
orb
add
out
ja
pop
xchg
insl
shrb
mov
pop
lds
fs
xor
nop
bound
imul
cwtl
test
inc
es
aaa
lret
xorl
addr16
jmp
lea
xchg
or
dec
outsb
xchg
dec
jbe
mov
sbb
and
lock
mov
jle
push
jge
fnstenv
inc
mov
loop
push
adc
jbe
lock
mov
fcomip
lcall
and
iret
push
ss
inc
dec
sbbb
pop
je
fcmovne
mov
xchg
in
pop
push
cs
mov
repz
pop
or
jb
incb
adc
push
push
ljmp
nop
and
imul
icebp
mov
xor
test
mov
cmp
outsl
test
out
cmpsl
jb
jns
into
or
or
ret
dec
and
pushf
addr16
loope
pop
cmp
xchg
inc
mov
push
cwtl
adc
push
or
lock
add
jp
or
jp
jecxz
cmp
sbb
imul
bound
pop
push
push
clc
hlt
daa
pop
test
mov
cmpb
mov
fwait
stos
sbb
adc
fisubrl
rcll
fists
in
sub
fcmovnbe
js
sahf
jl
push
dec
sub
mov
push
outsb
mov
jnp
adc
jnp
fildll
adc
ficompl
mov
xor
lret
adc
fwait
repz
pop
aas
jge
outsl
int3
cmpl
pushf
cmp
and
adc
testl
out
sub
inc
mov
loope
les
std
pop
jl
jae
pop
adc
adc
fnsetpm(287
mov
mov
sarl
inc
leave
cmp
out
pop
pop
and
dec
adc
into
xor
mov
fdivrl
inc
mov
or
rorl
das
mov
xchg
add
xor
in
cli
pop
xchg
mov
mov
dec
mov
push
movsl
cs
inc
stos
jecxz
push
and
jge
lea
inc
mov
adc
pusha
lods
pop
sub
roll
xlat
and
jbe
scas
rcll
adc
outsl
rol
dec
je
dec
adc
out
scas
test
pop
es
pushf
adc
pop
inc
pop
repnz
pop
mov
cmp
jmp
fsubs
hlt
clc
inc
jo
mov
rcll
jnp
repnz
xchg
dec
mov
mov
jge
je
imul
call
pop
sbb
jp
push
and
mov
push
les
sub
insb
test
jmp
int
sub
and
jp
and
sub
pop
inc
ret
add
cmp
mov
mov
xchg
pop
out
in
xchg
ror
out
xchg
push
sahf
in
mov
repnz
bound
fsubrs
adc
cmp
cmp
and
jno,pt
jno
jmp
ja
adc
mov
sub
fimuls
push
std
jl
inc
push
inc
orb
stos
test
add
sub
xchg
fildll
andl
outsl
add
and
jp
push
fiadds
ja
rcl
scas
add
das
dec
cmpsb
leave
fstp
outsb
xor
pop
push
push
shlb
daa
mov
push
xlat
inc
insl
push
or
mov
lret
fdivr
fdivrp
std
xor
mov
add
push
ret
hlt
mov
mov
stc
lock
stos
leave
mov
sub
mov
inc
sbb
pop
dec
inc
mov
bound
xor
loopne
pop
int3
mov
in
jle
or
cmp
sahf
stc
pushf
cmp
push
add
adc
ds
out
jb
mov
cmp
jo
xor
add
mov
add
jb
je
mov
iret
fdivrs
adc
mov
bswap
ja
aaa
xchg
jle
shlb
lock
and
ret
addr16
push
adc
cli
push
mov
add
cmc
mov
scas
pop
pusha
ljmp
loop
fs
fwait
adc
or
loop
mov
xchg
scas
popf
flds
mov
fsubrl
hlt
hlt
addr16
mov
and
jne
test
aad
sarl
adcl
mov
lahf
pop
negb
dec
inc
cltd
sbb
jo
pop
andl
pop
xor
push
mov
pop
push
mov
add
dec
xor
in
test
loope
pop
into
mov
jecxz
dec
sahf
inc
mov
pop
fs
mov
adc
push
mov
xchg
popa
mov
cltd
ror
out
loopne
lods
addb
fucomi
addr16
leave
ss
out
sbb
cmpsb
add
jb
mov
mov
fwait
aad
mov
and
stos
subl
insb
fdivl
pushf
in
popa
cmc
xchg
jb
cmp
aam
addl
test
stos
iret
inc
cli
jne
pop
fucomi
sar
fsubrs
jns
aad
daa
xor
adc
jl
cltd
fs
mov
clc
add
stos
sbb
push
jp
fcmovu
xlat
iret
pop
rorb
fsubl
ljmp
dec
mov
ds
adc
dec
pop
lea
insl
lds
inc
lea
fsubl
scas
adc
push
inc
lods
mov
dec
xchg
push
dec
push
add
pusha
lods
sub
sahf
rorl
sub
sbb
sbb
mov
jl
cmc
fiaddl
and
insl
mov
stos
pop
in
in
mov
bnd
cmp
sbb
xchg
adc
addr16
pop
sub
pop
cmpl
mov
rol
mov
lcall
add
std
daa
scas
icebp
nop
outsb
sbbb
and
int
xor
lock
mov
add
enter
pop
pushf
inc
shll
adc
insb
sahf
or
jle
cli
shrl
loopne
mov
sub
lret
test
jne
xchg
dec
loope
xchg
mov
stc
outsb
in
push
pop
push
xor
push
stc
in
out
push
mov
movb
out
hlt
push
lock
xchg
adc
push
fistpll
in
ficompl
sbb
js
pusha
jb
incb
movsl
mov
cld
xchg
sub
pop
mov
xchg
cltd
dec
push
cwtl
pop
repz
sub
mov
dec
mov
shll
xor
sub
cmc
xchg
add
or
lret
enter
movsl
xchg
sbb
rcrb
aaa
rorb
inc
lods
sub
mov
adc
jo
in
adc
test
cmpl
mov
test
ret
pushf
movsb
inc
push
test
loopne
pop
cmp
xor
dec
int3
sbb
das
into
pop
out
lret
iret
fwait
pusha
pop
js
pusha
lods
cmp
push
xchg
ljmp
daa
ljmp
or
push
inc
add
mov
test
cwtl
adc
repnz
push
dec
and
int
cli
inc
cmp
mov
ljmp
lret
rcr
shrb
dec
add
mov
push
jg
push
mov
sbb
add
movsb
mov
push
jl
into
fsubl
popa
jle
xchg
jb
inc
mov
mov
daa
xlat
cmpsb
fwait
aad
nop
xchg
int3
in
out
mov
outsl
out
push
xchg
sub
es
in
push
ret
das
pop
mov
icebp
cmp
cmp
faddl
mov
or
xchg
fs
shlb
rcrb
fistpl
div
std
mov
fwait
in
mov
pop
fildll
test
ss
scas
or
out
out
pop
adc
jp
mov
push
push
adc
dec
mov
lret
xchg
roll
pop
testb
ret
jl
jle
xlat
cmp
aaa
clc
xor
jmp
scas
mov
mov
dec
mov
adc
lahf
dec
cmc
adc
iret
rcrb
mulb
mov
jno
adc
jle
xchg
mov
push
rorb
jo
add
pusha
add
or
cmp
dec
sarb
jmp
icebp
fstl
mov
test
xor
cmp
stos
dec
sti
mov
movsb
or
mov
and
xchg
and
ja
cltd
mov
cmp
pop
fldcw
push
inc
je
pushf
sbb
mov
inc
add
ficompl
mov
into
aam
sub
es
mov
sub
fimuls
ffreep
cmp
pop
in
jns
popf
arpl
push
insb
pop
inc
and
lods
mov
jl
add
sahf
in
mov
fcompl
adc
fimull
xchg
push
xor
arpl
fistpll
add
xor
xchg
push
add
xchg
mov
fcomps
adc
mov
push
adc
sbb
jge
ljmp
cmp
js
jle
mov
and
pop
es
out
mov
mov
pop
sarl
mov
push
lods
mov
pop
clc
pusha
pusha
and
cmc
jp
movsb
scas
mov
outsl
ljmp
push
add
sub
leave
pusha
mov
jb
subl
sub
add
add
aaa
mov
jnp
insb
loop
dec
aad
push
push
add
ds
lock
and
dec
fists
push
fistpl
loope
iret
ljmp
xchg
jnp
jle
ja
mov
out
fcmovnu
sub
xchg
out
adc
add
adc
hlt
roll
iret
and
mov
mov
lods
adc
cmc
inc
adc
insl
dec
das
stos
aam
push
inc
dec
mov
jae
add
mov
mov
mov
fmull
and
dec
mov
jnp
rorl
ret
xchg
nop
sbb
push
sub
scas
adc
lock
jl
imul
sbb
lods
xchg
lahf
clc
ffree
int
cmp
jle
femms
xchg
adc
inc
and
outsl
lahf
pop
int
shlb
imul
enter
xchg
push
mov
stc
add
mov
cwtl
popa
add
jl
inc
sarb
sti
lcall
sub
pop
jp
xchg
inc
or
mov
jmp
and
mov
jne
jnp
and
fucomip
cmp
or
lods
dec
out
jno
mov
loopne
xchg
mov
xor
js
arpl
jb
mov
mov
pfrcpit1
pushf
inc
cmp
and
mov
mov
dec
stos
xchg
rorb
mov
push
je
mov
jmp
sub
mov
mov
gs
pop
adcb
out
scas
nop
mov
negl
mov
sub
cmc
xor
nop
shl
push
shl
mov
pop
mov
test
mov
js
mov
ret
mov
rorb
or
or
mov
out
sub
into
ret
jmp
mov
ret
add
mov
xchg
pop
mov
into
push
lock
mov
and
dec
push
dec
shlb
mov
pop
int
iret
int
cli
lret
ficomps
scas
mov
jo
xchg
out
sysenter
testl
int
mov
push
ss
lea
add
out
mov
test
push
pop
xchg
stc
stc
mov
add
enter
push
repz
in
imul
or
popa
ss
test
stos
sbb
out
mov
jae
sahf
pop
mov
dec
jb
test
mov
xor
jae
cmpsl
xchg
scas
loopne
adc
jg
jns
loopne
cmp
movsl
push
push
push
sbb
fstps
fucomp
das
movsb
aam
lret
jae
jmp
or
icebp
ret
leave
dec
jno
sbb
cmpsb
adc
pusha
fnsave
dec
add
xor
in
xchg
sahf
add
pop
insl
cmp
mov
aam
lock
insl
jmp
or
push
mov
outsl
push
inc
dec
bound
adc
iret
mov
popf
int3
mov
movsl
xchg
jae
lods
pop
inc
lods
cmovnp
jmp
roll
cs
imul
imul
inc
mov
xor
popa
call
je
dec
mov
jno
jp
xor
das
pusha
fmull
lods
mov
aad
in
cmp
pop
xchg
jle
dec
pop
mov
repz
cltd
inc
aad
test
in
bswap
jne
nop
outsb
lret
outsl
gs
xchg
jns
adc
jnp
insl
hlt
push
sbb
movsb
jns
js
xor
xchg
fwait
pop
in
test
int
or
ds
add
std
xor
push
out
adc
nop
push
aas
add
cltd
aam
jle
xchg
or
data16
movsl
cmpsl
pop
in
jnp
adc
repnz
inc
mov
bound
fdivrp
mov
ret
fwait
sub
xor
ss
jl
arpl
jmp
adc
into
dec
jl
jp
adc
lods
repz
jnp
lds
mov
mov
push
cli
adc
imul
in
jl
lret
xchg
lahf
pop
ss
lock
fs
sahf
jns
add
rol
out
push
adc
pushf
rcll
out
mov
aam
sahf
pop
mov
roll
mov
out
loope
out
jno
aas
sub
dec
mov
adc
push
xor
mov
mov
dec
orb
xor
xor
push
std
and
mov
scas
cmpsb
sub
cmp
stos
add
ret
test
and
clc
mov
inc
aam
sti
inc
outsl
cmp
pushf
add
jecxz
xchg
push
movsl
leave
xchg
int3
add
stc
mov
mov
mov
xor
sub
rorl
dec
jg
popa
cwtl
jbe
fwait
pop
pop
mov
sub
cmpsl
mov
stos
and
cltd
movsl
jbe
sbb
mov
js
jbe
lret
pop
lret
sti
movsl
fstps
popf
roll
inc
or
jae
push
mov
daa
cld
sahf
into
add
call
xchg
xchg
test
into
pop
and
in
andb
test
outsl
shll
xchg
js
test
repz
sbb
enter
int3
cmpsl
push
mov
dec
or
cmc
jb
jb
jns
sbb
movsl
xor
push
push
push
pop
mov
mov
xlat
dec
hlt
fistl
xchg
xor
jb
insl
imul
cmp
test
aaa
sarl
cwtl
adcb
scas
add
inc
cltd
xchg
xchg
cmp
out
pop
in
or
mov
cmpsb
jmp
xor
jo
inc
mov
in
or
sbb
out
push
jae
push
xchg
push
into
lods
shl
adc
imul
jle
popf
cwtl
and
jmp
push
cmpsl
sub
xlat
das
sub
decl
mov
jl
mov
popf
sbb
cs
pop
jmp
movsb
mov
jp
mov
popf
xor
psraw
xlat
stos
push
push
jmp
adc
data16
testl
xor
ret
ja
mov
pop
ja
pop
inc
cmp
test
xor
aam
addl
lods
ret
lds
mov
sbb
rclb
test
jno
dec
add
push
and
sub
repnz
sub
add
in
jmp
test
mov
mov
sub
mov
mulb
xchg
mov
addr16
sub
or
lods
mov
sbb
sbb
daa
push
rcl
loop
lods
push
cld
fisttpll
adc
push
adc
mov
mov
popa
rorl
lock
add
test
pop
mov
dec
or
sbb
stos
inc
jnp
push
xlat
push
cli
das
pop
mov
dec
shrl
cmp
aas
mov
jecxz
xchg
jnp
sarb
fs
push
ja
fnclex
sbb
jo
dec
cs
js
push
call
jle
add
mov
dec
adc
icebp
dec
xor
inc
and
scas
rolb
loop
int
jmp
dec
mov
divl
mov
outsb
sti
jbe
clc
dec
mov
mov
addl
nop
iret
mov
inc
stc
sarb
push
je
mov
cmc
pop
aad
mov
stc
sub
jns
mov
mov
mov
sbb
imul
push
dec
xchg
dec
cmpsb
rclb
adc
sbb
jg
cli
push
js
cli
mov
data16
lods
call
cld
inc
jns
je
jp
cwtl
xlat
jecxz
sub
add
pop
mov
lock
cmp
xor
stos
add
popa
mov
das
out
sub
sbb
in
scas
int3
clc
stos
dec
scas
dec
fs
sub
xchg
je
jb
and
push
shlb
or
pop
gs
outsb
xor
push
add
rcrl
mov
in
jecxz
repz
jle
and
enter
test
das
jge
jg
sub
mov
andb
mov
jnp
push
fldl
xchg
mov
sbb
pusha
ss
lret
shrl
dec
adc
adc
outsl
repz
imulb
or
jno
add
ljmp
fisubs
iret
testl
dec
xchg
mov
jb
divl
and
in
or
scas
add
jle
push
mov
test
clc
sbb
dec
and
mov
dec
ficompl
push
adc
scas
pop
mov
in
cli
outsb
daa
or
pop
sar
cmp
sbb
jne
ss
dec
and
outsl
xchg
out
jno
fnsave
enter
insl
xchg
xchg
jge
or
in
jbe
dec
add
fbstp
adc
arpl
leave
sti
movl
xorb
dec
pop
out
cmc
ret
inc
add
inc
repz
scas
jae
bound
cld
adc
neg
fyl2xp1
in
lahf
stos
mov
mov
fbstp
xor
jbe
sub
ljmp
mov
jb
test
xchg
rorl
es
inc
sub
into
dec
aam
jno
out
lahf
mov
out
mov
inc
repz
and
push
inc
pop
jle
jb
adc
test
add
int3
negb
push
and
lods
jle
mov
push
mov
and
inc
cs
jne
outsl
jns
icebp
jb
mov
push
adc
subb
push
push
in
xor
fcmovnb
jne
test
in
sub
cmp
and
fprem
lods
cmp
insl
iret
inc
mov
movsl
adc
inc
test
pop
enter
mov
imul
mull
addl
pop
test
nop
pop
dec
add
mov
jmp
mov
je
adc
repnz
inc
xor
mov
call
dec
xchg
out
jmp
bndldx
add
repz
sub
xchg
push
jo
int3
inc
shll
lea
in
movsb
fs
xor
filds
xchg
enter
or
jmp
in
or
mov
pop
jb
pop
and
pop
add
pop
test
xor
xor
pop
inc
clc
scas
mov
push
jp
test
les
mov
push
hlt
enter
popf
pop
sbb
push
pushl
mov
ja
inc
add
mov
inc
int
sub
pop
dec
in
lcall
sbb
stos
ja
aaa
xchg
mov
mov
sbb
sub
mov
jmp
icebp
rol
dec
mov
arpl
roll
add
subb
cltd
cmpsb
cmpsb
mov
inc
addr16
jne
dec
push
nop
mov
xchg
mov
out
stc
cmpsb
notb
fisubrs
sbbb
jl
jns
into
push
repz
jp
pop
arpl
imul
loopne
cmp
call
and
mov
jns
outsl
mov
stos
dec
push
cmp
sahf
xlat
push
adc
push
repnz
cld
mov
lret
fs
div
add
fcomps
int3
stos
add
iret
sub
sbb
popf
out
xchg
scas
jmp
jmp
push
in
or
icebp
ret
pop
je
mov
ret
or
test
mov
push
jnp
inc
call
faddp
cmp
pop
inc
xchg
and
aas
outsl
sahf
shrb
bound
lret
sbb
pop
movsl
rol
dec
lods
aad
mov
and
jb
push
ds
popf
pop
inc
sbbl
sub
sbb
dec
sbb
es
sub
call
stos
in
pop
mov
inc
xchg
cmp
jbe
lcall
adcb
jmp
mov
call
popa
movsb
or
mov
pop
cld
movsb
out
divb
rclb
divb
inc
sbb
adc
loop
pop
test
std
jnp
mov
xchg
fsubrs
add
cwtl
and
mov
into
outsb
mov
out
jl
into
pop
mov
xchg
mov
jbe
and
jo
adc
xor
inc
ret
lcall
cli
mov
jo
mov
sti
out
enter
mov
dec
push
cmpsb
fbstp
dec
mov
mov
rolb
orb
ret
cltd
xchg
add
mov
jnp
dec
push
inc
scas
push
cmpsl
pop
pop
xchg
dec
int
loopne
sahf
dec
stc
sbb
ja
aam
sbb
or
dec
js
les
lcall
enter
push
sbb
arpl
mov
jo
mov
or
loope
cs
fsts
pop
lods
pop
mov
cltd
leave
sbbl
jecxz
xor
push
cmp
add
pushf
xchg
je
test
xchg
sub
mov
push
sub
sbb
sbb
push
scas
lods
dec
cmpsb
add
xchg
push
mov
outsb
hlt
mov
and
push
push
lahf
push
addb
push
cmp
and
adc
and
pop
fnstsw
cmp
cmp
dec
cld
adc
adc
cmpsb
push
in
xchg
aaa
pop
daa
imul
dec
mov
fldpi
lods
jle
xor
mov
pop
add
mov
jmp
js
rcll
fildll
add
pop
sub
and
adc
sub
lahf
sbb
sbb
dec
sub
les
dec
aas
or
mov
test
adc
push
xchg
icebp
int3
lret
add
dec
sti
rcrb
js
call
sub
int3
leave
test
pop
aas
lods
mov
inc
mov
pop
push
pushf
dec
std
and
es
mov
sub
jl
sbb
cltd
mov
or
mul
adc
stos
push
or
jae
or
fsubrp
mov
ja
pusha
xor
or
jle
mov
das
xchg
push
jnp
jo
test
aaa
mov
mov
js
pop
jmp
jle
push
pop
push
pop
push
stc
cmc
or
mov
and
out
stc
loopne
mov
imul
xchg
cwtl
in
scas
test
jecxz
jae,pn
mov
cmp
inc
pop
rolb
mov
fdivrs
or
and
subb
dec
test
lret
and
jmp
rcrb
xor
mov
mov
ja
pop
out
outsl
jb
sbb
aad
int
ss
push
sub
sti
int
cmp
in
mov
sar
pop
pop
dec
orb
stos
add
loopne
in
je
mov
mov
push
scas
js
jnp
pop
fstps
and
or
xchg
dec
rcrl
sbb
sbb
stos
int3
stos
movsl
jo
jg
sbb
pushf
outsl
jmp
scas
sub
gs
inc
lds
xchg
sarl
mov
or
xchg
idivl
xlat
ret
repnz
dec
lods
aas
imul
dec
out
adc
stc
or
mov
and
push
adc
ss
push
xchg
mov
shrb
outsb
pop
ds
in
loope
mov
adc
sbb
pop
in
nop
xor
dec
sbb
sbbl
mov
pusha
daa
mov
inc
outsb
aas
push
fs
test
cmp
xorb
in
test
mov
jge
test
pop
icebp
pushf
fwait
or
jae
nop
stos
xchg
sub
xchg
add
pop
addr16
jbe
xor
push
testb
mov
out
negb
sub
dec
pop
outsb
add
pop
movsb
test
jb
in
xchg
or
or
es
es
mov
lret
loope
orb
and
cmp
mov
repz
push
loop
add
cmp
cmp
je
not
out
in
xchg
aam
xlat
or
mov
add
icebp
shrb
sarl
les
loopne
mov
adc
push
aas
xor
pop
addr16
pop
sahf
fnstsw
mov
xchg
jl
fsubl
popa
or
sbb
lcall
jge
lds
cmp
xor
jbe
jmp
lret
xchg
add
je
inc
in
ss
mov
sarl
in
pop
pop
outsl
mov
dec
jp
jbe
sbb
ljmp
fwait
insb
dec
insl
push
jl
cmpsl
xlat
xor
mov
inc
out
es
mov
pop
cmpb
daa
mov
lret
sub
xchg
shrb
mov
jecxz
adc
movd
clc
aaa
shrl
pop
mov
mov
nop
addl
xor
push
ds
mov
roll
dec
je
mov
adc
xor
scas
popf
mov
fbld
pop
sbb
dec
bound
fnstcw
sub
inc
pop
pop
daa
pop
push
daa
or
xor
sub
mov
cmpb
aam
xor
test
mov
shll
mov
dec
mov
mov
push
repz
in
cwtl
pop
fdivs
lret
cld
int3
stc
cwtl
sub
mov
out
jecxz
push
jg
sub
push
idivl
fcmovb
and
adc
mov
aaa
aad
addl
mov
decl
jae
mov
imul
pop
shrl
outsb
mov
push
mov
ja
adc
out
dec
mov
cmp
mov
loop
hlt
enter
rcrl
std
jg
dec
out
fucomi
xchg
mov
or
xorb
test
xchg
roll
mov
es
sub
fdivl
dec
enter
cmpsl
icebp
gs
popf
sbb
pop
sbbb
test
out
in
dec
test
out
and
lret
rol
or
call
icebp
xor
dec
fstl
mov
jae
imul
jle
sbb
inc
push
pop
iret
frstor
cmp
cmpsb
int
xlat
mov
scas
insb
gs
scas
bound
das
and
fs
push
out
lea
pop
repnz
xchg
xchg
push
xor
push
nop
sub
push
incl
movsl
pop
jae
inc
push
mov
ficoml
pop
ficoms
fs
pop
jp
popf
mov
ret
dec
mov
xchg
enter
fwait
push
sub
clc
bound
add
cmpsb
xchg
inc
xchg
outsl
adc
aam
mov
inc
imul
inc
inc
sbb
in
sub
mov
adc
pushf
jnp
aad
xchg
or
imul
in
add
call
popf
sahf
ret
out
fdivp
push
addr16
in
jecxz
dec
sbb
stc
mov
sub
stos
nop
aad
aam
pushf
lds
dec
mov
pop
pop
fstpt
xor
rcrl
mov
subb
imul
mov
push
jecxz
cmpb
iret
cmp
push
push
pop
jae
in
xor
rclb
scas
cld
cltd
fmuls
xlat
xchg
fcomps
mov
sbbl
mov
mov
mov
mov
imul
clc
add
sbb
cmpsb
addl
jne
shll
cmp
or
sahf
popa
lds
mov
clc
push
nop
and
outsb
in
sub
adc
pop
add
std
shrl
das
and
aad
push
inc
loopne
mov
fsubl
or
push
mov
cmpsl
inc
sub
scas
js
mov
jo
xchg
xchg
cmp
lods
dec
inc
mov
in
pushf
popf
dec
or
xchg
mov
aaa
hlt
pop
movsb
je
inc
push
bound
and
and
insl
xorb
pop
add
pushl
pop
sub
test
cmc
pop
test
sbb
sbb
test
test
jbe
cwtl
dec
sbb
jle
cmp
or
or
mov
in
or
or
aam
dec
sub
imul
sub
andl
lock
xchg
fists
cmpsb
xor
jo
or
add
pop
insb
inc
outsl
aam
mov
xchg
cld
insl
mov
xor
rolb
outsl
xchg
cmc
mov
stos
push
movsb
mov
insb
sbb
add
cs
inc
lods
dec
lcall
outsl
mov
mov
out
jmp
shr
dec
inc
pop
dec
int3
jmp
movl
in
call
pop
imul
lcall
jecxz
mov
std
dec
adc
dec
dec
iret
jl
dec
imul
cmp
and
sbb
lret
or
and
punpcklbw
int
jge
popf
fwait
sahf
dec
ret
push
mov
mov
sahf
pop
lods
jbe
sahf
mov
loopne
rorl
jne
jb
jl
imul
fs
inc
push
adc
rol
mov
sbb
test
cmp
jne
in
nop
ds
mov
jge
xchg
push
lea
jns
ret
leave
pushf
pop
daa
dec
aaa
dec
xchg
adc
pop
ret
mov
pop
mov
jae
clc
call
test
dec
out
loop
stc
fdivp
stos
icebp
pop
icebp
add
inc
leave
mov
jns
icebp
dec
adc
js
xor
or
mov
shrl
das
imul
daa
xor
jl
push
lret
fwait
xor
rclb
addr16
out
lock
mov
xor
jne
pusha
cs
rolb
pop
idivl
ds
das
mov
call
mov
sahf
jle
push
xchg
fldcw
aas
fnsave
xor
lea
in
jno
je
jae
int
inc
sbb
mov
stos
dec
fstpl
fnstsw
sub
stos
fadds
aas
mov
pushf
sbb
mov
mov
popl
inc
test
push
cs
mov
jp
divl
sti
cwtl
sub
push
or
mov
sub
test
adc
orb
adc
repz
sub
ja
ja
push
int
cld
gs
cmpsb
mov
jmp
hlt
mov
aad
mov
adc
mov
dec
leave
sarb
iret
cltd
sti
mov
stos
test
fisubl
cld
push
arpl
in
je
clc
addr16
dec
stos
and
and
lds
xor
push
xchg
lret
mov
inc
jb
cmpsb
setb
push
fsubl
cmpsb
cmp
cmpl
push
js
push
hlt
lcall
lods
outsl
lahf
pop
jl
or
mov
leave
popf
jo
jbe
jmp
or
cltd
mov
jge
out
lcall
xchg
xchg
lcall
xchg
data16
xchg
jecxz
cmp
sub
cmp
inc
cmpsb
inc
bound
jb
cmp
mov
adc
add
lea
in
mov
imul
shlb
ja
test
jno
pushf
inc
fs
or
orb
add
xor
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
pop
