push
call
ret
ret
sbb
loope
es
or
and
ljmp
cmp
out
pop
call
into
scas
lcall
pop
pop
jbe
inc
cmp
mov
pushf
push
enter
fdivrs
and
mov
popa
xchg
or
sti
fisttpll
inc
mov
and
sbb
mov
dec
fs
test
fisubs
loope
xchg
push
push
push
jne,pt
ficomps
cltd
jne
push
out
sbb
inc
mov
jnp
xchg
xor
int
jnp
popa
xor
rolb
sbb
nop
je
add
loopne
cmp
stc
out
pop
xchg
js
inc
or
adc
shll
insb
out
adc
lret
lds
ss
and
lock
lods
cmc
xor
dec
inc
ljmp
sbb
pop
stc
jmp
or
daa
inc
or
arpl
ret
inc
movsb
arpl
jl
in
adcl
inc
fidivs
adc
sub
hlt
dec
xchg
pop
sbb
xchg
cmpsb
jmp
imull
pop
inc
xchg
jmp
add
push
pop
bound
imul
pop
mov
imul
cwtl
or
sbb
xor
das
leave
shrl
push
mov
shrb
sbb
icebp
cmp
or
jecxz
cmp
das
cmp
subb
sub
popf
movl
push
repz
fcoml
push
dec
xor
xor
pop
out
inc
mov
insl
and
div
sbb
or
cmp
inc
add
and
subb
sbb
lods
in
out
cmp
mov
jecxz
fcoms
xor
mov
sub
arpl
test
mov
sub
popf
push
insl
cmp
sub
jb
sbb
cmp
les
out
mov
bound
push
xchg
clc
sub
adc
repz
loop
add
dec
dec
add
repz
fldenv
cmp
xchg
test
xchg
sarl
dec
lods
int
mov
mov
ljmp
ss
push
lcall
push
adc
ror
test
mov
add
hlt
mov
mov
ret
inc
dec
xchg
and
pop
sbbb
popa
out
nop
mov
stos
push
mov
adc
add
mov
daa
test
pop
and
inc
into
inc
repz
xorb
cmp
ficomps
pop
mov
adc
jg
push
jle
dec
xchg
lea
in
lret
inc
dec
ljmp
adc
daa
call
xchg
sahf
rorl
sub
xor
add
fst
mov
aam
or
ret
fldl
push
adc
pop
popf
gs
in
scas
enter
pop
push
addr16
mov
mov
and
cmc
pop
ret
add
lret
mov
sub
sub
call
push
neg
xor
orb
dec
adc
fsubrl
mov
aas
bnd
call
xlat
or
sti
push
mov
pushf
push
adc
lea
pop
inc
pop
add
mov
loopne
sbb
enter
loope
cwtl
out
jecxz
sbb
and
int3
int3
iret
stos
sub
cmp
hlt
sbb
sbb
roll
adc
pusha
mov
sbb
inc
push
inc
movb
xor
xchg
mov
xor
nop
lret
xlat
fwait
xor
aaa
mov
xchg
push
es
or
sbb
cld
jle
iret
add
iret
repz
adc
xor
clc
int
lret
mov
or
lods
jns
xchg
cmc
push
push
dec
lahf
rcll
mov
stos
out
xchg
or
fwait
and
ja
ss
xorl
js
push
repz
mov
mov
jbe
pop
lods
pop
xchg
sbb
cmp
mov
out
dec
lcall
mov
loopne
xchg
jp
outsb
fimull
jmp
push
js
jae
mov
stc
jo
sub
lds
out
loope
movl
pop
xor
or
mov
pop
add
or
pushf
pop
cmp
int
xor
add
nop
movsb
jbe
xor
inc
add
pop
lahf
xor
sbbl
rorl
scas
sbb
sahf
dec
adcb
es
and
fdivr
loope
sahf
leave
xchg
fisttpl
rol
push
and
add
jno
out
ljmp
jae
movsl
jmp
adc
cs
jne
hlt
outsb
jae
cld
dec
clc
movsb
xor
in
andb
push
pop
and
hlt
cmp
inc
cltd
mov
or
or
dec
push
mov
fwait
jbe
ja
orb
push
sti
xor
sub
jle
mov
jl
in
xchg
arpl
clc
stos
xchg
in
dec
or
in
xor
int
xor
sub
jb
aam
pop
add
clc
js
pop
in
test
jnp
stc
sbb
out
adc
mov
stos
mov
call
pop
daa
inc
mov
roll
arpl
jmp
xchg
or
push
inc
xchg
and
and
ret
pusha
cmpsl
jnp
mov
mov
inc
mov
std
mov
or
dec
push
ja
dec
and
shlb
sbb
adc
push
add
ret
int3
int
xor
push
jne
in
adc
jmp
xor
jno
pop
lcall
addr16
ror
out
xchg
divb
pop
ljmp
cmp
jmp
cltd
jnp
adc
inc
fs
popa
inc
pop
cld
imull
adc
sbb
sbb
inc
inc
cld
ja
das
dec
rcr
insb
xchg
mov
sub
and
std
mov
mov
jae
bound
xchg
mov
dec
adc
push
pop
and
mov
adc
push
or
mov
push
pop
enter
cmp
leave
in
and
push
pop
aas
in
stc
outsl
cld
aam
mov
lock
sub
xchg
data16
pop
mov
and
pusha
ficomps
popa
je
xor
or
dec
repnz
sub
test
int
jno
lret
insb
jecxz
lds
jb
dec
push
cmp
hlt
mov
nop
inc
jno
jl
adc
les
push
out
mov
test
addb
orb
mov
or
scas
pushf
dec
sbb
cltd
test
popa
movsb
and
out
jns
xor
xor
push
fimull
orb
mov
fsubp
or
std
jp
and
xor
adc
test
pop
arpl
xchg
cltd
movl
repz
fs
push
inc
push
pop
pop
into
stc
in
inc
sarl
test
mov
adc
scas
sub
or
sub
push
leave
adc
dec
div
cmp
sti
xchg
add
testl
rcl
push
cmp
sbb
repz
push
out
add
in
pop
je
add
pop
popf
inc
xchg
int
stc
mov
push
sbbb
add
mov
ss
add
scas
pop
fiaddl
in
ja
dec
jb
mov
push
or
jmp
and
out
mov
jp
push
js
dec
ss
or
rclb
das
jns
push
and
fildl
pop
dec
jmp
ret
pusha
js
scas
out
sub
mov
xchg
aas
stos
loop
subl
sbb
lds
std
movsb
notb
stc
cmp
in
and
cmp
jp
out
xchg
cld
pop
xlat
fsts
out
cs
addr16
cmp
sbb
jge
xor
icebp
pop
in
shr
mov
call
xor
jnp
mov
negb
sub
push
std
outsl
adc
out
inc
cltd
xor
faddl
mov
xor
xchg
xor
mov
inc
xlat
shl
clc
iret
jno
outsb
shr
mov
mov
stos
lahf
aam
clc
or
dec
cmp
cmp
loop
out
fadd
daa
adc
xchg
sarb
mov
fcompl
cmp
add
aad
cmp
pop
shll
dec
dec
mov
lods
dec
push
inc
pop
xchg
daa
push
add
push
xor
aad
sarl
add
mov
fidivrl
add
adc
fst
dec
pop
pop
scas
mov
je
mov
push
loopne
pop
mov
sahf
mov
add
jne
or
push
jge
cmpsb
or
pop
inc
dec
divb
or
mov
mov
mov
dec
fsts
movsl
xchg
add
mov
into
out
pop
repnz
adc
push
daa
aad
lods
add
jne
sub
in
and
int
fwait
or
jnp
insl
or
adc
lods
test
pop
xor
dec
in
xchg
std
imul
outsl
cmp
pushl
inc
aad
jnp
xor
loope
sub
pop
pop
ret
sahf
push
adc
lock
cmp
mov
loop
jl
int
mov
push
rcr
aam
call
cmpsl
dec
sbb
and
aaa
addr16
ficoms
cmp
pop
xor
ret
std
sbb
pop
icebp
ss
pop
ret
jmp
out
ljmp
or
jmp
std
jl
and
pop
xchg
sub
aas
filds
push
aad
or
push
dec
jle
insl
add
mov
mov
fsubrs
imul
adc
fidivrl
icebp
cmp
dec
mov
shll
push
add
xchg
rclb
xlat
or
fstp
insl
int3
pop
cmp
mov
testb
aam
insb
jp
lods
add
xlat
test
int3
jno
adc
inc
xchg
xchg
out
sub
sahf
add
lahf
sub
adc
lock
dec
scas
mov
out
mov
pop
sub
jle
mov
sbb
mov
inc
and
jg
out
shrb
cmpsb
add
jl
cmc
test
mov
push
and
arpl
in
sbb
jmp
mov
sbb
ror
xlat
jbe
and
inc
or
dec
and
and
lock
xor
cmpsb
shrb
jl,pt
jnp
pcmpeqw
push
nop
faddl
rclb
sub
lcall
pop
decb
xor
jns
ds
pop
push
xor
and
xor
cwtl
ljmp
js
mov
mov
hlt
or
in
aas
xchg
fmull
rcrl
xchg
sbb
cmc
add
cmpsl
out
scas
xchg
mov
dec
and
fdivr
test
mov
push
fistpl
push
xchg
cltd
sub
jecxz
fistl
mov
cmc
test
mov
les
nop
out
jmp
push
sbb
popf
jb
ss
cli
pop
push
pop
movsb
jle
and
in
dec
push
lds
and
add
jns
enter
cmpl
lret
mov
ds
push
pop
xchg
xor
ss
mov
jmp
cwtl
ja
movsb
in
lds
jo
in
pop
dec
pop
push
mov
xchg
aam
pop
push
cmp
mov
push
dec
mov
repz
clc
aas
je
rep
insl
inc
sbb
out
jae
mov
sti
out
mov
adc
and
outsb
rolb
pop
pop
push
pcmpeqw
ret
inc
outsb
shrb
inc
adc
inc
cmp
out
ss
iret
dec
jle
inc
int3
repnz
mov
ret
pop
mov
insb
push
arpl
cmp
cwtl
in
adc
ja
jge
icebp
sti
jmp
mov
cmc
dec
and
and
ret
xchg
sbb
lret
jnp
mov
sbb
out
fdivrl
add
daa
stos
push
mov
test
stos
ja
roll
ret
xchg
stc
aad
outsl
out
test
lds
sbb
inc
fs
jbe
add
add
sahf
push
mov
dec
mov
outsb
fwait
testb
outsb
fiadds
incl
sub
cmpsl
or
mov
cld
test
je
lret
and
int3
mov
sbb
stos
pop
pop
stc
outsb
cmpsl
cs
adc
ljmp
cld
mov
mov
in
fwait
cmp
movsb
jae
jnp
xchg
bound
movsb
xor
shrb
out
ja
sbb
addr16
and
sahf
dec
add
adc
sub
pop
cmp
lods
sbb
cltd
stos
test
sbb
cmpb
lret
mov
inc
pop
inc
ret
inc
cmc
shl
es
xchg
mov
icebp
cmp
or
xchg
bound
mov
sub
mov
mov
popf
in
xchg
lock
stos
jno
xor
adc
arpl
shrb
out
push
inc
leave
push
ss
movsl
add
and
mov
xor
xor
cmp
add
outsl
repz
fiadds
jbe
inc
or
dec
scas
xor
sub
mov
cmp
punpcklbw
adc
bound
jge
sbbb
pop
arpl
das
and
fimull
and
mov
cmpsb
test
pop
mov
push
xchg
push
sub
shrl
mull
mov
xchg
imulb
mov
mov
orl
mov
fdivl
xchg
sahf
popf
addr16
add
movsb
sbb
aaa
xchg
sbb
pop
mulb
or
insl
cli
add
xor
sbb
sbb
sub
mov
sbb
repz
inc
xor
in
aaa
mov
ja
loop
call
jbe
fisttps
stos
jb
pusha
push
pushf
mov
adc
pop
sub
into
popa
sub
xchg
int
outsl
out
out
or
inc
in
xor
pop
ret
add
jmp
jns
aaa
jg
test
inc
mov
ljmp
into
or
xor
mov
cmp
adc
sbb
mov
cwtl
pop
inc
jb
dec
sub
jno
out
xchg
xor
adc
test
pop
cltd
and
push
outsb
movsl
jle
lcall
fstl
sbb
jge
and
enter
dec
push
mov
stos
icebp
loop
mov
inc
adc
in
push
popf
dec
addb
jge
out
mov
in
popf
sti
mull
add
sub
fisubrl
jecxz
loope
xlat
out
inc
lds
adc
sbb
xchg
sub
mov
jnp
add
arpl
mov
stos
lahf
sbb
mov
sbb
push
stos
push
popa
xchg
popa
scas
mov
outsl
mov
pop
jbe
repz
ret
movsb
mov
mov
jnp
gs
cli
lods
notrack
cmp
cltd
lods
cmpsl
ja
mov
xchg
leave
or
dec
std
jbe
jp
inc
dec
pusha
out
adc
cmc
push
mov
mov
or
jbe
sbb
mov
sahf
outsl
xchg
scas
push
ret
addr16
and
inc
jmp
and
xchg
sub
dec
adc
cmc
faddp
fldt
mov
insl
xor
pop
movsl
out
pop
sub
cmp
xor
and
pop
mov
ret
sbb
pushf
addb
push
mov
stc
adc
push
jne
cmp
into
popf
mov
dec
lea
test
cmp
movsb
sub
adc
xor
and
sub
sub
aam
lret
dec
sbb
mov
repz
incb
pop
pop
adc
cmp
arpl
cmpsb
or
loopne
loope
fdivs
sub
js
sti
fsubl
push
cmp
fs
push
mov
leave
shl
ffree
jnp
push
push
push
xor
cmp
lcall
loopne
movsl
in
xchg
lret
push
push
lods
xor
fistl
arpl
xor
add
andl
lods
jo
cmpl
lds
sub
jne
or
shlb
daa
or
jmp
mov
aaa
iret
and
sbb
mov
push
inc
xchg
stos
enter
in
in
mov
stos
sbb
push
xor
ss
ljmp
mov
cmc
das
or
push
ret
mov
sub
cmpsb
xor
dec
int
mov
mov
mov
push
aam
jp
cltd
and
cmp
push
jbe
and
repnz
push
mov
stos
mov
mov
mov
mov
fldcw
sub
inc
les
idivl
int
or
lea
popf
les
and
pop
insb
mov
je
or
outsl
icebp
mov
adc
inc
cwtl
sbb
popl
mov
xor
mov
out
sub
cmp
test
scas
push
cmpb
rcrl
fsts
lock
xor
sbb
jge
xchg
cmp
mov
mov
mov
pop
inc
sahf
jae
sub
xchg
outsb
mov
adc
stos
hlt
and
sbb
pop
int
cmp
or
xchg
cmp
rol
ljmp
inc
jne
cmpsb
sub
mov
pusha
popf
in
mov
je
insb
aam
jp
sarb
call
leave
inc
lods
and
push
in
mov
sbb
jno
roll
xchg
or
cltd
jmp
dec
fwait
sub
cmpsl
lds
fwait
orl
test
in
sbb
mov
mov
dec
loop
pop
cmp
icebp
push
pop
js
sub
jne
xor
and
aaa
mov
or
int
das
pop
mov
test
dec
mov
hlt
pop
es
div
fsubs
push
fldenv
popa
sbb
cltd
inc
dec
xchg
mov
sbb
out
adc
add
xchg
push
inc
les
dec
enter
sub
push
mov
jecxz
sbb
jmp
notl
ffree
mov
sub
mov
add
mov
push
insb
out
push
dec
jl
ljmp
ss
rclb
addl
nop
mov
adc
out
xchg
loopne
adc
lahf
dec
xor
sbb
dec
and
shrb
sub
xlat
inc
dec
mov
add
aaa
aaa
enter
pushf
dec
or
enter
aaa
inc
jae
mov
mov
aas
jmp
in
lcall
sbb
jle
mov
jmp
sub
inc
pushf
push
push
push
jne
ficoml
mov
in
mov
or
lods
enter
push
sub
jge
fisttps
mov
pop
fs
push
inc
stos
imul
into
jmp
pop
mov
mov
mov
scas
dec
mov
ror
push
adc
stos
bound
punpckldq
and
push
xlat
outsb
sub
clc
lret
jge
jle
push
xchg
xchg
xor
mov
test
jne
je
test
mov
insb
cmpsb
jns
push
je
mov
in
lods
adc
in
sub
repnz
aaa
hlt
push
orl
sub
std
xor
sub
icebp
dec
fdivrl
mov
es
int3
adc
inc
xor
mov
fsub
add
das
jle
aaa
dec
sbb
ss
sbb
dec
movsl
outsb
dec
cmpsb
adc
push
shll
cmp
mov
mov
fdivr
out
fcompl
loopne
clc
xchg
es
pushf
es
dec
test
or
cltd
cmp
mov
dec
dec
aad
fnstsw
inc
xor
jbe
sub
adc
int
push
inc
imull
or
sub
pop
lods
in
sub
push
mov
testb
in
cmp
and
sbb
add
cli
insb
in
lock
mov
mov
loope
mov
and
xor
cmp
es
in
test
pop
ja
push
mov
std
sub
adc
push
lea
dec
fsub
or
or
out
pop
cmp
dec
push
ret
sbb
jne
mov
dec
lcall
aam
and
push
and
leave
jg
mov
js
es
notl
mov
xor
pop
lret
aaa
adc
mov
xor
mov
je
pop
sub
rorl
repz
sbb
insl
xchg
cmp
jnp
sub
sbb
xor
add
pop
jge
mov
js
in
lock
lock
and
pop
mov
add
inc
pop
ds
jmp
cmp
inc
fwait
mov
mov
push
ror
or
mov
mov
rcrl
and
lahf
pop
mov
xchg
addb
mov
lods
lret
xlat
sub
pushf
mov
bound
sbb
cmp
cmp
xchg
stos
or
sbb
insl
and
dec
cmp
stos
int
fwait
mov
xor
or
lods
dec
and
xchg
dec
divl
ja
bound
mov
aas
in
cs
sbb
fisttps
test
decl
cmp
inc
insb
pop
rclb
add
sahf
cmpsl
xchg
add
jnp
inc
push
mov
inc
mov
lahf
jo
dec
sbb
inc
xor
xchg
ja
sbb
rol
mov
mov
mov
lret
movsb
jle
and
bound
outsl
push
jg
cmc
imul
sub
push
adc
jp
movsb
sub
cld
pop
movsl
test
jae
mov
inc
adc
push
das
addr16
aam
cltd
jle
scas
sub
jno
das
iret
mov
mov
shlb
dec
push
ret
add
jbe
dec
xor
leave
stos
push
hlt
inc
in
stos
mov
fisubl
jecxz
stos
jecxz
mov
lcall
mov
jb
push
add
mov
call
test
in
enter
xchg
lcall
xor
je
jp
xchg
adc
clc
xor
rcrb
mov
aas
cmp
xchg
fcmove
cwtl
in
test
jecxz
das
dec
test
mov
sub
fs
outsb
push
mov
push
sbb
mov
pop
mov
xor
jmp
pushf
imul
pop
lahf
mov
xchg
fwait
xchg
mov
sub
mov
mov
push
dec
popf
js
lahf
movsb
sbb
add
jmp
jno
dec
iret
pop
pop
pop
pop
add
jle
mov
inc
or
or
fisubl
and
lea
fdivr
adc
cwtl
or
cmp
les
fdivr
das
js
sbb
fldl
cmp
aas
insb
sbb
dec
push
mov
imul
jno
outsl
inc
cmpl
lods
leave
test
xor
adc
or
in
add
sbb
stos
push
sbb
xor
jo
push
cmp
push
adc
mov
mov
ja
iret
aas
mov
mov
rcll
out
jo
andl
cltd
jns
loop
mov
popf
in
inc
sbbl
inc
setge
shlb
pop
daa
and
loop
call
ret
movsb
addr16
lret
sub
cmp
js
mov
add
sbb
movsb
lods
imul
pop
mov
xor
sahf
jecxz
outsl
push
movsl
cmpsb
mov
jb
jg
jecxz
flds
cmpsb
mov
mov
jae
std
push
pushf
dec
sub
mov
sarb
push
xor
insl
push
xor
jle
pop
or
test
sub
cmp
sub
mov
xchg
adc
std
imul
mov
jge
inc
pop
add
xor
std
rcl
jmp
leave
push
mov
sahf
jo
inc
mov
jge
mov
xchg
dec
sbb
addr16
orl
add
adc
push
xor
jns
cmp
shl
sub
push
cmp
pop
pop
and
out
jle
fmuls
ss
mov
sbb
sahf
arpl
mov
add
add
cmp
faddl
mov
push
mov
add
mov
scas
repnz
adc
gs
or
fwait
sahf
inc
cmp
ss
fldenv
mov
fisubrl
out
or
pop
jae
jg
out
fldt
cmp
sti
add
or
dec
loope
sub
idivb
imul
out
xor
xor
out
loopne
nop
flds
aam
cltd
and
imul
imul
jb
mov
pop
orb
cmp
mov
arpl
movsl
adcb
cmp
add
push
mov
and
lahf
push
call
xchg
int
xchg
ret
mov
lods
int
cmp
xchg
int3
jne
mov
pop
shrl
in
icebp
pop
loope
mov
call
or
leave
sahf
mov
test
into
cmp
jne
mov
outsl
imul
pop
push
mov
xchg
aaa
mov
movsl
incb
mov
cld
adc
mov
cwtl
inc
cmpsb
xor
xlat
push
decb
or
imul
jecxz
int
xchg
push
outsb
xchg
call
mov
xor
push
mov
jns
insl
and
shl
push
xchg
insl
inc
jecxz
xchg
pop
mov
sub
movsl
icebp
pop
xor
int3
ret
out
shl
data16
xchg
xor
dec
rcrb
jmp
and
sarl
fildll
cmp
inc
sbb
in
js
rcrb
cmp
jp
add
cmp
loope
rol
outsl
mov
xchg
clc
stc
scas
dec
adc
jnp
movsb
mov
sarb
push
xchg
xor
mov
pushf
mov
inc
fidivl
push
test
mov
mov
xor
mov
sti
xchg
ret
sub
adc
aam
aas
icebp
mov
cmp
mov
lea
in
add
hlt
shrb
cmp
jo
addr16
xor
and
push
es
inc
add
inc
xlat
nop
push
sbb
cwtl
lcall
and
or
in
cmpsl
out
jg
mov
jno
pusha
push
pop
adc
in
pop
test
lret
xchg
push
mov
cltd
mov
out
inc
pop
pop
push
ret
sub
outsl
cmpsl
jl
addr16
pop
add
mov
lock
pushf
ficomps
xchg
sti
push
xchg
scas
adc
push
pop
aas
daa
ljmp
pop
add
adc
lock
push
dec
and
jnp
and
scas
test
out
lods
test
lret
xchg
adc
dec
jg
test
sub
lret
call
xchg
mov
pusha
aad
out
shrb
add
stos
cmpsb
cwtl
imul
inc
push
aas
mov
shlb
mov
cli
xchg
sub
mov
popa
adc
mov
push
hlt
adc
addl
lcall
test
push
scas
ja
inc
mov
sub
enter
dec
cmp
add
dec
imul
mov
push
or
adc
cli
mov
mov
mov
sbb
jg
xchg
in
fisubs
mov
sbb
outsl
mov
rcrl
inc
data16
fistpll
push
fwait
shll
lock
xor
stc
mov
push
mov
bnd
lds
call
rep
fldenv
call
push
mov
pop
inc
mov
arpl
aad
std
shl
enter
jbe
add
stc
pushf
es
icebp
jbe
aad
icebp
test
popa
dec
mov
dec
rcr
fs
cmc
sbb
push
test
scas
mov
xor
pop
into
and
hlt
imul
inc
inc
fldt
jle
fcomps
test
pop
inc
inc
pusha
cmpsl
dec
adcl
addr16
popa
add
dec
mov
cmp
pop
cwtl
adc
pusha
iret
inc
xor
lea
test
jns
cmp
shr
addr16
jb
outsb
popf
add
test
sarb
push
popf
push
sti
mov
mov
ret
cmc
fwait
push
ret
xchg
fimull
jecxz
jecxz
scas
jne
cmp
neg
mov
outsl
push
mov
bound
mov
jmp
cwtl
test
loope
cltd
or
enter
fcoml
adc
inc
in
sbb
xchg
lods
sub
mov
lea
sahf
dec
push
dec
or
or
jns
mov
push
jne
test
arpl
xor
sbbl
ja
dec
aam
and
mov
xchg
rorl
mov
xchg
in
sub
or
inc
mov
mov
outsb
out
mov
or
into
inc
dec
pop
cmpsb
xchg
nop
hlt
daa
xor
pop
ret
xor
sbb
mov
dec
or
add
dec
jb
orl
inc
pop
and
cmpsb
inc
mov
pop
mov
cmpsb
cmp
mov
sbb
jne
xor
cmc
pop
or
nop
cmpsl
mov
shlb
daa
adc
sbb
sbb
cltd
lds
mov
in
adc
aam
or
cmp
aam
jmp
cltd
nop
sub
faddl
xor
sbb
or
xor
rcl
mov
sbb
shlb
lods
adc
push
dec
inc
lods
bound
or
mov
or
push
cmp
pop
and
push
out
push
inc
aad
jmp
inc
fimull
mov
jno
loope
in
mov
daa
inc
xlat
addr16
fisubrl
scas
mov
neg
sub
les
sbb
mov
gs
jge
push
sub
push
repnz
mov
xor
cmpsl
mov
jg
lods
and
sub
rcrb
jl
pop
popf
xchg
sub
xor
jg
jb
mov
cmp
xchg
xchg
aaa
nop
mov
sub
std
xchg
dec
jno
mov
inc
mov
lcall
or
jge
xchg
outsb
mov
dec
sbb
ds
or
stos
or
jecxz
xchg
mov
pop
cmp
push
pop
mov
pop
jo
addr16
mov
hlt
xchg
loopne
xor
mov
mov
lods
xlat
loopne
jb
pop
mov
xchg
je
mov
cltd
out
pop
mov
imul
sub
pop
mov
ss
aaa
push
lcall
jle
call
and
inc
push
adc
jl
cmpsl
rcrl
mov
lret
mov
and
or
jne
or
jmp
popa
pop
inc
sub
je
mov
sbb
jl
jnp
cmpsb
test
outsl
out
pop
stos
mov
mov
mov
inc
cwtl
cmc
xchg
mov
adc
insb
push
rcl
cmp
sub
cmp
sub
and
push
int3
jnp
add
out
jge
test
loope
in
outsl
int
jnp
jne
scas
sub
xlat
test
mov
xchg
cwtl
mov
fistpll
cmp
pop
push
shll
sub
popa
mov
adcb
std
cmp
cld
lret
lahf
movsb
cmpsb
roll
rol
pushf
sahf
repz
rolb
insb
pop
fcmovnu
hlt
dec
rcr
ljmp
repz
hlt
loop
lods
incl
cmp
push
les
jmp
fdivp
std
lock
dec
cmp
mov
cli
mov
ja
push
mov
fnstsw
xchg
xchg
jb
imul
addb
cld
lock
je
add
xor
or
jns
and
lret
lret
and
in
imul
add
and
stos
cs
ret
icebp
ds
sub
hlt
xchg
or
inc
mov
mov
dec
or
out
add
push
mov
les
push
and
mov
and
shll
jle
sbb
adc
inc
pushf
sbb
or
sbb
xchg
xor
jnp
add
rorl
rcrl
jg
lret
or
pushf
in
mov
dec
cmp
enter
fdivr
or
sub
imull
pop
pop
sub
rclb
stc
arpl
in
std
into
fmull
and
cmp
in
fildl
clc
push
cmpsb
stos
mov
test
cmc
insl
cs
sub
arpl
fs
fs
fistl
test
stc
fisubrl
aad
nop
adc
pop
call
shr
sub
xchg
not
jp
pop
push
in
icebp
sbb
add
fisubrl
enter
out
mov
mov
mov
mov
cmc
adc
mov
jns
roll
into
pop
cmpb
pop
lods
fst
jb
aam
lods
pop
push
into
mov
out
popa
andb
lcall
sbb
sub
xor
outsl
pusha
xor
repnz
xlat
fs
je
pop
mov
test
ja
out
jp
ljmp
fidivl
js
xchg
in
push
push
mov
cmp
call
movswl
ds
sbb
mov
fldl
add
mov
es
jl
fcoms
outsw
leave
cmpsb
and
adc
sub
sub
and
insl
or
adc
movsb
add
jmp
mov
cmp
pop
jo
push
ret
dec
jne
cwtl
int
xor
pop
jl
inc
ror
subb
cmpb
scas
xchg
in
sbbb
mov
clc
and
fiadds
sbb
sbb
loopne
std
push
insb
fwait
popa
cmpsl
es
fldt
movsb
jmp
sarl
push
xchg
cltd
ja
flds
mov
jle
mov
nop
fs
mov
pop
push
jno
mov
leave
outsl
xor
sahf
dec
sub
sub
mov
rcll
cmp
loopne
inc
movsb
jecxz
ds
insb
pop
mov
jbe
pop
fdivl
mov
clc
mov
fsubs
and
sub
inc
xor
mov
cmp
push
mov
adcl
cmp
pushf
jb
mov
cli
adc
push
adc
subl
sbb
fdivrs
mov
or
sbb
movsl
mov
jae
adc
data16
xchg
or
nop
mov
adc
addr16
and
pop
push
add
adc
adc
movsl
bound
movsl
or
jno
scas
jns
movsl
test
add
and
xchg
out
ficompl
xchg
xor
out
pop
pop
scas
or
rolb
mov
pop
stc
insl
inc
or
sub
inc
push
in
cmpsl
imul
call
mov
lahf
cmp
imull
mov
lahf
movsb
cmp
and
xchg
fstps
lock
mov
pop
xchg
hlt
dec
enter
int
aaa
mov
add
sub
lcall
test
dec
in
pop
out
notl
jae
pop
and
enter
push
lcall
daa
ret
loop
subl
je
mov
mov
sarb
xor
inc
mov
out
cmp
add
dec
or
scas
push
jns
mov
mov
jbe
mov
fwait
push
movsl
jl
repz
iret
imul
xchg
dec
imul
ljmp
fnstsw
inc
mov
gs
nop
hlt
xor
gs
xor
pop
add
ret
jle
mov
xchg
dec
aad
mov
mov
sub
xor
sahf
rcrb
xchg
pop
sbb
adc
mulb
mov
push
lcall
adc
dec
sbb
jp
out
ret
push
and
out
stos
push
jo
pop
xchg
sub
loopne
ljmp
stc
add
xchg
pusha
out
sbbb
mov
inc
scas
lcall
add
cmpsl
xor
mov
idivl
andl
fldenv
inc
stos
fs
mov
and
or
fsubrl
xlat
ljmp
dec
or
jg
inc
cld
sbb
popf
pop
add
push
jge
cmp
loopne
in
and
mov
jge
enter
subb
mov
xor
in
jle
das
cmp
sbb
fwait
add
mov
push
rorb
xchg
fwait
xor
mov
cwtl
push
xor
mov
jae
mov
jnp
das
pop
sbb
xchg
ss
nop
sub
xor
cli
fnsave
popa
jmp
lea
pop
out
inc
jno
test
cli
lahf
mov
xor
lock
aaa
dec
pop
popf
cmp
inc
jge
rdpmc
inc
add
pop
push
notl
inc
add
aad
movsl
cmp
pop
or
loopne
sbb
movsb
add
push
cmp
jbe
dec
xlat
ja
inc
mov
sub
sub
dec
lock
mov
arpl
lods
xchg
enter
cmp
add
xchg
or
pop
ret
bound
dec
push
or
sbb
movl
mov
jge
or
xchg
ret
push
movsb
mov
push
insl
jnp
clc
add
js
mov
add
out
je
cmp
clc
jg
sub
xchg
sbb
pushf
lcall
push
mov
enter
push
jge
sub
pop
lods
mov
push
mov
or
jecxz
xchg
in
hlt
jno
pop
push
stos
xchg
pop
dec
inc
sti
js
fsubrp
out
dec
mov
aas
int
fucom
push
push
cld
in
mov
imul
dec
in
cs
jno
mov
scas
pop
xor
pop
and
ss
leave
in
data16
cmp
faddp
xor
sub
cmpsb
cld
cmc
iret
ljmp
pop
dec
mov
mov
sti
sarb
mov
test
sbb
insb
cld
fbstp
sbb
or
pusha
clc
push
adc
mov
pop
sbb
xor
cld
out
sub
add
push
repnz
xchg
stos
xchg
push
testl
mov
jg
lods
cld
and
cmc
test
in
dec
cmp
mov
jmp
cmp
pop
pushl
ja
rcr
rorb
cwtl
adc
inc
lahf
adc
pushf
inc
pop
jg
aad
es
sbb
jmp
lds
test
xchg
pushf
inc
inc
sbb
outsb
mov
dec
xor
xchg
push
pop
jne
sti
aaa
add
movsl
sbb
mov
push
int
jg
push
xchg
cmp
movsl
imul
fdivrs
sub
scas
shrl
cmp
jle
lods
gs
jb
inc
lret
cmp
dec
mov
out
movsb
and
or
xlat
jne
mov
movsb
cld
aam
pop
mov
ja
sub
es
repnz
jno
in
ljmp
sbb
mov
and
mov
loopne
fstl
popf
ss
pushf
inc
bswap
and
jmp
cmpsl
imul
sbb
jo
repnz
insl
insl
jo
bound
imul
sub
imul
mov
jne
movb
jnp
dec
sbb
inc
mov
mov
int
dec
adc
xchg
movsl
cmp
adcb
insl
jnp
aad
rcll
pop
jnp
adc
xlat
stos
int3
xchg
adc
dec
int
aad
scas
mov
cltd
mov
ficoml
loop
je
push
sub
fwait
insl
and
mov
rcrb
pop
xor
imul
sub
or
xlat
fwait
cld
xor
jg
xchg
sub
add
mov
lods
subb
jbe
fucomp
sbb
mov
and
sbb
add
pop
fcoml
std
in
push
push
xchg
nop
in
imull
mov
and
and
cmp
rclb
mov
jmp
xorb
inc
ljmp
jbe
jb
mov
or
jle
scas
vcvttps2dq
pop
pop
xor
adc
mov
fcompl
into
pop
mov
inc
push
adc
or
or
in
cld
std
imul
sbb
sbb
shlb
iret
aad
cmpsb
xchg
push
out
mov
cs
dec
fidivrs
fbld
xor
aad
not
xchg
lahf
into
rcr
pop
sbb
fs
jae
mov
mov
rcll
pushf
lcall
push
popa
sub
inc
adc
into
cmp
outsb
adcb
add
mov
enter
mov
jecxz
pop
fcompl
pop
int3
mov
lods
mov
cmp
stos
test
aad
mov
fbstp
adc
adc
fisubl
dec
add
mov
jb,pn
imul
lret
mov
adc
js
sub
xor
aam
push
push
hlt
push
push
lret
cmpsl
imul
fstpt
sub
dec
out
mov
call
cmp
sbb
sub
adc
sbb
pop
pop
push
ss
inc
insb
mov
nop
or
add
icebp
mov
push
shrl
int
xchg
pop
lock
sub
int3
in
mov
fwait
test
xchg
cwtl
ret
xchg
popa
fs
xchg
call
lods
popa
popa
loopne
rol
call
lea
mov
mov
pop
lods
xchg
popa
jl
mov
and
xchg
xchg
mov
push
cmpsb
cmpsb
hlt
mov
out
push
sub
pop
mov
push
cmp
fwait
in
outsb
jns
sbb
ss
lods
jno
dec
or
hlt
inc
jl
mov
fisubl
mov
xchg
pop
or
scas
inc
xchg
je
push
mov
sub
stos
cmp
pop
mov
mov
mov
aas
or
cmp
sub
call
fcomip
inc
les
inc
sbbl
pop
imul
xor
or
push
adc
xor
outsb
pop
cmp
or
push
lds
and
imul
clc
testb
inc
sub
sbb
movsl
xchg
push
jge
inc
arpl
enter
push
xor
lods
sbb
aam
jle
and
jns
hlt
pushf
mov
insl
jmp
add
xchg
je
out
pushf
sub
iret
or
idivl
sbb
ljmp
inc
sbb
mov
ss
dec
sub
int3
or
jge
mov
outsb
clc
jp
fistpl
stos
pop
div
int3
push
push
mov
push
fmul
call
mov
lds
daa
cmp
xchg
pusha
popf
jg
nop
icebp
sub
popa
cld
pop
repz
clc
call
cltd
ret
add
test
sbb
xor
push
lock
in
cmc
rolb
bound
insl
shl
xchg
push
mov
dec
jnp
and
fincstp
and
cmp
imul
jo
sub
dec
push
in
xorb
or
les
cmp
pop
out
pop
and
popf
dec
in
cmp
mov
dec
loope
insl
dec
mov
push
cmp
sti
mov
nop
jecxz
es
mov
movsb
pop
jnp
outsl
mov
inc
test
test
adc
dec
pushf
repz
jo
mov
testl
jge
ja
lcall
mov
insb
rorl
movb
dec
jmp
leave
int
push
lret
jae
mov
nop
or
mov
and
and
pop
scas
push
fwait
dec
jmp
mov
int3
ficompl
mov
fistpl
mov
stos
inc
stos
addr16
xchg
fwait
sub
inc
mov
cmpsb
aad
out
cs
pop
dec
sbb
jns
mov
xor
or
fcoms
adc
das
push
shrb
sbb
xchg
sbb
nop
loop
jo
cli
fiaddl
pushf
push
test
add
or
xor
mov
xor
sbb
and
enter
xchg
cmp
clc
movsl
xchg
std
scas
enter
mov
rcr
push
inc
mov
call
mov
pop
ret
daa
imull
andps
add
add
sub
test
sarl
adc
xchg
or
mov
mov
ljmp
aam
shrl
xlat
lods
and
push
mov
xor
adc
sti
repz
loope
mov
dec
pop
enter
out
xchg
or
mov
test
out
hlt
jmp
sahf
popa
lods
movsl
pop
mov
cmp
std
push
mov
sbb
pop
fiaddl
inc
pop
testb
fisubrs
outsb
xchg
shl
out
fidivl
add
imul
imul
arpl
mov
cmp
xchg
xchg
imul
jnp
and
std
sbb
jge
stos
fists
loopne
push
mov
in
sarl
adc
das
popf
dec
sbb
pop
jns
cmpsl
or
adc
test
xchg
cmp
popa
addb
imul
sub
sbb
test
popa
push
in
jp,pn
xor
inc
mov
and
add
jl
sub
nop
cli
outsl
mov
mov
and
adcl
repz
out
sub
xchg
test
inc
pop
enter
lods
and
dec
add
cmp
mov
mov
arpl
aas
push
mov
cld
bound
push
roll
push
inc
lods
sbb
addl
rol
inc
xor
mov
insl
add
mov
lahf
cmp
enter
pop
push
ss
and
ret
dec
outsl
sub
xchg
jg
fisttpl
cmp
and
pop
inc
push
and
mov
mov
or
sbb
mov
cltd
call
cs
push
fs
jmp
insb
add
out
scas
aam
adc
pop
xor
add
pusha
test
push
pop
lret
inc
sub
pop
popf
mov
push
push
inc
xchg
mov
cmp
mov
cmp
xor
inc
jnp
fimull
pop
test
into
inc
push
adcb
movsb
sbb
push
cmp
sub
shll
loope
in
in
cmp
inc
jns,pt
rcrl
mov
iret
sub
mov
sbb
inc
jno
jno
and
pop
cmc
arpl
sbb
sbb
push
xchg
mov
aam
cld
ret
adc
pop
scas
sub
adc
cwtl
mov
and
dec
imul
and
je
imul
mov
push
and
mov
subb
mov
mov
inc
inc
xchg
ret
mov
mov
jge
test
bndldx
pop
addr16
pushf
in
pop
mov
enter
mov
lahf
shrl
lret
out
jge
cli
and
cs
pop
mov
cmp
mov
cmp
push
imul
sbbl
xor
mov
mov
and
push
pop
add
mov
test
dec
dec
sub
add
push
jns
sahf
add
ja
std
lret
outsl
inc
add
call
mov
or
xchg
rclb
fsubrl
pop
jne
mov
lds
or
insb
adc
scas
lcall
jmp
jmp
jno
pop
dec
loop
setg
sub
jns
clc
test
aas
in
xchg
sub
aad
outsl
mov
mov
cmp
pop
xlat
sub
fsubs
and
movsl
shll
adc
repnz
jg
inc
mov
out
xchg
adcb
leave
adc
stos
sub
out
adc
mov
fnsave
aad
lock
outsl
test
add
outsb
jo
pop
dec
loope
jg
out
fisubs
inc
cmp
cmp
out
jp
sub
loopne
mov
xchg
out
cwtl
fadds
inc
jns
test
aam
push
in
fs
lods
push
push
mov
sbb
das
add
lock
sbb
pop
mov
sub
test
push
mov
fiaddl
cmpsl
popa
sbb
xor
int
bound
add
mov
cmc
out
push
es
adc
inc
xchg
pop
xchg
leave
daa
pop
cmp
lret
push
lea
mov
cli
rolb
cmp
imul
pop
mov
add
out
adc
cmp
jg
adc
mov
dec
testl
in
jp
jbe
add
rcr
dec
pop
out
sarb
pop
in
lods
xlat
lcall
call
in
push
lds
test
mov
jp
dec
pop
cmp
xlat
cmc
dec
add
mov
jle
adc
jbe
fistpll
addr16
inc
push
lods
aam
lds
movsb
pusha
outsl
outsl
fwait
cmp
and
adc
roll
push
outsl
lods
daa
mov
add
adc
jmp
xor
rcr
sbb
movd
and
xchg
cmp
mov
popf
cltd
das
ret
arpl
lods
xchg
xchg
pop
or
mov
lahf
add
push
cmp
dec
loope
stos
push
gs
cwtl
test
outsb
ds
and
jnp
mov
daa
sahf
lods
pop
sub
or
lret
xchg
fimull
sub
rcrl
int
int3
xchg
sti
stc
pop
cmc
mov
xchg
lcall
mov
jge
sbb
rclb
repnz
and
int
mov
cli
test
cmp
mov
jmp
cwtl
push
push
aas
xchg
clc
gs
scas
idivl
movsl
cmpb
dec
push
inc
lret
adc
dec
sub
pop
fcoml
imul
xchg
push
ds
xchg
stos
mov
pop
repz
fidivrl
imul
das
loop
fistpl
pushl
aaa
sbb
jp
or
sub
inc
fldcw
int
cmp
into
xchg
imul
jg
push
add
popl
shr
xchg
call
dec
push
stos
pop
and
test
aam
sti
addr16
les
pop
adc
add
cmp
ja
jo
arpl
sti
subl
loop
xchg
dec
mov
sub
fnstsw
add
and
and
es
popf
scas
adc
inc
or
cs
sbb
imul
je
aaa
dec
pmuludq
mov
mov
sbb
cmp
push
cmp
loop
add
aad
push
mov
jg
rorl
jo
lods
int
aad
add
into
add
pop
pop
shrb
sti
movsl
xchg
outsb
inc
test
out
adc
andl
jnp
cmp
and
mov
push
xchg
in
jg
sbb
clc
je
sub
cmp
and
xchg
lea
out
lret
mov
cmc
fisubs
cwtl
cmp
push
hlt
push
add
fnstenv
insb
xchg
test
xchg
xor
mov
lcall
dec
pusha
adc
loopne
dec
pushf
hlt
sti
inc
clc
in
movsl
or
cmpsb
leave
repnz
sarl
xor
movsb
fnstenv
stos
pop
aad
lret
int3
push
outsb
out
divl
mov
mov
or
mov
lret
imulb
lods
arpl
pop
mov
xor
cmp
movsb
clc
addl
adcl
jo
iret
dec
movsl
mov
ret
adc
xchg
cmp
ret
inc
aaa
cmp
sbb
mov
inc
cltd
js
pop
pop
addr16
mov
stc
out
ret
fmuls
adc
mov
push
sub
mulb
insl
pop
jg
jae
enter
cli
lcall
sbb
movsb
pop
xor
aad
sbb
ljmp
mov
dec
adc
jmp
loop
lcall
lods
jge
mov
add
jle
push
lret
pop
xchg
shrb
adc
unpcklps
lods
addl
push
popa
stc
adc
movsb
push
jge
dec
push
mull
divl
cli
inc
push
cmp
adc
jecxz
out
lds
fldt
mov
movb
aam
cs
xchg
pop
pop
sbb
push
icebp
or
repz
mov
pop
mov
shlb
adc
or
imul
cmpsl
and
les
dec
pusha
jbe
cmc
adc
shll
ds
jbe
add
cmp
stos
add
mov
dec
dec
jo
dec
adc
lcall
pop
cmpsl
ret
add
notl
sub
inc
ljmp
adc
or
jno
push
adc
fcmovu
lock
push
and
push
push
test
cmpsb
pusha
jno
arpl
das
cmp
insb
mov
cmp
xchg
mul
adc
mov
mov
jbe
popa
jecxz
inc
into
xor
pop
or
mov
mov
push
das
add
mov
movsb
sub
add
mov
clc
mov
mov
push
in
sbb
aad
adc
cmp
jl
or
add
adc
inc
cmp
jge
adc
mov
xor
leave
cmp
ljmp
aas
mov
movsb
enter
push
mov
mov
outsb
jmp
jmp
mov
loopne
and
test
xor
xlat
mov
push
out
hlt
negb
cmp
cmp
pop
lock
xchg
mov
lock
push
jge
aas
or
fs
insb
xlat
das
outsl
ja
add
push
add
xchg
inc
hlt
mov
ficoms
xchg
adc
dec
cmpl
mov
std
xor
js
pop
mov
jae
das
repnz
pop
sub
push
out
add
das
fdivrl
mov
jae
mov
inc
dec
sub
dec
fcoms
xchg
and
out
ja
adc
xchg
cmp
loope
or
ret
in
cmp
xor
mov
ja
jp
inc
jmp
xor
stos
cmp
mov
jbe
outsb
jo
popa
pop
lds
rolb
daa
std
notl
jns
and
stc
pop
push
rcll
iret
sahf
jns
pop
mov
xchg
push
cwtl
pop
iret
shrb
pop
inc
sbb
rcrl
push
in
lds
jmp
popa
sahf
mov
in
shll
aas
aam
jmp
mov
outsb
dec
jae
insb
pusha
add
inc
and
add
or
fdivr
and
icebp
mov
stc
insb
stc
jb
mov
shrl
imul
cmp
push
faddl
pop
sub
mov
mov
and
ds
mov
movsb
outsl
and
push
mov
std
lcall
and
jmp
scas
pushf
rcrb
lcall
mov
sub
lds
insb
insl
rorl
mov
push
insl
jnp
pusha
inc
dec
cmp
cmpsl
jne
pop
cmc
adc
push
jp
sbb
rorl
and
mov
outsb
loope
push
imull
negl
adc
outsb
shl
add
push
push
jbe
mov
sub
push
icebp
dec
cwtl
and
and
les
inc
sub
mov
sbb
ljmp
test
adcb
outsb
out
pop
inc
insb
cli
and
hlt
and
mov
sbb
push
int3
dec
jle
iret
lret
call
lahf
push
jbe
pop
cltd
pop
into
repz
ss
push
adc
movl
fldlg2
scas
xchg
xor
xor
adc
loope
pop
cmpsb
popf
mov
xor
adc
je
out
orb
call
ret
push
loop
leave
cmpsb
dec
jne
rorb
aaa
notl
mov
mov
dec
cmp
jge
xlat
stos
jp
ret
pop
jl
xor
outsl
sub
lret
inc
pop
cmp
and
aam
or
and
outsl
mov
or
lods
outsl
push
push
fst
sbb
mov
sbb
dec
jg
inc
cmp
stc
jmp
ret
adc
ret
incb
and
loopne
sbb
cmpb
imul
pop
stc
sti
mov
sub
pop
jne
hlt
xor
adc
mov
bound
fst
xchg
xchg
lds
pop
sub
sar
dec
mov
cltd
xchg
xchg
mov
adcb
loope
mov
lds
test
cmpl
push
imul
mov
shrb
cld
sbb
sub
bound
pop
inc
sub
sbb
shrl
sub
sub
xor
dec
and
int3
lock
cmpsl
jmp
pop
movsl
es
mov
in
div
sub
enter
ficoms
lds
jmp
cmp
int
sbbl
push
mov
ret
dec
test
xchg
sbb
jmp
jmp
mov
faddl
popf
mov
loope
push
cmc
dec
cld
es
jne
bnd
mov
push
xchg
mov
pop
loop
push
push
cmp
ja
lahf
stos
xor
test
pop
cli
push
jno
insl
jnp
outsb
jnp
cli
sub
imul
mov
aas
cmc
negb
cmpsb
in
push
ja
fwait
in
fwait
pop
andl
in
xor
addr16
mov
sub
insl
pushf
lahf
pop
rcrb
push
pop
neg
fwait
lods
es
in
adc
sbb
cmc
cmp
in
jbe
dec
rclb
add
jno
add
cli
mov
cli
mov
pop
add
jb
mov
xchg
lahf
cmpsl
sahf
jl
add
nop
xor
fmull
sbb
xor
mov
sub
inc
ljmp
sti
push
inc
int3
dec
scas
popf
cs
es
fsubrs
xor
cs
iret
cwtl
inc
mov
cmp
fcoml
mov
test
xor
repnz
daa
sbb
xchg
mov
addb
mov
pop
or
test
push
adc
mov
shll
xor
mov
shll
lea
sbb
adc
js
leave
test
add
call
je
jle
shlb
inc
push
popa
lahf
xchg
mov
push
mov
repnz
negl
hlt
and
add
mov
fistps
mov
fwait
loop
sub
loope
jbe
dec
xorl
push
push
sbb
mov
ret
mov
clc
add
outsl
jnp
add
pop
cmp
cmpsl
in
fucom
in
mov
ficompl
daa
pop
aam
cmpsl
rolb
fs
sahf
fst
or
xchg
jnp
xchg
outsb
sahf
sub
stos
rclb
fisubrl
out
cmp
jle
xor
lcall
lock
jno
pop
push
dec
inc
fwait
ret
xlat
mov
jns
inc
or
mov
stc
inc
jo
adc
and
sub
cmp
loop
pop
js
ds
mov
call
popa
scas
popf
and
and
mov
xchg
mov
mov
fiadds
push
fldl
mov
xchg
lea
cs
mov
leave
nop
les
into
out
outsl
sbb
rcr
int
lock
pop
mov
xchg
xchg
jns
fwait
jl
and
mov
xchg
in
fs
dec
xchg
clc
xor
ds
dec
inc
int3
cld
adc
mov
mov
cli
rcrb
or
xor
mov
int
mov
roll
loop
pop
aaa
mov
scas
xor
ds
inc
rorb
cmp
ja
lret
jmp
imul
sub
xchg
push
aaa
clc
fistl
sbb
ss
dec
loope
xlat
mov
jmp
ret
movsl
sbb
mov
aaa
out
loope
lcall
outsl
into
adc
cmp
pop
mov
hlt
and
sub
xchg
out
push
lahf
mov
and
xor
sbb
adc
sarb
aas
in
push
nop
rcll
outsb
or
hlt
psadbw
lea
adc
roll
xchg
imul
jecxz
jl
add
mov
cmp
inc
mov
adc
and
insl
ss
inc
mov
cmc
inc
inc
and
cmovl
adc
popa
cmp
cmp
les
add
pop
mov
repnz
mov
add
push
shrl
js
popf
aad
in
adc
sahf
lret
dec
push
enter
xchg
cmpsl
xlat
mov
js
popf
inc
subb
bound
lods
mov
fcomps
fwait
push
test
adc
adc
adc
ss
mov
cld
mov
push
clc
add
movsb
mov
mov
into
ds
repnz
add
popf
sub
pop
inc
xchg
lods
test
lods
aam
xlat
adc
jno
outsb
xor
jmp
jnp
cmp
imul
pop
push
sub
jecxz
xchg
pop
sbb
pop
int
dec
outsl
in
jecxz
clc
insb
sbb
dec
or
inc
adc
jne
fildl
outsb
cmp
clc
test
stos
aaa
fisubrs
sub
in
sbb
inc
xor
rcrl
pop
out
lock
mov
add
shlb
les
das
lods
andl
jae
stos
mov
ret
adc
inc
pop
push
into
call
pop
dec
mov
ss
mov
out
sub
push
mov
sub
xor
ret
dec
jmp
sbb
push
filds
sbb
push
inc
loop
addl
push
push
xor
jg
mov
jl
outsl
cmp
pop
adc
stos
or
push
sbb
and
and
sahf
fiadds
lock
pop
jnp
inc
lcall
rol
mov
aad
and
add
mov
adc
or
pop
cmc
rcll
cli
dec
out
sarb
xchg
loope
rolb
lods
mov
hlt
sub
inc
insl
xchg
fsubrs
nop
cmp
scas
scas
mov
orl
push
mov
add
aam
or
pop
sar
inc
and
mov
mov
mov
rcr
mov
sbb
jo
fnsave
paddb
mov
jbe
fwait
inc
jbe
xchg
mov
out
fmuls
sbb
lahf
push
test
or
mov
pushf
bound
add
or
sbb
lret
cmp
push
jns
adc
clc
add
rorl
loope
adc
int
add
sbb
cwtl
dec
call
repnz
sub
scas
jns
xchg
andl
rorb
test
jnp
mov
xor
sub
sbb
fst
push
jge
flds
inc
jb
pop
push
lea
push
xor
mov
sar
mov
mov
cmp
out
aas
stc
xchg
push
pop
xchg
mov
inc
adc
adcl
loope
adc
and
push
jp
int3
cmp
cmpsl
sahf
mov
clc
xor
shll
xor
mov
and
jbe
test
add
cltd
or
sbb
xchg
loope
adc
mov
imul
and
and
mov
mov
rol
loop
popf
dec
xchg
mov
insb
sbb
adc
jns
pop
xchg
or
lds
outsl
iret
mov
mov
sub
mov
lea
and
mov
sbb
iret
inc
mov
cmpsb
pop
aas
pop
lea
mov
push
and
in
xchg
jmp
subl
lea
push
jge
sbb
cmc
jl
mov
push
ds
mov
movsl
mov
stc
mov
mov
mov
and
loope
nop
mov
idivb
fldt
repz
adc
dec
cmp
mov
add
lods
dec
inc
ss
xchg
xor
hlt
stc
insl
push
pop
add
stos
dec
xor
mov
adc
xchg
arpl
fsubrl
sbb
dec
or
in
scas
jbe
imul
jg
sub
jns
ficoml
cwtl
popa
out
adc
pop
xor
iret
sub
stos
mov
mov
or
aas
ss
inc
int3
arpl
mov
lods
jecxz
leave
negl
xchg
mov
pushf
inc
movsl
aas
dec
push
faddl
les
jno
mov
jecxz
fsubrp
xor
test
dec
sub
mov
dec
arpl
inc
mov
mov
arpl
daa
out
fildll
or
test
add
rcrl
xor
mov
jmp
jno
mov
inc
fsubs
add
fs
xor
pushf
loopne
xchg
das
sbbl
js
popf
stos
movsb
mov
jmp
add
cs
insb
stos
int
clc
add
js
int
inc
push
insl
mov
cmp
sbb
xchg
leave
inc
push
out
movsl
push
rcrb
sub
cmp
xor
js
stos
rcll
cmp
in
loopne
pop
inc
mov
xor
scas
les
xchg
push
fcmove
inc
and
leave
aam
fs
ror
jg
adc
push
push
bound
std
rol
ds
sub
aaa
mov
or
inc
roll
pop
leave
or
push
enter
xchg
lret
sbb
add
mov
pop
cwtl
and
mov
test
cmp
or
or
or
mov
cmpsb
nop
iret
mov
addb
cmp
xchg
jnp
push
xchg
add
push
cmpsb
sub
add
dec
add
xlat
lods
mov
cmp
pop
mov
xchg
cmp
mov
mov
sarl
scas
dec
flds
lock
mov
or
add
pop
mov
inc
sub
adc
lds
in
and
mov
andb
xchg
out
daa
mov
cmp
shll
out
xchg
mov
sbb
cmp
mov
popf
movsb
xor
push
mov
mov
int
orl
pusha
lea
ret
daa
inc
inc
fdivl
cld
pop
mov
and
lret
sub
mov
dec
add
nop
out
push
jle
xchg
inc
mov
push
daa
stos
inc
lret
es
fwait
rclb
xchg
insl
xchg
inc
lahf
insb
inc
ss
sub
notb
ret
pop
push
rcll
jl
adc
cmp
sti
hlt
in
cmp
insb
popf
cmpsl
test
jo
add
jne
xchg
inc
or
filds
pop
aam
adc
lea
enter
inc
sub
pop
xchg
sbb
adcl
clc
add
lock
int
xor
jmp
rorl
sub
in
pushf
shrl
orl
mov
pop
mov
xor
fnstcw
fadds
hlt
or
outsb
xchg
jg
movsl
add
test
imul
mov
loope
inc
in
xchg
fsubrp
add
addr16
enter
ret
sti
out
lds
and
cld
dec
sbb
and
clc
push
pop
dec
jae
adc
dec
hlt
into
sti
and
fisttpl
or
push
cmp
pop
lods
cmp
xchg
dec
mov
mov
addr16
push
iret
sti
mov
insb
cmpsb
lret
repnz
push
cltd
mov
and
and
push
xor
add
nop
adcl
xchg
fnclex
adc
icebp
mov
and
cmp
movsl
add
adc
and
mov
jnp
movsl
cmp
int
mov
test
mov
sub
ror
or
addr16
mov
jno
push
lock
stos
mov
imul
iret
add
push
stos
dec
mov
out
orb
incl
inc
sbb
dec
jb
or
inc
jo
pop
cmpsb
lods
and
mov
into
mov
out
dec
mov
pop
sbb
movsl
les
icebp
dec
into
hlt
jnp
repnz
les
push
pop
cs
or
leave
jmp
in
out
xchg
xchg
pop
les
scas
gs
add
sbb
scas
sahf
adc
add
sub
pop
and
stc
push
mov
push
jle
mov
daa
mov
cltd
icebp
sbb
mov
icebp
xlat
aaa
add
sarl
or
dec
fcomps
or
jp
enter
dec
jp
jp
mov
and
add
loope
das
enter
mov
inc
and
cmpsb
mov
cmp
fidivrl
dec
lods
push
loop
mov
jnp
cmc
fwait
sub
das
or
andb
xchg
jecxz
repnz
jne
push
andl
scas
sbb
das
into
push
imul
inc
enter
xchg
jne
call
js
pop
lods
lea
jns
int3
shl
jl
cmc
pop
adc
repz
call
andb
clc
movsl
mov
stc
cmp
mov
jmp
jne
fisubl
cmp
repz
out
cmp
aaa
xor
pop
mov
cmp
or
filds
orb
daa
sbb
and
mov
xor
mov
int3
inc
rclb
je
xchg
mov
out
adc
sbb
cli
cmpsb
out
sar
nop
dec
sub
ret
aas
push
leave
add
icebp
mov
push
inc
xchg
sbb
push
movsl
or
or
lods
and
mov
sub
fisubrl
pop
mov
icebp
and
cmp
sub
rorl
dec
lods
fs
pop
test
inc
out
roll
jns
push
sbb
inc
fadds
outsl
testl
add
mov
lret
nop
lcall
mov
adc
dec
xchg
std
imul
rcrl
iret
scas
adc
push
lock
cld
js
ds
out
xor
bound
sbbb
push
cmp
test
aad
xchg
sti
and
cltd
sbb
mov
ljmp
sbb
call
pop
aaa
lods
sbb
mov
push
test
notb
sbb
fstpl
arpl
stos
jno
pop
sbb
imul
inc
sbb
mov
ret
pop
add
dec
aam
mov
mov
data16
push
sbb
push
adc
pop
out
cltd
pop
leave
das
push
cli
push
shrl
sbb
cmpsl
inc
push
cmp
push
push
add
mov
mov
mov
shll
and
xor
icebp
adc
test
scas
fcmove
and
sbb
ret
int3
inc
mov
jo
add
cmpsb
out
fcmovu
out
xlat
push
sbb
mov
sbb
xchg
inc
push
es
cmc
and
or
mov
dec
nop
jnp
pop
jl
xchg
in
cltd
xchg
inc
sbb
out
les
mov
push
cmp
insb
cwtl
mov
orl
rcrl
dec
in
mov
loopne
cmc
add
adc
jmp
hlt
push
lock
rclb
es
fistpll
jbe
jnp
add
ds
shrl
loope
push
pop
xchg
mov
push
imul
pop
push
push
xor
adc
cld
out
out
fs
jp
jnp
xor
lods
xchg
gs
imul
bnd
bound
enter
popf
mov
pop
ss
push
out
or
ja
jecxz
ud2
xor
lea
cmp
adc
das
push
divl
push
cmpsb
push
addr16
cli
mov
cwtl
sbb
ds
or
add
cmpsl
jbe
jo
xchg
bound
adc
sbb
ss
sub
push
jmp
pop
ja
push
xchg
and
or
movsb
jmp
pop
mov
sub
fadd
stos
stc
adc
clc
repz
dec
sub
push
jp
or
cmpsl
dec
clc
mov
xchg
jmp
and
dec
movsb
pop
push
out
aam
mov
xchg
das
in
rol
push
fidivl
cmp
pop
xor
mov
loope
pop
pop
dec
cwtl
mov
das
mov
hlt
dec
das
sbb
popf
jne
test
in
icebp
ds
cmp
push
scas
pop
mov
dec
inc
jne
ret
cmpsb
mov
adc
adc
sti
test
fsubrs
ljmp
lea
mov
sbb
mov
lea
arpl
push
cli
inc
in
jb
pop
scas
es
xchg
ficomps
mov
pop
movsl
pop
lcall
sub
lret
mov
fdivrl
dec
daa
aam
test
jl
mov
std
sub
into
loope
test
out
popf
xchg
jnp
or
and
or
sbb
mov
mov
pop
out
sbbb
call
sub
and
js
dec
inc
sub
mov
outsl
dec
repnz
bound
sbb
iret
std
out
shlb
adc
mov
and
sbb
ret
pushf
inc
bound
es
or
xchg
pop
lret
pop
mov
repnz
mov
addr16
jecxz
mov
xor
jb
pop
pop
dec
xchg
repnz
push
sbb
test
mov
cmpsb
adc
sti
jl
and
xchg
pop
rcll
jb
std
sub
jnp
and
push
in
aam
sub
sarb
mov
sub
cmc
jp
lds
in
icebp
imul
test
adc
cmpsl
xor
les
shll
sbbb
adc
xchg
xchg
je
dec
and
mov
sbb
lcall
xchg
xor
negb
add
dec
fsubrs
or
repnz
es
scas
leave
ja
loop
loope
aam
xchg
jg
std
adc
dec
push
mov
movsl
movsl
push
cmpsl
dec
les
adc
dec
mov
lcall
mov
xchg
push
scas
call
inc
test
int3
sub
ljmp
or
popf
les
and
push
shlb
push
or
jbe
jg
mov
add
in
pusha
add
repnz
or
fcmove
pusha
inc
adc
loope
and
mov
ret
pusha
orb
inc
scas
mov
xchg
es
test
xchg
push
jbe
in
mov
xchg
jp
add
hlt
cld
pushf
movsb
scas
adc
inc
pop
and
imul
mov
adc
int3
adc
xor
push
push
cli
sub
mov
jnp
rolb
lock
fcomps
cmp
push
or
fcompl
cmp
push
mov
popa
enter
cmp
data16
bsr
mull
or
xchg
sbb
pop
out
stos
pushl
jecxz
dec
lret
scas
push
mov
adc
dec
ljmp
clc
push
sbb
lds
jl
and
sahf
subb
pop
mov
add
mov
iret
dec
ja
aam
or
jge
shl
or
pusha
inc
fldenv
mov
mov
dec
add
shlb
sbb
in
jnp
loope
fidivrs
addr16
jnp
test
repnz
jge
mov
fwait
das
xchg
add
ds
inc
icebp
xabort
and
das
push
push
push
aad
jns
ret
addb
hlt
cwtl
cmp
jbe
mov
inc
sahf
xchg
dec
xor
or
push
lret
cmpsl
mov
inc
jbe
push
out
fsubl
int3
mov
mov
sbb
int
sbb
loopne
mov
adc
mov
sub
push
stos
lea
adc
adc
pop
loope
lock
sbb
sub
shl
inc
lret
xor
ss
sti
lret
sub
xor
pop
clc
mov
pop
sub
push
cwtl
loop
imul
xorb
jno
xor
inc
adc
addr16
xor
aaa
pop
fdivrs
inc
rclb
inc
ret
or
loop
mov
mov
es
jno,pt
fs
and
out
loope
lret
cmp
xor
mov
xchg
xchg
das
in
mov
out
movsl
mov
popf
sbb
adc
cmpsb
and
clc
mov
pop
ror
lods
sbb
ss
and
add
sub
ss
ret
add
loopne
fs
fdivrs
pusha
into
pop
aaa
dec
xchg
jle
sub
cmpsb
in
enter
sbb
mov
inc
adc
jge
jns
lods
mov
fs
fmuls
sub
push
adc
test
inc
push
fwait
nop
int
fisubl
imul
frstor
pop
inc
test
mov
gs
xchg
mov
popa
call
push
mov
fisttps
jl
rorl
xlat
mov
sbbl
xchg
and
loopne
inc
mov
push
lea
lods
xor
fistpl
xchg
pop
push
lahf
call
dec
in
adc
cmp
push
daa
and
and
unpcklps
cmpsl
movsb
out
std
mov
out
stos
out
pop
sbb
and
or
cmp
pop
adc
scas
lcall
fisubrs
or
pop
mov
into
mov
xchg
mov
test
test
mov
dec
fadds
loope
nop
outsb
pop
push
testl
stos
lahf
repz
inc
loopne
mov
xor
push
fwait
adc
outsl
dec
mov
mov
mov
out
xchg
mull
ss
fstps
je
jno
insl
inc
js
lods
loope
mov
int
jg
pop
pop
int
push
xchg
xchg
fstpl
or
cmpsb
mov
fidivrs
push
inc
jecxz
fbld
lods
jb
cld
xchg
shl
int
cvttps2pi
sbb
out
test
xchg
stos
loop
ljmp
add
fdivl
dec
xchg
popa
loop
jb
lea
add
arpl
ss
loopne
ss
mov
xchg
int
dec
or
in
adcb
stos
ror
or
and
sub
xor
pop
scas
shll
push
mov
xchg
mov
dec
nop
jl
in
xlat
lock
sti
loope
test
clc
or
in
fistpll
push
add
lret
nop
push
jno
dec
push
mov
into
adc
sub
in
sub
sub
add
xor
pop
inc
inc
xchg
add
repz
pop
adc
dec
lds
ftst
cld
dec
popa
es
movsb
inc
lock
add
xchg
cli
xchg
out
addr16
int
stos
rcrl
subb
pop
inc
xor
adc
cltd
pushf
mov
xchg
jne
idivl
out
test
cmp
dec
mov
adc
fmull
or
add
pop
mov
fsubrl
push
add
xchg
outsb
scas
xchg
mov
pop
lods
mov
xor
xchg
scas
pop
xor
stc
int3
adc
roll
jle
cld
daa
mov
adc
mov
sub
insb
aad
cltd
mov
or
shl
cli
mov
pusha
or
jmp
push
mov
sbb
inc
pusha
pop
inc
rcrb
sbb
cli
fldenv
xor
inc
sbb
push
in
jl
mov
sbb
xchg
shrb
aam
aad
outsb
rorl
aas
lret
nop
sarl
xlat
mov
leave
outsb
fstps
test
pusha
add
add
gs
and
pop
ljmp
adcl
and
inc
jae
add
enter
not
es
dec
repnz
rcrb
pop
int3
xchg
lret
mov
push
inc
and
mov
call
les
lods
adc
sar
fsts
mov
in
mov
inc
push
inc
and
cmp
lret
arpl
pop
cmp
popf
test
sbb
inc
xlat
or
iret
push
cmp
lret
jl
sub
mov
testl
and
inc
add
cmp
xlat
or
shll
jmp
jae
out
shrl
sbb
pop
mov
or
mov
nop
addl
lock
xor
dec
pop
xchg
jns
or
leave
push
and
cmp
aad
idivb
xchg
repz
push
pop
popf
and
pusha
mov
orl
sbb
push
call
mov
mov
movsb
repnz
mov
mov
mov
mov
add
and
dec
mov
orl
xor
ss
mov
ss
push
mov
mov
jnp
pop
lods
popa
xlat
movsl
push
xchg
out
std
jp
int
pop
dec
xor
lea
andb
xor
add
dec
scas
inc
bound
imul
sub
les
cltd
sbb
lret
jecxz
outsb
cli
mov
int3
lods
sub
popf
push
inc
push
push
mov
cmp
mov
cmp
stos
sbb
cltd
xchg
aam
sti
mov
in
sub
fidivl
lret
lds
mov
fsincos
adc
mov
rclb
fwait
es
xor
jns
jns
rep
adc
cmp
cmpsb
stos
pusha
adc
push
lret
xchg
cltd
cmp
movsl
vmovq
jb
cli
nop
out
rolb
mov
outsl
and
into
and
mov
shr
in
sti
rcrb
cwtl
and
cmp
aaa
xor
xchg
stos
jbe
or
mov
adc
insb
test
stos
cs
sbb
fcmovne
in
xchg
sbb
mov
out
repz
hlt
sub
popa
out
cmpsb
in
add
push
add
and
push
adc
ret
lcall
lea
mov
mov
add
cwtl
xchg
xchg
push
vpsadbw
jmp
movsb
push
mov
inc
mov
ljmp
sub
mov
movl
loopne
mov
push
repz
dec
cs
addr16
or
adc
xor
xchg
je
sbb
mov
cli
jle
jl
sar
stc
movsb
fsubr
push
xor
adc
into
jecxz
mov
imull
imul
incl
push
push
rol
sbb
sahf
ret
lret
arpl
scas
enter
lods
movsl
aam
jb
daa
in
mov
sbb
fisttpl
inc
xor
test
sub
sub
addb
jg
fsub
mov
loopne
mov
xchg
imul
sti
outsl
stc
jg
lret
out
xor
dec
lock
push
jno
push
sub
aam
xor
mov
mov
xchg
bound
mov
rorl
push
les
sub
sub
push
sar
jb
push
jmp
dec
xchg
lds
les
cltd
cmpps
fcomp
repz
push
xchg
stos
and
pop
mov
push
xchg
mov
mull
ficoml
sbb
notb
pop
ljmp
add
jp
test
mov
sti
jp
push
mov
mov
cwtl
jo
jns
push
jge
stos
int
dec
lds
shlb
test
bound
cs
xor
pop
cmpsb
fsubrl
lcall
cmpl
data16
pop
mov
add
mov
xchg
adc
test
mov
out
jg
and
xor
mov
ret
and
mov
flds
mov
cltd
loop
out
arpl
test
mov
paddsw
mov
pop
and
xchg
cmp
ret
jp
insb
mov
bound
sub
add
dec
xchg
into
cwtl
shrl
cmp
js
adcl
inc
data16
mov
jns
xchg
js
loop
mov
push
sahf
dec
popf
in
adc
pop
cmp
jmp
je
idivl
push
enter
add
pop
out
data16
sub
jb
dec
push
push
js
sbb
xor
xor
subb
adc
or
ja
fld
push
push
cmp
js
popf
out
outsb
adc
lret
addr16
lahf
pop
aaa
fimuls
repnz
addr16
pop
sbb
pop
add
inc
push
jae
sbb
push
or
adc
jmp
neg
push
jp
ds
push
das
cld
ret
addr16
inc
call
cmp
ljmp
test
add
add
ljmp
cmp
insl
inc
mov
pop
cmp
xchg
je
push
fidivs
mov
out
mov
out
mov
dec
jmp
scas
std
ret
jg
cmc
mov
sti
sub
adc
xor
push
fsin
mov
lcall
ret
inc
inc
sub
addr16
mov
pop
adc
cmp
cmp
dec
xor
pop
mov
jl
shll
mov
inc
jecxz
or
fwait
xchg
jmp
aad
and
or
cmp
mov
daa
addl
out
cmp
pop
push
dec
loope
jo
pop
jmp
insb
xchg
sahf
fnstcw
jmp
push
inc
cli
rcrb
cmc
adcl
jmp
pop
push
pop
and
sarl
push
add
popa
mov
sub
scas
rcll
mov
mov
insb
pop
inc
std
in
sahf
dec
lea
test
enter
je
in
in
adc
inc
rclw
lods
test
fdivrs
loopne
sbb
or
cmp
inc
cld
xchg
test
cmp
or
dec
sarl
and
jo
fldt
dec
push
clc
outsl
icebp
mov
inc
jns
and
addb
pop
lret
iret
pop
test
orl
cld
sub
aam
shlb
pop
pop
sub
lahf
mov
sub
in
cmpsl
push
jmp
sbbb
out
pop
mov
in
mull
cs
pop
addr16
test
insb
pusha
inc
pop
jb
std
xchg
ljmp
dec
inc
mov
jno
adc
es
ds
cmp
popf
jl
push
insb
aaa
aaa
sar
jae
subl
dec
push
out
rolb
mov
cs
hlt
sahf
out
inc
xorb
pop
xchg
stc
or
loop
mov
push
add
push
dec
xor
lds
daa
cmc
jae
iret
out
ljmp
les
add
lds
lea
lods
lahf
xchg
mov
out
lods
pop
xlat
fiaddl
addr16
and
mov
pop
sub
ds
jnp
std
sbb
iret
andb
lock
hlt
mov
xor
mov
jno
popf
sahf
or
ret
mov
pop
jmp
out
pop
lods
insb
fbld
lock
xor
adc
sbb
movsl
xchg
mov
mov
idivl
test
sbb
shrb
dec
dec
leave
outsb
add
das
add
pushf
mov
cltd
or
or
cmp
mov
and
sbb
cmp
aaa
imul
in
fildll
add
stos
sbb
stc
lods
jmp
test
push
pop
dec
push
icebp
cmpsl
test
cmpsb
inc
push
movsb
inc
decb
xchg
fst
xchg
shll
aaa
lret
in
dec
out
push
and
scas
sbb
add
inc
dec
fisubrl
sub
inc
and
or
popa
in
sub
mov
and
sbb
pop
sti
and
int
jo
sbb
mov
insl
xchg
mov
mov
xchg
lods
bound
subl
add
add
push
outsb
lods
addr16
jo
loopne
ret
and
and
and
pushf
insl
jecxz
in
stos
fbstp
sub
imul
add
push
mov
mov
jge
jno
lret
push
mov
push
bound
lret
scas
push
cmp
arpl
ret
pop
jge
nop
or
mov
lret
stos
lods
outsb
xchg
mov
shlb
mov
fmull
leave
andl
iret
iret
dec
sbb
cmpsl
jle
stos
pop
clc
xchg
sbb
mov
ss
xchg
in
lcall
fs
or
testb
popf
push
lds
xchg
push
repz
imul
lret
pop
cmp
lods
stos
cmpsl
pop
outsl
je
sbb
mov
insb
into
push
jo
je
dec
inc
sbb
in
test
ret
mov
mov
ss
hlt
add
sbb
fsubrl
in
aam
js,pt
jne
out
iret
mov
mov
dec
xor
loop
ja
mov
inc
sub
lock
out
in
rcl
loopne
xchg
mov
adc
jnp
adc
mov
pop
adc
outsb
and
pop
sbb
mov
jnp
and
or
add
mov
inc
out
jne
mov
iret
aaa
mov
movsb
fistpl
jo
inc
das
jg
loop
test
imul
sti
cmp
and
pop
sub
nop
ljmp
pop
mov
aaa
cmp
mov
cmp
mov
js
cmp
call
xchg
xchg
add
iret
es
sbb
jp
or
ret
lret
popa
xchg
je
pushf
das
sub
mov
mov
sub
xchg
popl
lock
lcall
xchg
inc
cmp
jl
push
or
mov
inc
fnstsw
mov
pop
dec
enter
jbe
aas
cwtl
xchg
popa
jno
sbb
stc
fdiv
and
stc
les
lock
into
dec
fucom
fisubl
adc
cmp
in
or
hlt
mul
ja
sub
mov
lcall
pop
hlt
xchg
mov
sub
shlb
sub
gs
popfw
dec
push
push
pop
pusha
pushf
aad
xchg
pop
aad
in
lock
leave
cmpsl
inc
clc
daa
xchg
sbb
das
leave
cmp
aas
sbbl
fdivr
cmc
test
js
inc
arpl
inc
dec
stc
inc
and
xchg
sahf
inc
dec
push
add
xor
dec
inc
das
outsl
mov
or
xor
push
adc
push
hlt
mov
mov
ds
mov
or
inc
push
mov
lea
sub
mov
adc
test
pop
mov
es
xchg
jbe
fwait
data16
movsl
dec
stc
test
push
mov
andl
pop
sbb
pop
sub
imul
out
test
bound
pop
xchg
lcall
cmp
jmp
mov
shrb
push
out
scas
mov
in
adc
mov
out
sub
ja
les
push
ror
std
or
pop
push
les
push
xchg
ja
lret
dec
aaa
or
arpl
notb
into
mov
enter
pop
in
mov
cmp
mov
push
jle
pop
cmc
loop
cmpsl
clc
mov
jns
inc
pop
push
sahf
js
inc
dec
ss
sub
pop
cwtl
lret
ficompl
mov
adc
hlt
ss
sub
push
jecxz
loopne
test
pop
insb
cltd
jmp
mov
xor
shrl
pusha
inc
rcrl
scas
insb
pop
test
shlb
or
jl
add
pushf
push
ficomps
in
jmp
int
insl
add
shll
mov
sbb
or
fiadds
cmp
sub
inc
xchg
jp
push
jg
and
jnp
rol
divl
je
mov
or
loop
and
jmp
les
push
push
loope,pn
mov
xchg
or
movsb
add
loopne
add
shlb
xchg
aam
aaa
int
jns
mov
inc
test
sbb
dec
lea
ja
into
mov
push
pop
xor
lods
sarb
sbb
pop
frstor
push
icebp
mov
jg
dec
wrmsr
call
popf
push
and
pop
mov
stos
in
movsb
sub
cmp
aam
sbbl
sbb
jl
jo
jnp
fwait
jl
rorb
andl
insb
sub
fstps
mov
scas
inc
clc
test
adc
stos
mov
xor
pusha
scas
pop
enter
repnz
cmp
fmul
iret
lock
hlt
nop
loopne
and
sub
sub
add
mov
pop
mov
inc
mov
movsb
xlat
scas
inc
popa
xchg
loop
or
loopne
std
mov
and
ffreep
sub
mov
jle
xor
push
out
add
int3
add
dec
add
aam
add
xor
adc
push
jo
add
add
shrl
sub
jnp
imul
push
pushl
cmp
xor
jnp
xchg
xchg
fnstsw
fmull
inc
std
adc
push
aas
daa
inc
pop
mov
sbb
nop
nop
call
daa
subl
and
popa
ja
sahf
pop
subl
push
mov
jbe
hlt
icebp
insl
dec
jbe
fs
mov
sub
push
jno
iret
cmp
or
aad
outsl
test
das
mov
dec
sbb
imul
xor
xchg
cmp
jnp
mov
push
out
int3
pushl
nop
xchg
and
mov
fildl
adc
jb
lahf
movsl
adc
mov
xor
xchg
push
lods
mov
pop
adc
sub
mov
popf
out
nop
loope
mov
popf
cmp
sarb
outsb
inc
sbb
adc
mov
sub
push
mov
or
ret
mov
xorl
mov
leave
sbb
adc
push
push
sbbb
or
movsl
and
stc
bound
ret
shll
imul
mov
mov
aaa
push
into
cmp
fs
cmp
pop
xor
mov
inc
mov
popf
adc
in
and
test
repz
sti
mov
test
push
sahf
push
dec
imul
cmp
and
pop
push
clc
add
in
test
jnp
in
cmpb
ds
push
sbb
sti
xchg
clc
sub
mov
mov
fnstcw
sbb
cs
outsl
sbb
xchg
push
and
adc
stos
mov
test
lret
adc
push
pop
ret
in
gs
jne
lcall
int
mov
pop
iret
data16
decb
xor
and
jmp
xchg
pop
jge
xor
fwait
cmp
movsl
inc
cmpsl
insb
push
test
ret
daa
cwtl
testl
fs
push
or
dec
cmp
add
and
jle
sbb
mov
mov
inc
out
push
xchg
pop
push
inc
enter
shr
das
loopne
sbb
mov
xchg
inc
or
sub
lock
mov
or
out
sub
xor
and
rcll
out
outsl
mov
pop
mov
ss
cwtl
or
or
pop
mov
inc
ja
xor
sub
adc
fidivl
cmp
add
std
fpatan
or
cli
sub
push
xor
add
ret
jge
push
mov
sub
fwait
into
les
mov
add
inc
lds
add
jg
or
into
jae
sub
add
scas
dec
push
pop
lods
call
or
int3
push
or
js
bound
or
xchg
std
xchg
bound
pop
push
dec
clc
sub
movsl
lock
clc
int
stc
mov
dec
cmp
mov
pop
pop
dec
jb
mov
xor
push
pop
inc
pop
into
jo
mov
aad
vunpcklpd
pushf
mov
and
dec
sub
insl
mov
xchg
lret
jp
pop
jp
int
pop
and
mov
lahf
fistl
rcrl
cli
cli
faddl
rcll
inc
lret
jns
adc
jl
xorb
test
bnd
push
push
cmp
push
mov
ss
dec
lahf
je
andl
add
and
xchg
cmp
mov
iret
out
int3
clc
adc
inc
inc
push
push
ficompl
cmpsl
xor
repz
pop
pop
icebp
popf
psraw
push
jl
mov
test
mov
loopne
cld
pop
movsl
cmpsl
fnstsw
push
pop
jg
mov
mov
jl
int3
scas
shll
push
sub
cmp
cld
push
fs
and
popf
outsl
inc
mov
loop
outsl
add
je
mov
pop
sbb
loop
test
iret
stos
dec
imul
mov
rcrl
aam
add
dec
int3
dec
pop
adc
add
or
xchg
sub
lods
jmp
mov
fadds
cmpsb
pop
or
xchg
in
mov
shl
or
pop
jge
xchg
jne
dec
out
jl
in
iret
out
iret
adc
add
pop
sti
cli
lods
dec
out
dec
push
aad
cli
cli
xor
pop
daa
shll
push
aad
jbe
sahf
addb
pop
repz
xchg
xor
pop
mov
xor
aaa
sub
gs
incl
ds
in
test
pop
hlt
pop
pushl
imul
inc
mov
mov
cld
rcr
sub
mov
enter
mov
and
sti
push
push
pop
mov
test
inc
lds
jae
insb
lret
or
inc
dec
ss
lock
dec
xor
out
and
mov
leave
dec
mov
mov
sbb
mov
mov
sub
cltd
dec
nop
fwait
xor
pop
fwait
sub
in
xchg
ss
mov
sbb
pop
mov
loopne
jmp
and
jb
jle
cld
inc
mov
inc
clc
clc
jecxz
pop
xchg
mov
inc
sub
lret
insb
lods
jmp
loop
mov
dec
xor
fdiv
setne
sbb
jp
inc
sub
push
jnp
push
adc
sar
bound
hlt
jne
or
inc
popf
dec
stos
sbb
dec
sti
and
rcr
lock
inc
scas
loop,pn
mov
mov
fwait
xchg
sbbb
mov
ret
xor
pop
cltd
fs
ss
repnz
jl
aad
or
sub
call
add
mov
mov
sub
andl
enter
mov
xchg
aam
movsl
cwtl
jl
jbe
out
cmc
push
jne
cmp
divb
es
adc
ret
jne
insl
xchg
jmp
into
mov
aam
mov
mov
inc
adc
and
jmp
stc
js
adc
jmp
scas
cmp
xor
xor
aas
xlat
mov
cmp
or
mov
fildl
xor
aad
call
sbb
lock
leave
mov
xlat
xor
sbb
push
out
mov
or
cmpsl
imul
jg
xchg
push
subb
hlt
inc
mov
push
xor
das
gs
push
push
mov
or
xchg
cmp
addb
xchg
xor
xor
inc
imul
test
into
aad
in
movsb
pop
cmpb
test
fistpll
xor
add
pop
rorl
jae
mov
shlb
je
in
nop
popfw
adc
pop
test
push
xor
or
adc
pop
or
xchg
or
sahf
notb
mov
rclb
xchg
pop
sub
test
test
xchg
and
dec
repz
hlt
icebp
adc
mov
jne
mov
fs
sahf
jg
mov
adcl
in
mov
ljmp
or
push
fistpll
lods
sbb
push
ret
cmp
ss
shll
lret
sub
or
mov
cmpsl
inc
pop
call
or
fwait
jp
mov
bound
sub
push
push
dec
inc
inc
repz
adc
aas
push
aam
imul
rcll
jnp
es
aam
mov
mov
inc
inc
clc
outsl
or
adc
cwtl
incb
nop
sub
repnz
mov
push
or
cs
mov
adc
mov
mov
or
push
or
jge
es
scas
adcl
cmp
js
push
enter
sub
mov
sub
cld
dec
out
rclb
addb
into
mov
mulb
dec
sub
xor
sbb
xchg
hlt
test
lahf
int3
movsl
cld
jb
sbb
pop
mov
in
adc
dec
das
rep
int3
cmpsl
pop
mov
pushf
mov
dec
mov
or
mov
sbb
and
shl
push
ficompl
push
or
jno
mov
xchg
cmc
pop
add
cmpsb
stc
std
loop
and
fistl
sahf
movsl
sbb
mov
push
invlpg
fsub
mov
push
ss
lds
sub
pop
mov
add
popa
shlb
cmc
ja
sbb
pushf
mov
mov
out
lods
leave
xor
xchg
jo
push
dec
sbb
cmp
sub
inc
cmp
jmp
mov
mov
iret
lds
mov
jle
ficoml
xchg
lock
push
cmp
jle
jo
cmpb
mov
and
xor
outsb
dec
cmpsb
jmp
imulb
repnz
insl
lods
fdecstp
sbb
je
xacquire
sub
jnp
push
mov
add
sbb
outsl
push
or
ljmp
inc
adc
leave
sub
ret
jne
inc
sub
data16
xor
sub
test
jg
inc
and
inc
mov
aaa
or
or
fildl
aad
movsb
cli
aad
ja
mov
cmp
mov
out
mov
sbb
cltd
dec
jge
rorb
sbbb
sub
cmp
jbe
pop
sub
andps
jbe
jecxz
adc
mov
subb
xchg
push
xchg
fadd
pushf
out
lahf
aas
mov
stos
sub
ret
ds
rorb
fbstp
xorb
add
push
dec
stos
mov
cmp
jae
xor
imul
aam
inc
mov
add
xchg
cmp
rcll
push
fsub
shll
leave
jae
and
jp
sbb
lds
loop
int
es
pop
hlt
js
pop
out
xchg
scas
test
mov
xlat
cmp
inc
scas
xchg
outsl
push
and
mov
mov
add
adc
std
and
filds
sbb
fbld
xchg
in
mov
mov
ss
out
in
pop
mov
jo
data16
sbb
xor
jbe
test
jg
jbe
dec
test
outsl
and
push
bound
and
xchg
mov
jle
mov
or
es
pop
jl
sub
jge
or
xchg
xchg
jle
mov
stos
dec
incl
gs
pop
mov
and
inc
pushf
aas
pop
stc
sbb
lahf
call
fadds
dec
out
jl
adc
test
lcall
divl
test
xchg
imul
cltd
inc
jl
inc
mov
mov
into
daa
sub
pop
les
fs
gs
pop
jl
std
inc
cmpsl
jecxz
push
pop
and
mov
aaa
rcl
push
imull
icebp
leave
push
lods
push
xchg
push
cmp
sub
xchg
lret
adc
mov
pop
test
cld
stc
scas
mov
cltd
sub
pop
out
mov
and
mov
pop
dec
push
inc
push
orl
xchg
test
addr16
or
xchg
outsl
push
xchg
mov
adcb
add
sbb
add
mov
out
loope
mov
hlt
pusha
xchg
cmpsb
sbb
les
jae
sbb
aam
add
push
xchg
sbb
and
imul
loopne
pop
add
out
mov
or
and
ja
js
rolb
pop
jno
fdivl
dec
call
enter
push
pop
sbb
cmpsb
in
jmp
cmp
lock
testb
lds
iret
into
data16
int3
es
mov
or
out
sets
leave
iret
fcmovnu
rorl
mov
mov
nop
mov
add
loopne
and
cmc
imul
or
sub
dec
jnp
les
hlt
inc
jbe
mov
or
sub
xchg
xchg
test
in
iret
or
jae
pop
dec
cmp
jp
stc
int
je
mov
aaa
push
sahf
cld
jno
out
ficoms
lahf
fsts
bound
call
jge
or
inc
xlat
fdivrs
lods
push
add
pop
adc
cmpsl
push
sarb
rcl
out
je
adc
fnstcw
popa
imul
fnstsw
sub
xlat
js
loop
aas
pop
and
dec
fistpl
jno
cmp
ljmp
jecxz
ja
rclb
jg
loopne
xlat
mov
push
scas
pushl
pop
mov
mov
dec
mov
or
jle
sbbl
ficomps
jge
test
adc
popl
data16
xor
add
test
inc
push
mov
push
fsubp
fisttpl
mov
jnp
inc
in
int3
cs
in
test
scas
xchg
add
push
aam
push
pop
xchg
sub
ds
mov
test
dec
xchg
xor
je
dec
mov
sub
lods
shrb
data16
lock
pop
jb
cmp
insl
roll
insb
or
rolb
mov
push
sub
sub
adcl
pop
lea
inc
test
push
xor
pop
mov
mov
repnz
adc
and
leave
negb
leave
push
mov
insl
lret
fs
das
adc
sbb
notl
push
xor
enter
pop
pushf
out
outsb
into
dec
lods
pop
or
inc
lahf
lock
loop
repnz
and
sahf
add
jecxz
dec
cmpsl
jo
in
fmuls
lret
sbb
mov
push
jb
cbtw
xlat
and
mov
insb
xchg
repnz
sbb
mov
dec
icebp
jne
aam
xor
pop
out
dec
push
push
add
push
fs
pop
shrl
cmp
data16
roll
cmp
cwtl
scas
icebp
pushf
jmp
aam
enter
daa
sub
jnp
jg
xchg
mov
sub
add
std
jmp
sbb
mov
pop
jno
shrb
into
ss
nop
or
daa
aas
repz
xor
xor
ret
add
or
xchg
push
push
js
push
add
adc
add
adc
or
fadd
mov
daa
es
cmp
imul
and
loop
pop
daa
and
mov
push
mov
imul
jns
scas
andl
xor
push
xor
or
fldl2t
inc
bound
mov
cs
into
iret
dec
sbb
icebp
call
insb
pop
push
or
adc
loop
sarl
loope
pop
cli
mov
out
xor
or
movsb
jb
mov
lods
loopne
test
shrl
jae
jb
sbb
mov
sar
test
push
stos
jae
test
pushf
xchg
in
add
cmp
div
shrl
enter
imul
push
fcomip
imull
add
or
inc
mov
push
mov
pop
push
fcmovbe
dec
loope
cli
ret
pop
mov
or
mov
mov
frstor
enter
mov
std
int
push
and
inc
sbb
fcoml
shrl
sub
adc
leave
sbb
lret
sub
and
mov
decl
mov
sahf
fwait
cmp
lock
in
mov
pushf
out
cmc
jns
dec
imul
push
or
dec
sbbl
cmp
aad
jmp
inc
out
outsb
push
and
dec
xor
jo
cli
mov
aas
inc
shrl
pop
jecxz
test
xchg
sub
loopne
mov
lret
jno
adc
add
sti
jnp
mov
daa
in
loope
or
pop
pop
mov
mov
lods
inc
cmpsb
dec
dec
out
ja
aas
sahf
jnp
insb
push
decl
and
xor
push
xor
scas
test
jp
push
pop
xor
jle
das
push
aad
cltd
adc
fwait
jp
xor
lds
fnstcw
dec
cltd
xor
dec
int3
mov
das
insb
pop
inc
or
push
pushl
cld
test
cld
adc
sbb
pop
gs
ror
fsubs
inc
and
packuswb
fisubs
adc
mov
dec
shl
xchg
xchg
push
cmp
mov
test
xor
fcom
rclb
mov
xchg
sahf
push
lods
mov
jne
daa
mov
sbb
imul
xor
or
mov
pusha
out
jns
xchg
sub
mov
neg
iret
sbb
js
ja
add
shll
mov
mov
daa
mov
addr16
lret
cmp
dec
push
lcall
pop
jne
rcll
ja
add
lods
jns
add
and
gs
stos
insb
cmpsl
xchg
xchg
repz
aas
shlb
pop
in
cmp
jb
cmp
stos
fldl
push
dec
adc
jo
mov
repz
das
and
hlt
aad
jb
imul
pusha
and
jl
loop
mov
sbb
mov
adc
cmp
sahf
cld
xor
adc
adc
je
inc
sbb
xorb
out
repnz
mov
dec
cmpsl
xlat
cs
out
xor
cs
je
jp
aas
dec
leave
cmpsb
sti
jae
rcrl
ja
xor
sub
sub
rol
cmp
mov
repz
adc
ja
xchg
mov
dec
and
fucom
mov
sub
dec
jb
sub
mov
mov
fst
mov
fdivl
shl
cli
out
add
ret
ljmp
testl
jge
mov
lods
xchg
mov
test
mov
push
pop
mov
push
aas
test
dec
andl
iret
cld
mov
add
jmp
shrb
xor
jle
and
shrb
sub
jecxz
or
xchg
lods
inc
mov
in
pop
aad
leave
inc
mov
pop
arpl
loopne
ret
mov
xchg
mov
inc
mov
xor
sub
push
stos
jno
cmp
mov
int
sbb
sbbl
cmp
loope
aam
jns
pop
dec
sbb
out
rol
popf
insl
shrb
aaa
adc
jmp
adc
lea
int
pop
test
idiv
push
stos
loop
and
jge
xchg
push
cmp
insb
sbb
sbb
mov
aas
arpl
ret
movsl
mov
ljmp
loope
jp
sub
loope
lods
pop
stos
lcall
adc
shrb
sbb
or
sub
adc
and
or
shl
push
jno
pop
out
jle
lods
pop
loop
xchg
popa
cmpsb
cmp
mov
jle
test
inc
shr
stos
adc
push
clc
sbb
in
jp
pop
sbb
mov
xchg
fistps
sbb
into
xchg
jnp
push
mov
pop
mov
xlat
and
or
pop
sub
les
add
popa
mov
sub
pusha
xor
lds
popf
add
popa
cmp
imul
xchg
push
jbe
adc
sub
inc
cmp
lods
iret
fsubrl
xor
mov
lods
andl
mov
mov
sbbb
out
in
lock
mov
ja
in
ds
mov
ret
xchg
pop
sub
dec
adc
xor
inc
stos
push
jb
insl
es
mov
inc
or
dec
shrl
jno
std
repz
mov
cli
cwtl
test
scas
inc
ss
jo
xor
cmp
aas
int3
and
mov
fsubl
xor
das
jge
pop
lods
xchg
fs
jne
mov
jmp
pop
add
lcall
mov
lock
das
stc
mov
pop
pop
mov
or
inc
pushf
jns
addr16
cmp
out
fsubs
xor
jnp
pop
fistps
mov
shll
push
xchg
dec
mov
aam
ret
cld
call
dec
mov
adc
pop
hlt
repnz
leave
repz
pop
adc
sbb
jp
pop
lret
jb
imul
mov
scas
lret
adc
mov
dec
xor
mov
leave
sbb
cmc
pusha
push
addb
imul
mov
mov
out
movl
movsb
test
sbb
jle
iret
pusha
pushl
adc
lods
dec
cmp
adc
shl
fdivrl
stos
les
cs
in
pop
repnz
push
inc
dec
mov
push
and
test
push
outsl
cmpsb
out
dec
test
push
imul
nop
clc
xchg
ror
pop
ficoms
jg
int
inc
inc
pop
push
dec
out
and
hlt
pop
hlt
jo
out
mov
or
push
cmc
ja
push
das
imul
rcrl
shr
xor
xor
mov
dec
dec
and
in
test
pop
out
xor
cmpsl
int3
pop
testb
dec
mov
dec
ficoml
fwait
push
xor
lea
add
xchg
jge
jp
int
inc
adc
notb
push
aas
add
std
or
dec
dec
sbb
shl
aad
mov
in
mov
and
lea
std
rcr
pop
and
xchg
and
add
aaa
sarl
sbb
out
inc
inc
lea
adc
je
sahf
sbb
mov
or
and
and
pop
sbb
scas
repnz
sbb
jle
xlat
mov
dec
sti
mov
or
mov
dec
data16
pop
pop
ficompl
inc
or
nop
xorb
ret
decb
in
outsl
xchg
jg
sbb
dec
jbe
aaa
adc
jnp
xor
sub
mov
aas
sbb
shlb
dec
xor
rolb
leave
popa
mov
incl
inc
jp
pop
inc
pop
scas
mov
cltd
ficoms
lret
cwtl
mov
ret
add
inc
and
in
loopne
inc
fistpll
into
subb
mov
dec
xchg
mov
int3
mov
cmp
add
cmpsb
xchg
scas
inc
push
cmpsl
lret
mov
cmp
jle
dec
psadbw
xor
imull
pushf
mov
xor
adc
cwtl
lea
aam
sub
mov
pop
jo
pop
movsb
std
jmp
cmp
jmp
mov
adc
add
lock
xchg
mov
cmp
push
push
pop
lea
and
ljmp
add
nop
fstps
add
aas
popw
and
clc
mov
cld
xchg
inc
xor
hlt
loop
dec
rcrb
mulb
cmc
sub
jle
or
in
push
mov
cmp
clc
int
lret
imul
repz
adc
or
into
jb
push
cwtd
and
loopne
les
push
xor
jmp
int3
out
jge
loop
call
mov
fcmovnbe
cmovbe
ret
sahf
jno
sub
mov
and
rcll
out
loopne
sub
push
dec
jne
sbb
and
popl
adc
inc
insb
repnz
mov
loopw
sbb
call
sbb
mul
mov
mov
xchg
sbb
or
push
push
mov
dec
dec
sbb
adc
stos
jg
jle
pusha
lahf
icebp
lcall
aaa
pop
pop
xchg
cmp
push
mov
daa
lahf
insl
and
cmp
daa
cmp
sbbb
js
xchg
xchg
mov
cmp
xchg
cltd
sbbl
iret
arpl
fsts
cmp
movups
sbb
push
cmp
adc
rcl
or
mov
cld
hlt
ds
das
out
dec
mov
inc
pop
and
sbb
mov
aad
adc
aam
in
adc
data16
fnstcw
jp
lods
pusha
jmp
jle
or
xor
and
pop
adc
push
mov
aaa
and
cmp
sub
int3
mov
das
cmp
loope
cld
mov
mov
insl
jmp
aas
mov
pop
test
sbb
xchg
mov
mov
fnstsw
sub
out
rcrl
xchg
push
scas
mov
pop
xlat
dec
push
daa
stos
fidivs
add
fwait
adc
lret
mov
popf
mov
es
out
xchg
shl
cmp
inc
cli
jne
popf
in
mov
push
mov
sub
mov
jno
out
jne
lds
mov
adc
xchg
cmc
mov
or
loopne
fst
rclb
mov
cmc
push
xlat
push
adc
mov
push
dec
jo
arpl
add
cmp
and
jg
inc
jg
fistpll
fsts
xchg
sub
std
or
add
fisttpll
mov
push
inc
push
mov
adc
fdivs
ret
mov
arpl
mov
shr
cmp
mov
inc
cmp
or
or
xchg
mov
popa
push
insl
mov
cmpsb
mov
test
stc
mov
add
xchg
xchg
xchg
xor
outsl
ds
lds
addr16
pop
mov
adc
test
jg
jle
inc
add
jl
mov
nop
scas
xor
xor
jl
in
sbb
or
xchg
mov
sub
mov
push
mov
sti
inc
pushf
daa
dec
adc
cmc
test
cmp
mov
jp
jb
sub
add
mov
fucomi
aas
add
mov
and
sahf
sarb
movsb
ljmp
jle
add
jg
mov
cld
lock
addl
jbe
push
lods
fxch
and
sub
hlt
je
jmp
and
mov
cmpsb
sub
mov
or
ret
sub
jbe
mov
insl
fiaddl
aaa
pop
jnp
orb
mov
out
aaa
jl
aam
sbb
cmp
cmp
fildll
jo
xchg
adc
cltd
mov
cmp
loop
mov
jo
and
push
mov
test
mov
cs
jne
lahf
ficoml
insb
outsb
add
jnp
mov
cltd
pop
xlat
jnp
xchg
jle
mov
bound
mov
popa
rol
push
jbe
xchg
movb
push
jbe
mov
jne
in
add
nop
pop
cld
aam
in
inc
push
mov
lods
pop
test
mov
mov
xor
aaa
popa
adc
fmull
loop
mov
ss
dec
mov
jne
bound
mov
or
clc
jne
outsb
lods
xchg
xchg
push
xchg
mov
mov
xor
mov
repz
fwait
ja
jmp
cmc
jo
js
fildl
jbe
add
jo
jg
mov
popf
cmovae
call
outsb
leave
jno
aaa
xor
in
sbb
bound
fsubp
out
and
jne
je
pop
sbbl
push
sub
or
push
jno
mov
xchg
mov
xchg
cmp
mov
pop
sub
test
icebp
ja
sbb
push
mov
test
sub
fldl
inc
cmc
pop
out
cmp
inc
in
xchg
inc
mov
mov
jl
or
stc
aam
sub
mov
jmp
fildll
sbb
shll
movsl
outsb
xchg
sbb
inc
jp
lock
sarl
dec
pop
sar
aaa
sbb
push
imulb
push
out
jns
scas
pop
ret
jns
jg
ja
int3
jb
dec
clc
neg
dec
fs
popa
mov
dec
adc
add
jle
adc
pushf
jo
mov
and
xchg
sbb
test
cmpb
mov
pop
test
mov
popf
loope
hlt
nop
cmc
inc
xchg
cld
stos
dec
movl
cmp
les
add
in
insl
add
mulb
push
xor
xchg
hlt
inc
dec
sub
mov
fistl
jne
mov
adc
jne
imul
punpcklwd
test
test
les
nop
dec
roll
adc
push
sub
mov
mov
inc
xor
sub
outsb
fdivl
cmp
aam
stos
add
insl
xchg
adc
inc
cmp
or
hlt
push
pop
jae
dec
insl
and
cli
mov
dec
mov
push
cli
jo
loopne
pop
ret
ljmp
add
fnsave
lea
or
mov
cmp
jle
aaa
es
pop
mov
sbb
gs
dec
stos
xor
orl
call
ret
ret
cld
pop
dec
imul
jo
and
pop
pusha
std
test
dec
jp
int3
or
aad
lcall
mov
test
jb
out
sub
jnp
sbb
adc
jns
xchg
out
add
mov
sarl
pop
cmp
pop
inc
pop
cmp
fidivs
mov
dec
lock
int3
gs
pop
xor
mov
mov
push
xchg
dec
lds
xor
ret
ficoms
aas
jnp
push
iret
dec
jne
or
dec
mov
add
xor
outsb
mov
loope
ja
mov
push
insb
movsb
cmp
dec
hlt
call
lds
repnz
test
mov
call
jo
ja
aad
mov
outsb
jge
push
add
mov
aam
dec
pusha
pop
mov
cmp
xchg
jge
icebp
adc
cwtl
mul
adc
sub
inc
insl
add
sbb
or
icebp
mov
pop
lea
and
in
pop
addr16
pand
xor
dec
adc
aad
mov
test
loope
or
pop
xchg
xchg
stos
mov
movsl
mov
sbb
or
in
cmc
insl
and
cmp
sbb
mov
pop
add
inc
jns
xchg
icebp
out
mov
pop
jp
js
push
adc
inc
adcb
ja
cwtl
ljmp
rcrb
out
sbb
ror
enter
repz
fimuls
cld
fcomps
cli
pop
mulb
lods
mov
cmp
pushl
sbb
mov
idivb
cmp
mov
add
sub
sub
rorl
pop
pop
xlat
insl
loop
imul
sar
arpl
rorb
sbb
ljmp
pop
repz
push
lcall
dec
inc
in
pop
stos
aam
dec
or
and
dec
loopne
ljmp
movsl
adc
sarb
mov
stos
mov
in
push
pop
xor
xor
mov
sub
fimull
sub
out
pop
fucomip
mov
dec
dec
mov
out
mov
push
xchg
dec
sbb
adc
xor
pop
jmp
adc
push
mov
push
sub
js
shll
sahf
mov
mov
in
loopne
int3
test
loope
leave
sub
pop
xchg
repz
pop
dec
in
xlat
sub
xlat
cmp
cmp
jle,pt
push
pop
scas
mov
sub
rolb
mov
cmp
in
push
xor
aam
repz
mov
aad
adc
mov
mov
jp
and
add
loopne
jmp
sarl
hlt
jbe
mov
cli
dec
pop
and
jnp
jecxz
mov
fistpll
xorb
decl
inc
jo
xor
xchg
pop
jno
loope
add
push
sbb
sub
stos
movsl
int3
ss
inc
push
mov
dec
inc
shll
mov
jmp
add
pop
dec
adc
pushf
lock
aad
jnp
call
sbb
pusha
mov
pop
pop
mov
add
inc
mov
ficoml
ss
pop
mov
push
inc
js
add
leave
push
sub
jbe
add
xor
cwtl
pushf
lcall
xchg
or
sub
ficompl
es
aaa
jp
negl
dec
mov
popf
add
or
xchg
ficoms
adc
dec
fsubs
pushf
rolb
cmp
mov
push
popf
les
imul
jle
xchg
dec
mov
jl
or
fmuls
fs
cld
in
repnz
jbe
sbb
out
bound
xor
cmp
push
mov
loopne
movsb
pusha
cmc
inc
jmp
inc
subl
add
xchg
cmc
call
jno
mov
add
sbb
push
inc
xor
fnstsw
jmp
sbb
or
lahf
pop
sub
in
mov
das
mov
icebp
push
inc
out
sbb
mov
sbb
adc
cmpsb
push
push
inc
fdivrs
lahf
test
arpl
scas
in
ror
sahf
xchg
cmp
aas
sub
loop
mov
loopne
cmpsb
js
insb
insl
arpl
addr16
sub
sub
iret
pcmpeqw
hlt
cmp
inc
pop
outsl
test
imul
addr16
pop
sub
jae
movsl
or
push
dec
sti
inc
cmp
in
loop
inc
not
xchg
pop
movsb
out
dec
lcall
pop
xlat
xchg
add
negl
mov
pop
push
and
push
cmp
xchg
pop
push
xor
push
jb
andl
adc
sub
cmpsl
or
fimuls
inc
mov
cmp
mov
dec
ffree
pop
xorb
sahf
je
in
lea
js
sub
pop
mov
adc
xchg
adc
mov
fwait
cmp
int3
loopne
gs
xchg
shlb
jecxz
adc
mov
sub
into
sbb
shl
xor
xor
add
sub
mov
pop
add
int3
xchg
sahf
or
repnz
loope
pushl
push
jb
dec
xchg
and
rclb
xchg
jge
popf
xor
lea
lds
jecxz
cmp
jo
orl
jmp
repz
mov
jnp
push
imul
mov
add
and
jle
and
hlt
mov
mov
mov
inc
fsubrp
je
pusha
jo
inc
push
mov
outsl
movsb
sbb
daa
mov
pop
jp
aam
movb
movsb
icebp
lea
push
sar
fwait
mov
jno
xchg
mov
lods
push
test
jle
mov
pop
pop
pop
cs
jae
mov
push
pop
int3
mov
and
or
mov
in
test
dec
mov
xchg
mov
iret
jp
pop
mov
popf
jp
adc
call
or
cmp
out
sbb
aas
mov
out
or
or
aas
js
popf
subb
mov
push
stc
mov
dec
lods
or
lret
jno
add
jl
fldz
mov
enter
negl
sbb
adc
addr16
jno
dec
mov
sub
rcll
insb
out
test
lcall
jne
push
pop
inc
xchg
pop
hlt
out
jo
mov
and
mov
adc
mov
pop
pushf
xchg
pop
pop
sub
out
out
int
mov
inc
jae
dec
or
leave
xor
addb
xchg
dec
lret
lcall
fwait
int
pop
cmp
imulb
xor
xor
mov
push
repz
xchg
xchg
popf
movl
push
ficoml
fists
jnp
adc
jne
dec
ret
cmp
aas
push
movsb
push
lret
aad
pop
pushf
mov
jns
or
test
adcl
in
rorb
fistps
mov
and
cmp
cwtl
orl
stos
mov
inc
orb
pop
out
push
jae
or
clc
cld
stos
ja
xchg
out
fildll
mov
outsb
or
add
mov
xchg
aaa
and
mov
xlat
lods
cmpb
cmpl
sbb
cmpsl
repnz
xchg
test
mov
shl
daa
mov
mov
in
mov
dec
jns
pop
mov
adc
sarl
in
jo
cmp
sti
mov
cwtl
pop
sbb
push
les
push
jo
cmp
out
sub
cmp
les
jecxz
and
lret
insl
nop
sbb
enter
add
inc
cwtl
test
rorl
insb
pop
scas
dec
or
scas
and
pop
sahf
jmp
movsl
cmp
inc
clc
and
add
imul
cmc
push
imul
sub
inc
or
jp
push
mov
pop
pushl
in
jns
outsb
adc
ret
push
mov
enter
mov
pushw
xor
icebp
dec
sub
mov
mov
jecxz
mov
pop
or
sbb
out
mov
fsubrl
push
cli
cmp
xor
pop
xor
bound
and
gs
sbb
fs
mov
in
mov
adc
pop
sub
and
outsl
pop
xchg
mov
sub
imul
mov
jg
jae
cld
adc
scas
and
xor
push
in
mov
sbb
sub
cli
js
hlt
push
sbb
mov
pop
or
push
enter
sti
sub
popa
sti
dec
sub
xchg
xchg
adc
sarl
out
rcrb
sub
imul
rclb
lds
insb
inc
call
jg
sbb
aas
xor
lock
and
cld
dec
xchg
push
jo
sub
xchg
sbb
cmp
add
loop
cmp
xor
and
dec
scas
imul
mov
mov
call
dec
das
mov
loopne
arpl
loop
outsb
imul
cmpsb
push
insb
div
jne
insl
call
shrl
mov
pop
xchg
mov
and
lock
fscale
addr16
inc
xor
and
pop
pop
dec
decl
and
cltd
xor
loopne
xchg
pushf
nop
xor
jl
cld
sub
cmp
shlb
sub
int3
iret
movsl
cmpl
fisttpll
push
xlat
sbb
subl
mov
mov
gs
shlb
jae
inc
cs
arpl
jge
dec
nop
push
es
mov
add
ret
ja
imul
hlt
xor
or
add
ja
lret
adc
je
out
jge
ret
mov
ja
fs
rclb
stos
fsubl
stc
repnz
mov
dec
dec
jl
mov
xor
xor
and
push
repnz
lahf
mov
cwtl
in
jo
adc
out
rcr
xchg
and
mulb
into
inc
ret
mov
inc
in
pop
add
test
fldt
punpckhdq
scas
push
adc
push
cltd
into
mov
jno
push
mov
pop
ret
xchg
add
mov
lret
lds
fadd
xchg
and
into
cmp
cmp
jb
and
stos
inc
fsub
inc
pop
outsl
das
lds
mov
insb
mov
push
and
sub
push
xor
lret
jmp
addb
jle
mov
lock
jg
jbe
movsb
leave
aas
mov
enter
cmc
push
or
pop
aaa
xchg
rolb
scas
pop
aam
jbe
ljmp
sub
test
scas
adc
les
in
xchg
jno
ror
jb
dec
int3
mov
pop
nop
rcrb
add
xchg
das
loop
arpl
sar
stc
mov
cmp
cmp
ss
sbb
jg
add
test
sub
lds
add
test
movsb
xor
in
cs
in
scas
les
hlt
lcall
testb
xor
push
inc
adc
call
dec
add
fwait
pop
jg
lods
fldenv
pop
dec
mov
iret
sbb
xor
dec
jb
movsb
call
out
and
pop
outsb
ljmp
mov
rcl
pusha
jo
sbb
pop
inc
xor
pop
imul
cmp
sub
mov
out
push
lahf
roll
call
inc
mov
xchg
mov
lcall
pop
cli
push
fcmovnbe
scas
cmp
inc
or
pop
mov
movaps
cltd
mov
pop
mov
loope
jg
sub
jmp
jne
cmp
popf
test
cld
int
fldt
jecxz
test
call
popf
sarb
neg
cmp
or
dec
sbb
adc
jge
sbb
sub
or
and
push
icebp
or
cltd
pop
mov
in
jb
push
adc
mov
arpl
gs
sub
jg
data16
imul
or
jg
cmp
pushaw
mov
nop
loope
fldenv
loopne
lds
ljmp
and
cmp
scas
sbb
xor
fstps
test
test
fdivrs
fxch
dec
lcall
into
mov
sarb
cmc
xor
xor
loop
loop
cmpb
ficoms
movsl
loop
adc
dec
and
and
lock
sub
mov
les
xchg
aaa
mov
cwtl
mov
mov
jl
rclb
jecxz
aas
loop
xor
test
pop
sub
adc
popf
push
xchg
fcompl
sub
out
out
popa
push
cmpb
xorl
xor
jp
cmp
cltd
jmp
leave
negl
data16
lret
inc
lock
test
pusha
cmp
dec
dec
push
popl
sub
cmpsl
rclb
icebp
lods
fsubrl
in
mov
sbb
push
jb
sbb
loopne
or
ds
jae
push
mov
shll
ja
or
cmp
cmp
push
pop
cmpl
loope
shll
jo
xchg
shll
dec
xlat
xlat
mov
xchg
or
dec
ja
pop
scas
lods
xlat
mov
xorl
inc
mov
mov
in
jecxz
dec
sub
jle
mov
xchg
aaa
dec
ds
sbb
cmpsb
mov
out
pop
mov
jp
xor
imul
sub
rolb
movsb
pop
cmp
jns
cmp
sti
insl
les
push
jns
add
insb
mov
gs
adc
pop
cmpsl
popa
jnp
jne
jg
mov
pop
cmp
mov
mov
test
leave
and
mov
insb
or
dec
cli
aad
jb
in
xor
les
mov
aas
gs
lret
and
adc
sbb
popf
xchg
out
out
rorl
shrl
push
in
add
or
add
loopne
sub
addr16
xor
clc
cmp
sub
int3
addb
pop
pop
arpl
cmpsl
inc
or
int
lret
hlt
ret
enter
push
sti
jge
daa
ret
test
or
or
or
jg
addps
into
push
xchg
inc
icebp
sbb
outsl
mov
aam
adc
pop
lods
inc
int3
sahf
inc
sbb
out
xor
add
lea
jb
push
repz
mov
dec
push
mov
jb
adc
sbb
rorb
daa
popa
outsb
jp
fcomps
inc
adcb
pop
push
cmpsl
repz
xlat
inc
jmp
mov
lock
mov
sub
cs
push
loop
in
inc
jo
mov
das
ja
push
mul
and
mov
fcoms
or
cmc
pop
push
test
hlt
imul
add
dec
mov
dec
adc
pop
ss
inc
test
pop
lahf
les
aas
add
mov
lods
add
and
lret
adc
and
jl
xchg
xchg
pop
push
ljmp
or
imul
jg
mov
xchg
popa
sti
pusha
jp
jo
dec
inc
add
repnz
mov
pusha
pusha
ds
push
fiaddl
popa
scas
daa
rolb
jbe
mov
bnd
loope
cs
dec
shr
mov
xor
pop
jmp
fisubs
mov
insl
inc
inc
push
cmp
movsb
dec
mov
jmp
xchg
push
xorl
pop
shll
or
cmova
aad
pop
sbb
push
dec
mov
out
jbe
mov
mov
mov
mov
ja
sub
cmp
inc
into
in
imull
repz
jecxz
arpl
data16
jns
dec
and
mov
cmp
xchg
lods
or
sbb
and
daa
inc
dec
sub
lret
and
lods
adc
xor
test
cmp
xor
out
js
inc
jmp
adc
ficomps
aam
xor
scas
ret
mov
pop
int
xlat
mov
iret
or
test
inc
jl
mov
shl
xchg
push
add
and
loope
aam
sbb
hlt
pop
pop
adc
inc
or
mov
mov
dec
cmpsb
fidivrl
hlt
and
sbbb
outsb
dec
mov
dec
out
mov
jmp
adc
mov
or
mov
push
dec
ffree
test
shrb
std
and
inc
imul
jno
faddl
int
loop
jo
xchg
dec
sbb
and
scas
out
mov
inc
mov
movsl
lahf
xor
mov
or
daa
movsb
icebp
xchg
gs
xor
fs
loop
out
addr16
lcall
fnsave
cmp
adcb
jb
rorl
pop
push
sbb
cld
movl
hlt
cmp
pop
xor
enter
in
adc
fmul
mov
popf
fs
movsb
dec
andl
sub
std
dec
shl
pusha
mov
mov
faddl
fmull
mov
jmp
test
adc
je
sti
inc
jno
jnp
dec
mov
test
mov
inc
push
aam
mov
outsl
test
clc
ret
add
sbbl
mov
pop
sarl
outsl
repnz
push
jno
sarb
popf
xchg
clc
add
or
adc
mov
or
test
std
mov
xor
sbb
xchg
mov
adc
insb
es
and
aad
mov
xor
sahf
mov
insl
cmp
jne
mov
and
imul
xchg
push
addr16
dec
in
rorl
jg
rclb
int
adc
or
stos
lods
cmp
push
push
imul
fidivl
sub
xor
dec
and
pop
fcmovnbe
enter
inc
mov
sahf
mov
stc
insb
jb
stc
mov
jbe
cmpsl
jle
cwtl
out
and
xchg
cmpsb
ljmp
inc
add
lret
mov
mov
dec
pop
in
cmp
xchg
push
fldenv
mov
rcl
test
ret
addl
cltd
movsb
in
ret
imul
xchg
stos
fs
loopne
pop
push
pop
sub
mov
or
inc
mov
sub
lea
in
push
les
stc
popa
push
loop
xchg
popf
inc
and
jp
adc
scas
xor
and
andl
mov
mov
pusha
or
jecxz
mov
xor
push
inc
jle
call
mov
or
stc
in
aad
in
cmp
mov
add
data16
pop
jge
rolb
in
adc
jecxz
leave
ret
cmp
call
or
sbb
xchg
jnp
in
cld
add
fldcw
mov
xor
sahf
out
sbb
pop
sub
ljmp
scas
fwait
inc
pusha
sbb
sbb
jbe
sbb
loope
jo
out
or
dec
push
sub
shll
add
add
daa
pop
jbe
jo
popf
jecxz
pop
pop
cmp
cli
inc
ss
addr16
loop
out
loop
gs
imul
add
gs
mov
xlat
push
repnz
dec
mov
in
jbe
int3
pushf
xlat
mov
jle
aas
jbe
xchg
pop
imul
push
xlat
movsl
jae
outsb
mov
fsubl
stos
bound
jo
int3
es
or
iret
gs
mov
shrl
lcall
adc
inc
in
cmp
ret
ljmp
or
pop
sub
dec
sub
mov
sbb
daa
popa
lret
ljmp
push
mov
or
inc
div
sahf
repz
jnp
push
dec
sti
cmp
and
mov
mov
jg
mov
xchg
shlb
push
cmp
loope
mov
lret
rclb
mov
fwait
jecxz
bound
dec
xchg
ja
cmp
ret
pop
xlat
inc
or
lods
push
xor
inc
mov
mov
mov
shll
fisubrl
push
mov
sub
jmp
iret
xchg
cmc
jb
dec
cmp
mov
pop
xchg
inc
adc
mov
lds
push
mov
scas
pop
push
js
dec
test
sub
js
mov
inc
cmpsl
fbld
inc
and
and
cwtl
lcall
mov
iret
pushf
lds
sahf
insb
sbb
shlb
lds
movsb
ss
push
jo
push
xchg
mov
and
imul
outsl
in
jnp
pop
xor
mov
or
cmc
cmp
push
aad
cs
insb
insw
test
in
shlb
pop
or
xchg
adc
inc
jmp
stos
cltd
cltd
xlat
movsl
dec
fists
aaa
cltd
jle
xchg
jbe
iret
stos
js
pop
mov
cmp
scas
jne
and
in
cld
dec
and
mov
stc
rorl
loope
xor
pop
movsl
arpl
outsl
lea
pop
jle
mov
lcall
dec
xor
xchg
or
sarl
adc
cmp
ficomps
movsl
clc
pop
adc
cwtl
xchg
add
jg
fstpl
push
sbb
push
mov
out
xor
xorb
inc
lahf
lcall
hlt
out
hlt
ficoml
inc
and
rorl
xorb
push
addl
jbe
xor
sub
or
ret
shlb
xlat
ljmp
clc
xor
jmp
jb
dec
and
push
je
dec
scas
dec
ficoml
fbstp
and
and
pop
stos
inc
lods
mov
add
fisubrs
scas
cmp
dec
sub
xor
andb
ret
or
cmp
loope
push
insb
stos
lret
or
stos
call
in
inc
sub
out
dec
pop
fadds
xor
sub
and
inc
cmpsl
cwtl
add
cwtl
pop
cmp
and
inc
inc
subl
mov
cmp
ljmp
or
xchg
es
xchg
dec
xchg
pop
inc
dec
loopne
addl
adcl
add
fucomip
jbe
clc
js
stos
push
mov
pushf
mov
aaa
add
fimuls
sti
fidivrs
or
outsb
push
xchg
pop
jmp
cmpsl
push
jne
test
mov
push
and
ret
inc
lock
test
repnz
dec
hlt
xchg
call
fisttpll
push
mov
stos
adc
sbb
or
lods
daa
shlb
pop
jmp
test
stc
or
mov
or
pop
jae
je
mov
aas
sti
lea
jb
add
mov
pop
jbe
xor
sbb
in
aad
pop
jb
pop
movb
fadds
dec
push
pushf
bound
and
ss
mov
arpl
inc
je
std
lds
or
inc
push
push
outsl
aad
in
aam
lock
inc
mov
push
mov
sbb
scas
ss
mov
jb
je
fists
push
xor
call
fimull
xchg
sbb
movsb
xor
std
push
int
dec
inc
add
cmp
and
xlat
and
clc
movb
mov
test
and
nop
and
in
dec
cltd
xchg
pop
cmp
mov
jmp
and
lock
sahf
mov
lcall
cmp
popf
mov
inc
adc
in
outsb
push
fsubrs
jle
arpl
mov
mov
xchg
xchg
push
ljmp
es
imul
mov
imul
lahf
mov
daa
adc
repz
inc
sbb
sub
xchg
movsl
mov
and
cli
lcall
push
in
xor
add
hlt
cmp
subl
hlt
adc
sub
and
xchg
aaa
mov
ss
call
scas
dec
pop
int
sbb
ss
aam
loopne
orl
xor
and
mov
stc
addr16
mov
sub
xor
sbb
push
push
bound
faddp
test
cwtl
fisttpll
xchg
ss
loopne
out
mov
inc
mov
movsb
insl
jbe
mov
jmp
and
mov
mov
into
add
out
push
mov
or
sbb
jg
js
inc
lock
sub
int3
sbb
push
rcr
test
je
fnsave
mov
push
lret
inc
adc
jp
inc
lahf
dec
mov
scas
aam
lret
jle
jbe
jb
sub
repnz
push
lock
mov
and
cld
popa
and
jg
js
ror
xchg
fdivr
test
pop
add
pushf
shll
pop
push
in
xor
loop
xor
call
add
fwait
aas
pop
xchg
dec
lcall
aaa
add
sub
sti
and
jne
pushw
add
nop
mov
pop
adcl
insl
sub
xchg
bound
mov
sub
cmp
les
jb
sub
jmp
data16
pop
fisubl
ljmp
pop
jno
push
xchg
sbb
pop
hlt
into
xchg
mov
arpl
or
cli
inc
into
mov
jb
xor
sub
mov
out
rorb
xchg
jae
adc
adc
pop
xorl
cld
lahf
pop
jecxz
pop
out
sbb
dec
stos
add
lods
mov
pop
mov
pop
sub
lock
add
or
jmp
aam
shll
mov
adc
rcr
sbb
adc
and
rcrb
add
jl
dec
repz
rcr
sub
jns
rorb
mov
fimuls
shlb
mov
mov
imul
shrb
dec
mov
jmp
mov
lea
sbb
in
std
std
dec
cmp
xor
jp
sbb
pushf
adc
push
test
push
lea
cld
fs
fsubrs
cmpsl
and
mov
cmpsl
mov
test
std
jo
leave
pop
sbb
xchg
sbb
jmp
mov
mov
ljmp
sbbb
rcrb
jo
push
and
jl
imul
mov
mov
jg
scas
and
and
ja
mov
iret
add
adcb
mov
mov
scas
mov
or
mov
fcmovne
mov
jg
repnz
pushf
xchg
sbb
xor
dec
jbe
es
pop
cwtl
xor
pop
js
dec
loopne
test
push
rorl
addr16
stos
fsts
and
movl
pop
mov
pop
nop
add
cmp
cmp
outsl
stc
aad
cmp
aad
imul
pop
and
cmc
dec
or
sub
cmp
dec
enter
push
movb
leave
dec
das
jnp
push
fdivrs
test
xadd
sub
or
insl
cmp
push
mov
aam
xor
mov
lret
fnsave
cmp
ret
add
rcr
pop
gs
fcmovne
push
cmp
sbb
and
xor
sub
pop
cmpsb
ret
mov
mov
mov
sbbl
xchg
andb
and
daa
call
adc
pop
pusha
fsubs
pushf
outsl
push
jae
enter
sbb
loope
scas
lds
mov
enter
xor
das
mov
sbb
mov
fdivrl
cmpsb
or
sahf
test
shll
jmp
leave
jp
sbb
dec
bound
jae
iret
push
xchg
cwtl
jge
les
scas
push
outsl
mov
inc
lret
in
enter
jge
stos
add
gs
xor
push
outsb
cmpl
inc
popa
adc
cli
stos
mov
inc
jp
int3
fimuls
lret
mov
outsl
xchg
jno
inc
pop
xor
call
mov
sub
arpl
icebp
repnz
pop
loope
pop
clc
loope
push
in
repnz
mov
mov
cwtl
dec
xchg
fisttps
cmpsb
push
lret
xor
lcall
sbb
mov
and
stc
cltd
push
mov
repnz
adc
cmc
stos
pop
adc
cmp
jecxz
sbbl
movsb
sub
cmc
inc
xor
jno
jae
dec
mov
cmc
lods
or
loopne
test
insb
pop
nop
jno
lods
leave
stos
mov
inc
add
lods
inc
les
out
or
cmp
dec
arpl
sbb
ret
mov
mov
pop
fdiv
or
ficomps
sbb
ss
and
les
lcall
jmp
sub
mov
lahf
insb
jl
outsl
in
dec
cs
iret
rcrl
push
jecxz
outsb
loope
mov
mov
add
push
in
lods
loopne
push
and
xchg
mov
mov
fdivrl
pop
call
enter
int3
das
std
sub
imull
inc
hlt
dec
adc
sub
lret
mov
or
lods
lock
clc
iret
in
push
dec
aad
aas
adc
push
inc
adc
mov
fsub
adc
repz
sub
js
lds
add
cld
or
or
adc
fcom
jnp
adc
fstl
dec
dec
cmpsl
xchg
or
into
jne
jl
and
sbb
sub
cwtl
inc
cmp
jle
mov
aaa
fiadds
inc
ljmp
cltd
cmp
adc
jo
int3
into
out
pop
cmp
aad
xor
dec
jns
scas
popa
in
mov
mov
adc
movsb
lahf
inc
push
mov
out
es
ds
inc
and
jle
dec
and
rclb
cmp
aas
jo
sti
or
adc
movb
cmp
sti
push
scas
in
int3
sub
jno
shlb
xchg
adc
loop
loopne
push
adc
cmp
in
cld
push
andl
mov
cli
jmp
jp
jne
pop
cmp
or
cld
inc
push
loop
ss
pop
subl
adc
fimuls
aaa
into
jbe
dec
pop
cmc
jmp
icebp
dec
stc
jl
mov
sbb
jl
ror
loope
movsb
sbb
fstpt
std
shlb
cmp
les
out
mov
ficoms
or
jmp
mov
mov
xor
push
mov
sbb
xor
inc
or
fucomp
and
add
popf
cmp
jnp
and
jmp
jae
push
lds
mov
jge
test
loope
jle
orl
dec
and
inc
and
sbb
push
sub
xor
add
push
inc
rorb
imul
sbb
pop
add
inc
add
mov
cmpsl
pop
shll
push
cmpsb
push
inc
scas
mov
imul
mov
test
ret
dec
jmp
push
divl
aas
bound
adc
aaa
icebp
and
push
outsl
sbb
daa
or
push
sbb
popa
xchg
inc
mov
dec
and
icebp
pop
inc
stc
xchg
push
cltd
popf
insl
or
mov
push
add
xor
fidivrl
rcl
leave
dec
dec
aaa
iret
jno
dec
mov
jae
mov
test
add
pop
jae
call
or
ss
push
repz
adc
lods
mov
inc
xor
sub
jne
inc
lahf
sahf
push
stos
fists
test
sub
lret
or
cs
not
dec
fwait
test
jo
mov
cwtl
push
std
ret
sub
cwtl
imul
icebp
ret
sbb
and
ret
fbld
sub
dec
mov
or
loope
aam
cmp
lods
add
popf
jnp
and
out
sbb
push
mov
fcompl
cwtl
incl
out
dec
jns
icebp
and
mov
sub
cld
ja
or
jle
stos
mov
ja
xor
ret
dec
in
cmc
push
pop
decl
fwait
jb
sub
aaa
std
pop
mov
fwait
jbe
lret
push
jl
cmc
test
add
mov
mov
pop
mov
inc
test
lahf
shll
mov
cmp
push
or
xor
fcompl
imull
js
pop
pop
js
loop
jne
sarb
pop
shr
pop
and
movsb
pop
loope
pop
daa
cmp
je
insb
scas
sbb
push
ret
fsubs
loop
jae
into
or
cmp
lahf
sbb
pop
cmp
arpl
cmpsl
mov
mov
add
cmp
lahf
xchg
loopne
test
cmpsb
dec
or
pop
or
cmpsl
mov
call
add
scas
mov
int3
repnz
adc
cmpsl
movsb
add
loope
repnz
pop
push
push
into
je
or
imul
nop
push
js
and
insb
fisubl
push
pop
fidivrs
cmp
out
pop
fs
fsub
jmp
xor
fdiv
out
dec
les
lds
pop
imul
lret
daa
int3
cmpsb
or
out
pop
mov
or
mov
iret
inc
movsb
pop
mov
pop
stc
pop
shlb
inc
sbb
or
arpl
inc
les
lods
jle
cmp
mov
and
add
ljmp
mov
leave
lret
adc
fbstp
and
aam
mov
int3
inc
out
cmp
jo
xor
lret
repz
int3
cmp
mov
sbb
aam
mov
xchg
xchg
cmp
out
out
les
dec
jmp
mov
adc
pop
xor
push
xor
int3
stc
leave
ss
test
int3
divl
mov
sub
js
gs
out
leave
aaa
dec
push
stos
clc
mov
loop
xchg
bound
pusha
movsl
dec
jle
jp
dec
cltd
les
leave
xor
sbb
sub
call
std
cmp
ror
ffreep
imul
in
mov
xlat
mov
or
add
leave
dec
sub
sti
jg
xchg
sbb
xchg
push
outsb
cltd
loop
xchg
ret
cmp
repz
imul
inc
ret
xchg
cli
daa
in
dec
add
test
mulb
in
and
and
mov
sub
cmp
outsl
mov
xlat
push
enter
mov
fstpl
inc
push
stc
mov
fs
xchg
and
or
inc
aaa
jge
cltd
sub
dec
jle
rorb
cmp
mov
int
fwait
push
inc
cmp
add
nop
adc
lahf
and
cmp
repz
cmpsb
insb
sbb
addl
jg
fidivs
mov
add
mov
push
ret
gs
ret
jae
sub
pushf
sbb
inc
outsb
xchg
dec
and
adc
std
data16
dec
adc
mov
loop
testb
aad
testl
mov
jbe
add
outsb
imulb
push
push
push
add
lret
nop
aas
nop
push
dec
or
test
lcall
ret
das
in
fisubrl
mov
mov
fwait
out
in
jmp
inc
cwtl
push
mov
fucomi
and
insl
fcoms
xor
xor
push
mov
mov
stc
pop
mov
adc
sub
mov
cmp
add
and
movsl
pop
xchg
sub
sti
inc
push
data16
xor
sub
into
inc
mov
or
dec
int
sbb
sub
test
aas
inc
inc
mov
dec
dec
xor
sub
popa
lods
or
inc
inc
adc
dec
imul
lea
push
adc
sub
aas
adc
gs
pop
test
sub
jb
aaa
inc
xchg
outsl
xorb
add
inc
push
mov
and
out
out
les
lds
xchg
test
mov
lods
ds
cmp
stc
ret
paddusb
or
mov
dec
or
insb
and
cwtl
cmpsb
xchg
and
sub
mov
add
popf
jbe
imul
fsubl
jne
rcrb
dec
mov
ja
add
xchg
cmp
cli
popf
xchg
mov
shr
pop
jle
outsb
mov
mov
in
repz
repz
mov
clc
imul
adc
push
xchg
adc
fld
mov
pop
xor
and
in
cmp
sub
and
jmp
pop
push
and
in
lea
pop
pushf
jns
mov
cs
negl
pop
or
enter
ja
cwtl
dec
jae
cld
dec
ficompl
dec
int
mov
and
insb
push
mov
dec
push
jp
enter
jge
inc
inc
lds
mov
bnd
sbb
data16
dec
test
push
pop
cmc
mov
int
movsb
mov
mov
mov
inc
mov
and
mov
mov
xlat
push
and
mov
jno
push
cmp
jl
pop
ds
xchg
and
jecxz
mov
jl
sub
orl
shrb
and
sub
xlat
nop
and
jo
jecxz
insb
jbe
out
cmpsb
popf
adc
ret
sub
nop
xlat
xchg
mov
xchg
add
pop
mov
cld
repz
push
push
imul
adc
push
cmp
jg
cwtl
shll
push
mov
out
mov
sbb
bound
mov
and
jae
fsub
mov
jle
sbb
pop
stos
or
cmp
inc
les
test
or
fs
mov
pushf
cmp
and
lret
push
mov
in
mov
xor
cwtl
adc
lock
pushf
jne
repz
mov
and
pop
adc
loopne
lds
mov
jl
jl
adc
pop
cmpsl
in
xchg
dec
xorl
clc
push
cs
aas
or
inc
loop
cli
bound
popa
push
fdivrl
idivb
mov
test
adc
lods
jmp
mov
outsl
or
xchg
je
mov
cmp
movsl
ljmp
sbb
xor
repnz
jmp
and
pop
fs
xchg
loopne
or
enter
pop
xor
andl
xor
sbb
mov
scas
or
push
rclb
sub
loopne
aaa
movsb
aad
dec
pop
sbb
out
fwait
and
das
xor
out
cmp
and
js
inc
cmpb
dec
pop
push
inc
sub
add
mov
aas
mov
pop
ljmp
repnz
fldl
outsl
ljmp
inc
xchg
cmpsl
pusha
jnp
incb
daa
inc
movsl
enter
jecxz
or
lds
pop
pop
test
or
dec
jp
jns
cmc
sub
data16
lea
std
fimuls
and
psubsw
aam
adc
mov
sub
popa
aaa
lods
pop
dec
repnz
fisubrl
in
cmp
leave
pop
in
push
inc
lea
ret
dec
rorb
add
cmp
xor
pusha
jae
ja
mov
inc
sahf
jns
mov
add
es
xchg
pop
or
idivl
jno
inc
sub
ret
adc
enter
mov
mov
testl
jecxz
mov
adc
out
mov
jl
divb
fwait
out
movsb
or
lcall
sub
lods
addl
and
cld
pusha
ret
stos
mov
fwait
into
jb
push
ljmp
dec
dec
xor
pop
add
push
rcrb
jo
sbb
jno
jge
pop
nop
insb
out
push
std
adc
lock
jbe
jnp
imul
xchg
pop
test
mov
xchg
stc
inc
repz
call
andl
imul
cmc
lods
push
pop
cld
sub
dec
mov
mov
test
mov
or
cs
int
je
iret
imul
inc
xor
cmc
cmp
enter
ja
pavgb
sub
mov
rorb
ljmp
mov
push
or
or
sahf
clc
sub
lea
rcrb
sub
les
adc
dec
pusha
or
bound
xchg
scas
jbe
cmp
adc
xchg
mov
test
std
in
je
notl
or
sbb
enter
fwait
xchg
fs
stc
sarb
jmp
xchg
mov
aam
jge
mov
push
hlt
jo
sbb
addr16
xor
lock
in
push
mov
jns
clc
scas
aad
sub
mov
sbb
scas
loop
jg
in
jne
js
xchg
cltd
fbstp
or
in
mov
testl
negb
aas
cmp
setge
xor
adc
push
jnp
mov
pop
pusha
lea
mov
lcall
dec
jnp
insl
subl
mov
jne
mov
sbb
mov
xor
shll
movsb
jl
mov
cwtl
sbb
mov
cmc
icebp
xchg
pop
ds
mov
ret
in
mov
cmp
lcall
jge
dec
divl
sub
inc
adc
loopne
mov
sub
push
jne
push
out
sbb
mov
in
clc
or
or
loop
mov
push
test
adc
fsub
jne
out
imul
lahf
cmp
fdivrs
sbb
jp
lahf
ja
inc
imul
or
cmp
das
repz
jge
pushf
test
mov
lods
jg
jle
lods
outsl
adc
jb
mov
jl
pusha
adc
mov
push
cmp
and
push
lea
repz
push
std
inc
add
dec
addr16
or
out
stos
jbe
shrb
dec
imul
nop
inc
or
mov
int3
loop
fisubs
cmp
and
out
push
pop
stos
sub
ljmp
push
cltd
push
test
mov
ljmp
xor
out
pop
dec
add
adc
decb
sbb
mov
push
movsb
test
dec
sbb
imul
inc
xchg
jl
fsubs
addl
dec
lahf
lcall
pop
xor
scas
sbb
int
outsb
adc
adc
shll
sbb
out
ja
sahf
jmp
mov
fldt
scas
andl
not
ja
inc
or
push
push
sti
jg
xchg
out
xlat
mov
insl
mov
sub
mov
fisubrs
inc
shrb
jbe
fstps
test
pop
xchg
out
bound
xor
xor
cmp
xor
or
ljmp
lret
xchg
and
pop
mov
sbb
sbb
fs
lahf
jo
jl
mov
or
inc
lock
call
shrl
popa
outsb
mov
xor
into
xchg
pop
sbb
sub
inc
add
mov
pop
movsl
cmp
enter
sub
popa
imul
and
lret
add
cmp
add
xor
rol
ds
add
and
mov
and
mov
nop
and
lea
jmp
dec
pop
push
pop
pop
mov
push
rorb
je
lods
cmpb
mov
sub
call
andb
and
cwtl
cld
adc
adc
iret
xchg
xchg
xor
sbb
jbe
push
scas
enter
pop
mov
es
iret
repnz
dec
insl
and
pop
into
and
aas
repz
mov
in
adc
cli
test
lahf
pop
xchg
inc
add
inc
mov
insb
pop
std
and
cmpsb
cmc
cmp
sub
adc
sub
cmp
pop
imul
inc
mov
hlt
push
cltd
stos
hlt
push
mov
cld
jecxz
sbb
addb
push
fs
xor
push
repnz
mov
push
dec
xchg
jmpw
inc
xchg
popa
dec
movsb
mov
and
lock
adc
orl
xor
xor
out
fidivl
fcoms
hlt
inc
ret
push
das
lds
leave
add
dec
lds
fs
sub
adc
xchg
rorl
mov
dec
add
in
int
mov
loopne
jb
cmp
mov
lock
mov
push
aad
push
mov
pop
arpl
inc
pop
aam
xor
jb
push
add
add
cmc
xor
inc
xchg
fwait
push
cli
sahf
mov
ret
push
inc
mov
mov
add
xlat
cmp
xlat
fsubl
ret
repz
sub
pop
push
pop
dec
repnz
or
sbb
and
aas
cmp
cmp
sbb
aas
mov
in
fwait
push
cmp
pop
dec
mov
int3
aaa
inc
loope
out
scas
hlt
mov
xchg
icebp
clc
icebp
das
mov
mov
push
sub
xchg
jbe
push
shr
mov
lods
push
outsl
jae
stos
push
scas
mov
mov
movb
jne
mov
lret
popf
lret
inc
and
cmc
hlt
ss
shl
pusha
loopne
ret
dec
cmpsb
arpl
repz
and
sahf
or
nop
jge
adc
sti
into
push
xchg
cmp
cmc
dec
daa
mov
es
pop
pop
out
in
pusha
scas
and
mov
mov
xor
mov
inc
int
push
iret
and
sbb
aad
push
addr16
push
sahf
mov
fnstcw
mov
jae
xchg
mov
mov
xchg
out
fdiv
mov
shufps
in
lods
pop
mov
dec
add
outsb
ds
or
lods
lds
iret
dec
dec
int3
jo
jge
cld
pop
cmpsb
int3
xchg
adc
pop
sub
add
push
bound
outsl
adc
lea
cltd
out
inc
mov
jg
jg
xchg
push
movzwl
cmp
cwtl
push
mov
pop
in
cmp
fsts
lcall
stc
fs
xlat
mov
mov
mov
jbe
adc
pop
rcrl
xchg
out
cmp
andl
xor
pop
clc
inc
addr16
dec
fldcw
leave
push
sbb
dec
cmp
cmpsl
dec
sbb
add
add
cmp
jbe
mov
cld
rclb
pop
mov
push
add
pushf
dec
dec
push
dec
mov
xchg
pop
pushf
arpl
push
mov
pushf
mov
pop
inc
push
enter
dec
inc
arpl
fsubr
pop
xchg
mov
pop
addr16
aam
shl
push
xchg
das
out
je
ret
shl
in
push
out
popf
add
push
jp
xchg
ja
inc
jp
mov
adc
inc
out
bound
xchg
inc
push
repnz
jge
movsb
push
imul
cwtl
mov
sub
sarl
testb
xchg
or
cmpsb
sub
dec
push
mov
outsl
pop
jae
adc
and
fcom
popf
icebp
in
das
es
xchg
ficoms
xor
stos
xor
sub
sub
and
or
add
mov
dec
dec
inc
cmp
mov
lret
adc
das
gs
dec
mov
popa
imul
xor
aam
mov
xor
pushf
scas
push
fs
rcrb
xor
enter
or
sub
movsb
jb
jmp
out
cmp
sbb
mov
vandps
push
and
jbe
xchg
sub
sbb
movsb
ja
adc
sub
lods
xor
cmp
sbb
stos
sub
loop
test
add
fisubl
dec
pop
push
push
push
push
inc
enter
stc
leave
xchg
xchg
xchg
inc
push
and
arpl
rorb
outsl
pop
jl
push
and
add
pop
jb
fldt
cmp
xchg
cmpsl
addr16
push
inc
fidivrl
or
ljmp
fldcw
bound
dec
js
push
mov
nop
shl
sbb
adc
pusha
lret
mov
push
dec
repnz
pop
mov
cltd
daa
and
adc
or
mov
xchg
xor
lods
scas
js
mov
mov
ror
cmpb
movsl
jbe
aam
jecxz
insb
movsb
sbb
jg
into
test
cmovo
cltd
cmp
out
xlat
les
loope
adc
loop
xor
das
push
dec
cmp
or
adc
lods
and
int
ret
add
push
lods
jge
or
test
insb
sub
dec
mov
dec
or
push
mov
mov
data16
fsubr
cmp
cmp
cli
xchg
bound
fstpt
mov
imul
out
sub
test
sbbl
ds
outsl
or
xor
sti
push
aas
lret
lock
jb
mov
fsubr
scas
outsb
jge
cmpsl
push
das
fbstp
mov
add
mov
xchg
arpl
pushaw
push
xor
mov
jne
jbe
inc
insb
jo
lret
lea
push
iret
popa
cmp
test
mov
xor
sub
add
mov
dec
xlat
imul
push
adc
sti
adc
cmp
dec
int3
cmp
popf
jbe
pop
jb
in
push
jecxz
jbe
daa
jne
push
jp
ljmp
icebp
lock
jmp
jb
jp
or
jnp
xor
push
insl
or
lret
mov
insb
xor
inc
in
mov
repnz
das
xchg
out
pop
xchg
mov
jmp
lahf
and
adc
out
adc
loopne
jge
xchg
lahf
or
test
call
push
repz
mov
and
lret
subb
cmpsb
lock
lock
cltd
mov
loop
mov
xchg
pop
push
jbe
iret
imul
test
xor
call
loope
subb
pop
stos
stos
shlb
loope
neg
fmuls
fs
pop
xchg
mov
lret
mov
fcomip
ss
cld
movsb
or
out
mov
jns
cmpsl
das
dec
mulb
inc
sub
adc
sar
shl
lea
jg
das
xchg
inc
mov
mov
ds
jle
hlt
fimuls
mov
add
and
cli
push
cs
add
and
scas
iret
cwtl
xlat
xchg
lahf
sub
xchg
sbb
cmc
inc
mov
jmp
mov
mov
je
jnp
mov
inc
push
xor
icebp
insl
ljmp
pop
cmc
test
ss
mov
ja
mov
sbb
aam
jmp
aad
inc
clc
pop
jl
out
into
inc
pop
pop
rorb
xchg
and
cmp
sahf
mov
out
cmpl
cwtl
mov
add
in
jno
shlb
sub
mov
cmp
add
es
test
sub
mov
sahf
cmp
adc
mov
pop
lock
lods
inc
fldt
clc
dec
loop
adc
jno
sti
ljmp
int
dec
into
stos
leave
insl
aaa
lcall
xor
scas
mov
cmp
xchg
add
gs
sti
xor
push
xor
call
rclb
mov
aaa
sarb
push
call
pop
jge
lds
pop
loopne
out
mov
sub
sub
mov
stos
pop
outsb
mov
add
mov
add
add
jge
jg
dec
fistl
repnz
rcrl
jle
pop
ss
dec
cwtl
aad
cs
mov
scas
push
or
sbb
and
pop
popf
mov
fcmovne
pop
dec
ljmp
ficoms
rolb
lock
iret
sbb
xchg
and
leave
bound
aaa
xlat
xchg
out
fstl
push
dec
mov
pop
movsb
ja
lds
mov
and
sahf
rclb
mov
test
jbe
pop
fimull
xchg
xlat
scas
sub
cmp
je
xor
repnz
mov
fstps
repz
and
movsb
xchg
mov
push
xor
sub
cmc
cld
jle
xorb
sahf
and
sub
pushf
daa
hlt
roll
mov
and
aad
das
cmp
jle
stos
imul
movsb
shrl
je
mov
shl
xor
out
xchg
mov
inc
ret
pop
mov
push
xchg
add
lret
test
mov
sbbb
test
xchg
dec
stos
mov
mov
sub
lea
stos
icebp
xor
jns
test
arpl
inc
jecxz
or
mov
fldl
pushf
add
mov
nop
cmc
jmp
mov
add
dec
sbb
popf
dec
adc
push
in
les
or
mov
mov
in
movsb
jo
mov
pop
mov
xlat
lods
cltd
inc
add
pop
mov
mov
pop
xchg
push
orb
inc
mov
sub
les
jo
arpl
icebp
or
js
in
addb
add
mov
sub
test
cwtl
fldl
mov
out
int3
jbe
cmc
push
in
push
mov
adc
daa
push
push
xor
jnp
xor
cmpsl
inc
or
rclb
push
ljmp
rolb
test
push
xor
adc
inc
jl
cmp
dec
or
push
cltd
add
pop
div
and
lahf
rcl
mov
in
dec
push
in
push
adc
mov
test
aad
pop
xor
xor
mov
xor
jb
pop
sbb
lcall
xor
test
xlat
push
or
punpckhbw
loope
fistps
and
mov
add
jle
in
add
hlt
dec
dec
xchg
fsubr
cmp
or
movsb
sbb
repnz
aas
outsb
and
enter
cmc
stos
lret
cli
fnstsw
xchg
out
push
js
ss
in
jno
outsl
in
lret
jl
mov
fcmove
imul
jecxz
sub
jne
jno
pop
nop
sub
sarl
add
jecxz
mov
clc
mov
xor
push
loop
fstps
loope
mov
mov
movsl
push
or
pushf
add
add
mov
fldl
mov
adcl
loopne
xchg
mov
stos
test
gs
arpl
movsl
xor
pusha
and
int
cld
sub
lret
mov
mov
jae
scas
xchg
sub
out
xorb
mov
movsb
sbb
imul
jnp
pop
fs
pop
pop
in
ljmp
outsl
cmpsb
xor
aaa
jnp
stos
roll
sub
hlt
xchg
cmp
aaa
sbb
stos
sub
jns
dec
xchg
aad
in
out
push
popa
outsl
inc
int3
inc
mov
push
lahf
add
orl
scas
decl
divb
dec
sbb
jns
push
or
lock
mov
push
xchg
mov
inc
lds
sub
icebp
cmp
mov
imul
xor
int3
in
xor
mov
popa
push
popf
mov
add
cmp
aad
call
xor
adc
inc
xor
stos
dec
pop
and
stos
std
sarb
or
lods
test
loopne
movsb
in
inc
add
xor
jae
and
cwtl
mov
push
sbb
add
pop
sbb
cltd
mov
adc
test
push
fcmovnu
sub
push
xchg
cmp
imul
and
popf
out
sbb
xor
scas
repz
mov
ljmp
in
cs
outsl
and
mov
iret
cltd
testb
gs
cmove
shrl
and
and
mov
inc
push
push
in
jg
cld
pop
push
lret
sbb
jle
fwait
sub
hlt
aad
inc
fstpt
test
inc
sbb
loopne
xor
push
mov
jg
jae
mov
and
scas
dec
pushf
adcb
xor
mov
pop
mov
js
and
rep
rcl
sbb
je
mov
cmp
pop
push
cmp
cmp
pop
add
dec
or
mov
les
dec
mov
movsl
mov
addr16
jnp
iret
pop
cld
xor
imul
add
call
dec
setge
test
inc
jno
sar
add
sub
int3
out
inc
xchg
mov
jl
stos
pop
dec
enter
cmpsl
sub
inc
cmp
push
into
inc
insl
pusha
cmp
shufps
mov
int
adc
aad
jno
stos
loop
sub
dec
jg
out
jl
stos
mov
aas
rorl
cmp
fidivrs
gs
cwtl
fdivp
aas
outsb
pushf
add
out
and
add
rorb
dec
bound
dec
loope
jo
push
rorb
daa
shrb
push
mov
push
shll
test
xchg
bound
dec
xchg
cltd
jb
daa
idivl
mov
push
pusha
arpl
pop
addr16
cltd
roll
xchg
decb
test
ss
call
pop
xchg
xchg
mov
arpl
or
test
add
inc
fld
and
cmp
cmpsl
push
push
xlat
push
xchg
pop
xor
or
ret
or
mov
lret
xchg
sub
inc
mov
mov
mov
aas
sbb
push
cld
mov
jle
popf
jecxz
inc
dec
jbe
sub
daa
pop
pop
clc
aas
pmullw
repz
sbb
loop
mov
jns
or
daa
addr16
pushf
pop
add
lahf
mov
cmc
clc
icebp
daa
adc
mov
mov
std
insl
lock
and
pop
or
insl
inc
iret
test
push
dec
or
jae
loop
mov
adc
scas
jecxz
es
jnp
adc
shlb
xchg
cs
or
add
cmp
xor
aad
lret
jle
int3
jle
in
mov
jecxz
and
inc
call
adc
in
pop
jns
pop
jmp
cmp
jmp
push
cmpsl
rcll
jp
mov
dec
jg
adc
add
rorl
jne
pop
in
in
mov
jne
cltd
clc
sbb
mov
mov
and
loop
push
addr16
push
and
addr16
push
jl
inc
sbb
pop
adc
mov
or
fcomp
pop
mov
xor
adc
les
jns
pop
push
aad
iret
cltd
test
mov
fs
or
mov
stos
mov
jbe
push
in
inc
fdivl
add
enter
pop
subb
in
aad
push
mov
addr16
js
jno
mov
and
mov
jo
adc
repz
in
or
mov
roll
insb
outsb
in
pop
iret
cs
ret
enter
fidivs
int
int3
xchg
jg
das
xchg
inc
xchg
jecxz
add
std
cmc
pop
push
mov
xor
xchg
sbb
mov
sahf
pop
imul
int
cmpsl
fstpl
jg
fsubl
shrb
test
jne
shrb
push
cmpsb
add
shrb
mov
mov
xchg
repz
inc
mov
cmp
loopne
rolb
mov
sbb
stos
adc
sbb
leave
adc
inc
movsl
sub
mov
aad
lcall
add
fidivrl
fcomip
loope
sarl
sbbb
mov
push
and
and
mov
push
fldenv
cmp
test
sbb
jnp
cmp
pop
dec
pop
jecxz
cmpsl
add
std
pop
adcl
jg
insb
xchg
cmpsb
rol
popa
lods
dec
or
out
fstps
call
decl
clc
jbe
cmp
divl
jl
repz
dec
xorb
in
lods
adc
xor
add
iret
push
stos
mov
inc
xor
add
push
pop
divb
jns
fisttps
ret
inc
sub
mov
sbb
sub
flds
jo
sets
xchg
sub
hlt
insl
push
jge
add
pop
sbb
inc
rol
and
mov
xor
addr16
data16
addb
pop
pop
ror
loop
mov
cmp
and
jmp
lret
push
inc
pop
lea
lods
jge
sti
push
cmp
aad
add
shll
fldcw
push
xor
mov
cmp
dec
mov
jg
push
sbb
aam
sbb
jns
mov
push
hlt
aas
test
dec
xlat
push
repnz
inc
mov
mov
dec
mov
fwait
movsb
aam
adc
cmpsb
inc
mov
xor
push
push
lcall
loopne
jmp
sub
std
pop
jb
dec
sbb
pop
in
dec
dec
pop
test
jmp
lods
adc
lea
les
fcoml
mov
inc
and
cli
aas
jecxz
leave
ss
xchg
lock
punpckhdq
xchg
pop
fdivrs
popa
ja,pt
inc
mov
call
cmp
push
push
mov
inc
jl
cld
and
std
cli
rolb
mov
outsl
into
sub
iret
add
sbb
ljmp
xor
pop
fwait
inc
jle
lcall
jg
fstp
sub
out
jno
sbb
test
repnz
outsl
out
lds
xchg
mov
and
lret
jecxz
subl
sbbb
fcmovne
mov
push
xor
cmpsl
pushl
or
mov
xor
xchg
mov
dec
push
mov
sbb
lahf
sub
test
adc
int3
gs
adc
imul
ds
inc
test
in
dec
cmpsb
cmp
xchg
push
jns
cmp
pop
ds
push
cmc
add
xchg
xchg
xlat
fisubl
iret
or
fstpl
sbb
jns
aam
ljmp
adc
mov
mov
adc
outsb
in
addr16
and
test
pop
fwait
sbb
dec
push
jecxz
inc
jne
scas
xchg
sub
adc
roll
hlt
call
fimull
out
ljmp
jmp
fimull
shrb
push
jg
test
jg
jb
jbe
adc
inc
xor
xchg
repz
sub
arpl
incb
jle
adcl
pop
mov
pop
fstpl
add
xlat
cmpsb
scas
fmul
lret
fsubrs
cmpsb
rorb
or
mov
clc
fadd
cs
andb
rorb
jb
inc
cmpsl
js
out
std
lea
scas
loop
subl
jmp
imul
push
jmp
dec
cwtl
xor
aam
mov
push
jge
jge
push
jmp
mov
repnz
inc
popf
push
movsb
xchg
out
mov
imul
adc
xor
sbb
inc
jnp
push
insb
out
jbe
dec
pop
loope
outsl
push
inc
adc
add
cmp
jns
or
ja
mov
data16
dec
mov
loope
scas
xor
dec
les
in
insb
or
out
cmp
outsb
jmp
fisttpll
clc
test
fcomi
xchg
jge
iret
jnp
add
shr
dec
pop
cmp
outsl
jge
mov
fnstenv
inc
inc
inc
xchg
mov
fwait
sub
into
cmp
mov
pop
lret
loopne
jbe
sbb
pushf
pop
add
mov
cmp
stos
cltd
sbb
imul
rol
sahf
aad
xlat
loop
sub
add
mov
inc
mov
ds
push
jnp
fsubrs
push
adc
jo
jmp
icebp
cmp
sbb
dec
fsts
stc
lret
dec
lahf
movsb
mov
jecxz
dec
inc
cld
add
ret
inc
adc
jmp
jmp
mov
test
aaa
mov
inc
sbb
mov
mov
xchg
aam
std
push
stos
mov
sub
loopne
in
pop
in
mov
sahf
sahf
dec
jbe
push
or
int3
or
cmpsl
ret
cwtl
and
outsb
jo
and
decb
mov
enter
addr16
cmpsb
inc
rcll
inc
pop
jne
and
enter
nop
and
add
or
jmp
adc
notb
jno
shll
js
cmpsl
nop
adc
iret
movsl
mov
mov
addr16
pop
inc
in
ret
loopne
dec
fmulp
mov
sti
sub
sbb
jb
or
push
xchg
jb
out
pop
inc
int
pop
adc
daa
jecxz
pop
cli
mov
loopne
imulb
dec
test
xchg
dec
push
fsubrp
inc
xchg
cmp
push
ret
mov
dec
jbe
jbe
add
insl
xor
jge
das
mov
cmp
aaa
push
push
rorb
dec
popf
cmc
lods
stc
mov
lret
into
dec
inc
xchg
lds
inc
fldcw
mov
rcrl
int
sbb
push
in
sub
ret
jne
pop
fnstcw
mov
shll
add
clc
pop
push
or
daa
sbb
pusha
lret
lcall
out
adc
lds
shl
aad
aaa
push
adc
mov
push
pop
sub
push
out
mov
mov
add
lahf
ss
cmp
outsb
clc
pusha
or
push
push
or
push
fwait
idivl
cmp
pop
je
xchg
fsts
xchg
xchg
sub
cmc
enter
flds
jns
or
jbe
pop
enter
push
loopne
jl
lret
sar
sbb
cmp
jp
mov
aaa
dec
outsb
jo
and
xchg
mov
mov
mov
ja
pop
in
mov
insl
jne
mov
in
xchg
adc
lock
xchg
mov
inc
xchg
es
add
cltd
das
test
push
iret
fcmovu
sbb
add
mov
loopne
imul
lret
test
mov
iret
test
or
ja
leave
hlt
outsb
push
enter
or
adc
scas
outsl
lahf
sbb
inc
push
sbb
jno
push
loope
push
aaa
cmc
cmpsl
adc
in
fidivrl
sbbb
pop
xor
sub
into
pop
sbb
inc
mov
stos
xor
mov
and
lods
fcomip
imulb
pop
sar
dec
add
push
jb
push
cmp
cmp
or
mov
repz
ret
adc
pop
push
jecxz
sahf
or
push
mov
jae
lahf
cwtl
pop
out
lahf
sbb
xchg
mov
cmp
jo
stos
imul
or
gs
ljmp
xchg
inc
andb
add
inc
sbb
aam
push
mov
pop
notb
mov
lods
push
scas
sub
in
add
and
bound
test
mov
scas
stos
mov
and
aas
cmpsb
decl
mov
pop
inc
adc
dec
jle
jmp
jb
fdiv
arpl
mov
sub
dec
test
mov
mov
rorb
pop
mov
mov
scas
mov
popf
int3
shlb
xchg
cwtl
repz
arpl
pop
ss
pusha
and
js
dec
popf
jb,pt
in
lods
arpl
and
mov
repnz
es
fcompl
xchg
cld
outsb
fisttps
or
adc
aad
rorb
adc
cmp
cmc
sti
sub
mov
push
sbbb
repz
inc
movsl
int3
adc
and
in
pop
xchg
inc
clc
fchs
cmc
jle
rcrb
mov
inc
and
es
sar
in
jb
or
ss
push
in
push
sahf
les
dec
inc
sbb
add
addl
jno
fs
adc
test
pop
cpuid
fsubrs
repnz
dec
xor
inc
aad
xchg
mov
push
mov
sbb
sbb
dec
mov
mov
rolb
pop
inc
adc
and
pop
inc
xorl
add
or
dec
fwait
or
adc
mov
sbb
bound
fiadds
cltd
xchg
popa
pop
jl
test
orb
int
in
out
inc
mov
lcall
pop
fidivrs
cmp
cmpsb
sub
in
xor
jno
imul
jl
lods
stos
sub
add
scas
jnp
and
loopne
add
xchg
sbb
daa
push
lods
insl
popf
in
test
cmp
lods
mov
sahf
test
xchg
push
enter
xor
mov
lret
clc
dec
mov
fs
pop
rcll
call
dec
sar
test
loop
into
pop
clc
movsl
in
add
inc
leave
nop
shld
jo
or
leave
xchg
or
lret
xor
mov
in
mov
mov
mov
xor
mov
pop
jle
jge
jno
mov
fnclex
xor
push
xchg
cld
and
xchg
pop
in
push
jno
mov
and
stos
jb
mov
xor
es
cli
sbb
mov
adc
xchg
loop
movsb
jmp
fwait
mov
push
mov
nop
jno
push
xlat
push
jge
push
dec
sbb
bound
xor
mov
xor
in
or
stos
cmp
das
dec
xor
stc
sbb
sbb
dec
sahf
inc
or
mov
add
add
popa
xchg
dec
xchg
lea
dec
repnz
and
inc
inc
xor
mov
call
push
std
gs
loopne
xchg
loopne
pop
push
cmp
sub
or
lret
push
sub
in
adc
add
mov
repnz
loope
dec
or
sbb
lahf
xor
js
and
mov
adc
or
hlt
push
jmp
push
cmpsl
outsl
std
mov
push
rclb
adcb
mov
sahf
xor
inc
and
or
fadds
sub
push
sbb
inc
imul
loop
mov
fstpt
inc
clc
cmp
int
into
cltd
aas
fisubrs
mov
aas
insb
jno
mov
jnp
lret
movsb
and
xchg
xchg
fs
lea
mov
sub
xrelease
push
push
ss
jmp
stc
push
popa
or
popf
mov
inc
shrl
mov
ss
cmp
lcall
xchg
jb
lea
ja
aad
mov
add
xchg
lock
inc
mov
mov
cmp
jge
or
add
popf
shl
rorb
mov
adc
cli
or
sub
add
nop
ss
jbe
lods
cld
mov
test
push
shlb
adc
xchg
popa
sbb
add
jge
dec
push
sub
sbb
cmpl
rcl
sbb
lcall
std
cmpsb
lods
out
fwait
xchg
inc
xchg
mov
xor
push
dec
clc
adc
push
fistps
mov
scas
imul
mov
xchg
inc
add
mov
add
push
jp
mov
mov
adc
add
mov
ljmp
adc
ja
or
enterw
test
popa
out
sub
adc
cld
cmp
add
push
jmp
fdivr
inc
mov
rol
pop
test
pop
ss
or
loop
call
push
xor
adc
push
sahf
shlb
lods
lods
sti
inc
dec
ud1
lds
jg
pop
stos
insb
inc
push
inc
inc
repz
popf
lret
dec
push
lret
mov
sarl
cmp
cltd
lret
hlt
add
xchg
sub
icebp
setno
mov
dec
mov
enter
divb
jns
pop
repnz
jl
push
dec
clc
lret
imul
sbb
jne
pop
aad
mov
in
cmp
imul
jb
cmpsl
xchg
xchg
shr
cwtl
dec
adc
mov
mov
inc
add
pop
fists
mov
mov
je
icebp
fidivrs
cwtl
adc
jecxz
or
scas
pushf
lea
sub
mov
loope
cmc
das
push
xchg
insl
dec
aaa
bound
adc
icebp
sti
bound
mov
sbb
scas
out
jl
lock
and
dec
xchg
fldenv
mulb
adc
int3
push
popf
push
push
dec
mov
fcmovbe
mov
push
xlat
jg
sub
arpl
fwait
movsb
ds
ret
out
ljmp
or
movsl
adc
loope
outsb
aad
lcall
jns
or
test
loop
add
fldenv
mov
sahf
int
jl
scas
pop
bound
outsl
mov
sbb
jg
inc
push
std
mov
imulb
sbb
mov
add
pop
js
add
test
mov
daa
mov
lcall
push
or
jne
push
push
mov
stc
or
xor
add
mov
lret
pop
push
fidivs
add
xchg
jae
mov
adc
cs
sbb
call
in
fstl
clc
and
xchg
iret
dec
mov
fbstp
lret
int
cmp
stc
add
sub
fsubrl
pop
lcall
add
hlt
jecxz
stos
rcll
pop
or
out
mov
xchg
xchg
or
mov
cld
cmp
sbb
fwait
cs
sub
ret
cmp
cmp
push
ss
ja
sbb
lret
pop
jecxz
outsl
inc
mov
push
imul
ljmp
ret
xchg
jle
mov
xchg
cmp
cmp
and
push
mov
insl
aad
or
inc
pop
add
lods
adc
fistpl
shlb
addb
shl
repnz
rcrl
sbb
out
xchg
ficompl
hlt
lock
push
nop
dec
mov
sbb
adc
in
loopne
adc
cld
addb
fimull
aas
push
add
xor
mov
addr16
fidivl
push
je
sbb
jnp
mov
ja
push
iret
mov
les
lahf
out
imul
pop
repnz
push
add
cltd
push
leave
arpl
popa
lods
lds
cmp
lods
fdiv
dec
cmc
ret
into
adc
mov
cmp
jmp
pop
push
dec
scas
dec
into
addl
mov
push
fs
ja
insl
mov
pop
arpl
push
add
sarl
dec
push
adc
or
in
pop
inc
mov
cwtl
insb
ret
cmp
pop
pop
negb
mov
sbb
jae
jp
lods
nop
jle
inc
mov
int3
repnz
add
push
push
xchg
mov
test
or
add
xchg
jb
je
adc
jnp
daa
cmp
cs
pusha
jl
movsl
loopne
xor
jnp
lock
rcl
fisubl
aas
insb
pavgb
and
pop
test
mov
nop
jecxz
pop
inc
mov
jge
pop
mov
stos
test
and
cmp
rcrb
xchg
jg
xchg
jl
jns
and
pop
jge
adc
cs
call
mov
dec
mov
dec
mov
and
bound
js
loopne
jbe
loop
cmc
test
enter
js
inc
mov
mov
push
repz
lret
fnstcw
ret
arpl
repnz
cmp
scas
xchg
hlt
pop
das
aad
adcl
push
je
out
ja
sbb
int3
cmp
mov
mov
arpl
add
ljmp
sti
adc
push
stc
cli
fsts
dec
mov
dec
cmp
lods
jo
xor
or
cmp
pop
xchg
push
jp
xor
or
insb
insl
test
aad
fstpt
cld
stos
dec
addr16
dec
mov
aas
pop
cmp
and
fbstp
fildl
lahf
sbb
bound
adc
or
mov
push
repnz
inc
das
jb
mov
sarb
pop
xchg
push
cmp
insb
pop
data16
push
pop
addb
pop
xor
andl
xchg
pop
outsl
cltd
and
test
dec
dec
test
fstpl
std
pop
jg
push
jne
popf
mov
lock
fimuls
pushf
pop
fbld
dec
fsts
test
shll
jle
enter
xchg
es
test
mov
loop
push
sar
aam
add
add
das
insl
or
negl
or
mov
repnz
dec
push
jle
push
enter
xchg
add
ljmp
xor
mov
stos
out
mov
jns
sbb
mov
in
adc
and
sub
sbb
or
das
mov
arpl
sti
inc
divl
jae
dec
add
insb
xor
push
or
xchg
pop
loopne
jge
popf
sub
out
mov
inc
stc
xlat
mov
pusha
push
stos
or
mov
adc
divl
push
xor
scas
adc
pusha
insl
aam
ss
andl
dec
in
and
dec
scas
add
and
or
mov
ror
xor
push
enter
bound
loope
lret
pop
daa
mov
sbb
xchg
sbb
fnstsw
repz
mov
cmp
aaa
arpl
inc
scas
xor
mov
jae
hlt
scas
adc
shlb
out
fstpl
nop
repz
xor
xchg
ss
and
add
aad
mov
mov
add
enter
lret
mov
mov
mov
mov
adc
xor
inc
inc
dec
pop
mov
mov
jmp
pushf
mov
jle
push
cmp
add
jae
enter
out
out
clc
cmp
and
stos
ds
xchg
adc
or
jae
test
jp
aad
js
pop
xchg
mov
insb
lock
fistpll
and
adc
pop
mov
subb
fwait
and
xchg
pop
cmp
pop
add
in
icebp
xchg
cli
inc
mov
mov
push
mov
addr16
pop
les
int3
scas
dec
sbb
add
mov
pop
scas
xchg
stc
fwait
xchg
fcompl
dec
mov
movl
stos
cmp
test
mov
mov
cli
jmp
xor
jge
and
loopne
loope
cs
les
dec
sub
sahf
test
cmp
ljmp
mov
test
rcrl
mov
mov
pushf
rclb
sub
repnz
and
rep
or
sub
jg
dec
mov
or
scas
xchg
popa
aad
inc
or
or
cmp
ret
cmpsb
dec
mov
je
ljmp
dec
xor
push
pop
mov
xchg
das
sbb
cmp
dec
stos
jecxz
push
mov
fldl
fildl
push
mov
xchg
int3
push
jo,pn
push
xchg
and
imul
shrb
fnstsw
mov
mov
pop
add
adc
cmp
fwait
lahf
sub
es
leave
or
repnz
mov
bound
cmp
ror
cmp
addr16
add
aam
out
ljmp
and
sub
sbb
cmp
aam
xor
popa
adc
fisttpl
clc
sub
xchg
fstpl
push
mov
mov
inc
mov
jmp
in
inc
mov
in
mov
and
sbb
inc
std
xor
dec
or
jbe
jno
sbb
mov
mov
shrl
adc
lods
sbb
mov
fmull
xor
inc
xor
mov
mov
sub
cmp
mov
cmovp
cltd
shl
mov
inc
and
and
push
enter
jmp
add
jns
orb
sub
inc
mov
cmp
mov
adc
imul
adc
les
hlt
and
mov
adc
lods
mov
and
sbbb
lock
or
aad
sub
sbb
cmp
out
int
aaa
mov
mov
mov
add
lock
shr
pop
dec
sub
add
or
mov
cmp
call
dec
scas
sub
mov
inc
loop
jge
je
lods
test
mov
jp
jno
daa
push
and
jnp
test
int3
cmp
out
jecxz
shlb
and
loop
mov
push
inc
insb
dec
push
mov
mov
push
inc
and
sti
push
icebp
cmp
sub
jg
insl
mov
xor
mov
lahf
shlb
mov
jmp
mov
lret
ds
sti
sahf
sbb
mov
cmp
add
mov
xchg
sbb
mov
out
das
or
int3
mov
xchg
pop
rol
call
insb
sbb
jae
rolb
out
mov
cmpsl
xchg
pusha
or
push
pop
inc
and
add
call
jmp
aam
inc
mov
fnsave
sub
xchg
sahf
cltd
sub
stos
arpl
sar
icebp
test
in
xlat
inc
and
scas
sbb
jo
lods
inc
sbb
mov
test
in
movsb
xchg
sbb
jmp
adc
imul
shld
sar
lds
test
xor
movsl
test
in
shrl
mov
pop
mulb
push
pop
xor
push
sbb
dec
out
in
jnp
stos
hlt
mov
outsb
and
pusha
jmp
cltd
mov
inc
shrb
fisttpl
mov
mov
adc
mov
mov
lds
mov
ret
out
in
add
jns
cli
hlt
cmp
jae
enter
jle
sbb
jns
and
js
sbb
rolb
push
sbb
or
cs
popl
dec
ret
or
idivb
mov
inc
scas
fwait
cmp
aaa
fists
roll
rorl
cmp
pop
adc
jmp
mov
adc
jno,pn
jp
xor
shll
or
loope
mov
sub
popf
push
cmp
sbb
je
mov
int
lods
and
cmp
insl
jg
sbb
arpl
push
xor
aam
push
inc
lds
mov
adc
mov
xor
je
cwtl
fdivrs
rol
imul
mov
cmc
add
jmp
icebp
out
dec
adc
aam
push
xlat
jns
xchg
mov
addr16
fcoms
out
xchg
lcall
mov
dec
ret
xchg
in
cmpsl
je
dec
lds
sub
jge
inc
cs
pop
imul
scas
or
incb
test
cwtl
sbb
bound
ret
sti
mov
pop
clc
cmp
gs
jns
popf
xchg
sbb
bound
fiaddl
cmpsb
test
sub
pop
pop
xor
pop
movsl
nop
sub
lret
call
push
or
scas
sub
mov
js
jmp
adc
fnstsw
testb
ss
mov
outsl
jp
jo
jbe
pop
push
or
sub
pop
mov
ljmp
xchg
stos
sbb
enter
xchg
inc
popl
jns
int3
aam
iret
sbb
pop
aaa
sub
scas
xchg
out
clc
jg
popa
mov
loope
mov
add
es
sbb
mov
inc
test
sbb
and
das
icebp
fstpt
popf
sahf
xlat
mov
pop
and
add
pop
imul
mov
jge
pop
aas
jg
mov
xor
cmp
in
bound
sbb
jb
repnz
push
loope
das
add
out
mov
out
in
jae
repnz
cmp
cmp
and
xor
fwait
imull
les
dec
jno
lds
mov
adc
jae
pop
loopne
ljmp
adc
fisubl
adc
test
sub
adc
in
sub
jle
outsb
mov
and
je
jl
jnp
or
cmc
pushf
jo
movsl
add
lahf
lret
xchg
test
push
xchg
dec
mov
pop
inc
psubb
fimull
roll
or
aam
cmp
icebp
adc
dec
cmp
pusha
adc
inc
scas
int3
nop
lods
bound
lds
inc
pushf
add
decb
push
rcll
call
add
jmp
loopne
jbe
mov
mov
dec
lret
out
add
repz
loop
jmp
lea
mov
dec
test
sub
push
lea
jle
test
sbb
in
daa
mov
or
aaa
outsl
xor
cli
mov
divl
mov
mov
rorb
jmp
pop
aaa
mov
mov
lds
les
js
adc
test
jne
pop
push
cmp
or
fmuls
aas
popa
mov
jo
stos
mov
push
add
fwait
sub
lret
mov
rcrl
jmp
cmc
jns
sub
cwtl
sbb
pop
dec
inc
in
push
or
aaa
inc
inc
dec
pop
fpatan
insb
cs
jo
popl
out
lds
orb
push
sub
inc
push
jecxz
js
inc
fcoml
xor
mov
push
cmp
xor
lcall
outsb
jne
mov
mov
push
sti
pop
call
out
add
enter
inc
jmp
aaa
outsl
sbb
xor
inc
dec
xor
fimull
or
inc
loopne
jg
xchg
shlb
bound
insb
mov
lods
ret
lods
jmp
daa
mov
movb
sub
jecxz
mov
hlt
mov
les
stos
adc
xchg
jp
push
or
fbstp
je,pn
outsb
fmul
hlt
fisubrl
cwtl
jl
in
mov
pop
cmp
push
jp
pusha
dec
sbb
inc
mov
cwtl
cmpsb
mov
or
out
pushf
je
jbe
sahf
fldt
pop
in
cmp
or
cld
mov
ljmp
mov
flds
fsubrs
shll
rcl
gs
insl
popa
adc
xor
test
popf
inc
jmp
shl
int3
pop
in
cmpsb
sub
pushf
mov
sbb
adc
xchg
nop
sbb
loope
daa
cmpsl
mov
add
out
aad
outsb
js
clc
jno
mov
rorb
lea
xchg
into
lahf
addb
sub
inc
dec
pop
and
cmp
jge
dec
push
cmpl
lds
and
mov
repnz
xchg
adc
or
in
pop
inc
mov
sub
xor
enter
test
clc
mov
sbbb
jl
and
in
sub
pop
push
push
in
lahf
ret
xchg
xor
or
lahf
mov
mov
test
shr
xchg
fidivs
ret
fwait
inc
js
mov
push
xchg
mov
inc
cmpsb
add
std
pop
mov
xchg
xor
jg
mov
adc
imul
jno
mov
lret
dec
mov
sub
sbb
icebp
stos
scas
xchg
mov
mov
and
cmpsb
jns
movsl
movsb
bndldx
mov
jns
inc
sti
rcl
lock
pop
pop
pop
movsl
into
xchg
cmpl
movsb
sub
mov
aad
sub
xor
jae
je
xlat
xchg
insl
call
fisubs
push
mov
mov
push
xchg
popa
mov
je
push
lret
pusha
sub
add
adc
incb
fistpl
mov
cmp
es
xchg
add
dec
mov
es
add
loop
cli
adc
or
scas
lret
xchg
test
mov
pushf
and
outsb
pop
or
scas
xchg
loope
mov
mov
and
cmp
inc
addr16
mov
push
mul
jecxz
pop
mov
leave
jle
cmp
test
mov
mov
scas
inc
int3
mov
push
jp
mov
xchg
jae
mov
mov
xor
pop
sub
adc
lds
int3
jge
cltd
out
jo
aas
sbbl
shr
mov
sbb
mov
or
sbb
adc
jnp
inc
aad
xchg
out
leave
es
cmc
pop
lahf
and
jae
fucom
jl
mov
hlt
ret
xchg
jae
xor
lret
pop
pop
or
sub
andb
mov
pop
sti
push
cmp
sbb
in
test
push
xchg
xchg
rol
push
dec
testl
add
inc
mov
mov
adc
mov
xchg
adc
sbb
and
and
and
mov
lods
lcall
push
dec
addr16
add
lahf
cmp
test
xchg
xchg
fimuls
mov
popa
or
or
lret
cli
aaa
into
dec
lods
loopne
push
push
mov
loop,pn
cs
mov
push
inc
mov
je
adc
fadds
adc
divb
sbb
ja
lock
cli
in
jne
cmp
mov
bound
das
cwtl
sub
aad
out
out
sub
pop
sub
inc
mov
in
in
test
cmp
or
js
pop
cmpsl
pushf
or
adc
sti
pop
mov
and
pop
xchg
and
pop
ljmp
sysenter
push
xor
or
mov
xchg
sbb
lock
xchg
inc
dec
mov
jmp
jp
inc
sub
jmp
call
mov
movsb
cwtl
mov
mov
sbb
xor
cmp
inc
nop
mov
mov
mov
insb
sbb
dec
adc
fstps
inc
cmp
add
and
dec
push
out
push
jg
cld
inc
clc
fwait
lret
cwtl
mov
cmp
je
mov
dec
cld
and
inc
or
call
movsl
rol
dec
cmp
xor
mov
sbb
ss
sbb
test
loope
repz
or
dec
ror
les
push
shl
test
test
mov
xchg
jno
jb
push
mov
out
push
std
andb
stos
iret
sub
jnp
divb
nop
sbb
xor
lret
outsl
mov
add
xchg
cli
lea
out
outsl
mov
hlt
fdivrl
mov
jecxz
and
push
and
push
dec
inc
into
ret
dec
xchg
div
lds
dec
add
scas
aaa
mov
rol
or
mov
imul
pushf
push
stos
cmp
jg
cltd
cld
and
xchg
ds
arpl
jle
inc
ret
and
out
cltd
shr
jecxz
addr16
inc
push
orb
inc
push
sbb
or
xor
xchg
xlat
lods
rorb
mov
js
push
dec
insl
jno
pushf
xchg
movsl
xor
mov
or
mov
leave
ja
movsb
jmp
mov
out
in
push
shll
lret
loope
inc
into
add
mov
int
rcl
bound
lret
das
inc
xchg
inc
mov
fmuls
jb
sbb
push
add
ret
mov
lea
fs
cld
into
in
add
and
cwtl
notl
dec
jne
loop
push
aam
ljmp
shll
incl
mov
cwtl
fwait
out
mov
or
mov
int
scas
push
insb
mov
xchg
or
pop
mov
dec
inc
adc
or
aas
adc
ss
jbe
pop
popa
and
cmp
pop
sbbl
push
jge
adcb
push
cmp
or
dec
pop
fadds
pop
push
aam
scas
push
or
fidivs
fs
jnp
add
test
dec
jb
push
sub
sub
jl
push
xchg
aad
and
cwtl
hlt
sbb
popf
sbbl
xchg
mov
pop
mov
push
cwtl
sub
bound
roll
out
xorb
push
cmp
mov
movsl
orl
test
cwtl
pop
mov
filds
jnp
adc
push
in
stc
adc
pushf
shll
mov
pop
addb
adc
data16
repnz
cmp
aad
or
or
jno
ds
insb
sub
push
mov
stc
dec
lea
data16
out
xchg
push
adc
jmp
aam
dec
adc
or
mov
xchg
sub
rorb
mov
inc
pop
dec
cwtl
jecxz
add
mov
sub
push
add
ret
ds
add
jp
mov
leave
pop
icebp
mov
out
push
pushl
test
sbb
ret
jecxz
and
icebp
sub
add
es
mov
mov
lcall
pop
out
cmpl
cmpl
jmp
jae
ss
dec
mov
or
xchg
movsb
pop
subb
aas
and
movsb
mov
push
std
jge
sbbl
mov
sbb
mov
and
pop
pop
cmp
stos
lods
add
addr16
fwait
mov
leave
ret
sbb
movsl
sub
dec
sti
mov
ficomps
adc
mov
add
mov
je
inc
sti
or
ds
pushw
cmp
lods
enter
push
xchg
cmp
scas
inc
push
xchg
or
cli
add
sbb
push
shll
dec
jno
pushl
xchg
pop
adc
dec
cmpsl
mov
daa
mov
fsts
mov
xor
jecxz
cli
push
or
lret
sub
xor
cmp
sbb
lock
stos
adc
mov
cmp
sub
jge
inc
adc
in
cmpb
mov
dec
out
lods
jbe
int3
arpl
cmpsl
dec
inc
cmp
sub
sub
adc
int3
pop
sub
cmp
jb
inc
pop
mov
mov
in
mov
pusha
push
cmp
cltd
scas
jle
xorl
pop
sub
xchg
fcmovbe
mov
mov
dec
cmpsb
jo
out
mov
xchg
sbb
test
testb
fidivl
mov
ja
mov
clc
rorb
test
xchg
icebp
lret
mov
add
out
lcall
mov
push
sbb
subb
xchg
hlt
mov
xchg
jmp
popf
cmp
pop
mov
adc
adc
popa
dec
push
pusha
addr16
addr16
fcompl
mov
and
fwait
and
sti
insb
std
aam
sub
inc
jge
and
push
xor
push
inc
mov
cltd
adc
xchg
lods
cmp
adc
push
sbb
pushf
mov
ret
rorb
xchg
inc
adc
mov
jl
mov
shlb
lret
sahf
and
sbbb
aam
and
push
fst
xor
out
test
and
shlb
mov
into
fwait
mov
mov
mov
cmovo
jb
cltd
mov
stos
mov
or
pop
xchg
outsl
sbb
mov
pop
imul
stc
mov
gs
daa
cmpl
mov
cwtl
dec
sbb
popa
scas
ljmp
inc
dec
xor
mov
cltd
out
push
rolb
inc
jge
mov
sub
cmp
sub
xchg
mov
mov
mov
sub
loope
jmp
dec
or
test
cmp
xorl
in
shrl
sbb
sub
cs
sub
pop
adc
xchg
xchg
dec
jae
inc
fwait
pop
jg
lcall
lods
pop
cwtl
cwtl
or
gs
cld
repnz
int
aaa
mov
call
or
pop
add
aad
neg
push
mov
mov
sub
rol
push
out
mov
fcoml
clc
or
test
mov
push
mov
and
push
je
mov
jp
sti
arpl
outsb
cmp
fdivrp
and
jmp
ret
lods
scas
loop
mov
stos
or
inc
jo
xchg
lock
ds
call
dec
fsubl
adc
xor
std
aam
jmp
mov
js
pop
mov
lcall
or
les
jne
shr
addb
les
sub
inc
push
fnstcw
mov
stc
jno
adc
jg
loop
fistl
imul
lret
xor
cmp
xchg
cmp
scas
in
jns
adc
cwtl
cwtl
lahf
cmp
fwait
int3
push
add
lods
ret
test
mov
and
push
outsb
popf
es
adc
and
lods
push
pop
lds
push
aaa
out
sbbl
dec
push
jp
sbb
test
cwtl
call
in
or
and
lcall
inc
jl
flds
jmp
cmp
xor
stc
jnp
xchg
fwait
cmpsb
jle
ret
lds
and
aad
cmp
popf
push
inc
mov
mov
int3
mov
leave
dec
jno
mov
adc
movsl
mov
pop
sbb
xchg
mov
lret
test
pop
jnp
cmp
daa
in
push
sub
pop
cmp
dec
cmpsl
jge
stos
inc
mov
stos
fs
sbb
rcrl
mov
stc
sbb
cld
test
test
mov
mov
inc
mov
jnp
xor
shll
jge
mov
pop
add
pushf
stos
std
ljmp
nop
ja
mov
pop
shlb
push
mov
or
adc
std
add
xchg
mov
dec
rcrb
lds
and
or
es
cmp
mov
push
xor
movsb
mov
dec
adc
adc
mov
and
ds
sbb
pop
jnp
fcmovnb
push
dec
or
lods
int3
sar
shlb
fsubl
ljmp
es
pop
xlat
sbb
aad
cmc
mov
sub
mov
loope
hlt
cld
outsl
js
sub
in
push
iret
in
and
repnz
mov
int3
dec
movsl
sbbl
fimuls
sahf
sub
repz
pop
adc
insb
mov
mov
rol
in
enter
icebp
pop
das
ljmp
int3
jl
xchg
in
adc
add
push
sub
and
shrb
fsubp
jl
outsl
out
adc
stos
test
aaa
test
sub
mov
cltd
pop
out
lcall
jl
xor
aaa
fcomp
icebp
jne
cmp
ja
icebp
out
pushf
fists
mov
dec
pop
push
xchg
dec
cmp
push
mov
test
sarb
mov
push
outsb
nop
lcall
xlat
lcall
outsl
sti
sti
js,pn
ret
nop
pop
clc
push
aaa
scas
andl
push
lret
lret
hlt
jne
daa
mov
mov
jnp
aas
loop
sbbb
lea
mov
out
mov
push
pushf
sbb
repnz
mov
cli
adc
fstp
push
jbe
and
jle
das
pop
add
test
arpl
aas
jo
fcomps
repz
dec
jge
xchg
jae
popa
or
outsl
add
or
inc
xor
cltd
mov
cmp
pop
jno
leave
popf
lea
xor
xor
out
sarb
insb
pop
imul
pop
into
dec
in
rorb
push
jle
jne
aam
mov
cld
inc
test
filds
dec
mov
xor
add
push
imul
xor
push
jnp
push
and
dec
js
mov
inc
xchg
inc
mov
cmp
rorl
xor
pop
or
push
data16
push
movsl
jecxz
insb
inc
pop
pushf
xor
fisubrl
pop
sbb
ss
loopne
insl
mov
xchg
aaa
dec
pop
sub
sti
lods
fmuls
pop
mov
pop
jbe
les
outsl
fadd
dec
pop
bound
push
stos
aaa
ficomps
add
jp
adc
sub
sub
xor
cmp
les
fwait
popf
jbe
enter
inc
dec
xor
mov
cmp
xlat
adcb
ficomps
xor
add
sbb
or
xrelease
stos
cli
mov
or
cmp
aam
add
pop
jbe
loop
pop
mov
out
lret
popa
lods
outsl
rcrb
jo
xchg
js
aaa
jne
xchg
movsb
mov
call
inc
in
in
xor
pop
xchg
lds
icebp
fneni(8087
mov
das
hlt
cmp
test
pop
dec
es
inc
add
pop
idivl
sbb
and
jns
mov
clc
mov
add
ss
jb
insb
pop
lea
or
mov
call
and
xorb
mov
jle
movsb
jnp
jb
mov
or
je
cmp
inc
cmp
cltd
std
jae
out
int3
clc
mov
or
shll
pop
sbb
sub
jb
mov
sbb
xchg
pop
sarl
roll
daa
pop
push
pop
pop
and
fwait
ret
jmp
add
jp
aas
inc
ret
fists
shll
sbb
call
xor
test
sti
adc
cmp
mov
dec
call
mov
sub
ljmp
fcmovbe
dec
outsb
sbb
pop
push
xor
btc
in
ficoml
pop
jecxz
cmp
or
shl
push
mov
mov
adc
lods
inc
in
mov
xchg
in
xlat
cmp
subb
cmpl
stc
sbb
cmp
test
out
and
jb
cmp
sar
jno
mov
sub
mov
or
nop
cmp
jle
lds
mov
xchg
addl
dec
cmpsb
jl
xor
or
addb
or
mov
jbe
push
jno
lahf
add
or
add
dec
into
sahf
and
stos
sbb
stc
sbbl
adc
aam
pop
pop
add
pop
cmp
mov
pop
test
dec
sti
pop
cs
push
mov
stc
mov
jl
in
sbb
test
mov
mov
nop
sub
xchg
xlat
mov
rclb
sbb
out
push
lret
sahf
ljmp
cs
in
outsl
mov
sbb
repnz
xor
xchg
pop
jecxz
cli
inc
cs
xor
cli
je
mov
adc
rol
mov
or
lret
sub
lock
mov
scas
sbb
stos
in
sahf
dec
ret
xchg
outsb
cmp
mov
ud0
sahf
inc
jo
insl
mov
jg
fistpll
add
test
add
xlat
lcall
cmp
inc
adc
icebp
fisttpl
mov
iret
sbb
out
fstpt
cmp
and
xchg
mov
push
mov
mov
ss
int
addr16
cwtl
or
ret
xor
mov
xlat
call
or
ficompl
sti
repnz
pop
mov
jno
mov
sub
insb
out
adc
xor
sarb
and
cli
sbb
xlat
push
loopne
xchg
pop
mov
aas
push
sbb
adc
and
add
cmpsl
cmp
add
and
idivl
or
cld
dec
popf
pop
pop
out
jl,pn
cmp
loop
rorl
mov
pop
add
stos
sub
dec
pop
mov
imul
push
movsb
jl
jne
leave
add
aas
enter
ja
push
xchg
daa
dec
jecxz
adc
cmp
int
fwait
and
xchg
xchg
cmp
js
sub
xchg
movsb
mov
jbe
std
xchg
mov
nop
xor
pusha
push
divb
inc
inc
pop
mov
pop
cmp
inc
xorl
and
xor
inc
popl
push
cmp
cmp
dec
xchg
iret
mov
leave
xlat
out
sti
lcall
ss
mov
cmpsb
es
jle
sbbl
mov
xlat
test
inc
and
mov
mov
or
jb
jne
movsl
jge
test
dec
adc
inc
add
sub
out
jno
or
iret
xchg
or
sti
cmp
mov
ret
sub
push
call
sbb
jl
add
pushl
call
jo
pop
lret
fs
lds
dec
cmp
push
mov
pop
lods
nop
pop
popa
jns
fcoms
sbb
lods
push
mov
xchg
xchg
leave
jle
sti
mov
aas
sbb
pop
cmp
cmp
icebp
lea
pop
mov
jnp
push
test
repnz
test
in
out
push
ja
mov
cmpsl
inc
bound
cmp
fidivl
in
and
outsl
xor
cmc
inc
add
jmp
sub
pusha
inc
pop
shlb
jns
mov
fbld
push
popa
xchg
repz
nop
inc
or
mov
lock
sbb
jno
push
mov
inc
adc
or
fs
mov
test
mov
mov
mov
and
cmp
and
pop
jne
std
push
mov
sbb
orb
push
dec
ds
loope
jl
push
popa
repz
mov
sub
jp
mull
inc
mov
xchg
movsb
stos
push
sbb
mov
xor
add
fsubrl
addl
sub
leave
in
hlt
xor
arpl
dec
push
jbe
jp
arpl
ror
push
lds
bndldx
mov
repnz
mov
std
xchg
cmp
lds
bound
les
adc
cli
jle
cs
ret
cwtl
in
push
jecxz
push
adc
dec
jp
lcall
jle
pop
mov
enter
add
test
mov
mov
xor
int3
push
bound
in
push
ffree
mov
sbb
push
push
adc
xchg
pop
push
pop
into
adc
cmp
fcoms
dec
jno
jns
stos
mov
sbb
xlat
add
data16
cmp
xor
in
mov
ja
cmp
rorb
xchg
into
lret
xchg
cmp
fistpl
hlt
xchg
pop
rcr
ss
fsubr
pop
dec
lret
add
mov
dec
jl
lcall
testl
sbb
push
mov
mov
out
cmc
decb
adc
fs
cmp
adc
inc
add
and
xlat
inc
lret
push
sub
decl
and
push
jnp
int
xor
mov
mov
hlt
push
in
inc
aad
inc
dec
lods
lock
jge
add
cmc
aaa
mov
inc
imul
js
outsb
fstp
and
pushf
mov
mov
mov
or
out
repnz
lahf
ret
addr16
popa
hlt
adc
cmp
adc
fsubrp
or
into
xchg
push
sti
fimull
loop
mov
cmc
push
or
incb
and
inc
push
push
mov
mov
subl
fwait
loope
out
mov
lret
mov
dec
jl
fistpll
mov
push
xchg
cmp
imul
pop
push
cmp
adc
push
lahf
repz
push
cmp
call
dec
mov
popf
mov
cmpb
jmp
adc
das
in
pusha
fmull
dec
lcall
jmp
mov
rolb
inc
sub
loop
lret
adc
subb
cmpsl
es
xchg
fdiv
data16
out
mov
xor
mov
pop
cmpsl
xchg
jp
fs
jns
arpl
jl
sub
mov
adc
fldenv
mov
outsb
sbb
jno
pop
pop
add
mov
and
xlat
addr16
addl
sarl
mov
mov
or
dec
outsb
inc
fsubrs
lret
pushf
hlt
outsb
js
movsb
pop
inc
lahf
ljmp
addr16
add
sbb
pop
dec
repnz
pop
stos
out
sti
loop
loop
cmp
lods
sbb
cmp
xchg
loop
push
mov
jle
xchg
call
push
pusha
arpl
xchg
inc
aam
sbb
cltd
pop
stc
pushf
xchg
call
and
repnz
add
out
cli
repz
sti
or
fldenv
shlb
or
lahf
add
adc
push
mov
mov
jecxz
std
add
rcl
cwtl
mov
and
pop
and
mov
jne
xor
dec
imul
popl
cltd
movsl
mov
sub
push
push
movsl
psllw
pop
nop
jg
fistpll
enter
sbb
xchg
ret
sahf
cmpsb
cmp
cmpsb
pop
sbb
push
and
pushfw
out
inc
sbb
pop
xor
mov
into
or
mov
mov
loop
xor
xchg
test
mov
xchg
inc
cltd
pusha
inc
mov
stos
pop
mov
mov
rcrl
sub
fidivrl
gs
xchg
js
je
icebp
gs
mov
dec
clc
push
xorl
test
xor
dec
pop
inc
cmpsb
mov
cmp
jb
xor
push
pop
lea
das
loope
stos
sub
xor
sub
scas
adcl
xchg
out
sub
test
jle
dec
cwtl
dec
jb
test
pop
adc
push
xchg
dec
sahf
ret
daa
sahf
jnp
fnsave
mov
or
adc
lret
inc
xchg
aaa
add
jmp
xchg
test
push
sbb
push
call
jg
pop
lods
cmc
iret
cmpsl
xor
push
mov
add
gs
ljmp
xlat
fdiv
shl
jp
push
hlt
mov
cmc
aad
enter
pop
test
shlb
or
sbb
cmp
push
adc
inc
xchg
aam
sub
imul
dec
ror
dec
in
sub
pop
jmp
adc
push
mov
inc
pop
push
mov
and
and
inc
xchg
dec
hlt
imul
xchg
dec
js
or
add
dec
cmc
jns
adc
add
std
imul
insl
bnd
push
lods
pusha
xor
jo
flds
cmp
mov
ror
dec
pop
jno
inc
jae
testl
inc
sbbl
pop
inc
fadd
push
pushf
clc
mov
fs
jge
xchg
stos
mov
inc
icebp
fdivl
fucomip
fwait
sbbb
outsb
flds
push
pop
mov
adc
stc
ss
in
mov
sub
xor
cmp
and
insl
shl
mov
popa
cmc
in
push
jae
or
fcomps
clc
popa
inc
mov
fwait
ljmp
xor
or
mov
sub
loopne
sub
dec
xchg
pop
nop
shll
jle
fildl
arpl
cmc
add
inc
sub
adc
sub
inc
loope,pt
ss
sub
test
iret
in
jl
orb
push
push
aaa
or
mov
fistps
adc
add
mov
sub
aaa
aam
jmp
in
pop
stc
jmp
inc
mov
stos
dec
stc
mov
fcmovnu
test
pop
stos
xor
inc
loopne
mov
push
dec
lahf
jmp
pushf
mov
std
int
pop
es
shll
subl
xor
lea
jmp
pop
xchg
sbb
lret
xor
adc
sbb
ror
push
or
dec
adc
push
outsl
scas
inc
mov
cmpsl
mov
bound
jl
imul
jl
or
adc
fcomps
mov
lods
test
or
xor
cmp
adc
sbb
mov
xor
adc
adc
push
out
in
jp
xor
rcrb
sub
cs
and
or
lods
push
fsubrl
cs
mov
pushf
mov
lods
add
rcll
lret
cmp
pop
dec
and
cli
sub
in
jnp
jbe
fwait
insb
es
xchg
lcall
lret
cmp
js
movsl
or
cwtl
loop
sarl
or
aas
xor
movsl
mov
jne
mov
xchg
or
nopl
cmp
scas
or
in
shlb
scas
add
daa
push
adc
sub
pop
aaa
xchg
loope
aam
in
subl
push
cmp
mov
cmpsl
adcb
mov
xor
les
cmp
out
scas
push
dec
mov
enter
movsl
sub
lds
inc
and
fcmovnb
ret
clc
shlb
enter
pop
inc
cmp
out
inc
xor
dec
dec
adc
pusha
dec
rep
lea
sub
cwtl
pop
test
mov
pop
pop
dec
cli
mov
adc
test
hlt
add
cwtl
mov
or
sub
mov
lods
test
cmp
in
movsl
gs
scas
shrl
mov
pusha
mov
xor
fldl
and
hlt
popa
cli
repnz
adc
addr16
cmc
mov
enter
pushf
cmc
movsb
or
and
push
sub
mov
insl
push
inc
mov
inc
mov
add
out
inc
add
pop
jle
mov
dec
inc
cmc
sbb
repnz
call
daa
mov
push
stos
inc
or
mov
push
push
pop
into
cmp
mov
push
xor
jg
jo
jg
rclb
mov
jns
jl
push
xchg
lds
xchg
push
jmp
int
out
das
push
pop
iret
test
scas
jnp
xor
idivl
out
add
xor
adc
shll
je
cmp
lds
test
jnp
pop
lret
and
test
jecxz,pt
insb
sbb
or
adc
dec
adc
cmp
into
push
sgdtl
ds
pop
in
jne
out
and
xchg
test
sub
movsl
cld
test
xchg
cmp
pop
push
idivb
testb
mov
pushf
push
xchg
lock
or
sbb
sbb
call
or
je
mov
xchg
popf
notb
push
sarl
xchg
imul
mov
ljmp
outsb
lcall
sub
sub
mov
pop
jns
jno
mov
in
repz
xchg
loop
push
sub
lret
mov
mov
lods
inc
xchg
ret
sti
xorb
add
or
lret
ds
jg
adc
jle
rorb
les
mov
cmp
clc
sbb
or
mov
out
lcall
leave
dec
sbb
lcall
xor
lret
out
testl
jns
mov
test
inc
mov
cli
inc
sub
fstpt
lods
push
pop
pop
mov
int
mov
cwtl
scas
ds
test
and
les
loop
je
mov
popf
in
dec
sub
sub
dec
jmp
arpl
inc
stc
mov
dec
sub
es
fdivs
xchg
pop
cmp
stos
or
sbb
cmp
push
movsl
push
inc
divl
adc
and
or
insb
cmp
xchg
xorb
push
jmp
mov
sub
inc
out
lock
xchg
adc
mov
xchg
shrl
mov
das
mov
add
pop
insl
outsl
shl
and
mov
dec
shrb
cs
sub
mov
aad
ror
xchg
lret
les
cmp
std
fsubl
dec
or
add
sub
inc
lods
subl
cmc
sbb
out
jecxz
enter
rclb
outsb
les
out
cmp
pop
dec
bnd
push
in
inc
and
mov
andl
or
mov
test
xor
cvtdq2ps
jno
jp
dec
mov
insb
test
xor
imul
sbb
push
mov
outsb
test
loopne
inc
adc
mov
mov
je
stos
inc
pop
ss
jne
jnp
pop
fwait
inc
adc
mov
lcall
test
pushf
call
sbb
adc
mov
sub
mov
andl
mov
out
dec
lret
aaa
dec
jge,pt
shrl
movsl
jle
out
incb
ret
mov
push
xchg
and
les
add
mov
arpl
xchg
mov
cltd
mov
int3
xlat
xchg
adc
pop
ja
sti
push
fcom
xor
pop
orl
sub
jp
mov
jmp
bound
rolb
inc
push
xchg
loope
popf
or
inc
or
mov
repnz
dec
shlb
adc
mov
fldt
cmp
inc
push
std
scas
sub
les
xlat
and
sub
in
enter
cmp
stc
call
add
lret
adc
and
scas
mov
cmp
and
ja,pn
or
loop
push
data16
repz
imul
sbb
cld
and
xor
sti
fildl
cmp
ret
xor
movsl
pop
push
pop
in
fs
push
mov
sub
rorb
add
add
mov
add
inc
loop
ja
xchg
ret
xor
jp
add
xchg
inc
data16
mov
cmovno
jecxz
pushf
sti
outsl
xorl
cs
mov
fs
inc
inc
inc
or
mov
lea
inc
into
or
aaa
popa
and
fdivr
pushf
xchg
sub
in
dec
mov
mov
rolb
ljmp
sbbl
in
fistpll
js
cmpsb
mov
or
or
mov
jb
pop
jne
and
mov
pop
std
lret
inc
sbb
or
ss
loopne
and
push
sbb
adc
std
pop
bound
addb
inc
or
fsubrl
sbb
xchg
std
mov
mov
fldt
xchg
mov
fidivs
lahf
pop
repnz
fs
out
addb
lods
and
xchg
sbb
in
push
jmp
leave
jns
cmp
pop
stos
xlat
xlat
jne
dec
shrb
pop
adcl
or
mov
movsl
pop
pushf
shrb
sub
jno
arpl
xchg
and
dec
repz
sahf
sbb
out
enter
xchg
aas
fcmove
sarl
ret
popa
xchg
inc
clc
fwait
pop
stos
xchg
outsl
pusha
das
rorl
ss
add
test
pop
cs
xor
lahf
cli
imul
lock
or
lds
dec
cmp
mov
jg
les
lods
inc
insl
mov
jmp
adc
pop
xor
inc
or
mov
sahf
cltd
jp
mov
mov
add
sub
fldl
lods
imul
mov
rolb
mov
push
test
sub
test
mov
cli
scas
mov
subl
fmull
inc
xchg
out
es
push
sbb
icebp
sbb
je
repnz
fcoms
outsb
dec
mov
fcmovu
scas
add
xchg
mov
stos
push
xor
jno
fistpll
btc
subb
mov
mov
repnz
mov
fcomip
in
insb
scas
mov
sbb
mov
mov
xlat
xchg
addr16
hlt
mov
pop
sub
das
int3
mov
jno
out
shlb
inc
outsl
mov
xchg
and
ja
mov
popf
je
es
adc
xor
add
sti
shrb
fmuls
int3
adc
fcmovbe
incb
xor
add
fmull
xor
dec
mov
test
push
cmp
xlat
shlb
daa
pop
aam
mov
and
fwait
divb
dec
or
inc
testb
fdiv
orb
fildl
hlt
ret
or
nop
cmp
ds
xor
outsl
fmul
in
aas
mov
sysenter
popf
sbb
divl
push
mov
push
mov
movsl
cmp
je
sbb
sbb
mov
loop
adc
ss
mov
jns
jo
pop
push
insl
jns
jmp
push
mov
xor
fldenv
pop
and
in
inc
sti
cmp
inc
lods
dec
shrl
add
pop
in
repnz
jae
jo
mov
ds
xchg
loopne
js
stos
dec
loope
and
outsb
aas
test
mov
je
fsub
sub
imul
mov
es
pop
sbb
iret
lods
cwtl
xchg
jge
outsl
stos
das
nop
sahf
sub
dec
lret
xorl
xor
sbb
push
fisttpl
xor
outsb
aaa
int
or
data16
das
cltd
jno
icebp
cmp
mov
and
scas
ds
out
scas
pushf
push
fsubp
inc
fdivr
sub
jmp
neg
sbb
mov
jmp
pop
lret
xchg
ljmp
bound
rcl
iret
out
add
icebp
push
inc
mov
pop
mov
sub
insb
jge
enter
xor
lods
push
sub
clc
leave
cmp
ljmp
pop
mov
and
xorl
movsl
or
sti
and
jae
sbb
cmp
jmp
arpl
pop
mov
fstps
mov
push
push
push
xor
push
icebp
cmp
test
or
or
jl
mov
pusha
mov
faddl
insb
icebp
inc
mov
insb
jmp
mov
add
add
push
out
loope
lahf
mov
mov
jge
out
dec
adc
xchg
xchg
mov
mov
sbb
cld
lahf
imul
arpl
adc
xor
repnz
out
dec
inc
aam
pop
ljmp
shll
adc
les
into
xor
mov
lahf
leave
scas
adc
mov
lcall
xchg
cld
mov
xor
mov
rcll
shll
push
jns
cmc
xchg
cmp
out
lods
loop
mov
cli
shl
sub
mov
lods
fmull
xorb
fistpll
insb
pop
fnsave
xchg
mov
or
cmp
jbe
xchg
jnp
test
inc
xor
jae
mov
in
fdivr
shr
cld
jmp
pusha
or
and
dec
xchg
push
dec
sub
cmp
mov
push
xor
jne
mov
inc
ljmp
xchg
xor
sbb
insb
scas
in
mov
clc
and
cltd
lret
and
pop
inc
fdiv
push
jecxz
cmp
xchg
jg,pn
inc
int3
cmp
iret
or
gs
push
sarb
adc
fcmovnb
ds
xlat
insb
mov
xchg
jmp
push
and
iret
inc
mov
and
pop
pop
xchg
scas
push
push
mov
mulb
mov
dec
push
fnstenv
cmp
sti
into
xchg
xchg
sbb
data16
aam
nop
lods
cmpsl
sub
lds
int3
loope
pop
xor
roll
inc
mov
mov
jle
mov
adc
jecxz
inc
cld
push
test
add
xor
lds
cli
bound
mov
or
jno
or
movsl
sbb
lods
cmpsb
lahf
cmp
outsb
and
outsl
addb
inc
out
or
out
mov
insb
mov
in
dec
xor
cmp
sahf
pop
sbb
sbb
mov
fsubrs
mov
das
jmp
out
es
popf
adc
insb
mov
scas
xchg
repnz
bound
xchg
ror
mov
sbb
mov
jo
dec
jne
mov
cltd
arpl
dec
test
add
movsb
fstpl
pop
jbe,pt
cmpb
test
out
jge
inc
icebp
dec
push
mov
in
mov
movsl
mov
sub
outsb
jno
push
push
pop
outsl
outsl
inc
orb
push
push
sbb
xchg
and
inc
xchg
sbbl
mov
cmp
adc
or
clc
daa
aas
lahf
fs
aam
adc
push
fdivp
in
mov
mov
cmp
mov
push
inc
pop
loopne
enter
push
jo
push
test
jne
roll
clc
jns
pop
neg
arpl
or
jp
fsubrl
mov
adc
mov
loope
aam
aas
sbb
mov
test
jno
pop
test
push
lcall
cld
xlat
ljmp
orb
inc
push
dec
loope
leave
adc
xor
aaa
fnstcw
add
std
inc
mov
ret
or
mov
fcmovbe
jge
scas
mov
jnp
insb
cmp
jmp
add
add
dec
mov
cmp
cmp
movsl
mov
ret
or
js
xchg
xchg
mov
pop
fs
pusha
cwtl
or
shrl
hlt
cmp
dec
inc
shrl
dec
fcomps
push
or
jmp
out
stos
xchg
mov
sbb
cwtl
call
add
lock
pop
add
ss
ja
pop
das
psrlw
mov
test
sbb
sub
out
scas
rcr
jp
jo
sarl
jge
pop
loope
popf
roll
inc
mov
add
mov
inc
sbb
in
mov
cmpb
cltd
xchg
adc
dec
pop
or
push
aam
pop
jg
rcl
lock
dec
fiaddl
dec
insl
cmc
daa
xchg
add
mov
loopne
or
mov
repnz
adc
pusha
push
scas
xor
add
icebp
pop
into
pop
lods
stc
loope
arpl
inc
add
jge
sbb
pop
pusha
aad
rorl
mov
ret
sbb
adc
dec
add
jno
jp
mov
jmp
call
loop
jno
ret
notb
cmp
jp
adc
lock
icebp
pop
mov
adc
repz
psrad
jnp
mov
sbb
fisubl
call
and
in
ljmp
das
int3
pushf
cmp
addr16
sbb
lock
pop
sbb
dec
sub
sub
adc
mov
cwtl
or
xchg
jae
mov
and
xlat
sub
sub
fstl
mov
in
divl
stc
or
aas
push
int
pop
mov
jge
repz
lds
xchg
mov
mov
in
lahf
jb
movsl
jo
adc
sbb
dec
andb
ljmp
in
ret
ds
xor
xorb
cs
in
fcomps
fwait
pusha
cmp
sbb
sub
sbbl
jns
jo
push
mov
jmp
adc
stc
and
call
and
int
outsl
sub
or
mov
lea
test
cmpsl
push
popf
push
into
xchg
jmp
inc
rcrb
xor
cmpsl
ss
jge
stc
sbb
push
pop
or
and
or
mov
out
add
fdivrs
arpl
and
aam
sbb
cld
pop
and
imul
sbb
dec
xor
mov
fstpl
push
or
es
bnd
filds
inc
push
xchg
mov
mov
cs
shlb
idivb
sahf
jmp
sbb
jecxz
das
stc
ljmp
in
inc
sub
ja
mov
popf
or
mov
mov
aam
std
pop
ljmp
xor
mov
mov
sbb
inc
movsb
mov
mov
les
add
mov
sbb
push
dec
inc
loope
cwtl
add
pop
andb
lret
xchg
xlat
lods
inc
flds
xor
or
xor
push
mov
mov
sbb
sub
xchg
push
sub
xor
dec
or
addb
in
push
xchg
fnstsw
cmp
test
mov
mov
scas
jo
cld
pop
pop
gs
clc
lds
adc
cltd
sti
cmp
mov
pop
or
fisttpll
lret
sub
or
xchg
adc
sbb
nop
pop
in
dec
dec
sub
inc
rorb
lods
rclb
test
call
sbb
fistpl
int3
add
inc
sarl
insb
mov
sbb
add
mov
out
mov
sti
sub
sub
pop
add
pop
pop
icebp
mov
stos
clc
inc
cmp
fsubrl
mov
xor
sbb
jae
inc
sub
das
inc
xchg
adc
daa
outsl
pop
stos
rorl
mov
mov
push
in
int3
push
lea
mov
fnstsw
xchg
cmp
sub
mov
add
push
roll
iret
les
xchg
fdivrs
mull
mov
push
cmpb
test
and
mov
adc
jecxz
sub
stos
pop
push
push
cmp
mov
dec
sub
pop
insb
sub
adc
nop
sbb
mov
int
or
stc
test
sub
pop
stc
fisubrl
push
insl
xor
subl
cltd
aaa
xor
jp
push
aas
arpl
test
popa
dec
sarl
push
mov
aas
test
leave
add
mov
arpl
cmc
sahf
inc
dec
sub
mov
pop
or
scas
pop
scas
popf
inc
cltd
mull
out
test
aad
stos
sbb
mov
xchg
outsb
push
push
jp
inc
xchg
jns
cwtl
lock
push
cmpsb
jns
jmp
iret
sbb
fcmovu
pop
dec
mov
jecxz,pt
xor
rcrb
dec
push
push
popa
test
ret
daa
lret
mov
in
jmp
cmp
test
xlat
xor
jge
les
cmp
cs
jg
leave
adc
bound
lea
jl
sub
xor
sbb
aam
and
push
cmp
jno
inc
andb
lahf
fs
sbb
pop
jp
inc
imul
push
jo
clc
clc
xor
pop
insb
push
jp
scas
mov
arpl
mov
add
fmull
pop
enter
lods
insl
add
popa
push
movsb
ja
sbb
fsubl
lock
xchg
lock
outsb
dec
jg
clc
fcoml
add
gs
lock
mov
push
rorb
loopne
aaa
leave
movsb
jbe
packsswb
dec
bts
scas
fst
mov
dec
mov
lea
je
jne
dec
mov
es
cltd
lcall
daa
mov
repnz
test
sbb
das
jecxz
pop
pop
pop
xchg
push
in
popa
dec
in
adc
int
shld
xor
inc
cltd
test
adc
mov
ret
push
cmp
cmp
lret
aas
push
jnp
or
loope
into
dec
nop
xchg
sub
sti
xchg
lret
in
in
mov
out
xchg
dec
movsb
cmpsb
push
popa
push
sbb
ss
insl
xor
and
or
mov
fisubl
sahf
push
jmp
adc
and
lret
jo
fiadds
leave
push
sbb
inc
ror
pushf
sbb
fs
in
into
or
adc
ret
xchg
loope
sub
ror
jecxz
fs
test
sub
xchg
xor
imulb
out
pop
lahf
into
cmc
pushf
mull
incb
adc
mov
push
pop
xor
rcrb
loopne
aaa
stos
sbb
out
les
ds
jno
mov
mov
mov
test
sub
cmc
int
jae
xchg
mov
jge
aam
cmpsb
push
mov
sub
fwait
orl
andb
mov
es
dec
jo
jnp
jb
repnz
mov
jl
mov
les
or
and
mov
and
dec
movsb
xor
fsubrl
jne
inc
insl
mov
cmp
mov
fists
ret
mov
cld
out
std
xchg
mov
ljmp
push
pusha
dec
dec
mov
mov
jmp
ja
mov
outsb
lahf
out
clc
mov
lahf
sti
mov
rcll
fdivr
fcom
cmp
cmp
pop
dec
or
mov
cmpsb
bound
jno
and
je
sarl
fs
cmp
call
rorb
push
stc
fstpt
mov
lock
xchg
inc
adc
jle
cwtl
gs
movsb
cmp
mov
pop
xchg
mov
or
movb
mov
xor
sub
hlt
inc
add
dec
add
jp
nop
cmp
fistpll
pusha
gs
bnd
leave
xor
ret
or
push
je
dec
xchg
shlb
out
ret
mov
dec
and
cwtl
xor
or
ffreep
into
outsb
adc
jns
stos
popa
mov
sarb
mov
or
xchg
jae
loop
push
cmp
adc
pushf
inc
hlt
xchg
inc
enter
imul
fwait
outsl
mov
inc
es
jge
lret
fs
dec
sub
jle
and
adc
pop
xchg
mov
sub
fcmove
aaa
fsubs
mov
inc
cltd
xchg
lock
pop
inc
jb
mov
in
andl
in
jle
rcll
mov
add
adc
xor
add
jp
mov
push
xor
cs
jmp
pop
sbb
into
mov
aas
vandnps
das
in
sub
push
aad
cmp
jo
pusha
je
repz
sbb
mov
push
addl
rcll
jnp
add
xchg
adc
movsb
push
popa
jg
adc
je
xlat
flds
sub
jl
push
dec
jecxz
in
outsl
outsl
add
ja
insl
in
mov
mov
test
fs
xor
pop
movsl
ret
test
outsl
out
push
mov
js
out
stos
sbb
shrb
xchg
adc
popa
ss
dec
xor
push
pop
rclb
xchg
insl
and
mov
jmp
mov
and
lahf
inc
fstpl
xchg
xchg
dec
xor
fiaddl
cmp
mov
lea
in
xchg
xor
sub
mul
into
fcomp
subl
cmp
cli
add
inc
mov
lods
jno
push
lcall
mov
int
mov
int3
pop
test
clc
repz
mov
test
xor
nop
into
push
jp
out
out
jmp
idivb
mov
fiaddl
js
cmpl
fnstsw
leave
call
push
data16
pop
insl
push
xor
jne
pop
xlat
pop
data16
jmp
outsb
lock
sbb
sbbl
lret
or
sub
jbe
or
js
pop
dec
pop
sbb
fwait
cmpsl
mov
sub
jnp
push
loope
fcoms
jle
jmp
mov
repnz
jp
imul
add
imul
ror
push
stos
add
test
pop
jbe
inc
inc
mov
xchg
ror
fcomps
cvtps2pi
pop
push
xchg
sub
add
mov
and
lea
add
mov
xchg
jae
int3
sub
loop
sbb
xchg
fwait
or
test
je
daa
push
cmpsl
das
lcall
fdivrl
jbe
sbb
shlb
mov
ja
divb
dec
rorl
dec
das
outsb
loopne
xchg
movsb
fsubrl
mov
fstl
icebp
fnstenv
xchg
mov
andps
pop
scas
adc
rcll
outsb
or
lret
dec
xor
xchg
push
pop
cmpsb
jmp
push
in
iret
pop
add
add
scas
jo
or
ret
mov
sub
cmp
dec
jmp
xchg
daa
mov
xor
sub
jbe
inc
pop
dec
fimull
outsl
lds
movl
mov
or
repz
pop
inc
bndstx
sub
stos
adc
dec
movsb
sbb
push
ljmp
inc
adc
inc
mov
es
data16
adc
aaa
lock
ja
ds
std
push
test
pop
adc
hlt
mov
and
lea
pop
jns
or
sbb
and
arpl
inc
rcrl
jnp
pop
lahf
sti
or
loopne
push
push
jl
push
inc
mov
jnp
stos
push
mov
cmp
pop
xchg
push
gs
adc
jbe
test
cmpb
push
pusha
ja
jg
sbb
leave
pop
sahf
add
in
pop
out
or
adc
dec
lock
add
pop
stos
shlb
add
cmc
or
mov
nop
jo
mov
push
cmp
push
jns
out
scas
lcall
pop
sti
jmp
jnp
mov
mov
or
or
dec
loope
call
in
js
inc
lahf
mov
mov
jge
out
icebp
add
cld
cmc
daa
fcoms
repnz
sbb
imul
cmpsb
jmp
je
jo
out
mov
xlat
das
cwtl
or
mov
add
ret
jnp
or
push
mov
cmpsb
mov
jo
jg
push
xor
mov
jb
fs
cltd
in
mov
idivl
mov
jne
adc
xchg
mov
cmp
or
sbb
and
sbb
lret
jnp
fsubr
mov
out
and
pusha
pusha
in
dec
cmp
push
sbb
cltd
lcall
cmp
ja
and
aam
in
mov
cld
rcll
dec
fiadds
push
add
mov
mov
cwtl
sub
mov
adc
sbb
jbe
mov
and
adc
out
pop
xchg
dec
imul
jge
adc
insb
lfs
cmp
and
insl
out
roll
mov
jno
subb
imul
sbb
xor
xor
test
test
add
xchg
xor
in
fmull
stos
addr16
jl
je
xchg
call
popf
enter
cmp
pop
cmp
adc
sub
xchg
hlt
mov
imul
inc
push
hlt
jmp
scas
push
push
mov
xor
lds
push
into
imul
mov
daa
aaa
lods
sti
mov
fldl
arpl
data16
xor
imul
mov
jp
inc
add
int
shl
sub
lds
fstl
and
imul
cli
push
cli
jg
adc
out
shrl
leave
add
jmp
cmp
mov
pop
sarb
ret
subl
inc
ja
xlat
adc
sbb
iret
xor
sbb
out
js
pop
out
outsl
mov
ss
cmpsb
sub
gs
loopne
rorl
inc
popf
test
or
push
sbb
in
push
jns
pop
inc
and
sub
inc
push
dec
sub
and
mov
xor
pop
add
jecxz
and
lods
xchg
js
cwtl
int3
mov
jb
sub
xchg
mov
jns
aam
mov
pop
inc
aam
call
stos
inc
push
sti
jno
mov
cltd
xchg
jge
inc
test
inc
out
inc
pusha
inc
ret
add
cmp
ret
dec
pop
xchg
cmp
xchg
dec
jmp
leave
loopne
pop
jmp
cmp
pusha
iret
push
jae
inc
aas
sub
incb
scas
daa
inc
test
add
mov
ljmp
mov
inc
push
sbb
cwtl
inc
pop
jecxz
sbbb
inc
in
clc
mov
ljmp
fidivs
push
jnp
pop
add
lea
sub
into
imul
rolb
mov
and
ss
sub
movsb
outsb
movsb
pusha
push
iret
or
push
jp
add
mov
add
cmp
jns
jp
stc
testb
imul
ds
mov
pop
scas
xchg
cmp
mov
loopne
dec
or
shl
popa
mov
xor
je
movsb
and
cmpsl
imul
xlat
shll
pop
xor
addr16
into
xor
pop
pop
mov
mov
jecxz
popf
nop
fwait
cmp
xchg
nop
sarb
in
mov
aas
dec
imul
in
jb
mov
stos
adc
into
xor
xor
repz
xor
mov
jle
rcrl
and
sbb
xchg
mov
mov
sbb
sbb
fisubs
xor
mov
jp
loop
pop
out
and
xchg
out
mov
push
mov
lahf
addb
loope
jnp
mov
das
pop
jb
jnp
mov
ljmp
or
push
xchg
gs
mov
out
jmp
pop
les
xor
xchg
icebp
pushf
cmp
sbb
clc
shl
ja
neg
popf
inc
pusha
xchg
jns
mov
cmp
mov
stc
stc
es
adc
lcall
push
repnz
arpl
cmpsb
mov
pop
fstpt
mov
adc
or
pop
ret
or
mov
cmpsb
push
jbe
sub
adc
add
std
insl
jb
mov
divl
mov
pop
push
sbb
inc
and
aam
inc
inc
mov
sti
insb
jno
daa
mov
int3
insb
loopne,pt
int3
sub
rcrb
pop
aad
pop
dec
or
mov
jne
sub
mov
andb
loop
xor
outsl
cwtl
pop
or
enter
mov
test
fwait
xor
aam
adc
mov
imul
mov
icebp
fwait
jns
call
enter
dec
bound
stc
into
scas
lock
repz
xor
or
insl
add
loope
sti
scas
stc
insb
jle
xchg
popa
jno
insb
mov
sub
mov
into
fadd
or
push
adc
ret
bound
jnp
aam
repz
cmp
pushf
and
data16
scas
rep
test
sbb
push
sbb
imul
inc
enter
inc
adc
or
int3
and
and
push
mov
jo
jae
add
inc
adc
icebp
addr16
out
mov
lahf
jmp
push
loop
lods
push
es
sub
mov
mov
mov
daa
test
push
fistl
xor
cmc
mov
in
leave
mov
cs
sub
insb
repnz
sbb
fcoml
jl
cmp
clc
int
ds
into
loopne
mov
sub
fbld
pop
jp
add
xor
in
movb
inc
movd
and
jnp
sub
lcall
jp
add
iret
xchg
or
arpl
jmp
lods
xlat
mov
call
push
adcb
int3
mov
test
or
pop
xor
icebp
or
dec
add
cmpb
cmp
sbb
push
sbbl
stos
fistl
cmp
xchg
mov
mov
dec
inc
dec
mov
iret
js
jae
shrl
test
fidivl
mov
fstpt
or
enter
aaa
test
lock
push
jbe
fsubl
ds
jo
dec
pop
xchg
fcoml
mov
arpl
mov
fstl
dec
or
lods
push
inc
repz
cmpsl
dec
xor
xor
nop
cli
and
add
add
pop
lahf
cmp
xchg
push
mov
push
fcoml
mov
push
inc
flds
int3
xor
fwait
push
in
arpl
test
cwtl
xchg
jmp
testb
push
jb
pop
mov
jge
clc
mov
adc
mov
xor
call
addb
jne
pop
aad
mov
prefetch
shrb
imul
xchg
outsb
data16
sub
filds
cli
repnz
lahf
out
int
les
stos
xchg
das
lods
push
sub
dec
popa
test
popa
mov
cmp
nop
addr16
and
stc
stc
in
jnp
addr16
cltd
adcb
or
pop
push
mov
pop
adc
lds
dec
inc
mov
js
xchg
mov
sbb
out
dec
enter
sub
sub
pop
aam
sub
jbe
and
bound
call
jns
inc
lcall
in
push
adc
rcl
and
push
fcmove
stc
aas
in
test
push
rcll
xor
gs
pop
pop
mov
mov
test
jp
mov
pop
inc
cwtl
sbb
aaa
ds
rcrl
pop
mov
test
mov
fnstenv
and
pop
data16
inc
unpcklps
xlat
push
adc
push
xor
cmp
mov
jne
cmp
dec
or
fdiv
mov
sbb
cwtl
jne,pt
imul
pop
inc
sbb
inc
fcompl
int3
testb
adc
adc
and
iret
xorl
pop
mov
gs
clts
and
hlt
adc
cld
pop
aad
addb
test
inc
faddp
dec
push
scas
shl
inc
sub
test
push
repz
add
dec
sahf
lods
xchg
push
push
int
insb
outsl
ret
or
cli
push
mov
cld
jae
sub
into
cld
mov
aas
in
cmpsl
into
adc
pop
testb
inc
ret
cli
jbe
in
xor
sub
sbb
mov
repz
sbb
daa
add
pop
icebp
sub
sbb
push
dec
lods
icebp
cmp
outsl
es
fnstcw
push
repz
or
pop
mov
leave
mov
adc
dec
mov
or
xor
push
lcall
out
pop
ja
pusha
mov
xchg
jno
sbb
jo
mov
in
xor
out
sti
pop
out
adc
scas
sbb
aas
das
nop
and
pop
mov
mov
std
addr16
cmp
xchg
das
xor
xlat
ficoml
mov
jecxz
movsb
cmpsb
cmc
bound
js
lods
lds
jecxz
test
jl
cmp
test
fwait
add
lret
mov
imul
xor
mov
mov
jl
test
cmp
xchg
mov
aas
mov
bswap
shlb
add
and
data16
movsl
pop
seto
sbb
mov
lahf
cwtl
adc
scas
das
mov
sbb
outsb
stos
push
clc
mov
mov
inc
cmp
mov
dec
out
add
andb
in
xchg
push
mov
and
jmp
loop
mov
lcall
cltd
adc
in
mov
cld
out
data16
and
mov
insl
into
pop
cmpsb
leave
cld
das
adc
xchg
cmp
pop
sbb
dec
push
add
inc
push
not
popa
mov
mov
adc
push
pop
mov
lock
icebp
in
rolb
pop
cmp
push
mov
dec
push
or
fcmovnbe
loop
inc
gs
shrb
inc
int
out
scas
mov
and
dec
sbb
dec
mov
jnp
fs
notl
jno
xor
call
pop
push
clc
add
mov
fldl
and
scas
cmpsl
rolb
push
gs
repnz
and
repnz
repz
mov
mov
pop
adc
mov
mov
dec
imul
into
add
xlat
movl
insl
xor
cld
stos
mov
lods
aaa
jecxz
js
fwait
lods
lea
jo
ret
je
jae
sbb
imul
sti
and
jecxz
fs
dec
xor
insl
mov
push
mov
inc
add
in
jl
pop
out
ja
fadds
mov
aaa
shlb
push
mov
add
cmc
in
sub
stos
adc
cmp
enter
inc
shll
mov
and
inc
faddp
pop
out
push
outsb
js
xor
int
adc
xchg
add
out
stos
push
ja
mov
stos
mov
leave
dec
ret
in
leave
add
out
mov
hlt
mov
and
icebp
fwait
sbb
ficompl
inc
dec
push
and
sub
push
clc
mov
rorb
nop
cmovp
mov
out
xchg
mov
adc
sub
in
mov
std
mov
outsl
test
pop
sbb
or
xor
sub
rcrl
mov
push
mov
push
sbb
inc
cmc
push
pushf
outsl
add
bound
ljmp
ror
push
test
lods
fsubrs
aas
movsb
push
add
shlb
lods
or
adc
andb
inc
pop
daa
in
cli
sbb
jb
mov
out
lds
xor
icebp
push
cmpsb
js
ljmp
insb
adc
dec
mov
sbb
pop
insl
fs
frstor
push
cmc
rcl
sbb
inc
lods
jo
xor
repz
ljmp
push
ja
scas
xchg
hlt
inc
rorl
sub
push
out
pushl
mov
mov
into
inc
jbe
pop
jb
xchg
mov
xor
push
int3
pop
or
inc
int3
daa
sub
daa
mov
out
sub
inc
xchg
in
mov
and
inc
xchg
adc
push
pop
add
and
mov
dec
ret
ss
mov
xor
jns
mov
cmp
push
jns
sbb
addb
jg
subl
jecxz
mov
add
mov
movsl
ss
dec
in
xor
xor
xor
xorl
int
and
jg
xchg
ss
sarl
outsb
xor
mov
jno
cmp
or
lret
xor
mov
test
cmp
leave
in
mov
push
mov
psrlw
xor
out
pop
mov
mov
out
js
lea
test
mov
lods
pusha
out
out
leave
out
dec
ja
lcall
gs
mov
outsb
aaa
shlb
pop
cmp
loope
cmp
mov
testb
cwtl
sahf
jno
bound
mov
das
mov
jnp
push
mov
dec
push
ficoms
cmpsb
xor
mov
mov
cs
popa
pop
je
jne
sahf
stos
xchg
test
sarl
mov
rcrl
pushf
iret
or
sbb
sub
pop
inc
inc
mov
fiadds
stc
inc
mov
push
xor
out
aam
andl
lods
mov
ljmp
es
and
or
xor
scas
stc
sbb
or
or
loop
out
daa
insb
leave
rorb
movb
add
jo
xchg
int3
imull
pop
pop
aam
adc
mov
out
xchg
mov
inc
enter
xor
in
dec
add
adc
or
ja
sbb
aaa
sbb
mov
sub
out
xchg
pop
and
push
inc
pop
pop
xlat
cmp
pushf
inc
sahf
sub
push
outsb
adc
mov
sbb
add
jge
xchg
inc
shll
rcrl
ret
addb
and
inc
aas
cmp
pop
scas
sbb
mull
lods
cwtl
aaa
inc
sbb
cmp
rorl
jge
xor
xchg
mov
add
sbb
out
out
mov
fwait
xor
stc
out
dec
shrl
divb
scas
pop
stos
std
sbb
and
dec
out
sub
mov
sbb
cltd
loopne
push
leavew
test
scas
xor
std
imul
in
or
push
enter
push
arpl
pusha
mov
mov
xor
xor
dec
pop
jbe
mov
imul
adcl
cmp
pusha
mov
push
in
xor
xchg
sti
pop
lahf
cltd
loop
int3
lea
popf
pop
dec
cmpsl
fistl
xor
int3
shrl
sbb
rclb
inc
dec
fldenv
add
daa
js
sub
sbb
bound
jno
pop
cmp
or
sub
mov
or
mov
aad
add
dec
pop
cltd
dec
stos
pop
movsb
movsl
mov
jge
int
xchg
sub
jno
gs
mov
std
fiadds
adc
jecxz
clc
aad
adc
lret
fs
dec
mov
in
inc
xchg
ds
scas
cmp
or
jb
daa
dec
sub
jmp
mov
push
mov
aaa
pop
sti
adc
and
xchg
test
imulb
push
out
mov
test
dec
inc
xchg
lahf
aam
mov
xchg
adc
rol
push
inc
xchg
fbld
pushf
pop
data16
push
xor
mov
inc
xor
cmp
mov
inc
adc
das
out
pop
xor
in
or
dec
fistpll
int
and
das
or
ret
add
push
cmp
pop
push
cmp
sub
movsb
xchg
push
or
mov
mov
xor
push
lds
icebp
lds
push
stos
cmp
stc
jmp
rcrb
jle
sahf
mov
inc
mov
fs
inc
daa
xchg
test
jb
std
rolb
sub
or
dec
dec
sub
imull
outsb
inc
xor
or
fidivl
cld
adc
cmp
out
xor
outsl
xor
push
jmp
fcoml
mov
or
xchg
pushf
fmuls
push
ret
jne
das
pop
popa
js
mov
out
js
jns
in
xchg
sub
sahf
jg
imul
shlb
je
repnz
dec
cmp
ljmp
mov
and
xchg
push
in
jb
or
or
sbb
and
je
pusha
stos
adc
jne
push
or
or
ja
pop
clc
xor
mov
mov
push
call
arpl
aam
adc
btc
fcomip
hlt
push
int
inc
inc
xchg
mov
mov
js
mov
rcl
inc
fwait
das
adc
pop
adc
add
add
sub
stos
mov
jne
mov
cmc
aam
push
rolb
cwtl
pop
dec
nop
out
jg
pop
mov
dec
aam
mov
jno
inc
pop
mov
push
jp
jecxz
repz
outsb
push
or
int
xchg
int
add
imull
lcall
mov
fidivl
jbe
into
sub
or
test
fdivrs
pop
and
xchg
pop
dec
in
push
mov
jle
sbb
lcall
mov
filds
rcrl
sub
sub
loopne
jl
or
insl
lea
sahf
pop
adc
inc
xchg
jg
mov
sti
mov
or
xchg
repnz
jp
mov
and
inc
inc
mov
push
sub
stos
lahf
jno
jecxz
cwtl
in
push
dec
dec
test
les
adc
fsubrl
les
push
cld
ss
mov
dec
cmp
add
js
loop
lret
fistpll
xchg
insb
add
imul
mov
jae
fldl
lea
and
cmp
lds
adc
shlb
dec
lock
adc
loopne
imul
mov
mov
lods
fnstenv
inc
test
cwtl
das
jnp
rorb
js
dec
xchg
jbe
lahf
adc
outsb
in
sub
cld
and
jl
push
add
inc
xor
jae
adc
xchg
and
dec
dec
push
cmp
push
mov
stos
es
and
popf
sete
lods
sub
cmpsb
inc
dec
xchg
pop
adc
movsl
stos
xchg
inc
pusha
inc
in
ljmp
xor
into
rcr
xchg
test
pop
test
test
push
loope
jl
or
mov
mov
test
fs
sbb
imul
pop
and
lea
xor
mov
ljmp
pop
out
test
xchg
sbb
and
xor
jg
cs
cmp
pusha
imul
cmp
inc
push
test
dec
out
mov
fwait
sbb
mov
and
mov
in
ds
xchg
call
sub
jno
idivl
enter
pop
stos
add
addl
sbb
push
mov
lcall
loopne
push
pop
inc
mov
sahf
roll
jecxz
sub
xchg
mov
fwait
sbb
cmpsl
inc
movsw
sbb
int
and
push
adc
stos
call
cwtl
mov
leave
stos
sub
cmp
jno
and
orb
mov
pop
leave
xchg
xsha256
cmpsb
xchg
add
mov
aas
xchg
shlb
adc
pop
cmp
and
cmpsl
xchg
aas
int
js
loope
repz
out
fidivrl
addb
mov
xor
movsl
pop
insb
mov
xor
jo
xchg
cmpsb
lods
loop
scas
push
and
bound
negb
arpl
ds
xchg
cmp
movsb
dec
jl
pusha
ror
out
insl
bound
pop
add
push
jae
add
sub
in
jecxz
aad
dec
mov
push
arpl
shll
pop
cmp
xchg
test
push
cltd
jg
and
fcompl
cmp
loope
enter
sarb
popl
mov
fnstenv
in
sbb
cmp
xchg
into
mov
pop
xchg
mov
adc
aas
adc
out
cmpl
repz
or
mov
int3
and
and
enter
inc
sbb
rcrl
ret
clc
push
mov
addl
and
pop
in
mov
xchg
xchg
dec
dec
pop
mov
pusha
jmp
jno
inc
fldt
jecxz
lds
pop
xchg
jle
mov
adc
aas
jbe
mov
movsb
or
test
jecxz
adc
sbb
cmpsl
xchg
mov
enter
jno
scas
xor
push
pop
xlat
js
adc
fnstcw
frstor
jl
mov
pop
mov
aad
add
int
addb
out
lret
data16
inc
sar
fildll
stos
movsb
mov
sar
adc
ret
mov
popf
imul
or
pop
xor
push
das
enter
lahf
lods
cmp
test
shrb
lahf
cs
out
fldenv
xlat
jmp
or
pop
lds
pop
and
jp
mov
jno
xchg
test
int
fimuls
add
push
aaa
scas
aas
adc
mov
outsb
jns
or
repnz
and
outsb
or
sub
sbb
int3
andb
imul
lret
pop
or
popa
repnz
jns
loop
xchg
addr16
cmpsb
movsb
pushl
adc
out
out
das
cmp
push
mov
adc
pop
lds
stos
jmp
mov
mov
int3
loop
dec
sarl
dec
and
jecxz
fldenv
push
adc
adc
stos
popf
mov
jge
sub
ss
xchg
cmp
fstps
icebp
or
jg
xchg
enter
loop,pn
mov
inc
ljmp
loope
xlat
stos
enter
ffreep
xchg
adc
and
jl
arpl
notl
fimuls
sub
je
out
mov
add
mov
sub
ds
pop
cmp
test
roll
subl
test
xor
stos
in
mov
push
orb
loop
inc
into
aam
ja
call
std
mov
xor
xchg
stos
add
fcomps
cmp
mov
fists
dec
push
insl
and
mov
dec
inc
mov
jne
dec
fisubrs
test
leave
dec
add
rclb
pop
mov
cmp
loop
shll
fucomip
cmp
mov
mov
outsb
inc
xor
fwait
orl
or
sbb
ds
scas
je
mov
mov
mov
adc
daa
mov
loop
xchg
cmp
jecxz
cwtl
int3
icebp
ja
inc
pop
push
loope
add
dec
add
xchg
add
out
lods
push
or
cld
lcall
ret
pop
xor
fldt
xchg
out
loope
jno
lods
sub
pop
cmp
sub
mov
cmp
js
arpl
cmpsb
scas
int
xchg
jmp
xor
in
push
inc
lea
inc
jg
test
sahf
gs
les
cmp
jb
xor
scas
mov
lock
mov
into
outsl
push
aad
loop
in
enter
aas
dec
ficomps
push
sbb
das
test
push
jg
in
std
repz
ljmp
popaw
inc
jo
xchg
xchg
xchg
fisubs
xchg
sbb
push
sbb
sahf
add
insb
in
jg
adc
dec
jmp
inc
mov
dec
aas
dec
test
cwtl
xchg
lret
add
push
repnz
mov
lock
inc
sbb
push
addr16
mov
xor
pop
sbb
mov
movb
mov
fists
mov
sbb
sbb
pop
mov
mov
sbb
push
cmp
or
xchg
xor
xor
xchg
loope
sti
iret
add
enter
push
jns
mov
cmpsl
in
push
outsb
adc
mov
out
movsb
xor
loop
lds
aad
sub
mov
out
xor
lds
arpl
dec
xchg
cmp
push
arpl
ljmp
mov
inc
scas
mov
add
or
adc
sub
stc
out
imul
pop
inc
jo
push
and
or
xchg
jmp
push
or
cmp
jno
push
insl
cmp
and
or
les
mov
mov
lods
icebp
icebp
adc
stc
rclb
in
push
adcl
inc
adc
popa
scas
lahf
cmp
rolb
repnz
rcll
or
pop
xchg
inc
xchg
mov
lret
or
mov
iret
not
push
xor
in
clc
cmc
dec
out
in
jb
xor
push
push
xchg
mov
push
xor
xlat
icebp
jmp
je
repz
jg
mov
dec
mov
pop
leave
or
imul
push
mov
cwtl
es
aaa
rclb
xchg
and
xchg
clc
es
insb
mov
pop
ret
sub
sub
rcrl
mov
mov
push
xchg
imul
dec
in
jl
addr16
popa
xchg
push
stos
mov
test
push
imul
xor
adc
orb
fistpl
adc
mov
lock
cmpsb
adc
movsb
jle
cli
rorl
stc
dec
adc
int
push
pop
insb
sub
aaa
addr16
cmp
xor
inc
sub
sbb
sbb
mov
repz
push
inc
lret
jne
out
sahf
push
mov
test
jg
inc
repz
pop
insl
iret
sbb
leave
cltd
xchg
push
call
sbb
mov
inc
xlat
mov
mov
and
dec
sub
add
ret
in
addb
cmp
jg
stos
pop
or
subl
mov
rorl
xor
mov
cvtdq2ps
jl
mov
xor
sbb
int3
jmp
dec
lock
jecxz
pop
push
fisttpll
mov
adc
inc
test
in
scas
movsb
je
out
orl
and
xchg
sub
push
pop
cmpsb
mov
lock
mov
movsl
lds
and
jnp
loope
dec
fdivp
cmp
push
mov
cli
xchg
test
cmc
cwtl
out
imul
xchg
enter
or
inc
mov
mov
mov
call
les
scas
sbb
add
and
int
pop
rclb
pop
dec
sbb
sub
mov
ljmp
mov
pop
mov
xlat
out
cmp
ss
and
push
imul
popw
out
dec
addl
adc
xchg
inc
sub
in
loopne
lahf
jmp
ret
aaa
add
sti
push
push
mov
fwait
popa
andl
sbb
and
pop
mov
xchg
mov
jo
lcall
int3
cwtl
mov
push
dec
mov
add
mov
pusha
ss
sub
and
js
inc
xchg
mov
js
push
mov
push
mov
notl
rcrb
dec
sarb
jecxz
cmp
imul
and
lret
push
xchg
repz
pop
mov
inc
dec
add
push
incb
dec
pop
sahf
xor
mov
shrl
cmp
lahf
cmp
xchg
aas
mov
push
pop
pop
xlat
jge
xchg
js
rol
pop
cmp
mov
and
fbld
sbb
jae
imulb
lods
ljmp
cmpsb
pop
hlt
push
leave
push
leave
pop
jns
stos
pop
rorb
fisttps
icebp
mov
in
data16
dec
push
mov
xchg
lock
jecxz
cmp
and
shlb
repz
mov
fidivs
pop
rol
mov
ret
aam
xchg
inc
xlat
testl
xchg
mov
sub
mov
push
xor
xor
stos
nop
mov
pop
push
adc
pop
pop
mov
inc
mov
jbe
xlat
scas
sub
sbbb
mov
enter
rcrb
mov
sahf
mov
xchg
inc
or
xchg
adc
jmp
or
lcall
xchg
cmc
call
xchg
pop
gs
ljmp
shr
iret
movsb
scas
fisubrs
cmp
mov
test
xlat
pop
adcl
iret
mov
decl
lret
cltd
nop
ret
fisttpll
mov
and
pop
loopne
js
sub
or
out
add
flds
cmp
xchg
lds
inc
gs
ja
movsb
mov
sub
jns
xchg
int
mov
inc
jae
jl
mov
insb
outsb
out
pop
xor
jge,pn
adcb
bound
int3
cmc
push
mov
xor
les
sahf
popf
lcall
stos
push
repnz
out
in
xchg
jb
popf
cwtl
or
es
xor
rcll
outsl
pushf
mov
outsb
dec
rol
imul
pop
and
jbe
dec
lret
mov
repnz
jo
or
test
adc
fsub
lret
cmp
popf
jl
xor
xchg
add
and
mov
fdivrs
mov
jg
fcoml
jbe
push
mov
or
ud0
popa
push
out
aaa
idivl
scas
stc
shlb
pop
rcl
test
fcomps
mov
push
test
imul
jmp
dec
ss
es
pop
gs
testb
and
adc
fsubs
dec
inc
xor
mov
cld
repnz
mov
lods
cmp
jge
in
pusha
adc
add
test
mov
aad
test
clc
adc
aad
imul
pop
and
sbb
in
jb
leave
icebp
pop
clc
mov
movsb
mov
push
dec
inc
mov
pushf
loopne
mov
sub
jmp
push
pushf
mov
cmp
mov
call
mov
sbb
mov
cmc
in
mov
lea
test
adc
push
fsubp
out
mov
lahf
mov
sbb
and
aaa
jne
add
mov
ljmp
dec
fisttpll
or
or
pop
jns
ja
pop
cltd
push
mov
sub
pop
mov
dec
xchg
xchg
cmp
ljmp
ret
ret
repnz
mov
enter
mov
and
int3
adc
cmpsb
enter
mov
sbb
or
pop
or
pop
mov
cmp
ljmp
mov
sub
fs
and
cmp
xor
mov
jmp
dec
repnz
jmp
adc
scas
lock
push
jne
fstp
push
js
pop
pop
shlb
sub
mov
adc
jl
inc
ror
pop
sub
cmpb
inc
cltd
sbb
dec
and
fiaddl
cmc
inc
pusha
pop
out
les
out
jp
xchg
jl
icebp
in
and
das
cmp
cmp
in
xor
pop
add
mov
std
cmpsb
jp
ds
aas
mov
sti
inc
push
fisttps
adc
mov
mov
idiv
push
push
jb
cmpsb
ja
shl
aad
ret
fldl
aaa
inc
xor
clc
and
std
dec
lods
lea
incb
das
mov
int
mov
jno
jns
loopne
divl
lea
iret
pop
xchg
mov
pop
lret
inc
and
pop
sbb
and
fsubrl
jno
cmp
push
push
fdivrs
aam
mov
sub
aam
mov
pop
arpl
cmc
inc
cmp
leave
push
add
shrl
adc
fists
inc
pop
mov
inc
pop
mov
and
out
adc
fidivrs
xlat
cmp
sub
push
cmp
lods
mov
int
test
xchg
mov
cld
dec
fwait
adc
sub
call
jle
push
mov
adc
scas
xchg
mov
jb
repnz
fists
mov
popa
sbb
leave
cmovl
pop
lret
jae
and
mov
xor
lods
jg
mov
test
sbb
xchg
or
jge
cwtl
aas
lret
mov
sbb
jns
adc
dec
out
frstor
and
pslld
cmp
or
into
pop
jl
fisttpll
xchg
xorl
fwait
data16
adc
inc
ret
inc
lea
pop
lcall
inc
int
cmp
pop
mov
lods
mov
adcb
inc
into
mov
mov
mov
lret
and
std
enter
sahf
shrb
xor
call
fcomps
jmp
notb
movsb
mov
dec
jmp
rcrl
xchg
or
adc
and
nop
inc
mov
int3
addb
inc
adc
or
sub
iret
push
add
dec
es
push
in
imul
std
aaa
xchg
xchg
fiaddl
xchg
out
push
or
pusha
addr16
inc
jmp
sub
mov
push
sbb
imul
push
dec
jno
pusha
testl
cmp
shlb
pop
outsl
jo
pop
sbb
sub
notl
adc
fldt
push
inc
lea
in
je
add
push
pop
xor
xchg
sub
pop
mov
cmpsl
adc
sbb
push
mov
inc
lods
repnz
data16
repz
leave
xor
es
lahf
jge
pop
sub
dec
cmpsl
push
shrb
sbb
je
pop
dec
xchg
cmp
mov
out
mov
lds
pop
and
xchg
pop
aaa
popf
cmp
cmpsl
mov
ds
rcl
xchg
int3
sub
mov
fwait
out
push
fnstenv
loop
cmp
xor
jns
insb
inc
aaa
cli
sub
adcl
lods
fmuls
mov
test
testl
jb
xlat
addl
divb
jg
dec
mov
mov
imul
or
cmpsw
cmp
mov
dec
pop
and
adc
push
cmp
sahf
inc
mov
aas
sbb
mov
pop
push
popa
mov
test
push
test
xchg
mov
and
clc
pop
xchg
jbe
pop
jmp
sbb
lcall
or
xchg
cmc
pop
dec
shll
cmp
in
incl
dec
inc
ds
xor
fwait
dec
mov
adc
icebp
pop
ljmp
movsb
insb
push
or
mov
add
aas
aam
push
inc
jge
cmpsb
pusha
cmp
ss
pop
enter
dec
out
ljmp
mov
lret
test
in
push
in
mov
dec
add
xor
sub
sbb
pop
stos
pop
adc
inc
mov
inc
negl
xor
cs
inc
xchg
sbb
bound
cmp
addb
jmp
pop
adc
cmc
pop
imul
sub
lds
fldcw
push
pop
into
scas
popa
cmp
cmc
mov
rcll
adcb
aam
lret
and
adc
mov
pop
loope
inc
jno
xchg
movsb
dec
and
push
ljmp
inc
ljmp
mov
fdivr
ds
adc
xlat
repz
pop
add
pop
lods
jo
bound
cld
sub
cmpsl
adc
lret
xlat
and
mov
je
mov
mov
in
pop
xor
lock
mov
push
or
pusha
or
addr16
xchg
jnp
add
shlb
sbb
xchg
fsubs
xor
paddsb
pop
icebp
sub
ficoms
mov
sbb
cmp
mov
pushf
call
loop
movsl
outsl
test
adc
scas
sarl
cmpsl
repz
jae
inc
push
and
cmp
mov
jbe
and
gs
sub
call
mov
xor
imul
and
add
ficompl
or
mov
jbe
pop
or
xchg
outsb
lret
cltd
aad
adc
fisttpl
iret
das
outsl
dec
movsl
std
ljmp
mov
lahf
or
or
jmp
dec
std
cmp
pop
in
addb
xchg
jl
cli
in
jns
sbb
mov
lods
les
push
iret
sbb
inc
jmp
push
ljmp
sub
add
push
mov
pop
jne
jecxz
lods
pop
cmc
movsb
inc
fwait
jno
jecxz
scas
imul
dec
inc
outsl
push
sub
jge
add
mov
mov
cmp
jmp
fistpll
test
loopne
jb
sub
lahf
sub
dec
cmpsb
xorl
jns
jmp
push
mull
stc
icebp
int3
mov
sbb
jmp
pop
mov
das
es
cli
rcrb
adcb
add
mov
adc
pushf
int3
imul
ljmp
sbb
mov
push
mov
push
sub
bound
mov
rcll
adcb
gs
jnp
jmp
shll
push
dec
ds
add
test
add
cmp
mov
dec
pop
xlat
int3
xchg
outsl
jg
out
and
jbe
push
jo
cmp
vphaddwd
cli
push
xor
xor
in
loopne
shl
and
dec
lcall
fs
jecxz
lds
mov
lock
dec
push
dec
xchg
pop
push
add
mov
and
lret
arpl
jns
jb
mov
cmc
lods
sarl
or
clc
sti
in
and
cmp
cld
pusha
jle
je
xchg
cmpsb
adc
fs
pop
stos
inc
pop
aad
sub
lds
sub
clc
aam
pop
and
sub
std
in
shlb
jle
push
xchg
cli
sbb
mov
xorl
das
dec
icebp
push
mov
push
xchg
ljmp
jge
loopne
cmp
popf
adc
dec
fwait
iret
shll
and
scas
dec
mov
ret
mov
in
sbb
ss
shrb
dec
aam
push
addr16
mov
fcompl
sti
xchg
sahf
cs
cmpsl
ret
adc
ss
mov
xor
out
div
jb
inc
dec
xchg
ss
adc
stos
int
jle
scas
lods
mov
mov
cmpl
cmp
sub
cmc
adc
test
sub
push
bsr
je
test
inc
pcmpeqb
xlat
outsl
lret
hlt
jne
xchg
mov
mov
in
mov
test
mov
sub
or
mov
in
fcoms
or
inc
push
pop
rcr
dec
pushf
xchg
shr
lret
cmp
inc
aaa
out
jns
sbb
lret
sub
sbb
rcll
loop
fldenv
andl
jecxz
sub
aam
mov
repz
lds
add
enter
movsb
mov
jg
push
pop
call
pop
or
jle
jns
dec
in
int
fs
mov
test
sbb
ret
bound
sub
test
repnz
imul
iret
pop
sahf
lock
shlb
push
imul
mov
lods
pop
cltd
sbb
cmp
jno
addps
adc
cmpsb
jmp
std
gs
jne
dec
xor
mov
adc
je
fisubs
stos
out
sub
push
sti
test
andb
mov
xchg
std
mov
aaa
inc
dec
out
pop
and
arpl
mulb
lret
push
ss
push
fdivl
dec
sbb
pop
adc
mov
repnz
sahf
aaa
das
jbe
pop
inc
or
fsubs
xor
sub
inc
inc
mov
mov
xor
fistpll
and
shlb
push
frndint
fiaddl
jg
lret
rcrl
mov
shll
sbb
add
test
mov
jg
push
jbe
cwtl
out
dec
loop
ljmp
sbb
jns
stc
xchg
add
cmpsb
outsl
push
leave
in
xor
out
push
aas
loopne
testl
or
mov
add
add
xchg
dec
or
add
cmp
sbb
sbbl
and
mov
loope
imul
lret
cmp
lds
jl
push
lahf
inc
mov
movsl
lea
jbe
call
ror
mov
xor
jecxz
xor
xlat
pop
ficomps
xor
dec
cmpsl
mov
pop
dec
jae
movsl
insl
sub
sbb
push
aam
xrelease
sti
andl
stos
out
inc
inc
jno
and
mov
add
lods
stc
gs
ret
dec
sti
sub
stc
push
jmp
sub
rclb
subb
add
mov
cmp
out
dec
pop
or
sbb
push
jnp
xlat
or
adcb
sub
cmp
ja
push
lea
jbe
lods
dec
cmpsl
jnp
lods
jge
in
pusha
push
mull
mov
cmp
adc
mov
nop
loop
cmpsl
fcmovbe
test
dec
movsl
hlt
adc
and
inc
dec
or
clc
enter
out
inc
jne
pop
loop
xchg
movsl
js
sarl
fidivl
and
xor
jb
xchg
es
adc
xchg
ret
mov
int3
xchg
sarl
adc
in
mov
outsb
test
leave
pop
pop
sahf
test
push
aas
jbe
ret
cmpb
int
sahf
lret
inc
push
in
mov
popa
fcmovnbe
cmp
jmp
imul
mov
aas
addr16
jo
sbb
pop
aas
or
xchg
shlb
fmuls
push
or
jb
mov
jmp
test
mov
mov
xlat
mov
lea
pop
mov
ljmp
out
sub
out
pop
xor
adc
mov
outsb
testb
cmp
loope
and
mov
push
int
in
enter
inc
popf
fmulp
fsubs
pop
xor
fwait
mov
mov
or
sbb
out
and
and
push
jno
lahf
sub
add
jnp
dec
inc
rcrl
pmulhuw
pop
and
into
and
rorb
push
lods
or
lahf
inc
pop
inc
mov
dec
mov
mov
xor
cltd
lret
lea
xchg
lods
aad
pop
cmpsl
and
scas
ret
add
insl
jno
insl
xchg
orl
sub
incb
cmp
ja
outsl
mov
stos
dec
bound
inc
rorl
or
decl
xchg
in
test
inc
or
or
pop
cmp
add
clc
insb
sbb
sbb
xchg
in
fisubrs
cld
push
out
jae
fisubs
bound
repz
push
sarl
jg
sub
xchg
pop
dec
inc
jl
fdivp
cmp
repnz
or
aaa
fisubrs
sub
popf
arpl
add
add
clc
pop
jb
mov
mov
or
dec
mov
mov
xor
je
cld
sub
push
push
pop
ss
push
jnp
pop
jg
addr16
xor
imul
test
call
cwtl
jns
mov
dec
cmp
leave
fwait
xchg
inc
es
push
subl
flds
popa
inc
xor
loop
add
xchg
pop
sub
mov
fwait
mov
sbb
push
jl
call
std
imul
aaa
addr16
sahf
bound
sbb
and
fsubrp
inc
push
pop
movsb
fs
enter
xor
mov
pop
aam
inc
mov
inc
subb
das
or
sbb
loope
jmp
sete
shr
andl
or
xor
fucomi
push
aas
cld
push
xchg
in
jne
fnstsw
mov
cltd
lods
xlat
xchg
int3
stos
out
cmp
cmp
xchg
insl
cltd
push
add
hlt
jb
adc
sub
movsl
inc
inc
in
jmp
fimuls
mov
lds
push
push
sbb
cmp
pushf
xor
fcomps
add
loope
mov
loopne
int
jae
mov
fwait
xor
fwait
std
jge
stc
xorl
bound
popa
das
xor
mov
inc
cltd
pop
and
imul
mov
cmpsb
movsl
cmp
decl
push
push
insl
push
in
in
fs
arpl
cwtl
mov
test
mov
add
inc
mov
jecxz
push
mov
push
xchg
pushl
xchg
dec
mov
jo
icebp
ja
mov
dec
loop
jge
emms
sbb
fcoml
pop
pushf
sbb
rcll
mov
mov
lahf
in
loop
cs
xchg
xchg
call
or
sbb
pusha
pop
push
dec
fdivs
xor
cmc
jl
jbe
xchg
push
sub
xchg
jecxz
lock
cli
or
leave
inc
xchg
cmp
and
out
jnp
sbb
adc
pop
cmp
jno
inc
lods
lret
adc
mov
out
push
loope
pop
sbb
and
std
sbb
icebp
aaa
inc
int3
inc
xchg
stc
jbe
insl
insb
mov
mov
stc
and
jb
jns
jle
ffree
leave
sub
adc
js
out
push
push
mov
sub
addb
inc
mov
loop
mov
sahf
test
xor
pushf
adcl
fnstenv
adc
lret
adc
pop
adc
jo
cwtl
push
shrb
lret
xlat
popf
sub
fistps
outsl
repz
push
icebp
aaa
push
push
mov
cmpsb
jge
xor
mov
xchg
test
imul
lds
sahf
jae
cmpsl
unpcklps
mov
adc
scas
cmp
cmp
es
insl
inc
jne
pop
dec
pop
rolb
orl
ss
xchg
dec
scas
xor
inc
pop
or
ss
push
xchg
outsb
pop
cmc
cmp
je
mov
mov
rcrb
mov
add
and
fisttpl
incl
ja
mov
xchg
insl
xorb
negl
mov
push
pop
inc
mov
outsl
mov
adc
cmp
push
dec
and
popa
nop
call
shlb
out
es
xchg
je
xchg
sub
mov
mov
push
inc
sbbl
and
add
daa
pinsrw
test
push
mov
jp
repz
xchg
dec
pop
dec
xor
mov
jnp
ret
and
push
jno
rcll
jne
pop
pop
dec
mov
jecxz
scas
mov
mov
jae
pop
in
addr16
out
inc
pop
loop
cld
cmp
jbe
pop
xor
test
das
rcrb
xor
push
insb
sar
pop
psrad
jp
fcmove
xlat
xchg
sbbb
aad
sahf
cmpsl
xor
push
pop
push
mov
dec
pop
cs
sbb
cmc
xchg
xchg
push
ds
imul
xchg
hlt
pop
cli
xlat
outsb
mov
pop
pop
inc
shrl
lea
mov
jbe
sti
sbb
rorl
out
pusha
jp
xchg
pop
addb
adc
filds
mov
pop
incl
ja
jg
dec
add
lock
sbb
idivb
adc
mov
outsb
cmp
mov
cs
adc
lock
and
orl
shl
into
add
pop
inc
jb
ret
push
pop
aas
xchg
cmpb
addr16
adc
push
mov
jns
mov
out
pop
lods
push
dec
pushf
dec
mov
shr
popf
mov
pushf
push
mov
dec
mov
mov
add
or
inc
addl
mov
jb
mov
test
adc
insl
repz
adc
cmp
stos
sub
pop
cwtl
jbe
push
and
dec
fwait
ror
pusha
aam
jecxz
pop
sbb
lods
std
scas
movsb
xor
mov
lock
xchg
lds
mov
sbb
xchg
push
adc
lds
ret
enter
jmp
mov
movsb
arpl
sub
sbb
insb
gs
mov
xor
mov
lahf
rcll
push
pusha
mov
xchg
rcl
push
std
cmc
addl
inc
add
popa
cmpsl
mov
xor
xor
dec
clc
roll
ja
scas
or
cld
mov
int3
icebp
cmp
mov
pop
mov
loop
xor
xor
adc
lock
and
je
fisttps
mov
out
fdivl
leave
adc
mov
clc
hlt
mov
fs
sub
out
adc
stc
subb
xrelease
and
add
out
push
sbb
aam
dec
lock
push
imul
jbe
fstl
inc
adc
sbb
inc
push
imul
in
or
inc
fists
push
inc
mov
ret
cmp
dec
mov
sub
add
xor
lds
mov
iret
mov
inc
shlb
lcall
jae
or
and
dec
mov
xchg
sbb
outsb
xor
add
fs
test
dec
push
cmpsb
pop
cmc
xchg
mov
jo
in
add
inc
mov
mov
add
out
in
in
ret
cltd
or
xchg
xor
and
int
inc
add
aas
in
enter
inc
movsl
mov
or
imul
sete
xor
enter
pusha
out
push
sti
stos
mov
das
push
mov
ret
call
cmpl
mov
cmp
cs
test
pop
je
into
ss
scas
std
int
push
out
push
sahf
pusha
push
or
mov
js
adc
jg
dec
movsb
adc
mov
pop
mov
in
jp
sub
jne
cwtl
loopne
cld
dec
xchg
fcom
negl
add
mov
fldenv
fsubrs
mov
xor
pop
insl
inc
cmp
into
or
xor
or
or
add
in
pushl
sbb
rol
ror
xor
imul
icebp
jbe
mov
cmp
inc
lods
cmp
aad
cli
sub
test
cld
push
clc
xor
cmc
xchg
cs
xorl
mov
xchg
mov
jnp
xchg
ss
shl
call
jmp
cli
and
dec
repnz
and
xorl
push
js
cld
gs
jns
push
cmpsb
fsubrs
push
repz
sti
xlat
mov
out
mov
or
mov
mov
sub
mov
jmp
pop
icebp
sti
or
mov
mov
fwait
and
inc
lcall
imul
in
add
xchg
test
sub
ljmp
add
inc
xor
sub
jb
jmp
je
pop
sub
sub
fildll
xor
shlb
test
mov
xchg
mov
ljmp
cmp
lods
xchg
sbb
push
rcrb
cmp
xchg
lret
shlb
sbb
inc
insb
sub
dec
jns
pushf
xchg
mov
add
inc
add
cs
repnz
and
xchg
xlat
xchg
shr
mov
es
fisubs
pop
push
add
std
ja
pop
xchg
inc
movsl
lret
mov
loop
xchg
xchg
jge
adc
pusha
mov
mov
mull
mov
adc
int
stos
mov
mov
pop
add
gs
jmp
loop
std
arpl
push
mov
icebp
inc
lods
xor
sub
cwtl
push
gs
adc
pop
mov
lret
push
in
jge
push
cld
inc
xchg
and
pop
xchg
aas
dec
xchg
cltd
and
add
js
cmpsl
ljmp
and
aad
mov
jno
pop
sub
fisttpll
sub
stos
pop
push
inc
pusha
inc
mov
rolb
jnp
cmp
dec
push
or
sub
or
das
or
testb
outsb
pushf
fcoms
jo
xor
inc
iret
cmp
push
mov
scas
insb
int3
insb
or
sub
pusha
adc
lods
jmp
xor
and
and
inc
js
lcall
mov
leave
roll
or
sub
xchg
lret
and
pop
ret
ret
xchg
cmp
xor
pop
mov
and
lret
sub
roll
push
sbb
in
mov
mov
cmpsl
mov
dec
fdivr
inc
out
add
xchg
dec
cs
loope
and
pop
loopne
aad
int3
sbb
or
sti
pushf
mov
rcll
aas
enter
sub
adc
lret
sub
arpl
mov
sbb
lea
jno
mov
outsl
xor
repz
sub
and
cmp
jne
loope
gs
into
fs
dec
jge
pop
dec
mov
dec
push
cmpsl
sub
out
repz
cmp
mov
jns
les
pop
lock
xchg
push
bound
xchg
mov
jmp
inc
loopne
out
adc
sbb
dec
mov
js
test
fistpll
mov
jecxz
xchg
and
jnp
in
mov
jne
out
and
dec
out
dec
inc
xchg
xchg
and
lods
sub
in
aad
fdivrs
stc
mov
mov
xchg
xor
leave
add
mov
push
mov
jle
test
xchg
mov
cltd
rolb
push
xor
roll
pop
dec
je
xchg
cs
mov
mov
cmpsl
push
and
jae
jmp
push
xchg
mov
inc
push
pop
fisubl
bound
sbb
xchg
add
jae
sub
data16
push
fwait
subb
sub
in
or
lahf
adc
or
cld
mov
inc
leave
push
addr16
jl
mov
jne
xchg
ficompl
sar
push
inc
inc
lcall
cld
sub
add
mov
into
xchg
inc
divl
sub
cli
inc
fbstp
push
std
into
pop
popf
in
lods
repz
int3
mov
test
add
aaa
xchg
aas
cmpl
pop
aad
jae
push
cwtl
out
test
es
mov
inc
ret
sahf
repnz
push
insl
es
xchg
je
xor
bnd
inc
movsb
imul
pusha
aam
push
fsubrs
scas
lcall
mov
dec
mov
xor
adc
mov
fwait
jp
fs
jmp
in
fnstsw
lahf
lods
mov
mov
shrl
pop
inc
jge
pop
dec
mov
dec
add
mov
clc
movsb
sbb
jno
call
xor
add
es
test
push
pop
lods
dec
out
jnp
and
out
pop
aas
movsl
or
lcall
aas
dec
loope
data16
es
pusha
aas
fisttpll
call
ja
lea
sarl
lods
int3
out
push
in
sahf
mov
push
mov
or
adc
push
push
je
dec
mov
aam
mov
shrl
aas
mov
or
add
pop
and
loop
test
out
mov
cmp
clc
mov
mov
ja
push
out
aas
or
sbb
ret
insb
or
orb
xlat
dec
jp
ja
adcl
or
adc
andl
fbstp
dec
jecxz
xchg
mov
lods
jp
mov
iret
or
xor
and
loope
mov
dec
pop
in
stc
fnstsw
adc
push
cmp
or
mov
mov
mov
cmp
dec
sub
sub
cwtl
adc
in
mov
std
cmpsw
xor
lods
push
addb
je
repz
imul
mov
arpl
fcmove
jns
and
mov
stos
mov
add
andnps
pop
fisubs
and
loopne
xchg
ret
inc
cmp
int
xchg
sbb
jecxz
dec
xor
out
bound
mov
xor
jb
ds
ret
jmp
mov
ljmp
xor
cli
arpl
scas
and
ror
add
push
mov
add
movsb
mov
adc
les
int3
pop
icebp
xchg
clc
idivw
mov
and
out
pop
sbb
mov
fcomps
adcb
cmpsb
mov
xor
call
outsl
xchg
push
pop
int
enter
dec
shlb
add
dec
int
push
test
xchg
ja
aam
jp
loop
mov
xor
xor
test
int
imul
mov
and
or
mov
xorb
aam
and
xorb
iret
cmp
fdivs
inc
sbb
and
and
mov
jge
xchg
or
push
stos
sti
cmp
xchg
enter
jno
daa
push
inc
sbb
cmpsl
scas
mov
mov
aam
daa
mov
sbbb
mov
faddl
cmpsl
jecxz
dec
je
ds
pop
pop
mov
mov
shlb
xor
movsb
xor
jnp
push
xor
dec
ret
mov
filds
lock
psubusw
addr16
test
cmpsl
mov
out
or
dec
repnz
repnz
ds
xor
mov
push
cmpsl
push
sub
insb
das
pop
push
inc
daa
jl
xor
in
clc
xchg
pop
into
test
gs
pop
hlt
lods
dec
cmp
idivb
jecxz
test
out
or
adc
aam
inc
aas
inc
rcrb
mov
dec
fstps
sub
js
ret
enter
int3
push
scas
xorps
lcall
jbe
movsb
cmp
stc
push
inc
testb
and
push
xorb
xchg
test
cli
jmp
ss
add
xor
xchg
js
pop
insb
jg
jae
sbb
out
out
or
jg
or
into
leave
sbb
je
pop
jae
out
or
inc
jo
push
and
xor
push
xchg
lret
js
mov
movsb
jno
bound
xorb
jbe
mov
fisttpl
sub
dec
aas
dec
push
shll
jnp
add
bound
aas
xchg
call
add
shrb
ljmp
aad
add
sar
in
cltd
mov
mov
icebp
pushl
adc
xor
mov
fwait
sbb
aad
pop
jle
fsts
push
into
push
outsl
test
mov
push
sub
outsl
mov
cltd
ret
jno
stos
cmp
and
ljmp
inc
pushf
mov
aad
addr16
scas
sub
xchg
push
cmp
sbb
and
fwait
arpl
inc
out
cld
divb
pusha
gs
lcall
jnp
sub
dec
int
push
sbbl
add
lea
loop
sahf
lods
mov
nop
mov
push
fnstsw
jl
decb
push
pop
and
dec
xchg
jg
mov
mov
push
or
pop
adc
subb
push
pop
jne
cmp
jb
es
sbb
xchg
in
movb
leave
fs
cltd
cmp
ret
ret
iret
jl
push
dec
ficompl
xor
inc
ja
gs
add
mov
push
jmp
enter
ret
data16
out
pop
in
pop
clc
aas
mov
push
test
xor
stos
push
pcmpgtw
inc
cmp
mov
insl
cmp
ja
loope
or
call
sti
cmp
jmp
jmp
cmc
out
push
cwtl
inc
and
outsb
mov
dec
jmp
cmp
cli
push
cmp
es
hlt
cs
in
cmc
rolb
add
jb
fdiv
out
je
add
rcr
sub
in
data16
fucom
lea
je
out
ffree
push
test
not
hlt
adc
inc
in
dec
div
fstpl
sbb
dec
stc
push
or
scas
testl
cs
or
jno
cmp
in
pop
xor
in
cmp
leave
sbb
jg
mov
incb
call
fists
pop
clc
enter
cmp
jge
dec
pusha
or
mov
xchg
fisttpll
lock
push
js
negl
or
scas
mov
jl
mov
add
aad
aam
inc
les
popa
jae
stc
add
xchg
push
or
pop
push
stc
adc
bound
lcall
mov
jno
mov
rorb
pop
add
cs
xchg
loopne
fldenv
cmpsb
sub
fstpt
mov
push
scas
adc
sub
clc
cmp
lcall
cmp
cmp
sub
into
add
pop
pop
mov
fistl
das
jge
add
cmpsl
and
jge
das
cmpsb
lahf
dec
fisttpl
push
test
fucomp
aam
leave
jge
sub
dec
xchg
clc
xchg
adc
mov
jne
sbb
std
aas
and
gs
mov
mov
aam
fisubs
pop
test
fmul
add
dec
lods
in
aad
mov
push
jo
test
sub
add
in
je
push
sbb
cmp
push
xchg
fistpl
mov
jbe
test
imul
data16
mov
mov
xor
and
movsl
sbb
push
test
push
repz
mov
sub
clc
dec
cwtl
rorl
push
push
xor
sbb
fcom
mov
mov
mov
mov
or
xchg
dec
jg
xor
jle
sbbb
sbb
lahf
pop
outsl
enter
dec
pusha
dec
cmp
mov
mov
push
sub
push
pop
enter
pop
cmp
pop
shlb
pop
in
pop
int3
or
sub
add
or
push
push
popa
or
scas
xor
xchg
xchg
shlb
sbb
cltd
push
lcall
das
lods
lods
test
sub
mov
push
aaa
dec
push
cmp
inc
push
lret
adcl
inc
xor
inc
pop
hlt
mov
mov
ljmp
lcall
cmp
add
mov
in
mov
popa
sub
hlt
xor
mov
clc
notb
cmp
jl
lods
push
mov
aaa
add
fsubrl
bound
test
mov
sub
bound
push
sti
mov
test
mov
testb
rcll
cld
mov
iret
xlat
ror
ret
orb
rclb
mov
ficoms
and
sbb
pop
lds
loop
imul
aaa
mov
inc
fdivp
movl
jns
sub
push
and
fcmovb
int3
cmp
fistpll
xchg
cmp
fdivs
and
out
lahf
dec
jno
call
push
fidivs
xor
mul
sbb
jecxz
cmp
jne
jge
add
mov
push
les
enter
lahf
and
aas
aas
lock
addl
lock
sub
ret
rorl
gs
lcall
fs
xor
scas
pop
dec
and
adc
insl
pop
cmp
gs
jno
iret
popa
jns
push
std
jge
movsb
lret
lea
orb
mov
jo
aad
inc
push
lret
xchg
xchg
pop
ret
sbb
jbe
dec
xchg
mov
push
add
mov
shlb
cmpsb
fsubrs
and
xchg
inc
and
mov
int3
fisttps
push
add
shlb
or
mov
inc
push
rorb
sub
mov
add
insl
sbbl
mov
jns
ret
mov
sahf
repz
or
ret
mov
pop
push
stc
mull
clc
pop
mov
xlat
jae
sbb
aad
loope
sbb
inc
shrl
fsts
cmp
dec
jnp
sbb
sbb
adc
test
dec
mov
repnz
mov
add
jl,pt
inc
xchg
rcrb
cmp
pop
cli
mov
loopne
rcll
sbb
xchg
sub
lahf
push
fistpl
fnsave
lea
mov
inc
pop
mov
mov
mov
mov
sbb
std
notb
outsl
cli
pop
xlat
fsubs
xchg
int
je
fldenv
xlat
and
push
add
in
jmp
fistpl
pop
cmp
test
mov
push
shl
pop
loop
dec
push
fwait
adc
jno
imul
int3
push
jge
fstpt
cmp
jg
in
inc
pop
mov
xorl
pop
cmpsl
xlat
repz
cli
jno
aaa
jge
add
push
push
and
inc
pop
popa
test
xchg
test
xor
or
fs
idivb
stos
stos
or
push
std
sbb
lcall
jno
cmp
mov
test
fmull
test
imul
or
mov
add
insl
jns
hlt
icebp
sbb
out
jnp
mov
aas
js
std
gs
jae
hlt
aam
jg
dec
sbb
fwait
mov
push
lods
lods
push
cmpsb
xchg
push
jo
mov
ja
fwait
std
pop
cmc
jbe
subl
bound
jne
xchg
mov
mov
or
dec
sbb
push
dec
cmp
data16
inc
lock
mov
test
cld
ljmp
mov
cld
xchg
repnz
dec
loopne
sub
mov
sbb
cmp
adc
in
mov
pusha
mov
bound
cmp
cld
mov
add
mov
lcall
int
dec
fmul
js
fisttpll
adc
hlt
aad
stos
es
push
xchg
popa
std
push
dec
cmp
or
sti
mov
and
nop
arpl
cmp
pop
cmp
push
or
shrl
add
pop
or
hlt
das
imul
js
and
mov
and
sub
adc
cmpb
into
push
mov
lcall
lods
sub
iret
les
data16
shrb
ret
daa
stc
xchg
jecxz
sub
pop
push
nop
jmp
and
xchg
pop
pusha
add
jmp
dec
xchg
inc
and
stc
mov
dec
add
call
push
and
aaa
hlt
xchg
popa
movb
pop
dec
push
stos
ljmp
sub
outsb
out
stos
mull
das
jge
and
fdivl
outsl
mov
sub
adc
inc
mov
popa
cmp
pop
shll
sub
or
cmpsb
scas
sbb
or
jg
sub
das
filds
setbe
push
loopne
dec
adc
sub
push
or
out
aam
push
push
mov
je
dec
sbb
xchg
cmp
add
pop
cli
jne
test
movsl
push
mov
cmp
fildl
or
sti
jl
sti
lahf
mov
out
in
test
popa
clc
or
sbb
jle
and
daa
bound
push
daa
icebp
cmpsl
sub
jmp
cmc
and
aaa
mov
or
cli
jb
in
cli
outsl
jbe
fsubs
pop
push
out
jns
mov
add
pusha
xorb
sbb
jecxz
repnz
das
jne,pt
psubq
aaa
ds
jmp
jae
push
andb
adc
mov
filds
jmp
aam
mov
dec
push
ret
mov
mov
or
cmp
inc
sbb
cwtl
mov
and
cld
stos
mov
fsub
mov
dec
sbb
dec
ljmp
notl
xchg
scas
sub
movsl
movnti
rclb
jno
ret
jne
or
in
sbb
adc
add
mov
push
lret
lea
sub
dec
jp
cli
roll
pop
scas
cmpsl
icebp
test
jbe
adc
mov
mulb
cltd
aad
jecxz
jae
adc
in
pushl
notl
mov
mov
fldenv
or
dec
sbb
shlb
cmp
scas
inc
lock
insl
aaa
jne
inc
adc
sbb
mov
insb
fdivr
jge
in
pop
enter
out
push
scas
jmp
xorl
sub
gs
cmp
dec
out
lret
adc
pushf
sbb
cvtps2pi
daa
jge
fisttps
cmpsb
outsb
mov
mov
sti
es
in
ret
outsb
add
push
mov
icebp
add
in
jecxz
pop
lds
js
repnz
cltd
sahf
inc
insl
je
sub
dec
dec
adc
cmc
dec
jecxz
pop
mov
adc
push
push
repz
in
adc
cwtl
xor
add
pop
mov
and
mov
pop
ds
cmp
mulb
xor
add
mov
fwait
cmpsb
ljmp
dec
popf
or
and
fdivs
jbe
mov
es
cmp
adc
xor
int3
test
mov
test
fwait
mov
add
shl
arpl
js
iret
jp
dec
jnp
pusha
push
push
call
sub
mov
std
test
leave
or
mov
push
aas
iret
imul
mov
sbb
inc
icebp
mov
popa
insl
pop
test
xor
add
cltd
lea
jbe
popa
dec
cmpsb
mov
testb
cmp
jl
pop
dec
pop
movsl
test
in
sbb
mov
lea
mov
dec
ret
pop
daa
sub
movsb
sub
lcall
mov
pop
add
xor
or
mov
lcall
add
js,pn
xchg
jnp
xor
pop
mov
xchg
lods
adc
test
xor
mov
xchg
sbb
cltd
test
mov
dec
lds
xchg
out
inc
jae
jo
fs
inc
lods
inc
lahf
iret
mov
mov
push
fmulp
add
jno
xor
outsl
push
fbld
lret
xchg
imul
push
sbb
sti
ja
xor
mov
jle
fidivrs
scas
jns
add
adc
push
cltd
inc
or
stos
push
je
or
movsb
scas
jl
cmpsb
dec
xor
out
xor
or
xchg
mov
movsl
ss
jle
int3
dec
push
mov
pop
cmpsl
adc
mov
dec
push
adc
ret
adc
mov
lcall
mov
inc
jle
dec
outsl
scas
lcall
mov
dec
xchg
stos
mov
arpl
mov
xchg
rcrl
adc
xchg
push
cld
jbe
cmp
lds
imul
or
dec
into
out
cmp
or
adc
popa
pop
sub
and
sub
cmpl
cmpsl
iret
das
inc
xchg
adc
sbb
das
or
inc
mov
pop
inc
daa
push
out
xchg
adc
mov
cmp
idivb
cmp
call
pop
data16
hlt
xor
cvttps2pi
in
mov
xor
inc
jmp
mov
xchg
imul
idiv
push
adcb
fadd
add
cmp
cwtl
jg
ds
adc
das
lret
in
push
inc
and
mov
xchg
clc
or
adc
sub
daa
sbb
mov
xor
inc
stc
jmp
cmp
sbb
jl
jge
lock
or
cmp
sbb
popf
fsubr
imul
inc
repz
test
adc
lods
call
adc
fs
jne
pop
std
enter
inc
xchg
xor
or
les
add
enter
xchg
es
pop
ja
adc
dec
pop
mov
and
lea
push
repz
mov
adc
daa
mov
mov
adc
adc
shlb
push
out
cmpsl
ljmp
inc
jnp
mov
mov
cs
jge
cmp
lods
inc
ret
mov
dec
insl
inc
add
ret
bound
inc
cmpsb
repz
loope
mov
pop
cmp
mov
pop
test
popa
jo
jno
and
add
into
in
inc
mov
add
and
or
mov
and
aaa
daa
mov
out
mov
push
ja
cwtl
mov
cltd
xor
inc
mov
dec
pop
scas
xchg
xor
rorl
and
lcall
sti
cmp
mov
sub
imul
inc
push
das
int3
pop
clc
cwtl
add
test
je
pop
jl
sarl
xchg
mov
sub
insl
adc
jp
pop
and
and
adc
js
mov
in
leave
repz
daa
mov
fwait
movsb
push
jo
push
in
lret
mov
test
popa
cltd
std
in
xor
xchg
mov
push
daa
lods
jge
jl
inc
dec
cld
pusha
xor
push
adc
push
pop
mov
sbb
mov
fwait
mov
cld
mov
fidivrl
add
push
fildll
jecxz
outsl
jle
sti
or
and
add
lds
int
xchg
fs
rorl
adc
bound
loope
aas
xchg
xor
sti
jle
dec
loope
pushf
roll
push
jle
scas
aad
xlat
mov
pop
sbb
cwtl
hlt
out
push
fwait
add
ja
addr16
adc
mov
lock
popa
mov
mov
mov
inc
arpl
mov
cmpsl
xor
xor
pop
sub
mov
push
mov
push
ja
pop
inc
orl
jg
push
xor
loop
inc
mov
push
arpl
aam
push
in
std
mov
mov
nop
lock
jl
push
in
pop
in
adc
and
lret
xchg
push
mov
cmpsb
cli
cmpsb
rol
pushf
or
jp
or
negl
lea
jno
filds
ss
dec
loop
enter
push
je
cmp
jp
inc
popf
dec
push
add
push
jb
mov
xor
and
lahf
jbe
jge
dec
rclb
mov
push
enter
and
inc
jl
test
adc
cwtl
mov
pop
xchg
aad
jo
test
jnp
fwait
mov
and
push
or
iret
cmp
popf
rorl
fildl
inc
lock
pushf
out
cli
xchg
scas
cmpsl
fildll
loopne
push
rclb
fisttpll
rcll
push
mov
jecxz
and
int
mov
push
insl
loop
and
pop
aam
xchg
pop
sti
fdivrs
and
movsl
dec
fisttpll
dec
sub
mov
mov
js
jae
sub
lret
pop
add
pop
std
sub
lds
mov
jne
orb
and
mov
push
rclb
daa
adc
cmp
inc
jns
mov
shl
push
jno
mov
push
roll
and
enter
xchg
lods
adc
loop
pop
adc
mov
add
insb
fcomp
add
fs
insb
xchg
dec
xor
shrl
imul
and
xchg
xchg
cmpsl
insb
lahf
dec
ffree
dec
fistl
or
dec
or
pushf
sub
and
addr16
or
jmp
aam
cmp
addr16
adc
xchg
dec
fs
mov
or
xlat
icebp
in
xchg
push
cli
cmp
sub
aas
add
scas
push
sti
jbe
loopne
ja
or
je
mov
jmp
daa
add
lret
xlat
sub
push
rcrb
lcall
stc
jmp
inc
outsl
in
jno
xorl
incb
mov
outsl
out
sti
push
jo
sbb
mov
mov
xchg
enter
jns
xor
out
sub
add
adc
xorb
mov
int3
xchg
cmp
insl
aam
cwtl
adc
sbb
std
mov
pushf
xchg
enter
movsl
lods
dec
jg
pushf
push
push
ds
jmp
lea
popf
arpl
enter
aad
data16
mov
repnz
jbe
jl
xchg
ret
pop
and
lcall
or
push
not
sbb
add
and
sub
shll
in
push
mov
add
push
mov
pop
dec
pop
gs
and
lret
js
repz
rcr
xchg
lods
mov
adc
repz
pop
imul
outsb
jge
mov
je
daa
adcb
xor
xlat
icebp
out
pop
lea
mov
divl
bound
sbb
or
pop
lods
add
out
aam
adc
push
fisubl
mov
fidivrs
push
jb
lahf
outsb
jnp
pop
cli
push
and
jp
sahf
not
adc
ljmp
into
fisttpl
jl
rcll
pop
sbb
push
mov
aad
repnz
clc
sbb
sbb
ljmp
pusha
je
mov
std
mov
push
push
ret
dec
pop
int3
negb
nop
sbb
or
dec
mov
bound
and
dec
mov
mov
cmpsl
insl
pop
mov
mov
shll
sbb
fistpl
leave
inc
and
xchg
cmp
rolb
lds
mov
outsb
mov
or
xor
adc
xor
lahf
and
lahf
xchg
out
insl
mov
jbe
ljmp
repnz
adc
dec
push
into
mov
lods
hlt
jecxz
pop
ret
adc
push
add
mov
add
aaa
xor
cmp
pop
in
subb
jmp
inc
insb
pusha
or
rclb
fnstcw
std
xor
jmp
pop
xchg
mov
push
cmpsb
mov
jmp
mov
aad
push
fsts
insb
adc
into
xchg
ds
jle
dec
push
sub
xor
and
mov
popa
sbb
pop
lahf
xor
fsubs
push
push
add
push
fbld
push
jp
mov
leave
loope
iret
xor
pop
push
cli
mov
dec
jecxz
push
push
xchg
repz
mov
leave
lds
xchg
mov
xchg
dec
ret
fcompl
mov
outsl
test
enter
out
jne
xchg
pop
pop
inc
mov
xlat
jno
ret
add
and
inc
or
xor
sbb
xor
push
inc
lea
out
sub
ret
sbb
push
aas
out
and
lock
icebp
jle
sub
mov
fistpll
or
fs
mov
pushf
lea
add
sti
push
mov
decb
push
sar
mov
nop
push
xor
hlt
out
push
dec
leave
sbb
and
xor
out
mov
cmp
ret
lret
mov
dec
sbb
mov
pop
ds
dec
mov
pop
sbb
sbb
and
push
ret
out
out
inc
das
mov
adc
jne
or
add
cld
sahf
add
xor
fistpl
jge
push
sbb
out
jle
cmpl
aad
orl
mov
test
sbb
fstps
out
dec
inc
mov
push
xorb
dec
incl
jle
adc
lock
inc
pop
mov
int
lods
into
sub
xchg
adc
sub
test
lds
and
xor
insl
sbb
push
mov
mov
divb
fldcw
or
mov
pop
add
int3
mov
xlat
mov
je
xchg
lahf
cltd
add
dec
cmp
call
inc
pop
xor
imul
pusha
cmpb
xor
in
subb
lcall
sbb
out
and
xor
cwtl
orb
dec
shl
sbb
loope
hlt
inc
dec
sbb
les
sbb
cmp
pusha
xchg
pop
cmpsl
pushf
lahf
push
test
adc
je
decl
inc
lcall
in
mov
inc
or
mov
adc
ds
mov
pop
mov
ret
addl
lahf
es
repz
aas
lock
fwait
aaa
cld
adc
jecxz
adc
push
fisubl
xor
cmpsl
cmpsb
pop
pop
imul
xchg
fdivrs
mov
ret
outsb
xchg
popa
sbb
push
in
and
shlb
sahf
outsb
cmp
fdivrl
inc
fadds
add
push
out
dec
sub
stc
shrl
xor
cltd
ficomps
gs
sti
push
push
add
jg
pop
rclb
jb
ss
xor
addb
mov
mov
xor
pop
mov
sub
jmp
outsb
jae
cmc
mov
lods
xor
cmp
loopne
aas
sbb
mov
fsubl
scas
and
cs
cmc
aad
cwtl
stos
push
nop
add
ffreep
mov
jle
ljmp
scas
sub
jg
xorl
jb
subl
popf
sub
bound
fisttps
push
add
cwtl
add
stos
fisttpl
jno
mov
inc
call
fwait
mov
arpl
sub
mov
push
xchg
or
out
xchg
xchg
xchg
jmp
jb
adc
lcall
mov
gs
pop
cmc
scas
bound
popf
aas
push
mov
sub
out
popa
fldenv
mov
ja
xor
mov
jmp
pop
sub
jb
pop
mov
lret
inc
add
mov
faddl
andb
dec
mov
ljmp
cmp
pop
mov
hlt
sbb
inc
test
call
mov
sub
xor
addb
imul
cmovl
push
mov
push
ret
jle
aad
jl
jb
int
xchg
fsubl
sub
push
std
jg
sbb
pop
lret
inc
insl
dec
pop
push
call
frstor
mov
mov
fcomps
cmp
ja
int
test
pop
insb
mov
out
in
xchg
hlt
sahf
addr16
jg
addr16
mov
bound
dec
adc
ja
rorb
loop
inc
sbb
or
mov
popa
ljmp
hlt
jno
pop
xor
les
jmp
aam
or
lea
das
sub
in
test
in
mov
xor
das
cs
mov
fwait
movsl
xor
cmp
mov
imul
pop
movsl
mov
mov
sub
sub
shll
and
lods
shrb
lahf
das
notl
xchg
mov
nop
aaa
das
mov
xchg
lock
pop
adc
jge
stos
sti
ret
mov
jo
pop
inc
mov
rcll
sub
les
fwait
mov
inc
mov
mov
stos
pop
aas
cmpsl
mov
data16
arpl
jbe
jg
inc
idiv
rcrb
or
pop
and
push
jo
jae
imul
and
ret
mov
add
aad
sbbl
scas
mov
mov
test
sar
mov
jge
mov
mov
pushl
lock
mov
lods
lcall
loope
sahf
xchg
mov
pop
or
bound
pop
in
lods
fdivrl
rcr
dec
jo
dec
ds
popf
and
aam
cmpb
repnz
mov
iret
mov
fwait
sub
sbb
cwtl
jmp
push
and
mov
in
test
loopne
mov
dec
shll
in
sahf
popf
fdivs
adc
push
in
cmp
dec
mov
jg
xchg
sub
fmul
xchg
inc
cmp
insl
jecxz
sub
xchg
or
das
mov
push
sbb
jbe,pt
int
testl
pop
add
orl
rol
mov
mov
fwait
xor
cmpsb
imul
dec
xor
int3
clc
into
jo
mov
xor
push
cmp
cmpsl
adc
aad
fidivrl
fldcw
cmp
mov
addl
inc
sbb
xor
xchg
sbbl
bswap
sbb
cmp
dec
push
mov
test
sbb
addr16
xchg
xor
xchg
inc
or
fstpl
jb
xor
xor
imul
mov
jns
iret
dec
jmp
loopne
dec
or
jle
mov
sbb
adc
stc
push
jbe
rcll
jg
adc
push
or
inc
and
mov
stos
sti
xor
jp
and
xlat
ja
mov
push
pop
adc
sarl
xchg
lahf
pop
sub
idiv
push
mov
jmp
mov
fwait
push
jo
lfs
mov
mov
in
idivb
sbb
cmp
dec
imul
test
aam
das
repnz
lahf
xchg
test
dec
xor
fisttps
dec
xlat
clc
idivb
lret
mov
push
test
loopne
orl
sub
popa
push
mov
sub
in
xchg
sbb
test
dec
and
inc
scas
lods
mov
or
push
jo
ret
jmp
mov
ret
fwait
std
in
lds
sti
pop
cmp
out
sbb
mov
pop
push
mov
pop
mov
mov
and
lods
or
add
xchg
sub
in
jle
ficompl
push
jo
popa
hlt
shrl
dec
jl
lret
mov
scas
movsb
mov
mov
addr16
and
pop
jge
push
sbb
sbb
mov
movsl
jno
mov
lods
dec
scas
sbb
and
cmp
iret
push
in
cmpsl
pusha
adcl
fisttpll
ror
or
cmp
out
aad
cmp
faddl
sub
push
test
pop
mov
insl
popf
or
xchg
mov
jnp
out
mov
add
outsb
and
sbb
lods
test
call
or
add
icebp
push
fmull
fisubrl
push
outsb
sub
fmull
sbb
jae
mov
mov
xchg
pop
pop
jmp
movsb
pop
mov
sub
fs
lods
xchg
adc
call
enter
out
mov
test
jmp
cmc
stos
into
mov
push
stc
jne
pop
cli
and
sub
roll
xchg
jle
call
mov
sub
add
shl
pushf
ficompl
dec
out
fmuls
lret
cs
in
movb
mov
int
pop
mov
imul
xchg
clc
imul
arpl
out
jecxz
adc
rcl
or
dec
cwtl
jge
lret
xchg
mov
xchg
jmp
sub
lods
dec
dec
in
mov
cmp
insl
mov
add
jmp
add
shlb
mov
and
inc
xchg
hlt
add
leave
xor
and
add
lret
dec
test
shlb
mov
sub
dec
sub
cmc
movsb
shl
ja
outsb
cmp
movsb
outsl
in
call
jecxz
fsubp
push
sbb
lock
icebp
jbe
mov
inc
cmp
jge
mov
aad
mov
mov
out
movsl
mov
int3
imul
fwait
and
movsb
in
fildll
fldl
xchg
call
dec
cmc
push
jae
loopne
out
sub
and
sub
out
out
xchg
arpl
sbb
sub
pop
fsubrs
xchg
aad
and
jmp
repz
mov
sbb
das
jb
adc
repnz
lock
dec
mov
stos
test
push
mov
mov
cs
fcomps
fnstenv
and
or
dec
out
jmp
test
cmp
mov
mov
test
pop
iret
inc
mov
inc
xchg
xor
add
movsl
push
or
in
adc
aad
popf
sahf
lea
or
cmp
sahf
test
inc
aam
out
out
flds
mov
pop
dec
mov
loopne
mov
or
call
pop
jbe
sub
fnstcw
rcr
mov
mov
ljmp
mov
test
stos
das
and
aam
dec
loopne
cli
xchg
push
fidivl
jmp
imul
jns
bound
ss
lock
push
push
shlb
cs
inc
cltd
bswap
pop
xor
inc
ja
lahf
xor
jae
das
iret
sub
jge
mov
lds
xor
popf
in
sub
mov
mov
xor
mov
push
lods
or
mov
mov
sub
dec
idivl
mov
pop
mov
xor
push
mov
inc
mov
mov
or
adc
mov
pop
cmp
jge
sbb
jae
nop
mov
xorb
lret
adc
and
push
jl
imul
adc
and
cmc
test
insl
adc
outsb
mov
jae
jge
loop
in
sub
mov
jo
aam
sbbb
lods
sahf
adc
orl
into
push
cmpsl
fs
jl
or
fs
and
pop
mov
jae
and
mov
mov
xchg
sbbl
fstps
clc
inc
pop
and
add
dec
dec
daa
sar
ret
lahf
mov
insb
mov
or
insl
cmp
mov
div
cmp
or
mov
sbb
sbb
jl
and
repz
cmp
cmp
stos
add
jb
push
pop
adc
jno
mov
xchg
addl
xchg
mov
push
xchg
adc
shll
pushf
dec
push
into
add
test
call
and
call
pop
dec
mov
bound
jns
push
insl
ds
pop
inc
mov
and
push
andb
xchg
push
in
mov
jge
push
xor
cmp
pop
bound
mov
push
cwtl
mov
idivl
cmc
inc
mov
jno
cli
push
movsl
push
xor
mov
adc
adc
or
loopne
ja
fisttpll
pop
rolb
arpl
push
cmp
mov
mov
lods
mull
movsb
mov
bnd
push
adc
inc
and
ds
jbe
fiadds
and
or
hlt
inc
jno
xor
mov
push
lods
and
pop
inc
out
xor
fs
fisttps
int3
mov
popa
loopne
inc
cmp
lock
mov
and
inc
push
leave
mov
mov
dec
mov
jg
lods
pcmpgtd
addr16
iret
loope
xchg
dec
insb
gs
pop
popa
sar
and
movsb
outsl
jp
ljmp
aaa
cld
mov
popf
adc
outsl
scas
or
sbb
mov
or
mov
push
int3
sub
jnp
iret
or
mov
fs
mov
mov
inc
cmp
push
mov
xchg
fsubl
inc
shrb
lock
andl
or
shlb
jbe
add
xchg
or
adc
imul
popa
gs
pop
xor
inc
adc
enter
aam
adc
and
mov
push
das
mov
test
sbb
sbb
enter
mov
pushf
imul
lock
arpl
lret
inc
mov
and
loope
push
aam
mov
and
push
or
cld
cmpsb
dec
leave
imul
dec
dec
mov
push
addr16
jp
lret
cld
sbb
inc
outsb
add
jl
gs
loop,pn
inc
lods
clc
emms
pop
inc
mov
sub
arpl
pop
inc
xchg
xor
pop
xlat
fbld
adc
outsb
imul
pop
insb
push
xor
pop
aam
pop
mov
jno
add
inc
cld
sbb
daa
xor
pop
in
pop
inc
cmp
mov
movsl
fsubp
aas
mov
ret
xchg
xor
push
jmp
cmp
aam
or
add
lock
push
movb
push
icebp
inc
ret
jo
or
ds
or
iret
sti
insl
or
and
fwait
push
inc
jo
lock
push
cmp
pop
mov
std
mov
push
inc
add
mov
push
out
stos
add
cmp
cmp
jl
decl
lea
xchg
popf
inc
stos
push
enter
rcrb
jge
stos
mov
mov
popa
sbb
cmpsb
lea
addr16
inc
or
jmp
and
push
cmpsl
jmp
mov
fcmovnu
jp
jecxz
subl
cltd
adc
pushf
loope
jl
cmpsb
in
daa
jecxz
dec
loop
imul
add
mov
mov
or
int3
and
test
dec
mov
enter
xchg
lcall
dec
adc
mov
jo
jns
mov
pop
mov
xor
cli
ret
adc
cltd
popf
sbb
jno
lds
jle
shrb
mov
xor
cwtl
jbe
jecxz
push
dec
push
mov
and
stc
and
push
adc
adc
mov
fcomi
sbb
clc
cmp
vmovaps
xchg
icebp
neg
in
push
push
sub
lret
pop
shll
aad
jecxz
xchg
jno
iret
stos
fcomp
jg
mov
push
cmp
mov
mov
ds
mov
leave
sti
popf
sub
dec
dec
movsl
cs
cwtl
andb
cli
stos
mov
xor
inc
pop
iret
sub
mov
mov
std
xchg
loopne
fildl
aam
loop
loop
mov
fistpl
dec
cld
mov
jl
into
jle
fistpl
lea
xor
out
and
out
jo
outsl
push
test
rolb
fadds
addr16
add
add
stos
pop
fbld
jg
pop
sub
aad
js
mov
mov
scas
sahf
test
xorl
add
test
xchg
pop
sub
xor
push
ret
xchg
scas
pmullw
mov
gs
mov
lods
and
push
mov
addr16
into
mov
imul
dec
loopne
lods
xchg
push
or
or
adcl
jns
and
lock
xor
adc
dec
js
push
push
sti
scas
mov
or
inc
inc
push
rcrl
jnp
inc
loop
repnz
xchg
xchg
push
mov
mov
xor
lock
int3
sti
sbb
xchg
push
dec
daa
test
int3
push
xchg
std
clc
arpl
jo
mov
push
dec
test
fidivs
fimull
xchg
loopne
lea
fimull
hlt
jle
mov
lcall
and
push
push
clc
test
xchg
adc
aas
push
lods
sahf
inc
icebp
pushf
notb
in
cltd
sbb
wbinvd
out
mov
pushf
sub
add
mov
aam
push
push
nop
xor
sub
sti
test
enter
xlat
loop
movsb
shrb
sub
jle
adc
inc
lret
add
cmpsl
inc
or
xchg
pop
inc
push
leave
scas
dec
inc
bound
stc
cmpsl
inc
mov
int3
jg
into
sub
sti
jmp
ret
out
fadd
pop
lods
inc
xchg
push
jge
sar
push
aaa
lds
xchg
dec
in
mov
sub
or
aas
imul
dec
orb
sbb
int
inc
scas
nop
sub
and
fists
jge
nop
fwait
pop
fcomps
mov
mov
push
mul
movsb
pop
jecxz
jno
mov
addb
sub
shll
jbe
inc
push
inc
rolb
mov
iret
ljmp
pop
sbb
iret
mov
dec
lds
roll
das
mov
nop
or
gs
xchg
inc
sbb
jecxz
aaa
push
mov
fisubrs
ret
or
mov
lods
push
in
test
insb
and
mov
idivl
push
mov
stc
fists
stos
ja
cmp
mov
jb
push
xchg
gs
ja
data16
lods
sub
jge
daa
sar
cmc
add
roll
sub
fisubrl
or
push
or
addb
iret
mov
lret
in
mov
leave
push
dec
cmp
lcall
mov
outsb
fsubr
xor
mov
jle
mov
or
int3
fwait
adc
jmp
into
shrb
into
pop
push
xchg
xchg
outsl
fisttps
pushl
xor
sarb
lret
jl
ret
inc
xchg
xchg
xor
sarl
inc
or
ljmp
shl
arpl
mov
push
test
in
scas
jge
sbb
out
jno
ss
lcall
popa
dec
mov
xlat
fsubr
cmp
sbb
movsl
inc
movsb
dec
adc
and
and
jg
dec
push
pop
arpl
sub
repz
jo
fisttpll
insl
leave
pop
xor
fstpt
sbbb
jle
sbb
stos
pushf
fs
xchg
sub
jns
or
jp
cltd
pcmpeqb
icebp
and
xchg
jnp
xor
mov
push
jb
insb
aas
xor
pop
std
sbbb
pop
fbld
sbb
xchg
jbe
inc
enter
adc
add
xor
cmp
jno
inc
pop
popf
ret
dec
xchg
lret
aaa
iret
iret
call
and
xchg
notl
lods
xchg
sub
subb
mov
xchg
stos
int
jno
or
push
mov
insb
rorl
sbb
imul
fninit
mov
push
add
je
inc
outsb
fs
outsb
pop
lea
in
gs
inc
es
rcll
aas
daa
pop
xchg
sub
push
mov
je
aam
ljmp
and
push
aad
adc
sbbl
mov
sbb
inc
fcompl
push
dec
in
lock
cmp
sbb
nop
inc
push
pop
cmp
dec
sub
add
inc
jne
xchg
inc
clc
mov
sbb
out
xchg
addr16
or
push
mov
icebp
fiadds
sub
lahf
ds
sar
cmp
sbb
xchg
enter
aad
imul
mov
outsb
fdivrs
test
shlb
jge
push
push
xor
add
pop
daa
ror
bnd
loopne
insb
lock
adc
ja
jp
sub
jae
aam
mov
cmc
clc
push
inc
js
aas
insl
jle
popa
ud1
in
inc
and
mov
xchg
mov
xchg
mov
cmp
push
sub
test
ret
adc
les
lods
cmp
loopne
icebp
into
fisubs
sbb
cmp
gs
inc
dec
lods
out
scas
adc
rolb
pusha
mull
push
pushf
enter
inc
pop
shlb
std
je
pop
jecxz
es
out
mov
pop
dec
lret
cmpsb
ret
pop
sub
sbb
aam
mov
in
xor
shlb
jno
adc
inc
test
push
test
push
mov
cmp
out
sub
shlb
mov
addr16
pushf
cmp
pop
add
test
outsl
jp
cmpsl
cmpsl
push
and
xchg
mov
test
xor
fiaddl
mov
shlb
icebp
lret
cltd
mov
and
jo
sub
imul
imul
xor
pop
jl
popf
es
ja
jg
test
das
push
cmpsl
mov
pop
arpl
xchg
bound
mov
mov
or
and
sbb
insl
mov
sub
fsubp
jl
xlat
stos
into
jb
sbb
sbb
enter
addr16
push
lcall
fs
sbb
movntps
mov
in
add
adc
mov
sub
push
jnp
push
hlt
push
out
mov
sub
jo
lea
adc
shrb
ss
cmp
test
push
dec
lock
dec
repnz
lods
cmp
push
dec
and
push
cmpsl
popf
adc
mov
adc
sub
and
lret
pop
pop
mov
std
add
fs
xor
cmpb
daa
lods
in
daa
adc
orb
push
sub
rclb
mov
add
pop
xchg
daa
push
pusha
mov
popa
jbe
je
inc
in
data16
push
ret
dec
mov
popa
mov
movl
shll
stos
adc
icebp
popf
scas
outsl
xor
imul
mov
xchg
push
jne
shrb
inc
push
push
xor
cmp
xor
pop
dec
ljmp
adc
ljmp
xchg
adc
subb
xchg
shll
in
mov
push
sub
ljmp
lock
mov
out
gs
mov
mov
push
data16
loopne
cmp
ja
test
imulb
pop
pop
cmc
shrb
and
xchg
jmp
jb
sbb
mov
sbb
mov
ja
ds
in
mov
jno
mov
sahf
dec
xchg
daa
sbb
movsb
ret
test
les
bound
dec
jg
sbb
in
test
adc
int3
sbb
pop
adc
ret
inc
push
adc
or
jb
mov
mulb
lret
jne
popa
data16
jno
cmpsb
cmp
ret
pop
cmc
and
xchg
cmp
cmp
xor
inc
iret
pop
repz
out
dec
inc
int3
sbb
add
cmp
fdivrl
cltd
add
xlat
mov
dec
pop
dec
sub
imul
in
xchg
pop
out
jp
cld
sbb
subb
xor
xor
xchg
loopne
sbbb
mov
mov
inc
pop
scas
jecxz
fdivrs
add
in
cmc
xor
test
xchg
stos
popf
mov
loop
sub
notl
add
push
push
push
addl
and
sub
hlt
insb
add
xorb
jae
inc
or
jae
into
pop
jnp
sub
cmp
push
mov
fistl
mov
xlat
xchg
lock
xchg
add
cmp
sbb
push
arpl
push
inc
mov
inc
rorb
and
loopne
adc
cmc
mov
cmp
dec
xor
ret
or
das
mov
xchg
out
pop
mov
mov
sbb
mov
repz
rcl
dec
out
cld
int3
les
xchg
fst
add
dec
mov
icebp
pusha
xorl
mov
fisubl
sbbl
xor
cwtl
dec
sbb
dec
outsl
test
or
test
cld
pop
call
stc
addr16
push
les
lods
pop
push
adc
out
loope
jl
das
decl
lods
dec
es
call
out
loope
inc
pop
ds
test
sbb
xorl
mov
cs
lods
xor
inc
ja
sbb
dec
or
or
cmc
scas
mov
jl
loop
ret
js
fistpll
cld
or
mov
sub
inc
sbb
mov
adc
xlat
add
push
ja
and
mov
loop
cmp
pop
jg
sub
jae
je
lock
push
adc
cwtl
imul
jge
cmp
std
sbb
mov
jae
mov
mov
dec
sbb
loop
jne
jl
or
xor
fwait
push
loope
gs
mov
mov
inc
pop
sub
in
push
fbld
push
push
dec
dec
rcrl
divl
or
into
fnstenv
push
sub
cmp
adc
stos
call
outsb
mov
mov
jne
push
aaa
mov
outsb
and
inc
insb
movsb
push
cmp
inc
lret
push
mov
loopne
sbb
out
inc
hlt
pop
dec
mov
scas
cmc
idivb
mov
inc
ss
cs
lods
iret
inc
sbb
jg
imul
and
nop
pusha
adcb
call
or
aas
sub
ljmp
mov
leave
xchg
mov
add
jmp
sbb
inc
mov
or
and
xchg
fcmovu
mov
and
push
mov
sub
movsl
xchg
sbb
push
je
push
mov
loop
in
mov
push
or
fisubrl
xchg
push
mov
jnp
pusha
adc
sbb
lret
jmp
fiaddl
jb
cltd
dec
popf
push
ret
jbe
cmc
add
daa
xor
dec
pop
and
mov
fs
cmp
add
mov
dec
mov
mov
jnp
mov
lret
addb
add
fildl
add
mov
xchg
sbb
lcall
nop
shr
jp
xor
cli
inc
ret
push
cmp
out
sub
cmpsl
je
scas
shlb
cmc
andl
les
cmp
mov
xchg
push
sub
imulb
incl
push
fidivl
adc
xchg
insb
test
pop
icebp
fsubl
imul
and
dec
ret
jecxz
fwait
cmc
xor
jno
cmpsb
xchg
add
das
pop
sarl
imul
dec
popa
xchg
mov
loope
mov
loope
imul
rcll
cld
jmp
adc
adc
mov
fwait
sahf
and
mov
xchg
int
xchg
pushf
jbe
mov
lahf
pop
cmp
ss
add
sti
mov
pop
mov
loope
imul
add
add
aaa
jb
pop
dec
mov
stc
pop
xchg
in
sahf
adc
fstp
sub
adc
mov
jp
and
ja
std
pop
mov
jecxz
es
cmc
cli
arpl
ret
pop
pop
mov
aam
sbb
xchg
rcrb
mov
scas
fs
lret
and
mov
stos
mov
pop
test
shrb
gs
stos
sarb
and
insb
adc
stc
lock
pop
push
lcall
inc
or
ficompl
dec
test
or
dec
cs
fsts
outsl
jmp
clc
stc
and
sub
fbstp
cmp
in
jge
enter
pusha
test
cmc
adc
sbb
call
clc
add
jo
jne
mov
mov
shrb
cvtps2pi
hlt
js
das
add
mov
sbb
sti
bound
jle
sbbl
add
fs
jnp
xor
int
pop
pusha
das
repnz
adc
js
sub
cld
dec
or
xor
daa
cld
test
insl
xor
mov
test
jns
scas
xor
andb
movsl
adc
mov
insb
into
inc
std
push
or
and
rcrl
mov
pop
inc
push
cwtl
icebp
orl
sarl
cmpsl
xchg
add
nop
and
out
mov
sbb
cmp
xchg
cmpsl
shrl
jg
repz
stos
xor
pop
movsl
push
add
mov
sarl
adc
fmuls
cmp
std
int3
bound
fnstsw
push
hlt
and
cmp
xor
xor
mov
inc
into
imul
xchg
sub
fimuls
cmp
mov
and
outsl
pop
nop
ljmp
pop
pop
add
stos
clc
add
push
dec
add
xlat
fistl
adc
mov
xor
and
xor
jne
js
sbb
xor
addr16
cwtl
int
sbb
mov
mull
push
or
cli
xchg
mov
pushf
add
pop
leave
test
das
cld
aad
mov
pushf
lock
add
jno
insb
imul
scas
nop
or
mov
sar
ret
push
adc
aad
and
adc
in
shlb
sahf
xchg
push
xchg
pop
add
loop
out
hlt
mov
mov
std
jecxz
dec
jecxz
fsts
scas
sbb
push
data16
mov
std
pushf
mov
movsb
inc
lret
addl
negb
mov
sub
xor
pop
cld
shll
in
rorb
cli
and
imul
imul
ret
mov
fwait
loopne
movsl
and
jnp
or
js
pusha
mov
inc
scas
or
cmpsb
mov
insb
scas
xchg
ret
loopne
test
fwait
mov
in
xor
adc
ds
xor
lahf
addb
aas
orb
divb
ljmp
shll
xchg
mov
mov
es
jmp
mov
inc
pop
add
xchg
inc
mov
mov
inc
orl
lods
not
pusha
jno
out
push
xor
jmp
add
mov
mov
sarb
push
push
inc
out
rorl
cmp
rcr
or
cmp
mov
push
pop
mov
loope
mov
add
sahf
mov
xor
inc
pusha
imul
xor
mov
mov
sbb
pop
xor
insl
or
lock
xchg
adc
popf
les
mov
mov
push
sbb
lods
cli
jge
push
pop
dec
add
inc
outsl
sbb
gs
pop
aam
add
push
jmp
test
push
int3
std
jmp
stos
ds
int
testl
arpl
dec
int
rcr
incl
mov
mov
repz
popf
mov
xor
movsb
and
into
pop
adc
inc
ja
iret
push
cmp
jecxz
sbb
insb
add
push
mov
cmc
xor
xor
mov
stos
fadds
cmp
in
lea
jbe
fisubrl
ror
jp
insb
add
js
lods
mov
push
fidivs
sahf
adc
aas
lea
dec
lock
clc
mov
mov
test
add
jle
mov
jp
pop
inc
pop
iret
test
and
dec
jmp
icebp
cmp
mov
add
das
mov
fwait
adc
call
and
mov
sbb
xor
shrl
mov
ret
lcall
test
mov
aad
cmpsb
ds
fisttpll
cwtl
and
test
in
jo
inc
clc
jecxz
loopne
repz
lea
xchg
outsl
or
ljmp
pop
mov
pop
add
lahf
arpl
cli
pop
mov
cli
pop
inc
sti
fs
cmp
or
sbb
cmpsb
pop
lock
lock
andb
xor
scas
add
loope
inc
jl
pop
pop
daa
out
test
mov
pop
icebp
mov
mov
sub
and
std
dec
sahf
ret
mov
les
lret
sahf
mov
jbe
push
test
mov
mov
scas
cltd
or
or
ljmp
dec
sub
daa
ret
je
adc
dec
ret
adc
or
jbe
jb
add
outsl
dec
lret
fcmovb
xor
add
and
pop
sub
pop
xchg
popa
cmp
or
popf
fs
jp
movsl
xor
xchg
or
jg
sub
sub
sub
fstpt
mov
inc
mov
mov
fnsave
cltd
mov
in
adc
and
pop
je
jp
mov
div
mov
aaa
shrl
xchg
iret
ja
std
jne
push
arpl
repnz
jg
aaa
mov
push
les
xor
test
xor
fbld
inc
mov
outsl
inc
pop
push
add
lahf
out
lock
pop
mov
outsl
mov
clc
inc
dec
icebp
inc
inc
cltd
or
pop
mov
fnstenv
inc
push
cmpsl
inc
arpl
stc
inc
xchg
add
mov
repnz
pop
xlat
xchg
pop
dec
or
inc
push
jae
push
mov
lret
aad
fwait
mov
push
ret
mov
es
pop
arpl
pushw
push
mov
nop
sub
outsb
or
js
add
mov
or
or
fnstcw
sbb
mov
xchg
outsb
xor
jp
mov
enter
test
and
adc
enter
dec
dec
add
xor
jnp
fucom
push
push
xchg
movsb
repnz
nopl
pop
jle
sbb
xor
nop
mov
fsubrp
push
addr16
fdiv
addl
outsb
sbb
dec
mov
or
out
call
cltd
xchg
mov
or
sbb
mov
sub
or
xchg
in
sub
xchg
test
lcall
push
fmull
cmp
sbb
and
xchg
sbb
pop
sbbl
arpl
rorb
cmpsb
push
mov
xchg
ss
and
inc
in
adc
ja
movsl
and
fwait
sub
push
mov
mov
pop
testb
in
cmp
js
sub
mov
inc
mov
stc
pop
aaa
xchg
or
cld
nop
inc
out
cmp
inc
fidivrs
dec
jne
jg
xor
imul
mov
mov
xor
sub
add
push
or
pop
sbb
cmpsl
je
fdivl
cmp
repnz
mov
push
mov
jmp
mov
daa
decl
aam
pop
pop
in
fadds
pop
orb
out
js
push
sub
sub
popf
push
fwait
mov
sub
or
sahf
pop
dec
mov
pop
fdivl
out
jecxz
or
cmp
or
adc
aaa
dec
xor
push
bound
rorb
mov
sub
aad
jg
shlw
sbb
dec
lret
mov
pop
repz
add
dec
pop
int
ficoms
enter
xor
xchg
ret
pop
mov
add
add
les
pop
pop
fcomps
xlat
mov
mov
jmp
jo
in
in
ret
cmpl
pushf
fmull
xchg
enter
mov
or
and
rorl
pop
sahf
shl
dec
xor
pop
and
insl
fistl
pop
aas
jle
adc
adc
test
daa
and
les
xchg
dec
je
fisubl
xlat
jo
mov
out
adc
popa
jl
mov
lahf
fiaddl
ljmp
xorb
and
jge
adc
sbb
aas
push
in
iret
mov
ret
mov
jo
sbb
shrl
xor
mov
sti
dec
push
insl
arpl
jp
inc
js
mov
outsl
or
mov
dec
cmp
stc
testb
ret
jp
cld
pop
push
adc
adc
mov
cmp
push
pop
mov
imul
out
fisubl
setae
ret
add
xchg
adc
xor
lock
mov
inc
ret
dec
pop
lods
xchg
jl
pop
xchg
test
mov
mov
fucom
xor
sbb
repz
mov
push
mov
ret
dec
xchg
mov
fimuls
loop
mov
cmp
push
sbb
scas
push
rorb
outsl
add
xor
stos
adc
imul
xor
fst
and
add
dec
imul
cmp
xor
add
or
pop
leave
cmpsl
push
js
push
hlt
mov
loopne
test
aaa
imul
cmp
imul
mov
mov
sbb
test
out
or
mov
mov
inc
fisttpll
insb
fs
lret
loope
jo
or
icebp
es
popf
test
ret
add
sub
in
cmp
ror
pop
cld
jno
cmp
popl
fadds
xchg
rorb
jmp
mov
xchg
popf
sub
sbb
push
adc
popf
je
stc
dec
mov
push
pop
pop
sahf
mov
jo
ret
dec
test
mov
out
outsb
push
inc
cmc
lret
adc
and
push
xlat
hlt
or
push
fldcw
int3
out
popa
jle
scas
neg
pop
div
cmc
sub
aad
xchg
lock
lock
scas
cmp
lds
stos
push
cs
ret
mov
xor
mov
arpl
xlat
aaa
outsb
dec
push
mov
xor
fadds
insb
fndisi(8087
outsl
ds
or
bound
inc
lret
int3
sub
jle
or
stos
xor
xor
sub
cwtl
push
dec
rcl
movsb
test
push
popa
invd
adc
push
ss
cli
pop
xchg
sub
sub
pop
jmp
and
jae
pop
or
lock
sub
push
xor
lds
pop
adc
cmp
pop
das
bound
xchg
dec
mov
xchg
or
popa
and
fsubs
jb
inc
repnz
stos
fsubs
xor
mov
sbb
xchg
jno,pn
add
mov
aas
clc
pop
scas
mov
mov
lock
mov
pushf
jp
out
or
xchg
outsl
cmpsl
stos
or
sbb
jmp
cmpsl
cmpsb
aas
les
xlat
les
hlt
stc
mov
adc
rcrl
sbb
sbb
mov
cmp
gs
cli
movsl
into
jge
or
cmp
push
inc
loop
addr16
daa
mov
inc
mov
test
call
mov
and
and
in
movsb
in
inc
adc
fcomip
dec
xchg
out
jge
fidivl
jp
jns
push
cmp
int3
pop
sub
cs
sub
lahf
sbb
mov
sbb
or
ret
xchg
cld
mov
fcompl
stc
adc
lret
stc
cmc
xchg
pop
mov
movsb
jo
movsl
lock
sbb
mov
mov
sbb
lods
das
arpl
xlat
jo
sub
test
mov
rcrb
imul
mov
push
int3
test
sub
push
mov
mov
add
sub
xchg
fsubrs
jl
sub
jg
enter
dec
lret
loop
das
and
scas
sub
and
cmp
pop
int3
lea
sbb
gs
mov
xchg
mov
lret
enter
inc
push
fwait
insl
dec
call
cld
je
or
xchg
xor
scas
ret
out
or
xor
sub
roll
mov
inc
int
sub
mov
dec
out
ret
jo
in
aaa
mov
andps
jnp
int3
outsb
jle
and
mov
arpl
int
push
rcr
insl
lret
stos
lods
out
mov
int
xchg
outsl
and
sub
push
inc
addr16
mov
popa
xchg
testb
pop
sar
cmp
push
and
push
lahf
out
or
ficomps
mov
popa
test
in
imul
fmull
in
adc
dec
imul
or
jle
outsb
push
add
mov
push
rcrb
repz
inc
in
or
mov
leave
xchg
jl
jb
jb
adc
loop
loopne
roll
cmp
lods
xchg
in
sub
jge
out
push
call
push
insl
rcll
test
pusha
push
mov
adc
xor
js
xlat
mov
aas
jp
insb
sub
sbb
mov
or
mov
jb
ljmp
mov
cmp
rcll
pop
fadds
stos
push
es
repz
and
adc
pop
fdivr
call
jns
jne
loop
cmc
push
ret
xor
mov
popa
sbb
mov
adc
fists
fistl
int
fnstsw
hlt
andb
ljmp
cmp
mov
loopne
xor
insb
fcomps
jbe
movsl
gs
inc
jno
push
bound
add
fldt
dec
incl
pop
xchg
loop
scas
shl
push
xchg
push
dec
mov
and
push
cmp
fmulp
lret
pop
outsb
ret
test
pusha
push
sbb
xor
jecxz
lods
mov
xor
jge
sub
cltd
cmp
mov
jae
and
ds
shlb
xchg
loopne
popa
add
jnp
mov
jp
add
xor
mov
es
mul
divb
jmp
into
popf
and
popf
mov
xchg
sbb
inc
adc
movsl
inc
push
dec
cld
xor
push
xchg
out
mov
jns
pushf
adc
scas
push
sahf
scas
cmp
mov
jge
imull
or
pop
mov
les
cltd
stos
pop
movsb
mov
sbb
shrw
std
out
jecxz
add
push
aaa
pop
jle
pop
fyl2x
xlat
jl
push
fildll
sub
pop
mov
adc
mov
out
std
fisubl
sbb
xor
inc
mov
mov
scas
jno
sub
scas
movsl
leave
scas
lea
test
dec
dec
in
sahf
pushf
pusha
out
pop
fsts
push
xor
jmp
sub
pmaddwd
cmp
data16
std
cmp
mov
movsl
jnp
mov
and
fidivs
and
ljmp
movsb
aad
mov
out
out
xor
fdivs
lods
ja
jp
mov
loopne
in
test
cmp
mov
adc
fs
mov
sub
divb
fists
mov
lds
dec
jb
sub
lds
aaa
dec
xor
mov
and
data16
imull
out
daa
mov
cmp
cmp
dec
jmp
mov
or
jp
ficoms
outsb
mov
fcoml
cs
mov
inc
outsb
stos
into
repnz
sahf
push
pushf
imul
dec
cmp
lods
sbbl
int
cmc
arpl
sub
fs
enter
pop
scas
shrb
popa
andl
cld
dec
cmp
es
fcmovnb
dec
sub
sub
cmp
cmp
outsb
sub
outsb
sub
push
pop
inc
xor
sub
or
into
call
scas
xor
test
hlt
fucomi
mov
repnz
shlb
lds
mov
mov
xchg
push
push
lock
mov
aam
jb
pop
repz
in
add
mov
jae
insl
fisubrl
dec
xor
mov
jge
mov
xlat
pop
inc
imul
clc
movsl
push
fistps
lods
mov
inc
pop
mov
cmp
adc
jg
aaa
popl
mov
or
dec
add
ret
pop
in
ja
iret
mov
mov
push
xchg
adc
lods
scas
jnp
and
cmp
int3
add
xor
jge
cmp
push
adc
ret
js
cmp
in
mov
cmpsl
ret
jns
mov
js
cmp
lock
dec
fwait
inc
push
mov
pusha
mov
sbb
push
enter
sbb
cmpsl
pop
fwait
insb
js
push
xor
repz
hlt
push
cli
fcomip
xchg
jnp
mov
xchg
add
fpatan
xchg
mov
aaa
ljmp
stc
arpl
mov
mov
in
push
xchg
sbb
fs
pop
mov
out
shrl
out
les
daa
inc
lahf
push
inc
int3
nop
or
jge
out
mov
cmpsb
cltd
ja
jo
icebp
out
xor
or
es
add
subl
dec
test
rclb
into
mov
or
and
dec
jp
phaddsw
stos
pop
mov
xchg
adc
mov
inc
or
int3
pop
jle
cli
fstpt
inc
sbbl
mov
inc
mov
xchg
and
jl
pop
pop
dec
mov
mov
hlt
out
test
filds
out
icebp
pop
movsl
cwtl
sub
and
inc
gs
loopne
insb
cld
aad
pop
fbstp
inc
push
push
push
cltd
int
push
fists
sub
loopne
imul
nop
inc
fwait
cmp
scas
fdivrl
lret
mov
into
loope
in
xchg
mov
loop
cmpsl
lahf
inc
je
jb
pop
inc
mov
imul
push
adc
xchg
xchg
push
movsb
and
mov
pop
or
out
fildll
and
loop
cld
adc
pop
push
jno
rcll
inc
out
aas
cmp
cld
jg
ja
sti
test
mov
add
in
inc
bound
shl
insb
clc
decl
cmp
cmp
push
pop
rcrb
call
add
push
aas
fucomip
je
cmp
mov
mov
push
dec
loope
push
hlt
push
es
out
jnp
bound
xchg
cld
jne
out
pop
lds
push
inc
add
cltd
pop
push
rolb
ret
mov
jbe
jl
pop
movsl
mov
out
push
repnz
sbbl
lds
sbbl
mov
xorl
xor
es
cltd
mov
in
cmp
inc
popa
cli
imul
sbb
fisubl
lret
mov
mov
setns
adc
sub
fsubr
incl
lcall
dec
hlt
insl
mov
out
sbb
repnz
mov
imul
cmpb
sub
jmp
rcrl
dec
xor
das
nopl
mov
sarb
lret
out
sbb
inc
jecxz
cmp
add
push
stos
loopne
jo
insb
mov
adc
mov
shlb
xchg
mov
out
pusha
pop
dec
pop
jge
mov
iret
ds
div
jb
and
paddsw
popa
cld
dec
or
xchg
bound
adc
fsubl
sbb
popa
sub
aas
ss
push
aas
dec
sarl
adc
js
aam
rorb
push
cmpsl
insl
xchg
int
jns
jae
adc
jo
bnd
cmp
leave
push
stos
push
pop
and
fwait
xlat
imul
push
je
jo
sub
data16
loop
hlt
test
rorl
or
loop
or
mov
push
xchg
out
jbe
jecxz
xchg
pop
mov
scas
rcl
sub
std
and
imul
adc
pushl
xor
addb
mov
inc
bound
xchg
inc
movsb
push
mov
pusha
lcall
push
loop
mov
shlb
mov
clc
jno
add
pop
enter
cmpsb
mov
push
cmp
sti
pop
test
lods
xchg
push
add
adc
test
jo
pusha
sub
dec
rcrb
fcoml
int
test
testb
mov
push
dec
cli
push
push
jg
into
or
push
cmpsl
cmp
add
jle
inc
jb
push
inc
push
inc
daa
or
mov
and
xchg
mov
pushf
cmpsb
in
mov
sbb
iret
cmp
iret
jb
lock
dec
add
fs
push
aad
iret
mov
mov
out
js
xlat
fs
dec
daa
xlat
add
lods
int
fisttpll
xor
sbb
add
mov
mov
cmp
outsl
adc
jns,pn
cmpsl
cmpb
adc
xlat
test
add
and
daa
popa
sbb
shll
mov
xor
mov
push
push
mov
inc
cli
cmp
int3
mov
mov
jg
mov
outsl
push
imul
lcall
sub
jle
ret
or
cmp
imul
mov
out
mov
xor
hlt
add
leave
mov
lahf
add
in
cld
sbb
test
mov
sbb
stos
outsb
fsts
push
xor
xchg
shlb
adc
roll
xchg
lods
sub
jp
leave
and
out
loope
stc
mov
iret
mov
shr
mov
and
cli
iret
pushf
daa
repnz
addb
cmp
fidivrs
fadds
popf
and
sbb
ds
adc
dec
ds
cs
and
sub
pop
or
aam
push
stc
ficompl
stos
sbb
in
add
push
sub
popf
xchg
cwtl
mov
mov
push
jp
stos
arpl
jbe
out
pop
iret
push
mov
fldt
cmp
or
out
sub
ret
or
jne,pn
loop
outsb
repz
shll
imul
stc
ljmp
dec
add
push
mov
mov
sub
fsubl
sub
repz
les
sbb
ja
stc
push
or
jne
push
jp
ret
pop
aad
cltd
dec
sahf
lea
dec
mov
mov
or
test
out
mov
call
mov
xchg
idiv
insl
and
cmp
out
jno
test
in
negl
bound
xor
pop
sbb
ficoml
mov
dec
fucomp
dec
dec
aam
inc
test
cmp
xchg
sbb
out
sbb
pop
cli
enter
jbe
fwait
icebp
xor
jo
mov
popa
in
outsw
fs
push
lcall
mov
fwait
push
fnstcw
mov
mov
inc
pop
inc
cmp
sbb
and
fwait
das
ljmp
lea
mov
sub
gs
pop
pop
sub
cld
data16
scas
int3
pop
orb
pop
fmull
addr16
add
adc
and
and
lret
add
sub
xchg
shrl
cwtl
jl
das
push
add
mov
imul
sbb
sub
mov
es
dec
push
sbb
mov
xor
mov
int
jge
sub
mov
popf
mov
lock
dec
divl
pop
std
xor
jp
subb
dec
sbb
in
cmp
enter
mov
stos
imul
adc
movsb
mov
xor
stos
faddl
cmp
xchg
xlat
jb
cmp
cmp
lahf
mov
adc
ficoml
call
mov
orb
insl
mov
mov
ret
cli
je
add
push
xadd
jge
mov
mov
jle
and
xchg
pop
push
jmp
jmp
js
fwait
mov
loopne
and
aas
sbb
inc
jle
cltd
in
push
push
push
push
repz
push
sbb
xor
andb
int3
mov
int
cmpsl
int3
pop
mov
ds
fiaddl
mov
aam
inc
mov
or
push
ja
xor
inc
cltd
sub
pop
push
fcom
jnp
xchg
mov
jo
mov
mov
leave
pop
adc
xor
push
cmp
ror
lret
ret
mov
lcall
mov
sbb
xor
or
push
ljmp
in
push
sbb
jle
push
mov
inc
xchg
sub
outsb
leave
repnz
xlat
sub
or
enter
loope
lahf
faddl
repz
arpl
in
imul
fisubl
outsl
cltd
adc
push
sub
addr16
xchg
push
loop
jnp
xchg
adc
push
enter
movsb
and
jp
js,pn
mov
lret
inc
call
dec
sbb
inc
repnz
ret
ficompl
adc
insb
in
stos
xorl
jno
ss
iret
in
inc
xor
imul
inc
movsl
scas
or
shrb
frstor
lods
aam
push
xor
aam
movsl
sub
movsl
inc
mov
test
ds
sbb
inc
repz
shrl
repnz
cli
push
enter
xor
in
inc
dec
mov
bound
xchg
ja
bound
imul
ret
or
movsb
mov
mov
push
idivl
xor
jecxz
lcall
push
les
shlb
add
mov
xchg
leave
mov
pop
cmp
movsl
pop
xchg
mov
pop
and
out
adc
inc
ror
sti
jnp
jns
mov
push
dec
adc
cld
pop
clc
xchg
das
mov
test
ret
xor
push
xchg
pop
imul
pop
test
jle
mov
leave
inc
sub
or
dec
and
jmp
mov
lret
repnz
call
test
mov
movsb
dec
ja
pop
movsb
xor
mov
lds
mov
into
inc
push
es
lret
stos
ret
push
scas
rclb
jo
sub
addr16
adc
pop
roll
xor
cwtl
push
lcall
sahf
mov
jns
clc
xchg
scas
lahf
in
out
js
fnstcw
stc
insb
mov
cmp
pop
decl
or
and
lret
adc
test
stos
xor
xor
push
out
xor
mov
bound
push
pop
xchg
call
in
fnstcw
hlt
lcall
dec
movsl
jbe
dec
int
pop
or
xor
and
cltd
sub
mov
cwtl
les
inc
popa
ljmp
aam
fcmovnu
pusha
lret
pusha
sub
clc
and
or
pop
push
inc
cmp
mov
fsub
cmpsb
pop
sbbl
int3
into
gs
mov
outsl
scas
stos
test
data16
mov
mov
leave
rcl
mov
rcrb
dec
std
add
ret
les
adc
adc
into
fidivrs
enter
dec
jae
lods
jbe
rorb
ds
sbb
insb
sbb
into
dec
nop
orl
pop
sarb
inc
mov
sbbb
adc
pop
fstp
popl
cmp
cmp
jmp
adc
ret
sbb
or
push
push
in
mov
sbb
sub
add
out
adc
xchg
push
enter
xor
fmull
mov
push
callw
and
ret
fwait
sbb
push
jb
push
ja
sub
adc
sahf
sbb
fmuls
mov
jbe
pop
xchg
mov
shlb
xlat
popf
and
jnp
psubsb
adc
arpl
das
int
not
mov
mov
fidivl
insb
outsb
xor
cmp
mov
xor
adc
je
loop
aas
scas
inc
mul
pop
out
push
add
adc
insl
xor
call
and
enter
xor
add
inc
mov
adc
cli
mov
pop
test
or
xchg
testb
push
mov
mov
lods
ss
sbb
pop
clc
xchg
dec
push
pop
inc
cmp
rorl
mov
mov
add
mov
inc
movsl
xchg
sbb
ret
and
adc
cmp
movsl
xor
rcrb
ret
iret
lahf
xchg
jne
mov
std
or
dec
cmpsl
imul
or
pop
insl
mov
test
aas
mov
mov
pop
aaa
push
adc
jmp
sub
icebp
pop
hlt
sbb
mov
adc
jle
cmp
push
xchg
add
cmpsw
mov
aam
sbb
out
mov
mov
rolb
mov
xchg
loop
fists
dec
pusha
in
jo
scas
fsubl
insb
fldt
cmc
or
pop
call
push
aam
je
mov
lahf
scas
and
lock
cmp
sti
mov
push
and
pop
scas
xchg
rcrl
shll
test
adc
fadds
enter
rcr
mov
mov
movsl
adc
pop
add
xor
iret
push
add
sbb
data16
dec
repnz
outsl
xchg
mov
inc
pop
lea
mov
jge
cmpsb
push
fwait
mov
cwtl
mov
pop
mov
jno
rcr
pusha
cwtl
sub
ret
lods
xchg
outsb
push
cmpsb
sbb
sub
pop
mov
mov
fmull
gs
cmp
lret
push
xor
int3
imull
cli
loop,pn
add
sbb
lock
pop
out
push
sbbl
xchg
xchg
or
rorb
popf
adc
xchg
jo
fcompl
into
sti
and
data16
push
ss
leave
mov
cmp
mov
jbe
cld
pop
or
xchg
aaa
into
mov
je
divl
aas
add
in
rcr
std
jp
xor
addb
adc
dec
mov
incb
jg
adc
into
repnz
repnz
enter
push
inc
mov
add
jne
xor
ss
xor
ss
int
push
leave
fiadds
jecxz
pop
inc
ja
mov
cmp
pop
cs
and
pop
inc
outsl
cmp
push
mov
mulb
repz
bound
mov
xor
test
jne
ficomps
out
es
shll
or
xor
jp
es
divb
mov
lret
adc
test
mov
jbe
pop
repz
test
pop
out
data16
arpl
shlb
cs
sub
pop
hlt
mov
test
cwtl
sti
sbb
lods
dec
push
mov
test
mov
cmc
inc
shrb
cwtl
sbb
lcall
or
dec
jle
inc
insl
mov
inc
fmuls
pop
adc
adc
ror
mov
bound
subl
repnz
ret
mov
negl
in
je
jle
add
fidivl
inc
dec
mov
loop
mov
add
sbb
pop
enter
xor
push
xlat
push
stos
out
push
inc
inc
add
mov
dec
pop
mov
sbb
push
ret
out
cmp
inc
fdivr
loop
inc
cld
xchg
lret
aam
addr16
sub
jecxz
js
push
inc
cli
fstpl
lahf
xchg
jb
rcl
enter
loope
jg
fxch
mov
movsb
push
jmp
cmpl
inc
sti
xor
je
sub
mov
repz
jne
adc
imul
sub
or
in
dec
cld
lods
push
movsb
addb
push
pushf
sub
mov
dec
dec
repnz
daa
inc
insl
cmp
ret
dec
cmp
aam
aaa
repz
icebp
xor
mov
xor
add
ret
fadd
ret
mov
rcll
call
cli
adc
addr16
jns
sti
int
loop
mov
aam
arpl
in
sti
rcr
push
push
xchg
inc
jp
or
mov
gs
sbb
enter
pop
cmpsb
mov
leave
stos
sbb
stos
cmpsl
call
mov
sbb
movswl
cwtl
dec
loope
push
push
mov
mov
mov
pop
or
jg
lahf
xor
das
je
lret
lock
loope
jnp
test
mov
in
mov
inc
fsubl
sbb
push
pop
xchg
aaa
adc
or
push
pop
cld
xchg
inc
sub
and
inc
sub
in
fs
push
mov
sub
lahf
mov
xchg
pop
test
xchg
in
sub
dec
pop
xchg
lock
and
mov
jle
inc
shrl
or
sbb
mov
pop
or
push
cmp
out
mov
inc
push
leave
push
shlb
inc
push
lock
stos
sti
jg
movsl
mov
rcll
leave
sub
aad
pop
jmp
push
mov
imul
rcll
int3
inc
mov
push
lret
sti
jg
inc
fadds
fistpll
xchg
test
cmp
jne
lods
sbb
mov
jb
into
in
sbb
xor
repnz
fst
jle
jnp
loope
adc
into
push
xchg
clc
out
push
iret
rorb
repz
out
xor
out
push
adc
fimuls
mov
test
xchg
loop
pop
jge
popa
sub
js
icebp
dec
inc
aas
sbb
push
mov
cwtl
sub
sbb
and
inc
inc
push
and
rcrb
jmp
scas
dec
pop
mov
call
iret
int
pop
adc
mov
or
stos
outsl
clc
bnd
push
sub
push
mov
imul
dec
xchg
jle
jb
push
fisubl
popa
jnp
out
leave
add
scas
sbb
mov
fnsave
jo
sahf
mov
xor
adc
push
lds
lock
sbb
cmp
arpl
adc
sub
into
xchg
imulb
in
sub
sub
mov
imul
sbb
sbb
push
pop
repnz
lds
jmp
jbe
int
hlt
jnp
fwait
gs
mov
or
or
adc
jbe
ja
movsw
pop
test
lods
mov
cmp
mov
mov
ljmp
push
sbb
fdivr
iret
stc
mov
and
outsb
pop
jl
dec
cmp
cli
aas
jo
jecxz
adc
int3
scas
push
fstpt
cmp
pop
cmp
addl
ret
push
cmp
shll
dec
push
jbe
add
dec
loop
dec
stos
mov
incb
lahf
mov
inc
fsts
fabs
push
lret
int
sbb
jp
xor
aas
jle
push
lcall
pop
in
mov
aas
mov
push
mov
and
cmp
add
cmp
cmp
out
out
bound
xchg
sub
nop
xchg
jbe
pop
push
or
iret
lret
arpl
pop
cld
xor
pop
mov
xchg
xchg
mov
sub
jnp
sub
lods
add
ja
pop
fbstp
insb
pop
setle
call
repz
shr
add
push
test
testl
sahf
jmp
in
push
in
add
jle
mov
xor
je
adc
sub
pop
iret
mov
nop
pop
adc
xchg
push
lret
insb
jecxz
xchg
ds
dec
sbbl
sbb
repnz
add
sahf
cmp
pop
sub
xchg
mov
sub
and
les
jnp
dec
loope
shlb
sub
sbb
xchg
addb
ret
cmpl
dec
rol
push
inc
add
lea
js
rcrl
cli
mov
push
inc
sbb
or
jns
and
adc
inc
mov
jmp
cmp
dec
xchg
notl
je
into
sub
sbb
xchg
dec
bound
imul
mov
adc
adc
outsl
jg
jns
enter
push
jl
xor
mov
mov
sbb
sbb
sbb
popf
and
clc
orl
loope
cmp
pop
out
sarb
sti
xor
mov
add
xlat
sbb
hlt
add
push
repnz
cmp
and
sbb
fcmovu
cld
dec
sti
inc
addl
add
stos
in
dec
imul
ss
lret
mov
mov
and
fs
adc
jne
cmp
lret
in
push
popf
xchg
sub
push
repnz
mov
jg
icebp
or
inc
mov
jmp
ja
fdivs
pop
dec
mov
cmp
out
and
and
mov
inc
mov
inc
ljmp
test
lock
add
push
push
adc
add
inc
pusha
jmp
into
lods
cmp
loope
mov
fimull
scas
mov
mov
icebp
push
lods
into
data16
outsb
dec
enter
ss
lret
push
imul
test
or
stos
jns
rolb
sub
sub
call
int3
arpl
aaa
rorb
rcl
jecxz
adc
xor
inc
or
inc
jge
lock
adc
inc
sub
subb
jne
sbb
loop
or
jge
mov
mov
inc
aad
push
out
sub
shrb
jge
jbe
pushf
inc
mov
mov
lret
cmp
mov
dec
push
les
sbb
sti
imul
push
sub
iret
pop
fiaddl
cmp
dec
int
cmp
rolb
inc
adc
stos
sahf
add
dec
in
xor
add
pop
add
pop
mov
mov
cmpsb
out
sub
lcall
xchg
ret
dec
inc
push
mov
push
cmp
and
lahf
stos
jbe
leave
call
stos
sbb
incb
jle
push
or
test
dec
leave
adc
adc
sbb
std
es
mov
xchg
pusha
mov
sub
lock
jp
test
cmp
push
jb
pop
loope
scas
js
mov
mov
or
push
pop
ja
mov
sub
ds
or
ror
xchg
fiaddl
stos
out
add
and
loopne
jno
or
jae
stos
cli
pop
inc
repz
dec
xchg
mov
je
push
outsl
push
push
cmpsb
xor
jns
jne
repnz
aas
push
pop
mulb
mov
adc
or
aas
pop
aaa
mov
push
jmp
inc
inc
stos
divb
fs
xchg
mov
test
pop
in
in
push
cmpsl
repnz
stc
cmp
mov
call
cmc
sub
pop
push
pop
int
xchg
cltd
dec
pop
inc
dec
sub
mov
sahf
xor
mov
ljmp
sbb
popa
lcall
aad
mov
in
push
lcall
jbe
adc
cmp
sub
pushf
cwtl
into
enter
imul
inc
cmp
movsl
fcoms
sub
aas
int3
xchg
repnz
fucom
adcl
nop
cmp
xor
or
and
adc
push
fs
or
jnp
jmp
stc
aad
xchg
mov
mov
inc
push
add
pop
icebp
or
loopne
movsb
data16
mov
dec
or
vmovdqa
cmp
cmp
cltd
aas
cmpsl
mov
orb
sub
fcomps
inc
and
push
int3
movsb
mov
xchg
inc
pop
bound
aas
fcompl
mov
lret
jge
movsb
mov
xor
bound
push
push
lock
adc
je
mov
pusha
sbb
mov
jg
mov
ffreep
adc
ja
int3
xor
adc
xor
pop
insb
cltd
sahf
xor
cmp
mov
mov
jae
push
pop
movsl
lahf
iret
mov
insl
into
fmuls
andb
aam
mov
adc
stc
inc
outsb
lret
push
popa
dec
jp
mov
mov
mov
sbb
in
dec
ds
idivl
dec
inc
xlat
adc
out
and
mov
imull
cld
int3
mov
insl
inc
int3
pop
cld
loopne
fs
mov
cmpl
movsb
or
jo
pop
push
stos
jg
repz
mov
and
fnstcw
arpl
stc
in
pop
cmp
ljmp
insb
jp
js
cwtl
aam
test
in
movsl
and
cmc
fidivrs
xor
mov
jae
aad
push
das
mov
cmp
enter
sub
push
inc
inc
mov
push
aad
scas
jo
and
sub
jno
flds
mov
cmp
dec
mov
clc
pop
mov
fsts
mulb
mov
mov
mov
in
xchg
ret
std
push
push
imul
pushf
jp
push
jmp
or
cmpsb
sub
clc
sbb
jecxz
mov
jge
call
jmp
jecxz
xor
shlb
mov
cmp
sub
sahf
push
aad
dec
lea
mov
and
xchg
aaa
rep
push
xlat
ja
test
pop
loop
lods
lods
mov
test
stc
ja
leave
cld
fsubl
lcall
inc
xchg
sarb
roll
adc
lods
das
ljmp
hlt
and
jo
dec
xchg
mov
shll
jecxz
mov
arpl
shlb
push
add
cmpsb
clc
jl
fimuls
int
inc
mov
inc
in
rcr
cmp
lock
ret
js
fmull
js
jl
cmpsb
sbb
js
fists
fidivrl
fsubrs
xchg
aaa
push
sbb
sbb
or
insb
xchg
pusha
js
pop
jp
cmp
sbb
ret
ret
jmp
loope
jns
xchg
loopne
ss
jbe
jnp
mov
and
xchg
incl
scas
sbb
cwtl
add
xchg
dec
ret
xchg
mov
xchg
adc
xchg
adc
and
mov
pop
cld
insl
out
xor
dec
test
daa
sub
or
push
xor
fucom
insl
rclb
sub
repz
mov
repz
mov
mov
push
ret
test
add
into
sahf
jo
xor
lock
daa
ds
pop
lcall
jnp
adc
push
repnz
mov
sbb
popa
fldt
jp
cwtl
push
into
xor
fucomip
loop
cmp
xor
inc
or
iret
fiaddl
xorb
pop
fiadds
dec
loope
cmp
shl
add
and
loop
test
subl
push
mov
imul
cmpl
insb
clc
push
xchg
cmpl
cld
fidivrs
dec
pop
repnz
stos
fiaddl
add
cmp
out
les
push
adc
xchg
sarl
ss
mov
imul
sbb
xchg
xchg
mov
pushl
mov
xor
popa
fidivs
sub
dec
ret
sarl
adc
xorl
xchg
mov
mulb
jo
jb
mov
push
test
pop
and
mov
adc
push
in
sub
clc
pusha
shll
cmpsb
dec
ret
pusha
insl
add
dec
dec
lock
or
outsb
pushf
ret
outsl
cmp
jno
push
xlat
leave
mov
and
add
dec
jecxz
and
enter
adc
adc
push
in
mov
jge
sub
ds
out
cmp
gs
shr
push
jmp
popa
mov
cld
jge
dec
mov
test
mov
bound
arpl
mov
into
jg
stos
imul
jne
dec
jnp
lods
jo
push
std
ficomps
cmc
push
addr16
push
xchg
std
lcall
outsl
mov
test
mov
mov
adc
jl
pop
jp
mov
mov
sub
xor
mov
stos
fiaddl
push
aad
scas
out
lock
jmp
scas
and
aaa
or
test
push
dec
xchg
ljmp
cmpsb
out
lahf
pushf
scas
cmpsl
repz
jno
les
push
mov
clflush
ret
cmpsb
push
sub
pop
test
es
scas
mov
popf
pop
or
lahf
fisubrs
popa
cmp
pop
cmp
iret
mov
sub
adc
test
popa
push
arpl
adc
in
add
jo
ficoms
fsubr
test
js
aam
fisubrl
dec
push
push
ror
inc
jnp
adcl
les
lahf
dec
lret
inc
inc
mov
xor
sub
call
imul
je
lds
and
in
fsts
pop
sahf
jecxz
imul
add
push
inc
inc
repnz
ljmp
jno
daa
int3
xchg
les
movsl
movsl
pop
dec
cmc
or
ret
fdivrl
fwait
jp
push
ret
push
lods
add
lods
movb
xchg
mov
mov
add
push
pop
add
jne
mov
mov
jl
add
repz
jns
shl
data16
rorb
out
cmc
sbb
push
and
lods
xchg
stos
data16
or
pop
lods
sarb
cmp
jmp
loopne
jnp
popf
fisubrs
in
lods
cmp
pushf
xlat
stc
adc
ret
cmpb
addb
xor
jae
loope
jecxz
push
pop
jge
pusha
cmpb
out
push
jns
arpl
mov
dec
pop
xor
sarl
pusha
stc
cmp
out
or
rcll
scas
outsb
xlat
mov
icebp
sbb
outsb
mov
jl
jp
inc
sub
mov
or
adcb
js
mov
pop
mov
sub
fsubs
hlt
or
scas
mulb
xchg
mov
pop
lret
mov
push
cmp
insl
mov
icebp
mov
xchg
xchg
shrb
or
daa
in
insb
ja
lds
push
or
sub
dec
pop
fnstenv
push
jl
lahf
push
lcall
idivl
test
mov
jnp
sarl
jge
xor
lret
dec
lcall
lahf
push
mov
nop
mov
cmp
cmp
push
and
push
xchg
dec
xlat
cmp
jbe
xchg
mov
push
mov
pop
aaa
jb
sub
cmp
xchg
arpl
cmp
jmp
repnz
push
xchg
fists
movsb
mov
xor
pushf
mov
mov
repnz
test
inc
je
sbb
test
cltd
inc
popa
mov
mov
imul
sahf
jb
push
sub
pop
push
popf
inc
mov
mov
test
add
lea
and
icebp
push
adc
push
xchg
pushl
mov
add
mov
adc
mov
push
sbb
bound
xor
fsubl
sti
shrl
jl
xchg
add
or
cmp
in
jg
xorl
jne
lods
adc
mov
and
cmp
fidivl
mov
jnp
testl
sbb
negb
xlat
sub
in
lret
sub
adc
pop
pop
scas
mov
jo
adc
leave
stc
aas
clc
inc
add
mov
pop
pop
lds
std
std
mov
fnsave
adc
out
xlat
push
insb
add
cmp
in
mov
sub
mov
push
ficoms
dec
lods
cmc
xor
xchg
lret
cwtl
shrb
testb
in
cmp
xchg
sub
pop
movsb
mov
popf
and
addr16
fs
adc
pusha
loopne
jge
jp
testb
sbb
sbb
pusha
sbb
push
loop
inc
mov
data16
dec
xor
cli
jmp
ja
mov
daa
mov
pop
sub
lods
movsl
lret
inc
push
scas
jecxz
ja
insl
jns
lahf
mov
les
pop
testb
push
in
int
aaa
fistpl
movsb
fisubrs
test
out
inc
lahf
mov
out
mov
out
negl
jbe
sub
mov
clc
jle
lcall
enter
cmpb
xchg
cmp
nop
xchg
out
inc
mov
loope
imul
cmp
xchg
out
dec
das
pop
add
cli
je
jmp
mov
and
xchg
or
enter
pop
arpl
insb
ret
daa
andb
sahf
testl
imul
push
sub
push
imul
mov
aaa
dec
ljmp
fbld
jle
pop
aaa
les
cmp
leave
dec
mov
gs
sahf
cli
jecxz
inc
fstpl
push
inc
and
test
in
inc
insl
pop
pushf
test
pusha
mov
ficoms
loopne
xchg
stos
loop
jecxz
clc
cli
mov
iret
cwtl
mov
mov
scas
mov
das
sbb
icebp
test
inc
inc
dec
sub
jg
dec
jp
inc
push
pop
and
test
test
pushf
jbe
mov
lret
sahf
push
push
mov
or
adc
in
push
test
sbb
pop
jo
pusha
fstpl
xorb
insb
dec
lods
pop
push
jle
ret
data16
stos
and
and
mov
in
cmp
lret
push
push
mov
ret
adc
jge
out
daa
jmp
xchg
out
stos
mov
inc
cs
insb
lret
lods
add
jg
mov
push
mov
jmp
fmuls
ds
mov
adc
jp
cwtl
ret
add
scas
sti
or
out
sub
notb
mov
fdivl
sub
sti
sbb
or
in
aas
pop
test
scas
pop
mov
cld
dec
leave
test
pop
test
aad
xchg
roll
xchg
sti
out
sbb
lcall
sarb
jmp
inc
jbe
cmpsl
sahf
push
lods
loopne
int
gs
ret
mov
dec
mov
sub
mov
pop
add
mov
push
push
pop
adc
sub
sub
pop
aam
xor
int3
cmp
push
ljmp
insl
int
mov
stos
jmp
jge
imul
pop
cli
pop
or
int3
mov
lock
push
pop
addr16
fmull
add
mov
lock
cld
or
cmp
jge
inc
jns
iret
adcl
addr16
mov
ficoml
push
add
xchg
adc
pop
inc
jmp
xor
or
adc
adc
push
mov
dec
mov
pop
aad
or
stos
pop
lods
push
int3
lods
sub
aaa
mov
push
std
add
inc
cmp
xchg
int3
es
cli
mulb
push
icebp
jo
push
cs
xor
mov
fdivrp
mov
sbb
lret
sub
or
sbb
filds
mov
adc
cmp
pushf
shl
inc
xor
push
ret
lea
dec
popf
into
mov
loop
mov
sbb
cmc
push
repnz
pop
stos
fs
out
outsb
out
and
mov
inc
cmp
popa
lret
xchg
fcomps
jnp
cltd
xchg
add
pushaw
in
jns
ja
adc
xchg
andb
imul
repnz
aad
ljmp
inc
cmp
cld
mov
int3
cmp
push
push
cwtl
gs
jae
popf
sbb
hlt
into
and
popf
cmp
shlb
ficoml
test
testl
mov
cs
xchg
jl
movsb
stos
adc
jo
fldl
push
repz
jp
fisubrl
fcomi
pop
adc
jno
stos
sub
aam
fs
adc
or
and
ret
dec
test
lcall
inc
subb
mov
xchg
xchg
sub
das
popf
data16
jp
add
test
and
enter
scas
rcr
ss
xor
fcmovnbe
mov
xor
popa
hlt
sar
mov
sbb
insl
inc
pushf
jmp
stos
insl
into
iret
cmp
fwait
adc
mov
out
fyl2xp1
cmp
gs
and
enter
xchg
add
mov
leave
add
inc
mov
sbb
cltd
fiadds
mov
pop
cld
push
and
cmpsb
xor
or
pusha
cmp
ret
sub
pop
mov
mov
jnp
add
test
cld
inc
icebp
cmp
push
cld
rcl
jnp
mov
mov
test
inc
jbe
leave
aad
pop
insb
or
mov
shll
jns
popf
imul
push
push
mov
or
push
ret
xor
push
leave
aas
popa
enter
ss
shlb
cmp
mov
aad
dec
or
xchg
push
sbb
movsb
maskmovq
negl
in
testl
and
pop
adc
dec
sbb
xrelease
gs
mov
lea
pop
cmc
out
arpl
popa
fs
sbb
repnz
cmc
mov
xchg
mov
dec
rcl
adc
dec
loope
sbb
jg
movsl
bound
das
lods
mov
incl
jbe
adc
xlat
sarl
test
test
adc
call
pop
dec
xor
sub
cmp
mov
ret
call
fsubrp
xor
neg
das
pop
push
cmc
pop
mov
pop
pop
dec
xchg
xor
cltd
xor
leave
pop
cmp
ss
jne
jns
push
and
fidivrs
push
int
popa
xchg
lahf
mul
push
push
jg
call
mov
outsb
jbe
and
lcall
mov
mov
dec
pop
mov
fnstcw
jns
jecxz
cmpsb
dec
push
stos
pop
aaa
jmp
mov
add
lret
clc
pop
ss
dec
rcr
cld
aad
rcrl
jns
push
je
add
sti
shll
cwtl
mov
addl
bnd
xor
lds
cmp
pop
lahf
test
dec
pop
or
pop
test
arpl
jp
enter
arpl
xchg
out
adc
mov
es
shrl
jecxz
test
ret
cltd
jnp
and
adc
mov
push
ficoml
inc
adc
and
add
mov
xchg
into
pop
xchg
repz
test
es
xchg
jae
dec
loop
mov
xor
lods
mov
xor
mov
xchg
aad
or
cltd
flds
stos
fimuls
out
mov
pop
fwait
adc
ret
mov
ficompl
push
shl
push
sbb
push
mov
lods
lea
xchg
icebp
push
test
mov
pushf
out
ja
jb
xchg
inc
push
and
decb
push
in
call
fdivrl
xor
mov
fdivl
int
out
mov
inc
adc
inc
test
shlb
sub
lods
add
jo
pop
mov
shll
mov
movsb
push
add
in
push
inc
dec
inc
out
and
dec
sbb
inc
jne
inc
movsb
std
dec
stc
lods
cmp
repz
jp
adc
mov
xchg
fsubrl
cli
scas
mov
sub
filds
test
fcmovnbe
mov
aaa
cs
cld
dec
xchg
push
jae
jge
pop
ja
jo
adc
shrl
cmc
or
jle
jnp
mov
cmpl
imul
mov
dec
mov
negb
cltd
push
sti
ror
add
pop
mov
aad
fwait
aad
jb
and
xlat
sti
es
outsl
mov
jecxz
xor
xchg
cld
mov
stos
leave
xchg
sub
in
lret
and
pop
inc
repz
fsubl
sti
das
adc
sub
popf
cmpsb
inc
test
lcall
dec
out
loop
sub
jg
inc
sti
test
das
cld
out
das
hlt
pop
in
pop
xchg
cmp
add
or
adc
lods
nop
cmp
ret
adc
add
pop
lret
inc
imul
outsb
xchg
aas
lock
and
cmpsl
xchg
rolb
icebp
add
lods
outsb
mov
call
sbb
outsb
data16
sbbb
loope
aaa
pop
in
push
and
xor
int3
push
mov
cmp
cmp
xor
andps
hlt
in
sbb
cmp
sti
imul
clc
inc
fsubl
loop
add
or
out
arpl
cs
es
fldt
lods
and
stos
divb
lahf
push
js
inc
cmp
sbb
inc
clc
inc
sub
rclb
leave
or
or
ss
add
movsl
xor
cmp
std
inc
push
mov
xor
or
loop
adc
inc
pop
push
lods
imul
adc
pop
icebp
pop
adc
ljmp
into
scas
out
push
rolb
nop
cltd
mov
rcrb
test
mov
add
jo
lods
cmp
cmpsb
rolb
and
xor
stos
ja
push
add
add
mov
xchg
xchg
sbb
fucomi
xor
pop
call
fisubl
and
xor
popf
push
adc
inc
das
shll
adc
cmp
mov
sub
xchg
jo
inc
test
push
push
arpl
cmp
jg
or
inc
cmp
in
out
xor
scas
mov
pushf
loop
adc
or
lea
setg
cmpsl
mov
in
popl
cwtl
cli
js
jp
jnp
addr16
mov
push
jae
or
lods
jbe
xchg
cli
fcmovbe
dec
mov
xor
test
lea
imul
mov
jae
stc
ret
xchg
jae
leave
push
ds
xor
outsl
ljmp
addr16
mov
std
das
out
jno
ss
scas
ret
fwait
sbb
test
inc
mov
int3
jno
push
mov
repz
xor
sub
in
xchg
dec
dec
clc
cmp
pop
lds
sub
jo
cmp
xor
add
pop
outsb
addr16
in
xor
jle
sahf
shl
jns
jle
lock
lock
jecxz
sbb
std
push
add
cld
int3
adc
out
jb
imul
movsl
mov
scas
mov
mov
push
mov
std
mov
push
mov
cld
and
mov
daa
lahf
add
ds
insb
out
inc
or
push
jo
dec
sub
aas
pop
inc
sub
inc
mov
xchg
bound
shrb
les
push
add
pop
popa
xorb
hlt
fistpl
mov
xchg
sub
ret
push
jae
ss
stos
cmp
pop
data16
mov
inc
fisttpl
lods
mov
mov
aaa
dec
xchg
and
cmpsb
scas
lods
popa
jecxz
pusha
imul
cmc
enter
adc
adc
loope
daa
push
add
les
jns
rcr
sbb
loop
out
sarl
inc
cmpl
shlb
adc
cs
movsl
stos
push
testl
add
pop
ja
jae
gs
or
movsl
mov
bound
popf
xchg
xchg
out
inc
mov
or
dec
push
xchg
jecxz
sbb
stos
int
mov
ss
pop
sbb
and
or
push
repnz
ret
fisubrl
aad
pop
loope
rolb
push
repz
dec
call
shlb
mov
movsb
popa
pop
pop
push
movsb
enter
adc
stos
and
testl
scas
cwtl
rolb
std
adc
lock
stc
xchg
shl
jge
xor
cmpsb
hlt
leave
and
inc
shll
mov
fistpll
rclb
call
mov
ja
add
cmp
rcll
mov
data16
inc
in
xchg
iret
notb
xchg
addr16
repz
je
jbe
aas
out
jmp
dec
pop
clc
push
mov
xchg
sub
dec
mov
or
cltd
fisubs
push
insb
jae
pop
test
fwait
idiv
cmc
lea
lcall
sbb
add
fsubl
inc
scas
xchg
gs
dec
mov
mov
xchg
cwtl
stc
sub
jbe
sub
push
xlat
nop
and
pop
lret
shlb
lock
xchg
add
lods
int
shrb
rcrl
push
stos
imul
ds
or
cmp
pop
outsb
mov
adc
shlb
lock
jno
sub
inc
mov
loop
mov
add
icebp
popf
les
icebp
loope
aam
in
pushf
stos
in
xchg
sub
cmp
push
ret
mov
out
jae
loope
jg
jbe
sbb
mov
mov
ljmp
cmp
out
push
xlat
cmp
mov
jge
hlt
and
cmp
mov
push
cmc
leave
add
iret
mov
jl
mov
or
sbb
sar
push
ret
imul
clc
repnz
mov
inc
mov
test
dec
test
pop
movsl
enter
test
mov
pusha
jne
cli
rcrl
testl
inc
adc
push
mov
rclb
decb
popf
popf
lods
mov
dec
and
repz
push
fistps
dec
xor
fs
test
jp
jbe
and
xchg
sub
add
imul
mov
pop
fwait
je
popa
jmp
mov
stos
mov
out
inc
es
lcall
mov
xchg
inc
cmp
cwtl
mov
fcomip
rolb
lret
loop
aaa
leave
loopne
loope
lcall
or
mov
fs
dec
jle
xchg
xor
aad
ljmp
fcomi
xchg
sbb
std
cmp
cwtl
dec
sbb
pop
and
shlb
sub
or
push
fcomps
arpl
pop
sub
imull
sub
xchg
mov
cld
pop
mov
inc
sbb
bound
pop
std
jns
xchg
mov
sbb
or
pop
xchg
test
sub
popa
xchg
push
or
xchg
lock
mov
xchg
dec
push
cmpl
xchg
push
rcrl
xchg
scas
xchg
dec
cmp
das
sbb
pop
inc
xchg
adc
sub
imul
xchg
cmp
call
gs
sti
testb
mov
add
jns
gs
outsb
into
mov
cmp
fistpl
and
negb
addr16
arpl
pop
clc
adc
pop
add
jne
aam
shl
cmp
jnp
mov
adc
cmc
jge
fnstsw
add
or
mov
lock
sub
ljmp
test
leave
ret
fistpl
aaa
adc
bnd
dec
cmp
and
gs
insl
add
in
pop
xchg
pop
add
jmp
push
jmp
adcl
jne
mov
cmpsl
sbb
sub
inc
pushf
rcr
or
mov
out
mov
cmp
cmpsb
sbb
pop
dec
mov
loope
xchg
stc
mov
bound
test
mov
insl
add
hlt
jecxz
or
ret
je
js
int3
mov
mov
push
in
xor
adc
rol
mov
sbb
out
es
gs
push
stos
inc
push
movsb
add
sub
lds
pop
cmpsb
inc
push
imul
mov
sbb
lret
sarl
sbb
ljmp
sub
imul
scas
bound
dec
popl
push
incl
push
les
rorl
inc
mov
mov
and
pushf
xor
in
rcll
xor
add
mov
ja
or
ret
xor
clc
adc
cmp
cmp
push
inc
sarl
mov
jns
ja
pop
inc
mov
inc
test
jne
mov
in
jg
js
cmp
jle
ja
ret
xchg
jge
into
xchg
push
cltd
pop
shlb
push
push
mov
aas
inc
pop
repz
cwtl
stos
out
jl
or
fildll
jno
and
mov
and
sahf
popf
or
or
lahf
stos
cwtl
adc
inc
adc
testl
dec
mov
inc
ss
fnsave
cmc
adc
testb
or
mov
outsb
push
roll
pop
jnp
xchg
xor
out
ljmp
and
roll
xor
pop
cld
lcall
xor
nop
popa
jae
lret
mov
dec
sub
adc
cs
cs
scas
mov
sbb
popa
mov
pop
repnz
js
iret
in
sub
repnz
xchg
mov
cmp
clc
mov
xchg
imul
loope
or
pop
xor
mov
aaa
pushf
notl
mov
cmp
push
outsl
mov
mov
mov
cmpsb
jb
add
rol
in
test
bound
jg
filds
in
rclb
arpl
xchg
mov
testb
sub
xchg
repnz
jne
cmp
cmp
xchg
bound
int
cmc
jnp
xor
pusha
xchg
imul
lods
js
ss
xchg
outsb
leave
insb
jge
and
aam
sub
stc
in
nop
mov
filds
fdivs
jb
sub
lock
das
outsl
fldt
and
or
jno
dec
sbbb
xchg
es
popa
lea
add
out
icebp
in
push
xor
or
push
sbb
push
repz
mov
add
fimull
cltd
imull
push
cli
in
and
push
sub
cmpl
outsb
push
jo
movsb
lret
es
xchg
push
subb
mov
push
test
or
mov
adc
or
mov
push
push
and
mov
jecxz
inc
mov
es
lcall
addl
sbb
test
cs
mov
int3
das
xchg
xchg
in
sbb
aaa
add
dec
nop
add
or
mov
cmpsl
mov
cmp
movsb
jg
cmpsl
sub
sbb
arpl
shrb
jne
cmp
fwait
nop
aam
inc
mov
inc
push
insb
fwait
cwtl
dec
mov
lahf
enter
mov
mov
mov
cmp
loope
lret
aaa
push
xor
sbb
inc
mov
hlt
xchg
out
call
and
sub
sbb
js
sub
xchg
xchg
inc
mov
xchg
push
fistps
xor
les
into
cli
hlt
stos
mov
arpl
pop
aaa
add
jne
sub
fs
pop
hlt
jmp
inc
add
push
mov
out
mov
push
sub
ja
mov
iret
ss
fcmovb
das
xlat
push
inc
scas
jno
int3
div
cld
cmc
dec
test
clc
cltd
adc
add
xor
and
mov
mov
jne
and
pop
adc
movsl
mov
jl
js
cmp
and
mov
xchg
xor
outsb
pop
ja
push
and
inc
mov
sbb
xchg
jbe
xchg
in
cmp
in
test
jle
outsl
rcll
mov
and
pop
sbb
jo
jge
jge
lahf
sahf
fsubp
imul
shll
cmp
cmp
add
outsl
rcll
mov
in
lods
addr16
std
scas
pusha
jo
cmp
loop
add
cmp
dec
das
xchg
test
loop
sub
xor
inc
addr16
ja
mov
mov
test
xlat
pop
sub
mov
ja
arpl
ja
stos
mov
rcrl
loope
hlt
push
dec
loopne
stos
push
rcrb
add
lea
stc
mov
jecxz
mov
in
out
out
xchg
fistl
nop
ret
lods
in
or
xchg
push
dec
pop
mov
push
lds
das
sti
inc
xchg
jns
int3
jmp
xor
leave
stc
ja
jmp
sub
nop
adc
aad
push
mov
dec
jmp
orl
pusha
sub
fnstsw
sbb
mov
dec
mov
and
iret
jnp
adc
test
xchg
sub
xorl
stos
testb
sbb
push
and
mov
jmp
test
and
popf
stos
cmc
loope
sbb
cwtl
test
ja
adc
imul
icebp
xor
mov
ja
hlt
out
pop
inc
or
mov
push
pop
mov
aam
aad
iret
xor
jo
inc
jo
lock
or
scas
mov
xchg
cmpsl
ret
pop
out
add
call
pop
mov
mov
shr
sbb
push
stos
pop
aam
sar
aad
mov
out
cmp
jp
test
idivb
rcll
mov
xor
inc
je
ret
in
ret
sbb
out
mov
cmp
mov
arpl
nop
jnp
dec
das
inc
stc
movsb
mov
nop
mov
movsl
push
daa
das
fldcw
subb
xorb
jmp
xor
sbb
mov
popf
andl
push
adc
mov
mov
and
mov
mov
lret
insl
shll
incl
adc
xchg
mov
xchg
test
mov
hlt
stc
enter
or
inc
lcall
jbe
out
inc
fdiv
pop
into
cs
and
clc
jg
push
jp,pt
cld
adc
pop
repz
cld
mov
mov
pusha
or
mov
filds
std
popf
cmp
cmp
add
popf
mov
mov
sahf
pop
in
inc
inc
aad
inc
fwait
repz
sub
dec
cmp
mov
add
dec
fs
xor
push
push
stc
and
je
inc
leave
inc
dec
fdivrl
jle
lods
lock
in
sbb
push
test
mov
roll
add
sahf
enter
cmp
adc
call
add
mov
and
js
inc
adc
test
pop
aas
outsl
pop
or
cmp
sub
jmp
pop
call
mov
imul
ja
dec
lcall
dec
outsb
push
mov
push
cmpsl
cmp
and
pop
mov
sbb
xor
jae
out
lea
aaa
add
cmp
pop
stos
daa
mov
scas
aas
stos
inc
rorb
out
into
xchg
add
sbb
pushf
scas
or
call
mov
pushf
mov
loopne
stos
inc
inc
cmp
cmp
add
mov
adcl
sub
movsl
cmpsl
push
fmuls
fdivp
pop
nop
inc
jp
pusha
xchg
repz
and
hlt
adc
pushf
adc
pop
mov
push
repnz
add
jge
ja
sbb
sub
mov
scas
popf
in
imul
shll
mov
icebp
gs
iret
fstpl
pop
cltd
push
mov
stc
shll
daa
bound
fcompl
cld
push
popa
push
jo
sti
inc
cmc
divl
and
popl
dec
arpl
xchg
add
aaa
push
push
or
cli
outsb
mov
jns
jl
decl
ret
out
xchg
mov
pop
sahf
aad
mov
aas
insl
push
or
lcall
push
in
fwait
dec
imul
imul
pop
inc
xchg
mov
lea
sbb
movsb
and
loop
sarl
ds
mov
cmp
pop
gs
daa
test
push
pop
or
fstl
hlt
jno
repz
addl
sub
leave
adc
inc
dec
mov
xchg
in
jns
mov
fcompl
mov
call
adcl
test
lcall
loope
cmp
inc
and
aam
stos
shlb
pop
xchg
test
push
out
mov
leave
and
popa
xchg
mov
and
clc
jmp
js
or
mov
mov
subl
cmpsb
in
add
push
lods
jp
loop
jmp
adc
cmp
cmp
push
inc
xor
jae
daa
sub
add
stos
scas
addr16
nop
sarl
sar
push
push
shrb
or
aam
push
mov
or
out
fsubl
cmp
stos
sbb
xchg
or
cltd
push
arpl
xchg
sub
out
mov
inc
call
outsb
cmp
loopne
jp
pop
mov
rorb
lods
loopne
ljmp
mov
fldenv
repz
shlb
lea
cmp
sbb
cmp
sbb
stos
iret
jbe
sub
sub
cli
imull
outsl
js
or
js
push
cmp
cmpsb
loope
jns
lret
jmp
gs
roll
shlb
sub
in
cs
rcrb
cmp
fdivrs
xor
adc
lcall
and
xorl
shl
mov
ds
jp
scas
jnp
imul
mov
mov
in
mov
pop
shrl
movsl
lds
fs
cs
pop
lcall
loope
mov
das
adc
dec
xor
shrl
xchg
lret
adc
sbb
pop
ret
mov
ljmp
push
movsl
imul
out
push
aad
lahf
mov
mov
js
xor
xchg
adc
sbb
fucom
xchg
jbe
pusha
lods
ss
fstps
inc
stc
loope
pop
cltd
mov
ret
dec
push
cmp
sbb
or
stos
fwait
enter
rorb
ja
mov
data16
fstps
push
push
mov
jmp
sub
gs
xchg
fisttpll
sub
add
add
out
cli
or
stos
sbb
sbb
pop
test
fdivrl
mov
in
rorb
push
mov
js
lret
jge
pop
test
mov
or
lods
sbb
aaa
push
insl
xchg
cmp
cmc
jg
jle
cmp
inc
fstpl
sbb
or
xchg
xchg
aam
out
dec
push
sbb
or
sahf
jp
fisttps
sub
imul
enter
das
pop
cmp
add
xchg
mov
adc
addr16
sub
jge
dec
movsb
test
jl
leave
dec
repz
and
mov
lret
repnz
out
or
mov
add
pop
push
add
push
and
pop
cmp
lahf
jmp
lds
mov
sub
cs
test
mov
lds
rcrb
loope
je
adc
sub
adc
lods
ja
lcall
mov
xor
sub
push
in
mov
push
das
mov
sahf
aam
sarl
mov
jecxz
stos
daa
xor
negb
cmp
xchg
insb
xor
inc
dec
jbe
push
jnp
in
jmp
sbbl
adc
divb
push
lea
data16
cmp
adc
pushf
or
aas
int
jno
inc
insl
sarb
cmp
cmpsb
leave
jg
jb
xlat
jmp
and
sub
ret
xchg
lcall
nop
or
xor
lods
test
jmp
and
and
les
cmp
sub
xor
mov
ss
push
cmp
jmp
addl
int3
jecxz
inc
into
cmpsl
jb
data16
pop
repz
movsb
inc
sbb
xchg
jns
icebp
lcall
sub
pop
push
ficomps
stos
ljmp
lods
mov
repz
sub
imulb
sub
pop
sar
setne
in
inc
mov
or
dec
movsb
in
in
test
dec
sti
xor
call
js
gs
push
xchg
je
mov
insb
movsl
jmp
and
dec
ja
iret
enter
aam
shrb
jp
stos
sbb
cli
jecxz
iret
ret
aas
test
mov
test
push
mov
mov
fisttpl
daa
stos
pop
push
shlb
xor
nop
pop
pusha
notb
les
ret
jge
cmp
mov
cmpsl
dec
std
ror
jne
aam
bound
mov
sahf
jb
adc
pop
push
pusha
add
call
mov
arpl
lock
or
ljmp
pop
rorb
pushl
ss
inc
xor
lods
jmp
gs
mov
aam
pop
and
imul
enter
mov
jg
or
subl
add
pop
test
sbb
idivb
mov
orb
mov
subl
mov
idivl
sub
shll
sbb
mov
mov
mov
push
push
js
out
ljmp
dec
shl
mov
xchg
dec
push
sbbl
dec
fiadds
cwtl
mov
icebp
mov
mov
inc
int3
inc
es
pop
rcrl
cmp
out
cmp
cmp
fisubl
sbb
xor
dec
push
mov
int
adc
inc
je
stc
mov
cmc
mov
frstor
dec
pop
cmp
popf
dec
cltd
lods
push
push
aad
push
daa
ret
pop
sarb
outsb
mov
outsb
add
in
adc
adc
push
mov
aam
adc
popa
jle
adcl
inc
inc
inc
fucom
cmp
cmp
fisttpl
jmp
std
nop
mov
in
ja
js
loopne
movsl
mov
icebp
push
push
dec
shl
fdivrs
mov
imul
test
jae
push
int
push
xchg
push
adc
test
fdivrs
in
into
arpl
xchg
mov
or
out
and
dec
mov
jmp
mov
xor
lret
inc
shrl
push
sub
jb
mov
mov
inc
cmp
sub
ljmp
stos
rcrl
adc
mov
rcl
inc
aaa
icebp
sub
push
cmp
adc
shrb
ss
test
cld
das
sub
cmp
and
fmuls
rcrl
test
adc
mov
ficoml
pop
cmc
addb
mov
pushf
stos
into
cltd
stc
fs
fidivrl
fsts
pop
repz
aas
out
sahf
mov
mov
pop
loopne
add
xchg
push
inc
ljmp
pop
imull
int3
adc
clc
cmp
or
push
pop
jae
sub
dec
push
test
pop
loop
test
jb
das
xchg
mov
mov
es
jle
push
push
jle
mov
repz
jae
testb
xor
std
push
xor
lahf
mov
cmpsb
inc
lea
cmpsl
arpl
xor
arpl
pop
jno
in
and
je
mov
dec
or
push
push
ret
lahf
aas
xor
or
outsl
ret
xchg
add
dec
je
out
inc
imul
fsubrl
add
shlb
inc
push
or
add
xor
xor
inc
cli
std
dec
xlat
adc
add
test
xor
cmp
and
push
fdivl
out
out
inc
insb
mov
inc
lret
pop
popa
rcll
mov
in
sbb
andb
repnz
pop
push
popf
rol
aas
mov
jbe
mov
push
cmp
xchg
xchg
loope
cli
mov
jle
mov
movl
nop
sets
repz
sub
jp
push
inc
enter
movsb
mov
jbe
jecxz
insl
ficoml
leave
xor
jle
pop
push
push
out
out
jnp
ret
adc
ret
sub
mov
outsb
aaa
mov
adc
and
cld
jp
and
xor
neg
xchg
subb
pusha
push
and
bnd
jmp
inc
iret
leave
and
dec
and
sub
into
repnz
cwtl
pop
mov
adc
cmp
int3
pop
push
cmp
push
sbb
push
popf
lea
out
lds
test
sub
in
mov
and
jmp
jne
mov
sub
sub
ljmp
loopne
fxch
inc
cmp
sub
jne
xor
xchg
xor
and
xor
adc
cltd
iret
push
xorb
xlat
push
icebp
arpl
cmpsb
sbb
add
fdivrs
push
scas
push
dec
pop
es
mov
cltd
jl
pop
xor
mov
sbbb
fistpll
nop
push
jle
cmp
imul
test
push
stos
lods
nop
in
cld
lods
scas
out
fadds
fadds
ljmp
rolb
dec
aaa
inc
stc
cs
push
cmp
imul
mov
lock
loope
pop
adc
sub
or
mov
or
nop
leave
movsl
shrd
mov
out
hlt
lcall
inc
inc
pop
and
sahf
xchg
xor
cwtl
push
dec
call
insl
add
push
and
jno
lock
dec
push
hlt
int
push
fs
cmp
add
data16
lds
sahf
incl
addr16
iret
loop
push
jnp
ss
mov
popf
jnp
inc
fs
push
sub
in
popf
xchg
mov
ss
add
jne
rorb
add
dec
mov
xchg
fidivl
aaa
add
ds
mov
call
sub
inc
fdivl
dec
test
jo
sub
or
cmp
xchg
jbe
xchg
stos
fstpt
sbb
pop
mov
test
dec
fwait
xchg
push
fisttps
sbb
dec
andl
mov
mov
test
dec
aaa
dec
jecxz
adcl
and
hlt
mov
cmp
mov
sub
fucomp
scas
ss
repnz
inc
or
scas
push
movsb
sbb
and
das
enter
scas
and
aas
mov
rcll
jo
add
gs
arpl
add
jmp
dec
mov
pushf
into
setne
mov
sti
in
xor
insb
stos
mov
adc
lret
scas
pop
test
dec
xor
out
mov
lcall
push
push
pop
sarb
out
pop
push
dec
lods
cs
das
loope
mov
dec
push
aad
movsb
add
scas
pop
jno
adc
add
jo
rolb
pop
dec
ss
neg
stc
jge
gs
mov
lods
push
push
add
ja
push
lods
js
shll
es
imul
bound
jbe
push
jo
adc
ljmp
cs
pop
cwtl
aas
cs
pop
mov
and
mov
mov
pop
or
mov
pop
js
push
jecxz
mov
xchg
xchg
loop
popa
sbbb
cltd
fidivrs
sub
pop
dec
pop
cwtl
int3
dec
xor
arpl
adc
dec
cmp
cli
mov
lds
or
es
xor
sub
and
test
out
shrb
add
pop
lds
in
dec
shlb
mov
mov
ljmp
xor
adc
lcall
cld
add
sbb
ss
jle
inc
ret
cld
xor
and
adc
dec
fnstsw
es
fstl
cld
pop
mov
adc
sub
jo
xchg
insl
ret
lock
xor
out
mov
add
or
loop
inc
ds
out
dec
rcrb
cwtl
cmp
pop
cmpsb
andb
cli
xor
and
ja
leave
pusha
rcl
icebp
rclb
push
aam
cwtl
in
mov
int3
jle
cmpsl
adc
pushf
fmul
xor
fistps
fimull
repz
lret
inc
sub
test
adc
mov
mov
push
mov
dec
jp
mov
repnz
outsl
les
push
in
rclb
sub
test
in
pop
imul
int3
xor
push
sub
xchg
or
cmp
dec
sbb
jecxz
out
ss
pop
push
cmp
pop
cmp
push
xchg
fcmovbe
icebp
imul
jnp
mov
in
test
mov
lret
gs
das
aam
cltd
push
mov
jmp
arpl
xchg
imul
fisubs
sti
call
dec
mov
lahf
pop
dec
push
hlt
inc
mov
in
cmp
and
sub
add
ficoml
inc
push
adc
clc
dec
mov
test
xor
cmp
cli
jl
xchg
dec
sub
cmpsl
xor
xor
sub
in
sbbl
ret
fwait
mov
mov
jae
ss
or
or
lahf
cmovb
cmp
clc
dec
sti
shlb
and
sub
test
cmp
stos
and
cmpsb
test
sub
jecxz
loopne
in
std
inc
xchg
pop
pop
and
inc
lahf
jecxz
inc
mov
jne
push
sar
or
add
test
jl
call
sbb
outsl
jp
mov
lcall
int
add
lods
movsl
cmp
xlat
cs
and
lea
inc
hlt
mov
and
ja
sbb
pop
cmc
mov
subl
sub
sahf
cs
xor
sbb
xor
sub
or
xchg
scas
lods
std
inc
cmp
and
testb
xor
add
xchg
xchg
dec
or
sahf
test
xor
sub
pop
orb
xor
ret
fcompl
lock
in
data16
pop
xchg
push
mov
cmc
jp
test
cli
cld
sub
push
es
xchg
testl
cmpsb
add
pushf
xchg
test
dec
mov
mov
das
xor
clc
sub
jg
stc
out
fwait
push
cli
jecxz
jb
int
sub
test
cmp
pop
sbb
lret
and
add
cmpsb
out
xor
sbb
mov
mov
jecxz
fsts
in
jg
mov
mov
fsts
xor
mov
cmp
inc
jae
movsb
cmp
sub
jne
icebp
jle
xchg
lds
loopne
sbb
stos
stc
lret
add
pusha
pushf
js
xchg
fsubs
es
aaa
inc
adcl
mov
and
pop
push
orl
jb
mov
inc
inc
xchg
push
cwtl
push
push
xor
inc
mov
inc
xor
push
add
jl
popa
cld
jnp
jecxz
xchg
adc
sbb
das
mov
push
bound
push
jle
dec
pop
arpl
ds
mov
in
push
mov
cmp
pop
out
mov
addr16
inc
cmp
pop
and
cli
int
jno
rcr
stos
and
xchg
and
mov
cs
lds
mov
adc
lret
stc
pop
jp
mov
sbb
pop
rcll
ds
add
mov
xor
push
imul
aam
xchg
vsubpd
pop
outsb
xor
repnz
idivb
sub
mov
cwtl
or
or
in
cli
and
test
fadds
gs
call
or
jg
into
stos
xchg
and
jb
out
mov
dec
call
loop
push
mov
hlt
fnstcw
ret
sub
mov
pop
orb
dec
sahf
mov
xchg
mov
pop
pop
pop
cmp
and
mov
lret
cmpsl
mov
call
ror
pushf
scas
inc
aam
insl
cmp
test
inc
ds
loope
cmp
push
imul
loop
pop
mov
mov
or
pop
push
cmp
jo
fnstcw
sub
cli
inc
mov
out
test
pop
fwait
add
popf
loope
pop
bound
sub
stc
popa
lea
sub
jecxz
xchg
stos
std
leave
push
sbb
imul
int3
mov
shr
rcrb
ljmp
jmp
sub
mov
lcall
rolb
and
test
mov
xor
mov
adcl
adc
jno
fdivrs
test
pusha
mov
mov
mov
mov
add
mov
insl
and
lock
pop
mov
pusha
jecxz
es
icebp
js
inc
dec
xor
jmp
imul
cmpb
dec
xchg
jnp
add
jae
into
pop
push
xchg
sub
mov
shll
add
das
test
cmp
lahf
and
jge
test
pop
xchg
xchg
ficompl
mov
repnz
scas
test
mov
in
subl
cmp
rorl
ret
in
sub
or
mov
sahf
inc
or
and
loop
or
scas
sub
outsb
inc
xchg
adc
pop
jmp
clc
adc
lods
push
pop
mov
ss
insl
xor
mov
push
ret
jno
arpl
sub
mov
sarl
xorb
ja
into
movsb
fsts
das
dec
jnp
hlt
mov
push
aam
inc
cmc
and
rcl
call
jns
vmwrite
lea
jns
pop
les
xchg
outsl
push
bound
mov
pop
jbe
mov
out
or
add
arpl
add
mov
pusha
stc
movsl
add
out
and
incl
lret
lahf
or
push
lock
mov
mov
jp
mov
jl
fcmovnb
mov
ret
scas
dec
adc
pop
or
pop
or
adc
insl
mov
mov
cltd
je
cmp
movsl
icebp
icebp
stc
jp
enter
test
das
lds
or
fcoms
and
xchg
push
add
fwait
xor
scas
mov
aaa
sub
ds
pusha
push
test
movsl
jmp
fsub
aad
sub
inc
push
icebp
pop
push
xchg
adc
jge
call
add
adc
sbb
dec
xchg
dec
in
outsl
or
xlat
pop
inc
iret
adc
push
pop
lahf
test
push
push
into
cmp
repnz
inc
cmpsl
popf
push
lahf
push
dec
adc
xor
add
andl
das
sbb
push
mov
ljmp
and
xchg
dec
leave
jbe
xchg
jmp
dec
mov
mov
lret
mov
xlat
repnz
lret
sub
popa
in
cmp
sub
mov
and
and
outsl
aas
jb
mov
ds
inc
not
mov
icebp
adc
pop
adc
aad
cli
mov
iret
ror
lcall
addr16
sub
movsl
push
pop
ja
aas
dec
xor
or
dec
roll
jmp
add
mov
sub
and
mov
stos
fisttpl
xchg
bound
dec
lcall
jne
xchg
xchg
scas
das
insb
inc
pop
gs
mov
xchg
inc
loop
jl
or
or
ja
fidivrs
push
mov
pop
into
adc
testl
insb
and
sub
sti
aaa
pop
xchg
jp
stc
lcall
jmp
clc
in
test
cmpsb
rep
fstl
mov
or
mov
loop
pop
inc
cli
or
loop
test
sub
loope
repnz
xchg
lcall
sub
push
cli
popa
insb
jo
xlat
aam
lret
cmp
fstl
xor
sarb
push
and
push
inc
out
orb
jecxz
pusha
inc
outsb
sbb
mov
aaa
lods
arpl
jbe
inc
xor
push
and
mov
adc
cmpsl
push
jno
movsl
and
xchg
in
pop
imul
push
fsubp
dec
stc
xorl
xchg
push
gs
add
jns
pop
pop
add
insb
xor
push
mov
in
cltd
cmpb
ds
icebp
push
and
lahf
ja
out
mov
movsl
jo
xchg
loope
push
loop
jmp
hlt
adc
loopne
scas
pop
jbe
pop
call
pop
cmp
into
fisttpl
cwtl
inc
inc
int3
mov
icebp
out
ljmp
pop
ljmp
notb
dec
imul
int3
jg
pop
sub
in
pop
cmp
sub
imul
sbb
das
nop
or
js
adc
push
imul
stos
sub
adc
xchg
xchg
subb
mov
push
sub
sbb
xchg
mov
pop
mov
and
fldl2e
xor
xor
xchg
dec
or
jne
adc
data16
mov
cmp
push
rclb
push
add
arpl
outsl
mov
sbbl
addl
mov
adc
dec
inc
mov
jmp
sub
sbb
add
std
or
adc
sub
adc
mov
push
jnp
sub
test
push
cmp
xchg
andl
mov
in
jmp
mov
int
das
es
dec
lahf
jmp
mov
data16
insb
dec
and
mov
mov
repnz
repz
aas
mov
dec
gs
mov
sbb
mov
cmp
hlt
jno
sbb
mov
dec
imulb
mov
inc
aas
repz
pop
int
mov
aam
and
test
es
in
pushf
icebp
outsb
test
mov
jg
ud2
les
roll
faddp
inc
in
out
mov
inc
jno
adc
jo
lods
out
mov
pop
fsubrp
dec
adc
out
fyl2x
lahf
jp
aas
pop
ss
adc
mov
hlt
jge
sub
decl
dec
push
aas
or
jmp
lcall
insb
jp
push
add
fiaddl
pop
mov
sbb
movsb
bound
enter
pop
addr16
jns
mov
test
cmc
jge
ficomps
loop
and
in
cmp
jge
mov
fimull
das
cmp
nop
fdiv
in
or
rorl
aaa
mov
iret
dec
out
int
ljmp
out
jno
rclb
add
shll
movsb
ds
lds
push
mov
sbb
push
jle
shl
shll
arpl
cmp
leave
mov
sub
jno
hlt
inc
loopne
mov
cmpsb
jns
dec
cmpl
pusha
jnp
xchg
int3
lods
arpl
inc
shlb
fs
pop
jp
push
das
or
sbb
jae
xchg
js
ja
mov
cwtl
and
adc
ds
cmp
aad
iret
ret
push
adc
push
stos
sub
add
out
xchg
ss
cmpl
and
into
adc
jae
les
enter
repz
aas
or
test
push
mov
das
sub
pushf
pop
fidivrl
mov
sbb
mov
jnp
xor
mov
or
movsb
push
jp
push
mov
inc
cld
in
scas
cmp
rorb
mov
inc
aad
and
shlb
adc
cltd
aam
popf
adc
pop
jno
ljmp
adc
negl
mov
and
and
cld
out
imul
repz
dec
scas
mov
in
out
push
sti
push
out
outsl
fs
lret
repnz
or
mov
movsb
scas
pop
mov
pop
add
jmp
mov
jo
inc
and
mov
add
fstpt
adc
rcrb
mov
add
mov
mov
xchg
lock
leave
pop
xor
lcall
fldl
mov
mov
pop
add
rol
xor
mov
lret
mov
out
cs
in
push
sbb
in
xor
adc
loope
scas
shrb
add
mov
mov
xchg
mov
mov
mov
mov
imul
mov
pop
xlat
mov
jns
sbb
shr
xor
popf
mov
das
or
xchg
jnp
std
scas
or
xchg
and
xchg
das
add
nop
mov
jl
fcompl
cmpsb
xchg
movsl
incl
pop
std
outsl
sub
push
lret
push
inc
push
or
popf
cwtl
push
pushf
dec
shl
mov
sbb
mov
inc
cmp
das
mov
loop
pop
jg
pop
sbb
add
fsts
sub
hlt
pop
test
adc
inc
dec
or
adc
in
or
out
and
push
fdivrl
push
sub
std
mov
and
rolb
lcall
dec
add
repnz
or
dec
mov
lods
outsb
jmp
pop
movsl
loop
mov
loop
jbe
cmp
inc
inc
mov
inc
xor
push
push
or
or
jbe
inc
std
mov
sbb
xchg
fisubl
std
push
out
jmp
cmp
fs
lret
fistpl
and
push
sub
dec
dec
nop
push
aas
add
pop
sbb
jne
scas
sbb
xchg
sarb
add
adc
mov
addb
movsb
and
jmp
cmp
mov
pop
jae
xor
mov
or
in
push
xchg
adc
jl
sub
mov
fwait
ss
sbb
fists
pop
jle
stc
js
in
fstpl
shrb
mov
inc
pop
mov
xchg
mov
xor
int3
push
insl
fcoml
mov
dec
sbb
loope
push
add
and
testb
aad
pop
mul
mov
sub
or
mov
push
add
cmp
push
out
jne
inc
mov
or
hlt
push
jl
subb
test
dec
repz
outsb
into
mov
mov
leave
mov
decb
xor
jns
call
pop
jmp
xchg
leave
dec
push
jnp
pop
cmpsb
push
inc
int3
mov
lods
imul
xor
ljmp
xor
pop
mov
aad
lahf
jnp
test
xchg
add
daa
mov
dec
ljmp
rcrb
jbe
out
insl
repnz
xlat
and
and
cmp
fwait
lea
xlat
pop
mov
in
arpl
outsl
mov
aad
test
mov
xor
push
push
repnz
cmp
adc
add
and
inc
outsl
jo
test
shlb
sbb
push
inc
and
or
in
stc
cwtl
in
inc
xchg
js
mov
dec
adc
add
or
scas
aas
add
pop
xor
filds
movsl
mov
mov
fiadds
stc
enter
insl
fstpl
dec
mov
ret
push
adc
shlb
ret
cmpsl
aaa
sub
jmp
test
mov
popf
sahf
sub
addr16
mov
add
xchg
and
in
mov
pusha
xor
call
leave
dec
adc
andb
pop
test
or
and
xchg
loop
pop
jp
cmp
lcall
lret
dec
jle
rcrl
sbb
adcb
push
dec
sub
popf
and
adc
push
lock
icebp
fsubp
ljmp
jp
pop
inc
fmull
out
push
push
cmp
shll
push
dec
and
cmc
or
and
cmp
xlat
push
mov
mulb
jl
test
icebp
lahf
push
aad
call
jns
gs
mov
repz
jp
scas
lds
jb
sbb
repnz
adc
sub
scas
bound
cmp
lret
push
push
ljmp
inc
mov
aad
push
loope
jecxz
enter
out
lcall
mov
repz
push
loope
movsl
push
in
push
movsl
sub
fcmovnb
outsl
dec
xor
icebp
mov
push
movsb
test
cmc
add
xchg
incl
add
repnz
or
mov
sbb
shll
adc
cld
ret
add
adcl
inc
mov
data16
in
mov
out
adc
sbbl
out
ds
jg
mov
stos
jns
and
cld
and
movsb
stos
mov
jmp
push
sbb
icebp
or
xchg
hlt
repnz
xor
outsl
mov
stos
outsb
rcll
jge
pop
je
outsb
mov
ficomps
mov
incb
push
pop
sbb
lods
mov
mov
xchg
stos
jbe
lea
adc
xor
int
mov
and
adc
repz
je
out
xchg
or
mov
mov
cltd
popf
stc
arpl
dec
dec
loopne
push
dec
leave
fisttpl
rcl
mov
ficoms
stos
dec
popa
push
lahf
insl
xchg
xor
sub
cwtl
mov
imul
inc
mov
loop
adc
cmp
dec
jo
dec
jmp
or
scas
push
repz
sbbb
jns
mov
lahf
dec
jecxz
mov
mov
sub
sahf
push
push
sbb
xchg
outsb
jb
in
mov
daa
pop
cmp
in
cmp
inc
shrb
push
push
popa
sbb
iret
stos
gs
je
mov
sbb
mov
shrb
outsb
cmp
or
add
cmp
mov
shlb
jecxz
adc
jnp
lods
xchg
adc
adc
sarl
gs
pop
adc
xor
in
jle
movsb
jnp
pop
push
insb
and
in
adc
and
pushf
js
or
adc
adc
cmpb
arpl
idivb
mov
mov
cltd
push
mov
clc
and
icebp
dec
sub
pusha
inc
xor
int3
cmpb
mov
xor
mov
out
mov
shrb
cmp
dec
sub
push
inc
rolb
rcr
stc
ret
dec
dec
lss
dec
stos
push
mov
sub
mov
repnz
das
xor
int3
mov
xchg
movsl
adc
std
pusha
aaa
hlt
inc
sbb
inc
imul
add
in
adc
mov
inc
dec
xor
call
and
mov
xchg
cltd
mov
enter
mov
mov
add
push
pop
movsl
push
fs
scas
sub
insb
mov
es
cmpsb
cmpsb
mov
inc
mov
lea
cmp
jle
inc
sub
jle
sub
xchg
hlt
pop
push
scas
cmp
mov
outsb
mov
jae
xchg
int3
divb
outsl
or
pop
je
test
clc
mov
mov
adc
mov
lret
mov
xor
pop
dec
aad
mov
adc
addl
shlb
stos
xchg
sbb
imul
cmp
sahf
cmp
aas
daa
lret
cmp
and
sti
das
add
add
arpl
push
sbb
inc
add
or
jbe
push
sub
ficoml
sub
jb
ja
in
sbb
mov
mov
mov
jmp
int3
dec
daa
cmp
pop
dec
cmp
sub
out
cltd
aas
mov
out
bound
jge
cltd
mov
rclb
repz
fsubp
mov
sub
mov
mov
call
imul
adc
pop
inc
nop
das
pop
test
jnp
inc
mov
das
inc
fsts
xor
add
jp
mov
cmp
fisttps
aad
pop
cmc
cmpsb
pop
ret
ficoml
push
jmp
fprem
pop
scas
shll
add
xchg
ds
and
xchg
sbb
xor
int3
jecxz
pop
testl
into
lcall
dec
adc
negl
cli
nop
inc
lret
pop
dec
icebp
sbb
xor
or
or
fcompl
xchg
cmp
mov
int
daa
ret
add
adc
imul
jle
repnz
lods
jmp
mov
push
ds
adc
sub
pop
stos
mov
jae
adc
mov
pop
negl
push
fcmove
push
sub
je
jno
inc
xor
xor
test
cs
sbb
sbb
popa
cli
cli
in
pop
xchg
ret
out
dec
in
pop
mov
ss
pop
sub
vmwrite
sub
sub
aas
ss
data16
out
aam
ret
mov
jmp
outsl
inc
pop
jae
sub
jge
imul
push
shr
ja
or
mov
jne
aas
xchg
loope
mov
pop
and
mov
jmp
pop
mov
xor
dec
add
dec
jae
testb
insl
sbb
inc
xchg
ds
rorl
xchg
inc
xchg
aaa
add
jbe
sbb
jl
and
fs
add
lcall
js
arpl
pop
lea
fists
xchg
cmp
sub
roll
adc
jecxz
jae
or
mov
or
push
ja
xchg
js
insl
inc
in
and
push
or
outsl
xchg
test
ror
pushf
bound
lock
cmp
mov
repz
mov
into
mov
xor
jbe
fdivrl
scas
jg
or
mov
mov
cltd
lea
xor
addl
mov
mov
mov
add
mov
out
ds
imul
lods
or
jae
inc
stos
ja
and
fists
test
adc
and
pop
pop
test
int
scas
orl
call
sbb
jo
inc
call
and
inc
jle
scas
xchg
fdivrs
ja
addr16
fldt
je
ds
out
mov
or
sbb
cmp
and
jmp
sub
jge
stos
jb
movsb
in
cld
ret
bound
bswap
jae
cmpsl
jno
das
adc
in
adc
cmpsb
lahf
dec
gs
test
ficomps
sub
pop
cld
stc
lods
lahf
ljmp
dec
jne
inc
scas
lahf
push
das
and
jl
cmpsl
dec
and
jb
mov
into
push
pusha
or
adc
jnp
push
sub
pushf
dec
bound
adc
fs
mov
adc
mov
out
and
sahf
xchg
popa
sti
mov
jmp
push
add
push
push
mov
push
insl
call
not
shll
out
sbb
mov
adc
or
ret
vpsadbw
ljmpw
rcr
mov
icebp
jl
mov
mov
in
inc
mov
sbb
test
test
in
iret
divl
inc
lods
ljmp
insb
add
xchg
pop
scas
push
xchg
fdivrs
mov
das
lcall
scas
enter
test
mov
lods
mov
leave
push
out
cmpl
inc
sub
fld
or
mov
pop
out
dec
cmp
xor
sub
nop
inc
cmc
stos
add
xor
call
add
into
scas
sub
es
dec
cld
sub
xchg
pop
jp
pusha
jb
mov
or
data16
outsl
seta
sahf
jns
cld
jp
stos
sbb
xchg
jb
adc
adc
ss
push
sub
imulb
out
xchg
push
mov
pushf
pop
xchg
jp
in
insl
and
mov
mov
out
fmuls
dec
pop
push
movsl
lret
mov
inc
lret
inc
cmp
mov
leave
jb
sub
pop
jecxz
sahf
add
xor
sub
pop
cmp
test
push
in
mov
sbb
mov
je
or
mov
pop
sti
mov
dec
xor
fidivrs
fwait
sub
dec
fsubp
insb
in
lahf
sub
sbb
adc
push
sub
rcrl
pop
aas
call
incl
rcrl
scas
jmp
mov
repnz
in
xchg
inc
std
sbb
mov
mov
xor
jle
lahf
arpl
pop
out
mov
cld
pop
cld
mov
jae
std
test
out
mov
cmp
aaa
lahf
jo
sbb
lock
jnp
jo
dec
test
cltd
std
or
aas
stos
icebp
insb
mov
xchg
xlat
paddb
mov
fistps
add
push
fidivs
cmp
sti
xor
aad
pop
repz
into
mulb
call
repnz
lods
mov
xor
div
cmp
jne
out
cmpsb
imul
mov
adc
jmp
addr16
jmp
add
stos
sub
and
adc
jo
inc
sbb
ret
insb
dec
jne
ret
sub
mov
mov
je
clc
into
dec
out
or
sbb
les
int3
and
jae
enter
xor
aaa
or
sub
adc
test
loopne
out
cs
outsb
out
popl
outsb
jns
cmp
pop
add
fnstcw
lock
add
xchg
mov
mov
ds
mov
push
out
into
cmp
test
movsb
repz
cld
gs
mov
stos
cli
clc
rorl
mov
mov
mov
xchg
adc
mov
mov
pop
dec
jno
ret
dec
xor
lods
add
sbb
in
xchg
stos
loop
inc
jno
and
movsb
sti
and
or
dec
cmp
ds
xlat
shl
sub
jbe
lret
int
in
xchg
sahf
js
mov
inc
mov
dec
sbb
outsb
lods
jbe
mov
xor
add
and
outsl
cmp
loop
pop
bound
jne
movsb
subl
dec
test
sbb
bound
push
push
int
jb
pop
outsl
inc
out
aam
jnp
fwait
ret
cmp
mov
push
mov
iret
pop
cmp
mov
insb
and
add
mov
outsl
fwait
loop
sarb
pop
sub
mov
xchg
sub
inc
or
movsl
cld
inc
mov
jnp
clc
test
int
les
lret
jne
or
shlb
mov
lds
out
test
push
sbb
fwait
push
mov
movsl
roll
popf
jle
inc
sbbl
dec
push
popa
jns
mov
pop
cwtl
inc
int3
ds
les
and
stos
in
mov
movsl
lea
xchg
rclb
sbbb
scas
mov
push
loope
shrl
movsb
xor
fidivl
jbe
in
outsl
imull
xlat
sub
jb
test
popa
jno
les
or
fists
int
pop
cs
mov
in
sub
sbb
sub
inc
pop
xchg
and
xchg
sub
mov
dec
scas
mov
inc
mov
or
xlat
xchg
fistpl
and
popa
fwait
pop
rcl
sub
xor
xchg
adc
mov
or
in
cmp
test
loope
stc
les
dec
mov
std
daa
out
rorb
cli
dec
or
add
test
in
jns
testb
stc
mov
inc
adc
or
pop
gs
scas
imul
sbb
inc
loop
gs
js
inc
sub
scas
fisttpll
sti
jnp
mov
cmp
sub
out
in
cmp
and
push
push
out
bound
mov
int3
sbb
mov
into
mov
pop
add
dec
pop
lret
in
mov
adc
icebp
dec
jns
cltd
mov
stos
fwait
loop
call
and
jmp
jnp
shrb
push
inc
push
lock
dec
stos
cmc
ret
push
mov
and
sub
dec
subl
cmp
je
lea
in
fsub
imul
dec
xchg
out
cmp
popf
sub
sub
rcll
je
add
cmp
xor
mov
jg
xor
out
pop
and
adc
shll
notl
xchg
out
jle
mov
lret
and
sub
clc
dec
data16
add
in
or
xchg
pop
inc
aad
rclb
stos
fdivp
xchg
push
pop
mov
cmc
outsl
sti
cmp
jmp
jl
dec
mov
jecxz
sub
ret
cmp
cltd
mov
addr16
repnz
push
and
bound
xchg
int
mov
lret
ljmp
stc
dec
popf
dec
clc
or
lods
push
dec
sbb
pop
jge
jg
das
adc
aaa
xchg
rorb
mov
icebp
xchg
dec
cmp
lods
xchg
iret
dec
dec
dec
mov
adc
iret
call
stos
roll
jl
outsb
clc
cmp
add
loopne
fdivl
add
push
mov
sbb
stos
fpatan
adcb
dec
or
cmpsl
sub
mov
and
mov
stos
mov
pusha
mov
mov
mull
in
add
pushf
add
lret
jge
mov
mov
insl
xor
icebp
cmpsl
mull
adc
mov
or
shrb
jle
mov
aas
mov
fs
or
cmpsb
lret
ljmp
fdiv
in
std
lea
inc
and
leave
aad
cmp
addl
cmc
xchg
mov
xchg
pop
sub
jg
and
jmp
test
adc
les
push
sbb
xchg
xor
orl
inc
cmp
mov
es
mov
decb
jge
lds
inc
dec
pop
inc
sub
sub
mov
nop
es
cltd
mov
sbb
cmp
jae
sbb
ljmp
lds
push
inc
pop
fistps
sbb
cld
jl
push
addr16
cmc
sub
dec
and
daa
loopne
mov
adc
rorb
pop
mov
push
in
lret
leave
outsl
and
testl
mov
xchg
lret
and
pusha
cmp
leave
fdivs
jnp
int3
cmc
or
xchg
cmp
push
mov
std
leave
inc
pusha
or
test
mov
xlat
std
inc
imul
mov
movb
ret
jl
sbb
imul
pop
lcall
aas
cmp
push
mov
ss
add
outsl
clc
stos
in
adc
cmc
fistpll
lret
loopne
xchg
insl
iret
push
mov
xchg
push
leave
test
mov
push
xor
data16
push
push
push
cld
sbb
add
push
and
sahf
add
push
fdivs
pop
sub
push
std
sbb
enter
test
inc
lret
jg
cmp
cmpsl
mov
ljmp
add
adc
jle
je
mov
or
push
jb
std
and
sub
aas
leave
idivl
push
test
push
xor
and
sub
or
and
ljmp
mov
push
cmpb
adc
mov
mov
mov
lea
xor
mov
mov
mov
sub
push
mov
xor
mov
shll
ja
outsl
lds
movsl
repnz
int3
test
icebp
mov
jmp
call
dec
push
mov
pop
pop
xchg
pop
jge
mov
enter
or
test
or
ja
push
mov
xchg
out
mov
and
rcrb
mov
mov
push
aam
fadds
mov
jb
cmc
aad
fnstsw
and
cmc
sub
les
xchg
outsl
mov
add
xor
and
push
gs
test
cltd
jmp
pop
or
lds
repz
cwtl
adc
leave
adc
fdivl
lcallw
aas
jo
push
xor
cwtl
fs
lret
in
sub
lret
sub
pop
mov
insl
fst
cwtl
cmp
push
in
cli
xor
xor
pop
or
inc
popf
repnz
shll
outsl
int
into
mov
loop
pop
or
cmc
insb
sub
pop
aam
sub
in
inc
jl
jmp
clc
inc
aad
jnp
adc
dec
outsb
scas
sub
lahf
xchg
jge
add
sub
in
push
jge
dec
inc
xor
imul
mov
mov
ljmp
mov
insb
gs
shll
stos
mov
add
cmpsl
outsb
scas
dec
pushf
lods
test
jecxz
add
pop
or
xlat
adc
push
mov
lcall
ljmp
addps
sbbl
adc
iret
outsl
jb
jp
inc
test
sbb
xchg
je
idiv
outsb
ds
xor
cltd
mov
les
daa
adc
int
mul
xlat
inc
ret
cli
inc
dec
inc
outsb
xor
cwtl
or
dec
rcr
movsl
push
push
mov
mov
lods
mov
outsl
mov
movsb
imul
push
xor
fucomip
push
aas
adc
sub
ljmp
shll
into
adc
adc
xor
loope
imul
push
push
xchg
sbb
mulb
lret
jg
int
fnstenv
cwtl
inc
pop
mov
mov
rcrl
or
push
cmpsb
out
stos
inc
lods
cmc
jbe
jno
scas
add
scas
sub
jmp
icebp
rol
data16
les
mov
inc
aad
lret
jbe
fildll
cmp
add
adc
fsub
fsub
jne
cmc
xchg
fidivs
cmp
loope
loopne
pusha
sarb
call
push
or
test
dec
sbb
incl
je,pt
inc
push
in
mov
xchg
gs
pop
pop
sahf
pop
mov
insb
or
popf
hlt
sub
sbb
mov
push
jg
fmul
inc
add
pop
mov
imul
mov
and
xor
push
or
or
aad
inc
mov
into
sub
mov
jne
mov
imul
out
xchg
push
mov
jnp
push
mov
decb
in
and
adc
cmpl
or
scas
cmc
out
inc
jns
pusha
pop
push
pop
jae
cmp
and
cmp
call
push
dec
and
repnz
and
das
cmc
inc
mov
out
aas
or
lods
jae
ret
jns
fbld
push
or
pop
lods
stos
jmp
add
dec
orb
adcb
sub
mov
shlb
fldl
cmp
pop
inc
and
mov
jge
call
jecxz
inc
push
sub
pusha
push
nop
js
into
incl
adc
and
loope
jp
outsl
dec
mov
fstpl
enter
xchg
inc
xchg
mov
push
sbb
outsl
insb
sbb
pop
xchg
push
out
adc
xchg
inc
jge
pop
xchg
daa
test
rorb
sbb
cmpsb
add
lahf
bound
inc
or
pop
dec
movsb
pop
cli
dec
dec
mov
pop
inc
sbbb
add
rcr
cmp
shl
aam
mov
icebp
inc
pop
jl
or
cmp
in
mov
cmpsb
fwait
cli
insl
dec
sbb
push
jnp
adc
in
xor
mov
xchg
scas
mov
push
lcall
cli
pop
pushf
adc
mov
insl
fisttpll
jns
cmpsl
popf
nop
insl
add
les
xor
push
sbb
push
mov
dec
and
inc
test
int3
and
icebp
sti
sarl
xor
outsb
pushf
ret
sub
fldenv
in
orl
push
imul
sbb
sub
mov
push
mov
call
mov
or
xor
or
insb
push
fucomip
enter
jne
andl
xchg
add
bound
cmpsb
shrl
arpl
jg
repnz
jge
pop
ljmp
insb
jle
mov
push
repnz
jle
mov
enter
xchg
aas
inc
mov
mov
pop
loopne
cld
mov
pushf
or
xchg
bound
sub
addr16
or
add
popl
stos
sub
and
mov
aam
jecxz
inc
hlt
mov
movsb
loope
inc
mov
pop
xlat
mov
cmpsl
in
mov
adc
sbb
ficomps
ljmp
sbb
dec
inc
jl
xchg
cmovnp
addb
xor
or
mov
inc
cmp
push
jb
dec
jnp
mov
mov
xor
arpl
fists
out
pushf
xchg
sub
cltd
jnp
sub
out
cs
fisttpll
addr16
xchg
xor
inc
push
movsl
lock
inc
leave
mov
lret
aam
addb
sarl
negb
inc
jp
insb
cld
daa
xchg
bound
sub
sbb
adc
test
push
add
and
aad
sbb
cli
xchg
push
push
imul
add
ud1
pop
fsubrs
pop
ja
popl
lds
je
popa
vpavgb
and
shll
pop
nop
mov
push
ret
jge
imul
call
bound
sub
mov
loopne
ja
cmp
clc
xchg
xchg
sti
out
addr16
pop
shr
stc
rcrl
or
outsl
push
shlb
and
pop
and
xor
push
jp
test
fstl
loop
xor
mov
jbe
test
xchg
popa
jo
or
mov
ljmp
dec
sahf
inc
dec
mov
outsb
jecxz
mov
jge
fsubs
sub
sbb
inc
push
sub
ret
jg
sbb
add
mov
into
gs
inc
dec
aam
add
lods
std
fidivrs
jbe
and
mov
repz
dec
and
sarl
xlat
addps
shrl
push
call
subl
mov
add
xor
jo
and
fcoms
adc
das
shlb
adc
cli
pop
push
and
loope
mov
stc
mov
ficoml
mov
insl
mov
sbb
aaa
adc
sbb
inc
out
in
mov
sarl
push
inc
add
or
nop
pop
dec
test
jne
clc
gs
mov
negl
jbe
dec
std
pop
cs
pop
add
mov
popf
push
cmp
inc
pop
adc
lds
xchg
imul
in
loop
in
xor
cs
cmp
mov
jo
decb
pop
jo
and
stos
shrb
dec
mov
bnd
mov
push
adc
ficompl
call
cld
aaa
sub
imul
shl
dec
pop
nop
mov
cld
or
cld
addl
in
ret
das
xchg
adc
or
jnp
inc
inc
fstpt
outsb
mov
fwait
movsb
in
idiv
mov
dec
push
sbb
insl
mov
lods
jecxz
or
ss
ss
and
adc
mov
and
rcll
push
stos
ret
mov
inc
sahf
mov
jne
daa
add
sbb
jo
adc
and
sbb
rcrb
cmp
mov
lds
sub
inc
add
mov
jnp
outsb
xchg
jno
adc
sub
outsb
mov
cltd
movsb
inc
daa
hlt
cmp
xchg
cmpsb
mov
cli
in
cs
sub
nop
pop
flds
hlt
jns
shrb
add
ficomps
mov
or
xchg
pop
icebp
into
inc
or
add
mov
and
int
call
xchg
push
fwait
dec
or
scas
popf
mov
or
pop
clc
push
ret
dec
fiaddl
jnp
inc
sahf
push
mov
cld
call
sub
scas
cltd
sti
hlt
stos
fiaddl
jae
add
repnz
test
mov
shll
dec
mov
popa
mov
into
gs
add
pop
je
push
mov
sub
rol
add
mov
pushl
test
pop
out
fwait
xchg
pop
loop
jp
out
adc
push
jp
lods
pusha
rcl
shl
jecxz
stos
pop
in
sarb
rorl
sub
dec
mov
mov
xor
mov
or
pop
jno
jge
mov
cmc
jnp
push
cwtl
fstpt
push
pop
lcall
aad
pop
in
arpl
mov
shrl
scas
sbbl
repz
mov
adcb
jnp
lcall
out
daa
or
mov
add
mov
lcall
das
pop
cwtl
or
mov
jae
cmp
push
cld
sbbl
leave
xchg
test
clc
popl
push
push
pop
sub
pop
cwtl
mov
lret
clc
mov
inc
mov
fs
jl
xor
add
pusha
xorl
subb
mov
push
dec
or
pop
outsb
add
pop
inc
add
cli
sbb
inc
lds
pop
lds
ss
or
mov
lods
mov
outsl
xchg
cmp
fistps
aad
repnz
ret
lds
sub
int
out
lahf
movsl
mov
cli
pop
dec
popa
je
lods
daa
mov
pop
mov
std
xor
cmpsb
pop
jle
aas
cmp
cmc
dec
xor
adc
dec
pusha
or
or
mov
xchg
sbb
add
pop
pop
or
jg
or
fidivrs
dec
or
inc
push
movsl
xchg
rcl
adc
sahf
enter
ja
in
add
std
cmp
jle
adc
xchg
movsb
push
jmp
aaa
ja
pop
es
adc
add
xor
sbb
jmp
cmpsl
adc
mov
imul
das
fcomi
adc
fcmovnb
imul
lods
aaa
dec
call
sub
aaa
in
sub
cmc
xchg
jg
rorl
stos
lret
leave
mov
cmpsb
ret
fidivrl
out
stc
mov
repz
js
cltd
fistps
stos
cld
mov
call
in
sahf
jmp
sahf
sub
pop
sub
dec
and
call
and
lret
xchg
xor
add
mov
cmp
mov
xchg
lahf
jecxz
xchg
pusha
xchg
inc
inc
mov
or
scas
div
inc
push
data16
inc
mov
cmp
add
cmpsl
or
xchg
gs
imul
adc
xlat
add
imul
jecxz
sub
js
loopne
add
cmc
add
mov
icebp
cmpsb
mov
call
int
mov
fwait
cld
jb
sbb
dec
mov
xor
push
push
push
inc
inc
jmp
push
jbe
cmp
adc
xor
mov
les
data16
lret
add
ret
in
mov
mov
pop
jb
icebp
and
xchg
inc
pop
ja
add
adcb
stc
mov
mov
shl
xchg
call
mov
xchg
in
fistps
mov
adc
aad
orb
and
push
xlat
jbe
faddp
cmp
call
mov
push
test
dec
sub
mov
mov
jne
and
jp
adc
push
iret
xchg
test
lock
mov
push
daa
mov
xchg
int
mov
movl
push
pop
dec
fcoms
sbb
jno
fsubrl
jecxz
jl
cmp
loop
dec
fmul
pop
inc
sub
lds
cmp
leave
jecxz
push
add
jb
dec
dec
loopne
sti
pop
lods
fdivr
scas
push
mov
push
sub
not
rol
dec
imul
xlat
inc
inc
xor
adc
or
ds
xchg
imul
push
test
pop
cmp
aam
fdivrl
adc
push
repz
push
loop
lcall
add
and
loopne
add
and
fucomp
sarl
adcb
mov
mov
jge
push
lods
js
dec
push
dec
repnz
adc
jno
add
inc
fs
dec
mov
lods
int3
lods
pop
imul
hlt
shrb
stc
test
pop
stos
in
jl
loopne
jge
cmpsl
mov
sahf
sub
lds
shrl
lds
lahf
insb
mov
jle
mov
cli
adc
cs
cmc
sub
scas
and
leave
test
dec
sub
pop
dec
cmp
xchg
pusha
fisttpl
inc
dec
sbb
stos
sub
push
addb
jb
ret
cwtl
mov
test
xchg
mov
loope
xchg
cmp
dec
test
stc
cwtl
adcb
push
mov
xchg
xchg
sub
out
xor
mull
hlt
mov
fwait
mov
adc
or
daa
adc
out
push
jo
faddl
in
rorl
or
jno
cmc
leave
xchg
in
xor
insl
out
inc
and
fdivrl
cmp
inc
add
stc
xchg
sub
inc
test
ja
sbb
cwtl
inc
pop
jge
adc
xorl
cmp
or
jns
and
scas
test
icebp
sbb
mov
mull
add
and
out
repnz
test
add
iret
cmpsb
xlat
add
pusha
lods
dec
ret
pop
in
mov
shlb
push
popf
mov
mov
mov
and
repz
lcall
mov
das
inc
inc
int3
jg
or
and
and
inc
ficomps
xor
or
adc
and
cltd
shl
jle
jbe
and
jo
call
mov
or
fs
es
sarl
jae
es
cmp
test
push
jle
and
or
fisttpl
mov
ja
mov
sbb
adc
jno
stos
push
out
mov
hlt
push
outsb
sahf
push
jae
inc
mov
mov
int3
fsubrp
lds
adcb
push
jno
ljmp
dec
ror
cld
out
out
test
imul
jbe
iret
std
jecxz
into
out
push
shl
jmp
inc
dec
sub
das
inc
sub
xchg
sahf
leave
mov
aas
xor
xchg
cmp
jge
arpl
xor
add
inc
dec
repnz
inc
call
mov
out
or
iret
xor
inc
es
push
or
out
popa
and
imul
inc
movsb
xor
fsubl
sub
pushf
in
jl
int
or
adc
or
out
outsb
inc
into
sub
mov
sbb
sub
insb
lods
xchg
jg
push
jb
es
stc
add
push
push
xchg
mov
pop
inc
out
xchg
push
jl
push
mov
sbb
nop
xlat
mov
es
xchg
aas
xor
pop
inc
imul
dec
scas
jg
xchg
into
jo
pop
aad
idivl
xchg
dec
repnz
adc
insb
xor
jge
pop
cltd
mov
add
cmp
mov
mov
int3
dec
imul
cmp
or
jmp
aam
mov
mov
imul
push
add
sahf
push
jo
into
cmp
imul
xor
push
push
nop
lahf
loop
adcl
pop
or
mov
outsb
addr16
call
cs
scas
call
add
lods
push
fsubr
xor
xchg
mov
mov
push
adc
fcmove
ljmp
xchg
in
mov
xor
call
push
xor
sbb
push
sub
pop
mov
pop
xor
iret
jle
fdivr
lea
popa
jns
enter
popf
je
sub
mov
fnstcw
pop
addr16
mov
cmp
pushf
movsl
lahf
add
jle
cmp
adc
push
mov
gs
out
out
and
mov
addr16
into
scas
mov
ds
movsb
push
cmp
les
cmp
xchg
push
data16
jae
fwait
dec
sahf
pop
sahf
repz
push
fsubrl
in
clc
out
jo
xor
repnz
fmuls
mov
stos
pop
xchg
or
xchg
push
lahf
arpl
dec
xchg
xor
and
cmp
mov
pop
cwtl
sbb
test
dec
pushf
mov
xor
mov
sbb
divb
xor
out
testl
cmp
jne
ret
dec
iret
inc
cli
or
scas
and
mov
jmp
sbb
imul
nop
fdivs
fwait
rcr
mov
mov
ss
mov
js
enter
sub
roll
das
pop
subb
lret
add
pop
push
cld
out
andl
dec
adc
call
adc
shlb
insb
shr
push
mov
cmp
mov
or
add
mov
loop
mov
stos
push
jmp
in
add
sub
add
insl
push
cli
les
popl
mov
lock
iret
cmpsl
mov
repz
sbb
xchg
jns
in
js
xchg
scas
test
mov
mov
rcrb
or
dec
or
aam
orl
xlat
dec
jne
cs
fdivrl
dec
jg
aaa
mov
sbb
test
lods
andl
icebp
rsqrtps
js
push
pop
repnz
pop
insb
popf
arpl
jge
mov
arpl
mov
pusha
ret
addb
inc
cmp
and
ficomps
push
clc
je
xlat
mov
or
add
mov
sub
pop
dec
jnp
mov
xchg
push
mov
jbe
xor
xchg
mov
adc
cli
add
js
dec
inc
xchg
xchg
jecxz
in
push
adc
mov
xchg
xor
add
mov
mov
aas
lods
pop
pusha
movq
dec
int3
jmp
add
das
out
mov
jle
imul
pop
lock
sbb
push
shlb
out
adc
cmpsb
in
int
scas
pop
fsubrp
mov
ret
out
add
lret
jns
js
insb
adc
sahf
cmp
imul
mov
dec
pusha
lret
sub
cmp
sbb
rcll
push
stc
mov
jnp
and
jno
mov
decb
icebp
lods
cmpsl
adc
xlat
jns
xor
in
shrb
xor
inc
out
mov
inc
cmp
lcall
fnsave
orb
cmp
or
dec
cli
adc
sbb
add
adc
icebp
cmp
cwtl
xor
xchg
jne
in
mov
pop
ret
pusha
lea
add
xchg
out
mov
push
std
and
jb
jg,pn
fs
lcall
scas
loopne
into
fiaddl
xor
imul
mov
popf
lea
lret
cwtl
and
adc
aas
outsl
xchg
stos
pop
je
mov
fcoml
loop
or
cld
fsubrs
testl
scas
sbb
mov
push
mov
cmp
cmp
rcr
cmp
iret
jns
xchg
xchg
add
and
fcoms
fidivl
sub
lods
int3
push
mov
jne
lahf
mov
push
adc
ja
cmp
mov
inc
sbb
aas
sbb
cmpsb
jns
lods
test
pop
mov
xor
xchg
cmp
jle
inc
xchg
fcompl
imulb
dec
les
lds
decl
dec
sub
mov
push
mov
dec
and
cltd
shll
jecxz
popa
lret
mov
jne
rcr
sbb
pop
rep
jge
cwtl
jecxz
insl
push
fcoml
adc
mov
xchg
gs
inc
xlat
cmp
addr16
xchg
mov
dec
lods
aam
frstor
shr
jle
ljmp
pushl
cmp
movsl
fucompp
jbe
movsb
ffree
clc
stos
push
mov
mov
loope
lcall
sub
adc
mov
mov
sbb
in
xlat
and
mov
inc
dec
idivb
out
adc
xlat
sbb
movsl
inc
xor
jo
testb
push
ja
jp
or
cs
stos
mov
fisttps
or
jns
mov
add
sub
leave
xor
lcall
pop
shlb
mov
subl
sub
mov
scas
scas
test
mov
cmp
or
out
sub
daa
addr16
xchg
negb
rcr
xchg
sbb
es
push
xor
enter
xor
fmul
cld
xchg
push
fsts
lea
imul
shlb
test
out
cmp
cmc
pop
ja
sbb
jle
cmpsb
jnp
mov
cwtl
adc
leave
adc
mov
iret
iret
push
jmp
pop
mov
sbb
jbe
lock
fnstcw
lea
imul
cmp
ljmp
bound
in
fldenv
fadds
imul
mov
mov
gs
insb
imul
xor
mov
outsb
jle
idiv
mov
xchg
daa
andb
rcrb
adcl
pop
mov
insb
dec
cwtl
imul
call
cwtl
addl
cmpsl
mov
aad
push
out
out
clc
shlb
dec
call
sub
sub
scas
cmpsb
popf
mov
rorb
mov
test
mov
add
out
xchg
sub
into
out
inc
pop
or
jg
std
sbbl
mov
inc
xchg
adc
xor
cli
push
movsb
aas
shrb
adc
or
aam
mov
frstor
xor
mov
inc
outsl
dec
mov
lcall
pop
inc
or
popf
ffree
push
push
loopne
je
xchg
insb
cld
aad
mov
lea
dec
xor
adc
jbe
jl
enter
fsubrs
cmp
test
ja
clc
mov
or
inc
enter
test
adc
adcb
addb
iret
movsl
mov
inc
push
pusha
arpl
mov
push
fwait
aaa
int3
cltd
rorl
push
cmp
pusha
add
bound
aam
out
mov
sbb
mov
pop
adc
loop
test
insl
cmp
jge
sub
add
add
in
loope
mov
jg
iret
jno
lods
adc
add
fmull
stos
imul
in
ss
push
push
cmp
cmpsb
mov
test
out
std
xchg
mov
mov
adc
or
xchg
mov
mov
mov
sbb
xchg
leave
sub
inc
inc
pop
outsb
dec
xchg
xor
sub
mov
jecxz
je
push
add
je
lds
pop
sahf
popa
adc
cmp
scas
ficoml
sbbb
sub
movsb
je
in
cld
fistpl
nop
dec
fwait
ret
cwtl
dec
mov
incl
xor
lods
jle
and
pop
dec
add
push
lahf
cmpsl
sub
pop
mov
push
mov
dec
nop
pop
and
jno
ret
dec
cmp
adc
pop
iret
scas
lahf
xor
mov
add
inc
mov
sbb
sbb
aad
pop
and
jmp
in
fiaddl
shlb
add
cli
fdivl
adc
sbb
enter
dec
vmovntdq
repz
mov
test
outsb
ds
jnp
sbb
hlt
arpl
mov
and
xchg
mov
mov
mov
sub
dec
push
lods
mov
add
push
xorb
adcb
fldl
adc
jp
aas
cmp
enter
inc
dec
mov
ds
push
mov
jle
inc
push
je
mov
mov
xchg
push
push
xchg
and
inc
scas
adc
mov
jno
enter
fimull
jnp
jl
inc
mov
ret
pop
into
ret
sub
aas
shl
ljmp
cmpsl
mov
arpl
int
pop
inc
shll
cmp
xchg
lahf
decb
int3
mov
addr16
inc
je
movsb
jo
cltd
jp
comiss
push
mov
lret
pop
outsl
add
cmp
pop
xor
lods
out
stc
popf
mov
je
cmc
imul
sbb
cld
test
repnz
jo
fwait
xor
cmp
xchg
insb
pop
popf
lods
jp
ljmp
sub
test
mov
push
and
shlb
pop
mov
ja
aas
xor
xor
jne
bound
out
popa
shll
imul
mov
xchg
stos
sbbb
call
xchg
push
fnsave
inc
add
jge
jnp
int3
test
daa
mov
xchg
fwait
ret
or
add
mov
imul
clc
xchg
jb
movsl
cltd
xchg
inc
add
inc
pop
adc
jns
xor
mov
movsl
roll
dec
outsb
fbld
mov
lods
sbb
gs
cmc
leave
sbb
leave
sbb
jbe
imul
mov
jge
cmp
cwtl
adc
or
adc
pop
xor
out
mov
jne
mov
nop
loop
adc
and
push
cmc
lods
and
jg
mov
dec
cmp
adc
clc
and
and
fwait
mov
mov
int
mov
push
xor
insl
fidivrl
cli
loop
cmp
aad
clc
aam
and
pop
leave
cmp
cwtl
clc
cli
shlb
shl
out
push
rcrb
mov
es
sbb
or
pop
adc
ss
xor
lea
insl
roll
rcrl
gs
in
jg
push
add
fldt
mov
xchg
jmp
fdivrs
mov
jl
or
fisubrs
jle
jae
cmp
jle
data16
iret
cmp
add
out
jl
fwait
jecxz
not
mov
cmp
jecxz
sub
addr16
inc
bound
pop
jbe
cmp
mov
pop
push
mulb
jge
jae
ret
jecxz
leave
or
cmp
or
mov
and
imul
call
add
jbe
int
xor
inc
popa
testl
ljmp
in
popl
and
mov
sbb
mov
ffreep
mov
into
test
xor
data16
imulb
add
pop
jno
xor
push
popa
and
lret
div
js
push
push
ljmp
cltd
and
cli
sahf
xor
jecxz
daa
test
sbb
jns
not
mov
add
cmpsl
cmp
mov
mov
push
mulb
loopne
inc
jb
and
adc
jle
inc
icebp
cmp
leave
ja
sbb
int3
xchg
mov
je
mov
sub
addr16
jmp
je
inc
mov
testl
test
ja
lahf
mov
push
push
pop
nop
dec
lcall
lods
add
mov
lahf
stc
rcrl
inc
add
inc
xchg
adc
pop
mov
inc
mov
add
jne
cs
ret
pop
ss
gs
loopne
fxch
and
in
loopne
scas
mov
xor
push
in
and
lods
pop
xchg
shlb
mov
push
jmp
and
jecxz
ja
out
mov
daa
sbb
mov
mov
test
push
and
mov
add
gs
into
and
in
andb
ret
push
mov
inc
in
mov
inc
cmp
sti
add
sub
adc
xor
or
pop
mov
dec
imul
int3
cmp
jnp
js
pop
adc
imul
jg
aaa
notl
pop
and
icebp
add
bound
fbstp
in
scas
xchg
inc
push
enter
je
dec
fcomps
sbbb
mov
les
sbb
pop
std
add
and
mov
pop
int3
stc
adc
orb
les
data16
lods
lret
lods
outsl
iret
divl
xor
inc
imul
sub
in
push
repnz
int
es
and
inc
divl
aad
inc
cmp
dec
cli
jno
data16
test
pushf
dec
adc
sbb
les
lods
push
lods
and
xor
push
ljmp
scas
xor
pop
outsb
dec
lds
test
ret
jmp
pop
lods
cmp
setb
mov
push
les
ret
push
add
test
inc
shrb
mov
stos
mov
lods
sbb
es
dec
inc
mov
or
iret
mov
jne
test
outsl
aaa
mov
fildl
int
push
cmp
or
andb
std
push
adc
adc
pop
test
rcrb
in
xchg
daa
fdivrs
dec
nop
pop
xor
loope
dec
insl
int3
mov
movb
rcrl
cmp
cmpsb
xchg
lret
cltd
or
mov
decb
cmp
and
cltd
add
mov
test
sbbl
xchg
stos
lret
mov
sqrtps
loop
dec
sub
movsb
add
loope
ja
cli
or
push
jnp
adc
adc
sub
push
sub
dec
std
fldl
jnp
lock
lret
imul
jbe
mov
fsubr
sbb
ss
mov
popf
mov
mov
sub
and
fwait
loopne
cltd
xchg
imul
scas
pop
pusha
jns
cld
mov
in
cli
jmp
mov
rolb
popf
or
imul
js
mov
xor
ljmp
mov
sbb
pop
inc
cmp
lods
dec
adc
pop
lret
popf
dec
arpl
rorb
fildll
testb
jno
xor
shl
sbb
test
mov
and
jp
test
lock
xor
mov
dec
and
add
in
and
jg
mov
out
lds
sbb
mov
enter
add
jge
push
addl
jmp
popa
mov
nop
mov
lods
subb
cmp
in
cmp
push
sbb
insl
pop
insb
int3
lcall
outsb
push
dec
adc
xor
aad
clc
stos
dec
jl
hlt
pop
mov
push
xor
in
mov
pop
mov
pop
mov
stos
mov
sbb
ficoms
mov
mov
test
adc
jmp
mov
xchg
pop
sbb
push
decl
xchg
xchg
pop
jmp
and
xchg
imul
shll
xor
mov
xchg
mov
pop
xchg
cld
rorb
sub
pop
cmpsb
jno
loope
mov
xchg
add
xor
inc
enter
mov
sub
jge
test
pop
jp
push
jne
xchg
das
cli
movsb
pop
cmp
pop
adc
add
push
xor
jmp
inc
ljmp
add
cmp
in
adc
jns
lea
daa
stc
scas
mov
aad
out
jno
aas
dec
or
push
outsb
nop
and
arpl
push
mov
jle
enter
sub
mov
add
cmp
pop
push
push
cmpsl
stos
out
movsl
adc
repnz
addb
scas
mov
cld
rcl
in
sbb
mov
cwtl
cmp
sbb
adc
or
xchg
jb
sarl
xlat
aaa
or
clc
add
mov
rclb
push
dec
lea
mov
sbb
js
cmp
fstp
pushf
jo
inc
cmp
lea
xor
mov
rorb
cmp
inc
xchg
subl
mov
jecxz
and
pop
repnz
dec
popf
inc
mov
jne
push
mov
scas
test
stos
movsl
shll
mov
mov
pop
mov
inc
push
push
movb
cwtl
in
jl
iret
jl
dec
mov
inc
jp
ljmp
lds
mov
test
mov
test
nop
inc
sbbl
data16
mov
mov
jb
cmpsl
cmp
fldcw
mov
mov
in
daa
fnstsw
push
and
or
pop
inc
cmp
inc
fs
into
stos
xchg
xchg
movl
push
sarb
loop
mov
mov
pop
lret
pop
mov
ficomps
cltd
mov
jle
adc
sbb
jecxz
mov
scas
sub
mov
cmp
xchg
xchg
int
mov
xor
lahf
les
cld
adc
je
adc
adc
aad
jp
imul
aas
sub
cmp
daa
fcomi
and
mov
shlb
add
sti
jb
rol
pop
aam
icebp
mov
sbb
jp
add
and
add
lea
aam
pop
fcomp
stc
lcall
adc
movsl
movsb
imul
cmpsb
pop
push
loop
adc
xchg
dec
dec
movsb
repnz
pusha
repnz
sbb
or
scas
daa
ret
jo
ret
scas
sets
popa
jecxz
push
pop
inc
out
rcr
inc
pop
pusha
sti
cltd
sbb
lods
inc
lret
mov
mov
mov
dec
ljmp
inc
adc
int3
lock
adc
dec
push
test
inc
pop
gs
push
sysret
stc
cmp
inc
imul
imul
cmp
push
xor
aam
cmpsl
xchg
xor
add
mov
shrl
es
add
sub
fwait
imul
sbb
xor
xor
push
push
out
push
dec
pop
std
cmp
iret
fwait
mov
xlat
sti
inc
cltd
push
sub
and
pop
fbld
repnz
xor
inc
adc
pop
subl
out
icebp
mov
mov
daa
cmp
pop
insl
push
add
adc
in
out
aad
pusha
add
or
testl
sub
subl
jo
sbb
loope
dec
or
pop
xlat
inc
and
mov
pop
add
pushf
aad
mov
outsl
push
fimuls
jae
mov
insb
fstl
ss
daa
imul
nop
or
movsl
mov
xchg
lret
in
sbb
sub
inc
out
fsincos
cld
imul
bound
test
mov
sub
push
adc
or
xchg
mov
sub
negb
pop
pop
out
notb
mov
lret
push
popf
jle
mov
cli
lret
jecxz
cmp
les
fildll
xchg
bound
in
arpl
or
mov
repz
xor
inc
popf
jne
mov
mov
cmpsl
das
mov
sub
mov
cmpsb
xorl
mov
sbbb
loop
stos
cli
inc
adc
gs
add
call
aaa
popa
cmpl
push
cmp
enter
rolb
aaa
lds
push
push
sahf
sahf
xchg
shlb
mull
mov
iret
mov
lcall
mov
lds
icebp
imul
test
adc
pop
out
in
rorb
sub
stos
int3
mov
adc
stos
sti
repz
lret
mov
mov
and
stos
lcall
fdivrp
popa
mov
js
stc
mov
outsl
lahf
sub
repnz
xorl
xlat
push
jge
xor
lahf
jge
mov
mov
dec
dec
cmp
mov
rcr
repz
cmpsb
push
fwait
sub
jo
xchg
fs
sbb
dec
inc
mov
jle
cmp
cmp
fwait
sbb
push
sub
arpl
movsl
lods
rcr
inc
xchg
aas
fnstcw
mov
sbbl
sbb
pop
sbb
test
sbb
xchg
rcr
push
inc
filds
and
or
fdivl
xor
ds
push
sbb
ret
inc
jns
fists
movl
mov
mov
aam
cli
stos
out
xor
dec
adc
outsb
xor
ja
mov
adc
mov
es
adc
inc
inc
sahf
jp
dec
push
dec
cltd
inc
jge
rcr
fwait
pop
jmp
repz
fisttps
mov
fisttpl
hlt
scas
ret
clc
insl
rorl
mov
aaa
femms
sub
push
imulb
push
dec
jge
xor
loop
pop
inc
sbb
mov
sbb
add
rorl
sub
xchg
xchg
cmp
mov
rclb
mov
into
imul
inc
test
vmovss
push
xor
cld
enter
jge
push
lret
push
je
aad
or
inc
xchg
mov
push
std
repnz
pop
roll
ss
int3
imul
ror
int3
out
fcomps
jnp
and
and
jle
aad
ret
push
lahf
adc
xchg
mov
shlb
dec
pop
pop
sub
insb
xor
jae
jne
mov
dec
mov
add
mov
js
ljmp
movsb
stc
adcl
push
jmp
mov
sub
loop
xchg
out
iret
mov
out
xor
dec
adc
push
add
in
fldcw
adc
pop
jnp
or
jb
xorl
adc
nop
into
jae
inc
push
jae
sbb
jne
dec
pop
pop
mov
mov
jmp
clc
lcall
stos
add
sub
insb
mov
not
lret
push
stc
xor
in
xchg
inc
cltd
bound
rcl
add
fnstcw
int3
ss
cmpsl
ret
adc
cltd
mov
scas
cltd
cmp
sbb
mov
movsb
shlb
push
addr16
dec
outsb
mov
sub
adcb
fistpl
xchg
lahf
pop
notb
sbbb
inc
mov
imulb
cmp
jno
test
int
and
mov
mov
lret
mov
push
add
cmp
pop
mov
add
and
sbb
inc
cltd
sbb
ljmp
imul
js
xchg
add
jecxz
mov
stos
mov
mov
jmp
or
out
pop
ficoms
sbb
lods
pop
bswap
jmp
inc
dec
daa
out
mov
jae
lods
lods
push
adcb
inc
aaa
shlb
push
bound
jge
lods
mov
jae
or
clc
call
pop
jl
and
push
sub
in
xchg
jp
push
out
xchg
xchg
xorb
rcrb
in
arpl
xor
sbb
repz
out
adc
jae
ljmp
pop
jecxz
out
int
xlat
mov
fcomp
xchg
insl
sbb
loopne
push
lock
mov
shl
cli
xorl
gs
arpl
das
sti
mov
in
movsl
popa
sbb
out
nop
jb
mov
fs
test
push
addr16
out
pop
ljmp
dec
or
xor
lcall
mov
movl
mov
xchg
dec
std
js
rcr
add
xlat
lahf
outsb
cmp
jb
inc
in
mov
pop
push
stos
movsl
leave
lods
push
pop
mov
pop
sub
fadds
out
sbb
adc
repnz
sub
pop
stos
ret
lret
push
aad
out
lods
data16
in
cmp
ficoml
push
pushf
dec
jp
xor
xor
sub
xchg
mov
in
popa
mov
sbb
pop
outsb
or
xchg
loopne
popf
cmp
jnp
leave
xor
cli
mov
popaw
push
lds
jp
pop
mov
imul
add
add
pop
add
inc
mov
push
adc
daa
sbb
xor
cs
xchg
xchg
and
inc
aam
imul
std
mov
xor
xchg
call
call
rcrl
cs
pop
or
repz
rcll
fimuls
push
push
enter
int3
outsb
jg
mov
icebp
mov
imul
push
in
shrb
xchg
popf
jmp
mov
daa
imulb
inc
subb
push
sbb
leave
mov
sub
xchg
lods
xchg
cwtl
notb
xchg
enter
cmp
inc
jns
xor
cwtl
clc
ss
addb
push
jmp
mov
or
xor
js
movsl
fnstcw
fisubl
pop
fbstp
or
xchg
mov
jmp
cmp
test
cmp
mov
sub
mov
icebp
fistps
lcall
mov
pminsw
mov
call
mov
dec
dec
push
hlt
popf
popf
sti
pop
andl
ljmp
stc
scas
and
xchg
mov
lock
mov
insb
leave
mov
out
lds
sub
jb
dec
rcr
in
ret
add
lea
repnz
scas
adc
inc
cmpsl
sbbb
popf
mov
and
icebp
pushf
mov
stos
divl
sbb
xchg
lahf
in
lds
popf
ljmp
mov
out
xchg
test
sbbb
mov
cltd
or
cmp
popa
mov
add
pop
push
dec
jge
fdivs
fnstcw
fimuls
sahf
test
pop
add
fstpl
adc
xchg
adc
or
sub
jae
pop
shl
pop
pusha
ss
mov
push
imul
dec
mov
lret
jae
insl
fildl
fcoms
sbb
shl
mov
add
aas
mov
data16
jle
xlat
cmpb
or
pusha
pop
hlt
test
adc
cli
repnz
mov
dec
jo
and
push
stos
jbe
outsl
dec
mov
out
mov
pop
mov
mov
cmp
push
inc
mov
xchg
sbb
cmp
pusha
and
cmp
adcb
mov
iret
sbb
into
icebp
dec
mov
jno
push
mov
and
out
mov
cmp
sbb
xlat
fisubrl
out
aad
cwtl
xlat
sarb
jge
pop
xchg
mov
out
jl
lret
test
les
loope
mov
sahf
mov
mov
mov
mov
or
add
mov
rcl
xchg
mov
add
arpl
and
push
out
add
push
pop
dec
notl
sahf
fstpl
iret
adc
adc
cmp
repnz
push
push
and
pop
ss
popf
add
shll
in
inc
scas
clc
jb
fldenv
inc
movsb
inc
dec
sbb
pushf
aam
ret
pushf
sbb
push
test
insb
add
xor
orl
mov
enter
imul
mov
cld
mov
push
fldl
jns
and
sarb
loope
pop
stos
cld
popf
roll
xchg
or
dec
dec
add
adc
sub
dec
mov
bound
cld
icebp
out
lods
pop
mov
icebp
inc
mov
dec
inc
push
nop
ds
xchg
in
shrl
sub
fldl
stos
mov
mov
je
in
cmc
test
pushf
cmp
addr16
or
push
lcall
lret
ret
addr16
add
fildll
pushf
xlat
repz
jmp
lcall
sti
jne
cwtl
push
cmpl
addb
aam
shrb
adc
in
movsl
jmp
decb
cs
mov
fimuls
movsl
shr
and
jae
pushf
adc
jnp
shll
push
shrb
inc
adc
adc
rorl
cmp
ret
shll
cmp
xchg
or
fstps
ret
push
sub
scas
mull
push
mov
dec
jg
cs
cmc
rorl
sbbb
inc
pop
xchg
push
mov
jbe
mov
fnsave
mov
nop
push
lret
cmp
mov
test
and
movsb
jae
in
ljmp
jns
sbb
add
stos
jne
mov
push
mov
testl
mov
ja
imul
or
mov
inc
pop
push
mov
jmp
ja
fsubrs
adc
sub
mov
inc
cmc
test
mov
mov
push
pop
lret
mov
inc
aas
iret
inc
inc
adc
out
and
pusha
and
mov
or
mov
mul
shll
xor
les
jmp
aaa
adc
not
stos
mov
iret
addr16
lcall
outsl
mov
lods
scas
enter
inc
frstor
mov
sbb
lea
in
jle
pop
insl
adc
out
jl
ss
repz
dec
xchg
insl
xor
out
inc
xchg
push
addr16
and
leave
clc
fstp
test
mov
add
jbe
fistpl
jnp
pop
sbb
jb
mov
add
call
push
xchg
es
rolb
loope
adc
inc
xorb
dec
inc
xchg
sub
cltd
dec
xchg
pop
fldt
pop
popa
insl
icebp
push
test
dec
arpl
enter
cmp
cwtl
mov
ret
call
mov
icebp
sbb
jmp
xlat
adc
add
or
ja
sub
sub
roll
add
in
dec
jae
push
test
pushf
push
jns
das
imul
movsb
imul
fldenv
lods
cmc
inc
push
in
cmp
loopne
rcr
adc
cli
inc
ljmp
and
negl
in
inc
cmc
out
outsl
xlat
xor
and
adc
cmp
mov
mov
cmpsl
lock
js
mov
negl
mov
aas
clc
xor
add
fld
loope
xchg
cltd
stos
cmp
pop
pop
xor
roll
mov
cmp
decl
push
std
movsl
sub
jae
inc
xlat
jg
cmc
pop
pop
cli
mov
xchg
fs
dec
clc
mov
or
cli
dec
cltd
roll
sub
xor
arpl
test
mov
dec
cwtl
dec
repz
push
orb
and
mov
cmp
jo
xchg
sub
outsb
cli
roll
add
popa
adc
fcomps
andl
lods
inc
jbe
dec
dec
repnz
sbb
addr16
xor
sti
push
add
lods
loopne
mov
fiaddl
shlb
mov
and
inc
lcall
call
mov
fiadds
cmp
and
mov
add
dec
scas
xor
sub
jge
mov
mov
fstpl
inc
sbb
fbstp
addl
stos
add
sub
jge
cmpsl
dec
xchg
pop
mov
pop
test
xchg
push
xchg
aam
pusha
cwtl
mov
jg
mov
sbbl
mov
loopne
cltd
pop
scas
mov
and
and
testl
call
sbb
pop
lods
repnz
mov
mov
ror
stc
insl
mov
fbstp
dec
dec
or
sbb
jle
jge
je
gs
sub
inc
gs
rolb
test
in
mov
pushfw
push
fisubrs
pop
sbb
jno
mov
jno
jmp
cmp
sbb
nop
dec
test
mov
sub
lahf
pushf
ret
mov
lds
into
dec
lahf
mov
fwait
or
push
jo
sub
xor
xchg
sbb
pop
fcomps
fmuls
sti
and
pushf
add
jo
cmp
cmp
out
xchg
dec
mov
aad
stos
xchg
adc
lods
rorb
cli
nop
dec
jle
xchg
xchg
adc
xor
mov
into
mov
clc
pop
add
in
mov
adc
test
test
dec
cwtl
filds
repz
inc
mov
insb
sbb
mov
push
and
and
inc
or
pop
and
insl
aaa
mov
cmpsb
or
bound
jg
shll
daa
gs
jecxz
movsl
insl
push
int
shrb
adc
and
rorb
or
pop
jle
xor
push
sti
or
shl
sub
xchg
les
and
mov
gs
pop
pushf
and
call
stc
sbb
test
mulb
lds
pop
cs
jnp
lds
popf
pop
les
adc
xchg
xor
ljmp
shlb
push
jp
test
out
push
jp
cmp
jae
xor
iret
inc
add
cld
cmp
sub
push
adc
adc
lret
push
cmp
jge
fxtract
add
xchg
sbb
int
mov
inc
push
adc
mov
pop
adc
fdivrl
pop
iret
and
mov
add
cli
cwtl
insl
jo
lock
lea
xor
sbb
incb
paddsb
pop
xchg
ds
xchg
pop
jno
repz
std
fs
sti
sar
cli
leave
adc
sbb
fisubrs
dec
popa
xchg
loop
mov
jmp
ljmp
add
xor
cltd
idivb
std
imul
nop
loopne
adc
mov
clc
xlat
loope
div
and
jo
lret
fiadds
ljmp
loopne
clc
rorb
test
xchg
test
popa
insl
scas
mov
pop
insl
rolb
inc
xlat
aaa
stos
jle
cwtl
das
mov
jge
mov
rorl
rorb
push
inc
inc
push
inc
mov
xchg
push
jmp
imul
push
icebp
xchg
aam
cmpsb
add
cmp
or
lods
or
mov
scas
fcmovnbe
gs
dec
sub
mov
int
pop
xchg
sarl
add
pop
pop
ja
mov
cltd
sbb
cmpsb
lea
enter
pop
pop
shl
xor
jnp
pop
jp
test
ljmp
xchg
adc
icebp
inc
iret
dec
inc
mov
sub
mov
ljmp
add
test
rcrl
jecxz
mov
jmp
or
mov
xor
pop
mov
pushf
icebp
shrl
jnp
mov
sub
icebp
rcrb
test
rdmsr
xchg
inc
inc
xchg
pop
and
mov
popf
push
cmp
mov
add
inc
mov
push
cmpsb
cld
cmpsl
xchg
adc
jge
push
fs
add
aam
stos
out
movsb
pop
popf
pop
xchg
pop
adcl
inc
jnp
mov
shlb
push
and
in
incl
mov
add
call
pusha
filds
inc
shrb
lods
jne,pn
jl
stos
xchg
dec
pop
icebp
out
inc
xchg
mov
aaa
lret
cld
adc
pushf
pop
jns
cmp
and
hlt
push
dec
push
gs
mov
mov
daa
xor
or
dec
add
jb
xchg
xchg
lods
mov
aas
sbb
ret
cs
sbb
or
mov
cmpsl
lods
or
dec
stc
sbb
mov
insb
ss
inc
cmp
hlt
cwtl
inc
ficoml
jl
gs
mov
inc
outsl
mov
xor
sbb
imul
and
push
mov
dec
iret
mov
popf
jg
cmc
lahf
inc
mov
push
leave
leave
adc
xchg
loope
pop
sub
movsl
pop
insl
push
fildl
cltd
icebp
sub
or
push
sub
jge
cwtl
into
aas
lods
pop
in
pusha
and
cs
iret
pop
sti
inc
adc
sub
cmpsl
inc
call
stos
push
lds
jno
rcrb
fstpt
outsl
xchg
int3
or
inc
lods
mov
stc
lods
push
ljmp
insl
mov
push
fldt
out
mov
pop
in
test
jge
xchg
sub
jnp
rcrl
adc
adc
dec
pop
push
test
fsubrl
mov
mov
and
cmp
jo
xlat
test
ja
fs
adc
shll
and
mov
stc
into
insb
push
xor
sub
test
cmp
push
test
bound
stc
test
inc
lcall
scas
push
sahf
adc
or
scas
icebp
inc
mov
sbb
jo
cmc
loopne
jb
dec
cmp
mov
pushf
aad
out
pop
sarb
bound
ficoms
jo
lods
in
mov
hlt
push
push
out
popf
rep
je
jns
inc
push
aam
pop
push
push
xchg
dec
mov
and
cld
sti
push
lret
sbb
mov
imull
addr16
int3
jae
jle
jg
cltd
loope
call
test
insl
lds
jge
insl
test
jle
sub
sbb
arpl
clc
fsubs
fldcw
cmc
adc
xchg
inc
jno
cmp
push
inc
mov
aaa
sbb
push
cmp
les
popa
add
aaa
lock
jl
push
nop
mov
roll
add
push
push
mov
push
xchg
sbb
mov
adc
add
or
scas
data16
push
cwtl
or
lahf
sbb
pop
sbb
dec
lahf
pop
xchg
pop
mov
cmp
ljmp
sti
xchg
rcll
pop
aas
xchg
cli
testb
cmp
mov
xor
lods
add
add
cltd
mov
add
xor
mov
or
loope
fsubrs
jle
jle
call
outsl
mov
dec
inc
ds
gs
mov
popa
rorb
pop
mov
es
pop
imul
int
sbb
sarb
ss
sbb
mov
cwtl
lret
jb
pop
je
jp
sbb
mov
and
and
cmpsb
xchg
add
lcall
or
and
xlat
popf
inc
pop
push
mov
inc
or
cs
pop
mov
mov
cmc
lock
es
imul
test
xchg
sahf
popa
cmp
xor
aas
std
notb
stc
push
inc
mov
pop
cmp
stos
ljmp
add
xor
call
test
pop
int3
inc
or
push
rcl
pop
arpl
stos
fbstp
testl
mov
loope
sbb
dec
or
add
test
hlt
cltd
mov
mov
mov
push
test
and
movsl
dec
cmp
adc
sub
cltd
clc
ss
jle
dec
and
push
mov
fldt
xchg
ja
enter
sbb
sbb
cld
ljmp
jno
mov
add
enter
fmull
push
push
sbb
shrb
mov
push
push
mov
shr
stos
or
xchg
imul
arpl
xchg
cld
jmp
iret
rclb
mov
mov
repz
clc
push
data16
test
loop
movb
mov
xor
fcmove
ja
test
imul
add
call
cmpsb
fcmovnu
rcr
ficoms
push
jne
or
xor
jl
aam
xor
addr16
popf
add
test
fcomps
std
imul
xchg
jle
inc
mov
mov
popf
test
inc
aaa
dec
xchg
outsl
out
sbb
ficoml
inc
adcl
mov
pop
sar
mov
les
add
repnz
xchg
out
dec
jmp
aaa
dec
popa
mov
aad
xor
rcrl
dec
ds
into
jge
sbb
and
add
scas
ja
cmp
test
cld
in
or
std
roll
scas
pusha
push
pushf
orb
jne
fs
inc
loope
mov
pop
cmp
std
jb
inc
mov
les
pop
lds
addb
into
xchg
leave
popa
dec
sbb
cs
outsl
and
stc
mov
mov
mov
out
xor
cmpsl
jp,pt
cmp
inc
sub
rclb
test
xchg
add
data16
dec
repz
jo
mov
dec
jge
stos
sarl
pop
sahf
enter
movsb
in
xchg
in
data16
inc
adc
and
rcrl
mov
add
mov
adc
push
in
lods
nop
nop
mov
aam
and
mov
push
mov
lea
or
sbb
pop
cmp
or
mov
cmp
cli
ret
loopne
pop
sub
outsl
scas
mov
rcr
push
lods
add
aas
rorb
adc
aas
lcall
ficoml
repz
mov
lcall
cmp
jg
fisttpll
into
sti
aam
sub
sub
xor
mov
mov
xchg
lods
addl
aad
pop
mov
xchg
push
jnp
xor
adc
idiv
js
aas
mov
arpl
fnsave
dec
cmpsb
cmpsl
jbe
into
mov
xor
sahf
bound
or
cmpsb
mov
out
or
push
sti
into
icebp
sbb
ret
jae
mov
ds
out
call
inc
jecxz
cltd
mov
pop
in
inc
dec
ljmp
in
xchg
je
arpl
push
fiadds
fsubs
arpl
js
xchg
sbb
in
and
mov
sub
mov
ret
mov
shr
sbbb
icebp
inc
jnp
dec
sahf
jecxz
sub
xor
fnsave
mov
adc
iret
movsb
xor
test
mov
scas
jl
pop
xchg
mov
loop
call
shrb
insw
les
sahf
mov
lods
les
jae
push
arpl
test
es
xchg
fnstsw
sbb
insl
sub
pop
jge
push
imul
out
sub
jmp
mov
xor
shrb
outsl
aad
ret
jns
xchg
xor
jo
cld
cmp
mov
mov
dec
sub
std
stos
movsl
or
out
repz
enter
rolb
adc
push
lret
ds
pop
xchg
adc
dec
xor
lea
push
cmp
mov
xor
hlt
push
movsb
shl
rorb
xchg
rorl
mov
and
jg
sbb
in
and
out
es
cltd
xor
lds
add
jbe
cmp
jne
scas
lret
jle
shlb
inc
fwait
push
lcall
ljmp
aad
pop
test
mov
pop
jp
inc
dec
mov
push
cmp
push
push
adc
test
aas
insb
fisubrs
outsb
mov
lret
xor
cmp
cmpsb
out
push
in
xchg
fwait
xchg
sub
mov
jo
adcb
fsubrs
outsb
jnp
aaa
outsb
or
adc
rolb
out
jmp
mov
adc
push
jno
pusha
adc
sti
sub
addl
pop
cs
movsb
sarb
mov
xchg
pop
mov
xchg
adc
in
loope
inc
xor
jge
imul
scas
shlb
repnz
inc
mov
jl
add
loope
jmp
fidivrl
cli
xchg
call
sub
add
outsb
psubsb
and
push
inc
mov
jns
cmpb
xlat
push
push
and
int
xchg
scas
not
push
or
mov
je
or
ljmp
fnstenv
xchg
push
mov
pop
aam
xchg
mov
cmc
les
xorb
cmp
jns
push
push
test
add
adc
sti
sbb
das
and
mov
and
cmp
insl
xor
jb
or
pop
mov
inc
fsubrp
add
xor
xchg
gs
dec
mov
cmpsb
pop
popf
mov
lods
es
lahf
adc
mov
lock
jne
outsl
imul
loopne
cld
inc
push
mov
mov
cmp
mov
outsl
mov
dec
xchg
pop
adc
mov
fisttps
adc
dec
repnz
int3
sarb
mov
mov
inc
das
mov
sub
ljmp
jge
push
lds
lcall
jl
mov
movsl
out
pop
cmp
je
ret
jmp
push
filds
pop
dec
out
call
inc
xor
pop
out
pop
push
int3
das
jmp
pop
push
cmovg
cmp
fiaddl
sbb
popa
adc
loop
push
fcoml
adc
jae
jmp
incl
sbb
pop
call
push
es
adc
stc
fcmovu
jle
xchg
fisubrs
pop
inc
cwtl
fisttps
inc
add
cmp
psubusb
sti
sbb
push
jp
xchg
inc
lods
stc
jb
test
dec
scas
xor
pop
sarl
jp
sbb
scas
repz
movsl
iret
xchg
aas
mov
xor
jno
je
cwtl
shll
aaa
in
xchg
ficomps
or
or
cltd
or
orl
sti
icebp
sahf
divb
mov
xchg
leave
movq
xchg
mov
xchg
daa
cmp
enter
movsb
out
or
mov
mov
mov
dec
xchg
adc
insl
inc
js
mov
mov
gs
cmp
sbb
mov
sbb
pop
pop
mov
sub
lods
xlat
and
sbb
xchg
add
sub
pop
mov
sub
xchg
jne
dec
and
and
xor
sbb
icebp
aas
sbbl
bound
mov
push
jecxz
sub
push
pusha
outsl
cmp
mov
push
pusha
jae
jecxz
fisubrs
mov
push
lahf
sbb
lods
frstor
inc
xchg
insl
lret
decl
dec
inc
stos
or
aad
and
sbb
adcl
mov
pop
jg
mov
outsb
gs
stos
insl
or
jbe
sbb
lret
imul
mov
push
jge
jmp
dec
pop
sub
add
mov
jp
fwait
push
jb
push
jae
jl
cmp
cli
and
sbb
cmpsl
pusha
imul
or
add
cmp
push
push
dec
clc
daa
stos
lds
mov
inc
sub
add
insl
mov
lcall
lods
pop
pop
cwtl
xchg
jo
cmc
xchg
ljmp
add
jbe
jbe
xchg
mov
movsb
mov
test
and
sbb
xchg
outsl
in
sbb
add
daa
out
inc
jno
out
out
xchg
mov
xlat
subb
shlb
clc
mov
jp
and
dec
roll
and
das
adc
xchg
sarl
loop
xor
jae,pn
inc
or
pop
loope
into
inc
insb
dec
stos
loope
xor
js
insl
sbb
test
shrl
loope
loope
lock
or
fistpl
lret
out
nop
mov
xor
sub
mov
and
pusha
xchg
lods
mov
inc
repnz
std
cwtl
sbb
or
inc
js
cmp
loope
das
or
sub
pop
mov
stos
into
in
push
cwtl
and
cmp
sbb
fsubl
push
sub
in
pop
mov
jecxz
add
dec
pop
enter
rorb
sahf
mov
lods
jmp
pop
cmc
invd
cmp
dec
mov
mov
and
dec
lret
repnz
xchg
sbb
push
jns
xor
mov
pop
cs
pushf
dec
stos
out
add
mov
jg
push
imul
sub
and
fbld
mov
push
xor
mov
push
mov
mov
mov
push
xchg
xchg
jb
hlt
je
mov
push
movsl
pop
xor
ret
ja
inc
ja
js
stos
movsb
push
adc
xor
fwait
xchg
pop
or
mov
and
or
aas
roll
and
mov
pushl
out
fiadds
mov
ret
push
and
xchg
out
dec
std
cmpsl
xor
mov
in
push
jl
shrb
nop
push
mov
xor
adc
xchg
inc
lret
lret
imul
icebp
aaa
cmp
sbb
fs
lock
inc
cmp
mov
pushf
testl
test
mov
hlt
jg
iret
mov
push
mov
adc
rcll
mov
out
dec
mov
std
cmp
xchg
and
in
mov
test
sub
push
pop
xchg
xchg
jb
repnz
and
out
shrb
into
mov
mov
lods
sub
dec
mov
cmpsb
in
xchg
stos
mov
xchg
mov
in
add
mov
pop
fisubl
jbe
repz
test
pop
cli
mov
lahf
imul
repnz
adc
xor
pop
insl
fcompl
jp
ret
jns
fistpl
xchg
jg
mov
inc
cwtl
test
ja
mov
push
jmp
mov
sub
sub
in
pop
fstpl
cmp
movsl
dec
xor
outsl
xchg
push
xlat
dec
push
mov
adc
lock
cmpsl
push
jne
cmpsl
ja
aad
and
outsb
fcom
and
lcall
cmp
inc
add
sbb
and
inc
icebp
push
mov
ss
adc
push
mov
ljmp
mov
push
adc
xor
or
popf
fisttpl
push
xor
clc
rolb
inc
pop
insb
mov
cmp
popf
cmp
pushf
cwtl
mov
adc
xor
sbb
mov
push
stos
pop
ljmp
cld
cli
cmp
adc
and
clts
lcall
gs
fs
inc
cmpb
pop
ret
mov
sub
cltd
movsb
cmp
xchg
push
pop
cmp
insb
cmpsl
push
data16
rcrl
gs
aas
shrl
pop
xchg
das
xchg
clc
out
cmp
xor
pop
push
jmp
mov
sub
mov
ret
mov
test
mov
pop
arpl
adc
adc
mov
lret
in
or
ljmp
xchg
dec
pop
mov
loope
gs
shlb
cmpsl
test
fadd
inc
call
push
sub
mov
xorb
add
and
add
jmp
push
and
dec
in
lods
nop
add
jno
inc
pop
or
std
scas
andl
subl
push
fidivrs
out
in
lcall
repnz
push
or
outsb
dec
mov
mov
out
push
sub
leave
sub
cli
cmp
cli
mov
dec
test
adc
test
pop
inc
push
movb
sbb
push
jmp
dec
pop
loope
stc
scas
mov
int
icebp
inc
xor
adc
adc
je
push
ret
xchg
sub
pop
sub
fisubs
shl
xor
out
in
inc
imul
or
push
cwtl
push
insl
mov
push
and
addr16
mov
inc
jg
jl
push
jns
cltd
or
repnz
mov
popa
sti
clc
jge
rep
int
cmp
lret
sti
pop
aad
leave
xchg
xchg
stos
in
out
jo
jns
sbb
and
sbb
insl
pop
xchg
test
das
fcompl
pop
and
jmp
cmp
inc
push
xchg
push
bsr
push
test
push
insb
psadbw
stc
and
out
jns
test
je
das
fwait
loop
movsl
pusha
dec
and
fistps
popf
or
pop
enter
icebp
mov
stc
jne
add
in
sub
aam
movsl
xchg
jno
inc
pop
xor
jno
out
cs
out
sub
fwait
jge
xchg
mov
sbb
and
ja
cmp
int
mov
mov
daa
pop
js
ss
lea
mov
mov
aas
sub
push
cmp
rorl
pop
movsl
mov
cmp
jnp
mov
jo
int
test
fdecstp
rolb
aad
clc
push
cld
or
jg
mov
out
push
stc
xor
lock
sbb
dec
leave
cmp
out
pop
cmp
test
int3
repz
dec
xchg
pop
aas
imul
cmp
dec
xor
call
popl
sub
repz
lret
sub
cmp
xchg
jns
xchg
cmc
cmp
sbb
add
pop
das
push
mov
sbb
pop
decl
je
enter
inc
movsb
push
xor
mov
les
jns
or
je
imul
movsl
pusha
mov
jge
and
lret
mov
mov
fdivp
fcompl
repz
hlt
andl
push
adc
push
shr
jg
lea
repz
fs
cmc
pop
sbb
pop
adc
inc
add
hlt
mov
dec
ljmp
push
ret
jns
mov
roll
pop
out
mov
mov
mov
mov
mov
sub
jg
sbb
mov
scas
test
push
mov
lods
mov
bound
hlt
loopne
in
dec
mov
mov
jmp
adc
adc
sub
ficompl
fstps
and
dec
cmp
sbbl
movsb
xchg
into
pop
jo
pop
sbb
stos
push
lea
or
stos
xlat
cs
pop
cs
out
pusha
add
cli
outsl
xor
mov
or
inc
mov
icebp
stos
outsl
mov
push
mov
pop
jnp
fistl
xchg
add
push
xchg
gs
dec
into
das
mov
jnp
or
dec
aas
or
decl
mov
cmp
and
movsb
push
pop
outsb
rorb
jg
push
xor
leave
sub
inc
adc
push
pop
in
das
sarb
shlb
jl
or
test
mov
bound
cld
icebp
or
inc
popf
ror
cs
ret
mov
xor
xchg
subb
pop
shll
and
add
xor
imul
std
cmpsb
mov
lret
ret
mov
call
mov
popl
mov
adc
les
call
test
movsl
inc
cmp
xchg
push
jns
mov
dec
mov
or
pop
inc
loopne
pop
xchg
mov
push
add
shrb
push
push
adc
leave
inc
xor
fldcw
js
push
stos
enter
xor
les
mov
idivl
out
pop
lcall
cmp
push
sbbl
fs
push
stos
mov
cmp
outsb
cmp
in
xchg
mov
or
mov
mov
add
test
int
frstor
adc
repnz
xorl
imul
sidtl
lods
and
or
sti
out
icebp
stos
inc
ret
jb
sbb
mov
jnp
pop
mov
cmpsl
xor
adc
outsb
movsb
sub
sar
inc
inc
and
xchg
jae
aaa
aam
mov
adc
ja
test
into
mov
insb
in
aam
and
lret
xor
aas
mov
sub
xorb
loop
scas
push
sub
push
push
xchg
test
dec
aas
dec
ss
sbbl
cmp
pop
jae
out
aas
out
mov
jnp
fldcw
add
aas
mov
add
inc
loopne,pn
xchg
mov
gs
xor
mov
jmp
adcb
cmpsl
inc
addr16
pop
pop
das
rcrb
cmpsl
lods
int3
xchg
test
cld
inc
sbb
int
lds
fnsave
int3
les
xchg
nop
test
mov
test
mov
xchg
cwtl
sbb
push
add
movsb
cmp
or
push
jecxz
fisubrl
xchg
ret
loop
cmp
scas
push
sbb
sbb
lods
daa
or
adc
fldlg2
mov
sub
pop
test
outsl
cmp
push
xchg
rorl
and
mov
and
xlat
cmp
lds
push
mov
call
ret
inc
mov
sbb
inc
mov
sbb
mov
jmp
dec
adc
pop
mov
sub
mov
fs
inc
lcall
mov
cmpsl
aad
sbb
xchg
pop
pop
xchg
xchg
inc
xchg
or
inc
jecxz
push
xchg
popa
and
sub
inc
and
push
dec
out
in
inc
bound
mov
into
out
or
xorl
repnz
leave
xchg
fisubl
xchg
mov
pushf
pop
fcompl
in
ds
lds
dec
sbb
pop
lcall
cmp
lahf
dec
sbb
out
outsl
mov
shrl
jns
mov
jmp
lret
xchg
pop
sbb
testl
sbbb
jmp
xchg
cmpsb
push
popa
jnp
mov
mov
fbstp
or
loope
mov
ljmp
add
bound
cwtd
or
mov
pushf
jns
xchg
cmp
in
mov
cmp
or
push
xchg
mov
xchg
xor
dec
in
mov
call
sub
xor
sub
cmp
ds
out
jmp
popa
into
int3
popa
lds
mov
insl
fs
aad
inc
or
push
lret
enter
mov
loop
xor
je
sbb
xlat
outsl
push
js
cmp
in
mov
shrb
popf
rol
jp
lret
mov
xor
pop
stos
jnp
add
push
jle
jae
imul
push
je
inc
jmp
in
pop
repz
xchg
lock
mov
lcall
test
mov
in
adc
sub
shrl
popf
cld
dec
jmp
out
mov
leave
inc
popa
dec
xor
ret
or
sbb
ret
cmp
and
fsubrl
xchg
imul
sbb
mov
imulb
pushl
and
dec
and
out
scas
jbe
shl
repz
or
enter
imul
test
push
imul
lcall
xchg
push
imul
cmp
dec
rcrb
leave
out
shrl
dec
shl
int
ds
push
scas
dec
lds
dec
sahf
imul
ja
add
daa
and
add
mov
cmc
dec
daa
xor
enter
add
mov
cwtl
mov
sub
pop
sarb
inc
sti
cmp
in
pusha
push
jae
xor
scas
cli
cltd
cs
shlb
jo
test
mov
out
rcl
sbb
inc
mov
lahf
bound
xchg
adc
or
xorb
and
arpl
cld
orl
not
scas
sbb
ret
push
imul
fs
sub
cmc
je
xor
lahf
add
neg
shr
mov
nop
lea
sbb
icebp
xchg
jne
adc
movsb
idiv
gs
push
mov
imul
ret
push
inc
mov
les
outsl
lahf
out
fisttpl
xchg
imul
into
cwtl
in
add
insl
mov
pushl
aas
jge
test
stc
push
jno
loopne
lock
sahf
in
into
cmpsl
cmp
mov
mov
repz
push
cmp
shl
popf
add
inc
lahf
daa
cmp
mov
cmpps
ja
inc
ret
jp
mov
pop
mov
pop
cmpl
jg
mov
push
pop
into
xchg
jo
and
xor
xchg
outsl
xchg
adcb
dec
scas
mov
add
pop
js
repnz
xor
sub
sbb
sub
mov
jo
aas
xor
jecxz
int
pusha
and
pushf
in
xchg
add
fiaddl
push
loopne
and
push
jo
ret
mov
adcl
xor
add
mov
add
dec
out
icebp
inc
pop
lods
or
sub
mov
cmpsb
jo
ss
push
inc
jbe
push
sub
sahf
and
sub
sbb
aas
dec
jnp
outsb
pop
std
lock
or
xchg
pop
mov
jmp
mov
cmp
in
mov
shl
popa
xor
lea
push
fisubl
mov
negb
xor
cmpsb
gs
pop
mov
push
xchg
scas
fwait
nop
pop
jmp
mov
jns
stc
inc
daa
mov
push
add
ret
xchg
pushf
cs
cli
fxam
inc
mov
mov
mov
push
fwait
clc
mov
add
push
ljmp
cltd
lcall
scas
mov
lret
cmp
stos
in
js
bound
fnsave
cld
adc
rclb
push
xor
sbb
xor
adc
xorb
jno
pop
push
stc
sahf
rclb
das
sbb
mov
dec
jl
pop
mov
sahf
sti
inc
xchg
rcrl
push
adc
sarl
ds
add
inc
add
pop
jp
push
loop
shlb
js
mov
rsm
adc
loopne
fistps
dec
out
pop
cwtl
sub
cmp
mov
lret
lods
mov
sbb
inc
push
js
adcl
cmp
jge
jae
scas
scas
mov
or
or
ficoml
xchg
js
stos
mov
neg
and
mov
push
cmpsl
stc
incb
shlw
stos
lcall
sub
imul
sub
lahf
inc
dec
aam
out
xlat
push
add
cmc
stos
jno
and
dec
jo
cmpsb
xor
movsl
mov
dec
or
in
jo
adc
jg
ja
test
cld
mov
aad
dec
xlat
xchg
or
xor
cltd
cmpsl
push
xor
repnz
repz
mov
and
fisubrs
fwait
and
jge
lahf
imul
jl
and
fwait
jle
movsb
in
mov
mov
jecxz
mov
mov
stos
dec
enter
fs
rolb
push
push
sti
pop
int3
xor
mov
data16
and
and
pop
cmp
fs
mov
dec
lcall
insl
or
push
sar
and
outsl
cld
mov
into
inc
aas
jns
pop
xor
cmpsb
shr
std
aas
sti
xchg
lods
mov
add
sub
mov
jb
pop
mov
push
ja
add
push
or
in
dec
adc
es
adc
fsubs
loopne
js
and
jp
add
or
push
scas
mov
mov
outsb
or
sar
sub
jb
aad
push
pop
das
int3
sbb
call
in
pop
xor
rcrb
enter
pop
out
cld
mov
insl
jmp
xchg
std
sbbl
mov
repz
ja
push
mov
adc
or
sub
sbb
repz
mov
push
cmc
pop
mov
xchg
dec
sub
mov
push
dec
icebp
adc
call
xor
inc
cmp
fistpl
push
dec
pop
mov
js
clc
insl
aaa
shr
cmp
stc
jl
stos
ja
jle
out
pop
std
sub
mov
les
inc
push
shlb
jp
mov
or
mov
xchg
loop
xchg
pop
addr16
out
and
pop
xchg
mov
pop
test
and
adc
sbb
sub
pop
fmull
pop
arpl
repz
push
jg
stos
ret
mov
mov
lret
mov
xchg
push
por
out
cmp
nop
and
mov
mov
and
pop
dec
sbb
mov
jg
loopne
in
lods
mov
js
lods
repz
out
ror
sbb
iret
pop
push
jle
lret
sub
jg
iret
loopne
cli
aas
repz
jp
scas
inc
fisttps
das
call
xchg
repz
adc
add
add
inc
mov
and
notb
dec
imul
stos
addl
shl
lods
ror
shll
sahf
incl
sbb
ret
clc
cwtl
jmp
popa
movsl
mov
in
or
bound
pop
xchg
push
pop
and
cltd
or
out
and
and
mov
jmp
imul
push
fcomps
test
shr
sub
add
pop
imul
mov
sarb
ror
movsl
sub
jle
dec
fidivs
inc
aaa
dec
mov
sti
pushf
push
lcall
fmull
test
sbb
mov
cwtl
mov
xor
mov
test
xchg
pop
xchg
sub
mov
arpl
cmp
mov
ret
pop
fnstcw
shl
inc
lock
imul
out
das
cwtl
push
cwtl
out
arpl
add
mov
js
call
sbb
or
movsl
lods
adc
inc
jecxz
cmp
int3
sub
jl
aaa
jbe
cmc
push
daa
aad
in
sub
mov
dec
mov
mov
push
mov
rolb
inc
fmul
xlat
push
les
inc
dec
out
stos
loop
f2xm1
mov
rcrl
mov
lcall
aam
pop
sbb
mov
jns
and
push
push
int
xchg
sub
decl
ss
imul
xchg
xchg
xchg
je
jns
mov
pushf
jbe
mov
cli
mov
gs
mov
fs
popfw
mov
pop
mov
jo
clc
inc
pop
pmuludq
dec
add
or
outsl
fsubrl
test
cmp
daa
xchg
aam
adc
hlt
sarl
imul
jg
sub
lret
and
dec
std
data16
push
int3
and
loope
cli
mov
faddl
adc
push
clc
rorb
sub
into
hlt
jle
mov
push
jecxz
push
or
pop
jge
bound
dec
lea
mov
adc
repz
xchg
inc
loopne
xor
ds
jno
dec
js
je
shlb
xor
cwtl
nop
gs
fxch
push
push
clc
and
pop
pop
sbb
imul
and
xor
ret
add
nop
mov
and
xchg
lret
clc
enter
test
adc
or
jp
pop
dec
hlt
jb
lret
addr16
xor
std
cmp
cmp
sub
mov
and
sbb
jb
jo
or
clc
adc
mov
cmp
lcall
aas
jb
xor
dec
rorb
dec
loopne
repz
adc
mov
xchg
xchg
adc
cwtl
cmpsb
cld
dec
or
xchg
jmp
mov
jmp
les
xor
mov
outsb
pop
cli
in
fidivrl
popf
xchg
testb
stos
fdiv
mov
push
dec
pop
sub
insl
stc
jb
insb
cmp
and
xor
jle
cld
mov
jne
inc
inc
xchg
mov
mov
xchg
push
xchg
sbb
outsl
and
push
cmp
inc
inc
jne
and
into
in
mov
cltd
xchg
aam
shrl
pop
push
adc
lret
fbld
fdivs
test
add
cli
loopne
mov
jne
aam
add
loopne
mov
jle
add
inc
addr16
add
repnz
int
pushf
xchg
xor
sbb
in
repnz
jbe
jnp
jp
mov
mov
jg
jne
mov
add
mov
pop
pop
adc
jmp
cmc
push
mov
mov
js
and
lret
push
sub
or
push
fiadds
imul
inc
lea
cltd
pop
lods
aas
mov
aas
sub
inc
inc
mov
std
add
sbb
shl
add
xchg
cmpsb
ljmp
cli
adc
ss
leave
cli
imul
les
dec
nop
and
sub
xchg
fsubrs
dec
jns
inc
mov
push
pop
fimuls
stos
clc
inc
mov
jge
enter
fsubrl
pop
popf
test
insb
fsubs
lcall
cmp
sub
xrelease
fcoms
loope
jb
jp
jns
lahf
cmp
and
inc
add
out
ljmp
push
cld
mov
lret
adc
in
ret
jo
lret
mov
call
inc
dec
mov
xchg
jae
push
xor
test
mov
push
icebp
dec
repz
loop
jp
and
das
clc
arpl
add
bound
sbb
dec
pop
and
jne
or
out
loope
ficoms
js
scas
imulb
adc
and
and
jno
and
pop
and
lret
sub
mov
mov
cmc
add
gs
lahf
add
lds
mov
pop
aad
add
lahf
fwait
and
aam
lret
sbb
shll
pop
adc
movb
sub
cmp
add
xchg
and
cmc
sbb
mov
inc
fwait
shrl
fistl
push
or
cmp
pusha
pop
and
push
bound
shrl
es
mov
jnp
repz
xchg
mov
sub
jmp
push
test
es
dec
mov
inc
je
cvtdq2ps
mov
in
hlt
inc
xchg
mov
sbb
shlb
in
inc
sahf
mov
mov
iret
sbb
cmp
leave
fdivp
pop
jge
inc
subb
push
lea
or
push
pop
jg
mov
dec
fs
push
mov
xchg
inc
out
inc
sti
pushf
jl
icebp
mov
or
xlat
cmp
fwait
pop
stos
sub
shl
jecxz
push
inc
adc
mov
movsb
xor
xchg
add
lock
data16
data16
jne
sahf
pop
loopne
mov
outsl
mov
push
gs
dec
mov
push
daa
out
jmp
mov
sbb
fwait
xchg
arpl
int
test
pushf
xlat
or
in
mov
sti
outsb
ret
je
mov
push
fcomp
daa
sbbb
fwait
insl
outsb
daa
movhps
shr
mov
sbb
sbb
js
and
data16
mov
mov
push
cmpsl
mov
xorb
mov
jg
std
dec
ret
rolb
repnz
jmp
shl
cs
pop
int
add
xchg
cmc
inc
dec
xchg
sbb
add
shl
sub
lock
jae
pop
test
xor
ja
mov
push
pop
outsl
or
mov
hlt
test
sbb
pop
mov
mov
aaa
test
mov
dec
in
aam
mov
pushf
scas
test
mov
hlt
aad
dec
mov
add
cmpsb
cmp
cmpsl
mov
and
cli
mov
sarb
cwtl
in
mov
in
cmp
push
shll
adcb
jb
imul
fwait
clc
adc
xlat
bound
test
sbb
cmp
pop
dec
push
mov
adc
lods
cld
in
and
add
and
stos
cld
cmp
mov
xchg
push
ret
push
cld
pop
incl
shlb
lret
adc
mov
inc
arpl
xchg
inc
out
cmc
je
jmp
lret
test
ljmp
jp
call
xchg
popf
pop
stos
gs
xor
pop
dec
aam
ss
es
mov
lds
scas
nop
add
sahf
adcl
into
push
in
dec
shrb
aas
push
mov
ja
movsl
lods
cs
push
xchg
or
xchg
out
adc
and
in
push
adc
pop
fwait
mov
iret
data16
inc
js
jecxz
daa
mov
ss
lods
mov
aaa
rclb
jns
push
jge
arpl
pop
jl
sub
mov
cmp
scas
leave
stc
ds
xor
inc
dec
pop
sub
out
repz
sti
xchg
test
out
sti
dec
aaa
aad
paddb
test
or
ret
push
imul
lahf
aas
andb
push
aad
jno
dec
test
in
mov
mov
xchg
mov
loope
push
mov
dec
mov
adc
dec
das
addl
push
push
jmp
push
adc
or
sbb
or
sbb
loop
fsubr
mov
sarl
loopne
aam
xchg
mov
and
sub
sub
push
mov
sbb
mov
or
jne
cmp
pusha
inc
push
das
test
push
or
pop
divb
data16
dec
inc
mov
and
xchg
inc
leave
pop
stc
dec
movsb
imul
mov
pushl
inc
adc
test
cmp
xchg
in
pop
pop
loope
inc
xchg
ja
inc
test
push
in
adc
sub
int
mov
movsb
jns
pop
ljmp
rcll
adc
adc
sarb
xchg
push
sbb
push
xorb
test
fidivs
mov
fsub
jmp
pushf
xor
rcl
pop
aas
in
sbb
lahf
test
ret
sub
mov
mov
icebp
call
insl
adc
ja,pn
push
mov
mov
sub
jmp
inc
inc
fisubrs
fidivl
mov
testl
out
ret
pop
jl
sbb
gs
out
or
and
lret
daa
lods
dec
xchg
ljmp
repnz
cmc
push
cmp
push
icebp
and
movsb
jno
sub
mov
gs
xor
insl
mov
cmp
shll
cmp
cmpsl
mov
sarl
insb
cld
fadd
adc
mov
in
addr16
out
jecxz
and
mov
stos
inc
nop
das
jl
hlt
push
mov
xor
and
lret
mov
jae
mov
dec
jae
test
iret
test
stos
out
lea
ret
cltd
orb
insb
outsb
jae
jo
fists
sub
lods
cs
add
lret
mov
cmp
imul
lods
imul
mov
clc
fwait
pop
adc
inc
and
or
mov
pushf
push
jb
add
jb
mov
into
sub
add
and
push
stos
jg
sub
mov
jl
cmc
xchg
push
inc
hlt
pop
add
add
cmp
loop
jo
in
push
xchg
push
push
mov
lret
les
orl
in
popf
mov
mov
lods
jmp
pop
jo
mov
push
cmp
mov
fnsave
xchg
pop
adc
subb
test
mov
push
lods
test
mov
ss
movsl
sbb
or
inc
jns
stc
negl
mov
push
stos
test
mov
xor
sbb
pop
adc
or
enter
xchg
scas
jg
cltd
mov
mul
mov
loope
mov
in
scas
sub
lods
lret
add
movsl
mov
xchg
xchg
jae
aam
loope
test
les
insl
mov
incl
or
dec
and
outsb
shrl
in
mov
in
fldenv
inc
daa
push
pop
sbb
fidivl
push
jle
pop
cwtl
mov
push
xlat
in
dec
or
and
inc
dec
xlat
in
lahf
cmp
ss
ss
repnz
mov
cltd
mov
cmp
push
clc
inc
repnz
or
push
pop
test
loope
xchg
pop
xchg
fiaddl
adc
es
xchg
inc
cmc
adc
cld
pop
sbb
mov
pop
scas
lock
sub
sbb
pop
fst
mov
dec
shll
xchg
mov
ja
and
aas
pop
cmp
aad
sub
imul
int3
push
cmp
test
inc
push
out
xor
sarb
sar
jmp
inc
std
popf
fdivrl
jecxz
mov
push
push
faddp
pop
pop
mov
leave
sarl
popa
fwait
dec
les
sub
mov
stos
or
cmp
addb
mov
push
imul
movsb
cmp
mov
cmp
inc
sahf
in
xchg
adc
jmp
lock
je
or
in
mov
out
rdmsr
leave
pop
lods
dec
jne
pop
adc
jne
outsl
jae
js
mov
pop
fs
pop
mov
or
push
push
mov
push
dec
out
sub
push
out
imulb
xchg
jecxz
cmpsb
cld
fisubs
dec
int
rorb
fwait
mov
daa
in
adc
daa
adc
sbb
push
cmp
jge
les
mov
shrb
enter
mov
enter
inc
add
cmpsl
arpl
dec
js
ss
test
iret
xor
jnp
mov
xchg
inc
sub
cmpsb
inc
jo
out
cmp
or
scas
inc
jmp
bound
lahf
dec
dec
pop
test
dec
aas
lods
inc
out
fwait
mov
adc
imul
jns
imul
cmp
aam
pusha
xor
inc
jb
stos
es
mov
xor
sahf
jle
imul
test
add
push
out
pusha
push
decb
xchg
pop
lock
push
popa
sbb
mov
and
xor
cmp
out
xorb
fs
icebp
inc
mov
lahf
jb
mov
dec
sub
dec
push
dec
and
in
and
mov
push
inc
movsb
inc
das
mov
mov
in
mov
nop
jle
outsb
cli
lret
jge
addl
outsb
lret
push
repnz
inc
int3
push
ficoml
out
xor
push
gs
mov
clc
cmp
jge
mov
or
mov
enter
push
call
imul
jns
loop
jb
dec
pop
pop
mov
sub
add
das
sbb
out
cmpsl
adc
mov
les
cwtl
je
rcr
cs
adc
or
dec
cs
dec
gs
xor
add
cmpsb
xchg
mov
and
lods
mov
xchg
sbb
cld
movsl
mov
xrelease
test
xchg
enter
inc
add
nop
pop
ret
mov
jmp
gs
xor
sti
rcl
icebp
in
jle
pop
mov
addr16
imul
push
lock
mov
and
mov
daa
ss
jg
test
setbe
mov
popf
jnp
ret
push
jl
cmp
sbb
or
and
jg
fstps
or
ljmp
xchg
lret
sub
rcll
or
into
dec
sbb
stos
scas
xchg
cmp
cmpsb
mov
inc
test
xor
xor
popf
into
or
shll
push
mov
sbb
push
and
lds
pop
push
mov
fdivrl
lahf
cmp
orb
mov
imul
in
adc
je
cmp
xor
jg
dec
pop
int3
outsl
cs
aad
int3
mov
insl
cmp
mov
jmp
sbb
push
scas
cmp
sub
jl
nop
cmc
gs
inc
shrb
cmc
call
fs
mov
cli
sub
test
inc
sub
and
dec
insb
dec
xchg
mov
loopne
lock
adc
xor
aas
es
mov
xor
js
imul
rol
test
in
mov
mov
sbb
jmp
and
sub
mov
push
loopne
call
or
xor
mov
mov
cmc
bound
and
add
xor
cwtl
mov
hlt
aas
outsl
sbb
mov
sbb
pop
ss
rcll
and
rorb
push
add
pop
js
cmp
push
push
movsl
iret
nop
mov
test
pop
fcompl
rol
add
enter
mov
gs
xor
arpl
sub
int3
mov
fwait
adc
repz
stc
ja
xchg
and
fwait
mov
sbb
std
pushf
shlb
imull
mov
xor
add
imul
iret
iret
cmp
push
enter
daa
jo
mov
fldcw
data16
mov
outsb
int
push
in
sbb
mov
fdivrs
addr16
or
or
mov
jnp
mov
dec
fwait
mov
mov
icebp
outsl
insl
das
mov
lods
ja
add
mov
jl
push
scas
lock
adc
orb
call
pop
ds
pop
mov
in
jg
mov
test
jmp
scas
jb
push
call
push
fwait
sub
adcl
scas
pop
xchg
int3
dec
jb
push
jg
sbb
lcall
and
lea
cmp
lahf
loopne
lods
repnz
addr16
out
pavgb
outsl
jle
dec
inc
fldenv
cld
aas
pop
inc
ljmp
or
lock
imul
push
rolb
pushf
dec
test
mov
sbbb
inc
jg
stc
ret
push
aas
mov
dec
sbb
int3
imul
mov
in
pop
inc
icebp
lods
mov
or
push
in
jns
inc
xchg
scas
push
mov
pop
jae
sub
adc
push
pop
dec
cmpsl
cmp
jge
push
lret
sub
out
or
mov
or
add
rcll
push
xchg
or
call
iret
lahf
pop
inc
call
jecxz
icebp
push
ljmp
dec
mov
sbb
mov
dec
in
sub
dec
pusha
push
push
jne
scas
outsl
pusha
mov
mov
pushf
je
ljmp
pop
call
cli
xchg
and
fadd
loope,pn
inc
lds
daa
jno
mov
mov
xchg
or
sbb
cld
mov
and
loop
xchg
std
pushf
xchg
stos
pop
add
notl
and
ror
mov
inc
andps
in
cld
add
mov
mov
cmp
adc
shrd
pop
pop
jmp
sahf
bound
add
fwait
xor
add
xor
lahf
xchg
imul
rcrb
jb
inc
sub
dec
mov
jmp
fildll
insl
lahf
sub
ss
std
gs
pop
adc
sub
add
pusha
adc
sahf
mov
adc
inc
push
push
mov
ror
loopne
mov
mov
imul
jae
push
cmc
nop
mov
dec
outsl
inc
mov
out
mov
and
mov
mov
inc
push
mov
aas
in
sti
cmpsb
sub
mov
add
mov
cmp
mov
test
test
jns
mov
adc
mov
sbb
ret
lret
xor
pop
cmp
inc
insl
adc
scas
loop
sbb
mov
mov
push
mov
cmc
lret
mov
les
push
scas
cmp
stos
dec
pop
xchg
rorl
and
and
lret
or
xlat
push
jnp
add
outsl
mov
icebp
dec
lcall
push
xchg
sub
fidivl
mov
jp
int
adc
jbe
and
sub
push
inc
rolb
int
lea
fwait
or
sub
cwtl
push
lds
popa
jnp
mov
sub
clc
xor
lods
out
stos
lahf
inc
xchg
arpl
and
sub
into
dec
ljmp
movsl
jb
loopne
lds
es
lahf
popf
int3
fdiv
mov
in
rcrb
mull
pop
aaa
outsb
add
cmpsb
pushf
loop
dec
push
jg
and
dec
jns
pop
pop
jbe
push
shll
add
pop
mov
and
cwtl
dec
insb
movb
nop
ret
lcall
cmc
lcall
mov
nop
mov
inc
pushf
fdivs
cmpsb
or
mov
mov
je
xor
std
jno
lds
sub
push
pop
push
xor
push
jge
sub
dec
ret
clc
and
sub
out
mov
movsb
xor
stc
fsub
mov
cli
dec
push
adc
int
jmp
push
in
jge
push
mov
jne
sbb
add
cltd
mov
pop
mov
int
sub
cs
sarb
ds
fimuls
mov
push
aas
cs
sub
mov
fcom
mov
pop
test
or
jp
leave
in
cs
pop
jo
leave
add
orb
xor
test
cmp
pop
cmp
in
inc
jecxz
jno
push
xor
scas
iret
lret
insb
in
frstor
mov
mov
push
jecxz
out
sbb
adc
arpl
mov
dec
sbb
scas
fcoml
sub
daa
sti
and
xchg
cmpsl
imull
sbb
sub
xor
bound
dec
pop
sub
pop
sub
popa
or
push
push
call
fisubs
sbb
mov
hlt
add
inc
dec
mov
aam
add
jae
sbb
push
inc
sub
cmc
stos
sub
loopne
pop
pop
add
jns
fcmove
imul
inc
jae
or
lds
add
sub
pop
aas
loope
js
icebp
jbe
dec
or
push
push
mov
xor
lret
popa
adc
stos
and
sbbb
stc
xor
sahf
mov
lret
jecxz
loopne
xchg
mov
into
fldcw
psrld
jno
push
dec
cmc
jns
subb
xlat
sub
mov
sbb
repz
cld
subb
dec
xchg
sar
cmp
push
adc
bound
inc
xchg
cmp
jb
mov
push
jbe
sub
ljmp
sahf
in
mov
mov
fwait
mov
xchg
or
stos
cmpsb
sbb
lods
push
and
mov
xor
adc
out
sub
push
add
test
sub
ret
out
adc
notb
mov
rclb
fbld
fs
js
out
push
test
push
and
xlat
mov
or
test
insl
xor
inc
test
mov
pop
cmp
pop
xor
test
jbe
jne
idivb
fisubrl
out
call
mov
push
sbb
sbbl
pop
arpl
push
roll
cmp
lret
pop
sbb
inc
aam
lock
push
mov
xchg
inc
jp
dec
sub
sbbb
sti
aas
mov
ljmp
xor
or
xchg
jl
adc
pop
ja
or
inc
mov
cmpsb
sbbb
inc
jb
adc
stos
push
stc
xchg
cmc
xlat
fdivr
clc
push
push
and
cmp
cmc
enter
cmpsb
lea
das
pop
or
adc
es
sbbb
xor
jbe
ds
lret
push
ljmp
xor
rcll
pusha
fists
jecxz
jp
fsts
into
shlb
out
cmp
leave
lea
iret
mov
daa
add
ret
sub
adc
sarb
mull
leave
push
fdecstp
mov
clc
shrl
scas
jmp
mov
and
ret
rorb
inc
xchg
fcmovbe
push
mov
xchg
sbb
xchg
xchg
dec
adc
jae
dec
xchg
or
xchg
insl
xchg
mov
sbb
enter
lock
mov
out
shr
mov
daa
fdivr
inc
push
es
add
dec
xor
test
mov
pop
pushf
add
outsl
mov
decl
andb
test
jg
jnp
pop
or
lret
or
lret
out
add
lods
cmp
pop
ret
add
nop
mov
hlt
push
mov
mov
sub
pop
sub
pusha
jns
xchg
nop
or
mov
sub
adc
xchg
bound
hlt
ds
xor
imul
inc
fwait
cmp
in
jmp
push
mov
fcomps
aad
jnp
iret
and
mov
std
in
lds
mov
push
scas
mov
lock
and
clc
mov
xor
push
iret
mov
add
push
push
test
push
mov
stc
loop
adc
aas
es
and
inc
push
scas
adc
fwait
into
sbb
xchg
cmp
adc
dec
scas
jle
aaa
mov
adc
jno
iret
and
cmp
adc
jne
movsb
mov
pop
push
fstps
arpl
imul
outsb
sbb
jl
outsb
out
cmp
jno
stos
add
sub
mov
js
adc
mov
clc
lahf
xlat
jnp
andl
jnp
cmc
arpl
xlat
in
push
lcall
fs
shll
sahf
jg
dec
pushf
inc
lock
mov
into
repnz
inc
cmp
pop
in
pop
stc
aam
pop
jmp
addr16
mov
pop
sub
xchg
fiaddl
or
aaa
mov
test
sar
inc
lret
nop
jp
dec
inc
mov
outsb
mov
jae
or
repz
add
or
out
push
mov
add
scas
lea
and
mov
jb
xorl
enter
pop
pop
cmpsl
push
dec
pusha
cs
cld
inc
enter
dec
pop
pop
out
test
cltd
add
and
repz
cmp
in
imul
popf
or
xorl
inc
mov
xchg
cmp
cmpl
and
pop
jg
mov
adc
inc
hlt
stos
pop
icebp
or
aas
jl
leave
cmp
xchg
sub
fcoms
mov
lock
call
mov
mov
mov
jne
push
xchg
cmc
addr16
jo
push
rorl
inc
pop
inc
jno
js
adcb
in
ss
out
outsl
pop
mov
mov
jecxz
pop
aas
and
xchg
mov
add
rorb
xor
sarl
lret
xchg
clc
outsb
mov
imul
push
in
bound
out
xor
or
push
push
stc
cmp
adc
jnp
std
in
lahf
repz
mov
adc
jb
inc
inc
fisttpll
gs
or
push
push
lock
pusha
mov
xchg
mov
bnd
fwait
mov
add
push
test
jge
jno
hlt
push
fstp
mov
cli
lcall
mov
fcoms
idiv
inc
mov
sub
pop
push
pop
out
idivb
mov
rcr
push
or
add
inc
bound
sbb
std
out
hlt
aam
mov
clc
popl
dec
mov
sbbl
rol
popf
mov
scas
bound
xor
addr16
incb
xchg
mov
sti
pop
cmpsb
pop
push
push
test
fbld
rcl
adc
out
fidivrs
popf
add
ds
jmp
sar
xchg
jae
adc
js
movsb
js
xlat
xlat
test
sbb
adcb
mov
lea
shll
sub
fs
sbb
stos
fwait
mov
dec
push
dec
rcrb
jecxz
es
mov
fsubp
sbb
jne
adc
inc
mov
clc
push
and
mov
xlat
xchg
in
sub
fists
aam
mov
add
repz
stc
addb
pop
int3
dec
xor
rclb
imulb
push
pop
adc
jg
jbe
mov
mov
push
popa
ja
out
mov
out
testl
xor
adc
adcl
ss
adc
xchg
daa
clc
pop
lahf
mov
ret
xchg
and
cwtl
les
add
sub
hlt
test
and
lahf
hlt
jb
popf
scas
push
dec
neg
aas
roll
xchg
std
repz
push
bound
call
lds
shl
icebp
push
in
cmp
imul
push
hlt
sbbl
in
xlat
cs
jo
add
std
inc
pop
and
test
cmpb
sahf
push
roll
add
mov
dec
fsubl
test
and
or
insl
jle
xchg
adc
adc
cmp
fldln2
gs
push
or
mov
outsl
into
jecxz
pop
mov
pop
std
mov
lret
push
mov
lods
xchg
aam
jg
mov
shll
xor
data16
or
test
scas
mov
inc
and
pop
ljmp
imul
inc
dec
sub
lock
es
in
in
stos
testl
shlb
mov
xchg
cltd
push
lret
jmp
mov
jl
jg
mov
fildl
xchg
shr
pop
pop
sbb
ret
mov
mov
xchg
cmpsb
arpl
or
xor
and
adc
cltd
pop
jmp
push
iret
lea
shlb
je
pop
rol
inc
dec
daa
xor
jp
mov
adc
mov
dec
cmp
xchg
dec
idivl
lods
pop
adc
cld
mov
inc
mov
push
sub
les
fwait
mov
add
repz
jns
mov
fisttpll
pop
lret
push
ds
jmp
inc
xor
fs
fdivl
add
jge
arpl
pop
adc
test
out
fscale
je
mov
repnz
out
shrl
xchg
sbb
push
pop
adc
in
or
lds
insl
push
push
lret
leave
add
lock
test
xchg
jecxz
call
inc
adc
xchg
mov
push
jge
movsl
push
mov
rorl
aaa
in
jns
jg
jnp
sti
sbbb
lcall
rcrb
scas
mov
mov
sahf
in
rcrb
icebp
mov
test
inc
sub
inc
pusha
pop
stc
fdivrs
mov
push
jecxz
mov
lods
adc
dec
sub
mov
imul
std
mov
int
sbb
sbb
cmpsl
sbb
mov
bound
sub
inc
subb
sbb
xchg
inc
in
xchg
cmp
jmp
aam
jne,pt
jg
jg
cli
fwait
mov
adc
outsb
push
js
nop
in
pusha
mov
jp
insl
enter
in
dec
repz
das
mul
push
push
pop
aam
or
int
mov
mov
add
loop
mov
fs
and
mov
frstor
inc
in
leave
aas
lret
xor
cld
fcoms
cmpsl
outsl
lcall
pop
and
sbb
lods
ret
shll
scas
or
cmc
mov
push
daa
sub
test
aaa
mov
sahf
add
mov
ret
jnp
dec
or
push
out
add
shlb
or
and
movsb
enter
cmp
jno
loope
jno
je
push
lods
into
pushf
movsl
sbb
in
stc
movb
adc
ds
add
fnsave
pop
shrl
icebp
in
sbb
enter
inc
sarb
push
loopne
cs
adc
jb
inc
pop
les
fimull
or
movsl
sub
pop
adc
fwait
dec
cmp
incb
shlb
lds
xorb
icebp
ret
mov
xor
push
pushf
icebp
pop
add
movsl
fistpl
fwait
jecxz
inc
cmp
mov
ljmp
cld
cwtl
sub
xchg
dec
addr16
bnd
dec
insb
adc
testb
cmp
jp
push
sbb
hlt
leave
ror
and
jnp
dec
je
out
fwait
rolb
mov
into
push
loope
xor
adcb
popa
ljmp
add
push
shll
sub
test
mov
sub
pop
insb
cs
pusha
imul
mov
jl
add
jb
push
ss
or
and
test
xchg
inc
ss
push
decb
lds
or
in
es
sbb
jo
ds
stc
add
scas
pushf
idivb
pop
lahf
sub
xor
int3
inc
lret
test
cltd
or
push
xchg
es
pushf
dec
jge
sub
push
stc
sub
test
mov
cmp
push
xor
xchg
mov
rcrb
popf
ret
pop
pop
int
xchg
das
xchg
inc
xorl
pusha
shlb
je,pt
push
addr16
int3
pop
xchg
sbb
mov
xchg
xchg
ret
push
sbb
pop
push
or
loope
nop
fwait
sub
jg
cwtl
push
jae
shrl
cmp
andb
adc
lock
and
mov
hlt
pushf
iret
popf
mov
ljmp
fs
jnp
jmp
es
loope
push
xchg
insl
into
dec
sub
fsubr
leave
sbb
jo
mov
mov
stc
jne
aaa
sbb
arpl
jo
mov
xchg
std
add
stos
nop
or
push
sbb
into
pop
xchg
data16
xor
jns
ss
jne
sbb
cmpsb
cltd
nop
adc
add
scas
stos
fimull
lods
incl
mov
cmc
jmp
int
notl
cmp
push
sahf
arpl
je
jle
in
or
xchg
ss
inc
adc
mov
fistl
dec
cld
in
pushf
pop
dec
mov
setle
xlat
cld
mov
add
addr16
push
cld
lds
mov
xchg
dec
jmp
movsb
xchg
test
mov
xchg
sarl
push
jb
pop
popa
in
fsts
or
xchg
jmp
jno
lea
out
mov
push
test
add
and
adc
insb
pop
pop
cmp
in
mov
rolb
gs
pusha
sub
cmp
cmp
or
sub
jmp
and
mov
popa
mov
jnp
push
icebp
inc
cwtl
mov
imul
mov
add
jns
pop
and
loope
pusha
clc
lods
lea
inc
sub
flds
jp
std
xor
bound
out
sbb
fwait
xor
outsb
repnz
xchg
adcb
sbb
xchg
lds
cmp
je
dec
je
pushf
popa
aaa
scas
in
add
push
mov
ret
inc
jbe
pushf
cmpsb
push
and
or
push
aas
mov
jb
mov
inc
pusha
mov
shl
sahf
add
lret
mov
loope
shl
jns
jnp
or
cmpsb
add
andb
stos
mov
out
mov
fldt
xor
call
cmc
or
xchg
ret
sbb
bound
pop
cmp
sarl
pushl
or
arpl
adc
xchg
and
cmp
pop
inc
loopne
push
lret
inc
mov
rcll
push
jae
pop
push
negb
push
push
xchg
sbb
mov
mov
sbb
pushf
minps
sti
inc
mov
bound
add
stc
inc
aam
push
xor
add
cltd
xor
mov
mov
pop
push
or
mov
out
sbb
insl
add
movsb
test
popl
cmp
jl
leave
mov
pop
mov
and
insb
sub
mov
sub
jle
in
shll
push
dec
dec
dec
hlt
mov
xchg
xchg
adc
outsl
mov
movsb
mov
popf
cmp
adc
lea
adc
test
fcomps
imul
xor
jecxz
and
mov
adc
jbe
call
outsb
mov
icebp
movsb
ja
pop
inc
ljmp
leave
sub
xchg
xchg
mov
or
jnp
movsl
mov
dec
rcl
jl
inc
into
dec
lret
jo
push
push
aad
push
rorb
xor
xor
mov
movsb
lock
pop
sbb
xchg
jl
mov
out
add
notl
xchg
push
in
stc
insl
add
outsl
cmpsb
shufps
dec
sbb
sbb
add
adc
push
lods
sbb
jl
inc
dec
or
lea
adc
inc
test
push
icebp
lret
in
mul
ss
insl
jbe
negl
xor
mov
lock
sbbb
xchg
das
inc
dec
out
mov
mov
cld
mov
xchg
push
xchg
call
jle
repz
dec
sbb
adc
cmp
lret
test
out
loope
sub
ss
add
movb
jp
pop
sahf
push
xor
rcrl
imull
movsb
adc
test
fwait
arpl
inc
xchg
jp
arpl
xor
mov
idivl
sbb
or
lods
fsub
pop
sbb
call
xchg
push
into
add
lds
mov
out
in
xchg
lods
jno
add
fadds
mov
adc
push
pop
mov
stc
pop
shll
lods
mov
adc
in
das
and
das
cmp
mov
mov
loopne
xor
sub
dec
adc
mov
xchg
data16
add
sbb
or
xor
mov
mov
outsb
leave
loop
xabort
in
dec
and
int
and
lds
cmp
fwait
add
jmp
mov
stc
add
inc
test
jo
das
gs
mov
jae
mov
dec
mov
sbb
mov
int
aaa
mov
sbb
cmpl
push
and
cmp
sub
cwtl
fwait
add
cmp
lds
mov
enter
push
out
jl
jbe
fnsave
add
add
or
adc
movsb
into
jg
pop
inc
daa
movsb
cmovp
jno
lods
outsl
test
cmc
pcmpeqd
rcrl
pop
mull
mov
push
push
imul
xor
movsl
adc
inc
loope
icebp
loopne
jp
nop
ja
sub
sbb
push
jmp
adc
pop
fs
xlat
les
movsb
mov
into
jmp
or
mov
cld
and
jnp
mov
sub
and
adc
lea
push
les
cpuid
jnp
push
rcll
rclb
and
adc
xor
and
arpl
or
cmp
es
dec
fdivs
pushl
call
in
sbb
sahf
add
mov
das
mov
xor
pop
pop
lret
jae
in
fwait
xor
sub
les
shll
or
jae
lods
jecxz
or
cld
test
add
mov
sbb
inc
xlat
insb
jno
in
mov
xchg
pop
sub
inc
in
rclb
cs
mov
cmpb
fstpl
jecxz
das
out
adc
mov
xchg
into
aam
sbb
lcall
clc
repnz
ret
and
scas
add
ret
add
hlt
pop
imull
pop
cmovbe
mov
pop
xor
pop
js
mov
pop
lret
fsubs
jne
adc
orb
sub
mov
jns
rcr
insl
xlat
movsb
roll
xor
inc
dec
and
add
mov
push
sbb
inc
popf
sbb
shlb
sbb
and
out
xor
or
stc
push
mov
lcall
sbb
dec
mov
jbe
out
jno
and
jmp
pop
mov
call
add
push
inc
nop
pop
sbb
inc
addr16
lds
ficomps
add
stc
mov
shll
lods
ret
mov
push
mov
aam
lahf
fadds
dec
adc
fs
enter
lcall
inc
pop
test
adc
mov
mov
icebp
sub
inc
subb
jae
lds
sub
adc
scas
sti
loop
jns
lock
icebp
push
test
push
repz
data16
jecxz
fdivrp
test
call
subl
mov
pop
lock
jge
pop
loopne
sub
scas
out
popa
cmpsl
aad
gs
pop
adc
push
daa
test
pop
mov
add
scas
jecxz
test
leave
mov
pop
xor
outsb
aad
mov
popf
jnp
pop
dec
jnp
test
gs
mov
fisubs
inc
jecxz
mov
call
jg
jge
mov
mov
out
lea
fs
popa
lahf
rcrl
loop
mov
jecxz
xor
outsl
fildll
add
mov
in
sub
push
scas
jb
push
insl
push
adc
sub
lahf
repz
cs
mov
aad
outsl
js
rcrl
leave
mov
push
jbe
or
adc
push
lock
mov
xor
cli
sarb
adcl
jge
xor
mov
jg
sub
dec
xor
xchg
dec
daa
dec
adc
and
cltd
daa
push
add
or
int3
les
rorb
push
pop
sub
ss
fucomp
lahf
hlt
out
sbb
xor
clc
cmpsl
les
dec
cmp
icebp
pop
gs
or
cli
int3
or
push
imul
int
ljmp
in
insl
ret
jae
aam
mov
pop
rcll
mov
sub
pop
mov
das
pop
mov
imul
sbb
insb
icebp
lret
fisttpll
lret
jbe
lret
cmp
mov
out
jb
les
push
repnz
mov
cmp
aas
sbb
icebp
outsl
fiaddl
imul
cmc
sti
stos
js
inc
inc
mov
dec
xchg
inc
push
mov
sbb
add
mov
adc
jecxz
add
out
lock
sbb
fcompl
push
imul
movsb
sub
push
jge
adc
jo
push
sbb
dec
push
fcmovnu
pop
mov
aad
aaa
mov
mov
mov
cli
scas
mov
dec
cli
mov
bswap
icebp
inc
jle
sub
stc
jne
adc
int3
mov
ret
mov
ss
fcoms
ja
dec
mov
jo
add
or
adc
mov
bound
sub
mov
add
fimuls
mov
insb
stc
and
and
mull
or
ds
cmp
test
xchg
aam
xchg
les
test
push
fwait
jg
sbbb
out
add
or
out
lret
mov
icebp
jb
push
pop
cmp
call
bswap
dec
adc
sbb
repz
xor
aaa
pop
xor
lret
jg
lea
xchg
pop
mov
inc
sub
ljmp
pop
lret
sbb
popf
and
scas
lods
leave
les
ficoml
inc
mov
ret
divb
add
push
loop
jle
fists
pusha
ja
pop
adc
data16
nop
enter
push
fisubs
mov
sti
in
adc
jge
outsl
mov
je
or
outsb
cmp
ret
jns
pop
jmp
add
and
xor
fsubrl
xchg
and
adc
outsb
mov
ffree
add
adc
and
pop
dec
adc
sub
lds
xlat
jns
std
ds
and
outsl
jl
test
cmpsl
pop
std
hlt
fisttps
js
push
arpl
push
into
mov
or
lods
es
fimull
fnop
push
pusha
dec
jl
roll
leave
jo
sub
and
xor
mov
popf
add
data16
stc
mov
xor
pushl
and
mov
out
mov
fs
fwait
lock
rorl
sbb
outsb
or
addr16
sbb
xlat
push
mov
or
jmp
hlt
icebp
lret
stc
push
lods
lcall
orb
roll
fisubs
inc
push
mov
aaa
mov
lea
rol
or
or
call
xchg
loopne
fstl
stos
adc
js
sahf
push
dec
mov
push
pushf
xor
xor
adc
fwait
push
push
mov
pop
fisubrl
sbb
pop
add
jg
push
int3
shlb
setbe
ds
sbb
jp
mull
xchg
mov
data16
jecxz
cwtl
mov
and
clc
sub
aam
sarb
push
jo
scas
mov
outsl
nop
call
sbb
push
ret
jno
add
imul
insb
in
xchg
xchg
or
out
dec
dec
aas
mov
cmpsl
movsl
loop
jg
dec
add
sub
inc
cmp
inc
out
shlb
jb
inc
cs
add
mov
nop
add
jb
in
int
xchg
scas
mov
push
jb
iret
enter
push
push
jecxz
enter
inc
jle
mov
stos
loope
cwtl
fcmovb
xor
and
fidivrl
fistl
es
ds
ja
enter
sub
adc
jecxz
mov
in
fldcw
jns
and
push
or
scas
cld
movsl
in
jb
pop
inc
ss
adc
xor
cld
jno
mov
stc
jbe
stc
std
mov
ficompl
xor
imul
dec
add
or
stc
jno
jns
ficomps
in
mov
out
movsl
data16
mov
and
testl
ret
mov
sbb
iret
mov
fdivl
shrb
std
mov
cli
shll
test
push
adc
insb
mov
or
pushf
rclb
sar
jmp
imul
stos
repnz
sub
sbb
testl
adc
push
jbe
repz
push
aaa
inc
dec
pop
push
scas
and
inc
cli
cmp
mov
int3
sub
int3
mov
out
cmp
std
ljmp
fdivr
sub
loopne
aas
dec
xchg
sbb
icebp
adc
and
clc
sbb
in
mov
jl
out
inc
lods
outsb
lcall
jmp
cmp
and
pop
in
pop
movsl
ljmp
aam
push
stos
lods
ds
xor
mov
movsb
icebp
andl
cmp
dec
shrb
add
jae
test
into
dec
fwait
lods
xor
dec
and
mov
nop
xor
mov
xor
mov
dec
test
xor
fs
jl
dec
push
lock
pop
adc
out
fldenv
stos
pop
les
mov
in
inc
data16
add
adc
adc
lock
mov
mov
repnz
sbb
mov
cmp
fwait
xlat
sub
gs
sbbl
push
data16
mov
ret
daa
mov
loop
test
and
and
imull
pop
dec
rcll
mov
aam
cmpsb
adc
insl
push
das
popa
aaa
rclb
stos
fs
xchg
sbb
int
call
and
shrl
adc
wrmsr
negb
into
pop
xchg
pop
add
nop
and
xchg
adc
pop
xchg
lcall
cmp
inc
cmp
mov
mov
cmp
lock
cmpsl
lock
repnz
bound
and
js
je
je
adc
pop
popf
lods
flds
cmp
adcb
ret
dec
cmp
push
mov
pop
sub
add
push
pop
inc
pop
push
mov
lcall
pop
rclb
inc
das
orl
sub
aaa
pop
adc
shlb
jb
rcll
xchg
pop
int
xor
inc
cmc
cmpsl
jae
sahf
stc
sbb
pop
popf
cld
xchg
pushf
lds
xor
push
pop
sbb
fcoms
sbb
add
or
loope
push
icebp
das
adc
cs
push
push
mov
js
pop
enter
das
ljmp
sti
xlat
and
or
fidivl
dec
sbb
xor
rcrl
jp
push
int
test
mov
mov
testl
push
dec
mov
sub
push
je
pop
loope
pop
test
std
ljmp
sarl
es
push
push
insl
out
scas
cmp
cwtl
insl
in
lret
scas
xor
stos
insl
inc
dec
out
or
xchg
pushf
mov
or
mov
mov
or
lea
lock
xor
and
call
jle
mov
scas
ljmp
mov
adc
inc
jo
out
push
sbb
push
xchg
xor
sbb
mov
cmpsb
fldenv
pop
sub
add
pop
push
or
call
xchg
sbb
xor
and
and
hlt
testb
inc
popa
stos
call
mov
insl
adc
cltd
das
clc
mov
test
test
call
mov
sub
push
daa
cld
jbe
cmp
not
aaa
xchg
mov
jo
push
into
push
sub
sti
cmpsb
clc
mov
xchg
mov
movsl
adc
rclb
loop
mov
icebp
mov
mov
js
shl
in
pop
sahf
mov
mov
mov
ja
ficoms
adc
mov
pop
inc
lods
sbb
mov
mov
and
clc
and
mov
pop
dec
in
call
pop
stc
out
ds
sbb
orl
fbstp
fdivs
in
push
inc
stos
inc
out
sub
loopne
or
pop
jno
enter
imul
fstl
sub
jle
push
or
mov
add
xchg
mov
mov
outsl
dec
shr
rcll
sbb
mov
xchg
add
pop
stos
ret
jne
push
inc
push
lcall
jmp
mov
icebp
sbb
push
and
pop
and
adc
push
xlat
lret
jo
jge
ret
pop
xor
int3
and
aas
sar
sub
pop
add
inc
mov
jecxz
icebp
fistl
pop
decb
or
loope
inc
add
inc
cmp
test
sub
das
movsl
jmp
add
jae
outsl
pop
addr16
mov
cmc
rcl
shl
cs
mov
je
cmp
mov
mov
popf
rclb
cld
or
iret
outsb
xor
and
mov
mov
sbb
movsl
dec
stos
lret
mov
arpl
pop
dec
ss
out
xor
adc
repz
stos
mov
shl
fists
push
mov
fcmovnbe
adc
mov
lock
out
jge
sub
movsb
fwait
mov
je
nop
add
sub
add
insl
inc
ljmp
jno
movl
or
outsb
bswap
int3
lock
shll
and
enter
dec
call
insl
insb
loop
xchg
jo
add
pop
mov
imul
sbb
push
jle
fnsave
testl
inc
sarb
and
jmp
push
push
aas
out
int
cwtl
pop
rorl
fcoml
mov
rclb
cmp
lahf
jno
xor
xor
lock
jmp
cltd
sub
cmpb
int
dec
pop
xor
mov
shlb
cmpsb
dec
fcomip
pop
cmc
or
je
sbb
aam
arpl
cmp
ja
call
push
in
xor
loop
pop
repz
fcmovbe
and
ret
insl
std
aaa
mov
aad
cltd
andl
data16
adc
pushf
inc
pop
arpl
or
fisubl
sub
int
dec
sub
outsb
dec
repz
jb
mov
inc
xor
push
mull
push
lods
out
aaa
sub
xor
subl
cmp
inc
sbb
sub
gs
das
hlt
pop
cmp
pop
bnd
dec
mov
adc
pop
dec
clc
std
pop
ret
xchg
aas
je
cmpsl
mov
aam
divl
add
int
cmpb
sbb
dec
cmp
push
add
daa
mov
stos
dec
push
subb
cld
jp
out
in
sbb
daa
add
mov
jbe
jmp
dec
es
cmp
xor
out
fistps
sub
xchg
js
pop
inc
and
fs
cmp
mov
int
movups
stc
inc
into
and
push
flds
push
dec
inc
mov
ret
je
or
or
insb
popa
stos
stos
xor
jmp
popf
pop
fisubrs
stc
pusha
and
push
sbb
sub
inc
cmp
or
jmp
adc
sub
inc
movsl
ret
fs
ljmp
out
inc
and
das
cmp
sbb
addr16
sarb
aam
or
and
xor
or
or
push
sub
push
out
mov
subb
js
repz
fnstenv
cld
test
add
scas
cmp
int3
push
adc
xor
sar
sub
test
sbb
fmull
xor
outsb
insb
pop
dec
cld
xor
insl
into
cmpb
mov
mov
sbb
xchg
mov
inc
mov
xchg
mov
into
dec
dec
push
or
mov
packssdw
xchg
pop
sbb
jo
repnz
xchg
jmp
and
in
jnp
add
lret
sahf
jle
push
daa
mov
push
enter
add
jnp
lret
xchg
or
mov
inc
mov
std
push
test
mov
in
jb
arpl
mov
insb
outsl
push
insl
lds
or
inc
addr16
mov
jg
out
xlat
out
cli
adc
jl
cmp
adc
and
and
out
ja
push
cld
mov
fs
sub
fimuls
mov
mov
sub
xor
inc
dec
lods
lcall
sbb
mov
fwait
nop
sbb
sub
mov
pop
jns
data16
test
inc
hlt
xor
in
pop
ret
sar
pop
mov
es
stc
jnp
pop
shlb
fisttps
cs
push
ss
lahf
pop
push
dec
shlb
bound
xor
iret
cmp
mov
outsl
mov
mov
or
filds
pushf
add
das
pop
leave
fisubrs
xor
jmp
fdivs
and
mov
daa
pop
pop
outsl
sbb
push
movsl
outsb
add
cmp
adc
inc
in
into
xchg
arpl
aad
test
dec
test
lock
lods
popa
int
sti
rolb
jns
mov
mov
test
popf
add
enter
mov
or
xor
push
lea
stc
shll
arpl
push
add
mov
ljmp
xchg
les
add
adc
xchg
loopne
scas
push
daa
push
inc
jne
or
insb
cmpl
push
roll
bound
sub
fildl
mov
ror
adc
pushf
jnp
inc
push
mov
inc
sbb
xchg
and
xor
jmp
call
pop
dec
push
imul
xchg
xor
xchg
add
aas
pop
ljmp
add
xchg
push
xchg
jb
xlat
pop
fbstp
insl
sbb
addr16
pop
leave
test
xor
cmp
iret
mov
mov
stos
mov
push
repz
dec
ficoms
cltd
lods
and
fsubl
ja
cs
push
sbb
call
in
daa
int
cli
out
mov
cmp
sti
adc
in
outsb
sbb
xor
sbb
rcrb
test
dec
fadds
xlat
xchg
add
leave
xchg
mov
mov
xor
lds
aam
xchg
jmp
bound
push
sub
adc
shrl
sbbb
pop
push
gs
ljmp
sbb
pop
js
divb
imulb
stos
dec
shlb
loope
pop
lret
inc
cmp
dec
push
mov
lds
outsl
jp
stos
mov
lret
mov
add
mov
cmp
fildll
pop
mov
nop
adc
lods
xor
fcmovne
sbb
stos
adc
pusha
add
mov
data16
push
idivl
dec
mov
rol
lret
insl
xchg
sbb
mov
stc
push
mov
dec
push
and
test
sbb
push
inc
in
lret
rcll
sub
lea
fdivrl
outsl
cmp
sti
xor
in
out
outsl
nopl
roll
mov
push
jp
lock
cmp
jns
push
sub
imul
mov
dec
xor
arpl
imul
or
fwait
notb
jl
push
lahf
push
sbb
xor
fistps
sub
xchg
pop
jecxz
mov
inc
push
pop
lcall
mov
add
fwait
stos
inc
jo
movsb
xor
sbb
or
or
jle
repnz
pop
fildl
xchg
into
cmpl
mov
lds
stos
adc
inc
js
sub
mov
call
adc
mov
cmp
pop
jno
and
test
inc
sahf
push
lock
insl
xchg
fstpl
mov
jmp
cmc
sub
scas
rcll
inc
xchg
jbe
adc
push
and
push
scas
dec
jnp
mov
sub
or
lods
cmp
lods
sub
and
insl
mov
out
sbb
rcrl
arpl
lret
popl
jbe
mov
lods
aas
xchg
fsubrs
mov
aas
xchg
in
insb
sbb
sbb
or
mov
ss
xchg
lahf
push
roll
xchg
xchg
loope
aam
and
icebp
mov
jle
mov
xchg
jle
jnp
pusha
ljmp
movsl
imul
push
enter
fisubrl
enter
addr16
filds
push
sti
cs
mov
add
repz
xchg
cmp
or
sbb
mov
cli
outsl
cmp
cltd
jle
cmpsl
fs
aad
or
push
in
roll
inc
mov
push
xchg
aad
clc
repz
pop
dec
hlt
pop
popf
test
fisubl
or
cmc
cmpsl
inc
lret
xor
cmpsl
fsubrs
pop
mov
ficoml
jo
aam
or
daa
jbe
lcall
arpl
mov
mov
pop
cmpl
in
lret
in
subb
push
mov
in
shl
imulb
fbld
loope
mov
imul
and
repnz
add
mov
aas
pop
or
lcall
sub
jns
in
outsb
mov
push
mov
test
dec
pop
mov
push
std
add
pusha
inc
pushf
jo
inc
sub
mov
jno
xor
cld
dec
sub
lret
push
jl
movsl
sbb
adc
mov
cs
cmp
xor
ret
xor
test
push
and
mov
mov
dec
xor
sbb
orb
arpl
jp
outsl
xchg
fcmovnb
iret
pop
xchg
mov
inc
and
loopne
movsl
fstl
imull
xor
lret
pop
out
loope
fnsave
mov
pop
or
add
mov
pop
or
xchg
rcrl
fidivl
nop
inc
out
insb
sub
sub
outsb
pop
js
or
arpl
and
in
jge
arpl
xchg
push
sbb
sahf
ss
pop
inc
loop
push
lea
sbb
rcrb
cmp
shll
xlat
dec
cmp
popf
daa
and
inc
mov
jmp
xor
mov
jbe
bound
repnz
jge
add
iret
inc
in
sbb
push
int
roll
cmp
or
mov
clc
cmp
xor
insl
cmp
jnp
sbb
mov
mov
adc
stc
in
push
push
push
nop
push
repnz
push
and
mov
inc
mov
stc
clc
push
inc
xor
jmp
xchg
xor
scas
popa
test
popf
jnp
push
pop
lret
fildl
clc
mov
sbbl
push
sti
jbe
imul
fs
dec
in
out
pusha
cmc
test
or
mov
fwait
pop
and
rcr
or
iret
push
into
in
icebp
sub
testb
mov
adc
ds
jb
cmp
mov
std
push
outsl
pop
scas
dec
sahf
pop
xchg
ljmp
mov
cmp
pop
notl
lods
xor
mov
icebp
pop
leave
and
ljmp
mov
pushf
jo
cmpsb
jmp
jno
inc
xor
rorb
ds
jns
push
pop
sbb
dec
cld
lahf
popa
cld
cmp
loop
push
mov
test
xlat
pop
push
mov
xor
jns
arpl
filds
and
cmp
clc
sbb
test
sub
iret
or
nop
js
push
cmp
into
jecxz
dec
ret
repnz
out
daa
jecxz
fstpl
ret
outsb
xor
xchg
pop
xorl
mov
adc
xor
ljmp
mov
jno
test
xor
pop
popa
sti
fstpl
mov
imulb
popa
pop
fstl
fwait
lods
xchg
cmc
fcomip
xor
push
daa
xor
sbb
push
lods
call
popf
test
mov
or
imul
loop
popa
es
scas
cwtl
sti
push
add
mov
stos
fildll
nop
mov
mov
add
add
iret
out
daa
jns
and
ja
sbb
aas
sbb
sbb
push
mov
pop
pop
scas
mov
inc
shl
mov
pop
jmp
dec
shll
mov
cmp
and
fucomi
sbbb
inc
sarl
jb
pop
sbb
and
stos
pop
pop
xor
mov
rcr
xchg
rclb
mul
into
cltd
push
mov
mov
sub
and
data16
jo
add
icebp
lock
imul
ret
sbb
mov
fcomp
mov
popa
xchg
jns
mov
push
mov
xchg
and
les
shlb
ds
xorb
arpl
pop
nop
ret
sbb
sbb
add
and
inc
enter
jb
add
mov
pushf
lahf
xor
pop
shl
sbb
fldl
jecxz
daa
pop
fbstp
imulb
fistl
push
mov
mov
mov
stos
sbb
sub
jbe
int3
mov
popa
std
cmc
mov
push
cmp
push
push
pop
insb
pop
sub
jge
pop
cmp
icebp
adc
push
mov
mov
mov
dec
xor
loop
pop
lcall
inc
das
xchg
jmp
cmpsb
orl
std
aas
sub
data16
fwait
jne
loopne
adc
icebp
mov
inc
int3
movsl
mov
bound
lods
mov
sahf
cmc
das
stos
shrb
sbb
lret
sbb
xor
pusha
popf
icebp
subb
xor
pop
mov
loop
dec
jo
xor
arpl
movsb
mov
movsb
jp
cmp
push
addr16
aad
aas
pop
int3
popl
test
in
lods
jno
cld
xchg
movsl
movsb
xchg
mov
das
dec
aas
cmp
mov
xchg
xor
cmc
mov
out
leave
nop
lods
shll
xchg
dec
sub
test
inc
shrb
adc
xchg
lds
xor
mov
pop
xchg
dec
cli
jg
jnp
aam
jp
sbb
inc
loope
sbb
loop
jle
push
int
stc
pop
cs
jl
mov
push
andb
inc
imul
lret
jno
cmp
bsr
adcb
mov
and
mov
adc
cmp
dec
sub
stos
jbe
fcmove
cwtl
mov
icebp
mov
je
and
int
testl
aam
or
or
ret
dec
mov
inc
js
sti
lea
and
arpl
and
jo
nop
lcall
lcall
mov
jmp
test
xor
mov
add
sbb
test
shrb
mov
cwtl
sbbl
push
add
pop
popf
sbb
jl
mov
sub
int3
dec
inc
lret
pop
movsl
fdiv
arpl
xchg
cmp
mov
stos
inc
popf
mov
cwtl
xorb
fistpll
xchg
inc
push
mulb
cmpsb
and
pop
jno
popf
orl
lods
dec
insb
rolb
jmp
inc
jecxz
inc
insb
stc
pop
cmp
pop
insb
mov
mov
scas
lea
sub
fs
insl
scas
repnz
hlt
lock
pop
sub
sub
test
adc
in
inc
lock
sti
and
add
sub
repnz
add
cli
mov
inc
jbe
sub
int3
add
fimuls
lea
pop
std
push
cmp
xor
and
test
xchg
cwtl
adc
push
imul
xchg
dec
dec
push
or
lcall
imul
and
lds
push
pusha
lret
ficompl
push
icebp
mov
push
push
xchg
dec
push
dec
in
mov
inc
mov
loope
test
sbb
insb
rol
lcall
lcall
fists
xlat
aas
in
icebp
cltd
jmp
cld
es
arpl
mov
lods
mov
fnsave
lock
cmp
push
adc
mov
adcb
mov
xchg
das
cmc
add
mov
dec
fists
shl
test
pusha
adc
mov
gs
into
add
inc
das
or
sbb
aas
mov
lods
clc
inc
lock
pop
sub
adc
inc
xchg
ljmp
leave
cmpsl
sbb
sbbl
sti
movsl
pop
push
clc
or
mov
test
xor
cmp
pushf
xchg
push
sub
scas
lods
xchg
or
jb
and
cmp
sbb
movsl
push
pop
stos
dec
inc
cld
loope
cmp
int
adc
movsl
imul
iret
js
jo
test
jmp
iret
ret
sub
lods
scas
mov
xchg
outsl
mov
std
jnp
push
mov
data16
bnd
push
xchg
sub
mov
ds
adc
ret
daa
cmp
int3
fcompl
cwtl
xor
aas
pop
out
std
mov
addr16
jne
inc
inc
jg
scas
sbb
mov
pushf
mov
xor
push
dec
dec
scas
inc
xor
xchg
notl
pop
ds
sub
sub
sbb
outsb
jnp
les
jo
xchg
cmc
or
mov
sbb
into
xor
pop
jl
mov
sahf
es
fisubl
dec
cmp
adc
pop
cmpsb
push
popf
jmp
mov
ss
and
pop
mov
mov
cmp
std
pop
in
rcrl
int
mov
push
and
jl
fldl
sub
inc
add
scas
or
cmc
stc
mov
jo
je
in
mov
jp
insb
add
movsb
fiaddl
jae
push
mov
inc
arpl
aad
cmp
jl
mov
movsl
rcrb
enter
popf
imul
ja
or
sbb
cltd
pop
xlat
add
mov
mov
pop
push
cmpsb
roll
nop
das
sti
pushf
imul
loope
mov
and
decb
mov
push
ljmp
jle
add
aam
add
out
fcoml
push
mov
inc
ret
insl
mov
repz
push
inc
mov
jbe
dec
popa
inc
and
loope
stc
dec
push
out
mov
push
mov
ljmp
fidivl
dec
pop
int3
sbb
and
movsb
and
and
lret
jnp
insb
cmp
fnstsw
popf
sub
std
jle
dec
jp
adc
rcll
push
cmp
pushl
xor
popa
stos
cld
adc
push
shrl
imul
fs
push
mov
jmp
popf
xor
cwtl
cmp
cmp
or
data16
and
mov
aam
jne
das
push
sbb
mov
stos
lock
xchg
mov
aas
movsb
popa
push
scas
adc
push
or
push
pop
sub
shl
xor
xchg
filds
pop
inc
adc
ljmp
pop
jl
sub
pop
lds
stc
cmp
sbb
in
loope
dec
enter
push
sub
loop
inc
jl
out
xor
sbb
push
adc
mov
enter
push
loopne
cmp
sbb
in
xor
xchg
cmpsl
add
pop
mov
pop
loopne
or
jp
add
mov
dec
or
xchg
in
and
add
xchg
icebp
insb
scas
je
jb
inc
add
pop
sbb
mov
or
mov
imul
das
mov
adc
mov
movsl
nop
push
xor
and
dec
cli
imul
pop
mov
mov
movsw
jnp
ret
cmp
mov
jo
xor
aam
inc
fmulp
or
mov
into
inc
xlat
movsb
popa
nop
xor
mov
outsb
mov
lea
in
add
stc
dec
sbb
ret
mov
lret
popa
inc
inc
inc
jns
and
aam
add
out
xchg
gs
xor
dec
inc
fsubl
mulb
mov
jge
in
je
xor
mov
es
cmp
and
dec
mov
pop
or
aas
cltd
data16
pop
fst
sub
mov
addr16
sbb
fadds
sbb
sbb
cmp
lods
push
popa
push
xchg
dec
test
xor
and
inc
jle
cmp
mov
dec
aam
dec
cs
loope
ss
fcom
pop
fistpll
xlat
es
mov
push
ret
fmull
mov
das
aas
jbe
xor
loop
mov
xlat
movsb
dec
cld
shll
jo
lahf
imul
imul
mov
sahf
dec
xchg
xchg
add
cltd
cmpl
inc
push
aaa
ds
loopne
ret
outsb
outsb
fisubs
test
xor
call
push
call
xor
dec
mov
or
push
lock
cmpsb
orb
inc
out
mov
sbb
sahf
ret
mov
and
add
sub
scas
jle
fcmovne
jne
cli
lock
and
cld
or
push
sub
fidivs
in
push
adc
fwait
fwait
sub
jg
iret
pushf
fcomip
dec
fwait
movsb
xor
aad
adc
adc
js
loope
adc
popa
jmp
sub
mov
cmc
sahf
fisttps
jno
xchg
shlb
pop
leave
insl
into
sbbl
dec
repnz
xlat
hlt
xor
shll
push
dec
push
inc
lods
jg
mov
xchg
fcomp
ret
pushf
fcoms
jp
out
fs
imul
and
aad
arpl
and
mov
lods
out
outsl
mov
xchg
inc
popl
jge
hlt
jbe
aas
movsl
ret
cli
mov
jp
inc
ds
cld
fsts
and
push
xchg
jle
adc
in
test
mov
adc
pop
rcrb
jg
cmc
loopne
xchg
sub
cmpsb
fcoml
outsb
add
jmp
test
pop
pop
sub
aas
cld
les
xchg
mov
sub
aas
inc
dec
xor
jl
insl
pushf
pmaddwd
push
adc
inc
jb
fwait
xor
jecxz,pn
cmp
fcmovnu
gs
shrl
inc
lcall
inc
pop
int
aaa
jns
mov
repnz
fwait
imul
add
popa
inc
inc
gs
add
jne
dec
xor
or
mov
fstl
or
xchg
ljmp
out
daa
lods
fwait
sti
adcb
imul
dec
in
pop
movsl
jg
cltd
lahf
repnz
popf
xlat
fdivs
insb
in
inc
lret
shll
mov
and
in
push
mov
fs
stc
int
aaa
pushf
adc
pop
aas
adcl
cld
mov
cmp
jmp
movsl
andb
xor
mov
faddp
in
sahf
out
imul
adc
push
int3
xchg
xchg
dec
jbe
pop
mov
cmp
pop
rcr
push
pop
push
movsl
add
hlt
loop
lcall
ja
test
les
mov
mov
outsb
test
shll
les
lods
add
fwait
add
mov
mov
dec
jns
mov
mov
sahf
les
rclb
dec
inc
test
ljmp
mov
sti
adc
inc
pop
mov
jle
add
jo
cli
shlb
aam
icebp
dec
mov
push
pop
dec
rcr
fldl
mov
xor
das
and
and
std
mov
and
cmpsb
fcom
sbbl
add
add
je
xchg
mov
sar
dec
adc
mov
push
sub
jno
rolb
adc
inc
jl
pop
mov
push
jle
arpl
pop
rep
pop
cmc
xlat
jmp
aad
or
pop
jl
mov
int
jbe
lahf
xor
sarl
sarb
sbb
jnp
imulb
idivb
into
dec
xchg
xor
cmp
push
push
mov
add
push
into
pusha
cmc
ficoml
or
shll
cwtl
mov
jb
fmull
stos
fisttpll
je
repz
fnstsw
movsl
lahf
add
push
xlat
sbb
cwtl
popa
aad
push
in
adc
test
mov
pop
jecxz
sbb
sbb
xor
cmpb
inc
mov
dec
jecxz
or
dec
pop
fnsave
nop
or
sub
lds
call
daa
out
into
add
mov
in
test
imul
sbb
bound
jae
arpl
inc
gs
hlt
out
push
pop
rorb
mov
mov
sub
mov
add
xorl
imul
pop
mov
movl
adc
jge
mov
sti
clc
xor
sahf
jmp
test
nop
dec
xor
fnsave
ret
mov
les
dec
and
add
das
arpl
mov
mov
push
xchg
push
pop
or
in
out
inc
sbb
sub
inc
jns
push
stos
int
jmp
dec
dec
push
fbstp
xor
jmp
cmc
dec
test
mov
cmp
mov
adc
sub
cmp
inc
icebp
out
xor
stos
addr16
lret
sub
pop
pop
push
inc
scas
pop
mov
jne
pop
shrb
cltd
push
sbb
cmp
pop
dec
mov
in
lock
ret
push
jp
lock
xchg
je
mov
add
pop
popa
xor
push
clc
shll
je
cltd
fnstsw
mov
or
cwtl
cmp
sub
movsb
movsl
push
cmp
mov
mov
nop
shlb
imul
pop
jecxz
dec
pusha
mov
sbb
mov
xor
dec
call
sub
pop
mov
lods
fwait
mov
mov
jl
mov
mov
arpl
push
movsl
cld
lret
xor
inc
mov
inc
pop
inc
jb
ss
push
cmpsl
dec
js
outsl
rcrb
dec
cs
repz
aas
push
pop
or
loopne
lcall
xor
aam
fdiv
cwtl
js
inc
push
sti
stos
or
dec
xchg
ss
bound
xchg
lods
mov
ret
xor
lods
xchg
inc
xor
cs
cmp
lahf
mov
gs
fcoml
or
jg
fimull
mov
jp
mov
cwtl
jo
dec
imul
fnsave
jae
mov
xchg
in
pop
jl
inc
movsl
or
sbb
cli
into
pop
pop
icebp
and
add
aad
insl
dec
or
pop
push
fiadds
loopne
in
sub
pop
call
dec
jnp
int3
xchg
push
shr
mov
and
fadds
loop
divb
jae
lret
out
pop
fdivs
std
or
fadds
pop
imul
hlt
cmpsb
movsl
clc
fs
mov
repz
push
out
mov
ja
mov
lret
xchg
sub
pop
rorb
jle
andb
rcrb
stos
out
jo
mov
adc
popa
or
in
stos
and
aam
addr16
cmpsl
xchg
inc
addr16
insb
hlt
or
and
push
jp
lea
sar
pop
loope
adc
call
int
add
mov
fisubs
and
fstpl
int3
dec
jp
adc
mov
cmp
xchg
adc
jecxz
aad
cmp
sub
iret
lds
lret
imul
idivb
mov
dec
mov
mov
lods
mov
xor
outsb
jmp
adc
frstor
testb
jns
sbb
mov
fistpl
sub
sub
jae
jmp
arpl
add
add
lds
scas
mov
add
pushf
sub
dec
pushl
and
cmpsb
ret
mov
jb
imull
add
insb
xor
std
pusha
pop
pop
jl
lret
cs
fmull
inc
pop
shr
movsl
notl
jl
pop
out
insl
pop
jg
mov
inc
push
push
lahf
iret
push
lret
clc
cmpsl
xchg
stc
lods
fsubl
cmpsb
mov
mov
bound
add
or
ljmp
mov
lahf
and
push
movsl
std
and
in
pop
ja
jge
ds
iret
xchg
es
test
out
dec
cmp
decl
aaa
dec
add
test
test
pop
push
sbb
push
lods
mov
int3
cld
int3
mov
test
adc
andl
push
sub
rclb
jbe
aad
push
sahf
or
mov
ja
popf
push
mov
pushf
sub
push
popf
aas
jecxz
push
sbb
mov
test
mov
sbb
or
int
adc
ss
test
sbb
adcl
xchg
js
bound
lahf
aaa
cltd
adc
add
mov
dec
or
shlb
pop
rcrl
dec
pop
push
int
popf
cmp
movsb
lcall
pop
loop
mov
adc
or
adc
push
fdivp
or
cmp
push
cmpsb
xchg
lods
sti
divl
bound
sub
bound
in
jp
sbb
pushf
mov
adc
xor
movsb
pop
inc
inc
push
mov
test
nop
pusha
cmp
aam
ficompl
xor
out
or
hlt
les
inc
data16
add
stos
into
aas
data16
stos
adc
jg
dec
mov
movsb
and
stos
add
and
xor
mov
mov
unpcklps
int3
out
stos
ja
fs
cmp
roll
je
jmp
into
mov
rorb
scas
cmp
in
jp
ret
and
or
jp
mov
cmp
fwait
pusha
mov
xor
lds
shll
popa
xor
sub
push
sbb
aaa
mov
imul
insl
xadd
xlat
clc
data16
cmp
mov
or
adc
jne
pop
lods
lahf
and
mov
xchg
adcb
jns
out
es
stc
inc
sbb
pop
std
cld
adc
xchg
xor
rolb
and
addr16
loopne
or
cmc
sbb
mov
push
test
sbb
iret
xor
add
iret
or
sbb
inc
pop
mov
inc
clc
mov
ds
loopne
inc
mov
mov
jne
sbb
imul
nop
cmpsb
imul
adc
mov
inc
cmpsb
aam
mov
adc
dec
test
jbe
sub
push
mov
mov
mov
aas
adc
dec
insl
dec
mov
sbb
sub
mov
cmp
iret
arpl
ss
outsl
cmc
push
sub
cmp
mov
orb
rol
daa
cli
sub
rorl
rcl
repz
adc
jl
aas
lahf
cmpsb
jecxz
add
pop
bound
arpl
jne
shlb
js
push
orb
cli
ss
rclb
stos
pop
rcrl
push
or
xchg
repz
aaa
xor
int3
jg
push
mov
jg
mov
add
jle
adc
xor
jmp
jmp
mov
les
loopne
das
and
mov
nop
in
mov
push
mov
lahf
cmpsb
lods
xchg
pushf
lock
ds
sarl
test
incl
mov
push
lret
popf
fstp
in
mov
sar
and
xchg
adc
mov
add
sub
cld
add
and
dec
xchg
je
dec
cwtl
cmc
add
mov
jle
cmc
scas
repnz
mov
inc
or
mov
pop
xor
notb
pushf
mov
jle
loop
adc
inc
fstl
rcrl
inc
mov
addr16
imul
rorl
xchg
loope
xchg
dec
jle
pop
aam
xchg
sti
scas
into
into
mov
daa
movsl
addr16
subb
mov
lods
pusha
fisubs
mov
mov
xchg
sub
aaa
inc
mov
push
imul
bound
push
pop
cmp
loop
sbb
or
cld
mov
pop
pop
clc
shrl
jbe
xchg
xchg
xchg
popa
shrb
mov
xchg
scas
popa
xchg
sub
jp
push
mov
je
add
xchg
xlat
fs
jle
daa
push
ret
sub
xchg
sbb
loop
mov
pusha
push
dec
xor
mov
cli
xor
cmp
sub
and
xchg
add
out
push
mov
std
jg
daa
dec
bnd
loope
sbb
pop
arpl
push
out
fldt
push
push
outsl
sbb
ret
and
in
pop
out
mov
idivb
mov
ret
gs
add
insb
notl
sub
jle
in
insb
sbb
xchg
sbb
rcrb
mov
jecxz
fsubl
jp
sbb
jo
xor
cli
or
je
stos
push
cmp
imul
jne
sbb
in
xchg
test
insl
mov
sbb
push
inc
and
imul
push
adc
sub
gs
into
fnstcw
dec
lahf
add
hlt
and
jecxz
test
mov
loop
fs
imul
mov
movsl
add
sbb
std
add
cwtl
pop
adc
orl
rolb
lcall
pop
add
lcall
fnstsw
je
js
andl
aad
mov
and
and
mov
push
mov
ljmp
les
dec
adc
jmp
inc
inc
add
and
or
rorl
iret
les
movsl
lea
aad
mov
xchg
add
mov
pop
mov
add
jmp
jmp
fcmovnbe
jg
fcoml
jge
sub
adc
pop
sub
push
or
scas
test
shlb
stc
mov
mov
repz
dec
jae
cmp
daa
xor
lea
adc
sbb
shr
mov
iret
mov
push
push
dec
mov
and
rorl
out
into
dec
xchg
fimull
imul
sbb
lea
mov
jge
int3
pop
jp
rclb
sub
fistpll
and
daa
in
push
mov
and
add
inc
push
and
xor
rcr
pop
xchg
sbb
push
stos
cld
dec
adcl
stos
pusha
fisttps
jecxz
mov
dec
js
js
repz
adc
fmuls
mov
sti
xchg
xchg
xor
lret
adc
mov
mov
and
mov
add
pop
add
mov
sub
in
shr
out
mul
or
dec
fisttpll
inc
fmulp
out
dec
mov
in
aas
inc
dec
jbe
lea
in
xlat
lret
mov
rorl
js
outsb
rcll
sar
inc
fwait
repnz
ljmp
scas
lea
hlt
sti
pop
idivl
jle
pusha
popf
sub
mov
sub
xor
imull
cmp
lahf
jno
jae
add
and
es
cwtl
xchg
test
push
les
cltd
loope
ficompl
pusha
or
subb
cmp
inc
push
pop
insl
and
inc
int3
pop
inc
jle
fsubrl
aad
stos
inc
scas
add
iret
mov
aas
aad
enter
xlat
mov
pop
subb
pop
jns
mov
cmpsb
scas
fwait
cmp
stc
stos
or
jb
movl
xlat
pop
pop
inc
push
jb
mov
dec
aam
jp
cmpsb
test
add
push
dec
cmpsl
std
xchg
stos
jge
aaa
sub
shl
xor
sbb
inc
push
adc
clc
out
xor
pop
notl
jg
movsl
arpl
ljmp
dec
push
and
mov
xor
cmp
or
rcr
mov
sar
inc
dec
sahf
enter
addr16
dec
mov
adc
fcoms
sub
jb
imul
cmp
gs
mov
sbb
fwait
or
jmp
mov
mov
mov
mov
ret
xor
cmc
lcall
sbb
mov
inc
pop
jle
nop
decb
push
inc
daa
movsl
insl
int3
mov
dec
outsl
xor
aas
add
cmpl
ficomps
xchg
mov
rcrl
mov
cmp
leave
mov
test
jmp
adc
xchg
xor
inc
pop
xchg
xor
xchg
lock
cwtl
shlb
fstpl
cmp
inc
stos
fwait
sbb
movsl
push
mov
cmp
push
and
int
std
push
repnz
mov
pop
daa
sahf
fs
mov
cmpsl
imul
sbb
enter
subl
call
jg
data16
out
or
or
out
jne
lcall
fmul
mov
mov
add
shlb
jg
icebp
mov
sub
cmp
mov
insl
sub
rclb
and
cmp
add
sub
lock
add
subb
xchg
lahf
pop
xchg
or
dec
xor
lret
xchg
jg
sub
lds
int
repnz
into
aad
inc
outsb
jo
inc
sbb
mov
adc
icebp
jo
fsubs
subb
sbb
test
mov
mov
add
testl
sbb
mov
pop
je
imul
sbb
int3
and
adc
mov
flds
inc
push
addr16
scas
jb
xor
xor
mov
adc
pop
and
sub
or
or
out
test
shlb
bound
out
out
mov
xor
add
push
mov
sub
ss
mov
divl
adc
push
inc
je
sub
cmpsb
sahf
lds
lret
out
mov
nop
shll
addr16
pusha
hlt
scas
or
das
sub
fxch
sub
shr
lret
sub
sbb
aad
mul
fmulp
inc
fmul
test
scas
cmp
jns
xchg
dec
popa
mov
ljmp
dec
push
sti
out
dec
jmp
loop
pop
mov
push
and
jne
leave
push
lcall
cmp
lcall
xor
shl
sbb
fs
push
push
inc
fwait
adc
imul
mov
sub
stc
stos
fadds
and
js
addr16
fsubrs
push
pushf
mov
dec
iret
mov
pop
pop
xor
sti
sub
jno
ficoms
orb
pop
fisubrs
pusha
lock
and
popf
sbb
stc
mov
loopne
mov
ret
mov
iret
stos
idivb
push
daa
cwtl
hlt
jl
inc
fldl
fisttps
imul
into
and
cmc
push
mov
add
shl
faddp
mov
ja
scas
in
and
pop
xchg
arpl
test
and
jecxz
mov
jae,pt
jo
stc
xchg
xor
sub
push
or
fcoms
xchg
mov
movsb
aam
int
lahf
push
ficompl
push
inc
stc
adc
sbb
xchg
call
imul
aas
pushl
iret
adc
divb
xor
xor
sbb
add
cli
mov
cmp
loopne
xor
sub
pop
dec
xor
shlb
sbb
clc
cs
dec
push
mov
sbb
xchg
popf
dec
xor
fimuls
cmpsb
int3
dec
inc
fwait
mov
inc
xor
mov
imul
mov
fidivrl
jmp
pop
cmpsl
imul
or
call
pop
xor
in
mov
aas
outsb
cmpsl
pop
pushf
popa
jecxz
inc
pop
sub
aad
inc
aad
movsl
insl
adc
imul
inc
jae
outsl
or
ljmp
movsl
and
leave
movsb
lock
cli
out
insl
cmpb
decl
sbb
out
es
mov
push
pop
dec
popf
mov
inc
enter
pop
dec
xor
arpl
cltd
test
push
mov
jp
ror
jbe
inc
fsubs
xor
lret
sub
jp
jo
mov
inc
fbld
call
jae
adc
dec
mov
dec
jae
arpl
and
arpl
lahf
leave
ret
sarl
cwtl
movsl
adc
inc
pop
xchg
push
jae
loopne
push
popa
mov
out
inc
cmc
in
xchg
mov
mov
sub
ja
cmp
out
mov
cs
mov
cld
adcl
and
xlat
repnz
maskmovq
notl
jbe
jp
xorl
sbb
xchg
xchg
or
iret
mov
psrld
jecxz
out
jge
push
cmpb
cmpsw
test
cmpl
addr16
ret
sbb
dec
aas
addl
xchg
add
add
mov
mov
mov
and
or
aad
cmpsl
mov
outsl
xchg
cltd
cmpsl
stc
fstpt
xlat
cmp
jno
movsl
pop
sbb
cmpl
jmp
movsb
or
pop
sub
insb
mov
stc
xor
ret
cmp
jne
xchg
repz
fildl
mov
lcall
int3
shrl
fdivrp
outsb
inc
ss
mov
cmp
jno
and
aaa
lods
cmp
frstor
loopne
adc
fucomp
rcr
push
jmp
arpl
iret
loop
push
bound
push
sbb
jo
mov
sbb
cmpsb
and
test
les
clc
sub
ret
cmc
sti
dec
dec
dec
fwait
cmp
mov
add
push
ret
pushf
sbb
es
and
or
xlat
jmp
and
fldenv
add
cwtl
in
dec
inc
and
inc
ja
stos
lahf
ljmp
in
in
mov
das
lret
mov
fidivrs
arpl
sub
mov
mov
aad
push
data16
xor
push
icebp
sarb
push
jbe
cmpsb
cmp
in
imul
popa
mov
jbe
aam
or
and
dec
fcomi
movl
or
xor
popa
push
cmp
hlt
lret
std
xor
sahf
pushf
sbb
lock
test
xchg
hlt
imul
popf
insb
sbb
je
jle
imul
aas
sub
stos
dec
dec
loope
cmp
jge
shlb
adc
lock
sub
mov
adc
lahf
roll
roll
insb
cmpsl
push
dec
mov
inc
push
int3
jmp
and
fbld
sbb
xchg
push
cmp
imul
pop
clc
stc
clc
fucomip
sub
std
loopne
sbb
jl
and
add
xchg
sbb
jb
xchg
out
fisubs
xor
rorl
xor
scas
cmp
dec
xchg
cmp
push
sub
sahf
sub
xchg
pop
std
xor
jbe
mov
sub
add
sbb
enter
inc
xchg
mov
jae
cmp
std
mov
outsb
ret
inc
fldcw
push
pop
incl
push
and
addr16
cmpsl
and
sar
out
imul
cmp
xchg
pop
jg
pop
stc
lods
push
loop
addr16
rcll
mov
push
or
mov
xchg
out
int
xchg
mov
pusha
sub
jmp
dec
push
dec
inc
pop
pop
inc
enter
or
out
nop
push
les
push
cltd
cmp
or
xchg
data16
mov
hlt
push
mov
pop
push
sub
das
iret
mull
lahf
mov
stos
sub
scas
push
ret
rclb
xchg
aaa
in
xchg
outsl
xchg
sbb
repnz
and
cmpsl
mov
xchg
jecxz
mov
push
push
push
dec
test
dec
dec
and
shl
lods
outsl
sub
adc
stc
mov
xchg
mov
int
dec
out
out
faddp
aas
mov
popl
es
mov
push
sbb
cmp
or
and
scas
test
add
push
push
incb
das
lcall
dec
sub
and
jb
lahf
ss
pop
sbb
add
rorl
xchg
mov
icebp
push
push
imul
inc
mov
push
mov
or
jmp
mov
push
imul
lods
divb
adcl
imul
inc
adc
lds
mov
jp
push
mov
stc
ficomps
xchg
imul
dec
iretw
xor
mov
cmpsl
add
ja
jp
and
ljmp
xchg
or
mov
es
popl
mov
pop
out
call
fistpll
nop
dec
dec
inc
lcall
insb
fcoml
sub
fsts
jl
lea
or
pop
jns
sbb
mov
mov
mov
sbb
repnz
out
fcompl
shl
mov
lcall
aas
sub
mov
dec
push
jp
das
stos
mulb
sbb
jmp
sub
out
test
insl
test
das
xchg
imull
jl
cmpsb
insl
xchg
lods
fsts
aam
in
mov
pop
sbb
cmp
pop
mov
idivl
push
add
rolb
pop
dec
insl
dec
mov
dec
dec
push
sbb
sar
out
push
es
imul
or
jo
adc
js
lcall
lea
pushf
dec
es
test
int3
inc
faddl
add
and
call
mov
add
xchg
addr16
inc
and
and
adc
dec
aaa
xlat
mov
shl
dec
xlat
jbe
mov
sub
addr16
out
xchg
xchg
pop
pop
xchg
mov
sub
aad
mov
mov
aas
push
bound
pop
inc
repnz
mov
push
xor
daa
lahf
sub
frndint
fcompl
and
push
repz
mov
jne
mov
loop
ds
out
jbe
push
les
xchg
jne
movsl
faddl
fbld
sbbb
cwtl
cmp
sub
loopne
mov
ljmp
cmp
sub
out
fsubr
inc
scas
ret
mov
fwait
pop
push
xchg
mov
fs
adc
mov
lds
mov
ljmp
or
imul
popf
sbb
push
xor
cmp
mov
cmc
subb
enter
mov
fwait
repz
inc
test
imul
push
int
movsb
mov
sar
sarl
repnz
jo
jbe
jmp
test
push
fndisi(8087
aaa
repz
ret
or
rorb
pop
sub
xor
rorl
cmp
push
aaa
xor
test
cltd
mov
mov
shlb
xchg
push
movsl
out
fistps
rcll
mov
sti
cmp
fcmovnb
pop
mov
aam
lret
call
cwtl
cli
sbb
push
pop
mov
test
pop
lock
into
sbb
add
adc
sub
pop
jnp
push
lahf
int3
dec
mov
pop
aam
leave
cs
sub
lods
jle
fwait
movsb
xchg
out
inc
sub
pop
cmpsb
sbb
je
andl
jns
ja
shlb
or
sub
jg
xchg
and
lds
mov
mov
in
orl
ljmp
gs
jmp
mov
adc
scas
pop
ljmp
dec
mov
rcll
dec
mov
mov
jae
fmulp
int3
mov
inc
dec
sbb
lea
leave
ljmp
cmp
mov
dec
ljmp
sub
cmc
sub
or
pop
add
cli
sti
out
jns
jl
or
push
scas
mov
or
cs
pop
sahf
fdivp
dec
push
in
loop
inc
pop
lahf
add
dec
pop
xor
add
imul
xchg
sub
fbld
test
pop
imul
sbb
adc
jo
shrl
mov
ret
lret
std
icebp
imul
leave
arpl
mov
sahf
cmpsl
in
stos
mov
mov
sbb
ds
xchg
bound
and
pop
sub
xor
cwtl
xchg
jae
sub
cmp
xchg
testb
lcall
outsb
xchg
movsl
adcb
shrb
shlb
and
jbe
sub
jns
or
add
add
xchg
add
rorb
cmc
mov
and
loope
push
out
cmp
sub
ja
sbb
lods
push
jnp
dec
leave
cltd
shrb
int
xchg
pop
dec
lahf
hlt
ds
dec
mov
mov
or
notl
add
fdivrl
dec
mov
in
mov
sahf
xor
cmp
movsl
test
xchg
rolb
je
ret
sbb
shll
repz
push
dec
xchg
stos
mov
push
and
or
cmp
sub
jbe
jecxz
call
xor
jle
xchg
mov
lods
sub
enter
add
push
xor
sti
ss
ficoms
std
mov
cmp
lea
fwait
jp
lret
mov
push
fwait
cmp
repz
push
push
dec
fistpll
dec
test
mov
push
adc
imul
push
mov
lds
mov
les
mov
xor
sahf
xchg
cmp
jle
jae
pop
push
jne
lock
test
data16
in
jo
cs
fwait
movsl
lret
pop
nop
dec
fists
mov
jae
stos
add
xor
inc
jns
and
test
add
loope
aad
pop
mov
mov
adc
andb
sub
test
pushf
leave
into
stc
pop
mov
adc
shll
xor
pop
push
and
adc
dec
dec
dec
adc
test
mov
sbb
mov
lock
adc
and
pushf
jno
repz
in
dec
adc
jle
pop
sbb
aam
test
mov
out
ljmp
loopne
push
int
int
cltd
mov
push
test
inc
xchg
insl
out
cmpsl
push
mov
xchg
arpl
sub
xor
addr16
inc
adc
loopne
inc
or
inc
dec
jae
roll
xchg
icebp
mov
pusha
ljmp
adc
shll
jb
icebp
mov
orl
shll
inc
cmp
adc
sbb
loop
sahf
jno
pushf
xchg
mov
movb
push
dec
mov
cs
inc
gs
jae
cmp
or
icebp
test
hlt
movsl
cmp
test
jo
mulps
pusha
push
or
out
imul
adc
scas
stos
out
or
xlat
ret
jnp
lret
cmp
xchg
and
jae
inc
push
push
movsb
lahf
jle
insb
insl
jnp
or
icebp
in
lea
lock
shll
pop
aam
adcb
out
or
and
subb
xchg
mov
push
or
mov
addr16
xchg
shr
hlt
movsl
jecxz
ret
or
push
cmp
and
es
lahf
dec
mov
addb
mov
roll
add
out
imul
pusha
mov
and
inc
sub
xchg
mov
mov
popf
lods
push
insl
cmpsb
push
arpl
sub
pop
dec
pop
scas
sbb
ss
pushf
dec
lcall
aam
into
jae
fcmovu
mov
mov
and
loop
nop
mov
pop
inc
cli
mov
xchg
roll
adc
movsl
sub
jmp
mulb
notb
jl
fwait
fs
jno
stc
xor
adc
mov
in
daa
in
dec
inc
mov
das
dec
sub
xchg
ljmp
mov
jl
pop
pop
sbb
roll
mov
and
cmpsl
or
pop
mov
jmp
or
push
scas
inc
mov
inc
repnz
lcall
cmp
sub
dec
add
clc
nop
push
mov
push
cmp
or
scas
out
sbb
enter
mov
cwtl
cmp
aad
mov
flds
xchg
push
mov
lret
pop
mov
pop
insb
sub
scas
xor
xor
cs
jno
cmp
aam
lock
add
xchg
pushf
mov
xor
aam
in
call
cwtl
repz
ret
mov
jecxz
sbb
movsl
push
pop
sub
ret
mov
push
push
jmp
sti
std
testl
add
ja
push
aaa
inc
in
pop
push
and
push
sub
jle
cmc
pop
loopne
rclb
pushf
scas
push
push
mov
mov
inc
insb
cmp
and
xor
jmp
adc
inc
icebp
sub
or
xchg
lcall
pop
or
mov
insl
shl
popf
sbb
in
jae
push
mov
out
shlb
dec
xor
jb
int
push
rcrb
stc
sarl
in
int3
inc
push
add
pop
mov
xor
repz
mov
push
out
ljmp
sub
inc
mov
movsb
add
ljmp
jo
xor
pushf
push
push
or
pop
jmp
dec
dec
scas
mov
push
push
daa
push
enter
mov
in
call
jb
inc
xchg
push
pop
rorl
sub
jmp
in
loope
mov
xchg
addr16
outsl
mov
add
and
inc
mov
inc
mov
loop
adc
push
pop
rol
je
fdivl
out
sbb
inc
out
mov
in
and
mov
stos
xchg
movsl
xchg
fbstp
inc
pop
cld
or
inc
mov
push
push
aas
outsl
inc
dec
sti
push
pop
sub
jnp
mov
jp
fists
insl
jp
mov
scas
push
xchg
subb
cmp
into
loope
sub
add
add
cmp
pushf
aad
xor
xor
shl
scas
dec
inc
das
or
out
in
scas
add
and
loope
dec
mov
xor
stos
adc
sbb
bound
lods
loope
lret
je
ljmp
mov
cwtl
add
out
pop
push
cmp
test
or
insl
pop
or
mov
pop
sub
in
or
imul
in
hlt
pop
push
lock
faddl
cmp
pop
adc
subb
xor
les
pop
movsw
aaa
popa
mov
sbbb
das
xor
shll
push
jns
jecxz
dec
scas
fdivl
sbbl
jecxz
lds
inc
ljmp
xchg
or
mov
das
jl
jno
rcrl
in
repz
mov
xor
insb
mov
jns
lea
outsl
das
and
lods
lods
inc
sbb
mov
xchg
lods
out
cmp
insl
stc
das
stos
add
cmp
icebp
jne
rcl
and
push
in
and
int
sbb
aaa
push
and
mov
insb
in
outsb
in
imul
jecxz
and
sti
jno
data16
fwait
and
mov
loope
fimull
ja
inc
jl
push
dec
loop
lods
ret
or
pop
or
adc
lods
pop
push
pop
ja
jns
push
cvttps2pi
adc
pop
aad
pushf
cmpb
push
push
sub
cmp
stc
dec
pop
xchg
cmp
mov
adc
or
inc
insb
pop
push
loope
es
adc
aaa
or
dec
shl
outsl
xor
jae
outsb
sbb
or
out
sbbl
ljmp
daa
inc
sub
jl
push
sarb
push
int3
push
extrq
mull
sub
mov
insb
mov
rcll
aam
mov
mov
fwait
sbb
xchg
xchg
rol
out
push
outsb
xor
sub
mov
repz
or
jno
xchg
push
push
rolb
inc
lods
pop
in
int
mulb
popa
cmpsb
aad
add
jo
js
sbb
add
pop
popf
test
mov
mov
mov
jbe
jnp
jnp
push
jecxz
push
mov
adc
fidivs
mov
in
cmp
jg
out
xorb
dec
mov
pop
push
aas
inc
xchg
push
adc
cmp
movsb
jne
lret
ret
fsubs
xor
adc
cmp
enter
and
inc
push
adc
popa
dec
and
ret
mov
pop
testl
and
or
jmp
push
scas
jecxz
cmp
dec
add
dec
jno
fadds
das
idivl
clc
sub
sub
and
fsubr
jns
xchg
test
sbb
jo
leave
sbb
inc
inc
xchg
incl
and
dec
mov
ret
nop
rol
xlat
and
fs
roll
in
jno
jp
push
or
nop
jl
dec
test
scas
daa
je
adc
adcb
adc
sahf
frstor
mov
in
out
cmp
filds
ret
or
pushf
jecxz
sahf
aad
popf
fcompl
fwait
xlat
mov
or
push
pusha
mov
jg
std
fldl
fsubrp
outsb
out
jg
jnp
out
pop
subl
sbb
add
jbe
pop
xor
mov
push
cltd
ret
aad
outsb
mov
dec
ds
repz
sub
movsl
ljmp
mov
xor
das
jp
je
jnp
adc
and
add
into
mov
sbb
pop
out
xchg
pop
inc
cwtl
stos
push
jecxz
ja
adc
lret
push
frstor
inc
lea
xchg
xor
sbb
test
inc
adc
aam
cmpsb
inc
cld
inc
movsl
xor
arpl
push
inc
aam
and
push
push
scas
or
inc
ret
or
scas
subl
mov
jo
dec
mov
clc
mov
cltd
dec
cmp
mov
ja
jp
scas
xor
addr16
pop
decl
push
fs
inc
xchg
leave
xor
pop
js
leave
stos
cmp
jne
pop
fsubl
ss
cmpsl
xchg
xor
push
xchg
add
jmp
jp
sbb
push
xchg
ss
fbld
dec
sub
hlt
movsb
cmpb
adc
sbb
push
dec
jge
jns
gs
cmp
jge
dec
push
dec
mov
out
into
sub
mov
push
lods
inc
push
sbb
mov
int3
aaa
push
aaa
dec
and
fptan
adc
daa
int
subb
xchg
enter
mov
rorl
mov
js
fs
movb
inc
fsub
or
add
test
call
aas
fstl
add
test
ljmp
ret
adc
mov
hlt
xchg
xor
pop
adc
xchg
outsb
ljmp
divl
cmpsl
mov
addr16
arpl
insl
pop
sbb
lahf
mov
data16
jg
out
pop
aad
std
loopne
sbb
test
mov
or
lock
lret
mov
adc
mov
push
rclb
xor
mov
pop
rorb
jns
mov
add
jg
adc
add
xchg
mov
push
push
adc
add
xor
xchg
in
add
insb
pusha
inc
inc
out
rcr
and
mov
sti
ret
xchg
ss
scas
pop
into
bound
sub
add
add
rol
outsl
mov
mov
ja
pop
loop
xchg
pop
push
sti
nop
dec
popa
outsl
or
jnp
imul
sbb
mulb
mov
mov
pop
nop
sbb
movsb
loop
out
or
dec
jno
call
out
sub
leave
sbb
sbb
dec
inc
and
cmp
ja
out
leave
nop
mov
test
cmp
pusha
out
cmp
lcall
jno
mov
mov
into
js
daa
in
dec
xor
popf
mov
mov
xor
inc
dec
das
lods
mov
int
inc
inc
cmp
mov
adc
mov
dec
push
fadds
aas
mov
jb
mov
fidivrs
rolb
xchg
icebp
inc
rclb
addr16
jmp
pop
lret
jle
or
cmc
loope
aad
lock
xlat
pop
in
shrl
push
mov
pop
ficomps
into
mov
and
fmuls
lret
sarl
enter
lahf
in
cmpsb
pop
addb
xchg
xchg
jl
xchg
mov
rolb
fdivs
push
cs
out
fnsave
sbb
push
mov
icebp
out
mov
and
loop
sbb
fnstenv
jl
cmp
mov
cmp
mov
and
mov
out
push
in
mov
dec
fsubrp
femms
mov
mov
fistps
cmp
fisubrs
cmp
sub
andl
lahf
dec
stc
bound
addr16
sbb
sbb
loope
add
cmp
ljmp
pusha
addl
fidivrs
cld
fmul
shrl
cmp
je
push
aad
out
pop
xchg
jb
add
push
fcoms
jl
push
inc
or
js
test
ficoml
inc
add
adcb
xor
aas
pop
orl
and
outsl
inc
sbb
cmp
inc
cld
std
cmp
mov
fsubrl
imul
inc
gs
or
pusha
sahf
aas
mov
imul
xlat
das
incl
cmpsl
not
ja
cmc
jbe
push
mov
rolb
dec
xchg
xchg
repz
push
icebp
push
ficoms
xor
sbb
sub
cmp
mov
dec
jns
scas
shlb
sub
cmpsb
minps
and
icebp
xchg
test
mov
inc
insl
imull
push
adc
loope
fidivs
sbb
or
std
mov
mov
or
dec
inc
enter
movsl
pusha
adc
fidivs
mov
faddl
push
neg
jne
lods
add
and
add
out
mov
cmpb
fsubs
cmp
inc
lahf
mov
clc
adc
push
arpl
mov
popf
jb
jns
xchg
fs
sbb
ja
cmp
subb
jno
mov
into
cmp
shl
push
push
scas
repz
jo
jo
sub
fnstcw
les
push
inc
jne
cmp
scas
xchg
in
fdivs
inc
lea
stc
pop
sbb
jbe
or
or
int3
test
xor
cmp
pop
insb
ja
frstor
pop
std
outsb
popa
popf
negl
inc
mov
inc
push
dec
xor
push
shlb
sub
jp
lock
push
push
das
sub
repz
stc
jg
mov
cmp
inc
lods
rclb
xchg
inc
movsb
andb
mov
repnz
push
mov
scas
test
sub
fdiv
or
pusha
adc
out
loop
in
xor
test
xchg
xlat
fldt
cld
ret
fyl2xp1
mov
hlt
scas
mov
jmp
push
dec
mov
cld
sbb
or
push
xchg
adc
gs
mov
mov
cli
xor
cld
mull
sbb
mov
clc
insl
sti
xchg
movsl
scas
xchg
imulb
aam
mov
jno
lock
iret
cltd
cld
cmc
jne
cli
rorl
cmp
loopne
les
xchg
mov
cmp
jns
fisttps
xor
int
dec
repz
xchg
xor
lock
xchg
cmpb
xchg
lods
outsl
sti
mov
dec
mov
stos
push
push
mov
mov
ss
sbbl
aam
rorb
fs
cmp
in
rclb
ljmp
imul
pop
and
fwait
jo
xchg
add
mov
popf
add
mov
inc
sub
mov
jbe
xbegin
mov
xchg
pop
pop
les
xor
test
push
movsb
push
test
cmc
xchg
fsubrp
xchg
pop
pop
inc
out
pop
fcoms
jecxz
mov
sub
inc
and
dec
mov
adcl
xchg
fimull
mov
mov
orb
in
sub
rcll
mov
jns
push
adc
pop
dec
arpl
and
rorl
pop
mov
push
dec
lahf
push
adc
aas
shl
mov
jae
pop
nop
je
cmp
add
out
int3
cli
push
inc
sbb
sahf
jns
sub
jne
test
decl
loope
mov
ret
stos
inc
xchg
mov
mov
scas
push
lcall
cmc
stos
adc
inc
push
and
cmp
cmc
test
jno
jno
cmc
pop
outsl
pusha
ds
scas
je
fs
pop
aam
mov
cmp
mov
push
sbb
jae
loop
ja
jp
cmovno
lret
pushf
xlat
cs
sub
out
mov
sbb
sub
dec
mov
mov
sub
sub
mov
mov
clc
pop
popw
adc
enter
or
dec
ret
pop
sarl
mov
push
pop
push
pusha
fwait
jmp
pop
or
mov
lods
sahf
test
xchg
add
sbb
sbb
pop
push
rcrb
xor
daa
movsl
adc
dec
xchg
push
mov
adc
lahf
cmp
lock
sbb
mov
jo
xor
mov
or
lock
mov
ljmp
jmp
test
mov
mov
dec
leave
outsb
lret
xchg
fnstenv
inc
fimuls
adc
dec
outsl
fs
jnp
dec
loop
aad
or
or
xchg
xor
fucomip
adc
jnp
mov
nop
mov
mov
pushw
jae
aad
aaa
mov
jb
and
inc
push
sbb
add
icebp
xor
push
cmp
inc
lods
sub
jp
clc
adc
xor
push
lea
leave
pop
in
mov
in
bnd
pushf
sub
pusha
ret
scas
push
mov
jne
cmp
hlt
adc
clc
mov
xchg
sbb
lahf
in
jecxz
sarl
and
dec
mov
mov
pushf
imul
ret
adc
insl
ja
sub
in
adc
cmp
adc
dec
ret
xchg
adc
lea
ss
xor
stos
js
jns
or
pop
push
out
ret
mov
pop
ljmp
pop
and
jno
inc
add
mov
jge
div
push
cmp
sub
sbb
sub
push
inc
adc
sbb
in
push
fstps
repz
popa
add
jne
iret
cmpb
loop
icebp
sub
sbb
jnp
push
lods
or
mov
mov
ds
loop
adc
aaa
mov
jne
ret
xor
inc
sub
push
daa
bswap
dec
aad
fcoms
gs
mov
mov
sub
xchg
jp
sub
sahf
addr16
imul
out
iret
lods
lret
stos
sub
addr16
cmp
gs
out
or
push
sahf
sbb
jle
inc
inc
lods
pop
nop
mov
rcll
push
adc
mov
push
rcrl
popa
outsb
mov
bound
mov
mov
out
outsb
pop
xor
adc
lock
pop
xchg
aas
xlat
add
adc
dec
add
sti
loope
dec
add
pop
sbb
and
mov
mov
inc
pushf
add
daa
mov
sbb
cmpsb
hlt
inc
add
das
dec
enter
bound
ja
and
imul
and
shrb
pop
sub
lods
icebp
ret
es
dec
jl
push
inc
xor
adcl
movsl
stos
sti
push
mov
dec
jecxz
lcall
mov
and
jmp
xchg
adc
daa
sbb
repnz
inc
jns
iret
or
cmc
add
lock
mov
lock
mov
inc
shl
xor
cld
xchg
adcl
push
stc
add
dec
insl
pop
es
int3
pop
imul
inc
adc
addr16
add
leave
repnz
pop
or
jno
sahf
dec
cld
cmpsb
mov
sahf
xchg
shrb
btc
aad
and
aas
pop
loop
dec
sub
dec
mov
mov
mov
add
sub
inc
pop
xchg
ret
popf
aaa
adc
and
fsubr
xor
push
les
add
mov
jle
mov
jmp
out
test
mov
mov
stos
aas
push
daa
imul
inc
inc
pop
push
sbb
fcoml
test
mov
repnz
mov
cmp
fs
lds
in
xchg
add
mov
push
mov
push
xor
mov
nop
fcmovnu
adc
or
enter
repnz
sbb
sbb
jbe
addr16
stos
insb
lock
sti
push
pop
push
loop
popa
arpl
xchg
dec
mov
sahf
dec
lcall
les
jg
or
rorb
shrb
in
data16
push
icebp
adc
dec
push
out
sub
mov
sbb
xor
shl
dec
test
aaa
ja
jge
std
dec
add
dec
cmp
ret
rclb
dec
rol
jns
mov
lods
out
aaa
cltd
in
je
xlat
mov
xchg
ja
ret
cmp
sub
das
stc
dec
push
adc
clc
dec
fldl
cmpl
push
cmp
mov
xor
mov
mov
pop
sbb
das
mov
jmp
pop
bound
inc
test
rol
jb
lock
cltd
stos
pushf
xorb
mov
imul
jp
add
repz
popa
lcall
and
jns
push
scas
cmp
enter
pop
in
or
test
or
mov
dec
xchg
mov
or
movsl
out
jle
subb
test
dec
movsb
stc
dec
mov
xor
lods
xor
add
push
push
push
imul
test
cld
push
jmp
ds
imul
dec
fs
int3
cmp
or
mov
jp
mov
mov
or
ret
xor
es
pop
push
adc
cli
push
scas
and
out
adc
andl
jns
add
adc
sub
imul
nop
cltd
adc
lds
pop
dec
cmp
mull
xchg
xchg
mov
adc
cmc
data16
test
pushf
jecxz
das
fcompl
arpl
cmp
cwtl
je
inc
adc
adc
mov
loop
mov
sahf
ret
add
add
adc
out
mov
xor
mov
outsl
and
es
std
adc
jnp
cld
adcb
jno
cmp
dec
popf
outsl
mov
jmp
popa
jecxz
or
jmp
in
or
sub
jns
adc
imul
sarl
push
xchg
in
cld
cmp
jns
add
jae
outsb
pop
push
insl
mull
int
rol
outsl
mov
sub
call
push
jmp
out
push
mov
test
xchg
mov
out
fidivrl
xlat
mov
lcall
or
fisttps
jmp
add
push
in
jb
mov
inc
dec
gs
das
scas
lcall
adc
inc
mov
and
in
xor
lret
std
scas
test
iret
cltd
jmp
ret
jle
push
sbb
mov
jbe
mov
pushf
in
mov
pop
xlat
inc
mov
push
or
cmc
dec
sub
loopne
or
movsb
push
sbb
mov
aaa
and
and
leave
push
movb
aad
daa
mov
jge
adc
mov
cmc
xor
sub
xor
adc
sahf
js
fwait
dec
rolb
fsubl
lcall
push
dec
call
iret
mov
inc
mov
scas
add
cmpsb
and
scas
adcb
push
add
ds
aam
lods
pop
add
outsl
fldl
mov
xor
and
dec
test
pop
jbe
cmpsl
cmp
pop
dec
cwtl
xchg
mov
fidivs
xchg
ds
mov
jne
in
stc
data16
es
rol
dec
cltd
nop
mov
out
pop
inc
imul
mov
sbb
add
sbbb
mov
out
xor
inc
mov
dec
scas
rolb
mov
cld
xchg
and
dec
popa
jnp
add
pop
pop
jno
stc
cs
cwtl
dec
ficomps
mov
sbb
or
mov
mull
out
aaa
mov
sbb
ret
jbe
pop
sbb
xchg
data16
sbb
loope
ljmp
xchg
cmp
cltd
and
in
xor
lahf
fndisi(8087
leave
jnp
xor
repz
sub
movsb
push
mov
arpl
push
mov
jns
or
xlat
ds
cmp
mov
mov
dec
add
sub
xchg
outsl
cld
rol
rcl
xor
out
je
ds
repz
xchg
leave
jmp
add
pushf
aaa
jecxz
mov
outsb
adc
fsubl
hlt
lret
test
leave
aam
jg
push
icebp
out
ja
fwait
jecxz,pt
xchg
popa
add
dec
mov
cmp
xchg
out
sbb
push
fadds
jo
popl
cmp
fcoms
aaa
popa
daa
and
cli
lods
int3
adc
cld
imul
jge
int3
mov
cmp
cmp
lret
add
mov
jle
pop
int
mov
mov
imul
lcall
fmul
int3
aam
outsl
arpl
std
das
sbb
inc
es
sahf
in
xchg
in
enter
mov
xchg
adcb
and
pop
xchg
mov
popa
sbb
mov
fwait
stos
lods
mov
icebp
or
movsl
inc
lock
pop
adc
adc
test
mov
cmp
jmp
push
jecxz
pop
hlt
cmp
pop
or
test
pop
sbb
xor
sbb
popa
clc
cmpsl
or
lods
pusha
lods
push
out
loope
lcall
and
dec
sti
std
push
xor
xor
add
sbb
jmp
gs
cwtl
pop
inc
jnp
dec
sbb
aam
mov
divl
fwait
cld
xlat
xchg
gs
push
out
jns
mov
je
dec
inc
rcrl
movsb
pop
xchg
aas
inc
out
jb
mov
jnp
rcrb
pop
or
sahf
inc
xchg
xor
test
sbb
test
dec
inc
in
cltd
les
out
icebp
fs
bound
hlt
and
jmp
scas
push
lea
mov
xor
inc
pop
idivb
lds
lret
mov
rsm
mov
shrb
scas
mov
fisttps
sbbl
xor
clc
inc
inc
add
fwait
jle
aam
cmp
jb
loopne
push
lcall
jns
mov
fistl
in
pop
cmc
jb
mov
xor
stos
mov
adc
adcb
pop
xchg
inc
shl
outsl
arpl
movb
pop
pusha
cld
or
ficoml
dec
fisubrs
xchg
sti
dec
or
sub
fldl
or
mov
jmp
dec
out
mov
rolb
xchg
sub
sub
inc
subl
dec
outsb
ja
cmp
xor
pop
add
jle
push
lds
lret
stos
push
push
fidivrl
push
jb
fdecstp
adc
data16
and
sbb
inc
clc
ret
popf
add
int3
xor
xor
lret
mov
test
mov
bswap
sbb
neg
cmp
jg
sti
inc
jg
int3
fwait
jns
aad
sbb
int
nop
outsb
xorl
push
lcall
pop
ss
in
decb
inc
xlat
xchg
cwtl
std
xor
aas
jno
mov
shlb
pop
adc
adc
adc
pop
pop
inc
scas
push
insb
mov
push
mov
xor
mov
mov
dec
insl
mov
and
dec
add
adc
xchg
xor
xchg
test
and
hlt
sub
cli
pop
dec
mov
cmovb
jae
cli
mov
repnz
gs
stos
icebp
xchg
and
in
fisubs
iret
shlb
cmpsb
lret
cmp
daa
rcrb
adc
xor
lret
push
sbb
jle
fldenv
scas
mov
fimull
aam
jno
pop
fsubs
pop
mov
das
out
and
push
sub
xor
pushf
lcall
lods
or
inc
fidivrl
push
arpl
pop
jp
imul
ficoms
scas
loop
clc
push
push
push
dec
jns
ds
stc
fwait
cmp
mov
or
data16
fstps
jle
add
cmp
sub
out
out
inc
ret
pushl
jl
add
sbb
pop
mov
sbb
xchg
mov
in
imul
push
xor
rcll
addr16
inc
lea
stos
jae
jmp
add
inc
ds
fnstcw
dec
pop
and
leave
hlt
jge
xor
jnp
icebp
or
outsb
and
leave
jge
jmp
fwait
xchg
les
mov
rorb
test
fcompl
popa
xlat
mov
loope
jnp
ljmp
outsl
sahf
sub
insl
inc
jg
jnp
push
jmp
out
repz
mov
mov
mov
fisubrs
push
insb
cmc
leave
push
lods
push
int
mov
cmp
cmp
rclb
std
repnz
and
pop
nop
sub
insb
mov
fidivs
fdecstp
dec
mov
clc
or
push
imul
outsb
push
and
iret
jmp
pushf
and
leave
cli
xorl
mov
popl
add
adc
inc
sbb
pop
dec
or
scas
xor
mov
mov
xor
and
je
pop
jbe
popf
aaa
pushf
lret
test
shll
push
cltd
xchg
mov
add
jbe
clc
fidivl
inc
or
inc
inc
pop
outsl
sub
add
jl
popa
sub
jne
push
ud0
adcb
dec
inc
or
push
and
popa
cwtl
or
stc
xchg
cmp
push
fdivl
aam
xor
pusha
jae
sub
xchg
sub
xchg
fmulp
int
fdivs
adc
or
mov
out
fs
incl
pop
or
pop
mov
mov
das
addb
loopne
mov
dec
subb
lret
insl
clc
push
test
mull
xchg
mov
testb
mov
inc
add
or
das
out
adc
mov
cwtl
add
pop
mov
mov
int3
mov
shll
test
leave
popa
clc
cld
jg
adc
aad
lea
adc
pop
jecxz
sub
cltd
les
cmc
call
sbb
insb
std
push
xor
enter
aad
and
lock
inc
fstpl
stos
mov
test
jecxz
pop
inc
xor
mov
insl
std
test
xchg
imul
out
add
ret
jmp
or
out
lock
jae
mov
push
mov
xor
lahf
daa
and
jecxz
push
pop
fcoml
ss
out
cmp
lea
mov
mov
cmp
movsb
into
test
je
mov
xlat
mov
sub
push
insl
fs
dec
adc
fsubs
mov
enter
hlt
and
push
pop
and
enter
lock
xchg
pop
and
fmull
rclb
inc
lods
or
fidivs
add
sbb
lahf
les
sbb
jne
js
inc
arpl
dec
inc
movsb
mov
outsl
push
or
mov
push
jns
mov
push
ds
add
fld
cli
je
mov
xchg
add
mov
rep
in
insb
not
or
enter
mov
stos
jg
add
sbb
bound
out
xlat
inc
dec
xor
add
inc
adc
pop
gs
and
inc
push
pop
sarl
ja
mov
xor
pop
dec
mov
or
fwait
cmp
jmp
inc
pushf
dec
pusha
and
fidivrl
mov
pusha
pop
aam
pushf
out
nop
sub
rolb
js
mov
sub
cmc
sbb
jae
add
mov
sub
mov
loop
insb
jno
sbb
sbb
stc
xchg
inc
xor
pusha
mov
push
push
sti
xchg
adc
sub
addr16
cmp
sahf
xchg
inc
dec
mov
xor
popf
ss
sub
inc
insl
xchg
dec
js
and
and
mov
jge
rorl
sub
jnp
pop
jmp
shll
mov
int
mov
rcll
xor
mov
dec
inc
cmpsl
imul
lahf
push
loop
cmp
mov
pop
and
loopne
sub
pop
rorl
adc
jbe
pop
dec
repnz
adc
sarb
rcl
xor
leave
and
jmp
repz
push
sbbb
mov
pop
cltd
and
inc
xchg
pop
cmpsb
and
or
in
sub
xor
jle
lret
scas
jne
idivl
das
sahf
lds
adc
xchg
in
repnz
hlt
fistps
xchg
repnz
mov
xchg
xchg
aaa
jne
sub
movsl
push
mov
xchg
pop
push
imul
and
push
mov
sub
lock
lds
int3
pop
sbb
push
fsubrs
jecxz
out
xor
xchg
fisttps
int
test
movsl
in
loop
in
pop
jb
daa
in
jge
xchg
out
and
fxch
xchg
fwait
and
mov
pop
loope
and
pop
pop
and
data16
pop
jo
push
iret
jne
in
inc
pop
adc
jp
adc
rolb
lods
aaa
cwtl
cmpsb
and
fsts
gs
sbb
sbb
sbb
test
aas
push
rorl
fcoml
xchg
xorb
push
stos
jno
fwait
rorb
ljmp
jnp
daa
jecxz
xchg
push
shlb
das
outsb
clc
in
push
pop
dec
inc
pcmpeqw
mov
inc
repz
add
enter
sti
cmp
adc
and
call
repz
gs
in
lret
mov
into
xchg
mov
inc
push
lahf
leave
adc
popf
icebp
sarl
xor
shrl
ds
and
aaa
in
or
in
fistpll
shll
rclb
or
push
sub
into
addr16
xchg
lods
dec
ror
push
gs
cmp
dec
xlat
inc
mov
lods
lahf
jecxz
and
xlat
testl
adc
iret
xor
clc
sbb
sbb
aad
inc
stos
push
enter
sbb
ja
and
sahf
mov
mov
lds
dec
adc
mov
add
mov
mov
cli
int
es
scas
dec
rol
and
cli
cmp
sahf
pop
and
shlb
and
sbb
mov
xor
pop
jmp
fimull
mov
adc
inc
loopne
gs
push
fnstenv
mov
jecxz
lock
xchg
xchg
mov
jmp
fcmovnbe
fidivl
dec
andb
jg
xchg
jno
add
aas
cmp
test
sti
jno
adc
outsb
xor
dec
stos
iret
fldt
lock
sub
in
mov
add
jns
push
aas
repz
jb
pushf
and
lea
add
add
lods
jo
push
or
push
sbb
test
mov
ja
add
cmc
and
push
int3
or
nop
xchg
stos
inc
outsb
movsb
cmp
insl
mov
mov
lea
xchg
loope
addb
push
repnz
insb
loope
and
cmc
push
repnz
sbb
jb
cmp
inc
out
leave
imul
dec
je
les
mov
mov
adc
jne
mov
sbb
adc
push
jle
test
scas
hlt
mov
xchg
enter
jb
mov
pop
stos
push
pop
pop
adc
jno
mov
and
adc
ja
xor
mov
sub
sub
xor
outsb
push
inc
fldenv
sbb
xor
fldcw
or
push
push
dec
and
cli
cmp
cld
mov
inc
push
xlat
mov
imul
jmp
mov
sbb
dec
inc
scas
jbe
aam
inc
jns
mov
pop
inc
clc
in
lret
enter
rorl
dec
lods
sub
pop
push
push
leave
faddp
mov
mov
outsl
jg
leave
bound
or
data16
fimuls
shrl
mov
sub
int3
lcall
shr
jb
addr16
dec
call
cwtl
sub
xchg
imul
fiaddl
xchg
outsl
jns
jg
leave
jmp
inc
fstpl
and
adc
pop
fldl
add
pop
xchg
int
pop
popa
lock
sbbb
test
call
je
fninit
stc
jp
dec
js
push
aad
das
xchg
stos
sti
xor
sbb
fldl
imul
push
mov
push
add
mov
punpcklwd
pushf
lock
in
movsb
ret
sub
daa
fmulp
sbb
cmp
lahf
mov
je
jbe
mov
push
lea
push
cmp
das
test
dec
pop
nop
jle
pop
xchg
fbld
lcall
movsb
push
mov
lods
fs
aaa
cmp
ja
sub
mov
fnsave
push
or
ret
fstpl
jbe
cmp
mov
data16
out
and
std
mov
pop
in
lods
repz
sbb
adc
sub
push
push
inc
mov
inc
aam
inc
xor
jne
sbb
push
ret
jnp
mov
ret
sub
mov
push
pop
addb
push
mul
out
enter
notb
sub
mov
sub
cmpsb
add
sbb
cs
and
dec
mov
in
add
and
push
jns
out
inc
dec
fstpl
iret
std
cmpsl
fstpt
dec
icebp
xor
shl
mov
arpl
rolb
sub
out
xchg
pop
adc
bound
sbb
out
test
lret
add
es
arpl
push
cmp
add
adc
mov
cmp
pusha
bound
add
imulb
xchg
cs
add
push
pop
push
fildll
jmp
scas
and
xor
ds
push
fsubrs
adcb
movsl
mov
inc
repz
enter
add
mov
or
je
psrad
scas
popf
fs
xlat
in
stos
mov
mov
mov
std
imul
fisttpll
fisubl
push
fistpl
cld
lock
xor
xlat
xchg
sub
adc
add
repz
mov
push
mov
push
rcrl
add
outsl
mov
jp
in
ret
aaa
fdivr
fs
inc
jle
negl
push
adc
leave
adc
repnz
dec
fldt
es
xchg
and
push
rol
shl
fisttpl
call
jge
hlt
ret
adc
or
fisubs
repz
dec
push
negb
aas
xchg
loopne
mov
dec
scas
mov
sbb
jne
aas
test
jbe
pop
clc
pop
add
xchg
cmp
mov
je
cld
pop
fs
inc
mov
and
in
aam
stc
cld
outsl
xor
pop
mov
or
test
sarb
hlt
fs
lahf
fildll
adc
push
repnz
ficoms
imul
cmp
cmp
add
push
loope
scas
iret
lcall
int3
mov
stos
bound
sahf
sub
push
xchg
xor
xchg
adc
or
mov
inc
mov
inc
mov
push
hlt
add
adc
retw
outsb
insb
mov
add
cmp
test
clc
lret
notl
push
cmc
je
mov
shr
push
pop
dec
jge
dec
sar
aas
sbb
add
loope
fsubrs
jb
outsl
jg
or
popf
ja
mov
lock
adc
sub
hlt
or
jb
fiadds
shl
jecxz
lea
and
mov
jge
cmp
adc
movsb
jle
outsl
inc
loop
lods
add
repnz
push
inc
inc
nop
mov
rolb
ds
dec
mov
cmpsl
test
xchg
aam
mov
push
gs
xor
sahf
in
das
push
js
dec
add
rolb
xchg
rorb
inc
push
outsl
or
loopne
xchg
mulb
and
inc
lahf
and
push
aam
push
xchg
xchg
insb
adc
cwtl
nop
jmp
pop
mov
pop
dec
cs
out
jle
jbe
or
ds
das
jnp
mov
sbb
addr16
aam
lds
add
sbb
jbe
testb
sub
dec
movsl
push
mov
vpshaq
sub
sti
mov
test
hlt
jae
push
pop
add
mov
adc
sbb
add
add
pop
cmc
pop
mov
mov
loope
inc
xchg
cmp
pop
inc
push
ljmp
lret
pop
femms
pushf
mov
decl
dec
movsb
pop
outsb
jne
jnp
xchg
jno
aas
sub
add
das
xchg
shl
bound
outsb
or
push
pop
mov
dec
out
ficoms
sbb
inc
cltd
cmp
out
mov
adcb
xor
jg
test
sbbb
arpl
inc
push
cli
and
adcl
orb
pushf
push
add
ljmp
mov
add
inc
in
push
adc
mov
cmp
add
and
pop
inc
outsl
insl
adc
dec
adc
fsts
xchg
dec
inc
dec
mov
mov
jnp
std
call
mov
jnp
sarl
out
jecxz
rorb
test
mov
shrb
sub
pop
jno
or
push
iret
fdivp
push
inc
xor
testl
aad
or
icebp
dec
das
xchg
mov
icebp
rolb
push
lcall
mov
push
push
daa
xchg
push
das
add
sub
cmp
pop
dec
cmp
push
xchg
loop
pop
adc
xchg
test
xor
adc
sub
xchg
lahf
loopne
jl
test
push
cmp
shlb
pop
hlt
sti
movsl
pop
insl
in
xchg
inc
cltd
mov
pusha
pop
pop
cmpsl
push
sub
and
sub
cmp
mov
adcb
cmp
cmpl
mov
pop
sbb
ds
insl
les
xchg
pop
std
shl
nop
and
and
out
mov
mov
iret
cmc
inc
ret
mulb
cmp
rorl
dec
mov
inc
fidivrl
sahf
ret
imul
cltd
pop
or
ret
mov
jp
lods
loope
and
rcrl
cld
arpl
or
loope
sub
sahf
jnp
sbb
cmpsl
imul
imul
inc
adc
add
xor
mov
loop
insb
pop
stos
clc
lods
rcl
mov
int3
iret
imul
pusha
sub
jg
andb
xor
repnz
jmp
sub
arpl
cmp
cmc
test
pop
push
sbb
xchg
mov
fists
pushf
fistpl
arpl
push
cmp
sbb
lods
mov
js
stos
jno
mov
pop
lods
cmpl
jno
arpl
jge
sbb
stc
fsubr
dec
cmp
lea
sub
cld
and
jl
inc
lahf
xchg
and
bswap
scas
pop
divb
jmp
test
sbb
mov
sbb
cmp
pop
dec
add
in
inc
push
cs
adc
inc
mov
ficomps
repnz
pop
inc
ja
jo
sbb
sub
rorl
inc
jae
add
push
mov
push
push
loop
nop
dec
push
test
in
push
mov
fadds
cmpb
jae
fxam
push
pop
xor
xor
or
lahf
mov
push
and
jge
sub
shr
addr16
mov
ljmp
les
js
fdivp
outsb
gs
test
lods
cmpsb
outsl
int3
repz
pop
adc
inc
mov
jb
sub
cmp
and
shlb
push
mov
xchg
imul
xor
ret
testb
xor
popf
or
xchg
sar
insb
or
in
shll
adc
mov
sub
push
xor
jb
mov
xlat
test
call
mov
jno
inc
adc
lahf
add
xchg
mov
sbb
cli
push
filds
pop
sbb
inc
nop
push
mov
aas
bndldx
jmp
and
daa
in
lds
xchg
pop
test
sti
lea
stc
mov
dec
insl
cld
dec
repz
iret
pop
xchg
or
and
and
jp
call
insl
push
jne
inc
cmc
pop
mov
or
and
inc
dec
adc
or
jno
into
orb
jnp
add
fdivp
mov
mov
sti
lcall
in
movsb
xor
xchg
imulb
rcll
adc
jle
sbb
popf
bound
retw
xor
popf
mov
xor
inc
jbe
outsl
push
xchg
fnstcw
out
ljmp
insl
loopne
outsl
lahf
cmp
inc
xchg
mov
and
push
mov
push
pop
outsb
adc
pushf
addps
and
repz
adc
loopne
xlat
inc
mov
cmpsb
xchg
scas
push
mov
roll
inc
inc
lods
sbb
loop
loope
dec
popa
push
insl
jbe
jmp
int
fistpl
mov
push
cmp
ret
mov
inc
add
fcomp
sub
insl
or
mov
jno
dec
jmp
mov
mov
pop
stos
cmp
jp
cmp
add
xor
adc
adc
mov
icebp
push
aad
add
mov
int
lcall
out
fistl
je
add
xlat
out
add
pop
jno
dec
lock
mov
ss
lea
jle
cltd
and
push
pop
cmpsl
mov
mov
xchg
inc
out
inc
mov
add
mov
adc
jle
xor
loope
jne
adc
icebp
inc
lock
lcall
pop
aam
test
or
rclb
dec
mov
rclb
jae
mov
xchg
lret
sbb
mov
stc
loope
mov
out
and
sub
inc
sbb
mov
or
ljmp
test
cmp
repz
cmpsl
das
cmp
test
loope
cmp
mov
lahf
aam
dec
jg
sub
icebp
cwtl
addr16
xor
and
xchg
pop
pop
inc
stc
sub
sar
cmpsl
repz
xchg
pop
push
dec
fincstp
jo
add
xlat
stos
pop
jp
call
out
sbb
lds
xchg
mov
xor
sbb
in
stc
orl
xor
jbe
sub
or
orl
inc
aaa
nop
cmc
cmp
sbb
push
jmp
scas
je
jl
fwait
rcl
add
jecxz
sub
push
mov
pop
and
in
shll
xor
shl
xor
xchg
pop
jae
popa
pop
cmp
fcom
arpl
popf
mov
jecxz
push
or
sub
add
aas
mov
popf
mov
cmpsl
pause
fcomps
shl
out
mov
xchg
xchg
jmp
adc
pop
jle
sbb
mov
int
stc
pushl
fwait
loope
in
push
inc
push
and
dec
lret
insb
test
push
lcall
or
sub
mov
dec
push
in
mov
inc
mov
pusha
mov
loop
sub
cli
fidivl
inc
mov
insl
fcmovb
mov
nop
stos
popa
imul
xchg
inc
aam
addr16
fldl
outsb
stos
sbb
mov
in
outsl
cmc
loope
imul
pop
push
lods
mov
xchg
test
imul
cld
sub
aaa
sbb
stc
cltd
fisubl
pop
pop
rolb
stc
iret
daa
and
nop
shlb
clc
push
je
insb
pusha
in
popa
sub
movsb
lret
jno
cmpl
or
sbb
pushf
xor
enter
jl
es
xchg
inc
pop
dec
add
stos
lea
icebp
jg
mov
push
daa
pop
fcomps
xorl
in
jnp
sbb
sbb
mov
popa
test
pop
sub
nop
dec
scas
dec
fnstcw
add
pop
jecxz
xor
add
decl
rcrb
enter
fcoml
jp
dec
jl
mov
mov
pop
push
dec
das
mov
es
cld
xchg
cmp
add
inc
nop
insl
or
mov
push
leave
cli
faddl
dec
call
cmp
test
test
or
cld
xor
in
roll
pop
mov
dec
xchg
xor
pop
pop
mov
je
sub
cmpsl
dec
jnp
dec
pop
sub
push
int3
lock
mov
xor
jno
pop
mov
xchg
cs
std
jle
cmp
xchg
xchg
jp
push
loope
inc
lret
cmp
or
sbb
push
push
test
bound
xor
insl
add
test
or
lds
xlat
rorl
and
mov
ret
pop
adc
adc
aas
orb
negl
mul
adc
jle
mov
adc
pushf
pop
sub
js
sub
arpl
push
aas
push
push
jl
mov
xchg
pushf
in
sub
xchg
out
adc
cli
lods
repz
imul
pop
xchg
lret
cwtl
xor
pop
mov
les
sub
jp
adc
mov
inc
rcr
inc
daa
xchg
sbb
rolb
push
xchg
lea
inc
int3
clc
cmc
pop
shll
mov
dec
pop
in
cmp
movsl
mov
aas
adc
sti
repz
fs
xchg
jnp
aam
js
jle
enter
pop
icebp
cmp
and
arpl
ja
and
lahf
xorl
adc
lret
pop
dec
je
out
mov
hlt
pop
lahf
inc
xchg
adc
dec
push
xchg
mov
loop
pop
stos
or
adc
out
sub
mov
insb
dec
enter
leave
xchg
jp
xor
mov
cli
fwait
push
dec
enter
xor
or
mov
ret
pushf
push
pusha
xchg
pop
loope
add
cwtl
dec
mov
rolb
lret
mov
cmp
mov
mov
arpl
and
push
cmp
jbe
out
pushf
and
mov
outsb
mov
jae
mov
js
bound
int3
movsb
hlt
jnp
inc
mov
mov
mov
push
and
scas
ljmp
mov
sbb
or
pop
jmp
pop
cmp
sbb
leave
std
cmp
or
in
cmp
das
mov
sahf
repnz
out
scas
test
fdivl
leave
mov
mov
shr
inc
jle
xchg
movsb
adc
xchg
xorl
sbbl
subl
call
sub
stc
int3
repnz
xchg
xor
outsb
aas
addl
xchg
inc
pop
in
pop
add
hlt
and
lret
mov
mulb
ret
jg
jp
push
mov
inc
or
ret
fbstp
mov
clc
iret
arpl
sub
mov
pop
fidivs
or
popa
jns
sti
ret
notb
stos
lea
and
out
mov
out
ljmp
push
enter
js
push
stc
push
mov
ret
push
ljmp
mov
jo
out
repnz
clc
jp
aad
imul
xchg
push
xchg
cs
xor
pop
jnp
push
enter
daa
shrl
xchg
ret
dec
pop
scas
xchg
xor
pop
or
xlat
mov
add
cld
or
les
rcrb
testb
mov
insl
jo
in
cmp
mov
dec
cmp
rcll
clc
jbe
fs
push
mov
mov
mov
inc
sbb
xchg
pop
iret
movsl
sub
mov
xchg
pop
or
dec
outsb
fistps
push
jle
jmp
xchg
js
fidivrl
cmc
dec
jecxz
inc
adc
sub
es
xchg
fs
in
leave
mov
and
mov
fildll
inc
or
lcall
xorb
sti
fdivrs
push
fwait
movsl
push
lods
adc
adc
pop
inc
lret
cmc
testb
cmpsl
negl
add
mov
rorb
enter
cld
cmpb
sahf
xor
sbb
cmp
fcmovnb
mov
dec
js
into
in
mov
scas
or
clc
jnp
pop
cs
xchg
inc
mov
lahf
or
mov
sub
sbb
sub
and
and
fsub
jl
dec
leave
int3
add
imul
leave
loopne
sbb
add
filds
mov
pop
test
sub
mov
insb
lds
push
mov
mov
push
nop
adc
pop
mov
or
pop
insl
ret
mov
fstpl
cltd
andb
pop
jns
orl
xchg
popf
es
addb
sbb
inc
inc
sub
inc
in
sti
shll
ss
stos
incl
lods
xor
stc
test
rcll
add
lret
mov
clc
jnp
and
push
cmp
jmp
jmpw
pop
sbb
inc
out
adc
ja
xchg
shlb
mov
sub
jns
rcll
and
xor
sub
out
mov
add
jp
stc
sbb
xchg
dec
adc
fisttpl
xchg
test
cwtl
pusha
ljmp
outsl
mov
clc
jbe
loop
cmp
popa
jge
add
inc
fs
test
cmp
xor
lea
mov
ret
push
xor
pop
cmp
sbb
xchg
mov
out
mov
sub
shlb
sbb
jns
cmc
xorb
les
cmp
scas
xor
mov
pop
outsl
popf
or
gs
nop
push
or
push
testl
loop
jae
xor
pop
sbb
mov
sub
dec
or
sti
out
in
lahf
add
push
sti
leave
xchg
int
pop
mov
testb
lret
jnp
insb
cmp
int3
or
jnp
mov
cmc
dec
test
mov
clc
ret
pusha
mov
repz
jbe
cmp
idivl
call
lret
pop
setbe
adc
leave
lret
lcall
pop
shlb
jmp
bound
xchg
push
mov
jnp
xchg
xchg
inc
ljmp
movsb
pusha
lahf
int3
inc
cli
xor
push
push
push
xchg
daa
pop
xchg
leave
outsl
iret
imull
pushf
mov
xchg
inc
fnstsw
fsubrl
pmulhuw
out
cmpsl
mov
cmp
xchg
fisubl
jb
dec
mov
pop
xchg
lret
lock
or
cmpsl
xchg
push
pop
out
jg
rcrl
in
adc
xor
in
adc
cmpsl
ror
sub
lahf
xchg
dec
sub
dec
xlat
fmull
bndldx
cmp
lcall
popf
aaa
xchg
sub
test
mov
test
movsl
dec
pop
stc
pusha
int
inc
adc
scas
popf
and
cmp
popa
jecxz
xchg
loopne
lcall
pop
cs
xchg
xchg
mov
hlt
cwtl
iret
out
push
lods
mov
std
or
sbb
imul
loopne
cmc
sub
mov
bswap
mov
add
in
es
fldcw
mov
fdivrl
inc
lahf
fwait
stos
push
aaa
dec
movsb
inc
jp
sbb
fmull
popa
sub
cmp
cld
mov
or
out
outsb
xorl
mov
je
into
jge
popa
fildll
lret
in
into
or
xor
xchg
or
lcall
outsb
add
pop
aam
cmp
scas
push
lahf
mov
negb
xchg
je
and
out
add
adc
shrb
icebp
cmc
fstps
xchg
pop
pop
mov
mov
add
arpl
xchg
popa
xchg
and
mov
mov
aas
pop
jno
aas
jo
sti
int3
shlb
pop
dec
add
and
mov
push
addr16
jns
dec
mov
xchg
dec
jmp
lcall
shll
mov
imul
in
xchg
mov
stos
movb
or
mov
mov
mov
jl
ret
add
std
add
or
jge
in
xchg
ljmp
dec
lods
cmp
jle
call
jl
pop
jmp
lret
in
inc
bound
xchg
test
sub
xor
mov
ljmp
in
cltd
popa
inc
mov
and
lcall
sbb
xor
out
add
push
add
daa
sub
and
jmp
sahf
scas
cmp
ret
loop
mov
xchg
lea
lds
jb
orl
xchg
mov
pop
test
outsl
push
sub
shll
mov
loopne
xlat
scas
rclb
fsubr
ret
add
scas
push
sbb
sub
cs
jne
push
pop
fnstenv
and
sbb
cmp
dec
pushl
out
push
or
add
shl
mov
ja
fucom
mov
push
inc
das
hlt
sarb
ja
jae
or
inc
or
loopne
xchg
inc
leave
push
repz
fistps
and
or
mov
and
dec
pop
jae
pop
inc
and
cmp
jecxz
add
icebp
mov
xchg
ds
nop
jl
xchg
out
pusha
cwtl
daa
repz
adc
test
jb
adcl
movsl
out
out
lock
push
lock
out
jp
test
cltd
jnp
icebp
stos
jae
push
push
inc
cmp
and
jg
xchg
mov
call
sub
movsl
flds
add
gs
xchg
mov
lock
daa
es
xor
add
adc
sahf
aad
ljmp
fdivrs
in
loope
lret
clc
ds
hlt
jl
fildl
fstpl
xor
and
adc
dec
push
push
loop
and
cmpsl
imul
and
cmp
adcb
testb
pop
mov
sub
adc
xor
aad
jb
xor
push
outsb
mov
pop
cmp
pop
scas
inc
xchg
lahf
pop
push
xchg
fwait
out
xor
lcall
jnp
mov
ret
xchg
mov
jne
lods
mov
mov
stos
jne
dec
aad
inc
aas
pop
inc
jle
cmpsl
test
mov
fnstcw
cmp
jecxz
aad
cmp
aam
std
cmp
push
jns
cmp
sbb
ret
xchg
scas
push
paddq
xor
lea
pop
lock
inc
and
jge
xor
sub
dec
mov
fcmovne
or
aas
sub
cmc
mov
dec
add
mov
idivb
test
mov
jl
pop
xchg
push
add
inc
mov
sbb
popf
sub
or
mov
in
lret
shrb
in
xor
adc
js
out
mov
popa
jg
dec
xor
mov
aaa
out
movsl
add
mov
inc
and
cmpb
push
dec
shlb
fs
cld
in
xchg
jb
in
cmpsl
movsb
xchg
pop
xor
aam
popa
inc
into
jle
repnz
lds
stos
cmp
jl
and
mov
ss
inc
dec
mov
dec
and
pop
aam
jbe
cmp
test
dec
cmc
shll
dec
sbb
insl
mov
push
mov
xor
rcl
add
jecxz
push
cli
test
add
and
filds
push
int
jae
mov
push
dec
sbb
mov
out
sbb
imul
test
mov
inc
sbb
stos
hlt
adc
push
repnz
add
adcl
cmp
push
dec
sbb
sbb
push
add
pop
cmpsb
sub
push
xor
aad
lcall
sbbl
adc
hlt
mov
xor
scas
jp
out
mov
jne
idivb
repnz
jns
lock
mov
lock
ret
or
mov
mov
mov
rcl
add
cltd
or
addr16
pop
adcl
fcomps
out
std
add
adc
xor
into
gs
fstpl
push
mov
jbe
inc
arpl
ds
mov
in
push
mov
push
ret
pop
fnsave
std
sub
sub
sbb
out
push
add
jno
jae
pop
lret
jmp
jge
or
repnz
stos
push
xor
dec
cmc
rol
bnd
movsl
arpl
hlt
or
test
ficoms
shl
inc
cmp
fsubp
mov
sub
jae
push
mov
stos
pop
fwait
or
cmp
movsl
test
lea
sbb
or
mov
fucomip
mov
adc
lock
sub
cs
loope
mov
lahf
dec
fidivrl
out
jl
and
lcall
mov
add
and
add
push
mov
xchg
ret
lock
xor
lahf
and
stos
in
stc
mov
xor
repnz
pop
je
sub
and
mov
mov
ja
js
js
inc
adc
arpl
jo
inc
sub
lock
aaa
jb
xchg
mov
into
inc
inc
pop
scas
nop
and
adc
adc
add
jg
inc
adc
sbb
gs
lret
notl
jmp
pop
loopne
pusha
xchg
notb
push
clc
pop
xchg
and
lahf
cmp
mov
add
leave
daa
aas
xor
cld
jno
push
adc
mov
mov
push
xor
xorl
out
jbe
loope
out
xor
xor
xchg
inc
repz
dec
inc
mov
stos
add
fs
jge
movsl
sbb
fisubrs
rorl
out
dec
test
add
aas
mull
mov
pop
dec
jae
or
mov
jp
mov
and
pop
mov
or
mov
push
int
inc
imul
xchg
scas
or
lea
je
jecxz
inc
mov
add
cmp
lds
mov
xor
push
lahf
loopne
stos
mov
lods
inc
and
pop
int
inc
push
mov
mov
xor
fstpl
xor
stc
add
scas
inc
scas
pop
mov
in
jnp
mov
scas
arpl
xchg
sbb
out
mov
or
mov
xor
fisttpll
mov
test
mov
cltd
int3
pop
adc
dec
xchg
push
mov
mov
outsb
xchg
ds
rcrl
test
push
mov
in
addr16
pop
add
pop
filds
push
cmp
fs
jo,pt
scas
decb
sbb
jecxz
xchg
cmp
mov
pop
int
add
in
xor
pop
mul
xchg
rcll
out
fwait
out
and
xor
xorl
cltd
add
mov
js
clc
pop
cltd
leave
push
sub
repnz
xchg
rcrl
fcoms
pop
fs
push
pop
repnz
xor
dec
add
mov
xor
cmp
loop
xor
sub
outsb
mov
jmp
jnp
jae
shll
pop
nop
ljmp
add
push
inc
pop
jae
repz
push
sub
fwait
cmp
and
cmpsb
les
iret
mov
and
sbb
pop
push
dec
add
gs
stos
movsl
rolb
cld
mov
mov
mov
pushf
and
xchg
jl
pop
orl
xor
lret
js
aad
pop
outsb
push
dec
mov
push
mov
cmp
push
rclb
add
inc
mov
xchg
jnp
push
add
icebp
in
xor
xor
sbb
push
cmp
sub
lret
pop
sub
lods
movsb
mov
sbb
mov
movsl
pop
int
lods
cs
jecxz
inc
std
repz
lods
and
adc
cmp
jno
insb
adc
pop
dec
push
jl
notl
out
pop
arpl
jp
hlt
ret
pop
sarb
and
push
clc
shrd
ss
xchg
fstl
stos
clc
iret
or
adc
imul
mov
stos
jge
aam
nop
mov
cmp
or
movsl
shl
clc
sub
stos
leave
mov
add
mov
lods
mov
mov
xor
sarl
cmp
sti
daa
dec
push
jl
lods
or
outsl
push
std
add
xor
dec
aam
jmp
fstpl
adc
je
jb
ds
pop
inc
cmc
std
and
lds
movsb
cltd
outsb
sbb
add
sub
jg
jle
xchg
rorl
stos
inc
cmpl
ret
mov
insb
xor
shlb
hlt
mov
jae
int
inc
in
inc
mov
jb
fdivs
imul
inc
add
pop
lock
pop
loope
xlat
jb
mov
xor
push
in
jns
das
jo
cmp
xor
adc
movsl
sub
lea
je
cmpsl
pushf
mov
cmp
nop
into
sub
fs
iret
lods
popa
lret
lret
in
loop
leave
pusha
mov
adc
pop
sub
std
aaa
dec
lcall
jp
shll
or
aas
push
loopne
rorb
movsb
cltd
icebp
dec
and
adc
shl
xor
in
inc
mov
push
das
sub
cmp
lock
and
mov
inc
popf
xor
pop
xor
push
out
mov
js
je
mov
mov
outsl
pop
orb
cmp
mov
inc
mov
in
mov
or
std
fwait
xor
mov
xor
fsubs
test
out
popf
call
sbb
int
push
push
or
dec
shl
xchg
in
sbb
pop
fadd
ror
inc
adcl
stc
push
movsb
push
xor
iret
sbb
xchg
inc
in
or
imul
xor
test
sarl
inc
push
push
cmc
js
incb
push
out
jae
scas
lcall
rol
in
int
push
int
and
sbb
pop
or
bound
mov
popf
sti
stc
sub
pop
lods
xor
scas
xchg
mov
ja
jbe
adc
xchg
xor
aad
mov
jno
test
mov
push
add
mov
test
pusha
cld
fidivl
arpl
pop
loope
inc
jae
sbb
cmp
and
inc
cmpl
stos
ds
test
pop
and
or
jg
stos
into
ljmp
xchg
jp
add
ret
div
pusha
test
sbb
addb
dec
sub
or
pop
stc
leave
movsl
cmpsb
inc
and
cmp
bound
repnz
dec
fs
sahf
movsb
lock
cmp
ret
out
jb
repz
jo
lea
push
cltd
loop
ds
andb
inc
lret
mov
outsl
arpl
pushf
jp
test
adc
loop
jmp
or
ljmp
hlt
xchg
lahf
iret
scas
out
int3
call
sub
lock
stos
sarb
ret
jne
or
sub
out
cmc
mov
mov
xchg
movsb
ret
xorb
push
in
rclb
imulb
test
sub
stc
shll
jge
shlb
imul
adc
repz
pop
pop
dec
jmp
cmp
ret
fisubrl
in
popf
jmp
and
mov
dec
mov
xor
sub
nop
nop
push
les
inc
sub
xchg
icebp
xchg
test
ja
aaa
fcmovnu
and
das
mov
outsl
stc
aaa
lret
cltd
into
clc
pop
cmp
sbb
add
jno
sbb
inc
fcomip
pop
xchg
shr
cmp
xor
cmp
mov
bound
orl
stc
xchg
pop
pop
sub
aam
push
out
hlt
popf
inc
mov
push
ss
cmp
rolb
movsl
or
adc
shlb
lea
push
vpmaxsw
rclb
out
or
jmp
loope
dec
gs
pop
popaw
add
pop
push
ds
test
fldl
ret
jmp
inc
popf
aas
lds
out
push
jnp
icebp
frstor
test
ljmp
cltd
sub
adc
jecxz
les
inc
add
or
mov
inc
mov
movsl
lcall
jmp
jle
cmp
xchg
aam
push
lret
fldln2
push
xchg
test
aam
sub
insb
adc
mov
xor
test
and
inc
add
add
gs
js
cmpsb
vpmovzxbq
arpl
cmc
jno
fsubrl
jno
push
fucomi
sbb
cltd
xorb
inc
jge
arpl
lock
xchg
std
add
mov
fstl
lods
cmp
icebp
mov
les
push
xchg
fs
into
in
push
fdivs
pop
out
xor
mov
in
add
js
test
mov
dec
mov
shlb
fwait
jle
jmp
xor
sbb
mov
dec
cmp
mov
xor
lods
movsl
cmp
ds
mov
insb
lahf
cld
fnstcw
or
push
ret
xor
cli
inc
out
stos
cmpsl
mov
push
xchg
mov
xor
out
push
repnz
xlat
cli
mov
dec
sbbl
cwtl
mul
and
es
stos
test
xlat
js
popa
es
in
scas
pop
jno
jmp
pop
loop
jmp
push
pusha
pop
or
test
cli
lods
ja
sub
cwtl
cmp
dec
mov
xor
mov
dec
push
imul
cs
adc
imul
roll
mov
fsubl
or
jae
sbb
mov
clc
vpsllw
test
cmpsl
imul
decb
push
test
jb
xlat
loope
inc
je
sub
mov
rcl
shll
cmc
dec
cli
push
bound
sbb
adc
fisubs
aas
mov
in
pusha
or
call
hlt
dec
mov
in
gs
negb
push
mov
out
outsb
jg
pop
loope
mov
mov
sbb
jmp
mov
jg
mov
and
popf
sub
pop
in
test
fwait
add
xor
lods
sub
inc
enter
jb
icebp
fldcw
cmp
mov
push
scas
ljmp
push
mov
xchg
jle
inc
in
xlat
push
test
outsl
jb
call
mov
enter
mov
pushf
mov
cmp
fidivl
int3
sub
fnstenv
lcall
out
filds
add
addr16
ja
arpl
push
cmp
leave
xchg
xor
call
std
mov
sbb
ud1
pusha
sub
sbb
roll
sub
stos
cmp
daa
cltd
insb
repz
or
aam
xchg
push
rol
push
ss
push
test
pop
mov
out
clc
or
mov
mov
out
leave
mov
sti
or
xor
lds
loope
dec
ss
or
ret
cmc
nop
je
aad
add
adc
popf
or
push
cmp
cmp
jno
sub
lock
fistl
adc
jl
clc
xchg
inc
xchg
cmp
inc
lret
pop
jno
mov
nop
mov
shlb
mov
sub
mov
mov
cmp
jl
xchg
mov
xor
dec
xchg
icebp
cli
loop
mov
cmp
push
adc
inc
jl
jge
fs
sub
and
xor
loopne
mov
test
mov
mov
shlb
addr16
aam
xchg
enter
scas
xchg
xchg
loope
inc
test
add
insl
pop
xchg
adc
pop
jae
loop
out
jge
mulb
insb
aas
test
sub
mov
jle
mov
mov
stc
cltd
gs
std
cltd
stos
pop
pop
les
in
or
mov
jp
pop
and
rorl
pusha
jbe
pushf
rcpps
inc
out
mov
fstpt
test
subl
icebp
or
inc
fistps
rcll
add
sbb
lods
mov
imul
rorb
adc
pop
test
jmp
hlt
adc
mov
lock
or
push
push
mov
dec
in
loop
out
es
incl
fs
cmp
stc
nop
loop
test
leave
movsb
addl
shrb
dec
pop
adc
ljmp
lahf
lahf
out
negb
jnp
pop
inc
fcompl
jns
rcl
mov
call
lret
stc
popf
push
sub
jo
pop
mov
adc
scas
push
cli
fstp
rolb
mov
pop
cmp
leave
push
out
mov
sbb
stos
fsub
lret
xorb
adc
in
mov
or
push
and
mov
fsubrs
xor
mov
fnsave
test
rcl
inc
push
ljmp
nop
stc
mov
mov
sub
dec
push
call
xorl
sbb
fwait
push
outsl
xchg
pop
jne
xor
dec
jbe
repnz
lods
mov
mov
leave
xor
dec
jb
popf
adc
inc
popa
test
inc
mov
int3
sbb
cmc
out
mov
sub
aad
inc
je
push
push
ja
xchg
or
mov
mov
test
xor
push
mov
stos
xor
pop
movsb
sub
dec
mov
sub
fmul
push
rolb
cwtl
push
xchg
push
push
test
xor
sbb
adc
orb
into
mov
jle
out
cmc
sub
pop
jae
pushf
das
sub
mov
jge
filds
shrl
mov
inc
add
xor
add
bound
jecxz
xchg
shrb
jp
jbe
jp
sub
dec
lea
fcmovnu
imul
lcall
out
rolb
mov
push
dec
jno
push
in
add
pushf
jmp
aam
out
fidivrl
push
sahf
push
scas
pop
imul
pop
dec
pop
rcll
out
mov
xchg
lret
add
xchg
xchg
cmp
addl
adc
test
mov
cmp
push
aas
jmp
stos
lret
repnz
daa
mov
sbb
insl
push
lds
test
int3
mov
ss
out
mov
adc
mov
mov
mov
push
stos
int
mov
adc
mov
imul
sub
rcr
aas
das
aad
inc
or
scas
pop
adc
shrl
imul
and
jno
outsl
and
push
jmp
rcll
dec
loop
xor
sub
or
sahf
pop
js
mov
inc
xor
jns
adc
jge
sub
cld
xchg
rol
stos
pop
sbb
adc
or
inc
pushf
pop
cwtl
imul
xchg
icebp
fidivl
sahf
mov
arpl
movsl
icebp
cmp
and
or
jbe
jns
jl
ds
and
cmp
fstl
jnp
push
ret
dec
stos
and
jmp
mov
out
mov
cli
and
jp
cwtl
xchg
push
insl
loopne
popf
dec
xor
xor
in
push
adc
sbb
cmpsl
mov
ret
arpl
xchg
mov
leave
sbb
adc
sbbl
test
push
and
xchg
or
add
or
sub
inc
mov
fiadds
sbb
push
aas
dec
mov
pop
cmp
mov
xor
dec
test
cmp
cltd
pushf
movb
xor
and
fadds
xchg
or
repnz
fistl
mov
popa
shlb
mov
mov
insl
lock
mov
mov
sbb
fwait
loopne
out
aaa
add
mov
dec
xorl
mov
dec
jb
insl
arpl
mov
mov
pop
aad
pmaxub
insb
adc
sub
xchg
jmp
test
subb
negl
add
aas
notl
dec
mov
xor
and
lods
popf
push
loopne
mov
fwait
fwait
ds
mov
push
add
or
sahf
jp
lea
jl
sub
fnstsw
ret
push
sub
xor
or
push
addr16
ffreep
fmulp
mov
out
ret
pop
adc
xor
pop
rorl
movsb
and
mov
mov
ret
mov
stos
ret
dec
sub
mov
and
pop
pop
ror
shr
cli
fucomi
js
insl
fmull
cltd
adc
lods
xor
sahf
mov
fbstp
mov
popa
lahf
xorl
xchg
cwtl
insl
rclb
cmc
scas
mov
subb
mov
jno
std
cld
mov
les
call
cld
or
inc
imul
mov
sbb
mov
sub
add
add
adc
mov
arpl
popa
lds
dec
jecxz
imul
das
inc
mov
data16
sbb
inc
adc
ljmp
out
mov
cli
cmp
xor
cmp
mov
rorb
pop
mov
pop
cmp
imul
or
mov
aad
insl
jns
insl
mov
mov
loope
mov
nop
rsm
jo
in
push
int3
sbb
sbb
popf
fmull
rcrb
data16
nop
hlt
jne
sub
pop
ret
push
push
lock
sub
sbb
std
push
mov
dec
jle
lods
ror
jb
mov
decl
clc
enter
dec
cmp
cwtl
leave
push
std
clc
lods
mov
pop
sbb
add
in
push
xor
insl
and
mulw
jbe
fisttpll
push
jmp
loopne
cmp
mov
pop
pop
mov
xchg
sbb
ljmp
fists
dec
pop
lret
insl
dec
pop
js
mov
jmp
jle
dec
std
push
int3
add
movsl
movsl
sahf
jb
adc
cld
test
fcmovne
mov
pop
subl
inc
mov
sbb
xchg
ja
bound
push
or
jns
in
enter
cmpsb
imul
jl
ret
or
push
scas
sub
repnz
pop
push
mov
int3
mov
aad
nop
sub
xor
test
rcr
es
in
pop
int3
xchg
pop
ret
dec
cmc
dec
je
fistpl
mov
jg
stos
mov
pop
out
push
repnz
push
insl
push
push
add
inc
aaa
push
jle
lea
mov
test
cwtl
insb
ds
aaa
stc
inc
into
movsl
sub
clc
add
pop
cli
mov
push
fs
jae
cmpsb
adc
bound
push
hlt
adc
in
push
xor
push
push
push
call
sbb
add
sti
fisubs
das
push
clc
push
scas
or
push
sbb
jmp
int
push
lea
inc
scas
xor
xlat
call
mov
cmp
xor
popa
fs
or
cld
stos
out
mov
mov
test
in
ret
cwtl
in
sub
enter
addr16
es
stos
and
xchg
frstor
insb
sbb
mov
mov
lods
dec
daa
dec
test
cs
cmp
out
std
outsb
cmpsb
or
push
ficomps
fdivp
pop
stc
scas
clc
lods
loopne
ds
loop
ror
push
mov
bound
jnp
xor
call
and
ja
shrb
lcall
pop
mov
push
out
les
ds
add
aaa
sbb
jle
cmp
mov
cmp
jl
lcall
das
in
fimuls
jmp
lods
or
test
sub
fs
stos
dec
inc
inc
cmp
xchg
iret
jbe
xchg
push
flds
jl
aaa
sub
mov
iret
decb
adc
mov
stc
in
mov
mov
fs
out
xor
nop
sbb
in
and
jg
push
mov
cmp
divb
push
ss
xor
jns
loopne
inc
andb
and
cmp
cmp
pop
dec
push
insl
cmpsl
push
addr16
fstpt
mov
sbb
js
aas
jno
or
push
pushf
pop
mov
int
repz
mov
lods
dec
ja
and
es
jmp
inc
lea
mov
lds
push
jge
pop
adc
cmp
mov
jno
andb
jnp
inc
sub
mov
nop
push
cmp
in
jle
dec
stos
pop
jmp
stos
mov
push
fisubl
lret
sub
add
sbb
sbb
in
lahf
sbb
call
xchg
popf
dec
jl
cmp
pop
enter
outsl
aas
dec
movsb
in
add
pop
jb
and
xchg
xchg
xlat
sub
iret
insl
cwtl
addr16
or
out
pop
jg
xor
pushf
outsl
jo
mov
test
jl
xor
cmc
loop
dec
and
and
pop
xlat
or
mov
psllq
out
imul
push
adc
push
pop
daa
fdivrl
push
out
test
add
inc
into
push
dec
push
inc
add
mov
out
push
faddl
mov
dec
imull
push
push
lods
pop
cltd
pop
in
scas
ss
frstor
movsb
sahf
xchg
cmpsb
mov
ja
mov
adc
repz
sbb
sub
fldcw
mov
xchg
rcl
lahf
outsb
fbld
lret
sbb
or
mov
sbb
xchg
nop
outsl
jno
jno
ja
push
and
cmpsl
loop
sbb
xchg
xor
aaa
pusha
enter
pop
add
inc
xor
cltd
jbe
push
mov
jns
xor
out
lock
sbb
or
outsl
xlat
xchg
enter
push
jns
inc
in
loop
mov
pushf
push
mov
in
test
lcall
pop
dec
add
mov
div
cwtl
or
repz
mov
mov
fistpl
les
sbb
loopne
std
out
mov
notl
int
jmp
outsl
lret
sbbl
cmp
mov
inc
pusha
arpl
ret
pusha
push
or
pop
orb
pushf
xor
addr16
adc
and
mov
jb
insb
sbb
jno
mov
pop
mov
sub
mov
lods
shlb
fldt
pushf
test
push
xchg
jmp
scas
add
dec
sub
enter
sub
mov
lods
sarb
push
pop
psllq
dec
mov
in
loop
or
xor
clc
jl
out
stos
sahf
stos
jge
and
test
inc
fs
inc
mov
mov
lret
and
addr16
push
inc
repz
inc
or
add
sbb
mov
or
loope
inc
in
sub
xchg
xchg
out
or
fdiv
lock
mov
xchg
pop
pop
jmp
xchg
xlat
jae
inc
pop
movsb
jnp
xor
test
test
pop
mov
xchg
or
pop
mov
jo
add
hlt
insb
sub
sbb
cmpsl
test
inc
sahf
scas
push
mov
loopne
fwait
js
inc
popa
inc
jge
xchg
xorl
es
inc
gs
out
mov
push
popf
cmpsb
enter
mov
daa
xchg
mov
xlat
into
mov
pop
sbbl
cmp
mov
sahf
repnz
hlt
pop
scas
push
mov
inc
arpl
test
into
imul
fs
mov
fld
lock
sub
pop
pop
jns
shll
push
pop
popf
lcall
inc
out
divb
repz
popf
mov
pop
and
shrl
dec
shll
out
cmp
push
mov
wrmsr
pop
aad
outsb
sarb
mov
add
aas
pusha
sub
pop
insl
test
rcr
ss
jge
mov
aad
ret
sub
mov
sbb
sarl
push
jb
xlat
arpl
xchg
mov
cld
fs
call
mov
mov
lods
xchg
mov
enter
pop
cmp
inc
pop
xor
int
cmp
sub
mov
push
scas
shrb
cs
fcomps
in
and
rorl
xchg
xor
add
and
int3
jb
clc
push
xlat
pop
outsl
in
outsl
jp
iret
pop
inc
xor
xchg
shll
mov
iret
repnz
arpl
divb
scas
fbld
push
mov
pop
cld
movsl
push
dec
add
add
sbb
ss
add
push
or
into
lds
je
or
and
jo
outsl
mov
mov
mov
sbb
pushl
add
jge
and
jae
jbe
xchg
je
in
jecxz
adc
and
xchg
sti
and
sbb
sti
sarl
test
mov
and
sbb
jns
adc
or
xchg
push
jp,pn
jle
idivb
sub
gs
xchg
xor
nop
add
push
jmp
ret
sahf
mov
pop
push
and
out
push
add
pop
mov
leave
dec
adc
dec
outsb
push
cwtl
sbb
mov
push
rcrb
mov
mov
ret
int3
xchg
or
or
fsubrs
jle
call
jb
or
ja
sbb
sbb
sub
aaa
aam
inc
xchg
outsl
stos
mov
loopne
jnp
pop
repz
adc
out
cwtl
cli
pushl
xchg
xor
clc
mov
lds
sti
jg
or
out
ds
mov
out
addl
pop
mov
sbb
push
fcoml
xchg
pop
subb
or
pop
bound
cmpsl
pop
jnp
push
and
loope
pushl
repz
xchg
xlat
push
mov
int3
add
push
pusha
inc
xchg
andl
lods
and
adc
sbb
imul
sti
rcrl
pop
sbb
pop
xchg
ljmp
add
cmpsl
popa
inc
popf
insl
push
mov
ljmp
xlat
or
jo
call
mov
in
loope
scas
xchg
mov
lds
mov
add
pop
and
pop
or
mov
xor
push
jmp
mov
andb
push
add
jmp
mov
aas
dec
int3
clc
or
and
fsubrl
sub
push
or
sbb
enter
fisttps
aas
sbb
sub
push
hlt
mov
mov
push
jo
add
xchg
out
xchg
fs
sub
insb
sahf
mov
xor
xlat
mov
es
lods
xor
pop
cltd
outsl
inc
push
stc
pop
or
or
std
lret
jo
mov
inc
lcall
mov
stos
outsb
testl
nop
jp
popa
jp
int3
pushf
fcompl
test
xor
inc
imul
in
xlat
jnp
aaa
mov
jge
cs
sahf
mov
mov
adcb
jge
aaa
xor
stos
std
pop
pop
sar
in
in
xor
inc
popa
push
fs
fmull
call
rorb
mov
and
lods
dec
or
insb
xchg
mov
arpl
movsl
jo
dec
movb
cmpsl
arpl
adc
shr
sahf
jg
sbb
push
push
xchg
imul
movsl
pop
popa
pop
xchg
rol
sub
dec
cmp
out
fdivrs
cli
push
adc
mov
jge
fdivs
lock
mov
and
aam
jl
fsubl
pop
loop
jl
jl
jl
add
outsb
imul
movsl
mov
mov
incl
icebp
fisttps
enter
cmc
popf
mov
cmp
les
inc
jbe
enter
add
push
fimull
add
test
into
lods
ror
in
jg
mov
xchg
loop
push
mov
mov
shrl
jnp
addl
dec
xchg
mov
dec
mov
mov
mov
jne
push
rcll
cltd
and
repz
jecxz
adc
das
adc
dec
sti
adc
in
stos
lea
push
pop
dec
push
sbb
pushf
cmpsb
xchg
mov
cmp
sbb
ss
sub
imul
pop
roll
loope
mov
ja
jl
push
xchg
rcl
cmc
inc
rorb
fimuls
pop
fcoms
outsb
jecxz
mov
mov
and
cmp
lock
jnp
fucomi
mov
adc
jns
sub
sbb
cmp
cld
fimuls
mov
cmpsb
mov
push
sub
add
mov
mov
outsl
movsb
inc
outsl
mov
jb
pop
xlat
js
mov
push
cmp
sahf
mov
and
mov
les
sub
sub
inc
mov
hlt
or
or
push
imul
divl
leave
jle
mov
cld
pop
sub
cmpsl
lret
int3
pusha
stos
arpl
int
xorl
cmp
js
repnz
adc
bound
and
mov
lret
adc
leave
lods
push
in
pop
push
xchg
xchg
out
fnsave
mov
xor
mov
dec
dec
popl
xchg
sub
je
mov
inc
mov
out
movsb
stos
jno
pop
or
xchg
insb
imull
movlhps
stos
lcall
std
jle
cmpsl
xchg
sbb
pop
sub
mov
inc
lahf
mov
xor
js
into
out
rclb
mov
insb
addr16
shrb
add
pop
mov
cmp
sbb
mov
push
cmc
sub
out
in
jbe
mov
into
das
jp
out
dec
inc
mov
frstor
andl
dec
ret
ror
mov
icebp
clc
stos
mov
ret
dec
out
mov
sahf
xchg
ds
lods
or
pop
shrl
mov
addr16
push
sarl
push
gs
addl
fimuls
adc
movsb
maskmovq
testl
movsl
in
clc
inc
sbb
add
test
insb
in
sub
sub
ds
mov
data16
and
test
lds
lahf
lods
cmpsb
jo
push
out
xchg
fdivrs
push
xlat
mov
clc
pushf
inc
push
mov
test
std
insl
push
jno
adc
inc
cmc
adc
xchg
add
jmp
mov
outsb
clc
lods
in
daa
decl
mov
or
pop
and
out
pop
loopne
add
inc
mov
or
mov
xchg
and
dec
fstpl
bound
sbb
mov
rcr
imul
testb
lods
xor
inc
pop
xchg
in
inc
scas
pop
in
sarl
lret
cmp
sub
push
addr16
pop
out
or
mov
push
fsub
push
je
mov
inc
popf
dec
ja
hlt
cmpl
ljmp
pushf
cmp
push
push
push
inc
sbb
mov
dec
scas
jg
or
sbb
jb
cmpsb
clc
mov
add
sahf
cmpsl
sub
inc
jno
or
fiadds
fwait
add
ja
cmp
out
sar
jae
rcrl
shrl
or
shll
mov
scas
idivb
adc
iret
in
mov
outsb
dec
dec
fidivrs
mov
xchg
mov
inc
add
mov
wrmsr
dec
hlt
or
add
inc
aaa
data16
cwtl
cs
in
mov
pop
sbb
adc
test
dec
ret
xor
outsb
in
jge
pop
cmp
xor
cmpsl
in
insl
les
xchg
push
push
sub
fs
fsubr
pop
movb
pop
gs
icebp
test
leave
popa
pop
jmp
pmulhw
jb
mov
outsb
dec
enter
loopne
xor
dec
push
pop
iret
adcb
adc
xorb
adc
jns
sbb
sti
nop
xchg
fildl
and
fwait
lret
or
movsb
das
jo
jo
arpl
aas
pop
arpl
lret
es
xchg
insl
cld
add
fs
mov
push
aaa
ss
dec
push
jecxz
test
sub
mov
pop
pop
xor
dec
push
mov
in
jp
jo
adc
mov
xchg
imul
ss
cwtl
dec
adc
jno
add
sbb
dec
adc
movsl
test
outsb
adc
test
dec
in
shrb
dec
mov
xchg
xor
je
into
dec
mov
or
xor
lods
add
adc
mov
mov
sub
test
push
not
idiv
pop
lods
xor
mov
push
sub
call
xchg
mov
pop
std
rorb
fidivl
dec
adc
ds
movsb
mov
sub
movsb
push
xor
scas
pop
mov
loope
bound
lods
inc
into
jle
lods
into
pop
test
mov
jo
ljmp
mov
hlt
mov
lock
pop
adc
les
imul
ss
daa
push
pop
cmp
fdivs
mov
dec
push
xor
pop
lret
inc
push
nop
popf
mov
sti
cmpsl
mov
mov
or
fisubrs
arpl
test
push
ret
mov
adc
push
mov
xor
push
aam
cmc
pusha
sbb
add
mov
xlat
mov
scas
xor
lret
sbb
jge
xchg
into
repz
stos
inc
int3
and
sbb
push
rclb
sub
push
dec
fdivrl
call
addr16
aad
dec
mov
call
jb
mov
icebp
cld
adc
sbbb
xor
or
sbb
pop
xor
mov
fisttpll
inc
int
repz
scas
sbb
push
cwtl
jnp
sbb
push
gs
sarb
cmp
mov
outsl
push
pushf
cwtl
mov
nop
or
add
test
pop
jns
dec
mov
dec
push
fwait
dec
lret
pop
movsb
push
mov
nop
dec
push
and
loopne
push
mov
push
mov
lock
repnz
xchg
sub
fsubr
mov
ret
cltd
ds
cmp
mov
pusha
stos
shlb
push
push
push
fimuls
pop
cmc
loopne
mov
add
push
dec
out
inc
adc
sub
mov
nop
aam
std
into
inc
loope
pop
cmp
push
push
mov
push
mov
clc
jge
movsb
fsubrl
inc
fcoms
das
enter
add
test
rorl
popw
shrl
test
mov
mov
setae
nop
dec
or
mov
push
mov
adc
or
xor
or
aad
sub
add
scas
sub
ret
ffreep
pop
xchg
push
movsb
es
outsb
sbb
jle
pusha
nop
lds
push
jns
adc
xor
sbb
les
test
int3
adc
sub
and
sbb
cmp
jmp
aas
jmp
jno
pop
jns
mov
aas
insb
mov
and
fisubrs
or
jbe
pop
mov
jb
lret
stos
sbb
in
push
out
adc
or
sub
sub
pop
fs
xchg
loopne
fists
xor
test
inc
movsl
mov
mov
or
es
mov
stos
imul
stos
enter
inc
pushf
pusha
inc
push
push
movsb
mov
mov
mov
ret
inc
aad
cltd
popf
ja
jb
sbb
inc
hlt
cmp
mov
pop
out
pop
mov
pushf
fiadds
jb
into
pop
xchg
cmpsl
sbb
pop
push
in
daa
pushf
es
mov
add
subl
cli
mov
inc
add
into
add
repnz
rclb
jecxz
nop
pop
aas
mov
push
sub
adc
cmp
pop
popf
outsl
cmpsl
xchg
int
xchg
popa
mov
lock
or
sub
xor
dec
inc
sbb
fwait
cmp
cmp
xor
out
fimull
add
mov
in
hlt
lea
jmp
push
ja
fucomi
mov
shrb
pop
add
jne
adc
pop
or
push
mov
xchg
into
inc
push
mov
sub
mov
cmpsl
sbb
bound
insl
mov
xchg
inc
lea
out
push
xchg
testl
test
or
test
add
sbb
add
pop
pushl
push
dec
popa
dec
ljmp
xor
or
les
ficoml
mov
cli
sbb
std
adc
inc
pop
movsl
sahf
dec
outsl
aam
mov
xchg
mov
pushf
ss
mov
jb
add
xor
xchg
adc
lds
xchg
in
fisubrl
sahf
mov
inc
xor
jecxz
cmpsb
xchg
push
mov
or
mov
pop
and
fistpl
push
mov
in
mov
pushf
sub
jne
cmp
cld
sahf
ds
cmp
dec
xor
ficomps
sahf
out
jmp
hlt
pop
out
inc
inc
test
daa
clc
aaa
test
lea
es
pop
outsb
push
sbb
sbb
cmp
push
cmp
int
ret
iret
push
push
jge
addr16
loopne
ss
push
fistps
xor
in
pop
xor
adc
fisttps
mov
popf
scas
inc
jns
pushf
dec
jbe
cmp
lret
outsb
das
or
flds
js
iret
in
mov
push
stos
rorb
bound
popa
decl
out
lock
adc
and
lcall
jp
sbb
mov
xchg
lret
xchg
pop
lahf
sahf
or
cmp
stos
into
dec
add
jg
dec
cltd
enter
cmp
mov
cmc
xor
out
jle
cmp
cs
cmp
imul
xchg
jp
or
popf
dec
xchg
dec
into
add
mov
mov
xchg
test
jmp
cli
adc
pop
and
fsqrt
or
mov
test
lods
add
outsb
sbb
sbb
ficompl
lcall
xor
lock
mov
inc
push
jmp
xor
xchg
push
jns
dec
pop
subb
fmull
dec
add
stc
and
pop
xchg
mov
xchg
das
stos
movsl
jecxz
cmp
rclb
and
push
push
adc
pop
jb
pop
and
sahf
jo
adc
gs
and
in
sub
in
sbb
inc
iret
lcall
in
xor
jo
repnz
pop
pop
std
lock
mov
dec
jne
cmp
push
and
lock
stos
jmp
aaa
mov
leave
jg
das
sub
mov
lock
sbb
minps
dec
lods
stos
shrl
pop
jns
dec
aas
mov
aaa
sub
cwtl
jo
aas
adc
pop
mov
fcoms
jp
loop
dec
leave
int3
cmc
or
xor
or
xchg
call
cltd
imul
xchg
insb
movsb
dec
cmp
test
jae
bound
push
leave
sarb
and
inc
ficoms
xor
add
faddp
adc
aas
push
jnp
and
mov
movsl
iret
leave
push
push
add
sahf
mov
cmp
fdivrs
mov
fsubs
ret
jae
popa
movsl
mov
jmp
decb
jb
jb
in
fisubrs
fwait
ss
imul
sbbl
mov
xchg
dec
ljmp
jmp
rorl
jns
pop
mov
test
out
mov
mov
inc
mov
jp
inc
mov
leave
push
mov
xchg
pop
aaa
xor
jge
orb
div
mov
les
sahf
xchg
in
pop
das
rol
and
divl
jle
lahf
dec
and
testl
into
fcoms
jg
test
adc
sti
jle
sbb
sarb
sub
sbb
lcall
aad
and
imul
xchg
dec
or
and
and
and
adcb
lret
gs
xchg
jmp
icebp
xchg
adc
xchg
fwait
test
add
add
mov
dec
push
mov
mov
xor
xor
fists
insb
or
xlat
pop
pop
mov
jne
adc
dec
daa
jg
dec
xor
js
adc
loop
fbld
dec
pop
mov
xchg
repz
les
les
std
jne
lods
mov
pop
adc
mov
icebp
dec
cltd
add
adc
mov
mov
inc
jmp
into
cmpl
push
addr16
aas
jle
outsb
or
mov
inc
jecxz
pop
bound
xlat
xchg
repnz
adc
fistpll
das
out
aas
jmp
addl
les
idivl
adc
mov
mov
popa
pop
scas
mov
sbb
xor
push
cmp
mov
mov
shlb
add
xchg
xor
add
push
adc
in
push
test
dec
sbb
movsl
push
jle
sbb
lea
jb
mov
loop
mov
mov
push
mov
mov
loop
ficoms
cwtl
outsb
and
test
fwait
push
inc
aam
and
sbb
sti
inc
test
or
mov
jge
out
jae
xor
daa
jo
daa
xor
xor
rcrl
clc
inc
jg
mov
mov
mov
test
aas
daa
or
pop
mov
lea
sbb
mov
dec
jecxz
cs
inc
xchg
shlb
loope
push
xor
outsl
sub
xchg
mov
insb
jnp
scas
or
push
loope
movsl
add
mov
cmp
push
ja
loop
mov
xchg
idivb
cltd
add
xchg
mov
out
je
in
fdivs
xchg
jns
cmp
lock
in
cmc
pop
sbb
sarb
add
pop
or
pop
or
add
pop
mov
nop
nop
test
fisubs
pop
inc
movsb
jg
inc
fcomps
push
or
mov
mov
lock
and
testl
clc
push
fs
xchg
sub
sub
push
out
fs
aaa
jecxz
push
jp
dec
pushf
mov
inc
xlat
and
sbbl
mov
mov
sbb
mull
pop
xor
bound
nop
jns
xor
ss
xchg
sbb
pop
out
sbb
xchg
add
subb
fistpl
push
clc
adc
ljmp
xchg
hlt
xor
push
cwtl
sbb
sbb
outsl
das
adc
sbb
xor
jp
sarl
jne
nop
subl
bound
daa
sbb
jg
fdivs
mov
inc
mov
mov
push
push
mov
push
jp
data16
je
out
mov
cmp
jo
loope
insb
sub
or
jecxz
sbb
inc
data16
xor
dec
outsb
andl
cli
push
adcb
add
mov
and
int
push
popa
stos
int
loop
fmulp
push
test
cmp
jns
hlt
ljmp
cmp
sbb
mov
jae
cmpsb
inc
and
mov
cmpsb
hlt
sbb
cmp
jae
mov
jg
mov
in
movl
pop
pop
lea
adc
inc
lds
mov
or
cmc
mov
lods
and
dec
dec
out
mov
dec
gs
xlat
sbb
push
out
js
sahf
adc
std
mov
xchg
popf
adc
sbb
inc
add
add
lcall
orb
insl
stc
jne
in
cmp
jnp
push
enter
add
dec
cmp
and
enter
hlt
mov
ret
ja
dec
xchg
sub
add
sbbl
ds
sti
std
xorl
xor
inc
push
push
pop
pop
jmp
test
movsl
cmp
and
lcall
jbe
shl
jg
and
push
fisttpll
rcrl
hlt
scas
inc
mov
pop
lods
push
mov
or
push
into
mov
in
cmp
test
pop
add
or
divl
lea
jmp
into
popa
add
sbb
jnp
xchg
push
jl
cld
jle
jae
mov
mov
test
in
out
std
adc
add
mov
xor
loop
sub
out
and
in
pushf
clc
jae
and
inc
jbe
scas
rclb
shr
loope
out
push
dec
movsl
adcl
sub
sbb
lret
stc
test
cmp
jns
dec
cmpsb
loop
mov
repnz
mov
xor
xor
mov
xchg
movsb
in
pop
enter
push
xchg
adc
push
sbb
lret
repnz
cmpsb
fdivrs
xchg
sbb
mov
sbb
repnz
iret
das
jb
xchg
mov
xchg
cli
add
or
lret
mov
mov
push
mov
push
jae
mov
insl
jmp
adc
fisubrs
push
pop
add
cmp
lea
mov
dec
push
in
call
flds
iret
das
xor
dec
sti
push
popa
xchg
mov
outsl
push
inc
daa
push
xlat
out
scas
enter
js
les
roll
insl
cld
out
imul
shrb
push
xor
in
lds
shlb
jnp
mov
sub
sbb
cmpl
cmpsl
cmp
or
dec
sar
aam
or
call
scas
das
sub
inc
lea
mov
lret
xchg
lods
inc
or
aad
sub
xchg
mov
stos
insb
cmc
dec
add
movsl
sti
sbb
lea
xor
fdivl
in
pop
pop
or
sub
loopne
cmp
int3
or
sub
dec
mov
imul
inc
mov
iret
lret
adc
scas
mov
mov
lock
cmp
mov
leave
mov
mov
hlt
cli
inc
imul
call
test
jb
cld
mov
mov
jl,pn
mov
int
mov
rorl
xlat
jp
das
fildll
mov
adc
jns
cwtl
add
xor
loope
sbb
ljmp
xchg
cmp
jecxz
and
jg
rsqrtps
adcb
sub
adc
jge
jecxz
fwait
adc
outsl
and
xor
fwait
xor
mov
stos
pop
mov
pop
mov
int
nop
loope
lret
mov
mov
mov
pop
mov
lahf
insb
mov
and
jbe
xor
jns
in
sub
push
push
std
pop
and
jmp
pop
cmp
das
sub
stos
daa
int3
cmp
xor
ficomps
lds
jge
pop
sbb
jmp
add
jmp
jne
sbbb
imul
add
shl
mov
pop
inc
shlb
dec
cmpsb
cltd
inc
leave
addb
out
xor
xchg
dec
hlt
shll
popf
shll
call
cmc
cltd
fwait
push
rorl
stos
jmp
ret
xchg
dec
push
push
mov
sub
lcall
sbb
loopne
sahf
xchg
js
stc
inc
mov
push
cmp
and
pop
dec
mov
jne
dec
lds
js
xor
pop
push
out
nop
sbb
sbb
lods
mov
cmc
lcall
mov
or
int
cmp
mov
lret
xchg
fxch
inc
ficoml
pop
xor
dec
dec
pop
push
gs
add
insb
stos
mov
mov
xchg
and
jmp
sbb
sub
rdmsr
pop
add
mov
adc
sbb
mov
jno
sbb
mov
inc
xor
cmp
or
add
popf
hlt
dec
xor
jno
sbb
fcompl
jl
std
pop
lret
jge
mov
fstps
mov
jmp
lods
test
push
pushf
aaa
popf
enter
addr16
ljmp
imul
dec
in
sbb
push
inc
stos
mov
sarb
mov
pop
mov
loop
int
inc
enter
outsb
pusha
insb
fwait
pusha
cmp
pop
js
push
mov
mov
jge
popa
stos
loopne
mov
or
mov
cld
jmp
in
jmp
out
cmp
int3
mov
xchg
dec
push
mov
lret
popa
mov
cwtl
mov
push
adc
mov
jle
insb
fisttps
sbb
xchg
inc
je
jb
inc
notb
in
imul
cmp
pop
sub
ss
or
ficoml
int
cmp
enter
lret
adc
dec
sbb
mov
cwtl
mov
add
lods
das
fstps
and
xorb
push
and
std
stc
mov
xchg
pushf
ss
jbe
sbb
in
scas
int3
bound
add
add
repnz
adc
imul
outsb
mov
xor
xor
xchg
sub
pop
cmp
pop
arpl
test
nop
rcl
mov
sarb
pop
pop
enter
cmp
in
sub
jmp
dec
ror
daa
mov
jl
movsl
and
jmp
cmp
pop
cmp
das
xor
pop
inc
dec
xchg
dec
rcll
aam
pop
mov
sbb
pusha
mov
jl
movsb
sub
stos
cs
dec
xor
rolb
sbb
sti
ficomps
leave
xchg
lret
mov
test
orb
xchg
adc
push
or
lahf
lret
aad
mov
push
xchg
lret
insb
pop
not
movsl
in
adcb
adc
xor
fstl
pushf
or
jnp
jns
sti
jecxz
lea
add
call
jmp
push
in
lcall
or
mov
pop
mov
fidivrs
pop
and
and
into
mov
repz
repnz
pop
je
xchg
push
lcall
add
and
pop
push
add
add
pop
and
jmp
xchg
in
dec
fstpl
dec
lret
inc
andb
jmp
fsts
mov
xchg
sbb
xchg
pop
rolb
xchg
andb
mov
xchg
inc
mov
sarl
shrl
mov
sub
out
xchg
jo
or
sahf
imul
pushf
clc
cwtl
cld
dec
mov
out
inc
jle
pushf
push
and
and
pop
mov
fistpl
sbb
jge
cltd
cmp
push
arpl
cmc
adc
lahf
mov
inc
jo
in
je
shlb
lahf
insl
outsl
lods
pop
push
lods
mov
mov
sbb
fwait
fwait
shrb
fidivl
fcomps
out
adc
iret
cltd
add
pop
lea
mov
cld
sahf
inc
pusha
push
mov
lea
sub
mov
dec
imul
adc
mov
in
sbbb
pop
jmp
mov
ficoml
and
xchg
or
xor
fidivrs
jecxz
sahf
repz
ret
clc
jmp
mov
bound
jl
ret
dec
pop
add
les
jle
mov
lret
hlt
roll
movsl
cmpsl
xor
shll
divl
loop
orb
mov
mov
mov
adc
outsb
aam
sbb
push
jp
mov
iret
shrl
or
pop
aad
daa
mov
data16
iret
sbb
push
mov
sub
icebp
sub
jge
mov
fistpl
sbb
jno
inc
jp
subb
shr
and
movsl
in
data16
jbe
hlt
push
ret
sub
push
fnstenv
pop
cli
rclb
insl
xor
add
movsl
out
cli
sbb
xchg
mov
or
shl
pop
sbb
adc
and
xchg
mov
lret
pop
pop
test
mov
fstpt
repnz
popf
inc
test
xchg
and
add
mov
mov
les
cltd
adc
cli
in
jb
and
xlat
mov
iret
popa
and
push
lods
fs
movsb
cmp
or
dec
cwtl
adc
loopne
mov
shl
shl
enter
sub
test
adc
dec
push
add
enter
fistpl
in
pop
xlat
push
mov
leave
ja
in
mov
stos
jbe
scas
cs
push
insb
add
mov
inc
f2xm1
cmpsl
jno
call
stos
fucom
out
jno
or
push
fdivs
mov
add
shl
aaa
dec
dec
add
jbe
xor
movsb
mov
cld
lret
std
movsb
in
cmp
jno
out
push
inc
push
rolb
psraw
sbb
in
ffreep
cmp
fld
xor
call
stos
sbb
inc
fisubrl
repz
pusha
xchg
pop
scas
xchg
shrl
xchg
loope
inc
jbe
test
sub
jl,pt
push
xor
cmc
xor
mov
pop
sbb
loopne
xor
movb
xchg
scas
sbb
cmc
pop
lret
movsl
popf
cmc
mov
inc
ret
push
pop
shll
pop
jb
bound
out
sbb
sbb
out
inc
das
aaa
adc
je
pop
sbb
arpl
sub
adc
push
stos
popa
mov
popa
jne
xchg
popa
inc
cmp
frstor
ljmp
push
es
or
inc
out
cli
push
mov
dec
and
scas
idiv
rcl
adc
lods
xchg
shll
popa
jnp
cmp
mov
popf
or
int
mov
rorl
push
mov
jo
xor
pop
mov
gs
add
arpl
fnsave
testl
lret
sbb
aad
mov
divl
mov
cmp
fwait
sbb
jns
xlat
fsubrl
aad
xchg
ret
scas
add
sbb
xchg
cmp
xlat
popa
out
in
mov
adc
loope
mov
or
push
je
in
cs
sub
shrl
mov
insb
cmp
inc
iret
pmaddwd
and
adc
xor
lock
inc
loop
jns
push
jb
pusha
je
jl
sub
inc
dec
cmc
pop
mov
cmpb
es
loopne
adc
add
scas
mov
fistpl
addr16
ss
rcll
adc
cmp
pop
cmc
loop
test
xchg
cmp
aam
mov
xchg
test
mov
add
or
loop
mov
jle
xor
jb
fstpl
movnti
cmp
mov
or
and
sbb
mov
dec
xor
add
and
jnp
cmc
and
inc
out
shrl
and
ljmp
lock
popa
adc
int3
repz
cmpsl
pop
jb
mov
insb
inc
es
xor
mov
ret
ja
rcrb
and
cs
jmp
sub
sub
or
in
xchg
decb
adc
or
pop
bound
rcll
jecxz
jmp
outsl
stc
test
jo
ljmp
and
in
aad
loop
adc
and
inc
loop
test
and
arpl
jp
sbb
sub
or
cltd
inc
ja
sub
arpl
pusha
les
ret
xchg
xchg
pop
lahf
imul
pop
pop
fwait
lock
cmp
lea
jbe
loop
arpl
cwtl
mov
sbb
xor
stc
jmp
mov
stc
sub
jp
lahf
scas
dec
fdiv
cmpsb
leave
pusha
imul
dec
clc
ja
aad
push
mov
ljmp
jle
xor
test
int3
cmpsl
sub
mov
test
pop
sub
mov
mov
pusha
cmpb
xlat
mov
pop
inc
push
rdtsc
and
out
sbb
out
cmp
cli
cmp
dec
mov
les
imul
cmc
out
test
addr16
jle
into
inc
ja
loopne
lcall
or
lods
sub
jl
pop
stos
gs
sbb
jnp
inc
adc
and
jg
mov
imul
mov
add
push
test
int
cmp
xor
push
inc
push
xchg
or
mov
std
icebp
and
jg
sbb
and
insl
and
xchg
xchg
jmp
or
add
pop
in
jbe
pusha
lds
cmp
std
fs
push
jle
push
dec
jno
arpl
xor
imul
jle
pop
dec
fidivrl
cltd
add
and
pushf
fisubrs
cld
lcall
insb
fsubrp
inc
pusha
or
and
repz
sub
xchg
push
pop
mov
sub
jnp
mov
loope
bnd
repnz
push
jmp
mov
test
xchg
sub
mov
xor
inc
adc
pusha
data16
mov
lret
lret
cltd
pop
and
pop
repz
sub
inc
inc
stos
xor
cs
mov
mov
test
pop
cld
add
sub
sbb
iret
pop
subb
enter
push
outsl
je
adc
push
or
aaa
lcall
mov
imul
in
sub
push
inc
xchg
xlat
repz
sbb
jno
fsub
into
mov
rcr
cmp
ljmp
lret
and
aaa
in
xlat
icebp
push
xor
int3
lods
arpl
cli
push
lret
sbb
and
mov
dec
sbb
xor
inc
into
sbb
int
jns
mov
push
sub
push
mov
and
and
scas
jb
shlb
addb
and
xchg
xchg
fucomp
in
idivl
mov
insb
iret
mov
dec
hlt
pushl
mov
stos
fdivs
jb
inc
and
pop
cmp
lahf
mov
fcmovnu
adc
je
orl
push
cmpsl
loop
js
inc
xchg
ret
pop
mov
lahf
ja
es
imul
mov
popa
std
lcall
cmp
out
data16
pop
fstl
ds
fdivrp
in
push
hlt
popf
and
jge
test
cmc
push
inc
popf
cmp
mov
mov
shl
inc
sbb
push
xchg
inc
sub
out
and
xor
pop
mov
jbe
inc
push
mov
and
dec
shll
inc
in
xlat
push
in
icebp
mov
insb
cmp
mov
loop
sahf
pop
cwtl
imul
inc
mov
mov
loopne
movsb
in
imul
out
mov
outsb
sarb
jbe
jl
outsb
bound
or
lret
sub
out
xor
dec
inc
repz
in
sub
sarl
fcoml
push
rcll
xchg
scas
insl
subb
push
xor
fsubr
sar
iret
shll
adc
fildl
dec
fdivs
ret
fst
in
or
adc
sarl
push
xchg
repz
jno
rolb
ret
adc
ss
sub
sbb
sar
xchg
sbb
jecxz
shlb
loop
and
stos
inc
aaa
lret
loop
or
sbb
dec
test
jae
lock
fnstsw
cmp
add
lahf
mov
imul
sub
dec
cmp
aad
xchg
in
clc
pop
cwtl
lea
push
lods
xor
outsl
sbb
cltd
dec
stc
in
add
pop
xchg
pop
gs
repnz
jo
loop
and
stos
xchg
adc
jnp
or
shll
cmpsb
imul
cmp
rorb
xlat
pop
out
cmp
sub
xor
xchg
pushf
inc
sbb
xchg
leave
nop
jge,pt
lret
jns
loop
mov
pop
arpl
unpcklps
insl
pop
adc
notb
enter
test
sahf
repz
adc
stos
xchg
stos
or
mov
insl
mov
or
add
dec
add
lret
loop
lods
xor
bound
sbb
pusha
mov
insl
lods
stos
inc
mov
add
fildll
movsl
dec
sbb
loopne
mov
notl
mov
sar
jns
pop
push
push
add
xchg
push
js
cmp
shrl
pop
cmp
cmp
stc
xor
adc
test
jmp
mov
push
pop
pop
xchg
pop
pop
je
stc
or
adc
add
sbb
pusha
jns
test
and
dec
and
dec
adc
lahf
nop
or
mov
sbb
in
cltd
mov
daa
sub
jne
xchg
cmc
pop
push
inc
mov
or
xchg
adc
mov
rorb
push
sbbl
pop
xchg
fcmovb
sarl
mov
and
out
insl
jbe
movsb
iret
mov
push
aaa
mov
call
xchg
mov
es
xchg
sbb
notl
jnp
push
push
aad
int3
push
imul
mov
insl
call
pop
add
icebp
xor
xor
push
add
movsl
sub
xlat
fldenv
mov
sub
add
jnp
enter
mov
jmp
std
stos
int
insb
movsb
loope
sub
dec
cmp
push
je
dec
inc
mov
jmp
testl
or
xor
je
mov
ljmp
imul
fadd
push
dec
loopne
sub
arpl
gs
xchg
incb
cmp
paddd
cmp
dec
adc
je
mov
mov
scas
mov
xlat
jno
jae
dec
jp
in
bound
and
cmp
push
adc
jbe
out
inc
inc
lods
ds
adc
dec
jne
xor
pop
cmp
mov
inc
sub
cmp
bound
nop
lcall
pop
dec
jg
lahf
jmp
roll
xor
jbe
insl
ljmp
sbb
or
mov
test
mov
sbb
test
js
or
arpl
aaa
push
adc
adc
arpl
in
push
hlt
hlt
push
jnp
sub
inc
lahf
cmp
mov
xor
fwait
push
push
adc
cmp
imul
mov
sarb
movsl
pop
imul
sub
or
scas
dec
pop
ffreep
out
fstpt
fcmovb
jb
call
xchg
push
movl
cmp
icebp
pop
mov
add
dec
stc
jb
jmp
sub
xchg
mov
and
xor
dec
popa
mov
rorb
pop
icebp
cmpsb
mov
mov
push
xor
pop
lods
stos
fcmovnbe
mov
pop
insl
push
adc
push
imul
test
mov
nop
jecxz
dec
enter
ret
in
mov
pusha
mov
jns
into
jle
popf
inc
jno
dec
add
adc
fadds
and
out
clc
scas
mov
ret
sahf
and
pop
cltd
insb
mov
fdivs
mov
iret
or
push
cmp
push
andb
jnp
es
data16
mov
shlb
mov
dec
mov
ja
pop
xchg
dec
pop
xor
cld
adc
dec
pop
mov
jb
mov
shl
xlat
sub
lea
gs
gs
out
push
jo
pop
inc
sbb
and
cltd
push
lods
ljmp
xchg
adc
shll
add
add
xor
int3
rcr
jbe
cmc
int3
insb
inc
cmp
sarb
jp
imul
in
add
adc
fcmovbe
sbb
cltd
inc
lods
lret
repnz
and
icebp
cmp
lods
add
add
cld
fwait
loopne
je
push
add
push
cmovge
add
data16
data16
lods
add
jle
cmp
in
mov
std
out
outsl
sti
dec
fld
sbb
pusha
mov
test
mov
pop
pcmpeqw
sub
xchg
push
pusha
stos
jo
dec
or
adc
or
mov
js
pop
int3
mov
xor
call
xor
nop
dec
dec
sar
aaa
inc
dec
nop
dec
xchg
adc
sub
cmp
add
xor
lods
inc
push
dec
movsl
jge
jnp
lock
test
push
movlps
cmp
jo
scas
ljmp
dec
rolb
sub
es
fsubrs
xor
pop
cld
popa
push
sub
jmp
push
push
fwait
pop
jns
fstpl
dec
mov
outsb
mov
add
cmc
sub
cmc
outsb
xchg
lahf
stos
jle
stc
or
scas
and
in
pop
in
inc
icebp
mov
les
pushf
paddusw
js
mov
sbb
cmp
dec
sub
mov
and
mov
aas
lods
aas
loopne
int
and
fldl
jecxz
cmpsb
mov
dec
outsb
pop
mov
out
out
adc
pop
cmp
fwait
std
push
adc
icebp
pop
movsb
insb
xchg
std
xchg
int
ss
mov
pop
cld
data16
mov
roll
inc
loopne
inc
lods
outsl
fisubs
div
cltd
cmpsl
ljmp
jae
mov
lock
push
pop
ljmp
sbbl
mov
or
mov
mov
ja
test
mov
cs
cwtl
aam
int
arpl
or
decb
xchg
sbb
popa
lahf
mov
inc
push
add
dec
dec
js
test
adc
fdivl
out
sub
aaa
scas
mov
mov
dec
pop
mov
jp
inc
testl
xchg
xchg
in
int3
xchg
ret
dec
lea
fs
es
push
jnp
xor
gs
pop
fcompl
pushf
jo
ljmp
fstpl
mov
pop
or
imul
les
mov
mov
mov
arpl
es
xchg
mull
and
push
adc
ss
dec
loop
inc
movsl
mov
aad
sub
pop
test
xor
aaa
into
into
dec
xchg
xchg
push
mov
fs
int
sbb
lret
jmp
xchg
rcll
sub
jns
xorl
adc
out
push
inc
pop
pop
push
inc
sbb
inc
xchg
mov
xor
push
dec
bound
outsl
xorb
jp
movsb
mov
mov
repz
inc
aam
dec
cmpb
les
out
mov
ja
mov
dec
xchg
jge
call
mov
pop
aas
js
push
dec
or
dec
or
xchg
rorl
jg
mov
fistpl
inc
testb
push
int
and
insb
movsl
cmp
mov
das
test
adc
pop
int3
fldcw
mov
pop
ja
mov
add
std
shl
lret
pop
out
fldl
add
popl
fidivl
mov
std
pop
test
cmp
cmp
jno
and
cmp
jno
je
enter
push
bound
shlb
sub
mov
pop
inc
into
or
dec
xor
rcrl
repz
jae
inc
in
jp
jg
or
or
mov
push
cmp
scas
repnz
sub
mov
popl
pop
push
cmp
loope
and
dec
test
mov
lea
dec
int3
aas
addr16
pusha
mov
inc
loop
lret
xor
fcomi
es
mov
jle
fistps
dec
cmpsb
push
cmp
and
fldl
pusha
add
movsl
ret
jle
xor
cs
push
adc
loopne
sub
sub
in
mov
mov
jbe
push
jae
and
sub
hlt
out
mov
nop
inc
call
je
mov
xchg
adc
aaa
mov
push
fwait
cmpsl
jns
mov
fwait
sbbl
mov
in
or
push
outsb
arpl
xchg
jbe
testl
mov
jmp
cwtl
nop
call
out
xor
mov
das
shll
jne
jg
or
fadds
out
notl
mov
xchg
push
ror
push
xchg
add
jecxz
cmp
pop
adc
mov
push
imul
pushf
dec
in
ss
int
aam
cmpsl
nop
inc
loop
cmpsl
pmaddwd
es
mov
mov
repnz
mov
mov
pop
mov
das
ret
sbb
cld
or
mov
enter
daa
icebp
sbb
xchg
inc
xor
out
out
in
push
enter
lcall
push
inc
in
xor
add
cmpsb
scas
clc
add
cmp
enter
pop
popa
inc
pop
ds
inc
fstpt
push
imul
lods
sbb
xor
sbb
push
movsb
jo
test
mov
pop
cmpsl
mov
popf
and
lahf
shl
scas
cmp
popf
adc
add
sub
je
jp
std
pop
cs
mov
inc
movsl
inc
pop
inc
mov
jo
dec
cmovae
pop
ret
fwait
jns
in
test
cmp
call
push
sub
xorb
and
or
pusha
fcomps
push
inc
clc
xchg
popa
cmpsb
or
nop
out
cmp
fwait
adc
data16
adc
mov
or
xchg
add
mov
xchg
mov
int
lock
adc
imul
mov
aam
aaa
fdivs
mov
cmpsb
cmp
sbb
mov
fwait
and
or
xchg
mov
in
push
inc
sub
popf
bound
mov
or
testb
test
pop
negb
cmc
jle
dec
xchg
repnz
dec
test
inc
imul
test
int
push
stos
dec
cmp
popa
sub
ret
repnz
push
mov
ja
push
inc
push
out
pop
sarl
jnp
inc
int
dec
push
and
adc
jl
push
stc
and
or
push
push
mov
mov
mov
aad
out
aad
or
daa
sub
pop
dec
enter
sub
jmp
js
out
cmp
add
insl
mov
jl
int3
jecxz
cmp
js
mov
hlt
loope
jle
inc
fidivs
iret
gs
enter
push
lea
fldl
aaa
dec
cmp
icebp
cmp
xchg
movsb
jmp
lret
add
dec
divb
std
loopne
rcl
das
lahf
dec
mov
xchg
or
movsl
jle
cmp
ljmp
ret
or
sbb
ret
inc
jo
push
lds
hlt
lcall
lods
fdivl
xchg
pop
loopne
mov
add
cwtl
bound
pop
add
and
sbb
gs
call
test
inc
clc
test
sub
dec
clc
imul
subb
add
fildll
sub
adc
addl
sbb
push
push
add
xchg
mov
xchg
xchg
mov
in
es
loope
jo
cli
xor
jo
add
std
push
lock
and
aaa
insb
add
mov
jg
movsl
test
add
loopne
xor
mov
jb
xchg
dec
push
or
jae
repz
out
rclb
mov
mov
xchg
sbb
xchg
cmp
jb
mov
mov
xor
shlb
mov
dec
sbb
jns,pt
aas
nop
jle
cmpsb
sbb
arpl
adc
cmpl
push
mov
les
shrb
call
insl
xorb
out
and
ret
pop
push
mov
adc
lock
mulb
out
nop
pop
inc
ljmp
jnp
sub
scas
push
mov
pop
jle
pop
adc
and
pop
mov
fwait
jg
add
or
scas
mov
loop
ja
sub
inc
sahf
push
lcall
jp
fsubrs
lret
repz
mov
stc
pop
jle
aas
mov
sbb
mov
mov
out
imul
je
rcl
inc
mov
mov
repnz
xchg
fistpll
rclb
dec
mov
sarl
push
adc
hlt
adc
fdivl
lcall
addb
lods
test
jno
xlat
push
sub
loope
roll
sbb
push
cwtl
xlat
jbe
arpl
test
js
int
cmp
ja
lcall
lock
mov
jns
mov
je
out
mov
negb
jp
fsts
mov
pop
dec
popl
sub
add
lahf
lret
aam
mov
mov
popa
sub
sub
jne
pop
xchg
push
repz
pop
push
in
aas
mov
fs
lahf
jnp
mov
push
or
cmp
sub
out
hlt
pop
lret
mov
adc
ret
test
mov
mov
cmpb
shr
pop
dec
in
push
sub
roll
jecxz
fs
shlb
dec
xchg
stc
pop
push
adc
push
mov
into
inc
je
pop
inc
mov
mov
mov
push
cmpsl
mov
bound
dec
mov
jp
add
pop
jge
pop
jp
ljmp
mov
mov
push
arpl
add
pop
cs
sub
insl
jnp
je
mov
stc
fnstcw
shrb
aaa
lret
enter
cli
add
push
in
cli
je
scas
sbbl
or
fstl
test
sti
add
je
iret
popf
cli
xor
pop
mov
rcrb
imulb
inc
aas
mov
sbb
call
test
push
xlat
adc
xchg
ljmp
adc
adc
dec
jb
xchg
test
mov
xlat
push
jns
out
push
sbb
sub
sub
mov
aas
or
stos
mov
fisubrs
cld
xchg
jle
cli
jo
test
out
jns
add
test
xor
cld
pushf
outsb
mov
cmpl
push
or
mov
imul
cmp
imul
mov
xor
pop
mov
lret
adc
out
mov
call
xchg
cld
lcall
cltd
pop
push
test
sti
pop
ret
mov
xchg
out
sbb
adc
push
fld
jg
sbb
lcall
xor
pop
cmp
stos
pop
jle
cmpsb
mov
sahf
je
in
mov
mov
imull
jns
movhps
xchg
xor
jg
outsl
mov
pop
leave
cmc
mov
popf
sbb
push
push
xchg
dec
lods
push
pop
pop
jge
int3
fldt
sbb
mov
mov
pop
or
pushl
cltd
punpckldq
inc
test
cmc
jns
pop
push
xchg
mov
les
sub
push
xor
movsb
dec
mov
leave
je
adc
lods
adc
mov
sbb
xchg
fldl
lods
add
rolb
inc
shll
mov
push
mov
pop
rorl
fists
push
xchg
push
negb
mov
mov
lds
inc
das
inc
cmp
inc
xchg
mov
js
mov
dec
in
and
and
stc
inc
cmp
test
mov
add
ljmp
movsb
je
scas
call
push
dec
popf
inc
lret
fisttps
adc
fsubp
mov
cmp
jnp
addl
and
test
mov
test
cli
mov
aaa
popf
aad
out
mov
aam
das
or
and
inc
push
loope
add
push
push
mov
adc
je
imul
jns
mov
repnz
jge
dec
inc
dec
mov
push
sti
mov
and
hlt
shll
aam
pop
ror
xchg
or
loopne
add
stos
dec
adc
cmp
pop
icebp
and
in
cltd
mov
mov
loopw
or
imul
imul
mov
xlat
stc
scas
idivb
in
lea
pop
and
add
stc
nop
adc
stc
push
jae
lret
mov
repnz
inc
fwait
mov
sub
xorb
jb
mov
test
outsl
push
pop
inc
sbb
cmp
and
adc
popa
pop
aas
andnps
mov
or
fiaddl
jmp
shl
mov
pop
pop
test
in
int
xor
push
xchg
test
push
imul
push
jo
test
pop
jg
adcb
sbb
jb
pop
icebp
cmpl
fidivs
lret
enter
pop
jne,pt
push
outsb
dec
pop
in
jg
mov
outsl
sub
and
fisubrs
cmp
sbb
fldcw
and
xor
and
stos
ret
shlb
rcrb
popf
mov
adc
or
lcall
mov
xchg
out
and
mov
lret
fiaddl
out
mov
insl
shlb
or
dec
sbb
pop
adc
insl
mov
shlb
sub
xor
mov
leave
rorl
pop
pop
add
shrl
out
inc
lcall
pop
adc
aaa
xchg
xchg
mov
mov
inc
insl
outsl
mov
push
loope
adc
inc
pop
stos
shll
js
dec
cmpsl
outsl
imul
lcall
ret
dec
arpl
mov
cmpb
mov
cmp
pop
lret
add
push
mov
and
out
popf
jl
jno
out
inc
xor
or
mov
repz
sub
cmpsb
flds
pop
lret
sti
cltd
cwtl
lods
insl
adc
in
mov
insb
push
jne
rorl
scas
int
fcmovb
push
in
cmp
adc
mov
jns
pop
adc
xchg
pop
sbb
in
push
inc
push
pop
push
icebp
xchg
push
add
sub
out
mov
sbb
stc
adc
enter
in
loop
and
inc
dec
addr16
fstpl
pop
mull
out
adc
or
push
testl
push
popa
pushf
aam
aam
push
add
lret
inc
jge
mov
adc
je
cltd
scas
rcll
xor
cs
push
add
mov
lock
fadds
sbb
cwtl
movsb
sub
inc
cmp
into
or
sbbl
fs
sbb
cmp
xor
or
fiadds
mov
fisubl
or
mov
lock
loopne
cwtl
call
ficoms
call
xor
sbb
dec
xchg
frstor
mov
push
adc
repnz
pop
push
push
ds
lret
dec
cmpsl
push
or
or
movsl
push
xor
loope
sub
jmp
dec
jle
sti
int3
cmpsb
js
push
out
or
xchg
ret
xchg
lds
push
pop
mov
mov
mov
jmp
fists
cwtl
sbb
cmp
stc
stos
jae
addl
cmc
fbld
jmp
mov
dec
into
aas
xor
pushf
sbb
leave
leave
adc
xchg
xor
aaa
jg
shlb
daa
sbb
push
xchg
sbb
sbb
pop
orl
int3
pop
pop
jne
std
ja
and
in
movsl
dec
cmp
push
cld
mov
bt
inc
cmpsb
push
xor
xchg
mov
pop
ss
sbb
xor
lret
and
ret
push
ljmp
call
lea
sub
inc
cmp
pop
sub
dec
fwait
insl
shll
xchg
ret
out
dec
popf
aam
notl
fisttps
cs
sti
lahf
repnz
das
pop
fwait
incb
les
icebp
js
out
fadd
fsubs
fbld
testb
rorb
clc
test
xchg
loopne
dec
cmp
mov
cmp
in
clc
push
mov
lret
into
mov
or
iret
mov
cwtl
stc
jne
mov
sub
data16
adc
lahf
stos
dec
jg
pop
pop
data16
sub
paddb
divb
mov
stos
divb
pop
mov
add
sti
jmp
rclb
mov
jmp
push
mov
inc
xchg
testb
sti
out
stos
test
pusha
mov
das
stc
pop
or
imulb
cmc
pop
leave
std
xchg
leave
sbb
cmpsb
sbb
out
cmp
dec
mov
in
adc
pop
or
fists
sbbb
push
movsl
jno
xor
cmp
lock
in
xor
adc
nop
mov
test
and
nop
cld
sahf
and
les
fwait
mov
les
icebp
out
rcrb
shlb
fwait
lock
dec
push
dec
int
sub
int
popa
sbb
inc
in
push
in
shlb
mov
cmp
sbb
shlb
pusha
or
pop
in
les
hlt
andl
cmp
je
mov
jle
pop
mov
mov
test
inc
push
mov
xor
aaa
jo
test
sarl
movl
ljmp
and
cmp
sub
in
jg
mov
out
cli
rclb
repnz
mov
jns
test
sub
std
xchg
xchg
xchg
cmp
out
mov
add
mov
adc
xchg
mov
outsl
jo
dec
lds
mov
out
and
push
das
push
shrb
push
mov
fnstenv
sbb
jbe
into
notb
aaa
sbb
sbb
stos
test
jmp
jmp
pop
add
lahf
push
sbb
jl
repz
repz
dec
xchg
das
test
xchg
fwait
push
jecxz
mov
test
dec
cmp
dec
nop
aas
add
div
cltd
sar
sarl
daa
mov
lahf
cmc
mov
pushf
adc
test
cmp
inc
mov
mov
fnsave
fidivs
lea
inc
mov
ficomps
stc
cmp
pusha
cmc
ds
testb
cmp
inc
cmp
pusha
les
rcl
popf
ret
andl
jne
fdivrs
icebp
inc
pop
xchg
mov
xchg
inc
test
or
daa
scas
push
insb
pop
adc
sarb
aad
pushf
shlb
and
insb
data16
mov
xor
and
stos
icebp
shll
or
insl
iret
or
xor
les
sub
inc
outsl
imull
and
xor
icebp
movsb
movsb
push
shrl
push
xchg
adc
add
mov
mov
and
dec
inc
xor
test
mov
jae
xor
imul
adc
mov
xor
movsl
popf
cltd
ss
xor
icebp
xor
test
push
mov
pop
push
mov
dec
lret
xchg
pop
test
das
decb
dec
pop
jecxz
in
or
ds
jo
inc
daa
push
xchg
or
inc
fistpl
mov
stos
out
xor
std
lea
shrl
test
mov
pop
or
add
inc
xlat
incl
mov
ret
movsl
fcmove
aam
dec
scas
shrl
je
stc
out
or
popa
push
sbb
stc
cli
pusha
mov
out
outsl
jl
pop
imul
dec
jl
pop
sub
rorb
lea
inc
adcl
pop
sbb
dec
inc
mov
int3
fimuls
jnp
lods
adc
push
inc
xchg
inc
pop
cli
adc
out
ljmp
addr16
mov
xor
movsb
lahf
jmp
data16
sbb
mov
dec
or
es
mov
in
je
inc
shrl
xlat
int
test
add
jge
xor
or
mov
dec
or
push
call
aaa
adc
fstpl
or
pop
mov
lret
lret
mov
insl
mov
jb
scas
xor
cmp
add
lret
add
pop
push
negb
fnstenv
stc
stos
inc
out
xchg
jle
mov
mov
fisttpll
lahf
xchg
repnz
xor
xor
test
xor
fnstcw
enter
push
push
xor
xchg
insb
lds
repz
popa
data16
loopne
adc
dec
cmp
pop
adc
inc
or
and
fs
test
sbb
lret
jg
aaa
je
aas
dec
cmc
iret
fdivr
cli
sub
pop
js
roll
jb
mov
push
push
test
imul
cmpb
divl
outsb
loopne
in
nop
andb
add
test
or
mov
pop
jp
aaa
sbb
fldl
aam
add
sub
cmp
sub
das
sub
test
mov
movsl
repz
lret
mov
cmp
xchg
mov
mov
mov
in
mov
xchg
addr16
xchg
pop
pop
adc
sarb
sbb
out
and
ret
pop
fistl
cmp
lcall
inc
pop
add
push
jbe
push
push
andb
out
fimuls
jbe
inc
inc
in
pop
sub
pop
divl
sub
jns
iret
fsubrl
out
or
in
orb
dec
adc
scas
xchg
ret
xchg
vsubsd
subl
dec
out
stc
fldt
loop
jne
inc
ret
repnz
mov
out
cmpl
xlat
inc
lock
xlat
xchg
aad
sub
shl
insb
push
jmp
popa
mov
mov
aad
xchg
add
dec
dec
mov
mov
imul
pop
mov
sbb
mov
mov
pop
inc
mov
mov
and
xchg
movsl
lods
movq
frstor
mov
xor
push
lret
mov
mov
dec
pop
lods
sahf
xchg
out
and
stos
ss
jo
pop
jle
js
push
test
sti
std
mov
ljmp
lods
jmp
enter
sbb
push
jbe
jns
and
mov
je
inc
mov
iret
push
jmp
das
adc
les
jecxz
in
dec
xor
out
jns
and
je
outsl
cmp
sub
jno
test
es
out
cltd
and
mov
icebp
loop
insb
push
inc
test
je
cli
push
ret
outsl
stc
pop
cltd
popa
fstl
dec
adc
in
push
rcrb
mov
aad
in
jb
add
les
xchg
pop
push
pop
loopne
or
and
je
jge
cmp
lods
or
fldcw
mov
mov
test
lds
ret
cld
movsl
enter
push
jns
pop
adc
xor
mov
fs
and
cmc
mov
clc
cs
icebp
jne
push
push
or
rolb
repz
jno
loopne
je
dec
adc
pop
aam
mov
or
in
in
insl
loope
mov
xor
in
xor
dec
cmp
rorl
cmp
and
inc
jb
or
push
xchg
loop
stos
adc
outsl
shrl
xor
mov
fistpll
loop
jno
repnz
xor
push
pop
ret
cltd
mov
push
and
in
adc
fcmovb
nop
or
loop
and
clc
cld
ljmp
pop
adc
out
xchg
lods
int3
and
mov
out
xchg
jae
xchg
sarb
lea
push
outsb
leave
jmp
daa
sbb
adc
imul
push
pop
fisubl
out
test
mov
sbb
in
push
mov
xor
sbbb
mov
and
mov
ljmp
sub
sbb
cld
mov
in
and
fnsave
sub
outsb
mov
lock
mov
ja
and
push
jae
fwait
enter
fdivr
jbe
mov
mov
nop
jno
test
sbb
mov
test
mov
shl
push
xchg
shlb
or
lods
or
test
ds
es
mov
test
div
scas
adc
xorb
loope
inc
add
in
and
add
jo
add
fwait
adc
push
loop
mov
rcrb
fs
mov
into
mov
jl
xor
push
pop
mov
cmpsb
sub
das
dec
fidivrl
aad
push
mov
sbb
fs
lret
lahf
cli
jmp
or
push
ss
orb
cmpsb
in
xchg
push
aaa
jne
faddl
fisttpl
xor
adc
pop
xchg
loopne
mov
adc
xchg
lods
rorb
inc
pop
dec
stos
test
test
add
xchg
xchg
sti
push
pop
das
or
push
inc
bound
inc
and
cmp
jns
sub
push
test
aaa
dec
jge
enter
pop
mov
je
imul
imul
dec
stc
and
pop
stc
add
iret
and
rcrl
inc
cmp
addr16
pusha
sub
test
xchg
pop
insl
ja
sub
sub
cmp
sub
fucom
shll
pusha
hlt
popl
xchg
imul
lret
or
adc
mov
data16
dec
xor
fldenv
das
jl
cltd
adc
xlat
push
xchg
jo,pn
and
sbb
sub
lea
adc
adc
jl
lea
andb
add
insl
fstl
sti
add
add
fildl
loope
xchg
or
sti
or
pusha
cmpsb
sub
sarb
push
sub
mov
cmc
shll
xor
out
imul
fs
pop
mov
or
int
pop
test
pop
es
jp
jbe
cmp
inc
mov
jns
sahf
ljmp
pop
push
push
ficoms
sbbl
test
pop
pop
dec
add
sub
adc
outsl
call
fcomps
ss
sub
jbe
xchg
jle
arpl
ss
aaa
and
imul
adc
push
ja
mov
jecxz
imul
add
ja
adc
mov
mov
sbb
insl
popa
faddl
test
dec
insb
stos
test
cmp
fsubrp
mov
call
fwait
mov
movsl
dec
aas
loope
in
mov
pop
ss
scas
mov
add
pop
pop
nop
and
jl
das
cwtl
int
pushf
push
mov
flds
and
int3
std
imul
jae
cltd
aaa
pop
clc
mov
and
adc
inc
int
out
mov
pop
adc
mov
push
mov
pushf
dec
repnz
cwtl
sbb
cmp
mov
dec
or
cmp
inc
jne
insl
jp
sub
loope
lret
mov
mov
test
fsub
icebp
inc
std
xor
mov
jecxz
jb
mov
sub
jmp
cmp
dec
je
pop
sbb
loope
mov
dec
xor
out
cmc
mov
das
fmuls
out
loopne
pop
fs
ret
xor
xchg
or
lcall
pop
pop
lods
daa
pop
repz
loop
push
arpl
aas
aas
adc
mov
add
out
jl
mov
stc
cli
cld
or
iret
or
sub
push
ret
popf
cmp
inc
sub
sub
cmp
out
sub
xchg
push
sub
mov
in
scas
dec
sub
rclb
sub
clc
push
sub
push
push
sti
ret
adc
xchg
adc
and
adc
dec
dec
mulb
ret
adc
cltd
repnz
int
mov
push
test
lds
mov
mulb
ret
push
lods
add
xor
sub
pusha
cmp
loop
mov
sahf
sti
and
scas
mov
mov
test
xor
push
cli
in
jbe
and
jecxz
in
sbb
push
aaa
in
outsl
out
pusha
pusha
stos
out
cltd
mov
and
add
pop
dec
adc
sub
cli
add
out
cli
aas
mov
pop
push
cmpl
addr16
ss
add
lret
scas
stos
fistpl
mov
loopne
les
mov
cmp
fcompl
iret
cmp
mov
iret
jecxz
pop
pop
call
pop
stos
imul
gs
in
sbb
mov
inc
rcll
xchg
inc
add
push
xorb
scas
fisubrl
fmul
das
repz
and
scas
mov
cmpsb
cmp
push
adc
insl
adc
or
je
dec
lret
mov
inc
out
xchg
stc
push
insl
lods
adc
jo
sar
and
in
imul
sbb
pop
mov
jo
mov
hlt
daa
mov
test
loopne
out
and
mov
xor
test
mov
ss
xchg
clc
mov
mov
push
int
outsl
sar
fisttpll
lahf
inc
push
aas
or
push
test
loop
insl
mov
iret
int3
jns
jbe
add
je
xchg
ljmp
aas
rorb
lret
pop
adc
jae
or
pop
dec
pop
rcl
cmpsb
mov
xor
movsb
aaa
fcmovnu
push
testl
aad
mov
stos
mov
dec
es
das
jge
leave
jo
pusha
adc
enter
push
out
lods
lock
cmc
in
cli
jnp
jg
aam
adc
push
jl
mov
fnsave
mov
lea
ret
mov
mov
and
inc
lret
scas
out
pop
xor
pusha
mov
or
lods
pop
sub
jmp
insl
outsb
bound
and
jge
lds
in
aad
sahf
push
push
xor
xor
add
mov
pusha
scas
pop
popa
shrl
sti
pop
push
ds
mov
sbb
sub
aas
xchg
add
dec
sub
into
mov
mov
push
loop
push
add
or
in
cli
loop
jecxz
and
fucom
push
push
out
shrl
pop
loope
ret
cltd
xchg
mov
std
repnz
push
xor
cmp
push
xchg
cmp
and
inc
or
cmp
cmp
mov
pop
jle
shrb
shll
sti
xchg
mov
add
in
sbb
jg
inc
sbb
out
mov
cs
in
mov
lcall
pop
mov
add
add
ja
dec
xor
les
lcall
jo
inc
adcl
iret
mov
push
inc
hlt
movsl
push
or
pop
push
ja
add
mov
xor
push
sub
xor
cltd
clc
cmp
jmp
popa
mov
add
movsb
loope
dec
dec
jbe
or
ret
add
or
cmpsb
mov
xor
repz
xor
sbb
gs
into
or
mov
ja
mov
test
xor
inc
jne
mov
hlt
xchg
push
jg
arpl
mov
popa
fistl
hlt
xchg
dec
in
mov
mov
cwtl
jb
testl
int3
sbbl
sbb
test
stc
xor
out
mov
faddp
xchg
xchg
mov
or
test
in
add
insl
dec
jb
mov
jg
inc
cmpb
rorb
mov
rcrl
adc
into
shl
mov
pop
out
jecxz
xchg
ja
das
dec
xor
scas
loop
cmp
data16
sbb
xchg
popf
repnz
and
mov
subb
stos
sbb
into
popa
orl
sti
enter
xlat
xchg
es
data16
bound
sbb
adc
les
sub
scas
push
idivl
into
jg
test
cmc
in
or
add
push
rorb
mov
stos
push
pop
push
out
in
enter
mov
mov
sbb
in
in
pushl
clc
xchg
loope
outsl
nop
cli
inc
sub
cmp
stos
lret
or
dec
out
mov
fsubrl
mov
int3
pusha
enter
inc
rol
lods
and
cmp
es
mov
add
cwtl
mov
popf
adc
inc
jp
mov
stos
aad
sbb
jno
pop
leave
insb
rcr
in
jmp
xchg
mov
lods
mov
movsb
rorb
rcll
pop
dec
enter
mov
sbb
push
mov
jle
pop
mov
out
stc
in
mov
push
and
mov
inc
dec
outsl
dec
xchg
ds
cmp
imul
add
stos
inc
sub
loope
lret
fsubs
out
mov
sub
fcoms
pop
sub
pushf
sub
xchg
cmpsb
jge
js
add
hlt
push
add
dec
dec
xchg
stos
pop
push
adc
icebp
mov
push
in
cmp
fildll
leave
orl
adc
fiadds
sub
push
inc
inc
andb
inc
popl
loopne
or
loope
inc
dec
mov
lods
dec
sub
jg
into
sub
mov
cmp
add
ds
xchg
push
or
idivb
popf
orl
pop
xchg
mov
push
push
ja
pop
mov
and
sbb
fadd
mov
in
dec
jmp
or
test
jl
jns
out
scas
sbb
in
orl
popa
leave
or
jl
fwait
sbb
pop
outsb
aas
aad
ljmp
jecxz
adc
ret
or
mov
data16
loopne
cmp
push
pop
xchg
pop
pop
add
pop
movsb
call
pop
cmp
sbb
pushf
inc
insl
and
mov
jmp
fidivrs
mov
les
and
call
popf
jp
movsl
cmp
xchg
sub
mov
push
cwtl
data16
dec
xchg
sar
mov
inc
jg
push
mov
loope
fstpt
mov
pop
imul
outsb
push
orb
or
scas
inc
or
dec
js
aam
ja
xchg
rcrl
ret
repz
fndisi(8087
mov
faddl
xchg
lock
and
incl
pop
or
xchg
dec
mov
or
sub
lds
unpckhps
mov
inc
dec
cmp
aad
ret
pushf
sysret
out
or
in
xchg
cmp
mov
loope
out
nop
loop
pop
pop
lds
out
push
sbb
test
out
sub
cltd
xchg
sbb
or
xchg
popl
nop
popa
mov
jae
push
lock
aaa
in
fcomp
push
xchg
push
into
inc
mov
jecxz
push
pop
int3
shlb
aam
adcl
pop
stc
lret
icebp
mov
in
jo
aad
fisubl
mov
xchg
push
or
jmp
orl
aad
gs
jmp
pop
insl
xchg
lods
out
orb
addr16
xchg
ret
es
mov
xchg
test
in
popa
popf
imul
lods
aam
fdivrs
scas
les
sbb
and
ret
xorl
lds
xor
push
int
xlat
icebp
mov
cmp
lret
dec
lcall
cmp
fidivrl
xlat
sbb
das
xchg
fnstenv
mov
int3
dec
jle
shll
popa
dec
or
jle
pop
inc
out
or
mov
add
decb
and
pand
stos
arpl
mov
inc
push
cltd
ret
cs
sahf
sbb
aam
adc
imul
xchg
sarl
sub
and
sbb
lds
push
jmp
cwtl
mov
std
notb
add
hlt
ret
shrb
jae
aas
pop
leave
arpl
fistpl
leave
int
cltd
inc
repnz
mov
pop
mov
fld1
mov
sbbl
jmp
push
mov
in
push
ficompl
in
add
ss
int3
fcoml
mov
stc
add
mov
nop
js
cmp
jg
clc
xor
dec
lret
mov
cli
mov
cld
push
inc
xor
mov
cmp
cmp
aaa
pop
ret
cmp
push
push
or
lock
jb
mov
mov
dec
mov
pop
mov
mov
sbb
aaa
cwtl
movsl
mov
and
push
pushf
out
fistpl
push
arpl
ja
jge
mov
sbb
sahf
push
xchg
cmpsl
dec
ror
add
out
lahf
inc
inc
jecxz
cli
aas
dec
xchg
pushf
lret
inc
mov
xchg
shrb
enter
ljmp
pushf
movsb
repz
outsl
mov
or
pop
cmp
mov
outsb
cmp
xchg
or
in
add
mov
xor
pop
je
xchg
out
cmp
mov
pop
addr16
push
pop
lcall
mov
fsubr
insl
shr
in
cwtl
fdivrs
push
in
repnz
jg
push
sub
ss
repnz
loop
shr
popa
cmp
add
pop
fiaddl
int3
sbb
lds
or
and
test
loope
jmp
jle
nop
mov
pushf
in
pop
lock
mov
data16
pop
inc
jb
add
cmc
test
stc
push
jbe
scas
mov
jno
cmp
jp
mov
or
fbstp
cmc
outsb
xchg
fisubs
test
icebp
sbb
jecxz
or
in
push
shll
push
cmp
sub
mov
mov
sub
mov
aas
pop
mov
dec
xor
lahf
sub
std
inc
enter
or
mov
mov
imul
xor
sub
pop
pop
push
or
fldl
jne
adc
mov
fdivrl
cmc
lahf
dec
push
cmpsb
lea
xchg
out
lds
lea
popa
jo
pop
and
into
out
and
icebp
pop
xor
inc
popl
jecxz
outsl
push
mov
inc
adc
mov
stc
stc
xchg
or
and
mov
cmpl
lds
push
cmp
ret
sbbb
xor
mov
xor
lret
ret
pop
and
and
mov
push
repnz
push
jae
jae
cld
out
mov
addr16
cmpsl
inc
lcall
xchg
xchg
push
das
pushl
loopne
jecxz
out
mov
int
sub
fnstenv
fcmovnbe
mov
les
mov
mov
adc
push
sbb
dec
lahf
push
xchg
add
inc
dec
mov
arpl
sbb
lcall
mov
in
xchg
xor
je
dec
mov
inc
xchg
xchg
push
in
stc
add
push
in
sub
aam
cmp
jo
and
mov
mov
je
addl
ret
out
fs
pop
test
imul
jae
fidivl
adc
out
mov
outsb
out
les
xor
test
jmp
fstl
inc
mov
xchg
jae
sub
or
inc
and
pop
mov
add
lods
sti
lcall
jecxz
add
pop
xchg
xlat
lds
stos
inc
ss
adc
ficoml
cmp
hlt
cmp
aaa
xor
jp
dec
cmpsl
sub
lcall
jmp
test
stos
loop
outsb
andb
sub
test
fnstsw
and
mov
sbb
scas
jg
pop
jl
mov
insb
in
imul
clc
sbb
adc
nop
push
add
mov
fmull
xchg
xchg
or
in
es
leave
sbb
mov
xorl
mov
aad
ljmp
idiv
fistpl
lock
je
popa
xorl
cmpsl
repz
add
mov
mov
add
test
mov
inc
aaa
pushf
add
cmpsb
lret
and
and
jl
ja,pt
mov
gs
add
call
clc
cwtl
mov
or
call
shrl
stos
mov
stc
pop
ret
mov
dec
movsl
out
xor
sub
test
fadds
movsl
fists
dec
sbb
das
fs
push
fsts
cmp
jno
cmp
sbb
nop
ja
in
xor
inc
mov
imul
jmp
and
lret
fcmovnu
movsl
xchg
ret
pusha
cltd
sub
inc
in
adc
fst
jle
cld
out
out
mov
shlb
add
inc
sub
mov
imul
sahf
and
mov
dec
and
inc
cmp
inc
dec
inc
fildl
and
out
scas
xchg
ss
and
cmp
es
pop
pop
xchg
out
nop
dec
shlb
test
mov
sbb
pop
fistps
pop
stos
ss
mov
pop
stos
pop
out
imul
ss
test
lcall
repz
dec
mov
scas
aad
int3
mov
lods
sub
jbe
jmp
lock
fsubl
add
sbb
or
addl
sarb
jb
fcmove
dec
cmp
fistpl
aad
mov
xchg
out
fwait
mov
and
aaa
shl
cs
sbb
and
in
sub
jno
out
cmp
test
pop
jmp
push
lahf
leave
adc
pusha
lahf
jl
mov
push
push
adc
addr16
xor
test
fbstp
enter
jno
fidivrs
add
sbb
fdivs
test
call
pop
xchg
bound
adc
or
mov
xchg
in
cwtl
xchg
sbb
cmpl
mov
sub
add
bound
stos
roll
cmp
jg
dec
cmp
out
pop
push
and
fwait
jle
mov
xor
inc
aam
call
aam
sbb
ret
dec
and
xlat
xor
lret
lods
jmp
sbb
or
or
sub
out
xchg
sub
pushl
cmpsl
pop
mov
push
sbb
aad
cs
or
adc
add
push
mov
dec
xchg
xorb
sahf
les
jecxz
adc
pop
push
or
sbb
iret
sbb
rcrl
movsl
dec
mov
xchg
xchg
ret
mov
cmp
or
jns
cmp
sbb
xchg
xchg
xor
fs
jp
cmp
aaa
push
adc
and
cmpsl
out
sub
mov
jo
popf
dec
dec
mov
pop
ss
lods
or
mov
and
imulb
mov
pop
mov
lahf
sbb
xor
stos
movd
adcb
aas
in
jno
pop
dec
or
or
dec
xor
mov
out
repz
lret
mov
punpcklwd
pop
sti
test
sbb
cmpsl
jp
sub
add
push
add
or
ficoml
push
inc
ds
jne
into
pop
mov
out
xor
shlb
lea
nop
int3
push
fidivs
mov
jg
push
xchg
test
int
pop
fldt
mov
fldl
push
mov
mov
repnz
and
push
jl
ret
or
sub
imulb
or
ds
inc
sbb
dec
cltd
and
mov
std
mov
cmp
xor
mov
pop
stos
lods
in
daa
sbb
cmp
and
ret
mov
sbb
cmp
shlb
imul
cmp
into
inc
leave
inc
arpl
or
xlat
or
loope
fisttps
mov
mov
cmpsb
dec
mov
pop
mov
je
cld
xor
std
daa
scas
dec
or
insb
cltd
ds
mov
insl
pop
fcmove
in
aad
std
sub
jg
inc
rep
dec
mov
sub
fs
mov
and
sarl
push
ret
dec
into
xchg
mov
inc
adc
jo
sbbl
mov
lds
sarb
pushf
adc
fbstp
inc
cmp
pop
lds
adc
sub
aas
arpl
cmp
adc
add
js
in
cmpsl
inc
sbb
cmp
fcom
insl
rorl
shrb
pop
gs
push
in
dec
jmp
cmp
es
xchg
jl
popa
mov
mov
sub
cmp
jg
pop
int
add
das
push
mov
adc
pop
ret
hlt
adc
popf
adc
fsts
ljmp
adc
mov
adc
push
rcl
push
xchg
xchg
xor
sub
xlat
ror
cwtl
fwait
mov
pop
sbb
xor
scas
sub
xor
ud1
mov
jo
mov
rolb
inc
mov
test
andl
or
add
mov
inc
leave
or
js
cmp
rclb
push
push
mov
outsl
dec
cmpb
cmp
stc
sti
add
xorb
or
jne
das
pop
adc
aad
xor
test
leave
mov
add
arpl
int
shrl
pop
inc
or
inc
push
sbb
cmp
adc
mov
out
lret
popa
mov
sbb
ljmp
cli
fs
add
sbb
or
loope
rclb
mov
test
fnstcw
mov
push
lds
dec
push
sbb
mov
or
jno
pusha
mov
push
cwtl
mov
in
adc
jecxz
sbb
xchg
add
fs
mov
lods
in
mov
dec
fmuls
cwtl
rorb
push
jb
dec
rcrl
jg
jne
aaa
inc
fs
pop
fistps
outsl
xor
test
imul
mov
leave
addr16
add
mov
inc
shlb
cmp
jae
inc
adc
adc
push
gs
fcompp
in
sbb
adc
xlat
xor
out
push
mov
lods
pop
cmpsl
popa
scas
daa
cld
jle
inc
imul
sbb
cmp
jns
jbe
dec
loop
pop
movsb
mov
pop
mov
mov
cmpsb
imul
sub
lea
push
call
jge
fwait
arpl
sub
mull
ficompl
dec
jp
mov
jbe
xchg
les
jge
mov
pusha
push
mov
int
pop
adc
push
enter
mov
iret
cltd
test
xchg
cmc
xor
test
into
std
scas
fisttpll
push
mov
cmp
xchg
push
mov
rcll
push
outsl
fistl
movsl
adc
ds
add
out
and
sahf
jle
dec
mov
dec
ret
sub
jmp
adc
pushf
ret
fwait
jb
testl
bnd
jne
das
enter
xlat
popf
loope
lea
fidivl
aas
gs
leave
data16
gs
push
xor
ds
andl
shl
mov
mov
jmp
fcomp
gs
inc
cltd
pop
call
sub
pop
ja
sub
test
lcall
loopne
xor
adc
inc
mov
adc
shr
cwtl
mov
sarl
aas
inc
mov
rcrb
and
dec
mov
sbb
int
cmp
dec
mov
ficoml
inc
mov
scas
adc
pop
call
movsb
daa
lahf
pop
sbb
push
or
pop
ja
shr
fdivp
and
xchg
sub
loope
out
jo
imul
jne
subb
and
jae
add
in
cwtl
adc
dec
push
ret
stos
mov
lret
add
xor
xor
ljmp
in
xchg
cltd
lret
testb
pop
or
cmp
out
push
inc
mov
push
cmp
sbbb
aad
jo
pop
std
movsl
mov
push
or
in
scas
jns
dec
mov
xchg
insl
jmp
add
rcll
push
push
fsubrs
test
test
lahf
in
repz
dec
popf
xor
js
fmul
mov
mov
je
jg
cmpsl
test
movb
push
sbb
add
lret
and
and
jb
out
clc
add
pop
sub
addr16
push
out
cmpb
xchg
sbb
sub
pop
mov
push
into
and
xlat
lret
scas
mov
rcrb
test
jp
mov
jb
pop
pushf
aaa
mull
pop
and
lea
add
adc
xchg
push
pusha
mov
int3
lods
sub
test
inc
movsl
cmp
jge
frstpm(287
push
push
insb
loop
push
push
cli
mov
dec
sbb
data16
clc
aad
add
cmp
push
dec
popa
pop
xchg
cmp
mov
rcrb
ret
pop
and
std
sbb
decl
mov
loopne
adc
loopne
sbb
mov
bound
icebp
out
push
imul
cmp
std
cmpsb
add
inc
dec
sbb
xor
mov
inc
xor
mov
xchg
xchg
mov
xor
xchg
andl
pop
and
insb
hlt
xchg
icebp
stos
mov
sbb
mov
iret
fsubr
pop
xchg
call
add
push
in
inc
and
popf
mov
cmpsl
into
push
adc
icebp
dec
mov
rorl
jns
rclb
sbb
icebp
xchg
mov
or
jmp
iret
push
jge
inc
jl
xchg
scas
mov
sahf
jg
mov
xor
mov
out
arpl
cmp
es
pop
lahf
repnz
int3
outsl
jge
stc
int3
popa
fwait
xchg
popa
fcomps
fwait
gs
inc
lods
mov
aas
sub
aaa
pop
cwtl
xor
scas
into
shrl
or
ja
sahf
mov
jmp
test
mov
lret
mov
inc
or
insl
ja
xor
gs
push
cs
rcll
cmpsb
mov
ficoms
cmp
push
push
fimull
cltd
push
bound
push
pop
stos
fcoml
loop
je
jle
dec
test
jo
mov
jg
xor
adc
nop
sti
pop
ret
pop
inc
test
test
mov
and
shll
add
rep
sbb
fistpl
sub
or
xchg
jno
roll
dec
jl
jne
shrb
in
out
cmp
addr16
push
jle
loope
cmp
xlat
sub
push
wbinvd
dec
rclb
inc
mov
aaa
jmp
loopne
mov
adc
jb
or
inc
inc
fcompl
stos
add
data16
mov
jbe
fs
leave
xchg
ss
jno
push
mov
xchg
decl
lret
mov
inc
xor
and
jmp
mov
inc
jbe
test
push
loop
xor
push
push
pop
out
shl
cltd
push
cmp
es
or
jl
std
scas
sub
xchg
jb
inc
aad
leave
dec
ja
stos
lds
fldenv
ret
stos
and
adcl
jp
ss
rorl
clc
sti
int
mov
fstps
push
mov
daa
clc
add
pushf
andl
push
in
flds
outsb
add
cmp
pop
jmp
sbb
add
ljmp
cmp
jbe
imul
stc
mov
rorb
movaps
mov
xor
or
xorl
scas
mov
mov
mov
mov
xor
loop
pushf
jg
mov
in
adc
in
sarb
mov
mov
inc
int
push
or
clc
movsl
jg
in
jg
fs
out
insb
in
xchg
iret
sub
cwtl
aas
push
pushf
cmp
sti
andb
sub
insl
or
cli
pusha
jo
pop
mov
inc
cmc
jg
ret
fmull
push
xor
adc
sbb
and
push
xlat
cmp
sti
and
leave
xchg
sub
loope
rcll
adc
mov
pushf
in
or
fs
or
jbe
add
int3
xchg
rolb
cmpsb
jns,pt
push
daa
push
xchg
jns
xchg
into
xorb
das
mov
xor
fiaddl
into
push
incb
xchg
adc
mov
xchg
jns
or
loopne
repz
aad
arpl
xchg
enter
push
jge
jae
dec
mov
rorl
jmp
mul
add
and
loope
or
or
cmp
insl
sbbb
mov
sar
movsl
dec
loop
cltd
mov
pop
inc
stos
or
xchg
data16
push
ljmp
dec
xchg
stos
push
mov
dec
das
and
addr16
hlt
cmp
jae
mov
les
out
mov
imul
sub
out
jp
sbb
cmp
test
jns
in
mov
adcb
dec
cmpsb
xchg
pause
mov
mov
popf
cmp
dec
cmp
pop
push
mov
cmpsb
outsl
roll
lods
mov
flds
sbb
push
iret
inc
dec
cmpsb
cwtl
pop
insb
popa
add
jecxz
push
jno
pushf
in
fwait
in
pop
out
cld
int
lea
in
dec
mov
or
rcrb
loopne
push
mov
or
ret
test
mov
pop
sar
mov
andb
jae
aas
outsl
pop
enter
call
jle
jo
sbb
mov
xor
mov
mov
js
sub
jmp
imul
pop
negb
call
fadd
pop
sub
fadds
or
xchg
insb
lahf
fldl
cltd
lea
mov
adc
push
lret
ret
rorl
loope
xchg
pop
int
fnstenv
mov
mov
sub
cmp
or
xor
bound
sbb
ret
sub
mov
dec
pusha
push
stos
out
and
lcall
dec
cmpsl
cs
fwait
jnp
mov
cmp
adc
lret
inc
sar
js
pop
dec
movntps
xlat
jmp
push
clc
adc
fbstp
psrlq
sub
bnd
setp
xchg
mov
aam
repnz
sahf
arpl
daa
mov
xchg
jp
xor
xor
jl
jecxz
mov
push
xor
inc
adc
ja
pop
hlt
movsb
inc
jnp
mov
mov
add
lods
mov
andl
cmpsb
or
adc
inc
adc
cmp
mov
jb
adc
cltd
stos
repnz
mov
sbb
push
rorl
and
cmp
popa
cwtl
enter
push
xor
inc
xor
lret
or
loope
stos
hlt
or
data16
popf
lock
lcall
std
fstps
sub
lods
lods
add
jecxz
push
cmpsl
xor
cmp
jmp
stos
or
and
push
mov
adc
jle
ror
jnp
pushf
daa
cmp
loop
rorl
dec
adc
fwait
cmpb
imul
lods
clc
ret
xor
test
pop
fisttpll
cmp
push
aas
lods
bound
je
imul
stos
xchg
stos
or
cli
std
lods
aas
mov
lcall
lahf
in
das
gs
pop
cmp
dec
outsl
xchg
rcl
mov
popl
mov
xchg
ret
inc
arpl
push
mov
testb
fisubrs
pop
adc
pop
in
push
xor
mov
loop
xchg
push
cli
pop
sbb
sub
pop
xlat
add
cmpsl
daa
aad
jp
insb
xor
xchg
dec
pop
add
in
mov
cmp
hlt
insb
jl
imul
aam
cwtl
mov
jo
leave
xor
idivb
cmp
push
inc
xlat
ja
into
dec
lea
icebp
xor
mov
int3
push
push
xchg
lahf
adcb
or
adc
call
push
inc
sarb
xchg
mov
out
mov
mov
mov
mov
cmpsb
dec
fildl
pop
jo
rorb
data16
pop
and
jle
add
faddl
mov
sbb
data16
inc
cmp
push
xor
mov
jno
xor
or
mov
jecxz
mov
fisubrs
ljmp
pushl
ret
lock
popf
or
fsubs
lret
add
sub
push
iret
insb
in
stos
and
out
pop
mov
dec
leave
pop
out
jo
subl
outsb
jle
pushl
pop
scas
pop
mov
cmpsl
mov
lret
fstps
mov
sbbb
cmp
jno
stc
inc
adc
mov
rcrb
cli
scas
out
or
adc
lret
loope
sarb
cmpsb
jl
jecxz
scas
arpl
mov
pop
mov
insb
add
rep
mov
gs
inc
popf
test
mov
out
jne
jno
test
jae
adc
push
mov
aad
fnsave
push
pop
filds
fwait
ja
clc
inc
mov
add
ficoml
mov
ret
std
push
sub
fsub
cmp
adc
les
cmp
xchg
push
inc
stos
mov
outsb
xchg
xchg
mov
pop
mull
xorl
ds
jge
les
nop
push
popa
fdivrp
lods
and
jno
ss
mov
sub
out
cmp
addr16
out
std
pop
mov
pop
jbe
in
stc
and
xor
fldl
jmp
ds
sub
lock
aad
pop
xor
xchg
xchg
fidivs
popf
insb
cmpsl
adc
adc
fdivrs
les
ret
int
jl
test
cmp
dec
std
jle
push
inc
test
scas
or
rcrb
cmp
rcll
daa
and
in
cmp
push
clc
popf
mov
sti
call
push
lds
cmp
and
push
fs
xlat
pop
sbb
fwait
mov
pushf
sub
out
subb
test
lret
gs
test
mov
mov
lret
stc
jno
fwait
add
cmp
cmp
push
push
add
loopne
iret
aaa
mov
adc
xor
add
lret
mov
aad
enter
cli
imul
sbb
fstps
mov
arpl
or
push
cmp
imul
test
popa
scas
cmp
add
movsl
aaa
xchg
inc
ror
cmc
cwtl
push
shll
mov
lahf
mov
pop
popa
xor
cmc
mov
js
sbb
or
lea
cmp
sbb
fsubl
jbe
aas
in
push
fstpl
cmpsl
lds
and
dec
test
movsl
push
jl
das
or
push
mov
fists
imul
leave
mov
ficompl
inc
rol
cmp
xor
out
incb
cmp
dec
out
and
xlat
adc
insb
sbb
inc
pop
and
xchg
dec
fsts
jne
scas
inc
aaa
mov
add
daa
mov
cs
sub
ss
cltd
mov
rol
sbb
dec
cmp
cld
jmp
addb
rolb
dec
add
scas
cs
test
lcall
cmp
mov
sarb
push
sahf
test
test
dec
scas
xchg
push
mov
popf
xor
js
decl
xchg
xor
dec
mov
leave
fs
pusha
dec
out
or
out
inc
into
adc
dec
aas
das
mov
repz
lock
popa
cs
shrb
stos
fisubl
ret
popa
loope
add
and
aad
push
movb
js
scas
push
xor
sar
adc
mov
mov
mov
pop
lahf
mov
inc
cmp
jnp
inc
in
jbe
aas
cmp
ja
fisubl
lret
movsb
push
mov
filds
adc
mov
push
aam
mov
mov
fisttpll
nop
jp
js
xchg
add
out
mov
cmp
hlt
aaa
repnz
scas
pop
into
mov
adc
clc
add
mov
mov
jp
and
lea
loop
add
sub
inc
shrb
jle
aam
pop
and
mov
mov
popf
ljmp
lahf
adc
add
mov
loope
sahf
jge
test
mov
jl
push
jnp
jnp
cwtl
xchg
sbb
push
cmp
int3
cmpsb
jbe
in
add
cwtl
adc
aas
cmpsl
flds
stos
int
jne
shl
idivl
aam
xchg
mov
jp
test
push
mov
mov
push
sbb
data16
stos
xor
adc
cld
pop
cmp
stos
mov
pop
cmp
push
test
ja
inc
repnz
repz
out
sub
ret
clc
rorl
data16
xchg
sub
mov
jns
aas
xor
flds
leave
xchg
in
ret
adc
lds
dec
push
pop
mov
pop
add
pushf
jno
out
in
aas
bound
fs
sti
int3
and
pop
mov
mov
das
or
pop
pop
add
inc
iret
jmp
cmp
daa
sbb
scas
add
pop
sbb
xchg
pop
pop
imul
sub
xchg
pop
lret
mov
dec
xor
fisubrs
gs
xor
out
nop
notb
gs
sub
pop
or
gs
mov
out
or
and
jb
lds
and
ret
cmpsl
pop
outsl
arpl
dec
jnp
fidivrs
popf
lahf
mov
sub
cmpsb
push
pop
scas
mov
shlb
or
and
loope
add
sbb
dec
mov
imul
cltd
cwtl
or
add
xchg
jbe
stc
and
cmp
xlat
push
aad
xor
cwtl
push
xor
or
push
lret
dec
dec
ret
add
das
push
test
cmp
mov
shl
filds
fisubs
cli
and
leave
or
aad
lea
pop
imul
mov
jo
mov
mov
pop
sahf
jo
dec
stc
or
jmp
je
dec
adc
dec
sti
xchg
sbb
mov
pushf
fst
mov
shrd
gs
adc
addl
cmp
adc
popf
cli
ja
ss
mov
add
add
out
sub
adc
sbb
cmp
xor
cmpsb
scas
das
in
aas
mov
je
mov
mov
sbb
data16
js
pop
pop
mov
mov
ljmp
sbb
mov
jge
dec
jg
push
sarb
adc
repz
sub
ljmp
dec
mov
pop
adc
mov
jb
pusha
sub
jmp
push
movsb
push
xchg
pop
xor
shlb
dec
into
jns
jo
xchg
pop
xor
dec
mov
cmp
pop
pop
pop
mov
fnsave
push
or
stc
adc
jmp
mov
or
mov
push
pop
imul
frstor
add
jle
cmp
and
test
push
ds
shll
cmp
pop
popa
fisttps
push
jae
mov
xchg
stc
repz
stos
in
mov
gs
shlb
sub
mov
in
xchg
inc
sbb
pop
or
mov
sub
jmp
xlat
in
mov
nop
adc
dec
out
dec
mov
sbb
cmpsl
leave
popl
aad
ljmp
xchg
jl
or
sub
insl
ljmp
mov
mov
push
mov
lret
out
jecxz
push
jmp
dec
mov
or
aas
mov
mov
sbb
mov
lock
jle
or
jle
ret
aam
jae
xor
mov
mov
mov
lods
pop
xchg
out
and
pop
cmc
mov
enter
push
inc
into
test
and
push
pop
stos
adc
mov
lods
hlt
push
repz
shr
and
sub
cmpsl
sbb
mov
or
repz
push
ss
or
notb
sub
lea
insl
cmp
testl
adc
cmpsb
mov
mov
iret
jae
test
rcrb
sahf
or
cmc
stc
lret
inc
pop
aam
arpl
testb
mov
flds
mov
out
push
int3
jnp
aaa
pop
jno
movsl
jnp
arpl
inc
xor
movsb
popf
and
mov
dec
jg
push
mov
nopl
mov
mov
movb
jge
cmpsb
lods
xchg
jb
addr16
jmp
mov
fsubr
or
and
cmp
fisubrs
mulb
clc
cmpsb
loopne
cmc
notb
mov
rcl
addr16
cwtl
jnp
movsb
fldenv
mov
js
in
push
jno
inc
xor
and
lods
mov
xlat
bound
lds
cmp
out
mov
inc
or
ds
pop
xor
repz
xchg
inc
mov
das
mov
pusha
sbb
sbb
rcrb
pushf
xorb
rorl
mov
push
xchg
mov
xchg
mov
je
addr16
pop
push
and
mov
dec
fs
adc
mov
enter
cmp
xchg
shl
xchg
addl
cmp
or
insb
bound
ss
cmp
ds
pop
sbb
mov
jo
xchg
les
add
inc
and
sub
xor
cmp
in
xchg
xchg
shll
xchg
push
jp
xchg
je
int3
iret
xlat
int
stos
sti
mov
mov
daa
push
inc
popa
movsl
iret
imul
mov
and
add
ret
dec
jle
stc
jmp
out
sub
push
add
incl
cmp
in
mov
out
dec
cmpsb
mov
mov
jp
rcll
jecxz
clc
hlt
pusha
jp
adc
pop
xchg
fwait
inc
repnz
out
jb
xor
lret
sbb
ljmp
mov
insl
xor
stc
hlt
push
inc
jecxz
out
adc
add
test
outsl
xrelease
pop
xor
sub
repz
xchg
scas
nop
push
shrl
imul
inc
xchg
orl
clc
das
mov
cmp
mov
fadd
adc
movsl
pop
add
push
jns
inc
int3
dec
in
stos
pop
inc
push
ret
mov
jb
enter
loope
mov
adc
mov
xchg
push
dec
xacquire
les
mov
daa
sub
mov
loopne
test
sbb
pop
ret
jno
mov
sbb
pop
jbe
mov
repnz
in
aaa
pop
pop
mov
cmpsb
or
insb
push
push
lcall
push
lret
nop
scas
xchg
mov
push
mov
xor
daa
jae
cwtl
pop
sahf
add
add
clc
rclb
fsubrl
js
stc
or
dec
in
or
insl
or
lret
push
lods
stc
mov
xchg
mov
lods
jnp
int3
or
xchg
mov
enter
sbb
test
jge
addl
aam
fnstsw
out
mov
cmpsb
mov
std
sbb
inc
jns
sar
jb
and
arpl
dec
push
xorb
imul
push
jmp
ficompl
mov
frstor
mov
push
xchg
lock
mov
cmp
neg
pop
sub
xor
fsubs
loope
lods
adc
shl
xlat
jb
push
test
out
mov
lock
or
mov
bound
pop
adc
rcl
lods
shll
push
mov
sti
stc
push
repz
xchg
xchg
mov
dec
fcoml
and
outsl
in
xchg
xor
dec
mov
sub
pop
cmc
je
inc
enter
cs
inc
hlt
mov
ds
ja
movsl
pusha
leave
and
lret
mov
dec
fdivl
movsb
jno
fsubrl
push
scas
dec
addr16
ror
repnz
add
repnz
int
mov
mov
adc
mov
xchg
negl
sub
ret
pop
dec
mov
sbbl
jo
mov
and
subb
sbb
fbstp
repnz
jle
leave
pop
popa
ss
mov
jno
out
adcl
movsb
addr16
push
xlat
add
push
les
jmp
arpl
xor
jbe
push
pop
hlt
adc
add
arpl
sub
push
jae
xchg
mov
jns
mov
lea
or
fldenv
xchg
daa
push
arpl
pop
movsl
pop
inc
adc
es
xor
push
inc
mov
mov
xchg
clc
aam
mov
stos
cmp
fwait
mov
and
cmp
data16
lods
xor
adc
or
mov
xor
stos
dec
mov
xor
add
in
xchg
and
cld
cmp
insb
jp
and
outsl
into
inc
lods
subb
and
push
inc
popa
scas
lcall
lret
out
cmp
fimull
inc
repnz
sbb
cld
test
ret
clc
pusha
mov
add
pop
shlb
lret
mov
dec
jl
sbb
cmpsb
mov
mov
xchg
mov
xlat
mov
std
xchg
mov
cmpsl
arpl
or
pop
ret
push
cmp
fildll
imul
fs
cmpsb
mov
mov
stos
test
inc
inc
cltd
fucomi
add
and
mov
sbb
repnz
push
test
ret
sub
push
icebp
mov
iret
xor
sbb
dec
dec
in
cmc
pop
jo
stos
add
sbb
dec
data16
shll
mov
cmp
pop
pop
rcl
dec
adc
pop
xchg
jl
xor
arpl
mov
repnz
mov
push
test
mov
aad
ss
arpl
lret
jmp
or
fisttpl
xchg
pop
lea
fcos
enter
das
into
xor
or
cmp
add
xchg
cmp
inc
dec
inc
mov
xor
test
sub
mov
test
add
jo
jge
ljmp
cmpsl
scas
and
ror
add
sti
xchg
cmp
xor
js
jns
faddl
mov
pop
inc
dec
dec
mov
icebp
sub
push
das
cmpsb
sub
in
pminub
lock
leave
movsl
stc
push
sbb
inc
push
test
and
sub
out
mov
xor
and
xchg
push
sbb
scas
xchg
mov
add
push
xchg
mov
xlat
and
stos
mov
or
push
mov
cmc
cmp
loope
shrl
inc
mov
in
ficoms
addr16
pop
pop
lock
lret
lock
cmp
inc
cmp
rorl
les
cmc
movsb
mov
jmp
cmp
scas
popa
je
mov
pusha
fimull
aam
nop
insb
adc
pop
decb
sbb
sbb
les
int
and
imul
push
clc
shrb
xor
xchg
mov
mull
shlb
adc
pop
lret
rclb
dec
movsb
inc
enter
jnp
jecxz
sbb
ret
popf
push
pop
xchg
sbbb
mov
sti
push
push
mov
hlt
imul
mov
fdivrs
das
mov
xchg
loope
int
mov
xor
xchg
jae
pop
subl
and
fidivs
jo
out
sbb
mov
addr16
xchg
jp
mov
mov
test
enter
sub
loope
outsl
scas
xor
out
xchg
test
mov
fnstenv
daa
ljmp
cwtl
pop
push
scas
push
prefetch
or
fisubrs
shrb
ret
mov
xor
cmpsl
test
ficomps
pop
push
in
mov
repnz
scas
push
push
add
push
xchg
cmpsl
lret
sbb
ret
sbb
xor
or
mov
test
jge
repnz
inc
lcall
pushf
and
daa
cmp
cli
adc
cmp
inc
sbb
dec
test
es
add
jae
lahf
rcrb
pusha
xchg
fmull
dec
scas
mov
stos
std
mov
push
or
enter
pop
out
jns
xchg
in
mov
rcrb
mov
lea
daa
mov
adc
cmp
hlt
pop
add
addb
and
push
out
lret
fwait
std
push
mov
sti
fistl
in
pop
stos
dec
pop
pop
and
pop
lea
xchg
mov
js
cmp
mov
jno
push
jns
pop
lock
mov
cli
pop
rorb
aam
cmpsb
sub
and
pop
sub
out
pop
mov
fnstsw
pop
dec
add
or
mov
sbb
xchg
and
clc
sub
add
repnz
out
pop
iret
and
mov
ljmp
pop
cmpsb
jmp
sub
pop
lahf
or
mov
cli
or
sbb
ljmp
bound
xor
cmp
cmp
pop
adc
sub
je
push
jb
sub
mov
mov
inc
xor
cbtw
dec
or
ret
pop
aad
lret
fimuls
call
jmp
and
xlat
dec
cmp
cmpsl
dec
pop
lea
xor
push
pop
cmp
push
js
pop
sbbb
add
xor
xor
notb
mov
lods
je
cmpsb
adc
cld
loope
inc
fcomps
sbb
outsb
movsl
cli
add
push
icebp
push
pop
in
mov
or
add
std
push
ja
mov
faddp
push
mov
insb
call
fwait
mov
jae
and
lock
pop
mov
fcomps
cs
jb
cmp
xor
cmpsl
cmp
loop
stos
ljmp
pop
out
mov
jmp
mov
test
les
fwait
outsl
sub
mov
insb
mov
mov
mov
ror
sahf
je
rcr
cld
adc
std
das
outsl
xor
hlt
divw
loop
sahf
verr
push
mov
xor
xorb
mov
cltd
inc
iret
cmc
test
jne
cs
sub
out
sbb
rcrb
mov
fninit
int3
cld
cmpsl
add
lahf
je
inc
out
pushl
imul
jge
lahf
xchg
mov
repnz
pop
pop
and
dec
add
jns
inc
jmp
mov
cmc
or
jle
stos
aam
xchg
ret
push
xchg
int
pop
push
test
adc
cmc
xor
add
movsb
loop
iret
inc
adc
lods
and
scas
dec
sti
cmpb
jno
adc
mov
xchg
inc
cmpsb
call
jp
jmp
enter
adc
pop
fsubl
fwait
imul
sbb
jae
xchg
orl
pusha
in
imul
pop
or
push
pop
lahf
ss
jecxz
int
xchg
iret
mov
mov
add
xor
dec
sbb
mov
enter
call
fnstcw
in
icebp
je
sahf
cwtl
mov
scas
or
insl
or
jbe
sti
inc
ljmp
cmpsb
cmp
clc
dec
rcrl
scas
fmul
xchg
data16
insl
mov
test
inc
jmp
cmp
mov
pop
loope
jg
je
je
and
xchg
xor
jnp
loop
inc
push
je
popa
into
and
push
inc
push
mov
adc
fldcw
xor
insl
sub
inc
inc
push
inc
sub
dec
mov
jge
push
push
outsb
repz
movsb
int3
mov
dec
xchg
je
repz
xchg
xchg
adc
push
xchg
mov
int3
ficomps
shl
jnp
adc
movsl
cmpsl
les
jbe
fld
outsl
idivb
insl
mov
mov
adc
sub
out
add
js
aam
pop
popa
fists
mov
clc
and
in
mov
imul
xchg
lcall
xor
stc
fldl
repnz
cmpsb
mull
and
dec
add
cmpsl
adc
pop
out
out
les
imul
dec
ficompl
pop
mov
das
jg
clc
icebp
movb
fmuls
cld
mov
pop
pusha
dec
mov
and
call
inc
xor
cmp
in
pushf
repnz
rclb
mov
inc
lods
mov
je
and
mov
cwtl
popa
add
in
imul
dec
add
out
sbb
push
lods
push
stos
push
arpl
add
insb
pop
inc
sbb
inc
fidivl
fsubrl
cmp
xchg
fisubrs
cmp
push
sbb
ljmp
push
in
xchg
mov
shll
loopew
dec
push
gs
ja
mov
mov
sarl
add
cmpsb
push
shlb
hlt
cmpb
dec
sahf
hlt
jae
out
xchg
movsl
fnstsw
and
adc
cld
fisubrl
test
jecxz
xchg
adc
call
mov
filds
push
inc
xchg
add
sti
mov
into
hlt
push
push
cmp
dec
inc
inc
cmp
mov
stos
dec
out
call
mov
pop
stc
xor
xchg
inc
lcall
out
xor
xchg
dec
pop
lret
cmpsb
push
mov
sbb
roll
popf
xchg
pop
mov
ds
arpl
and
rorb
or
imul
mov
or
pop
or
aaa
mov
scas
popa
mov
xchg
jge
dec
sti
fisubl
les
sbb
imul
fdivs
and
jmp
adcl
push
mov
xor
imul
push
in
inc
inc
xchg
testb
jecxz
mov
arpl
cmc
inc
fisttps
imul
shlb
add
nop
movsb
js
inc
inc
jle
rclb
gs
jae
fidivrl
sbb
data16
scas
inc
ds
cmpsb
in
jle
add
lahf
sbb
shlb
fildll
rcrl
sarl
pop
daa
push
nop
mov
cmp
sbb
sub
arpl
sti
inc
test
andl
adc
mov
cvtpi2ps
add
bound
xor
sbb
loopne
ja
mov
imul
dec
cmovg
imulb
in
in
add
dec
inc
inc
jne
inc
ja
cmp
int
jmp
pop
jl
outsb
push
or
adc
cmc
lods
xchg
mov
jp
inc
add
cmp
inc
mov
pop
stc
or
jne
aam
adc
jecxz
fldl
inc
and
ret
pop
arpl
stos
dec
dec
lcall
sti
imul
sub
cmpsl
adc
pop
mov
mov
push
es
inc
sbb
js
xlat
jbe
and
cli
popf
scas
mov
jle
sbb
outsl
mov
sbb
cli
dec
pop
aaa
pop
cmp
mov
les
out
lods
mov
sahf
lcall
insl
and
lock
inc
mov
push
fimull
ficoms
ds
or
pop
mov
jnp
push
mov
int3
fmuls
sub
adcl
jmp
inc
add
in
jns,pn
inc
mov
sbb
cmp
xchg
inc
pop
and
andl
dec
popa
ret
pusha
xchg
push
pushf
inc
pop
push
xor
test
pusha
mov
mov
ror
dec
test
mov
mov
push
xchg
shll
in
jle
sub
inc
pop
test
push
cwtl
cmpsl
ret
and
jp
daa
stc
xchg
xchg
popa
sbb
jo
es
or
in
movsl
leave
popa
jecxz,pt
lahf
shl
icebp
pop
stos
popf
cltd
shrb
cli
inc
nop
repz
xchg
aam
mov
les
lock
cmp
adc
stos
leave
mov
jle
addl
shrb
sbb
xor
inc
loop
inc
loop
mov
mov
xorb
in
out
inc
cmp
stos
xchg
shlb
adc
dec
stc
lods
push
pop
movsb
mov
adc
ja
xchg
add
xorb
ljmp
sub
out
cmp
add
sbb
daa
sbbb
out
into
adc
shlb
sub
sub
push
cmpsl
adc
push
enter
sub
mov
leave
shlb
or
out
add
jecxz
adc
lret
mov
or
jg
dec
add
mov
outsl
xor
iret
pop
mov
mov
inc
jl
mov
scas
mov
jnp
daa
sbb
ffreep
adc
ficomps
jl
test
addb
push
aaa
fwait
lds
fdivrl
into
xor
add
sarb
xchg
arpl
pop
or
addl
lret
leave
and
push
adc
jns
cmp
rorb
add
bound
fdivs
cmp
xor
test
cmp
and
pop
cmp
test
sbb
push
mov
cmpsl
push
mov
dec
jno
push
call
add
sti
outsl
cmp
pop
aam
fstp
or
mov
sti
cltd
pop
pop
mov
mov
sti
adc
fdivrl
out
insb
testl
data16
add
in
adc
lret
loop
scas
xor
out
inc
int3
inc
ret
addr16
add
loopne
or
iret
push
popl
mov
xor
cmp
inc
out
cmp
mov
int3
pop
sub
pop
popa
inc
dec
enter
fsub
dec
pop
mov
ljmp
pushf
pop
pop
call
adc
js
fsubrl
xchg
rcrl
loop
arpl
nop
movsb
xchg
sub
sbb
lahf
cmp
push
inc
and
and
in
pop
mov
dec
sbb
ret
dec
cmpsb
icebp
addr16
sbb
push
cs
push
lock
mov
movb
int3
mov
js
jb
or
cs
imul
mov
push
sahf
and
or
inc
jb
adc
add
xchg
stos
in
loope
repz
pop
dec
push
add
sub
sub
ja
scas
nop
je
bound
mov
cs
adc
pop
push
inc
mov
push
add
imul
dec
adc
lea
popf
fnstsw
inc
fwait
cli
mov
shlb
popl
mov
xchg
push
fdivrl
mov
xchg
pushf
xchg
xchg
mov
xchg
cmp
dec
lods
bound
mov
sbb
mov
or
imul
dec
insl
dec
sbb
test
cli
lods
inc
dec
pop
mov
cmp
and
cmpsb
test
out
sbb
and
negl
jle
fsubrs
mov
xchg
pop
mov
shrb
jl
and
scas
cmp
xor
out
inc
jg
inc
call
sbb
xchg
aas
clc
arpl
dec
sbb
jle
xor
sub
lods
pop
xor
sbb
imul
cld
push
inc
int
fdivl
mov
sbb
and
stos
fstps
or
xor
scas
sahf
sbb
ret
xchg
ds
outsl
stos
xchg
mov
xor
lcall
ds
pop
xchg
out
dec
std
or
adc
sub
mov
jle
mov
jne
cltd
jl
ljmp
adc
jbe
adc
inc
mov
add
inc
jno
xchg
cld
lods
or
fnstenv
jnp
pop
lock
inc
addr16
push
insb
daa
mov
mov
mov
loope
jge
daa
loope
repz
in
mov
addr16
fs
cmp
mov
mov
push
inc
lock
cmp
xor
inc
sar
jp
ret
movsl
cmc
and
sub
mov
push
pop
loopne
add
adc
push
xor
lock
or
in
pop
inc
lea
pop
cltd
scas
frstor
pop
shrb
and
test
jbe
dec
enter
xor
and
mov
pop
outsl
ret
lret
xchg
mov
gs
push
mov
mov
in
rorb
sbb
gs
mov
sbb
push
pop
add
sbb
dec
cli
mov
enter
sbb
jbe
scas
dec
insl
jle
les
test
shll
cmp
pop
mov
cmp
mov
inc
mov
sbb
cld
clc
ds
test
jg
idivb
add
add
enter
lret
fdivrp
jnp
cs
mov
cmpl
and
iret
and
mov
je
xacquire
xchg
push
mov
imul
dec
inc
sub
scas
add
fldenv
icebp
rorl
fistps
loop
jmp
cmp
inc
movsl
push
push
pop
inc
sub
aam
xlat
dec
pop
push
test
imul
pop
xlat
push
dec
push
sti
sbb
push
lds
mov
sbb
cmp
push
adc
das
fisubrl
inc
lahf
addb
hlt
pusha
les
xchg
xlat
inc
shll
sub
add
nop
mov
xchg
nop
mov
sbb
pop
mov
jge
or
repz
int3
pop
push
xchg
jmp
je
frstpm(287
rclb
stc
test
sub
xchg
std
and
push
hlt
mov
iret
fnstenv
out
mov
scas
lahf
pop
fs
add
outsb
les
in
in
jns
inc
lds
enter
bound
outsl
jnp
mov
pop
stc
cmpsl
sbb
mov
jb
mov
add
out
stc
pop
pop
adc
cmp
cmp
dec
jecxz
and
int
jb
enter
dec
sbb
xchg
xchg
and
cwtl
push
jns
fmull
ja
popa
ljmp
notb
cmp
sbb
inc
inc
mov
inc
ljmp
sub
fwait
push
fdivp
adc
inc
divb
inc
inc
mov
inc
cltd
aad
jb
ljmp
daa
cld
dec
fists
cmc
adc
jl
pop
jmp
gs
lret
into
cmp
clc
add
mov
pop
mov
lret
adc
push
roll
int3
js
js
mov
adc
iret
out
sub
cmp
add
sub
sub
add
stc
enter
push
insl
push
pop
in
adc
iret
std
xchg
mov
and
mov
xlat
fsubp
loop
or
repnz
jmp
and
pop
stos
scas
lods
or
stc
push
int3
xor
rorl
mov
lock
push
sbb
and
insl
or
sahf
xchg
push
dec
and
mov
pop
inc
add
aad
jnp
cli
jmp
sbb
jle
daa
cmp
sti
out
popa
and
mov
aam
insl
add
punpckhwd
sahf
nop
push
mov
or
cmp
and
ret
jl
mov
fildll
fsubrs
sub
ss
mov
mov
lods
mov
sbb
mov
xor
jp
add
stos
mov
test
and
int3
xlat
push
cmc
and
rorl
popa
aaa
sub
adc
loopne
gs
pushf
shll
mov
sbb
xor
sub
rcll
push
or
pushf
pop
int
jl
pop
jnp
rorl
loop
sbb
xchg
aam
rcr
sarb
stc
mov
mov
or
push
mov
movsl
aaa
loope
dec
xor
dec
xor
mov
xchg
push
sub
shlb
js
fwait
and
sti
xor
inc
insl
adc
shll
mov
pop
jge
inc
lds
xchg
add
dec
jecxz
sub
jo
scas
movsb
clc
push
std
les
mov
sbb
cmpsl
push
das
add
adc
or
push
pop
imul
jg
insl
pop
sahf
cmp
cmpsl
pop
dec
clc
loopne
sbb
or
mov
jmp
pusha
sub
ss
cmpsl
xor
stos
mov
xchg
cli
popa
push
mov
loop
js
xchg
mov
push
idivl
or
mov
or
lahf
and
mov
mov
aad
sub
loopne
je
into
fisubrs
aas
lds
cwtl
mov
push
xor
push
xlat
adc
loopne
jnp
push
pop
inc
popf
jne
test
jno
xor
mov
lods
inc
lock
shll
adcl
jp
jecxz
inc
cmp
pop
mov
mov
pushf
and
pop
xchg
in
sbb
mov
inc
outsl
fisttpll
xchg
insl
cltd
fisubrl
adc
sbb
lret
mov
icebp
frndint
dec
jp
xchg
inc
das
test
inc
mov
clc
mov
push
xor
sub
push
push
hlt
jge
jg
sbb
jae
adc
cld
pop
aaa
or
data16
lock
mov
mov
and
mov
jg
inc
stc
cmc
mov
jmp
ret
in
push
icebp
gs
std
inc
movsl
adc
shll
lods
sbb
pop
dec
test
mov
pop
clc
inc
jmp
dec
push
sbb
xor
testb
cmp
das
fisttpl
add
pop
scas
and
into
inc
xchg
aas
test
cmp
hlt
ljmp
adc
xor
mov
xchg
sub
test
repz
xchg
lods
lret
pop
or
cmp
sub
outsb
jns
bound
movsb
mov
out
loope
lods
mov
lods
out
jbe
clc
pop
into
test
jne
inc
cmp
gs
movsl
xor
out
sub
sbb
movsl
and
scas
lea
push
or
xchg
fsubrl
pop
add
dec
andb
push
and
sbb
aas
cmpsb
test
lret
jnp
jnp
xor
negl
xor
clc
xor
jl
sub
pusha
mov
stos
ret
std
jo
into
jb
jne
sbb
pop
ret
hlt
jmp
out
jbe
mov
fstl
mov
out
testl
push
push
jmp
cmpsl
mov
xor
dec
adc
lret
push
jp
xor
mov
xchg
push
mov
jmp
xchg
mov
push
shll
jecxz
test
dec
mov
inc
mov
adc
sbbb
pop
pushf
imul
mov
pop
shll
dec
aam
clc
outsl
mov
outsl
pop
mov
xor
mov
subb
nop
popa
in
mov
mov
repnz
in
in
addl
lret
xchg
sbbb
mov
mov
lret
sbbl
repnz
add
ja
adc
repz
outsb
push
mov
lds
shll
frstor
ds
aam
fidivrs
and
or
fldt
xchg
jbe
je
hlt
hlt
lret
mov
pop
dec
mov
pushf
fdivl
mov
and
jp
jmp
or
imul
stc
lahf
loop
out
push
jg
stos
push
ret
test
loope
fwait
sti
mov
xchg
push
push
push
hlt
push
adc
test
gs
jns
or
mov
scas
inc
sub
inc
adc
xchg
push
mov
add
imul
mov
lcall
mov
sbb
xorb
sub
rclb
mov
or
jne
dec
ljmp
xchg
or
mov
sbb
or
mov
in
sbb
or
jg
movsb
add
jmp
cmp
sub
sbb
jne
repz
fimull
inc
pusha
hlt
push
sbb
cmp
int3
mov
out
insl
lock
int3
not
adc
ret
add
and
adc
inc
enter
out
dec
sub
test
repnz
push
loop
xchg
sbb
add
in
jl
leave
xchg
stc
movsb
ja
and
scas
dec
stc
cmp
test
xchg
mov
dec
jge
xchg
adc
test
mov
idiv
sbb
ret
call
gs
sbb
push
push
popf
mov
cmpsl
sbb
fidivl
push
adc
js
sarl
in
mov
icebp
push
fidivrs
sbb
leave
xchg
fs
jg
gs
gs
aaa
jge
push
insb
jp
and
pop
xchg
mov
sub
fcomps
adc
insb
or
sub
mov
xor
ds
or
pop
push
lods
xchg
xchg
mov
push
std
mov
repz
sub
negb
arpl
jg
stos
jl
xchg
test
dec
test
and
gs
imul
xor
jmp
clc
ss
sub
push
test
cmp
push
add
cwtl
mov
call
cmp
pop
and
mov
in
mov
inc
jp
mov
lret
in
bound
fildl
test
mov
cltd
rcr
ljmp
xor
dec
pop
and
popf
inc
fdiv
bound
in
adc
daa
jno
movsb
sub
xchg
dec
in
mov
mov
adc
fs
rclb
inc
pop
jnp
stc
sub
xor
lret
test
js
repnz
mov
xchg
lret
popf
jb
iret
cltd
cmp
adc
jb
shll
pop
imul
mov
mov
adc
adc
jl
fcom
stos
aam
cmp
sub
hlt
scas
or
mov
popf
lds
xchg
mov
xchg
sub
pop
cmp
outsl
mov
shl
addl
cmpsb
jmp
jle
cmp
push
js
jmp
cld
inc
sti
out
iret
insl
int3
pop
or
das
test
ret
aas
xchg
jne
add
xchg
mov
out
ror
mov
stos
jp
jp
sahf
fstpt
or
in
aam
fmul
jb
mov
push
jo
or
xchg
aad
inc
pop
clc
or
sub
xor
ret
lea
aam
in
mov
cld
sbb
xchg
sahf
sbb
pop
push
mov
adc
aas
lods
scas
outsb
xor
cmc
loope
imul
loope
mov
xchg
or
add
imul
stc
aad
dec
cs
xor
sbb
iret
in
ss
xchg
push
shr
loopne
mov
ss
lret
out
das
or
addr16
ja
fldl
adc
or
inc
xchg
fcomip
test
sbb
notl
incb
movsb
adc
scas
inc
test
std
or
insl
jl
out
cmp
loope
sbb
mov
or
add
jg
sbb
or
fsubl
shr
dec
aad
sbb
dec
mov
in
lret
inc
and
xor
cltd
lds
test
xchg
and
jmp
add
xor
sbb
test
andl
mov
ret
in
divb
mov
fs
mov
daa
popa
movsb
xchg
enter
paddb
pop
fwait
out
sub
adc
and
daa
cmp
cmp
jge
insl
sbb
ljmp
rorl
ja
xchg
fcoml
pop
jg
sub
cltd
mov
jmp
iret
or
lea
fucomi
pop
adc
loopne
cli
dec
int
loopne
gs
cmc
gs
pop
cmpsb
cmp
inc
loop
or
inc
jae
pop
xchg
xor
and
pushf
repnz
and
mov
xchg
push
jl
dec
bound
aad
pop
loopne
and
cmp
je
jb
adc
fadds
or
push
daa
mov
cmp
pusha
jl
mov
and
push
pop
movsb
cmp
push
xor
js
pop
vpackuswb
int3
loope
pusha
add
daa
jno
rorl
movsb
repnz
shr
popa
xor
into
out
loop
cmpsl
mov
in
rcll
xchg
push
cli
push
mov
movsb
fsts
nop
xchg
xlat
xor
mov
das
lahf
sub
jo
dec
sbb
rol
sub
mov
lret
mov
mov
fcmovu
push
jmp
and
or
push
mov
daa
pop
out
xor
push
lods
repnz
push
enter
mov
in
loopne
add
sub
sub
fs
xor
and
in
frstor
out
adcl
mov
int
repz
outsb
rorb
mov
test
jg
push
movsl
cs
test
fnsave
xchg
cmpsb
cmp
icebp
rolb
sti
sbb
pop
neg
sub
cltd
push
cwtl
aaa
mov
hlt
add
enter
pusha
jle
test
je
fnstcw
push
repnz
inc
add
leave
insb
pop
insb
out
add
dec
lcall
test
cld
aas
mov
sbb
in
hlt
add
and
pushw
cmpsl
adcl
sub
in
xlat
add
push
mov
loop
test
inc
aaa
cli
push
cmp
sti
mov
jne
adcl
push
lcall
cli
sti
ljmp
loope
dec
dec
mov
pop
lcall
mov
sbb
dec
ja
fildl
adc
es
nop
jbe
cmp
lret
adc
mov
out
or
call
in
int3
loopne
popa
ljmp
xchg
push
mov
sub
jp
jno
int3
cmp
xchg
mov
mov
aad
mov
out
cmp
fisttps
pop
es
push
sbb
lods
mov
inc
test
sub
xchg
adc
lods
or
sbb
inc
inc
xchg
adc
xchg
add
xlat
vmwrite
lods
mov
mov
push
push
jmp
inc
and
dec
mov
aam
add
or
cld
bound
pop
in
stc
sub
mov
sub
fiadds
xor
adc
or
shrl
fiadds
fiaddl
sub
and
adc
stc
jb
sub
push
pop
stos
xor
daa
or
sbbl
pop
int
sbb
pop
outsb
fsts
orl
pusha
mov
call
daa
adc
aam
mov
sbb
mov
das
mov
jns
or
push
inc
sbb
jg
pop
adcl
sub
cld
mov
jb
and
sub
stos
insb
push
in
jge
into
lret
iret
xchg
ret
mov
mov
mov
cmp
mov
dec
call
and
or
rol
in
add
jno
ret
jne
lods
mov
rcrl
sahf
daa
mov
mov
clc
or
addl
dec
in
jae
les
dec
out
pusha
xlat
push
adc
aas
fwait
lock
roll
xchg
cmp
shll
jb
adc
lret
popa
pop
mov
jp
xchg
lret
inc
mov
or
shrl
cmp
bound
push
repnz
rcr
sbb
cld
out
loopne
sbb
lret
adc
les
and
mov
sbb
sahf
in
daa
xchg
std
vpsrlw
movsb
sbb
test
sbb
ss
aam
pop
adcl
xor
add
lret
test
stos
pop
inc
pop
lods
sahf
outsl
in
cwtl
lcall
mov
sbb
stos
mov
ret
int
fwait
outsl
jmp
int
jns
dec
ja
mov
inc
das
je
js
inc
mov
xor
out
sub
mov
xor
mov
push
mov
ret
andb
sahf
inc
xor
lret
mov
icebp
cltd
mov
and
push
pusha
movsl
test
push
sbb
jge
add
inc
cmp
xchg
jne
jno
mov
mov
push
rorl
sarl
bswap
mov
mov
dec
mov
js
mov
les
stos
pop
in
mov
ss
adc
fs
shrb
sbb
mov
or
pop
jmp
dec
ja
inc
push
test
or
mov
insl
dec
jle
xlat
nop
js
lods
inc
enter
cmpsb
int
dec
cltd
jmp
jmp
push
xchg
iret
pop
pop
and
loop
mov
xchg
sub
leave
mov
jns
dec
pop
cli
push
mov
call
mov
lahf
iret
jb
outsb
jp
clc
clc
fwait
jns
cmp
dec
pop
push
mov
imul
loopne
push
lret
aas
cltd
popa
aaa
pusha
jle
fbstp
daa
xor
and
xchg
pop
push
ja
push
pusha
shlb
adc
insb
pminsw
sahf
mov
xchg
dec
adc
icebp
pusha
add
add
or
in
dec
ss
enter
enter
js
mov
mov
aad
cmpsl
cmp
mov
insb
and
sub
in
testb
imul
dec
cmp
cld
in
int3
mov
xchg
ret
enter
push
cmpsl
lock
bound
xchg
cwtl
jno
sub
sub
inc
push
xchg
or
pop
imulb
cmp
lds
cmpsl
mov
clc
in
iret
xor
mov
fs
aaa
out
cmp
push
xor
adc
adc
xor
out
sbb
and
iret
sbb
push
mov
sbb
adc
arpl
les
and
mov
insb
sub
add
rcr
repnz
bound
push
mov
repz
jl
leave
into
rorb
mov
icebp
fldcw
movsb
sbb
inc
movsl
sub
not
and
cmpsl
cmc
shll
mov
sub
mov
mov
sub
jae
jmp
test
sahf
push
ljmp
sbb
jle
in
pop
pop
mov
inc
mov
in
cmc
inc
push
sub
imul
add
insl
icebp
test
hlt
or
scas
mov
aad
or
pop
xchg
mov
gs
sbb
or
testl
cmpsb
mov
jns
fwait
cmp
or
pop
and
icebp
pop
mov
mov
lds
dec
aad
int3
dec
mov
mov
leave
shll
popa
adc
jl
rcl
dec
orb
divb
mov
and
adc
or
int3
filds
add
shl
or
or
xchg
or
sub
subps
in
pop
sbb
test
cmpsb
insl
push
cmp
sbb
add
push
or
pop
sbbb
lock
dec
xor
mov
sbb
scas
out
inc
cmp
xor
mov
pop
pop
bound
cmp
mov
cmp
cld
xchg
imul
in
mov
cmp
cmp
sti
mov
lods
popf
cmp
or
inc
jge
cld
leave
lret
aaa
nop
and
jmp
dec
lds
mov
pop
gs
icebp
mov
rclb
cmp
xlat
mov
and
fwait
jo
aad
mov
stc
jecxz
inc
pop
out
adc
dec
mov
push
stos
loopne
jcxz
or
rorl
adc
xor
js
mov
gs
lea
mov
add
or
sbb
cmp
fnsave
cmpl
sahf
mov
into
pop
or
xchg
mov
mov
popa
inc
je
scas
bound
out
cmp
icebp
dec
ljmp
iret
jmp
test
lods
dec
lock
jb
add
jne
mov
cmp
and
jle
out
jns
pop
dec
cmp
int3
cli
push
std
lock
fidivl
mov
xchg
sbbb
fwait
xor
xor
ret
jae
push
xor
xchg
mov
cs
outsb
inc
jbe
jp
pop
jecxz
push
push
cmp
pop
xor
aad
fdivrl
jl
inc
sbb
jo
in
xor
push
dec
mov
mov
js
xchg
push
inc
ss
pop
pop
xor
leave
mov
mov
fimull
orl
cli
mov
push
imul
popa
pop
roll
pop
or
test
pop
std
xlat
or
test
pushf
adc
pop
mov
adc
es
and
xchg
sub
mov
inc
jl
sub
hlt
sub
cltd
sbbb
adc
out
ja
mov
std
cmp
mov
jecxz
mov
add
jo
in
push
dec
cmp
popf
xchg
mov
pop
pop
add
lahf
mov
push
xor
or
jmp
jno
adc
mov
lret
test
sub
sbb
iret
dec
push
bound
jl
ss
jg
std
pusha
mov
and
add
dec
outsb
aaa
outsb
das
mov
pop
mov
in
xor
push
lcall
xor
andb
cmp
mov
test
xchg
hlt
xchg
push
xor
fwait
xor
dec
gs
fbstp
loope
and
mov
mov
add
pusha
loope
bound
and
je
orb
fstp
mov
xor
jle
push
xor
push
push
les
jl
pushf
bound
shll
lret
cmp
aam
xor
cmp
leave
mov
testb
sbb
pop
sub
test
adc
fldenv
loopne
jmp
in
testb
xchg
es
ret
sub
jo
mov
jge
sbb
jne
xlat
int
testl
mov
push
movsb
lods
inc
test
mov
jmp
bound
xchg
cltd
jbe
dec
and
ja
jle
aaa
jmp
aam
mov
iret
push
aad
mov
adc
jb
clc
xchg
jg
jne
stos
push
movsl
clc
int
in
mov
inc
xchg
pop
imul
jp
repnz
pop
cmp
mov
cmp
fmuls
and
test
pop
cltd
pop
mov
test
popf
sbbl
push
and
jge
pop
cmpsl
xor
sub
mov
push
inc
jle
jg
sbb
jmp
push
clc
outsl
inc
sbb
and
arpl
sub
pop
fdivrl
nop
adcb
mov
jmp
xchg
xorb
aam
outsb
hlt
daa
movb
xchg
divb
aas
movsb
mov
ret
xor
dec
andl
push
xchg
jo
push
push
jg
jb
dec
shlb
or
ds
fiadds
fdivs
out
xor
jge
test
into
ja
or
popl
xor
push
adc
inc
lcall
into
sub
cltd
mov
repz
aam
cmp
sub
fwait
mov
lods
pop
mov
jp
push
mov
push
in
cmp
in
inc
or
mov
xchg
call
out
and
add
and
cmp
mov
adc
sahf
repz
jmp
jo
int3
in
push
aaa
movsb
xchg
loope
sub
mov
das
mov
mov
aaa
sbb
lods
lret
test
lods
enter
out
add
lret
loop
and
mov
mov
pop
mov
mov
fisubrs
push
sub
adc
jp
mov
data16
pushf
mov
pop
jno
icebp
adc
pop
mov
mov
mov
in
pop
fcomps
cmpsb
mov
lcall
rolb
mov
sahf
std
xchg
mov
jae
aas
jne
ss
inc
jbe
scas
sbb
inc
lods
stc
aas
push
adc
rcrb
das
sahf
cltd
xor
or
lret
jae
jae
xor
add
addl
cltd
test
out
ret
hlt
ljmp
dec
je
push
int
in
or
pushf
cmp
shrb
testb
cmp
call
ds
lods
in
mov
and
inc
fwait
stc
add
pushf
dec
fisubrl
and
je
jg
fdivrs
jl
sti
xor
sbb
inc
test
mov
jmp
cmp
cmp
adc
fcmovne
jge
dec
data16
lret
xlat
adc
mov
ret
iret
lods
mov
xor
pop
dec
sub
dec
pop
inc
daa
mov
test
aam
pop
hlt
xlat
jmp
pop
pop
cmp
pop
jle
int
dec
rcr
fwait
into
push
sub
cli
xchg
mov
outsl
in
fdivrs
mov
in
int3
mov
cmp
mov
mov
int
aas
test
aad
push
mov
scas
and
test
loopne
test
mov
jae
sti
int
test
setns
cltd
adc
adc
jae
push
lahf
test
mov
pop
xor
pop
push
subb
pop
psubusw
ret
sbb
xor
stos
je
add
mov
dec
call
repz
pushf
inc
loop
inc
sti
xchg
push
adc
sub
loop
in
dec
daa
jb
loop
fnstsw
and
ja
sarl
repnz
push
inc
adc
xor
mov
notb
sbb
xor
mov
popa
outsl
push
popf
incl
cmp
fmull
pushf
jb
jo
inc
ja
or
or
ficompl
icebp
or
fdivrs
ret
cs
aam
pushf
pop
pop
mov
imul
scas
sub
fsts
mov
sbb
and
into
mov
xor
xor
popa
andl
idivb
sbb
cmp
andb
pop
xor
dec
call
aaa
mov
cmovs
test
fistl
repz
stos
pop
mov
mov
adc
xchg
push
cmp
mov
xchg
loope
cltd
scas
inc
inc
xchg
ljmp
mov
dec
add
xorb
sub
xchg
push
out
push
dec
adc
scas
test
jb
cmp
adc
icebp
ret
gs
aas
jg
repz
mov
stc
test
mov
popa
fs
lcall
or
xrelease
aam
enter
or
rorl
jbe
mov
push
mov
pusha
or
dec
inc
jbe
scas
insb
push
push
dec
mov
adc
fidivl
mov
cmp
leave
fucomip
adc
das
stos
mov
push
mov
jl
mov
push
imul
pop
mov
cmp
insl
mov
in
sbb
lahf
push
aam
dec
scas
mov
ss
cmp
dec
push
push
loop
hlt
scas
sub
jmp
xor
mov
roll
mov
mov
jae
test
je
sbb
adc
insb
ja
lahf
mov
imull
mov
cmp
in
adc
cmp
cmp
jnp
mov
scas
sbb
jmp
sub
sbb
adc
pop
lret
divb
je
mov
icebp
pop
fcompl
and
adc
xchg
sti
lock
nop
test
notl
mov
sub
mov
push
shrl
or
jecxz
pusha
loopne
sar
pop
out
popf
push
jae
xchg
adc
test
xor
push
mov
jae
jl
hlt
fistps
push
mov
jnp
add
cmp
mov
sub
push
lahf
pop
and
subb
ja
sti
scas
lods
cmp
pusha
in
mov
aam
dec
rorb
daa
sub
into
sub
das
mov
rolb
call
dec
cmpsl
daa
mov
add
fwait
and
mov
adc
mov
lock
fcompl
jmp
jmp
ret
dec
and
fstpt
xor
push
int
stc
call
mov
fs
inc
ret
jnp
dec
loope
insb
rcll
pusha
cltd
pop
jo
sub
in
add
into
dec
sbbl
leave
fcmovu
fisttpll
dec
call
leave
inc
loop
ja
mov
or
mov
scas
nop
xchg
inc
xor
pop
xchg
jae
lock
pushf
fs
inc
and
out
fnstsw
sub
incl
jl
and
pop
pusha
sbb
aam
inc
xchg
outsb
pop
int3
mov
fcoms
fcom
ficoms
adc
ss
fstl
cmp
dec
jne
push
imul
int
mov
ret
cmp
dec
cwtl
ss
filds
test
inc
xchg
sbb
inc
dec
fimuls
mov
mov
inc
xlat
inc
or
xchg
jno
sbb
div
or
adc
in
push
push
or
inc
push
jl,pn
inc
arpl
inc
mov
dec
idiv
xchg
jb
rolb
inc
movsl
and
push
sbb
sbbb
add
mov
test
nop
cs
dec
bound
pop
mov
mov
cmpsl
mov
fnstcw
popf
stc
test
xchg
jecxz
dec
orb
adc
jne
xchg
lcall
aam
push
mov
int
xchg
add
jecxz
add
xor
sub
jno
incl
gs
aad
cmp
movsb
lds
pop
imul
in
xorl
sub
in
mov
cmp
mov
aas
sbb
lret
into
pop
mov
push
jno
jno
and
stos
add
les
mov
in
or
pop
add
dec
bound
mov
lods
mov
dec
sahf
dec
in
loop
hlt
outsl
lds
stc
xorl
out
aas
mov
mov
or
add
lea
popa
xlat
aaa
xchg
inc
xchg
mov
out
add
scas
sub
adc
inc
sub
call
out
xchg
cli
cmp
int
es
xchg
imul
fldcw
sub
aad
aam
mov
xor
mov
aam
test
daa
rclb
jbe
pop
rcl
push
aam
dec
cli
popf
fscale
insl
cs
arpl
sti
xor
jne
lds
lds
je
push
movsl
inc
jl
repz
add
mov
movsl
mov
push
jo
scas
dec
jae
jnp
xchg
mov
iret
dec
mov
inc
out
imul
adc
lds
cmp
pop
dec
adc
adc
xchg
adc
repz
inc
addr16
loopne
mov
shlb
outsl
dec
lahf
and
jb
ja
fadds
stos
es
or
mov
mov
mov
xchg
xchg
push
test
clc
ret
inc
test
cs
and
ret
icebp
jmp
cmpsb
mov
mov
bound
sub
or
mov
and
push
sahf
jnp
dec
btl
cmp
rorb
orl
sbb
xor
imulb
hlt
push
push
pop
fildll
mov
gs
movsl
test
jnp
add
add
dec
xchg
pop
or
mov
mov
ret
mov
dec
push
test
push
sub
es
out
jecxz
xchg
mov
stos
add
leave
or
sub
push
psrad
aaa
jl
mov
mov
pop
or
stos
dec
popa
fwait
push
cli
jnp
xor
sbb
divl
pop
xchg
mov
inc
adc
add
or
pop
mulb
or
and
lret
jmp
cmpb
or
mov
dec
movsb
iret
ljmp
out
or
fwait
and
jb
jp
cmp
sub
push
addb
bound
aad
jae
test
aas
jbe
and
int
lds
lret
sub
sahf
xor
dec
cltd
or
out
fisttpll
shrl
movl
add
pop
mov
xor
pop
dec
idiv
out
sub
ds
xlat
and
rcrl
jb
push
in
ljmp
dec
shlb
lret
xor
rclb
dec
out
loopne
nop
xchg
insb
fbstp
fcomps
aam
ficoms
fiadds
adcb
cmp
dec
inc
dec
stc
ret
mov
out
nop
sbb
int
jge
or
xchg
or
dec
loop
in
orl
add
and
popl
aad
in
lahf
iret
cmp
hlt
cmp
and
cmpsl
cmp
pop
ret
addr16
stos
insl
scas
mov
pop
xchg
in
aam
dec
scas
mov
lret
mov
lods
mov
stc
push
jecxz
jno
add
sub
sbb
or
mov
out
scas
test
pop
mov
push
faddp
insl
push
pushf
mov
jnp
cmp
pop
lea
mov
mov
hlt
int3
xor
xchg
pop
test
fucomi
push
gs
in
push
push
js
push
notb
test
cmc
fistl
cmp
decl
loopne
xor
mov
in
je
hlt
pop
loope
sub
inc
mov
loope,pt
loop
addr16
mov
xchg
fisttps
jp
in
mov
inc
aad
clc
ljmp
push
jge
adc
ret
test
xchg
mov
lea
andl
mov
fsubl
push
je
mov
jmp
push
ja
mov
sbb
add
mov
cmp
movsb
xchg
shlb
inc
push
xor
sbb
nopl
xchg
xchg
xor
shll
in
pop
lock
lds
out
mov
or
popf
inc
pop
mov
and
out
test
jle
popa
xorl
ljmp
pop
sub
and
push
sbb
and
adc
and
inc
cmc
mov
hlt
cmpsb
fs
pop
lret
sahf
add
push
pop
loope
out
ret
inc
fidivrl
clc
mov
inc
push
xchg
mov
sub
test
xchg
xchg
pop
stc
add
push
xor
iret
and
popf
dec
outsb
inc
ljmp
lock
into
cli
jp
mov
or
call
sub
pop
inc
neg
xor
cmpsb
mov
arpl
sbb
pushf
xlat
bound
aas
mov
shlb
mov
sahf
scas
and
pop
aam
sub
dec
pop
or
inc
jbe
gs
jg
rclb
rolb
xchg
inc
adc
mov
add
mov
ds
fucomi
inc
insb
in
mov
hlt
push
rorl
cmpsb
out
jne
pop
lret
lds
std
cmp
sbb
push
xchg
cmc
jp
add
lods
sbb
xchg
cmp
icebp
xchg
dec
xchg
or
jo
lods
mov
jg
jle
cmp
test
insl
shrb
jmp
fwait
mov
sbb
bound
jle
rcll
and
cwtl
adc
cmpsb
push
into
bound
inc
lea
in
push
cmp
and
orb
push
lods
pop
mov
mov
pop
xchg
jg
data16
stos
imul
decl
jbe
mov
ficompl
in
xchg
push
nop
push
or
cmc
ret
push
pop
lret
jmp
aas
test
out
fnsave
int
mov
mov
mov
psubusb
cs
xor
imul
and
mov
rolb
xchg
xchg
shl
andl
sbb
push
sbb
xor
cmp
push
adc
fs
jge
hlt
enter
or
lret
pushaw
pop
lock
fidivrs
test
pop
jle
jp
fsubr
cmp
push
jnp
data16
test
das
sti
mov
gs
test
loope
sbb
mov
movhlps
repnz
mov
or
jecxz
cmp
push
andb
out
adc
pop
in
es
lcall
outsl
daa
and
pop
insl
sti
sub
hlt
sbb
or
inc
cmp
jle
mov
jo
pushf
xchg
fbstp
outsb
dec
call
adc
mov
out
out
jp
movsb
xor
pop
adc
pusha
bound
roll
int3
repz
pop
xor
out
sub
fwait
pop
mov
push
and
dec
rol
adc
dec
xlat
bound
das
cmp
mov
pop
jno
push
std
orb
and
pop
int3
mov
add
int3
incl
cwtl
out
mov
lods
cmp
loopne
test
push
fdivl
fwait
insl
jo
cmp
pop
push
in
sarl
inc
and
mov
out
imul
lds
insb
jle
jns
mov
xchg
das
popl
pop
data16
sbb
ja
mov
push
mov
cmpl
mov
xchg
cmc
push
dec
fldln2
cmpsl
mov
jae
sbb
jmp
addl
rclb
popa
adc
jmp
test
fs
fiaddl
mov
sub
sbb
push
pop
lods
cmp
daa
ds
out
inc
test
sub
loope
mov
or
dec
cltd
push
rcll
or
push
adc
or
mov
lret
jg
shll
mov
std
popf
in
dec
jge
loop
pop
jmp
insb
imul
lods
adc
push
and
loope
test
add
jge
and
leave
mov
mov
jae
lods
out
call
outsb
icebp
aad
jne
movsl
push
lock
fmuls
aaa
int
daa
sub
mov
into
push
loopne
xchg
popa
aas
ret
ja
test
rclb
xor
mov
xor
jl
push
inc
pop
cwtl
or
mov
ja,pt
push
mov
test
sbb
out
idivl
mov
in
xchg
aad
pop
adc
sub
das
pop
add
ret
sub
lea
stos
jns
mov
pop
adc
push
cmp
mov
mov
gs
mov
orb
orb
arpl
aas
cmp
mov
sub
movsl
sahf
xor
sub
push
push
stos
mov
int
lcall
jb
dec
jge
push
in
xchg
aaa
cmp
fwait
push
jne
int3
push
add
sub
in
mov
es
sbb
xchg
iretw
xchg
jnp
aaa
or
xlat
popf
outsb
dec
inc
jecxz
jle
loopne
add
xor
or
ljmp
repz
sbb
rcrl
cmp
es
dec
dec
jo
dec
stc
orps
push
lds
mov
test
xchg
push
adc
cmp
fisubs
adc
sahf
sarl
dec
sbb
sbb
sbb
movsb
les
add
xlat
jno
push
or
jge
outsl
jo
adc
call
imulb
add
or
rep
rclb
mov
sbb
mov
fnstsw
adc
ja
loope
cmc
xor
in
jns
jno
fildl
jp,pt
leave
bound
aaa
rcl
pop
or
jle
gs
dec
fdiv
adcb
mov
cmp
push
xor
fsubp
lahf
mov
sub
iret
inc
and
gs
in
xor
sbb
add
add
int3
sub
hlt
and
jae
js
je
outsb
loop
mov
fwait
or
jecxz
mov
xor
aam
cld
imul
repz
out
inc
cwtl
mov
in
xchg
jp
ljmp
fisttpl
inc
and
dec
aam
movsl
add
imul
pop
mov
and
push
fdiv
ret
sub
int3
pop
and
cli
mov
mov
imul
loope
sub
fbld
jno
xchg
inc
out
enter
fwait
les
icebp
push
push
xchg
scas
add
inc
out
stos
jb
cmp
dec
push
in
aas
scas
xor
xchg
int
repnz
aaa
jno
mov
jb
fidivrs
sub
rorl
insb
lock
sub
xchg
sub
jp
movsl
incb
aam
cmp
adc
testl
xorl
ljmp
xor
jbe
mov
inc
rep
out
jb
sub
or
sti
es
sub
inc
fidivrs
adc
xlat
rcl
xchg
imul
fnstsw
jecxz
push
js
mov
mov
bound
loope
loopne
pop
cmpl
cmp
adc
repnz
iret
stos
jge
or
dec
cli
ja
jle
out
insb
xchg
jecxz
fldcw
xor
dec
xchg
fbld
pop
std
enter
jp
mov
push
and
pmaxub
dec
mov
aad
fwait
cmp
fldl
push
xchg
stos
mov
roll
and
dec
push
arpl
inc
icebp
sbb
add
and
ss
shll
ljmp
push
loopne
leave
jno
sbb
stc
test
cld
in
jge
cmp
ret
and
lea
add
mov
cltd
xor
mov
inc
xchg
ficompl
xchg
add
fsubr
cld
arpl
ret
rorl
mov
icebp
imul
and
xorps
mov
inc
aas
adc
fstps
mov
jge
rcrl
movsl
jmp
jns
jl
outsb
stos
dec
popa
push
lods
jecxz
jmp
ret
cmp
cwtl
mov
inc
dec
iret
cwtl
icebp
sub
popl
cmp
movsl
hlt
adc
popf
imul
adc
cmp
add
dec
push
dec
dec
adc
sbb
lods
pop
push
cmp
mov
push
dec
std
call
leave
inc
int
fnstsw
lret
dec
jge
adc
int3
xchg
mov
xchg
jo
je
stos
sahf
and
push
fldl2t
mov
xadd
loop
xchg
icebp
adc
xchg
lock
stos
mov
enter
call
adc
cltd
lahf
daa
je
bound
and
dec
popa
dec
iret
jbe
cwtl
movsb
test
dec
movsl
push
outsb
addb
and
fld
loop
mov
shr
pop
mov
xlat
xlat
gs
scas
push
mov
in
out
push
fsubs
into
adc
mov
dec
jecxz
add
mov
push
inc
jp
dec
pusha
push
xor
sub
lcall
in
lock
popa
pavgb
in
xchg
aaa
mov
std
fmuls
mov
mov
adc
movsl
xchg
fwait
adc
pushf
pop
insl
bound
jo
das
enter
push
push
cwtl
xor
jecxz
sbb
dec
rolb
int3
aas
iret
frstor
push
cmc
out
aaa
dec
xor
and
inc
jns
jp
push
mov
outsl
dec
mov
adc
shrb
popf
sub
or
jbe
push
jne
cltd
sahf
es
push
cmp
xchg
ret
out
in
push
lods
mov
lods
fnstcw
jge
or
push
and
cmp
sbb
jecxz
add
sbb
mov
in
xchg
repnz
test
and
fdivp
repz
cwtl
rorb
push
jae
cmp
push
push
xchg
out
or
das
inc
push
jnp
repnz
jno
sub
inc
adc
aam
ficomps
lods
dec
shlb
pop
in
stos
arpl
pop
rcll
stos
mov
scas
notb
push
cwtl
add
jo
clc
cmc
inc
rclb
popf
testb
or
adc
cmp
nop
dec
cli
xor
jnp
xlat
cli
jbe
das
cmp
sub
notl
cltd
push
mov
jno
movsb
jb
mov
cwtl
sbbb
gs
adc
xchg
xchg
mov
sbb
scas
and
jns
aaa
mov
sahf
stos
inc
cs
ljmp
xor
lods
test
or
mov
xor
pmovmskb
sub
repz
cli
cld
sahf
cltd
push
sbb
dec
push
jp
daa
rorb
sbb
mov
std
jo
sub
push
pop
adc
mov
mov
adc
fcmovu
cmp
fcmovb
div
adc
push
lock
inc
push
mov
lea
push
aaa
mov
pusha
inc
or
cltd
mov
popa
imul
repnz
cmp
std
jecxz
fstps
movsl
ljmp
gs
rcrl
andl
xchg
mov
pop
stos
lahf
mov
mov
and
xchg
mov
mov
jns
std
and
fsubl
fwait
sub
xchg
int3
hlt
daa
and
dec
mov
outsl
mov
dec
and
pop
jecxz
idivl
lock
dec
mov
cmp
xlat
repnz
inc
xchg
call
cltd
mov
pop
faddl
das
iret
into
jb
jmp
inc
cmp
fs
das
dec
and
xchg
or
jns
jae
leave
insb
sbb
adc
ljmp
xor
jg
pop
mov
leave
icebp
incb
ss
and
into
shrl
push
sbb
xchg
mov
fimuls
aas
mov
sbb
loop
scas
mov
inc
xlat
sar
pop
shlb
bound
push
in
jb
or
lock
scas
lret
fldl
int3
mov
inc
scas
arpl
shl
mov
out
cmp
mov
int3
test
cmpsl
adc
sub
xchg
clc
push
sbb
sarb
in
call
scas
cwtl
mov
jmp
in
sti
add
jnp
out
and
xchg
jns
push
push
xchg
mov
and
pop
std
lds
mov
dec
pop
or
leave
sbb
rclb
int
mov
lcall
mov
fs
jmp
mov
imul
test
mov
push
or
or
ret
inc
sti
mov
filds
testl
dec
push
sub
pop
and
inc
jb
mov
cmp
orb
mov
pop
test
sub
cs
or
fs
movsb
das
in
inc
push
dec
jp
loope
mov
xchg
daa
pop
aas
loopne
test
popl
mov
and
dec
and
xlat
hlt
mov
jnp
fnstsw
sbb
aaa
fwait
es
cmp
sbb
loop
mov
lcall
sbb
add
ss
nop
add
rcr
ss
cwtl
xchg
xchg
rep
mov
sub
adc
adc
pushl
prefetcht2
aaa
mov
repnz
or
xlat
mov
or
test
dec
cwtl
mov
jle
mov
shll
subl
mov
inc
fwait
cmp
xchg
jnp
sbb
frstor
xor
addb
lret
push
dec
and
popf
ja
cmp
sub
sbb
ja
pop
aam
jns
in
mov
cmp
repnz
inc
push
and
sbb
xchg
mov
sbb
mov
loopne
sbb
sbb
cmp
jbe
popf
xor
lret
cmpsl
push
push
push
sarb
fs
repnz
aad
out
push
repnz
xchg
loope
sbb
inc
mov
rorb
sbb
cmp
lret
test
sbb
mov
das
jg
cmpsb
jmp
popa
add
dec
imul
test
push
test
push
loope
cmpsb
xor
mov
call
or
xchg
or
popf
pusha
xchg
cmp
test
jle
mov
mov
pop
lea
hlt
mov
loopne
and
mov
and
fidivl
jbe
addr16
add
mov
add
dec
aaa
shrb
cmp
lock
cmp
push
lea
test
pop
mov
sti
jle
pop
sub
lahf
aad
aad
pop
adc
add
jle
add
fisubrs
xor
test
add
mov
xor
cld
dec
pushf
adc
jo
mov
and
jae
sahf
adc
je
outsb
push
add
sbb
faddl
aaa
js
lahf
mov
faddp
incl
lods
cli
sub
inc
ret
in
lods
xchg
addl
das
push
or
mov
mov
inc
mov
rcl
neg
ret
add
clc
add
cmp
std
sahf
jo
fcomi
pop
mov
push
cmc
enter
pop
mov
add
shrl
sti
fidivs
mov
lods
out
pop
sbb
nop
mov
inc
aas
jo
lahf
dec
popf
cmp
xor
add
jl
popl
lea
jecxz
mov
nop
loop
cmp
mov
and
adc
cmp
enter
mov
in
jp
xchg
mov
mov
jecxz
iret
test
jns
add
mov
xchg
jmp
inc
xchg
les
ljmp
cmp
vpaddsb
insb
xchg
dec
pop
les
mov
add
or
mov
into
inc
push
sub
mov
std
pop
adc
movsl
out
mov
cld
rcrb
mov
adc
jecxz
repz
xorl
jp
int
das
scas
jnp
sbb
aas
add
outsl
sbb
pop
or
popa
out
xor
dec
jp,pn
mov
fbld
pushf
fmul
jg
mov
sub
mov
ljmp
adc
shlb
mov
mov
loope
imul
lea
xor
sbb
mov
adc
sub
push
cmpsb
xchg
sub
adc
mov
and
xchg
xrelease
arpl
jae
scas
mov
lods
aam
xchg
jmp
push
int3
int
jge
out
pusha
cli
inc
sbb
out
pop
mov
dec
outsb
mov
inc
scas
fstpt
push
xchg
cmp
cmp
xor
mov
mov
data16
sub
lret
push
pusha
adc
iret
clc
in
cmp
es
das
fwait
scas
and
and
cmpsl
pop
jecxz
out
push
pop
mov
cmpsb
negl
cmp
call
fisttpl
dec
bound
test
dec
xor
lock
sub
and
leave
repz
adc
pop
push
lahf
add
add
fisubl
mov
adc
mov
scas
shlb
loope
addr16
andl
test
and
cmpsl
pop
movsb
loopne
dec
imul
pop
pop
rorb
push
out
push
repnz
xor
or
adc
mov
and
xor
pop
xchg
push
fwait
and
out
push
push
scas
and
mov
cmp
xchg
sub
mov
lods
out
pop
inc
pop
out
and
sbb
add
movsb
mov
popa
mov
adc
hlt
pop
or
xlat
cmpb
adc
shr
in
pop
xchg
bound
ret
insb
xchg
into
fdivl
aaa
pop
pop
jle
addr16
jno
aad
insb
or
stc
inc
fs
scas
ror
sbb
mov
aaa
in
mov
fstl
xor
jl
jecxz
mov
out
mov
pop
outsl
pop
inc
into
jmp
or
mov
inc
and
mov
push
jl
xor
or
pop
inc
lock
push
cmp
out
pop
and
sbb
pop
pop
mov
mov
lds
cmpsb
jl
clc
mov
lret
adc
jge
mov
adc
das
adc
inc
mov
lret
and
mull
xorl
dec
imul
pop
and
jecxz
lds
xor
mov
xor
das
aam
pop
lds
xchg
xor
loope
pop
mov
inc
sbb
xor
in
aas
sbb
push
dec
inc
jl
and
dec
add
iret
popf
sbb
testb
cmp
pop
stos
pop
test
cwtl
push
dec
jne
cmp
pop
jl
cmpl
frstor
dec
sarl
decl
xchg
fistps
ljmp
das
adc
sub
add
fstpl
xor
xchg
cmp
inc
lock
sbb
inc
cs
cmp
push
inc
iret
in
sti
nop
call
mov
insb
in
int
sub
stos
dec
movsl
call
sbb
out
stc
das
mov
sbb
andl
int3
cmp
addr16
xchg
or
mov
clc
fs
push
cli
jp
inc
lret
mov
icebp
cmc
mov
or
dec
adc
sub
or
sahf
jl
aad
cvttps2pi
adc
jecxz
jb
sbb
dec
testb
adc
pop
xor
sub
movsl
add
fwait
jnp
mov
pop
xchg
dec
and
arpl
add
lods
orl
jb
movsl
pop
stc
push
add
or
hlt
loopne
nop
lcall
cli
xor
mov
and
mov
cltd
jp
dec
mov
or
mov
dec
jmp
cmpb
lea
es
fcomps
dec
and
jge
xchg
stc
mov
add
dec
mov
leave
and
jle
fldl
mov
jnp
lock
sub
push
shlb
xchg
jmp
mov
dec
dec
cmp
aaa
sub
mov
daa
dec
mov
mov
sbb
lcall
and
pop
cmp
movsl
xchg
inc
sub
js
adc
sbb
or
iret
lret
mov
xchg
rclb
mov
idiv
adc
cmp
pushw
or
ja
dec
mov
ss
mov
mov
cmp
ret
sub
xor
push
and
mov
jecxz
pop
jne
rol
xor
sub
clc
call
dec
fwait
push
adc
mov
mov
outsb
push
lahf
jae
mov
add
sti
jmp
loope
ja
mov
aad
loop
ficomps
data16
pop
ret
stos
mov
lahf
adc
inc
inc
cmp
cmpsl
mov
jbe
inc
les
mov
testb
mov
dec
mov
jns
in
jno
sub
in
sti
mov
cmpsb
xchg
loop
jae
in
adc
dec
cmp
mov
fmull
mov
je
mov
jge
fidivrs
mov
leave
xchg
fisubrs
pushl
xchg
pop
xchg
ret
lock
inc
pushl
and
leave
in
xor
sar
test
insb
jbe
xchg
ss
stos
xchg
dec
cmp
mov
into
cmp
shrl
out
mov
aam
aad
mov
add
rcl
xchg
inc
ds
jnp
add
adc
shrl
in
addl
sbb
rcrl
stos
inc
bound
insb
push
mov
dec
cs
out
orl
ret
hlt
xchg
ss
mov
jl
jns
and
cmc
mov
in
mov
jns
out
cmp
je
mov
adc
push
ja
xor
inc
aaa
xchg
insl
outsl
push
cltd
hlt
outsl
sbb
mov
lret
xchg
stc
aam
jmp
cmp
xor
data16
mov
adc
jg
xchg
icebp
lcall
or
arpl
cmpl
push
pop
int3
and
adc
mov
mov
test
push
mov
push
add
fisttps
push
inc
ret
inc
inc
mov
xchg
pop
testl
inc
dec
sbb
in
push
insl
insb
stos
or
jne
pop
mov
sub
pop
xchg
add
add
int3
or
adc
sbb
xor
mov
mov
pop
adc
aad
push
lods
push
inc
and
dec
leave
and
fdivl
jbe
into
in
dec
bound
cmp
inc
lods
das
out
fists
jns
lds
arpl
xchg
rcl
je
movsl
mov
and
imul
jp
pop
aas
xchg
into
mov
call
test
or
lods
lods
adc
pop
push
roll
ja
ss
loop
mov
cmpsl
add
in
scas
mov
jl
repnz
dec
pop
cmp
iret
test
dec
ds
sub
sub
or
add
jp
sub
lods
mov
jecxz
loope
gs
lahf
push
jl
pop
dec
lahf
push
xchg
repz
popf
std
pusha
mov
fs
fidivs
mov
or
das
out
std
out
push
sub
or
lret
mov
push
test
jb
int
ret
sbb
fcmovnu
and
cwtl
pop
cwtl
and
xchg
xor
lcall
fcoml
push
xlat
sbb
mov
imul
cltd
fs
mov
in
adc
call
pushf
lret
mov
cld
ret
stos
cs
rcl
aaa
sub
not
push
jns
dec
fidivs
pop
pop
xor
sub
stos
aaa
add
or
inc
pop
jle
in
ljmp
mov
mov
outsl
sbb
mov
test
imul
or
cld
or
ret
fs
mov
ljmp
cmpsl
mov
cld
scas
push
pop
push
ret
mov
dec
roll
arpl
nop
dec
xchg
scas
pop
addr16
jb
mov
test
pop
pop
sbb
mov
cmp
lds
movsl
outsl
cmc
add
movsl
sarl
adc
cs
jns
jbe
mov
mov
inc
in
imul
pop
add
xchg
jg
mov
sub
pop
in
in
shlb
xchg
xor
rol
and
or
out
adc
in
fildll
or
fstps
cltd
jo
jne
push
lea
sbb
and
mov
imul
pusha
std
ret
mov
inc
sbb
cs
sub
sub
sti
mov
add
cli
sahf
enter
lods
push
sar
mov
mov
adc
pop
mov
xchg
xchg
lahf
mov
shrb
xchg
mov
fwait
sub
ds
or
xchg
mov
stos
jb
push
push
sbb
rol
imul
fcmovne
sbb
mov
add
adc
out
push
inc
fmuls
push
ja
loop
aas
enter
and
xor
call
jecxz
sub
bound
icebp
sub
in
lcall
mov
icebp
mov
pop
sti
dec
loope
jge
jbe
xchg
add
popa
loopne
sbb
ds
das
cmpsb
jmp
mov
mov
test
sbb
adc
int3
push
gs
jnp
push
jb
mov
nop
arpl
mov
imul
or
in
lret
rol
pop
jmp
les
jl
lcall
lret
and
orb
mov
cs
xor
cltd
fst
jo
fidivrl
sbb
aam
into
bnd
jnp
nop
jae
jae
je
xlat
push
mov
mov
ja
cmp
clc
mov
push
or
sbb
and
in
add
das
mov
scas
dec
icebp
mov
cld
addb
jmp
push
adc
cld
inc
loop
hlt
out
movsl
test
or
fldt
lahf
aaa
inc
repz
pop
xor
fsts
mov
or
jl
std
test
or
arpl
in
out
dec
orl
addr16
inc
xchg
icebp
adc
mov
out
fwait
insb
lods
imul
lahf
idivl
fcoms
xlat
adc
mov
cmpsb
inc
or
and
fldenv
and
leave
sbb
test
dec
sub
shll
gs
cld
stos
andl
nop
sbb
cmc
in
dec
jb
es
add
ljmp
sub
into
in
das
jp
lods
imul
xlat
inc
lea
pop
and
push
mov
test
or
jnp
pop
lods
xchg
sub
aad
lmsw
daa
mov
sub
mov
stos
loope
sub
ljmp
cwtl
ss
adc
fwait
hlt
mov
aaa
sbb
out
sbb
arpl
inc
inc
fsubr
shrb
xorb
les
dec
mov
mov
xor
loopne
and
insb
xchg
cmp
shld
adc
sbb
jecxz
adc
in
pop
xchg
pop
loope
arpl
adc
aam
insb
insb
icebp
subb
add
loop
push
push
and
aas
pop
push
leave
adc
mov
shlb
and
out
mov
cmc
xor
jo
pusha
roll
and
push
mov
mov
sbb
jmp
mov
dec
pop
shrl
cmp
mov
or
inc
xor
pop
cmp
inc
ret
lcall
lock
xchg
imul
cmp
mov
je
mov
fsubrl
xor
and
xlat
pop
mov
sbb
lds
xchg
sub
repnz
arpl
xor
add
jnp
xlat
mov
add
dec
or
les
in
pop
or
je
aas
iret
pushf
leave
lods
inc
xchg
mov
mov
cltd
shl
cmc
js
lret
mov
cli
movsl
repnz
sti
iret
jge
mov
addr16
repnz
iret
mov
mov
into
aad
mov
je
icebp
inc
fstpl
mov
mov
sbb
lret
stos
pushf
mov
cmp
jg
jg,pt
pop
mov
lock
mov
dec
mov
in
sub
lahf
and
sbb
xchg
aas
pop
pushfw
cmp
bound
into
fistps
popf
aaa
sub
xchg
xor
sub
mov
hlt
out
sahf
xor
cmp
jnp
or
cmp
or
dec
cs
cmc
push
dec
xor
sbb
add
xor
mov
push
test
aad
or
mov
mov
aam
in
sarl
lcall
xchg
roll
inc
lock
mov
fmulp
adc
mov
xor
dec
iret
movmskps
repnz
mov
mov
out
jo
lds
loope
lcall
stos
add
sub
or
dec
test
cmp
aad
fildll
dec
jge
pop
mov
sbb
xor
sub
gs
mov
mov
retw
sbb
dec
adc
xor
mov
xorl
dec
xor
outsb
pop
ds
mov
xor
push
es
bound
inc
outsl
push
jecxz
inc
cmp
mov
pop
cmp
mov
into
push
pusha
or
jns
test
ss
sbb
mov
sbb
inc
ficoml
push
jno
out
jg
add
mov
mov
mov
or
lock
movsb
std
jge
jns
adc
pop
xor
pop
inc
sub
mov
xor
or
jp
lcall
cmp
pop
mov
lret
push
loopne
inc
jo
jmp
mov
ss
mov
jae
jne
rolb
outsb
dec
mov
scas
inc
inc
pusha
fisubrs
adc
xor
xor
jb,pt
mov
pop
xchg
jb
lock
or
in
push
or
pop
sub
xor
fidivl
je
sub
jle
mov
jbe
gs
shrb
shlb
cmpb
push
imul
es
inc
push
mov
int
in
icebp
es
es
insl
ret
rcrl
inc
push
pop
loopne
bound
xchg
aas
scas
lea
mov
push
loop
mov
lret
pop
std
push
adc
scas
into
sbb
incl
jno
nop
cmp
mov
lods
add
repz
xchg
mov
out
mov
dec
ret
loopne
jge
push
cli
enter
mov
rolb
repz
scas
dec
les
cltd
jmp
orl
mov
jae
mov
add
mov
sbb
sbb
push
aam
insb
addr16
add
cmpl
push
jp
and
sub
cmpsl
movb
pop
cli
adc
nop
outsb
sub
xor
out
out
dec
repnz
jecxz
xor
ja
lret
jmp
mov
push
movsl
mov
addr16
jb
jne
or
dec
or
or
call
fcomps
test
pop
mov
lcall
test
outsl
dec
dec
mov
pop
mov
cmp
mov
loope
adc
insb
orl
sub
mov
add
jo
dec
clc
cld
inc
outsl
cmp
outsl
loop
inc
out
pop
mov
dec
int3
lcall
popf
mov
and
xchg
jge
shrb
lret
pop
push
int
xchg
rclb
add
mov
std
pushf
sbb
or
add
pushf
push
jl
orl
and
imul
pop
pop
loop
jae
insl
sahf
in
push
sub
sbb
mov
and
inc
mov
cmp
outsl
loopne
push
mov
daa
inc
push
cmpsb
int3
lods
fistpl
cmp
outsl
pop
dec
insl
cmp
dec
int
pop
cmc
mull
mov
mov
and
mov
cwtl
repnz
ja
mov
sahf
call
and
je
ja
jo
push
cmc
adc
and
rorb
js
cmpsl
mov
dec
jo
mov
fs
jns
rorb
fadd
xor
out
cmpsb
movsl
fiadds
sub
popf
call
push
jecxz
jae
pop
xchg
mov
push
xchg
add
adc
mulb
mov
test
clc
lret
mov
xchg
lahf
xchg
stos
imul
iret
sub
xchg
outsb
xchg
in
aaa
imul
in
pushf
add
or
bound
and
sub
fs
repz
hlt
sahf
test
mov
addr16
pop
movsl
adc
sub
push
cltd
test
jle
lods
mov
faddl
mov
xchg
jns
or
xchg
mov
or
loope
push
popa
adc
sub
xor
lods
ja
imulb
adc
out
jle
mov
mov
mov
cmpsl
dec
push
fwait
bnd
mov
xor
xor
mov
dec
dec
cmp
and
daa
adc
cwtl
sbb
or
testl
scas
lds
insb
iret
loop
lret
enter
sub
sub
aad
sub
pop
in
push
pop
mov
je
push
pushf
lods
push
pop
pop
push
mov
test
out
lods
out
ss
andb
std
loop
add
mov
test
sarl
mov
ds
les
or
xchg
ds
out
test
pop
xchg
push
jnp
jle
adc
xchg
test
inc
outsl
loop
push
out
lea
and
dec
movsl
jno
pop
or
sub
in
adc
daa
jl
add
shlb
es
scas
std
sub
jecxz
xlat
adc
mov
popf
ljmp
arpl
aas
push
repnz
xchg
xchg
fs
adc
test
or
inc
push
jecxz
pushf
mov
and
sahf
mov
adc
mov
mov
and
dec
les
pop
and
dec
and
mulb
inc
mov
out
mov
inc
fdivs
ss
outsl
int
jo
or
jae
js
sti
lock
pushf
sbbl
outsl
sub
icebp
cld
repz
shr
nop
adc
jge
clc
out
mov
jl
imul
je
and
inc
jp
inc
dec
pop
or
mov
xchg
sbb
and
es
pop
dec
mov
call
shr
daa
sub
fsts
add
add
jl
loopne
loope
int3
sysenter
fistps
pop
adc
add
lahf
cmp
cmpb
cmpsl
inc
in
xor
mov
xchg
movsl
lock
test
out
xchg
adc
adc
aas
xchg
cli
inc
lret
loop
rorb
hlt
xor
xchg
xor
call
cs
shr
or
test
add
cmp
outsb
dec
ljmp
push
push
scas
cmpsb
push
and
js
es
sbb
or
push
add
movsb
mov
pop
jge
jns
ljmp
or
dec
ljmp
out
xchg
sbb
lds
cld
lcall
sbb
jno
divl
daa
icebp
jl
and
int
jo
fs
jne
out
mov
pop
sbb
cmpsl
arpl
insb
mov
ficoml
jno
bound
inc
add
adc
scas
fisubrs
push
and
shlb
inc
mov
pop
add
stos
adc
add
stos
call
lods
mov
pop
loop
incl
outsl
push
jb
xor
sub
mov
jb
insl
stc
sub
pop
dec
lods
fisubl
and
mov
scas
rorb
test
fwait
rolb
dec
jae
mov
jae
jle
dec
ficompl
adc
xor
les
xchg
cli
mov
inc
mov
mov
jno
shrl
scas
dec
jle
test
les
and
shr
sbb
int
push
mov
add
adc
popf
out
pop
inc
cmp
fidivs
adc
push
repz
test
das
push
cltd
icebp
js
jp
jle
jecxz
xchg
push
or
fsubr
aaa
repnz
jmp
push
dec
sub
in
push
xchg
sub
out
add
dec
mov
xlat
push
dec
pushf
push
enter
fstl
xor
jp
fstpl
stos
sahf
push
sub
add
xor
pushf
dec
cmp
xchg
in
adc
add
inc
sbb
pop
jo
mov
ljmp
mov
icebp
inc
push
mov
cmp
stos
out
jl
jl
lahf
les
shll
xorb
iret
push
add
mov
repz
outsl
scas
int
or
imul
pop
mov
adc
xchg
fs
push
sbb
inc
dec
sub
out
sbb
fbld
pop
data16
sbb
into
adc
push
aam
fldt
sub
stc
scas
mov
and
inc
imul
mov
les
icebp
mov
test
dec
mov
mov
xchg
movsb
sub
xchg
loope
sub
aam
ja
hlt
inc
lret
mov
push
push
push
lcall
ficoms
cmpl
cltd
push
lods
adc
imul
cmp
int3
and
loope
ret
lcall
adc
lret
aaa
pop
outsl
hlt
fidivl
sub
cmp
xchg
sbb
and
push
mulb
nop
lods
xchg
loopne
leave
imul
outsb
xchg
inc
or
sub
outsb
idiv
data16
push
jl
pop
adc
push
xchg
repz
enter
xor
and
jmp
test
movsl
call
decl
fimull
test
mull
or
mov
clc
test
mov
jnp
sub
adc
out
in
test
xchg
sbb
inc
call
lahf
xchg
pop
xchg
or
mov
pop
inc
cli
ret
xor
adc
fmull
push
leave
mov
mov
pop
mov
movsl
push
fdivrs
mov
and
insb
or
push
xchg
sbb
aam
cmpsb
pop
push
add
rolb
cld
pushf
lea
or
jnp
movsb
mov
adc
dec
mov
lock
jne
gs
push
insl
and
mov
and
xchg
insb
js
pop
loope
stos
mov
lahf
lock
mov
jecxz
pushf
pop
jge
dec
aam
lock
xor
pusha
ja
cmc
mov
dec
mov
push
push
inc
sbb
arpl
push
in
shl
mov
out
fisubs
xor
push
out
lea
pop
pushf
and
sub
push
mov
lods
dec
call
sbb
sbb
in
xlat
cmp
or
ficoml
fisubs
movsb
insl
std
nop
fs
pop
and
or
inc
dec
int3
fsubrs
pushfw
outsb
loop
test
in
ret
test
mov
sarl
xchg
xchg
cmp
subb
mov
in
fldcw
sbb
test
adc
in
jle
imul
cltd
popf
filds
ror
push
lds
fnstcw
jb
popf
mov
cmpb
cmpsl
inc
mov
sub
mov
xor
cs
mov
pop
mov
inc
pop
lcall
scas
jnp
add
fistl
test
clc
cmp
lcall
cli
test
xor
dec
cmp
cmpsl
cmp
pusha
cmp
jecxz
aaa
sub
mov
mov
jo
out
mov
adcb
in
test
mov
pushf
das
xor
mov
rorl
jmp
mov
jge
push
sahf
and
cmp
and
dec
test
test
xlat
and
push
dec
fstpt
inc
ds
pop
outsl
mov
mov
or
sub
xor
push
cmp
add
dec
sub
dec
xchg
mov
ljmp
pop
notl
dec
ja
movsb
rcr
pushf
and
xor
sti
lahf
push
popf
lods
inc
jno
add
fcom
hlt
or
and
sbb
xchg
roll
sbb
stc
jg
ss
adc
incb
jge
shrb
icebp
mov
sbb
push
cltd
fcoml
and
mov
enter
and
pop
repz
fidivs
cmp
pop
mov
out
or
mov
mov
lds
sbb
aam
iret
adc
dec
sarb
mov
int
mov
dec
dec
loope
es
sbb
outsl
inc
imul
xchg
mov
lea
jno
dec
cmp
ljmp
sbb
pop
fsts
jae
orl
sti
cltd
in
mov
mov
add
and
outsl
aam
xchg
adc
mov
mov
xchg
pop
mov
sub
add
cvtdq2ps
insb
je
or
sbb
cld
jnp
ret
or
xor
leave
movsb
cmp
bnd
cmc
popf
loop
lds
bnd
lcall
ljmp
cltd
xchg
mov
stc
fcmovbe
pop
mov
pop
mov
sbb
cs
add
ss
fistl
mov
cld
dec
pop
mov
aad
test
sbb
loope
cwtl
inc
out
jno
into
adc
jae
xchg
inc
imul
enter
ret
popl
inc
xchg
je
cltd
sbb
lock
stos
lret
pop
inc
mov
stos
leave
sahf
push
mov
sarb
jecxz
cmp
jg
enter
jmp
push
ss
cmp
lahf
out
loopne
fdivrl
xor
xchg
xchg
inc
lds
push
dec
mov
xor
xchg
push
lds
sbb
adc
xchg
mov
fstpt
add
and
jecxz
cmp
inc
push
bound
cmc
mov
mov
mov
icebp
jmp
test
jmp
test
mov
add
out
mov
cmc
ds
ds
adc
test
mov
pop
push
insl
pushl
cli
mov
ds
fs
add
jb
jmp
int3
inc
push
daa
popa
int
jno
lods
clc
dec
sbb
enter
js
movsb
das
out
jo
das
lock
mov
jge
repz
cmp
cmc
xchg
lods
push
lock
ret
dec
cld
roll
aam
sbb
jg
pusha
out
dec
add
dec
insl
cmp
push
mov
rolb
shlb
push
dec
dec
loope
inc
popa
mov
arpl
and
jae
jecxz
out
cmpsb
adc
pop
outsb
cmp
pop
sbb
xchg
rorl
sub
dec
shrl
rorl
insb
jo
in
popf
and
or
popa
inc
dec
mov
outsl
and
cwtl
jg
mov
sbb
data16
ret
jmp
mulb
push
push
add
mov
scas
jb
popa
or
in
push
pop
popa
or
jo
dec
jne
cltd
cwtl
inc
aas
subb
cmp
or
adc
orl
or
jbe
mov
mov
dec
mov
stc
inc
dec
xchg
inc
test
pop
fnstcw
rorb
push
sbb
or
loop
inc
jmp
pushl
push
cmp
adc
les
and
mov
or
push
loopne
in
adc
adc
mov
mov
fsubrp
scas
jnp
fcmovu
decb
movzbl
scas
sarl
call
cmp
pop
xchg
aaa
cmc
jo
cltd
shrb
fistl
fisttpll
lret
push
xchg
shr
loop
sti
xlat
add
xchg
fadds
pop
mov
out
lret
aad
test
xorb
scas
popa
sub
mov
sar
mov
mov
lods
xchg
xor
xor
adc
js
mov
pop
outsb
mov
sub
jns
es
int
mov
xor
scas
loope
lock
jbe
and
fstps
mov
lea
inc
jnp
mov
adc
jne
lods
cmc
add
out
bound
add
add
stos
mov
faddl
test
popa
stos
jge
fnstsw
push
imul
dec
mov
adc
and
aas
jle
inc
cmp
dec
xlat
loopne
bound
ret
rclb
ljmp
or
lods
mov
repz
and
mov
and
and
outsb
mov
sub
or
mov
aam
scas
ja
jle
ss
imul
inc
lret
repnz
cld
mov
mov
push
ret
pop
mov
sbb
xchg
mov
xor
mov
mov
adc
pop
mov
cltd
movsb
sub
fdivr
aas
repz
sti
dec
in
pop
inc
lret
rol
mov
int3
mov
mov
mov
std
lods
fwait
push
cmp
cmc
cmp
jmp
jnp
mov
roll
enter
popw
mov
adc
imul
sahf
ret
mov
xorb
push
push
fsubs
xor
jg
push
push
inc
mov
clc
inc
pop
cwtl
movsb
push
mov
inc
pop
dec
notl
stc
int
xchg
mov
pop
andb
cmp
ficoml
loop
vmovntps
cmp
sub
sub
pop
push
jmp
test
xchg
aam
ja
test
imulb
or
mov
cmp
jnp
pushf
or
mov
inc
inc
cs
shufps
mov
mov
dec
sqrtps
dec
test
inc
lods
inc
cmp
pop
push
shlb
dec
outsl
sub
mov
mov
add
dec
push
xlat
in
movsb
dec
outsl
inc
shll
jle
loop
adc
push
hlt
push
jg
stc
out
xor
mov
pop
cmpsl
xor
rorb
dec
out
and
sbb
cmp
pop
push
cmc
imul
mov
dec
xchg
lcall
cmp
mov
rcrb
jb
mov
sbbb
or
decl
xchg
xchg
mov
imul
fcomps
mov
cmpsl
adc
nop
shll
ret
sahf
in
pop
pop
add
insl
pop
test
insb
movsb
mov
xchg
or
gs
loopne
cmp
fstps
popa
sub
mov
lea
cwtl
jb
imul
lock
rcrl
sub
cli
cmp
fldenv
loope
pop
xor
mov
jl
movsb
jmp
cs
call
insb
fwait
xor
mov
lcall
ja
pop
mov
mov
xor
int
insl
or
add
sbb
mov
lods
pusha
mov
push
mov
and
loop
xor
jp
dec
stos
ficoms
es
or
enter
inc
jmp
shlb
add
jbe
cwtl
xchg
inc
pop
.byte
sbb
addb
adc
iret
pop
sub
pop
sbb
mov
test
andb
pop
loopne
add
scas
jb
ficoml
add
negb
push
ljmp
inc
xorl
ret
lds
aas
mov
mov
push
inc
mov
jp
mov
lret
cmc
mov
push
pushf
inc
in
jo
add
mov
mov
jae
testl
sub
and
xchg
sub
sub
jb
inc
xor
or
imul
testb
bound
into
sbb
scas
movsb
int
out
aam
or
loope
mov
xchg
jae
jmp
xor
add
jae
mov
ja
fcmovnb
cltd
cs
test
and
or
add
int
jne
cmp
popf
xchg
lods
iret
mov
in
in
outsb
add
cmp
pop
pop
sahf
mov
outsb
mov
mov
mov
outsl
outsl
imul
mov
pop
scas
subl
icebp
outsl
ss
fisubl
loopne
lret
insl
push
fwait
popa
dec
push
add
jne
mov
sbb
pop
stos
mov
cltd
and
repz
stos
pop
jmp
pop
jp,pn
mov
mov
add
fwait
jnp
cmc
mov
cmovp
mov
lock
mov
adc
push
push
pop
dec
mov
xchg
ss
test
push
dec
mov
mov
aas
out
sub
mov
dec
jnp
insl
scas
test
mov
cmp
stc
insl
adcl
sahf
ss
or
and
inc
push
jle
mov
pushf
stc
test
mov
cmp
shll
dec
aad
je
adc
mov
jmp
out
imul
aam
mov
mov
shlb
xor
mov
pop
jg
xchg
mov
bound
shr
mov
mov
mov
adc
mov
cwtl
xchg
cmpsb
mov
push
ss
sub
sahf
scas
sti
movsb
adc
pop
dec
add
pop
jb
test
or
cmp
xchg
fadds
pop
or
sub
sarb
cmpsl
xchg
mov
cmc
cmp
stos
lock
jae
hlt
andb
repz
in
cmc
call
sbb
mov
cld
jbe
and
xchg
pop
out
test
pop
enter
mov
jge
mov
dec
popf
rcrl
add
dec
mov
jle
hlt
push
out
push
pop
cmpsl
push
ss
mov
stos
les
clc
int
sub
mov
xor
out
pop
roll
inc
in
js
lret
cmp
adc
mov
xchg
xchg
cmp
xchg
jg
popf
jg
sub
sahf
push
or
ret
outsb
idiv
or
fmulp
inc
loopne
imul
cmp
add
div
xor
cmp
das
xor
mov
clc
popa
int3
daa
mov
daa
mov
in
rcl
and
lcall
lods
cld
add
jo
ds
loop
loopne
jb
jl
movsl
push
mov
sub
es
int
or
mov
or
out
imul
inc
mov
cmpsl
cmpsb
sarb
inc
cmp
pop
sub
xchg
cmc
push
lds
shll
lods
add
adc
push
inc
pop
mov
adc
adc
testl
stos
mov
mov
mov
sti
pop
or
je
lods
mov
repnz
cltd
loop
dec
jb
in
or
jg
push
xchg
loopne
iret
leave
mov
nop
mov
cmpsl
push
jle
sub
out
pop
cltd
cmp
and
mov
mov
cmp
mov
sbb
in
xor
gs
rol
bnd
lret
pop
pop
lret
pop
in
stos
lret
fs
les
adcl
push
dec
mov
xchg
insl
jge
sub
pusha
and
clc
xor
out
call
outsl
push
or
lods
jns
mov
xchg
inc
add
cli
and
xor
hlt
lahf
call
and
in
sbb
and
push
or
mov
pop
jae
xorl
das
xor
test
adc
mov
push
js
outsl
aaa
rol
bound
mov
pop
in
xchg
xchg
loopne
sub
pop
sub
call
add
jl
fimull
dec
rcll
or
jp
cltd
pop
lret
jmp
or
mov
pop
into
mov
js
lock
je
mov
leave
pop
sti
lods
dec
sbb
test
push
into
cmc
repnz
js
mov
clc
lret
scas
ror
icebp
dec
bound
xchg
movsl
cmpsb
push
add
xor
xchg
add
push
cwtl
aad
cmp
clc
xchg
and
xor
les
pop
sub
shrl
mov
jecxz
jb
sti
pop
ret
adc
mov
into
jp
or
push
nop
and
mov
or
sub
cmpsb
push
lea
push
test
addl
mov
dec
xlat
aas
xorl
fisttps
xor
lret
imul
es
mulb
test
fistpll
adcl
stc
stos
mov
sahf
orb
popa
test
fst
mov
ror
rcl
sub
aam
int3
xchg
ja
or
rcrl
lock
loope
and
popa
push
int
jle
cld
out
lahf
xor
sahf
push
add
xor
jl
sbb
psrld
sti
jecxz
mov
movaps
sahf
mov
cmp
mul
sti
movsb
jbe
jmp
push
jg
jns
out
xor
cli
and
push
lcall
cmp
and
dec
jbe
loop
dec
adc
sub
push
das
adc
ja
pop
xchg
push
jnp
adc
sbb
dec
and
push
leave
repz
lret
dec
inc
or
ret
fsubr
adc
mov
loop
sbb
pop
jae
pushf
cmp
adc
mov
aad
xlat
inc
mov
inc
push
mov
rcrb
dec
xchg
jge
adc
data16
dec
cmpl
gs
aas
sub
mov
dec
dec
jbe
sbb
cmc
and
xor
sbb
lahf
mov
mov
sti
aam
inc
call
inc
jg
adc
cmp
mov
out
in
and
cld
push
mov
int3
fsub
mov
fldl
decl
sar
and
aad
test
jmp
sub
mov
rcrb
pop
sti
mov
mov
aas
jle
and
mov
enter
and
mov
hlt
and
aad
les
jb
arpl
stos
mov
or
cmp
push
ja
mov
or
push
jecxz
fistps
in
imul
and
pop
pusha
cld
add
xlat
bound
cmp
cmp
jo
cmp
jp
cmpsl
dec
in
or
sub
in
add
adc
aas
jecxz
adc
repz
xchg
lahf
fwait
pop
hlt
clc
pop
push
mov
icebp
int3
mov
movsb
xor
in
dec
and
ja
in
add
mov
push
in
test
insl
sub
cwtl
push
enter
sbb
dec
xlat
rorb
xchg
push
mov
jo
clc
cmp
ljmp
dec
outsb
stos
insl
xor
loop
outsl
jmp
mov
out
test
pop
push
jns
sub
outsl
push
sub
xchg
pop
cli
pop
lods
test
mov
fisttps
mov
pop
and
nop
mov
jle
jb
jecxz
or
mov
adcl
pop
mov
sub
bound
mov
cmp
dec
or
test
xor
rorb
adc
das
or
movsl
push
xorl
fimuls
pop
enter
repz
jno
pusha
rcr
inc
sub
adc
and
and
out
push
loope
mov
xlat
adc
inc
cmp
sub
xor
or
cmp
arpl
mov
or
adc
cld
xchg
arpl
scas
gs
fcomip
and
lret
pusha
jnp
test
xchg
loope
sbb
pop
push
in
xor
dec
in
jecxz
int
sub
add
paddsw
cmc
add
jno
push
cmpsb
cmp
popf
lahf
lods
test
push
lds
and
xchg
xchg
dec
mov
aam
cltd
jbe
lods
xchg
popa
ja
sbb
sbb
pop
jl
push
and
mov
call
cli
mov
sahf
mov
sub
jl
stc
loope
jle
je
pop
clc
sbb
adc
xchg
pop
mov
xchg
push
mov
outsl
mov
inc
leave
pop
aam
gs
jg
repz
popf
stos
cmp
xor
loop
sub
popa
dec
sub
jmp
xchg
arpl
popf
jle
cmc
stc
mov
xchg
pop
fld
cmp
cltd
sarl
xor
loop
in
inc
lds
in
mov
cltd
scas
rcrl
data16
mov
imul
push
mov
nop
xchg
out
mov
inc
pop
sbbl
cmp
lahf
cmpsl
sbb
xchg
dec
add
mov
jnp
sub
adc
jne
mov
mov
push
imul
jnp
sbb
ds
sbb
es
pop
mov
jmp
das
pop
aam
aas
fnstcw
mov
jno
ss
popf
inc
mov
or
rclb
in
shl
es
ss
or
lcall
add
add
lret
pop
call
rcr
mov
jno
xchg
sti
fisttps
xchg
sub
test
mov
mov
sbb
lahf
stos
inc
mov
lret
fistpl
inc
push
leave
leave
mov
scas
and
lcall
repz
pop
add
daa
cmp
push
pop
insl
mov
ret
xchg
jg
aam
mov
dec
pop
inc
push
and
fistpll
lock
xchg
fwait
dec
popf
mov
adc
into
js
push
mov
jo
or
jp
push
or
rcll
pop
pop
push
xchg
mov
adc
cmpl
or
ja
pop
inc
push
scas
adc
bound
jbe
fs
jecxz
jbe
pop
jnp
mov
lahf
pop
and
out
cld
pop
adc
add
or
test
mov
fnstenv
daa
dec
sbb
insl
data16
fwait
add
dec
add
dec
add
xor
adc
dec
add
xor
xor
add
add
pusha
cmpsl
cmp
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
xor
add
js
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
or
add
and
add
pusha
cmpsl
cmp
add
add
or
add
push
or
cmpb
add
push
add
subb
push
or
addb
add
pushf
or
xorb
add
mov
add
add
add
rorb
add
fimuls
add
add
add
add
add
inc
add
addb
add
pusha
cmpsl
cmp
add
add
add
add
clc
or
sbbb
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
mov
sub
add
mov
sldt
mov
sldt
rolb
sub
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
lock
add
or
add
and
add
cmp
add
push
push
add
push
sldt
addb
addb
add
cwtl
push
add
pusha
cmpsl
cmp
inc
outsl
insl
gs
add
adc
xorb
add
inc
or
and
add
clc
push
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
pop
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
add
add
cmp
add
add
add
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
mov
or
xor
add
in
or
xor
add
sbb
add
dec
mov
add
andb
add
add
call
add
add
add
add
add
insb
stos
or
rolb
add
cmp
or
rolb
add
or
or
rolb
add
fsubrl
add
lods
mov
add
add
add
add
add
add
add
add
add
or
call
add
add
add
add
or
add
add
add
or
in
add
in
or
in
add
add
leave
or
js
add
dec
int
add
rorl
add
add
add
add
movsb
rorl
add
add
xlat
or
add
add
adc
or
enter
or
call
add
add
add
add
fisttpl
add
add
add
add
js
or
faddl
add
push
loop
add
add
add
add
in
in
add
add
clc
jmp
add
jl
or
mov
add
sub
or
sbb
add
add
add
add
add
add
add
or
sub
add
nop
stc
or
mov
add
add
add
add
or
mov
add
aam
or
les
add
cwtl
add
and
add
mov
add
add
add
je
or
sbb
add
mov
or
adc
add
mov
add
add
add
enter
adc
add
fcoml
or
adc
add
lock
adc
add
add
or
adc
add
xor
or
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
inc
add
dec
add
inc
add
add
dec
add
or
add
push
add
inc
add
dec
add
dec
add
inc
add
push
add
dec
add
dec
add
inc
add
add
dec
add
push
add
push
add
dec
add
dec
add
or
dec
add
dec
add
dec
add
dec
add
sbb
cltd
sbb
add
jmp
insb
adc
sbb
dec
pop
sub
icebp
cmp
cmp
aaa
adc
mov
jb
dec
inc
mov
push
pop
adc
lods
cld
adc
mov
dec
dec
sub
sub
ss
xor
push
loopne
out
cmc
mov
les
and
pop
cmp
push
dec
pop
les
mov
dec
pop
and
rclb
pop
cmp
cmp
arpl
pop
test
jae
xor
jb
icebp
aam
sub
and
imul
fcomps
repnz
pop
cmp
and
insl
rolb
stos
dec
ja
imul
pop
mov
cmpsb
sub
clc
and
mov
inc
mov
xchg
dec
sub
and
stc
es
mov
inc
mov
push
arpl
insl
cmp
pop
shrb
sub
sahf
inc
int
popw
jno
pusha
sub
das
mov
mov
icebp
push
sbb
xchg
inc
cmp
cmpsb
fildl
leave
xor
add
pop
repnz
pop
mov
inc
mov
inc
dec
dec
pop
mov
pop
jp
xchg
mov
dec
sub
ljmp
imul
push
adc
or
in
clc
add
cmpsl
jmp
dec
loop
add
test
shll
xlat
rolb
jecxz
push
xor
xor
mov
divl
xchg
or
mov
xchg
adc
mov
and
stos
stc
sub
scas
or
xchg
daa
xor
ret
repnz
lea
out
mov
pushf
fdivl
ja
pop
lods
dec
xor
rol
sti
fildll
mov
fbld
add
xor
in
loope
out
push
inc
sub
jae
sub
in
lahf
cmp
stc
int3
xor
aad
stos
fcmove
jb
mov
jmp
test
sti
aam
std
or
daa
les
add
stc
imul
push
sub
inc
pop
jb
pop
or
and
aas
mov
add
and
mov
mov
mov
imul
adc
inc
in
sbb
xor
mov
ljmp
into
pop
arpl
cmp
sub
add
jecxz
or
xchg
lock
fnstsw
test
test
mov
mov
pop
out
cltd
mov
sub
xor
in
rcl
jg
xor
fcoms
lock
fisttps
imul
rol
or
and
stos
arpl
push
ds
rcrl
ss
cwtl
inc
push
inc
pop
cmp
jmp
outsb
imul
mov
lahf
jp
jns
push
fcomps
pop
sbb
adc
cmpsl
pop
push
sbb
sbb
js
sahf
lea
ret
sbb
popf
out
loopne
pop
sahf
repz
add
lret
dec
insl
and
cmpsl
leave
lods
ljmp
scas
insl
xchg
push
ficompl
push
push
loop
mov
xchg
pushf
sbb
jb
sub
mov
fcoms
jnp
cmp
xchg
cmp
imul
mov
mov
mov
call
jb
mov
xchg
mov
aas
ja
xchg
leave
adc
aas
pop
lods
fs
pop
fadds
or
shrb
fdivl
push
or
jb
sbb
jb
ret
xor
faddl
jmp
cmpl
cmp
repnz
sub
xchg
mov
subb
xor
dec
aas
in
fcoml
test
dec
repnz
or
sub
add
rcr
dec
aas
ja
lcall
ljmp
dec
inc
insb
mov
lea
imul
jbe
idiv
decl
and
xchg
adc
mov
out
pop
mov
dec
clc
call
stos
mov
mov
iret
xor
xor
sub
out
push
aam
sti
repnz
iret
push
loope
xor
rclb
sbb
cs
fistpl
aam
mov
cmc
jb
fildll
inc
or
gs
popf
and
sbb
mov
hlt
loop
and
pop
fists
cltd
adc
and
mov
sbb
mov
leave
xchg
adc
sarl
cmpsl
and
imul
xchg
repnz
stos
incb
aam
in
leave
loop
in
fs
in
push
mov
push
cli
in
adc
mov
xchg
xchg
shrb
adc
aas
dec
and
shlb
add
add
movsl
push
jo
ljmp
mov
movsl
mov
inc
jg
dec
mov
sub
test
mov
mov
xchg
pop
in
cmp
or
inc
ljmp
aas
mov
add
jns
fists
fwait
sub
cld
cltd
mov
popf
xchg
in
rol
jbe
out
and
sahf
bound
pop
test
mov
jl
push
mov
cmp
jg
push
xor
stos
nop
sub
or
sahf
mov
mov
mov
push
in
and
sub
and
cmpsb
shlb
mov
loop
add
push
clc
cs
sbb
sub
into
ret
xlat
adc
xor
out
out
sbb
addr16
lea
mov
dec
pop
pushf
or
aaa
add
loope
cli
movsl
inc
shlb
loope
mov
mov
push
cs
movlps
inc
sub
outsl
add
xchg
fcoms
mov
mov
or
jp
mov
push
xor
gs
push
pop
imul
mov
xchg
jae
xorb
ja
jge
mov
mov
xchg
aaa
push
rep
addb
rol
stc
or
mov
and
shll
jg
shl
push
lock
cmc
sbb
out
pop
leave
push
fistps
mov
lea
popa
ljmp
shl
out
add
cld
mov
cmc
adc
jo
mov
cmpsl
arpl
mov
into
paddb
outsb
test
add
jle
sbb
scas
adc
test
mov
push
xorb
fistl
test
call
lods
xchg
xor
add
imul
and
adc
jl
adc
cli
dec
sarl
fstpt
add
jnp
dec
push
mov
xor
mov
inc
popa
mov
dec
or
cmp
iret
push
sbb
push
stc
dec
add
test
pop
out
xchg
fiaddl
aaa
xchg
hlt
adc
orl
adc
jae
jns
jne
sub
sarl
sub
mov
fwait
loopne
roll
outsb
in
push
dec
jge
iret
and
dec
inc
jne
imul
aam
jne
or
xorl
fistpll
jo
sub
iret
mov
or
icebp
sbb
loopne
insb
repz
jl
jmp
aaa
pop
cli
lds
mov
xchg
adc
xchg
sub
fbld
pop
xchg
popa
sahf
pop
mov
or
xchg
imul
movsl
test
mov
cld
xor
ljmp
pop
es
pop
xor
adc
sbb
mov
jno
xchg
lods
and
icebp
mov
sub
sub
fld
or
mov
fsubs
test
aad
push
ret
stc
mov
mov
std
add
mov
inc
hlt
nop
mov
pushf
pop
xor
or
sub
inc
add
cmp
scas
sbb
fmul
data16
ss
push
or
roll
pop
lret
adc
sbb
fldcw
sbb
dec
fwait
aam
sub
leave
xchg
test
cmp
cmc
dec
inc
test
cltd
sub
lea
or
lods
aaa
fisubrs
daa
test
add
outsl
ja
sbb
jg
aad
mov
cmp
gs
popa
push
fnstenv
pop
and
inc
pop
cmpsb
adc
push
jl
xlat
pop
andb
jbe
mov
subl
out
inc
shll
dec
mov
ret
out
lcall
dec
sbb
pop
jg
add
ret
jno
insb
icebp
hlt
jmp
jle
mov
xor
and
insb
out
push
mov
popf
and
fcmovb
data16
adc
sbb
and
aad
or
cmp
gs
out
and
loop
mov
jmp
out
imul
jmp
cmp
push
jns
xor
imul
cmpb
adc
data16
and
xor
imul
jno
mov
out
loop
cmp
inc
mov
jno
js
xchg
jnp
cmpb
xor
lret
pop
sub
enter
pusha
or
int3
mov
sbb
jecxz
out
shlb
inc
cmpsl
arpl
push
push
fldenv
mov
xor
mov
mov
jno
nop
fimull
push
lea
mov
fs
mov
jns
jae
mov
ss
stos
xor
lret
xor
popf
mov
sbb
or
mov
cmp
ret
xor
enter
imul
mov
rcll
cltd
push
cmp
sbbb
lcall
xor
imul
clc
mov
push
xor
xchg
mov
in
cs
adc
mov
dec
test
cmp
cld
mov
inc
out
push
mov
std
xor
ficoms
call
and
xchg
in
dec
jmp
dec
pop
data16
imul
inc
xorl
call
fldl
cmpb
xor
les
data16
in
mov
adc
dec
inc
sbb
push
sbb
stos
jae
mov
sbb
test
sub
je
sub
int
imul
jno
sti
jp
test
dec
inc
jb
mov
call
push
push
ljmp
adc
mov
pop
mov
mov
sub
leave
ret
loope
cmp
in
notl
cmp
jae
lcall
mov
inc
push
data16
cmpsl
fsts
imul
ret
nop
inc
xchg
cmp
xor
hlt
incb
lds
adc
pusha
in
sub
cwtl
push
sti
test
cli
imul
push
call
mov
sbb
adc
mov
fucom
popa
xor
jb
cmp
scas
mov
dec
jecxz
lcall
pop
sbb
clc
sar
sub
scas
pop
cmp
out
cwtl
pmulhuw
std
push
enter
fstpl
pop
inc
cmp
lret
hlt
lret
push
shll
sar
jnp
xchg
jle
add
jp
mov
sbb
shll
pop
pop
adcl
icebp
jge
add
addb
pop
mov
mov
fldcw
xchg
lret
push
push
dec
jo
mov
cmpb
data16
mov
jb
dec
fcomps
cmpsl
cmpsb
in
lods
dec
insb
xchg
add
dec
test
xchg
push
inc
mov
inc
jbe
rorl
add
add
test
fwait
and
pop
shll
mov
sbb
cmc
es
std
mov
movsl
lcall
shrl
out
dec
push
cmp
popf
movsb
mov
push
xchg
jl
aad
std
push
cwtl
fcoms
out
and
aad
mov
testl
xor
inc
std
adc
ds
sub
int
enter
ss
xchg
push
inc
xchg
mov
and
xlat
pop
in
add
or
jbe
enter
mov
bnd
insb
lds
lcall
xor
fsubs
inc
into
addb
out
outsl
sbb
imul
aaa
negl
xor
sbb
adc
sbb
mov
divl
imul
cwtl
mov
das
add
mov
lods
and
iret
adc
pop
ds
adc
xor
jp
ja
adc
stos
push
xchg
sahf
fmuls
xchg
pushf
punpckhwd
mov
aam
test
add
push
shl
sarl
xor
cld
add
jns
sub
leave
repnz
mov
add
shll
cmp
neg
mov
sbb
negl
pop
cli
out
jns
mov
fbstp
scas
mov
sbb
inc
jp
faddl
iret
das
fmull
add
enter
xor
ja
adc
in
cmpsl
sbb
ds
fdivs
lock
push
xchg
fsts
gs
scas
ret
add
mov
sti
call
mov
shl
and
cmp
cmpsb
cmp
fimuls
pop
out
ja
ds
insl
in
loope
adc
adc
xchg
inc
jl
in
andl
inc
cmpb
leave
fsubs
adc
nop
bound
test
cs
mov
aas
test
mov
dec
dec
sub
stos
stos
mov
lret
stos
or
xor
jle
push
dec
or
in
sub
xchg
fucomp
push
lds
mov
out
test
mov
adc
rorb
daa
pop
or
out
pop
dec
xor
or
or
fists
and
cli
test
outsb
mov
mov
in
test
call
int3
pop
jmp
je
jge
mov
into
std
push
rorb
jp
pop
jns
or
loope
aad
bound
mov
clc
jno
js
xchg
jecxz
ljmp
sti
test
add
bound
push
sbb
orl
stos
pop
inc
mov
add
xor
adc
xchg
push
lret
repnz
push
cmpsl
dec
mov
outsl
fwait
mov
test
push
into
adc
or
push
inc
pushf
mov
sahf
xchg
adc
ds
cltd
mov
sbb
daa
inc
lahf
inc
cmp
mov
adc
xchg
push
sbb
inc
out
fdivl
roll
scas
sbb
or
inc
stos
test
pop
and
xchg
mov
inc
mov
mov
and
pop
addr16
mov
adc
gs
jbe
js
testb
repnz
aas
js
outsl
mov
pop
mov
sti
ljmp
loop
adc
push
test
dec
pushf
fdivrs
cmp
in
sahf
add
or
push
or
xlat
push
add
sbb
mov
jp
jl
bswap
or
daa
sub
popf
shll
test
sub
mov
xchg
or
xor
xor
subl
adc
test
jo
and
jne
mov
testl
imulb
test
popa
iret
das
dec
fildl
int3
push
xor
sub
xor
gs
push
cmpsl
jle
stos
jae
push
fnsave
cmpsl
subb
call
cmp
xchg
ljmp
ret
addr16
je
ret
mov
ret
mov
push
ss
and
jmp
insl
fcmovnu
dec
stc
sbb
fcoml
popaw
cmpsl
clc
mov
pop
mov
scas
and
int
add
loopne
shlb
ljmp
jbe
int
out
lock
inc
out
lock
inc
fcompl
xchg
pop
loopne
xchg
cmc
lret
xor
clc
jnp
sbb
insb
ds
xor
data16
sub
addr16
dec
repz
dec
jne
pop
fidivrs
xchg
xchg
rolb
lcall
stos
stos
cmpb
mov
in
adc
pop
sbb
jb
adc
hlt
mov
jl
les
sub
ds
mov
dec
adc
inc
xchg
les
cmp
mov
jl
mov
imul
pop
out
and
and
pop
or
fiadds
push
cmp
into
lods
add
push
sbb
xchg
adc
clc
mov
or
stc
mov
divl
jnp
movsl
stc
cmp
or
shrb
jae
aad
sub
stos
push
in
add
cmp
push
push
mov
dec
aam
cwtl
mov
enter
mov
push
sahf
lods
je
enter
jae
bound
cmp
out
pushf
xchg
test
arpl
jp
mov
xor
xchg
mov
adc
in
lea
les
lret
push
test
xchg
aas
sub
fwait
fsubrl
jg
sarb
in
call
mov
cmp
test
xor
pop
lods
sbb
dec
inc
mov
lret
insb
mov
push
dec
xchg
call
sub
jo
cwtl
sbb
imul
dec
out
mov
sbb
jns
xor
and
xor
adc
push
fisubrs
into
and
lock
pop
aad
push
pop
icebp
jge
test
inc
das
sub
dec
pop
xor
mov
jg
sub
xor
inc
adc
and
aas
sbb
je
fldz
ss
push
xor
and
inc
jmp
hlt
xchg
addr16
jb
loopne
mov
pop
sub
aaa
int3
mov
daa
fcompl
cmp
das
push
dec
add
iret
cmp
dec
cmp
sub
cld
adc
ljmp
std
leave
inc
push
push
movsb
adc
in
xchg
cmp
out
xchg
enter
or
stc
mov
cmp
push
xor
jns
xchg
mov
inc
arpl
inc
and
pop
mov
in
push
in
clc
out
xor
clc
xor
ficomps
adc
xchg
lock
sbb
pop
mov
sbb
sbb
xchg
sahf
decl
lahf
stos
and
pushf
mov
js
pop
inc
aam
xchg
fstpt
xlat
ljmp
lods
out
push
loope
push
mov
push
rcr
pop
bound
ds
mov
ret
arpl
ret
sbb
bound
iret
xchg
sbb
movb
imul
add
in
jns
add
mov
test
sbb
stc
pop
ja
insb
jno
ds
push
jae,pn
cmp
sbb
xchg
bound
fcmovnb
mov
rorb
mov
add
mov
scas
jecxz
cmp
mov
push
les
shl
fcomip
daa
mov
loop
add
clc
bound
sub
mov
hlt
mov
push
fnstcw
popf
jl
insb
aaa
lock
xor
loope
repnz
cltd
daa
sbb
imul
arpl
sti
sub
fbstp
or
loop
lods
pop
and
push
xchg
sbb
dec
je
pop
xchg
cwtl
mov
pusha
xor
fdivr
inc
cli
jo
sbb
in
pop
jmp
inc
xchg
dec
mov
pop
cmp
inc
and
or
adc
out
dec
mov
and
das
movsb
jo
test
push
test
adc
sbb
out
stos
jae
in
rcrb
cmpl
icebp
iret
xchg
inc
xor
inc
add
inc
pop
daa
or
in
or
pop
xchg
enter
cs
loop
dec
mov
std
and
test
jecxz
es
mov
loope
and
xor
add
repnz
insb
aas
add
dec
les
incb
jne
mov
jp
rcll
icebp
mov
fstp
xchg
sub
mov
mov
pop
insb
mov
xchg
adc
mov
jmp
add
sbb
dec
ds
and
push
push
shl
call
test
mov
xorl
dec
ror
pusha
sub
lods
imul
push
xchg
shl
sub
int3
insb
xchg
mov
repz
xchg
jp
xchg
pop
cltd
stos
sbb
imul
mov
mov
std
leave
pop
iret
jge
add
cwtl
add
test
shlb
mov
lock
sbb
test
jmp
and
lret
push
push
bound
push
cmp
out
mov
int
lret
enter
xor
cltd
and
rcl
jl
pop
xor
jns
xor
mov
mov
jecxz
or
popa
sub
cmp
pop
xchg
lods
rcr
pushf
mov
cs
jle
mov
loope
pop
jnp
ret
iret
jno
out
inc
sbb
in
xlat
jg
es
jbe,pt
xor
mov
inc
inc
or
pop
out
fisubl
sub
jle
sub
inc
scas
or
sbb
xor
mov
jb
pusha
cmp
pop
cli
in
mov
xchg
mov
movsb
sub
clc
add
and
mov
out
mov
cmp
inc
add
or
loope
clc
pop
and
dec
out
rorb
test
jne
adc
add
sub
add
xor
add
repz
test
popf
insl
cmp
jns
dec
lods
dec
pop
movsl
mov
pushl
inc
test
push
jbe
lods
push
lahf
call
mov
mov
lahf
stos
mov
in
jbe
jge
out
jns
and
in
and
lret
sbb
sub
sbb
inc
out
mov
sub
mov
adc
xchg
inc
push
mov
mov
test
fstpl
jge
xor
push
pop
and
dec
out
jns
leave
mov
fmul
push
pop
sub
stos
mov
jcxz
mov
mul
dec
in
cld
dec
fidivrl
pop
pop
fldl
mov
aas
jb
cwtl
loop
outsl
sarb
inc
out
test
jnp
or
lret
and
fwait
cs
call
push
or
mov
loope
out
mov
push
jmp
mov
dec
sbb
dec
push
fstpt
mov
sbb
mov
push
fadd
insb
jbe
into
xchg
inc
decb
lret
jnp
jnp
into
cmc
adc
xor
cmpsl
outsl
jmp
test
mov
xchg
loopne
lret
mov
testb
fnsave
test
cmpsb
dec
xchg
and
testl
popa
cmpsl
or
pop
mov
cmp
push
mov
std
ficompl
fld
mov
adc
clc
xchg
or
or
mov
xor
call
je
lods
out
das
lret
adc
mov
fisttpl
es
cmp
mov
pop
loopne
mov
jecxz
fidivs
fidivs
jp
in
pusha
hlt
pop
mov
insl
inc
pop
sti
test
adc
rorb
into
es
movsl
cs
mov
shll
inc
cwtl
sbb
push
ret
mov
dec
xchg
scas
add
adc
and
xchg
push
push
sub
fs
out
sahf
cwtl
inc
ja
inc
lret
sub
scas
or
aas
sahf
decb
fwait
jp
addl
js
and
mov
aad
pop
xchg
push
sub
dec
mov
enter
pop
subl
loop
in
sub
cmpsl
aad
out
test
sub
lahf
inc
inc
lods
imul
xchg
mov
push
pushf
ficompl
hlt
aad
add
xlat
xchg
or
mov
jmp
outsb
dec
adc
or
fists
and
cmp
mov
clc
mov
fidivrs
fldl
insb
outsl
shll
cmp
xchg
dec
mov
add
int3
movsl
jg
cmp
cmpsl
and
arpl
dec
decb
mov
pop
or
adc
cld
js
jno
mov
pop
fildl
mov
adc
test
or
cmpsb
xor
add
lahf
jno
xor
fildl
push
ja
movsb
int3
cld
bound
std
xchg
sub
adc
popf
xchg
fs
ss
and
or
fimuls
cs
mov
ftst
xchg
dec
push
or
jge
or
outsb
pop
jp
in
jbe
jp
jg
push
hlt
pop
mov
mov
hlt
clc
aam
push
je
fs
in
push
mov
or
data16
mov
dec
fsts
sbb
roll
cltd
push
lods
insb
fwait
cli
rorb
stc
pop
pop
call
push
and
mov
push
sbb
call
leave
sub
and
xchg
mov
ljmp
pop
xchg
pop
xchg
mov
mov
mov
lock
mov
mov
pop
sub
test
sub
pop
out
cs
xchg
cmpsl
xor
lcall
xchg
mov
xchg
leave
in
xor
shll
mov
lcall
fnsave
ds
fcomi
mov
mov
jle
loopne
sbb
test
in
mov
test
lds
mov
sbb
outsb
in
push
mov
popa
fsubrs
mov
mov
cmp
xchg
dec
rcll
sub
adc
xchg
aaa
mov
xor
sub
cmp
and
in
mov
fisttpll
sub
inc
mov
mov
pop
add
iret
mov
jge
mov
adc
mov
add
movsb
std
ret
cmpsb
xor
ret
mov
pop
fs
insb
mov
shrb
call
jmp
add
push
xchg
and
fldt
inc
rorb
xorl
dec
push
shlb
dec
cwtl
movsb
and
jo
xlat
jmp
mov
cli
jg
jl
xchg
lds
in
pop
inc
fwait
rcrl
fsubrs
xlat
stc
scas
cmp
filds
enter
push
pop
in
repnz
mov
pop
dec
dec
mov
sub
pop
push
aad
test
pusha
xor
xor
sbb
icebp
add
sub
imul
mov
push
add
xor
sbb
mov
xchg
fwait
mov
pusha
lods
lea
sbb
sub
dec
xor
out
movsb
push
stos
jmp
inc
or
mov
inc
les
ljmp
add
sub
cmpsl
lret
cld
push
scas
rorl
mov
shlb
lret
jl
add
xor
fbld
aad
adc
push
out
out
mov
jbe
sbb
sub
in
pop
add
or
jle
mov
cmc
aam
test
jmp
ret
push
lret
pop
push
fcomip
rorl
xchg
sahf
lock
or
xlat
push
cmp
mov
inc
pop
mov
jne
push
push
leave
je
cmp
stc
ss
or
movsb
fwait
push
dec
adc
insl
mov
cli
push
xlat
into
in
fidivrs
clc
pushl
aas
jb
std
pop
push
aas
mov
std
dec
addr16
xchg
sbb
xor
pop
push
xor
mov
dec
sub
fstpt
inc
xor
popf
fldt
outsb
mov
popf
push
out
cmp
inc
lret
mov
jp
rorl
pop
lea
scas
lods
pop
sub
or
inc
dec
test
dec
ret
sub
push
imul
jmp
iret
pop
popf
ret
pop
xchg
xchg
and
dec
add
fyl2x
inc
in
scas
xchg
mov
outsl
add
and
mov
adc
popl
add
mov
sub
pop
mov
ja
dec
ja
fmuls
pop
push
in
lock
nop
mov
fstl
subl
shlb
cmpsb
dec
mov
scas
lock
movsl
popa
in
xchg
data16
mov
mov
pop
sub
mov
push
pop
push
mov
sub
jns
aad
mov
mov
push
into
aaa
repz
movsl
push
jo
sub
dec
sahf
or
push
fsts
mov
daa
aaa
cmpsb
imul
jo
jo
stc
xchg
push
std
out
cmp
xchg
push
push
cs
push
je
pop
or
jne
inc
repz
test
clc
mov
xchg
sub
cmp
dec
nop
scas
loope
das
outsl
popa
inc
daa
xor
mov
pop
sub
dec
adc
mov
pop
divb
repz
sbb
dec
xchg
insl
out
mov
xlat
pop
insl
mov
aas
xlat
and
pop
js
enter
mov
adc
leave
or
ror
inc
fcompl
mov
xchg
mov
int
inc
icebp
aas
and
in
rcrl
cmp
xor
subl
andl
add
lret
xchg
and
and
push
and
or
rorl
subb
pop
jecxz
out
je
ljmp
cmp
pop
addr16
cmpsl
add
cmp
mov
mov
mov
inc
gs
and
leave
cmpsb
hlt
adc
xor
dec
ljmp
push
icebp
cmp
sahf
inc
js
pop
inc
popf
test
mov
and
bound
cs
or
leave
insb
xchg
push
xor
dec
xor
jl
mov
lret
out
cmp
pop
xchg
xor
xchg
es
ret
cwtl
mov
mov
pop
sbb
mov
jnp
pop
and
int3
out
in
pop
mov
imul
movsb
adc
data16
cmc
rcll
rcl
jmp
sub
jno
xchg
sbb
icebp
mov
mov
jne
mov
movsl
add
lret
xor
mov
xchg
aas
les
lret
xor
and
cmpsl
loopne
push
in
fists
adc
out
out
pop
dec
mov
cs
mov
or
pop
mov
test
jecxz
pushf
cmpsl
sarb
in
call
mov
out
data16
jecxz
je
stos
fs
dec
sahf
call
jo
add
or
xchg
cmpsl
pusha
enter
lock
sub
push
dec
mov
sti
sbb
lret
push
adc
add
outsb
pop
pop
pusha
stos
jmp
andb
lods
fbstp
shlb
nop
rclb
aaa
xlat
icebp
xchg
lock
cmpl
aaa
shlb
outsb
gs
fildl
mov
jg
adcb
push
in
jecxz
lret
jecxz
add
adc
outsl
aad
rcll
orl
jle,pt
cmc
push
mov
xchg
xorb
in
in
lcall
int
cmp
and
jg
mov
int
mov
inc
dec
mov
out
ss
sti
xchg
cmpsb
mov
hlt
cmp
inc
dec
cmp
dec
jbe
call
and
push
adcb
fcoml
jbe
mov
into
or
push
mov
bound
or
lcall
lea
jl
enter
fmull
insl
mov
nop
inc
scas
pusha
aad
stc
les
mov
sbb
aaa
mov
ffree
call
mov
fidivs
mov
insl
xor
popa
jb
lahf
adc
adc
pushf
sbb
hlt
dec
aaa
inc
sahf
jno
pop
adc
and
adc
shld
jl
hlt
insb
or
cmp
adc
fs
mov
jae
adc
pushf
std
mov
test
aam
stos
jbe
lcall
jecxz
insl
cmpsl
les
cs
sbbl
jp
inc
out
test
test
dec
mov
es
popf
mov
bound
jp
xlat
push
lods
or
jb
xchg
adc
orb
sbb
aam
bound
gs
adc
shr
add
adcl
mov
and
.byte
lock
.byte
sbb
xor
adc
add
ljmp
orl
fcmovnb
repnz
and
xor
hlt
mov
xor
gs
mov
loopne
sub
insb
jge
fiadds
loopne
sarl
rcrb
lahf
movsl
add
jbe
push
dec
aas
mov
ret
jae
push
pusha
cmc
push
in
aad
shlb
imul
in
or
mov
cmp
adc
adc
cld
xchg
stos
fbstp
sub
jno
stos
pop
pop
cmp
lret
add
cmc
mov
adc
mov
addr16
xor
and
jo
test
mov
adc
stos
dec
scas
pop
cmpsb
into
outsb
out
mov
fmuls
addl
sub
sarb
in
sub
push
add
push
sub
dec
stos
int
das
pop
cld
mov
push
pop
cmp
cli
jp
loopne
int3
xchg
int3
push
mov
jmp
scas
inc
mov
icebp
pop
jmp
jmp
lds
ret
bound
dec
sub
outsl
mov
xchg
fiadds
loop
icebp
insb
nop
jbe
dec
xchg
cli
shlb
dec
es
testl
jns
mov
and
cmp
hlt
test
jecxz
push
xchg
dec
stc
loope
sub
fldt
xchg
movsb
push
cmpsl
andb
cmpsb
rclb
js
pop
and
clc
lcall
hlt
inc
fcmovb
sbb
jl
jno
arpl
pop
jbe
mov
aaa
rcrb
push
cmp
stos
adc
and
jle
cmpb
pushf
sbb
shll
pop
cs
adc
into
cmp
ss
xor
in
das
mov
mov
out
sub
xchg
lods
xlat
xor
sub
iret
loop
push
mov
stc
push
stos
adc
xchg
pop
.byte
inc
or
xor
add
xchg
xor
add
daa
add
push
xchg
sbb
sub
cmp
adc
int
mov
out
push
cmp
popf
bound
fdivrl
push
jg
xor
ljmp
ds
movsl
pop
cmpl
clc
daa
inc
xor
add
pushf
dec
scas
adc
inc
pop
std
mov
movsb
jae
cmp
push
cmpsb
adc
sarl
mov
sbb
scas
lods
clc
stc
sbb
xchg
mov
and
jmp
mov
pop
jp
push
mov
rcrl
das
adc
xchg
and
sbb
pop
inc
shl
cmp
and
and
mov
outsl
xchg
and
or
test
add
lcall
add
and
or
inc
sbb
mov
shr
and
je
repnz
les
mov
shll
mov
je
cld
sbb
or
mov
insb
cmp
imul
stc
scas
cltd
push
dec
repz
mov
sbb
cmp
mov
test
pusha
and
mov
sub
cmpsl
gs
cmp
xchg
pusha
jae
xchg
mov
or
fwait
jno
sub
inc
ja
jmp
mov
jge
pusha
rcrb
scas
sbb
xor
je
movsb
pushf
jae
xchg
fdivrs
add
mov
ret
pushf
ret
push
and
not
jmp
pop
out
aas
scas
faddl
daa
pop
mov
mov
repz
add
jae
xor
test
sub
js
adc
mov
or
enter
dec
fwait
test
mov
enter
cmp
fcom
aad
ljmp
sub
imul
xchg
out
xchg
sub
cmpsl
or
push
stos
leave
in
sbb
mov
in
sub
xchg
sbbl
jo
add
stc
mov
aad
mulb
adc
mov
push
lahf
inc
jo
jg
adc
or
not
ds
push
scas
pop
push
loop
lret
mov
data16
gs
xor
sbb
dec
pop
dec
addr16
inc
mov
mov
shlb
mov
mov
cmpsl
mov
xchg
js
hlt
push
es
jg
bound
subl
out
pop
pop
in
cmpsb
out
inc
adc
add
mov
and
jl
loope
fwait
in
add
cwtl
add
test
xchg
add
in
lds
cltd
and
add
dec
dec
pop
mov
sbb
jg
xlat
mov
xor
mov
scas
mov
cmpb
int3
loopne
jecxz
call
adc
test
jg
mov
dec
dec
std
test
dec
lcall
dec
xchg
ror
sbb
test
cmpsb
stos
mov
adc
jb
mov
fsubrl
rep
pop
and
xor
inc
outsl
xchg
cmpsb
add
push
bswap
outsl
fiaddl
sub
lret
imul
jbe
push
inc
aas
aad
dec
cmp
outsb
mov
fidivl
mov
cltd
sub
xchg
cmp
add
xchg
scas
adc
aad
add
and
pop
jb
rcrb
sub
mov
pop
mov
push
and
sub
popa
dec
jg
push
push
cmpsb
loopne
out
jb
and
loope
and
add
bound
lock
in
movsl
sub
dec
push
jmp
sti
cli
mov
jg
jecxz
inc
push
or
xlat
xchg
mov
xchg
adc
xor
bound
enter
jmp
aam
sbbb
into
jno
fists
dec
mov
and
push
and
xchg
inc
pusha
jecxz
adc
testb
loop
test
jmp
imul
cmp
add
pop
or
shlb
jno
push
lret
iretw
sub
leave
cli
adc
addr16
clc
jb
xchg
cwtl
sahf
xchg
ror
inc
or
pushf
call
mov
out
les
jnp
xchg
in
or
out
les
arpl
pop
jnp
xlat
adc
sbb
dec
shll
imul
testl
sahf
rcll
cmp
sbb
adc
jb
clc
cmp
dec
stc
and
sub
xor
add
sub
cmpb
pop
and
mov
das
movsl
fstpl
push
jne
pop
pusha
icebp
lret
out
xchg
add
xor
mov
ss
inc
xchg
jp
push
insl
cmpsl
in
push
xchg
test
cmp
jg
add
add
lret
int
pop
cmp
or
out
subb
sbb
cltd
mov
xchg
cmc
xchg
push
cmp
in
xlat
ds
jne
push
cmp
push
andb
popf
test
dec
mov
loopne
or
adc
fwait
pop
and
test
test
int3
sti
jae
or
or
xlat
jle
clc
pop
rcrb
test
sub
shrl
in
jl
repnz
pop
dec
jns
sbb
push
push
nop
pop
push
pusha
xchg
xchg
testb
imul
pop
adc
mov
ljmp
nop
sbb
push
loopne
or
mov
pop
inc
movsb
mov
bound
pop
out
fisubrl
addr16
adc
sub
pop
rol
nop
lds
jp
mul
stos
jmp
clc
lds
cmp
lcall
out
jp
mov
cmp
fnsave
dec
and
sbb
inc
dec
push
data16
std
leave
imul
shr
popa
dec
jne
push
adc
push
bound
jge
mov
dec
arpl
jle
mov
dec
push
sub
dec
in
in
or
xor
xor
cmp
fiadds
jmp
fstpt
rorl
push
aam
incb
adc
sbb
cltd
cmp
jle
xchg
popa
out
mov
imul
push
sarb
dec
in
jb
push
push
mov
aas
in
jno
jmp
sub
and
pop
adc
repnz
xor
add
push
push
rcrl
ret
pop
das
lahf
addb
add
xor
jo
mov
lds
jp
ljmp
or
pop
mov
scas
push
mov
push
push
shrl
adc
jnp
sub
ljmp
push
aaa
scas
mov
shrl
ss
test
inc
inc
loope
rorl
repnz
neg
mov
int3
fnstsw
jmp
dec
cmp
jo
sbb
dec
mov
push
popf
mov
cmpsl
outsb
inc
cltd
rol
es
inc
and
sbb
popf
mov
fistpl
cmp
jnp
mov
fwait
in
pushf
cmp
dec
cmp
push
sahf
add
ret
and
sub
jo
and
sbb
xor
mov
jo
xchg
jns
aas
aam
and
jbe
call
xlat
mov
adc
mov
jg
and
leave
fildll
lods
and
divb
ret
mov
enter
xor
enter
es
mov
adc
mov
and
add
lods
and
pop
add
jnp
sbb
cmp
les
mov
jb
fs
adc
in
mov
sti
cli
and
sub
lea
bound
daa
fcomps
sahf
dec
and
aaa
mov
push
add
ror
sahf
jle
shll
shlb
mov
aaa
js
loope
jmp
stos
xor
jg
xlat
pop
xor
fdivrp
mov
aam
fiadds
push
inc
fldt
pop
stos
pop
int3
xor
pop
popa
rol
push
or
mov
flds
test
and
sbb
cmpsb
sub
je
ja
sub
cmpsb
clc
pop
lcall
ds
in
mov
jb
inc
mov
xor
mov
sbb
inc
pushf
aaa
stos
fcomps
loopne
mov
add
xorl
in
sbb
cmp
repz
sbb
pop
sahf
subl
cmp
les
and
aam
inc
push
pushf
cmp
inc
mov
adc
test
out
loope
nop
insl
lcall
or
popf
cmp
cwtl
pop
lahf
lcall
adc
sub
push
pop
scas
sbb
pop
push
aas
or
inc
and
rorb
mov
mov
outsl
adc
mov
cmp
mov
stos
lret
jns
shrl
std
mov
bound
popa
dec
xchg
jbe
test
and
add
and
repz
ja
cmpsb
and
lock
and
loop
popf
dec
leave
and
das
push
cmp
in
sub
popf
lea
fs
push
clc
push
mov
fmuls
cs
cmpsb
cwtl
cmpsb
mov
out
xor
lods
sbb
xchg
add
mov
pop
rclb
push
arpl
add
jo
xor
jno
stos
xchg
cmp
push
aaa
inc
sbb
lock
movsb
sbb
jo
test
push
insl
cltd
movsl
sbb
fcmovnbe
xchg
inc
lret
fidivrl
hlt
or
pop
mov
out
sbb
jle
inc
imulb
pop
ds
ficomps
adc
push
sbb
das
inc
in
ss
sti
ret
mov
stos
int3
insb
lods
pop
pop
cmpb
and
mov
pop
sbb
ret
push
int3
mov
cli
sub
lods
sub
jne
imul
dec
add
sub
bound
imul
dec
cmp
add
aaa
pop
or
lahf
pop
xor
loopne
push
testb
inc
mov
lods
or
mov
stos
sbb
imul
xor
sub
faddl
sub
push
dec
jecxz
mov
fldcw
or
loop
xchg
inc
inc
cli
jo
andb
movsb
sub
pop
popa
add
mov
jle,pt
arpl
pop
scas
into
mov
gs
nop
rcr
sub
aad
lods
pop
icebp
inc
add
mov
in
or
cmpsb
mov
dec
mov
xor
enter
lret
inc
js
arpl
ljmp
mov
jecxz
jnp
sbb
mov
mov
mov
aas
addr16
xchg
sbb
bound
std
pusha
loope
xor
ret
or
ret
fwait
ret
imulb
shr
mov
les
dec
cmpsb
out
add
ss
test
insl
faddp
negl
shr
fsubr
lods
jb
mov
aaa
dec
insb
or
cmp
sub
mov
out
mov
js
xchg
js
testl
and
loopne
lahf
and
daa
test
mov
xchg
hlt
sub
in
orl
sbb
mov
dec
sub
add
cmp
pushf
mov
outsl
push
in
cmp
and
lods
sbb
add
push
xchg
insl
xor
popf
dec
test
xchg
and
push
ljmp
jnp
mov
push
mov
les
mov
imul
push
fldenv
push
test
sub
inc
mov
adc
aas
pusha
mov
adc
xor
or
loope
rcrl
mov
scas
test
xchg
aad
and
lcall
imul
and
xor
xchg
fs
or
push
and
add
es
sub
cmp
pop
int
add
mov
mov
sub
ret
jbe
adc
imulb
dec
or
mov
mov
shrb
jb
mov
xor
dec
dec
xor
sbb
out
mov
mov
cmp
fbld
adc
adc
jne
push
pop
in
movsb
imul
mov
sbb
sub
bnd
cmpsb
cmp
filds
cli
push
int
daa
ds
dec
outsb
mov
and
out
mov
ret
rcrl
and
push
jecxz
mov
call
test
stc
in
and
repz
and
or
cmp
jmp
ss
daa
cmp
pop
imul
shrb
mov
sub
sub
and
mov
inc
sub
sti
sub
mov
data16
imul
lea
inc
adc
push
cs
sbb
aad
and
dec
mov
ss
addl
dec
rolb
jp
fs
and
in
add
push
jo
xchg
or
inc
jno
js
mov
dec
notl
mov
movsb
aaa
aas
leave
push
mov
call
sub
inc
lea
add
test
enter
cwtl
in
push
aaa
dec
jmp
mov
pop
movsb
dec
push
sub
iret
aaa
xor
sub
xchg
sub
pop
test
orl
into
jb
js
outsl
idivb
aaa
rolb
ja
ss
adcb
xor
and
lea
mov
inc
js
or
dec
daa
sub
lods
mov
loope
xor
sbb
xor
jnp
mov
lea
or
sub
dec
sbb
in
rcrl
add
aam
or
inc
ds
cmpsb
mov
inc
xchg
mov
jae
shlb
fbstp
out
jne
jg
imul
mov
pushf
sub
sahf
add
cwtl
pop
mov
or
js
mov
sbb
sbb
jae
mov
push
xchg
out
or
mov
mov
mov
movsb
jmp
lea
jp
xor
and
sub
mov
in
ja
cmp
xchg
cs
rcll
push
scas
dec
insl
xor
jnp
jbe
dec
bound
sbb
jne
out
inc
fldenv
jle
inc
and
cmpb
xor
stos
ja
jg
jo
dec
mov
nop
imul
stos
cmp
mov
push
add
cmpl
bound
fidivs
fstps
xchg
sub
sar
and
sub
lret
jb
adc
mov
push
lcall
adc
sbb
inc
xor
cmc
cmpsl
stc
or
bound
repz
lahf
call
push
add
and
jecxz
sbb
repnz
sub
mov
sbb
pop
add
cmp
dec
movsl
lcall
pop
sbb
test
mov
lock
fldenv
push
fsubs
dec
sbb
aad
or
scas
add
push
and
iret
cmp
xor
mov
ret
cli
ss
fimuls
jg
cmp
mov
mov
xchg
test
pop
into
mov
shll
push
or
push
adc
rcrl
xchg
mov
dec
mov
pop
in
clc
xchg
inc
sarb
adc
push
pop
rorb
adc
setb
out
data16
push
pop
addb
scas
pop
push
xchg
scas
mov
das
or
cld
mov
sahf
dec
cmp
cmc
dec
test
inc
loopne
or
clc
enter
sub
push
mov
push
adc
sbb
xchg
pop
cmp
or
shlb
aad
lcall
or
les
data16
gs
jne
push
loop
ret
mov
mov
pop
add
iret
and
ret
cmp
movsl
fmull
pop
inc
sbb
nop
test
jmp
daa
lock
push
or
push
test
daa
shl
call
push
arpl
js
push
loopne
ret
push
sub
je
int
push
xor
sub
imul
sbb
push
or
iret
in
mov
push
cltd
push
int3
mov
ja
adc
xor
test
adc
push
fsubs
push
xchg
push
push
fimuls
cwtl
and
outsl
enter
xchg
mov
nop
loopne
or
cwtl
mov
ja
bound
movsb
sub
dec
sbb
idiv
icebp
sub
or
outsl
idivl
xor
or
pusha
lcall
arpl
and
mov
mov
pop
sub
int3
xor
test
test
mov
or
arpl
cmp
xchg
pop
mull
cmp
insb
dec
mov
ss
push
mov
or
subl
fstpl
daa
lods
fdivrs
pop
data16
outsb
xor
int
test
movsb
add
lret
fwait
xlat
xor
lds
lcall
roll
pop
movsl
sbb
aaa
test
icebp
fdivs
cmp
jo
sbb
sbb
pop
xchg
xlat
repz
xchg
cmpsl
hlt
jg
add
dec
xchg
sub
mov
push
mov
add
scas
jp
dec
push
pop
ja
adc
popa
cmp
pop
sbbl
lods
jmp
and
push
and
mov
out
jp
fs
outsb
imul
sbb
xchg
lret
pop
pop
in
mov
sub
clc
jo
xchg
mov
out
pop
test
ret
fmuls
popf
orb
aaa
aas
sub
xor
shr
inc
pop
mov
sti
test
mov
push
adc
mov
push
push
sbb
push
out
movsb
gs
jge
sub
dec
pop
aas
sbb
pop
hlt
dec
loopne
xchg
add
mov
cltd
mov
cmp
pop
in
mov
sahf
lcall
cmp
sbb
inc
cmp
xor
xor
xchg
loop
divl
jp
and
mov
in
lss
clc
push
call
jg
into
outsb
lahf
scas
sub
call
cs
jbe
mov
or
test
cmc
and
mov
sbb
sti
and
fucomp
fisttpl
mov
imul
push
and
mov
dec
xorl
fld
clc
and
dec
std
lock
dec
dec
mov
jl
out
stos
inc
or
mov
jecxz
in
mov
jo
scas
xchg
mov
jo
out
fistl
mov
mov
push
adc
pop
das
fnstenv
xchg
dec
dec
test
inc
sub
out
ja
mov
scas
mov
imul
mov
lea
pop
mov
sbb
inc
or
fstl
lods
outsb
nop
mov
movsb
ja
push
mov
hlt
or
sahf
lock
xlat
push
jb
js
xchg
insb
sahf
mov
notl
dec
jg
cli
lret
call
jmp
ljmp
or
leave
push
pop
in
and
jo
movsb
sub
repz
call
jae
sarl
jmp
sbb
int
out
jnp
or
loope
xchg
cmc
jno
push
pop
insb
lcall
mov
pusha
icebp
jle
push
mov
subl
je
adc
and
jl
dec
pop
and
movhps
cmc
out
fiaddl
cld
shrl
loopne
lahf
push
pop
xchg
lea
dec
xchg
scas
repnz
push
jp
push
jnp
sbb
lret
int
xchg
ss
mov
jae,pn
ret
push
push
repz
faddp
push
pop
mov
je
push
mov
jp
jno
lahf
or
mov
into
cli
cs
jo
cmp
rorb
and
jnp
mov
sbb
xor
enter
push
mov
sbb
repz
jae
push
or
cmp
ja
scas
mov
cmpb
ror
js
inc
jbe
mov
mov
sbb
das
std
adc
icebp
push
inc
popa
push
pop
mov
add
test
aam
mov
or
mov
lock
push
pop
enter
scas
or
mov
pop
xchg
and
adc
lock
mov
cli
xchg
cmp
mov
jge
push
push
negl
dec
add
push
leave
int3
cmpsl
je
cmp
pop
out
sbb
xchg
jecxz
scas
in
imulb
mov
test
scas
push
xchg
repz
jne
imul
push
test
and
xchg
xorb
lahf
loope
mov
jb
stos
mov
push
pop
scas
fnstsw
mov
jmp
sbbb
in
or
mov
add
aam
xchg
cmp
inc
jne
mov
push
testb
mov
je
loope
adc
stos
lods
outsb
cmpsl
loop
sahf
stc
cmp
push
add
xchg
xorl
jnp
enter
cmp
insb
pushf
imul
sti
pushf
pushf
push
rorb
gs
imul
sbb
or
adc
scas
fwait
sahf
ror
jnp
pop
pop
cmp
fdivs
sti
inc
cs
dec
push
pop
and
xor
fistpll
inc
test
jp
cmpsb
scas
sub
xchg
fistps
push
and
out
es
jne
jl
inc
ljmp
mov
fistl
in
leave
enter
adc
aaa
ficoml
pop
or
adc
stos
pusha
testl
xor
fcoms
lea
movsl
sbb
popf
sbb
cmp
adc
repnz
jge
jle
pop
fcompl
cmpl
xor
cli
jp
cmpsb
nop
sub
fiadds
cs
xchg
push
adc
leave
cmp
scas
push
mov
inc
fcoml
repz
aaa
mov
xchg
add
push
mov
loope
and
inc
loopne
pusha
xor
add
mov
mov
flds
add
cmpsl
dec
shlb
shlb
or
xor
push
lret
lahf
imul
adc
loop
cs
mov
aam
mov
pop
push
push
cmp
pop
aad
and
add
jl
lock
mov
out
mov
fldenv
mov
cmpsb
xchg
mov
and
mov
incl
xchg
shll
xor
mov
cld
push
adc
dec
or
aam
adc
fldenv
dec
dec
mov
mulb
loope
adc
pop
pop
and
iret
add
xchg
test
adc
and
mov
cld
fisttpll
sahf
rorl
lea
xchg
lahf
aad
ja
roll
mov
test
xor
xchg
insb
mov
xor
lods
cwtl
lods
orb
add
inc
adc
ficomps
and
stos
imul
jmp
push
xchg
cmp
stc
out
lret
sahf
aad
inc
jns
or
cmc
loope
jno
push
movb
xor
movsl
add
mov
ret
mov
pop
sub
ds
fs
repz
sub
lods
push
subl
imul
add
hlt
sub
vunpcklps
pop
arpl
scas
popa
xor
adc
sbbl
imulb
dec
sbb
dec
rcl
jge
loop
lods
mov
add
in
jge
xor
sub
test
out
dec
mov
aad
test
imul
add
mov
insb
and
outsl
outsl
xchg
cmp
cmpsl
mov
je
test
jecxz
jae
sbb
out
movb
xchg
cltd
ror
inc
adc
push
cmpsb
ljmp
dec
scas
cltd
cld
cmp
imul
or
fs
pop
mov
aam
cmp
xor
sbb
mov
nop
bound
push
lret
ds
cmpsl
mov
movb
adc
arpl
mov
mov
fistpll
cmpl
inc
pop
ret
xchg
dec
rcr
jge
js
or
adcl
stc
rorl
mov
addb
sub
pop
ja
mov
and
int
inc
aas
inc
dec
stos
mov
repz
sub
insb
popa
add
push
fldl
xchg
mov
adc
xorb
jo
stos
test
notb
and
sbb
fldt
arpl
mov
or
sbb
and
cmp
stos
test
inc
addr16
dec
int3
jo
dec
mov
mov
movsl
dec
push
bound
scas
mov
mov
push
cmpsl
sbb
sti
loop
push
inc
int3
fcomp
ror
negb
mov
mov
adc
jb
paddd
ret
sub
aas
ret
pop
xchg
sbb
hlt
xor
adc
lea
scas
jmp
mov
inc
inc
aas
cmpb
aas
xchg
movsb
sbb
and
mov
movsl
sub
lahf
sub
sbb
lcall
mov
xchg
adc
test
rcrb
and
movsb
cli
push
decb
mov
sahf
cmp
jecxz
push
ljmp
addr16
mov
in
jl
mov
movsb
xor
lea
daa
pop
je
rorl
jo
test
mov
adc
mov
movsb
pop
psubb
and
mov
push
stos
mov
cli
rolb
bound
pop
or
rcr
mov
pop
in
cmc
cwtl
negl
lcall
mov
jmp
jb
inc
sub
pop
mov
cltd
nop
stc
out
mov
mov
mov
sub
stc
inc
and
xchg
bt
fs
or
inc
in
out
sbb
out
cli
je
cld
pop
mov
adc
pop
dec
imul
int3
out
and
lcall
ja
pop
xchg
pop
fsubs
adc
xchg
xlat
sbb
or
stc
adc
add
sub
fpatan
pop
pavgb
xor
cmpsl
dec
mov
aaa
out
scas
push
mov
nop
mov
neg
cmp
shlb
dec
stos
test
es
cmp
add
fldl2t
ja
and
push
jb
mov
inc
inc
pop
mov
imul
inc
pop
cltd
sbb
shll
negb
shrb
ret
lea
fs
ret
loop
bound
call
icebp
adc
frstor
popa
scas
loope
sub
dec
lahf
push
lea
outsb
jg
in
rcrb
pusha
xchg
push
mov
cmp
jne
mov
jae
and
xchg
dec
jns
and
sarb
pop
adc
sub
mov
in
imul
xchg
jecxz
push
mov
xchg
and
jo
sbb
fistpll
sti
shll
fnsave
jae
enter
lret
dec
out
lock
adc
imul
pushf
mov
cs
jge
cld
mov
out
sub
push
xor
call
pop
xor
xchg
push
mov
int3
mov
dec
push
movsl
mov
addb
inc
movsb
add
sbb
mov
mov
outsl
mov
xlat
pop
fisttps
lcall
mov
icebp
ja
dec
std
lea
nop
push
or
pop
push
sbb
pop
mov
hlt
jns
in
repz
shrl
std
mov
pop
scas
and
inc
aaa
inc
gs
pop
in
aas
imul
pop
cld
xor
repz
adc
mov
add
jecxz
push
negb
mov
pop
icebp
and
cmp
jnp
mov
cli
stc
dec
lret
jg
cld
lods
rcrl
subb
es
dec
sub
insb
roll
and
xor
insb
pushf
mov
fdivrl
xorl
stos
repz
das
sbb
leave
push
inc
lea
pop
test
push
jne
gs
lods
cli
push
pop
mov
pop
jo
lods
mov
xor
int3
imulb
addr16
xor
movsb
and
dec
pushf
lcall
xchg
int3
lcall
stos
mov
and
les
and
stc
in
lds
cmp
pop
test
iret
mov
and
std
filds
pop
jno
mov
pop
lds
or
and
or
mov
test
push
addl
data16
aas
push
sahf
ljmp
clc
push
cmp
jno
cli
or
fnstcw
int
pop
adc
pop
push
push
fsubrl
lret
jne
mov
xchg
mov
cmp
xchg
mov
lds
xor
xchg
sub
sbb
adc
inc
add
mov
adc
or
xchg
push
aas
dec
addb
pop
pop
mov
cld
xchg
test
or
xchg
loopne
sub
loop
dec
mov
insb
repnz
mov
inc
ja
hlt
push
mov
aaa
xchg
out
sub
rcrb
fsubl
and
jge
iret
je
jb
out
inc
dec
mov
sub
pop
push
mov
xor
out
aam
pop
addr16
scas
dec
inc
bound
leave
and
pop
adc
push
mull
cmp
ds
inc
lods
mov
inc
dec
ss
mov
stos
inc
mov
jae
nop
inc
xor
std
jns
sbb
fcoms
mov
sub
popw
add
mov
daa
jo
dec
test
jmp
xchg
mov
or
or
cmpsb
sub
imulb
push
sar
lock
add
dec
jno
mov
popl
dec
xchg
popf
cmp
sbb
idivb
std
cmp
cmp
jo
xor
test
shrl
mov
and
cmp
pop
fcompl
stos
iret
js
push
daa
inc
add
xorb
or
pop
xchg
ds
and
sbb
outsb
outsb
in
fisubl
or
icebp
ja
mov
dec
adc
pop
add
mov
test
loope
jmp
jg
es
lods
sub
inc
push
fimull
mov
dec
fsubr
sbb
out
xchg
int3
sbb
jle
jnp
les
cmc
je
xor
xchg
lock
jl
stc
jns
test
mov
xor
test
mov
aam
pop
mov
test
jge
sub
ja
shll
jg
int3
lea
inc
pusha
pushf
mov
mov
outsb
xchg
jno
cmpsb
loope
pop
adc
out
outsl
sbb
sbb
leave
push
mulps
fldcw
ret
mov
les
dec
inc
stos
jle
lds
stc
mov
mov
cld
ljmp
insl
notl
outsl
xchg
xor
dec
mov
subb
scas
out
jo
xorb
movsb
add
es
jo
jl
mov
shl
push
push
ret
jmp
pop
dec
fwait
fs
sbb
xor
jnp
jl
mov
add
in
mov
outsb
mov
into
jbe
sub
jo
cmp
push
sbb
test
test
gs
or
loopne
lds
xchg
adc
push
lods
push
xor
outsl
xchg
cmp
xor
int3
subb
fdivl
dec
mov
cmp
lret
es
test
adc
mov
xchg
lods
test
ss
sub
xchg
push
mov
pop
cld
mov
inc
mov
fdivl
outsl
push
subl
cld
ficompl
insl
push
push
push
fsubp
add
jo
lea
ficomps
sahf
in
adc
mov
lea
jmp
mov
aad
adc
mov
cmp
insl
mov
cs
xchg
mov
push
push
and
jno
lods
adc
test
xchg
pop
dec
ljmp
and
xchg
cmpsb
cli
ret
dec
shld
imul
test
mov
call
xchg
int3
mov
pop
adc
add
mov
sbb
insl
sbb
dec
xchg
jp
call
mov
mov
rcr
cmp
inc
jmp
outsb
or
ret
add
add
cs
cli
xor
arpl
or
loopne
lds
pop
js
pop
mov
mov
jp
mov
data16
dec
bound
jae
jno
xor
iret
adc
lret
arpl
jnp
xor
cltd
jo
jmp
loopne
imull
fs
loopne
outsl
mov
push
cmp
enter
inc
outsb
shl
dec
mov
push
lahf
sub
adc
xor
inc
stc
enter
push
jmp
jp
adc
dec
into
xor
sub
and
jns
jl
shlb
xchg
or
inc
inc
push
pop
movsl
std
je
mov
pop
pop
sub
ljmp
and
lret
inc
popa
add
data16
fldcw
pop
xor
jmp
jle
xchg
push
add
push
lods
xor
adc
push
push
mov
pop
je
and
add
aad
daa
cld
push
repz
popf
jns
sahf
sub
test
loope
mov
add
push
iret
out
sub
xchg
push
test
aaa
sub
inc
xor
leave
imul
sub
mov
les
pop
inc
aam
push
cmc
and
lret
repnz
push
xchg
out
dec
lds
fs
mov
jae
inc
lock
mov
imul
mull
std
jbe
sub
je
mov
cld
gs
xchg
and
sbb
call
sbb
add
sbb
mov
imulb
insl
xchg
add
in
cmp
inc
addb
fidivrl
fdivp
and
out
cmp
xlat
repz
xlat
mov
jae
cmpsb
sbb
add
xor
sbb
or
xor
daa
pop
dec
lods
mov
jp
std
out
call
xlat
ficomps
xor
push
std
push
test
mov
cmp
lods
xchg
imulb
addb
popa
push
mov
sbb
mov
pop
js
cmp
xlat
adc
cmp
xchg
push
shlb
rolb
push
or
mov
jbe
lret
sub
sti
inc
dec
aaa
mov
repz
jmp
jbe
test
xchg
call
in
mov
dec
insb
es
xchg
sar
dec
dec
arpl
jle
ret
fsts
imul
xor
xchg
test
jl
loop
call
sbb
pop
adc
mov
out
stc
dec
and
out
sbb
testl
arpl
xor
into
arpl
pop
or
mov
mov
or
shr
jl
aam
fs
clc
scas
popa
mov
cltd
mov
je
out
pop
sub
jp
xor
es
aad
cmovle
leave
inc
push
loopne
inc
popf
rclb
or
repz
jl
jnp
iret
frstor
add
in
sbb
cmp
outsl
pop
add
lret
xor
sbb
sbbl
adc
cltd
ds
cmp
cmp
mov
lods
jnp
pop
sbb
pop
cmp
fisttps
dec
adc
xchg
frstor
dec
movsl
dec
popa
dec
add
jb
sbbl
or
scas
dec
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
sbb
inc
out
aam
jb
pop
mov
add
call
add
and
pushf
movsl
jp
mov
pop
sub
adc
mov
mov
add
movswl
sub
mov
add
push
xor
pop
mov
jmp
sub
mov
sbb
xlat
les
cs
pop
gs
sub
push
mov
pop
cmp
jne
ret
ret
popa
xchg
outsl
cmp
lahf
mov
xor
out
lock
ret
cmpsl
dec
jl
mov
dec
out
mov
inc
loope
adc
dec
mov
enter
xor
push
rep
stos
pop
cmp
xor
mov
cmp
add
lock
pop
std
mov
aam
les
jns
pusha
pop
popf
mov
pop
inc
aad
dec
nop
stc
xchg
cmp
pop
dec
lahf
lock
mov
mov
aad
ss
lock
and
outsl
stos
insb
mov
jle
dec
and
mov
imul
ja
stc
popl
outsb
stos
pop
cld
scas
and
pop
fcmovnu
pmuludq
xchg
cmp
pop
cmc
inc
sub
cs
rcrl
dec
mov
clc
or
pop
out
or
mov
or
ss
adc
ret
mov
or
mov
test
lret
std
adc
aaa
dec
fsubrl
aam
mov
xor
or
and
xchg
adc
pop
cmp
or
rorb
sbb
out
dec
mov
adc
pop
cmp
ss
add
adc
push
xchg
cmp
in
gs
adc
inc
pop
jecxz
sub
xchg
cmp
sub
mov
jne
popa
or
mov
pop
adc
movsb
xchg
cmp
or
xlat
notl
sub
jno
push
cmp
mov
adc
mov
lahf
inc
shlb
inc
add
fdivl
add
and
mov
mov
rclb
rolb
popl
sbb
jl
int3
add
xchg
cmp
test
inc
inc
das
pop
add
mov
add
lcallw
jb
adc
jge
cmp
mov
rolb
adc
or
adc
mov
lods
sar
shlb
mov
sbb
cwtl
mov
add
push
bound
or
mov
stc
lock
cmp
add
icebp
xchg
clc
mov
roll
pop
pmaxsw
add
fstps
scas
inc
sbb
push
mov
cmpsb
pop
pop
and
mov
inc
sbb
xchg
lret
shl
push
mov
cmp
inc
mov
loopne
cmpsb
jns
pusha
cli
adc
add
out
leavew
lret
dec
pop
push
in
loop
xor
pop
inc
mov
inc
sbb
push
aam
jnp
out
sarb
lea
sbb
and
and
cmp
psrad
cmp
lods
inc
jmp
mov
xchg
aas
rorl
and
and
rorl
or
and
and
mov
cmc
cmovno
test
rclb
out
dec
push
xchg
testb
cwtl
push
and
inc
ja
inc
adc
sub
das
es
movsb
testb
cwtl
jae
roll
cmovno
xor
cmovno
rcll
xor
lret
push
aam
dec
mulps
ret
cmovno
neg
lods
rorl
mov
sbb
sub
into
incl
orl
cmpsl
mov
int3
cli
mov
xchg
add
push
iret
fmuls
psllw
out
mov
mov
fisttpl
inc
cmp
adc
mov
cmovno
and
pmovmskb
push
rdtsc
roll
or
xchg
xor
xor
sarl
fisttpl
inc
or
inc
hlt
lea
rorl
sbb
jb
jge
cmovno
ret
jb
mov
cmovno
addl
sub
or
out
shl
xor
int
inc
hlt
lret
inc
xchg
xor
sarl
out
jge
mov
shufps
cmovno
cmp
adc
mov
or
inc
shll
or
ret
or
jbe
push
xchg
sahf
jb
jno
cmovno
in
jge
mov
pxor
imul
xor
sarl
inc
xchg
xor
sarl
out
lea
rorl
in
je
loopne
aaa
add
insb
repz
rorl
sbb
jb
js
cmovno
orl
bound
inc
lea
adc
or
adc
sbb
es
mov
cmovno
sarl
lea
inc
rorl
rorl
rorl
xor
das
in
push
divl
or
jp
ds
dec
add
fistpll
outsb
cmp
or
shlb
cmp
jmp
dec
xor
dec
add
fistpll
outsb
shlb
rorl
cmp
jno
out
cmp
dec
idivb
lds
or
andb
int
xchg
gs
xor
dec
add
fistpll
outsb
faddl
sbb
mov
and
in
int
mov
or
xor
addr16
xchg
gs
xor
dec
add
fistpll
outsb
xor
mov
push
push
xchg
or
xor
addr16
xchg
cmp
dec
add
fistpll
outsb
xor
mov
inc
push
pop
cwtl
out
roll
scas
jg
push
jnp
cmovno
repz
repnz
cld
ja
or
xor
addr16
xchg
inc
xchg
cli
mov
inc
and
inc
mov
bswap
mov
mov
inc
push
pop
cwtl
daa
lds
xor
sbb
jecxz
lret
mov
ret
cmp
or
cmp
jo
out
cwtl
loope
lret
mov
ret
daa
lea
xor
fisubs
ss
inc
rorl
cmp
mov
insb
inc
fmull
rorl
mov
cmpsb
cmp
das
mov
out
inc
mov
cmc
iret
cld
stos
sub
mov
js
inc
clc
in
lods
rorl
andb
mov
dec
or
fptan
inc
rcl
insb
rorb
insb
cmp
pushf
mov
cmovno
outsl
cmp
mov
push
inc
rol
pop
test
inc
js
add
dec
rclb
imul
xor
pusha
or
or
jg
testb
loopne
xor
icebp
pusha
jnp
insb
es
mov
jle
mov
mov
cmp
sbb
push
sbb
ja
rcll
xchg
pop
ficoms
xor
loope
fs
repz
adc
mov
cmovno
rorl
rorl
rorl
rorl
rorl
popa
cmc
sqrtps
testb
int
cmovno
ror
imul
lea
icebp
inc
rorl
rorl
rorl
rorl
es
and
pop
fidivrs
xor
push
sub
pop
mov
or
scas
xor
in
lds
nop
fisubs
andps
dec
xorl
push
scas
negw
jmp
inc
mov
add
mov
mov
mov
sarb
test
lods
sbb
push
or
adc
inc
jecxz
xor
xchg
or
adc
mov
xchg
or
enter
mov
test
jo
test
push
cmp
push
push
seta
outsl
dec
data16
fstpt
fwait
or
cli
inc
cmp
xor
add
dec
lret
repz
pop
adc
imul
inc
cli
lds
sbb
lods
mov
xchg
pop
daa
xchg
inc
sub
andb
cs
mov
adc
fadd
insb
pushf
test
cmp
xchg
stc
les
movsb
sub
pop
jp
pop
incl
nop
or
cltd
xchg
push
scas
jo
popf
mov
push
fcmovu
ret
add
push
adc
inc
sahf
incb
push
inc
pushf
jae
or
dec
adc
sbb
add
les
xchg
jne
adc
test
call
test
add
adc
cmp
or
call
push
int3
lea
movsl
bound
add
jecxz
testl
stc
dec
lret
or
shlb
jo
rol
xor
nop
sbb
or
inc
mov
testb
insb
jne
pop
push
xchg
gs
xchg
dec
outsb
pop
sarl
cmp
mov
and
jbe
lahf
shrb
jl
inc
lcall
int3
push
hlt
and
mov
pop
or
or
fsubl
jge
push
test
outsb
std
pop
faddl
outsl
sub
mov
inc
lea
inc
mov
insl
fdivr
imul
pop
xchg
xchg
popf
push
mov
mov
push
adc
mov
and
dec
inc
loope
mov
dec
push
scas
scas
mov
icebp
out
ret
xchg
or
aas
sub
iret
cmp
mov
cmp
adc
mov
test
fcmove
aad
movsb
lret
or
pop
stos
lods
mov
fsubs
xchg
sub
xor
jg
xchg
or
cs
loop
sbb
sbb
in
xor
xor
lret
sub
ja
mov
sub
jns
inc
out
push
sar
push
stc
addr16
sbb
imul
fisubs
add
add
mov
cmp
les
sbb
add
add
add
add
or
add
add
dec
add
dec
add
xor
adc
dec
add
cld
or
cmp
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cld
or
hlt
sti
or
adc
or
ud0
pop
decb
pop
decl
sub
or
pop
decl
xor
or
daa
decl
inc
decb
das
decl
dec
decb
aaa
decl
pop
decb
aas
decl
data16
inc
decl
jo
or
dec
decl
jnp
or
push
decl
mov
or
pop
decl
xchg
decb
decl
add
decl
lods
decb
ja
or
mov
decl
decb
xchg
or
sar
or
decl
fdivrp
or
xchg
decl
ljmp
add
decb
cmpsl
decl
add
or
scas
decl
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
jb
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
insb
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
imul
fs
insb
add
outsb
insl
insl
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
outsb
imul
insb
add
outsl
arpl
xor
fs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
decl
add
add
or
add
add
jmp
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
je
arpl
imul
add
push
dec
gs
jo
outsb
inc
outsb
jne
inc
add
add
popa
addr16
imul
dec
arpl
push
imul
gs
jne
jb
push
popa
insb
jne
inc
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
popa
jb
push
gs
imul
push
outsb
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
jo
jb
inc
jbe
outsb
je
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
ja
jbe
dec
jne
push
jb
je
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
je
jb
gs
gs
fs
imul
inc
inc
insb
gs
outsb
jne
add
add
inc
dec
outsl
arpl
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
add
mov
mov
test
mov
test
test
incl
test
mov
mov
test
mov
mov
test
add
test
incl
test
add
add
incl
incl
incl
incl
add
incl
mov
test
add
test
test
test
test
test
incl
mov
mov
test
test
incl
mov
mov
test
test
incl
mov
mov
test
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
add
test
add
incl
incl
incl
incl
test
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
add
test
test
add
add
test
test
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
mov
add
add
inc
mov
xchg
test
mov
xchg
add
test
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
test
incl
add
mov
add
add
add
add
test
test
test
test
test
test
test
test
test
mov
test
test
test
mov
incl
add
test
test
mov
test
add
add
test
mov
mov
test
mov
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
mov
test
test
mov
test
mov
mov
add
add
test
test
mov
mov
inc
mov
xchg
test
add
add
add
test
mov
test
add
add
inc
mov
add
test
test
test
test
inc
mov
xchg
test
mov
add
add
add
test
inc
mov
add
incl
add
add
incl
add
add
incl
add
add
incl
add
mov
test
test
add
test
test
incl
add
add
test
incl
mov
test
add
add
add
add
add
test
test
incl
add
test
incl
mov
test
add
add
test
incl
add
incl
incl
mov
test
add
add
test
incl
add
incl
test
add
test
add
mov
test
add
add
test
incl
add
incl
add
incl
add
add
test
mov
test
add
add
test
incl
add
incl
add
add
test
mov
test
add
add
test
add
test
mov
test
add
add
test
test
test
test
test
test
test
mov
test
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
add
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
sub
and
add
add
imulb
xchg
lods
add
and
ret
adc
jnp
int
clc
cwtd
push
loop
push
pop
fldcw
movsb
subb
jb
std
jl
push
jb
mov
dec
jmp
or
xor
mov
pop
shll
jg
daa
sbb
outsl
mov
jp
lret
inc
or
or
xlat
cmp
in
push
and
and
inc
push
cwtl
sub
mov
inc
mov
sub
fdivrl
ja
jmp
mov
and
paddsb
lock
mov
insl
ss
jecxz
and
mov
pop
shrl
mov
popf
cltd
inc
xchg
mov
aam
cmp
jg
and
cmp
pop
mov
pop
push
test
mov
xor
xchg
mov
jns
pop
mov
pop
push
clc
jmp
mov
mov
out
lret
mov
in
mov
cld
icebp
cmpsl
fwait
cmovno
mov
ss
add
add
fwait
shlb
mov
mov
loop
xchg
stc
push
mov
cmp
cmp
jmp
mov
cld
orb
paddq
clc
pop
jbe
and
jno
sbb
jmp
ss
mov
sub
push
and
pop
jnp
shll
mov
std
into
jle
data16
and
pop
adc
popf
lahf
lock
ds
cltd
fidivs
pop
shlb
xchg
jmp
imul
sahf
call
orb
or
loopne
mov
xchg
outsb
jmp
repnz
mov
jb
add
repnz
roll
dec
add
push
or
fcomps
push
repnz
pop
xlat
dec
inc
adc
ja
inc
cld
inc
fsubl
add
jne
push
fisubrs
cmp
jne
mov
xchg
cmp
jmp
and
ljmp
scas
cmp
lock
cmp
mov
mov
icebp
iret
sub
movsl
insl
int
pop
dec
jns
xor
xchg
aas
mov
or
push
push
out
sbbl
into
dec
inc
lock
xor
in
cmp
dec
and
jne
test
xor
pop
aaa
adc
xlat
scas
push
sbb
push
or
jnp
xor
lods
mov
les
push
pop
jns
fs
xor
sar
push
jne
jne
push
ss
adc
sbb
dec
cmp
sbbl
imul
subb
dec
daa
cmp
and
out
sub
cmp
movsl
fimull
push
add
jge
in
cmp
and
ds
dec
push
ljmp
sub
hlt
mov
xor
xchg
cli
sbb
paddsw
std
adc
outsb
jae
gs
push
cmc
add
lea
jo
cmc
and
dec
sbb
and
nop
fs
and
lret
sbb
jns
cmp
pop
lds
add
aaa
jge
mov
inc
lret
aas
enter
xchg
lock
cmp
enter
icebp
push
cmp
jmp
ret
xchg
fs
pop
pop
jl
inc
mov
or
dec
sub
add
popa
je
stos
stos
push
gs
out
mov
pmaxub
ljmp
xor
mov
cltd
wbinvd
inc
cmp
mov
mov
repnz
mov
loopne
test
push
push
call
cmp
push
ljmp
sub
repnz
mov
jp
mov
dec
arpl
cwtl
mov
xchg
test
and
ret
fs
es
fidivs
in
push
push
jne
test
cltd
cmc
and
fsubrs
aam
or
fwait
in
push
mov
mov
lods
call
pushf
add
imul
push
inc
push
lds
xchg
shlb
inc
outsb
jno
jae
rcll
bound
dec
imul
pop
loop
notl
ret
adc
sub
ficomps
test
sbb
fisttpl
sahf
pop
adc
pop
scas
mov
jge
dec
push
movsb
scas
aad
sbb
je
in
and
push
cld
adc
add
adc
sub
cmc
cwtl
mov
mov
push
push
arpl
testb
hlt
ret
ljmp
out
popa
dec
movsl
pushf
movsl
adc
je
push
push
outsb
push
pushl
add
dec
jl
iret
mov
jns
xor
addr16
cmpsl
sti
aam
stos
es
xchg
inc
jne
adc
outsb
inc
cmp
xor
outsb
cli
jae
test
adc
jg
fldenv
lods
pop
xor
cmp
pop
sarl
sub
fidivs
icebp
jl
cmp
pop
mov
mov
pop
arpl
cmpb
movsb
fbld
jp
jnp
into
jl
add
fcoml
insb
psubusb
movsb
iret
push
mov
sbb
adc
push
outsb
mov
add
dec
sahf
or
std
cmp
xor
sahf
mov
gs
push
notl
mov
inc
jle
xor
mov
fsub
pop
add
add
adc
jnp
aam
negb
mov
leave
nop
mov
mov
dec
and
insb
jecxz
pop
aaa
mov
scas
pop
push
adc
sub
xor
in
mov
mov
sti
pop
and
lea
mov
inc
mov
cld
pop
sbb
xor
xchg
adc
loope
and
mov
aad
repnz
stc
push
lahf
fisubrl
mov
push
cmpsb
cmp
or
test
jae,pn
stc
outsl
dec
and
cmpl
jp
addr16
fbstp
scas
push
sbb
dec
lret
inc
jnp
mov
cmp
and
push
adc
inc
adc
mov
outsl
rorl
scas
out
sbb
sub
rol
aad
jno
arpl
sar
or
push
adc
dec
stos
jmp
popa
cltd
sarb
aad
pop
xor
js
push
push
xor
or
in
lods
js
ljmp
mov
je
pop
inc
xchg
mov
popa
jo
out
cmp
in
push
inc
push
lret
dec
mov
sbb
hlt
mov
push
push
and
pop
mov
sbb
clc
or
out
lahf
push
adc
mov
sbb
int3
dec
dec
xor
mov
lea
out
and
adc
cmpsb
or
repz
cld
insl
xor
scas
in
pop
lret
jno
xchg
aaa
mov
lock
loop
fnstsw
sbb
sbb
int3
movsb
scas
jne
pop
test
xchg
cmpxchg
push
addr16
fwait
push
push
loope
sbb
mov
xor
pusha
push
sub
xchg
lahf
int3
jo
test
loop
push
cmp
popa
movsl
jne
adc
sub
jecxz
aas
sarl
jne
and
cmp
sub
mov
lea
jnp
mov
popa
rorl
sub
pop
clc
adc
lods
pop
shl
push
test
movsl
ja
std
scas
repz
movb
xchg
sub
xchg
pop
jns
movsb
pop
add
pop
loopne
push
sbb
sbbb
jnp
shlb
cmp
andb
xchg
mov
cmp
dec
rclb
xchg
jl
lods
mov
add
loope
xchg
inc
call
pop
or
adc
jmp
shll
adc
hlt
cmpsl
sbb
or
ret
or
cwtl
stos
and
mov
bound
mov
mov
jb
sub
xchg
adc
hlt
push
mov
mov
push
jmp
mov
sub
sbb
fcomps
int3
dec
mov
sub
icebp
aaa
adc
enter
stos
mov
inc
mov
paddsb
xlat
fidivs
jmp
jp
lea
inc
test
sbb
imul
jp
clc
sbb
sub
mov
jle
ret
jo
xchg
sbb
addr16
ja
mov
xor
in
add
les
pop
adc
push
sarl
mov
loop
dec
pop
jmp
inc
popf
inc
cmp
test
gs
data16
xor
add
lcall
xchg
xor
sbb
sbb
mov
lcall
sub
or
shlb
pop
mov
sbb
jp
inc
mov
sub
xchg
les
mov
outsl
sub
inc
mov
inc
test
adc
je
js
jge
cmpsl
clc
je
or
sbb
mov
es
mov
xchg
dec
fistps
cmp
add
xor
andb
in
inc
je
lods
push
mov
lret
in
adc
mov
mov
sub
xchg
push
sahf
xor
cmp
xchg
fstp
dec
sbb
in
outsb
stc
testb
cmc
andl
test
jb
sahf
rclb
sbb
xlat
adc
mov
mov
pop
and
mov
and
repz
add
inc
xor
sbb
jmp
inc
xchg
dec
aam
sbb
out
cld
dec
mov
std
adc
mov
imul
nop
outsb
mov
lret
out
lods
push
mov
enter
aaa
stc
aad
je
push
mov
or
mov
into
pop
mov
adc
sti
mov
popl
xchg
arpl
jecxz
out
jbe
sub
mov
outsb
repnz
mov
cld
xchg
xchg
fistpl
das
push
mov
push
gs
inc
lock
push
xchg
jecxz
xchg
idivb
sbb
movsl
push
cmpsl
movsb
mov
ret
sarb
xor
cwtl
sbb
push
jne
push
mov
add
stc
enter
push
push
mov
xor
jp
dec
shr
push
and
jnp
jp
cmp
pop
loopne
pop
mov
xchg
je
push
adc
mov
pop
sbb
dec
mov
mov
ja
xchg
push
inc
loopne
movsb
push
inc
test
mov
repz
or
xchg
xchg
push
sub
jg
leave
pop
dec
rcr
push
xchg
inc
jns
imul
aad
pop
lahf
add
mov
cmp
push
sub
insl
enter
cs
dec
ficoms
jo
xor
dec
sub
xchg
push
and
or
int3
jns
mov
repz
call
xchg
adc
into
mov
data16
je
fiaddl
sti
adc
ljmp
pop
imul
xchg
sub
cmp
sub
inc
cs
adc
mov
adc
xchg
mov
in
add
inc
cmp
sti
lds
pop
call
addr16
push
lcall
mov
pop
sub
stc
dec
cmc
dec
push
xchg
scas
xor
shr
sub
xor
push
lahf
aad
and
xchg
add
fildl
push
pop
push
sub
adc
lock
and
les
lock
ficomps
xor
hlt
outsb
bound
mov
mov
xchg
mov
movsl
mov
les
test
pop
fiadds
sub
roll
jb
movsb
imul
cwtl
sbb
adc
push
aam
andb
rcrb
test
jne
shlb
jl
cli
pop
xchg
xchg
jo
lds
dec
cmp
std
mov
sub
out
sub
push
dec
cli
lahf
jno
inc
movsl
dec
loope
xchg
testl
mov
dec
ds
repnz
cmp
dec
imul
mov
sahf
and
mov
sbb
sti
clc
fimull
movsb
mov
pop
fildl
lret
cmc
and
lcall
mov
push
dec
mov
jno
sub
fists
sti
cmp
inc
xchg
imul
sbb
push
jg
mov
sahf
mov
mov
sub
mov
push
dec
std
lret
cli
adc
in
mov
cwtl
jge
sub
ror
daa
sbb
aas
movsl
sbb
or
dec
in
and
decb
lret
filds
ficoml
lret
mov
pop
sub
sbb
mov
lds
je
andb
sbb
lahf
dec
and
cmp
jo
movsb
js
jmp
test
popa
add
fldenv
inc
cmp
mov
mov
fisubrl
int3
in
cwtl
rclb
lret
and
mov
ss
arpl
push
inc
shl
sbb
pop
mov
dec
xchg
test
or
cmp
dec
push
xchg
and
xchg
jne
cmp
xchg
sbb
icebp
jbe
lea
mov
movsl
outsl
inc
aaa
jnp
ret
jne
mov
insl
jnp
sub
and
std
inc
and
repz
in
rcrl
pop
jnp
dec
sbb
and
jmp
test
in
loopne
popa
dec
mov
lret
jbe
cltd
mov
add
repz
in
jbe
addb
xor
mov
test
pop
xchg
out
gs
push
or
cli
aas
cmp
xchg
shl
aas
cmp
scas
test
xchg
call
daa
out
aam
add
pushf
in
push
shr
movb
js
test
popf
adc
clc
mov
inc
outsb
and
sbb
ljmp
mov
mov
pusha
jp
btc
cmpsb
ljmp
mov
aas
clc
adc
dec
cld
fwait
mov
mov
lea
pop
cs
sbb
cmpsb
leave
push
mov
bound
jmp
push
cltd
pop
pop
dec
addr16
sub
and
jnp
xor
cmpsl
fsubrs
scas
push
aaa
push
xlat
enter
into
mov
jle
sbb
daa
inc
pop
in
mov
xchg
adc
dec
mov
mov
aam
and
dec
adc
popf
and
call
mov
or
popa
xchg
aad
push
stos
cmpsl
sbb
mov
xchg
cmpsb
xor
inc
sbb
sub
inc
lds
ljmp
adcl
or
dec
out
push
daa
mov
cmp
push
add
xchg
adc
pop
jmp
lahf
mov
loop
jmp
push
cmpsb
pop
push
sub
adc
fimuls
push
inc
or
and
popf
pusha
cmpsl
cmp
pop
jno
cmpsl
aam
sub
and
lahf
test
fists
sub
daa
mov
cmpsb
xor
mov
add
pop
lods
leave
mov
movsl
dec
or
xchg
lock
shrl
sub
test
mov
sub
jbe
pop
inc
sub
xchg
imul
js
cmpl
cld
insb
cmp
insl
add
out
aas
shrd
mov
cltd
jbe
data16
mov
mov
xor
pushf
xor
mul
push
lods
movsb
dec
dec
in
sub
jmp
pop
mov
jnp
mull
test
mov
icebp
std
ljmp
xchg
add
add
and
push
stos
and
mov
lahf
mov
shlb
mov
pop
xor
add
pop
pop
in
mov
in
sbb
inc
sbb
in
cmpsb
jp
pop
insl
insb
jecxz
pop
inc
and
add
ja
xor
das
in
jl
scas
pushf
push
daa
leave
mov
pop
inc
aad
mov
adc
push
dec
cld
mov
adc
scas
xlat
xor
int3
or
dec
mov
jle
mov
jo
jo
cmp
sub
push
mov
push
pop
mov
push
mov
sbb
mov
loop
fcomps
test
fstl
dec
aad
xchg
xchg
fdivrl
lds
inc
subl
fstp
xchg
subl
xor
mov
xchg
add
jns
jae
add
repz
popa
xor
mov
imul
stos
incb
xchg
pop
mov
xchg
sub
push
cmp
sub
ret
bound
scas
in
fcoml
stos
jns
std
and
enter
jle
adc
js
lret
cmp
popa
mov
add
mov
xor
lcall
outsl
lret
pop
mov
jbe
iret
fdivrs
nop
gs
adc
outsb
adc
adc
lahf
xchg
data16
inc
cmpb
inc
mov
test
push
push
and
test
sub
mov
ret
adc
hlt
and
dec
mov
es
lock
cs
das
insb
and
in
mov
lret
or
inc
dec
push
pushf
pop
rcrl
push
imul
cltd
sub
into
xor
and
inc
add
mov
add
pop
ficoml
xchg
test
ret
push
out
xor
je
and
jecxz
push
fs
pop
mov
out
mov
jge
sbb
loope
and
data16
push
sahf
int
pop
ds
mov
ror
mov
rcll
mov
xchg
jmp
cltd
pop
fisubs
ret
imul
lock
in
sbbl
push
xor
push
mov
mov
sbb
loope
je
ljmp
cmp
popf
mov
pop
movsb
fdivs
mov
xorl
xor
xchg
js
xorl
mov
int
cs
data16
movsb
call
test
mov
scas
sbb
ds
aaa
inc
pop
cmp
bound
jbe
cs
cmp
jno
mov
leave
dec
pop
mov
outsb
and
movsb
xor
cltd
xor
mov
fnstenv
pop
rcrb
gs
in
les
adc
fyl2xp1
fisubrl
push
sbb
outsl
pop
sahf
mov
iret
sub
icebp
mov
jnp
mov
push
outsb
aad
add
sbb
popf
lods
sub
out
push
enter
mov
arpl
sub
in
pop
leave
in
lods
movsl
imul
cli
lds
push
inc
cs
jae
int3
mov
push
sub
mov
nop
sub
rorb
aam
js
int3
stos
or
scas
add
add
incb
nop
jno
xchg
dec
addr16
int3
imulb
or
push
shrb
hlt
or
out
jl
daa
shrb
out
or
xor
test
dec
xor
subl
xor
sti
add
jns
loopne
add
mov
aas
push
rorb
push
cld
push
ljmp
cmp
cltd
dec
out
movsl
xchg
ret
addr16
fstl
and
sbb
pop
cli
xchg
test
inc
jo
fs
negb
dec
sbb
rorb
stc
sti
dec
in
loop
pop
mov
lds
adc
pop
xor
outsb
in
pop
mov
cvtps2pd
and
scas
sahf
adc
popf
mov
call
es
adc
cmc
xchg
push
jge
fstps
inc
mov
int
fidivrl
xchg
enter
repz
add
add
jg
shrb
pop
inc
jp
mov
cwtl
pushf
pop
cmpsb
ds
je
mov
jle
test
pop
xor
or
pop
daa
les
pop
adc
das
stc
fs
push
ss
call
iret
xor
mov
int
xchg
lock
xchg
xchg
hlt
or
add
lcall
aam
pusha
lahf
test
mov
push
pop
mov
mov
fidivl
testb
inc
out
test
jno
mov
push
and
xchg
dec
pop
cmp
cmp
sbb
std
xor
in
xor
mov
bound
cmp
lret
mov
icebp
test
fimull
mov
les
xchg
mov
mov
leave
jae
ffree
fdivrl
or
adc
xchg
sub
inc
in
fsubrl
test
add
adc
stc
rolb
pop
xchg
popa
cld
out
fs
push
mov
fs
cmp
test
ficoml
addr16
xor
pop
fiadds
or
push
je
stc
and
jo
and
cwtl
mov
inc
repz
jg
sahf
movsl
or
push
insl
shll
jo
sub
xchg
jns
sub
pop
repnz
sti
dec
adc
fldl
pop
mov
imul
sahf
sub
xchg
pop
adc
push
scas
push
push
pop
cs
mov
mov
pop
arpl
sub
lret
sahf
mov
mov
jecxz
cmp
adc
push
ljmp
xor
mov
sub
mov
xchg
std
ret
cmp
les
adc
iret
mov
movsl
mov
push
addr16
cli
ds
std
loop
sbb
scas
in
addl
mov
sbb
cwtl
insb
divl
mov
jb
sbb
outsb
adc
inc
xchg
out
ret
and
movb
dec
lret
mov
jno
rorl
movsl
enter
outsb
or
xchg
pop
xchg
clc
cmp
mov
ss
iret
fwait
into
push
inc
push
or
in
pushf
jns
in
cmc
in
dec
adc
and
adc
pop
gs
dec
inc
push
mov
test
cli
jo
stc
dec
inc
pop
rclb
inc
out
mov
mov
push
das
pop
fs
out
push
loopne
repz
sub
jne
pop
xchg
push
movsb
movsb
jbe
adc
cmpsl
jl
cmp
pop
sub
pop
ja
fdivl
cwtl
sbbb
jge
cmp
add
pop
pop
add
es
mov
pop
sbb
jb
shl
xorl
push
bnd
ror
lds
idiv
loopne
or
push
push
lea
xor
mov
push
mov
pushf
repz
inc
xchg
out
mov
loop
frndint
xchg
mov
idivl
and
mov
lods
es
push
jns
bsr
in
sub
push
xlat
jecxz
or
mov
jnp
out
xchg
pusha
orl
xchg
cmp
ja
push
sub
icebp
subb
out
sbb
xchg
imul
pop
pop
pop
stos
push
pushw
pop
daa
or
gs
push
pop
dec
jmp
imul
into
pop
mov
lcall
inc
loope,pt
pop
jae
repz
jge
fimull
xchg
out
inc
dec
mov
test
add
outsb
xor
adc
insb
sbb
cs
out
scas
add
adc
mov
sub
dec
jmp
xchg
inc
xor
dec
daa
mov
sub
xor
mov
sbb
xchg
test
sbb
dec
vmovss
push
or
push
cwtl
outsl
sub
dec
in
enter
cmpsb
cmpsb
and
ja
loop
std
sub
lret
in
sbbb
leave
pop
fcoml
sbb
sub
cmp
in
sarb
jae
loope
adc
clc
mov
xor
or
cmp
mov
add
inc
jp
aas
fnsave
inc
fsubrs
icebp
xchg
jns
jae
test
add
adc
xchg
je
sub
jle
aaa
add
push
stc
and
loopne
call
popa
addl
lret
inc
ljmp
push
pusha
pop
inc
je
mov
in
aam
add
cmp
pop
adc
lods
inc
push
cld
pop
stos
movl
ljmp
sbb
or
jae
dec
cmpsl
mov
out
iret
cmc
sub
jmp
jp
loope
add
mov
pop
or
lahf
push
jne
pop
out
jl
pop
pop
bound
shlb
jmp
add
lods
mov
or
jnp
mov
dec
clc
jo
js
lret
bnd
jo
js
lret
mov
jo
or
add
call
xchg
je
or
mov
mov
pop
adc
cmp
repz
pop
les
jp
dec
xor
push
or
xchg
cld
push
mov
lcall
mov
es
lods
es
mov
stos
sbb
fidivrl
sbb
mov
out
int3
mov
xchg
int3
mov
xchg
test
and
mov
iret
test
xor
repnz
xchg
mov
mov
fwait
mov
movsb
andb
mov
adc
mov
insl
sbb
movb
and
sub
xor
push
jge
adc
ficoms
pop
push
add
mov
and
int3
mov
lds
cmp
andb
jnp
cltd
jae
mov
lahf
stos
xchg
lds
pop
jle
out
inc
call
mov
scas
push
push
dec
and
jb
fwait
cmpsb
mov
adc
dec
frstor
xorb
jno
xchg
shlb
rolb
adc
cmp
rcrb
mov
clc
dec
test
ror
adc
and
in
cmc
inc
fisubrl
mov
push
mov
sub
sbb
fisubrs
xor
push
mov
pop
aas
ja
mov
dec
ja
mov
aam
cmpsl
push
push
ja
shll
addr16
ret
xchg
add
push
jmp
mov
int
xchg
repz
loope
cmpsb
mov
xchg
pop
and
lock
mov
xor
insl
push
or
xor
cmp
aas
in
aam
ret
loopne
xchg
mov
mov
xchg
xlat
je
ljmp
jle
cmp
sbb
adcl
dec
jmp
sbb
clc
mov
int3
iret
xchg
dec
jae
jmp
mov
jb
insl
ret
and
inc
sbb
pop
in
int3
arpl
sub
movsl
lahf
scas
xchg
lods
shll
shll
leave
jo
cmpsl
xor
dec
cmp
pop
mov
dec
xchg
pop
stos
fdivp
push
mov
icebp
push
aas
stos
adc
or
xchg
cmp
imul
cmp
pop
adc
lods
fdivs
push
mov
rcr
sub
or
fistpll
movsl
xchg
adc
mov
jge
mov
cli
pusha
cld
lods
ljmp
shlb
cmpsl
enter
shlb
adc
and
mov
fs
scas
shrl
jle
cmp
jl
mov
mull
loop
fs
popf
fistps
pop
int3
jb
mov
sti
fisubs
mov
nop
loop
pop
fs
jo
test
leave
loope
sbb
gs
sub
adc
push
mov
inc
imul
mov
jae
inc
loope
loope
and
lahf
jae
loopne
out
jl
daa
xchg
adc
adc
out
movsl
push
lret
push
adc
jnp
int3
sbb
mov
dec
sub
and
in
add
mov
add
mov
sahf
mov
dec
adc
in
or
aad
inc
mov
bound
mov
xchg
mov
test
sub
lods
rcrb
sub
jecxz
int3
sub
jp
aas
mov
leave
ja
mov
and
inc
lret
lods
rcr
lds
into
jle
push
les
xor
xchg
push
inc
shl
inc
jg
in
push
mov
mov
fcoml
cmp
mov
xor
inc
int
imul
icebp
inc
cmpsb
xchg
minps
or
sub
cmp
xchg
sub
popa
jge
sbb
xor
bound
mov
push
xchg
ret
fistl
xor
mov
xchg
hlt
jbe
rcll
xor
push
clc
mov
mov
mov
outsb
pop
js
mov
sbb
dec
inc
mov
mov
daa
testl
fstpt
mov
adc
mov
ds
das
xchg
mov
repnz
into
lret
sub
pop
or
jno
ficompl
or
jne
pop
ret
and
dec
imul
mov
sub
inc
push
mov
test
lds
imul
insl
dec
sbb
mov
in
std
pop
jecxz
add
cmpsl
incb
pop
and
inc
or
cmp
dec
sarb
xor
ds
out
fistl
scas
xchg
pop
sub
addb
subb
js
fstps
das
loop
cmp
inc
mov
sarb
daa
xchg
or
push
or
xchg
jae
daa
fadd
adcl
push
inc
mov
push
test
jp
inc
push
sub
push
pop
imul
jno
scas
mov
xchg
adc
movb
aad
lock
jno
push
or
je
nop
negb
pop
inc
insb
unpcklps
dec
or
lret
add
fsubrs
push
jb
loopne
xchg
out
sub
inc
stos
mov
add
mov
xchg
outsl
jecxz
jp
or
mov
jo
xchg
lds
sti
loope
inc
mov
jae
int
int
test
inc
daa
dec
popf
adc
sub
es
shll
les
les
lods
dec
cmpsl
xchg
jae
lea
pushf
pushf
add
outsl
push
inc
jns
pop
xchg
mov
loope
mov
and
cmp
sub
cli
xor
pushf
loopne
jmp
inc
and
adc
dec
jnp
mov
fs
fsubr
push
sahf
fcomps
nop
add
mov
lds
mov
jg
adc
pop
xor
and
iret
sahf
clc
mov
adc
jl
es
jl
add
push
daa
fnstenv
movsl
jmp
cmp
lock
and
mov
test
add
cmp
dec
pop
mov
cs
dec
mov
xor
cmp
cmp
fwait
cmp
imul
add
fdivl
push
es
rcrl
mov
js
andb
pslld
cmc
loope
in
movsb
mov
inc
popf
sbb
add
cmp
popa
repz
xor
cld
inc
lret
loopne
gs
xor
mov
dec
leave
js
pop
xchg
dec
leave
push
adc
sub
and
xor
pop
push
jmp
mov
jg
cmp
jle
xchg
jne
adc
pop
pop
add
fidivs
in
pop
in
mov
inc
mov
and
jmp
sbb
mov
sub
push
xchg
imul
xchg
jae
lahf
imul
sbb
xor
sub
sub
lock
lea
jle
scas
xor
in
dec
inc
add
pop
lret
inc
loop
aas
xchg
xchg
stc
mov
push
or
inc
adc
arpl
lds
sub
gs
xchg
sarb
call
push
in
sbb
in
adc
sbb
xlat
setbe
sub
inc
add
into
lret
mov
fldl
rolb
push
pop
dec
add
rclb
cwtl
outsb
jns
dec
and
stc
data16
xchg
arpl
xchg
cmpsb
mov
jg
daa
out
imul
xor
xchg
test
mov
std
aad
es
push
insl
int3
jg
inc
push
dec
std
push
push
xor
pop
jle
jl
push
sbb
mov
sar
and
mov
test
jp
xor
jecxz
sub
xchg
sbb
fidivrs
test
mov
pop
adc
repnz
pop
lcall
test
cmp
jmp
push
and
mov
add
xor
mov
sti
repnz
les
rolb
xor
sub
insl
pop
repz
push
mov
xor
mov
rclb
test
inc
lret
xor
repnz
inc
sbb
push
add
arpl
cmp
xor
sub
rol
sahf
ljmp
test
stos
incb
sbb
push
push
adc
push
imul
xchg
test
repz
aaa
test
les
mov
or
or
gs
js
adc
je
lret
fisubs
les
movsb
xor
xchg
adc
shr
dec
jbe
dec
sti
imull
negl
in
es
jmp
out
cmp
jbe
cmp
je
pop
or
adcl
cs
dec
nop
shll
bnd
pop
aam
cwtl
dec
or
inc
movsb
sub
cmpl
sub
cmp
stos
xor
mov
ret
dec
push
stc
enter
inc
cltd
adc
movsb
sbb
mov
mov
lret
xchg
mov
xchg
adc
and
les
stc
fs
mov
mov
push
mov
arpl
xchg
sub
out
gs
fwait
mov
scas
cmp
and
test
and
xchg
mov
inc
into
or
addr16
jo
pop
inc
imul
mov
inc
jns
push
out
jecxz
cs
repz
jbe
out
push
xor
les
push
jbe
xor
jle
sub
sbb
inc
popf
pop
adc
mov
pop
mov
mov
stos
ficompl
out
leave
jae
sbb
mov
repz
mov
jae
popa
jecxz
repnz
call
lock
push
roll
fsubr
dec
push
jge
stos
mov
testb
aaa
in
pop
addr16
mov
movsl
cmc
int3
add
mov
ds
inc
loopne
lahf
and
sub
sbb
inc
icebp
cli
jecxz
mov
push
popf
inc
jbe
pop
popa
xor
out
jp
test
ja
mov
cld
int
movsl
cli
xor
in
dec
inc
les
loop
push
sbb
sub
repnz
sbb
popf
fistpll
mov
mov
inc
pop
mov
daa
aad
or
dec
mov
mov
xchg
pop
outsl
movsb
mov
clc
xor
out
call
cwtl
adc
test
je
mov
fs
cmp
dec
call
xchg
mov
pop
dec
lock
dec
mov
sub
push
jbe
xchg
rorl
negl
scas
pop
push
je
aam
outsl
lea
imul
add
or
inc
xchg
lods
xchg
push
mov
cld
jge
cmpsb
jge
mov
push
mull
jne
daa
cmc
shrl
sub
adc
jmp
call
mov
jae
mov
pop
mov
or
imul
jae
sub
push
mov
cmp
test
jno
nop
add
fs
aam
adc
in
push
jge
jecxz,pt
rcll
sub
shrl
jno
out
in
out
std
jne
or
rcll
adc
xchg
lods
sub
adc
or
push
or
mov
jmp
pop
scas
xchg
mov
mov
fisttps
js
scas
cmp
je
inc
stos
xchg
mov
repnz
sbb
adc
insb
dec
aaa
movsl
xorl
inc
aam
mov
insl
mov
cmpsl
insl
sbb
mov
orb
imul
fidivl
in
xchg
out
imul
push
cmp
mulb
sub
xchg
int3
loop
outsb
loopne
les
jmp
add
mov
lea
ja
mov
and
jmp
adc
adcb
and
push
jl
push
jge
bound
fistpll
call
scas
outsl
cmp
xor
cmpsb
lcall
insb
iret
repnz
push
xor
mov
push
dec
adc
into
imul
out
leave
dec
xor
imull
stos
sbb
shrl
rcrl
insb
insb
stc
xchg
pop
cmc
fists
pop
xchg
mov
push
rorb
xor
mov
xor
fdiv
pop
sbb
mov
test
cmp
shll
push
pop
hlt
mov
inc
lret
cmc
mov
sub
mov
push
sar
movsl
and
loopne
out
sahf
test
mov
loopne
adcb
lock
faddl
adcl
pop
outsl
in
mov
jne
cmp
push
mov
jno
mov
ss
fld
fsub
fwait
pop
and
sti
jl
xor
sub
sub
ljmp
cltd
xlat
sbb
mov
push
pop
mov
cmp
push
popf
dec
and
jmp
xor
repnz
ss
dec
es
cmp
popf
jmp
daa
cli
dec
leave
jmp
test
bound
sbb
push
loope
cmp
aaa
adc
push
cmp
xchg
orl
add
inc
stc
loop
orb
mov
out
jecxz
jmp
mov
jno
and
mov
fildl
inc
in
insb
inc
add
out
stos
cmp
pop
out
std
ret
popa
sbb
dec
gs
xor
fisttpl
stos
lds
xchg
cmp
xchg
pop
mov
sub
lods
cli
adc
adc
mov
outsb
je
popfw
scas
in
lods
inc
mov
repnz
inc
mov
push
xor
push
jmp
inc
stc
push
aas
push
cld
jl
fs
inc
ret
inc
bound
ret
jg
mov
addr16
out
adc
sub
xchg
out
rcll
inc
mov
lret
jmp
sbb
dec
dec
xor
fcom
adc
mov
mov
mov
push
leave
pop
iret
pop
leave
scas
adc
in
insb
fwait
repz
pop
loop
sahf
pop
mov
mov
push
fcompl
paddsb
mov
mov
sub
push
ljmp
nop
es
stos
stos
pop
cmpb
jae
dec
fiadds
roll
xor
push
adc
adc
mov
aam
shl
js
test
aam
push
cld
stos
pop
push
mov
outsl
divl
fnstcw
sbb
cltd
pop
adc
out
filds
fwait
int3
xchg
and
mov
cli
repz
pop
mull
dec
xor
adc
add
push
jmp
sbb
push
cmp
aam
aam
cmp
dec
out
stos
and
push
out
push
push
aad
or
ret
aas
ret
pop
mov
xor
je
ret
dec
mov
mov
dec
mov
xorl
xchg
scas
nop
and
add
adc
and
mov
adcl
mov
xchg
pop
sahf
enter
sbb
inc
fdivr
mov
cmp
xchg
xchg
in
insl
dec
fidivrs
enter
sub
and
imul
or
ss
and
push
sub
jge
mov
add
lahf
in
or
mov
add
cmpsb
sub
mov
cld
out
inc
cmp
jne
pusha
xchg
std
jb
mov
mov
das
iret
xchg
jae
repnz
mov
out
adc
jecxz
jge
in
adc
ret
jmp
cwtl
aad
outsb
push
pcmpgtw
cs
push
in
repnz
je
cmp
adc
and
fiaddl
mov
dec
sub
and
mov
nop
test
and
pop
cmc
or
rcr
sbb
pop
nop
mov
push
lcall
push
into
test
add
inc
movsl
adc
adc
int
pushf
push
insb
mov
popf
sbb
push
es
push
push
out
xchg
shll
push
mov
sbb
mov
pusha
push
mov
cltd
push
sub
mov
xor
cwtl
inc
jp
jl
adc
dec
dec
xchg
arpl
add
jmp
cld
cmovnp
mov
adc
mov
test
push
leave
lahf
mov
ja
mov
pushf
addb
push
loop
mov
inc
pusha
and
in
fsubrs
mov
jbe
shrl
gs
dec
in
xchg
sub
mov
mov
push
mov
or
pop
lret
cmp
mov
adc
push
sub
cmp
push
rcrl
pushf
xor
fidivl
mov
mov
xor
je
jl
add
adc
add
inc
cmp
push
cwtl
aad
movsb
inc
sbb
or
add
in
dec
in
jmp
inc
addl
addl
shrb
je
fidivrs
int3
pop
push
xchg
or
jecxz
fdiv
jmp
xor
pop
fnstsw
lret
popf
mov
popf
xor
mov
imul
aad
aad
out
ljmp
and
xchg
xchg
jo
mov
cmc
xlat
xchg
mov
cmpsb
xor
add
mov
lods
cmp
ja
cmp
xchg
or
and
xchg
shll
jno
jge
add
or
imul
je
sarb
adc
mov
ljmp
pop
mov
mov
jmp
push
mov
cmp
lret
inc
mov
sbb
cmpb
mov
mov
inc
cltd
mov
test
insb
mov
push
test
cmp
je
mov
xor
mov
or
movsb
adc
pop
loopne
mov
push
push
or
mov
outsb
test
add
dec
adcl
stc
in
dec
dec
jb
jne
mov
mov
fmull
jle
inc
mov
hlt
inc
push
xchg
dec
mov
push
jmp
push
push
call
scas
fwait
aad
mov
aas
clc
je
adc
imul
pop
jmp
push
sub
call
cmp
push
es
ljmp
cmpl
imul
mov
adc
bswap
pop
ja
pop
mov
shlb
add
pop
movsb
pop
xchg
pop
stos
inc
cmp
mov
mov
xchg
mov
jnp
out
je
test
cmp
mov
mov
fs
mov
repz
pop
in
jg
movl
imul
xchg
scas
lea
jle
loop
adc
and
push
iret
out
ds
mov
pop
mov
ret
fcmovb
pop
mov
dec
xor
dec
aam
add
lea
scas
jge
jbe
pop
jno
and
sub
xchg
add
ds
das
push
push
jo
sar
mov
lods
addr16
daa
sub
jae
xchg
mov
int3
mov
cwtl
inc
inc
push
xor
mov
sti
enter
pop
nop
cmc
data16
pop
xchg
stos
into
mov
push
rcr
movsl
xchg
sbb
mov
dec
mov
push
imul
int3
in
pop
pop
out
push
or
push
dec
es
cltd
push
sbb
adc
enter
loop
push
outsl
and
mov
mov
mov
out
mov
sbb
push
jmp
add
aad
mov
daa
pop
sub
jp
rclb
xchg
mov
inc
aad
shr
jecxz
pop
add
sbb
daa
xchg
in
in
outsl
enter
arpl
mov
inc
xchg
jb
mov
repz
mov
pop
movsb
sbb
fwait
call
mov
mov
cli
dec
inc
inc
mov
scas
inc
lret
leave
sbbl
mov
mov
movsb
fwait
mov
xchg
sbb
out
jne
mov
cwtl
xor
icebp
cli
addl
mov
daa
in
in
jl
in
cmpsl
jg
imul
and
jb
std
dec
push
mov
push
cld
cmp
cwtl
sti
les
fsubl
mov
fdivs
leave
int
lret
scas
clc
cli
mov
out
jnp
aas
out
mov
test
or
adc
cmpl
push
int
aaa
dec
rorb
push
mov
adc
lds
arpl
shl
fsub
dec
xchg
inc
in
pop
mov
movsl
mov
iret
fdiv
add
int3
test
cmc
mov
jbe
xchg
or
fistpll
stos
cmp
and
pop
popf
mov
cmp
add
xor
scas
movsl
dec
ljmp
pusha
outsb
adcl
test
movsb
insl
push
or
je
mov
xchg
inc
repz
je
shlb
scas
inc
insl
pop
or
pop
inc
or
pop
add
lret
aas
adc
daa
xor
jo
mov
sub
lea
cmp
mov
pop
sarb
xchg
mov
stc
push
mov
pop
xchg
insl
jle
mov
cvtpi2ps
mov
mov
sub
inc
lods
mov
sbb
mov
fstpl
jb
jmp
lcall
xor
popf
fdivrs
xchg
cmpsl
inc
pop
and
push
rcl
sub
dec
jl
push
lods
or
in
mov
imul
lods
lea
cs
pop
in
lcall
aas
mov
std
adc
lock
add
jae
adc
out
push
sahf
pushw
mov
jmp
movsb
sbb
ds
orl
stc
push
mov
mov
pop
cmpsb
cmc
pop
adc
cmpsb
mov
xor
sbb
insl
in
inc
fst
dec
mov
adc
add
mov
pop
mov
fs
rclb
push
aad
and
xor
roll
mov
sbb
lret
aas
xor
pop
shll
inc
or
lods
loopne
shrb
mov
movsl
imul
lahf
int
cltd
loopne
jmp
cwtl
lock
ficompl
in
adc
lcall
lds
cmpsb
dec
jle
jg
loope
jb
lret
lods
sbb
int3
xchg
xchg
pop
sbb
testb
shll
jl
in
hlt
faddl
or
icebp
pusha
xchg
cli
add
mov
pushl
jle
fdivs
cmp
push
pop
push
pop
inc
push
sbb
cmc
test
push
pop
mov
jge
inc
dec
jmp
mov
xor
orb
dec
cmc
outsl
cmp
test
mov
mov
shr
sub
outsl
xor
mov
sub
push
int
popl
fidivrs
repz
xchg
or
imul
cli
adc
lcall
enter
and
push
xor
add
test
cmpsl
mov
pop
cmp
adc
lock
sbb
fcmovnu
popa
and
pop
cmp
mov
xchg
xchg
pop
insl
xor
xchg
stos
inc
pusha
pop
insl
test
pop
scas
xor
dec
and
jae
jnp
out
out
jns
inc
push
xchg
sahf
aad
out
aaa
push
and
mov
jno
mov
and
sbb
rcrb
pushf
mov
addr16
rcll
mov
dec
inc
jae
xchg
pop
dec
loope
or
lods
imul
je
adc
xor
leave
cmp
and
fcmovnu
sbb
clc
aas
ret
inc
add
dec
mov
shl
dec
mov
rcr
js
ds
xchg
or
xchg
jmp
les
cmp
dec
mov
xor
add
pop
or
sbb
pusha
fcomps
add
jno
rolb
push
movsb
jnp
aas
xor
fistpll
or
sub
xor
mov
cltd
xor
push
lock
push
add
loopne
ds
push
pop
lea
push
fwait
fs
sbb
ljmp
int3
movntq
pop
and
mov
leave
aam
adc
das
dec
outsl
pop
dec
and
pushf
cwtl
shrb
fwait
insl
aaa
test
dec
jmp
adc
or
mov
and
xor
repnz
inc
lahf
icebp
movsb
lods
rcll
sbb
pusha
mov
inc
lods
push
sbbb
xchg
imul
jnp
inc
pop
insl
or
push
jmp
rorb
daa
adc
adc
or
movsl
push
out
mov
sub
out
or
fadds
jns
call
imul
xor
decl
ret
dec
xor
outsl
xchg
push
pop
cmpsb
push
imul
push
fbstp
aad
inc
lods
mov
pop
jle
mov
sbb
xor
data16
inc
ds
bound
jg
cmp
xchg
sub
and
int3
and
add
lret
mov
add
popf
xchg
iret
clc
pop
push
lcall
repnz
cmp
sub
jmp
sub
adc
dec
aaa
sbb
fs
push
add
in
std
mov
fildl
fnstcw
push
jns
outsb
add
xchg
xor
rol
jg
cmp
je
rolb
ret
mov
stos
ss
sahf
lret
pop
imul
jb
mov
xor
cmc
mov
out
stc
or
movsb
aaa
add
pop
cwtl
inc
int
jle
add
dec
sahf
lahf
ret
aad
pop
fildll
cwtl
sbb
pop
push
dec
push
movsb
imul
repz
iret
cli
fadd
testb
add
ret
cli
sbb
roll
testl
adc
dec
or
sbb
cwtl
out
inc
in
lods
aaa
cmpsb
pop
cmp
inc
pop
sbb
adc
lock
stc
mov
stc
sahf
jp
xchg
shr
or
insb
sub
dec
clts
rcll
dec
inc
addr16
scas
xor
bound
cwtl
call
push
rolb
xchg
add
jo
sbb
sub
add
test
addr16
dec
movq
fwait
mov
and
cmpsb
daa
or
or
fs
pop
mov
mov
add
and
movsb
or
push
jle
test
lods
fnstcw
mov
cmc
gs
stos
dec
xorb
mov
ja
lahf
sahf
pop
jnp
push
std
mov
pop
test
aam
mov
pushf
ficomps
sub
div
out
nop
cmp
cmc
loop
dec
xor
mov
push
push
lret
cmp
addl
cmpsb
inc
cmp
sub
in
inc
cmp
mov
mov
fwait
push
mov
les
mov
ljmp
mov
ret
testb
test
mov
pop
fcomp
mov
leave
test
mov
movsb
cmp
dec
or
mov
lds
aas
adc
call
jbe
cltd
mov
cmpsl
in
sbb
jne
inc
int3
jmp
lret
lahf
icebp
jg
xor
or
inc
dec
aad
dec
stos
imul
mov
pop
daa
jg
lcall
lods
xchg
push
out
mov
js
push
cwtl
jg
mov
sub
mov
mov
or
lcall
test
xor
mov
jmp
or
or
jg
fisubs
cmp
ret
pop
pop
ss
mov
shrb
pusha
std
cmpsb
pop
popa
lds
jmp
adc
pop
test
stos
push
sub
test
aad
nop
out
adc
dec
faddl
mov
push
mov
jle
out
inc
dec
mov
call
mov
in
rcll
addr16
test
sahf
sbb
hlt
popa
dec
mov
sbb
push
pop
cmpl
lock
mov
sbb
xor
inc
or
cmp
sbb
stc
iret
mov
outsl
pusha
cmp
test
mov
inc
jge
shll
pop
movsb
mov
xchg
mov
bswap
xlat
push
cmp
jo
pop
popf
add
cmp
shll
rolb
fistpll
loope
popf
cmp
mov
push
cmpsl
xchg
push
cli
jmp
jno
adc
negl
popa
push
shlb
sub
jl
push
cmp
sbb
add
or
in
ret
repz
in
scas
push
pop
dec
and
sub
sbb
test
jg
jp
lods
stos
testl
mov
out
xor
roll
push
add
xchg
xchg
xor
in
cltd
mov
nop
mov
mov
stos
das
in
cmp
icebp
jb
mov
icebp
mov
jl
movsb
jno
ss
nop
rcll
inc
push
iret
pop
push
test
mov
dec
push
mov
push
std
jae
scas
push
aas
inc
add
dec
xlat
fildll
fisubl
insl
jb
aas
sub
les
sarb
scas
cld
shll
fbld
xchg
test
adc
adc
cmp
sbb
shll
je
add
dec
sbb
push
lahf
pop
jl
out
and
leave
dec
mov
push
test
pop
xlat
test
mov
fiaddl
dec
aas
inc
jb
out
mov
rorl
mov
lock
aas
inc
or
jb
ds
mov
pushf
lock
pop
mov
int
cltd
mov
ljmp
lahf
jmp
push
push
pop
push
jo
pop
jle
cltd
jbe
pop
xor
nop
xlat
or
daa
push
je
mov
lds
mov
insl
mov
jmp
stos
sbb
sti
mov
and
into
sub
mov
or
and
loope
popa
int
test
imul
bound
add
nop
repz
push
sbb
lea
mov
pop
ret
aad
test
mov
mov
es
mov
aaa
fsubs
mov
xor
icebp
push
add
cs
or
or
pushf
and
jmp
insb
adc
adc
xor
push
enter
dec
dec
xchg
outsl
mov
xorb
push
jg
add
js
cmpb
outsb
loopne
int3
xchg
lret
push
lea
insb
jmp
and
cmp
lock
in
lret
xor
mov
cmpsl
xchg
jne
add
outsl
pop
aad
push
daa
sub
sub
pop
jecxz
jb
test
pop
imul
jmp
es
sub
lcall
aaa
inc
test
sub
pop
ficomps
dec
add
pop
repnz
pop
add
adc
loope
negl
xor
ljmp
ret
mov
xor
jbe
das
icebp
and
or
pop
repz
in
aas
addr16
cmp
pop
ss
jecxz
pop
aaa
cld
cmpsb
js
cmc
clc
jo
js
xor
dec
inc
fnstsw
gs
xor
push
lock
gs
inc
sbb
out
imul
lods
test
xor
rol
movsl
xchg
and
lcall
cmp
jns
add
or
mov
jo
jl
dec
and
lods
mov
lret
popa
clc
push
aas
jecxz
push
and
jae
mov
lock
xor
fsubrl
lahf
mov
add
mov
pusha
in
xchg
pop
pop
mov
dec
in
push
rcrb
mov
inc
inc
pop
fstl
jecxz
xor
fcoms
imul
pop
repnz
sub
pop
out
mov
inc
cmp
and
aaa
cltd
add
mov
jno
test
jg
pop
inc
movsb
ret
jge
mov
sahf
pop
cmp
adc
das
cld
leave
out
bound
push
gs
pop
stos
bound
shll
stos
inc
andl
stos
mov
or
mov
in
cwtl
das
mov
pop
pop
lods
cmp
ret
outsb
stos
data16
lds
insl
cld
mov
dec
sti
shlb
mov
bswap
inc
pop
xor
aad
push
rorb
pop
cltd
mov
mov
ficompl
cwtl
test
out
mov
lcall
inc
cltd
fstpl
sub
mov
inc
imul
xor
or
inc
adc
inc
in
push
jne
std
pop
dec
je
cmc
mov
cmp
notl
in
insl
xor
mov
or
xorb
push
pop
and
jbe
jno
out
cmp
es
mov
ret
es
adc
dec
dec
mov
jg
lea
xchg
leave
dec
es
sbb
sbb
in
in
cmp
inc
mov
cmp
add
mov
iret
sbb
xchg
push
hlt
jae
xor
dec
fdivr
scas
mov
sbb
imul
or
loopne
pop
adc
pop
cld
dec
call
scas
inc
ret
out
adc
movsb
xor
gs
data16
cmp
and
pop
or
cltd
lea
cmp
sub
jne
inc
aad
movzwl
add
dec
adc
lcall
dec
icebp
scas
out
lods
dec
lock
cmc
pop
and
xchg
andb
cmc
popa
rolb
cmc
in
pop
xor
es
test
out
gs
fdivl
rcl
scas
insb
mov
sub
xorl
clc
push
dec
sbb
xor
fwait
cmp
loopne
fwait
add
add
and
sbb
es
loopne
cmp
cmp
aad
add
loop
mov
cmp
test
and
mov
std
add
sar
adc
pop
mov
sub
pop
sub
jae
add
dec
fs
and
pushf
xor
sbb
cltd
jo
add
ss
jo
fdivs
or
mov
xor
push
popa
ror
sub
sbb
jns
fwait
sub
push
sub
mov
imul
icebp
sbb
jb
arpl
cmp
mov
bound
cmp
adc
lret
cmpsb
fistl
dec
xor
out
shl
lock
ror
add
stos
stos
jno
outsb
and
pop
test
incl
sbb
je
xor
push
sti
pop
out
xor
in
lret
stos
pop
mulb
scas
hlt
rorl
pop
push
push
dec
mov
push
into
mov
xor
pop
inc
xchg
pop
sti
sub
mov
fiaddl
jp
iret
xchg
pop
shl
jns
aas
push
cmpsb
sti
les
aam
and
nop
inc
push
pop
imul
insb
jmp
rcll
push
dec
in
jl
dec
sarb
leave
mov
push
cmpl
jb
in
inc
dec
sbb
pushf
jbe
sub
push
leave
jmp
fs
jae
cmc
sbb
ret
into
aad
mov
pop
dec
or
mov
clc
push
fiadds
adc
cltd
jo
jle
push
mov
jl
lods
and
aaa
cmp
outsb
pop
xor
call
aas
pushf
pop
sbb
dec
xor
test
rol
test
ffree
lods
xor
add
xor
push
pop
daa
popa
lahf
jmp
scas
aas
jecxz
movsl
sub
fwait
jae
repz
and
ret
aas
sbb
or
icebp
push
call
cwtl
dec
insb
cmp
adcl
cmp
mov
int
stos
and
jg
mov
sysenter
cmp
cmc
jg
or
in
mov
fisttpl
clc
and
int
rorl
std
xchg
xchg
fcmove
xor
popa
jl
mov
mov
add
aaa
addr16
jle
pop
das
out
xor
cli
inc
mov
scas
xor
xor
xchg
inc
xchg
es
ds
and
sbb
scas
push
addr16
fnsave
ret
ljmp
adc
ljmp
roll
mov
push
int3
nop
mov
dec
mov
pop
repz
test
bound
jg
sub
xchg
mov
lahf
mov
jg
iret
mov
mov
jb
push
cmp
mov
pushf
adcl
pop
sbb
mov
fiadds
fisubrs
test
xchg
gs
mov
xchg
popa
mov
in
mov
fldcw
mov
xchg
mov
xor
xchg
mov
lahf
adcl
mov
xchg
mov
xchg
xlat
xor
cmpsl
xlat
ficomps
jge
jns
xor
jnp
aas
mov
test
mov
push
or
xor
add
xor
sub
xlat
push
jle
sub
sahf
xor
dec
iret
popa
test
loopne
rorb
add
fbld
ljmp
mov
mov
imul
test
dec
cwtl
sbb
xlat
es
call
jmp
sbb
pop
push
ret
xor
mov
jge
or
fwait
jle
dec
loope
data16
mov
xchg
outsb
mov
add
xchg
addr16
in
lret
lods
sbb
in
ljmp
in
lret
sbb
push
orb
jb
ret
and
ds
jge
inc
js
jnp
push
data16
jo
mov
iret
inc
loopne
fimull
add
mov
mov
jns
fs
nop
repnz
imul
xor
xchg
or
mov
mov
sub
retw
jp
pop
daa
cmp
inc
or
and
or
cmpsl
or
ja
or
cmpsl
test
in
and
mov
into
fstps
stos
pop
scas
jg
add
cmp
fldl
push
fcmovne
jns
pop
or
rorb
ficomps
adc
jne
cltd
in
mov
xor
outsl
out
repz
cmp
xorl
stc
test
ror
fimuls
pop
fwait
xchg
lret
test
test
outsl
test
add
orb
fdivrs
das
int
pop
out
imul
dec
ja
imulb
xchg
outsb
test
test
xchg
jno
rcrb
insl
inc
pop
adc
cwtl
mov
pop
cmp
add
enter
test
cs
sahf
push
jno
stos
in
lret
push
cmp
pop
iret
jp
or
fldl
push
test
xchg
xor
roll
cli
or
ret
push
std
clc
and
push
test
xor
or
xchg
add
sub
sbb
mov
xor
push
aam
inc
xor
mov
lea
and
adc
push
jmp
loopne
push
jo
ljmp
mov
jl
and
sti
mov
insl
xor
in
std
mov
pop
fiaddl
add
jae
sub
sbb
mov
in
xchg
jae
sbb
xlat
mov
mov
pop
in
jae
mov
add
iret
xor
cmp
mov
or
inc
movsb
fsubp
pop
pop
push
jg
popa
enter
xor
mov
xor
cs
sbb
sti
pop
sbb
out
push
ljmp
push
fwait
push
dec
adc
mov
xor
cmp
test
jecxz
and
mov
add
sbb
xor
vunpcklps
sub
mov
fsts
int
sarl
adc
push
in
ret
push
adc
arpl
sbb
or
orb
pop
insl
jo
inc
mov
es
stos
sahf
lds
fidivrs
pop
jecxz
jmp
lds
fcmovu
xchg
ss
scas
clc
popa
sahf
or
jo
pop
mov
pand
inc
leave
xor
sarl
dec
mov
cmpsl
jg
ds
in
push
jb
push
jae
inc
or
adc
cmp
dec
out
inc
dec
add
stc
sub
push
inc
sub
cmpb
icebp
clc
insb
push
mov
testb
aam
outsb
xor
xchg
mov
jecxz
popa
fwait
aaa
pop
cmp
aaa
push
test
stos
sub
orl
mov
adc
and
jb
ss
push
popf
fs
adc
cwtl
das
scas
insb
sar
dec
iret
sar
loope
movsl
mov
pop
out
bound
sub
scas
lahf
xor
test
inc
sub
lret
mull
insl
fdivl
sbb
int
lcall
sbb
mov
or
int
stos
cmc
inc
das
in
addb
aaa
xchg
cmp
sub
daa
jg
shlb
out
sbb
xchg
push
or
ret
dec
cmc
cmp
imul
mov
lods
test
divb
inc
xchg
fimuls
mov
jge
xor
jl
inc
popf
fmull
pushf
push
cmpsl
mov
loop
popa
jb
hlt
out
jnp
and
pop
adc
leave
pusha
iret
or
out
and
cmp
fwait
inc
lock
mov
hlt
aad
cmc
push
inc
outsb
inc
and
sbb
or
push
ret
and
int
mov
add
xor
xchg
mov
push
or
add
xchg
mov
arpl
mov
pop
and
movl
lret
lahf
repz
sbb
clc
jo
adc
dec
cmp
cmp
push
mov
iret
push
sti
je
pop
sbb
movsl
push
popa
adcb
test
flds
jae
adc
and
cmpsb
xor
xchg
adc
popf
adc
push
jl
xor
lods
lods
cmpsb
or
inc
leave
or
jb
stos
imul
jae
pop
cwtl
pop
movsb
shll
jg
xor
leave
lcall
out
inc
imul
dec
mov
mov
in
mov
enter
add
xor
pop
jle
mov
int
jno
xchg
movsb
sbb
into
fnsetpm(287
cmp
mov
or
mov
xchg
sahf
fstpl
mov
jmp
jmp
and
ss
gs
loopne
mov
in
mov
cmp
daa
jl
ljmp
jae
add
pusha
add
mov
pusha
xor
jp
or
in
call
test
mov
mov
mov
or
cli
xlat
pop
jne
sub
cmp
pop
cmp
xchg
out
sti
outsl
xchg
pop
aaa
pop
out
lods
fwait
xchg
stos
aaa
fsts
pop
mov
sub
stos
popf
xchg
shll
test
js
leave
repz
daa
xchg
mov
push
inc
mov
xor
add
xchg
fstpl
int3
xlat
aam
xlat
movsb
push
pop
and
jne
lea
ficoms
or
clc
jecxz
pop
mov
lods
xorl
add
aad
fidivl
lret
sbb
cmp
xchg
sub
inc
mov
loopne
loop
test
add
sbb
inc
sbb
or
mov
pop
xchg
aaa
ja
pop
mov
repnz
mov
push
out
inc
test
out
or
into
sbb
pop
push
pop
xlat
mov
mov
sbb
jns
test
cmpb
mul
xchg
push
adc
or
sbb
mov
testl
adc
ret
xchg
pop
decb
fildl
jns
inc
cmp
pusha
lahf
jmp
lock
mov
or
icebp
mov
xchg
jb
jno
stc
adc
sub
dec
int
cmp
dec
call
inc
aaa
and
gs
or
mov
mov
push
adc
aam
sub
out
fidivl
mov
lahf
arpl
jne
stc
dec
add
int3
push
in
leave
xor
mov
dec
scas
cld
xor
mov
mov
adc
sbb
inc
es
inc
lods
shlb
test
inc
pop
jb
pop
outsb
stc
in
adc
ljmp
iret
add
lds
dec
sub
add
mov
lahf
sbb
stos
add
clc
xor
lock
sub
mov
test
das
fwait
sti
test
sti
jg
fmuls
sub
shlb
cmpsl
lahf
adc
push
mov
or
jle
fdiv
fstp
es
sbb
dec
insb
or
lret
dec
xchg
mov
sub
sub
mov
jmp
lret
push
call
add
cltd
pop
adc
cltd
enter
push
pop
lea
mov
mov
mov
scas
jl
pop
fidivrl
dec
mov
push
outsl
test
jle
and
rcrb
lret
mov
jle
add
and
clc
adc
lahf
ret
jg
mov
sbb
sub
push
push
sahf
add
cmpsl
dec
fidivs
mov
dec
sub
mov
sti
in
arpl
sbb
ljmp
xchg
pop
sub
dec
cmp
lret
stos
cs
lcall
dec
fcompl
daa
fidivrl
cmc
mov
jae
push
ja
xor
shrl
loopne
in
imul
mov
fimull
add
mov
pusha
mov
int
push
stos
dec
into
push
fadd
test
rclb
mov
or
xor
lahf
push
pop
iret
pushf
mov
daa
test
pop
fildll
iret
imul
lods
xor
xchg
and
ja
lret
mov
fistpll
out
mov
push
ss
lock
push
mov
pop
inc
ret
jb
mov
out
mov
andb
cmpb
mov
into
cwtl
sbb
cltd
xchg
push
les
jg
arpl
lea
mov
sub
push
inc
inc
pop
arpl
lcall
out
ret
test
mov
xor
or
imul
mov
inc
jp
orl
sub
imul
mov
mull
mov
outsl
xor
dec
rol
inc
call
pop
aad
enter
test
popf
mov
mov
xchg
xchg
xchg
xchg
rorl
dec
inc
imul
push
pop
pop
outsl
daa
cmc
fs
push
and
inc
cmp
fdiv
jbe
inc
sbb
jg
movsl
scas
mov
pop
push
dec
and
js
insb
jle
xchg
shr
push
mov
cmpsl
aaa
sbb
or
mov
jno
testb
push
mov
and
sti
mov
xor
xlat
and
push
push
inc
xchg
sub
mov
loope
stos
mov
and
psubusw
cmp
loope
pushf
xor
mov
adc
jmp
dec
push
cld
mov
addr16
imul
aas
lret
jle
or
fdivrs
jae
xor
jl
mov
enter
xchg
cmp
fs
fmul
mov
loope
or
jns
push
jnp
mov
popf
xchg
pop
sahf
mov
out
cmc
cmc
mov
movsl
jbe
mov
and
xor
repz
test
fdivrs
movsb
xor
out
test
or
sbb
or
daa
dec
hlt
jno
ficoms
out
sahf
pusha
and
movsb
inc
scas
sahf
cli
in
push
shll
mov
add
jge
pop
pop
adc
jg
lcall
push
sbb
pop
and
in
movsb
xchg
push
aas
lds
mov
sahf
xor
push
pop
cwtl
mov
in
jo
pop
int3
pop
mov
and
sub
add
repnz
pop
adcb
outsl
push
push
mov
aad
adc
inc
jl
subb
jne
icebp
jle
pop
out
jo
adc
inc
xchg
jns
dec
mov
ret
xchg
imul
imul
jmp
rcr
into
and
repz
sub
ds
push
test
jo
xor
addb
xchg
sbb
pop
add
xor
push
cltd
lods
push
mov
cmp
inc
jle
cli
cmp
cli
mov
aad
mov
enter
xchg
sub
into
lods
push
ror
ss
sub
mov
outsl
mov
repnz
sub
or
mov
cmc
in
gs
add
mov
jmp
add
xorl
adc
out
ss
push
add
enter
daa
dec
scas
mov
pop
xchg
loopne
ret
push
pushf
outsb
xor
dec
arpl
ficomps
dec
lock
or
fsubrp
pop
add
push
ja
xlat
mov
or
or
je
dec
pcmpeqw
xor
mov
sub
outsl
frstor
addl
adc
cltd
push
js
xchg
scas
mov
out
pop
testb
int3
leave
sti
inc
sub
add
jl
aaa
push
mov
movsb
mov
xchg
cmpsb
push
xchg
dec
adc
cmp
test
inc
cmpsb
movsl
adc
sbb
ret
push
add
sub
push
orl
push
pop
cmp
pusha
mov
or
in
inc
fwait
inc
in
sbb
cmp
dec
adc
jge
xchg
cmp
jne
add
les
sub
icebp
lods
push
lcall
cltd
xchg
pop
cmpb
adc
shrl
fs
sub
pop
jae
test
add
xor
cmp
mov
dec
xchg
hlt
fwait
aaa
test
adc
imul
je
js
jmp
inc
outsl
dec
mov
sbb
cmp
in
rorl
mov
stc
jp
lret
add
cld
jb
fcomps
out
mov
sbb
mov
dec
das
pusha
jnp
inc
test
jnp
scas
mov
repnz
mov
cmp
dec
sti
mov
sub
sbb
nop
pop
xor
cmp
mov
orb
scas
test
mov
clc
cltd
fadd
hlt
add
push
sbb
push
sbb
sub
js,pt
xchg
outsb
cmpb
sub
mov
pavgw
js
imul
jo
aas
insb
xchg
call
push
mov
fs
stos
lods
rclb
insb
xor
roll
lcall
jl
outsb
into
into
popf
jecxz
pop
repz
test
in
test
adc
or
push
fisttpl
jmp
push
and
mov
aam
cmp
inc
sbb
or
dec
lea
mov
aam
pop
icebp
insl
shrb
sarl
daa
sbb
aaa
mov
jo
inc
jno
sub
adc
xchg
cmc
test
stos
jg
xchg
arpl
pusha
fldt
adc
push
cmp
sbb
xchg
xchg
in
pushf
mov
stc
daa
push
pop
adc
cmp
inc
fs
loopne
xchg
cmp
mov
arpl
and
inc
pusha
pop
mov
inc
xor
in
dec
test
scas
shll
sahf
adc
lds
cmp
mov
mov
or
rcrl
test
fadd
push
cmpsl
outsb
int
xor
sbb
pushf
pusha
shlb
iret
in
xor
mov
sbb
mov
xchg
sti
mov
out
cli
mov
xchg
js
in
test
jp
subb
test
int3
sub
mov
out
int
inc
mov
pop
js
mov
mov
adc
xchg
clc
mov
movsb
pop
sti
inc
stos
ds
bound
orb
pop
mov
push
pop
pop
sub
cmpsl
or
jo
jnp
sbb
inc
jp,pt
mov
dec
cmp
dec
jb
add
fadds
fstps
adc
mov
leave
fcoms
outsl
jns
xchg
xor
jmp
mov
pop
out
js
insb
and
push
pop
dec
push
call
jb
cvtps2pd
fidivl
sbb
mov
popl
and
cwtl
pop
sbb
icebp
pusha
lock
mov
mov
or
inc
test
pop
ja
sub
imul
rolb
addr16
xchg
div
call
jnp
mov
sarl
les
adc
loope
add
pusha
jbe
ficoml
loop
mov
inc
adc
fidivs
cmp
mov
sbb
push
inc
pop
pop
sub
or
mov
sub
pop
subl
movsb
pop
or
xor
int
jb
pushf
repnz
jo
cvtpi2ps
and
outsb
add
hlt
cmc
mov
jmp
add
mov
cwtl
int3
jmp
ljmp
xor
xor
xor
push
dec
jns
out
push
dec
mov
jns
and
cmpl
adc
test
mov
inc
add
arpl
inc
into
iret
mov
iret
xchg
adc
mov
adc
test
add
lahf
stc
jne
in
mov
adcl
pop
bound
and
icebp
shrb
lock
daa
aaa
jge
xorl
leave
dec
inc
iret
mov
movsl
int3
cs
and
scas
cmc
loop
imul
xor
jne
push
cmpl
ret
aas
adc
mov
xor
pop
insb
es
mov
aad
insl
nop
lret
hlt
ds
jbe
stos
arpl
negb
movsl
sub
outsl
icebp
sub
pop
cltd
loope
leave
sti
dec
fistpl
clc
insl
imul
outsb
jl
cmp
dec
jbe
fisttpll
dec
push
pop
insb
es
scas
in
sarl
stc
mov
xor
dec
jbe
es
jae
cltd
dec
or
jecxz
or
dec
mov
or
clc
repz
sbb
arpl
fcoml
adc
call
xchg
add
add
and
pop
mov
mov
jae
sub
inc
imul
or
lds
fwait
xor
mov
das
xchg
adc
push
adcl
popf
stos
ret
mov
subb
mov
fisttpl
ljmp
outsb
fisttpll
scas
inc
mov
push
xchg
fstl
popa
xchg
mov
call
cmp
jmp
in
js,pt
ljmp
push
xchg
mov
stc
cltd
es
paddusw
push
mov
add
push
daa
lret
les
mov
in
push
xchg
out
jmp
or
sti
xchg
push
leave
jg
pop
xor
inc
xor
cmp
in
lret
ljmp
stos
test
popf
cmpsl
aad
iret
movsb
push
push
lea
fadds
and
sbb
pop
mov
hlt
jmp
pop
cli
repnz
lret
mov
sub
jo
hlt
daa
sbb
sbb
andl
jae
mov
push
test
sbb
ret
sbb
scas
leave
cwtl
test
icebp
mov
and
push
and
mov
push
jle
enter
sbb
adc
mov
jnp
lret
jle
inc
sbb
mov
xchg
mov
int3
mov
dec
mov
imul
pop
xchg
test
xchg
and
fsubrp
add
jle
bswap
sub
xlat
jg
adc
xchg
out
mov
jecxz
stos
outsb
xchg
mov
push
fstpl
push
shll
data16
fs
cltd
or
sbb
aam
sarb
ficoms
xor
cmp
imul
adc
xchg
or
and
mov
xor
int3
call
inc
in
int3
movsl
xchg
and
insb
das
dec
adcl
andl
mov
loop
pop
mov
mov
cmp
xor
sub
adcl
pop
imul
mov
ret
push
inc
inc
sti
lea
imul
insb
xchg
jp
daa
sbb
ljmp
gs
leave
sti
outsb
cltd
imul
cld
in
and
and
inc
xor
jnp
and
into
push
out
loope
mov
cmp
pop
jl
xorl
jp
and
mov
jb
sub
lds
inc
push
push
cmp
out
sub
iret
mov
loopne
imul
ret
pop
jno
cmp
mov
xor
rolb
daa
dec
push
inc
outsb
jecxz
jnp
notl
inc
addl
inc
cli
push
testb
bound
pop
out
mov
iret
fdivs
sub
mov
or
icebp
dec
arpl
test
ds
mov
and
adc
lret
iret
daa
sarl
xor
addr16
push
pusha
movsl
stos
jecxz
lcall
stos
jae
xor
popa
push
shll
jnp
aaa
sti
mov
sbb
jmp
shll
or
testb
fsubs
mov
xor
mov
enter
gs
xor
jl
xor
and
cwtl
jmp
and
or
jl
insl
adc
fcoml
push
lea
or
jg
inc
loopne
pop
shrb
xorb
xor
xor
and
push
adc
outsl
cmp
inc
adc
insl
aas
adc
sarl
push
icebp
int
pop
popa
sbb
pop
jne
xchg
add
arpl
add
das
bound
push
int
outsl
stos
jmp
lcall
xor
insl
out
and
fs
jle
pop
ds
dec
mov
cltd
add
sbb
lret
aad
pop
out
sub
lcall
mull
xor
mov
push
cld
add
or
cwtl
and
ss
rclb
sub
mov
popf
test
or
xlat
or
sbb
dec
mov
inc
pop
int
add
es
mov
fisubl
rorl
xor
xchg
inc
outsl
bound
xor
stc
and
in
mov
fiadds
push
popf
addr16
loope
mov
add
out
stc
pop
stos
pop
loopne
sbb
in
push
pop
popf
mov
dec
mov
pop
cmp
cmp
add
loope
shrb
fs
out
fldt
movb
mov
fst
nop
cmp
mov
pop
xchg
xchg
das
mov
push
inc
lea
int
and
push
andb
shrl
xchg
shrb
gs
xchg
repz
dec
call
sbb
dec
das
mov
mov
inc
pusha
xchg
iret
repnz
xchg
sub
mov
cmp
mov
mov
mov
pop
pushf
inc
mov
in
repnz
jno
roll
pusha
add
je
dec
add
inc
push
xor
pop
push
xor
shll
cmp
pop
loop
mov
loope
and
mov
outsl
push
les
out
xchg
adc
aaa
mov
in
sub
popa
in
mov
fsubl
dec
sub
stos
cmp
out
fsubl
fidivrs
adc
popf
pop
insl
imul
mov
ljmp
add
sbb
add
adc
jp
notl
inc
add
leave
cmc
add
cmp
pop
push
mov
pop
inc
js
rcr
jmp
or
mov
lea
fdivrl
inc
data16
push
ss
inc
push
jae
punpckhdq
dec
or
jne
cmp
push
pop
fldcw
daa
jl
cmp
out
lret
add
mov
dec
fs
lcall
lock
loope
sbb
out
lahf
imul
fstpl
xchg
and
xlat
pop
insl
push
xchg
mov
sbb
aaa
inc
stos
fnsave
sub
mov
mov
lods
out
push
mov
lds
nop
iret
inc
mov
imul
jo
xor
sub
jb
dec
mov
add
lret
divb
call
push
jmp
pushf
shll
addr16
push
in
inc
arpl
daa
in
pop
sti
cmc
das
insb
leave
movsl
fidivrl
dec
pavgb
xor
divb
es
sbb
push
dec
aaa
adc
int3
jne
mov
jecxz
add
cmpsb
call
stos
fdiv
mov
ja
or
adc
add
sbb
sti
mov
mov
lahf
mov
ret
fs
mov
add
dec
nop
push
and
mov
lcall
dec
and
repz
lcall
icebp
pop
and
and
insl
jns
movsl
pop
pop
add
add
fistpl
and
imul
mov
fs
cmp
jmp
add
cmp
xor
imul
out
repz
inc
daa
push
push
icebp
inc
addr16
push
in
fldenv
fwait
clc
ljmp
push
cli
push
lea
jne
sub
rcr
jle
repz
xlat
push
adcb
or
mov
bound
push
dec
and
add
test
das
aad
push
mov
aas
xlat
hlt
fmulp
mov
insl
test
rorl
dec
push
and
mov
add
jge
sbb
out
inc
lods
sub
out
gs
pop
adc
xor
sahf
inc
dec
cmp
aad
fs
dec
xor
jne
rclb
shrb
dec
cmpsb
movsl
mov
hlt
enter
mov
sti
lea
cmpl
fwait
pop
adc
mov
les
cwtl
das
stc
out
loopne
adc
dec
and
cmpsb
fisubs
insl
mov
jbe
sarb
cmp
dec
cmp
xchg
dec
xchg
dec
cltd
and
addb
ds
inc
outsl
xchg
sub
test
icebp
daa
lds
dec
lcall
jb
in
mov
ficoml
not
jmp
add
imul
cmp
mov
rcl
pop
adc
outsb
test
xor
out
loope
fadds
xorl
push
adc
mov
leave
sbb
pop
push
xlat
ljmp
negb
xlat
in
in
mov
inc
lock
cmpsl
xchg
and
adc
dec
xchg
loope
or
adc
push
push
out
std
jnp
push
cwtl
push
in
outsb
cmp
mov
pop
cmp
jmp
add
inc
dec
in
pop
js
loope
inc
mov
test
imul
inc
lds
repz
daa
push
dec
or
xor
les
inc
icebp
inc
sbb
cmp
push
adc
jg
jns
fstp
and
sbb
pop
jbe
add
arpl
outsb
cmp
ret
sub
js
sbb
add
lds
add
mov
xor
cmp
stos
fistpl
mov
loope
adc
or
repnz
jno
dec
adc
jae
inc
add
xor
std
data16
iret
cmp
outsb
xlat
call
xor
rcll
sti
and
scas
pusha
xchg
lods
push
jle
jbe
sahf
dec
out
fadds
out
out
repz
and
icebp
push
mov
js
lods
popa
in
jge
iret
adc
fwait
mov
orb
das
jo
pop
lret
clc
leave
cli
and
sar
pusha
mov
insb
outsl
cs
inc
push
push
mov
pop
push
pop
in
fistpll
inc
movsb
sub
jns
dec
xchg
and
jle
subb
mov
xchg
jnp
mov
loopne
mov
outsb
lods
add
movsl
in
ret
xchg
aas
pop
sbb
bound
mov
nop
push
add
stos
push
push
call
inc
add
inc
mov
es
inc
pushf
ja
scas
add
sub
push
mov
aas
out
stc
rcrl
in
xor
loope
adc
loopne
insb
shl
mov
inc
xchg
sbb
cltd
or
ret
sbb
mov
nop
xchg
adc
mov
pusha
fdivrl
popa
subb
pop
xchg
adc
mov
adc
mov
jg
rorl
aam
pop
fisttps
jno
jae
mov
lds
mov
push
pushf
push
jmp
lahf
add
push
xchg
test
adc
jbe
push
insb
lahf
mov
jae
xor
xchg
pusha
pop
dec
mov
arpl
pop
xlat
aaa
and
lahf
push
push
cmp
addl
fcomip
inc
arpl
lret
and
xor
lds
dec
inc
ret
mov
fcomps
or
inc
mov
icebp
insl
xor
jg
mov
xor
push
int3
loop
xchg
inc
jbe
in
and
mov
rcrl
xor
sub
sub
sarl
sub
lret
mov
mov
fcomps
pop
fwait
pusha
es
popa
or
shrb
mov
add
lock
and
jb
or
pop
cwtl
add
std
sub
mov
xor
fdivp
or
stc
in
inc
xlat
in
and
ljmp
movsb
mov
inc
push
push
negb
mov
xor
jbe
adc
jp
ret
add
stos
xor
sti
daa
pusha
lods
stos
fsubrl
pop
cltd
add
xor
xor
or
inc
xor
xchg
int
sub
pop
fsts
inc
mov
pushf
push
loop
cli
and
js
pop
jbe
pushf
mov
pusha
xchg
dec
lods
cmp
xor
stc
mov
push
insb
cmp
rcl
xor
jb
es
das
sti
dec
push
imul
cmp
fisttps
and
orl
and
cmpsb
pop
sbb
movl
adc
dec
pop
aad
rcr
cmp
mov
icebp
scas
aad
lds
pop
repnz
lock
dec
test
jp
or
mov
push
jae
sbb
je
fcomi
iret
shlb
ret
mov
cmp
xchg
jno
fldenv
xor
and
add
lods
mov
int3
sarl
push
loop
xchg
jl
out
add
adc
out
jns
iret
fidivrl
dec
push
push
xlat
or
sbb
lods
icebp
sbb
bound
cmp
adc
movsb
adc
icebp
scas
dec
pop
add
or
cld
ds
bound
mov
adc
aam
mov
inc
sahf
mov
pop
mov
jge
in
hlt
inc
std
mov
jne
xchg
adcl
rcll
addb
mov
mov
in
lea
mov
cmp
or
stos
iret
inc
mov
scas
mov
xor
mov
les
imul
lea
and
push
lods
mov
or
inc
sti
jl
movsl
sbb
lock
jb
out
fsubl
cltd
pop
cmpsb
out
mov
fstpl
or
sub
js
faddp
xor
stos
lods
jo
imul
scas
cmp
jns
mov
out
push
sbb
xchg
ror
push
inc
imul
pop
dec
outsb
push
shlb
std
inc
mov
adc
jne
ret
dec
mov
inc
loopne
sar
cmpsl
mov
add
xchg
push
pusha
cltd
stc
in
adc
outsb
mov
scas
adc
bound
jmp
popf
mov
lock
jns
lods
and
mov
ja
sbb
ss
or
dec
imul
cmpsl
pop
std
fisubrl
and
or
lcall
test
idivb
add
xor
add
push
mov
dec
push
pop
sbb
fwait
imul
mov
out
push
push
jp
mov
cltd
mov
add
insb
loop
pop
cmp
scas
in
data16
jo
jle
jns
out
pop
test
fldt
cmp
lcall
xchg
add
cmp
arpl
jae
shll
sbb
cmpsb
loopne
jl
and
les
nop
bound
icebp
or
call
sub
push
test
bound
xor
jnp
fld
sti
push
cmp
jb
xchg
xor
fistl
int3
cmp
push
push
cmpsb
cltd
data16
lock
mov
gs
das
sub
std
sbb
mov
inc
shrl
mov
les
fnstcw
iret
add
ss
sahf
xor
inc
cmp
pop
cwtl
pop
sbb
xchg
pop
ja
bound
jge
sub
test
data16
xchg
push
pop
jo
iret
and
adc
xor
or
mov
int3
push
pop
addr16
mov
adc
inc
stc
popf
insb
jne
movsl
std
cmp
mov
jecxz
and
je
daa
stos
mov
inc
cmp
adc
pop
xchg
test
or
mov
and
fcoms
aad
mov
mov
fstpl
jecxz
push
gs
sar
pushf
and
shl
sub
subb
xor
gs
pop
fwait
cmpsl
adc
mov
popa
or
aaa
sbb
fs
pop
dec
je
out
xchg
push
mov
pop
sub
cmp
dec
ds
stos
xor
test
xchg
sbb
mov
cmp
aam
cld
test
push
push
mov
ret
movsb
adcl
cmp
aaa
cmp
inc
out
mov
repnz
sub
test
and
popf
mov
xchg
xchg
mov
xor
add
cld
inc
adc
loopne
mov
mov
aas
fwait
cld
add
pop
sub
std
js
sarl
lahf
jno
mov
adc
mov
sub
add
jo
mov
daa
insl
int
lret
cwtl
or
in
jg,pn
inc
mov
dec
sbb
cwtl
adc
rorb
or
or
sub
fs
mov
out
insb
mov
cltd
cmpsl
faddp
jno
sub
mov
frstor
sub
ret
stos
push
in
fadds
out
sub
pop
fisttpl
mov
mov
fs
sub
nop
rorl
into
fisubrs
adc
xor
xlat
push
ja
push
mov
dec
fs
mov
lahf
jae
in
cmp
int
nop
push
sub
or
rol
call
dec
cwtl
push
out
out
adc
out
and
and
add
pop
sbb
mov
jb
or
inc
push
cmp
pop
cmp
pop
rorl
jmp
ja
cmc
or
das
aas
fmulp
mov
testb
int
iret
and
call
mov
stos
mov
fiadds
ds
gs
std
in
sbb
std
or
mov
xchg
jle
dec
in
jnp
mov
cmp
sbb
adc
push
cld
inc
xor
sbb
mov
shlb
insl
inc
xchg
ds
out
aas
sub
or
dec
cld
cli
sub
insl
pop
mov
xchg
mov
rol
xlat
inc
or
fisubrs
je
mov
xlat
lcall
or
pop
lcall
inc
jns
and
dec
xor
popl
adc
push
loopne
mov
jmp
mov
leave
daa
pushf
pop
mov
fiaddl
sub
sub
popl
bound
and
enter
adc
push
adc
mov
nop
ljmp
mov
inc
data16
shl
sub
add
mov
mov
lods
lret
sbb
sub
sub
dec
leave
dec
push
fsubs
fildll
xchg
push
jno
sbb
mov
or
adc
pop
cmp
cli
mov
inc
adc
hlt
adc
xchg
iret
pushf
jmp
adc
mov
rcll
inc
dec
cmc
iret
or
imul
in
fs
xchg
mov
in
add
mov
movsl
out
sahf
imul
pop
xor
and
lods
hlt
iret
sahf
xor
jl
andb
cmp
popl
nop
xor
push
jl,pn
add
mov
sbbb
xor
sub
xor
push
aas
icebp
adc
mov
cmpsb
jb
jmp
push
xlat
mov
dec
popa
inc
mov
and
jne
lds
fisubl
pop
xchg
fwait
ret
das
cs
loopne
cmp
inc
sahf
adc
daa
jge
loopne
ljmp
push
testl
not
popa
lea
sbb
aad
sub
inc
mov
sbb
push
xor
inc
notl
adc
sub
sbb
sbbl
fwait
jmp
sub
decl
filds
popa
jmp
mov
push
stc
imul
mov
jbe
fwait
cmc
pop
jecxz
ds
pop
movsl
outsb
nop
cld
and
imul
xchg
adcl
test
jle
and
out
cld
push
leave
mov
push
pop
adcl
pushf
enter
cmpsl
call
inc
aam
pop
adc
test
or
in
arpl
mov
es
pop
std
dec
jecxz
jb
sbb
notb
mov
cmpsl
not
cli
push
clc
sbb
sub
dec
hlt
mov
shrb
repz
inc
inc
xor
loop
jle
pop
cmp
jl
jg
sub
gs
lods
mov
insb
adc
stos
lds
cli
movsb
icebp
pop
dec
pop
xchg
dec
mov
out
ja
out
push
push
repnz
dec
cmp
cltd
ficomps
ret
jecxz
mov
jle
xchg
subb
cmc
icebp
shl
ds
xchg
popa
in
jnp
incl
xchg
push
mov
push
cmc
clc
mov
add
aam
mov
cs
arpl
add
test
jp
lock
xor
pop
add
hlt
movsl
dec
fadd
testb
mov
bound
fiadds
add
ss
sahf
jmp
push
hlt
aaa
jmp
jo
cmp
das
ljmp
insb
pop
leave
mov
outsl
cli
add
pushf
rcl
je
rcrb
mov
jmp
test
shll
mov
sbb
pushf
cli
pop
adc
iret
xchg
sub
or
imul
mov
stos
mull
es
aaa
add
scas
push
fidivs
lret
lea
int
dec
ss
aas
je
fstps
out
repz
xchg
test
stc
ds
insb
mov
imul
add
mov
fmuls
lret
push
mov
pop
inc
push
push
repz
mov
sub
cmpsb
std
imul
add
int
push
mov
out
and
sub
or
sarb
aas
and
into
fdivr
xchg
jae
dec
cmp
test
jbe
mov
sarl
adc
xchg
pop
dec
mov
lret
sti
push
in
test
xor
flds
cltd
pop
pop
pop
or
and
push
push
jge
jbe
push
dec
cmc
add
in
popf
fs
inc
jne
jp
xor
jb
lret
or
xchg
mov
icebp
fisubl
mov
mov
mov
jbe
adc
pop
xchg
mov
sbb
iret
push
fadds
inc
cld
xchg
push
ja
ret
jne
ljmp
jno
add
adc
test
icebp
ss
ljmp
imul
and
cmp
push
popa
mov
push
add
test
sbbl
ficoml
jae
push
inc
pop
dec
dec
sti
adc
in
in
pop
and
test
jle
std
push
xor
outsb
add
enter
int3
xor
xorl
inc
dec
dec
arpl
cmpsl
and
repnz
movsl
lea
xor
cmp
sub
jl
mov
or
pop
pop
out
mov
jns
or
and
push
int3
scas
loop
fcomi
fcmovbe
rcr
mov
jge
sub
mov
pop
aaa
push
jo
dec
push
stos
mov
ja
mov
adc
xchg
lcall
popa
mov
fisttpl
dec
das
jno
or
movsl
push
in
out
adc
add
ljmp
aas
mov
out
popf
fcoms
sbb
push
mov
sub
cmp
push
scas
or
adc
nop
call
int3
adc
mov
divb
test
cs
cmpsb
mov
loop
pop
jbe
ret
dec
icebp
adc
pop
inc
mov
dec
xlat
ljmp
lods
and
push
fidivs
cld
sahf
ret
add
sbb
jae
xor
xchg
xchg
jbe
stc
cwtl
std
sbb
dec
test
cli
repnz
in
jmp
ret
rcr
test
popf
cld
add
add
dec
mov
dec
dec
cmp
xchg
repnz
rorl
cs
dec
repz
insl
or
mov
pusha
mov
xlat
mov
in
add
pop
ror
jnp
cmp
mov
lds
nop
push
ret
daa
jno
pop
in
jecxz
mov
push
dec
in
lods
lods
movsl
out
lds
jne
mov
leave
mov
test
jmp
in
mov
jo
or
fisubrl
mov
xchg
lret
inc
mov
ja
sbbl
nop
mov
pop
sub
in
in
pop
jmp
push
jl
lcall
pop
iret
inc
jecxz
xchg
in
lret
aad
cmp
or
sub
mov
pusha
cmp
or
dec
adc
xlat
lahf
pop
es
jecxz
mov
adc
adc
hlt
faddp
xor
out
testb
cwtl
lret
enter
nop
xchg
clc
ret
pop
or
pop
or
push
shll
addl
mov
push
mov
lock
xchg
mov
das
push
mov
adc
jle
cmc
pop
sbb
lea
lret
jmp
jge
vmovsd
pop
xor
ret
push
and
pop
data16
dec
in
sub
aad
xor
orb
addr16
clc
xchg
pop
rolb
xor
in
aaa
mov
jge
push
mov
rorb
push
loop
insl
fucom
mov
adc
stc
nop
iret
lahf
mov
cmp
jmp
ja
adc
jecxz
out
js
popf
cs
mov
sbb
mov
mov
inc
lret
imul
outsb
call
or
ja
cmp
push
fdivp
sbb
ror
jnp
rorb
pop
lret
js
mov
sbb
mov
sarl
pop
add
mov
jo
dec
mov
punpckhbw
ret
and
mov
je
add
xchg
popa
xchg
mov
xchg
push
pusha
sarb
rcrb
jecxz
adc
or
scas
orb
lret
idivl
ja
mov
inc
enter
popf
and
leave
or
lock
jmp
mov
sub
shrl
sub
cli
pop
ss
pop
mov
mov
pop
aas
dec
add
pop
mov
mov
mov
add
in
adcl
outsl
inc
es
inc
pop
arpl
xchg
mov
imul
data16
sbb
push
lcall
lea
sub
jge
repz
or
stos
loope
iret
xlat
ja
popa
fisttpl
mov
orb
loopne
sbbl
adc
adc
jae
stos
sarl
jns
movsb
cmp
in
dec
adc
dec
jns
mov
push
adc
jnp
mov
ret
mov
mov
test
mov
insl
fimuls
adc
cmp
arpl
stc
stos
mov
sti
jg
sbb
cld
clc
pop
cmp
scas
lahf
mov
jge
and
ltr
sub
sbb
faddl
mov
or
cmp
sub
add
cli
outsl
shrb
or
jle
and
add
shrb
shlb
inc
hlt
test
repz
dec
adc
in
addr16
dec
aam
push
cmpsb
push
jnp
or
arpl
ficompl
ret
je
dec
push
push
inc
cld
addl
shlb
sbb
enter
and
out
push
cmpb
jbe
cwtl
pop
fstl
pop
jmp
and
hlt
xchg
and
and
push
std
xor
xlat
mov
mov
sbb
ja
les
jge
xchg
push
push
bound
jl
sbb
adc
bound
inc
outsl
push
pop
popf
iret
ficompl
or
int3
cltd
gs
xchg
stos
adc
fmulp
jb
cmp
clc
and
popf
imul
mov
xor
push
lock
test
pop
pop
notb
std
xchg
orl
jg
jns
dec
ret
cmp
xor
xchg
mov
dec
cmp
popf
push
adcl
jge
fbstp
in
test
and
jns
scas
xor
test
xchg
lods
jecxz
inc
dec
jnp
pushf
xchg
jnp
pop
lea
xchg
stos
push
aas
fmul
movsl
adc
gs
adc
jo
xchg
cmp
aaa
jge
push
int3
add
dec
cmpsl
data16
mov
ja
mov
pop
movsb
sbb
dec
sub
push
mov
jp
add
and
push
in
mov
mov
jle
mov
dec
lcall
dec
pop
push
or
shrl
cmp
sbb
mov
jae
out
repnz
pop
movsb
aad
fcoml
lds
mov
jp
leave
test
push
push
jno
call
out
data16
test
dec
add
jbe
movsb
fwait
lea
test
imul
jae
pushf
sarl
inc
loopne
push
sub
scas
mov
xor
cmp
jae
mov
mov
leave
mov
scas
out
js
dec
cmp
or
push
loope
popl
mov
mov
cmp
fstpl
arpl
fsubl
in
sub
stos
loopne
shl
sub
and
imul
xor
test
add
push
icebp
inc
ds
cmpsb
mov
pop
int
fisubl
cltd
aam
std
add
xchg
leave
into
or
iret
dec
dec
imul
or
sub
mov
pushf
push
inc
mov
mov
inc
adc
xor
push
popf
jb
cmp
pop
insl
fisttpll
sarl
call
cli
cmp
dec
cmp
or
test
mov
mov
jbe
xor
cmp
cwtl
push
clc
mov
rcll
add
fsubrl
aas
pop
inc
bound
hlt
jo
xor
inc
cmp
adc
out
mov
das
imul
fnsave
popf
addr16
push
mov
mov
cmp
push
mov
sbbb
mov
test
lret
push
loope
hlt
pop
or
xchg
jne
test
stc
stc
mov
clc
lods
aam
sbb
lock
mov
sbb
rclb
fsts
inc
fsts
or
mov
stos
addr16
push
movsb
jp
insl
push
mov
in
sahf
imul
jnp
cmpsl
mov
jmp
inc
pop
cmp
mov
fadds
mov
or
push
ljmp
inc
mov
mov
cmpsb
mov
imul
inc
dec
pop
loop
insl
adc
mov
cwtl
jle
repz
dec
add
sbb
pop
xchg
fimuls
mov
rcr
outsl
gs
test
out
inc
adc
jo
dec
xchg
cmp
lock
pop
repnz
lock
jae
andb
push
mov
mov
sub
in
cmp
fs
js
add
mov
imul
shl
cmc
mov
jg
ljmp
das
in
adc
cltd
les
imul
dec
pushf
xor
mov
cli
dec
rcr
nop
push
pop
jg
lods
xor
inc
or
jnp
or
sbb
repz
jecxz
and
ret
add
in
mov
out
pop
stc
sti
rorl
test
daa
ja
lcall
or
pop
movsb
mov
adc
pop
xor
cli
mov
imul
or
lock
or
inc
popa
and
jecxz
add
jl
push
fdivp
int
dec
mov
nop
xlat
xchg
jne
xchg
cmp
push
jns
inc
jb
jl
sub
int3
ds
sbb
adc
inc
aam
dec
fcomps
jp
lea
xchg
je
insl
jno
lret
sub
jo
jne
pusha
icebp
add
xchg
sbb
inc
mov
sbb
lock
add
icebp
and
mov
push
inc
jle
xchg
mov
mov
ja
enter
cmp
mov
dec
ret
and
sub
dec
xor
add
movsb
dec
popa
cmp
pop
inc
fcmovnu
sti
mov
push
or
clc
lock
jp
test
adc
leave
movsl
rorb
or
bound
fs
xor
and
xchg
clc
test
mulb
dec
add
mov
mov
dec
jl
shrb
stos
push
and
sub
into
aaa
jp
fisubrl
adc
and
cwtl
dec
insb
mov
dec
cmpsb
shlb
pop
out
fucomi
sbb
dec
adc
aam
lret
stos
pop
out
xor
cli
add
aam
sarl
faddp
push
aad
jbe
push
pop
ds
fsts
sub
movsl
adc
xchg
mov
cmc
push
sbb
mulps
fdivp
sbb
sahf
mov
fstps
lea
rorl
push
jle
sbb
movsb
xchg
int
sub
add
mov
ja
mov
dec
xchg
dec
rorb
cmp
sbb
cmc
xchg
mov
adc
pop
or
icebp
cmp
adc
out
cmp
sbb
adc
lods
mov
xchg
jne
jbe
cmpsb
pslld
cli
fcomps
das
cmp
mov
cld
cmpsb
mov
setae
mov
arpl
hlt
stc
and
sbb
lods
out
and
cs
adc
push
lods
xlat
rorb
fucomip
add
ss
mov
add
mov
rorb
pushf
pop
fmull
aaa
int
fdivs
ret
mov
mov
cmc
or
cmp
les
dec
enter
gs
or
arpl
adc
nop
cmpb
push
test
int
inc
sub
xor
fs
dec
fiaddl
fs
rclb
sti
inc
push
mov
adcb
ficoms
mov
dec
mov
das
xor
mov
mov
sti
and
mov
in
mov
insl
mov
sbbl
dec
ljmp
add
lock
test
mov
outsl
sbb
fiadds
cwtl
out
orb
push
cmp
aam
push
cmc
out
cltd
or
ret
ja
cwtl
inc
xor
adc
mov
push
stos
aaa
loopne
push
jp
daa
pusha
adc
lret
push
pop
daa
incb
dec
scas
in
pusha
xor
pop
jae
dec
popa
mulb
cld
jns
inc
dec
leave
or
outsl
push
cwtl
jg
push
in
sbb
or
cmp
push
enter
inc
pop
ret
jo
ljmp
jb
xor
in
xchg
fisubrs
push
or
and
leave
leave
cmp
pusha
sub
sub
into
adc
out
stos
mov
jmp
iret
add
fisubrl
cmp
push
jl
add
test
ds
in
and
push
push
roll
jge
adc
scas
and
mov
lcall
ja
pop
or
dec
cwtl
pop
inc
push
in
inc
fidivs
cld
mov
inc
or
enterw
inc
mov
mov
inc
add
lock
cmpsl
lock
scas
push
daa
mov
xchg
xchg
adc
outsl
popa
mov
leave
mov
cmp
mov
push
xor
je,pt
adc
or
push
loope
mov
into
ret
jl
lea
loopne
xor
int
mov
mov
outsb
outsb
stos
push
rclb
mov
movsb
les
xor
dec
mov
insl
in
pushf
enter
adc
lret
imul
cmp
mov
scas
cmpsb
sub
xchg
sub
out
outsb
adc
sub
shll
and
clc
repnz
push
ret
cld
pop
pop
sbb
dec
sbb
xchg
popf
in
fidivl
fbstp
aad
adc
scas
lcall
cld
leave
addr16
mov
jecxz
or
mov
jae
es
cmp
out
es
cmc
or
xchg
lea
mov
daa
addr16
out
jae
data16
cmc
pop
mov
rcl
or
xchg
mov
sbb
push
sbb
cwtl
xchg
add
pop
push
push
sub
mov
add
push
ficoms
cmp
jno
test
cld
pushf
sti
lds
adc
shl
dec
mov
les
jnp
and
adc
dec
xchg
data16
test
pop
mov
inc
mov
and
sbbb
push
mov
in
repz
xor
fwait
in
mov
push
loopne
test
icebp
xchg
push
ja
cmp
dec
push
arpl
imul
test
jns
add
movl
mov
mov
pop
dec
data16
push
shlb
jle
pusha
cmc
pop
inc
inc
out
pop
dec
repnz
pusha
xchg
jp
stos
sub
push
nop
inc
push
jnp
into
insl
rcll
cld
xor
clc
push
mov
inc
inc
push
jg
push
push
sub
shrb
mov
ror
dec
sub
dec
repnz
push
clc
loop
sarl
lock
pop
lahf
push
cwtl
and
and
test
test
cmpb
roll
aaa
push
jle
cmpl
icebp
xor
pop
sarb
push
xlat
gs
scas
jg
je
push
dec
hlt
mov
pop
fcmovnbe
push
dec
cmp
lahf
addr16
cmp
mov
addb
mov
mov
shrb
test
and
pop
fcmovb
mov
cmc
cli
lea
popa
xchg
xor
fwait
bswap
mov
arpl
hlt
mov
mov
or
pop
jnp
repz
or
and
xchg
dec
jo
xor
jmp
mov
pop
in
add
leave
rcr
push
inc
enter
cmp
dec
mov
call
or
and
repz
frstor
scas
pop
adc
push
sbb
xchg
jle
std
jb
icebp
jg
mov
fimull
hlt
testl
gs
int
push
int
mov
and
jbe
xor
push
inc
cld
out
filds
and
cli
jp
fmull
or
ficomps
out
mov
sub
popf
ret
xor
insl
adc
sbb
inc
js
ds
adc
pop
outsl
dec
shll
pop
std
jne
nop
mov
dec
test
pushf
outsb
es
cld
aam
and
sbb
mov
sub
add
aam
test
push
mov
movsb
out
mov
dec
mov
sub
or
jo
std
lahf
test
dec
push
iret
inc
aam
xlat
add
fmuls
add
jae
mov
cwtl
cmpsl
aaa
mov
rorl
or
cmp
or
dec
in
dec
xchg
mov
dec
push
jle
fisubl
imul
cmp
popf
stos
and
je
sub
lret
popa
inc
sbb
stos
in
inc
jno
in
mov
lcall
pop
push
aam
adc
push
aas
leave
cmp
jmp
push
jne
pop
xchg
je
dec
pop
rclb
insb
lods
lds
stos
mov
jecxz
pop
bound
std
aam
cltd
popf
rcrb
pop
jb
xchg
mov
sysexit
jl
sbbl
xchg
sbb
push
aad
adc
pop
cmpsl
xchg
stos
jg
adc
add
ficoms
jmp
adc
push
add
and
sarb
mov
hlt
push
push
loopne
scas
pop
notl
sbb
cmp
shll
in
or
pusha
sbb
jge
imulb
add
mov
dec
mov
pop
std
adc
mov
nop
pop
imul
inc
dec
std
roll
mov
sbb
mov
cmp
insl
and
lods
ss
sbb
sub
sub
gs
cmc
in
push
lds
sti
sbb
sub
xor
out
jmp
mov
test
xor
jp
push
push
sub
insl
out
push
pop
xor
push
jge
aam
sti
stos
or
push
sbb
cmp
in
loopne
xchg
sub
stc
xchg
inc
dec
insl
xchg
or
in
push
ss
or
inc
dec
mov
xor
sub
in
pop
shlb
pop
jecxz
out
and
push
sub
das
fidivl
movsl
or
fistl
mov
inc
hlt
mov
aam
iret
addr16
stos
and
mov
mov
pop
mov
jle
out
sub
filds
pop
popa
iret
and
std
je
int
ror
xchg
addb
inc
cs
pop
out
or
ss
and
or
add
roll
lret
cmp
pop
or
pop
scas
add
pop
dec
daa
sub
fiadds
cld
inc
bound
dec
lret
sbb
mov
mov
sbb
dec
addr16
pop
or
lods
repnz
outsl
scas
mov
pushf
cmp
les
mov
cmpsb
mov
dec
mov
stos
loope
pusha
and
jo
loopne
cmpsb
or
lret
xchg
bound
jecxz
aad
xor
push
push
divl
jbe
jecxz
rorl
fbstp
pop
lret
mov
imul
loopne
mov
or
sub
mov
imul
jmp
xchg
xor
cmp
adc
ret
andb
loop
pop
pop
lret
xor
cmp
mov
mov
aaa
dec
out
inc
cmp
lock
xor
mov
movsb
incb
mov
stc
mov
sbb
ror
cmovs
scas
mov
sbb
inc
popf
lock
jl
lret
cmc
add
sub
inc
push
test
mov
or
or
mov
adc
mov
inc
mov
imul
or
sub
test
mov
inc
lock
sbb
or
roll
inc
jno
pop
mov
mov
xor
jecxz
arpl
inc
push
fcom
sub
out
dec
dec
es
jecxz
mov
mov
stos
frstor
mov
push
int
popa
mov
orb
in
scas
push
stos
insb
cmp
cmpsb
cmp
sbb
adc
stc
pop
pop
adc
cmp
shlb
cmc
add
add
inc
jle
jg
jae
mov
inc
shl
fldcw
stos
repnz
mov
dec
pop
mov
aam
jnp
xchg
iret
in
mov
out
inc
rolb
insl
sbb
adc
jns
xor
push
and
xchg
sahf
and
cli
mov
data16
xchg
mov
mov
mov
dec
fnstsw
push
fimull
mov
ret
inc
dec
loopne
fwait
ds
cmp
cmc
mov
mov
lahf
and
je
and
adc
nop
jbe
lret
mov
cmp
fsqrt
out
repnz
adc
dec
into
mov
dec
jg
and
in
movsb
ret
xor
imul
in
shlb
adc
cmp
mov
arpl
push
bound
out
scas
jne
daa
sbb
xor
shr
push
mov
cltd
xchg
stc
xor
outsb
nop
cmp
int3
sbb
or
test
inc
dec
in
sti
fisttpll
test
jno
loopne
lahf
add
add
cmpl
mov
mov
and
pop
pop
dec
outsb
push
dec
gs
je
cltd
cmp
popf
jno
inc
sbb
mov
insl
jne
or
push
iret
aam
mov
movsb
inc
pop
or
pop
rorb
cmp
jge
push
std
inc
push
iret
aaa
je
mov
sbb
sub
xor
adc
and
mov
ljmp
cmpb
pop
jne
lcall
ss
sbb
mov
lret
xchg
loopne,pt
xchg
pop
push
and
in
inc
test
insb
jns
leave
pusha
sbb
cmp
sbb
loop
in
and
dec
sub
sub
jl
mov
push
sbb
pop
outsb
dec
ljmp
movsb
divl
fs
daa
leave
inc
repnz
jne
fstps
loope
sub
int
movzwl
adc
cmp
cmp
and
mov
das
adc
xchg
sub
ss
inc
ljmp
repz
insb
fwait
dec
lcall
cmp
data16
data16
add
xchg
gs
push
xchg
dec
pushf
jmp
fdivp
and
push
or
cltd
push
fstpt
inc
jae
and
pop
fsts
int3
es
push
pop
stc
push
cmp
leave
rclb
aaa
aad
ret
sub
mov
shrb
pusha
ss
mov
cmp
mov
lea
mov
jb
pusha
and
loope
mov
imul
dec
fldt
jbe
into
bound
or
arpl
mov
aad
loop
int
push
push
ss
lock
cltd
sbb
cmc
sub
jmp
out
addl
rcr
xor
lds
insb
rcrb
cmc
std
lock
jle
push
rcl
ret
inc
enter
jb
call
orl
dec
cmpsb
mov
pop
xor
in
mov
lock
les
xchg
sub
mov
pusha
dec
adc
lahf
popa
mov
ficoms
and
pop
movb
icebp
xchg
add
rcll
aaa
add
scas
ficomps
aad
pushf
dec
and
std
out
lods
bound
cwtl
fsubrs
and
cmp
dec
mov
adc
aad
jns
int
push
xchg
lds
add
enter
mov
sbb
popf
jmp
mov
test
mov
rolb
cmp
cmp
push
mov
mov
xchg
out
jae
dec
mov
xchg
cld
rcrb
scas
jb
push
dec
jle
dec
push
sub
lret
mov
or
ds
cmp
sub
adc
movsl
push
popa
loop
sub
in
insb
icebp
jb
sub
pop
and
adc
aad
xlat
fmuls
dec
jne
xchg
in
in
cwtl
std
or
out
fdivl
gs
jg
jne
popa
test
xchg
scas
dec
add
das
in
data16
dec
test
sub
xchg
js
iret
or
jbe
cwtl
sub
sbb
and
int
outsb
xchg
popa
movsl
test
mov
xor
les
mov
push
popa
or
out
push
sbb
in
push
push
mov
add
cs
int
jne
out
mov
cmp
cltd
add
in
cmp
aas
xchg
jecxz
repz
jmp
inc
mov
xchg
insb
sub
fnstcw
lds
push
notb
dec
jmp
xor
aad
mov
xchg
cld
and
jno
outsl
xchg
in
push
cld
int3
out
es
mov
mov
pop
les
xor
dec
jns
in
dec
data16
pusha
fiadds
mov
inc
jae
sbb
in
testb
lret
in
mov
into
mov
movsb
jo
jecxz
inc
sbb
xchg
frstor
mov
ljmp
dec
xlat
in
mov
xor
int3
inc
imul
imul
sahf
lods
inc
cmp
jno
adc
push
movntq
out
jle
sub
sbb
sti
je
or
push
cmp
imul
imul
and
and
xchg
pop
sbb
xchg
inc
add
cmp
jg
cs
fisubrl
xor
repnz
test
xchg
inc
rorb
adc
xchg
xchg
pop
in
sbb
jnp
inc
fwait
jns
out
ja
sbb
dec
ret
jge
cmp
dec
jno
xlat
add
push
inc
sahf
cltd
and
inc
insb
call
pushf
mov
dec
push
imul
mov
fidivs
loope
inc
jo
jo
jmp
in
je
jo
mov
mov
cltd
pop
in
xchg
addr16
and
jbe
lret
movsl
cmp
ss
clc
cmp
loope
int
sbb
pop
aaa
cltd
jbe
mov
mov
inc
add
xchg
daa
ss
ja
dec
fists
sub
inc
jmp
cs
pop
hlt
mov
in
pop
cmc
rcll
mov
sub
and
fidivl
cmp
ficoms
cmp
inc
xor
insl
lahf
xchg
push
mov
mov
stc
pop
arpl
xchg
pop
dec
fbstp
movsb
dec
jnp
mov
ret
jae
mov
ret
mov
add
and
jmp
or
and
in
adc
in
sbb
imul
gs
xor
js
push
inc
sbb
pusha
je
push
jnp
sbb
xchg
xchg
lcall
push
xchg
lcall
pop
mov
lahf
mov
dec
inc
jg
push
pop
cmc
outsb
data16
repz
sub
xchg
mov
cwtl
push
jo
scas
loop
gs
xchg
push
bound
in
mov
imul
scas
push
or
xchg
shl
push
inc
xchg
cmp
inc
repnz
or
add
lock
push
repz
push
nop
jp
and
insl
mov
cmp
pop
repz
test
pop
xchg
mov
jne
inc
insb
push
jnp
pop
xor
cmp
fisttpl
out
aam
xchg
outsb
sbb
mov
jnp
inc
and
sbb
sar
popf
fmuls
int
pop
aad
fs
and
adc
mov
aaa
adcb
dec
sbb
inc
icebp
xchg
cmp
aas
lret
and
and
pop
shrb
adc
add
cwtl
aad
ds
xor
mov
cltd
test
ljmp
jmp
movsl
sbb
sub
aam
cmp
lods
add
fistpll
cs
cltd
aas
cs
mov
or
repz
int
jecxz
mov
cs
sub
xchg
stos
aas
mov
cmp
sbb
push
movsb
xchg
xor
cmc
outsl
xor
popa
pop
sub
call
out
fisubs
xchg
mov
lods
push
sbb
sahf
mov
decb
push
xchg
adc
lods
lods
test
nop
push
mov
ss
aaa
gs
pop
fsubrl
or
add
js
mov
inc
decl
gs
dec
subps
pop
jae
stos
ljmp
inc
mov
adc
outsb
mov
mov
js
mov
push
nop
popa
and
and
loop
cs
pop
pop
js
xor
add
es
push
xor
sbb
xchg
jmp
add
inc
mov
addl
dec
xor
test
mov
mov
sti
in
scas
flds
mov
jle
adc
sbb
ret
xor
push
test
ret
sti
popa
cmpsl
push
mov
mov
dec
dec
lods
xchg
clc
jns
xchg
aad
mov
dec
not
dec
mov
dec
mov
lods
xchg
cs
and
inc
inc
lods
repz
lea
popw
test
mov
es
push
daa
mov
mov
push
sub
pushf
mov
mov
scas
mov
xchg
cmpsb
sub
dec
cmp
stos
xlat
dec
pushf
js
or
jae
adc
shl
mov
sbbb
jmp
mov
loope
fmuls
rdmsr
pop
fsubr
shll
clc
pop
in
in
pop
sbb
jb
push
outsb
cmpsl
je
sbb
inc
dec
sbb
xor
shrl
paddw
push
inc
les
scas
or
fs
lock
dec
mov
adc
aas
lods
pushf
and
adc
outsl
orb
xchg
dec
jb
adc
hlt
mov
push
cmpsl
out
xor
test
dec
dec
xchg
mov
cld
cld
psubsb
cmpsb
or
pop
jne
inc
cs
mov
push
and
push
push
xor
mov
lret
jecxz
lods
lret
cmp
jl
sub
sbb
push
push
xchg
sub
in
cltd
push
cwtl
mov
jb
scas
add
das
iret
mov
dec
in
jae
mov
xchg
mov
rorb
ret
and
or
rcrl
jnp
mulb
subb
or
aas
scas
mov
lahf
push
test
sbb
sub
aad
mov
stos
shll
lahf
adc
jo
ljmp
push
fdivr
cld
or
in
scas
push
and
daa
pop
and
mov
in
mov
sub
or
jle
fsubrl
adc
ror
sti
xchg
pusha
lret
xchg
mov
and
test
mov
adc
xchg
aad
lret
stc
sbb
cli
mov
push
jnp
fsubrs
imul
xchg
mov
xchg
mov
imul
scas
and
and
fldcw
jns
lds
cmp
mov
into
cmp
ss
je
out
leave
or
dec
adc
sub
stos
outsl
mov
call
repnz
shrl
pusha
xchg
pop
inc
lods
add
inc
cmc
mov
push
std
xor
jp
jp
scas
insl
stos
in
dec
hlt
dec
fcmovne
addr16
aaa
jae
loopne
xor
addl
lret
cmpl
sbb
dec
jg
lahf
lock
jge,pt
dec
dec
shlb
mov
insb
lret
mov
mov
cmp
shll
xor
insl
iret
ja
push
or
push
rorb
inc
push
adcl
loopne
imul
jbe
dec
push
nop
decb
sbb
lret
push
fwait
sub
push
ss
push
push
in
pop
aaa
pop
jmp
jge
addr16
aam
cwtl
dec
je
mov
and
add
dec
or
adc
mov
pop
pop
mov
movsl
mov
xorl
adc
mov
lods
lock
inc
xor
repnz
jmp
lcall
loopne
shll
std
mov
fists
shrb
ds
sbb
scas
call
xor
push
ret
out
add
pop
xor
fwait
pusha
sbb
jecxz
mov
sbb
xchg
pop
mov
addr16
imul
add
shll
dec
jge
mov
and
push
xor
dec
incl
mov
movb
jbe
xor
cmpsl
xchg
push
xor
cmp
jl
and
sti
in
mov
stos
xor
jge
lret
es
xor
stos
xchg
fcomps
mov
add
dec
or
xchg
mov
test
cmp
arpl
sbb
enter
call
sub
cmp
repnz
adc
test
std
lods
push
lcall
lods
and
sub
mov
mov
leave
fwait
adc
inc
add
testl
cwtl
mov
cmpsl
jno
fsubp
lock
out
cs
sbb
int
out
mov
lcall
stc
adc
das
aad
sti
ret
lock
lods
lds
mov
push
clc
jae
decb
jl
adc
cwtl
mov
or
mov
gs
cmc
scas
add
add
je
addr16
stc
sbb
mov
mov
ljmp
or
sbb
es
sub
push
insl
push
pop
lods
mov
and
pop
mov
mov
lret
enter
mov
mov
sub
dec
ja
cmp
addl
pusha
lcall
cmp
rcrl
cmpsl
sub
push
insl
adc
push
push
mov
add
in
and
cmp
lea
cmp
sub
daa
sbb
pop
fwait
in
jae
cld
enter
fnsave
xchg
sbb
es
cmpsl
push
adc
rolb
add
push
aad
cs
sub
push
cmp
pop
loope
imulb
lock
mov
cmpb
cmp
dec
test
sub
inc
mov
repz
iret
xchg
pusha
mov
push
sub
mov
sbb
lds
or
out
cmp
ss
or
imulb
dec
or
sub
push
push
jno
stc
ror
mov
hlt
mov
mov
sub
push
jge
cmp
or
js
aaa
test
div
rcrl
sub
inc
mov
cmp
push
imull
mov
stos
add
and
push
les
add
cmpl
es
fcmove
mov
cmp
jne
jmp
xchg
sbb
push
xor
test
sahf
dec
scas
mul
mov
push
sub
adc
sbb
js
pop
jae
lret
aas
out
stos
mov
push
ja
mov
test
sub
add
dec
dec
mov
mov
add
fidivrl
mov
cmc
xor
cld
cld
aad
xchg
shlb
cmp
mov
insb
inc
popa
mov
lret
mov
xlat
es
movb
mov
jnp
pushl
cmpsl
movnti
mov
rclb
pop
in
jbe
and
fwait
xor
cmpb
fs
sub
lcall
and
cmc
adc
scas
cwtl
mov
popa
jp
sub
cmp
imul
push
mov
mov
cltd
jae
mov
bound
cli
add
push
mov
or
es
scas
fnsave
aam
aam
sub
jmpw
dec
stos
jle
leave
xor
push
xchg
mov
adc
imul
xor
mov
sbb
xchg
dec
cmp
fstpl
test
cmp
mov
or
jbe
addr16
jmp
cmp
dec
cmp
and
pop
add
inc
cmp
aaa
mov
movsb
push
int3
cmp
mov
cld
arpl
sbb
loope
mov
xchg
shrl
mov
rolb
cmp
cmp
or
and
cld
cli
in
fucomip
lock
scas
cmpl
dec
inc
ds
lock
test
add
add
cmp
push
jg
repnz
in
add
sbb
lcall
sub
sbb
cli
jnp
std
rclb
hlt
test
cmp
gs
push
in
fsubl
push
scas
data16
in
push
add
cmp
dec
mov
rcl
mov
cmp
cwtl
addr16
push
mov
loope
flds
loope
fcoml
fcomi
idivl
mov
in
test
dec
mov
xchg
cmp
je
aam
mov
xchg
pop
add
mov
sbb
es
mov
cli
pop
loop
xchg
mov
xchg
push
cmp
xchg
mov
jne
shl
cltd
and
fwait
bound
cmp
mov
jb
push
test
rcrl
int
mov
xchg
jmp
mov
jp
push
pop
aaa
out
movsb
and
inc
fisubrl
addl
repnz
mov
psubsw
mov
cmp
push
push
adc
scas
jecxz
mov
data16
in
jae
shlb
dec
mov
xor
push
xchg
daa
das
and
leave
sub
cmc
xchg
add
xchg
xlat
stos
xor
pop
in
jmp
pop
jno
pop
xchg
sbb
fwait
push
add
lock
rclb
mov
push
jg
push
xor
stc
fstl
divb
cmp
cmc
leave
stos
xchg
test
cmp
adc
jo
out
xor
push
push
push
and
mov
pop
cmovl
dec
add
idiv
in
fnsave
pop
cs
std
sub
jp
adc
push
sub
das
ret
dec
scas
fs
mov
int3
popf
loope
dec
push
fmuls
mov
push
out
sbb
mov
push
or
pusha
cmc
inc
adc
gs
pop
or
ja
ret
out
stos
add
mov
test
cmp
cmpsb
inc
xchg
mov
mov
cmp
insb
dec
loopne
aaa
repz
out
scas
sub
shlb
ljmp
enter
stc
dec
push
dec
mov
push
or
shrb
stos
rcr
inc
scas
outsb
out
xor
xchg
adcb
adc
mov
js
push
jmp
ret
dec
es
mov
addr16
sbb
lahf
jnp
in
lret
test
sub
ljmp
mov
repnz
sbb
pop
shlb
jns
pushf
and
out
mov
sbb
test
or
movsb
dec
cmpsb
xchg
mov
lahf
addr16
shll
push
add
and
mov
cmp
xchg
push
sti
cmp
xor
mov
arpl
stos
or
push
mov
cltd
jns
enter
repz
cmc
or
cmp
jns
and
adcb
sub
sahf
repnz
out
inc
pop
ret
jge
movsl
sahf
add
out
pop
push
popf
jle
cli
xor
dec
fisttps
add
mov
xor
mov
or
les
mov
loop
mov
sysenter
nop
fwait
sub
sub
andl
cmp
push
mov
dec
cmp
getsec
jbe
add
jp
call
adc
xchg
add
mov
out
in
repnz
stos
cmpl
sbb
inc
push
aas
sahf
mov
mov
out
ljmp
cmpsl
sahf
test
leave
incb
mov
adc
enter
divb
icebp
sbb
lds
mov
test
test
pop
sub
mov
out
dec
arpl
data16
pushl
adc
xor
mov
sbb
enter
aas
xor
movsb
fs
insb
dec
lock
pop
jle
fcmovnb
inc
pusha
cltd
dec
mov
push
mov
xor
jp
push
les
push
sub
push
jp
sahf
repnz
pop
mov
xor
and
cmp
pop
test
push
xor
out
in
cs
pusha
enter
shll
jae
outsl
pop
xorb
sti
dec
cmpsl
xchg
mov
or
and
outsl
ds
data16
into
xchg
ja
icebp
lock
xchg
jmp
mov
jbe
lods
inc
les
mov
adc
jb
sbb
shlb
or
sahf
insl
mov
nop
popa
movsl
xchg
insl
mov
mov
push
mov
mov
mov
mov
ret
or
insl
push
fcmovbe
inc
sub
push
std
xchg
mov
out
lods
pop
xchg
ret
lret
push
push
dec
imul
inc
hlt
pop
call
stc
push
jl
cmpsl
loop
xor
inc
lds
mov
push
adcb
roll
jp
push
lds
andb
repnz
out
imul
std
fsts
bound
mov
loope
cs
lea
push
popf
mov
adc
mov
push
sar
push
pcmpgtw
leave
imul
jne
das
imul
js
mov
xor
test
ljmp
sbb
clc
fsubrs
enter
pop
fisttpll
lret
fistps
xlat
rclb
in
lea
jo
test
dec
cltd
leave
lods
dec
add
cmp
xchg
inc
mov
push
xchg
pop
imul
lock
add
out
push
aas
mov
inc
ret
vpaddsb
adc
push
xchg
sub
js
rolb
jecxz
mov
xchg
push
les
or
adc
cmpb
add
pop
adc
xorl
and
sti
cmpsb
movsl
and
scas
push
sub
push
iret
lcall
dec
adc
repz
std
je
mov
dec
mov
sbb
xor
mov
mov
or
mov
mov
xor
test
pop
ja
sub
aam
imul
mov
shll
jns
ss
xchg
xlat
loop
add
mov
jb
add
fnstcw
mov
aaa
xchg
lods
out
mov
inc
sbb
lret
and
mov
push
les
and
lret
adc
jno
in
js
jo
cli
push
xchg
icebp
lret
lods
adc
out
sbb
outsb
xchg
mov
inc
add
mov
repnz
cs
sbb
inc
xchg
sub
sub
lret
cmp
pushf
jg
xor
jae
repz
dec
cltd
imul
push
inc
cmpsb
cli
mov
lcall
and
xchg
dec
mov
push
pop
xor
jecxz
ljmp
testb
out
push
cmp
lock
cmp
and
adc
cmp
ljmp
jnp
push
mov
lret
lret
ret
mov
jmp
xchg
and
inc
mov
sub
inc
sub
mov
inc
dec
out
movsl
mov
mov
std
ret
push
leave
jns
push
cltd
push
aaa
insb
in
or
pushf
push
sub
sub
pop
xchg
inc
sub
xchg
and
iret
cmpsb
dec
pop
pop
rol
mov
movsl
push
cwtl
cmpsl
or
mov
pop
in
pushf
cltd
jle
fsubs
in
in
out
sbb
cmc
fisubrs
clc
loope
addr16
or
dec
ljmp
pop
pop
insb
lret
in
rolb
int3
cs
outsl
adc
xlat
mov
add
mov
mov
push
cmpsb
popa
xlat
dec
addl
fcomps
rcrb
arpl
ret
andb
out
andb
dec
sub
push
fildl
repz
das
rorl
js
jno
stos
aad
lds
add
ss
xchg
or
jge
cmc
das
pop
fidivrs
loopne
inc
lcall
orb
pop
inc
mov
shrb
jns
xlat
mov
ficompl
xchg
jp
inc
push
dec
dec
add
sub
mov
cs
mov
pushf
mov
mov
xor
sub
fsubrs
pusha
xchg
mov
andb
inc
sbb
mov
mov
mov
or
jnp
leave
mov
pop
dec
lock
push
push
mov
xchg
cmp
xchg
add
jg
leave
data16
nopl
adc
cmc
mov
lea
xchg
adc
mov
mov
sub
jae
cmc
jle
mov
jle
adc
shl
push
xchg
leave
insl
daa
add
ror
mov
out
mov
pushl
iret
pusha
xor
stc
jo
sarb
leave
mov
test
cmp
xor
xor
cmp
loop
jmp
out
mov
mov
pmaddwd
and
sub
adc
adc
xchg
xchg
stos
adc
mov
xchg
test
lods
cmpsb
dec
and
lret
enter
test
push
pop
push
pop
fdivrs
fiaddl
and
ss
ljmp
shlb
sub
pusha
in
sbb
sbb
fcoml
xor
mov
aad
sarl
mov
negb
cld
loopne
jge
dec
pop
sahf
mov
test
ret
pop
pop
sbb
shr
outsl
mov
call
dec
add
sub
inc
adc
jae
std
mov
jg
repnz
mov
mov
sahf
decl
pop
cmp
pop
mov
pop
push
js
or
call
pusha
and
dec
arpl
pushf
mov
jb
ljmp
mov
and
xlat
rcrl
jo
ja
adc
adc
ja
daa
pop
scas
mov
pop
inc
in
xchg
pop
bnd
sub
mov
or
ss
or
in
adc
inc
cmp
ljmp
lcall
jne
aaa
movsl
push
loopne
lock
sub
icebp
outsl
mov
jno
das
ftst
loope
divl
cld
nop
or
inc
popf
lcall
or
push
mov
arpl
cld
imul
adc
scas
in
pop
push
pop
out
scas
jge
pop
lret
and
sarl
fidivrs
inc
jg
decb
xchg
mov
inc
test
out
stos
lea
shlb
cs
and
adcl
dec
jns
mov
jnp
fwait
sub
icebp
bnd
and
cwtl
mov
push
dec
add
loope
outsl
sbb
mov
xlat
add
and
push
mov
fdivs
push
in
jge
cmpsl
ret
rclb
dec
push
mov
aas
js
test
dec
jle
ret
lods
pushf
lcall
loopne
lods
mov
adcl
xor
mov
jg
and
adc
shlb
lods
mov
sub
icebp
add
mov
jmp
dec
leave
jl
popa
and
call
mov
mov
and
sub
mov
dec
adc
cmpsb
aaa
adc
inc
mov
leave
dec
in
dec
jnp
mov
or
fdivl
cli
sbb
repz
dec
fdivs
lret
sub
pop
and
in
gs
xchg
xor
addl
cmp
xchg
sub
in
sbb
pop
pop
adc
dec
bound
cmpsl
mov
jb
or
je
pop
push
lahf
hlt
pusha
lock
sub
pop
out
inc
pop
in
mov
aas
aaa
add
xchg
mov
aam
lahf
inc
jns
repz
inc
js
or
mov
syscall
xlat
xchg
mov
inc
pop
jl
jl
test
arpl
sbb
jge
into
sbb
imulb
out
dec
int3
mov
dec
pushf
idiv
jmp
xlat
in
pop
shrl
add
icebp
dec
fs
or
aas
mov
lahf
mov
jae
push
flds
add
lea
push
sti
inc
and
les
pop
mull
adc
fwait
and
incl
push
stc
xchg
insb
push
inc
mov
add
or
add
mov
popf
int
out
xlat
cld
aaa
out
sahf
push
mov
cmpsl
stos
add
faddl
adc
sub
pop
les
push
and
xchg
sbb
pop
jg
rorb
pop
pop
mov
bound
adc
stos
add
mov
lret
sbb
and
insb
xchg
fdivrl
pop
add
popf
clc
xchg
adcb
sub
das
inc
loope
xchg
adc
dec
leave
out
es
ret
dec
sub
popf
xchg
adc
sub
push
aas
scas
cmp
sub
mov
xchg
lret
aam
push
inc
shrl
loope
pop
xor
push
adc
xchg
scas
jg
in
mov
push
fs
push
jb
xor
push
adc
cmpsl
sbb
pop
fildll
push
pop
xor
popa
fsubl
movsl
cmp
rcrl
ret
inc
jnp
div
cmp
inc
mov
data16
ror
cwtl
es
pop
jg
das
or
push
cmp
out
filds
mov
out
cmp
mov
mov
loop
hlt
add
bound
clc
test
out
ds
mov
jb
or
stc
cld
mov
push
push
mov
in
and
cld
cltd
fstpt
popf
addr16
jecxz
cmpsb
enter
and
ret
sub
dec
inc
jg
icebp
movsb
lahf
dec
cmpsb
pop
lret
xchg
jnp
xor
cmpsb
sub
sub
and
test
les
sbb
test
popa
mov
mov
mov
and
aas
repz
mov
movsb
mov
jp
sbb
push
or
sbb
shrl
frstor
mov
sub
xor
lahf
shr
fistpll
lock
cmc
sub
icebp
and
or
sub
rorb
sarl
out
inc
cmpsb
and
jecxz
and
adcl
in
pop
pop
stc
imul
aaa
fstpt
cmp
mov
or
push
fsubl
cli
jb
cwtl
cmp
adc
xor
or
add
sub
inc
push
out
dec
sub
cli
add
mov
sbb
insb
sbb
mov
pop
shlb
mov
xlat
inc
jnp
ljmp
jbe
into
stos
jle
pop
inc
jl
sbb
dec
outsl
mov
inc
xor
cmpsb
pop
jnp
adcb
incl
xchg
or
fwait
and
int3
sahf
gs
jmp
ret
filds
aad
dec
xor
xchg
mov
push
push
or
fldl
shlb
mov
shlb
jp
push
mov
mov
and
in
add
out
adc
push
mov
out
or
xorl
fnstsw
addr16
ljmp
loope
fidivs
mov
je
daa
outsl
gs
in
mov
test
jne
test
fstpt
popf
xchg
sub
adc
push
fisubrs
sub
gs
cmpsl
mov
add
cwtl
adc
dec
jmp
shr
int
sbb
enter
test
cmp
mov
mov
push
mov
imul
xchg
sar
xor
pop
inc
lock
jne
fstpl
xchg
lea
inc
pop
adc
loop
and
rcr
movsl
adc
add
out
mov
and
hlt
jp
int
cmp
icebp
xchg
cmp
add
icebp
mov
psubsb
sub
pop
mov
fisttpl
test
dec
push
int
std
incb
sbb
insl
and
ret
push
inc
jbe
xchg
xor
leave
or
pusha
mov
mov
fldl
mov
jb
push
int3
fadd
lods
mov
test
push
mov
iret
mov
sub
and
ds
iret
dec
scas
mov
int
mov
jo
xchg
pop
push
repnz
cmp
mov
jmp
or
mov
xor
push
dec
add
lea
xor
and
scas
shlb
bound
lds
mov
leave
test
mov
cmp
inc
sbb
movsb
push
cmc
cmp
push
popa
sbb
stos
or
sub
subl
mov
sub
push
in
xor
lret
pop
inc
dec
jbe
jle
or
lds
xchg
sti
jmp
pop
test
lods
out
pop
lds
sarb
test
mov
mov
fcoml
pop
mov
je
test
mov
xchg
cwtl
xchg
inc
sahf
cli
pop
stos
push
adc
jle
ficoms
xchg
fsts
add
xchg
pusha
shll
sbb
js
mov
into
or
addr16
push
data16
inc
mov
or
mov
or
adc
push
call
or
add
or
xchg
add
jle
jp
lods
jp
xor
ret
push
or
sbb
inc
cmpsb
je
pushf
xor
lods
jne
dec
jl
xchg
cmp
ss
dec
and
xchg
push
dec
sub
push
add
icebp
adc
mov
scas
mov
adc
std
xor
xchg
lods
mov
jne
icebp
inc
loopne
iret
jmp
movsl
icebp
jb
sbb
rcrb
paddusw
scas
lret
push
dec
sub
fcoms
mov
stos
sbb
dec
test
dec
dec
sub
test
mov
adc
out
arpl
out
pushf
xchg
inc
push
stc
mov
pop
lret
in
or
mov
fsubl
fst
aas
ret
cwtl
lock
pop
sub
fs
stos
jnp
push
inc
xchg
mov
xchg
push
bswap
jae
push
push
add
imulb
xor
loope
stos
lock
cmpsl
mov
mov
rcrl
dec
icebp
adc
add
test
mov
sbb
adc
out
cmp
mov
aas
push
jle
mov
mov
mov
into
sub
lret
adc
mov
inc
ljmp
ljmp
test
lds
std
scas
aam
ret
push
inc
mov
stos
out
or
out
jmp
xor
add
add
daa
xlat
xchg
jp
clc
jae
add
cld
push
dec
mov
pop
insl
sub
and
jmp
shlb
js
inc
bnd
lock
in
pop
jle
xor
add
inc
or
loopne
repz
outsl
xchg
jbe
dec
in
adc
stc
xchg
jp
mov
lret
adc
int
out
pop
imul
icebp
orb
xor
pop
nop
in
push
xchg
inc
mov
loope
jle
mov
stos
sbb
mov
addr16
mov
data16
or
rol
test
in
dec
mov
mov
cli
pop
int
sub
sbb
mov
xor
mov
in
sub
xchg
pushf
repz
xlat
icebp
cwtl
sub
popa
push
mov
pop
shll
pop
fistpl
aaa
sub
pop
inc
adc
add
adc
scas
fidivs
lds
push
pop
or
addr16
mov
sub
push
lret
in
sub
daa
sub
cwtl
mov
lods
rcll
imul
leave
iret
sbb
push
push
fdivl
add
pusha
cmp
cmp
jae
out
xchg
and
outsb
adc
inc
mov
stos
subl
inc
jle
mov
lea
std
add
pusha
lahf
mov
fisubl
pop
mov
enter
jge
insb
push
pop
xchg
push
pop
xchg
iret
pop
pushf
and
adc
lods
insb
jae
pop
lods
hlt
jne
adc
sbb
bound
dec
cld
cmp
jns
pop
movsb
sub
inc
adc
push
jno
fildll
pushf
lcall
xlat
and
nop
pop
ja
adc
pop
sahf
mov
mov
and
cli
sbb
scas
push
jns
lcall
inc
mov
stc
add
fs
xchg
add
pop
cltd
loopne
cmp
fsubrp
add
data16
push
fsubp
pop
push
push
imul
jbe
mov
daa
leave
sub
jecxz
call
nop
pop
dec
addr16
das
in
in
je
jle
mov
rorl
cmp
aad
pop
or
movsb
out
cwtl
pop
lahf
fistl
sahf
mov
pushf
pop
add
xor
sub
aam
inc
aas
xor
or
or
arpl
test
cmp
out
dec
jns
icebp
jbe
dec
mov
imulb
xorb
mov
into
seta
jg
cmp
inc
nop
mov
xor
xchg
fidivl
in
xchg
insb
jecxz
lcall
xor
aas
and
mov
inc
shrl
ss
or
dec
incl
cmp
push
adc
push
fidivrl
pop
pop
mov
into
jecxz
scas
cli
dec
dec
mov
xor
xlat
fcomp
push
add
cmp
and
arpl
data16
add
mov
or
adc
inc
fwait
xor
pop
cld
cltd
xchg
rolb
shl
xor
xchg
dec
repz
mov
xlat
dec
or
nop
fs
popf
jp
or
loop
jne
sub
sbb
out
mov
mov
sar
sahf
sbb
pop
cld
cli
lcall
xchg
pop
les
dec
int
int
int3
or
jl
fdivrs
lcall
fisttpl
in
adc
ljmp
pop
clc
add
shrb
xchg
lret
cmp
cmp
movsl
aam
jg
pushf
outsb
shll
push
adc
leave
mov
shrl
jo
pop
cmp
adc
mov
xor
sub
std
cs
arpl
sarb
lea
cld
daa
stc
test
jbe
idivl
loopne
popf
or
pop
mov
pushf
adc
cmpb
lods
cmp
enter
mov
jo
mov
push
cmp
incb
lcall
lahf
iret
nop
shlb
outsl
sub
jl
cltd
fwait
adc
lea
dec
jecxz
and
or
pop
int3
pop
mov
insb
daa
sti
mov
xor
sbb
in
push
lods
push
mov
pop
xchg
in
and
mov
push
seto
or
xchg
out
arpl
shlb
jns
xchg
data16
sub
push
aaa
jge
insb
mov
test
sbbb
insb
mov
nop
adc
mov
cmp
jmp
in
xorl
sbb
pop
adc
es
scas
mov
loope
pop
cmp
sbbb
mov
jecxz
mov
shrl
jo
xor
sbbl
insl
jne
fdivl
dec
cmp
inc
scas
mov
popa
fisttps
mov
lods
in
loopne
jecxz
in
repz
cld
out
push
xor
jp
pop
ret
cs
shlb
insl
cli
int3
add
or
pop
xor
jns
jge
xor
nop
mov
out
daa
inc
dec
nop
push
push
mov
into
cltd
jnp
jecxz
or
push
insl
inc
inc
fldenv
sub
popa
xor
pop
mov
loop
push
jl
dec
outsl
enter
mov
lret
push
dec
roll
mov
dec
fwait
xor
cmp
stos
add
loope
jnp
sub
add
stos
pop
mov
gs
pop
cmp
cld
inc
mov
sub
adc
fiaddl
pop
in
cmp
repnz
xor
xchg
pop
push
dec
or
sbb
mov
mov
xchg
xlat
movlps
addl
lahf
out
ret
jb
repz
sbb
mov
insb
fiadds
push
inc
xor
add
cs
xchg
dec
stos
fwait
les
addr16
sbb
lret
call
mov
mov
xor
mov
fisubs
or
ret
nop
mov
push
popa
xchg
leave
std
or
or
mov
andl
outsb
jnp
test
inc
fwait
xlat
lods
sub
and
mov
mov
xor
mov
mov
insb
mov
pop
inc
andb
inc
sbb
inc
sti
mov
cld
and
dec
orl
cmp
add
div
xor
jg
mov
mov
bound
or
jne
push
repnz
ret
incl
ds
adc
sbb
test
pushf
jnp
push
test
adc
das
add
push
not
incl
enter
sarl
xchg
jae
gs
inc
dec
push
mov
ret
sarl
pop
shlb
pop
push
mov
mulb
and
test
lods
jle
push
mov
inc
xor
icebp
shlb
or
inc
fmull
jg
subl
mov
and
pusha
nop
pop
pop
pop
iret
fs
and
sbb
nop
ds
orl
add
xor
je
mov
mov
insb
and
nop
sub
and
into
cmc
repnz
inc
adc
inc
test
call
inc
jne
jp
fcmovne
jmp
loope
jbe
mov
test
adc
jmp
lods
leave
adc
loop
jecxz
xchg
push
or
cs
popa
sbb
pop
jo
arpl
pop
shrb
inc
and
addr16
fstl
test
jnp
cmp
xor
pop
dec
out
fst
lahf
rol
push
mov
ret
adc
add
fwait
test
leave
fnstenv
sbb
pop
xor
dec
into
push
add
inc
insl
dec
or
add
ljmp
cmp
imul
dec
and
cwtl
or
sbb
cmp
outsb
or
sbb
mov
hlt
xchg
lahf
insb
call
push
adc
andl
imul
inc
mov
cmpsb
add
cwtl
or
in
in
and
cld
push
mov
js
arpl
and
jecxz
orl
sbb
mov
xor
xchg
int
jp
add
xor
add
add
and
out
icebp
dec
jbe
push
imul
jne
mov
dec
push
arpl
inc
bound
ret
call
and
outsl
or
mov
je
jge
fwait
cmp
imul
outsl
rcll
js
cmp
sahf
mov
xor
push
xlat
pop
pushf
ljmp
fs
adc
mov
cmp
pop
adc
sub
adc
int
ret
pop
xor
std
mov
cld
and
lcall
and
xchg
and
push
xor
xor
out
dec
sbb
cld
andl
mov
daa
cmpsb
pusha
aad
ja
iret
call
push
insl
test
roll
dec
fucomp
and
jmp
insb
jb
cmp
sub
pop
sbb
cmp
dec
pop
pusha
adc
stos
aas
mov
inc
inc
push
enter
adc
cmp
cli
dec
adc
mulb
lea
jno
mov
and
aas
cld
xchg
xchg
or
ja
sbb
lahf
cmpsb
adc
scas
or
cmpsb
cli
inc
sub
fmull
shll
and
inc
or
or
outsl
mov
ret
jb
mov
fstps
sbbb
inc
pushf
inc
or
inc
push
mov
xor
add
enter
push
or
aas
inc
mov
daa
or
pop
adc
test
sbb
push
xorl
ljmp
add
sbb
in
ja
lods
push
mov
int3
repz
notl
inc
int
mov
jns
inc
mov
lds
xor
or
add
cli
push
sub
inc
add
or
stc
and
call
jae
xchg
scas
pop
and
in
mov
push
inc
sbb
or
dec
out
fs
dec
lods
out
loope
cwtl
std
and
jecxz,pt
xchg
sbb
stos
icebp
xchg
lods
das
mov
mov
and
add
daa
in
ret
add
xor
scas
mov
repz
mov
pusha
pop
inc
jo
inc
push
ss
into
or
lock
fcomi
rcll
cli
xchg
test
cs
lods
js
xchg
faddl
xchg
repnz
outsl
nop
pop
pop
cmp
stc
inc
in
cmp
xchg
inc
push
push
aad
mov
ljmp
adc
push
or
aas
cs
adc
jmp
stos
mov
or
jbe
mov
sbb
and
das
in
cmp
sbb
into
xchg
dec
push
cmp
orb
fwait
xor
sbb
lods
jb
or
enter
pop
push
pushf
out
in
stos
xchg
jl
mov
xor
or
mov
jnp
ja
sub
cmc
cld
jnp
jl
fdivs
aas
push
mov
xchg
dec
stc
adc
or
dec
xor
aaa
sub
adc
cli
cs
inc
loop
xor
jp
pop
stc
push
adc
notl
hlt
pusha
or
lahf
cltd
addr16
in
lds
jb
ds
into
sub
subl
fldenv
jp
ret
stos
mov
inc
mov
jb
sub
inc
sti
pushf
mov
stos
daa
pushf
pop
dec
cmpsl
test
and
pop
lret
mov
mov
or
or
stos
aad
lods
test
jmp
xchg
je
sbb
int
cmpl
xchg
leave
pop
pop
mov
jp
mov
xchg
dec
push
mov
pop
push
iret
xchg
adc
mov
mov
movsb
mov
ja
xchg
dec
leave
jle
rcr
jg
pop
or
adc
add
bound
js
xor
sti
ljmp
je
dec
shll
lock
out
aaa
xor
pop
and
xlat
mov
fimuls
ljmp
mov
clc
inc
pop
jge
xor
in
clc
loop
xor
out
and
daa
adc
push
in
imul
mov
dec
xor
mov
jns
jb
test
jle
mov
push
outsl
mov
repz
mov
inc
fcos
jp
divb
lret
sarl
daa
push
out
dec
push
mov
cwtl
jb
ja
and
in
imul
push
dec
rclb
shl
insb
repz
mov
jb
fdiv
add
je
jae
xchg
adc
jnp
out
jne
arpl
add
fistl
jnp
dec
adc
inc
sub
hlt
push
js
mov
fdivp
mov
loop
in
pop
jp
sbb
jb
imul
test
mov
dec
stc
sbb
imul
sbb
jmp
jno
xchg
sbb
aam
js
out
sub
aam
ds
movsb
loopne
pop
cmc
pop
cmp
jnp
pop
push
scas
out
push
aam
fisubs
dec
lret
jb
fs
xchg
push
std
aam
jnp
les
xor
into
ja,pt
lret
inc
mov
mov
or
fwait
adc
fadd
jae
adc
in
mov
mov
mov
ret
nop
cmp
pop
xor
cmp
add
adc
pop
aam
pop
push
outsb
push
mov
or
popa
xor
movb
scas
dec
insw
cwtl
mov
fs
or
xorb
sbb
or
les
push
push
push
xor
mov
loop
call
mov
xor
stos
sub
cmp
testl
jno
inc
imul
setbe
and
sub
decl
mov
cli
or
sub
rolb
mov
jb
mov
and
inc
jo
lock
pop
sahf
cmpsb
push
mov
dec
daa
xor
notl
push
lahf
dec
jne
into
xchg
xchg
out
shrb
jne
jnp
das
rolb
add
shrl
ja
sbb
fnsave
ja
pop
xchg
gs
lcall
ljmp
sbb
out
sbb
ja
lahf
mov
mov
ficoml
mov
push
mov
int
jns
or
lds
push
xlat
cmp
fcmovu
test
mov
jns
in
inc
xor
sbb
xor
aaa
cmc
cmpsb
inc
fnstenv
ss
stos
sbb
xchg
in
mov
xchg
inc
jecxz
mov
cmp
cmp
push
pusha
pop
fsubrl
jno
sub
fistps
sbb
push
cmp
push
sub
rorl
popa
xor
sarl
mov
popf
jnp
push
and
or
mov
pop
out
cwtl
and
ss
jl
push
fisttpll
lods
cmp
hlt
rcll
cmp
iret
ljmp
daa
pop
mov
imul
test
enter
test
mov
and
xchg
mov
xor
andl
dec
roll
cli
cli
mov
mov
ret
fnstenv
ss
jno
stc
aad
add
lock
mov
lcall
mov
adc
or
into
push
popa
in
jo
mov
pop
and
outsb
aad
daa
repz
sub
inc
shlb
dec
cmp
jl
pop
adc
outsb
and
mov
stos
std
inc
xchg
repnz
inc
pop
lahf
push
adc
jp
cmp
inc
xchg
fwait
std
call
cmp
scas
shrl
mov
fs
pop
xchg
stc
jb
xor
cwtl
mov
insb
dec
rcrb
gs
mov
sbb
scas
adc
nop
mov
aas
ret
daa
js
jmp
mov
inc
mov
lret
loopne
mov
loope
adc
xor
lds
clc
ja
icebp
jne
lcall
push
push
es
ds
xchg
push
xchg
push
mov
jl,pn
fstps
inc
into
jge
xor
push
sarl
or
movsl
add
inc
pop
xor
cmpsl
test
lahf
add
mov
push
mov
cmp
shlb
pop
pslld
in
or
fldl
lahf
mov
adc
mov
mov
int3
mov
js
push
scas
cmp
shr
call
imul
adc
enter
outsl
push
pop
mov
mov
adc
aad
add
mov
inc
xchg
adc
xlat
jge
lds
testb
ljmp
xchg
or
xchg
push
push
imul
pop
popf
int
lret
aam
mov
cmp
pop
mov
aad
daa
pop
pop
fisubrl
mov
fnstenv
push
lock
mov
sbb
inc
dec
jbe
lods
xor
dec
xchg
pause
mov
ss
ds
inc
out
mov
jg
mov
dec
cltd
bswap
cmp
pop
push
and
mov
xor
xchg
mov
add
dec
jle
or
lret
ljmp
pop
lahf
mov
cmp
mov
jg
mov
xchg
fwait
pop
jp
cltd
loop
pop
inc
mov
test
and
outsl
pop
test
and
addr16
mov
cld
std
call
add
test
movsl
mov
in
sub
pavgb
xchg
inc
jl
inc
jns
mov
shlb
clc
mov
stos
xor
movsl
adc
mov
add
xchg
int3
inc
test
push
mov
push
jmp
add
push
push
stc
jg
sahf
dec
pop
and
xchg
nop
push
mov
addr16
ljmp
mov
pop
testl
jecxz
mov
push
test
jge
mov
outsl
insb
jle
or
pop
inc
sbb
mov
jl
test
roll
mov
dec
push
nop
cmp
std
sbbl
cmp
xchg
repz
xchg
xchg
sbb
ret
andl
adc
stos
cmp
cmp
dec
aam
cmp
xor
xchg
cmp
loopne
repz
ret
jp
lret
je
addr16
lret
mov
cmp
test
jns
iret
push
repz
mov
mov
dec
mov
andl
testw
cmpsb
out
pop
mov
addr16
lods
orb
push
pop
dec
shlb
aas
jge
and
mov
int3
movsl
sbb
les
fistpl
or
adc
push
pop
or
sub
push
push
call
or
xchg
lret
push
imul
loop
mov
cmc
mov
sub
aam
cltd
sub
mov
add
rcr
jnp
push
outsb
mov
or
es
adc
scas
push
int3
fcmovb
mov
dec
sbb
jbe
pushf
out
or
push
icebp
and
pop
push
out
xchg
hlt
mov
aad
icebp
mov
sbb
hlt
insl
or
push
rclb
pop
test
repz
adc
orl
cli
cmpsl
adcb
loop
add
jmp
mov
out
mov
mov
mov
lds
dec
inc
fildl
dec
adc
pop
sub
ret
mov
push
movsl
aad
push
mov
fwait
mov
js
inc
insb
inc
add
out
inc
ret
sti
mov
fidivs
inc
movsl
push
int
add
mov
jb
popf
jg
pop
iret
push
iret
mov
xor
lcall
xchg
loope
icebp
jge
sub
fadds
or
fs
lret
cwtl
push
test
sub
and
roll
sbb
push
and
cli
xor
outsb
jg
outsl
add
push
xor
aad
lahf
cmpsb
cmp
mov
arpl
xor
out
in
xor
lret
inc
pop
and
pop
mov
push
xor
or
ret
jo
xchg
scas
std
aas
sub
lcall
mov
loopne
in
andl
fstpl
mov
enter
push
xchg
insb
outsl
xchg
mov
push
imul
jmp
inc
jbe
movsb
loopne
loopne
xorb
call
jle
jle
loope
inc
sub
mov
add
aad
and
push
std
lahf
stos
ljmp
in
arpl
pop
popl
cmp
loopne
inc
scas
addb
pushf
aas
dec
jp
stc
cmc
rcrl
out
aam
jno
frstor
dec
ffreep
inc
jecxz
movsl
and
popf
sarl
imul
xor
adc
adc
ljmp
arpl
pop
cmp
add
in
sub
inc
sub
testl
rorb
out
stos
jmp
outsb
jge
mov
icebp
hlt
int3
scas
xchg
dec
push
push
pop
mov
repnz
mov
xchg
pop
pop
push
mov
int3
inc
fwait
clc
scas
jl
pop
xchg
loopne
fldt
int
lret
xchg
insb
lds
fcoml
or
mov
add
scas
imul
je
dec
mov
add
xchg
sbb
std
push
push
fdivl
and
pop
movsl
push
xchg
mov
adc
inc
push
sub
out
arpl
jp
xor
hlt
sarb
idivl
jne
mov
aaa
sbb
popf
setae
cwtl
mov
loop
aad
add
arpl
push
in
add
call
gs
aas
dec
add
pop
test
stos
cmp
xchg
sbb
mov
and
mov
sub
flds
add
sbb
jp
add
or
and
sbb
loope
xorb
xchg
mov
mov
or
imul
lods
push
jle
push
xchg
cmp
in
cmp
mov
push
cld
or
bound
lret
in
mov
fsub
or
cmpsb
in
imul
mov
das
sarb
mov
test
roll
mov
int
mov
enter
ds
mov
mov
outsl
pushf
jo
int
mov
insl
rclb
fsubs
fs
add
dec
lods
shlb
negl
sbb
in
jnp
sbb
sbb
gs
lods
mov
imul
sti
leave
push
cli
mov
jne
add
jmp
stos
shrb
pop
mov
add
out
jl
xchg
jl
or
pushf
push
jecxz
cmp
daa
icebp
test
sbb
sbb
or
lret
popa
dec
mov
cmp
addr16
add
lods
push
push
or
clc
je
shll
ret
mov
mov
cwtl
aas
fsub
cmp
in
or
cwtl
inc
jno
and
int
pop
xor
ds
jmp
push
in
xor
cmpsb
or
ret
loope
adc
mov
test
mov
mov
mov
adc
cmp
mov
mov
mov
fcmovnb
lret
in
inc
jecxz
loope
ror
movsl
shlb
inc
sti
fsts
sub
fsts
xor
sbbb
or
cmc
mov
arpl
xor
iret
arpl
mov
dec
mov
sub
dec
sub
xor
sbb
daa
fidivrs
subl
jp
jns
outsl
cltd
sub
test
repz
mov
mov
test
out
inc
push
or
sbb
ss
or
mov
js
in
movsl
inc
jno
adcl
notb
cltd
xor
inc
pop
or
mov
cli
pop
into
loop
cwtl
mov
jbe
in
sar
loope
dec
xor
push
fimull
test
scas
lods
adc
mov
mov
ljmp
jo
cmp
inc
mov
imul
insl
sub
xchg
insl
out
mov
jp
jno
imull
pop
js
jnp
fwait
movsl
cmp
jl
sub
inc
sub
imul
pop
inc
hlt
loopne
rcrb
cmp
jns
dec
jge
fidivrs
inc
iret
xchg
cmp
add
dec
ret
xor
mov
inc
mov
add
xor
fcompl
stos
adcl
jmp
adc
sub
cwtl
ljmp
xor
add
sbb
mov
movsb
push
push
push
lock
inc
in
ret
add
sarb
fsubs
or
jmp
and
ljmp
add
insb
dec
mov
in
cwtl
cli
fistpl
jle
cli
rcll
or
or
and
push
push
je
jb
and
test
pop
ja
cmpsl
sbb
and
shll
and
mov
adc
fdivrs
cmp
push
lret
fidivrl
jg
js
out
out
inc
xor
pop
repz
and
out
adc
sbb
movsb
jo
ljmp
push
inc
inc
clc
xor
add
push
stc
pop
pop
imul
aam
dec
fs
clc
lret
cld
dec
fidivs
dec
test
pop
push
sbb
enter
cmpsl
lods
imul
mov
insl
sbb
pop
fstl
inc
into
mov
aam
xlat
sub
clc
out
push
dec
imul
fs
adc
cli
or
sub
cmp
jne
pop
in
add
adc
inc
enter
das
xchg
aaa
add
mov
dec
lods
sbb
sub
fcompl
jge
testl
cwtl
add
and
std
nop
sahf
xorb
inc
pop
mov
mov
decl
mov
inc
fs
or
aaa
sub
lahf
leave
or
shl
and
add
or
movsb
push
stc
push
inc
or
cmp
inc
or
adc
jl
shrb
pop
or
pushf
add
mov
dec
test
js
fwait
stos
and
andb
adc
lahf
cmp
jge
aas
cmp
test
jmp
cmp
rclb
leave
xchg
negl
cmp
das
sahf
filds
popa
dec
scas
rclb
aaa
roll
movsb
xchg
jne
xchg
test
sub
jo
xchg
cli
jb
dec
dec
scas
shll
sbb
xchg
inc
mov
pop
xchg
or
int3
add
pop
dec
xchg
add
jnp
cmp
fldl
and
jmp
in
call
hlt
or
cmpsl
jge
mov
add
or
cmp
and
cmp
push
jp
pop
cmp
mov
push
aam
jae
xchg
push
ljmp
ss
inc
mov
mov
push
fcoms
inc
subl
vmovsd
adc
sti
sbb
testl
mov
sbb
inc
hlt
mov
sub
scas
push
sbb
add
fisttpll
pop
xchg
dec
push
jmp
loop
xor
mov
out
push
pop
xor
loopne
cli
xchg
pop
sahf
mov
fistps
bound
adc
in
rclb
pop
sub
stos
xchg
stos
into
test
add
pop
cmp
or
pop
jecxz
ljmp
ss
insl
test
daa
mov
or
sti
lret
aad
roll
mov
push
push
xor
and
pop
nop
or
mov
mov
rolb
jmp
lds
mov
jg
lods
sbb
xor
lret
loope
aad
gs
andl
loop
push
cmp
cmc
faddl
daa
jae
xor
push
mov
lret
jno
xlat
test
movsl
cs
lret
push
dec
mov
into
bound
mov
movsb
iret
cltd
pop
fnstcw
cld
fiadds
test
or
test
push
arpl
rolb
and
ficompl
mov
lds
and
aam
xor
loope
out
cmp
xchg
ljmp
arpl
cmp
xor
sti
mov
shl
jbe
sbb
xchg
mov
cmp
and
dec
icebp
pop
mov
adc
cmpsb
push
xchg
jns
repz
icebp
in
test
mov
popa
push
es
test
and
insb
stc
icebp
sub
sub
cli
push
and
jns
adc
xor
push
clc
jecxz
xlat
cmp
mov
inc
sti
sbb
dec
faddl
ret
jns
mov
inc
sub
jb
aad
je
sbb
and
mov
sub
into
pop
ror
cwtl
xchg
sahf
adc
inc
cwtl
cmc
pop
sbb
adc
sahf
test
pop
mov
add
sti
das
outsb
mov
movsl
cltd
mov
out
mov
loope
add
aad
push
push
xchg
pop
and
pop
test
shll
mov
inc
xchg
hlt
cltd
add
lds
pop
cwtl
mov
outsb
mov
mov
loope
in
adc
push
movsb
mov
adc
or
inc
cmc
shr
movsl
mov
sbb
xchg
push
jbe
je
leave
cwtl
xlat
adc
jb
dec
xorb
add
sub
iret
or
out
dec
inc
mov
rolb
adc
adc
jg
enter
iret
adc
xchg
dec
les
jl
push
push
push
dec
mov
push
jb
adc
arpl
cwtl
jns
out
inc
add
test
jae
inc
ret
lods
cmp
out
push
mov
lock
xchg
mov
dec
cmp
sbb
lds
jns
stos
dec
adc
rep
add
fs
jo
fs
xor
sbb
ljmp
pop
test
mov
and
divl
xchg
lea
in
sarb
stos
movsb
sub
mov
in
insl
mov
movq
sti
dec
in
pop
or
leave
mov
rcl
cmp
fnstsw
mov
out
lret
mov
mov
in
adc
xor
adc
pop
mov
dec
fcompl
rcl
loope
fs
or
scas
mov
in
test
mov
lahf
popa
cmc
shrb
cmpsl
icebp
and
add
jne
and
inc
mov
mov
ret
push
pop
out
mov
xchg
pop
xor
mov
out
ret
add
mov
aaa
cmp
push
cmp
outsl
into
ss
xchg
movsl
inc
hlt
or
mov
push
lret
les
xchg
test
rorl
out
loopne
cmpl
and
mov
pop
xchg
dec
lods
clc
iret
push
pop
ljmp
shrb
mov
mov
in
vmfunc
mov
les
stc
in
lret
rcll
out
xchg
lahf
mov
mov
aad
cmpsl
incl
lret
pop
lods
dec
sbb
pop
clc
cmpsb
jno
call
push
cwtl
cmp
mov
cmp
cmp
rorl
decl
push
sub
test
cmp
decl
idivl
fdivrs
pushf
push
mov
fistpl
xchg
sbb
rolb
cmp
jne
enter
js
fisubrl
dec
inc
pushf
popf
mov
adc
lcall
dec
mov
sbb
test
jecxz
jge
cmpsl
cltd
xchg
and
imul
stc
mov
xchg
jbe
cmp
mov
bnd
pop
push
sar
adc
aam
scas
jnp
inc
lret
xor
arpl
loop
xor
add
lcall
inc
xchg
xchg
test
pop
out
or
sub
repnz
pop
lret
xchg
sub
sbb
jae
add
mov
insl
sub
adc
cmp
lcall
aas
xchg
mul
jns
xlat
adc
in
mov
sbb
ss
and
or
lahf
jns
dec
jecxz
test
push
cmp
cmp
xchg
pop
mov
pop
mov
xor
sbb
lret
xor
ret
jecxz
repz
mov
adc
sbb
rcrb
pop
mov
mov
popa
mov
lret
push
rorb
xor
imul
outsl
push
xchg
inc
loopne
not
ds
ss
pusha
sbb
sub
in
inc
push
scas
or
inc
sub
std
ret
mov
push
sahf
cwtl
das
pop
mov
sbb
pop
sbb
mov
mov
jns
and
sub
and
cli
xor
out
pushf
jbe
add
scas
jns
adc
popf
in
add
pop
icebp
sub
rclb
sub
into
insl
and
pop
inc
inc
outsl
in
inc
xor
adc
imul
lods
loop
xor
lea
sub
push
inc
jp
pop
ss
sub
pop
xor
mov
lret
mov
stc
popa
out
cld
lcall
mov
int
movsl
lea
andl
popf
sub
adc
sahf
stos
and
xchg
fcomps
cmpsl
add
jo
mov
test
xchg
fnstsw
xor
loop
pop
mov
stos
or
das
and
inc
lahf
lea
mov
andl
into
dec
jne
inc
je
xchg
or
leave
movups
xchg
jmp
lcall
mov
jno
or
sarl
inc
dec
or
fucomp
sti
clc
ret
dec
in
shr
inc
jbe
call
aad
cld
jp
test
repz
out
enter
xchg
jbe
mov
jmp
sbbb
cpuid
orb
dec
mov
adc
mov
cli
xchg
lret
out
pop
mov
cmpsl
inc
mov
scas
mov
fs
and
aam
push
add
out
ss
mov
inc
es
xor
cmp
bound
and
out
fidivrl
and
mov
xchg
sub
jle
je
inc
lea
fdiv
xchg
test
icebp
adc
ret
lods
pop
mov
cli
test
outsl
jp
ret
rcrb
sub
rcr
adc
jp
out
lods
cmc
push
test
movsl
fs
aad
pop
clc
xchg
in
pop
jl
cmp
inc
jg
aas
pop
je
cmp
pop
jo
add
ss
add
int
add
out
cltd
sbb
adc
adc
frstpm(287
jb,pt
push
xchg
xor
lret
sub
arpl
fisubs
test
lock
dec
dec
cmc
pushf
fbld
jae
loopne
insb
mul
xchg
xor
out
lea
push
jmp
out
mov
sbb
std
movsl
jle
adc
inc
dec
push
mov
jno
mov
frstor
insl
out
out
xchg
cmp
xor
xor
or
nop
shr
stos
movl
dec
shll
inc
mov
out
loop
push
sub
int
add
fcmove
xor
add
out
stos
jge
cld
push
in
mov
enter
test
add
or
jb
push
cs
lods
mov
data16
and
and
push
adc
nop
sbb
mov
mov
inc
daa
stos
dec
push
adc
arpl
outsl
insl
lret
cs
adc
jmp
push
movsb
movsb
xchg
mov
lds
popf
jg
sbb
scas
cmp
or
cmp
push
mov
loop
push
mov
sti
enter
xor
push
pop
mov
dec
pop
add
xlat
xchg
nop
mov
and
nop
and
mov
pop
cmpsl
push
cmp
fmuls
mov
idivl
jne
pop
cld
pop
adc
ret
xor
jbe
loop
mov
xor
jo
aas
shl
inc
sti
adc
mov
pop
aas
ss
imul
inc
mov
jo
adc
xorl
dec
ljmp
es
and
ss
mov
jnp
sbb
iret
sbb
repz
gs
lret
inc
ficomps
inc
inc
sub
mov
add
adc
sarl
mov
sbb
mov
mov
stos
loope
push
jge
pop
clc
sbb
pop
cmpsb
jb
sbb
pop
xchg
jae
ret
nop
lds
xlat
sbb
movsb
das
mov
mov
js
call
mov
stc
mov
jle
subb
jmp
fcomp
or
cld
mov
pop
push
jns
inc
mov
shlb
outsb
outsl
into
fists
sbb
push
pop
inc
fsubrp
mov
push
js
xchg
inc
mov
mov
jbe
xchg
orl
fists
fcmovu
xchg
adc
test
into
bound
inc
jbe
push
push
pop
push
add
addr16
inc
inc
cwtl
mov
mov
lds
mov
sbb
dec
or
loop
adc
sub
mov
lock
xchg
ja
cmpsl
push
push
and
xchg
lahf
adc
sbb
cwtl
in
repnz
push
mov
sbb
stos
sahf
out
push
add
ret
adc
push
xlat
stc
fwait
arpl
adc
cmp
mov
insl
cld
mov
lcall
push
cmp
inc
ret
sbb
arpl
lods
xor
sbb
dec
xor
jno
sub
js,pn
pop
pop
enter
sbb
and
mov
mov
hlt
sbb
ds
mov
mov
adc
jae
or
push
inc
lahf
outsl
xlat
cwtl
stos
pop
icebp
jb
push
jb
xor
push
fstpt
ret
shl
and
jo
popf
pop
pop
mov
hlt
loope
jnp
movsl
test
xchg
mov
test
push
mov
xchg
jg
pop
fdiv
sub
xor
in
xlat
loope
decl
lret
cmp
insl
int3
out
data16
sbb
loop
mov
and
mov
adc
or
ret
inc
push
adc
mov
movsb
adc
pushf
sub
shl
cmc
push
sub
cltd
push
fidivs
push
pop
jo
into
jns
dec
addl
stos
hlt
fs
or
xor
ja
lret
ds
sub
and
aam
test
mov
xchg
hlt
dec
jns
mov
ljmp
jp
mov
ficomps
lods
and
sbb
ds
jb
fbld
sahf
xor
cmp
xor
push
test
jnp
mov
out
popf
stc
aas
pushf
xchg
or
cmp
sahf
push
mov
imul
jne
test
add
jge
les
inc
es
scas
and
or
jle
and
sbb
mov
test
ljmp
push
xor
aaa
inc
loope
test
xchg
or
pop
mov
xchg
jae
mov
aas
ljmp
packssdw
xchg
cmpsl
rcl
pop
cltd
fs
sbb
jns
add
mov
inc
rolb
add
dec
push
repz
je
mov
pop
mov
imul
mov
push
jle
xchg
jmp
push
and
fwait
lods
cmp
dec
lds
push
cmpsl
aad
inc
mov
dec
mov
pop
cld
lds
xor
push
shrb
jne
test
inc
sahf
cmp
push
mov
std
mov
stos
shll
dec
popa
inc
fnstsw
mov
rclb
nop
lods
inc
loope
lret
inc
mov
adc
mov
mov
inc
bound
nop
lods
loop
shl
sahf
xor
imul
xchg
xchg
ret
mov
adc
push
pop
test
dec
and
out
mov
xor
div
rorl
dec
loopne
or
aam
leave
mov
test
mov
pop
cmp
add
and
js
dec
xchg
adc
add
cld
mov
mov
or
in
mov
outsb
mov
sub
pop
sub
push
mov
insb
sti
xchg
inc
jmp
adc
add
and
push
cwtl
pop
sbb
in
jo
and
emms
add
call
insb
imul
push
popa
adc
sarb
dec
test
fidivl
pop
lods
mov
lds
dec
cld
movl
jae,pn
arpl
sub
cmpsl
sahf
pusha
test
cmp
cs
pop
push
cmp
mov
cltd
rorb
pop
outsb
movsb
repz
imul
xchg
jge
xchg
add
pop
enter
dec
xchg
fiaddl
clc
das
stos
out
jmp
mov
insb
jo
push
cmc
xchg
xlat
push
lea
mov
rorb
imull
pop
insl
mov
sub
and
jecxz
sub
jns
push
xchg
jno
mov
cld
testb
int3
adc
jl
mov
fcompl
adc
stos
jle
mov
jg
insl
adc
jbe
insl
aad
fstps
jmp
xchg
lcall
das
daa
xchg
xlat
fnstsw
or
fsubrl
jne
cltd
movsl
sbb
mov
xor
sarl
jg
xchg
fnstsw
sarb
rorl
mov
sbb
xor
adc
inc
fwait
in
mov
or
and
leave
lahf
mov
int3
test
daa
nop
xchg
stos
and
test
ficoms
inc
and
arpl
jae
pusha
popl
mov
rcl
and
sub
test
js
sbbl
mov
fxch
push
inc
shl
and
push
sub
cs
add
adc
fcmovne
or
sbbl
mov
pop
cs
hlt
pop
aam
lea
loope
int
xor
mov
data16
imul
pop
cltd
popa
test
dec
mov
push
insb
add
mov
mov
pop
roll
leave
in
or
sbb
inc
jo
fwait
mov
mov
sbb
sti
test
add
lcall
xchg
inc
lret
out
cmp
inc
imul
pusha
gs
mov
cmp
mov
aas
dec
mov
pop
test
mov
or
or
les
jmp
sbb
jle
fcmovb
inc
dec
push
cmp
jbe
les
mov
sbb
xlat
pop
adc
es
fsubr
sub
in
inc
inc
mov
push
pop
test
xchg
mov
bswap
lret
jecxz
jmp
inc
inc
lret
pop
xchg
fsubl
clc
push
jmp
inc
mov
and
fnsave
into
rcrl
mov
xchg
sahf
adc
notb
push
scas
movsl
cmp
jecxz
iret
mov
jne
addb
inc
mov
das
insb
test
insb
lret
lods
dec
arpl
pusha
gs
inc
pop
push
push
push
cmpsl
xor
shl
hlt
cli
jmp
sbb
sub
add
sbb
cmp
or
mov
mov
fstpl
in
leave
lret
mov
lret
cmp
test
stc
shrl
cld
pop
int
push
pushf
push
cmp
xchg
loope
push
pop
jmp
jmp
jb
add
inc
call
push
scas
push
lock
into
adc
pushf
aas
jne
cwtl
sahf
fiaddl
mov
push
dec
std
cld
je
rol
in
orl
repz
mov
pop
aas
xchg
in
mov
ljmp
lret
xor
pusha
push
cltd
inc
inc
std
pop
xor
stc
lcall
cltd
pusha
repz
cwtl
fcoms
pushf
xorl
xchg
ret
mov
sahf
scas
mov
sbb
push
loop
adcl
icebp
mov
and
jp
mov
xchg
or
xor
adc
in
icebp
sbb
sbb
add
cmpsl
xchg
and
push
mov
xchg
ljmp
mov
cmpsb
xchg
lock
cwtl
mov
movsl
lret
fnstenv
push
push
bound
aad
xchg
mov
sti
popf
into
cli
or
ljmp
outsb
mov
ror
add
imul
dec
push
xlat
stc
mov
bound
lret
add
push
mov
sti
call
dec
lcall
mov
xor
push
dec
mov
leave
xchg
push
ret
and
gs
sar
fwait
xchg
lds
jl
int3
mov
jle
cltd
xlat
aaa
xchg
lret
and
cltd
sub
daa
cwtl
lods
inc
adc
or
cli
in
pop
lods
subl
xor
mov
mov
outsb
adc
ljmp
xor
ret
loope
cld
mov
call
out
and
inc
mov
mov
and
outsb
mov
stc
enter
jge
pop
sub
mov
mov
inc
jle
fwait
and
mov
sbb
mov
cmp
mov
cmp
xchg
repnz
and
mov
mov
adc
or
adc
jl
test
leave
scas
jge
sbb
cs
pop
mov
xor
loope
jne
icebp
push
mov
shrb
adc
xchg
sub
jbe
push
inc
ljmp
insl
dec
cltd
push
inc
push
int3
mov
inc
lahf
pop
std
div
sbb
push
cmp
mov
mov
mov
movsl
pushf
das
stos
lods
dec
and
mov
inc
mov
dec
jmp
mov
push
shll
push
cmp
push
adc
popa
jo
xchg
int
mov
rclb
xchg
push
mov
or
fwait
mov
push
pop
js
mov
enter
xchg
inc
mov
or
sub
fs
loop
movsb
or
inc
cmpb
mov
dec
and
xor
xor
outsb
mov
push
and
and
mov
sub
iret
pop
ja
adc
into
lahf
stos
push
xchg
fidivs
popf
ret
sbb
dec
hlt
jb
jb
in
push
jae
pop
jmp
mov
or
cmc
scas
xor
sbb
push
mov
mov
xchg
lret
call
xor
sbb
add
out
push
sub
pop
lcall
in
icebp
mov
nop
ds
jb
xor
aaa
xchg
cmpsb
int
xchg
lea
mov
out
cwtl
daa
aas
cmp
xor
fistps
xchg
adc
fwait
mov
cmp
mov
test
repz
lahf
xor
cmpsb
jecxz
sub
cmpsb
cmp
cmp
loope
iret
push
inc
jno
insb
dec
mov
mov
jne
mov
adc
mov
loopne
dec
jb
mov
mov
dec
shrb
adc
sub
fstpt
fcomip
test
sub
push
pop
in
decl
out
jp
insl
clc
mov
xchg
adc
mov
mov
mov
mov
outsb
sub
or
fcmovne
push
pushf
dec
xchg
sub
leave
das
sbb
das
cmp
adc
ss
cltd
sub
jno
stos
mov
push
adcb
add
push
fdivrs
in
mov
les
inc
jge
xor
dec
dec
out
sbb
fadds
insl
fdivs
aas
std
xor
pop
jmp
in
push
jnp
xchg
aas
mov
call
lock
stc
cltd
adc
call
push
out
into
dec
add
cmp
inc
inc
data16
pusha
outsl
sbb
mov
cmp
adc
push
imul
pop
pop
insl
xorb
insb
mov
sbb
xor
or
pop
lcall
push
data16
mov
pushf
mov
adc
fdivr
dec
mov
dec
nop
out
aaa
mov
push
scas
and
cmp
imul
fldenv
push
lahf
sub
sbb
add
ja
jle
pop
pop
dec
cli
outsb
xor
sbb
or
test
cmpsl
in
outsl
into
pop
jp
js
in
push
and
add
mov
inc
mov
loopne
inc
jnp
inc
pop
lods
fneni(8087
cwtl
add
mov
or
push
mov
orb
dec
mov
ljmp
push
outsl
call
xor
mov
dec
adc
leave
sbb
je
movsl
out
jae
int
lock
mov
mov
mov
xchg
arpl
add
in
xor
sahf
push
fmul
loope
fs
xchg
mov
cmpsl
jl
sub
add
cli
xchg
fnsave
shlb
dec
stc
cltd
inc
jmp
mov
pushf
mov
and
les
dec
sti
mov
adc
nop
into
mov
push
or
mov
stos
or
jl
lcall
dec
xchg
xchg
insl
out
and
mov
pop
sbb
adc
je
mov
xchg
inc
cli
sbb
cmp
in
pop
xchg
pop
xchg
mov
repnz
or
inc
mov
lods
sub
stos
stos
add
jb
xchg
jne
bound
inc
cld
push
sbb
cmp
push
add
incb
cwtl
call
add
test
jp
fistpl
sub
enter
xchg
and
and
and
add
xchg
ficoms
push
ret
negb
out
fstps
leave
jb
cld
loop
xchg
xor
adc
fwait
adc
out
cli
dec
mov
dec
hlt
test
push
gs
inc
test
cltd
ret
fisttpl
mov
pop
cmp
cwtl
pop
addl
push
sahf
add
dec
jne
sarb
and
or
outsb
mov
out
mov
imul
or
inc
add
out
jl
popa
mov
outsl
xchg
or
xchg
je
std
push
sbb
xor
movsb
out
push
and
cmpsl
mov
addb
fucomip
mull
js
jp
xor
xchg
clc
xchg
and
stc
pop
pushf
jne
xor
inc
push
rcl
add
mov
fwait
movsb
loop
shll
pop
and
adc
in
aam
fsubs
movb
arpl
add
in
mov
pop
xchg
sub
std
cmp
out
mov
mov
adc
push
ja
rorb
cld
fidivs
cmp
jb
cltd
cmp
cmp
fs
inc
popa
bound
stc
jl
das
and
call
mov
lret
dec
enter
mov
in
adc
out
fadds
hlt
idivb
lret
mov
push
in
add
insl
pushf
jg
sbb
jmp
push
loop
int
hlt
int3
test
jne
call
imul
inc
insl
mov
xlat
pop
aas
cmp
pop
xchg
cmpsl
mov
cmp
adc
imul
dec
fnsave
and
cmp
or
push
cmpsl
test
add
test
sbb
push
add
pushf
icebp
pop
lods
lea
gs
in
mov
xlat
add
cmp
mov
jg
addr16
mov
popa
data16
xchg
pop
cmp
mov
dec
fdivp
in
ret
mov
push
iret
xchg
cmpsl
jecxz
push
scas
pop
sti
mov
fwait
push
ret
dec
mov
in
hlt
test
lcall
out
mov
pop
std
cld
xor
pop
insl
test
pop
test
je
adc
fs
or
pop
lock
leave
pop
pop
adc
test
sub
cmc
movlps
cmp
nop
mov
or
mov
pop
rcrl
and
test
sub
dec
int3
push
int
push
mov
adc
in
gs
pop
out
and
arpl
scas
int
xlat
movsl
in
das
jp
bnd
xor
push
mov
xchg
enter
jmp
mov
jecxz
push
out
cmp
lods
ljmp
arpl
fmull
movsl
adc
dec
imul
xchg
fnsave
fmulp
jl
out
mov
adc
push
test
pop
pop
mov
in
out
roll
in
ss
mov
xchg
cltd
xchg
fs
mov
inc
jae
int3
sbb
gs
arpl
ss
pop
fistpl
bound
pop
cmp
cli
jle
mov
mov
push
inc
or
popa
sub
dec
sub
les
ret
mov
mov
in
call
sbb
push
xor
and
add
push
dec
inc
jb
lds
xchg
nop
js
and
mov
pusha
and
jo
in
jmp
mov
movsl
push
sti
pop
in
imul
mov
shl
in
mov
aad
sub
ret
dec
push
movsb
lret
aaa
mov
mov
fildl
xchg
add
dec
xchg
pop
ljmp
fisttps
int
out
or
push
cmp
mov
addr16
movsl
jle
shll
rorb
cwtl
mov
ljmp
ss
leave
mov
cmp
cmp
jl
rclb
int
mov
sbb
sbb
andl
or
and
pop
xor
mov
xor
call
jno
out
pop
jg
cmp
add
flds
sub
ret
pop
fiaddl
out
pop
out
insb
loopne
cmp
and
mov
test
fstl
sahf
mov
aam
xlat
and
scas
bound
sub
inc
or
xor
lcall
push
test
repnz
lock
push
xor
sbbl
clc
mov
xchg
mov
mov
cmp
jo
insb
and
push
jle
jne
pop
mov
cmp
fwait
imul
xor
push
inc
cmp
sub
inc
push
inc
ret
mov
sub
sti
repz
push
inc
stos
xchg
or
mov
insb
push
sub
in
add
into
addl
outsl
lea
ficoms
inc
xor
mov
push
call
add
sahf
xchg
imul
insb
adc
or
jns
adc
repnz
inc
nop
push
jl
jge
cmp
sbb
add
cmpsl
push
inc
pop
jle
adc
ror
xchg
int3
bound
jnp
xchg
mov
jp
insl
mov
dec
shl
scas
repz
push
sub
xlat
scas
and
dec
mov
out
imul
xor
scas
imul
push
test
push
fcomps
and
cmpsb
sub
push
or
sbb
push
sbb
data16
pop
cmpsb
mov
and
inc
mov
imul
add
add
adc
cwtl
outsb
fucom
in
imul
xchg
fidivrl
pop
ljmp
lret
adc
lret
push
or
loop
add
imul
call
repnz
cmp
ficompl
push
dec
inc
inc
inc
xchg
cmp
pop
shrb
cmp
clc
shlb
iret
lods
push
xor
iret
adc
imul
pop
pop
sub
loop
mov
pop
hlt
dec
jge
pop
adc
jl
subb
inc
mov
or
inc
pop
outsb
mov
sbb
out
lods
ss
loopne
jne
mov
out
movsb
and
sbb
cmp
rcl
cmp
adc
ja
fidivrs
bound
mov
stc
mov
jg
mov
into
ja
sub
aaa
xchg
loop
lds
jmp
icebp
mov
js
ret
mov
loope
sbb
lcall
mov
daa
scas
out
inc
and
fcompl
iret
xlat
jnp
fimull
mov
pop
int3
cmp
mov
call
out
push
mov
jbe
add
fmulp
lea
fwait
dec
aad
jl
cmp
cmp
mov
jno
fnstenv
dec
in
mov
aam
lds
testl
push
setbe
sub
inc
cmp
xlat
nop
pop
enter
std
and
dec
gs
jmp
jge
out
cmp
jbe
arpl
inc
loopne
inc
ficompl
mov
adc
fmul
ret
enter
cmp
inc
mov
mov
mov
cld
aas
jns
adc
add
pop
fwait
sub
out
cmp
sbb
cmpsl
mov
push
cmp
scas
sbb
fwait
adc
movsb
or
or
sub
xor
lods
mov
add
and
and
push
jno
ret
inc
cmp
clc
sbb
fbstp
mov
clc
xchg
mov
aam
fs
jne
fldt
inc
out
je
push
daa
fwait
dec
leave
mov
inc
cmp
cltd
das
lret
mov
xor
scas
pop
xchg
cmp
pusha
pop
faddl
mov
loope
sbb
xchg
jle
pop
jle
xchg
inc
dec
and
cmp
imul
jae
and
test
fwait
pop
mov
jge
adc
adc
out
in
fcomip
roll
je
xchg
shr
stc
enter
in
and
cmpl
mov
mov
call
ret
inc
and
icebp
lret
dec
dec
pop
push
out
push
sub
mov
xor
insb
popa
cmp
cli
jb
mov
mov
rcrl
out
mov
xchg
lcall
adc
insb
xor
out
out
add
jo
enter
sbb
jmp
fidivl
adc
mov
loop
cli
mov
inc
daa
xor
stos
insl
jo
loop
scas
jb
orl
dec
push
imul
push
mov
fwait
insl
add
push
xchg
stos
cmp
je
orb
push
or
xlat
dec
cmp
push
cmpl
mov
xor
cld
xchg
push
or
popa
push
aaa
addr16
dec
into
mov
filds
dec
jecxz
ficoml
mov
jp
xchg
xchg
jb
add
jmp
dec
loopne
adc
and
mov
sub
popa
loop
mov
lcall
push
xchg
arpl
adc
mov
add
sub
shll
xor
adc
pop
jge
sbb
ljmp
enter
jle
inc
lods
lahf
lods
repnz
or
sub
inc
pop
cli
xchg
jl
pop
rclb
jae
inc
push
jnp
pop
xor
lds
pop
jno
aam
pop
jb
cmpsl
inc
mov
ja
mov
ljmp
int
pop
push
xor
stc
rcll
dec
xor
xchg
movsb
lret
testl
xchg
cmpsl
mov
dec
subl
fcoml
call
je
push
cli
jmp
nop
push
movsl
pop
loope
inc
push
and
sub
call
out
xchg
fstpt
out
mov
adc
das
std
or
dec
dec
lret
cmc
inc
add
rcll
and
ds
nop
sti
dec
jb
push
repz
std
lret
add
daa
push
sets
enter
mov
cmp
xlat
int
sub
add
pop
fldcw
jae
mov
push
rcrb
xchg
mov
js
sbb
mov
mov
inc
ficoms
push
mov
cmpsl
shrb
mov
cwtl
shl
repz
data16
int
inc
scas
sbbb
popf
inc
jmp
push
pop
mov
xor
inc
lods
xchg
out
push
xchg
pop
adc
xor
cld
jb
int3
fdivrs
loopne
mov
jge
imul
inc
clc
test
les
push
sbb
adc
cs
mov
pop
fcmovu
outsb
lods
pop
xchg
ja
sbb
push
sub
push
mov
jmp
js
stos
adc
frstor
movsb
add
mov
mov
cmp
movsl
insl
push
dec
daa
jp
cmp
iret
mov
shll
mov
lods
lcall
pushf
push
dec
push
dec
inc
lcall
loope
sbb
lods
mov
call
push
test
push
sbb
and
push
mov
cmp
pushf
inc
xor
or
pop
add
pop
pop
mov
leave
shrb
inc
stos
sub
mov
mov
mov
adc
push
adc
cmp
arpl
mov
mov
into
fadds
and
mov
icebp
add
push
cmp
push
mov
mov
mov
sbb
mov
lods
data16
sbb
mov
rdmsr
les
mov
add
adc
jns
jns
pop
dec
inc
pop
lea
inc
mov
idiv
or
js
cmp
sbb
incb
hlt
test
loopne
mov
jmp
jge
shrb
push
outsl
fildll
shr
inc
mov
push
cmp
adc
jbe
imul
jb
lret
or
jmp
cmpsb
mov
mov
fcoms
mov
js
repz
push
imul
sbb
sti
xor
outsl
or
negl
rorl
aaa
stos
cltd
insb
lret
hlt
lods
pop
xor
jmp
inc
pop
cmp
lret
dec
loopne
sub
push
adc
int
mov
pop
ret
daa
leave
mov
add
iret
cmc
cmp
add
ljmp
subl
mov
or
cmpsb
pop
in
jp
cmp
mov
icebp
nop
je
jno
or
loopne
mov
jmp
push
add
inc
add
movsl
pop
push
and
in
xlat
mov
jl
lods
push
push
cmp
into
mov
cmp
mov
sarl
pop
adc
fidivrl
sbb
mulb
rcll
lcall
cmp
dec
and
ss
mov
jnp
scas
fcmovnu
dec
cmp
es
lret
mov
bnd
sbbb
daa
lea
xchg
pop
xchg
popf
lcall
imul
and
ret
es
stos
mov
scas
sub
jae
into
adc
std
push
push
bound
mov
outsb
jae
xor
cmp
fcomps
repnz
aas
loopne
mov
or
sub
jbe
and
insb
push
addr16
mov
mov
es
sub
sbb
loope
fadds
das
sti
js
sbb
pop
daa
lods
sbb
les
fsubs
je
pop
jnp
aad
or
jnp
and
mov
das
cld
and
out
loop
in
mov
das
icebp
aad
inc
mov
loop
dec
stos
jl
call
push
jg
sub
nop
insb
pop
cmp
fildll
push
fnsave
dec
mov
mov
mov
mov
xor
fstpl
popf
sbb
and
das
outsb
adcl
daa
call
add
adc
in
mov
cwtl
adc
mov
pushf
xchg
jg
dec
mov
popf
sub
cmp
inc
daa
jnp
xor
inc
movsl
jb
popf
icebp
test
sbb
rcll
jecxz
lahf
fs
ret
pmullw
imul
push
lret
sbb
pop
les
pop
aam
pushf
movsb
iret
mov
scas
out
xlat
push
sub
scas
in
out
adc
sbb
jnp
add
add
add
sub
adc
negl
clc
ds
push
and
push
sti
jno
jb,pt
leave
and
mov
inc
testb
push
push
divl
clc
mov
bound
or
dec
pop
pop
test
xchg
mov
mov
mov
push
push
aam
xchg
jbe
mov
ret
js
inc
test
rcrb
jmp
mov
mov
push
mov
test
jl
outsb
hlt
jge
mov
int
jnp
push
mov
push
xor
xor
cltd
mov
popl
fidivs
imul
jne
gs
fldl
andl
push
xor
insb
popf
fwait
in
ss
sub
popf
movsb
ret
enter
xchg
jl
fwait
mov
enter
push
jmp
sbb
xor
js
sbb
cmp
into
pushf
push
dec
sbb
jg
fimull
pop
cmp
subb
fldl2e
inc
mov
push
je
xchg
xchg
jecxz
call
mov
jb
pusha
arpl
sbb
lret
call
ds
test
fsubrp
jle
imul
cmp
xor
xor
mov
pop
js
add
test
push
insl
loopne
inc
lea
mov
dec
pop
lcall
out
mov
js
fcomip
insb
cmpb
push
in
js
jecxz
leave
sti
cmp
cmpsl
xor
xchg
loop
cmp
ljmp
cmpsb
pop
mov
sarl
push
jno
mov
mov
loopne
sub
inc
sahf
ljmp
fistps
jecxz
in
inc
out
cmp
rol
daa
mov
je
or
xor
jp
mov
xchg
lods
iret
xchg
mov
jg
dec
and
and
mov
jecxz
loopne
dec
cmpl
test
pop
ja
sti
adc
pop
shl
mov
xchg
inc
mov
sbb
mov
stos
js
in
push
push
pop
push
sub
pop
enter
dec
shrb
mov
in
repnz
js
mov
sub
lods
jecxz
bound
push
jge
popa
lcall
sbb
xor
sbb
jl
push
in
and
jle
leave
mov
xchg
mov
and
jmp
js
mov
fcompl
jo
mov
in
in
fsubp
xchg
roll
ja
and
cmp
add
mov
adc
push
mov
xor
jno
xchg
cld
and
cmp
in
cmpsl
sbb
das
sbbl
or
cmp
lock
jg
lcall
les
cmp
aas
cmpsb
and
std
sub
push
jg
ds
das
cltd
sub
enter
push
sahf
cmc
nop
out
add
sub
jge
std
cmpsl
sub
adc
xor
pop
push
jae
out
push
dec
mov
mov
add
sub
add
aas
fidivl
aaa
inc
mov
leave
cmp
dec
mov
ret
cs
scas
lds
push
mov
mov
inc
xor
cmc
sbb
mov
jg
jne
arpl
movsl
gs
mov
mov
jns
es
pusha
xor
adc
mov
cmpsl
add
jne
add
jl
jne
fs
test
aas
lods
cli
lods
es
aas
cmpsl
lods
loopne
into
push
stos
outsb
dec
std
sub
sbb
in
outsl
dec
flds
push
push
or
or
inc
call
dec
pop
xor
lret
xchg
mov
or
stos
mov
and
dec
inc
push
out
sbb
popf
fldenv
sbb
cmp
movsb
jecxz
rcl
jge
mov
faddp
int3
push
stos
mov
pop
nop
lock
movsl
add
scas
fistl
push
sbb
xchg
dec
mov
add
dec
les
cld
inc
lods
or
add
fimuls
inc
lds
iret
cs
jmp
xor
repnz
cmp
jge
out
lock
adc
subb
in
jno
or
in
call
ja
mov
into
test
lahf
ja
ljmp
add
mov
mov
xor
repnz
imul
inc
jl
lret
or
adc
icebp
cmp
addr16
pop
loop
out
or
out
pop
mov
aad
imul
sbb
and
insb
push
dec
dec
cmp
loopne
adc
push
loop
mov
mov
mov
sarl
sub
add
inc
cli
add
inc
test
cmpsb
out
sbb
and
mov
dec
xor
mov
cmp
movsb
iret
cmc
test
mov
jb
insl
fildl
loopne
dec
lret
adc
sub
pop
dec
popf
ret
xor
stc
mov
adc
cmp
add
mov
cs
and
ljmp
out
sbb
sub
xchg
push
lods
cmp
cmpsl
out
aaa
add
mov
sahf
cmpsl
sbb
dec
cs
sub
int3
enter
sbb
and
lahf
int
push
jno
push
mov
xor
jmp
or
scas
push
jg
mov
in
dec
push
outsl
aas
xchg
adcb
andl
test
rorb
xchg
push
jo
pop
lea
mov
js
test
sub
mov
cwtl
jne
pop
push
fsubr
test
cmp
ss
test
enter
stc
cs
cmp
das
pop
mov
test
mov
and
inc
push
push
xchg
xor
repz
adc
int3
fucom
adc
mov
in
adc
mov
mov
or
iret
xchg
dec
pop
jecxz
mov
div
cmpsb
fisttps
jae
jecxz
out
test
cmp
popa
test
ret
push
jp
pushl
popa
in
cltd
mov
outsl
xchg
stos
outsb
sub
mov
mov
inc
daa
imul
push
sub
aad
push
arpl
loope
data16
push
jle
jo
inc
inc
adc
cli
pop
test
out
lods
jne
rclb
call
and
repnz
setnp
sub
push
inc
jns
mov
jmp
jg
in
stc
mull
daa
xchg
jo
call
mov
lahf
pushf
popf
sub
out
fwait
jb
stos
lret
cmp
dec
xchg
jmp
inc
xchg
pop
mov
lret
imul
jl
mov
cmp
or
fcomps
test
inc
pop
cmp
fucom
aam
jne
scas
sub
pop
inc
adc
out
pushf
push
lret
jns
dec
dec
mov
adc
stos
sub
mov
or
pop
call
push
popa
in
cli
push
dec
hlt
xor
movsb
and
stos
mov
aas
xchg
jns
mov
dec
mov
sti
mov
mov
shll
outsl
xor
loope
addr16
adc
insb
aad
jl
pop
rclb
sbb
adc
adc
cmpsl
push
jecxz
jmp
cld
dec
mov
imul
add
or
xchg
into
or
dec
leave
or
pop
pop
in
out
mov
jg
aaa
scas
inc
cmc
cmc
stc
xchg
addr16
mov
add
inc
pop
jmp
insl
pop
pop
cmc
dec
fs
sahf
mov
jmp
pop
sub
loop
adc
insl
lea
sbb
iret
das
repz
mov
push
call
mov
push
pop
push
mov
sbb
xor
jmp
add
xlat
daa
mov
imul
pop
repz
lret
mov
jmp
into
mov
jmp
jo
push
xor
mov
stc
pop
xor
mov
mov
icebp
test
loope
arpl
fst
sahf
pushf
xchg
cwtl
adc
inc
int
sbb
mov
pop
fdivl
add
dec
js
xor
daa
int
es
stos
in
stc
sbb
inc
jo
jae
out
mov
test
lcall
cwtl
fmuls
fwait
loope
sub
jo
fidivrs
and
xchg
test
clc
mov
or
pop
xchg
mov
mov
mov
les
xor
sub
rorb
sti
ficomps
dec
aaa
nop
jmp
addr16
std
push
popf
sti
mov
mov
mov
jmp
cmc
es
dec
jno
jae
pop
xchg
pusha
mov
ljmp
fstpt
jb
lret
popf
shll
gs
pop
mov
movsb
cmpsb
enter
dec
notl
imul
lock
sbb
cwtl
jmp
pop
loope
and
and
cmp
pop
or
insb
jno
jae
sbbb
dec
jecxz
adc
mov
cli
push
pop
imul
mov
lods
pop
lds
sub
cmpsl
out
fcmovbe
call
or
mov
nop
mov
popa
inc
outsl
jg
out
jne
mov
mov
xchg
xorb
and
xlat
xchg
dec
push
shrb
mov
div
push
inc
push
xchg
sbb
push
lea
sub
aaa
addl
pop
sub
lahf
adc
xchg
stos
sti
jl
mov
push
mov
mov
xchg
mov
and
test
pop
mov
lea
adc
pop
repnz
mov
xlat
xor
cwtl
and
jecxz
mov
jp
fildll
xchg
sub
inc
int
mov
xor
insb
fnstenv
xor
mov
lcall
test
xor
int
jbe
add
sbb
sbb
or
into
clc
pop
sbb
mov
rcll
jg
mov
cli
dec
out
adc
cmp
pop
mov
dec
shlb
bound
mov
fnsave
sbb
pop
scas
dec
xchg
mov
jg
mov
push
lret
mov
inc
aad
jae
cs
fidivrs
sub
xchg
int3
and
sbb
lds
movsl
jge
rcr
mov
aad
xchg
aaa
xor
ret
and
ja
std
pushf
int3
jns
pop
ret
fisubs
xchg
shrb
subb
mov
mov
insb
pop
mov
movsl
sbb
mov
in
cmp
mov
xchg
sahf
jns
cli
daa
sbb
mov
bound
adc
jg
fnstcw
in
pop
mov
in
pop
xlat
or
add
imul
mov
int
jb
fldenv
sbb
jg
sbb
xlat
mov
adc
or
jns
mov
scas
fisttpll
inc
out
cwtl
xchg
or
dec
sub
sbb
pushf
repnz
pop
mov
adc
fldcw
sub
fldcw
xor
and
repnz
push
mov
jo
dec
cs
push
sbb
add
push
cmp
lods
sub
jns
jo
insb
testb
jp
repz
lock
mov
and
push
scas
dec
sti
scas
push
add
in
pop
mov
xchg
xchg
xchg
mov
lcall
cmpsb
pop
lock
js
mov
out
pop
ja
jne
ds
push
out
aad
inc
ret
cmp
pop
mov
jae
je
push
cltd
sarl
push
rcrb
les
sbbb
aas
aam
cli
cmp
int
stc
out
sub
repnz
arpl
popl
cmpsb
jae
mov
jle
xchg
and
push
movsb
shlb
dec
int3
mov
ror
pop
loop
cmpsb
adc
push
ja
add
push
sbb
sub
into
fildll
jo
js
in
add
xor
dec
xor
cwtl
sbbb
cs
jmp
jo
inc
and
cmp
inc
jae
mov
dec
xchg
adc
insb
lods
imul
push
hlt
mov
sub
scas
inc
xor
xchg
cmpsl
inc
mov
pop
xor
push
or
pop
add
push
imul
sbb
xchg
xchg
jmp
pop
rolb
or
loopne
adc
pop
pop
push
repnz
icebp
cmp
mov
push
stc
mov
decl
stos
repnz
sbb
inc
adc
negl
or
add
push
cmpsl
enter
xchg
sarl
or
scas
push
cli
out
nop
js
lahf
sub
inc
adc
and
popa
lock
enter
lods
paddd
dec
jbe
pop
mov
lods
mov
cwtl
int
jge
lods
sbb
jno
adcb
jecxz
mov
mov
xor
fs
faddl
movsl
out
sub
ljmp
add
addr16
sub
sub
jmp
pusha
mov
cmp
out
dec
test
call
movntps
mov
pop
lret
cmpsb
push
cmc
movsb
mov
xor
lcall
mov
jae
rorb
add
jbe
dec
inc
sarl
inc
imul
mov
dec
cmpsb
push
ret
push
pop
jb
aaa
jmp
sbb
mov
mov
inc
pushf
xor
mov
sti
mov
push
pushf
xorb
dec
jecxz
aam
outsb
sub
jl
and
test
mov
je
mov
addr16
imul
inc
inc
cwtl
sub
enter
loope
push
dec
cld
sahf
lea
mov
loop
fbld
or
andl
jno
lods
add
fwait
dec
fildl
sub
push
pop
mov
mov
xor
bound
adc
roll
repnz
mov
insb
sub
pop
push
pop
mov
shr
add
popa
add
rcl
mov
sub
out
sti
cmp
mov
and
popa
jb
push
scas
push
pop
push
and
or
aaa
seta
mov
mov
adc
arpl
inc
nop
cmp
scas
out
out
and
in
lea
dec
test
pop
pop
leave
insl
adc
aas
insb
push
mov
pusha
addr16
mov
jg
lods
or
fcoms
jnp
repz
mov
inc
jnp
mov
jmp
nop
mov
fstps
popf
jns
imul
inc
or
cwtl
mov
and
es
out
jl
mov
cmp
cltd
sbb
sub
push
push
mov
gs
aad
ss
cmc
inc
hlt
inc
xor
lods
xor
push
imul
data16
outsb
jle
and
cmp
and
add
xlat
pop
ret
fdivrl
icebp
jo
andl
js
mov
aam
dec
and
test
bswap
inc
pusha
sahf
add
and
jo
pop
xor
scas
add
sbb
lret
enter
mov
pop
and
inc
dec
inc
inc
in
sbb
cmp
ja
js
mov
add
iret
jecxz
sar
xchg
pop
dec
pop
mov
lahf
leave
orb
and
pop
mov
xor
in
xor
sub
jecxz
sub
xor
push
pop
test
lret
leave
insb
mov
adc
xor
adc
les
lods
out
outsl
mov
fmuls
loope
insl
cmp
xor
xor
mov
jmp
xchg
aas
fdivr
ja
push
js
push
insb
add
inc
pop
je
out
mov
pop
sbb
repnz
push
cmp
xchg
aam
adc
inc
adc
and
ret
adc
cmc
fisubrl
xchg
nop
inc
add
mov
xchg
jnp
pop
and
loope
and
inc
sbb
cmp
aas
stos
inc
cmp
push
outsb
fistpll
cs
data16
or
xchg
jmp
std
repz
adc
xor
insb
cmp
adc
inc
add
out
fidivrs
sub
lods
mov
push
dec
push
mov
sbbl
ficompl
or
or
jmp
fimull
lcall
mov
rcrl
sbb
lret
jb
xchg
sarl
push
ja
into
sub
inc
sti
js
aas
lock
mov
iret
sub
cmp
mov
xchg
inc
or
pusha
rclb
cmc
arpl
adc
out
mov
cmc
adc
mov
xor
inc
adc
pusha
das
aaa
adc
or
cmp
imulb
hlt
push
dec
sub
xchg
mov
fldenv
imul
push
add
mov
push
addb
fs
mov
mov
xor
xor
lds
rcl
cli
jp
dec
adc
push
iret
data16
or
imul
cwtl
pop
xor
popf
xlat
scas
gs
mov
notl
jecxz
call
cmpsl
sub
and
pop
push
and
sbb
jae
pop
in
pop
push
inc
jle
pop
jmp
scas
mov
xor
pop
sub
mov
push
hlt
sub
movsl
inc
mov
cmp
push
lret
int
js
push
mov
test
mov
push
je
xchg
push
xor
adc
jbe
sbb
jnp
jae
mov
mov
out
mov
roll
lcall
jae
mov
xchg
lret
ret
mov
clc
mov
cs
push
xor
es
cltd
jmp
gs
lahf
test
filds
in
aas
imull
movsb
jmp
or
mov
pushf
mov
push
sbbb
outsb
sub
dec
xchg
and
jno
mov
and
sbb
lcall
xor
xchg
test
ja
mov
pushf
in
push
fcoms
fiaddl
movsb
dec
xchg
adc
mov
pushf
mov
orl
cmp
xchg
cmpsb
jl
mov
pop
movsl
push
rcrl
addr16
jae
jae
xor
ljmp
btc
jge
nop
jne
iret
arpl
pusha
sbb
pop
and
or
lods
movsb
fdivrs
paddq
lret
and
push
mov
jmp
enter
mov
shll
jecxz
ja
and
jecxz
and
fcomps
ret
arpl
popa
inc
xchg
add
cmp
loop
dec
sub
ret
fidivrs
mov
mov
push
test
inc
daa
test
cmp
mov
repnz
mov
xchg
push
pushf
lea
movsb
mov
xchg
mov
mov
mov
or
outsl
sbb
lods
and
xchg
adc
mov
int
mov
dec
pop
or
add
push
push
mov
test
rcl
adc
push
test
adc
not
inc
sub
inc
jp
pop
adc
or
inc
jle
mov
xchg
and
repz
jae
mov
mov
jbe
ljmp
iret
lds
mov
in
stos
push
out
in
dec
jb
incb
xchg
scas
push
aam
xor
ret
pushf
xor
or
or
stos
jmp
inc
push
call
or
mov
inc
sti
fldenv
xor
cli
mov
ret
dec
rorl
pop
sbb
xchg
or
adc
push
jmp
pop
jle
bound
xchg
cmp
lds
loope
inc
sti
pop
jg
sub
rorb
and
or
dec
or
arpl
and
xchg
xlat
sti
gs
mov
enter
cmpsb
notl
mov
push
nop
enter
shrl
hlt
loop
push
sub
mov
and
mov
in
sbb
jg
mov
popa
hlt
and
inc
adc
pop
jnp
imull
fistpl
sub
fdivrl
aas
mov
push
outsl
mov
push
sbb
pop
stos
das
repnz
lock
push
test
inc
sarl
xchg
cmp
xor
push
add
mov
xchg
xchg
test
lahf
mov
mov
pop
pop
jbe
fwait
pop
dec
jno
int
push
cltd
scas
daa
sbb
push
movsb
sbb
sub
push
pop
dec
or
pop
cmp
shrl
stc
add
push
movsl
repnz
cs
jbe
add
add
repz
sti
mov
or
inc
stos
xor
jge
gs
pop
je
fstpt
sbb
add
xchg
mov
scas
jg
xor
pop
repz
cmp
in
and
mov
sub
mov
std
inc
push
mov
mov
mov
mov
mov
or
adc
andb
xchg
and
rorl
dec
imul
pop
int
in
push
push
xchg
and
bound
adc
adc
shlb
in
fidivl
sub
je
gs
lods
adc
pop
fdivrp
add
cli
adc
fucomp
out
adc
and
pusha
out
lea
mov
lahf
inc
cwtl
push
xor
lret
xchg
fucomip
stos
rcll
std
testb
cmp
mov
arpl
and
loope
xchg
mov
lcall
mov
and
pop
hlt
inc
cld
or
ret
or
push
xor
outsl
xchg
cmp
sub
xor
cmpsl
and
bound
sti
mov
call
cld
add
iret
push
pushl
shlb
mov
mov
addl
and
xchg
repnz
pop
mov
mov
and
shrl
jae
adc
mov
mov
bound
cmp
addr16
sarl
and
push
add
mov
or
lahf
stos
dec
xlat
mov
imul
dec
out
adc
subb
push
push
in
or
hlt
xor
popa
cmpsb
mov
sub
repz
movsb
cmp
add
mov
cmp
stos
push
push
pop
inc
imul
fcmovb
std
shrb
andb
jg
xlat
in
push
mov
in
cld
cmp
sub
inc
add
or
loop
dec
leave
xchg
push
enter
mov
push
loopne
push
push
aaa
cmpsl
sub
cmp
in
lea
jo
sbb
pop
mov
pop
fcoml
clc
aas
add
stos
mov
in
or
iret
pusha
lcall
out
outsl
out
jecxz
repz
rorb
les
push
notb
dec
mov
adc
in
mov
add
stos
lret
shlb
mov
test
or
pop
mov
clc
jo
mov
leave
jnp
or
or
mov
pushf
das
out
adc
out
jnp
mov
push
sub
mov
aam
sbb
add
xchg
xchg
mov
in
daa
or
lret
pop
fisubl
sbb
rcrb
in
xchg
pop
lret
out
adc
mov
and
and
fldl
mov
shl
imul
insb
bswap
mov
mov
xlat
sarl
sbb
in
xchg
pusha
dec
mov
insl
pop
sarb
cli
loop
pusha
jmp
popf
ljmp
scas
fbld
ja
mov
mov
xor
xchg
lahf
insl
push
dec
add
cmp
mov
fwait
mov
and
mov
fcomps
add
cmp
add
dec
mov
call
adc
and
pop
insb
cli
jmp
out
jg
and
test
push
movsb
scas
js
mov
lret
xchg
adc
adc
xlat
std
sub
mov
hlt
outsb
or
andb
arpl
je
sbb
lcall
lahf
stos
hlt
and
and
scas
xchg
shll
jmp
sarl
dec
sub
dec
mov
in
jp
jno
in
xchg
inc
fidivrs
test
lds
js
fbstp
push
imul
pushf
mov
xor
sbb
lcall
push
jge
in
or
loopne
xor
xchg
push
ljmp
ret
mov
roll
adc
loop
mov
out
mov
addr16
cmp
inc
test
lods
dec
iret
rolb
xchg
aas
ret
jno
jno
lea
sbb
jbe
sub
cmp
ret
dec
aam
jl
inc
aad
cmp
call
lcall
mov
jle
lods
add
xchg
or
add
push
imul
push
int3
xor
les
sarb
pop
dec
std
jmp
push
les
and
cmp
outsb
ret
sub
sub
cltd
leave
bound
adc
or
xchg
lock
mov
dec
dec
add
adc
cltd
or
cld
icebp
call
adc
push
hlt
cmp
mov
push
mov
aam
inc
push
cli
icebp
jo
xor
cli
std
push
mov
add
xchg
ret
in
push
add
lret
das
sub
loope
jnp
test
lcall
ljmp
xor
cmpsb
data16
xchg
dec
sbb
xchg
sbb
mov
dec
cmc
or
cmp
xchg
cmpsl
ja
aas
jnp
les
repz
repnz
repz
xor
bound
adc
dec
imul
pop
jle
andb
hlt
negl
es
insl
aaa
ret
xor
xchg
add
xor
adc
jnp
xchg
insb
adc
fdiv
stos
lods
icebp
cwtl
inc
dec
pop
orb
cmp
sbb
or
insl
enter
push
out
dec
clc
push
test
mov
cltd
inc
jp
test
or
add
cmp
addb
add
xor
nop
das
and
push
cmp
leave
out
ljmp
mov
fadd
xor
inc
jmp
btr
rcrb
push
in
leave
rep
sub
es
ret
sbb
jge
sti
mov
call
add
orl
pusha
loopne
roll
lret
mov
fs
aad
hlt
xor
out
in
sbb
test
loope
adc
ds
out
leave
mov
fnsave
leave
cltd
ficoml
fs
test
adcl
arpl
and
jmp
cmp
call
cmp
unpcklps
push
xchg
dec
lret
and
mov
movsl
sub
mov
pop
fmull
dec
ret
jg
repz
cli
or
pop
sbb
push
pop
inc
cmp
jnp
aas
js
test
xchg
or
shl
in
jle
lcall
or
aam
movsl
sbb
inc
mov
std
movsl
sbb
imul
lea
ss
pop
je
repz
push
mov
sub
testb
mov
lret
jg
subb
xlat
pop
add
mov
jns
mov
jle
xor
addr16
or
jbe
xchg
pop
js
xchg
fcomip
mov
jl
inc
jmp
lret
in
add
mov
push
mov
in
xlat
fsubrl
mov
sbb
or
mov
inc
ret
mov
data16
pop
and
adc
out
and
outsb
fcoml
mov
rclb
pop
lret
and
pop
pop
and
test
ret
pop
xorb
jo
call
sbb
mov
sbb
sbb
scas
and
and
std
jg
xchg
adc
dec
ficoml
pop
ja
loope
sub
cmc
gs
int
loop
ffree
inc
xchg
loope
mov
pop
cmp
cmpsb
mov
cld
xchg
or
push
cld
rcrb
fldt
in
fists
test
test
sbb
and
jns
or
and
sbb
sbb
neg
testb
orb
idivb
jns
aad
adc
mov
cmp
jae
test
sti
aam
jmp
addb
test
in
jbe
ss
add
jb
cltd
or
ss
cmp
sbb
outsl
add
sbb
out
popa
jg
in
test
cmp
cltd
mov
outsb
mov
mov
shl
adcb
jae
mov
cli
dec
lret
jbe
add
add
sbb
out
xchg
ljmp
les
push
fs
lret
mov
sbb
cs
stc
jl
jo
jae
leave
shr
popf
inc
filds
adc
scas
lock
negb
arpl
mov
and
mov
dec
enter
jo
loop
push
push
cmp
xorb
adc
out
out
jmp
mov
leave
cmpsb
jl
or
sti
mov
xor
push
cli
sbb
into
fs
sbb
jo
mov
and
xchg
sub
idiv
adc
outsl
imulb
lahf
iret
push
call
into
shlb
out
inc
or
popa
ret
xlat
in
sbb
sub
fmull
lcall
popf
filds
cmc
mov
xchg
ret
push
repz
pusha
push
lods
mov
test
mov
push
lcall
addr16
lcall
sahf
inc
dec
pop
ret
rclb
xchg
movsl
jge
and
sbb
fisttpl
insl
sti
add
rcrl
dec
fs
pop
or
popa
mov
rcrb
sub
in
lods
int3
in
int
xchg
leave
call
or
mov
rolb
mov
in
clc
mov
je,pn
or
ja
lds
fcmovnb
test
arpl
inc
jmp
call
in
xchg
add
xor
int3
pop
jecxz
mov
xchg
mov
mov
icebp
fistpll
insb
add
hlt
stos
rorl
mov
push
mov
xchg
test
cltd
std
pop
sbb
js
ret
rolb
lods
popf
into
push
jl
enter
push
dec
es
mov
dec
data16
jecxz
in
adc
cmc
sub
leave
push
mov
or
or
mov
xchg
push
mov
push
push
in
add
testl
fwait
ficompl
loop
inc
repz
xorb
popl
sbb
in
mov
inc
mov
mov
mov
mov
pop
arpl
sub
pop
mov
fldl
movl
and
or
jg
adc
call
lcall
imulb
mov
adc
dec
pop
sub
pop
push
subb
stos
out
push
mov
xchg
imul
mov
je
pop
outsb
not
mov
lcall
cwtl
pop
xor
test
jmp
adc
fmul
pop
jno
xor
stos
or
jo
stos
adc
imull
cwtl
and
xchg
xlat
and
jp
xor
inc
or
cli
shl
or
mov
es
gs
ret
addl
jnp
lds
scas
test
jnp
push
adc
fistps
jne
sbb
xor
cmp
and
sbb
mov
lcall
cmp
stc
xor
test
add
push
ja
jge
dec
cmp
in
sbb
jbe
xchg
out
jle
mov
div
test
stc
push
mov
jb
push
cmpsl
mov
xchg
push
mov
jg
clc
andb
pop
loop
lcall
cmp
stc
pop
sahf
iret
in
hlt
mov
push
data16
mov
jns
iret
les
add
scas
lock
cmp
inc
enter
cld
jle
sub
mov
add
and
xchg
xor
jl
lret
cmp
mov
int3
fdivrs
test
lret
mov
lret
xchg
xor
jbe
xor
mov
ret
xchg
hlt
dec
add
daa
ljmp
out
push
sub
dec
ret
xchg
test
push
mov
lods
push
addr16
in
icebp
shl
cmp
inc
stos
call
call
repnz
jnp
push
inc
jecxz
fidivl
push
and
lret
fistl
lea
sbb
lods
test
sarb
jl
jp
fwait
aas
subb
add
mov
add
scas
test
sub
or
and
and
add
cmp
stos
jb
xchg
gs
scas
xchg
mov
and
repnz
sub
mov
in
aad
xor
iret
pop
inc
les
adc
jno
leave
inc
fmuls
ss
jnp
pop
std
mov
and
mov
es
clc
adc
lret
or
lea
xchg
sbb
mov
mul
mov
pusha
sarl
jnp
icebp
inc
test
mov
xor
aas
and
nop
loopne
xchg
sbb
push
inc
sbb
mov
lds
add
movsb
cltd
fstpt
hlt
mov
out
cmp
movsb
je
mov
fidivl
cmpsb
out
repnz
mov
xor
mov
xchg
aad
aas
call
push
int
lods
jne
xchg
jns
add
dec
mov
or
roll
mov
pusha
mov
scas
lcall
aad
mov
sub
mov
jo
mov
jae
and
data16
in
mov
lock
mov
ljmp
out
cmc
push
fwait
rcl
jmp
inc
inc
or
test
sahf
loope
mov
in
cmp
or
lcall
sub
mov
out
dec
xchg
push
iret
inc
test
popa
mov
fld
and
pop
imul
inc
popf
inc
cmp
or
in
sbb
jg
pop
adc
popa
xchg
push
mov
lea
ljmp
add
push
xchg
out
lcall
ret
and
je
rolb
add
jmp
mov
les
or
mov
int
jle
cmp
adc
popl
push
add
pushf
mov
insb
insb
xchg
popf
ret
jmp
mov
jne
pop
sub
add
sub
bound
cmp
aad
ret
negb
pop
adc
leave
mov
or
fbstp
push
imul
cld
add
sub
fwait
mov
add
inc
dec
inc
arpl
into
clc
sub
aad
push
cmp
push
mov
sti
mov
mov
call
pop
lahf
jl
mov
out
js
add
test
je
sbb
mov
ret
test
jae
in
insb
or
and
bound
push
add
and
jo
into
int
pop
or
pushf
into
into
nop
sbbb
sti
icebp
repnz
mov
add
mov
mov
xchg
jp
sbb
sub
jmp
sub
or
das
clc
mov
movsl
cmp
mov
sarb
test
inc
ret
outsb
pop
lcall
scas
add
jnp
and
dec
or
movsl
mov
insb
xorb
sbb
xchg
sub
ret
stos
lahf
adc
pop
out
and
jmp
repnz
std
rolb
xor
dec
xor
cmp
out
sub
outsl
and
add
out
push
loop
daa
jle,pt
pop
jl
inc
xchg
shrl
popa
test
mov
and
dec
xor
sub
xor
adc
iret
pusha
out
cmc
in
mov
js
popf
lcall
imul
cmpsl
jp
and
fdivrs
add
pop
mov
std
fs
std
je
xchg
jb
pop
jno
pop
in
in
mov
cmpsb
scas
push
push
and
out
scas
out
scas
xchg
sub
cld
xlat
mov
imul
cmp
test
cwtl
mov
jnp
cmpb
enter
or
fistpll
pop
mov
cmp
dec
inc
insl
lods
bound
in
sarl
hlt
pop
daa
fsubs
dec
lods
or
ljmp
fdiv
push
fisubrs
in
pop
fnstcw
mov
pop
lock
sub
xchg
xor
cmp
pop
mov
mov
add
jmp
mov
fstps
xchg
mov
data16
mov
imul
stos
dec
push
add
mov
mov
sub
jl
and
adc
xchg
leave
pop
aaa
ror
test
jae
dec
in
or
stos
and
neg
or
jg
sub
pop
gs
sahf
inc
std
mov
xor
sbb
mov
fidivl
scas
inc
in
cmp
je
fwait
aad
adc
adc
jg
and
cs
sub
je
or
jge
cmp
std
out
popa
lock
inc
rolb
or
jmp
gs
movb
cmp
ret
mov
xor
cmp
xchg
shl
lds
int3
lea
or
mov
sbb
cmp
mov
adc
push
mov
test
cmp
test
std
push
sub
outsb
mov
sbb
push
fldenv
xchg
les
dec
into
jge
clc
arpl
mov
mov
lds
push
push
mov
rcrl
pushf
lret
in
mov
call
sbb
rclb
fs
push
divl
in
inc
mov
sbb
test
sub
jle
inc
push
push
rcll
sbb
mov
rcr
jle
pushl
in
lcall
adc
xor
ret
mov
fisttps
xchg
xchg
ret
sbb
push
nop
test
cmpsb
dec
sbb
mov
testl
cmp
jae
dec
sbb
jne
inc
or
faddl
or
call
ret
shl
push
cltd
adc
xor
cmovg
jb
jno
mov
push
jno
insl
sub
inc
mov
adc
dec
fiaddl
mov
mov
cmpsb
dec
xchg
xchg
repz
and
and
std
daa
imul
jnp
inc
xor
pop
stc
loope
xor
pop
xor
or
enter
push
icebp
std
out
push
out
dec
sti
lods
fildl
out
fs
rcrb
movsb
dec
js
js
adc
cld
mov
xchg
pop
stc
inc
int3
ret
stc
jecxz
cmpsb
jno
push
arpl
mov
mov
js
mov
mov
inc
ljmp
leave
xor
mov
mov
mov
das
push
addr16
mov
jbe
test
sbb
adc
inc
sub
xor
push
pop
lret
repnz
push
push
lret
ljmp
aad
scas
push
xchg
mov
cld
sti
arpl
mov
in
sbb
fs
pop
add
add
out
mov
inc
bound
loope
add
or
hlt
sbb
mov
pop
push
dec
mov
cmc
xchg
lods
pushf
pushf
lahf
xchg
mov
sub
cmp
pop
shrb
mov
pop
bound
jo
ss
add
lcall
and
movsb
aaa
cmp
pusha
rcll
movsb
push
es
mov
push
into
xchg
inc
insl
sbb
orl
mov
out
decb
mov
pop
decb
test
and
out
adc
iret
dec
xchg
push
xchg
pop
dec
addr16
lret
repz
xchg
pop
shrb
imul
out
rorl
add
daa
lds
jno
push
push
push
or
inc
movsl
xor
jbe
dec
and
rclb
gs
loope
fcoms
repnz
jb
je,pn
imul
jnp
dec
pop
pop
sbb
pop
jg
movsl
sbb
fnsave
inc
sub
outsl
xchg
cwtl
xor
mov
sub
scas
push
lret
and
push
inc
pop
or
sbb
test
adc
hlt
push
scas
lcall
xor
cmp
test
out
aas
adc
aad
xor
sti
xchg
jns
nopl
mov
sbb
mov
inc
rorb
mov
popa
push
xchg
sub
cmp
std
in
std
fs
xchg
insb
or
loop
jns
mov
movsl
sub
lock
call
push
es
ljmp
push
cmp
dec
pushf
bound
pop
jmp
ret
aad
pop
inc
rclb
inc
cmpb
fwait
push
scas
dec
cmc
dec
jbe
cmpsb
adc
aas
loopne
lret
fisubs
cmp
sbb
mov
xor
es
lret
add
test
loope
add
or
loop
jne
xchg
ss
sub
in
bound
and
into
inc
add
sub
add
dec
inc
ficoml
std
mov
cmp
les
out
lock
cmp
jbe
ss
ret
add
mov
inc
push
xchg
add
stc
mov
jne
ds
leave
push
xor
jg
jne
xlat
fcmovnb
mov
aas
call
jecxz
mov
cmpl
lret
inc
das
mov
std
dec
cwtl
popa
sbb
jecxz
xor
int
mov
mov
pop
push
mov
daa
adc
mov
mov
aas
sub
call
mov
cs
jne
shlb
test
mov
adc
pusha
stos
ja
sbb
fcomps
js
dec
push
lret
push
pop
jmp
pop
cwtl
jmp
repnz
clc
mov
add
imul
mov
add
lds
dec
jns
inc
loopne
ja
out
dec
mov
jnp
fsubrp
adc
adc
jl
mov
das
out
adc
sub
or
jbe
data16
lods
push
fists
pop
sbb
adc
add
ret
out
xor
out
and
arpl
xor
jo
xor
xchg
lret
mov
pop
shrl
imul
arpl
jg
cmp
fwait
int3
js
gs
xor
ret
and
out
push
mov
mov
jo
or
sub
mov
add
stc
pop
scas
adc
insl
pop
fdivrl
xchg
ss
ljmp
les
xor
fs
xchg
iret
cmp
and
mov
push
add
leave
dec
pop
ss
jo
jmp
lret
lcall
sbb
sub
inc
mov
aas
sbbb
sbb
jne
jne
xchg
sub
mov
or
pop
daa
lcall
fistps
add
lcall
aaa
xor
xchg
mov
push
inc
and
add
mov
dec
cmp
cmp
pop
ds
cmp
dec
notb
fwait
les
loope
loope
fcoml
adc
mov
icebp
movsl
jp
add
stos
push
cli
adc
inc
inc
cmp
mov
xorl
dec
cwtl
or
adc
and
push
xorb
push
push
xor
or
jnp
cs
sub
sbb
pop
ds
movb
je
sub
in
cmpsb
lret
jno
adc
lea
jmp
adc
mov
cmp
ret
cwtl
push
lahf
or
mov
into
icebp
xor
mov
xor
sahf
jbe
jb
push
dec
cs
lcall
imul
add
mov
sti
mov
out
push
cmp
in
cmp
add
scas
sahf
aaa
adc
test
mov
pushf
and
add
ret
jae
jno
lods
dec
imul
loopne
lods
mov
loope
pushf
jmp
dec
cld
es
and
movsb
lahf
js
push
test
xor
xorb
mov
xor
mov
push
dec
outsl
bound
mov
mov
lret
jb
insb
hlt
inc
fs
fisubs
icebp
sar
push
pop
lret
sbb
sub
fimuls
mov
pop
inc
cmp
push
stos
rclb
sbb
out
pop
xchg
pushf
push
push
insb
arpl
inc
adc
inc
adc
jns
mov
push
add
sub
jno
push
nop
outsb
std
cs
loope
mov
push
and
mov
sti
sbb
xchg
inc
xor
jle
jp
jmp
push
sbb
aad
cmp
fwait
mov
push
adc
pop
inc
andb
sbb
arpl
cs
add
fcompl
test
and
fs
ret
test
or
sbb
pop
sub
movsb
int
sub
and
in
outsb
sahf
ret
mov
sub
stos
jmp
push
mov
fisttpl
or
dec
cs
icebp
lahf
jle
and
sbb
push
xor
xlat
or
push
pop
mov
js
add
sti
lods
es
mov
pop
sbb
sub
jae
push
mov
dec
fwait
xlat
aad
cmp
rcll
sbb
nop
push
push
cmc
mov
or
xchg
pusha
and
pop
add
and
out
pop
jb
mov
in
in
add
ret
fiadds
jb
fstpt
out
repz
stc
in
cmp
mov
xchg
or
pusha
lret
add
lcall
mov
aad
xor
je
push
and
sarl
inc
xor
fistpl
stc
bsr
cmp
jnp
or
movsb
or
sbb
sub
daa
push
imul
stos
outsb
mov
xor
mov
fadds
mov
or
mov
andl
lret
add
imul
shlb
pop
xchg
shll
lea
out
fbstp
mov
fs
dec
idivl
or
scas
mov
jb
jo
loopne
sbb
movsl
push
ds
int3
inc
roll
push
sahf
fstpl
inc
or
mov
cmpsl
jb
push
jp
mov
lgs
pop
addr16
das
arpl
stos
jmp
xchg
cmpsl
fisubrs
adc
movsl
sbb
outsl
pop
jge
out
or
push
jmp
push
fiadds
push
xchg
cmp
out
push
gs
fs
inc
sub
mov
jmp
pusha
gs
insb
imul
popa
add
cltd
and
add
hlt
out
mov
inc
mov
int3
push
daa
fwait
adc
sub
add
stos
cmp
bound
outsl
xor
pop
push
icebp
popf
stc
stc
rol
inc
out
push
loopne
pop
loop
popf
aam
jecxz
and
push
addb
pop
rorl
ja
mov
jns
ret
cltd
push
fstps
sbb
test
cmp
cmp
ret
pop
push
xchg
cmp
movsl
jge
jecxz
jns
xchg
sub
insb
sbbb
out
jmp
dec
lds
mov
sti
cmpsb
push
in
ror
cmc
push
dec
push
sub
or
mov
inc
out
add
cs
push
cltd
cs
mov
aad
out
pop
lods
js
add
xchg
orl
cli
fdivs
sbb
and
sahf
pop
rorl
sub
lock
daa
loopne
mulb
loop
mov
cmp
jno
add
mov
pop
xchg
jne
jmp
test
mov
cmp
adc
sbb
mov
push
enter
gs
push
jecxz
mov
cld
rorl
decb
stos
lock
jae
loopne
cmp
xchg
and
stos
pop
pop
adc
inc
xchg
hlt
xor
dec
xor
pushf
lods
mov
dec
popf
cwtl
punpcklwd
cld
xchg
bound
test
mov
shll
test
test
inc
mov
xchg
xchg
xorb
mov
jp
sub
add
lret
xchg
stc
fmuls
fnstenv
aam
filds
push
xchg
sti
dec
dec
or
sbb
sbb
xor
ds
mov
inc
add
add
sarb
fcomps
or
shlb
repnz
lret
mov
insb
sub
xor
jecxz
out
xchg
mov
xor
pop
loope
jo
jae
lahf
sbb
mov
sub
out
jbe
jecxz
cwtl
jg
loopne
sub
cs
push
xchg
mov
test
bound
xchg
cs
dec
in
push
hlt
xchg
or
and
js
hlt
jno
stos
mov
inc
loopne
mov
sbb
jnp
mov
out
lock
xor
sub
fwait
repnz
dec
or
int3
xchg
xchg
insl
jo
fld
ja,pt
sbb
out
push
out
pushf
xor
push
or
pop
ret
push
mov
es
fldcw
cmpsb
mov
pop
fidivs
mov
dec
mov
pop
cltd
repz
add
xchg
mov
loop
inc
cli
cli
adcl
roll
inc
inc
cmp
scas
or
fs
jb
inc
icebp
mov
imul
repz
lock
xchg
inc
stos
mov
and
test
dec
imul
outsb
push
mov
and
jp
jae
push
pop
popf
fdivrs
jb
pusha
lds
dec
loopne
stc
outsl
fisttpll
inc
ljmp
jae
cmpsl
call
imul
add
aad
stos
pop
pop
add
mov
arpl
xchg
xor
test
xor
mov
mov
sarb
mov
adc
jmp
nop
aas
test
or
lods
xchg
sbb
jp
xchg
push
xlat
lock
bound
in
mov
mov
adc
add
jg
repnz
push
jle
ja
sbb
mov
mov
inc
pusha
pop
pop
rcll
mov
jge
adc
js
cld
xor
pop
notl
sbb
cwtl
sar
mov
mov
loop
nop
div
and
int3
hlt
stos
adc
xchg
jle
gs
pop
dec
cld
aaa
mov
sahf
gs
jg
jge
and
fcompl
cmp
adc
adc
and
push
repnz
jae
or
and
jl
mov
inc
push
inc
sbb
mov
adc
int3
insl
ljmp
inc
inc
clc
inc
movsl
or
xchg
xlat
lods
cmpsl
cmpl
adc
insb
jae
std
jae
add
decl
add
movsb
or
xchg
xor
incb
pushf
jns
xchg
fisubs
outsl
mov
or
jecxz
inc
inc
add
sbb
pop
sarl
cmp
lea
mov
pushf
lods
les
adc
xchg
mov
adc
cmp
sahf
cltd
xchg
push
dec
mov
cld
js
cmpsl
lea
outsb
fldcw
xor
xchg
and
pop
fstl
das
or
call
or
test
sub
jnp
ss
dec
js
adc
mov
sbb
sub
test
test
sub
jecxz
or
fldl
pop
and
pusha
cmp
push
ficoms
dec
jg
jmp
mov
and
push
out
gs
loopne
fildl
outsl
lods
psubd
shll
pop
xor
pop
inc
pushf
sarb
or
rol
fsubrp
xor
insb
cmp
dec
adc
ret
push
out
cmp
ret
jle
mov
test
or
or
jo
pop
xchg
into
sbb
and
jns
xchg
enter
lcall
test
dec
je
fucomip
xor
add
out
jge
or
sahf
scas
out
inc
scas
sub
cwtl
jb
cli
sbb
cmpsl
mov
add
cmpsl
sub
lret
movsl
adc
sbb
xchg
mov
std
and
fnstsw
xchg
stc
loopne
sub
or
call
sub
pushf
enter
pop
sahf
push
add
push
dec
inc
inc
loope
roll
movsl
data16
insl
sbb
sahf
mov
push
std
pusha
repz
pop
int3
int3
mov
mov
imul
clc
pop
mov
dec
sub
add
in
mov
sub
cmp
lods
ficompl
lret
xchg
mov
dec
sub
and
jno
xchg
lcall
push
mov
add
rcl
fnstenv
cmc
cwtl
mov
add
gs
sub
add
push
outsb
nop
cltd
pop
sti
xor
sahf
push
sub
push
inc
ret
dec
stos
push
outsb
fstp
cmp
pop
mov
std
rclb
stos
inc
mov
jae
pop
xchg
jb
jnp
or
cmp
or
mov
ja
xor
mov
enter
rorb
dec
mov
test
filds
orl
cmp
shrb
dec
mov
and
sbb
or
mov
rcl
loope
por
insl
lods
rorl
push
outsb
pusha
lods
jmp
jbe
test
jno
repnz
adc
jmp
cmpsb
push
adc
fildl
mov
mov
dec
xchg
sbb
insb
jb
in
scas
enter
je
aaa
or
xor
test
pusha
xor
pop
or
inc
inc
leave
jecxz
mov
icebp
jge
ljmp
add
movsb
mov
push
fsqrt
icebp
test
test
pop
scas
xchg
loop
imul
or
xor
js
subl
mov
movlps
jmp
out
add
fcompl
mov
mov
int
andb
cmp
add
test
pop
adc
add
sbb
jno
adc
mov
ret
mov
cltd
pop
jge
mov
mov
xchg
fisubs
cld
aaa
pusha
pop
adc
fwait
push
add
clc
adc
pop
mov
ret
inc
mov
iret
rcll
xchg
rcll
jno
jno
out
sahf
mov
mov
and
rcrb
cmp
pop
pushf
je
mov
imul
mov
inc
jle
and
cmp
lahf
mov
xchg
pop
sahf
cs
lods
dec
xchg
int
xchg
mov
fiaddl
int
sbb
popf
ret
lods
das
mov
out
sbb
ret
aam
adc
xchg
xchg
mov
mov
aaa
and
aad
std
out
int
pop
cmp
and
sub
shlb
sbb
fwait
call
inc
adc
mov
and
rsqrtps
pop
hlt
scas
ljmp
cmp
push
fucom
rolb
jne
mov
popf
cld
sub
lea
pop
push
and
loopne
pop
sbb
inc
icebp
cli
mov
xor
popf
repnz
cmpsl
into
in
mov
mov
lcall
jbe
fisubs
out
shrb
inc
add
jecxz
inc
jmp
and
cmp
test
adc
push
jno
pop
scas
jl
sub
push
push
lcall
adc
cs
icebp
ds
add
test
xor
dec
stos
cmc
gs
mov
sub
cli
es
cmp
call
pop
mov
dec
adc
push
test
fwait
cmp
add
lds
roll
dec
push
repz
mov
mov
add
xchg
jle
in
jb
sub
jecxz
fs
repz
pop
pop
rcrl
fbld
pop
outsl
cs
enter
mov
loop
inc
imul
sbb
gs
in
and
je
dec
mov
jb
shll
jecxz
sahf
pop
jns
mov
xchg
stos
xchg
popw
or
adc
push
je
clc
xchg
rclb
xchg
mov
ficoml
scas
fidivrs
ret
movl
int
cmp
jle
pop
mov
sbb
jg
lds
xchg
or
sub
test
cs
mov
es
push
mov
sbb
dec
cltd
xor
mov
lcall
mov
test
lods
mov
das
in
cmp
jmp
jns
repz
mov
jb
mov
cmc
cli
mov
push
and
jmp
pop
cmp
sbb
jmp
and
jb
cmp
js
add
mov
cmp
ret
lret
or
ljmp
hlt
dec
mov
push
rorb
jbe
xchg
push
bound
nop
mov
adc
inc
adc
jne
in
cld
push
ret
pop
mov
out
cmp
scas
out
shl
orb
adc
dec
roll
test
sbb
sbb
gs
mov
ret
sbb
std
jge
lcall
repnz
shll
cmp
rcrb
mov
aas
or
xor
in
inc
filds
mov
daa
pop
sti
pop
jnp
ror
movsb
ficoms
out
push
xchg
jnp
or
mov
std
mov
inc
mov
cmp
ljmp
loope
js
andl
add
mov
imul
aad
stc
mov
jns
jnp
nop
jmp
cmp
jno
adc
push
lods
js
icebp
fisttpl
jge
push
adc
cmp
or
lret
dec
xchg
es
sbb
jp
jp
out
jl
jl
filds
pop
and
jb
jmp
ficompl
lds
jl
arpl
jnp
scas
or
jbe
ret
push
push
iret
dec
mov
pop
cmp
insb
adc
cmc
add
js
dec
fldt
fimull
jle
mov
repnz
mov
scas
call
enter
adc
mov
clc
xor
cmp
lds
adc
sbb
add
stos
xlat
ret
mov
lret
scas
adc
or
mov
add
jg
sub
test
jmp
lds
push
insb
daa
add
xor
into
push
mov
mov
mov
repnz
mul
rcrb
mov
inc
jno
insb
xor
inc
roll
test
and
div
shlb
mov
dec
cmp
cmp
mov
fs
cmp
mov
out
scas
mov
adc
dec
sarb
sub
out
rolb
data16
cs
jae
stos
inc
push
inc
dec
xchg
or
pop
ss
or
and
arpl
dec
in
pop
xor
push
sbb
cmp
aam
push
or
fildll
xor
adc
lods
test
lock
or
mov
push
ljmp
out
cmp
mov
pop
mov
loop
imul
loopne
jb
push
xor
mov
xor
lods
ret
into
shrb
lcall
push
xchg
jno
std
mov
jle
push
adc
inc
js
aad
or
shrb
pop
pop
scas
in
in
add
andl
inc
dec
loop
rorl
cltd
pusha
aaa
dec
cli
inc
jbe
std
popa
ds
popf
dec
xchg
sbb
jg
sub
sub
inc
fidivrs
cwtl
into
xchg
mov
mov
or
scas
mov
xchg
xor
fnstenv
sbb
jmp
dec
imul
jp
jbe
rcrl
mov
sub
push
push
scas
int3
cmp
mov
mov
roll
pushl
add
scas
sbb
add
out
pop
push
or
push
sti
sub
insl
aas
in
movsb
jle
sub
aam
mov
and
subl
mov
jne
and
cli
xchg
inc
fcmove
sub
inc
sbb
mov
lret
js
lahf
das
adc
mov
adc
push
cmc
mov
repnz
dec
insb
mov
push
outsl
enter
pop
dec
movsb
andnps
and
dec
loope
add
add
push
jecxz
addr16
sti
inc
jae
jl
in
pop
in
mov
mov
bnd
movsl
fisubl
dec
mov
lds
andl
mov
or
mov
pusha
pop
fsubrs
repnz
loopne
movsl
jecxz
xchg
pop
inc
pop
lods
icebp
add
mov
adc
push
cmp
push
das
dec
xchg
mov
and
fldcw
adc
pop
cmp
adc
fdivs
sub
cwtl
lret
pop
sbb
push
aam
leave
dec
sbb
fnstsw
jo
xchg
es
ss
bound
fistl
fs
bound
int3
insl
mov
xor
mov
stc
loopne
out
addb
insl
sub
mov
notb
aaa
inc
data16
adc
icebp
and
aaa
sbb
shll
xor
pop
pop
test
inc
sbb
xchg
pop
stos
ss
sti
jnp
cmp
push
ffree
dec
rcll
jmp
ss
add
jo
cmc
gs
mov
or
cmp
mov
jle
bound
lods
hlt
test
popf
les
std
jle
rcr
test
mov
gs
push
push
mov
add
clc
jno
sti
fldt
lods
push
std
xor
mov
mov
repz
push
subb
pusha
icebp
ds
push
or
mov
gs
jae
jle
lods
xchg
lahf
lcall
sbb
lcall
int3
push
xchg
pop
or
lds
shl
and
scas
lods
xchg
dec
mov
outsb
pop
dec
jae
out
mov
sbbb
rol
jl
adc
or
scas
enter
scas
mov
loop
shrb
repnz
add
pop
and
or
jmp
cmp
mov
pop
dec
fists
push
mov
lock
push
shrl
out
ljmp
stos
add
jbe
movl
aaa
icebp
ja
adc
pop
mov
mov
pushf
mov
andb
cmp
xor
pop
cmp
jo
cmp
outsl
andb
cmpsl
sub
popf
test
ret
inc
jle
out
and
test
lahf
lret
repz
or
lea
dec
mov
xor
jne
in
or
xor
sub
pop
test
adc
jbe
and
mov
icebp
sub
clc
in
add
call
or
push
imulb
and
xchg
loopne
cwtl
cmc
and
sti
mov
loope
add
pop
iret
test
dec
addr16
jge
imull
call
or
mov
mov
jbe
jecxz
into
pop
and
mov
in
and
xchg
add
das
inc
pop
xchg
push
mov
cld
pop
test
mov
sbb
cmp
jmp
push
gs
test
rol
add
jnp
ljmp
mov
pop
xchg
in
pop
mov
pop
fnsave
cwtl
inc
das
fisttpl
bound
mov
repnz
pop
leave
icebp
pop
lret
jne
inc
sbbl
adc
or
push
jle
mov
sub
test
repz
dec
jp
jbe
movsl
xchg
adc
gs
and
int3
adc
mov
push
sub
int
gs
lret
push
mov
push
cli
pusha
test
pop
mov
out
or
cmp
or
mov
pop
mov
sbb
pop
xorb
cmc
cs
xchg
lret
daa
adc
arpl
in
lret
push
les
inc
mov
mov
push
mul
cmc
sub
popa
fwait
pop
subb
subl
insb
or
decb
sbb
mov
pusha
gs
inc
xchg
push
cltd
add
push
lods
push
dec
andl
pop
mov
and
test
cmpsl
lcall
cmp
lea
stc
inc
xlat
add
mov
and
shll
inc
adc
outsl
aad
gs
dec
cld
movsb
outsl
ret
gs
dec
adc
adcb
sub
fildll
add
mov
and
push
cmp
pushf
popa
pop
fwait
lods
cmpsl
int
movsl
shlb
or
inc
or
push
js
lcall
adc
jp
pop
or
call
mov
testb
movsb
xchg
mov
dec
movsb
pusha
mov
cmpsl
into
popa
jo
out
sub
lea
sti
mov
insl
decl
pop
dec
push
lahf
bound
adc
or
loopne
in
in
aad
jge
loope
jp
shlb
ret
in
daa
mov
scas
in
dec
enter
cmpsb
sbb
mov
cli
sbb
pop
fwait
das
xchg
and
mov
inc
xor
daa
ror
xchg
inc
mov
adc
divb
adc
inc
and
shll
mov
mov
or
xchg
dec
mov
ret
mov
popl
mov
das
and
mov
das
inc
mov
jns
dec
inc
sbbb
sub
scas
add
and
sub
mov
setl
rol
add
dec
cwtl
push
xchg
arpl
iret
hlt
int
aas
jb
int
jle
out
ja
xor
hlt
arpl
pop
xchg
out
mov
push
xor
insl
add
dec
fidivl
out
data16
aam
pop
xor
in
sbb
inc
mov
int
or
push
jo
imul
jbe
mov
mov
sbb
jl
jne
push
hlt
cmc
pop
or
lock
adc
andb
ret
jg
aam
pushf
push
or
shll
out
andl
ds
cmp
jge
daa
divb
cmp
mov
ret
out
adc
sti
mov
or
incl
jno
jae
push
orl
cmp
push
sub
pop
test
xor
loop
ja
repnz
nop
gs
cmp
scas
adc
in
cmp
jg
add
icebp
mov
cmp
dec
aas
js
mov
mov
xor
mov
cmp
sub
sbb
cmp
xchg
adc
push
pop
xorb
rclb
jg
xchg
or
or
and
jb
rclb
and
xor
pop
mov
pop
push
mov
push
pop
mov
cmpsl
cmpsl
lods
sub
out
scas
xchg
insl
test
in
jns
negb
cs
push
xor
jge
push
sbb
sub
jo
push
pop
movsl
rclb
sbb
or
pop
in
jmp
jg
mov
stos
lods
push
out
mov
add
inc
pop
jecxz
mov
pop
cmp
or
cs
fs
addr16
add
les
add
inc
xrelease
mov
mov
inc
xor
and
mov
mov
mov
sub
pop
and
sub
push
sub
subb
outsb
negb
cli
dec
dec
sbb
xor
mov
or
adc
fstl
popa
xlat
pop
ss
xor
fnstcw
rcr
cmp
dec
push
pop
jns
jp
loope
pop
add
or
cli
and
xchg
bnd
push
test
adc
mov
mov
je
xor
jne
sub
jne
or
lahf
gs
nop
fists
fdivs
or
cmp
repz
scas
out
jno,pn
adc
add
and
xchg
push
in
arpl
cwtl
cli
loope
popa
sbb
mov
mov
xchg
in
mov
inc
lahf
mov
cmc
adc
ret
pop
adc
int3
scas
div
xor
adcb
fs
sbb
loopne
loopne
outsl
rolb
push
mov
dec
push
fdivr
out
fsubrs
shll
js
push
mov
xor
andb
pop
push
mov
jne
sti
ffreep
test
push
ret
jmp
insl
add
push
ret
das
sub
jmp
ja
das
cwtl
fcoms
pop
fwait
mov
cmp
popl
and
mov
es
sahf
sub
scas
lock
add
js
mov
inc
dec
stos
sub
shrl
scas
dec
xor
std
xor
popf
sub
dec
cld
ror
pop
dec
mov
popa
test
sub
scas
and
fisttpl
sub
popf
mov
into
mov
xor
in
mov
or
mov
flds
lea
push
or
cmpsb
loope
cmp
insb
and
add
pop
mov
xor
jg
xchg
mov
push
ja
adc
adc
rol
mov
push
dec
mov
adc
pop
pop
push
jne
pop
mov
add
test
enter
jno
jp
xor
and
pop
out
jecxz
add
lock
and
je
cli
pop
or
push
addr16
adc
and
roll
sahf
cmpsl
insl
test
div
adc
mov
jne
mulb
cmpsb
jne
outsb
and
mov
les
stc
mov
push
shrl
xor
pop
push
ret
sbb
xlat
stos
jle
scas
negb
ljmp
ds
xor
mov
leave
pop
enter
push
mov
sarb
cmpsb
repz
loope
lret
mov
andl
pop
sub
icebp
mov
jmp
or
icebp
lcall
ret
jp
sarl
jno
js,pn
mov
push
adc
push
cli
cwtl
loopne
mov
test
mov
dec
lcall
mov
shll
adc
out
jl
fs
out
lea
pop
adc
pop
fucomp
insl
lcall
sub
int3
dec
lods
xor
mov
mov
adc
scas
pop
jmp
adc
cwtl
sub
in
outsb
outsb
pop
shll
sbb
scas
push
movsb
ret
sbb
fsubs
or
or
xchg
mov
ljmp
add
lods
mov
dec
xchg
adc
je
fstl
lds
pop
fyl2x
std
dec
lret
xlat
push
popa
add
push
ss
cltd
xchg
pop
pop
sbb
repnz
sbb
iret
jb
push
leave
pop
mov
mov
fidivl
jle
push
imul
imul
fstl
jl
lahf
enter
push
in
jb
notb
arpl
adc
imul
dec
loop
rclb
rcrl
fs
mov
cmovne
dec
sti
sub
xlat
mov
clc
outsl
sbb
call
mov
outsl
jae
adc
xor
loopne
fildl
test
into
movsb
into
xchg
imul
int
test
adc
jmp
adc
xor
add
stos
in
sub
push
into
aam
inc
push
rcll
inc
push
add
fnstenv
xor
aad
push
and
in
cmpsb
jno
and
jbe
movsb
dec
jae
and
lahf
sbb
aam
mov
dec
add
leave
mov
or
call
loopne
dec
das
hlt
mull
iret
repz
xchg
test
sub
sub
push
push
xor
idivb
ja
scas
mov
pop
sbbl
in
sarl
rclb
or
push
aam
or
pop
pushf
pop
aam
cli
push
mov
scas
cs
rcl
pushf
ret
sub
mov
andl
pop
add
lret
cs
inc
mov
mov
mov
or
std
aaa
cmc
jp
insl
mov
test
mov
sub
jecxz
mov
outsb
aas
dec
inc
mov
test
jno
or
add
mov
push
lret
pop
lds
repz
jl
rcrl
add
into
push
fsubrl
in
movl
sub
les
test
stos
lret
outsb
outsl
jg
ret
cmpb
out
aam
xchg
aad
test
sahf
mov
nop
and
ret
sub
xor
outsl
iret
jnp
dec
ss
push
add
scas
mov
jno
in
js
cmp
dec
int3
fistpll
aaa
mov
shl
sub
out
add
sbb
xor
mov
xchg
mov
popf
dec
ret
ljmp
mov
idivb
jp
cmp
out
or
dec
or
xor
add
rolb
stc
insb
icebp
inc
int
xor
mov
lods
ds
and
loopne
or
xchg
pop
fsubl
arpl
inc
fwait
lods
movsl
push
dec
ss
jle
xlat
mov
xlat
scas
in
jbe
add
sbb
je
xor
pop
xor
cmp
cwtl
mov
mov
mov
mov
push
mov
mov
push
push
in
push
cli
pop
adc
pop
scas
cld
jge
mov
lods
sbb
cmp
sub
mov
push
inc
mov
shrb
cmpsb
push
int3
xchg
cmp
ljmp
jo
pop
xchg
das
dec
mov
xor
lds
mov
roll
fldl
or
add
mov
fwait
inc
movsb
sbb
xor
adc
inc
mov
xchg
cwtl
pusha
sub
pusha
and
ret
adc
loope
rcl
lcall
outsb
cmp
xor
xchg
imul
bound
sub
imul
das
add
sub
mov
daa
out
frstor
cmp
push
pusha
cltd
inc
cld
scas
fsubr
out
sbb
lcall
pop
iret
orl
jno
jne
push
dec
push
jp
stc
mov
sub
jmp
sarl
sub
mov
dec
enter
mov
pop
gs
cli
dec
test
sub
stos
cmpl
int
inc
xchg
inc
div
js
stos
push
clc
jecxz
mov
xor
pop
cmpsw
test
fists
or
and
pop
enter
negl
rcll
icebp
std
mov
sbb
shlb
rcrb
aas
mov
cwtl
xor
mov
jp
and
pop
and
push
sub
testl
xchg
pop
cli
mov
shlb
mov
nop
loop
je
pop
jb
sti
imul
bound
outsb
jecxz
mov
or
mov
fisttpll
lods
inc
push
cmc
xchg
imul
popf
cwtl
dec
ficoms
mov
dec
in
dec
pushf
xchg
mov
add
out
mov
jg
sub
icebp
xchg
mov
cmp
js
fldenv
sbb
mov
popf
or
shl
sub
jo
mov
dec
jle
cwtl
shrl
xchg
pop
lock
xchg
mov
scas
jp
xor
mov
sbb
dec
xor
cmpl
aad
stos
or
xor
mov
push
movsl
out
aaa
sub
hlt
enter
fwait
pop
addb
ficoms
dec
jecxz
jo
cmc
fsub
cmp
xorl
pop
int
dec
and
add
mov
fincstp
movsb
lds
pop
jmpw
push
jp
fwait
mov
push
sub
daa
xchg
loop
call
mov
enter
push
adc
pop
add
mov
data16
fwait
inc
sbb
adc
out
dec
arpl
sub
out
xor
cmpsl
enter
in
pop
std
pop
xchg
stc
jg
je
jae
je
pop
xchg
fs
push
pop
or
sub
lods
inc
ja
dec
leave
pop
mov
imul
add
ror
sarl
push
inc
aas
sub
push
sub
icebp
fdivr
xorb
out
xchg
rolb
std
pop
fs
mov
sub
push
sub
call
pop
xchg
imul
into
fwait
cmp
pop
outsl
adc
sbb
lods
push
aas
lock
mov
push
enter
out
ds
and
daa
mov
mov
and
jmp
imul
xlat
jp
sbb
push
mov
dec
mov
scas
mov
xchg
cmp
mov
mov
in
dec
pop
and
icebp
push
ljmp
shl
xchg
popa
repnz
sub
iret
mov
inc
loop
into
ljmp
sub
push
adc
mov
and
adc
cli
xchg
jmp
inc
bound
or
jp
stc
xlat
out
mov
test
add
dec
das
in
add
pop
sahf
push
mov
xlat
inc
out
pop
popl
push
inc
mov
sub
and
xor
sbb
pop
sbb
leave
lret
arpl
lods
jg
hlt
dec
mov
inc
jmp
lcall
int
les
jle
ret
and
scas
pop
inc
es
cmovne
test
cwtl
int
mov
pop
or
rclw
dec
test
stc
enter
jecxz,pt
ljmp
dec
mov
ret
cmp
lret
pop
mov
scas
insl
popf
clc
lods
arpl
jmp
pause
outsb
push
xor
xor
mov
jge
push
dec
shrl
inc
stos
fchs
mov
lds
fistpl
push
and
repz
sbb
es
lods
shr
push
xor
push
ljmp
test
mov
dec
jbe
sub
cmc
inc
cmp
xor
xchg
imul
sbb
mov
or
das
adc
mov
and
jecxz
scas
and
fistpll
sbb
jns
test
scas
mov
jmp
sub
add
subl
dec
and
pop
daa
stc
inc
and
fsubrl
movsb
and
cmp
or
push
lock
or
jo
pushf
xor
ja
and
dec
jne
testl
and
loope
inc
cs
insb
fmull
mov
test
out
loope
into
ja
ja
inc
xchg
ret
lock
add
jecxz
mov
push
push
dec
sbb
add
in
or
test
mov
or
test
pop
jle
mov
push
and
sbb
sbb
add
inc
cwtl
popf
stos
pop
inc
lret
mov
dec
stc
jecxz
cmp
xchg
lea
popf
out
sbb
gs
add
arpl
xorb
ss
movsl
fsubrp
or
and
sub
mov
sub
add
push
hlt
outsl
aam
inc
cmpb
js
outsb
xchg
bound
dec
test
andb
faddl
mov
cld
dec
mov
shlb
pop
out
cmpsl
not
lcall
lds
out
jg
dec
push
adc
xchg
inc
ljmp
int3
xchg
loop
cs
push
es
imul
rcl
aad
jecxz
sbb
xor
or
adc
cwtl
leave
jne
hlt
je
jmp
ds
pop
addr16
shlb
cmpb
insb
dec
push
packsswb
cltd
jno
popf
stc
cmp
test
data16
fwait
sub
mov
jne
sub
aam
and
insb
xchg
add
pmaddwd
test
adc
frstor
sarb
mov
fs
incb
cltd
mov
dec
xchg
frstor
jno
ja
mov
push
pop
sti
push
ret
inc
mov
mov
sti
mov
sub
lock
push
and
xchg
in
in
adcb
stos
cmc
adc
xchg
addl
mov
lock
movsb
pop
pusha
jne
mov
adc
pop
lods
fnstenv
scas
adc
lock
xor
lea
pop
lock
ss
insl
lret
dec
rorl
in
aas
addb
ds
add
and
mov
lret
pop
jno
lods
pop
cmp
mov
mov
mov
dec
push
pushf
aad
push
mov
out
rol
cmp
jne
ja
sub
aas
jb
outsb
inc
lea
jmp
cltd
pop
int
js
xchg
repz
into
xchg
dec
or
les
dec
lds
or
cmp
dec
pusha
and
inc
sub
and
int
mov
xor
repz
pop
dec
adc
mov
pop
gs
fimuls
sub
mov
adc
mov
sub
inc
jae
out
pop
and
dec
xor
shl
sbb
clc
jb
aad
in
pushf
cmpsl
stc
sub
and
push
enter
nopl
sar
sub
jg
int
xchg
mov
xchg
outsb
pop
int3
xchg
xchg
sar
add
push
mov
pop
sbb
enter
lea
int
pop
sbb
addr16
push
test
nop
outsl
inc
icebp
out
loopne
mov
out
jbe
int3
inc
arpl
fisubl
mov
pop
cmp
jno
xor
imul
in
test
dec
fldl
das
cmp
inc
push
adc
mov
mov
cltd
out
xchg
xor
dec
lods
xor
mov
pop
mov
mov
cs
sbb
add
add
push
push
dec
dec
jne
cmp
add
shll
pop
scas
stos
outsl
push
leave
test
mov
jne
cmc
lods
xchg
lcall
lock
aam
jl
arpl
dec
jle
jecxz
iret
or
mov
loop
sti
loopne
shlb
mov
mov
jb
cltd
cmpsb
dec
or
fsts
or
out
mov
sub
sub
cmp
in
push
lock
sbb
cmp
mov
repnz
movsl
cld
xor
xor
mov
test
idivb
out
subb
lret
sti
mov
sub
and
sbb
sahf
in
lock
pop
push
push
cmc
push
out
mov
rcll
fnstenv
sbbl
sahf
test
or
inc
hlt
lea
add
jle
pusha
sbb
sbb
stos
out
sub
sub
push
cmc
scas
or
andl
or
out
inc
lret
xor
ret
xchg
sub
lods
aaa
or
mov
jl
notl
jno
or
and
add
movl
int3
mov
movsb
lcall
cmpsl
pop
and
or
adc
and
mov
dec
repnz
mov
mov
loope
xchg
push
lret
pop
adc
adc
fwait
ja
and
pop
movsb
or
fiaddl
dec
push
add
pushf
out
dec
aas
lret
lds
xor
ret
aas
rclb
xchg
pop
loope
movsb
and
daa
xchg
sub
add
ret
fildl
and
fdivrs
cld
lds
in
pop
cs
testb
inc
xchg
psubsw
into
xchg
xor
dec
mov
sub
xor
sub
jae
shll
cld
sub
cmp
outsb
push
jmp
adc
push
test
add
imul
pop
idivb
dec
int
mov
fistpll
mov
or
subl
push
push
fwait
insb
push
mov
pop
cmpsb
ret
sbb
fdivrs
and
rorl
ljmpw
arpl
ficomps
lods
cmp
sar
movb
in
insb
jb
push
add
imul
icebp
sbb
lods
in
adc
movsl
mov
punpckhdq
sub
push
sbb
ds
sub
dec
ja
cmp
xor
sub
and
mov
test
jo
mov
adc
sub
sbb
jo
mov
sbb
xlat
cs
roll
mov
cmp
sti
and
mov
or
add
loope
fcoms
movb
pop
ret
mov
push
add
jb
outsl
inc
ljmp
jge
and
jecxz
jb
std
sahf
rorb
test
or
mov
push
mov
nop
cltd
cltd
xor
pushf
cli
lret
out
and
sbb
sub
cli
mov
or
mov
adcl
inc
lcall
jge
push
idivl
es
mov
stos
dec
or
bswap
inc
sbb
cwtl
push
push
or
push
out
fidivl
xor
cmpsl
aas
and
pushf
push
mov
or
jmp
push
inc
jne
inc
jo
pushf
xlat
std
pinsrw
mov
jo
and
mov
mov
in
int3
test
jmp
xor
adc
ss
jb
aad
nop
or
mov
pop
pop
mov
adc
mov
data16
rorl
dec
push
cltd
decb
xchg
cmpsl
or
aas
jb
jl
cmp
xchg
rcrl
jecxz
mov
pop
lea
adc
push
sbb
push
cmp
add
xchg
call
jp
arpl
dec
cs
mov
sbb
pop
pop
push
and
les
and
mov
movsl
das
in
mov
ret
adc
hlt
mov
push
test
data16
movsb
insl
push
or
stc
jb
in
test
ror
or
add
pop
inc
and
mov
mov
pop
xchg
les
pop
jb
xor
sub
push
cmp
cltd
out
mov
daa
adc
jae
mov
lods
inc
lock
and
popf
dec
test
lds
and
dec
adc
mov
mov
mov
sub
es
pop
pop
add
mov
push
jb
rolb
fs
movlps
pop
sti
jmp
outsb
adc
pextrw
es
mov
adc
adc
decl
pushf
mov
xchg
push
jbe
push
jl
xchg
rorl
mov
mov
pushf
arpl
cmpb
add
push
dec
lods
jecxz
jle
xchg
mov
jmp
addr16
mov
mov
push
and
in
dec
in
in
cld
fstpt
add
imul
mov
in
xchg
adc
mov
std
js
adc
out
stos
in
sub
inc
test
call
and
cmp
add
loop
out
lret
into
iret
dec
sub
pop
fistl
dec
sub
cs
hlt
mov
sub
and
imul
add
movsl
stos
push
cld
cs
addr16
outsb
divb
adc
sti
hlt
add
mov
lret
cmpsl
in
lea
adc
pushf
sub
jg
push
dec
add
stc
xchg
sbb
sbb
pop
push
in
pop
jg
push
jb
jb
jne
adc
in
aas
fsubrs
jae
sub
push
xorl
sbb
xlat
ficoms
xchg
pop
xor
imul
jae
pop
test
dec
ljmp
xor
sub
cwtl
dec
xchg
insl
in
mov
mov
lea
shll
shlb
jge
lret
data16
mov
mov
add
mov
sbb
fcompl
add
sbb
js
popa
xchg
and
pop
cmpsl
fwait
popa
int3
push
lods
add
mov
push
shll
xchg
cmp
jg
cmp
stos
cwtl
jg
push
mov
ret
int
leave
lahf
inc
mov
jns
lret
pop
mov
aad
inc
repnz
rcll
xchg
mov
pop
rorl
sbb
in
bound
sub
into
dec
xchg
pop
ja
std
sbb
mov
mov
notb
paddsb
jge
add
je
push
jmp
popa
cwtl
dec
xor
push
push
shrl
adc
jne
ret
mov
push
out
jnp
test
lea
fisttpll
cmp
daa
or
ret
lahf
insb
xor
cs
add
add
jae
test
jno
dec
xchg
in
or
cmpsb
data16
pop
fsubrs
cli
sbb
iret
mov
int3
sub
adc
cs
and
push
cwtl
push
pop
mov
mov
push
mov
into
rcrl
repnz
ret
out
out
add
bound
pop
inc
xchg
leave
clc
decl
arpl
imul
stc
dec
loop
mov
sarb
and
xchg
das
es
pop
rol
and
pop
mov
or
xchg
push
paddusb
dec
mull
pop
jge
loop
adc
cmc
mov
dec
bndldx
inc
jecxz
bound
push
ret
mov
popa
xchg
pushl
jp
lods
adc
mov
loope
daa
lcall
push
inc
fyl2xp1
popa
push
sahf
stc
mov
mov
ljmp
ficompl
mov
pop
sub
pop
in
sar
cmpsl
lahf
orl
gs
mov
mov
pop
nop
mov
pop
sbb
push
ljmp
in
add
push
sbbb
aas
cld
psubq
aam
xchg
sbb
and
scas
aam
mov
sbb
ss
lahf
jecxz
int3
movsb
push
cmc
mov
dec
cmpsb
mov
sub
xchg
sbb
and
mov
inc
jg
ja
pusha
adc
inc
cmp
bndstx
mov
pop
and
push
lods
jl
mov
lcall
lcall
lret
adc
js
xor
movsl
jecxz
movsb
inc
iret
pusha
std
jmp
test
mov
imul
adc
sub
sti
cmp
push
pop
jnp
negl
hlt
and
cli
popf
scas
pop
lahf
dec
movsb
dec
or
pop
ret
xchg
add
mov
ds
push
inc
lret
fistps
mov
inc
cmp
adc
sti
hlt
mov
mov
xor
rorb
and
add
lods
icebp
int3
xchg
inc
xor
sbb
or
xchg
out
cmc
pop
popa
xchg
push
inc
aad
lret
push
pop
jecxz
daa
add
jp
pop
scas
dec
push
mov
jb
pop
psubw
aad
adc
fisubrs
jmp
out
mov
repnz
jp
pop
out
mov
int3
je
inc
xchg
push
or
lds
loop
push
mov
xchg
pop
lcall
les
dec
popa
clc
gs
sbbb
mov
push
loope
scas
pusha
adc
jle
adc
pop
loop
xor
inc
jl
lods
lcall
imul
cwtl
movsl
push
sbb
nop
dec
xchg
std
or
jns
fwait
xchg
jge
sahf
jle
lcall
ss
xor
sahf
dec
insb
sub
ja
std
inc
call
mov
xchg
lahf
pop
xchg
mov
mov
aad
mov
or
or
dec
add
fsubrs
add
sub
stc
shlb
outsl
mov
fildl
mov
and
or
pop
mov
lahf
jmp
adc
cmc
enter
add
cwtl
inc
jg
cwtl
inc
pop
aas
pop
iret
lea
addr16
testl
inc
add
xchg
out
rcrb
xchg
mov
jb
std
cmp
jns
imul
rcrb
pop
and
insl
push
fidivrs
aam
sbb
adc
pop
mov
xor
mov
xchg
sub
mov
push
push
pop
ret
repz
int3
mov
push
cs
lds
in
scas
or
rolb
out
push
mov
cmpsl
adc
mov
push
scas
push
mov
or
sbb
mov
roll
adc
testl
jp
cmp
mov
jae
test
fldl
xor
lods
jbe
cltd
cmpb
test
push
adc
xchg
xor
mov
sub
cmpsl
jno
or
or
pop
pop
sbb
aaa
mov
sbb
rcll
mov
in
scas
dec
xor
out
sbb
fldt
cli
xor
pop
shl
jno
jmp
mov
repz
mov
ror
mov
xor
cmp
sbb
in
push
pop
adcl
cmp
or
ficoms
push
jmp
out
push
sbb
mov
subb
sub
cmp
mov
pop
repnz
adc
cmpsb
movb
fstp
and
add
gs
xorb
sub
repz
in
cs
add
psubb
mov
fsubrl
lea
mov
cmp
adc
dec
lea
xor
add
mov
rclb
dec
pushf
xchg
into
in
ret
mov
lret
push
cld
flds
sub
mov
xor
sahf
adc
cs
stc
lcall
mov
icebp
stc
push
sarb
fldenv
cmpsl
sub
clc
daa
and
adc
loope
sbbb
pop
lahf
fisubrs
pop
jmp
leave
xlat
js
sbb
or
fyl2xp1
repnz
leave
sub
movsb
mov
sti
outsb
daa
sub
test
or
xchg
ljmp
jno
fisttps
sub
xchg
jmp
int
xchg
sbb
outsb
jnp
push
push
in
test
dec
jg
cld
outsl
adc
mov
mov
int
ljmp
loope
push
jl
sbb
push
out
push
cmp
or
shrl
lea
fiadds
ss
sbb
iret
ror
push
cmp
rcrb
sbb
shrl
shlb
lret
jo
ljmp
les
sbb
pop
cld
mov
jl
push
dec
sbb
enter
push
mov
iret
dec
push
push
push
cmpsb
jnp
pop
pushf
push
cmpsb
je
popa
out
gs
push
pop
lret
scas
cmc
push
mov
daa
push
into
movsb
cmc
push
shll
and
sbb
ss
jmp
fnstsw
pop
pop
fsubrs
call
pop
inc
js
sbb
sbb
fwait
imul
sbb
xor
je
les
mov
pop
dec
jge
inc
cld
icebp
inc
ja
mov
lock
xor
daa
lock
inc
push
adc
cwtl
fnstenv
add
popa
je
sar
push
enter
xor
pop
xchg
xor
int3
cmp
xchg
push
roll
sub
adc
push
mov
fistpll
lods
pop
sbb
mov
out
push
js
push
jae
daa
pop
cs
or
rcrb
sar
lock
mov
aaa
pop
adc
mov
ret
pop
mov
int
subb
and
scas
sub
shlb
ret
popa
movsb
ds
jne
cmpsl
nop
xor
mov
xchg
das
test
jnp
xchg
movsl
ret
push
flds
lods
sti
push
outsb
sub
pop
jp
aad
movsl
loope
adc
push
fwait
jnp,pn
testl
ror
mov
jae
mov
xor
dec
add
bound
inc
cmpl
add
incb
loop
je
cmp
inc
mov
cli
int
andb
mov
cmp
inc
push
dec
sbb
scas
push
stos
dec
mov
clc
pop
mov
jo
push
mov
jl
hlt
sub
es
aam
popf
dec
jne
and
imul
repz
mov
cmp
pop
jns
aad
sub
or
inc
aas
cwtl
pop
pop
lcall
mov
lock
fimuls
jmp
sub
je
stos
xchg
add
push
dec
cmp
jp
add
xchg
int
imul
aaa
mov
sub
add
dec
addl
rcl
fstl
ret
adc
cmp
frstor
mov
jge
mov
jb
mov
bound
sub
stc
pop
hlt
sbb
aad
jbe
in
inc
int
mulb
push
rorl
and
and
xor
add
add
out
inc
xor
pop
xchg
cli
stc
mov
hlt
sub
and
jp
dec
popa
jbe
inc
mov
dec
xor
or
and
mov
dec
les
cltd
leave
push
lods
int
xor
cwtl
decb
ja
push
inc
pop
dec
lret
mov
and
addr16
push
push
rcr
add
inc
ficoml
ret
adc
mov
cmpsb
adc
or
add
xchg
cs
adc
lahf
xchg
test
pop
gs
push
gs
std
push
jo
in
lock
movsl
mov
jmp
jb
addl
lods
into
mov
xor
rcl
and
add
scas
inc
mov
cmp
jge
aad
mov
adcl
pusha
or
mov
jge
out
enter
mov
mov
stc
mov
gs
out
loope
leave
test
addr16
les
cmp
rorb
imul
sub
es
xor
cmp
cmpsb
fstp
push
xchg
add
lock
jle
test
xor
push
jmp
int
mov
mov
in
lods
int3
mov
ljmp
mov
and
xor
or
inc
fwait
sbb
jle
sbb
mov
enter
imul
jmp
fcmovbe
ficomps
mov
inc
outsb
jae
push
mov
cltd
jbe
rolb
into
in
pop
add
adc
pop
pushf
pop
lret
mov
push
insl
xor
pop
imul
jl
inc
loope
les
jp
int3
and
add
dec
push
xchg
cmc
je
fucomip
pop
imul
cmpsb
lods
into
pop
bound
in
aaa
xlat
sarl
out
shlb
test
ficoml
jmp
scas
ret
andl
addb
mov
jle
call
adc
addr16
xor
roll
adcb
pop
pop
jnp
cltd
cs
xchg
into
sub
or
jl
mov
jae
pop
leave
out
jae
add
in
out
movsb
das
repnz
add
fwait
pusha
outsl
adc
mov
leave
test
mov
adc
jmp
cmpsl
popf
fists
sub
lds
sub
rep
sub
test
inc
ret
inc
das
scas
dec
push
lea
push
test
push
dec
testl
sbb
push
mov
inc
iret
jecxz
and
int
in
jb
push
cmp
xchg
mov
add
xor
lcall
fisubs
popa
lods
or
inc
cli
push
jg
mov
mov
daa
add
jp
cwtl
add
ret
sub
sahf
mov
sahf
dec
scas
addr16
or
loope
out
sbb
sub
insl
xchg
pop
push
xor
cwtl
jp
push
xchg
jb
inc
in
push
inc
ljmp
pop
pop
sbb
sub
pop
sbb
pop
xchg
jns
xchg
fdiv
mov
ret
jle
into
mov
mov
icebp
xor
cmp
divl
sub
es
mov
std
ret
pusha
mov
int
push
pop
hlt
pop
push
pop
xchg
xchg
jns
jno
aam
add
mov
add
in
dec
jo
ret
mov
jno
mov
xchg
les
aad
sub
dec
lret
xor
leave
pop
mov
stos
sbb
xor
stc
iret
insl
push
dec
aaa
push
in
cmpsl
jp
inc
andb
aam
push
ss
stos
lods
sub
popa
insl
push
ds
dec
insl
xchg
lea
inc
sbb
flds
insl
flds
xchg
pop
jns
cwtl
pop
xchg
in
iret
sti
dec
mov
in
or
imul
or
add
or
iret
mov
test
jnp
sub
add
pop
sbb
mov
and
in
adc
push
shlb
out
adc
lea
rorl
je
add
ret
stos
fdivl
in
jge
pop
ret
add
movsl
fcompl
pop
addr16
cmp
mov
push
jnp
jne
outsl
lahf
dec
add
loop
movsl
push
pop
sbb
xor
int
fisttpll
sbb
stos
mov
sbb
jp
das
and
adc
scas
xor
inc
mov
movsl
rcll
cmp
mov
repnz
inc
adc
ss
cmpsl
loope
or
cmp
cwtl
test
scas
add
test
or
loopne
fbstp
push
pop
aaa
mov
xchg
mov
in
xchg
jp
hlt
lahf
hlt
sbb
xlat
adc
aad
mov
and
mov
loope
inc
out
fs
out
dec
xor
lds
xchg
sbb
xchg
mov
outsb
cwtl
out
pop
rcrb
dec
dec
aad
fwait
pop
mov
inc
stos
mov
mov
xchg
xchg
and
mov
mov
adc
dec
sub
nop
cmpsb
inc
adc
sbb
dec
adc
es
inc
sar
mov
aas
dec
cmp
shll
nop
in
aad
shlb
cmp
loopne
scas
addr16
sahf
sbb
roll
pop
inc
jge
add
sub
enter
lods
outsl
fldl
gs
es
cltd
push
imull
mov
popf
mov
stos
jae
pop
xorb
sbbb
inc
mov
in
inc
jb
aam
inc
mov
pop
dec
inc
pop
xor
mov
cmp
push
test
add
mov
fbld
out
fisttps
add
cmpsl
push
into
lret
js
movsl
stos
stos
mov
cmp
jae
dec
arpl
stos
sub
pop
mov
xchg
pop
xchg
xchg
imul
iret
push
ss
jecxz
mov
lcall
lret
jg
xor
xchg
dec
arpl
jl
fucomip
pop
sbb
cmpsl
xchg
es
mov
push
popa
insb
sti
push
jmp
fisubl
cwtl
or
icebp
pusha
cld
lcall
je
mov
push
scas
mov
movl
out
sti
lahf
push
cmp
imul
xor
fsubp
lods
daa
jp
into
fs
xor
fwait
sbb
mov
xchg
pop
and
mov
mulb
mov
int
jbe
lods
pop
cmpb
fmuls
bound
into
iret
xor
sar
loopne
inc
mov
adc
in
loopne
out
stos
loopne
sub
push
out
inc
ds
pop
fidivrs
fisubrl
push
xor
addr16
clc
mov
dec
cmp
std
fisttpl
mov
push
int
or
xchg
xor
test
sub
cmc
icebp
fwait
roll
decb
test
pop
lea
pop
fwait
pop
lods
jecxz
mov
push
inc
dec
adc
jns
add
dec
pop
inc
loop
add
adc
mov
add
mov
je
icebp
fimull
das
add
fsubr
fsub
mov
xchg
repz
push
imul
movb
dec
iret
hlt
mov
pop
int
cltd
fists
mov
or
cmp
xchg
shrl
inc
inc
cmp
int
cld
outsb
sbb
les
push
inc
es
push
cmp
pop
push
mov
push
out
inc
mov
in
adc
imul
mov
sub
lahf
sbb
xchg
lret
stos
xchg
pop
cmp
ds
dec
push
push
repnz
test
push
jp
push
lcall
mov
dec
stc
dec
mov
dec
js
xchg
sbb
mov
call
push
lea
xor
cmpsb
movsb
dec
inc
lds
dec
lahf
pop
faddp
xchg
inc
jbe
dec
in
push
or
mov
mov
sub
sahf
jmp
arpl
jle
in
dec
xor
adc
ror
sbb
addr16
loope
adc
fimuls
adc
das
inc
lret
mov
call
lock
pop
mov
push
mov
mov
or
insl
ret
mov
shl
cld
in
or
jb
mov
and
push
imul
mov
addl
cltd
xor
mov
in
ja
in
xor
sub
mov
jl
or
sub
movsb
push
jp
dec
imul
jb
pop
fisubrs
jbe
clc
dec
inc
jl
mov
outsb
xchg
adc
lcall
nop
imul
cmp
xor
jno
add
mov
fdivp
cmp
cwtl
pop
and
sarb
mov
pushf
jle
or
std
popf
sarl
or
xchg
and
popa
movsb
xchg
jl
inc
inc
mov
xor
xchg
jp
inc
mov
stos
mov
pop
adc
lock
fsts
mov
dec
daa
xchg
hlt
out
pop
sbb
xchg
gs
ljmp
and
xchg
scas
cmp
outsb
ljmp
cmp
jp
loope
adc
inc
jge
pop
pop
jno
out
xchg
sbb
pop
cmpsb
cli
pushf
xor
mov
and
add
dec
test
cwtl
xchg
push
xor
repnz
inc
cld
add
jecxz
push
xlat
lock
jo
or
bound
scas
fsubrl
cli
mov
ja
xlat
pop
addb
jmp
mov
insb
cmpsl
test
and
xlat
dec
add
leave
mov
jnp
into
fdivrl
addr16
add
sub
add
daa
mov
mov
mov
pop
pop
test
mov
notl
orb
lret
sub
pop
jae
iret
enter
sbb
jl
mov
push
out
jle
and
mov
mov
cmp
mov
icebp
fdivrp
loopne
fldcw
dec
cmp
sarb
mov
xchg
stos
in
jb
mov
dec
add
cmc
test
fldenv
xchg
js
mov
and
dec
or
mov
xchg
xor
jmp
loopne
pop
sub
stos
mov
and
insb
pop
pop
adc
icebp
pop
shrl
dec
out
js
inc
mov
rorl
inc
push
scas
lahf
pop
adc
stc
dec
inc
sbb
out
jno
ss
cmp
sub
push
jne
mov
aaa
push
adc
xor
in
call
sahf
push
insb
xchg
xor
stos
cmpsb
add
pop
mov
push
lds
dec
xor
test
jno
neg
cmp
rcrb
imul
iret
pop
sub
adc
adcb
outsb
push
push
xchg
xor
shll
inc
test
mov
adc
int3
shlb
xchg
sbb
popa
or
adc
outsb
mov
icebp
xor
jecxz
fsubr
pop
popa
mov
add
lahf
mov
in
das
inc
inc
and
inc
mov
icebp
mov
dec
cmp
das
addl
inc
xchg
in
and
repnz
push
dec
adc
pop
mov
jecxz
xor
add
lcall
jp
lahf
jmp
lcall
aas
push
test
adc
jae
aaa
inc
inc
push
jp
push
xor
ljmp
sbb
test
mov
dec
mov
xor
es
test
mov
mov
sub
xor
imulb
fbstp
nop
cmp
mov
jge
out
add
loopne
ror
or
les
mov
out
imul
movsl
loop
or
sub
data16
in
cmp
dec
scas
fucomip
imul
mov
sub
dec
jl
dec
popf
sbb
mov
xchg
push
mov
js
or
mov
xchg
inc
std
sarl
test
pop
pop
outsl
and
xchg
lcall
mov
mov
popf
sub
xchg
dec
or
ja
cmp
mov
sbb
cs
ret
cmp
std
mov
lahf
call
ljmp
xchg
xor
adc
push
xor
sbb
pop
roll
in
pop
leave
mov
test
mov
pop
aas
jp
inc
addr16
mov
adc
add
sti
movsb
fidivrs
jle
mov
mov
out
push
push
xchg
sub
push
push
jo
push
iret
mov
scas
jo
mov
xor
jmp
mov
sbb
dec
cmc
js
xchg
mov
cltd
loop
xor
inc
inc
lahf
pushf
aam
lret
cmpsb
bnd
pop
out
clc
pop
xchg
mov
cmc
aaa
mov
jmp
sti
lock
fdivrp
pop
and
dec
test
sub
push
and
mov
sbb
mov
test
stos
loope
pop
mov
adc
adc
inc
cmp
sbb
pop
or
push
pop
dec
jle
jb
shll
pop
mov
clc
xchg
push
xchg
mov
inc
mov
pop
adc
aad
in
sub
aam
outsl
mov
aaa
es
inc
les
outsb
xchg
mov
push
jnp
orl
inc
cmp
mov
mov
mov
xor
das
shll
and
lret
xor
mov
pop
jle
hlt
andl
dec
or
fisttpll
cmc
insb
xor
js
or
icebp
rcrl
inc
pop
cmp
jne
dec
lea
jno
sub
push
and
test
fisubs
js
cli
sbb
mov
test
sub
lods
jns
and
es
mov
sub
out
add
in
inc
lcall
jg
push
push
cmp
sbb
xor
int3
fldt
cmpsl
sub
mov
sbb
inc
cs
into
dec
sti
xlat
xchg
cmpsb
sbb
and
adc
xchg
ljmp
mov
mov
sub
mov
sbb
pop
pop
mov
inc
loopne
scas
jno
popa
push
mov
insl
xor
and
push
std
xor
lret
inc
adc
aam
js
sub
mov
mov
or
jbe
xor
or
adc
fisttps
jp
leave
cli
cmp
in
lret
loop
push
push
fs
pop
fmuls
cmp
popf
push
test
test
pop
fcmovu
push
shll
xchg
dec
xlat
xchg
rolb
daa
xchg
imul
pop
jb
sbb
mov
loopne
dec
mov
jns
inc
icebp
xlat
sub
ficoml
pop
xchg
xchg
fimuls
aam
add
std
data16
xor
loopne
mov
sub
pop
mov
nop
fidivl
fsubs
jmp
xor
pop
sbb
inc
int
jnp
push
push
and
jmp
inc
jne
cvtps2pd
dec
out
xor
ljmp
shlb
insb
cltd
ja
sub
sbb
lods
xchg
movsl
push
sbb
in
add
pushf
loope
xor
add
push
ljmp
test
in
xchg
inc
out
ds
adc
aaa
inc
and
fldl
cmpsb
add
data16
mov
inc
fdivr
imul
cmc
in
push
add
mov
test
mov
test
xchg
push
jo
mov
mov
icebp
push
loop
in
xor
mov
repz
incb
add
xlat
jmp
jnp
inc
repnz
scas
in
mov
out
stos
xchg
add
pushf
dec
xor
insb
xchg
pop
and
lea
stos
loope
dec
in
sbb
push
pop
sahf
mov
xlat
mov
icebp
in
mov
xor
mov
jmp
pop
and
imul
icebp
jp
int
movsb
iret
test
push
mov
lods
bound
xchg
aaa
xchg
jmp
add
orb
xorb
mov
mov
sub
test
xchg
xor
or
push
and
lcall
fcom
js
mov
js
push
mov
out
fwait
mov
les
mov
movsb
nop
or
adc
dec
scas
lods
adc
punpckldq
mov
xchg
jp
imul
pushf
sbb
and
fwait
shl
lods
jecxz
lahf
es
mov
jg
outsb
sar
das
xor
push
xor
lret
lea
cmp
cmpsb
mov
rcll
pop
and
mov
xor
scas
in
bound
out
jno
popa
pushf
dec
jg
in
shrl
insl
cmpsb
xchg
loopne
adc
push
mov
cli
sub
loop
fnstenv
xchg
push
or
sbb
scas
int3
push
sub
movsb
mov
into
mov
xor
xor
imul
icebp
push
cs
xchg
bound
into
mov
mov
loop
in
push
push
xchg
and
stc
sbb
cmp
inc
inc
xchg
push
sub
lods
hlt
and
add
je
dec
cs
xor
mov
dec
fstpt
aaa
dec
push
int
stos
jb
mov
mov
add
cmpsb
jg
sub
lock
mov
cmp
aad
push
mov
fistps
push
pushf
rcrl
dec
pop
cld
decb
mov
in
cmp
and
movsl
jmp
or
dec
in
push
push
mov
mov
inc
add
in
or
imul
mov
pop
sahf
out
jg
mov
aad
inc
shlb
xchg
pushf
mov
and
xlat
clc
mov
xor
mov
dec
stc
cli
stos
repnz
and
add
hlt
sbb
mov
loopne
push
insl
jecxz
repz
add
clc
fsub
sbb
popa
push
popa
sbbb
pmulhw
sarl
inc
jecxz
popf
fstps
out
mov
pusha
shr
sti
lahf
es
dec
and
add
shlb
iret
rclb
pop
call
into
inc
jne
xlat
lcall
ret
clc
stos
push
xchg
mov
mov
pop
fdivl
jl
fstps
xor
or
jbe
xor
pusha
out
insb
ss
in
jge
ds
and
xchg
mov
stc
cltd
or
jns
nop
add
cltd
inc
faddl
je
pop
adc
pop
adc
bound
call
out
cmc
sbb
popa
xchg
jo
ret
or
mov
jmp
stc
aam
repnz
xchg
xchg
pop
mov
add
sub
in
mov
cltd
inc
mov
sahf
fisubrs
dec
fcoml
pop
or
inc
adcb
add
repz
or
adc
icebp
add
jmp
push
bound
mov
movsl
jp
inc
jmp
cld
pop
jle
adc
xlat
insb
sidtl
subl
test
ds
sahf
xchg
popa
sarl
imul
fwait
and
int3
and
jnp
sbb
outsl
and
je
dec
cmp
push
stos
lret
push
mov
jecxz
insl
idiv
or
mov
rclb
scas
into
js
popf
ds
jns
les
loope
inc
pop
sbb
pop
sbb
mov
xlat
or
and
hlt
adc
xlat
popa
sbb
mov
mov
sti
call
lods
dec
fsts
imul
cwtl
sub
and
cli
jmp
dec
pop
mov
add
lods
mov
out
aas
xchg
mov
stc
push
and
std
jl
aad
sbb
cmp
data16
or
bound
fmul
clc
aas
fldenv
sub
pop
sub
xchg
scas
sbb
dec
lods
test
cwtl
fbld
add
mov
pop
or
rorb
cmp
xchg
cltd
push
pop
mov
xchg
or
mov
mov
decl
jne
mov
push
xor
xchg
fistpll
xlat
lods
xor
aas
pop
add
adc
repnz
int
scas
mov
shrl
cmp
imulb
sti
loope
or
mov
pop
sahf
sbb
mov
and
mov
out
or
jmp
clc
mov
int
jle
cld
xor
scas
fisttpl
xchg
sbb
daa
push
incl
push
pushf
pop
scas
into
cltd
ja
xor
dec
jle
pop
lret
pop
push
sbb
stos
xchg
cli
xchg
and
inc
sbb
into
push
lcall
push
xchg
pop
fidivl
into
sbb
pop
imul
push
movsb
repnz
int3
mov
push
mov
adc
mov
xchg
out
jmp
icebp
daa
mov
adc
loopne
sbb
imul
repnz
test
and
inc
das
cli
fsubrs
mov
scas
inc
js
mov
cmp
clc
pop
sub
mov
frstor
sub
test
and
xchg
mov
adc
aas
test
repnz
adc
sbb
cmp
data16
or
in
adc
cmp
mov
fs
int
stos
int3
cmp
iret
cwtl
or
mov
cwtl
jge
lahf
ds
ss
jg
or
inc
and
jbe
and
xor
data16
mov
sub
aas
add
cld
jnp
mov
xchg
out
lret
mov
mov
negl
ret
das
push
stos
mov
sub
fs
ss
je
mov
cmc
jae
jl
insb
scas
clc
les
xor
nop
sahf
cmc
jb
mov
mov
outsb
testb
cmp
lret
inc
mov
xor
std
or
and
xchg
test
add
or
jb
sbb
cmpsl
cltd
fstl
sub
popf
sti
xor
xchg
daa
and
inc
dec
ja
jl
xlat
loop
lret
fs
push
rorl
adc
shll
fisubrl
insb
and
insl
adc
sbb
mov
loop
jb
imul
cmp
cltd
jbe
loope
testl
sti
jne
ja
repnz
nop
and
mov
mov
xchg
adc
mov
jo
inc
add
jne
mov
lods
aam
daa
xchg
mov
pop
fdivr
loope
std
push
daa
mov
xor
lods
inc
lea
dec
in
in
insb
inc
xor
ds
sbb
xor
pushf
fldenv
pop
jg
pop
faddl
iret
in
xor
inc
mov
ljmp
pop
or
and
xchg
xchg
test
mov
jle
jne
test
jbe
dec
cmp
mov
cwtl
mov
movb
jns
loop
jns
inc
call
inc
xor
ja
inc
gs
cs
mov
pop
into
out
loopne
xchg
mov
add
and
or
inc
xchg
adc
scas
jnp
push
outsl
or
push
cli
lret
out
mov
popa
ss
ss
adc
outsb
lock
mul
icebp
xchg
xlat
dec
xor
inc
dec
gs
mov
out
lds
mov
cmp
push
xor
cmovae
shll
fists
addr16
inc
shlb
popf
jecxz
push
addr16
xchg
adc
mov
mov
shlb
ja
mov
std
sub
add
mov
sbb
ss
fs
addr16
pop
push
mov
pop
outsb
xchg
cmp
mov
inc
xchg
pusha
cmp
mov
cmp
push
xchg
insl
pop
and
mov
cmp
sbb
cld
fs
jg
inc
jg
ret
mov
out
ja
lock
mov
mov
or
mov
dec
mov
push
xor
mov
adc
push
push
push
aam
scas
shlb
js
decb
lods
scas
mov
dec
lcall
shlb
push
pop
mov
andl
mov
or
xchg
push
pop
sub
add
add
mov
mov
xor
jge
push
adc
sbb
push
in
sarl
or
mov
lods
fwait
adc
fsts
out
test
adc
fidivl
arpl
sbb
fdivr
mov
outsl
jmp
out
adc
pop
push
js
jl
icebp
mov
aad
jno
adc
or
aaa
aam
jnp
stos
push
sub
shrb
cmp
inc
and
push
outsl
cltd
clc
mov
dec
adc
jbe
fucomip
jbe
mov
sbb
fwait
and
mov
enter
gs
xchg
dec
or
cmp
mov
cmp
push
cmp
dec
jle
push
push
mov
cli
orb
insb
into
pushf
sub
adc
mov
pop
mov
add
cmpsl
pushf
jb
aaa
je
cli
ds
test
push
or
inc
dec
xchg
jle
dec
pop
or
fadds
stc
loopne
push
and
ss
push
cmpsb
lcall
hlt
clc
xchg
add
mov
mov
xchg
mov
xchg
das
cmc
pushf
ss
sub
mov
mov
aad
bound
push
lret
mov
or
testb
push
xor
dec
test
cli
push
imul
mov
cmp
mov
imul
mov
shlb
lock
mov
push
mov
or
or
mov
jnp
rclb
adc
pop
inc
mov
sub
and
jg
gs
insb
mov
inc
in
rcrl
popf
pop
cmp
jo
insl
fiadds
cmpsb
or
xor
xlat
push
ret
je
sbb
test
mov
jns
lahf
test
mov
mov
pop
test
push
sahf
test
hlt
xchg
push
inc
dec
popl
aaa
out
jecxz
mov
push
ljmp
pushf
imul
cli
les
in
or
xchg
enter
xchg
pop
and
cmp
notb
xchg
fists
mov
pop
fiaddl
arpl
mov
xacquire
addr16
fdivl
mov
fidivs
lret
pop
inc
xlat
mov
adc
mov
cmc
dec
clc
mov
mov
or
lea
out
jnp
lcall
pop
or
mov
jmp
lea
out
jae
into
movl
sbb
arpl
mov
popa
movsl
out
imul
mov
lcall
lock
cwtl
pop
add
or
data16
inc
std
mov
aas
stos
shlb
cmp
xlat
push
push
pop
lcall
divl
jae
sub
mov
or
xor
xor
nop
push
lret
or
je
push
icebp
lret
add
xor
cmp
pop
aas
bound
sub
cli
cmpsl
shl
pop
pop
xchg
sbb
jne
test
jbe
sub
lret
movl
pop
adc
mov
mov
rcr
jnp
jmp
in
cmp
stos
push
shl
adc
lret
push
pop
popa
sbb
pushf
sbb
hlt
xor
stos
xchg
test
fldl
imul
loope
icebp
int3
lock
lahf
fisttps
out
in
mov
mov
decb
cmp
gs
push
push
jle
outsb
mov
es
mov
xchg
mov
pop
mov
aam
in
rcrb
mul
sub
pop
loop
ret
mul
push
jae
push
out
ss
cmpsb
xor
lcall
lds
and
sub
fucomi
mov
bound
ret
dec
jmp
and
into
shrb
add
xchg
mov
aad
xor
mov
push
fld
ret
mov
or
lret
ficoms
jg
mov
fidivrl
pop
push
ds
leave
xchg
gs
bound
sti
dec
jne
push
int
daa
or
test
xchg
gs
nop
sbb
loope
out
jne
frndint
add
and
hlt
cmc
sub
jecxz
mov
arpl
and
cmp
xbegin
es
test
adc
sub
sub
mov
sub
scas
cmp
icebp
int3
push
mov
ret
jns
pop
mov
mov
das
pop
add
in
jle
lods
push
and
inc
dec
adc
rolb
cmp
push
mov
xchg
addb
cmpl
inc
das
scas
enter
lock
outsb
lahf
into
dec
and
in
inc
lea
xor
in
xchg
aas
sbb
xchg
cmp
mov
imul
stc
ds
adc
movsb
aas
fcmovnbe
pop
push
lcall
xor
add
sbb
jecxz
cld
out
std
or
lods
jne
hlt
es
loopne
jnp
or
or
outsl
gs
inc
sar
mov
test
sub
repz
cs
lcall
fcoml
mov
push
hlt
push
ret
mov
iret
out
ljmp
and
sahf
adcl
mov
pop
sahf
nop
insb
movsb
cltd
or
jbe
push
jl
arpl
into
mov
mov
push
fidivl
pop
lcall
daa
sbb
imul
xchg
sarb
adcb
sbb
cmp
outsl
or
lret
adc
xor
in
mov
scas
add
add
insl
lock
sub
sti
repz
in
add
jle
fwait
lret
cli
add
jecxz
cli
dec
inc
in
dec
sti
sahf
xadd
cmp
fs
push
pop
inc
dec
scas
pop
lock
movsl
test
mov
xchg
outsl
ret
jp
mov
hlt
popa
pushf
aad
shr
scas
aad
pop
xchg
leave
push
jne
add
dec
xlat
mov
cld
out
xor
or
xchg
xchg
shr
xchg
xrelease
lret
sub
cmc
mov
data16
xor
loop
arpl
jne
jecxz
ss
push
ja
imul
push
adc
mov
adc
mov
push
adc
mov
mov
imul
roll
mov
and
scas
leave
rcrb
daa
dec
cmp
adc
mov
xorb
adc
pop
decl
and
std
into
sbb
mov
cltd
fcmove
dec
inc
adc
imul
addl
mov
inc
aad
sbb
call
add
xchg
cmpsl
icebp
addl
stc
sti
add
pusha
daa
pop
pop
lret
pop
ja
mov
lcall
adc
cs
daa
and
xchg
sbb
push
leave
mov
mov
lods
lret
xchg
mov
pushf
fmul
or
fnstsw
push
rcrl
sbb
shrl
dec
jmp
mov
push
add
addb
insl
mov
pusha
push
mov
dec
jl
mov
mov
les
icebp
lret
and
fdivr
movsb
push
outsl
mov
ret
cmp
sahf
incb
mov
rcll
sub
adc
and
andl
test
icebp
icebp
hlt
stc
xlat
icebp
lret
fcmovnbe
frstor
outsb
fldenv
push
ret
push
jnp
dec
or
ficomps
int3
push
pop
pop
inc
out
inc
test
lret
sub
rcl
push
ficoms
and
in
cmp
loopne
shrb
xor
and
xsaves
je
loop
es
mov
sub
jno
mov
adc
ret
mov
cmp
jnp
inc
pop
aaa
pusha
xchg
mov
pop
fidivl
xchg
push
sbb
jbe,pt
adcl
imul
dec
jbe
cmpsb
cli
loope
push
stc
loopne
arpl
xor
loopne
scas
push
popf
add
pop
xchg
pop
lret
and
out
and
jmp
jecxz
fimull
aaa
xchg
pop
push
in
mov
pop
mov
jae
inc
aas
mov
mov
sub
add
ficoml
xchg
jo
cld
inc
push
pop
stos
scas
cmpsl
jnp
in
stos
jg
add
jg
lret
mov
push
std
and
scas
insl
and
popf
adc
mov
xchg
cmp
outsb
clc
dec
insl
sub
and
and
mov
xchg
inc
sbb
pop
jmp
cld
mov
dec
insl
rolb
push
mov
mov
mov
push
mov
dec
mov
fbstp
adc
gs
shll
cmpsb
push
sbb
adc
mov
pusha
cld
push
push
ljmp
mov
xchg
out
movsl
orb
mov
cltd
xor
into
mov
outsb
outsl
sub
dec
je
ficompl
fisttps
mov
into
inc
repz
fmuls
jns
or
pusha
adc
mov
cmp
idivb
mov
add
test
ds
sub
sub
and
cmp
iret
mov
adc
and
adc
btr
push
sarb
notb
jbe
cli
dec
stos
xchg
pop
dec
js
jne
add
sbb
push
push
into
xor
ret
add
jp
sbb
xchg
leave
ss
es
cmpb
adc
test
loop
add
sub
lds
pop
orb
es
or
xchg
sub
or
jo
cltd
loop
aam
bound
jg
insl
mov
add
mov
sbb
push
sub
loope
dec
inc
mov
or
insb
in
jo
nop
fsubrs
sbb
imul
sbb
lret
push
jmp
mov
ss
jbe
jbe
ret
push
loope
xor
sub
jp
xchg
fmuls
js
lea
xchg
push
ficoms
inc
clc
or
in
mov
iret
icebp
xchg
mov
insb
xchg
push
roll
jae
mov
jb
and
enter
jb
jl
repz
push
push
popf
negb
outsl
pop
lods
adc
and
dec
ss
push
pop
fldl
dec
and
jp
std
scas
dec
ffreep
repz
mov
mov
flds
pop
fcoms
lods
int
adc
cmpsl
fldl
add
loop
xchg
gs
insl
out
cmpsb
dec
mov
roll
jb
push
imul
pop
xor
jmp
pop
mov
xor
xchg
out
push
out
xlat
jle
xor
mov
imul
ds
pop
sar
clc
or
mov
cmc
imul
movsl
in
cmpsl
in
mov
clc
dec
fdivrs
test
add
iret
scas
movsb
lret
dec
fidivs
dec
faddp
test
negl
cmpsb
pop
or
imul
and
js
outsl
std
push
dec
pop
push
nop
idivl
pop
adc
out
add
cwtl
adc
aam
popf
in
inc
xor
outsb
mov
push
pushf
dec
mov
sahf
dec
dec
dec
jge
mov
dec
rclb
ja
xchg
out
xchg
outsl
push
adc
add
sub
daa
aaa
sarb
adc
xchg
into
or
or
cmpl
pop
test
mov
je
jecxz
insl
jne
dec
xor
lcall
test
push
xor
pop
test
inc
sbb
inc
test
pushf
push
and
pop
adc
outsb
in
adc
xchg
push
stos
fdivs
cltd
or
mov
lods
call
icebp
cmpsb
and
add
test
cmc
popf
xlat
cmp
adc
mov
sub
loope
ret
inc
pop
xchg
scas
dec
mov
dec
add
rcrb
into
pop
mov
lods
ss
and
jge
mov
inc
dec
ror
stc
xorl
and
mov
adcb
ss
daa
pop
push
enter
sub
jl
push
les
mov
jno
je
fbld
or
or
scas
xor
lret
das
pop
xchg
leave
inc
lret
or
fists
sub
mov
jecxz
add
in
xchg
jp
xor
mov
push
aad
lods
arpl
jecxz
push
mov
cmpsl
inc
push
sub
idivl
jmp
xchg
mov
push
stos
pop
push
add
mov
insl
and
dec
sbb
pop
and
cmp
sub
and
mov
cmp
inc
mov
mov
fucomp
push
subl
fwait
sarb
pop
ja
shlb
in
and
add
rcr
pop
testl
and
lods
push
push
outsb
mov
mov
mov
scas
scas
cmc
mov
push
mov
outsb
dec
pop
out
pushf
and
in
push
lods
mov
pop
addr16
sbb
push
mov
loope
inc
dec
shrb
jnp
add
arpl
push
pop
adc
jg
xlat
add
jnp
inc
mov
fwait
or
lret
notb
add
mov
sbb
push
fstpl
mov
inc
dec
pusha
cld
loopew
iret
leave
and
jecxz
fidivrl
test
pop
loop
mov
call
jmp
and
cmp
add
adc
enter
adc
fbstp
test
inc
mov
inc
arpl
stos
fistpl
in
addr16
pop
fldl
xor
and
mov
rol
call
mov
xchg
loopne
jo
inc
std
data16
xchg
jle
xchg
inc
add
aaa
xchg
fistpl
xchg
sub
sbb
stos
cli
dec
xor
adc
icebp
add
and
lcall
into
sbb
inc
fimuls
in
je
sub
ret
ljmp
sub
sub
xchg
shrb
xor
and
sahf
movsl
or
mov
mov
add
xor
add
fsubl
rcll
push
xlat
scas
or
pusha
lods
jae
das
ret
xchg
pop
rcll
addb
mov
adc
add
mov
mov
xchg
dec
popa
aad
sbb
cmpsl
or
mov
xchg
xor
enter
sbb
or
sbb
ja
xchg
cmpsl
fiadds
and
jp
divl
jecxz
xchg
mov
push
and
add
or
out
sti
scas
push
les
xor
in
jnp
adc
pop
subl
jecxz
test
inc
dec
lret
pop
fdivr
jne
or
lods
rolb
lcall
add
ja
sbbl
shll
ss
mov
push
jmp
jge
lock
add
scas
in
popf
insb
sbb
out
xchg
push
jnp
xchg
lahf
loop
adcl
sub
or
outsb
jbe
imul
jno
ret
ficoml
dec
loop
jle
aas
mov
stos
mov
cmp
inc
shrl
outsl
js
rclb
and
xchg
data16
stos
xor
repnz
sbb
xor
int3
sub
jbe
inc
and
or
divl
sti
xor
jnp
mov
or
hlt
inc
in
in
hlt
cmc
ja
cmp
lock
pcmpgtb
clc
and
jge
xor
hlt
pop
andb
movsl
in
push
sub
addr16
xor
bound
fstl
icebp
daa
push
sbb
fiadds
adc
outsb
and
mov
adc
mov
mov
inc
mov
imul
cld
mov
dec
push
xchg
mov
sub
cwtl
jns
xor
inc
jecxz
adc
inc
imul
adc
xor
sbb
cmpsb
jp
and
pushl
or
or
inc
dec
in
or
leave
push
sbb
add
clc
mov
in
push
pop
dec
xchg
jne
mov
mov
lcall
mov
fnsave
ficomps
enter
mov
sub
enter
jae
enter
fisttpll
pop
movsb
std
fcmovne
mov
sbb
or
je
jnp
and
xchg
inc
shlb
ljmp
cmp
sub
mov
xchg
ficomps
xor
mov
out
xor
stc
nop
and
sbb
mov
add
je
aas
enter
inc
mov
mov
and
ljmp
into
fstps
ret
fwait
cwtl
push
inc
sti
or
cmp
add
mov
dec
cmpsb
sub
ret
rcll
jmp
dec
dec
add
sub
aaa
loopne
xchg
movsb
mov
aam
or
mov
imul
pop
mov
loop
fbld
pop
rolb
mov
pop
insb
test
jnp
cmp
les
dec
hlt
rol
gs
adc
jg
leave
and
jle
and
xchg
inc
daa
push
imul
fidivrl
cmpb
jmp
test
enter
jp
xchg
dec
fimull
mov
sti
mov
lea
subb
xchg
and
push
xlat
jb
leave
mov
mov
or
mov
iret
pusha
ja
cld
cli
fcoms
dec
fstps
movsbl
mov
cmpsl
sub
lods
add
stos
paddd
jae
decb
add
out
repnz
inc
popa
jecxz
stos
add
lahf
lret
hlt
sub
or
negb
enter
mov
push
test
int3
inc
cmp
add
fdivrl
add
in
stos
les
pop
sub
addr16
cmp
mov
inc
jge
sbb
xchg
aam
clc
cltd
ss
pop
jno
lret
mov
std
enter
repnz
mov
iret
stos
jle
pop
xor
das
push
xchg
xchg
mov
mov
jnp
test
mov
stos
mov
mov
inc
and
jecxz
addr16
data16
or
lret
xchg
fs
rep
out
cmp
daa
push
fcmovbe
outsb
into
pop
inc
fxch
fisttpl
lock
das
mov
xor
adc
mov
xor
jbe
or
cmp
cmp
scas
stos
loope
push
jno
jmp
js
mov
aaa
rcrl
sbb
pop
adc
daa
roll
pop
int3
inc
scas
or
xor
pop
shrb
fcmovne
mov
and
rolb
mov
lods
dec
mov
out
mov
and
dec
sub
jne
arpl
sub
jbe
sarb
fmull
lret
stos
lods
les
imul
outsl
mov
sbb
jne
push
ds
mov
adc
push
sub
ret
jge
or
nop
xor
add
ret
fs
pop
push
inc
xlat
adc
mov
jmp
icebp
add
sub
push
loope
dec
mov
aaa
sub
std
push
cmp
push
push
and
xchg
fcompl
pop
lock
mull
fs
fistpll
insl
cmp
adc
mov
xchg
in
fmuls
push
mov
push
ficoms
or
xor
fsubrs
push
aam
in
mov
sub
jmp
outsb
adc
sub
cmp
pop
push
jno
sti
mov
mov
dec
pop
das
xor
mov
pop
ljmp
sub
shrb
test
into
inc
pop
and
pop
repz
fistl
sub
enter
out
data16
or
cmp
out
inc
fistpll
movsb
or
push
stos
cmp
outsl
outsl
jae
lods
cli
dec
adc
dec
outsl
loop
jg
adc
js
sahf
jge
outsb
adc
jmp
sub
xchg
mov
insb
in
xor
mov
jb
ror
cmpsb
pop
or
insl
pop
enter
shll
hlt
sub
gs
or
mov
sbb
mov
pusha
mov
scas
rcr
outsl
cwtl
in
sub
int
ret
push
imul
lods
ret
mov
mov
les
or
mov
out
dec
sub
pop
add
jnp
add
adc
sahf
je
add
lea
test
inc
dec
stos
sbb
outsl
or
xlat
das
in
insb
or
pop
xchg
ficompl
lods
sysenter
inc
mul
sti
in
std
sbb
cmpsb
dec
mov
lods
push
sbb
dec
rcll
jbe
inc
outsb
pop
or
inc
mov
outsb
xchg
xor
sub
std
stos
mov
pop
cmp
mov
add
dec
add
xchg
into
es
push
adc
mov
jbe
push
dec
jne
outsb
repnz
dec
insl
enter
pop
data16
cs
ss
fisubs
xlat
sahf
dec
fidivrl
sbb
out
es
fnstenv
std
adcb
inc
mov
mov
jnp
sub
lret
lds
pop
mov
mov
pop
jge
cltd
testb
out
xlat
inc
push
mov
inc
imul
mov
adc
out
loop
out
add
xor
add
add
cmp
movsb
lds
cmpsl
ja
outsb
mov
inc
lea
xchg
xorb
pop
inc
lods
sub
or
bound
fcompl
sub
aaa
gs
xchg
jg
inc
arpl
and
ret
rcrb
nop
ret
ja
ret
das
sbb
cld
adc
adc
nop
mov
xchg
mov
fs
aaa
into
fsubrl
fwait
add
call
xchg
inc
sbb
in
int3
scas
orl
cld
push
pusha
push
dec
cmp
xchg
sbb
pop
movsl
jns
mov
jmp
or
shll
push
dec
cmpsl
mov
outsl
rolb
fs
ja
or
sub
cmpsl
pop
and
adc
enter
mov
inc
into
cmp
scas
clc
sbb
bound
mov
mov
jl
aas
cmpb
push
sahf
int3
adc
mov
dec
stos
test
pop
dec
movsb
popf
adc
mov
xchg
insl
lods
xor
dec
in
imul
mov
les
xlat
mov
mov
ret
pusha
add
fstpt
push
xor
popf
mov
scas
xlat
cmp
xor
gs
push
push
xchg
jmp
iret
dec
xchg
push
jnp
push
out
add
mov
xchg
popa
cmp
and
inc
inc
mov
sahf
xor
cmp
mov
dec
jbe
shl
jo
mov
cld
pop
movsl
sub
dec
into
rol
outsl
shrb
xor
pop
decb
mov
mov
push
pop
jp
stos
push
dec
xor
inc
imul
movb
xchg
imul
xchg
jo
loope
fildl
lret
insb
insb
loope
push
push
fists
cmp
arpl
addr16
fmull
fldenv
test
inc
sub
fs
mov
out
int3
out
sub
insb
movsb
in
call
add
inc
push
test
stos
outsb
mov
push
dec
lock
fwait
or
mov
cld
loope
clc
enter
imul
rclb
rclb
leave
lret
sbb
and
or
cmp
mov
aas
jle
cmpl
mov
adc
jle
mov
pop
fs
xchg
xchg
mov
pop
mov
fstl
inc
pop
cmpsl
push
jnp
pushf
add
movsb
fisttps
mov
jecxz
pop
fs
push
aad
pop
imul
mov
jl
adc
mulb
lea
mov
loopne
pop
mov
cld
jne
and
sub
or
lds
jae
mov
outsb
inc
or
mull
xor
sbbb
jae
js
les
inc
call
and
ja
dec
jne
cmpsl
loope
out
mov
clc
and
push
add
and
mov
or
push
aad
lret
add
mov
stc
sti
rorb
adc
mov
out
mov
mov
mov
ret
int3
fldcw
enter
push
cmp
sub
lahf
cmpsl
add
cmp
pop
xchg
clc
add
sub
sub
jl
out
sbb
push
into
fwait
xlat
xchg
jbe
fisubl
adc
mov
mov
push
daa
sahf
out
inc
fistl
aas
loop
fmul
push
test
movsl
jg
mov
mov
mov
insb
cli
ja
cmp
sbb
add
adc
push
cmpsl
sub
pop
or
hlt
pop
cmpb
out
cmpb
mov
icebp
sbb
imul
adc
loopne
sub
scas
cmp
aad
sbb
leave
mov
mov
jo
loop
inc
jp
jle
push
push
in
cmpsb
pop
repnz
mov
rcrb
popf
movsl
aaa
push
rcr
sbb
xlat
mov
dec
cmpsl
jg
push
jmp
stos
dec
fwait
cmpsl
mov
ja
xor
aad
fs
pusha
and
cmp
dec
mov
fldt
pop
add
cwtl
roll
insl
dec
push
cmp
sub
mov
ljmp
mov
pop
mov
enter
push
mov
testb
into
test
adc
pop
xchg
xchg
call
scas
ret
aas
jae
in
out
stc
clc
dec
adc
aas
or
add
sbb
mulb
jmp
jle
popa
jne
mov
jle
hlt
jbe
adc
push
adc
jg
jl
sbb
in
cmpsl
sbb
ljmp
mov
rorl
sub
mov
mov
dec
aam
sbb
or
fsubp
cmp
arpl
mov
pop
xor
je
bound
add
out
pop
add
mov
xchg
pop
fs
nop
pop
imul
jns
sub
call
push
sub
mov
push
dec
test
into
add
cltd
in
jecxz
mov
sub
jne
fnsave
lea
ret
jne
jb
pop
and
scas
ljmp
sahf
cltd
cs
sbb
ljmp
adc
rcr
outsl
lcall
cli
bnd
push
push
fnstsw
sub
mov
ret
outsl
stos
sub
ss
dec
cmpb
adc
or
shlb
popa
fistpl
filds
cmpsl
enter
leave
xor
adcb
sub
ret
pop
xchg
add
test
shll
shll
fwait
cmpsb
addl
bts
in
ljmp
push
movsl
pushf
movsl
push
sub
xor
adc
mov
xlat
outsl
jecxz
mov
push
jp
mov
or
pop
ret
adc
and
aas
in
out
enter
mov
mov
fnstenv
adc
pop
lds
ret
sbb
add
sti
push
dec
stos
scas
push
dec
mov
out
ss
inc
xchg
test
add
push
and
mov
mov
addr16
adc
stc
sbbl
cld
call
mov
mov
dec
or
dec
js
repz
iret
jg
adc
and
loopne
cmpsl
paddusw
fcomps
xor
sbb
scas
scas
add
sarl
add
or
add
pop
mov
dec
mov
ss
xlat
xor
push
repnz
ds
out
inc
iret
mov
test
push
sub
xchg
cld
mov
ret
les
enter
jnp
and
inc
and
fcomp
sahf
fsubr
mov
lods
adc
aaa
mov
jo
rcrb
xchg
mov
outsb
ljmp
sub
stc
mov
sbb
dec
lcall
shr
loopne
mov
mov
add
or
daa
clc
inc
pusha
stc
notl
inc
icebp
jb
jnp
pop
sahf
cltd
sahf
insl
stos
mov
in
shll
loopne
jno
xorb
call
jns
loope
mov
jnp
dec
cli
dec
dec
cmp
jge
loopne
cmp
jp
testl
pushf
mov
in
push
push
out
rcrl
cltd
xor
ja
adc
mov
adc
fisttpl
ret
pop
loopne
je
and
lcall
aad
push
cs
popf
cmp
jno
ret
pop
mov
xor
inc
shlb
lods
js
jne
shrl
push
cmpsl
ds
push
lret
out
aaa
jmp
test
in
push
popf
ret
arpl
sub
repnz
push
test
or
sbb
in
in
aaa
sbb
in
pop
fcoml
fisubs
mov
test
lret
movsb
scas
cli
lds
xchg
jp
push
rolb
push
test
andl
int3
xchg
cmc
xlat
sbb
gs
data16
and
pop
sub
mov
call
sub
push
add
add
push
jle
stos
les
sub
xchg
push
pop
sub
xchg
arpl
stos
cmpb
mov
repnz
lret
movsb
add
dec
stos
test
sahf
jge
jmp
jae
pop
roll
sub
cs
mov
and
movsl
xchg
ss
aas
into
mov
outsb
dec
arpl
fisttps
clc
aad
lock
mov
les
adc
fsts
out
add
add
pop
lods
test
ret
fistps
lods
mov
scas
and
or
stc
push
adc
out
sub
addr16
and
out
inc
aad
lds
out
faddp
mov
test
and
xorb
xchg
lds
fcomi
mov
xor
mov
test
mov
jp
pop
xchg
es
and
cmp
dec
into
repnz
mov
loope
lret
jle
js
enter
cli
sbb
rcrl
push
out
leave
flds
movntps
mov
mov
pop
leave
sub
mov
loop
mov
mov
inc
popf
xor
popl
mov
int
out
cli
jmp
clc
add
xor
les
adcb
sahf
pusha
cli
adc
repnz
scas
lods
stos
arpl
inc
push
fistps
pushf
aas
xchg
mov
sub
xor
sub
mov
jns
pop
out
push
scas
sbb
and
inc
mov
dec
call
sbb
sub
inc
push
aad
out
cmp
roll
out
adc
jne
push
adc
xchg
add
enter
rorb
add
mov
icebp
jle
mov
push
ds
imul
xchg
xchg
pop
jle
cmp
sbb
loopne
jecxz
xchg
rolb
nop
jb
xor
pop
sub
cld
repz
outsl
out
fs
jno
sbb
out
mov
inc
and
or
cmp
inc
mov
jno
subb
aas
lahf
jns
pop
ret
cmp
mov
movsl
jnp
xchg
cmpsl
dec
xorl
adc
jmp
outsb
jbe
fs
mov
mov
stc
sub
pop
jns
mov
cmp
cld
pop
push
cwtl
aad
push
cmpsl
jb
subb
fwait
mov
mov
push
hlt
jl
inc
insl
test
or
std
jg
lock
les
sub
js
lock
sbbl
mov
push
clc
mov
xorl
add
loopne
and
lret
out
and
dec
push
cmpsb
out
push
dec
jns
ret
test
dec
jbe
jnp
cmp
call
cwtl
cli
xchg
mov
push
shlb
jecxz
and
test
pop
inc
imul
push
xchg
test
sahf
out
pop
sub
scas
push
inc
mov
js
mov
lods
cmp
sti
inc
iret
fnstenv
mov
cmp
call
lock
dec
sbb
lcall
aam
mov
cmp
data16
aas
and
add
imul
mul
int
inc
and
clc
add
stc
mov
jno
sub
sub
adc
xor
mov
cmp
stc
fnstcw
repnz
outsl
push
int
xorl
lods
mov
add
mov
mov
insb
imul
aad
and
dec
pop
xchg
in
icebp
mov
ja
sub
sar
xor
dec
inc
mov
lds
aad
inc
int
sub
iret
das
int3
dec
push
scas
stos
movsl
rclb
mov
ret
test
enter
lret
inc
std
ja
sbb
std
pop
jl
cmpsb
mov
and
pop
lret
js
fwait
jp
adc
imul
idivb
lret
inc
fimuls
divb
imul
push
or
shll
xor
fwait
xchg
add
push
gs
je
sub
or
data16
rep
cs
das
shrl
lods
xchg
xchg
fldenv
testb
push
scas
out
mov
shlb
mov
inc
dec
dec
js
sub
pop
std
sub
outsb
arpl
bound
mov
outsl
push
pusha
jp
test
or
enter
xchg
enter
push
pop
xor
mov
sarl
pusha
adc
mov
cmp
in
mov
mov
mov
dec
xor
enter
dec
imul
jg
loopne
lret
dec
cmp
sahf
push
and
dec
decl
pop
sbb
mov
mov
pushf
and
xor
ds
aam
pop
mov
adc
sub
rcrl
rcrb
ror
and
or
lods
sub
fldl
pop
mov
dec
scas
or
mov
dec
jae
jge
leave
lock
adc
push
icebp
sahf
dec
pop
push
test
jmp
sub
in
mov
pop
rclb
mov
jno
fiaddl
inc
movsl
movsb
push
xchg
mov
sbb
imul
sub
xor
aad
or
jbe
pop
sub
dec
xchg
fadd
jle
popa
mov
xchg
jae
cmp
sub
push
mov
push
dec
cli
mov
test
jb
shrl
lret
pop
mov
js
jno
icebp
mov
gs
aaa
into
xchg
mov
xchg
icebp
and
or
add
shlb
inc
ss
imul
sub
mov
inc
shl
jb
outsb
jg
test
cwtl
ret
ret
stos
movsb
leave
adc
sub
lock
or
adc
lods
mov
xchg
dec
test
pop
insl
jp
sti
adc
test
popa
adc
inc
pushf
or
loop
in
loop
repnz
pop
inc
sub
clc
add
rclb
or
sar
je
in
dec
inc
test
aad
mov
pusha
mov
xchg
jb
cmp
cwtl
fisttps
push
daa
std
in
adc
push
aam
test
xor
jbe
mov
xchg
cmc
jmp
pop
push
ret
out
jbe
fcomps
add
sbb
xorb
pop
in
rcr
inc
vpsrld
in
push
fstl
jmp
mov
div
shll
xor
pop
rcr
cmp
mov
mov
sbb
clc
push
sbb
scas
or
cli
cmpsb
and
mov
mov
nop
mov
movsl
xor
repnz
loop
mov
push
lea
inc
shrl
das
lcall
jecxz
daa
xorb
js
cmc
and
pop
xor
pushf
dec
dec
ds
inc
cs
repz
xor
push
hlt
or
mov
adc
test
and
int
mov
test
add
cld
mov
and
or
adc
nop
jle
mov
and
mov
jge
mov
enter
fsubs
sbb
adc
lods
add
pop
aaa
repz
test
xor
jl
jnp
jbe
cmp
movsl
cmpsb
movsb
loopne
and
sub
enter
mov
popa
inc
scas
dec
pop
mov
aam
sub
mov
mov
iret
xor
dec
or
jecxz
push
push
cld
test
sarl
jecxz
mov
xor
mov
jne
cwtl
cmpl
stos
adc
mov
dec
nop
and
mov
inc
negb
mov
dec
lahf
and
lea
or
mov
daa
dec
jns
jno
sbb
fstpt
fs
jnp
cmp
xor
push
sub
movsl
aaa
test
inc
push
mov
jge
xchg
sub
xchg
ss
insb
mov
jnp
and
in
lods
xlat
das
addr16
sub
inc
pop
imulb
adc
cmp
mov
loop
aam
mov
into
mov
push
stos
leave
sub
add
decl
xor
xlat
xor
sub
mov
popa
xchg
test
mov
pop
dec
lods
and
dec
nop
outsb
pop
pushf
or
lea
xchg
test
and
inc
mov
adc
xor
jmp
inc
cmp
or
ret
xorb
add
xor
mov
sbb
fnsave
and
in
push
mov
aas
cltd
xlat
orb
xor
test
xor
das
aam
shr
pop
scas
outsl
or
cld
sbb
fwait
in
xor
mov
add
jecxz
mov
gs
xor
je
xor
jo
xchg
pop
in
cmpsb
in
cmp
sbb
mov
or
adc
movsb
inc
jns
or
lods
and
bnd
mov
shll
add
sub
inc
add
mov
test
add
je
outsl
daa
insl
push
ljmp
push
into
sti
push
aam
scas
adc
mov
mov
sbb
add
sbb
push
stos
fsubl
inc
push
sub
mov
movsl
insb
int
mov
jecxz
mov
clc
pop
or
test
mov
lods
sbbl
and
mov
pop
imul
push
xchg
add
ret
sti
jle
add
jb
mov
les
or
popa
cwtl
dec
movsl
push
inc
xchg
xor
stos
jmp
xchg
lods
xchg
push
popa
negb
outsb
xor
cwtl
jo
dec
in
fisubl
decb
mov
push
pop
xchg
leave
cwtl
vpavgw
sbb
xchg
mov
mov
xor
icebp
imul
imul
sub
js
into
test
gs
add
or
mov
loop
mov
xor
movl
sar
popf
lods
ja
xchg
aad
inc
xor
xchg
rorl
push
test
rclb
adc
xchg
cmc
in
sahf
dec
in
lea
call
testl
ds
mov
push
bound
icebp
fstps
add
adc
notb
insl
les
cs
outsl
enter
xor
mov
clc
jle,pn
cmpsl
cmp
jns
jbe
fnstcw
cs
jae
aam
adc
xor
cmp
or
lret
bound
mov
leave
fs
in
dec
sti
pushf
outsl
stos
xlat
or
outsb
int3
in
and
cmp
ffree
loop
cmc
adc
cld
out
sub
pop
repnz
cld
cmp
ret
nop
jnp
mov
pop
subb
ja
dec
mov
aad
xor
mov
xor
mov
add
lret
or
lods
je
mov
xlat
fcmovu
mov
mov
mov
ljmp
sub
dec
shr
or
xchg
fsubr
loopne
jbe
pop
popa
adc
movsl
pop
ficompl
and
jo
mull
dec
add
fwait
adc
adcl
clc
xor
lahf
mov
xlat
outsl
out
mov
cmp
lods
fsubs
scas
pop
or
cltd
lret
mov
sbb
xchg
jo
lods
psubsw
dec
mov
adc
cmp
push
pop
enter
fldcw
dec
mov
adc
jecxz
push
pmaddwd
sbb
sar
sbb
cwtl
inc
fidivrs
pop
cli
mov
jns
movsb
sarl
lret
cs
das
add
insb
ss
sub
sbb
sub
fwait
adc
pushfw
mov
scas
mov
jmp
mov
jo
or
iret
mov
lret
sub
xor
cs
dec
and
ja
hlt
es
out
test
mov
mov
ja
psrad
outsl
cmp
xchg
xchg
adc
and
cmp
push
mov
add
cmc
insb
push
sbb
into
mov
mov
nop
cld
sub
and
xor
lret
push
adc
repz
push
fcomip
dec
xor
cmc
xor
inc
jg
mov
inc
cmpsl
addr16
pop
mov
jmp
in
adc
mov
movl
push
xchg
dec
cmpsb
loop
sub
xchg
test
push
stos
sti
repz
mov
and
dec
mov
pop
dec
dec
je
fcom
xchg
mov
in
pop
push
push
rcrl
sbb
daa
and
icebp
sub
dec
aam
add
pop
fld1
xchg
loope
mov
push
cltd
cmp
add
jbe
inc
and
lret
dec
jmp
daa
shlb
js
add
xchg
mov
pop
ds
xorb
jo
inc
arpl
in
sbb
xorb
mov
in
icebp
dec
push
xchg
jg
mov
stc
xchg
in
xor
push
cmp
popf
dec
and
xlat
xchg
js
es
add
je
jecxz
pop
inc
rcr
mov
aas
sub
outsl
insb
mov
int
notl
pop
cmpl
adc
mov
jbe
aas
mov
gs
inc
fadds
test
jns
pop
daa
dec
sub
js
pop
notb
mov
pushf
ficomps
or
xlat
mov
nop
push
xchg
or
add
jb
cs
cli
adc
std
fistps
fiaddl
lock
out
sbb
in
lret
mov
and
popa
out
push
jno
or
xchg
sub
repnz
mov
shlb
cmp
int
or
nop
movsb
push
cmpsb
jno
sti
push
mov
pusha
jl
inc
rcrb
cltd
mov
mov
mov
int
pusha
scas
imul
xchg
push
hlt
jge
jbe
and
inc
pop
icebp
inc
xor
sbb
jb
cmpsb
stos
add
sub
decl
fisttpl
dec
and
lcall
dec
dec
subb
clts
adcb
jl
ja
das
rolb
dec
repnz
fs
aas
or
dec
inc
pop
aaa
push
or
push
lock
fldl
lods
and
sbb
int3
adc
add
lcall
cwtl
dec
out
and
sub
mov
push
adc
fcomp
sbb
xchg
sub
sbb
push
pop
push
mov
jmp
add
ljmp
mov
xorl
jbe
adc
mov
jb
dec
shll
cwtl
jp
adc
mov
lahf
xlat
cmp
sbb
push
insl
shll
shll
inc
cmpb
adc
add
cmp
mov
lock
es
ror
jnp
lret
scas
xor
lahf
or
fnstsw
push
mov
fimuls
mov
lods
push
shr
push
pushl
arpl
pop
inc
pushf
sbb
lcall
xchg
sub
pop
cmp
xchg
divl
rcrl
xorl
mov
push
mov
insb
imul
cwtl
mov
push
cltd
xchg
mov
dec
jno
in
pop
inc
mov
xchg
movsb
xchg
pop
cli
mov
cmp
mov
les
sbb
inc
popa
aam
and
push
div
sbb
repnz
add
call
ret
das
sbb
hlt
pushf
repnz
sbb
dec
js
out
add
hlt
call
lcall
scas
shr
sbb
cli
clc
lods
aas
fsub
into
mov
xchg
mov
or
pop
adc
adc
test
lret
bound
stc
or
or
mov
movsl
or
nop
clc
aam
in
adc
cmpsb
push
repz
loop
ret
popa
xor
or
mov
es
lock
xor
int
mov
xlat
popf
outsl
icebp
das
fs
adc
sti
mov
into
sub
xor
ja
xor
test
test
cmp
xor
lret
push
sbb
inc
push
push
ljmp
les
inc
cmpsb
movsb
pop
aad
inc
into
xlat
sbb
nop
test
fdivrp
jle
das
loope
mov
sbb
or
or
adc
push
pusha
neg
xchg
arpl
and
mov
leave
iret
add
gs
cmpsl
cld
out
jae
dec
inc
ljmp
fbld
loope
sub
sbb
imul
jge
mull
push
mov
inc
jl
inc
cld
jmp
cmp
aam
inc
adc
xchg
bound
pop
pop
push
cmp
ljmp
adc
cmp
sahf
cmp
mov
mov
pop
dec
mov
repz
mov
cwtl
pushf
cmc
cmpsl
loope,pn
andb
xorb
enter
pop
mov
cld
add
push
pushfw
jmp
rcrb
sub
mov
mov
addr16
adcb
insl
push
cmp
icebp
enter
jle
add
xor
dec
jnp
xchg
inc
sahf
inc
xor
jge
andb
adc
cmc
mov
in
scas
dec
xchg
orl
data16
xchg
mov
and
orb
cmpsb
pop
pop
push
push
sbb
repz
js
mull
scas
test
and
fstps
repz
push
js
into
dec
test
filds
or
imul
push
push
cmp
andl
repz
pop
inc
or
cltd
and
jge
test
subb
aam
or
int
js
dec
lret
divl
jb
mov
ja
xor
leave
mov
pop
push
nop
pop
push
push
ds
cmp
dec
out
xor
mov
mov
das
inc
int
dec
rcrb
xchg
loop
inc
popf
cli
sub
outsb
pop
pop
inc
sbb
and
fs
dec
lret
mov
xor
or
mov
xor
jbe
xlat
fcomi
jl
xchg
ss
cltd
insb
jecxz
movsl
pop
inc
aam
xor
dec
fbstp
mov
cld
mov
data16
test
data16
jle
scas
icebp
mov
loop
pop
add
outsl
sti
inc
out
pop
mov
cmp
dec
jmp
lods
adc
jl
push
cmp
or
testb
ljmp
insb
pop
inc
in
sbb
callw
cmp
push
inc
xor
int3
dec
popf
shrb
push
scas
addb
and
sbbb
stc
jb
lret
in
aaa
stc
out
imul
cltd
dec
int
add
decb
pop
xchg
scas
jne
loop
pop
dec
sahf
nop
aas
std
xor
jecxz
je
add
mov
sbb
push
fbld
add
test
std
adc
decb
mov
sbb
test
int
jno
xchg
movsl
fidivrl
imul
test
jo
pop
mov
xchg
rcll
and
lds
fwait
xchg
cmp
dec
adcl
shll
jo
in
inc
push
sbb
xor
std
cmpsb
cmc
stc
or
mov
stos
xchg
out
frstor
cmp
enter
arpl
push
mov
cmp
cmpsb
daa
data16
sarb
ja
lods
std
mov
push
inc
or
mov
dec
add
scas
lods
ss
lods
and
mov
xchg
push
dec
xchg
mov
jge
adc
add
ja
clc
xor
mov
sbb
jnp
push
xchg
add
or
ss
sahf
add
add
mov
push
xchg
inc
adc
push
fidivl
lods
movsl
repnz
scas
ret
mov
cltd
out
jmp
add
in
or
insb
pop
sbb
and
fsubrs
cmpsb
pop
inc
pop
ret
ror
fisubl
pusha
push
xor
outsb
cmp
dec
dec
mov
in
add
out
and
mov
dec
sbb
inc
iret
sub
nop
bound
jl
xchg
arpl
dec
xchg
repz
jmp
push
jmp
push
nop
mov
xchg
pop
cmp
xor
push
dec
fisubrs
mov
sbbb
popa
fistl
lcall
ret
jl
and
pusha
arpl
aam
out
test
push
aas
out
rolb
ret
jg
xchg
inc
push
or
push
jle
aad
xchg
in
daa
scas
cs
cld
sarb
pusha
adc
push
popf
mov
cmp
stos
inc
cmp
lretw
movl
xchg
push
std
fwait
int3
mov
fldcw
push
add
xchg
lods
push
push
mov
and
jno
rorl
repnz
sbb
dec
outsb
mov
jb
in
in
outsl
testl
xchg
ret
aad
cld
aas
cmp
lock
mov
outsb
pop
outsb
mov
cmovbe
xchg
lea
sbb
cmpsl
lock
xlat
loopne,pt
push
sbb
roll
cld
or
out
jo
test
push
movsb
or
cmpsb
rcr
std
cmp
sbb
mov
adc
pop
xchg
or
and
sbb
loop
add
in
stc
xchg
std
ret
xchg
cmp
mov
mov
mov
inc
jo
lahf
insb
lea
rcl
pop
pop
rorb
lods
int3
icebp
add
or
das
xchg
test
mov
mov
push
daa
push
lahf
repz
inc
notb
dec
jg
ret
pop
jecxz
ret
mov
lock
mov
rcrb
cmpsb
jb
int
push
call
out
gs
dec
lea
jno
lcall
aad
aad
xchg
xchg
dec
rcr
fisttpl
sahf
adc
pop
inc
std
xor
pusha
inc
jbe
repz
pop
jmp
cmp
andb
ja
jnp
std
in
rolb
ja
jbe
cmc
cmc
stc
out
dec
ljmp
xchg
or
std
push
or
jb
xchg
cli
aam
jp
push
std
jp
scas
lock
cs
dec
ror
or
out
stos
cs
arpl
mov
int3
mov
lds
fisubrs
decb
mov
out
xor
add
leave
dec
push
and
popf
outsl
fst
in
scas
std
xor
xor
dec
inc
loope
inc
rorb
pop
jle
je
sub
or
add
scas
add
pop
scas
adc
inc
fldcw
or
loope
push
xor
js
cmp
mov
adc
stos
xchg
cmp
fildl
mov
push
enter
dec
add
rol
call
lds
scas
jb
aad
xlat
ds
in
xlat
xchg
adc
aam
mov
bound
mov
add
insb
lahf
loopne
in
mov
pop
mov
xchg
loopne
nop
pop
ret
out
mov
imul
sbb
lods
xor
mov
pop
pop
mov
jge
sub
mov
push
xchg
sti
lea
mov
adc
or
lret
push
loopne
adc
ret
ret
inc
insl
cmc
std
fcoms
sub
mov
or
jge
add
cmc
dec
push
inc
dec
mov
in
mov
in
push
call
xchg
fistpl
enter
push
popa
test
lock
mov
jae
pusha
mov
shrl
jns
push
xor
sbb
sti
ret
testb
cmp
stos
jmp
dec
in
xor
popa
jecxz
ret
xlat
lock
negb
xor
jle
leave
xor
outsl
jo
adc
adc
sahf
sub
sar
jo
add
test
dec
cli
xlat
mov
test
sub
cmp
or
out
lea
jnp
adc
fxch
mov
xchg
movsl
mov
dec
sbb
jmp
mov
roll
rorl
ljmp
lcall
cmp
jbe
sub
inc
inc
popf
lret
int
sub
fdivl
dec
sahf
in
push
roll
cmpsb
pop
mov
mov
jo
pusha
xchg
cmp
std
popa
cmp
in
jecxz
mov
jmp
add
dec
cmp
sbb
xchg
fmull
pop
movsb
inc
and
and
aam
inc
pop
sbb
xor
ljmp
xor
loopne
ret
dec
popl
test
push
ud0
sbb
pop
ret
xchg
cmp
and
inc
fsubrl
sbb
add
mov
sub
pop
xchg
jb
scas
dec
inc
shrb
aas
outsb
ret
jle
or
mov
xor
or
push
icebp
mov
push
sub
loop
pop
jle
cmpsl
cmp
mov
mov
or
adc
mov
fs
fisubrl
bound
iret
jne
out
ja
jmp
icebp
cltd
popf
sub
loope
out
ret
ror
scas
nop
in
mov
and
push
xchg
cmp
in
movsb
imul
addl
or
jae
push
dec
jb
idivb
scas
dec
cmovne
pop
push
push
dec
roll
dec
adc
adc
test
dec
fs
sbb
stos
mov
jne
inc
cs
jbe
jns
ret
mov
out
or
add
jge
repz
imul
add
xlat
jecxz
sahf
adc
movsb
add
in
iret
into
dec
add
add
loope
cs
shlb
enter
add
clc
xchg
lret
sbb
mov
popf
jne
mov
adc
aas
pusha
xlat
data16
adc
sub
mov
repz
cmpsl
jle
mov
movsb
out
test
dec
shll
sbb
jne
jb
inc
or
add
loope
cmp
sarl
and
xchg
fdivs
pop
lea
in
js
in
pop
into
sbb
xchg
imul
sub
dec
dec
sbb
xor
or
sbb
or
rolb
jmp
jns
lret
pop
movsb
mov
or
lcall
cmp
dec
or
pop
jno
mov
int3
mov
addb
stos
lcall
push
or
lcall
cmpsb
dec
in
fstl
cmc
pop
pop
mov
or
pop
mov
cli
lahf
xchg
push
rcrb
mov
xor
ret
push
frstor
int3
or
in
mov
lret
mov
cmp
xor
bound
andl
mov
mov
rcl
movsb
dec
fstpl
subl
ja
int
in
es
aas
fbstp
pop
in
add
adc
out
mov
int
outsb
add
cmc
push
mov
push
lds
iret
xor
sub
outsb
mov
imul
mov
insb
das
push
ret
or
fwait
mov
sbb
mov
mov
push
dec
sbb
jp
popa
xor
xor
loop
mov
lcall
sbb
lods
xlat
jno
inc
xchg
xlat
iret
xor
mov
adc
repnz
xchg
loop
mov
enter
mov
int
les
cmp
pusha
jne
cmpsb
lahf
xchg
dec
out
leave
mov
rcrb
and
sub
loop
mov
sub
mov
call
jo
sub
mov
xchg
mov
mov
and
sub
dec
ja
inc
xchg
rcrb
or
sub
mov
imul
orl
sti
or
stc
inc
std
sub
jns
lea
lahf
stc
addb
filds
aas
adc
shrl
push
ret
sbb
aas
fistpl
fwait
cld
orl
in
pop
mov
cmpl
and
sti
dec
and
jb
cmp
sub
imulb
add
push
and
arpl
mov
stos
sti
add
and
xchg
popf
jmp
cwtl
xor
fisttpll
fimull
xor
xor
pop
pop
in
fcmovbe
stc
in
ret
enter
inc
ja
jecxz
mov
and
add
pop
pop
cmp
xchg
cmp
mov
jbe
pop
lret
aam
jl
sti
lret
rcll
mov
mov
imul
js
int
das
cli
inc
push
lock
mov
andl
cmp
rolb
je
jecxz
adc
sub
in
pop
shll
loopne
out
mov
aam
lahf
nop
icebp
sbb
sub
mov
inc
scas
fwait
or
jg
mov
cmp
imul
pusha
dec
mov
xchg
add
repz
je
push
dec
mov
adc
shl
out
lret
les
push
addr16
add
loopne
jecxz
adc
insl
lret
mov
insb
push
pop
jecxz
push
decl
pushf
and
sarl
sti
sub
mov
movsl
in
adc
inc
leave
jbe
ret
push
push
mov
jnp
fwait
dec
outsl
in
loop
lods
imul
sahf
mov
add
pop
push
cld
inc
pusha
daa
or
mov
fdivp
and
mov
push
adc
jl
jl
js
test
sbb
jae
push
cmpsl
cmp
push
pop
lods
and
ret
pop
scas
add
sbb
stos
adc
and
jmp
xchg
and
test
cltd
push
dec
xor
sbbb
cli
dec
sbb
imul
and
bound
in
mov
popf
xchg
jg
ret
leave
add
repnz
xchg
mov
scas
push
lret
and
lds
stos
adc
insl
mov
adc
addl
out
push
repnz
in
ret
nop
dec
dec
test
dec
jns
xor
mov
cli
arpl
data16
xchg
orb
add
push
out
test
pop
dec
ss
jns
push
movsb
push
aas
mov
xchg
add
cmpsl
lods
sbb
das
xor
adc
add
adc
lods
push
jbe
mov
sub
arpl
sbb
mov
sub
sub
mov
and
or
jle
insb
sub
addr16
cmp
sub
std
aam
aaa
in
sbb
std
dec
push
sub
or
loope
in
inc
ret
ljmp
cs
imul
test
push
mov
insl
sub
mov
add
xchg
xchg
mov
sbb
scas
loop
pop
push
mov
mov
or
xchg
aaa
push
mov
movsl
into
push
mov
jbe
negb
push
mov
jns
fsubp
add
bound
pop
das
mov
sbbl
xchg
mov
inc
imul
lods
or
push
push
cmp
shrb
fsubrs
popl
in
xchg
adc
cld
push
mov
xchg
sbb
in
xchg
pop
out
push
scas
ret
js
jle
cmpsl
adc
jb
mov
mov
mov
cld
push
jmp
pmaxub
loopne
bound
dec
insl
int
cs
cmp
push
fstps
hlt
mov
mov
fisubs
push
push
popl
bound
fisubrs
pop
fsubrs
add
aad
aad
jmp
dec
cmp
mov
jl
sbb
fidivl
int3
pushf
mov
out
jmp
dec
shrl
xor
sbb
pop
inc
fistpl
mov
test
xor
orb
sarb
sub
sahf
jbe
push
mov
adc
lods
inc
aam
shl
cltd
je
pusha
les
in
push
out
pop
pop
mov
repz
stos
cld
sbb
arpl
aam
mov
out
scas
xor
insl
push
inc
mov
inc
lods
or
xchg
cli
outsl
int3
push
sbb
test
push
xor
or
mov
cld
adc
push
test
jmp
xor
add
xor
in
mov
std
loopne
jmp
hlt
in
adc
in
lea
ret
dec
and
xchg
add
push
cmp
jecxz
scas
call
test
jg
nop
scas
cmp
xor
shrb
rcl
addr16
jae
out
cmp
cmp
cmp
adc
test
out
pop
cmpsl
add
pop
pushf
jp
mov
push
jecxz
mov
stos
sbb
pop
or
mov
scas
push
cmp
in
add
sub
jnp
cvtps2pd
in
mov
ss
insl
cld
inc
rorb
sbb
sbb
dec
cli
bound
mov
imul
shl
pushf
sub
movsl
popl
or
sub
sbb
push
addr16
rorb
mov
adc
jo
and
rcrb
and
stc
xlat
pop
inc
mov
sahf
xchg
comiss
sub
daa
sbb
fidivs
cmpsb
cltd
inc
das
sub
xchg
xlat
sub
push
push
ljmp
xchg
mov
aas
or
sbb
xchg
mov
and
xchg
in
shl
les
xchg
addps
cmc
and
mov
add
cmp
movsl
xor
push
dec
lock
enter
fisubrl
rclb
je
loop
sub
cmp
adcl
adc
cmp
adc
inc
hlt
stc
shr
stc
shrl
out
flds
mov
adc
pop
adc
leave
adc
lret
add
es
jno
or
mov
lret
xor
mov
sub
jmp
cmp
adc
or
ret
insl
aad
sub
push
fistpl
imul
or
mov
jns
fdivl
and
sbb
dec
sub
cwtl
lea
mov
push
out
andl
int
filds
fcmovbe
sub
repz
mov
insb
mov
test
xchg
inc
popa
sbb
jns
jno
jbe
mov
adc
and
xchg
mov
inc
xor
ficompl
cwtl
cmpsb
cmp
repz
mov
pusha
dec
and
mov
xchg
and
xchg
jno
or
in
sub
stos
add
movsb
mov
in
fbstp
mov
shrb
cs
push
pop
add
shr
inc
xchg
mov
jno
outsb
cli
mov
scas
jno
jbe
inc
jnp,pn
arpl
shll
shlb
in
inc
lods
aas
sub
stos
clc
sbb
out
push
aad
sahf
aas
lods
and
jg
push
insb
cmp
mov
mov
add
or
sbb
adc
push
ljmp
cmp
pop
lcall
js
pushf
sub
mov
or
dec
iret
xchg
outsb
xchg
ret
dec
lock
mov
fstl
testb
pop
rcll
sahf
cmp
fildl
push
sub
lock
xor
pop
sbb
and
mov
das
shrb
add
repz
push
xor
cmc
lcall
push
enter
dec
jb
inc
xchg
loop
rorb
xlat
mov
dec
sbb
mov
cmp
jg
push
and
adc
jmp
ljmp
xchg
pop
pop
and
inc
add
es
in
fucomi
lcall
or
movsl
aam
xor
shl
cmpsb
or
push
fwait
push
movsl
leave
js
pop
mov
and
pop
pusha
push
mov
add
std
fcmovbe
cmc
movsl
movl
int3
repnz
jae
xchg
pop
sahf
and
scas
rcll
js
sahf
gs
jno
pusha
mov
mov
add
or
xlat
adc
enter
test
out
dec
mov
cmp
ficomps
data16
mov
cmp
mov
dec
jecxz
dec
mov
sbb
enter
cmc
sub
mov
int3
xorb
dec
adc
daa
lret
adc
bound
mov
stos
xchg
mov
or
pop
add
insl
xor
aaa
cs
jmp
scas
cmp
data16
sahf
adc
das
test
jnp
pop
push
test
sub
aam
or
add
into
in
dec
add
sbb
imul
cmp
xor
insl
xchg
stos
cmc
ds
or
fninit
aad
outsl
movsb
sub
dec
loopne
into
mov
mov
dec
aas
add
mov
sbb
cmp
fcompl
test
inc
sbb
cmpsb
sar
aas
and
sti
push
dec
test
sub
jle
mov
aam
add
out
ss
xorb
and
dec
push
sbb
xor
push
sti
jmp
ret
and
cmpsb
clc
das
mov
pop
das
and
inc
lret
add
adc
pop
inc
leave
fs
movsl
cltd
xor
sub
test
inc
push
push
xchg
out
or
stos
loope
mov
xor
jae
dec
int3
imul
add
push
push
dec
mov
and
js
scas
sbb
lods
lds
sti
subb
add
aaa
test
pop
cmp
add
xchg
bound
pop
in
mov
jns
xchg
or
data16
dec
sbb
xor
mov
je
mov
data16
add
loopne
test
leave
inc
xorl
movsb
das
hlt
push
cmp
es
daa
mov
push
push
mov
dec
mov
addr16
sbb
test
addr16
clc
std
jl
ss
push
cs
das
rcrl
ret
out
pop
jecxz
xchg
decb
in
cmpsl
pop
push
aaa
fmuls
pop
daa
lea
mov
push
jmp
imul
jo
mov
inc
fs
insl
add
xchg
scas
in
mov
rcrb
test
loop
ss
subb
int
jmp
push
push
movsl
mov
xor
sub
mov
xchg
fdivs
inc
push
adc
insl
adc
jo
jl
xor
push
sti
xor
jmp
lock
scas
movsl
mov
xor
sbb
inc
cmpsl
mov
testl
sub
mov
and
aas
jl
gs
nop
pop
xor
ljmp
inc
cld
divl
cmp
gs
pop
shll
cmp
out
xor
stos
mov
sub
lcall
fucomi
cmp
loopne
or
dec
mov
daa
push
xor
gs
dec
loop
push
aad
sub
cli
sbb
lea
cmp
pop
or
add
cmpb
mov
pop
mov
jl
dec
xor
aam
call
add
pop
mov
rorb
sahf
into
pop
pop
mov
cmp
dec
cmpb
test
xchg
pop
pop
movsb
adcl
and
jno
push
cmpl
ljmp
jl
into
push
pop
insb
pop
dec
push
clc
mov
cmp
push
sbb
mov
or
pushl
dec
fwait
stc
and
insl
pop
inc
push
or
iret
sbb
adc
and
xchg
ss
or
sbb
icebp
in
xchg
lock
lahf
cltd
sbb
loope
pop
fstps
push
and
xchg
aaa
rorb
dec
inc
mov
push
cltd
xor
adc
pop
mov
test
lods
loopne
pop
push
jl
pop
fwait
movsb
loop
int
sub
push
scas
push
stos
mov
jns
rcrl
mov
mov
push
insl
outsl
or
pop
mov
mov
pop
cmpsb
lods
sub
or
call
daa
lret
push
push
iret
dec
icebp
sub
in
lds
mov
mov
dec
xor
mov
mov
sub
push
inc
jne
or
jo
cmp
mov
mov
andps
lret
out
fmull
lds
icebp
xchg
mov
les
inc
test
xchg
push
mov
dec
cmp
add
sbb
mov
jle
das
insl
imulb
stc
test
sahf
lods
imulb
mov
mov
imul
add
repz
fistpll
loop
test
sbb
mov
push
jnp
hlt
mov
jae
shlb
das
sahf
sub
jle
repz
inc
out
rolb
pop
xchg
fidivrs
fwait
jbe
jle
sub
mov
and
xor
sub
mov
jb
mov
push
xlat
xor
ret
popf
jl
ret
pop
ss
fdivr
cmp
cmpsl
dec
cmp
add
bnd
ret
inc
data16
rcrl
outsl
dec
pop
dec
mov
insb
in
add
fists
lds
mov
or
jo
les
fstl
add
call
push
enter
mov
imul
mov
stos
or
sahf
insb
mov
push
fisttpl
addr16
or
iret
stos
loopne
xchg
cmove
cwtl
out
sbb
or
jno
adc
mov
mov
bound
out
or
mov
test
push
pop
fisttpll
and
cmp
mov
inc
mov
jo
sbb
adc
in
mov
adc
mov
xchg
les
jmp
call
mov
test
movsl
addr16
popa
jb
dec
push
cmp
push
fisubs
sub
insb
push
push
clc
jg
scas
in
sub
jge
fmull
fcmovnb
mov
rorb
lea
add
adc
dec
xchg
sti
adc
outsl
mov
enter
mov
jns
add
fstp
and
dec
jb
ss
nop
std
aaa
in
imul
movsb
mov
add
test
popa
dec
pop
mov
mulb
xlat
int3
insb
sahf
ret
pop
gs
cmpsl
pop
lock
pop
inc
jle
pop
dec
mov
movsl
divl
fildll
mov
mov
jmp
int
scas
pop
ret
lcall
inc
xchg
imul
push
push
mov
insb
popf
inc
cmp
sub
testl
push
imul
push
das
jmp
cwtl
lods
mov
push
sarl
ret
add
popa
sub
mov
jae
cmp
test
scas
lcall
dec
pop
push
add
mov
push
jno
or
xchg
pop
lock
into
ret
jbe
dec
dec
push
loopne
lahf
dec
xchg
incb
mov
ret
clc
rol
xchg
adc
mov
sub
lds
add
add
mov
stc
loop
mov
lcall
movsb
rcr
fcomps
adc
jg
xchg
sub
out
dec
jnp
dec
loope
mov
lea
fsubs
repz
sub
outsl
insl
lea
pop
inc
sub
mov
sbb
xor
lods
repz
iret
in
out
dec
or
das
pop
push
mov
clc
mov
mov
into
addr16
jl
es
xchg
sbb
lcall
adc
pop
mov
and
ja
cmp
nop
sbb
or
iret
hlt
sbb
insl
mov
iret
fidivs
insb
std
inc
mov
or
jmp
call
mov
int
ja
sub
xchg
stos
dec
insl
stos
adc
dec
fadds
fldt
sub
and
sub
mov
push
add
sbb
test
lods
fucomi
ret
push
pop
mov
scas
repz
loopne
les
mov
cmpsb
popa
pop
das
or
sbb
mov
and
pusha
inc
adc
xchg
out
push
in
out
iret
cli
xor
adc
enter
je
sar
jo
stos
pop
lcall
jns
mov
inc
dec
add
pop
mov
cld
imul
cmp
dec
inc
and
sbb
es
movsl
loop
sti
or
lds
xchg
div
pop
pop
jnp
je
pop
test
mov
xor
movsl
and
adc
inc
dec
mov
jle
shl
bound
push
out
xchg
addr16
cld
inc
cli
jnp,pt
xchg
xor
and
cmp
fucomi
push
les
mov
add
xor
add
shll
imul
mov
cmp
in
pop
inc
imulb
sahf
lods
shll
bound
add
aaa
gs
std
sbb
dec
data16
adc
xlat
test
leave
ja
fs
sub
jg
inc
add
mov
scas
imul
push
leave
idiv
dec
sbb
test
in
and
out
cmpsb
icebp
cmp
fimull
xchg
push
test
cli
sub
mov
insb
insl
jecxz
jg
pop
add
jmp
imul
adc
cli
adc
jns
ret
xchg
push
pop
xchg
idiv
jmp
addl
jae
inc
mov
mov
loopne
sarl
imul
fwait
mov
and
add
mov
js
imul
mov
xchg
cli
icebp
mov
ljmp
dec
in
dec
stos
mov
in
iret
fwait
pop
int3
scas
push
jl
sub
call
push
cmp
adc
sbb
dec
loope
inc
mov
xchg
cmp
push
pop
ret
test
in
cmp
fisubl
frstor
xchg
pop
or
fistl
lock
pusha
mov
hlt
in
push
insl
mov
inc
bound
stos
mov
arpl
imul
xchg
and
xchg
xor
test
add
call
xchg
mov
aad
inc
jb
lret
call
pop
cltd
mov
arpl
jno
xor
lock
lret
cmp
sahf
add
jl
push
mov
lods
and
lods
test
rcl
inc
in
pop
imul
test
cmpl
pop
cld
out
insb
mov
inc
xor
cmp
xchg
inc
push
xor
fdivrl
pop
ljmp
sub
aas
subb
std
and
nop
and
pop
lret
and
and
fucomip
mov
mov
sbb
jne
sub
lret
sub
add
movsb
jle
aaa
sti
push
pop
test
mov
iret
cmpsl
or
data16
aad
ds
int3
jmp
fisttpll
inc
xchg
push
out
out
lcall
jecxz
or
insl
mov
movl
daa
lcall
jecxz
mov
addr16
arpl
and
iret
xor
sbb
jbe
jle
cwtl
fildl
sbb
aas
lods
fwait
adc
mov
dec
inc
sbb
xchg
pop
lret
mov
js
push
outsl
jbe
pop
mov
push
or
sbb
addr16
sbb
add
dec
mov
jl,pt
mov
xor
or
sub
or
push
into
jae
cmc
and
push
int
sub
xor
lret
push
mov
rolb
mov
mov
sbb
or
movsb
movsl
add
out
lahf
andl
push
pop
cmp
push
mov
push
pop
adc
mov
arpl
insl
arpl
mov
add
adc
lods
push
mov
xchg
and
sbb
subb
out
jnp
pop
push
hlt
add
dec
inc
fistps
es
sbb
inc
adc
test
test
mov
popa
pop
lods
jnp
mov
fildl
rcrl
fs
jns
pop
cmc
fwait
gs
inc
xlat
aaa
jbe
lock
shlb
push
pusha
adc
adc
loope
mov
xor
arpl
fisttpl
outsl
jns
push
xchg
fwait
and
fildll
sub
mov
push
decb
adc
repz
popf
pop
cmp
pop
push
pop
dec
push
shrl
movsl
or
and
sarl
inc
ja
nop
jecxz
xchg
and
out
ss
and
test
jns
pop
ss
sub
outsb
or
xchg
loope
sbb
out
pop
cmp
adc
mov
push
imul
push
shl
popf
sub
scas
sbbl
cmpsb
pop
leave
fidivrs
dec
cltd
fcoml
call
xor
notl
mov
fwait
dec
mov
jl
int3
aam
push
xorb
xchg
adc
mov
and
loope
in
shll
insl
mov
cltd
jmp
call
stos
data16
sbb
ret
leave
rcrb
push
aas
pop
js
xorl
iret
mov
mov
push
ja
mov
mov
dec
xchg
roll
stos
fst
dec
imulb
jg
in
xchg
adc
pop
pop
push
lcall
dec
inc
lea
std
mov
mov
lods
fsubrs
or
shr
iret
and
into
mov
adc
cmp
or
mov
insl
repz
cli
lahf
add
xor
ret
loopne
push
daa
loope
xchg
lods
and
pop
xorl
xchg
push
outsl
cmp
and
add
je
out
mov
iret
xchg
cmp
fdivs
inc
mov
sbb
sbb
mov
pop
in
mov
data16
cwtl
ds
subl
dec
sbb
das
add
incl
sub
dec
add
fidivrs
xchg
test
je
test
xor
jnp
mov
repz
mov
sti
jae
fldenv
hlt
aam
dec
mov
pop
fwait
ror
sub
inc
push
jp
push
fwait
push
push
fdivrl
fadd
xor
das
fidivs
pop
clc
out
add
xchg
andl
rorb
xchg
enter
into
out
jbe
cmp
test
xor
xchg
jg
enter
adc
dec
movsl
dec
fbstp
add
mov
jno
sbb
xor
sub
xchg
xchg
outsl
dec
jno
push
pop
aas
xchg
mov
andb
dec
mov
clc
arpl
add
jo
jg
icebp
jl
shlb
cld
push
shrl
rolb
mov
mov
pop
xchg
jge
mov
rcll
mov
sub
ja
cli
push
sbb
shlb
pop
mov
addr16
stos
bound
jne
movsl
stos
xchg
xlat
sub
aas
xor
fidivl
sub
sub
push
popf
sub
cli
jge
imul
mov
faddl
mov
test
in
push
and
fcom
inc
mov
scas
sbb
push
dec
push
cmpsl
cmpsb
add
hlt
divb
pop
popf
dec
xchg
lock
add
adc
jl
orb
mov
cmp
call
subb
xchg
cmp
rolb
movsl
icebp
inc
inc
lea
dec
cmp
sub
and
sbb
lret
int
mov
lahf
rclb
inc
mov
les
jmp
sti
push
lods
sbb
push
or
in
cmpsl
mov
fs
repnz
ljmp
andb
jge
pop
outsb
push
add
ret
pop
sbb
enter
imul
mov
js
in
pusha
pusha
or
shlb
add
lret
mov
inc
ret
dec
fisubrs
push
pop
mov
enter
popa
bound
insl
andb
loopne
xor
pop
cli
sbb
shll
stos
jmp
sbb
stc
xchg
lods
fidivrl
jge
out
jno
and
popa
or
and
xchg
jb
je
sti
mov
cs
fldt
push
jo
enter
hlt
add
mov
dec
ljmp
cmp
mov
and
inc
jl
dec
and
pop
shl
push
lcall
jns
aas
push
lret
outsb
push
mov
movb
jno
mov
orb
lods
hlt
cmp
sti
and
test
ret
shl
adc
mov
fs
int
fiadds
sbb
inc
mov
cmp
adc
aam
clc
in
xor
sub
in
cmp
test
stc
mov
fcmovne
xor
add
cltd
mov
pop
mov
jle
into
js
or
mov
xchg
orl
xchg
mov
call
add
and
gs
xorb
adc
pop
test
sub
add
sub
cwtl
in
inc
lods
das
jecxz
cmpb
sbb
out
xchg
xor
ja
std
ss
mov
jae
fidivl
mov
or
or
pop
jae
fsubr
rcrb
xorl
adc
in
test
jl
aaa
and
ljmp
mov
repz
enter
out
sub
dec
stos
adc
jns
cmp
mov
clc
repnz
jecxz
fcomp
cmp
jp
icebp
std
popa
pop
xchg
mov
cmpl
dec
rcrb
fs
nop
jmp
adc
mov
pop
fwait
sbb
pop
adc
jle
mov
pop
push
cmp
xor
push
mov
into
sub
pop
jl
mov
jecxz
sub
or
add
mov
aaa
shlb
push
stos
enter
push
sbb
inc
daa
fs
adc
pop
inc
or
loopne
imul
jp
inc
lahf
dec
ret
repz
push
inc
add
jg
push
cmp
rcl
adc
sarb
push
stos
insb
lcall
roll
hlt
repnz
inc
inc
and
and
faddl
insb
movsl
sbb
stos
int3
mov
xchg
filds
xor
adc
jbe
xchg
pop
mov
add
and
jl
pop
js
xor
test
add
pop
cmp
fsubl
insb
test
jl
jns,pt
jo
sbbb
mov
test
mov
dec
dec
test
inc
xchg
movsb
xlat
loopne
lret
inc
aam
int
outsb
inc
mov
xor
push
inc
add
ja
enter
roll
dec
mov
fwait
imul
or
jno
movsb
add
clc
movsl
cwtl
xor
xchg
cs
xchg
dec
imul
stos
inc
mov
je
mov
out
dec
pop
aam
push
dec
dec
sub
sbb
mov
push
lahf
addr16
gs
mov
js
mov
aas
repz
test
mov
repnz
cltd
sbb
jmp
stc
inc
js
inc
sbb
pop
insb
dec
insl
cmp
cltd
dec
xchg
jle
dec
popa
fcomp
cli
pop
leave
shll
sub
fldenv
fdivs
mov
add
out
sub
mov
into
sbb
fcom
mov
das
aas
pusha
lcall
sbb
push
jle
stos
mov
xor
js
jb
push
fidivrl
jae
mov
xchg
cmp
and
popa
xor
cmp
mov
jl
dec
dec
stc
mov
pusha
stc
mov
mov
mov
push
cmp
call
inc
jg
xor
xchg
dec
test
push
mov
nop
ficoml
and
jecxz
jb
cmpb
sbb
jp
rcrb
adc
sti
subps
hlt
sub
or
fnstenv
xchg
mov
jb
xchg
mov
cmpsl
add
cwtl
adc
or
jbe
add
rcrl
fs
roll
inc
cmpsb
outsb
aas
mov
daa
xchg
inc
mov
inc
sahf
pop
aad
inc
sarb
jp
loop
mov
cs
inc
fwait
sbb
jp
push
out
push
ret
push
addr16
sahf
sbb
mov
xchg
mov
pop
mov
fidivrl
sbb
sbb
fadds
lea
adc
and
pop
xor
mov
cmp
mov
clc
aad
ja
subb
shlb
cltd
sti
push
mov
xor
mov
scas
inc
dec
sbb
clc
test
popf
mov
or
pusha
pop
cld
xor
pop
sarb
sahf
dec
pop
mov
sbb
cmp
and
cmp
rcrb
add
das
push
push
jp
pop
adc
mov
sub
fs
fisttpl
insl
pop
mov
cmc
cwtl
inc
add
adc
mov
sti
lcall
xchg
mov
rcr
inc
mov
sub
pop
mov
xchg
mov
cs
xor
ljmp
pop
cmp
lock
mov
push
push
xchg
lods
sbb
nop
pushf
fstpt
mov
mov
fsubl
or
jae
cmp
lcall
aaa
jmp
cmpsl
xor
cmp
sub
or
or
dec
popa
mov
stos
jg
ljmp
fcomi
fsubrs
jno
jl
xor
pusha
pop
sbb
int3
insb
cmp
sbb
std
mov
in
xchg
push
xchg
add
push
in
popa
lea
ss
push
icebp
outsl
rorb
fmuls
out
aad
hlt
mov
dec
or
pushf
push
push
test
inc
push
fwait
sub
jmp
scas
lret
sar
outsb
mov
mov
mov
xchg
in
ret
loop
push
cli
cmp
pop
xor
or
xchg
in
mov
mov
sub
loopne
rcrb
inc
pop
mov
test
es
xchg
dec
js
sub
decb
xor
sbbb
push
pop
movsl
mov
cmp
arpl
call
mov
nop
decl
into
ret
push
dec
jmp
not
adc
xchg
cmp
xor
lods
sahf
inc
sub
cli
mov
sub
pop
cwtl
xchg
adcb
aad
cld
push
shlb
push
fisubrl
or
hlt
xchg
xchg
jo
mov
outsl
push
jl
out
push
add
fldl
mov
lahf
mov
push
out
pop
arpl
push
and
or
pop
mov
outsl
xor
push
mov
dec
insb
mov
addr16
pop
add
mov
mov
dec
clc
das
jae
or
jmp
dec
mov
pop
int
stc
lea
inc
cmp
mov
push
shll
push
and
adc
in
sahf
pusha
adc
aaa
mov
sarb
in
fwait
push
cmp
pop
cmpsl
dec
mov
or
lahf
sbb
lods
negl
sbb
xchg
and
xchg
pop
bound
fwait
imul
adc
push
les
cmp
repnz
xchg
je
mov
mov
jb
into
addb
repz
cs
test
or
insl
or
cmp
mov
xrelease
dec
sbb
stos
xor
mov
sarl
aaa
enter
fdivrl
aad
jecxz
push
sbb
imul
xchg
int3
mov
stos
and
adc
adc
into
xchg
pop
inc
mov
add
iret
inc
add
movsb
sbb
jecxz
jg
mov
xchg
nop
inc
leave
or
int
mov
xchg
outsb
aam
push
jl
hlt
add
fistl
negb
insb
add
dec
sub
push
shlb
push
sub
loopne
adc
and
arpl
pop
fistps
xor
scas
movsb
idivl
mov
jecxz
loopne
push
and
ljmp
divb
inc
xchg
push
mov
fbld
sbb
testb
push
out
aaa
fisubrl
add
in
or
jbe
mov
jns
aam
and
mov
fdivrl
and
pushf
mov
lock
pop
pusha
pop
adc
inc
push
sbb
lahf
lods
and
bound
fsub
ljmp
push
lret
xchg
push
cltd
inc
mov
ret
test
test
aad
aas
int3
mov
dec
push
push
and
inc
mov
lret
lea
mov
sbb
imul
cs
mov
jge
mov
sub
pushf
cltd
out
js
les
out
xor
mov
and
push
mov
mov
stos
dec
push
adc
stc
icebp
xor
outsl
mov
xchg
out
mov
loopne
and
in
cmp
imul
mov
pop
jb
mov
jne
test
sub
cmp
fdivl
shrb
out
daa
lret
or
aas
mov
ja
lock
adc
mov
loope
adc
in
mov
jmp
lea
add
in
jae
and
dec
call
repz
aam
test
cmp
aam
mov
shlb
fisubrl
fs
xchg
jecxz
xchg
fadds
stos
cmpl
mov
pop
cmp
cmpsl
add
cmp
fdivrs
stos
push
cmpsl
in
jns
sar
mov
xchg
stos
out
cmp
lret
mov
fcoml
sub
loop
sub
insb
pop
andb
cmp
add
adc
mov
and
scas
outsb
aam
inc
lock
cmp
sbbb
or
imul
lods
or
mov
cmp
pop
pop
cmp
push
or
cmp
hlt
call
pushf
mov
and
pop
gs
push
cwtl
sub
in
mov
pop
mov
clc
xchg
je
mov
fstpt
xor
adc
jno
xorb
inc
aam
mov
cmpl
pop
and
lret
aad
dec
cmpsb
fs
jmp
test
sub
and
adc
jno
dec
mov
test
test
rclb
xorps
loopne
scas
enter
push
mov
mov
inc
jbe
add
sub
movsb
inc
and
dec
rclb
xor
pop
iret
pop
je
into
mov
pop
icebp
mov
rorb
ljmp
mov
or
add
inc
xchg
inc
mov
mov
push
sbb
mov
test
scas
pop
mov
sub
int
pop
fcmovnb
dec
xchg
dec
or
in
int
jle
scas
stc
in
fcomi
std
inc
xchg
sub
or
ljmp
js
jmp
int3
data16
pop
cld
dec
in
push
jmp
enter
pop
jno
sub
lret
lea
sti
movsl
dec
pop
daa
xchg
es
dec
dec
pusha
fcoms
in
xor
inc
xchg
pop
scas
stc
inc
rep
je
or
jno
roll
push
add
mov
dec
fimull
fisttpl
jae
or
mov
sahf
mov
xchg
rcrb
jg
and
pop
mov
and
cmp
mov
xchg
scas
cmp
pop
mov
loopne
inc
aad
mov
das
xchg
pop
lds
dec
in
pop
xor
jg
hlt
in
mov
dec
mov
shl
push
in
in
sub
insl
push
add
je
imulb
xor
mov
rcr
jnp
sbbl
cmp
fstpt
ret
jmp
loopne
sub
push
or
mov
inc
cmp
int3
xchg
jp
movl
mov
outsl
push
cmp
stc
sahf
inc
movsl
sub
das
mov
and
outsl
adc
mov
jmp
lods
ret
rorb
inc
jae
sarb
mov
jg
cwtl
orb
ret
jg
cmp
movsb
jg
cmc
mov
jae
xchg
xor
or
mov
or
sbb
addr16
mov
pop
test
icebp
cltd
jns
pop
jl
adc
aam
sahf
push
cvttps2pi
insb
jp
shl
jmp
pop
adc
repz
movsl
scas
adc
mov
out
sbb
js
dec
test
arpl
dec
sub
fst
popf
fistps
jecxz
rorl
push
xchg
sub
push
mov
pop
mov
shlb
push
popf
mov
or
mov
xchg
hlt
testl
insb
enter
lret
clc
jbe
add
in
push
sahf
cli
cmpsl
mov
mov
popa
sahf
xchg
pop
push
inc
nop
push
pop
add
imul
inc
jne
xor
out
outsb
push
or
lds
lret
fidivl
push
cmp
icebp
repz
imul
adc
mov
sub
pop
dec
mov
inc
push
hlt
cmp
inc
das
mov
jb
fstpt
in
testl
out
dec
sub
out
xor
push
les
sbb
mov
push
outsl
pop
es
cs
push
shrl
ss
orb
popl
jg
lea
mov
mov
jno
xor
add
jo
arpl
leave
and
movsb
je
jle
into
addl
mov
push
cmpl
mov
xchg
ret
cmp
imul
les
fwait
int3
xchg
rcr
ljmp
pop
hlt
fisttps
fbld
cli
test
jne
and
repz
jmp
jb
mov
cmp
push
cli
call
inc
jg
mov
fistpll
xchg
mov
jne
rcrb
dec
stc
pop
sahf
jg
sbb
mov
cmp
inc
arpl
sbb
aaa
scas
addr16
adc
sti
fisubl
je
scas
aam
js
lock
les
sti
popa
mov
cmp
push
cmp
lods
add
popa
push
aad
mov
cmpxchg
fdivrl
dec
jp
nop
jns
arpl
pop
inc
mov
jl
fsubs
mov
add
arpl
hlt
and
and
inc
cmc
repnz
ror
stos
fimull
mov
orl
jns
and
xor
ja
hlt
decb
pop
mull
jbe
arpl
jb
sbb
sbb
lahf
icebp
xor
or
insb
scas
xchg
out
pop
movsb
aad
fcomps
mov
xor
gs
loopne
lcall
cmpsl
js
notl
jge
pop
aad
scas
mov
imul
cli
mov
stos
es
sbb
stos
inc
imul
repz
fidivs
rolb
in
xchg
mov
mov
iret
adc
popa
out
out
xor
ds
sbb
aaa
es
and
xchg
movb
shl
adc
or
pop
jno
jmp
pop
cwtl
in
loop
lahf
sbb
or
cmc
push
mov
sub
add
fcoml
jmp
sbb
sub
jb
xor
rolb
mov
push
jp
movl
inc
cltd
sbb
mov
loopne
mov
inc
nop
decl
cs
bound
testb
addr16
test
arpl
mov
loopne
pop
test
std
int
js
sbb
cmp
push
xchg
pop
addr16
repz
sbb
fdiv
fdivs
adc
and
testb
mov
out
cmp
imul
sbb
push
cltd
repnz
add
call
scas
inc
xor
aas
dec
fcomp
jmp
xor
sbbl
mov
and
and
aam
int
fsubs
jnp
lcall
fwait
pop
repnz
andl
stc
pushf
je
fwait
push
and
loop
pop
scas
out
add
or
int3
insb
fnsave
repnz
es
repnz
or
shr
test
inc
inc
sbb
and
icebp
pop
pusha
mov
fidivrl
add
inc
sub
mov
push
and
xchg
dec
mov
pop
mov
shlb
and
in
xor
shll
cmp
xchg
stc
pop
inc
mov
xor
sbb
push
in
adc
jge
xchg
repnz
dec
test
scas
push
mov
imul
leave
pop
jmp
out
xchg
test
lret
mov
data16
push
add
jbe
insl
xor
mov
rorw
out
or
not
leave
cmp
repz
out
xchg
mov
add
fbstp
mov
rorl
dec
call
adcb
lcall
fildll
nop
add
aas
movsl
mov
bswap
out
xchg
nop
jnp
cld
in
rcll
out
dec
adc
mov
mov
mov
jecxz
pop
push
sbb
inc
mov
jbe
mov
inc
popa
mov
ret
dec
inc
pop
or
mov
clc
aad
mov
jg
mov
arpl
jl
or
lock
insl
push
hlt
iret
std
data16
mov
adc
fs
ret
sbb
push
das
icebp
dec
imul
sti
mov
jp
shlb
call
sbb
add
pop
inc
int
pop
ds
cmc
adc
cs
pushl
fwait
stc
push
stos
in
pop
dec
ret
sbb
aas
dec
in
mov
add
outsl
in
sbb
sar
sbb
loope
sbb
push
adc
push
popf
push
xchg
jmp
rol
jmp
pop
mov
sar
jae
fcompl
add
gs
push
jb
test
js
aam
movsb
je
lret
jl
jno
call
shll
loop
jg
adc
pop
or
sub
jb
sub
sar
and
cmpsl
dec
das
mov
call
xor
adc
daa
xchg
in
push
push
cmp
adc
xor
inc
or
pop
push
mov
dec
pop
jg
push
mov
mov
push
pop
out
popf
mov
imul
ljmp
or
in
test
mov
mov
inc
xchg
sahf
cmp
xchg
rcrb
shrb
stc
call
fildll
lret
or
divb
push
or
pop
sub
clc
mov
push
push
dec
call
rcll
xchg
daa
mov
sub
enter
push
aaa
outsl
lods
rcl
dec
cmpsl
jmpw
jecxz
test
mov
imul
ss
in
sahf
inc
add
movl
mov
out
sbb
pusha
popf
xor
aad
mov
inc
jae
and
das
push
pop
adc
push
test
jbe
jl
sub
sub
and
and
mov
gs
adc
ret
roll
cmpsl
stc
dec
testl
add
pop
cmp
out
xor
test
out
sti
movsl
shl
pop
sahf
sti
jns
inc
clc
xchg
mov
mov
push
mov
sar
ret
popa
push
push
xor
loop
or
jnp
es
ds
or
arpl
push
add
daa
and
push
lods
inc
call
mov
dec
xor
mov
pop
adc
arpl
pop
cmp
xchg
inc
adc
mov
lcall
mov
outsl
sub
popf
mov
dec
aam
dec
mov
pop
std
data16
sbb
cmp
into
dec
push
add
nop
mov
jge
je
or
hlt
dec
repnz
push
test
aad
jne
xchg
jne
dec
es
cmc
sarl
and
xchg
mov
xchg
cmp
mov
aam
hlt
dec
sbb
testl
movsl
fbld
pop
sub
out
push
jne
xor
mov
jno
cs
popf
mov
rolb
xchg
loopne
pop
fs
jne
roll
inc
cltd
xchg
mov
inc
scas
fwait
bound
and
or
and
dec
lcall
stos
lds
mov
orl
out
jmp
aad
xorb
push
test
xchg
fiaddl
or
xchg
sbb
shll
stos
int
xchg
std
clc
push
in
jno
mov
pop
leave
pop
divl
daa
mulb
dec
push
xchg
dec
mov
mov
sbb
sarl
mov
jns
adc
pop
loopne
fcmove
dec
popa
imul
jns
xchg
mov
dec
hlt
popa
mov
test
pop
sub
jge
arpl
xchg
xor
aaa
add
mov
pop
mov
add
dec
lods
popf
das
ljmp
popf
pop
lcall
cmpsl
aaa
movsb
add
and
dec
scas
icebp
xor
pop
add
push
xchg
pop
dec
movsb
cld
jle
test
xor
mov
inc
jge
test
mov
and
cmp
add
jl
or
movsb
cmp
sbb
mov
sbb
inc
xor
add
daa
inc
adc
add
in
bound
lcall
inc
pop
shlb
jae
test
shl
fdivrp
dec
sub
add
fcompl
inc
lods
in
inc
repnz
test
cmp
xlat
loop
or
cmp
into
aas
mov
cmp
push
jge
xor
iret
aas
negb
xor
addr16
adc
fs
outsl
jns
mov
negl
dec
xor
test
pop
push
cmp
pop
and
out
cmp
dec
jo
xor
rcrb
sbb
imul
xor
das
add
xor
mov
fimull
lcall
pushf
jmp
jo
xlat
push
jmp
out
jns
int
insb
and
jo
fstl
sub
jge
push
or
xor
shll
push
enter
insb
sub
mov
pop
jge
fwait
sub
outsl
and
and
fldl
push
loopne
lock
inc
aas
jg
mov
ja
out
adc
sub
cmp
push
mov
and
lea
and
mov
call
pop
push
adc
pop
subb
pop
xor
int3
fidivrl
hlt
outsl
push
loop
stc
dec
notb
sbb
xchg
iret
pop
lahf
dec
hlt
in
movswl
cmp
sahf
pushf
mov
popf
es
clc
mov
adc
cmp
push
stc
adc
or
cmpb
push
push
push
cmp
xorl
hlt
xlat
pushf
clc
adc
movsl
mov
loopne
sti
pop
push
add
lret
cmp
cmpl
sbb
xlat
push
vxorps
mov
push
mov
push
orl
and
cmp
cld
sarb
dec
or
jl
call
dec
test
leave
mov
xor
sar
inc
push
fucomi
jg
or
xchg
rcrb
jns
or
mov
sub
data16
jp
pop
or
push
clc
cmpl
mov
dec
sbb
push
jl
pusha
sbb
pop
sbb
sarl
clc
add
out
mov
push
inc
pop
sub
test
mov
adc
add
jae
and
rclb
stos
jge
gs
ljmp
xor
jne
push
mov
cmc
shlb
push
scas
filds
out
add
mov
int
push
adc
sbb
mov
test
das
cwtl
outsb
inc
fsubrs
dec
xchg
mull
jmp
sti
xor
fisttps
mov
imul
gs
xchg
outsl
bswap
shll
add
xchg
bnd
xor
adcb
dec
add
in
jecxz
les
hlt
and
mov
xchg
cmp
xor
test
lret
cmp
ds
cmp
adc
fimuls
mov
cmpsl
sbb
les
sbbb
vpminub
ja
popa
popf
add
outsb
cmc
addr16
mov
adc
mov
fs
inc
xor
mov
pop
sbb
lock
mov
out
xchg
enter
out
cmp
mov
loope
popa
push
out
sub
outsb
in
es
lds
cmp
das
mov
adc
push
xor
ret
or
push
les
xchg
mov
jg
and
sub
lahf
cs
and
es
pop
decl
fs
lods
rolb
sub
data16
add
adc
andl
aad
and
repnz
and
scas
dec
cmp
pop
rcl
pop
jg
jmp
ds
pop
sub
or
inc
bound
test
mov
mov
or
inc
sbb
in
sub
in
push
add
lret
push
xchg
dec
sbb
in
outsb
add
out
lods
stc
stos
push
mov
sbb
jmp
ljmp
sbb
ss
js
std
mov
js
xor
call
movsb
pop
push
les
gs
add
or
adc
or
lds
cmpsl
jmp
lret
xchg
ja
mov
outsb
and
bound
mov
xchg
pop
or
ret
mov
jmp
je
mov
fimuls
pop
inc
icebp
outsl
cmp
and
xchg
daa
mov
aam
mov
pop
mov
and
jg
xchg
insl
ret
and
stos
sahf
jmp
mov
rclb
jmp
push
push
sahf
push
gs
popa
cmp
xor
fsub
aam
mov
xchg
push
fists
bnd
sbb
xchg
add
iret
aaa
jle
xchg
cs
mov
xchg
movsl
fists
addr16
cli
dec
push
cmp
dec
divl
push
cmp
insl
lea
jmp
push
div
das
mov
dec
add
jae
xor
out
les
jo
jb
pusha
je
pop
mov
inc
insb
in
xchg
push
adc
mov
mov
test
adc
bound
mov
enter
jnp
inc
test
xor
sbb
cmpsb
lock
adc
pop
xor
jno
dec
push
mov
cmp
xor
jg
repnz
movsl
imul
pop
xor
xor
and
mov
dec
cmpsb
popa
mov
int3
push
fnstsw
xchg
movsb
fcmovu
adc
cmp
fwait
pop
lret
push
inc
mov
push
pop
or
add
sub
fdivl
stc
mov
mov
aaa
push
xor
pusha
jns
fldl
inc
sbb
imulb
jae
popf
jmp
jg
push
xor
cmc
inc
ret
arpl
loopne
pop
xor
jle
out
jmp
call
ret
into
cltd
movsb
stc
sbb
add
aad
sub
sub
out
ret
icebp
les
or
aam
lock
dec
lahf
cmp
adc
and
pop
xchg
call
xlat
mov
dec
pusha
xor
pop
adc
cmc
loopne
cmpsb
leave
mov
cmp
or
or
adc
mov
xchg
sub
xor
adc
out
insb
pop
or
negl
sbb
das
push
sub
sbb
lcall
ror
aam
adcb
repnz
dec
push
fidivl
lret
inc
jl
lea
pop
cmc
scas
in
cmpsb
not
adc
mov
arpl
dec
roll
and
addr16
imul
movsb
and
sbb
and
stos
loopne
inc
arpl
or
outsb
arpl
cs
out
add
cmp
bound
insb
mov
mov
xor
add
mov
jge
pop
sub
int
les
leave
xor
out
enter
pop
and
pushf
shrb
sarl
sbb
mov
xor
xchg
and
sbb
jo
rorl
push
xor
cltd
push
outsb
clc
xchg
ljmp
cmpsb
shlb
add
sbb
mov
mov
jo
je
js
add
jl
xchg
pop
ljmp
jg
addr16
mov
out
out
sahf
loop
mov
add
sub
pop
xchg
pop
cmp
in
jb
arpl
add
or
dec
cli
nop
cwtl
outsl
sbb
outsl
or
in
test
xor
insb
stos
leave
push
mov
mov
scas
imul
loopne
inc
xor
inc
mov
xor
ja
lds
pop
sub
dec
or
mov
mov
push
data16
push
jecxz
or
test
add
inc
jno
pop
movsl
jb
nop
movsl
xchg
lcall
push
dec
add
cmp
inc
lods
cmc
in
push
jmp
push
add
dec
rclb
or
dec
add
dec
inc
mov
pop
mov
xor
bound
iret
mov
ss
mov
mov
adc
jae
inc
ljmp
cld
imul
xchg
inc
rcr
xor
jge
outsl
aad
jne
cmp
clc
or
dec
mov
push
or
js
mov
xchg
aas
jbe
das
aas
sub
dec
adc
jnp
or
arpl
sub
jne
sbb
mov
test
and
pop
adc
xlat
mov
mov
stos
idivl
push
rcrb
add
je
push
adc
in
pop
shlb
jp
xchg
xchg
jns
fwait
pop
in
push
movsl
cli
jecxz
int3
in
sbb
clc
adc
arpl
or
cld
cmpsl
mov
js
in
out
mov
push
js
push
sub
jne
in
je
sbb
inc
pop
stos
push
add
loop
sub
jle
push
mov
cli
xor
xor
push
lods
jecxz
xchg
cmc
into
cmp
ja
shufps
out
sub
fs
push
sbb
inc
or
xchg
push
ja
repnz
into
dec
insb
xchg
pop
pop
popa
mov
mov
dec
popf
xor
pop
cmpsl
jno
xlat
popf
jmp
and
popf
push
push
outsb
movsb
pop
divb
cmp
mov
rcrl
aam
mov
push
pushf
out
jg
xchg
mov
aam
and
test
mov
mov
icebp
lds
clc
iret
adc
das
call
je
ret
stc
les
sub
pop
loopne
xchg
cmp
cmp
imul
inc
iret
mov
movsl
call
mov
mov
jae
jecxz
scas
or
and
insl
adc
jne
clc
or
lea
fisubrs
imul
enter
addr16
push
pushf
pop
xchg
mov
jne
adcl
xor
inc
dec
divl
push
fadds
hlt
in
call
scas
roll
addr16
movsb
aam
cmp
sub
pop
imul
sub
cli
mov
lret
int
push
cmpb
aaa
in
dec
adc
jnp
adc
je
sahf
dec
fldl
addr16
pcmpgtw
std
or
sub
out
inc
shlb
data16
sbb
push
sub
mov
pop
sbb
push
lods
lahf
out
dec
sti
fisubs
dec
imul
push
or
iret
test
mov
or
dec
lret
pop
lods
xor
mov
xor
pushf
in
das
sbb
mov
pusha
mov
sub
mov
lock
loope
jp
jnp
inc
lcall
push
sbb
xchg
ret
mov
and
add
pop
cwtl
pop
outsl
adc
mov
push
sub
mov
aad
setns
xor
pop
andb
lods
arpl
mov
push
subl
test
pop
cmp
mov
dec
clc
lods
push
jmp
into
xor
xabort
dec
lret
iret
inc
inc
lock
mov
ret
mov
popf
add
sub
inc
jbe
sbb
popf
pop
and
pop
sbb
xchg
in
shlb
scas
mov
sarl
pop
xchg
leave
pop
rclb
push
les
inc
fucomp
nop
fidivs
lds
ss
lods
jg
pusha
aaa
addr16
mov
sub
pop
movsb
jo
and
lcall
out
cmp
pop
int3
push
sar
enter
clc
mov
cli
xor
fnstsw
sar
cmpsl
mov
test
imul
cld
in
fmull
jl
hlt
mov
test
push
scas
ret
and
mov
jbe
mov
jl
xor
pushl
das
daa
scas
loope
fbld
sbb
cmp
lcall
cmp
mov
testb
sti
aad
and
push
dec
loop
or
nop
jl
jmp
push
call
xchg
js
adc
lret
mov
jns
test
sbb
cs
pushl
rcll
loopne
sbb
fcompl
mov
sub
fdivp
inc
pop
scas
and
xchg
mov
into
xchg
add
mov
sbb
cwtl
aad
mov
mov
enter
scas
mov
xchg
xchg
test
mov
cmp
pop
in
fcomi
add
xchg
inc
xor
sub
sub
ficoml
sub
add
xchg
xchg
cmpsb
cmp
stos
lock
adc
cli
fistps
fsts
mov
cmp
stc
and
jno
mov
xchg
and
inc
xorb
lea
fcoms
mov
das
dec
sub
out
inc
je
jns
add
rcrl
cmp
mov
bound
leave
push
jbe
mov
je
cs
cmp
add
sbb
mov
jns
repz
cmpsl
fwait
adc
or
scas
int3
adc
mov
inc
into
mov
stc
lcall
or
dec
xchg
shll
cltd
push
arpl
ds
xlat
lcall
ret
mov
fs
popl
adc
add
test
cltd
mov
sbb
jnp
sbb
dec
cmp
mov
xchg
or
imul
es
mov
pop
jge
push
stos
push
fwait
cmc
mov
lock
mov
xor
fwait
je
bswap
aaa
xchg
popf
fdivs
imull
mov
push
sbb
jge
xchg
sub
and
push
push
sub
fistps
jno
leavew
jo
xchg
lahf
jmp
jno
mov
arpl
jmp
movsb
jg
fidivl
movsl
out
mov
adc
shll
sub
fiaddl
int3
test
clc
mov
add
outsb
iret
dec
and
mov
pop
cmp
xchg
stos
dec
sbb
pusha
lods
outsl
in
push
mov
mov
xchg
mov
imul
shr
pop
or
sub
ss
in
repz
ja
xchg
loopne
in
cmp
call
int
sbb
out
adc
and
outsb
mov
inc
int3
or
repnz
and
roll
dec
jne
stc
pop
lahf
sub
stos
icebp
fstps
outsl
popf
push
cs
mov
adc
idivb
dec
lock
xchg
cwtl
fs
daa
xchg
sbb
and
lcall
pop
mov
fisubs
out
pop
push
lea
mov
scas
fildl
jle
les
or
cmp
sbb
shrb
outsb
mov
or
fisubl
pusha
stc
aas
movsl
cmpsl
fwait
test
mov
cmp
ss
jp
mov
sub
scas
dec
jg
int3
test
pop
fwait
jnp
lock
sub
repz
sbb
mov
stos
inc
jp
mov
repz
test
cld
cli
loopne
ret
cltd
shrl
insl
mov
dec
lods
lret
sub
pop
add
les
xchg
mov
jb
outsb
sbb
enter
into
pop
jg
add
leave
sub
mov
aad
subb
pusha
cs
loope
pop
setl
ret
out
add
hlt
fcmovb
push
outsl
nop/reserved
ret
lcall
in
pop
nop
xor
pop
push
in
cmp
and
push
ja
sbb
and
mov
mov
scas
insl
ss
sbb
cmp
jb
lods
fists
push
repnz
xchg
pop
xor
ret
mov
mov
inc
inc
mov
or
lea
scas
mov
nop
push
out
mov
sub
jo
jns
and
hlt
imul
das
jle
fwait
pop
lret
and
into
or
insb
cmc
les
or
push
or
push
jne
jp
or
ret
push
aam
jbe
in
iret
das
mov
faddl
out
or
adc
sub
mov
lahf
icebp
push
mov
jmp
sbb
mov
mov
push
inc
out
inc
pushf
sub
clc
mov
mov
jecxz
mov
jg
testl
sbb
cmp
jb
jmp
stc
xor
and
dec
cmc
jg
sbb
mov
push
ds
lods
in
sarl
test
leave
aaa
decb
push
lds
dec
push
test
and
inc
add
push
int3
xchg
mov
out
lods
test
popa
js
adc
fcoms
pop
sbb
scas
jmp
dec
mov
mov
dec
js
push
pop
insl
jmp
add
lock
lcall
pop
shrb
stos
stos
hlt
xchg
xor
sets
out
addr16
push
int3
mov
dec
lds
fidivl
xor
stc
adc
sub
out
mov
lret
ss
jnp
in
daa
sti
bound
jb
push
add
iret
jnp
jmp
arpl
aad
jo
lahf
movsl
test
inc
lcall
dec
xchg
push
iret
ss
mov
mov
decb
cs
movsb
mov
add
mov
adc
divb
xor
mov
inc
mov
push
mov
push
pop
xchg
sub
xchg
daa
hlt
xchg
jbe
cltd
pop
inc
dec
lea
sahf
dec
mov
push
adc
sbb
adc
lret
nop
xor
iret
and
sbb
movsb
xlat
iret
cld
jns
cmc
or
jbe
jmp
or
iret
cmp
orb
cli
and
outsl
es
int3
xchg
enter
sahf
mov
mov
rcrl
movsb
adc
shlb
ret
add
int
lret
push
mov
into
cmc
push
dec
iret
aad
jo
icebp
fcoms
imul
out
std
sub
xor
pop
jmp
jecxz
and
sbb
dec
jno
jae,pn
outsb
mov
lods
push
pop
cld
pushf
faddl
mov
add
mov
and
es
pop
je
xor
popa
inc
fisubs
bound
xor
push
mov
add
xchg
adc
sbb
stos
mov
aad
lret
pop
jno
add
nop
mov
inc
mov
dec
fdivrs
dec
mov
shl
mov
push
testb
cmp
cmc
or
stos
mov
dec
push
xchg
pop
rcll
cwtl
push
mov
mov
add
cs
and
xor
push
hlt
imul
pop
dec
pop
pop
popf
iret
push
mov
sbb
mov
mov
mov
or
scas
decl
shll
imul
mov
cmc
divl
jne
daa
repnz
sub
inc
fcomip
cmp
ret
ret
add
jmp
jl
sub
ret
flds
jge
dec
dec
lahf
subl
sahf
dec
inc
negl
jecxz
jnp
or
test
jmp
pop
pushf
dec
fwait
cld
push
test
pusha
cmp
mov
push
and
bound
sub
loope
shl
pop
sbb
aad
bound
cmpsl
clc
xchg
movsl
push
push
cld
rclb
pop
adc
mov
sahf
or
dec
test
int3
pop
mov
icebp
xchg
sub
and
cmp
inc
cwtl
fs
cli
and
dec
xchg
mov
pop
and
out
inc
rcr
push
aas
adc
pop
popf
cmp
lock
and
ds
hlt
fwait
jno
jle
xchg
in
aam
popf
mov
xchg
out
aas
push
and
xchg
pop
enter
int
fldt
mov
ja
lods
shrb
and
mov
inc
jmp
enter
ret
mov
test
or
push
cmp
fdivrl
pop
mov
xor
das
sbb
lock
inc
movsl
andb
mov
pop
jae
mov
test
fst
xor
xchg
push
push
test
and
adc
test
adc
cltd
movntps
mov
inc
push
mov
fstl
ret
xchg
out
push
xchg
dec
sbb
or
fsub
cmpsb
mov
leave
jns
test
fs
in
rep
jne
shl
jbe
xchg
jg
push
cmp
cmp
xchg
and
dec
outsl
dec
mov
pop
pusha
jnp
push
ljmp
or
xlat
pushf
aas
test
inc
xor
xor
mov
mov
scas
add
xor
mov
and
mov
out
push
bound
stc
jo
mov
sub
jmp
mov
or
pop
jge
pop
fnclex
mov
push
sub
jp
push
sub
hlt
ss
ret
push
and
andb
imulb
cld
and
and
mov
mov
push
push
add
fisubrl
aas
vfrczss
dec
mov
call
mov
pop
push
outsb
mov
add
lahf
mov
out
cltd
pop
add
jbe
js
aad
add
cmpsl
pusha
cmc
lods
add
stc
mov
fistpl
or
xor
mov
cwtl
pop
pop
push
cmpsl
sahf
sbb
dec
push
fdivs
mov
scas
sbbb
lods
fadds
data16
mov
ja
fcmovnb
pop
jae
rclb
jecxz
cltd
test
push
mov
adc
repnz
xchg
dec
xchg
fcmovnbe
in
dec
adc
xchg
or
xchg
cmp
mov
jo
je
xchg
mov
stos
cmpsb
jg
mov
and
xor
mov
ret
mov
jge
insl
sbb
inc
mov
ret
xchg
repz
insl
lret
ds
xchg
inc
pop
jg
aam
lods
xorb
mov
subl
mov
adc
loop
dec
mov
loop
push
arpl
push
xchg
lea
cmp
test
fsubl
sbb
mov
push
push
jg
xchg
cmp
outsb
ja
pop
adc
jae
push
insl
dec
repz
sahf
emms
dec
or
push
ja
pop
sub
stc
arpl
jmp
jl
xor
gs
lret
push
jno
popw
icebp
pop
cli
xchg
imul
out
mov
fidivrl
iret
jne
inc
iret
movsb
lret
pop
and
inc
scas
das
inc
js
dec
iret
shrb
dec
sub
test
push
mov
pop
fisttpl
ret
aam
addr16
push
mov
ja
adc
xchg
test
addr16
jno
jmp
stos
mov
pop
pop
xchg
sub
inc
jb
add
push
out
sub
xor
push
and
fsts
or
nop
fdivl
int
or
mov
add
cmc
jns
icebp
mov
scas
popf
dec
lods
pop
push
loop
pop
nop
push
mov
lret
sub
and
adc
mov
pop
and
dec
xchg
sarl
aas
sahf
cmpsl
popl
sub
jecxz
or
xor
add
mov
push
in
jo
xchg
fisttpll
jb
pop
fiadds
test
jnp
cmp
or
pusha
test
das
lcall
jae
push
dec
mov
enter
push
sub
and
mov
adc
sub
in
aaa
rolb
pop
dec
jno
dec
lret
mov
dec
lahf
aad
pop
xchg
out
mov
enter
sub
roll
xchg
push
pop
imul
push
es
add
int
mov
cltd
rorl
pushf
pop
adc
xchg
xchg
jb
jp
jbe
push
je
xchg
loopne
xlat
cs
inc
cmp
xchg
aam
mov
pop
ds
add
xchg
jmp
data16
push
and
pop
clc
jecxz
loopne
ljmp
and
mov
add
pop
push
cltd
dec
jmp
mov
mov
pushf
mov
cwtl
jp
jo
pop
jmp
arpl
adcl
faddl
sub
addl
jne
outsb
repz
fistl
mov
daa
mov
stos
jg
inc
test
xchg
add
jnp
xor
shrl
and
imul
xor
adc
invd
test
leave
sub
ret
jbe
rcrl
adc
sub
mov
fcoml
iret
dec
push
jns
fsubr
inc
inc
ljmp
pop
sub
lock
jnp
fcmovnb
imul
popf
mov
and
add
cmp
cmpsl
sub
jne
inc
xor
and
pop
jo
xchg
dec
inc
rol
xchg
dec
mov
aam
jp
xor
add
mov
jnp
ja
dec
sbb
jge
push
sbb
pushf
popf
shlb
sub
jae
jg
inc
aaa
or
jp
rcrl
call
mov
pop
pop
jo
xlat
jp
xor
outsl
xchg
inc
push
xor
fs
push
pop
ja
outsl
lret
mov
push
mov
xchg
xlat
dec
and
call
fdivr
cmp
add
cmp
fdivp
jb
sub
inc
push
xchg
add
inc
adc
ljmp
xchg
dec
popf
jge
pop
inc
mov
jmp
jecxz
aaa
dec
les
jo
lock
jmp
shll
bndldx
insl
std
or
cmp
lret
mov
cwtl
push
xor
sbb
lret
push
rclb
and
add
cmc
int3
pop
xor
daa
bound
push
xor
test
sti
popa
and
in
sbb
imull
daa
in
push
cld
jbe
xchg
mov
xor
jge
push
cmc
jmp
push
loope
js
pusha
xchg
add
xchg
stos
shlb
xor
int3
mov
outsl
sti
jmp
cld
shll
xor
inc
push
inc
aas
mov
xchg
xlat
cmp
pop
inc
xchg
lock
pop
mov
sub
sbb
mov
pushf
ja
enter
or
sub
inc
imul
aas
push
mov
jne
clc
xchg
repnz
mov
into
rcl
negb
roll
dec
dec
sub
push
mov
jle
andb
mov
scas
fadds
stos
loope
jne
mov
fistpl
push
xchg
shlb
bound
addl
ret
repz
pop
xchg
sub
cmpsl
mov
je
mov
ja
push
and
adc
pop
mov
jge
mov
or
adc
lea
insl
stos
inc
mov
cld
cmp
or
xchg
jg
cs
cwtl
push
add
fnstsw
lahf
pop
loopne
lods
inc
and
pop
cli
push
ret
mov
push
inc
pusha
shl
xchg
push
fcompl
mov
push
xlat
push
adc
aas
shrb
ret
sbb
daa
test
xchg
sbb
imul
loopne
mov
out
mov
adc
or
add
jnp
or
jne
xchg
popa
mov
sbb
inc
add
int3
inc
adc
out
push
xor
aam
sub
sub
add
outsl
imul
pop
addl
loopne
jmp
and
movsb
jo
adc
cld
daa
fs
insb
jno
xchg
arpl
out
push
cwtl
dec
add
xchg
mov
pop
inc
xor
cld
cmp
sarb
dec
add
fdivs
sbb
xchg
or
icebp
aas
fcmovne
pop
adc
das
icebp
nop
xchg
arpl
enter
mov
fistpl
sar
add
dec
jnp
lock
xchg
inc
rorl
lods
dec
and
dec
and
inc
mov
enter
xchg
bound
das
arpl
in
push
popa
movsl
lock
imul
jnp
popa
shll
lahf
pop
mov
dec
dec
popl
mov
and
cmpsb
movsb
xor
inc
iret
dec
rorl
roll
into
ficoms
lret
mov
in
push
fldt
sbb
and
mov
cs
test
scas
adcb
mov
mov
mov
xor
mov
dec
cmp
mov
jp
int3
inc
fiaddl
add
rcll
mov
push
loop
int3
and
or
inc
inc
jecxz
leave
jl
inc
fdivrs
mov
jno
push
pusha
fcomi
je
nop
sub
cmp
mov
mov
in
shrl
scas
je
mov
je
aam
sbb
fnstcw
xor
lret
shlb
cs
adc
ret
fmull
loopne
sbb
mov
lret
inc
dec
and
adc
inc
mov
in
push
dec
push
push
cld
mov
cmpb
sbb
mov
enter
scas
xchg
int3
xchg
imul
out
nop
das
hlt
and
push
ror
jnp
je
cs
add
or
jb
jp
mov
xchg
xchg
ss
jmp
dec
jns
mov
and
fwait
cmp
jmp
daa
pop
cmp
mov
xor
pop
inc
ffreep
lock
cmp
psubq
in
insb
or
xchg
mov
cs
and
enter
cmp
push
into
fistpl
cmp
pop
shrb
cmpsb
add
mov
bound
xor
sub
daa
xchg
and
mov
lods
rclb
lods
pop
jp
add
int
dec
jecxz
dec
lret
mov
lods
leave
adc
je
dec
adc
jg
sbb
inc
push
push
dec
mov
lea
or
inc
inc
cmp
mov
ljmp
mov
dec
dec
mov
mov
out
pop
dec
mov
int3
int3
mov
push
ficoml
das
in
xchg
dec
call
dec
jmp
ja
jecxz
pop
leave
jl
mov
inc
inc
sub
jns
jmp
push
pop
adc
imul
enter
shrb
mov
ret
push
scas
mov
jge
or
adc
test
mov
rcr
call
cmpsl
frstor
sub
pop
lock
cmp
popa
lret
lods
jae
mov
cmpps
adc
cwtl
sub
addr16
cld
dec
xchg
jg
mov
data16
dec
inc
test
jnp
xor
lret
icebp
lret
call
sbb
dec
sbb
dec
mov
push
aas
shr
sbb
movsb
lods
pop
je
push
mov
mov
test
xor
push
cli
fstp
ss
xchg
cmpb
jbe
xor
bound
mov
test
adc
cmc
cmp
ja
pop
rclb
leave
mov
cmp
scas
pop
dec
rorb
mov
pop
adc
das
add
dec
mov
fnstsw
push
mov
jmp
movsb
mov
pop
aam
xor
mov
dec
iret
push
cmp
pop
cmp
mov
shrl
cli
les
xchg
mov
dec
sbbb
lret
push
jge
xchg
rcr
add
mov
jbe
dec
jl
sbb
sbbl
dec
mov
sub
mov
or
imul
xchg
cmpb
insb
faddl
dec
gs
add
xor
lods
sbb
jnp
scas
jae
push
sbb
call
lds
sahf
jecxz
ficomps
mov
xchg
pop
nop
addr16
mov
in
ret
test
push
mov
testl
or
xor
jae
dec
xlat
bound
scas
jge
mov
orl
ds
fisttpl
mov
dec
pop
es
fimuls
xchg
jno
xlat
add
sbb
xorl
cmp
lahf
decl
out
insb
adcl
cli
addr16
mov
mov
jno
stc
cli
dec
push
cmp
mov
and
push
cmpsb
les
shll
mov
test
xor
pop
out
pop
ss
inc
mov
shlb
scas
sub
add
mov
stos
mov
mov
add
inc
pusha
cs
mov
in
sub
mov
dec
ds
push
sub
movsb
adc
nop
nop
jl
pop
arpl
lds
xchg
fnstcw
and
add
inc
mov
push
adc
pop
jnp
pop
pop
cli
movsl
sbb
pop
cmp
lea
insb
jecxz
and
les
stos
adc
xor
xchg
aas
and
and
int
cmp
insl
loope
cli
adc
xchg
push
mov
pop
or
cmp
pop
adc
loop
outsb
xchg
inc
push
mov
daa
dec
jg
inc
in
pusha
xchg
loop
fisubrs
inc
mov
pusha
in
or
cmc
mov
push
or
outsb
outsb
testb
ret
ljmp
fsubr
lret
pop
adc
inc
xchg
rcrl
push
es
cs
adc
repz
push
aas
in
ret
insl
pop
fs
aam
lds
adc
fs
sub
outsb
out
subb
xor
mov
push
and
stos
xchg
clc
sub
cmpsl
jbe
roll
lods
xchg
pop
test
imul
xlat
and
add
lods
insb
push
mov
jmp
or
mov
into
push
mov
mov
movsl
enter
dec
pop
adc
xor
mov
push
sahf
push
inc
pop
mov
and
xchg
aam
and
into
cmp
arpl
cwtl
jae
sub
out
fdivl
push
jo
loope
orb
xchg
subb
js
in
aaa
insl
mov
mov
adc
xchg
aas
mov
mov
xorb
inc
aas
cmpsl
push
dec
popl
or
mov
fcompl
daa
scas
xor
xor
test
inc
xbegin
adc
pop
icebp
inc
imul
inc
fldcw
lods
cli
push
lret
lret
ret
mov
iret
cld
icebp
pmaxsw
cmc
or
mov
and
js
mov
enter
add
call
inc
popa
mov
iret
or
fdivp
mov
and
sti
mov
jl
add
fimuls
in
adc
mov
int3
pop
push
movsb
push
hlt
cld
das
push
popl
inc
xlat
into
rcll
cltd
int3
std
pushf
jno
and
cmp
push
mov
inc
aaa
ss
adc
inc
in
loop
jle
out
leave
adc
push
scas
push
cwtl
jl
aam
mov
and
pop
cmpsb
jno
shll
or
jbe
xor
adc
into
inc
jg
clc
mov
fwait
int
js
cltd
mov
int3
cmpsb
lahf
fcmovnu
or
sub
push
pop
cmpsl
js
xchg
gs
pop
mov
cmc
outsb
sbb
xchg
push
cmpsb
sti
xlat
sahf
xchg
mov
pop
add
notb
adc
cmp
leave
sub
or
jl
mov
test
loopne
stos
inc
scas
aad
into
outsl
enter
pop
aad
int
jmp
mov
or
mov
pushf
out
ficompl
stos
leave
mov
shl
jle
subl
mov
sbb
cmp
jge
les
mov
cwtl
out
add
sub
mov
push
mov
js
mov
jl
sub
fists
addr16
sahf
sbbl
cld
cmpb
cmp
jg
roll
orl
pop
and
movsl
bound
jo
cli
xor
mov
scas
jmp
sbb
push
and
loopne
lods
xchg
xor
icebp
add
push
je
lret
cmp
aas
and
shrb
pop
test
stc
out
adc
inc
push
popa
test
aaa
adc
mov
out
dec
pop
or
mov
mov
sub
jl
push
stos
enter
mov
loope
scas
or
pop
push
jg
sbb
lods
and
lods
mov
xchg
xlat
mov
js
loopne
sub
ds
jp
in
xchg
lcall
jne
loop
pop
push
mov
shrb
xchg
fistl
scas
in
in
jp
xlat
ret
xor
loopne
lret
mov
in
leave
sbb
or
adc
sbb
lcall
dec
push
mov
mov
clc
jg
xor
push
adcb
or
loope
loopne
mov
jecxz
push
into
aaa
add
repnz
xor
iret
push
adc
inc
xor
int
push
push
add
je
lods
addr16
shl
jae
call
int
in
push
in
push
sbb
jmp
and
leave
xchg
ja
or
sub
into
and
cmpsl
dec
test
jo
shll
mov
loop
rcrb
les
or
xlat
cmp
jbe
enter
leave
scas
xchg
push
les
pop
iret
fiaddl
lock
gs
adc
call
lods
xchg
mov
dec
cmp
iret
out
xchg
push
inc
pop
and
jmp
push
gs
fmuls
fdivs
adcl
jp
mov
frstor
int
gs
lea
loop
js
mov
mov
gs
inc
mov
push
or
popf
jl
inc
jae
test
cld
jae
xchg
fsubs
adc
movsl
mov
testb
jmp
int
mov
clc
xor
inc
loop
dec
xor
insl
xchg
pusha
sbbb
adc
and
sub
clc
push
pop
and
xor
enter
inc
ljmp
pop
je
add
dec
and
mov
dec
ficoml
cltd
in
fnstsw
mov
repnz
cmp
test
mov
xchg
push
je
es
test
sub
cltd
bound
push
mov
push
mov
hlt
mov
jp
jne
mov
xor
out
stc
arpl
mov
xchg
lret
mov
call
fcompl
dec
jnp
mov
xchg
mov
fidivrl
jl
mov
mov
jmp
fdivrp
insl
fisubrl
sbb
pop
xchg
movsl
ljmp
test
jmp
sbb
insl
sub
inc
cmpsb
mov
ficoml
insl
pop
adc
mov
cmpsb
out
mov
or
fneni(8087
mov
out
inc
and
int3
insl
in
push
xchg
dec
ret
jbe
out
iret
push
xchg
push
imul
loop
js
fisttpl
xor
out
in
push
mov
or
jge
mov
nop
mulb
push
add
int3
inc
xchg
jle
pop
pop
inc
fsubrs
cmpsb
push
ljmp
xchg
sub
push
mov
scas
movsb
push
incl
out
js
pop
sub
mov
test
je
pop
in
cmp
aad
fildl
int3
jp
xchg
lret
mov
inc
jns
fldl
push
cmpsb
out
or
pushf
lods
into
mov
pop
aad
adc
inc
test
ret
incl
in
pusha
add
jb
into
std
sub
in
imul
and
cwtl
js
sbb
or
scas
add
cli
arpl
mov
aam
push
and
mov
add
adc
aas
lret
jmp
inc
or
imull
rorb
xchg
jno
push
ljmp
gs
clc
add
add
cmp
adc
mov
popw
xchg
sub
cmc
nop
js
xor
pop
jle
mov
in
mov
jge
stos
inc
mov
icebp
sbb
push
jae
lret
inc
pop
and
jns
mov
or
insl
xor
add
sub
outsb
sbb
lods
pushf
mov
iret
popf
shrl
setne
adc
add
xor
icebp
dec
test
mov
mov
inc
inc
lds
orb
jmp
movsb
jmp
xchg
out
pop
enter
sbb
mov
sbb
cli
aad
std
xor
cmp
dec
aad
pop
in
mov
jp
divb
push
cmp
xchg
mov
clc
inc
mov
rorb
decb
scas
addps
jbe
gs
xchg
or
push
arpl
jmp
jg
mov
push
lock
lcall
mov
insb
xchg
test
mov
rorl
cli
jae
fwait
xchg
or
cmp
xlat
int
jns
adc
mov
inc
movsl
ret
mov
sahf
and
sub
lods
mov
rorb
bound
loopne
mov
nop
push
popf
out
mov
cwtl
testl
xchg
inc
dec
cmp
ret
fwait
sbb
and
sbb
imull
or
sub
arpl
jmp
and
fldcw
dec
pop
mov
mov
int3
add
int
fcmovnbe
xchg
dec
lds
pop
lods
jb
xor
int3
sub
int
mov
dec
int3
add
lahf
jg
xchg
jg
mov
xorb
xor
movsl
das
mov
in
cmp
lods
fcmovb
mov
sbb
cmp
sahf
mov
fidivl
push
loop
ret
cli
aaa
sub
fsts
in
nop
xchg
mov
fwait
out
inc
stc
push
sub
cld
loope
jl
xchg
movsb
fsubs
mov
mulb
into
insb
mov
mov
rorl
pop
repnz
jno
pop
adc
and
call
leave
mov
lods
pop
in
cmpsb
add
lahf
mov
mulb
mulb
repnz
xchg
fucomp
cmp
inc
xor
sub
pop
dec
jns
push
icebp
xor
adc
ret
dec
inc
push
xchg
adcb
and
lea
scas
push
push
mov
add
inc
jge
or
push
flds
lcall
rorl
mov
fnstsw
dec
je
ds
ret
jb
or
xchg
scas
and
mov
cmp
jno
lret
jae
push
or
jno
mov
mov
aaa
sub
cltd
fstl
xchg
mov
andl
sbb
dec
loope
ss
shr
mov
nop
push
xchg
cmpsb
cli
bound
inc
int
ficoms
lock
xchg
and
add
orb
nop
outsb
loop
dec
mov
mov
jnp
popa
mov
out
xchg
inc
test
push
mov
adc
sbb
inc
aas
shll
mov
popf
gs
dec
es
push
push
fstl
jno
xor
gs
cli
push
mov
bound
mov
xor
test
data16
in
rorl
sub
fsubs
testb
cmpsl
stos
jo
js
mov
sub
sbb
or
aaa
xchg
adcl
adc
push
mov
pusha
jae
add
cmpsl
mov
jmp
xchg
gs
lds
rorb
aaa
mov
mov
inc
xor
sbb
nop
repnz
mov
daa
scas
jg
movsb
cwtl
sbb
stos
jle
jg
add
xchg
sbb
xchg
and
ret
jns
push
inc
add
dec
xor
dec
dec
bound
dec
js
clc
enter
lea
jp
inc
fucomp
addr16
xor
pop
jecxz
mov
cmpsb
dec
mov
scas
insb
mov
adc
dec
mov
mov
aad
adc
cmp
mov
ljmp
pusha
sub
sbb
adc
repz
insl
and
jge
jne
aam
insb
ret
dec
or
in
mov
div
mov
or
cmpsb
sbb
mov
fldt
mov
loop
scas
icebp
xor
jbe
xor
sbbb
loopne
in
push
jp
fs
xchg
sub
mov
push
mov
shll
imul
adc
jb
sub
rcrl
insb
gs
xchg
sti
stc
shlb
or
xchg
pop
cwtl
test
xchg
xchg
movsl
cwtl
cmp
les
pop
pop
and
enter
lahf
jno
loop
xlat
lahf
adc
dec
scas
ret
lcall
add
mov
ret
cld
pushf
dec
mov
cmp
mov
xor
add
aam
cltd
fcmovbe
mov
ficomps
dec
mov
xchg
or
dec
pop
xchg
int3
and
nop
mov
push
mov
pop
mov
lods
push
push
out
je
jp
fbld
pop
cmpsb
icebp
loopne
psrlw
scas
pop
fldl
sti
jb
mov
and
xchg
add
lret
sbb
xchg
and
mov
cmp
cmp
jg
push
push
adc
push
inc
jbe
stos
ss
inc
test
mov
loope
or
push
mov
jno
xchg
enter
adc
jecxz
and
or
pop
fimull
jecxz
mov
xchg
shll
sarl
adc
lahf
inc
pop
popa
xchg
and
addb
sub
lret
push
xor
xor
das
in
sub
inc
pop
sub
jl
mov
jmp
dec
push
mov
es
jnp
ss
or
es
jne
outsl
scas
dec
enter
jmp
mov
mov
fs
rol
mov
and
aas
push
aaa
in
mov
je
pop
cmpb
cmp
pop
mov
add
addr16
jecxz
mov
sub
fldcw
add
fs
movsl
and
mov
into
ss
repnz
add
ret
mov
push
addr16
cwtl
frstor
xor
ret
inc
push
daa
xchg
xchg
mov
fcoms
cmp
mov
icebp
outsl
mov
xchg
dec
cmp
mov
stc
jo
loope
cmp
push
les
and
aas
out
outsb
add
divb
or
adc
enter
aad
pushf
inc
xchg
mov
mov
mull
mov
cld
mov
sub
adc
repz
mov
inc
ret
sub
xlat
xchg
jle
and
dec
xlat
mov
dec
jle
mov
adc
stc
push
mov
ret
cmpsl
adc
ret
push
ss
or
jecxz
xor
aad
in
movsl
lret
adc
popf
or
dec
scas
xor
sahf
shrb
in
jne
test
lret
scas
mov
loop
ds
out
fs
xchg
inc
in
test
cmpsb
mov
cmp
mov
sub
add
cmp
adc
clc
mov
cmpsb
stc
adc
sbb
pop
pusha
mov
into
in
ret
jge
inc
fwait
enter
xchg
mov
mov
and
or
pop
push
and
jae
pushf
sub
and
sbb
jmp
fs
jne
inc
mov
dec
ficomps
js
cmp
in
push
inc
call
push
stos
shrl
loop
or
jno
inc
orl
movsb
aas
cmp
inc
fisubs
adc
dec
jb
inc
in
push
in
cmpsl
sbb
xor
inc
inc
les
daa
fucom
stos
int
fwait
pop
xor
inc
push
xchg
inc
xor
or
es
mov
arpl
jg
jno
divl
sbb
xchg
and
pop
fmuls
data16
in
push
ljmp
xchg
stos
ret
mov
not
xchg
mov
mov
adc
push
and
and
int
mov
mov
lahf
in
mov
and
cli
les
fbld
popa
dec
daa
mov
loop
adc
jnp
daa
xchg
cs
cmp
dec
stc
icebp
mov
sub
ja
mov
or
out
cmp
popf
pop
dec
cmp
lods
xchg
inc
sub
xchg
push
mov
pop
jmp
inc
lcall
adc
pop
pusha
pop
or
jns
jg
stc
js
rcr
mov
cmp
cmc
push
sub
shrl
pop
lret
mov
popa
mov
cli
sub
adcb
daa
leave
popa
mov
bound
add
dec
mov
jne
xor
inc
pop
sbb
jbe
mov
dec
shrl
xchg
add
mov
pushf
push
mov
mov
inc
stos
mov
mov
xchg
fcomp
dec
lcall
shl
or
ret
jbe
andb
test
cmc
xchg
lahf
rcll
in
inc
cmpsl
ret
jbe
sarb
cmp
sub
inc
mov
sbb
mov
and
clc
xorl
and
push
jns
inc
sbb
js
repz
mov
test
jbe
add
sbb
add
popf
popa
movb
cmpsb
ljmp
xchg
inc
bnd
sbb
mov
dec
inc
ljmp
dec
xor
arpl
lds
mov
mov
xchg
pop
sub
pop
xor
testl
cwtl
subb
ficompl
mov
xchg
cmc
fmulp
pop
rcr
iret
ud2
jl
popf
mov
xor
jno
jnp
cltd
cmp
mov
cmc
or
sub
leave
dec
repz
icebp
ds
or
push
sbb
test
inc
das
mov
adc
inc
push
xchg
shrb
mov
adc
out
or
mov
mov
sub
xor
jns
and
fistpll
xor
ss
subb
jo
jno
repz
int
ret
mov
mov
inc
stos
sub
fisubrs
and
in
or
sbb
sub
cmp
xchg
testb
add
lods
nop
jg
into
daa
test
enter
add
rorb
push
scas
popf
pop
inc
jle
lea
pop
mov
push
lock
cmpsl
rorl
test
rorl
lock
fmull
sub
cmpsb
pop
adc
adc
mov
push
dec
and
cli
jae
ljmp
mov
mov
popl
fmuls
insb
in
dec
sbb
jmp
adcl
leave
daa
sahf
dec
push
ficoml
test
lock
ret
shlb
jns
in
dec
bnd
sbb
sarb
inc
pushf
andb
iret
and
sub
sbb
or
xchg
nop
arpl
fstpl
push
dec
lods
xchg
push
test
adc
out
dec
sahf
push
sub
lret
or
jnp
or
or
jle
jns
pop
negl
aas
xchg
fs
mov
test
pop
cmp
push
lock
pop
scas
and
ret
mov
xlat
dec
adc
je
cld
pop
xor
and
clc
imul
sbb
mov
sbb
int
movsl
inc
dec
dec
ret
push
sbbl
cmp
inc
pop
mov
xchg
cld
and
mov
add
movw
arpl
jmp
in
data16
cmp
out
mov
mov
mov
sub
nop
xchg
push
xor
sahf
push
push
insl
jp
xchg
push
enter
sub
xchg
aam
dec
lcall
std
lock
xor
rorb
scas
or
mov
dec
push
js
add
out
xor
xchg
cli
pusha
pushf
push
mov
test
xchg
cltd
imul
roll
sbb
sbb
push
and
sahf
dec
and
scas
mov
int
pop
mov
in
into
add
xor
ret
shrb
or
loopne
mov
mov
inc
ja
in
fisttpl
add
or
lret
mov
mov
and
or
in
fiadds
repnz
mov
lea
test
int
fistpl
sbb
jns
stc
int3
xlat
adc
and
sub
sub
adc
dec
inc
aad
or
ret
mov
test
lea
mov
sub
inc
pusha
pop
mov
aad
lock
test
pop
sub
jne
movsl
into
lock
pop
int
mov
loop
enter
inc
sbb
lds
and
cmp
cmp
push
daa
icebp
xchg
sbb
jmp
xchg
mov
shrb
pop
ja
dec
push
mov
mov
add
sbb
push
in
xor
insl
cmp
or
sbb
sub
lret
add
ret
insb
fimull
or
jg
sub
xchg
mov
jecxz
insb
inc
mov
in
insl
xchg
mov
and
scas
or
test
and
mov
bound
mov
out
jg
fsub
jno
rolb
jb
inc
inc
addr16
int3
testl
mov
pop
jge
push
fwait
scas
dec
enter
nop
repnz
xorb
into
sbb
sub
div
jnp
mov
iret
decl
or
ret
sti
movsl
mov
xor
nop
inc
jbe
mov
negb
push
push
mov
mov
loope
sub
push
sbb
shll
push
adc
mov
into
fbstp
in
sbb
scas
sbb
mov
sub
int3
push
insb
outsb
or
lods
or
aaa
int
adc
into
lods
xchg
xchg
dec
inc
cmp
int3
inc
mov
pop
pop
fisttpll
js
daa
shrb
test
inc
loop
mov
cmp
ja
push
sub
insb
jns
jb
mov
add
leave
pusha
push
add
adc
mov
sarb
pop
or
aam
in
leave
xchg
mov
or
addl
sub
movsl
xchg
jg
stc
xorb
mov
jp
mov
cmp
stos
mov
pop
pushaw
xchg
jge
sub
jns
loopne
dec
fisubs
and
adc
dec
inc
pop
fdivl
dec
sub
clc
dec
adc
mov
mov
arpl
hlt
mov
mov
in
scas
pop
push
fwait
pop
xlat
lea
stos
out
xchg
mov
cmp
mov
cs
xor
inc
mov
cmc
xchg
subl
sbb
dec
sub
jle
adc
lds
mov
pop
cmp
xor
push
sbb
sub
faddp
out
cmp
shrb
cs
cltd
mov
or
or
add
jg
or
or
dec
int
fldcw
shl
inc
dec
xlat
pop
mov
lods
lcall
stc
ds
mov
daa
out
out
arpl
fidivrl
inc
dec
faddp
dec
ljmp
jle
std
cmp
loopne
ficomps
arpl
xchg
cmp
jo
push
int3
shll
sbb
add
or
jle
and
inc
push
push
daa
mov
jle
popa
jbe
js
or
dec
icebp
out
clc
sahf
rclb
fst
xor
icebp
int
mov
mov
cmp
incl
push
xlat
test
in
ret
pop
fwait
xor
and
cmp
cmp
outsl
mov
cli
or
in
jns
xor
cmp
mov
test
xor
jns
jb
ret
dec
pop
daa
xchg
outsl
or
pop
sub
clc
outsb
cmc
inc
dec
shrb
cmp
aad
jns
jp
mov
cmp
add
ljmp
int
jg
xor
xor
mov
fwait
mov
cmp
or
frstor
aad
movsb
cltd
les
jmp
addl
daa
mov
dec
int3
inc
stos
in
cld
inc
sbb
xor
into
iret
push
and
imul
cmpsl
adc
out
xor
pusha
ret
sub
call
popa
pop
pop
sarl
in
testl
aam
mov
int3
adc
and
dec
cmp
stos
and
mov
add
mov
inc
call
ret
dec
xchg
imulb
ficoml
mov
mov
in
stos
cmpsl
popa
jnp
ficoml
cmpsl
fsts
add
into
inc
out
sbb
adc
pop
ja
jb
mov
out
gs
and
rorb
jns
std
or
push
xchg
or
add
mov
lods
frstor
cmp
lds
fistl
shlb
enter
inc
in
sub
out
int
dec
dec
hlt
ljmp
enter
ss
push
adc
inc
push
mov
push
mov
arpl
call
jbe
hlt
sarl
xchg
stc
ss
mov
jmp
mov
int
and
aad
jge
cwtl
cld
push
xchg
jne
or
cmp
sub
mov
in
pop
enter
push
push
mov
xor
jp
cmp
shll
dec
cmp
psllw
out
add
sbb
mov
push
mov
fcomp
loope
in
popa
aam
mov
mov
into
pop
fistpl
in
or
aam
mov
xor
sub
cld
mov
ja
mov
jmp
add
mov
call
scas
int
inc
jb
mov
imul
int
mov
std
inc
pop
movsl
jle
lret
hlt
movsb
rcr
rcrl
mov
pop
pop
fdivl
xchg
mov
jge
mov
lods
add
ficomps
repz
out
in
aaa
pusha
cltd
negb
fisttpl
stc
clc
xchg
add
jl
mov
andl
test
mov
addb
cld
std
nop
xchg
sub
jecxz
xchg
push
orb
cmc
lcall
jno
push
pop
push
movsl
sub
xlat
in
mov
popa
jmp
ficoms
jae
shr
jb
sub
std
xchg
int3
sub
and
or
fisttpl
cld
cltd
aam
mov
mov
jb
aam
fildll
ss
sub
div
adc
cld
pop
test
setne
cmp
push
in
popf
mov
data16
popa
adc
mov
xor
pop
daa
jle
movsl
cmc
push
xchg
jo
cmpsb
mov
and
cmpsb
jb
nop
adc
dec
incb
fcmovnu
sahf
mov
insb
pop
ja
cmp
xorb
hlt
jg
mov
cmc
mov
ret
sub
lcall
push
xor
push
sbb
stos
mov
push
adc
js
outsl
push
and
sub
es
mov
jp
mov
ljmp
rcl
xchg
enter
pop
jno
mov
decl
pop
icebp
mov
xor
in
cwtl
filds
inc
add
in
xor
mov
push
cltd
int
fldenv
dec
push
and
xchg
jg
fs
mov
pop
or
add
cmp
icebp
cltd
je
inc
test
insl
and
mov
stc
es
dec
lods
int3
and
sub
lret
popl
loopne
sub
lahf
mov
push
fsts
imul
push
push
leave
call
in
adc
ja
cli
jl
pushf
xor
sbb
or
clc
shlb
outsl
sbb
cltd
dec
push
inc
adc
jbe,pn
mov
shrb
loope
out
scas
cmpsl
push
or
fs
cmpsl
pop
mov
ja
call
fistps
out
push
mov
enter
in
lret
xchg
sub
mov
cld
dec
mov
fstpt
bound
rorb
mov
xor
dec
add
fwait
jp
or
cld
cmp
das
or
cmp
out
es
xchg
add
lret
pop
fcmovnu
cmp
ja
sub
cmpsl
cmp
inc
xor
popa
lret
rcll
data16
pop
xchg
lahf
adc
mov
and
lahf
mov
mov
enter
repz
xchg
dec
cmp
sub
jae
xlat
dec
outsb
out
add
jnp
lock
mov
sarb
outsl
fidivl
es
pop
xchg
arpl
ja
in
rorb
insb
lods
and
mov
fldcw
data16
adc
adc
imul
repnz
xor
lods
and
lock
pusha
add
xchg
pop
test
mov
dec
cs
xchg
xchg
in
xchg
jge
dec
repnz
sub
fsubrl
mov
je
ret
inc
mov
test
test
mov
imul
pop
nop
push
mov
dec
xor
inc
out
lock
dec
es
xlat
roll
mov
mov
mov
arpl
jle
push
add
cmp
pop
push
pop
or
sub
or
daa
pusha
xchg
bound
or
dec
fnstenv
pop
test
and
std
aad
test
in
stc
xchg
test
lds
lahf
inc
rcr
xchg
mov
xor
lock
sarl
jle
test
or
in
fmulp
nop
lods
cmp
jbe
mov
out
sub
push
push
add
sti
loop
mov
mov
push
clc
fld
adc
mov
movsb
adc
or
dec
ret
lret
push
push
stos
xchg
lret
dec
mov
and
xchg
repnz
sbb
pop
gs
iret
dec
ds
add
or
cmc
or
mov
sub
stos
outsb
cmpsb
jecxz
in
popa
addr16
inc
jo
xchg
cmp
cmp
lret
mov
fmuls
mov
mov
cmp
movsl
stc
dec
mov
cmpsl
add
pop
adcl
aaa
add
inc
pop
mov
bnd
in
mov
inc
mov
std
ffreep
adc
add
out
shrb
imul
mov
mov
leave
inc
or
or
leave
aaa
mov
jb
scas
es
out
insl
sub
out
pop
call
cmpsb
daa
ds
fidivrl
or
xor
sub
adc
lretw
mov
fucom
inc
pop
lcall
aas
sbb
pop
push
mov
imul
out
inc
jo
dec
mov
jecxz
insl
pop
cmp
movsl
or
and
cmp
jge
pop
dec
mov
cld
aad
idiv
and
stc
push
adc
in
addl
lret
out
insl
hlt
inc
jns
incb
in
ljmp
pop
jl
sbb
loopne
sbb
cmp
jge
jnp
add
pop
sbb
push
nop
in
ss
pop
je
mov
int
sbb
sub
inc
scas
cmp
mov
pop
xor
dec
mov
jb
adc
imul
imul
sbb
js
mov
xchg
ds
lcall
lods
pop
cwtl
rol
push
das
fisubrs
test
add
add
pop
outsl
push
iret
int
adc
xchg
aam
add
dec
test
xchg
out
pop
adcb
add
out
inc
inc
gs
ror
dec
aas
loopne
jmp
cs
pusha
inc
js
ja
inc
sbb
repnz
ljmp
inc
scas
mov
push
or
aas
mov
les
sbb
cld
fwait
in
mov
lcall
and
iret
push
and
insl
mov
dec
outsb
fimull
and
mov
pop
sub
or
imull
mov
cmpsb
sbb
or
pop
or
fdivrs
pop
icebp
or
adc
out
mov
or
add
stc
es
cld
inc
add
or
je
lock
inc
mov
push
in
add
push
clc
nop
lds
fnstsw
imul
jp
out
add
fucomip
pop
jns
dec
xor
pop
repnz
pop
negl
shrb
sti
inc
stc
addr16
pop
xchg
shll
push
push
mov
pop
in
test
imul
movl
int3
jbe
sub
mov
imull
loop
xlat
xchg
or
pop
popa
movsb
aas
dec
ljmp
arpl
hlt
and
dec
cs
lret
sbb
xchg
js
insl
jg
pop
jne
loope
scas
inc
sub
adc
mov
mov
pop
or
btr
ss
push
or
aam
aad
scas
loop
jge
jle
gs
pop
imul
xor
cmp
out
lahf
ja
je
or
test
xchg
xor
mov
enter
pop
cmpsl
adcb
movsb
push
xor
cmpsb
sub
subl
mov
push
jg
gs
mov
nop
mov
popf
mov
andb
leave
insb
les
mov
insb
in
dec
xchg
aas
cmp
in
dec
mov
mov
scas
xchg
pop
cmp
call
in
adc
push
xchg
or
cmp
xchg
sarl
shrl
aas
pusha
mov
jge
into
and
imul
scas
divl
mov
cmp
rclb
or
inc
fldt
mull
stos
add
in
sbb
mov
in
ficoms
xchg
jbe
pop
inc
cld
mov
daa
xchg
imul
xchg
xchg
fwait
mov
pushf
pusha
sti
inc
push
nop
out
mov
cltd
xchg
repnz
movsb
ds
sub
xchg
mov
add
out
fstp
mov
push
add
sbb
mov
mov
mov
jge
mov
sbb
nop
mov
sub
dec
pop
nop
sub
or
and
adc
xor
and
insl
dec
sbb
jg
stc
dec
cmp
xchg
insb
in
push
xchg
jmp
les
adc
xchg
push
pop
pop
push
dec
or
push
xchg
mov
jmp
test
lock
lds
pop
xor
and
inc
incl
push
aad
add
aaa
test
cmp
mov
sbb
shl
cltd
hlt
or
shll
mov
inc
insl
fstpt
loopne
in
aaa
sbb
ss
fistpll
fdivrs
inc
adc
scas
aas
inc
jp
sub
mov
cmp
fwait
jne
jg
insb
cmc
bound
adc
lahf
mov
add
sub
adcl
pop
adc
mov
and
cltd
fsubrl
push
jmp
adc
scas
or
ds
inc
adc
sti
inc
lods
dec
adc
mov
mov
jne
dec
int
adc
mov
mov
push
shlb
cmp
call
int
mov
test
inc
sub
stc
push
dec
adc
jl
fldt
mov
cmp
cmp
shlb
in
dec
aaa
lret
mov
test
inc
pop
inc
sahf
cmpsb
cmp
pop
xor
sahf
in
out
pop
aas
push
adc
aad
xchg
mov
adc
jae
xor
dec
cmp
mov
dec
and
in
inc
sahf
jbe
incb
lock
lahf
pusha
lods
jecxz
cltd
jg
dec
xor
mov
sbb
jne
and
mov
mov
icebp
pop
or
sahf
ljmp
push
jnp
push
jo
ja
push
and
pop
bound
int
adc
ret
outsl
insb
sub
sbbb
jae
dec
add
mov
lods
pusha
lods
dec
and
ja
mov
jge
pop
or
jge
loope
rep
add
adc
add
xor
mull
iret
mov
push
aad
push
push
pop
jnp
lret
jg
lods
iret
arpl
adc
mov
out
ljmp
fidivrs
jp
sarb
jo
inc
jp
mov
push
or
insb
fisubrl
call
sub
jae
adc
or
jo
loopne
mov
mov
pop
mov
add
and
lcall
cld
ffreep
enter
sbb
aaa
aaa
call
adcl
in
adc
push
gs
bound
inc
out
inc
jg
lret
pop
jno
lds
cmp
or
test
jae
pop
mov
sbb
lahf
lret
add
fcompl
cld
cs
cmp
add
lahf
mov
xchg
add
lds
mov
mov
movsb
sbb
mov
pop
or
add
xor
pushw
and
nop
fstpt
push
repz
dec
loopne
aam
les
xchg
pop
cli
insb
xchg
les
mov
ljmp
mov
and
pop
sub
push
loop
inc
jg
mov
call
jb
pop
pop
sub
add
insl
rol
sbbl
jbe
mov
out
adc
mov
std
push
xor
shrl
mov
xor
fldcw
add
addr16
das
pop
fisttpl
mov
iret
mov
cwtl
xchg
dec
cld
sub
scas
sarl
pop
mov
dec
jle
dec
sub
pop
xchg
jae
mov
mov
cmp
mov
cld
mov
and
outsb
pop
mov
pusha
pusha
push
lods
mov
mov
cld
cmpsl
insb
inc
stos
adc
mov
fs
xor
jb
in
adc
jb
in
movb
cmp
mov
xor
dec
sub
pop
vpsrld
xchg
jns
or
data16
or
push
rcrb
push
shl
js
mov
cmp
xchg
sub
jle
lds
sub
xchg
pop
push
out
or
sub
test
call
xor
in
cmp
sarb
andnps
cmp
test
xchg
jmp
out
ljmp
sbb
inc
fstpl
lods
int3
divb
jl
and
sbb
push
insb
jno
mov
cmp
outsl
pop
pop
inc
push
stc
dec
test
or
xchg
in
fiaddl
cmp
ret
lock
add
addr16
jno
orl
push
push
or
and
psadbw
pop
in
adc
adc
jle
js
push
pop
or
pop
dec
sbb
mov
push
dec
add
xchg
ljmp
cs
jns
fistpll
insb
push
cli
pop
mov
je
sarb
mov
adc
mov
sub
movsb
mov
push
loope
add
lret
popf
nop
mov
lods
insl
data16
in
mov
stc
jl
sub
cmc
nop
xor
jno
xchg
jl
pop
out
push
mov
adc
mov
jmp
adc
cmpb
xor
mov
out
inc
jl
sarl
cmpl
pop
jno
lret
repnz
repz
arpl
cmpsb
loop
mov
adc
jae,pn
mov
or
mov
iret
cmc
repnz
lods
scas
fst
ds
jbe
call
fiadds
loopne
lods
leave
pop
mov
mov
jle
xor
mov
pushl
scas
fimull
mov
negb
fcoml
int3
mov
js
xchg
lcall
add
jge
daa
mov
std
push
xchg
cmp
inc
mov
inc
xor
sbb
sbb
dec
in
xchg
adc
cmp
fstl
cmp
pushf
push
ds
lds
imul
and
mov
push
ja
adc
jb
jne
add
fidivs
cmp
push
ljmp
test
xor
insl
adcl
inc
aad
mov
xor
je
mov
sbb
inc
mov
addr16
dec
mov
lea
dec
inc
mov
popl
inc
push
pushf
insb
sti
cli
push
pop
dec
adcl
jl
sbb
adc
inc
ret
xor
mov
cmp
jns
and
mov
enter
into
cmp
in
inc
lods
cltd
loope
hlt
sub
loopne
dec
adc
enter
das
testl
das
int3
ljmp
movsl
or
jb
addr16
or
xchg
add
sub
or
addb
test
cmp
jnp
lea
inc
dec
fildll
and
imul
sbb
cli
pusha
rolb
adc
scas
sub
popf
scas
sub
mov
jp
cmc
xchg
cmpb
and
fidivs
or
shl
add
lcall
jp
xchg
test
mov
jae
xorl
les
xchg
xlat
xor
pop
pop
inc
lea
xchg
and
or
int3
sbb
adc
mov
push
add
pushf
dec
jne
gs
add
pop
adc
dec
sti
jae
fnstenv
sbb
inc
mov
iret
push
lods
and
add
push
into
xor
test
xchg
jne
imul
outsl
add
stc
add
aaa
dec
cmp
movsl
push
jo
cmpsl
testb
cltd
xor
jge
test
sbb
shll
add
push
mov
jecxz
mov
jl
jg
mov
shlb
jb
fldl
sbb
push
iret
mov
cmp
and
xchg
icebp
popa
xchg
jmp
pop
movsl
add
cmp
sub
mov
mov
mov
or
push
sub
testb
push
out
int3
leave
hlt
mov
shll
ljmp
repnz
jg
mov
or
scas
xor
pop
push
roll
out
jmp
and
mov
cli
add
xchg
rolb
adc
loope
inc
mov
frstor
repz
jl
addr16
pop
or
pop
in
jo
mov
mov
sub
jo
mov
hlt
jno
aas
stc
mov
push
aad
fldcw
cmpsb
cmpsb
dec
fnsave
ljmp
aas
in
cmp
inc
arpl
mov
inc
jbe
mov
jp
popa
cmpsb
shlb
sub
mov
movsl
frstor
loopne
les
ret
fidivrs
fsts
jle
nop
and
lock
sub
or
jnp
mov
or
fchs
lahf
les
mov
adc
lock
icebp
scas
and
out
iret
dec
std
dec
add
in
imul
xchg
clc
inc
sbb
test
xchg
in
cwtl
and
pop
fcomp
pop
add
pop
repz
sbbb
aaa
call
imul
and
shrb
jl
out
cwtl
inc
mov
aam
andl
mov
mov
jmp
outsl
jns
jmp
and
pop
jp
adc
sbb
xchg
lock
aam
dec
mov
daa
xor
xchg
and
scas
sub
sub
cmp
sti
lahf
mov
sti
sarl
stos
jl
mov
in
push
ds
add
mov
cmpsb
cltd
popf
jg
pop
clc
fnstsw
mov
dec
push
cld
dec
cmpsl
ret
insl
xlat
sub
js
mov
inc
add
cmp
fdivl
out
cmp
sub
add
iret
push
push
xor
xchg
call
test
or
mov
mov
dec
dec
aaa
push
inc
jl
pop
adc
into
mov
xchg
arpl
xchg
pop
movl
push
xchg
push
xor
enter
mov
pop
xchg
push
enter
xor
cmp
pushf
xchg
lds
mov
loopne
mov
ds
pop
fs
xchg
ret
hlt
inc
lock
dec
sbb
pushf
mov
add
in
cmp
push
pusha
mov
fdivs
inc
sbb
iret
ja
int
enter
mov
test
lods
int
mov
fs
aad
sbb
sti
lods
aaa
in
inc
fwait
roll
pop
inc
shll
or
aad
dec
scas
out
push
je
test
pushf
cmp
sbb
xchg
push
stos
pop
stos
les
xorl
mov
cwtl
loope
clc
nop
mov
lahf
jmp
popa
aam
adc
jp
repz
stos
add
clc
stc
fcomps
or
sbb
jno
xchg
and
push
cmp
and
dec
popf
cmp
sarl
dec
lods
pop
push
jns
mov
add
mov
rclb
ds
das
fdivrl
pop
or
mov
cmp
sub
hlt
push
xchg
shll
push
jbe
xchg
insl
ret
loope
mov
xchg
push
mov
or
pop
or
shll
imul
scas
and
xchg
imul
cmc
dec
flds
jbe
in
hlt
inc
mov
andl
xlat
loop
lds
and
fst
push
ret
subl
jecxz
mov
imul
add
sub
push
fwait
scas
and
or
adc
mov
mov
mov
in
pop
imull
enter
divl
xor
rclb
dec
dec
dec
sub
sub
flds
fistpl
xor
dec
lea
add
outsb
mov
mov
lcall
xchg
push
jl
push
lahf
scas
mov
mov
loopne
jns
add
dec
subb
cmpsb
fildll
mov
lock
imul
ss
popa
add
shrb
dec
mov
adc
daa
ja
out
shll
push
sub
aad
clc
xor
popf
mov
jb
xchg
rcrb
add
sub
loop
imul
push
lahf
inc
push
push
pop
data16
dec
js
inc
xchg
push
dec
or
rcrb
inc
int3
sti
or
push
add
sarb
mov
popa
cmp
xchg
pushf
jbe
or
dec
adc
sbb
jo
adc
and
push
pop
jne
push
dec
and
jg
mov
pop
pop
xchg
mov
sub
adcl
sbb
fdiv
adc
xchg
fldcw
or
mov
inc
jns,pt
jno
cmp
and
cwtl
add
lock
mov
or
sub
xchg
pop
mov
xor
add
sub
mov
xlat
adcl
push
ret
divl
lds
sar
fdivrl
mov
cmp
push
pop
fsub
shll
lea
jae
insl
je
popa
jecxz
cli
sbb
sbb
fs
or
mov
fisubl
pop
pop
sbb
or
addr16
pop
pop
scas
insb
mov
fcoml
inc
lcall
cld
loope
xchg
dec
ret
mov
jl
xchg
repz
sbb
int3
push
hlt
mov
pop
nop
sub
inc
in
test
or
rorl
xchg
sub
in
mov
fldt
sbbl
mov
mov
pusha
mov
das
out
jne
jl
push
test
scas
gs
mov
sahf
mov
jg
andb
or
mov
mov
xor
fs
add
hlt
fdivrs
pop
pop
cmpl
rcrb
inc
pop
cmpsb
fcmovu
rorl
push
xchg
add
shlb
jb
stc
push
xor
jge
push
push
icebp
push
push
lds
push
out
adc
adc
rclb
pop
fimull
sub
in
sbb
decb
mov
imul
mov
jl
cmp
cmp
ret
cs
ret
ja
jo
and
aas
or
iret
test
or
jmp
cli
insl
mov
lret
inc
mov
rcrb
xchg
enter
xchg
sbb
aad
cmp
cli
sub
popa
jae
dec
xor
test
sub
lods
jge
cmp
ret
ljmp
test
orl
mov
shlb
add
dec
add
inc
mov
lock
dec
add
inc
cmpsb
aam
shr
add
and
push
ficoms
lret
in
rcr
clc
xchg
cmp
dec
pop
repz
cli
adc
xchg
rcl
pushf
and
aaa
cli
clc
jge
insb
cwtl
adc
cld
dec
lret
push
test
xchg
push
movsl
inc
pop
pop
mov
push
sar
sub
xor
jb
adc
jmp
xchg
mov
movsl
or
aad
push
lds
push
add
add
in
test
mov
icebp
iret
inc
stc
adc
arpl
aas
push
int
fs
push
mov
andb
mov
jbe
in
and
mov
jg
add
mov
sbb
into
sbb
mov
nop
gs
mov
call
cmpl
push
pop
ss
popl
push
in
sbb
roll
aad
sahf
mov
fnstcw
insl
js
mov
fwait
add
xchg
jmp
push
or
mov
fistpl
orb
push
stos
imul
mov
cmp
das
and
loope
and
adc
test
push
aas
sub
in
loope
and
xchg
mov
add
loop
dec
cmp
repnz
cmpsb
lcall
les
jno
loope
sub
mov
dec
sub
jmp
in
mov
push
fists
inc
popa
fisttpl
jo
cmp
nop
cmp
call
cmp
xor
rolb
sbb
aas
mov
mov
mov
lea
clc
dec
mov
aaa
dec
xchg
fldt
inc
pushf
clc
cmp
test
jecxz
adc
or
mov
mov
movsl
sbb
or
mov
inc
stc
mov
push
xor
testl
ja
or
push
pop
mov
pop
push
movsl
out
rclb
popa
mov
in
fidivs
movsl
nop
stos
je
addr16
mov
enter
nop
jp
mov
pusha
mov
in
jecxz
push
in
imul
dec
cld
popf
data16
jle
adc
fcmovu
add
repz
dec
push
fsubs
into
mov
pop
inc
sub
jnp
sbb
cmp
loopne
nop
sub
adc
jnp
lock
xchg
adc
mov
mov
pop
cli
nop
sbb
cmc
mov
mov
jle
push
neg
dec
aaa
dec
push
sbb
pop
idivl
fsubrl
sub
sarb
fidivl
fs
sbb
xor
mov
jne
adc
mov
lds
gs
scas
std
sub
cmp
cs
mov
cmp
dec
testl
sub
mov
mov
imul
sarl
fsub
mov
and
insb
push
test
scas
test
lret
icebp
jl
and
push
imul
call
fstps
movsb
xlat
mov
mov
pop
test
sub
aad
pop
insb
or
adc
pop
pop
lret
xchg
cld
repnz
icebp
push
xor
dec
inc
mov
pop
or
loop
adc
dec
test
cmp
sbb
fwait
mov
aaa
imul
sbb
jns
out
xchg
into
push
pop
mov
js
jmp
addr16
lret
insl
test
shr
sub
add
insb
cmp
out
push
adc
sub
pop
cmpsl
push
subl
sbb
push
insb
test
outsl
out
das
imul
jle
sub
cmp
das
jb
test
mov
mov
aas
or
sub
mov
and
mov
adc
inc
and
fst
mov
mov
pushl
ljmp
cld
pop
or
xchg
sbb
js
loopne
mov
shl
and
mov
sub
push
jne
mov
inc
and
add
jns
inc
mov
je
mov
mov
xlat
aam
stos
lret
pop
mov
push
dec
or
mov
call
adc
jge
jle
jns
inc
pop
push
mov
les
sbb
out
inc
xor
jle
ret
add
jl
sub
adc
in
push
jecxz
add
fadds
cmp
push
icebp
push
xorl
adc
ja
das
adc
es
xor
mov
push
jmp
sbb
sbb
sbb
lahf
xchg
testl
pop
iret
das
dec
outsl
arpl
cmc
test
xlat
sbb
iret
push
sbb
push
ljmp
xor
arpl
sti
xchg
sbb
rorb
cli
mov
fwait
mov
daa
idivl
sahf
icebp
or
xchg
into
and
sub
or
xchg
je
mov
mov
shrb
leave
mov
pop
xor
cmpb
mov
mov
popa
fadds
int3
dec
push
or
stos
push
es
gs
mov
sahf
add
push
ja
jp
mov
out
daa
adc
pop
inc
add
mov
mov
mov
aad
push
faddp
dec
sbb
dec
xchg
cmpsb
xor
inc
aam
hlt
stos
int
adc
fwait
dec
dec
mov
inc
xchg
cmp
and
xchg
lods
aas
xlat
push
mov
in
push
stc
push
iret
les
jns
push
xchg
js
adc
cmpsb
cwtl
mov
push
or
jnp
adc
pusha
jae
pop
mov
xor
ljmp
mov
add
cmc
loope
scas
lds
push
loopne
imul
mov
push
inc
daa
sahf
push
dec
fsubrs
and
xor
iret
adc
jnp
cmc
inc
out
cmc
mov
inc
jno
insl
xor
xchg
fisubrl
or
rorl
jno
push
loope
in
push
out
pop
test
add
pop
or
jecxz
add
mov
or
inc
icebp
push
and
sub
adc
imul
lcall
and
pusha
sub
or
pop
push
add
lcall
test
popf
adc
daa
stc
or
sbb
inc
arpl
dec
pop
or
xchg
ja
sbb
sbb
mov
mov
xor
adc
inc
fsub
loope
mov
lret
pop
shl
sub
inc
fsubrl
in
nop
or
sub
rorb
lahf
pop
dec
push
int3
cmp
iret
pop
add
bound
jecxz
inc
pop
fcompl
inc
mov
pop
lods
sti
inc
divb
push
inc
jecxz
cmp
jns
cs
inc
lods
je
and
movsb
xor
dec
and
stos
xchg
mov
xchg
aaa
movsb
pop
negl
ja
subl
lahf
outsb
and
cmc
push
inc
jp
sub
jo
dec
or
popa
rorl
sub
icebp
pop
fwait
in
dec
pop
cltd
dec
lea
jo
ret
jb
sbb
jo
dec
and
adc
add
add
mov
mov
mov
or
sbb
in
dec
pop
les
mov
mov
stc
rol
sahf
fcomi
mov
adc
fdivs
loop
or
popf
jecxz
jg
ja
and
mov
mov
aas
jp
enter
jge
divb
or
popa
add
xchg
dec
jae
xchg
cmc
movsb
mov
push
pushl
dec
test
sbb
dec
ss
rcr
jge
loope
mov
mov
dec
cmp
in
stos
in
aaa
adc
ljmp
xchg
xlat
sub
pop
test
or
push
test
adc
pop
cmp
cli
out
mov
movsl
cmpsl
mov
add
inc
cs
out
fwait
jo
add
push
mov
lret
dec
pop
in
adc
test
adc
insb
push
xchg
call
jl
jle
push
hlt
aam
push
jb
mov
mov
and
adc
hlt
inc
dec
sub
cmp
cs
fisubl
jle
leave
jp
jo
pop
cmpsb
arpl
or
add
mov
in
mov
jno
dec
repz
dec
inc
and
popf
and
jae
lcall
push
sbb
iret
sub
in
notb
pop
repz
add
int
xor
movsl
mov
xchg
xor
or
jb
sbb
cltd
push
pop
fmuls
fucomp
dec
aaa
jg
mov
lcall
and
mov
movsb
xorb
jb
negl
mov
jp
addb
dec
push
mov
cmpsb
mov
sub
sarb
dec
push
cmp
daa
dec
pop
daa
dec
or
cmpsb
dec
movsb
dec
jle
les
enter
xor
mov
sub
jbe
test
xchg
movsb
mov
jnp
push
inc
fstpl
mov
mov
or
jp
jg,pn
es
inc
inc
push
cmp
mov
pop
xabort
jns
aaa
leave
ss
push
pop
xor
adcb
icebp
push
or
push
nop
xor
cmpsb
sub
ds
ds
loope
dec
lahf
xchg
rorl
push
xlat
dec
jmp
push
mov
dec
cmpsb
pop
dec
loop
sbb
loop
or
popf
loopne
sbb
movl
lret
imul
jne
push
out
daa
or
je
mov
fdivs
js
stc
stc
gs
add
rclb
loope
mov
ja
in
daa
in
sub
ret
in
and
cmp
sbb
mov
jno
xor
idiv
seto
aam
mov
inc
lret
repnz
lcall
inc
fimull
movsb
xchg
and
sub
loope
xchg
sarl
shr
andl
mov
clc
sahf
test
test
xchg
fisubrs
xor
rorb
fstl
in
dec
jg
sti
cmp
or
and
scas
add
fistl
mov
add
idivb
ljmp
push
jnp
cmc
ret
shlb
mov
in
test
add
fcoms
xchg
xchg
cltd
xor
enter
jl
add
cltd
fcmovnb
sub
push
lods
popf
mov
push
xor
dec
sbb
cli
leave
push
push
cmp
popa
and
outsb
mov
cmpsb
out
pop
xor
ficompl
jno
cli
jnp
cmp
pop
bound
sahf
mov
push
add
lret
mov
lret
test
mov
notl
cltd
fisubrs
test
pop
fs
dec
lret
cmp
rolb
xchg
push
mov
and
nop
cmpsb
out
add
adc
dec
xchg
loop
pop
pop
xor
out
in
xchg
dec
fdivs
xchg
push
jo
in
and
sahf
inc
int3
cmpsb
dec
push
sub
xchg
test
hlt
aad
xor
dec
push
faddp
push
adc
push
cmp
push
add
xor
ret
mov
xor
iret
add
ss
inc
ljmp
cmpsl
addl
mov
insl
sahf
daa
mov
into
xchg
xchg
jg
cld
dec
ja
int
fwait
ss
mov
in
aam
pop
adc
mov
daa
xchg
push
pop
lods
les
jecxz
sub
pop
and
adc
or
jno
xor
int
inc
push
and
fwait
popa
jne
shrl
inc
jg
add
imulb
jo
mov
cmp
aaa
lcall
or
xchg
out
or
orb
and
pop
sub
in
mov
and
mov
and
ljmp
aad
fidivrl
push
jp
sub
sub
lds
lea
in
jl
dec
ljmp
or
ds
loopne
and
in
jmp
xor
scas
cmp
ret
mov
dec
adc
mov
mov
mov
sbb
pop
pop
mov
adc
lock
mov
mov
adc
xor
inc
iret
sub
mov
bound
inc
mov
sub
fcomp
test
icebp
mov
mov
scas
adc
push
mov
inc
pop
imul
dec
test
ud0
mov
mov
push
inc
gs
mov
fcmovbe
mov
xchg
jmp
dec
inc
xlat
arpl
ret
mov
adc
cld
imul
adcb
jbe
pop
pop
inc
dec
xchg
jbe
push
subl
int
xchg
scas
cltd
pushw
mov
inc
adc
adc
in
sub
cmp
sbb
mov
cld
int
popf
or
movsl
cli
popf
into
dec
xor
xor
or
dec
lds
daa
test
aad
lods
outsb
mov
adc
dec
bound
cmp
mov
lods
pop
sub
not
jnp
add
test
push
jo
push
sub
dec
cmpsl
jb
loop
arpl
aam
adc
inc
xchg
mov
dec
jns
fsubp
fwait
adc
push
push
clc
or
xor
xor
aad
les
sbb
cmp
lcall
fs
push
mov
mov
or
pop
in
xor
ja
out
inc
out
xor
mov
jmp
fistps
cltd
adc
mov
mov
jae
add
pop
jno
jmp
lds
jnp
and
ret
nop
stos
cli
aas
push
inc
fadds
pusha
outsl
xor
ret
push
and
mov
rcrl
int
sti
lock
mov
push
addl
push
out
scas
jb
sbb
ret
adc
xchg
add
xor
adc
ret
cmpsl
cmp
ud1
add
or
fsubrs
bound
mov
pop
push
fdivrp
add
out
out
rcrl
fwait
shlb
lods
xchg
push
aas
ljmp
inc
inc
fdivr
or
xor
mov
push
inc
pop
cmp
adc
gs
adc
call
xor
int3
pop
popf
movb
and
sbb
push
jp
pop
mov
inc
or
popa
xor
push
inc
mov
loopne
scas
adc
out
dec
sub
xchg
cmc
sub
lds
test
jp
dec
repz
ret
negb
aaa
cmp
mov
adc
aaa
jmp
es
or
mov
fistpl
lea
cmp
jbe
xor
stc
pusha
cs
jmp
dec
in
in
pop
sbb
dec
push
cmp
ret
les
mov
loopne
adc
sub
adc
xchg
adc
xchg
lods
sub
xchg
enter
sbb
dec
insl
mov
arpl
jg
adc
popa
aas
lock
add
into
mov
pop
mov
xor
cmpsb
insb
mov
popa
push
out
shlb
cld
xor
aas
push
xchg
insb
adcl
and
xchg
pop
xor
lea
cld
js
xchg
inc
dec
sub
jmp
leave
pop
es
sti
aad
aas
mov
or
mov
or
hlt
sbb
mov
inc
pop
xchg
sbb
push
sbb
pop
mov
iret
inc
cmp
popf
mov
cmp
out
pop
lods
lret
dec
cmp
pop
sbb
arpl
test
scas
or
or
sub
xchg
push
shlb
lock
lods
rcrb
jbe
arpl
xor
jg
and
idivb
ss
cmp
mov
fdivl
pop
fstpt
arpl
lahf
and
mov
sub
test
jno
xchg
mov
flds
jbe
xchg
mov
div
push
xchg
cmp
inc
sub
push
mov
iret
push
movsb
cld
mov
in
out
sbb
movsb
insl
jp
sub
jge
ljmp
xchg
cld
pop
xor
xchg
mov
lds
jne
aas
pop
push
xor
aas
or
pop
andb
or
rclb
and
push
and
mov
adc
sub
sti
outsl
and
insl
int3
rcrb
iret
lcall
test
aas
cwtl
inc
sub
or
xor
loope
push
lock
imul
ret
lcall
testb
repnz
mov
out
sti
jno
xchg
ficoml
filds
jo
xchg
negl
cmpsb
es
rcrl
pop
sbb
shrb
stc
nop
xor
scas
jl
pop
mov
jb
arpl
daa
sti
inc
push
mov
cmp
and
jg
mov
test
and
stc
sub
cmpsb
mov
cmp
xchg
ja
cltd
addl
push
in
loopne
adc
mov
int3
hlt
ja
pop
mov
jnp
call
or
xchg
sub
lcall
mov
out
ret
xchg
jge
push
push
inc
cld
ja
cmp
lds
cld
inc
dec
fiaddl
and
mov
mov
aad
push
or
cs
and
sbbl
loop
movsl
jecxz
mov
push
ja
leave
or
shll
test
fidivrs
fmul
xor
mov
shr
inc
or
add
mov
pop
leave
push
popa
xor
sbb
mov
cmp
in
out
xor
sub
mov
cwtl
push
sub
ret
add
das
pop
pop
pop
push
in
add
mov
dec
rolb
inc
idiv
nop
pop
jg
in
pushf
cltd
inc
in
xchg
jb
mov
or
add
cmpsl
out
stos
repz
xorb
out
sub
bswap
pop
nop
dec
push
fwait
cvttps2pi
lea
insb
out
push
test
add
xor
orb
ja
icebp
xchg
stos
pop
in
xor
xchg
pop
stos
sti
insb
addr16
daa
jno
roll
xchg
xor
or
cmp
scas
lea
ficoms
lock
xor
imul
fimull
cmp
sub
jae
jmp
mov
je
adc
add
xor
mov
daa
lods
xor
loopne
fcmovne
xor
fistps
pop
lcall
lock
leave
xchg
mov
or
decl
cmp
dec
ja
inc
xlat
mov
and
dec
mov
mov
fmuls
inc
loope
xlat
cmp
imull
mov
in
pop
data16
jge
fistpl
dec
add
xchg
addl
push
inc
or
pop
and
mov
data16
call
ja
adc
cltd
ss
pop
insl
adc
ret
js
jbe
loop
adc
mov
fnstenv
cmpl
cmc
push
xor
arpl
xor
xacquire
imul
xlat
popf
xor
xchg
mov
je
or
icebp
cmp
mov
cmc
inc
mov
cmp
and
mov
in
mov
push
nop
cmpsl
xor
push
jno
andl
imulb
add
pop
xor
cwtl
dec
mov
mov
cwtl
cmp
mov
push
xchg
mov
cli
adc
idivl
mov
jmp
inc
aad
loopne
jnp
repz
lods
adc
lcall
mov
xchg
or
ret
push
fisttpll
loope
mov
mov
into
and
jp
cmp
push
movsb
ss
pop
in
adc
or
adc
pop
xchg
mov
int
mov
push
add
stc
mov
out
js
inc
mov
das
insb
jg
mov
data16
mov
imul
xchg
xchg
loopne
rorl
mov
push
outsl
mov
mov
dec
inc
jmp
mov
xchg
pop
pushf
and
push
adc
imul
rcrb
inc
aaa
fsubrl
inc
cmp
sbb
adc
and
inc
test
sbb
shlb
pop
add
ja
and
jne
xchg
movsb
mov
push
bound
stos
mov
or
xchg
push
fbld
aam
push
out
lret
sbbb
cmc
jo
decb
lods
sbb
lods
pop
in
pusha
cmpsb
push
in
inc
push
xor
inc
jae
repnz
adc
pop
jp
pop
dec
jmp
imul
adc
repz
rcrl
int
pop
in
jmp
in
cmp
and
xchg
jle
out
adc
repz
dec
daa
cmc
push
lea
rorl
xor
fnstsw
and
xor
push
pop
insb
add
push
push
shll
mov
cmp
and
adc
cltd
push
fimull
mov
out
adc
xchg
mov
adc
inc
push
adc
jns
sbbl
inc
mov
leave
xor
jno
loope
test
cs
xor
xchg
jecxz
and
pop
ljmp
fucomi
call
test
mov
loopne
cmp
push
add
and
jp
jno
loopne
inc
imul
and
xor
insl
cmp
xor
cld
aaa
mov
insb
fcomip
clc
or
mov
jno
les
lret
sbb
orl
mov
outsl
mov
fwait
loopne
cmp
cmp
mov
in
and
xchg
inc
pop
cmc
cmp
in
jmp
dec
inc
pop
enter
repnz
inc
inc
add
sbb
aad
xor
jne
pop
mov
scas
icebp
mov
mov
sbb
faddl
dec
mov
fisttpl
movsl
mov
mov
cmc
xchg
lahf
or
jnp
lods
xchg
push
loopne
dec
mov
or
add
sbb
or
mov
fdivrs
test
cmpsb
mov
sbb
add
aam
pop
mov
xor
faddl
data16
popa
dec
aas
scas
inc
sbb
sub
test
test
add
sub
pop
test
xchg
mov
add
dec
lods
or
fsubrl
lahf
dec
mov
push
bound
inc
xchg
enter
mov
xchg
jl
sub
rcrb
ja
mov
test
or
xlat
add
lret
icebp
inc
jmp
mov
movsl
clc
pushf
rolb
jb
testb
fistps
nop
sarl
dec
cmpsl
pop
or
push
lcall
mov
clc
bound
sbb
pop
mov
icebp
test
push
fdivl
outsb
pushf
ret
inc
mov
test
adc
mov
rcll
pop
pusha
push
loopne
scas
adc
or
mov
push
cmc
lods
ss
imul
mov
pop
andb
jo
xor
fsubs
inc
pop
gs
push
jnp
int3
mov
jge
dec
cmp
inc
in
inc
sbb
push
adc
mov
outsb
pop
lret
adc
adc
xchg
dec
xor
out
xchg
sbb
mov
test
and
adc
insl
outsl
movsl
sub
cmpsl
xor
fnstcw
fadds
test
push
and
jmp
hlt
loope
popf
add
mov
addr16
xor
mov
add
rol
push
iret
push
rorb
or
adcl
fisubrs
negl
xchg
popa
int3
jne
shlb
aad
leave
adc
adc
in
jg
push
int
sub
or
adc
scas
inc
mov
sub
sub
xlat
loope
add
sub
inc
xchg
lods
or
adc
inc
xor
sub
sarl
mov
pop
cmp
or
push
loope
cmp
fstl
xchg
adc
pop
add
stc
pop
xor
in
sub
jl
in
dec
in
cli
insl
dec
aad
add
fildl
rcll
cmp
cmp
inc
test
fwait
xchg
jbe
mov
stos
repnz
pop
iret
mov
xchg
adc
pushf
out
xor
ss
fnstsw
std
call
js
sub
cmp
int3
mov
jno
pushf
shll
pop
jns
push
mov
or
loopne
lods
aam
add
cld
mov
mov
test
fstl
xor
jmp
xor
sbb
add
sbb
cmp
or
or
shrb
mov
xchg
inc
xor
in
test
lcall
adc
sub
and
ss
xchg
jge
adc
addr16
xchg
add
in
ror
cs
jne
test
test
cmp
addr16
ret
cmc
fstps
and
sbb
jmp
lods
mov
jge
clc
pusha
push
fadds
dec
jge
insb
loope
jae
out
xor
leave
push
insb
or
or
or
cmp
push
adc
rorb
sti
mov
jno
cmp
mov
cmova
jge
ja
pop
in
mov
or
push
sub
roll
ss
hlt
enter
fmuls
decb
jnp
cmpl
decb
in
imul
orl
lea
fstl
push
stos
sub
mull
cmp
xor
lods
movsl
mov
lret
push
xor
testb
cmpsl
push
inc
jbe
mov
loope
fimull
mov
scas
xor
mov
mov
xchg
pushf
sub
push
mov
xor
add
clc
daa
inc
and
loope
addr16
setge
into
or
mov
or
dec
sti
adc
mov
mov
ret
mov
loope
push
sbb
fcom
bound
movsl
clc
jno
dec
rclb
popa
adc
faddl
cmpl
add
cltd
xorb
lcall
iret
lcall
out
test
les
xchg
int3
imul
ror
ljmp
push
adc
mov
push
xchg
out
fcom
outsl
sbb
xchg
loopne
loopne
cmp
push
mov
ret
lock
push
roll
lods
pop
cmpsb
inc
aad
repz
and
adc
arpl
movsl
mov
fwait
dec
outsb
lcall
cmpsl
sub
call
inc
sub
repnz
test
cmc
loope
and
in
push
mov
or
sahf
cmp
cmp
inc
je
sti
push
or
subb
pushl
insb
xor
xor
into
xchg
mov
in
pop
xor
notb
out
add
pop
lcall
push
out
mov
mov
pop
push
rcrb
cmp
les
adc
popa
lret
aam
adc
and
arpl
mov
push
lock
orl
mov
mov
xchg
das
cmpsl
pop
xchg
lods
inc
test
fnstenv
fs
std
xor
fidivrl
addl
xchg
es
pop
cmp
pusha
in
dec
test
nop
mov
inc
push
sub
mov
pop
adc
push
aad
xchg
inc
mov
and
leave
ret
xchg
stos
movsb
lock
cmp
int3
add
leave
popa
mov
sub
sbb
in
adcl
adc
cmp
cs
mov
lret
push
int3
scas
dec
mov
add
pop
aaa
js
pop
and
call
pusha
xchg
jnp
mov
out
mov
push
sarb
addr16
or
clc
imul
cmpsb
jl
add
int
cmpsb
in
push
pop
pop
addb
cmp
gs
jmp
xor
mov
stc
pop
cs
xchg
add
jl
mov
sub
loopne
dec
cltd
add
lods
dec
leave
and
icebp
xchg
pushf
mov
push
pop
cmpsb
xchg
mov
jg
adc
push
lea
pop
test
nop
mov
xorl
mov
add
repz
jo
mov
push
mull
fldcw
sbb
jmp
cmp
stc
gs
cltd
pop
cmp
xor
add
dec
mov
mov
pop
xchg
out
xor
push
std
pop
jle
push
cmc
into
cmpsb
cmpsb
sar
inc
addr16
adc
bound
js
xor
dec
ret
cwtl
std
cs
cld
inc
inc
adc
mov
rcrl
dec
sbb
insb
xchg
cmpsl
ficomps
mov
cmp
adcl
xchg
pushf
pop
pop
sti
pop
xchg
mov
push
mov
sti
in
out
std
stos
loop
xlat
xchg
cmpb
pushf
hlt
test
les
or
cmp
xlat
jp
xor
and
push
add
pop
mov
and
lcall
gs
dec
icebp
loop
mov
mov
push
icebp
xorl
das
pop
das
loope
xchg
push
fistl
push
dec
inc
scas
mov
lea
pop
insb
xor
out
push
jbe
cmp
out
mov
rorb
xchg
outsb
imul
pop
sbb
outsl
fdivs
mov
xchg
xchg
loope
dec
pop
push
pop
add
sahf
sbb
insl
shlb
fs
clc
inc
scas
push
imul
enter
jecxz
hlt
add
fldcw
mov
fdivrl
js
mov
jno
cmc
dec
adc
pop
mov
mov
je
orb
pop
andb
fimuls
push
enter
ret
sub
dec
jle
enter
push
adc
iret
test
pop
cmp
adc
adc
inc
push
ljmp
sti
enter
pop
cmpsb
add
jmp
ja
int3
pop
mov
loope
mov
xchg
pop
or
shll
add
dec
pop
rorb
in
test
adc
push
push
mov
loopne
mov
jb
mov
insl
mov
fsts
int3
pop
jl
dec
mov
xorb
ljmp
test
fistps
fisubs
adc
pushf
add
jg
ja
insl
jnp
push
sub
pop
hlt
mov
sub
sbb
adc
loop
jle
mov
shrl
sub
xor
sti
mov
cmp
cltd
lds
lods
cmpsl
and
movsl
in
add
adc
push
aas
jl
mov
mov
pop
dec
add
xor
xor
call
lods
jecxz
mov
or
mov
mov
testl
sahf
sbb
sub
imul
cld
cmp
jge
inc
mov
mov
pop
xchg
add
shll
fsubr
push
xor
mov
cmp
jne
cld
les
sub
xor
and
jnp
mov
or
mov
sbb
ficompl
into
cmp
movsb
inc
movsb
stc
push
pop
xor
sub
fists
cwtl
push
cmpsb
lods
test
out
inc
fstpl
ljmp
loope
push
jge
mov
sbb
sub
cmpsl
xor
mov
pop
loope
repz
inc
mov
js
rcrl
mov
and
ret
aaa
sahf
addb
outsl
mov
out
ret
pop
mov
out
cmp
inc
add
inc
loop
push
mov
fwait
dec
jo
xor
xor
mov
adc
and
loop
mov
add
sub
fcmovnu
in
std
cli
sahf
mov
pop
fs
pop
push
mov
pushf
cmp
adc
or
sbb
icebp
outsb
mov
pop
xor
dec
addr16
in
xor
aad
add
push
inc
es
test
xchg
fnsave
ror
inc
sbbb
repnz
adc
xchg
cmc
mov
jge
aad
dec
push
jg
test
cmp
xchg
ret
push
xchg
ja
sub
mov
repnz
arpl
lods
add
adc
bound
jg
out
sub
inc
fldt
pop
popa
lcall
stos
cmp
jge
xchg
pop
dec
outsl
into
imul
mov
popw
cmp
cmc
fwait
add
pop
leave
jle
push
adc
pop
mov
jnp
fdivs
call
jmp
dec
cmc
jo
pop
add
dec
and
movsl
ret
shrb
sbb
and
out
scas
push
lods
scas
dec
mov
scas
push
shll
adc
sub
mov
mov
lcall
or
dec
shl
sahf
loope
jae
pop
dec
pop
add
repz
icebp
cmp
rcrl
movsl
lock
xchg
cmp
add
outsb
push
sub
mov
divl
add
inc
arpl
dec
andl
push
test
cwtl
push
lret
lret
test
lds
push
jb
lock
cwtl
sub
inc
sbb
inc
sbb
inc
pop
mov
pop
sahf
popa
or
push
mov
xchg
jmp
out
aad
inc
sbb
dec
xorl
pop
push
test
xchg
cmp
cs
mov
and
sbb
inc
pop
cs
or
pop
out
xchg
bound
adc
daa
dec
jb
or
sub
xor
push
add
loope
sub
clc
addr16
xchg
mov
test
mov
cmpsl
pop
sbb
cvttps2pi
mov
mov
adc
adc
fcmovnu
cmc
andl
push
xlat
mov
orl
lods
cmpsb
push
sbb
lret
pop
and
gs
pop
adc
xchg
sbb
xchg
je
push
mov
push
mov
xchg
push
js
adc
into
mov
mov
adc
adc
lods
push
fistps
and
jg
fistl
aad
mov
dec
dec
es
out
pusha
out
das
push
cmpsb
and
rorl
jmp
mov
sub
cmc
push
cmp
sbb
jmp
adc
xor
xor
popa
or
mov
std
aam
je
into
lods
cmc
push
mov
ja
mov
mov
adcb
lret
xor
inc
pop
in
int3
adc
cmp
bound
xchg
sarl
int3
adc
movd
leave
pop
jle
cmp
sbb
or
pusha
popf
std
mov
jns
loope
sub
or
mov
xor
jge
add
push
sbb
mov
xor
jecxz
add
data16
sub
add
mov
psllq
movsl
mov
jno
daa
outsb
test
pushf
mov
pop
popf
mov
imul
pop
dec
mov
jns
xor
jmp
test
and
xor
pushl
and
and
imul
or
out
sahf
out
and
daa
scas
mov
pushf
push
xor
fwait
xlat
out
cmp
aaa
push
aas
mov
pop
and
cld
xor
shlb
lahf
xor
rcll
cmp
jp
xchg
jns
loopne
xor
loopne
rcrl
lahf
sub
int3
pop
sti
xor
pop
in
ja
test
stos
sbb
xchg
push
pop
arpl
in
cmp
mov
pop
pop
cmp
push
mov
xchg
stos
or
add
jl
and
push
aam
pop
fmul
adc
cmc
movsl
mov
out
loop
in
pop
lods
js
pop
cmc
jb
and
lcall
sbb
imul
xchg
or
mov
fcoms
stos
lret
in
testl
sub
and
lcall
call
lcall
mov
test
pop
sub
dec
push
jle
bound
cmp
dec
addl
icebp
movsl
jge
pop
testl
loop
imul
pop
xchg
or
sbb
mov
jle
dec
push
push
mov
arpl
mov
aam
test
test
dec
push
aaa
mov
cli
aad
mov
fwait
add
outsl
pop
dec
repnz
xchg
lcall
outsl
lret
stos
push
gs
aas
lret
push
add
imul
and
vpxor
xlat
add
pop
call
test
mov
cmpl
jecxz
sub
addb
pop
test
ficoml
or
mov
add
add
dec
and
push
xor
es
int3
insl
out
jle
fs
fwait
mov
fiaddl
stc
add
repz
nop
push
xchg
ficompl
jecxz
clc
scas
int3
sbb
addr16
xor
xchg
cmc
xor
sbb
enter
cmp
popa
cltd
xor
pop
and
jle
jmp
jmp
cmc
adc
out
cwtl
test
mov
insb
jp
xor
or
cmpsb
sub
lret
mov
push
pop
in
adc
cmc
mov
sub
xor
divl
adc
cmc
loopne
push
in
aam
ljmp
mov
xor
test
cwtl
aas
mov
cltd
jge
sub
push
fidivs
xchg
mov
and
fsubr
movsb
mov
mov
mov
xor
clc
lret
fcompl
ss
jns
dec
push
dec
orl
movsb
sbb
or
imulb
jno
jns
pop
in
js
and
fsub
mov
sub
out
mov
out
roll
push
loopne
stos
push
jae
das
xchg
inc
vxorpd
push
push
insl
fistps
push
insb
testb
xchg
andb
dec
inc
ret
sbb
mov
or
in
int3
jns
push
out
mov
xor
sbb
aaa
lret
test
mov
js
fcompl
hlt
cmp
stc
mov
push
add
js
pop
dec
push
sbb
pop
inc
sbb
and
jge
xchg
dec
mov
adc
addr16
pop
or
test
add
rorb
adc
mov
and
cmpsl
pop
lock
popf
mov
cmp
pop
mul
comiss
sub
or
sbb
jl
pop
sub
lods
mov
xchg
inc
fiadds
jo
cli
lods
lods
xchg
popa
stos
cmp
inc
outsl
sub
jnp
xchg
sbb
pop
cli
repz
xchg
subl
cmp
int3
gs
aam
sbb
sub
push
sub
xchg
arpl
mov
mov
out
ficomps
sarb
lea
int
rolb
cwtl
in
xlat
mov
mov
add
stos
pop
bound
aas
ss
xchg
xchg
push
sbb
jns
je
mov
fsubrp
mov
ja
mov
adc
add
or
ljmp
out
push
ds
sbb
sub
mov
sarl
into
or
outsb
ror
sub
add
add
fsubr
and
in
sbbb
xchg
push
xor
lods
xor
pop
test
imul
mov
push
jg
jae
cmp
dec
lret
daa
jge
sbb
dec
stos
shll
mov
sub
xchg
and
mov
mov
cmp
outsl
rolb
mov
cld
mov
aaa
cli
cmpsl
pop
ds
push
pusha
jmp
adc
std
lea
adc
lahf
xor
mov
aam
outsl
es
xor
lahf
jnp
notb
icebp
in
or
or
mov
in
nop
cmp
into
cmp
inc
pop
stos
lcall
dec
lret
call
daa
adc
ret
movsl
mov
mov
sub
sub
adc
cmp
test
rcrl
xorb
stos
pusha
lcall
push
inc
jl
mov
ja
rclb
add
inc
je
or
pop
jmp
xorb
scas
pushf
sbb
into
push
daa
and
bound
repz
sahf
fildll
push
add
pop
popa
jmp
jnp
out
add
mov
into
add
jb
cmp
push
or
shrb
les
or
inc
cs
shrl
movsl
mov
sbb
mov
cmp
mov
mov
pop
ja
push
cmp
jp
add
push
xor
add
mov
mov
cmp
jp
lahf
out
stos
rclb
outsb
fnstsw
mov
aam
enter
loopne
cmc
inc
imul
fistl
push
inc
push
popa
xchg
pop
mov
add
sti
push
popf
xor
clc
mov
add
or
movsl
inc
xlat
mov
push
mov
in
popf
xchg
push
mov
lcall
or
push
arpl
out
mov
daa
aas
imull
mulb
cmpl
push
adc
ds
jecxz
mov
imulb
jg
xchg
adc
dec
push
icebp
mov
scas
inc
jmp
sbbb
pop
out
mov
pushf
fmuls
je
and
xchg
xchg
add
int3
mov
and
in
cltd
sahf
pusha
cmc
outsl
sbb
bound
cmp
frstor
pop
shll
push
movsl
xor
lea
adc
push
inc
add
xchg
xor
pop
sub
loop
test
push
leave
rcrb
aaa
sbb
rcrb
sub
push
mov
iret
ss
ret
jecxz
movsb
bound
lahf
mov
pop
dec
fwait
or
cwtl
dec
sbb
jo
sub
adc
cltd
mov
scas
leave
cmp
push
pop
out
lock
out
mov
jnp
xchg
cmp
fdivs
es
popf
and
fdivs
sbb
mov
push
or
mov
push
push
cld
sub
mov
mov
cmp
fldenv
adc
push
bound
pop
jmp
pop
das
ja
and
add
pop
gs
push
fs
jle
ss
push
outsb
jnp
imul
movsb
shlb
push
or
xor
mov
and
clc
push
call
jbe
cmp
test
xor
jns
push
es
push
xor
lods
xor
mov
int
mov
cmp
repz
fdivrl
ror
cli
add
dec
in
pop
mov
sub
cs
inc
pop
mov
rclb
mov
test
repz
repz
fildll
cli
sti
jnp
or
lret
cmc
in
sub
call
js
pushl
push
cmp
mov
and
or
out
push
ret
adc
aaa
jle
mov
jno
sub
adcb
cli
insb
test
xlat
xchg
shl
add
sub
jne
xlat
pop
sub
add
fwait
insl
add
or
sub
xlat
cli
test
insb
ljmp
cld
adc
pop
xor
mov
das
daa
rcrl
xchg
xlat
shrl
add
negl
test
and
adc
nop
add
pop
jecxz
stos
jle
sbb
outsb
pop
je
imul
pop
and
dec
mov
mov
xchg
adc
inc
sbb
and
inc
scas
movsb
mov
mov
fstl
mov
repz
das
punpcklwd
mov
cmpsl
loopne
sub
mov
mov
xchg
xchg
das
mov
gs
mov
xchg
shlb
mov
mov
popf
cmp
aam
xchg
enter
fs
fsubrs
cld
repnz
dec
sbb
movsb
pusha
into
mov
xchg
jnp
push
lahf
add
out
daa
das
xor
adc
jge
xchg
sub
in
rcr
fcomi
ficoml
decl
adc
push
or
push
mov
push
mov
sub
stos
sbb
pop
pop
or
sub
mov
xor
repnz
repz
push
dec
popa
sub
mov
cmc
lds
add
adc
int3
jecxz
sub
sub
sbb
xchg
jle
dec
outsb
into
dec
stos
xchg
xchg
add
xchg
push
xchg
xchg
scas
push
xor
jmp
ret
fcompl
cmp
mov
mov
mov
inc
and
xlat
mov
jg
jg
shrb
test
mov
cld
lods
lods
inc
out
or
and
jae
iret
movsb
adc
lock
cmp
inc
cmc
adcb
cmp
movsl
insl
inc
scas
jo
movsb
scas
pop
lds
or
and
add
mov
sub
xchg
aas
les
mov
jle
jl
std
dec
inc
out
ljmp
fadd
dec
push
jle
mov
xor
jp
ds
push
vpmaddubsw
sub
xchg
push
lds
or
popa
xlat
jno
addl
mov
push
add
icebp
insb
iret
test
sub
loop,pt
add
sub
sub
sub
jo
icebp
lods
stos
sub
or
pop
lcall
dec
ret
scas
lea
and
cli
xchg
adc
jg
idivl
xchg
jp
mov
in
lods
push
arpl
sub
pop
sub
dec
cmpsl
fs
jae
mov
dec
lea
rorb
pop
mov
cmp
repnz
jae
dec
insl
and
arpl
jae
rcll
dec
aaa
shl
outsb
inc
add
nop
and
push
cld
popf
pop
cmp
inc
test
jbe
jae
outsl
rcll
or
sbb
cmp
popf
jp
lock
adc
cmp
shrl
jb
sbb
xchg
cmp
mov
mov
shlb
popf
jle
jl
mov
lret
icebp
mov
gs
push
mov
and
leave
cmpb
dec
cmpsl
cmp
jae
cld
jae
mov
fisttps
dec
fucomi
sub
xchg
dec
fmull
cmp
orb
and
mov
decl
jmp
or
icebp
mov
sbb
popa
jle
inc
popa
pusha
cmp
in
cmc
shl
add
pop
jmp
lret
sbb
aam
cmp
sbb
inc
or
cmpsb
jae
sti
mov
and
jbe
mov
dec
mov
xchg
aam
xchg
ret
test
adc
or
xorl
inc
sbb
jnp
mov
ljmp
push
mov
push
cmp
sbb
jmp
xchg
mov
lret
cmc
fisttps
daa
leave
inc
push
dec
inc
xchg
sarl
int
movsl
and
xor
push
adc
and
sahf
jns
xor
jl
imul
lret
bound
int
repz
mov
pop
sub
je
sarl
or
sbb
addr16
test
cs
mov
fistpll
iret
aaa
mov
stos
fildll
iret
les
push
iret
imul
add
fadds
jae
inc
mov
lret
in
xchg
cmpsb
or
dec
or
xor
cmpsb
pop
repnz
mov
dec
pop
mov
adc
mov
push
push
lret
sub
and
testb
mov
pop
push
mov
add
and
enter
adc
insl
or
ja
mov
mov
fdiv
and
jecxz
mov
pop
movsl
shll
pop
pop
mov
mov
lea
into
xor
push
dec
sbb
dec
cmp
or
inc
shrb
imul
dec
jp
outsl
sti
test
inc
leave
jmp
repnz
push
bnd
jge
mov
jb
cmc
push
xchg
pop
js
pop
mov
lods
push
in
imul
pushf
cld
pop
enter
mov
sub
mov
adcb
jno
out
jbe
mov
test
push
jmp
outsb
push
fsubs
pusha
xor
gs
notb
scas
pop
mov
lret
xchg
fidivs
cmp
xor
fcompl
and
nop
sti
nop
movl
cmp
lea
out
in
dec
mov
imul
mov
imul
ret
enter
cmp
decb
push
and
dec
xor
xorb
pop
and
mov
add
jp
xchg
nop
jp
mov
mov
outsl
out
into
rcll
mov
cmp
test
aam
pop
jecxz
out
popa
movsl
mov
daa
jbe
xor
xchg
aad
lods
shll
adc
outsl
paddusw
cmp
sub
test
push
adc
mov
jmp
or
cmp
push
fstpt
out
rclb
daa
test
or
addl
push
into
mov
subb
data16
inc
cmp
push
push
adc
xor
fidivs
pop
sub
insl
dec
andl
adc
sub
pop
pop
adc
dec
mov
sbb
pop
pop
xor
cmp
jb
in
mov
push
jl
dec
mov
sahf
dec
mov
fwait
loope
out
or
fimull
sub
popf
sbb
push
inc
lods
int
add
fwait
and
fcomp
pop
daa
push
fwait
and
mov
sbb
div
repnz
sub
mov
pop
dec
ret
xor
outsl
mov
enter
jns
push
out
fcmove
stc
insb
pop
mov
adc
ss
cmp
mov
push
mov
sahf
outsl
or
mov
popa
pop
repz
es
cmpsb
and
pop
mov
les
pop
and
outsb
decb
add
je
scas
pop
jmp
ret
pop
stos
push
inc
push
pop
xchg
jp
adc
push
inc
mov
iret
and
or
shrb
cmc
sbb
or
stc
rclb
mov
roll
out
aaa
lods
jns
xor
xor
jae
fs
inc
add
faddl
cmpsl
inc
mov
or
xchg
jb
xchg
push
inc
cltd
push
repnz
mov
cmp
mov
cli
xor
jnp
xor
dec
cmc
inc
js
push
mov
jg
push
xor
jp
push
fisubrl
cmp
sbb
push
lret
arpl
mov
cld
imul
mov
test
les
inc
lahf
fwait
lret
movsl
out
dec
roll
pop
or
aam
rcrl
push
ds
sub
add
ljmp
mov
imul
push
push
xchg
in
fwait
cs
cltd
sbb
scas
dec
lret
sbb
aas
ret
inc
repz
dec
divb
cmp
push
loopne
mov
pop
pop
fiadds
jnp
insb
or
cmp
or
pop
pushf
stc
mov
xor
cmpsb
mov
gs
xor
mov
cmpsl
in
dec
xorb
or
mov
call
dec
test
sbb
lea
or
in
lea
bound
or
xchg
mov
int3
sub
mov
daa
cwtl
addb
add
dec
jp
mov
adc
mov
mov
push
mov
xor
cld
in
dec
sahf
mov
fidivs
movsb
mov
lock
std
mov
fdivrl
cmpsl
mov
mov
add
pusha
loopne
or
stc
mov
jge
ja
mov
ret
or
sub
adc
jnp
lock
mov
add
jae
popa
into
icebp
aaa
mov
cmc
data16
jmp
je
dec
in
addr16
inc
mov
mov
or
icebp
adc
dec
adc
sub
out
loope
pop
ds
fwait
stos
aam
lock
xchg
cwtl
dec
push
mov
clc
cli
xchg
mov
fnstcw
fwait
xchg
sub
push
mov
add
cltd
push
ljmp
jo
mov
lahf
fdivl
int3
inc
pop
jp
and
mov
pushf
pop
aas
cmpsb
jno
jg
cld
push
mov
mov
rolb
mov
ljmp
mov
xor
pop
aas
pushf
shll
lock
or
mov
outsl
pop
lds
push
call
push
or
xchg
sbb
fisttpll
es
sbb
outsl
xchg
ljmp
shr
xchg
cmp
mov
out
push
movsb
pop
dec
inc
mov
jecxz
imul
xchg
cld
leave
hlt
repnz
add
shld
fsts
stc
mov
repz
cmp
pop
fwait
sbb
pop
or
adc
loope
jbe
adc
mov
adc
stc
lods
or
inc
jnp,pt
iret
cmp
je
iret
mov
hlt
xchg
push
mov
shll
adc
dec
push
sbb
les
ds
adc
adc
dec
repnz
adc
mov
lods
les
add
and
sbb
imul
out
test
pop
sbb
xor
imul
xor
test
aam
nop
ret
and
js
fwait
imul
pushf
fldenv
fxch
ficomps
mov
insl
jb
xor
aaa
das
xchg
and
jo
cs
int
pop
pop
sbb
mov
idiv
iret
popa
xchg
xor
ljmp
sbb
xchg
loope
sub
jne
sbb
dec
frstor
and
mov
scas
loop
aas
hlt
fs
jmp
inc
adc
mov
cltd
or
sub
movsb
shlb
sbb
jno
mov
push
in
jae
popf
mov
mov
lea
lods
sbb
loope
lret
std
mov
mov
mov
inc
xchg
leave
xchg
cmp
add
ficompl
or
push
fsts
mov
xchg
lods
popa
jge
stos
mov
pusha
and
testl
sub
out
push
and
fidivrs
mov
xor
addr16
mov
jecxz
pop
nop
sbb
int3
sub
cmp
jle
dec
sarb
scas
ret
call
stos
sbb
clc
pop
pop
mov
jb
add
push
pusha
cmp
gs
fisttpll
xchg
pushf
lods
je
mov
pusha
adc
mov
ljmp
sar
mov
ror
outsl
dec
xor
int
je
fs
sbb
jns
xor
add
jmp
mov
sub
movsb
in
ret
call
aam
mulb
out
clc
popa
mov
pop
movsl
and
sbbb
test
and
idivb
popf
gs
push
push
xor
mov
xchg
mov
test
fs
int
fimuls
dec
add
xchg
push
in
lock
pop
adc
xchg
aam
sahf
les
mov
fwait
in
jg
jle
cltd
fdivrl
xchg
test
jo
test
fwait
and
xchg
sbb
jmp
mov
fiaddl
cmp
push
fwait
clflush
mov
or
xorl
repnz
and
pop
cmpsl
adc
lock
push
sbb
out
pop
mov
aam
push
imul
ficompl
mov
popl
dec
xchg
xor
clc
mov
jns
outsl
jne
xor
mov
jl
jae
aas
jge
imul
inc
repnz
push
xchg
clc
push
pushf
shlb
cmp
jge
stos
sti
jnp
and
out
es
push
lret
cltd
and
fucomp
xor
jne
idiv
add
or
int3
and
cmp
rcll
sbbl
adc
hlt
ret
jnp
cwtl
jg
sub
loopne
or
sbb
cmpsb
out
jle
fs
arpl
jo
xchg
andb
pop
lahf
sbb
inc
popf
mov
nop
inc
jle
and
jne
in
cmp
cmp
cld
test
pusha
mov
ss
ds
cmp
jno
push
adc
das
pop
push
xor
ja
mov
in
repz
inc
js
add
pop
or
aas
push
fnsave
ret
sub
mov
aaa
mov
cltd
add
mov
dec
sbb
push
add
sub
inc
test
xor
push
add
ret
lods
lock
mov
imul
leave
mov
dec
test
psubq
pop
shr
dec
jns
xchg
test
in
pop
xchg
das
mov
idivb
cmpsl
pop
push
mul
mov
call
sub
push
xor
push
push
cmp
popa
push
xchg
cmc
jb
shl
and
xor
mov
mov
xor
ret
lods
inc
xor
jbe
xchg
rclb
mov
imul
in
jle
push
pop
test
dec
test
or
fadds
dec
aam
fwait
add
fbld
or
fs
xchg
xor
push
in
add
xchg
xchg
out
stos
adc
out
mov
fisttps
lahf
ss
loope
incl
cld
mov
std
leave
inc
fiaddl
jmp
inc
jbe
jb
lret
mov
pusha
jae
xchg
mov
push
shrl
push
clc
jge
inc
sub
adc
loop
adc
arpl
sbb
push
sbb
cld
xchg
arpl
and
ss
push
fcmovu
mov
js
in
addr16
sub
aas
addl
pusha
rolb
int
push
leave
mov
lds
in
pop
mov
push
jne
push
jno
lret
dec
pop
pusha
xchg
jo
mov
in
loopne
and
mov
aas
push
push
cmp
dec
mov
xchg
sbb
out
mov
movsl
push
lock
push
jecxz
pop
test
fbld
movsl
sbb
cmpsl
adc
adc
adc
in
cltd
mov
cli
fs
test
cmpl
test
sbb
jno
xchg
adc
cmp
sub
cs
add
out
mov
jb
push
movlps
push
test
and
adc
mov
push
fldenv
or
pop
stos
jmp
aad
loopne
subb
imul
popf
std
ja
flds
outsl
dec
movsb
faddl
cmp
gs
roll
or
dec
fcmovb
js
imul
mov
lds
jge
fs
std
inc
add
jp
pushw
and
mov
stc
out
adc
cmp
xor
in
mov
out
or
es
cmpsl
push
je
xchg
ds
or
leave
cs
jg
mov
int3
dec
dec
xchg
jecxz
jnp
sbb
pop
mov
sbb
or
push
xchg
jbe
cmp
insb
in
ds
jmp
dec
mov
mov
jle
pop
ja
js
dec
and
imul
cwtl
cmp
in
mov
insl
mov
out
or
sub
insb
rolb
into
pop
mov
loopne
aaa
lcall
dec
insl
lcall
mov
mov
adc
xchg
out
rclb
loopne
dec
push
movzwl
fcompl
rol
cs
nop
pop
push
mov
lcall
test
cmp
xchg
iret
adc
add
sar
sub
lods
push
mov
sti
bsr
out
mov
cmpsl
sbb
fiaddl
add
ret
inc
das
xor
inc
cmpl
shlb
add
testl
aam
shrl
divb
or
lock
dec
fisubrl
bound
lods
das
cmp
inc
push
mov
sub
jg
in
mov
xchg
fisubl
sub
icebp
and
or
stos
or
ficoml
mov
mov
fcoml
es
in
xor
aas
leave
repz
mov
or
push
sub
call
cmp
push
xchg
fcoms
mov
daa
push
pop
test
mov
data16
xor
lret
cmp
ljmp
pop
jae
jl
and
xchg
or
ja
push
ficoms
in
pop
push
pop
jg
sub
or
outsl
ja
mov
out
push
mov
lret
repz
xor
out
xchg
mov
les
hlt
jle
out
out
bound
das
rorb
aad
jl
sub
cld
rcrb
and
pop
xor
out
pop
sub
xchg
out
aas
jne
cld
jmp
in
adc
loop,pn
movsb
addl
std
or
sub
aaa
aas
xchg
in
push
in
ds
xor
hlt
and
xchg
cwtl
jg
jp
sbb
and
mov
push
inc
add
out
adcb
inc
sbb
mov
dec
xchg
stc
inc
mov
xor
sbb
or
dec
jecxz
push
jle
repnz
iret
aaa
push
pop
js
outsb
out
lahf
popf
mov
mov
or
jno
add
and
sbb
fcoml
clc
popf
sub
jg
mov
fucomi
mov
cwtl
mov
mov
adc
aam
adc
xor
shll
jmp
cmp
dec
lock
gs
inc
xchg
mov
not
push
or
out
insl
mov
insl
push
insl
cmp
mov
xchg
insl
xor
pushf
adc
nop
sub
iret
cli
and
sbb
xor
and
pop
jp
lret
inc
mov
xchg
sbb
add
pop
xchg
mov
add
sub
ss
ret
inc
push
inc
rorb
mov
adc
jp
jne
ljmp
pop
call
or
sbb
movb
fwait
lods
jmp
es
sbbb
inc
adc
ret
cs
and
pop
jl
inc
or
xchg
mov
lock
ljmp
cmp
lret
test
loopne
or
int3
xlat
adc
ljmp
mov
jl
test
insb
jbe
cmp
xchg
mov
pusha
lea
outsl
call
clc
dec
sbb
xchg
sti
xchg
push
add
aam
mov
push
stos
std
cmp
adc
mov
pop
xchg
add
out
or
mov
push
pop
cmpsl
std
mov
ja
inc
hlt
repnz
pop
inc
ret
daa
sub
dec
test
xchg
lods
arpl
mov
xlat
in
sti
cmp
shrl
call
std
nop
jns
cmp
mov
add
dec
ss
cmp
fistl
push
dec
inc
pop
fadds
into
cltd
xor
pop
cli
lds
addl
adc
aas
shll
into
imul
mov
aad
cmp
xchg
daa
loope
xchg
push
mov
movsb
popa
aaa
sub
xchg
stos
fs
rcll
adc
push
mov
mov
cmp
xchg
xchg
fstpt
push
xchg
rorl
push
jno
subb
pop
pushf
mov
xchg
push
pop
mov
xchg
cltd
push
mov
ficomps
aam
mov
out
pop
xor
xor
sub
ficoms
ss
cmp
fisttpl
pop
lock
xchg
or
packsswb
movsl
rcr
shll
mov
pop
roll
pop
adc
adc
dec
movsb
je
clc
xchg
and
sahf
inc
pop
xchg
sahf
dec
mov
imul
hlt
mov
xor
jno
xor
stc
insb
adc
adc
mov
ret
stc
das
adc
scas
cwtl
push
or
or
inc
in
ret
mov
shlb
aaa
ds
or
jle
ja
dec
int3
pop
push
int
mov
les
xchg
pusha
mov
out
xchg
fsubrs
push
mov
into
xor
hlt
add
popa
repz
bound
cmpsl
sbb
pushf
sub
in
cmp
jecxz
or
or
jb
push
and
insl
pop
cld
jp
ret
das
pop
inc
inc
gs
mov
cwtl
xor
pop
iret
or
xor
dec
xchg
ja
push
outsl
push
mov
icebp
and
and
pop
dec
arpl
mov
cmpl
pop
pusha
mov
stos
sub
call
adc
add
nop
jecxz
xchg
scas
and
jnp
jmp
test
push
outsb
shl
xor
pusha
mov
mov
addr16
pusha
mov
mov
mov
push
inc
out
lret
sarb
pusha
lock
jne
dec
out
inc
fldcw
pop
mov
cmpl
mov
and
cli
cmp
pop
mov
enter
mov
dec
push
mov
lret
add
pop
xor
mov
cmpsl
fwait
add
mov
aaa
and
test
cs
cmp
test
add
divb
shrl
inc
jl
sbb
pusha
mov
fsubr
add
aad
movsw
pop
rclb
call
mov
adc
popa
cmp
sbb
xchg
dec
jno
cs
dec
sbb
mov
mov
data16
out
lods
dec
repnz
aad
fstl
and
pop
jnp
sbb
jbe
pop
imul
push
inc
inc
cltd
sub
sbb
push
je
jle
xchg
js
lds
lods
sub
fdiv
add
jg
pop
pop
push
and
in
pop
xchg
scas
sub
xor
xchg
fistps
mov
iret
cld
inc
testb
out
or
add
mov
fwait
leave
loopne
push
dec
shlb
pop
and
sbb
add
adc
mov
es
sub
fiadds
sub
cmpsb
dec
or
or
movsb
pop
push
xlat
cli
out
and
es
mov
mov
in
mov
orb
insb
pop
pop
sub
pop
ds
inc
or
gs
xchg
push
add
or
in
notl
pop
jle
and
mov
lods
jge
mov
lahf
fcmovnb
adc
jmp
pop
lock
dec
adc
cmpsb
lock
push
xchg
and
jp
xor
pop
or
mov
jae
leave
cs
mov
xchg
and
les
xchg
mov
popf
lret
fcompl
aam
jo
jo
and
stos
js
push
cmp
jl
negb
or
mov
mov
stos
je
inc
iret
adc
dec
insb
xchg
dec
mov
jae
add
ficoml
cmpsb
xlat
pop
rolb
dec
ret
add
andb
out
cmpsb
mov
inc
pop
scas
outsb
add
les
jle
dec
xchg
mov
mov
sbb
shrl
mov
ss
cld
dec
xchg
and
sub
or
popf
outsb
popf
jp
aaa
or
jge
pop
dec
mov
in
fwait
push
pop
xchg
sbb
sub
xor
in
cli
fidivrl
cmp
pop
xor
jae
test
push
sub
fstps
push
das
fld1
xlat
sub
mov
mov
pop
pushf
add
xchg
les
pusha
jbe
or
jge
sub
ljmp
mov
cmpsb
xchg
cmpsl
fs
push
xchg
cmp
and
test
aam
cld
test
jle
inc
xor
mov
int3
rcl
or
mov
out
and
pop
jo
xchg
stc
jmp
into
das
outsb
fwait
pop
pop
sub
add
mov
mov
mov
ljmp
xchg
rcl
push
xchg
adc
ret
pushl
popa
pop
movl
cwtl
sub
and
inc
and
jbe
aad
xchg
js
mov
jo
and
push
mov
daa
xor
fiaddl
mov
add
sbb
rolb
imul
icebp
loope
jle
push
jb
repz
loopne
ja
dec
sbb
fwait
test
ja
pop
add
jmp
add
push
mov
xor
mov
push
dec
and
push
push
sahf
dec
in
imulb
fcmovnb
sbb
sbb
test
mov
out
shrb
xchg
insl
leave
dec
movsl
mov
lods
mov
mov
mov
mov
popf
lret
jmp
ret
addr16
jle
xor
faddl
inc
jmp
movsb
adcl
push
jb
sbb
cmp
xlat
adc
xor
or
jge
cld
hlt
xor
iret
mov
xor
sub
pop
pop
cwtl
nop
jecxz
xchg
jae
daa
push
ret
jbe
xchg
xchg
inc
mov
pusha
adc
inc
mov
sbb
push
ret
pop
mov
loop
popf
mov
rcrb
pop
xor
mov
movsl
int3
icebp
add
mov
out
rcll
std
mov
aad
pop
push
or
inc
pop
repnz
dec
movsl
inc
adc
nop
inc
cmp
arpl
jecxz
arpl
fadds
out
push
sbb
dec
push
mov
enter
pop
mov
gs
xorl
push
and
jo
iret
clc
pop
fldt
pop
xorl
cmp
pop
shll
push
add
test
push
es
cmc
cmpb
fwait
dec
pushf
aam
je
aam
arpl
pop
rolb
sub
notb
icebp
loop
mov
gs
loope
adc
ret
movsb
fcompl
in
stos
jge
fwait
mov
adc
sahf
dec
test
subl
sub
out
mov
jle
mov
cmp
add
adc
xchg
lds
out
lock
movsb
mov
xchg
call
cmp
ss
nop
mov
push
cmp
sti
enter
sbb
jp
adc
clc
dec
dec
mov
mov
outsb
xlat
stos
dec
fisttpll
jg
pop
jmp
sbb
leave
lcall
fnstcw
test
or
cmc
fsubrl
scas
and
mov
roll
fists
js
jl
mov
sbb
and
jo
push
push
cmc
pushf
add
fistpl
divl
or
cs
mov
out
test
imul
xchg
movsl
fcmovu
adc
jnp
xchg
hlt
ljmp
mov
pop
out
js
mov
sub
mov
dec
hlt
sbb
enter
jb
test
or
xchg
mov
popa
sti
comiss
sarl
or
cmpsl
call
mov
les
inc
cmovo
call
les
cmpsb
fwait
mov
xchg
stc
dec
mov
js
add
or
adc
lcall
out
leave
lahf
push
ret
loopne
inc
mov
xchg
dec
into
gs
xchg
fmull
addr16
imul
or
push
movsl
mov
push
fnstsw
in
mov
sti
stos
xchg
adc
out
xchg
xor
shlb
push
mov
scas
in
mov
xor
inc
mov
aaa
mov
icebp
add
cmpsl
ja
les
push
int
and
mov
pop
mov
mov
adc
push
mov
inc
call
test
loop
loop
xchg
push
mov
inc
fs
mov
jp
mov
cltd
mov
mov
test
ret
int3
mov
mov
mov
xchg
hlt
xor
out
lahf
les
bound
mov
ljmp
dec
cmpsl
int3
jae
mov
rcrl
ds
dec
lods
iret
xor
mov
mov
inc
mov
repnz
mov
inc
aad
jge
mov
loop
lods
xor
xchg
cmp
lods
out
xor
xchg
jne
adc
xor
adc
bnd
jg
sbb
jp
jmp
xlat
xchg
loopne
fsubrl
push
loope
or
subl
into
int3
or
jo
bound
idiv
jno
jo
test
push
cli
dec
mov
add
stos
stos
push
xor
push
aam
sub
mov
xchg
or
adc
in
dec
fcoml
jb
ss
ljmp
cmp
push
fsubl
fldl
lahf
xchg
call
sbb
pop
rcrb
cli
adc
push
bound
popa
loope
insl
xchg
daa
dec
sbb
xchg
imul
xchg
adc
addr16
mov
inc
enter
or
lret
imul
stos
cmpsl
nop
and
pop
dec
sbb
adc
ret
test
icebp
lea
mov
sub
mov
xchg
pop
push
add
mov
out
mov
pop
adc
xchg
stos
dec
scas
rorb
jo
inc
cmp
or
popa
pop
cli
cmp
gs
shll
mov
addr16
push
fmuls
xchg
orb
add
test
pop
inc
inc
adc
fucomi
pop
in
inc
cltd
outsl
lods
lret
xlat
imull
or
pop
or
inc
fwait
xchg
in
push
mov
dec
pop
fildll
fistps
sti
loopne
cmc
sbb
jb
imul
push
hlt
lods
push
dec
lcall
adc
cmp
lea
and
or
mov
lahf
pop
push
rclb
jg
pop
nop
pop
dec
andb
das
inc
arpl
add
cmp
xchg
xchg
add
push
add
out
push
gs
lret
xchg
call
mov
mov
jmp
dec
or
lods
adc
fistpll
loop
ds
stos
mov
ljmp
movaps
shll
ljmp
ljmp
cmp
push
push
mov
arpl
rorb
mov
sub
arpl
xchg
push
xor
pop
cmp
cwtl
rolb
out
mov
ljmp
inc
rorl
mov
add
or
mov
rcr
ret
adc
cmpb
cmpsb
ror
test
push
insb
and
adc
and
add
pop
ret
sub
jbe
insl
sets
je
dec
xchg
push
js
rcl
mov
add
mov
test
dec
shll
cmpsl
jg
mov
faddp
fiaddl
xor
add
aaa
std
add
pop
push
scas
fisttpl
fsubrs
jno
xor
adc
jo
hlt
cmp
dec
mov
push
jp
push
mov
movsb
push
add
shrl
movsl
push
loop
mov
pop
cwtl
sbb
fidivs
push
rorl
sub
sub
or
ret
call
mov
outsb
iret
out
xorb
xorl
stos
push
movsl
test
mov
ja
inc
fmull
sub
mov
fwait
or
cmp
pusha
sbb
dec
push
pop
int3
push
cmpsb
lock
gs
xchg
test
pop
push
push
hlt
movsb
loopne
jmp
aad
aad
popa
push
pop
cmp
nop
add
fbld
test
push
inc
punpckhbw
mov
mov
movsb
fwait
popa
in
push
jns
idivb
or
sarl
outsb
jb
mov
inc
inc
jmp
lret
mov
jbe
sub
and
xlat
sub
cmp
jl
push
cmp
sarl
pop
bound
dec
xor
fmull
test
test
pop
cmp
stc
pop
js
stos
jmp
pop
mov
inc
test
rolb
or
adc
push
in
scas
inc
icebp
pop
add
xchg
pop
and
fcoms
and
adcl
push
test
ja
jns
and
addr16
xchg
push
outsb
xor
imul
icebp
mov
adc
cmpsb
fdivrs
push
mov
jp
out
sbb
dec
add
mov
out
adc
pop
loope
mov
pop
xor
fadds
mov
pop
out
inc
lods
pop
sbb
in
jp
or
pop
inc
cmp
xlat
out
ret
inc
mov
lods
mov
sub
jo
adc
xchg
out
int
add
cmp
rorb
lret
xor
and
mov
loop
mov
lds
stos
fstps
jns
fnsave
add
xor
daa
enter
movsb
push
lret
mov
push
int
sub
in
incb
shll
jp
icebp
scas
clc
adc
sbb
jle
enter
pop
fdivrl
test
mov
mov
xlat
punpcklbw
dec
pop
shll
mov
inc
filds
insl
out
jae
rolb
popa
push
xchg
and
arpl
mov
mov
inc
mov
or
dec
repz
fwait
insl
adc
cmpsl
repnz
stos
gs
sbbb
ds
mov
fcmovnb
lock
jns
cmpsl
icebp
lods
dec
adc
cmpsl
cmp
ficomps
sbb
lds
push
mov
inc
push
imul
rcl
xor
push
stos
jp
clc
jb
mov
and
xor
xor
sahf
and
js
fildl
aas
outsl
ss
jmp
ret
pop
mov
loope
mov
mov
sub
push
int
scas
sub
pop
jns
mov
push
popa
sbb
in
js
and
and
out
push
cmpl
adc
inc
hlt
inc
in
jmp
cmp
int
push
xor
adc
pop
es
outsl
int3
pop
mov
dec
faddp
test
cmp
jmp
outsl
and
std
mov
movsl
lods
in
push
inc
ss
les
mov
cmc
test
enter
and
ds
jns
xchg
call
jo
mov
pop
mov
mov
mov
and
stos
mov
xchg
mov
sub
addr16
xchg
mov
inc
inc
inc
cmp
inc
in
push
and
push
lods
and
sarb
mov
in
cmp
cli
fldl
sti
cmp
cmp
jns
mov
pop
mov
pop
movzbl
scas
mov
xchg
jmp
mov
adc
mov
lret
inc
push
into
cmp
push
repnz
ss
pop
loopne
push
sbb
pop
jo
mov
mov
and
push
iret
mov
push
bound
lret
ds
cs
jge
icebp
add
push
fistpll
push
nop
insl
repz
lods
cld
xchg
sbb
pop
or
fnstenv
in
aaa
or
fs
fwait
and
and
test
out
mov
pop
ss
push
jne
push
xor
insb
out
shlb
rclb
icebp
hlt
outsb
mov
cmp
push
push
nop
cld
jbe
pop
inc
xchg
xchg
repz
push
jg
inc
cmp
fldl
xchg
stos
jl
inc
mov
mov
lea
test
nop
repnz
imul
add
mov
xor
cmpsl
leave
dec
pop
sahf
jnp
sbb
mov
jae
imul
pop
test
cli
mov
js
std
mov
bound
mov
stc
aam
adc
mov
ja
movsl
loop
mov
mov
ficoml
lods
add
mov
and
mov
sbb
add
jecxz
pop
add
sub
inc
js
dec
aad
test
push
into
mov
push
cmp
inc
lahf
xchg
pop
jp
push
rclb
jge
jge
add
or
imul
cmp
pop
jb
ret
rol
push
cvtdq2ps
sbb
push
jnp
dec
cmpsl
dec
mov
sarl
xchg
movsb
leave
jns
push
mov
or
xchg
and
dec
pop
lods
jae
popa
mov
pushf
clc
mov
adc
mov
in
xchg
mov
add
mov
xchg
push
lahf
std
push
stos
mov
or
andl
xor
jb
push
mov
cmp
mov
or
sub
mov
das
lcall
aad
loope
shr
aas
stc
stos
mov
adc
mov
cmp
bound
out
rcrb
or
push
or
lahf
das
ja
bound
inc
test
pop
mov
cmp
mov
in
mov
rep
mov
sub
pop
loope
pop
repz
cmpsb
mov
fsubs
sbb
es
sbb
out
in
stos
pop
ss
ljmp
mov
jnp
add
jb
or
in
inc
mov
sarl
or
enter
pop
loop
std
inc
mov
ficoml
in
test
adc
xchg
mov
shl
scas
mov
movsb
mov
sub
push
push
push
rcrl
cmp
or
sbb
in
pop
mov
outsb
test
mov
xor
loop
call
scas
cmpb
add
mov
mov
push
cmp
lcall
mov
sub
clc
pusha
shlb
in
clc
cmp
xor
jg
pop
inc
and
dec
or
xor
aad
xchg
movsb
orb
mov
test
in
dec
mov
fdivrs
insl
adc
fcoml
test
pop
stc
aam
fisubrs
in
inc
inc
sbb
stos
arpl
xlat
daa
fsubrp
sarb
cmpsl
loopne
jmp
add
add
sub
mov
inc
cltd
push
jnp
adc
icebp
sahf
cmp
stos
mov
sahf
lret
add
ja
jecxz
xchg
or
stos
and
ss
push
cmc
push
aas
jae
mov
iret
repz
dec
fucomp
mov
jnp
sub
and
insb
jb
cs
sub
mov
mov
push
lret
or
xor
sbb
nop
xor
jbe
fstpl
lods
inc
pop
xchg
inc
lods
push
jne
sbb
flds
jb
push
jmp
xchg
adc
inc
jno
call
daa
ja
sub
mov
popf
cmp
std
sarl
popa
mov
add
mov
pop
mov
mov
jnp
push
mov
sbb
ds
shlb
xor
outsl
xor
inc
lds
dec
daa
pop
pushf
cmpsl
arpl
shlb
or
mov
hlt
lret
sub
dec
subl
out
test
xchg
lods
call
popl
pop
cmpsl
xor
inc
xor
data16
push
das
xchg
fidivl
jb
out
decl
test
mov
and
adc
daa
mov
lcall
xor
inc
das
and
aas
shr
lds
call
out
es
mov
inc
fidivl
outsb
sti
je
ja
mov
or
mov
js
jns
lret
ret
cltd
and
in
popf
mov
mov
int
push
add
lods
lcall
sahf
nop
test
lcall
xchg
imul
push
jle
lods
orl
xor
cmp
bound
jecxz
jle
adc
sbb
sarb
in
lock
cmp
lock
fsubs
inc
xchg
arpl
xor
pop
sub
inc
stos
lret
je
jo
push
stos
sub
xchg
adc
sub
scas
int
test
pop
loop
dec
in
sub
xor
xchg
out
scas
fimuls
jmp
das
mov
sarl
or
enter
shll
mov
jbe
jg
and
xchg
xor
dec
jns
push
xchg
mov
xchg
push
clc
dec
ja
xor
arpl
dec
test
mov
cmp
mov
mov
lret
repz
mov
add
flds
xchg
js
inc
dec
inc
pop
xor
xchg
aam
pop
sbb
mov
lret
loopne
jne
dec
and
pop
mov
push
dec
mov
mov
mov
jle
adc
jle
scas
repz
fwait
adc
inc
popf
call
inc
inc
pop
mov
xchg
cmp
xchg
lcall
sub
inc
popf
es
mov
cmpsl
inc
or
enter
mov
adc
ret
test
xor
xchg
cmp
into
and
outsb
jae
out
adc
in
pop
nop
sarb
pop
aad
lods
and
adc
mov
das
cld
les
nop
dec
aam
sub
clc
push
sbbl
cmp
cmp
sub
aas
movsl
sub
pop
dec
fimull
clc
mov
div
ficompl
mov
xchg
jl
mov
jmp
insb
nop
call
movaps
mov
loop
jns
or
inc
ret
loopne
jne
lret
cltd
adc
in
int3
add
xlat
inc
hlt
ficomps
lret
lret
ljmp
push
or
adcl
stos
aaa
pop
push
cmp
and
add
pop
hlt
imul
ds
cld
mov
cmc
add
xor
dec
adc
jle
ret
jno
xchg
sahf
pop
mov
pop
xsavec
dec
mov
mov
add
sbbl
jge
pop
xchg
jne
xor
lock
jns
js
adc
nop
inc
cwtl
mov
or
xor
jmp
mov
cmp
pop
mov
data16
and
std
mov
xchg
xlat
add
clc
mov
arpl
gs
shlb
sarb
popa
pop
addl
aas
mov
jp
dec
jg
and
add
mov
hlt
test
mov
dec
jmp
pop
jne
inc
aam
repz
cmp
leave
mov
mov
sub
sub
pop
jge
xor
xor
in
lret
and
enter
in
dec
sbb
stos
jle
push
sbb
shll
inc
out
sub
idivb
pop
pop
into
xor
aaa
mov
xchg
test
xor
shll
lock
jae
push
mov
stc
pop
cs
push
sub
leave
pop
add
mull
shrb
xor
in
pop
out
cmc
iret
inc
mov
test
pop
fwait
sarl
inc
mov
cmc
andl
xor
cmpsl
sbb
imul
push
adc
cli
call
sbb
out
pop
push
jae
xor
xchg
push
mov
xchg
or
arpl
pop
shrb
movsl
movsl
pop
sarl
scas
mov
sub
in
adc
inc
add
mov
lds
in
out
addl
pop
cmp
dec
das
mov
or
xor
aam
mov
jo
aam
cld
inc
push
push
imul
jne
push
rcl
mov
xchg
jo
mov
mov
popa
movsl
bound
movsb
mov
scas
inc
decb
cmc
xor
cmc
sbb
icebp
sbb
ljmp
icebp
mov
jns
mov
out
push
test
mov
sub
jno
aad
lret
adc
mov
stc
mov
add
mov
pop
addr16
pushf
mov
sub
cmp
outsb
loope
push
adc
sahf
cld
sub
inc
lret
pop
les
adc
pusha
pop
adc
daa
dec
fdivp
stc
insb
jle
add
out
bound
gs
into
cli
repnz
sbb
jl
mov
cmpb
out
and
repz
or
sub
dec
and
add
test
xchg
mov
movsb
xor
out
jmp
jle
out
inc
sbb
cmp
mov
and
pop
rcl
add
je
ret
mov
je
cmpsb
jo
mov
insl
shlb
xor
insb
loop
xorb
xor
pushf
or
lods
dec
mov
rorb
in
mov
mov
cs
push
imul
mull
ret
sbb
mov
inc
shl
loopne
popa
sub
out
mov
pop
popa
enter
aaa
push
clc
inc
mov
jno
dec
stc
imul
ss
inc
push
cmp
push
dec
ret
mov
and
test
pop
and
jne
or
insb
ds
lds
mov
dec
and
jmp
mov
fdivrl
or
repnz
push
mov
ds
leave
mov
testb
shll
in
jg
xchg
sub
pop
cmp
jne
stc
imul
push
push
xor
cmpsb
mov
cmp
cli
es
mov
call
pop
push
cmp
popa
hlt
cmpsb
xor
rclb
add
jbe
xchg
sbb
rcrb
aad
ljmp
or
andb
dec
sub
push
lods
jbe
imul
pop
jb
loope
mov
in
lods
icebp
pop
jno
insl
pop
cs
pop
xor
fiadds
int3
icebp
insl
pop
std
ja
insl
fnsave
sbb
or
icebp
xchg
outsb
in
push
ja
cmc
inc
pop
mov
sbb
cli
imul
dec
dec
mov
push
lock
mov
xor
jne
dec
sbb
fidivrl
sub
add
mov
cmp
push
int
imul
and
jp
aaa
fs
ljmp
fstpl
cwtl
sbb
sub
divl
orps
xor
sub
and
lods
xor
lret
int3
jae
or
inc
les
jg
jae
push
jp
mov
xchg
mov
mov
vgf2p8mulb
arpl
out
js
lret
jmp
xchg
test
xchg
mov
int3
add
aad
push
call
mov
and
or
or
jb
add
lcall
and
inc
cmp
mov
jne
push
scas
cmp
sahf
jbe
and
push
push
sub
int
ds
mov
clc
pop
xorl
test
and
sub
sbb
out
mov
and
fwait
dec
scas
test
cmp
push
mov
lods
adc
es
xor
test
ljmp
insl
cli
incl
mov
push
aad
add
das
push
mov
adc
cmpsl
clc
lret
divb
insl
mov
in
dec
sub
xor
jp
fcoms
leave
mov
shll
mov
mov
mov
data16
sbb
sbb
inc
lcall
and
and
fwait
xchg
pop
js
shll
mov
ror
outsl
jne
push
push
push
imul
mov
mov
je
add
mov
mov
lock
clc
jns
mov
orb
je
outsb
stc
push
cmp
mov
jne
inc
cs
cwtl
lods
fildll
and
xor
and
inc
sub
mov
les
xchg
mov
scas
sub
push
mov
fwait
inc
icebp
push
jl
sbb
aam
pop
nop
loopne
inc
mov
mov
cwtl
in
mov
bswap
jo
rcl
in
pop
pop
xchg
cmp
xlat
add
sub
icebp
mov
data16
mov
sub
or
fistps
mov
add
dec
scas
or
or
sbb
xchg
jae
in
leave
mov
xor
jo
das
cmpsl
cmp
ret
fwait
sti
fdivrl
jg
ds
call
cmc
or
notb
jmp
cmp
in
mov
jo
clc
aaa
in
rclb
sbb
adc
add
mov
adc
or
fcmovb
pop
outsb
call
test
cmp
in
adc
push
lret
leave
shll
sub
jb
sti
rclb
cmpsb
pusha
icebp
jl
pop
or
and
mov
ret
rorb
les
push
mov
mov
imul
xchg
cli
cltd
jno
sbb
mov
xchg
mov
test
dec
lret
call
lahf
add
flds
mov
or
fdivs
aam
andl
fs
add
mov
aam
lcall
xor
inc
sbb
daa
cmc
lret
cwtl
dec
adc
adc
sbbl
je
adc
push
movsb
aad
ret
icebp
inc
push
lods
scas
ret
mov
mov
subb
cmp
cld
icebp
test
lahf
stos
loope
cld
add
fisubs
fs
and
xor
adc
xor
adc
out
and
xor
mov
lock
adc
es
ret
add
adc
test
inc
scas
popa
or
enter
adc
push
dec
jne
icebp
repnz
or
bound
cmp
push
push
adc
ds
jecxz
movsb
repnz
mov
ficoms
add
xchg
lret
jmp
push
addr16
xchg
in
push
rcl
out
jns
dec
sbb
dec
mov
out
test
lods
cmp
adc
insb
dec
mov
or
pop
lcall
or
imul
leave
adc
or
xor
lahf
lcall
push
add
adc
or
push
mov
inc
call
mov
mov
push
in
push
push
repnz
rorl
or
add
test
pinsrw
add
imul
sbb
push
xor
push
mov
call
leave
lea
ficoms
push
sub
fildl
les
sub
subl
dec
cmpsl
mov
rorl
xor
sub
push
insl
dec
aaa
xchg
cwtl
js
adc
xchg
fistpl
xor
cmpsl
mov
insb
cmc
cmp
cmp
mov
pop
std
cmp
mov
cmp
mov
rcr
xorb
mov
fiadds
cmc
or
int
repz
mov
pop
sahf
jp
adc
fwait
push
dec
push
cmp
test
pop
lcall
cld
repnz
rcrb
sbb
jecxz
push
sub
add
lods
mov
jmp
dec
push
push
sub
inc
inc
xchg
sbb
lcall
cmpsb
hlt
or
sbb
es
or
xchg
cmp
sub
xor
xchg
aam
cwtl
adc
mov
inc
mov
mov
xchg
ficompl
pop
or
sub
dec
fimuls
jge
inc
popa
loop
xchg
rorb
xor
sbb
cmp
mov
inc
out
cmpsl
push
cs
in
mov
je
jge
pop
xchg
mov
cmp
jae
imul
ja
add
xor
xchg
mov
or
or
es
sub
in
push
aad
rclb
xchg
jo
loope
sbb
push
jecxz
test
or
jbe
hlt
inc
cmp
jae
sub
mov
in
sub
add
imul
lds
pop
cmc
xchg
lock
push
xchg
imul
daa
lock
jne
cmp
mov
dec
inc
adc
add
cltd
icebp
imull
pop
jnp
dec
jecxz
scas
iret
mov
out
jno
push
ffreep
mov
adc
jne
and
ljmp
jl
mov
das
repnz
mov
xorl
inc
fmuls
cmp
stos
inc
cld
les
outsl
mov
jns
xchg
popa
cmp
pop
or
push
divl
inc
add
xchg
add
dec
push
shll
movsb
ljmp
stos
push
xor
ljmp
std
sub
jle
mov
mov
cmpsb
jnp
lahf
rcl
test
xlat
jg
and
mov
cli
popa
in
stc
or
into
pusha
fisubrs
fiadds
jae
jb
jmp
test
adc
add
push
imul
mov
hlt
test
push
pop
lods
dec
loop
lcall
push
add
inc
adc
in
out
xor
cmp
popa
fnstcw
cli
fs
pushf
in
push
in
stos
cs
add
test
std
ret
nop
mov
repz
xor
outsb
jg
arpl
stos
imul
dec
xchg
test
les
iret
subl
imul
sbb
out
out
add
mov
lods
into
adc
out
es
in
push
pop
fdivs
adc
dec
cmc
inc
sbb
sbb
jmp
test
cltd
dec
popa
jmp
popf
jbe
add
lret
sbb
mov
lahf
imul
fstpl
hlt
xor
mov
push
das
jecxz
xchg
jb
arpl
movb
gs
enterw
adc
movsl
sahf
fsubrs
movsb
inc
dec
fcoms
pop
outsl
adc
enter
jecxz
sbb
cltd
mov
xor
nop
and
popf
outsl
xor
roll
ficoms
sbb
ds
and
test
sub
sahf
repnz
stos
or
push
mov
mov
loopne
pusha
fcmovne
mov
jg
mov
adc
cld
sarb
shlb
xchg
sub
out
add
jp
outsl
cmp
xor
pop
jo
scas
ucomiss
cltd
mov
adc
sarb
mov
cmp
mov
lret
out
lret
push
mov
scas
stos
gs
xor
or
cmpsb
jae
mov
pop
imul
mov
dec
stc
stos
add
scas
inc
pop
out
mov
sahf
cmp
inc
popa
das
lret
loope
xchg
cmc
imul
lods
shl
enter
jae
inc
in
and
push
addr16
out
jge
cld
negl
adc
aas
je
lcall
push
clc
jae
dec
inc
mov
adc
push
mov
pop
sbb
inc
pop
std
cld
movsl
or
xor
xor
add
push
js
xchg
dec
into
ret
cmc
lea
xorps
in
mov
in
clc
aad
and
js
andl
cltd
insl
push
sbb
fistpll
cmp
jle
clc
mov
inc
xor
ret
add
mov
loopne
jbe
fisttpll
adc
mov
mov
arpl
lret
outsl
mov
inc
xor
cmp
pop
fcomp
es
inc
insl
test
xchg
push
push
xchg
sbb
rcr
divb
daa
dec
std
lea
and
mov
adc
mov
jmp
mov
and
jmp
out
jae
testl
mov
adc
pushf
pop
test
lret
ss
jnp
add
cmp
mov
push
cmp
insl
jge
dec
cld
movsb
lea
add
push
push
cmp
lea
dec
idivb
mov
imul
pop
and
xor
xchg
xchg
sti
sub
lock
xor
sub
adc
push
mov
xchg
inc
mov
stos
out
inc
cmpsl
shl
jnp
dec
andl
pop
stos
std
into
cld
sub
sbb
lods
pusha
cmp
jb
xchg
pusha
xchg
ficoms
push
dec
mov
dec
jmp
js
adc
test
dec
out
aad
imul
int3
enter
sarb
mov
push
inc
inc
sbbl
inc
hlt
add
xchg
fmul
aam
lret
inc
loope
loopne
std
xor
shlb
or
fimuls
push
ret
pop
xchg
mov
fnstcw
inc
mov
pop
repz
or
les
pop
mov
ljmp
es
mov
dec
shrb
sub
jg
add
mov
fwait
xorb
outsb
pushf
pop
mov
sub
jecxz
hlt
nop
test
adc
fadds
adc
ljmp
or
loopne
enter
inc
jl
pusha
imul
and
and
xchg
mov
shlb
in
mov
lea
call
nop
jbe,pn
int3
push
cmp
test
mov
push
gs
loop
test
push
scas
cmp
outsl
dec
jne
adcb
sti
mov
aad
and
insb
sbb
cmp
xchg
rol
jbe
jge
jno
cmp
add
in
out
mov
push
inc
loop
mov
xor
mov
dec
sbb
dec
mov
and
inc
sbb
mov
ror
jle
ja
pop
adc
fwait
enter
sub
sbb
movl
dec
lcall
dec
inc
in
inc
pop
add
ja
jecxz
sahf
cwtl
adc
fldcw
loopne
adc
in
stos
fstpt
jp
add
js
xchg
xor
pop
or
dec
mov
into
mov
jle
enter
roll
and
ret
loop
ret
lods
ljmp
add
call
ret
xchg
ja
fcomps
mov
sti
daa
rorb
jl
mov
insl
dec
inc
enter
iret
inc
outsb
mov
enter
xchg
inc
loop
or
xchg
aas
mov
pop
lret
sub
adc
jnp
ljmp
cld
push
mov
fsts
mov
jge
sub
out
fists
das
and
ss
mov
push
adc
xchg
push
dec
mov
push
fcoms
cs
out
xchg
add
imul
mov
jo
mov
lret
cmp
in
in
int
sub
shlb
int
in
stc
mov
adc
fisttpll
fsubl
cmp
repnz
sbb
mov
je
sub
add
push
pop
or
negl
or
jns
cli
sti
mov
popa
scas
das
je
jecxz
mov
xor
jo
pop
lods
arpl
xchg
pop
cs
cs
adc
cld
andb
inc
xchg
sahf
sub
xor
stc
addr16
push
or
adc
dec
cltd
mov
popf
das
sub
mov
movsl
gs
lods
ret
in
and
or
cmpsl
mov
sub
hlt
xlat
inc
outsb
lret
cmc
pop
scas
mov
mov
xchg
push
shrl
ljmp
or
sub
lods
in
inc
outsb
stos
xor
stos
sbb
stos
sbb
adc
or
out
aad
rcrl
pop
insb
mov
movsl
fisttpl
pusha
and
adc
mov
pop
lcall
push
clc
out
dec
xchg
fmuls
ret
mov
into
push
push
dec
fdivs
fwait
insl
jmp
call
addl
ret
jp
pop
es
aaa
adc
dec
add
lret
push
and
pop
divl
cmp
int3
xchg
jecxz
jbe
sbbl
mov
xchg
out
mov
repz
xchg
fcoml
add
dec
stos
inc
jnp
xor
xor
outsb
xor
xchg
cmp
mov
lcall
inc
fstl
xchg
bound
cli
dec
mov
and
pop
xor
movsl
sub
xor
clc
or
xchg
sbb
int
sti
ffree
in
push
sbb
sub
sub
jne
and
mov
loop
adc
inc
data16
jo
pop
lcall
mov
xchg
in
ljmp
lods
sbb
mov
aam
xor
std
das
dec
es
aam
stos
add
inc
pushf
mov
push
add
mov
cmp
push
repnz
stc
fmull
add
mov
adc
scas
xchg
push
aaa
stos
repz
jnp
divl
or
addl
sbb
add
sub
cmp
xchg
add
aam
stos
jo
andb
sbb
or
add
mov
addr16
repnz
and
and
lea
mov
inc
mov
push
lea
sti
sbb
and
repnz
jecxz
xor
fbld
movsl
outsl
mov
data16
into
push
inc
cltd
rcrl
shll
pop
xchg
inc
js
mov
pop
mov
leave
ret
js
outsb
adc
std
lret
movsl
push
pop
out
jnp
xchg
mov
pop
cwtl
fs
mul
dec
out
std
lret
inc
mov
lock
fstl
mov
mov
test
cmp
lods
scas
das
sub
cld
push
jge
mov
pop
call
lods
cwtl
stos
mov
sar
out
aas
mov
mov
cmc
mov
and
ss
push
pop
sbb
push
xchg
test
enter
inc
mov
jb
jmp
lret
push
pop
in
rcrb
push
insl
adc
inc
in
lods
or
xchg
sbb
cmp
gs
push
rorb
imul
sbb
sub
cmc
add
adc
mov
imul
cli
xor
pop
outsb
lahf
jecxz
scas
test
pop
ret
mov
and
xchg
add
pop
or
xchg
psrlw
imul
repnz
pop
add
data16
fisttps
or
or
sub
push
subl
in
ret
iret
jl
call
add
fstl
mov
repz
dec
stos
pop
mov
add
xchg
push
mov
call
bound
dec
ljmp
xor
xchg
mov
roll
or
dec
lds
pop
fnsave
and
leave
lahf
jbe
rcrl
test
les
es
push
mov
add
aam
fcmovne
mov
ret
leave
cmpsl
push
add
roll
ret
adc
popl
mov
sbb
arpl
or
cs
mov
mov
sbbl
insb
pavgb
xlat
jl
jns
push
movl
jbe
out
push
pusha
repnz
aam
aas
inc
faddl
daa
scas
pushf
add
xchg
pushf
ret
sbb
push
jp
das
iret
adc
idivb
push
popf
test
lcall
imul
mov
out
out
outsb
dec
mov
ja
xchg
and
xchg
sbb
in
push
adc
sahf
xchg
xchg
cmpsb
jb
sub
mov
mov
push
fpatan
sub
add
adc
xor
lock
call
inc
push
enter
aam
add
xchg
jp
icebp
les
pop
imul
fimuls
push
in
je
test
test
push
aas
cmp
outsl
and
mov
lret
dec
dec
std
ret
scas
cmp
jne
gs
mov
add
xlat
lods
or
sub
jge
lea
lret
or
fsubs
adc
inc
int3
xor
xor
inc
adc
frstor
sbb
sub
enter
iret
push
test
in
sub
daa
orb
adc
sbb
sbb
adc
loope
sti
mov
das
fcmovbe
cli
mov
mov
fcomps
out
sbb
dec
adc
inc
std
mov
jb
js
adc
mov
push
out
cmp
lods
sub
add
or
mov
fsqrt
popf
and
mov
cmp
xor
xchg
lret
inc
sbb
sbb
roll
pusha
in
movsl
jne
mov
push
pop
jle
shll
iret
data16
push
sbb
lahf
sub
push
mov
int3
xor
sub
pushf
ss
outsl
lods
xchg
adc
pop
cmp
xor
nop
pop
add
mov
test
int3
mov
xor
mov
and
mov
ja
addr16
cs
cmpl
test
es
es
idiv
lds
adc
out
cmc
dec
add
push
jns
loop
out
push
dec
enter
leave
adc
mov
std
in
fisubrl
or
shlb
push
div
and
or
stos
stos
enter
mov
inc
cmp
insb
shrb
add
dec
andl
popf
jecxz
out
ret
in
sarb
imul
xchg
xchg
idivb
pop
inc
cld
mov
pusha
out
mov
test
push
dec
or
inc
add
lds
cli
imull
cmpsb
xor
xor
lahf
notl
jge
cli
lret
cmp
icebp
rol
aad
mov
imulb
int3
pop
test
mov
add
call
cli
and
and
les
test
cmp
mov
std
xchg
lods
icebp
or
and
test
outsl
pop
mov
cmp
pop
inc
sub
xchg
push
adc
addr16
push
fnstcw
cmp
cmpb
xor
hlt
std
inc
out
mov
insb
gs
xor
movl
mov
pop
push
icebp
cmpl
or
out
mov
mov
cmp
int
insl
adc
xor
mov
stc
or
mov
mov
xor
leave
iret
outsl
fdivl
push
mov
lods
in
cli
les
fldl
pop
out
and
leave
popf
out
cli
or
jne
aaa
adc
lock
add
in
and
xchg
inc
jae
sub
cmp
xor
mov
sbb
cltd
adc
in
scas
roll
or
in
rcrl
xor
aam
fistpll
or
lods
sub
jp
mov
test
xor
mov
cmp
aaa
lods
leave
push
pop
gs
aad
cmp
out
mov
fimull
mov
inc
nop
je
mov
cli
cmp
jp
loope
ljmp
imul
imul
shl
xchg
pop
and
lahf
add
mov
pushf
int3
cmp
push
adc
popf
mov
out
sbb
mov
dec
movsb
xor
cmpsl
push
js
hlt
dec
pop
xor
and
push
sub
int3
sbb
call
pushl
test
outsl
push
popl
sahf
enter
mov
or
or
adc
ljmp
mov
fdivrl
jae
adc
mov
arpl
fyl2xp1
ds
push
adc
jne
enter
bound
rorl
je
and
movsb
test
mov
mov
jns
inc
ss
inc
mov
xor
lcall
pop
call
pop
add
rclb
and
pop
inc
adc
or
xor
repnz
ret
loopne
outsb
cmc
sarl
jb
popa
addr16
adc
jg
in
ror
mov
lcall
jp
push
jp
and
xorl
shlb
and
enter
ljmp
incb
sbb
sbb
and
jmp
xlat
xlat
mov
mov
xchg
test
cmp
rcrb
mov
push
pop
sahf
call
pop
mulb
inc
sub
pop
ja
out
jnp
jg
lahf
mov
bound
push
inc
out
sbb
cld
mov
push
mov
inc
sbb
pop
in
mov
add
jne
nop
mov
xlat
lock
cmp
jecxz
aam
mov
push
sarl
popf
int3
out
cmp
fmuls
cmpsl
sub
or
add
mov
dec
mov
add
sub
cmp
cmc
and
fisubs
aas
push
pusha
push
sub
mov
mov
cmc
fisttpll
lret
pop
xor
mov
into
jnp
clc
popa
lret
rorl
add
mov
add
fsubr
stos
mov
lock
mov
out
inc
pusha
mov
mov
stos
into
adc
fs
sbb
mulb
mov
fisttpl
mov
xchg
sbb
rcll
aam
loop
inc
mov
cmpsb
lcall
lock
xchg
ss
pop
fwait
jb
cmpsl
loopne
lcall
xorl
adc
add
mov
adc
daa
dec
hlt
xchg
xor
add
loop
test
test
add
xchg
or
sbb
sub
cmp
gs
ret
repz
dec
aam
adcl
xchg
dec
arpl
test
xchg
mov
shl
into
pop
jle
loop
or
out
cmp
push
pusha
frstor
mov
test
loope
test
imul
pop
jno
ss
movsb
mov
sbb
adc
inc
arpl
stos
jmp
outsl
std
pop
add
test
sub
fisubrs
add
lea
fdivl
pushf
inc
int
andl
pop
cs
mov
mov
roll
movsl
jnp
ret
std
rcrb
stos
push
outsl
pusha
cs
lahf
call
add
mov
adc
xor
dec
pop
and
jge
arpl
sahf
jo
faddl
fwait
out
popf
loop
jo
jg
push
jnp
cmp
xor
fisttpll
lds
subb
test
pop
inc
mov
dec
je
mov
sub
xlat
cmc
popa
mul
sub
mov
xchg
ror
pop
imul
dec
shlb
mov
lret
lods
aad
std
adc
mov
inc
xlat
sbbb
xchg
pop
loop
push
mov
hlt
xlat
jnp
sub
test
pop
mov
or
lds
push
pushf
mov
xor
cmp
outsb
push
dec
test
sub
push
add
sub
mov
add
pop
das
ficomps
loopne
xchg
test
int3
lods
aam
insl
xchg
out
lods
les
mov
mov
std
jae
gs
scas
push
cmp
movsl
jne
jmp
jge
jecxz
lahf
das
arpl
mov
icebp
add
cmp
pop
je
sahf
stc
cmpsl
jecxz
into
popf
xor
jl
adc
dec
in
cmpsb
inc
sbbb
repnz
mov
jp
or
data16
mov
mov
test
push
sbb
sub
mov
mov
lret
or
or
mov
das
dec
call
jecxz
mov
sub
or
or
xchg
xchg
mov
sub
fsubp
sahf
xchg
and
inc
leave
xchg
ljmp
jnp
cmc
in
sub
jns
mov
dec
cmp
or
rolb
call
sbb
shlb
push
test
push
xchg
pusha
psraw
adc
sti
test
std
enter
ja
pop
sbb
loop
outsl
mov
sahf
testb
jo
inc
outsw
cmp
test
pop
push
mov
add
mov
or
mov
push
adc
testl
mov
cmp
pop
add
inc
dec
sub
rclb
and
cmc
sub
mov
imul
fsub
fimuls
sub
jmp
sbb
add
test
sahf
fists
or
xlat
add
push
mov
shrl
push
push
cs
sbb
lds
mov
push
adc
mov
push
mov
xor
mov
mov
scas
sub
imul
xlat
shlb
bnd
jge
movsb
insb
sub
icebp
cmpsl
ds
cs
movsb
movsl
aaa
push
pop
mov
dec
pop
xor
inc
test
cwtl
mov
jp
rolb
mov
jp
daa
out
aam
ret
jl
divl
pop
arpl
lahf
pop
sti
fisttpl
xchg
sti
pop
icebp
aaa
jg
jp
int
jae
xchg
push
ljmp
sarl
shl
mov
es
sub
test
ficoms
mov
sub
mov
cwtl
je
mov
mov
and
mov
push
test
push
nop
mov
mov
and
xchg
push
inc
dec
push
xor
inc
out
adc
pop
test
add
mov
out
push
je
test
xlat
ret
ficoms
xor
popa
mov
lcall
lea
mov
outsl
or
xor
clc
ss
pop
pop
mov
fwait
sub
cwtl
lock
lods
lahf
lods
mov
mov
sub
adc
loopne
sub
adc
xor
movsl
ja
push
call
std
xor
mov
and
inc
and
cmpsl
mov
pop
jno
add
nop
rolb
bound
push
mov
add
mov
loope
mov
outsl
mov
test
push
add
cmpsl
icebp
sbb
mov
mov
add
or
inc
add
lea
dec
push
add
jbe
mov
lock
mov
or
dec
and
mov
pusha
jg
je
lods
or
js
dec
arpl
push
xor
repz
xchg
xchg
cltd
bound
add
xorb
call
add
pop
and
js
pusha
data16
hlt
push
xchg
sbb
add
sub
repnz
jmp
cmp
scas
cmp
ficoms
cmpsl
inc
ljmp
mov
fimull
mov
aam
dec
insl
cltd
mov
pop
dec
hlt
pusha
pop
xchg
mov
inc
cli
and
xchg
ret
jge
and
fisubs
cmp
xchg
jno
and
test
outsb
mov
test
andb
mov
cmp
push
add
pop
clc
jl
cmp
and
sub
shll
pop
lods
lret
mov
int3
sub
bound
or
insl
xchg
sbb
clc
into
xor
push
fwait
mov
adc
push
adc
cmpsl
outsl
movsl
mov
xchg
movsb
inc
bound
mov
das
icebp
jmp
and
jbe
mov
sbb
cmp
jns
mov
mov
sbb
xchg
push
cmpsb
addb
sbb
inc
popa
jns
and
loopw,pn
dec
push
ret
cmp
dec
or
cmp
mov
xchg
jge
and
cmp
fs
daa
daa
sub
jmp
orb
gs
lea
mov
icebp
jle
popf
inc
fistpl
test
add
mov
hlt
pop
cmp
inc
clc
cmp
sub
jne
sti
aam
das
add
rolb
mov
or
cli
fldl
cmp
sbb
or
call
pop
fwait
cmp
fdivrs
inc
enter
sahf
pop
cmp
jbe
mov
push
pop
jnp
mov
and
movsb
rcll
sub
jnp
movsl
adc
fdiv
add
hlt
fdivl
xor
jl
imul
in
xor
ss
jno
jno
cmc
arpl
into
test
push
fdivs
enter
popf
pop
pop
sub
mov
mov
mov
and
pushf
cmc
cltd
int
cmp
inc
pop
add
cmc
adc
cmp
int
addr16
or
mov
call
data16
scas
fwait
rcll
push
xor
icebp
xchg
jae
in
sbb
mov
dec
sbb
jae
lods
gs
bound
idiv
pop
cli
sub
ret
mov
mov
mov
xor
xlat
shlb
rorb
movsl
shlb
inc
popa
sbb
fbld
xchg
and
adc
push
xchg
inc
inc
rolb
ficompl
test
mov
test
dec
sbb
push
pushf
stc
mov
push
addr16
outsl
lods
iret
inc
cmp
popf
decl
es
inc
mov
movsb
adc
sbb
mov
cmpsb
cmpsb
lret
jmp
shrb
loopne
jae
push
aas
sbb
arpl
mov
in
ud2
mov
push
ds
jbe
cmp
dec
inc
jmp
sahf
inc
test
loop
cmpsb
inc
dec
test
sbb
sbb
sti
jmp
dec
shrb
in
jae
jno
stos
add
cmpsl
stc
sti
sbb
jge
mov
mov
lock
orl
cmpsl
cmp
loop
pop
jo
push
fimuls
pop
push
mov
out
pop
inc
lea
enter
inc
insb
adcb
add
add
out
sub
lock
cmpsb
xchg
fcmovnbe
mov
push
pop
sub
adc
adc
mov
insl
insl
inc
lds
jecxz
je
bound
sahf
lods
sahf
scas
adc
pusha
xchg
push
js
dec
cmp
aaa
inc
subb
inc
iret
dec
rcl
cmc
sub
sti
stos
dec
push
jb
repnz
mov
pop
in
cmp
xchg
xchg
iret
mov
int3
pusha
adc
scas
or
fs
cmc
sub
mov
movsb
iret
pop
mov
dec
mov
pop
adc
mulb
rolb
sbb
fs
es
call
ret
jg
cli
stos
popf
inc
adc
fstl
fidivrs
pop
push
pop
adc
aaa
pop
mov
pop
add
mov
inc
sbb
inc
test
daa
dec
gs
loope
adc
pop
popa
testl
lods
sar
inc
and
loopne
push
bound
stos
test
pushf
ret
fbld
out
jnp
xchg
lahf
loopne
add
jne
add
sub
in
popa
jae
scas
ljmp
jp
ljmp
mov
aam
cmp
ret
mov
dec
push
mov
out
fwait
mov
mov
cmp
push
xlat
popa
daa
sbb
adc
imul
dec
pop
subl
inc
dec
jae
subl
cld
test
push
cs
push
popf
mov
xor
sub
test
sub
sbbb
mov
clc
out
outsb
cld
mov
cltd
lods
mov
mov
sar
sbb
outsl
mov
outsl
cmpsl
sub
add
ja
cmpsb
lods
lret
or
cmp
mov
jecxz
lret
aaa
dec
mov
ja
lds
fs
add
es
bound
inc
fmuls
insb
jecxz
jmp
fadds
xor
sub
pop
pop
xchg
adc
mov
push
ret
fisttps
popa
xchg
mov
orb
jno
pop
mov
sbb
out
fcoms
cmc
jb
jnp
in
push
cltd
mov
into
repnz
in
addr16
repz
mov
std
lds
mov
mov
iret
inc
jmp
inc
or
add
dec
lcall
icebp
rolb
rolb
es
rep
mov
cmp
loope
data16
pop
push
push
jo
iret
outsl
test
lds
sub
mov
add
loop
out
fiadds
sbb
jbe
hlt
lcall
jb
jl
in
lods
dec
mov
cmpsb
in
push
int3
lds
out
imul
inc
lcall
sub
mov
adc
inc
inc
pop
jbe
fdivr
sub
add
cwtl
fcomi
out
pop
ja
jbe
xor
popf
fwait
imull
scas
les
pop
iret
movsb
jbe
jle
outsl
push
inc
imul
mov
aaa
pop
sbb
dec
inc
jmp
jns
stos
pusha
cmp
fldl
outsb
cmpsl
jge
mov
or
pop
or
mov
adc
sub
addr16
std
mov
aam
dec
pop
xchg
sbb
jecxz
push
in
xor
xchg
fnstenv
dec
xor
cwtl
loop
pushf
loope
mov
adcb
lcall
int3
loopne
xchg
cmpsl
xor
test
scas
ds
pop
pop
insl
leave
lods
and
mov
pop
add
mov
outsl
testb
sub
pop
push
mov
xor
loop
mov
fdivrl
push
fisttps
testl
fmull
lret
and
outsl
scas
mov
fcmovnbe
mov
mov
stc
in
pushf
loope
fidivl
adc
jbe
add
dec
or
in
inc
daa
xchg
out
or
adc
sub
xor
push
jle
mov
jo
jmp
and
pop
sti
jne
sbbl
inc
push
xchg
pop
roll
fcomps
jle
jno
ljmp
xchg
and
outsl
add
rcrl
ret
mov
jg
in
jp
std
call
fmuls
cmpb
mov
js
cmc
cli
mov
add
cmp
inc
or
enter
aaa
or
loope
pop
insl
ret
mov
dec
les
shrb
sahf
sbb
sbb
push
nop
lret
mov
inc
scas
test
cwtl
fs
sbb
out
adc
mov
sub
push
jl
adc
ror
add
test
outsb
push
je
idiv
jecxz
pushf
int3
fimull
and
sub
scas
jb
cmp
out
dec
in
or
mov
mov
dec
xor
jp
scas
loop
fistl
addr16
mov
nop
fwait
push
imul
mov
xchg
mov
jae
addl
inc
add
mov
outsl
shrb
jle
mov
repnz
and
stos
loope
add
in
in
mov
jno
sahf
hlt
mov
cld
pop
out
popa
or
xchg
sti
stc
popa
outsb
lods
and
test
add
inc
es
push
into
jb
loop
imul
cmc
push
das
scas
loopne
xor
xorl
push
sahf
lcall
rorb
sbb
mov
xchg
pop
loope
out
push
leave
lret
lret
popf
rorb
fmulp
pushf
scas
jge
lcall
fwait
jns
xor
mov
cmp
xchg
mov
mov
int
aam
popf
inc
jge
adc
xlat
mov
inc
xor
sbb
into
ds
clc
cmpsb
dec
inc
fdiv
mov
dec
xchg
and
js
and
repnz
mov
add
loope
dec
cmp
push
cld
push
in
add
jl
mov
js
mov
adc
shlb
ja
clc
sub
add
out
mov
and
lret
xchg
popf
adc
ror
paddw
push
push
mov
outsl
fdivrl
mov
cs
jge
jmp
faddl
dec
dec
hlt
movsl
dec
icebp
mov
sbb
adc
repnz
test
xor
lds
mov
or
jl
out
int3
pop
iret
imul
pushf
xor
push
mov
inc
scas
xchg
scas
adc
push
sub
jne
jge
xchg
sbb
iret
or
and
adc
mov
cmpb
fs
inc
mov
dec
xorl
push
push
stc
stos
mov
lods
adc
adc
movsl
movsb
jg
jl
xor
jmp
or
xor
sahf
push
or
mov
lahf
push
gs
test
repnz
rorl
cld
imul
mov
push
xor
fwait
lea
scas
sub
push
mov
jnp
lret
and
mov
shr
cli
adc
test
dec
sub
xchg
clc
in
es
mov
fwait
inc
jae
xchg
imul
mov
sub
mov
cmpb
imul
mov
int
stos
rcl
xchg
inc
jbe
lds
mov
xchg
push
pushl
jnp
dec
push
cld
iret
jl
mov
pop
add
out
rolb
push
add
imulb
xor
xor
loop
repz
lret
enter
aad
lods
outsb
repz
fsubr
repz
stc
add
out
mov
mov
inc
bound
dec
sub
cs
fwait
push
cmpsl
adcl
mov
pushf
jae
ja
mov
fadd
mov
adc
and
out
xchg
dec
push
xchg
into
mulb
repz
and
aas
mov
sub
xor
sahf
rclb
jg
out
jns
inc
aad
int3
inc
shlb
mov
lcall
imul
mov
cltd
pop
add
hlt
aad
adc
imul
inc
lahf
inc
fimuls
test
lods
add
ljmp
mov
shlb
fdiv
adc
adc
pminub
dec
ds
xorb
sbb
mov
sbb
add
sbb
ror
aad
arpl
out
enter
inc
in
pcmpgtd
add
push
stos
xor
loop
mov
sahf
shlb
enter
icebp
jmp
emms
adc
jp
das
pop
jmp
xchg
call
mov
push
aad
enter
and
jge
add
xchg
iret
mov
scas
push
add
pop
sub
push
push
mov
nop
xchg
push
push
lea
out
jp
mov
in
addr16
lock
mov
push
pop
outsb
rclb
addb
movsb
shll
pop
push
add
clc
pop
cmp
mov
mov
cmpsl
pop
ficoml
xchg
jae
pusha
sub
enter
xor
xadd
jo
xlat
push
cmpsb
jbe
or
ljmp
push
push
scas
mov
mov
lea
fbstp
dec
push
hlt
je
inc
das
xor
jns
inc
loop
ds
hlt
pushf
fwait
les
test
ret
cli
dec
scas
std
push
pop
dec
jl
int3
loope
jecxz
inc
jb
xor
out
test
adc
fs
and
test
cmp
call
bswap
jl
test
std
pop
inc
loope
clc
cwtl
rcll
pop
add
shrb
pop
push
jg
out
insb
pop
div
adc
mov
test
mov
mov
daa
jl
out
inc
jp
push
lods
stc
cltd
mov
mov
dec
cmp
and
or
pop
int3
lods
sbb
mov
lcall
mov
stos
aam
mov
jno
sbb
jne
cmc
add
push
add
je
fldt
jecxz
inc
cmpsb
mov
sbbl
ss
in
jecxz
mov
movsb
hlt
fldl2t
fildl
mov
out
mov
in
sub
push
lea
mov
dec
xchg
js
out
mov
mov
imul
loop
xor
clc
stc
xor
pop
cmp
cmp
and
mov
ja
sbb
test
push
ds
addr16
enter
dec
mov
fwait
mov
push
mov
nop
gs
mov
jle
das
adc
xchg
or
and
mov
sbb
cwtl
sub
das
aad
js
mov
stos
addl
outsb
hlt
ret
inc
movsl
pop
mov
lahf
fisubl
inc
inc
aad
jnp
imulb
add
enter
xchg
jle
jmp
jp
and
daa
call
adc
cmp
je
and
add
push
stc
jl
rcll
pop
scas
out
imul
dec
add
mov
jmp
fdivr
ss
jno
rolb
lret
fsubrs
sub
hlt
in
sbb
xchg
sub
lret
popf
jmp
xchg
dec
lock
adc
push
xor
scas
call
mov
cmp
jecxz
in
sti
in
add
or
out
sti
inc
clc
idivl
test
xor
rclb
lods
or
xorb
je
enter
jl
je
pop
hlt
mov
fldcw
sub
out
stc
int
imul
or
mov
imul
pop
lods
adc
and
mov
push
dec
mov
js
hlt
rol
jecxz
pop
icebp
fld
pop
fldl
sub
aam
adcb
inc
fsubs
dec
push
outsl
fidivrl
inc
and
fcoms
adc
jmp
aad
in
out
shll
js
cmp
mov
adc
jae
movsb
jo
sti
jno
push
repnz
daa
enter
jge
paddsw
mov
xlat
inc
into
sbb
fs
enter
adc
or
pop
pop
add
inc
xor
test
cmpsl
sub
or
add
out
or
jne
sbb
push
xchg
aaa
xchg
adc
xor
sub
in
cmpsl
ljmp
xor
repnz
mov
pop
mov
xchg
mov
dec
pop
pop
pop
int3
daa
pusha
mov
xchg
pop
test
addr16
xchg
dec
pop
adc
add
xchg
aas
icebp
add
sbb
sub
movsb
add
cltd
dec
ja
shld
insb
lret
stos
dec
sbb
mov
lcall
add
mov
insb
pushf
cmc
dec
add
icebp
arpl
dec
imul
leave
add
mov
inc
mov
adc
xor
mov
test
adcb
sub
cmp
loope
dec
pusha
cmp
mov
call
sbb
jns
repz
cmp
or
mov
mov
loop
pop
mov
jae
scas
iret
xchg
loope
dec
mov
pop
dec
xchg
mov
xor
scas
jge
and
andl
xor
or
sub
sbb
adc
lret
outsb
dec
jne
push
es
mov
xorl
ret
sub
cltd
test
fidivs
mov
mov
ds
push
mov
pop
popl
daa
xor
mov
mov
addr16
test
lcallw
dec
fimuls
pushf
adc
pop
jmp
test
int
xor
xchg
xor
push
sahf
mov
or
jle
js
sbb
in
ficomps
mov
outsb
lds
sub
dec
test
mov
pop
dec
cmpsl
xchg
lock
mov
into
jp
cmp
and
push
daa
push
add
ds
pusha
das
fcmovb
nop
sbb
cmp
scas
das
adc
shl
mov
pop
jg
insl
shl
cmpsb
push
mov
sbb
mov
notb
xchg
pop
xor
cmp
into
mov
xchg
mov
cmc
dec
sbbl
pop
fs
xchg
imul
pop
cmpsl
add
mov
xchg
sbb
sahf
mov
add
inc
lods
lods
mov
lock
loope
enter
cmp
cwtl
cmp
jecxz
popf
js
bound
mov
fnstcw
ficoms
push
ret
jmp
mov
arpl
lcall
aas
mov
test
inc
stc
dec
clc
add
nop
roll
fadds
or
popf
sbb
jne
pop
sti
sbb
adc
dec
mov
or
sub
ret
sbb
push
xchg
std
jmp
mov
in
jp
sbb
lock
in
mov
pusha
outsb
jl
cltd
jns
lcall
test
lret
loop
outsb
mov
mov
enter
fidivs
sub
jb
add
std
add
sar
imul
js
add
push
aas
je
push
clc
mov
xchg
fs
cmp
hlt
int3
outsb
mov
fisubl
jge
ret
sbb
and
nop
xchg
and
lock
xor
jbe
jge
sahf
ljmp
xchg
stos
ffree
sti
pop
sbb
mov
xchg
xor
xor
xor
out
inc
into
es
xor
xor
dec
jl
mov
inc
dec
or
fildll
fmuls
sbb
in
and
repnz
hlt
orb
pop
dec
and
dec
or
shl
subl
lods
mov
ljmp
fbstp
in
lret
lock
add
lret
xor
cld
ucomiss
gs
xchg
sar
mov
sub
add
rcrb
es
or
rcrl
stos
out
in
decl
xor
or
movsl
int3
clc
imul
hlt
cli
inc
frstor
adc
mov
and
cmc
xor
inc
xchg
sti
jge
ljmp
cli
add
sub
addr16
dec
mov
idivb
in
mov
js
popa
pop
sbb
jmp
sub
sub
enter
ret
movsl
pop
icebp
hlt
ret
mov
cs
test
aam
repnz
adc
movsb
sahf
xor
out
int
jbe
mull
push
inc
out
inc
fcoml
inc
mov
ljmp
out
adc
inc
push
test
xchg
mov
inc
lods
pop
xor
ss
pop
cmp
jns
sbb
add
into
mov
loope
jp
and
lret
les
adc
sti
nop
loope
repz
mov
jp
mov
in
adc
xchg
push
cwtl
insb
pop
fs
into
pop
mov
xchg
imul
aas
adc
cmpsb
paddsb
push
xchg
and
aaa
pusha
mov
enter
inc
repz
aas
adc
ljmp
lock
push
inc
loop
loop
jge
inc
add
jge
shrb
arpl
fcmovne
mov
mov
cmc
adc
jbe
sahf
and
imul
inc
shr
jge
inc
inc
inc
mov
jo
testl
push
jnp
push
jle
pusha
pop
stc
loopne
andl
pop
fidivs
movsl
lds
stos
out
fsubs
sub
aad
outsb
aad
add
xchg
sbb
mov
test
out
jg
pop
xor
sbb
add
clc
pop
leave
andb
aas
pop
rcl
in
aaa
sub
call
add
pop
inc
inc
pop
cmp
adc
rcrl
out
or
add
and
mov
cmp
repnz
push
stc
popa
lock
pop
xor
mov
push
cmc
inc
dec
add
cld
arpl
jg
cmpsl
stos
std
lcall
std
stos
or
mov
and
lret
sbb
xor
pop
stos
dec
push
out
cmp
mov
sbb
mov
roll
call
adc
adc
not
inc
jge
mov
pop
iret
in
leave
ds
in
or
cmp
xlat
jg
jns
fisttps
adc
insl
mov
mov
pop
cmp
jo
pop
and
shll
and
xor
in
shll
jmp
xor
repz
cmp
mov
dec
mov
pop
mov
and
int3
and
insl
inc
sub
out
popf
add
jne
movsl
aad
mov
push
push
daa
cmp
outsl
pop
imul
scas
push
cmp
sub
pusha
xor
dec
jp
ljmp
jno
fstl
inc
dec
fnstcw
sbb
inc
ror
jb
cmpsl
sbb
iret
cmp
mov
int3
jmp
and
xor
and
in
adcl
mov
pop
inc
inc
cmp
jl
inc
mov
insl
loope
cmc
adc
fildl
stos
sub
out
sub
adc
inc
repz
mov
popf
pushf
pop
mov
jne
std
ficoms
sub
add
mov
repnz
ds
outsl
xchg
dec
sahf
mov
push
mov
xlat
frstor
push
repnz
or
or
or
imul
dec
je
jae
ds
inc
jae
xor
xlat
xor
mov
dec
and
mov
sbb
repz
push
ud0
mov
cmpsb
xchg
push
xchg
out
push
ja
cmc
shl
insb
test
js
xor
frstor
push
jge
std
fs
cmpsb
cmp
mov
mov
dec
adc
or
sub
into
fwait
sbb
test
int
ror
xchg
cmp
xchg
hlt
dec
ja
in
sar
pop
mov
xchg
insb
or
cmp
mov
sub
push
jnp
inc
dec
mov
lret
push
xor
mov
iret
cmp
or
mov
mov
sbb
jno
pop
imul
and
mov
pop
add
adc
andl
lods
aas
sbb
out
add
loopne
push
add
mov
inc
sbb
dec
arpl
mull
xchg
mov
cmc
nop
dec
out
mov
rolb
lahf
jbe
mov
mov
adc
jg
jnp
add
sub
cmp
lcall
leave
out
adc
scas
pop
arpl
or
push
adc
adc
adc
icebp
mov
sbb
add
iret
jb
and
into
sbb
and
mov
mov
std
dec
mov
sub
pop
mov
adc
repz
xor
scas
nop
test
mov
cmpsl
stc
imul
xor
and
cld
shr
jle
loop
loopne
push
push
cmp
or
negl
jmp
sub
aaa
or
cwtl
stc
dec
or
lods
daa
adcb
imul
pop
push
sarb
lock
mov
test
jns
mov
or
adc
mov
loop
inc
sub
test
push
xor
lods
hlt
dec
lock
mov
push
mov
negb
leave
lret
fstpl
loop
rolb
mov
mov
imul
pop
outsl
sahf
jbe
mov
and
sbb
jp
pop
nop
cmp
sbb
add
lret
rcll
shrl
jb
int
jp
add
mov
cwtl
pop
push
test
sbb
xlat
xchg
sbb
inc
mov
or
out
and
das
mov
outsb
lcall
into
add
xchg
ds
adc
and
jb
fstp
sub
push
dec
add
je
outsb
ficoms
inc
add
clc
scas
repnz
pop
test
inc
sbb
int3
push
std
jl
std
cmp
aaa
mov
mov
rcl
out
push
pop
lcall
push
adc
mov
or
faddl
jg
scas
out
mov
mov
jb
jnp
test
sbb
sbb
out
sbb
mov
in
add
dec
daa
adc
nop
xor
cwtl
repnz
push
aas
xchg
outsl
xchg
out
addr16
cs
aaa
lret
and
les
push
in
sub
adc
cmp
int3
mov
dec
cmp
andl
mov
jno
xlat
lds
stc
dec
sub
fdivr
lcall
jae
aaa
xchg
out
out
xor
iret
insb
dec
ljmp
mov
push
repnz
bound
iret
adc
in
adc
dec
add
lret
jg
pusha
sbb
push
sub
dec
gs
pop
addr16
jl
xlat
aam
sub
fnstcw
sbb
xor
fisubrs
jo
push
adcl
or
cmc
and
int
adc
orb
xchg
mov
pop
sbb
xor
les
dec
dec
dec
imul
add
mov
std
outsl
jae
aam
aam
mov
cmp
adc
cs
mov
cmpsb
pop
lahf
or
clc
xchg
sub
mov
mov
pop
std
xchg
fistl
adcb
push
aam
mov
daa
mov
leave
push
ret
mov
push
mov
scas
add
jg
adc
adc
cmp
or
stos
jae
fidivrl
cmpsb
and
ss
aad
mov
pusha
mov
push
inc
xor
adc
dec
pop
sub
stos
jp
daa
adc
lahf
fwait
xor
imul
xor
cmp
popl
test
mov
mov
push
std
daa
mov
mov
xchg
push
mov
stc
repz
mov
popa
test
or
or
cmpsb
add
add
ficompl
pop
stc
and
mov
mov
jp
aam
roll
pop
cmc
loop
fbld
mov
fnsave
adc
pop
insb
scas
out
int3
adc
rorl
adc
into
aad
sbb
sub
xlat
loope
jnp
add
cmp
icebp
xchg
repz
sub
hlt
cli
push
mov
cmpsl
push
jne
lds
mov
sub
jp
icebp
add
and
mov
cmp
jno
