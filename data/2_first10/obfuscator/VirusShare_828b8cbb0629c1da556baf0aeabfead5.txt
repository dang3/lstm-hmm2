orl
outsb
and
pushf
das
cmpsb
pop
mov
hlt
lock
lods
cmp
xchg
stc
stc
and
sbb
sbb
fwait
mov
fs
push
andl
adc
mov
and
loope
repnz
pop
aaa
jmp
dec
std
mov
js
ss
push
lods
mov
and
mov
hlt
cwtl
sbb
push
jns
lock
subb
insb
cmpsb
ss
jl
ljmp
pop
cmpsl
scas
pusha
ss
mov
ja
pop
dec
mov
fcomps
cmp
and
in
fsubrl
and
or
lock
icebp
loope
loop
mov
test
orl
or
pushf
out
loopne
lret
mov
cmpsl
pop
pop
mov
add
add
les
xor
add
add
mov
add
add
add
addb
add
xchg
fnstenv
add
add
add
xor
add
add
push
or
add
add
add
mov
add
std
aas
daa
add
add
add
out
add
add
add
sub
add
add
jmp
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
jmp
add
jne
sub
lock
das
add
and
add
xor
mov
sub
add
add
pushf
pusha
mov
movb
lea
jne
shrd
jmp
push
call
add
add
and
mov
add
add
adc
add
sub
jl
das
add
adc
add
cmp
add
and
pop
and
add
and
gs
das
add
and
xor
sub
pushf
jmp
add
adc
add
xor
movsb
jmp
add
adc
add
jmp
das
add
and
jbe
xor
mov
das
add
and
add
sub
mov
adc
add
xor
add
jmp
add
and
jns
and
int3
jmp
add
and
or
xor
aam
das
add
and
ljmp
add
jmp
add
and
es
add
jmp
add
and
push
push
sub
in
jmp
add
add
add
add
add
jmp
add
add
add
add
add
xor
cld
jmp
add
add
add
add
add
sub
add
das
add
test
cmp
push
call
jg
jbe
sub
sub
dec
push
xchg
call
mov
or
inc
clc
push
les
sbb
xchg
adc
notl
cmp
xchg
cmpl
or
sbb
and
ficoml
test
addr16
lds
or
inc
rcll
jo
andl
or
bound
lea
sbb
pop
insb
andl
or
lea
or
sbb
les
inc
pop
or
mov
popa
push
lret
mov
addr16
daa
lar
cmp
ljmp
lret
rcll
mov
addb
outsl
sub
ljmp
push
add
fcoms
xchg
sahf
cli
jle
or
lds
and
orl
lock
das
cmp
addr16
mov
shlb
mov
fldenv
ja
jge
cmpsb
or
sahf
fiadds
push
sub
add
xchg
jg
faddl
test
fwait
addps
adc
out
adc
dec
lahf
cmp
add
push
mov
cmp
and
insl
sbb
push
test
sbb
cmp
sub
mov
or
jecxz
xor
shrb
or
dec
in
test
int
leave
fwait
adc
adc
mov
and
loopne
pop
or
rdtsc
sub
ficoml
jb
push
cs
or
adc
pop
push
cld
jecxz
push
rclb
mov
xor
push
mov
ficompl
pop
pop
mov
outsb
mov
add
jle
outsl
adc
lret
ret
mov
fsts
scas
push
fimull
jecxz
mov
insl
or
xchg
movsb
cmp
jbe
sub
jae
pushf
push
add
loopne
lea
or
imul
and
cmc
loop
pop
xor
jmp
nop
inc
fs
mov
jbe
and
cmp
and
sub
std
mov
mov
and
xchg
adc
loopne
das
xor
into
fs
ja
sub
adc
dec
or
dec
add
adc
std
push
push
cltd
adc
mov
push
fcoml
push
xlat
push
push
mov
jne
cmp
fwait
mov
mov
adc
cwtl
int3
fisubrl
into
shrb
sbb
add
cwtl
push
jl
sbb
mov
push
fcoml
add
add
cmp
stc
iret
mov
xor
cld
je
dec
fwait
rorl
sub
repnz
adc
in
lcall
and
idiv
cmpsb
les
mov
pop
ds
push
mov
sub
fnstcw
cmc
fwait
lret
xor
cmp
ret
and
dec
sbb
jbe
inc
xchg
fwait
dec
shl
xor
sub
aas
mov
js
or
jae
mov
les
jg
nop
imul
cmp
into
xor
mov
push
pop
xchg
mov
mov
sbb
jns
int
sti
ja
xor
dec
push
lcall
jecxz
out
cmp
push
dec
pop
hlt
lcall
mov
clc
subb
dec
cmp
js
or
add
xchg
sbb
adc
enter
cmp
cmpsb
lea
cmpb
gs
dec
mov
xor
cmp
mov
inc
inc
add
mov
aaa
hlt
ja
xchg
add
adc
push
cli
adc
in
test
add
jg
enter
xchg
xchg
sbb
hlt
mov
xchg
inc
sub
pop
push
test
cmpsl
fsts
daa
or
cmpsb
lahf
jns
lcall
sarb
aaa
and
mov
cld
and
sub
stos
ja
loope
sarb
adc
ret
mov
ficomps
idivb
sub
mov
pop
push
xchg
or
pop
popf
xchg
adc
sbb
and
xchg
sbb
insb
cmc
int3
add
outsb
cld
xchg
inc
fwait
inc
inc
dec
nop
lret
dec
adc
adc
mov
push
xchg
adc
cmp
xor
fimull
adc
sbb
std
es
insb
inc
mov
fsubs
add
adc
rclb
dec
and
cltd
sbb
insb
pop
scas
xchg
dec
icebp
sbb
sbb
and
adc
outsb
dec
rclb
push
pop
sbb
adc
xchg
out
jmp
outsb
adc
outsb
mov
xchg
sbb
dec
push
fisttpl
cltd
or
mov
cmpsl
lahf
and
iret
fisubl
pop
and
int
push
in
and
adc
xchg
cli
cmp
ja
jp
les
xchg
idivb
mov
scas
sbb
xchg
andb
out
push
lea
and
aas
cld
sbb
lret
dec
cmp
cmp
js
stos
into
pop
arpl
cwtl
pop
out
cmpsb
jecxz
arpl
pop
lea
push
pop
xchg
pop
fs
js
push
invd
sbb
sbb
lds
fbld
xor
clc
inc
stos
push
ja
pushl
fidivs
fistl
ds
xchg
fidivl
cs
js
pusha
cltd
mov
divb
sti
mov
push
hlt
mov
nop
movsl
in
push
and
mov
lea
inc
xor
loope
ret
add
movsl
out
cmpsb
addr16
sbb
cwtl
xchg
shlb
arpl
nop
jns
mov
incl
push
movsl
adc
xor
bound
stos
int3
adc
sbb
lcall
sahf
enter
out
imul
shlb
add
xor
mov
aas
and
pop
cmpsb
push
jle
pop
cli
ret
mov
icebp
dec
pop
push
jns
xor
xchg
mov
cmpb
stc
mov
out
mov
pop
loop
loop
sub
mull
out
jb
mov
jp
cmp
push
jge
inc
cld
ds
xor
outsb
xor
mov
mov
push
stc
xor
mov
js
inc
lret
lods
cmpb
sbb
cmpsb
sub
xlat
mov
ds
jnp
mov
or
sub
aam
imul
test
clc
mov
pop
adcl
out
and
or
mov
pop
dec
adc
push
xor
mov
pop
sbb
inc
xor
sbb
stc
mov
and
outsl
adc
sub
inc
mov
adc
xchg
aaa
lods
jle
push
test
mov
mov
inc
mov
orb
mov
push
jnp
jne
jle
mov
pusha
outsl
imulb
movsb
stc
jae
or
testb
lret
push
or
mov
sti
mov
cs
test
jge,pn
xchg
jbe
mov
mov
aaa
push
sub
pop
ss
push
lret
and
mov
and
ficoml
clc
arpl
or
xchg
movsl
sahf
xor
xor
adc
mov
mov
xor
sbb
dec
enter
push
loope
lret
cmp
and
dec
negl
outsb
add
sbb
stos
adc
sbb
adc
outsb
sub
lods
inc
cmpsl
push
adc
pop
push
sbbl
jb
or
push
adc
push
cmp
pop
add
or
xchg
add
sbb
or
inc
xlat
fimull
xadd
adc
insb
mov
rolb
lods
mov
xchg
sbb
or
mov
xchg
sbb
inc
adc
push
adc
jbe
xchg
mulb
or
and
xchg
stos
fimull
add
xchg
sbb
jo
nop
xchg
scas
imul
sbb
lea
je
lds
rorb
jns
test
mov
xor
or
mov
pop
test
mov
or
jl
test
shrb
xor
ja
mov
cmp
xchg
aad
push
mov
sub
int
dec
mov
ds
leave
ret
lret
insl
mov
xor
roll
sbb
mov
push
rolb
mov
cmp
xchg
nop
adc
lahf
inc
cmp
sub
pop
push
or
sbb
sbb
ljmp
dec
in
pop
insb
stos
testb
xchg
mov
add
mov
push
xor
mov
insb
dec
mov
cs
and
xchg
pop
mov
cmpsb
push
and
in
dec
jmp
adc
int
outsb
stos
push
push
or
dec
es
rorl
cmpsl
xchg
jbe
lahf
xor
inc
cmp
mov
add
mov
mov
mov
js,pt
fmull
push
dec
push
dec
popf
xchg
sbb
lret
or
addr16
test
dec
and
cmc
push
mov
mov
or
push
and
mov
mov
adc
mov
push
testl
pop
push
ficoml
push
stc
movsl
js
bound
sbb
imul
xchg
sbb
imul
sub
mov
cmp
cmp
push
ja
ljmp
sti
mov
dec
inc
or
ja
mov
rclb
push
sub
mov
std
mov
jns
jne
inc
decl
divb
addb
pop
jmp
inc
cmpsl
in
sbb
gs
xchg
loop
push
es
aad
jmp
mov
arpl
and
add
sbb
movsl
aad
pop
out
jp
mov
jne
adc
sbb
jp
repnz
mov
xorps
adc
adc
mov
clc
mov
enter
pop
xlat
js
jecxz
pop
push
shll
dec
push
or
call
cmp
es
jbe
inc
incl
adc
inc
fildll
cltd
loope
iret
xchg
fs
or
jmp
dec
adc
jle
rcrl
and
xor
ds
lahf
jmp
or
xor
push
mov
add
cmpsl
mov
int3
adc
lods
add
adc
adc
inc
push
dec
fwait
push
andb
movups
adc
push
mov
or
or
dec
ljmp
push
pop
xor
push
sub
cmpsl
pop
ret
insb
scas
sbbb
int3
into
ljmp
cmp
into
in
scas
push
cmpsl
add
xchg
mov
adc
outsl
push
nop
xchg
lock
push
adc
dec
mov
lahf
sub
jp
xchg
dec
pop
xchg
iret
movsl
inc
mov
or
ficompl
push
or
sub
test
int3
lahf
in
sbb
iret
dec
and
rcrl
les
sub
ret
sbb
mov
lahf
cltd
fisubrl
push
xchg
loope
sbb
or
cs
int3
cli
cmp
xchg
fs
ds
shrd
gs
or
push
adc
outsb
jo
xor
push
mov
or
mov
outsb
movsl
xchg
lods
sbb
add
jp
cmp
sbb
xchg
mov
dec
sub
cmp
outsb
xor
adcl
movsl
jp
xchg
xchg
and
ja
push
pop
cld
addl
in
rclb
xor
adc
bound
inc
repnz
gs
mov
mov
mov
mov
and
jge
jb
sti
mov
sub
cmpsl
add
movb
mov
xchg
lahf
inc
sahf
mov
popf
mov
sahf
pop
out
xchg
cmpsl
gs
and
xor
and
push
out
frstor
ljmp
adc
incb
sbb
scas
pop
pop
push
push
bound
cmpsb
lods
fisttpl
or
gs
cmpsl
sti
cltd
push
adc
js
sysexit
stos
es
cld
mov
dec
adc
mov
repnz
xchg
push
or
pop
rorb
mov
pop
fcompl
sahf
xchg
lahf
pusha
mov
lahf
dec
mov
dec
pop
sub
ret
popa
mov
mov
jmp
mov
and
addr16
jle
ret
je
xor
adc
rcll
jp
ljmp
sbb
lds
andb
call
sub
sarl
mov
xor
pop
sub
std
push
xor
jge
mov
stc
or
mov
or
dec
jmp
cmpsl
lds
cmp
daa
jg
or
inc
mov
add
imul
lret
mov
dec
xor
jg
sub
cmpsb
sbb
shlb
mov
push
mov
inc
or
jns
jmp
popa
hlt
push
mov
rorb
cs
xchg
cmp
push
cli
xor
xor
cltd
je
aam
mov
ret
jl
and
jecxz
jno
loop
leave
stc
or
cmp
adcl
repnz
mov
sbb
loope
mov
pushf
shl
push
lods
stc
stc
pushf
jmp
icebp
dec
inc
pop
sub
sti
mov
mov
pop
mov
es
jmp
es
test
js
mov
jae
pop
mov
aaa
icebp
sbb
cli
mull
cltd
sbb
pop
movsl
mul
sarb
cwtl
inc
adc
sbbl
cmp
mov
inc
sti
push
jg
mov
xchg
adc
daa
or
sub
push
and
push
out
fnstenv
sub
pop
in
into
es
fdiv
jns
mov
ja
dec
shrl
mov
push
sub
push
push
fstpl
les
mov
xor
pusha
xchg
dec
popl
add
mov
add
test
or
int3
cmpb
pop
lahf
sub
cwtl
or
xchg
xor
mov
mov
cld
bound
cwtl
mov
mov
lret
sub
cmpsl
xor
int
jae
lret
and
xor
rcrb
push
cmp
shl
dec
scas
cmp
push
or
fwait
pop
sub
or
sub
mov
inc
addb
sbb
pop
or
push
and
adc
sarl
popa
fmulp
lods
mov
add
fsubl
push
es
cmc
ss
loope
or
nop
jecxz
leave
cmovo
andl
mov
shlb
xchg
adc
xor
cmpsb
mov
test
scas
or
jmp
fwait
jg
fnstenv
adc
fimull
shrb
idivb
lcall
jb
popa
je
dec
gs
add
add
popa
insb
inc
jb
add
cmpsl
pop
sub
sbb
lds
lret
ficoml
in
aad
addr16
jmp
xlat
add
add
xlat
repnz
adc
lods
xchg
sub
adc
mov
dec
fsubp
repz
shll
fwait
dec
cli
dec
and
jmp
xchg
psubusw
test
adc
sti
test
and
xor
adc
jne
sub
inc
stc
mov
push
sbb
test
mov
sarl
add
into
mov
cmp
movsbl
mov
call
mov
bt
repnz
jmp
das
inc
lahf
pop
sub
adc
adc
ret
ror
fldl
cmp
das
shl
sub
daa
test
mov
inc
mov
xor
or
loope
clc
adc
adc
mov
data16
mov
pop
lahf
xchg
jp
jae
mov
cmp
jl
je
mov
mov
and
shl
aam
iret
cwtl
cmpsb
inc
xchg
cmp
addr16
call
in
out
push
mov
push
subb
xor
push
dec
sarl
add
pop
pop
fistpl
jbe,pn
mov
into
sarb
pop
sti
xor
xchg
ljmp
dec
sbb
mov
or
jnp
mov
jp
insb
mov
pop
int3
sahf
setle
xchg
jmp
mov
push
int
jnp
in
pop
xor
lahf
inc
push
xchg
sbb
pop
sub
cmpsl
roll
je
sub
jb
push
arpl
sub
push
into
mov
push
push
add
inc
and
pop
movw
movl
push
pusha
lea
jmp
rcll
push
sub
movsb
jns
dec
mov
cmc
rorl
scas
clc
in
mov
mov
cli
push
pushf
inc
push
sub
xchg
testl
icebp
xchg
pushf
xor
outsl
into
cmp
pusha
mulb
and
fisubrs
adc
cmpsl
pop
out
mov
outsb
popf
xchg
xchg
mov
mov
cmp
rcrl
jb
add
cld
fwait
dec
fmull
add
dec
insb
and
jecxz
insl
mov
or
pop
fisubrs
sub
fbld
ret
int
jge
adc
sub
shll
pop
mov
pusha
pusha
lea
sub
fisttpl
rep
adc
mov
rolb
and
adc
mov
pop
les
int3
dec
jbe
dec
add
jecxz
nop
dec
add
or
negb
push
and
inc
adc
cwtl
jae
hlt
stos
into
cmp
ss
sub
cltd
shll
sub
fimull
es
movsl
inc
adc
in
lcall
bound
dec
pushf
fcmove
and
fadd
in
and
mov
jnp
je
hlt
cli
cmc
sti
add
fdivrs
dec
ljmp
adcb
xor
dec
mov
ret
loop
mov
les
fsubrp
int3
xor
ret
xchg
mov
lret
adcl
jo
out
or
push
sbb
or
cwtl
add
mov
xor
insb
cld
and
mov
idivb
clc
mov
hlt
sbb
fmul
and
fsts
out
test
out
sbb
lahf
inc
push
dec
inc
sub
mov
movsb
aam
hlt
les
cmp
popf
xor
mov
pop
add
out
fst
aas
jnp
popf
cmc
add
in
pop
or
mov
rcrb
pusha
out
inc
fs
and
imul
jmp
mov
mov
inc
xor
sahf
das
sbb
outsl
jne
add
push
jmp
std
and
mov
fs
adc
cmc
jle
jo
mov
mov
adc
shlb
out
shlb
insb
lret
loope
mov
mov
cmp
inc
test
fstp
lods
addl
and
push
inc
xor
imul
les
and
loope
fidivrs
push
icebp
jns
mov
lock
das
cmc
xchg
mov
inc
scas
dec
call
xlat
sbb
scas
mov
mov
adcb
mov
iret
dec
outsl
add
jnp
jnp
xor
pushf
cwtl
subb
jae
mov
sub
sub
dec
xlat
fsubrl
cmp
loope
push
lcall
push
mov
sub
push
add
lret
xchg
cli
aad
sbb
bound
out
xchg
cmp
movsb
mov
nop
xchg
xor
je
lods
popf
lahf
sbb
movsb
mov
fidivl
cmpl
rclb
lods
mov
cmpsl
mov
pop
pop
lods
in
or
xchg
rcl
fldt
xchg
mov
rcl
push
scas
nop
mov
push
cmpsl
pop
sub
in
inc
pop
jbe
adc
aad
test
xchg
aad
aaa
setnp
mov
push
sub
inc
lahf
sub
push
shld
bts
and
push
bt
bsr
clc
lea
push
aas
push
sbb
cmp
mov
test
test
jmp
cmc
pushl
bt
imul
pushl
bt
cmp
add
lea
pusha
mov
call
je
sti
push
sub
lods
xor
lahf
mov
das
mov
js
call
jbe
stos
mov
lea
ror
add
addr16
aaa
push
mov
ja
dec
mov
lea
in
scas
inc
pop
ds
mov
je
xor
movsl
inc
fcmove
dec
cmovbe
ret
inc
outsl
xor
stos
jp
adc
jmp
lods
enter
cltd
daa
lcall
fistpl
or
movsb
adc
cs
mov
sarb
mov
mov
into
push
add
push
inc
push
dec
xor
cs
insb
add
sbb
jg
lea
inc
inc
lods
cmpb
adc
subb
xor
sbb
idivb
or
jns
jmp
mov
and
pop
arpl
aaa
adc
popa
fisubs
in
stc
cmp
sub
xor
jo
push
ficoml
ss
imul
std
mov
pushf
sub
cmp
mov
sti
in
outsb
shlb
pop
or
les
adc
xchg
fbld
pop
inc
inc
cmp
test
mov
xor
mov
int3
jle
push
mov
and
jp
sarb
aam
push
sub
ror
adc
loop
dec
int
or
in
aam
mov
sti
ror
or
push
xor
adc
rorl
push
iret
inc
xchg
pushf
sub
push
sub
cmp
dec
ficomps
scas
out
sub
cmp
rcr
adc
js
int3
out
push
push
sbb
xor
sub
out
shl
sbb
insb
dec
imul
pop
mov
sahf
loop
mov
push
jg
sub
xchg
sub
dec
pop
cwtl
je
call
test
sbb
orb
cmp
jbe
inc
mov
addr16
or
sbb
stos
mov
call
movsb
cmpb
in
out
jo
jle
adc
mov
pusha
test
jae
sbb
pop
ds
add
pop
pop
es
xchg
and
dec
push
pop
jl
cltd
lea
lcall
sbb
jb
fildll
mov
lods
pop
sub
xor
push
ss
jbe
xchg
sbb
clc
mov
outsl
fdiv
imul
jbe
inc
jns
fldcw
nop
push
adc
test
add
cmc
push
movzwl
movzbw
call
lea
jae
cmc
cmc
stc
cmp
cmp
call
mov
adc
les
movsl
test
add
lret
pushf
jae
daa
pop
push
inc
xchg
fucom
cmp
jecxz
sbb
cltd
mov
pop
int3
lret
das
frstor
cs
adc
mov
rolb
int
ss
sbb
lods
jecxz
dec
rorl
push
roll
pop
jmp
test
leave
jo
and
mov
sarl
fidivl
divb
js
mov
es
aad
jmp
out
pushl
pusha
push
mov
movzbl
bswap
pop
pushf
push
pushf
mov
pushl
ret
jno
xor
out
lds
add
aam
fwait
dec
push
or
ficomps
cmc
xchg
idivl
scas
in
aad
fpatan
popa
jmp
sub
adc
fs
xor
outsb
adc
mov
idivl
outsl
lret
lret
and
push
inc
sbb
aas
pop
pop
aad
mov
fwait
add
test
pop
ficompl
addl
cmc
das
in
lods
mov
addr16
mov
jmp
sbb
out
scas
xchg
mov
popf
sahf
mov
dec
out
insl
mov
sti
shl
bound
or
aam
cld
sbb
inc
adcl
jle
scas
paddsb
push
lcall
adc
xchg
stos
imul
sbb
cmp
mov
ja
sub
mov
and
mov
mov
fcmovnu
jae
das
mov
and
or
jge
mov
pop
pusha
inc
and
mov
mov
lcall
jb
fists
push
xchg
hlt
out
stc
xchg
ds
add
mov
popa
dec
repz
push
adc
lods
idiv
call
test
sbb
adc
dec
in
jg
js
jecxz
xchg
mov
inc
loopne
mov
or
or
cltd
mov
xchg
xor
test
sub
fstl
jle
add
inc
incl
lahf
sets
push
lea
lea
jmp
xchg
dec
sub
fidivs
loop
inc
std
or
mov
jl
or
push
xchg
xor
cmp
out
cmp
mov
push
mov
push
cmp
cwtl
jp
shl
jbe
push
testb
in
pop
rcrl
add
jmp
outsb
addl
inc
cmp
or
xchg
lea
and
mov
adc
xchg
cs
push
hlt
lret
add
push
push
adc
xchg
sbbb
jnp
outsb
nop
jnp
pop
push
dec
sub
lret
cmpsw
testb
push
cmpsb
sbb
aaa
out
push
shll
pop
jne
xor
fdivr
cld
add
divl
cmc
sbb
adc
pop
repz
push
add
test
pop
jmp
sub
add
ret
sbb
jns
sub
xor
stos
pop
push
add
sti
in
jbe
mov
imul
notl
add
and
and
dec
xchg
in
lea
xor
lea
repnz
push
insb
gs
xchg
cmpsl
call
dec
sub
in
leave
mov
cmpsb
mov
enter
cmpsl
and
pop
xchg
jecxz
ret
outsl
dec
fistpl
lcall
xlat
aas
fucomip
xor
sub
std
jg
imul
jnp
push
dec
jb
shlb
jb
int
xlat
stos
sbb
mov
jp
sub
add
jnp
mov
scas
rorb
add
jne
into
cmpsl
pop
js
sub
aas
add
jo
mov
out
ficompl
and
popf
adc
insl
dec
push
mov
mov
mov
inc
cmp
sbb
adc
adc
jl
add
out
and
mov
fsubr
insl
lock
xchg
fildll
xchg
fs
dec
rcrb
fbld
sbb
jnp
sub
dec
add
cltd
xor
loope
sub
aam
push
orb
xchg
add
stos
sbb
or
xor
xchg
add
ss
or
mov
pop
cmp
pushf
lea
sub
data16
enter
shrl
sub
and
push
ret
sti
xchg
lea
adc
pop
dec
and
jo
push
out
fcmovne
cld
pop
int3
in
jae
in
pop
pushf
mov
xchg
lahf
mov
test
or
xor
jne
rolb
adc
push
je
pop
popa
mov
lods
jecxz,pt
loopne
inc
push
pushf
je
ja
cmp
int
loope
nop
insb
ss
xor
fisttps
ljmp
shl
jnp
pushf
jl
mov
mov
sub
insl
add
xchg
outsl
adc
incb
or
gs
jno
andl
lcall
and
loop
cmp
push
int
push
jg
pop
or
jg
mov
push
in
insb
sbb
cmc
roll
push
mov
jnp
push
lret
fdivr
movsl
aaa
neg
mov
xchg
jno
adc
xor
arpl
lods
jo
in
shrb
test
add
push
or
les
pop
xor
imul
jge
xchg
adc
int3
ret
fwait
sub
mov
dec
jo
push
dec
lahf
inc
xchg
and
add
pop
ljmp
jmp
and
push
aaa
loopne
in
into
sbb
push
xor
iret
mov
lahf
and
xchg
and
mov
ret
mov
andl
lret
stos
push
rorl
lcall
std
ss
pushf
test
push
xchg
jmp
es
out
testb
jnp
pop
mov
aad
dec
sub
es
adc
test
dec
aad
jb
and
fimuls
mov
xchg
lahf
mov
sbb
sub
push
fdiv
mov
lods
insb
cs
pop
mov
mov
add
xor
cld
inc
repz
inc
add
jmp
dec
ret
mov
cmp
inc
push
dec
sbb
jns
out
inc
aas
into
xchg
outsb
ffree
mov
xchg
repnz
pop
pop
mov
sbb
leave
into
pusha
out
lahf
scas
lock
pop
mov
mov
icebp
adc
sbb
inc
dec
sub
cli
push
leave
mov
cltd
es
and
and
and
shlb
in
divl
das
cmpsl
out
in
inc
fs
push
lds
cmpsb
push
xchg
cmp
ss
dec
push
lret
loopne
mov
aas
jbe
dec
xchg
xorb
fists
inc
inc
jbe
cmp
call
push
fcoml
dec
xchg
aad
daa
loop
sbb
repnz
and
push
adc
cld
jge
cmp
insb
cld
fistpll
lret
lock
lcall
call
push
sahf
mov
nop
and
clc
test
mov
inc
pop
dec
dec
fsin
es
sti
adc
lcall
mov
stos
cmp
fdivl
adc
pop
negb
dec
jge
cmp
xor
jmp
adc
lods
gs
mov
scas
jecxz
mov
cmp
aas
push
lret
mov
dec
outsb
push
fsubp
pop
nop
push
iret
out
lahf
pusha
lock
jl
mov
mov
loopne
lea
jae
bt
pusha
pushf
push
xor
jmp
arpl
fs
xor
cs
insb
add
xchg
pushf
imul
bt
call
imul
or
je
test
mov
pop
and
bound
pusha
mov
flds
scas
cld
adc
sub
dec
dec
jl
dec
je
mov
js
ss
call
enter
lods
sbb
sub
or
mov
mov
sub
jp
mov
shll
stos
sbb
loope
pop
xchg
cmpl
and
mov
test
pop
imul
pushf
ret
bound
jae
adc
xor
xchg
cs
sub
jecxz
mov
out
sbbb
pop
dec
js
cmpl
lods
sbb
push
cmp
cmp
mov
inc
lcall
bound
fsubs
call
jle
imul
xchg
cwtl
cmp
xor
pushf
pushf
call
call
inc
data16
sub
push
mov
mov
lret
mov
cmc
push
mov
xor
push
dec
jecxz
xchg
cmp
cwtl
mov
mov
ja
cmp
imul
int
xchg
mov
icebp
or
inc
das
testl
cld
xchg
xor
adc
pop
loopne
scas
movsl
sbb
or
inc
sub
fwait
cld
call
adc
cmp
inc
mov
cs
and
movsb
cmpb
jmp
test
mov
les
cmp
or
adc
mov
add
adc
std
and
pop
sub
shr
das
add
ja
ljmp
test
or
sub
xlat
test
xchg
push
ret
mov
jne
mov
xlat
rcll
mov
inc
addr16
test
mov
mov
pop
clc
ja
pop
pop
jbe
imul
lahf
in
xor
lret
and
ret
shlb
filds
or
not
test
push
shrb
pop
test
fistps
rcrl
sub
jbe
fwait
or
std
test
dec
adc
negb
test
stos
inc
push
xchg
mov
adc
sbbl
stc
pop
aad
sti
imul
enter
dec
sbb
pop
jae
bound
cmp
cmp
icebp
cmpsb
les
cld
addr16
add
inc
into
push
cs
testl
data16
jae
arpl
inc
sub
jp
test
out
xlat
ja
movb
mov
lret
out
cmc
push
sub
mov
sbb
xor
out
int
jns
push
cmp
sub
imul
inc
loopne
mov
inc
fidivl
mov
dec
xor
and
pop
stos
jg
gs
call
push
push
aam
push
pushf
jno
fisubrl
jecxz
and
mov
add
sub
xlat
subb
sub
xlat
dec
push
lret
sti
and
in
mov
lcall
sbb
shll
mov
outsb
aam
jle
pop
fwait
inc
cmc
jle
sarl
mov
in
and
inc
and
sub
inc
ds
inc
sbb
icebp
icebp
lahf
ljmp
adc
mov
cmp
insb
cld
pop
xchg
jge
std
popf
mov
jle
sub
jmp
inc
sub
ljmp
es
pop
imul
adc
jge
mov
iret
add
add
ds
daa
fisubrl
adc
rorl
cld
pop
enter
repnz
jb
sub
mov
push
adc
je
mov
mov
dec
dec
mov
cmp
or
shrl
cmpb
adcl
jmp
dec
stc
inc
add
outsb
in
jg
add
pushf
pusha
call
or
lret
pop
sub
or
in
pop
or
push
cmc
mov
cmpsl
add
xchg
push
dec
test
inc
pop
and
test
or
dec
or
cmp
lret
dec
push
mov
enter
xor
push
xor
sbb
pop
sub
dec
xor
prefetcht0
or
adc
inc
or
sbb
lret
lcall
sbb
adc
mov
repnz
push
xor
or
inc
repz
xchg
insl
ljmp
shll
nop
in
inc
adc
leave
daa
adc
mov
int3
push
shrl
or
inc
push
ds
xchg
add
fidivrs
lret
int
inc
push
adc
icebp
mov
mov
insb
ret
or
dec
fldt
sbb
outsb
mov
push
mov
jle
sub
notl
pop
sub
xor
dec
cli
adc
rcr
leave
iret
clts
sub
xchg
adc
cmp
in
adc
insb
cmp
mov
or
loope
sub
or
sub
mov
jp
pop
mov
push
xchg
ds
or
xor
xor
jp
push
cs
adc
xor
sub
xor
hlt
mov
inc
nopl
out
lret
xchg
insb
mov
inc
cmp
sarb
imul
pop
mov
shrl
sbb
and
and
fistl
repnz
mov
test
sub
mov
stc
scas
push
insb
adc
adc
add
push
sbb
and
rolb
lret
and
mov
out
and
scas
add
push
pop
inc
xchg
lods
or
cli
sbb
inc
adc
pop
xor
add
mov
rcll
cmp
and
inc
or
and
mov
roll
xlat
xchg
mov
mov
stos
mov
outsl
mov
mov
cltd
cmp
sub
inc
push
stos
mov
mulb
adc
fstpt
test
pop
stos
mov
push
jl
rolb
pop
sub
sbb
in
loopne
sbb
or
sbb
dec
sbb
xchg
dec
add
sahf
push
add
mov
pushf
push
sbb
in
mov
add
mov
jmp
adc
add
pop
xor
lahf
pop
dec
cmp
fadds
xor
xchg
aad
sub
adc
dec
lcall
xchg
and
cli
pop
jbe
mov
xor
mov
inc
les
adc
in
inc
adc
and
xchg
lret
sbb
xor
adc
lret
dec
leave
lods
stos
mov
dec
or
inc
into
add
inc
push
or
lcall
in
test
rclb
cmpsl
push
sarl
adc
push
rcrb
in
pop
gs
bsf
mov
pop
shrl
testb
sbb
sbb
imul
out
xchg
inc
push
push
stos
add
pop
inc
stos
xor
xchg
dec
push
sbb
cmp
xor
inc
adc
dec
rorl
pop
outsl
lock
pop
pop
add
push
fldcw
push
insl
inc
push
lock
sub
mov
or
popa
sub
dec
lret
ds
push
pushf
sub
imul
inc
imul
dec
loope
scas
inc
ficompl
add
sbb
push
in
lods
xchg
inc
or
test
lods
mov
and
xchg
mov
and
sub
cmp
cmp
fs
and
inc
lret
lret
adc
push
mov
lods
adc
dec
test
adc
jp
call
mov
mov
xor
sarl
or
jb
in
fidivrs
imul
aas
xchg
loopne
add
xchg
sub
mov
dec
insl
add
es
lret
add
mov
in
push
push
and
push
xchg
fwait
mov
add
lret
cmp
fucomi
sahf
in
fucomip
in
push
mov
ficoms
xchg
mov
adc
adc
push
add
loopne
bound
jb
std
fs
mov
stos
mov
das
popa
dec
mov
adc
or
sbb
mov
sbb
jge
push
sbb
push
push
inc
fmull
mov
bound
fwait
push
add
loop
xchg
or
sub
and
mov
insb
bound
add
and
pop
scas
jnp
and
mov
mov
sbb
imul
fcomp
or
push
inc
aaa
cmp
fs
inc
clc
stos
aas
xchg
bound
stos
into
pop
int
shrl
popa
stos
popf
xor
dec
inc
repnz
mov
sbb
movb
push
pop
sbb
pop
ds
and
sub
xor
and
mov
and
ds
lods
dec
dec
sub
push
cwtl
xor
push
dec
cmc
lahf
xor
mov
pop
mov
push
or
cs
jle
iret
sub
jecxz
and
pusha
sbb
dec
adc
sub
add
sub
ret
stos
or
fwait
dec
adc
addb
dec
pop
les
rcl
xor
sub
sub
add
or
shl
in
adc
adc
mov
sbb
push
fwait
mov
ret
mov
add
fs
mov
push
out
or
int
add
lahf
xchg
push
xor
adc
cld
sbb
retw
ds
sub
cmpsb
inc
subl
adc
add
or
mov
in
fcompl
cs
jno
sahf
sub
out
mov
ja
mov
fcmovnb
pusha
pushf
mov
inc
pop
xchg
or
xor
iret
push
mov
and
and
and
inc
imul
dec
xchg
push
dec
dec
dec
outsb
adc
xor
or
out
stos
sbb
outsl
insl
pop
inc
mov
ret
out
xor
je
leave
shlb
cwtl
enter
mov
int
adc
or
cmp
or
push
jp
jnp
cmpsb
pop
push
loopne
call
ss
and
rorl
sbb
pop
pusha
insb
dec
mov
jecxz
das
fcompl
outsb
cs
jmp
enter
loopne
xchg
push
adc
rcrl
je
adc
hlt
inc
lds
subb
mov
mov
push
cmp
and
mov
stos
imul
pop
mov
and
sbbl
and
dec
lea
push
cmp
es
push
or
scas
sbb
lods
mov
mov
pusha
orb
pop
int
adc
inc
xacquire
and
mov
nop
imul
mov
jle
xchg
cmp
cmp
jne
insl
cmpsl
dec
test
sarb
cmp
dec
or
inc
xor
lods
inc
xor
cli
mov
gs
or
or
sbbb
xor
lcall
subb
ret
mov
insb
dec
fidivl
mov
add
mov
adc
xchg
ds
jl
jecxz
push
mov
or
push
pop
adc
insl
ja
popa
leave
cmove
addr16
cwtl
push
scas
arpl
stc
shll
jno
sub
or
js
dec
xor
rcrl
add
and
out
lea
jo
lcall
xor
mov
or
adc
sahf
sbb
and
adc
jno
icebp
adc
out
out
push
jo
cld
xor
cwtl
push
mov
sbb
into
push
aad
ret
dec
add
ds
int
pushf
cld
pop
jecxz
xchg
je
adc
scas
fxrstor
dec
and
inc
mulb
mov
pop
out
cmp
adcl
and
or
inc
pop
sub
mov
int
xor
out
sahf
lcall
mov
push
cmp
add
xor
test
pop
pop
insb
popf
outsb
mov
popf
push
adc
sub
cmp
or
cwtl
shrb
push
xor
or
push
add
pop
cld
jl
rolb
push
cltd
sbb
pop
mov
push
scas
jp
push
test
sub
mov
stos
and
lds
sbb
xchg
imul
rorl
sbb
jno
mov
dec
scas
sub
out
insb
cli
push
mov
xlat
pop
adc
cmpsl
fsubs
out
push
test
pop
lcall
inc
dec
and
nop
jp
scas
dec
or
adc
mov
mov
or
insb
pushf
les
add
into
repz
pusha
jnp
inc
lods
pop
dec
jnp
in
xchg
inc
sbb
dec
or
pop
xor
jae
jle
xor
fldl
gs
frstor
mov
adc
mov
jo
cmpsb
test
push
insb
pop
cmp
and
xlat
cmp
inc
mov
int
dec
mov
dec
xlat
push
add
and
sub
popf
jnp
push
push
insl
jp
inc
mov
and
idivb
mov
stos
mov
sub
fisttpl
dec
scas
ja
sub
sub
mov
jl
popl
xor
sub
xchg
aaa
mov
fwait
popf
or
int
cld
or
or
push
inc
lods
dec
addr16
mov
or
in
pop
add
push
inc
imul
das
sub
and
inc
cmp
enter
push
or
sahf
push
pop
jp
sbb
pop
push
adc
or
dec
or
add
dec
cli
inc
jg
push
leave
jnp
add
addl
jl
jecxz
jle
incb
cld
mov
insl
lods
pop
or
imul
mov
inc
mov
mov
xor
dec
mov
xor
adc
sub
enter
push
adc
sbbl
or
push
lea
xor
dec
inc
dec
cmp
or
sarl
fs
mov
pop
dec
mov
scas
jnp
inc
and
std
cmpsl
mov
adc
and
dec
push
xor
cs
shlb
dec
cli
sub
daa
bound
adc
sub
pop
and
pop
pop
es
pop
push
mov
sbb
nop
js
dec
mov
mov
and
aam
dec
push
nop
aam
cmp
mov
std
mov
mov
stos
jns
in
push
decb
push
gs
cs
jno
mov
scas
sbb
int
ret
nop
add
pop
loopne
sbb
xchg
in
es
imul
xchg
adc
add
fisttpll
fldl
lcall
xchg
sbb
test
mov
sbb
fwait
and
incl
out
js
sub
sub
pop
add
enter
sbb
stos
xchg
push
adc
sbb
clc
repz
cwtl
push
out
adc
xor
dec
inc
push
jl
cltd
push
xchg
cmp
sbb
sub
ret
push
inc
ss
sub
mov
addr16
ret
xchg
add
outsb
jge
cmpsb
lods
scas
inc
outsb
outsl
int3
xchg
sub
out
out
fs
out
xchg
sahf
sub
in
popf
ror
inc
mov
loope
and
push
sbbl
insl
push
and
sbb
dec
mov
je
sbb
sub
cmp
adcl
mov
rcll
lahf
jo
push
dec
loop
in
dec
add
pop
xor
enter
sbb
mov
ds
mov
movsb
imul
xchg
or
inc
bound
jae
insl
sub
and
mov
mov
insb
inc
movsb
arpl
nop
inc
xchg
sbb
fsubrl
hlt
sbb
pop
mov
mov
dec
or
movsb
pop
jmp
sub
or
mov
testl
mov
push
dec
sbb
dec
jo
ret
aam
sahf
gs
push
scas
dec
aaa
movsl
push
adc
adc
rorb
out
inc
inc
xor
add
push
xchg
dec
je
cmp
mov
mov
int
mov
fsts
cmp
xor
or
xor
in
popf
lcall
mov
ljmp
popa
mov
and
stc
aas
jg
xchg
add
fwait
jne
gs
and
scas
cli
sub
movl
jmp
imul
mov
adc
adc
or
jns
gs
fstpl
push
int
out
pop
lret
push
mov
and
cld
push
cmp
insb
mov
mov
add
cmp
pop
mov
and
leave
mov
push
sbb
out
or
jp
add
sbb
add
dec
sub
push
pop
loopne
rolb
fildl
pusha
pop
nop
dec
lret
dec
sub
sbb
and
xchg
test
mov
nop
fiadds
fiadds
cmp
xchg
or
test
dec
push
ds
pusha
xchg
daa
or
inc
pop
cmp
loopne
movb
mov
das
gs
mov
insl
mov
mov
and
add
out
popa
out
fsubs
mov
loope
fisttps
jecxz
aam
or
mov
jle
add
shrb
rcrl
cs
ljmp
pop
sub
scas
lods
fwait
lcall
cmp
bound
aaa
ljmp
addr16
dec
inc
test
je
sub
mov
xchg
mov
xor
iret
jno
out
jbe
es
iret
in
in
int3
adc
and
fbld
fldt
enter
pop
cmpsl
mov
and
sahf
outsb
mov
inc
aad
nop
xor
in
jns
in
sbb
or
inc
dec
jl
or
int
xor
xchg
in
cmp
adc
enter
mov
dec
mov
sbb
mov
or
nop
inc
pusha
add
push
push
bound
mov
and
pop
mov
pop
cmp
pop
cmp
pop
xor
lret
mov
test
cmp
and
lcall
mov
add
out
and
push
inc
or
out
mov
orb
mov
dec
sbbb
or
test
shlb
stos
mov
cli
mov
addl
inc
cmpsb
dec
sub
mov
inc
data16
and
outsl
aas
pop
and
sbb
movsb
dec
scas
pop
push
and
leave
inc
push
and
aaa
push
cli
out
in
pop
sbb
cmp
jg
mov
lret
addr16
pop
mov
divb
push
mov
cmp
and
sub
jne
push
lcall
icebp
fimuls
pop
dec
xor
gs
imul
js
test
mov
mov
rol
cwtl
into
jns
jae
push
nop
incb
dec
fdivs
fwait
sbb
iret
jae
cmpsl
clc
scas
push
push
xor
lcall
push
insb
ret
pop
jl
inc
call
and
and
and
and
rorl
jo
negb
sub
mov
xchg
loopne
or
js
xchg
fistps
inc
shl
sahf
pushf
jo
outsb
test
pop
int3
xchg
cmp
fistpll
and
movsl
shrb
and
jae
fmul
push
mov
add
stos
jmp
sarl
lret
mov
add
dec
sub
jecxz
stos
leave
rorb
mov
mov
jge
rcr
and
cld
sbb
ficoms
pop
iret
mov
inc
xor
jns
add
les
sub
pushf
cmpsb
mov
test
mov
and
jge
imul
lods
mov
sub
push
bound
stc
push
stos
cmp
inc
dec
outsl
xchg
add
xor
xor
and
mov
jge
cmp
push
mov
xor
sub
int3
mov
push
scas
sub
mov
retw
dec
lea
mov
int
int3
addb
js
mov
jg
cmp
test
insl
fistps
or
cmp
or
sbb
inc
sbb
fwait
and
push
dec
push
pop
loop
pop
mov
xor
fwait
dec
inc
cltd
xchg
popf
fwait
cli
repz
aam
dec
jl
lea
jb
jo,pn
inc
dec
xor
je
pop
fiadds
push
pminsw
push
or
mov
cmpl
mov
jge
aam
inc
aaa
mov
cs
cmpsl
lahf
pop
and
xchg
in
into
and
orl
xchg
test
mov
mov
scas
xchg
daa
or
arpl
cmp
fcompl
push
or
mov
adc
ds
insb
inc
mov
sub
jmp
or
addr16
xlat
ret
xchg
or
les
movl
xor
push
dec
outsl
imul
repnz
mov
xchg
pushl
or
mov
mov
shrl
dec
sub
adc
ljmp
rol
pop
inc
or
sbb
push
dec
scas
repnz
fxch
pop
popl
add
insl
cmp
orl
adc
aaa
arpl
sub
test
mov
mov
cmpsb
cmp
sahf
cmpsb
jbe
mov
xchg
push
int
pushf
outsl
push
add
xchg
mov
nop
jnp
push
push
sub
mov
inc
add
out
in
sbb
inc
xor
sbb
out
sahf
pop
or
cltd
lock
rep
popa
jg
and
imull
sbb
inc
iret
sbb
icebp
mov
push
sbb
inc
and
pop
test
test
add
scas
push
jno
mov
sbb
dec
andps
movlps
or
dec
sub
dec
insb
test
loopne
inc
scas
push
dec
out
and
fs
fistpll
stos
sbb
inc
sbb
and
cmp
fucom
pop
ljmp
push
inc
fmull
mov
push
fwait
fs
xor
pop
dec
lret
inc
jne
or
mov
dec
sbb
dec
push
int3
mov
inc
test
dec
lods
pop
dec
mov
mov
and
xor
pushf
insl
jno
movsb
or
add
cmp
lahf
mov
popf
clc
push
faddl
jecxz
dec
test
and
add
push
jne,pn
js
pop
mov
mov
sub
cmp
scas
addr16
sub
or
sub
dec
insb
add
pop
mov
fwait
stos
inc
sub
sbb
dec
rcr
mov
or
inc
rorb
mov
scas
push
sbb
mov
je
xchg
inc
dec
add
sbb
inc
jbe
inc
ja
aaa
mov
lods
stc
jae
outsb
rcrl
aaa
sbb
aas
jae
fsubs
and
push
movsb
cmpsb
xor
addl
sub
or
aam
mov
cmpsl
out
daa
das
cmp
cmp
aad
mov
pop
sbb
jb
scas
int
xchg
icebp
insb
inc
dec
xor
aaa
pop
push
sahf
jbe
test
int3
fwait
add
andl
mov
and
inc
rolb
ljmp
fdivs
jno
pop
insb
dec
adc
ljmp
loop
iret
insl
jb
aam
test
xchg
cs
mov
and
inc
pop
ret
leave
iret
adc
ret
mov
je
lds
or
xchg
dec
or
or
adc
jno
into
mov
mov
adc
add
mov
pop
jns
jne
stc
jne
js
outsb
push
pop
test
pop
inc
push
push
cmp
pusha
jo
in
sbb
push
fs
popf
mov
inc
xor
insl
rcr
fisubs
sbb
mov
push
in
inc
mov
adc
rclb
mov
or
sahf
or
jge
cmp
mov
inc
mov
rcll
mov
sahf
sahf
dec
sub
subl
inc
add
dec
push
push
push
mov
adc
ds
pop
jle
push
fiadds
xor
sbb
scas
enter
inc
idivl
mov
sbb
inc
push
leave
jne
aad
sbb
and
sahf
test
xorl
int
jnp
xor
int3
push
lahf
or
mov
or
stc
or
and
jns
sbb
inc
push
xchg
inc
pop
lret
dec
mov
dec
xor
xchg
aaa
enter
roll
addr16
lea
sub
test
inc
jo
adc
jg
xor
enter
aad
add
and
push
dec
dec
insl
cmc
xchg
mov
scas
pop
push
lret
or
insb
mov
fistpll
cld
add
sub
jg
sbb
scas
dec
dec
cmp
and
inc
pop
jno
adc
insb
sub
dec
adc
add
push
ficompl
rdpmc
andb
fsubp
cmp
pop
pop
pop
mov
enter
and
into
push
xchg
mov
icebp
jp
mov
mov
into
cmp
push
lahf
add
sub
mov
jl
pop
frstor
scas
in
mov
sahf
in
lea
or
leave
inc
and
rcl
and
mov
pushf
mov
out
ret
xchg
out
dec
or
rol
push
or
les
jle
push
mov
loop
shll
mov
shll
or
push
repnz
inc
aad
push
push
out
mov
mov
dec
xor
pop
or
scas
sbb
push
and
cvtps2pd
sub
sbb
jp
iret
imul
pop
and
or
or
push
xor
push
mov
push
je
sub
es
adc
mov
mov
daa
adc
and
sahf
xor
inc
out
push
xor
sub
xor
sbb
jp
imul
es
adc
sub
mov
push
sbb
sbb
stos
cmp
mov
adc
adc
add
cmp
mov
sub
push
mov
sub
sbb
es
je
dec
and
pushf
ds
and
pushf
sbb
popf
sbb
fiadds
outsb
pop
lcall
sbb
push
or
dec
cmp
jb
and
and
or
sbb
fwait
xor
mov
adc
inc
and
pop
sub
cmp
or
push
ds
scas
or
lods
push
mov
iret
adc
mov
cmp
aam
adc
xor
sub
or
scas
mov
arpl
xor
es
cmp
and
inc
into
adc
pop
inc
sbb
daa
sahf
sbb
xor
mov
mov
js
sub
dec
shll
push
mov
ficoms
or
cmp
adc
push
sub
popf
and
daa
cvtpi2ps
add
outsl
sub
adc
dec
xor
cmp
mov
xchg
sub
adc
sbb
sub
and
fcompl
dec
lods
aam
mov
repz
mov
xor
cmpsl
mov
mov
aam
cltd
and
mov
repz
push
inc
loopne
jnp
sub
adc
dec
add
mov
xchg
dec
and
pop
push
movsl
outsl
fadds
pop
mov
bound
jnp
sbb
enter
and
insb
or
inc
xchg
shll
xchg
lcall
les
cmc
xchg
mov
test
outsb
ja
cwtl
xchg
aam
iret
dec
or
push
ds
imul
jae
mov
ss
and
or
jbe
loop
aaa
clc
lcall
fidivrl
push
clc
sbb
pop
adc
pop
cld
or
imul
push
add
lea
jle
cmp
sbb
dec
add
lret
cli
fistl
adc
outsl
jnp
in
cltd
push
inc
lods
jbe
sbb
mov
add
sub
fnstcw
cmp
xchg
sti
mov
inc
mov
push
jnp
orl
or
pop
repnz
and
dec
adc
jg
xchg
add
inc
shld
mov
mov
decl
add
or
sbb
inc
adc
xor
cld
and
ja
xchg
xor
add
into
insb
sub
scas
fsts
nop
xor
xchg
stc
xchg
orb
mov
xchg
cmp
push
gs
or
insb
add
jge
test
popa
push
or
mov
lret
mov
dec
int
xor
jae
incb
mov
cs
aad
jae
or
sbb
rcll
mov
cmp
hlt
test
mov
and
daa
cmpsl
and
les
jne
scas
stos
repnz
in
dec
dec
or
push
loopne
aam
mov
out
orl
arpl
aad
mov
add
xchg
jge
dec
xor
sbb
xor
dec
pop
dec
or
js
push
inc
aas
push
mov
mov
bound
pavgw
jl
sub
test
aas
in
je
aaa
mov
enter
adc
pop
aaa
mov
xchg
sbb
mov
pop
cmp
dec
outsl
pop
mov
and
jl
jmp
sub
push
ftst
and
dec
pushf
jae
dec
add
sub
push
sbb
es
iret
pop
fsts
pusha
or
sub
dec
and
xlat
out
push
xchg
and
adc
pusha
cli
xchg
mov
pop
inc
jne
sub
pop
mov
mov
push
adc
sub
lds
jmp
iret
mov
shll
test
xor
mov
mov
mov
and
mov
and
loopne
push
insb
fbld
xor
adc
das
pop
mov
fcmovnbe
sbb
or
fwait
xor
jno,pn
out
mov
jmp
or
mov
cmp
push
pop
push
add
adc
mov
movsl
in
jnp
inc
add
repnz
jp
lahf
sub
and
or
adcb
scas
pop
xchg
jle
or
mov
inc
maxps
cltd
daa
or
push
xchg
jmp
xor
pop
adc
adcb
push
dec
inc
fistps
testl
cmpsl
mov
inc
xchg
sub
insb
bound
adc
mov
in
test
pushw
sahf
fwait
das
int3
ret
test
loop
pushf
sbb
inc
or
data16
movzwl
sbb
mov
mov
adc
outsl
aad
and
jae
pop
shlb
jbe
or
pop
push
xor
inc
out
pop
ljmp
pop
push
mov
xlat
push
idivb
sub
jns
movl
jl
or
outsl
pop
repz
mov
xchg
push
insb
dec
or
lods
aas
aad
xchg
jnp
xchg
les
popa
and
mov
sub
cmp
daa
lret
and
gs
jnp,pt
sub
fdivrs
pop
inc
xor
jp
outsb
xor
sub
stos
inc
sbb
popf
enter
xor
mov
cmp
pop
push
cmp
add
jg
cmc
or
cmp
jp
cld
or
add
mov
adc
mov
in
xchg
pushf
jecxz
mov
push
inc
test
or
aad
gs
mov
mov
pushf
pop
jle
xor
mov
fwait
daa
cwtl
xor
dec
cwtl
mov
into
push
pop
pop
and
leave
mov
stos
cmp
pop
and
test
xchg
lock
sub
add
lret
inc
dec
inc
dec
cli
imul
in
and
push
sbb
xchg
out
add
sub
fsubr
pop
fwait
or
dec
jb
mov
popa
insb
pop
aam
out
or
push
addb
inc
inc
and
ja
jmp
xchg
lret
aad
jp
xchg
sub
pop
scas
rep
dec
dec
cmpsb
sub
or
insl
je
cmp
fucom
dec
lcall
inc
into
and
rolb
test
std
ljmp
mov
pop
roll
pop
push
xor
pushf
das
decb
inc
scas
popa
jecxz
out
or
inc
movsb
outsl
pop
daa
scas
mov
pop
arpl
into
popl
arpl
or
xchg
pop
dec
mov
aad
jg
clc
pop
sbb
jne
daa
mov
add
and
pop
adc
mov
out
xorb
leave
xor
adc
jns
mov
ljmp
test
and
out
insb
and
pop
lcall
mov
xlat
dec
test
lret
out
xchg
push
cmpb
mov
sti
cli
mov
out
jp
or
xlat
test
mov
mov
ljmp
scas
and
inc
push
and
and
lahf
and
cmpsb
pop
adc
insb
xchg
sahf
addr16
repz
sub
add
mov
add
aas
dec
jle
mov
add
fldcw
ret
test
push
sahf
and
mov
es
fmull
stos
cmp
cmp
xor
shlb
dec
dec
jns
push
pop
mov
cwtl
xlat
and
xchg
stos
inc
scas
fisubrl
rorb
add
lcall
fwait
push
mov
mov
cmpsb
inc
dec
test
cli
cs
insl
scas
inc
mov
or
add
ds
repz
iret
inc
sbb
adc
dec
add
cmpsl
adc
les
ret
pop
fsubs
cmp
jbe
into
test
xor
in
push
out
and
sub
push
imul
inc
fstps
mov
xlat
mov
lods
sub
and
inc
pop
mov
jg
and
sbb
rcl
or
lret
pop
mov
das
cmp
daa
mov
push
adc
insb
inc
inc
push
or
sti
test
adc
mov
sti
std
and
pop
sbb
adc
jl
outsl
out
popf
mov
mov
cmpsb
mov
sbb
xchg
sbbl
mov
adc
je
fadd
into
adc
pushf
push
mov
daa
xchg
hlt
cmp
rcll
jl
cmp
cli
pop
std
pop
xchg
fstpl
push
rcl
cs
add
dec
mov
mov
arpl
push
jae
add
ret
add
out
iret
dec
mov
icebp
mov
fisubl
mov
xor
lock
cs
ja
insl
scas
shll
movups
repz
mull
sub
icebp
int3
inc
xlat
repnz
fmull
lock
psraw
push
dec
or
scas
pop
cmp
sbbb
cld
cmp
or
push
shrl
adc
add
es
jp
ficomps
inc
mov
dec
cmpsl
insl
jne
mov
sbb
fdivrl
je
push
add
repz
call
sub
pop
or
xor
packuswb
pop
aaa
sbb
rolb
push
and
mov
or
and
mov
stc
sub
pop
and
rcll
mov
or
imul
and
inc
int
or
cltd
mov
or
jnp
jns
mov
adc
clc
pop
inc
jg
adc
adc
sbb
fisttpl
mov
mov
dec
or
cmp
rcrl
xchg
shl
xor
or
pop
jg
mov
data16
scas
sbb
pandn
aas
in
outsl
sbb
scas
loope
or
xor
fldcw
sbb
and
and
mov
sub
adc
or
dec
or
imul
xchg
sbb
push
push
into
mov
xor
or
pushf
adc
xchg
insl
add
cwtl
or
add
imul
arpl
sahf
xchg
xor
xchg
lock
int3
ljmp
leave
test
int
xchg
xor
and
in
shr
pop
or
inc
cs
test
in
scas
rolb
push
pop
jae
into
pop
lahf
dec
outsl
addr16
add
add
sbb
test
lret
push
popf
push
inc
and
mov
addl
jb
sbb
fwait
popa
mov
xor
mov
movsb
lahf
lock
or
push
inc
dec
dec
push
or
and
rcll
cwtl
mov
push
mov
jmp
insl
mov
push
loop
and
enter
jg
inc
xchg
test
add
enter
into
int3
jp
nop
mov
and
lret
adc
dec
cmp
push
sbb
sbb
push
add
mov
inc
cmp
std
outsl
sbb
add
pop
or
adc
mov
aad
pushf
pop
jg
ja
pop
inc
mov
outsb
pop
pop
test
dec
not
adc
push
sbb
push
stc
mov
add
xchg
stos
add
in
and
xor
cmp
and
inc
cli
adc
adc
mov
add
jmp
pop
lock
push
ss
xchg
pop
bound
pop
push
mov
sbb
jbe
xor
or
mov
pop
lods
sbb
repz
mov
arpl
addr16
and
mov
fidivrl
js
in
xchg
fisubs
xchg
and
xchg
xchg
xchg
or
sbb
aaa
in
sub
ljmp
call
mov
push
aam
pop
aam
push
or
in
xor
or
scas
lahf
sbb
xor
dec
outsb
outsl
jno
sarl
sub
jp
jmp
insb
or
aam
inc
pushf
push
adc
mov
or
mov
dec
dec
add
imulb
shll
insb
jp
and
std
xchg
fs
int3
add
outsb
lahf
xchg
arpl
rorl
sti
test
shll
xchg
sarb
cs
xchg
cmp
sbb
mov
dec
aaa
jl
test
push
sbb
xchg
dec
push
lods
mov
sub
pop
xchg
mov
xrelease
movsb
fucomi
nop
rcrl
mov
outsl
mov
test
jbe
test
xchg
fldt
mov
sbb
mov
out
lret
stc
pop
pushf
mov
rcrl
or
sti
pop
ds
ljmp
add
adc
cmp
and
iret
fldlg2
lcall
xor
ljmp
push
xor
dec
jo
jne
xor
mov
mov
mov
dec
sub
cmp
jl
push
in
lret
inc
popl
adc
mov
adc
test
sbb
and
xor
ja
cmp
or
test
repz
xor
add
scas
inc
adc
and
icebp
insl
push
int
mov
int3
aas
xchg
pop
outsl
lds
andl
adc
jbe
push
adc
add
rcl
xchg
add
stc
or
cmp
and
fistl
ja
inc
lahf
mov
aad
dec
das
xor
push
xor
iret
dec
cmp
ror
test
or
cmp
imul
addr16
in
xchg
je
and
int
adc
btr
mov
pusha
lret
dec
mov
pop
hlt
push
sub
loop
insl
insb
mov
icebp
add
add
in
mov
push
pmuludq
popa
pop
sbb
scas
sahf
or
mov
mov
test
xorl
leave
test
or
pushf
dec
mov
insb
out
lret
arpl
xor
dec
sbb
outsl
dec
push
jnp
inc
icebp
jge
fbld
jle
cmp
jle
cs
inc
in
int3
xor
bts
xchg
mov
stos
test
jne
mov
into
sbb
pop
inc
sbb
popf
sbb
mov
das
xlat
or
push
loop
iret
inc
jge
mov
jle
cmp
out
xchg
lahf
pop
stc
fmuls
movsl
sarl
leave
mov
xor
xchg
enter
sarb
mov
or
hlt
das
or
xchg
mov
cmpsb
mov
in
imul
sbb
int
mov
mov
mov
jbe
jns
orl
jle
cmp
test
aas
popf
or
cs
fwait
or
or
push
and
aas
pusha
xor
inc
ss
aam
in
stc
mov
mov
cmp
dec
xor
js
into
lret
or
lahf
pop
mov
les
xor
adc
fisubrs
jecxz
lret
push
push
cli
movsl
pop
mov
and
or
clc
mov
cmp
fstl
adc
push
or
mov
push
sub
ficompl
sahf
lods
and
sub
pop
es
and
mov
mov
arpl
vunpckhps
mov
cmp
lahf
int
cmp
and
pop
testl
or
dec
mov
cli
xchg
mov
cmp
dec
fisubrs
imul
call
int3
push
rorb
adc
das
dec
mov
xchg
imul
push
cmp
or
adc
sub
shlb
outsb
or
sub
stos
xor
cwtl
push
or
inc
push
movsb
mov
sbb
add
fisttps
imul
es
dec
and
and
or
stos
xchg
fiadds
leave
daa
mov
jae
xor
xchg
add
and
inc
adc
stc
xlat
fbstp
inc
sbb
imul
xor
cmp
push
jb
test
cmp
xlat
and
mov
adc
add
mov
inc
xlat
inc
mov
lea
test
mov
mov
cmp
or
rdtsc
and
and
cwtl
sbb
xchg
xchg
push
push
insl
int3
cltd
out
test
faddp
inc
push
cmp
dec
adc
es
leave
iret
call
jo
add
lock
add
lret
fwait
outsl
cs
push
lret
dec
test
adc
fnstenv
scas
out
ja
push
mov
loop
sub
std
inc
mov
in
mov
pop
adc
shl
jnp
or
out
sub
sub
movsb
sub
xor
stc
push
mov
pop
and
ja
fidivl
add
push
xchg
or
jns
std
cmp
push
cwtl
inc
and
test
mov
mov
imul
adc
mov
leave
loopne
sub
xor
pop
or
int
push
mov
mov
add
lret
mov
push
xchg
sahf
ja
jo
adc
dec
in
xor
mov
lds
cmpsb
sbb
add
push
xor
leave
outsl
frstor
rorb
orb
das
xlat
das
mov
pop
shll
lcall
jnp
and
jge
xchg
sub
ds
push
loope
ljmp
xchg
and
das
pop
and
test
mov
fld
jl
into
and
xchg
scas
adc
outsl
movd
pop
push
and
sbb
xor
mov
getsec
iret
add
mov
adc
xlat
lret
je
aaa
xor
push
into
leave
mov
sub
xchg
xchg
pop
push
movsb
faddl
cmp
inc
push
les
in
sub
and
insb
rclb
dec
lret
mov
dec
in
insb
stos
jbe
inc
sbb
aas
scas
fstp
ret
and
and
in
and
scas
lods
or
nop
and
imul
mov
adc
jnp
jns
inc
aas
push
push
fiaddl
xor
dec
outsb
repz
or
add
pusha
push
insl
adc
or
mov
or
push
mov
add
push
mov
push
xor
mov
add
cmp
bound
and
ljmp
sbb
scas
and
popf
push
or
or
mov
outsl
shll
sub
and
xchg
into
xor
dec
mov
or
mov
imul
mov
mov
cs
stc
out
push
dec
jmp
sahf
mov
fmulp
mov
dec
adc
lret
push
sub
imul
and
sub
sbb
adc
and
prefetch
sbb
int3
add
mov
cwtl
cmpsl
fcomps
and
ss
daa
pop
mov
insb
add
pop
int
mov
adcb
pushf
mov
mov
add
pop
mov
adc
mov
fmuls
repz
ljmp
or
xor
sahf
or
jl
or
out
xor
push
mov
inc
stos
dec
bnd
je
cmp
cmp
stos
inc
sub
mov
data16
add
pop
adc
mov
mov
stos
adc
fbstp
repnz
mov
in
jb
sub
xchg
or
fdivs
and
adc
lcall
inc
xor
out
xlat
xor
cmp
std
push
push
gs
stos
sarl
sar
lret
fs
mov
add
aam
les
mov
mov
mov
mov
sar
push
dec
cmp
dec
mov
xor
enter
stc
aam
xchg
xchg
xchg
or
mov
stos
dec
inc
push
inc
rcl
push
pop
cs
mov
dec
cmp
pop
xor
push
pop
and
add
ret
adc
jno
js
push
orl
fcompl
xor
pop
sbb
push
mov
int3
adc
lret
fcmovbe
adcl
and
jne,pt
lea
sub
sbb
bound
mov
add
ja
pop
aad
adc
xor
imul
into
outsb
xchg
push
inc
je
popf
dec
adc
imul
std
int3
sub
add
sub
dec
out
adc
xor
or
xchg
add
fs
mov
adc
lcall
mov
dec
and
xchg
dec
mov
or
js
or
je
mov
lcall
negl
push
inc
sarl
stc
out
dec
mov
dec
push
pop
jnp
dec
inc
pusha
inc
mov
mov
sub
dec
dec
es
fs
bound
iret
stos
lret
dec
xchg
dec
fsubs
jo
add
mov
hlt
es
popf
fs
rcrl
popa
add
xor
data16
stos
fbld
and
xlat
xchg
and
pop
sbb
je
jp
cmp
and
add
lcall
xchg
jne
cmp
add
sbb
dec
test
int3
ret
scas
xchg
sbb
cli
push
jae
push
icebp
std
jp
stc
cmpsb
arpl
sub
pop
add
xchg
aaa
rcl
mov
and
xchg
jp
push
insb
ret
jno
lahf
inc
js
orl
aad
js
pop
stc
lock
jne
dec
sbb
inc
lret
jecxz
roll
mov
mov
cmpsb
movl
js
adc
sub
js
xchg
adc
rolb
cli
sbb
ja
test
lds
and
in
and
je
stos
cmpsl
jmp
imul
sub
xor
fcomps
sub
in
or
or
xchg
pop
lcall
jae
mov
or
or
test
cmc
dec
mov
pop
scas
xor
or
ds
mov
push
fs
fists
cs
in
pop
jae
push
xchg
data16
sti
das
and
jle
icebp
or
add
lods
pop
fidivrs
mov
adc
add
int3
out
cs
mov
inc
cld
or
stc
and
insb
push
xchg
les
sahf
mov
push
sbb
into
add
leave
mov
ss
add
xchg
adc
or
jge
decb
push
push
fs
add
pop
sbb
mov
scas
ror
xor
cmp
sub
dec
insl
out
push
test
mov
mov
inc
jp
stc
xchg
adc
test
ljmp
xor
add
lret
test
lcall
pop
fcoml
mov
loop
sub
pop
mov
mov
mov
pop
int
add
sbb
mov
repnz
or
jae
aas
adc
mov
ljmp
inc
mov
jge
mov
add
jo
push
add
test
pop
or
lock
pusha
mov
loope
push
mov
mov
or
xor
test
or
movsl
cmpsl
push
push
inc
insl
loopne
sarb
cmp
addb
shr
xor
mov
pop
loopne
and
or
and
in
adc
in
cmp
ret
enter
adc
sub
dec
inc
push
and
sbb
push
mov
xchg
adc
xchg
cs
mov
pop
fistpl
pop
add
loope
fwait
ljmp
addr16
cld
push
out
inc
outsb
inc
push
xchg
adc
and
aad
int
loope
mov
in
pop
xlat
inc
adc
xorb
xchg
adc
test
scas
mov
adc
push
in
push
pusha
inc
pop
pop
and
cmp
jne
inc
aad
lock
jp
cli
into
cltd
pop
jbe
je
lock
and
and
cs
loopne
jae
adc
mov
push
cmp
inc
divl
inc
es
sbb
mov
roll
outsb
dec
sub
pop
loop
mov
push
and
shrl
leave
mov
adc
cmp
pop
imul
scas
repz
mov
addb
es
inc
or
out
push
scas
imul
js
outsb
dec
adc
push
daa
push
mov
xchg
roll
pop
repz
sbb
adc
mov
cs
jl
test
and
jge
cmp
mov
mov
das
and
mov
sbb
cmp
int3
jns
repnz
mov
jl
js
stos
data16
and
add
xchg
add
movsb
in
xchg
lret
fists
xchg
push
les
insl
dec
repz
lret
jbe
test
in
cwtl
and
in
push
movsl
sub
cmpsb
or
loopne
bound
pop
mov
push
or
xchg
push
and
inc
xor
mov
xor
je
xor
pop
cmp
xor
adc
gs
mov
xchg
or
clc
xchg
test
aad
adc
pushf
and
fsts
mov
lcall
cmp
sahf
das
add
dec
shrl
dec
adc
insl
add
adcb
mov
insl
popa
int
lods
into
outsb
xchg
add
sbb
xchg
insb
sub
ja
sub
mov
sbb
add
pop
in
sbb
and
mov
imul
fs
push
movsl
adc
jne
cmp
sti
mov
fiaddl
jno
sahf
xor
stos
ds
dec
mov
add
stc
lret
lret
in
and
ret
jecxz
inc
or
pop
cmp
and
and
aas
push
sbb
push
push
lods
jle
adc
and
insl
test
xor
sbb
and
or
pusha
mov
mov
cmpsl
jnp
int
mov
or
and
aad
push
pop
es
cwtl
shlb
cmp
adc
mov
test
jae
and
sbb
inc
mov
and
pop
sbb
jl
cmp
jo
imul
cs
data16
and
adc
jb
pop
and
data16
lcall
aad
cmp
dec
or
ss
cs
cmp
sbb
fisttpll
fcompl
sahf
or
dec
mov
xchg
push
add
jno
mov
repnz
test
add
mov
int3
or
xor
mov
mov
or
mov
push
fisttps
insl
jecxz
stos
fmuls
jle
xchg
or
jo
push
imul
sbb
dec
adc
mov
test
xchg
jmp
inc
jo
xor
inc
fs
xchg
sbb
les
ja
js
sbb
dec
inc
add
mov
pop
out
mov
scas
xor
dec
and
lcall
sbb
aad
and
inc
cmpsb
pushf
cwtl
xlat
mov
test
cmp
shll
inc
ss
jge
std
inc
push
mov
adc
pop
lods
imul
add
xchg
out
sbb
cmp
ds
je
pushf
rolb
sbb
pop
jo
loopne
fcomi
adc
imul
cmp
test
adc
lret
xor
adc
xchg
pusha
jnp
push
fisubs
lods
xlat
mov
xchg
sahf
lcall
adc
xchg
mov
ret
test
mov
jecxz
clc
sub
and
mov
adc
xchg
or
sahf
mov
mov
jmp
jge
sbb
aas
or
mov
mov
xor
popf
mov
inc
ret
shlb
sub
or
jno
mov
adc
xor
or
jecxz
cmp
out
pshufw
mov
add
ljmp
inc
and
mov
or
mov
and
imul
push
inc
mov
mov
adc
push
ja
adc
push
adc
push
xchg
sub
stos
inc
mov
ss
and
stc
xor
mov
adc
inc
aad
fadds
insl
add
xchg
aam
xor
scas
mov
into
stc
scas
outsb
xor
mov
mov
imul
out
test
xchg
dec
and
pop
arpl
adc
punpckhbw
push
insb
or
and
xorb
out
icebp
mov
into
lcall
pop
sub
mov
pushf
cli
sbb
data16
sbb
addb
xchg
das
and
jmp
mov
dec
pop
arpl
fwait
mov
xor
jl
lret
aam
addl
into
inc
xor
adc
cmc
jecxz
out
addl
test
hlt
jmp
sahf
pop
scas
dec
sbb
pushf
mov
pop
cmp
or
lcall
and
sub
cmp
in
gs
pop
add
and
add
fbld
dec
sbb
and
push
adc
adc
in
sub
mov
push
jno
mov
sub
cmp
push
or
and
jle
ficomps
or
xchg
jo
test
cld
sub
cmp
jp
jmp
adc
movsl
pop
push
lock
ds
push
loop
and
or
add
mov
jge
ljmp
enter
sbb
cmpsl
imul
push
imul
inc
push
mov
jecxz
push
popl
mov
pop
or
sbb
dec
mov
xchg
jne
pop
jle
jmp
xor
repnz
mov
je
jae
xchg
mov
jb
dec
dec
imul
inc
clc
jmp
test
popl
adc
dec
repz
sti
add
gs
sbb
jp
jmp
jno
jo
sub
fs
shrl
dec
cmp
rorl
mov
cmp
adc
mov
jle
or
sbb
daa
lods
jp
fsubrl
inc
add
lret
ds
pop
mov
mov
andb
ret
faddl
mov
or
inc
ret
mov
ret
scas
jae
xor
call
fcoms
cmp
and
xchg
inc
test
xchg
xchg
stos
pop
adc
mov
repz
fwait
or
pusha
xor
pop
pop
push
outsb
in
sub
sbb
cmp
push
setns
outsb
sbb
sahf
ror
mov
ret
cmp
in
mov
add
imul
testb
out
mov
inc
inc
sub
xchg
out
xor
rclb
outsl
jge
inc
cmovb
push
stos
or
adc
js
dec
add
pop
pop
dec
mov
cltd
push
sub
dec
int
ljmp
mov
arpl
inc
inc
pop
pushf
sbb
xlat
shll
fcoms
js
push
in
adc
dec
iret
pop
test
push
cs
adc
mov
and
jge
cltd
aas
cmp
aaa
mov
dec
jo
lahf
in
int
pop
and
or
cmp
scas
add
ljmp
pop
xor
fists
mov
push
sbb
insb
data16
addr16
roll
lahf
cmp
ja
loope
out
xchg
and
dec
pusha
add
cmp
test
cmp
loope
sbb
int
ljmp
shlb
push
into
ljmp
hlt
sub
cltd
xor
pop
xor
push
loope
mov
stos
pop
lods
adc
sbb
out
rclb
insl
xor
stos
lods
push
and
popa
ret
imul
test
ret
mov
leave
sahf
leave
add
push
mov
mov
jp
out
enter
scas
push
mov
cmp
arpl
insb
les
addl
cmp
jbe
add
sbb
pop
dec
je
and
xchg
ljmp
mov
fsubrl
xchg
mov
dec
nop
pop
push
insb
rorl
jne
push
sbb
cwtl
leave
xchg
das
fnstcw
or
cmpsb
sti
testl
arpl
cmp
dec
cmp
adc
icebp
xchg
fldenv
adc
and
cs
inc
xlat
mov
insb
adc
pop
inc
or
inc
add
jno
sarl
cmpsb
dec
js
push
mov
rep
lret
das
xchg
sub
and
jl
sarl
mov
pop
mov
shlb
add
adc
pop
out
enter
push
jl
enter
mov
fmull
scas
cmp
or
ds
push
pushf
aad
fdivrs
mov
push
int
mov
mov
stc
and
xchg
xor
cmc
fwait
icebp
push
or
arpl
dec
pop
scas
loope
jns
sarl
adc
ret
out
push
inc
lret
and
imul
or
mov
adc
pop
cmp
ret
add
sbb
cli
je
push
and
add
or
jb
cmp
mov
sbb
sub
jo
push
js
aam
jmp
mov
ds
pop
push
xchg
mov
push
out
adc
pushf
mov
sub
and
cmp
mov
jp
mov
push
sub
add
ret
into
jns
inc
cmp
mov
inc
sbb
and
inc
outsb
data16
arpl
xchg
mov
add
mov
ss
cwtl
insb
test
add
jl
movsb
int3
cmp
push
imul
add
stos
in
hlt
jns
ja
lock
addb
clc
push
shrb
push
sub
cli
sbb
xorl
repz
and
aaa
outsl
int3
pop
loopne
dec
cld
pop
dec
int
adc
mov
cmpsl
sbb
lods
sbb
cltd
mov
fmull
and
inc
cmp
sahf
xchg
add
lret
int
out
mov
cmp
xrelease
push
pop
xchg
mov
jae
adc
jecxz
push
lods
xorl
xchg
loopne
sub
pop
dec
lahf
and
or
push
xor
mov
in
cli
and
lahf
mov
scas
mov
xor
push
scas
popf
cmpsb
insb
jo
mov
pusha
cmp
cmpsb
repz
aas
stos
repnz
test
nop
xchg
sub
repz
stos
jecxz,pn
in
addr16
negb
xchg
and
loopne
stos
inc
sti
popa
dec
xchg
jle
insl
outsl
int
or
scas
sbb
enter
inc
push
jp
or
imul
jb
xchg
or
frstor
dec
inc
mov
test
pop
insl
mov
loope
daa
push
lock
add
sarl
xchg
repnz
aam
jp
sbb
insb
mov
mov
lret
mov
xor
movsl
sbb
scas
jae
in
and
jecxz
in
dec
mov
mov
sbb
or
cmp
in
add
jbe
cmp
or
pop
pop
mov
popa
push
mov
adc
xor
xchg
clc
jl
push
lcall
int3
or
and
mov
scas
cmp
push
inc
int3
es
xor
aad
enter
or
jg
or
repz
inc
pop
mov
testb
fcoms
pusha
or
sbb
stos
loop
inc
jo
lret
xor
pop
enter
jb
pop
adc
mov
mov
pop
push
jecxz
leave
push
dec
fdiv
xchg
dec
hlt
pop
add
test
test
in
pop
dec
lret
mov
imul
inc
rcll
and
xchg
mov
ja
adc
inc
inc
pop
push
xor
leave
out
dec
rclb
jnp
insl
sbb
ret
adc
mov
sbb
cmp
insb
sub
test
xchg
xchg
sub
jnp
test
push
gs
mov
xor
popa
xchg
push
insl
push
or
lahf
xchg
in
insl
outsb
cmpsl
enter
inc
sbb
mov
mov
sub
xlat
push
sbb
or
scas
cmp
and
cmp
cmpsl
iret
and
daa
andb
roll
and
popf
out
or
or
jnp
pop
aaa
cmp
push
jno
sub
sbb
jae
fcoml
jl
in
sarb
xor
int3
ss
xchg
and
mov
lcall
inc
scas
je
xchg
mov
frstpm(287
icebp
xor
cmp
popa
adc
mov
jne
fmull
in
paddusb
dec
ljmp
call
jne
cmp
add
mov
add
adc
adc
xor
jle
loopne
or
mov
xchg
mov
hlt
push
pop
xchg
js
scas
sbb
int3
or
cmp
and
in
xchg
xchg
jb
xchg
inc
stos
inc
shlb
dec
les
das
jle
scas
or
gs
mov
daa
inc
icebp
cld
pop
fwait
stos
inc
or
je
jnp
popf
cmp
fsubrs
mov
sub
cs
loop
daa
orl
xchg
ficomps
add
inc
insb
popa
pop
push
iret
std
lods
leave
out
mov
cmpsb
je
in
fwait
fs
mov
and
sti
fdivs
cmp
dec
xor
sub
mov
jae
push
jp
jl
faddl
out
fstl
sbb
cmp
mov
out
addb
pop
jns
loope
mov
xchg
push
out
pop
and
lahf
or
inc
popa
inc
xchg
lds
mov
out
lea
adc
adc
jno
add
fxch
or
mov
mov
and
and
cmp
mov
fcmovb
pushf
ljmp
xor
fisttpl
bound
jns
aas
out
imul
js
int3
add
push
and
mov
insl
mov
inc
enter
clc
rcrl
mov
mov
push
inc
inc
stos
imul
pop
push
cmc
wrmsr
in
and
test
xchg
cmc
addb
dec
jo
or
push
mov
sub
mov
push
or
mov
inc
into
out
cs
add
pop
sar
jbe
cmp
xor
and
dec
call
mov
sbb
popf
inc
jbe
subb
enter
nop
lods
ja
gs
imul
inc
mov
mov
leave
dec
mov
push
sub
mov
xor
mov
imul
out
imul
jp
xlat
cmp
dec
or
xchg
pusha
and
jbe
inc
out
mov
scas
pop
repnz
das
pop
sub
sbb
icebp
ret
xchg
adc
popa
cmp
in
push
sub
pop
xor
adc
xor
sub
and
cld
fldt
mov
je
int3
aas
cmp
rorb
cs
adc
inc
hlt
sbb
pop
jecxz
fwait
and
leave
frstor
cltd
daa
cmp
adc
lret
loop
repnz
mov
repnz
jo
adc
repz
pop
xchg
push
xchg
insl
shrl
xchg
mov
xor
jecxz
clc
add
xchg
in
push
add
mov
stc
jl
int3
setns
mov
js
clc
cmp
and
mov
test
xchg
mov
jecxz
es
pmaxub
cmp
sbb
adc
push
inc
out
add
cmp
xchg
cmpsl
mov
cmc
and
ret
xchg
add
add
pop
dec
cmpsb
lret
dec
dec
cwtl
jbe
mov
in
outsb
pushf
andl
and
lahf
aas
inc
adc
mov
inc
mov
mov
pop
mov
pop
stos
dec
insl
xor
iret
push
xchg
cmp
repnz
xlat
rolb
dec
sub
cld
movsb
pop
cmp
cmp
add
sub
repnz
adc
adc
movsb
out
mov
nop
inc
popf
arpl
jecxz
jbe
out
pop
jae,pt
cltd
inc
movb
pop
mov
daa
and
sub
jge
aam
adc
cmpsl
cmp
xor
int
add
sub
mov
mov
mov
inc
ss
lahf
push
mov
fimuls
cmp
insb
imul
lret
sub
add
aam
cmc
xchg
stc
fstl
rorl
and
into
inc
repz
sub
ja
ret
inc
jbe
and
jg
push
sahf
mov
adc
pop
mov
aad
pop
test
push
rcrb
mov
mov
and
sub
push
pop
cmc
add
lds
fisttpll
mov
dec
lahf
in
imul
lods
pop
add
mov
dec
lds
mov
jo
jne
bound
sub
xchg
jns
pusha
int
mov
xchg
mov
mov
into
stos
cld
ret
jle
sub
jo
push
xor
add
push
mov
clc
adc
adc
insl
pop
jg
in
push
jb
scas
xchg
mov
add
movsl
insb
push
inc
into
ds
stc
mov
sbb
movsl
cmp
ds
iret
xor
mov
mov
and
adc
cmpsb
roll
scas
cmp
push
cmp
mov
insl
or
dec
push
lret
jle
mov
mov
and
fwait
xor
jne
loope
or
js
into
fs
fwait
call
fstpl
shrl
and
dec
dec
inc
lds
push
daa
push
jg
pusha
xor
mov
mov
lds
xor
cmp
sub
mov
stos
pusha
int3
xor
ds
dec
cmp
clc
arpl
xchg
xor
jb
call
aas
push
dec
call
jb
cltd
sub
cs
shll
pop
push
cmp
insl
jbe
stos
xor
push
shrb
test
mov
inc
jp
mov
jle
insb
or
or
add
sarb
imul
mov
fdiv
or
cmovb
jo
push
mov
sbb
cld
enter
and
sbb
mov
imul
imul
lock
mov
icebp
and
sbb
mov
push
sub
insl
pop
addr16
and
aad
les
push
nop
sub
test
sub
mov
dec
cmpsb
vmulpd
lahf
adc
jle
mov
cs
testl
pushf
sbb
sub
add
xchg
pop
jge
dec
cltd
cs
add
cmp
pop
xchg
sub
pop
mov
aad
jle
xor
adc
add
add
mov
mov
and
insb
pushf
and
or
mov
loopne
decb
add
les
add
rcrb
fistpll
test
mov
scas
xor
shll
ds
adc
lock
xlat
mov
add
cmpsl
mov
mov
popf
sbb
xor
dec
in
fisubs
add
sti
es
ja
jge
jecxz
enter
icebp
push
mov
cmpsl
xchg
or
jns
adc
dec
stc
popa
lcall
add
fcmovbe
pop
add
mov
fldenv
or
sub
add
loop
imul
sbb
mov
xchg
adc
bound
mov
pop
mov
cs
out
sub
mov
mov
pop
repz
into
or
push
mov
sub
pop
insl
pushf
adc
aam
jae
jnp
push
leave
lret
mov
nop
daa
out
pop
cld
dec
or
insl
imul
ds
cmp
pop
sub
ljmp
sbb
movsb
sub
sub
das
jmp
int
push
mul
sub
sbb
loop
ss
push
adc
pop
sti
mov
jl
pop
mov
xor
daa
push
mov
icebp
adc
int3
frstor
cli
repnz
loop
insl
test
ja
shrl
cmp
jmp
pop
push
xor
mov
cs
pop
ret
and
or
lret
stos
inc
repnz
mov
stos
cmp
sbb
xor
out
add
mov
inc
or
jno
call
mov
adc
sbb
and
popf
adc
popf
out
dec
push
mov
push
lret
inc
int
mov
pushf
ss
mov
cmp
imulb
shl
adc
cmp
out
stc
cmp
jns
xchg
shl
ja
nop
imul
outsl
in
cltd
pop
add
mov
ja
and
jmp
xor
mov
stc
and
hlt
scas
dec
into
les
mov
jp
xchg
test
data16
mov
jae,pn
mov
jecxz
dec
add
mov
insb
stos
add
and
mov
outsl
inc
jle,pt
adc
and
mov
and
scas
js
adc
daa
fsubl
fistps
das
cmp
roll
nop
jg
cmc
and
stc
popw
push
and
leave
mov
in
into
cwtl
js
lahf
xchg
fldt
jecxz
mov
popa
push
mov
push
js
pop
push
sbbb
repnz
push
mov
test
pop
mov
and
xor
fstl
xor
jb
add
ds
jp
inc
inc
push
enter
jno
and
jl
hlt
das
adc
dec
push
add
outsb
cmp
repz
mov
cmp
stos
daa
or
insb
int3
das
js
stc
sahf
xchg
sub
dec
dec
adcb
mov
jmp
lock
sahf
jo
mov
cmc
dec
and
and
out
and
mov
dec
xchg
int
clc
cmp
pop
inc
pop
push
outsb
add
jae
mov
jecxz
pop
les
int
out
fnstcw
dec
pop
outsb
add
sub
fs
insb
cmp
rcrl
in
repz
or
and
scas
int3
push
inc
int
cmp
add
sbb
xor
push
scas
or
jle
sub
pop
cmc
shrb
es
outsb
mov
fs
add
dec
mov
fsubrs
cmp
sbb
clc
dec
mov
sbb
fldenv
or
nop
jns
cld
xor
inc
mov
sbb
and
int
add
cmp
aad
dec
adc
adc
sbb
xor
push
cmc
mov
jbe
lahf
xlat
cmpsb
add
rcll
push
insl
cs
mov
push
push
cltd
pop
adc
mov
loope
add
movsb
xor
data16
sub
fistpll
hlt
pop
insb
pushf
cmpxchg
scas
xlat
fidivs
push
lahf
jl
adc
mov
inc
mov
dec
add
jbe
mov
test
ja
inc
cmp
cmpsl
lahf
mov
rorb
popa
arpl
cwtl
add
xor
pop
ror
or
jno
movsl
sub
jnp
adc
pop
xchg
xchg
or
adc
sub
icebp
pop
lea
scas
hlt
push
aam
jmp
dec
sbb
movsb
lods
fisubs
and
cmp
lcall
push
sti
dec
mov
xchg
hlt
icebp
mov
xor
xor
movsl
addl
cmp
or
rorb
mov
jbe
pop
push
sti
sbb
loopne
neg
push
mov
fisttps
xlat
adc
cs
and
test
filds
shl
scas
push
imul
test
mov
inc
push
add
aaa
movsb
sarb
push
xchg
lods
add
mov
xchg
ja
mov
mov
stos
xorl
dec
shrl
stos
adc
mov
pop
push
sarb
jg
jl
dec
add
shrb
lahf
je
mov
or
orb
enter
lahf
insl
mov
pop
js
imul
mov
shlb
stos
les
lahf
shrl
fs
sti
adc
int3
inc
fsts
sub
dec
sub
cmp
sbb
out
mov
in
and
mov
xchg
mov
rolb
mov
mov
das
mov
xlat
test
xchg
or
adc
in
shlb
add
lock
mov
sub
xchg
das
adc
cld
and
sub
sbb
mov
and
push
test
push
or
mov
out
lock
pop
sub
and
clc
cwtl
mov
mov
cmp
pop
enter
rcrb
inc
push
addr16
and
fs
jo
mov
cmp
adc
into
stc
stos
or
lea
sahf
mov
cmp
add
pop
mov
sub
sub
xchg
sahf
and
inc
inc
into
stc
xchg
mov
jg
loopne
out
ret
cmp
dec
mov
aad
in
or
push
mov
ljmp
fstpt
ror
imul
and
inc
or
push
pop
sahf
add
sub
fdivrs
pop
outsb
xchg
sbb
orl
push
xor
mov
ja
test
jecxz
or
rol
push
push
adc
pop
jb
mov
fildl
cmp
lret
addr16
mov
fildll
push
pop
sti
ss
mov
sahf
lcall
mov
push
cmc
pushf
adc
sub
in
mov
into
insb
pushf
add
mov
sbb
jle
loope
sbb
add
outsb
movsl
mov
mov
ds
and
mov
dec
jo
push
cwtl
sub
mov
insb
stc
setae
gs
out
mov
pop
and
xor
or
cmp
insl
fcmove
test
push
jl
lods
shl
mov
popf
adc
das
fnstcw
enter
xor
pop
add
repz
mov
dec
out
add
cmp
rcl
inc
add
test
adc
test
outsl
hlt
lods
pop
cmpsl
repz
cmp
sub
or
inc
scas
adc
cmpsl
sbb
or
inc
mov
sbb
adc
in
dec
or
lahf
or
mov
sub
and
out
mov
fwait
adc
or
in
pop
mov
xor
nop
fidivrl
xlat
sbb
jne
add
jne
std
pop
jae
xchg
and
xor
out
lock
test
clc
leave
lea
stos
fucomi
xchg
das
mov
sbb
and
xor
dec
push
fidivs
add
outsb
call
jp
daa
inc
or
inc
ret
ret
lods
inc
xchg
into
clc
out
xchg
jl
std
inc
bnd
sub
push
stos
in
in
stos
cmp
out
jmp
loope
or
rcll
or
bound
adc
movsl
mov
add
pusha
in
repz
mov
inc
pop
add
cs
jae
sbb
xor
enter
adc
cmp
shrb
or
mov
std
dec
cs
or
push
xchg
cmp
mov
mov
mov
inc
push
jbe
jo
cmc
mov
adc
leave
cmp
xor
cmc
lds
mov
add
hlt
pop
inc
and
inc
fwait
ret
cmp
push
and
adc
inc
imul
call
movsb
jns
sbbl
inc
or
jl
aad
es
xchg
adc
stc
ljmp
repnz
lods
test
push
inc
pop
push
xor
xchg
dec
dec
add
iret
sbb
repnz
cmc
inc
femms
cmp
sbb
adc
pop
mov
xchg
loope
sub
xchg
gs
jae
data16
xor
pop
mov
icebp
stos
stos
add
push
fs
sbb
mov
ret
dec
push
mov
orb
adc
push
dec
inc
or
nop
enter
and
mov
push
jns
dec
sbb
jmp
ret
xchg
jle
mov
push
ja
inc
xor
sbb
fstpl
int3
cli
xor
fdivs
lahf
and
or
adc
iret
mov
popf
inc
pop
sahf
aaa
sahf
add
jb
add
push
aaa
fsubrl
insl
dec
mov
push
dec
dec
ds
in
cltd
icebp
adc
xchg
push
push
or
scas
fsubs
fnsave
imulb
bound
or
xchg
notl
add
cmp
movsl
jecxz
jp
add
mov
xchg
inc
call
and
repz
lahf
in
fs
mov
and
pop
xchg
sub
dec
sbb
sub
push
rcll
push
mov
outsl
jns
lods
mov
fidivl
pushf
mov
mov
mov
add
adc
xchg
nop
lods
mov
test
and
testl
and
mov
fs
inc
enter
iret
cmp
and
sub
and
push
add
mov
jae
std
mov
sbb
push
mov
adc
pop
stos
aam
xor
mov
mov
jp
or
mov
push
repnz
mov
or
inc
adc
dec
add
in
xor
outsb
mov
iret
scas
jp
hlt
xor
ds
jl
jge
std
pop
dec
push
mov
fiadds
imul
fildll
js
sbb
lea
pushf
jle
pop
cltd
insb
pushf
add
cs
clc
push
push
push
adc
or
rclb
push
imulb
dec
xor
sbb
stc
mov
xlat
push
mov
and
adc
loopne
adc
adc
icebp
int3
xchg
push
movsl
loop
pop
sbb
xlat
ljmp
out
es
insl
imul
ret
xor
into
sub
lahf
cltd
ss
push
add
sbb
mov
je
in
dec
ret
cs
mov
cmp
or
dec
iret
inc
in
cmp
fwait
push
idivb
push
jle
jbe
test
stc
int
mov
xchg
push
adc
cs
stos
pop
push
pop
jnp
pop
cmp
popa
mov
dec
fxch
and
sbb
push
fimuls
xchg
sbb
sub
ret
pop
rcrl
popf
imul
out
insl
adc
mov
push
push
sub
lret
nop
mov
rclb
leave
in
sbb
sub
add
adc
xchg
jl
adc
lods
std
sbb
mov
mov
xor
out
in
sub
xchg
mov
and
and
jo
scas
add
push
rolb
cmc
add
xchg
inc
pop
or
inc
sbb
add
icebp
mov
iret
lcall
out
cmc
aaa
push
mov
cs
out
cmp
push
sbb
jg
cmp
xor
push
pushf
xchg
jbe
pop
popa
decb
pop
sbb
cs
mov
pop
push
daa
repz
cmp
push
ljmp
imul
je
or
xor
lret
or
add
cmp
nop
repz
or
jmp
push
push
add
adc
cmp
xchg
xor
xlat
push
sub
cmp
add
push
loope
add
in
sbb
adc
or
cmpsb
ret
addl
lds
xchg
fmull
adc
ja
fmull
out
pop
mov
incb
in
scas
dec
and
adc
lea
push
decl
sub
push
in
outsb
mov
gs
adc
xchg
xorl
xor
movsl
adc
jns
shll
div
fldl
ret
outsb
out
push
mov
xchg
hlt
mov
jge
and
adc
cld
dec
lods
pop
aam
sub
loopne
das
mov
add
inc
xchg
aas
in
iret
mov
mov
push
sbb
cld
pop
jecxz
add
jae
lcall
lods
xchg
loopne
push
push
sub
jle
or
sub
push
pop
jge
in
mov
and
scas
jnp
mov
data16
leave
mov
movsb
scas
push
pop
into
test
pop
or
adc
cmp
adc
inc
into
test
adc
or
or
jo
aad
std
out
pop
add
loopne
insl
mov
shlb
shr
jns
dec
inc
loop
mov
dec
xchg
addb
int3
inc
jo
test
dec
add
xor
cmp
ss
cmp
dec
xor
mov
push
test
std
adc
roll
jbe
imul
insl
or
cs
test
loop
loope
jecxz
aas
clc
or
into
cmp
push
dec
sub
and
jle
or
inc
add
mov
xor
or
movsb
or
mov
inc
shrl
sbb
jnp
xor
jl
xchg
and
cmp
imul
cld
int
inc
jp
dec
enter
jno
and
test
pop
hlt
xchg
sub
mov
out
cs
or
cmp
idivl
sub
and
xchg
cmp
lea
push
jbe
xchg
dec
int3
mov
cmc
push
decl
test
xchg
je
pop
sahf
xor
ret
adc
cltd
js
cmpsl
push
inc
outsl
fs
popa
push
and
jl
push
imul
cld
mov
rorl
dec
enter
inc
adc
rep
adc
dec
dec
out
inc
jmp
sbb
mov
or
jle
adc
jb
jmp
rorb
fdivs
sbb
rol
pop
mov
fadds
mov
dec
and
mov
ljmp
xchg
cmpsb
sub
rcr
inc
push
xchg
push
xor
insb
dec
or
xor
push
push
in
pop
add
mov
cmc
imul
add
sub
lcall
sub
mov
mov
adc
fisubrs
add
add
or
es
add
movsl
lock
hlt
mov
andl
testb
les
jns
and
pop
into
data16
aaa
mov
or
inc
fsubs
imul
in
pop
push
mov
pop
popa
and
dec
in
repz
insl
jo
jp
mov
jle
xchg
jne,pt
mov
call
fildll
lret
call
sbb
jo
mov
leave
scas
les
decl
jns
adc
push
lods
test
jg
push
jp
inc
jl
lret
jns
adc
cli
dec
adc
call
insb
jg
push
pop
fists
or
cmp
pop
add
popa
dec
mov
xor
mov
inc
cmp
adc
add
cmp
icebp
mov
cmpsl
xlat
in
and
push
jge
fdivl
ret
pop
arpl
je
lock
sbb
lret
mov
fldt
mov
sub
jle
repnz
nop
inc
test
and
test
imul
or
jne
cmp
and
insl
imul
jno
out
mov
sbb
addb
js
push
xlat
outsl
test
mov
push
or
push
mull
and
out
sub
sub
pop
push
lahf
or
pop
inc
sub
adc
xor
es
cwtl
push
js
mov
lret
or
mov
pusha
xor
mov
push
roll
sbb
cmp
sbb
xchg
sbb
and
cmpsb
ret
inc
movsb
xlat
push
mov
aas
mov
bound
xchg
xchg
mov
arpl
and
outsb
jnp
mov
mov
mov
mov
cmpsb
add
stc
xchg
cmp
mov
subl
dec
or
cmp
movsl
bound
inc
add
or
repz
push
hlt
adc
push
out
popl
inc
xor
mov
les
arpl
push
ja
int
pop
scas
or
mov
jno
pop
mov
xor
xchg
and
popf
cmp
mov
inc
sbb
cltd
into
cmp
mov
in
stos
inc
jns
pushf
xchg
jp
dec
xchg
out
or
stos
aam
repnz
int3
clc
inc
mov
mov
cmc
fdivr
rclb
or
mov
inc
rclb
sbb
xor
lret
xor
xchg
sbb
mov
std
sbbl
test
mov
insl
lods
or
data16
fdivl
sbb
or
inc
jge
scas
dec
push
add
adc
or
add
stos
mov
and
cld
rcll
aam
aaa
les
pop
and
cmp
sub
in
dec
jmp
or
pop
and
and
push
les
movsl
adc
sbb
pop
cld
xor
cmp
or
insb
push
fs
sbb
lock
xchg
adcb
jl
mov
lock
orb
lods
push
or
sbb
sub
arpl
repz
xor
pusha
mov
dec
push
sub
push
xchg
inc
fists
adc
adc
xchg
dec
mov
jns
pop
loopne
sub
inc
jp
jne
addr16
pushf
inc
stos
mov
rclb
or
xchg
xor
pop
pop
or
push
and
push
leave
fs
add
mov
inc
insb
push
pop
loop
mov
test
das
add
shlb
dec
inc
pop
mov
jg
add
sbb
mov
inc
and
or
in
pop
mov
or
aad
push
shl
and
cwtl
jb
shlb
fldt
sub
repnz
pop
pop
test
inc
popf
cmp
inc
aad
lahf
mov
adc
jo
pop
xchg
dec
and
out
push
adc
jecxz
add
test
pop
mov
and
repz
fsubl
test
cmp
shll
je
mov
stos
faddl
loopne
test
lds
push
inc
aam
cmpsb
sub
scas
mov
inc
jnp
xor
scas
mov
das
inc
data16
push
push
enter
add
jno
and
sub
insl
adc
in
xorb
add
inc
out
ret
pop
sbb
ljmp
mov
popf
adc
jo
cli
xchg
sbb
cmp
adc
ret
dec
cs
mov
addb
sub
sub
or
fdivp
pop
imul
sbb
fimull
and
shlb
mov
push
dec
ret
andl
pop
inc
xchg
inc
dec
inc
lods
sub
or
inc
jnp
push
cs
iret
mov
test
and
sbb
push
jbe
push
aam
lods
stos
mov
aad
lcall
mov
xchg
test
adc
sbb
cmc
inc
mov
dec
test
dec
fsub
insb
dec
test
jns
std
sub
arpl
add
insb
lret
mov
or
shl
and
adc
adc
inc
in
dec
outsl
cs
movsb
insb
ja
or
adcb
bound
sbb
rcll
loope
int3
clc
push
mov
inc
or
and
pusha
shl
loop
repnz
inc
or
js
push
sbb
sbb
pop
and
out
in
dec
add
sti
in
ja
adc
test
cmp
mov
popf
dec
cmp
or
cmp
pop
ret
loope
testb
xchg
mov
repz
test
inc
inc
testl
lods
movsl
pop
cmp
pop
cli
fsts
outsl
mov
xchg
mov
dec
lcall
sub
rcl
pop
pop
push
or
push
or
popf
cmpb
cmp
hlt
repz
adc
jnp
leave
push
mov
or
das
sbb
push
adc
add
inc
stc
adc
in
or
and
add
mov
cwtl
outsl
es
mov
sarb
sub
inc
cmpxchg
rcr
sti
xchg
mov
add
ljmp
add
dec
and
ss
cmpsb
orl
mov
lea
repnz
push
mov
insb
sub
xchg
push
dec
aam
ret
push
in
mov
push
lods
mov
pop
lret
and
dec
cli
and
xchg
in
pop
xlat
sahf
pop
xchg
loopne
std
aad
test
cmp
mov
jno
jg
insb
jno
shrl
inc
sbb
and
xor
into
or
ds
mov
imul
pop
rcrb
enter
cmp
sub
pushf
clc
rcll
rolb
lahf
scas
cmp
add
dec
addr16
mov
jno
cmp
shll
mov
lret
and
sub
cmp
jb
jg
xchg
add
or
sbb
xlat
clc
lahf
out
in
inc
std
dec
mov
fcomps
cmp
mov
and
test
out
or
adc
sub
and
mov
dec
addb
sbb
lea
jbe
sbb
rcr
cwtl
jno
ffree
xchg
fidivs
dec
dec
pushl
out
lds
xchg
int3
mov
outsb
imul
mov
adc
and
jnp
mov
cmp
insl
stos
lods
ss
cmp
popf
push
inc
mov
adc
or
shlb
or
mov
and
fs
and
jno
insb
jecxz
and
mov
xorb
xchg
sbb
in
shl
into
or
insl
fcom
xchg
aad
sbb
cmpsb
mov
sbb
fs
faddl
aam
mov
fwait
jae
js
cmp
fs
mov
jnp
mov
orb
push
insl
dec
repz
push
pop
repnz
enter
fdivrl
or
cs
push
fldl
or
jbe
stos
shlb
push
sbb
int3
pop
cmp
and
adc
mov
sbb
daa
mov
lcall
cmpsb
mov
stc
push
or
sarb
inc
adc
shrb
enter
rorb
jecxz
cmpl
aam
mov
insl
xchg
imul
dec
stos
and
cmpsb
jge
test
ret
loopne
add
push
lods
and
jae
adc
in
jnp
arpl
int3
pop
dec
adc
dec
mov
or
call
inc
xchg
int
aad
mov
cmp
and
in
mov
fcompl
sbb
fwait
lods
orl
cmc
xor
mov
shll
insb
jl
pop
fwait
es
lds
mov
or
xor
test
jl
repz
addb
mov
cld
or
imulb
sbb
xchg
jmp
loope
mov
or
sti
lods
xor
mov
mov
fs
lahf
je
cmp
lret
aas
jbe
xlat
cli
cmpsl
mov
xor
fisttps
add
mov
sbb
inc
addl
cli
jl
dec
popf
jecxz
xchg
test
and
sbbb
movsb
lcall
mov
adc
sti
pop
stos
push
mov
sbb
dec
cmp
and
dec
ds
addr16
jns
mov
or
aad
rorl
xchg
dec
pushf
dec
fs
jmp
xorb
sub
jo
mov
xchg
sub
mov
adc
movsb
xchg
out
jne
add
push
fimull
mov
sahf
inc
sahf
add
jp
pop
and
mov
rorl
push
call
pop
rorl
cs
jb
and
xlat
jg
movsl
in
into
loop
inc
stc
imul
cmp
pop
xchg
adc
jl
push
and
popf
xor
xchg
xor
jne
movsl
loop
adc
mov
pop
popf
jge
js
sbb
stc
addr16
jae
xchg
push
subl
les
inc
call
repz
pop
xor
xchg
cs
mov
inc
push
or
jne
aad
pop
xor
loopne
js
add
xor
mov
testb
add
jae
cmpsb
imul
inc
add
mov
xchg
aas
add
das
dec
jae
xchg
sub
outsb
adc
mov
cmpsb
mov
xor
mov
adc
add
push
sbb
fdiv
add
sbb
gs
push
xor
xor
stc
aaa
shll
imul
push
push
push
fmuls
bound
sahf
push
sbb
jne
shll
fists
xlat
in
ret
lret
jb
pop
jmp
sbb
lods
mov
sti
push
pushw
sbb
dec
adcl
in
sbbb
fstpt
sbb
and
push
rcrl
add
stc
push
int
aas
push
lods
and
push
and
cmp
loopne
idivl
mov
test
dec
outsb
call
adc
xchg
push
xchg
pop
in
test
in
and
inc
xor
inc
int
pop
out
lcall
mov
inc
and
push
loop
jp
pop
dec
sub
or
andl
test
pop
fmul
testb
push
sub
int3
add
cltd
scas
stos
in
pop
mov
sub
jle
insb
xor
aas
pop
pop
rcl
or
std
xchg
fmul
popa
cmp
add
aad
dec
adc
stos
adc
arpl
adc
mov
pop
test
fsubrs
outsl
and
dec
fmulp
out
or
push
fmull
jl
es
daa
push
xchg
jae
pop
or
or
aaa
mov
enter
pop
sbb
cmp
inc
jns
or
js
outsl
orl
js,pn
sbb
push
xchg
ja
push
mov
aam
movsb
lods
sub
jb
jge
dec
fisttps
xchg
push
cmp
and
inc
rolb
pop
sbb
mov
scas
inc
mov
fildl
inc
or
or
cmp
add
int3
scas
loope
pop
push
out
xlat
jle
imul
sub
pusha
movsb
out
ss
dec
aaa
sub
and
je
or
jae
sbbl
xchg
outsb
push
cs
call
data16
scas
mov
adc
cmp
rcl
inc
cmp
jae
popa
push
das
mov
mov
imul
orb
push
jl
mov
push
cmp
rclb
rorl
sbb
sahf
inc
pushl
adc
adc
push
es
mov
fldcw
mov
add
mov
pop
mov
push
js
mov
pushf
dec
mov
mov
fcompl
fs
dec
jmp
pop
das
xchg
xchg
addr16
fs
sbb
pop
mov
lahf
and
and
aaa
scas
stos
sbb
pop
sahf
xchg
push
stos
adc
lds
ret
mov
rcl
add
push
fnsave
push
sbb
xor
addr16
dec
sbb
mov
jbe
stc
and
dec
dec
icebp
outsl
stos
and
outsb
test
inc
push
sub
mov
sub
and
sahf
xchg
xor
fdivrl
je
loopne
in
mov
test
movsl
aas
ds
lahf
add
push
rcll
pop
fbld
fsts
fiadds
sub
sahf
add
lds
sub
mov
mov
ljmp
push
insb
mov
push
fiadds
add
push
add
iret
out
cli
and
or
and
popf
loopne
mov
or
add
or
lcall
jo
add
test
inc
fsubrl
pop
dec
and
mov
loopne
pop
nop
movsb
in
int3
or
lret
pop
ss
xchg
adc
fstl
push
fs
jp
ficoml
sbb
xchg
mov
inc
inc
in
lds
je
outsl
jecxz
add
sub
sbb
adc
int
imul
lahf
in
sarb
cmc
enter
add
rcll
fists
imul
shll
sbb
iret
push
psubusb
ljmp
lret
sub
mov
dec
mul
inc
xchg
sub
xchg
cmp
out
cmp
add
int3
movswl
xchg
fldt
pop
jb
dec
mov
mov
stc
cmpsb
insb
mov
xchg
in
scas
xlat
enter
fnstenv
js
mov
adc
pop
mov
lods
cmp
movsb
aaa
pop
push
fs
fisubl
cmpsl
cmp
roll
cs
push
or
add
adcl
gs
pop
sar
inc
cmp
movsl
cmp
arpl
mov
mov
push
cmp
jmp
mov
add
cmp
cmp
insl
scas
sub
sahf
jns
scas
push
xor
mov
sub
seta
js
mov
xchg
jecxz
mov
rcrl
dec
es
or
roll
enter
inc
mov
jae
push
les
lret
mov
daa
pop
dec
imul
push
dec
loopne
sub
adc
sbb
mov
imulb
aas
scas
sbb
dec
mov
inc
in
and
mov
xchg
xor
xchg
into
sbb
inc
enter
pusha
ljmp
jle
push
out
scas
or
pop
mov
loopne
ds
sbb
rcll
movsl
icebp
mov
call
pushw
mov
out
int3
xchg
add
jge
iret
icebp
jno
test
sbb
add
xchg
test
pop
and
js
cmc
jbe
call
lock
push
inc
loope
dec
jmp
fiaddl
or
inc
xor
ret
mov
cmp
sub
jns
jnp
fdecstp
sahf
dec
inc
cmp
lcall
pop
cld
adc
loope
inc
lods
pop
shl
mov
adc
movsb
fists
mov
mov
xor
pop
mov
mov
neg
inc
icebp
insl
xor
mov
or
inc
popf
jge
and
stos
sub
fisubl
inc
mov
sbb
fcoml
mov
inc
and
int3
dec
push
pop
cmpsb
push
dec
mov
bound
inc
imul
lret
cmp
or
mov
xlat
or
and
and
and
mov
cld
rorb
mov
gs
push
sub
imul
xor
iret
das
adc
xchg
pop
in
movsb
mov
mov
in
jb
xor
aam
sub
mov
mov
iret
xor
pop
icebp
cmp
and
pop
jns
cwtl
push
dec
icebp
mov
cld
add
and
dec
inc
fldcw
fsubrl
and
push
push
fisttpl
pop
daa
pop
dec
pop
jns
cmp
clc
adc
leave
or
mov
fcompl
js
out
push
push
scas
push
and
mov
xchg
pop
add
inc
outsl
pushf
in
mov
mov
xor
push
mov
dec
jmp
rorb
dec
pusha
xchg
mov
sbb
mov
jne
aad
or
les
sbb
pushf
shl
or
dec
inc
repnz
frstor
jecxz
arpl
bnd
jge
fldcw
mov
ds
dec
mov
xchg
xchg
das
or
outsl
and
inc
xchg
into
ja
lds
aaa
mov
push
sbb
mov
inc
and
pop
jns
push
add
inc
jo
mov
sbb
cmp
fwait
push
xchg
add
mov
jne
mov
jae
add
push
inc
mov
xor
jns
mov
or
fadds
push
push
jle
mov
pop
clc
push
outsb
fs
lret
sti
inc
stc
push
cmp
inc
ds
imul
mov
aad
das
bound
mov
mov
dec
mov
lcall
sbb
fs
or
test
add
lcall
pop
pop
inc
stos
lea
dec
jae
sub
pop
icebp
or
insl
adc
repz
popa
and
jns
ja
xor
or
aas
aaa
scas
dec
xor
repnz
mov
dec
add
mov
sub
scas
pusha
lcall
mov
push
jg
gs
stc
out
push
sub
sbb
cmp
cmpb
icebp
cmpsb
xchg
xchg
ret
pop
mov
loope
das
mov
and
out
bound
or
popf
or
dec
dec
adc
das
pusha
pop
sbb
lods
mov
mov
push
inc
aad
xchg
or
and
cmpsb
fs
fmull
adc
adc
and
cmp
and
test
pmaxub
xchg
add
mov
xchg
sbb
orb
jmp
loopne
pushf
cmp
in
sarl
mov
in
jnp
add
mov
dec
jno
int
mov
dec
pushf
icebp
adc
xor
mov
repz
xchg
jl
pcmpeqb
aas
xchg
sub
pusha
test
sub
mov
sbb
inc
js
fwait
cmc
xchg
dec
les
pop
fwait
push
cmp
sbb
and
cmp
push
pusha
and
and
jl
inc
add
movsl
lods
or
jno
pusha
fmull
dec
or
jno
xchg
mov
or
imul
sti
push
and
pop
and
mov
fs
pop
fstps
xchg
imul
add
pop
xchg
iret
mov
cmp
cmp
xchg
jno
mov
push
jmp
int3
cmp
stos
int3
dec
sub
push
pushf
or
dec
mov
loopne
das
ds
popf
cwtl
cmp
push
subl
scas
fwait
inc
cwtl
aaa
jbe
lahf
in
insb
jae
daa
into
inc
dec
test
ljmp
cmp
xchg
and
jl
push
xchg
dec
adc
shll
push
inc
aaa
ds
dec
sub
adc
inc
mov
xchg
shll
mov
mov
xchg
dec
inc
xchg
push
lret
call
pop
stos
inc
pop
movsl
or
cmp
rcll
adc
js
mov
or
dec
sbb
imul
and
and
jns
pop
repz
and
aad
jp
loop
pop
fcomp
cmp
fwait
std
add
popf
push
xchg
mov
mov
push
and
push
add
icebp
lret
and
mov
repnz
inc
pop
pop
stos
push
inc
inc
add
or
xchg
or
insl
push
ja
push
cmp
int
xor
int3
jecxz
or
fstl
pop
fbstp
mov
sbb
enter
mov
clc
adc
lret
xlat
adc
movsb
or
stc
mov
xor
adc
js
idivb
scas
out
push
sub
or
xor
add
dec
sbbl
out
pop
push
adc
pop
subps
pop
sub
es
mov
sbb
rcrb
fisubrs
orps
out
xchg
xor
sub
xor
es
mulb
dec
xchg
lock
mov
mulb
dec
test
imul
push
ja
aaa
mov
mov
xor
and
ja
or
popa
xor
lcall
daa
andl
mov
addr16
dec
lods
scas
ret
xor
inc
xchg
cli
xchg
movsb
and
mov
inc
sub
aam
int3
adc
mov
icebp
cli
lahf
inc
call
inc
cmp
mov
movsl
aad
inc
out
loopne
inc
lahf
das
push
dec
jne
pusha
xchg
testb
mov
fdiv
or
out
cmpl
imul
sub
js
mov
scas
sub
mov
ja
lahf
nop
jecxz
xchg
mov
mov
imul
jge
rorl
sub
pop
or
mov
and
mov
in
icebp
adc
push
push
aaa
cmp
jne
stos
inc
das
jl
xchg
adc
sub
rolb
sub
push
add
xchg
dec
sub
mov
int
cmp
pop
xchg
lock
pop
rorl
jb
xchg
jl
jnp
pop
shl
iret
adc
cmpb
pop
xlat
dec
and
pop
add
adc
or
in
xorl
stos
popa
mov
add
mov
lea
push
fs
and
jne
cmp
mov
lods
pop
xor
cwtl
out
mov
xchg
pusha
mov
jp
out
mov
fsubs
andl
xor
adc
inc
pop
out
mov
or
fsubl
push
mov
adc
ret
sub
iret
jp
mov
mov
dec
inc
pop
push
dec
cli
cmc
shrl
pop
scas
dec
rcr
hlt
adc
add
lods
or
or
inc
adc
sbb
sbb
hlt
add
stc
push
sahf
cs
cs
cmpsb
ret
mov
mov
es
popl
inc
hlt
ljmp
iret
sahf
xchg
push
cmp
hlt
test
mov
add
mov
jb
inc
adc
dec
lret
mov
mov
and
pop
dec
jne
add
mov
das
fdiv
inc
mov
push
inc
movsl
jb
or
les
mov
or
xchg
js
inc
fst
sbbb
pop
sub
out
repnz
jbe
in
pushf
push
test
adc
jne
push
inc
sbb
pop
mov
ror
jge
mov
imul
out
and
aaa
adc
mov
cmp
push
inc
mov
dec
pop
sub
jecxz
xchg
fxch
lds
and
mov
xchg
pop
mov
mov
mov
scas
addl
icebp
adc
mull
jnp
aam
mov
std
or
das
outsb
pushf
ja
pop
outsl
inc
adc
mov
dec
lds
add
loopne
mov
mov
inc
xchg
pushf
mov
out
and
xchg
enter
mov
insb
rorl
push
loopne
jne
inc
cmp
jle
and
fs
adc
push
sbb
inc
popf
dec
xor
add
cmp
and
cmp
int
jp
push
jecxz
and
into
movsb
jbe
adc
dec
bound
sbb
mov
js
or
outsb
fwait
dec
sbb
ja
imul
or
or
repz
jne
dec
or
push
push
dec
sub
std
daa
addr16
ret
in
ret
nop
or
xor
mov
in
int3
jnp
mov
jne
in
test
pop
push
mov
stc
inc
dec
pop
sti
and
inc
jl
rsm
inc
mov
hlt
movsb
sti
xor
push
or
or
or
sbb
dec
int3
mov
cmpsl
adc
lcall
nop
dec
inc
test
xchg
jl
in
adc
inc
insl
mov
adc
pop
add
and
dec
and
xchg
mov
mov
xchg
jns
adc
stos
push
lods
shlb
or
sub
lahf
leave
out
jge
dec
xlat
and
imul
add
push
cli
cmp
sbb
fsubrs
pusha
jnp,pt
popf
pushl
lea
jno
movsl
hlt
mov
mov
push
loope
int3
stc
mov
mov
adc
fsubrs
adc
xor
cmp
adc
inc
sbb
or
jg
adc
jno
xchg
inc
adc
icebp
mov
xor
cmp
cmp
nop
inc
and
outsl
aam
and
rcrl
aas
jae
mov
cli
add
push
stc
or
and
mov
aad
call
xchg
fs
push
lock
lods
mov
scas
daa
icebp
sbb
je
or
pop
mov
shrw
push
pop
adc
jae
mov
sub
sbb
mov
popf
addl
rcrb
cmc
push
pop
popf
dec
jg
xchg
or
jbe
sahf
or
roll
mov
cmp
pop
sub
mov
dec
les
jp
dec
neg
inc
cmp
push
dec
and
sub
sahf
cs
lahf
das
les
lahf
or
fwait
adcb
xchg
cli
int3
pop
inc
shll
insl
stos
xchg
xchg
int3
pop
sar
adc
fildl
cli
notl
adc
sbb
mov
cmp
dec
daa
sbbl
sbb
mov
sbb
insb
mov
popf
sub
js,pn
fs
pop
arpl
fisttpl
dec
shll
push
cmp
stos
adc
sbb
inc
test
inc
pushf
sbb
sub
pop
inc
dec
sahf
jge
sub
lock
and
movsl
add
and
outsl
dec
and
cmpsl
adc
std
pop
fnstsw
andb
stos
xor
xchg
les
popa
les
insb
inc
pop
sub
add
inc
and
pop
sub
xchg
fwait
push
out
pop
push
test
rolb
cmpl
into
xlat
shlb
call
inc
loop
or
scas
outsb
aas
arpl
xor
lahf
pop
mov
dec
outsb
test
cltd
adc
stc
cld
pop
adc
dec
sbb
or
jno
mov
pushf
inc
jnp
shll
or
adc
scas
jno
jle
dec
dec
stc
cmp
int3
push
jns
popf
inc
imul
js
lock
sub
push
dec
jmp
inc
pop
adc
leave
pop
les
cs
pop
xchg
add
push
xor
insl
scas
mov
dec
andb
sti
push
test
out
clc
cs
sbb
sub
insl
or
mov
xor
stos
jnp
mov
mov
out
adc
add
cmp
push
add
ja
push
sbb
push
mov
add
repnz
hlt
mov
test
and
and
xchg
mov
push
lcall
sti
push
test
cmpb
adc
sbb
insl
push
cmp
repz
leave
popf
insb
and
fcmovb
and
ljmp
call
sarb
dec
sbb
sub
inc
pop
inc
mov
push
cmp
push
outsb
mov
lea
or
scas
decl
or
cmp
shlb
jle
mov
push
mov
jle
xor
in
xor
mov
adc
pusha
adc
dec
push
mov
test
sub
lods
out
fdivs
cmpsl
setne
icebp
sub
in
jg
cmp
ja
mov
scas
push
sbb
mov
mov
scas
repnz
xor
mov
mov
ds
and
lret
test
push
add
mov
and
pop
bound
pop
mov
or
add
stos
hlt
aaa
or
outsl
lods
or
sub
call
cld
dec
add
xchg
adc
and
adcl
mov
inc
mov
sahf
mov
cmp
pop
int3
adc
jo
in
pop
in
in
fstpl
lods
push
xchg
sbb
and
cld
rolb
mov
adc
int3
fwait
ljmp
mov
dec
add
lahf
cmp
or
popa
sarb
int3
scas
pop
jge
cmp
arpl
enter
loope
cmp
outsb
cmp
or
ljmp
xchg
xchg
loopne
int
dec
aaa
lret
add
lcall
inc
pop
dec
and
push
ds
xchg
or
mov
mov
add
pop
insl
stos
out
inc
push
mov
push
add
outsl
mov
or
out
xor
pop
mov
mov
dec
pop
inc
cmc
push
xor
push
or
sbb
sbb
call
ret
push
test
jnp
xor
repz
nop
aad
out
mov
push
iret
sbb
arpl
jl
sbb
mov
push
sbb
aas
sbb
sbb
frstor
inc
ret
in
enter
jnp
mov
nop
mov
test
and
jne
and
push
dec
aas
add
aam
fsubl
jle
push
dec
lea
movsl
into
push
inc
mov
push
push
enter
push
sub
jne
adc
pop
scas
sbb
inc
sbb
xchg
inc
cmp
pop
inc
movsb
mov
dec
popf
add
push
jg
and
ficomps
xor
sub
je
mov
mov
rcrl
dec
add
loop
add
mov
in
push
or
rolb
jg
stc
fistl
and
outsl
and
testl
mov
popf
fstl
inc
jae
ror
xlat
dec
mov
fistpll
in
insb
mov
fdivp
adc
xchg
lock
imul
sbb
popa
hlt
sbb
mov
or
mov
cmc
push
jne
inc
cltd
pop
jl
dec
xchg
mov
xor
xor
or
shrb
inc
pop
pop
sbb
int3
imul
gs
sub
scas
mov
sahf
shll
addr16
outsb
or
test
push
dec
mov
push
or
jne
fs
test
das
sub
sub
rclb
lea
and
and
nop
std
test
sbb
in
in
jl
push
xor
adc
mov
int
lret
pop
es
dec
push
xchg
push
xchg
ss
jecxz
mov
pop
adc
and
xorl
rorb
scas
dec
lcall
stos
fcoml
repnz
xchg
ds
mov
sub
mov
jge
js
stos
add
je
mov
pushf
dec
lahf
and
test
insb
cltd
xchg
push
les
and
fs
aaa
xchg
add
es
outsl
nop
lahf
xor
sub
dec
test
movsb
inc
push
dec
xchg
and
dec
bts
cwtl
into
repnz
cs
mov
inc
fcomip
inc
cmpsb
mov
push
pop
int3
pop
mov
cmp
inc
sub
insl
cmp
fwait
stos
xor
dec
stos
xchg
jnp
outsb
sub
loope
inc
add
test
sub
lret
pop
movsl
push
xchg
ss
lahf
or
jbe
adc
stc
sbb
mov
ss
mov
cmp
inc
jno
test
outsb
ret
in
and
sbb
lock
loope
dec
cmp
scas
pop
dec
dec
xor
out
bswap
add
adc
or
mov
pop
scas
inc
and
fistl
add
imul
mov
test
sbb
xor
mov
adc
imul
jg
inc
sbb
mov
int3
dec
fisubs
fsts
pop
sbb
or
xor
push
pop
cld
pop
movsl
stc
popl
pop
push
sbb
rorl
mov
fidivs
dec
mov
add
dec
rcll
adc
dec
cmp
repnz
mov
dec
lcall
cmp
loope
dec
outsl
les
mov
shrl
mov
mov
movsb
mov
adc
and
sbb
and
bound
insb
push
gs
sub
jns
mov
enter
fcomps
push
insb
xchg
sahf
cmp
data16
sbb
dec
adc
mov
enter
lret
sahf
mov
xlat
sbb
adc
cmp
out
mov
movsl
jmp
mov
add
repnz
cmpsb
and
repnz
inc
mov
xchg
int3
cmp
pop
imul
pop
dec
cmpsl
push
cld
movsb
cwtl
inc
sbb
test
mov
dec
push
add
out
int
insl
mov
mov
mov
push
and
pop
scas
sub
inc
push
jns
and
ljmp
adc
pop
repz
lcall
sbb
lcall
dec
repnz
xchg
pop
and
lret
xchg
sub
mov
stos
inc
or
pop
mov
adc
sub
pop
adc
clc
pop
jl
stc
jns
aad
filds
push
mov
mov
add
jae
jecxz
stos
add
mov
pop
shl
xchg
adc
call
int3
add
mov
inc
push
xor
or
mov
test
outsl
xchg
jmp
adc
sub
popa
push
fildl
fucom
xchg
xor
movsl
or
mov
out
cmp
and
jb
adc
xchg
and
and
cltd
ss
ja
or
cmp
clc
roll
in
icebp
jmp
outsl
or
pop
nop
dec
lahf
clc
mov
add
icebp
mov
fndisi(8087
mov
in
adc
inc
int
and
pop
cmp
outsl
or
mov
lcall
test
dec
mov
repnz
push
jle
mov
and
or
rcrl
outsl
and
dec
insl
add
sub
and
outsl
pop
popa
sub
and
ss
lock
in
js
shrl
cmp
mov
cmp
mov
jne
pop
ret
popf
lcall
adc
aad
pop
jnp,pt
jns
cmp
pop
bound
and
gs
push
lods
xchg
inc
nop
mov
dec
and
adc
push
xor
fdiv
push
sbb
testl
jne
andb
daa
adc
cmp
xchg
outsl
into
test
dec
push
repz
cmp
arpl
lods
hlt
mov
inc
jle
addr16
jle
push
sub
mov
add
add
fs
das
dec
mov
or
les
or
jbe
xchg
pop
gs
cmp
xlat
clc
push
lea
inc
cmp
jbe
int3
jne
clc
mov
xchg
movsb
cltd
dec
test
xor
cmp
pop
or
push
adc
ret
sbb
adc
int3
add
and
adc
sub
jp
in
pop
fadds
xor
aas
mov
pop
pop
sbb
add
push
or
cmc
outsb
xchg
and
adc
js
out
and
sbb
adc
bnd
scas
jp
mov
cmp
insb
jecxz
sub
pop
or
mov
aaa
outsb
stc
fdiv
jae
in
adc
sbb
adc
xchg
sub
jle
mov
faddl
inc
sub
adc
pop
dec
or
je
fmull
ret
loope
dec
sbb
mov
or
adc
lock
inc
inc
or
cmp
push
dec
dec
or
sbb
sub
mov
pop
shlb
sti
add
lahf
inc
inc
mov
push
cmp
or
test
int
les
ret
cmp
cwtl
ret
in
fsubl
xor
sbb
add
insb
into
lcall
sti
sub
mov
pushf
std
sub
xchg
andl
jle
testb
fwait
lahf
xchg
inc
frstor
rorb
imul
or
xchg
arpl
pop
xchg
mov
dec
fimuls
in
ss
mov
fsubrs
add
and
in
popa
inc
lret
mov
dec
addr16
jae
sahf
jns
movl
cwtl
or
lock
pop
sub
inc
push
xor
mull
mov
sub
fbstp
es
push
in
pop
sbb
repnz
popl
cmp
mov
xchg
pop
dec
and
jo
inc
push
daa
out
adc
sbb
test
lock
and
cmp
stos
jge
cld
lods
inc
fs
out
sub
jg
dec
or
mov
cmp
and
xchg
lret
bound
outsb
lret
push
push
push
ret
sahf
shll
je
push
add
xor
adc
int3
push
notl
push
jle
ljmp
pop
aad
and
sbb
xchg
and
jge
es
pop
jl
sbb
jno
inc
cmpsb
push
mov
dec
fadds
add
pushf
jne
shl
call
stos
xlat
or
add
jl
test
cmp
or
mov
fiaddl
in
push
scas
xchg
inc
adc
repz
jo
arpl
ret
mov
int3
outsl
adc
adc
out
insl
jnp
int
sub
push
das
movsl
push
fdivrs
sbb
cmp
cmp
jmp
or
or
sub
insl
push
dec
inc
mov
aad
enter
imul
mov
cmp
insb
lret
xchg
mov
sub
pop
mov
xor
aam
pop
xlat
ds
jno
lods
fs
jg
insl
inc
dec
aad
and
aam
and
sub
sarb
sbb
sbb
pop
fistpll
jne
ss
jmp
fmuls
mov
xchg
sbb
into
notb
add
fdivrp
es
xor
sub
add
mov
mov
mov
adc
das
addr16
push
popa
repz
jmp
cmpsb
jo
cmpsl
xlat
and
lods
dec
icebp
jo
ja
adc
push
push
aam
pop
xchg
movsb
xchg
cli
or
dec
or
clc
sti
jne
mov
cmp
mov
dec
rcrl
dec
mov
push
arpl
sub
sub
adc
in
popf
push
cmp
sbb
outsb
jb
cmp
fildll
loopne
pop
cs
pop
jp
push
cmp
inc
lcall
mov
push
pop
and
inc
adc
mov
ja
ljmp
inc
leave
mov
and
and
push
arpl
add
cs
sti
pop
jmp
loopne
jo
call
and
adc
xor
mov
mov
cmpsb
icebp
pusha
aad
lcall
jmp
unpcklps
jp
mov
mov
dec
dec
pop
xchg
scas
clc
pop
lret
sarl
arpl
stc
ficompl
dec
mov
dec
sub
cld
sti
dec
jmp
cmpsl
or
and
mov
bound
mov
jp
ja
nop
cmc
daa
lock
jge
lods
loopne
lcallw
inc
xor
adc
xor
mov
pop
dec
and
daa
ja
pop
out
pop
sub
neg
lahf
push
stc
jecxz
inc
sti
cld
fcoml
xor
xor
es
sbb
aaa
xorl
call
mov
lret
movsl
xchg
pushf
mov
in
pop
das
inc
sbb
dec
sar
cmp
jno
outsb
out
addb
loopne
xchg
xor
mov
das
mov
add
sbb
outsl
cmp
pop
ret
dec
pop
jle
aas
mov
std
and
outsl
daa
mov
lock
mov
jno
pop
stos
xor
pop
mov
mov
pop
test
adc
mov
mov
and
mov
aad
sahf
mov
inc
xlat
movsb
jnp
cmc
sub
push
inc
stc
aas
pusha
push
stc
test
sub
ja
pop
pop
add
stc
add
into
or
and
fsts
mov
add
pushf
xchg
push
cli
inc
rorb
pxor
lahf
lret
fdivrl
rcrb
repnz
ret
pop
insl
adc
notl
jne
mov
orb
and
add
pop
rclb
out
imul
mov
pop
mov
sbb
dec
loopne
dec
nop
lahf
and
roll
into
cmc
pop
xor
push
out
lahf
lock
addl
imul
mov
inc
jo
adc
xchg
repnz
pusha
cmpsl
sbb
push
jp
imul
fmull
pop
xchg
xor
les
bound
nop
dec
jp
jp
cmpsl
jmp
icebp
push
into
dec
aaa
cmp
mov
adc
adc
sbb
imul
cmp
xor
into
lds
stc
loope
fwait
pusha
jle
mov
pop
decb
test
sub
cmp
push
sbb
aaa
es
repz
popa
pop
cwtl
sbb
cmp
mov
push
and
repz
lea
cmp
and
jne
cmp
pop
lret
fwait
out
push
sbb
pop
sbb
scas
enter
or
test
in
push
push
les
push
in
out
mov
cld
mov
xchg
insb
mov
test
pop
cmp
mov
or
mov
js
push
dec
je
jno
xor
xchg
inc
push
sbb
pop
mov
and
mov
adc
and
mov
hlt
ror
adc
arpl
mov
aad
jmp
mov
mov
test
popf
cmp
jae
jns
in
jp
leave
icebp
ret
int
xor
mov
jae
adc
fsubs
mov
xor
test
in
sbb
aad
and
mov
popf
sbb
in
aaa
lods
hlt
mulb
push
xchg
das
xchg
pop
dec
sahf
mov
mov
andl
sbb
fnstcw
jb
inc
and
pusha
test
sbb
mov
mov
test
fcmovb
fistpl
aas
jmp
xor
pop
mov
sti
jl
push
xchg
cmp
dec
mov
add
mov
add
sbb
mov
je
dec
and
mov
push
sahf
and
adc
add
in
adc
enter
dec
lods
jg
stos
insb
adc
sub
cmp
push
xchg
fildl
adc
jl
pusha
and
popf
repnz
dec
jmp
cmp
xor
fldl
jle
pop
adc
mov
rolb
out
push
add
shrl
stos
jle
incl
inc
stos
jp
test
je
jne
subb
int
xchg
or
shrl
insl
jno
mov
inc
cmp
cmp
lret
adc
sub
or
sbb
dec
lods
jg
mov
add
sbb
int
pop
dec
or
adc
fdivrp
mov
xor
sbb
jbe
sbb
lds
mov
sub
insl
and
gs
sub
loopne
fldcw
cmp
insb
std
mov
lret
adc
cmp
mov
scas
loopne
sbb
cld
or
inc
enter
and
sbb
and
push
scas
aas
cs
mov
dec
insl
es
xlat
jmp
lret
mov
jbe
loopne
fcoms
push
stos
dec
ss
push
sbb
dec
push
or
sub
test
movsl
notl
ljmp
sbb
cmp
mov
out
jnp
push
cmc
test
into
mov
test
jns
dec
out
inc
mov
iret
ds
aas
mov
cmp
int3
jbe
aad
cmc
pop
add
test
in
mull
roll
movsb
mov
inc
fisubl
test
pop
fstp
mov
jno
icebp
xchg
testl
pop
cmp
adc
ss
faddl
xor
addr16
xchg
pushf
cmc
in
xchg
out
mov
mov
push
sub
mov
sub
mov
testb
cmp
inc
push
add
or
push
mov
push
adc
test
es
sbb
sahf
clc
aaa
or
or
imul
scas
lods
sbb
and
jmp
adc
or
lea
push
pushf
pop
jg
add
call
and
popf
push
cmp
ja
adc
pushf
test
adc
out
icebp
inc
xchg
bound
xor
lret
xchg
loop
pop
add
fs
mov
aad
sbb
inc
ret
dec
mov
add
xor
ja
dec
mov
xchg
clc
subl
adc
mov
mov
mov
jecxz
mov
pop
adc
xchg
inc
daa
push
pop
enter
xor
movsl
cmp
sbb
mov
repz
outsl
or
inc
pop
sbb
jecxz
pop
add
pop
rorb
addr16
and
mov
push
fs
into
insl
cmc
lcall
mov
xlat
jp
lcall
xchg
push
or
andb
adc
stos
ss
stos
add
neg
and
mov
imul
inc
and
and
push
push
sub
mov
bound
popf
sysexit
pop
subb
cmp
jo
icebp
pop
add
repnz
pop
xor
cs
xchg
mov
jge
push
inc
das
mov
dec
jecxz
jg
nop
arpl
push
xlat
inc
push
jne
sub
push
mov
push
loope
and
lea
add
xor
xor
push
push
mov
add
push
mov
adc
push
and
inc
mov
cs
sti
cld
lock
inc
ret
mov
ljmp
mov
orl
clc
inc
sbb
js
mov
cmp
add
rcrl
imul
xchg
mov
fadds
and
daa
int3
in
das
outsl
sub
outsl
dec
cmp
pop
adc
dec
mov
test
mov
sbb
bound
mov
mov
fcoms
lret
pop
mov
sub
sbb
mov
xor
pop
scas
push
fisubrl
xor
pushf
fistl
lods
jns
mov
je
mov
or
aam
cmp
and
pop
jb
in
aam
xchg
dec
icebp
imul
push
pop
adc
clc
jmp
lret
xor
push
cltd
mov
aaa
insl
add
int3
inc
jae
pop
fstps
sub
jns
dec
addr16
lret
icebp
mov
test
nop
fistpll
int3
mov
xorl
sub
sbb
loopne
jbe
or
mov
pop
inc
sbb
adc
pop
adc
mov
adc
or
xor
push
dec
jbe
jb
call
push
pop
sub
xor
ret
fistps
clc
xchg
jb
mov
fchs
lock
jb
pushf
dec
inc
aam
icebp
pop
ret
ret
xchg
xchg
pop
or
push
mov
rcrl
aas
mov
add
push
jb
xchg
bound
adc
or
loopne
fnsave
pop
mov
dec
xor
cmpsl
and
fcoml
jecxz
sub
insb
pop
jns
arpl
add
and
inc
or
arpl
add
stc
repz
cmp
add
xor
push
sub
sub
in
int3
lods
cmp
lods
movsb
push
lcall
adc
les
pop
mov
xor
and
in
xchg
in
out
rolb
mov
in
dec
das
je
les
mov
les
daa
test
loope
test
pop
cmp
sbb
popf
or
add
mov
add
in
mov
mov
fst
cmpb
jecxz
ret
data16
cmp
cmp
cmp
in
test
xchg
push
ljmp
popf
stos
outsb
add
pop
dec
add
pop
lret
imul
dec
xchg
movsl
leave
ret
iret
or
pop
dec
cmp
mov
mov
aaa
adc
pop
lock
pop
test
scas
dec
insb
mov
and
cmp
add
movsl
insl
mov
xor
and
je
mov
inc
mulb
mov
inc
scas
popf
jmp
ljmp
insl
mov
jae
xchg
push
mov
xchg
mov
pop
sbb
and
push
mov
test
aad
cwtl
dec
inc
and
sahf
inc
int3
jmp
inc
pop
divb
es
and
mov
sbb
mov
into
testl
mov
mov
push
jo
mov
hlt
sub
sbb
add
mov
sbb
sub
cmp
inc
cld
adc
and
xlat
sub
les
xchg
jp
xor
jge
call
sub
decl
xchg
sbbb
dec
cmc
insb
loop
push
in
insb
or
inc
mov
mov
push
xchg
xchg
jae
push
sub
adc
xor
rcrb
or
pusha
pop
mov
repnz
fisttpl
adc
in
pop
fwait
xchg
jle
lret
mov
add
shll
push
sub
xor
loope
pop
aam
pop
add
rcrl
fsubl
jne
fidivrs
fldt
stos
add
ret
mov
data16
mov
popf
sub
xchg
xchg
and
movb
scas
or
ljmp
and
test
lods
jp
jo
scas
mov
xor
push
mov
sarl
arpl
filds
out
incl
in
pop
hlt
data16
and
cmpl
ret
pop
inc
clc
inc
xchg
fmulp
mov
inc
xor
fidivrs
daa
outsl
into
stos
sti
mov
dec
fistl
mov
mov
or
hlt
dec
push
jbe
es
mov
cs
sub
push
test
add
sahf
imul
fiadds
pop
andl
pop
pop
sub
shrb
rol
and
inc
jp
mov
popf
notb
xor
adc
ja
lods
ljmp
mov
sti
inc
mov
loopne
adc
xor
adc
cmp
and
in
xor
stos
je
out
js
sbb
es
xor
sub
and
int
popf
mov
outsl
cmp
and
shr
outsb
mov
cmpsl
inc
adcl
and
jge
lods
sub
cmp
mov
roll
inc
shrl
xor
std
std
in
loopne
test
push
jp
shlb
jp
sub
mov
pop
andb
les
sahf
or
cmc
jmp
insl
inc
xchg
loope
cmp
pop
mov
dec
mov
push
js
xchg
in
inc
push
xchg
hlt
bound
xor
rorb
sahf
cwtl
mov
sbb
pop
mov
rcrl
mov
mov
push
adc
xchg
jo
xor
call
cmpsb
sbb
das
shr
cmc
inc
or
or
pop
sti
out
das
lods
sahf
mov
hlt
sub
bound
push
lret
lods
pop
mov
and
int3
jae
dec
add
mov
xchg
test
sahf
pop
outsb
ficompl
jl
shr
lock
addb
mov
fdivs
dec
cmp
adc
mov
cmp
daa
enter
movsb
or
in
sub
in
mov
lahf
inc
mov
in
fcmovu
aam
add
push
xchg
sahf
popl
in
push
ret
dec
adc
mov
jl
fs
jmp
int3
inc
adcl
pop
out
jecxz
lock
cld
jge
lds
sbb
ljmp
js
pop
jmp
xor
out
mov
jns
ror
sbb
incl
sar
dec
std
add
inc
dec
inc
push
aaa
or
pusha
push
or
scas
dec
pop
scas
cld
movsb
or
and
rcl
test
or
sub
and
js
pop
push
mov
and
add
pop
mov
pop
ljmp
sub
int3
movsb
sbb
push
leave
xchg
pop
inc
jmp
sub
cmp
push
repz
out
insb
xchg
outsb
inc
or
sti
pop
in
xor
and
and
sub
insb
pop
jo
sbb
std
or
push
mov
mov
bound
loopne
lock
cmc
ja
or
inc
sbb
in
cmp
ret
fdivl
in
pop
and
lea
out
lds
lcall
imul
and
cmp
insl
maxps
xlat
mov
mov
outsl
dec
sbb
pop
movsb
xchg
push
fisubs
pop
mov
ror
and
or
push
cwtl
jo
push
jns
jle
push
ss
fsubrl
dec
test
push
mov
jns
xchg
push
out
sbb
or
sub
imul
inc
xor
call
insb
add
jb
push
mov
mov
mov
pop
dec
dec
mov
ficompl
or
std
lahf
pop
comiss
pop
adc
hlt
xorl
imul
xchg
dec
nop
stos
sbb
call
mov
mov
adc
inc
scas
jp
dec
cmp
pusha
stos
inc
subb
lcall
push
jne
jmp
aam
or
in
stc
repz
adc
push
mov
lret
cwtl
mov
or
std
mov
cltd
data16
outsl
movsb
loope
int3
mov
sbb
call
add
js
mov
dec
lds
rorl
jb
imul
mov
xchg
ljmp
fcomps
push
mov
jnp
dec
inc
repnz
rcrl
push
adc
xor
mov
mov
adc
pop
shll
cli
pmaxsw
cmc
inc
jp
jnp
sbb
jp
mov
dec
push
mov
jmp
aad
test
enter
cs
xor
aas
dec
mov
xchg
mov
and
mov
mov
add
and
inc
loop
push
fsubrs
repz
sbb
mov
out
dec
or
pushf
push
inc
imul
pop
mov
imul
xchg
incb
jecxz
fisubs
fbld
xlat
in
dec
cmpsb
jae
jp
sub
mov
jecxz
pop
push
mov
rolb
std
add
jmp
bound
loop
cltd
lret
inc
fldcw
mov
leave
cmp
push
push
inc
xchg
lcall
mov
dec
dec
and
pusha
dec
sti
out
sbb
xchg
in
test
fisttpl
or
adc
int3
push
inc
in
add
xor
inc
dec
lock
sub
in
cmp
jecxz
xor
push
out
mov
xchg
xchg
lea
add
jl
insl
imul
icebp
insb
shll
xchg
jg
sbb
xchg
add
loope
shr
jl
lock
jne
and
dec
lret
add
and
dec
sub
aad
push
dec
mov
imul
cwtl
adc
xchg
jmp
arpl
push
dec
imul
lods
sub
jge
dec
jo
mov
dec
xchg
fwait
push
popf
push
push
dec
mov
and
sti
ret
shlb
sbb
jmp
ret
pop
xor
mov
out
push
sub
dec
lock
fnstcw
pop
mov
pushf
cmc
lcall
pop
mov
test
cmpsl
sbb
cvtps2pd
insl
call
int
jbe
fcoml
lcall
fidivrs
and
test
fsubrl
or
push
lods
jp
lea
cs
repz
jne
pop
loope
add
fcmovb
cmpsl
jp
lahf
into
in
adc
mov
push
inc
rcrb
or
sub
test
ret
inc
mov
mov
loope
fsubrp
xchg
mov
call
insb
incb
xchg
mov
inc
cmp
sbb
sbb
idiv
iret
and
inc
or
lods
inc
push
dec
adc
pop
jge
cmp
adc
inc
cwtl
jmp
pop
test
out
and
mov
mov
out
ss
jl,pt
in
xchg
sbb
sbb
fiadds
idivl
mov
inc
fisttpl
fisubs
jns
add
loopne
xor
inc
mov
mov
pop
adc
pop
dec
testb
xchg
jl
mov
cmp
fimuls
les
push
ljmp
and
push
jnp
gs
push
mov
jp
mov
or
aas
push
lret
jle
or
adc
aam
mov
daa
dec
xor
scas
dec
adc
js
push
sbb
dec
lcall
adc
push
daa
xchg
jl
sub
mov
insb
movsl
pop
and
mov
adc
out
and
jg
popa
jns
mov
pop
xchg
dec
sub
mov
daa
mov
xor
sub
popf
popf
mov
fcomps
inc
dec
xchg
les
add
or
insl
hlt
push
or
add
cld
push
popa
fdivs
into
mov
pop
push
add
xchg
jecxz
popa
ret
inc
je
push
jmp
lret
xor
mov
into
or
insl
cmp
or
push
xchg
stc
xor
repnz
push
arpl
xchg
repz
outsl
je
jmp
mov
fcom
xor
mov
mov
testl
cmp
lret
add
push
mov
cmc
or
xchg
jns
ljmp
mov
dec
icebp
int
aas
jp,pn
xchg
dec
push
js
pop
cmpsb
inc
rcl
xchg
sub
adc
or
sahf
and
lods
inc
sar
adc
xchg
sub
pusha
push
inc
loope
jbe
jno
mov
and
xchg
and
sub
mov
pop
loopne
loop
fxch
test
dec
mov
inc
jmp
and
xchg
push
fnstsw
xor
inc
aad
ds
mov
icebp
cmp
sub
push
mov
stos
iret
xor
ror
std
inc
mov
clc
jl
cwtl
jne
rcl
xor
xchg
in
jecxz
push
lahf
insb
adc
mov
clc
sbb
sbb
push
cmp
lock
paddw
shll
shlb
mov
test
loopne
ss
rclb
into
outsl
cmp
outsb
mov
in
adc
and
jae
mov
push
fs
iret
and
inc
adc
imul
hlt
jae
xchg
mov
call
mov
cltd
inc
frstor
adc
sbb
cmp
test
inc
pop
sbb
adc
pop
sbbl
sub
repz
mov
ds
mov
xlat
jl
dec
popl
mov
add
rorl
ljmp
jae
fwait
jne
into
mov
adc
stos
pop
dec
pop
daa
dec
lods
inc
add
imul
xchg
mov
fcoml
or
cmpsl
mov
lret
je
push
in
ss
push
sbb
add
add
je
divl
xor
and
movq
dec
out
push
inc
add
fdivp
pop
sbb
imulb
int3
aad
xor
cmpsb
inc
xor
jnp
cmp
xchg
cmp
aam
mov
sbb
push
pop
lods
mov
mov
mov
scas
inc
push
mov
pop
mov
push
fidivrl
lcall
xchg
in
pushf
rcrl
cs
push
lahf
nop
xor
lahf
xlat
in
and
pop
mov
cwtl
sbb
inc
mov
clc
into
loope
sbb
push
out
add
adc
lret
pop
cmpsl
push
faddl
xor
inc
les
add
sbbl
out
hlt
mov
mov
je
dec
mov
cmp
mov
inc
or
inc
xor
addr16
lods
and
fldt
jbe
mov
inc
mov
popa
lock
push
mov
out
mov
mov
push
ja
insb
xor
sub
movsl
loope
mov
pop
ss
repz
jbe
pop
mov
or
mov
test
mov
mov
stos
mov
or
int3
in
cld
xchg
dec
imul
fsubr
push
ret
sahf
push
sbb
sbb
lret
dec
shrb
faddl
sub
icebp
je
or
add
int3
jmp
test
mov
sbb
pop
inc
jbe
outsl
pop
hlt
mov
add
mov
xor
inc
jo
dec
repz
inc
outsl
cs
outsl
push
mov
shl
and
lret
repz
xor
mov
mov
mov
xchg
dec
imul
push
add
fisttpll
xor
push
leave
in
pop
dec
pop
add
pop
jns
popf
test
aad
in
push
xor
sbb
aaa
add
cmp
repz
inc
enter
xchg
loope
cwtl
testl
push
jae
jl
in
mov
mov
sti
outsl
mov
jns
mov
icebp
and
aaa
pusha
sti
dec
mov
shlb
sahf
push
fcoms
out
sbb
adc
cmpb
or
push
push
test
notb
xor
cmp
testb
loope
mov
push
adc
push
mov
mov
rcl
sbb
js
hlt
mov
cmp
popf
inc
xchg
shll
insb
pushl
in
adc
sbb
mov
xchg
andl
push
push
push
flds
push
addb
cs
ljmp
pushf
shrl
push
or
fsubl
cmp
sbb
cmp
pop
adc
mov
fwait
push
xchg
mov
adc
int3
mov
scas
cmc
and
leave
mov
cmp
pop
and
es
mov
lahf
add
cmpsl
int3
sbb
jnp
jp
jg
mov
mov
in
lock
out
mov
push
mov
xchg
and
or
in
mov
inc
subb
sbb
leave
mov
add
jp
pop
inc
sub
mov
sub
scas
jno
cli
push
cmp
adc
leave
arpl
pop
adc
xor
add
and
adc
orb
test
addr16
xchg
sbb
pop
inc
inc
xor
dec
and
shll
cmp
xor
js
outsb
cmp
or
inc
mov
dec
dec
sub
and
mov
adc
popf
and
fimuls
rclb
add
sbb
popf
or
adc
xchg
mov
out
lds
cmpb
add
add
mov
repz
sbb
inc
ret
lret
and
add
cmp
add
mov
jns
ds
fldcw
inc
xlat
test
insb
jg
pop
movsb
adc
mov
stc
sbbb
ret
ss
mov
jo
pop
mov
fnstenv
ret
push
push
push
addr16
add
mov
scas
sarb
xchg
jl
and
mov
jecxz
pop
jl
inc
sahf
and
pop
sub
and
sbbl
adc
sbb
testl
cs
bnd
xchg
icebp
or
xchg
push
push
loope
or
xchg
lods
in
xchg
bound
sbb
pop
clc
push
mov
jmp
mov
arpl
sti
adc
mov
mov
or
cwtl
and
inc
sbb
daa
mov
inc
dec
lods
dec
jo
dec
test
dec
or
or
sbb
int3
mov
mov
ficoml
jbe
clc
in
rcrb
enter
nop
and
lahf
dec
lcall
movsl
icebp
add
rolb
test
mov
sbb
cmp
clc
mov
js
sub
and
in
sbb
es
xor
add
or
mov
popf
fiaddl
add
jmp
and
xchg
dec
pop
adc
jno
or
adc
cld
imul
and
jne
repz
enter
aad
xchg
pushaw
push
xchg
and
and
sbb
mov
sub
mov
loop
je
fidivrs
sbb
out
push
xchg
data16
pushf
mov
cmp
loop
mov
pop
je
xchg
je
or
and
jae
cmpsb
roll
sbb
sbb
cmpsl
orb
pushf
sbb
loope
jecxz
push
add
loopne
pop
js
xchg
aaa
lret
insb
adc
addl
add
fdivl
leave
out
inc
adc
lea
subb
repnz
xchg
and
or
aad
into
mov
insb
jae
icebp
hlt
jle
fisttpll
push
and
push
lcall
or
daa
in
mov
xchg
sbb
jecxz
int3
faddl
xchg
add
jl
pop
loopne
pop
bound
jns
xor
mov
push
testb
les
jecxz
inc
cmp
shrl
jg
inc
pop
jge
movl
xchg
test
inc
fs
in
fcoms
xchg
mov
rorl
inc
lret
add
lcall
add
cld
push
jne
cmpsl
cmc
pop
inc
pop
int3
imul
xlat
out
cmp
add
icebp
sbb
and
or
addr16
or
repz
cmpsl
call
outsl
out
or
stos
ljmp
mov
mov
inc
push
cmp
mov
mov
jo
hlt
test
add
mov
sbb
insl
or
ja
imul
dec
jno
stc
cmp
sbb
outsl
cmpsb
adc
jecxz
jbe
pop
enter
scas
jg
es
pop
testl
xlat
clc
test
inc
into
mov
jne
in
cs
push
dec
jmp
sbb
test
xchg
les
pop
in
out
imul
sbb
inc
faddl
push
repz
jmp
push
rcrb
inc
sahf
and
insb
pop
pop
add
lret
int
repnz
xor
subb
cmp
stc
pop
xlat
sbb
dec
jg
or
sbb
adc
imul
mov
icebp
insl
xor
sbbb
sti
and
popf
or
ds
or
lea
jns
iret
ljmp
sahf
aaa
lahf
les
sub
outsb
imul
pop
lods
popf
mov
emms
jmp
in
scas
pushf
into
in
adc
aas
sub
jo
in
in
jmp
fwait
dec
sub
xor
icebp
das
daa
ja
es
or
popf
pushf
outsl
pop
cli
adc
mov
sbb
mov
pop
adc
xchg
jp
inc
sub
stc
inc
sub
insb
popa
into
push
fisubs
lcall
adc
cmp
cmpsb
pop
sbb
insb
pop
and
hlt
testl
pop
leave
sbb
pop
sbb
mov
imul
inc
mov
lahf
sbb
push
mov
insb
cmpxchg
inc
or
cmc
jge
sahf
xchg
imul
sub
pushf
add
push
sbb
xor
mov
jne
mov
ljmp
insb
std
insl
in
push
pusha
out
cld
jno
push
push
and
mov
out
repnz
jmp
xchg
inc
xchg
xor
inc
cwtl
lods
mov
mov
xor
imul
and
cmp
xor
leave
mov
lcall
lret
dec
bound
out
lret
mov
mov
jmp
icebp
shlb
adc
sub
add
stos
into
pop
imulb
inc
stos
loop
push
out
cld
add
sub
insb
push
in
into
outsb
dec
and
insb
aaa
lea
sbb
jl
pop
cli
enter
inc
ja
je
out
jne
int3
cmc
dec
in
ret
xchg
cmpsl
jmp
and
rcrl
xor
mov
adc
loop
ljmp
mov
adc
into
mov
xchg
sti
adc
or
push
xchg
mov
jp
cmp
insb
mov
mov
pop
or
cmp
mov
or
popa
and
idivl
add
fisttpll
repnz
cwtl
add
ja
pop
push
dec
popa
pop
ss
pop
sub
jns
in
add
into
inc
ret
cmp
xor
sub
xchg
cs
mov
mov
or
inc
push
mov
test
stos
popf
fnstsw
mov
call
xor
or
in
and
lahf
jno
sub
fldt
inc
mov
aam
dec
test
pop
xchg
ja
mov
pusha
xchg
shlb
push
popa
scas
mov
dec
mov
pop
mov
push
cmc
movsl
mov
fsubl
js
imull
mov
mov
cs
into
sbb
pop
inc
xor
lret
loopne
xchg
xchg
or
and
movsl
rcrl
add
push
jb
cmp
jae
mov
sbb
hlt
outsb
imul
sbb
cmp
mov
fldl
mov
push
lcall
in
push
daa
pop
xor
call
jnp
inc
push
int
mov
pop
dec
lahf
xchg
sbb
repnz
inc
hlt
scas
lds
sbb
or
lcall
stc
sub
and
cld
aad
movsb
jno
inc
lods
mov
push
data16
mov
sub
pop
ret
sbb
add
addr16
sbb
sbb
adc
sbb
mov
pop
lock
movl
push
les
adc
inc
push
fcomip
and
or
dec
bndldx
push
les
insl
mov
clc
xor
sbb
jbe
or
das
shrl
iret
test
dec
mov
aad
mov
jb
ds
and
addb
mov
dec
stos
sbb
jl
push
and
mov
jg
xor
bound
dec
dec
daa
js
cwtl
insl
or
cltd
inc
mov
mov
mov
nop
aad
sub
sbb
fidivrs
add
push
cmp
pop
stos
adc
jo
cltd
mov
inc
rolb
sbb
adc
push
cmp
mov
add
inc
add
int3
arpl
pop
test
dec
loopne
push
ret
dec
pop
lahf
dec
lods
loope
data16
stos
or
mov
test
push
inc
sub
ss
jbe
repnz
rcll
test
xor
dec
mov
jno
and
ljmp
popa
arpl
stc
xchg
sub
mov
jge
mov
cmpsb
sbb
xlat
jle,pn
xor
fisttpl
sub
hlt
pop
es
pop
inc
mov
add
daa
mov
sbb
les
push
xorl
adc
mov
push
in
jl
out
push
mov
mov
pop
scas
push
stc
rcl
int3
ret
jle
xchg
jmp
aas
data16
hlt
dec
popa
pop
jae
andl
inc
mov
out
cld
push
jl
dec
cwtl
adcb
mov
jns
movsl
xchg
clc
inc
dec
rcll
pop
fsubl
adc
or
jl
push
test
aam
in
sarl
add
cmp
or
nop
dec
xchg
mov
pusha
mov
xchg
mov
push
dec
push
adc
addb
repnz
or
test
push
les
jmp
inc
jmp
mov
mov
stos
inc
arpl
popa
dec
pop
sbb
pushf
pop
cwtl
mov
loop
icebp
or
movsb
loop
nop
jae
xor
mov
fdiv
jp
mov
or
sbb
add
lcall
xchg
fwait
negb
cmp
add
mov
in
outsl
pop
test
adc
mul
mov
jo
int3
dec
fs
mov
imul
jae
mov
add
sub
mov
mov
sahf
or
push
xchg
jp
xor
xlat
dec
andl
inc
pop
cmpsb
jns
push
push
sub
lret
adc
ret
jbe
adc
mov
mov
xor
js
and
xor
and
sbb
jmp
xlat
push
mov
in
mov
ficoml
lods
xchg
adc
shlb
jne
jle
push
insb
push
or
sbb
lret
add
stc
jbe
xchg
push
cmpl
mov
inc
xchg
clc
cli
jb
hlt
insl
jmp
pushf
add
or
inc
xchg
push
or
into
mov
fisttps
popf
repz
sbb
sbb
xchg
sub
divb
jne
mov
cwtl
mov
push
mov
lock
loopne
clc
add
fnstcw
in
shl
mov
sbb
es
cmpsl
jbe
dec
std
outsb
xchg
shrb
and
add
imul
mov
push
mov
int3
add
inc
addr16
or
cmp
cs
dec
adc
dec
mov
hlt
jae
mov
pop
dec
in
cmpsl
arpl
push
leave
adc
sub
or
inc
leave
and
sub
adc
insb
xchg
iret
mov
lds
mov
jmp
pop
inc
imul
mov
fisubl
lods
push
add
out
icebp
orb
out
and
ficompl
jae
push
jne
test
shl
movsb
add
push
sbb
test
out
xor
cld
fisubrl
jge
inc
movb
sub
jge
dec
xor
insl
hlt
shll
popa
ret
mov
je
dec
sub
aam
jns
xchg
movsb
and
sub
and
xchg
stc
ds
xadd
adc
add
arpl
repz
push
mov
push
arpl
and
in
xchg
xor
xchg
push
push
xor
jl
sbb
cmp
shll
bound
aad
scas
insb
sub
rol
pop
push
mov
sbb
out
xchg
jl
loopne
add
dec
xchg
icebp
add
stc
jp
push
cmpsb
jmp
test
idivl
inc
mov
dec
arpl
mov
int3
adc
test
xor
jo
inc
lret
hlt
adc
stc
aad
xchg
lods
xchg
pop
cmp
sbb
adc
jmp
jl
mov
push
jl
push
cmp
add
dec
push
cld
nop
sbb
dec
xchg
adc
clc
mov
mov
cmove
dec
add
outsb
mov
xchg
adc
mov
mov
das
pusha
adc
and
mov
sub
mov
jno
ret
dec
push
adc
in
sarb
and
dec
cmpsb
cmpsl
xor
pop
pop
mov
imul
jns
add
loope
test
inc
pop
inc
lods
ja
mulb
cli
out
int
xlat
dec
mov
cmp
sub
out
dec
jno
cli
sbb
mov
and
stos
and
push
in
test
repnz
outsb
add
jo
bound
or
sbb
in
adc
out
dec
hlt
mov
xchg
mov
das
sbb
nop
aas
dec
mov
adc
mov
mov
int3
xchg
or
in
pop
insb
jae
sbb
js
repz
add
sbb
inc
gs
jmp
add
leave
outsl
pop
jecxz
cmc
push
dec
push
add
scas
inc
xchg
inc
push
adc
ja
and
mov
shl
je
jne
daa
or
aam
test
mov
xor
mov
mov
jo
pop
aad
dec
cltd
jle
rorl
aad
sbb
repnz
sub
jb
sbb
mov
aas
cmp
push
pop
loopne
sti
ret
push
dec
enter
push
pop
cmp
mov
cwtl
xchg
jg
xchg
jno
or
add
sti
outsl
jle
lea
test
jno
das
sbb
loope
pop
mov
mov
sub
and
xor
mov
lahf
sahf
mov
popa
xchg
adc
sbb
shl
scas
loopne
mov
mov
add
pop
fcmovnu
push
pop
jae
adc
jnp
xchg
negb
mov
idiv
dec
push
add
jns
pusha
cmp
adc
sub
rclb
mov
inc
aad
xor
aas
clc
jns,pn
push
pop
ja
mov
mov
sbb
push
xlat
sbb
xor
push
or
test
and
push
inc
cmp
lcall
or
add
mov
and
add
cmpl
or
and
mov
int3
inc
xchg
jge
and
adc
aad
mov
and
and
cld
sub
xchg
xor
dec
sti
mov
mov
mov
inc
jecxz
xchg
jecxz
je
pop
and
cmc
dec
inc
int3
push
pop
mov
addl
fistl
jmp
scas
outsl
pushf
sub
inc
adc
xchg
jno
insb
cs
xlat
mov
cmp
daa
ja
mov
fwait
or
inc
in
ja
outsb
leave
mov
jle
int3
adc
and
mov
and
iret
xlat
sti
jecxz
pop
jno
cmp
xor
out
mov
push
and
push
xor
push
or
xchg
add
scas
push
inc
mov
jbe
xchg
cmp
ss
push
xchg
dec
or
fucom
divl
aad
test
xchg
aam
mov
jp
js
lahf
int
and
out
repnz
jns
insb
das
and
test
xchg
inc
sahf
sub
jge
insl
hlt
imul
jmp
loope
in
mov
push
or
adc
xlat
mov
fimuls
pop
inc
test
jb
push
xchg
loopne,pt
push
dec
lds
into
stc
cmc
push
cwtl
sbb
movsb
shlb
testl
pop
xor
sbb
add
sbb
scas
leave
in
jo
mov
xchg
lea
fs
sbbl
sti
aad
out
scas
cmc
sbb
mull
adc
lret
inc
loopne
pop
lods
inc
in
arpl
data16
sahf
pop
test
pushf
ret
pop
aam
mov
inc
dec
sub
test
fisubs
fmuls
addr16
pop
aaa
call
inc
lret
fdivrs
and
into
iret
call
std
fs
decl
popa
in
stc
sahf
pop
adc
adc
insl
xor
and
pop
daa
into
xor
outsb
sbbl
sbb
insb
push
arpl
sbb
hlt
fldcw
je
sbb
xor
xor
mov
dec
cmc
pop
mov
nop
imul
push
mov
xchg
stos
mov
jno
dec
add
jmp
aas
pop
pop
or
inc
sub
cld
enter
lret
or
cmp
aaa
sarl
pop
inc
rcr
mov
mov
or
mov
pop
cmc
fmulp
pop
in
aas
movsb
xor
or
lret
inc
push
cs
mov
add
push
mov
into
out
and
pop
mov
dec
mov
pop
pop
jae
sbb
inc
push
jecxz
nop
cmp
dec
cwtl
or
insb
test
xor
and
push
loop
outsl
in
sub
or
push
aad
jecxz
jecxz
jne
loope
pop
imul
sti
or
cmc
sub
push
push
sbb
popl
xchg
dec
fs
mov
fmulp
inc
fdivrs
mov
std
dec
out
mov
fwait
pushf
addr16
mull
jb
inc
push
mov
cmp
frstor
mov
sbb
ja
fisubl
sub
and
pop
push
aam
sbb
stc
mov
jo
xlat
bound
mov
mov
jmp
imul
hlt
data16
push
test
dec
adc
pop
and
mov
stos
sub
outsb
mov
lea
into
xor
imul
aam
xchg
add
add
je
filds
push
rcrb
scas
push
inc
scas
iret
xchg
js
adc
pusha
xor
lods
dec
and
mov
loopne
sbb
movb
cmp
push
daa
xchg
cmp
and
popl
fcomps
mov
inc
mov
fstpl
adcb
jl
mov
xchg
mov
add
xor
fldl
jle
adc
fcomps
insl
ret
lahf
mov
pop
shlb
cmp
push
pop
mov
shrl
loope
push
push
pcmpgtb
jl
fnstcw
out
or
sub
je
dec
lds
cmc
ret
in
mov
scas
mov
jae
in
insb
or
cmp
jae
ja
push
or
inc
cmp
nop
sbb
sub
ficomps
shl
and
push
jmp
jo
jmp
cmp
push
and
or
adc
dec
jl
and
roll
ss
mov
inc
xchg
loop
and
fdivs
movsl
xor
ds
iret
inc
lret
dec
aaa
cmp
sub
fidivrs
jecxz
sub
adc
into
jp
sub
jae
mov
arpl
or
sub
aaa
imul
movsl
out
pop
or
and
mov
add
push
imul
cs
push
xchg
jo
jne
out
jl
mov
test
fdivl
lret
pushf
stos
mov
mov
adc
sbb
or
xchg
xor
leave
sub
mov
xchg
add
cld
incb
inc
jne
cmp
or
adc
dec
push
jns
mov
mov
xor
paddsb
mov
xor
repz
out
out
xchg
mov
sbb
movsb
cli
sub
xlat
fs
divl
inc
mov
pop
in
aam
jge
or
nop
sbb
adc
jmp
jne
or
sbb
cmp
imul
inc
pop
xor
push
add
mov
mov
sbb
inc
push
jb
push
xor
push
push
xor
popf
out
js
jmp
icebp
loope
cmp
or
inc
lcall
xor
lods
add
adc
scas
mov
xor
hlt
xor
mov
lret
jne
adc
sti
inc
push
or
xchg
sahf
and
iret
gs
mov
pop
aaa
push
mov
and
jge
jp
les
jno
xchg
jg
pusha
aaa
mov
es
and
cs
or
into
sub
std
insb
enter
mov
scas
dec
and
sti
movsb
push
jp
add
push
das
push
push
mov
outsl
push
jmp
sub
push
cmp
add
scas
push
xor
in
mov
cs
mov
mov
inc
repnz
add
adc
pop
mov
outsb
loop
cld
movsb
lret
fbld
loopne
add
hlt
sarl
sarl
fisubrs
rcrb
scas
dec
sbb
mov
loope
test
and
test
out
push
cmp
and
in
cmp
inc
aaa
js
ret
gs
in
pop
and
fldt
lcall
xchg
ja
pusha
pop
or
sub
jns
mov
scas
inc
lcall
add
out
sahf
mov
loope
imul
inc
loop
notl
add
push
pop
std
cwtl
jg
xchg
test
and
sub
iret
dec
dec
into
pushf
mov
fsubrs
mov
das
mov
mov
repnz
add
icebp
inc
push
imul
arpl
cmp
dec
inc
loopne
cld
stos
pop
push
mov
outsb
add
fbld
push
adc
fsubrl
mov
push
stc
pusha
subb
out
sub
pop
cmc
xchg
fwait
out
inc
mov
pop
and
mov
test
mov
inc
sahf
jb
xor
negl
jp
mov
pop
xor
sarl
mov
shlb
jns
sti
mov
rclb
mov
xor
add
inc
sbb
cmpsl
pushf
xor
and
fidivs
mov
in
insb
xlat
or
lds
mov
add
sbb
stos
hlt
mov
xor
incl
sbb
repnz
cmpsb
insb
dec
inc
xchg
cmp
lret
into
or
fcoml
int
dec
aad
xor
cmpsb
scas
or
and
fcmovb
adc
pop
or
xor
into
mov
adc
pop
loop
loopne
adc
pusha
lahf
push
xchg
or
stos
or
inc
cmpsb
test
or
cmp
jnp
outsl
hlt
iret
test
adc
in
mov
iret
icebp
adc
ret
inc
push
mov
mov
xor
ficoml
sbb
cli
cmp
sti
jae
push
daa
dec
sbb
sbb
icebp
mov
scas
mov
sub
enter
sub
adc
cmp
sti
adc
mov
cmp
and
shll
sahf
add
push
in
stc
dec
jp
inc
loop
mov
jecxz
dec
xchg
jl
jne
leave
outsb
enter
fdivrl
jmp
ficompl
or
jmp
enter
lcall
cmpsb
icebp
mov
mov
outsb
and
dec
clc
jge
xchg
jne
push
or
out
jmp
jbe
out
mov
and
cwtl
movsl
repz
lret
jne
push
and
fcompl
fdivl
and
push
mov
scas
mov
pushf
out
add
int
or
mov
ja
in
xor
adc
and
pop
dec
xor
or
data16
loope
and
and
cltd
cmp
pop
cmpb
cmpsl
jne
mov
negl
popf
scas
test
inc
or
rcll
sub
icebp
stc
push
adc
sub
cli
scas
jne
in
cmp
int3
sbb
test
mov
jae
jecxz
xchg
ficoml
dec
xor
and
fcompl
jp
jle
cmp
insl
jns
aaa
xchg
jb
popa
cmp
stc
test
jae
inc
sub
and
push
sbb
into
shll
push
mov
iret
dec
push
mov
mov
mov
add
xor
pop
stc
lahf
push
mov
mov
ja
push
and
insb
repz
rcrl
cs
mov
std
mov
sbb
imul
insl
std
aas
lods
mov
pushf
loop
dec
mov
and
aam
mov
or
lea
sbb
push
pop
lds
pop
stc
dec
adc
dec
rcrl
lds
xchg
mov
xchg
ret
movsb
pop
punpcklwd
and
push
roll
mov
jg
dec
popf
xor
sarl
xor
xor
dec
cld
arpl
sti
mov
shlb
jb
push
adc
mov
cs
popf
das
call
and
cmc
dec
xchg
in
loopne
push
xchg
jl
sub
dec
jecxz
and
or
push
jae
lds
das
mov
mov
or
sbb
pop
and
pushf
jb
pop
insb
aad
in
sub
scas
dec
jnp
jnp
adc
and
pop
push
aas
insb
sbb
inc
push
in
lret
loopne
jbe
dec
stos
mov
add
add
fsubr
add
lahf
int3
adc
test
mov
cmp
push
outsl
cmp
test
pop
adc
xchg
sbb
jl
mov
jle
or
or
push
and
jnp
je
jmp
aad
ret
mov
xor
ja
pop
cmp
addl
sub
lea
jns
xchg
out
add
add
or
or
call
mov
inc
cwtl
jae
xor
pop
xchg
inc
rcrl
xor
sarb
mov
and
lock
fucomip
sub
lahf
add
mov
sub
hlt
inc
dec
lods
add
inc
aas
shlb
int
jno
pusha
mov
icebp
sarl
xlat
lret
xchg
or
stc
push
mov
sti
subb
test
mov
cmpsb
icebp
xlat
test
addr16
lahf
data16
add
and
mov
pop
repz
sahf
or
outsl
add
fisttpll
sub
iret
repz
test
int
push
gs
fnstenv
mov
aas
sahf
lret
shrl
daa
ret
mov
sbb
pop
fmuls
loopne
sti
jmp
insb
loopne
adc
jmp
loopne
insl
mov
inc
sbb
push
mov
cld
jne
pop
aam
repz
jecxz
out
or
push
scas
add
and
fisubrl
lret
push
fistps
mov
test
in
lahf
mov
cltd
add
xor
decl
and
nop
lds
lahf
add
or
shrl
sub
xchg
pop
mov
sarl
cmpb
xor
lret
aam
and
cwtl
dec
jp
jns
fadds
jb
notb
mov
push
and
insl
ljmp
fadd
sahf
aas
mov
cmp
and
lret
xchg
add
enter
test
mov
icebp
mov
and
jmp
stos
std
lahf
pop
dec
and
call
mov
push
sarl
les
inc
jecxz
bound
not
movsb
or
push
push
aaa
mov
orl
and
push
int
repz
pop
mov
pop
push
data16
xor
inc
xchg
push
inc
pushf
in
cmpsl
lods
fcomi
inc
mov
jns
sbb
rcll
in
movsb
adc
lds
inc
stc
mov
sar
mov
push
dec
mov
loop
data16
cltd
addr16
hlt
daa
sbb
fisubl
sbb
mov
dec
mov
in
insb
out
test
or
outsl
pop
std
push
mov
lock
sub
in
incl
xchg
repz
dec
add
pop
stc
xchg
call
mov
inc
aam
loope
jge
jns
fs
mov
mov
shlb
push
add
lds
push
and
add
ja
push
sub
int3
lcall
mov
lret
add
ret
sbb
lret
mov
push
mov
pop
stc
mov
or
or
and
xchg
pop
adc
enter
cwtl
scas
push
pushf
sub
adc
dec
push
dec
popf
insb
mov
insb
mov
jne
xor
idiv
and
leave
push
inc
cwtl
or
int3
cli
fnstenv
data16
sbb
ja
dec
out
xlat
adc
cmp
cli
mov
jg
push
jo
adc
xor
insl
repnz
lock
jl
and
and
stos
mov
or
cmpsl
mov
shrb
inc
pop
dec
repnz
repnz
or
test
aaa
pusha
testl
push
sbb
es
out
iret
insl
cmp
mov
push
xchg
enter
movsb
dec
or
in
hlt
lds
pop
cs
xchg
dec
sub
sbb
adc
mov
cmp
xor
addr16
insl
icebp
pop
call
inc
in
or
adc
jp
sti
sub
jae
insb
jge
inc
adc
pop
pop
sbb
ror
cli
xor
inc
popf
sbb
pop
inc
xchg
popf
mov
add
jecxz
pop
rolb
and
and
cmp
int3
or
mov
mov
loope
je
aam
jl
inc
push
test
lods
push
mov
nop
ficomps
mov
pop
call
or
mov
adc
mov
mov
fxch
test
in
jle
and
into
inc
rcr
loopne
pop
sub
push
xor
push
cmpb
and
iret
pop
or
push
in
aas
dec
ror
mov
or
sub
mov
pop
jmp
test
and
leave
inc
and
dec
mov
jnp
mov
pop
mov
dec
xor
mov
shll
mov
and
movb
fcoms
push
insb
aad
pop
roll
fmuls
jecxz
and
lcall
jno
jl
in
imul
sti
enter
push
cltd
fsubrl
test
lds
xor
ja
add
insb
push
push
jl
imul
sbb
arpl
mov
dec
or
pop
and
je
data16
adc
mov
inc
ljmp
mov
dec
jb
mov
std
fs
jnp
cmp
addr16
inc
cmp
ret
add
mov
adc
mov
pop
add
or
and
sbb
mov
in
rclb
test
or
into
aaa
cwtl
mov
cwtl
mov
push
push
das
or
popf
push
mov
dec
jp
mov
mov
lods
pop
daa
pop
add
negb
mov
bnd
dec
jae
data16
aad
push
data16
mov
repz
cltd
inc
dec
into
mov
add
cmp
dec
pop
cmp
shll
mov
mov
add
inc
cmp
push
lret
jp
nop
mov
add
cli
subl
dec
xchg
jns
add
icebp
test
sbb
mov
or
sbb
inc
rcrb
insb
cld
dec
fcoml
clc
push
pop
mov
cwtl
xor
add
lea
es
cmc
jl
dec
icebp
or
pop
mov
inc
jecxz
fwait
je
into
mov
fwait
add
adc
mov
inc
movsb
add
addl
nop
push
dec
adc
add
mov
nop
add
pop
mov
ss
push
fdivp
push
or
stos
add
push
cs
pop
nop
in
lret
aad
lcall
loopne
and
xchg
dec
stos
push
in
dec
mov
hlt
jb
push
mov
lock
popf
or
lods
mov
enter
or
test
aaa
popl
sti
push
rcrl
and
xchg
mov
pop
push
pusha
xor
jecxz
insb
jb
ret
lret
stc
mov
inc
nop
xor
dec
inc
sbb
in
and
inc
add
je
inc
icebp
sbb
or
fs
dec
shrb
sahf
add
fistpl
insl
imul
scas
sahf
jb,pn
icebp
mov
shld
or
lahf
sahf
cmp
xchg
insb
xor
fcmovb
iret
xor
fcmovne
mov
pop
ret
jp
int3
jo
jns
fs
mov
mov
add
sti
pop
sbb
lock
mov
ffree
xchg
mov
int
jecxz
js
cli
imul
ror
or
xchg
mov
or
pop
into
mov
daa
orl
icebp
jle
jae
aas
inc
jb
aad
dec
sub
sub
loop
xor
aas
mov
push
sub
loopne
sbb
nop
jmp
jnp
aas
jmp
mov
push
rcll
mov
push
repz
adc
xchg
sbb
rcrl
ja
push
daa
aad
arpl
es
dec
test
xchg
push
rcrl
pop
test
ljmp
insb
in
fidivl
xchg
fidivrs
xchg
jmp
xor
ss
and
xor
mov
into
hlt
xchg
sbb
jmp
or
subb
sub
cmp
jp
scas
jmp
cwtl
mov
lret
leave
cmp
stos
lret
aas
fnstcw
repnz
inc
test
sbb
les
push
jae
sarl
add
xor
sbb
insl
ljmp
add
inc
pusha
clc
rcll
lret
sub
or
jp
out
or
jo
or
dec
mov
sbb
jp
cmp
test
xor
cmp
icebp
out
dec
push
shrl
or
jbe
or
xchg
sub
repnz
int
out
mov
pop
mov
cwtl
and
pop
enter
sub
xchg
js
fucomip
pop
jl
adc
cmp
cmpsb
cmp
add
push
imull
mov
sbb
sbb
insl
dec
mov
dec
mov
adc
daa
fnstsw
lea
sbb
xchg
inc
and
les
xor
int
mov
cmovp
mov
xor
lret
inc
xchg
rcll
clc
mov
call
cmp
int3
imulb
pop
xor
jg
xchg
xchg
xchg
loope
push
setno
aaa
cmpsl
std
outsl
jnp
cmp
js
jmp
dec
jge
repnz
mov
cmp
xchg
fs
push
ss
stc
add
dec
cmp
mov
adc
and
dec
xor
add
lods
cmp
aam
lret
lea
sub
adc
xchg
mov
push
xchg
push
xchg
aad
lods
push
in
scas
pop
out
mov
or
hlt
push
roll
pusha
std
cmc
sbb
cmpsb
pop
mov
mov
aas
scas
cmc
sahf
ret
sub
outsb
fwait
xchg
ficomps
jecxz
jl
cmp
sti
sub
mov
push
sbb
add
sub
dec
mov
xchg
jo
lods
test
fdivrl
mov
imull
das
stos
xchg
mov
adc
mov
clc
adc
dec
push
add
imul
adc
loop
xlat
xchg
outsl
push
dec
sbb
push
out
inc
push
insl
dec
fwait
jmp
and
test
and
xor
adc
inc
or
and
adc
push
sub
cs
out
int3
lds
push
repz
jne
mov
xchg
stos
lret
loope
in
mov
inc
dec
out
inc
test
test
test
jmp
xor
outsl
test
out
push
push
popf
cli
sahf
data16
icebp
not
psubb
outsl
int3
clc
pop
cs
stc
add
cmp
daa
dec
xor
dec
push
push
push
adc
std
adc
add
jnp
pop
icebp
mov
inc
and
aam
mov
pop
aam
cmp
cmp
sbb
stc
jo
test
jle
insb
stos
sub
popa
cmpsb
enter
or
test
inc
adc
add
pop
dec
popf
cmp
mov
pop
xchg
xchg
jns
mov
jg
popl
and
cmc
xchg
pushf
adc
out
dec
xchg
das
or
in
aad
ds
add
imul
mov
add
jp
test
adc
mov
mov
imul
pop
add
fs
adc
lahf
dec
add
inc
xor
cmpsl
and
daa
iret
dec
xchg
fcmovb
xor
inc
ret
icebp
or
mov
sbb
frstor
pop
fnstsw
sbb
cmp
ja
adc
xchg
push
or
test
daa
sub
pop
popf
add
inc
ret
inc
push
and
daa
pop
mov
int3
add
pop
mov
mov
pop
xorb
mov
push
std
clc
pop
add
outsb
aam
std
xor
dec
add
arpl
add
aad
aad
mov
mov
mov
into
pop
icebp
hlt
sbb
mov
roll
add
stos
imul
cmc
cmp
lds
lods
stc
xor
mov
lods
lret
push
lret
inc
dec
in
rcr
or
jge
lock
lds
rcl
rcll
scas
test
psrlq
xchg
add
push
dec
mov
movsl
push
and
xor
fsub
sti
rcll
pop
in
imul
and
adc
add
pop
cmpb
loope
fnstenv
adc
add
dec
adc
inc
arpl
adc
inc
movsl
pushf
cs
cwtl
push
ds
pop
ja
outsb
jae
imul
sub
adc
addr16
repz
mov
xchg
lea
inc
int
jmp
daa
testb
add
out
scas
adc
mov
lret
add
pushf
stos
mov
or
sahf
push
rcrb
inc
cltd
sub
dec
pop
lea
sbb
mov
and
pop
push
xchg
push
mulb
mov
pop
lahf
dec
shlb
add
xor
cmpsl
rorl
lods
sbb
stos
inc
xor
xchg
clc
cmp
rclb
mov
dec
out
inc
jno
mov
clc
loope
in
xchg
mov
xchg
ljmp
fidivs
imul
icebp
clts
flds
popa
dec
pop
sahf
movsl
adc
xor
xlat
and
hlt
sbb
cmpsb
pop
call
and
sti
popf
xor
sbb
jne
pop
push
fdivl
mov
mov
jmp
sub
xchg
sbb
repz
inc
cmpsl
outsb
gs
adc
je
push
cwtl
ret
sbb
cmpsl
add
gs
sbb
inc
mov
push
cmp
sbb
dec
mov
loop
add
lret
and
pop
push
lahf
mov
jnp
push
xor
push
mov
adc
mov
adc
pop
pusha
movsb
adc
dec
mov
fwait
and
and
mov
cwtl
das
repnz
mov
xor
mov
or
or
cli
imul
es
mov
xlat
aam
lahf
pusha
pop
pop
mov
andl
inc
rcl
fxch
adc
cmp
lea
sbb
gs
xlat
and
jecxz
jns
and
fisttpll
les
mov
inc
and
push
into
es
jmp
dec
pop
clc
test
xchg
or
fimuls
pusha
fldenv
jecxz
inc
in
fnstcw
outsb
scas
je
int3
add
cmp
cltd
mov
mov
mov
inc
aaa
mov
sbb
add
adc
xor
scas
fs
pop
xorl
cli
sbb
inc
xchg
sub
scas
pushf
mov
pushf
mov
and
divl
add
leave
xor
pushf
add
sahf
shll
ja
add
cs
lahf
push
arpl
arpl
and
pop
jl
push
out
mov
insl
add
sub
add
mov
or
aaa
sbb
fnstsw
inc
aam
cmp
in
mov
out
in
or
add
btr
mov
sub
imul
push
xor
mov
sti
repnz
hlt
push
mov
nop
jnp
icebp
jne
adc
mov
add
add
dec
movsb
dec
mov
jb
in
sub
das
pop
jp
mov
insl
roll
out
xchg
stos
sbbb
jae
mov
fistps
jns
inc
xchg
mov
xor
pop
xchg
sub
cmp
xchg
adc
jbe
scas
xor
xchg
and
hlt
mov
gs
sti
fs
leave
call
cmp
jge
push
adc
clc
pushl
shlb
jb
and
mov
pop
dec
jns
or
cmp
lahf
and
arpl
cmp
mov
popf
stc
mov
inc
sbb
loop
fisubrs
clc
sbb
sub
inc
scas
push
adc
popa
sbb
mov
loopne
lock
and
push
lods
xor
hlt
jmp
int
addl
pop
outsl
jle
sbb
pop
sbb
jle
orl
insb
movsl
xchg
out
push
sub
or
and
iret
jg
or
mov
bound
icebp
sbb
insb
mov
repnz
subl
adc
shll
mov
outsb
dec
sbb
add
imul
mov
mov
sbb
js
sub
push
adc
inc
fcom
pop
leave
add
scas
jle
aad
les
movsb
stos
outsb
xor
sbbl
sbb
adc
pop
push
add
hlt
inc
inc
and
cmc
and
dec
or
ret
popf
mov
mov
push
pusha
xchg
pop
pop
pop
push
inc
xor
sbb
repz
loopne
aad
lods
mov
mov
xchg
sbb
popf
test
push
sbb
inc
dec
les
mov
lcall
fidivrl
cmp
sti
push
loopne,pn
cltd
dec
xorl
inc
stos
icebp
insb
mov
mov
mov
mov
inc
cmp
mov
stc
das
push
outsb
xchg
cmp
pop
and
cwtl
or
xchg
jp
fwait
sarl
test
pop
xor
adc
std
mov
test
and
sbb
dec
and
dec
cld
mov
repnz
test
pop
mov
jp
shl
inc
mov
mov
lret
push
lret
pusha
dec
scas
pop
hlt
scas
fstps
adc
lahf
xchg
lds
add
filds
push
fs
and
popa
comiss
lahf
pop
push
dec
adc
lock
ljmp
stos
jbe
add
cmp
es
lar
cmpsl
push
and
cwtl
or
repnz
test
and
sbb
and
adcl
lea
aad
cmp
xchg
pusha
push
or
fistpl
call
mov
mov
mov
shrl
into
pop
in
pushf
pop
fdivl
sub
jmp
cs
push
sti
fwait
test
mov
push
inc
xchg
or
jae
pushl
mov
adc
loopne
lret
pop
stos
or
adc
adc
cmp
add
cs
adc
popf
xchg
cmova
jbe
popa
push
aad
mov
icebp
les
dec
aad
add
pushf
push
dec
pushf
mov
std
scas
lahf
mov
push
push
sahf
jle
or
jnp
xor
loope
push
popa
pop
pushf
iret
inc
sub
jmp
in
cltd
mov
pop
cmc
or
push
dec
sbbb
pop
add
mov
inc
scas
pop
push
push
and
or
sub
adc
insb
bound
mov
mov
add
andl
les
testb
loope
leave
mov
ret
sbb
mov
lret
adc
adc
lods
je
iret
adc
add
mov
mov
jle
mov
mov
fadds
fwait
or
inc
movsb
jne
cld
mov
shr
into
aaa
dec
jmp
ljmp
scas
adc
jae
adc
pusha
in
lret
mov
cmp
lock
negl
pop
mov
aas
lea
es
cmpl
bnd
adc
out
repz
cmp
rol
ret
and
inc
mov
and
mov
mov
sar
insb
jge
or
and
nop
xchg
daa
sbb
pop
cmc
shr
add
test
cmpsl
ret
xchg
add
out
aad
out
and
mov
hlt
loope
inc
dec
into
inc
imul
ss
lock
dec
fsubrl
into
and
pop
jns
arpl
aam
or
cmpsb
sbb
add
aad
mov
push
jbe
js
cmp
aam
jnp
insb
or
push
pop
pop
sbb
mov
jmp
inc
loopne
push
mov
adc
and
cmp
das
rcl
sbb
add
scas
rolb
or
sub
aaa
and
mov
andl
adc
loope
sahf
out
scas
push
mov
cmp
xor
bound
loopne
xor
sub
sub
ret
mov
fisubl
sub
sti
cmp
cmp
xchg
add
xlat
dec
jecxz
loope
fiadds
je
out
push
orl
iret
push
aaa
popf
push
xchg
push
push
scas
fnsave
xor
adcb
adc
jle
add
mov
dec
cmc
insl
xchg
test
inc
shr
outsb
ja
jo
pop
sbb
pop
xor
inc
adc
and
test
lea
xchg
sub
cmp
xor
push
ret
lcall
add
sub
mov
xchg
hlt
and
jno
and
push
add
mov
mov
adc
insl
dec
mov
cmp
int
and
ljmp
xor
icebp
cmp
add
js
loope
adcb
int3
scas
cmp
xor
das
mov
and
das
mov
jg
imul
cs
lock
pop
push
and
and
in
pop
mov
adc
push
out
pusha
push
mov
outsb
sbb
inc
or
sub
movsb
mov
push
mov
js
in
sub
bound
lret
adc
inc
xchg
fsubrs
insl
test
scas
inc
jl
lods
add
and
movsl
pop
sub
nop
or
mov
dec
popa
lcall
scas
inc
cmp
cld
and
mov
sbb
inc
jbe
mov
test
inc
jnp
cmp
adc
sahf
pop
dec
sub
adc
std
scas
sti
scas
jns
mov
shl
loope
pop
dec
or
xor
push
sti
out
icebp
pop
cmp
jmp
cwtl
dec
mov
push
prefetchw
dec
xor
inc
dec
and
dec
decb
bswap
jg
xor
cmc
cmp
fdivl
mov
fnstsw
mov
xchg
leave
add
lret
loopne
xchg
adc
addw
js
cs
andl
cmc
mov
xlat
jg
out
xor
mov
rcll
mov
adc
lahf
cs
cltd
icebp
cmp
inc
pop
pop
arpl
pop
jp
ret
jbe
xlat
out
outsl
add
xchg
mov
ud2
inc
jg
js
rcr
cmp
ja
adc
add
push
mov
dec
mov
xor
push
mov
sbb
or
or
inc
adc
into
and
xor
xor
sbb
and
fcoml
popl
popf
push
adc
pop
push
shll
or
sti
fistps
add
cmp
xor
dec
das
xchg
adc
add
adc
les
lcall
fnstsw
push
mov
aam
add
movsl
sbb
jns
cmp
cmp
and
xchg
or
adcl
lock
into
dec
pop
stos
insb
repz
sub
gs
and
sbb
stos
mov
test
jp
xchg
rcl
fnstcw
fldt
jmp
jae
iret
jecxz
inc
fsubrl
js
cltd
imul
movsl
xor
leave
xlat
daa
mov
and
inc
mov
xchg
inc
fnstcw
jmp
mov
repnz
mov
sahf
lock
pop
cmp
int3
dec
sbb
lds
pop
add
jge
mov
pop
and
xchg
in
adc
lods
mov
int3
mov
ficompl
push
add
push
ja
inc
lea
jbe
xchg
xor
cmp
fsubp
cltd
into
pop
xor
sub
mov
or
mov
pusha
imul
fstl
mov
cs
int3
xchg
addr16
dec
or
jns
sbb
imul
cmp
pop
inc
add
adc
jnp
int
and
jecxz
clc
mov
outsb
clc
sbb
les
hlt
lods
inc
stc
addr16
sub
psrlq
or
lock
mul
bound
sahf
lret
ret
inc
leave
test
cltd
cmc
push
adc
adc
in
sub
fsts
xchg
into
fsubl
hlt
int3
sub
pop
sub
sbb
insl
lds
mov
movb
rclb
or
mov
fcomp
jmp
mov
nop
out
cmp
arpl
mov
dec
or
daa
add
sbb
cltd
call
push
in
jge
and
test
pop
fbld
cmp
fnstenv
xchg
cmp
cli
lcall
mov
push
push
call
dec
sub
loope
xor
bound
inc
aam
dec
dec
jnp
adc
out
dec
sbb
loopne
das
add
cmc
shlb
insb
mov
nop
mov
sbb
sbb
mov
add
dec
movsl
cltd
pop
fildll
roll
pop
push
xchg
negl
mov
ja
sub
jnp
imul
xor
inc
xor
and
loopne
leave
xchg
fstps
push
push
jmp
jae
push
test
cmp
inc
lahf
sbb
jmp
sti
or
lcall
in
aaa
xor
mov
dec
insb
ret
in
aaa
jg
cmpsl
push
hlt
jnp
sub
mov
pop
insb
push
sub
pop
std
clc
fadds
loope
mov
add
pop
jmp
shrb
push
jns
jecxz
fmuls
call
or
mov
orl
adc
repz
mov
cltd
scas
adc
hlt
cld
sti
and
int
xor
add
adc
ror
xchg
jg
jo
push
gs
clc
and
sub
rolb
mov
ret
and
dec
xchg
pop
int3
lods
xor
daa
aad
and
cmp
inc
cmp
mov
jl
or
jo
call
loope
sub
pop
sbb
jp
out
fidivl
ss
xchg
or
enter
repz
inc
insb
add
cld
ljmp
ret
pusha
xchg
testl
and
imul
in
and
imulb
enter
and
pop
mov
movsl
es
scas
nop
sahf
jp
push
in
mov
pushf
adc
push
xchg
pop
inc
rolb
push
dec
push
clc
lcall
jmp
add
dec
push
repz
sbb
dec
mov
cmp
into
imul
stc
and
insb
je
sbb
test
in
mov
cmp
filds
scas
jle
xor
ss
lret
inc
sbb
fiadds
pop
loopne
sub
mov
sbb
aaa
jae
insb
shr
cmp
pop
xor
cmp
and
dec
add
int
aad
int3
jp
and
add
movsb
xor
jno
fistpll
inc
test
xchg
push
adc
sbbb
rcr
and
insb
adc
ds
adc
inc
adc
adc
and
dec
cmp
mov
in
rcll
inc
shrb
mov
insl
rcrb
jns
cs
add
cmp
fcomps
fsubrs
dec
jno
fiaddl
jle
sbb
fsts
out
dec
xor
and
jo
adc
or
cs
das
fiadds
or
arpl
or
sbb
mov
jo
mov
pop
cmp
addl
mov
cs
sub
adc
jl
inc
add
add
xchg
inc
fsubrs
dec
imul
push
push
add
add
mov
pop
loope
pop
lcall
pop
inc
inc
jbe
stc
fdivl
aas
hlt
ja
or
rcr
mov
mov
push
xor
stc
jl
push
push
sub
lcall
xchg
sub
sub
data16
pop
icebp
mov
mov
and
out
je
mov
fsubrs
ds
push
rorb
or
shlb
xchg
fwait
movsl
add
sub
or
add
pushf
lcall
iret
cli
lods
clc
jb
in
adc
add
and
sub
dec
nop
add
in
jg
in
jl
cs
xchg
xor
into
dec
mov
sub
or
jmp
and
out
and
jle
or
call
cmp
popf
fimuls
call
sti
dec
inc
mov
fucomip
dec
out
jle
sbb
movsl
or
ficoml
aad
addl
bnd
fistpl
and
and
push
jns
movsb
repz
mov
loope
fwait
and
pop
mov
out
loope
imul
pop
push
out
xchg
cli
inc
adc
cmpl
jnp
and
mov
sbb
shl
xor
push
repnz
fidivl
push
sub
xchg
add
push
push
or
pop
fsts
inc
ljmp
xchg
addb
mov
stc
dec
xorl
mov
fcoml
test
add
jmp
cmp
xchg
out
ja
and
sub
shll
outsb
jno
push
or
out
ret
jns
call
nop
mov
inc
dec
inc
sub
loop
sar
stos
and
xchg
ror
sub
or
repz
fdiv
push
adc
xlat
push
push
push
or
sbb
hlt
or
mov
int
jnp
push
sub
ds
movsl
ljmp
rorb
push
xlat
sbb
sub
mov
icebp
repz
cmp
mov
aam
inc
sub
lods
add
xlat
fiadds
sahf
xor
test
pop
push
clc
int3
scas
pop
and
addr16
push
xor
add
outsb
cli
loopne
fcompl
imul
fidivl
test
or
aas
stos
adc
int3
push
dec
mulb
push
mov
ret
out
pop
mov
mov
shrl
pusha
sbb
lock
push
or
or
adcl
jg
sarl
jno
xchg
push
add
call
shl
in
test
or
dec
mov
daa
shlb
shlb
fld
out
in
adc
test
adc
jne
adc
enter
mov
jo
mov
or
insl
mov
lds
xchg
enter
inc
rcll
lods
in
into
lds
stos
movsb
sbb
inc
inc
xor
cmp
fisttpll
xor
push
scas
inc
mov
mov
xor
mov
jle
nop
movsl
adc
xor
pop
inc
adc
gs
enter
pushf
lret
xchg
shll
mov
loopne
push
cmpsb
mov
icebp
sbb
jmp
or
aad
dec
add
aad
mov
lret
inc
fdivrl
js
xor
adc
mov
cmp
cmc
gs
int3
push
cmp
fdivrs
add
sbb
dec
je
dec
cmpsb
insl
into
inc
push
arpl
jecxz
hlt
je
and
fdivl
out
idivb
sub
pop
clc
sub
xor
ljmp
mov
mov
cwtl
push
rcll
sbb
mov
ret
and
and
inc
test
xlat
mov
int3
mov
or
mov
mov
outsl
daa
fsub
in
iret
int3
add
and
sub
das
aaa
cmc
mov
les
sti
int3
push
add
jne
push
mov
out
or
inc
lea
mov
pushf
jge
popa
jno
mov
jne
and
push
mov
or
stc
adc
cs
rcll
stc
add
sub
out
repz
pop
sub
xorb
sahf
fistpl
sbbl
stos
lock
mov
sbb
mov
dec
add
add
mov
mov
mov
sbb
jb
sub
or
push
fiadds
loop
out
pop
mov
push
sbb
pushf
imul
jns
sub
scas
mov
push
push
sub
lock
in
sub
out
stc
decb
lea
iret
dec
cmp
xchg
dec
jmp
xor
sbb
mov
jecxz
arpl
add
setle
mov
stos
add
test
mov
lods
lret
sahf
push
xchg
pop
adc
or
sbb
subb
pop
dec
jns
ss
data16
cmp
jnp
adc
dec
insl
stos
mov
sbb
sub
xlat
popf
sarb
lret
adc
adc
push
mov
shlb
pusha
jge
movsl
fmul
cli
sbb
add
popf
cmp
int
xor
rclb
mov
and
js
xlat
and
or
ljmp
add
ret
imul
jae
mov
pop
ja
sub
div
adc
adc
jno
enter
push
push
arpl
xor
stc
push
outsl
cwtl
test
mov
pop
in
lcall
inc
xlat
outsl
loope
pop
popa
dec
jns
push
je
push
mov
mov
pop
cmp
hlt
push
xchg
xor
inc
dec
neg
ja
cltd
sub
sbb
popa
mov
sbb
daa
and
sub
adc
test
jmp
into
in
xchg
xchg
mov
out
gs
mov
fisubs
pop
push
cwtl
push
pushf
call
and
and
push
and
mov
and
cmp
in
sbb
sub
inc
nop
outsb
outsl
out
les
pop
pop
popa
jnp
jns
sbb
aas
pop
mov
lahf
mov
xor
sub
ss
pop
and
xchg
push
mov
and
leave
jnp
push
in
lods
sahf
adc
jb
out
in
mov
mov
cli
xchg
jl
in
adc
ret
cmp
adc
jle
ja
and
jnp
fs
xchg
imul
sbb
jp
call
xchg
push
inc
xchg
pop
and
cli
in
and
add
jno
cmpsl
cmpsl
sub
test
xchg
mov
mov
mov
addb
popf
mov
xchg
and
mov
cmc
imul
nop
fcoml
test
adcl
js
jno
add
lock
or
lock
into
stc
jnp
sub
outsl
pushl
jp
sar
rorb
add
mov
cmp
sti
stos
clc
sbb
bound
int
jb
sub
and
fdecstp
scas
sub
xor
cmp
inc
mov
xchg
shll
int
cmp
add
push
ficompl
push
imul
mov
test
sub
fsts
cli
dec
mov
mov
inc
add
dec
jge
jnp
fdivrs
mov
jp
mov
jno
jne
inc
call
mov
nop
fstps
loopne
popf
jo
inc
cmp
push
std
pop
mov
call
add
mov
cmp
scas
idivb
sarl
and
dec
gs
mov
int
mov
xchg
insb
outsl
mov
dec
dec
stos
adc
xor
outsb
jl
les
clc
pop
mov
add
inc
and
mov
push
mov
stos
and
jle
popa
ret
data16
adc
lods
sti
jnp
jae
mov
mov
pop
mov
inc
fidivl
dec
xor
incl
sahf
mov
pushf
je
push
loope
aad
ret
scas
int3
cs
data16
add
mov
xchg
repnz
add
sbb
adc
jo
rorl
pop
fdivrl
testl
jnp
push
aad
cmp
cld
sub
rolb
stc
lods
fs
mov
adc
inc
fwait
lock
mov
xchg
adc
in
pushf
fdivrl
je
stos
incb
pusha
jl
mov
inc
inc
push
pop
or
cmp
mov
sbb
fwait
mov
mov
cmpsb
adc
add
test
fdivp
jb
inc
scas
ds
fs
in
pop
dec
cltd
or
sbb
pop
inc
push
cmpsb
mov
pop
pop
xor
and
enter
ss
add
and
popa
push
add
jle
pusha
js
aaa
fiaddl
cmpl
xchg
int
cmp
push
or
and
inc
pop
aad
lods
cmp
add
mov
sahf
and
push
je
add
addr16
xchg
leave
fnstsw
fs
dec
add
add
mov
cltd
or
xor
push
mov
jns
cmp
push
fsubs
mov
in
mov
ds
jbe
pop
pushf
push
lret
dec
sub
add
jne
lea
fildl
or
xchg
pusha
test
xor
jbe
lret
inc
and
or
cmp
cmc
mov
xchg
mov
push
add
bound
scas
jns
ret
sub
add
sbb
adc
push
sbb
popf
mov
les
jmp
adc
mov
adc
popf
xor
adc
mov
pop
cmp
xchg
cld
xchg
mov
push
inc
add
pop
out
xchg
xor
jb
imul
cmp
jne
outsb
inc
adc
lods
imul
sbb
add
sahf
mov
outsb
and
push
push
ds
pop
repz
enter
retw
add
aad
cmp
das
jnp
dec
fdiv
mov
xchg
dec
and
lret
mov
fs
stc
test
and
or
es
movsl
push
fdivrp
inc
in
test
inc
mov
or
insb
call
je
shrl
push
dec
or
lock
jmp
insl
cmc
inc
jmp
xchg
push
sbb
cmp
in
jne
push
lods
push
inc
push
xor
xor
mov
faddl
mov
adc
jae
or
inc
and
pop
movsl
xchg
xchg
scas
das
pop
jbe
xchg
mov
in
insb
inc
cmp
cli
sbb
insl
iret
push
mov
loopne
mov
and
fcoms
mov
mov
and
adc
testl
data16
subl
ret
pop
pop
inc
sub
push
lret
mov
cmp
dec
and
lret
hlt
aaa
fmul
sbb
cmp
add
inc
sub
mov
insb
roll
xchg
mov
inc
mov
and
add
push
enter
adc
sti
negl
push
jns
mov
call
push
mov
cmpsl
clc
xor
stos
pop
test
jl
sub
xor
hlt
xor
aaa
inc
daa
movsl
jbe
pop
jmp
cmp
scas
fucomp
je
dec
aad
mov
fistpl
cmp
or
and
addb
notb
mov
inc
inc
add
xorl
sub
daa
lea
adc
xchg
pop
sub
nop
pop
aam
mov
xor
out
push
inc
dec
xchg
fstl
dec
int
lret
mov
shl
push
adc
jae
mov
ja
outsl
jb
add
imull
lea
dec
dec
dec
scas
clc
xchg
push
or
stc
jecxz
popf
xchg
int
out
add
movsb
jl
mov
enter
sub
sbb
and
imul
dec
test
inc
stos
xchg
lea
cmc
or
pop
jae
lret
pushf
push
sub
cltd
aas
adc
inc
movsl
dec
lds
push
inc
cmp
sub
push
push
sub
cmpps
fs
xchg
jae
cmp
std
bound
pushf
jle
xchg
aaa
sbb
jmp
adc
pop
adc
xor
adc
mov
xchg
or
xchg
outsb
push
adc
repz
inc
lods
pop
jo
popa
mov
dec
and
sub
jg
cmpsb
push
cvttps2pi
add
pop
in
cs
sete
ret
jb
inc
lret
xchg
sti
test
mov
cmpsl
sti
scas
and
push
in
jnp
movsl
or
push
jl
jns
insb
enter
out
and
push
inc
pop
cli
divl
xor
or
daa
and
jnp
xor
int3
cmp
arpl
ret
mov
mov
add
mov
and
das
cli
clc
pop
jge
mov
push
adc
shrb
std
and
les
incl
cld
inc
shlb
in
loopne
and
cwtl
std
sar
and
mov
cli
jmp
lock
stc
dec
mov
aam
pushf
mov
shll
mov
cwtl
or
xchg
jns
and
adc
mov
mov
popf
sub
push
leave
movsl
mov
lcall
inc
mov
push
loope
push
imul
addl
aad
popf
ss
pop
out
popa
sub
stc
adc
ljmp
mov
daa
mov
icebp
and
mov
push
in
aad
ds
ja
mov
int3
adc
sbbl
cs
dec
fwait
lret
pop
out
mov
xchg
call
xchg
aad
daa
dec
stc
xchg
add
dec
insl
sti
jno
rclb
inc
and
sbb
nop
fst
cli
cli
jmp
sub
adc
jle
out
add
mov
fiadds
sahf
adc
loopne
jns
mov
inc
mov
cmp
pop
mov
idivl
clc
or
xor
aam
mov
outsl
mov
int3
jb
gs
sbb
loopne
mov
mov
popf
jecxz
aas
inc
mov
mov
sub
push
das
xor
jb
repz
and
aam
mov
mov
dec
add
imul
scas
mov
sarl
lods
aaa
lock
faddl
nop
and
lret
jmp
ret
adc
imull
sub
addr16
icebp
cmp
xor
test
fwait
mov
stos
jle
push
sbb
push
mov
or
cwtl
cltd
jnp
stos
popf
call
imul
mov
inc
les
sti
inc
andb
add
cmp
andb
ds
movsl
outsb
insb
decb
mov
jb
outsl
jbe
xchg
jle
fimuls
aad
out
inc
xchg
adc
xor
and
in
scas
and
push
inc
popa
js
loopne
sbb
mov
stc
aas
test
out
adc
cwtl
push
push
lods
repz
jl
aam
loope
mov
xor
fsubr
insl
sahf
test
sub
loop
mov
xor
fucomp
sub
out
insb
or
hlt
push
xchg
fcompl
arpl
push
sub
cmp
mov
ljmp
inc
outsl
xlat
or
mov
rorb
lods
movsb
mov
add
xchg
icebp
loope
insb
sarl
cltd
push
sbb
fidivrl
or
add
pop
mov
dec
inc
int3
or
xchg
sub
cmp
in
repnz
sti
adc
add
pop
cmp
jbe
mov
or
xor
mov
cmpsb
ljmp
jae
xorl
mov
inc
or
add
pushf
or
cmp
orl
ljmp
cmp
and
test
or
pmaxub
mov
scas
mov
mov
loopne
xchg
mov
push
xchg
push
mov
and
frstor
jns
out
repz
dec
push
pop
dec
pop
js
ja
xchg
mov
mov
cmp
push
mov
dec
out
cmp
xchg
out
jg
or
fldt
mov
insb
lret
adc
aad
sbb
or
add
enter
xor
mov
andb
sbb
push
orb
repz
shrl
mov
or
jle
out
das
add
in
lods
out
cmp
jnp
and
pop
testb
push
out
iret
repnz
mov
ja
push
adc
or
xlat
ret
icebp
or
cmp
jns
cmp
xlat
dec
clc
pushf
loopne
js
out
or
and
push
xlat
stos
sysret
push
add
dec
in
scas
imul
scas
test
out
popa
pop
xor
iret
pop
sarl
arpl
push
dec
sbb
out
push
mov
test
sub
and
scas
mov
insb
adc
fcoms
add
mov
adc
lcall
sub
or
imul
mov
mov
sbb
ret
dec
enter
and
mov
insl
mov
xchg
clc
mov
arpl
cmpsl
cmp
adc
outsl
push
sbb
pop
pop
xchg
inc
scas
pop
loopne
hlt
adc
push
adc
inc
mov
cmp
mov
jle
sbb
mov
add
and
xchg
cmp
xchg
rcl
mov
lret
jle
inc
das
adc
cmpsb
sub
loop
sub
fidivrs
js
jno
jecxz
int3
ja
nop
jo
scas
addr16
dec
jg
push
push
lahf
sub
cld
cs
xlat
dec
mov
aad
add
add
sbb
js
fidivl
inc
xlat
popa
push
push
push
add
ret
jb
mov
xchg
mov
scas
fcoms
dec
mov
mov
aad
fisubl
adc
xchg
sub
xor
cmc
mov
jns
sbb
int3
pop
sub
and
fwait
in
inc
cmp
push
je
cli
add
pop
movsb
daa
jecxz
rsqrtps
add
xchg
scas
add
dec
add
cs
sti
sub
xor
ds
dec
or
subl
sub
adc
xchg
fisttpl
mov
dec
jo
xor
out
xor
inc
cs
test
mov
xchg
shll
aad
jl
arpl
push
clc
mov
push
fdivrs
xchg
pushf
jae
movsl
scas
dec
push
dec
repnz
pop
push
mov
js
inc
pusha
imull
mov
sti
clc
lahf
dec
fists
push
clc
ficoml
jle
mov
les
loopne
out
add
nop
adc
cld
imul
sar
decl
xchg
lcall
es
add
dec
push
mov
xlat
or
test
mov
jno
std
outsl
sub
and
clc
push
cmpsb
jb
jno
xchg
lds
fwait
test
mov
or
sbb
loop
add
mov
inc
add
push
shlb
adc
lret
dec
pop
pop
js
aad
repz
call
fldenv
and
into
push
mov
push
repnz
fistps
jae
jo
aam
dec
mull
cs
in
sub
or
and
jae
and
jae
xchg
add
and
dec
inc
icebp
cmp
jg
pop
sub
sub
inc
pop
push
push
inc
dec
jmp
fs
push
call
push
inc
or
adc
jb
xchg
clc
pop
movsl
jp
bound
cmp
or
inc
add
xor
clc
sbb
outsb
push
jae
jo
lods
out
mov
inc
mov
iretw
pop
cs
sub
sbb
in
cmpsb
add
xchg
xor
inc
aam
iret
sbb
mov
into
daa
ss
jge
adc
clc
add
lea
lcall
pop
addb
mov
add
mov
or
adc
ja
jae
cltd
push
or
sub
outsl
sbb
cmp
dec
fldl
inc
pushf
cmp
jmp
jno
iret
push
xchg
stc
sbb
negl
and
mov
popa
lcall
int3
cmpsb
leave
loopne
sbb
dec
adc
sub
pop
scas
mov
jp
push
and
ja
insl
fldt
mov
adc
insb
sub
addb
cs
jecxz
mov
lods
mov
repnz
mov
mov
das
pop
addl
inc
sbb
jns
in
in
movl
jp
fcoms
sbb
pop
xor
mov
pop
icebp
inc
nop
nop
daa
lcall
insb
imul
cld
outsl
jmp
xchg
mov
out
xlat
mov
dec
sub
and
xor
lods
add
test
or
fstpt
push
dec
js
add
test
adc
pop
rclb
dec
xlat
andl
out
and
pop
insb
jae
test
mov
jge
into
rcrl
ss
jnp
xor
push
cs
lods
cmpsl
leave
int
or
imulb
sbb
cmp
jno
and
imul
pop
roll
inc
int3
inc
push
repz
add
mov
jne
xchg
mov
dec
stos
mov
aas
lods
test
jbe
inc
ljmp
cmpsl
es
outsl
call
bound
inc
xor
xchg
jp
lods
dec
and
pop
cmp
mov
xor
mov
arpl
loopne
bnd
and
and
pop
cmp
and
add
loop
mov
lcall
lcall
cmp
xlat
pop
popa
push
lret
outsl
test
xchg
hlt
pop
mov
nop
subb
xchg
xchg
xchg
dec
jo
std
iret
and
add
loope
jle
scas
jnp
lds
sbb
pop
dec
mov
scas
sub
jns
stos
or
in
xor
jp
jge
jge
in
inc
mov
fsubrs
or
scas
cwtl
cmp
sub
and
fimull
call
dec
pop
movsl
or
cs
fcomps
nop
idivb
xchg
daa
sbb
push
or
push
xor
add
sub
add
popf
rol
loope
outsl
fisubrl
xchg
xor
add
sbb
inc
cmp
int
pop
or
sub
mov
inc
xchg
je
jo
aaa
add
scas
jns
inc
out
pop
xor
dec
xchg
rorb
scas
jbe
das
lods
jl
arpl
xor
icebp
insl
int
sub
pop
imul
and
jnp
mov
addr16
aam
jb
and
dec
add
jno
pop
sub
lds
xor
popf
sub
pop
addl
jne
mov
leave
or
or
inc
ljmp
dec
test
mov
mov
and
insl
scas
adc
je
repz
pop
cmp
out
push
add
jmp
mov
mov
push
pop
dec
or
outsb
jbe
sbb
ds
nop
lret
dec
add
push
sbb
mov
mov
dec
fwait
shlb
mov
push
pushf
push
jecxz
push
bswap
sbb
aad
xchg
cmp
shll
shlb
lcall
pop
lcall
and
and
mov
or
jecxz
pop
jae
xchg
cmp
inc
lds
adc
or
xor
test
pop
and
and
aad
inc
jl
push
jno
clc
and
xor
scas
mull
mov
mov
sub
xor
jns
enter
add
cmp
dec
insb
or
into
stos
add
jns
dec
outsb
mov
in
add
fs
and
add
aas
cs
lock
adc
stc
sbb
mov
mov
daa
xor
mov
leave
and
cwtl
imul
cmp
pop
shll
ret
bound
lods
mov
xchg
ja
xor
dec
sahf
xchg
lea
add
sub
stc
inc
jmp
dec
test
pop
add
pop
popa
out
mov
mov
xchg
imul
mov
test
mov
outsl
sbb
xlat
icebp
and
roll
test
mov
adc
insb
test
fldl
cmp
add
mov
xchg
xchg
dec
cmp
push
push
je
or
rdtsc
push
sub
inc
mov
scas
je
scas
dec
imul
xor
dec
loope
imul
call
loop
pop
in
dec
xchg
push
fildl
jb
arpl
movsb
mov
jmp
ds
flds
mov
xchg
push
sarl
and
into
sub
push
in
jmp
adc
mov
jle
add
filds
mov
xor
sahf
test
and
cs
aad
xchg
mov
jb
sub
mov
cld
sub
ret
jp
jns
sub
dec
push
adc
arpl
insb
stc
pop
jns
pop
mov
loop
adc
push
test
ficompl
jns
sbb
enter
pop
bound
movsb
insb
mov
inc
adc
mov
push
pop
stc
mov
sub
insl
xchg
or
loop
or
ret
adc
and
inc
dec
push
add
jnp
mov
movsb
sahf
mov
or
push
pop
loopne
out
popf
pop
jl
xchg
push
rolb
dec
push
loopne
insl
icebp
adc
es
imul
scas
mov
ds
xlat
push
and
mov
or
adc
movsl
cmpsl
sbb
xchg
ret
jp
repnz
sbb
std
ds
inc
add
pushf
mov
aad
pop
mov
inc
inc
and
inc
insb
xor
stos
push
jp
flds
popf
clc
pop
imul
mov
icebp
pop
cs
push
adc
mov
sub
sub
cmp
popf
dec
movsb
jnp
enter
in
sbb
movsb
pop
xor
and
or
jno
cmp
insb
jmp
mov
fdivrp
ja
rorl
cwtl
push
sbb
add
jl
icebp
das
mov
mov
and
loopne
rorl
sbb
adc
push
pop
ljmp
and
mov
insb
jae
shlb
dec
mov
inc
pop
test
cwtl
pop
out
outsb
test
fisubs
data16
xchg
or
inc
rcll
inc
movsb
cmp
jae
jbe
inc
gs
lods
inc
scas
leave
imul
mov
push
lea
inc
cmp
mov
and
sti
cmpb
in
shlb
push
inc
or
and
mov
nop
and
sbb
das
loope
inc
push
fmuls
mov
dec
and
add
xor
xlat
xchg
jge
imul
sbb
ljmp
push
cmpsb
xor
inc
into
orl
sbb
xor
push
mov
inc
mov
xchg
mov
inc
xchg
pushf
and
int
movsb
imull
negb
test
xor
mov
mov
inc
jp
dec
mov
inc
or
jbe
push
jnp
test
sub
lcall
cmp
adc
dec
add
or
cmp
jne
popf
xchg
repnz
push
sbb
icebp
out
cli
testb
xor
in
mov
mov
rorl
jmp
jbe
or
or
loope,pn
adc
repz
inc
xor
daa
in
xor
repz
add
fisttps
incl
pop
fsubr
testl
or
outsl
fwait
jns
and
repz
inc
add
sub
data16
roll
xor
out
sub
bound
lcall
jnp
lods
sbbl
pop
adc
ja
sbb
or
lahf
and
movsb
jae
aad
add
sbb
inc
xor
dec
out
int3
xchg
sbb
cltd
movsb
adc
cs
xor
sub
add
jg
loop
aad
mov
add
fmull
imul
mov
jns
pushf
jno
or
jle
add
sbb
dec
or
and
inc
pop
loopne
pop
inc
jne
test
lds
repz
mov
icebp
enter
jae
inc
loope
iret
dec
mov
dec
mov
test
adc
adc
push
pop
sbb
mov
imul
loopne
mov
push
or
cwtl
test
dec
xchg
mov
xchg
cmc
rcrl
cmp
sub
dec
pop
fsubrs
xchg
push
popf
mov
push
inc
xchg
ljmp
adc
mov
jl
mov
lcall
pop
and
xchg
xchg
or
jns
jg
mov
adc
test
aaa
cmp
fs
add
mov
add
mov
int3
and
inc
push
mov
sbb
outsb
mov
dec
jno
pop
mov
mov
pusha
or
add
and
jle
int3
push
xor
dec
or
inc
cwtl
mov
scas
mov
pop
push
or
pusha
mov
fwait
sub
cmp
stos
std
cmp
lods
sbb
xchg
out
mov
sbb
out
pop
mov
pop
push
xorl
stos
sti
inc
lahf
add
icebp
repnz
jno
sub
mov
inc
sub
scas
insb
into
mov
in
and
xchg
rcrl
mov
jecxz
loope
xor
push
push
stos
or
ja
sbb
rclb
push
push
loope
rolb
mov
js
xor
pushf
or
int
push
mov
mov
sahf
subl
imul
add
hlt
shl
or
adc
push
add
mov
xchg
fidivrl
adc
jmp
ret
aad
pop
sub
les
fisttps
jg
arpl
xchg
mov
mov
aad
lods
jg
sbb
or
cs
and
faddl
push
jns
mov
sti
cmpl
aad
sbb
xchg
in
stos
sub
xchg
mov
xor
and
fnstcw
std
shld
pop
in
mov
pop
sub
cmpsb
fcoms
xchg
cmpl
leave
lret
dec
mov
out
jbe
push
dec
mov
adc
out
xchg
xor
or
sub
inc
xchg
insl
xor
test
ljmp
sbb
mov
pop
jmp
int
jno
pop
push
adc
inc
int3
push
xor
std
aad
mov
popf
xchg
cld
movsl
push
shl
mov
lods
jle
mov
mov
out
test
pop
dec
xchg
mov
sub
cli
xchg
lods
sbb
inc
mov
add
aad
ret
or
scas
mov
dec
lods
js
jle
pop
and
ja
adc
enter
sti
xchg
insb
jne
movsb
sbb
xor
add
xor
in
dec
cltd
cmp
lahf
negl
pop
and
pop
inc
loope
add
xor
popf
xlat
mov
aas
lds
or
movb
or
and
add
sbb
rcl
in
push
sbb
add
nop
or
imul
sub
lret
in
xchg
adc
rcr
jb
popf
movsl
imul
ja
flds
ds
insl
or
scas
or
aas
inc
lds
and
lods
pop
xor
lret
lds
mov
cmp
fdivrs
push
cmpsl
mov
outsb
stos
adc
and
mov
movsb
pop
imul
enter
rcrb
pop
mov
or
xlat
stos
pusha
pop
adc
and
jns
sbb
xchg
mov
outsl
jp
les
and
inc
cmp
or
or
inc
mov
in
sbb
jecxz
or
mov
adc
push
je
inc
popf
xor
inc
sub
aad
pop
or
ljmp
fcoms
dec
jmp
xchg
xchg
fidivs
mov
jmp
das
xor
jns
addr16
push
mov
or
add
pop
adc
popa
mov
push
movsl
or
aas
dec
in
push
push
or
jbe
dec
and
stos
outsl
sub
pop
xchg
add
xor
sarl
mov
or
mov
sbb
daa
lods
clc
ret
fwait
jns
xchg
mov
cmp
andb
fsubp
popa
inc
mov
das
inc
mov
scas
jne
xlat
scas
push
scas
loopne
dec
jb
dec
mov
addb
xor
push
and
jno
pop
icebp
sbb
mov
mov
pop
dec
mov
in
repz
fldenv
xchg
add
in
cmp
or
push
test
and
adcl
or
loope
sti
aas
outsl
lods
mov
or
inc
sub
xchg
xor
and
movb
mov
inc
bound
and
hlt
rep
and
xchg
and
adc
imul
js
cmp
push
jecxz
lds
cmpsl
xchg
sbb
into
pop
aam
mov
loope
push
mov
push
mov
imul
dec
inc
mov
pop
loop
repz
jecxz
jnp
inc
js
pop
dec
xor
ss
sti
nop
mov
out
stc
fdivl
lret
fstl
sbb
jl
lods
push
lods
jb
sahf
cmpsl
daa
sbb
ret
roll
mov
sbb
sub
xchg
sub
test
fwait
xor
data16
lods
pop
add
sub
adc
sub
dec
pop
inc
add
out
mov
add
andb
das
dec
test
xlat
addl
test
dec
outsl
jecxz
pop
inc
cmp
call
repz
popa
or
push
pop
inc
shll
dec
lahf
es
xchg
push
ds
mov
rol
jle
popf
ss
and
xchg
jg
dec
and
inc
xor
clc
jg
insl
loope
xchg
movsb
adc
scas
adc
adc
dec
stos
mov
pop
and
test
loopne
cmp
add
mov
adc
cmp
ret
add
push
and
mov
ret
stc
sbb
sub
mov
xor
push
int
adc
mov
inc
outsb
mov
clc
iret
or
mov
popl
push
and
stc
inc
sbb
adc
adc
xor
mov
test
cmp
adc
sbb
imulb
push
movsb
cwtl
ficompl
mov
xor
scas
repnz
add
xor
sub
and
in
inc
int3
and
dec
pop
mov
xor
mov
or
scas
mov
xor
sub
cmp
ss
pusha
and
in
sbb
fnsave
loope
xor
out
ljmp
pop
sub
jns
jnp
popf
outsl
pop
mov
lahf
movsl
xchg
add
sub
add
sbb
lret
cmp
js
ficoml
lret
mov
jle
in
int3
add
xchg
cmp
xchg
or
lret
and
test
cmp
pushf
sub
cld
leave
adc
test
dec
cltd
in
mov
mov
iret
bound
add
test
les
and
insl
scas
dec
add
jno
mov
into
dec
or
inc
sub
inc
cli
dec
out
ds
scas
and
loop
ss
jo
or
cmc
or
aam
out
ret
xchg
push
jno
and
xor
mov
sbb
or
sub
into
loopne
xor
popf
stc
lcall
adc
std
or
out
xor
lea
or
xchg
push
mov
pop
or
and
dec
scas
mov
ret
and
arpl
dec
mov
cltd
ljmp
dec
sbb
and
mov
pop
push
add
imul
jb
mov
pop
xor
popf
mov
xchg
and
addr16
add
jge
pop
call
out
loope
add
sub
xor
hlt
mov
mov
add
loope
adc
inc
xchg
test
pushf
and
cmpsl
cmp
xorb
ret
or
mov
cli
ja
mov
or
adc
ficoms
adc
push
rcrb
xchg
dec
adc
xor
insb
std
inc
pushf
leavew
or
outsl
test
mov
ds
push
and
pop
mov
push
mov
add
ud0
push
pop
mov
mov
xor
jg
repnz
jo
insl
add
adc
fdivrs
jp
mov
push
dec
stos
pop
mov
dec
imul
jns
fsts
jmp
adc
mov
xor
es
dec
icebp
add
leave
into
into
test
or
xchg
sbb
add
mov
mov
lcall
mov
shlb
jl
jmp
jbe
adc
iret
lods
adc
xchg
mov
push
xchg
sub
lahf
cmp
xor
jl
inc
mov
and
mov
mov
and
nop
cmp
sub
or
mov
in
mov
push
stos
pop
or
scas
cld
rolb
jmp
test
aas
clc
es
outsl
jnp
pushf
and
jge
and
sbb
and
mov
inc
add
mov
inc
pushf
or
js
push
mov
add
orl
mov
mov
bound
loop
mov
pusha
xchg
pushf
xor
inc
adc
sbb
mov
or
add
cmpsb
hlt
mov
inc
and
ja
stc
ficoml
add
pusha
test
mov
sbb
outsb
outsl
adc
push
push
jae
dec
add
adc
mov
out
pushf
dec
out
mov
add
push
mov
shll
rcll
sti
cld
sub
push
cld
add
jno
fnstenv
dec
scas
stc
inc
dec
call
adc
cmp
outsl
inc
fisubrs
or
notb
xor
xor
fstl
xor
out
and
mov
int
inc
shrb
xchg
xchg
loope
sti
adc
imull
xor
xchg
pop
sbb
mov
mov
fcmove
mov
rcll
clc
fisubs
inc
pusha
icebp
out
pop
pushf
clc
or
dec
outsl
sub
ret
inc
dec
xor
test
xchg
pop
or
es
mov
arpl
ret
or
aam
jbe
mov
mulb
or
sub
mov
adc
jecxz
or
push
popa
inc
sub
add
int
jo
push
test
scas
lahf
add
mov
add
inc
xor
clc
sbb
nop
mov
mov
int3
push
inc
stc
icebp
sbb
movd
aas
aam
push
bound
sbb
lods
imul
roll
sbb
cmp
xor
jbe
xchg
in
cmpsl
mov
adc
and
fsubrl
fsubl
xchg
dec
pop
notl
popa
fstl
or
cmp
test
mov
loope
xor
loopne
dec
mov
loopne
aaa
mov
push
sub
fmulp
out
insb
xchg
popa
cs
xor
push
rorb
sbb
dec
xor
mov
xlat
mov
push
mov
cmpsb
xchg
shlb
jns
pop
lcall
fcoml
xor
insl
mov
arpl
and
ja
adc
pop
pop
iret
or
add
xchg
mov
mov
inc
fwait
repz
sti
insb
inc
or
in
mov
mov
mov
dec
and
push
pop
xchg
lcall
iret
mov
jns
roll
mov
into
or
sub
enter
pusha
xchg
pusha
adcb
mov
or
aas
and
aaa
mov
push
out
fcmovu
mov
sub
mov
inc
dec
cmp
xchg
ret
mov
notl
xchg
xchg
add
call
int3
popf
scas
cmp
jp
ss
pop
lock
mov
add
outsl
jmp
int3
mov
add
nop
pop
lock
adc
fistl
inc
or
popa
into
push
roll
into
xor
xchg
ss
icebp
cmp
xchg
int3
push
sub
xchg
aam
inc
stos
test
push
jle
pop
mov
clc
pop
mov
dec
xor
mov
adcb
movsb
stc
fcomip
push
jb
sub
lahf
sub
push
shrl
mov
and
iret
inc
int3
scas
inc
loop
aas
mov
orl
and
jecxz
xor
loop
adc
mov
add
leave
sub
adc
stc
sbb
jmp
popa
hlt
insb
jecxz
pop
mov
cmp
jns
aad
nop
test
add
mov
or
sub
mov
add
jmp
aad
rorl
jg
cmpsl
jbe
or
int3
mov
ja
daa
adc
mov
adc
inc
lock
cld
or
lods
fmull
aas
mov
jo
and
rcrb
lcall
jecxz
aad
rorb
xor
outsl
aas
mov
ficoml
imul
mov
push
add
xor
out
pop
inc
push
lock
push
mov
mov
mov
pop
mov
ljmp
xor
and
mov
imul
xor
popf
jmp
sub
or
clc
aas
inc
ds
xor
push
insb
or
mov
lret
xchg
and
loopne
xor
leave
pop
pop
cmp
push
es
mov
cmp
ss
mov
and
dec
cld
xchg
je
dec
nop
cmp
and
mov
inc
sti
repz
sahf
push
and
sbb
mov
mov
xchg
sbb
nop
push
add
add
mov
insb
sbb
int
jb
inc
mov
insb
aam
cwtl
or
in
into
inc
and
mov
or
sti
dec
dec
aas
xor
mov
addr16
lahf
jg
shl
and
inc
rcll
inc
cltd
mov
and
mov
adc
shlb
aam
mov
or
scas
test
aaa
enter
or
repnz
xor
pop
clc
sti
sbb
pop
or
xor
mov
rolb
in
in
add
dec
and
mov
xchg
push
mov
ficomps
sbb
lret
add
inc
dec
aam
dec
das
sbb
div
lods
push
faddl
add
movsb
gs
xor
jle
sbb
lea
aam
loope
or
mov
popf
movb
jl
pushf
in
lret
pop
or
hlt
dec
fidivrs
mov
mov
fwait
and
adc
scas
dec
cld
xchg
mov
dec
or
push
jle
adc
ljmp
js
push
mov
int3
insb
outsb
cmp
mov
int3
or
inc
adc
jae
jo
sahf
pop
movsl
popa
pop
rcll
mov
pop
leave
cmc
pop
pop
and
pop
sahf
outsl
adc
into
push
dec
mov
pop
sbb
xor
clc
cs
add
pop
andl
lret
in
int
ljmp
test
pop
mov
movsl
push
std
add
movsb
sahf
mov
sub
jge
test
loope
cmp
or
arpl
arpl
or
cmp
lea
add
xchg
arpl
ftst
push
mov
and
xchg
sbb
aaa
dec
js
push
mov
ds
dec
inc
xor
cmp
call
ss
outsl
out
xchg
cmp
addr16
add
xor
lahf
test
sub
cmc
pusha
mov
adc
xor
jecxz
pop
clc
mov
mov
cld
adc
dec
popa
pop
mov
sbb
clc
rcrl
les
mov
sbb
sets
mov
insb
mov
push
sbbb
jne
imul
insb
notb
cmpsl
leave
jne
cmc
or
test
xchg
and
mov
test
sahf
pusha
lods
dec
outsl
test
add
xchg
mov
sbb
and
mov
aam
xlat
into
or
insl
stc
and
decb
fiadds
adc
test
mov
or
pushw
mov
mov
adc
scas
clc
mov
jmp
inc
dec
mov
int
jge
or
mov
int3
mov
es
xlat
mov
jecxz
sub
stos
lods
and
lret
adc
outsb
pushf
lret
mov
add
stc
cmp
cld
or
insl
icebp
fstps
out
loopne
inc
jne
lahf
jle
fnstcw
dec
outsb
fldt
dec
es
push
adc
stc
leave
xchg
push
adc
sbb
in
setge
ror
faddl
inc
adc
insb
or
inc
mov
ror
out
hlt
cmp
sahf
cmp
or
dec
push
popa
mov
sbb
cmc
jo
push
test
xor
jmp
stc
pop
push
pop
pop
lods
fisubl
jno
sub
push
jno
push
pusha
inc
popf
fidivl
mov
lret
mov
dec
mov
hlt
imul
sub
aad
push
inc
xor
aad
push
jns
ret
ja
out
test
cs
jmp
cmp
or
and
es
cltd
cmpsl
in
xchg
xor
fdivrs
dec
ljmp
mov
cli
mov
dec
push
in
push
and
lret
dec
add
insl
jecxz
lret
inc
and
pusha
mov
aas
cwtl
mull
add
imull
mov
ss
sub
mov
into
and
jno
mov
mov
outsl
adc
or
incl
fcmovbe
popa
nop
dec
add
and
popf
inc
mov
repz
orl
loop
mov
add
repz
sbbb
movsb
repz
jnp,pn
inc
xlat
sahf
andl
sar
aam
inc
inc
mov
pop
lock
dec
int3
mov
mov
flds
imul
push
mov
sbbb
mov
pop
cmpsl
aam
xlat
mov
jecxz
icebp
and
outsl
jle
aam
jecxz
test
add
cmc
cmc
pop
add
mov
inc
test
cld
mov
mov
sbb
cmp
jmp
fstpl
sbb
repz
or
ja
sbb
call
mov
xchg
shrl
lret
push
adc
push
sub
jecxz
icebp
lret
call
add
mov
push
setge
jg
mov
lahf
outsb
filds
in
ret
hlt
sbb
and
lret
push
inc
jae
adc
jmp
aad
inc
jo
les
mov
sbb
sbb
pop
dec
push
enter
push
and
out
loopne
mov
enter
ja
mov
sbb
repnz
outsl
mov
adc
stos
fsubs
call
int3
popf
sbb
mov
and
mov
sti
scas
and
shrl
enter
xchg
mov
cmpsb
mov
xchg
sbb
jecxz
xor
fs
cld
xor
push
in
jnp
sbb
cwtl
sbb
push
jns
std
insb
or
push
dec
je
call
lods
cmp
stos
mov
loope
xor
jno
mov
into
xchg
jg
sti
test
dec
adc
rcr
mov
lcall
and
clc
scas
jle
sbb
pop
xor
cmp
cwtl
xor
mov
pop
and
dec
jge
dec
inc
cmp
push
ja
sar
jne
iret
pop
insl
push
xchg
and
gs
fidivl
xor
test
test
inc
clc
mov
add
imul
lods
and
push
adc
mov
push
les
ljmp
push
sub
jge,pn
int3
mov
mov
fcoml
cs
dec
and
add
mov
xor
imul
inc
das
and
sub
sbb
inc
lret
xor
xor
mov
es
mov
cmpsl
mov
and
push
dec
stos
inc
mov
mov
dec
mov
add
stos
xor
call
sarl
cs
inc
xchg
mov
loope
lods
push
xor
jae
fidivrl
mov
add
fdivl
xchg
leave
cs
push
decl
mov
hlt
cmp
dec
cmp
mov
jae
fs
mov
push
cmp
mov
push
clc
xchg
shrl
mov
lds
int
scas
cli
xor
lret
jg
sub
push
mov
push
cmp
and
outsb
and
sbb
lds
leave
aad
or
dec
jns
add
popa
dec
or
mov
cwtl
das
jne
mov
xchg
push
jmp
sbb
shrl
cltd
cmpsb
pop
pop
and
adc
movsl
icebp
movb
xchg
outsl
and
push
cli
push
std
adc
test
loop
add
clc
loope
rcl
xor
jp
out
cmp
lret
mov
xchg
mov
rcl
mov
or
dec
test
mov
fmuls
repnz
mov
rorb
and
xorb
jecxz
push
fs
aas
rcl
imulb
push
jecxz
or
dec
pop
lds
data16
or
sub
pop
cwtl
xor
sub
int
aad
dec
cs
sub
pop
repz
push
cmp
cmp
aas
int
jnp
sbb
push
dec
mov
int
sbb
fdivs
and
movsb
sbb
ret
inc
and
add
dec
shll
push
jg
adc
cwtl
cmp
add
add
dec
inc
sbb
adc
les
xor
shll
sbb
inc
fcmovb
mov
cltd
stc
xlat
pop
jnp
leave
mov
sub
movb
scas
pop
jbe
sub
mov
jae
lods
icebp
iret
and
jnp
jge
dec
outsb
jmp
jmp
push
mov
xor
stos
xchg
leave
icebp
sahf
inc
ja
scas
jle
scas
loopne
sarb
inc
mov
and
fcos
and
and
jle
fcoml
jecxz
repz
test
movsl
comiss
in
or
add
mov
sbb
test
xor
cmp
aad
push
shrb
sbb
lds
xor
mov
popf
cs
out
sub
xor
out
cli
sbb
int
js
push
mov
mov
imul
hlt
and
or
lahf
adc
adc
mov
sti
xchg
aaa
loope
aam
or
mov
shl
adc
inc
lock
into
out
or
out
movsb
addr16
out
jp
std
mov
cmpl
sbb
push
scas
sub
pop
in
add
pop
xchg
mov
jle
lret
mov
sub
lods
loope
inc
pop
xchg
mov
cmp
mov
mov
outsb
cmp
into
stos
pop
sbb
and
mov
fcomps
pop
fwait
clc
sub
in
jae
dec
nop
adc
scas
stc
mov
sbb
jp
pop
outsb
dec
cwtl
add
or
lret
data16
cmovl
pushf
xchg
cmp
mov
sub
imul
mov
adc
and
jecxz
add
and
fldt
sub
aaa
mov
icebp
push
nop
icebp
loope
andb
pop
cmpsb
mov
dec
pop
or
jge
jb
sbb
sub
jecxz
push
xchg
std
and
scas
in
sbb
nop
xlat
mov
pop
xchg
lea
popf
or
addr16
jmp
outsb
lods
in
adc
comiss
pop
fwait
loope
sbb
orb
into
dec
shll
movl
stos
int3
inc
add
pop
shll
push
jecxz
lea
mov
repnz
jge
mov
lahf
lock
popa
jle
adc
or
push
jns
sub
xlat
mov
fcomps
es
inc
add
adc
dec
xor
stc
ja
push
fsubl
stos
cmp
push
push
imul
inc
adc
orb
dec
sub
into
adc
fs
and
lahf
std
pop
cmp
test
xchg
lods
push
pop
enter
mov
adc
add
push
xlat
sub
and
inc
clc
es
aam
imul
cs
inc
loope
shl
cmpsl
fsubrl
stos
xor
test
fstpl
call
dec
push
fldl2t
and
adc
cmc
es
add
pusha
mov
in
int3
and
mov
jmp
popf
mov
cwtl
jae
lret
arpl
xchg
adc
add
mov
adc
or
fwait
in
loope
push
mov
pop
mov
es
pop
or
sub
inc
or
fstl
sarb
insb
hlt
jl
xchg
aad
out
popf
je
sbb
nop
mov
repz
repz
sti
insb
push
pop
xor
xor
or
scas
sub
enter
jae
fisubrs
push
adc
scas
loope
cmp
mov
dec
xor
in
je,pt
out
popl
push
lcall
fs
sub
aas
cld
sub
add
dec
mov
inc
fdivp
dec
cmp
push
cmp
mov
mov
mov
sbb
xchg
and
jae
imull
lods
mov
das
fcompl
pop
jg
daa
into
sbb
add
pop
js
stc
sub
divl
lcall
and
cmpsb
imul
shll
sbb
andl
xchg
loopne
addr16
jecxz
lock
add
pusha
xor
push
cmp
xchg
mov
pop
add
xchg
scas
pushf
push
lret
mov
imul
fnstsw
adc
test
fsubs
adc
adc
fsub
jg
dec
sahf
sbb
mov
xchg
fcoms
lret
mov
push
in
les
out
jbe
mov
adc
rcll
addr16
data16
outsb
mov
mov
dec
sub
sub
subl
pop
mov
xchg
jbe
enter
dec
sbb
cs
or
popf
outsl
roll
or
push
mov
sub
dec
xchg
leave
and
push
dec
mov
imul
jae
mov
dec
xor
pop
es
xor
xchg
repz
outsl
add
push
sub
jb
out
inc
hlt
xor
cmpl
insb
add
imul
mov
bound
decb
mov
jl
push
pop
cmp
into
lahf
mov
inc
mov
jbe
sbb
jae
fimull
lods
insb
leave
mov
mov
sbb
imul
popf
mov
pop
enter
test
sarb
sub
xor
push
push
pop
ret
push
sbbl
xchg
inc
std
es
inc
push
jl
incl
add
sub
insl
jno
adc
add
adc
push
mov
add
inc
xchg
je
les
fsubl
insb
enter
or
push
dec
cmovl
pop
jmp
xor
mov
mov
mov
sahf
mov
test
inc
aam
pop
mov
mov
into
data16
dec
inc
add
test
push
adc
inc
scas
push
cmc
addr16
jae
xchg
bswap
js
imul
loope
jnp
and
dec
hlt
jp
or
call
inc
cmpsl
and
and
jns
mov
outsb
sti
icebp
int
xor
outsb
adc
xor
lahf
mov
mov
dec
fs
mov
sar
push
adc
les
ja
shll
push
xchg
js
mov
rcrl
jmp
int3
ret
add
jmp
push
push
jecxz
jbe
xlat
sub
add
dec
inc
lods
xor
dec
add
jmp
stos
in
scas
idivl
mov
addb
ja
insb
mov
jae
pop
andl
inc
push
xor
add
push
mov
pop
jae
adc
push
in
insb
adc
out
mov
mov
cmp
fs
fcompl
add
dec
test
xchg
cld
fs
ficomps
and
add
ds
mov
mov
add
inc
shlb
loope
and
aaa
inc
rorl
out
jne
and
cmp
call
dec
pusha
add
sub
in
mov
lret
bound
jns
xchg
aam
mov
fidivs
mov
enter
dec
inc
sub
inc
aad
jg
add
lret
cmp
scas
adc
add
inc
mov
pusha
pop
pusha
lcall
xchg
int3
cmp
popf
xor
sbb
xor
adc
inc
pop
aam
enter
lret
push
iret
cltd
rcrb
or
xchg
js
add
cli
mov
cltd
jle
sub
ds
popf
and
rdtsc
inc
addb
sub
sub
mov
frstor
loope
ljmp
popf
mov
sub
stos
add
jl
and
cmp
js
or
add
jns
push
cld
enter
fdivrp
test
test
and
aad
icebp
outsb
mov
or
fwait
loope
push
push
sub
bswap
test
mov
addr16
inc
movsb
outsl
inc
loop
xlat
lret
mov
arpl
fadds
movsl
dec
test
shll
pop
sahf
roll
sbb
fisttpll
test
test
loop
pop
or
lock
out
mov
push
sub
test
sub
inc
lock
lds
jae
test
dec
sub
sti
shlb
shlb
sbb
xorb
es
stos
andl
outsb
or
pop
mov
inc
mov
int3
cmp
stos
lds
std
or
hlt
push
xor
xchg
mov
xchg
ja
negb
mov
incl
sub
push
mov
push
je
insb
std
dec
je
repz
inc
cmp
push
mov
in
xor
iret
mov
cmc
xchg
loope
push
insl
mov
mov
cs
hlt
iret
out
std
xchg
insl
js
inc
jae
lods
bound
mov
xchg
mov
push
lahf
insl
fdiv
popa
scas
jbe
mov
fcomps
popf
and
inc
mov
xor
mov
xchg
sbb
test
and
aad
add
sub
or
and
push
icebp
cmp
lds
pop
shlb
adc
mov
adc
adc
xor
bound
jae
mov
jp
nop
es
or
jns
mov
addr16
jle
pop
mov
dec
push
out
pop
dec
jp
xchg
fcmovu
cmp
stos
inc
xchg
bound
bnd
mov
stos
mov
mov
shll
mov
jb
lcall
rolb
insb
bound
cs
sbb
inc
daa
push
cld
outsl
enter
sahf
mov
or
mov
mov
add
nop
daa
xchg
jbe
mov
testb
into
sbb
sbb
int3
scas
orb
add
inc
loop
fisubs
xor
dec
pop
adc
lret
loopne
xor
scas
dec
imul
mov
dec
or
call
xor
adc
cmp
pop
add
sarl
add
es
movsl
add
mov
outsb
fmuls
loopne
imul
jle
fmull
lds
dec
test
or
push
popw
ret
pop
and
jle
push
lods
mov
daa
xchg
std
sub
scas
sub
dec
or
xor
xor
shlb
call
scas
push
sub
xor
cmp
or
leave
jae
push
call
inc
dec
jno
pop
je
scas
cmp
ss
push
or
dec
mov
sub
scas
dec
into
stc
pop
lds
inc
shrl
jmp
orl
pushf
mov
or
sbb
cmove
mov
adc
lea
sub
push
push
or
sarl
aad
xchg
pop
mulb
lret
stc
mov
or
pop
scas
aad
inc
cs
lahf
mov
pop
jmp
xor
sub
adc
cld
cli
add
test
icebp
inc
aam
hlt
mov
xchg
push
xchg
icebp
push
jecxz
sbb
xor
popf
and
lcall
dec
and
aad
cmp
sbb
arpl
xchg
cmp
repnz
cmc
cmp
add
inc
ds
ljmp
jb
stc
sbb
xchg
add
xchg
mov
stc
aad
inc
mov
sti
mov
and
xor
or
fisubs
stos
dec
andb
mov
or
popf
and
mov
or
inc
pop
pop
sbb
push
divb
shrl
pop
bnd
cmp
sbb
or
popf
and
cmp
inc
cli
xlat
jo
cmc
inc
mov
in
and
pop
ljmp
out
push
mov
mov
andl
jl
and
push
out
out
ds
fistpll
pop
jl
mov
out
inc
in
sub
add
scas
enter
mov
xorb
inc
test
dec
rclb
sbb
and
and
xor
enter
xor
add
rolb
in
in
aas
fnsave
inc
outsl
mov
fcompl
add
xor
mov
lea
and
sbb
mov
mov
addr16
das
clc
jno
dec
sub
and
outsl
arpl
aam
cmp
inc
or
and
push
mov
jmp
sub
xor
mov
push
int3
add
jne
adc
adc
push
adc
add
push
mov
imul
bound
das
lods
add
sbb
sub
cmpsb
sbb
cmp
ret
into
lcall
test
ss
jns
dec
cs
stos
inc
mov
out
das
lea
stos
test
inc
cli
xchg
repz
sub
cmp
mov
stos
or
sbb
mov
or
mov
aam
mov
or
ja
add
es
sbb
push
inc
cltd
test
mov
add
mov
cmp
mov
xchg
cmpl
jns
shrl
jae
rolb
cltd
push
nop
xchg
jno
pop
hlt
call
mov
popa
and
lahf
es
ss
push
pop
push
cs
flds
xchg
sub
hlt
push
add
pop
test
sub
iret
add
dec
inc
jl
mov
mov
popw
or
and
push
imul
jmp
andl
std
fwait
lea
scas
fistpl
mov
adcb
add
mov
insb
inc
movsb
insb
mov
ret
lock
mov
loopne
sub
dec
adc
dec
pop
mov
xchg
popf
mov
xchg
cmpb
inc
outsl
fadd
stc
jl
mov
pop
les
testl
movsl
popf
mov
jle
cld
rcrb
cmp
in
add
inc
sahf
pop
pop
cmc
push
or
pop
out
xlat
jno
pop
jns
lods
jo
movsb
pushf
es
stos
cmp
jne
xchg
addr16
lods
mov
in
sbb
jns
add
hlt
das
enter
add
rorl
mov
cmp
mov
pushf
repz
inc
dec
mov
mov
inc
cmp
jp
cli
stos
pop
outsb
enter
sub
loop
dec
cmc
pop
inc
cmp
scas
stos
icebp
and
adc
xchg
icebp
inc
jmp
cltd
lea
push
inc
jecxz
adc
cwtl
sub
jb
jae
add
xlat
inc
mov
push
or
int
pop
icebp
rolb
xchg
icebp
xchg
sbb
les
sbb
pop
adc
push
and
inc
xchg
xor
test
cmpsb
mov
les
js
dec
pop
ds
loopne
mov
dec
jg
aas
dec
and
das
xlat
in
setge
mov
ds
in
nop
leave
inc
sub
popa
jns
aaa
pop
into
loope
xor
and
inc
dec
int
jg
fdivl
jecxz
lret
test
dec
inc
lcall
push
jae
ja
mov
and
fldt
addr16
jg
iret
arpl
sbb
jno
lcall
scas
mov
pop
jecxz
inc
push
xor
and
mov
xlat
iret
push
loope
cld
and
mov
dec
jle
and
adc
sbb
mov
repz
jge
sbb
and
push
clc
pop
push
sbb
popf
ret
mov
push
push
inc
sbb
push
mov
fs
mov
mov
dec
mov
push
jge
or
push
adc
leave
mov
lret
mov
inc
pop
ljmp
sbbb
push
jo
pop
mov
xlat
sbb
dec
loop
repz
pushw
movsb
mov
popf
shrb
aam
ja
ret
sub
sbb
xor
sbb
lds
jp
popa
mov
xor
push
inc
add
add
dec
or
adcb
and
xchg
scas
punpckhdq
xor
mov
fcompl
add
fldl
push
sbb
out
cmp
out
jae
mov
in
jne
lods
ja
sbb
adc
push
hlt
adc
adc
inc
mov
jmp
pop
pop
lahf
loopne
jo
pop
stc
ret
pop
jecxz
or
cmp
daa
bswap
xchg
bound
test
leave
inc
add
mov
jb
inc
jne
xor
jg
jns
or
push
push
and
adc
fsubrl
insb
push
pop
pop
mov
ja
cmp
mov
push
push
push
inc
lcall
mov
sub
dec
call
fwait
addr16
pop
gs
cmp
or
mov
pusha
inc
insb
sbb
lret
scas
adc
xchg
fldt
xlat
cwtl
pop
lahf
fbld
cmp
int
xor
sarl
push
xor
popf
clc
out
mov
out
test
pushf
inc
movsb
gs
jb
pop
xchg
sahf
inc
jge
in
mov
push
inc
dec
pop
push
lea
xchg
push
pop
insb
and
push
aam
hlt
inc
mov
cmp
cli
push
add
insb
scas
hlt
into
and
and
and
fistl
dec
out
xor
jns
cmpsb
dec
aad
ficompl
sub
adc
inc
xchg
xchg
and
inc
pop
shlb
mov
sub
sub
push
cmp
fucomip
add
mov
mov
pop
sub
inc
loope
adc
pop
push
shlb
xor
add
xor
into
popf
test
add
loope
daa
mov
adc
mov
pop
push
loope
mov
inc
fstpt
mov
hlt
adcl
push
in
lock
add
jl
adc
and
outsb
insb
enter
scas
inc
mov
jp
movsb
filds
js
add
int
in
mov
lds
mov
aam
xor
sub
inc
pop
cmp
cwtl
dec
and
add
xchg
stos
inc
nop
xor
fwait
arpl
jle
leave
dec
cmp
add
xchg
dec
js
data16
scas
jne
sub
and
arpl
pop
test
icebp
lcall
xor
xchg
scas
mov
dec
mov
daa
inc
out
ret
aad
flds
push
in
rcr
add
icebp
aad
scas
cld
mov
sbb
push
or
stc
cld
sahf
and
popf
add
shll
cmp
rcr
dec
repz
pop
test
bound
cmp
push
int3
mov
lcall
mov
push
popf
cmp
shr
jae
mov
jne
loope
jmp
cmc
xor
sub
xlat
or
mov
pop
gs
test
push
xchg
mov
dec
add
dec
popa
push
add
fstpl
xchg
and
scas
mov
or
mov
insb
loope
xchg
lret
sbb
sets
mov
inc
hlt
in
mov
jecxz
dec
sbb
pop
out
jo
iret
imul
jo
mov
xchg
gs
popf
in
jge
jge
jl
adc
mov
pop
test
inc
in
jbe
fdivl
nop
stc
mov
das
shrl
add
jg
shr
fstpl
mov
fnstcw
stc
int3
js
aad
sbb
fs
adc
push
stos
sub
mov
stos
cmp
clc
sub
sahf
ja
mov
pop
pushf
push
xor
imul
jle
sbb
xlat
mov
out
pop
insb
int3
adc
outsb
lea
sbb
or
ret
lret
and
pop
xchg
adc
or
fmul
popa
and
loop
mov
jecxz
push
loopne
loope
repz
inc
jns
js
aad
daa
aas
jns
lahf
and
mov
lahf
imul
add
xchg
fcmovnbe
pop
lret
jge
xchg
xchg
cmp
sub
mov
stos
cli
leave
movsl
sbb
mov
or
sub
insl
mov
insl
inc
dec
add
adc
cmc
stos
xor
add
lods
daa
xchg
sub
or
outsl
les
xchg
gs
lcall
cmp
mov
xlat
add
mov
aas
push
mov
sub
cmovae
and
insb
pushf
test
insl
nop
adc
mov
push
or
cmp
jecxz
xchg
jb
xor
hlt
sbb
mov
cmp
test
shll
cmc
add
mov
inc
mov
into
push
movsb
gs
sbb
sti
pushf
mov
sbb
insl
ljmp
cmp
aam
xchg
or
mov
xchg
sbb
dec
adc
add
enter
loope
mov
add
inc
lret
push
aas
push
insb
push
fmuls
and
sbbb
pusha
lret
xchg
mov
addr16
cmc
mov
sbb
or
test
outsl
pushl
inc
push
add
fs
xchg
daa
roll
inc
push
pop
inc
rorb
daa
fmull
add
lret
ficomps
jne
stos
ljmp
enter
out
mov
push
sahf
pop
mov
jmp
mov
cmp
test
sub
ret
fisttps
mov
pop
leave
adc
sbb
sbb
jge
int
les
sbb
cmp
xor
cmp
cs
inc
add
push
add
pop
ja
mov
xchg
loope
jne
inc
sti
movsb
test
or
imul
imul
add
sbb
loopne
push
rorl
imul
repz
lret
jne
sahf
sbb
sti
lret
mov
imul
cmp
stc
lret
pop
clc
lcall
sub
lcall
mov
into
loopne
pop
scas
cs
jno
lret
add
es
repz
push
sub
pop
xlat
adc
sub
ja
push
adc
sarl
push
dec
out
push
ret
imul
mov
lcall
jo
stc
repz
adc
ret
sub
inc
stc
or
mov
in
mov
leave
and
pop
mov
pop
cmp
jae
aad
xor
stos
jb
push
scas
lcall
nop
add
scas
ljmp
xchg
bound
shll
mov
pusha
sub
movsl
insb
adc
push
mov
pushf
cmp
sbb
inc
jecxz
mov
jle
dec
cmpsl
xchg
lcall
xchg
push
xor
and
xor
pop
xlat
add
adc
lea
cmp
pop
lahf
cmp
jp
inc
adc
xchg
js
dec
mov
jae
nop
scas
and
aad
add
jmp
loop
loopne
dec
cwtl
inc
dec
pushf
ret
popa
mov
xor
outsl
mov
cmp
fmul
sub
movsl
pop
stos
jl
xor
jae
imul
pop
cld
push
stos
sub
jmp
pop
add
packuswb
flds
clc
lods
inc
test
rcr
pop
or
xor
mov
loopne
or
inc
xor
icebp
mov
fwait
je
add
in
pop
ds
pop
xchg
adc
push
fdivrs
mov
xor
mov
inc
push
mov
dec
push
test
xor
sbb
mov
dec
inc
loope
push
jmp
dec
adc
fs
movsb
mov
lahf
jmp
sbb
rolb
int3
fadds
outsl
mov
add
xlat
adc
push
inc
lds
adc
mov
lea
mov
aad
aam
or
sub
outsb
jp
cmp
or
cli
cltd
cmpsl
xchg
fisubl
pop
inc
add
ja
xchg
push
jge
and
push
jmp
dec
imul
pop
fiaddl
insl
stc
test
jnp
dec
mov
xlat
jecxz
adc
shlb
mov
push
and
mov
inc
insl
mov
or
incb
push
mov
mov
sub
mov
inc
jle
xor
mov
outsb
pop
mov
popf
jp
pop
jge
loop
and
mov
mov
insb
or
mov
lret
xchg
and
cvtpi2ps
mov
push
mov
push
mov
mov
pop
cmp
or
cmpsb
rcr
xor
or
dec
insb
in
lcall
outsb
cmpsb
pop
push
sti
out
mov
mov
outsl
imul
pop
sbb
inc
pop
inc
into
stc
inc
sub
mov
xlat
jne
das
dec
ja
sub
adc
sub
cmp
adc
test
out
and
aad
mov
lcall
push
lret
inc
loope
ja
or
aad
repz
daa
xor
nop
add
inc
mov
inc
mov
xchg
inc
push
wrmsr
loopne
sar
inc
jge
adc
xchg
push
std
and
mov
inc
ror
xchg
call
outsl
insb
inc
mov
jae
mov
adc
xor
or
cmc
sub
addb
sbb
xor
ds
pushf
jo
inc
es
mov
pop
sub
aas
test
push
push
mov
outsl
aas
xor
jne
mov
xor
inc
xchg
jg
lcall
push
cmp
clc
popf
sub
iret
stos
stc
cmp
mov
inc
xlat
mov
cmp
mov
inc
dec
jl
xor
dec
mov
pop
cs
int3
mov
sub
xchg
jle
mov
push
jmp
xor
mov
pop
rcl
or
rorb
add
or
or
js
fsts
push
fdivrs
test
pushf
add
adc
pop
push
aas
inc
push
jne
pop
in
inc
mov
aas
jbe
push
rolb
sbb
std
push
rorb
push
test
mov
mov
mov
in
dec
and
push
pop
cmpsl
adc
data16
inc
sub
pop
addr16
pop
xchg
jmp
cltd
cmpl
xorb
inc
clc
decb
out
jp
pop
pop
shl
dec
test
and
dec
lods
rolb
cmc
add
das
and
or
sub
mov
jl
or
out
int3
push
inc
jecxz
in
popf
pushf
andb
test
jg
gs
lds
add
mov
or
ror
bound
icebp
cmp
mov
sbb
jp
cmpsl
inc
dec
movsb
lcall
aad
pop
lret
jl
sar
inc
pushf
push
xchg
mov
lods
mov
and
add
lods
pop
rclb
push
insl
jo
in
std
xor
fisubl
dec
and
dec
fisubrs
xchg
cs
sahf
fmuls
test
scas
sub
andb
xor
cltd
lock
test
mov
ds
adc
mov
add
stc
or
mov
dec
sub
mov
int3
mov
dec
aaa
addr16
ljmp
shll
mov
mov
fsubr
pushf
push
cmp
and
cmp
dec
add
js
xchg
repz
cli
cmp
mov
shrl
sub
pop
and
or
orl
stc
xchg
mov
imul
jl
dec
ds
stc
out
into
push
xchg
js
mov
add
adc
and
in
push
mov
sub
add
mul
insb
imul
jl
lahf
dec
mov
jecxz
mov
push
lea
xchg
sbb
push
mov
int
add
iret
ja
mov
push
xor
xchg
or
and
fldcw
dec
pop
and
pop
in
into
add
aas
fimuls
adc
subb
pop
hlt
pop
addr16
mov
lcall
or
popf
hlt
mov
or
jae
inc
notl
sbb
subb
sahf
xor
pop
xchg
test
cs
or
bound
loop
lret
int3
add
mov
add
stc
pop
xchg
xlat
jmp
mov
jb
scas
adc
fcomps
xchg
mov
imul
hlt
jno
sbb
mov
mov
and
xor
pop
aas
pop
sub
arpl
stc
das
dec
cli
loope,pn
mov
adc
cwtl
pop
cld
leave
outsl
test
cmp
daa
in
scas
test
cmpsl
sbb
inc
xor
pop
nop
and
out
mov
cmp
sbb
xchg
pop
or
dec
push
and
mov
fdivl
ljmp
sub
xor
hlt
push
xchg
arpl
mov
cmp
push
or
cmp
insl
ljmp
or
cmp
nop
test
addr16
xchg
add
jbe
es
shll
and
mov
inc
outsb
icebp
scas
sbb
inc
scas
inc
test
dec
fbstp
jns
les
mov
out
sarl
fcoml
cmp
sbb
inc
data16
cmc
out
movsb
and
pop
in
inc
into
das
sbb
scas
lea
adc
fwait
int
inc
jl
adc
orb
xlat
scas
sub
xchg
push
and
cmp
push
sbb
mov
hlt
sahf
xor
mov
pop
mov
dec
data16
test
std
out
dec
xchg
popf
mull
mov
dec
cmp
dec
int
xor
add
mov
fsubrs
xor
xchg
cmp
pop
jae
mov
pop
frstor
jle
pop
fnstenv
jns
stc
lock
sub
add
movups
rcll
adcb
xor
mov
add
mov
outsl
dec
movsb
aad
subb
lea
in
xor
sti
jo
cmc
sbb
test
int
jl
mov
add
mov
sti
stc
cmp
nop
inc
mov
mov
cmp
mov
inc
jb
cmp
lret
dec
cmp
or
int3
xor
xchg
insl
stos
or
jb
in
mov
sub
test
mov
sbbb
mov
add
sahf
sub
scas
inc
jecxz
push
lcall
cs
inc
fisubs
push
pop
mov
pop
pop
cmp
adc
stos
and
pop
xchg
mov
sbb
iret
dec
xor
jg
imull
imul
int3
stc
incl
xor
in
je
clc
scas
loopne
adc
or
repnz
sub
pop
cwtl
mov
into
pop
xor
adc
call
jmp
sbb
fldenv
insl
dec
in
stc
into
aas
pop
xchg
repz
jae
jg
xchg
dec
push
adc
dec
shrb
int
inc
fldenv
pop
and
push
pop
jle
push
cltd
xchg
mov
stc
xor
ficoml
push
dec
xchg
notl
test
insb
and
scas
fisubl
xchg
int
push
movsb
pop
add
rolb
leave
xchg
je
movsl
or
insl
jbe
or
scas
cmp
sub
mov
shl
lret
fidivrs
divl
jno
pop
dec
mov
mov
sahf
push
icebp
pop
push
sbb
push
cmp
popf
jge
imul
vmovlps
push
cmp
sub
mov
adc
fnsave
insb
psubq
into
jecxz
stc
fstpt
inc
cmpsb
cs
pop
imul
pop
sbb
outsb
mov
decl
shll
adc
popf
pop
stc
adc
add
and
mov
jne
pushf
xchg
push
or
test
inc
mov
cmp
ds
inc
ror
jecxz
dec
add
mov
popa
cmp
mov
sbb
in
inc
adc
pop
jnp
or
arpl
scas
jno
ljmp
adc
push
out
imul
fisttpll
icebp
in
fs
aas
cmp
add
loope
adc
dec
pop
mov
nop
sbb
mov
fadds
data16
jae
push
jo
movsb
mov
jns
xchg
adc
sub
or
jmp
ss
add
xor
insl
pop
popa
ja
mov
push
xor
outsb
lods
sbbl
sahf
pop
inc
stc
divl
sub
add
inc
pop
sbb
test
inc
jbe
inc
or
jl
cmp
push
insb
test
mov
ret
and
jbe
ficoms
iret
adc
rolb
sar
mov
adc
icebp
pop
adc
adc
xchg
mov
pop
shrl
adc
pop
adc
mov
xor
loopne
sahf
movsb
or
int3
mov
jmp
mov
cmp
sbb
xlat
out
jecxz
mov
cld
mov
cmp
shlb
ja
and
dec
xor
xchg
push
sahf
icebp
mov
movsl
mov
jae
sbb
ds
cmp
mov
inc
mov
push
scas
lahf
push
or
pushf
imul
rcl
and
inc
dec
sbb
mov
iret
loopne
pop
ficomps
fstl
movsl
repnz
adc
fidivrs
test
aam
sti
and
jp
and
mov
xchg
dec
dec
fwait
hlt
xchg
or
in
lret
mov
xlat
or
popf
roll
das
xor
dec
mov
inc
adc
les
or
push
into
mov
fildl
pop
push
xchg
imul
popf
sub
jge
out
clc
jle
lds
jno
cmp
adc
xlat
bound
mov
push
push
inc
lods
mov
fisubs
or
inc
sbb
xor
syscall
loop
insb
les
push
loopne
int
inc
ds
inc
adc
cmp
add
outsb
loop
jmp
testb
sub
inc
sbb
dec
aad
loope
into
ret
or
xlat
loope
and
lret
ja
push
fldl
pop
mov
mov
out
adc
adc
loopne
and
mov
mov
cmp
scas
test
xchg
cltd
mov
loope
daa
push
mov
push
pop
pop
cmp
mov
adc
pop
insb
jl
loope
cli
pop
pop
test
mov
into
pop
cmc
add
cmp
sbb
cmp
imul
mov
dec
push
divps
fwait
daa
ret
mov
push
lret
pop
ret
xchg
adcb
stos
xor
aad
pop
sub
push
mov
or
scas
loope
stos
cmp
or
lds
xchg
cmp
dec
cli
add
into
jge
xor
mov
add
clc
add
pop
outsb
sbb
or
cmp
push
mov
inc
jp
daa
test
addl
mov
push
and
xor
mov
jge
stc
mov
sbb
lock
sahf
insb
addl
add
dec
mov
movsb
xor
scas
mov
push
mov
sahf
cltd
mov
int3
or
cmp
repz
sbb
aam
in
scas
shrl
rolb
pop
movsl
sub
mov
mov
cmp
mov
mov
and
aam
xor
sbb
cmpsb
sub
fldt
or
jecxz
pop
negb
xchg
push
aas
lock
fcompl
iret
add
enter
out
dec
sub
xchg
mov
in
addr16
cld
add
lret
jg
leave
jge
shll
cmp
inc
pop
push
cmc
and
into
cld
push
lret
sbb
lret
sub
inc
xchg
hlt
inc
sbb
dec
push
dec
and
mov
mov
daa
hlt
xchg
pushf
push
cs
jge
in
jae
mov
icebp
or
cmp
cmc
mov
leave
out
daa
xchg
mov
mov
and
insb
jle
lcall
xchg
stc
push
cmp
push
cmp
testb
mov
xchg
movsl
push
lcall
adc
insl
outsb
dec
test
push
outsb
jbe
and
inc
mov
or
lock
xlat
daa
xchg
fists
std
imul
pusha
push
inc
add
mov
sbb
and
fmuls
dec
sbb
inc
push
dec
mov
pop
dec
icebp
mov
loope
sub
icebp
xchg
jg
insl
fisubrl
push
dec
mov
jl
mov
stos
xchg
cwtl
lahf
or
lods
or
cmc
lret
cmp
dec
imul
push
mov
in
ret
adc
push
dec
imul
mov
push
and
pop
pop
sbb
jmp
mov
jae
mov
lea
mov
mull
mov
stos
add
nop
and
loope
scas
jp
jno
mov
sar
push
mov
mov
jmp
sbb
outsb
mov
repnz
dec
lods
aad
lret
repz
and
adc
pop
dec
jb
movsl
inc
es
sbb
addr16
addr16
dec
cmpsl
outsl
mov
test
test
xchg
jle
fmuls
movsl
daa
fbld
push
jecxz
outsb
ljmp
mov
jmp
out
nop
fucomip
psubw
scas
insb
jmp
es
int
lock
push
rclb
les
outsb
ret
cmp
hlt
jle
inc
pop
movsl
jbe
call
cs
sbb
mov
pusha
imul
in
or
sub
enter
les
scas
fdiv
pop
pop
shll
push
pop
enter
push
in
pop
test
adc
insl
add
xsave
imul
std
sbb
lret
mov
cmpsl
and
pushf
add
mulb
dec
and
add
mov
aad
mov
xor
adc
mull
sbb
jb
jp
fidivrs
popf
add
ljmp
cld
cmpsl
cmp
inc
in
mov
cmc
mov
xlat
cmp
add
push
xor
fcomps
dec
mov
imul
adc
dec
cwtl
insb
negb
mov
xchg
sub
sub
jne
loopne
cwtl
xchg
mov
mov
and
lcall
mov
jg
dec
mov
xor
fiadds
lahf
add
movsl
dec
and
loop
push
rorb
mov
aam
dec
shlb
int3
inc
pop
push
dec
daa
push
jnp
or
mov
movsl
push
movsl
icebp
add
adc
pop
dec
and
dec
jns
dec
jo
sbb
jmp
int3
jp
adc
sub
push
xchg
cmc
aad
gs
push
jecxz
dec
inc
mov
push
mov
jl
cli
pop
xchg
pop
outsl
xchg
scas
or
stos
ja
dec
inc
pop
mov
rorb
int3
das
sub
push
mov
inc
adc
clc
fwait
mov
dec
or
rcrl
mov
jne,pn
inc
pop
and
mov
sub
inc
scas
and
mov
adc
mov
outsl
repz
ljmp
stos
imul
inc
mov
push
out
lods
sbb
xor
fisubs
mov
pop
int
iret
les
sbb
into
pop
test
adc
rclb
cmp
imul
pop
push
push
inc
sbb
fwait
xor
or
cmovne
loopne
and
cs
push
mov
inc
jae
xor
and
into
mov
mov
mov
jbe
cltd
jb
test
adc
sbb
mov
inc
ljmp
fists
lahf
mov
loope
mov
bound
cmp
fistpll
mov
lds
aam
stc
loopne
pop
dec
lcall
insb
cmp
out
inc
lods
push
lahf
push
imul
dec
jns
pop
outsb
aaa
push
cmc
sbb
clc
inc
into
xchg
iret
icebp
sbb
push
sub
sahf
lds
adc
pop
js
sbb
into
jne
mov
fmull
mov
out
mov
mov
add
lret
incb
std
or
mov
mov
mov
cli
icebp
jae
lea
pop
aam
daa
mov
mov
mov
push
clc
cmc
sbb
and
or
shrb
adc
mov
sbb
sbb
cmp
clc
push
loope
add
js
imul
or
pop
in
lock
mov
and
push
cmpsb
stc
mov
sub
mov
mov
pop
sbb
mov
adc
push
movsl
stos
jp
jne
enter
push
add
adc
scas
hlt
popf
xor
mov
in
or
xchg
sub
pushf
xchg
mov
add
add
stos
outsb
fidivl
pop
pop
int3
push
mov
mov
sahf
xor
dec
push
mov
outsb
in
rolb
sarb
adc
scas
pop
mov
add
xchg
mov
or
sar
aaa
fisttpll
sahf
mov
push
popf
xor
adc
scas
cld
xor
test
into
add
xorl
loop
or
or
mov
imul
ja
jp
inc
sbb
or
xlat
lret
adc
mov
or
push
sub
clc
addr16
push
loope
adc
pop
xor
stos
scas
xor
or
das
cmp
leave
or
out
jns
add
xchg
cmp
out
lret
cli
inc
and
sub
and
mov
test
push
outsl
and
jmp
push
jo
scas
aas
mov
daa
pop
js
push
adc
dec
cmp
xor
testl
mov
jge
inc
insb
pop
stos
dec
dec
cmp
ljmp
hlt
dec
mov
push
add
mov
mov
inc
mov
and
ss
call
jecxz
and
pop
arpl
xor
icebp
mov
add
mov
lods
in
push
cmp
jno
fs
push
enter
and
scas
mov
leave
int3
fndisi(8087
jo
and
cmp
stc
test
faddl
mov
cwtl
std
cmc
cmp
mov
add
mov
stc
jne
fldl
jmp
xor
jmp
add
and
xchg
clc
or
lea
lahf
mov
pop
pop
jae
cltd
repz
out
imul
lret
cmp
pop
lcall
adc
dec
out
fmull
insl
enter
jg
dec
jnp
lea
push
out
lcall
cli
pop
xchg
xchg
pop
orb
repnz
add
jno
les
pop
subl
mov
and
insl
cmovnp
clc
xor
or
sub
int3
jnp
and
psubw
outsb
xor
inc
sbb
xor
repz
pop
inc
test
dec
sbb
sbb
pop
in
xor
dec
xor
sub
push
inc
hlt
dec
jbe
icebp
push
shrb
mov
dec
adc
dec
adc
pop
or
out
or
pop
cmp
sti
jl
leave
jns
popa
aaa
push
push
xchg
inc
or
out
sbb
popf
loop
push
jae
int3
adc
jle
or
jns
clc
fwait
push
and
int3
push
mov
sbb
and
sahf
mov
hlt
xor
jbe
fsts
push
bswap
pop
mov
xchg
fwait
mov
xor
mov
push
imul
push
cmp
adcb
dec
push
sbb
test
xchg
loope
xchg
pop
cld
add
insl
cmp
shr
sub
dec
pop
push
mov
mov
icebp
adc
push
jmp
aad
iret
popa
inc
xor
imul
pushf
imul
stc
jmp
pusha
inc
fs
mov
adc
nop
sub
aam
dec
sbb
mov
cltd
xchg
cs
jp
sbbb
dec
lcall
and
cltd
hlt
fsub
sub
ja
ret
push
flds
andl
fwait
pop
daa
xchg
mov
ds
jb
push
out
data16
add
pop
adc
aas
shlb
in
mov
cmp
sbb
das
cmp
sti
and
cmc
push
mov
mov
lret
xor
add
faddl
mov
rolb
std
push
cmp
cmp
cli
loopne
inc
xor
adc
je
pop
daa
sub
push
js
push
in
cmp
lret
fmull
xor
shrl
jg
scas
mov
cmpl
insb
adc
daa
bswap
shl
or
inc
mov
and
dec
daa
sub
mov
movsb
push
insb
and
pushf
jmp
stos
mov
xor
call
xor
insb
adc
cmp
imul
inc
adc
sbb
addr16
int
imul
fimuls
int3
or
sbbl
insb
sub
cmpb
cwtl
mov
pop
jns
inc
add
jbe
sbb
outsl
leave
nop
push
and
xchg
outsl
movsl
cwtl
int3
xchg
sbb
xor
sahf
mov
mov
popa
std
lahf
inc
cmp
add
hlt
and
push
and
orb
mov
adc
sub
mov
fmull
xor
stos
sub
rorl
fs
clc
cmpl
add
scas
inc
in
out
out
xchg
cmp
inc
mov
jnp
mov
jmp
xor
jae
dec
lea
out
mov
lea
pusha
push
mov
push
daa
fldt
jae
lahf
enter
jns
ja
and
add
fcmovnb
cld
scas
repnz
ret
aaa
xlat
xchg
sti
cmp
pop
mov
rcrl
push
mov
pop
sbb
or
pusha
ret
pusha
jmp
and
insb
pop
scas
outsl
mov
cli
mov
adc
stos
sub
push
mov
into
cwtl
scas
lds
sub
test
mov
mov
sar
lods
dec
push
push
xchg
adc
and
pushf
test
aaa
icebp
out
loopne
jne
pop
cld
or
push
stos
inc
jno
lret
adc
xlat
or
jae
js
rorb
jl
cli
and
call
mov
dec
add
push
jae
test
cli
stc
jb
jge
pop
pop
mov
inc
jnp
popa
sub
arpl
or
xlat
cmpsl
adc
testl
cmp
divb
cmp
add
cld
mov
or
fninit
mov
aaa
dec
xchg
pcmpeqb
xor
leave
out
lods
cmp
mov
stos
sub
mov
roll
data16
mov
dec
mov
inc
fsubr
mov
mov
js
adc
in
push
jp
loope
dec
lods
jmp
pop
and
outsb
mov
xchg
mov
lock
incl
pushf
mov
in
fmull
mov
cwtl
mull
popa
adc
add
imul
sbb
sbb
inc
fwait
stos
xchg
icebp
inc
mov
push
cli
aas
jnp
cmp
arpl
push
and
sbb
cmp
xchg
dec
movsl
cmp
pop
sbb
pop
arpl
loop
js
hlt
jmp
push
cs
dec
jmp
enter
jns
push
cmp
push
fadd
gs
fsubr
fdivs
or
push
xchg
lock
imul
mov
cli
inc
fisubs
sub
int3
sahf
jae
push
xor
and
insb
xlat
jle
adc
mov
stc
jle
cwtl
mov
sub
inc
push
pusha
mov
ss
mov
shl
cmpsb
inc
mov
mov
fimuls
data16
adc
xor
and
cmpb
dec
cmc
mov
mov
shr
push
dec
dec
ja
mov
mov
aad
dec
or
pop
test
cmc
jnp
mov
stc
cmp
add
and
push
into
xchg
mov
mov
sarl
dec
and
mov
add
arpl
jno
popl
pop
mov
pop
shll
int
pushf
and
cmp
fcoml
mov
loope
cltd
shll
fwait
out
ret
push
fisttpl
das
push
adc
xchg
mov
inc
mov
jo
or
cmpsb
popa
aas
xchg
sbb
sti
ret
mov
mov
outsb
aam
pop
sbb
xor
pop
out
dec
mov
orl
into
xchg
xor
inc
sbb
mov
loope
sub
inc
ucomiss
or
fidivs
push
insl
mov
int
xchg
enter
ds
cltd
int3
outsb
and
lds
push
dec
mov
push
repz
sbb
cli
lds
push
or
in
into
xor
aam
cmp
push
call
addl
mov
or
cs
jns
aaa
testl
fs
push
dec
scas
xchg
or
aad
test
mov
popa
loope
mov
cmp
mov
pop
bound
jnp
jecxz
sub
hlt
mov
subl
loope
add
test
lret
sbb
insb
fwait
movsb
xor
pusha
cmc
loope
push
sub
adc
mov
gs
iret
rcl
fnstcw
or
outsb
push
mov
add
test
int
fildll
xchg
push
nop
pop
orb
out
inc
ss
repz
popf
cmp
enter
xchg
cs
aad
cmp
sbb
and
xor
inc
cmp
stos
mov
sbb
jle
and
dec
data16
ds
push
cli
xchg
push
mov
test
scas
push
ret
outsb
ja
notb
mov
dec
sub
cli
pushf
les
or
hlt
dec
or
out
dec
sub
dec
test
adc
jns
mov
and
cmp
mov
push
add
inc
rcll
lahf
addb
insb
cltd
les
mov
test
repz
cmpsl
in
add
xor
cs
sbb
add
cmp
xor
push
dec
out
cmpb
and
jo
popf
cld
hlt
sub
push
repnz
xchg
push
pop
jecxz
sub
mov
bnd
inc
mov
pop
xor
mov
fldt
inc
add
cmp
popf
sti
xor
add
sub
ror
add
stc
or
mov
gs
fmulp
mov
mov
lea
xchg
mulb
mov
mov
xlat
add
shlb
xchg
mov
arpl
lea
test
je
jmp
lahf
mov
loopne
stos
add
sbb
xchg
fcmovnbe
lret
pusha
mov
mov
sbb
aaa
pop
mov
and
mov
hlt
pop
dec
and
lcall
js
ror
cwtl
cmp
adc
xchg
adc
push
lret
fmul
cltd
mov
imul
adc
cmp
push
push
sbb
xchg
cmc
shll
enter
data16
mov
jmp
jne
add
cld
jle
xchg
sub
jge
jmp
fsubrs
or
sbbl
ljmp
aas
sbb
cmp
not
cmp
lods
loope
data16
mov
imul
xchg
fadd
push
aad
add
push
xlat
rorl
sbb
loope
xlat
adc
bound
fwait
push
push
jl
dec
jnp
and
and
mov
add
pop
jb
or
icebp
fmuls
sub
add
js
adc
add
xor
push
mov
das
and
cld
pop
push
cmc
arpl
sub
push
stos
push
jae
enter
add
add
sbb
repnz
cmpsl
pop
push
cmp
add
mov
sub
js
outsb
mov
add
xchg
sbb
dec
mov
lods
mov
cli
movb
xchg
repz
push
add
and
popf
adc
inc
js
add
mov
cmpsl
adc
inc
nop
imul
mov
push
jg
xchg
mov
stos
lcall
enter
or
jo
aad
xchg
rcl
dec
jae
sub
mov
or
cs
add
push
aad
push
test
mov
int
xor
imul
sbb
int3
sbb
cmpsb
js
ds
add
lea
xor
scas
mov
sub
mov
and
data16
sub
std
adc
popa
jg
mov
add
jl
aad
fs
push
into
cwtl
mov
js
add
fs
dec
out
jb
ret
fwait
loope
push
mov
mov
jne
or
or
movb
or
in
sbb
sub
insb
pop
add
push
sub
aam
loop
lret
dec
jg
in
xorl
mov
int3
cli
icebp
cmp
leave
cmp
sti
ds
fildll
js
adc
push
insl
lock
hlt
push
xor
pop
dec
lahf
insb
add
fiadds
sti
fdivrl
cmp
xlat
cltd
sahf
rorl
sub
addr16
bound
and
ja
or
add
sub
mov
add
int
jnp
stc
sti
insb
inc
cmp
mov
or
ret
jno
fs
push
call
out
xchg
sub
push
in
add
es
outsl
lock
stc
sbbb
ret
push
xchg
mov
or
or
pop
lock
sub
push
in
mov
fistps
mov
dec
sbb
add
jns
std
inc
shll
cmp
popf
popf
pop
lods
dec
sbb
jns
or
adc
mov
jecxz
jp
subl
inc
and
enter
daa
xchg
mov
jns
test
mov
xchg
ja
iret
sti
push
xor
jecxz
cld
jmp
xchg
fs
mov
xchg
add
pop
jp
pop
inc
das
inc
sbb
cmc
mov
aad
sbb
pusha
loop
mov
jle
and
pop
mov
jge
sbb
outsl
test
imul
xchg
add
stc
xor
setge
pop
inc
cmp
and
or
mov
adc
inc
jl
xchg
sbb
insb
and
inc
in
push
inc
inc
mov
mov
aaa
mov
inc
dec
lds
mov
mov
and
xor
cld
xlat
ucomiss
pop
or
jno
call
stos
sbb
pop
add
mov
mov
dec
sub
ret
and
jno
out
push
mov
xchg
xchg
in
int
out
dec
repnz
sbbb
imul
shr
jns
pop
mov
mov
or
aas
inc
mov
aas
dec
jg
scas
je
inc
imul
jmp
and
not
pop
mov
cmp
xorl
clc
push
aaa
jb
insb
add
loope
cmp
cs
inc
xchg
push
cmp
mov
cmp
pop
fisttpll
ror
pushf
std
mov
pop
insb
adc
sub
cld
and
inc
sbb
xchg
rcll
lahf
add
sub
push
cmpsl
xor
addr16
or
in
lods
outsl
test
stc
pop
outsb
cli
je
dec
aad
inc
bound
movsl
ds
test
movsb
testb
xchg
sub
lcall
xor
cmpsl
sahf
xor
or
cmp
xchg
pusha
sbb
imul
adc
push
or
mov
inc
xchg
das
imul
cli
testb
sbb
pusha
or
push
lods
fwait
or
cwtl
imul
scas
mov
or
pop
push
dec
dec
cmp
xchg
sbb
ds
sub
jecxz
push
shr
mov
push
lcall
pop
jnp
or
rcrb
cltd
movsl
jae
leave
nop
stc
nop
out
lcall
cmp
sbb
or
aad
xor
or
or
and
std
ss
pop
sbb
xchg
sbb
daa
out
out
inc
test
out
sarl
mov
mov
ja
test
sub
icebp
stos
cmp
xor
imul
rcrb
pop
adc
int
das
cmp
or
jp
sub
xchg
mov
push
add
imul
je
mov
sbb
loope
cld
cs
inc
adc
pop
clc
and
and
loop
movsb
add
xchg
rorb
sbb
cmpsb
or
outsb
int3
jl
scas
jmp
inc
xor
outsb
shrb
in
dec
stc
mov
xchg
jbe
lret
jg
mov
out
mov
cmpsb
or
xor
das
add
add
cltd
mov
stc
rclb
test
adc
aad
or
lock
jnp
or
inc
lds
mov
add
xchg
insl
rep
xlat
test
es
dec
lret
push
sbb
pop
dec
add
aam
leave
mov
insb
rcl
xor
mov
dec
cs
cltd
test
mov
scas
jmp
push
add
mov
add
mov
js
mov
loop
push
cmp
jecxz
pop
in
push
nop
jne
std
stos
ss
popa
aaa
sbb
adc
fst
je
adc
test
push
xor
xchg
insb
int3
sbb
lods
out
xchg
fsts
cmc
aas
into
add
outsl
clc
pop
ret
cmp
lret
jp
push
fstpl
cmp
es
jns
inc
scas
mov
dec
outsl
jnp
and
xchg
enter
aaa
sar
mov
adc
inc
dec
cli
in
or
lods
and
xchg
mov
pop
push
outsb
pop
mov
mov
fnstsw
movsb
es
ret
mov
mov
xor
xchg
repnz
imul
add
mov
dec
jne
inc
mov
mov
cmp
sbb
mov
hlt
adc
int
fistl
add
mov
setge
sahf
enter
cld
dec
insl
stos
mov
or
jnp
stos
movsl
xor
mov
test
cmp
cmp
pop
clc
aas
sub
iret
fldt
ds
je
rol
or
inc
xchg
je
push
test
xor
push
add
pop
cmp
sub
inc
fcoml
pop
xchg
add
aam
pop
stc
jge
movsb
inc
xchg
pushf
sahf
in
ret
add
gs
movl
jp
aad
push
jb
scas
shlb
push
fisttpll
popa
mov
lahf
xor
repnz
inc
xor
lods
adc
xor
aam
pop
pop
inc
cmp
pusha
ja
push
or
pop
movsl
and
ret
pop
pop
sub
repnz
enter
push
andb
mov
aaa
das
adc
rcll
pop
sub
sbb
mov
add
lret
pop
stc
xchg
popf
mov
aad
addr16
test
inc
imul
pop
clc
adc
sub
lahf
fstl
aad
sbb
push
loopne
mov
stc
sub
aam
stc
addb
insb
sbb
mov
arpl
inc
insb
add
mov
jo
jne
push
mov
xor
out
or
mov
ds
insl
daa
sub
lret
mov
or
cli
ret
enter
int
push
jl
insb
jmp
adc
popf
or
rcll
jo
aad
jl
data16
dec
mov
les
add
fdivl
push
xor
push
add
pop
inc
inc
push
decl
test
xor
hlt
push
test
xor
pop
pop
dec
scas
mov
leave
push
das
andb
adc
cmc
mov
jl
push
in
jbe
lret
repnz
pop
add
ret
jo
push
mov
or
mov
pand
ror
xchg
pop
mov
or
fwait
mov
nop
jl
dec
xchg
sbb
push
xchg
outsb
inc
mov
fnstenv
pop
pusha
dec
and
mov
mov
adc
cmc
jne
xlat
sbb
adc
in
inc
and
cwtl
jo
sub
or
mov
adc
and
fs
dec
lock
cmp
int3
dec
aam
shll
roll
jl
inc
aad
jns
or
pop
sub
es
into
or
dec
pop
movsl
sub
outsb
data16
cmc
dec
cld
inc
xor
sbb
add
or
lret
mov
and
jl
testl
es
in
test
scas
dec
out
add
adcb
mov
dec
sub
ja
dec
push
pop
fnsave
dec
aad
clc
or
out
adc
mov
sub
jno
mov
enter
inc
cmp
jae
fisttpl
sub
repz
jmp
cmp
imul
inc
add
mov
movsb
dec
add
scas
imul
dec
adc
pop
sub
ja
jnp
or
ficompl
mov
lret
pop
xor
cmp
jecxz
mov
pop
jmp
pop
xor
xchg
mov
fistpll
cmp
call
sub
loopne
mov
jmp
jl
or
push
cmpsb
sbb
loope
push
or
push
dec
dec
stc
loope
cmc
lahf
push
and
loop
add
popf
jle
fs
push
rorb
int
adc
xor
flds
movsb
push
xchg
sub
inc
and
mov
mov
dec
sbb
sti
or
lock
and
mov
jl
lahf
or
push
out
or
enter
outsl
jecxz
mov
lods
inc
icebp
sahf
fwait
add
sub
xor
call
je
lret
mov
pop
mov
adc
sbb
incb
orb
cmp
sarb
xchg
xor
sbb
into
cs
push
sbb
ret
dec
clc
shll
pop
shll
bnd
cmpsl
jne
mov
add
ds
mov
call
dec
xchg
sub
mov
and
mov
imul
lahf
prefetchw
sarb
mov
mov
dec
mov
mov
adc
add
ljmp
pushf
mov
shr
inc
and
push
push
dec
sub
pop
mov
add
pushf
sbb
es
mov
popa
loope
lahf
mov
push
sbb
test
aam
dec
inc
inc
pop
mov
sbb
push
js
mov
lret
popf
ret
dec
popa
insl
hlt
add
inc
dec
daa
jb
icebp
push
mov
rclb
inc
insb
mov
imul
mov
jg
jecxz
jne
adc
das
loopne
enter
lods
out
lods
sbb
xchg
idiv
hlt
jne
into
jecxz
hlt
jo
aam
inc
jl
pop
push
out
enter
aad
mov
xchg
push
js
clc
and
add
loopne
mov
cs
inc
xlat
mov
cmp
push
sbb
pop
push
cld
xlat
jp
xchg
inc
sub
stos
and
mov
repz
aam
repz
inc
dec
mov
xchg
jg
adc
ds
loope
mov
lret
loopne
aad
arpl
inc
push
mov
into
sahf
xor
loope
mov
mov
ret
fs
sahf
lret
cmp
and
inc
and
arpl
loope
int
jno
cmpsb
mov
in
roll
aad
dec
dec
ljmp
or
stos
add
fdivl
and
pop
dec
sbb
cmp
sbb
aam
scas
and
movsl
mov
add
imul
cmpl
repnz
fwait
push
push
shlb
xor
mov
mov
jp
inc
test
addr16
icebp
dec
xor
in
mov
lods
push
mov
shl
fistps
insl
push
jnp
push
insl
adc
js
inc
cmpsb
out
mov
sub
add
inc
sarb
pop
test
ja
jb
into
dec
mov
jne
comiss
xor
cs
fisubrs
shrb
arpl
mov
sub
jle
stos
insl
daa
sub
ja
leave
addb
jnp
mov
aaa
mov
int3
push
xlat
nop
stos
inc
push
inc
sub
jae
insb
cmpsb
lret
pushf
adc
mov
andl
sub
cwtl
imul
js,pn
sbbb
dec
dec
js
adc
xor
ss
jno
cmp
sbb
sti
push
pop
shl
ret
clc
or
sbb
stc
xchg
loope
lret
mov
out
or
mov
lods
mov
push
stos
std
stc
cmp
rclb
jb
ja
xor
mov
mov
cs
push
dec
leave
add
sbb
add
out
or
pop
fstl
push
mov
and
jno
mov
cmp
xchg
jl
jne
inc
push
jne
xchg
jnp
enter
out
insl
xchg
xchg
js
stos
adc
pop
outsl
pop
outsl
push
and
lret
sbb
mov
push
jmp
or
xchg
cmp
push
lret
xor
aas
push
clc
dec
inc
sub
sbb
jecxz
arpl
mov
js
ret
push
pop
and
mov
addb
test
push
push
cmpsl
push
andl
push
or
and
sbb
ljmp
fnstcw
scas
mov
imul
adc
popa
dec
imul
mov
pop
icebp
xchg
pop
or
inc
leave
push
inc
cwtl
fdivs
mov
insb
mov
ret
mov
loopne
in
pop
cmc
dec
rorb
nop
pop
jmp
dec
dec
int
bound
mov
leave
adc
aas
inc
and
dec
call
lret
imul
mov
push
pop
mov
cmp
pop
xor
cmp
test
xchg
jmp
fdivl
or
leave
jp
enter
jns
push
dec
lods
outsl
push
loopne
div
xlat
daa
inc
lods
frstor
cmp
sub
leave
inc
jb
cmp
pop
xchg
jg
jl
sbb
loopne
jnp
pop
int3
xchg
pop
mov
cmpsb
addr16
imul
add
and
aaa
lret
int
pop
and
mov
aaa
inc
inc
pop
popa
lea
insb
imul
xor
loopnew
sub
test
mov
cs
pop
xor
jnp
sbb
mov
sub
xor
in
push
leave
insl
inc
in
inc
xchg
pop
test
inc
rorb
and
orb
push
ss
idiv
imul
adc
into
out
xchg
popa
cmp
lock
outsl
cs
add
and
inc
jl
imul
inc
fistpl
jl
gs
cmp
add
cmc
loope
pop
fbstp
and
inc
sbb
inc
sbb
add
repnz
dec
mov
jb
mov
test
jg
leave
sbb
mulb
shl
dec
mov
das
orl
loop
leave
fadds
and
roll
imul
xchg
call
outsl
rcll
add
push
lret
push
mov
dec
inc
cltd
jp
stc
shlb
adc
mov
out
add
lock
into
jecxz
adc
aad
xor
and
add
push
xor
mov
lahf
adc
aad
cmp
and
test
mov
cmp
pop
pop
leave
sbb
adc
push
outsl
scas
mov
fs
fidivrs
out
sahf
inc
inc
push
mov
push
into
push
aad
lds
insl
and
pop
daa
out
sub
imul
popf
mov
fdivrs
insb
xor
and
std
out
dec
daa
mov
jno
call
mov
jae
jae
mov
mov
dec
add
jge
repnz
ja
inc
sbbb
lret
sbb
push
xchg
into
mov
push
push
xor
inc
cld
js
mov
decl
pop
push
das
push
add
adc
out
xchg
inc
inc
mov
jbe
or
dec
ja
addl
clc
pop
ja
lods
loopne
sbb
mov
roll
xor
add
mov
adc
jle
movsb
icebp
int3
dec
shl
dec
jns
inc
fimull
push
mov
test
jae
fwait
jle
fstps
pop
and
je
or
jecxz
xchg
mov
mov
rcrb
jns
fnsave
xlat
je
pop
mov
adc
pop
pop
daa
clc
xchg
xchg
mov
shlb
jmp
sbb
cltd
cmp
xor
xchg
daa
xchg
sbb
and
loope
popa
xor
mov
call
scas
sub
sub
leave
mov
repnz
test
daa
fidivrs
pop
lods
les
aam
sbb
loop
shrw
sti
jp
mov
popa
flds
imull
outsl
add
sub
and
sub
mov
stos
fidivrs
or
call
mov
sbb
cwtl
xor
adc
rcll
mov
or
xchg
pop
enter
xchg
jg
andl
loopne
cltd
in
les
icebp
aad
push
shlb
xchg
dec
mov
jns
and
push
add
pop
jns
or
add
lahf
pop
sbb
xor
adc
pop
xor
adc
aaa
jmp
stc
testl
or
xlat
cmpsl
stc
mov
movsb
lahf
nop
dec
sub
xlat
push
sbb
cmp
sarl
inc
jns
lret
or
idivb
sub
inc
jae
mov
fdivr
push
les
mov
pop
sub
in
das
add
sub
scas
jnp
popa
ret
mov
xor
into
cmp
pop
push
push
data16
in
daa
add
xchg
add
and
jl
mov
fstpt
sti
mov
jno
imul
mov
push
sbb
adc
sub
xchg
call
int
sahf
enter
loopne
std
and
dec
sarl
mov
jl
leave
insb
mov
and
popa
mov
ret
popa
push
inc
mov
test
jg
adc
clc
mov
xchg
pop
xor
and
rclb
and
jne
pop
popa
mul
out
push
push
mov
fisubs
lods
mov
add
pop
or
cmp
sahf
jecxz
inc
or
xor
in
test
cmpsb
adc
mov
dec
subl
test
arpl
ffreep
dec
dec
xor
cmp
roll
test
push
loopne,pt
call
push
iret
push
and
or
stc
rorl
mov
add
pop
cmpsl
into
pusha
aam
repnz
fwait
arpl
mov
mov
jmp
sub
add
divb
fbld
mov
and
popf
or
and
cmp
out
nop
sub
mov
mov
les
test
shrb
add
adc
or
inc
in
push
xorl
push
cmpl
inc
lods
pop
sub
pop
xchg
and
divl
xchg
lret
cmp
inc
push
ss
mov
lcall
in
test
add
mov
fcomps
and
mov
mov
and
ljmp
dec
jae
lock
mov
and
pop
lcall
mov
jnp
popf
repz
inc
aad
arpl
pop
xor
inc
push
or
popf
out
mov
or
ret
push
adc
repnz
jecxz
push
hlt
add
sbb
mov
stos
cmp
jb
push
push
mov
test
push
sti
xchg
repnz
and
outsb
pop
xor
dec
sbb
ds
pop
js
stos
sti
or
outsl
mov
lcall
ds
mov
and
ret
mov
mov
jge
and
inc
mov
outsl
imul
dec
adc
mov
into
call
loop
scas
pop
insb
mov
fsubl
and
out
sbb
xchg
out
imul
push
push
clc
je
icebp
mov
mov
sub
ret
push
out
divb
and
mov
loope
inc
jmp
outsw
inc
faddl
add
jecxz
popa
out
and
out
jle
add
pop
push
test
fnsave
pop
pop
fs
js
adc
or
pushf
mov
add
fdivl
jle
scas
inc
pushf
sahf
mov
mov
stos
add
and
cmp
inc
pop
and
scas
lea
ljmp
xorl
pop
dec
sbb
xchg
dec
pop
sub
cli
outsb
test
mov
inc
aam
xchg
cs
test
bound
pop
dec
insl
hlt
mov
test
popa
jecxz
repnz
insb
mov
dec
insl
cmc
jns
test
lret
jmp
aas
mov
fidivl
xchg
cmp
xor
je
cmpsl
jo
bound
add
shrb
sbb
inc
stc
mov
mov
mov
or
jecxz
adc
or
pop
insl
xchg
xlat
adc
mov
cmc
out
sahf
pop
or
sahf
cs
test
sti
je
or
and
pusha
jl
push
push
sub
sub
insb
pop
test
pop
adc
push
push
adc
pop
lods
sbb
adc
push
jl
inc
push
fsubl
lahf
sti
stc
jmp
fmulp
inc
xlat
cli
inc
mov
xchg
push
js
js
lock
mov
lods
inc
mov
in
jae
mov
cmp
sbb
push
adc
aad
xor
lcall
adc
or
push
les
cmp
out
hlt
ret
int
les
xor
adc
sub
mov
imul
adcl
jmp
xchg
lock
xor
rorb
push
out
aam
inc
scas
sahf
shlb
sub
jle
pop
clc
cmp
adc
dec
stc
push
imul
add
iret
mov
push
mov
pop
cs
shrb
leave
or
orb
xchg
lcall
rcl
push
and
push
jo
jp
jne
mov
cmp
lahf
subb
test
iret
movsl
out
pop
ss
fldl
movsb
shrb
jmp
insb
or
test
sbb
mov
fcmovb
inc
negl
arpl
pusha
sahf
pop
push
sbb
in
mov
sti
mov
cmc
jecxz
pop
lret
jo
ret
orb
enter
and
sub
orl
adc
inc
push
lods
xchg
int3
les
in
pop
insl
psubq
in
insb
pop
jns
fmulp
adc
aad
pop
inc
andl
add
add
mov
std
push
into
and
mov
push
icebp
cmp
mov
jbe
ret
xchg
xor
mov
inc
fmull
inc
mov
inc
xchg
or
out
lock
dec
mov
xor
push
loope
sbb
fstps
mov
adc
sbb
jle
xlat
cmp
imul
cmp
add
bound
aad
bound
sub
jecxz
lahf
sub
shrl
cmp
sbb
mov
mov
sbb
sub
sbb
loop
pushf
jle
cli
adc
icebp
or
mov
into
pop
jns
pop
jge
bound
daa
sub
or
loopne
cmc
adc
and
xlat
fldl
lods
jbe
pop
sub
add
rcrl
mov
in
sbb
ficoml
adc
incb
stos
xlat
enter
mov
jecxz
test
test
pop
lea
and
jl
add
sti
xchg
xchg
dec
sbb
ret
test
inc
aaa
inc
mov
fwait
into
clc
fwait
mov
je
adc
ret
jl
jle
ud1
mov
mov
xlat
or
pop
mov
push
jne
popf
xor
jnp
mov
popa
movsb
lret
ret
inc
dec
jns
inc
inc
or
dec
xchg
xor
fwait
lahf
xchg
mov
dec
cld
lret
aad
mov
rclb
and
and
out
inc
cmpsl
fldenv
sub
xor
mov
lret
and
sub
test
shll
arpl
push
jae
or
inc
and
pop
or
add
or
cmpsb
dec
call
cli
mov
inc
adc
fimuls
ljmp
psrlw
mov
test
push
icebp
mov
shlb
jmp
inc
push
mov
dec
inc
inc
xor
dec
xchg
aad
cmpsl
mov
sbb
rol
cmp
cmc
mov
push
inc
cmp
sub
ljmp
into
movb
mov
pop
jo
leave
test
push
xor
fwait
call
aad
pop
xchg
int
bound
sahf
add
popf
fsts
sub
push
and
cmp
push
cmpsl
cmp
ficomps
and
dec
mov
mov
push
out
and
popf
jecxz
lret
pop
outsl
pop
ss
rcr
std
jae
dec
repz
cmc
outsl
cld
icebp
xor
test
dec
cmp
mov
mov
pop
mov
mov
loope
repz
mov
std
dec
mov
cltd
cmc
in
stos
popa
push
adc
dec
and
loop
pop
xchg
insb
xchg
mov
fimuls
or
add
fstpl
data16
pop
mov
add
xor
aaa
pop
insb
mov
xor
xchg
mov
mov
minps
cmp
in
cli
roll
bound
add
in
cmp
mov
roll
imul
cmp
add
cmp
ret
mov
dec
test
pop
lods
das
and
pop
incb
sbb
dec
push
sub
mov
stos
aad
int3
sbb
and
sti
and
testl
dec
add
loop
inc
jmp
xor
test
jp
and
adc
or
mov
nop
xchg
fidivl
mov
jo
mov
dec
and
jbe
fld
push
dec
inc
imul
aaa
add
jle
mov
or
outsb
push
xchg
mov
lds
jp,pt
fistps
push
loopne
and
and
orb
rorb
jmp
stos
hlt
ljmp
inc
xchg
inc
add
sbb
in
adc
xor
aaa
add
into
sbb
jg,pn
mov
jp
xchg
movsb
sbb
movsb
ret
cmp
out
sbb
cli
add
aad
or
xor
cmpsl
adc
xchg
cmp
mov
cmp
insb
push
add
push
out
ljmp
mov
mov
dec
fwait
stos
cli
add
loop
js
adc
fiadds
sarb
inc
test
xchg
cwtl
ds
sub
lcall
pop
cmpb
movb
dec
and
push
sbb
neg
shrb
dec
jns
aaa
out
roll
xor
push
lea
and
test
ficompl
push
jne
inc
faddl
outsl
sub
mov
loopne
test
mov
stc
incb
cli
push
cmpl
sub
adc
fistl
lods
xchg
int3
sbb
xor
mov
dec
cs
or
cltd
dec
add
sbb
dec
aad
jno
xor
pop
inc
pushf
imul
das
xlat
jle
movsb
fisubrl
push
jno
xchg
mov
in
xchg
loope
and
mov
inc
dec
mov
test
outsl
push
cmp
xor
dec
ss
sub
adc
bound
loopne
popa
scas
lret
and
or
xor
scas
adc
lock
sub
cmp
jnp
push
dec
xor
jmp
dec
repz
cmp
sub
inc
loopne
cmp
sbb
les
sbb
push
ja
lods
pop
xorl
into
sbb
mov
xchg
and
xchg
add
jns
addr16
cltd
and
pop
outsb
push
pop
adc
ret
jg
mov
pop
call
push
lahf
sti
or
or
mov
imul
sbb
or
aam
inc
inc
xchg
movsl
cmp
nop
mov
rcrl
in
xor
pop
dec
push
stos
jo
mov
cmp
jno
push
inc
insb
lret
cmp
pop
in
fwait
push
add
std
sbb
cmp
iret
mov
and
cmpsb
test
add
xor
int3
ficomps
xor
scas
leave
jmp
mov
gs
negl
pusha
cmp
push
cmp
arpl
imul
movsb
jnp
xchg
shl
call
lock
pushf
mov
xlat
pop
cmp
out
or
xchg
xchg
xchg
es
adc
stc
sub
push
pop
cmp
dec
aaa
int3
xchg
sbb
loope
cmc
adc
call
test
sarl
addr16
dec
sub
add
add
subps
aas
xlat
xor
in
bound
stc
sti
aad
sub
out
and
shlb
sbb
in
add
adc
lcall
jecxz
aam
pop
mov
sbb
xchg
jl
rcrb
test
sub
push
xchg
adc
jnp
iret
cmpl
aas
pop
pop
inc
mov
or
or
push
mov
cli
les
pop
dec
or
js
jns
pop
stc
in
mov
cld
dec
test
add
jmp
xchg
jno
int
femms
sbb
shlb
cmp
add
push
sbb
xor
mov
ds
mov
pop
and
mov
sub
sbb
loope
cwtl
pop
pop
pop
or
adc
mov
sub
pop
imul
add
and
pop
jbe
inc
push
push
gs
enter
jg
mov
sbb
add
repz
stos
cwtl
mov
loope
scas
dec
jmp
xchg
cli
push
xor
fsubrs
add
jnp
lods
loope
add
int3
inc
jbe
push
imul
mov
sbb
cwtl
jno
cwtl
in
and
lret
xrelease
roll
mov
adc
dec
sbb
or
inc
mov
xchg
je
fwait
jecxz
cmpsb
cmove
mov
mov
jle
mov
inc
xchg
jg
fmul
cmp
inc
sub
cmp
inc
xorl
lods
lds
ret
mov
imul
xchg
jmp
fdivl
xchg
rcrl
and
add
stos
add
andb
sub
push
adc
call
sbbb
inc
cld
inc
les
xor
jge
int3
and
jne
cmpb
push
dec
mov
insl
je
fwait
lods
lods
shll
cwtl
mov
sub
cmc
cmp
dec
sbb
cwtl
or
or
addr16
js
fsts
and
jno
mov
jg
inc
nop
add
push
ror
mov
xchg
orl
mov
rcl
sbb
xchg
call
pop
inc
and
jmp
outsl
jnp
rorl
cmp
sar
adc
int3
cmpsl
rcrl
dec
add
mov
mov
sub
cmp
sahf
mov
fisttpl
jo
cmc
aad
push
sbb
in
shlb
das
ja
add
or
pop
ret
data16
sbb
push
mov
add
ljmp
daa
cmp
push
adc
loope
cmp
imul
xchg
stc
mov
inc
pop
fidivs
int
pop
stos
pop
sub
popf
pop
add
sbb
and
add
inc
movsl
xchg
push
adc
or
dec
imul
sub
dec
mov
dec
sbb
or
sbb
cmp
stos
or
mov
mov
xchg
xlat
add
int
popa
mov
mov
xlat
test
xchg
hlt
push
adc
cmp
lcall
daa
je
adc
aas
in
jle
repnz
and
mov
jle
mov
mov
test
hlt
faddp
mov
or
fiadds
adc
xor
enter
or
rcll
jnp
sbb
negl
rol
fistpll
jno
xchg
cld
adc
lret
mov
and
popf
adc
das
and
push
mov
add
sbb
or
lock
es
hlt
negl
mov
jecxz
cmc
jg
out
xchg
popf
mov
xor
mov
jg
test
rorl
cwtl
repnz
aad
inc
movsb
sub
pop
pushf
add
lock
mull
push
jno
add
jne
xlat
sbb
push
cld
dec
push
inc
enter
lret
cli
add
push
or
pusha
cs
mov
stos
dec
inc
mov
and
mov
sub
xchg
sarl
inc
mov
inc
fimuls
stos
and
clc
les
sub
in
cmp
pxor
scas
inc
add
pop
adc
jae
xor
pop
je
fdiv
das
repz
add
cmc
sbb
outsl
xor
mov
jnp
stc
xor
sti
and
ret
inc
stos
repz
sub
jbe
push
pop
fwait
insb
sub
aas
dec
scas
adc
mov
jl
mov
xchg
xor
subl
dec
loopne
and
or
rorb
outsl
pop
jmp
mov
and
xchg
rcr
jbe
popf
mov
push
clc
sahf
xlat
fcoms
adc
cmpsb
inc
scas
mov
and
mov
loopne
hlt
lret
sub
pusha
dec
cs
rorb
xor
lret
sub
test
jne
jmp
pop
mov
out
push
sub
aad
loopne
out
xchg
ljmp
sub
adc
and
xor
popf
and
lods
sbb
pop
inc
inc
in
cs
mov
sub
inc
xchg
sub
sti
mov
dec
cli
cld
sub
xchg
push
or
and
out
add
lahf
cmp
jp
jmp
adc
cmp
add
inc
mov
mov
xor
insb
data16
shl
in
test
mov
adc
test
and
mov
or
mov
fnstenv
sbb
xor
cmpb
or
into
lods
pop
dec
imul
mov
test
fwait
sti
xor
inc
xchg
sub
or
push
int3
push
sub
insb
cmp
jbe
or
jns
ret
or
inc
pop
prefetch
fnstcw
mov
add
int3
mov
push
or
sub
cmp
sbb
cmp
and
jns
out
mov
ja,pn
push
out
push
add
sub
test
mov
xor
adc
pushf
mov
inc
xlat
push
mov
jp
adc
mov
push
dec
imul
adc
cmovbe
dec
add
xchg
sub
jbe
xchg
mul
imul
push
insb
pop
mov
cmpl
out
fdivrs
jns
xor
xchg
add
in
popf
aas
insb
mov
add
sub
les
std
pop
cmp
cmp
mov
jbe
add
pushf
push
repz
cmp
popf
sub
cmp
adc
or
fstpt
push
jmp
lahf
jmp
pop
push
xor
test
cmp
jns
ljmp
rcrl
push
push
inc
xor
jnp
sub
xchg
lea
adc
js
test
ljmp
cmp
test
test
jp
mov
jp
and
loopne
fwait
xchg
xor
stc
shl
lcall
roll
jns
ret
jne
roll
inc
mov
fsubr
test
push
push
add
call
imul
push
std
call
lret
mull
lock
test
jl
cmp
lock
mov
jnp
inc
pop
jno
cs
mov
and
imul
or
popl
pop
rorl
sbb
sbb
cwtl
mov
into
inc
cld
sbb
xor
xchg
lret
daa
add
scas
testb
inc
xchg
xchg
sbb
xor
adc
add
dec
stc
mov
orb
sub
jae
xchg
dec
pop
mull
jg
jecxz
cltd
jl
jmp
push
jne
int3
sti
fs
sub
sub
imul
jmp
lock
and
scas
mov
fwait
mov
pop
mov
data16
sarl
mov
or
rcll
out
xchg
pop
xchg
xor
jle
imul
das
je
pop
daa
stc
into
mov
stc
daa
push
mov
and
inc
testb
aad
clc
sub
or
maxps
dec
jae
mov
lcall
mov
mov
pop
or
mov
mov
stos
sbb
push
mov
jb
sbb
bswap
scas
sti
clc
ds
fstpl
and
mov
or
insl
imul
mov
call
ret
push
scas
stos
into
addr16
inc
mov
in
sti
inc
mov
inc
xchg
stos
jno
sub
jg
lret
test
push
mov
sbb
mov
and
inc
xor
fs
out
fdivl
out
xchg
stos
inc
roll
ret
mov
pop
dec
cmpsb
inc
dec
cmp
sbb
shrl
enter
nop
std
mov
imul
sub
aam
push
sub
insb
iret
xchg
sbb
push
pop
loopne
inc
sbb
mov
and
js
sarl
fwait
into
clc
sbb
rclb
jno
push
ljmp
gs
sub
jnp
adc
push
scas
mov
xchg
push
rcrb
or
call
push
ss
mov
scas
jb
jle
or
test
add
and
sbb
pop
mov
ret
movsb
inc
inc
jecxz
mov
sub
mov
push
mov
lock
mov
repz
data16
push
popa
or
and
xchg
je
dec
in
arpl
dec
mov
jne
test
lods
jb
jle
xor
daa
stos
in
movsl
mov
push
sbb
pusha
and
imul
mov
add
xchg
dec
inc
into
mov
pop
xchg
orb
and
jle
xor
out
cmp
ret
int3
push
cmp
enter
test
leave
adc
test
jo
outsl
pop
mov
pop
pop
mov
push
pop
and
arpl
xor
into
sbb
outsb
mov
es
xlat
pop
imul
test
adcl
add
lret
sarb
cwtl
mov
cld
loopne
inc
sub
jae
jecxz
enter
push
dec
adc
and
aad
pop
pop
push
lret
adc
pop
mov
or
into
pop
or
add
mov
sbb
pusha
sub
loop
adc
test
cmp
and
mov
ror
add
stos
dec
cmpl
imulb
cmc
imul
adc
or
fnstcw
inc
mul
adcb
in
ror
lahf
or
sar
test
sub
in
adc
sub
jge
add
aas
fnsave
pop
mov
xor
or
push
repz
mov
xchg
repnz
jmp
pop
pop
cmpl
mov
jo
inc
adcl
outsb
mov
mov
lcall
pop
mov
sub
xchg
dec
mov
stc
and
cltd
imul
lcall
push
insl
jmp
rcll
fst
ret
lcall
icebp
sbb
adc
test
outsb
pop
fidivrs
xchg
pop
push
and
sbbb
shlb
cs
mov
popa
push
pop
or
jns
inc
insb
adc
inc
scas
jb
push
sub
cli
and
test
stos
cmp
pop
icebp
insb
fsubrl
or
pop
test
testb
popf
fldt
push
push
and
mov
mov
rolb
mov
test
leave
loopne
cmc
jo
in
jo
ljmp
mov
fldenv
or
sahf
out
sahf
cmp
ret
push
mov
stc
adc
shrl
addr16
or
cmp
loope
xchg
push
sbb
dec
sub
loope
loop
mov
gs
outsl
roll
pop
mov
arpl
mov
xchg
xchg
jp
divb
add
mov
sub
mov
std
xor
insb
sbb
sti
lahf
notl
outsb
insb
pop
pusha
popa
or
fdivl
and
cld
inc
mov
cmp
cli
and
adc
into
test
ss
jno
rorb
and
fidivl
cmp
stc
repnz
inc
mov
add
pop
ljmp
outsb
dec
or
adc
add
adc
xlat
test
outsb
sbb
and
fwait
js
in
push
sub
mov
scas
popl
sub
bound
dec
fcompl
and
cmp
in
test
cmp
sti
ret
add
push
movl
xchg
dec
scas
test
push
dec
cmp
rcll
xlat
mov
call
xor
icebp
les
cmp
les
push
dec
sbb
ja
mov
bound
sahf
sub
add
cmp
adcb
es
sbb
shr
or
adc
imul
add
xchg
dec
mov
xor
dec
stc
enter
and
jbe
jmp
in
lds
sahf
dec
dec
scas
add
imul
xor
cmp
in
repz
xor
fsts
insb
inc
mov
or
setne
and
loop
insb
out
imul
jb
sub
sub
sbb
sbb
mov
lcall
jg
fsubrs
sbb
fisubl
sub
mov
push
enter
jp
dec
int3
scas
mov
or
pop
push
out
movsl
icebp
push
xchg
adc
push
add
les
scas
mov
inc
mov
xor
lret
addl
mov
and
sub
outsl
test
dec
psubb
adc
push
add
test
popa
xchg
adc
into
mov
add
sbb
aas
pop
push
rorb
lcall
cmpsb
icebp
out
aad
push
mov
push
dec
movsl
imul
repnz
push
in
lock
movsb
push
jne
xchg
mov
cmp
add
sub
cmp
sub
rcrb
jg
mov
jae
cmp
shl
mov
or
ljmp
fcomip
test
fists
int3
int
push
int3
add
jae
adc
icebp
mov
sbb
jmp
sbb
fwait
jecxz
pop
leave
adc
push
xor
aam
xor
ja
cmp
shl
push
mov
cmp
dec
cmp
mov
xlat
bound
sub
pop
pop
mov
jle
pop
cld
mov
arpl
and
add
sub
jns
ja
or
in
cmpl
in
push
out
bound
push
das
popa
mov
mov
sbb
shlb
pop
test
dec
sarb
cmp
push
push
movsl
adc
add
pop
lcall
repz
scas
add
sbb
fsubl
push
out
mov
orl
aas
pop
orl
out
add
popa
xchg
test
mov
jmp
adc
ret
shlb
fisubs
or
xchg
loopne
add
add
mov
fcompl
xor
mov
xchg
add
mov
dec
fmuls
mov
sbb
jecxz
sbb
call
and
je
test
adc
inc
into
lahf
cmp
push
les
stos
bound
ds
cmp
imul
and
dec
cs
clc
icebp
mov
fildll
stos
cli
mov
cmp
fs
fadds
mov
or
inc
jb
je
dec
cmpsb
mov
imul
and
add
push
ja
les
shll
outsb
sbb
das
mov
adc
aad
adc
xor
popf
jnp
xchg
add
and
sti
sub
pushf
and
sbb
cvtdq2ps
dec
ja
es
inc
and
cmp
xor
nop
pop
rolb
and
push
push
insb
out
mov
call
mov
fdivr
fidivrs
push
pop
aam
decl
adc
std
in
pop
outsl
test
inc
pop
cmp
mov
and
pop
inc
xchg
xchg
daa
xchg
ja
cmp
dec
inc
aad
jnp
test
and
cs
out
aas
sbb
je
or
push
popf
inc
pop
sarb
xor
imul
int3
add
mov
add
jmp
out
rcll
sbb
fdivp
fcmovnbe
insb
cmp
push
pop
dec
sbb
adc
cmpsl
sbb
out
and
mov
push
and
mov
mov
addr16
pop
push
mov
adc
insb
imul
xchg
dec
dec
mov
mov
xchg
sub
mov
sbb
les
es
xchg
sbb
mov
jae
in
inc
aam
add
ljmp
outsb
aam
xchg
es
mov
add
loop
add
mov
or
sub
push
dec
mov
pop
mov
mov
pop
not
sbb
cmp
jbe
pop
call
jb
xor
fnstcw
cmp
pusha
sbb
ljmp
shrb
test
iret
sbb
test
pop
jp
aam
pop
pop
xchg
or
popf
xlat
or
mov
push
mov
movb
and
xor
pop
pop
mov
mov
and
int3
mov
sbb
and
push
mov
icebp
addr16
inc
imul
ljmp
sub
dec
jns
sar
popf
lahf
inc
scas
push
lcall
fs
cmp
stos
call
mov
call
ret
lret
subl
enter
push
mov
jmp
repz
loope
subl
inc
rcl
sbb
push
jmp
sub
insl
mov
fst
cmpsl
ds
je
cmp
mov
xor
ss
popf
push
dec
dec
or
fsubrp
mov
adc
add
movsb
insl
mov
addr16
cmp
movsl
pop
lret
mov
mov
icebp
adc
adc
outsb
insb
mov
popa
push
pop
xor
jae
xchg
rorl
out
sbb
movsl
mov
pop
lret
imul
ss
sbb
movsl
fdivs
mov
inc
andb
push
dec
icebp
sbb
dec
jo
test
adc
outsl
and
pop
jnp
cmp
adc
adc
call
pop
jne
fsub
inc
cmc
push
repz
mov
dec
imul
mov
mov
mov
mov
imul
mov
subl
lds
scas
mov
cli
jae
movntps
stos
push
dec
ja
iret
outsb
lret
icebp
sub
mov
lds
aad
pop
loop
scas
inc
aam
mov
mov
or
adc
pop
jb
sbb
scas
adc
ljmp
or
inc
nop
sbb
aaa
loop
xor
sbb
int3
push
inc
scas
mov
adc
jge
lea
into
sarl
lds
clc
xchg
imul
mov
lret
mov
inc
pop
sub
pop
push
and
pop
inc
sub
xchg
rcrb
mov
jecxz
xchg
inc
cmp
in
and
and
mov
lods
jno
mov
xchg
pop
mov
jecxz
and
sub
mov
mov
addb
inc
mov
cmpsl
rcrl
call
xor
dec
jg
imul
hlt
fnstsw
dec
xorb
push
nop
jg
pop
into
cmp
dec
cmc
cmpsl
mov
mov
imul
stos
insb
adc
sbb
roll
fcoml
xlat
or
ret
inc
jno
lods
push
mov
pop
outsl
pop
lock
fisubl
push
sbb
rorl
mov
addr16
scas
cwtl
jmp
or
jmp
sub
insb
mov
inc
mov
aas
js
orb
add
fstl
ss
pop
xor
in
jae
subb
in
and
cmp
ss
xchg
pop
subb
push
inc
aam
paddsb
fists
dec
and
repnz
mov
mov
sbbb
mov
cwtl
xor
jg
mov
pusha
adc
adc
xor
inc
mov
mov
rcl
mov
push
adc
cld
mov
int
cli
clc
outsb
inc
dec
stos
add
cmp
adc
ret
pop
add
dec
test
int
cs
jmp
mov
in
jbe
sub
cmpsl
cltd
frstor
pusha
dec
xlat
push
lcall
lods
mov
sahf
insb
test
sbb
xlat
iret
or
into
cmp
mov
sbb
jno
call
push
xor
ret
mov
fidivrs
jg
dec
inc
pop
in
or
pop
and
add
xchg
fists
in
dec
xchg
push
dec
pusha
push
jge
or
adc
movsb
add
and
adc
dec
lock
pop
fnstsw
or
jb
in
insl
into
nop
sbb
inc
fmuls
pusha
sub
add
mov
ja
cmc
jno
loop
mov
clc
inc
xchg
push
into
inc
ja
and
add
sahf
insl
xchg
lods
mov
subl
inc
pop
sbb
test
repz
or
mov
adc
mov
fmull
xor
lahf
xrelease
and
mov
test
push
aas
xchg
cvtps2pd
leave
cwtl
sbb
aaa
or
mov
and
adcb
std
movsb
inc
jge
mov
adc
lret
pop
jecxz
push
clc
push
push
lock
pop
xor
test
or
dec
adc
push
notb
mov
das
leave
loopw
lea
arpl
out
aad
xchg
adc
sbb
clc
push
mov
imul
pmaxsw
test
adc
js
add
int3
xchg
mov
rcll
sbb
adc
daa
xor
data16
xchg
mov
mov
or
insb
mov
imul
sbb
ds
leave
fsubrs
ds
pusha
inc
cmp
lods
push
out
sub
mov
in
stc
add
add
sbb
cmp
or
enter
xchg
push
pop
jns
mov
pop
popf
xchg
jle
clc
xchg
out
pop
cmp
stc
cmp
push
aad
pop
sbb
cmp
xchg
cld
bound
lock
hlt
xor
adc
xlat
lds
into
push
shl
repnz
inc
mov
inc
xchg
imul
add
sbb
pop
mov
mov
xlat
and
outsl
add
adc
int
lods
push
lcall
loope
push
out
mov
add
scas
push
jge
out
jecxz
cmpsb
popa
stos
dec
and
fbld
pop
xor
insb
shl
add
arpl
fcoml
pop
xchg
dec
and
movsb
xchg
cltd
inc
add
pushf
cs
jl
aad
icebp
mov
sub
xchg
faddl
stc
popf
or
dec
stos
fsts
dec
xchg
ret
fs
loope
jns
into
dec
andl
sbb
add
iret
add
pop
or
sbb
or
and
push
call
sbb
dec
adc
js
inc
pop
rcll
leave
aad
pop
xchg
push
pop
dec
loope
add
mov
test
pop
mov
loopne
adc
push
test
mov
push
cld
mov
popf
mov
stc
jmp
pop
xlat
insl
lcall
loopne
dec
push
or
sbb
or
outsl
xchg
xor
cmp
sbb
leave
dec
cmp
imul
inc
jecxz
and
push
mov
outsl
rolb
shll
jl
clc
popf
xorl
aam
xorb
into
test
mov
mov
pushf
scas
mov
sbb
sbb
mov
dec
push
cmp
repz
inc
clc
lock
sub
aad
test
sub
repz
mov
pop
xchg
loope
sub
fcmove
in
sub
push
and
icebp
enter
xchg
lret
int
cld
xchg
lock
cs
push
xor
jae
adc
cmpsl
faddl
add
or
jge
push
mov
jle
rclb
push
pop
pop
adc
dec
mov
push
and
cmp
cmp
xlat
jg
movsb
or
xor
and
aas
push
out
xor
das
je
jp
test
or
pop
sbbl
add
into
mov
mov
sarl
rcr
rclb
cmc
cmp
mov
cmp
mov
bound
mov
lret
test
cmp
sbb
push
mov
test
hlt
or
lea
repnz
mov
lret
mov
pop
pop
push
cmp
dec
js
pop
mov
xor
sub
pop
dec
jns
cmp
loope
sahf
cltd
jns
xor
das
out
mov
sub
lods
lea
jae
jbe
mov
jp
in
lock
fcoml
xchg
js
xor
repz
and
xorb
fisttpll
adc
cmc
ja
aad
jp
mov
dec
mov
sar
or
popa
push
push
negb
iret
push
pop
and
lahf
inc
imul
lea
call
sub
sub
lret
aas
inc
xor
sub
jnp
enter
mov
test
out
rcr
bound
add
pop
mov
or
push
adc
ja
in
sub
shl
mov
pop
fisubrs
sub
test
nop
dec
cmp
repz
fstpl
repz
addb
jle
xchg
pop
sti
ret
mov
stos
aam
pop
add
sub
lods
mov
and
hlt
sbb
jo
push
nop
mov
fistpll
adc
cmp
repz
insb
sahf
jo
insl
divb
movsb
lods
stc
stc
or
mov
push
decl
pop
in
fnstsw
ret
or
mov
hlt
stos
pushf
sahf
loope
xor
push
mov
pop
inc
out
mov
in
or
loope
mov
out
adc
ja
loop
loopne
xor
cmc
inc
test
insb
inc
dec
out
int3
xchg
or
mov
imul
icebp
clc
push
xchg
cmp
into
inc
or
data16
pop
pop
and
and
out
scas
push
insb
notl
rclb
pop
gs
sub
les
sahf
mov
lret
mov
and
data16
je
insl
scas
push
adc
mov
fisttpl
inc
push
lret
pop
int3
pop
mov
mov
inc
jecxz
aad
xlat
dec
push
insl
stos
pop
popa
xlat
mov
lods
dec
enter
mov
jo
inc
add
int3
add
push
fs
mov
pop
stos
push
and
adc
rorl
xchg
rol
cmpsl
bound
pop
sub
ljmp
push
cmp
mov
shlb
jge
lods
inc
insl
cmp
sahf
lret
xor
xchg
and
mov
or
negl
cli
and
xchg
loopne
and
mov
cs
or
pop
xor
xor
xor
inc
repz
dec
imul
mov
pop
sub
jp
push
sbb
lcall
movsw
int3
cmp
push
and
or
xchg
out
dec
pop
lahf
add
pop
into
and
cmp
push
sbb
xchg
cs
pop
lcall
lret
out
int
imul
in
jle
jmp
xchg
repnz
pusha
lret
in
and
mov
ret
xchg
pop
cmp
inc
ds
mov
xor
push
sub
xor
test
lock
cwtl
push
adc
push
mov
xchg
push
mov
das
add
cmp
int
push
aam
add
dec
or
adcb
and
push
jecxz
sahf
mov
int
sahf
insb
stos
fildl
repz
ss
cs
push
and
iret
mov
mov
mov
jmp
mov
push
addr16
dec
rcr
add
jmp
arpl
mov
jo
popf
pop
and
xlat
leave
jg
lret
pop
loopne
decl
sub
loopne
cmpsb
push
adc
aas
xchg
outsl
push
out
mov
mov
scas
movsl
dec
ret
rorb
lret
notl
cmpsl
dec
lret
fildll
test
dec
pop
inc
aad
arpl
mov
in
lidtl
subb
pushf
aas
out
stc
jno
pop
and
adc
jnp
lret
jle
pop
adc
and
fdivrl
sbb
gs
nop
xor
pop
lods
cwtl
fdivl
inc
push
leave
mov
lock
jg
jbe
inc
hlt
out
fdivr
mov
mov
jbe
push
loopne
xlat
lahf
rcrb
notb
and
rolb
sbb
sub
pop
sbb
repz
enter
ficoml
sub
or
je
push
ja
xor
leave
add
mov
push
pop
fiadds
xlat
add
jae
inc
loopne
dec
iret
lds
or
push
in
xor
lods
jge
out
cs
stos
test
dec
movsl
and
iret
repz
sbb
pop
inc
pop
cmp
nop
jns,pn
jmp
dec
mov
sbb
int3
inc
mov
dec
pop
mov
and
mov
push
adc
sub
clc
xlat
lds
and
lock
mov
jle
jp
xchg
mov
mov
adc
outsb
mov
test
iret
xchg
jmp
push
sub
and
mov
mov
dec
popa
ss
mov
jl
and
cs
sub
repz
cltd
frstor
jnp
je
dec
or
outsl
ret
and
fidivrl
xor
push
stos
jns
sbb
mov
or
or
in
movsb
push
lret
push
int3
inc
out
mov
adc
pop
scas
cli
sbb
jecxz
dec
fisttpll
mov
xor
fmuls
xchg
lret
sbb
sbb
push
fwait
and
mov
dec
and
inc
nop
pop
ss
scas
push
or
outsl
push
pop
int
popa
mov
jecxz
push
leave
jno
lret
cmpsb
pop
jo
movsb
mov
push
rcrl
sbb
inc
push
and
iret
xor
subb
sbb
daa
sub
pop
xchg
or
in
or
xor
clc
out
rolb
lock
mov
sbb
add
inc
sbb
loope
jecxz
bndldx
sub
mov
or
add
mov
sub
pop
das
inc
insl
and
das
adc
sbb
jmp
jno
ja
cld
jns
or
inc
jmp
jo
movsb
inc
jecxz
into
ret
adc
dec
cmp
sub
inc
inc
pop
sub
fistl
jae
push
and
jno
test
sub
lea
mov
jmp
push
lds
imulb
pop
jae
and
in
nop
push
mov
sbb
aam
inc
mov
fildll
add
movsl
pushf
test
aad
pop
xor
fsubrl
andb
inc
fstl
fdivrl
stc
push
daa
mov
shll
push
adc
adc
sub
inc
adc
loopne
and
popa
fmul
mov
xchg
pop
fcoms
sarl
inc
cli
and
adc
pop
lcall
inc
lret
cli
sub
scas
int
adc
ds
mov
add
mov
repz
pop
sbb
cs
mov
lcall
sbb
fprem
andl
in
std
or
inc
or
xor
sub
xchg
fs
cs
xchg
push
popl
insb
push
out
cmp
lret
mov
lcall
add
inc
int3
sbb
pusha
or
add
or
pop
ja
ds
lock
setae
xlat
sub
jle
sub
mov
push
je
repz
dec
mov
adc
xchg
aaa
xchg
pusha
mov
imul
cmp
mov
add
lcall
inc
inc
cmp
xor
hlt
sub
xchg
jmp
pop
paddq
xor
mov
push
cs
ret
and
cmp
imul
adc
sbb
mov
popa
bound
mov
xchg
and
mov
jg
add
sahf
test
aas
scas
mov
dec
inc
roll
pop
mov
xor
pop
and
faddl
icebp
ds
inc
mov
or
cmp
mov
sub
aad
push
dec
jecxz
ljmp
dec
adc
add
fildll
frstor
and
or
sbb
add
sub
clc
inc
add
xchg
lds
jg
cltd
inc
icebp
fists
inc
lock
icebp
lcall
sbb
lock
jg
pushf
or
jns
xlat
xor
add
and
pop
fmul
add
ds
mov
mov
pop
cmpl
fwait
or
sbb
jl
inc
pushf
adc
cld
hlt
fmull
ret
and
loopne
mov
mov
jae
out
test
and
push
sar
adc
add
pushf
mov
outsl
in
dec
and
sar
sahf
movsb
xor
xor
inc
mov
pop
hlt
xor
jle
jns
push
cmp
add
fildll
push
xor
jg
fdivrl
int
add
push
out
enter
inc
flds
insb
fcoms
sbb
push
sub
dec
and
sbb
out
push
mov
sbb
push
mov
sub
push
sbb
pop
les
scas
jns
scas
cmp
mov
xchg
jp
adc
inc
insb
ja
test
rclb
and
cli
jo
pop
and
in
and
fs
adc
cwtl
mov
inc
loopne
add
pop
and
jle
mov
insb
outsb
add
aas
test
mov
lea
lahf
xchg
lret
jp
mov
outsb
scas
inc
stos
mov
std
push
scas
mov
and
loope
sub
pop
das
inc
jmp
lret
in
xchg
and
addb
sub
mov
and
mov
jl
and
aam
jl
sbb
add
decl
clc
xorl
or
pop
and
lahf
stc
mov
push
rclb
imul
push
or
push
mov
pusha
add
hlt
jno
lcall
mov
sbb
inc
and
rorl
cmpsl
jecxz
cmp
jbe
nop
jle
xor
popa
sbb
and
cmpsl
mov
dec
inc
into
dec
stos
loope
push
or
insl
popf
rcll
jnp
mov
sub
faddp
inc
shrb
xchg
cs
jae
or
pop
stc
or
das
push
imul
xchg
jno
jmp
jns,pt
in
mov
xor
mov
imul
test
ficomps
and
push
imul
test
add
mov
rorb
fsubl
inc
or
add
adc
and
push
mov
into
inc
imul
mov
pop
push
ss
inc
pop
adc
lret
sbb
stos
sub
bound
jmp
push
adc
sbb
hlt
jle
in
adc
mov
cltd
adc
movsb
dec
jmp
cwtl
push
cmpsl
int
imul
push
insb
cmp
pop
stc
lock
inc
or
sub
mulb
testb
inc
pop
xchg
or
inc
push
repz
adc
cmp
cmp
push
push
inc
xchg
cmc
cwtl
ret
mov
popf
fdivs
in
shlb
cs
pop
lahf
std
jl
jecxz
dec
ljmp
lret
iret
inc
push
xchg
lods
mov
insl
push
mov
mov
xchg
aam
mov
sub
in
dec
inc
aam
dec
cmp
and
inc
pop
popa
stos
dec
cmp
jmp
pop
ficomps
stos
lea
fcomps
dec
scas
fdiv
cld
jo
adc
movsl
pop
loopne
loope
les
into
add
stc
insb
mov
sbb
sti
inc
xor
lea
outsl
fsubr
enter
jne
push
imul
cmp
mov
sub
xchg
and
sbb
cs
pop
insb
and
in
fiadds
sub
add
mov
les
sar
xchg
mov
mov
sub
in
mov
test
lcall
loopne
fimull
inc
lods
add
dec
jl
adc
jl
ret
ret
gs
mov
add
dec
ret
jne
movsb
outsb
inc
outsb
xor
add
test
pop
inc
mov
push
mov
mov
adc
mov
out
xor
and
pop
or
insb
jmp
xchg
sbb
jl
sub
test
or
mov
add
sub
inc
or
popf
adc
test
mov
enter
xor
popl
push
dec
loope
lock
push
xchg
sti
stos
aad
dec
jg
into
jmp
enter
sub
adc
mov
movsl
xchg
test
mov
addl
mov
test
jo
test
pop
fcompl
pop
push
add
shll
test
setge
dec
add
push
outsb
dec
cmp
adc
aad
adc
jns
push
rcl
pop
mov
lea
ljmp
xor
sbb
mov
fisttps
mov
sbb
imul
adc
cmp
push
jo
or
mov
push
outsl
stos
inc
adc
inc
iret
push
scas
dec
xor
notb
cmp
mov
inc
cmp
icebp
fnsaves
xchg
or
cli
xorl
int3
mov
cmc
rcrl
in
jne
add
scas
sub
add
xchg
icebp
adc
or
sahf
mov
mov
jp
jne
sub
lahf
push
cltd
mov
dec
fisubrs
inc
push
dec
mov
in
sahf
or
ret
insb
call
popa
daa
into
lcall
clc
push
test
dec
inc
cmp
and
jecxz
lds
adc
add
mov
pop
repz
pop
ljmp
add
mov
scas
ficomps
and
add
insl
push
sbb
je
icebp
daa
xchg
dec
insl
in
test
mov
lcall
shrb
lds
int3
xchg
pop
mov
dec
pop
jb
add
dec
mov
negb
jae
rcrl
cltd
adc
test
movsl
cli
add
jno
stos
jecxz
mov
scas
fstpt
add
pop
dec
cmp
adc
and
addl
cs
adc
jl
inc
in
and
add
jl
and
add
mov
loopne
add
cmpsb
lret
adc
lret
sbb
insl
pop
scas
sub
test
hlt
pop
cld
ljmp
cmp
js
pop
in
or
in
fisubs
jo
pusha
jno
lods
sub
cltd
mov
dec
adc
xchg
sbb
pop
push
push
jmp
xlat
mov
push
sub
inc
loopne
fists
arpl
lds
inc
push
inc
sbb
shlb
lret
sbb
xor
loope
mov
shl
cmp
ss
add
sbb
xor
mov
inc
xlat
and
daa
in
test
xor
cmp
repnz
clc
inc
fmull
or
mov
jb
jnp
mov
xor
mul
orl
jns
sub
push
test
mov
repz
mov
dec
cwtl
cmc
roll
ret
dec
and
inc
xabort
inc
cld
push
ss
fsubr
mov
sub
adc
mov
insb
pushf
inc
jne
sub
pop
ficompl
addr16
mov
add
xor
and
jp
fwait
js
push
rcll
or
aas
les
xlat
inc
mov
ficoms
jp
sbb
enter
add
sbb
pop
hlt
or
mov
or
test
xchg
lods
jecxz
xor
dec
sbb
lahf
lcall
icebp
mov
sub
aaa
into
cld
popa
mov
outsl
xor
lea
push
bound
fsubl
leave
push
jae
cmp
out
sbb
stc
ja
ja
mov
loope
test
lret
xchg
jb
or
sbb
jp
jmp
dec
clc
pop
push
dec
pop
add
sub
fsubrl
mov
cli
cltd
jmp
stc
add
and
orl
mov
add
mov
test
lret
lds
mov
hlt
or
mov
setne
jp
sbb
mov
loope
cmp
mov
rcrl
push
cltd
clc
sahf
add
mov
xlat
out
dec
rolb
loope
out
add
xor
fwait
sahf
das
jmp
ss
inc
rorl
xor
xchg
mov
loope
aas
test
mov
fmull
sbb
inc
push
mov
outsl
add
add
lcall
ss
or
or
das
mov
mov
lcall
outsb
jecxz
loopne
sbb
mov
loope
xchg
jne
or
mov
cmp
pop
sbb
xor
pop
fists
outsb
imul
push
or
dec
inc
aaa
cs
sub
sub
in
sar
push
mov
mov
xchg
ficompl
mov
pushf
cmp
jg
push
outsl
mov
mov
notl
pop
insl
lods
fcoml
jl
js
dec
jo
adc
mov
or
les
test
jne
scas
cmp
fnstsw
xchg
and
sbb
cli
mov
pop
lahf
sahf
jp
jg
call
push
aaa
fwait
insb
sarb
aad
or
loop
xchg
push
bound
fcmovnbe
aad
sub
paddusw
movsb
lods
cltd
loop
adc
pop
wrmsr
into
cmpl
fs
adc
fiaddl
sti
ja
push
jo
sbbb
call
aam
mov
adc
xlat
lcall
pushf
insb
xchg
pushf
mov
shrl
mov
and
mov
jo
ficoms
mov
xor
fdivrs
insl
mov
mov
sub
dec
les
sbbl
imul
ds
mov
stc
aaa
adc
sub
jg
out
mov
dec
sti
add
stc
cld
aam
fstpl
addr16
sbb
or
lret
add
mov
in
mov
jge,pn
push
adc
into
imul
sub
add
adc
lods
mov
inc
mov
out
xchg
pushf
mov
and
add
mov
xor
lahf
add
cltd
xchg
pop
pushf
in
push
pop
adc
cmp
out
and
adc
inc
push
popf
jecxz
repz
push
mov
push
cltd
dec
insb
mov
ror
pop
or
lods
pop
push
jmp
jle
inc
insl
in
xor
cmpl
sahf
int3
adcl
mov
insb
or
cmp
cmc
xor
mov
mov
cmc
push
test
dec
and
lds
mov
imul
outsl
xchg
inc
pop
cltd
outsl
jle
out
testl
jg
loope
mov
mov
fucomip
scas
stos
scas
jbe
mov
inc
dec
xchg
mov
cmp
dec
push
xor
iret
push
cs
imulb
jo
push
andb
cld
or
or
and
mov
hlt
addl
out
decb
shll
push
push
ret
xchg
jmp
mov
lret
adc
jle
lods
cmpsb
mov
add
cmp
lcall
mov
inc
xchg
jno
and
sahf
scas
or
adc
or
into
fdivl
mov
xor
std
mov
into
pop
mov
pop
lock
sbb
arpl
or
js
jne
cmp
add
sub
mov
icebp
adc
je
jb
pop
cmp
cmc
int3
dec
mov
cs
inc
sti
push
std
sbb
xchg
movsb
and
sbb
dec
lret
incb
mov
pushf
and
cmp
hlt
xchg
add
and
sahf
aaa
add
adc
xor
fs
jae
and
lods
lods
sbb
push
shr
rorl
fisubrs
lods
mov
push
subl
stc
fsubrl
cwtl
mov
jmp
int
jb
stc
ss
insl
pushf
mov
xor
sub
lds
sbb
testl
popa
push
sti
jmp
out
fs
inc
adc
mov
or
bt
pop
ss
cmp
vmread
clc
sub
xchg
cmc
xchg
inc
add
imul
ss
adc
inc
push
add
rcr
shlb
insl
in
shl
xchg
fldt
pop
xchg
xor
sbbb
inc
ljmp
add
jb
xor
jae
dec
fmul
outsl
test
inc
jge
jnp
test
pop
pushf
inc
incl
cmp
cmc
mov
sub
int3
aad
cmp
nop
sub
sub
pop
sahf
add
es
jno
sub
scas
dec
pop
pushf
leave
outsb
push
inc
inc
xor
je
xor
dec
add
adc
sbb
sub
and
or
adc
jle
xor
fimull
fidivs
aam
fidivs
adc
movsl
or
pop
sub
lahf
xorl
add
xchg
dec
dec
mov
jmp
cli
sbb
lds
or
das
jl
or
pop
dec
ss
sub
sbb
lea
add
sub
xchg
push
add
push
add
sub
sbbb
xor
aad
fildl
mov
sbb
ret
lods
jno
sbb
insl
or
out
cli
adc
push
test
jns
roll
sub
xor
das
dec
mov
jp
and
test
inc
in
std
pop
xor
arpl
cmp
arpl
or
push
inc
mulb
int
cmp
scas
lea
pop
sub
mov
ss
jns
push
push
cmpsl
mov
in
push
dec
add
fwait
xchg
jns
jb
adc
jg
mov
xchg
adc
or
add
lret
loop
movb
pushf
bnd
jo
jmp
and
lahf
dec
das
cmpsb
pop
fisubs
mov
mov
out
cmc
mov
cmpsb
or
or
ror
adc
add
xchg
jo
in
rcr
adc
inc
xor
push
sub
loope
popf
jne
sbb
mov
and
lcall
xchg
fnstenv
sbb
stc
scas
filds
hlt
jne
inc
xor
call
mov
mov
mov
mov
adc
and
gs
das
repz
and
fldcw
push
xor
nop
dec
jmp
mov
scas
repz
mov
xor
stos
lds
push
inc
out
mov
mov
stos
inc
add
pop
pusha
out
dec
mov
andb
loop
je
or
sbb
dec
int
cli
lods
scas
inc
loopne
fistpl
mov
sub
push
cmova
cmp
in
add
scas
add
xlat
mov
sbb
xor
or
pop
mov
inc
hlt
xchg
fisttpll
std
mov
dec
or
add
pop
shlb
movsb
rorb
pop
test
outsl
imul
divb
pop
adc
add
inc
mov
mov
or
and
or
mov
push
insb
out
ret
push
xor
ja
pop
aad
daa
adcl
ret
loope
mov
insb
xchg
xchg
push
test
mov
or
adc
cmpl
mov
push
out
add
std
mov
fcoms
mov
ret
adc
popa
sub
add
push
xor
push
sub
inc
mov
pop
push
pop
stc
aad
addr16
mov
mov
dec
or
sbb
repz
xor
mov
xor
loope
je
addr16
shrb
xchg
ds
push
in
outsb
mov
mov
mov
sub
mov
imul
mov
mov
sub
xor
jmp
mov
insl
icebp
nop
mov
test
leave
sub
cmpsb
push
out
sub
xor
mov
pcmpeqd
insb
hlt
adc
in
sbb
or
jmp
xor
popa
pop
xchg
in
push
lds
jle
jl
jae
and
xchg
or
push
or
fdivrp
dec
lods
call
bound
sub
out
aad
pop
sub
xor
add
sub
cmp
imul
xlat
popa
dec
inc
mov
cltd
cmp
jno
out
cs
icebp
mov
inc
cmpsb
and
test
and
cmp
call
ret
lret
and
mov
lods
inc
cwtl
stos
push
fdivp
pop
pop
lds
sub
imul
jge
dec
mov
aam
mov
cltd
mov
sbb
scas
adc
imul
inc
dec
test
mov
sub
sub
xlat
cmp
push
cmp
xchg
dec
xchg
push
jmp
loop
scas
jp
les
cmp
int3
test
push
cli
popf
push
mov
push
mov
pop
and
add
sub
outsl
push
js
or
xchg
daa
popf
push
das
mov
cmp
cmp
adc
cmp
dec
addb
loopne
and
mov
pop
in
loope
shrb
mov
push
jmp
push
mov
std
in
fs
pop
imul
add
in
or
and
push
data16
addr16
push
inc
outsl
rcrl
fldcw
jno
mov
cmp
repz
pop
pop
inc
push
sub
xor
xchg
popf
popf
dec
repnz
andb
mov
pop
fdivl
scas
jo
mov
sbb
adc
pop
sbb
push
cwtl
data16
outsl
and
psrlq
sbb
mov
call
aad
cmc
xchg
iret
cs
pop
in
mov
pop
sbb
jo
sti
mov
mov
push
sub
xchg
cltd
cs
stc
mov
dec
jae
pushf
test
nop
fdivrl
ja
and
inc
in
je
xor
sar
jle
jmp
inc
pop
ret
popl
pop
or
mov
jno
stc
sahf
ret
je
jnp
or
dec
out
xor
push
jg
in
inc
mov
pop
cmp
jo
mov
test
add
data16
clc
lods
mov
mov
icebp
mov
cmp
fsubl
pop
scas
xor
outsb
pusha
loopne
repz
add
and
icebp
xor
push
fcoml
in
sub
je
and
pop
pop
rcl
gs
add
inc
clc
in
adc
mov
into
mov
es
mov
mov
aad
dec
data16
jae
inc
ljmp
mov
jg
movsb
insl
bound
cmp
bound
ja
jnp
xor
xchg
movsl
sbb
flds
jl
mov
and
mov
mov
adc
xorl
sub
and
add
add
int3
xchg
sbb
add
pop
outsl
sbb
jp
or
xor
pop
dec
sahf
push
push
add
inc
xor
out
xor
and
push
jns
mov
xchg
fmull
js
popf
jp
pop
mov
cwtl
mov
ds
and
or
rorb
dec
mov
inc
push
rcrl
dec
add
add
jl
add
cmc
je
or
and
cmp
std
dec
stc
jae
sbb
roll
scas
icebp
je
jmp
mov
into
daa
inc
ret
and
xchg
xor
popw
mov
cmc
xchg
push
mov
inc
out
icebp
ljmp
inc
ljmp
mov
fidivs
call
mov
ret
lds
sahf
adcb
adc
inc
adc
lcall
and
mov
roll
pushf
mov
push
out
test
or
rolb
lock
pop
adc
dec
les
mov
addr16
lcall
pop
dec
jns
mov
les
inc
lahf
leave
sbb
repnz
shrl
aad
stos
sbb
icebp
pop
sbb
mov
or
bound
sub
jmp
mov
outsl
pusha
int
jnp
cmp
sbb
das
cmc
es
pop
jp
mov
fistpl
jl
mov
repnz
sub
cmp
insl
or
jnp
xchg
mov
fisubrs
xor
je
jl
or
xlat
cli
ja
dec
jae
enter
and
mov
push
inc
sbb
cmp
add
cmp
inc
scas
dec
add
scas
pop
push
sbb
and
and
lea
lds
mov
stos
and
mov
cmpsb
int3
scas
sub
pop
xor
fdivl
mov
arpl
cmp
aam
pop
rcr
pop
loope
jno
into
mov
addr16
insl
addr16
dec
cmp
or
and
lcall
push
mov
xchg
ja
pop
cmpsl
addr16
sub
cmpsl
mov
dec
ffree
addl
add
sbbb
cmp
and
jno
xchg
mov
mov
push
ret
stos
lock
aad
rorl
jo
inc
aam
in
insb
push
and
jns
lahf
outsb
aaa
push
inc
xchg
push
fsubrl
enter
mov
inc
loope
mov
repz
xor
jno
cmpl
xlat
pop
cmp
push
cmc
aad
xchg
test
popf
cs
xlat
pop
jmp
inc
mov
mov
movsb
add
cltd
xor
das
mov
out
outsb
pop
pushf
mov
push
ss
and
loopne
sub
iret
jo
pop
int3
ror
jecxz
es
jmp
add
jb
stos
sbb
push
inc
mov
pop
hlt
push
mov
jae
icebp
mov
jo
subl
lods
push
frstor
xlat
cwtl
xor
jb
push
sub
inc
fcoml
popa
push
out
and
dec
mov
imul
or
jbe
dec
push
sbb
fisubrs
in
fimuls
xor
mov
cmc
push
psllq
sbb
inc
jnp
int
cwtl
stc
arpl
push
or
sti
sbb
mov
icebp
nop
add
fldlg2
lahf
dec
int3
dec
adc
out
push
xor
mov
dec
or
sub
push
subl
adc
mov
lcall
insb
enter
mov
cltd
fmull
add
push
jle
add
nop
mov
mov
pop
mov
lahf
xchg
mov
int
pop
mov
loope
sar
aaa
je
push
int
cmp
cmp
xchg
shl
jge
and
aas
in
out
jns
and
xor
sbb
jmp
xchg
push
add
or
mov
mov
dec
jbe
cmc
jb
je
addl
repz
push
jg
in
js
sbb
and
test
mov
push
push
jnp
insb
roll
ja
fwait
add
push
xor
xchg
insb
pop
pop
xorps
loop
lcall
jle
cmp
lret
add
imul
add
mov
ret
hlt
lcall
push
sahf
mov
rcl
dec
add
enter
dec
and
int3
movsb
jb
xchg
jle
roll
adc
add
test
loop
mov
mov
jmp
jbe
dec
jne
xchg
stc
sbb
lds
mov
lea
sarb
cs
xchg
pushf
push
jg
mov
add
push
pop
lret
jno
jb
popa
lods
leave
test
pop
es
adc
das
adc
jle
mov
notl
in
push
and
adc
jo
push
and
jp
scas
fwait
xchg
out
mov
stc
sbb
loop
push
mov
cmp
push
mov
jle
cmp
das
js
cmp
divb
int3
push
lahf
cli
movsl
and
mov
xchg
mov
movsl
mov
int
or
lods
cmp
adc
dec
mov
leave
cmp
sbb
add
and
rclb
shrl
repnz
enter
inc
popa
or
jne
add
lock
outsb
add
jne
add
scas
mov
or
sbb
xor
out
std
mov
push
scas
fsts
pop
adc
popl
mov
sarb
xchg
test
inc
fwait
lock
cld
xchg
cwtl
lds
ds
fcoml
jle
xor
pop
std
cmp
xorl
ror
loop
insb
xchg
mov
inc
insb
sub
leave
mov
icebp
xor
sti
fwait
jp
sub
fmul
sub
lods
lret
and
sbb
mov
test
or
sub
and
das
das
fistl
push
ss
adc
aad
adc
and
in
ret
sbb
push
dec
sub
pop
sbb
cmc
roll
nop
fdivrl
sub
sti
dec
cmp
mov
mov
xchg
push
andb
jnp
lods
je
mov
mov
repnz
xor
xchg
outsl
add
cs
adc
or
push
les
andl
negl
dec
insl
out
push
shrb
sbb
lahf
xchg
or
or
outsb
jp
mov
sbb
and
mov
mov
add
mov
mov
andb
hlt
inc
cmp
mov
mov
dec
cmp
loopne
dec
inc
cld
js
push
and
lods
subl
adc
dec
and
and
and
cli
sub
fwait
and
or
fdivr
jne
daa
sub
sbb
iret
adc
inc
std
push
insl
sbb
out
xor
mov
cmpsb
xor
stc
ljmp
xchg
imul
inc
push
pop
lret
or
push
and
push
push
and
mov
aad
stos
mov
and
jne
sbb
adc
mov
push
iret
sahf
lea
fcomip
sub
fcoms
scas
and
mov
xor
roll
lret
dec
into
pop
cs
pushf
pop
cs
loopne
cmc
test
sahf
sbb
or
mov
add
xor
mov
fs
jns
aam
sub
mov
dec
fnstsw
adc
pop
xor
into
push
and
pop
mov
jne
jne
mov
adc
and
dec
mov
mov
cmp
inc
cmp
dec
dec
xchg
mov
mov
jbe
cmp
fwait
adcb
mov
insb
push
movsl
inc
and
mull
mov
push
lcall
pushf
dec
mov
insb
xor
out
lods
cwtl
inc
lds
sub
cmp
sbb
lret
jno
adc
shll
pushf
mov
aam
add
mov
sub
scas
jb
jg
loop
add
push
cmpsb
mov
loopne
xlat
test
pop
stos
jae
fistps
stc
jae
icebp
push
and
mov
push
cmpsl
jns
pop
mov
aas
lret
add
test
mov
sbb
repz
xchg
cmp
push
add
or
sti
lods
lcall
subb
aad
or
inc
pushf
mov
mov
push
mov
stc
cli
sbb
xchg
scas
and
lcall
jge
jns
shl
mov
mov
add
or
je
subl
jne
sbb
shll
ret
test
stc
call
call
mov
mov
pop
repz
lcall
inc
bt
jecxz
sti
es
jne
mov
cmp
int
sbb
lods
push
cmp
cmp
cmc
sbb
shl
dec
adc
cli
pop
push
decl
mov
fiadds
das
adc
out
jne
test
add
mov
fnstenv
pusha
jo
in
add
testl
mov
jo
and
ljmp
aam
js
push
pop
sub
scas
mov
arpl
dec
test
inc
jmp
pop
push
inc
xor
cmp
and
das
xchg
mov
and
mov
ret
fmuls
sbb
mov
inc
mov
pushf
loope
or
and
rorl
icebp
ljmp
call
or
jnp
cmc
inc
and
ljmp
cli
dec
sub
imul
add
sbb
fs
jecxz
ss
in
sbb
insl
vmwrite
mov
and
pushf
and
xchg
push
xchg
gs
push
adc
inc
inc
out
xlat
inc
adc
cltd
insb
insb
and
loope
les
dec
fnstenv
mov
add
cmp
pop
outsl
cmp
fdivr
leave
and
int3
push
inc
xchg
shlb
out
dec
inc
pop
dec
dec
lret
sub
cmp
mov
inc
inc
sbb
std
aam
int
adc
sbb
test
jp
mov
ret
repz
decl
push
pop
out
mov
inc
pop
mov
repz
add
dec
mov
nop
dec
fwait
mov
push
insl
ja
je
addl
les
repnz
jno
jbe
or
and
adc
inc
pop
movsl
jl
mov
movsl
or
andb
stos
and
pop
imul
stc
pop
lret
xor
and
dec
into
sbb
daa
xchg
xor
inc
push
xchg
push
pop
jecxz
ss
jbe
and
xchg
cmp
cmp
and
push
adc
sub
add
mov
jmp
cmp
int3
and
dec
inc
fistpl
les
xchg
pop
test
nop
fstl
mov
or
in
out
jl
adc
jne
hlt
insb
pushf
xchg
in
jo
cli
test
inc
cmp
sub
push
pusha
push
inc
nop
lahf
fistpll
or
and
dec
mov
arpl
xor
les
fsubl
mov
add
mov
xchg
sbb
mov
jp
jg
in
dec
mov
fldt
mov
jecxz
stos
pop
and
jl
jmp
jp
inc
in
xchg
jmp
mov
sub
stos
push
fiadds
sbb
fldcw
jne
rorl
push
lahf
in
test
movsb
in
xchg
pushf
stc
or
mov
sbb
repnz
gs
ss
push
sbb
movsl
ret
add
xchg
fbstp
add
add
int3
cmp
mov
loop
out
cmp
sbb
test
je
insl
stos
das
push
mov
xor
and
or
pop
repz
adc
mov
pop
inc
daa
inc
stos
sub
inc
sub
in
cli
adc
icebp
sbb
adc
repz
roll
mov
sbb
out
pop
iret
xchg
cmp
lret
mov
stos
or
loopne
repnz
xor
mov
hlt
mov
lcall
mov
mov
mov
jecxz
adcb
inc
fimuls
scas
pop
dec
pop
scas
adc
dec
mov
sbb
sub
cmp
inc
sub
stc
and
pop
stos
and
jae
pop
clc
mov
jno
dec
or
fcomi
sbb
ret
lods
scas
adc
shl
sbb
loop
dec
test
roll
mov
scas
xor
cmp
in
cmp
sub
and
jecxz
pop
fs
repz
or
dec
andl
xlat
add
adc
out
jbe
in
and
jge
push
lea
mov
mov
push
sbb
test
sahf
adc
and
push
and
inc
dec
push
mov
cld
xor
adc
pop
sbb
add
jb
dec
xchg
jle
inc
loopne
repnz
push
out
ret
adc
out
and
pop
test
sbb
push
cltd
inc
lcall
sbb
xchg
push
mov
test
nop
mov
shll
dec
subl
hlt
dec
movntq
mov
cwtl
or
and
shrl
or
xor
or
inc
aaa
movsl
mov
mov
in
and
aas
dec
mov
in
add
leave
in
mov
ds
and
scas
or
sbb
leavew
inc
sub
aad
mov
out
cmpb
mov
sahf
xchg
jg
or
jnp
mov
mov
add
or
dec
aam
sahf
fcmovnu
push
movsb
xorl
push
push
pushf
mov
mov
out
adc
sbb
pop
add
sbb
pop
aad
scas
test
jae
inc
add
fdivrl
sub
inc
or
adc
mov
cs
push
or
lcall
push
out
and
xor
sbb
push
xor
insb
adc
and
inc
pop
jmp
lret
inc
jl
xor
outsb
sbb
incb
jo
xor
ret
add
mov
inc
dec
cmp
loopne
mov
addr16
add
mov
mov
lods
das
in
and
insl
nop
add
xor
jmp
xchg
in
psllw
sti
add
mov
cld
enter
push
adc
xchg
mov
ljmp
dec
mov
dec
cltd
mov
scas
jge
data16
jmp
jle
dec
add
and
inc
xor
jnp
or
xchg
cld
stc
test
add
fwait
or
cli
jp
inc
es
stos
test
fcomip
leave
add
mov
adc
mov
fisubrl
xor
divl
mov
sub
lods
inc
dec
adc
or
adc
push
enter
mov
pop
xchg
xchg
sub
fstps
inc
adc
leave
aam
and
sub
pop
adc
psubw
push
sub
imul
test
xchg
jecxz
xor
sub
mov
xchg
movb
fcom
fstpt
out
inc
cld
pop
jge
fmuls
mov
cmp
mov
in
stc
xchg
xor
and
iret
outsl
or
mov
in
dec
sbb
add
pushf
mov
mov
clc
fdivl
push
xchg
inc
sbb
insb
lods
in
sbb
insl
ret
imul
jp
inc
push
and
xchg
pushf
push
add
sub
ds
mov
stc
stos
xor
or
add
and
add
fwait
icebp
pop
and
stos
add
jns
mov
out
mov
test
inc
push
test
pop
add
fwait
popa
or
adc
test
dec
js
push
in
or
or
mov
les
mov
jbe
scas
divl
aas
cld
jp
or
test
jne
stos
cmp
xor
pop
jae
pop
mov
popa
imul
add
sti
cwtl
adc
pop
pop
fs
repnz
into
movsb
subl
cs
push
push
stc
ret
notb
inc
ja
sbb
cmpsw
adc
in
or
lcall
mov
into
jl
pop
inc
clc
sbb
cmp
stc
pop
enter
call
daa
jmp
mov
insb
imul
and
mov
mov
mov
push
sub
mov
aas
and
jnp
xor
xor
or
outsl
icebp
dec
jmp
cmp
ret
pop
push
dec
mov
add
adc
out
mov
push
fisttpll
in
mov
xchg
sbb
das
idivl
jbe
push
inc
sbb
or
push
inc
push
imul
pop
push
sbb
stc
or
add
jae
add
decl
dec
push
stc
xchg
mov
push
cld
int
sti
aas
sbb
xlat
cwtl
outsb
pop
negb
add
jg
xchg
lahf
lret
jns
iret
jnp
mov
mov
xor
push
dec
push
jg
cmp
mov
out
xor
scas
cmp
stos
mov
cs
xchg
lea
jmp
leave
mov
add
adc
and
and
or
dec
pop
pop
in
push
sbb
cmp
inc
aas
leave
cmp
and
adc
add
mov
sarl
mov
in
rorb
sub
push
adc
cmp
cmpsb
test
inc
mov
in
add
mov
xor
jecxz
xor
jmp
test
pop
movsl
dec
sbb
sti
inc
xor
cmp
test
out
test
and
les
repnz
shl
lcall
fdivp
movb
push
arpl
mov
add
enter
mov
sbb
and
and
adc
xchg
and
test
popf
aaa
xor
cmp
dec
push
or
inc
xchg
cwtl
xor
pop
inc
pusha
stc
cmpsb
mov
cmpsb
mov
pop
rorb
mov
jae
movsl
mov
adc
sub
fstl
lret
sub
cmp
in
mov
adc
add
xchg
dec
add
adc
pop
pop
out
pusha
outsl
xchg
mov
sub
push
daa
and
sbb
adc
nop
movsb
pop
jg
adc
xlat
fbstp
cmp
mov
xor
or
mov
xchg
dec
or
xchg
or
mov
xchg
nop
and
dec
mov
scas
out
scas
dec
jp
push
sbb
dec
adc
rorl
faddl
mov
xchg
jl
inc
lret
inc
enter
sbbl
lret
jge
fldcw
or
das
adc
or
insb
dec
dec
sahf
scas
push
jecxz
dec
pop
add
inc
mov
loope
in
fwait
push
adc
and
cwtl
daa
sbb
aad
push
lahf
sub
mov
and
xchg
and
into
fwait
xor
mov
lret
or
lret
xor
xor
popa
fisttpl
movsl
insb
gs
push
push
jmp
repz
adc
pop
test
pop
add
xor
sbb
cs
xor
or
in
or
insb
testl
sahf
leave
cmpsb
sbb
push
loop
cli
in
mov
xor
std
cmpsl
imul
stos
jmp
jae
and
pusha
jb
and
xchg
and
mov
mov
adc
jp
shll
sbb
jg
mov
cld
push
cmp
cmp
and
push
push
iret
fiaddl
pop
sub
dec
dec
mov
inc
aam
jmp
mov
lahf
into
cmpsb
and
movsb
enter
and
es
movlps
and
dec
cs
repnz
insl
push
imul
cmp
sbbl
jns
repz
mov
sub
jecxz
inc
into
ret
cld
mulb
jo
dec
dec
mov
loope
mov
loop
push
xor
push
pop
icebp
loopne
sub
and
xor
mov
das
mov
add
dec
inc
out
push
cwtl
or
ja
dec
pop
sbb
xchg
add
inc
in
in
add
mov
adc
sbb
mov
inc
mov
and
sbb
adc
lods
sahf
fbstp
stc
jne
or
addr16
lods
adc
dec
fmul
into
pop
cmp
add
mov
jp
mov
mov
rcr
and
iret
mov
cmp
loope
roll
mov
xor
adc
sbb
aas
fdivrl
push
mov
daa
gs
cmp
repz
fs
lret
movsl
fdivp
or
insb
mov
inc
outsl
stos
popf
push
enter
or
inc
cmp
cmp
pop
xlat
mov
and
in
test
adc
sbb
clc
jnp
adc
jne
lock
popf
cmp
sarl
ja
dec
js
cmp
test
pop
es
pusha
jns
sub
in
clc
pusha
jmp
adc
stos
addr16
lods
rcll
lea
jbe
in
cld
pop
mov
push
jle
jno
in
lahf
xchg
rep
mov
push
cltd
mov
cwtl
repz
xor
push
add
push
out
or
cmpsl
pushf
mov
pop
lret
sub
and
lods
adc
or
or
and
lds
xchg
mov
pushf
icebp
out
cmpsb
or
sbb
cltd
sub
andb
xor
dec
cmp
and
sbb
test
ljmp
dec
inc
roll
stos
aad
xor
or
sub
and
sub
xchg
pop
mov
sub
mov
jno
jl
in
and
nop
int3
inc
orl
push
inc
mov
mov
iret
lds
pop
and
jmp
mov
pop
pop
mov
inc
outsb
xorl
xor
addr16
or
jo
cmp
cmp
mov
xchg
mov
movsl
sub
outsl
jg
scas
mov
mov
fstp
adc
mov
mov
adc
inc
les
loope
jnp
xchg
cmp
int3
cmp
jg
popa
jmp
push
cmp
cmp
dec
fiaddl
inc
jb
push
add
push
test
clc
xor
inc
or
shll
insb
and
mov
outsb
decl
stos
mov
rcrb
sub
push
loope
test
pop
pop
pop
iret
sub
mov
inc
push
imul
jg
shlb
lahf
jns
or
shll
ja
mov
icebp
push
xor
mov
daa
sbb
test
pop
fcoml
push
and
mov
jne
xor
in
cmp
out
rorb
push
pop
data16
xor
sbb
js
dec
cwtl
and
sbb
outsb
je
and
cld
push
add
int
jmp
jns
cmp
shll
in
add
adc
add
sub
inc
xchg
mov
pop
inc
or
jno
jo
adc
stos
adc
scas
or
xor
insl
out
mov
and
push
or
dec
pop
push
xor
inc
frstor
adc
xchg
insb
push
jp
mov
inc
ss
aad
inc
sbb
jge
dec
cmpsl
in
aad
xchg
iret
and
or
push
mov
cmp
fmuls
dec
mov
push
enter
or
jns,pn
cmp
insb
add
or
inc
test
testb
xchg
add
loopne
into
leave
aas
sub
enter
and
adc
or
stc
sbb
sub
into
or
xor
call
mov
es
je
popa
push
or
subb
lods
xchg
in
add
ljmp
sbb
and
ret
add
inc
test
lock
sub
cmp
or
lds
das
dec
lcall
dec
cmp
inc
inc
pop
mov
pop
mov
pop
jecxz
in
in
daa
mov
icebp
push
xor
sahf
xor
in
jo
push
push
add
cmc
adc
adc
lahf
mov
popa
lock
jmp
jae
pop
mov
push
ja
insb
dec
orb
popa
rorb
insb
xor
inc
lods
insl
xor
jne
dec
xor
les
sub
mov
es
sbb
imul
pop
repnz
adc
jp
cmp
rclb
sub
in
ljmp
fisttpll
roll
pop
addb
jns
movsl
aad
faddl
sub
mov
enter
aas
mov
sbb
mov
notl
fwait
cmp
aam
sub
xchg
mov
dec
movsl
mov
test
cmc
cld
sub
out
rdpmc
mov
mov
daa
xchg
sub
mov
jbe
js
lcall
xlat
jmp
sub
test
cli
icebp
in
jp
add
adc
pop
mov
mov
nop
sbb
pop
insl
xor
xchg
fnsaves
popf
push
mov
flds
cld
arpl
mov
mov
dec
push
cmpl
xchg
xchg
dec
inc
in
cld
adc
std
and
ret
ja
mov
adc
mov
sahf
push
dec
lret
cmp
dec
cmc
pop
mov
adc
popa
test
aad
xor
insb
xchg
and
inc
cmp
scas
stos
into
cmpsl
daa
xor
dec
xchg
pushf
or
ret
cmp
and
cmp
addl
je
add
div
dec
pop
nop
test
lods
insb
jmp
inc
lcall
mov
in
push
cld
mov
sub
sbb
hlt
arpl
pop
xor
shll
cmc
cmpsb
leave
addr16
and
and
sub
jns
cli
jne
fcompl
sbb
mov
jno
jg
enter
cwtl
repz
ficoml
stos
inc
sbb
and
mov
push
mov
mov
test
fs
stos
jle
add
test
mov
ficoms
cld
add
inc
jl
in
ret
andb
sarb
push
test
pop
dec
in
push
pop
inc
sti
movsl
mull
add
inc
ljmp
iret
cmp
js
arpl
mov
push
aad
stc
lcall
lret
inc
out
xor
pop
xor
int
rcl
mov
jecxz
test
sahf
repz
je
mov
adc
mov
cmp
mov
jbe
xlat
dec
inc
shrl
test
jo
sub
adc
sbb
jl
in
xchg
pop
pop
cmpsb
jecxz
pusha
push
xlat
imul
mov
inc
mov
xchg
aaa
push
rorl
ret
sub
cltd
jnp
xchg
sbb
inc
cmp
sbb
leave
cmp
aas
pop
addb
cli
sbb
pop
push
dec
pop
insl
fdivrl
iret
and
rorl
sbb
jnp
pushf
pop
clc
cmp
int
inc
and
adc
push
push
and
mov
lcall
sub
sub
sbb
ljmp
ret
push
ficoms
push
dec
jnp
insb
addb
ret
pop
mov
xlat
lock
xchg
sbbl
jp
mov
dec
call
rorb
inc
cmp
lock
sbb
aad
or
subl
test
fdivrl
sbb
hlt
movl
dec
into
cltd
push
or
dec
cmc
add
dec
imul
pop
cwtl
les
mov
sbb
push
jne
xlat
mov
sti
pop
movsl
jae
or
jns
xchg
pop
and
aas
mov
popa
jge
adc
and
dec
xchg
jl
cmp
imul
mov
inc
sahf
mov
in
jl
pushf
mov
outsb
sub
mov
test
imul
insb
ror
outsl
xor
jnp
sub
ret
sahf
jecxz
out
ja
adc
movsl
je
loope
aam
insl
ss
arpl
pop
ud2
subl
movb
ret
pop
clc
inc
cwtl
insl
int3
mov
jecxz
in
and
jl
push
loop
inc
scas
cmpsl
fs
push
js
popf
inc
mov
adc
mov
enter
jne
aaa
stc
sub
jp
jmp
pop
jno
stc
dec
outsb
inc
xor
mov
add
mov
in
mov
inc
mov
lahf
sub
sbb
daa
pushf
pop
or
sub
mov
dec
mov
jae
inc
mov
push
add
add
mov
dec
aad
insb
sbb
cmc
pop
mov
test
xor
and
inc
ljmp
outsl
jnp
xor
int3
mov
sbb
or
rorb
stc
jl
pop
or
pop
aas
cs
push
mulb
fisttpl
popf
sbb
xchg
push
push
mov
push
addr16
adc
pop
inc
std
mov
adc
adc
mov
adc
idiv
fnsave
pop
loopne
jbe
movsl
adc
pop
cmpsl
int3
in
clc
and
test
fnstcw
pop
lcall
xor
add
test
and
repz
jmp
lcall
adc
inc
movsl
mov
mov
fsubrs
lock
fadds
mov
shll
dec
insb
scas
imul
ds
sbb
fidivl
jnp
mov
aaa
sbb
pop
cli
fdivs
fstl
lods
scas
mov
aam
ret
lret
rcll
adc
sbb
test
add
loop
add
inc
out
in
xchg
subb
pop
add
popf
jnp
loop
adc
cs
loopne
or
xchg
lods
cmp
sar
hlt
and
push
scas
and
sahf
sub
or
xlat
pushf
andl
test
or
scas
aad
sbb
adc
dec
mov
xchg
pop
imul
cwtl
les
outsl
sbb
cmp
mov
dec
cmc
jge
xchg
adc
xor
jns
push
sbb
loope
jne
fucomip
sti
aad
mov
dec
push
mov
mov
sbb
pop
add
pop
dec
call
leave
pop
mov
in
int
sbb
out
push
inc
int
stos
mov
mov
outsb
pop
insb
jmp
push
xor
jecxz
add
mov
xlat
or
jg
sub
jge
jp
xchg
mov
cmp
pop
push
ja
pop
icebp
aas
lret
lds
cmp
sub
xchg
and
cmp
shll
fcoml
sbb
pop
aad
push
ds
pop
mov
xlat
hlt
push
movsb
mov
ret
and
gs
pusha
sbb
push
and
loopne
mov
inc
lock
std
sarb
jne
loop
mov
dec
movsl
mov
fidivs
mov
dec
jne
addb
or
out
sbb
fwait
and
arpl
jmp
or
inc
push
jg
mov
imul
dec
cmpsb
push
iret
scas
rorl
jns
sbb
int
inc
scas
repnz
inc
js
fists
cwtl
adc
das
sub
push
mov
push
out
rcr
lcall
sbb
cmp
add
pop
scas
and
lds
insl
jnp
jg
int
mov
test
cmp
daa
fnsetpm(287
adc
sahf
cmc
or
js
cmp
ds
test
push
out
ret
bound
xor
xchg
and
mov
jno
insb
cmc
push
jns
fs
dec
mov
push
adc
shlb
lea
cmp
push
add
cmp
adc
mov
mov
inc
push
dec
bswap
and
out
xor
cs
xorl
bound
pop
sbb
sub
jp
frndint
fadd
stc
mov
in
add
jb
lahf
repz
jne
mov
jmp
mov
mov
cmp
lock
nop
mov
popa
popf
xchg
xchg
std
pushf
movsb
jbe
enter
scas
scas
adcl
pop
nop
xor
cld
insb
pushf
incb
mov
mov
xor
pop
sub
and
mov
push
mov
sub
push
adc
inc
jg
pushf
dec
or
stos
inc
ja
jmp
xchg
sarl
mov
nop
cmc
jmp
in
mov
fwait
xchg
pop
pop
mov
cmpsl
imul
test
out
stc
and
sbb
push
sbb
mov
xor
mov
test
adc
push
and
loope
xlat
jge
adc
mov
movsl
inc
insb
xchg
je
or
jae
xchg
addr16
xlat
popa
jae
adc
and
in
add
mov
and
cmp
dec
adc
cmpsb
jno
and
cmp
fdiv
daa
lcall
test
mov
mov
je
mov
pop
adc
outsb
mov
jp
jge
cli
and
dec
lret
and
fdivrp
cmp
cmp
aas
jo
push
lods
lds
or
mov
rclb
loope
dec
testl
shl
insl
jae
rclb
pop
outsl
fsubrl
xchg
loope
xor
add
push
xor
cmp
inc
shlb
out
outsl
and
bound
repnz
sub
sbbb
cmpsl
and
leave
push
dec
int3
aam
push
sub
cld
popf
jl
jb
sub
out
hlt
xor
es
jb
int3
adc
inc
adc
shl
mov
cld
adc
stos
stos
cmp
mov
data16
inc
mov
std
bound
mov
and
repz
jno
lcall
lret
pop
outsl
pop
xchg
mov
cmpsb
jnp
add
icebp
or
or
xchg
or
adc
loopne
lahf
fisubrl
lcall
sbb
je
add
lcall
cmp
lds
fs
jge
and
cmp
test
lret
cltd
push
call
ror
hlt
or
mov
add
push
inc
mov
int
in
fisubs
repz
lahf
pslld
nop
xchg
jecxz
mov
sub
insl
iret
adc
pop
push
adc
jns
clc
jno
mov
cmp
cmpsl
movsl
dec
inc
aad
imul
fwait
test
dec
inc
jge
insl
shl
int
jmp
jns
enter
sbb
lock
rclb
lret
imul
push
jae
movsl
ret
popa
les
sarb
pop
sbb
xchg
xchg
in
and
push
add
dec
push
xlat
dec
mov
mov
loopne
icebp
outsb
int3
jns
or
jmp
ja
xlat
in
out
ret
sub
int
shrb
or
rcll
rep
add
arpl
aas
pop
and
mov
outsb
js
fs
call
push
sub
int
scas
mov
or
bnd
clc
ljmp
into
stc
fsts
into
clc
pop
repnz
outsb
mov
cmpsb
dec
js
repz
push
mov
inc
aaa
sahf
repz
test
insl
in
pop
fmuls
mov
and
and
or
test
jge
mov
xor
cmp
fsubrl
in
sbb
jae
and
jno,pn
mov
sbb
push
and
jb
xor
sbb
daa
mov
jecxz
mov
arpl
jnp
aam
jmp
mov
shrl
pop
sbb
sub
pushf
push
outsl
dec
popa
or
arpl
popa
fisubrl
imul
jmp
leave
push
stos
mov
packssdw
add
lahf
add
cld
pop
xor
into
dec
dec
xlat
lret
movsb
inc
adc
sbb
push
and
jle
aas
js
xchg
imul
scas
std
and
lods
cltd
sahf
mov
xchg
hlt
lods
ret
and
adc
rcl
push
xor
inc
testl
inc
mov
mov
or
outsb
push
sbb
dec
cltd
sahf
ds
cwtl
fwait
lods
xchg
popf
icebp
mov
imul
fstpt
lret
gs
inc
and
mov
popf
sbb
push
fcompl
xchg
insb
mov
jb
clc
ja
inc
rcll
or
mov
pop
fucomp
xor
das
test
sbb
mov
in
inc
into
xchg
inc
je
insb
jno
loopne
popl
adc
mov
shll
sbb
and
add
das
lret
insb
or
xor
jae
xchg
adc
addl
pop
andl
mov
mov
push
scas
orl
fnstenv
cmp
jo
mov
dec
jecxz
pop
stc
in
lods
rorb
adc
sbb
test
inc
xchg
nop
loope
cmpsb
add
jg
xor
insb
lret
clc
repz
sub
cwtl
cmp
imul
inc
mov
pop
inc
lock
nop
add
rcll
cmp
test
jne
pop
aas
push
roll
cmc
push
pop
stc
ja
stos
cmpsl
push
hlt
fstpt
and
mov
outsb
mov
jae
lods
outsl
je
dec
pop
pushf
psrlw
add
mov
inc
dec
add
push
jle
mov
jae
ds
jge
and
cltd
sub
mov
stos
pop
add
xor
mov
push
push
pop
mov
popl
push
inc
in
aam
push
and
cmpsl
add
or
push
push
mov
push
cld
cmc
lds
js
xor
sarb
and
addr16
roll
inc
cmp
hlt
cmpsb
mov
aaa
and
inc
fisubl
sbb
pushf
and
adc
in
lret
add
loopne
add
scas
cmc
fmul
subb
jp
lret
movsl
outsl
ret
jne
push
adc
adc
pop
push
imul
aam
outsb
cli
sub
xchg
pop
mov
or
pop
and
jo
shr
cmp
sbb
or
stos
in
jne
inc
add
xlat
cmpsb
cltd
jle
inc
or
inc
sub
sub
cmpsl
mov
cmp
leave
ja
xchg
outsl
mov
lahf
mov
aam
leave
push
push
lahf
test
pop
sbb
sub
xor
mov
ficomps
mov
fstl
push
pop
or
arpl
cwtl
cmp
stos
or
jne
int
inc
in
scas
cwtl
pop
hlt
jge
movsb
xor
mov
mov
dec
mov
adc
adc
scas
out
sub
aaa
pushf
ret
push
adc
push
push
mov
mov
inc
ror
ljmp
aad
cmpsb
rcll
addr16
in
es
sbb
jae
push
cmp
test
sub
faddl
mov
ja
add
and
push
insl
jge
scas
and
push
push
mov
in
and
lods
push
cmpsl
sahf
push
mov
adc
in
arpl
cmpsl
and
daa
aad
out
sbb
mov
cs
cmp
dec
jle
daa
sub
pop
and
ds
push
push
jns
flds
push
pushf
enter
orl
fnstcw
push
xor
nop
jp
mov
sub
mov
je
loope
push
sahf
add
sub
and
in
rcl
or
insb
cmp
ds
sti
arpl
popa
cwtl
or
inc
mov
jns
lods
js
clc
pop
cmp
lock
add
fwait
mov
ljmp
mov
lods
mov
fmul
ja
in
sbb
sar
mov
and
or
and
insl
cs
add
leave
mov
les
test
jns
sub
out
hlt
clc
scas
push
jp
adcl
dec
and
push
push
aad
push
rorl
mov
push
cli
mov
cmp
dec
sbb
dec
adc
or
add
mov
inc
jecxz
nop
dec
sti
in
jg
cs
mov
je
push
push
push
and
stos
das
dec
scas
mov
pop
cmpl
mov
sbb
lcall
sbb
ficomps
not
xchg
mov
cmpl
mov
enter
sbb
lea
out
mov
scas
add
pop
jle
push
data16
fdiv
daa
xor
int
imul
mov
movl
popf
and
int3
push
add
dec
pop
repnz
xchg
xlat
fwait
inc
mov
stc
clc
loopne
mov
pop
add
cmp
out
sbb
mov
imul
inc
outsb
pushf
cli
jns
sub
push
lds
xchg
insb
jecxz
mov
push
loopne
sarl
in
test
mov
sub
add
add
sbb
ret
add
xchg
fdivs
loope
push
and
jae
push
js
sbb
lret
jno
test
insl
and
fcompl
ret
mov
inc
std
aaa
dec
out
sbb
arpl
push
sbb
dec
adc
ljmp
dec
das
adc
cld
in
jb
and
daa
dec
stc
movsl
outsb
std
xlat
aas
mov
sbbb
faddl
scas
xor
adc
icebp
push
xor
out
dec
sub
lds
sbb
movlps
sti
repz
inc
scas
jg
and
out
xchg
data16
xor
in
cmpsl
enter
out
rorb
push
mov
mov
lret
xor
pushf
add
fadds
adc
inc
cld
int3
and
add
jl
stos
sub
stc
aam
xchg
cmpsl
and
lock
add
sti
cmpsb
repnz
js
jmp
adcl
repz
and
cmp
out
cltd
and
add
ja
pop
out
xor
or
sub
pop
les
hlt
or
cmc
insb
pop
push
mov
test
push
sub
and
jle
popf
inc
sti
xor
adc
pusha
push
js
xchg
mov
in
or
and
ds
jno
mov
out
mov
sub
add
xchg
rol
sbb
cmc
mov
imul
adc
sbb
pop
dec
sbb
adc
cli
sbb
lahf
dec
rcl
xchg
nop
jp
outsl
sti
sbb
push
and
cmpsb
std
imull
mov
ficoms
outsl
pop
xorl
mov
out
xor
mov
sbb
fimull
stc
test
mov
push
outsb
mov
xor
dec
into
inc
jl
inc
hlt
test
pusha
add
jl
push
clc
inc
in
jnp
cmp
adc
dec
sbb
jne
lcall
add
push
inc
dec
and
dec
insb
and
xchg
adc
insb
gs
add
pop
jecxz
out
and
sahf
js
push
dec
arpl
rorb
pushf
jnp
out
mov
movsl
mov
iret
adc
adc
jns
mov
cld
push
dec
adc
aad
xor
mov
ss
or
jno
inc
push
jmp
cmpsb
xchg
mov
push
cmpsb
insl
and
clc
movsb
xor
scas
jle
notl
inc
imul
dec
clc
daa
in
mov
mov
add
and
aad
outsl
cmpsb
insb
scas
adc
leave
rclb
sbb
jle
js
sub
push
mov
cmp
mov
jl
mov
aad
push
mov
loopne
int3
xchg
add
pop
jb
rcr
lret
push
dec
sub
pop
movsl
jns
roll
mov
mov
pop
mov
sub
xor
adc
dec
imull
add
es
pushf
xor
sar
dec
add
cmp
inc
sub
andb
mov
loope
pop
mov
test
fwait
daa
or
inc
sbb
cmpsl
sbb
pushf
xchg
jg
mov
inc
inc
cwtl
inc
sub
sbb
into
int
xor
gs
add
inc
inc
lahf
lret
test
xor
test
xchg
ficomps
rorb
repnz
cmc
aas
sar
jecxz
aad
xor
pop
jnp
cmove
sub
xor
pop
or
dec
int
dec
pop
and
lret
int3
mov
adc
cmp
xor
rcr
add
and
nop
jnp
or
xor
add
call
xchg
lds
sub
push
mov
and
mov
mov
ret
or
loop
mul
mov
xchg
adc
and
into
add
push
xor
mov
lret
mov
inc
push
jl
lods
push
mov
test
pop
insl
mov
inc
cmp
mov
push
push
add
out
fwait
cli
movsb
jl
adc
shr
inc
scas
jnp
mov
xchg
lahf
das
pop
mov
mov
test
int
out
test
push
aad
xchg
sub
mov
jecxz
jo
adc
addr16
addr16
test
popa
loope
xor
lods
iret
jo
and
sbb
xlat
aad
xchg
dec
inc
mov
mov
xor
xchg
sbbl
rcrb
dec
inc
push
cmpsl
les
cmpl
pop
popf
in
insl
sbb
test
mov
dec
push
inc
out
push
cmp
je
insb
push
inc
add
mov
and
jmp
push
inc
xchg
ds
insl
pop
imul
lds
cltd
sub
aas
dec
add
rcr
mov
dec
insb
ds
cmp
mov
or
imul
inc
add
and
int3
dec
sbb
jmp
fwait
sub
jns
pushf
mov
sub
lock
leave
mov
push
push
push
sbb
aas
add
push
pop
hlt
xor
jle
inc
dec
inc
hlt
push
adc
sbb
xor
xchg
or
ja
fwait
push
dec
shrl
rclb
fwait
inc
dec
test
inc
pop
or
cs
jo
mov
inc
jo
pop
lea
xchg
inc
cmp
ret
stc
pop
xor
sbb
cmp
in
stc
push
xchg
and
and
jne
std
ret
daa
lds
mov
xchg
mov
ljmp
inc
pushf
loope
inc
jecxz
and
cli
sub
sub
dec
cmp
push
jne
jno
fwait
xlat
sbb
dec
adc
leave
pop
jg
icebp
cs
mov
mov
mov
repz
sbb
cmp
and
sti
cmp
andb
pop
or
insl
int3
add
lret
iret
stos
mov
push
cli
xchg
incl
stos
push
xchg
jne
outsl
inc
daa
nop
jge
jecxz
mov
loopne
or
jne
push
mov
sub
pop
and
scas
daa
pop
imul
test
aaa
inc
pop
mov
aam
sub
sub
add
push
imul
add
arpl
add
cmp
mov
mov
push
testl
inc
subb
dec
dec
dec
or
es
pop
mov
jne
push
outsl
jge
xchg
out
stos
jae
ret
jecxz
sti
aam
loope
adc
push
and
cwtl
call
imul
ljmp
enter
loope
scas
adc
das
adc
pop
push
jo
mov
xorl
xchg
sbb
dec
js
stc
test
lea
cld
and
lahf
popa
test
mov
and
cmp
mov
bound
bound
sbb
sbb
repnz
lret
mov
cmp
push
push
arpl
cmp
push
inc
mov
pop
sbb
jle
sub
lcall
push
fwait
insb
lds
xchg
jb
sbb
add
ds
pop
fstps
call
mov
stos
sub
fsubrl
mov
inc
sbb
lds
jecxz
dec
jnp
in
sbb
ret
out
sahf
fimull
push
add
aad
arpl
iret
mov
pop
stc
movl
inc
sub
in
jle
dec
movsb
mov
dec
mov
arpl
pop
pop
inc
inc
hlt
mov
in
mov
cmp
cld
rcll
std
je
mov
xor
mov
dec
inc
ds
adc
ja
xchg
inc
icebp
jle
sbb
xor
xchg
mov
sub
mov
add
test
push
jg
xchg
scas
pop
movsl
xor
jno
movsl
xor
fs
aad
sti
mov
daa
mov
mov
push
jno
pop
dec
insl
stos
mov
or
aaa
push
adc
cmc
inc
mov
mov
cs
mov
sub
xor
mov
les
fildll
jmp
aam
push
sti
fmull
sub
in
andl
jne
shrl
cmp
sub
add
aas
jno
jl
dec
mov
inc
xchg
push
mov
xlat
and
mov
jnp
push
cmp
mov
out
inc
cmpsb
adc
pusha
popf
jbe
push
jb
in
fisttpl
mov
iretw
mov
test
in
sbb
mov
call
mov
in
xor
add
loope
xchg
in
flds
dec
and
lock
jno
add
in
and
jge
cli
das
and
popa
push
pop
iret
jbe
or
sub
pushf
test
pushf
in
dec
arpl
arpl
mov
ret
xor
mov
sbb
jecxz
imul
into
fdivrs
test
adc
xchg
data16
insl
push
out
pop
jns
dec
into
sub
or
push
pop
clc
sub
shrl
jmp
ja
fmull
sbb
push
sbb
xchg
mov
mov
aad
pushf
fiaddl
mov
and
pushf
loope
lret
mov
cld
pop
add
scas
flds
mov
addr16
lret
inc
mov
or
adc
mov
in
into
inc
jge
inc
test
iret
hlt
sbb
mov
roll
inc
cmp
fisttpll
xchg
or
cwtl
xchg
popf
lds
les
sbb
push
jae
push
aaa
adc
or
arpl
les
cs
in
shll
scas
cmpsb
pop
mov
dec
enter
rcll
mov
mov
xchg
shrb
mov
and
dec
aad
sbb
pop
xchg
push
xor
push
out
lock
scas
call
dec
adc
stos
int3
cmp
pop
add
adc
test
add
hlt
cmc
addb
sub
shlb
jl
in
mov
and
cmp
xor
pushf
in
das
pushf
test
adc
mov
out
and
pop
stc
popl
scas
lret
jecxz
mov
clc
test
push
out
or
imul
mov
xchg
add
and
iret
out
repnz
test
fs
jmp
scas
stc
out
xlat
lret
jb
inc
mov
iret
jnp
mov
or
incl
xor
mov
mov
mov
xor
push
xchg
add
fdivrs
mov
pop
xchg
xor
push
push
jp
cs
push
or
mov
push
pop
add
mov
int3
add
jle
sub
adc
inc
jge
or
mov
cmc
inc
pushf
fdivr
adc
outsb
adc
cmp
jns
fs
negl
mov
sbb
rcrb
mov
and
xor
cmpsl
insl
sbb
out
insl
in
lcall
inc
or
sbb
inc
cmp
or
cmp
pusha
sbb
es
pop
jns
shll
and
sbb
dec
add
jo
add
push
pop
jle
adc
push
pop
data16
push
adc
addr16
lret
pop
test
sub
sbb
insl
mov
leave
nop
sbb
pop
dec
cwtl
idivb
dec
xor
mov
stc
or
jo
adc
sti
pop
es
mov
jp
mov
sub
out
aad
mov
mov
ss
cmp
movsb
aad
negl
out
fbld
adc
movsb
lock
mov
sub
dec
in
dec
in
mov
push
push
cmp
lahf
sub
repz
iret
mov
xor
jno
xchg
mov
inc
sbb
imull
push
rcrb
inc
pop
sbb
scas
test
add
push
popl
and
pop
and
xchg
xchg
ja
and
adc
mov
xchg
in
sub
idivl
enter
xchg
loope
into
int3
inc
pop
sahf
pusha
pop
ljmp
in
lahf
pushf
jnp
mov
or
frstor
xor
insb
sub
cltd
sub
cmp
mov
dec
rorb
dec
push
xchg
and
icebp
sub
push
fmull
sub
ud1
xchg
add
scas
mov
inc
mov
mov
and
pop
and
add
or
rolb
outsb
mov
stos
mov
cmp
es
stc
inc
out
lods
cmp
and
in
inc
outsl
inc
das
test
std
jmp
ret
add
shrl
cmpsl
push
inc
dec
xchg
lahf
sub
sti
pop
jg
mov
adc
xchg
int3
cmpxchg
pop
in
sbb
pusha
dec
int3
call
out
faddl
sub
sub
leavew
repz
adc
rclb
or
lahf
inc
fsubrs
add
and
push
andl
jg
imul
or
mov
out
packuswb
aaa
dec
fs
adc
dec
lret
pop
movsb
sahf
xchg
jle
ret
mov
push
xchg
dec
xchg
add
add
int3
stos
stc
pop
inc
data16
inc
mov
sbb
shll
loopne,pn
decb
pushf
or
adc
cwtl
out
cmc
jbe
mov
sahf
out
movntps
test
lock
xor
stos
test
and
inc
adc
int3
std
jne
push
cmp
pop
mov
dec
inc
aaa
push
inc
fisubrs
xlat
mov
inc
psubb
xor
aad
lret
test
outsl
sbb
pop
sahf
adcl
inc
jmp
sub
sbb
js
lret
jle
mov
adc
xor
int
pop
aas
shr
aad
enter
jmp
sbb
aam
mov
pop
jg
mov
outsl
xchg
cmp
xchg
outsl
popf
dec
mov
arpl
mov
add
pop
outsl
add
sub
in
aaa
popa
mov
call
into
mov
mov
in
insl
xor
repnz
dec
fcoml
pop
inc
ret
pop
sarl
add
push
fildll
pop
mov
xchg
and
mov
jnp
and
mov
aad
sbb
outsb
dec
lods
addr16
lahf
pop
cmc
add
cld
or
mov
jge
mov
loope
and
fcmovne
sbb
cmovp
and
sub
lret
cs
mov
jno
inc
lods
shl
out
scas
dec
aad
les
jnp
into
popf
pop
out
sbb
lock
mov
add
fs
loop
inc
cmove
leave
popa
mov
add
hlt
or
fwait
mov
sbb
sub
mov
sub
sbb
xor
clc
adc
clc
jecxz
dec
xor
mov
sbb
mov
lds
xchg
popa
ret
notb
dec
in
adc
dec
inc
loope
outsb
inc
push
idivl
xor
mov
lahf
fnstcw
in
inc
dec
pop
scas
push
xchg
test
test
and
ja
push
loopne
mov
push
cwtl
js
jecxz
fs
mov
int3
add
xchg
push
jmp
jg
fstpl
insb
push
in
push
popf
ja
sbb
repz
pop
mov
into
pop
stc
and
jne
pushf
jne
sub
mov
int3
cmc
jle
imul
add
movsl
adc
push
popf
stc
pop
pop
xchg
stos
mov
lret
sahf
push
repz
push
push
stos
add
addr16
scas
imul
inc
call
xchg
fsubrs
out
mov
mov
fidivs
inc
pop
xchg
lahf
lods
mov
pop
test
push
inc
mov
xchg
das
fistps
mov
lds
icebp
test
mull
mov
aad
pop
adc
jecxz
jns
jne
push
outsb
int3
clc
add
icebp
and
daa
push
xchg
inc
movd
out
mov
xor
pushf
push
stos
xchg
jb
jno
cmp
or
arpl
das
dec
cmp
inc
jne,pn
inc
push
cmp
jecxz
add
mov
sub
lret
lods
fdivl
add
aam
cmp
push
mov
push
inc
mov
clc
pop
test
mov
ja
fcmovbe
or
call
pop
jns
lret
lret
jge
sar
or
insl
ja
xchg
xlat
inc
inc
inc
repnz
loop
mov
mov
dec
repz
cmc
frstor
ficompl
orb
subl
or
loope
in
sbb
es
cli
push
or
stc
xor
cmp
test
aad
cld
and
test
test
adc
lret
add
cmp
push
or
cmp
pusha
xchg
scas
jnp
sbb
lret
jb
notb
and
cmp
add
clc
xchg
dec
add
mov
dec
lahf
pop
adc
inc
push
jbe
sub
pop
push
addl
imul
test
pushf
push
xor
mov
push
or
icebp
mov
ret
adc
push
mov
push
sbb
jne
pop
mov
roll
ljmp
fsub
push
out
cmp
push
pushf
mov
insb
push
cmp
push
test
sbbb
out
mov
enter
mov
push
hlt
out
pop
cmp
adc
icebp
cmp
imul
je
push
inc
call
popf
add
sbb
loope
sbb
xchg
je
lds
div
or
jns
movsl
or
js
addl
leave
ficoml
and
mull
mov
mov
xlat
inc
jne
test
scas
adc
mov
mov
mov
and
inc
push
sub
lods
push
lret
xchg
mov
jmp
sahf
cmc
dec
mov
in
sti
sbb
pop
shr
in
xor
xchg
loopne
insl
pop
ret
dec
push
inc
jmp
test
dec
sbb
inc
xchg
repnz
or
rcll
dec
sti
xchg
in
sbb
mov
fisubrs
add
push
mov
mov
push
jecxz
mov
mov
add
xor
addr16
xchg
les
xor
sbb
and
lock
ss
popf
push
int
push
fnstenv
popl
sbb
aam
movsl
xchg
dec
aaa
fbstp
insb
das
hlt
adc
test
sbb
cltd
mov
rcrl
jmp
cmp
in
lock
rclb
xor
hlt
clc
mov
mov
pop
out
mov
pop
adc
xchg
sbb
mov
scas
cs
xchg
mov
jnp
and
dec
xchg
insl
xor
fildl
mov
mov
fnstcw
cli
lods
sub
and
push
adc
decl
inc
pushf
mov
mov
jns
jg
xlat
loopne
adc
add
mov
stos
and
lods
or
out
add
sbb
pop
push
mov
movsl
insb
cmp
fdivrl
insl
clc
shlb
adcb
sbb
xor
push
or
xchg
test
dec
ljmp
lea
push
and
xchg
popa
adc
mov
mov
sub
popa
pop
sbb
add
push
and
int
xchg
pop
aad
mov
popl
ror
xchg
fisubl
pop
mov
sbb
mov
fsubl
nop
xor
shrb
jl
bnd
dec
add
es
and
stos
das
iret
sub
scas
xchg
outsl
adcl
xchg
push
sub
xlat
inc
pop
pop
mov
lock
adc
fwait
pushf
dec
loope
ja
cmc
or
and
cmp
jns
adc
testb
jge
aas
add
or
addr16
push
loopne
hlt
aaa
and
adc
iret
and
mov
add
pop
int3
loope
xorl
jae
jb
aad
xchg
inc
lret
mov
iret
int
aas
test
jecxz
nop
rorb
add
lret
outsb
xchg
sbb
dec
sti
pusha
dec
add
jbe
imul
clc
sub
adc
pusha
dec
cs
dec
dec
test
and
or
mov
cmc
inc
push
sub
push
fadds
sub
inc
xor
lcall
add
cmpsb
repz
pusha
js
push
xchg
sbb
jne
inc
xlat
outsl
mov
stc
inc
lods
jno
jecxz
fisubrs
dec
and
es
loope
inc
lds
push
iret
lea
loope
sarb
mov
xlat
jecxz
jnp
sub
pop
xor
cld
mov
dec
add
or
rclb
pop
push
jne
in
aas
outsb
jl
in
into
add
xor
fisttpl
into
lock
add
into
addr16
xlat
cmpsb
cmp
mov
cmpsl
add
mov
inc
sbb
loope
jge
nop
les
sbb
xor
xchg
mov
test
je
es
and
sbb
sub
scas
hlt
ret
aas
test
or
hlt
sbb
imul
xchg
sbbb
jb
js
xchg
push
jge
test
xchg
sbb
xlat
pop
adc
add
inc
test
push
fdivrl
scas
test
cmp
dec
inc
out
jb
inc
or
call
pop
mov
pop
add
int3
mov
addl
stos
subl
outsb
add
inc
outsb
aam
mov
adc
inc
rorb
out
lcall
add
mov
cmp
mov
out
fnsave
push
movsl
aam
mov
or
xchg
gs
sbb
jg
cmp
xchg
les
inc
bound
push
xchg
dec
pop
xor
or
cmp
mov
ret
add
push
jecxz
inc
pop
push
jns
repz
fadds
repnz
pop
sbb
push
int
xlat
mov
mov
adc
mov
lods
xor
sahf
sahf
add
fwait
push
mov
andb
popa
push
mov
iret
xchg
fiadds
push
inc
push
pushf
aam
push
negb
cli
js
jno
mov
sbb
lods
fdivl
fidivrl
push
lcall
decl
lods
xor
mov
out
push
fadd
data16
inc
mov
jle
mov
dec
jo
in
and
xlat
sahf
cwtl
inc
pusha
add
in
shlb
stc
or
mov
addr16
cltd
push
or
test
and
cmovge
push
stos
or
pop
pop
jmp
mov
inc
xchg
mov
dec
aaa
push
in
sub
shl
rorl
adc
scas
mov
out
inc
movsl
movsb
and
popf
mov
movsb
xlat
jl
adc
addl
aaa
mov
clc
rcl
fisubrs
jge
pop
lea
imul
popf
jbe
sbb
sarl
dec
and
dec
or
mov
aaa
jp
call
idivb
rolb
xchg
outsl
andl
and
sub
out
negl
incl
mov
pop
stc
dec
cmpsb
jl
sub
sbb
and
lds
cs
adc
sbb
lret
push
mov
and
push
sub
stos
jno
add
stos
pop
ret
mov
fcmovb
inc
les
sbb
test
and
sub
repz
lcall
popf
push
cli
loope
pop
pop
add
lds
add
je
mov
pop
in
adc
pop
mov
mov
push
jns
test
mov
out
in
inc
sarb
cmp
sub
and
jle
mov
jb
push
stc
cmp
mov
lea
dec
popa
adc
leave
sub
inc
xchg
mov
pop
insb
int
es
mov
inc
imul
fwait
dec
push
shll
inc
outsb
add
outsb
jmp
xor
push
rcl
pusha
sub
jecxz
adcb
pusha
ljmp
xchg
sti
or
ret
lcall
mov
ss
push
ds
inc
mov
jmp
cs
sbb
les
popf
daa
jns
mov
cs
test
xor
repnz
adc
jns
insb
xchg
mov
mov
outsb
pop
adc
loopne
mov
mov
int3
popa
nop
jae
sbb
jle
in
jg
adc
in
mov
in
push
ss
add
sarb
or
adc
inc
call
outsb
sbb
insl
mov
pop
js
pop
adc
cli
or
fnstenv
mov
movsl
mov
mov
mov
lret
aas
mov
psllw
or
test
cmp
mov
cld
xor
dec
aam
xchg
jne
popa
adc
jle
repnz
add
sub
out
mov
nop
mov
add
and
lahf
dec
js
adc
sar
mov
fs
and
jne
inc
sub
cmpsb
cmp
mov
cmc
popa
cmp
mov
inc
sbb
adc
or
push
and
gs
dec
jmp
pop
inc
leave
or
xchg
subl
adc
xchg
push
and
dec
mov
pop
xchg
repz
cmp
pop
jbe
fldenv
adc
sti
xor
js
rorl
mov
nop
inc
call
out
cwtl
mov
xchg
sbb
mov
adc
jo
int3
or
movsl
dec
xchg
mov
les
ja
push
push
je
pop
rcll
adc
scas
mov
stos
std
jae
fistl
cmpsb
cmp
imul
enter
pushf
inc
insb
loopne
adcb
mov
push
mov
add
loope
add
mov
mov
mov
mov
and
and
cli
mov
sbb
outsl
sub
or
dec
dec
test
pop
in
and
xor
pop
and
rcr
ret
test
in
int3
dec
sarl
fsubp
fwait
out
and
outsl
cmpsl
mov
popf
shlb
and
pop
mov
xchg
sub
in
je
cld
test
adc
jmp
int3
jae
push
fsubl
dec
mov
add
outsl
popf
dec
sahf
rolb
sbb
pop
inc
cmp
jae
push
dec
and
xchg
cli
shlb
inc
roll
dec
popf
notb
mov
loopne
xor
mov
mov
loopne
dec
int3
scas
dec
cwtl
jno
call
sarb
cmp
sub
mov
inc
and
xchg
into
inc
aam
mov
scas
test
or
xchg
jp
add
sub
xchg
add
mov
and
cmp
xchg
lock
xor
push
scas
aaa
and
sbb
inc
jg
sarl
fsubrl
bound
xor
icebp
and
out
shll
adc
mov
cmp
and
mov
popa
add
popl
adc
clc
sbb
xchg
pop
movsl
mov
adc
mov
ret
add
and
test
mov
xchg
dec
add
pop
scas
mov
xor
cs
mov
in
cmp
insl
scas
int
mov
cmp
out
mov
sbb
decb
imul
insl
cmp
mov
pop
and
loopne
dec
xlat
push
loope
push
mov
mov
loope
xchg
leave
mov
xor
cld
sub
xor
sub
lret
mov
testl
lcall
or
faddl
ss
dec
xlat
aam
mov
add
stc
fwait
lcall
sti
or
fsubs
test
imul
add
sub
or
dec
leave
inc
cmp
adc
mov
and
jbe
pop
aam
cs
xchg
or
xchg
xor
mov
adc
loope
mov
lods
push
adc
movsl
add
popa
mov
aad
mov
orl
fstpt
inc
push
or
xchg
xchg
popf
jecxz
bound
sbb
mov
pop
xlat
add
stos
mov
insl
jne
cmpsl
fistl
roll
pop
mov
stc
cmpsl
add
and
sub
or
inc
push
lds
in
push
stc
add
inc
mov
aad
sub
mov
push
sahf
stc
sub
cs
imul
test
adc
push
and
adc
idiv
test
enter
dec
and
and
mov
push
outsl
daa
arpl
sub
popa
inc
iret
inc
mov
jb
int
cli
push
in
dec
clc
loop
dec
ret
pop
adc
push
sbb
fiaddl
add
inc
mov
mov
mov
loope
inc
loope
add
daa
movsb
mov
xchg
div
and
and
mov
sub
jmp
and
mov
jbe
cmp
xchg
and
mov
lret
pop
mov
ficoms
ljmp
or
popa
or
movsb
add
mov
out
jo
jb
jnp
push
jge
push
bound
jmp
test
jb
cltd
cmp
int
out
sbb
pop
push
add
test
mov
outsl
popa
mov
push
xor
stos
fdivrs
cmp
push
ucomiss
insl
pop
addr16
call
hlt
add
mov
lret
push
popf
stos
test
dec
adc
lahf
arpl
pop
mov
sbb
outsb
dec
pop
pop
sbb
adc
and
jo
nop
shrd
lds
es
adc
push
xor
addr16
sbb
ret
call
les
call
lock
test
pop
push
ja
push
or
mov
push
and
subb
cmp
adc
rcrb
imul
das
push
in
aaa
jmp
cli
nop
outsl
nop
xchg
pop
out
repz
mov
daa
stos
jecxz
sub
insl
jl
cld
xor
xchg
rolb
insb
mov
lahf
or
icebp
push
mov
insb
leave
test
dec
add
enter
or
cmp
test
push
mov
mov
outsb
das
dec
mov
and
sub
cltd
fmul
add
ja
loop
sbb
xchg
cmp
inc
jns
aad
push
sub
sub
popf
jb
lahf
ret
imul
imul
mov
test
and
cmp
lret
add
cmpl
lret
pop
mov
jno
mov
sarb
and
insl
cmp
sub
addr16
jp
xor
pop
shrb
pusha
inc
aam
push
aaa
lret
int
mov
and
jno
xchg
xor
push
fisubrs
dec
lods
mov
lahf
jg
add
push
add
jo
xor
int
and
cmc
xorl
insb
les
add
notl
rcr
push
sbb
mov
int3
pop
pop
fisubrs
out
pop
mov
or
imul
roll
in
out
lods
cmp
stos
into
mov
roll
loopne
pop
rorl
push
imul
decb
sub
cmp
mov
sar
inc
push
adc
pop
sub
sub
push
jl
ret
insl
pop
fidivs
jae
mov
add
test
inc
scas
add
add
pushf
and
es
into
dec
outsb
jb
mov
mov
inc
inc
ja
jg
xor
add
pop
mov
inc
mov
or
mov
xlat
inc
fisubl
ljmp
popf
movsb
inc
negl
adc
xchg
lret
cmp
add
insl
lret
xorb
inc
push
sbb
dec
mov
inc
mov
inc
hlt
mov
mov
xchg
or
inc
xor
push
lds
cmc
sub
inc
cli
mov
inc
pop
fstpl
aas
xchg
push
int
mov
xor
mov
mov
or
pusha
pop
cs
mov
aad
cs
adc
lods
mov
push
fwait
imul
inc
sbb
popa
pushf
mov
inc
or
aaa
and
mov
xchg
and
inc
jae
loope
xor
pop
sub
push
or
call
pop
inc
mov
add
pusha
jnp
mov
adcl
sbb
mov
lcall
jle
mov
xor
pop
adc
pop
iret
cltd
test
or
push
pushf
cmpsl
jne
push
pop
repz
cmpsb
adc
cltd
add
add
fcomip
js
mov
popf
leave
jmp
int
adc
jae
pop
sbb
add
loopne
cmc
push
dec
sub
lods
inc
mov
adc
lcall
mov
inc
xor
cmc
add
mov
pop
sub
push
int
popf
fnstenv
pop
fistpl
add
das
orl
mov
adc
add
sub
jns
inc
imul
shl
add
lret
push
pop
add
leave
mov
orb
arpl
ret
iret
fs
push
aad
xor
mov
in
sti
cmpsb
in
jb
fisttps
lcall
pop
sbb
inc
xchg
and
fwait
cmp
pushf
sub
xchg
insb
jns
dec
and
ss
sub
sahf
std
dec
clc
sbb
sbb
dec
shl
aas
pop
or
cld
sahf
or
jnp
inc
addr16
push
shrl
push
sub
int3
imul
cld
mov
xlat
inc
lcall
ljmp
inc
xchg
push
sar
mov
icebp
ss
fsubrp
push
outsb
lahf
add
out
mov
and
js
push
cmpsb
mov
and
das
cld
push
sub
insl
js
lods
pop
xor
cmp
adc
sub
repz
push
out
xor
test
xor
ret
es
sub
mov
xchg
lds
cmpsb
and
xchg
loope
jae
add
mov
xchg
mov
insb
push
nop
mov
subb
dec
inc
and
aas
imull
sub
repz
adc
push
rcll
clc
inc
mov
mov
mov
sub
loope
sbb
and
sbb
in
adc
pop
and
and
scas
shr
addr16
mov
jno
or
jmp
enter
insl
mov
adc
xor
cmp
insb
dec
sbb
dec
xor
jle
push
leave
outsb
mov
xchg
mov
inc
out
mov
xchg
std
repz
pushf
and
mov
jno
negl
je
adc
cmp
iret
nop
sbb
xor
arpl
mov
mov
lret
test
mov
jne,pn
dec
push
icebp
xor
int
jo
mov
xor
mov
arpl
stos
push
xchg
loope
and
into
test
ss
xchg
mov
dec
in
andl
pop
or
add
mov
pop
jg
leave
sub
sub
sbb
in
adc
push
stos
stc
pop
mov
icebp
pop
cmp
inc
fs
cld
jmp
add
jmp
xchg
ret
pop
push
jle
stos
jp
mov
aad
cmp
cmp
push
out
adc
adcb
push
and
ret
add
xchg
or
mov
mov
inc
mov
icebp
clc
push
rcll
stc
es
dec
imul
andb
les
hlt
push
jle
in
scas
repnz
fwait
pushf
push
cltd
loope
adc
xor
mov
add
in
sub
pop
push
sbb
inc
fsub
std
push
lret
mov
cmp
jae
sub
jecxz
inc
les
gs
lock
mov
pop
cmpb
push
clc
div
test
and
lret
movsl
and
add
mov
pop
insb
cmp
dec
in
jne
and
sbb
jo
dec
cld
add
stc
xor
insb
repz
jno
xor
into
or
cli
stc
inc
push
loope
inc
or
stos
dec
jb
pop
sbb
aad
sub
or
mov
cmpsl
jbe
add
push
dec
cmc
arpl
popa
mov
jno
mov
out
jle
sbb
pop
out
iret
test
cmp
daa
and
mov
mov
mov
jns
and
mov
mov
cmpsl
mov
adc
clc
fwait
data16
popa
push
pop
add
popf
rcll
and
and
aas
sbb
inc
rclb
mov
push
out
pop
and
les
pop
add
jns
lret
insb
in
pop
jae
or
push
sub
and
and
cmp
imul
xor
push
push
mov
test
mov
xlat
cs
push
push
in
test
stos
inc
pop
cmp
pop
outsb
mov
loope
and
inc
cli
dec
mov
push
maxps
into
and
loopne
bound
insl
adc
imul
shll
insb
xlat
jns
daa
js
movlps
inc
add
mov
popa
xor
mov
imul
sbb
jle
jne
stc
or
and
cmp
or
or
xor
sub
inc
lcall
out
int3
sbb
pop
out
test
les
mov
sbb
leave
js
push
and
outsb
out
imul
icebp
mov
shl
mov
sub
imul
dec
scas
lods
aas
insb
stos
and
lods
sbb
mov
dec
lret
pop
mov
ja
xchg
sbb
mov
sbb
sub
pop
and
jno
fstl
xchg
jno
movsl
bound
ret
popl
popa
shll
sbb
pop
inc
sub
cmp
mov
mov
add
mov
outsb
fsubl
mov
filds
sbb
fcoml
xchg
lods
lods
lea
add
xor
stos
xchg
jns
mov
sub
insb
nop
outsb
pop
xchg
aam
cwtl
push
aad
aad
popf
mov
imul
dec
dec
in
mov
mov
inc
movsb
sbb
add
repz
xchg
lret
dec
pop
jecxz
imul
cmc
fistps
add
std
insl
dec
push
loope
fnstenv
sub
jl
cmp
mov
test
inc
and
pop
jne
sub
dec
fisubs
lds
gs
push
xor
pop
cmp
lock
and
fiaddl
test
into
push
rolb
stos
dec
xchg
leave
inc
int
inc
scas
sbb
jecxz
inc
sbb
popf
mov
rcl
adc
test
dec
xor
mov
popa
inc
aas
call
xlat
adc
jo
push
lcall
stc
outsb
mov
mov
ret
scas
stc
es
seto
and
lahf
clc
dec
add
dec
out
xchg
sbb
stos
sub
mov
stc
sahf
pushf
loope
dec
dec
inc
mov
jl
roll
mov
lock
addr16
cmc
cwtl
xlat
icebp
lret
dec
xchg
into
adc
pop
cmpsb
sbb
fimull
fidivl
pop
adc
push
test
movsb
or
adc
out
stos
decl
pop
xchg
sbb
ss
dec
push
cmp
jb
insb
test
adc
jno
add
repnz
mov
sti
mov
xchg
adc
loope
out
stos
push
insb
pushf
xor
xchg
fsubrl
inc
xchg
loopne
xor
scas
sahf
sub
int
and
adc
aad
shl
jbe
push
fldcw
jge
in
xor
xor
lret
inc
mov
pop
mov
inc
sahf
sbb
ljmp
add
xchg
ja
push
ret
inc
lret
pop
mov
xchg
inc
xchg
sahf
sbb
dec
fwait
sub
xlat
xor
jne
fst
or
or
dec
fabs
mov
ljmp
adc
les
add
sbb
dec
aad
shlb
add
popf
inc
arpl
add
push
add
cmp
mov
das
fwait
out
stos
mov
xor
shl
jg
stos
push
cmpsb
add
or
or
scas
bound
add
push
outsb
sub
mov
jb
push
fnstcw
xor
mov
push
test
fiaddl
jecxz
lods
mov
adc
imul
pop
cs
pop
or
mov
popa
ljmp
dec
pop
inc
ljmp
or
loopne
aad
addl
cli
cs
mov
mov
in
enter
and
dec
mov
xor
addl
loope,pn
and
and
aas
add
sbb
mov
mov
pop
mov
and
pushf
mov
push
mov
push
xor
leave
cwtl
jae
mov
cmp
inc
stos
imulb
mov
sbb
and
jbe,pn
jg
popf
in
add
adc
fistpll
or
loope
je
cmp
fcomp
loopne
mov
dec
push
inc
sbb
pop
arpl
push
repz
xchg
shrl
imul
pop
aam
outsl
jbe
mov
adc
stos
xchg
loope
add
adc
inc
add
xor
and
rcrl
fistpll
adc
sbb
dec
cmp
xchg
clc
fidivl
cmc
into
lock
sub
or
repz
push
or
mov
push
fmull
xchg
mov
push
cs
adc
lea
rorl
inc
or
dec
or
testb
jecxz
lcall
in
inc
out
mov
roll
mov
aad
bound
repz
mov
gs
cmp
aad
fadd
mov
push
movsl
sub
xchg
add
repz
outsl
xlat
inc
mov
or
scas
into
movsl
imul
pop
push
movsb
mov
mov
inc
lock
and
and
or
add
loop
add
cwtl
cmc
xchg
test
sbb
mov
add
and
xlat
stc
jmp
aam
mov
inc
fldenv
inc
scas
mov
cmp
xor
inc
arpl
sub
je
or
and
sub
stc
es
cld
adc
sahf
mov
inc
push
dec
cld
or
inc
sarb
push
das
xlat
or
jmp
sahf
xor
mov
jbe
push
inc
pop
adc
inc
sub
jbe
ja
xor
push
or
lret
pop
sub
push
and
bound
push
ja
cmp
sbb
dec
push
mov
pop
test
imul
movsb
test
sub
cld
fadd
vmptrst
stc
pop
icebp
fldcw
sub
adc
fsubrl
test
aad
jb
pop
inc
ret
mov
lahf
or
cs
push
xor
fistl
adc
je
jg
lods
ret
push
sub
js
jp
addr16
adc
xor
pop
jp
repnz
inc
jae
xor
cmp
xor
and
jbe
jnp
or
dec
mov
cmpsl
push
xlat
or
and
mov
mov
dec
sbb
cmp
cs
lret
outsb
xchg
mov
outsb
dec
scas
cli
push
inc
or
push
push
push
popf
mov
push
pop
pop
push
xchg
sbb
cmp
cltd
mov
xchg
sbb
int3
cld
out
or
mov
adc
cmp
sub
sub
jecxz
push
movsl
adc
ret
lret
xor
fisubrl
imul
push
call
mov
push
pop
sub
rorb
mov
mov
or
xor
push
push
jecxz
mov
imul
cmp
sbb
xor
addb
push
or
push
adc
add
aam
inc
aad
iret
xchg
xchg
xchg
xor
push
sub
sub
jb
lahf
sbb
dec
cs
push
mov
repz
dec
cmp
popa
mov
xor
jp
mov
mov
push
leave
into
dec
jmp
jl
add
add
jp
xlat
dec
out
sub
and
push
dec
push
jo
xchg
cmp
popf
or
int
push
aam
adc
mov
adcb
jecxz
push
fiadds
adcb
stos
or
js
and
cs
pop
lret
push
mov
insb
aaa
dec
dec
adc
sbb
sti
insl
add
xor
pusha
movsb
iret
sbb
lods
push
and
inc
push
adc
sbb
stc
jnp
lahf
sub
popa
loope
adc
jo
inc
mov
sbb
cli
jp
fcoml
cs
ret
lea
pop
into
add
xor
or
rolb
adc
popa
dec
outsb
imul
fiadds
xchg
push
sbb
arpl
push
test
dec
in
push
test
push
das
and
pop
mov
jmp
int3
mov
xor
aaa
dec
add
pop
push
mov
cmp
or
jno
push
in
push
jbe
dec
sub
movl
adc
push
sbb
xor
fdivl
fisubrl
leave
and
xor
popa
push
adc
cmpsl
mov
int
aaa
jns
lret
dec
cmpsb
push
push
xchg
adc
les
mov
sbb
pop
aaa
xchg
push
lods
lcall
cs
pop
pop
es
inc
sub
mov
mov
sbb
sub
or
cmovb
inc
sti
jle
adc
loope
test
out
popf
sub
gs
fnsave
fidivrs
sub
cs
push
into
jo
pmaddwd
inc
push
dec
outsb
pop
jmp
mov
and
imul
cld
dec
les
inc
aaa
andl
xlat
int3
mov
pop
out
cwtl
inc
cmpsl
rclb
jae
jo
sub
mov
das
push
jns
push
aaa
lcall
mov
stos
lret
je
cmp
push
and
lods
sbb
sub
std
loopne
inc
sbb
cmp
orb
pop
cmp
sbb
inc
mov
xor
std
sbb
xchg
jnp
ja
fdivs
cmp
xchg
sbb
or
jecxz
cmp
push
jo
orb
lds
xchg
push
xchg
sub
sub
cmp
adc
test
dec
sub
sbb
mov
jge
cmpsl
cmp
stos
stos
mov
rorb
xor
cmp
lret
add
push
jge
mov
inc
and
push
jae
push
dec
push
xor
aas
sbb
inc
jge
inc
cmp
fsubs
inc
push
insb
adc
jbe
sbb
daa
jp
mov
bound
xchg
imul
or
inc
sub
pop
sub
push
out
xchg
push
push
inc
adcl
sub
cltd
rcrb
cmp
das
adc
sub
fidivl
dec
dec
pop
mov
sbb
cltd
inc
and
pop
lret
mov
and
nop
push
or
adc
push
out
iret
push
push
test
inc
lock
sub
pop
movsl
ret
and
cmp
pushf
cli
pop
std
cmp
adc
int
int3
bound
xchg
push
adc
out
sub
cmp
push
or
and
push
jmp
or
and
dec
ja
js,pt
or
cs
push
inc
xor
arpl
outsl
cs
push
mov
cmp
jp
mov
cmp
es
testl
dec
enter
fcmovb
mov
xlat
mulb
cmp
ret
sbb
xchg
push
pop
mov
js
cltd
or
sbb
xchg
sub
jae
push
push
imul
push
pusha
pop
ss
inc
push
adc
dec
adc
mov
adc
or
mov
sbb
cmp
jno
sub
lret
cmp
jo
sti
inc
or
cmp
push
pop
rcrb
sbb
cmpb
in
xor
add
fs
xchg
dec
push
adc
outsb
stos
cmp
repnz
or
mov
or
push
mov
sub
mov
sbb
xchg
mov
sub
xor
sub
fldcw
sub
popf
mov
or
xchg
xor
jns
adc
imul
mov
jb
inc
push
dec
mov
pop
adc
clc
sub
insb
or
push
pop
cmp
icebp
adc
push
pop
cmp
lds
popa
in
daa
in
out
xchg
adc
or
mov
int3
stos
inc
subb
jb
les
adc
adcb
or
addr16
sarl
pop
push
push
sbb
cltd
stos
rcrl
cli
and
push
in
dec
int3
push
mov
push
test
adc
jmp
adc
int
ret
sub
push
jb
stos
imul
and
ss
lods
test
mov
push
lahf
lock
or
adc
adc
es
mov
sub
pop
adc
jg
sbb
dec
outsb
push
dec
add
inc
xchg
subb
ret
mov
inc
mov
into
scas
test
xor
dec
push
dec
rcrl
es
xor
mov
push
pushw
or
and
rolb
inc
push
cmpsb
sub
cmpsl
mov
pop
imul
sub
xor
push
out
mov
xor
inc
dec
fsubr
cld
inc
or
adc
xor
fisttpl
fbstp
mov
cmp
xor
int
inc
dec
jb
adc
xor
add
xor
mov
xor
push
pop
xor
and
push
push
xor
inc
rclb
fidivl
inc
test
adc
mov
xor
adc
push
add
xor
xor
aam
cmp
add
push
push
xlat
xor
cs
mov
lea
cli
and
cmp
adc
xor
push
pop
lret
xchg
ret
push
insl
xchg
adc
test
int
sarl
adc
or
adc
lea
push
movsl
sbb
push
out
push
add
test
js
ljmp
pop
and
xchg
lods
jb
mov
mov
leave
or
sbb
ljmp
adc
xchg
add
push
sbb
shll
enter
inc
dec
sub
xor
push
sub
hlt
lods
adc
sbb
inc
mov
and
aaa
inc
sub
cmp
gs
sbb
pusha
inc
xor
or
adc
push
gs
cwtl
roll
sbb
xor
inc
fcomi
sub
push
mov
xor
dec
out
jmp
sub
imul
cwtd
call
pushf
dec
xor
movb
data16
jo
add
cmp
int3
sbb
add
dec
cld
test
fsts
mov
jp
cmp
inc
jp
mov
int3
sahf
push
adc
mov
adc
or
jo
xor
push
sbb
adc
or
cmp
and
sub
or
sbb
cmp
jo
mov
aaa
mov
int3
pop
xchg
in
and
sbb
roll
xor
in
or
sub
sbb
mov
mov
dec
xor
sbb
outsl
jge
movsb
xchg
inc
adc
mov
cmp
insl
push
push
or
sbb
test
pusha
lods
lock
pop
loop
adc
imul
iret
pop
mov
sub
test
lahf
inc
ja
push
jmp
dec
fimuls
or
or
cs
inc
mov
xchg
mov
outsb
push
in
adc
dec
jge
mov
ret
stos
or
xchg
sub
xchg
sub
jae
xlat
or
sub
ljmp
or
jge
and
sub
mov
or
dec
add
push
sbb
push
test
jbe
mov
cli
cmp
sub
mov
adc
lret
push
jg
mov
sbb
imul
jp
mov
cmp
dec
and
jge
test
sbb
add
iret
mov
push
mov
or
int
ljmp
xor
lods
adc
mov
shlb
pop
mov
daa
fsubl
stos
int3
sub
rclb
aaa
cmc
cmp
mov
mov
dec
push
mov
xor
popf
cmp
inc
xorl
and
stos
push
xor
xor
jl
loopne
or
or
add
xor
or
add
pop
or
sub
lock
or
jecxz
cmp
loope
mov
sbb
insl
push
inc
rcll
jl
pop
cmp
jg
aaa
cs
inc
push
lea
and
sti
mov
sub
add
jo
push
and
push
repnz
push
add
push
or
rclb
sbb
out
in
sbb
incl
dec
sub
or
xlat
outsb
daa
sub
inc
insb
and
fstl
cmp
pop
sbb
leave
negl
push
pop
cmp
jno
and
fidivrs
sub
and
mov
inc
dec
push
ret
xor
cld
push
mov
xor
cmp
sbb
and
pop
or
sbb
sub
imul
or
push
sub
pusha
jae
test
or
mov
dec
jge
xor
push
pop
jp
push
or
and
sub
sbb
inc
pop
xor
jnp
jg
inc
xor
shlb
jmp
cmp
arpl
adc
xchg
sub
repz
or
xor
int
xchg
add
or
pop
out
adc
sahf
pop
push
scas
stos
sbb
fidivs
mov
pop
bound
movhps
adc
aad
inc
adc
push
inc
shl
mov
testb
dec
jbe
dec
xor
inc
jne
stos
and
adc
mov
imul
sub
cld
inc
divb
fistl
aam
sub
sub
jno,pn
push
aas
pop
mov
aas
int
insl
dec
les
sbb
inc
or
das
into
popf
xor
jge
pop
bound
cmp
xor
sub
dec
cmpsb
or
out
fbld
mov
cmp
push
pop
loope
adc
mov
dec
push
inc
inc
int
xor
arpl
sub
sub
mov
xor
inc
les
sub
pop
adc
int3
push
sub
and
mov
popa
stos
push
inc
sbb
add
fisttpll
xchg
lods
adc
std
xor
ds
inc
sarl
and
movsb
push
pop
sbb
sub
cwtl
fucomip
ss
and
mov
xor
xor
into
inc
jno
sbb
push
adc
out
push
dec
out
test
xor
jle
or
aaa
nop
adc
pop
or
imul
mov
call
aaa
sub
fbstp
mov
and
cld
in
or
fisubrl
insl
dec
push
jnp
inc
adc
or
adc
inc
or
enter
add
add
sbb
paddsw
lea
push
adc
xor
fwait
dec
xorl
out
push
sbb
pop
adc
iret
push
sbb
xchg
xor
scas
not
fnstenv
sbb
mov
and
icebp
inc
dec
push
inc
mov
out
vmovhlps
cmp
mov
push
push
xor
aam
aas
mov
mov
ds
xor
xchg
jno
cmp
aam
or
push
inc
pop
cmp
dec
repnz
adc
adcl
cmp
mov
std
fs
inc
adc
push
and
fisttpll
loope
jbe
mov
pop
sub
in
adc
in
or
inc
call
mov
xchg
inc
pop
and
push
repz
sbb
cmp
les
cmp
cmp
jle
imul
arpl
sub
dec
push
push
pop
aaa
add
call
mov
xor
cmp
sbb
and
rcr
cmp
ficoms
push
das
or
inc
subb
or
adc
cmp
dec
mov
mov
cld
inc
sub
lea
es
push
xchg
ret
or
imul
sbb
xor
xchg
dec
cmp
adc
cs
mov
dec
nop
lods
fs
gs
push
sbb
out
sbb
xor
int3
mov
insb
sub
sbb
jge
lods
loopne
xor
cmp
aam
dec
jg
arpl
pop
ret
sub
xor
sub
sub
inc
inc
cmp
enter
cmp
inc
jae
and
setae
add
push
enter
stos
and
pop
mov
push
inc
xlat
sub
aam
in
sbb
xor
rorl
insl
add
adc
inc
xor
mov
and
pushf
jl
sub
sub
mov
push
dec
xchg
outsl
dec
jns
loopne
or
adc
dec
sub
inc
push
jbe
insb
jge
push
cmp
fldt
repnz
sbb
int3
aas
push
or
push
inc
out
push
in
aaa
sbb
sbb
enter
adc
lret
mov
fs
test
and
imul
scas
jo
das
inc
sbb
sub
movsl
cli
scas
adc
or
xchg
cmp
das
loopne,pt
push
or
jecxz
and
xlat
xor
xchg
int3
add
sbb
push
and
mov
xchg
mov
cmp
ficoms
stc
inc
push
outsl
push
add
cmp
xchg
out
iret
mov
push
mov
jl
sub
sbb
imull
bound
push
arpl
jno
dec
add
or
mov
xor
cmp
lea
pop
push
mov
add
pop
jb
push
scas
jmp
aaa
pop
mov
push
leave
mov
outsl
stc
cmp
mov
xor
dec
out
and
cmp
cmp
add
or
push
push
xor
adc
leave
pop
push
cs
mov
adc
gs
pop
xor
cmp
cmpsb
lock
push
jo
push
icebp
sarl
or
xlat
sbb
cmpsb
stos
sub
or
jmp
andb
push
inc
and
cmpsb
and
push
and
cmp
adc
pminsw
xor
mov
daa
sub
or
sub
dec
adc
iret
ror
xor
cmp
mov
xor
sbb
pop
cli
jae
sub
sbb
add
or
mov
xchg
mov
fstpl
das
cmp
jno
inc
loope,pn
push
push
mov
add
sub
add
sbb
sbb
ljmpw
xchg
pop
test
das
xlat
cmp
insb
sbb
cmc
push
andb
inc
jl
flds
sub
sub
cmpsl
adc
inc
or
push
or
fcmove
and
sub
dec
mov
adc
int
lods
or
mov
xor
push
repnz
mov
jae
cmp
xor
sub
xlat
cltd
adc
loope
jne
jge
rcll
ds
int
ljmp
mov
sbb
out
fdiv
cmp
cs
sbb
and
push
xchg
add
pushf
subb
cmp
or
push
je
stc
jecxz
cmpsl
inc
icebp
jo
mov
xchg
mov
push
cmp
xchg
adc
js
push
imul
inc
jo
cmp
aam
mov
xchg
adc
aas
inc
lock
push
push
aas
fcoml
and
notl
cmp
ds
push
cmp
insl
enter
xchg
xchg
out
push
xor
es
cwtl
inc
and
xchg
push
and
pop
mov
add
ret
and
dec
inc
push
adc
ret
test
outsl
and
pop
leave
mov
int3
or
and
mov
pushf
jnp
xor
mov
ret
adc
imull
pop
inc
or
sub
add
xchg
or
dec
pusha
push
sbbb
jge
sub
lcall
mov
or
arpl
sbb
into
scas
sbb
insl
jno
ficoms
loope
pop
xchg
insb
adc
push
in
inc
loop
mov
add
lret
fmull
mov
xor
insl
cld
jnp
sub
push
js
jmp
ja
shl
mov
cmpb
lds
lods
imul
add
clc
add
dec
push
pop
inc
leave
fwait
and
or
popa
cs
cmp
lahf
les
test
test
inc
arpl
ljmp
insb
sub
jge
cmc
add
std
loope
clc
lret
lods
add
ret
add
mov
out
dec
pop
pusha
loop
dec
inc
lea
xchg
enter
sub
aad
leave
shrl
sbb
cmp
sub
add
roll
xor
test
jl
mov
mov
sbb
lds
xchg
fucomip
push
decb
mov
mov
call
movsl
ds
pop
sub
imul
mov
sahf
mov
inc
pop
xchg
icebp
cmp
or
in
test
inc
int
adc
sahf
sub
and
mov
dec
insl
mov
gs
enter
dec
xchg
inc
sub
cmc
mul
mov
pop
pushf
mov
test
subl
roll
pop
adc
and
mov
addb
add
lahf
cmc
xchg
icebp
or
loop
mov
xor
rol
insb
jmp
pusha
mov
out
pop
leave
or
add
and
mov
jns
or
xchg
repnz
adc
and
inc
imul
fildll
mov
pop
sub
xor
jle
ret
jmp
xchg
pushf
enter
sbb
imul
jns
cmc
jp
push
xchg
pop
mov
insl
test
aas
fdivs
add
test
xlat
and
cmp
roll
mov
xor
add
cmp
or
iret
loop
daa
mov
sub
jge
loope
push
aaa
cmp
xor
bound
fistl
cmpsl
ljmp
mov
je
adc
mov
ljmp
pop
sub
stos
stc
jp
insb
push
int
jecxz
jl
negl
inc
outsb
xchg
push
jecxz
popa
dec
jl
ror
ret
das
xchg
andb
mov
imul
and
mov
adc
push
rol
push
mov
jns
and
ficoms
and
sti
mov
xor
xor
rolb
mov
mov
pop
push
hlt
ljmp
xor
jb
mov
stos
fldl
data16
push
and
add
fmul
mov
push
pop
jns
imul
in
mov
sbb
movsb
mov
aad
or
and
scas
jge
pop
out
inc
jl
add
cmp
outsl
and
jno
mov
call
nop
xor
out
test
push
fldl
movntq
xchg
cmp
vmwrite
aad
add
xchg
xchg
imul
fldcw
rolb
in
test
arpl
mov
int3
add
dec
or
sbb
mov
loopne
les
add
mov
mov
xchg
jl,pt
dec
orl
cwtl
xchg
push
jge
cmp
sbb
xor
sbb
inc
fwait
jmp
jmp
popf
jno
cld
dec
ss
fidivs
and
jne
and
outsl
jmp
inc
xor
out
mov
and
dec
mov
aam
mov
adcl
jne
insl
scas
daa
gs
push
sbb
test
inc
mov
or
sub
sbb
sub
sub
movsb
mov
ja
outsb
setae
les
add
mov
cmp
retw
and
aam
neg
add
mov
mov
and
imul
mov
pop
xor
out
mov
icebp
sbb
nop
repz
pop
repz
adc
sbb
add
add
add
adc
ja
jecxz
inc
jno
and
repnz
sbb
adc
sbb
mov
cmp
xor
daa
adc
movsb
xchg
adc
cmp
mov
cmp
add
movsb
inc
movsl
sbb
lahf
cli
outsb
push
adc
pop
mov
loope
and
lahf
jecxz
cltd
xor
mov
jecxz
dec
mov
stos
inc
popa
mov
faddl
mov
insb
lods
ret
and
push
ffree
rolb
push
pop
push
ret
sub
jg
mov
xor
push
dec
scas
icebp
pop
push
xor
clc
dec
and
sbb
mov
jae
mov
push
loope
in
cltd
in
or
add
mov
out
addb
xlat
xor
int
add
lret
push
ss
sahf
mov
icebp
jmp
adc
sahf
mov
das
out
js
push
sub
xor
mov
adc
scas
adc
inc
xchg
cmpsb
cli
xor
jns
dec
mov
dec
mov
in
pop
push
and
xor
add
xchg
fisubs
pop
jns
xchg
sbb
inc
push
fdivrs
ja
js
mov
jo
pop
dec
jbe
dec
adc
lods
nop
cmpsb
dec
mov
popf
mov
add
and
lcall
icebp
and
xor
add
stos
fwait
out
and
jmp
adc
sub
stos
insb
inc
leave
lds
repnz
mov
lea
inc
xlat
mov
imul
daa
push
insb
and
lock
cs
dec
nop
push
stc
inc
adc
mov
scas
cmp
shll
dec
pusha
rolb
cmp
sub
and
cmp
pop
lret
inc
push
sub
leave
pop
push
jecxz
pusha
inc
fwait
sbb
xchg
adc
add
xor
adc
and
sbb
or
mov
lcall
and
out
fadds
pop
stc
lcall
mov
inc
xchg
and
jl
push
out
push
or
fstl
mov
loope
inc
xlat
adc
pavgw
add
add
sub
xchg
pop
je
mov
dec
mov
insb
mov
adc
and
daa
xor
push
cmp
pop
xchg
mov
jns
outsl
push
push
scas
pop
je
cmpsb
inc
outsb
mov
xor
mov
mov
dec
fstps
aam
or
add
mov
hlt
and
test
outsb
dec
sub
sbb
jecxz
testl
mov
cltd
cmp
enter
pop
in
jnp
and
jge
cmc
mov
loope
push
xchg
lods
push
jae
cld
inc
mov
sbb
sub
or
aas
sbb
jecxz
into
jle
dec
sahf
mov
out
xor
out
pushf
adc
mov
xor
stos
lret
int
mov
mov
pusha
rorb
mov
push
subl
sar
mov
pop
jl
lahf
outsb
cmp
xchg
dec
out
or
sbb
xor
int
outsl
xchg
adc
fstpl
std
ror
xor
insl
jns
push
inc
adc
into
add
mov
inc
loope
cmpsl
jg
shr
inc
mov
mov
cs
or
cld
mov
xor
mov
jl
sub
ret
or
fldenv
mov
das
fisttpl
subl
sbb
lods
lds
jecxz
mov
mov
jl
mov
pop
iret
and
mov
xor
dec
int
and
ss
aad
js
out
dec
add
xchg
ffreep
negl
cld
addr16
adc
jne
mov
inc
mov
call
jp
pop
and
sub
mov
inc
add
das
xchg
in
subl
repz
mov
movsb
jo
xlat
sub
add
mov
imul
sbb
jp
lds
push
pop
out
mov
or
and
push
fsubrl
pushf
shll
rclb
adc
cmp
dec
jl
mov
xchg
pop
sbb
add
pushf
pop
add
out
or
mov
and
mov
mov
xor
lret
lahf
jae
daa
das
adc
lret
xchg
imulb
paddsb
icebp
and
mov
cmp
inc
shlb
pop
arpl
fwait
add
and
pop
mov
inc
xchg
mov
add
cwtl
add
or
sbb
mov
or
add
int3
pop
sub
in
fldl
shrb
pop
or
jbe
jbe
cmp
adc
fdivr
mov
fstpl
cs
inc
or
leave
push
js
dec
shrl
cmp
dec
and
push
push
or
jecxz
popa
pop
dec
clc
pop
push
cmp
mov
adc
add
lods
lret
push
xor
repz
and
rcrl
mov
xchg
adc
inc
out
jns
sbb
flds
sbb
syscall
jae
xchg
cmpsl
and
pop
into
sbb
ja
cwtl
pop
std
les
pop
cmp
adc
pop
cmp
shrl
sbb
cmp
outsl
sub
pop
rorb
and
icebp
xchg
sbb
popf
int
inc
int
mov
ss
push
and
loopne
sti
add
sub
sbb
call
push
xorl
jae
cli
cmp
mov
inc
mov
push
aad
jns
adc
xchg
push
stc
and
cmpsb
cs
push
je
test
faddl
popa
mov
cltd
mov
dec
or
lods
stos
cmpsl
adc
mov
xchg
bound
pop
cmp
or
mov
or
test
fs
mov
cmp
sbb
and
in
sub
jno
push
adc
push
sbb
push
xchg
popf
and
rcrb
add
cmpsb
mov
leave
push
stc
in
int3
sbb
cs
push
ljmp
gs
ja
pop
push
icebp
add
add
cmpsb
dec
loop
lret
add
mov
inc
add
xor
aas
push
adc
rcrb
inc
dec
push
dec
pusha
outsb
mov
movsl
sarl
and
xchg
cwtl
xchg
js
mov
xlat
mov
or
out
scas
mov
ss
insb
fwait
test
xor
add
imul
ret
sbb
sbb
and
or
cmp
push
aaa
es
xchg
mov
ret
lods
and
xor
pop
test
mov
dec
fsubs
aad
gs
jecxz
add
push
pop
dec
sub
pop
push
cltd
ret
dec
inc
cmpsb
mov
jp
xchg
inc
mov
lock
stos
andb
test
ret
jge
incb
sbb
xchg
inc
or
jnp
outsb
adc
pop
mov
cld
pop
mov
in
lret
fsubl
mov
int3
and
int
addr16
popl
aas
scas
je
iret
cmc
sub
mov
and
cmpb
mov
and
adc
arpl
add
js
aam
orl
or
pop
mov
dec
stos
push
cmpsb
stos
fstpl
ja
sub
dec
leave
scas
int3
push
cmpsl
inc
enter
jl
movsl
add
adc
mov
sub
outsl
imul
sub
or
shll
inc
and
jmp
mov
inc
add
enter
and
cmp
stc
lcall
mov
mov
test
jl
or
jne
jmp
mov
jge
mov
adc
inc
push
sbb
jmp
xchg
test
lret
pop
stos
scas
jnp
adc
mov
dec
sbb
loop
mov
loopne
stc
mov
sub
adc
addr16
mov
xchg
int
jne
mov
sbb
xchg
sbb
outsl
shlb
mov
fistpl
push
out
inc
cmc
mov
sub
xor
movsb
insb
push
jge
and
add
sbb
imul
push
icebp
xchg
xchg
mov
and
mov
in
test
or
mov
adc
cmp
cld
dec
mov
push
sub
lds
inc
inc
xchg
imul
inc
aad
lahf
pop
or
pop
pop
aad
inc
cmpsl
stc
mov
imul
out
stc
xchg
cmp
push
inc
jmp
add
test
adc
pop
cmp
push
leave
roll
cli
aad
mov
xchg
outsb
push
loope
lods
stc
sbb
lds
adc
jge
sbb
jne
in
sbb
mov
inc
pop
out
stc
int3
cltd
or
adc
push
adcl
lret
imul
in
add
push
inc
mov
mov
aad
fs
adc
sub
ljmp
add
pop
add
push
mov
inc
jle
loop
adc
out
cmp
stos
push
add
adc
ret
cwtl
inc
sti
scas
and
push
adc
in
jl
mov
ja
push
add
mov
das
and
adcl
sub
cmc
jmp
mov
inc
stc
fiaddl
jge
mov
dec
add
fcoms
sbb
sub
out
mov
add
xchg
aad
push
outsl
insb
push
mov
aad
pop
hlt
jg
cli
adc
icebp
aam
pop
or
xor
and
push
inc
rorl
pusha
jecxz
dec
push
dec
mov
mov
push
mov
cltd
out
inc
aaa
fisubrs
mov
insl
add
fidivl
mov
sbb
sarl
imul
mov
imul
sti
sub
lret
mov
xorb
loope
sub
pop
mov
xchg
lds
shrl
xor
lret
and
pusha
inc
ret
push
cmp
mov
gs
imul
jmp
dec
das
outsb
idivl
lods
sub
js
idivb
lahf
int
repz
cmc
out
mov
popa
cmp
mov
lret
fwait
push
cmp
cmp
jne
bound
mov
loope
clc
mov
xor
xchg
outsl
loope
aam
popw
into
cmp
sbb
imul
lret
mov
fdivs
pop
insl
stos
cmc
hlt
and
mov
jae
cld
adc
inc
inc
ficoms
push
jnp
push
data16
inc
int3
cli
pop
inc
adc
lahf
repz
push
je
rorl
subl
add
movsb
mov
loopne
std
jb
shlb
mov
fildll
aas
bound
push
add
rorl
add
addr16
add
add
mov
sub
jnp
mov
cmp
mov
pop
mov
in
jl
or
pushf
int3
fmull
enter
add
adc
adc
outsl
popa
cs
sarb
into
add
mov
popa
sti
or
fdivl
scas
aam
mov
xchg
xlat
add
sub
test
sub
sub
xchg
and
nop
aas
xor
or
adc
inc
jg
ja
xchg
dec
aaa
cmp
sarl
adcl
xor
dec
mov
mov
ficoml
loope
outsb
in
out
sahf
push
inc
or
adc
sbb
push
mov
xor
in
xor
cmp
in
out
xchg
add
icebp
and
adc
dec
pop
call
pop
ret
pushf
cs
jo
into
pusha
sub
outsb
nop
inc
jmp
dec
std
mov
jnp
sbbb
and
ret
mov
jno
xchg
rorb
xchg
jmp
pop
and
lds
imul
cmp
adc
xor
repz
xchg
das
test
pop
jbe
jmp
xchg
out
add
and
push
mov
dec
push
or
cltd
xlat
xchg
les
or
imul
sbb
xor
add
popf
pop
movl
ja
mov
mov
insl
inc
jle
loope
mov
jge
ja
add
add
inc
mov
jo
push
and
test
dec
jmpw
in
rcll
ficomps
call
dec
mov
mov
aad
enter
js
outsb
mov
sub
stos
pop
add
ja
sahf
mov
and
je
add
out
pop
push
into
movsl
xchg
insb
es
sbb
hlt
fisttps
sbb
jg
notl
xor
ror
daa
mov
or
adc
cld
and
mov
xor
xchg
out
cmpsl
push
inc
lds
roll
test
sbb
add
icebp
outsb
xor
and
add
leave
test
add
push
shr
popf
stos
sti
mov
dec
and
dec
fs
add
outsb
aam
pop
mov
add
mov
rcrb
add
xor
push
in
insb
mov
das
dec
lods
jb
inc
pop
xchg
ja
repz
notl
insb
in
fsubl
jl
jno
jg
ja
sub
inc
add
jle
or
mov
add
xor
insb
inc
in
or
enter
fsubp
push
push
popa
inc
xor
pop
ficoml
test
rcrl
popf
mov
decl
xor
inc
test
cmpl
enter
push
loope
adc
ret
xchg
hlt
sti
popa
pushf
pop
ljmp
push
sub
out
clc
jno
sbb
ja
adc
dec
pop
mov
and
addr16
inc
mov
mov
inc
int
cmp
nop
xlat
jl
pushf
jle
icebp
and
loopne
dec
sbb
cld
cmpsb
jmp
stc
add
and
dec
inc
stos
insb
in
or
repz
adc
aad
pop
insb
add
cmpsb
push
out
std
insb
mov
push
sub
jbe
xchg
hlt
push
fisttpll
pop
pushf
inc
mov
push
mov
adc
fiadds
or
rorl
adc
jg
mov
mov
inc
out
int3
push
cmp
int3
test
adc
mov
or
cld
pop
sub
inc
push
aas
add
out
shll
or
and
add
dec
mov
and
shl
lds
add
adc
jo
aad
pop
cmp
dec
mov
xchg
xchg
stc
ret
rcl
inc
cld
dec
sub
jne
imul
in
sbb
add
das
lahf
out
inc
push
cmp
popa
xchg
iret
push
or
mov
fisubs
sarb
mov
imul
xor
jns
lret
xchg
sbb
gs
lcall
sub
pop
inc
cmpsl
pop
mov
jo
ret
subl
push
add
int3
out
pop
and
cmp
hlt
xchg
cs
dec
mov
pop
xchg
clc
dec
int
cmp
scas
pusha
push
leave
push
push
mov
das
mov
cmp
xor
xchg
lea
push
leave
mov
dec
push
push
fs
pusha
or
inc
mov
mov
dec
insl
addl
jecxz
in
sub
enter
arpl
fcomps
mov
sbb
rcl
add
inc
mov
outsl
push
xor
sbb
repz
jl
cmp
jbe
or
stos
xor
xchg
out
xor
push
js
or
xor
jno
inc
aad
fucompp
into
sbb
loope
clc
sbb
sbb
add
loope
xor
test
and
imul
pushf
mov
dec
js
cwtl
jno
ret
and
jns
fs
pop
bound
adc
jno
rcrl
and
lret
leave
out
subb
test
pop
fdivl
add
pop
jno
addr16
sub
leave
andl
fcompl
int
and
xchg
fldt
adc
add
loope
insb
lcall
push
mov
pop
pop
jg
addr16
lods
aam
mov
xor
and
sbb
mov
inc
cld
icebp
fucomp
push
lea
scas
xor
stos
lcall
lcall
lcall
es
sub
push
in
mov
nop
dec
mov
jg
adc
cwtl
jge
xlat
dec
aad
push
in
inc
jb
lahf
pop
cmp
rep
mov
pop
pushf
pop
or
sti
jnp
push
leave
adc
repz
or
push
or
das
cmp
outsb
aad
jmp
push
out
jmp
and
and
dec
mov
push
jecxz
mov
jge
pop
mov
inc
outsl
and
sti
push
xchg
les
jo
ss
loope
icebp
mov
and
cs
roll
lahf
pop
mov
xor
aaa
adc
or
add
dec
aaa
mov
mov
inc
in
mov
mov
bound
add
sub
imul
movsl
stos
pushf
fcmovne
sahf
mov
sbb
and
xchg
imul
xchg
adc
xchg
jnp
test
loope
cs
adc
sbb
lahf
inc
fs
rclb
dec
out
xchg
imul
ficoml
push
out
cld
insl
lret
cmp
jns
test
icebp
add
shr
insb
test
movsb
std
fwait
outsl
xor
and
shll
mov
dec
ja
xchg
xor
adc
and
push
xor
addb
inc
xor
and
push
sbb
addl
aad
nop
xchg
pop
add
jae
sbb
cs
js
fadds
lea
scas
sbbl
test
push
jmp
push
inc
aam
shrl
adc
bound
push
mov
add
adc
pop
lahf
or
and
xchg
clc
je
int
daa
mov
push
popf
inc
push
cs
xchg
arpl
dec
js
outsl
lahf
cli
push
or
xor
xchg
shlb
xor
pop
dec
shrl
jp
inc
jnp
rolb
mov
pop
aaa
mov
scas
dec
jl
or
test
dec
ljmp
xchg
lods
cwtl
mov
call
sbb
add
or
push
cld
aad
pop
xchg
sub
inc
inc
testb
xchg
js
scas
jl
movsl
out
and
cmc
mov
inc
dec
aaa
mov
hlt
out
dec
mov
imul
add
xchg
adc
dec
sub
outsb
out
jecxz
or
pop
in
xchg
and
add
pop
inc
pusha
mov
js
xlat
cs
pop
xchg
ljmp
inc
std
ds
pop
sub
mov
les
leave
ss
or
and
sub
mov
pushf
arpl
arpl
arpl
sahf
cmp
add
call
jecxz
daa
pop
push
push
rcrb
nop
je,pn
insl
cli
sub
push
ds
scas
rcr
jnp
xor
mov
xchg
ds
add
cmp
dec
or
cs
mov
jbe
push
cs
xchg
sub
or
dec
in
or
outsl
adc
adc
rcrb
jge
nop
add
out
aaa
push
xor
fisttps
mov
push
insl
out
sub
rorb
and
push
inc
push
xor
insl
mov
or
mov
pop
lds
loopne
xor
leave
orb
jp
ret
mov
out
push
hlt
adc
jmp
vdivss
dec
stos
ljmp
sub
lea
mov
xor
jo
ret
js
sub
mov
test
into
and
ds
jl
cli
adc
lock
adc
mov
test
stc
ljmp
lods
and
push
sub
enter
mov
xchg
cmp
fstpl
mov
testb
jmp
mov
jecxz
sub
arpl
imul
fs
cmp
scas
jmp
jnp
pop
xchg
imul
push
xchg
xor
in
insb
aam
filds
mov
push
sti
or
mov
jecxz
into
dec
inc
ljmp
or
add
mov
es
sub
jmp
lcall
cmp
js
icebp
pop
sbb
ds
and
mov
sub
je
add
mov
jns
dec
sub
xorl
mov
xor
xlat
lock
imul
adc
shrl
xchg
outsl
addr16
pop
ret
mov
xchg
adc
jmp
inc
adc
sbb
mov
stc
push
out
lret
pushf
lds
lret
add
inc
or
int3
loope
popa
and
adc
cmc
scas
mov
scas
mov
pop
inc
int
lret
sbb
mov
adc
call
sbb
or
and
xchg
lods
dec
hlt
push
arpl
cmp
outsl
push
sub
jecxz
mov
rdtsc
andb
or
int
imul
dec
push
jecxz
loope
lret
fldl
popl
dec
mov
add
ja
aas
out
mov
jne
or
mov
fcmovnb
ret
mov
or
fists
push
pop
push
pop
bound
sub
push
cltd
mov
aad
gs
jae
lret
mov
mov
mov
cmp
lret
into
adc
mov
cmp
add
into
sarl
pop
xor
mov
dec
adc
pusha
js
repz
jno
scas
mov
ficoml
imul
mov
xor
push
sbb
cmc
mov
mov
das
insb
aam
sub
xchg
jb
push
push
loopne
insb
xchg
aam
rclb
ja
fistpl
sbb
es
mov
aad
fsubrl
pop
addl
stc
cs
xchg
push
mov
test
icebp
mov
and
dec
dec
fwait
movsb
das
shrl
in
inc
or
repz
aaa
les
push
push
aas
fcoms
dec
call
xchg
mov
scas
pop
ss
shrl
scas
into
xchg
fadd
push
dec
inc
decl
xchg
jmp
out
clc
jmp
stc
inc
shr
cld
adc
mov
dec
mov
xchg
cmp
fsubrl
xor
popa
je
imul
mov
daa
call
shll
ja
cld
mov
stc
cmpsb
inc
mov
xor
cwtl
inc
lret
into
adc
sbbb
stos
xchg
mov
in
scas
imul
sbb
hlt
add
and
sub
adc
inc
repz
dec
cmp
mov
leave
cmc
rol
mov
xlat
insb
xor
mov
inc
mov
ret
movsb
mov
pop
nop
inc
jmp
pop
inc
cld
sarl
xchg
mov
jnp
data16
push
add
imul
clc
outsb
pushf
into
cmp
xor
inc
and
mov
jmp
bound
aad
ror
jb
sbb
outsb
and
push
and
add
add
mov
mov
lcall
pop
add
pushf
xchg
rcrb
out
clc
je
jb
sbb
aas
mov
imull
fidivrl
lds
scas
movsb
mov
push
push
adc
inc
test
inc
and
sub
and
cli
dec
out
mov
sbb
xchg
mov
inc
ror
popf
stos
sbbl
inc
roll
stc
mov
aad
xchg
fs
out
dec
test
call
aas
int
cli
and
popf
cld
das
inc
insb
mov
test
iret
sahf
in
xor
jl
out
dec
mov
shlb
scas
add
inc
cmp
or
nop
enter
pop
movsb
aas
mov
add
cmp
ds
ds
stc
push
pop
inc
mov
sub
and
mov
or
xchg
jne
aad
cmpsl
inc
pop
mov
inc
je
push
jp
xchg
mov
scas
add
sub
mov
sub
lods
adc
lret
cmp
in
mov
mov
arpl
dec
idiv
add
lret
mov
lahf
fscale
pop
je
jns
push
add
inc
cmpsb
mov
cltd
inc
xlat
dec
sbb
aad
pop
lcall
les
ret
movsb
adc
inc
adc
jp
xchg
cmp
jg
mov
daa
add
adc
mov
xor
push
je
push
and
mov
mov
sbb
mov
dec
xor
inc
jp
fwait
adc
push
adc
xor
loopne
stos
sbb
shrl
dec
add
pop
cmp
cmp
push
imul
aam
xor
aad
aad
loope
cmp
mov
mul
movsl
mov
xlat
lahf
cmpsl
cmp
add
xchg
sti
xchg
push
mov
in
cmp
push
sar
adc
mov
loop
insb
sbb
mov
ja
fmulp
enter
test
data16
mov
dec
and
mov
in
lods
and
lret
jns
mov
sub
nop
lret
xor
add
fs
iret
cwtl
dec
mov
add
jno
lahf
rclb
cs
test
and
jp
stos
ret
test
sahf
aam
test
pop
xorb
ret
rcll
xchg
rorb
dec
sbb
sub
addr16
ljmp
mov
sahf
sub
cmpsb
lds
aad
mov
jmp
cmp
leave
lods
xor
or
scas
les
cmc
bound
icebp
xchg
cmc
adc
pop
add
es
jmp
iret
jmp
inc
out
or
xor
ficoml
jo
sahf
cmpsb
ss
pop
and
sbb
adc
jb
imul
bound
ljmp
fwait
imul
imul
mov
cmp
subb
lcall
cmp
cli
clc
push
push
inc
lahf
cs
sarl
fwait
mov
mov
push
mov
aam
jo
notb
push
je
push
cmc
sbbl
movsb
cmp
outsl
push
dec
shlb
xchg
std
repz
cs
push
sbb
pop
inc
jae
lea
cmp
das
jno
push
jmp
aas
call
or
in
inc
mov
cmp
dec
adc
inc
or
push
mov
data16
inc
xor
cwtl
fldl
rcr
mov
mov
lcall
add
sub
aas
pop
mov
lahf
cli
mov
mov
ret
push
push
test
sub
sbb
ja
mov
or
imul
aas
lock
jne
mov
stc
xor
sub
dec
push
imul
into
pop
and
mov
aad
cmp
jecxz
loopne
mov
imul
mov
jno
xor
pop
outsb
aad
sub
xor
cmp
imul
pushw
xlat
mov
jno
loopne
and
int3
add
add
out
xor
push
sbbb
jecxz
sbbl
adc
cmp
sub
sub
insb
mov
push
lcall
or
sbb
insl
scas
icebp
xchg
pop
sbb
add
frstor
fisttps
rol
sbb
mov
fimuls
pop
sbb
aad
push
cld
dec
mov
lcall
lret
or
test
and
jnp
je
test
rolb
mov
push
sub
dec
pop
mov
inc
jmp
daa
inc
pushf
das
test
add
jno
add
jp
mov
outsb
inc
adc
sarl
ljmp
xchg
push
shlb
icebp
sub
stos
rolb
sub
scas
into
add
cmp
fbld
adc
sbb
clc
loopne
cli
push
mov
push
into
fsubrp
sub
cmp
aad
scas
aam
cmc
sub
add
pop
pop
shrb
jecxz
inc
fwait
sub
je
push
in
movsb
mov
xor
or
mov
and
cmp
daa
pop
insl
loop
mov
inc
jecxz
mov
sub
pop
pop
pushf
clc
push
ret
and
mov
mov
test
xlat
sub
cmc
add
int
mov
dec
inc
clc
adc
loopne
cmp
mov
lcall
add
add
xor
mov
push
mov
and
ret
dec
sbb
fdivrl
inc
popa
fsubl
cmp
movsl
cmpsb
xor
mov
test
jno
push
xchg
inc
push
rorl
lds
test
mov
adc
out
clc
jge
aam
or
insl
or
outsl
jg
sbbl
cmc
cwtl
dec
shlb
inc
inc
cmp
stos
pushf
in
xor
movsl
pop
nop
mov
push
lcall
jae
jne
out
sahf
inc
scas
js
pop
dec
sbb
sti
pusha
pop
fcom
push
test
lcall
jp
in
xor
dec
outsb
xchg
adc
fdiv
inc
mov
inc
inc
ljmp
stos
ret
and
add
fildll
xor
mov
test
in
add
das
aad
adc
push
rolb
pop
xchg
dec
cmp
push
sahf
add
mov
cmp
mov
clc
add
xor
sbb
and
add
mov
jae
jnp
ss
inc
int
mov
mov
push
push
in
loopne
mov
stos
cmp
sar
inc
mov
xor
or
adc
adc
stos
dec
and
dec
mov
imul
fdivrl
mov
in
les
stos
push
rolb
jns
outsl
xchg
cmp
jae
push
add
sub
inc
xor
fdivl
dec
cmp
sub
lods
jns
lret
push
in
and
das
or
push
or
dec
inc
shrl
aaa
fisubrs
and
iret
add
and
mov
icebp
xchg
mov
push
in
loopne
stos
or
and
mov
ja
fcomps
std
and
int3
icebp
loope
mov
test
dec
jne
xchg
jno
cmc
or
push
decb
aad
clc
dec
xchg
mov
les
inc
leave
mov
jno
and
lcall
mov
icebp
inc
mov
xor
lcall
push
pop
sub
add
jae
jecxz
orb
or
or
cwtl
push
adc
pop
lret
xorb
mov
fimuls
mov
add
mov
sahf
in
es
aas
mov
icebp
and
mov
pop
xor
xchg
fiadds
out
bound
test
sub
xlat
bswap
push
mov
xchg
leave
lahf
imul
and
aas
lds
sub
insb
fs
daa
in
sub
and
cmp
xor
pop
dec
imul
xor
ret
xchg
adc
int
mov
and
mov
and
sbb
push
push
push
cli
xor
or
pusha
scas
and
in
lret
sbb
lds
sbb
jbe
aam
rcll
mov
push
sbb
dec
imul
outsl
cmpsl
ret
popf
mov
xchg
cmp
sub
adc
push
cmc
aaa
cwtl
push
or
sbb
fcmovbe
das
jns
inc
adc
sbb
pop
in
inc
ja
ret
pop
pop
xor
mov
mov
int3
jmp
xchg
xlat
jmp
outsl
scas
in
test
sbb
into
dec
mov
pop
xor
pop
mov
fstpl
mov
cltd
or
ja
xchg
mov
mov
xchg
ja
mov
shr
mov
sbb
and
cs
popf
add
lods
js
add
cmp
mov
inc
jo
inc
push
insb
aad
push
fdivrs
jns
cld
or
adc
dec
lds
push
adc
sub
sarb
loop
and
leave
xchg
cmc
rcr
sahf
in
mov
mov
lret
outsl
jg
das
add
mov
mov
mov
call
xchg
adc
add
sti
mov
and
imul
aaa
and
and
stc
pushf
int3
jmp
mov
mov
mov
mov
insb
jnp
scas
push
mov
inc
mov
aam
xchg
inc
push
jge
push
push
arpl
pushf
pop
adc
js
adc
into
and
mov
int3
loope
pop
push
je
aad
loope
pop
and
pop
lahf
adc
sbb
pop
in
jne
stos
inc
push
push
sti
push
sbb
stc
lea
sbb
mov
push
mov
data16
jae
hlt
sub
ret
fdivrl
lahf
sub
sbb
push
and
lcall
cli
adc
adc
mov
and
popf
leave
dec
xchg
pop
clc
cmc
cli
pop
inc
adc
repz
pop
sti
pop
repz
pop
xlat
inc
lcall
sbb
out
inc
inc
push
mov
mov
mov
sub
xchg
push
or
jp
jns
push
test
or
cwtl
lret
scas
sahf
fwait
ds
jno
lock
pop
imul
mov
stc
add
mov
add
and
ret
mov
test
adc
xchg
or
mov
jmp
mov
adc
cs
pop
jb
cmc
xor
fs
aad
jle
mov
sub
pop
and
fdivs
aad
inc
push
and
sbb
je
and
cltd
or
stc
loope
aad
and
and
int3
cmc
xchg
cs
add
xor
dec
sbb
push
mov
sahf
lret
dec
int
pop
outsb
pusha
dec
aad
xchg
pop
dec
pop
enter
or
int
or
inc
cmp
mov
add
lret
outsl
dec
in
sub
mov
loope
aam
cmp
shll
into
mov
xchg
sub
ss
les
movsb
cmp
roll
and
iret
sub
and
push
jbe
add
repz
nop
inc
jae
push
jl
fistps
fcomps
mov
adcl
jmp
push
pop
dec
push
cmp
sub
maxps
lret
mov
xlat
fiadds
lods
sub
pop
mov
fstps
or
jbe
aad
ja
lret
ret
inc
sub
pop
jp
push
pop
sub
fiadds
leave
sar
int3
and
hlt
insb
rolb
cmp
add
in
mov
call
jmp
add
jmp
sub
imul
sbb
mov
jmp
dec
jl
inc
xchg
stc
shlw
push
and
outsb
cmp
sbb
pushl
scas
pop
lahf
pop
pusha
adc
fbld
xor
mov
clc
and
bound
xchg
or
mov
adcl
out
nop
lcall
mov
pop
pushf
push
mov
loopne
xor
inc
call
int3
jl
js
sbb
add
mov
int3
jecxz
mov
mov
pusha
and
mov
xlat
rorb
cltd
fiaddl
mov
ds
loope
mov
lret
insb
cmp
xlat
stos
lods
ds
popf
ret
mov
jmp
aad
lret
out
idivb
inc
push
mov
lret
jg
and
or
leave
pushf
mov
and
inc
and
pop
scas
or
das
cmp
xor
outsb
and
jb
loopne
adc
or
mov
incb
mov
aas
ss
aas
movsl
movups
xchg
jb
insb
cmp
cwtl
in
mov
divl
imul
repnz
adc
dec
adc
and
adc
cmp
add
sbb
mov
mov
lcall
les
pop
cmp
pusha
jne
xchg
push
icebp
and
icebp
fiaddl
lods
mov
stos
inc
add
cmp
addr16
addr16
xchg
mov
add
adc
call
into
sbb
xor
repnz
dec
rclb
xchg
push
push
scas
jecxz
inc
decb
cltd
xor
mov
push
jo
mulb
push
mov
insl
jo
dec
and
push
push
xchg
shlb
lahf
xchg
sbb
repz
mov
xor
sbb
or
mov
cs
mov
imul
adc
push
nop
jp
lret
jnp
scas
sbb
pop
cmc
push
std
mov
inc
sbb
push
mov
std
cmpb
imul
imul
pusha
insb
lcall
or
add
lods
xor
sub
sub
lods
ss
adc
lahf
xor
xlat
inc
mov
and
and
fdivl
add
test
lds
les
in
mov
mov
inc
cmpsb
push
inc
xchg
sbbb
xchg
fwait
stos
add
adc
sbb
insl
ja
inc
pushf
mov
in
fsubrl
push
and
mov
mov
push
xchg
pop
shlb
jg
push
xor
jns
aam
or
rorl
add
call
cltd
push
adc
sbb
imul
ret
cmp
inc
pop
fs
mov
mov
aam
test
xchg
jne
repz
sbb
ss
mov
add
xor
xlat
inc
jb
dec
jae
imul
divb
push
jae
pop
in
imul
mov
pop
in
and
dec
mov
mov
inc
adc
mov
push
adc
dec
ja
mov
addb
and
jl
mov
into
sub
leave
inc
mov
jg
mov
movsb
mov
push
push
cltd
cmp
lcall
adc
insl
xchg
push
out
dec
jae
and
jo
mov
mov
ret
icebp
xchg
into
jnp
sub
fmulp
inc
das
and
out
icebp
mov
inc
xchg
sub
shrb
sti
lahf
mov
in
cs
and
add
stos
bndldx
ret
insl
lods
ja
mov
leave
add
mov
push
inc
mov
adc
movsb
fisubrs
int3
jnp
xor
or
std
and
stos
push
rcr
fcomps
inc
mov
pushf
dec
push
pop
out
xor
mov
ss
inc
aad
push
cmp
andl
sti
lahf
mov
and
inc
pushf
pop
jbe
test
cmp
jnp
bnd
aad
mov
dec
cmp
mov
bound
inc
ljmp
xor
push
faddl
mov
pop
fildl
or
dec
jne
pop
ret
jecxz
jno
dec
or
mov
mov
adc
dec
mov
mov
mov
cld
test
scas
icebp
int
pushl
push
mov
inc
fiadds
mov
cltd
pop
push
clc
cmpsl
dec
movsb
adc
add
ljmp
or
cs
hlt
mov
das
out
xor
inc
jae
bound
fstpt
push
add
mov
pop
and
mov
and
cmp
mov
icebp
jle
sub
enter
and
aam
push
xor
test
push
and
sbbb
or
mov
movsl
dec
push
mov
inc
sti
mov
aaa
mov
and
mov
jle
lcall
mov
inc
test
lcall
dec
jns
xchg
outsb
jo
je
test
aas
adc
orl
das
popa
dec
mov
xor
iret
cmp
test
mov
stc
or
popf
divl
jnp
or
ja
add
pop
sbb
in
jecxz
xchg
aad
adc
loope
loop
jmp
leave
ret
adc
rcrl
int3
jge
loope
dec
add
stc
inc
call
shrl
sub
sub
inc
dec
lea
sub
fsub
shll
js
xchg
sbb
das
adc
lret
jl
sub
mov
enter
jns
fs
add
cmp
aad
inc
jmp
dec
ljmp
incl
add
push
mov
adc
and
inc
inc
mov
jmp
addb
psrlq
sub
pop
outsl
pop
loopne
jecxz
stos
aas
inc
lahf
push
pop
mov
add
push
iret
and
mov
lret
cld
loope
into
and
add
xchg
mov
ret
mov
xor
xchg
das
mov
fmul
stos
popa
sbb
mov
xchg
stos
add
out
adc
dec
push
insl
jne
cmc
xor
sub
add
or
cmp
adc
into
orl
mov
movsb
inc
jecxz
repnz
xor
leave
add
rcrb
loopne
addr16
mov
sub
or
add
pusha
lock
push
cs
enter
adc
fdivp
pop
repnz
sbb
or
test
or
jns
jns
add
and
imul
les
int3
cmpsb
cmp
push
jg
int
pop
push
and
add
mov
or
pop
cs
push
jae
adc
or
pop
in
test
pop
fs
xor
movsl
stos
sub
jmp
stos
xorb
xchg
sysenter
jmp
adc
sbb
and
xorl
jge
push
psrld
jne
xchg
lret
in
xchg
lahf
imul
sbb
mov
and
mov
das
sub
and
mov
pop
mov
ret
lods
sub
pop
sahf
popa
sbb
and
xchg
test
sbb
jmp
cmp
popf
cmp
sub
sti
iretw
int
push
add
add
mull
fistpl
and
mov
test
pop
test
insb
sti
xchg
push
repnz
dec
ljmp
add
int
xchg
jo
sbb
pop
in
movsb
mov
lcall
mov
xor
in
fcompp
add
adc
jecxz
or
pop
out
in
mov
inc
inc
pop
pushf
adc
outsb
xchg
loope
ret
push
adc
pop
mov
inc
movsl
loopne
ljmp
jmp
scas
stos
and
sbb
mov
int3
inc
es
mov
or
xchg
int
and
pop
in
mov
add
jb
sub
dec
and
movsl
jle
outsb
push
test
jo
add
or
push
pop
and
aaa
sti
stos
fcompl
pop
mov
in
and
pushf
or
inc
inc
fadds
mov
or
mov
inc
out
xlat
jo,pt
mov
incb
push
push
inc
fwait
push
into
mov
js
das
daa
add
sti
mov
negl
pop
cltd
out
mov
inc
fs
mull
fldl
cltd
mov
das
inc
scas
out
into
jo
lret
adc
lahf
adc
mov
fmull
out
add
sub
rcrb
mov
insl
pop
pushf
sbb
xchg
cmp
mov
mov
mov
mov
jle
outsb
jecxz
pop
ljmp
xor
dec
pusha
inc
std
xlat
jl
sbbl
xchg
push
int
and
mov
sub
test
loopne
addr16
fidivs
fstp
sbb
imul
les
shlb
sbb
mov
testb
scas
dec
imul
pop
std
inc
jns
mov
iret
or
and
pop
icebp
xor
mov
rcrb
das
pop
es
jb
cltd
pop
sbb
xchg
jo
jecxz
pop
mov
mov
xchg
and
jno
ret
adc
jno
in
mov
push
lcall
sub
jle
pop
mov
gs
dec
es
add
adc
lret
and
jmp
xor
pop
fimull
adc
mov
xor
and
push
mov
lahf
xor
sub
sahf
mov
inc
sub
and
adc
push
jnp
test
andb
dec
mov
xchg
mov
sbb
pushf
mov
mov
pop
and
aad
xor
inc
mov
jl
insb
xchg
loop
fisttps
mov
lds
shl
fwait
ret
xor
cmp
adc
lahf
mov
das
pop
clc
xchg
cmpsl
nop
jae
inc
add
mov
xchg
mov
add
xchg
stos
int
jae
or
pop
stc
movsb
cmp
push
push
in
scas
inc
loopne
jne
adc
pop
xor
js
imul
sbb
push
jb
mov
xor
cld
js
xchg
insb
lahf
fcom
or
xlat
cs
jmp
jle
pmulhuw
clc
test
cmp
pushw
ds
fcmovnbe
sub
mov
sub
mov
loope
mov
les
sbb
test
lds
ret
mov
push
mov
dec
mov
jmp
push
xor
and
outsb
sub
add
pop
cmp
outsl
out
xchg
sbbl
notb
gs
add
jbe
push
mov
pop
push
imul
mov
cmp
xchg
sub
aam
nop
inc
das
loop
jno
popa
daa
arpl
inc
out
add
lods
das
aas
sbb
and
loop
les
notl
mov
inc
lea
inc
xor
cmp
push
mov
arpl
dec
push
cli
sub
lret
dec
xor
sub
xchg
orl
inc
rorb
adc
call
lcall
xor
pushf
and
sub
fcomps
scas
inc
movsl
std
adc
lcall
dec
dec
movsl
xor
pop
mov
or
aad
and
movsb
std
or
push
in
sub
inc
dec
xchg
test
pusha
mov
stos
clc
cmp
push
bound
inc
popa
imul
mov
pop
add
pop
mov
inc
jecxz
pop
jmp
xchg
nop
insb
jo
ret
mov
xor
push
pop
xchg
ljmp
mov
std
pop
sbb
add
mov
add
mov
je
aas
test
jl
jne
or
and
jle
sbb
cmc
and
xor
lods
addl
test
cmp
icebp
loop
inc
dec
inc
pop
cmp
sbb
cmpb
sub
adc
dec
sarl
adc
in
or
cltd
daa
test
adc
adc
addr16
cmpsb
loope
jae
jnp
imul
add
test
cs
stc
jnp
leave
mov
mov
ror
in
and
xor
sti
sub
les
add
fisttpll
insl
pop
stc
cwtl
sahf
dec
push
imul
hlt
adc
pop
inc
stos
ds
xor
sub
sub
sbb
repnz
xlat
nop
mov
pop
jp
mov
add
daa
xlat
mov
dec
push
popf
jl
add
fdivr
mov
pusha
push
rolb
add
sub
lea
fstps
dec
xor
inc
adc
mov
pushf
xchg
dec
das
inc
jae
and
sub
repz
test
jns
hlt
cmp
push
xlat
rcl
and
pop
xchg
push
push
jl
dec
push
lock
dec
stos
push
inc
mov
xchg
cmc
and
pop
add
pop
push
xor
flds
stc
jmp
push
outsl
frstor
or
and
mov
pushf
mov
mov
jmp
add
inc
mov
pushf
or
or
mov
int
add
jmp
xor
fwait
pop
pop
or
mov
mov
xor
dec
dec
shl
pop
aad
aad
pop
mov
outsb
jnp
pop
jns
insb
je
mov
jmp
add
imul
lock
push
or
pop
icebp
adc
pop
call
and
mov
mov
mov
mov
pop
test
pop
sbb
xchg
ja
ret
xor
xlat
inc
cltd
dec
mov
jns
cmc
stc
cmpsl
cmp
out
push
lret
xchg
jns
adc
sti
or
hlt
lcall
or
or
mov
mov
scas
clc
ds
daa
push
adc
outsl
cli
out
clc
sbb
sbb
outsl
cmp
sbb
mov
pop
imul
movsl
sbb
inc
push
adc
mov
dec
xor
pop
xchg
pop
inc
cwtl
movsl
inc
outsl
movsl
xor
ljmp
adc
scas
fmull
ficoms
inc
imul
lcall
subl
add
adc
add
push
xchg
or
or
ficoms
push
int3
stc
adc
sub
repz
rclb
xchg
sbb
dec
scas
sbb
cmc
adc
cs
cli
clc
addr16
xlat
hlt
lahf
jp
inc
push
push
popf
aad
mov
and
scas
jno
sti
inc
mov
jmp
leave
subb
mov
and
push
jo
dec
jo
sub
mov
in
out
sbb
stc
subb
movsl
out
fdivrl
cmc
pause
mov
sti
pop
jmp
cld
mov
mov
ret
mov
repz
sbb
sbb
sub
test
push
add
loope
lcall
sub
push
ja
pop
inc
insb
and
shl
data16
lea
push
adc
xchg
int
sbb
cmpsb
mov
xor
lret
sub
mov
mov
mov
xchg
cmp
dec
push
and
mov
in
jns
sbb
rcll
xor
xor
repz
imul
xchg
sbbl
and
fists
dec
or
sub
jae
adc
add
or
mov
sub
xchg
dec
mov
arpl
repnz
popa
pop
push
xchg
lea
or
stc
ret
pop
les
and
inc
jmp
test
push
aad
test
fwait
or
cmp
ljmp
xor
repz
jns
pop
movb
shrb
sbb
or
cld
push
cs
fisubl
mov
xchg
add
arpl
adc
repnz
lret
ljmp
xchg
dec
mov
int
cs
lret
lahf
insl
ret
jne
movsl
and
insl
mov
cmp
mov
imulb
insl
xor
mov
in
jmp
ret
lret
xchg
lahf
mov
ds
popf
and
orl
or
inc
mov
or
mov
icebp
jecxz
jge
stos
push
lods
iret
loope
dec
aam
pop
ljmp
inc
inc
add
add
aas
jbe
add
es
dec
push
pop
adc
xorb
mov
fildl
sub
adc
xorb
nop
addr16
jb
sub
lcall
xlat
sub
es
les
pop
or
mov
adc
jae,pn
nop
pop
iret
inc
push
je
test
lock
test
push
fwait
dec
cmpsb
mov
dec
int
add
scas
orl
shrb
repnz
sar
xchg
aas
mov
out
jbe
outsb
mov
sub
add
orl
shlb
fistps
adc
fmuls
xchg
mov
scas
js
test
dec
ficoms
add
je
mov
rorb
lea
out
imul
cld
dec
mov
lret
add
pop
or
sub
cmpsl
mov
imulb
dec
xor
add
inc
ljmp
push
or
jo
adc
fldpi
lret
inc
cld
and
cmpsl
sahf
push
out
or
mov
push
or
jle
std
gs
cmp
sbb
and
sub
leave
std
adcl
and
mov
and
test
dec
mov
jbe
int3
pop
inc
test
cmp
and
bound
insb
data16
outsl
jbe
lock
push
adc
leave
mov
sbb
out
popf
add
stc
stos
add
cmpb
lret
pop
dec
and
mov
mov
shll
cmp
test
mov
xchg
enter
inc
jbe
int3
fadds
fstl
inc
or
push
or
xchg
mov
sub
faddl
mov
icebp
cmpsl
arpl
mov
push
sub
cs
and
push
adcb
fwait
shlb
jns
ss
push
jnp
loopne
dec
xor
pop
fadd
sbb
cmp
jle
mov
push
lea
call
ljmp
mov
jbe
mov
lahf
subl
sbb
hlt
mov
mov
xor
cld
dec
and
fisubl
fists
xor
lahf
push
xor
stos
pop
fldt
and
ret
in
mov
clc
jg
notb
ficomps
add
mov
test
scas
pop
in
aam
ret
cmpsl
sbb
mov
insl
jp
pop
sbb
push
sbb
add
push
std
insb
icebp
out
inc
pop
inc
push
gs
jb,pn
jmp
mov
add
enter
adc
stos
mov
mov
lret
push
jp
sti
jne
mov
cld
cmp
xchg
adc
sub
push
lock
testl
in
imul
cmpsl
sbb
je
pop
pop
sub
add
and
xor
sub
repz
hlt
sbb
jno
push
pop
add
pop
in
das
jp
inc
fsubp
mov
test
dec
insl
sbb
aam
xchg
clc
add
in
pop
imul
lret
dec
int
dec
mov
xchg
push
ja
outsl
lea
mov
andb
in
or
sbb
and
xchg
add
fcoml
inc
ss
xor
push
lods
sub
mov
ss
xor
xlat
and
mov
sub
or
cs
cmp
xchg
daa
outsb
or
daa
or
cmp
xchg
popf
ficomps
sub
lcall
mov
cli
dec
popf
cmp
loopne
or
and
es
roll
lret
adc
cltd
ret
and
sar
xchg
cmc
xor
sub
pusha
inc
mov
add
xor
sbb
dec
cmp
stc
sub
loop
pop
inc
cs
add
fidivrs
cmp
aad
sbb
jae
jae
adc
mov
add
sahf
add
movsl
jge
daa
push
pop
sub
fdivrs
xor
push
dec
push
stos
and
jge
or
lcall
pop
jns
xor
in
cli
and
and
mov
inc
push
insb
sub
js
cs
lock
mov
pushf
mov
mov
enter
push
or
xor
dec
stos
out
push
sub
add
ds
mov
adc
cmpsb
sarb
enter
or
lods
adc
sub
or
jnp
fdivrp
and
sub
aad
jecxz
lret
xchg
cmp
inc
inc
dec
leave
jnp
mov
test
rcrb
sbb
and
jle
inc
jo
hlt
insb
movsl
sarl
cmp
jns
ficoms
inc
cmpsb
lret
fsubrs
dec
mov
xor
data16
or
int3
lods
sbb
ret
js
inc
int
pop
in
mov
xchg
mov
add
sub
add
lret
jp
sub
std
push
xlat
movsl
fwait
mov
sbb
push
inc
movsl
inc
popf
add
jne
repnz
add
stos
xor
sub
ficoms
pop
shlb
jnp
dec
jge
aad
xor
sbb
leave
arpl
sbb
cs
imul
xchg
enter
sbb
pop
aam
insl
fdivl
scas
sbb
lods
dec
jns
jg
mov
mov
aam
imul
mov
adc
aaa
jne
or
adc
rorl
shrb
xor
mov
or
icebp
repz
cli
dec
and
into
pusha
std
push
ret
sbb
xor
mov
mov
push
sbb
repz
xor
push
jle
rclb
mov
pop
out
fwait
cmp
das
mov
inc
cs
pop
and
daa
clc
mov
sbb
fs
test
add
stc
stos
mov
mov
adc
pop
scas
push
mov
add
or
cs
xor
sbb
mov
xlat
les
shrb
or
add
aas
push
sub
inc
mov
sub
or
imul
pop
lock
jmp
ss
outsb
call
cwtd
or
pop
cmp
lahf
nop
je
mov
pusha
inc
xchg
in
insb
ds
fstpl
add
cmp
test
pop
rcrl
sbb
add
mov
push
stos
aam
xchg
repz
sbb
int
ss
lcall
or
cmp
adcb
jns
jmp
cmc
int
lret
mov
into
je
into
push
jecxz
cli
push
inc
jp
int3
test
jmp
inc
lahf
stc
enter
mov
cs
and
lret
pusha
lret
adc
xor
and
data16
mov
add
adc
aad
js
and
xchg
jnp
adc
sub
push
les
add
xchg
pop
jl
sbb
int
mov
sub
or
mov
lret
das
push
cmpsl
and
mov
jmp
pushf
jae
add
lcall
movsb
dec
leave
pusha
mov
xor
push
mov
orb
mov
insb
jl
sbb
xor
inc
pop
dec
rcrl
movsl
insb
mov
mov
out
push
jecxz
push
inc
push
cmpsb
xchg
push
mov
lret
fs
ss
adc
cmp
movl
fstpt
outsb
mov
or
xchg
mov
int3
int
mov
int3
stos
std
dec
push
popa
cwtl
xor
and
dec
or
dec
ret
call
sbb
cmp
mov
ficompl
add
mov
clc
scas
xchg
cmpb
dec
sbb
xchg
dec
push
pushf
outsl
inc
mov
outsl
mov
dec
not
stos
mov
cmp
xchg
jo
mov
int3
fstpt
mov
xor
shr
je
scas
push
dec
sbb
aad
fidivl
inc
and
lock
shll
inc
sbb
notl
adc
dec
popf
inc
fstp
xchg
sbb
mov
fstl
hlt
outsl
pop
stos
add
fsubrl
inc
mov
mov
sbb
sbb
cli
mov
inc
inc
dec
loope
mov
daa
rorb
das
lahf
in
lods
cmp
fwait
jge
and
popa
in
jbe
or
jle
dec
jmp
sub
mov
pop
ds
into
xchg
push
mov
or
add
loope
sub
aad
nop
push
and
add
push
fs
mov
je
sbb
xchg
gs
add
or
sbb
dec
jl
cli
call
imul
insl
lds
jnp
jl
ret
outsw
pop
adc
and
jne
push
lret
mov
aaa
or
mov
xchg
xor
ds
daa
pop
mov
add
mov
sub
enter
xor
or
fisubrl
sub
test
xchg
hlt
mov
pushf
mov
or
scas
push
repz
mov
add
push
adc
mov
push
cmp
lahf
int3
mov
js
rcll
jns
jno
ret
dec
test
divb
aad
ret
cs
pop
sbb
cmp
pop
pop
mov
aaa
push
outsl
add
rcrb
es
xlat
sub
call
shll
inc
xlat
int
push
and
inc
sbb
fmuls
xor
dec
or
in
dec
push
and
sar
xchg
adc
xlat
jg
imul
test
sub
sahf
mov
fs
mov
sub
or
scas
jl
movsb
mull
pop
cmp
or
outsl
xchg
mov
inc
aad
into
lock
divl
pushf
cmc
xor
mov
cmc
mov
push
or
shll
clc
push
in
les
jbe
dec
cld
les
and
mov
gs
cltd
push
cs
xchg
fs
sbbl
cld
inc
mov
ss
push
jl
roll
lcall
or
daa
and
out
aas
scas
das
imul
inc
xchg
addr16
mov
pusha
add
fsubrl
insb
xor
into
mov
cli
xor
dec
push
inc
ljmp
out
sub
cld
pop
lret
in
fcmove
ss
mov
adc
add
lea
fldt
push
data16
into
pop
cmp
push
add
xlat
cmp
int
je
pushf
pop
cmp
pop
pushf
enter
and
cmc
test
adc
or
xor
aam
xchg
imul
arpl
test
sub
mov
imul
mov
ds
push
sub
leave
jae
aam
add
cwtl
sub
std
inc
xlat
ret
jmp
sub
cmp
xor
xchg
xchg
pop
sbb
cmp
mov
mov
orl
push
test
icebp
addr16
inc
dec
jno
lods
push
and
mov
pop
mov
aad
stc
cmc
or
pop
xchg
add
adc
xchg
add
or
loopne
shl
lahf
sbb
pop
hlt
inc
jp
cmp
xchg
cmp
outsb
lcall
jns
pop
scas
add
adc
dec
mov
add
shl
imul
or
pop
dec
repz
lods
loopne
scas
add
hlt
or
or
lock
add
mov
or
cmpsb
test
mov
mov
inc
cs
mov
and
sbb
in
insl
stc
imul
dec
inc
mov
insb
lods
loope
sub
jae
in
dec
jns
sub
pop
xor
mov
pushf
je
repz
xor
mov
cmp
cmp
testl
mov
test
dec
test
nop
in
out
inc
in
push
sarb
inc
xor
sub
jno
out
jne
cwtl
fdivr
sub
adc
dec
leave
and
out
jmp
sbb
xor
and
pop
mov
sub
test
pop
ret
cmp
sub
xchg
pop
mov
mov
imul
adc
es
and
into
jg
mov
bound
sbb
enter
mov
negb
jl
sbb
dec
and
sahf
mov
movsb
shll
loope
xchg
pop
or
cwtl
cmc
shrl
push
or
les
repz
sub
scas
loopne
loop
sub
out
aad
mov
in
subl
aas
pop
js
insb
or
inc
mov
mov
movsl
dec
popa
cmpsl
insl
pusha
sbb
push
ljmp
int3
enter
cmp
sbb
xor
imul
sbb
stc
sub
sbb
or
ds
cmp
mov
dec
test
int
push
loope
push
xchg
or
inc
daa
adc
or
cmc
fadd
mov
cmp
xor
int3
out
js
cs
test
inc
ss
outsl
or
jmp
lret
sub
in
shlb
mov
xchg
outsl
loopne
test
jae
and
push
pop
xchg
mov
mov
loop
and
sub
popa
xor
xor
mov
rcl
inc
sti
xchg
jae
mov
fisubrs
loope
ljmp
rcrb
popa
mov
sahf
imulb
in
loopne
xor
popa
pushf
sbb
cmpsl
xchg
adc
lds
into
or
jle
inc
pop
aam
xor
sahf
cmpsb
test
pop
dec
scas
inc
push
jae
shrb
jg
xchg
xchg
lcall
adc
mov
lods
mov
shrl
adc
xchg
jle
push
cwtl
push
hlt
insb
add
and
xchg
loope
dec
xchg
jne
lds
mov
dec
test
dec
or
mov
loope
mov
lock
jmp
mov
inc
sbb
sub
mov
movsb
mov
iret
sar
mov
jns
mov
mov
insb
or
xchg
dec
pushf
aad
push
loopne
test
sahf
aad
fsubp
jne
adc
push
push
xor
xchg
or
pop
out
int3
loope
in
push
sub
adc
jge
jmp
cmp
or
adc
or
mov
test
test
dec
nop
adc
shll
daa
mov
mov
and
mov
xchg
cmp
daa
cmp
cmp
mov
test
fwait
popa
push
lahf
cld
jl
push
push
push
popa
and
cli
mov
push
arpl
jl
insl
jl
or
cmp
mov
popf
sub
in
mov
stos
in
clc
lahf
add
shlb
xchg
jns
cld
repz
add
int3
xchg
leave
clc
lret
jae
jp,pn
mov
inc
nop
pop
mov
mov
push
adc
add
sbb
cld
pushf
push
xor
xor
sbb
mov
leave
mov
fnstenv
imul
lret
and
int
mov
inc
loope,pt
or
or
sahf
shrb
lahf
and
pop
repz
push
sub
pop
or
repz
mov
test
ljmp
hlt
sahf
dec
add
push
add
std
scas
rcll
xor
dec
and
cmp
mov
inc
pop
mov
ljmp
lcall
pop
dec
jmp
nop
insb
push
pop
in
loope
call
and
pusha
inc
adc
cli
stc
mov
push
sbb
jle
adc
and
sub
inc
sub
dec
pushf
inc
sti
loope
mov
and
cmp
jnp
push
push
add
mov
inc
or
cmp
inc
cwtl
and
jns
add
sbb
fstl
adc
or
fdivrl
cmp
aas
sbb
pusha
dec
mov
hlt
cli
add
insb
or
or
adc
cmpsl
inc
mov
and
scas
repnz
mov
in
inc
xor
stc
jns
push
adc
adc
mov
mov
push
popf
add
call
sub
aam
lods
pop
frstor
mov
push
sub
mov
inc
xchg
jnp
xor
push
lea
addb
xor
dec
jne
outsl
je
nop
lods
in
adc
mov
mov
jae
aaa
je
das
lcall
mov
leave
jle
jp
pop
rcll
sbbb
cld
push
addr16
pop
std
fstpl
test
add
stos
ja
cmpsb
jmp
pop
mov
sbb
mov
mov
cs
in
pusha
out
rorl
inc
lcall
into
add
pop
push
xor
scas
sub
add
and
adc
or
cmp
ret
add
push
or
pop
sub
aaa
ja
sub
add
lret
cs
cmpsb
gs
sbb
push
dec
mull
imul
aaa
int
mov
inc
mov
xor
fsts
pop
adc
mov
dec
push
dec
sub
insb
test
rorb
mov
jo
test
or
pop
pushf
inc
fcomps
loope
xchg
mov
int3
jmp
adc
in
dec
or
cmc
sub
sub
mov
bound
mov
mov
pop
lods
fwait
sbb
push
paddsb
pop
das
icebp
outsl
cwtl
ds
and
adc
xchg
clc
or
lret
int
pop
test
pop
sahf
mov
aad
jecxz
xlat
lret
add
imulb
pop
cmc
inc
add
pop
jno
and
pop
sbb
mov
test
lahf
jns
jne
inc
stos
jae
ljmp
mov
imulb
dec
xor
movsl
dec
mov
sub
and
fstl
iret
mov
scas
imul
push
jmp
pop
sub
push
test
adc
mov
dec
cmc
lcall
inc
mov
add
jns
xorb
mov
xor
in
scas
push
or
sarl
mov
pop
shlb
pop
xchg
enter
fcompl
mov
into
inc
out
cmp
movsl
sbb
and
xor
add
or
dec
ret
pop
pop
shll
leave
sub
inc
push
es
jmp
pop
loope
mov
or
cmp
mov
repz
push
pop
aas
aam
scas
icebp
test
add
outsl
push
mov
pushf
in
leave
inc
adc
aaa
int
popa
stos
pusha
mov
int
xlat
sub
mov
mov
and
stos
adc
in
dec
jno
shrb
int3
dec
add
push
lea
and
insb
push
test
call
adc
inc
ja
and
xor
in
movsl
xchg
clc
pop
bound
loope
stos
call
addb
pop
inc
pop
subl
test
cltd
mov
mov
xchg
iret
pop
dec
out
dec
add
push
cli
sub
jo
add
and
imul
fwait
in
lock
popf
ret
vpaddusw
test
or
sub
loopne
jns
orl
imul
lea
inc
jae
xor
cmp
fs
pop
sahf
sbb
or
clc
clc
xchg
push
imul
fnstenv
fcompl
cmpl
inc
hlt
xchg
xlat
sbb
orb
mov
int3
add
mov
mov
pop
andb
scas
pop
scas
or
push
mov
lahf
or
push
movsl
insl
in
inc
ljmp
mov
pop
cmp
repz
pusha
xor
dec
shrl
stc
dec
aad
jl
lcall
pop
mov
jle
push
fstl
xlat
inc
iret
out
outsl
mov
fs
outsb
divl
cmp
inc
lcall
fwait
cld
dec
repnz
vorps
hlt
adc
mov
adc
push
pop
icebp
xchg
sahf
stc
sti
xchg
sbb
arpl
shl
adc
cli
jmp
fldl
push
rolb
popa
testb
test
in
sub
cmp
push
cmpb
stos
adc
or
dec
push
inc
pop
leave
sub
into
sub
mov
hlt
mov
add
cmp
dec
scas
je
add
xchg
inc
sbb
jmp
pop
lcall
mov
lods
adc
or
pushf
xor
aaa
pop
popa
push
jns
xchg
pop
icebp
addb
mov
fdivs
fs
int3
pop
mov
push
insl
scas
stc
ret
xlat
push
sbb
cwtl
cmp
adc
xor
rcrl
mov
iret
push
pop
cmp
iret
sub
and
mov
dec
jge
fldenv
cmpsb
cmc
dec
fidivs
dec
or
xlat
int3
adc
adc
adc
out
data16
mov
aaa
and
adc
sub
push
pop
lret
xor
push
push
xchg
xlat
popa
inc
adc
or
insb
inc
adc
dec
xchg
mov
stos
nop
adc
dec
pop
jmp
loopne
cmpsl
add
ljmp
sbb
push
adc
mov
out
mov
lds
sub
popa
dec
mov
jl
js
mov
push
and
dec
inc
movb
push
in
shrb
aaa
inc
shlb
cmc
movsb
jns
mov
and
pop
mov
xchg
test
cmp
cld
mov
push
and
insl
js
subb
repz
jge
pop
iret
icebp
add
inc
sub
mov
pop
mov
cvttps2pi
inc
mov
and
cmpl
popa
mov
iret
in
sti
adc
push
sub
cmc
cmp
outsl
jne
test
jno
pop
test
xchg
inc
mov
pop
sahf
fbld
add
in
push
xchg
sbb
mov
test
sub
jns
fcoml
imul
negb
shlb
mov
adc
push
ljmp
mov
out
test
aad
jle
xchg
adc
decl
les
cmp
add
mov
adc
addr16
outsb
and
loope
sbb
jl
mov
lahf
xchg
cmpl
sub
in
jmp
sub
divb
adc
fwait
cmpsl
xor
xlat
movsb
jecxz
leave
push
jmp
jnp
frstor
xchg
stos
jge
icebp
pop
or
mov
adc
inc
jp
adc
pusha
sbb
push
test
hlt
inc
or
inc
lahf
add
sbb
rorb
mov
pop
mov
mov
or
jecxz
push
mov
sbb
and
adc
xor
aad
test
loopne
push
test
aam
pop
push
fdivrs
cmp
pusha
push
sub
dec
repnz
in
dec
xchg
mov
mov
icebp
mov
jnp
aam
fmul
mov
clc
popf
xchg
insb
fucomip
cli
mov
jp
inc
cwtl
mov
sbb
or
or
je
repnz
add
cmp
aas
jno
cmp
cmp
cmp
push
mov
in
sub
shr
inc
and
sti
test
and
add
and
mov
jmp
mov
push
cmp
add
movsl
push
mov
push
jp
stos
es
popa
jle
into
adc
dec
loope
dec
cmp
sbb
adc
repz
dec
and
mov
in
dec
addr16
insl
cmp
int3
push
popf
push
out
add
and
fs
outsl
sbb
ret
popa
lcall
xor
add
sahf
inc
adc
sub
push
mov
out
or
jne
call
add
push
pop
push
into
and
or
push
cs
push
xchg
dec
jbe
repz
into
into
mov
cs
scas
out
push
lcall
repz
pop
jg
ds
jle
rcrb
sub
into
lahf
insb
jg
pextrw
inc
inc
xlat
sbb
and
cmpsl
scas
les
popa
push
push
sub
mov
sbb
sbb
insl
mov
pusha
or
xor
xlat
inc
push
xor
icebp
das
and
push
cmp
mov
mov
fisubrs
add
and
and
in
inc
movsl
insb
std
in
cmc
outsb
jne
sbb
or
int
test
mov
push
cmp
push
inc
mov
incb
out
adc
fdivp
lock
mov
xorb
and
out
mov
das
mov
cmc
push
inc
arpl
xchg
aaa
test
iret
cmp
push
add
loope
jecxz
aaa
ficoms
dec
cs
dec
push
ja
pop
add
pop
aas
cmp
ret
xchg
mov
and
rcr
movl
aad
outsl
and
daa
fiadds
push
and
stos
xlat
popf
jns
mov
mov
fmull
sahf
scas
es
dec
outsb
je
or
pop
add
into
mov
aaa
pop
inc
fucom
add
pushf
xor
pop
or
lods
setl
sahf
mov
mov
mov
inc
popw
pop
leave
or
mov
aaa
jmp
and
pop
lsl
push
int
push
sbbb
ljmp
adc
adc
dec
or
mov
push
inc
in
lret
repz
push
push
loop
and
adc
add
xchg
call
sbbl
cs
loopne
push
das
or
push
or
into
mov
sysexit
dec
fstl
adcb
fsubs
mov
pop
dec
sub
insl
in
sub
jo
fwait
xchg
lahf
jge
andb
adc
repz
cmp
and
into
or
into
sbb
cmp
sbb
insb
pop
or
insb
sbb
and
leave
adcl
sbb
ljmp
shrb
ret
mov
insl
dec
out
cmp
dec
imul
cmpsl
aas
loope
imul
loopne
and
in
xchg
push
cmp
and
stc
loopne
mov
ss
inc
sub
mov
loop
aad
data16
or
dec
or
insl
cmp
js
push
xor
stc
cltd
inc
xor
push
addb
and
xchg
roll
or
push
or
stos
pop
mov
dec
inc
arpl
xchg
pushf
or
pop
xchg
cwtl
lret
add
and
jb
shrl
mov
stos
repz
daa
orl
outsb
xchg
xorl
sbb
pop
push
adc
cs
mov
adc
push
outsb
cwtl
xchg
adc
sbb
sub
adc
sahf
xchg
lret
fildll
aas
mov
push
bound
cmpsl
add
sti
ret
push
stc
and
pop
mov
mov
and
cs
or
mov
adc
cmp
dec
add
add
daa
ret
mov
push
mov
mov
mov
dec
cld
sahf
and
and
lock
jno
arpl
inc
enter
fsubl
ret
fcoml
dec
xor
mov
test
jno
je
add
cmp
fdivl
sbb
sbb
das
cmp
cli
jl
sbb
ds
hlt
push
rolb
repz
lret
mov
pusha
fs
push
cmpb
les
push
scas
and
add
popa
ja
fisttpl
dec
or
aam
and
sub
jecxz
xchg
scas
imul
dec
push
out
hlt
add
inc
fdiv
push
movsb
insb
mov
sbb
push
mov
and
fiaddl
pop
jns
out
cmp
mov
mov
ret
fisttpll
jns
sub
rcl
or
jne
cld
adc
sbb
popa
sub
add
orl
stc
sbb
and
jle
cmc
push
or
mov
inc
jno
push
inc
push
mov
mov
mov
dec
data16
stos
sub
enter
popa
test
insl
adc
loopne
push
sbb
jbe
outsl
adcb
and
shll
leave
cmp
add
std
and
aad
sbb
pop
sub
jg
subb
inc
push
inc
adc
or
push
jns
and
dec
stos
jne
inc
or
push
pop
callw
lret
or
inc
cmp
fnstcw
adc
and
insb
xor
jno
push
pop
add
idivb
cmp
aas
lods
ljmp
xchg
dec
lret
movsb
mov
imul
imul
in
scas
cmc
ror
or
adc
pop
icebp
mov
repnz
mov
adc
xchg
shlb
adc
icebp
sub
xchg
cmc
into
imul
es
std
not
or
and
add
push
in
jl
push
aas
enter
mov
sub
popl
mov
fnstenv
mov
xchg
xchg
mov
cltd
stc
mov
scas
lea
mov
stos
jmp
rolb
outsl
mov
js
sahf
mov
fs
arpl
add
cmp
adc
xor
xchg
jns
adc
test
out
leave
inc
mov
mov
addr16
mov
cmp
and
insb
fdivrs
movhps
inc
xchg
outsb
push
dec
sub
outsl
pop
jle
into
test
test
fisubs
mov
jae
push
fadd
xchg
sub
loope
mov
sbb
imul
add
xor
pop
mov
repz
test
push
enter
jmp
xor
int3
ja
mov
scas
inc
push
pop
adc
mov
lods
shrl
notb
mov
shl
inc
pop
mov
jecxz
sub
and
sub
addr16
lock
rclb
pop
call
xor
movsl
aam
pop
inc
mov
mov
add
dec
cmp
jne
rcrl
xor
sbb
pop
lock
stos
shrl
pop
adc
mov
add
negl
add
push
push
mov
adc
or
mov
les
int3
adc
pop
and
loope,pn
movsb
xor
jbe
pop
sbb
leave
daa
mov
fisttpl
cmp
and
popf
out
mov
in
ficompl
xchg
pop
out
scas
xchg
dec
jns
shl
sbb
dec
mov
mov
mov
xlat
in
mov
pop
mov
adc
scas
in
xor
add
xor
scas
add
push
loope
mov
out
dec
push
mov
cmpsl
pusha
jae
pop
fs
mov
mov
add
cmp
icebp
add
xchg
orl
nop
popf
stc
cli
cmovae
sub
pop
pop
cwtl
ret
sbb
ficomps
pop
in
mov
jmp
sub
pop
out
or
mov
jl
or
jmp
lcall
and
nop
mov
outsl
add
cmp
jg
rclb
cmp
push
xchg
and
xor
push
les
sub
insb
mov
inc
test
push
cmp
push
imul
push
into
pushf
inc
mov
cmpsb
sbb
pusha
mov
push
pop
xor
dec
cmp
mov
adc
cli
adc
out
or
and
cmpsb
dec
mov
pop
cltd
xor
pop
push
lret
sbbb
fsubrl
pop
xlat
int3
test
clc
adc
jns
adc
ret
xor
ret
lret
cmp
push
xchg
sbb
xchg
outsl
jmp
pop
inc
or
subb
test
jno
std
mov
pop
mov
pushf
cmp
and
xlat
adc
mov
add
push
xor
test
shl
repz
dec
rcrb
push
and
push
mov
sub
stos
mov
sbb
sarl
sub
icebp
out
fmuls
inc
mov
cmc
push
inc
or
gs
add
leave
dec
xchg
jg,pn
fprem
xchg
xor
cld
int
sub
push
pop
addr16
mov
xchg
add
adc
frstor
leave
fisttpll
mov
jle
shll
std
xchg
hlt
fwait
repnz
cmpxchg
sbb
inc
sarl
loope
mov
pushf
adc
stos
xchg
test
push
inc
rclb
jae
xchg
hlt
das
push
aad
popl
and
jne
xor
mov
cmp
fdivrl
sbbl
jp
lret
js,pn
dec
sbb
clc
inc
in
sbb
xchg
jbe
sbb
mov
cs
mov
inc
ret
push
mov
sub
inc
pushf
insb
mov
mov
insb
sub
dec
scas
add
rcl
std
push
dec
test
out
fwait
mov
inc
fdivrl
and
mov
mov
or
and
mov
lret
jecxz
mov
lcall
xchg
xor
lds
push
inc
mov
sbbb
jle
int3
push
pop
and
add
mov
adc
enter
push
sbb
aas
sti
dec
jnp
fisubrs
add
loopne
aas
cmp
or
cmp
scas
or
mov
mov
adc
aad
pop
pop
xor
pop
xchg
fs
sets
mov
or
int
add
stos
sub
inc
mov
inc
xchg
cmc
pusha
xor
shl
mov
adc
cmp
aas
push
sbb
cmpsb
pop
fsubr
ficompl
shrb
les
pop
lods
dec
sub
pop
sub
xlat
adc
loope
repnz
xchg
jns
mov
and
adcb
and
mov
jmp
insb
repz
dec
mov
push
pop
dec
repz
cs
adc
add
sbb
outsb
cld
out
mov
sbb
mov
test
xor
xchg
popa
xchg
push
mov
push
jae
cmp
and
into
mov
sub
jno
sub
sub
mov
test
hlt
jecxz
cmp
and
mov
cmp
inc
insl
add
adc
out
and
fsts
outsb
xchg
add
push
mov
xor
pop
jae
adc
lcall
scas
lahf
clc
out
stc
ljmp
cmp
jg
loope
roll
ds
cmc
mov
orl
add
push
sub
mov
or
pop
mov
or
jecxz
inc
ja
mov
mov
push
sbb
sub
negl
rclb
add
xor
add
fcmovnb
dec
jp
nop
jmp
cmp
jl
dec
pop
jne
sbb
mov
and
lea
ss
sub
scas
mov
int
cmpsb
jnp
dec
jg
fstp
jp
loop
sbb
push
inc
call
pop
add
aad
xchg
xchg
inc
jno
pusha
into
inc
pop
shrl
mov
jnp
shll
incb
add
fildll
sub
xor
lahf
mov
or
inc
add
insl
add
or
jmp
aaa
pop
pop
sub
faddl
push
jae
jecxz
insb
cld
mov
and
or
xchg
xchg
jg
sti
mov
and
and
movsl
dec
imul
lods
push
add
sbb
ror
ja
loope,pn
cmp
stos
ljmp
mov
dec
test
mov
mov
std
push
cmpsl
int
mov
in
inc
push
lret
fwait
xchg
lea
pop
inc
rcrb
cs
ret
mov
loopne
into
sub
push
push
add
push
iret
cli
adcl
add
xchg
insb
xchg
push
jo
loope
dec
cmp
ret
sbb
int3
and
xor
rorb
cwtl
adc
neg
test
into
test
push
cltd
in
sub
add
jge
push
pop
pop
call
sbb
cld
insl
icebp
dec
xor
fldl
jmp
and
push
mov
sbbl
mov
add
or
push
jno
adc
icebp
pop
adc
xor
or
scas
int3
inc
adc
mov
mov
mov
adc
imul
test
jne
xchg
sbb
or
cmp
and
int
sub
fadd
sub
dec
imul
push
stos
aad
and
daa
cmc
pusha
xor
call
out
and
stos
leave
lcall
lret
jno
ret
ljmp
cmp
cmc
cmp
mov
int3
push
loopne
add
shrd
mov
in
mov
fdivrl
shlb
ss
adcl
mov
dec
add
inc
sbb
mov
loopne
xlat
and
mov
sbb
xor
cmp
outsb
xor
jecxz
mov
cmpsl
roll
adc
int
cltd
jnp
mov
xchg
xchg
sbb
mov
wbinvd
pop
fisttps
insl
xchg
adc
mov
int3
stc
mov
lcall
fs
call
out
insl
adc
jle
rcll
xchg
loopne
rcll
cmp
mov
dec
stos
call
mov
sub
pusha
mov
jbe
loopne
lret
cmpsb
insb
inc
mov
pop
push
xchg
loopne
jb
sub
enter
sahf
mov
in
lret
add
mov
enterw
inc
lea
push
and
add
fsubrl
pop
shll
das
cmp
addb
in
ljmp
inc
mov
insl
stos
cmp
push
into
push
jmp
sbb
fdivl
pop
int
dec
xor
inc
mov
rcl
decb
lahf
arpl
leave
jl
in
jo
iret
in
mov
ret
dec
mov
sbb
cmc
and
std
and
push
or
xchg
or
or
mov
push
lret
fwait
js
scas
ja
les
scas
fdivl
add
test
aam
push
es
add
add
enter
mov
and
fdivl
xor
andb
jp
xor
xchg
mov
gs
inc
popf
jp
int
and
sub
push
add
stos
fists
lock
fimull
popa
add
test
and
pusha
test
lods
cmp
sub
xlat
les
fs
inc
inc
adc
jg
push
adc
int3
add
daa
data16
xor
cmp
mov
push
dec
pop
inc
cmp
jae
pushf
xorb
jae
jle
repnz
jae
aad
pushf
mov
mov
repz
icebp
mov
add
jbe
dec
xchg
dec
xor
dec
les
or
mov
sbb
pop
jb
mov
cmp
fisubl
into
jne
jae
lcall
jns
ror
add
push
and
jg
addr16
incl
push
out
mov
push
insb
enter
das
test
leave
arpl
jae
sahf
cmp
dec
inc
imul
mov
xchg
and
or
xchg
xlat
das
mov
and
lea
icebp
lahf
push
icebp
test
divl
sbbl
in
dec
outsl
das
cmp
or
bound
sub
or
outsb
push
push
push
pop
pop
xorb
mov
lds
cmp
xchg
xchg
lret
daa
addb
xchg
inc
cmc
add
fisttps
into
pop
jns
icebp
clc
pop
test
or
fsubrs
or
jle
repnz
and
mov
mov
das
cmp
add
xchg
sub
sbb
int3
fstl
aad
frstor
lahf
and
adc
jae
aas
mov
dec
daa
xor
dec
stos
lock
pop
bound
pop
into
and
lea
shll
inc
fadd
inc
sub
push
sub
dec
insl
adc
in
push
popa
mov
and
jp
pop
adc
faddl
negl
jno
or
adc
mov
fmull
insl
sub
add
arpl
icebp
mov
push
les
jp
or
sub
pop
push
cmpsl
test
add
mov
jnp
dec
cmp
push
push
cmc
push
pop
jl
mov
enter
cltd
mov
ficomps
aas
rolb
shll
xor
adc
push
fdivl
dec
add
mov
movsl
mov
test
adc
sbbl
insb
and
jae
das
cmc
dec
xchg
or
pop
or
mov
pop
in
cld
in
popa
sarl
mov
xlat
inc
or
or
int3
cs
out
push
fsubrl
or
dec
mov
stos
jb
mov
imul
hlt
scas
cmc
lahf
or
data16
mov
dec
jns
scas
pop
fiaddl
fdivrl
aaa
mov
pushf
push
imulb
add
pop
hlt
sbb
add
insb
mov
sbb
sti
and
sbb
or
xchg
int3
inc
push
mov
inc
lds
add
jle
add
popf
enter
fs
jne
stos
add
loop
test
dec
stc
fdivrl
pop
dec
sbb
test
mov
xchg
dec
xor
scas
mov
lock
ss
rcrl
insb
sbb
xchg
mov
test
mov
out
inc
inc
mov
lret
mov
xchg
sbb
stos
inc
test
dec
insb
aad
add
je
outsl
lahf
and
push
cmpsl
pmulhuw
dec
iret
lahf
cs
insl
out
cmp
pop
pop
pusha
or
sbb
inc
outsl
ret
dec
outsl
xchg
hlt
mov
decl
fs
arpl
mov
lock
call
or
xlat
xchg
mov
enter
sub
mov
mov
loopne
mov
mov
imul
test
and
and
mov
dec
cltd
dec
inc
fcomps
loopne
jns
scas
jecxz
and
push
dec
xor
pop
push
daa
lret
push
jp
mov
ss
xchg
dec
inc
call
jge
push
stc
mov
and
push
mov
cmp
out
add
sbb
ds
cmp
xchg
scas
xchg
or
and
je
pushf
jmp
sbbb
aaa
pushf
cmc
dec
sbb
inc
stos
add
xor
shl
pop
pop
xorb
or
scas
stos
sub
push
xor
or
inc
pop
xor
popa
mov
lock
lds
dec
sbb
sub
mov
sub
cltd
loopne
shr
dec
scas
add
dec
lret
aas
jecxz
std
or
and
test
add
outsl
inc
nop
lods
sub
and
jne
or
cmp
pop
cmpsl
scas
lcall
pop
int
cmp
xor
jecxz
lds
cli
push
sbb
inc
adc
mov
sub
inc
jmp
shll
or
pop
add
sub
pop
mov
inc
pop
jbe
cmp
loope
pop
mov
lret
mov
jb
pop
inc
jecxz
mov
or
or
out
xor
dec
mov
jae
je
xchg
sahf
leave
dec
inc
pop
inc
push
insb
sbb
jg
insl
pop
int3
push
popa
mov
pop
mov
jl
sub
mov
add
int
and
aad
and
mov
adc
mov
and
pushf
xchg
ja
sbb
jo
jno
mov
pop
and
mov
jecxz
and
sub
push
lods
outsb
or
dec
xchg
movsbl
jns
cmpsb
and
lods
mov
mov
pop
adc
add
dec
shll
scas
pop
mov
cwtl
mov
add
add
fsubl
push
xchg
mov
or
sbb
and
je
sbb
mov
cmp
stos
les
out
cli
jnp
pavgb
lds
or
bound
pop
push
outsb
and
ret
cmp
jnp
xlat
and
mov
lods
js
aad
inc
mov
enter
or
outsb
mov
aad
pop
dec
cmp
lcall
fisubs
jle
shl
adc
ljmp
sub
ret
xlat
and
inc
fucompp
inc
dec
pop
sbb
xchg
in
movsb
mulb
scas
adc
es
pusha
xchg
or
rcrl
push
sub
mov
and
call
adc
out
jp
jmp
bound
dec
popa
inc
enter
adc
or
and
das
dec
or
push
or
in
dec
jge
xor
xchg
dec
dec
inc
fsubr
insb
dec
pop
cmp
jecxz
xchg
sub
inc
out
mov
fdiv
adc
repz
and
les
mov
loope
inc
xor
mov
inc
movsl
pop
orb
mov
inc
loop
cs
or
inc
push
mov
pop
insb
fsubrl
incl
jle
mov
add
movsl
push
mov
scas
xlat
lret
cmpsb
sbb
stos
inc
jno
je
cli
sti
nop
test
test
pop
aas
insb
jp
mov
in
or
and
inc
xchg
pushf
jnp
cmp
fnstsw
xor
add
add
xchg
mov
push
ret
rcrb
and
sbb
jo
jg
rcl
pop
cmpsl
imul
xor
add
dec
insb
je
fs
cmc
out
mov
push
int3
cmp
and
mov
aam
negl
or
mov
out
sub
and
icebp
push
mov
inc
pop
scas
mov
pop
inc
jb
mov
roll
mov
cmp
xchg
sbb
lock
or
mov
mov
mov
dec
leave
aas
test
add
mov
out
inc
cmp
and
loope
cld
ja
sbb
sub
stc
fistpll
xor
inc
add
pop
mov
mov
jp
xchg
sbb
add
xor
icebp
daa
push
pop
cmp
test
and
jno
sub
stos
and
ret
cmp
push
ss
adc
jne
xlat
sub
cmp
mov
ret
lock
dec
push
adc
popf
test
adc
sti
pop
mov
adc
das
int3
adc
xchg
inc
xchg
adcb
in
out
sbb
rcl
lahf
into
sahf
inc
ret
mov
movsb
xor
xlat
dec
scas
jnp
jns
push
movb
out
das
jo
or
adc
fdivrp
xchg
dec
in
cwtl
sub
lret
mov
inc
mov
sbb
pop
or
scas
sub
push
mov
movsb
push
sbb
insb
fdiv
xchg
jl
dec
inc
mov
cmp
scas
mov
push
sbb
ss
mov
or
stos
flds
add
mov
fisubrs
test
xchg
sti
loopne
add
out
sti
lahf
enter
cmp
mov
ja
outsl
sub
and
jne
cltd
sti
cmpsl
mov
icebp
bound
fsubl
xlat
mov
clc
pop
ja
add
or
jno
cltd
mov
xor
adc
les
fcmovnu
cmc
lock
cmp
inc
mov
les
or
and
scas
xorl
xchg
jecxz
das
jl
inc
sbbl
and
mov
mov
pop
loope
add
popa
xor
sbb
sbb
pop
add
dec
js
fcoml
call
lret
push
insl
out
int3
scas
inc
cmp
into
mov
jecxz
push
arpl
hlt
mov
push
push
sub
mov
cmp
mov
push
xor
jl,pt
rorl
comiss
push
xor
mov
je
insl
clc
sub
xchg
inc
dec
hlt
jbe
push
jae
sub
addr16
enter
or
subl
js
outsb
mov
pop
scas
push
lahf
add
lods
jb
or
dec
in
sub
sub
dec
imul
pop
mov
je
add
and
mov
mov
ss
inc
out
lcall
mov
adc
daa
cmp
lods
cmc
jnp
ret
xor
ss
jle
jbe
jne
sub
mov
sub
jl
je
sbb
stos
push
mov
sbb
clc
int
ja
lcall
mov
jnp
or
and
mov
inc
xor
pop
scas
xor
push
in
cmp
adc
cmpsb
dec
pushf
mov
insb
mov
add
pop
cmc
push
movsb
push
pop
gs
in
leave
pop
das
adc
or
int
add
popf
ja
pop
imul
pop
addl
inc
ret
fisubrl
int
decl
adc
or
sbb
insb
cli
inc
mov
mov
and
dec
push
or
add
cs
mov
push
fcmovnb
dec
int
jmp
das
mov
dec
mov
add
scas
out
add
bound
rclb
loop
clc
adc
jns
loope
dec
in
test
jmp
les
aad
fistps
jnp,pt
popf
pop
mov
das
xor
mov
fwait
push
and
xlat
sub
jp
xor
sub
mov
sbb
xchg
aad
push
inc
in
cmpsl
pop
int
mov
mov
jecxz
push
fildll
push
fmull
xchg
call
xlat
pop
and
mov
ja
ljmp
das
out
imul
mov
in
ja
or
push
shrb
sbb
sub
test
dec
in
push
adc
xchg
pop
aam
sub
out
sti
shlb
inc
mov
pop
jae
dec
adc
pop
cmp
test
mov
out
sbb
mov
lock
mov
mov
repz
lods
xorb
dec
and
lcall
js
sahf
xchg
fisttpl
pop
and
mov
rorb
roll
fsubrl
mov
xchg
imul
fnstsw
push
sub
and
adc
les
loope
inc
loop
fnstsw
mov
sahf
jge
sbb
push
fbstp
mov
sbb
mov
orb
mov
pop
xor
imul
cli
enter
jg
add
insl
inc
and
mov
rorb
out
push
push
jge
dec
cmpsb
mov
mov
out
ret
int3
pop
repz
movsl
fadds
hlt
out
insb
mov
dec
pop
loope
sub
fidivrs
mov
mov
push
add
adc
jl
lahf
cmpsl
movsl
into
xor
and
or
aas
out
pop
jne
gs
dec
enter
add
iret
jnp
cltd
or
shrl
sahf
pop
cmp
or
sbbl
or
mov
add
lahf
jp
inc
stos
jmp
pop
adc
xchg
cmp
cli
subl
mov
outsl
xchg
jge
sbb
xor
cmp
xor
and
das
lods
mov
xlat
sub
and
or
inc
insl
mov
inc
sbb
jmp
dec
push
mov
pop
dec
repnz
pop
mov
test
jo
adc
sbb
pushf
xor
push
push
testl
cmpsb
pop
fmuls
mov
pushf
lds
into
xor
xchg
cmp
repnz
mov
cmpsl
shlb
arpl
data16
cmp
leave
hlt
inc
xor
stc
xchg
lret
push
pop
xchg
xchg
push
inc
rorl
push
or
pushf
mov
and
ret
inc
pop
jl
sbb
xchg
cmp
jecxz
out
and
stos
cmp
pop
roll
sub
pushf
adc
popa
ret
shrl
mov
scas
popl
scas
lods
xor
jo
unpckhps
jecxz
mov
and
mov
das
jle
mov
and
in
lret
adc
jne
sahf
lods
outsl
xor
push
or
aam
adc
mov
push
enter
and
fnstsw
test
sbb
stc
sub
pop
mov
adc
dec
clc
sub
sbb
sti
mov
and
call
push
test
inc
cmp
stc
aad
and
cs
adc
push
sbb
mov
adc
jnp
sub
aam
adcl
test
stc
aas
test
xchg
mov
sub
adc
enter
stc
les
sub
insb
jle
or
pop
pop
lahf
sbb
imul
push
lea
gs
mov
add
inc
movb
je
repz
add
ljmp
daa
sarb
cmp
add
pop
lods
lods
pushf
into
test
and
les
sbb
xchg
dec
inc
je
sahf
xor
sahf
jno
sub
dec
jbe
das
sahf
dec
insl
loopne
fsts
pop
cmp
pop
leave
inc
xor
arpl
sub
les
pop
les
das
in
cli
and
push
inc
xchg
xor
repnz
mov
es
adc
push
pop
push
in
lds
insl
jl
insb
inc
outsl
sbb
loope
dec
imulb
stc
lret
jae
xchg
test
push
xchg
lds
insb
xor
mov
ss
mov
xchg
aas
add
xchg
xchg
clc
loope
mov
and
les
jg
inc
and
and
ret
and
call
inc
shrb
loopne
arpl
cmp
jge
popf
and
xor
imul
pushl
push
out
bound
stc
mov
sbb
push
aad
fdivp
or
or
inc
pushf
es
adc
mov
pop
arpl
hlt
sub
roll
inc
insl
divb
out
gs
aad
fisubrs
pushf
fstps
jl
jle
aad
in
push
sub
mov
sub
rcr
and
lret
outsl
mov
clc
mov
jb
add
cmp
xchg
xchg
cltd
jb
cltd
ret
outsl
adc
dec
clc
out
cli
cmc
mov
fistl
test
lods
sub
fwait
stc
mov
and
or
jne
mov
adc
jno
lcall
dec
scas
mov
mov
inc
insl
inc
xchg
lods
insl
sti
jle
or
push
scas
xchg
xor
jp
push
aad
ficompl
cmpxchg
inc
in
in
and
and
xchg
imul
js
cmc
and
or
outsl
and
cmc
jb
inc
mov
mov
xlat
data16
jo
inc
lods
insb
and
jne
mov
lcall
mov
pop
push
popa
mov
inc
and
fdivr
mov
lret
into
cmp
sbb
stc
pop
adc
jl
into
push
mov
mov
aam
mov
inc
stos
xlat
int3
push
sahf
inc
dec
in
jl
inc
movsb
aam
aad
or
mov
in
scas
jns
jae
fildl
ss
adc
or
hlt
insl
add
jge
cltd
stc
push
pop
test
scas
xlat
jno
adc
add
jns
xchg
mov
push
or
sub
cli
pop
sahf
mov
xchg
and
icebp
movsb
jns
sbb
inc
scas
xchg
imull
xchg
int
jnp
mov
cwtl
adc
or
jmp
dec
and
repz
jmp
jge
dec
call
push
mov
mov
scas
movsb
xorl
sbb
sbb
test
or
mov
in
out
cmpsb
push
mov
rcr
mov
in
or
mov
inc
jmp
add
adc
sarb
fdivs
dec
mov
push
push
sub
movsb
xor
iret
pop
push
adc
fsub
fs
push
and
scas
jecxz
sahf
mov
inc
jle
clc
cmp
cmpsb
mov
pop
mov
stos
sbb
lcall
or
inc
adc
mov
sbb
pop
push
js
dec
arpl
add
xor
xor
stos
lods
leave
incb
adc
rorl
js
mov
mov
pop
or
aam
imul
sbb
ret
testl
mov
pushf
xchg
xor
push
popa
dec
and
rorl
xchg
jae
ja
pop
and
das
clc
into
inc
pop
stc
xchg
and
jnp
xor
inc
pushf
cmp
js
popf
cmp
adc
adc
fdivrp
jecxz
cmp
clc
insb
das
or
mov
mov
sub
jo
xor
lods
fisubs
xchg
jb
test
jne
mov
sbb
clc
add
test
jle
inc
sub
jecxz
jno
mov
pop
cmpsl
fs
xor
inc
loope
mov
dec
and
xor
mov
subl
rcrl
cmp
icebp
test
outsl
xor
and
mov
dec
aas
and
xchg
push
sbb
cmp
insb
popa
bound
jno
jge
dec
call
jmp
or
out
inc
xorb
nop
mov
add
jbe
xlat
subl
movsb
ss
jns
add
movsl
mov
or
sarl
addl
xor
push
adc
repz
inc
and
dec
fadd
in
push
scas
mov
ss
and
mov
push
cmp
sti
lret
test
ja
pop
adc
xchg
add
loop
out
jo
mov
popf
adc
jns
cmp
and
xchg
aad
je
loop
sahf
or
jp
lods
or
dec
sub
inc
pusha
pop
fdivs
mov
push
sbb
mov
lea
gs
cmc
xor
mov
cmp
mov
push
push
mov
rclb
xlat
aad
mov
mov
mov
or
clc
data16
cmp
outsl
daa
lret
sbb
sub
aas
cltd
fnsave
cmp
push
int
icebp
cs
test
lret
insb
or
xchg
sub
loopne
hlt
mov
pop
jg
es
xchg
sub
mov
das
dec
pop
ficoms
loopne
push
mov
into
jl
int3
pop
sub
pop
add
mov
movsl
xchg
push
pop
aad
jmp
xor
jb
int
mov
cmp
pop
mov
loope
add
pop
sbb
jbe
bound
xor
mov
xlat
cld
dec
jnp
mov
mov
push
add
cs
iret
daa
cld
cmp
dec
and
mov
mov
mov
sub
cltd
xchg
add
push
sub
push
aad
js
fidivrs
mov
push
je
inc
mov
js
in
mov
popf
lret
sbb
sub
mov
outsb
dec
sub
aaa
dec
int3
lods
jg
je
or
sub
jne
pusha
push
into
sbb
push
or
or
jo
push
in
in
push
fbld
add
int3
rorl
adc
ds
sub
nop
ja
mov
stos
aam
push
test
in
pop
push
mov
decl
fwait
adc
mov
gs
retw
pop
mov
pop
xor
push
pushf
aam
inc
xor
xor
xchg
inc
cwtl
inc
sub
dec
jmp
mov
and
jl
adc
mov
xlat
mov
shlb
pop
mov
insl
lods
int3
das
dec
mov
or
mov
mov
dec
sbb
popf
push
stos
js
cs
cmpb
sahf
aaa
je
mov
mov
test
push
aas
aam
arpl
bound
mov
and
add
mov
mov
repz
bound
mov
lds
xor
cmp
lcall
or
sub
jg
inc
mov
dec
or
sbb
in
push
adc
xor
fisttps
cmp
jno
add
cmp
xor
mov
inc
mov
adcb
adc
pop
pop
mov
pop
mov
dec
push
dec
cwtl
push
mov
mov
shrb
xchg
outsl
add
cmp
addr16
int3
clc
fildl
into
push
adc
ds
les
cmp
sub
in
mov
ret
setb
cld
lock
loope
fisttps
adc
popa
pop
sbb
push
mov
and
in
lods
fwait
data16
aaa
ja
mov
cmp
mov
add
and
adc
lret
push
daa
mov
mov
jge
cmp
movsl
cs
and
int
loopne
in
int3
cmp
aaa
clc
test
xor
mov
popa
fcmovne
add
mov
adc
pop
rcll
iret
sahf
sbb
xlat
rcll
pop
mov
outsb
xlat
and
add
add
mov
or
test
pop
xor
rol
lock
cmp
or
hlt
mov
and
cld
cs
je
xchg
outsb
sti
dec
rclb
sub
push
sub
ret
ljmp
dec
test
pop
push
popf
les
xchg
lcall
xchg
subl
into
pop
mov
cmc
enter
mov
jmp
adc
add
pop
cld
in
outsb
test
jae
mov
or
es
daa
test
cmp
pushf
clc
jb
xchg
rorb
sahf
add
test
dec
les
scas
int3
and
lock
mov
in
cmp
push
pop
sbb
push
roll
inc
pop
sub
cmp
mov
sti
daa
std
sub
sub
iret
and
jns
inc
push
push
adcl
jno
mov
xchg
cmp
add
pop
and
mov
adc
arpl
pop
jmp
movsb
inc
dec
popf
mov
xchg
and
sub
add
xchg
loope
or
fidivs
add
mov
sti
into
cs
icebp
mov
push
mov
imul
cmp
cs
inc
lahf
dec
loopne
push
xchg
testl
addl
and
daa
fs
jmp
aam
repz
xchg
cmp
or
aam
adc
popf
dec
gs
push
les
repnz
sbb
xchg
stos
xor
jnp
jb
movsb
jbe
sub
inc
aam
dec
pop
imul
pop
js
loopne
daa
popa
push
mov
stos
inc
push
dec
call
sub
scas
test
push
xchg
push
popf
ljmp
and
mov
or
adc
push
imul
inc
xchg
inc
outsl
aaa
add
mov
dec
in
mov
lock
sbb
adc
imul
shlb
mov
pop
pop
jo
leave
ja
cmp
xorl
mov
lods
mov
mov
sbb
mov
ja
and
push
ds
cli
fldl
lahf
xor
sahf
jmp
jl
testl
out
sbb
insb
sbb
shll
pushf
sub
cmc
stos
bound
xchg
pop
iret
and
mov
jbe
es
cmpsb
dec
or
cmp
mov
lahf
xchg
push
mov
sbb
adc
movsb
pop
in
lock
or
add
ds
cli
in
std
sbb
sbb
nop
aad
inc
in
cmp
inc
dec
jns
cli
iret
and
inc
mov
mov
sub
int
int3
sbb
inc
mov
popa
push
push
dec
cmp
mov
add
push
in
sub
mov
xor
aas
sub
and
js
repnz
lret
lret
mov
divb
or
das
dec
arpl
push
xchg
test
inc
aad
mov
xlat
mov
test
sub
sub
inc
dec
lock
pop
lds
sub
pop
bound
xor
ja
add
insb
icebp
jmp
add
or
out
aam
pop
add
jmp
sbb
mov
test
test
sub
lret
mov
sbb
mov
loope
sbb
sbb
dec
mov
je
pop
movsl
ja
xchg
jp
in
push
jns
xchg
pop
out
push
jge
cmpsb
popa
pop
and
xor
mov
dec
ret
inc
dec
mov
inc
mov
cmp
and
aam
jecxz
add
leave
dec
popa
data16
or
add
xor
and
clc
faddp
sub
setge
xor
sti
stc
sti
jge
mov
sbb
psubd
dec
pushf
push
sub
add
les
shl
inc
adc
popf
mov
cmp
movsb
ja
adc
test
push
adc
fdivrl
adc
xchg
push
std
inc
lahf
cs
or
add
cmp
push
pop
mov
xor
call
xor
fimuls
fidivs
hlt
and
mov
and
cmp
fstp
idivb
pushf
dec
lret
cs
sbb
outsb
mov
push
push
and
outsl
or
and
push
inc
daa
jmp
call
pop
and
push
aad
mov
xchg
mov
xchg
xchg
xor
loope
dec
cmp
jbe
movsb
mov
push
mov
xchg
and
call
push
call
cs
and
add
or
add
jecxz
xor
es
jmp
push
jne
push
lock
jmp
iret
pop
add
dec
xchg
pop
int3
sbb
scas
mov
xchg
sbb
xchg
hlt
cs
push
stc
int
or
sti
aas
js
lret
mov
adc
test
cli
mov
and
and
sub
test
aad
dec
xchg
psubw
push
shll
mov
mov
aad
inc
jnp
sub
dec
push
test
jl
fldenv
faddl
loope
test
movsb
add
inc
loope
hlt
shlb
test
cmp
cmp
dec
adc
xchg
add
sub
pop
leave
cmp
inc
sbb
push
in
mov
js
dec
outsb
lods
imul
test
nop
das
cmp
ret
mov
lods
push
mov
mov
mov
lahf
imul
fisttps
lds
mov
and
xor
dec
outsl
add
sbb
in
jo
and
into
dec
mov
clc
push
cmp
fsubs
mov
jmp
mov
mov
xlat
mov
jg
out
into
or
and
ds
and
inc
ret
aaa
insb
pop
stos
pop
repz
ret
mov
jmp
lock
clc
fnsave
mov
mov
cmpsl
mov
mov
incl
loopew
arpl
aam
outsl
mov
shlb
sahf
mov
in
add
pop
jbe
ljmp
jl
pop
add
stos
or
xor
or
nop
popa
int3
inc
or
in
push
fdivr
mov
inc
movsl
pop
pop
add
mov
std
ljmp
call
pop
and
test
mov
test
test
test
ret
sbbl
cmp
aas
in
inc
icebp
cmp
adc
jbe
dec
sub
cmpsl
stc
jl
rcrb
mov
sbb
call
inc
mov
cmp
sahf
aad
and
lods
xchg
bound
inc
mull
in
mov
and
sbb
mov
lods
add
packuswb
sar
das
test
inc
sbb
mov
jnp
fdivs
mov
pushf
gs
cmp
and
inc
push
pop
aas
mov
mov
pop
cmp
inc
jo
fnstenv
scas
test
shlb
sahf
out
fcoml
mov
rcl
addr16
add
aaa
dec
xor
popl
repnz
push
xchg
or
mov
jb
out
and
aaa
pop
lock
push
inc
ficoml
add
xchg
xorl
movsb
pusha
add
in
dec
fs
add
pushf
xchg
add
xchg
aam
push
mov
ss
dec
adc
ds
push
jbe
mov
dec
shlb
xchg
aad
sub
aas
nop
lds
inc
and
mov
inc
gs
xor
jb
jns
add
iret
xor
ja
ret
mov
bound
pop
test
inc
in
scas
mov
jnp
inc
xor
xor
lods
jmp
and
fadds
adc
xchg
mov
xor
lods
dec
je
and
inc
adc
add
push
scas
dec
jo
jae
xor
sub
loop
fcompl
adc
pop
insb
adc
mov
jo
fbstp
int3
dec
sub
lock
cmp
add
push
repnz
or
or
jl
pop
rcll
mov
repz
repz
pop
test
das
loop
push
insb
mov
rolb
bound
es
fwait
pop
adc
je
aad
and
push
sbb
adc
imul
in
stc
decl
adc
lea
push
cmpsl
clc
sub
jp
mov
out
xlat
sbb
inc
fs
dec
ja
jnp
xor
sub
fstpl
aam
mov
mov
aaa
repz
aam
cmc
jb
inc
test
mov
pusha
inc
sbb
lock
int3
adc
cmp
xor
lahf
or
jnp
push
push
ljmp
add
mov
rolb
fcomp
or
xor
push
sbbl
mov
inc
adc
js
push
ss
pop
push
push
cmp
push
mov
rcrl
xchg
addr16
jae
push
imul
aas
xlat
jg
lret
pop
mov
xlat
xor
pop
cmc
out
test
enter
call
push
mov
push
lods
lret
mov
mov
jmp
dec
and
arpl
xchg
mov
incb
orl
push
xchg
cs
mov
add
fnstsw
icebp
fwait
xchg
cmp
mov
lret
into
fisttps
mov
cli
cmpsb
push
and
and
jnp
add
adc
in
adc
mov
xchg
sub
dec
sub
and
pop
jmp
pop
mov
or
mov
jl
jns
push
and
enter
jecxz
mov
pusha
mov
xlat
es
ja
and
icebp
les
jns
jo
pop
xor
test
fnstsw
sub
cmp
cmp
push
enter
popa
mov
lahf
cltd
dec
scas
push
jge
out
inc
dec
push
mov
add
jae
pop
and
dec
adc
jne
insl
jns
dec
int3
stc
sbb
sub
xor
cwtl
inc
negb
in
adc
sub
js
test
fldenv
sbb
nop
inc
inc
adc
jl,pn
and
lds
imul
js
sbb
loope
sbb
sarb
pop
and
int
inc
icebp
mov
mov
inc
aad
xor
mov
stc
mov
xchg
cmpsl
das
pop
cmpsl
sub
mov
mov
cmp
fbld
jecxz
and
mov
cmp
into
jg
movsb
test
sbb
mov
pop
jl
mov
fstps
out
add
lret
out
push
xchg
ret
lret
mov
push
cs
lret
shrl
dec
or
js
jns
sti
dec
ds
adc
out
test
inc
dec
xchg
shr
sbbl
out
cmp
outsl
jg
addr16
bound
xchg
and
dec
out
jno
fldt
cmc
mov
loop
fstpl
lcall
nop
test
or
sarl
and
push
movsb
or
mov
xor
loopne
xchg
mov
leave
add
mov
sbbb
jns,pn
ljmp
cmp
adc
ds
and
fs
adcb
ret
lret
and
mov
push
cmpsl
pusha
mov
mov
or
add
jge
das
or
out
movsl
scas
rolb
xchg
push
or
pop
js
movsl
outsl
mov
adc
icebp
test
push
pop
rolb
jle
insl
cmovnp
insb
test
sahf
mov
ja
outsl
imul
sbb
aaa
pop
mov
mov
sbbl
sbb
loopne
mov
push
adc
sti
movsl
push
ret
test
pop
cmp
repnz
xlat
xchg
inc
cmp
push
sbb
push
or
mov
aad
mov
icebp
jbe
dec
push
pop
or
mov
adc
push
or
mov
lret
or
enter
les
jo
adc
fistpll
jge,pt
adc
test
lgs
shlb
aad
pop
cwtl
aas
pop
hlt
movb
pop
inc
sub
jp
pop
scas
adc
jns
and
push
or
cmpsb
or
push
xor
mov
adc
sbb
aam
jns
sbb
aad
scas
pop
add
outsb
ss
dec
xchg
lret
mov
xor
pop
mov
ja
mov
int
jmp
clc
xlat
test
inc
pop
adc
jns
and
scas
add
mov
ljmp
pushf
cmc
xchg
pop
pop
jecxz
jae
jg
xchg
push
inc
sub
pop
and
repnz
mov
fildl
sbb
and
inc
imul
cmp
push
stos
add
icebp
shll
or
jl
mov
inc
data16
call
add
add
clc
mov
mov
jbe
stos
cmp
les
cmp
fs
sbb
leave
aaa
mov
outsl
pop
mov
clc
or
or
sbb
inc
pop
jb
and
test
xlat
inc
mov
inc
into
jmp
add
fwait
pop
mov
xor
test
cmp
xor
bswap
mov
stos
dec
loope
mov
push
inc
dec
push
jmp
sub
sbb
lds
inc
sar
stc
popf
jge
add
lods
or
and
sbb
cwtl
push
push
mov
xchg
and
mov
or
cmp
in
jno
fs
dec
out
push
cli
cmp
xchg
inc
fldl
jmp
sbb
add
nop
pop
cmp
test
push
stc
mov
xor
mov
fwait
sub
ret
inc
inc
adc
movsl
add
xor
cs
movsb
into
sbb
fisubl
push
mov
sub
aad
adc
pop
push
sbb
andl
mov
mov
cs
call
or
testl
inc
in
sub
lods
mov
jbe
adc
sbb
hlt
cmp
sbb
cwtl
dec
aad
scas
test
shrb
enter
jno
sbb
cmc
push
stc
or
mov
lahf
aas
data16
cmc
out
mov
lock
pop
push
pushf
push
popf
clc
cmc
mov
int
cli
dec
mov
xor
and
mov
push
fsubrl
mov
in
rol
mov
int
cli
bound
clc
inc
xchg
mov
rclb
cmpsl
cwtl
pop
xor
xor
and
add
sub
int
jmp
fstl
inc
inc
lcall
or
mov
scas
scas
jmp
ja
mov
add
insb
clc
test
int
stos
in
xchg
sahf
jecxz
scas
jne
mov
adc
pop
addr16
push
jns
push
adc
leave
push
cmp
ljmp
stos
movsl
mov
pop
push
xchg
lods
sub
and
cmp
mov
push
and
adc
adc
push
cmp
out
xlat
pop
es
and
xlat
xchg
jp
xchg
mov
lahf
addr16
outsl
push
inc
pop
stos
or
into
pop
jecxz
pop
call
andl
shrb
push
mov
jnp
repz
sbb
lds
sub
mov
loopne
enter
and
or
pop
cmp
inc
push
dec
jae
add
dec
test
cmc
or
xor
inc
aad
inc
mov
ss
pop
fdivl
fdivs
dec
jo
shrl
jns
outsb
or
imull
cmp
cmp
or
pushf
fs
jb
pop
jl
xchg
dec
mov
cs
push
xlat
mov
scas
sub
scas
sub
out
inc
pop
xor
leave
loop
dec
cmp
and
scas
add
sbb
sti
inc
popl
add
sbb
cmp
inc
jg
mov
xor
movsb
adc
push
mov
int3
push
add
mov
mov
or
and
push
adc
mov
sti
xchg
cmp
jns
addr16
sub
push
dec
lahf
ljmp
pop
and
dec
adc
mov
iret
xor
xchg
pop
fs
roll
mov
cwtl
jno
nop
in
xor
add
push
imul
add
das
dec
xor
jg
sti
inc
xchg
ja
sbb
test
add
or
insl
or
cmpsl
sub
daa
dec
bound
stos
xchg
add
lret
mov
sbb
mov
inc
xchg
cmp
xchg
fldcw
sbb
loopne
popf
cs
popl
fwait
aaa
stc
or
mov
aas
add
adc
out
lds
add
or
mov
int3
sbb
leave
mov
movsb
jb
pop
js
xchg
cwtl
int
push
mov
sbb
shll
mov
ljmp
andps
repnz
add
lds
dec
out
jns
xor
idiv
movsl
ja
push
fmuls
push
fistl
mov
insl
or
jne
xor
addb
push
int
mov
add
and
ds
xor
add
cmc
push
pop
and
mov
mov
or
mov
pusha
sarb
int3
aas
add
call
or
hlt
push
js
es
cmp
dec
and
push
stc
mov
sub
add
out
das
aad
fidivrs
jbe
jecxz
je
scas
mov
pop
in
pop
mov
jmp
lods
jnp
push
dec
paddw
and
enter
adc
js
add
push
divb
jnp
xor
mov
inc
scas
xor
mov
frstor
push
out
outsb
cld
movb
sahf
jle
out
inc
pop
mov
push
hlt
movsb
and
fcom
push
jns
sarl
mov
sti
mov
mov
aad
into
loope
mov
repz
cmp
sbb
mov
jns
pop
mov
inc
mov
cmp
pop
sbb
jmp
std
imul
daa
divb
dec
cld
sbb
ror
lods
jecxz
stos
pushf
jle
or
scas
int
or
pop
loopne
insb
lds
arpl
dec
inc
sub
mov
shll
push
lods
mov
add
popa
sbb
xchg
lret
adc
sbb
dec
stos
dec
xchg
test
scas
pop
pop
and
jle
adc
outsl
jb
inc
push
xchg
testl
mov
pop
or
and
stc
add
mov
in
aaa
inc
inc
scas
pusha
jno
hlt
pushf
imul
inc
loope
mull
xor
mov
xor
sub
cmp
adc
into
test
fldl
imul
or
mov
push
inc
jecxz
ljmp
mov
xor
cwtl
and
or
push
orl
mov
and
jmp
pop
sbb
add
lret
stos
shl
cwtl
in
inc
and
cmp
jae
hlt
add
cmp
and
xchg
icebp
push
icebp
fs
icebp
sahf
jae
int
call
fbld
fistpl
in
sbb
jg
mov
xor
push
imul
cmp
aaa
push
cmp
pop
add
popa
call
stc
rolb
or
and
popf
movsl
jle
fiaddl
ret
mov
testl
jecxz
test
sub
lods
lret
push
jae
shlb
jb
sbb
inc
pusha
xchg
mov
cmp
push
push
in
inc
mov
add
and
pop
imul
in
shrl
std
xlat
inc
jbe
mov
fs
dec
and
test
jns
pop
outsl
push
push
repz
daa
add
call
lcall
sbb
xor
call
pushf
fs
xchg
outsl
lcall
cmp
idivl
pop
orl
jnp
lds
add
inc
and
mov
jmp
ss
or
cli
jl
jnp
aad
sti
xor
push
mov
and
xor
xchg
pop
and
mov
sbb
insl
and
sub
mov
cmp
mov
ljmp
xor
sbb
idiv
ds
data16
and
repz
mov
adc
adc
mov
cltd
ljmp
pop
testl
lds
mov
sbb
shll
add
dec
sub
mov
or
test
mov
inc
insl
jns
into
repnz
fwait
sbb
mov
push
mov
xchg
cmp
pop
jnp
aas
pop
ss
xor
addb
push
iret
outsl
sub
call
repz
lret
insb
sub
xor
cmpl
xchg
push
mov
xchg
imul
xlat
test
mov
jns
and
push
push
int3
push
or
xchg
dec
outsl
rorl
loope,pn
sbb
mov
ret
imul
cmp
cmp
popf
mov
push
jp
pop
pop
jg
push
shll
and
push
mov
ja
sbb
or
imul
dec
xchg
add
cld
or
and
xor
pop
adcl
sbb
jns
push
jno
sub
mov
sub
sbb
stos
inc
mov
sbb
or
fisttpll
hlt
cwtl
aas
cld
jl
xor
inc
xor
adc
cmp
stc
es
cmpsl
fstpl
mov
pop
loop
add
jmp
daa
or
mov
shrl
dec
dec
loope
fnstsw
xchg
insb
adc
inc
inc
out
hlt
das
or
leave
push
mov
mov
and
pop
jle,pt
cmpsl
cli
push
out
mov
jns
inc
adc
je
lea
sub
and
add
and
pushf
or
or
push
sbb
arpl
adc
fucomi
cmp
je
add
dec
and
sub
in
xor
push
xlat
mov
and
inc
push
fists
outsb
sti
adc
lods
pushf
mov
xor
int
cmp
repz
les
mov
jl
push
push
mov
add
clc
test
fsts
loopne
mov
xlat
out
mov
push
mov
aas
push
sbb
mov
lret
inc
fcmovb
loopne
add
jnp
scas
sub
xchg
out
adc
sti
and
xchg
cmp
lcall
mov
push
into
scas
sarl
pushf
push
sub
dec
sub
or
dec
inc
mov
outsl
insb
and
adc
push
or
jnp
mov
cmc
jmp
push
or
push
fisubrl
sti
sub
adc
mov
mov
sbb
mov
pop
mov
mov
into
stos
aaa
jp
test
mov
xchg
xor
loop
adc
mov
mov
xchg
or
out
pop
daa
sub
push
jo
daa
xchg
sbb
xor
and
push
mov
loope
xchg
inc
or
pushf
push
push
xchg
stos
sbb
bound
sub
mov
sub
push
pop
pop
and
repz
jno
push
jae
loop
aas
cmc
fs
into
call
loope
xor
jno
push
mov
and
push
hlt
repnz
lcall
sbb
frstor
aaa
cmp
inc
jl
not
sbb
repz
mov
sti
js
popf
cmpsb
in
sub
fdivrs
push
adc
fsub
inc
test
or
popa
cs
mov
enter
iret
loope
push
fistpl
outsl
and
mov
repnz
xchg
push
orl
mov
xchg
jns
jge
and
adc
jg
xlat
pushf
xor
sub
cmp
cwtl
hlt
scas
mov
jne
and
ja
mov
jno
mov
jne
aas
cmpsb
push
xlat
xchg
insb
pop
loope
in
mov
xor
jo
or
test
mov
scas
or
in
iret
insl
push
ret
std
sti
test
cmp
dec
inc
dec
stos
outsb
sbb
mov
ja
repz
sub
loope
add
jb
sbb
rcl
fsubrs
pop
cltd
stos
cmp
jo
push
cmp
xchg
pop
mov
cmp
add
inc
rorl
mov
cmc
xchg
in
mov
mov
mov
mov
push
push
rcll
loope
subb
mov
xor
pop
lret
xchg
cmpsb
xor
cmp
test
neg
push
scas
pop
movsb
sub
negl
popa
push
mov
adc
clc
insb
jnp
xchg
orl
or
sbb
jns
fisttpl
add
sbb
push
shl
lods
xlat
out
daa
mov
and
jno
fstpt
in
sub
add
mov
aaa
add
push
jecxz
lods
shrl
xchg
add
lods
aaa
push
or
jecxz
add
bound
jle
stos
lods
sub
xchg
pop
lret
jg
inc
fldcw
push
icebp
xor
xor
loopne
in
jo
add
scas
pop
cld
stc
dec
cmp
push
fadds
pop
cmp
out
mov
xchg
cwtl
faddl
fimull
or
clc
insl
addr16
sbb
push
mov
xor
add
and
stc
sbb
loopne
orb
popf
aas
push
dec
outsb
inc
repz
or
and
adc
cmp
inc
push
jecxz
loopne
or
add
cmpsl
xor
jae
add
inc
jno
imul
loopne
and
dec
add
mov
lods
test
loopne
clc
daa
sbb
sub
dec
and
and
jp
rcll
pushf
mov
inc
pop
popf
fwait
rorb
adc
ljmp
cmc
cld
imul
and
cmp
add
fsub
aas
pop
les
dec
lahf
cmp
add
les
xor
mov
bswap
or
add
sbb
jl
dec
stc
mov
jo
jb
inc
sub
sub
pop
into
add
xor
push
popf
pop
inc
popa
cmp
fmul
adc
jl
pop
mov
notb
dec
mov
rol
mov
pop
mov
int
cmp
cmp
or
movsl
dec
bound
inc
pop
or
dec
pop
aaa
cs
adc
jo
outsl
in
sub
mov
dec
xor
cmc
and
test
clc
or
mov
push
ret
and
jg
add
hlt
icebp
sub
das
and
mov
cmp
cmp
dec
xchg
aaa
or
sbb
fiadds
mov
lret
mov
xchg
scas
mov
mov
aas
mov
movsb
cmp
in
push
jecxz
push
lret
outsl
xor
sub
adc
lahf
or
and
and
iret
stos
mov
dec
fstpl
dec
jbe
leave
repnz
mov
test
push
cmp
jge
and
int
loopne
and
jl
xchg
lock
dec
and
mov
ljmp
push
lret
pushf
sbb
ret
sahf
arpl
dec
dec
lret
inc
push
insb
pop
int3
inc
mov
outsl
dec
cltd
push
add
scas
loopne
jge
movsb
push
mov
mov
int
scas
cli
movl
aaa
sbb
dec
xchg
pusha
hlt
jne
adc
jecxz
xchg
enter
xor
push
mov
mov
xchg
push
jae
stc
or
insb
xor
mov
xchg
inc
push
shll
dec
lahf
mov
or
test
mov
cli
push
sbb
test
cs
jno
out
aam
aaa
xor
xchg
dec
pop
adc
imul
mov
cmp
lods
lock
adc
ror
outsl
aaa
repz
inc
or
pop
sahf
mov
fsubp
psubq
popa
scas
jge
and
jb
addr16
pop
jmp
arpl
xor
scas
cmp
cmp
les
ja
push
xchg
enter
cwtl
push
xlat
push
pusha
add
loopne
insb
pop
or
rorl
into
stc
push
dec
or
mov
loopne
arpl
xchg
rolb
sbb
cmp
lahf
cmp
jl
or
jmp
cld
leave
sub
add
jno
out
push
adc
jg
sbbl
sbb
les
jmp
or
xor
in
sub
lcall
jg
in
pusha
dec
inc
and
pop
add
cmp
fdivl
fsubrl
mov
out
or
pushf
push
into
sub
movsb
lahf
dec
mov
iret
inc
dec
outsb
jns
inc
adc
xlat
ds
outsb
roll
xor
add
mov
add
adc
aas
or
dec
sti
push
loop
push
jae
mov
jecxz
sub
mov
push
dec
mov
xchg
insb
stos
or
push
ret
aam
sbb
lret
or
in
push
pop
stos
or
push
or
sub
cmp
sti
jmp
or
sub
popl
xor
and
sub
dec
fimuls
dec
in
dec
fadds
stc
xchg
cmp
incb
and
in
popa
push
enter
jp
scas
call
xor
xor
push
pusha
icebp
cmp
movsb
shrl
and
dec
sarb
jle
in
or
fwait
leave
loopne
jl
add
fnstenv
and
rcrb
jle
add
ja,pn
outsl
jbe
les
incb
or
cs
test
popa
push
loope
aaa
mov
inc
test
mov
lret
rcr
sbb
fwait
or
jbe
mov
lea
fs
daa
mov
pop
popa
push
fiaddl
rorb
and
mov
xchg
mov
mov
and
adc
mov
sbb
inc
lods
inc
into
mov
loope
mov
lods
cmpsl
add
sub
mov
pushf
pop
mov
mov
cmpsl
jno
mov
sbb
arpl
or
loope
pop
and
loopne
xor
pop
mov
adc
cmp
ret
xchg
leave
push
arpl
mov
jns
cmpsl
add
in
adc
jmp
add
push
mov
rorb
hlt
sbb
and
fldcw
pop
outsl
inc
xlat
push
and
push
test
scas
mov
cwtl
mov
mov
daa
stc
insb
andl
inc
mov
data16
push
xor
es
cmpsl
and
pop
movsl
aas
adc
cmp
jae
ror
cmc
or
inc
scas
and
jno
push
loope
inc
sub
aaa
push
lods
adc
dec
lea
cmp
sub
adc
enter
push
fadd
test
arpl
test
jl
mov
xchg
jno
mov
sbb
sub
loop
fmuls
gs
fmull
mov
imul
mov
or
cmp
or
hlt
mov
pop
sbb
mov
push
mov
lcall
mov
xchg
iret
fsubr
das
lahf
mov
inc
les
aaa
dec
popa
xor
adc
sti
sbb
mov
test
subb
repnz
mov
dec
hlt
sbb
jo
mov
mov
sub
and
shll
pushl
mov
and
inc
or
lea
or
jmp
fcomps
cmpsl
lods
loope
add
call
dec
mov
adc
insl
ds
mov
mov
lcall
into
mov
jl
gs
push
xor
lods
xor
sbb
movsb
lcall
push
push
mov
xchg
mov
pop
scas
fcompl
aas
dec
xor
xchg
insl
imul
mov
movsl
or
ds
je
sub
or
into
jp
out
or
lds
pop
and
mov
cmp
loope
inc
jne
cmpsl
adc
sti
or
dec
add
push
sbb
push
pop
pop
xor
fnstenv
cmp
daa
adc
push
in
sbb
push
add
fs
push
movsl
sbb
sbb
aam
mov
jecxz
rorb
hlt
fcoml
lds
testb
cltd
lods
inc
nop
mov
dec
into
adc
xchg
sahf
dec
mov
sbb
outsl
cmpsl
add
icebp
adc
je
mov
call
inc
xchg
gs
andb
repz
mull
sbb
ret
or
cmpsb
inc
iret
adc
scas
rcrl
fistpl
in
fldt
stos
enter
mov
addl
stc
sbb
push
or
lods
fs
dec
shl
or
mov
pop
xchg
fists
jmp
repnz
xor
xor
mov
in
push
dec
imul
test
popl
aam
pop
test
hlt
mov
push
pop
push
fadds
repz
int3
add
push
dec
ss
ljmp
inc
push
pop
in
adc
sbb
jp
dec
adcl
pop
outsl
clc
fs
out
jl
pop
ds
daa
mov
jne
pop
pop
call
adc
jo
fdivs
mov
mov
xor
sub
js
and
leave
adc
inc
push
dec
lea
push
xlat
dec
hlt
sbb
loope
sub
sbb
in
mov
or
shrl
shll
imull
mov
push
rcrb
pop
fs
sbb
xor
sahf
cmovae
pop
or
lods
push
ljmp
ja
adc
inc
mov
stc
and
cmp
add
cs
push
inc
pop
repnz
jbe
jp
adc
cld
jmp
cmpsb
and
inc
cmp
loop
xchg
popl
jnp
ljmp
scas
bound
jg
lcall
mov
aad
icebp
jp,pn
lods
pop
pop
and
ja
push
mov
dec
movsb
inc
add
mov
cld
loop
sbb
mov
push
xchg
and
sahf
mov
mov
ljmp
jne
sub
cmpsl
enter
lret
ret
pop
packuswb
xlat
push
sti
dec
or
jp
bound
ror
mov
imul
sbb
out
xor
pop
xchg
sbb
popf
xchg
pop
push
pop
pop
inc
xor
aas
movsl
and
add
xchg
push
mov
cmp
ljmp
mov
push
cld
add
out
mov
push
lds
pop
lods
fmul
push
outsb
mov
hlt
pop
data16
dec
pushf
sbb
xor
inc
pop
jne
mov
insb
adc
pcmpeqw
xor
xor
lret
sbb
inc
adc
rcrb
mov
jecxz
lock
xchg
push
push
ja
fldcw
sbb
pusha
and
sbb
out
or
cmp
lret
xor
scas
adc
in
jns
ds
out
adcb
jg
xchg
jg
mov
in
sti
jg
imul
push
add
adc
ret
inc
daa
andl
mov
inc
dec
inc
loop
or
jle
in
add
dec
sar
fcmovnu
push
xor
cmc
popf
pop
inc
clc
test
jnp
and
add
repz
or
cmp
cmp
inc
and
test
int
inc
mov
inc
nop
mov
pop
sti
data16
and
aaa
cmc
dec
aaa
mov
push
negl
dec
loope
sti
push
mov
subl
inc
add
cmp
in
sbbb
jp
jl
pop
sbb
sbb
and
nop
mov
test
dec
dec
or
lods
jne
ss
pushf
or
mov
jmp
stos
rcrl
push
gs
xor
pop
movsl
and
and
shrl
xchg
les
xor
jnp
cmp
in
jne
xchg
lods
in
mov
xor
shll
cld
cmp
insb
mov
add
cmp
mul
adc
push
adc
rcl
popa
shl
repnz
mov
jg
in
sub
and
mov
mov
dec
jmp
mov
add
mov
leave
pop
jmp
dec
fnsave
je
inc
pop
jecxz
and
lahf
mov
mov
adc
decb
clc
push
add
xor
je
sbb
cwtl
or
popf
mov
adc
pop
xlat
mov
and
inc
icebp
mov
inc
pop
dec
mov
daa
mov
sbb
push
sbb
and
mov
cli
lds
sub
les
pop
aas
mov
popa
adc
dec
loop
jbe
faddl
rorl
clc
jo
inc
pop
stos
mov
loopne
lcall
or
mov
idivl
sbb
adc
fcomip
imul
push
mov
inc
mov
sub
and
mov
mov
mov
hlt
sub
in
pop
pop
popf
fdivp
lcall
movsl
scas
or
sub
or
lahf
jl
mov
xchg
jnp
jno
je
js
cltd
jle
mov
lds
rclb
inc
jno
or
jae
xor
and
sub
js
scas
shll
je
pop
dec
cmp
fwait
xchg
in
out
lds
adc
jne
mov
mov
push
rcll
insb
xchg
and
lods
add
sub
mov
aas
ljmp
hlt
xchg
mov
jle
jae
fisubrl
mov
mov
jae
setle
bound
pop
sbb
xor
push
ljmp
mov
in
sahf
loopne
icebp
or
and
enter
pop
push
cmp
xchg
sbb
leave
cmp
xchg
inc
or
inc
sbb
jmp
xchg
cli
subl
jns
xchg
out
dec
pop
mov
rorl
cwtl
cmp
pop
in
mov
je
xchg
mov
dec
xchg
adc
sbb
jmp
pop
pop
fisubrs
scas
arpl
mov
or
mov
sbb
xchg
jl
pop
cmpsl
sbb
inc
ss
scas
push
dec
pusha
lcall
lods
push
add
adcb
imul
popa
push
xor
lods
and
jbe
aad
inc
dec
mov
in
repz
ret
jmp
cmc
xor
pushf
xor
pusha
pop
lret
repnz
mov
xchg
inc
sti
out
orl
nop
data16
jae
cli
cmc
stos
imull
pop
mov
cmp
lods
push
adc
mov
mov
and
fs
clc
sub
loope
sub
sbb
push
loop
mov
enter
cmpsb
repz
stc
daa
sbb
negb
mov
or
fcmovnbe
rcl
inc
dec
dec
jno
dec
xchg
sahf
sti
popf
bound
xchg
push
sub
sbb
mov
enter
cmpsl
pop
inc
stc
daa
daa
push
faddp
sub
mov
or
ja
jns
loop
movsl
dec
sbb
push
sbb
dec
push
xchg
xchg
int
aaa
xchg
mov
imul
fisttpll
jb
xor
icebp
into
dec
lret
int
mov
push
push
leave
xor
roll
in
leave
or
inc
jns
cmp
aas
rcr
loop
test
cs
add
sbb
jg
cmpsl
dec
push
mov
mov
mov
data16
push
cmp
hlt
jbe
sti
jg
sub
or
push
jmp
jno
cmp
sub
sbbl
imul
rcl
xor
fstps
stc
inc
fistps
add
mov
and
pop
sahf
pop
icebp
into
xchg
xlat
inc
push
inc
ljmp
sahf
xchg
cmp
clc
notb
ret
push
int3
dec
xchg
ds
and
mov
pop
inc
xchg
popl
push
cmp
and
data16
cmp
sub
cld
test
hlt
push
jecxz
mov
dec
push
cmc
jecxz
movb
or
jg
cmp
push
inc
push
je
jb,pt
into
pusha
pushf
jecxz
push
or
pop
dec
push
sbb
and
pushf
pop
inc
sbb
cmp
sbb
xor
call
movsb
iret
jne
fsubrp
inc
sub
in
jp
popa
or
popf
or
dec
ficomps
pop
pop
dec
adc
sub
sub
int
sbb
add
lock
addr16
and
mov
mov
clc
push
jle
scas
mov
out
jns
jns
xchg
push
popa
and
mov
lret
mov
pop
mov
clc
fisubrl
sub
xor
mov
mov
lahf
leave
adc
cmp
sub
add
mov
and
mov
jle
inc
adc
jecxz
inc
xlat
dec
xor
inc
test
outsb
dec
or
fisubs
cmp
and
fcoms
sub
jl
lods
je
push
cmp
or
imul
dec
xor
fcomps
or
and
repz
int3
fldenv
push
dec
popf
stos
loope
adc
ljmp
inc
inc
sub
adc
scas
mov
xor
push
push
push
fninit
and
mov
inc
xlat
push
or
cmp
jg
mov
push
scas
cmc
sahf
add
lcall
rorb
sarl
adc
xor
push
das
ds
sbbb
and
roll
enter
sbb
clc
xchg
xchg
push
insb
add
inc
insb
stos
lds
andl
sub
jbe
jnp
mov
imul
cmp
push
xor
add
or
mov
les
jns
pop
xchg
adc
or
iret
add
out
movsl
repnz
adc
sbb
push
dec
inc
data16
mov
je
sbb
inc
add
sub
pushf
outsl
popl
add
bnd
incb
pop
test
out
dec
loope
adc
scas
and
and
inc
sbb
in
insl
cmc
pop
sub
pop
sbb
or
sub
dec
addl
add
stc
subb
xor
push
push
cmp
push
sbbl
js
mov
adc
cs
or
sbb
das
mov
repz
cld
lds
in
mov
fnsave
outsb
mov
aam
jae
jnp
sbb
add
scas
or
insb
std
cmp
jno
rolb
pop
mov
loope
ret
adc
roll
push
inc
inc
inc
adc
and
add
jecxz
xchg
xchg
mov
inc
es
xchg
decl
inc
outsl
mov
mov
ljmp
leave
movsb
push
cld
jbe
movsb
xor
iret
dec
call
or
in
sbb
imul
jle
sbb
fnstcw
dec
ret
cwtl
imul
push
pushf
xor
jl
ljmp
push
jbe
jp
adcb
int3
mov
jmp
xchg
loop
popa
mov
daa
cmp
clc
xor
adc
mov
pop
cwtl
adc
add
and
leave
into
xor
ss
sub
mov
adcb
dec
popf
les
cli
mov
stos
fstps
mov
inc
and
cmp
or
mov
mov
mov
daa
cmp
and
and
popf
out
push
push
push
ds
sub
jle
rcll
and
push
test
fisubl
cmp
add
js
dec
jp
add
ret
mov
and
add
lods
sbb
icebp
push
adc
jle
or
xor
mov
stos
pop
call
add
sti
jmp
xor
leave
int3
mov
imul
mov
add
pop
icebp
mov
popf
ret
cwtl
pop
mov
push
jae
lds
enter
arpl
into
xchg
mov
cltd
xchg
xor
and
frstor
cmpsb
adc
mov
or
cmp
dec
dec
add
xchg
dec
jl
inc
jae
cmp
popa
dec
mov
mov
pop
sbb
add
sub
bound
xor
cmpsl
fmull
clc
or
andb
mov
push
push
sbbl
rorb
cwtl
out
adc
xor
fdivrl
jb
movl
pop
xchg
inc
jl
sbb
push
xchg
cmp
jne
shll
xchg
call
int
sbb
sub
arpl
into
out
sbb
out
int3
idivl
cwtl
inc
inc
cmc
in
cmp
mov
std
inc
xor
mov
scas
or
dec
ljmp
aaa
pop
xlat
mov
push
fs
and
mov
ss
sub
in
xor
xchg
into
movsb
js
insb
mov
dec
inc
icebp
test
dec
mov
pop
ss
js
sbb
arpl
inc
mov
insl
mov
dec
push
cmp
push
mov
mov
xor
inc
mov
pop
mov
sub
fwait
repz
push
pop
add
mov
iret
out
pushf
or
cmc
and
cltd
pushf
xchg
icebp
add
je
inc
popf
xlat
inc
loop
jmp
popf
mov
push
jge
jne
jne
cmp
jmp
ljmp
jecxz,pn
mov
xchg
push
and
bound
pushw
js
adc
cmp
sbb
xor
mov
and
xlat
or
xor
sbb
xor
sahf
xlat
insl
adc
mov
mov
push
inc
xchg
sarb
mov
cwtl
shl
cmp
flds
pop
shrd
xor
lods
xor
fidivl
mov
into
add
xor
mov
pop
inc
test
pop
xchg
mov
xchg
das
add
sar
ja
sbb
bound
arpl
aam
mov
mov
iret
mov
pop
xor
cmp
adc
pop
mov
nop
jmp
xchg
xor
into
jecxz
imul
test
je
test
mov
in
test
mov
pusha
test
mov
in
insb
stos
sbb
data16
popa
cmp
sub
cwtl
inc
scas
call
stos
inc
je
test
xlat
mov
dec
imul
arpl
mov
xchg
aad
rolb
pop
adc
int3
shl
iret
mov
inc
lcall
mov
xor
sti
ret
push
dec
dec
das
cmp
push
sahf
or
call
pop
lock
mov
and
add
andb
or
or
ss
in
scas
adc
arpl
or
ja
aad
push
cmp
rcr
sbb
pop
pop
leave
xchg
push
lock
cmp
int3
add
cmp
push
adc
dec
add
je
jnp
movsl
fiadds
aam
add
inc
dec
fs
sbb
clc
fimull
sbb
ret
xchg
sbb
add
popf
scas
jmp
jmp
sub
out
fisubl
mov
sbb
xchg
cmc
sub
mov
xchg
lret
aam
and
insb
cli
in
jmp
or
mov
jo
inc
adc
adc
lret
and
stc
and
and
mov
lcall
cs
cld
add
jbe
dec
pcmpeqw
mov
and
xchg
insb
movsb
stos
adc
lahf
call
mov
fimuls
push
fcomp
pop
repnz
mov
popf
push
sbb
jnp
and
add
int3
iret
sahf
lds
fwait
inc
push
push
std
jle
out
xor
mov
loope
pop
insb
or
xor
into
add
add
repz
mov
xchg
pop
fsubrs
out
and
and
adc
mov
jne
imul
lock
push
cmp
fcoms
icebp
and
sub
test
lcall
jns
pop
sbb
mov
cmp
clc
aaa
inc
insb
int3
inc
lods
inc
inc
pushf
mov
hlt
icebp
sub
int3
cli
repz
nop
imul
mov
outsb
aad
fstpl
out
xor
outsb
push
inc
fs
push
pop
sub
push
insl
pop
inc
push
push
pop
or
pop
dec
fiadds
std
scas
in
aaa
pushf
or
xchg
pop
popf
iret
popl
outsb
fwait
mov
cs
push
mov
jp
imul
push
xchg
ror
mov
dec
mov
xor
mov
mov
mov
pusha
js
sub
dec
pop
push
ss
repz
leave
inc
pop
push
std
jno
or
mov
jp
push
push
insl
push
cmpsl
decb
scas
fdivp
push
xchg
sbb
cmp
inc
xlat
pushl
sub
aam
lret
pop
addr16
xchg
hlt
mov
sbb
loopne
adc
leave
cmp
xchg
in
icebp
sub
test
pushf
popa
jmp
insl
ljmp
dec
add
cs
jl
or
add
xchg
int
dec
and
adc
adc
in
in
jbe
lds
xchg
mov
mov
and
xor
dec
pusha
lahf
add
ss
ror
fsubrl
loope
sub
test
test
inc
cwtl
xor
call
push
lods
mov
jg
sbb
adc
mov
into
adc
dec
out
addr16
xor
pop
popf
add
pop
or
cmpsb
adc
jne
pop
sbb
js
dec
nop
sbb
and
pop
dec
bswap
pop
movsb
xor
and
jle
add
cmc
xchg
and
add
std
mov
mov
dec
sub
sti
shrb
sahf
mulb
sbb
mov
in
sub
add
gs
lret
jle
or
and
pop
aaa
sbb
xor
cmp
cmc
sbb
js
imul
shll
cwtl
or
fucom
xchg
xlat
or
std
es
inc
pop
scas
aaa
lods
push
popa
dec
sub
adc
pop
jns
test
movups
mov
dec
loopne
sub
add
and
rcr
out
sub
mov
clc
sbb
sbb
mov
xor
leave
test
in
push
addb
or
mov
insb
push
dec
decl
ficoms
mov
dec
jne
dec
add
dec
sub
je
pop
adc
push
jg
mov
sahf
xor
insb
xchg
shl
std
dec
lahf
stc
jge
xchg
mov
xchg
cmpsl
cmp
and
inc
scas
xor
adc
and
fwait
rcr
cs
insl
sti
cwtl
leave
and
mov
inc
push
jo
cmpsb
rorb
stc
add
mov
xlat
xchg
push
add
jno
mov
mov
ljmp
pop
xchg
or
or
or
popl
xchg
aam
lahf
andb
sahf
mov
pop
adc
add
push
jae
mov
sar
aad
lahf
push
outsl
lock
cs
sbb
aam
mov
lret
mov
mov
aas
bound
xor
mulb
dec
pusha
pushf
cld
dec
aas
out
push
xchg
sbb
pushf
and
mov
outsb
mov
mov
xlat
cmc
dec
mov
cmpl
add
lret
ret
mov
outsb
sti
push
cwtl
xor
imulb
fucom
cmp
aad
jle
sbb
push
fwait
push
pop
jmp
shl
jb
jne
mov
outsl
testb
dec
int3
mov
adcb
dec
push
inc
je
fsubs
aad
movsl
pop
and
push
jle
or
lds
add
push
in
popf
hlt
xor
outsl
jle
mov
mov
mov
xor
stos
pop
xor
and
pop
inc
insb
cmp
ror
test
pop
cs
into
jecxz
sbbb
sbb
mov
daa
jbe
add
sbb
inc
and
rclb
sbb
push
hlt
inc
or
enter
lea
and
mov
aad
daa
mov
test
adc
adc
insb
push
outsl
xor
dec
aam
sub
lea
sub
pop
mov
jp
mov
test
dec
mov
add
adc
mov
cmp
or
push
clc
add
scas
rcr
into
pop
lock
ds
sub
adc
or
sbb
add
mov
add
cmpl
lea
sub
pop
pop
and
xchg
aas
dec
dec
and
scas
push
fisttps
jecxz
adc
das
jne
adc
xor
pop
mov
inc
in
push
pop
outsb
cs
xor
movsl
mov
adc
shrl
mov
fidivl
xchg
inc
mov
mov
lcall
pop
lock
sub
fdivrl
daa
mov
inc
das
out
and
stos
push
add
shrl
pop
pop
ret
mov
mov
pop
leave
call
pop
dec
test
push
mov
adc
ss
inc
mov
xchg
test
or
arpl
insl
pop
arpl
adc
xchg
or
add
inc
repz
in
nop
pop
push
push
sbb
adc
xchg
mov
push
dec
inc
cwtl
aad
or
mov
xor
and
xor
mov
adc
sbb
push
push
dec
sahf
dec
and
aaa
or
or
pop
test
stos
mov
xchg
dec
fldcw
and
sbbl
jl
inc
insl
js
leave
dec
sbb
pop
lcall
dec
pusha
hlt
shlb
rcr
xlat
subb
aad
mov
sbb
dec
mov
iret
cmp
inc
mov
add
stc
mov
jns
or
add
or
cmp
xor
sldt
ds
insl
clc
push
xchg
incl
or
xor
bswap
ficomps
pop
dec
xor
and
stos
xor
mov
fstpl
mov
hlt
mov
cld
mov
rcrb
popa
mov
insl
jno
fdivrp
sub
inc
adcl
sbb
xlat
mov
ret
repz
sbb
pop
ftst
cmp
sub
imulb
lds
sub
int3
add
and
sar
pop
das
shrb
out
daa
push
mov
and
dec
outsb
pop
mov
xor
jbe
adc
out
dec
stc
push
cld
xchg
aad
push
scas
adc
jle
aam
mov
cmp
mov
ljmp
jp,pt
cmp
and
test
incb
jg
lcall
mov
scas
inc
ja
pop
add
cmp
test
dec
cs
sub
cmpsl
in
and
xchg
fcompl
imul
pushf
scas
das
adc
orb
call
xchg
fcoml
or
pusha
loopne
sbb
lods
push
cmp
jg
xchg
inc
imull
dec
sahf
shrb
jp
popa
pusha
mov
push
cmp
mov
sub
into
lods
mov
dec
xor
aam
sub
sub
mov
fnstenv
push
sbbb
pushf
es
nop
jmp
in
or
or
fimuls
mov
xor
inc
outsl
add
xor
cmp
lods
xchg
pop
mov
adc
mov
xchg
lds
divl
inc
jae
dec
ds
dec
mov
xor
xor
lret
mov
xlat
rcrl
sub
lcall
sub
jg
mov
dec
mov
sub
fisubrs
stc
adc
out
daa
and
sub
les
sahf
rolb
mov
xchg
jb
mov
sub
mov
dec
fcoms
jb
cmp
xor
mov
imul
popa
out
sbb
inc
jmp
and
dec
and
cmp
sti
insl
or
aaa
cmpsl
out
dec
pop
jg
pop
dec
xor
xor
out
sbb
sbb
lods
add
movsl
aad
loop
imul
dec
xchg
lods
cli
imul
mov
sbb
pop
into
mov
and
lret
inc
cli
pcmpeqw
fwait
xchg
mov
or
inc
lret
jo
in
scas
sub
das
into
mov
jns
into
dec
cmpsb
out
sub
sub
icebp
ret
push
push
mov
fidivrl
mov
fildl
dec
in
in
cmp
daa
lods
pop
mov
mov
lcall
push
shlb
cmpb
adc
jecxz
test
xchg
pushf
out
subl
ja
loop
rolb
clc
cltd
and
mov
pushf
inc
jo
xchg
sub
adc
and
cmp
mov
repnz
mov
mov
lcall
push
jmp
out
dec
or
ret
pop
inc
dec
mov
cltd
jb
loop
xchg
in
cmp
fnstenv
pop
xor
mov
xchg
pop
rolb
test
jl
push
push
stc
mov
pop
inc
xchg
fwait
push
outsl
sub
pop
add
arpl
jle
mov
les
add
je
dec
dec
ret
data16
pusha
or
repnz
jecxz
add
adc
pop
daa
ja
ljmp
add
pop
jne
mov
cltd
push
clc
aam
adc
mov
popa
adc
cwtl
cmp
icebp
push
lods
jbe
cmc
cmp
icebp
and
pop
test
je
test
jle
cmc
jne
insb
movsl
push
lods
mov
pop
or
xor
js
jmp
sub
pop
mov
mov
pop
cmp
int3
jle
pushf
jmp
les
xchg
sub
and
test
sbb
sbb
jo
add
mov
pop
xor
ds
mov
dec
xor
in
pop
sub
push
fcomip
stos
jae
arpl
pop
cmp
das
xchg
lret
xor
pusha
shlb
jbe
pop
sahf
sub
orb
inc
in
and
jbe
adc
repz
inc
mov
popa
mov
dec
adc
mov
lret
pop
push
xchg
pop
sbb
les
mov
and
ds
ss
sub
push
lods
or
push
or
leave
jo
insb
xchg
ja
or
cmp
aad
mov
dec
sbb
and
imul
dec
hlt
jae
or
cmp
mov
inc
pop
add
xlat
inc
das
push
mov
movsl
cs
int3
inc
insl
dec
lods
ret
mov
mov
pop
dec
pop
pushf
rcl
xlat
sub
pop
jae
and
leave
faddl
sbb
and
mov
mov
mov
sbb
iret
sbbl
pop
das
pop
mov
pop
sub
orb
lods
ret
cmpsl
cmp
mov
test
daa
popa
inc
sub
in
leave
movsl
xchg
ljmp
push
sub
xlat
inc
stos
insb
push
stos
inc
inc
sbb
sub
das
jns
sti
jno
into
and
jecxz
xor
ja
je
xor
pop
imul
pop
out
roll
lahf
stc
iret
and
cmp
aaa
pop
rcll
shrb
js
xor
ljmp
shl
cmp
dec
mov
mov
jge
add
mov
or
pop
fsubl
sub
sbb
mov
jb
cmp
push
fistpl
loope
insb
cmp
add
addr16
dec
adc
mov
and
testl
call
ret
xchg
pop
xchg
inc
mov
ja
push
in
imul
adc
jns
and
movsb
xor
mov
lods
ror
sbb
inc
mov
xor
loop
jge
lret
sub
insl
xchg
sbb
push
add
sub
mov
daa
add
int3
mov
lods
repnz
mov
stc
cmp
and
xlat
rcll
inc
inc
mov
mov
insb
mov
sbb
jb
xchg
das
add
lods
adc
jnp
or
jo
mov
fmull
and
pop
xor
inc
mov
mov
es
jns
cmpsl
pop
nop
lock
push
pop
cmp
add
cmp
call
movsl
popf
fldt
in
cmp
xchg
or
stos
je
hlt
dec
jg
out
int
mov
in
stc
rclb
push
push
mov
jns
mov
jp
repnz
idivb
pop
inc
sbb
loopne
cmp
add
cltd
mov
ret
aaa
jo
in
outsl
dec
sub
push
xchg
repz
popl
mov
in
or
xor
mov
or
icebp
aas
jne
or
into
inc
pop
xor
cmp
pop
add
cmpsb
add
add
jmp
xor
repz
roll
imulb
cmpsb
cmc
mov
cs
repz
sahf
test
xchg
xorb
dec
mov
lret
dec
clc
mov
stos
push
inc
xor
imull
xor
into
xor
adc
cmp
pop
das
arpl
mov
or
add
outsl
sub
aas
xchg
or
orl
xor
add
inc
xchg
cmp
pop
int
jge
xorl
leave
dec
mov
sahf
test
mov
mov
sub
popa
jno
test
xchg
into
jo
fsubrl
jbe
xor
jnp
xor
aad
stos
rcr
dec
push
ljmp
test
sub
pop
inc
les
insb
fnsave
mov
push
adc
xchg
sbb
inc
add
cmp
out
lds
xchg
sbb
ljmp
cs
das
je
cmp
loope
addr16
bound
nop
fadd
sbb
icebp
xor
mov
jle
and
int3
xchg
sub
test
cs
lods
or
in
mov
ret
fisttpll
push
ret
xlat
push
mov
sbb
outsl
and
aam
pop
stc
adc
sbb
jae
call
push
outsl
adc
xchg
push
in
cli
test
lret
xchg
xchg
jle
popf
ret
mov
ret
sbb
xchg
hlt
repnz
add
lcall
roll
fs
call
addr16
aad
sbb
jl
mov
mov
dec
int3
outsb
fs
mov
add
mov
aas
lahf
sub
out
jo
pop
xor
addr16
sbb
sub
jg
pop
stos
jb
insb
into
jne
inc
cmp
jno
lds
popf
leave
jge
adc
and
and
push
or
mov
jecxz
xor
ja
add
sbb
inc
test
in
mov
add
movsl
dec
cltd
cli
jecxz
mov
xchg
xchg
lea
jmp
sarb
xor
jae
jecxz
add
jle
popa
ror
mov
add
dec
sbb
sbb
xchg
cmp
pushf
cmpsl
xor
cmp
push
mov
add
or
and
fsubl
hlt
pop
popa
insl
push
mov
or
fs
push
inc
fnstsw
imul
xlat
jns
inc
aad
cld
inc
inc
pushf
cltd
adc
jnp
jl
xor
mov
xor
push
xchg
sbb
dec
adc
sub
push
stc
jmp
adc
adc
mov
fdivrl
push
int3
jmp
and
sarb
fsubrs
push
lret
pop
jne
jp
clc
xor
ret
sub
cmc
xchg
imul
lods
scas
jl
pop
out
or
jge
push
cmp
inc
sbb
mov
aaa
scas
scas
arpl
lahf
cmp
cmpsb
push
aad
pop
and
sbb
lods
pop
clc
daa
shrl
push
rol
aaa
imulb
adc
hlt
mov
push
inc
jp
xor
or
pop
ret
dec
mov
sti
cmpb
out
xchg
cmp
or
mov
cld
push
push
cld
push
jb
jbe
stos
ljmp
stc
clc
jo
pop
cmp
dec
xchg
cs
and
and
xchg
push
bound
sub
and
or
sub
cld
into
inc
dec
pop
lcall
bound
addr16
push
or
jmp
fstpt
mov
loope
pop
rorl
lahf
pop
dec
test
hlt
lret
int3
std
mov
push
ret
adc
hlt
pop
aas
xor
stos
bound
sub
scas
mov
mov
and
mov
push
ja
pusha
pop
stos
scas
mov
dec
xchg
outsl
cmpsl
sbb
leave
add
rcl
xor
mov
out
dec
sbb
xchg
lcall
les
movsl
cmp
fistpl
inc
into
inc
inc
mov
or
push
les
loopne
xchg
xlat
cs
cmpsl
mov
dec
push
mov
sub
lret
mov
cs
pop
mov
xchg
loope
xchg
inc
add
cmp
mov
fmull
or
fldz
cmp
inc
mov
cwtl
jl
rorl
fidivs
loope
outsl
add
or
push
cmp
loope
push
inc
cmp
scas
sub
pop
add
cmpsl
popa
inc
scas
stc
adc
shlb
sbb
jp
aas
dec
jp
xchg
cmp
or
int
sti
xchg
arpl
push
outsl
and
rcrl
and
push
xchg
mov
mov
xor
add
cmc
push
add
push
and
insb
fiadds
sbb
and
inc
stc
lea
repnz
pusha
or
or
and
les
outsb
push
push
jae
dec
pop
cmp
mov
dec
adc
in
enter
repnz
pop
inc
pop
std
or
addr16
fiaddl
mov
jno
in
lcall
fiadds
cmpsl
adc
pop
insb
mov
jecxz
sbb
or
popf
cmp
jl
inc
popf
sub
sti
inc
ficomps
add
addr16
mov
cmc
iret
and
nop
add
sbb
mov
mov
hlt
lods
pusha
imul
inc
or
in
xlat
pop
and
push
xlat
sub
mov
and
inc
bound
jmp
shl
in
in
inc
sbb
fsubrl
adc
and
insl
insl
scas
cwtl
inc
mov
gs
xchg
cs
mov
sub
call
aad
push
je
xchg
mov
imul
shl
sub
pop
push
imul
ja
adc
xor
xor
mov
or
jb
pop
mov
xchg
mov
popa
inc
fs
leave
push
fildl
jns
sbb
cmc
jmp
jecxz
jno
and
call
jns
hlt
sbb
dec
mov
push
mov
and
jno
and
loope
std
mov
cmp
or
or
fwait
nopl
mov
aaa
mov
jo
push
dec
movsl
jbe
into
call
insb
les
and
pop
stc
loope
xor
cwtl
mov
adc
into
xor
mov
add
loop
jae
lcall
and
push
sbb
push
cli
push
repz
xchg
adc
mov
dec
orb
loope
testl
xchg
subb
xor
ficomps
sub
and
mov
lods
insb
jle
xor
cwtl
lret
data16
rcrl
cltd
and
dec
lods
add
icebp
adc
add
mov
push
sarb
aas
stc
frstor
jecxz
dec
fwait
adc
sub
inc
test
sbb
xchg
sub
int3
xchg
popf
cmc
aam
jmp
cmpsl
aad
sbb
push
inc
out
out
cmp
xor
mov
in
insb
mov
mov
push
insb
sbb
dec
inc
lcall
cmp
fmul
adc
inc
push
in
adc
aaa
test
icebp
adc
jns
sbb
imul
leave
add
and
aas
iret
lahf
xor
xchg
in
sbb
movntps
mov
in
imul
mov
cmp
rorb
mov
fwait
push
push
out
and
and
mov
mov
lahf
cmp
int3
psrlw
pop
jo
sbb
cmp
ja
push
ror
rcr
push
push
mov
fnsave
mov
add
sbb
and
jg
sbb
lcall
xor
dec
inc
cmp
sarl
ret
insl
adc
xchg
sbb
push
into
pop
and
adc
dec
add
fisubrl
icebp
xchg
enter
int3
pop
mov
sub
xchg
aaa
cmpsb
mov
roll
mov
insb
out
ret
or
mov
fwait
movsb
and
and
sahf
sbb
push
push
or
popf
repnz
scas
les
cmpsl
test
stos
add
movsl
cwtl
cmp
mov
loopne
out
fwait
aaa
pop
jns
sbb
sbb
scas
insb
add
ret
pop
lock
xor
or
inc
mov
inc
add
jnp
jne
les
xchg
ret
sub
imul
push
sbb
push
inc
or
inc
loope
add
mov
data16
lock
hlt
stos
or
inc
dec
xchg
mov
sahf
sub
mov
repz
push
fistl
sub
inc
jecxz
cltd
cmp
sub
ret
pop
stc
inc
jnp
jge
or
sub
mov
xchg
dec
fmull
jmp
shl
xor
insl
jns
es
aaa
addr16
xor
insb
inc
sti
das
xchg
or
and
fidivrs
xor
ret
sbb
and
aam
and
fcompl
add
rorb
pop
lods
mov
js
xchg
xchg
ss
int3
add
cmpsl
sub
mov
add
sahf
ja
push
das
mov
push
imul
nop
lahf
cmpsb
mov
sub
adc
push
add
cmp
mov
jb
aaa
sbb
push
out
xor
out
add
or
jl
aam
pop
sarl
ss
ja
cwtl
lods
stc
cmp
push
mov
inc
push
outsl
cmpsb
lea
clc
mov
jne
inc
stc
jmp
loop
jmp
ret
in
imul
xor
sub
add
mov
outsb
mov
enter
out
jnp
xchg
or
imulb
jo
lods
and
pop
stc
lahf
sarl
cmc
iret
adc
and
adc
std
test
xor
and
cmp
or
xchg
fistl
sbbl
mov
jne
inc
dec
cmpsl
hlt
cwtl
cmc
lcall
addr16
xchg
test
popf
aaa
adc
ljmp
sbb
or
add
add
add
mov
jecxz
mov
and
cmp
sbb
cli
pop
mov
pop
cmp
cwtl
mov
sbb
mov
dec
lods
popa
xor
add
es
ja
cltd
mov
mov
out
add
add
and
dec
mov
rcl
jmp
lock
pop
hlt
jo
pop
in
fstpl
and
insl
pop
jmp
incb
and
xlat
rorl
xor
in
xor
add
and
test
loope
rcr
inc
push
lret
aas
test
lds
outsb
pop
jge
jno
or
sbb
lods
inc
mov
insb
mov
inc
push
sahf
addr16
push
lcall
sub
cli
mov
mov
icebp
rclb
ja
imul
and
rcll
xchg
xor
xor
push
inc
and
mov
push
push
pop
pusha
jl
mov
int
sbb
mov
cmp
out
mov
xchg
mov
adc
cmp
cmp
je
shr
test
jge
ret
int3
add
push
loop
into
fs
adc
jns
int3
lahf
fimuls
fisttpll
pop
mov
adcl
xchg
loop
add
or
js
shr
cli
out
push
xor
add
mov
sbb
outsl
or
sbb
pop
dec
mov
loopne
mov
lret
mov
dec
add
sbb
xor
sub
into
inc
scas
imul
sub
sub
loope
jge
test
xlat
mov
inc
pop
xlat
mov
push
sub
fdivl
test
or
imul
pushf
les
and
pop
jo
jo
roll
xchg
out
test
cmpb
xor
or
mov
xchg
imul
cli
jle
hlt
dec
ds
scas
mov
aad
cltd
out
sahf
cmp
setg
sub
stc
xor
imul
inc
mov
cs
adc
int3
inc
push
or
bound
int3
and
jge
cwtl
inc
jge
jae
mov
xchg
cmp
sti
sub
xchg
loop
inc
ds
sub
movsb
or
add
push
sbb
outsb
jle
ret
pop
hlt
in
lock
inc
out
dec
cmc
aas
mov
cmp
dec
cmp
rcr
aas
jns
rorl
fnsave
or
in
lock
push
sbb
das
push
lds
inc
paddsb
push
test
sub
popf
adc
mov
js
hlt
rcl
jbe
mov
test
insb
popa
dec
cld
add
out
dec
lret
je
xor
jns
inc
xchg
push
adc
stos
ss
mov
xor
xor
outsb
mov
cmc
push
sub
aam
jne
inc
sahf
cmp
mov
jle
rol
cmp
pop
dec
jae
int
lcall
mov
aam
scas
xor
sahf
imul
stc
filds
jmp
pop
inc
mov
and
pop
in
xchg
sub
and
jnp
cmp
xchg
xchg
sub
mov
pop
mov
pop
add
sbb
adc
add
rcll
outsb
ret
popf
xchg
hlt
xorl
or
fildl
scas
popw
inc
lret
or
jecxz
loopne
cmp
jnp
ret
mov
lock
xchg
imul
dec
ds
sbb
push
add
ds
fidivs
cmpsl
adc
add
in
cli
push
jmp
sbb
gs
jecxz
mov
jl
mov
or
sbb
xor
cmp
ss
mov
clc
push
das
stos
into
ss
rcrb
jecxz
cmp
mov
adc
or
add
popa
push
mov
cmp
inc
dec
ret
repnz
xchg
nop
sub
mov
dec
push
into
mov
inc
cmp
pop
outsl
daa
out
push
js
sbb
vunpckhps
sarb
insl
jno
fmull
pusha
pushf
cs
adc
dec
into
cltd
repz
jecxz
push
jae
out
dec
mov
dec
clc
ds
insb
fsts
mov
ficompl
cs
mov
mov
enter
ljmp
fadds
adc
data16
das
cmp
scas
cmp
push
add
xchg
sub
push
js
mov
test
popf
shrb
mov
enter
push
xor
shrl
xor
shlb
loop
adcl
scas
aad
push
xor
sbb
push
cmp
scas
xor
adc
pop
sbb
in
es
cmp
popf
daa
push
mov
pusha
push
and
adc
mov
xchg
hlt
cmp
mov
add
sti
xchg
mov
sbb
mov
or
mov
aaa
and
or
insl
adc
shl
jns
aaa
in
add
adc
jbe
test
mov
in
sbb
jecxz
or
xlat
enter
sti
movsl
mov
andb
test
add
sub
and
xchg
fsub
inc
jle
jecxz
pop
push
pop
lcall
fistps
int
mov
xchg
dec
and
pop
pop
imul
addr16
aaa
mov
lock
test
sub
and
rcrb
inc
dec
mov
jg
and
enter
xchg
gs
lret
lds
dec
xchg
inc
fnsave
sbb
in
insb
add
sti
pop
mov
sbbl
push
sub
xchg
cmp
sub
mov
jns
stos
dec
inc
jmp
mov
pop
or
cltd
push
cmp
xor
pusha
jl
push
jmp
test
add
cmc
cmpsl
lcall
in
sahf
cwtl
enter
mov
in
iret
jne
ds
rcrl
imul
cmp
imul
mov
sahf
test
xchg
adc
push
repnz
pop
mov
pop
pop
jb
es
xchg
mov
enter
test
mov
daa
mov
cmp
mov
mov
mov
cmp
je
inc
sub
sub
cli
jmp
pop
minps
aad
int3
sbbb
add
jg
mov
repz
push
add
ficomps
mov
jns
aam
push
mov
sub
sbb
mov
adcb
xchg
and
aas
jo
cli
movsb
mov
movsb
aam
pop
stos
pop
dec
xchg
testl
xchg
into
mov
scas
xchg
stos
cmp
dec
xlat
mov
add
jmp
sti
shrb
hlt
cmp
push
test
or
inc
jp
cmp
add
dec
and
fwait
push
icebp
test
test
scas
jns
jecxz
inc
push
fidivs
pusha
mov
test
and
pop
lret
loope
mov
clc
cmp
mov
int3
lahf
and
mov
stos
inc
cmp
pop
mov
xor
inc
mov
cld
clc
int3
jne
shll
pushf
jne
xor
lcall
xchg
test
gs
in
mov
add
sbb
aad
fisubs
lret
inc
test
not
xor
adcl
cli
push
cli
or
jle
pop
inc
imul
in
pop
repnz
adc
xchg
or
sbb
push
mov
add
movsb
popf
out
xor
push
sbb
jne
xor
mov
icebp
sbb
pop
push
std
out
fwait
in
pop
popf
xchg
mov
ret
sbb
and
sbb
dec
scas
push
dec
inc
pop
stos
pop
and
mov
das
les
lds
mov
addb
push
aam
pop
mov
and
cld
cmpl
xlat
dec
nop
in
outsb
nop
pop
fsubrl
and
mov
push
in
sbb
add
adc
xchg
cmpsb
push
push
outsl
sub
mov
or
pop
xchg
mov
cli
test
jns
clc
mov
je
mov
pop
iret
ljmp
mov
les
mov
or
cwtl
fdivrl
lret
ss
pop
mov
aad
inc
insl
xor
jg
test
mov
les
cld
insb
in
xchg
test
xor
popa
sub
or
adc
ss
sbb
sub
xlat
inc
shll
lret
fisttps
pop
jnp
testb
fimull
or
pusha
leave
sub
data16
dec
and
and
stos
cmpsb
mov
push
and
and
shll
aam
dec
cmp
sbb
pusha
out
mov
add
or
popa
ds
pop
imul
and
int3
cmpsl
out
lods
sbbl
cltd
adc
and
mov
scas
jp
xlat
fmull
xchg
outsl
sub
in
insb
decb
pop
orb
aam
mov
dec
gs
dec
pop
in
and
or
or
les
or
adc
add
movl
outsb
imul
movsl
cmp
sbbb
test
or
dec
jp
add
dec
xchg
pop
test
push
fs
bswap
pop
mov
nop
negl
sbbb
cmpsb
lret
pushf
or
popf
mov
fwait
jae
inc
nop
mov
mov
mov
mov
das
cmp
insb
and
mov
lcall
aad
in
sub
jle
jbe
pop
sbb
js
push
or
push
imul
inc
pop
cmpsb
imul
cmc
popa
and
push
mov
add
movsb
mov
in
push
inc
or
les
test
lret
sub
sahf
xor
popl
cmp
lds
xchg
mov
mov
mov
div
insb
sahf
rcrb
fistl
xor
in
jl
sub
sub
cmc
mov
cltd
and
lea
rorl
lds
ds
or
push
xor
push
and
mov
adc
retw
and
push
xchg
add
mov
mov
ret
add
adc
add
pop
jo
or
adc
scas
adc
ss
iret
dec
test
stc
dec
shll
and
xor
adc
mov
fwait
lahf
mov
push
xor
and
push
out
xchg
jns
jge
pushf
insb
push
aam
es
aad
jo
xor
outsl
mov
xchg
jno
or
cmpsl
arpl
fwait
push
jno
dec
jmp
jmp
inc
add
cmp
dec
je
jg
jb
insl
push
dec
jg
js
in
in
out
xlat
jge
popl
add
or
sbb
loope
fimuls
or
push
cmpsl
sarl
mov
in
mov
push
test
popa
scas
into
in
bound
xor
in
aas
outsl
mov
push
das
cltd
sbb
sbb
sub
scas
stc
jg
inc
mov
sub
xor
inc
cmpsb
mov
inc
pushf
sub
xchg
lea
cltd
add
into
cld
cmp
inc
sub
cmc
pusha
mov
jbe
pushf
out
das
adc
in
xchg
inc
popa
wbinvd
or
cmp
and
leave
pop
icebp
stos
pop
andb
push
mov
subl
pop
data16
loope
fadds
maxps
popf
aad
xorb
push
ss
pop
clc
outsb
mov
cwtl
insb
loop
stc
mov
or
inc
sub
xor
sub
jns
outsl
out
das
sub
out
mov
or
and
mov
dec
add
mov
das
cmp
mov
mov
pushf
xchg
sub
popa
scas
repnz
nop
jno
sbb
inc
pop
xchg
mov
push
call
mov
insb
mov
les
loope
mov
stos
pushf
and
or
xchg
arpl
mov
sahf
lock
and
scas
jne
or
and
add
dec
sub
cmp
add
inc
add
jmp
jp
or
rcrb
sti
add
pop
mov
mov
cwtl
fwait
mov
aad
enter
xchg
insl
inc
adc
adc
icebp
mov
push
test
ret
sbb
or
jo
pop
imul
push
add
sbb
frstor
and
in
cmp
inc
fnsave
cmp
enter
dec
inc
mov
xor
mov
jns
call
push
sbb
test
outsb
pop
and
daa
mov
loopne
cwtl
jg
mov
xor
dec
dec
dec
mov
add
inc
mov
shrl
mov
rcrb
xor
sbb
insb
into
sbb
imul
mov
out
jmp
cli
or
mov
jb
cmpl
pop
into
sub
pusha
testb
arpl
inc
fdivl
push
cmp
dec
jecxz
mov
cmp
test
sub
xchg
xlat
push
loopne
pop
aaa
or
inc
mov
iret
add
mov
xor
mov
xchg
sub
lea
out
sbb
stc
shl
js
push
inc
movsl
cs
and
push
inc
js
mov
out
fisubl
sti
fsubl
movsl
cmp
adc
mov
pop
mov
inc
aam
mov
cmp
cmc
and
pushf
jle
mov
notl
mov
push
aad
add
jne
int3
push
mov
loopne
aad
aam
stos
sub
fildl
mov
iret
mov
aam
cmp
ror
push
adc
hlt
das
lods
push
fsubrp
and
dec
icebp
mov
inc
lods
fmuls
mov
xor
sub
jl
imul
hlt
cmp
lods
int
jbe
push
pop
push
pop
and
cmp
and
inc
movsl
and
xchg
push
loopne
sbb
jne
outsl
mov
jb
pop
loopne
push
mov
or
lds
paddq
pushf
fsubrp
lahf
leave
iret
mov
add
inc
sub
cmp
das
inc
sub
xor
jecxz
xchg
xorb
adc
dec
dec
sbb
test
mov
jne
icebp
cld
fadds
insb
test
sbb
jle
mov
xor
repz
loope
push
cmpsb
outsb
xchg
sahf
into
xchg
outsb
mov
adc
push
mov
test
pop
push
jg
pop
cltd
dec
jp
adc
push
int
push
pop
ds
sbb
jnp
hlt
cmpl
outsl
fnsave
pop
fst
add
mov
push
adc
aad
arpl
mov
sub
mov
fwait
pop
sbb
sbb
cwtl
push
sbbb
out
cmc
dec
xchg
mov
pop
cmp
add
nop
sahf
add
xor
adc
rcll
fcomps
mov
in
sbb
mull
add
ljmp
xor
xchg
add
adc
dec
mov
lea
pop
popf
bound
adc
xchg
ret
push
pop
push
data16
lcall
iret
push
mov
mov
ja
sub
add
aad
jle
aad
nop
mov
jl
movsl
lock
dec
aam
shrl
orl
push
fisubrs
add
ds
sahf
push
inc
push
pop
jnp
stos
adc
pusha
rorb
insl
sub
push
jno
das
jecxz
pop
repnz
xchg
jo
jge
xor
lea
jne
cld
xchg
xchg
in
xor
inc
mov
mov
sbb
cmp
mov
xchg
loop
jns
pop
test
inc
mov
and
rorb
cmc
cmpsl
mov
or
inc
stos
inc
dec
jecxz
dec
fsubrl
cmpb
jnp
push
xor
dec
cwtl
xchg
xchg
and
ja
jno
aam
repz
fdivrs
movsb
or
sbb
cmp
jl
dec
into
movsb
rclb
push
repz
jge
xor
shrl
hlt
push
or
cmpsb
out
lret
mov
out
or
mov
scas
bound
jmp
lret
cmp
decl
or
popa
cmp
addb
or
in
inc
jbe
outsb
xor
xchg
cmp
or
sbb
inc
sub
test
cmp
or
mov
cmp
cmove
cmpsb
xor
lahf
test
aaa
mov
sti
mov
and
mov
in
mov
in
sub
ss
stos
lea
fwait
pop
mov
xchg
adc
sbb
faddp
movsb
fwait
sbb
inc
dec
lds
out
xor
dec
rcrb
push
int
sahf
mov
insl
out
xor
cmc
xchg
cmpsb
pop
bound
xor
stos
push
cs
cwtl
call
enter
cmp
mov
push
int3
hlt
or
pushf
jbe
xchg
pop
push
and
popa
sti
adc
int3
dec
mov
xlat
dec
test
cld
dec
ret
lock
lock
inc
mov
loopne
bound
mov
sbb
jmp
subl
cmpsl
fsubrl
and
shrl
and
mov
add
lods
test
ror
mov
jns
pusha
adc
xchg
dec
xchg
in
aas
repnz
outsb
scas
loope
push
repz
add
sbb
lret
push
bound
or
enter
push
pop
inc
lahf
xor
mov
int3
test
add
sbb
jl
arpl
cvttps2pi
mov
out
dec
mov
sub
cltd
cmp
cmpsl
lea
popf
push
sub
cli
icebp
cmp
nop
stc
push
mov
pop
jno
jecxz
jmp
sbb
out
dec
repz
pushf
add
jl
lahf
xchg
inc
or
mov
repz
inc
scas
cwtl
fwait
std
enter
shrb
adc
xchg
inc
jle
cmp
inc
push
push
add
and
sti
outsl
ret
cltd
or
jge
or
cmpl
push
pop
ficoml
and
mov
sub
loopne
jg
clc
jge
xchg
xor
cmp
addl
hlt
dec
loop
not
ucomiss
cmp
adc
dec
pop
lahf
sub
sbb
adc
jle
repnz
cs
into
cwtl
cmp
lea
ss
iret
sbb
cmp
push
insb
adc
xor
insl
xchg
push
mov
sbb
dec
test
cmc
sub
int
xchg
adc
outsb
sub
and
test
daa
cmp
inc
dec
imul
inc
sbb
cli
sub
inc
xlat
dec
sbb
adc
leave
loop
cltd
add
push
xor
repz
cmpsl
pop
cld
push
cmpl
add
and
pusha
lds
ror
mov
popf
or
clc
push
je
xlat
and
push
stc
negb
mov
testb
or
das
lahf
clc
cmp
in
jl
addr16
stos
sub
mov
popa
test
pushf
jo
jg
mov
push
push
pusha
sbb
loope
lods
sbb
adc
push
mov
xchg
adc
lods
push
and
inc
xchg
insl
int3
cmp
daa
js
jno
inc
add
scas
in
inc
jmp
jne
jmp
add
sar
mov
pop
sahf
cmpsl
enter
mov
or
and
and
jnp
in
inc
xor
jns
outsb
sahf
add
adc
das
dec
imul
sbb
pop
shlb
cwtl
stc
adcb
mov
stos
cs
pop
push
jg
js
sbb
cmp
in
stc
pop
loopne
mov
nop
push
pop
dec
lret
ret
and
test
xchg
jnp
adc
cmp
pop
push
adcl
fistpll
pop
jb
in
add
hlt
jl
fadds
adc
sub
and
dec
cs
xor
dec
mov
xor
popf
out
repz
hlt
sub
and
aad
in
loope
xchg
adc
insb
aam
pop
push
or
imul
scas
or
mov
mov
dec
ss
add
pop
stos
xchg
sarl
nop
mov
outsl
lahf
insb
icebp
jae
inc
ja
xor
lods
push
inc
test
popf
mov
fs
lret
fldl
sbb
xchg
into
mov
adc
outsl
pushf
mov
cmpsb
push
mov
inc
push
push
jb
adc
imul
and
fwait
and
jae
int
dec
cmp
int
pop
test
fmull
movb
pop
fiaddl
dec
adc
mov
lret
cmp
pushf
out
and
and
cld
lcall
stos
aad
js
xor
rcrl
fildll
scas
test
or
popa
mov
push
cli
pop
mov
xchg
enter
mov
int3
and
mov
stc
mov
mov
and
mov
and
mov
cmc
xchg
das
lea
lods
mov
dec
andl
int3
leave
xchg
rcrl
data16
insb
and
fwait
leave
adc
out
mov
sbb
dec
pop
fisubrs
mov
push
and
out
mov
aad
faddl
sub
sub
stc
or
xchg
es
repz
sti
loopne
push
jecxz
in
mov
rclb
adc
cmpl
jle
dec
imul
fisubrs
sahf
sbb
jmp
inc
testl
dec
lock
sub
and
xchg
inc
cli
push
push
iret
addr16
pop
inc
pop
iret
fcmovbe
inc
inc
and
xor
mov
sub
jnp
outsl
out
jae
add
adc
insl
fidivrl
out
ret
jae
cmp
fiadds
jne
mov
nop
cmc
xchg
syscall
and
cs
loopne
dec
push
inc
push
mov
mov
movsb
xor
repz
fs
in
add
sub
loopne
cmp
ss
repz
mov
mov
lcall
je
xor
xchg
or
cmpsl
stos
mov
add
mov
movsb
pop
jecxz
pop
xchg
pop
and
repz
cmp
in
add
xchg
cwtl
imul
sbb
xchg
inc
dec
jo
mov
xor
cmc
adc
stc
and
in
jns
loopne
add
lea
dec
es
mov
lea
inc
inc
and
sbb
ret
dec
neg
test
add
or
jo
sbb
aam
mov
inc
jae
xchg
stc
inc
popf
push
push
xchg
xor
sub
inc
mov
rorl
pop
inc
lock
in
inc
xlat
mov
std
add
mov
cmp
cmp
push
and
stc
jo
into
push
ljmp
sahf
mov
lahf
and
aas
pusha
fidivl
cmc
adc
inc
cmp
mov
pop
inc
das
cli
jne
scas
or
movsl
cwtl
out
lret
mov
pop
addb
fcomps
pop
jmp
imul
out
data16
mov
inc
xchg
sti
or
and
test
mov
scas
push
fwait
in
sub
or
push
mov
out
pop
outsl
xchg
arpl
or
popf
cmp
cs
adc
fimuls
sbb
loope
add
jl
call
stos
push
add
imul
cmc
cmp
test
sbb
mov
out
test
push
nopl
aaa
push
mov
cmc
cmp
xor
and
and
test
mov
ss
lods
mov
jo
icebp
sub
lahf
jns
pop
push
cmp
add
je
shrl
lgs
push
cmpsl
add
adc
fcomps
add
test
jno
in
pavgw
test
ds
jae
test
mov
daa
inc
ficoms
dec
pop
pushf
push
js
and
clc
or
xchg
das
jns
lahf
test
mov
int3
leave
push
jae
dec
dec
jns
xlat
cli
pop
ud2
xlat
inc
pop
cmc
xor
mov
add
mov
xor
xchg
aad
inc
mov
icebp
xchg
lea
sub
xor
pop
push
in
jbe
mov
lods
xlat
mov
pop
out
jl
in
scas
mov
dec
push
sbb
stc
add
cmp
cmp
cmp
popl
jecxz
sbb
fidivrs
dec
push
dec
jo
in
shrb
into
icebp
mov
mov
jecxz
ljmp
cs
mov
dec
fsts
push
repnz
and
sub
js
cmp
mov
xlat
lcall
test
xchg
mov
mov
test
data16
orb
xlat
mov
adc
icebp
cmp
push
sbb
leave
es
sbb
jecxz
xor
ret
aam
dec
int
loop
push
add
popf
xchg
mov
fsubl
rolb
lods
outsb
leave
mov
addr16
loope,pn
xchg
xchg
jmp
dec
inc
sub
mov
push
test
dec
xor
les
or
sbb
mov
sbb
cmp
rcrl
out
scas
push
jnp
es
insl
pop
inc
fcomi
mov
sbb
add
and
or
and
in
dec
decb
push
imul
lcall
mov
and
lods
mov
adc
sub
test
pop
xor
in
lcall
test
test
add
and
and
enter
mov
jg
je
pop
lcall
insl
push
mov
or
dec
cmp
inc
lock
cli
js
nop
cltd
xor
jnp
xor
adc
pop
dec
loope
pop
jmp
sbb
mov
jne
adc
lahf
ret
xchg
xchg
dec
lret
add
xor
leave
sbb
push
add
stos
push
or
mov
int
and
loop
das
mov
scas
lret
in
push
dec
and
cs
cltd
pop
cmp
mov
xchg
rorl
icebp
subb
xchg
repz
inc
pop
stc
mov
movsl
mov
sbbb
aad
add
pop
shll
inc
lcall
movsl
xchg
inc
sub
mov
lods
xlat
call
setg
int
jg
dec
and
pop
into
add
dec
or
stos
mov
or
fdivl
ficoml
fcompl
pushf
pop
jecxz
div
sbb
mov
jnp
adc
mov
xchg
mov
in
movsb
jnp
adc
pushf
sub
scas
andl
bound
daa
inc
xor
into
sub
cmp
inc
jmp
xchg
movsb
push
cmp
ja
outsb
adc
das
stc
mov
xor
jmp
js
jno
mov
or
jo
sub
out
mov
and
sbb
pop
mov
pop
dec
and
push
adc
mov
mov
xor
adc
jne
inc
stos
or
pop
pop
out
dec
insl
jns
push
mov
pushl
fisubrl
dec
dec
sbb
lea
push
fwait
xor
fsubrp
mov
cmp
jns
xchg
xor
adc
dec
dec
inc
pop
xchg
addl
mov
movsb
mov
pop
sbb
inc
xchg
gs
jl
sahf
xchg
icebp
stos
aaa
adc
pop
mov
in
mov
cmp
pop
and
jle
test
mov
or
push
loope
mov
xor
in
inc
xor
cmp
shlb
mov
out
inc
mov
out
mov
repnz
xor
cld
add
test
push
mov
adc
inc
ja
xchg
je
ret
pop
pop
inc
sbbl
sub
mov
xor
push
xor
xchg
iret
lods
mov
cmp
inc
and
sbb
mov
or
and
lahf
add
push
dec
sub
mov
push
jnp
aad
jge
imul
out
xchg
push
lds
icebp
aaa
fistpll
ja
ljmp
cmp
push
inc
es
int
jp
js
xchg
xchg
sub
add
pushf
or
pop
loopne
xor
jo
push
shrl
fisttpl
gs
mov
xor
stos
and
stos
sub
jl
push
roll
sub
sbb
dec
add
xor
and
aaa
mov
inc
loope
dec
js
mov
outsl
je
ljmp
dec
cmp
insl
stc
and
sub
dec
aad
dec
jecxz
or
xchg
pop
icebp
movsb
cld
jecxz
push
cli
repnz
aad
mov
jp
testl
inc
inc
daa
insb
adc
and
push
test
sbb
test
jns
jne
aam
inc
scas
dec
and
mov
call
sbb
and
dec
mov
in
jae
adc
loop
mov
inc
imul
pop
inc
lcall
mov
dec
cmp
xchg
dec
mov
repnz
xchg
and
sbb
inc
shll
or
inc
cmp
negb
cmp
scas
jp
dec
mov
xchg
pop
scas
icebp
loopne
jne
comiss
cmp
mov
or
mov
dec
addb
std
insb
inc
repnz
arpl
inc
dec
inc
lods
jns
dec
cld
lods
fsubrs
in
add
xchg
addr16
xlat
add
mov
and
lods
jmp
cmp
ja
lret
fmull
and
jno
mov
inc
ss
adc
icebp
adc
imul
enter
lock
cmp
mov
pop
mov
lret
mov
add
jl
push
push
xor
add
dec
imul
outsl
je
jb
lea
inc
jnp
xchg
cmp
aas
pop
test
add
sub
imul
sbb
movb
xor
or
call
lahf
jne
fiadds
cmp
clc
inc
subl
mov
xlat
adc
leave
push
cmpsb
hlt
aaa
sar
adc
xchg
lods
pushf
pop
mov
repnz
movsb
add
in
outsl
mov
push
jno
push
daa
lret
and
inc
test
stos
pop
push
and
into
push
mov
scas
lds
lcall
sbb
and
hlt
idivl
mov
popa
add
xlat
mov
mov
imul
pushf
inc
sub
xorl
add
aam
push
xlat
pop
mov
popa
fisubrs
std
xor
pop
pop
das
dec
call
fwait
subl
jnp
dec
push
pop
scas
add
repz
sahf
dec
push
mov
shlb
test
orl
jae
inc
pop
push
hlt
in
aad
sbbl
mov
movsb
in
int3
out
or
push
sub
xor
ret
cmp
push
les
and
mov
cmp
mov
cmp
mov
add
lret
mov
fwait
sub
cmpsb
dec
jmp
pop
or
lds
and
inc
fldt
or
outsl
xor
xor
sti
and
pop
and
das
arpl
test
roll
les
sub
pop
and
push
push
sub
push
test
cmp
jo
aad
fcmovne
stos
inc
loopne
push
imul
lret
ss
push
mov
int
clc
sub
xor
stos
jno
jb
arpl
daa
sbb
clc
insl
loopne
push
and
mov
add
inc
inc
pushf
cmp
cwtl
mov
inc
dec
and
dec
mov
add
testb
jge
daa
or
stos
scas
sbb
add
jg
jmp
mov
faddp
aam
je
insl
leave
in
adc
xchg
mov
lock
std
xchg
and
das
xchg
cmp
repz
cld
jle
testb
jo
outsb
jmp
mov
pop
mov
or
ret
es
jno
test
mov
sbb
test
xor
adc
lret
lcall
cs
mov
mov
test
sti
pop
sbb
notl
sbb
scas
in
xor
push
add
and
and
aad
jecxz
inc
jecxz
fnsave
mov
imul
pop
icebp
push
mov
push
mov
mov
sbb
inc
mov
scas
stc
pop
fst
inc
mov
pop
cmp
pop
in
xchg
fs
sbbl
insb
jmp
push
clc
sub
insl
mov
adc
xor
dec
jmp
xor
dec
pusha
or
icebp
and
repz
sub
mov
fs
icebp
xchg
pusha
stc
dec
test
adc
out
pushf
lcall
lcall
daa
scas
lcall
jnp
jno
movsb
push
fisttps
cmp
ja
movsl
cmp
dec
and
loopne
daa
xchg
jo
add
or
aam
movsl
out
mov
aas
inc
mov
loopne
enter
sub
js
fadd
xor
test
push
and
adc
inc
push
xchg
add
sbb
xchg
fsubl
xchg
imul
jmp
je
mov
and
push
sbb
out
cli
scas
lea
adc
and
mov
lret
cmp
sub
sbb
in
aaa
dec
ja
mov
lds
stos
imul
outsl
cs
inc
mov
into
xchg
and
fimuls
pop
mov
push
sub
pop
je
aad
fstpt
cwtl
clc
add
sub
lret
loope
bound
dec
imul
outsl
mov
into
outsb
dec
push
or
xchg
mov
ret
dec
aad
sbb
fdivs
sbb
adc
mov
sub
mov
int
jno
add
test
mov
and
repnz
sub
daa
xchg
xor
adc
jb
hlt
push
test
mov
sub
icebp
or
jg
mov
test
and
por
adc
pop
leave
sarl
sahf
stc
push
pop
mov
negl
stos
jge
pop
adc
or
or
push
into
push
inc
insl
xor
adc
cltd
bound
imul
add
cli
lcall
arpl
pop
stc
xchg
out
mov
out
jmp
call
sbb
outsl
cs
push
call
cmp
stc
xor
popf
iret
jns
or
cmpsl
mov
lret
xor
sbb
pop
and
out
iret
out
insl
cmpsb
sub
push
and
adc
mov
jae
xor
xchg
mov
icebp
aas
js
mov
add
adc
lods
inc
xor
fcomps
inc
mov
dec
adc
push
and
ficomps
dec
adc
or
dec
or
jne
ss
xor
rcrb
push
adc
inc
sbb
fimuls
inc
jmp
fs
pop
ljmp
enter
mov
js
mov
sti
jne
and
add
push
push
leave
and
sub
cli
mov
hlt
jns
test
mov
pop
adc
mov
lret
test
sbb
or
outsl
ret
push
ja
adc
int3
cmp
cs
mov
xor
push
and
hlt
idivb
push
in
sahf
add
loopne
jle
int
push
mov
inc
in
daa
adc
push
hlt
jno
cli
xor
ja
inc
mov
ja
dec
sbb
bound
fdivrl
adc
jge
jns
int
mov
push
jecxz
sbb
adc
jl
xor
dec
scas
add
lods
aas
add
lret
clc
mov
mov
sbb
loope
push
inc
decb
cld
scas
sbb
push
stc
psubw
mov
ljmp
sahf
jg
outsb
test
add
inc
hlt
mov
xorl
and
into
fcmovnu
loopne
insl
xchg
movsl
pop
xlat
dec
sbb
hlt
mov
fs
repz
jmp
in
nop
addr16
inc
xor
xchg
push
xchg
fmull
dec
leave
mov
aad
push
aas
je
leave
xchg
dec
popf
enter
fcmovnbe
into
or
dec
mov
cwtl
lds
dec
cmp
xchg
lret
jb
pop
andl
pop
sub
pop
and
or
dec
pop
pop
xor
movsb
arpl
add
pop
leave
xchg
out
cmp
inc
loope
test
adc
js
cmc
repz
pop
in
fs
push
pop
int
ret
loope
cmp
ret
repz
aaa
pop
lahf
pop
ds
xor
cmp
jae
sbb
dec
stos
inc
adc
or
adc
inc
and
sub
call
call
push
jmp
icebp
lcall
pop
mov
jmp
loop
push
add
nop
fisubrs
and
rcrb
jo
or
fildl
push
mov
cmpl
sub
inc
out
pushf
cmpsb
pop
push
cld
sbb
xlat
xchg
sub
pop
in
sbb
push
xchg
lcall
fisubrl
stos
sbb
out
or
jmp
mov
insb
rcrb
repz
out
mov
xor
pop
cs
lea
and
and
insb
clc
cmp
sbbb
mov
mov
push
mov
inc
mov
cwtl
inc
push
inc
pop
outsb
or
shrl
xlat
les
mov
mov
sbb
insb
jnp
ret
stos
jecxz
lock
jl
movl
cmp
clc
sub
or
add
pushf
dec
pminsw
mulb
jecxz
mov
fnstsw
pushf
or
orb
add
cld
sub
pop
sbb
test
movsb
dec
loopne
jb
sbb
cmpsb
inc
shrb
jne
data16
popa
cmc
or
push
fstps
pshufw
cmp
xchg
pusha
pop
jmp
add
or
xchg
cmc
nop
inc
fcompl
and
lods
lahf
outsl
test
mov
pop
or
mov
insb
sti
inc
mov
mov
mov
es
add
pushf
adc
mov
xor
mov
les
cmp
ja
ds
and
popa
stos
dec
lret
loopne
int3
jns
push
push
mov
add
out
in
sahf
mov
sub
inc
jmp
and
adc
out
pop
dec
or
lret
push
lcall
int3
in
aas
dec
lcall
fstps
mov
addr16
inc
adc
mov
lods
rolb
out
add
mov
jbe
mov
and
mov
scas
iret
int3
aas
jae
inc
add
insb
and
test
or
add
mov
xor
int3
into
pusha
dec
and
xchg
int
ds
lea
mov
pusha
adc
lcall
inc
and
popf
cld
rclb
sub
push
repz
pushf
add
les
jno
pushf
into
xor
adc
shll
or
inc
popf
xchg
js
mov
cmp
jne
lods
mov
xor
sub
fsubrs
adc
sbb
add
inc
mov
jl
add
jecxz
dec
shlb
test
xchg
pop
aad
pop
rorb
xor
in
cmp
repz
adc
add
stc
je
in
scas
pop
jg
shlb
adc
out
mov
out
and
fwait
dec
daa
lret
mov
mov
div
add
pop
push
xlat
cmpb
call
movsb
cwtl
jne
es
and
mov
ja
repz
into
popf
in
mov
push
stos
dec
xor
cld
sbb
jmp
sub
pop
add
cs
cmp
inc
xchg
dec
insl
ljmp
fwait
add
xor
cmp
int3
mov
and
xor
push
outsl
add
mov
or
jp
xor
hlt
mov
test
shrb
jne
pushf
cs
ret
cmc
mov
mov
mov
test
jo
cld
testb
in
scas
mov
movl
icebp
pop
sub
mov
and
add
sub
iret
fimuls
cmp
jg
push
ss
pop
ds
pop
stc
insb
cmp
mov
cmpsl
jae
mov
sbb
cwtl
ss
das
jecxz
ds
jecxz,pn
xor
xchg
mov
in
or
insb
xor
cltd
insb
cli
dec
dec
leave
fwait
and
or
pop
cld
mov
cmp
mov
dec
and
sahf
pop
loope
push
xchg
jne
inc
ret
push
mov
and
roll
pop
insl
imul
push
movsb
orb
sbb
hlt
nop
jg
cmp
popa
add
inc
mov
dec
int
aam
mov
cs
pop
loope
aad
imul
mov
fstl
setne
xchg
enter
push
cmp
in
mov
pop
inc
in
cmp
int3
movsb
xchg
jbe
add
subl
mov
es
frstor
xchg
insb
jmp
jecxz
dec
push
or
inc
push
xchg
aad
int
popf
cltd
jns
in
push
sbbl
stos
xchg
dec
add
cs
add
pop
and
inc
cmc
jl
adc
rcl
addr16
xchg
mov
push
push
dec
jnp
cwtl
loop
adc
jl
outsl
jnp
mov
jge
fidivl
aaa
ret
or
xchg
lahf
xor
xchg
mov
sub
add
inc
jnp
les
add
je
adc
add
outsl
or
xchg
pop
mov
and
push
push
cmpsl
stos
pop
dec
outsb
jnp
push
test
mov
popa
cmovbe
nop
sub
add
or
push
out
test
loope
push
imul
out
mov
out
and
ljmp
push
ret
cmp
sbb
mov
and
mov
bound
imul
mov
fistpll
xchg
outsl
push
jb
mov
mov
cltd
iret
and
out
sbb
add
sub
mov
inc
les
and
push
mov
lods
enter
fs
adc
data16
adc
dec
shrl
addr16
cmc
push
mov
cmpsb
je
ja
mov
in
fidivs
hlt
xor
and
xor
adc
sub
in
dec
and
dec
add
mov
fsts
push
pusha
cld
negl
sbb
and
mov
or
sbb
test
scas
outsb
push
jns
sbb
lods
pop
repz
pop
or
adc
add
out
and
pop
mov
popa
orl
dec
push
or
shl
inc
cli
out
lret
inc
xchg
push
inc
fwait
popa
sbb
sub
repz
mov
sub
xor
enter
push
sbb
jg
pop
pop
dec
jecxz
sub
mov
xchg
imul
push
sub
jg
xor
sub
sub
dec
pushf
jns
pop
pop
or
pop
bound
adc
les
loope
das
insb
push
popa
subb
lds
cltd
jb
xchg
aaa
mov
dec
icebp
xchg
jne
add
pop
and
data16
inc
xor
imul
movsb
mov
stos
fstpl
inc
mov
add
xchg
dec
mov
scas
ret
jne
ja
outsl
jg
mov
loop
cmpb
movsb
out
pop
clc
push
push
or
ljmp
mov
insb
in
adc
jmp
mov
pop
inc
test
cs
xchg
mov
cmp
leave
pop
notl
ljmp
loopne
jmp
es
mov
push
dec
ret
insb
int
cmp
sahf
rcrl
jae
and
std
icebp
dec
xchg
popa
fwait
xchg
push
out
mov
or
lret
data16
imul
or
mov
inc
mov
xor
hlt
lret
das
pop
mov
mov
mov
cltd
inc
into
pop
cmp
stc
clc
cmp
mov
adcl
out
inc
lods
out
sub
push
je
or
insb
pop
shrl
rorb
int
mov
mov
add
daa
rcrb
and
scas
inc
sbb
pop
or
inc
add
mov
and
dec
pop
jmp
sbb
cmp
xor
cmpb
lds
popa
fwait
rcrb
cmp
push
xor
cmc
test
imul
add
decl
jg
xchg
push
jp
pop
popf
nop
or
hlt
jns
and
mov
stc
mov
cmp
fstpt
adc
nop
into
lods
dec
xor
jle
aam
adc
inc
xor
and
xor
jl
adc
bound
mov
lods
dec
mov
mov
dec
lahf
mov
pop
jecxz
out
jo
inc
inc
subl
inc
sub
mov
push
mov
push
ja
push
mov
jecxz
ja
in
cwtl
cmp
clc
mov
shrb
stc
ret
jmp
sub
lret
jl
loope
icebp
adc
push
repnz
and
push
imul
xchg
loopne
inc
cmpsl
adc
movsl
mov
mov
dec
sbb
rcrb
xchg
or
sbb
mov
jmp
pusha
push
in
adc
cmp
inc
outsl
cmp
and
cmc
jae
out
mov
add
pop
or
add
push
out
mov
push
lock
xlat
imul
or
and
push
dec
mov
pop
jb
sub
sbb
clc
movnti
sbb
dec
je
pop
movl
iret
and
data16
pop
loope
repz
clc
aaa
mov
inc
add
mov
mov
scas
dec
push
je
dec
lcall
jo
or
adc
sti
pusha
sub
mov
pop
xor
negb
decb
mov
adc
repnz
cwtl
je
xor
pushf
sbb
sti
pop
mov
add
lret
cmp
mov
fsubs
mov
fdivl
sub
and
iret
adc
cmpsl
loope
dec
repz
les
xchg
rorb
enter
idivb
mov
mov
sub
inc
cli
adc
adcl
xchg
push
xor
pop
mov
mov
lret
cmp
hlt
mov
mov
jl
cs
fs
negb
push
sbb
mov
jo
and
xor
pop
inc
mov
push
aaa
pop
fistps
jb
xchg
repnz
add
icebp
mov
mov
jns
adc
shrl
fistpl
jp
and
mov
outsb
or
pop
ss
xchg
outsl
pop
lods
mov
and
add
mov
dec
xchg
push
adc
aaa
xchg
repnz
pop
add
add
push
jg
cmp
das
add
mov
adc
mov
mov
lcall
adc
fsubl
into
aaa
sub
or
ret
add
xchg
cli
imul
xor
jl
call
rcr
in
mov
push
dec
jp
inc
les
sub
rorl
int
push
out
int3
and
sarb
loop
or
mov
add
stc
xchg
into
insb
addl
cli
fsubs
mov
jo
lds
pop
hlt
cmp
or
fsub
inc
mov
push
sti
ds
out
push
xchg
cmc
fdiv
mov
cmpsb
cmpsl
sbb
pop
mov
mov
movsb
sub
push
addr16
or
out
xchg
inc
push
cmp
dec
mov
inc
pop
xchg
mov
aad
push
js
into
dec
pusha
jl
cwtl
push
add
xor
daa
add
xchg
je
adc
inc
dec
mov
dec
fnstenv
fbld
jl
nop
int3
jmp
leave
neg
push
outsb
and
mov
inc
add
ds
jmp
insl
sti
and
adc
daa
mov
inc
pop
int3
push
push
insb
dec
test
push
mov
scas
std
out
stos
leave
rep
shlb
mov
popa
mov
jb
fmul
in
test
mov
loope
sti
shrl
cmp
inc
out
jnp
xor
push
loopne
scas
mov
inc
stos
jmp
jecxz
test
mov
add
push
je
sub
and
jno
inc
das
jp
cmp
leave
xchg
xchg
lods
sbb
xchg
mov
mov
jmp
pop
dec
jb
xchg
and
pop
bnd
je
sub
sti
mov
jmp
cmp
adc
mov
adc
ja
adcl
cld
in
cli
pop
add
imul
and
cmove
pop
pop
or
xchg
cmp
adc
and
fcomip
push
in
imul
popa
cs
add
dec
jb
or
mov
sbb
js
repz
xchg
xchg
sti
daa
cwtl
into
lods
popa
cmp
mov
out
cmc
mov
fnsave
loope
jge
scas
pop
dec
pop
push
mov
loope
mov
sbb
push
popa
push
mov
out
add
inc
and
add
lock
arpl
out
and
cmp
push
aad
shr
mov
ret
mov
pop
ljmp
outsb
stos
or
and
xchg
in
cmp
arpl
lret
jb
loope
sbb
cmc
inc
mov
repz
sbb
adc
or
into
inc
mov
or
loope
mov
adc
jnp
repz
or
sahf
in
fisttpl
or
addr16
test
adc
fs
mov
cmpsl
and
mov
sahf
out
rcrb
call
repz
xchg
std
jmp
and
or
and
adc
pop
mov
sub
insb
pop
adc
pop
rorl
add
shr
add
inc
ja
xor
add
mov
int3
les
inc
test
aam
jae
dec
and
and
cmp
bound
shl
adc
xlat
add
sub
sub
and
pop
push
mov
pushf
mov
fcoml
pop
pusha
cwtl
add
pop
ret
lods
jno
sub
pushf
in
mov
jmp
push
mov
scas
mov
mov
icebp
inc
or
dec
sub
pop
inc
mov
jl
dec
pop
dec
dec
pop
gs
testb
mov
inc
bswap
or
sub
fs
mov
dec
pop
xchg
jo
adc
mov
int3
push
jg
fwait
scas
adc
jb
mov
pushf
aam
xrelease
jne
inc
cmp
jne
mov
imul
cwtl
mov
icebp
repnz
clc
adc
mov
pop
fnstsw
xchg
push
pushl
mov
inc
dec
jg
cmpsl
stc
mov
cmpsl
and
dec
inc
and
cmp
pop
je
insb
cld
pop
imul
add
push
hlt
cwtl
cmp
mov
out
jl
jg
sbb
sub
inc
cwtl
mov
dec
mov
push
mov
push
push
mov
and
testb
push
rorb
inc
mov
and
jge
and
cmpsb
add
stos
ss
repnz
xchg
adc
and
or
aaa
in
pop
adc
xor
ret
popf
scas
mov
popa
addb
pop
pop
inc
es
xor
and
mov
mov
inc
aad
lcall
add
popf
dec
incb
aad
cs
adc
xchg
icebp
mov
incb
scas
push
xor
nop
cltd
lahf
inc
add
repz
adc
rcl
inc
jl
in
into
cmp
lods
adc
imul
gs
jbe
shl
jl
sbbb
ret
or
cmc
ret
pop
push
pusha
lcall
fmulp
adc
pop
ja
daa
xlat
mov
jl
imul
mov
cs
xor
scas
add
and
leave
add
cltd
mov
inc
mov
in
in
inc
fwait
mov
sub
and
mov
rorl
aam
lcall
int3
cmpsl
ret
jmp
and
xchg
mov
insb
xchg
cmp
inc
test
hlt
push
into
mov
jbe
cmp
dec
or
or
sub
xchg
sbb
inc
addb
mov
cs
fnstcw
sahf
aad
and
inc
push
out
iret
lods
mov
int3
and
pop
and
inc
xchg
ja
and
addb
icebp
mov
or
sbb
mov
mov
sbb
jle
pop
mov
lds
repnz
push
data16
and
inc
mov
idiv
je
xorb
xor
cmp
mov
jns
xor
adc
sbb
pop
lods
sbb
iret
fmull
dec
inc
fisubs
dec
cli
aam
sub
pop
jecxz
repnz
xor
dec
add
clc
stc
mov
mov
ja
enter
adc
test
stos
jg
mov
repz
enter
cmp
mov
fsubr
pushf
push
adc
gs
ljmp
int3
imul
and
aas
das
sbb
dec
repnz
and
mov
xor
ficoms
pop
testl
xchg
cmp
or
int3
icebp
and
in
test
mov
fcompl
mov
xchg
mov
and
test
push
xor
dec
repnz
fistpll
pop
jle
adc
jne
aad
inc
addr16
jecxz
inc
aad
fnsave
out
mov
mov
xchg
mov
xchg
jp
or
and
xlat
or
sti
inc
movsb
jae
bound
xchg
mov
mov
testl
orb
sbb
xchg
test
lahf
jae
add
dec
and
sbb
fldcw
icebp
sub
jno
loopne
xor
xchg
test
or
pushf
pop
and
mov
mov
mov
xorb
sahf
int3
cs
jg
mov
jo
and
testl
xchg
mov
dec
pop
fstpt
jecxz
cmp
sub
xchg
xlat
aaa
sbb
insl
cs
inc
stos
pop
in
test
lsl
int3
sbb
jmp
inc
jae
scas
fidivl
rorl
test
sbb
and
inc
xchg
cmp
mov
sub
dec
roll
add
inc
and
cmpsb
push
inc
xchg
and
addb
insl
lods
out
xor
out
xchg
push
int3
push
mov
sub
add
and
cmp
test
daa
cmc
into
mov
pop
dec
ljmp
xchg
jns
and
push
ss
adc
in
add
add
cmp
sbb
in
lock
mov
incl
cltd
testl
sub
int3
scas
cmp
adc
pop
jbe
cmp
and
inc
xchg
mov
stc
sub
outsb
adc
mov
mov
mov
sbb
mov
and
insb
push
pop
insb
mov
sub
mov
fldl
mov
or
and
push
roll
fwait
xor
scas
and
xchg
ficompl
pop
mov
jmp
icebp
cmp
shrb
xacquire
mov
jge
jae
dec
add
int3
xor
inc
inc
sub
adc
aaa
xchg
popa
insb
addl
loopne
xor
arpl
scas
rolb
mov
mov
and
jns
test
xor
mov
jbe
stos
add
stc
and
sbb
xchg
dec
scas
insb
aaa
adc
shlb
xlat
xchg
or
xor
jno
jmp
or
mov
sbb
mov
lret
pop
test
aad
lods
sahf
into
pusha
or
mov
dec
jge
jg
pop
sbb
popa
ror
cmc
mov
aad
call
stos
mov
lock
mov
ss
push
xor
loope
mov
dec
xorb
jne
cmp
test
xor
jg
addr16
mov
sub
jl
sbb
cs
scas
int
or
pop
leave
aas
and
cmp
ja
movsb
adc
add
dec
cmp
sub
lahf
cmp
shrl
sub
dec
lret
add
outsb
mov
xlat
popf
sub
aad
stos
jno
mov
dec
xor
push
sbb
jnp
clc
or
jae
jne
jle
imul
xlat
push
sub
imul
cmp
dec
lret
insb
aas
sarb
sub
aad
cmpsl
adc
mov
lahf
add
xchg
add
dec
push
in
mov
xchg
sbb
addr16
lods
mov
lea
xchg
insb
mov
inc
loope
fidivl
mov
add
es
leave
inc
mov
cli
xor
lahf
out
loope
clc
mov
xchg
xor
fcmovnu
sbb
adc
insl
jbe
pop
incb
lods
out
out
cmc
jecxz
mov
ss
loope
or
push
hlt
test
lret
shlb
or
pop
daa
and
enter
jae
test
je
inc
jb
adc
mov
cli
mov
xchg
cmp
add
push
pop
mov
dec
add
out
das
push
das
lea
add
inc
aad
sbbb
inc
pop
pop
leave
stos
dec
inc
notb
in
into
xchg
push
in
xlat
insb
arpl
xchg
and
pop
insl
cmp
jg
call
or
cwtl
cwtl
loope
or
cmp
xlat
add
cmp
mov
and
scas
lahf
adc
cmp
jecxz
repz
mov
xchg
insl
mov
in
dec
insb
xchg
jg
out
cmpl
sbb
loopne
out
imul
push
stc
sbb
loope
aaa
cld
cltd
scas
inc
int
jns
filds
xchg
ret
lds
adc
xchg
add
xor
aaa
mov
push
mov
out
inc
jge
pop
cmp
pusha
cmp
into
xchg
fisubl
pop
fwait
push
scas
lods
clc
or
push
cs
inc
mov
adc
rolb
loop
push
xchg
sub
jp
imul
cld
mov
or
lret
scas
shrb
shrl
popf
add
dec
and
stos
sbb
lahf
movsl
xor
incl
aam
dec
das
sbb
sub
orb
mov
ljmp
add
cli
fisttpl
inc
sbb
js
out
jmp
mov
sbb
cmpsb
cwtl
mov
and
lahf
sbb
sarl
fidivs
cmp
pop
pushf
sarb
popf
mov
xchg
mov
mov
pop
xorl
and
je
icebp
pusha
dec
mov
lods
pop
mov
sub
dec
add
sarb
dec
cmp
shrb
pushf
pop
lret
sbb
jle
jl
and
adc
inc
inc
in
jo
lods
cwtl
adc
cmp
xchg
lret
mov
sub
pop
xchg
movsl
in
pop
xlat
adc
lret
add
dec
xchg
dec
jnp
xor
in
push
or
sbb
adc
out
fidivrl
dec
dec
insl
hlt
add
push
loopne
popa
xor
and
adc
xchg
data16
std
add
mov
dec
incb
sub
xchg
pusha
mov
inc
pop
imul
dec
mov
jb
xchg
or
jae
ss
lea
inc
sub
pop
pusha
shll
pop
js
push
ljmp
and
stc
sub
cmp
imul
mov
pop
cld
test
pusha
pop
add
enter
jl
mov
jae
or
dec
movsl
out
mov
imul
dec
push
notb
repz
pop
inc
jmp
mov
xor
sub
jns
xchg
pop
icebp
jne
inc
adc
scas
or
insl
mov
testb
or
mov
cmp
scas
in
inc
dec
sarl
add
jbe
adcb
aam
sub
and
test
xlat
loope
cmp
je
lahf
insb
xchg
or
adc
js
dec
xor
scas
rcrl
cld
test
cmc
sahf
sahf
das
sub
push
jae
xchg
push
imul
aaa
icebp
push
daa
jnp
pop
push
addr16
fisubs
xchg
and
push
dec
outsb
dec
lcall
incl
pop
push
enter
cmp
repz
jmp
aad
adc
mov
stos
add
push
in
pop
loope
or
and
test
mov
push
xchg
xor
xlat
movb
dec
cs
aas
push
leave
lahf
cmp
jmp
movsl
cmp
sbb
sbb
dec
jae
clc
loopne
cmp
inc
pop
lds
add
into
pop
into
repnz
repnz
push
ds
pushf
int
icebp
in
loopne
scas
dec
jne
ss
jno
push
fwait
push
imul
iret
jp
data16
subl
es
xor
dec
push
xor
dec
dec
lock
cs
scas
and
cld
fidivl
push
dec
mov
jl
cltd
mov
jns
push
int
mov
fisubrl
adc
sub
inc
mov
stos
inc
lret
test
push
xor
sub
add
out
cmpsb
cwtl
xchg
mov
xor
pushf
mov
fisttpll
sub
add
mov
stc
lcall
jle
aam
int3
or
xchg
jg
nop
lret
rcll
mov
subl
mov
mov
stc
mov
dec
add
inc
pop
aam
les
and
xchg
sbb
sbb
stc
mov
mov
sub
cmp
aad
stos
aas
stos
pop
sbb
insl
ja
dec
jo
adc
negb
roll
out
in
fcmove
scas
sahf
and
push
frstor
enter
or
pop
push
pop
mov
std
iret
adc
rorl
xchg
cmc
mov
xchg
mov
inc
add
jmp
outsb
int3
mov
and
popf
push
push
xlat
add
mov
cs
insb
test
imul
inc
lods
shl
imul
mov
in
lock
pop
dec
inc
sbb
mov
inc
lcall
mov
iret
hlt
imul
add
loop
lahf
lock
loop
push
adc
jecxz
dec
fisttpll
cld
test
pusha
inc
psubsw
mov
imull
cmp
les
jmp
mov
jg
mov
and
jmp
lcall
or
enter
sbb
xor
fcomp
inc
add
ret
lret
xor
ret
mov
push
add
xchg
push
jns
pop
out
cmp
jmp
add
mov
repz
sub
loope
inc
mov
pop
into
xor
mov
xor
cmp
mov
push
cltd
add
scas
hlt
scas
movsb
push
pop
mov
mov
pop
jb
xor
pop
jne
and
aas
or
mov
push
fisttpll
jb
mov
ljmp
push
inc
inc
adc
fistl
arpl
pushf
movsb
xchg
cmpsb
xchg
xor
push
pop
in
iret
push
jp
adc
jg
pop
adc
pushf
mov
dec
mov
sbb
push
mov
cs
ja
out
lret
cmpsb
sub
jbe
pop
xor
repz
jmp
pusha
xchg
or
mulb
pop
and
mov
and
div
jg
mov
xchg
outsb
mov
iret
xor
lds
ds
fsubp
rcr
cmp
mov
pop
out
sub
cmc
stc
or
pop
dec
das
xor
pop
add
mov
int3
stos
mov
pop
mov
mov
and
imul
enter
push
pop
pop
adc
out
or
leave
sbb
cmp
inc
push
and
or
mov
cmp
adc
cs
clc
sub
jo
push
popl
nop
ljmp
mov
jo
clc
dec
insl
aam
inc
lret
outsl
cmp
fsubl
and
repnz
mov
aam
insl
test
mov
and
shld
loopne
pushf
push
sbb
fcmove
cmp
clc
xor
mov
shll
jp
push
dec
aas
fs
shrb
mov
insl
dec
loope
aam
jns
xor
jl
es
pop
cmp
inc
inc
popa
sub
ret
or
ret
push
sahf
cld
das
mov
adc
push
xor
repnz
stos
pop
cmc
ror
mov
or
adc
stc
dec
arpl
add
jge
lock
or
fcmovnb
enter
and
or
mov
fmuls
dec
pushf
mov
sbb
push
sbbl
dec
test
xchg
fldcw
aaa
out
popf
stos
or
jnp
fbstp
fadd
push
mov
into
xchg
lret
push
shl
cs
sbb
xchg
enter
ret
jp
popa
push
ljmp
or
xor
xor
inc
in
mov
pop
int3
sbb
push
cmp
mov
imul
lods
mov
rcrb
dec
testb
add
xor
out
test
clc
mov
mov
pushf
jl
out
icebp
imul
mov
outsl
push
jecxz
scas
cmp
add
jb
xchg
xchg
ss
inc
inc
je
mov
scas
fs
cmp
mov
jns
scas
outsb
jns
movl
jb
lods
cmp
mov
mov
and
adc
test
jae
fnstsw
mov
sti
adc
scas
mov
ljmp
out
sub
jne
jb
add
or
sahf
popf
call
outsl
mov
loopne
sub
sbb
icebp
pop
in
dec
je
jb
add
xor
cs
pop
xchg
xor
pop
mov
stos
pop
fildl
pcmpeqw
ret
and
adc
sub
sbb
das
aam
inc
sbb
sub
jg
shll
push
pop
pushf
ret
mov
mov
or
insb
mov
test
jecxz
or
cmp
sar
mov
xor
in
dec
call
inc
lret
cmp
push
and
loop
sub
sbb
cwtl
and
sub
push
adc
mov
push
inc
clc
movsl
or
mov
and
out
xor
mov
fcompl
jecxz
dec
and
dec
inc
cmpl
loopne
sub
sbb
xorb
add
xor
add
push
jge
mov
lret
ds
xchg
lcall
and
mov
xchg
adc
push
inc
and
popa
or
push
adc
adc
repz
lahf
pop
or
les
adc
xor
mov
lret
jo
shrl
popf
cs
mov
jno
leave
or
jnp
xchg
jp
adc
sub
push
shrl
and
popf
ja
mov
mov
jl
add
mov
sbb
jne
roll
or
das
inc
enter
xchg
bound
add
dec
sub
dec
sarl
pop
xor
sub
aaa
xlat
xlat
fwait
dec
add
sub
xchg
leave
maxps
pop
repz
mov
loopne
movsl
mov
test
ret
or
adc
lods
les
inc
adc
cmp
insl
xchg
lods
dec
cmp
jmp
in
cmp
inc
cmpsl
out
cmp
or
mov
repnz
test
add
pop
fisubrs
push
mov
js
test
and
mov
cmp
jl
pop
ds
inc
insb
scas
cmpsl
pop
aam
rolb
mov
jbe
out
adc
add
or
loope
data16
popa
loopne
push
adc
jae
pop
adc
mov
jnp
dec
and
subl
outsb
mov
movsb
xlat
int
inc
add
inc
mov
iret
sub
mov
xor
rcrl
add
cld
mov
xor
aad
fisttps
pop
mov
mov
icebp
mov
add
xchg
adc
cmp
or
hlt
xchg
jbe
jns
mov
push
push
xor
and
or
jl
ret
inc
fwait
jecxz
cmpsb
movsb
xor
jae
outsl
xlat
sbb
test
mov
cmp
fwait
lret
stos
xchg
add
icebp
outsl
dec
mov
lods
adc
jae
mov
enter
and
repz
cmp
sub
ficomps
mov
mov
pop
js
inc
cli
stos
sub
inc
adc
lock
jecxz
outsl
sti
inc
push
std
adc
jno
insl
insb
rol
jecxz
dec
xchg
or
movsb
call
pop
push
inc
faddl
jb
mov
add
lahf
lock
mov
repnz
shll
insl
stos
fdivr
mov
cltd
fnstcw
sub
cmc
dec
test
push
mov
out
sbb
adc
xor
inc
sub
inc
nop
jge
jl
sbb
icebp
das
ja
push
ljmp
inc
mov
fmull
push
adc
push
fs
mov
adc
or
mov
push
xlat
stos
adc
stos
cmpsb
adcl
and
dec
fisubl
and
in
daa
and
jo
push
xchg
mov
push
sub
imul
aad
xor
sti
push
xchg
mov
pop
sbb
dec
ffreep
sub
shll
inc
cwtl
cmc
data16
sub
push
mov
pop
fldcw
mov
xchg
in
stos
pushf
test
das
pop
xlat
mov
sbb
cmp
inc
dec
pop
mov
push
mov
mov
pop
aaa
sbb
adc
pushf
push
add
cmpsl
je
and
insb
mov
dec
test
push
jb
sub
push
stos
inc
jo
add
xchg
lret
in
xlat
jg
cli
xchg
mov
loopne
scas
adc
dec
in
or
insl
hlt
ds
sub
arpl
sub
int
cli
in
nop
popf
push
data16
pushf
pusha
pop
add
les
xchg
sbb
test
mov
sub
lea
jns
js
or
je
xchg
dec
and
in
add
out
jno
imul
lahf
jl
sub
insb
and
mov
and
dec
jo
adc
sahf
dec
fimull
pushf
cmp
mov
in
xchg
repz
mov
or
sahf
sub
sbb
mov
mov
test
sahf
dec
test
xchg
aas
jge
xchg
repnz
or
jecxz
aam
add
sbb
xchg
call
mov
inc
insb
std
push
and
push
movsl
in
stos
rcl
sahf
push
mov
movsb
ss
pop
negl
mov
ja
jle
mov
pop
dec
inc
push
sbbl
xchg
dec
xor
push
cwtl
and
push
mov
xor
xor
jmp
fs
push
rep
je
idiv
pop
push
mov
outsb
sub
in
xchg
lea
sub
sbb
stos
xorl
xchg
scas
outsl
push
pop
cli
jns
rcrb
jmp
mov
notl
cmp
insl
cmp
out
mov
movl
repz
pop
lds
int3
xchg
fs
or
imul
sarl
movsb
sysenter
sarl
cmp
sub
mov
xchg
sbb
push
jae
or
in
push
iret
pop
out
adc
cmpl
sbb
sti
pushf
hlt
push
ret
stos
scas
inc
ss
jbe
fists
lahf
mov
outsl
cmp
inc
outsl
inc
out
jae
xchg
aaa
xchg
add
mov
pop
les
mov
xchg
out
inc
push
sub
push
jns
outsl
sub
xor
sbb
and
inc
push
adc
stc
mov
push
sub
jo
fdivs
lcall
xchg
add
and
test
das
leave
xor
mov
cmc
pushf
push
push
pop
add
adc
push
inc
enter
mov
addb
ret
pop
sub
mov
jae
stc
lds
push
mov
shr
mov
or
int
fldt
xor
and
popl
pop
add
stos
aam
or
dec
cmp
popa
mov
imul
or
ljmp
inc
addr16
cmpl
and
mov
popf
add
inc
aaa
xchg
adc
lcall
pop
adc
imul
and
and
insl
sbb
cwtl
pushf
mov
scas
cmp
arpl
cmp
or
inc
add
testb
push
ljmp
pop
pop
and
lock
sti
add
stos
push
stc
outsb
sbb
data16
or
mov
repz
push
adc
insb
addr16
push
inc
jle
ja
inc
stos
in
ret
mov
inc
lret
lcall
and
mov
mov
inc
push
hlt
add
and
mov
push
inc
cwtl
and
into
fldl
decl
jb
out
loop
cmp
cs
lcall
jae
and
es
mov
into
add
cld
fidivrl
sarb
and
aad
xchg
mov
mov
mov
pop
mov
into
pop
clc
push
mov
jns
or
iret
movsl
aad
add
andb
cwtl
lods
inc
push
in
mov
xor
popa
sbb
test
mov
stc
xor
sub
int
daa
setl
aad
sub
pusha
les
loopne
int3
dec
sahf
insb
or
inc
inc
sub
cmpsb
jmp
dec
sbb
cmc
xor
jb
sub
aad
mov
stc
test
les
lock
mov
sbb
inc
sub
imul
mov
pop
and
xchg
insb
sub
jns
mov
outsl
cmp
adc
mov
dec
jnp
mov
movsb
dec
push
dec
mov
mov
fistl
pop
movsl
repnz
push
notb
push
or
mov
pop
ljmp
bound
adc
scas
les
call
shrb
shlb
inc
pop
clc
dec
jno
outsb
and
bound
xchg
cmp
mov
cmp
pop
repz
inc
rcl
mov
arpl
and
dec
and
inc
outsl
mov
shll
add
adc
pop
jae
mov
ror
sbb
xor
or
divl
ja
aas
insb
movsb
inc
jb
mov
mov
pop
jo
imul
cmp
xchg
pop
xor
stc
jg
aas
imul
dec
sahf
jp
clc
in
ret
inc
movsl
sub
push
into
and
repnz
in
dec
shll
into
int3
or
sub
pop
arpl
mov
js
stc
ds
shll
add
mov
outsl
sbb
sub
push
sbb
push
fimuls
das
lcall
mov
popw
nop
sbb
jle
movsb
mov
ficomps
lock
push
cmpsb
je
or
sahf
dec
cmp
push
je
add
mov
jb
push
ficoms
aad
xlat
dec
and
jp
jp
test
ficoms
sub
icebp
sar
clc
pop
mov
or
outsl
movsb
dec
shl
push
mov
cmp
icebp
ret
inc
inc
fadds
adc
pop
daa
inc
sub
daa
and
or
or
sbb
push
xchg
test
cs
jns
cmp
and
push
push
loope
clc
cmpsl
int
sti
test
sbb
js
adc
jno
pushf
scas
sbb
pop
mov
add
fcoml
out
mov
ja
sub
inc
xchg
sbb
pop
test
pop
lods
rcll
inc
out
xor
outsl
fadds
add
addr16
add
rcrl
cwtl
pop
fistpll
sbb
sbb
shrb
sub
xchg
adc
insb
imul
movsb
sub
cmp
xor
aad
xor
sbb
adc
aad
cmc
inc
jo
mov
aad
and
ds
cmpb
inc
xor
icebp
pop
icebp
sub
cmp
jns
mov
jecxz
or
mov
cs
inc
rorb
lret
jge
adc
xchg
xor
in
mov
xchg
pop
xchg
sub
mov
inc
out
psubusw
inc
and
ljmp
rcrb
in
leave
add
push
mov
pop
das
stc
out
inc
inc
js
outsb
and
sub
pop
add
daa
jae
push
mov
sbb
mov
xlat
mov
rcrl
mov
xchg
add
push
adc
sbb
adc
hlt
xor
xor
mov
pop
jno
push
pop
fyl2x
adc
das
and
cmp
scas
insl
stos
mov
jecxz
jo
aad
dec
test
and
stc
mov
loope
scas
dec
cmp
inc
sbb
outsl
jnp
dec
pop
sahf
xlat
inc
into
inc
push
mov
dec
jnp
dec
inc
shrl
aad
push
mov
xor
sub
inc
dec
mov
stc
sbb
mov
add
daa
or
jle
scas
mov
ret
pop
xlat
or
pop
dec
testl
or
pop
stos
xchg
fidivrs
and
in
imul
into
sub
scas
dec
push
push
cmp
cld
lahf
and
leave
es
sti
mov
jecxz
xor
or
insb
repz
mov
mov
add
sbb
shrl
push
xchg
loope
nop
sbb
sbb
fisttpll
pop
mov
je
fnsave
stos
mov
ja
repz
and
cmc
lea
mov
xchg
pushf
ljmp
mov
mov
cmc
adc
rcrb
pop
jns
ja
daa
in
lret
movsl
jmp
push
jp
mov
mov
xchg
int
mov
movsb
mov
cwtl
bound
into
lds
inc
mov
cld
test
mov
ljmp
push
jns
mov
mov
lret
sub
inc
test
pop
pop
test
sbb
arpl
aam
nop
fsubl
xlat
cmp
inc
mov
dec
xchg
or
sbb
mov
pop
push
fisttpll
les
inc
jno
rol
cmp
mov
sub
mov
add
testl
push
or
inc
mov
loopne
push
es
mov
or
cmp
cmpb
push
pusha
es
mov
cmp
jge
fwait
std
cmc
sub
movsl
pop
push
das
icebp
pop
sbb
addr16
repnz
add
js
pusha
pop
scas
mov
inc
cmc
in
mov
fnstcw
stc
adc
inc
jbe
mov
push
mov
scas
sbb
sahf
cmp
test
xor
jb
lret
loope
dec
cld
push
dec
push
int3
rcl
adc
mov
pop
cmpsl
popa
int
aaa
add
roll
bound
add
das
repnz
scas
xor
xor
cmp
incb
xor
sub
loope
push
cmp
cmp
or
cmp
and
out
nop
sti
cmc
scas
sub
mov
cmp
int3
test
fsubrl
cmp
dec
sub
outsl
js
aam
stc
sbb
sub
adc
ret
mov
fisubs
pop
dec
loope
test
add
arpl
fdivp
xor
dec
jns
fsubrs
loope
cmp
mov
push
mov
es
out
or
push
xchg
mov
lods
adc
js
out
ret
pop
lcall
pop
outsl
dec
dec
cmp
sub
lret
test
in
cmp
push
pop
xor
inc
fs
jecxz
add
mov
ret
mov
lea
fcoml
or
idiv
and
dec
dec
lea
add
mov
pop
sbb
mov
jmp
xor
test
test
pop
or
pop
mov
aaa
movl
arpl
loope
jp
pop
push
and
fmull
enter
stos
mov
dec
loopne
out
mov
or
jo
xchg
lahf
pop
scas
testb
mov
jo
inc
cmpb
or
dec
add
push
fsubrl
pop
cmp
pop
adc
push
adc
xchg
mov
push
faddl
and
cmp
xlat
and
adc
imul
dec
es
inc
sbbb
add
mov
dec
pusha
adc
lds
hlt
mov
pop
das
or
jmp
hlt
mov
mov
jl
sub
loope
outsb
push
xchg
stos
out
loope
mov
push
sub
dec
les
aam
fisubs
dec
xlat
pop
and
outsl
aaa
testl
xchg
cmp
push
or
cmp
enter
adc
jl
xor
pusha
popl
push
mov
inc
movsl
jl
aam
xor
add
rcll
adc
out
jmp
inc
stc
aad
sbb
mov
imul
in
rorb
test
aam
mov
or
push
pop
scas
popf
stc
ds
pusha
mov
xchg
rcll
pop
fidivs
or
in
scas
inc
shll
or
mov
jmp
in
or
inc
xchg
cmp
push
flds
frstor
or
sbb
loope
addr16
sub
jp
add
leave
cwtl
outsb
add
and
dec
xchg
add
mov
sbb
and
mov
mov
lea
in
rcl
sbb
xor
in
inc
jmp
in
push
fidivrs
cs
test
out
adc
or
and
push
stos
scas
sub
pushf
maxps
shll
ljmp
int3
mov
fwait
dec
int3
and
jns
stos
push
fs
into
insb
fstpt
into
push
and
ret
jmp
jbe
inc
xchg
jbe
sub
jmp
pop
adc
je
test
and
xor
enter
mov
and
mov
sub
add
fs
mov
nop
stos
addr16
push
cltd
add
popa
jbe
gs
roll
sbb
mov
sbb
in
int3
cld
inc
add
jmp
dec
jno
add
add
push
lock
loope
xchg
xchg
xor
pop
test
unpcklps
movsb
add
in
or
fs
dec
jl
out
ss
loope
mov
mov
pop
jbe
aam
push
ja
mov
das
addr16
push
in
icebp
cmp
xor
and
adc
je
dec
sbb
fisubrs
jp
insb
and
scas
sbb
xchg
test
jl
mov
jno
adc
je
dec
data16
xorb
mov
xlat
pop
mov
mov
push
adc
sti
sbb
mov
or
add
lock
inc
aad
enter
lahf
inc
arpl
sbb
lret
cmpsb
sbb
in
pop
inc
mov
cmp
lcall
pop
or
into
sbb
imul
enter
adc
outsb
pusha
or
jmp
fs
mov
cmp
pusha
inc
cwtl
imul
enter
cmp
subl
mov
push
icebp
and
mov
push
rorb
or
cmp
add
ja
xor
jnp
gs
ss
push
adc
stc
icebp
add
scas
cmp
xor
mov
sahf
in
cmc
jmp
nop
jno
xchg
pop
mov
jl
leave
movsl
cmp
test
pop
addl
xchg
or
pop
fwait
pusha
ds
or
nop
in
shll
fstp
ljmp
push
loopne
xchg
inc
scas
negb
cli
sub
cmp
or
jo
jno
jecxz
xchg
xor
ljmp
cmp
mov
fmuls
jecxz
sbb
mov
pop
add
pushf
mov
jno
repnz
pop
xorl
popf
jp
push
loop
stos
int
mov
inc
dec
psraw
xchg
push
insl
test
pop
mov
mov
adc
cmp
cmp
xchg
push
mov
les
outsb
jno
cwtl
clc
xchg
lret
mov
sub
sbb
sbb
das
sub
add
push
sub
jle
popa
ret
in
rcll
into
int3
pop
dec
scas
jecxz
dec
pop
es
sbb
aas
dec
xchg
or
sub
movsl
push
pusha
jnp
mov
xchg
test
cmp
mov
fucom
inc
lds
lret
ds
imul
scas
fsubrl
popa
pop
stc
cmp
aam
push
rcrb
push
mov
cmp
xlat
pop
daa
cmp
or
push
ss
cs
adc
or
pop
or
xchg
mov
aad
xchg
mov
addb
xchg
enter
dec
adc
js
je
cmpsl
fadd
mov
cmpsl
outsl
pop
es
cmp
xlat
stc
cmpsl
pop
not
sbb
cmpl
cli
push
cmp
jecxz
mov
lret
push
stos
stos
push
mov
cmpl
sbb
push
and
inc
mov
popf
fisttpl
jnp
das
dec
or
add
js
jp
movsb
test
in
sti
inc
mov
mov
xchg
out
insl
or
xchg
nop
mov
xchg
ja
jns
sub
dec
inc
and
mov
mov
pop
decb
pop
mov
imul
dec
fmuls
clc
or
loopne
inc
mov
or
mov
mov
in
shrl
enter
xchg
std
sti
mov
or
cwtl
fildl
jle
imul
push
mov
xchg
lds
scas
clc
push
xchg
shrb
outsl
adc
inc
jno
add
xor
sbb
cld
inc
sarb
inc
mov
movsb
jno
mov
mov
cwtl
aaa
push
dec
xor
fs
sub
pop
roll
jo
int3
cs
push
mov
in
mov
fidivrs
mov
adc
neg
jb
call
daa
scas
inc
arpl
mov
hlt
repnz
fisubrs
lret
jg
mov
and
pop
imul
jle
pop
xor
mov
and
repnz
xor
jno
sti
xor
ss
mov
sub
pop
dec
ds
cs
push
push
test
rcrb
ljmp
mov
push
push
mov
mov
push
push
cmp
popa
jge
mov
stos
les
add
in
inc
add
bound
adc
mov
or
or
xchg
rcl
cmpsl
aam
pop
mov
das
sub
xlat
sub
xchg
int
js
nop
sbb
push
pop
add
and
add
and
shll
cmc
int3
clc
shlb
sbb
in
lock
pop
push
mov
sarl
movsb
sub
subb
dec
push
cmp
mov
adc
and
cmp
outsb
or
iret
ljmp
enter
or
mov
imul
into
loopne
cmc
xchg
outsl
lods
mov
fmull
cmp
xchg
mov
adc
daa
or
scas
dec
add
add
clc
xor
adcb
xor
inc
push
mov
inc
hlt
stos
mov
cmc
daa
xchg
bound
adc
push
mov
adc
dec
leave
lcall
and
mov
je
aam
jmp
sub
jae
stos
addr16
int3
ja
adc
pop
and
cmp
mov
jmp
ljmp
sbb
mov
pop
ficoml
pop
dec
sub
in
mov
mov
inc
rorl
jl
cltd
andb
dec
add
xchg
frstor
cmc
xchg
icebp
pop
icebp
sahf
sbb
sbb
dec
icebp
loopne
mov
std
cs
out
adc
test
popf
insl
test
jnp
sbb
rol
mov
mov
adc
dec
ret
shll
or
xor
pop
into
cmp
sub
push
jle
inc
jnp
jae
cmc
pop
fsubs
or
dec
add
mov
inc
bound
fnstenv
sbb
push
sahf
push
add
or
fs
call
jno
push
inc
test
xor
cmpsl
jno
mov
mov
ja
push
sub
adc
push
rcl
mov
adc
stos
pop
sti
xchg
adc
in
mov
push
pop
repnz
aaa
ds
outsb
add
mov
adcl
test
pop
ljmp
dec
cli
jmp
scas
pusha
hlt
popf
fidivrs
imul
ja
inc
out
mov
sbb
and
lock
js
pop
add
inc
adc
push
add
addr16
adc
or
and
mov
dec
adc
out
lret
aam
inc
xor
std
or
loopne
jge
adc
xchg
inc
cmp
adc
test
stos
rorl
cltd
and
stc
loopne
lock
hlt
aas
out
dec
mov
mov
in
sbb
add
and
cmc
call
pop
clc
fsub
inc
in
lret
mov
xlat
mov
sub
scas
cmp
scas
fst
sbb
jl
scas
aad
lret
inc
ret
cltd
adc
loopne
arpl
aaa
mov
aas
stc
xor
cmc
loopne
shrb
loope
or
sub
xor
icebp
repnz
mov
mov
lahf
mov
and
mov
mov
push
mov
or
repz
add
pop
scas
fcompl
outsb
or
stc
stos
xor
xchg
int
movsb
cmpsl
cli
xchg
jg
clc
inc
das
imul
xchg
mov
out
mov
lret
jns
jge
dec
mov
sbb
sbb
roll
loope
in
lods
push
jg
jecxz
ljmp
cmp
fs
jo
cmp
sbb
dec
faddl
inc
out
mov
dec
mov
aam
xor
adcl
pop
repz
and
sbb
jge
mov
sar
cmp
xchg
or
sbb
sti
into
xor
cwtl
scas
orb
movsb
int3
push
and
push
jecxz
lods
fcompl
dec
in
lock
rcll
xchg
mov
shlb
mov
mov
das
icebp
sarb
fwait
int3
insb
add
mov
js
add
pop
imul
pop
sti
in
test
addr16
aaa
sbb
repnz
xchg
mov
push
outsl
mov
jo
leave
or
mov
lret
cwtl
push
test
clc
sub
mov
dec
or
mov
xlat
mov
jnp
inc
aam
jmp
stos
jle
int3
mov
cmp
xor
pop
lahf
dec
or
adc
mov
add
sbb
add
sbb
mov
add
hlt
pop
mov
push
pop
and
stos
popf
cmp
popa
mov
add
xor
ljmp
out
aaa
je
xor
cld
push
cmp
movsl
test
inc
inc
jecxz
mov
insb
sub
js
mov
jge
inc
stos
loope
jg
sbb
mov
adc
push
and
sub
lahf
jne
ds
inc
push
jmp
xchg
dec
pushf
or
cmp
aas
loope
lcall
xchg
testb
andb
or
push
adc
xchg
add
mov
movsl
outsb
jo
fldt
pop
dec
jns
fiadds
pop
jl
popf
leave
mov
xor
out
clc
cmp
sbb
flds
sti
push
jp
daa
jmp
adc
aam
in
xchg
insb
and
xor
inc
in
insb
repz
das
pop
clc
sbb
les
ss
rorl
lret
push
xor
sbb
mov
lea
imul
cld
mov
insl
mov
push
mov
cmp
in
repz
or
adc
mov
int3
jl
add
dec
and
mov
ficoms
pop
lcall
xchg
sbb
mov
outsl
and
pop
sub
xchg
mov
mov
pop
or
insb
and
add
mov
mov
push
mov
pop
fisubs
xchg
mov
adc
jmp
add
and
jo
pusha
push
jmp
mov
lret
pop
nop
dec
loope
xor
dec
subb
inc
and
test
mov
ret
pop
loope
sbb
xchg
add
push
call
adc
sbb
mov
mov
jl
mov
fisttpll
aas
int
push
xor
and
repz
xlat
mov
movsb
push
hlt
inc
or
jge
adc
inc
fsts
cmp
cmp
xchg
outsl
adc
or
push
js
jne
out
shld
ja
dec
sbb
sub
mov
mov
cmp
mov
ljmp
xchg
push
out
push
xchg
mov
stos
aaa
mov
adc
xor
cltd
aad
movsb
pop
in
mov
dec
add
inc
shl
imul
ja
pop
sub
inc
adc
xrelease
xor
test
jno
mov
daa
mov
ret
xor
sub
sti
xor
inc
and
mov
fidivl
add
aad
mov
fs
xchg
mov
movsb
dec
test
popa
pusha
in
push
fwait
dec
inc
add
adc
add
in
push
push
and
xchg
sbb
dec
dec
nop
push
and
movsl
sbbb
aam
add
or
xchg
insb
inc
aas
cmpsb
dec
pop
push
sub
lcall
adc
mov
inc
dec
inc
stos
sbb
push
adc
sub
mov
hlt
xor
jb
lds
aam
mov
idivl
mov
xchg
outsl
inc
orb
xor
test
loop
push
ret
imul
movsb
lcall
sbb
push
imul
mov
lret
mov
loopne
or
roll
mov
test
jmp
imul
jg
xor
shll
enter
and
and
mull
lods
ret
pop
jbe
leave
in
fs
outsl
idiv
int3
js
aad
push
in
mov
or
xchg
xor
ret
nop
ss
sub
sub
fcomi
xor
mov
mov
setle
mov
push
pop
xchg
imulb
push
xor
push
fs
fidivrl
push
fstps
mov
test
pop
arpl
cmp
xchg
mov
iret
jno
xchg
loope
loopne
mov
call
adc
jmp
inc
aad
sbb
inc
push
inc
lods
push
fcomp
fadds
cmp
add
mov
loopne
pop
inc
ja
mov
sbb
cmp
enter
std
insb
cmp
xor
mov
stc
cs
push
in
inc
iret
and
fcomps
aas
dec
loopne
mov
insb
push
inc
jle
adc
test
inc
fists
push
sub
dec
mov
inc
iret
sarl
pushf
and
sbb
xor
aas
sahf
mov
lret
mulb
lds
mov
mov
lcall
push
push
and
dec
jp
and
loop
push
cs
dec
or
dec
sahf
mov
dec
and
push
cmpsb
in
push
mov
mov
inc
sub
jp
xor
out
jb
movsl
ss
test
jp
push
addl
test
cmc
das
mov
fsub
jne
repz
and
mov
adc
or
inc
mov
add
mov
bound
add
mov
cld
adc
jg
or
popa
roll
das
fdivs
stos
mov
mov
imul
mov
scas
nop
xchg
addr16
rcr
cmpl
jp
mov
in
and
and
pop
aam
movsb
in
or
rcr
stos
add
iret
cmp
divb
xlat
jbe
inc
inc
fdiv
xchg
pushf
mov
mov
xchg
adc
das
sub
clc
int
dec
pop
mov
xlat
and
mov
mov
arpl
hlt
adc
adc
inc
ret
lods
and
into
dec
lcall
jb
add
push
sbb
in
dec
push
jl
je
into
cmp
inc
inc
sahf
xchg
mov
test
stc
cmp
inc
pushf
xor
int3
mov
jge
andl
cmp
sar
xor
xor
or
jnp
loopne
cmpsb
xorl
push
rcrl
mov
mov
shrb
pop
and
mov
iret
adc
int3
mov
int3
shlb
lods
popa
add
dec
sbb
outsb
mov
repnz
arpl
inc
xor
subl
jno
sub
mov
pushf
into
std
push
pushf
test
inc
popf
stc
lods
xor
mov
repz
push
sbb
cmpb
push
repz
mov
mov
dec
mov
jnp
roll
les
maxps
or
stc
inc
mov
cwtl
push
pop
lcall
cmpsb
scas
mov
mov
inc
dec
mov
out
cs
cmp
iret
enter
pushf
pop
and
adc
adc
mov
dec
aad
or
inc
imul
xor
outsb
pushf
ja
sbb
icebp
mov
sbb
xorb
sbb
aad
xchg
clc
and
test
es
push
and
rcrl
in
or
test
testl
js
mov
add
push
faddl
pop
fdivrl
pop
mov
daa
mov
loope
and
aad
pop
pop
sub
lock
inc
fxch
cmc
dec
cs
dec
fwait
inc
xchg
xchg
xor
dec
nop
mov
mov
cmpsl
or
out
xlat
orb
in
addl
mov
mov
mov
subb
out
cmc
xor
mov
push
cmovnp
pop
cmpsl
pop
call
insb
sub
arpl
lret
xor
mov
decb
fldenv
lret
sub
cmpl
or
repnz
jns
push
stc
sar
into
jecxz
lahf
adc
cmc
aaa
stos
cmp
flds
add
xor
push
fst
jle
cmp
test
movsl
out
adc
out
int3
jns
pusha
push
xchg
psubb
ret
rol
out
inc
insl
mov
sbb
es
pop
pop
pop
imul
mul
xlat
pop
dec
mov
test
jnp
divb
in
popa
sbb
pushw
and
loope
cmc
mov
dec
mov
icebp
or
and
add
fimuls
cmp
das
lcall
mov
loop
rorb
lea
fnstcw
sbb
leave
push
xchg
ret
popa
data16
mov
dec
test
pop
test
dec
inc
jg
pop
push
sub
xor
sbb
push
push
nop
popl
leave
shl
cmp
sbb
sub
pop
and
insb
in
aas
add
stc
ljmp
sbb
sub
insl
or
imul
xor
push
jge
adc
pop
push
sub
into
jle
lret
cmp
mov
and
hlt
mov
dec
xor
mov
mov
push
xor
nop
lahf
out
jecxz
mov
inc
std
pop
jge
mov
push
xchg
cmp
xor
sarl
xlat
adc
adc
scas
push
mov
sbb
addb
dec
xchg
add
orb
in
lea
dec
les
mov
mov
adc
test
lret
shl
into
rorb
mov
adc
ljmp
stos
add
sub
das
out
fdivrl
in
ja
cmp
dec
dec
inc
mov
and
repz
jp
stc
mov
inc
fiadds
sub
dec
add
insb
push
fmul
mov
popa
add
fldl
cmpsb
dec
mov
hlt
adc
outsl
pusha
leave
jns
shll
jecxz
xor
cmp
lock
popl
inc
mov
xlat
sbb
sub
jmp
fcmovne
int3
xor
scas
and
shlb
mov
in
pop
stos
cmp
pop
scas
fcoml
jns
xchg
lahf
and
xor
cmp
mov
mov
call
std
xchg
mov
or
jmp
xor
cli
insb
gs
popf
lahf
into
add
jmp
mov
sbb
aaa
and
es
shll
or
fs
std
pop
add
cmpsb
je
lods
int
test
decl
lea
xchg
pop
mov
xchg
adc
jae
loope
popl
mov
into
push
stc
sub
push
mov
popf
push
cmp
mov
pop
add
lds
dec
aaa
mov
xor
xor
into
inc
jl
mov
jns
cmp
push
jmp
add
cmp
test
push
mov
stc
mov
jae
pop
add
sahf
movsb
pop
addl
mov
lahf
dec
sahf
add
lea
leave
adc
frstpm(287
hlt
fndisi(8087
fldt
sub
pop
pop
mov
sub
int
push
add
and
mov
inc
push
jae
or
push
pop
in
stc
mov
sub
sbb
push
out
mov
xorl
out
or
ss
lahf
lret
cmp
jle
push
sub
aad
adc
pop
jno
and
inc
mov
stc
fldenv
pushf
stos
jmp
add
ss
xlat
mov
push
adc
test
xor
mov
add
dec
mov
loop
dec
mov
ja
mov
add
stos
leave
xchg
in
lret
jbe
dec
shl
xchg
aaa
dec
pop
jg
mov
xchg
mov
test
mov
mov
cmp
pop
ss
mov
int3
test
enter
jecxz
cmpb
adc
and
inc
jmp
ja
mov
adc
popa
add
fstl
aad
mov
lea
test
scas
rcl
push
cld
pop
pusha
nop
inc
nop
pop
jb
add
jae
xchg
pop
js
push
js
dec
xor
or
repz
add
in
das
loope
sbb
dec
movsl
push
mov
jecxz
in
movsb
jne
dec
out
fstpt
lods
add
xor
xor
push
fst
jecxz
dec
cmc
sub
inc
call
cmpsb
and
fucomp
push
adc
loop
aas
loope
mov
enter
mov
sub
repz
lock
push
int3
or
push
aad
and
ja
ljmp
imul
mov
xor
and
div
cld
sub
mov
pusha
fs
and
cmp
and
mov
xlat
push
ss
lods
arpl
clc
mov
cwtl
les
cmp
xor
dec
inc
cmc
jnp
xchg
jbe
std
dec
lcall
int3
inc
test
adc
cltd
adc
test
data16
je
hlt
cltd
pop
into
addb
mov
stc
scas
cs
inc
jno
xor
jg
sbb
sbb
cmp
inc
or
jle
inc
stos
pop
lahf
mov
pushf
push
int
decl
arpl
cs
andb
cld
test
pop
add
mov
push
or
pop
call
xorl
or
loope
inc
add
lret
mov
dec
mov
push
fbld
mov
cmp
mov
push
stc
jae
ljmp
sbb
stos
pop
mov
mov
mov
stc
cmp
adc
adc
lods
inc
adc
add
movsb
jmp
inc
push
cmp
mov
jb
pop
jl
xchg
into
push
jns
pushf
cmc
insl
push
jle
in
pop
neg
sub
cmp
out
aas
iret
sub
jno
push
dec
sub
and
leave
popa
inc
dec
mov
in
dec
and
scas
xchg
out
jno
pop
arpl
mov
dec
or
add
inc
dec
cmp
cmp
leave
inc
cmp
into
cmp
je
popf
dec
test
insb
push
je
mov
mov
loop
sub
jmp
push
mov
sti
fs
mov
call
call
and
lea
jbe
scas
cmc
sub
insl
xlat
push
jmp
jmp
sbb
cmp
push
js
popf
cli
add
les
movsb
cmp
adc
repz
jae
and
mov
and
jp
mov
jl
inc
in
fld
cld
mov
inc
cmp
pop
dec
jns
adc
aam
stc
mov
push
push
js
dec
push
ficomps
mov
add
and
mov
sbb
push
subl
adc
int3
add
jae
and
mov
push
sahf
imul
or
sahf
cmp
cmp
adc
gs
push
sbb
addr16
rcrl
into
jo
hlt
push
cmp
mov
cmc
mov
mov
iret
cmp
std
push
mov
aaa
cmp
xchg
cmp
mov
or
mov
mov
out
inc
stos
jmp
cmp
rcrl
mov
sbb
aad
push
sbb
and
cmc
loope
int3
xchg
aam
inc
imul
lods
push
xor
stos
or
pop
dec
pop
sub
dec
xchg
fstl
cmp
inc
in
push
maskmovq
testl
cmp
xor
mov
sbb
adc
mov
pop
in
inc
dec
sub
mov
fiadds
ds
lret
inc
pop
pop
cs
testb
lods
shll
mov
insb
mov
scas
popl
sub
pop
jns
or
lods
into
sarb
mov
push
mov
pop
pop
stc
sub
push
or
mov
adc
add
in
sahf
int
rorb
lret
enter
movsb
inc
data16
adc
add
add
add
xor
or
pop
adc
dec
sarb
lcall
mov
jns
test
scas
repnz
and
jno
inc
sbb
xchg
add
repnz
in
std
push
negl
fs
mov
clc
xlat
in
pop
jg
jns
outsl
rclb
test
adc
xlat
cmp
jecxz
and
popa
mov
ja
sbb
mov
and
into
sahf
int3
ljmp
mov
mov
and
inc
sub
fwait
jg
or
fidivs
pop
inc
cmp
jne
sahf
cmp
xchg
adc
mov
call
jae
pop
jp
aaa
ret
mov
push
pop
jg,pt
mov
adc
mov
sbb
push
sbb
sub
or
int
daa
movsl
jecxz
hlt
inc
inc
das
pop
and
adc
add
cmp
in
add
cmp
icebp
pop
mov
and
test
push
shrb
mov
les
dec
dec
add
inc
cmc
push
fs
daa
adc
outsl
and
push
notb
arpl
mov
loope
pop
ljmp
fisubrl
push
pusha
jo
mov
mov
dec
fwait
std
xor
and
lret
add
pop
xor
rcrb
imul
sahf
imul
lea
inc
dec
inc
jmp
stc
sbb
repz
or
into
roll
mov
cmp
push
mov
jp
sub
inc
mov
jecxz
adc
and
push
add
mov
mov
add
pushf
cltd
xchg
mov
add
jmp
nop
push
mov
jno
jp
ror
and
pop
cs
pop
js
mov
out
jecxz
push
sub
push
pusha
mov
aas
inc
mov
ljmp
or
popf
mov
dec
daa
aas
jae
fdivs
int
stos
mov
mov
mov
leave
loopne
sbb
push
outsl
cs
shrl
mov
lahf
push
sbb
push
aad
rcrb
push
fwait
lods
rorb
dec
cmp
cmp
ljmp
mov
rolb
leave
imul
or
pop
mov
push
lcall
ja
add
push
jae
insb
shrb
dec
or
cmc
aaa
popa
pusha
nop
inc
xchg
cli
sbb
adc
add
jmp
movsl
movl
mov
mov
pop
inc
inc
cld
ja
cmp
cs
gs
cmp
push
mov
mov
add
push
leave
icebp
scas
and
sbb
cmp
mov
lahf
sbb
or
ja
lods
out
sub
inc
xchg
or
cmp
pushf
push
daa
cmpsl
scas
out
push
mov
inc
shlb
rcrb
or
fistps
add
sbb
adcl
add
mov
mov
or
mov
scas
mov
push
jb
dec
cltd
push
iret
pop
adc
dec
test
mov
add
fwait
xchg
ja
in
mov
mov
cwtl
aas
or
xor
mov
je
sarl
lods
aas
dec
push
cmp
sbb
add
stos
nop
out
lock
jo
adcb
pop
or
mov
inc
xor
push
lret
push
mov
inc
pop
and
and
clc
jle
or
sub
sub
inc
adc
adc
cmp
sub
aas
fdivrp
cmp
cmp
jmp
jns
dec
cmp
jo
cmp
lods
xlat
mov
inc
inc
dec
repz
adc
icebp
sub
mov
xchg
aas
mov
or
jae
mov
pop
adc
xchg
fsubrl
cwtl
or
xor
pop
push
inc
ret
out
aad
inc
out
push
and
sub
shl
or
xor
cmp
mov
imul
cmp
int3
and
lock
hlt
mov
xor
cmpl
ja
sbb
and
cs
and
push
sub
inc
fdivr
js
jmp
xchg
xor
ds
cmpsl
pushf
test
lcall
mov
enter
xlat
sub
and
xor
int3
push
shlb
popa
add
fnstcw
inc
lods
or
xor
push
add
jbe
xchg
pop
rcll
cmp
sahf
push
pop
pop
loopne
xchg
jl
pop
mov
out
lods
pop
jp
or
dec
pop
jo
and
sub
lds
test
cs
test
jl
out
push
shll
stc
add
out
and
and
push
add
and
enter
adc
popf
adc
in
xor
icebp
lcall
push
fdivl
sbb
imul
hlt
je
cli
int
cmp
icebp
xor
cmp
mov
push
out
sbb
aad
mov
sub
aas
sub
cltd
xlat
orb
icebp
add
jns
outsl
or
sbb
popf
dec
mov
adc
aam
xchg
mov
outsb
sbb
and
inc
fimull
jb,pn
and
sahf
movsb
xor
sbb
and
add
mov
pushf
sub
sbb
imul
pop
mov
sahf
mov
inc
pop
inc
rcl
pop
sahf
dec
pop
mov
push
fnsave
pop
and
into
xchg
xchg
and
add
insb
dec
pushf
add
int
int3
and
mov
jne
cwtl
adc
inc
cs
into
adc
int3
ja
leave
mov
jecxz
or
cmpsl
lods
stos
push
adc
sub
mov
inc
mov
adcb
pop
aam
scas
sub
sub
dec
hlt
adc
dec
icebp
xchg
jle
lahf
add
and
aas
push
sbb
jle
lcall
int
iret
push
arpl
ret
dec
jo
cmp
fcoml
xor
jb
jnp
push
mov
mov
and
and
inc
mov
sbb
mov
push
pushf
bound
ss
mov
pop
ljmp
xor
cmp
int3
lret
xor
or
lods
sbb
xlat
std
dec
cmp
aam
sub
push
lret
bound
xor
dec
sbb
enter
mov
fdivl
fsubrl
and
dec
pop
jne
movsl
jnp
cmp
insl
cmp
cld
jo
sbb
mov
push
sahf
and
mov
mov
loope
sub
fnstcw
xchg
int
adcb
mov
adc
xchg
jbe
sahf
arpl
mov
test
pushf
xchg
stos
pop
test
mov
fldcw
fdivl
movsl
int3
fisttpll
das
mov
xchg
stos
adc
push
cs
mov
scas
test
push
out
into
stos
lret
popf
mov
xchg
xchg
movsl
adc
dec
pusha
js
arpl
in
popf
xchg
mov
in
insb
andb
lock
shll
cmp
mov
fstpl
mov
outsb
gs
pop
in
loope
aam
ss
out
outsb
inc
adc
rcll
subl
lahf
gs
mov
inc
scas
ja
cs
das
add
xchg
mov
push
inc
dec
and
hlt
nop
add
adc
add
imul
push
pop
push
insb
and
aas
repz
cli
jo
cli
imul
fisttpll
lss
and
data16
mov
pop
mov
in
lods
cmp
fnsave
leave
push
and
lods
adc
mov
jg
inc
test
cmp
mov
or
call
dec
jbe
inc
test
jns
dec
std
in
inc
mov
cli
and
push
addr16
sub
jecxz
ficompl
jae
rolb
repz
aam
or
test
jno
adc
je
mov
and
cmp
xor
mov
orl
cmc
dec
subb
mov
pop
cmp
lcall
add
add
push
or
push
jmp
mov
adc
aad
mov
in
jecxz
mov
cmp
fwait
jno
test
dec
xor
lret
push
bound
or
hlt
test
in
fdivrs
icebp
insb
pop
int
xor
sub
jns
sbb
or
in
sbb
mov
cld
scas
mov
enter
std
jns
adc
outsl
dec
mov
xchg
imul
insb
jge
mov
and
pop
or
jmp
xor
dec
les
or
jnp
dec
dec
or
movsb
cmp
rolb
ret
xor
xchg
adc
out
pop
imull
loopne
sbbb
mov
mull
push
sbbb
fcompl
xor
add
es
cmpsb
popf
jno
pop
lods
and
sub
mov
xchg
out
pop
mov
lret
scas
mov
mov
or
dec
mov
mov
mov
adc
popa
fs
push
scas
mov
or
add
jmp
sub
les
inc
aam
push
pushf
hlt
cmp
inc
loope
inc
mov
adc
sbb
dec
sub
pop
lret
jle
mov
ficoms
out
and
repnz
popl
fwait
std
stos
stos
int3
push
scas
dec
nop
xor
ficoms
data16
aad
out
test
cmp
enter
add
data16
cmc
cld
and
ljmp
insl
mov
pop
adc
add
sbb
ljmp
pop
std
mov
fs
mov
pusha
dec
mov
pop
jecxz
or
or
sub
lods
les
enter
push
fcmove
dec
iret
xchg
jne
adc
xlat
sbb
mov
fs
cmp
in
mov
nop
cmpb
sub
push
ja
cmc
mov
insb
mov
inc
xchg
popa
mov
push
xchg
dec
rcr
or
jmp
scas
add
sbb
out
jo
lret
decl
lds
pusha
cmp
and
add
into
adc
mov
out
ds
pop
shlb
in
aas
maxps
or
lods
dec
mov
je
addr16
jle
leave
fwait
insb
stc
dec
bound
sbb
inc
fwait
push
hlt
loop
jb
xchg
clc
jecxz
mov
cld
jb
mov
xor
sub
int3
pop
xor
jecxz
add
or
pop
or
pop
and
test
sub
adc
xchg
leave
and
jecxz
jnp
and
pop
jp
lahf
in
cwtl
or
popa
test
dec
hlt
in
jl
aas
jne
std
les
push
sti
shlb
int
add
es
aam
add
lods
cmpsb
sbb
or
xchg
mov
xor
int
stc
mov
idivl
xchg
mov
outsb
or
insl
js
jge
aad
shll
jno
sbb
addl
aam
jl
sub
sahf
pop
cwtl
inc
pop
ja
jae
in
jb
push
mov
sahf
scas
jae
test
jae
sub
out
or
fiaddl
addb
push
add
mov
push
push
repnz
cwtl
cmp
mov
repz
mov
cmp
jo,pn
push
jne
mov
fstl
movsl
scas
mov
fst
mov
aam
pop
andb
dec
outsb
ret
insb
mov
xchg
pop
aad
inc
test
inc
lcall
xchg
sbb
inc
and
insb
ljmp
enter
jb
inc
jecxz
incl
add
jmp
adc
xlat
stc
jns
data16
or
sbb
mov
inc
pushf
stos
lods
inc
pop
jecxz
mov
dec
outsl
or
pop
mov
pop
mov
fs
sbb
push
sub
push
mov
and
aam
dec
dec
pop
imul
pop
adc
shr
xor
push
sub
fmul
push
sub
stc
test
sub
test
mov
ds
jp
cmove
stos
cs
sbb
inc
mov
scas
in
insb
loopne
mov
jne
rcll
add
ljmp
negl
and
xor
arpl
push
es
cmp
hlt
mov
leave
push
cld
inc
xchg
xchg
and
xchg
or
xor
add
insb
dec
mov
mov
scas
clc
inc
push
cmpsl
push
jno
mov
pop
add
data16
pop
and
mov
cmc
pop
inc
ret
xchg
pop
pop
lahf
scas
out
je
dec
mov
mov
push
fidivrs
mov
popa
mov
cmpsl
jecxz
cmp
jp
inc
cwtl
xor
or
in
int
sbb
adc
cwtl
cmp
push
cmp
in
jno
pop
sub
inc
add
jmp
sub
aas
inc
inc
push
xchg
ret
cltd
mov
xor
lret
adcb
and
add
add
push
call
insl
xor
pop
mov
push
inc
ljmp
jnp
test
sub
cmpsl
inc
xchg
repz
push
es
push
pop
cmc
xchg
cmc
adc
mov
popf
pop
cmp
mov
push
bnd
icebp
add
dec
add
enter
jne
sahf
ds
xchg
insb
jle
adc
xchg
jno
je
insl
mov
imul
lods
ljmp
adc
daa
lock
xor
add
dec
and
jnp
or
dec
loope
inc
dec
pop
adc
push
adc
ss
adc
adcb
push
fs
xor
rcrb
arpl
clc
notb
mov
loopne
insb
or
daa
and
into
add
out
mov
loopne
insb
test
adc
push
gs
fnstcw
loop
xlat
xchg
sarb
stos
mov
push
and
int3
js
cmp
jne
inc
jl
adc
sub
lods
dec
inc
dec
imul
mov
repnz
mov
and
jae
push
xchg
inc
insl
dec
or
in
and
pop
icebp
stc
out
and
lret
in
sbb
mov
repz
icebp
mov
mov
outsb
pop
fldt
les
jae
and
dec
lret
cmp
imul
icebp
popf
aas
push
xchg
cmp
cmp
jmp
dec
lret
cltd
cmp
inc
mov
icebp
cli
ljmp
stc
shrb
adc
and
addr16
jae
testl
cmpb
js
shll
adc
sub
jnp
cmpsb
lret
sbb
mov
int3
dec
imul
imulb
pop
ljmp
fadd
mov
ret
mov
sbb
adc
xchg
xor
add
loopne
test
jb
adc
fiadds
insb
push
push
cmpsb
clc
int3
arpl
sub
xor
jg
mov
in
sahf
cwtl
and
push
sbb
or
insl
xor
push
jmp
hlt
jo
push
hlt
cwtl
cld
ss
pop
or
add
xor
outsl
adc
or
or
mov
insl
das
pop
sahf
push
mov
mov
dec
test
push
out
pop
pop
seto
push
sub
mov
or
test
and
popl
enter
rcrb
pop
adc
cltd
mov
stos
stc
cltd
or
fnsave
xchg
mov
iret
mov
pop
mov
das
sbb
adc
pusha
repz
int3
mov
ficoml
test
xchg
int3
push
sub
or
mov
cmp
xor
push
imul
fnstsw
mov
xor
aaa
loopne
mov
lret
mov
mov
cltd
les
jnp
into
add
xor
xor
mov
sub
mov
xor
xchg
mov
add
adc
sahf
rolb
loopne
xor
sub
shrl
repz
cs
sub
subb
mov
sahf
and
loope
icebp
sbb
jns
and
and
jbe
dec
int3
fdivr
add
add
mov
dec
inc
shlb
faddl
lods
xor
cs
pushf
cmp
cld
and
fbld
lret
sub
dec
scas
add
sub
jbe
lret
jle
push
xor
sub
sahf
test
xchg
push
jl
stos
fidivrs
popf
mov
mov
cwtl
mov
jb
or
lcall
sub
push
push
idivb
outsl
cmp
inc
inc
mov
pop
sbb
cmp
lds
dec
adc
ljmp
pop
insb
stc
dec
fnstcw
push
inc
pop
push
mov
mov
xchg
subl
iret
push
in
andb
xor
xor
jle
mov
testb
adc
mov
aam
xchg
lds
clc
aaa
lods
and
ret
dec
xchg
or
sahf
les
hlt
push
in
rcr
jmp
adc
cmp
dec
popl
sub
add
les
ljmp
lea
ss
inc
popf
mov
hlt
and
arpl
icebp
sbb
lret
ds
inc
outsl
mov
adc
and
inc
mov
dec
mov
dec
in
add
loope
push
pop
fsubl
cmc
out
mov
add
sbb
frstor
call
lcall
cmp
push
int3
test
les
mov
fidivrl
mov
jle
dec
xlat
xchg
xchg
dec
push
loopne
inc
mov
push
pop
inc
mov
scas
dec
fcompl
das
sahf
push
ficoms
sbb
pop
aad
or
movsl
insl
cmp
fstps
repz
mov
inc
sub
add
and
xchg
jle
inc
pop
cltd
jecxz
mov
ja
dec
xor
int
in
push
jne
jg
xorb
and
shll
std
mov
push
inc
fs
cli
popf
dec
cmc
cs
lar
xchg
xlat
test
mov
mov
inc
lret
push
sbb
or
dec
ret
loope
ret
xchg
or
test
hlt
xchg
insb
fdivs
jns
fmul
sbb
stc
lahf
xchg
sub
xor
cld
mov
lcall
jl
pop
test
out
push
or
jg
mov
mov
pop
jns
aaa
mov
xor
je
mov
mov
sahf
sahf
aad
dec
jmp
mov
or
iret
int3
adc
jo
sbb
clc
into
mov
push
sbb
repz
jle
inc
add
popf
mov
outsb
mov
insb
iret
leave
adc
hlt
push
pop
jp
jecxz
cld
bound
and
insb
dec
adc
mov
orb
mov
push
pop
icebp
sbb
lds
or
mulb
aam
xor
popf
test
add
or
xor
pop
mov
cmc
cmp
insb
cli
hlt
push
and
inc
aam
add
inc
sub
ret
int
jle
add
pop
jp
fisubrl
or
clc
adc
pop
leave
and
adc
and
mov
inc
enter
mov
lcall
movsb
cmp
aam
jecxz
inc
push
sbb
mov
outsl
sar
daa
testb
sbb
xor
add
mov
push
pop
je
pop
push
test
repz
add
enter
cmp
mov
jmp
mov
jmp
mov
ret
cltd
inc
int3
lods
in
push
ds
add
jo
dec
add
shlb
sbb
aas
sbb
sbb
jg
mov
cmp
cs
adc
push
fwait
roll
add
bound
xor
dec
xor
mov
adc
xor
int3
cmp
and
lcall
push
lods
das
and
clc
ss
popf
jo
sub
lock
jecxz
hlt
push
adc
and
sub
movsl
fcompp
dec
es
stos
repz
inc
cmpb
mov
mov
xor
add
mov
jge
push
loopne
clc
ja
jle
lahf
ret
fmul
lods
sbb
jb
inc
push
movsl
sub
mov
jecxz
nop
fisubrl
aas
mov
fisttpll
add
repz
dec
scas
insl
sbb
fwait
test
scas
jg
mov
repnz
sarl
mov
scas
mov
or
xchg
negb
and
xchg
mov
sbb
xchg
push
lahf
inc
fsubl
enter
les
push
pop
inc
fs
dec
insb
sbb
in
dec
sbb
insl
call
push
push
sahf
sub
sbb
inc
sbb
in
mov
xchg
adc
popa
fstps
mov
cs
push
dec
add
cli
mov
fcmovnbe
push
nop
cmp
add
and
sbb
outsb
jns
les
loop
popa
notl
test
sbb
cld
idivl
iret
cmp
xchg
adc
dec
mov
rcrl
sub
imul
xor
mov
les
cmpl
and
ljmp
ret
push
pop
add
out
cmpl
mov
jb
xchg
inc
inc
sbb
pop
push
push
xchg
rorb
idivl
push
icebp
pop
out
dec
mov
or
sbb
test
inc
and
decl
popa
jns
mov
mov
xchg
dec
aas
mov
into
or
xchg
outsb
std
mov
mov
shrb
lahf
ficomps
pusha
lahf
dec
mov
mov
jnp
xor
insb
imul
push
mov
lea
sbb
jbe
mov
js
adc
test
xlat
test
inc
lods
push
and
lock
loope
pop
mov
data16
mov
xlat
test
xor
mov
xor
loop
xchg
mov
jnp
stc
xor
or
adc
jg
xor
loopne
stos
and
lret
cmp
sbb
jge
pop
shll
outsl
push
and
jge
stos
xchg
sub
sbb
dec
mov
scas
das
jmp
out
xor
mov
ljmp
add
sbb
jae
loopne
andb
jle
shr
ret
es
icebp
jnp
fiaddl
and
pop
mov
cmp
mov
pusha
pop
and
mov
stos
imul
dec
imul
xchg
mov
and
shr
ds
cmc
jg
jne
dec
dec
imul
pushf
adc
loope
cmp
and
xlat
hlt
ds
and
sbb
add
sub
insb
mov
sarl
jl
or
jno
xchg
fwait
or
mov
mov
outsl
call
outsb
pushf
mov
es
ret
jge
imul
xchg
icebp
push
shlb
js
mov
jg
lods
add
push
mov
pop
arpl
aas
iret
xor
push
leave
add
xchg
mov
inc
rorb
or
in
jne
sub
and
rcrl
xchg
inc
es
jno
push
fidivs
cmp
lock
pop
int
jle
stos
xchg
cltd
or
xchg
je
insb
xchg
push
mov
and
jge
or
outsl
inc
fisttpll
mov
sub
mov
mov
sbb
icebp
xor
mov
loop
xchg
orl
mov
cwtl
dec
mov
or
sbb
inc
insb
loopne
sub
clc
xchg
mov
in
popl
movsl
decl
push
dec
push
lea
inc
add
ret
pop
pop
xor
je
xchg
imul
sub
pop
popf
mov
cmp
mov
mov
lds
inc
pop
es
sti
loopne
aam
aad
pusha
icebp
inc
sahf
popf
sub
inc
lret
add
add
fsubrl
mov
scas
movsb
and
or
and
pop
xor
sub
cmp
or
psubq
pop
outsl
shl
inc
fsubrl
nop
or
cwtl
int
sarb
pop
leave
sbb
and
aas
lahf
jg,pn
cmpsl
shrl
cli
out
add
pusha
insl
ret
orl
out
add
push
pop
test
xor
out
and
cmp
jae
xchg
leave
adc
loop
adc
imul
adc
cmp
mov
or
dec
mov
lds
pop
inc
bound
mov
lcall
mov
inc
and
push
jecxz
adc
fcoms
push
pop
inc
and
mov
dec
in
cwtl
repnz
add
cmpsl
cmpsb
and
pop
lahf
mov
mov
pop
lods
inc
les
cmp
mov
data16
mov
clc
loope
or
stos
lock
cmpsl
xchg
mov
daa
fidivl
cmp
push
pop
jo
sbb
xchg
xor
scas
mov
out
xlat
test
pop
sbb
sbb
cli
jl
lcall
xchg
push
jnp
cmc
clc
xchg
pop
jno
mov
xchg
mov
and
jae
enter
fcoml
into
repz
insb
mov
mov
push
stc
and
pop
les
mov
aaa
xor
jl
or
add
or
sbb
cmp
jae
push
adcl
pop
push
dec
testb
mov
idivl
clc
dec
adc
movsb
xor
ljmp
sbb
xor
test
add
ficompl
pop
addl
pop
add
or
xchg
xchg
repz
dec
or
mov
daa
dec
xor
and
lahf
in
inc
jae
pushf
sti
dec
repnz
movsl
mov
xor
cmp
stos
inc
mov
push
mov
add
jecxz
and
inc
aad
push
stos
scas
addr16
outsl
fsubrs
lret
stos
mov
or
sub
adc
pop
adc
adc
fs
int
xchg
in
adc
pop
mov
adcb
pop
les
mov
sbb
aas
fnsave
sub
and
mov
movsl
mov
or
lds
xlat
mov
mov
adc
dec
sub
repz
das
popf
or
les
in
pop
faddl
test
push
sti
jp
mov
pop
sub
js
xor
test
sub
scas
aad
call
push
test
push
rcrb
lcall
leave
insb
or
push
mov
add
and
jmp
pop
cmp
push
pop
inc
pop
pop
fld
cmpsl
loopne
and
mov
lret
fwait
pop
es
icebp
icebp
jmp
jge
cli
or
int3
inc
mov
jbe
mov
mov
adc
movsb
or
out
push
test
mov
or
mov
mov
das
xlat
popf
jns
sahf
dec
mov
in
pop
add
add
fstl
push
cltd
inc
jne
xchg
dec
xchg
or
sbb
ss
inc
ja
xor
scas
outsb
test
jb
push
jge
std
cwtl
cs
mov
mov
mov
pushf
mov
shll
xor
jp
popa
inc
xor
mov
xchg
push
cmp
add
fisttpll
cmp
pop
mov
or
pop
or
and
cmp
mov
mov
mov
dec
mov
mov
xchg
or
ds
clc
loope
out
mov
xor
xchg
pop
popa
dec
or
inc
orl
add
ficoms
aad
and
in
inc
push
lcall
jno
ja
in
adc
lret
xchg
add
inc
or
push
mov
pushf
lea
sbb
jns
sub
in
sbb
les
int
and
sbb
loope
xchg
iret
sbb
adcl
dec
xchg
jg
xchg
xor
inc
lea
lods
and
js
xlat
rcrl
call
in
xchg
cmp
and
sbb
ds
lods
cmp
fsubs
bound
push
fdivrs
cwtl
mov
clc
sbb
pop
scas
popf
stc
arpl
cmc
in
arpl
jmp
cmpsl
aaa
xchg
mov
daa
jecxz
xchg
sub
loopne
stc
lahf
clc
push
inc
out
in
addr16
cmpsb
lret
adc
arpl
sub
cs
nop
pushf
dec
clc
pop
adc
adc
mov
rorl
adc
int3
fsubl
ljmp
push
push
sbb
dec
add
xlat
cmpsb
xor
xchg
pop
sbb
repz
jo
stos
clc
mov
lcall
iret
push
lds
push
scas
jmp
jno
mov
jle
xchg
add
jns
cltd
push
push
ret
pop
nop
pmulhuw
inc
rorl
sbb
js
cmp
lcall
add
and
mov
mov
mov
add
mov
pop
sub
outsb
in
sbb
xchg
add
xlat
loopne
mov
add
sti
and
call
jmp
and
or
mov
and
popa
sub
push
scas
fimuls
into
jb
pop
xor
std
popf
add
cmpsb
js
ja
iret
inc
mov
sub
push
add
outsb
dec
dec
inc
sub
sbb
aaa
mov
pushf
pop
hlt
lahf
inc
and
inc
cmp
ret
fsubrl
and
aam
push
pop
out
or
mov
sbb
jecxz
xchg
pop
sbb
or
mov
pop
lahf
add
cmp
xchg
push
dec
hlt
ss
clc
or
insl
icebp
mov
enter
push
rcr
stc
xchg
cld
loopne
sbb
cmp
test
into
xchg
push
xchg
push
movsb
sahf
popl
cmp
inc
clc
addb
pop
into
clc
sub
xchg
inc
jl
jecxz
or
pop
sahf
sti
enter
jnp
fwait
aas
sub
out
pop
jp
cmp
pop
cs
in
xor
cmp
mov
xchg
fisttpl
lahf
pop
pop
jo
adc
fidivrl
mov
dec
xchg
mov
dec
xchg
adc
loope
mov
jno
sahf
inc
data16
fwait
aaa
jns
mov
push
xchg
mov
jb
push
push
aad
push
lods
push
xor
pop
das
dec
cltd
aas
roll
fstl
dec
insb
or
stos
mov
push
mov
imul
rclb
jnp
cmp
je,pn
mov
pusha
in
adc
rorb
outsb
fadds
je
jno
popa
add
insl
adc
adc
cmc
add
adc
nop
rclb
mov
mov
add
ds
mov
test
orl
jo
sbb
mov
scas
neg
rcrb
mov
sub
popa
dec
clc
add
inc
add
inc
mov
sub
mov
push
mov
mov
mov
cmp
xor
movsl
sbb
or
int3
xlat
push
loope
push
mov
lahf
cmp
cmc
inc
fsub
lds
mov
add
jb
or
inc
mov
mov
test
lock
mov
sbb
push
notl
and
adc
shlb
pop
xchg
jmp
mov
cmp
inc
pop
gs
enter
jp
or
xchg
sbb
sub
imul
sub
jp
lahf
add
mov
stc
rorb
sbb
aam
nop
jp
bound
ficompl
push
out
sbb
cs
jecxz
pop
in
aas
sahf
je
adc
aaa
dec
add
rclb
push
jno
int3
fdivrl
mov
stc
sbb
push
xchg
or
data16
pushf
mov
adc
push
out
inc
movsl
sub
hlt
pushf
xor
add
cmp
lahf
cmp
pushf
fldl
xchg
sbb
in
das
loope
cmp
mov
or
fadds
pop
int3
dec
mov
imul
xchg
pushf
jecxz
rorl
sub
shl
in
sbb
sub
cmpsl
aas
cmp
jmp
pop
popa
call
jle
dec
sbb
iret
scas
push
mov
mov
in
or
bnd
outsb
shrb
mov
jne
stc
loop
addb
popa
sar
addr16
cmpsb
aad
cltd
movsl
xor
hlt
adc
push
in
repz
xor
pop
sbb
add
scas
xchg
bound
fwait
aaa
jbe,pn
cmp
cmp
xchg
sub
and
add
jb
enter
jge
pop
xchg
fmuls
pop
scas
sbb
xchg
movsb
pusha
and
rcll
rcrl
popf
add
push
xor
pop
pop
test
clc
adc
jge
lods
shll
mov
outsl
iret
mov
fs
mov
jnp
sbb
mov
cli
mov
cmp
mov
mov
stc
dec
aas
pusha
addr16
push
lods
stc
jle
imul
dec
mov
sub
xchg
mov
insl
pop
fcmovu
push
and
mov
dec
xor
xlat
xor
or
sbb
and
jmp
cs
out
es
mov
sbb
xchg
or
push
das
mov
mov
push
test
or
mov
std
mov
addr16
cli
or
mov
int3
cs
xlat
inc
dec
fwait
jbe
pop
inc
sahf
mov
cmp
test
push
xor
cli
leave
lock
inc
jmp
out
or
push
cltd
add
inc
sahf
xchg
push
inc
into
inc
sub
insl
pop
imul
xchg
shll
xor
xlat
scas
icebp
test
stos
or
mov
rcrb
inc
and
gs
cmc
mov
xlat
jecxz
xchg
std
sbb
test
and
jecxz
nop
div
cmpsb
push
or
mov
or
rol
mov
xchg
scas
push
clc
shrl
inc
ljmp
sahf
ret
fst
xchg
mov
sub
cli
jecxz
icebp
mov
push
fcoml
ret
cmp
cwtl
xchg
je
or
dec
dec
jle
jg
cmc
mov
lret
sbb
jne
cwtl
jge
inc
bound
mov
popl
outsl
idiv
add
mov
pop
sub
stc
inc
mov
cmp
test
sbb
in
fwait
inc
popf
ret
shll
leave
push
sub
pop
imul
inc
and
cmp
js
xchg
insb
ftst
jg
das
push
leave
push
aaa
push
icebp
stc
jl
je
xor
pop
mov
push
ds
xor
pop
aaa
pop
ret
movsl
fsubrl
shll
pop
pop
int3
inc
mov
dec
aad
adc
mov
scas
dec
repnz
lcall
negb
orl
and
popf
cmpb
push
out
adc
ffree
push
gs
and
loope
stos
shlb
gs
adc
fildll
mov
xor
or
mov
insb
lds
aad
mov
pop
dec
das
hlt
adc
notb
push
push
pop
repz
ja
sub
jno
out
or
jp
cmpsb
loope
sbbb
mov
sti
dec
sti
cs
bound
inc
jnp
cmp
xchg
testl
and
sahf
mov
push
inc
and
test
pop
mov
repnz
inc
jge
faddl
inc
shll
add
dec
aam
adc
inc
pop
aam
inc
xchg
pop
je
jl
scas
dec
push
or
mov
mov
les
fildll
jp
jle
outsl
lcall
fadds
mov
xor
popf
add
stos
ret
sub
rcrb
lods
jb
push
xor
cli
int3
call
mov
and
and
lds
shrl
mov
outsl
sub
xchg
fiadds
and
mov
jbe
mov
sbb
sbb
jecxz
mov
xchg
test
mov
xchg
adc
add
sbb
push
daa
push
xchg
out
and
jp
loopne
cltd
push
gs
add
xor
sub
add
add
adc
push
rclb
jb
adc
and
scas
mov
or
jo
inc
xchg
and
mov
mov
stos
loop
pop
sti
les
aaa
add
aaa
mov
pop
mov
add
inc
cmp
cmpsb
test
arpl
fstpt
fstps
sbb
inc
push
inc
fldt
or
cmp
push
fs
xchg
inc
arpl
iret
bnd
test
dec
mov
pop
ret
push
in
adc
sub
or
shrb
mov
imul
lods
and
jmp
jge
imul
rorl
dec
lods
push
add
mov
orb
xchg
sbb
adc
repz
cltd
lock
pop
xchg
mov
inc
jbe
add
rorl
iret
daa
jns
xchg
xchg
stos
inc
add
mov
outsb
or
out
mov
rep
xlat
mov
test
in
jmp
sbb
mov
cs
ss
mov
push
enter
or
and
or
sbb
mov
adc
imul
lds
insb
xchg
orb
enter
outsl
cmp
into
and
mov
inc
sub
sahf
inc
insl
adc
cwtl
mov
jl
xchg
mov
hlt
adc
adc
bound
daa
bound
imul
jmp
sub
sahf
add
mov
cwtl
test
dec
push
push
lahf
xor
add
pop
movsb
scas
sbb
xchg
mov
fdivrl
loope
mov
mov
add
xchg
mov
outsb
lods
mov
and
ja
xchg
adc
dec
hlt
into
sub
inc
or
fidivl
inc
inc
repz
mov
sub
testb
js
cltd
xor
fsubrl
icebp
cmp
pop
xor
mov
dec
and
mov
push
cmp
ljmp
mov
and
and
test
jno
jns,pn
out
lret
jmp
aam
lahf
mov
idivb
mov
es
jo
jmp
xlat
mov
jmp
push
pop
pop
jl
adc
ret
dec
aad
pushf
xchg
adc
lods
sbb
mov
add
int3
inc
xchg
pop
repnz
mov
jmp
rol
jge
pop
and
divl
jecxz
inc
imull
call
cmpsl
test
cmpl
int
jp
jbe
or
xlat
mov
test
pmulhw
mov
sbb
dec
push
fstps
xlat
cmp
cmp
adc
rcll
lods
push
inc
and
sub
inc
push
adc
addr16
xchg
pushf
xor
push
add
test
and
dec
inc
js
aam
movsb
sbb
and
push
inc
lea
push
lods
jmp
sub
push
sbb
les
mov
scas
jmp
sub
push
and
inc
mov
call
cmc
fidivs
les
adc
mov
xchg
or
push
call
xor
xchg
fnsave
inc
adc
dec
mov
stos
imul
add
subl
xor
insb
ror
push
pop
dec
pop
or
or
fdivrl
sbb
ret
jl
push
pop
xor
int3
xor
leave
sahf
les
lret
adc
gs
add
jle
aam
leave
inc
imul
movsl
mov
out
push
xchg
sub
stos
lahf
and
push
cmp
pop
loop
pop
bound
mov
js
aaa
nop
cmp
sbb
jns
jmp
add
mov
mov
xor
fsts
jae
or
and
lcall
xchg
add
xor
mov
inc
xchg
and
inc
call
fldcw
inc
ret
jns
das
or
xor
loopne
inc
cs
in
mov
pop
or
inc
test
mov
push
add
push
or
jp
in
cmp
mov
dec
sub
aas
std
fiaddl
xor
jns
jl
out
adc
sbb
lods
lds
les
xor
addr16
inc
aad
push
mov
or
jns
fidivl
aam
cmp
mov
and
sbb
in
in
iret
jl
mov
insl
jbe
sbb
mov
inc
std
sbb
test
mov
icebp
mov
lret
adc
ret
add
cmp
std
adc
dec
xor
lret
sti
inc
ds
xor
mov
cmpsb
sub
out
fwait
sub
and
pop
jns
popa
xor
pushf
sbb
adc
pushf
sub
adc
or
adc
jne
sub
out
nop
pop
in
mov
fnstenv
add
mov
enter
push
xchg
xchg
int3
sub
stc
cmp
jp
sub
and
popf
mov
repnz
or
and
or
mov
mov
ja
jne
in
xor
ljmp
lret
jg
das
scas
sub
xchg
add
xchg
popa
into
fnstenv
lds
sub
in
cmp
movsb
mov
adc
aad
pop
cs
inc
pop
pop
loop
push
in
sub
test
stos
and
shrl
idiv
inc
mov
add
add
push
mov
jbe
hlt
loop
add
lods
xchg
pop
test
outsl
sub
stos
test
outsl
loope
popf
xor
pop
stos
scas
loop
inc
sbb
xor
aaa
mov
movsl
and
inc
sbb
push
hlt
fcompl
and
stos
rorl
pushf
cmp
sarl
cmp
test
popf
fstp
mull
sub
mov
pop
mov
and
cmp
mov
stc
testl
mov
cltd
mov
call
xchg
xor
jae
push
mov
pop
jge
or
xor
sub
jmp
incb
ret
scas
sahf
lahf
sahf
out
sbb
lea
inc
jno
xor
jo
fdivrl
gs
or
push
add
push
pop
repz
xor
add
int
outsb
fdivl
stos
pop
mov
xchg
movsl
dec
movsb
or
jmp
sahf
or
adc
shll
cmpsb
shll
pushf
icebp
call
add
out
ucomiss
mov
inc
sbb
roll
mov
test
mov
mov
clc
mov
mov
daa
inc
insl
lcall
sbb
pop
cmp
lahf
xlat
lea
pop
into
cmp
stos
push
leave
adc
jnp
push
sub
and
fs
or
sub
add
aad
cmc
inc
in
push
pop
pushf
jl
fs
aas
jge
lahf
hlt
das
dec
test
mov
sub
and
mov
cmpsb
mov
test
nop
pushf
mov
xchg
outsl
push
jecxz
test
in
jnp
incb
pop
mov
ds
int3
and
pusha
cltd
mov
or
test
lods
mov
cmp
das
cmp
adc
fadd
insb
mov
mov
xor
jno
cltd
stos
scas
imul
or
add
jae
push
mov
icebp
jb
lock
sbb
mov
hlt
sbb
and
jl
jecxz
lods
xchg
stc
daa
add
xchg
mov
roll
aaa
int3
in
pop
mov
inc
push
js
repz
jno
jmp
sbb
or
sub
mov
dec
scas
cmp
cmpsb
in
pop
and
sbb
xchg
xlat
fnstsw
into
leave
mov
out
test
push
iret
incb
inc
hlt
fstpl
jne
jno
ret
lretw
push
imul
and
mov
popa
es
nop
cmp
sbb
xor
xchg
xchg
lods
dec
pop
not
leave
push
nop
arpl
and
mov
push
roll
lret
inc
xlat
in
and
xor
loopne
imul
cwtl
adc
dec
scas
loope
mov
jno
and
add
mov
int3
icebp
and
movsb
cltd
xor
pop
and
mov
or
test
clc
inc
cmp
into
and
movb
mov
jb
cwtl
inc
insb
mov
jb
repnz
stos
sub
int3
leave
add
cmpsb
mov
stc
ret
xlat
sub
shld
or
jo
dec
push
xchg
sbb
js
xlat
in
mov
or
sub
out
test
dec
outsl
repnz
repz
fcmovne
inc
cmp
xchg
enter
lcall
inc
mov
xchg
sahf
inc
xor
cli
and
cwtl
lods
push
scas
ljmp
out
lods
pop
sbb
imul
in
push
pop
or
add
mov
pop
jae
push
push
jp
push
ljmp
adc
jo
or
ja
fmulp
fmuls
into
faddl
sbb
loop
pop
pop
pop
dec
xor
jl
adc
imul
lret
pop
icebp
xchg
icebp
sub
or
loopne
fisttps
inc
mov
xchg
fisubrl
adc
xlat
or
and
xchg
mov
jl
popa
out
xchg
push
nop
inc
mov
lock
arpl
fcoms
cmp
inc
sbb
pop
xchg
iret
cmc
out
add
rorb
push
lea
jnp
adc
push
sub
clc
mov
mov
fsincos
xchg
jns
jmp
xor
repz
sbb
add
and
rorl
or
lods
xchg
adc
xlat
andl
xor
adc
andb
mov
dec
inc
pop
daa
ja
and
sbb
sub
sub
inc
pop
jno
xor
enter
test
loopne
lahf
adcb
into
fs
dec
cltd
les
or
pop
enter
rcl
int3
out
cmpsl
es
mov
pop
sbb
xor
adc
jne
cs
test
stos
test
leave
or
cmp
jle
adc
jbe
push
addr16
div
in
mov
xchg
jg
mov
adc
fld
xlat
test
daa
dec
outsb
or
popa
js
xor
bswap
movsb
xor
mov
pop
nop
and
jmp
icebp
stos
push
pop
fstps
fcompp
sbb
or
xlat
cmp
mov
push
mov
push
xor
adc
xor
repz
mov
or
data16
ds
push
in
xchg
test
ljmp
sub
and
iret
or
add
aad
pusha
sahf
sub
int3
mov
out
pop
imull
jno
and
clc
jo
xchg
mov
ret
fwait
clc
daa
movsb
cmp
add
add
cli
mov
ds
mov
xchg
aas
je
loopne
add
lahf
push
dec
and
movsb
xor
out
push
vmwrite
addb
pop
test
mov
inc
andl
mov
pop
test
ljmp
iret
mov
sub
mov
and
in
push
add
dec
push
xchg
fidivrs
xor
xor
jp
lods
cmp
jmp
sub
loope
mov
add
adc
popf
xlat
arpl
add
cmp
sub
cwtl
inc
push
test
pushf
jge,pn
dec
mov
test
inc
and
pop
sub
and
mov
rcrb
cwtl
jne
xor
cmp
ret
xchg
push
stc
inc
xchg
jne
ja
lods
and
cmp
mov
pop
das
popa
add
cmp
xrelease
je
jae
adc
scas
cmp
dec
xor
mov
and
xchg
jne
divl
cld
ret
push
or
sub
mov
lock
push
stos
mov
dec
stos
mov
add
in
sbb
jecxz
add
mov
cmp
jno
aad
fcmovnb
push
mov
xchg
out
adc
add
icebp
cmp
scas
jno
push
inc
insl
movsl
cmp
inc
jns
jns
clc
dec
imul
repz
mov
aam
jno
adc
aam
add
and
inc
pop
lods
dec
outsl
enter
cmpsb
in
inc
xchg
sbb
inc
xchg
mov
and
cmpsl
push
or
jns
mov
aaa
adc
and
xlat
int
cmp
push
and
test
jp
mov
sbb
mov
subb
or
stc
push
scas
adc
add
daa
movsb
sbbl
xlat
fildl
push
xor
mov
or
inc
add
cmpsl
hlt
fs
and
mov
sahf
stc
orb
mov
sub
and
mov
cwtl
mov
jmp
cmp
js
das
mov
ret
cmp
dec
adc
hlt
sbb
pop
cwtl
int
icebp
arpl
pop
loopne
pop
inc
cwtl
push
dec
jne
xchg
mov
sbb
outsl
adc
out
test
shld
cli
aad
mov
aam
jnp
inc
add
dec
push
sub
jp
scas
in
push
add
mov
mov
inc
push
pusha
fsubrl
mov
inc
fcoms
lahf
jecxz
data16
cmp
mov
insl
mov
sbbl
push
subl
imull
dec
jno
cmp
out
mov
inc
imul
aam
data16
cmp
outsl
loopne
dec
mov
push
movsb
bound
icebp
xchg
js
in
push
rolb
andl
jae
dec
imulb
and
loopne
push
stc
jns
mov
bound
ss
adc
loope
fistpl
pushf
mov
daa
pop
jl
arpl
lods
in
lcall
xchg
and
orl
mov
test
cli
mov
fidivrs
mov
and
sbb
imul
mov
pop
xchg
and
cmp
int
add
mov
mov
enter
mov
inc
arpl
cwtl
add
inc
add
push
outsb
gs
aaa
xorl
pop
out
push
xor
and
je
loop
lret
dec
add
sub
insl
stos
movsb
out
std
jbe
cmp
imul
jns
push
sub
inc
lods
sarb
sbb
push
lahf
call
cmp
sbb
mov
mov
cli
ret
pop
push
sub
cmp
punpckhdq
gs
inc
sbb
lcall
ret
pop
mov
push
jbe
cltd
jns
dec
pusha
js
in
test
jecxz
cs
adc
xchg
fidivrs
sub
push
andl
popf
xor
mov
cld
pop
inc
inc
in
rclb
stos
lods
and
cmp
add
cmpsl
dec
movsb
mov
in
loopne
inc
adc
and
loope
lods
dec
movsl
and
dec
sbb
leave
cs
adc
xchg
inc
and
xlat
mov
jge
mov
in
loope
push
addr16
cs
fs
bound
cmc
int3
sub
popa
ret
push
and
orps
mov
ss
xchg
sbb
daa
daa
ja
popf
mov
xchg
push
into
jg
sub
imul
push
mov
iret
or
jns
lahf
xchg
popf
loopne
push
aas
stos
fwait
inc
subl
mov
sbb
or
icebp
or
jbe
or
js
das
loope
push
dec
stos
insb
xchg
xor
test
xchg
inc
ret
clc
loope
js
adc
lock
or
imul
adc
daa
pop
adcl
pop
push
ljmp
push
mov
in
rolb
dec
ds
cmp
push
jns
out
mov
mov
inc
or
movsl
fnsave
cmc
bound
stos
mov
rorb
sbb
mov
pop
mov
ds
and
aam
xor
stos
inc
std
mov
imul
xor
pushf
fdivs
rcrl
mov
lret
repnz
aas
mov
ljmp
inc
or
daa
aas
insl
or
orl
imul
pushf
push
popa
and
sbb
mov
addr16
inc
cmc
aad
pop
mov
mov
stc
sbb
je
adcb
mov
pop
scas
out
and
jnp
inc
ja
aam
mov
scas
ja
dec
or
mov
fs
mov
daa
jmp
xor
fdivs
rcll
pop
adc
xchg
add
and
in
mov
pop
and
ljmp
xchg
mov
or
or
cwtl
pminub
add
aas
push
pop
dec
nop
frstor
sub
imul
sub
das
inc
push
and
dec
stc
push
push
inc
or
inc
adc
mov
pop
mov
mov
stos
aaa
jns
mov
in
sbb
sbb
les
add
mov
inc
test
pushf
xchg
addr16
and
addr16
inc
test
dec
mov
jge
xor
imul
pushf
jae
je
mov
dec
or
in
hlt
popa
mov
inc
jg,pt
out
cmp
aam
or
and
lods
jp
outsl
xlat
mov
sub
pop
outsb
es
dec
sbb
scas
dec
sbb
negl
and
ret
dec
mov
cmpsl
mov
mov
in
and
push
vandps
fidivs
lods
fwait
xorl
int3
mov
xchg
mov
push
ss
add
cmp
and
fs
sbbb
icebp
insb
inc
mov
xchg
div
sub
xlat
lock
ret
mov
scas
mov
loop
mov
aas
pop
sbb
into
or
popl
divl
aas
hlt
scas
adc
dec
inc
sbb
aad
adc
or
pushw
and
or
sbb
insl
mov
jo
cmpsl
testl
adc
xor
stos
stos
jno
lahf
pop
jl
pop
mov
stos
cld
clc
push
adc
mov
mov
popa
stos
fiadds
cmp
or
adc
push
jnp
test
cmp
sbb
jp
mov
dec
clc
cmp
add
rcll
dec
call
jb
lock
cltd
push
out
inc
into
aas
sbb
adc
xchg
or
mov
dec
stc
mov
scas
cltd
ret
ss
sub
add
cmc
mov
or
mov
test
mov
test
lds
in
sub
testb
popl
aaa
fwait
std
pop
out
or
ss
and
push
jg
xchg
jle
sbb
out
sahf
pop
mov
push
adc
ret
stc
add
insl
cmc
arpl
arpl
shll
insb
push
push
jno
cmpsb
in
mov
repnz
pop
hlt
mov
mov
add
sbb
and
aam
dec
in
sbb
xor
add
and
xor
cmp
rcl
aad
dec
mov
jp
dec
pop
jno
or
movsl
jbe
pop
mov
jbe
dec
xchg
out
sbb
jmp
jnp
mov
fwait
inc
dec
pop
pushf
xor
mov
add
arpl
push
divb
and
jp
rolb
aad
mov
arpl
scas
shlb
pop
pop
call
in
jle
mov
mov
stos
nop
inc
movsb
in
test
in
ja
pop
mov
insb
iret
jmp
dec
pusha
fdivs
rorl
jmp
and
daa
orb
add
xor
adc
fidivrs
clc
push
movsl
out
jl
cmp
and
cltd
negb
ret
sbb
loopne
mov
inc
dec
jmp
pop
cmp
imul
cmpb
enter
pop
cmpsb
std
inc
adc
jo
or
sub
or
loope
popf
lret
dec
push
xor
or
fsts
xchg
popf
divb
xor
loope
stc
xlat
push
sbb
in
sbbl
cmp
cli
pushf
lds
flds
lods
sub
xor
dec
adc
dec
jno
imul
inc
mov
push
push
jge
jge
in
mov
call
jo
stc
loop
mov
shrb
repnz
in
movl
sub
and
push
repnz
mov
pop
gs
je
xchg
mov
and
ficoms
add
dec
insl
xor
cs
jno
popa
or
pop
leave
cmp
adc
outsl
cmp
dec
push
addb
loop
jae
mov
xchg
xchg
or
aas
push
cmc
jecxz
add
pcmpgtw
mov
clc
in
push
fwait
mov
jge
fs
jmp
stos
inc
inc
pop
negl
popa
dec
push
mov
outsl
inc
mov
mov
mov
push
scas
inc
push
sbb
add
jecxz
loop
jg
into
test
or
sub
push
lcall
mov
jo
sub
add
aad
or
dec
lods
inc
into
sti
jns
lret
dec
mov
jns
sub
in
inc
add
pop
jnp
test
inc
jmp
push
aad
sbb
adc
pop
or
inc
adc
jp
call
insb
mov
sbbb
cmp
sbb
or
cwtl
xor
and
jne
adc
add
outsb
cmc
xlat
lret
es
dec
or
outsl
pop
inc
xor
loope
mov
mov
into
sub
lea
jb
rcl
or
insb
jne
fbstp
cmovae
add
cmp
sbb
cs
ja
mov
pop
loope
sbb
jno
test
movsl
test
arpl
push
cmc
jo
mov
jns
ja
repnz
cmp
push
icebp
inc
fwait
push
mov
jmp
xchg
sbb
arpl
repnz
cli
icebp
inc
dec
int3
mov
into
xor
inc
mov
popa
ljmp
push
mov
dec
cwtl
inc
je
cwtl
bnd
add
dec
in
pop
inc
add
push
daa
insb
fwait
add
sub
mov
jl
xor
out
mov
imul
mov
push
pop
jecxz
and
arpl
test
or
stc
fiadds
jnp
daa
mov
sbbl
inc
mov
mov
subb
pop
mov
jno
mov
xor
xchg
fsubrp
clc
jle
aad
push
pop
lock
iret
cmp
sub
das
push
mov
test
cmp
cltd
arpl
adc
dec
jb
jle
and
loopne
adc
pusha
xor
test
shlb
adcb
and
push
popf
js
inc
and
clc
xchg
cmp
and
aad
bound
mov
jbe
mov
push
out
mov
daa
xchg
sbb
jl
dec
and
mov
dec
insl
pusha
mov
mov
sbb
dec
add
insb
cmp
fsubrl
cmp
or
repz
clc
adc
decl
mov
out
jmp
pusha
cwtl
cltd
inc
cmpsl
mov
lahf
pop
sbb
sbb
add
enter
jl
adc
xor
sub
cmp
cltd
inc
xor
insb
lock
dec
push
xor
xchg
xchg
jmp
repz
out
push
xor
inc
out
sbb
ret
add
push
dec
mov
jb
ljmp
mov
cwtl
xchg
leave
push
leave
test
test
adc
add
mov
or
adc
sub
leave
adc
cmpl
xor
cmp
or
xchg
push
loopne
inc
icebp
jb
rcrl
jmp
les
jl
aas
mov
popa
xlat
or
pop
jne
fsubl
or
xor
cmpsb
cs
movsb
push
sahf
add
adc
fs
pop
xchg
push
jp
sarl
jg
outsl
and
mov
insb
push
cmp
insb
hlt
mov
sbb
das
int
movsl
xchg
fldt
sahf
wrmsr
cmp
mov
dec
shl
sub
in
rcl
cli
add
idiv
nop
and
xor
orl
add
push
and
sub
sahf
mov
aad
movsl
push
call
and
mov
add
sub
inc
push
pop
cmc
insl
fwait
adc
mov
std
fistpl
pop
sub
pop
repz
mov
int3
cmp
js
add
es
jbe
push
xchg
int
gs
lea
and
sbb
lahf
add
outsl
lods
dec
and
pop
mov
dec
and
mov
jne
xchg
and
outsb
add
jg
hlt
repnz
lock
hlt
xor
jb
in
sbb
cmp
incl
pop
xor
jmp
pop
sbb
rcl
cmpxchg
pop
int3
inc
ss
or
push
xor
push
adc
mov
xchg
int3
add
loope
pop
scas
jb
mov
fmuls
sbb
xor
rclb
inc
inc
jecxz
ja
scas
mov
mov
sarl
xor
inc
cmp
jns
inc
mov
testb
cmpsl
incb
and
xchg
stos
pushf
lea
inc
inc
stos
xchg
lock
stc
sbb
push
js
cmp
loop
lret
jecxz
out
mov
pop
insl
sub
pop
jnp
pmovmskb
enter
cmp
fstpt
or
scas
pop
ret
sahf
add
call
mov
adc
scas
sub
inc
stos
cmp
pop
jl
mov
std
cs
cmpl
imul
jp
add
std
cmp
js
xor
clc
xorl
pop
int3
fidivrs
add
les
pop
xchg
push
repnz
fidivrs
xchg
hlt
jl
js
lret
push
jle
jae
adc
xchg
xchg
cmpsb
imul
cmp
sub
pop
cmp
lret
incb
shrb
pop
sarl
cltd
outsl
push
push
xchg
jnp
pop
push
push
mov
out
sbb
inc
mov
or
xlat
sub
add
and
aad
jae
psubw
movsb
ljmp
cmc
test
mov
cmp
pop
into
cli
cwtl
jle
rol
mov
or
out
adc
jno
das
jmp
cltd
push
ret
mov
jl
push
jnp
xchg
data16
cmp
ret
in
adc
lahf
jno
mov
dec
sbb
dec
stos
inc
mov
adc
insb
and
add
fdivrl
pop
mov
es
sub
pop
sbb
and
push
into
test
pop
cmp
jne
orb
pop
adc
xor
mov
vcvtsi2sdl
push
mov
ds
mov
lahf
and
push
cmpsl
sbb
pop
lea
cwtl
dec
jl
adc
mov
dec
clc
dec
aam
and
mov
sub
cmp
xchg
and
and
mov
stos
iret
int3
or
push
jo
inc
cmp
pop
xor
sbb
aas
and
mov
adc
idiv
pop
sbb
insl
jp
and
xor
pop
or
mov
xchg
out
fsubrl
push
and
mov
lret
aad
pop
sub
in
jmp
xchg
ret
punpcklbw
dec
fimuls
inc
popa
jp
add
xchg
sbb
add
xlat
jp
and
stos
fisttpll
mov
jle
imul
popf
repnz
loopne
mov
je
mov
add
insb
loopne
push
les
xor
pop
pushf
adc
push
scas
push
push
and
sub
pop
fmul
addr16
roll
mov
push
nop
push
mov
mov
sub
icebp
cmp
dec
cmp
imul
add
dec
and
inc
xor
int
cwtl
xor
xchg
mov
mov
mov
jno
mov
test
xor
loop
stos
add
sbb
and
jns
dec
fistpll
in
enter
inc
sbbb
inc
mov
push
les
mov
xchg
cmc
fiadds
mov
inc
aaa
dec
aad
or
and
pusha
dec
sbb
lret
cltd
cld
xchg
int3
add
shll
sub
popf
jecxz
jne
es
inc
cmp
imulb
stos
jg
mov
es
aam
mov
and
daa
xor
add
push
pop
pop
pop
xor
jle
jnp
shl
sarb
and
pop
or
cmp
stos
das
clc
movsl
inc
push
pop
test
mov
dec
sbb
xchg
cmp
int3
in
stc
ja
jnp
xchg
lret
and
xor
mov
cmp
in
lds
sub
pop
pusha
aad
pop
sub
std
xlat
jle
sbb
mov
mov
xchg
cmp
jmp
mov
mov
jo
or
or
inc
cli
ret
aas
sub
cld
cs
push
es
add
push
pop
dec
push
into
inc
inc
mov
daa
add
fists
cwtl
mov
pop
push
add
pop
popf
inc
push
es
in
or
push
xchg
push
dec
xchg
and
pop
daa
mov
cmc
push
popa
sub
ds
dec
push
cltd
mov
test
and
sahf
push
mov
add
mov
or
test
loope
fisttps
and
leave
sub
dec
cmc
adc
clc
cmpsl
xchg
inc
or
or
pop
sbb
ja
ret
add
pusha
sbb
push
jns
popl
fnstcw
sbb
and
and
out
jo
mov
into
test
jp
mov
or
push
mov
in
push
inc
in
call
addr16
jecxz
fistpll
dec
add
dec
in
cltd
push
scas
loope
repnz
sub
fwait
sub
test
cmp
faddl
jle
addr16
mov
into
test
ss
rcl
cmc
daa
push
xchg
pop
sub
jmp
popf
repnz
and
loope
mov
or
mov
sbb
outsl
das
das
ja
sub
inc
lahf
jne
mov
xchg
pop
mov
leave
jae
icebp
mov
out
sub
shl
jmp
cld
mov
fs
aaa
xchg
or
mov
cmpsb
rorb
jne
sbb
aas
add
call
mov
sub
jecxz
int
and
cld
roll
pop
sti
enter
adc
sar
push
icebp
mov
dec
or
inc
insl
inc
test
sub
dec
shrl
pop
jl
or
inc
jmp
mov
lcall
push
in
xchg
std
sti
inc
sub
mov
stos
faddl
mov
fwait
push
call
aam
test
mov
or
add
clc
ret
pop
pop
les
jno
movsl
ss
inc
ss
cld
outsl
inc
in
dec
and
push
and
fmulp
lods
mov
in
push
mov
imul
inc
mov
add
or
popf
addr16
xchg
mov
lock
lock
dec
inc
and
jbe
or
add
outsb
xor
addb
add
push
jl
mov
mov
sbb
xor
xor
cmp
sarl
iret
sub
xchg
insl
imul
stos
movsb
ss
inc
push
scas
cwtl
lahf
add
sbb
pop
and
dec
xchg
mov
scas
movsb
ja
sub
push
stos
hlt
insb
sub
jns
cltd
jl
faddl
xchg
cmc
pop
xor
sarl
push
ret
popa
pop
and
cmp
cmp
aaa
roll
sbb
test
mov
push
add
test
mov
insb
adc
xchg
fs
mov
inc
push
dec
push
sahf
push
lret
inc
cmp
dec
daa
inc
rcrl
sbb
add
bound
inc
push
and
push
jns
cmpsl
jecxz
push
in
hlt
adc
inc
pop
lcall
arpl
xor
mov
fstps
lcall
sub
addl
jecxz
lret
xchg
jbe
lods
jg
cmp
jnp
mov
xchg
cwtl
ja
pop
lock
mov
adc
mov
pop
sub
adcl
test
arpl
ficomps
adc
fmul
sub
jo
and
xor
mov
mov
dec
sbb
xlat
stc
mov
out
sub
and
ret
insb
jo
mov
xchg
inc
cmp
jl
scas
rorb
ja
cmp
rcl
inc
leave
and
aaa
inc
mov
mov
push
cmp
push
cld
add
cli
mov
xchg
fcmovu
mov
mov
and
xchg
scas
cmp
ds
fcmovnb
ss
clc
jae
mov
mov
aam
movsb
or
pop
cli
repz
sub
test
mov
or
push
xchg
mov
lret
outsb
cwtl
and
sub
mov
fildll
mov
push
jo
mov
cltd
clc
xchg
ljmp
xchg
movl
aaa
adc
pop
sbb
dec
aad
in
inc
movsb
sbb
into
inc
outsl
call
aam
insb
roll
mov
mov
insb
repnz
inc
xchg
jo
or
in
mov
nop
or
enter
fdivrs
or
andl
dec
out
ljmp
roll
jo
in
aad
xlat
bound
lds
shll
inc
mov
ds
imul
lcall
dec
es
sbb
adc
mov
push
adc
and
cmp
popa
sbb
xchg
aas
test
stos
rcr
adc
pop
or
push
jno
mov
add
and
pop
mov
lods
rol
sarl
test
adc
icebp
mov
test
test
inc
and
xor
movsb
ret
fistpll
mov
test
jo
sti
rorb
mov
cwtl
add
sbb
mov
lods
sbb
jecxz
int3
movsb
dec
loope
and
int
cmp
sbb
andb
mov
clc
loopne
jne
dec
jle
leave
into
daa
sbb
jnp
les
mov
in
sbb
arpl
inc
xchg
aas
sub
out
xchg
add
cmpb
rorb
push
mov
add
add
loope,pn
pop
outsb
sub
test
and
scas
loop
popf
bound
lret
imul
aam
cmp
and
sti
and
add
roll
cmp
sbb
repz
dec
sbb
stos
sub
push
aad
scas
push
lcall
scas
or
nop
xor
pop
ret
add
scas
hlt
mov
push
xor
push
jae,pn
adc
xor
scas
inc
jae
inc
fcompl
adc
pushf
jne
inc
push
mov
fdiv
stc
sbb
push
outsb
fcmovu
in
daa
daa
and
sti
inc
mov
stos
push
addr16
pop
loopne
inc
ret
push
pop
push
fwait
dec
or
mov
xor
or
fbstp
scas
and
test
add
pushf
adc
out
lods
in
push
add
push
or
xchg
fs
insb
mov
sbb
stos
pop
shll
cmp
ret
xchg
shr
daa
pop
cmpsl
cltd
repz
clc
or
stc
out
jo
adc
rcl
cmp
dec
and
pop
adc
add
push
pop
jle
icebp
inc
jp
les
jl
insb
inc
loope
add
fcompl
jl
push
mov
push
cmp
imul
in
mov
jg
push
push
loope
adc
mov
add
xor
lea
adc
inc
popf
insb
jae
xchg
mov
outsb
mov
dec
push
das
cmpsl
cmpb
add
add
cmovp
and
and
pop
push
popa
mov
adc
lahf
sti
pop
ror
bound
add
popf
test
imul
pushf
push
add
movsb
dec
jecxz
xor
inc
adc
sbb
xor
dec
and
mov
inc
cwtl
pop
popa
dec
jbe
int
xchg
inc
adc
movsl
inc
pop
push
mov
popf
adc
lcall
adc
inc
mov
adc
sarl
lea
dec
mov
aam
and
jnp
stc
aaa
mov
jne
adc
sub
fisttpll
in
xor
inc
popf
std
enter
push
sbb
mov
adc
cmp
add
xchg
mov
out
icebp
lods
sub
dec
mov
xchg
jp
clc
js
sbb
mov
dec
inc
bound
cmpsb
ljmp
xor
add
or
add
jg
cmc
jae
xchg
mov
xchg
and
cmp
scas
js
loope
icebp
jo
test
rorl
xchg
jne
cli
pop
and
popf
xchg
insl
push
arpl
imul
mov
int3
dec
inc
adc
shl
loope
mov
sbb
push
hlt
push
push
movsl
mov
rcl
lds
sub
pushf
inc
jb
out
mov
sub
sub
and
in
popa
mov
aad
mul
movsb
adc
call
push
adc
std
neg
js
dec
push
and
jle
jne
jb
mov
hlt
push
add
addr16
decb
das
mov
jno
inc
pop
jns
jnp
sub
and
push
and
test
inc
push
mov
fsubrs
adc
inc
jmp
mov
ljmp
lret
adc
fbstp
and
add
sahf
mov
dec
cld
inc
cmp
jns
push
jmp
inc
xchg
mov
mov
pop
xorb
add
test
loopne
fimuls
mov
rcll
xchg
push
or
mov
mov
sbb
lock
inc
inc
ljmp
movsl
adc
test
mov
add
mov
dec
fstps
cmc
mov
sahf
in
jne
push
push
and
push
data16
push
scas
loopne
sub
and
inc
mov
xor
imul
push
out
sub
daa
rorl
adc
pop
jmp
inc
inc
test
ja
mov
repz
jns
stc
scas
les
rcll
sub
xor
loopne
js
jae
out
cld
xlat
adc
js
inc
into
jbe
push
scas
push
call
outsl
sbb
std
icebp
insb
repnz
mov
jge
add
mov
pushf
xchg
mov
mov
xchg
out
add
clc
or
cmp
je
inc
pop
pop
and
in
inc
rolb
and
sbb
lahf
sub
sbb
int
popa
pop
cwtl
mov
ljmp
sar
les
or
and
or
push
mov
pop
mov
mov
repz
sub
shrb
test
jp
pop
add
xor
sti
rcrl
xchg
scas
mov
dec
das
dec
mov
not
push
inc
dec
adc
add
mov
test
cli
push
mov
sub
addb
sbb
and
es
sub
fwait
jp
xor
inc
lods
lret
mov
pop
cli
fcmovu
xchg
mov
push
pop
mov
adc
setb
push
lahf
lds
jecxz
fidivrs
inc
xchg
push
icebp
mov
jns
jns
cs
pop
pop
push
jbe
adc
xor
subl
idiv
lahf
stc
pop
push
sbb
mov
push
pushf
ds
div
sub
in
into
jne
or
pop
out
inc
fadds
test
dec
cs
adc
jge
cmp
in
inc
xor
outsl
or
sub
cmc
sahf
loope
jbe
or
inc
cmpsl
mov
sbb
lahf
pop
popa
scas
and
cs
adc
test
mov
in
je
imul
xchg
mov
test
push
push
jmp
hlt
cwtl
dec
xchg
mov
dec
xchg
adc
ret
push
dec
jnp
mov
dec
and
and
jl
fs
push
xchg
sbb
sbb
pop
mov
fld
mov
lods
aaa
pop
lds
add
adc
adc
xorb
cmpsl
fstpt
jp
dec
mov
push
inc
into
pop
sub
xor
popf
les
enter
movsb
mov
stos
in
xor
xlat
xchg
movsl
cwtl
aaa
xchg
jnp
jecxz
sub
xlat
in
xor
mov
pop
xchg
add
repz
roll
movsl
lcall
arpl
or
adc
cli
imul
mov
pop
or
mov
out
hlt
sub
es
pop
and
dec
inc
xor
jg
xchg
cmp
sti
les
insb
or
mov
scas
inc
test
aam
sub
lret
adc
jns
fstl
js
mov
cwtl
cltd
mov
inc
imul
cli
loope
mov
inc
mov
aaa
jl
or
jno
mov
and
adc
push
fcompl
insb
push
repnz
cltd
insb
call
xor
addr16
cmp
ss
clc
xlat
pop
push
push
shlb
push
xchg
out
inc
and
mov
mov
sbb
imul
imul
shll
jmp
pop
fsubrl
xchg
push
add
scas
cwtl
scas
outsl
in
or
out
or
push
jmp
cs
add
or
lds
sub
adc
cltd
movsl
popf
sbb
mov
jecxz
cmc
xchg
aas
repz
mov
fcmovnb
xor
sbb
cmp
ret
pop
jmp
cs
push
jbe
xor
out
cmp
enter
aas
ja
fs
fdivrl
and
cmp
push
sbb
sarb
push
sub
insl
adc
cmp
and
jns
push
fstps
movb
pop
dec
pop
sbb
fcompl
push
mov
mov
sbb
jg
bswap
push
shll
lock
xchg
pop
ljmp
pop
aam
xlat
ljmp
pusha
loop
sub
xlat
add
pop
inc
cmp
negl
adc
dec
xchg
push
cmp
int3
mov
cmc
aad
rolb
loope
dec
mov
or
or
stos
cld
cmpsl
adc
inc
stos
aam
test
aam
or
orl
mov
out
dec
sbb
push
js
adc
cs
pop
popa
call
jbe
shlb
sub
mov
xor
add
lds
ljmp
adc
insb
xor
inc
insl
movsl
fldenv
mov
aad
dec
and
icebp
das
sub
mov
adcl
add
into
inc
fbld
cmpsb
or
pushf
pop
lock
loopne
pop
in
xchg
inc
add
pushf
and
or
jb
sbb
mov
into
or
add
sti
mov
adc
ja
lret
jg
insl
mov
stc
xchg
adc
fwait
into
cmc
ud2
sahf
repz
mov
inc
aam
sub
mov
and
les
scas
call
pusha
aaa
scas
lods
xor
mov
rorb
je
mov
mov
sub
and
cltd
incb
mov
pop
push
movb
adc
imul
adc
test
push
mov
push
loope
enter
dec
and
push
mov
fs
insb
or
and
into
pop
enter
lods
add
mov
jp
lea
xor
adc
add
cmp
adc
adc
adc
adc
jecxz
push
pop
jo
stc
loop
ror
and
add
push
cld
pop
les
adc
in
jne
sbb
loope
mov
pushf
cmp
stos
jo
out
data16
mov
inc
jg
aaa
ja
jnp
ret
sahf
jmp
pop
mov
fisttpll
out
add
dec
mov
scas
pop
mov
pop
dec
mov
and
jne
push
mov
cli
and
push
sub
or
sbb
jmp
mov
aaa
jmp
imul
add
lret
mov
cmp
sahf
adc
xchg
push
inc
mov
dec
popf
subb
icebp
dec
cmp
in
mov
or
scas
mov
adc
jmp
cwtl
out
fcoml
inc
and
inc
dec
fwait
ret
push
outsb
aas
lea
arpl
adc
adcl
stc
cmp
sub
test
sub
addr16
mov
and
pop
or
aad
mov
dec
aaa
adc
adc
mov
sbb
cmp
sahf
and
inc
xor
mov
je
push
sbbl
and
add
and
loop
add
sub
out
mov
test
jmp
or
ficompl
je
mov
icebp
jnp
push
and
test
cmp
jge
fisubrs
inc
adc
or
cmp
movsb
xor
jae
add
sbb
mov
test
fcompl
mov
pop
or
test
push
push
xchg
add
movsb
inc
push
mov
sahf
xor
rdpmc
dec
adc
insb
stc
pop
pusha
push
add
push
or
xchg
fstpt
jle
adc
ss
ret
sbb
pop
lret
mov
dec
jl
jmp
mov
clc
or
inc
loop
push
sbb
pop
jno
mov
rclb
pusha
and
pop
out
sbb
leave
cmp
add
adc
clc
cltd
aad
hlt
cs
xor
push
add
pop
and
rcrl
pop
xlat
out
sbb
cs
outsb
int3
cs
pop
pop
fisttps
les
and
mov
aam
aad
mov
sbb
jl
xchg
mov
jp
insl
cmpsb
jge
xchg
add
or
inc
mov
fsubrs
mov
xchg
je
in
or
pop
xchg
mov
mov
pop
loope
scas
xchg
jle
and
imul
xchg
mov
xchg
pop
sub
push
mov
mov
inc
mov
shrl
dec
and
mov
cmp
clc
mov
bound
cmpsl
mov
lods
add
fmull
jno
sub
sbb
outsb
mov
sbb
xchg
mov
data16
add
ret
sbb
push
mov
sub
jl
lret
add
inc
cmp
fwait
dec
cli
loope
jl
aas
push
sbb
les
or
and
dec
jmp
loop
jbe
test
or
roll
cld
pop
add
adcl
sbb
fdivrl
into
and
fst
repnz
lahf
lahf
push
pop
inc
mov
mov
in
sbb
or
pop
xchg
jge
jge
ja
rcrl
mov
fdivs
repz
les
test
adc
or
rorl
and
pop
cmpl
or
jmp
or
mov
and
shlb
add
or
sahf
inc
fisttpll
stc
dec
mov
xor
frstor
mov
add
inc
pusha
insb
adc
pop
repnz
jmp
mov
mov
jne
daa
test
arpl
cmpsb
pushf
mov
xor
dec
inc
mov
lock
les
lock
and
lods
mov
and
scas
or
jle
add
mov
mov
imul
dec
mov
xchg
mov
adc
dec
icebp
add
inc
repz
inc
xchg
jno
adc
xorl
add
mov
mov
int
jmp
testl
xchg
mov
stc
lret
popl
jmp
or
mov
inc
xlat
fmul
pop
into
in
or
push
mov
inc
adc
shll
inc
loope
je
shll
xchg
in
mov
stc
imulb
dec
nop
jl
inc
sub
out
sbb
mov
stos
inc
mov
out
out
mov
jmp
fnsave
loope
ja
mov
lcall
xchg
push
or
dec
imul
mov
insl
add
leave
arpl
add
adc
ss
repz
dec
sub
adc
and
lahf
test
mov
push
repnz
sub
add
call
outsl
jmp
lods
push
mov
jp
jp
dec
aam
add
fldt
cmp
cmp
pushf
add
xlat
sbb
popf
stos
or
jno
or
sub
sub
popa
mov
lcall
insl
ljmp
hlt
cmp
pop
and
cmp
cs
movsl
std
sub
mov
sub
loope
mov
cwtl
inc
fstpt
lea
push
enter
dec
cmp
push
or
inc
scas
loope
adc
adc
pop
lret
or
and
jns
stos
ja
mov
and
mov
cwtl
les
dec
add
lods
push
outsb
or
cmp
xlat
jg
mov
das
inc
nop
inc
or
popa
sub
cmc
mov
xchg
std
pop
inc
pop
int
or
and
mov
cmp
xor
mov
xchg
mov
or
rclb
insb
sub
sub
mov
das
inc
pop
cmpl
in
mov
jns
stos
pushf
gs
push
loope
int
add
push
dec
mov
ljmp
les
ret
addb
jbe
sub
mov
addr16
js
into
testl
sarl
cld
jg
cwtl
mov
mov
les
stos
cmpsb
es
aad
mov
add
mov
out
adc
fwait
or
sbb
mov
adc
xlat
ss
imul
mov
std
push
ss
mov
icebp
rcrl
cmp
xlat
outsb
jnp
sbb
lahf
push
icebp
cmp
push
add
mov
inc
fnstcw
in
std
mov
cmpsl
lock
inc
mov
loope
lds
test
cltd
enter
and
clc
aad
adc
and
repnz
cli
xor
clc
add
xor
aaa
lds
ret
mov
jg
call
mov
push
push
addr16
push
mov
int3
mov
rcrl
push
in
adc
fidivrs
ret
mulb
adc
mov
jl
jmp
in
outsb
into
xlat
loope
push
enter
in
jmp
imul
dec
xor
inc
pop
aam
ds
scas
popa
in
into
movsb
aaa
jp
ljmp
mov
data16
shll
xor
push
aaa
fs
sub
add
and
inc
mov
inc
jb
push
mov
repnz
mov
and
jb
cltd
jne
icebp
jnp
test
sti
sarl
mov
push
sbb
xor
sarl
cmp
xlat
push
fmull
and
sbb
lret
jmp
stos
pop
sbb
pop
jbe
mov
xor
shlb
and
mov
mov
stos
and
sbb
push
xor
clc
divb
add
pusha
cs
ljmp
lock
in
add
ds
ret
bsr
negl
lcall
repz
outsl
jecxz
xor
mov
xchg
add
jns
movsb
fcmovu
xor
rolb
mov
mov
adc
jno
mov
and
mov
out
jmp
sbb
push
mov
enter
cmc
jne
or
loopne
sub
mov
xchg
fdivs
decl
insb
movsl
scas
pop
adc
push
jmp
shll
int3
sub
loope
xchg
insl
stos
dec
fs
daa
test
dec
lcall
ljmp
pop
xor
decb
loopne,pn
xorb
adc
push
movb
outsl
dec
and
pop
idivl
cmp
and
and
mov
adc
inc
jg
adc
imul
ja
ret
out
push
xchg
add
pop
dec
pop
aam
and
lods
and
xchg
cwtl
mov
jmp
aad
lods
fidivl
out
inc
pop
push
jno
scas
repz
movl
jecxz
adc
stc
mov
cmp
in
sbb
inc
xor
mov
push
dec
add
mov
mov
and
shrb
jle
pop
pop
sbb
test
xor
or
stos
push
outsl
adc
push
inc
ljmp
pop
jg
ret
xor
and
xor
sub
cwtl
outsb
mov
xchg
fadds
xchg
push
xlat
adc
xchg
cmp
push
sbb
fstpt
inc
inc
in
stos
cmp
mov
lret
pop
popa
test
mov
dec
push
in
dec
adc
je
and
sbb
pop
lds
or
imul
cld
insl
sbb
sub
mov
push
cmp
sahf
mov
mov
xchg
shlb
sbb
pop
pop
adc
pop
jecxz
lahf
scas
mov
lcall
scas
mov
cli
jb
movsb
jns
insb
aas
dec
sub
out
dec
outsl
scas
sub
pop
into
pop
xchg
lret
pop
push
movsl
pushf
cmp
fnsave
nop
pop
js
push
pop
xchg
push
lods
rcl
jbe
shll
xchg
pop
out
mov
mov
and
insb
inc
mov
push
jg
sbb
xor
jo
pusha
loopne
mov
and
lahf
inc
sahf
mov
dec
insl
jno
sub
fs
push
pop
insb
jle
test
push
mov
adc
push
loop
mov
daa
fimull
xchg
cwtl
scas
imulb
daa
sti
inc
into
icebp
pop
in
mov
dec
bound
inc
jo
aas
aad
hlt
cmpl
jle
xor
inc
jge
aam
push
clc
adc
lcall
jb
sbb
pop
in
loopne
mov
mov
pop
mov
mov
mov
inc
or
push
aam
pop
cmc
mov
insb
dec
push
add
add
test
inc
aad
in
lock
sbb
inc
mov
fisubs
andl
push
mov
in
mov
outsb
push
enter
mov
add
inc
push
test
iret
sub
inc
rcrl
pop
mov
push
and
add
mov
sub
cmpsl
repz
xchg
and
leave
sbb
out
enter
jno
sub
insb
popf
fisttps
lahf
jl
ja
iret
mov
out
dec
and
xchg
adc
iret
cmp
outsb
and
sub
sub
in
xor
mov
inc
sbb
repnz
add
out
aas
inc
jo
aam
aad
ret
sbb
pop
push
daa
mov
cmp
imul
sbb
loopne
and
push
mov
inc
sub
push
fwait
outsl
pop
lds
push
or
ret
sub
daa
jno
mov
mov
push
stc
mov
pop
adc
xor
or
or
jnp
clc
rol
rcrl
fcompl
cmp
or
pop
aad
add
dec
imul
add
xorb
pusha
mov
adc
xor
hlt
sahf
lret
addb
lods
xor
incl
jmp
fdivp
sbb
pop
and
push
enter
xchg
and
sub
call
or
bound
cmpsb
xchg
aam
push
popa
xchg
popf
into
scas
jg
inc
push
xchg
cmp
imul
lahf
add
pop
push
int
lcall
sub
jmp
and
pop
adc
jae
jae
xor
jecxz
dec
add
jns
loopne
pop
aaa
cmp
les
in
sti
aad
adc
jmp
fdivl
scas
mov
stos
push
and
movsl
daa
push
ljmp
push
lock
popa
add
dec
pushf
inc
gs
clc
idivb
sbb
pop
or
adc
cs
leave
push
add
jg
jp
xchg
dec
pop
shrl
inc
xchg
insl
lods
loop
mov
inc
jecxz
sbb
mov
int3
incl
insb
out
xchg
xchg
cmp
lcall
dec
inc
jne
push
push
mov
test
sub
inc
inc
fstpt
mov
fiadds
ret
in
std
add
xor
cmp
xor
add
fnstsw
sub
push
mov
add
push
dec
mov
jg
push
push
mov
idivb
loope
mov
cld
stc
pop
inc
jecxz
inc
sbb
sbb
aaa
add
cmp
imul
lret
mov
xchg
lods
in
jne
mov
movsb
xor
or
insl
xor
mov
cmc
popa
mov
jb
inc
pop
pop
sbb
es
insl
insb
leave
movsb
mov
lret
leavew
pop
mov
pop
test
inc
ret
add
push
and
or
jne
dec
pop
pop
arpl
stos
pop
cli
cmp
int
inc
push
dec
int3
pop
adc
subl
push
push
mov
push
fidivrs
cmp
jns
popf
aam
cmp
jmp
cmp
jecxz
jne
call
fdivs
lret
enter
add
xchg
std
fucomp
or
mov
repz
lcall
orb
ds
push
insb
int3
inc
adcb
hlt
sbb
xchg
add
aad
mov
mov
arpl
lds
scas
sahf
and
clc
adc
xchg
in
pop
popf
pop
xor
push
jae
xchg
dec
pop
adc
add
lea
dec
and
in
lods
inc
push
cmp
mov
rcll
pop
enter
sub
dec
pop
sub
scas
adc
loope
mov
ss
jg
shl
cmp
sub
inc
dec
mov
stc
into
shrb
fimuls
mov
inc
inc
cmp
adc
adc
mov
mov
and
mov
sahf
pop
xchg
into
adc
popa
insl
mov
outsb
adc
mov
pop
out
mov
add
pop
and
dec
add
aaa
add
inc
in
dec
mov
mov
sbb
and
repnz
out
dec
adc
xchg
jg
add
push
lahf
cli
push
cmp
mov
in
aam
jnp
insb
clc
bound
aaa
cmp
lock
das
pop
cmp
stos
adc
repz
cmp
loopne
mov
push
rolb
mov
or
lea
pop
in
imul
jl,pt
bound
jmp
dec
pop
jae
mov
add
pop
mov
subb
and
cmp
mov
notl
mov
decb
add
shll
pop
cs
mov
mov
mov
inc
mov
aam
pop
in
dec
mov
xor
fnstsw
das
loop
inc
dec
and
sub
adc
loope
aad
jmp
leave
jnp
cmp
cwtl
jp
add
dec
mov
in
and
jmp
jbe
push
sbb
add
xchg
add
enter
sub
xchg
scas
jge
cmc
ret
and
sub
icebp
mov
test
pop
or
sahf
int3
outsl
sbb
mov
stc
push
xor
lcall
fstpl
jns
outsl
adc
setg
insb
mov
pop
cmp
daa
mov
pushf
adc
fwait
jne
sub
mov
in
mov
add
scas
leave
mov
int3
sub
fwait
push
mov
int
scas
add
andl
mov
push
das
inc
repz
dec
mov
cmpsl
inc
add
dec
mov
inc
fwait
ss
popl
popl
jns
pop
mov
push
sub
or
sahf
gs
push
lret
jmp
ja
xor
adc
es
adc
dec
js
sbb
ret
or
cltd
sbb
jecxz
sub
inc
lret
lcall
add
jb
sub
loopne
and
or
bound
ror
cwtl
jae
cld
xor
xor
out
dec
jnp
cmpsl
nop
subb
call
repnz
mov
mov
mov
mov
aam
test
ja
cmp
es
cmp
dec
ret
xlat
aaa
out
sub
cmp
inc
stc
loope
mov
leave
sbb
xor
pop
loopne
es
mov
lods
jp
xchg
cmpb
je
jecxz
and
add
test
push
js
mov
dec
fdivl
xor
and
or
flds
ss
sarb
lock
dec
out
sbb
add
repnz
cli
add
or
sbb
sbb
andb
mov
push
cli
test
inc
xchg
sbb
sbb
pushf
loopne
mov
clc
inc
shll
sbb
mov
pop
cmp
icebp
shrl
inc
mov
push
int
cmpsl
repz
fdivrs
sub
inc
nop
pop
push
mov
fdivrl
push
jecxz
shlb
jno
inc
or
addr16
xor
je
jnp
dec
jp
add
lahf
push
xor
test
cmc
stos
sbb
daa
mov
adc
adc
in
cs
xor
inc
dec
imull
test
iret
mov
dec
adcb
movsb
imul
mov
inc
or
sahf
test
enter
in
xorl
shlb
dec
or
dec
mov
in
pop
mov
out
js
cmp
inc
push
ja
mov
fdiv
lcall
mov
xchg
loop
sub
shrl
jns
popl
cs
xchg
pop
sub
inc
test
outsl
enter
arpl
repz
rolb
jecxz
mov
enter
push
fidivrl
lcall
push
add
cmp
or
inc
inc
inc
jl
insb
mov
add
stc
sbb
xor
mov
adc
bound
insl
inc
hlt
es
jne
mov
lahf
inc
test
mov
add
aas
popf
daa
jne
int3
add
loope
mov
aas
mov
lods
xchg
mul
push
or
cmp
insl
sbb
adc
aad
add
mov
sub
push
negb
fadds
das
push
sahf
add
xor
into
insb
push
xchg
add
xchg
aad
xlat
sub
xchg
ffree
insb
pop
fsubrl
sbb
cli
sbb
cld
or
mov
push
and
mov
clc
mov
dec
adc
sbb
add
incl
imul
xor
cmp
cmp
pop
add
sbb
or
in
cmp
scas
pop
cwtl
xlat
mov
loopne
adcl
fldl
std
dec
add
cmp
in
and
stos
enter
and
int3
mov
test
jae
fadd
les
int
xlat
mov
addb
add
add
stos
les
adc
ja
xchg
mov
fdiv
pushf
aas
and
sub
pop
dec
test
pop
inc
pop
call
add
push
xchg
cmp
mov
dec
aad
into
out
mov
orl
pusha
add
cmpsl
sub
jge
pop
daa
in
test
adc
fcom
jl
jnp
int
or
jmp
push
aas
testb
ficompl
pushf
lds
dec
jnp
int
test
and
xchg
into
gs
leave
in
push
enter
scas
xor
loopne
push
iret
jp
pop
in
or
mov
fs
xor
mov
mov
and
lahf
js
mov
push
sti
cs
or
add
insl
mov
clc
mov
mov
fucomp
mov
cs
dec
mov
jo
add
xor
in
adc
and
lret
ret
lahf
mov
xchg
push
out
sub
repnz
mov
ds
lcall
sahf
cmpsb
pop
shl
ja
insb
stc
push
lods
sub
jp
imul
int3
cmpsb
fdivrs
push
insl
inc
inc
jmp
adc
inc
cmpsl
pop
and
mov
jge
cmp
xlat
xor
and
test
mov
aad
in
and
jae,pt
dec
popf
aaa
sub
and
add
orb
mov
je
aad
sub
lods
xor
or
pop
pop
cmp
fcoml
or
sbb
mov
lock
ret
stos
xor
clc
icebp
aam
dec
ret
mov
pop
sub
lahf
cmc
sahf
inc
push
jno
bound
imul
int3
rorl
or
fs
or
daa
pop
pop
sub
stos
pop
mov
int
and
jg
repz
xchg
call
adc
and
outsl
dec
sbbb
dec
or
inc
scas
add
arpl
sahf
or
push
push
and
sub
xlat
or
imul
rcrb
aaa
push
cmpsb
jp
pop
adc
dec
cmpsb
daa
fnsave
cmp
fstp
pop
xchg
into
adc
dec
xorb
mov
or
inc
fnstcw
es
cmp
and
sub
pop
pop
lahf
in
js
pop
icebp
mov
add
xchg
test
adc
add
sub
call
and
fs
xor
movsb
cmp
stc
and
pop
adc
jns
push
jns
mov
aaa
stos
and
pop
push
jo
inc
jg
push
das
add
push
cmp
out
pop
mov
xchg
cmc
popf
add
int3
pop
mov
int3
loope
mov
push
add
jg
jno
fwait
imul
mov
cmp
add
data16
sub
add
movsl
mov
rolb
mov
out
mov
dec
pop
jp
push
sbb
mov
lcall
mov
rorl
and
dec
sbb
dec
mov
test
adc
dec
lret
dec
mov
mov
jp
mov
loope
xor
and
movd
and
adc
adc
dec
pop
push
fisubrs
pushf
cmp
mov
xor
xchg
jno
adc
stos
cs
sub
mov
jae
sbb
mov
dec
cmp
and
dec
and
js
filds
jnp
in
nop
insb
mov
xchg
inc
ds
jno
inc
icebp
push
faddl
sbb
ret
repz
into
or
xor
sub
xchg
jecxz
mov
jecxz,pn
pop
vcompresspd
repnz
mov
jne
jg
add
clc
sahf
pop
movsb
inc
mov
mulb
xchg
and
add
pop
sti
and
pop
or
data16
mov
push
xchg
pop
cld
in
pop
inc
inc
mov
orb
enter
ffreep
xlat
popf
andnps
pop
in
xchg
cmpsl
xchg
scas
ja
and
jecxz
out
mov
cmp
xchg
popa
mov
mov
je
add
sbb
inc
fisubs
rcr
outsb
dec
outsl
xor
nop
push
jns
lods
jno
mov
outsl
cmp
mov
stos
xor
xchg
jecxz
inc
repnz
fisubl
and
xchg
push
hlt
mov
push
adc
mov
lods
push
pop
lahf
xchg
or
aam
lahf
mov
dec
xchg
mov
fistpll
adc
cmp
lds
push
fidivs
push
daa
dec
cmc
jmp
mov
dec
jo
cld
mov
aam
popf
sahf
push
adc
cmp
sti
es
cwtl
lahf
out
push
dec
push
add
popf
loope
pop
scas
mov
dec
inc
add
cmp
cmp
shrl
lock
add
mov
inc
sbb
inc
pop
pop
xchg
in
pop
mov
or
pop
insb
jmp
cwtl
repnz
inc
sahf
inc
imul
int
jmp
lret
push
lods
adc
lock
jae
or
push
mov
add
xor
mov
dec
jns
push
jp
dec
stc
scas
adc
ja
mov
out
sbb
xchg
scas
dec
loop
ds
stos
push
lahf
orl
inc
pop
sub
movsl
notb
and
sbb
mov
mov
bound
sub
test
mov
cmp
enter
loope
cmp
push
pop
dec
std
rclb
mov
and
mov
fnstenv
jno
push
mov
int3
lock
jl
popa
mov
and
fmull
add
scas
dec
loope
nop
insb
add
cltd
cmp
inc
dec
mov
mov
push
loope
jmp
and
in
call
mov
push
jl
push
pop
daa
addr16
or
xor
sub
sarb
dec
push
xchg
jns
inc
rorl
add
in
sbb
pop
pop
js
inc
movsl
pop
gs
dec
add
fcomps
and
pop
fstpl
popf
aas
cmp
les
mov
dec
loope
imul
and
inc
std
jne
stc
es
sbb
xor
insb
xor
sub
mov
sub
inc
jns
in
rorl
pop
mov
mov
pop
push
pop
push
lret
jbe
insb
in
ficoml
dec
leave
push
pop
sbb
xor
movsb
loopne
scas
in
loope
into
out
cmp
jle
and
mov
jp
rclb
not
enter
mov
or
mov
cmp
icebp
inc
aad
and
inc
push
fdivl
addr16
lds
inc
loope
and
sbb
jl
jbe
lret
push
lcall
and
dec
xor
pusha
push
and
aad
inc
jb
mov
fldt
add
repz
int3
dec
scas
mov
cmp
push
cld
pop
cwtl
push
or
xor
fiaddl
insb
push
mov
or
enter
sub
orb
ret
cmc
cmp
sahf
icebp
inc
rep
add
mov
arpl
add
pop
lds
js
jns
shrb
jge
cmp
sbb
jne
push
lods
inc
fcoms
add
xchg
push
sahf
and
pop
nop
ret
inc
xlat
mov
outsb
jnp
adc
insl
or
ds
je
add
stos
test
ficoml
fadds
push
popf
je
arpl
cmc
stos
inc
xor
push
daa
ja
add
push
and
mov
mov
popa
adc
xlat
stc
cmp
jno
jp
mov
inc
pop
jge
pusha
scas
adc
les
or
gs
fadds
dec
or
mov
out
test
insb
add
and
lret
add
mov
dec
dec
pop
inc
pusha
jo
mov
ds
aam
mov
outsb
add
dec
inc
and
addr16
loop
pop
pop
movsl
adc
xor
jmp
test
scas
fbstp
sahf
inc
data16
leave
push
or
and
movsl
push
jnp
nop
adc
inc
sub
into
jle
mov
testb
jecxz
cmp
sub
pop
jg
xor
scas
xchg
inc
mov
jecxz
cli
and
mov
sarb
xchg
mov
je
notl
std
gs
cmp
xor
mov
cs
inc
enter
fmull
inc
push
sub
sub
inc
outsb
aas
mov
push
mov
or
js
dec
jg
fstpl
sub
in
or
xor
xchg
sbb
outsb
cmp
pop
sbb
push
stos
cmpb
sti
pop
adc
and
fdivrl
inc
fxch
pop
mov
rolb
push
cs
mov
test
push
xchg
inc
int3
mov
jbe
dec
and
jg
add
je
test
mov
pop
push
and
ds
jl
sbb
jno
addr16
inc
cmp
cmp
cmc
pushf
cld
add
mov
mov
sbb
cmpsl
nop
inc
xchg
lret
and
dec
div
roll
hlt
add
int
jp
jmp
js
les
inc
cs
out
ds
add
pop
icebp
pop
loopne
pushl
push
mov
js
mull
mov
outsl
xchg
adc
pop
es
xor
outsl
or
clc
push
push
aam
shll
fisubs
sbb
sub
enter
test
lahf
clc
xchg
mov
mov
cmpl
lret
adc
and
or
dec
pop
cld
push
push
ret
add
incb
mov
mov
dec
sub
mov
jg
fs
fsubrs
xor
stos
xchg
test
mov
cmp
mov
shrb
shrb
push
push
idivb
gs
scas
mov
inc
movsb
push
sub
sahf
in
or
pop
and
adc
lock
jnp
aaa
sbb
and
inc
aaa
out
cmp
in
inc
adc
push
inc
push
aas
inc
mov
roll
std
aad
inc
dec
int3
xor
insb
ds
aaa
shll
nop
jmp
jecxz
test
and
fmull
push
and
scas
add
sahf
aad
arpl
dec
push
into
inc
aad
scas
and
aam
dec
push
rolb
out
and
cmpl
push
shr
jne
push
ja
bound
mov
cmp
int3
stos
sbb
cmp
push
repz
jns
outsb
push
sbb
test
and
jl
out
aas
lds
jae
inc
pushf
adc
das
adc
stos
jns
cmpsb
movsl
and
inc
jns
xlat
or
jae
push
leave
ret
mov
in
mov
xorl
xor
aas
pop
mov
imul
fistpl
fiadds
shll
xchg
mov
mov
loopne
push
rolb
push
pop
std
mov
aaa
fsubrs
xchg
cmp
mov
adc
aad
xchg
push
and
lret
ja
add
sbb
out
jle
inc
cltd
movsl
repnz
fsub
jae
cwtl
cmc
adc
inc
mov
mov
insb
popa
adc
mov
mov
lret
jle
lods
pop
xor
xor
pop
dec
adc
jno
or
xor
mov
add
jle
retw
paddd
mov
hlt
out
movsl
add
ja
pushw
xchg
or
xchg
fnstenv
push
adc
test
out
xor
and
ljmp
mov
adc
outsb
add
jmp
xor
lds
ror
scas
rorl
jl
pop
and
xor
and
cmp
ret
push
xor
es
cwtl
fadds
adc
add
jle
inc
xchg
jge
cltd
inc
fidivrl
cmp
cmpsb
mov
and
shrb
movl
sbb
fdivrl
test
adcb
adc
cmp
icebp
sub
movsb
dec
pusha
jecxz
addl
test
movsb
dec
movsb
out
dec
pop
mov
insb
adc
dec
sahf
sub
pop
std
test
adc
mov
ret
push
iret
cwtl
xor
mulb
sbb
jno
movsb
or
stos
in
jecxz
pop
dec
inc
loope
in
cli
jg
push
scas
shll
mov
sub
pop
and
fists
rolb
sbb
aad
sub
lahf
in
add
test
and
and
in
int3
dec
and
add
pop
out
adc
std
or
jp
mov
jl
out
mov
es
inc
mov
xor
add
icebp
adc
mov
test
add
push
push
dec
dec
jbe
sbbl
rcrl
xor
pop
popf
stc
cld
inc
insl
mov
sbb
adc
cmp
inc
mov
push
dec
test
pop
xchg
jb
lcall
imul
imul
popa
nop
xchg
test
sbb
in
clc
xor
scas
and
jns
mov
fiadds
cmp
or
leave
cmp
nop
cmp
inc
je
xlat
dec
das
mov
jno
adc
into
xchg
cmp
add
cmp
scas
mov
lret
push
jle
aam
xchg
les
loop
pop
cmc
in
xchg
push
sub
push
jno
int
or
pop
pop
mov
jmp
int3
popl
xchg
mov
mov
rcrb
movsl
icebp
stc
and
mov
or
dec
push
mov
and
pop
xor
fidivs
mov
xor
mov
pop
rcll
jae
pop
cmp
fcomps
aas
push
push
cwtl
cmpsl
loop
or
dec
jge
imul
push
test
cmp
pushf
add
scas
mov
add
clc
pop
flds
dec
insl
sbb
jne
pop
xchg
cmp
stc
out
mov
stos
mov
mov
flds
mov
int
xor
sub
imul
inc
notl
fisttps
xor
dec
popa
call
cmp
xchg
gs
push
in
sbb
and
sub
xchg
push
out
cmp
xchg
mov
xorb
aam
dec
or
inc
repz
out
jp
xor
xor
movl
and
insl
clc
mov
data16
into
xchg
adc
aaa
cli
and
imul
pop
jmp
sbb
mov
mov
shll
inc
shl
test
cld
mov
popa
xor
fstl
out
mov
mov
jle
adc
pusha
sub
leave
mov
sub
cmp
sbb
into
jmp
clc
popa
push
stos
push
mov
lret
dec
fwait
adc
xlat
pop
or
lahf
push
sbb
and
mov
push
and
adc
aam
push
ret
into
add
nop
mov
mov
push
js
lret
cmp
stos
inc
in
jecxz
nop
mov
lds
adc
pop
insl
add
xchg
icebp
pop
sub
adc
stos
xlat
ja
test
inc
sbb
fbstp
pop
pop
inc
sbb
xor
loopne
jecxz
sbb
pop
sbb
adc
pop
ja
in
jae
mulb
xorl
jmp
jl
jl
fsts
xor
hlt
adc
add
addr16
pop
xor
sbb
or
inc
mov
leave
push
mov
and
or
add
pop
dec
sbb
add
aaa
cld
les
push
cli
scas
mov
out
mov
icebp
jns
insl
cmp
dec
xlat
add
inc
leave
cmp
popa
ss
mov
out
push
fs
jae
sub
inc
bound
ficompl
push
sub
imul
sub
dec
inc
sub
imul
jne
xor
jle
inc
push
or
dec
cli
mov
push
nop
sub
imul
frstor
ss
pop
inc
fnstenv
lods
push
mov
lcall
pop
sbb
das
cltd
aas
pop
aas
outsb
xor
sbb
inc
inc
lahf
pop
mov
lret
xor
in
out
mov
outsl
jg
movsl
mov
movsb
mov
je
add
push
adc
ja
or
add
int
xchg
cmpsb
xchg
mov
dec
push
cwtl
mov
nop
lea
in
ret
jle
clc
ds
sbb
pop
js
negl
fsubs
fiadds
orb
in
std
jmp
cmp
fisttpl
nopl
push
or
int
adcb
fmuls
mov
dec
jecxz
mov
adc
scas
fwait
pop
mov
insl
sbb
dec
faddl
sbb
xlat
out
stc
push
ret
fwait
xchg
mov
and
bound
lahf
pop
inc
adc
dec
xor
xchg
aad
xor
inc
or
cli
mov
daa
leave
xchg
sub
push
inc
fisubs
pushf
dec
movsb
sub
jo
xor
cmc
sub
out
out
add
or
insl
je
xor
dec
cmpsb
outsb
lea
pusha
mov
xor
mov
dec
pop
mov
or
inc
mov
in
mov
mov
out
das
sarl
or
jle
scas
pop
mov
cmc
adc
dec
loopne
clc
push
push
sbbb
test
lcall
and
test
das
ljmp
stos
mov
std
hlt
push
cltd
sub
ss
or
leave
sub
adc
cmp
fisubrl
ja
cwtl
pop
movsl
repz
pop
or
adc
and
into
jg
jne
pushf
jecxz
ss
aad
pop
jl
dec
mov
lods
adc
aad
and
fimuls
xchg
jle
xor
lret
add
xchg
add
and
jmp
or
jge
push
push
scas
jl
fdecstp
and
push
or
sbb
out
push
add
cmc
int3
jecxz
and
push
loop
inc
pop
and
jg
das
addl
push
pop
jle
cmp
push
scas
jp
cs
ds
hlt
mov
xor
lea
outsb
adc
xor
outsb
xchg
enter
or
jno
ret
test
jae
cmp
or
xor
adc
push
cmp
fwait
mov
imul
lds
into
inc
dec
push
sub
mov
insb
mov
xor
out
int
mull
or
sub
xor
rorl
pop
jecxz
inc
ror
data16
movsl
jg
adc
aam
and
sbb
pusha
fstps
push
mov
icebp
xor
mov
jl
jmp
mov
insl
mov
mov
sbb
clc
lods
xchg
push
jle
push
out
stos
scas
into
mov
push
add
and
sub
add
sub
sbb
inc
sub
add
or
xor
mov
test
mov
testb
fisttpl
sbb
loopne
insb
inc
mov
sub
pop
dec
shll
adc
loope
mov
cmp
mov
or
xor
nop
mov
inc
stos
sbbb
mov
mov
push
les
mov
nop
mov
scas
or
xchg
addr16
push
push
test
push
js
push
das
repnz
popf
ss
or
enter
sbb
out
dec
pusha
inc
adc
addr16
popa
movsb
cmpsl
mov
aas
jbe
xchg
loopne
push
call
arpl
xchg
mov
pushf
pop
rolb
aas
leave
cmp
test
test
sbb
in
push
xchg
push
call
jmp
push
jns
cmp
sub
add
sbb
sbb
push
rcrl
test
ficoms
subl
cltd
push
push
arpl
cmp
mov
test
adc
push
inc
iret
add
dec
xor
dec
lea
xor
ljmp
jl
pop
xchg
xchg
inc
dec
mov
adc
leave
cmc
fs
rorb
xor
pop
pop
dec
mov
fiadds
icebp
sbb
mov
repz
pop
scas
jnp
jne
mov
sar
inc
jns
cmpsl
push
imul
and
sub
jl
fstps
jl
jne
scas
add
and
fs
pop
mov
mov
pop
scas
enter
lea
mov
pop
sbb
xor
faddl
inc
mov
clc
dec
lahf
shlb
jle
mov
test
loope
out
dec
mov
test
fiadds
daa
fisttpll
outsl
dec
sbb
add
push
scas
test
loopne
mov
ret
add
adc
xorb
unpcklps
jnp
lock
in
js
mov
enter
mov
and
mov
imul
int
push
jmp
push
mov
xchg
push
or
inc
aaa
add
inc
fwait
movl
push
pop
cmp
sub
inc
incl
add
scas
iret
xchg
sarb
add
sbb
jb,pt
in
leave
jb
clc
shl
scas
fists
jae
mov
or
imul
imul
and
or
orl
sub
insb
dec
dec
repnz
sbb
add
es
decb
lahf
insl
mov
repnz
pop
xchg
jne
or
xchg
and
shr
mov
pop
icebp
jle
and
jp
dec
sbb
rcl
js
repz
xor
push
in
test
adc
mov
jmp
sbb
add
pop
pop
mov
xor
push
rolb
arpl
js
sbb
add
dec
push
jae
mov
test
movsb
jo
jo
sbb
mov
xor
add
pop
add
or
jno
in
cmp
dec
jb
add
sbb
out
sbb
sbb
call
mov
and
push
pop
mov
xor
std
and
movsl
lds
cs
jo
stos
xchg
fadds
popa
sub
stc
pusha
mov
cltd
jae
xor
inc
daa
insb
ss
les
ret
in
enter
add
inc
push
in
or
int3
stos
ljmp
push
mov
push
andb
fdivl
into
cmp
pop
inc
and
inc
add
out
cmp
addr16
and
dec
push
fnstcw
loope
jae
pop
shr
lods
iret
push
xchg
sub
lcall
xchg
repnz
cmp
mov
test
pop
mov
pop
sbb
out
mov
fs
xchg
shll
popa
cmp
movsb
xchg
and
out
mov
lahf
test
xlat
jmp
jae
jno
test
or
jnp
add
or
in
divps
js
mov
sbb
rcrb
jle
mov
mov
stc
outsb
jl
movsb
add
orb
and
lods
or
mov
or
mov
arpl
add
mov
jl
cmp
inc
mov
sbb
cmp
cmp
xchg
pop
int3
ret
cmpsb
rcll
add
fstpl
lds
xchg
dec
mov
pop
mov
mov
ljmp
add
mov
loope
data16
xor
iret
test
cli
mov
jp
sbb
out
xchg
dec
mov
addr16
stos
cmp
mov
mov
out
adc
cmp
stos
adc
repz
es
xor
sub
in
gs
icebp
sbb
leave
hlt
inc
rcl
daa
xchg
inc
adc
adc
sarb
mov
cmp
or
pop
insb
insl
sbb
ljmp
js
fdivrl
cmp
sub
sub
jns
jns
bound
push
xor
or
inc
insl
ret
icebp
cmp
mov
scas
add
xchg
xchg
lods
pop
rolb
add
mov
addr16
scas
inc
push
jns
cmpsb
into
push
and
mov
add
ja
jae
xorl
xor
lods
add
pop
out
mov
jecxz
mov
pop
ja
lret
sub
adc
scas
iret
movsb
push
loopne
int
add
insl
movsl
sub
sub
adc
xchg
and
aad
dec
push
add
pop
push
jb
hlt
cmpsb
and
sahf
and
mov
xlat
mov
insb
and
xor
scas
clc
inc
xor
mov
cmc
inc
cmp
push
mov
push
pushf
gs
out
mov
inc
bound
push
sub
repnz
push
mov
xchg
aad
lret
inc
mov
pusha
sbb
and
mov
sub
pop
cmpsb
in
cwtl
into
push
les
sub
scas
roll
pop
xchg
mov
repz
cmpsb
cmpsb
push
test
leave
add
mov
push
add
sbb
lahf
fwait
push
shll
leave
loope
or
mov
call
dec
inc
push
movsl
mov
dec
mov
mov
enter
jne
cs
clc
int3
xchg
dec
push
jno,pt
ds
icebp
mov
addl
or
mov
bsf
stos
pushf
push
sti
scas
mov
stc
adc
mov
push
cwtl
mov
in
pusha
fstps
jl
hlt
mov
cld
xor
mov
int3
js
xor
xor
mov
adc
and
adc
pop
push
push
jmp
push
cmp
fadds
insl
lea
imul
sub
je
mov
jl
mov
fs
shll
out
adc
ret
fsub
adc
cltd
mov
pop
mov
stc
fwait
and
jno
jne
inc
faddl
pop
scas
aas
lret
push
mov
inc
sbb
and
fcoms
aas
dec
jns
subl
out
test
into
inc
push
cmp
mov
cld
pop
mov
push
pop
mov
jnp
jne
xlat
adc
movsb
pop
aas
nop
aam
xchg
fcomip
and
pop
or
inc
mov
punpcklbw
js
ja
sub
addr16
enter
sub
push
pop
outsb
xchg
or
repz
or
mov
add
shrl
mov
lret
mov
pusha
fwait
lret
dec
fs
js
aad
sub
sub
arpl
les
xchg
mov
call
adc
adc
dec
mov
add
xor
add
mov
jl
or
in
pop
inc
dec
add
inc
fmul
imul
icebp
inc
adc
mov
insb
jno
pop
cmp
add
sahf
jp
inc
movsl
xchg
or
ret
jl
sub
lahf
repnz
mov
mov
jns
insl
insl
ret
insl
cltd
adc
or
sub
cmc
push
stos
aam
insl
pop
pusha
cs
sub
push
pop
into
inc
bnd
xchg
lahf
daa
push
mov
lods
jae
xchg
inc
adc
mov
les
test
arpl
and
push
pop
push
mov
fwait
scas
jmp
not
fadd
and
or
rcrl
mov
xchg
aad
lods
pop
mov
pop
stc
into
inc
orb
jae
andb
dec
loope
cmp
jl
hlt
into
add
movsl
sbb
pusha
cmp
jmp
lahf
cmc
daa
xor
gs
jnp
inc
es
jns
repz
in
add
or
xor
jno
xor
add
dec
cmp
or
jp
fistps
jbe
mov
xchg
xchg
inc
inc
and
sbb
push
jne
and
sub
sub
sbb
decb
fs
les
jno
jo
ficoms
jo
push
mov
dec
int3
mov
lret
movsl
dec
adc
cmp
jl
push
jmp
pop
pop
add
out
das
int
mov
lahf
fcompl
clc
mov
xlat
cmc
rcll
jle
xchg
xor
lahf
xor
mov
pop
int
js,pn
mov
inc
add
mov
out
add
xchg
mov
call
or
insl
add
into
popa
ss
arpl
sbb
rcrb
popa
leave
lods
lock
add
mov
inc
sahf
outsb
into
add
xchg
pop
outsl
aaa
xor
outsl
hlt
mov
neg
push
inc
sub
dec
push
push
sbb
push
pop
int
sbb
pushf
faddl
daa
cmp
scas
mov
adc
stos
and
loop
sub
mov
in
sub
or
insl
lahf
fmuls
pop
neg
cli
sub
fmull
mov
and
lds
xchg
and
or
fwait
pop
add
cld
xor
xor
shll
in
sbb
orl
xor
inc
mov
daa
stos
mov
cli
cmpb
int3
clc
popl
jle
push
pop
fidivl
clc
pushf
cltd
push
adc
jnp
mov
shl
xor
enter
adc
insl
fnstsw
fst
xlat
mov
ret
test
mov
inc
iret
adc
enter
sub
in
into
lds
pop
test
out
mov
cwtl
fcmovne
sbb
and
pop
lret
dec
or
loope
int
sub
enter
int3
or
cmpsl
push
jo
ja
inc
mov
mov
imul
mov
aaa
sub
xchg
cli
xor
xlat
and
ret
cs
ret
iret
jbe
push
iret
sbb
xchg
dec
popf
insb
icebp
test
push
jmp
jle
shrl
insb
jg
sti
sahf
and
jecxz
jge
aam
mov
hlt
mov
js
dec
add
cmpsl
xor
stos
int3
fisttps
jmp
or
and
and
cld
push
arpl
movsb
adc
and
outsb
xchg
adc
xchg
or
push
shll
test
rolb
dec
mov
out
int3
js
xchg
pop
inc
int3
decl
and
and
mov
push
add
inc
ret
insb
mov
xor
jno
insb
faddl
xlat
inc
dec
pop
rep
dec
cmp
fstps
fs
cmpsb
or
nop
dec
lret
mov
sub
icebp
pop
insb
pop
testl
loope
lds
loopne
outsb
sbb
lret
cmp
pop
mov
pop
jecxz
movsb
or
cmp
mov
addr16
orl
cmp
dec
sbb
in
popf
xchg
mov
mov
pop
movsb
dec
fs
adc
daa
stos
pop
into
mov
lods
in
add
ret
lcall
loope
sbb
scas
jle
je
mov
daa
mov
mov
cld
pop
outsl
popa
out
add
rcll
rcrb
sub
mov
loopne
mov
in
pop
jp
pop
std
jne
cmpsl
dec
sbb
inc
out
dec
xchg
add
mov
cmp
jno
fwait
dec
int
cli
clc
add
sahf
and
arpl
aas
and
jnp
test
sbb
clc
xchg
leave
scas
cmp
js
lea
mov
pop
inc
xor
mov
xchg
jecxz
dec
push
sub
loope
adc
aam
mov
mov
mov
lahf
aad
enter
adc
popf
scas
mov
push
mov
and
mov
lds
push
mov
cmp
pop
mov
negl
lahf
call
js
push
dec
xchg
pop
mov
test
adc
pop
loope
sub
add
fdivs
jne
add
jo
push
push
leave
lahf
aas
inc
fisubs
mov
mov
into
cmp
fwait
inc
pop
call
pop
shl
jp
scas
arpl
ret
jns
subl
mov
push
mov
sub
xor
je
pop
mov
sub
inc
mov
mov
lret
mov
inc
pop
jae
mov
lret
frstor
faddl
leave
repnz
push
lahf
add
or
insb
ret
imul
sbb
and
testb
push
sti
out
adc
shll
push
sahf
or
loopne
test
cs
cld
jno
pop
jne
adc
lds
stc
push
dec
hlt
sub
push
jns
loop
jno
mov
mov
dec
jne
add
stos
add
fimuls
dec
cmc
push
xlat
pop
out
mov
inc
and
lock
loopne
push
inc
adc
das
mov
jecxz
mov
jne
pop
push
inc
adc
adc
inc
pop
sub
mov
negl
mov
movsl
rcr
dec
add
adcl
or
popa
ds
and
aaa
xlat
jecxz
jmp
jl
pop
stos
xchg
mov
ret
add
ss
jns
sbb
jb
test
push
push
adc
rcrl
out
pop
imul
pop
and
insb
or
shlb
pop
dec
push
and
enter
fwait
push
out
jae,pn
push
lahf
xchg
ret
andl
mov
imul
push
dec
insl
ljmp
pop
pop
mov
push
sub
inc
adc
mov
outsb
xchg
sbb
incb
stc
push
dec
mov
push
addr16
adc
fs
or
pop
cmc
add
scas
cs
pop
mov
push
cmp
dec
add
pushf
inc
mov
xor
sahf
sub
stos
push
mov
rcl
rclb
push
insb
mov
shl
daa
push
stc
xchg
push
inc
movsb
out
test
jo
and
int3
clc
inc
and
in
lea
push
lret
mov
subl
in
and
xchg
jae
cmp
sbb
inc
adc
dec
aaa
add
repnz
xor
add
gs
sbb
pusha
aad
or
loope
cmpsb
mov
sub
jge
dec
jo,pt
cmpsb
mov
outsb
mov
jle
cmp
outsb
pop
fdivl
in
and
cs
js
and
push
addr16
aam
xchg
mov
decb
fmuls
stc
push
dec
mov
int3
ljmp
rol
loope
push
ss
jne
cld
and
push
pop
inc
add
in
fldcw
inc
imul
aad
seto
cmp
and
mov
add
sub
and
scas
and
arpl
push
das
test
loopne
mov
pop
fcomps
mov
sub
and
je
in
mov
cld
cbtw
or
lock
stos
lahf
int
jnp
lahf
pop
pop
xor
cli
arpl
pop
adc
imulb
sub
lret
xchg
ret
and
insb
or
pop
dec
cmp
sub
add
out
mov
cli
inc
lods
sbbl
inc
mov
insl
add
aaa
add
call
dec
fisttpll
fcmove
inc
arpl
nop
popa
addr16
mov
pop
jnp
into
cmp
or
shll
adc
sub
mov
sub
lcall
pop
pop
repz
ds
daa
dec
sbb
fistps
pop
sarl
push
jecxz
loopne
xchg
mov
inc
pop
cltd
not
or
insl
jno
mov
aas
push
clc
sbb
andb
lcall
ds
pop
popf
sub
cmpsb
push
dec
add
in
pop
leave
pop
xchg
mov
mov
add
inc
jne
mov
push
out
in
mov
div
hlt
js
push
mov
dec
pop
lods
insl
xlat
out
cmpsb
mov
int3
jno
add
mov
loope
xor
sbb
int3
xchg
pop
loopne
push
xchg
add
sub
lods
cld
or
add
loop
xchg
push
lods
fmull
xchg
cmp
sbb
or
fnstsw
mov
sub
fabs
and
adc
xlat
sub
aad
mov
ds
mov
imul
leave
xchg
lret
adc
loope
leave
insb
inc
clc
sbb
ja
xor
out
pop
inc
test
fnstsw
jl
xchg
cltd
cmp
add
lock
sub
mov
push
pusha
ljmp
mov
ret
addr16
push
lcall
aam
xchg
ret
test
popf
outsl
jmp
mov
mov
loope
and
adc
sub
fsubrp
pusha
call
mov
shll
push
sbb
sub
ret
incb
mov
lods
add
ss
test
and
pop
pop
aad
daa
push
jne
insb
pop
sub
lcall
jl
xchg
mov
mov
inc
das
stc
cmp
adc
push
enter
lea
add
pop
or
or
mov
mov
out
leave
shrb
adc
or
adc
movsl
imul
mov
ljmp
fucomp
mov
shll
jl
xor
aad
enter
lods
mov
or
ret
sub
push
clc
repnz
dec
and
lcall
inc
jb
nop
inc
jmp
or
fbstp
hlt
cs
xor
cmp
mov
leave
sahf
int3
or
push
je
out
ffree
lcall
ss
and
xor
cmc
enter
push
mov
pushf
adc
and
imull
inc
stos
inc
xorb
push
pop
stc
std
stc
test
das
es
inc
jae
sbb
hlt
sub
cmp
inc
int3
inc
fmuls
push
cmp
jl
inc
mov
and
mov
mov
push
and
out
pop
negb
add
and
stc
push
dec
mov
mov
inc
fnstsw
inc
xchg
addl
push
sti
inc
xor
jg
lds
popa
jbe
push
sbb
inc
sub
out
hlt
es
insb
fisttpll
pop
lret
cmp
outsl
call
pop
or
fs
lock
movsl
int
jp
fwait
daa
fsubl
jle
adc
sti
inc
data16
adc
xchg
sbb
or
lret
mov
sub
dec
push
xor
pushf
push
les
mov
nop
stos
call
mov
jg
std
cli
push
xor
pop
int
fisttpl
lret
jns
jl
add
add
scas
mov
and
push
cmp
jne
mov
and
xor
xor
or
inc
fs
xor
mov
rcl
push
popf
xor
aam
dec
inc
mov
in
mov
sbb
mov
and
lea
outsb
pop
imul
test
inc
mov
ja
mov
mov
repnz
lock
leave
jo
mov
jl
push
push
test
or
xchg
xchg
cmp
popa
fnstsw
and
inc
dec
dec
inc
loopne
mov
xchg
js
xchg
andl
addb
nop
shll
mov
xor
fdivl
sahf
scas
and
loopne
mov
aaa
xor
fcom
mov
popf
outsb
dec
jecxz
and
xor
movsb
push
ja
dec
cltd
fmull
xchg
stos
fcompl
sbb
rorl
sti
pop
cld
or
sub
sub
test
sub
dec
jb
or
lods
repz
and
mov
dec
lods
fs
add
sub
mov
in
add
and
pop
sub
and
or
jle
or
ret
add
jp
inc
xor
and
insb
adc
int
jmp
cwtl
outsl
or
adc
push
cltd
jo
xor
inc
sbb
adc
test
xor
xor
and
lcall
xchg
inc
roll
movsb
lods
sbb
pop
cmp
push
int3
lret
and
out
mov
scas
lcall
sar
sbb
fadds
push
stos
into
fstps
adc
insb
sarb
int3
incl
xor
push
aas
mov
inc
pop
test
lds
or
mov
int3
inc
inc
sub
and
adc
enter
loope
mov
inc
inc
push
or
xor
outsl
add
gs
push
inc
les
adc
mov
adc
es
mov
mov
add
mov
xchg
cmp
cltd
out
mov
adc
and
sbb
sub
adc
int
cmp
mov
sahf
mov
sbb
pop
fsincos
jnp
je
aas
addr16
clc
dec
insb
test
je
aad
ret
sbb
js
sbb
mov
push
push
jno
and
cmp
sub
clc
or
pop
push
xor
or
sub
int
jns
inc
rorb
pushf
fsubrl
xchg
ss
mov
lcall
adc
cmp
xor
fsub
jp
sahf
sub
and
scas
mov
cmp
sbb
mov
inc
clc
pop
push
aad
xor
outsb
mov
mov
int
push
add
jg
jl
mov
mov
xor
lcall
int
pop
icebp
add
jo
jecxz
jecxz
xor
sub
or
pop
stc
mov
cs
iret
test
repz
add
xor
inc
push
adc
cmpsl
pop
js
mov
sub
insb
in
in
jae
cmpl
add
jl
shll
fsubs
and
and
ret
inc
testl
cmpl
imul
jnp
pusha
stos
sbb
push
cmpsb
mov
xor
jl
jns
aad
inc
or
sbb
loopne
sub
stos
lods
cld
push
and
test
test
add
jmp
cmp
add
scas
pop
std
sub
insl
clc
ficoms
mov
push
add
inc
adc
fbld
add
and
icebp
jmp
jge
push
push
push
imul
bound
pop
jne
insb
repnz
mov
rclb
outsl
fwait
dec
jno
or
ja
packsswb
mov
mov
xor
xchg
fnstsw
imul
nop
shrb
jg
adc
mov
cmp
cld
pop
mov
add
cmpsl
xchg
adc
mov
pop
mov
xor
into
mov
mov
inc
out
dec
push
jmp
jmp
inc
out
push
aaa
push
add
and
inc
jl
ljmp
clc
inc
jl
popa
cmp
or
xchg
aaa
cmp
and
and
pushf
inc
lea
imul
sub
cmp
jg
mov
jae
push
in
js
iret
and
mov
dec
add
test
sbb
push
dec
dec
lods
mov
cs
sbb
loopne
aas
movsl
ret
xchg
out
and
testl
roll
aam
jl
lcall
ss
inc
push
push
jb
and
adc
push
and
jmp
cmpsb
aas
mov
xor
inc
xlat
xchg
mov
into
mov
push
and
mov
or
addl
scas
mov
shll
mov
pop
sub
in
outsb
rcrl
addr16
sub
mov
push
data16
or
mov
sub
xlat
out
dec
and
sti
movsl
sub
jge
push
xchg
int
in
sbb
imul
imul
out
xchg
fmull
or
push
loop
leave
icebp
mov
jb
xchg
jecxz
xchg
inc
out
clc
adc
push
mov
imul
mov
cld
or
push
movsb
xchg
pop
enter
push
rorl
jmp
push
aam
pop
inc
add
sbb
xor
in
lods
popf
mov
in
and
sahf
aad
pop
cmp
cmp
or
pop
out
pop
mov
xor
xchg
in
ret
adc
xor
pop
pop
sub
fdiv
mov
pusha
pop
and
sbb
adc
mov
sub
ja
xor
push
jae
cmc
mov
test
icebp
into
adc
es
les
test
repnz
inc
lret
aad
mov
pop
dec
icebp
or
pop
add
or
and
in
mov
inc
inc
mov
jecxz
out
or
loopne
dec
cmpsl
test
hlt
and
push
mov
outsb
jmp
mov
out
ret
xchg
mov
dec
pop
xor
mov
push
inc
dec
mov
xchg
sbb
sarl
adc
rorl
insl
inc
pop
mov
push
xchg
sahf
loopne
insb
test
inc
jb
pop
js
cmp
push
mov
icebp
pop
sbb
dec
inc
pop
mov
push
mov
dec
mov
dec
and
cltd
mov
ja
xchg
cmp
xchg
mov
adc
and
adcl
lahf
hlt
jge
addr16
or
outsl
jecxz
js
pushf
pop
mov
ss
push
sti
and
cmp
scas
xchg
jnp
adc
popf
shll
iret
mov
lds
jecxz
imul
into
xchg
psubusw
sbb
sub
and
popf
out
xor
adc
lahf
xor
pusha
int
jnp
push
cmpsb
jo
jnp
adc
push
push
rclb
xstore-rng
cmpsl
pop
cmp
dec
fucomp
pop
add
or
push
xor
sub
cmpl
jl
or
push
push
js
adc
inc
hlt
fbstp
pop
popf
sbb
pushf
scas
sub
and
ret
push
push
sbb
bound
ficoms
sahf
mov
mov
add
mov
sub
sub
or
cmp
cmp
adc
dec
hlt
pop
les
jecxz
pop
iret
loopne
mov
mov
xchg
dec
dec
stos
dec
repnz
pop
jp
xor
pusha
push
inc
das
mov
cmpsb
pushf
and
cmpsl
loopne
xor
rcrb
pop
mov
loope
pop
inc
mov
inc
push
cs
fisubs
mov
add
or
push
push
fldcw
dec
pop
scas
sbb
adc
push
mov
sahf
xor
lret
das
adc
in
imul
in
mov
arpl
outsb
mov
iret
dec
xchg
mov
in
sbb
cmp
inc
push
fldcw
jmp
inc
push
fists
cli
dec
scas
and
add
mov
popf
pop
cmp
inc
loope
push
and
jb
lods
imul
outsb
popf
sbb
and
add
push
stc
adc
mov
nop
inc
ljmp
insb
pop
clc
mov
popa
mov
mov
out
add
pop
mov
adc
scas
or
dec
sub
das
fisubrl
popa
int3
push
inc
movsb
mov
mov
stos
inc
scas
mov
and
mov
lahf
scas
dec
ja
aas
scas
and
cmp
rcll
iret
pop
iret
aam
ret
nop
mov
insl
icebp
inc
in
jne
fsts
adc
aas
nop
test
dec
lret
leave
into
lahf
outsb
jl
mov
sub
pop
repnz
into
sub
push
xor
roll
movups
mov
popa
into
push
inc
mov
mov
fsubl
add
fmul
push
xchg
jmp
jne
fwait
sbb
aaa
lret
sbb
sub
and
dec
insl
lcall
mov
lcall
jl
mov
inc
repz
inc
das
push
adc
mov
dec
push
subb
scas
adc
add
cmp
insl
js
iret
in
push
out
enter
xchg
fldt
out
xchg
cmp
ss
cmp
xor
enter
in
cmp
push
and
xchg
push
sub
faddp
dec
inc
cli
leave
das
mov
xchg
lock
jo
in
inc
insb
pop
xchg
jnp
xchg
or
mov
fstl
jae
or
dec
mov
cs
mov
xor
inc
cmp
xor
std
pop
xorb
mov
stos
or
dec
dec
and
loope
fistl
xor
aad
arpl
mov
push
xor
adc
test
pop
scas
push
mov
ret
push
push
test
xor
rcr
push
mov
mov
push
repnz
insb
adc
and
addb
aaa
pop
lahf
es
jno
push
jl
inc
or
xchg
jne
xchg
jnp
ja
fdiv
push
inc
in
xor
fisubl
test
dec
cmpsl
sub
les
sub
int3
cmp
inc
popa
fdivl
dec
aam
fisubs
inc
mov
add
dec
int
pop
and
push
dec
mov
inc
xchg
or
arpl
ret
call
cmpsl
push
or
enter
xchg
fmull
xor
jno
pusha
push
pop
cmp
repnz
mov
outsl
add
testb
jg
mov
mov
jo
xchg
cmp
daa
xchg
test
mov
jae
push
adcl
mov
jmp
lcall
aad
mov
mov
shr
lahf
mov
pxor
mov
lahf
lret
mov
xor
out
aad
ffreep
add
pop
dec
lahf
outsb
cmp
cmpsb
inc
roll
push
push
inc
xchg
sbb
dec
repz
xor
in
outsb
jnp
mov
add
push
outsl
fdiv
fdiv
pusha
cmpsb
cwtl
dec
call
xchg
popa
loop
add
sarl
insb
or
cltd
ja
cmpsl
push
push
xor
push
jmp
movsl
outsl
cmp
push
jp
not
out
int
cld
lret
aas
mov
mov
and
xchg
adcl
insb
in
popa
mulb
xlat
inc
ds
cmp
add
adc
mov
sbb
nop
sub
shrb
addr16
jo
pop
sub
mov
ret
inc
scas
or
inc
fs
cmc
pop
xchg
pop
ljmp
mov
dec
mov
in
inc
jg
scas
inc
inc
xor
jo
sbb
and
jns
mov
je
insl
mov
pop
add
lock
or
lock
cltd
mov
cmp
and
testb
cmp
outsb
and
inc
jns
mov
insl
stos
bound
shrl
xchg
or
jo
shl
cmp
dec
in
and
sub
movsl
xchg
pop
movb
mov
inc
xor
add
and
sub
sub
mov
adcb
or
outsb
negl
and
cs
mov
outsb
pushf
bnd
or
mov
push
fsts
pop
xor
sub
push
fstpl
movsl
lret
ficompl
js
jp
shrb
rclb
mov
sub
xor
je
pop
lret
sub
and
xor
mov
cld
add
cmpl
dec
push
int3
call
mov
orb
mov
in
ss
push
aas
mov
int3
leave
frstor
cmc
sti
jno
and
mov
inc
iret
pop
daa
jge
jecxz
ja
outsl
mov
leave
mov
adc
xchg
xlat
add
jg
mov
or
push
dec
ljmp
xor
stos
xchg
aad
sbb
test
popf
sbb
js
dec
inc
inc
adc
call
sub
cmpsb
xor
and
sub
and
aad
jmp
daa
mov
push
ljmp
xlat
mov
sbb
pop
aad
push
xchg
sbbb
mov
mov
ja
jbe
leave
xchg
les
mov
push
inc
decl
cmp
lret
and
jp
cmpsl
sbb
cmc
dec
das
insl
push
mov
daa
stos
sarl
cmpsl
arpl
xor
fldl
push
popa
add
jge
stc
mov
or
xchg
push
pop
into
pop
xor
add
fdivrl
pushf
mov
jne
jmp
sbb
clc
movsb
in
inc
in
push
inc
and
sbb
out
test
mov
mov
fsubl
call
shlb
add
jae
or
repnz
stc
inc
inc
mov
inc
outsl
pop
sti
mov
xchg
aaa
push
mov
mov
test
and
pop
ds
scas
into
pop
jns
add
jmp
push
adc
sub
inc
dec
mov
sbb
cmp
mov
pusha
in
stc
mov
mov
popa
lock
cmpsl
lret
and
sbb
or
into
mov
pushf
xlat
enter
aaa
and
out
movsl
fmuls
pop
inc
clc
adc
int3
daa
mov
mov
mov
lret
xchg
call
push
jne
iret
dec
stos
sbb
inc
xor
push
push
lcall
rorb
jbe
xchg
sbb
lcall
cltd
scas
int3
jne
pop
cmp
sub
jns
xchg
sbb
cmp
sub
add
and
xlat
xor
stos
mov
icebp
pop
out
jbe
popf
mov
subl
mov
ljmp
stos
sbb
sbb
sahf
add
mov
stc
mov
lods
roll
dec
jae
shll
xchg
mov
mov
xor
pop
add
xchg
xor
xchg
int
mov
jp
or
adc
lahf
xchg
push
rcll
mov
push
cmc
mov
inc
pop
out
lds
or
cmp
stos
in
dec
int
es
xchg
movsb
sbb
cmpsb
or
sbb
jne
jl
lret
stos
out
sarl
dec
ljmp
dec
pop
hlt
add
lods
cmp
fadd
setne
jge
or
adc
adcl
into
ljmp
dec
stos
int3
aam
das
sahf
mov
mov
and
mov
sbb
jnp
lds
push
outsb
jb
fsubrp
es
or
popa
stc
sub
adc
fs
ror
hlt
pop
add
add
sar
xchg
js
lds
xchg
jle
and
mov
sarb
popf
fistpl
and
roll
outsl
and
push
das
les
add
push
add
push
push
es
jno
inc
sub
inc
clc
push
pop
adc
cltd
or
std
stc
out
aaa
xchg
cli
sub
xor
iret
or
mov
popf
and
sub
sub
or
imul
or
add
mov
aas
lahf
push
lret
sbb
xchg
or
rcrl
sub
add
xlat
inc
dec
jmp
dec
adc
sbb
testb
push
outsl
mov
mov
push
jg
mov
adcb
push
xchg
std
es
push
mov
mov
cmp
dec
out
call
cmp
mov
xchg
aas
stos
push
and
inc
shl
cli
pop
inc
inc
add
cmp
outsl
lret
in
les
js
stc
sub
pop
test
push
or
mov
pop
fst
add
notb
call
and
push
jb
push
pushf
std
inc
and
cmp
mov
mov
jmp
cmp
out
inc
dec
ds
out
mov
mov
jo
cmpsb
push
fisttps
inc
mov
mov
sbb
fnstsw
mov
repz
in
daa
sbb
lods
inc
inc
push
adc
imul
clc
pop
pushf
sub
inc
sub
jmp
mov
roll
or
sbb
inc
fnstsw
jl
data16
mov
jnp
cltd
insb
out
cmp
mov
xor
aam
lcall
jbe
mov
xchg
popf
aaa
mov
sub
mov
scas
stos
ljmp
lds
fs
pushf
mov
gs
xlat
add
enter
sub
xchg
mov
fsubr
mov
cmpsb
and
out
jae
xchg
mov
hlt
xchg
scas
sub
lds
xor
push
ffree
dec
sub
mov
jne
daa
cmc
pop
and
and
leave
daa
repz
cmp
lahf
enter
decl
enter
push
pop
cld
ss
les
push
repnz
pop
pop
mov
jo
dec
cmp
add
push
dec
in
ret
sub
pop
add
jnp
push
icebp
mov
scas
inc
adc
and
cmp
les
inc
sbb
imul
pop
add
and
mov
xor
or
and
and
hlt
ret
sub
in
iret
lock
notb
mov
in
fsubp
xchg
pop
or
push
dec
jp
add
fwait
add
mov
inc
icebp
loop
and
jl
insb
jg
lcall
mov
ss
sbb
idivb
jbe
sbb
scas
mov
icebp
mov
or
es
adc
inc
cs
into
mov
bound
adc
push
ret
mov
jns
push
movsl
stos
and
popa
xlat
cld
lods
js
pop
mov
push
je
ret
cmpb
mov
mov
adc
mov
pusha
decl
pusha
jbe
pop
xor
pop
stc
sbb
insl
or
into
dec
mov
add
mov
or
dec
fisubs
mov
stc
fbld
adc
stos
in
mov
xchg
inc
push
arpl
roll
jb
test
rcrb
adc
sub
pushf
repnz
pop
xchg
lds
daa
int
or
insl
out
bound
lahf
add
xor
cs
fsubs
xor
addr16
sbb
adc
xchg
imul
fwait
rorb
test
aad
cmp
sbb
cmp
mov
ret
leave
jl
sub
mov
iret
popa
push
pop
insl
mov
mov
repnz
jns
adc
push
dec
loope
sbb
dec
cwtl
call
clc
sbb
mov
stos
test
pop
cmp
push
int
jmp
dec
call
inc
xor
mov
mov
pop
mov
stos
in
enter
dec
mov
dec
mov
mov
sbb
xor
mov
sahf
inc
sti
push
bound
push
rcr
das
adc
sbb
adc
es
pop
mov
outsb
orb
jle
test
fiadds
mov
test
outsl
addl
or
and
sub
push
cmp
sub
rcll
jns
and
jmp
inc
int
and
lds
adcb
out
fnstsw
jp
jle
xchg
fmul
es
insb
jnp
mov
push
xchg
js
int3
stos
xor
faddl
mov
mov
pop
and
lret
mov
add
push
sti
and
lods
ds
cmp
push
xchg
roll
arpl
stos
lahf
dec
pop
adc
fwait
das
push
stos
inc
sahf
jbe
push
and
sub
inc
xchg
push
sarl
inc
nop
add
adc
popa
dec
cmp
inc
sahf
icebp
push
or
inc
pop
cmpsl
mov
loopne
test
pop
mov
fxch
ljmp
addr16
push
insb
adc
or
out
add
das
sub
sub
jno
hlt
fwait
aaa
push
ljmp
loope
negb
lret
jno
out
push
sbb
out
insl
stos
mov
in
int3
mov
inc
add
sbb
inc
or
std
pop
and
imul
jb
and
ret
fs
inc
cltd
sti
xlat
repz
into
das
or
stos
incl
xchg
mov
shlb
sbb
std
and
ja
aam
lock
jae
xor
insl
pop
dec
cmc
in
popf
jle
pop
pop
sti
mov
and
ja
mov
sub
dec
inc
mov
daa
pop
insb
popf
and
jo
xchg
leave
mov
jo
or
ds
dec
sbb
pop
idivl
sbb
pop
add
pop
stos
jns
dec
or
xchg
lcall
add
mov
in
jbe
arpl
int3
lds
leave
int3
jg
out
call
addr16
jg,pn
jge
inc
adc
mov
arpl
push
pop
jg
pop
ffree
cmpsb
cmp
loope
jg
das
xchg
adc
call
call
push
sub
cld
repz
or
pop
mov
bound
aam
leave
push
adc
dec
push
leave
loop
aam
mov
mov
lret
in
xchg
fcomps
inc
aaa
sahf
and
or
sub
aad
push
push
out
mov
sub
pop
and
mov
stos
xor
ror
sub
dec
push
push
add
cmc
sarl
addr16
and
test
or
ret
jae
sbb
jg
les
sti
push
lahf
addr16
adc
stos
add
xor
cmp
lret
cmp
insb
xor
int
cs
popf
push
mov
pop
mov
int
jno
add
xlat
adc
cld
inc
imul
int3
inc
les
mov
int3
loopne
cmc
andl
pop
stc
jl
imul
mov
and
test
pop
adc
lcall
fmull
mov
sbb
cli
divl
push
mov
mov
push
dec
add
mov
add
xchg
leave
pop
push
addr16
les
mov
or
push
sti
pop
ds
cmp
sbb
aaa
sar
pop
adc
jno
dec
mov
or
call
xchg
loop
test
or
out
decl
stc
adcl
les
inc
mov
push
stc
sbb
cwtl
adc
icebp
icebp
pop
dec
pusha
cmp
push
jp
lahf
add
push
adc
sub
and
outsb
mov
cld
sub
and
mov
shll
adc
loopne
jns
in
pop
adc
and
xchg
and
bound
test
dec
test
test
sub
js
cltd
or
dec
rorl
push
fbld
cld
sub
lahf
inc
inc
mov
mov
dec
lret
sub
inc
lret
jl
and
bound
xor
jb
or
pusha
lcall
push
out
jecxz
mul
int3
or
mov
add
les
lods
rorl
je
aad
push
fs
pop
fisubrs
or
rorl
daa
mov
xchg
enter
int3
inc
jg
mov
ds
or
lods
dec
enter
pop
mov
push
xlat
jp
dec
outsl
fsubrp
scas
xchg
mov
adc
or
clc
xor
imul
adc
dec
fsubr
pop
cwtl
lahf
pop
bound
mov
icebp
mov
in
lock
fs
add
xchg
sub
add
loopne
popf
das
cmc
xchg
or
cmp
daa
and
jo
cld
mov
cmp
jmp
sub
jmp
push
push
in
jecxz
outsl
leave
nop
push
insb
jmp
push
jns
out
add
aas
mov
push
xchg
mov
dec
push
jmp
inc
push
ror
adc
test
popf
insb
mov
jle
call
mov
sbb
pop
fwait
mov
sbb
das
mov
aaa
ds
and
js
lahf
mov
pop
ja
imul
xor
xchg
mov
subb
cmp
in
addr16
int
sub
jbe
outsb
ficoms
sub
aaa
push
mov
outsb
and
lahf
xchg
cmc
inc
pop
mov
xchg
mov
mov
sub
int3
xchg
stc
outsb
mov
ss
xchg
test
pushf
mov
dec
cmp
test
and
inc
or
or
sub
jae
jg
call
sti
gs
mov
jp
pop
dec
pop
or
mov
test
cmp
push
into
int
cli
mov
jbe
loopne
jno
mov
cmp
push
ret
mov
std
add
subb
loop
mov
lods
addr16
ucomiss
pop
and
and
in
jbe
jl
add
cmp
push
fucom
loopne
xchg
xor
call
imul
jbe
xchg
enter
sahf
pop
xchg
in
scas
mov
sbb
jae
insl
sahf
mov
mov
test
int3
mov
push
outsl
sti
push
add
push
mov
mov
push
jge
es
stos
and
sbb
lret
xor
inc
shrl
mov
dec
test
sbb
dec
cmpsl
outsb
add
cwtl
inc
stos
and
loope
sarb
loope
inc
xchg
xlat
pop
xor
xor
pop
lahf
fsubp
mov
mov
lret
or
in
mov
js
jbe
andb
fstpt
out
mov
or
cltd
xor
sub
stc
test
aas
adc
cwtl
mov
push
push
gs
adc
divps
cmp
inc
jg
xchg
xchg
cmp
into
sar
mov
pop
inc
add
fmul
call
outsb
clc
loope
lahf
in
leave
bound
and
stos
jb
leave
addr16
add
push
push
outsl
dec
xchg
sbb
mov
pop
mov
mov
clc
add
xor
test
inc
popf
jecxz
idivb
xchg
adc
into
in
ss
dec
sub
sub
cmpsl
out
ds
pop
jp
repnz
mov
add
fsts
sub
add
inc
inc
inc
cmc
mov
test
rolb
lods
adc
jge
inc
fs
xchg
jns
dec
lock
cmc
push
int
arpl
add
mov
nop
ror
pop
adc
and
push
lcall
jno
outsl
daa
sarb
in
outsb
lds
sbb
cmp
sbbb
es
outsb
cmp
and
mov
out
dec
lret
cmc
out
dec
sub
mov
mov
sub
add
mov
fwait
push
sti
jle
jae
dec
enter
inc
sub
clc
ret
add
test
cmp
dec
pop
push
dec
rclb
adc
inc
adc
jp
and
pop
add
out
gs
push
mov
mov
xor
leave
and
or
mov
add
add
pop
es
fdivrl
dec
insl
fwait
popa
or
int3
sub
aas
jp
stc
cmp
and
mov
out
int3
data16
lock
int3
jmp
push
aad
xchg
iret
es
cmp
or
stc
jns
es
int3
or
xchg
or
mov
fnsave
cwtl
xor
push
xchg
xchg
jmp
add
xlat
fldl
inc
cli
inc
outsb
jno
test
push
hlt
or
cs
cmp
loope
cmp
scas
cmp
fucom
fiadds
sub
mov
cmp
cmpsb
inc
mov
inc
push
insl
pop
dec
jnp
adc
test
add
mov
mov
xchg
lock
shl
lods
inc
pusha
inc
and
into
fidivl
mov
mov
push
ret
xchg
jne
mov
cwtl
inc
dec
fcmovnbe
lods
mov
cltd
test
in
pusha
mov
push
fists
adc
jecxz
pop
ret
mov
nopl
outsl
push
loope
lods
aam
arpl
clc
inc
mov
scas
xor
mov
pop
push
push
bound
out
xchg
sahf
pop
das
jecxz
sbb
sub
and
push
pop
mov
jecxz
jno
dec
stos
and
divl
xor
cs
fwait
xchg
int3
adc
xor
shll
sub
lcall
cmpsb
rcrb
or
aad
mov
sbb
dec
test
daa
faddp
movsb
xor
fcomp
fldt
sbb
lret
js
dec
mov
mov
xchg
pop
jp
xlat
cmc
cmpb
out
sub
mov
test
cld
insb
imul
test
mov
fbstp
sbb
mov
add
leave
inc
cli
or
scas
jnp
js
scas
icebp
dec
lahf
add
cld
hlt
xchg
cmp
and
bound
add
orl
mov
mov
scas
add
jl
fcoml
sbb
test
shll
enter
xor
jge
jmp
es
or
sti
xchg
lahf
push
test
testb
jno
js
mov
xchg
shrl
mov
mov
loope
add
or
xor
scas
push
int
sub
jp
jle
xor
adc
pop
xor
xchg
lods
dec
mov
sub
xorl
mov
cmpsb
testl
and
xchg
adc
cmp
sub
inc
xor
aam
je
sbb
mov
lahf
lcall
sbb
xchg
aad
jmp
mov
xchg
shrl
and
add
push
add
std
adc
mov
xor
shrl
push
push
test
mov
in
icebp
dec
and
pop
subb
xor
fwait
add
sahf
mov
pop
test
mov
jbe
std
push
loope
jnp
adc
inc
mov
fs
pop
pop
cmpsb
mul
addb
or
jnp
gs
adc
sub
insl
push
stos
std
or
jbe
insb
push
jno
punpcklwd
data16
inc
push
dec
js
adc
ret
loope
mov
sub
mov
fisubs
insb
adc
je
jae
xor
sti
push
push
sub
xlat
and
mov
xor
inc
push
jbe
jb
push
pop
xchg
pop
in
mov
ret
popa
pop
fdivrl
mov
clc
mov
xor
push
icebp
iret
les
add
mov
ljmp
rorb
inc
pop
pop
fstl
out
jp
inc
pushf
sbb
xor
cmp
inc
adc
or
shl
ljmp
push
dec
outsl
xor
pop
and
stos
das
mov
testl
test
insl
adc
inc
in
imul
popa
adc
sarw
lea
push
mov
inc
jnp
jecxz
push
dec
aaa
in
test
xor
sub
in
jno
jae
xchg
bound
cmpsl
xchg
ret
sbb
popa
jns
rolb
das
lea
xchg
add
loope
xchg
xlat
cs
vunpckhps
insb
lret
xor
mov
or
cld
mov
std
jne
into
insb
ja
in
lods
push
bound
dec
sti
imul
jmp
repz
inc
cmp
cmp
pop
lea
inc
divb
movsl
into
add
inc
push
fcoml
loope
enter
daa
lcall
int3
das
mov
jbe
add
cmp
push
cmc
add
or
mov
push
cld
insb
sub
mov
std
dec
push
fstpt
and
sti
test
popa
adcb
stos
pop
and
sbb
inc
fwait
das
mov
pop
pushf
fiadds
push
xor
mov
dec
es
incb
inc
imul
fistpl
sub
dec
adc
lods
mov
mov
mov
cmpsb
loope
popf
or
mov
repz
xor
cli
mov
pshufw
push
mov
dec
jae
daa
jp
minps
mov
into
subl
mov
dec
mov
jns
aad
popa
sub
jl
xchg
add
rcll
das
jno
and
pop
sbb
inc
jno
pop
into
sbb
decb
or
mov
mov
out
push
xor
cli
adc
push
sub
dec
in
jne
fs
jne
outsl
addb
add
rolb
in
add
and
stc
bound
movsb
insb
rolb
dec
push
add
mov
pop
repz
es
add
gs
lcall
stos
shll
inc
jo
adc
ljmp
push
stc
cmp
out
mov
push
add
sbb
stc
outsl
incb
sbb
lea
mov
ret
lret
mov
inc
adc
xchg
mov
xchg
es
mov
dec
std
xchg
fstps
xlat
ja
and
and
add
repnz
aad
lret
cmp
cmp
push
push
pushf
cld
bound
enter
and
rcll
addr16
push
fmull
fdivs
mov
repnz
fmull
stc
jb
into
inc
adc
add
mov
pop
or
jae
cli
dec
pop
and
dec
pop
inc
loop
mov
fs
imul
iret
adc
xchg
xor
mov
stc
push
icebp
leave
and
out
jnp
push
sbb
dec
scas
cmp
insb
sbb
rorb
and
sarl
jae
adc
repz
xor
add
pop
jb
mov
fcomip
xchg
gs
popf
cwtl
jno
inc
or
xor
inc
fnstcw
mov
adc
insl
clc
scas
mov
in
xor
jl
fwait
mov
cmpb
icebp
out
loopne
scas
xchg
jge
push
adc
pop
mov
sbb
inc
xchg
rcl
imul
cmp
es
inc
sbb
mov
mov
pop
mov
fidivrl
js
push
lcall
nop
jl
mov
add
inc
sbb
je
bound
or
fisttpll
pop
pop
lods
in
add
cmpsb
cmpsb
cmp
xchg
sub
cs
jle
in
pusha
xor
and
lcall
sbb
dec
sbb
xor
add
mov
into
or
xchg
pop
mov
and
jle
loopne
or
mov
rolb
xchg
das
xorl
lahf
dec
cmp
inc
pop
mov
jae
in
pop
cmp
sub
loopne
xchg
sub
loope
cmp
in
fisttps
inc
sti
mov
add
inc
xor
roll
mov
add
icebp
dec
in
ss
imul
repz
ja
int3
in
jmp
lahf
adc
adc
dec
add
dec
je
stos
daa
mov
mov
inc
loope
push
mov
imul
cs
ja
aam
jl
scas
fcoms
lods
add
inc
insb
loopne
adc
jle
and
dec
pop
xor
lret
inc
popf
int3
sub
ret
addl
arpl
pushf
pop
xor
pop
test
fildll
shll
mov
add
mov
jne
movsb
cltd
paddusw
mov
mov
mov
add
add
addr16
push
mov
mov
fidivs
stc
add
mov
pushf
shrb
stos
dec
jno
mov
xlat
jae
inc
enter
jno
out
scas
push
das
imul
jb
inc
xchg
addr16
gs
dec
push
out
adc
cmp
mov
sti
xchg
cmp
inc
xchg
ds
popf
pop
or
jnp
or
and
into
sub
sbb
push
pushf
jge
xchg
in
push
inc
mov
or
xor
test
shl
imul
movsl
push
pop
cmp
cmpl
icebp
adc
cmp
lret
adc
addr16
pop
mov
loopne
dec
mov
mov
mov
test
and
int3
insb
enter
xor
pop
jae
scas
aaa
fsubs
nop
sbb
movd
or
insl
aam
ja
in
ss
insb
pop
scas
stos
mov
mov
push
insb
scas
popf
jbe
bound
mov
ljmp
inc
mov
dec
xchg
lock
int
in
lock
insl
jns
dec
cmpsl
es
sbb
into
xchg
imull
shrl
sbb
push
jp
adc
shrb
jl
notl
push
sahf
fbld
enter
cld
xor
inc
xlat
or
out
add
das
lods
add
jns
push
and
cmp
sti
push
mov
inc
sub
repz
das
jmp
lods
add
sub
rol
xor
cmp
pop
mov
inc
fsubs
add
mov
icebp
inc
orl
mov
sub
jae
stos
xor
xchg
loope
imulb
pop
pop
adc
test
out
sub
stos
push
mov
aad
dec
je
loope
add
in
dec
xchg
mov
inc
adc
inc
sbb
ds
mov
cwtl
movsl
leave
adc
sbb
lret
icebp
pusha
and
cltd
enter
and
mov
inc
sub
repnz
mov
rcl
mov
adc
sahf
inc
jecxz
add
testb
bound
or
lahf
and
cmpsb
sub
add
xor
or
repz
push
or
sbb
xor
mov
outsb
js
push
test
jo
inc
ljmp
in
mov
push
cltd
adc
popa
sbb
inc
lea
dec
out
scas
stos
adc
bswap
sbb
sub
sbb
xchg
mov
xor
adc
outsl
out
sti
push
shlb
mov
test
cmp
cmp
in
stc
stos
loope
or
lock
xor
fcomps
mov
test
movsl
je
lcall
jg
sbb
lret
call
lcall
fsts
icebp
inc
sbb
test
pop
mov
cmpb
or
fstpt
cmp
or
jb
jb
in
push
int3
push
inc
xchg
scas
iret
mov
mov
leave
push
sbb
out
fsubs
adc
and
ret
mov
enter
inc
xchg
add
loope
mov
aad
inc
gs
adcl
or
mov
jg
dec
inc
in
adc
enter
jmp
mov
loope
adc
jl
scas
xor
lret
outsb
loope
out
sbb
into
lret
test
add
dec
stos
call
lods
insb
xlat
mov
sbb
mov
mov
mov
push
cmp
or
jne
nop
jno
sbb
dec
sbb
insl
mov
or
sbb
jecxz
push
inc
sahf
jb
add
cmp
data16
sub
add
ss
in
mov
insb
imulb
or
loop
adc
mov
mov
push
dec
mov
jle
or
mov
sbb
xor
rcr
aas
jmp
or
fwait
push
inc
mov
lret
xor
cmpsb
repz
inc
xor
mov
icebp
hlt
sub
push
into
inc
mov
enter
daa
push
fwait
lock
sahf
stc
aas
test
xacquire
sub
shlb
test
inc
into
ja
push
je
adcb
inc
cs
push
aaa
iret
or
insl
mov
pop
and
loopne
mov
dec
imul
repnz
and
mov
mov
adc
data16
cmp
sbb
inc
cmp
sub
mov
lret
ds
inc
cmc
out
pusha
nop
nop
loopne
sub
mov
add
mov
adc
stos
sbb
aaa
in
icebp
mov
js
mov
ret
mov
les
scas
fld
jbe
jne
dec
stc
mov
ror
shll
xchg
sub
add
cs
in
jecxz
inc
push
xchg
lock
push
mov
xchg
push
std
xor
bound
jge
ds
xorb
pop
or
mov
jmp
jl
stc
insb
rcrb
divl
cmp
lds
jne
ret
and
and
mov
xchg
loope
sti
aam
cltd
pop
jecxz
pop
push
inc
daa
scas
clc
jo
push
movsl
ljmp
mov
sbb
lock
pop
into
inc
xchg
imul
xchg
or
sti
sub
mov
shlb
pop
out
pushf
cld
sti
lods
push
fisubs
cld
ret
and
push
mov
mov
push
jb
add
ljmp
int
or
sbb
gs
dec
mov
fisttpl
and
adc
test
shl
xchg
jnp
push
in
add
pushf
mov
addr16
or
jae
bound
mov
decb
lret
rol
and
jae
add
sti
fdivr
scas
or
or
jbe
mov
insl
mov
jae
push
mov
add
iret
mov
and
mov
cmp
int3
sahf
add
jne
fildl
adc
push
add
cmp
mov
jge
cmp
dec
lock
mov
add
inc
insb
aam
or
pmovmskb
sbb
fistl
mov
push
pop
pop
add
nop
movsb
sti
bswap
iret
and
das
xor
add
inc
imul
pop
into
loopne
xchg
sub
add
cmp
push
mov
int3
popa
add
lock
int3
pop
fcoml
imul
jns
scas
mov
adc
in
lret
or
sahf
adc
test
in
sahf
popa
jle
cli
mov
sahf
into
pop
pop
jns
scas
clc
pop
push
push
les
adc
andl
int3
inc
cmpsl
fwait
lret
xor
into
mov
pop
mov
fidivs
test
es
and
lcall
jae
scas
mov
sub
pop
out
adc
roll
sti
cmp
pop
out
inc
mov
and
jecxz
stc
mov
mov
or
repz
mov
sbb
mov
sub
xchg
mov
xor
pop
psubusb
pop
push
cmp
addr16
fs
dec
mov
insb
cli
stc
push
push
sub
jecxz
dec
aad
xor
lock
mov
inc
data16
fsincos
loop
shr
in
cmp
sbb
rcr
jecxz
test
and
inc
push
pop
xor
mov
aad
sub
insb
in
xor
lahf
pop
mov
repz
add
ret
rcrl
cmp
pop
and
lods
test
mov
add
xchg
push
mov
popf
and
divb
fs
aas
fdivl
nop
cmp
dec
fwait
gs
push
jmp
cmp
jns
adc
xor
mov
and
adc
mov
or
inc
mov
loopne
test
fdivs
in
icebp
push
mov
add
cmp
notb
pusha
adc
pushf
jmp
sub
jle
movsb
dec
test
shll
sub
dec
xchg
outsl
orb
sbb
push
repnz
cmpsb
or
scas
dec
ficoms
push
in
push
pop
mov
push
mov
idiv
jp
pop
sub
mov
and
xchg
nop
subl
mov
scas
in
fidivrl
inc
sbb
mov
lret
adc
push
pop
je
cmp
push
arpl
out
scas
mov
ss
lock
pcmpeqd
cli
ror
xor
mov
in
lcall
lock
mov
movsb
pop
mov
push
cmpsl
negl
and
pop
pop
xchg
sub
xchg
loope
xchg
jae
sbb
sbb
fmuls
cmp
bound
or
push
out
push
mov
inc
sbb
stc
ret
sub
clc
repnz
jbe
loopne
push
inc
or
test
insl
inc
lds
jns
das
jns
aad
ret
out
cmp
mov
push
jns
cmp
frstor
or
jne
cmpsb
insb
inc
cmp
cmp
leave
inc
call
pop
sbb
and
out
and
jno
mov
cmpsl
mov
stc
adc
inc
and
lcall
jo
mov
pusha
loope
rcrb
sub
sub
scas
sub
roll
and
bound
bound
int
dec
adc
cmp
cld
and
and
jp
xchg
dec
cld
mov
jno
mov
xor
test
lret
adc
dec
and
int3
add
imulb
loopne
out
stc
je
stos
call
enter
stc
mov
aad
cs
stos
adc
dec
xor
inc
mov
mov
xchg
push
lret
rolb
jno
cs
cmp
pop
xor
xchg
mov
pop
cmc
pop
xchg
pop
add
jmp
das
xchg
repz
mov
outsb
ficoms
or
clc
pop
daa
aaa
cwtl
sbb
and
add
out
mov
clc
cmp
xchg
repnz
sub
mov
imul
pop
sub
pop
sub
lret
fists
pushf
push
out
jg
push
or
pop
inc
xor
xor
mov
dec
and
mov
ss
pop
mov
out
push
fbstp
jg
push
mov
sub
pop
lahf
xor
ja
dec
add
xchg
js
dec
sbb
mov
mov
sbb
jo
push
mov
outsb
mov
stos
dec
mov
push
pop
popa
xchg
scas
sbb
rorb
lret
jp
xchg
les
in
mov
and
push
xchg
xchg
dec
xor
sub
sbb
push
lea
lock
loope
add
sub
or
fisubs
push
jb
test
mov
adc
mov
clc
fstl
test
in
inc
jnp
fcmovne
call
mov
rcrb
call
addr16
shll
out
daa
sbb
add
push
jle
pop
mov
mov
xchg
dec
push
add
jecxz,pt
ja
lods
repnz
cmp
pop
orb
mov
jmp
repz
sbb
dec
adc
clc
sahf
adc
xor
mov
jae
inc
cmpsl
pop
jae
mov
push
sub
les
add
add
inc
dec
jecxz
mov
inc
jecxz
jge
pop
andb
arpl
mov
push
in
pusha
or
sbb
je
adc
fildll
fiadds
movsb
or
pop
or
movsl
or
outsl
xchg
inc
shll
xor
ja
test
cmp
andl
adc
push
into
sahf
add
xchg
mov
and
sbb
mov
mov
push
dec
add
jg
stos
jne
movsb
jge
sti
inc
add
fdiv
divb
mov
lods
pop
into
js
cmp
mov
aaa
xor
stos
cmp
ret
or
in
xchg
out
pop
mov
jmp
sub
ds
mov
outsl
pusha
lea
push
mov
mov
jmp
jae
jns
notl
cld
jne
sbb
sbb
sbb
xor
lret
lcall
andl
mov
push
xchg
into
sahf
jl
cld
in
in
data16
imul
daa
aas
popf
lds
pushf
and
test
hlt
hlt
cmp
mov
popl
fsub
xchg
cmc
es
push
pop
fdivrl
inc
cmpb
and
mov
imul
stos
mov
enter
dec
adcb
enter
push
aam
xchg
pop
arpl
mov
fwait
dec
pushf
jb
cmpsb
stc
addl
push
and
movsl
dec
pop
loopne
mov
xchg
lods
sahf
pop
or
push
add
sub
or
jns
sahf
nop
mov
and
mov
loop
and
add
push
cmp
lret
xor
xchg
or
test
enter
push
nop
leave
movl
add
push
mov
push
inc
std
jp
out
pop
cmp
or
mov
and
pop
aas
cltd
adc
mov
dec
int3
mov
xor
fdivs
xor
popa
jns
movl
mov
sbb
or
jecxz
fprem1
ficoml
inc
pop
push
cmc
add
pop
mov
sbb
adc
or
jno
jmp
add
jg
dec
jno
lock
mov
mov
mov
sbbl
inc
xchg
femms
push
push
rcl
pop
sbb
popf
lds
adc
imul
push
sub
mov
sti
sub
pop
push
or
test
lahf
jb
dec
loop
rcr
shll
pushf
les
ss
mov
pop
push
push
popa
inc
push
inc
aam
push
in
jecxz
into
sarl
scas
adc
mov
adc
test
mov
addl
cltd
mov
aad
insl
out
imull
cmp
addr16
pop
imul
decb
inc
cltd
aad
cmp
push
jmp
pop
addr16
adc
addl
cmp
js
cmp
insl
flds
adc
xchg
fbstp
mov
stos
into
insb
data16
push
loopne
les
xchg
je
sbb
les
mov
fcoms
push
sti
cmp
push
clc
aam
movsl
pushf
push
jle
jmp
add
and
dec
in
adc
mov
jns
mov
in
push
aas
pop
push
jl
pop
and
int
or
les
adcb
in
and
enter
ja
fcoms
adc
mov
insl
fcomps
sahf
add
jl
or
sbb
jno
mov
bound
test
cmp
push
xchg
pusha
cmp
jl
loope
fildl
jl
pop
fdiv
push
stos
dec
out
and
dec
push
test
scas
shrl
pop
adc
pop
push
push
ret
push
rol
shl
rorl
inc
fcompl
jns
or
cwtl
mov
inc
sbb
sbbl
jb
inc
movsb
add
lret
pop
scas
inc
inc
pop
enter
in
jns
add
sbb
movsb
ret
pop
stos
dec
or
push
dec
incb
jle
repnz
push
xchg
push
rolb
jmp
adc
inc
xchg
dec
adcb
orl
sarl
lock
dec
les
repnz
cmp
mov
or
test
adc
insb
adc
cli
mov
scas
dec
jg
or
aam
shll
jecxz
sahf
dec
jb
cltd
into
pop
mov
jle
dec
stos
fdivrl
inc
or
rcl
dec
adc
mov
loop
inc
int3
jne
sbb
jne
push
addb
pop
mov
ljmp
adc
fadds
adc
pop
dec
sahf
add
addr16
mov
dec
push
xlat
setle
inc
jae
in
pop
repz
adc
fisubs
adc
int
pop
add
in
call
cmp
mov
imul
or
sub
or
jecxz
push
add
rcl
dec
or
mov
mov
mov
jae
pop
adc
mov
test
insl
adc
je
jbe
lret
and
push
sub
test
sti
call
push
sbb
and
roll
mov
fildll
mov
mov
mov
cmp
arpl
fistps
mov
cmp
mov
or
pop
push
lcall
sbb
add
loope
cmp
and
push
dec
fisttpll
mov
push
int3
add
ret
cmp
lds
rclb
dec
xor
js
inc
rorl
scas
addr16
mov
adc
int3
pop
and
xlat
aas
mov
mov
addl
in
and
loop
mov
int
mov
addr16
rep
pop
ja
mov
fwait
push
ret
mov
dec
ja
mov
mov
hlt
add
xor
push
sbb
sub
test
push
sbb
push
xlat
add
jecxz
jl
xchg
inc
popf
sbb
dec
dec
stos
sbb
insb
and
mov
xor
xchg
xlat
sub
dec
cmp
inc
or
sub
push
inc
jle
stc
cmpsl
mov
fstps
xor
test
outsl
and
inc
xchg
stos
mov
cli
xor
mov
in
add
xchg
mov
sbb
fbstp
or
ja,pt
lcallw
adc
mov
repz
xor
repz
lret
xchg
xchg
mov
rcl
and
jecxz
repz
mov
cmpsl
xlat
hlt
ret
jno
inc
pop
call
lahf
pop
dec
popa
add
xor
inc
hlt
adc
rcrl
inc
adc
iret
lea
jnp
jbe
addl
xchg
out
test
mov
mov
pop
mov
stos
mov
das
push
pop
jns
add
hlt
jle
push
adc
cmp
mov
push
jmp
daa
xchg
fistps
push
jecxz
outsl
sub
ja
sbb
inc
cmpb
and
add
fs
or
add
mov
add
cmpsl
mov
leave
loopne
fprem1
aad
add
push
ja
push
dec
popl
pop
push
repz
stc
sbb
ds
mov
sub
push
xlat
sbb
push
fcompl
iret
insb
pop
loope
dec
jmp
scas
pop
enter
daa
dec
and
xor
inc
aaa
mov
mov
mov
xor
lock
ljmp
lds
fsubs
lahf
push
lcall
mov
outsb
loop
lods
lahf
push
xchg
add
loopne
orl
test
inc
ror
jg
push
cs
insb
cmp
loop
pop
or
jne
sbbl
mov
mov
inc
mov
sbb
add
sub
sub
js
out
push
repz
stc
sbb
and
rcll
add
jb
fisubl
mov
cmpsl
inc
in
mov
mov
call
divl
xor
add
stc
adc
dec
mov
inc
out
stos
push
cltd
and
dec
repnz
xchg
sbb
pushf
js
decb
in
imul
fimull
sub
jp
sbb
push
mov
mov
std
out
fcompl
mov
cmc
leave
bound
cmp
push
std
cmc
adc
dec
iret
in
add
mov
pop
push
dec
adc
xor
sarl
ljmp
jmp
in
rclb
mov
mov
shrl
or
imulb
in
dec
mov
dec
iret
xchg
push
pop
xchg
sbb
mov
mov
out
int
or
mov
aad
mov
sbb
cltd
or
lods
xor
in
adc
cmp
pop
fnstsw
jbe
mov
lahf
dec
jbe
pop
imul
dec
shrl
lods
lcall
xchg
cmp
insb
add
xchg
jnp
mov
sub
add
and
ja
ja
sti
and
loop
cmpsb
jb
pop
add
pushf
mov
andb
jmp
mov
mov
or
jmp
xor
add
lods
enter
loope
mov
mov
cld
jecxz
dec
dec
inc
adc
push
test
test
ss
movsl
jne
inc
mov
mov
jbe
faddp
sub
xchg
mov
mov
sub
sub
xchg
into
lret
aad
cmp
mull
insb
movsl
jbe
and
mov
add
mov
js
dec
cmp
sbb
xor
ficoml
movsl
or
stos
das
add
mov
mov
mov
and
adc
jo
sub
rcrb
pop
fldl
push
aad
mov
jb
test
push
mov
popa
cmp
xor
repnz
popl
aaa
test
and
pop
int
icebp
and
in
fwait
adc
aam
cmp
addr16
jg
cwtl
pop
push
sub
sbb
inc
jmp
jg
pop
loope
cmp
outsl
and
xor
pop
shll
jge
divl
push
sub
pop
mov
popf
sub
pop
pushf
xlat
cmp
cmp
mov
cs
push
stos
push
pop
pop
jmp
adc
mov
add
repnz
cmp
pop
xor
add
cmp
push
push
xor
add
sbb
cmp
outsl
mov
and
pop
xor
shl
aas
movsl
adc
jbe
scas
out
icebp
jbe
pop
cwtl
xchg
mov
gs
mov
int3
mov
hlt
cmpsl
xchg
dec
mov
push
cmp
mov
mov
insb
mov
xor
mov
movsb
push
lahf
sbb
sbb
minps
flds
dec
push
sbb
jns
xlat
mov
ljmp
pop
jne
pushf
pop
xchg
lea
jge
cs
jecxz
arpl
xlat
fldenv
xorb
test
icebp
cmp
pop
mov
into
jp
mov
mov
and
jle
cld
push
loopne
adc
pop
enter
mov
sub
or
jnp
aad
sub
aam
in
dec
les
in
je
or
ja
sub
sbb
jnp
mov
mov
push
pop
mov
frstor
and
inc
lret
insb
mov
or
loop
push
sub
xor
xor
mov
mov
or
cmpsb
out
test
pop
jb
mov
push
xlat
popl
pushf
sahf
mov
push
fildl
pushf
add
pop
mov
mov
dec
ret
xchg
out
pop
push
inc
and
cmp
adc
xchg
mov
push
dec
xlat
imul
fmul
mov
push
adc
jo
cltd
dec
push
jbe
mov
pop
or
mov
imul
pop
shrl
lcall
xor
cmp
add
scas
adc
push
cmp
js
dec
hlt
orb
mov
and
fldt
push
and
pop
add
mov
or
lahf
test
adc
aas
jns
fdivrl
imul
jecxz
fldcw
jno
outsb
add
insb
mov
xlat
or
dec
sub
dec
loope
mov
sbb
mov
bound
test
pop
int3
lret
xor
sbb
lahf
pop
es
push
sbb
test
scas
xchg
pop
adc
loope
mov
dec
daa
jecxz
mov
xor
push
dec
outsb
inc
or
xor
sbb
adc
or
inc
and
leave
sub
xor
or
into
fdivl
jns
imul
or
mov
xor
insb
sub
mov
and
adc
stc
pop
idivb
mov
and
inc
jnp
pop
rorb
add
or
fsts
and
mov
sub
pop
jae
cmpl
sbb
mov
add
sbb
add
icebp
inc
imulb
mov
in
sbb
inc
pushl
push
jmp
jo
xor
adc
out
dec
ds
hlt
out
jo
pop
push
push
xor
and
mov
pop
add
cmpsb
sbb
xchg
pop
inc
popf
fdivrs
or
std
or
enter
xchg
int
mov
cmp
mov
mov
xor
mov
or
mull
cmc
loope
xchg
xor
cld
pop
out
enter
cmpsb
lret
loope
mov
xor
xchg
pop
cwtl
sbb
and
or
cmpsl
fwait
insl
adc
mov
rolb
movb
out
cmp
in
xchg
jmp
aas
jle
loop
or
inc
lods
push
into
lcall
xchg
sbb
insl
mov
gs
or
pop
rcrb
mov
popf
in
aas
xor
push
in
and
mov
jp
arpl
and
into
adc
push
jge
test
push
test
add
lahf
les
jnp
push
mov
inc
dec
add
mov
cmc
pushf
enter
lahf
mov
lahf
mov
test
mov
pop
jp
jl
fnstcw
enter
dec
pop
mov
push
mov
aaa
jno
sub
jp
adc
adc
loope
cmp
cs
jmp
cld
clc
pop
nop
xchg
and
cmp
xchg
sbb
mov
aam
add
xor
repz
int
or
add
fdiv
adc
testl
sahf
daa
cmp
ja
cmc
roll
orl
sbb
push
imul
test
jecxz
sub
imul
icebp
inc
xor
add
out
hlt
aaa
add
and
aas
shr
insb
xor
mov
fisubs
lret
lds
mov
orl
stos
call
addr16
sti
inc
xchg
out
fcoms
xlat
sub
sub
ret
mov
scas
movb
mov
lds
jb,pn
and
outsl
xor
push
lahf
adc
stos
stos
icebp
dec
out
subl
push
cmp
je
sub
pop
imul
adc
xor
mov
pusha
adc
xor
and
mov
shrl
mov
imul
push
into
pop
mov
jae
cmp
add
mov
mov
int
pop
inc
lret
ret
and
int
inc
in
push
or
movsb
nop
xchg
and
stos
test
xor
mov
mov
pushf
jecxz
das
push
int
stc
popa
out
pop
out
lea
dec
test
push
xchg
push
pop
jmp
inc
je
aad
jecxz
icebp
add
inc
sbb
mov
pop
cltd
pop
mov
movsb
dec
ret
stc
lea
push
mov
incb
or
lcall
dec
in
push
mov
mov
iret
mov
nop
inc
cmp
and
movsb
jecxz
clc
pusha
jg,pn
xorl
sti
cmc
mov
and
test
push
lcall
inc
cld
std
add
scas
jl
inc
cmp
xor
adc
inc
jecxz
cltd
out
popl
xchg
mov
cld
inc
iret
frstor
inc
xor
in
and
loope
mov
xor
lret
mov
popa
jl
inc
test
cmp
inc
repz
jne
pop
pop
dec
aam
mov
mov
loopne
das
cmp
or
nop
xor
mov
cs
add
lods
cmpsl
inc
mull
shrl
mov
push
or
hlt
pop
mov
cwtl
sbb
clc
xchg
jl
lods
stc
push
sub
and
into
dec
sub
aad
mov
fs
mov
shr
inc
lods
and
pusha
je
push
fdivrs
arpl
mov
adc
adc
and
mov
mov
xlat
adc
nop
push
in
inc
faddl
xor
loop
mov
mov
add
xor
pop
fwait
sbb
fstl
loope
inc
mov
or
and
aam
and
out
rcrb
jmp
inc
adc
fidivrs
cltd
sbb
icebp
stos
inc
cmp
imul
cwtl
add
das
push
cwtl
daa
ret
push
fidivs
cltd
mov
mov
push
pop
cmc
push
cmp
mov
lods
movsb
ja
in
sub
jl
aad
cld
inc
loopne
rorb
lcall
out
ficoml
add
or
inc
xchg
sbb
dec
or
cld
xor
in
mov
inc
shlb
jecxz
xchg
pop
stos
insb
icebp
lods
xor
and
in
or
in
xor
and
inc
push
adc
mov
xchg
mov
jo
daa
enter
pop
popa
fwait
shll
lods
into
and
jbe
sub
pop
mov
jae
cmp
pop
inc
pop
cmp
in
into
stc
push
arpl
mov
dec
jle
push
pop
test
jmp
popa
and
and
scas
test
or
mov
pop
push
jb
mov
fldl
cmc
cmp
pop
adc
stos
cmp
scas
call
jns
fldcw
aaa
fwait
cwtl
and
sub
loop
jg
and
adc
call
push
push
cmp
cwtl
add
pop
mov
xor
fwait
out
pop
xchg
arpl
std
and
cmp
divb
loop
pop
or
insb
adc
jae
in
pop
scas
mov
cmp
sbb
out
imul
or
pop
gs
mov
test
fcoms
fisubrs
dec
cmc
in
and
aam
jl
imul
icebp
rcll
dec
movsb
add
cltd
mov
add
and
jecxz
cmpsl
and
clc
push
fwait
das
mov
xchg
sbb
aam
nop
dec
icebp
mov
cmp
sar
or
push
jae
aas
les
xchg
pop
xchg
mov
in
call
sub
mov
mov
jg
and
lret
and
je
adc
or
into
or
mov
xor
jge
loopne
mov
jle
nop
call
aad
addr16
mov
cmc
sahf
sub
addr16
adc
call
insb
jne
fdivl
jb
orb
cmp
shl
or
fidivrl
dec
and
push
jmp
and
or
mov
sub
xlat
mov
sub
add
mov
adc
push
pop
and
mov
sbb
mov
adc
push
sbb
out
mov
mov
cmp
loopne
add
push
je
inc
rcll
fwait
call
xchg
dec
xor
ss
scas
stc
jmp
outsb
and
inc
lea
add
sub
cmp
cltd
jns
das
or
fcompl
filds
aaa
mov
cwtl
add
cli
pushf
out
push
cmpsb
test
lcall
in
and
adc
inc
adc
subl
cs
ljmp
mull
mov
adc
adc
icebp
pop
dec
hlt
sbb
jmp
mov
and
jp
and
int
inc
pop
repz
fsub
mov
jbe
inc
test
lahf
repnz
and
sete
pop
in
cmc
dec
and
lret
cmp
inc
in
repz
loop
inc
xor
xchg
xchg
fs
and
mov
shrl
popa
dec
pop
inc
cltd
repnz
xchg
push
jnp
stos
mov
arpl
loope
xor
mov
movb
or
inc
push
cmpsl
jl
sub
inc
fsubr
mov
mov
ret
cmc
js
add
dec
ret
dec
and
fs
test
iret
imul
int3
add
mov
adc
adc
leave
pop
xchg
mov
idivb
dec
pop
sbb
push
mov
aas
lea
inc
outsl
sbb
mov
jmp
dec
loopne
inc
in
add
push
mov
insb
pop
clc
cmp
sbb
pop
push
fs
xor
dec
mov
push
mov
ss
add
icebp
and
cltd
xchg
jecxz
push
add
mov
out
mov
lods
pop
icebp
inc
stos
pop
inc
cld
fisubrl
cs
xor
push
jl
movsl
or
test
xor
nop
sti
jno
popa
jbe
hlt
cwtl
mov
mov
xor
push
cmp
ljmp
daa
insb
inc
or
add
stc
daa
dec
or
lret
scas
push
popa
sahf
fstpt
leave
insl
or
adc
dec
add
xor
loope
and
or
insl
and
outsl
fdivrs
stc
cmp
sbb
int
cmp
ret
adc
in
xchg
add
mov
jp
clc
push
in
aam
lea
test
pop
test
mov
rorl
lds
push
cmp
stc
movsl
adc
mov
fbld
and
mov
cld
push
out
mov
dec
sub
outsl
loop
mov
add
sbb
add
xchg
mov
jns
mov
mov
cs
in
adc
aas
mov
mov
sub
and
xor
fadds
fmulp
mov
jo
dec
test
outsb
mov
add
into
out
inc
cmp
pop
clts
mov
or
sub
out
imul
shl
fwait
pop
inc
and
push
xchg
dec
stos
das
out
dec
sub
sahf
push
adc
ret
adc
fldl
jl
adc
inc
testb
pop
sarb
in
inc
mov
and
sbb
mov
shlb
sti
int3
pop
add
mov
or
outsl
mov
sub
mov
loope
jno
in
lock
mov
and
xchg
sbb
or
pop
into
adc
int
imul
movsb
mov
sub
shrb
inc
xor
push
ss
xchg
daa
pushf
cmp
pop
dec
pop
xchg
and
mov
mov
test
jg,pn
mov
push
jl
add
not
mov
insb
inc
or
roll
xorl
mov
inc
and
leave
enter
call
jmp
mov
sahf
mov
add
pop
lods
xlat
in
int3
rclb
xrelease
inc
dec
or
xchg
jmp
inc
loopne
outsl
xchg
push
xor
test
test
fdivrs
mov
mov
and
add
pop
js
or
mov
cmp
sub
and
int
sub
out
mov
pop
in
push
stos
xchg
test
out
pop
sbb
test
clc
pop
add
iret
xor
adc
fldcw
mov
mov
jl
xor
adc
lahf
add
and
jl
xchg
fcoms
les
jge
in
scas
sbb
adc
add
mov
mov
sbbb
mov
loope
inc
add
mov
je
push
adc
push
pop
sbb
adc
out
repz
cs
nop
fstl
sub
sub
mov
test
jl
in
int
rorl
mov
xchg
mov
sahf
xor
xchg
mov
jmp
xor
jl
aad
adc
pop
or
sbb
enter
inc
jbe
cs
cltd
cld
popf
mov
dec
jle
cmp
add
or
mov
cmp
lahf
movsl
dec
aas
adc
inc
mov
mov
and
jmp
mov
or
sbb
inc
call
xor
js
adc
outsl
inc
mov
sbb
mov
cs
jmp
or
mov
stos
cwtl
in
inc
loope
add
mov
dec
arpl
sbb
mov
and
mov
iret
inc
or
push
jo
stos
mov
cmc
pusha
test
les
sbb
mov
lahf
and
push
jne
int3
add
scas
mov
ret
pusha
xchg
je
pop
movsb
push
or
add
pusha
cmp
push
jbe
inc
push
cld
or
jl
jae
jecxz
cmp
add
aas
repnz
nop
or
add
xor
loope
xchg
cs
sub
cld
cmpsb
xchg
add
loope
push
mov
ja
dec
loop
or
inc
out
lods
inc
xor
add
loope
fisubs
test
xchg
xchg
es
xchg
out
xor
add
fnstsw
dec
pop
fisttpl
icebp
int
fsubrs
adc
and
stos
jo
inc
sbb
adc
mov
and
or
std
scas
icebp
aad
stos
lods
jl
dec
cmpsl
adc
pop
nop
xchg
xchg
or
adc
aad
sub
cmp
mov
lret
popf
mov
iret
lods
into
dec
jb
in
mov
push
mov
mov
bound
mov
and
xor
and
lods
xlat
sbb
mov
jcxz
adc
lahf
or
pop
pop
repz
jmp
popf
jecxz
cmp
adc
test
cwtl
lock
pop
xchg
enter
mov
popa
ljmp
mov
xorl
xchg
test
in
jl
mov
clc
inc
lahf
jmp
mov
xchg
js
cmp
fcmove
push
test
jmp
add
push
pop
and
lods
fistpll
push
xchg
scas
ds
daa
pop
adc
repz
xor
or
adc
adc
or
push
add
mov
sub
inc
sub
jno
pop
dec
adc
lahf
sahf
add
xchg
in
sbb
add
fldl
mov
into
mov
jle
pop
add
cmc
sbb
iret
pop
and
xchg
sbb
add
push
xchg
or
repnz
sbb
daa
mov
jnp
adc
and
bound
sub
sub
movaps
aad
pop
cld
and
aam
test
int3
pop
add
stos
cmpsb
mov
jle
mov
jbe
mov
rcrb
and
call
test
jecxz
sbb
mov
ljmp
loopne
cs
cmp
iret
xor
push
xchg
inc
sbb
scas
adc
mov
inc
hlt
out
mov
xchg
movsb
cltd
dec
mov
stos
inc
or
sub
pop
inc
dec
push
cmp
dec
push
add
iret
jmp
mov
out
insb
hlt
cltd
or
ds
cmc
lds
adc
xor
call
push
sarb
inc
xchg
test
mov
xor
rcr
outsb
mov
sbb
pop
push
ss
cmp
je
push
insb
mov
stc
cltd
add
push
or
nop
inc
std
sbb
pop
aaa
call
testb
or
inc
das
add
into
jne
push
mov
sti
and
jl
mov
sbb
int3
dec
popa
out
testl
dec
add
mov
gs
push
sbb
loope
push
pop
pop
push
jns
fwait
xchg
sahf
cmp
iret
pop
inc
dec
insb
lds
test
sbb
test
xlat
cli
les
and
mov
jmp
mov
mov
dec
pop
inc
push
lcall
pop
std
es
push
push
mov
int3
xchg
insb
xor
xchg
cmp
stos
mov
sbb
mov
jmp
sbb
into
push
or
rol
and
in
and
push
rclb
push
in
jo
mov
es
mov
cmp
and
push
test
icebp
out
shll
ljmp
jae
cltd
test
pop
movsl
or
gs
xlat
mov
mov
and
pop
push
out
cmp
mov
xor
lds
mov
stos
mov
and
pushf
cltd
dec
add
incb
mov
inc
mov
and
mov
sub
lcall
or
cs
xchg
sub
insl
or
sbb
pushf
negl
js
dec
outsl
fs
aaa
les
inc
and
xlat
loopne
testb
lock
mov
imul
add
push
fs
mov
lods
cmp
les
cmc
mov
in
fdivrs
cmc
cmc
cmp
push
fdivrl
add
and
add
jo
sub
adc
pop
in
clc
cwtl
xor
int3
inc
fcoms
out
push
mov
pop
dec
test
mulb
pop
mov
imul
enter
loope
call
mov
mov
dec
pop
fwait
cs
push
mov
xchg
dec
jge
mov
mov
push
repz
in
xchg
outsb
and
addr16
scas
stc
in
jns
out
cld
in
ds
fdiv
adc
sbb
jno
insb
lcall
fisttps
mov
push
xor
inc
adc
idivl
add
in
jne
pop
push
cs
push
sbb
test
aas
rcl
or
and
cmp
adc
xchg
loope
jg
add
cli
mov
and
jo
and
loop
and
mov
push
sbb
sbb
and
mov
mov
dec
iret
cs
xchg
mov
cmp
aam
pop
xor
pusha
stos
pop
xchg
and
mov
leave
add
mov
loope
stos
inc
xchg
bound
adc
test
hlt
outsb
or
loope
cmpl
dec
add
cld
repz
xchg
addb
daa
xor
inc
in
push
xor
push
cmp
mov
xchg
call
lock
mov
pop
sbb
mov
jnp
sbb
outsl
add
roll
pop
cs
jb
stos
adc
test
ja
in
stos
pushf
xchg
cs
push
jne
cmp
mov
add
fadds
xor
js
sub
andb
mov
jae
inc
pop
pop
in
ficoms
stc
cmp
lea
jg
in
jnp
sarb
in
insb
pop
or
dec
ds
cmp
or
jns
sahf
xchg
mov
rorl
scas
cli
stos
imul
lock
mov
mov
ds
hlt
add
cwtl
enter
xor
pop
lods
fcoms
stos
push
push
stos
inc
xchg
jnp
les
xchg
add
cli
repz
xchg
sbb
int3
loopne
xchg
jp
mov
lods
mov
icebp
cs
adc
mov
dec
inc
cmp
pop
and
insl
subl
push
clc
cmp
jns
or
push
cmp
mov
mov
movsb
dec
and
pop
aam
fsubrl
mov
dec
loopne
push
outsb
or
and
sbb
nop
and
int
adc
mov
icebp
mov
lea
mov
js
adc
test
enter
mov
sub
movhps
and
adc
push
imul
inc
mov
mov
xchg
dec
inc
and
scas
dec
and
int3
outsb
sub
lahf
aam
in
lret
dec
fstp
inc
mov
mov
jp
and
sahf
enter
xor
fs
or
insl
sti
cld
pop
loopne
stos
inc
and
int3
sbb
mov
int3
sub
sbbl
jecxz
or
mov
dec
pop
dec
insb
ficoms
in
ja
repnz
std
repnz
sbbl
jmp
cmp
ds
push
sti
dec
mov
xor
out
adc
lahf
add
mov
sar
adc
data16
and
pmaxub
imul
push
jg
sub
rcrb
and
out
or
push
dec
int3
jne
imul
adc
mov
mov
xlat
je
inc
jle
ficomps
hlt
pushf
jo
inc
cmp
cmp
pop
pop
insb
adc
in
je
or
push
sub
pop
jge
test
jmp
fadd
fwait
push
jnp
xor
es
scas
sub
jl
xchg
sti
inc
adc
ds
mov
out
and
sti
test
xchg
out
push
inc
aad
inc
mov
sahf
xchg
repnz
mov
and
xlat
inc
jge
fsubrs
or
sbb
jo
lret
cmp
imul
xchg
or
and
add
jnp
jp
push
pop
leave
sub
data16
mov
cmp
adc
mov
xchg
pop
icebp
test
push
sti
push
add
mov
loope
inc
adc
insl
and
hlt
rcr
xor
ficoms
mov
cwtl
jbe
mul
adc
jg
ljmp
popf
aad
cs
lock
dec
pop
inc
pop
sub
insl
pop
pop
bound
cld
pop
or
addr16
or
mov
xor
popl
icebp
or
sbb
aad
xor
lret
in
shr
jbe
int3
pop
mov
test
jmp
cmc
mov
xor
orl
movsl
cmpl
mov
int3
scas
mov
push
cmpsl
shlb
add
ret
mov
fsts
pushf
cmp
addl
push
fsubr
mov
int
inc
cs
cmpsb
cwtl
popl
mov
xchg
jnp
add
xor
je
addl
inc
sub
pushf
test
and
add
and
stc
mov
dec
mov
cmp
xchg
jmp
sub
fadd
and
mov
sbb
cmc
mov
paddw
loopne
pop
in
lods
mov
pop
mov
mov
and
fnsave
outsl
lcall
mov
lahf
jbe
and
sub
scas
xor
xor
lcall
and
pusha
or
mov
insb
jge
and
xor
scas
rorl
cmp
add
sub
scas
popf
sbb
and
lcall
leave
adc
jne
push
lahf
xchg
in
or
imul
mov
popl
inc
cltd
cmp
xor
pop
jge
pushf
into
mov
sub
jge
inc
cwtl
ja
aam
nop
pop
out
xchg
int3
mov
and
jae
test
mov
xor
loope
mov
dec
add
rorl
xor
lods
pop
push
negl
stc
push
adc
mov
and
jle
mov
dec
and
cmp
add
mov
aad
ret
push
in
inc
dec
cs
or
dec
cltd
xchg
outsl
out
sbb
cmp
and
aam
test
and
daa
jecxz
repnz
xchg
hlt
scas
mov
and
mov
inc
or
jg
inc
pop
lea
clc
cld
insb
add
mov
cmp
cmp
push
mov
sahf
and
fbld
add
sbb
cmp
outsl
rorl
and
mov
jmp
les
add
push
cwtl
add
aad
cltd
aas
sahf
adc
push
and
imul
scas
dec
or
pop
xor
iret
push
gs
out
adc
sub
inc
mov
xlat
adc
cmove
das
lcall
orl
add
lret
ja
out
jno
sbb
mov
std
mov
or
mov
push
add
pusha
xchg
pop
mov
sub
cmp
stos
ret
jp
jmp
ja
push
pop
jl
push
mov
adc
mov
dec
push
decb
dec
mov
jmp
mov
insl
loope
cltd
jae
jb
mov
jno
push
mov
dec
inc
rclb
jae
xchg
pusha
mov
and
movsb
mov
stos
add
cwtl
rolb
mov
dec
and
mov
shll
mov
dec
shlb
pusha
push
pop
insb
call
pop
fs
mov
mov
push
addb
or
sub
or
nop
mov
xchg
inc
xlat
sub
push
mov
mov
mov
push
cmpsb
xchg
jg
imul
dec
sub
icebp
dec
sub
xchg
add
into
addb
scas
dec
aas
scas
fsubl
sub
popf
mov
lods
push
and
into
sbb
and
dec
orb
mov
and
outsl
les
sbb
add
in
fcompl
cmp
sahf
cmp
sbb
js
xor
cld
out
int3
dec
or
lds
jecxz
adc
sub
adc
inc
into
inc
stos
in
dec
sbb
inc
aam
insl
xor
aad
das
sub
mov
insl
jle
jbe
jae
push
mov
popf
mov
rcrb
pop
add
add
jl
adc
pop
inc
jmp
mov
cmpsb
xor
xlat
ja
jae
xchg
hlt
mov
sbb
dec
mov
je
shl
dec
ja
out
je
sub
push
cli
sub
daa
pop
inc
sbb
mov
mov
out
or
pop
bound
scas
int
rclb
pop
jge
lds
outsl
mov
rolb
shll
or
pop
xor
test
lahf
lret
push
adc
sub
cmp
cld
lret
jmp
stc
cs
subb
fdivrs
jo
xchg
add
add
ror
ja
xor
pop
mov
fwait
lahf
xor
inc
jmp
les
cmp
mov
jge
cwtl
cmp
push
lret
data16
stos
pop
in
je
xor
and
into
lcall
fcomps
fnstenv
push
jl
xchg
lods
fwait
cwtl
sub
std
enter
xor
adc
imul
test
pop
clc
xchg
loop
jl
xchg
mov
into
pop
test
mov
cmpsl
outsb
push
mov
and
dec
cmovp
dec
jp
adc
push
add
daa
es
mov
adc
xchg
and
mov
add
or
inc
adc
lea
insb
dec
add
xor
xchg
test
pop
mov
stos
jmp
pushf
enter
jmp
gs
xor
outsl
icebp
mov
mov
sbb
stos
popf
lret
out
in
nop
sti
fisttpll
mov
sub
imul
and
pop
divl
mov
bound
or
xchg
or
pop
adc
and
pushf
or
lahf
mov
adc
add
aam
adc
or
mov
cmpsb
dec
popf
and
mov
sbbl
out
sarl
sub
aaa
mov
mov
jnp
xlat
add
inc
mov
cs
push
das
sahf
sub
sub
inc
cmp
sub
lods
lahf
jmp
sbb
enter
cmp
mov
push
pop
mov
stos
inc
pop
dec
fwait
jbe
jae
mov
and
das
cwtl
push
push
and
ret
inc
mov
jbe
xor
jle
push
lock
mov
add
dec
add
cltd
cmp
scas
adc
cmp
push
iret
xchg
push
jp
jmp
mov
addr16
cmp
dec
push
add
fwait
roll
fildll
cmpsl
in
loop
xor
add
sbbb
add
cmpsb
fisttpl
lods
and
leave
xor
fimuls
loopne
xchg
jae
pop
mov
test
mov
in
loope
add
xchg
inc
pop
adc
outsl
sbb
in
cwtl
sub
loopne
ror
add
push
jne
mov
and
xchg
rorb
pop
clc
cmp
fs
repnz
aam
ucomiss
cmp
fisubl
jae
filds
jbe
in
inc
mov
pop
mov
cs
push
enter
add
or
adc
testb
aad
ret
xor
pop
jle
dec
add
sub
int3
shll
add
add
xor
adc
les
mov
fildll
xor
push
in
jp
repnz
gs
pop
jns
sbb
test
jp
movsb
test
insb
ret
out
and
iret
push
add
or
xor
cmc
jecxz
in
sub
ljmp
xor
cld
lods
dec
popf
insl
cmp
pusha
lea
inc
adc
sahf
rcl
mov
cmpsl
movsb
jge
incb
aam
xchg
xchg
xor
shlb
dec
xor
inc
pushf
and
sub
sahf
mov
in
jl
inc
push
in
lock
pop
jg
push
or
cli
cmpsb
xlat
mov
insb
gs
sbb
repz
insb
dec
icebp
sub
lahf
repz
test
xor
sub
sbb
push
cs
insl
xor
mov
pop
cmp
inc
jno
cs
add
ja
fndisi(8087
pusha
loop
xor
sahf
aas
fisttps
xor
mov
jp
pushf
fcmovb
cs
adc
cmpsl
lret
fiaddl
sub
mov
and
jb
push
xor
lds
sbb
jns
int3
pop
mov
cmp
or
mov
xor
dec
int
push
sbb
outsl
and
cmp
imul
dec
cmp
sbb
push
inc
addr16
dec
jns
cmp
cmc
imul
inc
mov
lcall
inc
and
push
cmp
pop
or
xchg
aad
or
push
imul
sti
fwait
or
or
lock
mov
shll
mov
cli
pop
mov
fcoms
lret
mov
jno
sti
pusha
xchg
mov
cmp
mov
lret
lods
mov
ret
xchg
adc
imul
jg
xchg
push
divb
mov
jo
fmull
mov
mov
xor
xchg
add
add
clc
xchg
and
or
mov
mov
sub
call
roll
movsl
pop
pop
xor
ja
sub
xor
pop
fs
jg
and
inc
iret
je
into
mov
and
xchg
mov
stc
repz
mov
pop
cltd
cltd
sbb
es
mov
jge
imul
push
in
scas
sub
or
fwait
dec
pop
add
es
lds
mov
cmpsb
in
cmp
sbb
fdiv
ret
outsb
rorl
adc
lods
add
lahf
push
dec
and
sarl
push
push
cmpsl
xchg
mov
fistl
int3
add
insb
orl
pop
ret
xor
xchg
adc
in
stc
rorb
mov
lret
js
adcb
or
lds
jl
cld
inc
jae
mov
les
fldl
dec
dec
sbb
dec
mov
stos
or
sub
mov
sti
push
in
lea
or
insl
push
sahf
mov
out
jl
ficomps
clc
sub
xor
test
xchg
shufps
xchg
int
insb
imul
aad
stos
xor
jo
sti
jle
repz
mov
pusha
pop
sahf
sbbb
shl
ret
xlat
mov
jae
nop
push
pusha
dec
mov
daa
fists
popf
ss
js
mov
cmpsl
inc
xchg
daa
sub
sub
in
insb
fs
mov
push
ljmp
into
jb
fwait
cmp
xchg
cmpsb
test
xchg
scas
enter
and
mov
stc
out
push
loopne
jl
jg
les
fiadds
outsb
pop
adc
in
ja
dec
lcall
mov
lret
xor
push
or
lods
jg
xor
add
repnz
fmull
push
ret
or
js
push
mov
lds
mov
pop
cwtl
enter
mov
adc
push
pop
jl
popa
pusha
ret
or
jno
inc
leave
or
insl
adc
mov
push
leave
cmc
mov
jns
loope
xchg
add
loope
or
mov
mov
push
add
je
jecxz
mov
xor
popf
mov
insb
pop
mov
dec
inc
inc
cmpsl
lods
jmp
dec
sbb
clc
in
out
sbb
pusha
adc
stc
xchg
enter
aaa
aad
and
dec
or
adc
sub
pop
test
jmp
add
cmp
pop
dec
and
sub
inc
clc
inc
popf
adc
ljmp
cmpsl
xlat
and
mov
pop
jmp
pop
insb
loop
mov
mov
mov
int3
push
cs
inc
ds
push
hlt
push
push
pop
xor
or
pop
xchg
dec
mov
cwtl
mov
lods
ja
or
xor
xlat
jp
imul
cmpl
inc
add
sarl
sub
cs
xor
dec
insb
mov
insb
ljmp
xchg
or
cmp
pop
fisttpl
gs
pop
lret
daa
fildll
add
cmp
or
mov
adc
add
mov
pop
inc
inc
inc
rol
cmp
add
mov
mov
int
push
inc
iret
inc
and
xchg
repnz
rorl
adc
sbb
or
and
movsb
jnp
mov
inc
frstor
and
mov
lahf
xor
xchg
push
scas
loop
mov
add
fbstp
add
or
bound
mov
enter
mov
dec
lods
icebp
fs
addr16
outsl
std
dec
imul
mov
cli
int3
mov
jno
push
enter
faddl
dec
lea
pusha
stos
pop
mov
cmc
pop
or
push
pop
jle
or
mov
popf
push
cmpsl
insb
cs
jg
jne
in
mov
out
and
add
and
mov
mov
add
adc
int3
inc
lods
mov
ja
xor
in
andb
jg
cmpsl
push
scas
pop
cmpsb
sbb
xorb
and
adc
subl
jb
mov
insl
js
pusha
scas
and
pop
mov
mov
loope
jbe
sub
cltd
xchg
push
jb
mov
into
xlat
xor
ret
dec
xchg
cmpsb
dec
insl
repz
pushf
rol
cmp
dec
add
mov
mov
add
pop
jecxz
jle
jp
fisttpl
add
mov
out
int3
insl
icebp
enter
loope
nop
xor
addb
xchg
mov
lret
mov
and
add
jecxz
js
movsb
pop
pop
and
push
movsl
sub
inc
inc
mov
sub
or
xlat
leave
scas
jnp
mov
and
push
scas
jmp
fcoms
fidivrs
stc
bswap
imul
or
push
loope
ljmp
mov
sbb
ljmp
push
aam
shlb
mov
sbb
mov
and
pop
or
push
xchg
mov
scas
inc
or
push
inc
orl
adc
inc
jle
xchg
loope
xor
xor
xor
jg
int
and
loopne
outsl
inc
dec
fisttpll
pop
push
or
dec
shl
pop
xorps
in
add
mov
jl
push
jne
dec
insl
lret
push
mov
shlb
jmp
push
mov
adc
dec
popf
loope
pop
add
cmp
and
jmp
mov
int
cltd
aaa
imull
bnd
dec
int3
xchg
int
mov
and
pop
add
pusha
ja
mov
repz
mov
insl
add
cmp
pop
repz
xor
or
repz
test
mov
mov
js
test
pop
into
mov
iret
pop
sbb
and
into
dec
jnp
testl
jno
lret
jg
inc
inc
adc
and
test
stc
jb
jnp
adc
aaa
or
sahf
data16
lods
pop
pop
cmp
rcrl
and
sub
or
pop
mov
xchg
fimuls
in
adc
stc
cmp
inc
sbb
adc
mov
xchg
adc
mov
outsb
push
xchg
inc
pop
sbb
sub
loope
iret
or
inc
sub
fwait
dec
popf
arpl
xchg
outsl
push
jns
stos
inc
lcall
jno
or
cmp
dec
pop
lods
sbb
pop
push
jno
sub
aaa
sbb
insb
pop
jns
dec
sahf
popf
les
loop
js
out
mov
ljmp
mov
sbb
jns
mov
push
enter
movsl
xor
loope
out
push
sahf
mov
jp
pop
lock
mov
xchg
stos
push
xor
xorb
mov
inc
les
loopne
mov
adc
nop
dec
mov
push
loope
push
into
and
push
mov
sti
jno
call
aad
add
insb
stos
lea
sbb
clc
jecxz
or
push
xlat
xchg
insl
in
lock
fwait
inc
scas
jmp
mov
outsb
sub
jecxz
push
inc
das
js
cmp
lock
imul
mov
testb
jne
imul
push
add
push
flds
cwtl
mov
dec
rcl
stc
pushf
test
lret
xor
inc
add
scas
daa
scas
xchg
ret
push
sbb
or
or
sbb
popf
popf
leave
adc
adc
mov
pop
and
scas
xchg
xchg
pop
add
adc
stos
push
cli
enter
add
push
loopne
xchg
jp
pop
and
push
cmc
xchg
inc
outsl
inc
dec
pop
or
fcom
xor
jno
ret
stos
inc
popl
arpl
popf
sbb
int
cmp
dec
mov
call
lcall
ja
add
pushf
lds
dec
movsl
pushf
and
stc
sub
add
loop
add
into
addr16
pusha
mov
inc
mov
dec
push
mov
mov
add
das
dec
cmp
in
push
gs
xor
and
jnp
inc
js
sub
push
mov
ss
xor
sbb
or
repz
daa
xchg
inc
push
add
ret
mov
mov
loopne
sbb
out
js
pop
mov
sub
push
jbe
dec
dec
mov
insb
pop
push
push
jecxz
jae
mov
add
cmp
enter
jo
sub
cld
cmpsb
ds
mov
jb
imul
mov
hlt
hlt
mov
pushf
mov
adc
test
in
repz
cli
push
stos
aad
mov
mov
ret
push
mov
xchg
movsb
lret
inc
jp
sbb
pop
and
int3
cmp
push
or
arpl
sub
add
shlb
adc
add
sbb
rcrl
les
sub
xor
aad
xchg
cs
pop
inc
stos
addr16
xor
inc
lret
cwtl
mov
arpl
aaa
rol
lahf
xor
dec
fstl
pop
stc
adc
adcb
inc
insl
pushf
mov
cs
dec
add
add
and
adc
xor
shl
xchg
mov
mov
inc
icebp
sbb
imul
dec
sub
mov
jle
and
mov
xchg
ja
pop
push
dec
inc
inc
pop
push
pop
inc
fsubrs
out
stos
push
sbb
jecxz
inc
mov
test
mov
popa
cli
mov
pop
shll
dec
or
stc
pusha
sti
hlt
ds
loop
imul
in
leave
mov
movsl
sbb
and
fisubl
jnp
adc
fisubl
stc
movsl
sbb
and
or
cmpsl
icebp
lahf
jecxz
test
mov
adc
inc
inc
xor
ret
ss
into
push
pushf
xchg
push
test
pop
rclb
push
push
xchg
out
jnp
cltd
rcr
pop
pop
mov
shrl
cltd
iret
push
sub
outsb
sub
sbb
mov
add
adc
push
or
jns
and
cmp
loope
mov
inc
cli
lcall
jns
inc
out
add
mov
sbb
sbb
aad
pop
in
lcall
call
xchg
je
dec
dec
sbb
dec
inc
adc
adc
dec
ret
sub
mov
pop
pop
add
mov
cmp
push
jb
mov
or
xor
sbb
aam
xchg
cmp
cmc
stc
inc
jae
mov
adc
mov
es
outsb
mov
pusha
movsb
mov
loopne
adc
insb
imul
dec
inc
xorl
ret
inc
aam
xor
mov
lds
cmp
cs
sarb
jo
adc
jecxz
mov
add
mov
adc
xlat
sbbl
jl
std
fimull
cmp
push
sbb
cmpsl
and
jo
xor
es
shl
mov
pop
pushf
ss
mov
ficompl
sbb
mov
in
sbb
jae
inc
enter
push
mov
lods
sub
or
xchg
pusha
sub
pop
stos
arpl
mov
or
mov
sahf
pop
push
dec
scas
in
test
dec
xchg
mov
hlt
mov
arpl
jp
pop
imul
push
mov
cmp
mov
sbb
push
sbb
dec
add
push
imul
insb
outsl
mov
pushf
sub
mov
pop
sahf
loopne
xor
and
ss
add
into
sub
pop
lret
pop
push
call
cmc
scas
aad
aaa
and
or
shlb
jb
sub
cmpsb
adc
pop
loop
dec
xchg
add
xor
std
cs
fdiv
xchg
shrb
popa
mov
add
mov
inc
clc
loope
inc
aam
dec
push
and
sub
dec
and
add
sbb
dec
scas
sub
fisttpll
or
cli
jns
add
enter
jecxz
mov
popf
sub
mov
push
dec
stos
adc
shrl
cmc
jns
adc
out
pop
mov
daa
jb
jg
test
test
or
pop
inc
mov
inc
mov
repz
add
mov
sbb
leave
pop
sub
out
out
int3
subb
sub
pop
pop
mov
push
adc
sbb
std
ljmp
negb
test
int3
cld
lods
sbb
pop
outsl
sub
or
or
adc
loopne
les
push
out
fnstenv
cwtl
mov
addr16
in
cmpsb
mov
add
push
cmpsl
icebp
loope
push
adc
jno
sahf
int
inc
and
loope
test
add
mov
int3
negl
cmpsl
and
stc
aad
xchg
push
adc
outsb
stc
sbb
aam
and
and
mov
jo
pop
or
add
dec
mov
jnp
jle
inc
inc
pop
jle
outsb
bound
imul
clc
jle
scas
inc
aad
repz
add
jle
pop
aaa
jmp
jbe
lods
aas
push
je
int3
lret
push
fcmovbe
jno
out
adc
sub
adc
and
pop
xchg
test
jno
cmpsb
xchg
sbb
or
add
lret
push
sub
les
mov
lock
or
out
or
enter
dec
push
scas
jge
and
clc
mov
popf
clc
jmp
aas
add
ds
xchg
insl
dec
xchg
mov
push
or
fcompl
rorb
mov
xchg
pop
mov
jns
dec
cmpb
insl
pop
sar
mov
clc
and
fld
cltd
sbb
pushf
xchg
xlat
iret
imul
in
pushf
leave
data16
or
push
push
adc
ss
xchg
scas
xor
cld
push
jmp
jp
xchg
sbb
and
push
jne
repz
adc
scas
mov
cli
popl
mov
loop
or
jno
xor
out
icebp
xlat
dec
sub
add
jge
nop
push
test
mov
cs
pushf
sub
jns
mov
xchg
adc
jecxz
aas
inc
popa
aaa
sbbl
mov
sbb
popa
cmovg
scas
inc
stos
jl
loopne
and
inc
test
xchg
add
popf
jp
cmp
inc
adc
ja
loopne
mov
cmp
mov
hlt
popa
xor
dec
sahf
and
jno
mov
in
xchg
pop
add
int
icebp
jecxz
push
and
dec
or
inc
and
in
push
lods
pop
out
stc
repz
and
cmp
inc
mov
js
sub
shl
aam
test
sbb
jle
or
inc
add
adc
mov
push
add
lret
mov
sbb
mov
or
ret
mov
mov
jns
jmp
stc
mov
mov
cwtl
mull
test
add
inc
xlat
push
or
movsb
mov
int
fs
mov
and
jns
adc
lcall
mov
cmp
mov
loop
push
jno
rcrl
pushf
jp
and
dec
xor
sahf
sbb
push
mov
fdiv
int3
test
fcomps
pop
add
pop
lahf
sub
sub
into
ss
jp
adc
stc
scas
or
pop
mov
or
and
dec
mov
test
je
mov
mov
jns
push
cld
fwait
and
and
inc
pop
out
mov
xchg
mov
sbb
stc
aam
xchg
add
cmp
rcl
mov
push
mov
sbb
mov
cmp
enter
and
bound
pushl
mov
test
in
stos
sub
roll
pushf
ret
add
mov
xor
ret
cmpsb
roll
int
add
pop
fdivrl
mov
lods
mov
fmuls
in
fldcw
inc
mov
adc
pusha
jg
or
dec
into
mov
mov
dec
xchg
mov
fwait
js
xchg
mov
add
pushf
das
jge
adc
and
pop
push
or
adc
xlat
inc
add
out
js
addr16
or
add
cmpl
cmp
out
enter
int3
or
mov
sarb
mov
adc
mov
in
sub
sbb
arpl
sub
fistps
jbe
je
out
scas
adc
cmp
jl
fnstcw
subb
pop
insb
sub
sbb
mov
pushf
pop
lods
fildll
mov
test
cmc
das
or
xchg
mov
mov
cmp
push
xchg
cmpsb
cld
pop
xchg
stc
mov
mov
dec
clc
add
add
xchg
pushf
mov
and
sbb
sub
inc
adc
xlat
adc
cwtl
jl
decl
lods
jmp
push
aaa
xchg
mov
in
jecxz
cmp
xchg
jecxz
sbb
push
adc
sbbl
outsb
cmp
dec
push
xchg
add
sar
add
cvtps2pd
stc
and
fsts
inc
dec
push
and
mov
leave
hlt
ret
adc
ret
outsb
aas
mov
arpl
push
sbb
cmc
enter
inc
or
inc
nop
jns
popf
pop
mov
cmp
add
push
nop
and
pop
and
push
bound
int
adc
sub
stc
repnz
jno
push
mov
scas
and
int3
cmp
mov
out
outsl
cmp
fadd
jmp
das
mov
add
clc
je
rorl
sbb
or
hlt
ret
sub
icebp
faddp
mov
dec
or
add
repz
and
sbb
add
and
sbb
pop
lcall
popf
insl
fdivl
adc
push
add
aad
push
mov
fnstenv
or
cmp
mov
and
mov
mov
add
cmp
and
stc
leave
mov
push
adc
inc
xchg
das
out
mov
mov
or
test
jne
dec
and
adc
lock
ret
daa
and
add
int3
or
xor
push
dec
and
stc
dec
pop
roll
in
adc
rorb
pop
inc
out
xor
mov
nop
test
pop
bound
test
mov
adc
jp
xchg
pop
aaa
lret
adc
sub
cs
sbb
roll
adc
repz
stos
push
sbb
adc
and
cmp
xchg
out
iret
aam
xor
es
mov
mov
aad
fcoml
xor
lods
popf
mov
dec
int3
push
cmpsb
fnstsw
ss
int
sub
mov
sub
mov
mov
sti
inc
inc
sbb
xchg
and
mov
pop
in
cs
xchg
sbbb
push
dec
and
adc
cmpsl
mov
push
scas
pop
sbb
mov
sbb
add
sub
fs
lock
push
or
mov
test
andl
pop
mov
xchg
mov
ja
and
xchg
add
clc
sbb
inc
adc
cmp
mov
aad
in
mov
fcoml
repz
lahf
ljmp
cmp
popf
mov
dec
inc
jns
and
ja
pminsw
inc
mov
out
and
nop
jbe
je
cmpsl
daa
dec
xchg
inc
jbe
sbb
mov
jns
mov
adc
ljmp
cltd
sbb
adc
or
stc
or
enter
and
mov
cltd
dec
jae
mov
cmp
insb
mov
dec
push
in
mov
pop
sbb
aad
adc
lods
sub
and
mov
sar
push
mov
insb
mov
test
hlt
and
jecxz
enter
pop
mov
movsl
movsl
xlat
jns
sbb
scas
push
dec
daa
add
popf
adc
pop
dec
push
cmp
loope
in
jns
ds
adc
sub
addb
and
cs
push
cmpb
mov
orl
sub
roll
outsl
insb
jnp
mov
loope,pn
divb
mov
xor
xor
sub
in
aaa
or
gs
xchg
imul
clc
mov
cmp
inc
push
scas
das
cmpsb
movsl
sbb
shll
aam
push
sahf
dec
lods
and
insb
aad
daa
ds
jbe
mov
or
jae
cld
out
mov
shrb
pop
cs
sub
lcall
mov
les
pop
mov
pop
repz
lahf
insb
cmpsb
push
xor
fwait
add
xchg
pop
das
jp
test
sub
and
push
mov
loope
arpl
or
add
push
dec
adc
inc
lahf
bound
add
inc
push
push
fst
and
push
jecxz
lods
lret
shrl
pop
repnz
pop
or
jge
or
pusha
jbe
sub
out
jmp
cmp
add
mov
mov
ss
or
mov
outsl
sub
inc
push
pushf
mov
push
int3
pop
and
jp
into
cmp
dec
in
sub
jo
pop
mov
push
lods
scas
out
ljmp
push
rcl
add
cmpsl
xchg
out
mov
sbb
xchg
int
loop
lods
cs
xor
adc
test
pop
stos
jmp
and
daa
movsl
sahf
sti
cmp
fiadds
pop
dec
sub
jg
mov
les
imul
imul
xor
scas
dec
sbbl
lret
loop
xor
lea
pop
jnp
pushf
sub
jecxz
je
jp
int
mov
pop
testl
pop
mov
xchg
adc
and
mov
inc
stc
adc
imulb
enter
mov
xor
adc
bound
sbb
jg
sbb
jbe
mov
xor
jb
inc
sahf
xor
hlt
cmp
sahf
pop
out
and
pop
adcl
dec
outsb
mov
mov
pop
or
sbb
adc
dec
insl
stc
pop
mov
mov
daa
fstp
rcll
scas
and
pop
cs
and
and
xlat
xorl
dec
sbbl
loope
ret
aas
imul
add
addl
ja
rorb
lea
into
pop
test
shlw
rcr
cmpb
aas
out
xchg
fsub
sub
sbb
inc
movsl
mov
sbb
pop
hlt
xchg
mov
popf
inc
addb
jecxz
dec
adc
dec
in
jge
aas
aad
test
pop
pushf
pop
rolb
dec
inc
js
test
mov
js
hlt
lahf
hlt
mov
jae
xchg
inc
lahf
add
enter
clc
cmc
xlat
sbb
inc
shlb
out
and
or
loope
xlat
ja
sub
cmp
cs
or
int
mov
mov
mov
add
pop
mov
cmp
or
or
mov
sub
xchg
xchg
int3
insb
mov
adc
stos
hlt
jl
or
cs
add
pop
jnp
sarl
cmp
out
sbb
jg
jns
popf
test
sbb
stc
dec
jno
jno
xor
lret
jmp
cmp
sub
punpcklwd
sbb
lret
jae
dec
outsb
clc
sbb
xchg
outsl
stos
imul
mov
or
cmp
fwait
push
shlb
lock
in
repnz
shll
push
push
stos
xchg
mov
push
xor
popf
dec
js
scas
test
pop
or
add
cmp
in
mov
je
das
iret
mov
int
jecxz
lret
lods
push
adc
or
inc
inc
jmp
outsl
add
out
or
mov
push
cld
js
aad
aad
addr16
pop
lods
mov
jge
in
pop
dec
addb
xchg
cmp
or
cmp
test
sub
fstl
adc
sbb
mov
jnp
dec
cld
add
mov
adc
cmpsb
mov
pop
decb
popl
mov
insl
repz
sub
arpl
xchg
push
ds
jb
pop
mov
push
mov
jp
sub
pop
inc
xchg
popf
xlat
mov
je
and
into
lods
lret
scas
inc
push
mov
clc
ja
mov
cs
mov
cmp
add
cmp
cmpsb
test
add
sbb
sbb
mov
dec
cmpsl
hlt
xlat
loope
stos
mov
repnz
loope
mov
and
and
cltd
rorb
fcmovu
repnz
mov
fildl
mov
inc
jle
dec
push
into
sub
pop
sub
mov
les
and
jnp
add
lods
insb
and
and
adc
sub
inc
movaps
subl
sarb
sub
jmp
mov
out
jmp
scas
dec
lcall
inc
lods
inc
or
mov
daa
xor
ss
aaa
aam
imul
fcoms
jno
add
scas
fbstp
je
cmpsl
ret
cld
das
fiadds
jae
cwtl
jbe
movsl
push
xchg
les
mov
cs
bndldx
push
pop
pushf
in
cltd
hlt
jmp
cmpsl
aad
fsubrp
adc
pusha
fsubrs
add
or
outsb
mov
std
gs
stos
add
push
fsts
pusha
fwait
xlat
xor
sbb
push
outsl
dec
stos
scas
sbb
and
roll
sbb
or
pop
add
add
loope
sbb
mov
out
or
mov
and
popf
cmovp
pusha
mov
adc
mov
idivl
sbb
shrl
xchg
insb
stos
into
xchg
mov
popf
fcompl
lret
movsl
inc
cli
pushf
push
xchg
xor
mov
test
shll
test
mov
lret
cmp
scas
mov
and
pop
xchg
sub
jle
insb
sub
add
sbb
dec
or
inc
lods
mov
xlat
pop
adc
mov
mov
jne
add
xchg
sbb
jecxz
mov
xchg
adc
dec
xchg
nop
not
and
sbb
repnz
push
sahf
and
imul
or
pop
adc
add
pop
xchg
push
decl
xlat
insb
push
shl
out
int3
adc
push
aam
inc
sub
ss
add
aad
mov
insb
loopne
xchg
shll
or
sbbl
sbb
popf
or
insb
std
and
push
push
adc
push
sahf
jmp
adc
mov
or
mov
movsb
lds
or
in
lock
dec
xor
fldcw
gs
inc
mov
pusha
js
add
imul
inc
pop
jo
sbb
sub
xlat
scas
loopne
sub
sbb
mov
xlat
popl
xor
addb
xchg
pusha
popf
cmc
outsb
jg
movsl
lret
xchg
mov
loope
fwait
ja
pop
jecxz
and
or
popf
movsl
popf
push
xor
les
addr16
add
mov
into
add
fbstp
or
outsb
mov
xchg
dec
ss
and
sti
cmp
sbb
mov
xor
mov
add
dec
pop
lret
add
push
cli
jl
pop
pop
sahf
negl
in
ret
add
jno
je
sbb
nop
mov
jae
lock
pushf
or
cmp
inc
clc
sub
dec
dec
push
add
ss
adc
xchg
pusha
cmp
add
ja
fwait
jno
sahf
test
iret
add
or
popf
adc
and
loop
or
insl
aad
call
and
sbb
inc
shl
inc
push
lahf
xor
movsl
mov
xchg
stos
xchg
ja
and
and
mov
ja
adc
and
xor
and
add
sti
inc
int3
das
enter
adc
inc
imul
jp
cmp
mov
lds
jno
xchg
or
and
cmpsl
loopne
push
mov
out
psubw
lcall
jg
dec
or
loopne
adc
mov
dec
cmpb
push
int3
fiadds
fidivl
enter
fisubs
inc
push
call
mov
jb
and
fucomi
and
sub
jle
pop
xor
hlt
sti
mov
sbb
jno
sbb
push
push
mov
cmove
enter
stc
sub
mov
packssdw
jnp
in
push
sahf
add
mov
mov
repz
enter
jns
pushf
daa
int3
inc
out
xchg
stos
leave
mov
or
test
data16
sub
insb
gs
xchg
stc
mov
push
sub
scas
xor
xchg
cmpsl
jno
sbb
cmp
stc
sbb
mov
push
insl
js
mov
pushf
lret
lods
pop
imul
aam
xchg
sub
loop
hlt
xor
xchg
dec
mov
in
roll
adc
sbb
and
ja
fidivrl
ds
or
jns
mov
addl
pop
xor
sub
sbb
push
mov
aad
nop
dec
lock
stos
decl
inc
aas
jp
mov
xchg
push
and
mov
dec
rcrb
or
push
sbb
dec
inc
in
jne
mov
fisttpll
cwtl
aaa
and
pop
in
xchg
adc
ret
dec
into
sub
cmp
jp
xor
fidivl
inc
sub
mov
pop
fs
pop
push
sbb
insb
por
out
cmpsl
jle
clc
jb
je
inc
mov
xor
pusha
push
fucom
mov
pop
push
mov
inc
push
fisubl
cbtw
cmc
dec
cs
out
xchg
dec
in
stos
add
inc
cmc
aad
mov
sbb
subb
xchg
mov
loopne
ja
cs
or
mov
les
jle
adc
mov
mov
hlt
inc
adc
outsb
clc
xor
out
inc
sbb
lds
cwtl
jmp
nop
push
sarl
cmovs
add
fldt
aas
jns
dec
push
mov
insb
imul
popf
iret
xor
inc
pop
mov
repz
add
roll
jo
pop
jecxz
ja
loope
push
pop
mov
xor
test
add
testl
pop
and
pushf
rol
lcall
iret
negb
sbb
xor
aad
int3
mov
lock
and
scas
or
and
pop
stc
je
dec
adc
int3
jle
xchg
pop
adc
sbb
and
or
cli
vmaxps
inc
mov
mov
mov
or
add
push
lret
push
arpl
cmp
mov
imul
mov
mov
nop
or
push
call
sub
add
hlt
mov
cmc
sbb
js
sbb
pusha
loop
push
sbb
sub
rcr
decl
scas
dec
lret
lahf
aaa
jp
pop
ror
mov
lea
int
ret
jns
adc
cmpl
int
sub
aaa
inc
in
cmp
push
pop
fmul
imul
adc
into
subb
out
cltd
cmpsl
mov
add
or
mov
into
pop
loopne
inc
jecxz
adc
jns
js
sub
es
js
rcll
arpl
add
inc
into
inc
or
arpl
push
mov
jl
into
decb
loope
fcoms
ret
push
push
sbb
mov
idiv
ja
or
imul
fstpl
mov
xchg
and
mov
dec
or
jmp
test
mov
inc
inc
enter
daa
fisttpll
int3
insl
lahf
fs
cld
cltd
repnz
pop
int3
jge
xor
cmp
xor
arpl
push
cmpsb
sahf
inc
sub
pop
pushf
sbb
lcall
dec
in
push
pop
sbb
testl
cld
jmp
inc
and
mov
add
push
outsb
or
js
or
xchg
inc
and
scas
dec
jae
or
xchg
jle
cmp
pushf
arpl
add
jb
orl
roll
pop
cltd
cs
pop
xchg
scas
out
adc
jg
push
out
or
fnstsw
clc
pushf
repnz
dec
iret
and
hlt
fs
pop
adc
into
add
dec
popa
mov
inc
es
jecxz
add
mov
jmp
in
pop
sbb
cmp
nop
outsl
loopne
jbe
cwtl
cmpsl
iret
sahf
bnd
mov
dec
jae
adc
lahf
sbb
das
cmp
xor
hlt
mov
sbb
add
lea
cltd
mov
repz
hlt
xor
dec
mov
loopne
mov
adc
or
add
mov
hlt
sub
and
and
sbb
stc
enter
mov
add
mov
push
sbb
shl
in
and
mov
push
add
sub
sub
push
into
mov
push
int
push
aaa
movl
popf
mov
push
jae
movsl
xchg
xchg
and
xor
mov
ret
imul
add
ficoml
das
jb
in
sub
fcomip
cs
jg
mov
sbb
arpl
cltd
dec
les
dec
pop
adc
psubsb
scas
mov
das
insb
or
dec
mov
inc
in
lcall
inc
in
jnp
loopne
cmpsb
call
xchg
and
mov
mov
sbb
mov
mov
call
and
clc
enter
and
dec
lock
daa
fdecstp
adc
out
cwtl
pop
jmp
push
faddl
jb
sub
ret
sub
cmp
xor
in
scas
push
adc
aas
mov
inc
jp
rep
shlb
adc
pop
jle
sub
add
adc
lods
and
add
iret
inc
dec
sbb
divl
push
popf
inc
test
imul
in
push
popf
into
cs
cmc
jns
movsb
cmp
inc
hlt
and
inc
mov
in
fdivs
mov
imul
stc
inc
add
mov
xchg
ja
fstpt
sahf
dec
and
xor
outsl
hlt
mov
pop
xlat
loopne
stc
pop
or
pop
push
stos
mov
jge
test
jmp
push
inc
stc
addr16
mov
js
popf
mov
push
sahf
dec
mov
clc
sub
or
imul
mov
into
or
jno
xchg
call
mov
rcl
push
pushf
hlt
les
dec
sbb
js
sub
xor
mov
dec
loope
sbb
cmpsl
roll
mov
fists
pop
or
aaa
hlt
int3
pushf
lock
pusha
sti
or
cmp
xlat
insl
iret
imul
lea
cwtl
dec
xchg
and
aad
inc
pop
cmovbe
jb
fwait
pop
je
or
and
fisubrs
dec
stc
sbbl
insl
xor
cmpb
inc
pop
cmpsb
scas
xchg
ror
push
test
mov
inc
mov
jne
sub
lcall
in
and
data16
in
testl
mov
daa
push
xor
sarl
dec
add
add
inc
jns
cmp
push
xchg
xchg
in
insb
xchg
xor
stc
jle
in
sbb
inc
mov
aaa
xor
leave
cltd
js
add
dec
xchg
xor
and
loopne
fwait
movsl
jecxz
imul
sub
xchg
enter
repnz
popf
cmp
inc
fistpll
popf
clc
push
dec
rorl
xchg
mov
and
int3
lahf
daa
mov
sahf
dec
xchg
lods
lret
mov
adc
int3
xorl
fbstp
sti
sbb
jle
ret
add
popf
call
mov
cmp
xchg
movsl
rcrl
jecxz
mov
scas
and
fmull
scas
mov
lret
push
outsl
xor
sbb
xchg
ds
jp
sub
sti
shll
add
mov
inc
dec
dec
add
loopne
lcall
push
outsb
cmpsb
pop
shl
lds
pusha
inc
nop
mov
test
sti
or
mov
hlt
or
dec
add
js
mov
xor
in
fnstsw
inc
mov
pop
push
movsl
mov
int
push
jecxz
sbbb
adc
sbb
mov
jmp
pop
adc
int
cmc
lods
and
imul
sahf
xchg
mov
or
and
int3
inc
sbb
enter
jnp
inc
inc
sbb
cmc
sub
lods
xlat
push
mov
mov
lods
adc
adc
sbb
inc
xor
push
or
lock
mov
add
lds
or
les
xchg
cmp
jle
lret
cli
mov
or
jp
or
addr16
into
inc
sahf
clc
jge,pn
sbb
xchg
and
fs
mov
mov
sarb
xor
es
data16
sti
sub
pop
loope
push
or
jbe,pt
push
mov
xor
inc
int
or
icebp
cmp
mov
xor
lods
ret
ds
es
sti
jecxz
clc
mov
inc
pop
push
push
xchg
and
aad
lds
add
pop
inc
add
shll
mov
repnz
jp
mov
push
scas
add
cmpsl
xor
mov
int3
and
jp
adc
adc
fwait
in
mov
fstpl
push
insb
adc
xorl
xor
pop
add
jecxz
and
adc
dec
inc
sbb
inc
insl
fs
pop
xor
dec
mov
adc
and
mov
push
sbb
das
adc
mov
inc
test
push
mov
xchg
jmp
or
adc
fstpt
and
lods
fcmovnb
pop
sbb
cmovns
scas
outsl
das
adc
mov
jbe
mov
pop
or
bnd
mov
fmull
add
and
xor
mov
or
fnstcw
call
cmp
rcrl
xor
insb
in
cmc
outsb
out
sar
fisubs
sub
push
lret
imul
push
fucomp
frstor
bound
xchg
out
out
adc
sub
fstpl
mov
mov
pop
sub
fsubl
into
daa
fnsave
pop
mov
xchg
popf
ds
sub
push
aad
mov
jnp
inc
push
add
test
mov
call
xchg
int3
push
insl
sbb
cld
in
xchg
into
stos
mov
leave
aam
sub
loopne
int3
fucomip
mov
inc
dec
jecxz
mov
pushf
xorb
inc
in
test
mov
inc
xchg
repz
bound
enter
aad
add
xor
dec
scas
cmpsb
adc
sbb
fadd
shl
push
mov
push
aaa
push
fnsave
and
push
push
mov
cmp
xlat
jecxz
stos
cld
xchg
mov
push
jno
sub
fsubr
insb
push
jmp
sbb
std
pop
cmc
scas
cmp
inc
dec
fstpt
cmp
dec
and
push
and
jl
mov
loopne,pn
cmp
popf
push
mov
scas
ficoms
or
outsb
push
mov
stos
daa
pusha
imul
mov
or
xchg
jno
mov
or
sbb
xchg
insb
js
shlb
sub
sbb
sbb
sbb
lds
jecxz
sub
test
pop
mov
imul
mov
js
js
pop
push
ret
fdivrs
imul
testb
jno
pushf
jne
mov
sub
push
js
icebp
or
xchg
jecxz
out
outsb
mov
xlat
fs
xor
stos
xor
and
scas
or
cmpsl
pop
cld
ret
in
sbb
push
test
fldlg2
add
aaa
repz
les
inc
leave
mov
stos
xor
cs
fldcw
xchg
mov
mov
xor
out
mov
sbb
and
push
mov
lret
pop
into
ja
data16
push
mov
jnp
mov
mov
insb
arpl
gs
lahf
adc
or
and
mov
dec
aam
fs
js
sub
inc
mov
adc
jae
in
or
mov
leave
xchg
inc
out
or
insl
sub
xchg
outsb
cmc
sub
imul
mov
cmp
push
dec
or
fs
or
inc
and
jno
add
pop
insb
push
xor
jo
insl
cmp
push
fildll
es
mov
mov
cltd
jae
jmp
mov
adc
inc
jmp
sbb
aaa
rolb
mov
fucomp
push
add
ret
imul
jb
ret
dec
inc
mov
sub
dec
fistps
fnstcw
mov
sbb
add
fidivs
inc
imull
outsl
mov
sub
outsb
sarb
test
shl
adcb
cmpsl
xchg
pop
or
or
out
bound
sub
and
cld
insb
incb
rcll
mov
xchg
sbb
push
pusha
clc
into
popa
dec
cmc
aad
mov
add
lds
dec
pop
mov
and
xor
fs
push
repz
sbb
out
lcall
aas
push
mov
sub
pop
sti
daa
ds
sbb
enter
jnp
into
jmp
adc
out
dec
loopne
sti
sbb
test
fs
pop
les
pop
insb
test
dec
jns
mov
add
mov
dec
arpl
notl
insl
mov
cmp
ret
xchg
push
pop
sub
rcr
adc
imul
sub
shl
lcall
stc
push
adc
in
cli
in
and
fdivr
cld
hlt
push
inc
leave
cmp
dec
sub
jmp
and
mov
loope
dec
inc
int3
fs
sub
sbb
mov
and
hlt
sbb
fisubrs
enter
cmp
sbb
pop
dec
hlt
rcll
sub
repnz
xchg
dec
mov
das
push
push
in
fst
clc
xlat
sbb
dec
and
pop
or
mov
pop
mov
jp
js
adc
inc
rorb
sub
xchg
aaa
pop
mov
fwait
add
movsl
push
push
popa
dec
push
xchg
cld
xor
ror
lahf
fcmovne
pop
addl
mov
ficomps
adc
out
adc
mov
and
pop
jo
and
lds
leave
or
dec
sub
and
dec
lock
or
les
fmuls
or
mov
cltd
stc
pop
push
add
xor
push
fisubs
cltd
pop
pusha
test
and
repz
pusha
repz
push
add
dec
jecxz
out
pop
mov
adc
add
push
pop
ret
push
pop
pop
lods
insb
es
inc
cmp
pop
inc
dec
cwtl
jne
sbb
adc
lock
mov
jno
xadd
ds
push
mov
cmp
insb
adc
xor
sarb
je
inc
xlat
out
dec
data16
insb
dec
leave
sbb
xchg
mov
xchg
je
inc
add
into
and
cmp
outsl
pop
add
xor
add
test
xchg
push
sbb
ret
cli
outsl
fiadds
clc
faddl
xlat
out
pop
jle
fmull
fdiv
jp
cwtl
add
faddp
fdivs
jmp
arpl
lods
xlat
sbb
xor
inc
outsl
addb
xchg
jmp
add
test
lret
xchg
sti
decl
push
inc
outsl
add
push
scas
mov
mov
mov
popa
add
xor
icebp
jecxz
dec
js
cmp
ja
cmpsl
test
pop
or
or
pop
adc
cmc
fistpl
dec
mov
dec
mov
inc
xchg
pushf
jns
xchg
push
fsubp
xor
les
push
pusha
sbb
sub
and
adc
outsl
and
push
dec
mov
cmpsb
into
lret
and
add
inc
scas
sahf
addb
push
add
push
mov
jecxz
pop
xor
sti
into
push
mov
xor
or
pushf
pop
mov
lods
neg
aaa
enter
push
jmp
insb
xor
mov
xchg
add
cmc
jmp
bound
jecxz
xchg
cld
rorl
scas
xchg
jmp
inc
dec
cmp
mov
pop
and
sbbl
pop
rcr
es
mov
sbb
jne
sbb
mov
dec
inc
jge
ja
aam
jg
pop
cmp
or
push
inc
jne
popa
out
sbb
cmp
mov
jl
and
aam
add
ja
sub
nop
xchg
inc
sbb
mov
pushf
push
nop
incb
push
inc
add
notl
cmp
fwait
sbb
add
mov
loop
cmpsb
push
push
jle
mov
cli
dec
fimull
mov
add
pushf
adc
repz
jbe
dec
lds
dec
iret
notb
or
js
xchg
aaa
sarb
movsl
cmp
or
enter
aad
push
sbb
mov
js,pt
mov
movsl
jnp
mov
push
xor
inc
mov
ss
lods
jno
pop
ja
aad
mov
inc
inc
int
repnz
xchg
repnz
popf
inc
mov
sbb
xor
out
in
ss
dec
dec
cmpsb
loopne
loope
arpl
lret
addr16
loope
jl
repz
cli
or
movsb
lods
sub
adc
add
jo
inc
mov
pop
andb
movsb
cmp
cmp
and
sub
jle
mov
mov
push
in
fnstcw
dec
and
into
inc
mov
test
push
xor
sbb
pop
pop
pop
and
stos
std
pop
dec
or
mov
fldl
sbb
int
xchg
stos
cmp
push
inc
je
out
rolb
rolb
sub
sub
or
mov
rcrl
inc
pop
fldcw
mov
and
shl
inc
mov
and
pop
outsb
sbb
in
popf
push
mov
fcoms
popa
xor
sub
xchg
xor
out
stc
aas
adc
iret
mov
xchg
sbb
dec
push
movsl
inc
icebp
loopne
cmp
psrlq
mov
push
adc
movsl
repz
inc
xchg
lock
cltd
cmc
and
dec
imul
cmp
add
dec
or
add
lret
sub
ljmp
push
adc
or
jno
int
inc
cmp
mov
in
test
aas
js
stos
inc
mov
mov
rcrl
cltd
out
int
mov
fidivs
mov
jmp
xor
mov
mov
add
dec
insl
leave
xor
fstl
mov
imul
leave
jno
aam
les
push
aam
pusha
dec
dec
rdtsc
jecxz
leave
push
ret
aas
enter
aaa
iret
cmc
into
rcll
arpl
cmp
pop
lret
lock
mov
icebp
out
jb
mov
in
mov
pop
adc
lcall
adc
pop
jecxz
fdiv
or
inc
and
jp
js
sti
add
push
pop
add
imul
pop
mov
cmpsl
lock
lret
xor
loope
lcall
mov
sub
loopne
xor
fists
stc
popf
inc
mov
dec
loope
lcall
cmp
andb
lods
sub
mov
xchg
and
inc
mov
adc
jg
push
push
mov
pusha
mov
sub
hlt
mov
rorl
push
push
cmp
cs
mov
inc
gs
and
sub
sbb
lods
or
bound
cmp
fs
clc
sbb
insb
into
sahf
addr16
clc
mov
adc
sub
or
shr
fidivrl
xchg
and
dec
lods
sbb
or
out
xor
lds
hlt
inc
out
xchg
psllw
cld
ja
cmp
xchg
stos
fdivp
xchg
or
adc
sub
cmpb
push
sbb
in
insb
mov
insl
jne
lods
lea
test
daa
push
in
jns
cmp
adc
mov
imulw
or
push
out
clc
xchg
xor
inc
adc
jmp
adc
es
orb
push
test
push
jecxz
add
sbb
cmp
jge
xchg
dec
xchg
xchg
insb
mov
sub
push
adc
fisubrs
pop
cmp
inc
and
aad
inc
andb
nop
adc
test
das
rcll
hlt
jl
es
into
test
mov
xor
iret
push
popf
lahf
push
pop
js
les
push
mov
jmp
sbb
sbb
push
jnp
sub
mov
fistpl
jmp
and
pop
in
pushf
jmp
aas
in
loopne
orb
loop
inc
pushf
in
adc
movsl
cmp
imul
lret
adc
sbb
push
pop
push
stos
jne
int
or
fstpl
dec
shr
pop
mov
test
stc
and
jge
pop
dec
pushf
fldl
sub
push
addr16
ljmp
and
rcl
mull
sub
mov
into
cmp
dec
ss
xor
and
sbb
repz
out
mov
mov
shrl
cmp
cmp
dec
dec
sub
add
ror
pusha
inc
inc
jg
aas
out
scas
dec
mov
stos
add
xchg
outsb
mov
mov
shll
pop
popa
push
jnp
ds
push
movsl
mov
insb
les
arpl
jp
xlat
sbbl
pushf
bound
xor
movsl
pushf
sbb
mov
mov
and
ss
test
mov
jb
jmp
cmp
call
iret
out
inc
ss
mov
xor
or
and
mov
lcall
je
outsb
or
lods
sub
adc
dec
and
pop
testb
inc
cli
adc
jae
leave
adc
push
and
jge
push
cmpsl
add
negb
adc
pop
xchg
in
cld
inc
pop
dec
cli
push
sub
xchg
dec
int
cs
pop
ror
stos
adc
mov
into
lds
mov
dec
xor
bound
fdivs
push
jae
out
imul
fwait
sbbl
sbb
sub
jmp
clc
add
and
test
mov
inc
push
pop
inc
mov
and
out
ds
clc
in
ss
inc
pop
dec
xchg
gs
pop
mov
loope
scas
or
pop
lods
insl
inc
push
jl
popf
add
xchg
test
stos
jae
cmp
inc
fbld
or
pop
adc
sar
xor
scas
pop
pop
clc
jmp
adc
mov
aaa
add
or
mov
add
push
pop
pop
pop
dec
mov
pushf
enter
xor
xchg
movsl
lcall
xchg
inc
xchg
lcall
lahf
pop
fists
sub
pop
pop
mov
pop
pusha
jb,pn
add
pop
popa
jbe
mov
addl
data16
out
dec
xor
std
scas
mov
in
or
sbb
je
push
cmp
adc
mov
aad
mov
and
cmpsl
sbb
aam
insl
adc
cmovle
loopne
sahf
outsb
stc
ds
scas
imul
loopne,pn
shrl
shll
inc
movsb
and
pop
fucomp
int3
add
bnd
sbb
cwtl
pop
jo
push
nop
xchg
pushf
and
and
xchg
fldcw
test
jl
and
jmp
mov
out
mov
mov
or
arpl
jmp
xor
mov
int3
cmp
dec
sbb
icebp
sub
es
enter
xchg
mov
inc
xchg
inc
cmp
add
jecxz
xchg
jns
jo
fnstcw
adc
and
adc
iret
aaa
stc
shr
and
dec
popa
subl
leave
insb
aas
aad
ror
scas
inc
mov
xlat
cmp
push
fsubrp
push
into
mov
lcall
outsb
mov
mov
sarl
xorl
cs
arpl
test
insb
or
xchg
xor
mov
cmp
adc
push
out
mov
xchg
dec
sub
cmpsl
dec
outsl
or
call
cmc
mov
push
adc
xlat
push
cltd
pop
add
jle
imul
repnz
and
pop
or
jmp
cltd
bound
ret
cmp
push
pop
int
fsub
ficompl
adc
mov
push
mov
push
mov
or
push
jmp
in
and
jno
push
jbe
pop
inc
aad
inc
xchg
aas
jnp
push
movsl
aad
sti
stos
mov
rcrb
xchg
enter
push
add
shl
lahf
leave
jo
aam
ja
jl
pop
addr16
imul
jmp
mov
pop
cmc
sub
adc
mov
js
xor
add
mov
into
mov
loopne
test
push
and
sbb
test
fdivrs
jp
and
hlt
out
mov
or
les
pop
test
mov
aas
add
pushf
xchg
cmp
cld
adc
js
loopne
ret
sbb
cmpsb
icebp
xlat
cmp
sbb
mov
inc
sub
enter
sbb
mov
incb
out
iret
add
sahf
push
fmuls
cmc
lcall
fcoml
xchg
pusha
mov
push
lret
mov
dec
pop
inc
rol
xor
pop
aaa
mov
lods
scas
inc
pop
loop
sub
add
pushl
fimuls
repnz
mov
pop
xor
jle
or
or
ficoms
sbb
or
pop
push
cs
pop
mov
jb
xor
sahf
data16
inc
test
xor
shr
arpl
jo
int
xchg
in
in
notl
pop
rorl
jae
dec
mov
mov
arpl
jl
jge
push
jne
in
push
pop
bnd
jae
add
loopne
shl
mov
lcall
dec
cmp
mov
adc
push
ja
fldenv
leave
sub
test
sahf
adc
mov
stos
mov
mov
dec
inc
mov
lahf
cwtl
or
and
push
mov
mov
sub
adc
pop
stc
out
dec
mov
jmp
loope
push
jecxz
and
adc
push
insb
sbb
dec
jecxz
push
push
mov
jo
mov
jnp
sub
shr
xor
jmp
into
dec
clc
xor
lea
add
test
sub
push
jno
ljmp
cmpl
adc
movsb
and
sbb
insl
stos
ret
adc
dec
mov
jle
dec
shl
sahf
sti
daa
xor
add
subb
xlat
leave
jbe
or
xor
scas
or
iret
mov
fistps
ja,pn
cmp
push
mov
push
hlt
xor
push
and
and
es
test
movsl
into
cmp
test
adc
cmp
push
imul
loopne
loope
leave
test
jp
pop
sbb
test
mov
roll
hlt
sbb
dec
mov
mov
jno
loopne
nop
scas
imul
daa
sbb
outsl
loope
jg
dec
pop
adc
and
push
mov
inc
mov
aad
inc
ffreep
cmp
in
into
push
lods
lret
adc
jno
and
int3
adc
faddl
xchg
sbb
sub
lret
fdivrl
mov
in
inc
push
and
lds
push
arpl
jl
icebp
jp
js
outsl
in
fidivs
push
sahf
jne
sub
and
or
jecxz
stos
dec
add
and
sub
pop
jmp
fistpl
out
sub
addr16
adc
jl
dec
adc
cmpsl
rorl
fwait
jns
out
xchg
insb
or
xchg
out
dec
stos
add
das
or
push
push
outsb
sub
out
sbb
mov
push
xchg
fimull
adc
add
mov
xchg
mov
pop
cwtl
add
dec
enter
clc
mov
nop
and
mov
pop
stos
scas
mov
cmp
pop
out
adcl
and
jno
sub
add
adc
jnp
rcrb
subb
xor
dec
clc
push
adc
xchg
cmc
insb
es
lods
pop
jb
hlt
mov
stc
int
test
lds
clc
movsb
xchg
imulb
mov
and
fcoml
mov
xor
in
xchg
in
mov
inc
pop
ljmp
dec
and
or
pop
ss
sahf
aaa
sbb
mov
jl
js
ret
xchg
pop
je
jle
xlat
cmovb
fildll
insb
xor
int
int3
dec
and
add
mov
sahf
sub
lret
inc
jno
pop
jo
xor
jle
leave
adc
pop
mov
dec
push
xor
cmp
pop
cltd
adc
outsb
mov
pushf
aas
pop
lods
in
mov
out
js
jge
and
push
cmp
mov
adc
mov
iret
into
jge
ds
push
push
mov
aam
jae
adc
arpl
or
and
in
adc
add
push
idivb
dec
ror
lret
or
xor
inc
stos
jae
loope
lret
add
mov
xchg
pop
sub
jecxz
xor
orl
mov
ror
inc
sbb
mov
xchg
and
stos
test
into
cmp
stc
xchg
sub
pop
out
cmp
test
cli
jae
icebp
inc
sub
rcrb
xor
arpl
jnp
ss
lret
repz
or
jne
enter
and
and
fnsave
mov
cmpsl
sbb
mov
sbb
out
and
fmuls
xor
mov
in
scas
jb
mov
hlt
aam
push
into
lods
sub
sub
movsb
sub
adc
mov
mov
and
inc
cmpsl
mov
mov
lahf
sbb
and
into
clc
xor
ja
sbbb
and
nop
ds
roll
pop
pop
lock
fidivl
icebp
pusha
fs
lods
mov
les
cs
sbb
call
insb
and
mov
and
jg
cmp
sbb
movsl
mov
lock
pop
push
mov
addr16
out
sbb
stos
ret
stos
and
clc
ljmp
cltd
imul
mov
lret
and
inc
xor
inc
jp
add
shl
dec
outsb
add
cltd
add
aaa
dec
sbb
push
pop
dec
xchg
cmc
xlat
lods
pop
inc
aad
cmove
sub
aas
in
pushl
jle
nop
xor
pop
xchg
repz
insb
jae
hlt
addb
test
sub
mov
push
in
adc
lds
stc
stos
pop
mov
pop
jnp
insb
mov
jl
and
jno
imul
push
and
mov
xchg
pop
sahf
push
pop
jmp
lock
mov
jp
mov
inc
test
fnstsw
jl
je
push
mov
adc
fs
push
in
cwtl
xor
inc
dec
cli
fidivrl
js
jns
dec
sbb
dec
inc
or
in
test
cmpl
lahf
test
push
jns
scas
pop
push
xchg
and
jecxz
movsl
mov
sbb
das
xor
negl
adc
in
fst
fisubl
lds
push
lds
mov
stos
mov
popf
sbb
scas
lea
sub
int3
inc
pop
jns
dec
pop
or
ja
dec
cmp
xchg
adc
sbb
imul
mov
ret
jl
scas
pop
push
sbb
adc
mov
lret
add
add
fsubrs
pop
adc
xchg
lcall
repnz
cwtl
jns
push
sbb
dec
aad
imul
and
insl
inc
adc
push
dec
xchg
and
inc
xlat
push
jmp
inc
mov
sub
adc
and
nop
shll
les
shl
pop
fwait
mov
cmc
push
inc
inc
in
imul
pmullw
mov
idivb
in
mov
out
inc
sbbl
in
insb
push
cwtl
icebp
sub
lcall
xchg
sti
xchg
les
leave
stc
ret
pop
outsl
add
mov
mov
jp
call
pop
test
adc
in
out
ret
lahf
icebp
xchg
int3
scas
cmp
popa
push
pop
sub
iret
in
push
in
push
push
mov
ljmp
and
enter
fmul
out
cmpl
jns
jne
or
adc
sub
xor
pop
pop
push
mov
outsb
xacquire
inc
loop
inc
push
ds
or
in
mov
je
mov
jmp
inc
push
popf
std
pop
cmp
and
rcrb
xchg
out
mov
jg
lock
stc
or
js
dec
add
enter
push
cwtl
xor
cmp
cmpsb
xor
cli
push
lea
add
mov
push
cmp
test
cs
adc
pop
jnp
push
int
stos
dec
sbb
outsb
paddusw
push
inc
add
add
bound
lds
lcall
add
mov
pusha
out
insb
cmp
add
push
sub
push
ja
mov
mov
push
cltd
mov
cmp
dec
imul
dec
test
cmp
inc
mov
sub
mov
ja
fnsave
stos
and
cmp
adc
rorw
into
addl
xor
dec
sbb
ret
repz
in
out
stc
inc
xlat
or
add
inc
enter
mov
push
push
faddl
lds
or
mov
rcll
add
jp
xchg
mov
scas
stc
mov
sub
mov
or
add
aad
xchg
popf
push
popa
js
and
sub
shrl
repz
sbb
stos
mov
inc
fstpl
xor
mov
mov
pop
lahf
in
iret
imul
dec
test
cmp
jle
loop
out
dec
fstps
xor
pushf
xor
mov
pop
inc
fs
icebp
es
adc
pop
jns
xchg
sbb
outsl
mov
loope
inc
adc
outsl
xor
sbb
and
push
mov
cmp
and
mov
les
daa
cli
sahf
leave
pusha
hlt
mov
cmpsl
rol
bound
call
lea
stc
insl
jg
cltd
lret
lds
leave
les
cmp
add
loopne
cmp
jmp
sbb
mov
or
or
ficomps
rolb
int
insb
std
popa
bound
fmuls
out
imul
dec
and
xor
add
out
stc
ret
pop
push
or
adc
and
fwait
xchg
nop
jg
imul
push
or
mov
inc
cmp
add
add
cmpsl
int3
add
pop
aam
and
gs
add
mov
stos
inc
loopne
xchg
push
cmp
cmp
pop
jno
lds
add
popf
lahf
aaa
jl
outsl
inc
xchg
xchg
adc
arpl
repz
mov
repz
scas
mul
hlt
addl
push
ficomps
repnz
data16
xchg
int3
fsubrl
loope
xor
inc
jl
inc
dec
in
outsl
or
out
hlt
mov
icebp
movsl
pop
mov
jg
sti
mov
mov
dec
mov
jecxz
mov
arpl
mov
out
popf
mov
loopne
cmp
loopne
fwait
std
sbb
les
mov
addr16
lock
test
xchg
push
sub
add
pop
pushl
jg
daa
sarb
movsl
xor
xor
stos
pop
roll
dec
stos
inc
jmp
push
ds
push
in
scas
out
mov
jecxz
or
cmp
hlt
mov
ret
or
int3
mov
inc
negb
sub
int
inc
enter
jg
jp
jle
pop
andl
sbb
popf
into
mov
sub
jmp
adcl
add
mov
clc
fistpl
mov
xchg
pushf
sbb
inc
out
mov
and
adc
and
add
int3
mov
into
push
mov
les
aad
lock
jg
add
jno
hlt
inc
repz
xchg
enter
pop
aaa
inc
outsb
dec
add
xchg
cmp
lea
and
ret
popa
sub
pop
imul
sub
call
loopne
dec
and
push
icebp
aas
jne
push
aaa
insb
or
movsb
loop
sbbl
jae
aaa
sub
enter
cmp
add
jae
inc
pushf
push
stos
xchg
ds
push
orb
xor
das
into
stos
mov
sub
loop
outsl
fcmovu
mov
sbb
imull
mov
adc
int3
and
cmp
xchg
imul
push
sbb
cld
in
in
and
add
enter
cmpsb
repz
ja
fmuls
stos
dec
pop
or
in
jo
pushf
mov
jmp
mov
sub
cltd
or
adc
sbb
out
sahf
popa
lds
mov
dec
sub
out
xor
aaa
loope
pop
lds
mov
sbb
stos
inc
mov
sub
cld
repz
arpl
aaa
sub
jl
sub
icebp
aad
inc
das
std
pop
inc
jg
push
add
mov
mov
insb
andl
inc
push
xchg
dec
in
daa
mov
adc
sbb
mov
es
dec
mov
push
pop
outsl
nop
fimull
add
pop
pop
inc
cwtl
jno
cld
mov
enter
jns
lea
inc
cld
icebp
fimuls
or
xlat
add
inc
in
xchg
dec
cmp
test
andl
aaa
ret
fsin
insb
sbb
jl
dec
adc
cmp
or
ss
iret
das
clc
adc
pop
icebp
daa
mov
cltd
xchg
jecxz
sbbb
cltd
fcomps
aas
imul
cmp
cltd
iret
test
lds
subl
cmp
insl
add
out
or
addr16
xor
fldcw
cmpl
cmp
bnd
stc
cmc
sub
push
dec
lds
push
int
push
pop
clc
mov
fisubs
popa
inc
or
sub
mov
sub
in
xchg
std
mov
in
jmp
xchg
mov
mov
jbe
jbe
jns
aad
leave
sub
jp
cmc
adc
or
loop
and
scas
mov
outsl
popa
nop
xchg
and
call
bound
sahf
insb
scas
cmp
add
sub
jne
aaa
inc
or
aam
inc
movsl
push
dec
jnp
outsb
orb
in
mov
xchg
aad
mov
or
insl
in
xor
stos
cmpl
sbb
mov
mov
add
and
push
or
pop
mov
mov
aam
bound
shll
mov
call
add
sub
mov
outsb
ret
pop
dec
fnstcw
aad
scas
sub
fildl
push
outsb
icebp
inc
push
sbb
or
shll
jl
pop
addr16
pop
add
sub
outsb
ffree
addb
sbb
in
inc
loope
xchg
pop
mov
lahf
fidivl
sbb
add
inc
add
decb
loop
aad
mov
add
push
insl
ljmp
les
inc
fistl
dec
aas
out
sub
mov
sbb
sub
fcompl
or
pop
jns
mov
adc
and
and
dec
data16
add
mov
dec
xchg
mov
mov
lods
mov
jle
pop
adc
pop
dec
xor
int3
mov
cmp
into
lahf
cmp
push
pop
insb
push
cltd
xchg
pop
dec
mov
sbb
setg
movsb
loopne
mov
adc
jge
dec
jle
mov
stos
inc
cwtl
or
fisttpll
fsubrl
push
inc
add
rolb
mov
xlat
out
or
xor
mov
xor
inc
outsl
jmp
mov
shlb
push
mov
inc
fidivrs
and
ljmp
or
jl
or
push
adc
mov
push
cmpsl
rcrl
xor
mov
push
jno
ret
sbb
push
into
test
or
mov
js
loope
sub
xor
add
sub
pop
pop
inc
push
push
xchg
mov
pushf
dec
jns
addr16
shll
pop
cs
outsb
aam
or
daa
xlat
loopne
sub
or
add
xlat
lea
or
xor
xor
fwait
inc
mov
sahf
lret
dec
mov
hlt
icebp
stos
arpl
jl
jo
or
mov
jmp
mov
stos
adc
addr16
or
test
sbb
mov
push
inc
mov
jge
mov
jmp
and
pushf
orl
push
mov
add
inc
xor
inc
mov
xchg
leave
lret
sbb
and
or
inc
aad
inc
mov
pushf
sbb
enter
les
std
out
movsbl
into
xlat
fwait
into
cmp
pop
xor
rcll
push
inc
jns
mov
mov
out
lret
add
push
je
out
dec
and
sbb
out
pop
imul
setp
std
mov
pop
pop
loope
jle
movsb
pop
in
ss
and
sub
addl
pop
sub
pop
cmpsl
data16
lods
push
gs
xor
inc
shrb
jae
mov
js
mov
or
push
push
sahf
jae
loop
mov
loope
test
aam
push
jge
add
sti
sub
enter
data16
inc
xchg
mov
dec
popf
jb
imul
add
dec
cs
icebp
clc
icebp
enter
shll
push
sbb
lahf
dec
test
xchg
adc
cs
test
incb
xor
and
or
cmp
jecxz
jne
lahf
xchg
rolb
cmp
mov
mull
sbb
xchg
adc
les
cmp
inc
pop
and
cmp
leave
movsb
mov
push
lock
cmp
xor
into
push
cmp
es
mov
out
inc
loope
xchg
sbb
mov
imul
jmp
insl
adc
pop
jmp
in
repnz
push
or
xor
je
int3
push
ja
and
mulb
scas
push
dec
sbb
int
clc
int3
in
cltd
fcoml
pop
aaa
sarb
and
into
inc
lcall
mov
mov
xchg
cmpsb
jecxz
cmp
cld
push
inc
nop
es
ret
jnp
xchg
xlat
mov
add
mov
js
push
dec
or
mov
int3
in
sahf
xorb
mulb
cld
and
fs
xchg
sti
xchg
je
cmp
in
gs
mov
and
mov
jecxz
push
iret
std
fiadds
and
out
rclb
shll
or
int
popf
int3
mov
or
mov
notl
fildll
xlat
xor
ficoms
mov
jl
push
outsl
pop
xor
movsl
or
scas
cs
and
cmpsl
cmpl
test
pop
and
jns
pop
mov
fidivs
push
jl
push
mov
dec
aad
mov
cmp
adc
xchg
mov
and
mov
adc
in
mov
pop
insl
adc
imul
jne
push
mov
push
int3
ficoml
mov
or
mov
dec
push
lods
and
lcall
pop
or
ss
xor
xor
lcall
or
mov
sub
rcrb
pop
mov
popl
xchg
pushf
push
mov
dec
xor
or
pop
div
bound
mov
popl
fcoml
imul
xchg
add
je
cmp
xchg
pop
mov
into
hlt
pop
enter
stc
jae
aam
inc
xchg
sub
mov
mov
mov
nop
xor
imul
mov
sub
fnstcw
pop
scas
cmp
sbb
mov
aam
and
inc
addr16
and
cmpsb
pop
cmpsb
xchg
push
lock
push
cwtl
xlat
push
inc
add
adcl
sbb
stc
rep
sbb
test
loop
sahf
call
cmp
jmp
cltd
sarl
mov
idivl
sbb
or
cmp
push
in
push
cld
imul
notb
and
icebp
or
hlt
push
dec
jae
sub
aad
mov
or
icebp
mov
xchg
dec
adc
pop
xor
jne
jl
jb
pop
dec
dec
xchg
dec
xlat
lcall
test
jae
adc
popa
shlb
addb
inc
addr16
je
addl
into
or
and
pop
call
sbb
cmpsl
add
fstpt
pop
cmpsb
xlat
mov
xlat
inc
cs
popa
cmp
mov
mov
pop
gs
pop
add
jg
and
fstpl
push
sub
or
xchg
mov
or
mov
int3
popa
lds
mov
dec
dec
cmpsl
push
loope
cmp
inc
out
shl
sbb
push
add
add
rol
movsl
insl
sub
push
test
mov
mov
inc
loopne
cmp
sub
mov
push
adcb
jno
jno
sub
stos
mov
push
inc
jo
inc
jp
cmp
outsl
lret
jae
fucomp
push
pop
xor
enter
sub
test
dec
clc
add
imul
mov
loopne
jnp
dec
orb
and
dec
test
cmp
stos
inc
adc
push
cmp
out
sti
or
cmpsl
rorl
pop
sbb
pop
and
bound
sub
cmpsb
out
outsl
test
cli
add
jnp
ficoms
mov
pushf
pop
outsl
scas
icebp
adc
out
and
dec
inc
jo
cmp
and
mov
mov
dec
cs
push
fcompl
pop
and
ret
or
adc
data16
imul
outsb
std
int3
call
pop
push
ja
xchg
inc
jl
or
fwait
test
pop
inc
aam
xchg
mov
int3
push
jle
test
sub
adc
cs
and
add
fildll
aas
mov
mov
cmp
push
or
adc
mov
and
icebp
test
adc
push
mov
outsb
pop
lods
inc
imul
mov
adc
jns
test
sub
push
xor
add
xor
xchg
mov
imul
jecxz
jns
lret
jl
js
push
sarl
pop
dec
aam
lahf
lcall
xor
sbb
inc
push
inc
lods
sarl
ret
adc
inc
push
shlb
xchg
scas
sub
adc
test
and
mov
into
jne
int3
mov
negl
imul
fs
jle
sbb
outsl
mov
pop
cmp
scas
lock
mov
popa
pop
dec
xor
xor
inc
push
rcr
rcrl
loope
pusha
daa
jns
jbe
and
test
add
push
orw
sub
adc
repz
scas
leave
outsl
dec
mov
fcompl
xchg
or
jnp
push
add
push
dec
inc
pop
aam
inc
push
popa
out
fdivrs
dec
scas
cli
push
aas
sub
ficomps
leave
push
jb
data16
adc
and
call
push
cld
pop
xor
and
push
stc
xor
mov
xlat
iret
jl
xchg
sbb
mov
mov
stos
lock
insb
pop
xchg
xchg
dec
and
pop
push
fwait
insl
add
out
mov
jecxz
mov
lods
inc
je
sahf
inc
adc
adc
dec
sub
jmp
inc
out
lds
or
sahf
stos
sbb
int3
addr16
push
repz
sbb
xchg
bound
nop
mov
fmul
out
arpl
mov
lret
insl
outsl
out
mov
movl
dec
dec
leave
repnz
inc
sar
cmp
les
mov
mov
push
add
jo
and
fmull
or
add
mov
mov
clc
mov
daa
add
mov
and
pop
inc
rcll
sti
rol
push
and
hlt
lret
dec
sub
xchg
xlat
fwait
int3
and
mov
xor
and
subl
lds
xchg
sub
sbb
mov
dec
sti
sarb
mov
ljmp
or
insb
cmc
inc
push
xor
inc
icebp
call
and
lds
push
push
mov
xchg
test
jge
jl
popa
dec
repnz
in
or
dec
clc
jne
or
pop
cmc
mov
xchg
ja
sbb
push
btc
adc
notb
ret
push
and
jmp
in
xor
jmp
cmp
or
fidivs
and
into
std
sub
enter
xlat
insb
mov
int3
mov
and
movsb
pop
inc
pop
out
xlat
xchg
pop
ret
pop
data16
hlt
mov
ret
in
push
xchg
push
mov
add
or
push
repz
sbb
push
pop
add
adc
push
mov
into
cmp
in
push
scas
mov
and
xchg
cmp
fnstenv
test
lds
test
je
in
mov
into
int3
hlt
push
mov
mov
jecxz
lods
inc
add
jae
push
flds
cmpsb
test
mov
mov
je
enter
rorb
push
fcomps
lahf
fisubrs
mov
adc
inc
insl
add
outsl
ss
jmp
mov
push
pop
xor
dec
es
fsts
or
inc
arpl
mov
cmp
int
jmp
outsb
int
ror
jle
repnz
pop
sahf
or
imul
add
pop
orl
and
outsl
insb
jne
xchg
add
push
scas
rcll
rclb
xor
push
ds
or
fwait
in
imul
inc
jo
adc
test
sbbl
arpl
jl
into
sbb
sub
inc
sbb
pop
in
push
xor
ljmp
push
push
mov
ds
out
leave
cmc
aas
mov
mov
mov
xor
sub
xchg
repnz
inc
fldl
mov
sub
sti
mov
fidivl
or
int
jmp
dec
push
jp
shll
cltd
xlat
jle
jne
int
mov
push
xchg
inc
pop
xor
push
out
cmp
or
in
cmp
jbe
mov
xor
outsb
aas
sbb
xchg
popl
add
int3
xchg
popa
sbb
and
xchg
lahf
adc
jmp
push
mov
jnp
cltd
stc
push
and
adc
fcompl
cs
rclb
ret
sahf
pop
mov
into
stc
xchg
enter
jecxz
push
add
push
xor
mov
es
js
ret
push
inc
cmpsb
je
dec
cltd
outsb
lahf
movsb
popa
sbb
into
push
jecxz
daa
add
pop
jns
shll
and
mov
popf
xchg
stc
outsl
dec
cmp
out
das
sbb
pop
and
fbstp
cld
and
jecxz
xor
add
dec
push
stos
outsl
or
arpl
xchg
rcrl
imul
mov
jno
mov
cmpsl
inc
cmp
mov
fdivs
imul
stos
dec
mov
xor
movsl
xchg
jmp
daa
cltd
add
test
mov
adc
push
sbb
add
mov
dec
sub
aad
mov
int
insl
sbb
cmp
and
cld
pop
and
dec
out
lahf
popf
std
xor
pop
xchg
ds
sub
fwait
mov
mov
cmpl
dec
lret
roll
addb
cmp
dec
mov
jne
jecxz
push
dec
sbb
sbb
inc
dec
push
jno
add
and
inc
mov
push
int
les
add
lock
movsb
in
cltd
jle
xor
in
add
mov
adc
imul
mov
mov
icebp
mov
jge
and
inc
imul
movsb
add
push
pop
add
push
in
addr16
icebp
les
xchg
shlb
test
lcall
xlat
mov
jle
mov
rol
aad
imul
outsb
mov
adc
add
loop
dec
mov
fistpll
pushf
fxtract
inc
dec
mov
cltd
mov
jns
xchg
in
mov
pushf
dec
out
push
pop
dec
and
push
cmc
cmp
jne
adc
mov
mov
xlat
repnz
dec
mov
xor
inc
jmp
xor
push
sub
push
lahf
fmuls
dec
test
ja
pop
xchg
rorl
pop
mov
dec
cld
clc
mov
adc
lock
out
mov
add
push
or
mov
adcl
lock
daa
push
in
pop
mov
out
test
and
jg
cmp
pavgb
out
icebp
insl
push
pop
js
mov
jmp
adc
je
add
pop
dec
push
cltd
jmp
push
cli
popa
rcl
mov
dec
lret
mov
push
icebp
setns
inc
insl
out
lock
mov
pushf
lcall
mov
or
jns
cli
test
push
ret
sub
shlb
inc
cmp
and
loop
inc
mov
lock
mov
push
cmpsl
out
in
pop
push
mov
or
pop
mov
inc
popf
xor
xor
negb
or
faddl
pop
inc
fwait
dec
cld
cld
or
dec
sub
cmp
rol
pop
mov
inc
mov
xor
mov
and
insb
cwtl
lret
nop
jbe
mov
jno
hlt
cmpb
cmp
and
and
pushf
cmp
cmp
es
add
stc
inc
pop
mov
mov
icebp
scas
pop
fwait
jle
in
xchg
insb
int3
mov
pop
aad
cmp
push
xchg
xchg
hlt
loope
movsb
add
into
mov
cmp
adc
xchg
jbe
fwait
in
pusha
mov
loopne
test
cmp
dec
mov
jle
fldt
jecxz
sbb
jl
push
add
lods
daa
mov
sarb
sbbb
jecxz
cld
bound
mov
testb
mov
je
inc
fnstenv
and
das
in
pushf
or
ss
add
lods
xchg
inc
mov
or
inc
dec
fsubl
adc
or
das
adc
xor
imul
cltd
les
leave
inc
pop
mov
push
sbb
sub
xchg
cmp
flds
mov
daa
out
outsl
arpl
cmp
insl
cmc
add
pop
and
xchg
mov
aad
dec
aam
sub
pop
cwtl
jl
ljmp
stos
lods
imul
sbb
mov
sbb
in
add
loopne
push
pop
inc
mov
push
inc
fbld
notl
in
insb
stc
add
push
popf
push
cmc
xchg
outsl
sub
xor
sbb
cltd
jno
xchg
mov
nop
sub
popf
icebp
mov
jno
cmp
xor
pusha
or
cmpl
mov
pop
int3
sahf
out
and
loopne
test
sub
mov
adc
pop
repz
pop
push
sbb
mov
push
jns
aam
pop
mov
cmp
add
adc
sahf
clc
cmpsb
out
pop
mov
loop
insb
push
add
iret
and
cmp
enter
pop
rolb
cmp
repz
push
clc
psubd
fcmovbe
pop
xor
mov
lahf
fistps
in
or
bound
and
movsb
jge
mov
mov
outsb
mov
dec
jo
cmp
les
mov
mov
into
imul
lcall
and
out
sub
stc
mov
or
and
lods
cmc
push
stos
and
int3
adc
aas
push
cmp
lds
cmc
and
pop
repz
arpl
inc
adc
jmp
aaa
xchg
scas
test
sub
add
jae
fdivs
pop
mov
xchg
incb
and
sbb
mov
sbb
pop
hlt
sub
cltd
push
lds
inc
mov
jne
add
mov
cli
sub
movsb
scas
and
mov
add
add
movsl
outsb
mov
icebp
pop
rclb
lahf
and
add
add
lret
cltd
cmp
pop
inc
lret
or
mov
inc
cwtl
mov
lret
mov
pop
outsb
inc
xlat
mov
std
mov
xchg
stos
xchg
aad
add
mov
data16
inc
push
dec
insl
jno
dec
mov
sahf
jae
inc
dec
std
dec
cwtl
xchg
sti
sub
orl
adc
or
jmp
dec
loopne
repnz
add
arpl
adc
mov
push
rcrl
add
fnstsw
jmp
mov
icebp
cmp
cli
and
scas
mov
out
inc
mov
sbb
scas
adc
sbb
testl
out
xor
sarb
aad
mov
mov
lret
push
mov
data16
leave
into
out
xor
adc
pop
sbb
cwtl
or
jl
filds
testl
into
nop
je
stos
fdiv
jb
pop
mov
and
outsb
je
sub
add
xor
ljmp
xlat
push
dec
and
push
mov
sbb
es
inc
nop
lret
leave
fwait
es
aad
xchg
inc
imul
cmpsl
loope
icebp
cmc
shrl
push
ds
inc
mov
pop
int3
adc
jmp
int
xlat
aaa
mov
mov
imul
pushf
sbb
jne
pop
movsb
mov
addr16
es
repz
mov
sub
gs
add
js
pop
cmp
mov
jo
scas
lret
or
pop
pop
idivb
pusha
popa
and
xor
xchg
cld
ds
call
push
pop
jno
cmpsl
push
add
shrl
popa
mov
repz
lds
in
mov
imul
mov
fwait
and
aad
mov
nop
lahf
or
cmp
inc
add
add
push
ja
and
sbb
andl
xchg
popf
jns
loop
jp
dec
or
cmp
inc
adc
lcall
movsl
cmp
pop
inc
test
xor
inc
in
out
mov
lods
add
sub
call
sub
push
pop
mov
mov
jmp
sbb
fucomp
and
sbb
jb
cmp
mov
or
or
mov
pop
lret
clc
jle
xchg
aas
imul
rcrl
adc
repnz
cs
enter
rorb
das
or
ja
jp
in
jb
dec
and
scas
dec
repz
jg
and
add
iret
mov
stos
mov
roll
insb
dec
jnp
imul
cmp
dec
mov
push
inc
popa
xchg
adcl
mov
dec
lock
push
dec
roll
subl
loope
pop
sub
ffree
xor
mov
pop
jp
daa
std
mov
fdivrl
mov
push
sbb
sbb
cltd
mov
ljmp
pop
and
pop
sbb
int
inc
or
rorl
xchg
jge
pop
mov
and
cs
mov
dec
inc
into
idiv
movsl
mov
mov
stos
fstps
cmpsb
sub
imul
dec
inc
fnstsw
je
pop
popf
push
pop
adc
pop
das
sub
mov
out
add
cld
dec
jge
pop
aad
popa
andl
mov
aaa
or
xlat
pusha
jae
push
mov
mov
pop
sub
dec
dec
pop
mov
icebp
xor
cli
inc
push
cli
inc
adc
stos
pop
inc
inc
mov
jae
jo
add
mov
jmp
out
pop
fldenv
sbb
jne
out
or
sub
cmp
add
popa
ja
sbb
out
cmp
xchg
sbb
inc
push
push
mov
or
fisubrs
inc
ja
pop
dec
bound
lahf
fiadds
push
dec
cmp
push
push
and
sbb
push
pushf
int
add
and
mov
adc
testb
push
pop
inc
and
push
fnstsw
mov
ret
loope
or
xchg
das
lds
insb
or
mov
sbb
adc
cmp
inc
icebp
push
lahf
pop
aam
fiaddl
mov
xlat
pop
push
jg
negb
xor
xchg
mov
cmp
int3
out
cmpsl
pop
test
sbb
add
out
shlb
loopne
clc
pop
das
jmp
lahf
mov
faddl
jle
das
mov
lcall
and
hlt
ret
jnp
pop
add
lock
popa
sbb
nop
imul
mov
imul
or
aad
dec
and
inc
je
mov
es
xor
in
mov
fidivl
faddl
aas
fdivr
insl
or
clc
sahf
das
sub
mov
loop
pop
pop
pop
inc
lcall
inc
xchg
in
mov
sti
dec
icebp
movsl
subb
mov
add
in
popf
mov
dec
add
jl
or
pop
mov
mov
hlt
dec
rclb
aam
lock
mov
jecxz
rcll
push
or
mov
mov
pop
das
out
pop
push
negb
push
pop
lock
cld
and
arpl
adc
push
ds
xchg
push
dec
fisubl
adc
pop
jp
push
cwtl
pop
jmp
repz
cs
ret
mov
xchg
and
add
popf
mov
and
or
cmp
push
or
inc
mov
pop
movsl
add
repz
sbb
push
add
mov
jmp
repnz
les
push
sbb
adc
ljmp
out
add
fsubs
mov
mov
and
fists
lods
stos
loope
xchg
mov
xorl
fisubs
fisubl
stc
int
out
xchg
jns
jno
test
scas
mov
jne
mov
loope
imul
les
mov
dec
aam
iret
cs
popa
add
and
inc
ret
sub
jg
arpl
add
es
out
mov
xlat
xchg
dec
push
iret
xchg
inc
jo
mov
xchg
in
jl
cmpsb
loop
and
stos
pop
addb
idivl
add
cmp
dec
subb
and
shll
sub
rorb
pop
mov
pop
packssdw
cld
movsl
aad
jno
pusha
jp
popa
insl
movsl
sti
in
idiv
repz
movsl
pop
xchg
sub
and
or
out
into
xor
and
add
xchg
leave
pop
lds
mov
push
fsub
dec
imul
mov
sub
fcompl
cs
inc
sub
mov
orb
es
int3
or
inc
test
int3
addr16
lcall
dec
adc
mov
or
or
dec
push
dec
sti
enter
cwtl
lea
in
mov
ljmp
xchg
cmp
add
orb
sbb
sbb
jp
adc
aaa
in
mov
pushf
lds
xor
dec
and
inc
scas
cmp
cld
mov
fidivrs
add
adc
sti
lahf
jbe
mov
and
dec
push
fmuls
fcoms
aas
clc
pop
cmpsb
int3
jne
or
push
sub
pushf
mov
pop
int3
sti
lods
cwtl
cmp
iret
dec
in
inc
pop
int3
test
mov
push
add
and
insb
and
rcl
dec
enter
mov
addb
mov
jae
push
into
mov
mov
push
dec
cli
xlat
in
jmp
xor
add
mov
roll
nop
hlt
sbb
fs
shl
ds
mov
fwait
jnp
mov
outsb
pop
int3
sbb
mov
roll
addr16
cwtl
xchg
cmpsl
or
xchg
push
xor
enter
int3
mov
adc
aam
mov
mov
test
jns
js
stos
fisttpl
sbb
sbb
mov
sbb
inc
dec
rcrb
fstpt
out
enter
ret
jnp
je
movsb
loopne
mov
mov
or
arpl
flds
lahf
cmpsl
jl
ret
in
aas
or
scas
andb
mov
mov
pop
lret
mov
mov
sub
push
scas
cmpsb
aas
xor
es
sub
shlb
push
outsl
dec
movsb
and
mov
xor
pop
adc
test
sub
push
lret
lea
add
ljmp
scas
and
push
stc
cmp
mov
mov
dec
cmp
stos
jle
jmp
dec
pop
jg
and
push
push
mov
int
imul
into
sahf
push
rcrl
or
addr16
inc
fwait
in
mov
xor
push
xor
lods
inc
mov
mov
xchg
loope
add
mov
or
or
popa
or
and
sbb
xor
into
and
cmp
xor
pop
or
or
je
dec
fwait
push
mov
inc
movsb
insb
xchg
xchg
mov
in
mov
test
push
cmp
mov
xchg
mov
mov
mov
sbb
or
sbb
and
rol
jns
push
xchg
or
sbb
pop
rol
mov
or
aas
test
xlat
insb
or
ljmp
into
or
mov
dec
xor
scas
push
clc
data16
xchg
jmp
cmp
ljmp
sub
mov
or
test
pop
fs
lods
jbe
dec
inc
into
loope
movsl
pop
aad
sbbl
xchg
adc
sub
mov
and
inc
outsl
nop
add
inc
cs
sahf
mov
adc
fbstp
push
rorl
sti
ljmp
test
xchg
pop
lock
andl
mov
leave
add
jb
and
jb
inc
stc
jmp
cwtl
and
xor
xor
lahf
and
sub
xlat
enter
mov
mov
mov
mov
and
pop
cltd
push
xor
dec
stc
in
inc
aad
cwtl
push
pop
sbb
inc
es
mov
push
add
test
mov
and
jmp
add
mov
mov
mov
cmp
sbb
push
lret
dec
stos
addr16
sbb
cld
mov
cwtl
mov
mov
mov
leave
lods
loop
add
ljmp
xchg
test
loope
or
cmpsb
xchg
push
sbb
mov
jbe
stc
adcl
sbb
add
aad
or
test
mov
and
imull
mull
and
mov
das
bound
jecxz
xchg
xor
sbb
xor
inc
xchg
or
out
outsl
xchg
enter
add
mov
jecxz
popa
popf
mov
arpl
ja
push
popf
ja
loopne
jge
pop
jecxz
call
dec
enter
aad
cmp
xor
inc
adc
mov
xchg
xchg
inc
movsb
in
mov
dec
mov
out
aas
xchg
or
mov
sbb
out
into
testl
mov
das
xlat
lods
sbb
mov
mov
rcrl
leave
out
inc
push
pop
and
cmp
mov
xchg
pop
mov
sub
inc
ret
sub
or
movsl
and
adc
lock
xlat
or
sbb
pmovmskb
sbb
repnz
dec
aas
and
fsubs
cmp
mov
jle
sbb
jns
or
in
cmp
testl
jg
inc
sub
inc
dec
sahf
cmp
movsb
incb
inc
sub
jp
add
cmpb
inc
adc
push
nop
or
out
into
scas
das
inc
outsl
mov
push
mov
leave
and
in
scas
lahf
std
cmc
sub
inc
xchg
popf
xchg
lcall
and
dec
and
inc
mov
outsl
dec
loop,pn
cmp
repz
daa
nop
pop
push
lds
in
sahf
add
ret
xor
push
in
mov
mov
dec
add
mov
rorl
repz
ja
and
jp
jbe
push
push
fdiv
in
movsb
mov
mov
mov
add
or
bound
test
mov
mov
js
mov
pop
or
cmc
dec
mov
lcall
lahf
test
xchg
push
dec
pop
jb
and
fiadds
js
mov
push
lahf
out
push
fmull
fldt
xchg
sahf
and
push
pop
push
outsb
push
scas
sbb
pop
jns
inc
mov
aad
or
sub
jae
lret
into
dec
orb
add
push
inc
decl
pop
push
fcoml
cmp
mov
inc
adc
inc
add
aas
or
popa
sbb
outsl
dec
xchg
arpl
xchg
loope
out
cmpsl
mov
xor
jnp
sub
push
push
add
fstl
push
daa
xchg
xor
push
lahf
mov
push
dec
fidivl
add
int
scas
lock
daa
mov
cmp
shll
push
stc
mov
jmp
outsb
mov
xchg
sbb
cmp
xlat
cmp
dec
sub
shll
jg
push
leave
sets
mov
xor
es
aad
dec
fst
lahf
imul
outsb
jge
sbb
popl
sbb
dec
mov
mov
fcoms
rol
xchg
ja
test
test
or
pop
inc
jo
stos
xchg
mov
push
insl
enter
loop,pn
sub
aas
arpl
adc
outsb
aaa
mov
and
cmp
subl
jl
inc
dec
int3
mov
mov
push
dec
call
ror
in
mov
cltd
and
ja
ret
sub
and
mov
loop
addr16
jmp
pushf
lahf
lds
dec
and
in
outsb
sbb
lret
addr16
xchg
push
hlt
in
dec
sbb
test
inc
pop
dec
icebp
call
int
push
or
mov
sbb
insl
or
rcrl
inc
pushl
and
mov
pop
fstps
in
lock
dec
test
pop
outsl
gs
jne
dec
out
cmpb
sub
xor
rorb
and
xor
sbb
mov
ss
test
cmpsl
popl
int
sbb
push
psllw
fcoml
ret
mov
hlt
cmp
mov
cwtl
out
cmp
mul
inc
lahf
mov
jle
outsb
mov
cmp
lods
js
pop
sub
dec
mov
lods
dec
push
les
and
or
inc
push
cli
xchg
sbb
fcoml
add
push
xchg
or
mov
imul
mov
pop
jns
xchg
dec
mov
or
dec
pop
pop
mov
push
dec
in
jae
cmpsl
sbb
sbb
jp
cmp
jne
arpl
cmc
sti
test
adc
push
in
cmc
insb
inc
push
jns
enter
mov
or
inc
out
popl
inc
push
cmp
mov
pop
nop
imul
add
mov
or
sub
mov
adc
inc
mov
pop
jmp
fmull
sti
mov
and
jo
or
inc
scas
cli
outsl
roll
adc
dec
aas
inc
jb
outsb
adc
je
arpl
xorb
cmpsl
jmp
pop
lahf
sub
test
clc
rolb
sahf
mov
popaw
dec
mov
enter
or
jnp
and
fcoms
hlt
pop
sub
pop
cld
stos
icebp
adc
add
in
in
dec
arpl
pop
cwtl
sbb
push
outsb
and
add
add
cmpsl
ja
and
je
mov
jl
mov
push
cmp
mov
dec
es
lahf
adc
ds
mov
and
out
cmp
popf
sub
lret
imul
mov
mov
jle
or
mov
add
inc
fcmovnbe
mov
pop
sbb
loope
push
insb
sarb
xchg
push
mov
gs
sub
and
testl
mov
sbb
in
and
pop
xchg
in
dec
ds
xor
push
add
test
mov
and
inc
xor
and
mov
or
inc
mov
pushf
sub
and
and
fadd
push
cmp
sub
push
je
cmp
bound
or
mov
or
and
clc
push
xchg
mov
sbb
dec
js
push
push
in
lods
inc
rorl
out
pop
mov
mov
mov
paddw
or
lock
or
and
jne
sbb
sarb
jecxz
push
jp
sbbl
mov
jge
inc
int3
push
add
jl
loope
push
jns
push
pop
test
xchg
push
push
and
jge
jg
mov
mov
loop
pop
pop
into
xor
popa
mov
mov
and
or
adc
push
dec
test
add
fnstsw
pop
xchg
hlt
out
jo
mov
sarl
pusha
xchg
inc
add
aad
mov
push
mov
test
je
out
ds
mov
sub
addr16
jp
xlat
int3
adc
adc
es
and
add
jns
jmp
mov
stos
adc
es
push
fwait
adc
adc
push
inc
lea
ds
add
or
mov
inc
filds
add
and
jns
out
fsubrl
adc
adc
sti
and
lods
mov
jg
hlt
and
int
push
xchg
jno
sbb
mov
jp
mov
rcrl
xchg
sub
notl
add
lret
jnp
sub
in
or
jns
into
fistps
int3
lods
cmp
inc
dec
ret
cs
mov
pop
in
mov
sbb
das
sub
and
cmp
mov
sbb
pop
popf
insl
js
stos
ljmp
sub
ds
mov
add
or
dec
cmc
mov
adc
inc
test
pusha
ja
add
jg
lcall
adc
adc
xchg
cs
mov
and
xchg
daa
cs
mov
xchg
orl
cmp
pop
or
ja
and
push
jae
popl
pop
push
lds
cmc
gs
sahf
xor
dec
sahf
inc
insl
cli
push
xor
jns
fdiv
into
jg
push
jmp
call
repz
inc
sahf
mov
push
inc
and
mov
add
in
not
xchg
js
xchg
pop
int
cmc
xchg
or
int3
mov
stos
mov
adc
pop
repz
bound
pop
in
and
push
and
xlat
repz
into
inc
dec
inc
dec
sti
adcl
sub
pop
cmp
aaa
or
or
mov
jmp
fdiv
aam
dec
sub
bound
push
adc
es
scas
cmp
lods
insb
out
add
out
push
add
mov
or
scas
loop
jns
mov
sti
lret
pop
sbb
fsubrs
mov
ret
inc
repz
sbb
pop
xor
aas
mov
adc
iret
jno
std
dec
dec
insl
and
and
mov
mov
pop
jbe
push
dec
add
adc
mov
or
ja
scas
pop
mov
insl
adc
loopne
imul
xchg
sub
les
ja
test
push
lcall
jae
adc
addb
sbb
add
pop
and
aad
pop
jmp
pusha
or
and
out
jg
popa
push
pusha
mov
out
dec
sbb
sub
inc
sub
inc
adc
push
xchg
push
fimull
pop
js
into
push
cmp
lea
cpuid
jno
flds
add
push
add
cs
dec
outsl
sti
mov
and
pop
cmovb
push
cmp
idivb
inc
xor
inc
jmp
mov
mov
fdivrs
fimuls
andl
insb
dec
mov
add
mov
lock
in
inc
lock
scas
scas
or
add
rorl
add
insl
xchg
inc
push
cmp
pop
and
insb
xor
jns
and
mov
cmp
cmp
pop
cmp
lods
mov
add
popf
push
mov
mov
xchg
mov
ljmp
adc
adc
pop
and
cs
mov
cmp
inc
inc
in
shlb
pop
test
add
daa
xchg
stc
insb
mov
js
mov
int
sub
mov
or
insl
js
test
and
add
rolb
fsubr
je
jmp
mov
mov
sbb
ljmp
jle,pn
and
inc
repnz
fstl
movsb
iret
stc
cltd
lret
jbe
add
and
int3
xchg
jp
aam
ds
mov
jno
add
test
mov
push
loop
test
mov
add
cwtl
ja
pop
incl
inc
push
mov
stos
and
xchg
push
sub
cmovl
or
mov
jnp
sahf
or
jle
push
pop
stos
jge
popa
jns
push
xchg
sub
and
popa
js
jno
into
mov
loope
pushf
bound
add
pop
mov
jge
movsl
sub
lods
test
andl
pop
or
aad
mov
fiadds
outsb
pop
inc
data16
dec
in
stc
jmp
push
mov
stc
xchg
out
mov
repz
cmc
pop
out
insl
mov
cmp
dec
pop
dec
inc
jp
movb
je
outsl
xchg
adc
mov
shr
cs
pop
add
mov
xadd
jle
dec
inc
cmp
mov
xchg
pop
xchg
xchg
mov
int3
or
pop
cmp
sbb
leave
ja
mov
bound
pop
push
and
das
mov
mov
scas
xchg
mov
icebp
xchg
fisttps
adc
push
adc
dec
aad
aas
or
jnp
sysexit
xchg
stos
iret
mov
repnz
cmp
sbbb
mov
fcoms
in
push
jns
mov
push
inc
stc
fwait
loopne
mov
or
xor
push
loope
xchg
add
popa
jecxz
sarl
mov
mov
xorl
or
loope
outsb
jno
and
mov
mov
push
sbb
int3
jecxz
dec
mov
sub
push
inc
sbb
push
add
ret
orb
fbstp
faddl
in
out
jno
mov
push
xor
loope
inc
ret
leave
nop
or
pop
lret
inc
ficomps
jns
loopne
mov
in
inc
and
into
add
stos
ret
pop
jmp
gs
insb
mov
jae
negl
pushf
rorb
setb
sarl
or
mov
sahf
xchg
jns
cmc
pop
jae
stos
sub
push
mov
pop
int
insb
scas
enter
fdivr
les
pop
or
xlat
movsb
push
sub
and
aas
adc
into
push
scas
lock
scas
mov
or
hlt
xor
nop
mov
sti
jne
nop
xchg
out
call
ja
fdivrp
push
pop
fiadds
add
out
mov
lock
cs
aam
push
sbb
es
inc
ljmp
sub
cmp
sbb
adc
loop
lahf
jbe
lcall
stos
rorb
or
mov
jge
cltd
xchg
repz
es
add
sbb
ja
hlt
inc
jg
mov
shrl
adc
push
je
sbb
inc
sub
mov
jbe
mov
insl
stos
cltd
es
jle
add
bound
xor
mov
jns
inc
pop
test
inc
lea
sbb
mov
andl
push
inc
mov
pop
pop
xchg
jne
in
cld
push
pushaw
icebp
pop
fcmove
cmp
enter
push
hlt
cmp
mov
push
cmp
push
fs
loopne
daa
sbb
jns
jge
inc
mov
lea
cmp
jae
into
add
in
les
cmp
push
mov
xor
inc
add
xor
inc
outsl
das
dec
iret
jne
jno
sbb
adc
out
mov
int3
xlat
mov
int3
mov
popa
push
in
add
jbe
idivl
mov
xor
stc
mov
daa
or
or
mov
imul
out
and
stos
rcr
enter
cmp
loopne
sub
loope
cmp
add
inc
ds
add
mov
mov
sbb
imull
mov
les
dec
inc
inc
jnp
out
push
jle
or
jecxz
ret
jle
cmp
inc
and
dec
repnz
push
and
cmpsb
orb
daa
mov
dec
mov
std
sub
cmp
scas
cmp
aas
dec
test
add
shr
jl
pop
adc
adc
pop
add
jne
in
scas
inc
inc
adc
sbb
xchg
popl
aas
pop
mov
sbb
repz
inc
lds
mov
int
mov
jo
jno
sub
xchg
int3
rep
push
sbb
out
xor
mov
xor
sub
stc
es
daa
sub
and
mov
test
push
cmp
mov
jae
jo
cmp
pop
repnz
lret
push
inc
js
into
cmp
insb
push
cld
and
out
push
negl
imulb
sbb
mov
push
xchg
pop
jnp
sub
enter
xor
sbb
adc
pusha
enter
test
mov
shlb
cmpl
lock
das
cs
push
xchg
or
iret
in
jg
lock
and
scas
lret
das
mov
stc
mov
jecxz
mov
dec
rolb
and
adc
push
jae
or
insb
mov
push
or
jne
addr16
sti
mov
addb
and
or
add
cld
jle
pop
adc
int3
push
loop
cwtl
jnp
mov
mov
mov
ret
mov
enter
jecxz
mov
in
in
out
aad
aam
xor
inc
inc
movsl
cld
sbb
push
jmp
xor
dec
out
cmp
filds
cmp
or
push
int3
jecxz
addr16
push
cmp
clc
test
adc
es
stc
and
leave
mov
lret
jae
das
jp
and
push
roll
xchg
test
ss
cmp
cli
aas
and
mov
pop
sbb
push
xchg
cltd
xor
inc
jle
xor
sbb
dec
xchg
mov
add
adcl
push
push
sbb
dec
out
ljmp
or
cmpsl
or
aas
cmp
lea
jo
add
xor
xchg
push
mov
jmp
pop
subl
fwait
sbb
lods
or
pusha
mov
or
rorb
repz
sub
xchg
mov
push
mov
lea
fwait
mov
es
aas
adc
ret
insb
jp
adc
les
movsl
stos
jmp
mov
pop
adc
jge
cmp
out
pop
dec
sub
rcrl
push
loope
push
imul
adc
xor
sahf
push
pop
cmp
decb
mov
notl
sub
scas
fsubrs
push
outsb
mov
dec
pop
fwait
xchg
add
or
jnp
cmp
mov
dec
jg
cmp
or
adc
jns
mov
push
or
sub
jge
adc
dec
sbb
push
shl
or
sub
sbbl
or
aas
pop
pop
and
inc
inc
adcl
xlat
xor
jle
ror
lret
inc
inc
mov
jb
or
mov
mov
bound
mov
pop
mov
shlb
push
sub
cmpsl
popf
and
jl
cmp
insl
shlb
or
into
cmp
or
imul
popf
sbb
and
adc
or
jge
jbe
bound
lret
push
pushf
cmp
out
lahf
mov
sub
iret
sub
insl
es
or
sbbb
ljmp
pop
inc
sbb
jge
cmc
call
fcmovnbe
lcall
add
mov
fists
pop
aas
and
loope
or
inc
push
dec
sbb
mov
or
cmpsb
and
scas
dec
pop
int
lret
push
xchg
hlt
loop
cmpsl
ss
inc
adc
andb
mov
xchg
inc
rorl
fistpll
cs
cmpsb
or
mov
rcrl
bound
mov
repz
std
push
and
orl
pop
cld
adc
fdivrs
pop
mov
xlat
dec
or
scas
mov
sub
push
jle
test
lahf
daa
or
mov
sub
in
and
sbb
sbb
push
test
add
sub
sub
aaa
cmpsl
mov
pushf
or
aad
sbb
cmp
jmp
push
dec
jmp
sub
loop
pop
pop
jnp
ret
ds
inc
add
sub
scas
outsb
or
or
fwait
mov
ret
xor
or
mov
adc
adc
scas
and
inc
inc
pushfw
sbb
insl
adc
lret
shll
aaa
icebp
mov
imul
pushf
pop
adc
das
adc
jp
inc
adcl
xor
pop
xchg
cli
lret
xor
lret
pop
imul
push
insb
jl
xchg
push
rcrb
push
sub
pop
in
or
cli
mov
ja
addl
mov
inc
mov
adc
or
or
or
dec
int
jbe
sbb
inc
mov
and
movsb
pop
lret
ret
xchg
sahf
jmp
or
jne
int3
les
or
incb
scas
or
repz
pop
stc
movsb
add
into
sbb
xchg
or
push
je
xor
sbb
add
rcll
dec
or
aaa
mov
dec
cmp
leave
fnsave
mov
jno
fistps
loop
adc
andb
xchg
stos
pushw
or
xchg
dec
outsl
sub
or
xor
fisttpl
repz
and
loop
sbb
add
mov
cmp
stos
dec
or
out
xor
jp
lret
int
pop
in
xor
dec
sub
or
into
incl
xor
or
pop
inc
xor
push
pop
push
es
mov
or
out
push
test
outsl
or
and
and
pop
call
pushf
push
or
aam
adc
push
inc
and
loop
jl
jecxz
or
outsb
mov
xor
imul
mov
xchg
inc
xchg
and
xchg
ficoms
pop
jl
or
out
jo
aam
sbb
mov
mov
or
xorb
iret
clc
test
or
out
leave
and
addr16
mov
rcll
dec
idivl
xchg
repnz
sbb
pop
insl
mov
xor
add
adc
or
aaa
dec
lods
loope
add
or
daa
jae
lods
add
cmp
add
push
and
or
insb
xlat
inc
shr
dec
addr16
inc
bound
push
and
out
ret
iret
repnz
or
dec
push
fdivrp
or
movsb
stos
or
xchg
cld
or
sbb
out
and
icebp
push
sub
pushf
or
cltd
in
sbb
xchg
pop
lds
cmc
sub
ltr
or
pusha
cmp
cmpsb
shrl
fmull
or
or
push
in
loope
inc
popa
push
loop
mov
fnsave
pop
aam
pop
lods
pop
sub
or
or
or
lods
rorb
adc
dec
or
das
push
xchg
push
inc
stos
or
inc
or
dec
xlat
in
dec
xchg
das
mov
rolb
push
lcall
pusha
adc
sti
jnp
sbbb
ds
and
push
cmc
jno
xor
dec
add
xlat
bound
xchg
std
adc
mov
out
or
mov
in
jnp
fdivrl
loopne
sub
pop
add
ljmp
or
pop
sub
dec
lds
adc
push
jmp
xor
or
gs
mov
scas
jp
fiaddl
lahf
sbb
mov
in
sbb
mov
push
test
sbb
inc
lret
divb
sbbb
mov
or
and
daa
push
xchg
jecxz
lret
insl
iret
aad
mov
dec
lea
adc
or
or
push
pop
mov
xor
jmp
das
xchg
mov
xorb
mov
outsl
xchg
sbb
xchg
or
adc
pop
test
dec
push
and
xchg
inc
dec
daa
into
mov
or
sbb
jns
push
xor
loope
adc
or
fadd
ret
insl
cli
or
xor
addl
jns
mov
faddl
sub
pop
mov
test
repz
or
clc
jae
xchg
shrl
or
insl
in
or
adcb
mov
shll
jo
rorb
sub
mov
jle
or
dec
sbb
pop
loopne
dec
ljmp
inc
mov
xchg
mov
or
pop
xor
adc
mov
fildll
cmp
sub
jnp
sub
jno
or
adc
adc
sbb
push
inc
and
adc
mov
sub
pusha
inc
dec
or
sti
pop
lds
pop
or
adc
cmp
push
sub
sbb
xchg
xor
or
inc
sarb
cmp
call
sbb
mov
in
mov
cs
clc
subb
iret
std
pop
mov
and
ljmp
cli
inc
mov
outsl
adc
xchg
add
or
aaa
cwtl
mov
hlt
call
dec
lret
or
enter
es
add
cld
mov
jg
dec
cmp
or
insl
sub
adc
or
in
xchg
test
mov
mov
in
sbb
aam
mov
xchg
mov
scas
lods
add
xor
cmp
call
inc
sub
or
sar
lret
cmp
sub
out
or
mov
pop
jne
fnstcw
out
ret
test
scas
repnz
mov
mov
mov
fisttps
sbb
push
gs
add
loop
sub
push
or
push
test
data16
test
stos
sbb
mov
sbb
iret
rolb
fbstp
andb
or
and
fildl
jbe
cmp
mov
add
sub
into
lock
std
xchg
pop
dec
pop
mov
add
cmp
sbb
sbb
nop
or
lret
sbb
add
or
cmp
or
stc
fmuls
imul
cmp
pop
xchg
jg
js
pusha
cmp
add
testl
arpl
push
or
cmp
lcall
test
outsl
push
adc
loopne
sub
fldcw
fmul
stos
ficompl
movsl
in
popf
adc
aad
dec
jne
and
into
xchg
pushf
test
push
popa
cmp
int3
lea
sbb
arpl
cvtdq2ps
mov
xchg
inc
loopne
loop
mov
sbb
pop
mov
mov
ficoms
cmp
mov
sahf
inc
lahf
and
xchg
rcrb
or
pop
int
aam
mov
push
mov
dec
add
push
es
or
data16
and
imul
inc
int
mov
cmp
push
iret
in
les
and
or
imul
add
push
jle
xlat
mov
dec
dec
cmp
imul
or
lcall
and
sbb
imul
pop
xchg
scas
stos
mov
loope
loop
outsl
jne
pop
js
ret
std
push
push
mov
inc
mov
or
mov
adc
cmp
lcall
cwtl
stc
jne
cmpsb
sbb
mov
into
decl
sub
fsubl
adc
xchg
or
into
out
and
dec
fidivrs
add
lret
int
xor
pushf
notl
aad
jecxz
or
sub
test
and
ret
lods
test
dec
ret
adc
das
mov
test
fmuls
jge
sarb
outsb
js
mov
pusha
cmp
sbb
pop
add
lcall
fimuls
jnp
out
and
cmpsl
cmp
jnp
jle
or
dec
adc
cmp
push
xor
sbb
mov
sub
aaa
or
push
mov
sar
push
xchg
dec
decl
xchg
int
sbb
jg
push
lea
pop
jl,pn
or
sub
ret
lret
les
inc
bound
sti
mov
pop
scas
mov
add
sub
fidivrs
stos
sbb
or
xor
clc
pop
sbb
sub
sub
loope
mov
scas
pop
sbb
add
test
or
sbb
xlat
pop
dec
test
sbb
add
lea
out
cld
or
outsl
adc
lret
push
sahf
or
aam
daa
fstp
push
or
fucomip
sub
ret
mov
jg
sbb
inc
adc
int
mov
pop
push
xchg
lea
sbb
out
xor
fsts
lret
sbb
into
push
hlt
outsl
clc
mov
add
leave
add
adc
pop
pop
cwtl
fs
test
outsb
add
fsts
and
cs
rclb
mov
xchg
fistl
cwtl
xor
imul
pop
dec
cltd
lea
movl
sbb
fs
add
pop
push
cs
pop
xchg
or
cmpsl
pop
nop
push
loop
fwait
lea
push
sbb
xchg
pop
cmpsb
inc
mov
lea
iret
pop
mov
aas
xor
in
dec
pop
fsts
cwtl
test
sbb
sbb
push
lods
rclb
popf
sub
mov
pop
mov
xchg
and
out
mov
xor
mov
int
fadds
pop
sbb
pop
lcall
lret
xchg
sbb
cs
pop
fcoml
idivb
lahf
push
cmpsb
scas
or
adc
dec
ret
push
cmc
jl
ds
cmpsb
lret
xchg
cmpsb
test
jne
adc
adc
pop
cmp
iret
cwtl
add
popf
fadd
sbb
sbb
jg
popa
fldcw
leave
or
dec
and
jnp
add
xchg
sahf
inc
mov
repnz
pop
add
imul
sub
call
out
pop
xchg
lods
xlat
ds
fstp
jbe
jae
cmpsb
cmc
adc
pop
jno
push
inc
sub
jns
out
pop
sti
scas
lea
ljmp
test
or
ss
sbb
mov
push
rcll
fisubl
xchg
cmpsl
out
cmp
add
lods
xchg
pop
ja
cmpsb
inc
adc
xchg
jne
sbb
push
mov
cwtl
mov
call
cltd
or
cmpsl
push
lea
lds
leave
iret
sbb
and
push
xor
and
pop
dec
pop
mov
or
bound
fnstcw
ds
pop
sbb
call
into
pop
cmpsl
jno
iret
dec
cltd
mov
sbbb
dec
test
daa
pop
cmpsl
ret
adc
push
push
jno
iret
int
mov
ja
dec
xchg
jl
jle
inc
into
pop
loop
cmp
out
bswap
pusha
out
stos
repnz
mov
ss
lea
test
test
fdivs
sbb
mov
cltd
fnstcw
cmp
jno
push
push
cmpsb
cltd
pop
mov
dec
std
xchg
fcmovnbe
insl
pop
adc
int
xchg
cltd
repnz
in
addps
cmp
popf
sub
test
hlt
cltd
jle
dec
scas
sub
adc
push
and
push
adc
xchg
jnp
push
pop
fdivrl
adcl
mov
iret
dec
fistl
fistpll
mov
mov
lret
filds
cwtl
inc
cmp
fsubs
nop
sbb
pop
es
mov
and
lret
testl
pop
push
push
enter
or
pusha
pop
dec
push
and
cmp
fsts
jb
decb
movsl
out
add
addr16
sahf
int3
fdivs
dec
adc
sub
fld
lcall
cmp
pop
ss
and
lea
xchg
stc
outsb
adc
fcmovb
sbb
movsb
imulb
scas
sbb
lret
fcoms
sbb
sub
cltd
adc
cmp
sbb
or
out
loop
lods
push
popa
push
mov
jl
jle
inc
arpl
cmpsb
out
outsl
xor
aas
imul
lret
sbb
imul
xor
mov
adc
fistps
sub
int
mov
fisubrl
je
dec
lcall
pop
push
push
cwtl
fcomp
movsl
sbb
lea
sbb
pop
jbe
push
jnp
cwtl
inc
decb
icebp
out
pushl
das
jge
dec
cltd
mov
sbb
mov
xchg
gs
jle
inc
inc
jno
xor
ds
in
lods
popf
sub
pop
mov
mov
cmpsl
leave
adc
fsubs
ljmp
inc
or
fnstenv
add
cmp
out
xchg
xchg
pop
xlat
and
mul
cmp
dec
incl
je
notb
cs
ret
repnz
mov
cmp
enter
cwtl
mov
sbb
lea
rcrl
jae
xchg
pop
mov
and
cmp
push
mov
cli
mov
ss
rcr
xlat
cld
pop
lock
dec
sbb
adc
out
dec
cwtl
in
adc
fmuls
pushf
cltd
das
jno
rcll
pop
ss
das
sbb
int3
push
lcall
outsb
scas
pop
push
dec
insb
inc
mov
sbb
aaa
sbb
sbb
pop
insl
inc
mov
mov
push
fmuls
stos
xchg
xchg
cmp
mov
cltd
adc
test
jle
out
ljmp
jg
mov
fildll
out
push
pop
xor
test
rcrb
xor
xor
mov
adc
fldl2e
repz
ss
adc
out
adc
rclb
jl
mov
pop
push
cmpsb
add
pop
xchg
jb
push
adc
sbb
dec
pop
int3
cwtl
pop
mov
cmpsb
pop
cltd
mov
aas
xor
sub
push
mov
and
dec
pop
mov
in
testb
cmp
out
subl
cwtl
jno
out
xchg
sbb
xlat
jbe
nop
pop
push
adc
xor
cmpsb
aas
popa
xchg
lahf
adc
fmuls
push
nop
and
add
inc
add
xchg
push
ret
xchg
dec
popf
out
outsl
jl
push
and
push
cwtl
and
addr16
test
sbb
inc
les
dec
cltd
xchg
fldcw
adc
mov
aam
rolb
iret
push
arpl
out
iret
cmpsb
pushf
iret
stc
pop
into
push
jb
out
jecxz
push
int3
fistpl
leave
ds
sbb
xor
popf
mov
lods
cli
fsub
cs
sbb
repz
or
pop
xchg
fldcw
adc
popa
loopne
lret
lea
adc
push
adc
ljmp
adc
sub
mov
cmpsl
mov
lcall
daa
jmp
push
sbb
aaa
pop
das
das
mov
pop
inc
test
rcll
xchg
xchg
fildll
pop
lea
popf
lods
lods
jnp
dec
mov
push
movsl
movsb
sbb
cmp
pop
and
push
mov
sbb
pop
cmp
push
cltd
mov
fstps
inc
add
xor
sbb
sub
fcmovu
daa
out
hlt
jb
pop
add
cmc
xor
add
pop
fldt
sub
adc
fdivrs
inc
mov
sbb
lret
loopne
jo
rdpmc
mov
pop
push
inc
cwtl
lret
lea
pop
sub
adc
filds
add
add
sbb
lea
lods
popf
jne
mov
out
mov
cs
adc
fs
loop
repz
mov
sbb
ss
mov
pop
xchg
push
lahf
lea
pop
std
or
push
pop
cwtl
push
stc
inc
test
or
xor
insb
adc
or
jnp
dec
cmp
cwtl
ret
mov
or
xchg
out
jno
inc
or
cs
popf
adc
jmp
lea
jmp
test
adc
in
pop
xor
or
xor
adc
xchg
in
sbb
pop
fucomip
and
adc
and
adc
inc
iret
cltd
cmpsb
cmp
lret
popa
bound
and
pop
fstpl
int
fnstsw
ficoml
out
cli
adc
pop
pop
cmp
push
cmpsl
scas
inc
ljmp
pop
pushf
cmc
mov
pop
loop
icebp
out
push
cwtl
cmp
dec
ds
cmpsb
frstor
mov
jno
iret
in
icebp
adc
add
xor
ficompl
stc
adc
hlt
lea
addl
xchg
iret
icebp
fistpl
test
jns
cwtl
jge
sub
cmpsb
cs
add
xchg
outsl
in
mov
rcrl
sbb
or
outsl
cmp
pop
sbb
add
lea
cmp
add
inc
popf
pop
xchg
dec
ret
lods
sahf
loope
pop
mov
sbb
pop
mov
jmp
xor
pop
pop
mov
xor
rclb
cltd
cmp
xchg
and
bound
inc
jl
bound
das
mov
popl
fstpt
lods
insl
pop
cwtl
aas
push
and
mov
adc
cltd
outsb
jno
iret
cmpsb
fincstp
push
or
lcall
xchg
xchg
ret
mov
xor
xor
push
rcrb
cwtl
xchg
xchg
and
popf
ja
mov
loop
cs
sbb
cs
mov
sbb
sub
fstpl
xor
dec
je
add
xchg
pop
cmpsb
sahf
daa
mov
cmp
xchg
mov
pop
fnsetpm(287
adc
mov
mov
into
lock
jmp
sub
xor
pop
cs
push
mov
adcl
out
inc
xor
add
or
scas
fcmovnu
cmp
inc
adc
add
xchg
cwtl
mov
pop
xor
push
out
out
add
fnstenv
sbb
mov
xchg
lods
cwtl
mov
mov
cmpsb
dec
adc
fisttpl
sub
adc
pop
adc
stc
out
lea
stos
or
imul
mov
push
in
lods
pop
xchg
orl
lret
xchg
in
and
fcmovnb
lea
cwtl
ficompl
test
cltd
fdivrs
loop
pop
lea
ljmp
sub
push
push
push
jns
jg
movsl
adc
mov
sub
mov
ljmp
lret
inc
fwait
xchg
cltd
ljmp
outsb
sub
adc
loopne
test
lret
cli
pop
xchg
scas
inc
mov
sti
xchg
dec
fs
pushf
sahf
or
addl
cltd
rcr
ficompl
sbb
testl
adc
pop
jnp
jge
aas
enter
jb
ja
jle
int
lods
push
lcall
cmpsl
pop
stos
mov
loope
clc
sbb
mov
push
cmp
sbb
sub
pop
sub
test
xchg
push
aad
sbb
jae
cmp
nop
fsubs
setno
sub
adc
stos
aaa
sbb
xchg
cmpsb
stos
daa
mov
dec
sbb
jno
into
and
or
sbb
mov
pop
popf
iret
xchg
mov
and
out
fwait
push
sti
xlat
sbbl
pop
popf
mov
sbb
push
jecxz
daa
bnd
in
xchg
sbb
dec
push
sbb
pushf
pop
add
or
int
pusha
inc
jmp
sbb
cmp
or
mov
call
cmpb
push
movsb
inc
das
add
add
popa
rep
cmp
pop
push
mov
daa
mov
pop
pop
sub
pop
sub
lea
dec
push
sbb
je
or
fstps
pop
and
sub
cmp
xorl
ds
pop
cmpsb
outsb
pop
xchg
pop
fldt
mov
ficomps
rcl
fcomps
push
mov
ret
sub
lcall
fstps
aas
jne
or
sbb
xor
aad
pop
inc
mov
sub
push
sbb
stos
lds
sbb
push
fadds
pop
pop
push
cltd
mov
sub
inc
xchg
sub
fdivrl
mov
and
fsubl
lea
test
mov
popf
scas
or
inc
cmp
cmc
dec
xchg
cltd
call
inc
push
xchg
in
push
push
out
mov
cmp
and
in
add
add
adc
out
mov
mov
cmp
sbb
lcall
pop
faddl
add
pop
cltd
sbb
sbb
push
push
fstl
out
dec
xor
fs
add
jg
mov
dec
es
jne
fcmovu
pop
jno
adc
sub
cmpsb
adc
popf
cli
lcall
das
mov
push
sub
adc
add
mov
xlat
outsl
dec
ja
inc
cmp
push
pushf
cmp
psadbw
pusha
jbe
xor
and
pop
cwtl
and
or
sbb
rcll
xor
mov
ss
mov
ds
fistpl
out
mov
mov
out
inc
repnz
lds
sbb
pop
outsl
cmp
or
pop
adc
lods
lds
pop
lea
mov
sbb
mov
push
cmpsb
lcall
bound
cmp
stos
sub
pop
fldt
in
iret
pop
sub
jae
sti
into
pop
cli
cmp
cwtl
cmpsb
mov
scas
clc
mov
cmpsb
out
adc
fxam
clc
daa
xchg
xor
sbb
cmp
negl
mov
pop
jecxz
repnz
push
fildl
add
ja
ds
inc
rorl
fldenv
or
sub
push
and
aad
daa
stos
popf
dec
rorl
xor
ss
sbb
mov
push
sbb
adc
insb
ret
pop
pushf
xor
fsubs
mulps
push
inc
out
mov
pop
fnstsw
pusha
adc
push
xor
call
pusha
xlat
out
xor
pop
fisubrs
repnz
pop
xor
adc
lds
sbbl
scas
pop
out
sub
xchg
mov
dec
int
push
negl
setbe
cmp
cli
mov
or
push
push
cmp
xor
xchg
out
mov
push
popf
xor
orb
cwtl
dec
fcoms
push
sbb
inc
mov
and
and
lar
es
iret
pop
iret
pop
xlat
adc
orb
cmp
xor
push
xlat
cwtl
es
fmul
mov
mov
push
fsts
cmp
sub
push
ss
xchg
xchg
xchg
mov
push
xor
or
pop
sub
mov
insb
in
add
pop
pop
stos
push
mov
mov
sbb
jg
adc
mov
pop
fldcw
add
aas
shrl
dec
or
and
cmpsb
mov
mov
jno
popl
fdivl
jl
ds
sbb
inc
add
lret
sbb
enter
test
sbb
or
mov
xchg
popf
out
outsb
push
pop
push
pop
xchg
movsb
daa
xchg
mov
xor
add
adc
sbb
and
sbb
out
lret
xor
pop
es
shrl
nop
sbb
fnstcw
sbb
adc
rorb
pop
mov
leave
sub
sbb
out
push
icebp
lea
fcomi
popf
subl
ss
movsb
add
loop
sarl
ret
push
sbbl
xchg
jne
cwtl
mov
js
push
or
pop
sbb
push
inc
lods
xchg
xor
pop
cwtl
pop
push
outsl
orb
fsubrs
mov
data16
jne
xchg
popf
insl
out
rcll
mov
pop
or
jl
jle
and
xchg
jnp
push
pop
loope
insl
cmp
xchg
cmpsb
lods
ror
fldt
daa
imul
fcomps
sub
sbb
xchg
cltd
daa
xlat
xor
push
sub
adc
sbb
pop
pop
push
inc
xor
adc
mov
add
fidivrl
push
pop
lahf
inc
jb
xchg
aaa
sub
rcrl
sub
xor
inc
into
xor
cmpl
filds
cld
sub
sub
rcll
imul
gs
fdivs
fsts
jle
push
je
divb
fistpl
test
pop
jp
xor
fcmovnu
aaa
push
adc
movsl
add
sub
push
cmpsb
xlat
popa
and
mov
pop
ljmp
xchg
iret
iret
xchg
xchg
xlat
call
out
or
je
jno
mov
xor
pop
xchg
hlt
jp
mov
sbb
inc
lcall
push
cs
push
sub
inc
fsts
xchg
mov
sbb
cmp
push
lea
push
sbb
pop
push
xlat
cltd
ficomps
adc
and
and
es
pop
dec
sub
sub
sbb
fsubrs
mov
xchg
test
imul
pop
pop
xor
jno
aas
push
adc
push
sbb
das
pushf
lds
pop
cmp
inc
ret
into
adc
addr16
fcompl
in
and
cs
cmpsb
jnp
nop
cwtl
pop
aad
out
xor
test
mov
ss
push
xor
push
push
mov
and
mov
jno
push
cmp
adc
mov
int
sbb
inc
addb
dec
dec
sbb
pop
lods
divl
add
out
pop
cmp
scas
mov
cmp
lahf
iret
cmpsl
pop
jp
hlt
fidivrl
xchg
cltd
scas
stos
and
mov
cmc
xor
fcomps
sbb
cmp
lcall
mov
push
bound
and
lods
or
fistl
pop
jp
mulb
sbb
pop
pop
mov
js
inc
lea
or
push
cltd
outsl
xchg
flds
and
ret
loope
mov
push
clc
inc
xor
fst
iret
mov
in
outsl
push
jmp
imul
xchg
sub
adc
pop
enter
mov
sbb
mov
xchg
adc
adcb
jne
mov
mov
or
ret
out
rdmsr
mov
mov
iret
dec
fsubr
xlat
aas
pop
out
or
jp
cmpb
fildll
sbb
ss
xor
sbb
push
or
jl
adc
lea
xor
add
cmp
std
xor
sbb
sbb
cmp
fsubs
inc
sbb
cmp
mov
and
sbb
ret
xchg
pop
in
cwtl
mov
sti
cmp
out
cmpsb
cmp
xlat
cmp
ljmp
mov
push
aaa
mov
xchg
enter
in
mov
xlat
ss
xlat
leave
pop
push
sbb
mov
mov
jmp
andl
outsb
and
jecxz
mov
cwtl
and
fcomp
xchg
out
mov
push
jl
adc
data16
lods
sbb
out
test
iret
sub
push
mov
cmp
or
cmpsl
add
bound
cwtl
fwait
cltd
inc
mov
jle
flds
push
adc
bound
fmul
lea
insb
pushf
or
adc
fdivs
iret
sbb
test
jbe
jns
inc
sub
cmp
popf
ss
xchg
clc
mov
ret
adc
pop
popa
cltd
xor
mov
or
repz
rolb
xchg
dec
aad
std
pop
fwait
cs
int
sbb
popf
push
mov
adc
xorl
xor
sub
mov
xchg
push
aam
inc
mov
stos
sbb
and
xchg
push
adc
test
fs
pop
cmpsb
adcb
fsubrl
jge
mov
icebp
sbb
cwtl
cmp
iret
sbb
inc
inc
add
pop
pop
mov
aas
cltd
inc
adc
lods
sub
mov
into
xchg
dec
inc
sub
scas
jb
pop
cwtl
or
aaa
out
push
lcall
popl
xchg
mov
in
out
into
mov
std
ucomiss
stos
dec
push
xor
xchg
adc
push
pop
push
push
pop
jl
daa
xchg
or
sbb
cwtl
sub
xor
fdiv
int3
sbb
inc
ds
and
and
cs
ljmp
cmp
push
out
mov
xchg
stos
adc
sub
aad
in
push
lods
daa
mov
fcomps
sbb
mov
add
jecxz
mov
sub
jo
das
mov
push
in
xor
jno
pop
outsl
dec
pop
adc
jge
add
fldt
push
fstp
cmpsb
popa
daa
push
cmc
iret
add
push
pop
inc
push
or
rdtsc
sub
nop
push
ret
inc
dec
pop
xchg
xlat
dec
sub
sub
popf
shr
fcomps
sbb
sub
cwtl
mov
fldcw
mov
inc
inc
cltd
sti
iret
sub
push
xchg
hlt
xchg
lret
scas
scas
lds
ret
popf
mov
xlat
ret
adc
movsl
int3
stos
ss
jo
xor
jg
or
aas
xor
pop
sbb
lea
cltd
lahf
sbb
add
or
pop
push
es
pop
xchg
mov
inc
bound
jl
adc
pop
xchg
xchg
lods
movsl
imul
push
sub
add
jge
or
ja
lcall
push
pop
mov
je
xor
and
push
push
cmp
adc
mov
int3
mov
dec
cmp
cli
mov
insl
div
dec
sub
insb
pop
ret
cltd
push
adc
cs
popf
sub
jbe
sub
push
mov
inc
sub
or
pop
das
dec
cwtl
adc
xchg
sub
push
xor
sub
out
and
fsub
mov
cmpsb
pushf
mov
sbb
add
iret
xchg
fistps
fsubr
mov
lods
les
adc
fstl
inc
fcoml
inc
pop
push
mov
mov
fildl
out
sbb
and
push
popl
sub
xchg
pop
cmpsb
outsb
daa
clc
pushf
adc
sub
push
sub
loope
je
movsl
pop
push
lods
lret
ljmp
seta
xor
xor
lods
fdivrs
sbb
pop
loope
mov
lea
pop
flds
mov
push
pop
sbb
push
xchg
xchg
and
mov
add
idivl
mov
iret
sbb
fisttpl
sbb
push
fcomps
and
scas
mov
fisttps
add
ds
adc
push
adc
push
pop
jno
push
jp
lret
inc
test
andl
dec
pop
push
xchg
adc
mov
scas
sub
mov
pop
pop
jg
sub
push
ja
fnstcw
lods
mov
inc
jno
cmp
cmp
and
pop
insb
dec
in
xor
adc
adc
ds
adc
imul
pushf
sti
stos
daa
pop
pop
cmp
mov
jl
jle
adc
xor
and
sub
push
jno
mov
int3
fnstcw
es
sub
xchg
out
aaa
jl
mov
pushf
or
inc
push
pop
sub
nop
sbb
push
jnp
mov
push
pop
xchg
test
xchg
fld
ret
sbb
sbb
push
nop
sbb
add
inc
jecxz
mov
dec
inc
pop
adc
fnstsw
lods
fdivs
adc
pop
fldenv
insb
mov
test
push
inc
adc
cmpsb
mov
and
ljmp
cwtl
and
cmp
bound
sbb
cwtl
lea
sbb
scas
cwtl
adc
lcall
ret
int3
push
cwtl
dec
mov
or
mov
cltd
jns
scas
push
sbb
lret
xor
roll
add
xor
jno
or
and
dec
pop
sbb
cwtl
inc
push
xor
outsb
sub
push
sub
pop
or
xor
lahf
push
push
jmp
popf
lods
pop
popf
and
xchg
pop
dec
test
pop
outsl
pop
add
cmp
jl
jle
sub
push
xchg
mov
fldcw
cmp
push
rcrl
jl
jle
inc
sbb
pushf
inc
ljmp
stc
or
mov
mov
repnz
adc
jno
push
mov
sub
rdmsr
push
xchg
fimull
cwtl
notb
aam
out
dec
fnstenv
outsb
xor
pop
and
in
mov
inc
adc
ret
jne
mov
jbe
mov
pop
mov
xorl
loop
rcl
shld
push
rol
rcl
push
lea
shl
call
scas
cli
inc
dec
es
sti
test
ja
mov
ss
not
in
jne
push
xchg
sub
push
jne
cli
fsts
test
sbb
mov
pushf
es
mov
sti
cmp
cmp
jmp
mov
adc
mov
xor
push
and
test
pop
xchg
imull
mov
mov
in
sub
stos
insb
call
xlat
sbb
ljmp
push
test
in
sub
xlat
sub
in
jmp
imul
sub
stos
xlat
ljmp
xlat
sbb
les
cmpsb
xchg
stc
sub
xchg
addr16
shl
cmp
sub
ret
xchg
pushl
lret
mov
dec
sbb
test
jnp
push
lret
push
mov
les
sub
mov
mov
enter
ja
push
adc
pushl
or
mov
clc
jae
pop
cmp
mov
push
outsb
mov
adc
mov
mov
fcmovne
in
xchg
push
mov
inc
je
bt
cmp
cmc
add
call
pop
or
inc
les
fnstcw
fadd
imul
aam
sbb
pop
test
or
add
idiv
sbbl
jp
cmp
push
ficoml
shlb
inc
scas
xor
imul
inc
jmp
inc
jne
pop
jg
insl
rcrl
xchg
mov
mov
push
sub
jne
int
cmc
adc
dec
xor
test
clc
cmpb
call
push
mov
push
pushf
mov
lea
jmp
add
mov
push
push
xlat
fnstcw
pusha
imul
add
ret
ljmp
xchg
dec
pop
pop
dec
mov
movsl
jle
mov
lahf
sbb
popf
cmpsb
cs
xchg
in
sbb
sub
testl
sub
and
dec
cmp
add
jl
mov
arpl
xor
bound
push
push
mov
mov
mov
es
pop
xchg
dec
fdivl
imul
xlat
or
ljmp
mov
lods
cld
dec
popf
sbb
mov
mov
jl
out
aas
mov
sub
dec
je
ficoml
jne
or
jne
push
cmp
aaa
mov
inc
pop
mov
fs
sub
mov
insl
loopne
into
inc
out
cmp
add
dec
int3
cli
loopne
leave
sbb
sahf
sub
xlat
dec
data16
notb
dec
stc
sar
jae
cmpsb
xchg
adc
sarl
stc
cmp
push
sub
jmp
sahf
sub
xchg
pop
cmpsb
pop
out
mov
pop
icebp
and
lods
mov
dec
xchg
or
ficoml
jno
lea
in
fists
push
pop
mov
sbb
nop
lods
movsb
or
dec
imul
movb
stos
addb
ja
rcrl
inc
add
xchg
div
cmp
dec
dec
or
imul
ja
jl
ret
popf
cwtl
mov
xor
push
loope
mov
cmpsl
stc
int
jne
cmp
jl
adc
jae
lahf
inc
xor
test
and
xchg
jecxz
push
ret
xchg
shlb
rclb
mov
fisttpll
pop
jle
pop
adc
sub
add
dec
outsl
or
push
insl
inc
xchg
jno
cmp
push
movsb
lahf
or
cmpsb
aas
roll
lock
leave
jns
mov
in
or
jne
mov
cmpsb
sbb
ds
rolb
insb
mov
mov
push
subl
inc
jle
dec
lea
mov
hlt
inc
les
sbb
push
stc
mov
sub
shr
movsl
sbb
loop
insl
push
sbb
les
js
cld
or
mov
aam
and
idivl
fnsave
pop
sub
jns
push
jbe
or
cltd
fisttpl
mov
sub
pop
mov
mov
std
es
sarl
rcr
xor
loope
repz
lea
lods
repnz
mov
sub
mov
inc
sahf
jae
push
ljmp
or
and
mov
shl
fistpl
sbb
mov
xchg
mov
jmp
ljmp
jbe
mov
fst
sub
test
mov
leave
ficomps
sub
pop
mov
scas
push
clc
cld
popf
jbe
stos
and
lods
inc
mov
mov
pop
sbb
daa
leave
dec
push
aas
or
dec
jbe
pop
cmp
aaa
jle
mov
popa
or
dec
dec
dec
dec
cs
insb
add
incb
les
scas
adc
jg
sbb
xchg
in
repz
fcoms
sbb
push
div
decb
push
inc
sbbb
jb
and
pop
insl
nop
daa
dec
sub
adc
or
cmp
mov
mov
sub
sbb
and
fdivrs
dec
jecxz
xchg
or
lds
xchg
repnz
inc
pop
out
xor
fsubrl
mov
les
mov
sbb
lcall
int3
cmp
adc
stos
mov
imul
push
aas
arpl
mov
fiaddl
mov
push
mov
ja
insb
imulb
into
sahf
int3
mov
repnz
adcb
shlb
adc
xlat
sub
pop
scas
push
in
into
sub
push
jnp
mov
cmp
dec
mov
pop
jl
mov
or
enter
dec
sbb
movsl
mov
sbb
cli
dec
push
daa
xor
out
fisttps
mov
pushl
mov
pushf
jmp
shld
jmp
std
adc
inc
les
stos
sbb
xchg
pop
push
pop
movsl
dec
js
test
adc
popa
push
loopne
les
xor
icebp
addl
inc
cmp
xor
lahf
mov
xchg
fmul
push
mov
outsb
dec
lods
adc
xchg
movsl
inc
stos
mov
xor
cltd
dec
aad
pushf
jne
jnp
xor
je
mov
lahf
mov
push
scas
mov
cmp
mov
xchg
jns
sub
stos
repnz
daa
adc
pop
lret
sub
mov
les
mov
cmp
xor
xchg
adc
pop
lar
fisubrl
jp
jle
mov
jmp
push
mov
push
sahf
loopne
stos
sbb
pop
sub
mov
xor
mov
dec
jns
pop
mov
xor
cmp
or
xor
data16
xor
into
popa
fcomip
aas
aam
mov
xorb
pushf
pusha
mov
push
pushf
pushf
pusha
lea
jmp
push
lea
jne
pusha
call
cmp
inc
les
imul
and
in
and
pcmpgtd
fmulp
mov
jge
int
filds
mov
rcr
jae
mov
inc
fstpt
into
hlt
lcall
add
out
push
popf
and
pop
inc
imull
out
pop
jge
dec
pop
xor
sub
mov
enter
mov
jnp
lods
test
jo
jae
pop
inc
in
mov
aad
sub
mov
hlt
lcall
scas
je,pn
adc
mov
bound
es
xlat
sbb
hlt
in
xor
mov
mov
das
jbe
mov
mov
call
mov
mov
adc
jl
nop
fsubr
xor
push
mov
mov
inc
aam
insb
jno,pt
icebp
sbb
mov
fisttps
lahf
and
shl
repz
sahf
xor
inc
dec
mov
test
xor
cmp
mov
lret
sub
cwtl
xchg
leave
jbe
ja
push
cltd
pop
xor
xor
test
dec
movw
lea
call
push
cmp
pusha
lea
jae
bt
push
cmp
pusha
lea
jae
pushf
lea
jle
stc
clc
cmp
call
aas
and
jbe
ss
cltd
stc
sub
add
loop
je
xor
jecxz
data16
cmp
shrl
ljmp
jns
outsb
out
push
iret
jg
test
xchg
push
add
stos
mov
mov
imul
cs
dec
shrl
sbb
jl
pop
xor
dec
lock
inc
push
mov
mov
cmp
pop
pop
addr16
fmulp
mov
ljmp
xchg
push
adc
mov
dec
movsl
and
les
mov
or
adc
rcl
rorl
sarb
add
push
fcoms
pop
push
int
mov
xorl
scas
dec
mov
sub
repz
pop
in
sahf
xchg
push
add
js
sarl
fistpl
sete
cmp
mov
popf
mov
mov
dec
lcall
xchg
push
add
aaa
loop
add
loop
pushf
cmpb
jmp
call
lock
xor
cld
and
mov
jne
mov
adc
inc
in
out
sub
lret
stc
push
orl
adc
or
sbb
movsb
jb
add
dec
inc
cmp
adcl
push
jno
cmpsb
loope
xchg
mov
sub
pop
aam
movsb
aas
mov
loopne
rcr
aaa
aaa
scas
pusha
push
cs
jno
out
popl
rcll
stc
add
add
add
jo
popa
inc
insb
outsb
add
xchg
xor
out
xor
fistl
les
hlt
and
cmp
xchg
mov
pop
inc
xor
int3
dec
or
or
mov
rcrl
hlt
or
mov
ljmp
aam
push
pop
bnd
xor
loop
adc
pop
add
pop
clc
aam
push
mov
repz
add
xor
movb
mov
inc
imul
mov
js
loopne
cmp
lock
xor
pop
aas
xlat
xor
sti
mov
ret
hlt
jle
lods
mov
adc
scas
loopne
xor
pusha
repnz
movsl
cmp
icebp
out
mov
subb
int3
push
negb
xchg
dec
xchg
test
in
xor
or
or
and
jae
sub
movsl
and
xchg
dec
in
ret
pop
inc
mov
adc
adc
dec
outsb
fidivrl
les
pushf
mov
insl
adc
fsubr
xchg
sbbb
int
add
push
movsl
xchg
mulb
mov
mov
or
inc
mov
mov
cmc
xor
shl
insb
daa
lock
enter
xor
lods
in
fwait
hlt
ret
sarb
jle
xchg
adcb
fisubs
mov
cli
push
mov
sbb
ror
call
lea
jae
clc
call
jnp
dec
cmp
add
push
jo
push
popa
outsl
pop
outsl
cmp
mov
stos
add
aam
mov
dec
cmp
and
imul
js
call
test
sbb
sub
leave
shlb
lea
outsb
adc
test
mov
xor
scas
add
sbb
or
fs
lret
sbb
out
daa
pop
flds
cmpsb
cltd
cmpsl
sub
pusha
mov
push
inc
cld
rcl
les
xchg
sti
cmc
xchg
stos
fildl
fldl
adc
fisubrs
std
popf
mov
outsl
negb
or
dec
sub
xor
subb
fstpt
mov
adc
xor
inc
xchg
push
aam
sti
mov
and
mov
imul
decl
dec
sub
jle
nop
cmp
loope
insl
mov
inc
xlat
sbb
xchg
dec
insl
and
cmp
aad
test
flds
mov
fcomps
adc
and
xchg
loop
pop
inc
orb
pop
mov
pop
fisubrs
xchg
xchg
xchg
xor
cli
push
push
mov
lods
das
sbb
adc
enter
sub
sbbb
pop
mov
and
mov
jo
faddp
test
jo
rcl
mov
scas
pop
fisubrs
add
sub
xchg
dec
stc
cmp
les
popf
xor
popf
shll
xchg
int3
xorb
adc
ljmp
nop
mov
cmc
es
fsubs
cmpb
pushf
call
inc
lds
cli
mov
out
dec
gs
andb
mov
push
stos
scas
mov
xchg
jmp
jae
adc
cmp
cltd
cltd
sub
and
shl
sarl
les
ss
lods
inc
dec
movsl
inc
mov
mov
xchg
or
pop
repz
pop
aad
and
push
xchg
imul
cmpsb
pop
cs
push
mov
dec
je
outsl
mov
jl
jae
sahf
mov
xor
push
xorl
cmp
data16
int3
mov
mov
adc
jne
rol
add
nop
add
mov
add
xor
inc
fstpl
and
mov
adc
ret
stos
push
ficoms
push
add
in
inc
addb
push
push
bound
ret
out
test
mov
mov
mov
cwtl
sub
dec
data16
xchg
js
ret
repz
call
rep
bswap
mov
pushl
mov
mov
lea
jmp
mov
mov
pushf
pushf
lea
jmp
jmp
pop
bound
cmp
les
add
fs
imul
mov
ja
cmp
push
insb
insb
mov
in
push
or
rorl
sub
ret
mov
movsb
sub
stos
ja
mov
sbb
int3
mov
lds
or
in
jb
pop
push
add
add
imul
je
aam
je
sti
inc
mov
ljmp
jo
jmp
stc
les
sbb
xor
out
or
adc
xor
hlt
add
xor
xchg
mov
sar
les
sbb
pop
mov
outsl
stc
les
sbb
sbb
xor
int
sub
sbb
mov
ds
cli
les
sbb
and
xor
push
adc
mov
in
lea
addr16
xor
xor
les
sbb
or
inc
in
mov
sbb
iret
sbb
xor
lea
xchg
les
sbb
add
mov
sbb
stos
pop
decb
mov
sbb
and
cwtl
out
out
xor
std
push
inc
mov
sbb
daa
adc
sbb
jmp
or
mov
xor
les
sbb
xor
les
or
movsl
pusha
movsl
ret
loopne
xor
add
jae
les
sbb
add
mov
mov
pop
stc
les
sbb
pop
mov
and
les
sbb
add
shlb
dec
mov
mov
fisttpll
jg
les
sbb
add
mov
dec
sbb
mov
les
cmp
fwait
inc
ficoms
fisttpll
aad
mov
sbb
pop
xchg
inc
sbb
xor
mov
mov
mov
mov
sub
inc
out
in
in
mov
adc
xor
mov
or
xchg
adc
in
mov
add
mov
mov
sbb
and
out
sbb
add
mov
or
add
arpl
sbb
cmpsl
daa
cmp
mov
adc
andps
insl
hlt
mov
lea
sbb
xor
les
sbb
xor
mov
sbb
and
xor
adc
pusha
cmp
xor
add
les
sbb
xor
mov
mov
imul
xor
add
mov
or
mov
xor
adcl
fists
xchg
cltd
pop
pop
xor
jne
mov
mov
call
stos
shrl
les
fidivrs
mov
xchg
sahf
mov
pop
fnstenv
jae
xchg
test
popf
int3
nop
adc
js
adc
push
xchg
sbb
daa
sbb
in
les
sub
data16
outsl
mov
xchg
jne
js
push
fdivrl
jl
in
jo
outsb
mov
xchg
xor
inc
jl
fbstp
insb
js
adcb
test
gs
push
inc
xor
es
clc
xchg
sar
fdivrp
push
push
add
fisttpl
add
pop
jmp
pop
dec
adc
fnsave
dec
and
fs
mov
inc
int
mul
testb
mov
shll
jle
dec
lea
je
push
and
push
lahf
mov
cmp
add
mov
mov
jp
hlt
ficoml
int
and
in
nop
xchg
sub
xor
les
xor
cli
std
in
jns
pop
test
sub
mov
dec
adc
push
call
inc
stc
inc
push
adc
xor
pop
mov
aaa
fldt
in
mov
rcll
pop
icebp
sbb
aam
pop
and
push
and
or
sbb
adc
push
sbb
clc
ret
jae
pop
sub
jl
dec
sub
cmc
jmp
pop
mov
mov
mov
popa
test
les
or
inc
imul
rcrb
mov
sub
mov
push
dec
push
call
fcompl
je
sbb
push
mov
xchg
fucomp
mov
scas
addr16
inc
cmc
mov
and
xor
lock
jl
jnp
sub
ljmp
or
fdivrl
inc
adc
mov
and
mov
fstl
xor
lret
test
and
daa
xchg
loopne
lcall
loop
mov
rcrb
pand
or
pop
mov
mov
outsl
mov
adc
outsl
repnz
std
mov
test
addr16
push
sub
daa
fsubrp
push
and
lds
inc
push
in
jne
mov
cmp
sti
and
add
clc
ret
sub
test
inc
or
lret
dec
daa
loope
mov
js
add
xor
cld
jl
mov
adc
xor
inc
lds
je
and
nop
imul
out
push
xchg
add
sbb
les
scas
inc
sahf
icebp
out
pop
js
mov
pop
inc
aam
sahf
aad
push
mulb
out
cmpsb
lret
or
xchg
shlb
pop
stc
imul
mov
adc
xchg
or
adc
shlb
sbb
jne
inc
dec
arpl
xor
pop
ret
xchg
pop
dec
push
cs
and
aaa
sub
aaa
fisubrl
pop
aaa
xchg
xor
and
mov
mov
xor
les
jp
hlt
stos
xchg
lret
jmp
inc
dec
jp
fildl
or
pop
sbb
repnz
xchg
incl
xchg
push
daa
out
lahf
sub
xchg
popf
loopne
xor
jbe
shl
nop
mov
jp
pop
sti
xchg
push
stos
and
push
sub
and
dec
pushf
pusha
dec
sbb
mov
stos
inc
shlb
int
pusha
sub
or
mov
and
je
loop
cmp
or
mov
roll
jecxz
push
dec
pop
xchg
xor
inc
pop
out
scas
mov
xor
call
mov
je
xor
mov
cmp
fisttpll
or
fdivr
fildl
faddp
adc
ds
sarl
cmpsb
inc
sti
pop
movsl
adcb
js
sahf
int
or
pusha
test
mov
cltd
sub
sub
fadds
inc
inc
call
frstor
xchg
out
ja
cmpsl
ja
pop
pop
xchg
vpsubq
and
pop
int
aaa
cmp
xchg
cs
jmp
test
iret
lcall
out
cmpsb
sbb
popf
adc
xchg
cmp
mov
add
pop
cmp
stos
cmp
sub
add
xlat
sub
movsb
xor
pop
cmp
cld
insl
loopne
push
shlb
xor
xor
mov
lret
mov
mov
push
push
sbb
pusha
sahf
sti
leave
sub
mov
pop
in
je
dec
push
mov
rcl
or
ret
xor
inc
xlat
leave
out
insl
adc
daa
mov
adc
les
fcmovb
sub
popf
and
jo
cmpsl
faddl
int
mov
rcl
or
push
nop
cmp
imul
sbb
bound
mov
icebp
sub
sbb
sbbl
pop
mov
xlat
es
decb
lahf
lds
sub
add
mov
nop
cmpsb
addr16
ljmp
gs
imull
out
push
in
mov
or
fisttps
or
enter
pop
sub
fwait
jae
iret
xchg
push
out
loop
xor
movsl
js
push
call
adc
xor
sbb
pop
and
nop
movsb
mov
movsb
push
sbb
sbb
sbb
pop
sub
adc
mov
and
push
sti
insl
lock
add
js
and
and
push
mov
pop
and
lcall
mov
xor
test
push
or
push
lret
mov
or
ds
add
adc
xlat
mov
add
ljmp
dec
xchg
fidivrl
lock
pop
pusha
mov
push
pushf
lea
jmp
pusha
sub
bt
clc
cmc
cmc
pushl
popl
pusha
stc
cmp
pushf
push
lea
ja
and
adc
sub
movsbw
xor
add
pushf
inc
mov
xor
mov
pushf
push
clc
repnz
pushf
pusha
mov
pushl
lea
jne
bswap
push
setb
bswap
movb
jmp
setg
add
sbb
mov
clc
push
bt
shr
stc
cmp
cmp
call
lea
jbe
xor
mov
pushf
bts
bts
add
sar
mov
mov
sets
sar
add
bswap
rcr
shr
shl
movl
setge
mov
add
pushf
cmp
pushl
pushf
jmp
fbstp
jl
ds
repz
inc
insl
sub
push
orl
sbb
lods
mov
or
and
negl
out
dec
lea
nop
jmp
jo
push
adc
imul
add
js
jge
jbe
lods
repz
gs
das
andl
iret
jns
jo
cmpsl
pop
pop
ja
xor
lahf
xlat
stos
rcl
andl
mov
ja
xlat
clc
data16
cltd
jbe
xchg
stc
adc
xor
rcr
cli
pusha
sub
cmpsb
sub
js
mov
test
xor
movsb
push
cld
out
jp
xchg
lds
sbb
in
ja
iret
lcall
cs
xchg
xchg
inc
adc
adc
in
dec
dec
stos
jno
and
adc
cmp
imul
mov
pop
clc
push
jl
lret
sti
loop
lods
mov
fwait
je
pop
shrb
ret
xchg
fs
aam
jle
and
push
sub
mov
dec
jecxz
add
push
pop
pusha
ds
xor
dec
add
call
rorl
fimuls
jns
or
outsl
xor
ljmp
or
in
lret
test
les
testl
cmp
push
xor
daa
or
scas
pop
push
inc
sub
push
mov
lods
sbb
sbb
or
popf
pop
dec
pushf
push
jbe
sbb
neg
dec
dec
and
es
rorl
sarl
pop
mov
lea
add
jle
or
or
cmc
stc
in
ret
data16
negl
aad
or
jecxz
decl
sbb
sbbl
or
inc
adc
jge
mov
pop
iret
sahf
xchg
or
icebp
or
es
jecxz
sbb
aam
imul
sbb
inc
mov
int
cmpsb
sbb
adc
xor
loopne
clc
fimuls
lock
dec
inc
inc
adc
jl
mov
or
add
add
or
xchg
cltd
neg
popa
jo
xor
mov
out
inc
inc
or
adc
pop
iret
idivb
lock
int3
sub
cmp
loop
test
out
movsb
mov
sub
or
test
and
mov
jo
iret
push
shl
lret
mov
sub
or
mov
lods
xchg
jns
push
add
lahf
or
xor
jbe
stos
xor
add
scas
lds
jb
sub
dec
push
sbb
dec
sar
jmp
sub
cmpsb
pop
xchg
rcr
mov
sub
sbbl
repnz
out
in
cltd
mov
or
shl
xchg
or
xor
enter
cmp
pop
or
notb
inc
add
dec
jmp
or
test
setne
mull
sub
mov
push
popa
lcall
nop
inc
xchg
fmull
cltd
and
negb
or
mov
in
je
sar
das
and
jbe,pn
sub
cmp
xchg
ficoms
jg
push
adc
aam
int3
pop
jle
or
and
cmpb
cmp
outsl
jp
in
notl
jge
not
and
clc
and
dec
ss
xor
or
sbb
cmp
pop
or
or
mov
adc
xchg
xchg
shr
mov
arpl
cltd
call
pop
xchg
or
push
imul
mov
xchg
jmp
jb
jmp
xlat
jae
push
or
mov
or
sti
pop
daa
into
add
sub
adc
aam
rcll
aad
xchg
iret
jo
mov
int3
pusha
in
mov
int
dec
sahf
mov
xchg
jmp
fmuls
jns
insb
adc
pop
test
xor
cmp
sbb
adc
or
pop
std
icebp
add
cltd
fisttpl
cwtl
loope
stos
out
adc
pushf
call
nop
push
push
jb
push
aaa
mov
fcompl
xor
or
lret
loop
outsb
int
sti
or
pushf
pop
pop
ret
mov
lock
sub
adc
iret
mov
cmp
shl
jge
inc
jb
or
fwait
xchg
sbb
lahf
or
or
or
test
imul
aaa
call
mov
xor
push
nop
test
or
sbb
or
push
pop
push
dec
or
adc
div
out
data16
loop
pop
adc
cmpb
xlat
cmp
in
jecxz
fisttpll
mov
jge
outsl
or
mov
mov
adc
iret
jp
ds
xor
dec
add
cmp
lock
ja
test
adc
add
sbb
dec
jp
repnz
sub
lock
stos
orl
aas
aam
xor
mov
mov
in
lcall
push
ljmp
add
and
pop
jge
dec
and
xchg
in
pop
mov
add
push
sbb
fmull
pop
jns
mov
lds
push
jb
push
or
cld
jno
js
and
pusha
cli
xchg
or
or
push
jno
mov
popf
mov
push
inc
jp
bound
lret
dec
fs
movsl
add
into
or
xor
mov
push
test
xchg
repz
roll
push
clc
dec
mov
jbe
stos
cs
ffree
jg
notb
into
or
inc
add
mov
add
addl
leave
push
lea
dec
test
mov
subb
push
or
fadds
or
bound
mov
adc
mov
push
sbb
popa
or
cmpsb
mov
icebp
pusha
subb
std
and
cmp
pop
rorl
repz
adc
jmp
test
pop
or
mov
inc
or
or
jg
adc
stos
orb
cmp
testb
aam
adc
ret
sub
cmp
mov
dec
aam
push
and
adc
sub
pusha
repz
push
ret
aad
or
jle
sub
push
les
lahf
iret
repnz
stc
in
or
dec
sbb
popf
std
inc
daa
mov
pop
fwait
aas
sub
out
lret
inc
scas
in
fnstcw
lock
and
push
adc
fcoml
pop
data16
push
mov
aad
in
add
xchg
cmp
jg
fiaddl
cmp
ljmp
lea
sbb
jno
inc
jg
testl
mov
dec
adc
cwtl
pop
xchg
js,pt
push
sbb
mov
xor
ss
test
sub
mov
daa
scas
or
push
sub
push
sub
pop
mov
cmp
push
leave
or
pop
or
jl
inc
lret
mov
out
xor
jo
and
aad
xlat
dec
fwait
into
cli
js
and
push
add
inc
or
sbb
fscale
xchg
adc
pop
in
shrl
push
mov
aas
cli
lea
inc
push
pop
mov
call
hlt
shrb
popa
mov
dec
test
jg
into
mov
pusha
sbb
call
fisttpll
stc
ret
push
and
orb
nop
out
xor
shll
test
mov
leave
and
imul
xchg
in
pop
inc
inc
cwtl
add
sub
les
xor
insl
or
mov
shll
lods
mov
or
sbb
loopne
js
xor
adc
orb
xchg
push
adc
loopne
xchg
xor
and
das
dec
or
add
pop
or
push
jl
aaa
pushf
push
vmovhps
enter
or
push
pop
hlt
shrb
adc
xor
mov
out
aas
cmpsb
lret
jb
mov
or
sub
jge
mov
and
mov
xor
jae
iret
iret
shll
xor
ss
xchg
nop
ljmp
or
out
lahf
lds
inc
or
mov
adc
lret
das
cmpsb
dec
dec
mov
cmp
pop
scas
es
mov
clc
dec
or
adc
and
cmp
in
push
lea
push
push
popf
int
xchg
cmp
es
inc
mov
or
notl
or
xchg
hlt
dec
mov
xlat
pop
inc
dec
add
adc
inc
push
fiadds
or
push
pop
ja
shll
mov
adc
mov
mov
inc
push
sbb
sbb
fistpll
aaa
push
lret
push
push
mov
jns
adc
dec
adc
push
sub
pop
js
loopne
and
in
insb
sub
repnz
xor
insb
cmp
sbb
outsb
pop
sbb
push
adc
pop
sbb
pop
insb
mov
sbb
outsb
daa
xchg
push
lods
out
insb
das
mov
jb
cmc
outsb
clc
xchg
aas
sbb
insb
mov
clc
mov
outsb
mov
out
insb
jb
jbe
cli
sbb
outsb
adcb
cmp
adc
pop
adc
xchg
sub
in
mov
stc
mov
adc
dec
jns
lea
addr16
cmpsb
xchg
inc
in
or
xchg
and
psubd
and
jmp
fisubl
jle
je
repz
cmp
mov
mov
sbb
and
mov
push
mov
push
lcall
dec
iret
in
pop
sub
fisubl
bound
pop
daa
push
ljmp
push
cmc
mul
jmp
rcrl
frstor
inc
movsl
fisttpl
pop
pop
leave
movsb
pop
push
loop
addr16
and
adc
pop
xchg
inc
push
and
fisubl
in
pop
addr16
push
xchg
shll
push
pop
daa
arpl
out
iret
frstor
int
mov
mull
inc
pop
nop
cmp
dec
stos
fwait
mov
and
clc
xchg
adc
shlb
in
nop
andb
gs
jb
inc
cwtl
and
or
add
pop
jb
xor
sub
add
notb
lcall
je
and
dec
push
dec
sahf
stos
sbb
addr16
ret
xchg
pop
movsl
push
add
and
cmpsl
mov
jo
fisttpll
out
es
cmp
add
xor
std
sub
jb
shl
xchg
mov
mov
fstp
mov
pop
fwait
shlb
adc
aas
adc
cli
lods
ret
movsl
gs
mov
sbb
sub
and
stc
push
xor
pop
jp
cmp
sbb
dec
inc
dec
dec
das
and
sbb
mov
rclb
sbb
jecxz
not
mov
fisttpll
sbbl
cli
pushf
jl
mov
cmp
xor
fidivrl
jo
sub
das
sub
cvtps2pd
pushf
mov
lret
pusha
jnp,pn
sub
cmp
pop
mov
dec
and
cmp
adc
rclb
or
jb
es
cmp
addl
jl
rcll
sub
jnp
test
or
fcompl
lcall
xor
push
sbb
cmp
je
fisttpll
or
dec
arpl
inc
jmp
inc
fnstenv
lods
es
jb
mov
cs
sub
outsb
ss
dec
cmp
cmp
dec
dec
cld
fldcw
inc
xchg
push
sbb
es
lret
rorb
cmp
sbb
fiaddl
inc
and
pop
lea
sbb
push
cltd
icebp
jns
jmp
dec
pop
sub
xchg
es
or
ja
idivb
mov
ret
add
or
pop
sub
inc
sub
lret
adc
cmp
mov
xchg
push
mov
adcb
cmpb
pop
dec
cmp
ret
dec
jb
mov
mov
sbb
sub
orb
ds
sub
push
inc
incl
outsb
fisttpl
cmp
and
hlt
xor
and
dec
adc
push
std
pop
mov
pusha
sub
and
push
cmp
bound
push
or
xchg
test
sahf
ds
xchg
push
xor
pop
push
sub
pushf
inc
ds
ss
adc
sbb
or
fwait
push
lret
pop
ficompl
call
and
pop
add
sti
adc
fistl
push
cmp
dec
cli
ret
adc
sub
xchg
and
pop
fistl
fsubrs
push
test
lcall
js
mov
inc
push
stos
es
fwait
bound
ret
sbb
bound
shrb
mov
div
xor
cld
ja
xor
call
lcall
cmpsl
addr16
out
seta
in
pop
push
fwait
sub
mov
inc
fstps
imul
cmp
xchg
std
xor
lcall
push
inc
lea
out
sbb
pop
xchg
jmp
xchg
pop
jns
pop
daa
mov
or
fs
es
pop
fwait
add
adc
jb
pop
sub
lcall
inc
inc
add
sub
jg
outsb
mov
lea
push
ljmp
sbb
shll
add
mov
xor
rcll
pop
mov
cli
jns
stc
shlb
mov
ljmp
adc
arpl
enter
stc
mov
clc
jae
mov
fimuls
xchg
es
jl
or
mov
cmp
mov
repz
sbb
jmp
and
cltd
pop
and
pop
xchg
adc
sbb
adc
fwait
imul
das
inc
out
jle
outsb
mov
mov
sbb
mov
stos
xchg
subb
push
inc
rcl
sbb
and
push
pop
xor
xchg
pop
jecxz
mov
cwtl
test
dec
mov
push
xchg
sub
sbb
add
adc
adcl
dec
sbb
mov
xchg
sub
inc
cli
rcrl
adc
imul
sbb
sbb
or
push
sub
xor
pop
ds
ret
rolb
sub
into
lods
pop
push
mov
push
mov
into
xor
pop
and
sbb
adcl
inc
mov
push
insb
fisubrs
ffreep
push
mov
sbb
into
fwait
sahf
dec
stc
orb
mov
push
into
push
lea
pop
dec
dec
leave
or
test
sub
cltd
sub
sub
das
movsl
adc
mov
jno
cld
aam
jle
into
jle
pop
adc
mov
lods
mov
and
pop
and
jp
lea
sbb
sbb
adc
ja
adc
mov
lcall
sahf
pushf
xor
push
aad
cwtl
sbb
mov
xor
and
fsubl
or
pop
or
inc
jle
ja
and
pop
ds
inc
dec
add
lea
ss
ror
jle
jb
mov
lcall
int3
xchg
jno
push
sub
aad
inc
sbb
mov
cmp
out
arpl
aaa
ds
cmp
or
sub
push
dec
test
cltd
and
arpl
push
mov
jbe
cmp
stc
xchg
pop
and
in
lock
jmp
xchg
dec
xchg
fmuls
xlat
dec
jns
cmovae
jne
xstore-rng
cmpsl
or
or
or
lcall
sbb
or
cmpsb
jmp
xor
mov
fcomp
inc
cmpsb
adc
and
mov
roll
jo
aas
imul
lret
lods
sarb
clts
sti
mov
fcomip
pop
adc
cmpsb
jecxz
xor
jmp
je
sbb
int
ja
lods
mov
jns
and
out
pop
mov
aaa
mov
cmpsb
inc
mov
jae
lcall
fcomps
add
sbb
jne
adc
jle
aas
inc
daa
out
fimull
arpl
in
pop
inc
and
mov
sbb
mov
dec
mov
mov
push
pop
mov
inc
mov
in
mov
lahf
dec
inc
mov
dec
test
outsl
xor
or
fistpll
push
and
jbe
mov
dec
sbb
lret
push
fcos
mov
dec
pop
bound
inc
fdivr
sbb
or
jns
sbb
jge
decb
cli
mov
clc
ss
retw
movsl
mov
and
mov
sub
shrb
dec
fmull
or
sub
notl
jnp
sti
add
dec
mov
mov
arpl
lods
add
cmp
push
or
loop
daa
jmp
ljmp
pop
inc
fmull
add
mov
pop
add
dec
cmpsb
pop
movsb
dec
leave
sbb
setg
mov
es
dec
rolb
push
loopne
sahf
imul
loop
inc
stc
insb
xchg
inc
out
mov
fimuls
mov
lock
push
movsl
das
mov
movsl
push
gs
les
test
ucomiss
or
test
sub
lahf
lcall
inc
mov
lcall
or
add
sub
pop
sbb
sti
mov
inc
sub
add
std
enter
sub
adc
adc
xor
inc
sbb
dec
push
sub
push
or
xchg
push
sbb
das
push
movlps
lret
scas
fwait
pop
sub
pop
push
adc
lea
add
aas
mov
cmc
adc
mov
sbb
arpl
daa
loop
push
icebp
dec
xchg
icebp
sub
mov
sti
sbb
clc
not
enter
inc
adc
mov
cmpsl
dec
pop
sti
dec
pop
mov
cli
ljmp
mov
clc
jge
fnstsw
cmp
mov
stc
lret
rclb
inc
popf
cmp
iret
ja
mov
inc
push
cmp
lret
push
push
adc
insb
cmp
jns
pop
jle
push
xchg
lahf
idivb
sarl
pushl
sbb
bsf
dec
cmp
pop
sbb
cmp
in
mov
xor
call
xchg
pop
dec
and
cmp
xchg
mov
mov
cmpsl
sarl
cmp
cmp
jg
push
cmp
cmp
sub
clc
lret
mov
mov
adc
repnz
jg
outsl
outsb
mov
repnz
adc
push
mov
movaps
rcl
js
dec
mov
int
mov
cmp
rol
jbe
pushf
ss
jns
cmpsb
cmp
adc
sbb
mov
cmp
js
xchg
int3
push
and
adc
iret
sbb
jb
es
push
ss
cmp
pushf
or
jp
mov
out
repz
xor
loop
sub
aas
dec
xchg
mov
pop
sub
lcall
jbe
mov
dec
cmp
clc
sbb
mov
mov
dec
or
push
mov
pop
popf
jns
imul
jbe
mov
in
testl
mov
push
call
mov
bound
or
push
insb
jl
inc
mov
sub
test
inc
jns
and
mov
mov
mov
dec
or
sub
adc
inc
xor
xor
pop
roll
test
inc
lcall
or
mov
out
add
ret
mov
ss
jg
sbb
push
mov
fmuls
nop
daa
movsb
lds
lcall
mov
pushf
mov
or
aaa
xor
pop
hlt
ja
inc
jge
iret
rcll
scas
stc
ljmp
push
inc
mov
inc
sahf
mov
mov
add
jo
jns
or
ja
sarb
ljmp
sbb
cmp
popl
or
dec
jbe
ss
cmp
rclb
dec
mov
mov
and
inc
push
mov
int
bound
ljmp
add
std
stc
xchg
and
jecxz
push
je
decl
xor
jae
push
mov
lods
lods
xor
clc
jp
cld
cs
lea
xchg
xchg
lea
cmp
sub
adc
jbe
dec
clc
inc
xor
shrl
cmpsb
data16
les
jge
decl
or
repnz
scas
adc
mov
lea
or
fldenv
push
fprem1
fsubr
jl
dec
mov
sbb
ror
cmovle
inc
mov
or
or
xchg
out
mov
inc
mov
test
add
jg
mov
push
imul
or
dec
dec
jp
jb
divl
inc
cmp
ret
cwtl
aad
jmp
out
push
push
cmpl
or
cld
leave
repz
out
bound
and
mov
add
cmp
jns
lret
jbe
lcall
mov
ret
sbb
data16
sub
inc
mov
fcoml
dec
dec
repz
adc
sub
jg
movsb
nop
ret
dec
jbe
mov
xor
add
scas
push
jae
sub
ja
sbb
insl
push
into
loop
sbb
fcmovnu
lea
mov
sub
sbb
fldcw
sbb
loop
lea
dec
dec
jns
pushl
adcb
push
xchg
inc
jl
cli
mov
mov
js
in
jg
jp
rcll
inc
jne
xor
pop
push
sbb
cmp
mov
sbb
xchg
or
and
jle
js
in
mov
enter
mov
xor
push
xchg
sub
ja
push
and
sbb
inc
scas
push
push
dec
or
in
dec
es
cmpsb
mov
adc
out
and
repnz
push
repz
xchg
out
sbb
jbe
mov
rorb
movsl
test
lock
xor
dec
mov
pop
scas
pop
cmp
dec
notb
xor
clc
jnp
jno
mov
sti
inc
and
out
jge
mov
adc
sbb
sbb
jle
xor
outsl
cmp
pop
dec
pop
test
ds
call
movsl
inc
test
int
push
jle
lret
and
or
cmpl
dec
fistl
push
nop
mov
scas
pop
outsb
mov
enter
add
mov
mov
lea
inc
add
out
xchg
lea
mov
xchg
mov
or
adc
lods
fists
rclb
xchg
adc
test
or
or
scas
mov
push
and
adc
xorl
xchg
inc
cmpsb
pop
pop
push
adc
aad
xchg
sbb
mov
stc
cmp
and
jae
adc
inc
inc
jg
mov
and
outsb
xor
inc
ror
mov
adc
sbb
sbb
insb
mov
adcb
xchg
pop
sbb
adc
mov
mov
outsb
arpl
in
call
inc
inc
mov
sahf
jecxz
out
push
mov
ljmp
jmp
dec
int
adc
mov
xchg
pop
mov
sub
stc
dec
je
or
xchg
loope
mov
insb
cld
dec
xchg
mov
sbb
cli
or
outsb
inc
push
sbb
xchg
repnz
sub
mov
sub
decl
xchg
mov
sub
push
mov
xchg
fidivrs
mov
cmp
aas
dec
cmp
dec
mov
push
mov
push
xor
push
scas
inc
insb
ret
inc
dec
sub
dec
movsl
add
and
test
push
dec
sbb
adc
dec
xchg
or
mov
enter
dec
dec
pop
dec
adc
mov
mov
iret
mov
iret
int3
adc
dec
or
lea
or
std
or
rorl
xchg
inc
adc
adc
scas
inc
sub
push
push
dec
mov
aaa
xchg
sbb
sub
or
adc
icebp
rcr
xchg
jb
dec
out
xchg
leave
adc
adc
aad
adc
and
xor
mov
push
push
or
sbb
insl
push
xchg
jbe
dec
add
xchg
aam
insl
sbb
sbb
pop
push
mov
outsl
sbb
sub
push
dec
mov
dec
push
xchg
and
sti
mov
xchg
gs
cmp
mov
mov
adc
sbb
push
mov
xchg
jl
rcr
sbb
and
cltd
or
lcall
dec
fimull
das
push
xchg
lds
pushf
pop
pop
jae
cwtl
or
pop
iret
pop
pushf
or
outsb
leave
push
mov
push
sbb
pop
lods
sbb
or
sbb
sub
push
dec
ss
int3
pop
xchg
mov
fisubs
dec
aad
mov
or
outsb
xchg
pop
jecxz
xor
mov
and
sub
sub
sub
mov
cli
into
xchg
cmp
rcl
fs
dec
xchg
movsb
xchg
mov
test
gs
dec
movsl
subl
outsb
sub
dec
adc
cmpsb
sbb
xchg
sbb
outsb
insb
add
mov
dec
sbb
addr16
sub
cmpsl
dec
fs
cmp
shr
sbb
push
mov
xchg
pop
push
sub
test
jne
or
push
shrb
xor
push
push
scas
push
inc
xor
sub
push
movsl
je
jl
bound
push
sbb
push
dec
int
mov
or
sub
sub
sub
sub
sub
cmp
js
cmp
push
dec
mov
iret
in
sub
xchg
sub
cmp
cltd
adc
push
sbb
js
mov
movb
testb
and
mov
dec
dec
testl
aaa
cmc
mov
loop
add
push
mov
cmp
or
aaa
adc
mov
xorb
adc
or
and
inc
or
or
test
mov
cmp
push
add
adc
or
clc
mov
fidivrl
scas
cli
push
mov
lea
sbb
pop
cmp
sub
push
push
mov
mov
or
xchg
shll
clts
mov
sub
add
sub
xchg
addr16
sahf
push
lods
test
push
adc
mov
cmpb
nop/reserved
movsl
fists
aad
nop
es
sbb
mov
fisubrl
xchg
ja
mov
sub
push
lcall
pop
mov
loop
dec
ret
call
sbb
xor
push
xorb
sbb
push
call
push
adc
sbb
das
jno
and
cmp
aam
push
jp
adc
xchg
sbb
int
adc
adc
ljmp
jne
movsl
xchg
adc
and
jne
lods
pop
or
cmp
mov
cli
dec
ja
loop
es
xchg
adc
fistl
xchg
mov
xor
in
imul
lret
repz
sbb
sub
or
sbb
sbbb
xchg
lcall
push
sub
test
sbb
hlt
mov
jge
mov
loopne
mov
push
sub
mov
insb
arpl
ficompl
cmp
bound
mov
xchg
lea
xchg
mov
in
sub
in
jno
ds
mov
xchg
imul
pop
popa
push
pop
mov
push
mov
sti
rcrl
in
xor
cmp
xchg
adc
mov
and
aad
sarl
jge
js
cmp
jbe
out
mov
sbb
or
sbb
fcmovne
and
or
ds
push
in
and
cltd
dec
pop
sbb
pop
insl
rcr
movsb
lea
pusha
xchg
dec
sbb
push
pop
das
push
decb
cli
inc
cmp
jle
jg
mov
mov
fucomp
fs
scas
mov
sbb
jb
std
clc
faddl
adc
cmc
fmuls
or
push
pop
and
mov
idiv
sub
inc
decl
mov
cmp
lods
cld
movq
repnz
fwait
icebp
repnz
push
jp
mov
ja
stc
lods
or
jle
mov
mov
or
lea
pop
outsb
ds
sbb
xchg
push
push
aas
leave
clc
cmp
pop
bound
mov
sbb
into
ret
inc
push
or
cli
cmp
mov
testl
dec
cmp
clc
test
xchg
sub
pop
mov
mov
push
xchg
sbb
xor
cmp
pop
mov
dec
lock
add
push
xor
cmp
or
inc
ja
idivb
iret
jbe
cmp
sbb
pop
jb
pop
rcrl
sbb
dec
pop
push
inc
fisttpl
ds
imul
hlt
lret
dec
adc
or
xor
pop
or
xchg
arpl
push
mov
dec
fcoml
pop
not
cmpsl
lock
xchg
xchg
test
enter
adc
xchg
or
ljmp
popf
xor
cmp
add
mov
and
mov
sub
lret
in
jle
or
xor
incl
iret
jle
aaa
mov
mov
scas
jb
movsb
lahf
push
lods
mov
pop
xlat
cmp
or
xor
rcrb
jns
push
jle
int3
xchg
pop
inc
int
sbb
rcrl
lcall
fwait
cwtl
mov
test
adc
std
mov
and
cmpsb
sbb
adc
pop
add
mov
pop
push
orl
push
aas
mov
jbe
dec
xchg
add
jne
adcb
jp
mov
mov
cmpl
aas
jl
mov
enter
jb
pop
mov
and
outsb
sbb
rcrb
fwait
fwait
add
leave
shlb
movsl
cmp
cmpl
adcb
outsb
clc
rcrb
fwait
pop
add
shlb
movsl
cmp
adc
pop
cld
push
sub
aas
rclb
push
cmp
mov
mov
in
push
dec
mov
jle
mov
sub
jne
push
push
lcall
jle
int3
mov
dec
pop
or
push
mov
inc
or
push
imul
pop
imul
pop
jae
push
pushf
push
ret
sbb
xchg
mov
daa
add
mov
rcrl
lcall
cmc
test
cmp
jle
mov
push
or
xchg
xor
inc
rcl
xor
movsb
pusha
xor
xchg
sub
mov
push
and
pop
fcoms
stos
sti
lds
add
je
mov
aaa
and
clc
pop
jns
ret
adc
stc
xor
inc
jp
sbb
jb
mov
cli
mov
lea
xchg
jle
add
cmp
or
push
mov
cmp
push
mov
mov
jg
cmp
repz
cli
mov
jecxz
mov
sub
movsl
mov
in
xchg
cld
lcall
shl
movsl
push
mov
mov
sbb
in
and
jbe
and
daa
sub
sub
iret
ss
dec
fidivrs
cmpsb
repnz
mov
adc
pop
iret
inc
ds
mov
or
cmp
js
ds
in
lcall
mov
xchg
in
jl
xor
xchg
dec
push
sbb
icebp
inc
pushfw
cmp
and
jns
sbb
dec
scas
or
sub
xor
lea
push
inc
inc
adc
adc
adc
adc
adc
adc
mov
imul
sbb
sub
dec
lahf
mov
or
loop
adc
inc
out
mov
cs
mov
and
imul
pop
in
jno
or
scas
adc
fldcw
in
sub
xor
inc
lock
xor
jne
aaa
sbb
xor
dec
lock
jb
jno
or
sbb
push
adc
xor
push
or
or
cmp
cmp
or
and
dec
mov
mov
clc
xor
cmp
mov
sbb
cli
mov
cmp
sbb
mov
jge
pop
inc
sub
outsb
dec
aas
xchg
mov
pop
mov
add
lcall
cmp
xorl
adc
mov
cmp
mov
cmp
cmpsb
sbb
enter
out
push
call
cld
cmp
sti
dec
stos
ret
dec
sbb
dec
lds
dec
cmp
jge
sbb
in
dec
dec
add
dec
aas
push
inc
pusha
inc
dec
xchg
push
les
adc
add
mov
pop
lret
push
dec
push
enter
or
jnp
xor
std
test
sbb
outsb
add
dec
add
mov
std
adc
cmp
inc
das
mov
ds
dec
xchg
adc
std
dec
in
outsb
pop
add
or
add
inc
lret
je
dec
add
sahf
dec
lret
outsb
dec
enter
inc
xchg
dec
les
lret
in
dec
insl
inc
dec
stc
dec
xchg
lds
xchg
dec
dec
mov
add
or
sub
jge
jg
add
lret
enter
sarb
shl
mov
dec
add
or
das
cli
outsb
std
xor
mov
aad
adc
dec
inc
or
insb
jo
enter
ret
lds
add
sti
pop
dec
ret
les
mov
pop
roll
push
iret
and
les
enter
dec
inc
pop
lds
mov
sbb
ja
je
jns
das
xchg
lret
cwtl
push
enter
movups
mov
xchg
mov
mov
lock
adc
sbb
inc
mov
vmovupd
adc
pushf
enter
xlat
pop
pop
push
xor
dec
mov
mov
lret
cld
fmuls
leave
sbb
std
dec
enter
insb
leave
mov
dec
dec
push
add
inc
add
mov
xchg
push
sub
cmp
push
pop
or
pop
push
xchg
sbb
pop
xchg
dec
mov
push
pop
bound
mov
leave
lea
or
mov
or
adc
push
push
cmp
push
xchg
fnclex
sub
xchg
scas
inc
adc
adc
cmc
aad
mov
loope
cmpsb
popa
sahf
cli
popa
ljmp
loop
pop
sarb
aad
test
icebp
data16
loop
out
mov
out
xchg
pop
loop
mov
icebp
dec
mov
push
test
std
mov
push
jp
mov
lock
test
rol
lea
loope
int3
dec
lret
jne
arpl
sub
cmp
or
lret
and
push
mov
divl
rcll
sub
mov
lods
aad
out
mov
mov
repnz
cli
bound
lret
push
and
jl
lods
push
adc
lock
bound
popf
pusha
loope
mov
test
xor
xchg
mov
insb
mov
insb
push
dec
and
lahf
lret
aad
add
mov
add
xor
mov
in
pop
mov
add
sub
add
cmpsl
jmp
xor
and
shrb
js
fimull
jae
daa
or
fcmovne
stc
in
popa
mov
out
test
jae
cmpb
mov
mov
mov
jnp
outsb
not
cmc
dec
adc
popf
aad
or
or
loopne
pop
dec
cltd
pop
jecxz
aaa
lcall
pop
xchg
push
mov
popa
mov
adc
fcomps
clc
fcompl
psrlq
add
pop
sbb
setne
pop
fnstenv
and
sbb
hlt
cmp
pop
sbb
lea
fiaddl
pop
lcall
pop
in
sub
cwtl
push
lahf
or
inc
int
push
lcall
mov
aad
cltd
sbb
in
lcall
js
cmp
loope
loope
pop
cmp
mov
mov
pop
mov
int
jp
sbb
sbb
and
and
fimull
push
inc
jl
out
gs
lods
loopne
dec
movsb
or
lock
and
sub
adc
dec
mov
mov
add
sti
cmp
inc
push
dec
adc
and
movsl
pop
dec
or
hlt
aad
and
popf
dec
fimull
inc
adc
sti
inc
out
jb
and
aad
xchg
scas
sub
fmul
clc
or
mov
push
inc
es
orb
loope
and
lret
cmp
push
leave
xchg
dec
flds
cli
adc
stc
xchg
sub
dec
movsl
loope
aam
nop
pop
cli
lods
shr
push
cmpsb
stc
fwait
lret
outsb
dec
ror
xor
push
xor
jnp
fimuls
mov
lea
and
push
cli
and
lret
pop
dec
sahf
add
pop
xchg
imul
outsl
aas
in
sahf
lret
minps
cmp
inc
inc
clc
lret
imul
stos
and
push
arpl
in
fldcw
inc
mov
lret
lea
dec
and
fcomi
xchg
or
lret
ds
dec
push
add
popf
clc
xchg
add
adc
sbb
scas
das
xchg
cmp
mov
hlt
loope
lea
insb
sub
ficompl
test
ret
mov
lret
dec
xchg
pop
iret
pop
push
int
adc
mov
mov
inc
jge
jl
lcall
sub
ds
push
push
adc
lcall
sbb
sbb
adc
jge
jbe
mov
cmpsb
dec
ret
mov
mov
iret
rcrl
dec
xlat
lret
dec
ljmp
mov
xlat
dec
jbe
pop
ficoms
setge
aam
mov
fwait
or
aaa
iret
mov
sub
sbb
adc
or
push
int
sbb
sub
sub
in
push
adc
mov
jmp
or
adc
filds
push
inc
push
iret
ret
lret
sub
das
push
or
adc
sbb
lcall
cmp
inc
sahf
clts
inc
xlat
or
mov
test
adc
cmp
add
adc
rorl
fsubrp
adc
lret
dec
pop
xor
adc
popa
dec
scas
daa
insb
das
adc
stos
mov
or
in
cmp
xor
mov
negb
ss
mov
or
cmp
mov
mov
lcall
data16
ret
sub
mov
sub
inc
adc
outsb
push
out
std
insb
pusha
xor
sub
xor
sarl
into
xchg
push
add
or
in
mov
dec
fidivs
or
or
mov
divb
cmpsb
outsl
divb
add
push
mov
or
sbb
mov
in
gs
dec
addb
add
jne
jno
push
dec
pushf
aam
xor
js
aad
je
sbb
pop
ss
lret
sbb
lret
cmp
cltd
pop
lds
aaa
sub
push
xchg
cmpsb
xor
adc
loope
pushf
cmp
xchg
sbb
add
xor
xor
or
cli
adc
dec
fimull
xchg
dec
add
push
xchg
dec
pop
jmp
ss
dec
sub
std
pop
sub
cmp
add
cmp
dec
add
dec
pop
cmp
leave
popa
push
and
outsl
jbe
enter
adc
jo
xchg
lds
lret
sub
cmp
cmp
leave
sub
sub
sbb
outsl
lock
sub
mov
loopne
mov
dec
scas
mov
rolb
cmp
dec
add
aam
aaa
adc
jl
lret
loopne
push
add
xor
dec
jne
xor
jmp
sub
fdivl
out
xchg
dec
les
jne
dec
or
add
xor
pop
xor
xor
dec
xchg
out
add
add
cld
sub
mov
mov
xor
outsl
jo
rcl
xor
lret
sbb
outsl
divb
inc
push
or
mov
sti
sub
pop
xchg
xchg
xor
inc
jge
adc
dec
repnz
into
sbb
sub
mov
test
pop
add
sti
shll
adc
call
adc
dec
aas
jge
insb
pop
add
ss
mov
or
out
imul
mov
cs
sub
sbb
jb
imul
adc
stos
xchg
testl
leave
repz
rorl
push
jmp
shll
jnp
inc
aaa
xor
mov
mov
call
dec
mov
xor
mov
sbb
sahf
bound
push
jmp
mov
icebp
bnd
pop
xor
mov
sbb
add
std
cmpsb
lock
adc
pop
lahf
mov
gs
cs
mov
imul
mov
lods
mov
cmpsb
daa
or
cmc
pop
or
sbb
inc
insl
dec
jp
rorl
and
sub
add
push
push
pop
stos
andl
popa
push
lds
fsts
adc
sbb
fneni(8087
lods
fstpt
push
in
sbb
pop
adc
insl
fistl
bound
imul
rcll
roll
inc
dec
push
dec
incb
lcall
sbb
test
push
dec
inc
adc
sbb
lea
mov
test
dec
adc
lea
inc
push
jb
mov
jecxz
aad
mov
sbb
ljmp
lret
adc
dec
mov
and
add
sub
cmp
fidivrs
fs
notl
shlb
sub
aam
imul
icebp
mov
mov
and
sbb
lret
mov
iret
sub
xchg
xor
fisttpl
cli
add
mov
add
shll
sbb
sub
sbb
dec
push
in
sub
iret
and
or
dec
xchg
stos
insb
pop
clc
dec
out
xor
mov
insb
dec
or
fstpl
sbb
sarl
cld
lcall
sbb
cmp
push
fcomps
fnstcw
shll
repnz
or
cmp
push
sub
add
mov
or
push
push
dec
shr
js
cld
cmc
adc
adc
movsl
and
ret
mov
push
mov
cmp
jno,pn
fnsave
mov
in
adc
stc
adc
cld
call
fistpl
ret
cli
pusha
xor
fldenv
dec
push
xchg
mov
jmp
inc
mov
sbb
and
sbb
push
xlat
scas
sbb
call
pusha
inc
or
pushf
lea
out
mov
sbb
pop
scas
mov
xlat
std
scas
adc
add
adc
mov
adc
pushl
jl
push
cwtl
sbb
cmp
std
out
inc
adc
pushl
psubd
sub
xchg
xor
movb
fsubl
jl
add
or
or
mov
cmp
negl
add
ret
mov
push
test
jo
ret
in
std
mov
mov
aad
sub
dec
add
jne
in
enter
sub
xor
das
outsb
lds
les
lret
ljmp
adc
inc
in
sub
lds
adc
scas
ds
xlat
enter
cmp
inc
mov
push
ret
ja
es
cmp
mov
lock
lds
sbb
jo
cmp
xor
in
orb
cmp
push
hlt
push
cmp
xor
sarl
aad
jecxz
cmp
dec
aaa
sub
lea
gs
daa
outsb
lods
ljmp
shl
stos
test
mov
stos
leave
mov
aaa
ljmp
test
xor
mov
xor
jmp
push
das
ljmp
mov
repnz
adc
adc
addr16
or
fcomps
dec
jbe
mov
loopne
lret
cltd
adc
push
in
out
jb
dec
mov
or
sbb
int3
jno
cltd
adc
and
pop
int3
lret
sbb
fstp
adc
push
push
rclb
pop
das
mov
adc
imul
bound
push
jb
iret
in
scas
cmp
pop
push
pop
cmp
clc
xchg
push
push
adc
repz
dec
cli
ss
or
nop
adc
arpl
into
mov
ret
lahf
and
out
inc
arpl
rcrl
push
in
and
and
xor
xchg
dec
jecxz
and
adc
out
pop
cmp
xchg
pop
adc
or
xor
mov
or
jo
fildll
xchg
adc
mov
mov
iret
iret
xchg
popa
xchg
out
or
push
lret
push
adc
lea
push
push
imul
sbb
and
or
push
repz
cmp
cmp
dec
pushf
aad
aam
or
push
pop
push
xor
cmp
cli
adc
cmp
cmp
mov
cmp
xor
adc
das
sub
lods
pop
aaa
test
add
mov
and
xor
loop
sbb
dec
add
mov
mov
cld
dec
pop
pop
out
in
scas
jl
xchg
jmp
and
mov
pushf
daa
adc
inc
std
xor
jbe
cli
lea
cmp
cmp
dec
enter
jno
lds
aas
jle
adc
in
repnz
add
sub
pop
cmp
sub
sub
mov
sbb
repz
mov
sub
and
or
or
leave
cmpsb
enter
js
inc
aad
test
and
sub
push
loope
xchg
mov
rcll
xchg
in
movsl
sbb
loopne
or
fs
pop
fcmovbe
jecxz
aad
and
fwait
xchg
push
sbb
xchg
es
and
cmp
pop
cld
push
and
dec
push
adc
pop
into
mov
lret
or
push
xchg
pop
popa
or
adc
cmp
orb
push
jp
mov
in
mov
iret
xchg
push
jnp
adc
into
es
sbb
mov
in
bt
or
mov
int
ds
ja
mov
dec
dec
cmp
rcl
nop
pop
into
or
inc
push
jnp
cmp
push
or
dec
push
cmpsb
sub
pop
adc
xchg
shrl
adc
jg
sub
and
push
sbb
outsb
sub
mov
push
jne
push
mov
xor
push
into
test
rorb
and
aaa
pop
rorl
stos
or
push
sub
inc
jo
push
push
or
adc
sub
push
das
scas
cmp
mov
mov
dec
mov
test
jae
push
push
test
pop
lds
xor
ret
sbb
loope
push
xchg
dec
adc
cltd
pushf
push
aaa
xor
in
cmp
icebp
or
cmp
in
adc
sbb
mov
push
dec
and
push
sbb
pop
jb
push
in
sbb
or
adc
cmp
stos
push
dec
cld
mov
jnp
inc
daa
ja
bound
lcall
pushf
es
fwait
cmp
xor
sub
add
fnstsw
adc
cwtl
cmp
out
cmp
or
outsb
and
cli
xor
mov
sub
or
push
cmp
jo
push
mov
cmp
aaa
cltd
mov
cmp
inc
aad
jbe
mov
inc
or
push
sbb
push
mov
out
mov
sarl
sub
xor
daa
repnz
push
lcall
or
or
mov
cmp
aaa
pop
nop
push
mov
pop
or
jne
adc
out
jns
add
adc
repz
daa
in
gs
and
push
add
pushf
or
cmp
das
xchg
repz
xchg
dec
mov
ja
dec
pop
push
cwtl
cmp
ja
sub
das
xchg
dec
xor
outsb
cmp
jl
push
sub
sbb
push
xchg
sub
push
jae
test
xor
xor
or
or
mov
aaa
ss
sbb
or
push
mov
stos
aas
jne
sbb
pushf
cmp
mov
jno
sub
lds
das
cmp
call
adc
or
cmp
cmp
arpl
pop
mov
into
mov
lret
es
sub
xor
inc
push
in
cmp
push
test
int
lods
lret
cmp
enter
sbb
in
sbb
fwait
loop
sub
cmp
sub
mov
or
fadd
in
sbb
lds
adc
mov
rcll
cmp
sarl
xor
sarb
daa
insl
pop
icebp
or
sbb
ja
or
cmp
inc
fisttpll
loope
pop
cmp
sbb
and
or
sbb
sbb
in
jbe
add
or
into
sbb
mov
lds
fwait
dec
pushf
sub
push
cmp
cmpsl
icebp
or
cmp
inc
xchg
cmp
je
sahf
pop
cmp
sub
push
mov
mov
sub
xchg
or
push
cmpsl
sub
icebp
or
cmp
cli
inc
daa
push
stos
fmuls
inc
push
cs
mov
ljmp
pusha
mov
mov
xchg
or
lahf
sub
push
and
cmp
pop
xor
push
dec
xor
or
ljmp
lret
psubb
aaa
pop
push
cmpsb
inc
fdivrl
std
add
cmp
mov
dec
cmp
sbb
push
and
jbe
rorb
outsb
aas
push
ret
cmp
lcall
or
dec
add
ds
in
cmp
cltd
add
sbb
jne
into
cmp
sub
push
shll
cmp
pop
sub
rorl
and
adc
pop
cmpsl
cmp
mov
lret
adc
or
mov
sbb
adc
in
sub
rcll
popa
or
push
lahf
cmp
and
mov
inc
pop
cmp
cmp
stos
push
add
inc
notl
mov
add
add
ds
shll
inc
je
push
or
sti
or
sub
sub
or
cmp
cmp
and
incb
pop
cld
cltd
push
daa
aaa
adc
out
cmp
iret
lret
push
loop
lea
insl
mov
call
cltd
cmp
cmp
xchg
cmp
cmp
in
sbb
cmp
push
cwtl
xchg
aad
adc
add
cmp
dec
pop
es
cmp
mov
xchg
push
mov
sub
add
pop
or
int3
cmp
cmp
or
xor
mov
sti
mov
mov
std
mov
jecxz
adc
daa
repz
sub
mov
in
adc
or
rolb
sub
rcr
repnz
pop
inc
andnps
mov
sub
out
push
lcall
ss
mov
lcall
outsl
jno
pop
sub
push
cmp
and
or
xchg
cmp
ljmp
cmp
push
or
cmp
jl
into
in
xchg
mov
pop
dec
cmp
mov
cmp
dec
or
pandn
outsl
sub
push
cmp
lcall
dec
cmp
sbb
jno
sbb
mov
subl
sti
ret
das
sarl
push
pushf
pushf
adc
jbe
sarb
sub
push
cmp
cli
sub
js
cmp
sbb
inc
lds
sbb
push
fisttpll
push
or
sbb
cmp
pop
pop
or
cmp
pop
push
daa
and
cmp
shll
out
cmp
cld
mov
cmp
sub
xor
sbb
or
lret
cmp
and
pop
sbb
lds
adc
sbb
jne
adc
lea
mov
shrl
add
or
mov
lcall
push
sbb
mov
mov
cmp
es
aaa
call
mov
push
or
call
xchg
sbb
sub
inc
mov
sub
cmp
pop
xor
test
cmp
mov
push
mov
dec
jecxz
xor
mov
sbb
in
jns
xchg
and
mov
mov
dec
cltd
sub
cmp
out
adc
xor
sub
aaa
or
or
adc
lea
xchg
sbb
dec
inc
js
xchg
adc
pusha
push
and
mov
loop
sub
mov
cmpsb
add
pushf
lret
mov
mov
scas
or
mov
test
pop
dec
cld
ret
cmp
push
mov
ror
xchg
adc
in
sub
add
jge
cmp
outsb
sub
lods
push
insb
cmpsb
jmp
xchg
adc
imul
cmp
sub
sub
fmull
or
cmp
cld
icebp
or
sub
cmp
int3
push
mov
stc
mov
and
int3
cmp
enter
mov
and
pop
or
mov
stos
repz
test
inc
mov
mov
sarb
es
pushf
cs
inc
pop
call
ret
fcompl
sub
xchg
add
ja
mov
fldl
ror
mov
jns
xor
inc
sbb
mov
cmp
push
xor
mov
aad
sbb
pusha
es
js
mov
inc
loopne
xor
insb
adc
pushf
inc
pop
mov
cmp
dec
adc
mov
scas
or
sbb
add
dec
fisubrs
dec
aaa
and
icebp
repz
mov
mov
std
or
mov
and
dec
mov
cmp
mov
es
mov
pop
in
es
push
cmp
scas
push
sbb
sahf
sti
push
sbb
and
or
mov
cmp
fwait
mov
add
push
out
sahf
and
outsl
ret
inc
mov
or
cmp
or
hlt
int3
sub
call
cmpsl
push
or
cwtl
jbe
fidivrs
rcl
xor
cmp
mov
xchg
jbe
and
push
push
mov
pop
and
cmp
and
mov
sub
fbstp
ja
jle
pop
or
push
mov
ret
adc
pop
outsb
cmp
inc
xor
xor
lret
cltd
stos
sbb
or
pop
inc
mov
icebp
fsubs
mov
das
or
sbb
or
pusha
adc
ret
adc
pushf
push
xor
cmpsl
jbe
into
mov
fmull
xchg
mov
pushf
inc
popf
or
sbb
push
cmp
pop
add
mov
fmul
pop
ret
push
push
push
cmp
push
push
loop
in
cwtl
out
and
cmp
scas
inc
fwait
dec
cmp
cmp
fidivrs
cmp
or
sub
push
mov
loopne
ja,pt
xor
dec
popa
mov
sbb
cmp
or
fdiv
pop
pop
or
inc
sbb
in
daa
or
dec
lret
cmp
push
push
dec
sahf
mov
push
mov
or
and
inc
or
push
mov
sub
es
dec
add
xor
adc
push
cmp
pop
outsl
push
cmp
scas
and
add
test
add
sbb
add
aad
sub
mov
lret
jle
and
or
fbstp
add
faddl
shrl
je
push
loope
xor
test
cmp
sti
inc
fisttps
loope
or
dec
inc
loope
adc
xchg
xor
mov
or
fisttpll
mov
push
cwtl
and
xor
pushf
pop
mov
cs
ds
push
push
fisttpll
mov
lds
mov
clc
mov
mov
inc
mov
or
sub
jnp
mov
pushf
or
mov
call
cmp
fs
adc
aaa
ja
movsl
jecxz
out
sub
mov
jp
jae
pop
mov
cmp
inc
push
xchg
insb
cmp
and
sub
adc
pusha
jae
mov
and
xor
decb
push
xchg
lock
add
fisttpll
lret
push
aas
or
addb
or
sub
stc
lcall
loope
cmp
or
mov
xor
jmp
mov
das
cmc
fistl
insb
mov
js
aaa
mov
cmp
sub
add
jl
repz
mov
lcall
xor
add
hlt
sub
sub
pop
pop
push
out
into
outsb
xor
cli
jl
aad
xor
cwtl
imul
sub
scas
or
outsl
std
sub
add
sub
xor
loop
mov
lcall
or
or
fistpll
or
or
xor
sub
outsb
or
outsb
scas
outsl
and
mov
sub
das
mov
inc
xchg
jnp
add
add
jge
push
push
lds
jnp
push
sub
and
adc
xchg
sub
jmp
das
mov
pop
pop
in
sub
pushf
add
mov
xor
jae
sub
mov
mov
pop
lcall
pop
stos
or
cmp
mov
jg
dec
push
scas
or
insb
mov
adc
popf
stc
fdivrs
dec
add
icebp
aam
cmp
scas
inc
sub
xor
inc
jne
dec
xor
xor
or
adc
mov
add
or
or
loopne
and
add
insl
fs
in
sub
cs
xchg
or
adc
fiadds
sub
push
push
sub
jae
adc
sub
adc
jns,pn
sub
pop
pop
cli
sub
sub
hlt
inc
daa
cmp
std
mov
inc
push
xor
jns
inc
or
or
lret
cld
inc
or
sbb
add
jl
inc
pop
adc
jae
sub
fnsave
cwtl
cwtl
pop
lods
ja
fsubrl
mov
push
jae
push
jns
jle
mov
enter
sub
mov
incb
lods
push
mov
adc
sub
aad
es
pop
out
pop
adc
sub
ja
push
push
cmpsb
sub
sbb
jno
daa
aas
sbb
add
push
xor
rol
xor
mov
sub
push
pop
cli
or
dec
cltd
daa
cmp
dec
scas
mov
pushf
or
mov
ja
push
or
int3
insl
repz
sti
mov
sub
add
mov
repz
jne
mov
pop
gs
cmc
cmp
cmpl
add
xor
inc
cmc
and
mov
mov
sub
inc
bound
fsts
movsb
and
inc
adc
add
enter
mov
bound
sahf
cltd
fadds
cmp
fnsave
addps
cmp
inc
loopne
mov
cmpsl
fnstcw
sub
push
lods
sub
or
or
or
inc
dec
xor
mov
mov
decb
inc
fnstsw
daa
xchg
sub
pop
or
cmc
pusha
adc
mov
push
push
andb
cmp
and
lods
mov
xor
das
into
xor
adc
icebp
dec
or
jbe
fcoms
cmp
fcoml
aas
inc
dec
adc
xor
xlat
sub
pop
pop
jp
adc
into
mov
aaa
add
rorb
or
ds
mov
insb
pushf
mov
adc
sbb
inc
lcall
inc
iret
cltd
insb
sub
decl
sub
rorl
or
push
push
daa
sub
mov
cld
push
pop
mov
sub
rorl
push
fwait
and
push
int
in
push
std
xor
and
lcall
push
jns
cmp
sub
dec
pop
cmp
cld
dec
sahf
adc
push
jns
mov
lret
pop
popf
ficomps
lahf
inc
cwtl
inc
out
xor
push
je
bound
mov
add
rclb
jo
jae
and
pop
out
inc
push
mov
ud1
xlat
pusha
or
add
nop
aaa
adc
push
or
cmp
aad
push
and
lods
and
mov
jbe
xchg
and
sub
pushf
mov
mov
mov
and
daa
pushf
add
pushf
lock
fisubl
push
mov
je
scas
add
insb
mov
in
sbb
stos
push
sbb
cmp
icebp
ret
inc
xchg
push
rolb
pop
and
call
lret
push
pushf
add
mov
sub
pushf
mov
cmp
ss
sub
and
pop
loope
xor
cmp
pop
lds
fldl
mov
jge
dec
adc
and
subl
mov
es
aaa
leave
rcrl
mov
push
les
pop
lcall
cld
ds
sub
test
xor
inc
cmp
aad
aas
imul
push
les
push
adc
cmp
sbb
push
sub
cmp
xchg
jbe
xchg
mov
mov
je
ss
push
sub
adc
imull
es
mov
push
mov
shrl
mov
test
or
cs
and
mov
jae
inc
incb
cmp
dec
cmp
dec
pop
mov
inc
daa
sbb
or
decl
xor
das
daa
mov
mov
inc
pop
in
cmp
inc
pop
push
and
ss
rolb
add
mov
negl
rcrl
mov
and
push
and
adc
enter
xor
or
and
popf
ret
int3
adc
mov
xor
jbe
and
out
jnp
and
aas
cmp
xor
cmp
out
inc
mov
mov
or
sub
and
adc
aas
cmpsl
sbb
pushf
das
ja
push
and
scas
test
and
xor
sub
mov
sbb
sub
jno
cmp
pushf
ret
mov
push
inc
push
push
aas
addr16
sbb
call
xor
adc
push
das
add
xor
jo
das
ja
cmp
xchg
insl
adc
xor
and
adc
or
pushf
push
shll
jl
sub
clc
shrb
jbe
jae
pop
es
cmp
out
sahf
fs
lcall
dec
add
fidivl
pop
and
inc
idivl
or
adc
int
outsb
or
outsb
sbb
push
or
sbb
outsl
enter
xor
xor
mov
sbb
sbb
cmpsb
outsl
sahf
sub
or
jns
std
std
sahf
xor
js
xchg
call
or
in
or
dec
aam
adc
cmp
xlat
lret
jp
call
repz
push
mov
pop
and
clc
sub
sbb
insb
push
sarb
lret
fstp
jae
and
repz
or
inc
popf
repnz
or
ja
sbb
xchg
cmp
push
cmp
jb
add
jecxz
cmc
lcall
fsub
or
cmp
jae
or
inc
or
fs
sahf
cmp
shrb
or
sbb
popf
adc
mov
adc
inc
pushf
or
fsubl
xchg
pop
into
repz
adc
mov
ret
test
fcoml
push
mov
pop
push
popf
mov
mov
add
mov
aas
xchg
jb
movsb
das
or
sub
mov
jne
sub
es
aaa
dec
daa
pushf
adc
sbb
cmp
es
jae
cmp
sahf
xchg
mov
inc
cmp
or
cs
lods
push
xor
lds
inc
ja
push
out
sahf
addr16
adc
push
rolb
add
sti
push
pop
cmp
push
cmp
fsubrs
lcall
insb
aad
and
addb
ss
sub
adc
lock
sahf
push
and
and
mov
seto
cmpb
js
call
sahf
or
sub
ja
or
das
push
mov
mov
or
inc
iret
pushf
or
jae
sub
pop
or
lahf
pop
mov
jp
and
or
xor
dec
lods
adc
mov
mov
inc
cmp
mov
fsincos
cmp
xchg
jbe
insb
jo
sbb
pop
xchg
outsb
imul
sarl
pop
xchg
push
imul
sarl
pop
mov
sub
dec
sbb
insb
rorl
mov
rorl
stc
jnp
aad
xchg
jo
shrl
pop
xchg
jbe
in
xor
mov
sub
inc
loope
dec
rorl
pop
mov
sub
cmpsl
push
dec
inc
mov
ljmp
cmp
pop
mov
outsb
sub
inc
loope
enter
jnp
aad
sub
inc
loope
dec
sarl
pop
xchg
outsb
and
lods
in
mov
dec
pop
mov
loope
dec
roll
pop
xchg
outsb
sub
inc
loope
dec
sarl
pop
xchg
outsb
test
enter
jnp
aad
imul
shlb
pop
mov
inc
dec
xchg
ljmp
cmp
pop
xchg
outsb
test
dec
sarl
pop
mov
outsb
sub
inc
loope
dec
roll
pop
xchg
outsb
sub
inc
loope
dec
roll
jnp
mov
add
mov
push
sbb
out
in
pop
xor
push
mov
mov
mov
mov
mov
mov
mov
popf
dec
and
into
sbb
subl
jmp
pop
mov
adc
jge
mov
push
mov
push
mov
mov
mov
push
mov
push
mov
mov
mov
push
mov
sbb
push
out
jo
nop
mov
test
int
shrb
push
stos
lea
sbb
and
add
push
out
int
daa
push
outsb
cltd
fistl
push
adc
inc
pop
add
jb
adc
add
data16
or
xor
xor
add
xchg
xchg
stos
cs
fnstcw
negb
rcr
jp
add
mov
ret
inc
cli
or
jmp
sbb
sub
mov
int
mov
mov
sub
mov
hlt
mov
pop
mov
push
addb
jp
repz
add
sub
sbb
jb
out
xchg
pusha
cmpsl
js
sbb
roll
nop
mov
sbb
pop
test
push
jge
int3
rcrl
call
jle
imul
pop
sub
in
adc
stos
pop
cmp
fsts
jae
sbb
rcr
gs
dec
adc
nop
rcrb
pop
pop
jecxz
fldenv
lcall
xchg
divb
push
fistpl
adc
sti
imul
pop
mov
push
adc
sbb
jb
shl
xchg
stc
jb
sbb
ret
or
fldcw
sarb
shrl
lcall
push
or
sbb
fnstcw
int
movl
jle
jmp
loope
mov
aaa
das
mov
das
inc
lods
jb
pop
adc
add
cld
add
lcall
enter
mov
adc
rcl
pop
hlt
mov
inc
notl
push
pop
gs
mov
mov
jmp
jb
shll
jnp
push
pop
sub
dec
sbb
sarb
mov
pop
sbb
adc
icebp
lcall
mov
arpl
es
push
pop
mov
stc
fsts
xchg
cwtl
jns
aaa
xor
mov
es
and
cmp
pop
pop
sbb
hlt
xlat
pop
dec
addr16
sbb
hlt
out
or
add
xor
xchg
mov
ror
jb,pt
js
mov
jl
into
cmp
je
lret
dec
scas
add
aas
idivb
sti
add
repnz
iret
sarl
ret
imul
es
inc
mov
push
shlb
aaa
xor
push
jle
lret
push
dec
popa
sbb
ja
mov
push
mov
mov
mov
mov
lret
pop
push
xchg
insb
dec
sbb
addr16
xchg
xor
out
inc
push
jp
test
repz
popf
mov
lea
jl
popa
pop
lds
aas
mov
int
dec
int3
insl
push
cmp
pop
cmp
push
std
dec
out
mov
ds
stos
int3
push
mov
aas
jbe
sarl
fmull
cld
enter
xor
sbb
fcompl
enter
test
add
iret
loop
daa
arpl
fnstenv
in
dec
jno
insb
mov
xor
lcall
add
test
repz
cmp
jns
adc
fdivrs
xor
sub
incb
int3
jg
cli
jbe
mov
push
pop
mov
xchg
iret
mov
lret
inc
push
int
pop
loop
fistpll
in
int
mov
mov
repnz
inc
push
add
iret
lret
cmp
jne
jno
decl
or
idivl
lds
js
mov
inc
ds
mov
jbe
sti
inc
lcall
xor
mov
cmp
cmp
xchg
mov
int
mov
mov
out
adc
sub
clc
sti
sub
loop
dec
jbe
push
xor
stos
test
jmp
ds
mov
sarl
jp
mov
xor
ja
aas
adc
mov
or
push
cld
dec
ror
sub
dec
sti
int
flds
xchg
cmp
inc
icebp
fsin
jge
mov
jle
or
pop
mov
rclb
lods
shlb
adc
add
xchg
js
aas
ja
loopne
ss
loopne
sub
inc
adc
inc
arpl
or
mov
mov
enter
stc
inc
cmp
xchg
or
jle
cld
jl
mov
sarb
sbb
push
xchg
les
jp
push
or
adc
mov
push
imull
test
out
mov
pop
dec
xchg
push
pop
enter
mov
xchg
xor
data16
fucomip
fs
mov
lea
incl
imulb
sub
clc
rcrb
adc
std
pop
test
pop
imul
push
xor
xchg
cmp
add
cmp
addr16
enter
add
movsl
mov
pop
js
xor
pop
adc
mov
inc
je
mov
sub
pop
xor
std
mov
jecxz
mov
mov
mov
test
inc
adc
xchg
fs
mov
xchg
cmp
cmp
mov
xor
imul
std
mov
mov
add
adcb
scas
cmovo
in
mov
jmp
sub
xor
cli
and
cmp
xor
cmpb
and
pop
fwait
das
push
pop
cmp
fildl
and
sbb
mov
mov
std
adc
mov
mov
ret
cmp
call
scas
test
cmp
les
out
inc
jle
jnp
jno
push
pop
xor
mov
adc
fidivs
test
mov
outsl
xchg
into
std
inc
int3
imul
sbb
mov
dec
js
cmp
mov
mov
and
adc
bound
jg
xor
dec
pop
mov
aad
pop
clc
mov
push
cs
jp
sub
dec
test
pop
jge
incl
ret
cmp
mov
or
sbb
int
adc
cmp
sti
lds
jle
jg
sub
ss
jge
inc
int
cmp
jg
xor
cmp
jns
mov
add
and
jp
mov
mov
sti
add
adc
pop
xchg
orb
inc
sbb
mov
fwait
outsb
int
mov
adc
ds
jae
aas
push
dec
add
mov
rcll
js
out
in
jp
mov
jae
int3
mov
push
dec
mov
dec
lcall
idivl
mov
rolb
mov
aaa
push
int3
mov
bound
int3
jle
add
and
ljmp
sbb
jp
jp
stc
cmp
adc
xchg
mov
movsb
int3
adc
push
outsb
stos
stos
nop
dec
and
clc
aam
orl
lods
mov
imul
call
int3
stos
mov
xchg
push
or
xchg
dec
sub
lahf
lods
dec
xor
stos
dec
sbb
mov
testb
int3
xchg
mov
mov
mov
int3
sub
cmp
mov
add
mov
jae
mov
test
lods
jbe
mov
int3
mov
mov
mov
push
dec
scas
stc
sub
dec
popl
dec
lods
dec
jle
inc
mov
add
sbb
adc
ds
js
fmul
jbe
ss
int3
clc
add
aaa
mov
mov
xchg
stos
dec
cmp
jle
int3
pushf
pop
scas
pop
int3
shll
int3
and
lds
in
andb
add
inc
adc
push
or
add
aaa
rorl
dec
mov
int3
popa
mov
fwait
mov
add
jb
jae
or
dec
mov
lock
dec
lods
mov
enter
nop
and
scas
test
xchg
add
dec
mov
mov
in
push
call
ror
test
lds
xor
call
popl
xchg
int3
sub
xor
mov
jbe
mov
test
idivb
dec
dec
ljmp
int3
add
add
movsl
sbb
cmp
stc
jb
popa
and
add
cmp
test
cs
xchg
push
jnp
add
pushf
and
dec
rclb
sti
aaa
repnz
fidivs
xchg
sub
inc
psllq
pop
dec
int3
sub
hlt
testb
jns
jge
std
add
mov
int3
js
push
cmp
mov
test
in
js
adc
ds
cli
mov
and
in
cwtl
roll
lret
into
arpl
gs
jge
cmp
xor
ja
mov
push
jge
shr
leave
rcrb
cmp
and
mov
in
adc
jnp
in
add
popa
mov
add
cmp
leave
ljmp
test
sub
je
stc
or
divl
mov
js
cmp
cmp
dec
loope
mov
xorb
popf
cmp
mull
cld
aaa
mov
mov
xchg
js
std
jnp
cmp
dec
dec
cmp
inc
nop
aaa
adc
clc
push
es
addr16
or
jmp
push
loopne
das
pop
rorb
clc
mov
jne
xchg
fisubrl
mov
cmp
mov
and
fwait
or
jecxz
sahf
pop
and
pop
movsl
out
bound
jbe
adcb
sti
cltd
fwait
nop
sbb
popf
test
das
inc
hlt
xchg
mov
pop
mov
out
lods
push
inc
cmc
nop
and
cmp
push
aam
mov
shlb
imulb
adc
jle
int3
pop
push
dec
or
aad
mov
test
js
jp
push
mov
imul
mov
lcall
push
inc
and
add
cmp
pusha
cmp
mov
ds
lcall
push
mov
imul
mov
lcall
push
add
add
or
insb
sub
aam
icebp
sbbl
sbb
adc
mov
lcall
push
sub
sbb
push
imul
mov
lcall
push
shlb
lock
mov
lcall
push
fsubp
push
mov
lcall
push
pusha
and
lcall
push
pop
in
mov
lcall
push
mov
imul
mov
lcall
lcall
push
ljmp
push
pop
loopne
adc
mov
add
adc
sbb
outsl
imul
stos
and
out
mov
lcall
push
int3
in
mov
lcall
push
push
and
adc
mov
lcall
push
pop
and
sahf
mov
lcall
push
xor
and
sbb
cmp
cmp
pusha
es
jae
pop
jmp
dec
push
clc
sbb
mov
mov
into
repnz
dec
imul
mov
lcall
mov
mov
mov
sbb
mov
and
lcall
push
pop
sbb
adc
imul
mov
setp
leave
push
imul
mov
setg
push
dec
lret
cmp
pusha
jp
push
mov
imul
mov
popl
sbb
pop
int3
jmp
iret
arpl
pop
and
and
pushf
add
push
ljmp
push
pusha
ljmp
ljmp
xor
mov
cmp
mov
ds
push
and
mov
push
lcall
je
mov
lret
add
push
fdivr
mov
loopne
push
test
lcall
int3
push
or
cmpsb
push
sbb
dec
fmull
dec
lret
sbb
outsl
enter
pusha
mov
adc
mov
hlt
push
dec
add
mov
mov
sbb
mov
setp
aas
or
dec
fiadds
or
mov
cmova
pop
lcall
sbb
imul
fstpl
fidivrs
int3
adc
sub
sbb
nop
dec
or
jb
or
push
inc
or
int3
push
push
cmp
pop
cmpsb
ja
push
pusha
dec
int3
push
dec
and
pop
mov
lcall
push
rcrl
lods
or
push
inc
ljmp
push
divl
loope
and
adcb
mov
imul
and
lcall
lcall
aas
push
test
jns
rcrl
inc
push
xchg
jl
inc
movsb
gs
dec
int
shrl
movsb
movsl
arpl
movsb
scas
lcall
call
xchg
xchg
cli
ret
lods
es
or
adc
pushf
int3
push
sub
push
cmp
push
imul
fstpl
fidivrs
imul
shrl
divl
jp
inc
mov
mov
push
hlt
scas
jmp
add
lcall
mov
jae
jns
jae
and
dec
push
lock
adc
mov
lcall
lcall
sbb
sub
sbb
in
jb
enter
test
emms
mov
mov
js
xor
divb
cmpsb
push
sahf
cmpsl
dec
sub
xchg
sub
xchg
es
xlat
adc
dec
mov
push
mov
dec
mov
mov
sub
xchg
test
push
stos
adc
sbb
outsb
imul
insb
mov
insl
xchg
lods
sbb
cs
outsb
mov
outsb
outsl
xchg
scas
sbb
xor
mov
lock
outsb
jno
mov
icebp
xor
mov
repnz
outsb
jae
mov
divl
je
mov
hlt
sbb
adc
cltd
sbb
or
mov
push
pop
dec
ja
cltd
adc
sbb
push
fldcw
mov
rcll
dec
out
lret
or
sub
or
fimull
push
testl
popa
dec
push
aam
xchg
or
mov
adc
cwtl
mov
adc
into
adc
sbb
sbb
sbb
adc
out
nop
sub
shrb
dec
adc
dec
jne
dec
call
dec
rclb
mov
clc
push
lret
adc
mov
mov
push
dec
sbb
sbb
jae
push
adc
in
cmp
xchg
push
cmpsl
dec
js
or
orb
ja
setbe
cmp
outsl
push
push
mov
pop
lahf
dec
or
pusha
popf
lret
repz
cmp
fisttpll
adc
or
repz
push
mov
add
adc
push
sbb
jmp
dec
lea
adc
sarl
or
sub
decb
rorb
and
mov
xchg
jne
outsb
out
pushf
dec
xchg
push
dec
push
mov
push
mov
mov
lock
jae
hlt
sti
xchg
lret
aas
aas
mov
hlt
fstpl
xor
or
pushf
push
dec
or
push
or
inc
mov
mov
fstpt
out
cmpsb
loope
cmp
mov
mov
ja
cmp
xor
xchg
xor
stos
fistps
das
sbb
dec
aam
xlat
outsl
cwtl
dec
insb
mov
sbb
jae
inc
push
mov
cmc
dec
insl
pop
cmp
sub
dec
pop
cwtl
arpl
test
cltd
ficoml
bswap
adc
or
in
loope
leave
pop
testb
jle
xchg
xor
lret
inc
imul
push
int3
imulb
dec
loope
cld
testb
cmp
cltd
out
push
mov
das
and
xor
adc
lret
dec
jmp
pop
sbb
shrl
xor
ljmp
and
icebp
lahf
sbb
inc
xchg
fisttpll
push
mov
mov
or
jnp
jge
int
repz
notl
jge
cmp
les
mov
shll
icebp
pop
sbb
not
and
sub
inc
outsb
cwtl
xchg
iret
xchg
lret
sbb
and
outsb
mov
dec
xlat
pop
push
lcall
sahf
xor
insb
ss
outsb
cld
cmpsb
jb
loope
ret
call
out
mov
mov
es
shll
mov
aaa
push
jmp
clc
pop
dec
cmpsb
mov
xor
ror
ret
push
cmp
mov
and
pop
sub
pop
std
ljmp
fs
pusha
out
mov
pop
scas
adc
icebp
or
out
push
adc
jae
mov
cwtl
icebp
lods
xchg
jl
pop
xchg
mov
xchg
addr16
pop
fcmovbe
sub
loope
pop
int3
jle
sbb
mov
xchg
inc
int3
invd
inc
push
loop
movsl
xor
rcr
pop
xchg
rcll
outsl
stc
ret
out
lahf
sub
sbb
xchg
jno
js
jmp
inc
pusha
and
aad
outsl
hlt
cmpsl
jo
pop
fcompl
inc
sahf
icebp
mov
icebp
mov
pop
das
add
lahf
imul
adc
mov
scas
xchg
sbb
xor
fistl
sbb
shll
in
cmp
aad
mov
push
mov
dec
push
ja
jae,pn
dec
arpl
mov
call
xor
call
sbb
enter
push
scas
test
rcrl
jno
adcl
loopne
mov
je
cmpsb
aas
or
sarb
xchg
cmpsb
dec
int3
mov
fidivrl
loope
xchg
mov
mov
and
popa
mov
rolb
jae
rcr
mov
sbb
jae
mov
add
daa
je
jg
aam
cmp
pop
xchg
mov
hlt
hlt
ret
lock
hlt
clc
mov
fpatan
xchg
movsl
mov
hlt
jmp
xor
pop
jns
addr16
loopne
leave
pop
push
dec
xchg
fisttps
and
pop
sub
popa
or
jmpw
sbb
ja
jns
xchg
mov
subl
push
shrl
mull
test
out
arpl
sbb
or
pop
inc
sub
or
dec
or
dec
adc
out
jmp
and
mov
lret
repnz
push
sub
popf
mov
and
dec
test
cmp
jg
mov
pop
or
imul
push
jno
dec
or
aaa
push
out
repz
mov
cwtl
and
lea
loop
cli
jno
adc
das
out
xor
mov
shlb
fs
in
xor
mov
xor
xor
jae
ljmp
push
inc
sub
xor
cwtl
push
mov
cli
test
jne
ds
stos
ljmp
sub
jbe
inc
insb
sbb
sub
sti
lahf
inc
outsb
sbb
mov
imulb
mov
and
sbb
bound
lock
fs
jp
inc
jb
cli
cmpsb
repnz
jae
jmp
idivl
sub
sbb
xor
jge
and
mov
lods
inc
mov
outsb
lea
jle
lret
repz
mov
or
iret
mov
mov
sbb
xor
cmp
add
lea
mov
xorl
decl
aaa
dec
std
inc
mov
jle
es
mov
add
cmp
cmp
add
push
inc
adc
inc
les
cmp
add
inc
mov
dec
inc
inc
sarl
xchg
andb
es
movb
or
xchg
scas
dec
xchg
repz
cwtl
or
inc
jmp
or
mov
mov
pop
jle
iret
or
sbb
xchg
xchg
rclw
adc
lcall
dec
aas
mov
rorl
lret
dec
out
mov
lret
or
mov
clc
nop
lret
jg
sbb
dec
mov
out
ds
int3
fwait
mov
dec
and
adc
push
xchg
pusha
adc
push
and
jge
adc
mov
pop
in
cmpl
adc
jb
sbb
mov
jmp
sbb
adc
mov
pop
loopne
xchg
ret
xchg
orl
adc
outsb
adc
or
gs
scas
jecxz
mov
mov
jmp
out
sbb
adc
adc
loopne
adc
pop
adc
int3
jne
xchg
sti
lcall
out
test
lret
lcall
fidivl
nop
sub
or
push
or
lahf
arpl
shrb
adc
push
and
xchg
or
and
push
lea
gs
mov
filds
pop
or
xor
int3
pop
xchg
mov
push
add
leave
inc
push
mov
dec
and
sbb
pop
fstps
jmp
outsb
mov
rol
enter
lret
adc
int3
fildll
sbb
adc
jb
shlb
sbb
in
pcmpgtb
cmovb
mov
jb
mov
sbb
loopne
loopne
cwtl
loopne
sbbb
pop
jae
pop
bound
pop
adc
adc
test
cmp
stc
rcrl
stc
mov
mov
sarb
nop
or
xor
mov
adc
xchg
ret
int3
xor
nop
adc
sbb
pop
inc
or
js
ret
xor
inc
dec
iret
push
sub
dec
xchg
cmp
inc
pop
push
adc
mov
xor
iret
or
int
dec
ror
or
subl
call
sub
outsb
je
je
hlt
push
push
sub
inc
insb
sahf
fs
cmp
clc
loope
lret
imull
jae
addb
xor
call
adc
dec
sub
xor
aas
add
push
pop
sbb
fidivrl
rorb
sbb
call
repnz
xor
divb
dec
ss
cmpsl
mov
repz
xchg
dec
out
adc
pop
sbb
shrb
add
inc
adc
xchg
add
inc
test
add
outsb
lds
insb
mov
adc
xchg
xchg
or
dec
mov
or
dec
sbb
outsb
leave
sbb
lret
xchg
dec
sbb
dec
adc
dec
sbb
dec
adc
xchg
dec
enter
adc
outsb
nop
xchg
rcrb
adc
xchg
mov
adc
sbb
outsb
xchg
xchg
rcrb
adc
xchg
mov
adc
push
outsb
xchg
xchg
aam
adc
aad
push
sbb
stc
cmp
insb
pop
mov
xchg
sbb
outsb
sbb
insb
sbb
fldcw
xchg
lcall
fwait
adc
sbb
outsb
pop
xchg
pushf
sbb
sbb
adc
sbb
outsb
pop
xchg
pop
sbb
insb
jecxz
and
pusha
sbb
outsb
loopne
and
popa
mov
adc
mov
sbb
insb
out
and
fs
outsb
in
and
in
adc
cmpsb
outsb
out
daa
sbb
insb
jmp
sub
push
push
or
rorl
test
pop
sbb
mov
lret
push
dec
lods
or
push
dec
xchg
inc
adc
adc
adc
adc
adc
sbb
stos
sbb
pop
sbb
insb
insl
scas
jne
push
mov
mov
sbb
mov
and
sbb
xchg
and
sbb
sbb
pushf
sbb
sbb
sub
sub
xchg
xlat
push
dec
mov
dec
or
xor
xchg
jle
dec
or
adc
cs
mov
sbb
add
push
loope
xchg
jle
repz
lcall
fisubrl
sbb
pop
sbb
sbb
sbb
mov
mov
or
fs
or
or
sub
fisttpll
push
or
pop
dec
decl
out
push
rcr
xchg
adc
pop
adc
xchg
into
lahf
push
sbb
sbb
sbb
sbb
test
popa
sub
cmp
loope
mov
pop
and
dec
repnz
mov
loop
and
mov
arpl
jae
fbld
out
pop
and
or
adc
adc
and
xor
mov
data16
sbb
sub
out
daa
or
addr16
dec
sbb
mov
push
test
sbb
push
dec
mov
dec
mov
dec
sbb
inc
xchg
out
mov
push
test
mov
ljmp
or
sbb
or
sub
in
or
outsl
nop
orb
dec
mov
lcall
adc
repz
test
sbb
scas
jmp
jae
jnp
ficoms
mov
push
lret
out
sub
xor
icebp
dec
test
je
rcll
call
push
inc
inc
push
mov
les
call
incl
inc
dec
cmpsb
adc
mov
push
lods
xchg
cmp
popf
in
popf
fiaddl
add
mov
mov
xchg
xor
ja
cmp
insl
dec
outsl
push
int3
mov
pop
adc
sbb
jle
in
mov
or
cmp
xchg
pop
sbb
jp
inc
sub
push
mov
sbb
sahf
lret
test
div
aad
or
xchg
jle
sub
fistpll
mov
call
and
add
pop
dec
jmp
out
or
pop
adc
and
pop
shl
not
orl
pushf
cmp
pop
sub
xor
stos
lcall
adc
mov
es
adc
or
jmp
push
dec
jmp
push
mov
dec
adcl
xchg
sbb
xchg
pop
push
push
push
mov
xchg
mov
jo
cltd
sbb
mul
daa
cmp
jnp
push
jnp
mov
inc
jl
and
pushf
pop
fwait
pop
gs
mov
add
repz
lret
or
iret
dec
or
or
or
hlt
jecxz
popf
int3
repz
dec
lea
add
clc
std
data16
cmovg
mov
mov
mov
mov
pop
dec
lret
or
shld
das
dec
leave
ror
cmp
xor
xor
lret
jbe
mov
cmp
dec
pop
dec
adc
mov
adc
dec
xor
ds
pop
mov
imul
push
push
pop
or
xchg
data16
xchg
push
jb
rcrb
sahf
jle
adc
mov
nop
push
xchg
or
adc
xchg
pop
push
xchg
fisttpl
sbb
ficompl
pop
fisttps
sbb
pushf
ficomps
pop
lahf
jecxz
and
loop
arpl
movsb
out
cmpsl
jmp
sub
ljmp
insb
lods
scas
out
das
outsl
scas
or
xor
mov
xor
mov
xor
mov
divb
or
sti
cmp
mov
mov
mov
mov
add
or
ret
movl
movb
xchg
or
mov
std
mov
insl
rcl
inc
dec
push
mov
inc
sbb
dec
xor
add
mov
data16
sbb
shrb
dec
rorb
sahf
push
dec
movd
push
inc
scas
add
stos
movsl
sarb
aaa
sbb
cmp
lret
mov
pop
or
xchg
stc
mov
mov
and
ss
mov
imul
insl
fadds
or
mov
pop
or
gs
cli
adc
int3
or
fwait
pop
xchg
fisubl
sub
mov
pop
stos
loope
or
jge
jnp
jno
test
or
out
mov
jnp
inc
jl
popa
inc
xor
sarl
cmp
adc
or
ret
loope
sub
mov
bound
cmp
rolb
mov
fimull
lea
jno
xchg
scas
xchg
inc
hlt
int
pop
arpl
incb
std
add
adc
nop
in
out
inc
mov
scas
mov
lret
xchg
push
fldenv
lds
daa
or
cs
xor
dec
xor
or
adc
or
lret
fwait
mov
add
sub
pop
stc
or
jno
popa
or
test
or
imul
mov
and
fsts
xor
sahf
or
sti
cld
imul
add
sub
and
mov
pop
mov
jne
mov
cmp
loop
pop
mov
push
xchg
jmp
sub
je
sarb
or
popa
xchg
sbbb
push
pop
fistps
pop
jmp
out
andl
mov
cli
cmpsl
aas
jl
mov
scas
or
int
ss
or
out
sub
decl
inc
inc
fsubl
imul
or
fs
push
cmp
pop
xchg
sub
je
add
aam
std
mov
adc
repnz
stos
mov
in
sub
int
and
sbb
adc
xchg
nop
cmpsl
testl
pop
repnz
outsb
xchg
stos
jno
cmp
inc
or
mov
push
icebp
mov
or
aaa
inc
pop
mov
jne
sub
mov
test
enter
add
push
out
jns
roll
loopne
sbb
xor
xchg
mov
adc
sbb
pushl
fldl
xchg
xchg
or
lea
stc
loop
cmp
cmp
xlat
fsubrl
ja
adc
jb
inc
fwait
sbb
rorl
shl
ss
int3
loopne
add
sahf
push
fistps
mov
pop
xchg
xor
lcall
or
test
mov
pop
daa
mov
or
sub
xchg
fstpt
popf
lret
aad
mov
mov
stos
lea
push
out
sub
or
or
test
rcl
fs
mov
shlb
mov
mov
das
pop
add
mov
out
ret
xchg
insl
aad
add
test
sub
jns
loop
into
and
mov
or
mov
mov
fmul
data16
outsl
sahf
loop
div
mov
push
xorb
test
cmp
dec
icebp
cmp
xor
loope
push
rolb
push
xchg
sti
fimuls
xor
xchg
and
mov
or
and
push
or
xchg
or
je
dec
test
out
ret
sub
lret
adc
sti
out
or
add
aaa
stc
or
push
cmpsb
nop
cltd
iret
and
or
pop
enter
data16
cmp
call
mov
int
mov
or
mov
pop
adc
mov
shll
jno
aad
mov
inc
mov
fnstsw
mov
mov
xchg
repnz
adc
mov
cmp
jnp
mov
adc
cmp
jnp
pop
mov
xchg
and
xchg
sbb
xchg
cli
mov
lods
rcrb
aaa
push
xor
add
std
insb
mov
mov
and
lea
dec
ret
adc
in
hlt
pop
sbb
xchg
push
inc
nop
jae
addr16
cltd
push
loopne
divps
iret
xchg
adc
sub
aaa
push
xchg
iret
xchg
push
pop
adc
stc
pop
and
pop
lea
cmp
xchg
add
xchg
ds
mov
mov
bswap
ficoml
lods
fstpt
xor
repz
test
pop
ret
mov
stc
jnp
push
sbb
cs
mov
mov
insb
or
fimuls
outsb
mov
jmp
lcall
mov
jmp
movb
icebp
push
jle
pushf
mov
xchg
out
push
adc
ret
pusha
adc
mov
jns
inc
aad
cmp
out
push
pop
stc
ret
lcall
roll
imul
hlt
leave
cmp
xor
leave
push
pop
cmp
aad
push
out
push
cmp
lcall
roll
mov
xlat
xor
push
insb
push
int
test
int3
mov
inc
mov
shlb
cld
push
sti
ljmp
mov
inc
negb
incb
negl
add
dec
fst
ja
sbb
xchg
push
pop
les
int
sbb
mov
sub
scas
cld
xor
jo
pop
push
ja
jb
mov
popa
dec
jp
adc
mov
dec
push
push
mov
fimull
jnp
filds
fmull
jnp
js
and
pushf
mov
cmpsb
pushf
dec
mov
data16
xchg
xchg
js
mov
jbe
loope
push
adc
icebp
dec
mov
xchg
aam
cmpsl
pop
xlat
add
outsl
sbb
cmp
xor
movsb
aaa
sahf
mov
sbb
dec
pop
js
es
xchg
dec
cmpsb
sbb
daa
insb
mov
push
jbe
rclb
fldt
sbb
xor
imul
xchg
pop
push
push
or
xchg
sbb
push
cs
xchg
fiadds
pop
push
imul
xchg
adc
sub
inc
push
in
xchg
pop
sbb
ja
jge
orb
sub
add
xchg
xor
xchg
out
jno
dec
sahf
roll
adc
lret
or
lret
lahf
push
aam
inc
int
outsb
sahf
sub
clc
xchg
outsb
incl
orb
bound
jnp
in
lret
xlat
je
mov
iret
fisttpl
jo
dec
incl
or
int3
add
int
push
nop
rcll
adc
xchg
xlat
pop
xchg
adc
fistl
push
pop
sub
sbb
cwtl
ds
dec
inc
cmpsl
sti
movsl
rclb
dec
in
push
xchg
push
adc
jae
dec
mov
push
adc
je
or
cmc
or
jno
sbb
mov
lret
test
data16
jns
add
mov
xchg
push
pushf
test
stos
mov
pop
push
inc
cltd
adc
push
js
jmp
test
inc
or
jne
pop
aas
stc
cmp
cld
cltd
decb
jae
fcomi
orl
pop
xchg
rcl
rcrl
sti
testb
iret
iret
faddp
pop
movsb
bound
std
ds
mov
cmp
jmp
cld
dec
push
ja
jle
mov
mov
cmp
xchg
adc
testl
lock
sbb
nop
das
adc
dec
aam
fs
add
mov
mov
adc
xchg
mov
push
sub
repnz
cld
pop
popf
lahf
scas
insb
cmp
sbb
lahf
ficoml
sub
imul
lret
stc
sub
jnp
xor
movzwl
jecxz
push
cwtl
fcoms
mov
lcall
adc
fisttpl
div
inc
add
adc
mov
mov
inc
pushf
push
xchg
mov
call
cmp
movsl
divl
or
sub
test
addr16
test
pop
push
call
nop
pop
mov
lods
shl
hlt
cld
pushw
stc
sub
sbb
and
inc
mov
xchg
jae
inc
dec
dec
xchg
adc
push
dec
mov
lods
orl
jno
push
popf
out
inc
dec
repz
dec
popaw
call
fucomi
push
inc
cltd
aas
pop
dec
cli
movsb
mov
shrb
dec
ror
jge
jle
add
test
cmp
or
xchg
or
dec
idiv
mov
jae
out
cli
mov
xor
xchg
outsl
pop
xor
jae
mov
mov
jo
js
mov
scas
ds
or
mov
jle
stos
xchg
or
xor
ret
jmp
incl
lock
or
or
cli
ljmp
push
popf
jnp
inc
add
bound
dec
test
lea
adc
mov
mov
or
enter
loope
mov
jae
mov
mov
or
rclb
or
cld
push
jge
pop
or
xchg
cmp
lea
popf
mov
testl
cli
in
inc
or
lds
adc
inc
cwtl
or
sub
or
cmpsl
mov
mov
push
xchg
test
inc
popf
jbe
rcr
inc
sbb
push
in
mull
test
mov
mov
inc
popa
sbb
hlt
in
pop
or
lock
push
enter
sub
xor
shlb
lock
loope
fwait
lret
test
push
and
jns
xor
jle
pop
pop
daa
cld
push
or
lock
adc
enter
lret
dec
jnp
or
rcr
in
in
dec
adc
aad
inc
cli
jmp
les
inc
mov
fwait
in
mull
mov
clc
and
or
mov
mov
cmpsb
and
xor
decb
filds
nop
cmp
ss
sbb
sub
repnz
mov
xchg
loopne
sbb
test
cmp
mov
xor
repz
adc
stc
in
sub
pop
inc
addb
sub
fwait
or
imul
or
and
pop
sbb
lcall
xchg
xor
scas
sub
dec
adc
inc
push
add
dec
or
stc
aaa
mov
shlb
fldl
loopne
out
iret
push
cmp
es
push
or
call
adc
jbe
add
adc
sbb
dec
loopne
sbb
call
scas
jle
pop
xor
push
out
nop
outsl
jno
cmp
xor
mov
fsub
out
mov
mov
sub
mov
mov
mov
or
jae
ss
mov
test
xchg
inc
stos
arpl
popa
test
iret
lods
or
xchg
out
jp
or
adc
push
aas
cmp
in
mov
jb
inc
lock
add
mov
rcrl
mov
notw
outsb
and
ror
and
pop
ret
cld
inc
cmc
dec
cmp
mov
jp
cmpsb
and
imul
movsl
sbb
out
int3
shlb
aaa
jae
imul
xchg
mov
lock
jmp
lods
icebp
stos
or
dec
pop
jbe
std
fld
rorb
rcll
or
cli
sti
lahf
push
popa
fcomip
or
dec
clc
sbb
jg
fistpl
mov
ret
lods
fildll
les
or
loope
adc
xchg
push
or
jmp
add
rorb
hlt
andb
push
sarb
ret
aad
enter
adc
fs
test
adc
movsl
inc
adc
mov
rorl
jecxz
shr
int3
in
xchg
or
sbb
mov
or
outsl
push
mul
sub
push
cmp
push
or
sub
mov
repz
or
dec
divl
or
pop
push
mov
lret
add
cmpb
hlt
jne
pop
inc
sahf
add
or
data16
or
jg
inc
xchg
lods
repz
inc
ljmp
or
cmp
adc
inc
out
loopne
mov
push
xchg
inc
and
xchg
popa
pop
mov
or
sbb
mov
cmp
xchg
ljmp
data16
jo
xchg
insb
hlt
fs
pop
rcll
dec
repnz
call
mov
or
gs
outsb
mov
push
rorb
xlat
or
test
ljmp
scas
adc
jp
or
pushf
mov
iret
mov
xor
lock
xchg
cmp
cmp
xor
lods
clts
int
dec
or
xchg
fcmove
xorb
shr
lcall
repnz
aam
and
outsb
xchg
or
xchg
bound
and
or
sub
rcrb
jmp
fisubl
out
or
negb
or
cmp
adc
test
pop
test
add
bound
push
out
pop
inc
stos
mov
add
inc
push
loope
jmp
and
sti
andb
or
lock
push
push
jbe
fldcw
dec
mov
fwait
and
cmp
adc
xor
ss
xchg
loop
dec
push
jo
or
mov
test
mov
push
leave
adc
dec
leave
sbb
repz
outsb
adcb
addl
or
xor
hlt
mov
mov
add
gs
adc
in
les
xchg
cli
lods
lods
dec
enter
push
cmp
push
mov
xchg
lcall
int3
leave
push
fstpt
test
or
out
or
dec
dec
jbe
mov
dec
cwtl
inc
loop
cmp
test
or
pmuludq
fadds
test
cmp
mov
push
xchg
cmp
fidivl
mov
mov
pop
aaa
sub
pop
xchg
inc
mov
sub
xchg
lods
ss
movsb
mov
enter
addr16
add
sbb
sbb
out
dec
push
pop
ret
pop
ficoml
inc
jmp
add
push
lea
xor
push
push
cmpsl
and
aad
out
mov
pop
mov
xchg
adc
xor
mov
repnz
addl
pop
cs
inc
dec
dec
and
pop
out
xor
test
push
sbb
or
mov
lcall
test
jmp
xchg
push
adc
jo
inc
ficompl
sub
pop
xchg
cmp
sbb
imul
hlt
jecxz
sbb
xchg
xchg
aam
push
cmc
out
gs
mov
ror
sub
lretw
push
sbb
cli
inc
xchg
clc
scas
inc
cli
xchg
adc
sbbb
inc
cmpsl
lock
jecxz
addr16
lock
push
mulb
cmpsb
lret
roll
cmpsb
push
sti
mov
aad
repnz
jns
into
fucomi
pop
call
test
add
cld
dec
jge
fs
jns
sbb
into
push
fs
adc
pop
lret
aam
push
push
cmp
sbb
jg
dec
popf
dec
cmp
sub
out
movsl
sub
or
xchg
icebp
sub
fidivrs
cmp
cmpsl
pushf
lret
lods
sub
fs
mov
repz
inc
lods
xor
mov
sbb
sahf
pop
js
mov
subl
push
xchg
jecxz
mov
ret
arpl
mov
lret
add
stos
xchg
lock
cmp
inc
xor
hlt
mov
push
sub
loope
xchg
lea
jmp
fnstcw
mov
shrl
inc
in
pop
lahf
pop
dec
clc
xor
adc
pushf
xlat
cltd
aad
lret
push
jae
jg
loope
cs
xor
dec
shll
scas
add
shlb
mov
xchg
adc
insl
aas
out
repnz
xchg
sub
inc
push
cltd
sub
imul
leave
sbb
hlt
or
fcmovu
sub
leave
sbb
inc
rorb
jo
jl
shrb
cmp
cmc
movsb
xor
fcmovb
jmp
adc
dec
jge
mov
add
dec
insb
neg
int3
outsl
pop
mov
fwait
lods
jl
outsl
bound
push
sbb
dec
sub
jg
mov
push
mov
mov
je
pop
sbb
into
jae
jle
adc
mov
xchg
inc
mov
inc
cmp
cwtl
test
fwait
mov
mov
cmp
outsb
mov
dec
mov
pop
shr
pop
out
scas
test
push
cmp
ret
test
loopne
inc
fimull
js
dec
pop
in
dec
jae
jnp
push
loop
pop
not
enter
aam
xchg
lock
xor
lcall
test
push
jl
ss
outsb
xchg
mov
lods
in
xor
xchg
sub
dec
movsl
in
stc
scas
add
xor
pop
pop
clc
jecxz
pop
sbb
shrl
ja
ficompl
insb
mov
push
sub
leave
pop
pop
outsl
push
jl
cmp
cmc
jecxz
xchg
fsubrs
mov
mov
xchg
enter
pop
shl
inc
cwtl
mov
fs
push
mov
push
jecxz
hlt
xor
ret
mov
xchg
je
xchg
ljmp
out
cmp
push
or
int3
lret
pusha
dec
out
xchg
pop
test
xchg
lea
push
hlt
aas
ficoml
pusha
fisttpl
test
js
test
out
psllq
xchg
xlat
or
mov
xchg
lods
sbb
adc
dec
aad
outsl
mov
mov
push
popf
add
xor
filds
loope
pop
iret
std
add
mov
dec
pop
sub
dec
outsl
test
pop
js
mov
cmp
stc
call
inc
cmc
cmp
xchg
jns
cmp
loopne
mov
ret
in
cmp
call
lock
scas
or
cmp
movsl
adc
fistps
mov
mov
push
mov
dec
cmpsb
in
mov
movsl
rolb
mov
push
xchg
cs
jl
cmpsl
out
add
stc
into
jnp
call
lock
pop
cs
aam
ljmp
enter
fcmovnu
sub
mov
sbb
sbb
ja,pn
ret
add
and
adc
mov
adc
movsl
test
jbe
mov
into
ret
test
arpl
daa
jmp
out
dec
xchg
sub
push
sub
push
pop
ret
fwait
push
ret
mov
cmp
mov
aam
or
imul
xor
lods
jmp
mov
dec
movsb
dec
or
js
dec
xor
jecxz
cs
enter
stc
mov
adc
inc
aas
scas
push
movsb
xor
cmp
mov
fisttpl
out
xor
dec
sub
adc
lret
mov
popf
decl
popa
adc
xchg
jns
test
cld
dec
add
inc
out
test
dec
fdivrs
push
xchg
movsb
or
or
or
pusha
jge
or
gs
test
aam
or
lods
insb
push
iret
les
sub
sbb
test
lea
inc
push
jne
sbbb
sti
rol
push
insl
xchg
ds
or
cltd
push
test
lahf
or
jl
jle
or
lret
sub
push
cmp
imul
push
bnd
inc
lea
sti
ret
sahf
inc
add
ret
cmp
or
add
xchg
outsl
cmp
cmc
or
push
testb
fiadds
pushf
sbb
mov
decl
push
fcoms
int
push
or
jp
dec
push
adc
sub
es
hlt
fs
mov
mov
inc
sahf
mov
and
push
mov
or
or
iret
dec
adc
into
xchg
ret
xor
jb
fsubrs
out
sub
pop
mov
pusha
or
sub
je
inc
cmp
lcall
xchg
mov
int
dec
adc
sbb
or
add
jle
cltd
or
insl
mov
mov
repz
rorb
lds
jmp
bound
xor
xchg
ljmp
inc
inc
add
or
ret
aad
or
scas
stc
into
rorl
push
xchg
or
aaa
loope
jp
push
dec
xchg
js
cmpsl
xchg
aam
clc
cmp
or
out
add
sub
xor
fmull
lods
or
int
or
cld
loopne
sbb
in
push
notb
xlat
xchg
mov
mov
xchg
shrl
or
jb
bound
pop
or
push
ja
insb
test
sub
iret
std
or
lahf
mov
sub
lods
out
sub
cwtl
or
sub
or
push
sub
cmp
call
push
jno
decl
jne
sub
or
movsl
mov
or
or
popf
mov
or
in
push
sub
push
dec
loop
or
movsl
cltd
or
sbb
cmp
ss
adc
in
or
scas
and
sbb
repnz
sub
adc
mov
push
xor
in
fidivrs
cmp
ret
test
in
daa
rorl
push
mov
in
pop
addr16
cmp
enter
and
cmpsb
mov
lret
mov
int3
push
xor
or
inc
std
jns
sub
dec
pop
aad
or
push
mov
ret
aaa
ret
stc
inc
lret
xchg
xor
sbb
mov
in
xchg
cmpb
ret
push
add
fs
xor
fdivs
xchg
sbb
jae
shr
sarb
mov
add
cmc
or
or
xchg
das
push
jecxz
loop
adc
es
adc
add
pop
or
dec
mov
int
and
push
xor
insl
jecxz
dec
rclb
lret
push
or
mov
lret
or
adc
js
in
sbb
pushf
dec
mov
cmpsl
inc
pop
fidivrl
dec
loope
or
or
int
stos
shlb
test
adc
pop
fstpl
xchg
iret
adc
lds
sub
push
movsl
jae
push
adc
test
lret
andb
mov
xchg
out
inc
or
jmp
sbb
js
adc
mov
mov
xchg
aas
stos
inc
mov
stos
pop
push
adc
enter
scas
fwait
pop
and
push
sahf
inc
push
sbb
lcall
cli
mov
stos
adc
pusha
stos
push
adc
int
scas
or
xor
pop
inc
cltd
adc
sbb
ror
ror
test
fnstsw
sbb
lea
pop
or
dec
cmpsl
mov
add
push
mov
je
push
sub
sub
jecxz
add
pop
xchg
repz
mov
rolb
or
cmp
adc
outsb
in
aad
ss
push
outsl
out
cs
pop
mov
ds
push
adc
lcall
dec
xchg
xchg
push
sub
data16
lea
cmp
pop
jno
jne
dec
imul
cmp
xor
insb
adc
filds
mov
ror
or
mov
dec
inc
sbb
dec
sbb
sbb
fldt
loopne
xchg
push
adc
xchg
fildll
cmp
outsb
and
imul
push
push
push
pshufw
push
pop
jnp
in
xchg
push
xchg
cs
shrl
fstpt
or
sahf
mov
filds
adc
leave
xorb
adc
push
sub
pop
mov
aad
push
push
push
push
cmpsl
xor
xor
sarb
push
sbb
stos
or
dec
adc
xchg
sub
push
adc
xor
rorb
push
fimull
xchg
xor
adc
out
inc
lcall
arpl
xor
push
arpl
or
mov
ss
arpl
cmp
push
mov
xor
adc
sub
cmpsb
push
sbb
outsb
add
ds
cmp
push
and
ljmp
stc
sub
insl
or
in
xor
inc
lods
or
dec
rorl
in
mov
outsl
adc
fwait
and
xor
movaps
mov
sbb
mov
adc
fdivr
or
lods
mov
mov
dec
xor
adc
cmp
adc
adc
scas
fimuls
aaa
fdivrs
push
scas
dec
out
xlat
xor
ret
sbb
pushf
sbb
dec
or
scas
scas
sub
or
sbb
es
dec
inc
jecxz,pt
adc
push
das
or
add
push
bound
cmp
or
and
in
insb
push
repz
repz
adc
inc
repz
dec
xor
or
outsb
adc
dec
and
or
or
and
dec
jnp
pop
cltd
xor
jo
xchg
sbb
in
sub
jo
mov
jo
adc
xor
sbb
cs
adc
adc
icebp
push
sub
xor
rorb
or
push
sti
das
push
daa
scas
jbe
inc
push
mov
mov
ljmp
dec
jle
mov
push
adc
and
stos
bnd
inc
push
jae
and
int3
out
adc
and
sbb
ror
dec
lods
sbb
jne
dec
jnp
ret
icebp
xor
jne,pn
cmp
cmp
adc
cmc
sbb
push
sahf
cwtl
and
aas
xor
ret
pusha
cmp
aas
int
es
fwait
jno
in
and
sub
push
jle
sub
or
fnstsw
add
inc
fcmovb
sbbb
fisttpl
xchg
cmp
mov
lret
xor
or
cwtl
or
iret
in
outsb
push
cmp
dec
push
adc
sbb
adcb
in
outsb
ss
or
dec
outsb
cmp
push
or
mov
push
dec
dec
dec
div
or
mov
in
and
int3
nop
fwait
jno
sub
nop
fmuls
nop
fwait
cmpsl
push
inc
nop
or
push
shr
cld
incl
push
fwait
lea
movsl
inc
or
repz
push
es
fcompl
rcll
lret
mov
adc
fimuls
mov
push
jns
repz
fwait
push
cmp
push
dec
or
ss
jg
jno
pop
sbb
adc
and
mov
push
pop
and
es
cmp
ret
ja
dec
xor
fidivl
inc
push
sbb
sarb
sbb
or
test
or
xor
mov
xchg
sbb
adc
lcall
outsl
adc
cmp
cmpsb
mov
sub
xor
push
sub
imull
lcall
push
fstpt
aaa
push
cs
inc
push
pop
testl
jp
push
fwait
lea
pop
sub
xlat
adc
fildll
sbb
jno
dec
adc
fstps
push
sub
es
jne
lcall
add
mull
mov
or
jno
and
data16
push
jns
push
daa
cmp
pop
loope
or
mull
and
dec
sahf
or
and
cmp
and
push
adc
push
mov
ljmp
fnsave
and
aad
adc
sbb
sbb
jge
dec
stc
jbe
mov
pop
inc
push
in
dec
jle
sbb
es
call
icebp
push
lret
xor
push
dec
std
mov
sub
testb
mov
sbb
pop
cmc
lret
jp
dec
xor
push
mov
loopne
pop
cmc
sbb
dec
sahf
cmp
adcl
aam
sub
test
imul
aaa
push
es
adc
xchg
cmp
ds
or
mov
sahf
popf
aas
cmp
lcall
and
aas
mov
sbb
inc
push
and
jne
adc
push
and
xor
and
mov
cmc
fucomip
mov
xor
test
arpl
dec
cld
outsb
adc
push
adcb
fistpl
adc
lea
sub
ss
mov
test
adc
cmp
sbb
cs
cmp
imul
in
or
ds
inc
or
jne
and
mov
cmp
lcall
mov
std
mov
push
ds
fwait
push
xor
iret
inc
inc
push
sbb
lret
or
add
push
push
inc
dec
mov
sbb
aam
or
ss
str
imulb
push
fmuls
xor
adc
mov
sbb
ds
sarb
dec
inc
cmp
scas
or
inc
pop
xor
and
inc
aam
sub
push
aad
repnz
jns
sbb
or
es
sub
in
sub
lret
mov
jle
fcmovnb
sbb
sahf
inc
push
and
adc
mov
push
ss
cs
dec
ds
push
out
sbb
xchg
adc
sub
mov
dec
cmp
ss
or
psubsb
or
inc
sub
cmpsl
sub
push
pop
imul
dec
sti
xchg
outsb
add
mov
add
inc
test
adc
push
out
rclb
dec
or
adc
out
aad
lret
and
cmp
call
fwait
dec
xor
pop
push
sbb
push
out
cs
or
fs
ss
xor
xchg
ficomps
mov
xchg
mov
fdivrs
into
adc
repnz
je
ret
mov
repz
jo
push
mov
xchg
adc
and
fists
cmp
sub
adc
push
jno
pop
rcrb
push
dec
and
push
cwtl
ss
cmp
fistpll
jle
sbb
stc
cwtl
inc
push
es
stos
rcll
or
and
and
ds
jno
mov
jbe
adc
dec
es
mov
fistpll
push
sub
inc
xor
push
into
fbld
push
enter
inc
and
dec
sub
or
and
sbb
sti
sub
sub
sbb
or
and
cmp
nop
sub
fistl
outsb
xor
fists
sbb
call
and
push
sub
adc
test
sarb
push
sbb
icebp
jno
lods
push
popf
xor
sub
inc
cs
mov
mov
bound
mov
mov
daa
xchg
sbb
push
inc
sbb
and
jbe
rcrl
into
mov
dec
dec
movl
fbld
adc
mov
push
push
int
dec
or
push
sbb
arpl
movsl
das
adc
iret
or
xor
adc
fbld
cs
cltd
ss
and
imul
inc
shl
xor
xor
in
jno
adc
cmp
mov
outsb
adc
fmuls
sbb
and
cs
push
cmp
daa
push
or
lock
sbb
or
fisttpl
dec
or
lret
pushf
mov
scas
pop
jb
and
mov
cmp
pushw
das
pop
sub
mov
sbb
mov
add
push
rcrl
or
ret
and
adc
dec
sahf
or
jb
inc
jmp
xchg
or
sub
sbb
sbb
cmc
push
adcl
xor
sbb
cmp
push
pop
sbb
pop
sbb
and
in
push
dec
xor
sbb
adc
sbb
xor
sbb
xor
loop
ja
adc
gs
sahf
or
adc
adc
jp
jae
xchg
mov
leave
iret
or
or
xchg
lcall
sub
cwtl
push
ljmp
cmp
mov
sbb
or
pop
mov
clc
adc
adc
clc
ja
es
sti
cmp
inc
cmp
sbb
in
sbb
and
cmpsb
cmp
adc
xor
xor
sti
stos
jno
int3
ss
or
jp,pn
dec
push
sub
cmp
inc
mov
ret
dec
shrl
push
jo
stc
outsb
sub
push
adc
sub
sub
test
mov
and
sub
cmp
sub
sub
push
lcall
es
test
inc
mov
insb
mov
or
js
popa
or
or
sbb
dec
pop
movsl
mov
in
xor
sub
xor
int3
lea
cmp
mov
and
fst
pushf
adc
outsb
pop
daa
out
mov
mull
or
adc
rcrl
inc
sbb
xor
push
sub
cmpsb
sbb
es
and
out
outsb
sahf
daa
lods
fidivrl
cmp
mov
adc
out
mov
ja
pop
imul
int3
ficompl
ds
pop
subl
adc
ret
mov
dec
mov
adc
iretw
sub
in
imul
xchg
xchg
dec
jp
bound
sub
std
sub
sub
push
sbb
idivl
inc
jecxz
iret
xchg
cmp
sbb
stc
add
xor
js
jb
ds
mov
mov
shlb
push
call
subb
jns
data16
es
and
xor
cmp
adc
daa
lods
push
sbb
jl
xor
adc
fcoml
xchg
loope
mov
jl
adc
ss
ds
scas
adc
mov
mov
ds
xchg
xchg
outsb
jge
cs
test
jns
sbb
aam
repz
push
push
pop
fmuls
pop
push
xor
xchg
outsb
ss
pushf
stc
mov
pop
jle
ds
loopne
cwtl
ss
cmp
dec
mov
sbb
push
jle
insb
push
dec
sub
adc
adc
cmp
outsl
cmp
push
xchg
pop
lahf
inc
fwait
pop
clc
or
xchg
pop
lahf
inc
fistpl
xor
cmp
add
push
sbb
sub
pop
cltd
orb
rolb
sbb
mov
push
adc
sub
jp
rcll
into
pushf
and
cltd
push
push
push
pop
loopne
xor
adc
outsb
lret
rolb
sub
jno
sbb
push
mov
adc
outsb
lea
push
push
pop
pop
hlt
or
fwait
pop
add
mov
fnstsw
bound
scas
fisubs
jb
cli
mov
aam
bound
in
pushl
insb
jnp
scas
sbb
sub
or
jecxz
clc
xor
dec
scas
sbb
xchg
inc
xor
outsb
dec
adc
aaa
inc
or
inc
push
nop
outsb
dec
push
xchg
adc
push
push
insb
xchg
mov
adc
jne
out
mov
dec
repz
inc
sbb
out
xchg
xchg
dec
aam
adc
js
xchg
int
ret
xchg
dec
sbb
insb
mov
scas
push
ret
es
rorl
das
mov
pop
insb
xchg
mov
adc
sbb
cs
aas
sbb
sbb
addr16
push
sub
push
xor
mov
sbb
insb
orb
sbb
xchg
push
sbb
insb
sub
xchg
sub
icebp
ficomps
xchg
repnz
xor
sub
push
call
cmp
stc
pop
int3
push
test
pop
push
gs
mov
push
mov
add
sbb
adc
mov
gs
push
stos
xlat
fcmovnbe
rolb
adc
sub
adc
mov
mov
es
sbbb
add
and
push
fld
lret
jbe
push
xchg
mov
mov
pop
or
xchg
idivl
adc
lret
call
popa
hlt
cmpsb
or
pop
xor
or
push
push
or
lret
int
or
sub
sbb
es
or
mul
in
jmp
ds
or
into
aad
roll
xor
and
push
xor
or
out
fdivp
in
loope
or
or
cmp
pop
int3
or
fmul
iret
fcmovne
sub
sbb
sub
sbb
daa
in
or
clc
call
adc
add
inc
adc
aas
aam
rolb
xlat
roll
xor
and
and
and
pop
hlt
or
lock
out
jecxz
or
cltd
mov
jp
inc
dec
jge
dec
stos
or
mov
jbe
insl
pop
jns
xchg
or
mov
push
or
push
xorl
jb
bound
jne
jno
mov
mov
xchg
xchg
pop
dec
dec
jnp
inc
lods
or
cmpsl
insb
or
imul
xchg
or
mov
adcb
jg
or
lahf
je
fs
jae
outsl
pop
call
in
lods
or
addr16
xlat
sbb
cltd
or
and
xor
arpl
or
out
movaps
cmp
xor
es
loopne
ds
in
pushf
xor
imul
xor
imul
xor
sub
fwait
loop
push
adc
inc
movsl
sbb
cmp
or
or
adc
dec
outsb
or
pushf
inc
adc
addr16
mov
dec
movsl
mov
outsb
cltd
xchg
fstps
test
dec
cli
insb
add
dec
xchg
daa
lcall
rcrb
pop
or
mov
xor
or
cmpsb
imul
sub
hlt
xor
inc
sti
sub
aaa
jg
push
xor
cltd
addl
or
cmp
int
xor
sub
lret
int
aad
adc
imul
push
jae
adc
cmp
cmp
imul
sub
stos
cltd
test
lcall
cmpsb
sub
lods
dec
adc
sbb
sbb
ss
sub
cmp
jl
sub
sbb
outsb
ja
mov
lds
sub
push
sub
inc
push
mov
js
dec
xchg
outsb
inc
push
pop
xchg
jo
push
cmp
outsb
xor
push
dec
pop
cs
xor
adc
out
ss
dec
pcmpeqb
cs
mov
sahf
or
xor
sub
dec
push
lea
test
sahf
das
in
cmp
jge
mov
or
xchg
adc
inc
and
and
es
js
es
add
sub
mov
adc
push
xor
inc
adc
es
pop
int3
sub
dec
cmp
ss
inc
or
jnp
push
and
lcall
std
shrb
xor
or
std
mulb
inc
dec
jns
aam
cwtl
push
jae
pusha
xor
fsubr
mov
inc
sub
ds
jns
inc
in
push
std
test
fsub
and
aam
call
daa
or
xor
push
aad
inc
inc
aad
fdivl
mov
push
mov
aad
popf
cmp
or
ret
sbb
adc
inc
cs
push
sbb
rcrb
push
inc
lret
jecxz
and
xor
stc
and
push
xchg
repnz
fsubl
or
add
add
push
xor
adc
pop
stc
pop
or
push
mov
and
push
ds
inc
push
dec
jno
or
lahf
fdivl
dec
shrl
imul
shlb
sbb
ss
ss
cs
or
rcr
popa
sub
sub
sub
adc
xor
ss
or
icebp
es
sub
adc
sub
push
jae
es
imul
fsubrl
push
add
dec
outsb
in
mov
cmpsl
add
fstps
lret
inc
out
inc
or
sbb
xchg
add
xchg
dec
cltd
push
push
adc
sub
or
push
or
daa
and
push
dec
jp
xchg
and
sub
jg
jno
cmp
lods
jno
sub
in
push
push
and
ds
mov
and
out
imul
mov
rcrl
es
cmp
push
mov
inc
push
sbb
mov
and
aam
push
sub
xchg
and
pop
sbb
jl
bswap
fsubl
sbb
cmp
or
test
sbb
push
sti
aad
lock
cmp
xor
and
sbb
ds
ss
or
sbb
adc
and
or
xor
inc
sbb
sub
or
sub
cmp
xor
inc
or
das
pop
aas
pop
aaa
daa
pop
or
xor
xor
inc
sbb
sub
or
mov
ret
scas
sahf
mov
or
movsb
test
nop
mov
rcrb
stos
fwait
mov
or
mov
xchg
lea
movsl
test
xchg
mov
rcrl
push
jp
jb
orb
outsb
pop
jle
jbe
inc
fisttpll
or
inc
push
jo
or
dec
imul
push
jae
orl
or
ja
inc
dec
insl
pop
or
jne
inc
push
jno
or
lret
or
shl
loop
into
out
fimuls
int3
and
cld
aam
hlt
in
shl
loopne
fmuls
clc
call
call
or
out
shl
jecxz
fisttpl
sti
jmp
int
aad
cmc
in
shl
loope
stc
jmp
or
push
cs
xor
push
es
or
sub
or
pop
das
aas
adc
xor
pop
daa
aaa
pop
or
sub
or
and
inc
adc
xor
or
sub
or
adc
xor
and
sub
or
push
or
outsb
jle
bound
or
jbe
dec
pop
imul
pop
outsl
jg
arpl
or
ja
dec
pop
insb
jl
push
pusha
jo
push
fs
or
js
dec
pop
insl
jge
push
popa
jno
push
gs
or
jns
mov
sahf
scas
mov
or
fwait
stos
mov
mov
or
pushf
lods
mov
rclb
mov
mov
rcll
test
ljmp
shl
repnz
out
iret
fucomip
decl
shl
repz
out
or
jmp
lret
int3
fsubr
cld
or
loopne
add
in
les
fsubr
clc
enter
std
or
loope
add
in
lds
or
adc
sbb
or
sub
xor
cmp
dec
inc
push
dec
dec
dec
or
bound
icebp
test
or
inc
mov
sahf
add
or
ret
lret
fcmovu
loop
or
out
repnz
incb
or
movlps
sbb
and
or
das
xor
cmp
inc
pop
or
push
push
pop
pop
arpl
imul
jnp
addl
xchg
xchg
fwait
lahf
mov
mov
mov
iret
rcl
fcmovnu
jecxz
jmp
out
repz
or
lret
or
or
sbb
and
sub
or
cmp
add
dec
push
or
pusha
fs
js
addb
or
lods
mov
mov
mov
rorb
aam
fsub
in
in
lock
clc
cld
add
enter
adc
sub
cmp
push
or
pop
popa
imul
addl
cltd
popf
mov
or
mov
rorl
aad
fucom
in
in
icebp
dec
cmc
stc
std
add
leave
push
movsl
mov
sbb
dec
or
or
dec
int3
push
sbb
xchg
cmpsb
xchg
add
negb
cmp
fistps
jno
pop
sbb
sbb
js
pop
pop
or
popf
test
push
sbb
fcompl
fisttps
loop
sbb
pop
out
out
test
fdivp
push
fisubrl
daa
push
in
ret
or
ficompl
fnsave
or
es
mov
mov
pop
pop
rcrb
fistps
sbb
pop
jecxz
jle
popf
fimuls
jbe,pt
mov
test
lock
jne
incb
rcrb
push
sbb
and
adc
pop
pushf
leave
or
xchg
or
cwtl
push
adc
arpl
lea
jo
push
or
adc
out
ficomps
arpl
paddusw
decb
sbb
xchg
leave
cmp
dec
pop
movsl
insl
pop
xor
and
add
movsl
out
lock
out
fld
andl
scas
push
iret
or
adc
pop
dec
int
push
cmp
in
pop
movsb
es
or
inc
repnz
and
lea
cmp
xchg
or
inc
or
mov
jns
sub
iret
push
cmp
outsb
lret
and
sti
xchg
or
pop
mov
rclb
pop
ja
pop
ljmp
ljmp
xor
and
add
dec
and
andb
and
cmp
movsl
fsubs
inc
pop
and
int
out
jle
lret
aas
or
fmull
dec
mov
jae
xor
push
and
or
sbb
xor
xchg
and
pop
std
dec
mov
jle
xor
cwtl
rcrl
add
bound
or
ja
aaa
push
sarb
testb
jo
mov
pop
cmp
sub
loope
or
int3
jbe
or
in
dec
sbb
push
bound
push
mov
inc
cmpsl
mov
dec
cmp
adc
lds
jbe
shll
mov
stc
or
aas
cmp
jl
mov
pop
dec
or
lods
xor
scas
adc
lea
and
and
loop
ret
pop
pop
in
mov
push
arpl
imul
mov
call
or
or
jecxz
int
mov
push
inc
sti
mov
sub
or
or
mov
mov
or
and
adc
push
mov
ret
or
pop
jae
pushf
add
cmp
cmp
enter
movsb
inc
or
or
cmp
rorb
push
or
adcl
or
sbb
dec
or
push
pop
mov
push
cmp
mov
jl
ja
jecxz
imulb
sub
js
inc
dec
bound
xor
pop
push
addr16
or
ss
xor
call
pop
int
pusha
push
sbb
or
mov
inc
lret
stc
mov
ret
xor
jbe
lret
jg
cmc
jmp
jno
xchg
or
or
popl
mov
or
add
fsubs
das
cltd
movsb
shll
xor
sub
std
lea
leave
dec
adc
xlat
mov
mov
iret
imul
mov
xchg
xchg
mov
mov
arpl
xchg
and
in
cmpsl
sarb
mov
aam
insb
mov
dec
pushf
and
cmp
mov
sti
sarl
and
mov
jle
cmp
xchg
fldl
clc
lds
jecxz
mov
or
mov
rorb
dec
inc
sbb
fstps
pop
cli
lds
pop
inc
out
xor
lods
movsl
push
push
or
cld
nop
ljmp
push
xchg
ret
outsl
or
or
clc
js
xchg
dec
pop
mov
adc
jns
scas
mov
movsb
mulb
test
std
ja,pt
mov
lret
mov
loopne
push
and
xchg
or
movsb
addr16
out
mov
inc
fsts
out
cmpsb
into
jecxz
dec
stos
or
ret
aam
call
lock
jg
sti
or
inc
sub
add
aas
mov
push
stos
lcall
and
or
rcl
mov
js
sub
in
into
adc
mov
int
mov
and
dec
dec
inc
mov
lret
mov
or
jl
bound
jnp
or
test
ljmp
pop
bound
and
ds
fbld
jmp
or
inc
mov
int3
add
push
fadds
fcmovnu
or
je
mov
shr
std
mov
inc
leave
ja
adc
xchg
lods
mov
neg
mov
repnz
adc
lds
mov
jge
or
rcrl
out
rclb
cmp
pop
cmp
das
aam
xchg
fstpt
lods
or
mov
push
push
add
or
outsl
sbb
adc
pop
adc
fmull
inc
scas
lea
or
insb
adc
mov
and
push
push
xchg
or
or
in
es
daa
xor
pop
sbb
inc
daa
cld
in
pop
push
and
jle
daa
fimuls
push
dec
fiadds
shll
roll
sbb
adc
sbb
jo
dec
out
ljmp
aad
lahf
mov
mov
cltd
cmp
dec
dec
shll
insb
es
call
daa
dec
mov
popf
push
mov
sbb
jp
dec
sub
rorl
lret
jge
inc
or
dec
or
adc
sbb
movsl
inc
lcall
xor
xor
add
dec
xchg
xor
adc
fnstsw
sbb
imul
add
fisttps
push
sbbb
pop
or
push
push
or
inc
dec
push
or
mov
sub
cmp
or
cmp
lcall
pop
push
dec
xor
leave
jle
dec
inc
push
sbb
mov
sbb
inc
pop
pop
cmp
cs
xor
push
or
test
fwait
sub
mov
insl
ss
sub
inc
mov
cmp
pop
or
push
or
push
sbb
and
dec
sub
jl
sub
punpckhdq
mov
sbb
and
or
outsb
aam
adc
inc
rcrb
or
adc
sarb
push
jbe
push
cmp
sbb
push
sub
xchg
inc
push
pop
adc
adcb
mov
adc
repz
scas
pop
jge
test
pop
dec
mov
push
push
mov
imul
stos
adc
jbe
scas
and
repz
mov
and
lods
or
sub
dec
es
adc
adc
cmp
sbb
stc
xor
or
ss
adc
inc
xchg
fldl
adc
cs
jecxz
cmp
push
sbb
push
jg
loopne
adc
popa
cld
push
cltd
push
xor
clc
into
imul
mov
repz
xor
push
insb
and
daa
xchg
sub
test
adc
adc
lahf
inc
sbb
add
adc
insb
and
sub
das
push
mov
mov
sub
mov
adc
push
nop
and
push
cltd
and
and
mov
adc
shrb
pop
stos
xlat
adc
sbb
push
push
pmullw
push
pop
sbb
xchg
mov
mov
cmp
xchg
adc
lahf
mov
and
das
adc
cmp
outsb
pop
adc
xchg
xchg
xchg
sbb
sbb
and
mov
sub
das
repz
inc
push
inc
pop
test
cmp
push
mov
pop
push
adc
and
mov
adc
xchg
outsb
cwtl
adc
push
cmc
lcall
adc
and
add
adc
inc
cs
outsb
xchg
xchg
sbb
cwtl
dec
sbb
fsts
pop
sbb
sbb
mov
data16
xor
cld
lret
cld
fstl
mov
sbb
sub
mov
jno
into
pop
lret
in
sbb
push
in
sbb
lret
mov
gs
scas
inc
xchg
push
sahf
lret
iret
or
imul
xor
or
lea
sub
or
mov
mov
sbbb
dec
cmp
ret
and
sbb
jo
stc
cli
inc
and
xor
xor
daa
pop
dec
and
mov
ds
testl
cmp
xchg
inc
stc
mov
popf
sub
adc
xchg
sbb
fsts
jns
or
das
push
stos
and
push
pop
xchg
xchg
and
sub
mov
sub
or
inc
mov
pushf
cmpsb
popa
sbb
lds
adc
ficompl
addr16
and
loop
stc
lds
dec
xor
push
push
leave
and
xchg
jb
nop
cmp
je
daa
xor
sahf
ficoml
mov
fst
shll
ds
and
or
cmp
shrl
xchg
sub
and
mov
push
push
loopne
cmp
mov
or
or
outsl
stos
add
push
ss
push
or
imul
ss
cs
sbb
adc
out
stos
xor
cmp
leave
lret
sbb
inc
shrb
in
lods
sub
aam
xchg
cs
or
fbld
test
sbb
pop
outsb
pop
inc
repnz
mov
fnstsw
rcrb
sahf
out
inc
xor
adc
bound
or
fstl
lcall
xchg
ficoml
ret
xchg
sahf
adc
push
xchg
push
cmpsb
addr16
out
inc
push
adc
push
push
arpl
mov
sub
push
testl
inc
imul
ds
popf
mov
iret
adc
adc
xchg
and
adc
xchg
mov
push
fldcw
dec
pop
out
cmpsb
in
sbb
sahf
arpl
in
cmpsb
push
adc
adcl
inc
add
mov
mov
or
mov
imul
dec
or
outsb
push
add
xchg
sub
outsb
inc
dec
lods
lret
stc
sub
outsb
lds
or
sub
xchg
roll
aaa
jge
adc
adc
repnz
push
sub
or
add
pushf
mov
movsl
xor
push
push
push
or
add
push
lods
fdivrl
push
push
push
xchg
sbbb
adc
and
in
clc
xchg
or
sub
mov
in
andb
call
push
arpl
push
outsb
mov
push
dec
int3
sub
icebp
lea
push
cmp
mov
cmp
and
and
jmp
lcall
es
fldl
adc
dec
sub
imul
arpl
pop
ficoms
stos
bound
push
mov
in
out
sbb
lods
or
sbb
sbb
or
rcr
out
push
push
jecxz,pt
and
adc
out
outsb
call
ficoml
jo
push
es
pop
sbb
cmp
mov
shrl
pop
or
push
fisttpl
ljmp
sub
jbe
or
adc
cli
repz
or
bound
mov
aad
add
outsb
cs
dec
or
cs
xchg
sbb
dec
mov
popf
push
push
xchg
dec
stos
rcll
rorb
mov
mov
push
jp
dec
push
lahf
adc
jp
rclb
cmp
sub
mov
adc
mov
push
test
movsl
jbe
push
aad
push
xchg
cli
fistpll
ljmp
shrb
pop
mov
and
mov
mov
adc
out
or
cwtl
and
xlat
adc
pop
sbb
bound
hlt
mov
push
dec
fldl
sbb
ss
fdivrs
sbb
fbld
pop
xchg
ss
cmpsb
cmpsl
pop
push
sub
bound
rcrb
gs
mov
das
lcall
push
mov
and
pop
fisubrs
mov
mov
dec
loop
or
pop
sahf
lds
enter
movsl
cmpsb
and
out
xor
stos
loop
xchg
xor
outsb
jne
xor
mov
fs
and
lret
rdpmc
inc
pop
ret
imul
push
xor
mov
pop
fcomp
push
push
std
cmp
xor
push
pop
sub
rcr
pop
dec
add
jne
jl
and
adc
sub
rolb
test
dec
or
mov
inc
ficompl
jb
pop
mov
push
adc
or
adc
sbb
xchg
pop
mov
push
and
xchg
popa
mov
xor
sub
adc
mov
xlat
inc
notl
lcall
adc
daa
bound
sahf
cmp
mov
sub
xlat
pusha
inc
dec
inc
sbb
test
mov
sahf
imul
jg
lret
shrl
subl
aas
add
repz
inc
sbb
subl
adc
cmp
cmp
jb
into
sbb
hlt
in
cmp
int
fucom
jmp
sub
stos
jg
fisttpll
jle
scas
bound
cld
sbb
ret
or
jo
popa
adc
daa
imul
sub
lcall
int3
nop
fstpl
pop
sub
movsb
shrb
cmp
push
or
push
and
pop
adc
sub
dec
das
xor
adc
ficomps
or
out
and
dec
pop
pop
lahf
push
xor
add
in
or
fs
cmpsb
push
mov
cwtl
in
mov
xchg
push
inc
dec
test
dec
push
xchg
iret
aaa
xlat
or
sub
adc
fidivrl
jmp
mov
loop
sub
or
aam
insl
adc
add
push
cmp
or
sub
ret
pop
es
pop
and
inc
sbb
arpl
das
orb
sbb
leave
mov
push
push
int3
or
dec
mov
fstl
sbb
roll
xor
push
inc
push
cmpsb
arpl
cmpsl
push
cmp
and
icebp
sub
cmp
enter
mov
sub
jns
sub
jmp
and
imul
dec
outsb
add
aas
dec
adc
lret
ds
cmp
sbb
cmp
sahf
or
xor
je
pop
pop
jg
pop
jo
adc
adc
sbb
mov
popf
cwtl
xor
imul
sbb
notl
jp
out
das
mov
adc
fisubs
dec
in
or
ds
stos
dec
sbb
iret
cmpsl
mov
or
rorl
adc
xor
pop
cs
cmp
pop
pop
int
loope
jg
pushf
jo
sub
add
sbb
push
push
in
pop
lahf
shl
addr16
push
shll
adc
push
cmp
sbb
xchg
sub
jno
sub
js
mov
push
pop
cmpsb
loop
and
cmpsl
add
mov
mov
movsl
das
es
dec
fsts
push
adc
push
fisubs
ss
and
push
mov
aad
adc
xchg
jge
push
sub
push
jnp
pop
adc
call
andb
mov
mov
cmp
ss
fs
add
pop
das
pusha
pop
inc
cwtl
daa
stos
outsl
test
or
and
jns
paddusb
lods
dec
push
sbb
push
stos
push
cltd
and
push
push
push
and
sub
push
cmpsb
dec
cmp
xor
pop
push
adc
notl
cmp
mov
xchg
lds
sub
mov
cmpsl
popf
cs
cmp
cmp
int3
inc
lds
mov
dec
and
push
and
into
jg
lods
sbb
inc
int3
inc
or
jae
ret
push
loop
into
dec
and
aad
xchg
call
xor
and
xor
pop
movsl
scas
push
add
pusha
scas
paddsb
adc
xor
mov
rcrb
push
mov
loop
fnstcw
push
cmpsb
and
xlat
sbb
cmp
sub
stos
das
or
shlb
sbb
jae
jnp
inc
ljmp
sbb
jg
mov
adc
fnstenv
dec
pop
bound
rclb
pop
in
or
sub
imul
push
and
sbb
add
ret
fs
es
or
sub
pusha
out
cmp
out
mov
or
push
jb
or
cmp
sub
cmp
cmp
sbb
xchg
cmp
push
sub
and
xorl
daa
fnstsw
loop
bound
lcall
sbb
inc
and
nop
fcomps
adc
push
or
out
lcall
fcompl
mov
or
jge
sub
jecxz
in
cld
jl
adc
pop
or
push
jge
xchg
cli
sbb
out
sub
dec
arpl
sbb
xor
out
cltd
mov
in
sahf
arpl
das
insb
pop
cmp
mov
xor
das
dec
sub
xchg
sub
es
adc
ficomps
pop
inc
mov
pushf
sub
pop
mov
dec
pop
pop
sbb
or
fnsave
xor
daa
adc
pushf
xor
push
push
dec
cltd
xchg
dec
push
mov
or
cmp
loopne
xor
sbb
insb
orl
xchg
sub
lcall
ds
pop
push
repz
sub
adc
loopne
cmp
pusha
cmpsb
add
das
adc
adc
push
psubsb
xchg
fstp
fistps
xor
sbb
jae
not
negl
xor
adc
lcall
enter
in
mov
and
cmp
arpl
push
adc
jno
subb
xchg
push
lret
mov
adc
sbb
adc
sub
btc
repz
movsb
push
dec
movsl
loop
adc
aas
sub
aad
cmp
cmp
fs
push
arpl
sbb
xchg
sbb
pmaxub
mov
call
dec
dec
sub
stos
pop
fsubp
mov
sahf
daa
ffree
xor
fsubrl
popf
xchg
sub
add
mov
jmp
push
push
and
or
push
scas
cmp
ljmp
data16
mov
mov
out
inc
jno
loop
vmovddup
adc
cmp
cmp
and
xchg
aaa
dec
pop
push
sub
int
cs
push
pop
dec
test
mov
sub
sub
addr16
int3
jns
sbb
dec
test
sbb
rcr
pop
adc
mov
mov
outsl
push
dec
jbe
test
lret
int
adc
push
adc
cltd
xchg
int3
jle,pt
pop
and
pop
push
sbb
pushw
jno
sbb
pop
sbb
sub
aas
sbb
pop
and
out
pavgw
out
mov
pop
addr16
mov
addr16
sub
adc
stos
push
or
adc
adc
pop
aad
push
iret
js
cmp
inc
jmp
lea
or
or
loope
fistps
rcr
pop
push
int3
cltd
push
movsl
fidivrl
scas
mov
lahf
sub
arpl
pop
adc
mov
pop
xor
fisubs
dec
repz
imul
push
int
adc
xchg
mov
sahf
xchg
push
push
xchg
sbb
bound
inc
cltd
push
mov
cmpsl
test
xor
push
fisttpl
mov
loop
mov
es
cltd
mov
jmp
push
pop
add
mov
sbb
mov
push
xor
cmpsl
cltd
stc
xchg
pusha
and
mov
mov
arpl
ficompl
dec
loope
lahf
imulb
mov
or
push
pop
mov
shl
cli
fstpl
das
adc
lods
pushf
stos
fcoms
and
adc
sub
sbb
push
lods
loop
push
xchg
adc
js
repnz
loope
repnz
sbb
jno
mov
or
jg
testl
lcall
mov
mov
adc
and
mov
std
ljmp
xchg
sub
pop
stos
xchg
mov
lahf
jmp
hlt
fcmovbe
cltd
sahf
out
sbb
aaa
mov
shl
or
sub
jg
cwtl
pushf
cmp
ret
sbbl
int3
test
nop
dec
push
pop
dec
jmp
mov
icebp
addr16
sbb
mov
adc
in
sti
call
xchg
fldl2t
mov
and
mov
sbb
inc
movsb
mov
or
sbb
loope
and
mov
dec
push
in
pop
adc
leave
mov
mov
and
adc
shll
adc
clc
fildl
dec
daa
aas
cs
daa
xchg
or
push
push
data16
outsb
inc
bound
aam
or
push
and
sbb
and
pop
and
sub
out
jle
or
mov
push
push
pop
or
out
insl
jmp
arpl
add
and
cs
fsubl
push
je
testb
push
dec
pushf
adc
loop
push
and
or
icebp
dec
sbb
adc
out
popa
pusha
ret
push
add
dec
add
iret
dec
mov
mov
pop
mov
push
mov
cs
adc
sbb
and
or
fcmovne
lret
fistl
out
sub
and
es
stc
lret
rcrb
stc
insl
int
pop
dec
int
adc
mov
dec
push
mov
jmp
mov
es
and
or
ret
mov
dec
cmp
cmp
das
mov
dec
lcall
nop
xor
out
test
or
in
xchg
mov
push
dec
hlt
lcall
mov
bound
push
cld
and
sbbl
adc
cmc
mov
test
xor
frstor
lds
xor
sbb
or
dec
clc
xchg
stc
xchg
push
rcrb
pop
mul
push
pop
add
fidivs
lcall
mov
ds
push
push
sub
scas
dec
jbe
mov
jp
adc
dec
iret
rorl
xor
or
call
clc
dec
push
or
lret
xchg
cmp
sub
lods
int3
es
sub
or
iret
popf
rorb
mov
cs
into
dec
adc
adc
sbb
xchg
adc
ds
jmp
sub
lock
ds
push
sahf
out
arpl
rorl
adc
adc
mov
addb
jp
outsb
dec
ss
xor
or
and
mov
rorl
pop
and
and
sbb
mov
push
roll
sbb
inc
or
push
mov
adc
mov
cmp
xor
adc
rcr
xor
outsl
or
aaa
dec
sbb
xchg
jno
sub
adc
shrl
rcrb
cmp
mov
mov
sub
data16
push
sbb
xor
pmaxub
xor
sub
add
sbb
mov
call
adc
or
push
xchg
sbb
unpcklps
outsb
cmp
setns
sbb
or
mull
inc
popf
cmp
or
in
xor
inc
xchg
xor
fisubrs
push
jbe
xchg
shrb
sbb
lock
ret
sbb
sbb
ss
sbb
lahf
cmp
sbb
das
xor
inc
jp
loopne
sub
shrb
sbb
femms
pop
js
push
push
shrb
and
and
sbb
sbb
mov
dec
inc
cmp
sbb
xchg
sbb
cs
push
sbb
adc
xchg
insl
sub
sbb
sbb
and
int
sub
outsl
sub
mov
adc
out
inc
notb
cmp
inc
jo
data16
gs
sbb
xorl
push
invd
fnstsw
cmp
lahf
cltd
xor
jae
cmp
adc
palignr
sub
or
jo
push
xchg
inc
xchg
xchg
push
cmp
jne
xor
mull
and
aam
xor
dec
sbb
jno
cs
es
cs
xor
add
and
xor
and
cltd
push
cmp
cmpps
ret
and
sbb
sbb
adc
sbb
sbb
sbb
and
rorl
fldcw
fwait
push
mov
cltd
push
cmp
or
daa
cmp
dec
mov
or
ds
sbb
pop
push
push
psllw
adc
shlb
push
data16
sbb
sub
cmp
rcr
sbb
das
xor
add
xchg
sbb
adc
or
stos
push
xor
aam
push
and
or
repnz
xchg
inc
ss
gs
mov
cmp
adc
push
cmp
repnz
fisubrs
push
sbb
mov
push
pop
mov
and
out
jl
sbb
sub
icebp
or
xor
mov
gs
popf
and
xor
adc
xchg
and
adc
mov
fsubs
push
xor
fistpll
ds
or
cmp
pop
push
and
adc
push
sbb
insb
adc
cmp
push
adc
js
inc
and
push
sbb
sub
mov
aam
cmp
sbb
movaps
push
int3
ret
cmp
mov
sbb
cmpsl
sbb
jne
divl
push
push
rdmsr
pusha
adc
add
jne,pn
xor
fidivs
nopl
mov
sbb
add
pusha
push
or
pusha
aad
cmp
aad
sbb
das
inc
push
add
sahf
xchg
push
push
sub
invd
jo
or
aad
and
aaa
mov
inc
cpuid
adc
decl
inc
push
in
push
mov
arpl
fcomps
rcrb
push
sub
mov
jno
outsl
cmp
fiadds
cltd
cmp
adc
or
push
and
mov
fnstenv
and
push
aam
push
and
dec
sub
in
loopne
sbb
push
jmp
cmp
aaa
mov
add
out
cld
bound
xchg
sahf
mov
punpckhdq
push
sbb
or
xchg
insl
add
rorb
mov
std
or
push
or
cmp
xor
fidivrs
andps
push
orb
cmp
sub
xchg
adc
inc
cmp
or
inc
sub
pushf
loopne
or
sub
and
outsb
adc
mov
and
inc
aam
or
pop
mov
arpl
lock
sbb
shlb
ficomps
push
push
sub
es
insl
cmp
mov
xor
push
xchg
sub
cld
lods
inc
xadd
inc
pop
pmuludq
xor
and
and
es
jge
push
mov
or
and
and
sub
cs
shrb
jb
pop
xor
xor
and
add
jae
outsb
cmp
lods
dec
or
cmpsb
xor
movlps
jb
cmp
lret
mov
pop
sbb
test
stos
cmp
outsb
ret
sbbl
cmp
cltd
ret
sub
sub
xchg
dec
lret
xor
adc
add
hlt
cld
xchg
mov
push
add
push
inc
cmp
cmp
sbb
into
clc
pop
or
cmp
pop
or
sbb
sub
je
add
cmp
push
cmp
movl
dec
and
cmp
lahf
sbb
adc
xor
dec
outsl
xor
xor
iret
cmp
and
xcrypt-ecb
cmpsl
or
push
insb
xor
das
mov
fdivp
sub
adc
movsl
push
cmp
outsb
and
jp
loop
sub
sbb
cmp
adc
shrb
cmp
in
ss
push
dec
pop
js
or
adc
fwait
sbb
push
pop
xchg
xchg
add
adc
and
rcr
and
push
inc
cs
sub
cmp
outsb
cmp
xchg
xchg
and
xchg
repz
push
cmp
sbb
pop
sub
in
inc
mov
lcall
sbb
in
adc
adc
sbb
nop
push
push
jo
and
fistps
or
pop
inc
cmp
stos
fnsave
aam
sbb
xor
mov
and
js
orb
xor
jnp
xor
jae
outsb
cmp
adc
inc
inc
sbb
adc
adc
inc
adc
adc
inc
adc
adc
in
adc
out
sbb
xchg
or
mov
insb
jbe
xor
shlb
sbb
fcoml
sub
int
xor
push
sbb
dec
cmp
out
outsb
or
push
lods
pop
lret
mov
andb
mov
add
sbb
fwait
pop
subb
loop
lods
xor
mov
cmp
and
sarb
das
inc
add
or
xchg
sub
sbb
and
pop
in
movlps
ret
adc
sbb
ds
inc
ret
xchg
pop
and
xchg
sub
jo
push
adc
outsb
inc
cmp
lods
fbstp
lret
flds
call
and
pop
and
fldcw
mov
and
es
inc
mov
fwait
adc
or
and
into
inc
mov
cmp
rorb
fnstcw
fwait
xor
rcrb
out
sbb
cvtpi2ps
std
sub
sbb
jne
and
cmpsb
xor
or
sbb
pop
jl
aaa
aas
inc
adc
push
push
add
cmp
adc
adc
mov
push
adc
lods
push
and
pop
insl
jnp
xchg
adc
adc
in
and
cmpsl
cmpsb
test
inc
das
cmpsb
xor
sbb
mov
or
sbb
lods
ss
filds
push
or
inc
in
push
sbb
dec
sub
lcall
xchg
adc
fisubrl
popf
lods
cmp
xchg
or
jo
in
adc
mov
sub
cs
es
xor
sbb
xorb
adc
inc
int3
cmp
jecxz
cmp
xchg
sub
or
or
stos
pop
call
push
adc
mov
push
jo
ret
sbb
sub
ficoml
ret
cs
jecxz
or
and
imul
sub
push
ja
scas
cmpsb
push
inc
js
inc
ret
or
sbb
lahf
pushf
cmp
int3
pushf
adc
and
cmpsb
adc
and
push
cmp
outsb
lret
sbb
or
push
and
adc
push
sub
sbbl
adc
xor
xor
mov
cmpsb
xor
xchg
fwait
xor
lret
or
mov
pusha
adc
push
sub
into
mov
pop
sbb
add
sbb
int3
sub
sub
xchg
push
xchg
fwait
shrb
inc
imul
cmp
mov
std
or
inc
push
fdivrl
outsl
sbb
xor
aam
cmp
sbb
decl
insb
mov
dec
sbb
je
pop
xor
and
sbb
cmp
xchg
and
xor
push
xchg
jo
xor
repnz
fbstp
xor
std
and
mov
enter
outsb
push
dec
sbb
adc
xchg
or
push
jnp
shlb
and
pop
das
or
push
ret
es
jecxz
sbb
xor
sarl
adc
pop
xchg
or
adc
and
lods
mov
sbb
sbb
fstl
arpl
cmpsb
ds
popf
sub
dec
inc
cmp
fwait
popf
sbb
fwait
rcr
outsb
pop
cmp
sub
pushf
inc
fbld
shrb
outsb
ljmp
adc
jo
cmc
mov
outsb
jnp
or
outsb
add
sub
mov
popf
sbb
fwait
pushf
sbb
orb
mov
inc
add
push
faddl
inc
in
xchg
push
push
and
int
and
repnz
xor
in
jbe
jnp
in
shlb
das
xor
cmp
xor
fidivrs
push
jl
outsb
jle
dec
fiadds
cmp
jb
scas
sbb
push
cmp
sbb
dec
and
adc
and
push
or
fsubrl
and
sarb
fwait
sbb
lahf
inc
push
jmp
iret
sub
testl
lods
pop
cmp
xor
sbb
cmp
adc
mov
fiadds
or
or
mov
shlb
xchg
or
xchg
push
adc
xor
lahf
sub
jbe
pop
adc
inc
and
fwait
inc
out
sub
and
divl
cmp
sub
out
push
das
mov
mov
cmpsb
jnp
adc
adc
insl
cmp
cmpsb
or
lret
sub
sub
xor
ficoms
xchg
fcomps
dec
sub
outsb
or
lahf
sbb
mov
jmp
and
loopne
mov
sarb
inc
lret
rolb
sahf
dec
or
dec
psllq
push
mov
or
push
sahf
sub
inc
in
dec
push
fisubrs
cmp
outsb
push
cmp
inc
mov
rcrl
fimull
and
and
sbb
sub
scas
and
sbb
insl
jnp
cmpsb
sub
xchg
or
push
jbe
mov
pusha
adc
or
add
aam
cs
xlat
addl
sbb
adc
out
sub
pop
lods
sbb
aas
push
mov
xchg
push
gs
sbb
outsb
or
ljmp
rcrb
pop
data16
and
int
sub
push
int
sub
pop
out
dec
inc
cmp
out
cmp
sahf
pushw
adc
xor
sub
mov
ret
cs
jecxz
sub
and
adc
cmp
cs
ss
inc
inc
in
ds
fisttpl
mov
mov
mov
mov
push
xor
das
push
std
mov
ret
ret
fisubs
push
adc
imul
insl
in
adc
lahf
ds
pop
cmp
mov
cmp
cmp
cmp
jns
sbb
inc
call
cmp
jecxz
push
dec
es
cmp
lods
inc
adc
inc
adc
adc
mov
fisubs
or
and
mov
in
pusha
or
mov
fidivrs
dec
sbb
jns
adc
sbb
adc
insb
and
mov
pop
or
xor
sub
lds
cmp
lcall
lahf
fwait
lea
adc
sti
sub
mov
push
cmp
sbb
ja
outsb
xor
cmp
xor
in
repnz
xor
add
adc
popf
pusha
andb
jbe
pop
outsb
sbb
sub
movsl
rclb
outsb
sbb
jb
xchg
pop
xchg
jmp
ret
mov
rclb
mov
push
xor
push
mov
push
push
mov
adc
test
xchg
or
int
sbb
dec
adc
xchg
into
sbb
dec
adc
xchg
rcrl
test
insb
sub
push
adc
xchg
rcrb
mov
insb
cmp
xchg
outsb
inc
xchg
rcrl
pushf
cmp
and
push
fwait
loopne
adc
lods
sub
mov
adc
rolb
je
mov
sub
daa
sub
stos
sub
cs
mov
pushl
cmp
mov
incl
decl
call
fwait
sub
pop
sub
mov
ljmp
pushl
pushl
mov
incl
mov
adc
xchg
pop
xchg
dec
mov
push
popa
out
xor
imul
sbb
es
rorl
popa
jecxz
and
and
mov
in
fwait
js
inc
mov
push
pop
or
shrb
popa
mov
pusha
and
cmp
cmp
sbb
loopne
jnp
adc
fs
fs
sbb
lods
push
or
adc
adc
adc
xor
cmp
push
push
inc
lret
and
sub
push
lcall
and
fwait
and
and
sub
rcrl
ret
rorl
jl
sbb
mov
out
sub
lea
in
je
xchg
scas
adc
jbe
je
push
jbe
and
dec
push
and
adc
insb
cwtl
mov
pop
sbb
outsb
pop
xchg
int
pop
sbb
push
xchg
popa
sbb
out
nop
outsb
dec
xchg
ljmp
adc
popa
mov
sbb
pop
push
lds
popa
es
sub
out
or
sahf
sub
inc
inc
outsb
or
inc
and
jne
mov
ret
ret
ficomps
sbb
pop
sub
out
sub
stc
adc
fwait
mov
fwait
adc
ss
cmp
cli
lods
dec
inc
mov
sub
scas
or
cmp
sti
or
or
loop
cmp
push
cmp
adc
mov
ficomps
xchg
pop
sbb
loopne
or
mov
jae
or
loope
fisubrs
push
push
xor
xor
xor
cmp
sbb
adc
cmp
add
test
cmp
mov
xchg
nop
push
adc
insl
and
xchg
push
sbb
sbb
orb
and
push
ficompl
xchg
and
sub
mov
jo,pn
xor
out
dec
cs
xor
cmp
ds
outsb
inc
cmp
out
xor
xlat
fstpt
psrad
ret
adc
sbb
dec
push
inc
aad
or
std
or
and
mov
out
or
mov
adc
sbb
inc
stc
cmpsb
mov
xchg
adc
push
mov
fwait
sbb
and
outsb
push
and
rcll
ds
push
cmp
mov
pop
sub
adc
mov
sub
fs
mov
xchg
lock
adc
mov
inc
sbb
push
jae
scas
xor
sub
dec
jle
mov
daa
push
loopne
jnp
adc
cmp
inc
fwait
and
cld
xor
std
adcb
testb
push
xor
or
outsb
push
rol
push
xchg
ret
ret
cmp
mov
push
rcr
out
adc
insl
jnp
cmpsb
xor
notb
mov
or
push
push
or
enter
mov
sbb
mov
adc
sbb
int
fmull
and
and
arpl
lods
sub
adc
cmp
push
push
inc
lret
outsb
dec
sbb
sub
int3
out
sub
arpl
sub
push
sub
shrb
push
sbb
ret
sub
sub
sbb
das
push
or
and
insb
es
cmp
sub
mov
jo
xor
es
or
jnp
and
cmp
pusha
cmp
cld
divl
outsb
or
inc
jae
cmp
insl
mov
lahf
sbb
mov
xchg
sbb
or
cmpsb
cltd
pop
pop
ret
adc
repz
or
and
adc
je
fbld
and
cmp
aam
cmp
mov
dec
push
and
subb
xchg
cltd
sbb
fwait
xor
push
ds
push
cmp
out
and
mov
lcall
inc
and
or
adc
sbb
inc
add
loop
cmp
push
xor
fidivl
cmp
rcr
and
fcompl
movsb
mov
call
adc
in
xor
fwait
adc
cmp
cmp
shrb
push
add
addl
and
insl
ret
push
push
ret
repnz
pusha
push
fcoml
fwait
in
push
xchg
fwait
sbb
es
dec
sarb
push
inc
or
outsb
dec
sbb
imul
inc
movsb
fisttpl
or
in
sub
and
dec
push
and
and
fadd
and
mov
and
or
shrb
xchg
insb
mov
sub
aaa
and
fucomip
mov
sub
push
cmp
ret
ret
ret
out
insb
inc
push
mov
rclb
rclb
rclb
rclb
rclb
and
adc
shrb
push
mov
rclb
rclb
rclb
dec
push
mov
adc
xchg
jo
adc
insb
push
mov
adc
xchg
jnp
adc
insb
push
mov
adc
inc
sbb
iret
mov
outsb
push
xchg
push
sbb
insb
dec
xlat
cmp
sub
movsl
inc
xlat
push
notb
cmp
cmp
inc
adc
adc
inc
adc
adc
inc
adc
sti
inc
adc
adc
inc
adc
adc
adc
fwait
movsl
sbb
sbb
fwait
sbb
sbb
fwait
sbb
sbb
fwait
sbb
sbb
fwait
sbb
repz
ret
in
aam
movsl
add
clc
rclb
rclb
push
inc
or
mov
dec
xor
adc
adc
sbb
or
jmp
pop
or
shrb
sbb
arpl
adc
sbb
insl
inc
push
sbb
ret
adc
imul
inc
imul
cmp
out
mov
fwait
sub
xor
outsb
sbb
pop
data16
es
push
inc
ret
sub
sub
dec
sub
into
sub
push
sub
fldcw
pop
sub
in
das
cmpsl
sbb
push
and
push
mov
jbe
jne
jbe
cmp
jbe
cli
ret
mov
ret
mov
shlb
es
push
or
or
cmpsb
and
data16
lods
and
and
or
in
shrb
outsb
sub
inc
sub
cmp
rcr
sarb
outsb
mov
insl
inc
cmpsb
inc
popf
or
inc
or
les
xchg
or
out
pop
or
xchg
adc
xchg
push
push
inc
mov
sbb
mov
push
adc
and
or
xor
or
xor
xor
cmp
rcr
push
cmp
in
ds
lret
sub
rolb
outsb
or
fwait
push
inc
push
daa
adc
inc
xchg
and
adc
das
push
or
adc
sub
cmp
mov
fbld
xchg
dec
fwait
cmp
es
adc
push
xchg
fdivs
sbb
cmpsl
movsl
aam
sub
cmp
cmp
push
cmp
das
mov
sbb
push
sbb
divl
outsl
cs
xor
ret
adc
push
sbb
lods
iret
pop
fwait
lods
xor
pop
insb
or
cmpsb
push
sbb
sbb
mov
sub
divl
or
jmp
sahf
xor
and
fidivrl
cmp
rcr
ss
push
pusha
and
fbld
jmp
add
add
jnp
sbb
add
and
jns
and
push
jg
or
xchg
sub
adc
sub
mov
xor
jecxz
sub
lods
jecxz
sub
dec
in
push
dec
sbb
sub
xor
fildll
lcall
or
xor
fisttpll
or
insl
cmp
or
push
lcall
adc
inc
leave
mov
es
mov
sub
das
inc
sub
jle
test
sbb
push
test
or
out
push
sub
sbb
push
cmp
pusha
inc
int3
adc
add
dec
add
mov
dec
call
pop
das
push
add
fists
adc
push
loope
outsl
adc
insb
jmp
xor
call
push
ficoml
cmp
rcr
cmp
rcr
cmp
rcr
xchg
mov
push
sub
jl
sbb
pusha
and
cmp
inc
add
xor
dec
jbe
or
adc
adc
xor
push
rolb
push
pop
mov
inc
and
aaa
in
out
js
mov
movb
fdivl
push
mov
xchg
push
xor
popa
fisttps
shlb
pusha
adc
fiadds
push
sbb
sbb
push
rolb
sbb
test
sbb
xor
push
and
sbb
sub
xorl
sub
or
adc
jae
outsb
cmp
jae,pt
outsb
push
cmp
out
sub
jmp
data16
or
sbb
sbb
and
sub
mov
cmp
sub
cmp
mov
test
xor
cmp
aaa
mov
addl
or
pop
cld
psubb
and
sub
outsl
sbb
pop
adc
sub
push
sbb
sub
and
xor
push
call
cmp
and
or
adc
push
push
call
arpl
sbb
mov
cmp
aam
pop
push
outsb
cmp
pop
inc
sbb
call
sub
cmp
sub
dec
rcl
fildll
lods
inc
push
ret
push
ret
jmp
lds
sarb
fildll
lods
inc
push
ret
testb
stos
inc
shlb
sub
cmp
mov
push
ret
ret
dec
sbb
imul
cmp
inc
lret
ljmp
or
push
sbb
rcrl
or
aam
and
fsubrl
xor
xor
cmp
cmp
pusha
cmp
adc
add
inc
push
mov
sbb
test
into
mov
ficoms
cmp
and
push
cmp
rcr
push
and
cmp
shrb
outsb
sub
dec
outsb
add
xor
sub
imul
sarb
mov
sbb
pusha
inc
adc
out
adc
xchg
or
adc
cs
ret
push
sbb
push
fcmovb
add
shlb
outsb
movsb
cmp
outsb
inc
cmp
lods
fbstp
shl
outsb
mov
cmp
jo
inc
ret
cmp
lods
or
fwait
xchg
xchg
fwait
cmp
xchg
pop
mov
out
shrb
xor
xor
outsb
sub
das
cmp
std
cmp
pop
or
mov
xchg
xor
sub
sti
dec
push
or
adc
adc
xchg
inc
sbb
inc
ret
dec
mov
insb
xchg
and
pushf
jle
and
in
push
es
sub
shrb
outsb
or
xor
ss
dec
clc
shll
jle
adc
or
sbb
das
xchg
or
insb
adcb
adc
adc
mov
ficomps
insl
sbb
and
sub
aam
sub
cmp
outsb
cmp
mov
jecxz
cmp
ret
sub
adc
iret
ljmp
adc
clc
xor
push
ret
jmp
jmp
jnp
xchg
and
adc
sbb
xchg
pop
or
xor
divb
mov
sbb
or
inc
sub
sbb
in
data16
rcrb
sbb
or
cmp
xor
in
inc
sub
sbb
cmp
xorl
fwait
push
xchg
les
xchg
push
sub
xchg
adc
unpcklps
outsb
sbb
xor
sub
outsb
jb
mov
cmp
mov
fistpll
ds
inc
adc
xor
add
decl
dec
insl
js
stos
adc
inc
adc
inc
in
push
adc
sub
push
sbb
in
and
in
sub
rorb
push
int3
push
dec
adc
cmp
lods
fistpll
lret
xchg
add
xor
test
sbb
out
call
sub
xchg
in
jbe
pop
ret
dec
sbb
shlb
sub
out
in
or
imul
cmpsb
sbb
and
shl
in
push
dec
sub
cmp
lods
xor
mov
roll
adc
insl
adc
adc
cmp
adc
push
movsl
push
push
sbb
mov
adc
sbb
cs
sub
or
arpl
adc
cmpsb
inc
mov
inc
outsb
insl
jnp
adc
push
insb
xor
lahf
push
adc
push
adc
xchg
pop
adc
sub
or
and
sbb
cmp
cmpsb
push
sbb
and
cs
sbb
fwait
scas
ret
add
push
rcrb
stos
lods
push
or
xor
lahf
sub
mov
pop
adc
or
inc
sub
inc
in
rcrl
lods
lods
or
and
adc
insb
or
fisttpl
cs
cmp
mov
and
arpl
and
cmpsb
cmp
push
fwait
sub
xor
xor
stos
in
push
or
and
std
dec
rcll
rcrb
pusha
sbb
adc
push
das
cmp
out
outsb
sbb
sub
outsb
and
xor
outsb
sub
cmp
inc
inc
xor
mov
pop
or
in
femms
sub
movsl
dec
push
sub
lahf
or
cmp
divl
sbb
pop
or
pusha
cmp
cmp
push
inc
mov
or
movsl
es
insl
xor
int3
sahf
push
sub
rcr
rclb
or
inc
ret
sbb
cmc
jge
add
rdmsr
sbb
ss
icebp
outsb
cmp
aaa
in
shll
insl
mov
sub
shrl
xrelease
sub
insl
aam
sbb
xor
dec
popf
ss
sub
cmp
lods
sbb
inc
cmpsb
sub
popf
sbb
push
sub
lods
xor
std
dec
dec
in
dec
shll
adc
je
sbb
mov
adc
adc
adc
adc
aam
and
fwait
xor
inc
adc
fbstp
xchg
divl
emms
and
cmp
inc
add
jle
adc
inc
test
adc
push
sbb
push
fwait
sbb
and
cmp
cmpsb
in
pop
and
sub
sub
cmp
data16
sbb
es
jo
sbb
in
sbb
jo
lods
ds
inc
mov
orl
or
cs
jnp
adc
sbb
and
inc
and
sub
or
dec
ds
fldt
cmp
or
outsb
inc
cmp
cmp
lock
lcall
lods
push
push
mov
sbb
bswap
and
into
mov
loopne
adc
inc
sub
inc
in
shrl
outsb
lods
or
ss
fcoml
sbb
xchg
push
cmp
sub
push
push
jbe
outsb
xchg
adc
movsl
dec
scas
add
mov
pop
adc
and
or
adc
and
push
xor
xchg
push
sbb
dec
and
mov
in
or
cmp
fisubrl
lods
sbb
cmpsb
xor
scas
and
int3
mov
insb
push
out
push
push
adc
aaa
fisttpll
inc
cmp
mov
ficomps
adc
das
push
sbb
jno
xorb
sub
or
sbb
sub
js
add
mov
cs
cmp
roll
or
sbb
ds
push
mov
push
das
out
repnz
and
pusha
cs
ret
jns
sub
sbb
cmp
out
outsb
inc
cmp
lods
into
mov
adc
push
xor
imul
clc
mov
xchg
outsl
sbb
push
insb
jbe
sbb
movsl
and
adc
sbb
lods
push
or
and
movsl
and
sbb
inc
bound
and
xor
movsl
push
and
push
push
outsb
xor
xor
sub
stc
xor
fwait
jb
jo,pt
inc
ret
arpl
in
rolb
das
enter
scas
xor
dec
inc
adc
inc
adc
inc
adc
or
sbb
push
push
adc
and
mov
pop
or
xlat
adc
insl
cs
test
das
and
inc
dec
sbb
movsl
dec
or
add
ds
mov
repz
add
push
push
mov
filds
inc
sub
repz
into
cs
inc
enter
and
ret
sub
adc
and
stos
adc
or
xor
adc
insb
cmp
rcrb
push
push
push
push
es
xor
sbb
repnz
mov
ret
arpl
in
rcrb
outsb
and
add
fsubl
sarb
push
lock
pusha
add
mov
insb
fisttps
dec
xor
ds
xor
or
xor
enter
jo
lods
dec
or
adc
sahf
push
push
das
sbb
mov
lods
ss
mov
sarb
sub
jae
cmp
sbb
insl
inc
cmpsb
mov
and
xchg
push
mov
sbb
pusha
xor
jnp
mov
adc
insl
inc
push
sbb
xchg
push
mov
dec
sbb
lods
sahf
stos
sbb
rcrl
dec
xor
dec
cmp
xor
ds
xor
cs
xchg
fldt
lock
cmp
inc
mov
lods
dec
dec
sbb
sub
xchg
pop
xor
shlb
push
outsb
inc
cmp
lods
push
int3
xor
adc
cmp
fdivrp
pop
xor
ret
push
insb
or
jnp,pt
call
sahf
xchg
sbb
dec
xchg
xor
sbb
outsl
adc
cmp
ret
xor
rcrb
add
mov
sahf
cmp
sti
cmp
sbb
and
sub
scas
and
and
jnp
or
adc
xchg
xchg
fwait
or
insl
cmp
sbb
insl
inc
inc
sbb
insl
inc
or
cmp
or
xchg
xchg
rorb
hlt
popw
int
sbb
int
and
int
sub
es
ss
adc
cmp
push
inc
hlt
jo
std
or
inc
aad
jno
or
xor
es
aam
xor
icebp
mov
xlat
sub
lcall
and
cmp
faddl
inc
xchg
and
inc
sub
mov
or
loop
cmp
sub
jne
mov
popf
out
dec
jne
inc
lods
lcall
fbstp
cmp
xor
sub
roll
or
mov
adc
or
mov
cmp
mov
dec
and
lret
adc
pop
push
dec
sbb
pop
sbb
sbb
pop
or
push
push
lea
pop
bound
popf
push
cmp
sub
jnp
push
cmc
insl
jnp
pop
cmp
xchg
fldt
xor
xchg
fldt
cmp
adc
shrb
push
push
icebp
sbb
insl
inc
adc
xchg
adc
or
jae
outsb
push
cmp
jae
sub
jbe
fbld
xchg
mov
sub
int
es
pusha
xor
adc
insl
xorl
cmp
xchg
rclb
mov
pop
int
sbb
sbb
int3
and
daa
ss
push
call
in
dec
adc
inc
in
movhps
cmp
inc
dec
sbb
rcrl
cmp
out
outsb
sbb
das
divl
es
ss
fidivl
les
pusha
aas
fcoml
cmp
add
rolb
push
aaa
cmp
fidivl
sbb
ficoml
cmp
rcr
cmp
rcr
xchg
mov
dec
xchg
xlat
xor
sbb
push
mov
aaa
or
xor
ja
jnp
xchg
sub
outsl
xchg
or
xor
adc
fidivrl
cmp
rcr
cmp
rcr
cmp
movsl
push
or
in
push
mov
and
adc
xchg
cs
and
cmp
cmp
sti
data16
int
mov
mov
push
sti
or
lods
xor
mov
scas
ja
or
or
and
or
cmp
adc
jae
outsl
push
push
xor
or
add
sbb
cltd
sbb
cmp
aam
sarl
inc
in
cmp
jne
inc
pop
push
dec
push
fldcw
sub
dec
adc
arpl
mov
shlb
js
and
in
sbb
jne
mov
or
and
push
or
jno
mov
mov
fldt
cmp
push
mov
sbb
sbb
adc
mov
and
mov
jo
xor
xchg
cltd
sbb
and
or
ret
rorl
sub
sbb
sub
and
loopne
sub
sub
xor
shrb
rdpmc
sbb
jne
and
add
inc
sbb
push
fwait
cmp
push
adc
fdivrs
xor
sub
push
mov
movsb
or
push
mov
or
sub
loope
xchg
mov
add
or
bound
inc
imul
dec
std
add
adc
mov
iret
mov
xor
scas
jns
or
cmp
or
mov
add
sub
inc
and
rcll
dec
dec
inc
mov
xchg
or
daa
roll
xchg
fists
loope
xor
adc
push
or
popf
cli
sub
mov
imul
insb
lret
push
stos
sub
adc
pop
divb
push
cltd
sbb
int
jnp
xor
xchg
mov
dec
lock
add
popf
jg
inc
stc
mulb
int3
scas
and
stos
push
cmp
jmp
cli
mov
dec
fcoml
push
mov
xor
imulb
adc
jl
jb
repz
mov
jmp
add
mov
push
pushf
jl
mov
pop
fcoml
lret
movsl
sub
add
sbb
std
dec
jmp
addb
xor
xchg
or
lds
test
sti
or
sub
cld
js
pop
jb
mov
popf
push
fxch
add
add
andb
cmp
pop
fwait
mov
outsl
popf
lea
fbld
pop
sub
mov
outsb
dec
pop
xchg
sbb
lahf
mov
mov
sub
dec
imul
dec
cli
lahf
sub
inc
xchg
adc
xor
xchg
test
sbb
inc
xchg
push
lods
dec
xor
mov
mov
sub
insb
add
andl
mov
dec
sbb
sbb
sahf
sub
ret
and
xchg
dec
sub
xor
adc
pop
xchg
mov
jo
sbb
movsb
adc
sbb
outsb
mov
xor
aaa
cmp
test
mov
or
or
outsb
xchg
xchg
cwtl
sbb
test
sub
xor
xchg
cmp
aas
inc
insb
or
inc
mov
dec
adc
outsb
and
insb
das
mov
adc
sbb
stc
cmp
xorb
sbb
outsb
sbb
mov
stos
mov
adc
sbb
outsb
inc
xchg
test
push
pop
push
loopne
cwtl
cmpsl
cmp
xor
mov
insb
aas
mov
dec
adc
mov
adc
sbb
outsb
mov
inc
insb
or
mov
sbb
outsb
sbb
cmpsb
insb
sub
xor
rorl
std
insb
cmp
adc
sbb
insb
mov
adc
xchg
rcrl
push
sbb
xchg
insb
xchg
mov
outsb
cmpsl
xchg
sbb
ss
cmp
or
es
jle
adc
sbb
outsb
fwait
push
pop
cmp
insb
or
cld
mov
dec
mov
outsb
sub
and
push
adc
sbb
sub
mov
sbb
scas
adc
xchg
push
sbb
push
rorb
jl
dec
ds
outsb
mov
lods
insb
sub
popf
outsb
sbb
sub
cmp
rorb
outsb
xor
insb
and
sahf
adc
push
mov
xchg
add
sarl
xor
aaa
adcl
dec
inc
sbb
dec
and
test
dec
xor
mov
aad
push
mov
sub
dec
repnz
dec
jnp
pop
push
rolb
adc
adc
insb
lcall
cmp
sbb
mov
adc
push
test
xchg
ret
cmp
mov
lods
sbb
outsb
lahf
xchg
sbb
xchg
adc
or
xchg
sbb
test
outsb
push
xchg
sbb
mov
xchg
inc
leave
mov
outsb
xor
sub
mov
adc
sbb
sub
aas
dec
add
rcrb
mov
adc
xchg
and
pop
fwait
insb
sbb
or
xchg
sbb
mov
adc
sbb
outsb
test
and
lcall
test
mov
xchg
cmp
xor
test
outsb
lahf
xchg
fwait
sbb
lea
sbb
outsb
cmp
scas
insb
stos
mov
adc
sbb
sub
and
push
adc
rcrb
insb
mov
sbb
outsb
stos
xchg
mov
xchg
mov
push
sbbb
ds
cmp
scas
outsb
sub
insb
sbb
loope
sbb
sbb
sbb
mov
stos
rcll
push
inc
lahf
das
dec
mov
sbb
push
insb
cltd
mov
fldenv
mov
test
bound
xorb
jno
or
cmp
insb
cmp
lods
outsb
adc
insb
daa
push
xor
jp
xor
jo
dec
lods
push
fbld
jns
out
daa
sbb
outsb
into
xchg
lret
dec
insb
mov
dec
outsb
lea
or
daa
mov
ret
dec
mov
fs
pop
or
rorb
push
rcll
inc
xor
mov
cwtl
imul
lahf
leave
sub
clc
loop
subb
mov
sbb
dec
xchg
flds
push
dec
mov
fidivs
or
test
sub
rcrl
pcmpeqb
push
pop
cwtl
sub
out
addr16
cmp
ficomps
pop
dec
sub
sahf
or
iret
jo
mov
je
out
or
push
sbb
in
jbe
jns
xlat
ret
cli
imul
and
fwait
pop
repz
cmp
add
mov
jne
or
scas
pop
push
test
ljmp
cmp
or
sub
jne
sub
sbb
push
stos
or
or
xor
ret
sbb
mov
or
add
inc
lret
pusha
rorb
or
inc
out
xchg
jb
repz
xchg
ds
sbb
pusha
mov
sahf
or
sub
or
add
add
push
and
imull
adc
imul
int3
or
cltd
xor
dec
mov
mov
lret
push
push
and
mov
or
sbb
push
dec
sti
test
cmp
stos
push
jg
ret
out
pop
pop
mov
xor
sbb
dec
cmp
imul
cmp
adc
int3
repz
xlat
jo
and
inc
xor
xor
xchg
adc
jns
or
or
pop
jno
and
xchg
lret
mov
xchg
sub
popa
outsl
or
and
sti
leave
fistl
clc
mov
and
popa
mov
pop
rcrl
or
faddp
inc
arpl
mov
add
gs
jae
pop
mov
aam
inc
clc
dec
or
jmp
adc
and
jp
and
jle
ljmp
dec
ficomps
adc
or
daa
and
or
cmpsb
xlat
jg
adc
shlb
movb
inc
lea
es
or
push
cmp
push
or
sbb
pusha
xor
inc
ror
dec
jmp
scas
idiv
adc
or
mov
pop
xor
sbb
or
mov
leave
or
xchg
sbb
xchg
inc
lret
xchg
sarb
cli
jae
mov
out
xchg
push
xor
sbb
adc
or
scas
test
sub
jg
cmp
adc
adc
leave
jecxz
push
out
shll
or
lret
icebp
xchg
sub
mov
or
or
push
cwtl
in
call
ds
lods
loopne
xor
dec
mov
cmpb
lret
mov
fstpt
mov
push
lret
fwait
insb
lods
pop
sub
mov
add
push
outsl
push
lret
ret
subl
xor
add
push
adc
mov
or
cmp
mov
mov
xchg
or
mov
and
sbb
adc
jno
sub
xchg
out
xchg
lret
jns
call
rorb
dec
and
inc
xor
adc
pop
sub
or
lret
push
fdiv
push
test
in
mov
out
mov
sub
imul
test
outsb
aad
sti
push
ret
inc
push
push
or
mov
pop
mov
in
imul
arpl
sub
cltd
mov
xor
out
movsl
pop
sarb
mov
xchg
or
addr16
sbb
std
sub
mov
lea
inc
or
leave
fmul
or
and
fstps
pop
lret
inc
repnz
cmp
xchg
and
inc
js
mov
or
in
fwait
les
cs
or
mov
fsts
or
inc
fdivrp
ret
repz
push
test
sti
push
mov
dec
mov
mov
lods
and
push
pushf
shrl
lea
lcall
inc
and
push
xchg
mov
aam
dec
dec
fwait
mov
mov
cld
int3
sar
lret
sbb
test
loop
mov
ret
xchg
jmp
cmp
inc
das
or
imul
push
sbb
and
hlt
add
aad
stos
sbbl
or
mov
pop
rorl
lds
nop
xor
inc
jecxz
dec
sarb
dec
push
or
jg
loop
rorl
or
clc
int
cmp
es
sarl
or
pop
or
shlb
inc
bound
push
aad
add
lret
mov
or
adc
mov
cmp
sub
or
xlat
mov
adc
enter
mov
daa
jp
jge
sub
or
inc
ja
in
or
cld
fistpl
lcall
call
cmp
addr16
dec
enter
ret
jnp
das
pop
pop
adc
add
fstl
dec
sbb
inc
sub
loope
mov
adc
jg
pop
sbb
xchg
nop
lret
cmp
stos
lret
lods
or
and
inc
arpl
and
out
or
jb
or
add
cwtl
test
and
xchg
iret
xchg
cwtl
adc
psllw
or
xor
add
jae
cmp
jge
sub
sub
sbb
sub
fwait
adc
lock
and
mov
push
push
add
cmp
nop
shlb
and
or
pop
dec
push
cmp
xchg
es
or
jge
pop
or
out
fstps
or
or
sub
add
icebp
inc
rclb
jp
push
rorl
xor
inc
xlat
dec
dec
adc
xchg
xchg
dec
es
icebp
enter
sbb
sub
jnp
aam
inc
adc
std
mov
cmp
sub
sbb
jle
lods
and
inc
adc
pop
sbb
loop
inc
lea
pusha
lods
or
xchg
cwtl
inc
dec
jg
inc
push
xor
sbb
pop
or
jge
scas
sbb
dec
jmp
and
dec
or
pop
andl
fwait
mov
xchg
or
imul
imul
lods
xor
inc
inc
ja
lea
imul
sub
imul
cmpsl
imulb
push
sub
aam
bound
int3
ds
adc
subb
nop
or
jns
sbb
loope
int
stos
xor
push
or
mov
cmc
xchg
or
cmp
or
outsb
pop
xchg
push
xchg
pop
aas
and
xchg
fwait
insl
xchg
sub
or
mov
add
arpl
or
push
lea
push
movb
and
outsl
cmp
or
clc
jns
fwait
jb
dec
adc
aaa
mov
in
adc
adc
xchg
pushf
out
ss
xchg
jbe
mov
mov
jp
or
bound
inc
pop
mov
cld
fcoms
movsl
adc
xorl
adc
iret
ret
and
push
jecxz
stos
xchg
pop
or
aas
sub
add
push
dec
and
cmp
imul
push
mov
cmc
mov
push
and
fidivrs
and
push
iret
adc
push
and
stos
jo
sub
jmp
push
jp
cld
sbb
out
xchg
imul
insb
add
movb
jnp
dec
sbb
sub
mov
or
mov
iret
jns
aas
push
imul
cmpsb
add
hlt
es
scas
sbb
mov
aam
jno
cmp
iret
inc
jne
pop
and
pop
clc
dec
out
es
or
inc
lea
jae
jecxz
loope
push
pop
pop
or
ret
lcall
icebp
add
add
mov
inc
lods
cmp
pop
in
jl
mov
mov
adc
dec
mov
dec
and
mov
or
jge
xchg
loop
dec
aad
add
dec
or
in
sub
mov
fldenv
jns
or
lods
xor
pop
push
pop
and
cwtl
sub
hlt
adc
xor
or
push
xchg
cli
pop
lahf
lods
dec
bound
mov
pop
cmp
test
testl
les
pop
js
loope
into
or
mov
cmc
hlt
movsl
insl
cmp
mov
or
stos
mov
outsb
or
pop
dec
das
imul
out
xchg
ret
mov
xchg
add
and
sbb
insb
adc
rcrl
popf
fbld
inc
add
or
mov
std
ficoms
mov
sub
xor
push
adc
mov
lods
add
pop
movb
in
cmp
aam
fimull
add
adc
add
insl
aas
mov
sbb
es
lds
adc
mov
or
scas
lock
jnp
fimuls
push
lret
mov
mov
aad
iret
sbb
inc
adc
mov
int3
mov
ds
sahf
int
lret
decl
mov
fistps
pop
mov
jmp
jle
sbbb
mov
or
ret
inc
adc
xchg
inc
outsl
sbb
out
lea
xor
inc
fistl
xchg
dec
sar
gs
jmp
inc
jmp
test
mov
setns
dec
add
cli
std
test
bound
or
jae
cmp
xor
adc
pop
adc
ret
mov
rorl
mov
cmp
or
or
lret
pop
or
cmp
lea
sbb
adc
adc
jbe
or
lahf
outsb
mov
jmp
sbb
push
rcll
setne
sub
xchg
iret
push
iret
clc
fiadds
sub
sub
sbb
inc
sub
mov
or
stc
xchg
jmp
cwtl
sahf
repnz
or
dec
push
lcall
or
adc
push
push
sbb
adc
xchg
xor
int
fisttpll
or
or
jg
adc
jae
push
lods
or
or
cwtl
jne
or
inc
cs
test
dec
pop
subl
inc
iret
adc
sbb
cmc
add
push
call
into
sub
arpl
push
icebp
or
enter
call
sbb
popa
movb
or
iret
adc
lods
out
jno
or
pop
das
fisttpll
push
jae
inc
stos
xor
cld
or
popf
sub
push
adc
mov
out
inc
or
xchg
jle
xchg
aam
cltd
pop
aas
bound
inc
jmp
in
in
cmc
rcll
jo
notb
insb
sub
subb
cmpsb
jg
movsl
ljmp
jl
je
xchg
stos
ret
loop
adc
rorl
mov
inc
in
sub
out
and
lea
rclb
call
sbb
fwait
push
ja
push
pop
sbb
inc
lea
nop
add
or
or
shlw
test
or
or
xrelease
aad
ds
aam
pop
ss
test
stos
and
jmp
cltd
loope
cmp
mov
imul
popf
or
insl
and
or
ja
jae
shlb
icebp
jge
and
out
add
adc
addl
addb
test
push
push
add
cmpsb
dec
dec
mov
or
mov
call
insb
mov
dec
fdivrl
cmp
xchg
call
fucomip
pop
clc
xor
or
xchg
cmpsl
adc
or
add
inc
vphaddwd
mov
cmpsb
or
insb
fistl
es
cmc
in
jno
pop
mov
or
sbb
or
cmpsl
cmp
mull
or
sbb
pop
mov
pusha
outsb
xchg
xchg
or
pop
loope
add
or
ret
mov
in
push
out
or
xchg
iret
xor
lea
jp
scas
sub
add
stc
xchg
cwtl
fwait
push
jge
cs
in
xchg
test
sbb
mov
sub
lcall
out
xor
dec
mov
mov
js
and
aam
or
shll
mov
xchg
iret
pop
jp
int
cwtl
pushf
pop
ss
and
push
mov
hlt
nop
ds
add
push
sti
lea
rolb
pop
or
iret
js
dec
mov
or
fdiv
jp
xor
gs
dec
and
aam
or
or
outsb
mov
je
fldl
xchg
dec
mov
mov
imul
add
dec
cmc
push
mov
push
cmp
iret
arpl
sub
push
lea
push
xchg
testb
sub
lret
or
mov
sbb
cmp
xchg
sbb
mov
inc
dec
jo
pop
shll
iret
jmp
mov
pop
cmpsl
sbb
cmc
and
jmp
cmpsb
push
idiv
or
fadd
sub
jbe
call
or
sbb
jg
test
aad
add
pop
cmp
adc
in
loop
lods
insb
or
mov
outsb
or
sbb
ja
xor
adc
cmp
loop
bound
lret
or
rcrl
add
adc
or
mov
xchg
mov
push
inc
mov
dec
jecxz
inc
rol
inc
or
shlb
jb
lock
gs
adc
pop
push
xor
fisttpll
das
and
mov
dec
push
cmp
insl
sub
cmpsl
ljmp
mov
lret
cmpb
ljmp
and
jb
fisttpll
sbb
leave
mov
xchg
adc
adc
or
sbb
fwait
mov
movsb
dec
mov
push
sarl
or
cwtl
aaa
loop
adcb
out
mov
jge
pushf
insb
lret
movsl
xchg
push
cli
cmp
testb
or
outsb
sbb
cwtl
call
and
mov
cmp
pop
fadds
or
add
push
movsl
or
lock
test
mov
out
aam
lret
inc
sub
scas
push
lea
and
orb
sub
mov
int
sub
stos
popa
or
and
inc
inc
or
jbe
int
addr16
mov
cli
pop
lods
mov
iret
inc
xor
and
incl
addb
and
mov
ss
mov
ret
or
div
repz
or
nop
pop
push
fwait
sub
clc
or
pop
cmpb
rorb
or
mov
dec
std
testb
in
fisttpll
xchg
mov
mov
pushw
jg
cltd
sub
int
repz
pusha
outsl
cmpsl
fcomps
xchg
cmp
scas
and
cmp
out
push
or
push
or
fidivl
xor
test
out
cmp
pushf
shll
fs
rdtsc
es
dec
test
sahf
xor
xlat
inc
popf
mov
pop
hlt
inc
sub
sti
fdivrs
in
loope
je
adc
popa
or
adc
aad
push
daa
mov
cld
push
imul
xchg
push
mov
jp
pop
daa
insl
jnp
fldt
scas
or
dec
jns
dec
mov
sahf
sub
pop
xor
ljmp
or
outsl
mov
add
int
xchg
mov
adc
sub
jae
mov
or
addr16
cmp
push
dec
ret
mov
jge
mov
dec
aas
mov
push
push
add
cmp
fcmovne
movsb
scas
or
dec
xchg
or
push
inc
or
dec
add
int3
fcompl
ss
mov
cli
xchg
int
sub
sub
stc
cmp
adc
pop
sub
enter
or
xchg
add
rorb
loop
popf
shr
insb
mov
inc
sub
inc
mov
mov
push
sbb
jnp
gs
es
or
test
pmaxsw
loopne
adc
int
xor
mov
or
and
lds
leave
or
stos
mov
pop
mov
cltd
aaa
pop
push
adc
shrl
scas
mov
js
or
icebp
mov
mov
addr16
xchg
gs
dec
xor
outsl
pop
sub
or
sub
adc
jg
lock
jle
stos
les
cmp
jg
scas
or
sub
icebp
out
roll
or
stc
push
pushf
fidivrs
ret
daa
push
jp
iret
adc
ret
addb
mov
mov
ja
mov
mov
rol
pop
mov
lret
push
or
bound
in
rorl
xor
dec
mov
int
push
mov
or
or
jns
iret
sub
dec
pop
inc
sub
inc
dec
int
mov
mov
pop
lock
xlat
fcmove
xlat
idivl
or
call
xor
push
push
mov
in
or
jmp
pushf
ja
lock
add
push
and
or
or
sub
outsl
pop
pop
inc
sbb
jnp
mov
dec
mov
ficomps
push
mov
sahf
lock
mov
jecxz
test
sub
xlat
movsb
int
xor
adc
popf
mov
fcmovbe
jg
sub
or
mov
dec
dec
movsb
arpl
pop
mov
out
test
xor
sub
cmp
push
jp
jnp
xchg
sub
mov
inc
popa
mov
aas
and
nop
call
adc
and
fstpl
dec
popf
loope
test
gs
fisttps
sbb
cmc
lcall
mov
mov
jb
or
sub
or
lea
mov
iret
subb
scas
or
mov
fs
pop
mov
hlt
mov
inc
dec
inc
and
int3
popa
mov
cmp
xchg
repz
jne
xor
clc
cmp
xchg
out
xchg
in
cltd
xorb
push
ss
or
cmp
sbb
xlat
pushf
fdivr
inc
jno
pop
xor
or
xor
add
or
add
insb
sub
pop
push
iret
mov
enter
and
cmp
lea
jp
add
cmp
leave
xchg
adc
push
dec
rorl
mov
sti
adc
cmp
out
or
or
jns
or
movsl
or
add
lret
shl
and
xchg
mov
and
jnp
mov
sarb
xor
stc
adc
cmp
mov
lret
cwtl
or
or
jo
lock
pop
xchg
dec
jle
in
aam
and
int3
mov
idivl
cmp
ss
push
adc
iret
into
inc
jo
cld
or
push
xchg
sub
pop
adc
icebp
test
xchg
cmp
sbb
dec
mov
sbb
mov
cmpb
adc
lock
mov
xor
leave
or
cmp
adc
movsl
fcompl
or
push
loopne
add
lods
movsl
bound
dec
lcall
fincstp
roll
out
adc
or
xchg
test
aaa
or
dec
sub
xchg
scas
add
int
arpl
inc
jns
sarl
push
lods
jne
add
into
dec
inc
push
movsb
fisubrl
cmp
lcall
cmp
add
jb
mov
fcomps
cmp
movsb
add
or
int
and
aad
cmp
jmp
xchg
shr
cmp
pop
push
and
adc
xchg
dec
mov
dec
les
leave
cmp
jl
cs
loopne
xor
in
inc
inc
or
jmp
cmp
cltd
add
inc
lret
loope
nop
xchg
std
andl
stos
sub
dec
push
push
shrb
out
or
pop
jecxz
ds
or
cmp
fcmovne
xchg
add
push
test
add
and
dec
outsb
sub
aaa
dec
in
dec
mov
or
mov
lock
mov
dec
pop
mov
xor
fxch
data16
push
clc
lea
nop
or
and
inc
add
mov
andb
notl
jae
stos
jns
cmp
xchg
ja
movsl
pop
aad
mov
mov
inc
lea
sbb
xor
or
addl
or
xor
pop
rcll
sub
in
fbstp
and
dec
dec
or
push
sub
cmp
cmp
mov
rcll
lret
mov
sbb
je
sbb
insl
cmp
sbb
sbb
mov
or
scas
inc
idivl
or
test
dec
cmc
and
test
sub
fimull
xchg
inc
es
ss
or
lock
imul
xor
xchg
mov
clc
xor
pmaxsw
cmp
mov
cmp
add
jo
vpsubusb
jnp
popa
push
cmpsl
add
cltd
or
dec
push
lods
aas
xor
jmp
mov
mov
fiadds
sbb
pushf
sahf
shlb
adc
adcl
or
sbb
cmp
sub
dec
inc
xchg
mov
arpl
test
sbb
pop
sbbb
or
or
xchg
mov
pop
adc
xchg
sub
faddl
push
fs
add
cmp
adc
xchg
xor
add
lcall
rorl
ljmp
mov
mov
xchg
bound
jne
cmpsl
int3
xor
mov
mov
cmp
push
and
sbb
leave
popf
push
xor
push
aad
fstpt
pop
adc
std
iret
adc
loop
dec
sbb
shlb
or
or
cs
jae
cld
xchg
and
lea
jmp
cmp
or
mulb
mov
fwait
xchg
pop
or
push
imul
adc
cmpsb
aam
or
scas
mov
arpl
popa
scas
sub
pop
filds
mov
xor
xchg
cmp
into
notb
or
mov
mov
dec
mov
out
scas
movsb
fnsave
add
mov
enter
das
or
sbb
pop
or
popa
arpl
sbb
inc
sbb
inc
dec
sub
ljmp
mov
lret
or
test
cltd
movsl
lahf
lea
jmp
pop
cmp
xor
int3
xchg
loopne
inc
sarl
add
push
push
add
cltd
inc
lret
inc
jb
xor
aam
or
mov
repz
sbb
dec
scas
fs
aas
ret
mov
inc
mov
or
pusha
and
ror
push
and
insb
xor
xchg
std
xor
test
cld
into
loop
pop
or
int3
fnsave
loope
dec
inc
les
jp
mov
sub
xor
mov
pop
and
fisubrs
inc
movsl
sbb
call
imul
pop
sbb
lret
dec
sahf
jl
push
cld
sub
aam
and
pop
or
sbb
fildll
lret
inc
rclb
sbb
jne
adc
out
adc
pop
jb
out
outsb
or
daa
cmp
or
rcrb
push
or
mov
sarl
jb
mov
lods
clc
cmp
ljmp
rorl
test
jge
dec
js
iret
adc
icebp
push
or
sub
pop
xchg
lea
and
or
lret
sbb
or
pop
pop
xchg
inc
push
add
or
pop
jnp
sub
xchg
push
iret
xchg
fs
mov
dec
pop
push
pop
jns
sub
and
mov
or
jne
or
cmp
ss
fstpt
xchg
cmc
xchg
jg
add
or
shl
les
je
incl
dec
mov
jp
in
push
sbb
jmp
stos
ret
adc
or
cmp
addr16
push
sahf
repnz
push
ret
sub
xchg
dec
or
sbb
inc
or
sbb
inc
or
orb
sub
xchg
out
jl
push
or
xor
sahf
pop
aas
xor
int
sbb
sub
nop
or
dec
and
xor
iret
or
addr16
mov
int3
lods
shll
mov
and
jmp
mov
loope
cs
or
mov
mov
fldenv
jns
or
stos
xor
pop
int3
jo
testb
rcrb
or
mov
jo
inc
add
dec
inc
add
inc
imul
clc
es
or
scas
or
stos
mov
or
lods
sbb
dec
or
into
pop
cmp
push
mov
jae
adc
in
add
aam
xchg
nop
test
cmp
ss
iret
or
arpl
add
fcomps
daa
mov
ret
iret
mov
ss
xor
insb
or
cwtl
xchg
inc
aam
test
inc
lods
xchg
sahf
sub
sub
dec
nop
cmpsb
iret
stos
pop
mov
push
or
imul
xor
cmpsb
add
dec
jle
adc
fimull
mov
hlt
dec
jl
in
fadds
cmp
push
push
jmp
push
out
popf
nop
lcall
sub
je
lea
or
mov
dec
int
dec
das
jnp
jl
cmpb
add
xchg
fisttpll
pop
inc
add
arpl
inc
mov
mov
ret
add
adc
in
cmp
xchg
outsl
pop
mov
addr16
mov
inc
mov
into
mov
mov
xor
loope
int
aaa
sbb
mov
out
xor
xor
filds
movsl
loop
iret
fmul
push
or
mov
or
jp
cld
push
es
pop
sbb
push
mov
cltd
adc
mov
sbb
sub
imul
push
stc
xor
cmp
iret
out
push
mov
or
push
and
aam
rcr
ffreep
mov
or
out
jb
leave
add
dec
xlat
inc
shrb
fcmovnb
lcall
sub
add
push
sub
cmp
fisttpll
rcrb
leave
out
lret
adc
or
popa
lahf
loopne
iret
pushf
dec
jmp
popf
sbb
dec
sbb
test
aas
cmpsb
xchg
cmpsl
fistl
xchg
jp
fcoml
mov
push
adc
pusha
jnp
out
in
sbb
mov
jmp
or
push
pop
add
lods
xchg
cs
sbb
or
and
cmpsl
jecxz
js
sbb
or
mov
pop
or
and
or
sarb
and
test
jge
push
sbbl
ja
adc
and
jo
aam
sub
shll
xor
pop
xchg
xor
repnz
add
adc
or
pop
jno
xchg
pop
lea
or
enter
mov
and
loop
test
mov
sbb
decl
call
and
and
inc
into
lods
pushl
sub
push
gs
iret
div
jns
mov
xor
dec
or
bound
iret
push
stos
loop
scas
push
mov
pop
iret
inc
mov
fimull
mov
cmp
sub
stos
add
dec
lret
les
mov
push
mov
cwtl
stc
jg
ret
cmp
pop
rcll
cmp
add
mov
mov
test
adc
or
or
fs
fwait
aad
add
bound
jbe
aas
sbb
or
or
pop
ljmp
cli
jns
or
push
mov
xchg
sbb
iret
jbe
testb
or
out
mov
mov
lods
into
ds
int3
subb
adc
nop
test
mov
test
cmp
adc
xor
push
adc
cmp
mov
pop
es
or
call
push
fs
aad
push
and
sbb
into
repnz
rorb
xor
mov
xchg
repz
add
add
sbb
pop
adc
or
adc
jmp
mov
test
sub
and
stos
or
mov
mov
sub
sbb
xchg
mov
clc
or
ret
jg
test
add
in
in
ffree
or
mov
add
inc
mov
mov
in
mov
call
push
push
test
xchg
call
or
cmc
mov
lret
fs
cmp
push
mov
inc
push
or
mov
pop
or
pop
sub
and
lret
rorl
xchg
mov
je
sbb
pusha
xor
imulb
into
adcb
or
mov
adc
or
into
testl
pop
dec
add
pop
imul
mov
adc
mov
out
push
jnp
sub
inc
mov
scas
adc
ljmp
ret
lea
shll
mov
and
mov
dec
mov
jb
aam
xchg
sub
aaa
lret
shl
ds
mov
sahf
or
mov
loopne
xchg
and
and
faddp
lret
jo
mov
je
mov
xor
and
adc
add
mov
and
out
je
pop
pop
insl
or
cmp
push
test
shl
push
sbb
ror
stos
or
loopne
dec
fs
pop
bound
ret
movsb
insb
and
addb
ljmp
out
push
lret
cmpsl
jl
inc
inc
sarl
and
xchg
lock
sahf
in
and
push
shll
int
cmp
nop
in
mov
or
or
pop
jp
mov
cmp
in
sbb
add
imul
cli
pop
repnz
add
or
hlt
mov
jle
mov
xlat
dec
or
push
jo
cli
mov
and
icebp
out
pop
pushf
movsl
or
sbb
sbb
loop
cwtl
or
xor
dec
or
push
push
stc
dec
jo
adc
cli
add
xchg
or
mov
add
hlt
fldl2t
cwtl
cltd
cltd
or
fiaddl
loopne
orb
dec
or
add
mov
cli
sbb
fwait
xchg
lods
iret
stc
test
push
ret
or
fwait
mov
mov
daa
stos
adc
scas
cld
out
pop
in
idivl
xchg
adcb
pushf
dec
mov
in
sbb
xor
jmp
push
movsl
ljmp
pop
mov
cmpsb
or
gs
or
sahf
dec
xchg
cmp
or
lahf
in
mov
movsl
aas
iret
cmp
pop
fmuls
cmp
jne
sub
mov
lret
scas
movsb
int3
jle
mov
dec
adc
jecxz
or
jp
dec
mov
es
or
int3
aas
js
outsb
add
lahf
fistpl
inc
adc
or
xchg
xor
jmp
imul
adc
cs
shll
dec
adc
dec
xchg
mov
and
sti
adc
rolb
iret
dec
mov
dec
mov
xor
mov
and
inc
imul
jbe
dec
xor
in
scas
fistpl
push
data16
and
dec
xor
sbb
pop
sarb
jp
sub
aam
dec
or
mov
mov
mov
or
dec
out
imul
add
push
fadds
add
ret
add
pop
fisttpl
ret
rolb
xor
jg
or
in
cmpsl
sbb
xchg
fdivrs
push
or
popf
xor
dec
xchg
call
add
pusha
aad
jns
mov
sahf
and
dec
ss
inc
jne
xchg
stos
clc
into
fisubrl
insb
inc
sbbb
fnstenv
mov
enter
leave
in
lcall
xlat
cmpsb
inc
dec
shrl
mov
mov
aaa
js
mov
mov
lods
mov
mov
scas
mov
pop
xchg
or
sbb
sbb
push
fwait
xchg
out
and
gs
imul
and
std
add
call
fistl
icebp
jp
pop
push
jae
jle
das
nop
insb
inc
push
xor
roll
adc
ret
nop
call
sbbl
das
shl
fbstp
push
mov
cmc
vphaddudq
xchg
sbb
imul
or
or
jmp
movb
jle
ficoml
enter
les
push
or
cwtl
fsub
or
icebp
std
dec
add
rolb
push
shll
and
pop
mov
push
and
sbb
test
rcrb
int3
jmp
adc
jg
aaa
loope
repz
dec
xor
push
test
into
and
cmp
cwtl
icebp
mov
sbb
push
lcall
sub
mov
cmp
xchg
pop
lret
ss
nop
inc
pushf
jmp
jmp
les
nop
and
loopne
cmpsl
call
in
insb
or
xchg
inc
repnz
push
xor
dec
ss
cmp
mov
popf
xchg
test
scas
jle
xor
adc
cmp
add
rorb
sub
aas
jle
pop
mov
sbb
mov
mov
aad
jle,pn
clc
inc
sub
sub
mov
jge
sarl
inc
andl
and
jmp
movsb
adc
inc
adc
xchg
pop
push
add
xchg
lahf
add
mov
cli
je
dec
add
scas
xor
iret
cmp
insl
je
movsb
jl
push
mov
daa
add
mov
dec
adc
fwait
in
repz
jle
std
jge
or
xor
push
iret
pushf
pop
cs
fdiv
push
mov
mov
std
ljmp
int
je
add
std
add
out
sbb
addr16
es
jns
call
std
jae
out
jae
stos
nop
clc
stc
repnz
pusha
call
lea
ret
sub
les
test
push
aaa
ja
push
add
jbe
push
xchg
nop
inc
out
mov
cs
clc
push
pop
out
xchg
adc
jbe
push
push
incl
push
scas
cwtl
mov
movsl
loop
inc
dec
insb
aaa
sysenter
sub
repz
sub
push
lret
out
xchg
push
sbb
out
data16
bndstx
in
stos
mov
and
jp
push
stos
lds
bound
loop
das
neg
lods
call
cmp
not
jmp
lea
jae
test
call
sarl
sub
xchg
mov
sub
imul
cmp
push
call
and
adc
adc
jbe
push
mov
cltd
mov
jnp
mov
cmp
fadds
adc
push
mov
pop
in
inc
xlat
stc
rcll
and
cmpsl
repz
lahf
lret
xor
mov
xor
xchg
xor
ficompl
dec
jecxz
test
and
and
mov
shrb
ja
push
cli
inc
sub
pop
jns
sbb
test
enter
ds
add
shll
cli
dec
hlt
or
cli
fsubrp
cli
ret
adc
pcmpeqd
int3
fs
jmp
imulb
pop
pop
cmp
lock
cltd
push
not
mov
xor
add
ss
rcr
or
xor
fs
cwtl
mov
push
cmp
jecxz
subb
mov
lahf
clc
cmp
cmp
fstpl
in
pop
mov
xor
pop
fstp
pop
inc
add
sar
xchg
shld
bsf
mov
rcr
sbb
ror
mov
test
push
cmc
pushf
xchg
movzbw
xor
shld
mov
test
jmp
ret
and
and
aam
xor
movsl
mov
jnp
outsl
add
lahf
int
xchg
icebp
adc
pop
in
cwtl
xchg
mov
cmp
sub
fldenv
adc
mov
sbb
sbb
mov
dec
stos
stc
and
fbstp
push
aam
cmp
enter
sub
cmc
xor
sbb
loope
sub
push
stos
int3
mov
mov
pop
divb
xchg
sbb
jno
lods
sarl
push
iret
xlat
out
es
imul
pop
aad
int
jg
cmp
icebp
lcall
sbb
sub
nop
pop
jno
dec
das
lahf
fbld
movsb
add
insb
decb
xchg
mov
push
push
push
fstpl
pop
cmpl
inc
iret
pushf
insl
dec
mov
outsb
gs
imul
fidivrs
mov
lret
out
inc
setb
stc
cmc
mov
add
pushf
cmc
pushf
mov
pushf
test
test
movl
test
push
movb
call
pop
outsb
sub
icebp
mov
ficoms
push
dec
leave
xchg
add
xlat
cld
ret
mov
xchg
insb
ds
addr16
sub
icebp
jns
xchg
jns
ret
add
push
jnp
cld
xor
mov
stos
std
mov
nop
rcrl
ss
hlt
jb
fldenv
outsl
imul
ret
inc
pop
cld
jg
mov
mov
fs
call
push
jmp
mov
or
in
ret
inc
inc
rolb
or
shll
hlt
cli
clc
es
in
adc
adc
lret
cs
les
mov
mov
adc
scas
jmp
sbb
pop
mov
lock
loop
ljmp
push
shlb
lahf
and
pop
jns
test
pop
jmp
cmpl
fdivrl
sub
jae
xchg
inc
jg
ret
cmpsl
jnp
xor
fimuls
and
testb
fsubs
sub
mov
pop
scas
add
inc
cmpsb
loop
jmp
inc
lret
bound
cwtl
push
leave
mov
inc
and
repz
or
mov
jbe
xor
xchg
or
or
rcll
andl
ret
stos
jge
into
int3
pop
movsl
filds
test
add
sbb
xchg
bts
mov
test
xor
shr
ror
mov
cmc
pusha
mov
test
movzbw
mov
stc
pushl
call
pusha
movb
clc
cmp
pushf
lea
ja
push
pusha
call
push
bt
shr
pusha
push
test
pushf
cmp
jmp
inc
pushf
jmp
aaa
ljmp
ljmp
hlt
and
lret
xor
dec
dec
outsl
rol
cmc
dec
cmpsl
xor
add
fstps
aad
mov
cs
loopne
pusha
push
shlb
mov
mov
jmp
test
adc
xchg
shr
and
aad
mov
push
mov
popf
mov
push
mov
mov
scas
sub
insb
or
or
and
mov
mov
outsl
das
out
dec
xor
and
sub
inc
es
dec
out
sbb
mov
or
jge
imul
mov
fsubrl
fsubrl
repz
loopne
jl
iret
fwait
cmp
and
fsubs
mov
mov
loope
int
add
adc
mov
push
push
push
aas
cmpsb
xor
inc
or
pop
inc
rorl
std
pusha
ja
cmp
cmp
jmp
dec
scas
mov
insb
sbb
mov
aad
shrl
lahf
and
adc
sahf
sahf
and
scas
xor
cld
adc
mulb
bt
cmp
pusha
movb
pushl
push
lea
ja
pusha
dec
pusha
dec
inc
dec
movb
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
popa
and
fs
and
cmp
in
cmp
mov
clc
xor
or
cs
enter
xchg
xchg
xor
adc
mov
mov
pop
xchg
jmp
xchg
inc
sub
or
imul
adc
out
cmp
cmpsb
pop
sub
pop
mov
adc
ficoms
hlt
ljmp
mov
test
movsb
adc
icebp
out
cs
xchg
out
roll
fists
xchg
sar
arpl
fcoml
repnz
insb
push
test
mov
dec
pop
push
pop
aad
pop
pop
xchg
dec
jns
imul
cld
xchg
xchg
cmp
and
cmp
rorb
inc
push
cs
pop
sub
jl
fisubrs
test
xchg
aam
dec
or
cmp
int3
mov
fstps
popf
jl
mov
sub
adc
mov
dec
mov
int
push
and
jle
imul
nop
jecxz
dec
xchg
insl
es
cmc
daa
xchg
into
or
insb
insb
xor
pop
cwtl
fidivrs
inc
cmp
add
pop
inc
push
out
icebp
adc
loopne
inc
test
jmp
and
enter
lds
mov
jp
push
loopne
mov
sahf
sbb
inc
adc
rorl
nop
mov
xchg
outsb
and
aaa
aaa
xchg
lods
out
hlt
cmpsb
pop
rorl
or
cmpsl
insb
adc
xchg
dec
test
notl
imul
add
jmp
cmp
lret
out
das
xchg
adc
or
lods
push
mov
adc
mov
add
push
jp
jb
outsb
mov
sbb
popf
sub
loopne
mov
gs
test
stos
and
jmp
ret
pop
jbe
sarb
mulb
jo
pop
mov
sbb
jae
xchg
mov
movsl
push
pop
sub
xor
mov
or
dec
xor
imul
sti
repz
mov
scas
sub
push
adc
lahf
mov
addl
cmp
sub
inc
fcmovu
cmp
out
or
sub
cmp
push
add
rcll
outsl
cld
xchg
mov
mov
adc
and
pop
adc
fwait
je
leave
fldt
loop
xchg
movsl
or
call
push
scas
inc
pushf
insl
fwait
out
add
pop
sbb
call
push
mov
push
push
sti
adc
hlt
jo
and
or
mov
repz
mov
sbb
inc
mov
stos
cmp
inc
popf
cmp
push
icebp
out
inc
subl
adc
sti
jnp
mov
aaa
xchg
out
inc
cmp
pop
sub
pop
addb
scas
inc
inc
sbb
aaa
xchg
nop
ret
or
pop
xlat
scas
xor
loop
aad
jae
inc
add
nop
cmpb
inc
xchg
arpl
pop
outsl
out
inc
mov
pushf
xchg
cmpl
ds
lods
jo
gs
sub
addr16
lahf
sub
adc
jge
jmp
hlt
push
shrd
push
mov
lock
arpl
xor
push
adc
adc
mov
in
dec
xchg
cmp
in
notl
lret
mov
icebp
or
or
jle
shlb
es
fisubrs
ljmp
mov
imul
inc
fidivl
adc
push
push
pop
cmpsl
push
lret
sbb
outsb
push
cld
in
push
pop
imul
inc
insl
out
fmul
nop
nop
dec
lahf
adc
es
mov
fcomip
ja
cmp
mov
and
jno
lods
jne
notl
je
xlat
test
nop
dec
cld
scas
je
in
mov
movsb
lea
mov
pop
dec
imul
mov
scas
jmp
add
mov
fmull
cmpl
das
jae
lea
push
test
jns,pt
cwtl
xor
mov
in
adc
cli
jbe
xchg
enter
lcall
or
pop
cmp
movsb
cmpsl
pushf
xor
mov
mov
adc
outsb
or
out
dec
insl
testl
ds
lahf
add
les
mov
sbb
mov
popa
int3
movsl
js
lods
jg
dec
imulb
insb
sub
leave
and
inc
add
adc
rcl
push
mov
les
or
add
mov
psrld
push
jo
jge
jmp
sbb
lods
insl
scas
jl
xor
push
ret
adc
adc
in
enter
jno
push
mov
sbb
mov
add
cld
scas
inc
inc
push
aad
addr16
icebp
mov
fldl
cs
jnp
xor
test
rorl
adc
es
dec
mulb
xchg
fistpll
insl
xchg
mov
stos
pop
or
clc
add
mov
int3
add
gs
xchg
jb
loop
dec
bound
mov
push
cwtl
test
add
add
into
out
push
mov
fdivs
call
cmpb
add
std
scas
push
jb
div
movsl
lahf
scas
push
fidivrl
adc
subl
adc
pop
repz
fwait
xlat
mov
jmp
mov
cs
cs
daa
push
xor
pop
arpl
repz
xor
push
add
cli
jge
out
lcall
pop
sbb
add
sbb
iret
fidivl
lahf
pop
mov
add
jnp
inc
cwtl
mov
mov
repnz
out
repz
or
test
outsb
sub
adc
xchg
add
imul
mov
dec
push
div
pop
mov
test
adcl
add
or
fdivp
mov
mov
xor
fnstenv
adc
popa
inc
xchg
fimull
jno
pop
lock
mov
out
xor
jl
xchg
or
adc
inc
mov
sbb
insb
rcll
xchg
xor
in
bound
dec
nop
mov
dec
or
cli
loopne
in
xor
mov
sbb
call
cwtl
sbb
push
testb
sub
pop
test
mov
mov
ja
xor
lahf
or
out
ds
xchg
xchg
cmp
in
pop
mov
mov
aas
mov
lock
fwait
xor
lcall
lods
mov
push
jge
mov
jnp
push
subl
add
xor
sub
orb
aad
dec
je
sahf
cs
rorb
lahf
inc
xchg
arpl
pop
clc
jnp
adc
xchg
push
push
push
pusha
add
nop
cmp
cmc
pop
pop
mov
xor
xchg
pop
jnp
and
adc
sub
dec
fdiv
mov
pop
lahf
pop
or
call
movups
cmp
sub
jne
fdivrl
inc
std
push
mov
push
push
sbb
mov
xchg
mov
xchg
mov
movsb
sbb
je
loope
adc
add
stos
ja
and
cmc
cmc
pop
popl
inc
daa
scas
test
push
ja
mov
mov
fldenv
adc
lahf
lahf
inc
sbb
add
cmp
test
add
inc
mov
addr16
add
cmpsb
scas
xor
sub
xor
andl
rcl
and
xchg
sbb
cmp
sbb
scas
push
ret
pop
add
mov
shll
pop
aaa
jns
test
fldl
out
jl
loope
nop
ret
mov
repnz
pop
movsb
sbb
sarl
or
enter
xor
call
aam
push
scas
xor
xchg
lock
or
out
fcoms
lcall
lods
dec
ljmp
out
shr
cmp
dec
cmp
pop
jl,pn
add
xchg
xchg
call
adc
push
call
bound
xchg
out
xor
mov
shrl
and
fwait
jl
pop
out
imul
xchg
add
ret
int3
pop
out
inc
add
jbe
aad
push
push
loop
push
mov
out
push
aam
adc
xchg
int
adc
adc
mov
bsf
hlt
out
lock
stos
roll
push
sbb
cwtl
dec
div
movsl
dec
or
leave
adc
out
push
aam
cmp
dec
xor
out
inc
add
mov
jae
sub
xchg
outsb
pop
jmp
xchg
popf
xor
mov
dec
or
lock
lods
lcall
sub
pop
jle
adc
mov
cmp
cwtl
in
arpl
dec
lea
or
movsl
js
in
mov
sub
dec
pop
inc
ret
inc
and
lds
stos
adc
inc
xor
mov
or
sub
push
mov
pop
sub
inc
xchg
xchg
pop
sub
inc
test
cmpsl
adc
xchg
iret
adc
and
sbb
mov
add
jle
cmpl
movsb
repz
frstor
aas
cmpl
or
add
push
stc
xor
mov
lahf
std
dec
xchg
inc
lds
mov
xor
xchg
dec
add
inc
pop
stc
dec
xchg
loope
jno
fcomip
pop
mov
es
xchg
xor
inc
xchg
iret
hlt
xor
mov
dec
jb
filds
dec
fs
icebp
xchg
sub
sub
daa
inc
sbb
sbb
mov
aas
mov
enter
xlat
out
push
adc
js
aas
jbe
xchg
jge
jnp
daa
decl
mov
adc
jb
jb
fldt
inc
add
mov
adc
cltd
pop
call
imul
aas
insb
insb
dec
divl
sub
jecxz
cmp
nop
pop
mov
xchg
xor
mov
movsl
push
popa
enter
mov
jo
arpl
push
mov
add
or
pop
notl
leave
popf
mov
je
mov
mov
loope
cmp
cld
dec
fs
jbe
sub
in
mov
mov
adc
loop
into
jnp
repnz
dec
mov
or
cmp
inc
ss
sbb
enter
pop
pop
or
fdivs
rcl
cs
mov
lcall
das
fsubr
popa
adc
dec
mov
cmpl
fdiv
xchg
fsubs
cmc
cmc
pop
mov
idivl
aas
mov
and
pop
in
decb
ds
ss
movsl
andb
in
xor
push
jg
jge
push
popf
inc
xor
cmp
pop
pop
ret
mov
mov
lret
aam
dec
dec
testl
push
mov
test
cmpsb
xchg
mov
and
mov
leave
inc
jmp
adc
xchg
movups
sub
ret
inc
mov
lahf
ja
fcompl
insl
aam
jbe
ficompl
subb
mov
out
inc
add
lcall
test
sbb
aaa
pusha
sbb
pop
pop
je
dec
testl
push
pusha
xor
cmpsb
inc
adc
mov
sub
nop
push
sbb
icebp
dec
xchg
adc
mov
pushf
into
mov
lods
sbb
and
aad
jae
push
push
hlt
inc
cwtl
dec
or
repnz
and
lods
insb
lcall
pop
xchg
jae
push
lds
clc
xor
scas
cli
sub
cli
push
shrb
outsl
cmp
pop
inc
aam
lret
cmp
mov
push
push
adc
scas
inc
pop
sbb
push
addr16
xchg
icebp
icebp
sar
fwait
loope
sub
in
sbb
out
lea
rcll
and
mov
pop
jmp
push
mov
jns,pt
dec
sbb
xchg
andb
jl
shl
fdivrs
mov
mov
insl
jmp
rcrb
cmpsl
ret
out
adc
adc
inc
out
nop
pop
adc
add
pop
adcl
lcall
repnz
pop
loopne
movd
movsb
lds
fcomp
push
cmpsl
insb
xorl
rcrl
icebp
or
mov
pop
jns
adc
ss
jg
jae
jmp
in
fstpt
and
push
push
add
dec
sbb
pop
mov
sub
lods
and
jae
pop
clc
inc
test
xchg
jnp
jmp
and
dec
lcall
push
sbb
sub
lret
xchg
cmp
lahf
test
jb
sbb
dec
mov
mov
lods
add
pop
inc
mov
fwait
sub
and
cli
std
aad
mov
xor
inc
cltd
or
mov
mov
add
sar
mov
xchg
cmp
daa
sahf
int3
xchg
inc
push
fs
and
pop
andb
lret
sub
mov
gs
sbb
and
adc
imul
sti
dec
arpl
xchg
cmp
loopne
push
lcall
mov
repz
sub
lods
lea
popf
lock
pushf
dec
or
insb
mov
addr16
pusha
out
xchg
stos
mov
push
lret
hlt
xchg
dec
cmp
dec
rorl
aam
fmuls
pop
data16
mov
push
or
pushf
adc
mov
cmp
stos
mov
xchg
adc
or
cmp
insb
mov
cmpb
loope
lods
pop
add
cmpl
mov
dec
enter
fcoms
push
cmp
andb
popa
inc
mov
test
jnp
popf
sbb
insb
dec
dec
imul
mov
xchg
sbb
stos
fidivs
inc
mov
insl
or
ss
std
mov
fwait
mov
sbbb
and
push
fstl
dec
sbb
pop
jae
sbb
jp,pt
ljmp
jo
xor
pop
divb
ret
jno
or
lods
xchg
test
mul
and
std
jmp
packuswb
test
into
dec
icebp
add
je
inc
sub
xchg
inc
aas
popf
xchg
and
sub
sbb
dec
loopne
sub
fidivrs
stos
add
sbb
push
mov
int
xchg
and
cs
inc
lods
and
aad
jge
push
adc
gs
cmp
xchg
outsb
mov
mov
outsl
xchg
es
mov
je
mov
cli
jl
adc
loop
cmp
jmp
leave
push
shll
imul
pop
mov
std
push
das
xor
pop
xchg
pusha
sbb
push
dec
lea
and
push
loopne
fnstsw
ret
inc
sti
xlat
shll
inc
sbbb
jb
stc
aas
adc
push
mov
mov
cmp
imul
cmp
fbld
loopne
cmp
nop
and
fistpll
add
js
push
add
pop
mov
imul
add
pusha
add
adc
ds
or
frstor
lahf
xor
mov
fimuls
jno
ret
jg
sub
mov
shrl
ja
pop
lahf
jb
push
shr
xchg
hlt
mov
subl
sahf
fimuls
dec
aad
cmp
xor
lods
gs
incb
jmp
xor
mov
jno
pop
xchg
cmp
cmc
dec
mov
fwait
xlat
ss
iret
jnp
fadds
call
into
jg
xlat
jbe
test
sahf
loop
fnstsw
inc
popf
insb
lcall
test
in
int3
movsb
cmc
cmpsl
dec
jns
push
push
and
mov
xlat
stos
cmp
jge
pop
jnp
pop
stos
or
daa
jecxz
adc
popa
xchg
and
lods
das
mov
push
ja
insl
test
jo
cli
movsb
mov
jns
xorl
or
pop
mov
icebp
pusha
fsts
cmpl
sbb
jg
xlat
mov
add
mov
ljmp
adc
xor
loope
arpl
jae
dec
lock
xchg
xor
push
rorl
mov
sub
int
lahf
jbe
cmp
je
loope
jb
push
mull
cs
mov
jmp
es
push
mov
sbbl
mov
cmp
test
fbstp
pop
add
cs
test
jbe
dec
mov
decl
dec
pop
sahf
aam
jae
call
push
test
mov
call
or
xchg
inc
lea
fscale
pusha
lret
sbb
push
or
sbb
or
test
mov
pop
sub
mov
enter
dec
stc
lcall
push
mov
jmp
adc
jns
test
nop
ljmp
mov
cld
iret
iret
popf
loope
adc
cmp
in
popa
xor
jecxz
es
pop
mov
jmp
mov
dec
add
subb
in
outsl
cltd
cld
mov
mov
xor
test
in
addr16
inc
call
fnstenv
mov
daa
cli
test
jp
xor
mov
je
pushf
ret
mov
popf
stos
push
cwtl
dec
lret
in
aas
sub
cmp
sbb
adc
daa
std
inc
add
jp
mov
jecxz
xor
xor
push
push
sbb
cmc
outsl
or
icebp
imul
andl
loope
mov
lret
inc
xchg
xchg
mov
mov
mov
sbb
loopne
jae
ljmp
bound
sti
int3
popa
pusha
jno
xchg
bound
sub
jle
mov
dec
fcmovnb
mov
xor
in
sbb
push
push
imulb
movb
mov
mov
pop
outsb
ret
test
sbb
pop
pop
xchg
out
sahf
mov
mov
out
push
adc
daa
sub
sub
push
pop
out
fldcw
push
sbb
loope
inc
shr
or
pop
jns
xchg
adc
aas
xchg
xchg
dec
mov
mov
lcall
es
int3
out
mov
insb
ds
out
les
mov
cli
movsb
adcb
mov
jecxz
int
push
pop
jmp
lret
jmp
fildll
aaa
sub
pop
inc
jo
mov
pop
jp
and
push
jnp
fsubrl
ficomps
pop
cltd
lret
stc
addr16
mov
cld
mov
mov
ss
mov
mov
jno
outsb
sbb
dec
outsl
mov
jge
notl
lcall
adc
cmp
outsb
xchg
ficomps
jb
stos
push
jg
add
sub
jg
fcomps
ret
xor
imulb
lods
and
adc
push
lds
push
js
pop
js
mov
notl
subb
outsb
loop
rol
test
add
nop
cmp
xor
in
arpl
vmwrite
adc
push
and
stc
inc
clc
and
cli
sti
dec
xor
mov
loope
arpl
or
in
and
insl
or
leave
lock
inc
add
xchg
lds
mov
gs
jae
and
ror
je
daa
pop
roll
mov
add
fwait
dec
jle
inc
push
out
push
jl
stos
mov
jbe
mov
add
js
add
jne
pop
sbb
adc
mov
aam
clc
sub
mov
pop
insb
mov
and
push
add
stos
scas
and
fidivrl
mov
pop
test
mov
cmp
inc
push
mov
jno
mov
lods
and
mov
sti
ss
rorb
sbb
cwtl
or
mov
add
mov
and
shl
test
cltd
scas
jno
mov
sti
pop
cmp
add
rcll
mov
fmulp
xor
dec
cmpsb
mov
loopne
imul
mov
mov
shll
jg
inc
imulb
pop
dec
push
xor
sahf
test
inc
xchg
xor
pop
mov
notl
loop
cmp
subb
int3
popa
popl
xlat
inc
cld
test
jle
pushf
mov
movsb
jbe
dec
enter
or
sbb
or
ja
dec
push
push
pushf
cmp
sub
in
fstps
imul
in
cld
and
jne
cld
jle
mov
scas
call
mov
icebp
xor
lret
outsl
add
adcb
inc
adc
loopne
jl
pop
inc
bound
scas
lea
cmpsb
xchg
push
jno
data16
push
mov
add
xchg
xlat
ficomps
and
jae
cwtl
pop
decb
add
imul
adc
adc
cmc
sub
test
sahf
mov
xor
push
pushf
mov
and
xor
movsl
jo
ret
lds
ja
add
fwait
gs
in
addr16
jecxz
shl
sbb
addb
push
jecxz
dec
arpl
push
sub
push
add
lret
jb
insl
scas
stos
and
inc
fcmovu
popa
sub
and
test
mov
pushf
stos
es
or
add
hlt
rcrl
aad
rcll
call
push
sub
mov
push
aam
mov
out
adc
popf
popf
inc
pop
add
mov
cmp
push
jmp
daa
or
fninit
jecxz
in
push
jb
in
xchg
movups
cmp
aas
stos
dec
es
outsb
pop
cmpsb
fwait
aam
dec
xchg
jnp
repnz
xor
in
cvttps2pi
mov
int
imul
outsb
push
jbe
inc
mov
pop
in
push
mov
ret
xor
adc
pop
and
push
or
and
mov
mov
xchg
mov
lahf
fdivrl
idivb
jbe
aam
pop
add
push
movsl
aas
fidivl
dec
xchg
inc
shlb
loope
or
cld
add
jg
fwait
mov
mov
mov
fnsave
pop
jmp
pop
xchg
sti
add
dec
dec
inc
mov
xchg
push
push
cmp
cmp
pop
js
and
mov
in
dec
andb
inc
jge
fnstcw
in
mov
out
add
cmpsl
xor
movb
and
inc
pop
xor
orl
push
dec
pop
loop
rcr
cltd
push
and
call
sbb
push
ficoml
sbb
jmp
xor
cmc
ffree
mov
push
add
or
mov
sub
out
loope
sbb
push
scas
cmpsl
xchg
arpl
jns
lret
lds
sub
add
fldt
inc
add
call
repnz
loopne
mov
cmp
vmwrite
mov
in
clc
push
das
std
xor
fs
ljmp
sbb
dec
sarl
push
les
in
sbb
bound
xchg
cmp
popf
js,pn
jl
xor
mov
sahf
ficoml
outsb
loope
popf
cmp
cmp
cltd
lock
adc
in
push
arpl
rol
mov
daa
out
pop
or
bound
xchg
in
cwtl
mov
adc
aaa
test
cmpsb
adc
fidivl
sbb
cli
jns
mov
sti
push
dec
std
stc
enter
orb
mov
stc
push
pusha
movsb
mov
das
sbb
jns
mov
daa
sbb
test
adc
pop
xchg
jo
jp
cmp
mov
js
cmpsb
call
sub
shrl
dec
fcomip
fnstsw
dec
mov
dec
dec
pop
in
pop
cmp
les
aas
mov
xchg
adc
pop
jecxz
sbb
cmpsl
fiadds
loope
arpl
in
and
pop
loop
jbe
icebp
ds
loope
nop
aas
pop
mov
test
adcl
mov
and
mov
int
insb
shrl
je
bound
fwait
fwait
aad
mov
dec
pop
cmpsl
push
or
pop
mov
out
jp
jns
cmpsb
cli
mov
jne
xor
imul
mov
sub
xchg
data16
inc
or
loop
int3
add
imul
ljmp
addr16
xchg
imul
jge
jecxz
adc
push
or
adc
and
sub
mov
ja
in
or
dec
sbb
in
mov
xchg
sub
push
mov
add
inc
push
inc
outsl
insb
outsl
jb
add
cmp
or
and
add
xor
ds
pusha
fmuls
fisubrl
and
jmp
mull
les
lahf
je
dec
xor
das
in
push
sbb
aaa
mov
inc
fisubl
rorb
pop
push
xor
xor
cmpb
mov
icebp
clc
mov
add
adc
pop
and
push
pushf
lret
xlat
rcll
sub
jo
dec
loope
stc
and
lahf
fimuls
outsb
push
repnz
cmp
sti
jnp
and
aam
dec
gs
fiaddl
cwtl
cltd
ret
adc
or
jmp
jmp
mov
push
roll
mov
cmpsl
sbb
les
loop
js
jbe
sarb
mov
fcmovne
stos
xor
sub
mov
xor
xor
sbb
ljmp
sub
mov
and
repnz
scas
mov
fidivl
mov
mov
jl
xchg
jle
loopne
pop
dec
lcall
push
into
sub
pop
ljmp
cwtl
out
sbb
pop
inc
fildl
gs
callw
stc
aas
ss
or
scas
mov
das
jno
loope
or
pusha
lcall
adc
and
dec
jle
cmc
push
and
pop
fsts
xor
gs
adc
call
mov
clc
push
xchg
xlat
pop
lock
mov
shl
push
sub
fwait
sbb
loopne
ljmp
xchg
das
outsl
inc
push
in
imul
dec
xorl
cld
ret
aas
cmp
lret
mov
pop
gs
pop
aad
adc
mov
jne
idivl
dec
int
sub
es
or
js
clc
ss
out
jbe
sbb
into
dec
out
lret
mov
jae
jecxz
lods
popf
insl
rcrb
stc
xchg
mov
ss
fistpll
or
push
fmuls
jge
pushf
cld
xchg
mov
push
insl
and
je
jl
xor
push
pushw
add
ljmp
ret
cltd
fdivs
sti
dec
test
sbb
mov
mov
add
mov
inc
fcmovnu
pop
adc
cli
lcall
pop
nop
cmpsb
inc
call
fisttpll
lock
add
xor
aaa
out
pop
sar
push
ret
addr16
mov
lret
jae,pt
mov
push
or
mov
std
and
mov
mov
sbbb
in
push
cli
rcll
fbstp
nop
mov
mov
adc
scas
mov
push
pushf
loop
xor
lods
cmpsl
popa
lods
roll
mov
push
jnp
test
jne
sub
adc
xor
aaa
or
popa
push
mov
into
cs
fiadds
in
xor
push
das
lahf
inc
fs
gs
popl
and
and
pop
loop
sbb
in
mov
mov
rclb
mov
mov
rorl
ja
int
and
pop
fnstsw
xor
jg
ror
das
mov
movsb
repz
iret
mov
or
add
xor
inc
mov
not
inc
push
out
and
out
push
js
orb
das
neg
xchg
inc
in
js
push
xor
mov
or
stos
cmpsb
std
dec
stos
sub
out
pusha
inc
fcmovu
push
and
stos
pushf
mov
movsl
lret
addr16
mov
mov
jge
jns
mov
fmuls
xchg
sbb
sub
out
or
ja
lds
sub
lret
sub
sbb
std
inc
iret
mov
dec
les
pop
and
or
cmp
mov
mov
and
add
add
jne
mov
popf
dec
stc
jb
mov
and
or
inc
rorb
divps
xor
repz
stc
bound
pusha
xchg
fcoml
pop
clc
sbb
cmc
rorl
adc
mov
push
dec
cmc
sbb
mov
cmp
xchg
arpl
pop
mov
into
or
xchg
in
fwait
ja
xor
jmp
adc
sub
movsb
dec
push
xchg
mov
cmp
cmp
rcrb
sbb
test
ficoms
add
xchg
daa
arpl
imul
test
fucom
repz
out
mov
repz
lret
mov
push
out
and
clc
mov
and
mov
mov
cmpsb
push
leave
push
cwtl
js
out
and
rcrb
cmpsb
sbb
out
pusha
dec
movsl
inc
inc
fbstp
mov
dec
or
in
push
insb
inc
aam
sbb
dec
or
push
mov
fcompl
inc
jne
jnp
or
xor
cld
scas
clc
bound
das
shrb
aam
repnz
push
iret
daa
notl
push
sub
sub
pop
xor
pop
or
adc
jae
cmpsb
mov
xor
loope
scas
out
scas
movq
xchg
call
mov
pusha
push
movsbl
mov
pushf
lea
jmp
pushl
pushf
lea
jne
xadd
btc
neg
mov
rcr
sub
adc
mov
clc
jmp
xor
jecxz
sub
or
push
mov
jge
mov
pop
lret
jbe
shlb
addl
pop
mov
adc
cmpb
adc
add
or
pop
aad
dec
sub
mov
roll
orb
negl
or
xchg
in
mov
push
fnstenv
pop
ret
outsb
ret
inc
add
add
iret
add
sbb
mov
sbb
jp
pop
mov
sub
dec
dec
cltd
add
scas
or
shrb
imul
jg
dec
dec
xchg
jne
lahf
insb
jl
pop
mov
add
mov
or
push
push
sti
cmp
sub
lret
xor
inc
adc
xchg
push
aad
sub
adc
xor
and
pop
aas
add
add
mov
ss
pop
adcb
and
in
movsl
jp
test
stos
jne
xor
jb
jo
sbb
or
outsb
cwtl
adc
add
xor
aam
push
lock
div
xchg
pop
push
in
mov
jne
cli
ss
sbb
adc
lret
dec
mov
out
mov
push
jg
scas
inc
insb
aad
movsb
mov
icebp
mov
adc
repz
test
in
lcall
sub
sahf
xchg
lea
call
call
pop
daa
mov
mov
push
sbb
daa
lahf
ljmp
loop
mov
and
xor
repz
fmull
mov
pop
jmp
fsts
add
test
lock
shll
jl
nop
xchg
lods
stc
popa
es
jne
mov
cwtl
imul
mov
iret
aaa
clc
mov
pop
lcall
jbe
fiaddl
cmp
mov
cmp
fs
xor
or
cmp
btc
stos
push
add
cmp
mov
push
fstps
xchg
pop
jne
fmull
add
ds
mov
add
lods
bound
lcall
or
jl
fstpl
movsl
sub
ret
cmp
rcll
add
ret
arpl
cmp
push
mov
aad
dec
add
js
cwtl
adc
or
mov
ss
jae
arpl
xor
push
add
sbb
jb
inc
fdivs
and
iret
mov
adc
and
outsl
lock
jb
dec
stc
stos
push
clc
arpl
dec
mov
sub
add
fistps
aas
ja
mov
cltd
insl
hlt
and
or
inc
mov
enter
stc
mov
push
loop
lahf
mov
into
cld
clc
mov
xlat
cmpsb
enter
test
testb
aaa
test
mov
add
jbe
dec
mov
out
into
icebp
mov
cli
jmp
sub
es
inc
ficomps
or
pop
dec
mov
xchg
gs
add
cmc
aad
aad
in
or
out
inc
stos
call
fisubrs
and
ret
jl
adc
andl
fwait
dec
pop
mov
insb
sbb
shll
pop
stc
push
jp
aam
or
cmp
mov
in
mov
lods
pushf
inc
rorl
cmc
mov
sbb
out
cld
lret
subb
fninit
or
js
cmp
outsb
mov
pop
call
or
pop
stc
sub
pop
call
in
xor
jecxz
mov
cmc
cmc
cmc
cmc
neg
jmp
sub
stc
cmc
clc
pushl
popl
cmc
cmp
jmp
dec
mov
pop
lret
mov
fwait
stos
adc
test
push
and
fidivrl
dec
seto
fcoms
in
js
adc
or
push
push
je
inc
or
xlat
jecxz
mov
dec
jp
inc
lret
inc
cli
aas
adc
repnz
jns
push
bound
and
stos
mov
sub
jmp
sub
and
mov
lds
bound
ja
inc
sti
repz
shrl
cli
test
lds
sti
or
mov
add
pop
mov
mov
in
cwtl
xchg
out
cmp
pop
int3
test
add
lret
pop
dec
repnz
cmp
scas
rcrb
clc
sbb
div
add
push
xchg
push
punpckhwd
sti
shl
jge
jmp
jno
nop
repnz
push
push
cmp
repnz
call
out
movsl
and
and
xchg
mov
dec
mov
pop
movsl
sbb
lahf
cwtl
scas
adc
shl
xchg
xor
in
sub
push
lods
sub
insl
imul
inc
loope
sarb
pop
inc
sbbl
xor
pop
jmp
out
inc
popf
dec
scas
xor
mov
mov
add
andl
je
sbb
inc
in
pusha
push
sub
jmp
fdivl
dec
scas
daa
repnz
pop
mov
fdivs
lds
out
das
inc
xchg
xor
fdiv
and
aam
shll
mov
lods
mov
fbld
movsb
inc
jmp
cmp
dec
lods
and
jl
jne
and
loopne
xor
pop
and
repz
hlt
sarb
sbb
sub
jns
scas
and
mov
scas
jp
jge
push
mov
pop
inc
mov
sbb
pop
mov
lea
jmp
adc
mov
call
and
add
mov
call
dec
pop
aaa
sub
pop
in
aad
push
int
in
enter
iret
shrl
cmp
dec
aam
sbb
xor
sahf
sbb
js
mov
xor
popaw
pop
mov
mov
mov
adc
push
and
jecxz
div
loope
divps
aam
ret
ja
sub
jl
sbb
sarb
pop
scas
sub
or
cmpsb
js
mov
and
adc
movsb
mov
std
xor
outsb
mov
pop
push
inc
nop
add
fmuls
push
ret
sar
fidivs
and
shll
pop
andl
int
push
xchg
mov
mov
js
repnz
cmp
push
lods
jae
js
ja
inc
stos
pop
pop
mov
mov
loopne
loop
push
pop
mov
out
push
in
inc
leave
js
loop
ret
mov
add
mov
pop
inc
mov
mov
lret
stos
jne
and
sub
or
jns
stc
inc
mov
jbe
mov
loope
aam
pop
or
xchg
cmc
cli
xchg
and
xchg
mov
pusha
xchg
push
xchg
iret
mov
mov
cltd
cs
push
mov
jo
fdivrp
pop
cmp
ja
sahf
and
inc
enter
ds
and
stos
sub
push
out
test
inc
mov
loop
pop
sub
mov
mov
or
stc
bt
sub
push
cmp
movw
pushf
call
sahf
adcl
sub
mov
mov
xchg
fisubl
repnz
mov
xchg
fbld
jl
xchg
jge
out
int3
mov
jns
jmp
mov
mov
push
cmp
int3
push
inc
ljmp
aaa
mov
sub
add
out
jl
insb
push
test
repz
and
lds
hlt
in
lahf
call
and
jne
pusha
mov
push
test
add
pusha
movzwl
sbb
shr
add
mov
bt
call
rep
call
int
data16
and
fcmovnu
stc
mov
testl
add
jg
js
test
fsubl
loop
push
mov
lret
fyl2xp1
rcll
pushf
ds
adc
xchg
sub
mov
mov
int3
insb
xor
xor
jp
lea
rorb
fdivr
jae
dec
inc
icebp
jnp
stc
imul
out
add
or
cli
push
pushf
pop
dec
mov
xor
xchg
outsl
outsl
inc
popa
scas
mov
test
imull
data16
pushf
lahf
xchg
sti
and
or
inc
cmp
cmpsb
negb
sbb
push
cmp
sub
stos
push
jbe
adc
jl
daa
jns
cmp
jns
pop
sbb
out
mov
jo
and
jge
bound
out
testl
or
imul
push
loopne
sub
or
mov
jp
mov
jbe
cltd
xchg
loope
xchg
pop
addl
les
std
xchg
lods
cmp
rol
pop
insl
andb
mov
xor
out
sub
xor
mov
js
stos
lret
dec
mov
add
cmpsb
jo
jecxz
sub
into
adc
xchg
scas
cmp
scas
orb
stc
or
repnz
inc
push
push
mov
mov
fwait
lock
call
repz
ja
inc
int3
xchg
dec
push
fldt
in
ret
or
xchg
loop
pop
rorb
xchg
mov
divl
and
jnp
jbe
push
ja
cmp
testw
sahf
imul
sbb
test
push
stc
shrl
push
add
arpl
stos
sbb
sar
mov
and
ljmp
ljmp
inc
dec
push
mov
push
fbld
jb
lret
or
inc
test
push
out
imul
sbb
cs
xchg
cwtl
enter
push
inc
icebp
add
and
mov
push
mov
mov
fbld
sub
push
fstps
aam
cmp
cmp
fdecstp
mov
cmp
je
lea
roll
imul
push
push
sbbl
scas
out
cmc
xchg
lock
out
push
and
mov
and
sti
mov
dec
out
enter
call
cmp
pop
push
push
inc
add
and
mov
bound
bound
std
dec
jb
adc
cwtl
push
and
jno
sarb
inc
popa
xchg
jp
sub
stos
xchg
aaa
data16
std
mov
in
inc
int3
jecxz
rcll
xchg
mov
aam
fildll
xchg
add
outsl
and
das
test
mov
sbb
mov
mov
lods
repz
cmp
jae
xchg
call
mov
pop
xchg
outsb
sub
mov
loop
mov
add
jb
or
mov
rclb
sbb
and
mov
pusha
push
mov
lahf
nop
dec
outsl
inc
cmpsb
fnstcw
mov
fwait
test
mov
test
cltd
sub
adc
call
cli
in
cmp
pop
xchg
je
icebp
repz
mov
inc
addr16
xchg
pop
pop
xor
push
jbe
fcmovne
or
xchg
or
push
std
icebp
or
nop
add
mov
fwait
test
int3
clc
and
cmp
sub
or
add
stos
sbb
and
rcrl
into
inc
shrl
into
and
inc
sbb
sub
les
inc
repnz
mov
sub
push
or
jnp
xor
and
frstor
shll
fwait
leave
repz
push
dec
mov
outsb
dec
stos
push
jmp
sti
daa
loope
xor
xor
mov
mov
loopne
mov
je
cmp
lds
xor
xchg
inc
xorl
xor
pop
sbb
push
scas
pop
das
rcrb
push
cmp
xor
loope
ljmp
and
sbb
or
xor
push
and
sti
inc
or
dec
xchg
push
pop
sbb
inc
test
cmp
lcall
or
mov
popa
aas
dec
notl
push
adcl
mov
mov
mov
push
stos
pop
sub
orl
cwtl
jecxz
js
sti
mov
mov
push
mov
cmp
mov
mov
jmp
sbb
movsb
sarb
testl
mull
lret
jmp
push
pop
mov
pop
mov
dec
and
pop
and
and
mov
stos
fsts
or
stos
leave
fnstenv
add
test
pop
in
pop
jb
popa
push
add
add
shrb
nop
fsubrs
dec
ret
es
mov
mov
jmp
sbb
addr16
push
or
add
es
ja
scas
jbe
dec
scas
int
testl
jl
addr16
shrl
pop
testl
adc
test
pop
cld
inc
int3
loope
lret
int3
xor
xchg
or
ret
aam
pop
rolb
sub
fisubrl
add
xchg
sbbl
cmc
mov
out
cld
cmc
movsl
out
mov
push
adc
fs
fimuls
jl
cld
adc
and
pop
in
inc
pop
jbe
xor
in
dec
adc
das
lret
gs
push
negb
push
pop
add
sbb
in
xchg
cld
inc
jge
or
mov
jns
add
cmc
and
les
addr16
call
es
dec
pop
cmpsl
clc
daa
push
mov
jge
outsb
popf
xlat
jns
lcall
bound
pop
mov
orb
cld
jo
and
bound
inc
xor
xor
xchg
dec
cmp
jne
jno
in
xchg
fildl
xchg
std
gs
movsl
pop
out
xor
jb
std
and
pop
and
loop
cmpsb
mov
or
fs
rcrb
sub
mov
add
scas
andb
daa
ss
xor
pushl
test
push
push
push
lea
je
cmc
bt
sub
stc
jmp
sub
stc
pushf
push
cmc
rol
cmc
cmc
mov
not
push
push
stc
neg
call
pop
sti
inc
hlt
and
clc
mov
mov
test
lret
add
aam
popf
loop
dec
gs
mov
inc
sbb
xchg
cmp
lret
hlt
push
xchg
pop
cmp
out
dec
fimull
adc
jbe
mov
std
adc
xor
push
rcll
pop
mov
lods
adc
cmp
push
sub
mov
rcll
pop
insb
mov
push
lea
jmp
ds
hlt
and
mov
pop
mov
jno
dec
mov
dec
mov
mov
push
mov
sbb
in
push
sbb
cmpsl
aaa
imul
cmp
inc
sub
stos
lcall
add
or
jge
mov
int
sub
lcall
sbb
fcomps
lods
addr16
add
push
adc
js
mov
dec
push
movsl
cld
rorb
fistl
repz
mov
push
dec
mov
pop
sarb
dec
or
and
or
jle
cmp
cmpsl
mov
pop
sub
pop
mov
mov
movsl
orb
je
out
lea
mov
mov
data16
mov
ficomps
imul
cmc
adc
push
out
popf
cmpl
movl
mov
adc
in
xor
mov
pushf
push
fsubrs
leave
jp
repz
sub
fwait
xor
mov
mov
mov
insb
popf
add
add
lret
repnz
xor
lods
dec
sbb
cmp
pop
add
repz
inc
add
repnz
sahf
mov
and
das
mov
pop
jae
fcomps
fiadds
adc
jno
ljmp
in
pop
lea
je
call
push
je
repnz
inc
fsubr
arpl
rolb
in
arpl
push
dec
je
imulb
push
jno
movsb
fidivrl
pop
jb
jne
div
call
mov
adc
gs
push
ja
sbb
xchg
fnstenv
push
mov
fcoml
sub
repnz
jle
xor
in
lods
inc
pushf
lods
sbb
jg
loop
xor
test
inc
push
stos
popf
jns
scas
dec
out
scas
in
sub
push
adc
mov
jl
rorl
jbe
gs
int
xor
in
or
mov
jmp
add
dec
jmp
ljmp
aaa
insl
stos
popf
faddl
out
or
aad
scas
jbe
pop
sub
das
lret
cmpsb
cltd
pop
loopne
loopne,pt
and
jno
fnstsw
rorb
sbb
icebp
sarl
scas
movzbw
mov
setno
lea
pusha
pushf
jmp
rorb
and
stos
push
pop
out
xchg
mov
arpl
bound
mov
je
sub
mov
add
cmp
pop
jp
mov
enter
lods
aaa
mov
adc
stos
hlt
dec
dec
rclb
xor
xor
aaa
pop
mov
sbb
push
push
xchg
test
pop
aad
roll
dec
dec
jg
dec
lcall
pushf
add
dec
mov
loopne
lds
mov
les
jnp
add
add
sub
orl
enter
push
lret
and
xlat
sbb
mov
sahf
mov
popa
fnstcw
and
fxch
mov
jb
frstor
test
mov
not
sub
inc
fs
lret
aad
cmpsl
add
adc
mov
push
or
sub
add
movsbw
rcl
ror
and
mov
dec
mov
clc
stc
bt
repnz
jmp
jge
mov
and
gs
divb
enter
push
jge
inc
xchg
mov
fwait
stos
push
mov
stc
adc
sub
movsl
add
stos
lret
xor
mov
stos
or
aaa
add
lods
cld
out
sar
cmp
and
pushf
jle
lret
pop
xlat
aam
push
loopne
into
xchg
clc
scas
das
dec
das
pop
push
xchg
xor
cmp
push
int
subl
bound
add
lds
mov
std
int
sbb
xlat
push
fldt
lea
call
push
pusha
pusha
jmp
jb
cmc
lock
stos
addr16
mov
inc
ss
ss
xorl
div
push
out
stc
es
pop
push
imul
add
or
xor
fisubl
xchg
sbb
sbb
pop
pop
fadds
and
xor
fldt
or
sbb
mov
jae
in
mov
dec
insb
or
push
pop
jb
sub
dec
data16
sub
aad
mov
dec
fcmove
lahf
adc
loopne
xchg
jmp
xchg
aam
dec
out
and
call
insb
mov
in
or
adc
pop
je
pop
inc
xchg
dec
dec
push
mov
test
push
int3
jnp
add
jg
inc
scas
sahf
sbb
add
xchg
stos
mov
mov
push
mov
aaa
scas
or
pushf
push
in
jge
cmp
loopne
lods
dec
imul
jo
popf
push
adc
inc
mov
gs
push
dec
pop
mov
xchg
sbb
arpl
push
lea
cld
pushf
and
test
mov
jp
outsb
aas
dec
push
sbb
fcmovnu
call
adc
shrl
aas
dec
lock
dec
mov
mov
das
pop
xchg
test
lcall
or
in
fld
cmp
add
dec
pop
pop
adc
popf
addr16
cmp
test
testl
mov
mov
jae
xor
jae
in
mov
subl
cld
adc
sub
daa
dec
push
push
inc
push
xor
cs
insb
add
orl
add
sbb
pushf
pusha
lea
jmp
mov
out
and
add
or
loop
xor
int
aad
mov
aam
xchg
pop
test
mov
xchg
imul
cmpb
ljmp
push
fmulp
hlt
nop
in
outsl
xchg
loopne
xlat
jno
or
cmp
mov
jne
sub
subb
push
jb
push
in
sub
push
loope
or
adc
or
aam
adc
sbb
mov
mov
std
and
rorb
push
push
mov
pop
ret
shl
sarl
or
xchg
or
sbb
adc
push
arpl
add
hlt
sub
cmp
jns
enter
mov
daa
shll
stc
ret
in
scas
fbstp
imul
jae
add
sahf
or
sbb
fsubl
pop
mov
sti
fcmovne
xchg
inc
mov
daa
or
popa
out
jg
and
and
xchg
les
stos
hlt
xchg
je
roll
sbb
test
xor
int
xchg
xchg
mov
cmpsl
xchg
sub
dec
ljmp
rorb
push
movsb
scas
sbb
lods
outsb
loopne
xor
fadds
dec
mov
sub
ret
call
shr
bound
ds
icebp
add
mov
fisubrs
pusha
sub
sahf
dec
sbb
push
and
jl
ljmp
fisubl
int
sbb
outsl
loopne
dec
inc
push
dec
inc
dec
xor
cs
insb
add
and
mov
add
sub
sbb
mov
scas
imul
sbbb
mov
lods
cwtl
mov
mov
popa
testl
add
daa
arpl
lret
leave
add
sbb
cmpsb
sbb
sbb
mov
cmpsb
pop
cmp
mov
sarb
lret
push
pop
in
and
sarb
into
addb
xorl
xor
lds
mov
leave
scas
aad
jp
cmpsb
sbb
insl
popf
fstpl
add
arpl
insl
cmc
imul
in
pop
lds
dec
inc
mov
into
fbstp
mov
outsb
daa
mov
and
cld
sub
mov
push
std
ret
push
push
test
aam
mov
outsb
cmpsb
sbb
repnz
aam
insl
mov
insb
lods
push
lods
int3
repz
shlb
or
and
mov
dec
and
dec
jmp
js
push
jmp
les
es
pusha
shr
push
and
mov
pop
xor
je
push
and
adc
aam
push
cmp
rcrb
test
and
das
add
cwtd
jmp
or
das
jmp
xor
or
lea
mov
dec
add
fsts
xor
scas
fdivl
dec
popf
es
xchg
dec
cmp
je
out
test
and
sbb
and
xchg
cs
lahf
fildll
adc
cmpsb
mov
xor
pop
sahf
dec
daa
pop
xchg
cmp
jno
loopne
outsl
sbb
cs
or
and
xchg
jl
es
es
mov
cltd
mov
pushf
jb
and
daa
lret
jne
les
mov
or
xor
xor
or
xor
jno
out
popa
adc
add
pusha
xor
mov
mov
js
lret
in
inc
gs
movsb
or
cli
rclb
and
int
xchg
jge
out
in
sbb
or
push
sahf
ja
or
xchg
xorl
ljmp
xchg
lcall
sti
adc
jnp
lcall
mov
or
js
push
ljmp
mov
into
rcrb
pusha
loope
rclb
mov
mov
imul
mov
mov
sbb
push
stos
push
mov
push
adc
mov
out
pop
repnz
sbb
imul
lahf
imul
cmpsb
or
fcoml
in
push
in
imul
push
jbe
ret
dec
sub
out
push
mov
int
pmulhuw
cli
jecxz
push
pop
sbb
cmp
mov
rorl
fildll
movb
repz
in
and
push
xchg
es
pop
jns
jmp
popa
jecxz
inc
xchg
mov
or
pushf
cmp
addl
pop
imul
mov
hlt
push
xchg
icebp
clc
fistpll
mov
int3
sub
jb
jge
dec
stos
push
out
fs
loopne
and
gs
adc
sub
sbb
addb
mov
mov
mov
dec
sub
sbb
mov
adc
and
push
cmp
icebp
aad
jmp
subl
loope
mov
int
cmp
mov
jns
cs
inc
and
imul
int
xor
or
inc
or
stc
inc
ljmp
jbe
and
lods
cli
bound
shl
pushf
scas
fdivr
scas
inc
sbb
fdivs
loopne
push
xlat
stc
pop
or
addr16
shlb
push
cmp
test
call
decl
nop
loopne
push
pusha
out
jle
add
mov
fstp
mov
cmp
mov
lds
cmp
cwtl
inc
mov
lds
mov
adc
pop
push
in
cmpsl
dec
int
loop
imulb
xchg
addr16
xor
xlat
shrb
cmp
dec
xchg
sbb
dec
das
xor
lahf
dec
dec
or
mov
scas
out
lock
cld
and
lods
enter
jp
push
mov
xlat
movsl
ljmp
cmp
je
aam
mov
adc
clc
mov
inc
jbe
imul
sub
addr16
mov
lods
mov
mov
xor
jns
roll
test
mov
and
jmp
loopne
cltd
dec
lods
ffreep
insb
scas
push
add
arpl
pop
xchg
out
adc
sub
mov
inc
fstpl
loop
mov
pop
jno
popl
in
loopne
mov
or
dec
dec
inc
or
xchg
ja
rcll
and
sub
dec
mov
jnp
and
mov
pop
lods
adc
les
in
and
push
test
cmpsb
sbb
fbld
mov
stos
imulb
dec
xor
int
jo
int
repnz
add
xor
out
push
notb
xchg
fcmovnbe
sbb
or
and
mov
mov
jge
or
fpatan
xchg
testb
scas
jb
ljmp
jbe
repnz
loopne
fistps
dec
fidivs
mov
outsb
fiadds
add
movb
lea
jne
pusha
mov
pusha
jmp
jmp
cmp
movb
jmp
mov
pusha
data16
dec
inc
enter
xor
mov
lcall
or
sub
mov
filds
add
into
cmp
sub
stc
clc
rol
add
ja
not
cmp
pushf
jmp
push
push
pusha
lea
jne
neg
mov
call
lret
call
pop
xchg
xor
push
cmp
pop
xchg
fs
lcall
xchg
xchg
out
jg
es
cmpsb
xchg
add
push
push
fisttpl
or
insl
cld
in
mov
aaa
mov
ds
ss
jb
clc
loopnew
cmp
sub
stc
xchg
call
test
xor
inc
and
ljmp
movl
pusha
push
push
mov
lea
jmp
pusha
lea
call
call
mov
jb
icebp
fidivs
lahf
roll
mov
out
mov
mov
and
inc
pop
mul
lret
cmp
repnz
lahf
imul
aam
dec
mov
jnp
cmpsb
mov
inc
shrb
jmp
cmpsl
out
xor
lcall
xor
stos
out
pop
iret
int
adc
push
shlb
ficomps
xchg
es
lods
push
imull
aam
xchg
cmp
pop
and
pop
push
dec
sbb
xor
aaa
shrl
and
xchg
sbb
rcr
xchg
movsbw
aas
adc
mov
rcl
mov
pushf
jmp
xchg
shrb
fldl
rcrl
out
into
iret
mov
adc
jmp
stos
in
shrb
ds
jb
mov
std
fsubrs
push
ret
std
cmc
aad
jo
or
and
int
int
lahf
mov
mov
aad
mov
pop
insl
xlat
push
jb
or
aad
cmp
dec
inc
lcall
pop
insb
cld
adc
xor
fsts
cmpsb
out
shlb
xor
cmc
mov
or
inc
xchg
je
scas
jo
jmp
mov
inc
movb
pushf
adc
lea
pushf
pushl
ret
testb
and
mov
mov
mov
scas
das
jns
push
mov
lds
pop
imul
int3
cld
into
ficoms
sbb
sarl
repnz
daa
pop
mov
jne
inc
jl
add
or
cmp
mov
sub
into
popf
pop
setle
or
adc
pop
jbe
aam
into
xchg
outsl
dec
in
cmp
sub
fdivl
scas
insl
xchg
mulb
jg
inc
push
and
insl
mov
fucomi
sbb
push
push
adc
add
lea
call
call
cltd
add
xor
outsl
faddp
mov
jg
add
out
es
mov
mov
mov
scas
and
xchg
ss
cli
or
call
in
iret
out
dec
jnp
jns
sbb
and
xchg
sub
dec
cmp
fdivrs
repz
and
xor
fwait
xlat
js
xchg
xorb
pop
ds
js
and
das
inc
out
and
lods
and
scas
test
sbb
xchg
mov
idivb
xchg
dec
cli
pop
fdivr
lahf
movsl
movb
lea
ja
call
add
add
addr16
jecxz
les
cmp
sti
cmp
stos
add
add
je
adc
fs
stc
inc
inc
push
repz
iret
clc
dec
jb
xchg
mov
mov
sbb
mov
push
cltd
js
sarl
jns
mov
mov
jo
outsl
fsubrs
mov
or
mov
or
cmc
das
jge
dec
pop
movsl
in
insl
jle
sbb
inc
fnstsw
add
nop
ret
data16
or
andl
enter
pushf
cli
lods
dec
sbb
xor
test
add
in
xchg
inc
ficoml
and
orl
dec
push
dec
xlat
xor
loop
les
test
push
cmpsl
pop
xchg
dec
sbb
push
cmovl
xor
xchg
inc
repnz
or
adc
inc
fdivl
imul
mov
sub
pop
scas
mov
es
iret
mov
ror
jp
or
pop
mov
daa
add
pop
pop
loope
fs
ret
mov
leave
aaa
enter
sub
inc
addr16
mov
push
int3
mov
stos
cmc
dec
add
repz
repz
rcrb
enter
enter
les
push
flds
xlat
mov
fdivrs
inc
mov
fwait
xlat
ss
inc
pop
mov
cmpsb
xlat
fisttpl
jl
movsl
xchg
dec
ja
sbb
cwtl
das
cmp
gs
stos
imul
test
pop
adc
jae
and
enter
cmp
or
adc
and
insb
lds
jb
addr16
loope
xor
and
loope
bound
cmp
adc
lods
in
mov
jo
clc
inc
cmpsl
inc
push
jnp
rorl
repnz
maxps
xor
and
repz
pop
mov
adc
test
xchg
jnp
int
mov
mov
cwtl
js
dec
notl
xchg
or
pop
mov
fwait
mov
addr16
lret
js
mov
lea
mov
imul
dec
in
jmp
push
mov
push
out
mov
inc
bound
in
mov
jmp
dec
and
stos
adc
ss
and
add
push
ss
xchg
in
add
jp
and
loop
push
iret
mov
pop
mov
push
xor
mov
add
pusha
dec
ds
sbb
push
lock
out
cmp
out
jns
xchg
jmp
mov
add
rol
xlat
push
xchg
pop
hlt
xchg
bound
popa
mov
addr16
popf
inc
add
and
jbe
inc
jecxz
cmp
adc
out
adc
fidivs
mov
les
mov
or
fnstsw
arpl
add
call
stc
leave
cltd
push
stc
dec
test
loopne
and
cmpsb
push
add
sar
bswap
and
shrd
mov
inc
movzbw
shrd
add
rcr
mov
pushf
test
push
lea
je
xor
sbb
rol
add
mov
mov
pusha
cmc
stc
add
cmp
stc
mov
btc
inc
shl
mov
test
pusha
stc
cmp
jmp
lea
jae
test
cmp
push
jmp
push
lock
std
std
add
insb
xlat
mov
ret
jp
test
int
rcrw
pop
sbb
xor
inc
jl
jge
jns
jno
dec
inc
scas
and
aam
push
enter
sub
test
sub
je
ss
repz
xchg
push
push
mov
cmp
jne
js
enter
rorb
fs
jne
not
call
push
mov
and
aas
loop
cld
dec
rep
mov
inc
jge
fcompl
or
fisttps
and
test
xor
sahf
mov
jae
das
mov
jb
mov
cmp
add
cmpb
adc
into
mov
mov
shl
push
mov
push
sti
pop
dec
divl
imul
and
ror
pushf
and
in
roll
sub
jge
sbb
push
pop
pop
mov
dec
daa
pop
mov
xor
sbb
fisubs
mov
in
mov
sbb
and
or
mov
sbb
leave
mov
and
arpl
push
jb
es
inc
repnz
xor
in
mov
ds
daa
add
test
outsl
push
mov
leave
fisubs
lcall
sbb
jecxz
or
orl
out
pushf
test
pfcmpeq
mov
push
add
aas
add
xchg
pop
pop
lea
add
xchg
mov
lcall
fs
setl
inc
call
jl
inc
frstor
cmc
xchg
ja
mov
imul
pop
dec
mov
push
shlb
jno
push
dec
daa
adc
push
out
cmpsb
das
sub
test
xor
insb
shl
ror
jns
sub
jmp
cmp
dec
imul
push
leave
mov
cwtl
stos
fwait
cmp
lcall
fcomip
movb
mov
and
pusha
roll
mov
test
fdivr
and
push
mov
mov
jnp
sbb
inc
dec
push
arpl
and
insb
jle
mov
das
jle
ror
into
jle
out
xchg
or
nop
jo
cwtl
test
adc
js
cmp
loopne
lods
mov
push
sub
pop
sub
lret
repz
ja
jno
sub
aaa
aas
or
aad
inc
std
xchg
jl
les
aad
scas
hlt
dec
cmp
cmp
add
add
jne
mov
popf
pop
jp
sbb
adc
dec
js
aaa
mov
popa
pop
and
pop
push
push
mov
fs
ja
cmc
imul
jmp
neg
pushf
call
in
fsubl
fcomp
mov
sbb
cli
aam
cmpsb
add
push
add
and
pushf
cmp
stc
mov
fsub
fimuls
test
xor
les
stos
sub
pop
shrl
in
lahf
push
repz
mov
daa
and
out
daa
xchg
and
stos
cwtl
jae
or
popf
push
lret
jge
test
or
and
sbb
and
lock
dec
ss
pop
dec
jbe
mov
dec
lock
adc
cmp
mov
or
xchg
sub
inc
jp
jg
sarl
orb
pusha
push
sbb
sub
xor
mov
ret
cmp
in
xchg
in
and
fnsave
popf
sbb
adc
pop
ja
and
mull
pop
sbb
push
or
repz
cli
movsb
mov
fisubrs
xlat
xlat
or
xchg
cwtl
sbb
inc
cmpsl
lds
decb
sub
filds
icebp
outsl
pop
mov
sahf
mov
sbb
cmp
push
dec
jp
cmpsb
fwait
mov
idivl
call
mov
imul
bound
int
insb
lret
cmpsl
into
inc
lock
scas
dec
fists
pop
or
pop
imul
mov
sti
mov
orl
push
cmpsb
xor
pop
out
test
mov
cld
std
testl
loop
push
cmp
lea
dec
lods
mov
std
inc
mov
jmp
adc
les
rorl
frstor
pushf
repnz
mov
add
ret
jp
aad
xchg
fwait
lret
mov
jl
cmp
dec
mov
insl
loopne
xorl
mov
xor
outsl
notl
add
push
sbb
cmc
cmpsl
popa
inc
mov
pop
es
into
stos
xlat
xchg
dec
jecxz
bound
shrb
jl
jg
sub
imul
cmp
cmp
out
jnp
mov
lret
mov
gs
je
gs
push
outsl
fs
les
cltd
out
aaa
daa
pop
addr16
dec
xchg
push
leave
seto
scas
jmp
push
mov
out
sti
push
mov
mov
pop
adc
push
jl
aaa
data16
dec
stos
xorw
sub
xchg
test
jo
icebp
adc
test
arpl
les
jmp
xor
fnstcw
sbb
inc
pop
pop
mov
push
mov
pushf
aam
jb
div
and
loopne
mov
ds
and
sub
incl
and
jmp
movl
push
pusha
lea
jmp
je
ljmp
cld
int3
jae
sbbb
mov
das
mov
mov
mov
inc
ljmp
loope
xchg
cmp
and
cmp
mov
adc
cmp
mov
mov
outsl
push
daa
jno
and
shll
imul
inc
fcompl
sti
push
popa
mov
sub
or
push
testl
jae
fwait
xchg
daa
int3
xchg
dec
cmp
jb
push
scas
popl
stc
fyl2xp1
imul
pop
ret
outsb
fistps
dec
jp
add
les
xchg
out
push
xchg
sub
das
shrl
cli
add
dec
movsl
cmpsl
clc
dec
mov
int
jl
imul
xorb
mov
lahf
pop
repnz
clc
jbe
mov
cs
jecxz
shlb
add
xor
xchg
pop
mov
mov
xchg
sub
sbb
test
jns
xor
jl
aas
inc
adc
movsl
lcall
jae
dec
sub
jp
rorl
mov
mov
inc
add
push
in
fstpt
cmc
lret
dec
xchg
sub
sbb
movsl
sub
xor
rcr
mov
jmp
mov
pushf
mov
lea
jmp
jbe
mov
and
popa
xor
ret
or
inc
cmp
les
pusha
mov
jle
aad
or
out
cli
mov
cmp
lahf
jmp
je
or
ja
pushf
imul
ret
or
cwtl
xorps
insb
sbb
int3
andl
mov
ja
mov
and
std
mov
mov
add
lea
pop
lret
sub
and
xor
mov
push
push
movb
mov
mov
or
divl
les
mov
addr16
or
fldcw
lods
sbb
mov
aam
mov
lahf
or
or
push
mov
add
cld
pusha
ja
bound
scas
dec
jmp
fnstenv
pop
sbb
jbe
aas
insl
les
cwtl
or
addr16
fcoms
popa
mov
shlb
push
push
mov
fistpl
fidivl
pop
imul
cltd
lods
xchg
push
mov
test
xchg
stos
lret
gs
pop
call
outsb
cli
inc
and
sti
jns
mov
xlat
push
enter
test
mov
push
or
push
in
xchg
gs
push
sbb
mov
push
dec
mov
jb
xor
popa
adc
adc
pop
pusha
dec
ret
jle
dec
into
and
lock
neg
pushl
pushf
call
pushf
inc
bt
not
test
jmp
movl
movw
mov
mov
mov
mov
movb
pushl
ret
pop
sbb
and
stc
fistpl
cmp
inc
mov
mov
mov
push
mov
add
pop
cwtl
sbb
mov
xchg
cwtl
push
pop
stc
or
cmc
adc
mov
and
cmp
jb
scas
mov
push
inc
xor
dec
fdivs
xorb
movzbl
mov
ljmp
leave
jns
sahf
cmp
ret
adc
cld
xor
mov
cmp
adc
test
jmp
jne
dec
aad
cld
fiadds
pusha
fisubs
mov
shrl
subb
iret
jl
mov
mov
xor
gs
xchg
sti
stos
stos
fwait
xorl
xor
pop
adc
sbb
hlt
mov
xor
mov
addr16
pop
add
jb
add
clc
xchg
cli
adcl
int3
cmpsl
aas
fldt
xor
jb
inc
adc
popf
push
add
insl
jne
clc
pusha
dec
mov
push
dec
int
pop
out
inc
sub
in
jne
aaa
out
xor
fdivrs
mov
cltd
sbb
and
add
aas
test
outsb
and
out
xchg
idivl
sti
or
das
cmpsl
xchg
hlt
pop
adc
add
mov
ds
push
out
cmpsb
test
lods
sti
sahf
mov
popl
sbb
dec
fdivs
xchg
mov
add
movsb
push
stos
daa
jle
jge
sub
dec
mov
sub
bt
stc
rol
cmp
pushl
push
not
add
jno
push
neg
pushf
mov
jmp
sbb
inc
aam
hlt
sub
push
cltd
out
ja
cltd
test
or
xorb
push
scas
mov
fldt
sub
scas
je
lret
cmc
imul
xchg
pop
pop
loope
stos
and
aad
mov
sub
xchg
adc
aad
push
nop
xchg
adc
pop
fimull
or
and
out
push
ja
mov
inc
or
aaa
fiadds
fldl
xchg
rcrl
hlt
jmp
inc
in
jmp
xchg
lret
mov
push
into
cmp
call
push
clc
or
pushl
jmp
mov
lea
jne
bsr
inc
bsf
btc
mov
bswap
neg
adc
sub
btr
mov
pushf
pusha
pushf
sub
pushf
push
pushl
popl
jmp
ljmp
mov
mov
test
lret
adc
stos
inc
pop
mov
push
ja
xchg
mov
add
frstor
sub
ljmp
mov
cli
aam
mov
jne
fstpt
shr
xor
insb
fldt
jne
inc
jne
cmc
pop
fisttps
mov
mov
and
xor
fucomip
xchg
sbb
mov
inc
adc
dec
xlat
popa
dec
cmp
dec
pusha
test
or
movsl
or
mov
ret
lahf
push
sbb
add
xchg
sbb
stc
not
clc
cmc
stc
add
cmp
std
mov
pushw
popfw
push
jmp
lea
je
jmp
imul
mov
jle
outsl
pop
mov
mov
jns
jo
loop
mov
test
cld
aaa
ficompl
cltd
sbb
sbb
fsub
lea
xchg
or
jno
aad
push
dec
addb
movsb
and
std
fadds
popa
or
fnstenv
sbb
mov
test
outsl
pusha
mov
fs
push
inc
iret
clc
cmp
loopne
cmp
and
mov
out
jle
mov
shll
lcall
dec
and
sbb
mov
ss
insb
ljmp
shll
lahf
inc
repz
int
and
fstpl
test
aam
pop
dec
cltd
or
pop
jne
xchg
mov
or
cld
fdivl
adc
fsubrl
xor
inc
in
sub
pop
adc
mov
xor
sub
sub
movsb
dec
push
push
loop
loope
aaa
xchg
jp
mov
fiadds
jne
cltd
push
xchg
mov
out
popa
push
fwait
jbe
adc
ljmp
pop
mov
mov
cmc
bt
cmp
call
movzbw
pushf
xchg
shl
xor
lea
mov
pop
push
mov
push
lea
jl
pushf
push
mov
pushf
pushf
mov
call
lea
jae
setg
setg
mov
dec
push
inc
not
pushf
mov
lea
pusha
push
lea
call
pushf
pusha
adc
movw
movw
mov
pushl
lea
jae
jmp
movb
lea
je
push
adc
pusha
lea
jmp
int
arpl
and
aam
mov
imul
cmpsl
inc
ja
adc
jl
pop
and
xchg
mov
adc
lea
xor
xchg
push
push
and
mov
outsl
add
xchg
fistps
jo
and
or
out
or
xchg
lcall
pop
cmp
adc
mull
adc
cli
shrl
push
adc
mov
jno
in
xchg
push
xchg
adc
sbb
testb
xchg
add
jae
dec
jg
pop
xchg
jg
add
gs
insb
inc
js
arpl
gs
add
flds
neg
lea
call
mov
les
and
rcll
mov
push
repnz
jecxz
cwtl
loopne
ffreep
mov
pushf
iret
int3
lods
ficoms
lods
push
inc
and
cmpsl
inc
subb
bound
testl
sub
mov
fs
dec
lret
xchg
jae
push
test
add
rcrl
repnz
and
sub
mov
das
cmpsl
adc
sar
pusha
test
push
xchg
inc
mov
jo
outsl
lock
stos
mov
sub
adcb
fs
je
neg
inc
sub
rol
das
btc
mov
bsf
aad
sbb
mov
cmp
shr
mov
or
mov
mov
cmc
ja
or
jo
je
xor
test
movsbl
add
xadd
btr
sub
pusha
dec
shr
inc
neg
mov
stc
movzbw
bt
stc
add
rcr
shl
add
lea
btr
dec
shl
movsbw
mov
call
fs
into
and
xchg
aad
push
xchg
in
lret
xchg
inc
ret
pop
movsl
addl
pop
push
fstpt
dec
xchg
adc
and
sarl
in
outsl
pop
cmp
mov
add
insl
lahf
xchg
ljmp
jbe
addr16
lods
in
push
sahf
loop
into
xor
or
mov
cmpb
lea
aaa
pusha
jno
and
sub
mov
sti
mov
cmp
add
xchg
push
insl
mov
xor
jmp
mov
jmp
lea
jne
lea
movzbw
lahf
jmp
xor
int
xchg
ret
jb
adc
sub
or
pop
mov
not
inc
out
test
ljmp
dec
dec
sub
lret
xchg
in
sbb
arpl
lahf
push
xchg
fstp
jae
and
popf
mov
xor
cmc
xchg
lods
repnz
sub
xchg
dec
es
add
sub
enter
aaa
sub
push
or
add
mov
add
pop
movsb
sub
pop
out
mov
dec
inc
push
sub
lret
xor
rcrl
stc
push
jns
xchg
pop
pop
aam
sbb
push
mov
test
gs
inc
movsb
insb
ds
xchg
pop
fidivrl
dec
sbb
imul
push
dec
testb
and
pop
add
xor
loopne
out
lock
adc
ds
das
pushf
add
mov
fcmovnbe
dec
dec
inc
inc
push
push
xor
cs
insb
add
jmp
add
fwait
je
cmp
add
jnp
mov
jmp
and
dec
ja
pop
pop
jg
loope
cmpsl
mov
and
sbb
mov
movl
xor
jle
push
das
in
inc
dec
adc
jl
mov
add
iret
sub
insb
shrl
xor
xchg
outsb
push
repz
aad
pop
cwtl
xor
repz
filds
push
ds
out
pop
push
inc
xor
mov
cmp
sub
test
and
push
lret
mov
inc
sub
cmc
push
cs
in
mov
imul
outsl
subl
test
outsb
sub
pop
je
mov
cwtl
mov
rcll
stos
data16
xchg
scas
into
lds
lcall
jle
pop
adc
rorb
ja
dec
loop
sbb
daa
arpl
adcl
xorb
adc
ds
shrb
pop
test
add
fmulp
and
push
shrl
rcrl
sahf
sarb
lahf
test
sub
or
xchg
push
sarb
sub
ret
dec
addb
fs
xor
cwtl
jbe
in
inc
cmpsl
int
fs
stos
fmuls
lock
sbb
test
test
shl
cltd
lret
push
push
sbb
iret
dec
movb
sarb
outsl
leave
dec
fsubrp
div
stos
stos
fiaddl
aad
sub
in
pop
inc
pop
aas
pop
mov
loopne
setg
sbbb
lods
lods
mov
or
lret
and
imul
xor
or
mov
out
aam
mov
test
dec
push
xchg
mov
pop
or
jge
fwait
into
and
adc
leave
xor
in
jmp
mov
fiaddl
ja
ret
in
out
jp
xchg
inc
mov
fmuls
add
lea
add
adc
cltd
imul
adc
adc
fldl2t
fwait
leave
movsb
jle
movsb
xor
dec
mov
cmp
loope
xor
scas
aam
xor
sbb
sti
je
xor
mov
std
xor
inc
std
es
call
hlt
aad
add
sub
jne
or
inc
mov
ja
mov
pop
ja
lds
andl
add
fdivrs
sbb
or
mull
push
add
adc
cltd
mov
sbb
fnsave
xor
push
mov
divb
sub
adc
das
pop
and
out
scas
mov
push
fldt
addr16
les
sbb
fcoml
in
and
mov
pop
fdivl
call
inc
mov
mov
cmc
pop
inc
inc
stc
add
sub
je
mov
push
addl
insl
pop
fldt
jmp
pop
mov
repz
out
jge
arpl
push
mov
shlb
fwait
je
js
inc
enter
sbb
inc
inc
pop
mov
stos
arpl
leave
add
das
xchg
out
xchg
sub
inc
mov
ja
in
xchg
add
movw
lea
jne
movsbw
movb
bswap
jmp
call
fwait
cli
and
mov
jbe
ja
out
daa
pop
lock
push
mov
mov
xlat
js
dec
testl
fwait
dec
dec
push
mov
sub
movsl
ret
test
dec
ss
std
std
fcomip
roll
xchg
mov
repnz
rorl
lock
jge
inc
add
sub
lods
cmc
lret
imul
sbb
pop
mov
pop
cltd
imul
hlt
fwait
inc
enter
cmp
pop
cmpsl
mov
sbb
sbb
lahf
and
xchg
sbb
outsl
shlb
jmp
xchg
push
stos
dec
dec
dec
inc
rcl
jle
mov
nop
iret
adc
daa
xchg
xchg
loop
and
jp
sbb
ss
popa
mov
jle
sbb
dec
and
sbb
mov
loopne
shrb
ret
int3
pop
lahf
ficoml
lret
or
jnp
adc
push
pop
or
cmp
sub
pop
add
jp
decl
outsl
add
mov
movb
pushl
ret
jo
cli
and
scas
mov
pushf
int
ret
mov
hlt
push
sbbl
aas
jge
ret
ds
ret
or
add
xor
icebp
iret
push
in
fucomip
or
mov
inc
mov
dec
in
cmp
cs
jne
and
adc
ret
push
sbb
mov
pop
xchg
dec
sbb
and
push
mov
sub
pop
popf
inc
push
push
test
pop
flds
push
js
dec
fadds
fldenv
jl
push
and
or
dec
fisttpl
adc
sbb
xor
in
lods
lahf
pop
dec
rorl
jecxz
pusha
enter
movsl
inc
loopne
lds
mov
add
imul
push
jge
dec
in
adc
mov
hlt
lock
pop
leave
mov
xchg
adc
dec
hlt
dec
cltd
jl
xor
ret
push
int
in
stos
jo
cwtl
test
les
push
jp
in
arpl
fidivrl
or
sti
daa
jle
sub
xor
divl
jp
mov
and
test
call
test
ss
and
das
icebp
sbb
je
or
add
mov
leave
loopne
xor
dec
inc
push
lret
xchg
xchg
cmp
shl
ficomps
xlat
not
xchg
add
add
mov
sbb
jecxz
jp
add
cli
cld
jge
add
jns
roll
cwtl
add
je
out
xchg
lcall
repnz
lahf
adc
cwtl
cwtl
jge
mov
ret
ja
jg
ss
mov
stc
divl
shll
cmp
popa
dec
mov
ret
and
xor
rolb
jg
fdivp
lock
cwtl
enter
push
stos
xchg
xchg
shlb
test
or
sarl
add
repnz
shll
dec
cmp
adcl
xchg
jbe
testb
mov
and
daa
jp
subl
mov
mov
fcoms
pop
sbb
cmp
orb
push
xor
into
fisubrs
into
into
dec
das
xor
push
xor
cmc
sti
jecxz
mov
int
clc
push
mov
mov
fists
int
mulb
xchg
fs
movsb
mov
ret
aas
lods
pusha
xchg
jmp
dec
cld
fistpll
outsb
push
jg
out
add
outsl
dec
aas
mov
sub
push
out
push
jmp
shll
pusha
out
iret
out
loopne
insl
mov
movsl
mov
jle
xchg
inc
pushf
movl
pushl
pushf
jmp
ror
les
jnp
jns
cmpsl
test
inc
mull
jmp
sti
push
and
dec
pusha
aad
jle
cmp
jle
or
mov
or
dec
iret
scas
mov
mov
mov
rcrb
movsl
js
mov
pop
inc
lock
add
mov
push
jno
daa
mov
push
or
push
data16
mov
jne
adc
mov
les
jmp
cmp
mov
js
push
push
and
cld
fwait
mov
mov
xor
jl
pop
test
and
in
adc
lcall
in
xchg
ret
pop
and
jnp
push
orl
mov
mov
in
sti
and
cmp
inc
push
jae
fwait
out
cmp
mov
sahf
adc
xor
lods
hlt
push
inc
xor
cmp
pop
mov
lea
lea
jmp
push
jo
ret
and
aaa
stos
push
inc
test
lcall
jp
std
arpl
or
adc
cltd
and
mov
or
xchg
xor
aas
dec
fstp
addr16
dec
test
mov
push
in
int
inc
pushf
xor
faddl
xchg
ja
mov
negb
mov
sbb
push
or
ss
mov
inc
mov
imul
addr16
cwtl
cmp
stos
aam
lahf
pop
aam
sti
sahf
and
pusha
cmc
pusha
add
pushf
push
mov
mov
lea
jmp
mov
adc
and
xchg
jnp
sbb
add
cmp
cmp
jecxz
arpl
sbbl
nop
mov
mov
stos
and
and
aam
rclb
ret
mov
je
aad
cld
cmp
mov
jmp
xchg
lock
xchg
je
les
jg
mov
test
cmp
push
adc
pop
in
stos
stos
popa
mov
adc
rclb
cmpl
loopne
xor
pop
ret
ret
out
fiaddl
mov
in
mov
adc
push
in
jne
in
pop
jge
imul
loop
rcll
mov
mov
cs
jb
pop
mov
stos
dec
sub
xor
dec
sbb
bound
sub
cltd
mov
cmp
into
movsl
andl
out
jg
icebp
cs
or
repz
rorl
das
shrl
shll
xchg
mov
push
int
lods
add
jge
inc
xor
sub
pop
push
mull
sbb
repz
movsl
rorl
arpl
dec
subb
jge
lods
in
ds
add
xchg
movsl
push
iret
push
mov
fwait
shrl
inc
cmpsl
movsl
movsb
outsb
dec
sbb
jmp
inc
ds
dec
insl
test
sub
stos
mov
ss
dec
jno
pop
loope
xchg
pop
adc
xor
and
jle
ljmp
fistpl
pushf
push
xorl
jle
push
jo
cmpsb
pop
pop
nop
cwtl
lahf
int
inc
loope
xor
es
jbe
std
or
push
mov
inc
pop
nop
pop
add
push
das
or
sbb
or
fsubrs
mov
pop
bound
lods
add
add
or
not
test
and
daa
mov
cmc
ret
push
xor
push
xor
inc
arpl
or
insl
push
orl
jno
scas
jge
not
int3
add
call
inc
insl
shlb
jo
mov
mov
mov
outsl
iret
add
inc
xchg
data16
insl
cmpsl
sbb
xor
xchg
fdivl
std
pop
in
out
in
stos
push
inc
popa
shl
adcl
add
pop
scas
push
jbe
cmp
sahf
sahf
jg
pop
lea
incb
sbb
ljmp
insb
mov
aad
dec
dec
inc
sbb
imul
lcall
push
sub
orb
cs
les
or
adc
pusha
lea
jmp
pushl
push
mov
push
movb
mov
pushl
ret
pop
push
shlb
inc
pop
jno
loope
adc
dec
popa
dec
push
stc
movsl
xchg
mov
push
xchg
std
and
imul
xchg
pushf
iret
jmp
das
sbb
sti
mov
push
je
cld
cmp
push
or
cmpsb
xor
jp
xor
cmp
fsubrl
and
enter
cwtl
lahf
inc
aad
stc
mov
lods
je
jb
sarl
rcrl
aas
in
xchg
mov
imul
std
inc
adc
in
sti
sub
addr16
js
subl
mov
push
daa
cmpsb
call
daa
xlat
xchg
xchg
mov
aas
insl
out
mov
and
repnz
adc
cmpsb
mov
jno
xor
add
push
iret
jnp
fwait
sti
lds
sub
stc
mov
xchg
add
add
cmp
dec
mov
xor
scas
jae
sub
or
sub
or
push
lcall
mov
fldl
and
bnd
popf
xor
arpl
lods
xor
mov
mov
roll
pushf
pushf
push
pop
sbb
adc
out
shl
insb
es
jnp
mov
sbb
imul
sub
jne
dec
mov
test
sub
adc
dec
xchg
or
dec
and
sub
and
rorl
out
mov
or
cmp
int3
or
xor
mov
outsl
jno
mov
sub
xchg
test
or
dec
jl
aad
xchg
mov
mov
nop
shrl
xchg
aas
loopne
jo
loopne
dec
aas
xchg
pop
jmp
into
and
andl
test
or
loopne
push
or
cld
or
adcb
rol
mov
xchg
pop
push
fmuls
lock
push
ret
dec
test
cmp
jb
inc
ss
iret
out
push
adc
mov
add
mov
dec
notb
push
pxor
jo
scas
dec
iret
scas
inc
sub
dec
sbb
stos
bound
add
addr16
sbb
sub
pushl
arpl
xchg
mov
daa
fsubrs
fists
andl
pop
or
jge
imul
clc
mov
push
js
jne
inc
inc
jg
mov
inc
cmc
sub
pop
testl
insb
add
mov
mul
or
mov
cmpl
aam
lret
push
mov
cmpsl
cmp
sub
sti
and
dec
lods
xchg
mov
mov
mov
dec
pop
fdivl
ret
cmp
nop
or
in
sahf
sbbb
jo
adc
xchg
mov
sub
fwait
push
jp
or
out
add
and
lods
push
and
pop
mov
push
xchg
stc
and
cmp
call
stos
push
pushl
lea
jmp
add
jmp
movb
lea
jnp
mov
push
lea
jmp
push
mov
not
jmp
pushf
lea
jne
jmp
neg
push
inc
mov
clc
jmp
pushl
add
pushl
pushl
shr
call
mov
in
mov
pop
push
lahf
outsl
mov
mov
out
in
xchg
dec
jnp
cmp
jno
shll
bound
andb
or
jecxz
pop
nop
mov
and
roll
or
pop
xor
jp
pushaw
inc
mov
and
call
xor
fs
data16
xchg
mov
sbb
pop
les
jns
dec
ss
idivb
jno
push
pop
mov
fcompl
inc
jae
sbb
sbb
xchg
sbb
pop
ret
mov
mov
dec
or
out
es
sbb
xchg
imul
imul
popl
mov
sbb
sbb
imul
jp
in
mov
mov
and
mov
lret
push
pop
mov
shlb
inc
dec
das
mov
cmp
ljmp
ljmp
add
rcrb
ds
gs
clc
lcall
mov
outsb
rcll
and
loope
loop
dec
test
leave
sub
mov
sub
and
cmp
loope
std
cmp
stos
lret
pop
les
hlt
adc
aad
fstpt
iret
jg
fisubrs
and
into
and
scas
cmc
pop
xchg
into
mov
aas
xor
xchg
sbb
mov
push
js
movsl
ficoms
imul
test
mov
rcr
and
dec
ss
push
xchg
daa
loop
into
fnstcw
test
loope
bound
mov
aas
aas
xchg
cmp
push
dec
pop
imul
xchg
push
ja
movsb
orb
jnp
inc
sub
out
adc
sbb
push
jecxz
in
ret
dec
pop
hlt
jmp
push
clc
mov
and
xor
icebp
inc
jnp
or
sbb
inc
fmull
push
outsl
hlt
sub
mov
mov
lods
jge
aaa
jne
mov
jae
shll
outsb
jle
and
sahf
mov
and
sub
ret
cmp
shrl
mov
push
sbb
cmp
rcrb
xchg
push
in
ds
mov
cmp
js
jns
int
aam
pop
outsb
addr16
sbb
sub
leave
push
js
pop
imul
aam
test
enter
lret
cmp
fdivp
inc
inc
gs
addb
adc
clts
jle
or
lea
sub
out
test
xor
ja
outsl
mov
sbb
movsb
mov
sub
cmpsb
scas
ljmp
xor
call
inc
jmp
mov
nop
nop
mov
add
bound
adc
test
stos
cli
add
sub
adcl
sub
aam
sbb
rclb
out
pop
or
jle
dec
lods
lret
lret
leave
test
pop
cmpsb
sbbl
push
mov
cmp
cmp
mov
cmpsb
fmuls
mov
inc
lret
cmp
sbbl
mov
xchg
cs
sysret
iret
fsubrl
sub
test
add
rcrb
sbb
mov
flds
mov
out
sub
out
inc
sub
sub
insb
test
push
mov
mov
jns
jbe
out
addr16
mov
dec
int3
mov
jae
fmull
inc
add
ret
jae
nop
sbb
pand
in
fwait
in
ss
lahf
and
out
fidivrl
jecxz
adc
mov
sbb
imul
es
pop
sti
xchg
xbegin
mov
dec
jmp
ret
mov
sub
push
and
orl
and
mov
pop
mov
movsb
jp
cmpsl
sub
lcall
push
movl
jmp
sub
mov
les
std
in
pop
add
mov
mov
je
fwait
js
arpl
and
sahf
popa
lcall
sbb
dec
rcr
mov
push
fidivl
lret
mov
out
pop
sub
jno
pop
push
hlt
push
mov
jp
push
and
mov
jo
xchg
and
mov
adc
adc
dec
das
sub
imul
cli
push
jmp
xor
hlt
mov
or
inc
fs
push
push
sub
mov
leave
inc
add
pushf
jmp
jle
popa
mov
in
stos
or
sbb
jge
cmp
cmp
lock
pop
add
hlt
mov
push
cmp
add
adc
pop
gs
cmp
adc
rorl
mov
rorb
cli
mov
and
in
jmp
sub
push
xchg
sbb
pop
mov
cmc
adc
stos
cmc
aaa
and
jb
xchg
jae
int
inc
jle
in
je
addr16
xchg
in
mov
mov
xchg
enter
pop
mov
xor
cltd
inc
pop
test
gs
push
jge
daa
or
lods
int
mov
mov
hlt
sub
sbb
lock
cmpsb
aam
dec
mov
sub
lea
hlt
int3
pop
fnstenv
push
mov
pop
add
cltd
out
push
and
scas
adc
fiaddl
in
lea
inc
in
xchg
xlat
frstor
pop
cmp
arpl
push
mov
xchg
lods
stos
add
pop
push
xchg
pop
stc
fwait
fwait
add
push
cmp
sub
push
aad
mov
adc
pop
test
stos
adc
aas
in
jg
ret
and
xchg
mov
aad
xchg
sub
xlat
cwtl
and
int3
and
data16
lods
scas
divl
addr16
mov
mov
and
in
enter
xor
test
pop
pop
inc
sub
shrb
and
pushf
and
mov
in
test
mov
cmpsb
test
cmp
aas
out
pop
mov
roll
add
mov
scas
push
or
sub
std
addr16
into
movsb
cld
repz
sbb
xor
lds
xchg
sbb
or
test
stc
scas
movsl
into
cmp
push
mov
pop
mov
daa
pop
movsb
test
shlb
clc
pop
add
sbb
bswap
mov
pushf
test
pushf
sub
jmp
pushf
test
movb
pusha
lea
jne
call
lea
ja
call
or
mov
test
add
shlb
and
xchg
shlb
sub
push
pop
rclb
loope
fwait
and
popf
frstor
ficomps
sbb
pop
sahf
cmpsb
inc
vmaxss
fisubl
sbb
pop
sahf
scas
fcmovu
jns
lea
sahf
xor
pop
pusha
popf
adc
pop
mov
add
xchg
sbb
adc
push
negl
ficoms
and
jecxz
popf
loop
xchg
sbb
xor
pop
out
sub
lea
sub
dec
mov
xchg
rcll
aad
pusha
sbb
mov
and
xchg
adc
bound
gs
repnz
inc
daa
out
pop
pop
fidivrs
sahf
pop
data16
push
sbb
push
jecxz
lahf
lret
gs
adc
sbb
mov
xchg
cmp
and
or
imulb
dec
push
mov
dec
mov
sbb
cltd
dec
xchg
mov
dec
sub
leave
dec
inc
inc
std
push
adcb
icebp
dec
aas
adc
sub
aas
jbe
enter
dec
fnstcw
dec
jecxz
add
jp
dec
data16
inc
and
iret
stos
ljmp
iret
arpl
add
fistl
push
loop
sbb
decl
int3
cmpsb
or
mov
inc
xlat
or
cltd
mov
adc
iret
inc
mov
pop
jne
fmull
add
sbb
leave
sub
daa
js
movl
sbb
cmpl
xchg
jae
inc
adc
push
fiadds
dec
jp
mov
es
dec
mov
dec
or
sub
mov
add
psubsw
cmpsb
cwtl
mov
in
gs
pop
ljmp
jp
push
add
jle
les
or
mov
jae
cwtl
mov
cwtl
inc
adc
push
pop
jnp
adc
cmp
shrl
cltd
sarl
or
or
push
iret
add
cwtl
inc
mov
mov
into
inc
ljmp
sbb
xchg
nop
test
scas
adc
into
mov
iret
stc
mov
mov
pop
mov
fimull
xchg
mov
cmp
orb
sbbb
sub
roll
push
or
xchg
scas
sbb
pop
inc
inc
mov
int
decl
inc
and
ds
iret
xchg
adc
adc
mov
ja
mov
add
clc
or
mov
aad
pop
mov
iret
pop
inc
mov
xchg
into
push
jg
flds
cwtl
adc
nop
sub
sbb
sbb
sbb
dec
daa
mov
stos
andb
xchg
sbb
ret
sti
and
xor
push
into
hlt
push
push
xchg
ds
fstps
or
rcr
dec
inc
pop
add
sbb
stos
out
pop
jp
test
jmp
iret
loop
aad
repz
cmp
adc
cmpb
push
or
push
pop
push
mov
push
xchg
cmp
xchg
ret
mov
int3
push
sbb
sbbl
lds
or
out
add
sub
sbb
sub
xor
add
ret
dec
dec
enter
push
jmp
fwait
int
je
cwtl
dec
push
shrl
stos
dec
xchg
inc
lahf
iret
sub
push
jp
les
mov
mov
and
loope
into
and
dec
push
cltd
sti
sbb
clc
lret
or
jo
cs
xor
or
addl
mov
int3
dec
xor
fists
adc
lods
mov
add
sub
pusha
ret
sbb
rorl
fidivrl
add
sbb
es
adc
cmp
roll
ret
inc
adc
adc
sub
roll
push
shll
leave
lods
dec
push
push
mov
dec
sarl
add
or
cltd
sub
xor
adc
lret
push
jnp
int
nop
jns
xor
xor
mov
add
lea
mov
xchg
fcoms
aaa
adc
into
adc
or
scas
mov
mov
cmp
adc
inc
lret
nop
and
push
lea
and
bound
cmp
push
pop
dec
sbb
sub
int3
movb
push
scas
test
xorb
pop
pop
das
imul
mov
sbb
mov
scas
lods
push
and
dec
jl
rclb
sbb
or
imul
and
mov
sub
lret
sub
insl
mov
cli
cli
jge
ret
inc
dec
sbb
in
hlt
dec
push
xor
pop
adc
pop
inc
dec
and
dec
sbb
out
inc
pop
cmp
push
sub
cs
lea
inc
or
sbb
inc
adc
sub
mov
int3
ret
stos
lds
or
xchg
push
adc
dec
aaa
adc
push
sub
and
and
dec
loope
fs
adc
stos
mov
and
inc
cs
dec
mov
or
fsubrs
push
push
push
push
jp
push
stos
mov
std
popa
imul
or
adc
xchg
cmp
imull
int
sub
or
sbb
ret
jb
in
xor
mov
or
lea
dec
push
mov
push
outsb
int
in
adc
pop
and
sbb
push
das
cli
cltd
or
imul
jp
adc
push
cmp
and
sub
or
iret
pop
dec
jb
sbb
lret
push
dec
xchg
xchg
inc
mov
and
push
push
aaa
popa
dec
adc
push
pop
or
adc
loop
xor
mov
das
fisttpll
inc
mov
dec
adc
iret
ds
inc
push
xchg
lret
sbb
xchg
sbb
xchg
mov
cmp
pop
dec
in
mov
mov
xor
adc
enter
or
adc
iret
add
inc
or
mov
ss
cltd
xchg
mov
int3
ret
mov
in
lds
sub
mov
mov
aas
ss
sbb
inc
cmp
or
lret
rclb
imul
scas
lea
pop
dec
je
scas
int3
mov
push
xor
push
and
sub
dec
sbb
int
cmp
movsb
sbb
xchg
int
jle
fisttpl
ljmp
dec
xor
and
enter
out
imul
jae
outsb
push
sbb
push
enter
dec
sub
sbb
sub
sbb
mov
or
mov
daa
adc
test
dec
mov
shll
xchg
mov
insb
out
sub
or
mov
pop
sub
cmp
or
adc
mov
dec
or
mov
sbb
dec
cld
pushf
push
iret
xor
sub
in
or
jp
enter
sub
mov
push
or
xor
rorl
mov
push
xchg
inc
mov
cltd
and
jb
es
mov
push
iret
xor
and
lret
enter
sub
mov
lret
cmp
or
push
cmp
adc
or
repnz
mov
sub
addl
sbb
mov
or
mov
ds
sbb
sbb
dec
or
mov
push
mov
sub
inc
or
xor
sbb
xor
mov
mov
and
or
daa
cwtl
stos
adc
mov
mov
adc
mov
lret
dec
dec
add
repnz
sub
sub
ret
ret
mov
sub
mov
adc
mov
push
leave
mov
fwait
sbb
or
sub
mov
int3
push
mov
and
and
scas
mov
xor
jge
in
cs
mov
and
jp
mov
ret
mov
sub
xchg
sbb
test
mov
inc
mov
jmp
mov
mov
mov
adc
iret
add
out
fidivl
or
dec
repnz
ret
and
sub
and
sbb
iret
or
cs
iret
sub
stos
sahf
push
sbb
sub
pop
sub
cmp
cmc
dec
xor
sub
dec
sub
and
jo
and
inc
out
adc
dec
testb
lods
push
sbb
sub
lea
sub
jl
sbb
sbb
pop
inc
insb
mov
sahf
or
adc
pushf
repnz
mov
mov
adc
cmp
clc
sub
cmp
xor
ss
mov
insb
dec
mov
repnz
sbb
mov
jb
popf
pop
cmpxchg
in
mov
sub
xor
adc
enter
mov
icebp
pop
adc
adc
sarl
dec
or
aad
pop
lret
scas
dec
sub
mov
daa
cmp
xchg
add
dec
pop
or
sahf
insl
mov
test
dec
aam
orl
mov
pop
cmp
mov
int
push
add
inc
aaa
push
jnp
sub
adc
add
mov
inc
push
leave
or
andl
mov
pop
push
lret
call
enterw
mov
mov
or
jg
fimull
xchg
jp
in
cmp
into
ret
sub
scas
lret
xchg
jae
fimuls
xor
ss
push
insb
push
es
xchg
aaa
xor
sub
dec
out
lea
sahf
adc
sbb
inc
push
into
mov
nop
and
dec
push
adc
cmp
sbb
or
mov
dec
decl
jmp
mov
mov
xchg
or
add
fmull
pop
sbb
mov
mov
lea
dec
outsl
into
out
lret
or
xchg
or
popa
inc
orl
inc
push
int
or
mov
sub
or
xor
jb
enter
xchg
es
dec
aas
or
mov
mov
jno
in
incb
sub
inc
xor
ret
sbb
lock
dec
loop
nop
mov
cmp
test
inc
mov
push
cmpsb
sbb
or
mov
pop
mov
dec
int3
push
lret
sub
addb
stos
mov
adc
mov
jnp
mov
xchg
lahf
lret
int3
cmp
or
sbb
iret
addr16
dec
inc
xchg
dec
or
xchg
dec
xor
inc
es
push
lahf
or
std
mov
or
leave
sub
xchg
lea
psrad
mov
or
je
cmp
dec
scas
lds
mov
or
pop
mov
dec
sub
imul
lret
mov
dec
in
dec
inc
add
xchg
mov
pop
iret
dec
or
stc
lea
imul
ret
int3
int3
mov
mov
xchg
jbe
mov
mov
mov
cmp
jne
cmpsb
dec
leave
mov
fmuls
xlat
pop
cmp
ret
cltd
mov
test
lods
les
xchg
sbb
int3
xlat
inc
daa
lret
pop
inc
int3
into
mov
xchg
xchg
ss
inc
test
cmp
pop
cltd
dec
or
pop
sub
xchg
pop
or
lret
push
and
ds
cmpsl
mov
adc
inc
lock
push
adc
inc
cmp
mov
roll
push
inc
test
sbb
inc
mov
cmp
sub
mov
iret
popa
in
dec
je
pop
mov
cmp
mov
mov
test
mov
xlat
leave
cmp
mov
add
xchg
sub
sub
dec
jl
or
xchg
dec
push
mov
scas
xchg
daa
dec
testl
leave
jmp
xchg
dec
imul
cmp
sub
mov
xchg
dec
jo
out
xchg
stos
mov
icebp
cmp
lcall
pop
cmp
out
lcall
pop
push
push
cmp
pop
cmp
or
test
cmp
dec
leave
decb
jns
ret
xchg
jb
and
xor
xor
dec
cwtl
mov
xor
int3
xor
icebp
inc
lcall
or
fisttps
dec
jne
and
stc
jl
adc
mov
push
iret
es
ror
xchg
or
push
test
ret
lret
dec
mov
xchg
dec
stos
xor
cmp
in
and
stos
popa
push
movsl
and
mov
and
mov
mov
mov
and
in
test
bound
lret
sbb
mov
bound
mov
test
dec
and
mov
or
dec
sbb
std
leave
test
push
or
dec
into
sub
test
mov
movsl
std
cmp
mov
inc
xchg
xchg
adcb
outsl
pop
and
sub
in
mov
lret
dec
add
mov
insb
cmp
dec
push
hlt
int3
lock
pop
int
ret
sub
and
or
push
pop
sbbb
cmp
inc
sahf
shll
sbb
sub
popa
dec
push
or
sbb
jg
cmp
push
and
call
inc
dec
jp
or
xchg
mov
adc
push
lock
sbb
insb
dec
xlat
dec
outsb
or
or
mov
into
mov
dec
jp
leave
mov
or
int3
es
imul
xchg
inc
iret
fwait
xor
ror
enter
mov
or
xor
adc
adc
out
pushf
jmp
jmp
mov
sbb
xor
jg
and
or
xor
enter
iret
cmpsl
addb
mov
or
into
mov
mov
cmp
cmpsb
lret
testb
mov
pop
mov
mov
and
sbb
out
mov
mov
bound
mov
fwait
or
dec
loope
dec
add
cmp
inc
inc
cmp
adc
es
mov
outsb
cli
xchg
sbb
adc
jecxz
xchg
jp
lret
pop
lods
push
add
mov
out
mov
cmp
scas
inc
movsb
or
or
or
push
lea
sbb
mov
setl
sbb
dec
dec
add
inc
sub
push
mov
adc
xchg
sbb
ret
adc
iret
fimuls
jp
mov
sbb
cltd
es
repz
ret
xor
sbb
cmp
fcmovne
cmp
imul
adc
lcall
mov
daa
dec
sbb
cmp
test
es
lods
push
add
xor
pop
xchg
xchg
das
scas
xchg
outsl
mov
mov
mov
mov
rorl
xchg
mov
sub
add
scas
loop
stos
xor
ror
mov
sbb
adc
mov
cmp
andl
mov
lahf
xor
shll
dec
cmpsl
mov
bound
push
adc
icebp
dec
adc
jb
aam
frstor
scas
inc
shrl
adc
push
cmp
lea
je
in
aas
cwtl
ds
ret
in
mov
cmp
adc
in
or
insl
inc
cmp
lcall
push
xor
cld
cmp
mov
pop
daa
adc
scas
pop
dec
xor
sar
cli
lea
ljmp
add
cmpb
rep
xchg
inc
fimull
xchg
inc
arpl
loop
jb
dec
fidivrl
xor
sbb
push
jne
sbbb
and
pop
into
popa
mov
jnp
adc
adc
mov
sbb
xchg
jo
arpl
push
imul
push
mov
popa
les
rdmsr
and
sbb
mov
sbb
or
repz
pop
addl
push
scas
or
dec
add
mov
adc
cs
and
sbb
jmp
in
adc
int
inc
in
inc
mov
mov
jl
push
mov
pop
xchg
rorb
cmp
and
inc
enter
inc
mov
test
adc
push
inc
cmp
gs
push
push
bound
lret
ljmp
sub
icebp
xor
cmp
arpl
pop
ss
outsl
dec
xchg
xor
xchg
jmp
fs
push
sub
mov
ret
outsl
sub
test
cmp
das
lret
inc
cli
adc
cmp
popa
sub
pop
and
daa
or
lret
jae
sahf
cmp
xchg
int
pushf
mov
xlat
xchg
dec
stos
pop
xchg
inc
push
push
sarl
and
cmp
dec
scas
xor
mov
repnz
xchg
xor
sub
and
dec
fcomps
inc
inc
mov
aaa
xor
sub
adc
xchg
jb
push
cld
adc
and
sub
pop
divl
jo
sub
xor
test
outsb
popf
jp
into
dec
mov
pop
pop
adc
addb
and
cmp
mov
fstps
int3
push
cmpl
push
pop
pop
or
add
outsb
push
rcr
or
inc
cmp
imul
lds
cmp
xchg
outsb
dec
inc
push
or
adc
dec
ret
and
push
sbb
push
xor
xchg
inc
stos
mov
cmp
adc
or
sarb
or
mov
xor
dec
enter
popa
das
mov
dec
clc
adc
into
sbb
push
sbb
xchg
mov
std
pop
mov
push
loope
adc
mov
rorb
inc
fldt
or
mov
mov
cmp
mov
lret
xchg
cltd
xchg
ficompl
mov
dec
jmp
push
xchg
sub
es
and
add
inc
mov
or
dec
push
jmp
ss
adc
inc
add
cs
cmp
push
adc
push
add
mov
mov
add
sub
mov
sbb
shrl
xchg
adc
insl
push
scas
outsb
dec
int
rcrl
add
xor
mov
or
push
or
out
or
sbb
outsb
rclb
push
lret
pop
and
cmp
sub
or
or
inc
jmp
xchg
or
cmp
lods
pop
sub
adc
lret
rorl
inc
or
push
setge
cmp
insb
push
push
cmp
cmp
dec
push
sub
cmp
sbb
adc
push
dec
mov
ljmp
sbb
sub
xchg
sbb
rcrl
jge
roll
mov
or
push
cli
inc
and
pop
adc
pop
cmp
sbb
push
jp
cmp
jl
std
xchg
cs
dec
and
push
cwtl
sbb
jle
sub
or
or
cmp
jl
or
sub
dec
ljmp
sub
cmp
pop
push
imul
and
sbb
xor
fcoms
iret
mov
rclb
out
and
dec
mov
push
push
ret
iret
insb
adc
ljmp
jge
mov
andb
outsl
mov
push
lock
adc
pop
jmp
sahf
leave
or
minps
dec
adc
pop
pop
adc
test
jmp
or
nop
push
mov
or
out
sub
inc
cwtl
pop
inc
xchg
dec
iret
cmp
dec
xor
or
xor
mov
jno
cmp
aaa
mov
insl
adc
es
pusha
dec
fwait
or
inc
rorb
dec
xlat
mov
dec
push
jb
adc
adc
adc
or
inc
jge
jns
in
iret
dec
mov
push
dec
pop
out
bswap
push
lods
iret
mov
out
and
orl
ds
dec
inc
sub
aam
or
xorl
call
lahf
dec
sbb
in
sti
lret
sbb
pop
lret
push
adc
leave
push
inc
ret
adc
inc
mov
lods
jle
sbb
in
mov
or
in
aad
sub
in
outsb
cmp
or
sbb
sti
in
mov
ss
cmp
ficomps
lea
push
call
cmpsl
or
and
dec
sbb
or
sub
adcl
push
jo
inc
loope
les
pop
dec
repz
dec
out
xor
add
mov
or
clts
adc
mov
inc
push
out
jmp
inc
rorl
imul
add
or
xchg
scas
sub
movd
repnz
in
popf
adc
push
mov
ja
fistps
jmp
mov
call
fisttpl
repnz
xor
in
sub
add
xor
lods
setns
movd
minps
pushf
sbb
or
mov
mov
jns
dec
sub
inc
push
or
or
or
add
fisttps
adc
push
mov
xor
cltd
mov
or
inc
bound
or
cltd
cli
rclb
inc
xchg
and
rorl
rorl
rcl
adc
add
test
and
inc
or
or
or
and
push
jno
inc
fnstenv
rol
movsb
and
sub
and
lea
int
insb
push
pop
call
sbb
pop
xor
and
dec
or
sub
and
and
dec
mov
lods
in
jmp
or
sub
sub
sub
sbb
rcr
fcmove
into
and
rcrb
lret
test
jne
lods
inc
sub
push
push
adc
add
push
pop
mov
xchg
pop
out
lret
ret
mov
mov
rcrb
sub
mov
sub
sub
push
rcll
aaa
mov
flds
lahf
sbb
jbe
jl
repnz
in
sbb
imul
sbb
cld
push
movsl
dec
sbb
lcall
sahf
cwtl
inc
cwtl
ret
xchg
sbb
push
jae
adc
and
pop
mov
dec
inc
cmpsl
sahf
mov
mov
jmp
enter
iret
push
xor
adc
push
and
adc
inc
pop
daa
dec
xor
iret
push
mov
iret
mov
pop
hlt
jle
adcl
nop
xor
int
fptan
cs
movlps
outsl
dec
dec
sbb
iret
or
pop
test
adc
xor
int
adc
mov
stos
iret
push
add
dec
inc
and
orb
push
adc
mov
lods
call
sti
leave
dec
mov
int
pop
je
fildll
mov
das
lods
fcmove
insb
dec
into
cmp
fimuls
push
std
out
push
iret
push
iret
cmp
push
iret
rclb
arpl
out
enter
push
cli
ss
std
lea
mov
loop
stos
int
out
nop
xchg
jmp
nop
popl
nop
sub
ja
sbb
and
xor
xor
adc
lods
and
sub
lea
sbb
dec
scas
sub
jmp
jno
inc
lods
sbb
es
adc
sub
in
inc
sbb
imul
mov
or
faddl
js
lcall
or
cmp
aad
cmpsb
ror
mov
leave
add
or
push
fs
cmp
xor
test
movb
sbb
paddw
adc
fwait
xstore-rng
cmpsl
add
push
adc
pushf
jle
adc
sbb
test
push
push
sub
and
and
push
or
xlat
sub
clc
jmp
ds
push
shrb
gs
into
sub
fs
aas
push
inc
xor
dec
notb
fs
pop
adc
xor
sub
sub
push
cmpsb
in
push
xor
daa
xor
push
or
es
and
loope
xchg
cmp
sbb
jo
push
dec
and
es
bound
out
arpl
sub
sbb
cltd
and
adc
dec
movsl
push
xchg
mov
push
mov
popf
orl
pop
popf
sbb
mov
ficomps
mov
dec
das
lahf
sbb
lcall
pop
cmp
loop
loopne
and
out
outsb
fwait
or
loopne
in
mov
lea
lea
sbb
gs
cmp
fists
cmp
sub
ficomps
and
fs
mov
mov
xor
inc
adc
adc
mov
daa
inc
pop
cmpsb
adc
lods
das
movlps
ret
int3
mov
sbb
cs
xchg
stos
mov
adc
pop
push
xor
pop
popf
in
popf
push
dec
cwtl
ljmp
and
popf
adc
pop
fmull
movsl
sub
sbb
mov
sbb
pop
mov
aas
loop
pusha
mov
sub
xchg
add
js
cltd
jl
push
loopne
fstp
jae
push
adc
adc
xchg
adc
stos
arpl
adc
sub
sbb
mov
adc
push
mov
outsb
pop
sub
enter
fisttpll
xchg
inc
adc
mov
or
in
mov
adc
divb
clc
mov
adc
das
popf
dec
aas
xchg
mov
sbb
into
ret
mov
es
xchg
mov
dec
xor
and
push
mov
pop
lods
push
fistpll
mov
imul
cmpsb
lret
loopne
arpl
pop
xor
push
mov
fnsave
pop
aad
jp
frstor
loopne
fs
fdivp
pop
das
inc
adc
fisubrs
adc
mov
mov
out
in
xor
mov
jp
aam
pop
push
lret
in
sbb
test
outsl
sbb
or
fdivr
mov
ud2
rclb
jmp
stos
ds
dec
lret
push
xor
adc
inc
dec
inc
popf
lock
pop
xor
or
fstl
adc
or
pop
es
and
or
sbb
jno,pt
inc
adc
or
shrb
push
stos
sbb
xchg
cmp
test
add
pushf
sbb
add
mov
add
lcall
or
sub
loopne
add
aaa
cmpsb
inc
or
xor
cwtl
cmpsb
out
pop
arpl
adc
dec
aam
xor
mov
and
sbb
push
pop
xor
sub
xchg
sbb
xor
and
push
sahf
out
arpl
pop
cli
je
stos
hlt
mov
lcall
dec
adc
sbb
or
and
stos
sbbb
pop
mov
rcrl
xor
subl
and
cmp
pop
push
aas
xchg
jb
dec
fmull
push
mov
or
icebp
inc
push
pop
and
push
or
fisttps
iret
addr16
loop
cmp
xor
into
and
repz
fs
push
and
int3
cmp
lcall
sbb
pusha
popa
int
ret
mov
or
arpl
pusha
xchg
pushf
pop
and
sbb
lcall
mov
sbb
in
insb
cmpsl
int3
or
arpl
sub
xor
or
lahf
or
sbb
or
test
ficoml
mov
mov
insl
sbb
sahf
in
fisubs
int3
adc
bound
test
loopne
cs
sub
xchg
push
loopne
mov
daa
test
aas
in
pusha
adc
add
outsb
adc
jp
or
daa
mov
aaa
adc
lret
pop
lahf
xor
cli
sub
stos
push
pop
cmp
cmp
arpl
and
adc
mov
adc
jp
or
cld
inc
lahf
cs
jo
mov
cwtl
mov
sbb
adc
loope
mov
sub
push
pushf
ss
pop
or
insl
cld
pusha
mov
mov
fwait
popa
cmp
pop
push
pop
sahf
lock
push
ds
test
mov
or
es
pop
out
xor
pop
iret
xor
or
mov
out
dec
popf
pop
arpl
xor
mov
dec
xchg
lods
push
fidivl
push
pop
out
adc
xchg
sub
into
movsl
jmp
sub
adc
mov
fcmovne
fldcw
outsl
and
sub
jo
jecxz
mov
and
and
mov
jle
push
or
push
and
sahf
dec
jge
dec
pusha
dec
and
scas
in
pop
pop
ds
lods
sbb
pop
out
or
push
sbb
test
mov
std
in
aaa
jb
adc
inc
popf
pop
push
cwtl
adc
or
push
pop
aaa
xchg
andb
out
outsl
stos
fwait
int3
xor
mov
repnz
push
pop
xor
pop
adc
or
stos
es
pop
fimuls
ret
int3
insl
and
scas
mov
das
xor
frstor
arpl
ret
add
jae
sub
loopne
fisubrs
lret
inc
fisubl
loop
adc
sub
or
dec
test
push
pop
xor
std
and
pop
xor
dec
mov
mov
mov
sbb
mov
pop
int3
mov
xlat
xor
es
cmpsb
xchg
mov
dec
movsl
arpl
cmpsb
xor
aaa
mov
cmp
lea
sub
sub
sub
inc
popf
and
cmp
mov
xchg
addb
repz
dec
divl
fwait
pop
arpl
pop
sbb
arpl
sbb
dec
dec
leave
mov
push
aaa
push
sbb
push
popf
and
adc
int
imul
pop
out
and
cmp
sbb
push
das
outsb
adc
sub
sbb
inc
mov
jle
mov
or
in
mov
xchg
scas
mov
pushf
and
and
fstl
inc
das
ret
push
fistpl
xor
and
test
sub
adc
int
xchg
sahf
repnz
sbb
push
pop
sahf
adc
sbb
insb
pop
push
lret
xor
inc
sub
mov
xor
jg
andb
cs
pop
adc
sbb
pushf
push
int
mov
out
lret
cwtl
sbb
scas
popf
jecxz
scas
aaa
adc
push
daa
repz
sbb
xor
aam
and
xchg
out
imul
repz
sbb
scas
std
pop
imul
repz
dec
popf
push
sahf
mov
lret
fucom
and
in
mov
mov
sub
test
dec
loop
stos
jge
fidivrl
sbb
xor
loope
adc
movsl
sarb
sub
pop
mov
mov
xor
dec
ss
xor
sub
sysenter
vmovaps
je
sbb
lcall
iret
xchg
or
mov
and
pusha
push
insl
lods
push
lea
sahf
sbb
and
xor
sahf
xor
nop
pusha
push
sbb
ror
andl
paddsb
fsts
xor
xor
dec
adc
pop
aad
sub
jl
or
dec
xor
add
and
mov
addr16
test
mov
inc
popf
scas
adc
test
and
rorl
adc
or
xor
sbb
cwtl
jmp
and
or
and
mov
rorb
mov
leave
dec
fistps
stos
pusha
sub
movsb
dec
pop
loope
cltd
xchg
movsl
sub
push
scas
movsb
sbb
mov
and
and
and
bound
pushf
sub
test
push
mov
xor
push
sub
rclb
shll
xchg
push
rcrb
out
jae
xchg
and
out
in
mov
mov
and
lds
pop
sub
dec
mov
pop
js
ljmp
sbb
xchg
outsl
arpl
adc
jns
sub
sahf
mov
push
push
mov
adc
adc
and
sub
in
or
sub
nop
loopne
push
int
sub
pushf
adc
and
jnp
xchg
call
dec
cs
mov
sahf
das
stos
add
out
xor
xchg
xchg
push
push
mov
sub
aad
xchg
mov
push
pushf
cwtl
push
insl
dec
mov
scas
int3
and
xor
int
into
nop
push
das
adc
jo
xchg
ret
bound
sub
test
lds
loope
lock
adc
xchg
xchg
xor
adc
sub
mov
inc
xchg
data16
adc
cs
andb
loopne
nop
add
jl
push
mov
mov
and
popf
mov
aam
dec
jo
imul
stos
and
inc
test
enter
test
pop
pop
adc
lcall
shll
or
xchg
mov
xchg
cmp
pop
mov
das
or
sub
imul
xchg
mov
sub
and
dec
jnp
mov
scas
cltd
cmp
loop
inc
rorb
push
mov
sbb
and
cs
xchg
into
aas
push
mov
repnz
arpl
dec
aam
ret
adc
pop
aaa
xchg
mov
ficompl
sbb
aam
repnz
sbb
scas
push
shrb
or
stos
outsl
mov
sub
test
mov
mov
adc
js
bound
out
mov
pop
pop
pop
sub
adc
pop
mov
push
or
das
daa
adc
rcrb
rorb
pop
push
inc
mov
xchg
mov
push
cs
cmp
mov
adc
or
mov
push
inc
adc
pop
hlt
dec
popf
sub
fcoml
jnp
outsl
xchg
xchg
dec
dec
mov
pop
jbe
dec
adc
in
cmpsl
outsl
mov
pop
dec
fwait
sbb
inc
mov
je
icebp
xchg
adc
xchg
or
pop
pop
bswap
scas
inc
cwtl
lahf
push
jo
cmp
fwait
in
push
iret
adc
sub
adc
cmpsl
arpl
push
and
sub
xchg
cmpsl
lcall
and
cmp
imul
cmpsl
push
sbb
cmp
pop
rorb
jge
push
and
imul
inc
repnz
ss
adc
sub
daa
mov
pop
dec
jle
cmc
xor
test
pop
mov
nop
mov
push
ljmp
adc
pop
or
mov
je
dec
loope
xchg
ja
cmpsl
mov
cmp
adc
fidivrs
fsubl
test
sub
dec
loopne
cmp
adc
inc
push
xchg
adc
mov
imulb
lock
dec
sub
push
int
sub
ljmp
ds
aam
mov
in
cld
pop
jecxz
fs
sbb
fs
and
test
xor
sub
lret
or
repnz
dec
inc
lods
push
sub
mov
pop
add
jg
sbb
cs
mov
insl
inc
sub
and
aas
sub
mov
cmc
push
sbb
stc
push
xorl
call
es
shll
cmp
test
scas
inc
imul
in
sub
or
xchg
pop
cs
sub
popf
push
push
cwtl
test
les
outsl
xor
or
lods
nop
cmc
sahf
aaa
stos
mov
xchg
cwtl
js
push
jmp
push
inc
lret
xchg
cmp
pop
movsb
sbb
dec
xor
pop
jne
push
mov
mov
in
mov
insb
inc
xchg
jno
xorb
stos
xchg
xchg
int3
loopne
sbb
sbb
add
add
push
mov
fldcw
xchg
repz
and
jnp
or
sbb
and
cmp
push
adc
xchg
push
mov
cli
mov
or
lock
mov
frstor
jge
jl
cli
sti
mov
jo
pop
cli
or
mov
xchg
gs
mov
shlb
ja
daa
fwait
aam
lret
xchg
pop
test
xor
or
jmp
xchg
and
inc
aam
fisubrl
mov
xchg
sahf
aaa
and
lods
sub
or
fwait
sbb
pop
xor
scas
mov
xchg
pushf
mov
or
mov
out
out
cmpl
cmp
test
dec
jmp
iret
xchg
push
test
jae
pop
std
mov
subl
stos
xor
xor
xor
xor
dec
pop
pop
sbb
lea
inc
stos
jne
gs
xor
rorb
movsb
ret
xor
sbb
push
and
and
mov
or
jl
mov
das
or
inc
push
rorb
inc
stos
and
cmpsl
mov
jecxz
call
pusha
das
xor
stos
cmpsb
arpl
cmp
or
jo
mov
ret
and
ljmp
xchg
loop
lock
dec
ret
sbb
sbb
push
popa
dec
xchg
add
flds
stos
mov
or
mov
push
cs
mov
jno
lahf
add
pop
cmpsb
pop
add
adc
pop
adc
lcall
mov
mov
jge
vcvtph2ps
dec
pop
je
aad
sbb
adc
or
push
in
aas
push
popf
dec
add
clc
push
xchg
or
lock
mov
pop
jno
aad
aam
inc
shll
je
fldcw
dec
pop
xor
sbb
test
dec
in
add
push
sub
or
popl
popa
scas
scas
loope
cs
sbb
jp
adc
xor
sbb
test
loope
cmp
fstps
or
mov
movsl
je
lret
int3
sahf
cmpl
xor
sub
lods
jge
outsb
xchg
mov
xor
mov
mov
inc
xlat
jae
aaa
std
sub
add
mov
imul
daa
aam
or
or
imul
or
out
insb
loope
hlt
dec
and
loope
outsl
xor
clc
addl
xchg
jge
inc
popf
int
ret
or
push
cltd
pop
add
dec
insl
popa
addr16
imul
je
outsl
jns
imul
call
test
cmpsb
lock
mov
sbb
leave
or
xor
push
push
call
mov
xchg
lods
and
out
mov
rcll
push
push
lds
fidivrs
jg
rcrl
inc
movsl
jae
inc
in
stos
sub
outsb
cli
push
xchg
xchg
mov
cmpl
dec
sti
dec
or
aas
repnz
sarb
adcb
and
jle
rorb
sbb
mov
push
inc
sub
fadds
idiv
pop
jmp
shl
and
mov
ja
rcrb
rolb
repnz
imul
cmpsl
mov
inc
inc
es
and
rcrb
push
mov
jno
nop
xor
stos
ss
into
movsb
mov
jecxz
mov
gs
leave
fiadds
sti
xor
mov
ss
mov
dec
xchg
dec
loop
ret
dec
mov
dec
mov
fcmovnu
aaa
xchg
dec
xchg
das
xor
les
leave
cmpsb
daa
sbb
mov
sub
inc
cmpsb
adc
ret
pop
in
cmp
imul
enter
adc
nop
jl
iret
mov
test
or
rcl
aas
and
xor
mov
mov
dec
push
leave
mov
arpl
cmp
and
mov
int
inc
ret
push
ret
or
add
cmp
cmp
cmp
pusha
add
push
mov
pusha
pushf
lea
jmp
cmp
les
push
push
test
push
out
call
insb
imul
xchg
jl
pop
bnd
stc
repnz
mov
icebp
cmp
scas
push
cmp
imul
lea
jns
ja
add
add
sub
jecxz
cli
sbb
subl
mov
or
fbld
bound
movsl
cli
cmp
add
mov
xor
je
lret
jae
int
and
inc
pusha
loopne
loopne
das
jg
inc
lahf
inc
push
scas
mov
fidivs
imul
and
and
push
mov
sbb
cmp
cwtl
gs
lods
push
mov
cmp
andl
ss
scas
std
xor
stc
jle
mov
rcrb
bound
push
nop
fistpll
jae
mov
jae
pop
insb
ss
inc
shl
jo
sbb
dec
sbb
pushf
mul
nop
test
add
inc
mov
mov
jb
jne
dec
xchg
push
xor
call
in
sbb
and
lea
fistpll
fists
gs
fadds
lea
and
mov
push
or
inc
pushf
sbbl
sbb
std
pop
push
jo
mov
add
jns
out
aam
dec
xchg
jle
pushf
inc
movsb
mov
mov
pusha
movsb
sub
arpl
sbb
inc
cli
rol
xchg
inc
icebp
in
aas
pop
into
mov
jnp
dec
sbb
fcmovbe
lea
cmp
arpl
cwtl
jne
loop
sbb
idivb
dec
dec
btc
mov
shlb
or
jns
and
and
or
imulb
js
mov
mov
test
sub
ss
ss
inc
add
outsl
dec
lock
loop
pop
hlt
push
lahf
push
xchg
repnz
or
ja
data16
call
imul
pop
mov
int
jecxz
in
lahf
rorb
jle
out
mov
xor
popf
rorb
cmp
xor
es
adc
add
nop
rolb
xchg
inc
fs
mov
mov
insb
adc
hlt
push
inc
in
dec
outsb
xor
int3
jb
out
xchg
add
and
shll
lea
push
call
aaa
cs
and
stos
aad
popa
inc
mov
push
aaa
loope
inc
add
mov
or
sbb
sub
sbb
add
and
sub
addr16
shrl
mov
pop
jae
xlat
mov
loop
and
test
and
cmp
pop
sub
mov
cwtl
xchg
add
outsb
lods
faddl
scas
ds
mov
testb
hlt
push
jle
clc
scas
je
mov
popf
cs
cwtl
gs
stos
inc
fnstsw
in
lret
lret
push
cmp
dec
into
dec
filds
add
ja
imul
push
pushf
push
lea
je
stc
pusha
bt
push
cmp
push
call
jno
testb
cmp
xchg
pop
jmp
loopne
scas
aad
push
adc
lret
aas
leave
lahf
push
loopne
scas
pop
push
out
pushf
fucomip
mov
cmpsl
pop
cmpsb
dec
inc
mov
int3
sbb
mov
cmp
dec
dec
xchg
pop
sub
icebp
push
dec
xor
sbb
xor
xchg
icebp
mov
fldt
lcall
xchg
cmp
in
pop
inc
mov
mov
push
idivl
fistpl
or
int
push
pushf
mov
pop
arpl
mov
hlt
ficompl
pop
sub
sub
sbb
pop
push
pop
sbb
add
fstpt
mov
dec
dec
dec
fimuls
mov
jp
sub
jae
jecxz
inc
stc
pop
and
sbb
jbe
stos
jae
cmp
mov
lret
testb
mov
jecxz
imul
fwait
sbb
adc
sub
jge
loop
jbe
int
lods
sub
in
sub
jmp
stos
test
call
sub
insb
xlat
jmp
sub
xlat
sbb
ljmp
push
test
in
sub
xlat
sub
in
jmp
imul
sub
stos
xlat
ljmp
xlat
sbb
and
movsb
lret
cmc
aad
test
lcall
ficoml
std
aam
adc
and
ja
mov
adc
loope
andl
adc
mov
cltd
mulb
jns
cs
and
mov
push
cmp
fbld
std
js
sahf
adc
popf
repz
sub
mov
test
mov
rcrb
rcl
pusha
add
pushl
rcr
mov
movw
stc
clc
test
push
lea
je
pusha
sub
mov
jmp
dec
push
icebp
andl
pop
stos
in
and
aam
sbb
aam
jne
in
mov
xor
jecxz
in
xor
xchg
mull
mov
sbb
inc
add
out
or
dec
ljmp
pop
sahf
dec
stos
pop
inc
ljmp
push
pop
es
inc
sarl
mov
bound
mov
sub
out
ja
sbb
aas
sahf
cmp
not
xchg
xlat
js
mov
aaa
lcall
inc
dec
dec
xor
cs
insb
add
fldl
dec
scas
lock
push
rcl
pop
and
popa
fldcw
and
push
dec
andb
xchg
jg
repz
pusha
lret
sarb
and
jne
sahf
mov
shll
adc
out
push
lret
stc
and
mov
sub
inc
dec
xchg
xchg
ret
jns
lahf
sub
lret
dec
push
mov
sub
pop
lock
jg
je
xorl
sbb
lahf
xlat
jbe
loop
dec
pop
push
loopne
andl
jmp
stos
cmp
add
mov
ljmp
fiaddl
adc
insb
lea
not
popf
xor
enter
imul
insb
sub
flds
mov
mov
lret
jmp
jbe
sub
mov
bound
push
xchg
and
jle
rcrb
in
mov
shrl
xchg
or
sub
sub
pushf
and
out
cmp
es
xchg
and
hlt
sbb
pop
ja
sbb
negb
clc
push
dec
lahf
pop
fcomps
ret
add
sub
push
xchg
insb
in
lock
negb
fsub
or
ss
addb
stc
roll
sub
dec
push
ljmp
nop
insl
xchg
insb
inc
hlt
ss
std
jle
push
mov
in
ja
je
push
sub
enter
xor
fistpl
jo
popa
jb
enter
jmp
lock
ds
lock
notl
pushf
mov
jmp
std
xlat
jae
and
and
call
pop
mov
out
xor
movsl
fsubrl
movsb
jno,pn
jb
adc
cld
add
inc
inc
or
mov
and
inc
pop
gs
inc
addr16
jg
dec
rcrb
test
add
jg
ret
sbb
shlb
adc
adc
inc
pcmpeqb
bnd
mov
jne
mov
ljmp
cwtl
jmp
popa
sbb
loopne
xor
inc
cmp
xchg
add
mov
out
add
xor
in
mov
lcall
les
int3
sbb
std
jge
jb
mov
and
or
add
sub
sub
repz
mov
push
out
and
dec
sub
lods
ret
outsb
sarl
mov
or
ja
repz
xchg
out
enter
add
sub
pop
gs
mov
or
xacquire
and
imull
push
sub
xor
filds
in
jmp
repnz
jg
les
pop
mov
lret
jge
ret
jg
xor
dec
push
js
pop
shr
cli
gs
xor
arpl
push
pushf
or
fstpt
fidivs
xor
xchg
xchg
nop
cli
test
aad
mov
fistpll
and
add
pop
xor
and
inc
add
and
stos
jnp
mov
rclb
clc
popf
inc
push
jle
push
add
lret
or
lret
les
xchg
xchg
mov
aad
push
xor
xor
lods
ja
sub
mov
fmulp
lods
mov
pusha
aad
jecxz
mov
xchg
adc
pop
iret
dec
sbb
push
adc
adc
xor
notb
insl
nop
daa
mov
jecxz
jno
jle
int
adc
dec
std
fucomi
movl
jbe
sbb
cmp
fmul
or
lret
sub
xchg
push
hlt
sub
adc
inc
push
cmp
inc
mov
ljmp
sbb
shrb
mov
shrl
mov
out
outsb
in
ljmp
inc
in
movsl
sub
xor
fwait
loopne
pusha
scas
jne
inc
mov
dec
mov
in
outsb
push
lea
leave
add
icebp
sub
fdivs
jle
lcall
in
push
je
push
add
cmp
loopne
es
or
pop
jbe
lds
mov
xchg
outsl
insb
xor
cs
insb
add
or
les
push
in
cmp
movsb
test
outsl
mov
mov
sub
das
stc
mov
ja
aas
adc
mov
fstl
sbb
push
scas
imul
pusha
jae
fwait
dec
sbb
cmpsb
xchg
or
rcl
addr16
cmpsb
sahf
sbb
xor
inc
sub
cmp
pop
mov
dec
xor
inc
repz
andl
out
dec
push
xor
into
sub
add
movzbw
mov
bsr
bts
rcr
sar
mov
ror
bsf
pushf
add
sub
pop
shrd
shr
bsf
add
call
lret
leave
jl
les
mov
add
and
mov
fdivs
cmp
add
roll
jne
sub
insl
mov
xchg
test
jmp
sbb
aad
jle
mov
push
mov
inc
ss
cltd
clc
pusha
addb
sbb
pop
or
and
xchg
fsubrs
out
pop
pop
aad
stos
rcrl
ja
pop
jl
frstor
or
mov
sbb
jp
ljmp
add
imul
push
decl
decb
and
mov
push
cli
scas
sarl
dec
adc
aas
adc
dec
shlb
repz
xchg
roll
adc
cli
and
cli
enter
aad
mov
mov
shll
loopne
and
les
adc
jge
rorb
mov
mov
jo
outsl
mov
mov
scas
mov
test
cli
push
dec
mov
dec
sub
rclb
mov
dec
mov
lods
lods
inc
mov
fsubrl
aad
std
mov
mov
lods
xor
sarb
repz
and
xor
push
pop
mov
dec
jbe
or
shl
jle
insb
push
ds
and
ljmp
xor
cmp
mov
pushl
jae
inc
push
fidivrl
sbb
sarl
nop
cs
lret
sbb
adc
pop
cmp
popa
mov
push
dec
mov
pop
test
addr16
nop
fisubrl
mov
add
cmpsb
cmpl
lret
les
sbb
rol
xchg
xchg
int3
repz
lcall
sub
imul
pusha
loopne
mov
frstor
pop
jle
or
cli
lods
std
or
test
inc
dec
mov
imul
and
xor
xor
or
mov
repz
and
aam
into
inc
add
or
cmc
subl
jecxz
xor
and
std
lds
jp
les
jb
mov
bound
jp
push
dec
jae
add
adc
jg
insl
dec
jp
test
and
push
scas
inc
lods
mov
seta
pop
push
dec
out
ljmp
out
fstl
cld
fnsave
xchg
xchg
jo
cmp
pop
sub
xor
adc
cltd
cmpsl
cmp
jns
push
sarl
jae
fdivrs
xchg
jp
les
fnstenv
push
test
outsl
loop
xchg
mov
rcll
xchg
ja
mov
in
ljmp
dec
int
fldt
cld
sbb
rolb
or
dec
ret
cltd
and
jo
and
sbb
adc
adc
pop
adc
mov
push
testl
xchg
fstps
lea
call
test
clc
stc
cmp
call
inc
pusha
call
push
sete
pushf
lods
stc
bt
pusha
clc
ror
xor
shl
rcl
mov
neg
adc
rcr
bt
sub
pushf
setb
cmc
jmp
mov
mov
jge
fadd
fnstsw
sub
std
mov
push
and
pop
rorb
lret
dec
or
jo
xchg
ficoml
aad
adc
cmp
mov
adc
fs
mov
lret
popa
pop
movsl
aaa
jne
pop
mov
jg
pop
fisubl
stc
push
daa
and
cmpsb
mov
jno
push
inc
cmpsl
arpl
push
movsl
inc
pop
add
int
popf
jge
lea
jg
mov
inc
insl
js
les
and
sahf
adc
and
into
adc
pop
ljmp
jge
test
stos
inc
mov
ret
mov
inc
mov
loopne
gs
leave
push
sub
hlt
cli
push
jecxz
es
inc
aad
daa
subb
pushl
cmc
shr
call
outsl
and
les
pop
ljmp
cmp
ret
iret
dec
mov
cltd
xchg
mov
test
mov
repnz
gs
mul
cmp
lock
div
test
gs
sub
xchg
loope
push
add
ret
mov
and
mov
lcall
stos
jecxz
mov
aam
es
out
xlat
daa
cmpsl
cwtl
jbe
sbb
pop
les
bound
xlat
aad
stos
and
hlt
gs
mov
jnp
xchg
test
out
pushf
push
scas
lea
adc
mov
movsb
mov
addb
lcall
shlb
leave
inc
divb
mov
mov
dec
xchg
and
insb
xor
shr
in
shll
jge
jno
mov
mov
mov
aaa
xchg
fsts
sub
xchg
pushf
mov
pushf
jne
pop
pop
inc
leave
jbe
enter
push
je
xchg
pusha
lock
jl
aaa
and
xchg
push
filds
mov
and
xor
or
pop
or
sbb
jecxz
jo
and
pop
adc
jno
or
mov
cmpl
call
push
and
bound
and
pop
sbb
mov
pop
lock
std
adc
cwtl
mov
cmc
fsubl
mov
pop
rcr
out
xchg
outsl
push
cmpsl
cmp
push
push
ds
add
push
iret
mov
test
add
int3
mov
pop
adc
dec
xchg
scas
icebp
and
fwait
pop
ret
mov
and
cmp
and
dec
mov
daa
scas
push
dec
jno
cs
iret
and
jno
iret
scas
popf
scas
xor
mov
lcall
add
dec
in
mov
mov
mov
gs
iret
jbe
out
es
sbb
test
cmp
jb
xor
aad
sbb
jbe
pop
in
xchg
or
pop
or
lcall
dec
addr16
mov
adc
adc
mov
test
gs
push
ds
push
mov
pop
add
cmpb
and
repz
mov
dec
popa
inc
mov
or
pop
inc
mov
int
fdivr
fistl
mov
and
mov
aad
cmc
test
bound
xor
js
icebp
dec
cli
in
cmc
es
inc
lods
pop
mov
push
mov
push
fwait
sub
outsb
scas
inc
cmc
das
test
out
std
in
gs
or
cmp
in
xchg
cmc
outsl
or
sahf
div
or
ds
push
jmp
xchg
test
jbe
mov
in
push
idivb
and
jns
and
icebp
cmc
cmpsl
inc
decl
xchg
push
xor
cld
mov
dec
pusha
in
pop
pxor
pop
jle
icebp
fisttps
mov
cmp
stc
xchg
push
jae
fnop
and
push
ds
jno
movsl
sub
push
daa
add
mov
mov
cmp
lods
inc
mov
xor
xor
mov
orb
movsb
movsb
lcall
or
mov
sti
ficoms
cmp
jae
jecxz
mov
pop
cmp
xchg
or
mov
ret
fucom
cmpsb
data16
pop
inc
rep
movzbw
mov
pushf
push
push
movb
lea
jmp
add
push
popa
insb
imul
je
mov
les
or
mov
pop
cmpsb
fdivrs
sub
dec
xchg
pop
jg
test
push
das
dec
aas
test
aaa
inc
leave
imul
ret
cli
xchg
mov
cmovp
add
addr16
imul
jbe
lret
and
mov
or
cmp
dec
arpl
aas
dec
cmp
mov
inc
cwtl
int3
adcl
dec
fdivrl
pop
pop
xlat
mov
clc
sbb
xlat
xchg
jmp
jp
data16
or
mov
enter
jae
fnstenv
ljmp
pop
cmc
xor
lret
xchg
or
imul
mull
dec
frstor
inc
or
mov
add
andb
out
addb
push
push
dec
mov
push
dec
sub
jbe
push
mov
sbb
sub
xor
test
cmp
or
dec
insl
lret
adc
xor
hlt
scas
sbb
push
das
nop
mov
icebp
inc
out
pop
cmp
insl
xchg
bnd
xchg
scas
jae
les
cs
out
rcll
popa
dec
loopne
lahf
scas
nop
cmp
lret
cltd
and
xor
xor
aam
nop
jp
stos
inc
enter
test
test
pop
sub
clc
jmp
pop
subb
fmuls
pop
dec
mov
dec
dec
rcl
pop
inc
subl
sub
pop
in
stos
xor
jmp
mov
fiadds
dec
xor
shrl
pop
lods
adc
test
shl
shl
sub
sbb
setl
mov
inc
sar
pushf
setl
add
shr
bt
ror
mov
bt
cmp
test
jmp
or
fidivl
les
add
fisttpll
inc
ffree
imul
lock
pop
cmpsb
xor
xor
push
adc
jle
fcomps
push
adc
xchg
scas
rcll
loopne
mov
dec
in
push
loope
pop
inc
clc
cmp
pop
sbb
test
hlt
mov
adc
repz
cltd
sub
dec
mov
mov
lahf
sbb
leave
or
mov
mov
dec
mov
loope
dec
jo,pn
lods
repz
int3
sahf
into
push
aad
xor
jb
loopne,pn
jle
and
call
pop
das
mov
popa
por
xlat
negb
cld
mov
je
jbe
sbb
xor
repz
inc
push
in
inc
mov
jo
dec
stos
stc
jecxz
mov
fsubl
repz
pop
movsl
adc
imul
and
clc
lcall
sub
inc
push
push
stos
lds
pop
xchg
xor
mov
lcall
pop
push
fnstsw
enter
imul
ljmp
sbb
fadds
push
lds
vpsubd
dec
repz
mov
push
inc
dec
sar
mov
sub
in
push
xchg
pop
mov
cmp
sub
and
js
xlat
movsb
scas
jno
les
das
popa
into
outsb
rorl
push
scas
andl
mov
push
push
rcll
or
jns
ljmp
xor
pushl
mov
setge
sub
xchg
ds
cmp
fildl
pop
leave
mov
push
mov
adcb
cmp
dec
call
mov
data16
imulb
push
jns
jno
add
sub
iret
mov
aaa
push
dec
aam
rcrb
int3
lock
cli
dec
cmp
ss
mov
std
repz
mov
js
push
mov
cwtl
dec
mov
pop
cmpl
bsr
popf
add
push
in
jmp
and
xlat
pop
test
stos
mov
ret
push
movsb
aas
outsl
mov
xrelease
ror
test
push
inc
cmpsb
push
or
dec
out
cmpsl
mull
fdivs
imul
dec
xchg
scas
shll
jo
les
mov
dec
cmp
stc
ja
lahf
dec
dec
mov
int3
imul
jg
and
movsl
jb
lea
xchg
xchg
insb
fcompl
shll
popa
sbb
aam
test
popa
cmp
or
test
mov
or
push
and
lcall
imul
dec
notl
aaa
cltd
sbb
fstps
pusha
call
mov
mov
jb
loop
int
int3
add
mov
cmp
pop
imul
cmp
loop
xor
jno
adc
xor
jp
imul
and
int
cmp
cwtl
push
shll
xchg
xorb
ja
pop
cmc
and
daa
stos
adc
push
sbb
jp
imul
ss
popa
push
xchg
mov
repnz
sbb
dec
jno
inc
rol
cmc
sahf
inc
pop
xor
cmp
jbe
adc
dec
movsl
js
outsl
mov
and
mov
push
lcall
ret
fadd
push
xor
mov
inc
cmp
jns
jp
arpl
out
es
jmp
xor
sbb
daa
je
sbb
cmp
leave
sbb
popa
mov
ret
adc
xchg
cmpsb
loope
in
pop
mov
lahf
jns
xchg
xchg
pop
push
push
out
xacquire
inc
pop
test
test
sub
sbb
loop
jnp
lretw
popf
mov
mov
les
and
scas
icebp
iret
nop
outsb
pop
push
rorl
imul
and
aad
mov
int
psrlq
ja
and
scas
sub
push
inc
pusha
aaa
std
pop
repz
mov
out
sub
xchg
mov
in
gs
xor
mov
mov
cmpsl
push
mulb
fsubr
or
cli
sub
fdivs
loopne
insl
jae
repz
jge
jge
push
jl
xor
push
rolb
jle
in
cmpsl
out
sbb
fisubs
sbb
push
lret
into
cmp
pusha
jo
ljmp
loopne
jecxz
repz
jae
sbb
insl
in
hlt
mov
xor
pusha
repnz
or
das
dec
or
pop
in
xlat
jg
int
or
and
in
inc
xchg
or
push
ja
pop
xor
rclb
stos
push
or
jge
sarb
adc
nop
mov
xchg
mov
cmp
pop
fldl
adc
inc
sub
inc
xor
repz
leave
fcomi
out
gs
xchg
pop
pop
mov
aam
or
push
roll
sahf
push
add
xchg
jae
out
pop
clc
push
sbb
xor
dec
std
xchg
out
pop
jmp
mov
xchg
dec
out
repnz
ds
gs
push
mov
jne
push
mov
clc
js
mov
or
mov
cmp
xchg
adc
and
lea
jbe
xchg
dec
sar
sub
sub
jmp
sub
les
sub
leave
jmp
pop
js
sub
push
sbb
rcl
push
adcl
aam
lea
push
test
jp
int
loop
push
pop
test
dec
stos
aaa
sub
stos
test
ret
and
stos
push
cmp
in
mov
js
enter
pop
std
pop
sbb
aad
and
sub
rcrb
inc
adc
cmp
stos
ret
stc
sbb
mov
cs
and
jecxz
popa
shrb
sbb
inc
push
imul
jp
mov
cmp
add
jo,pt
fsts
pusha
cltd
pop
mov
fiaddl
cmpsb
push
dec
xor
in
test
sahf
mov
nop
pop
repz
sbb
xor
lahf
mov
in
mov
movsb
aad
pop
mov
daa
jno
repnz
insl
fsubs
sarb
lds
sbb
out
fbld
xor
jno
mov
outsb
mov
inc
insb
test
jmp
jmp
lret
xchg
push
imul
cmpsb
testb
jmp
pop
xchg
shrl
ret
mov
out
xor
cltd
fwait
les
cmp
fmul
add
adc
sbb
ret
imul
iret
mov
mov
fmuls
stos
jno
arpl
ret
ljmp
push
pop
repz
cld
adc
call
imul
popl
xchg
loop
pop
adc
jge
dec
clc
adc
pop
test
repz
or
and
pop
inc
ljmp
push
jge
rclb
imul
lds
pop
inc
push
stos
mov
aam
arpl
imul
push
cmp
imul
cmp
fisttpll
push
jle
test
add
out
das
mov
xchg
mov
cltd
xor
or
inc
sub
xor
push
out
test
test
imul
mov
roll
adcl
pushf
insb
sbb
mov
fmulp
cli
sarb
and
push
lea
ja
cmc
imul
pushf
add
lea
pushf
lea
jmp
pushf
pusha
jmp
lcall
mov
iret
mov
rorl
ds
roll
outsl
fistpll
cmp
dec
cmp
add
aas
pop
sbbb
sbb
push
cld
popa
mov
les
out
insb
inc
inc
ja
mov
stos
mov
sarb
popf
pusha
das
add
scas
rorl
sbb
dec
out
dec
lock
sbbb
dec
fsub
imul
faddp
outsb
mov
movsl
jl
or
pop
cmp
jnp
xor
xchg
mov
in
ret
outsb
outsb
sbb
push
xor
and
ret
ds
pop
inc
aas
add
push
mov
setno
pop
rcl
imul
dec
mov
std
xchg
mov
pop
leave
mov
test
arpl
xor
mov
and
nop
cmp
outsb
fldcw
popf
pop
fbstp
movsbl
jg
int
inc
and
loop
fstps
push
jbe
push
xchg
call
push
imul
add
mov
cmp
cmp
stos
adc
divl
mov
movsl
pop
jns
out
popa
in
or
cmc
rclb
pop
push
ret
test
mov
in
inc
sub
xor
xchg
pop
mov
xor
and
or
push
mov
jb
into
push
test
push
jge
push
push
rcrb
scas
mov
lods
sahf
les
int
fiaddl
mov
jo
mov
rcl
add
lahf
rcr
inc
outsl
lock
sahf
pop
inc
enter
lea
js
and
sub
push
pop
stos
lret
jnp
jp
stos
mov
pavgusb
adc
int3
ja
push
daa
in
ljmp
lods
xorb
and
pop
push
pop
in
mov
ror
dec
int3
cli
jns
sub
push
cld
ja
enter
gs
out
lods
gs
cli
out
push
dec
nop
or
aad
push
add
pop
sbb
inc
cmpsb
aaa
dec
fxch
sub
jns
xchg
in
cltd
pushf
jmp
setnp
addr16
cwtl
push
cmp
in
mov
repnz
sub
xor
mov
call
insb
dec
addr16
rorb
movsb
jp
adc
lret
fbstp
push
mov
sub
adc
cmp
mov
mov
push
in
xor
cmpsb
insb
mov
adc
cmc
dec
cmp
adc
scas
mov
add
mov
sub
dec
dec
adc
lock
rcrb
nop
jno
outsb
ds
testl
jp
sub
rcl
and
mov
bt
cmpb
jg
push
lea
jne
neg
movsbl
btc
adc
xor
rol
bt
lea
mov
push
rcl
not
add
shl
mov
cmc
test
lea
jbe
je
pusha
cmc
sub
test
stc
bt
pushf
cmp
jmp
mov
data16
and
jl
jb
rcl
mov
push
jb
std
lds
cwtl
cmp
stos
cwtl
cwtl
mov
cmp
xor
stos
and
cmp
outsb
pop
pop
push
cwtl
ja
push
fbld
rorb
pop
cltd
je
inc
fucom
ljmp
xchg
mov
mov
dec
push
inc
xlat
lea
adc
sub
pop
jae
push
dec
leave
xor
lcall
movsl
fisubrs
sbb
and
jmp
mov
jmp
or
lock
mov
mov
addl
faddl
push
mov
dec
mov
mov
orl
enter
cmp
inc
fcmovnu
push
dec
ficompl
sub
cmc
ljmp
loopne
call
adc
mov
pop
out
jae
das
out
out
insb
stc
stos
aad
insl
push
fdivl
or
cmp
sbb
add
inc
jl
stc
test
psubusb
cmpsb
jmp
movsl
cld
add
add
pop
nop
test
push
mov
les
scas
mov
loope
out
stc
sarl
inc
int3
pop
je
mov
mov
daa
aad
ret
or
push
push
stc
jecxz
sub
mov
rclb
icebp
mov
pop
out
adc
sub
ret
iret
lock
sbb
sbb
mov
ret
mov
cmp
movsb
fcmove
cli
jns
pop
xchg
movsb
mov
cmp
mov
pushl
lods
clc
jmp
pusha
lods
push
call
jmp
mov
les
inc
hlt
push
xchg
hlt
mov
movsl
push
lret
cmp
dec
sbb
lds
movsl
or
shll
dec
xlat
scas
ja
lcall
fsub
icebp
rcll
sti
clc
pop
mov
test
mov
sbb
mov
jecxz
push
data16
sub
push
mov
lock
mull
and
mov
sub
popa
push
movsb
out
fwait
and
add
pavgb
and
scas
icebp
sub
pop
into
sub
add
call
adc
xchg
adc
lret
movsl
in
inc
xor
sub
cmp
mov
mov
xchg
insl
xor
and
jecxz
cmp
fs
pop
arpl
aaa
cs
jb
enter
mov
notl
cs
imul
cwtl
inc
or
push
mul
fimuls
cmp
jl
jae
mov
loop
test
out
scas
mov
mov
pop
hlt
enter
inc
sbb
sbb
mov
pop
xchg
push
ja
xlat
cmp
cmp
out
movl
pusha
movl
pusha
pushf
lea
jmp
bsf
cmp
clc
mov
pusha
jmp
or
in
and
push
clc
stc
dec
push
push
push
pop
daa
out
sbb
xchg
dec
inc
cmp
jl
jmp
shrb
in
js
sub
mov
pop
sub
mov
or
outsb
addb
lds
jns
cmc
and
lods
loopne
mov
fldt
and
or
jns
lahf
daa
into
sub
xorl
cltd
pop
dec
hlt
adc
inc
lcall
jge
popf
sbb
jae
mov
sahf
add
add
cmp
fwait
out
arpl
mov
nop
scas
and
jo
xchg
call
pusha
std
jl
jg
scas
inc
rcrl
mov
push
adc
das
cmc
out
sbb
pop
inc
jp
pop
rclb
add
sub
fstp
dec
dec
stc
arpl
sub
ficomps
lret
pop
mov
jecxz
ror
or
or
push
test
enter
js
aaa
cmpsl
out
test
call
jne
push
es
mov
insl
bound
and
iret
fcomip
pop
xor
pop
es
lret
outsb
mov
mulb
pop
in
mov
outsb
test
mov
push
cwtl
sub
out
fistpll
nop
jno
rcrb
roll
cmc
inc
lock
mov
fbstp
mov
sbb
sub
jmp
mov
pop
dec
gs
mov
iret
adc
insl
jae
adc
dec
paddsw
lods
adc
cltd
push
xchg
inc
movsl
xlat
into
movsb
filds
xor
adc
cmc
pop
test
xor
jns
mov
ret
xchg
js
pop
imul
jge
mov
dec
xorb
mov
scas
adc
popa
and
xchg
hlt
xchg
jnp
movsl
mov
mov
xchg
fstpl
sbb
adc
dec
mov
es
call
pop
xchg
push
and
dec
dec
lock
mov
pusha
sub
or
std
lods
das
mov
mov
jb
mov
out
mov
inc
or
imul
xor
cwtl
daa
movl
pop
repnz
fs
je
push
mov
mov
lea
jmp
inc
clc
not
call
jmp
dec
pusha
sar
mov
lea
cmp
not
mov
push
stc
shr
cmp
mov
clc
mov
cmc
cmc
cmp
neg
push
clc
ror
clc
neg
pusha
call
shlb
pop
popf
int3
add
orl
cmp
sub
insl
lahf
lods
std
test
int3
fimuls
cmp
jmp
mov
and
or
daa
rcrb
popf
adc
mov
rorl
jl
jg
hlt
sbb
mov
add
sub
mov
cwtl
mov
insb
mov
popf
dec
jb
loop
or
iret
push
xchg
sub
ret
pop
clc
add
popa
and
mov
mov
inc
mov
fs
aad
fcomi
push
mov
leave
cmp
pop
jo
in
sbb
aam
dec
dec
mov
ds
inc
ljmp
jl
push
test
xor
jnp
xor
call
dec
repnz
xchg
inc
lahf
add
mov
in
test
xor
repz
sub
testb
push
add
std
or
jecxz
or
ret
movsb
pop
add
shlb
and
pusha
and
lods
out
outsl
dec
pshufw
mov
iret
pop
xlat
push
js
mov
mov
mov
xor
scas
xchg
je
out
jmp
call
scas
sbb
lahf
pop
dec
add
andl
shlb
pop
popa
sub
addl
mov
inc
negl
call
mov
mov
imul
or
or
or
jae
mov
fmuls
pop
inc
cmp
jnp
hlt
xor
lods
enter
xchg
sbb
ss
ret
cmc
test
int
cli
adc
cmp
jbe
shrl
icebp
call
jecxz
lock
pop
rclb
sub
cli
ja
pop
inc
cmp
aaa
mov
js
pusha
movsb
mov
iret
mov
sbb
or
mov
leave
fldcw
stc
jno
cmc
xchg
shrb
outsb
iret
decb
mov
pop
movsl
pop
ss
mov
mov
xor
negl
out
imul
mov
rorl
sahf
inc
fbstp
pop
adc
sub
add
push
sbb
or
jbe
orl
mov
sbbl
test
shrl
nop
or
adc
test
lcall
cld
xchg
and
testl
lds
ret
nop
xor
pushf
add
inc
popf
sahf
xchg
ret
adc
or
sub
mov
push
mov
clc
insb
jne
stos
data16
in
push
int3
js
hlt
lock
mov
xor
jl
pushf
cwtl
in
scas
or
mov
cmp
sub
stos
inc
aam
pusha
push
adc
jns
dec
arpl
js
pop
and
sbb
fidivl
or
dec
stos
in
xchg
mov
xor
imul
and
outsb
adc
dec
ss
mov
les
loopne
cld
cmp
not
sub
add
bound
or
shr
fildl
pop
enter
jle
in
jne
jns
fs
cmp
and
repnz
cmp
cmp
aaa
mov
rorl
add
les
mov
push
pop
sahf
dec
loope
sahf
fidivrs
std
and
pop
icebp
sarb
jbe
push
movl
pusha
jmp
aam
sub
and
popf
jo
cs
add
add
clc
cmp
mov
aad
in
shl
mov
ret
or
in
sub
and
ficomps
pop
or
push
mov
or
out
mov
cld
mov
out
cs
pop
sub
and
push
push
add
add
or
push
cmp
shr
fs
roll
cs
cwtl
stos
stos
cmp
push
stos
mov
sub
into
icebp
mov
lret
loopne
fsub
xchg
jno
fs
fidivrs
pop
mov
push
push
pusha
jae
push
icebp
xor
pop
cmpsb
mov
jmp
add
fsubs
sub
mov
mov
sahf
mov
sbb
pop
inc
mov
push
jne
aad
mov
test
dec
mov
sahf
fisttpll
fwait
shlw
sarb
out
fistpll
push
scas
xchg
inc
mov
aaa
push
movsl
jl
adc
lea
sub
rcrb
xchg
es
mov
pushf
jno
mov
fcomps
test
cli
clc
xor
btr
shl
mov
setne
dec
add
or
ror
rol
add
mov
cmp
call
xor
xchg
mov
lcall
or
xor
mov
leave
movb
mov
mov
jo
rcr
rcll
mov
pop
dec
mov
sub
das
fstl
pop
fldcw
mov
nop
jl
xor
xor
out
mov
xchg
cmpsl
cmp
sbbl
mov
into
or
les
mov
ret
in
pop
inc
and
stos
add
cmpsl
leave
leave
xlat
js
out
inc
push
mov
lds
mov
shl
push
shl
mov
movb
mov
sub
jmp
and
add
and
mov
fsubrs
pop
cmpsl
push
xchg
test
mov
or
imul
push
out
fcoml
sub
fistl
dec
mov
mov
das
fstp
mov
rorb
or
jbe
dec
mov
and
js
fistpl
jl
jg
ljmp
out
push
xchg
pop
in
lods
xor
loope
jae
dec
out
test
mov
and
push
imul
cmpsb
enter
push
pusha
cltd
cmp
arpl
movsl
adcl
cs
insb
add
repz
jno
das
mov
loopne
adc
sub
dec
les
mov
ficoml
push
data16
vpcmpgtb
movsb
mov
xchg
imul
mov
sub
xchg
lods
add
outsb
aas
mov
sbb
lret
or
and
dec
fdivs
jmp
push
lock
mov
dec
test
pushl
daa
or
cmp
and
or
pop
pop
adc
sub
fists
je
bound
dec
sub
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
test
add
add
btc
or
xor
add
bts
sub
rol
and
shld
cmp
shr
sar
setno
mov
xor
bswap
add
cmp
cmp
pusha
bswap
add
sub
bt
shl
mov
pushf
shr
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
les
out
sbb
push
addr16
or
loopne
lahf
xor
cmc
fcmove
lret
fmuls
mov
outsb
cmpsb
in
jbe
jb
rol
subb
clc
sbb
jo
divl
cmp
lock
movsb
ss
jl
clc
mov
pushf
outsb
repz
adc
or
cmp
add
push
mov
ret
mov
cltd
push
push
mov
test
divl
cmpsb
xchg
xchg
pop
mov
sub
outsb
push
fidivs
stos
sarb
jmp
push
add
jbe
cmp
or
jne
dec
repz
jo
mov
jecxz
xor
jl
mov
inc
xlat
movb
inc
aad
mov
ret
xor
sbb
sbb
bound
loop
out
pop
lods
or
cltd
jecxz
shlb
shrl
test
je
les
xor
lock
pop
xchg
jbe
cmp
dec
push
push
pushl
jmp
mov
les
fsubrl
insl
repnz
cld
pop
adc
das
push
sbb
je
pop
js
pop
lret
push
xor
in
jnp
xchg
cwtl
xor
fwait
test
mov
sub
in
mov
loopne
xchg
andl
sub
sub
pop
mov
sarl
test
or
mov
les
inc
lret
mov
or
fidivrs
das
lock
dec
out
jnp
imul
cld
adc
mov
int3
mov
jmp
insb
fcoms
les
gs
push
sub
sti
in
lret
je
pop
pop
mov
cs
mov
or
shlb
push
test
push
lret
fs
movswl
lds
addr16
pop
subl
addl
out
sbb
sbb
push
mov
fs
fists
mov
jmp
stos
and
pop
icebp
adc
aad
mov
divl
inc
mov
sahf
fidivrs
or
sub
mov
push
and
rolb
sbb
std
mov
test
cs
xchg
jnp
xor
mov
push
call
ss
jns
lock
lret
shrl
or
pop
pop
js
movl
in
xchg
mov
test
pop
stos
stos
lret
jb
call
mov
fisubs
fidivs
ret
xchg
sbb
adc
adc
jne
out
or
ljmp
out
and
pop
pop
cmp
pop
jnp
ljmp
xor
push
mov
scas
lods
stc
pusha
jecxz
idivb
sahf
push
add
mov
pop
push
push
ret
adc
dec
mov
mov
stos
leave
dec
imull
ja
in
sbb
loope
mov
loop
test
jbe
and
adc
add
stos
mov
cmp
jb
stos
inc
or
mov
jmp
sti
stos
jne
and
sub
ss
aaa
test
test
sti
sub
cld
jb
push
xlat
aad
out
fmul
jmp
mov
mov
xor
or
mov
mov
fists
mov
mov
push
cld
mov
push
jns
inc
shll
dec
fmull
in
incl
aaa
outsl
jecxz
push
cld
xor
inc
sbb
stos
jbe
scas
arpl
mov
sbb
pop
or
loop
jb
mov
in
and
mov
dec
push
and
std
and
push
roll
mov
inc
adc
es
in
mov
leave
testl
lods
insl
aas
inc
notb
jecxz
jo
cmp
dec
out
icebp
sbb
outsl
sti
sar
and
push
scas
ds
jg
int3
call
sub
lcall
das
pop
scas
lock
outsb
ds
lock
aaa
and
addr16
jno
and
es
dec
pop
in
fs
and
inc
mov
dec
mov
in
popa
loope
leave
dec
xchg
pop
and
dec
incl
jp
and
ret
imul
cwtl
fcoml
cmp
insb
neg
popa
xchg
ljmp
add
dec
in
pop
rcl
dec
mov
popf
inc
mov
std
dec
push
jp
add
and
xchg
jle
cltd
mov
dec
push
ljmp
xchg
shll
push
fisubl
ret
jbe
pusha
sub
lea
jg
rol
cmp
jmp
mov
add
and
mov
sub
mov
pop
negl
test
sub
cld
push
lret
ss
push
push
test
inc
mov
sbb
cmp
stos
mov
push
cmpsb
out
ss
imul
dec
hlt
cmp
mov
cmp
pushf
mov
pushl
pusha
lea
ja
pusha
imul
pushf
cmc
cmc
cmp
add
pushl
pushf
movl
lea
jmp
cltd
mov
push
and
and
mov
xor
push
ljmp
mov
cmp
int
out
sahf
aam
inc
pushf
std
sub
xor
or
shll
jno
cs
in
push
jno
jg
mov
icebp
sbb
sbb
push
dec
xchg
insb
testl
out
cwtl
sbb
xchg
mull
jmp
les
insl
ljmp
ds
and
and
cltd
or
addr16
sahf
jg
ret
imul
mov
mov
mov
imulb
lods
inc
bound
sbbb
int
inc
mov
and
jg
test
jo
sbb
pextrw
sbb
mov
jns
enter
test
les
add
cwtl
daa
jg
xor
lahf
scas
xchg
jno
mov
pusha
jbe
xor
mov
dec
stc
add
push
mov
lea
je
call
cmp
push
cmp
mov
call
sbb
push
and
pop
or
mov
adc
int3
add
mov
int3
mov
fidivrs
jmp
or
cmp
xor
adc
lret
ret
loope
jbe
pop
lock
in
dec
cmpsb
fsubs
lahf
fists
jecxz
inc
mov
sti
call
sbb
sar
sbbl
lret
cld
push
call
jno
adc
sbb
sbb
mov
lods
xchg
jg
das
jmp
shrb
icebp
test
les
xchg
sbb
xlat
sbb
ja
push
sub
loop
lock
in
gs
popa
adc
sub
cmp
jb
lock
je
iret
shlb
adcb
sbb
lcall
xchg
fistpl
pop
xor
mov
push
mov
mov
popa
lods
jecxz
imul
js
pop
repnz
mov
cmpsb
and
shlb
push
call
in
lret
push
and
mov
sub
dec
aad
out
mov
shrl
dec
jecxz
push
and
in
popl
jle
out
inc
push
jno
sbbb
aaa
clc
or
sub
mov
loopne
mov
lea
insl
or
pop
jmp
in
pop
pop
mov
dec
sahf
lods
int
xchg
xor
cwtl
imul
jnp
clc
adc
pop
test
pop
insb
movsl
and
xchg
fs
add
pop
out
popa
rorl
and
sbb
loopne
and
jno
and
mov
push
pop
inc
jnp
adc
loopne
daa
xchg
sub
loop
cli
inc
cltd
cwtl
stos
xchg
pop
push
sbb
loop
pop
dec
mov
test
out
lea
repnz
popa
fisubl
sahf
or
mov
mov
jecxz
sub
inc
cwtl
push
scas
dec
imul
lods
jl
movsb
or
dec
xchg
ret
fisubrl
inc
data16
jnp
inc
fisubs
negb
jmp
jmp
push
repnz
adc
and
cltd
ss
mov
mov
pop
sub
ret
xor
add
imul
gs
rol
push
and
inc
les
or
cmc
gs
dec
adc
loop
cltd
idivb
fiadds
add
jle
adc
xorb
or
sahf
add
fdivs
iret
sub
add
and
xor
je
xor
dec
ret
outsl
xchg
enter
shll
or
nop
js
fwait
shl
sbb
fdivs
cmp
mov
lahf
mov
movsb
hlt
stos
adc
sti
mov
or
verr
inc
pusha
pushl
jmp
test
add
pusha
call
pop
or
dec
and
dec
leave
push
cmp
push
imul
outsb
aaa
es
mov
or
xlat
fisttpl
mov
push
xchg
ss
pop
imul
push
out
ja
imul
push
gs
nop
xor
or
jmp
sub
inc
adc
gs
ds
fldcw
enter
inc
sub
push
int
ret
fbstp
mov
iret
pop
mov
sahf
pop
mov
dec
les
daa
cmpsb
jnp
dec
sub
into
frstor
js
dec
push
mov
push
mov
jecxz
movsl
movsl
xchg
mov
adc
push
outsb
pop
sbb
cwtl
mov
or
test
xor
adc
adc
mov
xorb
addr16
in
dec
fucomp
ss
shr
inc
and
rolb
xor
cmp
ffreep
and
fwait
xor
inc
cmp
and
jp
int
add
int3
lods
adc
rcrl
sarb
sbbb
jg
cmp
sub
call
add
inc
js
je
jb
arpl
jae
dec
cmp
cs
in
add
adc
lahf
mov
cmpsl
sahf
inc
rorl
sbb
add
outsb
or
cmp
cmp
ret
imul
mov
movsb
add
repnz
cmp
push
cmp
xchg
push
adc
sbb
push
in
andl
inc
sbbl
fstpl
pop
addr16
dec
nop
dec
xchg
adc
pcmpgtd
roll
adc
xor
sbb
pop
iret
or
jle
push
push
mov
add
leave
push
sbb
pop
cli
push
dec
mov
pop
sub
out
mov
addr16
dec
push
imul
bndldx
dec
inc
push
mov
jmp
notb
leave
cs
and
setbe
fs
adc
lret
sbb
in
and
pop
fimuls
pop
push
or
sub
jb
jmp
imul
pop
in
jecxz
add
pop
insb
inc
mov
jge,pt
or
adc
in
popa
or
daa
dec
dec
fiadds
push
daa
jae
cmp
xchg
decb
lahf
add
popa
js
out
comiss
fisubrs
push
adc
std
jb
mov
or
lret
mov
sahf
or
sub
and
pop
or
xchg
pop
jbe
push
int
xchg
inc
dec
call
sbb
out
outsb
int
mov
loope
and
popa
out
cs
dec
ds
mov
xchg
sbb
pinsrw
pop
sbb
push
xchg
or
insw
rclb
inc
dec
fcoms
jle
rclb
adcl
cmp
inc
inc
int
push
mov
lret
sbb
pusha
dec
xchg
push
xchg
inc
pop
cwtl
cmp
in
and
shr
cmp
fwait
xchg
push
daa
inc
aaa
cwtl
add
cmp
cmp
push
and
sub
out
cs
rclb
inc
lea
insb
rorb
adc
ret
and
shlb
xchg
push
cwtl
or
lcall
pusha
cld
push
jno
jb
out
sub
scas
push
ucomiss
cmp
scas
popf
std
mov
aaa
pop
fidivl
mov
outsb
xchg
ret
fidivrl
cmp
push
sbb
stc
cmp
outsb
loop
jl
fiaddl
inc
mov
cwtl
sub
cs
shrb
xchg
movd
mov
dec
and
mov
mov
pop
or
imul
fbstp
pop
push
sbb
int
pop
mov
push
sub
push
mov
imul
sub
push
sbb
dec
cmp
addr16
ljmp
shrb
cmp
sub
fcoms
cwtl
cmp
sub
jbe
push
xor
cwtl
cmp
cld
pop
adc
pop
cmp
and
pop
imul
das
push
pop
stc
dec
jnp
mov
xchg
ficoml
sub
push
jle
pop
push
and
sub
dec
xchg
jbe
enter
int3
pop
sub
inc
xchg
int
imul
xlat
sbb
pushf
cmp
addr16
jmp
aaa
and
imul
sub
das
jg
shlb
cmp
inc
jae
dec
into
xchg
push
incl
cwtl
cmp
sbb
add
jecxz
imul
mov
mov
adc
mov
lds
enter
aam
push
push
dec
das
mov
mov
leave
push
in
fs
push
arpl
sub
imul
dec
push
cmp
push
and
mov
movaps
xor
test
mov
lea
jle
enter
cmp
fldenv
dec
test
pop
cmp
cmc
xchg
loop
xchg
pop
adc
fistps
addr16
dec
adc
adc
cli
addr16
add
pop
lret
mov
fucomi
mov
mov
daa
adc
inc
xchg
sarl
push
int
mov
lret
ljmp
inc
mov
and
xchg
dec
adc
shrd
adc
fidivl
and
mov
jge
cld
push
cmp
adc
imul
push
imul
xlat
mov
jne
mov
sbb
into
rorb
sahf
into
outsb
test
shlb
ss
sub
sub
mov
in
pop
push
jbe
jl
adc
sbb
add
xor
fildll
mov
add
cmp
jb
testb
add
sti
arpl
adc
sbb
xchg
or
fimull
repnz
jl
addr16
sbb
pop
pop
fisubrs
dec
fdivrs
fmull
pop
lret
mov
sbb
sbb
inc
popl
insb
scas
jno
pop
imul
adc
inc
call
and
leave
addr16
add
dec
dec
mov
outsl
mov
pop
in
xor
add
sub
test
loopne
inc
pop
xor
insb
or
call
xchg
ficoms
sbb
inc
mov
insb
enter
lret
mov
pop
inc
int
or
fidivrs
bound
sub
jbe
sub
test
cmp
push
xlat
insb
lret
lcall
or
jb
jnp
mov
sub
repnz
or
or
movb
pop
inc
sbbl
add
add
scas
mov
pop
cs
call
pop
fucomip
test
iret
jp
insb
cmp
daa
adc
lods
jae
jmp
adc
push
mov
and
dec
sbbb
push
mov
repnz
mov
fisubrs
adc
dec
inc
je
fidivs
in
stos
add
enter
out
mov
ss
xchg
arpl
lcall
mov
cmp
push
pop
cwtl
imul
or
ja
xlat
lods
ficompl
subb
shlb
push
sub
gs
add
test
scas
pop
or
lret
sbb
dec
lods
dec
pop
sub
addr16
jmp
mov
test
int3
push
xor
decl
add
mov
adc
adc
push
inc
cmp
jge
pop
mov
data16
cmp
mov
dec
xchg
or
arpl
js
xor
rolb
or
inc
aas
xor
call
in
adc
sbb
cmp
or
out
and
mov
inc
outsw
fisubrl
sub
popf
orl
or
pusha
ret
cmp
fisttpll
mov
fwait
dec
repz
shrb
dec
xchg
dec
lret
jmp
sbb
dec
aam
nop
mov
xchg
stc
mov
ja
pushl
adc
pop
push
pop
cmp
sbb
jge
pop
adc
pushf
leave
mov
or
xchg
add
data16
sbb
push
ds
sbb
mov
cwtl
sbb
sete
add
arpl
xchg
scas
or
out
xor
adc
sub
in
mov
or
sbb
repz
bnd
add
cmpsl
mov
jmp
xchg
repnz
mov
xor
mov
ljmp
fwait
add
adc
addr16
sub
out
fwait
sub
insl
push
adc
jecxz
pop
or
xor
lret
lret
mov
mov
mov
adc
js
test
xchg
mov
cmpsl
ja
adc
push
sarb
dec
dec
cmpsl
xchg
push
rolb
addr16
adc
push
das
iret
data16
jae
push
and
dec
jo
or
sbb
jle
pop
and
icebp
pop
xlat
pop
stos
adc
jb
in
popl
enter
lcall
ja
loope
lods
push
mov
add
mov
sbb
ficompl
or
das
int3
ficompl
std
add
repz
push
fisttpl
push
std
std
push
inc
dec
push
push
ljmp
int3
dec
fidivrl
xlat
push
dec
push
shrb
lock
addr16
cld
insb
mov
lret
les
or
cmc
repz
sbb
jge
adc
push
rol
add
mov
inc
mov
push
adc
mov
and
rorl
inc
out
fisttpll
xchg
repz
mov
pop
mov
mov
pop
push
xor
adc
scas
addb
push
pushf
stos
ret
outsb
es
out
push
adc
mov
ljmp
pop
mov
push
fsubl
inc
loop
pop
in
iret
pop
or
add
jo
or
popa
in
fisttps
push
mov
xchg
cmp
leave
and
pushf
adc
jl
mov
test
cmp
aam
pop
clc
xor
loop
xchg
test
xor
fnstsw
dec
sub
add
rcrb
cmpsb
out
add
aas
cmp
fs
xchg
cmpsb
mov
lret
mov
push
test
jno
mov
inc
dec
mov
xor
sysret
pushf
ds
dec
inc
data16
out
jge
ret
lods
bound
test
mov
mov
cmpsb
scas
adc
sub
sarb
js
push
cmp
dec
push
inc
es
std
cmp
xor
add
inc
dec
and
push
cmp
pop
pop
push
xchg
mov
cmp
test
ss
rorl
inc
enter
es
je
mov
orb
mov
js
inc
push
sbb
inc
ljmp
cmp
lcall
fstpt
inc
adc
or
scas
xchg
daa
mov
imul
xchg
xor
fdiv
sub
rol
xor
dec
insb
dec
repz
cmp
loope
jb
xchg
in
loopne
int
inc
cltd
mov
sbb
xchg
in
sbbb
jecxz
aas
push
or
xchg
out
js
adc
lret
push
jnp
imul
out
xchg
push
jmp
pop
cs
out
sub
movsl
fs
push
sahf
pop
aam
in
js
mov
cmp
cmp
addr16
icebp
insb
add
push
and
lock
and
push
sahf
outsb
and
out
cmpl
pusha
aaa
cmp
jecxz
mov
mov
gs
jge
cmp
cli
cmp
fcom
mov
push
gs
sahf
cmpl
in
data16
out
int3
aaa
sbb
aam
pusha
jp
or
or
xchg
orb
shll
sbb
and
maxps
sbb
mov
and
xchg
pop
mov
pop
adc
sub
or
faddl
xchg
movsb
test
and
sbb
aam
lret
sbb
jne
mov
scas
pop
or
sbb
xor
imul
xor
fcompl
adc
sbb
mov
cltd
push
mov
xchg
xor
cmp
test
sahf
push
adc
and
andl
fisttps
add
pmaxub
pop
pop
or
aaa
cmp
inc
rolb
inc
scas
mov
push
stos
sub
pop
xchg
pop
lcall
xchg
lcall
inc
enter
xchg
push
push
push
inc
jmp
xchg
outsb
lahf
mov
shrl
mov
shrl
mov
shl
push
inc
popa
aad
mov
inc
push
cmpb
jnp
int
xchg
repnz
shll
shll
iret
sbb
setae
jg
mov
push
cmp
cmp
push
iret
sbb
cmp
push
add
test
mov
icebp
in
rcrl
ret
cs
loopne
pop
cmp
cmpb
inc
out
fiaddl
ret
fimull
call
sub
inc
pusha
jns
fadds
add
push
and
shrb
repnz
pop
push
dec
inc
je
cmp
sbb
pop
outsb
popa
adc
ret
add
imul
sbb
andl
inc
fstp
rcrb
lods
adc
out
mov
mov
mov
adc
jmp
aas
and
sub
int3
inc
cmp
xchg
cmp
lds
cmp
or
ljmp
jae
adc
inc
mov
lcall
jb
and
cmp
aad
inc
and
push
push
push
shrl
mov
rorb
inc
loop
cs
cmp
data16
cmp
jmp
lcall
pop
call
shrl
je
push
bound
ret
cs
push
popa
sub
shrb
mull
push
clc
cs
jp
inc
bound
sbb
bound
xor
bound
lods
gs
icebp
fidivl
push
push
stos
jne
xchg
clc
outsl
jae
jecxz
flds
ffreep
das
test
or
push
dec
jnp
js
pop
in
sub
cmp
mov
xchg
popf
push
mov
je
arpl
mov
and
popf
inc
add
pop
jp
pop
cmp
mov
shlb
ret
fldt
inc
lahf
shlb
and
pop
arpl
push
mov
adc
in
mov
in
pusha
xchg
push
test
ret
mov
mov
faddp
dec
xor
sbb
inc
sahf
jno
loope
mov
das
cmp
ret
fdivs
out
inc
adc
adcb
vpcomb
int
sub
mov
jp
inc
xlat
add
hlt
push
ret
aam
sub
jb
mov
xchg
jmp
xchg
sbb
mov
div
cmp
jbe
cmp
popa
cs
cmp
lock
mov
stos
sub
mov
adc
cmp
add
mov
adc
popf
inc
push
aaa
and
rcrl
cltd
adc
jb
and
int3
xor
and
xchg
mov
xchg
scas
mov
insb
mov
int
pop
pop
shrb
mov
gs
int3
adc
lcall
sub
loopne
lret
fbld
outsb
scas
movsl
js
lretw
lods
mov
dec
movsb
mov
hlt
pusha
sbb
xchg
dec
dec
pop
mov
mov
sbb
in
or
pusha
push
mov
in
loopne,pn
jge
xchg
pxor
add
out
outsb
das
mov
pop
inc
adc
packssdw
and
and
pusha
fwait
mov
mov
and
mov
sub
lcall
sub
push
and
push
and
push
int
aam
sbb
jecxz
fwait
jp
scas
sub
jecxz
mov
insl
jecxz
or
jecxz
std
nop
jb
jecxz
dec
or
shl
dec
aas
nop
jb
lahf
xchg
dec
jmp
xlat
lret
and
lds
sub
pop
sub
sub
pop
push
negl
xor
ret
movsb
sub
pop
cmp
and
pop
jbe
jle
int
inc
pop
rolb
sbb
mov
inc
fistps
sub
pop
lods
or
mov
shlb
mov
lea
fimull
xchg
ret
setp
or
cmp
neg
setnp
xchg
in
cs
xor
imul
mov
push
lcall
ret
add
xlat
mov
movsb
inc
mov
out
fcoms
or
mov
xchg
ret
sbb
inc
pop
mov
dec
cmp
pop
sub
pop
sub
pop
sub
push
adc
sbb
or
out
clc
mov
mov
cmp
inc
lret
fistps
sub
adc
insl
pop
mov
push
inc
adc
mov
push
lcall
das
dec
inc
mov
xchg
fsubp
and
mov
or
fucomp
or
fldl
loope
insl
sub
pop
ffree
push
ret
jno
ret
sarb
xor
or
cmp
sub
popf
adc
popf
sbb
xchg
popf
inc
inc
adc
call
push
cmp
mov
sub
cmpsl
rcll
push
dec
xchg
imul
sub
insl
out
outsb
cs
or
inc
fistps
sbb
pop
jo
jb
sbb
xchg
adc
or
fidivl
pop
fadd
mov
faddl
xchg
shll
sbb
push
lahf
cltd
fistps
push
imul
int3
xchg
xchg
scas
rorb
pushf
cltd
fistps
outsb
mov
jp
sarb
pop
rcrb
sbb
xchg
pushf
orl
or
pushf
or
iret
pushf
outsb
mov
jge
mov
std
pop
shlb
pop
mov
das
pop
inc
enter
pop
sub
mov
inc
pop
rclb
cltd
lcall
rolb
mov
add
cwtl
or
jge
test
fistps
xchg
sbb
iret
lcall
lcall
fucomip
or
filds
sub
mov
neg
sub
insb
scas
mov
fildll
fildll
fdivl
jge
leave
rol
cmp
inc
sbb
sub
jg
mov
pop
mov
xchg
mov
rcll
mov
sbb
cmp
cltd
lcall
sbb
xchg
mov
fistps
mov
pusha
pop
ror
sbb
cmp
sbb
xor
sub
imul
pop
cwtl
nop
mov
mov
lcall
loopne
dec
push
pop
leave
leave
dec
jg
cmpb
dec
ja
or
sbb
ficompl
push
ficompl
rclb
inc
adc
pop
mov
push
stc
lcall
xlat
ljmp
sbb
mov
or
mov
inc
pop
sbb
sub
pop
cmp
xchg
adc
pop
pop
push
dec
rcll
pop
sbb
push
pop
mov
cs
jbe
pop
xchg
push
test
mov
push
lcall
ret
rsqrtps
lods
pop
mov
shlb
push
loopne
sub
jg
cmp
in
or
fsubrl
fldcw
fs
fldcw
jg
flds
xchg
fldln2
sub
xchg
push
pop
fldz
lret
nop
jb
cltd
xchg
dec
js
xorb
jae
insb
cmp
cltd
lds
sub
dec
adc
push
or
xlat
ret
fldcw
mov
in
pop
sub
xchg
shl
pop
jmp
cmp
sti
pop
dec
mov
dec
inc
sbb
cmp
sub
cmpsl
imul
push
insl
sbb
inc
hlt
movsb
lods
fdivs
aam
push
rcrb
int3
rclb
outsb
dec
aaa
mov
ja
xorb
push
pop
mov
dec
jns
aam
mov
les
mov
inc
fistps
arpl
sub
cwtl
push
xchg
out
dec
ljmp
int3
push
lods
arpl
movsb
cmp
mov
pusha
adc
test
mov
xor
cs
sbb
sub
loop
lock
pop
pop
mov
leave
dec
nop
pop
orb
pop
pmaxub
or
fistps
sub
sbb
and
pop
hlt
nop
mov
cltd
lcall
cmp
jg
repnz
mov
stc
insl
pop
stos
rcll
pop
loope
push
insl
and
adc
mov
pusha
xlat
push
xchg
add
sub
jmp
in
xchg
in
dec
jmp
cmp
xchg
jmp
push
sbb
inc
push
mov
cs
fists
dec
push
or
insl
pop
push
rcl
push
inc
dec
xchg
sub
mov
cmp
xor
jmp
movsb
pop
in
or
pop
mov
lcall
in
or
push
repnz
in
inc
and
dec
test
andb
cltd
cmp
xchg
sub
shrl
xchg
push
notl
pop
xor
mov
fistpl
cmp
in
out
mov
lds
lret
imul
jge
or
rcll
sbb
cmp
aaa
push
sbb
xor
inc
lcall
lcall
imul
in
sub
push
pop
pop
test
sbb
mov
push
cmpb
push
dec
mov
inc
and
push
sub
push
sub
pop
push
jbe
sbbl
popl
cmpsb
pop
shlb
aad
das
aad
shrb
aad
ret
fdivr
cmp
aad
fldcw
ficomps
sub
xchg
sub
dec
push
jb
xchg
xchg
xchg
mov
shrb
cltd
enter
mov
pop
sub
sub
push
xor
fists
cmp
push
lcall
shl
pop
lahf
mov
lcall
repnz
push
xchg
and
adc
rcll
pop
push
int3
push
jb
mov
push
sbb
sub
imul
adc
mov
mov
rcll
mov
jl
and
cs
xor
imul
mov
push
lcall
inc
push
adc
mov
xor
xchg
push
xchg
mov
inc
adcb
int3
xchg
or
sarl
aad
xchg
dec
mov
roll
add
shlb
push
mov
sbb
fdivr
cmp
or
adc
inc
lret
movsb
sub
sub
adc
insl
adc
push
sub
adc
push
sbb
push
mov
dec
xchg
add
xchg
dec
mov
ret
sbb
outsb
xlat
dec
or
cmp
pop
push
adc
xchg
xchg
sub
xchg
jmp
sub
mov
and
dec
ror
cmp
dec
rorb
push
sbb
jp
mov
xchg
cmp
push
sub
pop
fists
adc
inc
push
aad
jle
xorb
cmp
jg
loop
scas
adc
lcall
sub
pop
cltd
jb
arpl
shrb
lock
mov
rol
repnz
xchg
xchg
jb
rclb
fwait
pushf
xor
in
sub
xchg
push
inc
xchg
in
xlat
sti
cmp
mov
nop
jb
xchg
xchg
shl
inc
fstl
inc
adc
push
sbb
jp
mov
push
cmp
push
xor
insl
pop
rcl
rolb
xchg
push
xchg
and
testl
mov
sbb
adc
adc
pushf
cmp
cmpsb
mov
adc
pop
push
nop
adc
imul
xchg
push
jo
fwait
int3
push
aaa
shll
sub
imul
adc
mov
adcl
xchg
pop
mov
mov
cltd
lcall
add
mov
dec
mov
adc
std
mov
push
lcall
mov
aas
shr
push
mov
lret
adc
or
adc
add
insl
mov
xor
mov
adc
sbb
inc
inc
lret
inc
sbb
xchg
push
xor
les
hlt
in
adc
mov
cmc
sbb
enter
add
pusha
push
mov
ds
jae
test
lods
inc
inc
push
mov
cmpsb
add
add
cs
out
fs
adc
cmpsb
inc
arpl
push
inc
sub
lods
xor
movl
push
xor
mov
fwait
inc
rorb
mov
sub
test
fwait
nop
inc
ret
repnz
sub
or
nop
push
xchg
nop
in
or
nop
popa
cs
cmp
fists
cli
push
xchg
loop
or
repnz
add
sub
adc
hlt
fwait
pop
sbb
and
jno
xchg
mov
cli
insl
push
pop
out
iret
repnz
cli
mov
mov
or
pop
cmp
xor
icebp
imul
xchg
xchg
sub
mov
or
lcall
adc
inc
mov
push
mov
mov
inc
lods
movsb
mov
imul
mov
imul
pop
push
sbb
in
daa
into
sbb
mov
cltd
lret
int
lds
into
adc
mov
lcall
ret
push
movl
or
sbb
push
xchg
add
cwtl
les
mov
adc
jns
idivl
jg,pn
jae
dec
adc
mov
cld
fsubp
pop
gs
shl
xchg
xchg
sub
push
pop
pushf
daa
adc
ficomps
popa
sbb
and
frstor
addr16
into
add
sar
push
mov
out
scas
sbb
pop
xchg
mov
xchg
jecxz
mov
nop
add
push
or
lret
dec
rcl
pop
mov
enter
inc
in
push
mov
jp
xor
sbb
push
adc
mov
cs
xlat
popa
mov
lods
jbe
mov
shll
cltd
in
int3
xchg
push
push
mov
add
dec
mov
or
mov
adc
or
xchg
gs
fs
mov
inc
pop
rol
incl
fwait
icebp
pusha
add
mov
icebp
mov
shr
and
jns
sub
lock
das
jne
cmpsl
push
or
jne
dec
dec
or
mov
in
inc
mov
xchg
cltd
mov
sbb
pop
or
leave
rcll
stc
dec
xchg
inc
push
pop
into
jb
stc
je
xor
inc
xchg
repnz
sbb
push
xor
cmc
xchg
sti
dec
jnp
cmpsb
push
js
adc
jns
xor
xchg
repz
imul
pop
lahf
aaa
aas
and
repnz
mov
sbbl
into
or
lea
mov
mov
ud0
sbb
aam
into
das
jl
das
ficoml
je
mov
mov
in
cld
mov
mov
sbb
es
push
jb
sbb
xchg
push
push
stos
stos
jp
add
negb
or
sbb
cmpsl
push
dec
add
mov
mov
adc
iret
mov
push
push
sub
dec
dec
jmp
and
dec
insl
icebp
mov
pop
clc
and
lcall
outsb
adc
out
push
or
repnz
adc
xchg
pop
mov
sub
test
into
in
push
sbb
lret
fs
cmp
iret
mov
sub
les
push
loop
xchg
xchg
mov
sbb
cmp
inc
loopne
dec
adc
push
xchg
int
cmp
lcall
fmulp
and
jae
cmp
jmp
add
shl
and
pop
iret
sbb
cmp
test
cmp
cmpsb
mov
mov
dec
int3
xchg
xor
int3
pusha
xchg
push
pop
cmp
push
enter
shlb
insb
ja
gs
lcall
inc
scas
jbe
or
push
dec
sub
divl
push
xlat
inc
adc
pop
xor
outsl
repnz
push
mov
repz
cs
sub
xor
adc
ds
sahf
add
insl
cs
jl
lea
fs
pmulhw
imul
add
lea
mov
iret
or
mov
push
ljmp
sbb
loopne
insb
lret
rcrl
fiadds
fcmovb
push
test
jno
into
cld
popa
stc
ja
xchg
lea
fs
mov
ja
jmp
adc
stos
sahf
lret
fmull
out
dec
nop
adc
mov
or
sbb
mov
mov
xchg
jmp
pop
xor
xor
dec
aad
mov
dec
mov
pop
inc
mov
fucom
adc
cmc
scas
rcrl
gs
xchg
pop
cs
fimull
cmp
sbb
jle
pop
cmp
add
movsb
push
cmp
insl
dec
lods
scas
dec
inc
loope
fcoml
ret
out
cmc
cs
add
sbb
cli
rolb
fwait
imul
clc
pop
sub
dec
dec
and
xchg
lahf
xor
mov
or
clc
pushf
mov
adc
add
int3
lods
inc
pusha
std
movsl
lret
or
test
enter
fwait
push
hlt
ja
adc
sub
and
pop
and
push
out
ljmp
daa
es
out
aaa
lods
add
jl
sbb
jb
shrb
push
cmpsb
int3
insb
arpl
ror
xor
push
pushf
cmp
xchg
shll
inc
add
pop
mov
sbb
mov
in
les
cli
lret
ja
adc
in
pop
mov
adc
rorb
dec
sbb
or
sub
or
xor
push
lods
outsb
jb
jnp
mov
icebp
addl
orb
mov
jae
add
cmp
das
leave
lea
test
cld
aaa
pop
jmp
aad
rclb
pop
dec
out
pop
shll
jno
mov
pop
dec
int
mov
add
jl
pop
dec
ljmp
xchg
jns
aaa
lods
mov
or
out
ret
lock
in
scas
mov
or
movsl
or
pop
or
fidivrs
repnz
cmp
lods
dec
dec
je
push
or
stos
xchg
lods
out
dec
ds
aad
jl
push
push
mov
pop
imul
les
fsub
scas
push
ret
iret
mov
fidivl
push
sub
iret
test
imul
aad
and
fmuls
push
sub
shrl
insl
mov
fldcw
add
adc
pop
prefetchw
or
inc
iret
add
vmwrite
out
sahf
mov
lcall
xchg
fisttpll
orl
sbb
adc
dec
lock
stos
or
pop
mov
cmp
pop
and
fcomip
insb
outsb
or
sti
es
dec
stos
jl
iret
fistpl
clc
push
xchg
add
sbb
fnsave
jns
in
inc
or
dec
jno
lods
xchg
insb
lret
jbe
rclb
rcr
fsubr
push
xor
loopne
cmp
push
arpl
jb
cmp
jmp
in
roll
int3
pop
sub
push
cs
add
lods
repz
das
or
mov
lds
xor
pop
arpl
stc
lock
xlat
or
mov
les
movsl
mov
mov
or
ret
lret
jo
es
out
cmc
push
xor
inc
mov
mov
pop
dec
add
bound
cmp
jge
cmp
adc
or
dec
sub
js
daa
push
pop
and
mov
cmp
and
ds
out
pop
dec
mov
jb
movsb
push
jno
push
in
add
cmp
insl
and
sbb
mov
movl
or
data16
lret
sbb
mov
lea
jmp
mov
pop
add
jb
sub
ljmp
dec
les
in
leave
lret
cmp
dec
fstpt
clc
scas
dec
jp
push
cmp
cmp
sub
imul
cmp
add
fwait
pop
xchg
clc
cmp
lock
hlt
out
popf
pop
andl
stc
cmp
out
test
mov
pop
cmpsl
es
es
dec
sar
or
lock
xchg
iret
cmp
std
add
cmpl
mov
orb
fwait
shl
aaa
fwait
mov
incb
leave
mov
dec
inc
bound
lcall
out
addr16
pop
cmp
jp
leave
lret
or
mov
insl
adcb
pop
lret
andb
aad
mov
push
loope
push
mov
xor
lret
jb
fidivs
fisttpll
decl
dec
jmp
es
cmc
rcr
rolb
fisttpll
push
sub
pop
daa
or
lods
daa
xchg
mov
stos
daa
dec
push
sub
fiadds
adc
ds
cmp
sahf
sub
pop
or
adc
popf
cltd
sbb
cwtl
shll
int3
cmp
mov
lcall
mov
cmp
push
hlt
and
iret
insl
dec
cwtl
xchg
test
or
push
in
stc
leave
dec
imul
jp
dec
lret
lock
inc
lcall
lahf
ja
loopne
in
aad
out
je
je
lret
inc
and
sahf
lret
xlat
jecxz
adc
aad
sub
cmpsl
fwait
adc
cmp
cmp
push
and
sbb
movsl
ljmp
jl
insl
or
jl
loop
or
sti
sbb
cmpsl
incl
push
rorb
repnz
mov
ja
notl
shl
sahf
and
enter
int3
rcll
mov
lcall
outsl
sti
mov
xor
enter
cmp
push
cmpsl
enter
jae
shl
stos
fsubl
adc
xor
dec
enter
rcll
shrl
push
mov
add
mov
xor
notl
sbb
mov
icebp
sbb
sub
sub
adc
ss
nop
aaa
fucomi
fisttpll
and
cmp
mull
outsb
pop
test
mov
cmp
cmp
cmpsl
lcall
lock
int
mov
aam
sbb
or
mov
or
lahf
outsl
filds
add
xlat
pop
scas
sub
ret
xchg
stc
jno
cli
mov
pop
or
adcl
mov
sbb
cmpsl
mov
lods
mull
int3
inc
lret
mov
fidivrs
or
sub
lret
cmpsb
cmp
fbld
sub
test
pop
and
or
xchg
mov
loope
notl
sbb
jbe,pt
arpl
mov
int3
shlb
rsm
into
popa
fstpl
stos
sbb
out
lods
push
inc
xchg
inc
cltd
push
iret
into
ret
scas
loopne
inc
cmp
pop
inc
adc
push
and
and
arpl
add
lahf
push
inc
inc
lret
insb
clc
mov
dec
add
ret
shl
inc
xor
repz
jnp
and
divl
es
push
jmp
fldenv
sub
inc
lahf
sahf
dec
and
jbe
in
imul
arpl
mov
add
jnp
push
sbb
push
adc
pop
or
lcall
std
imul
enter
jo
or
or
lcall
inc
pop
adc
sub
pusha
mov
or
repz
push
ret
outsl
or
lahf
xor
pop
add
stos
mov
add
or
inc
push
push
sub
push
xchg
lcall
xor
pushf
push
rol
lods
stos
into
addr16
andnps
stos
repnz
jno
xchg
std
das
sarb
push
sub
jl
inc
jae
add
inc
xchg
or
xchg
xchg
lock
mov
sub
in
dec
repnz
inc
add
and
adc
xchg
sbb
adc
out
outsl
pop
pop
mov
das
pop
fmul
shlb
push
mov
fildll
in
lcall
sbb
pop
mov
ud1
test
sub
push
aam
cmp
mov
cmp
adc
dec
jnp
sbb
out
dec
or
lret
sbb
lcall
lds
dec
mov
adc
pop
lds
sbb
lods
adc
sub
mov
push
call
lds
pop
int3
call
fistpl
pop
stos
rcrb
fxch
ja
sahf
vpunpcklbw
les
mov
out
lcall
dec
icebp
test
pop
mov
jl
sub
stc
pop
fsincos
inc
sub
pusha
xchg
test
dec
cmp
sahf
int
or
inc
jbe
inc
int3
shlb
push
mov
xor
inc
daa
das
imul
add
push
test
xchg
repnz
fndisi(8087
sbb
and
push
sub
xchg
sub
pusha
xchg
adc
lods
add
cmp
into
inc
or
mov
add
sbb
sbb
inc
shrb
cmp
pop
int3
shr
repz
adc
or
testl
add
ffreep
push
xor
cmpsb
loope
push
repnz
test
sbb
lods
lcall
xor
cld
push
aad
jno
int3
cld
aad
lods
mov
and
pop
imul
add
imul
ss
cmp
daa
lcall
sub
push
xor
lret
repnz
or
sub
cmp
push
mov
cmp
imull
sar
mov
stos
jo
cmp
cmp
dec
fsqrt
xchg
insb
in
aas
sub
pop
xlat
cwtl
mov
jp
rol
adc
xchg
sbb
mov
pop
inc
jl
jecxz
mov
pop
xor
std
mov
out
sub
xchg
movsb
push
jle
mov
push
dec
lods
cs
xchg
jecxz
cmp
dec
or
adc
lods
test
xchg
in
in
lret
push
push
jnp
pop
pop
mov
das
and
out
xchg
fdivrl
and
dec
and
jb
movsl
mov
mov
mov
aaa
push
add
imul
aas
enter
rolb
sbb
std
sub
mov
cmpl
fcmovb
inc
ffree
rcl
aas
cmp
pop
pop
mov
int
sahf
sbb
shll
or
ret
and
pop
sub
jnp
pop
pop
inc
imul
shlb
sub
mov
add
andl
outsl
das
sbb
xorl
push
test
in
outsb
inc
ret
mov
sbb
mov
js
fcoms
insb
pusha
jnp
mov
dec
inc
rclb
inc
mov
jle
stc
push
lods
inc
add
lcall
in
push
and
inc
int3
inc
adc
cmp
gs
mov
mov
mov
add
sub
jg
or
fs
call
inc
dec
sub
test
call
or
push
add
popl
call
rol
sarb
sbb
ficoml
push
repnz
ret
rolb
sub
pop
mov
xor
jecxz
psrld
sub
xchg
fcomi
insb
imul
mov
movsb
insb
cmp
jecxz
xchg
lcall
lret
mov
int3
push
xchg
cmc
adc
lods
cmpb
in
mov
push
pop
pop
scas
push
lcall
lret
pop
inc
cwtl
push
addb
repz
out
lock
fs
lret
sbb
add
arpl
imul
add
pop
mov
loope
outsb
add
pop
rolb
loop
mov
lahf
jecxz
adc
or
jno
stos
hlt
js
bound
cmp
mov
push
mov
aad
push
sub
adc
adc
cmp
add
out
mov
rcll
push
mov
add
cmp
roll
rorl
sbb
rcrl
addl
shrb
andl
adc
sub
jb
sbb
cmp
lcall
adc
je
inc
jb
inc
lea
andb
sbb
jb
inc
mov
in
push
mov
xchg
sbb
fs
push
cmp
and
add
adcb
xchg
imul
add
jno
repnz
cmp
sub
lcall
sub
cwtl
push
mov
and
rorb
mov
cwtl
push
fwait
and
jne
call
out
xor
push
push
push
mov
push
push
jl
int3
cmp
mov
ret
inc
insl
and
push
les
pushw
or
pop
inc
push
xor
imul
loope
jecxz
daa
push
push
inc
inc
in
mov
cmpsl
rolb
add
push
jb
ds
mov
inc
lret
popa
stos
push
mov
push
mov
mov
adc
ret
inc
jns
nop
ds
mov
dec
call
aam
push
addr16
ds
and
cmpb
jl
pop
push
xor
and
jg
pop
loopne
add
xchg
xchg
push
pop
outsb
push
adc
dec
xchg
jmp
shll
xchg
add
add
aas
xchg
setp
add
adc
inc
daa
out
in
cmp
xor
cmp
pop
fdivl
aas
int
and
sbb
sahf
fistpll
push
or
fisttps
pusha
mov
push
aas
sub
sub
orl
mov
lods
add
imul
lret
sub
fwait
jb
decb
sub
mov
cmp
cwtl
push
fbld
dec
sub
mov
movsb
sub
mov
movsb
push
loop
cmp
mov
and
fs
lcall
jg
adc
adc
pop
and
pusha
or
ds
dec
out
std
mov
int
imul
jbe
ds
fnstenv
push
sarl
call
std
or
fwait
std
aaa
adc
cmp
data16
or
and
dec
cmp
std
mov
jno
jno
add
ror
std
dec
or
fidivrl
mov
mov
cs
sbb
adc
mov
jbe
mov
push
bsr
lds
and
push
pop
jge
pushw
or
sbb
cmp
push
es
and
jge
int
jge
inc
ficoms
cmp
sbb
in
ds
repz
push
cmp
push
jb
sbb
aam
push
lcall
cld
out
mov
call
cld
push
or
pop
mov
jb
sub
mov
cmp
and
mov
push
sub
mov
imul
push
sub
jl
sub
popf
jg
sti
jl
or
jl
imul
inc
sbb
incb
sbb
jl
and
int
mov
sub
jne
out
xor
mov
push
dec
bound
cmp
setnp
lcall
fstps
mov
outsb
xchg
sub
mov
ss
dec
cmp
mov
add
inc
mov
jno
mov
mov
xor
lcall
call
jnp
pop
outsb
xchg
cmp
outsl
movsb
cmp
jnp
dec
and
or
sub
jnp
test
jnp
or
push
jae
outsl
jp
lea
cmp
or
clc
pop
nop
jb
cmp
outsl
shrb
movsb
cmp
pop
cmp
jmp
xchg
fwait
xlat
das
outsl
lock
ja
cmp
fdivs
xchg
cmp
inc
dec
dec
cmp
cmp
pop
sbb
lods
inc
jmp
dec
sbb
sub
cmc
xorb
bound
out
pop
dec
mov
fnstcw
sub
xchg
pop
loope
lock
shrl
fdivl
or
test
mov
ret
pop
mov
enter
repz
rorl
clc
inc
mov
push
cmp
xchg
or
jb
push
inc
fisttpll
inc
ds
lahf
mov
sbb
inc
out
imul
jl
or
xor
scas
fsubrl
adc
lret
lret
inc
sub
mov
push
lahf
clc
daa
fimull
jbe
jp
outsl
pop
lods
inc
out
xchg
in
or
jp
sub
scas
cmc
adc
lret
out
mov
inc
out
add
filds
in
dec
inc
call
fnstsw
cmp
fcmovu
fld
jb
push
cmp
lcall
aad
mov
shlb
dec
push
or
push
adc
jns
shl
aas
ret
decb
clc
mov
dec
cmp
fs
mov
addr16
push
or
into
les
xchg
mov
mov
push
out
addl
aas
sbb
xor
lds
movsl
and
sub
mov
pop
dec
jnp
mov
subb
stc
lret
or
jns
jbe
mov
add
shrb
jmp
in
jno
add
xor
out
inc
mov
lea
sbb
imul
adcb
rcrb
and
cmp
orb
sub
adcb
mov
scas
push
and
lods
pop
pop
pop
fdivrs
insb
aas
lcall
adc
add
fisubl
cmp
lcall
sahf
cmp
push
pop
or
imul
aas
mov
cmp
fwait
sbb
insl
inc
dec
je
fmuls
fimull
enter
add
int3
dec
push
push
or
inc
cmp
mov
lret
loop
push
or
xor
mov
pop
fmuls
mov
pop
cltd
xor
dec
xchg
sub
xlat
inc
cmp
mov
dec
fcmovbe
cmp
cs
xchg
std
xor
lret
pop
int3
rclb
push
cmp
push
mov
aam
push
sbb
pop
lea
sub
mov
lcall
pop
push
pop
mov
lcall
inc
sub
aad
dec
inc
push
lea
repnz
mov
mov
lcall
sub
test
imul
push
xor
mov
pop
imul
mov
push
cmp
lea
or
push
daa
lcall
cwtl
push
and
lcall
lcall
mov
iret
mov
lods
xchg
inc
dec
sbb
fimuls
mov
int3
cmp
lahf
push
sbb
push
daa
lcall
mov
mov
mov
mov
xor
mov
int3
cmp
sbb
push
inc
push
icebp
or
dec
int
adc
xor
lcall
inc
lcall
lcall
ret
lea
fcmovb
testl
cmp
scas
shlb
push
cwtl
adc
cli
int3
cmp
lahf
push
xchg
cli
push
cli
xchg
push
sub
je
fstl
and
adc
push
loope
pop
lcall
fisubl
sub
imul
inc
pop
push
mov
add
cmp
mov
daa
fcmovbe
sbb
mov
lea
js,pt
lcall
sub
xor
std
testl
imul
push
mov
xor
imul
imul
pop
lcall
sub
cmp
fucomp
insb
enter
pop
jne
pop
push
and
ss
stos
add
jb
fmuls
in
jle
rcll
fistps
mov
scas
test
dec
test
xchg
loopne
scas
mov
inc
mov
pop
je
dec
xchg
ds
cmp
adcb
mov
mov
sub
mov
orb
cmp
pop
in
or
cmc
pop
sub
push
mov
adc
adc
sbb
dec
hlt
mov
lods
bound
lock
mov
cli
mov
pop
dec
leave
or
sub
sub
cld
popa
pop
cmp
pop
adc
lahf
mov
xchg
mov
data16
mov
mov
imul
jne
pop
mov
mov
add
or
fistpl
sub
fmuls
cmp
jp
mov
inc
setg
cmpsb
punpckhdq
out
test
imul
xchg
imul
fisubl
lcall
sbb
push
and
push
push
mov
ret
push
mov
dec
sbb
mov
lods
mov
jno
xchg
movsl
pushf
adc
imul
sub
push
imul
sub
jae
out
inc
mov
inc
fdivl
rorb
and
jnp
xor
hlt
cmc
jne
add
xor
xchg
into
das
hlt
mov
pop
flds
mov
stc
add
sub
icebp
mov
adc
push
pop
hlt
fsubr
mov
inc
or
stos
fimuls
ds
pop
jb
pop
mov
aas
mov
inc
mov
imul
mov
sub
mov
in
outsl
xor
shrl
je
dec
pop
ret
stc
pop
movsb
dec
testl
pusha
push
int3
shl
push
sub
in
addr16
xchg
repnz
je
scas
test
pusha
or
rcrb
ret
imul
push
lcall
xor
shlb
mov
push
lds
xor
sub
imul
popf
adcl
cs
inc
testl
mov
inc
imull
jp
cmp
enter
imul
sub
outsb
pop
pop
std
int
lret
mov
push
mov
push
push
enter
int
cs
aam
mov
jnp
adc
sub
sub
in
insb
dec
jae
pop
lcall
ret
xchg
bnd
out
jae
lcall
inc
xchg
jae
adcl
push
jae
sub
imul
jae
or
push
push
mov
mov
sbb
sub
out
cs
mov
dec
cs
addb
repnz
push
dec
enter
sub
dec
lcall
add
inc
xchg
push
xchg
pusha
xlat
int
cmp
xchg
into
cmp
sub
mov
push
mov
lahf
out
pop
mov
add
pop
mov
pop
scas
adcl
jbe
jb
fidivl
jb
lds
jns
add
aam
cmpl
xchg
push
popf
xchg
lea
xor
dec
lcall
jbe
xor
mov
adc
and
push
xor
push
jmp
cmpsl
and
cs
cmp
mov
icebp
push
mov
outsb
pop
mov
mov
mov
mov
sahf
sbb
mov
imul
push
xchg
cmp
dec
sub
popf
cmp
je
shll
and
je
dec
mov
push
lret
push
sbb
push
jo
shl
jno
lock
or
cmc
jno
mov
sbbb
out
pop
jno
ret
jmp
push
imul
cmp
out
inc
jge
in
or
xor
jne
outsb
pop
cmp
notl
imul
popf
adcl
stc
fiaddl
inc
lock
sahf
lock
enter
imul
cltd
cmp
dec
rcll
fs
pop
adc
pop
pop
fiaddl
lret
lods
mov
pop
add
or
jno
xchg
push
insl
in
mov
adc
ficompl
jne
insb
xchg
mov
ficompl
and
stc
jo
cmc
jo
adc
jo
data16
jmp
sbb
pop
xor
out
sbbb
pop
mov
imul
sub
add
push
xor
push
pop
jbe
xor
xchg
icebp
inc
movsb
ret
pop
je
push
leave
rcrl
and
je
xchg
pushf
jmp
cwtl
and
icebp
repz
jmp
out
sbb
pop
xor
out
adcb
push
mov
imul
cltd
cmp
scas
sub
mov
imul
lahf
push
pop
leave
pop
lahf
and
cmp
sbb
push
push
scas
xor
out
inc
ret
outsl
in
or
outsl
out
mov
pop
imul
pop
or
sub
ret
pop
inc
xchg
and
fisubrl
lcall
or
cmp
jb
lret
xchg
lret
addr16
sub
ds
mov
inc
das
xor
out
subb
pop
mov
xchg
test
int
into
mov
or
lock
mov
xchg
pop
pop
iret
aam
push
out
shlb
jnp
adc
jb
pop
fisubrl
xlat
ja
std
aam
fsubr
aam
push
push
sarb
scas
mov
ss
mov
cmp
mov
scas
cmpl
lods
sbb
outsb
sub
outsb
sub
sahf
outsb
jmp
daa
and
outsb
imul
cltd
cmp
dec
and
loope
sti
push
outsb
and
aam
push
jno
test
in
or
cs
cmp
outsb
sarl
cmpsl
adc
mov
arpl
out
pop
cs
pop
scas
jmp
es
and
hlt
add
shr
mov
pop
push
ret
aaa
int
sub
cmp
push
adc
imul
cltd
cmp
dec
mov
push
arpl
mov
sub
lods
sbb
pop
push
xchg
pop
fistps
int3
push
pushf
pusha
std
rcl
sbb
ret
addr16
loop
xor
pusha
aas
int
push
insl
in
push
insl
andb
push
insl
push
repz
subb
sub
in
mov
jno
ret
lcall
hlt
xchg
fstpt
push
pusha
ja
idivb
sub
lea
mov
stc
enter
loopne
mov
jl
orb
inc
lods
cld
out
imul
rorl
out
or
dec
arpl
shrl
xchg
xor
fiaddl
sub
sub
insb
jno
mov
mov
xor
enter
dec
push
rcll
inc
bound
aad
ret
mov
sub
add
sub
and
mov
aad
lods
lcall
fucomip
sub
out
sub
and
data16
xor
int
pop
cltd
fistps
push
jl
adc
adc
fistl
rcl
stos
mov
jnp
int3
lcall
rcr
cmp
dec
popf
int3
mov
stos
push
dec
push
out
adc
jno
add
cmpsb
dec
mov
imul
stc
push
ja
outsb
inc
pusha
and
mulb
sub
cmc
xor
sbb
and
push
or
out
xor
mov
outsl
icebp
cmp
adc
js
mov
mov
and
cltd
cmp
sub
lcall
lahf
sub
rolb
adc
push
ljmp
mov
fstl
and
sbb
sbb
jg
into
insb
push
ljmp
mov
stos
cmpb
stos
jmp
loopne
push
subb
cltd
fbld
out
insb
mov
mov
dec
push
push
ret
jnp
clc
cld
flds
mov
or
rcl
push
push
push
push
fildll
sub
cs
mov
lcall
sub
in
cs
push
adc
push
rcrl
jmp
push
push
jbe
jmp
outsb
stos
xchg
lods
lahf
fidivl
xchg
lcall
test
cmp
mov
shll
pop
sub
out
shlb
enter
add
lea
mov
jl
shrb
sub
push
imul
xor
rcll
inc
xchg
adc
cltd
cmp
sub
xor
aad
mov
sbbl
subb
sub
loope
push
or
out
sbb
aad
sub
add
in
or
call
push
jbe
call
or
lret
cltd
cmp
test
cmp
in
inc
test
rorl
xor
sbb
int
adc
sbb
push
cmp
push
shrb
xor
repz
xchg
xor
xchg
or
add
loopne
cwtl
push
xchg
sub
imul
cltd
cmp
cs
and
mov
xor
xchg
out
inc
cmp
jmp
xor
jbe
jmp
ret
push
pop
shll
adc
or
adc
add
fdivrs
ja
sub
cmpsl
imul
jmp
imul
pusha
pushf
int
cltd
cltd
fists
int3
push
cmp
addr16
fbld
mull
push
imul
lahf
fisubl
sbb
push
data16
sub
cwtl
js
sub
and
imul
enter
sahf
sub
sub
fst
std
or
sub
data16
in
imul
mov
lods
pusha
sub
mov
cltd
fimull
cmp
pusha
adc
cmpsb
push
mov
out
push
pop
jbe
cmpsb
mov
imul
adc
dec
inc
test
or
data16
push
xchg
je
add
jmp
cmp
aad
pop
dec
sub
in
dec
push
loopne
es
insb
push
adc
lcall
mov
imul
push
fadds
dec
movsl
mov
out
mov
lods
iret
add
std
test
iret
inc
mov
in
inc
inc
pop
push
or
clc
mov
mov
popa
add
repz
in
xlat
imul
rorb
mov
mov
repz
repz
mov
sbb
lods
mov
pop
cmp
sub
in
lret
fbld
movsl
add
rcr
mov
sbb
lcall
add
mov
les
mov
loopne
sbb
xchg
dec
fsubs
cmp
lcall
push
pop
xchg
push
popf
sub
xchg
cmp
sub
sub
xchg
pushf
cmp
mov
mov
loope
fildll
inc
mov
pushf
adc
fildl
repnz
pop
popf
or
insb
add
lar
mov
mov
lret
mov
arpl
nop
stc
pop
cmp
pop
and
lret
pop
mov
jmp
jb
or
dec
adc
adc
jb
jecxz
push
sub
in
and
mov
jb
or
in
pop
push
mov
push
xchg
or
sub
inc
popa
call
dec
mov
roll
inc
lcall
xchg
xlat
lods
jno
jb
or
das
pop
xor
sub
jecxz
jne
and
adc
lcall
test
adc
les
xlat
aas
inc
inc
mov
cs
lcall
xchg
push
sbb
mov
movsb
aam
push
push
sub
pusha
push
fdivs
cmp
sub
out
fdiv
and
rorl
xor
dec
repz
pop
pop
imul
mov
lds
sets
pop
repz
loope
in
cmp
fs
clc
pusha
and
push
jecxz
push
sub
pop
mov
fwait
cmc
sub
sub
dec
pushf
lea
dec
adc
js
push
dec
add
xor
xor
cmp
out
mov
aam
xchg
xorps
imul
into
arpl
sub
push
dec
jmp
lcall
sbb
inc
pop
cmp
cmp
sub
pop
cmp
mov
and
jae
jne
ja
mov
loop
adc
pop
sub
xchg
xlat
mov
aad
and
nopl
imul
add
push
out
pop
fsubrs
leave
or
pop
adc
pusha
pop
add
xchg
xor
cmp
dec
push
xor
negl
push
sub
sub
ficoms
or
sub
cs
cmp
sbb
je
iret
xchg
in
push
loop
cmp
pop
pop
push
mov
insb
fmul
fstpl
dec
sbb
test
shlb
nop
scas
inc
mov
or
pop
add
popf
pop
stc
adc
insl
pop
loop
or
mov
xchg
push
das
in
insl
out
fnstenv
lods
data16
xlat
mov
cmp
dec
cmp
jo
jbe
fwait
or
xor
or
sub
frstor
cltd
das
repnz
sti
arpl
push
cmp
xchg
sub
push
xor
mov
add
push
aaa
or
aam
push
pop
adc
cmp
daa
lcall
pop
inc
stos
lahf
enter
test
and
xchg
pop
pop
add
icebp
pop
mov
push
jbe
and
jb
test
push
ficompl
cmp
sbbb
shlb
cmp
xchg
cmp
jl
cmpsl
xchg
mov
lret
push
xchg
cltd
jle
or
lcall
sbb
mov
xchg
ficompl
outsb
arpl
psrlq
fisubs
das
repnz
into
std
mov
push
fstps
aaa
sub
fcomps
sub
repnz
lret
sub
lcall
movsl
cmp
cmp
ret
arpl
xlat
ror
popa
xchg
mov
sbb
sub
adc
push
outsl
cwtl
jb
xchg
shr
lcall
add
mov
data16
daa
push
xchg
inc
xchg
fldl
popa
movl
push
mov
repnz
push
adcb
fwait
inc
push
bound
lret
cmp
sub
sbb
rorl
pop
pop
stos
sti
mov
push
ljmp
outsl
out
push
cmpsb
loope
push
dec
inc
push
outsl
cmc
push
mov
xchg
add
pop
jmp
outsl
push
lcall
cmp
mov
xchg
testl
je
or
ss
sub
addr16
fwait
jmp
dec
add
sub
adc
shlb
pop
mov
fisttps
insl
sub
xchg
mov
dec
adc
and
cltd
cli
push
sbb
fistps
inc
adc
lods
xchg
sbb
insb
sub
pushf
or
sub
add
and
ljmp
fs
stos
sbb
and
loop
lds
lcall
adc
pop
adc
xchg
and
loop
aam
pop
pop
sub
sub
and
loopne
xchg
push
xlat
lcall
push
mov
push
int3
or
aad
mov
sub
int
add
adc
clc
mov
jecxz
sbb
mov
out
sub
insl
jecxz
pop
pop
dec
lret
pop
inc
jg
push
push
xor
aaa
iret
sbb
pop
or
sete
sub
lcall
popa
jae
adc
sub
popa
dec
pop
mov
mov
xchg
inc
mov
sahf
sbb
push
dec
or
sbb
leave
mov
insb
pop
aaa
outsb
mov
sbb
std
loope
cld
pushf
dec
add
ficoml
and
test
pop
aas
js
sbb
cli
push
inc
adc
scas
adc
imul
leave
sub
sub
inc
mov
repnz
sub
add
pop
xchg
xchg
mov
mov
inc
push
imul
jae
pandn
mov
xor
sbb
lds
dec
sbb
mov
push
mov
push
cs
push
jmp
int
cmovle
push
shll
fld
rcl
inc
or
dec
jno
inc
imul
mov
int
addr16
adc
popf
or
sub
dec
sub
pop
mov
in
addr16
lcall
sub
or
jl
out
push
sub
dec
sahf
fwait
adc
xchg
sbb
and
call
lds
lcall
dec
cmp
bound
jbe
pop
and
xchg
sbb
xlat
sahf
mov
lods
xor
xor
mov
xchg
fcoml
adc
pop
cmp
jmp
flds
int
insl
pop
jne
add
es
push
mov
cvtps2pd
xor
shll
mov
gs
jnp
pop
imul
fstps
fsubp
mov
cwtl
jecxz
cmp
lock
cmp
cmp
fidivrl
jle
dec
bound
xchg
int
sub
push
imul
and
add
cwtl
pop
mov
xor
mov
dec
rorl
ds
cmp
lods
dec
pop
scas
pop
sub
ljmp
cmp
out
mov
sub
pop
sbb
mov
iret
rolb
pusha
ret
adc
into
mov
mov
add
sbb
pop
clc
divl
cmp
out
push
movsl
popf
aam
push
jecxz
xchg
sbb
jb
pop
mov
pop
pop
push
add
call
or
jae
xor
loop
int3
mov
mov
cmp
loope
or
and
shrb
and
shrl
and
add
lods
out
pop
pop
ja
inc
push
pop
cmpsl
mov
cmp
xchg
xor
push
jmp
xor
iret
cmp
mov
mov
push
mov
out
cmp
in
add
sbb
jb
push
shll
out
insl
dec
jle
mov
int3
pop
sub
mov
dec
dec
dec
push
and
outsl
pop
imul
sbb
leave
ret
int
fisttpll
mul
mov
dec
pop
jp
mov
shll
jb
test
lahf
inc
pop
sub
inc
dec
icebp
xchg
in
xchg
nop
jmp
pop
jl
add
and
mov
dec
xor
or
mov
ja
sub
mov
pop
popf
dec
xor
sahf
push
sub
or
stos
pop
push
push
pop
cmp
sub
xchg
cs
out
push
leave
sti
scas
inc
aam
ds
or
mov
cmp
out
lods
pop
and
addb
or
pop
pop
testl
cmp
lods
fmuls
add
pop
jnp
inc
xchg
jmp
enter
push
or
ret
dec
sub
mov
mov
push
inc
jne
pop
shl
outsb
lret
rcrb
lret
call
sar
pushf
ds
int3
mov
xchg
lods
xor
lea
ror
in
dec
imul
cli
cmp
daa
in
lahf
sti
or
sti
dec
lds
nop
mov
inc
popa
mov
aam
insb
xlat
leave
in
repnz
mov
cmp
btc
xchg
shrl
test
jl
push
lcall
and
inc
sbb
sub
insb
ss
imul
xchg
vpsrlvw
or
or
mov
imul
dec
and
dec
dec
pop
stos
lods
or
dec
mov
lods
cmpsb
xchg
rcrl
bound
lcall
push
ss
sbbl
sbb
insb
sbb
xor
xchg
ds
mov
outsb
or
sub
dec
mov
aas
fwait
xor
movsb
dec
and
mov
xchg
pusha
fdivl
xchg
push
repz
push
inc
fdivs
lret
mov
mov
push
jmp
shll
pop
add
int
lahf
outsl
push
jb
xchg
mov
ds
iret
mov
cmp
icebp
pop
sub
fcmovu
pop
std
mov
add
insb
arpl
pop
push
cmp
fxtract
cld
xchg
mov
push
dec
or
in
dec
insb
outsb
jns
aaa
mov
or
mov
jecxz
jmp
std
loope
call
jecxz
rep
fdivrl
insb
or
incb
negl
inc
std
insl
or
cmp
outsb
sahf
in
dec
mov
or
ret
sbb
pop
rcl
push
xlat
cmovs
rclb
negb
jl
scas
xchg
fcom
cmc
das
sub
sbb
sarb
lcall
divl
sbb
mov
adc
mov
xor
push
fists
push
orb
fnstcw
shrl
enter
jge
add
out
sub
fwait
in
lahf
push
aas
pop
rcl
pop
pop
push
fs
shl
in
mov
cs
fstps
inc
jecxz
in
adc
sbb
enter
fdivrs
jns
xchg
andb
jb
fcmovbe
jb
lcall
out
lcall
dec
sbb
push
lcall
jnp
rcr
ss
fwait
lods
fwait
jns
js
enter
int3
addl
pop
lret
or
jbe
mov
hlt
dec
inc
mov
das
out
outsl
dec
pop
mov
cwtl
push
sahf
push
jmp
mov
sar
jl
add
or
fstpl
or
lret
jl
or
inc
and
dec
jbe
jb
jl
or
orb
push
add
jo
mov
rcrl
jne
sbb
cld
cmp
fnstcw
insb
mov
out
dec
popa
fildll
sub
cmp
incb
ds
jae
loope
das
adc
or
push
insb
scas
outsb
lret
cmp
out
mov
loopne
cmp
stos
and
pop
jmp
stos
mov
sbb
imul
cmpsb
push
sub
loope
roll
pop
jo
imul
xor
pop
lea
pop
dec
into
mov
js
and
and
dec
or
and
jecxz
clc
dec
pop
inc
or
loopne
mov
movsb
inc
add
repnz
and
test
cmp
pop
cmp
fisubl
and
inc
pop
cmp
jecxz
pop
outsb
mov
mov
lcall
fsub
and
sahf
cmp
insl
sarl
pusha
loop
push
xor
or
jge
cltd
pop
cmp
xor
dec
sahf
cmp
mov
push
mov
dec
pop
sbb
inc
rcrl
daa
inc
cmc
mov
cs
rolb
and
fldt
movsl
push
dec
lods
mov
ja
fistpll
sub
cmp
add
stc
pop
cltd
sub
adc
dec
cmp
cli
ret
outsb
ljmp
push
aaa
out
mov
movsl
xor
lcall
lea
mov
ja
or
pop
cli
sub
cli
xchg
and
xor
or
aad
test
sbb
xchg
fs
inc
iret
sbb
mov
int3
rcrb
adc
ret
repnz
std
fmuls
mov
mov
and
pop
mov
pop
dec
push
pop
sbb
mov
xchg
sahf
rcl
in
sub
push
sahf
sbb
sub
in
ret
pop
fidivl
stc
fsubrs
sbb
aas
ljmp
inc
and
fs
frstor
push
pop
imul
fistpll
mov
mov
shrb
enter
push
scas
mov
pop
cltd
fwait
cmpsb
inc
jl
test
bound
ficompl
jl
addl
fdivr
mov
popf
xchg
int3
adc
push
loope
stc
mov
fisttpl
lret
jge
dec
mov
leave
or
jns
xor
jnp
xchg
add
or
popa
ficoms
xchg
test
jno
das
xchg
loopne
clc
xchg
enter
jecxz
imul
cmpl
orb
mov
push
aad
add
fadds
mov
repnz
jbe
je
cltd
pop
push
or
ret
aam
push
ficoml
ja
dec
sub
xor
cmpsl
aam
loope
cmp
jl
shlb
jle
inc
ret
fs
rclb
cltd
aam
mov
ds
cltd
fdivl
sbb
cmp
aad
in
js
jnp
adc
rcrl
cmp
test
aam
fisubs
aam
cmpsb
fwait
xchg
std
popa
push
xor
fsubrs
jb
aam
fcomp
push
or
and
push
pop
or
das
sbb
inc
dec
adc
lcall
dec
dec
dec
add
cmpb
test
dec
lcall
pushf
push
out
pop
pushf
mov
mov
lret
pop
sub
or
xchg
mov
inc
push
and
rcrb
mov
lahf
movsb
sahf
cmp
mov
pop
mov
aas
sahf
cltd
cmp
cmp
hlt
add
add
and
scas
inc
add
mov
push
pop
xchg
mov
scas
insl
cmpsl
cld
add
loop
and
pop
dec
repz
leave
cmp
cmp
sbb
push
int
ror
rcrb
dec
xchg
push
in
push
push
jno
jmp
cmp
pop
jne
ss
mov
aad
adcl
movsl
inc
dec
adc
mov
ja
sub
pop
bswap
popa
scas
sub
sub
jl
xchg
rorb
mov
jmp
loop
xor
push
psubsw
insl
push
in
jb
mov
std
dec
jle
lcall
fstpl
xchg
fdivr
sub
inc
mov
popl
leave
les
sub
cmpb
mov
fadds
popf
add
jnp
cmp
sti
sub
push
test
jle
cltd
inc
lcall
pop
mov
clc
sbb
js
outsb
int3
xchg
fldcw
mov
push
inc
fnstcw
sub
mov
and
pop
adc
fidivrs
jae
sub
mov
jl
in
cmp
mov
add
out
sbb
outsl
pop
and
mov
mov
ds
pop
outsl
dec
mov
adcl
adc
ds
aam
adc
repnz
jnp
inc
inc
sub
mov
repz
ds
ret
inc
nop
xchg
cltd
pop
fpatan
push
add
pusha
and
aas
aad
push
ror
sub
inc
jp
sti
sbb
jns
ss
push
and
insb
popa
or
ljmp
push
lods
push
sarl
add
xlat
sub
inc
jne
xlat
pop
test
jmp
andl
mov
ds
xchg
cmp
push
fidivrl
cmp
fnstcw
pop
pop
pop
push
sbb
ret
or
adc
test
or
fists
andb
adc
jno
mov
mov
sub
inc
push
inc
mov
rcr
mov
mov
insb
adc
sbb
xchg
mov
fcoms
mov
jnp
mov
sbb
lds
and
push
pop
adc
dec
push
jb
push
xchg
or
xchg
push
mov
hlt
sub
adc
sub
xlat
and
lcall
shll
adc
aam
adc
fildll
in
mov
mov
pop
cmp
push
push
fcoml
jb
push
push
lds
out
and
push
aas
and
repnz
xchg
lcall
cmp
or
push
cltd
jl
popa
cmp
push
jle
push
js
add
adc
and
adc
mov
rclb
aad
mov
or
push
mov
or
stos
mov
icebp
dec
aaa
xor
test
es
push
push
sub
add
and
ljmp
dec
enter
adc
push
cmp
cmp
push
fdiv
or
cmc
in
or
pop
pop
loope
shlb
aaa
popf
cwtl
sahf
dec
inc
mov
jl
adc
dec
fwait
sarl
sub
or
ret
pop
inc
pop
fldt
push
mov
cmp
pop
sbb
aaa
pop
inc
data16
and
cmp
aad
lret
xchg
in
inc
jb
je
push
jne
push
cmp
sarb
test
test
aaa
mov
and
jbe
in
or
xchg
or
inc
clc
aaa
orb
and
push
push
inc
arpl
inc
fwait
dec
lods
push
aad
jbe
aas
iret
sbb
xor
pop
cltd
pop
xor
dec
in
xor
mov
adc
cmc
aaa
adc
or
hlt
push
rcll
cmp
jle
cmpsb
cmp
pop
cmp
inc
mov
cli
idivl
mov
rolb
insb
cmp
pop
and
lds
mov
sti
mov
push
adc
dec
pop
stos
mov
mov
lret
lods
pop
jmp
sbbb
jmp
jnp
xchg
addr16
and
fmuls
inc
jmp
cmp
stos
inc
paddq
dec
dec
or
ja
push
pop
je
or
rcrl
inc
jae
cmp
cmp
push
push
shr
jnp
sbb
xorl
pop
xchg
fimull
and
add
insl
ds
xor
lods
pop
das
sbb
fidivs
cmp
cld
aaa
sbb
jnp
std
cmp
or
fstpl
sbb
mov
cmp
repnz
pushf
movsl
cwtl
sbb
rcll
jns
push
xchg
in
jnp
and
jmp
outsb
scas
je
sbb
xorb
lret
fbstp
push
adc
rorb
sbb
cmp
dec
in
xorb
sub
and
lcall
sbb
into
loopne
rcrb
imul
add
shll
mov
sub
xor
shlb
es
in
or
nop
or
sub
mov
lods
xor
scas
mov
and
mov
mov
xchg
dec
cmp
in
out
mov
daa
pushf
jnp
cld
sbb
cmp
into
lret
pop
mov
mov
fmulp
mov
mov
adc
push
enter
pop
and
inc
aam
cmpsb
and
jmp
imul
hlt
addb
imul
or
mov
sub
in
sub
xchg
repz
lea
jb
lods
shl
xorl
jno
xlat
cmp
or
pop
adc
pop
jae
ja
lods
fstpl
or
mov
sbb
popl
rclb
jae
or
add
bound
mov
shlb
mov
andb
mull
add
dec
jle
push
dec
inc
jbe
scas
fstpl
cmpsb
push
push
mov
cli
lahf
mov
icebp
addb
mov
inc
fldt
pop
pushf
or
addr16
mov
and
lock
and
mov
scas
out
cmp
cmpsb
mov
mov
or
pop
mov
sbb
push
mov
mov
or
maxps
mov
xor
pop
sti
sub
ds
sahf
add
insl
outsb
sahf
cmp
push
into
or
insl
cmp
aam
xor
sbb
imul
pop
push
mov
enter
lret
out
xchg
xchg
ljmp
pop
or
mull
xchg
lods
inc
mov
or
iret
insl
dec
cmp
sbb
lret
xor
lahf
jbe
xor
adc
add
fwait
cmpsb
mov
sub
lock
or
cmp
sbbb
inc
jno
jbe
xchg
cli
sub
shrl
jbe
cmp
xlat
testl
pop
clc
cmp
subl
cltd
ret
or
mov
push
sarl
fimuls
push
dec
in
mov
push
inc
sub
mov
dec
push
shrl
fdivr
adc
mov
xchg
aad
inc
int
lock
mov
sbb
imul
push
mov
ret
fdivs
cmp
setbe
cs
push
fcomip
rolb
test
pop
xor
jne
fmulp
arpl
xchg
addr16
or
cmc
fs
lock
in
loopne
hlt
subl
jge
negl
inc
pop
dec
jo
sti
cmp
xchg
mov
xchg
sti
jo
mov
in
dec
pop
mov
imul
fbstp
lea
sahf
lock
push
adc
xchg
add
mov
cs
push
xchg
cltd
cmp
cmp
icebp
pop
shll
in
sbb
pop
popa
shll
jmp
and
push
out
add
orb
leave
dec
push
jnp
sub
mov
jp
push
jb
jne
mov
imulb
mov
in
jg
nop
cmp
dec
or
cmp
sarb
addr16
mov
fucomp
jne
stos
addr16
outsl
push
jp
imul
scas
insl
or
outsl
and
out
ret
pop
push
jno
push
in
or
int3
or
in
cmp
in
stos
sub
sahf
dec
cmp
or
in
dec
das
mov
add
fwait
sub
sbb
jns
pop
repnz
out
inc
or
das
and
out
adc
sub
dec
in
adc
vmovdqu
test
cmp
call
rorl
push
xchg
lret
push
mov
cmp
arpl
scas
dec
cmp
movsb
dec
dec
cmp
sub
sub
or
movsb
mov
ficompl
sahf
sar
iret
inc
adc
dec
rcr
daa
test
or
outsb
push
cs
ret
and
sbb
jle
sub
pop
lahf
pop
imul
add
dec
xorb
lods
xor
dec
adc
stc
jl
pop
fistpl
cmp
or
dec
push
out
add
lret
std
sbb
lret
js
pop
jb
fcompl
in
sbb
dec
lahf
rorb
in
lcall
dec
adc
pop
cwtl
push
sahf
xchg
stos
imul
lods
in
or
or
fdivs
aam
pop
and
daa
movsb
jns
inc
lods
jb
lods
mov
or
sti
ret
adc
pop
mov
aad
push
cmc
cld
push
adc
or
mov
inc
mov
sbb
arpl
dec
xchg
nop
add
out
pop
xchg
fmulp
pop
imul
cltd
mov
addr16
repnz
xchg
dec
sub
lods
data16
push
mov
mov
dec
inc
rcr
sahf
call
aam
sahf
and
jmp
jne
sbb
fisubs
cmp
in
fsubrl
in
push
cmp
jnp
sbb
inc
pushf
in
data16
rclb
daa
xlat
subb
and
das
out
pop
fisubl
popa
fdivl
xchg
or
dec
sbb
ljmp
add
cmp
lods
addr16
push
lods
jo
cmpb
shlb
or
fbstp
jle
nop
into
jbe
cwtl
or
pop
pop
or
fildll
fimuls
cmp
mov
jecxz
mov
sarl
xor
and
stos
out
or
movsb
sub
and
xor
xchg
mov
mov
sub
rolb
mov
cmp
adc
mov
aaa
inc
sub
xchg
out
sahf
sbb
and
imul
repnz
cmp
push
inc
or
sahf
in
cmp
lret
inc
stos
and
pop
stos
inc
cmp
push
jecxz
or
jecxz
jp
xor
stos
insl
out
stos
sbb
out
sarb
or
imul
enter
cmp
fwait
adc
cmp
or
or
xchg
sub
mov
mov
cltd
push
mov
idivb
loop
xor
push
out
xchg
xlat
inc
fstl
and
sbb
inc
mov
in
push
cmp
jecxz
sti
pop
adc
movsb
cmp
mov
repnz
popa
or
ja
out
aam
pop
cmp
movsl
inc
lds
cwtl
dec
in
clc
iret
xchg
dec
test
in
dec
sahf
test
in
dec
sub
sbb
xor
push
rcll
push
je
test
mov
and
xchg
mov
into
push
pop
xor
and
rorb
sbb
jnp
push
or
and
fldl
sub
fiaddl
movsl
push
mov
out
ficoml
and
cmc
sbb
ljmp
jae
ret
out
xor
add
es
stos
insb
inc
jbe
wrmsr
pop
and
dec
push
push
add
dec
cmp
push
push
fwait
aas
fistps
icebp
mov
clc
int3
mov
loope
cmc
icebp
subb
fdivs
popa
shrb
dec
cs
cmp
push
mov
cltd
fiadds
push
xor
cmp
xor
cmpsl
jecxz
or
aam
push
mov
out
push
or
push
jae
ss
xor
and
imul
xor
loope
adc
adc
and
fnstsw
dec
mov
and
lods
daa
dec
orl
test
mov
aad
xchg
xchg
loope
push
jle
push
insb
in
fisttps
jnp
mov
sbb
stos
mov
es
in
inc
sbb
imul
inc
jbe
mov
push
push
cmp
call
inc
cmp
orl
aaa
adc
push
loop
and
push
fildl
inc
bnd
mov
xchg
sub
rcl
popf
pop
mov
cwtl
jecxz
inc
ret
pop
push
cmp
sub
lahf
xchg
add
std
pop
mov
outsl
fistps
mov
push
arpl
cmp
add
stc
incl
jle
cmp
sub
std
test
cmc
popa
cltd
inc
sahf
ret
sbb
imul
xchg
rol
movb
ror
push
ficoms
arpl
inc
push
jl
lock
sub
push
aad
cmp
ja
sub
mov
lret
sub
dec
push
mov
bound
mov
pop
cli
mov
or
add
xchg
push
sbb
popa
fistps
jb
sbbl
mov
add
cmp
mov
ja
lret
es
daa
jbe
jne
mov
cmp
loopne
dec
fstpt
sub
lcall
dec
nop
pop
ret
popw
int3
push
add
inc
sub
dec
loopne
es
lods
inc
mov
das
push
inc
lds
inc
adcb
xchg
add
sahf
add
xor
inc
jge
call
add
and
jb
cwtl
icebp
add
cmp
push
fisttpl
pop
fisttpll
test
push
mov
push
dec
xchg
mov
xchg
or
add
cmp
add
xchg
inc
jae
out
shll
pop
inc
jmp
out
mov
loop
fisubl
movsb
jg
pusha
in
testl
jmp
xchg
cwtl
loopne
cs
xor
scas
fistpl
cltd
nop
or
mov
add
test
adc
mov
or
jl
xchg
adc
dec
daa
test
dec
inc
ds
xchg
inc
sbb
jge
ljmp
mov
jb
xchg
mov
or
mov
shlb
mov
add
sub
cmp
rorl
cmc
lock
inc
imul
mov
leave
or
inc
sub
pop
inc
jo
test
add
ret
mov
out
imul
mov
jmp
pop
loope
jbe
or
push
lret
into
mov
cli
jp
inc
int
mov
jne
inc
bound
cld
das
mov
fldenv
popf
dec
add
dec
lds
pop
push
add
cltd
mov
add
mov
pop
imul
or
les
mov
aad
add
and
mov
pop
dec
cmc
jmp
inc
lret
inc
dec
rol
push
out
xlat
movsb
and
cwtl
cmp
xlat
xchg
sub
cli
cmp
ret
iret
push
leave
push
push
dec
lret
sbb
in
daa
sbb
xchg
push
xor
rorl
dec
dec
mov
int3
imul
fiadds
inc
aas
fldcw
dec
data16
scas
stc
mov
outsb
add
filds
into
push
es
inc
imul
mov
xchg
mov
sub
jp
inc
mov
pop
repz
cs
pop
enter
add
jl
xchg
mov
cmp
int
jbe
dec
int
lods
push
stos
or
add
rorb
fimull
sbb
and
outsl
cmc
mov
dec
inc
dec
push
inc
pop
dec
imull
push
lret
push
int
aam
cmpxchg
inc
lods
pop
cmp
popa
mov
and
cmp
and
jae
xchg
fisubl
in
and
arpl
lods
fstpt
and
cs
dec
ret
push
and
faddl
sbb
in
ret
fsts
inc
mov
mov
push
icebp
fstl
fisttps
inc
out
or
dec
out
mov
pop
add
in
enter
and
hlt
push
in
mov
lods
sarb
pop
test
lock
popf
addr16
pop
popa
mov
push
pop
fidivl
pop
pop
rclb
in
add
icebp
out
ja
fstpt
inc
popa
cmp
aas
decl
imul
and
sub
rclb
pop
movsl
pusha
mov
push
jle
ret
ljmp
in
push
cmpsl
sub
dec
out
pop
jne
pop
cld
inc
movsb
cld
mov
add
fwait
add
clc
mov
push
add
lahf
mov
cmp
aas
inc
stos
jecxz
sub
stos
mov
arpl
sub
add
ds
ffreep
cmp
ffreep
sub
xchg
sub
mov
push
or
in
out
sbbb
andb
sub
rorb
cmp
stos
cmpsl
es
sub
inc
pop
outsb
fwait
or
lahf
inc
mov
add
pop
mov
cwtl
loope
push
cmc
sbb
or
add
sarb
imul
mov
xchg
and
cmp
mov
cmpsb
mov
pusha
or
inc
insb
cmp
mov
jg
lcall
sbb
rol
dec
mov
addb
or
push
out
push
mov
and
imul
dec
or
xchg
pop
popa
insl
jns
and
push
add
mov
sub
addl
inc
mov
bound
sub
mov
push
pop
add
adc
push
lcall
adc
aam
insb
jae
movsl
sti
repz
in
repz
push
rorb
jge
mov
mov
pop
mov
or
inc
pop
aad
dec
fidivs
imul
mov
insb
xor
xor
mov
bound
adc
dec
shrl
and
insb
pop
cli
sbb
sbb
push
mov
and
adc
xchg
movb
dec
inc
clc
pop
mov
movl
lcall
mov
outsl
jmp
mov
cwtl
cmpsl
stc
inc
rorb
add
cmpsl
or
push
enter
je
xchg
xchg
pop
push
aas
out
out
icebp
stc
shrb
rorl
xchg
not
or
dec
pushf
mov
sub
int3
adcb
or
mov
les
popf
mov
dec
adc
int
sysret
pop
pushf
and
jnp
cmp
ja
mov
imul
loope
mov
das
lods
xor
in
cmp
jbe
pushl
adc
mov
cwtl
mov
repz
or
lcall
inc
add
mov
pop
lahf
aam
xor
stc
pop
jo
lods
ja
sbb
pop
xchg
xchg
mov
int
lods
add
push
push
jle
xor
pop
dec
xchg
sub
loopne
and
insl
inc
inc
fmuls
mov
pop
stc
sbb
mov
mov
or
cltd
sub
sub
insl
mov
sbb
and
xchg
sub
loope
or
mov
sbb
fistpll
inc
jg
xor
mov
int
or
jg
or
sbb
lret
insb
mov
dec
inc
adc
lods
sbb
insl
dec
pop
sub
aas
adc
sub
or
imul
cmp
cld
sbb
sub
add
js
add
sub
aad
pop
lods
mov
loopne
inc
mov
or
mov
iret
cmpsb
adc
repz
aas
stc
and
xor
cli
dec
sub
push
stos
mov
dec
sbb
adc
sub
cwtl
pop
outsl
ret
xchg
aam
pop
xlat
lds
cmpb
mov
push
sahf
roll
lods
sahf
loopne
and
mov
outsb
outsl
xchg
pop
aam
mov
ds
cltd
fbstp
jae
and
dec
and
mov
inc
jle
fdivr
xor
inc
jl
push
cs
jmp
jb
decl
push
mov
mov
mov
jns
push
mov
sub
xchg
pop
add
int
inc
adc
inc
cmpsb
inc
push
push
sub
add
sarb
cmp
jl
push
popa
mov
in
cmp
lahf
imul
fwait
pop
add
mov
cli
inc
pop
aaa
mov
scas
lret
cmp
xlat
and
push
fcmovne
addr16
orb
std
mov
push
std
mov
faddl
into
mulb
cs
lods
cmpsl
out
adc
xor
out
rorb
sbb
jmp
stos
dec
add
sbb
aas
xor
in
out
mov
addr16
sub
std
inc
addr16
and
mov
inc
loopne
sub
sub
xchg
mov
imul
jno
cmp
push
add
adc
inc
aaa
sbb
mov
xchg
jecxz
cmp
push
jae
outsl
jge
popa
lods
jb
nop
pop
push
jecxz
fistpl
sub
roll
dec
xor
imul
jecxz
in
mov
pop
jb
dec
ret
cmc
ret
xchg
ds
fiadds
lcall
pop
into
daa
negl
jge
xlat
push
inc
mov
adc
in
mov
mov
push
das
inc
mov
call
lret
inc
pop
aaa
mov
xchg
cmp
mov
nop
cmp
fidivrs
jbe
std
xchg
sub
cmp
cld
fidivrl
add
loopne
push
jno
cmc
and
insl
mov
lret
mov
aam
add
int
mov
pop
loope
jg
fdivrs
cmp
sbb
add
aad
mov
aad
dec
sub
mov
xchg
mov
cld
pop
pop
iret
push
and
mov
mov
xchg
jo
mov
inc
jmp
nop
push
ljmp
das
push
movsb
push
ret
movsb
push
xchg
xchg
pop
fists
mov
mov
xor
fmul
mov
mov
mov
dec
mov
loope
aad
pop
mov
jnp
dec
sbb
or
outsb
xchg
in
dec
mov
aad
xchg
mov
push
xchg
imul
dec
shrb
test
leave
nop
mov
rolb
push
mov
pop
push
cmpsb
out
shrl
pop
sub
push
jl
lret
inc
push
mov
in
leave
mov
inc
mov
xchg
fdiv
subb
fisubrs
jecxz
jl
imul
aad
dec
jae
jb
ficomps
sub
mov
fisubrs
cmp
sub
cmp
fwait
dec
cmp
lcall
dec
cmc
popf
mov
nop
loope
sarl
lret
into
mov
out
jno
or
mov
jecxz
cs
or
popf
arpl
adc
jle
push
dec
inc
ss
pop
mul
dec
cmp
arpl
cwtl
pop
ljmp
adc
leave
push
or
jmp
pop
or
int
xlat
mov
lahf
jp
dec
and
rorl
mov
jp
jbe
xor
lcall
pop
cmpsb
fisttpll
jmp
out
xor
jmp
test
and
loope
inc
jnp
js
inc
xchg
mov
ret
pop
and
jnp
push
ds
sbb
pop
test
adc
sub
fdiv
repnz
les
into
dec
inc
dec
les
inc
sbb
inc
aad
mov
in
cmp
adc
das
cmp
mov
mov
ficoms
adc
push
add
push
jns
adc
mov
jae
mov
in
and
cli
jno
popa
aad
dec
jge
push
fst
sub
cli
inc
and
inc
lds
dec
mov
mov
out
in
lods
jge
jecxz
cmp
sbb
cmc
push
pop
cli
les
inc
mov
cmp
cltd
sub
andb
push
mov
pusha
xchg
xchg
push
push
daa
lret
mov
pushf
es
lds
push
sub
or
xor
cmpl
xchg
pop
inc
jmp
jp
ret
pop
push
shll
xchg
sti
in
or
cmp
lcall
cmpsb
push
or
cmp
call
into
xchg
bound
push
cli
jno
add
mov
daa
in
mov
inc
lds
push
xchg
fs
pop
sub
pop
push
js
lcall
pop
aam
and
daa
cmc
cld
pop
mov
or
fadds
jns
sti
testl
cltd
leave
leave
xchg
cld
por
loope
stos
mov
add
es
fwait
mov
jo
add
push
xchg
mov
mov
ss
aad
jno
adc
loope
sbb
xor
fistpll
jno
xchg
lods
roll
sbb
je
repnz
loope
adc
sbb
movsbl
bnd
mov
cmp
fistps
sar
pop
cmp
or
ret
pop
cmp
sbb
lret
std
jp
xor
pop
movsb
xchg
adc
sbb
ret
and
fucomi
adc
lds
aas
pop
xchg
and
icebp
sbb
and
xor
loopne
dec
jg
mov
push
sahf
dec
xchg
mov
adc
cmp
scas
cmp
dec
ljmp
insl
dec
aaa
cltd
push
add
mov
push
sahf
mov
xchg
fisubl
jae
loopne
dec
inc
jbe
mov
rclb
imul
push
lret
add
jg
mov
lods
add
mov
ret
lcall
fisttpl
leave
xchg
mov
xlat
mov
sub
aam
push
bound
cmp
xchg
vprotd
sbb
mov
outsb
testl
inc
cltd
scas
aas
fcomps
add
xchg
cmpl
sbb
sub
fisttps
cltd
mov
mov
mov
sub
cmp
mov
bnd
adc
cmp
je
cmp
sbb
insb
mov
dec
mov
insb
xchg
and
xchg
jmp
lcall
inc
push
cmp
dec
dec
cmp
sahf
mov
outsl
js
arpl
or
sti
pop
sub
pop
ds
and
icebp
dec
das
mov
xchg
mov
mov
ficomps
cmp
fs
sahf
jae
ret
pop
xlat
mov
sub
push
subl
decb
and
aad
dec
add
or
mul
outsb
into
outsb
push
or
lods
mov
in
or
ja
sarb
fcomps
ror
ret
sbb
int
mov
xchg
xlat
or
fnstsw
xchg
je
in
outsl
and
sub
cltd
mov
sub
aaa
aaa
mov
add
or
subl
inc
mov
pop
adcb
negl
mov
mov
jb
pop
xchg
dec
pop
testb
fwait
pop
sub
pop
sbb
or
mov
sbb
sub
sbb
sbb
mov
jo
nop
into
push
mov
fwait
jbe
jbe
sub
pop
scas
fisttpll
sti
cmp
or
mov
jno
xor
push
mov
movsb
inc
stos
popa
sub
cltd
loope
push
dec
xchg
xchg
es
or
data16
dec
push
ret
pop
rcrl
sbb
sub
sbb
mov
jne
adc
xchg
sub
stc
pop
je
xchg
xor
nop
push
add
mov
or
jbe
fsubs
imul
dec
add
hlt
inc
pop
jns
mov
jecxz
decb
cmc
pop
xchg
sub
mov
cmp
scas
test
repnz
jmp
cmp
add
jnp
leave
and
enter
or
mov
jb
sbb
mov
popf
xor
test
cmc
bound
int3
dec
jecxz
iret
sahf
push
test
std
push
sbb
int3
lcall
sbb
push
mov
push
lods
inc
mov
add
xlat
jmp
and
aaa
xchg
outsb
testl
jmp
outsb
icebp
sbb
dec
push
mul
fbstp
je
push
sbb
and
lods
leave
or
in
je
inc
jb
int
pop
sub
pusha
lcall
sub
inc
cmc
cmpsl
dec
mov
mov
repnz
out
or
mov
sub
test
movsl
cmp
mov
popf
fistpll
jle
push
mov
shl
sbb
int
lcall
int3
in
arpl
push
xor
xsaveopt
mov
and
faddl
orb
push
sahf
movl
fisubl
pmaddwd
enter
or
mov
outsl
pushf
ss
aaa
hlt
lea
mov
dec
inc
and
sub
fildll
mov
fmuls
xchg
outsl
xchg
jae
ret
adc
stos
jb
sbb
pop
notl
xor
sub
mov
push
mov
int
jbe
inc
xchg
mov
xchg
lahf
push
fistpll
push
stc
mov
sahf
addl
xor
push
mov
mov
test
inc
cmpsl
jae
or
je
xchg
sub
insb
js
aam
fbld
jo
hlt
insl
dec
sub
orb
cwtl
das
out
inc
add
adc
mov
cs
bound
shlb
mov
xor
sbb
loop
jle
dec
popf
cmp
sub
push
and
xor
or
jo
in
out
sub
fs
or
imul
movsb
adc
mov
jg
cld
add
mov
int
xchg
fdiv
adc
and
adc
std
ret
cmp
int3
sbb
repnz
xor
pusha
mull
lcall
enter
mov
push
inc
mov
leave
repz
push
aas
mov
in
push
adc
stos
out
outsb
xor
in
out
cs
xor
inc
sub
xchg
dec
mov
or
mov
sub
inc
mov
lcall
lahf
push
in
jae
jb
xchg
ss
inc
ret
shrl
jae
sahf
iret
movsb
mov
xchg
fldt
jg
into
sbb
sub
dec
jb
xchg
les
fs
add
push
xor
jne
ret
push
mov
xchg
and
icebp
sbb
bnd
and
add
arpl
xlat
daa
cmpsl
mov
push
test
imul
push
pop
shlb
adc
push
repnz
lahf
xchg
or
popa
dec
mov
jbe
mov
or
cmp
and
out
dec
sbb
push
sub
adc
mov
imul
fucomp
push
in
sbb
rorb
add
sub
mov
dec
adc
mov
aam
rcrb
fld
out
cmp
cmp
inc
data16
pusha
fs
ljmp
add
iret
sbb
xor
mov
or
mov
insb
aam
arpl
push
sub
pop
popf
jb
jne
gs
sbb
adc
xchg
or
jb
xor
mov
add
ja
xor
inc
mov
mov
xor
fsts
dec
xchg
sbb
xor
dec
sbb
stos
shr
xor
ret
data16
xchg
or
xorb
rclb
pop
sub
sbb
push
sbb
out
mov
push
cmpsl
into
cs
sub
stc
adcb
fstpl
jb
sub
sahf
cmp
mov
or
fimuls
jnp
adc
into
lcall
dec
stc
adc
or
lret
cmp
in
or
mov
cmp
lods
je
cmp
adc
lcall
call
aaa
ljmp
or
xor
cmp
stos
pop
xor
rorb
out
pop
das
jo
xor
lea
sub
cmp
aam
ret
lcall
or
xchg
inc
xchg
int3
jbe
xchg
xchg
es
and
and
adc
aad
cs
shll
xor
push
rorl
mov
popf
bound
push
adc
lea
and
inc
les
push
xchg
into
jg
xor
aaa
lods
jo
gs
adc
mull
in
mov
fsubs
scas
inc
and
loope,pn
call
adcb
loopne
jns
in
or
mov
or
push
rclb
sub
inc
lds
jle
add
lcall
mov
imul
mov
cmpb
aad
xchg
lret
int3
int3
mov
jp
lcall
imul
mov
leave
ss
mov
imul
shrl
jge
loope
subl
fisttps
pushf
les
dec
lock
inc
pop
fistps
or
rorb
insl
cs
mov
xor
mov
lret
xchg
pop
add
pop
mov
inc
xor
pop
repnz
ljmp
je
cmp
dec
rep
inc
int
popf
adcb
sahf
outsb
cmpsb
xchg
fldcw
push
jle
jecxz
fs
ret
dec
jbe
add
mov
add
push
lret
filds
into
cmp
cmp
popa
or
jge
and
and
mov
and
leave
mov
ja
xor
sub
mov
lods
add
jbe
scas
dec
int3
test
rolb
sbb
insl
dec
sbb
icebp
or
jle
out
shrb
fmulp
rorb
mov
out
pop
pop
inc
push
mov
or
inc
sub
outsl
push
mov
xchg
push
movsl
or
rcl
push
stos
sub
outsl
icebp
loopne
push
or
sbb
in
cs
xor
cs
add
out
or
imul
das
in
lcall
dec
ret
sbb
das
pop
ror
add
ret
fwait
loope
pop
xchg
sub
sbb
in
sub
out
pop
push
push
dec
cmp
sti
sub
mov
out
jb
out
push
xchg
push
and
push
mov
push
out
outsl
add
or
out
sub
lods
inc
sbb
rcrb
adc
jl
mov
rorl
rcrl
lods
xor
loop
in
lcall
sub
xchg
and
test
jecxz
outsb
adc
cmp
mov
insl
and
lock
scas
inc
sub
fisubrl
imul
in
setb
pop
stos
int
in
shrb
jecxz
or
scas
pop
mov
rclb
mov
out
sub
cs
lcall
scas
inc
adc
push
add
sub
in
cmp
sbb
jmp
inc
les
xor
fimull
and
sub
sub
xchg
cmp
cld
jecxz
stos
xor
dec
sbb
pop
mov
insl
add
int3
xor
push
mov
add
mov
add
mov
pop
sbb
dec
inc
inc
addr16
inc
scas
pop
loope
je
pop
clc
aad
aad
adc
push
cmp
inc
dec
mov
lods
cmp
mov
mov
stos
call
pop
rol
sarl
shll
and
movsl
pop
jmp
loopne
xchg
mov
enter
push
outsb
mov
insl
inc
inc
shll
xchg
add
and
xchg
xchg
addr16
adc
adc
xchg
dec
dec
dec
pop
jnp
sahf
stc
int3
cs
dec
daa
insl
adc
in
fldcw
or
push
mull
or
insl
mov
pop
into
cli
and
xor
aam
mov
cmp
cmc
sbb
sub
sub
into
mov
in
les
push
lahf
aad
cmp
inc
imul
sahf
push
jo
or
mov
imul
inc
dec
movsl
xabort
xchg
or
push
add
pop
mov
mov
cmp
cmpsl
shlb
cs
adc
add
int
jmp
sub
in
jno
sub
rorb
inc
push
push
test
into
std
mov
mov
mov
push
or
dec
dec
adc
pop
scas
inc
inc
cmp
jno
loop
shlw
mov
dec
pop
mov
add
sub
jae
dec
or
cli
imul
pop
lock
adc
in
push
adc
or
lock
stc
scas
xchg
push
or
aaa
insb
jmp
je
stos
add
imul
xor
das
mov
fnstsw
mov
lods
xchg
rcl
xchg
dec
mov
ret
fildll
cs
imul
and
add
aam
push
push
cs
mov
mov
addr16
push
sbb
mov
push
inc
sbb
xchg
mov
push
sbb
sahf
sub
insl
sahf
push
imul
int
mov
stos
leave
adc
cwtl
jbe
mov
sarb
jl
lcall
pop
shll
ljmp
jnp
push
test
aad
push
and
out
sti
int3
xor
es
xchg
xchg
test
cmp
mov
mov
xor
xchg
mov
xor
loopne
fadds
push
movsl
sysexit
sub
sub
out
out
jb
out
shrb
pop
out
cltd
push
push
into
xor
adc
stos
rorb
iret
jbe
stos
dec
add
sbb
mov
push
cmp
outsb
and
rorb
gs
jb
jmp
mov
lcall
lret
push
cmpsl
cmp
add
cld
cmpsl
add
and
imul
in
addl
sub
or
sbb
pop
jl
lods
out
xchg
data16
movsb
into
push
sbb
cmp
les
jno
jmp
lods
fs
pop
sub
scas
femms
in
arpl
push
push
push
clc
cmp
ret
mov
add
int3
xor
shr
xchg
lret
inc
or
lea
pop
or
mov
sahf
pop
pop
popa
orb
or
popf
sahf
add
insl
outsb
movsl
cmp
dec
sub
ljmp
test
xor
imul
cwtl
ret
mov
jb
dec
aad
jae
les
cltd
xor
push
xchg
nopl
mov
pop
out
lds
sbb
push
insb
pop
and
int
imul
clc
mov
lods
in
xorb
cmp
and
xor
inc
cmp
dec
sahf
sarl
sub
xchg
stos
stos
inc
popa
das
cmp
fs
test
and
mov
outsl
lods
dec
mov
add
jne
cmp
clc
mul
cmc
and
cmp
cmp
cs
roll
ds
xor
jle
rclb
xor
xor
lds
iret
sub
mov
pop
dec
fiaddl
mov
fidivl
lcall
popf
sahf
daa
fwait
sub
ret
adc
xor
jg
test
mov
fistps
dec
pop
aaa
lahf
cltd
mov
cmp
mov
jns
inc
sbb
fmull
lods
stc
imul
adc
sbb
das
pop
outsb
add
sti
sbb
push
fs
jb
movsl
xchg
icebp
and
rcl
sbb
lods
repz
or
ss
jnp
rorb
arpl
cmp
repnz
push
xor
mov
mov
dec
dec
lods
inc
cli
imul
mov
test
nop
rclb
iret
jnp
push
mov
lret
mov
jmp
sbb
inc
addb
icebp
call
clc
mov
inc
arpl
mov
jb
dec
mov
outsl
enter
inc
push
xchg
sahf
dec
and
shlb
push
icebp
cmp
pop
mov
pop
xchg
push
and
dec
inc
mov
cmp
sbb
cmp
xchg
icebp
subb
mov
arpl
dec
repz
mov
mov
into
mov
mov
hlt
or
sahf
dec
cmpsb
sub
push
pop
js
ljmp
xor
pop
mov
rorl
test
or
insl
outsl
or
in
ja
imul
push
cmp
cmp
in
push
jo
xchg
push
sub
test
aaa
adc
sarl
xor
sbb
mov
pop
jb,pn
push
sub
jo
pusha
sbb
stos
ds
xchg
pop
or
or
and
enter
lcall
jb
xchg
mov
int3
fildll
cmp
orb
jne
insb
cmp
pop
inc
cmp
sub
repz
imul
imul
outsl
imul
outsl
imul
in
cmpsl
add
pusha
cmp
fwait
sbb
clc
call
dec
sub
jmp
shll
sub
stc
jno
popf
xchg
js
scas
jg
call
aaa
jle
sub
add
lock
ret
xlat
mov
dec
bound
push
jmp
pop
pop
xchg
cwtl
cmp
add
inc
cmpsl
lea
test
inc
stc
cmpsl
test
cmpsl
imul
lods
shlb
out
cmp
test
mov
sbb
insl
dec
xchg
sbbb
rcl
or
negb
jno
push
mov
out
or
std
addr16
and
in
push
fyl2xp1
fists
jmp
es
mov
xor
and
aaa
das
in
inc
mov
pop
int3
mov
fcoms
adcb
fnsave
fsubr
into
dec
add
add
cmp
inc
fldlg2
or
ja
out
mov
out
arpl
addr16
sti
mov
mov
mov
push
add
mov
out
sbb
sbb
xor
add
xor
adc
push
adc
inc
call
or
out
int3
ret
out
inc
cmpsl
outsb
imul
and
scas
out
push
add
add
sub
sbb
movsb
pop
cli
cmp
jle
adc
sbb
gs
or
mov
das
movsl
mov
cmpsb
pushf
push
lcall
xchg
pop
pop
or
cli
sub
mov
adc
sub
cmpsb
inc
push
mov
shrb
das
add
mov
fwait
leave
out
or
cltd
cmpsb
imulb
inc
sbb
addb
dec
data16
and
shlb
inc
dec
stos
inc
push
int
aam
outsb
mov
inc
jnp
in
cmc
pop
aam
adc
fbld
inc
push
jbe
sbb
jl
call
xchg
loope
pop
shl
sbb
loope
jecxz
cmp
data16
fcmove
sub
mov
add
nop
inc
mov
mov
call
dec
xor
sbb
sbb
es
adcb
hlt
test
int
dec
rolb
pushf
int
pop
and
mov
or
pusha
ljmp
jnp
andl
xor
lods
hlt
idivb
xchg
inc
pushf
sbb
inc
cld
sub
xchg
imul
je
stc
mov
xor
cmp
mov
lcall
sbbb
fdivs
sub
jae
adc
inc
inc
mov
out
inc
ja
dec
imul
loope
mov
xor
sub
adc
push
shr
mov
cmp
mov
dec
cmp
mov
sbb
test
mov
stc
cmpsl
push
int
fnsave
loope
dec
insl
sub
gs
sub
dec
sbb
xor
jne
outsb
or
or
negl
or
test
and
fstpl
dec
pusha
mov
mov
fcomip
inc
push
xchg
test
pop
mov
pop
xchg
push
and
pop
mov
sti
sti
inc
rcrb
in
dec
add
or
ficoms
and
and
cmpl
pop
inc
adc
cs
sti
xor
fwait
inc
push
inc
inc
inc
push
inc
psraw
mov
popa
lods
lea
popa
sbb
inc
and
sub
push
mov
inc
ja
mov
xlat
xchg
fidivl
pop
push
rorl
cwtl
ret
xor
cmp
push
inc
cmp
add
aad
dec
pop
and
cmpsl
or
enter
les
dec
inc
shll
push
jne
int3
or
pop
inc
shrl
lods
jns
xor
rol
sahf
adc
push
sahf
mov
or
dec
sub
and
mov
xor
rclb
mov
stc
mov
cmp
pop
push
mov
xchg
mov
mov
push
jecxz
cmp
fidivrs
cltd
push
test
inc
mov
shll
or
test
test
sarb
es
adc
dec
mov
mov
mov
ret
xchg
gs
test
mov
cmp
sub
jecxz
mov
sub
daa
mov
movsb
or
mov
andl
mov
jnp
pop
mov
in
sub
mov
jb,pt
sub
add
rclb
sahf
push
fnsave
sahf
cmp
push
sahf
shl
dec
pop
sahf
mov
fldcw
les
dec
in
jmp
pop
in
and
stos
lock
into
rcll
inc
call
notl
stos
sub
push
aaa
daa
ja
push
push
insl
or
sub
scas
push
in
sub
mov
xlat
and
dec
and
jp
push
dec
mov
shl
add
loop
inc
push
int
mul
cltd
push
sahf
movsb
pop
es
stos
sbb
daa
push
mov
adc
sahf
mov
insb
mov
sbb
sbb
lret
imul
mov
lcall
repnz
fbld
mov
mov
mov
ja
scas
scas
data16
pop
insl
dec
xchg
scas
cmc
push
ja
ror
rcrb
pop
add
or
bound
dec
pop
push
cmc
bound
scas
or
xchg
insl
mov
sub
inc
lds
hlt
xor
decl
add
xchg
out
fdivr
data16
push
pop
inc
add
jns
idivb
int
dec
jmp
lea
xchg
loop
out
fdivr
inc
fwait
inc
xlat
inc
arpl
add
sbb
mov
add
rcr
inc
out
cmp
inc
icebp
cmp
inc
and
ljmp
and
inc
pop
inc
inc
add
push
ret
dec
sub
add
jle
je
inc
arpl
mov
push
push
or
mov
mov
lods
add
inc
cmp
inc
xor
xlat
clc
int
inc
mov
pop
mov
stc
ret
or
loope
lea
mov
scas
sbb
loop
mov
push
dec
jge
adc
inc
fndisi(8087
xchg
cmp
loope
push
jns
jne
mov
cmp
lea
jge
xchg
inc
xor
cmp
push
sbb
fldenv
insl
fidivs
inc
pusha
cmp
lea
pop
rcrb
xchg
popa
in
lcall
push
andl
add
sub
and
or
push
sbb
lods
dec
inc
sbb
xchg
cmp
pop
mov
sub
loopne
cmp
sbb
lds
inc
cmp
insb
hlt
scas
enter
bswap
jo
mov
ret
sbb
into
out
loopne
ja
in
lods
mov
push
aam
lahf
push
push
orl
jno
ss
mov
cmp
jne
or
sub
jno
scas
mov
mov
enter
dec
imul
push
mov
lock
mov
testb
fdivl
scas
mov
sub
jae
sub
in
div
int3
push
mov
outsl
cmp
mov
push
push
dec
push
xchg
push
sub
or
ljmp
cmp
pcmpgtb
cmp
dec
sbbb
popf
test
pusha
jecxz
inc
aaa
es
lods
imul
and
mov
shlb
add
push
cmp
loopne
and
es
cwtl
sahf
jecxz
mov
xchg
push
out
pop
inc
and
sub
cmp
fwait
mov
arpl
fisttpll
cmp
mov
cmp
jecxz
cmp
push
jno
pop
sub
fiadds
pop
adc
sbb
das
inc
push
popf
xchg
xor
fcoms
xor
adc
xchg
cmp
popf
pop
xor
int
sub
int
movsb
mov
cs
sub
sahf
sub
mov
adc
cmp
mov
mov
mov
or
ss
cmp
cmp
sbb
xchg
sub
sub
jecxz
add
push
cmp
cmp
jle
xor
jp
xor
cmp
or
sub
aas
cmp
sbb
arpl
adc
dec
mov
mul
repz
mov
sbb
icebp
dec
xor
push
mov
jne
dec
inc
pop
mov
rcrl
rclb
sahf
and
fiaddl
ds
faddl
push
sbb
jne
outsb
pop
or
inc
je
out
mov
clc
addr16
inc
inc
rorb
jb
sub
and
sub
mov
out
jae
sbb
dec
mov
cmp
roll
rol
aas
xchg
insl
adc
lods
xchg
mov
push
cmp
and
aaa
mov
sub
cmp
jae
mov
mov
jnp
aam
or
addl
aas
andb
imul
or
xor
add
rclb
inc
and
push
cmp
mov
pop
int3
push
pushfw
cmp
xchg
pop
push
mov
in
pop
mov
addr16
sbb
add
popf
xchg
dec
clc
sahf
cld
ds
rclb
int3
das
sahf
xchg
pop
icebp
pop
leave
lcall
lods
and
mov
cmp
ljmp
subl
and
push
mov
xorl
pop
and
cmp
pop
cmp
push
cmp
mov
pop
imul
adc
fwait
sub
lods
pop
test
shlb
or
das
add
or
push
xor
sub
cmp
out
add
add
cmp
push
xchg
in
dec
ret
das
cmp
mov
add
insb
pop
xor
sub
cltd
or
test
cmpsl
loopne
cmp
repnz
inc
and
test
pop
push
in
xchg
rcr
xlat
shlb
fstpl
sub
loopne
jns
ja
ss
lcall
dec
jl
jb
adcb
fimull
inc
inc
sub
mov
pop
jecxz
cmp
add
fdiv
test
movsb
or
push
xor
pushf
enter
cltd
mov
clc
inc
add
stos
popf
adc
mov
jge
mov
lea
addb
fldz
btc
enter
push
jg
mov
das
ss
dec
mov
add
mov
adc
arpl
test
inc
sub
repz
dec
mov
test
sbb
mov
lods
scas
pop
lcall
test
mov
push
xchg
jp
das
jae
into
dec
sbb
ja
adc
mov
or
clc
mov
cltd
pushf
mov
push
push
sub
inc
ds
add
sbb
jb
shlb
and
cmp
push
and
sbb
popa
leave
push
cmp
rorb
inc
stos
mov
xor
inc
outsb
nop
xchg
jb
sbb
sahf
outsl
xchg
push
xchg
popf
leave
pushf
ret
pop
pop
shrl
mov
in
or
fdivl
arpl
sbbb
loopne
lcall
sub
into
sub
int3
fpatan
loopne
mov
push
dec
pop
inc
mov
sub
inc
mulb
lea
in
jp
xchg
pushf
int3
sub
out
push
int3
pushf
test
add
sbb
insb
int
pop
jp
pop
lahf
xchg
lahf
iret
adc
fnstenv
loopne
int3
dec
das
cmp
pop
aas
add
push
in
sub
sbb
mov
xchg
mov
jo
xor
xchg
jae
jmp
push
inc
xor
mov
lcall
sbb
dec
incl
jmp
push
lahf
fstpl
movsl
mov
sahf
and
sub
adc
sbb
jmp
dec
stos
loope
hlt
adc
stos
add
in
fbld
or
sub
mov
mov
mov
mov
dec
add
push
rcll
adc
imulb
aas
pop
sti
cmp
sbb
scas
rol
and
cmp
movsb
jbe
fisttps
sub
pop
and
loopne
pop
cmp
sbb
cmp
sti
fwait
adc
push
adc
inc
mov
aad
pusha
xor
fists
and
addr16
das
pop
imul
ret
sub
dec
xchg
cmp
add
loopne
shr
jns
mov
ficoms
xchg
mov
push
push
pop
scas
mov
jge
xchg
xchg
sub
sub
in
out
xor
mov
xchg
shrb
pop
dec
jge
jle
push
inc
sbb
dec
lea
lock
sub
int
mov
dec
and
sub
imul
sbb
cmp
xchg
inc
mov
andl
or
inc
mov
es
outsb
lret
pop
xchg
imul
into
and
push
sbb
or
aad
fcoms
or
fcmove
clc
push
xchg
fiaddl
pushf
pop
sub
out
xchg
dec
inc
lds
insl
mov
outsb
lods
push
cs
dec
ret
lret
loope
push
push
mov
pop
sar
sub
pop
jecxz
icebp
push
jnp,pt
out
or
push
ds
pop
in
es
pop
in
or
pop
lret
or
sbb
or
sbb
lock
scas
mov
cmc
adc
in
icebp
into
push
pop
scas
std
mov
leave
cld
or
sbb
dec
cmp
cmp
push
fs
and
or
mov
daa
nop
push
jg
repz
adcb
adcl
leave
ja
mov
cltd
insl
push
bnd
push
ret
sbb
cltd
lahf
sarb
lcall
punpcklbw
push
lds
adc
jmp
sbb
xchg
mov
push
xor
fldt
pop
pop
pop
sub
es
sub
pop
rcr
dec
inc
cli
mov
push
pop
sbb
sbb
shlb
rcrb
pusha
data16
adc
push
inc
js
dec
pop
outsl
ror
mov
push
rcrl
or
or
fiaddl
jmp
jne
leave
fists
or
inc
adc
mov
aas
add
inc
dec
add
sbb
pop
stos
ja
jmp
jnp
mov
std
int3
lcall
jnp
loope
loope
adc
cltd
fbld
xchg
bnd
push
or
mov
mov
fsub
push
test
mov
adc
xchg
dec
lcall
pop
mov
sets
inc
pop
inc
shlb
pop
mov
clc
stos
scas
mov
push
pop
rorl
cmp
insl
decl
push
into
add
cmc
xchg
or
mov
pop
fmuls
popf
inc
std
test
adc
jmp
clc
iret
sbb
dec
pop
jbe
fcmovnb
sahf
sbbl
subb
pop
fistps
jmp
xor
pop
fwait
dec
sub
sbb
fwait
dec
sub
xchg
call
cwtl
fists
cmp
push
and
test
ss
imul
or
insl
ljmp
cmp
xchg
dec
cmp
int3
leave
pushf
sub
in
popw
test
bound
insl
sub
pop
add
push
add
in
adc
mov
sub
ret
dec
and
test
push
add
sbb
push
aaa
dec
leave
cwtl
push
push
sub
stos
add
ljmp
mov
cs
dec
sub
adcb
rorb
aaa
dec
sar
xchg
lret
sbb
andb
out
xchg
aas
insb
mov
inc
std
outsl
xchg
jmp
pop
dec
sub
xchg
pusha
lahf
outsb
adc
cltd
fdivrs
jg
sub
push
jecxz
aam
pop
and
daa
cld
jecxz
and
push
enter
dec
dec
push
test
aad
je
rorb
adc
aad
mov
add
cmp
ret
sti
or
ss
mov
out
out
or
into
xchg
es
jbe
daa
rorb
dec
ljmp
cltd
mov
fists
jecxz
mov
loope
lret
out
jl
es
jnp
cs
out
push
imul
pusha
shlb
lret
lds
adc
mov
push
lods
aas
pop
loopne
xchg
cmp
fidivrs
or
sub
xor
xlat
or
enter
repnz
imul
into
push
jle
rcrl
shrl
repz
and
rcrl
inc
aam
loope
rcrl
or
mov
mov
jne
jl
xchg
lahf
jne
xchg
outsl
arpl
sbb
push
test
pop
imul
push
mov
addr16
sub
pushf
mov
in
jo
cltd
dec
lods
orb
in
mov
mov
add
mov
lret
movb
inc
xchg
lds
inc
push
jb
sub
dec
pop
pop
popa
inc
inc
int
imul
shrl
push
mov
loopne
ss
lcall
cwtl
aaa
les
cltd
hlt
sub
push
mov
xlat
inc
pop
frstor
aas
xchg
fwait
js
in
push
lret
or
jge
mov
pavgb
not
or
or
outsl
mov
and
xor
enter
movsl
pushf
imull
aad
or
mov
in
cmp
imul
fmul
insl
in
add
mov
insb
jns
enter
adc
repnz
push
xor
mov
sbb
sahf
dec
repnz
inc
and
xchg
push
jo
scas
mov
in
dec
mov
fiaddl
aaa
call
sbb
repnz
push
sti
xlat
imul
push
xchg
leave
popa
jne
xlat
xchg
enter
ds
xchg
aad
fsubs
lcall
lea
pop
leave
dec
aad
push
popa
cmp
pop
add
cmp
mov
inc
cmp
stc
dec
popa
cmp
fnsave
addb
adc
xchg
add
imul
mov
dec
push
xchg
out
inc
mov
or
sti
lcall
pop
pop
popa
mov
sbb
leave
mov
cmp
popf
daa
jbe,pn
ret
rclb
jle
mov
arpl
lea
push
inc
dec
mov
sbb
adc
ror
mov
leave
andl
adc
inc
orb
nop/reserved
and
cmp
or
shlb
je
mov
js
inc
sarl
mov
rolb
lea
out
dec
cltd
push
inc
add
ror
mov
repnz
enter
repnz
popa
xchg
sub
leave
mov
popa
in
mov
sub
cs
inc
dec
xchg
sbb
pop
stc
add
sbb
es
insb
add
lcall
inc
ds
xlat
repnz
xor
mov
loope
mov
loopne
outsl
pop
lcall
ret
mov
mov
fbld
shlb
adc
fnstcw
sarl
dec
mov
sub
inc
mov
sahf
in
xor
in
and
popa
int3
sbb
dec
insb
jae
add
push
repz
mov
ret
fs
test
clc
mov
enter
ds
mov
decl
inc
mov
ljmp
sti
sub
test
ror
out
xchg
repnz
int3
mov
dec
nop
jns
adc
mov
addl
jg
jg
shll
lahf
sub
insb
add
outsb
bound
int3
push
dec
xchg
jb
outsl
mov
lea
popf
xchg
push
sbb
sbb
mov
loopne
adcb
inc
stos
repz
fwait
mov
push
cmp
xchg
push
inc
sub
and
sbb
sbb
rcll
cmpsb
movl
push
insb
or
adc
push
mov
push
scas
mov
mov
in
adc
out
aas
adc
jle
aad
cwtl
xchg
adc
jae
or
adc
xchg
push
test
push
and
push
dec
repnz
sbb
push
pop
adc
adc
jb
pop
repz
dec
aam
add
push
xor
sub
sub
mov
inc
leave
inc
mov
mov
add
sub
aad
cwtl
mov
inc
or
jno
cmp
dec
adc
adc
roll
lahf
xor
mov
push
push
cmp
jno
dec
xor
cmp
dec
mov
push
insb
sub
add
xchg
cmp
and
adc
fwait
adc
mull
add
inc
push
mov
and
filds
fcmove
inc
enter
adc
inc
jns
test
popf
dec
into
mov
aam
sub
insl
and
xchg
aad
out
lahf
out
or
icebp
adc
lods
das
fnstcw
mov
ret
inc
jbe
inc
fs
imul
outsl
shr
test
jecxz
pusha
cwtl
mov
pop
mov
sub
ret
mov
scas
leave
movsl
popf
mov
adc
jno
cwtl
mov
mov
pop
pop
cmp
sub
shlb
xor
jecxz
stos
adc
sub
add
adc
sbb
or
movsb
mov
cmp
aam
or
jb
pop
dec
jne
cmpsb
adc
popa
pop
adc
cltd
sbb
leave
aam
stos
inc
cmp
xor
test
sub
dec
fwait
mov
jno
arpl
pop
pop
sbb
mov
push
in
sbb
sbb
loope
pop
jns
mov
add
push
adc
add
fcmovbe
cmp
add
inc
aaa
roll
cs
sub
push
xor
inc
test
bound
outsl
mov
mov
push
pop
sbb
lahf
adc
mov
test
add
fimull
dec
push
mov
in
lcall
pop
popf
sbb
push
add
jns
add
mov
jbe
cmp
cmpsb
cmp
testb
xchg
imul
out
inc
dec
mov
mov
pop
imul
sub
jnp
cmp
cmp
dec
and
sbb
inc
mov
das
sub
xor
insl
sub
pop
in
ss
inc
inc
jae
jns
pop
in
jbe
mov
and
mov
repz
in
xchg
leave
fnsave
repnz
rorb
jp
dec
sbb
dec
jnp
and
fcomip
ret
pop
push
cmp
xchg
movl
and
lahf
jae
or
mov
add
dec
cwtl
sub
add
pop
leave
inc
xor
jns
push
or
xor
sub
into
sbb
int
lcall
pop
shll
mov
icebp
xor
lret
mov
push
sub
pop
pusha
repnz
jo
sub
out
push
push
xchg
jmp
les
adc
sub
popf
cmp
mov
jbe
mov
sarb
rorb
and
add
sub
pop
sahf
add
imul
in
sub
push
dec
add
dec
test
inc
mov
test
adc
lahf
push
or
mov
dec
cmp
ds
lret
sub
scas
sub
add
push
cltd
push
test
mov
bound
push
pushf
cmp
ficompl
sahf
inc
imul
push
vcmppd
mov
sub
or
outsb
pop
xchg
push
sbb
and
pop
xlat
or
out
push
sahf
xor
out
push
xchg
hlt
push
scas
inc
in
sbb
stos
leave
dec
adc
cmp
in
cmp
rcll
mov
icebp
mov
rolb
cmp
push
cmp
sbb
sbb
imul
ret
and
cli
dec
es
out
sub
dec
jnp
push
in
mov
fiaddl
outsl
in
in
pop
add
sarb
in
pushf
insl
dec
shrl
cltd
add
mov
mov
imul
clc
out
xchg
mov
inc
push
rorl
mov
push
ret
lods
and
jne
mov
cmp
cli
mov
jae
push
and
lods
repnz
nop
push
push
mov
push
xchg
push
jns
sbb
out
xchg
aam
sub
pop
and
dec
sub
adc
imul
adc
jae
and
daa
push
push
fisubrl
mov
push
push
pop
loopne
and
sti
data16
mov
cmp
sub
int3
cltd
lret
mov
and
repz
push
int3
sbb
lret
mov
icebp
or
cmp
cmc
cmpsb
jne
stos
int
pushf
cvtdq2ps
int
pop
dec
repz
push
leave
mov
shlb
mov
mov
xchg
inc
les
xchg
fwait
out
adc
int
ja
ret
fwait
push
sub
inc
sub
mov
xchg
fistps
mov
fwait
rclb
adc
aam
push
jns
or
and
lods
sub
xchg
aas
fcmovb
cmp
or
sub
sub
and
push
push
cmpps
ljmp
cmp
mov
xchg
shlb
xchg
insl
dec
lret
cmp
outsl
sbb
in
sub
iret
decl
out
sub
iret
cmp
fdivs
mov
popf
sbb
insl
dec
push
std
testb
sbb
nop
sub
sbb
sub
mov
dec
lret
out
sub
mov
sbb
pop
mov
xchg
fisttps
nop
shl
mov
push
cs
cmc
dec
xchg
push
push
inc
aam
mov
imul
repnz
outsb
sbb
mov
jmp
xchg
jo
mov
rcrb
or
sbb
fsubrl
nop
rclb
pop
mov
push
fdivs
cmp
sub
or
pop
push
sbb
pop
xchg
cltd
fisubrl
in
jle
adc
inc
or
xor
out
sub
out
outsb
adc
aaa
lret
push
push
int3
rcrb
in
sub
lret
pop
out
outsb
scas
cmp
cmp
adc
sbb
fisttps
nop
rcl
mov
push
cs
mov
push
or
shll
rorl
orb
fwait
mov
fwait
push
and
xchg
cltd
fisubrl
adc
inc
or
xor
out
sub
dec
inc
into
int
push
lcall
imul
stc
out
outsb
lcall
xchg
and
bound
out
sub
or
inc
sbb
insl
dec
adc
mov
aam
sbb
in
xor
push
mov
mov
stos
xchg
scas
and
fs
leave
push
xor
scas
jno
aas
jg
jge
jb
popf
in
mov
sysret
fstpt
fcomps
push
and
adc
inc
cmp
mov
movsb
insb
adc
leave
dec
mov
push
fsub
cs
mov
sbb
ds
add
sahf
sti
push
pushf
mov
lea
idiv
cltd
into
scas
adc
data16
les
inc
xchg
movsb
mov
addr16
sub
int
pop
fsts
sub
xlat
cmp
pop
or
imul
insb
stos
push
cmp
jmp
lock
jo
cmp
or
negl
cltd
push
cvtdq2ps
call
mul
mov
pop
sub
dec
sub
fadd
pop
or
sub
cmp
aad
int
pop
ljmp
and
fnsave
ficoml
arpl
testl
jne
call
adc
mov
rcr
add
pop
negl
jle
dec
inc
add
das
push
or
cmp
inc
fildll
jbe
or
cli
inc
sbb
fimull
cmp
pop
mov
cmp
jle
nop
xchg
scas
aam
sarb
push
and
fs
subps
in
lret
xchg
push
dec
enter
push
inc
enter
cmp
cs
daa
add
sarb
inc
in
mov
movsb
cmp
nop
jno
ret
sbb
pop
add
adc
fs
cmp
mov
pop
push
orb
mov
arpl
pusha
rcl
sub
sub
les
nop
push
jbe
mov
mov
in
push
lcall
movsb
jno
pop
mov
and
xlat
jae
outsb
stos
inc
add
test
dec
int
andps
sbb
jae
outsb
sti
mov
sbb
addr16
mov
insb
dec
scas
enter
mov
mov
pop
in
xor
imul
mov
xchg
pop
mov
push
scas
andl
jg
lea
inc
inc
inc
mov
addr16
xor
data16
inc
rolb
insl
dec
pop
jb
js
cmp
fisttps
mov
xchg
fwait
push
sub
jle
into
inc
cmc
shlb
insl
lcall
cmp
sbb
lret
cmp
cmp
aas
xchg
fbstp
cmp
jle
nop
xchg
out
addr16
scas
in
daa
adc
adc
sub
or
xchg
rcll
adc
testb
int
mov
add
pusha
in
cmpsl
adc
adc
sub
push
sbb
outsb
in
sub
inc
dec
nop
push
ret
rclb
lcall
data16
dec
lods
int
xor
xchg
adc
adc
jb
push
xchg
push
fiaddl
and
insl
dec
in
cmpsb
in
fwait
call
fbld
or
js
inc
mov
cmp
lds
xchg
fwait
cmpsb
sub
jae
in
int3
sub
jmp
data16
sub
push
sbb
fbld
inc
addl
mov
ljmp
add
push
orl
jno
add
ret
sbb
lret
testb
movb
int3
orl
or
ret
rcll
int3
test
xchg
jg
sbb
dec
in
subl
xchg
add
xchg
sarb
fnstenv
loope
add
pop
loope
rorl
pop
dec
or
xchg
in
dec
lret
push
sub
or
xchg
mov
fistpl
and
mov
jecxz
shrl
notb
dec
lcall
call
mov
movsl
cmp
ret
adc
adc
cmp
sbb
adc
adc
mov
int3
push
rcl
pop
xor
bswap
lret
lret
gs
pop
xchg
inc
pop
dec
sub
popa
inc
dec
sub
dec
imul
mov
sub
xlat
stos
adc
fldln2
lea
inc
subb
add
mov
sub
pop
jbe
int3
movsb
cmp
push
xor
add
gs
insl
dec
pop
mov
jg
loopne
repz
push
stos
lcall
outsl
bnd
out
or
dec
and
sub
push
pop
inc
lods
mov
push
ror
mov
sbb
and
sub
shll
mov
pop
xchg
xchg
cltd
loope
arpl
sar
test
dec
ss
sbb
test
push
sub
mov
loopne
ret
xchg
push
data16
or
test
sub
inc
es
shr
mov
xchg
jge
setb
mov
clc
push
out
or
sub
xchg
push
loope
inc
data16
sub
rorl
push
lods
fnstenv
mov
mov
mov
add
jne
lcall
sbb
push
mov
add
jmp
jne
pop
xchg
sub
add
xorb
cmp
les
jge
inc
cmp
xor
lods
movsb
pop
ficompl
loop
sbb
mov
jg
fsts
int
sbb
aad
sti
and
xchg
push
add
add
or
test
mov
out
mov
sahf
gs
or
addl
sti
rcr
sbb
and
imul
xchg
pushf
push
push
pop
cwtl
and
inc
pop
push
lahf
lea
aas
sar
adc
pop
cltd
jb
push
adc
adc
out
sub
inc
sub
inc
rcl
mov
pusha
aas
mov
xbegin
sub
shrb
inc
int
ss
jo
imul
ja
sarl
rcll
mov
das
push
dec
inc
das
scas
xor
or
pop
loope
push
test
into
lods
sbb
pop
and
ffree
imul
int3
lcall
mov
mov
lahf
push
ss
mov
repz
ret
shrl
ret
sub
xchg
fwait
and
jg
pop
sbb
sub
xchg
jb
loop
xchg
lcall
cmp
pusha
dec
int3
jmp
fucom
movsb
out
jp
orb
cmpsl
cmpl
sub
int
fiaddl
xor
adc
jae
jnp
adc
xchg
xor
mov
adc
dec
adc
xchg
push
xor
mov
nop
push
push
dec
jb
jae
dec
mov
andb
jb
inc
int
mov
aam
adc
xchg
jg
test
add
sbb
push
addl
jae,pn
lcall
inc
outsl
daa
push
mov
xchg
arpl
ud0
push
lods
int3
push
xchg
hlt
lcall
push
mov
push
cmp
scas
rorl
ret
rorb
inc
cmpsl
adc
jae
xchg
xchg
xchg
lahf
shr
cmp
sub
out
outsb
and
bound
push
jp
xor
pushf
leave
bound
sbb
sahf
stos
push
add
dec
xor
push
ret
mov
dec
cmp
mov
cltd
push
orb
sbb
arpl
orb
mov
dec
and
xchg
cmp
mov
test
dec
lods
mov
push
push
cmp
xor
incl
rclb
and
and
lods
xchg
adc
push
sbb
imul
mov
sub
ret
cltd
mov
popf
shlb
mov
fwait
mov
adc
jne
inc
nop
dec
xlat
dec
out
sub
popl
mov
inc
insl
xchg
leave
es
and
out
or
jle
stos
inc
dec
in
pop
jb
lcall
outsb
outsl
movsb
or
add
jp
out
insb
scas
add
sub
nop
imul
int
in
shll
outsb
movsl
sbb
or
sbb
pusha
pushf
nop
rcl
sub
xlat
outsb
and
adc
sbb
shrl
rcll
lret
and
inc
fisttps
stos
xor
dec
fldln2
lods
shrl
push
lcall
arpl
std
cmp
call
int
cld
movsb
aam
inc
addl
icebp
dec
add
mov
int
jnp
lcall
pop
repz
cld
cli
lahf
xchg
or
orb
fsubr
shrb
sbb
push
mov
sbb
dec
out
adc
dec
andl
into
add
mov
inc
int
in
aam
insl
inc
xor
int
fiaddl
ja
mov
movsb
sbb
sbb
dec
mov
mov
dec
rcll
repnz
rorb
lcall
push
push
or
fdivs
sbb
inc
int
aas
xor
les
mul
mov
pushw
nop
xlat
pop
daa
mov
add
inc
or
and
mov
or
add
inc
add
sarb
xor
in
mov
lea
dec
pop
sbb
and
pop
sbb
pop
push
adc
xor
pop
pop
call
addr16
dec
dec
stc
mov
push
push
insb
arpl
data16
ds
cmp
jp
add
rorb
jp
ja
push
xchg
push
sbb
bound
sti
and
adc
call
loop
imul
aaa
pop
mov
or
stc
test
mov
mov
push
dec
mov
mov
push
cmc
pop
cmp
pop
xor
sbb
add
cmpsl
push
and
es
add
test
dec
cwtl
sbb
es
xor
sub
mov
fists
sub
sbb
decl
push
mov
outsl
mov
test
scas
imul
imul
pop
sub
xchg
lcall
mov
pusha
jecxz
sub
xchg
push
mov
mov
push
and
push
das
lcall
inc
inc
mov
gs
jmp
push
sbb
lds
rorl
or
test
xchg
fs
push
add
es
jns
and
add
sub
mov
in
out
push
jp
scas
dec
or
insb
push
mov
sub
inc
inc
fnstcw
sbb
adc
inc
adc
leave
dec
cwtl
repnz
add
pop
loope
icebp
inc
dec
fisttpl
sbbl
pusha
int3
negl
in
push
in
nop
adc
and
ja
hlt
data16
push
call
imul
lock
cmp
lds
push
sahf
jecxz
sbb
out
dec
push
test
push
cmpsl
xor
fsubl
hlt
push
scas
mov
sbb
mov
jmp
jno
mov
aam
jo
push
imull
inc
movntq
out
mov
or
aad
adc
mov
xor
push
sbb
jae
mov
add
pushf
and
sbb
nop
add
insb
jecxz
jb
iret
and
sub
loop
fs
imul
cmp
sub
and
inc
xlat
aam
dec
into
jecxz
and
lret
pop
xchg
jg
int3
movntps
pop
pop
add
inc
add
imul
push
xchg
dec
jbe
lahf
pop
sbb
stc
or
push
and
cmp
lahf
and
jmp
mov
sbb
insb
or
stos
push
aaa
and
rorl
mov
cmpsl
and
ss
mov
xor
push
or
aam
sbb
push
scas
push
sarl
cmp
or
sbb
sbb
cmpsl
lret
ret
sub
xor
mov
pop
and
rcrl
sbb
insb
or
stos
push
das
and
rcll
push
sbb
cmpsl
mov
or
jecxz
sub
sub
aam
pushf
mov
jne
xor
dec
das
or
xchg
cmp
mov
mov
xchg
xchg
icebp
sub
jns
mov
repnz
mov
add
pop
fwait
mov
addr16
pop
dec
fidivs
cmpsb
loopne
dec
and
dec
push
mov
mov
int3
mov
mov
adc
or
add
adc
repz
inc
sub
and
pop
mov
inc
mov
mov
les
inc
jbe
inc
lret
sub
orb
mov
jb
jle
dec
pop
ret
or
pushf
dec
fdivs
and
outsb
mov
mov
iret
adc
or
cmp
repnz
sub
push
cmpsb
inc
jb
clc
xchg
dec
out
sahf
add
lcall
ficomps
jb
mov
add
lcall
pop
add
lcall
out
pop
add
lcall
ficomps
lcall
into
pop
add
lcall
pushl
mov
sub
lds
dec
fstpt
fidivrs
test
mov
repnz
aas
aam
mov
mov
pop
adc
mov
mov
push
push
push
adc
enter
aad
es
sahf
leave
addl
jge
lea
push
cmpsl
insl
scas
in
and
cmpsl
sbb
sbb
mov
and
sub
ljmp
dec
push
add
mov
lods
lea
mov
push
aaa
aad
inc
stc
cmp
inc
es
outsb
mov
dec
dec
xchg
push
aad
fs
test
imul
repz
mov
cmpl
insb
mov
cmc
sbb
ja
dec
enter
push
in
stos
cld
outsb
sub
rcr
ss
dec
sub
andl
pop
pop
mov
cmp
sbb
sub
iret
sub
add
repnz
pop
rorl
xchg
or
mov
scas
adc
dec
xchg
pop
lcall
rcrb
dec
in
mov
push
dec
xchg
pop
out
pop
jno
mov
aam
ficomps
push
jl
ficompl
ficoml
push
cmp
mov
push
cltd
dec
std
hlt
cltd
test
sti
cmp
pop
fidivs
cmp
movsl
lret
mov
pushf
inc
sub
xor
cltd
outsb
jecxz
clc
add
jno
aaa
jae
cmpsl
sahf
lds
cltd
es
mov
imul
adc
and
jecxz
xor
insl
dec
sub
dec
inc
cmp
xchg
adc
cmp
mov
lret
lcall
xchg
push
jle
xchg
in
jge
flds
aad
aam
test
mov
push
pop
dec
add
pop
pop
test
in
aaa
xchg
pop
loop
fbstp
fmul
std
sub
inc
sbb
or
push
cmp
imul
or
insl
cs
xchg
jmp
pop
mov
jnp
mov
imul
enter
pop
addr16
sub
fstl
xchg
push
mov
loop
pop
das
sub
popf
sub
fistpll
add
xchg
sbb
imul
ret
testb
sub
sub
arpl
mov
cmp
pop
sub
int3
cmpl
mov
jae
jge
inc
imul
sbb
dec
lahf
rcrb
lcall
mov
fwait
dec
in
pop
pop
dec
sub
push
adc
out
cmp
dec
subb
inc
ficoms
cmp
arpl
lret
nop
fistps
addr16
lcall
mov
lods
orl
paddusb
push
push
mov
andl
inc
je
insl
jbe
push
and
add
ret
out
fmull
push
cmp
pop
jmp
frstor
mov
mov
mov
mov
and
hlt
fbstp
xor
fistps
xchg
or
fimuls
and
pop
out
mov
or
xor
adc
repz
popf
outsl
adc
pop
dec
rclb
pop
pop
jl
je
xchg
scas
cmp
aam
das
aam
sub
les
mov
lea
push
xor
or
das
push
test
jb
aam
or
mov
nop
jno
leave
mov
push
mov
mov
push
dec
jecxz
lea
and
insl
hlt
dec
mov
je
pop
adc
jge
pop
or
xor
and
dec
out
dec
dec
ret
out
in
stc
fcmovbe
imul
jbe
and
push
lcall
mov
xor
fyl2xp1
arpl
mov
push
stc
push
dec
or
pop
push
add
and
and
clc
push
cmp
xchg
mov
mov
pushf
test
outsb
push
xchg
jle
sahf
pop
or
ja
xchg
pusha
push
notl
jmp
cmpsb
push
mov
inc
mov
outsl
add
movsl
add
ficomps
and
inc
xchg
popa
dec
ds
sbb
outsb
inc
sbb
outsb
pop
jbe
lea
rorl
jns
push
mov
fisubrl
mov
mov
inc
pop
cmp
movsl
les
cmpsl
mov
sbb
pop
push
lds
mov
pop
loop
jge
loopne
xor
cmp
fsubl
fs
jg
xor
or
adc
and
or
jge
repz
xlat
in
pop
inc
roll
jle
js
xor
inc
icebp
xchg
adc
sbb
stos
imul
mov
push
or
or
cmp
adc
add
add
mov
mov
mov
filds
hlt
jle
cltd
mov
dec
mov
mov
mov
and
mov
adc
cmp
lret
xor
push
pop
sbb
xchg
inc
mov
popf
out
sahf
lcall
in
repz
xchg
sahf
rcrb
sub
push
pop
addb
and
xorb
xor
adc
mov
fbstp
bndstx
or
mov
xchg
shrb
inc
rcr
cmpb
jnp
sub
lcall
aas
xlat
add
mull
mov
xor
add
dec
xor
jle
test
dec
mov
adcb
test
ds
fsubs
jne
jb
or
mov
fdivrs
xchg
xor
lcall
push
mov
call
push
lods
push
cmp
shlb
lcall
mov
icebp
insb
mov
or
or
dec
pop
xchg
mov
imul
mov
xor
cmp
xor
xor
adc
and
xor
cli
fimull
add
dec
xchg
sub
adc
leave
dec
ret
xchg
sbb
fs
and
and
fcoml
and
and
or
jle
push
clc
adc
fildl
add
das
sbb
incb
push
jno
lods
ficompl
rcrb
std
sbb
inc
push
xchg
pop
push
sbb
jno
je
push
or
mov
aas
inc
ds
mov
outsb
cmp
fldcw
xor
ja
inc
fcoms
xchg
dec
cmp
inc
in
in
and
iret
inc
sbb
shrb
xchg
lea
mov
cltd
addb
and
orb
ja
decb
adc
ja
xor
ljmp
das
sub
jmp
xlat
add
mov
pop
xchg
out
add
in
push
cmp
testb
aad
mov
sbb
adc
out
ret
pop
mov
adc
add
cmp
adc
mov
cwtl
and
or
js
or
inc
imul
rep
inc
lahf
rcll
jle
inc
cmp
and
neg
cmp
pop
pop
and
idiv
dec
push
testb
xor
rorb
adc
aaa
jecxz
inc
or
mov
adc
push
out
jle
inc
ror
adc
fwait
and
mov
popa
pop
stos
insb
inc
or
lods
dec
mov
stc
test
dec
in
mov
outsb
xlat
push
xor
and
shrl
or
and
push
jb
int3
or
pop
lods
add
jns
or
push
and
lret
iret
jg
mov
lcall
fistps
inc
dec
add
or
dec
out
hlt
xchg
popa
inc
adc
cmp
add
loope
dec
mov
leave
adcb
popf
lods
test
dec
pop
mov
test
sahf
ficompl
xor
addr16
pop
test
mov
iret
push
xorl
je
sbb
add
sbb
cmpsb
pop
lea
jle
out
push
push
adcl
sub
fnstenv
lret
mov
sahf
push
loope
es
push
imul
nop
in
xchg
hlt
add
dec
and
add
mov
mov
jecxz
adc
cmc
dec
mov
jmp
add
call
enter
jmp
es
inc
pop
jecxz
in
ret
jecxz
cwtl
sar
or
cmc
inc
pop
adc
imul
in
imul
pop
push
iret
fstpl
mov
push
add
mov
cmpsl
push
aam
xor
add
push
sub
add
jbe
ret
dec
dec
push
nop
sub
mov
dec
cvtdq2ps
jb
push
sbb
adc
dec
and
ljmp
xchg
in
es
outsb
and
int
repz
jge
shrl
mov
stos
xor
push
sbb
fidivs
cwtl
mov
aad
imul
xchg
lods
inc
nop
push
fbstp
jno
fimuls
negb
in
scas
mov
xor
jl
or
sub
test
and
mov
pop
fs
adc
push
fs
loope
aas
push
dec
adc
imul
decl
and
xchg
lea
in
or
adc
xchg
jne
push
mov
rcl
mov
push
fdivs
cs
push
push
or
xor
aam
or
loopne,pt
sahf
into
push
cmc
xor
mov
daa
adc
ljmp
test
jae
push
leave
and
mov
xor
xchg
xor
xor
jae
nop
sub
xchg
and
out
dec
mov
sub
dec
aad
loope
cmp
push
ret
xor
push
dec
lea
dec
cwtl
cmpsb
mov
out
pop
popf
push
ret
and
je
imul
test
je
nop
or
je
pop
xchg
int3
inc
cwtl
aad
out
in
es
add
imul
mov
dec
mov
xor
sbb
dec
jle
cli
sub
jle
jae
leave
in
mov
notl
pop
cmp
dec
jb
loopne
dec
pushf
enter
out
testl
scas
mov
push
sbb
mov
push
sbb
mov
push
nop
push
push
ds
inc
ja
xchg
popl
sahf
cmp
insl
outsb
sar
pop
and
sarl
inc
adc
push
fistl
pushf
xchg
xchg
loopne
cmp
jge
pop
pop
mov
adc
fistpll
mov
rolb
divb
mov
outsl
pop
xcrypt-cfb
cmpsl
es
or
xor
push
xor
add
js
mov
je
nop
push
sbb
das
loopne
pusha
les
mov
sti
inc
jl
jnp
or
xor
fldcw
js
call
and
mov
imul
ficoms
mov
sub
or
push
and
cs
cld
popw
inc
repnz
push
cmp
fucomip
pop
push
lcall
mov
add
cs
xchg
and
outsl
xlat
or
pop
imul
mov
dec
ds
xchg
mov
aad
sbb
xorb
push
call
mov
arpl
pop
cld
jmp
out
cmp
ret
int
int3
jle
pop
mov
adc
push
outsl
test
push
jge
int3
loop
das
arpl
imul
sub
or
mov
pusha
movsl
jae
in
dec
push
cmp
jp
jb
mov
psubsw
leave
push
movsb
xor
cmp
xchg
insb
sub
mov
pop
jae
pop
fwait
jb
cs
imul
lods
nop
dec
aas
xchg
orb
jbe
xlat
nop
mov
aam
xchg
lcall
jg
nop
arpl
inc
fcoml
in
outsb
mov
sub
ret
adc
add
jmp
jmp
or
ret
mov
push
push
cmp
in
outsb
or
push
sub
mov
xchg
jmp
aad
out
ret
sti
cmp
jmp
hlt
cwtl
pop
cs
xlat
inc
adc
sahf
cmp
andb
jo
xorl
mov
sti
push
xchg
jecxz
cmpsl
rorl
dec
sub
clc
or
jno
pop
dec
push
jno
xor
pushf
scas
rol
lcall
push
dec
sub
xor
push
repnz
push
imul
push
or
cmp
cltd
push
test
push
add
lock
in
test
cltd
sub
dec
cmpb
mov
iret
cmp
outsb
aam
outsl
mov
cmp
movsl
jb
mov
cmp
jo
cmp
adc
fucomip
cmp
in
sub
xchg
orb
orb
cmp
xor
mov
subb
cld
mov
push
fidivl
hlt
dec
outsb
xchg
jb
xchg
int3
sub
sub
mov
push
mov
rcrl
rolb
lcall
dec
dec
xchg
sbb
out
or
adc
mov
mov
pop
inc
rcrb
gs
xorb
add
mov
shlb
outsb
pop
or
outsb
imul
dec
mov
push
pop
pop
rcrb
bound
mov
adc
outsl
dec
movsl
mov
or
dec
movsb
or
in
dec
aas
rcr
xchg
loop
outsl
inc
fcomp
jnp
dec
push
add
lcall
or
dec
sarl
sbb
lods
or
fisubrl
mov
cmp
lds
inc
fbld
out
and
sbb
sub
lea
sub
scas
sbbl
loope
outsl
out
in
es
or
outsb
pop
mov
lcall
adc
int3
sub
lods
jge
sub
lods
sub
cmp
mov
xchg
vmovsd
push
push
jl
mov
ret
mov
jle
mov
xor
insb
fiaddl
xrelease
pop
cs
xchg
fdivrl
orl
fwait
repz
rcrl
cmpsl
add
fistl
xchg
push
dec
int3
int
nop
and
dec
in
mov
rcrl
push
inc
sub
in
stos
cmp
mov
dec
fcomps
jb
data16
xor
inc
test
lcall
mov
mov
loope
xchg
out
or
mul
dec
push
ret
dec
xchg
in
hlt
insl
push
lret
insl
int3
test
enter
jmp
dec
add
xchg
cs
lds
lods
dec
add
add
jl
push
xchg
data16
and
popa
lcall
push
pop
lods
xor
mov
mov
mov
push
imul
jne
ret
insl
addr16
sub
sub
insl
in
fcompl
repz
pushf
dec
mov
das
pusha
repnz
sbb
dec
xchg
push
gs
call
divl
sub
insl
cmpsb
push
dec
dec
and
addl
mov
imul
adc
shll
mov
lods
jge
ljmp
jg
hlt
mov
into
ffree
enter
int
flds
jmp
xor
add
sub
sarl
mov
rcrb
pop
xor
add
roll
lret
cs
mov
xor
icebp
mov
pop
unpcklps
stc
filds
jmp
in
xchg
jmp
push
add
add
sbb
pop
pop
mov
in
push
inc
cli
pop
inc
jmp
xor
adc
aas
lods
xor
cmc
mov
test
imul
aam
ss
aas
push
sub
add
mov
xchg
addr16
mov
mov
daa
add
lods
repz
fs
arpl
or
pop
test
sbb
and
rcrl
cltd
sub
adc
lods
das
xor
aam
dec
mov
cmpsl
mov
fsubl
js
insb
mov
or
insb
cmpsl
lock
push
mov
sub
int3
into
imul
inc
add
out
add
fisubrs
repz
inc
pusha
cmpsb
int
fbstp
mov
cmp
lock
or
mov
push
jbe
jl
lret
or
lea
imul
test
xlat
nop
out
push
mov
and
clc
arpl
jns
cmp
movsb
dec
mov
divb
fs
xor
jbe
sbb
repnz
gs
cmp
mov
inc
push
and
pushf
out
mov
lods
int
loopne
and
stos
xchg
mov
inc
push
imul
push
push
jae
push
mov
jo
add
adc
test
mov
lea
das
outsb
sbb
dec
popa
push
arpl
adc
leave
je
mov
jno
cltd
jge
pop
test
or
jne
cmp
sub
out
cmp
imul
loopne
xchg
push
push
jne
aaa
push
or
jecxz
lods
push
mov
pop
dec
addr16
lods
pusha
aam
outsb
mov
and
lea
pop
imul
lahf
push
test
jb
and
xchg
sub
cmpsb
pop
push
jae
lock
es
sub
add
push
mov
push
push
inc
popa
loopne
mov
or
addb
int
nop
push
cmp
mov
adc
inc
cmpsb
and
or
sbb
decl
outsl
mov
jg
out
iret
sub
mov
daa
clc
xlat
cwtl
jo
cmp
add
mov
push
sbb
shll
inc
jmp
mov
jnp
pusha
dec
test
jl
or
cmp
das
ljmp
mov
test
jecxz
xchg
xchg
daa
stos
outsl
dec
jne
mov
push
pushf
jl
pop
adc
fnsave
mov
lods
sbb
fnsave
jae
push
and
aam
sub
or
mov
std
stos
pop
or
lock
stos
dec
scas
xchg
mov
pop
xchg
push
jp
stos
es
out
shlb
sub
dec
mov
jge
aad
dec
add
data16
ljmp
cmpsl
inc
adc
enter
jmp
call
and
pop
in
pop
push
data16
and
cmp
outsl
loope
sub
sahf
sub
int3
cld
std
mov
jae
mov
push
and
out
sbb
lahf
inc
icebp
addl
sub
jmp
sbb
outsl
dec
pop
push
jns
test
add
out
xchg
mov
inc
sub
flds
stc
xchg
mov
add
or
lahf
sub
imul
les
jbe
das
es
push
sbb
adc
pop
insl
mov
mov
xchg
loop
lea
jmp
mov
repz
lahf
pusha
popa
gs
lcall
out
dec
outsl
inc
dec
jbe
dec
shrb
inc
dec
ljmp
js
out
add
add
inc
out
dec
mov
imul
pusha
push
mov
xor
scas
pop
jg
mov
dec
lret
push
inc
repz
cmp
adc
jns
jle
in
or
call
or
movsb
repnz
xlat
mov
test
psllq
mov
fwait
in
push
mov
fadd
push
adc
out
jb
pusha
out
fisubrs
lcall
stc
cs
ret
mov
andl
mov
or
sub
imul
lret
test
sub
xor
outsb
inc
xor
imul
out
dec
inc
imul
add
addr16
dec
scas
cwtl
dec
push
add
xchg
jo
rorb
adc
and
in
ds
out
push
ds
fidivl
or
icebp
pop
xchg
push
push
add
mov
in
ljmp
xchg
sbbl
loop
icebp
call
test
dec
mov
pop
mov
andb
or
ror
test
sbb
mul
hlt
lods
movsl
sbb
fs
repnz
fsubr
mov
cwtl
mov
inc
es
cmp
les
fildl
cmp
cmp
and
sarl
sub
push
xchg
jmp
and
insl
and
addb
mov
dec
push
test
std
sub
imul
movsl
rorl
sbb
les
ret
mov
sub
inc
xchg
push
dec
cmp
arpl
movsl
cmc
push
or
cmpsl
mov
push
mov
or
inc
in
mov
add
sub
popa
sub
movsl
cmpsl
fisubl
sub
mov
testl
dec
rorb
movsl
dec
cmpsl
dec
or
sti
addr16
or
js
cmp
insb
xchg
jle
repz
add
or
enter
push
imul
ficoms
xchg
out
pusha
jl
xlat
sub
pushf
int3
sbb
gs
cmp
outsl
push
jl
fsub
scas
mov
lahf
dec
add
lret
arpl
icebp
sub
add
outsl
or
xor
or
push
push
cmp
fiadds
dec
out
lcall
sub
int3
icebp
std
mov
cmpsl
add
inc
imul
adc
sub
lcall
fsubrl
sbb
and
add
add
fimull
jno
dec
add
fnstcw
xor
xchg
lcall
pop
cltd
ficoml
rclb
sbb
xchg
jo
rolb
push
or
lret
or
or
dec
mov
xchg
fcomip
cmp
cmpsl
fisubl
xor
lods
or
insl
mov
ficoml
or
sub
sub
mov
push
inc
lret
xchg
fbstp
cmp
lret
or
outsb
dec
mov
push
push
inc
and
sub
or
add
dec
sbb
push
dec
sub
mov
inc
jbe
in
push
jo
mov
mov
add
mov
lcall
out
push
in
pop
frstor
int3
cltd
ficompl
aam
lcall
aad
sti
pop
movsl
sub
dec
lea
dec
cmp
sbb
lcall
lock
fisubrl
movsl
pop
cmpsb
or
sub
mov
cmpsb
mov
inc
push
sub
rcr
dec
or
adc
stc
gs
push
testl
push
mov
mov
xchg
lcall
sbb
inc
les
xchg
mov
nop
ret
adc
and
pop
or
push
or
loop
xchg
dec
pop
push
xacquire
ljmp
incl
testl
pop
fstpl
cmp
mov
dec
mov
inc
cmp
fiadds
sub
inc
adc
sahf
fbld
xchg
fisubrl
mov
xchg
push
sbb
pop
fisubl
frstor
push
push
jae
xchg
mov
fiaddl
out
cmc
cmp
movsb
lds
or
push
sub
adc
mov
push
mov
push
pop
sbb
inc
or
pop
pop
pop
push
or
mov
jo
push
inc
filds
std
xchg
or
dec
in
arpl
in
pop
pop
movsl
inc
movsb
cmp
outsl
lret
repz
mov
mov
cmp
and
mov
push
cmp
stc
daa
sbb
cmp
data16
inc
in
int3
test
xor
and
imul
fimull
add
and
popa
inc
mov
xchg
sahf
dec
cltd
fistps
and
lret
jmp
je
mov
xor
insb
and
xchg
fcmovbe
pusha
mov
into
mov
cmp
push
sub
cmp
add
fmuls
push
mov
pushf
aam
in
lds
mov
xchg
faddl
std
sbb
mov
lcall
mov
js
mov
jnp
arpl
aaa
insb
call
mov
jns
xchg
mov
fucomip
mov
and
sbb
add
and
pop
xchg
pop
aas
jbe
loop
roll
mov
dec
push
dec
mov
mov
mov
jcxz
les
test
mov
jae
movsb
and
cmp
dec
and
fiadds
cltd
mov
dec
fwait
pop
cmp
or
loop
jns
das
dec
sahf
inc
addb
idivl
sbb
imul
inc
insl
or
inc
cmp
sbb
mov
inc
adc
and
sub
push
jle
mov
pop
mov
or
mov
push
out
inc
fwait
sub
fisubrs
faddp
bound
push
add
jnp,pt
out
fptan
pop
cmp
cmp
dec
sub
cmp
push
dec
push
push
dec
sub
mov
xchg
lcall
pminsw
inc
mov
xchg
push
ret
cmp
pop
iret
or
sub
in
lea
sub
lods
out
insb
push
or
insl
outsb
pop
xchg
push
cs
xchg
lcall
fisubrs
inc
inc
inc
lea
incb
mov
lea
sbb
and
scas
cmpsl
fisubrl
cmp
xchg
lret
mov
loopne
fisubrs
fiaddl
mov
mov
fidivrs
fiaddl
sub
pop
dec
dec
aad
mov
ja
ret
fisubrs
out
inc
mov
xchg
xchg
mov
mov
push
pop
inc
in
in
repz
int
jbe
lds
adc
adc
cmp
sub
mov
jnp
push
fimuls
inc
fdivr
mov
fiadds
push
push
xorl
leave
lea
jge
sbb
imul
scas
xchg
push
fisubrs
int
cmp
mov
mov
xor
cmp
test
daa
push
lcall
mov
push
jne
cs
add
xchg
pop
xchg
or
sub
sub
xchg
sar
test
fisubrs
sub
push
loope
pop
int
sub
sub
jns
jb
loopne
loope
repz
inc
xchg
push
xor
inc
jb
inc
int3
lods
xchg
pop
and
sub
or
sahf
cs
add
dec
cmp
shrl
imul
shl
pusha
inc
or
mov
mov
leave
dec
xor
jb
add
lret
fbld
ret
and
adc
fpatan
or
shrl
ret
fcomps
repz
push
ret
sbbb
loope
inc
mov
push
andb
rolb
and
cmc
mov
ret
jbe
lahf
dec
movsl
inc
mov
xchg
add
cmpsl
movsb
inc
lea
scas
inc
xchg
and
add
inc
into
lahf
loop
out
les
cmpsb
fstp
pop
int
shr
ret
dec
add
mov
xchg
fstpl
cltd
lcall
add
je
push
cmp
inc
xchg
mov
inc
jmp
push
mov
cmp
cmc
add
xor
out
xlat
add
filds
rorl
xchg
jne
ds
loopne
out
mov
push
dec
inc
bound
shlb
jno
dec
movsb
dec
cmc
jnp
pop
push
push
lcall
gs
push
add
jae
push
push
incb
daa
sbb
dec
pusha
loop
shlb
or
imul
push
inc
daa
pop
add
adc
shll
fistps
test
fiaddl
inc
inc
sub
andl
mov
dec
aad
out
inc
out
cmpsl
enter
adc
imul
dec
push
enter
repnz
sub
sahf
pop
adc
sbb
jae
xlat
or
xchg
pop
cmpsl
mov
push
lcall
cmp
cld
daa
ds
les
test
pop
stos
push
iret
sbb
dec
fildll
loope
outsb
jbe
pop
movsl
std
jnp
or
mov
dec
or
loop
out
pop
add
test
xor
inc
mov
pop
inc
inc
jae
aad
adc
lahf
rcrb
push
add
divb
sub
inc
insb
push
pop
orl
sub
shlb
lcall
lret
push
and
clc
inc
or
sbb
and
push
shrb
add
inc
adc
mov
fistpl
xor
jecxz
fst
in
int
cmc
cltd
ret
cmp
adc
push
jo
pop
out
mov
jge
push
jno
mov
lahf
dec
fnstsw
pop
push
int
lock
fimull
enter
sbb
pop
cmp
jno
das
es
add
push
mov
pop
loopne
push
insl
fstp
cmc
xchg
insl
mov
and
dec
les
or
jmp
aas
add
testl
add
push
jl
popf
dec
test
or
fisubrl
test
pop
jmp
movsl
mov
aaa
test
std
dec
sbb
das
or
int3
repz
or
mov
ds
sbb
and
test
pusha
sahf
pop
inc
shrb
jp
aad
inc
xorb
sub
jecxz
mov
in
popf
and
add
or
sbb
xchg
push
sbb
sbb
push
inc
rclb
jmp
cld
jecxz
xchg
int
jg
jbe
imul
outsl
xchg
dec
dec
fnsave
ret
pop
adcl
dec
inc
pushf
or
lock
pop
xchg
dec
mov
push
mov
js
outsb
mov
rcr
mov
pushf
jb
pushf
lea
pop
nop
sub
pop
in
or
or
shrb
rorl
pop
addr16
cmp
ficompl
outsb
adc
xchg
repnz
cmp
xchg
pop
insl
and
dec
ficompl
xchg
mov
sbb
test
pop
repnz
mov
fs
add
inc
loope
aad
jle
lcall
push
repz
mov
push
scas
int3
push
adc
lcall
subl
fisttpll
or
and
cli
sub
rorl
and
push
dec
or
pop
faddl
enter
fucomip
call
int3
fistps
outsb
add
clc
outsb
mov
jp
sub
fistpll
push
xor
mov
repz
or
fbstp
jl
mov
fwait
lock
out
inc
xchg
push
in
adcl
sbb
stc
and
mov
cmc
lcall
shrb
shr
pop
or
jp
cld
fwait
sub
stc
out
fimull
ds
xor
and
pop
or
pop
mov
std
xor
pop
negl
fwait
or
or
jl
and
stos
dec
int3
ja
andl
cmp
sub
cld
outsb
std
jne
push
pop
or
mov
addl
and
pop
push
mov
push
add
mov
in
sub
sbb
sbb
ss
aam
dec
sub
stos
sbb
addr16
push
roll
insb
mov
and
stc
jne
cmp
jl
mov
pop
xchg
fimuls
pop
pop
scas
outsb
sbb
jle
jo
or
or
sub
push
ja
jge
cmp
loopne
or
lcall
icebp
sbb
shr
roll
fimull
jmp
fidivrs
and
int3
mov
fidivrl
mov
xor
adc
idivl
ljmp
push
mov
dec
mov
icebp
fsubr
into
mov
or
adc
ficompl
push
inc
dec
jg
cs
notl
and
xor
cmp
push
xchg
jbe
sub
pop
into
dec
outsl
in
movsl
adcb
lock
adc
lea
or
mov
inc
and
xor
sub
sub
push
outsb
push
push
dec
sub
sysexit
pop
sbb
pop
dec
in
lcall
pop
or
imul
or
clc
xchg
sbb
repnz
push
and
sub
inc
rorl
lahf
fwait
aad
insl
test
leave
jbe
push
cld
into
or
les
repnz
dec
mov
stos
cmp
or
adc
sbb
mov
psubd
repnz
sbb
repz
cmp
mov
jnp
sbb
test
mov
sbb
nop
stos
les
mov
adc
mov
loope
fnstenv
in
lret
or
unpcklps
xchg
cmp
cmp
cmp
leave
roll
sahf
mov
in
mov
insl
test
popa
sbb
ds
and
out
sub
imul
out
rorb
cmp
or
and
cmp
rclb
pop
dec
cmp
ss
dec
aaa
sub
mov
cwtl
repz
cmpsb
mov
out
ja
cld
adc
and
inc
add
jg
mov
inc
fisttpll
push
cltd
les
add
jno
sti
fs
addl
call
sub
pop
sbb
pop
cltd
sbb
mov
jb
mov
add
ds
scas
stos
cmpsb
rcr
xlat
jnp
sub
pop
cmpl
testb
mov
jbe
cmp
into
mov
test
or
adc
fdivs
push
xchg
sub
fidivrs
decl
sbb
ja
shlb
cmpsl
lods
inc
je
pop
adc
data16
outsl
xchg
data16
loopne
fmuls
fdivrs
push
jmp
add
fdiv
data16
mov
push
mov
add
scas
push
mov
je
pop
in
pop
mov
jg
pop
sub
pop
rcll
test
lret
cwtl
insl
lods
call
or
jp
mov
xchg
jg
sahf
adc
lret
and
rolb
or
cwtl
pop
push
push
mov
mov
mov
pop
popl
lds
fsubrs
cwtl
mov
jno
push
cmp
sub
cmp
jmp
sub
pop
xor
sti
push
loopne
sub
mov
push
add
cmp
ljmp
out
lods
cmp
test
cmp
lcall
repz
cmp
data16
sub
mov
and
pushf
pop
and
mov
and
sbb
mov
stc
sub
sbb
out
insb
jo
out
mov
push
fidivs
cmp
pop
xchg
xchg
mov
mov
xchg
dec
sahf
cmp
and
jb
psllq
out
pop
in
pushf
mov
in
or
fcomi
jecxz
push
inc
jp
jns
and
pop
pop
add
imul
mov
sub
or
fsub
sub
sub
or
cmpsb
jb
push
mov
push
and
mov
sub
aam
repz
push
test
push
pop
jns
clc
xchg
xchg
push
das
mov
cmp
ja
mov
or
pusha
popf
mov
xor
cmp
rcrb
xor
xor
push
cld
push
inc
xor
xchg
push
dec
cvttps2pi
xor
xchg
or
clc
and
and
imul
xor
cmp
sti
push
test
ret
jnp
push
adc
repz
push
loope
in
lods
xor
sub
pop
roll
mov
jno
push
popf
lods
push
sub
or
js
pop
push
inc
ret
sbb
push
pop
mov
and
sbb
pop
test
add
jle
dec
push
sub
inc
adc
or
and
mov
rorb
jns
sbb
mov
loope
push
jns
xor
cld
fstl
push
xchg
sub
aad
pop
test
fcmovne
cmp
add
or
jae
icebp
lds
push
fnsave
push
in
nop
xchg
lods
inc
sub
mov
ret
add
jno
xor
dec
insl
xchg
subb
imul
out
insb
jb
jmp
das
dec
in
xor
ffree
jne
xchg
shr
jnp
in
negb
aas
sub
mov
adc
clc
enter
mov
dec
fstpl
or
push
lahf
push
icebp
push
daa
push
imul
push
imul
inc
push
test
imul
push
outsl
lahf
lcall
inc
cld
and
pusha
andl
mov
push
outsb
push
cmp
pusha
clc
int3
sub
pusha
mov
sub
pusha
push
inc
jecxz
sti
cmp
sub
aad
push
adc
cwtl
cli
lods
lcall
mov
and
lcall
std
lahf
jns
cmp
pusha
push
and
fnstsw
dec
mov
push
fstl
mov
push
iret
or
cmp
adc
mov
mov
xchg
inc
filds
inc
cmp
aaa
cmp
add
loop
sub
mov
arpl
sub
shll
add
jb
cmp
mov
insb
insb
dec
inc
adc
mov
cmp
push
cmp
aas
push
fcmovne
cld
dec
pop
aam
adcb
dec
popf
adc
sbb
mov
and
mov
xlat
sbb
mov
cmp
pop
arpl
and
stos
xlat
lcall
sub
lods
loop
enter
nop
les
fisubs
mov
mov
daa
loop
mov
call
insb
adc
push
ds
xor
sahf
adc
das
stc
inc
mov
or
ja
or
adc
daa
push
mov
imul
aam
mov
int3
aam
out
lcall
push
cwtl
iret
stc
push
mov
pop
dec
out
mov
xchg
cmp
out
aad
lea
sbb
xor
pop
xor
mov
data16
push
or
ss
movsl
xor
push
jg
inc
aaa
adc
aaa
roll
or
or
in
xchg
cmc
or
sbb
sbb
test
sbb
sarb
outsb
sbb
iret
push
dec
xchg
sub
jle
int3
push
sub
sbb
or
lcall
sbb
adc
sbb
outsb
mov
inc
sbb
sbb
dec
xor
sub
pusha
sub
shlb
inc
or
cmp
jle
int3
push
sbb
sub
dec
insl
sbb
pop
inc
pop
xchg
cmp
dec
lea
xchg
xchg
lcall
ror
push
mov
cmp
mov
cmp
movsb
shlb
and
push
lods
fistpll
cmp
aas
fwait
mov
cs
mov
lcall
lea
nop
push
das
and
adc
in
outsb
into
xor
rclb
outsl
setp
outsl
sub
insl
sbb
push
sub
mov
rcl
dec
pop
xchg
push
mov
push
push
cmp
and
cmp
outsl
sub
aas
push
mov
sbb
dec
rcll
rclb
shlb
ror
sub
in
scas
jmp
repnz
push
das
shlb
xchg
sub
adc
jns
mov
pop
rolb
je
sbb
sar
into
inc
js
inc
test
push
call
dec
fbstp
add
pop
mov
xchg
xor
pop
add
pop
cmpsl
adc
test
jecxz
mov
dec
mov
cwtl
xchg
cwtl
push
and
adc
sbb
cld
leave
popl
xchg
sub
jge
push
push
stc
pop
xchg
scas
pop
cs
jb
push
adc
test
or
and
lcall
push
sbb
ficoml
pop
shrl
jecxz
xor
out
add
adc
or
adc
adc
or
rorb
dec
adc
inc
push
adc
imulb
mov
adc
out
sbb
push
jl
int3
pushf
mov
imul
sub
xchg
rol
sarl
inc
rorl
jb
popa
or
rcrl
pop
shll
outsb
or
lods
ret
pop
imul
mov
adc
cmp
int3
dec
add
xchg
popa
pop
or
cld
mulb
or
inc
inc
add
clc
jne
push
mov
hlt
neg
push
adc
pop
lcall
inc
popf
sbb
loopne
fwait
xchg
lret
popf
and
in
roll
repnz
sbb
xchg
in
insl
and
push
icebp
mov
push
rclb
mov
pop
bnd
sbb
dec
push
cltd
andb
fisubrs
repnz
sub
or
mov
adc
fists
xlat
push
sub
fists
iret
push
cwtl
inc
push
push
xor
cmc
lcall
sub
add
mov
insb
repnz
dec
sbb
ret
roll
inc
sar
add
pop
daa
out
adc
sub
rol
jecxz
push
jmp
hlt
push
xor
imul
cmp
lret
push
cmp
xor
xor
aam
push
cmp
hlt
popl
nop
xor
xor
mov
sbb
nop
xor
pop
push
xor
ficoml
xorb
adc
imul
xorb
mov
inc
push
and
aas
fwait
push
in
lock
mov
adc
out
push
dec
imul
hlt
xchg
push
sbbb
dec
pop
push
adcb
jbe
push
mov
adc
push
mov
adc
out
sbb
lcall
dec
repnz
fcompl
out
repz
cmp
push
or
push
push
cmp
add
fldl
mov
xchg
inc
cltd
xlat
cmp
mov
push
push
add
shrl
ds
adc
dec
bound
lahf
insb
rcrl
push
sub
lds
jg,pn
mov
inc
adc
out
sbb
cmc
inc
dec
outsl
ret
scas
push
mov
aad
loop
or
fists
push
or
imul
dec
sub
lods
lcall
or
push
or
les
lcall
xchg
stos
mov
add
cli
neg
mov
test
popf
into
sub
pusha
fmuls
sub
cs
mov
lcall
lods
pop
xor
xchg
inc
mov
js
jge
aam
into
cs
sti
es
into
in
dec
cmpsb
sbb
cmp
dec
cwtl
xchg
fisttps
ds
les
and
adc
imul
mov
lcall
test
das
adc
imul
int3
push
fistpl
cmp
rcl
rclb
xchg
loopne
sar
aaa
pop
adc
cmovle
fs
and
cli
imul
xor
xor
sub
pusha
and
std
cmp
fisttps
into
sbb
pop
xchg
sub
sbb
jb
mov
repnz
mov
fs
lcall
or
and
mov
mov
mov
or
lcall
int
inc
int
stos
outsl
icebp
fs
rorl
int
sub
imul
jmp
or
mov
adc
stos
lcall
adc
and
push
in
das
xchg
push
pop
xchg
inc
lea
sbb
ret
sbb
mov
and
adc
imul
mov
lcall
push
imul
mov
lcall
adc
je
into
dec
and
int
imul
lods
enter
sub
setp
cmp
pop
das
int3
push
mov
imul
sti
xor
xor
push
insb
sbb
adc
mov
setp
int3
push
pop
sbb
adc
mov
setp
add
cmp
imul
lds
xchg
inc
push
adc
mov
leave
mov
or
sub
or
int
fdivp
std
xchg
push
mov
aad
sbb
aam
ljmp
xchg
adc
xor
les
mov
push
clc
push
adc
jb
or
rorb
mov
movzwl
lcall
iret
xchg
add
sub
mov
test
sbb
aad
int3
mov
clc
mov
lar
arpl
mov
or
test
xchg
or
int3
jl
fildll
aam
cmpsl
test
sahf
dec
push
mov
pxor
and
sbb
fisttps
lcall
lds
and
and
sahf
mov
jns
xor
push
dec
pop
or
out
stc
jns
sahf
js
mov
dec
sahf
push
or
mov
jns
ficoms
cs
dec
out
sbb
shlb
out
lret
out
sbb
dec
xchg
dec
pushf
dec
les
or
inc
cs
dec
jle
lea
cmc
or
push
or
push
or
mov
mov
int3
ds
jmp
adc
sbb
ret
imul
pop
adc
and
jge
inc
push
insb
stc
pop
adc
test
icebp
or
sahf
lahf
cld
aad
cmp
lods
push
andb
and
pop
mov
lcall
pop
scas
mov
or
adc
fcompl
sub
pop
mov
push
cmp
jecxz
clc
lcall
push
loope
hlt
and
roll
mov
push
jb
mov
ffreep
out
pop
arpl
jb
mov
sbb
inc
shlb
or
cmpsl
test
mov
popf
insb
add
push
sti
dec
es
lods
push
dec
pop
negb
xor
fisttpll
jae
mov
mov
out
push
cmc
movsb
int
pop
arpl
xchg
insl
dec
cmc
xchg
lcall
dec
inc
or
jns
fucomip
scas
sahf
pop
mov
mov
daa
sahf
cmc
fimull
cmp
or
mov
cmp
outsl
adcl
add
pop
mov
mov
int3
rcrb
and
aas
je
mov
pop
adc
lods
outsl
movsl
mov
dec
test
cli
pop
add
xchg
fwait
sbb
sub
mov
shrb
sbb
cmp
aas
fisubrl
mov
sbb
cmp
xchg
insl
sbb
cli
insl
out
test
rcrb
aas
fwait
sub
fsubr
dec
dec
xor
insl
pop
xchg
push
mov
or
xchg
shl
pop
in
ret
ds
add
xchg
shlb
js
insl
pusha
imul
push
les
sbb
nop
mov
sbb
cmp
rcr
movb
jmp
dec
js
adc
sbb
sub
rolb
sub
aas
fwait
stos
cmp
in
dec
into
xor
insl
data16
fwait
mov
mov
push
cmp
push
mov
inc
mov
stc
dec
jg
leave
ret
dec
and
inc
imul
add
sub
aas
shlb
sub
aas
adcl
sub
or
insl
pusha
push
xchg
shrb
jno
ret
fwait
xchg
mov
push
cmp
std
inc
movl
push
cmp
push
insl
sbb
call
jbe
add
pop
lahf
jecxz
xchg
sub
push
int3
add
ret
xchg
je
shr
xor
sahf
fistps
inc
mov
dec
xchg
ljmp
mov
lret
mov
inc
lret
inc
lea
aam
imul
xlat
cmp
jno
push
push
test
or
xor
lds
sarb
loope
xchg
inc
leave
movsb
dec
adc
in
jle
jno
adc
dec
push
sbbb
lea
jge
mov
ret
icebp
mov
movsb
fnsave
inc
imul
inc
adcb
mov
and
in
sbb
pop
and
dec
and
outsb
fsubrs
mov
or
add
aaa
lds
lcall
scas
out
repz
xor
jae
push
fsub
mov
push
lock
mov
xchg
push
fwait
lods
outsb
cmp
inc
frstor
adc
or
int
xchg
pop
sub
imul
inc
push
push
xchg
jmp
sbb
aad
mov
jae
push
subl
pop
mov
jae
and
cmc
cvtdq2ps
mov
push
jo
jle
cmp
jl
inc
test
jae
outsl
mov
pop
dec
xchg
into
lods
aad
dec
decb
jb
mov
and
shrl
dec
arpl
and
xor
jbe
xchg
push
or
mov
adc
lea
cmp
stos
xchg
or
push
bound
enter
push
add
mov
adc
mov
mov
and
sbb
vcvtdq2pd
ss
pop
mov
test
push
lods
lods
lahf
addl
pop
or
jle
push
imul
xchg
inc
push
mov
arpl
and
or
add
cmp
adc
mov
mov
mov
lods
jecxz
rclb
ljmp
or
lock
ja
lods
insl
sub
and
sub
cmpsl
inc
ficompl
xchg
adc
push
sub
push
out
mov
addr16
repz
or
lds
add
pop
dec
insl
mov
jne
mov
fisubl
mov
sbb
push
adc
and
popl
jmp
sub
or
push
out
xlat
sbbb
shlb
fisttpl
decl
or
popa
lcall
faddl
push
aaa
test
test
cmp
sub
push
test
rcrb
in
push
out
xor
lcall
mov
inc
mov
dec
pop
xor
push
push
cmp
xchg
lahf
ficoml
cld
push
cwtl
dec
jge
cmpb
outsl
xchg
test
lea
add
xchg
push
jbe
dec
les
add
fldt
les
shlb
lods
sub
lahf
fisubl
pop
sahf
sahf
xchg
mov
adc
or
out
ret
push
or
test
incl
mov
mov
sbb
int3
lods
inc
push
cmp
inc
nop
cmp
pop
push
scas
inc
sub
add
jae
and
add
lret
subb
jle
int
xchg
inc
int3
lods
lods
push
test
fistpll
mov
xchg
std
sub
rcll
es
xchg
push
xor
cmp
mov
mov
pop
faddl
cmp
cwtl
dec
ret
cltd
cmp
ret
test
ret
test
push
or
rorl
rol
cmp
addl
int3
sub
mov
rorl
sub
dec
xchg
xor
test
int3
sub
inc
inc
sbb
inc
xchg
inc
es
out
push
sub
es
test
push
push
xor
lcall
push
add
imul
add
mov
das
xchg
push
dec
in
dec
fiaddl
jb
ret
push
sbb
cmp
ffreep
cmp
filds
aam
es
ret
mov
mov
or
xor
sub
xchg
push
movsb
mov
movsl
test
mov
sbb
inc
xchg
inc
es
out
push
xor
es
test
push
arpl
lcall
cs
cmp
or
add
shlb
lods
xchg
loopne
pop
faddl
cmp
dec
into
add
pop
int3
sub
rcrl
sbb
cmp
push
fld
es
shrl
rcl
pop
cmpl
subl
aam
push
test
shlb
push
sub
sub
inc
and
inc
aas
shlb
ret
cmp
push
pop
inc
cmp
fwait
inc
inc
adc
lods
mov
hlt
imul
repnz
ja
push
mov
pusha
sub
sahf
xchg
push
fisubl
pop
aaa
cwtl
fcom
fildll
and
cmp
fcmovb
xor
ffreep
cmp
pop
push
faddp
es
shrb
rcl
or
mov
or
cmp
sub
imul
xchg
push
scas
mov
mov
ds
sub
push
subb
andl
roll
cmp
rcrb
push
popa
inc
cmp
fwait
inc
inc
adc
inc
in
push
add
add
outsl
xchg
xor
and
push
pop
add
filds
sub
add
data16
cmp
filds
enter
mov
ret
rorl
mov
ret
rorl
jg
int
xchg
sub
mov
faddl
cmp
jg
dec
pop
jg
push
jg
jbe
or
xchg
cwtl
lods
aas
push
test
roll
aas
cmp
fwait
aas
lret
daa
aas
xchg
dec
xchg
aas
xor
xor
incb
mov
pop
push
pop
and
arpl
out
lcall
xchg
add
mov
mov
inc
fisttpl
bound
adcb
nop
cmp
pop
sahf
mov
push
jle
xchg
pop
push
aas
jle
mov
mov
push
or
jle
pop
jle
inc
mov
imul
ds
or
rolb
icebp
push
ds
fwait
ds
pop
ds
sub
pop
setl
mov
icebp
xchg
push
sar
mov
bound
shrl
std
daa
shl
std
mov
xor
and
std
aas
rolb
inc
cmp
xchg
push
in
mov
inc
mov
mov
xchg
aam
push
or
lcall
in
int
ljmp
sub
cmp
jge
jmp
fistpll
jo
es
cmp
mov
outsl
lea
or
cld
and
inc
cld
pop
mov
out
ret
push
or
cld
push
out
out
inc
cmp
imul
cld
pop
mov
cmc
jb
mov
in
cmpsb
mov
mov
dec
setbe
adc
aam
push
cli
xor
lcall
jmp
jl
dec
push
andb
jbe
jg
sub
jl
sub
lcall
rcll
mov
xchg
push
sbb
xchg
lea
mov
jg
insb
pop
test
xchg
sbb
lcall
mov
lds
jle
fcos
rol
xor
mov
sub
pop
push
inc
mov
mov
xchg
push
stc
xchg
pusha
jae
ficomps
outsl
sahf
jae
fistps
xchg
fildll
lcall
fildll
mov
sub
mov
and
int3
sub
cwtl
sub
jnp
sub
mov
xor
es
dec
lahf
jnp
fstps
nop
mov
cmp
cmpl
pop
outsl
xchg
ret
cs
inc
cld
pop
inc
sbb
cmp
cltd
inc
in
xchg
ds
sub
cli
cwtl
sub
jge
adc
test
rorl
cli
rcll
es
insl
and
lds
xchg
push
mov
xor
fcmovu
inc
movsl
mov
sbbb
jbe
mov
cwtl
sub
jp
sub
sub
rorl
jp
push
fidivrs
pop
jp
and
test
data16
cs
xor
enter
cmp
sub
add
fistpll
sub
cmp
test
stc
test
pop
push
lods
stc
out
stc
fldt
stc
and
pusha
mov
lahf
fcmove
outsl
xchg
pop
push
mov
push
movsb
fsubr
ret
push
or
mov
inc
jne
imul
jns
mov
test
xor
sub
jns
pop
fwait
jns
sub
xlat
xor
aam
push
lods
xor
lcall
daa
pop
int
sub
cmp
sti
cmp
sub
cmp
sub
jnp
dec
or
clc
sarb
data16
xchg
push
jecxz
test
pusha
rorl
enter
cmpb
scas
fidivrl
push
es
cmp
mov
cmp
cli
sub
xor
xor
js
cmp
js
dec
bound
mov
pushw
fdivrs
push
out
aam
dec
xor
insb
les
push
xchg
xor
daa
shrb
mov
fstpt
addr16
cmp
or
jp
mov
sub
sti
jns
sti
int3
sub
sti
in
cmp
pushf
data16
cmpsb
jbe
mov
lahf
adc
xchg
scas
fisubrl
das
mov
or
mov
sub
mov
aas
rcl
mov
sarb
cmp
xchg
sub
sarb
in
ja
dec
addr16
shrl
aam
push
push
mov
push
push
xchg
and
aaa
out
xchg
push
xor
aaa
mov
push
lods
aaa
out
inc
add
imul
aaa
pop
mov
xchg
test
ss
push
jo
cmp
fwait
divb
xor
aam
or
je
rcrb
loope
mov
test
xor
in
or
mov
sub
mov
aas
rcr
mov
sarb
mov
aas
jbe
mov
jbe
or
jbe
jecxz
data16
mov
sub
pop
sahf
push
xchg
mov
adc
or
pop
out
ret
push
or
ss
mov
out
inc
cmp
loope
push
lcall
sbb
int3
sub
cmc
in
jne
cmp
fwait
cmc
mov
dec
pcmpgtw
mov
lcall
adc
cmp
mov
cmp
mov
xor
mov
test
mov
dec
cmp
sbb
jnp
cmp
xchg
sti
jne
dec
jno
xor
aam
sub
aam
push
and
jae
and
pop
faddl
cmp
cwtl
dec
mov
int
iret
js
sub
xor
call
movsb
imul
hlt
rcll
es
insl
and
xchg
push
push
pusha
out
lahf
xchg
pop
fcompl
xchg
mov
mov
sarb
mov
cmp
ja
sbb
out
ret
cltd
in
loopne
and
push
and
sti
das
xchg
fsts
fiadds
cmp
inc
jno
sub
movsb
cmp
inc
lcall
add
int
leave
xor
cmp
inc
sub
or
je
push
nop
sub
add
xor
mov
notl
adc
call
xlat
push
mov
hlt
lods
lret
insl
and
leave
rolb
and
rcrb
fbld
lods
or
int3
int3
adc
mov
cld
pop
adc
lret
das
inc
stc
in
insl
jb
mov
add
jmp
and
lods
pop
inc
mov
leave
shlb
fcoml
dec
jae
lds
aad
insl
sub
jae
fdecstp
lcall
mov
jae
stc
lods
mov
lcall
mov
dec
mov
lahf
pop
push
inc
loope
outsb
outsl
pop
call
push
iret
pop
sbb
and
aad
mov
xor
or
xor
inc
push
divb
or
push
das
xor
mov
movsl
insb
xor
sbb
inc
rorl
xor
outsb
xor
inc
repnz
addr16
int3
sub
inc
pop
nop
sub
cmpsl
lcall
xchg
sub
movb
daa
shl
mov
mov
imul
sub
sbb
into
pop
lcall
cmp
push
push
out
lcall
and
xchg
rclb
xchg
or
mov
mov
and
xor
push
mov
add
pop
xor
or
lcall
inc
addb
rolb
icebp
or
or
clc
icebp
dec
inc
ret
sub
push
fnstcw
rclb
aam
ret
push
or
mov
push
test
test
xchg
insl
sbb
lcall
sub
mov
lea
jno,pn
push
ljmp
xchg
push
xchg
out
in
xor
cli
xor
adc
xor
sbb
aam
mov
ss
or
std
clc
sbb
or
xchg
mov
ret
mov
xor
add
test
icebp
fistpll
pop
mov
xor
lock
xor
mov
sub
adc
push
push
lock
push
xchg
pop
xchg
data16
insb
inc
add
repnz
sbb
nop
ret
push
sbb
or
mov
lcall
pop
mov
adcb
dec
pop
lahf
fwait
loopne
test
fucomp
dec
shlb
insl
data16
inc
fwait
xor
je
push
cmp
in
out
sti
adc
ret
push
and
sub
insl
popf
outsb
mov
imul
movsb
rclb
fildll
dec
mov
cmp
movsb
shl
and
xor
push
xchg
or
fbstp
aas
shlb
lahf
fbstp
sahf
cmp
in
or
push
test
fistpll
sub
aas
fwait
xor
jge
dec
push
xor
out
inc
fldl
or
inc
and
das
outsl
repnz
inc
js
lea
out
add
mov
icebp
andb
lea
out
mov
lods
in
inc
mov
out
int3
sub
scas
imul
scas
mov
in
in
loop
int
call
scas
sbbb
andb
pop
xor
xchg
dec
jp
xchg
xor
loopne
jae
outsb
xor
xchg
aas
fwait
pushf
cmp
in
or
push
test
fists
sub
fwait
das
cmp
in
dec
push
xor
insl
push
xchg
push
mov
in
xor
xor
insl
pop
xchg
rorb
pop
adc
ret
push
ja
or
out
cld
pop
inc
sub
lock
lods
aas
xlat
mov
dec
repz
mov
insl
shrl
xor
insl
shrl
inc
loope
mov
push
insl
sbb
sub
fwait
hlt
cmp
push
sub
sbb
push
and
imul
mov
dec
fidivs
insl
data16
xchg
push
push
cmp
sub
lcall
repz
lods
lret
or
out
inc
lock
les
jle
cmp
insb
nop
cmp
pop
sahf
test
mov
adc
adc
jbe
sbb
and
fimull
add
js
sub
cmp
or
dec
test
sbbl
push
inc
cmp
out
ret
push
or
out
imul
out
aas
push
arpl
sub
in
sub
out
and
shr
ret
cltd
sahf
lret
inc
stos
xchg
pop
xor
fcmove
inc
mov
lea
sub
sub
fisubrl
int3
into
test
mov
imul
sub
mov
fdiv
cli
mull
outsb
cmp
imul
push
push
or
imul
xor
push
xor
rcrl
pop
dec
sarl
sub
fildll
in
dec
fldt
rcrl
or
ljmp
or
and
cs
and
lret
int
cmp
ljmp
stos
int
cwtl
in
int3
sub
stos
aad
adc
and
cltd
lcall
or
je
jp
add
fildll
lock
cmp
push
push
cwtl
push
pop
imul
sub
xchg
push
inc
sub
mov
fimull
out
icebp
pop
sub
mov
int3
sub
aad
sbb
ret
or
jmp
lods
xchg
lahf
fisubl
das
popf
stc
push
dec
or
jb
jmp
lods
push
push
scas
int3
or
mov
sub
add
addb
add
hlt
shrb
jo
out
mov
mov
xor
ret
push
dec
enter
inc
lods
push
mov
movsb
cmp
jns
loopne
fsubl
fbstp
dec
push
call
imul
xor
mov
sbb
fistps
jecxz
leave
pop
inc
cmpsb
mov
movl
add
mov
sub
add
dec
mov
enter
negl
or
leave
and
mov
insl
xor
scas
loopne
clc
ret
cmc
test
outsl
sbb
xor
sbb
add
or
addr16
or
sub
out
adc
aad
fdivrl
lods
push
mov
jmp
push
call
aad
sbb
push
leave
stos
jno
outsb
nop
push
mov
and
cmp
pop
or
or
adc
insb
lcall
pop
pop
icebp
jae
adc
jb
addr16
lahf
mov
pop
out
pop
inc
pop
stos
sbb
add
mov
pop
mov
lcall
inc
jnp
jp
insb
xor
enter
jae
adc
sbb
das
and
or
jae
ds
lcall
push
xchg
jae
cltd
or
and
sub
rcrl
and
dec
sub
sub
pop
jmp
mov
aam
mov
inc
sub
mov
imul
inc
lds
push
cmp
or
xor
jmp
lods
lods
scas
xlat
sub
xchg
inc
xchg
xor
inc
mov
mov
and
mov
jmp
mov
or
ret
push
and
sbb
inc
inc
cmpsl
nop
mov
sbb
test
cmp
insl
sbb
in
movb
shrl
addr16
dec
ret
fcomp
pop
movntps
addr16
dec
iret
jne
orl
dec
ss
les
mov
cmp
les
cmp
sub
jbe
nop
cmp
adc
push
or
out
lcall
loope
sub
out
ret
xchg
jl
enter
shl
daa
xchg
dec
out
jmp
xchg
jne
das
or
sub
loopne
pop
nop
sub
add
add
int
xchg
cmp
inc
ljmp
ret
dec
sbb
dec
shrl
es
mov
lods
mov
es
movsb
rcl
and
test
cmp
aas
in
cmpb
lcall
gs
push
ret
or
in
rcl
in
in
xchg
push
int3
xchg
and
das
push
jmp
or
movsl
xchg
shrl
movsl
fsubrs
jo
into
enter
movsl
data16
es
imul
call
repnz
lcall
sub
fimull
out
mov
pop
push
lods
push
xor
sbb
int
rcrb
imul
mov
mov
fisubl
push
cmp
or
and
ljmp
in
fistpll
sub
aas
fwait
pop
cmp
test
ffreep
sub
aas
fwait
icebp
cmp
in
dec
adc
mov
out
movsb
dec
test
xor
cwtl
push
mov
mov
pop
fs
popf
in
mov
roll
xchg
loopne
mov
ljmp
inc
adc
sub
add
cmpb
cmp
push
lcall
test
test
pop
js
sahf
out
sub
out
sub
inc
mov
sub
mov
adc
cmp
fisubl
cmp
sub
mov
mov
arpl
in
in
mov
push
scas
arpl
sub
jae
pusha
push
bound
mov
test
push
inc
inc
or
and
lcall
xchg
data16
and
push
and
jecxz
push
pop
and
aad
and
pop
inc
pushf
xchg
cmp
mov
inc
mov
xchg
push
in
jb
imul
loop
rcrb
lds
int3
loop
lcall
xchg
in
mov
out
push
sub
push
and
cmp
pop
sahf
xchg
xchg
mov
adc
es
in
push
insb
xor
lcall
jmp
bound
fisubl
or
jmp
and
gs
sub
cwtl
sub
and
push
out
push
out
imul
mov
outsl
xchg
roll
fs
or
loope
shlb
sub
loope
xchg
dec
jb
push
loope
lcall
jno
mov
scas
les
mov
stc
repz
loopne
mov
cmp
test
sub
mov
ret
push
stc
pop
inc
cmp
inc
enter
negl
add
inc
lods
dec
imul
sbb
fnstcw
cltd
stc
cmpsl
add
stc
push
inc
ds
arpl
adc
push
sub
popa
add
push
mov
push
fstp
mov
inc
mov
push
inc
loope
ret
mov
xor
jmp
outsl
fildll
rcrb
and
cmp
adc
and
inc
loope
jb
and
inc
sub
xchg
ja
pop
in
test
or
movsb
fwait
movsb
push
shl
mov
enter
aad
jb
jbe
jnp
pop
fcoms
xchg
add
push
sahf
jb
aas
test
cs
ret
and
push
in
dec
jb
aas
cmpsb
inc
rsqrtps
push
cld
subb
sbb
into
insl
aad
jb
push
in
mov
mov
pop
stc
ret
rol
push
mov
lods
mov
insl
sub
test
xlat
mov
insl
sub
ret
test
lahf
aas
loopne
loope
fwait
jmp
add
dec
or
insl
data16
jp
and
xor
insl
out
cmc
xchg
push
movb
int
sub
jecxz,pt
inc
int3
cmc
rorb
in
or
jb
jecxz
sahf
xchg
repz
sbb
add
sub
lahf
daa
sarb
or
dec
inc
shrl
fsubrs
push
add
int3
cmp
popa
dec
push
xor
int
clc
pop
cwtl
dec
jae
or
lcall
sbb
cs
mov
imul
pop
dec
inc
pop
sub
fiaddl
dec
addr16
or
jne
sbb
sbb
sub
fiaddl
xor
pushf
sub
xor
fiaddl
sub
movsb
mov
nop
sub
add
cmpb
movsb
cmp
inc
loope
sub
add
cmc
orb
sub
add
xorb
jp
movsb
cmp
inc
popf
nop
sub
add
add
int
int3
test
lahf
popa
and
mov
dec
pop
mov
cwtl
mov
pop
xor
call
xor
rolb
pushw
fnstsw
mov
fnsave
sub
pop
aam
pop
sub
push
fldl
sub
fstp
cmp
cmc
and
mov
aaa
and
fildll
loope
sub
push
add
in
mov
outsb
nop
sub
cmp
inc
xchg
nop
sub
add
addb
int
sbb
sub
rol
push
dec
pop
mov
add
mov
fdivrl
xchg
in
dec
out
mov
in
dec
sysenter
adc
insl
clc
push
add
jle
insl
pusha
push
xchg
shlb
nop
sbb
dec
adc
cmp
xchg
inc
pop
nop
sub
add
addb
dec
lcall
jg
sbb
pop
mov
lahf
mov
dec
fistpll
and
stos
push
dec
mov
shlb
and
daa
sub
fldenv
fwait
xor
xor
out
sbb
dec
fsts
test
inc
inc
int3
test
ret
pop
cmp
insb
inc
dec
popa
jle
out
inc
enter
in
cmovb
mov
incl
mov
fidivrs
pop
lcall
adc
mov
mov
lcall
hlt
sub
aas
stc
inc
pop
and
add
mov
mov
inc
jl
sub
add
push
movsl
or
mov
ret
mov
push
adc
fidivrl
push
int3
sbb
sbb
les
mov
sahf
inc
fistl
arpl
jnp
out
test
inc
int3
ja
bound
inc
push
inc
ja
repnz
fidivl
mov
push
cmpsl
push
mov
sub
sub
dec
scas
push
sub
sbb
adc
jl
ficomps
mov
inc
mov
adc
jo
ret
dec
stos
addl
and
lcall
sbb
add
pushf
loope
pop
cmp
and
lea
push
xchg
sbb
sti
das
and
cmp
pop
rorl
cmp
rcrb
pop
shrl
mov
testl
jl
imull
add
pop
pusha
inc
inc
lea
aas
sbb
ljmp
sarl
cmp
loop
rcrl
xlat
sub
test
in
sbb
push
inc
jns
mov
sbb
mov
imul
mov
lahf
rclb
out
mov
jae
imul
xchg
fxch
add
imul
cltd
or
cltd
inc
fwait
cltd
insl
adc
cltd
shl
ss
rorl
pop
or
pop
inc
sub
pop
out
mov
mov
adc
out
lcall
dec
sbb
sub
sub
sbb
sub
sbb
or
cltd
push
stos
rorl
pop
mov
fcmovu
jbe
fcoms
cmp
cwtl
dec
fcmovnu
adc
xchg
push
rcr
inc
jp
int3
sub
cwtl
subb
xor
insl
cmp
sub
int3
or
lcall
dec
pop
stc
sub
pop
push
jnp
es
sbb
mov
rcrb
daa
push
pushf
sbb
sbb
cs
ret
mov
sub
fcmovne
sub
jns
aad
push
or
fninit
outsb
incl
xchg
mov
xchg
lea
mov
movsb
sub
aam
pop
xchg
cltd
push
std
cmp
xor
fwait
shl
aad
sub
dec
mov
mov
jb
push
xchg
dec
pop
push
sbbb
cmp
push
std
dec
push
les
cli
pop
cwtl
jbe
pop
shrl
clc
mov
stc
sub
aad
mov
nop
or
fwait
js
mov
mov
jnp
cmpsl
shlb
xchg
inc
pop
xchg
in
cs
xor
jae
inc
shr
push
int3
lods
push
fidivrs
inc
lock
in
sub
push
ds
push
imul
push
or
push
inc
inc
ja
jb
push
mov
dec
mov
and
int
rcl
pop
cmpsb
mov
jbe
aad
jb
cmp
cmp
dec
out
aad
cmp
sub
fcmovbe
jbe
aad
sub
addb
xor
inc
aaa
int
mov
lret
aad
or
lcall
dec
and
test
inc
ss
mov
jb
push
adc
xor
stc
into
shl
ret
jns
enter
adc
add
inc
insl
cltd
push
testl
jmp
cmpsb
xor
loop
mov
adc
imul
jge
xchg
pop
scas
push
bound
nop
dec
clc
add
cmpsb
mov
inc
sub
inc
imulb
xchg
jbe
repz
cmc
and
aam
jb
inc
ljmp
and
imul
into
lea
jbe
jbe
jg
xchg
jb
xchg
mov
xchg
lahf
push
loopne
ds
xchg
imul
push
out
mov
push
out
std
pop
shrl
mov
xchg
mov
push
fdiv
push
and
xchg
inc
sbb
inc
push
push
lea
int3
push
sub
fists
les
push
aas
adc
cmp
adc
sti
mov
inc
mov
xchg
adc
mov
add
insl
and
out
or
int3
inc
or
or
adc
fidivl
cmp
dec
jmp
xchg
outsb
cmp
scas
and
rcll
push
out
mov
add
imul
xorb
test
mov
enter
int
xlat
xchg
lods
sti
add
and
fnsave
mov
mov
inc
adc
popf
or
pop
rol
jne
ja
loop
andl
fsts
adc
push
dec
push
out
mov
cmp
pop
lcall
insl
adc
push
imul
loope
and
sarb
out
in
rolb
jno
pop
or
int3
sub
and
xor
fisubl
push
push
xchg
sbb
lea
adc
movsl
sub
sub
mov
push
call
notb
or
push
jo
ret
in
and
push
ror
or
int3
pushl
cmp
fisubrs
fwait
jno
sahf
sub
and
inc
mov
adc
imul
adc
int3
int
inc
int3
sub
dec
mov
jl
loopne
inc
movsl
shll
inc
outsl
or
mov
aad
push
pop
rclb
jne
push
inc
mov
pop
xchg
or
addb
sbb
add
add
mov
sub
fs
in
pushf
mov
push
fnsave
mov
adc
xorb
addb
xor
pop
lcall
or
imul
cmp
imul
or
out
inc
jo
push
dec
call
repz
jbe
das
mov
mov
mov
pop
push
xchg
sbb
fiaddl
mov
dec
fs
and
cmp
xor
jne
cmc
push
jb
popf
rcrb
dec
fcmovbe
jb
icebp
nop
jb
nop
mov
sarb
mov
cmpsl
sahf
or
shl
pop
jecxz
xor
fcoml
mov
ret
popa
out
ds
imul
push
inc
jns
mov
jbe
sub
push
and
pop
push
sub
push
push
outsl
int3
data16
int3
imul
add
xchg
sub
mov
cld
or
adc
add
adcb
rclb
mov
cmp
lcall
jecxz
aam
inc
adc
rcll
xchg
rorl
dec
mov
repnz
fldcw
in
lcall
mov
fimull
jbe
dec
sarl
inc
movsl
xchg
push
jl
cmc
rcrb
movsb
push
sub
mov
cmp
popa
dec
fiadds
inc
sets
wbinvd
jp
xorb
lret
add
pop
nop
sub
cmpsl
lcall
push
jl
out
ret
add
pop
data16
movsl
insl
sbb
into
nop
sub
add
cmpb
int
mov
shlb
fbstp
loop
nop
int
sub
add
xchg
sbb
mov
scas
dec
out
lcall
jge
es
dec
out
push
rorb
data16
jne
in
sub
push
and
jg
xorl
icebp
pop
adc
jno
pop
fimull
jb
push
xchg
mov
jmp
int
push
jge
cmp
imul
int
testb
inc
sub
enter
push
outsb
pop
or
mov
ficoml
ror
xchg
push
dec
int
xchg
ds
dec
or
lea
sar
lea
push
and
out
lcall
xchg
nop
rorb
imul
push
jle
cmp
fwait
dec
jbe
in
rcll
pop
sub
fnstenv
es
dec
in
cs
xor
jae
mov
push
xor
ret
push
or
or
inc
add
imul
or
dec
lcall
les
dec
fbstp
dec
scas
int3
cmp
lcall
into
out
pop
aad
aad
loope,pt
cmp
mov
mov
mov
int
and
mov
push
popa
mov
push
mov
sub
mov
rcl
mov
shrb
inc
lcall
cmc
dec
cmp
shll
pop
push
mov
outsl
dec
movsbl
mov
test
pop
btr
dec
js
dec
movsb
cwtl
into
push
or
or
movsl
push
inc
mov
loopne
shrl
jecxz
and
popa
jbe
xchg
mov
push
xlat
or
dec
or
inc
mov
iret
push
lcall
ret
rorl
iret
dec
frstor
pop
lea
stc
push
jle
or
jb
mov
popf
cmp
into
xchg
push
sub
cmp
lcall
dec
loop
xor
ret
dec
out
popf
pop
push
ljmp
cmp
xchg
jb
dec
int3
sub
dec
aad
gs
sub
sarb
push
mov
pusha
xor
add
leave
pop
incb
add
sahf
and
or
push
xlat
outsb
push
jmp
mov
xor
mov
push
aad
add
fisttps
xor
mov
ja
lahf
mov
lret
pop
mov
dec
mov
mov
push
and
lock
pop
orb
test
lcall
dec
push
aam
push
lock
movsl
xchg
neg
jge
orl
push
cmp
adc
enter
cld
iret
add
movsb
lcall
jae
sbb
and
arpl
lea
lock
insb
or
xchg
ss
pop
int
popw
mov
popa
push
lret
xor
inc
dec
xor
add
mov
ret
sub
sahf
jp
and
orb
dec
xor
fwait
sbb
es
cmp
orb
lods
push
cmp
dec
and
mov
mov
mov
int3
or
add
enter
and
dec
jne
xchg
lret
xor
push
fdivl
push
fimuls
sbb
lea
cli
leave
push
dec
xchg
or
or
push
or
push
inc
cs
cmp
and
or
mov
pop
adc
sbb
sub
mov
sbb
jmp
out
scas
add
dec
adc
mov
cmp
fsubr
decl
xlat
fsqrt
jecxz
cwtl
ljmp
jmp
lret
jle
sbb
push
rolb
fcmove
mov
xchg
adc
daa
and
mov
cmovne
mov
or
xchg
movsb
arpl
into
nop
xor
mov
ja
xor
repnz
jp
or
dec
adc
dec
push
sub
arpl
cs
ja
cmp
xor
or
repnz
test
or
fisttpl
push
or
pushf
outsl
lds
xor
iret
orl
push
jg
or
cmp
push
pusha
pop
dec
dec
adc
shll
in
pop
push
xchg
dec
in
sub
packssdw
int3
cltd
cmp
jmp
lods
adc
movsb
int
xchg
add
ret
jl
pop
and
repnz
and
xlat
dec
mov
xor
mov
fucomip
jmp
lock
outsb
jmp
pop
push
pop
xor
imulb
sbb
xchg
stc
lods
loop
sub
add
daa
sbb
dec
pop
loope
sti
andl
insb
into
or
daa
nop
stos
xchg
rcrb
cmp
jecxz
lea
test
mov
mov
and
out
daa
xchg
fwait
sbb
mov
fimuls
js
mov
mov
pop
push
dec
cmp
mov
mov
subl
push
push
adc
adc
xlat
aaa
repnz
push
cmp
sub
add
dec
xchg
xor
aaa
push
cmp
add
mov
mov
test
push
or
mov
test
popa
or
filds
sub
sub
adc
je
mov
or
inc
fcompl
dec
or
shlb
inc
ds
frstor
xor
nop
loope
jl
cli
fmulp
pop
mov
cltd
pop
sub
adc
andl
orl
out
aaa
lea
iret
xor
inc
les
int3
or
rol
adc
ljmp
jae
jns
sbb
adc
or
push
dec
add
pop
sbb
push
cli
notl
pop
mov
rcrb
mov
xchg
adc
imul
dec
dec
lret
stos
lods
jl
xor
stos
xlat
add
xchg
push
adc
adc
insl
ljmp
cwtl
mov
adc
inc
xor
stos
stos
mov
notb
ss
jecxz
push
dec
mov
and
pop
loope
fwait
ds
xchg
iret
mov
lock
cli
js
jo
jp
pushf
pop
out
fwait
cmpsb
add
and
sarb
lods
jecxz
jge
xchg
addr16
dec
hlt
or
fistps
daa
push
in
sbb
adc
push
push
into
sbb
sub
or
dec
pusha
ror
dec
cmp
pop
push
jp
ds
dec
push
leave
add
insb
mov
add
or
mov
pop
jmp
xor
fmull
enter
lcall
lahf
nop
cli
jne
mov
mov
imul
lret
push
fwait
mov
pop
or
mov
adc
xor
mov
xchg
scas
nop
jmp
cmp
pop
shlb
push
or
inc
cmp
inc
or
pop
sub
jecxz
pop
add
and
xor
aam
fisttps
lret
in
rcrb
das
adc
or
sbbb
aad
push
lret
outsl
jp
fadds
dec
imul
or
push
push
and
stos
xchg
ret
mov
imul
aam
lret
add
xor
aas
into
mov
xor
mov
cmpsl
dec
ljmp
adc
sbb
sub
jp
adc
adc
sbb
aam
das
mov
push
scas
sub
xor
mov
shll
adc
sahf
mov
lods
or
or
shll
decb
adc
pop
sbbl
mov
push
mov
and
pop
call
inc
dec
pushf
or
mov
sbb
iret
sub
lret
inc
sarb
adc
mov
add
fwait
aaa
psubd
shlb
sahf
adc
xchg
fadds
addr16
xchg
test
pop
mov
les
aam
adc
add
pop
mov
or
add
in
push
mov
imull
pop
lret
ss
fcoml
shrb
int
xor
das
xchg
lcall
or
xchg
lret
sub
lret
stc
nop
addr16
les
out
sahf
pop
add
sbb
mov
cwtl
xlat
sahf
pcmpeqw
int3
adc
push
xlat
dec
std
addr16
lret
dec
ds
mov
dec
sub
mov
cmp
xchg
daa
dec
cmpsl
lods
dec
sub
mov
lock
push
aaa
sub
adc
stos
jbe
test
es
rclb
dec
jbe
or
dec
push
cld
lahf
xchg
jp
dec
and
mov
addr16
and
ljmp
pop
and
fwait
or
push
adc
mov
loop
mov
out
mov
cmp
fcoms
je
lcall
scas
out
pop
int
mov
lods
pop
mov
dec
xchg
insb
cltd
daa
movsb
sti
mov
jmp
test
pop
int
test
pop
sbb
add
sub
insb
mov
test
and
je
adc
unpcklps
arpl
push
adc
jmp
inc
adcl
cli
add
popa
rorb
test
or
daa
and
add
adc
push
sub
lods
mov
add
xor
bswap
stc
pop
pop
fistl
aam
pop
mov
lret
lods
xchg
add
fwait
arpl
cmpsb
stos
pop
mov
andb
jle
adc
xor
xor
push
mov
pusha
cs
xchg
sbb
add
jb
es
jae
and
adc
lods
lret
or
adc
adc
adc
push
insb
mov
add
sbb
adc
mov
rcr
xor
out
push
jl
lea
mov
adc
or
sbb
xchg
lret
sbb
cpuid
flds
int
sahf
sbb
xor
sub
pop
mov
shrl
inc
xchg
mov
xchg
mov
jne
int
aam
mov
addr16
mov
in
xchg
mov
insl
push
xchg
dec
mov
aam
iret
sbb
out
ds
add
lahf
xor
or
insl
fwait
ds
pop
popa
fisubs
push
je
jp
lret
xchg
sbb
sbbb
sub
inc
hlt
add
xchg
cs
loope
mov
shlb
adc
dec
outsb
push
lahf
push
lock
and
push
mov
adc
rcl
sbbb
sti
fiadds
sahf
add
aas
sbb
push
hlt
xchg
mov
mov
sub
sbb
jo
mov
and
fwait
nop
push
sbb
inc
pop
jg
or
mov
xor
push
adc
aam
xchg
les
inc
inc
fldt
jne
and
jae
orb
xchg
rolb
andb
push
arpl
adc
std
mov
pusha
adc
pop
mov
xor
movsb
leave
and
fldenv
fstl
jb
jmp
xchg
insb
push
push
xchg
add
test
or
insl
ds
cltd
cmp
orl
pop
mov
lods
xchg
data16
sbb
lret
into
sub
leave
fisubrl
mov
cmp
dec
add
iret
addr16
sbb
ljmp
xchg
or
add
xchg
adcl
adc
lods
and
sbb
push
jge
mov
prefetch
dec
or
int3
ds
and
sbb
adc
daa
push
sbb
rcrl
les
adc
cmp
pusha
test
pop
mov
mov
loope
push
das
dec
mov
jo
pop
lcall
roll
popf
dec
mov
push
sti
or
and
or
fwait
les
xchg
mov
stc
movsb
mov
outsb
fistps
xchg
adc
rcl
shrb
jmp
jo
rcrl
adc
iret
lods
add
jb
push
xchg
fldenv
scas
jecxz
sub
pop
je
pop
push
add
mov
mov
aam
fstps
dec
leave
fdivrs
arpl
jnp
sbb
adc
lret
dec
fs
loope
adc
scas
into
mov
rcrl
adc
insb
pop
fiaddl
sbb
stos
cmp
inc
imul
jnp
icebp
cmp
dec
sbb
push
sarb
aam
fsubs
push
sbb
sub
or
int3
push
jno
add
rorb
adc
adc
dec
mov
stos
gs
or
xchg
mov
js
xor
loopne
das
and
mov
and
inc
adc
push
mov
jmp
mov
stos
prefetch
stc
xchg
mov
sarb
pop
adc
mov
outsl
push
mov
mov
aaa
clc
sbb
sbb
cmpsb
outsb
call
leave
js
sbb
aas
leave
int
pop
mov
dec
scas
es
push
sub
sti
cmp
xchg
push
mov
push
inc
xor
xchg
adc
xchg
push
add
mov
pop
push
sub
jecxz
jp
adc
aad
lret
inc
fcomp
inc
fidivrl
sub
cld
adc
dec
bound
pop
popf
push
xor
mov
jge
fcomip
push
adc
lret
sbbl
sahf
sub
jg
adc
leave
push
rcr
sbb
jns
mov
les
adc
aam
dec
into
data16
push
cltd
push
and
popf
mov
rcll
es
pop
adc
mov
dec
xlat
jl
mov
pushf
les
mov
shlb
mov
adc
jae
mov
fld
imul
or
push
pop
repz
and
xchg
adc
cli
xchg
cmp
mov
adc
mov
out
or
sahf
or
or
push
mov
xor
push
js
jne
inc
sbb
scas
sbb
push
adc
xchg
insl
dec
aas
mov
adc
xchg
xor
fiadds
xor
in
cli
adc
and
lods
cld
aam
cmp
inc
pop
fsubl
nop
mov
jae
sahf
sub
ret
sub
mov
daa
push
xchg
mov
dec
lods
fdivrl
adc
nop
ja
mov
and
es
rcr
repz
jl
outsl
adc
or
jp
mov
cmp
jl
push
lahf
test
push
dec
fwait
xchg
loopne
sub
pop
mov
and
sbb
int3
insl
sub
inc
inc
sub
push
mov
xor
push
lock
mov
xchg
lock
out
fisubrs
pavgw
in
sub
push
sbb
add
inc
dec
adc
push
lods
sar
push
push
dec
push
cmp
in
xchg
jecxz
mov
inc
data16
mov
les
fsubs
pop
dec
enter
sbb
add
dec
addr16
push
xchg
push
mov
ss
sub
mov
mov
and
hlt
jmp
sbb
push
cwtl
rcrl
movb
dec
test
sbb
sbb
cmc
lahf
notb
adc
ds
fstpt
adc
ja
pop
cs
hlt
mov
sbb
push
loopne
inc
mov
sbb
push
sub
or
dec
inc
mov
shrl
dec
mov
ret
jno
mov
pop
and
rorb
mov
dec
mov
popf
jbe
sbb
mov
pop
sbb
or
lret
sar
xor
mov
push
popf
xchg
test
push
mov
push
xchg
pop
or
cmpsb
int3
dec
lret
les
test
inc
stos
mov
dec
mov
movsb
push
xchg
lret
inc
pop
push
aaa
mov
aam
cmp
and
xor
cli
daa
adc
cmpsl
jl
and
dec
xchg
adc
outsb
sub
sbb
inc
push
jl
mov
inc
xorb
push
sbb
ret
mov
rcrb
psubusb
loope
cmp
leave
mov
out
mov
sbb
push
insl
pop
gs
push
adc
aam
lcall
sti
jb
or
fmul
mov
imul
mov
push
mov
push
lret
push
fdivr
addr16
push
out
inc
or
sub
cmp
jle
pop
cmpsb
sub
daa
js
insb
fs
setne
lock
add
or
addr16
or
lahf
fisttpll
and
pop
sbb
sbb
or
shrl
fldcw
mov
push
adc
mov
std
popa
push
or
or
and
adc
lea
insb
dec
test
or
es
sahf
xor
je
les
inc
push
mov
cmp
mov
adc
lahf
lea
adc
mov
sub
adc
jne
adc
test
pop
add
add
mov
jp
jecxz
jno
test
scas
ret
jbe
dec
insb
cmpsb
or
fcoms
leave
add
xchg
adc
pop
adc
ret
jbe
inc
push
jbe
or
xchg
ret
push
push
dec
je
fisttpll
xchg
inc
push
mov
pop
sub
cmp
pop
clc
add
or
xlat
nop
ficomps
pop
mov
into
dec
pop
lcall
shrb
or
sahf
and
mov
lret
dec
sbb
and
inc
mov
mov
push
push
js
sub
mov
dec
rorb
inc
adc
dec
cmp
arpl
andb
pop
fcmovb
push
pop
push
addr16
push
in
mov
das
dec
fnstsw
shrl
sahf
mov
int
xchg
add
daa
or
sbb
cmpsb
shl
jnp
jl
mov
inc
ss
mov
fwait
sbb
sub
cli
stos
cmpsl
sub
and
insl
mov
add
mov
dec
fsts
adc
or
lcall
cltd
rcll
mov
xchg
push
pushf
inc
sub
sbb
dec
fidivrl
fidivrl
mov
sub
mov
sti
pop
cmp
inc
pop
push
mov
sbb
std
rep
add
mov
rclb
jmp
imul
aam
daa
adc
fmull
push
pop
push
out
sbb
pop
sahf
test
fs
sbb
sbb
sub
std
loopne
es
push
sbb
adc
sbb
scas
inc
mov
push
stc
rcll
mov
sbb
dec
push
mov
dec
lods
mov
lods
push
sbb
insl
fsub
adc
pop
out
sbb
add
stos
jb
in
xchg
fwait
or
dec
sub
lret
outsb
and
mov
cmp
cmp
inc
lret
popa
adc
mov
dec
rorl
outsl
rcrl
xchg
adc
out
xor
aaa
mov
nop
into
pop
xchg
xchg
rcr
mov
repnz
dec
pusha
adc
xchg
in
pop
test
stos
jle
insl
pop
sahf
subb
repnz
push
fwait
lea
fdivrs
pop
jecxz
sbb
push
or
and
sub
push
cs
jns
out
jb
and
pop
mov
push
ret
push
jno
jne
pusha
mov
rcl
mov
test
mov
aam
mov
in
lret
daa
pushf
fistpll
data16
addr16
xchg
mov
pushf
call
pop
sub
mov
push
dec
pop
mov
mov
xchg
and
es
test
dec
aas
sbb
inc
cmp
pop
push
push
insb
movsb
shrl
and
popl
outsb
or
xchg
mov
lds
push
or
or
in
pop
decl
push
pusha
xor
pop
pop
mov
sahf
stos
push
cmpsl
mov
fisttpl
movsb
dec
or
inc
adc
pop
sub
in
mov
pop
lods
test
ds
push
pop
push
je
adc
popf
add
mov
dec
cmp
ds
dec
psrlw
sbb
adc
xor
shr
fwait
hlt
cld
ljmp
mov
shrb
popf
daa
and
addr16
test
pop
pop
mov
and
adc
push
pop
pop
pinsrw
pop
xor
pop
out
rcll
into
in
push
push
jl
push
jecxz
jne
test
sti
pop
enter
out
dec
xchg
mov
pusha
pop
mov
je
xor
ds
adc
data16
fcoms
movsb
cmp
int3
add
enter
dec
xor
xor
pop
pop
sbb
fucomi
xor
je
sub
lcall
sbb
imul
into
fildl
sbb
sub
insl
pop
and
into
cmc
dec
test
mov
push
inc
mov
add
inc
bound
push
lahf
xor
or
add
ss
jae
fcmovne
sbb
push
sub
cmpsl
xchg
or
and
ljmp
pop
push
pusha
add
shlb
jb
inc
into
lea
dec
adc
repz
mulb
xchg
and
loopne
fsubs
aam
xchg
aad
sbb
repnz
push
jo
rolb
sbb
or
inc
lahf
fdivrs
jecxz
xlat
adc
mov
or
iret
fwait
jp
sbb
sub
sar
add
sub
scas
in
fimuls
cs
loop
push
or
pop
sbb
lret
fmuls
xor
orl
iret
xchg
into
adc
xchg
or
adcb
push
and
push
sbb
dec
mov
jg
lret
or
push
xlat
push
xchg
pop
movsb
xor
aad
jae
ret
cmp
jnp
in
imull
mov
fmull
push
rorl
cmp
into
pop
xchg
and
sub
cmp
adc
daa
int
in
pop
lahf
mov
out
neg
out
lret
adc
sbb
xchg
sub
pop
or
leave
sahf
adc
push
adc
push
inc
iret
cmc
xchg
sbb
adc
dec
push
xor
mov
fadds
xchg
test
xchg
dec
xchg
ja
cs
push
shll
mov
fs
fsubs
xor
push
cs
inc
or
add
inc
ret
xchg
dec
inc
sbb
enter
push
mov
adc
orb
xchg
cmovge
jp
int
es
pop
addl
loop
testl
adc
adc
sbb
mov
add
xchg
cli
add
mov
and
stos
pop
lret
add
xchg
dec
push
push
adc
lcall
push
sbb
push
push
xchg
ss
inc
jmp
arpl
inc
adc
cmp
dec
sbb
jecxz
sbb
shrb
jle
cmp
fsts
sub
inc
add
pop
hlt
lock
inc
std
jbe
iret
leave
push
push
jbe
les
mov
addr16
xor
fisubl
inc
jo
push
rcr
pop
imul
push
enter
pop
and
dec
push
dec
cltd
mov
ljmp
mov
sbb
fadds
jle
fcomp
lods
nop
insb
roll
mov
je
mov
data16
int3
pop
xchg
lods
decb
adc
mov
adc
mov
pop
add
push
dec
sahf
out
mov
les
xchg
dec
pop
inc
out
sbb
sti
sbb
dec
sub
roll
inc
mov
call
cmp
movl
cli
aas
fwait
add
lods
inc
dec
outsl
dec
lods
cli
movsb
mov
repnz
adc
and
inc
push
scas
cmp
add
jno
dec
xchg
ret
dec
pop
push
cmp
and
mov
adc
addr16
aaa
shll
cmp
jmp
mov
xchg
push
dec
notl
and
outsb
nop
inc
xchg
or
repz
lahf
jecxz
push
ja
adc
add
push
xor
adc
aam
les
xchg
adc
dec
or
xchg
icebp
lea
call
sub
and
loope
mov
fwait
fwait
xchg
jno
push
mov
repnz
push
out
lahf
lahf
sub
lcall
xor
add
js
dec
xchg
in
sub
sbb
scas
push
sub
cwtl
push
sub
cltd
add
sbb
add
mov
loope
jae
arpl
lret
sbb
insb
inc
sbb
push
adc
adc
stos
inc
push
jecxz
push
jo
lahf
sub
setge
and
xchg
mov
or
sahf
cmp
pop
in
outsb
out
ljmp
iret
pop
nop
cmp
push
clc
jae
push
push
and
cmp
sub
in
fstpl
xchg
and
xor
jp
les
mov
jle
add
jge
int3
lcall
cmp
jo
sbb
add
jg
dec
sub
les
add
add
jle
jae
lahf
jnp
xor
adc
push
pop
dec
sbb
sbb
movsb
gs
sbb
mov
lret
push
rcll
push
rorl
adc
jb
loopne
test
jecxz
ss
fwait
mov
inc
mov
lea
cmpsl
pusha
frstor
aad
out
and
jne
rcl
lea
jnp
ja
insb
je
push
loopne
cs
rorl
dec
fisubl
add
xchg
dec
mov
test
pop
repnz
lret
pop
xchg
inc
std
lret
adc
mov
adc
pop
mov
rcll
sub
mov
shlb
lret
imul
and
push
push
inc
sbb
and
and
cmovnp
iret
cmp
call
adc
mov
outsl
mov
das
aaa
push
je
movb
pop
clc
mov
xor
inc
stos
pop
cld
je
pop
push
push
push
sub
jns
dec
sahf
push
and
fists
adc
popf
scas
xchg
mov
xchg
cwtl
sub
jno
jne
orl
or
adc
lret
jo
dec
dec
sub
or
je
sub
cwtl
lods
jnp
cs
ret
mov
inc
adc
idivb
add
mov
int
sub
out
xchg
sahf
enter
sbb
and
sub
and
daa
cmp
fwait
leave
sahf
and
and
lret
and
inc
ret
std
test
outsb
jp
imul
or
mov
andl
adcl
mov
mov
cmp
in
cmp
adc
ucomiss
hlt
lock
lahf
pushf
xchg
lock
ljmp
out
dec
in
and
or
adc
test
push
adc
adc
sub
aam
insb
movsl
or
mov
pop
dec
ret
fstpl
pop
cmp
lcall
and
sub
xor
add
push
or
xchg
das
fcmovb
jnp
arpl
sbb
push
push
inc
pop
mov
jmp
and
arpl
rolb
ret
and
and
jecxz
add
xchg
jl
out
mov
cmp
push
pop
mov
dec
jl
push
insb
lahf
dec
mov
dec
dec
mov
jg
pop
cmpsb
pop
stc
dec
dec
xchg
dec
mov
pop
sbb
lahf
pop
adc
xchg
xchg
mov
push
xor
fmull
insb
inc
xchg
adc
lret
ljmp
call
xor
ljmp
seto
sbb
adc
test
mov
fdivrs
jae
insl
lcall
inc
xor
xchg
or
adc
push
in
sbb
jp
mov
push
arpl
push
xchg
fadds
aam
jno
xlat
push
out
adc
jnp
popa
insl
sub
sbb
cmp
mov
cltd
adc
mov
cmp
movsl
sbb
pop
inc
xlat
adc
push
scas
jns
dec
out
cld
adc
cmp
out
adc
cmc
pop
insb
adc
daa
jmp
push
push
lret
pop
adc
push
pop
add
fidivl
cmp
ljmp
adc
sub
pop
and
push
sarl
jecxz
mov
cmp
or
sub
xor
xchg
ljmp
push
mov
or
jp
dec
pusha
popf
cltd
mov
cmp
test
xor
lcall
inc
fwait
rclb
or
fcomip
mov
mov
and
into
push
leave
decb
imul
add
mov
pop
sbb
fcompl
ss
jge
lret
fdivrl
loop
xor
jge
cmp
sbb
and
mov
cmpsb
into
jge
insl
pop
mov
push
sbb
test
icebp
pop
ljmp
sub
popf
xchg
dec
icebp
insb
adc
mov
push
jb
aas
inc
mov
dec
ret
enter
cmp
imul
sub
adc
xlat
dec
dec
pop
cmp
fiaddl
insb
sahf
mov
sub
loope
push
xchg
lret
mov
stos
cmp
push
mov
cmpsb
or
sbb
xor
mov
lods
cmp
mov
sub
cmp
idivl
aaa
xchg
es
sbb
fdiv
jle
sub
or
inc
nop
rsqrtps
push
pushf
jo
ret
shrl
sub
push
push
xchg
push
pop
dec
icebp
stos
rcrb
scas
pop
call
sbb
lahf
stos
int
jp
in
mov
adc
js
hlt
mov
push
push
push
pushf
push
or
sbb
dec
mov
nop
or
xchg
jl
push
add
mov
xor
int
mov
addr16
mov
mov
adc
mov
or
in
insl
sub
xor
xchg
push
movsb
dec
loope
sti
enter
pop
int3
xchg
inc
pop
movsl
in
pop
les
dec
leave
jmp
mov
imul
mov
into
push
lahf
inc
ret
xchg
insl
das
loope
add
in
stc
test
mov
ljmp
dec
and
cwtl
sub
int3
pop
dec
mov
fistps
std
push
out
or
mov
imul
dec
aaa
stos
jg
in
and
xor
sub
or
push
pop
add
sbb
cmp
out
fs
mov
mov
add
int
es
repz
cld
loope
dec
scas
xchg
push
push
sub
and
std
sub
mov
dec
jae
or
mov
fcoml
sarl
adc
lret
sbb
pop
or
mov
adc
add
push
mov
dec
mov
adc
dec
daa
pop
sahf
inc
push
leave
dec
push
or
dec
add
dec
dec
or
daa
stos
sub
outsb
les
mov
mov
inc
or
sahf
and
es
shl
push
ljmp
pop
adc
pop
jns
repnz
sahf
push
inc
into
cmp
fwait
or
jl
movsb
lods
test
das
sub
xlat
adc
add
mov
sbb
shl
popa
pop
push
jo
adc
addr16
ss
daa
sub
adc
push
push
rcl
lahf
push
pusha
adc
pop
push
btr
in
aas
out
inc
push
cmove
adc
xlat
cmpsb
ret
imul
dec
add
fdivrs
ret
ljmp
mov
pop
or
fisttpl
cltd
nop
dec
insb
notb
ljmp
ret
dec
xchg
sbb
lock
xchg
xchg
icebp
xchg
or
ja
fs
mov
add
sbb
push
sbb
pop
adc
dec
adc
mov
cmp
cmp
jnp
xor
scas
fwait
pusha
jg
sbb
in
sbb
adc
scas
fisubs
pop
out
lret
dec
daa
and
lock
xor
imul
push
push
xchg
pop
xor
pop
adc
mov
xlat
cwtl
bound
mov
push
sub
sbb
movzwl
inc
dec
inc
not
lods
push
hlt
pusha
pop
jecxz
mov
je
or
xor
push
adc
push
mov
pop
and
inc
mov
xchg
push
bound
pop
adc
xchg
daa
dec
testl
mov
repnz
sub
int
lods
push
or
sbb
fdivr
int
mov
xlat
push
ljmp
jnp
push
jb
xchg
testb
xchg
syscall
push
sbb
xorb
stos
pop
xchg
push
pop
push
shr
jae
fwait
into
push
pop
test
sarb
in
cli
cld
xchg
adc
sub
mov
test
push
mov
xor
repz
add
push
sbb
inc
sbb
jmp
add
outsb
jle
ds
inc
push
lret
es
sub
dec
push
jle
mov
sub
mov
sti
dec
rclb
iret
pop
sub
fdivs
mov
cmp
and
xor
cmpl
sbb
ss
sbb
js
pop
jl
or
pop
sahf
xor
xchg
xchg
sub
xor
mov
test
fistpll
sarb
lock
insl
adc
mov
mov
adc
adc
rcll
je
icebp
jmp
mov
in
fdivs
lret
lcall
insb
rcl
jns
leave
or
sub
cmp
or
xchg
sub
dec
cmp
sub
push
mov
cmp
or
jo
mov
dec
mov
mov
dec
mov
mov
clc
dec
movsl
mov
dec
jge
in
orl
movsl
cmp
push
leave
push
pop
daa
and
or
les
dec
adc
and
or
push
xchg
or
stos
mov
dec
lret
sub
insl
sbb
jge
jmp
xor
xor
sbb
push
js
pop
call
mov
pop
das
xchg
xchg
ror
add
push
dec
jmp
scas
rcrl
push
sub
insl
push
and
test
jle
dec
push
sbb
in
dec
mov
inc
pop
and
pop
pop
sub
mov
lock
dec
adc
sub
jmp
lods
cmp
pop
sahf
and
aad
dec
pop
das
scas
imul
ljmp
jns
ret
cmp
mov
push
adcl
lea
adc
cmp
je
mov
out
xor
xchg
xor
pop
inc
and
mov
cmp
adc
push
cmp
pop
mov
push
aas
push
add
sarb
arpl
pushf
sbb
cmp
mov
xchg
cs
mov
adc
or
or
adc
idiv
cltd
stc
aas
add
popf
mov
pop
sbb
aad
dec
aam
push
push
cld
stc
fwait
mov
fs
fisubrs
bound
sub
dec
sbb
jne
ds
int
mov
xchg
aad
adc
mov
jae
ja
dec
insl
pushf
leave
addr16
cs
push
popa
sbb
push
add
fwait
xchg
jle
xchg
jmp
daa
in
lea
dec
in
mov
jbe
and
and
cmp
loop
jge
or
and
or
inc
in
push
fs
fisttpll
popf
mov
add
mov
dec
les
pop
mov
mov
pop
icebp
push
or
ret
sbb
adc
push
xchg
push
or
mov
lods
sub
sbb
gs
mov
push
xchg
ljmp
push
cmpsl
pop
adc
fsubl
ss
add
sbb
pop
jmp
jle
inc
dec
orl
xlat
push
stos
lret
mov
mov
add
imul
ret
fcoml
pop
lods
les
sub
pop
cs
mov
pop
jmp
lods
dec
jae
pop
xchg
pop
sbb
xor
jb
mov
push
add
cmp
lret
adc
in
int
xchg
ljmp
inc
outsl
jle
mov
insb
push
js
mov
das
cld
pop
push
dec
test
mov
push
dec
insb
mov
push
xchg
dec
xor
jo
adc
jp
lods
adc
push
xchg
sub
adc
mov
pop
or
push
mov
test
mov
and
jp
dec
xchg
data16
lea
dec
mov
sbb
fcoml
outsl
movsb
out
dec
xor
nop
mov
dec
sti
add
mov
daa
lods
cmp
das
dec
xor
mov
test
daa
adc
cli
imul
nopl
fsubrl
xsha1
cmpsb
popl
sub
fstps
xor
mov
dec
out
ss
sub
dec
addr16
das
fdivrp
fwait
push
jg
sbb
or
dec
int3
sbb
je
mov
les
mov
push
inc
pop
int3
cwtl
pop
push
mov
push
mov
iret
push
pop
add
lcall
mov
or
in
sahf
or
and
mov
lods
repz
or
xchg
incb
cli
or
outsb
inc
and
push
loop,pn
rcr
std
roll
lcall
ret
int
cmp
add
lcall
push
add
add
mov
jl
push
add
sar
insl
pop
cmp
inc
sbb
adc
movsl
sub
or
mov
dec
sub
dec
mov
iret
cs
and
insl
cmc
sub
aam
pop
in
mov
dec
sbb
into
add
ja
outsb
or
adc
add
cmp
mov
push
mov
adc
decl
popf
sub
les
fs
cwtl
mov
mov
push
or
loop
outsl
add
xor
stos
rcrb
dec
mov
sahf
repz
push
and
sbb
aaa
sbb
repz
pop
pop
cld
adc
testl
shrb
push
sub
cld
cltd
jl
leave
push
mov
scas
lcall
and
sub
add
popf
cmp
mov
into
jo
sahf
push
mov
sbb
addr16
dec
xlat
push
xor
jl
imul
out
mov
xchg
sub
push
sbb
lock
jb
mov
and
sbb
sahf
adc
push
add
adc
mov
jge
sub
jle
insb
mov
loop
cmp
js
lahf
inc
xchg
mov
mov
dec
dec
jne
movsl
popl
adcb
dec
dec
and
sub
inc
push
adc
pop
shrb
sub
fimuls
aam
int
gs
pop
jecxz
movsl
mov
pop
scas
ficoml
or
es
into
pop
add
fcompl
push
mov
push
stc
or
xchg
dec
into
aad
bound
sbb
sub
loope
inc
jnp
std
push
push
in
cmp
inc
movsl
call
popa
push
adc
test
push
add
sbb
sbb
xchg
jbe
aas
or
in
and
or
sahf
adc
cld
push
push
and
jbe
decb
mov
sub
inc
lahf
loopne
mov
int3
js
mov
cmp
cs
add
push
push
pusha
mov
dec
ljmp
dec
cmp
lahf
and
mov
adc
cmp
mov
mov
jno
lahf
out
popf
or
fisubrl
and
pop
out
shrl
int3
loop
pop
add
imul
insb
aad
dec
inc
lahf
mov
xchg
and
mov
insl
data16
and
xor
mov
adc
mov
movsl
and
lods
adc
cwtl
adc
orl
adc
jge
into
push
lods
or
es
dec
sub
jmp
in
or
cli
pop
push
xlat
test
sub
call
add
mov
inc
adc
stos
jae
sbb
iret
pop
ljmp
js
or
sarl
ljmp
adc
xchg
xchg
sbb
stos
ja
sub
push
inc
out
test
iret
imul
lcall
aad
frstor
sbb
insb
xor
sub
push
mov
fisubrs
daa
push
mov
dec
rcl
loopne
aaa
das
imul
push
into
jb
sahf
pusha
add
addr16
pop
push
jmp
sbb
imul
dec
stos
push
mov
inc
sysexit
js
sub
dec
imul
push
lahf
xchg
inc
dec
mov
insb
pop
in
pop
fbld
loope
xchg
movsb
jb
lahf
jo
dec
addr16
iret
mov
int
insl
icebp
aaa
push
fidivrs
inc
roll
popa
addr16
pusha
jb
jno
leave
mov
inc
xor
fidivrs
imul
mov
imul
popa
mov
sbb
iret
scas
es
insb
dec
fdivrl
insl
pop
pop
and
iret
cmpsb
dec
push
cmp
out
out
imul
or
adc
popa
xchg
daa
mov
popf
push
push
jmp
repnz
add
xchg
push
adc
pusha
addr16
xor
sbb
arpl
xor
fadds
push
repz
icebp
push
mov
adcl
pop
icebp
and
xchg
popa
dec
sbb
fbld
jns
jle
adc
fiadds
lahf
bound
push
int
outsl
mov
vmwrite
insb
out
xchg
jl
cwtl
pmuludq
mov
add
loop
sbb
mov
xchg
ret
daa
pop
sub
int3
fwait
dec
or
mov
out
dec
jmp
aam
ljmp
fs
dec
mov
dec
push
imul
pop
dec
lods
mov
shll
jns
rclb
loope
leave
enter
out
pop
or
mov
lahf
mov
pop
leave
notl
add
xchg
lea
or
sub
sbb
or
call
sub
pop
fcomps
loopne
pop
adc
daa
lcall
in
movsl
dec
or
inc
push
fnstenv
das
adc
add
cmpsb
mov
in
push
lea
pop
std
add
leavew
mov
in
jp
mov
cmp
insb
data16
bt
push
push
add
roll
iret
xor
push
jmp
inc
in
xchg
loopne
aam
or
xchg
cltd
or
mov
xor
jp
dec
fdivrs
iret
cli
inc
xchg
adc
int3
ljmp
lret
fs
cwtl
push
or
xchg
cmp
inc
dec
and
adc
sub
dec
aam
pop
fwait
dec
lcall
mov
adc
enter
inc
sahf
push
push
jmp
int
dec
ds
into
and
cmpsl
faddl
cld
popa
mov
shrl
and
xlat
scas
mov
in
xlat
and
aam
or
out
dec
stc
jo
lock
lahf
mov
add
lods
loope
mov
mov
push
sbb
mov
or
xchg
ret
sub
jle
mov
or
mov
insb
loopne
lock
fimull
sub
push
int3
jle
sub
int
cmp
dec
pop
push
dec
cltd
inc
cli
pop
lds
cltd
out
xchg
clc
arpl
out
sub
call
insl
fldcw
push
test
dec
add
sub
pop
rcrb
lret
clc
dec
test
ljmp
daa
lahf
cmpsb
xor
bound
jmp
lret
add
stc
sarb
adc
pop
push
push
pop
lds
and
xchg
add
dec
adc
out
or
add
lds
push
insb
cli
dec
adc
adc
pop
mov
cmpsl
and
pop
add
lcall
xchg
cmpsb
push
mov
loopne
sbb
fmuls
pop
pop
test
inc
mov
cli
jmp
mov
and
adc
and
iret
adc
aam
jmp
pop
add
les
mov
adc
clc
es
and
pop
fistl
sbb
pop
dec
xor
xchg
test
xchg
or
xor
lret
jl
jecxz
divps
loope
arpl
xchg
sub
out
mov
mov
xchg
insl
insb
sbb
add
insl
inc
dec
test
push
imul
sub
push
incb
fadds
sub
cli
cli
mov
pop
pop
mov
lret
dec
decl
or
or
repz
jl
aas
lret
fisttps
into
or
push
push
xchg
in
or
imul
rclb
sbb
dec
add
inc
jmp
faddl
fs
daa
or
shrl
fisttpl
out
adc
and
xor
mov
test
inc
stc
mov
repz
repz
mov
inc
addr16
imul
subb
fcom
out
mov
pop
insl
in
pop
push
or
aad
negb
pop
xor
subb
test
mov
or
repz
dec
shl
shr
or
cmpsl
pusha
push
and
and
cmp
insl
xchg
and
aaa
mov
xor
scas
pop
push
mov
mov
rorl
stc
insl
xchg
mov
and
aaa
repz
ds
pop
scas
test
aas
mov
jo
and
nopl
je
push
dec
pop
orl
mov
loope
cmp
and
adc
sub
pop
or
push
mov
sahf
xchg
loope
jecxz
lods
frstor
xor
hlt
or
dec
or
xchg
and
insb
mov
pusha
mov
or
cs
or
call
push
int
inc
scas
sub
xor
mov
leave
mov
popa
hlt
jo
es
out
subl
adc
cld
or
mov
aam
mov
lods
push
dec
popa
test
aad
pop
adc
mov
andl
mov
nop
fnstcw
push
ret
and
dec
sbb
das
inc
push
dec
popf
or
je
ljmp
mov
or
aaa
xchg
stc
adc
mov
cmc
rorb
nop
stos
sbb
mov
mov
pop
dec
sahf
jns
pop
push
decl
xchg
fcmove
dec
or
mov
mov
movb
pop
sbb
orl
das
adc
pop
or
jbe
adc
ficomps
push
xor
dec
adc
push
adc
mov
outsl
pop
adc
push
shr
inc
lods
out
and
or
stos
push
add
mov
mov
rclb
pop
xor
add
push
push
jecxz
xchg
gs
sbb
pop
sbb
add
mov
sub
sub
cs
jle
jae
push
fwait
mov
and
adc
addl
notl
push
test
and
pop
jecxz
dec
or
or
adc
adc
push
mov
dec
add
test
dec
dec
mov
push
cmpsb
fistpl
movsl
and
xchg
outsb
sbb
lahf
mov
mov
cltd
push
xchg
fwait
adc
cmpxchg
rorl
outsb
fadd
push
push
or
out
sahf
xor
into
sub
or
int3
loop
dec
add
sub
repnz
test
jno
or
mov
or
fisttps
push
adc
or
push
mov
push
sbb
sbb
sub
in
lahf
pop
nop
sahf
addr16
clc
lret
lahf
lock
cmp
adc
jl
out
scas
cmpsl
or
aad
mov
imul
sub
shlb
mov
sbb
pop
imul
sub
xchg
loopne
and
inc
rep
imul
dec
dec
rcrl
out
imul
add
dec
ret
push
das
ret
daa
or
pop
adc
into
pop
out
cwtl
cld
mov
and
out
cmovs
push
sub
pop
addr16
leave
jge
into
jecxz
pop
dec
nop
fcompl
ficoms
test
sub
sbb
pop
cs
stos
add
push
add
push
add
or
ret
insl
popf
and
or
je
ffreep
xor
fwait
enter
lcall
mov
lcall
ds
int3
adc
dec
movsb
mov
fwait
jb
push
jbe
sahf
dec
mov
call
and
stos
jp
adc
fidivrs
aam
or
push
outsl
jge
add
push
push
sbb
cwtl
lahf
fst
xchg
into
es
aam
es
mov
sahf
popa
aas
pushf
into
cmp
je
sub
fimull
shl
mov
mov
rorb
pop
jl
mov
push
stos
ficoml
ficoml
dec
fisttpl
aad
in
or
dec
pop
sbb
mov
rdmsr
cmp
popf
or
out
ret
adc
ud0
test
sarl
push
inc
and
mov
pop
push
dec
sbb
aam
push
lret
adc
and
pop
shlb
add
hlt
adc
and
loopne
inc
xor
scas
push
dec
fsubl
test
adc
leave
adc
push
xchg
dec
ror
mov
mov
cltd
sub
lcall
cld
mov
andl
xor
xchg
cld
push
sahf
adc
insl
cmp
sbbb
out
mov
movsb
fisttpll
mov
adc
adc
jecxz
sahf
ficoml
ljmp
in
fstl
ljmp
mov
lcall
into
and
xchg
or
repz
inc
in
sbb
sbb
mov
call
xchg
cmp
cs
sub
and
xchg
repz
inc
mov
inc
orl
add
add
fidivrl
rcll
insb
fdivrl
loopne
push
mov
mov
push
insb
add
inc
shl
repz
fdivrs
adc
mov
data16
adc
xchg
add
pop
pop
ds
and
jnp
int3
pop
or
stos
lcall
xor
push
mov
sbb
mov
cmp
es
dec
testb
ret
adc
sbb
enter
movsb
cltd
and
movsb
push
and
xchg
adc
sbb
and
test
mov
lret
ficompl
orb
fsubrl
dec
sub
pop
sti
imul
or
ficomps
sub
sbb
jecxz
in
pushf
xor
xchg
scas
mov
repnz
push
pop
add
sysenter
sarl
cmpsb
arpl
addb
repnz
cmp
cltd
xor
xorb
xlat
push
dec
dec
pop
pop
lahf
and
push
jg
cwtl
and
and
shl
dec
insl
mov
aaa
into
push
push
je
pop
imul
andl
loope
sub
sbb
pushf
inc
cmp
xchg
jns
or
lock
mov
lahf
mov
mov
out
sbb
jbe
ss
sbb
add
push
mov
sbb
test
cs
es
sbb
rorl
mov
lcall
fmuls
mov
add
push
or
stos
rcl
xlat
sub
pop
out
or
dec
stos
jge
lret
hlt
fwait
sub
mov
lods
xchg
rcll
adc
sub
push
sbb
bound
xlat
push
inc
adc
pop
test
jle
cltd
sarb
push
jno
cmp
sbb
add
jp
push
mull
lods
dec
push
and
push
fimuls
xchg
test
cmp
and
xor
and
fcomi
and
xchg
mov
push
clc
ss
pop
xor
mov
ret
sahf
inc
jnp
hlt
sub
int
pop
popf
sub
cmp
mov
add
shlb
test
outsb
daa
insb
sbb
xchg
sbb
pop
stc
aaa
mov
jle
insl
mov
in
in
sbb
jnp
cmp
pop
jae
push
pop
xor
outsl
int
cmp
mov
lcall
enter
es
mov
das
push
scas
push
pop
add
adc
or
mov
mov
lret
push
int3
repnz
xchg
test
or
adc
lret
xor
add
push
ljmp
andb
sarl
mov
and
lods
iret
loope
inc
xchg
push
dec
popf
sbb
add
xchg
stos
sbb
push
loopne
pop
popa
hlt
repz
xchg
adc
inc
jecxz
add
xor
pop
loope
inc
data16
push
add
inc
loope
out
addr16
push
popf
jg
outsl
mov
cmp
adc
push
imul
fcmove
sub
mov
lds
int3
or
mov
int3
movsb
dec
lcall
dec
push
loop
fisubl
sbb
sbb
and
pushf
push
cmp
into
push
mov
rclb
cmp
cmc
lcall
adc
mov
sub
mov
icebp
push
jle
add
cltd
jl
or
adc
mov
sub
sub
fnstenv
loopne
or
push
les
dec
rol
out
xorb
mov
insb
jle
ja
rcrb
jno
xor
mov
aam
mov
lcall
sbb
sbb
jo
repz
fcoms
punpckhwd
bswap
out
cwtl
pop
sbb
xlat
push
pop
adc
ljmp
insl
test
stos
xchg
sub
xchg
leave
sarl
adc
insb
mov
test
sub
popa
xor
xchg
fildll
dec
faddl
jno
mov
test
jb
lahf
insb
lret
xor
xor
push
ds
mov
es
pusha
and
mov
mov
pop
sti
daa
xchg
call
lret
mov
sub
xlat
fwait
push
fsubl
cmp
xchg
sarl
pop
popa
fldcw
loop
fiadds
sbb
or
lcall
xchg
stos
fistpl
xchg
mov
or
adc
int3
daa
jae
ss
xor
and
out
sub
popa
xchg
inc
enter
nop
insl
popf
sbb
mov
push
sahf
mov
xchg
les
and
ss
pop
ljmp
jge
ds
in
scas
cmp
or
sbb
popa
imul
jl
aam
ss
outsl
cmp
sahf
and
nop
popf
and
fcmovnb
fistps
mov
mov
incb
fwait
mov
pushf
mov
mov
popa
push
cs
push
dec
cmp
sub
incb
mov
push
arpl
andb
popa
push
test
mov
inc
jp
ficomps
std
mov
loopne
jl
idiv
inc
aam
mov
dec
mov
mov
stos
fisubl
push
stos
mov
sbbl
xor
add
pop
mov
rol
push
mov
iret
inc
adc
push
adc
nopl
sub
les
push
in
out
adc
bound
lods
push
orb
or
into
insl
mov
and
loopne
and
push
jae
push
or
xchg
push
cli
in
lods
add
int3
arpl
cmpsl
or
inc
mov
leave
fldenv
xchg
mov
xor
adc
nopl
jl
popa
jns
ss
pop
das
shlb
add
mov
mov
in
sahf
mov
ficoms
push
scas
aas
cmp
sbb
xor
movsl
push
sbb
insl
sub
pop
adc
outsb
pop
pop
out
or
add
scas
lock
rep
or
push
insl
arpl
das
lea
imul
add
outsl
movsl
out
pop
pop
mov
xor
in
push
or
xor
pop
mov
int
adc
add
mov
fwait
fs
xlat
pushf
jnp
hlt
mov
pop
in
mov
sarb
test
outsl
xchg
inc
sbb
insb
data16
adc
sbb
lods
outsb
cli
rorb
sub
xchg
or
xlat
dec
scas
xchg
hlt
pop
mov
adc
xor
cmp
mov
or
cmp
mov
cltd
cli
dec
sub
sub
mov
push
xchg
pushf
mov
shrl
test
stos
cs
dec
mov
sbb
lahf
sbb
out
add
outsb
sbb
scas
push
jb
add
mov
xchg
sbb
test
pushf
cmpsb
and
and
add
movsl
in
pop
mov
push
mov
adc
test
sbb
or
bnd
mov
ficomps
pop
out
es
sub
mov
lods
mov
sbb
lahf
pop
imul
insl
addr16
ret
jmp
aam
dec
adc
mov
cmp
jcxz
pop
jp
insl
mov
jecxz
add
push
cmpsl
mov
fidivs
xor
sahf
adc
push
mov
bound
add
and
test
iret
loope
movsl
jl
dec
add
xor
loopne
mov
cs
adc
dec
cmp
inc
outsb
or
adc
sbb
test
sbb
outsb
xchg
das
sbb
shrb
push
dec
push
adc
xor
cmc
and
push
mov
dec
pop
stos
fstpl
xor
or
pop
pop
sub
mov
cmp
mov
and
fmuls
push
mov
xor
and
adc
sub
and
dec
and
movsl
fsubrl
mov
fisttps
int3
jno
cltd
ja
jno,pn
lret
dec
into
popf
cmp
push
sub
outsl
repz
cmp
lahf
movsb
xchg
adc
dec
jbe
sbb
pop
rcr
jnp
ja
notb
and
pop
sahf
ds
fdivp
fiadds
mov
push
loope
push
and
lret
enter
mov
mov
fnstsw
pop
ret
jmp
aam
add
es
insb
daa
xor
mov
aam
nop
insb
mov
outsb
lcall
mov
add
in
popf
and
dec
icebp
movsl
and
push
and
inc
push
xchg
ja
pushf
or
cmp
pop
jg
dec
mov
dec
dec
push
in
adc
sub
adc
dec
add
orb
sbb
in
mov
stos
aaa
adc
mov
mov
push
stc
fwait
sbb
je
shrl
lods
dec
das
outsl
dec
cli
xchg
push
dec
xchg
icebp
orl
mov
lahf
inc
and
push
cmp
ds
pop
adc
pop
call
popf
sbb
add
or
dec
ret
mov
aad
push
xor
or
dec
push
test
inc
jp
int
xchg
mov
jg
ja
in
push
jmp
adc
sub
in
iret
sbb
pop
ror
sbb
jmp
cmp
lcall
sbb
sbb
jnp
or
test
into
sbb
add
xor
jecxz
jp
sbb
inc
push
test
push
xchg
hlt
pop
push
icebp
jnp
sbb
shrl
pop
xchg
sahf
shrl
add
xor
xchg
xor
push
sub
loopne
mov
loope
push
mov
stos
aaa
scas
or
adc
adcl
jg
dec
test
lret
add
inc
int
jno
sbb
pop
jle
iret
jno
xchg
cmp
jl
inc
sti
test
push
sub
das
stos
cld
push
es
testb
sub
mov
mov
mov
dec
push
pusha
fdivl
je
push
fisubl
stos
cmp
mov
mov
sahf
or
jbe
jne
mov
test
or
js
jg
fcmovnbe
mov
or
sub
inc
mov
daa
or
fidivl
inc
dec
insl
mov
pop
std
into
adc
xor
sbb
stos
mov
shlb
dec
add
or
scas
push
outsb
lods
aaa
and
cmp
push
cld
mov
lods
pop
push
mov
mov
jnp
mov
data16
leave
mov
xchg
jbe,pn
jecxz
add
push
adc
mov
dec
and
push
int
jae
jp
inc
dec
lea
add
add
xor
cmp
pusha
popa
xchg
outsb
int
cmp
es
mov
sahf
fcomip
cli
add
out
testl
sbb
jnp
aam
nop
inc
iret
sub
into
nop
mov
ficoms
cmp
and
mov
and
jg
xchg
dec
test
insb
or
aas
xchg
loope
adc
or
jge
imul
jge
add
and
cmp
out
pop
push
jno
or
fwait
or
lcall
lods
or
xchg
lret
cld
addr16
stos
mov
mov
loop
lock
outsl
ljmp
inc
mov
jns
fs
adc
sub
fcompl
sbb
iret
pop
mov
jnp
clc
sbb
inc
cltd
add
loopne
push
faddl
xor
stos
nop
lea
pop
lahf
pop
addr16
dec
leave
xchg
fdivrs
mov
jnp
or
pop
push
adc
and
int
mov
sub
push
inc
rcpps
hlt
fdivr
ud1
pop
sub
and
add
repz
fstpl
jo
push
sbb
fwait
add
in
ret
cmp
inc
mov
add
push
push
mov
adc
addr16
push
jne
push
pop
adc
and
in
add
rolb
or
jecxz
pop
or
clc
sub
push
divl
or
insl
push
pop
xchg
imul
adc
mov
adc
push
lea
ret
pop
adc
cmpsl
mov
mov
xchg
daa
mov
xchg
dec
mov
daa
cmpsl
leave
push
repnz
adc
jecxz
mov
sbbl
adc
shlb
push
cs
sbb
push
mov
enter
ds
cmpsl
or
ffree
cmc
or
push
jle
orl
mov
mov
daa
stc
test
adc
mov
cmpsl
adc
jle
in
lret
adc
cs
push
outsb
xor
in
push
jmp
add
in
out
leave
mov
sahf
xchg
pop
mov
popa
dec
in
in
out
cmp
adc
adc
pop
sub
mov
int
jp
mov
adc
adc
mov
push
xor
pop
outsb
jne
rcrl
addr16
fsincos
jnp
xlat
lahf
dec
test
mov
push
or
jmp
mov
xor
cs
xchg
in
mov
dec
fdivrs
testl
decb
hlt
pop
pop
xor
repz
mov
pushf
sbb
push
pop
pop
mov
fidivs
stos
sbb
inc
in
sub
push
aad
or
imul
xchg
or
negl
mov
dec
mov
mov
mov
dec
xor
scas
cmpsb
xor
add
cmp
ret
or
adc
dec
pop
mov
pop
loopne
and
aam
xor
lahf
sub
xor
pop
cmp
push
inc
testb
dec
stc
dec
add
inc
inc
jecxz
pushf
std
cld
and
sbb
js
sbbb
mov
sub
into
stc
adc
in
lea
add
mov
adc
orb
aas
push
inc
mov
mov
mov
imul
inc
mov
fstp
xor
ljmp
and
push
add
adc
xchg
pop
ss
insb
aaa
aaa
jge
into
ficoml
sahf
into
aaa
or
bound
aaa
inc
and
add
dec
imul
test
pop
shl
sub
xor
mov
xor
push
movsb
into
test
pop
lahf
add
mov
jle
int
cmc
aam
loopne
es
sub
fwait
sbb
xor
sbb
scas
pop
mov
stos
leave
ficoms
loopne
aas
lret
sbb
or
jg
mov
adc
xchg
dec
fisubrl
mov
xor
cltd
mov
sbb
test
ds
into
cli
rcll
adcb
dec
adc
cmpsb
push
pop
cmpsl
mov
fisttps
add
movsb
dec
idiv
xor
fstpl
scas
imul
ret
pop
and
insl
ds
cli
push
jne
fimull
cs
cmovs
imul
je
or
cmp
shrl
outsl
orb
sahf
jle
mov
iret
inc
add
xchg
adc
inc
inc
mov
lahf
jae
xchg
jmp
adc
sub
dec
mov
les
push
push
aam
test
push
int3
push
bound
mov
sbb
mov
js
popf
push
call
sub
test
push
jmp
adc
xchg
sub
adc
pop
cs
int
sbb
inc
add
lea
sbb
rclb
jmp
iret
popf
mov
les
sbb
adc
out
mov
pop
mov
add
xor
ret
sbb
push
les
sub
cwtl
popf
xor
pop
xchg
pop
or
inc
cmp
adcl
xchg
fidivl
scas
add
shrl
and
lahf
mov
push
adc
pop
jno,pn
push
xor
fwait
sbb
push
dec
cmp
pop
jmp
nop
adc
sahf
mov
add
xchg
fcoml
adc
outsb
mov
daa
push
mov
scas
pop
xchg
xchg
xor
inc
sbb
cmp
adc
push
xchg
loopne
jns
fwait
pop
or
sbb
outsb
icebp
and
xchg
dec
xor
sbb
xor
pusha
add
pop
je
pushf
mov
lods
sti
pop
mov
or
rcrl
je
cmp
xchg
stos
push
push
push
jge
sbb
repnz
and
fdivrp
push
mulb
rorl
testb
dec
sub
add
jg
dec
xlat
imul
sbb
mov
pop
sbb
icebp
scas
xchg
pushl
mov
add
mov
mov
jnp
lods
push
mov
jle
sbb
out
xor
mov
mov
mov
pushf
xchg
ds
cwtl
scas
sbb
xchg
les
lret
adc
movsb
punpckhdq
bound
xchg
fists
cmp
arpl
xor
pop
aas
lea
rorb
mov
movsb
dec
ret
push
push
pusha
in
insl
mov
leave
mov
mov
lods
jle
stc
push
or
or
mov
popf
mov
arpl
ret
fcomps
cmp
scas
mov
pop
push
mov
xchg
sbb
aaa
movsl
and
mov
shrl
pop
dec
add
divb
adc
cmp
rorl
jno
jecxz
jp
dec
js
push
outsl
xchg
loopne
fdivl
mov
and
mov
in
mov
in
add
mov
or
push
scas
xchg
fcmovbe
fldenv
fcompl
imul
jl
sbb
or
sub
imul
jecxz
push
mov
into
fsubr
push
dec
jbe
push
fwait
push
sahf
daa
aad
jns
lea
mov
insl
insl
fbstp
xchg
fisttpll
jo
out
cwtl
sub
mov
sbb
push
lret
fsubrs
dec
add
push
popf
inc
jb
cmpl
dec
rcll
aam
fistps
xlat
sti
cld
movsb
push
adc
clc
or
push
lret
xchg
xor
scas
pushl
pop
push
jo
insb
pop
fstpl
adc
sbb
pop
clc
jo
pop
mov
imul
fcoms
data16
lea
and
stos
mov
rorl
pusha
add
and
push
push
xor
adc
adc
daa
into
xor
jg
stc
add
cmp
mov
push
fidivrs
into
add
pop
jne
cmp
in
jbe
dec
shlb
in
cmp
xchg
and
mov
addr16
push
cmpsb
xchg
jno
fs
shll
fsts
daa
mov
pop
pushf
sub
repnz
adc
cmp
sbb
imul
mov
arpl
mov
and
and
movsl
adc
pop
pop
jns
jmp
test
mov
dec
add
mov
ljmp
add
int3
or
gs
sub
mov
pop
mov
mov
jb
imul
jb
cwtl
xor
into
cmp
lret
cs
sub
fisubrl
sbb
sahf
insl
mov
shlb
mull
into
push
lret
loop
adc
bswap
cmp
outsl
jae
and
mov
xchg
mov
push
outsb
setge
in
sbb
dec
scas
sub
push
int3
lahf
add
ds
movsb
mov
mov
movsl
and
push
stc
cwtl
sub
stos
pop
and
add
vmread
into
xchg
add
and
fmuls
inc
in
mov
or
jnp
popa
test
pop
push
mov
mov
mov
rcrl
pushw
les
sti
lahf
aam
jle
jle
xor
fistps
mov
xor
bound
mov
sbbb
sbb
mov
sub
test
es
aaa
lds
lahf
push
repz
and
out
lods
cmp
inc
pop
aam
aas
movsl
dec
dec
xchg
cmp
rorl
add
push
mov
sahf
sub
push
imul
movsl
mov
adc
in
into
adc
jl
push
pop
mov
mov
js
pop
movsb
divps
call
mov
adc
pop
inc
in
das
and
popf
jb
jl
jp
fwait
sbb
push
leave
mov
scas
popa
stos
mov
jmp
inc
dec
jl
push
push
dec
mov
fstp
sub
adc
cmp
js
aaa
ds
scas
push
inc
imul
test
inc
push
ljmp
sbb
test
mov
dec
fs
nop
pop
stc
sub
xchg
sub
sbb
xchg
dec
pop
add
dec
cltd
jp
pop
sub
mov
test
lahf
xchg
push
clc
adc
push
test
aam
insb
popa
shl
inc
adc
mov
ds
ljmp
in
dec
insb
stos
out
or
xchg
orl
or
jecxz
push
jl
insb
insb
lret
sbb
or
sbb
in
pop
sbb
push
dec
je
dec
lods
ss
inc
fisttpl
dec
xchg
scas
adc
es
outsl
fistps
lcall
in
xchg
push
lahf
je,pt
push
shlb
and
fwait
adc
pop
outsl
inc
and
pop
cmp
rclb
mov
sbb
sbb
xchg
or
pushf
ds
cs
jb
ss
mov
fmulp
cwtl
int
std
add
lea
xchg
pop
add
cmpsb
xchg
xor
rcrl
or
imul
fidivs
push
in
inc
pop
mov
insl
mov
inc
xchg
lahf
into
sbb
mov
push
out
insb
sbb
mov
xor
and
sub
idivl
shl
or
adcb
daa
cmpsb
arpl
cltd
mov
or
jne
pop
dec
repz
leave
fstps
imul
mov
nopl
or
sub
repz
adc
add
mov
xchg
adc
cli
rcrl
incl
push
dec
mov
or
xor
test
pop
sbb
or
fnstsw
leave
jl
out
and
jmp
in
adc
lahf
mov
push
mov
pop
sub
cltd
imul
mov
push
and
sbb
insb
icebp
mov
and
jecxz
ficompl
imul
adc
mov
sub
dec
clc
add
jne
icebp
cs
notb
pop
push
fidivrl
push
fwait
movsb
es
pushf
sarb
cs
pop
orl
jbe
pop
or
les
aad
pop
div
adc
push
push
stos
or
iret
sub
fsubl
jg
and
fstl
adc
xor
insl
mov
jg
mov
stc
outsb
mov
add
js
ret
mov
rcll
mov
cmove
lcall
fdivl
mov
orl
loope
lods
adc
mov
push
adc
xor
stos
dec
pop
xor
rcll
sub
push
sti
enter
mov
outsl
dec
outsl
xchg
push
imul
mov
mov
mov
xrelease
or
inc
mov
cmp
push
xchg
arpl
mov
dec
adc
jno
mov
xchg
mov
aad
cmp
repnz
fwait
and
fisubrl
mov
sahf
mov
sub
pop
sub
fwait
and
mov
mov
call
int3
sub
lods
and
mull
outsl
xorl
mov
mov
jg
ljmp
stos
mov
sahf
stos
das
push
mov
sbb
je
mov
push
out
outsb
cmp
pop
pop
dec
sub
xor
lock
sub
jmp
in
cli
cmpsb
xor
in
cld
es
ja
sub
jg
dec
mov
push
pop
mov
int3
fisttpll
mov
mov
push
sbb
fdivrs
xchg
fstpt
sub
jecxz
sbb
pop
daa
cmp
jnp
and
push
ficoms
cwtl
cmpsb
and
jne
stc
shll
pop
js
adc
pop
pop
sbb
mov
mov
scas
cmp
fwait
push
shl
mov
cmc
mov
fists
mov
lcall
outsl
sbb
stc
adc
scas
adc
dec
in
dec
mov
mov
or
jae
dec
jb
inc
pop
std
push
dec
daa
xchg
les
aaa
arpl
and
xchg
icebp
arpl
dec
mov
in
sbb
lahf
sub
xchg
mov
dec
dec
jo
fcoml
aad
add
cmpsl
sahf
lcall
pop
test
pop
jb
inc
cmp
push
cmp
je
loope
stos
sbb
ja
shll
inc
jae
out
into
loope
test
jno
sub
mov
lcall
jecxz
inc
xchg
daa
push
jmp
lds
shll
je
cwtl
mov
fmull
push
sub
adc
cmpsb
inc
xor
and
lcall
push
clc
sub
rcll
insb
aad
or
iret
clc
mov
push
dec
adc
pop
ja
sbb
pop
pop
xchg
adc
push
xchg
inc
xchg
push
es
lret
pop
xchg
push
and
jo
and
push
fcompl
fnstsw
int
mov
mov
push
cmp
cmp
insl
lds
mov
adc
incb
cs
popf
sub
cmc
mov
dec
dec
in
xchg
add
sbb
add
fisttpll
and
popf
or
shll
cmp
mov
sbb
and
cmc
outsb
xchg
jbe
je
rclb
data16
rclb
lods
rclb
data16
iret
jp
sahf
rcll
or
inc
pop
or
lret
mov
pop
and
lods
dec
xchg
pop
and
imul
cmpsb
insl
and
int
stos
lcall
jae
inc
insb
roll
ds
movups
daa
decl
mov
lds
lock
gs
xor
mov
jbe
pop
int3
dec
jno
insb
pop
add
push
push
shll
dec
cltd
adc
add
add
pushf
push
sub
cmpsl
lcall
cmp
imul
adc
pop
rep
lahf
jl
sub
push
adc
dec
test
xchg
push
xchg
fistpl
fsubrl
mov
outsb
push
sbb
sahf
push
and
xchg
dec
push
jo
sbbb
mov
sbb
into
sbb
jb
add
mov
dec
xor
mov
sub
adc
es
sbb
vsubps
jae
push
daa
inc
roll
in
pop
add
repnz
je
cmp
sub
and
cmp
and
and
gs
push
icebp
clc
cmp
xchg
push
rclb
arpl
mov
jb
mov
rorl
cmc
orb
jne
jge
sbb
scas
cmp
lock
insb
rolb
rcrl
insb
repnz
rcrl
sbb
cmp
fiadds
cmp
mov
xchg
or
lcall
pushf
sahf
test
leave
lahf
popf
sbb
lahf
ret
mov
std
iret
aad
jle
sbb
data16
test
push
addr16
loope
loopne
das
arpl
test
lahf
movsl
sub
xchg
fimull
dec
and
lret
adc
clc
mov
shll
repz
pop
lret
push
push
dec
testb
fcompl
popf
ds
jmp
push
rcl
xchg
into
pushf
insb
filds
rcrl
lcall
adc
mov
mov
adc
push
jecxz
sbb
loope
mov
in
mov
call
sbb
sub
incb
sub
pop
mov
dec
imul
sbb
rorb
mov
jbe
rcrb
pop
mov
inc
mov
jmp
test
sbb
nop
popa
lock
pop
mov
or
add
es
addr16
mov
arpl
mov
cs
or
nop
mov
add
das
mov
sub
mov
xchg
lcall
fadd
int
cwtl
or
test
xchg
mov
push
daa
mov
je
adc
mov
fistpll
mov
jl
inc
mov
icebp
scas
jns
stos
push
inc
in
xchg
ja
mov
push
scas
adc
xor
push
push
jle
aas
mov
mov
jmp
xchg
not
or
cmp
sahf
dec
sub
in
xor
adc
rorl
and
lods
pop
mov
shll
adc
repz
xor
sbb
out
daa
or
mov
mov
inc
fwait
adc
in
xor
in
push
xor
add
in
rcll
sub
pop
in
insl
cwtl
insb
aas
imul
les
int
roll
std
std
popf
add
xor
push
adc
xchg
mov
sbb
push
outsb
pop
xchg
movsb
sbb
jbe
mov
and
ss
sub
popa
dec
fsts
sub
mov
push
inc
inc
flds
bnd
ljmp
insl
cmp
push
adc
js
add
and
xchg
rcrb
sbb
push
and
mov
nop
insb
mov
mov
and
clc
jg
fwait
sbb
je
or
jle
mov
sub
data16
mov
pusha
subl
mov
sub
push
jb
mov
pop
insl
arpl
sub
add
push
sub
sbb
rcll
dec
xor
cmp
dec
xor
lcall
or
loope
into
xchg
adc
push
fwait
insb
jecxz
in
adc
sbb
outsb
inc
push
dec
and
insb
pop
mov
push
popf
jle
fst
popf
xor
loope
sub
inc
cmp
adcl
add
mov
iret
sbb
mov
or
in
mov
inc
dec
xor
loopne
js
mov
sub
sbb
mov
xor
mov
push
sub
jne
dec
lcall
sub
cmpsl
sbb
add
adcb
ror
push
inc
sar
fmuls
jae
rcrb
mov
jle
in
negl
pop
dec
push
add
sub
push
jo
xchg
dec
cmc
into
or
xor
mov
xor
fwait
and
lret
xchg
or
sub
pop
push
dec
sbb
fisttpll
pop
outsb
sub
popf
adc
in
or
push
and
scas
adc
and
cmp
pmaxsw
inc
cltd
adc
dec
mov
scas
or
pop
in
xchg
sahf
xor
loopne
out
cmp
push
xor
mov
dec
xor
lcall
sbb
add
push
stos
cmp
lahf
sub
jno
movsb
xchg
xlat
nop
inc
loopne
test
xchg
push
add
jne
inc
xor
jae
jp
inc
iret
dec
dec
daa
sbb
sbb
rcl
mov
push
jp
jnp
push
or
or
jmp
adc
push
mov
ja
cltd
dec
add
adc
dec
or
mov
shll
adc
mov
cld
xor
sub
repz
xchg
push
ficompl
cmp
cmpsb
pop
nop
lods
in
xor
cltd
xor
push
xlat
sbb
push
cmp
cld
bound
xchg
cmp
push
cmp
fiadds
mov
jp
negl
xlat
in
xlat
cmpsl
pop
mov
jno
cmp
add
adc
ret
dec
cmp
mov
and
xlat
push
fidivl
ss
and
repnz
imul
mov
push
adc
test
loope
int3
test
dec
xchg
mov
mov
mov
lods
outsl
push
ret
ss
sbb
xor
decb
dec
xor
leave
inc
mov
or
or
std
adc
pop
inc
xor
or
adcl
pop
je
inc
lods
fwait
ja
sub
and
fidivl
lds
pop
mov
sub
cmp
and
jne
add
stc
fisubrl
out
sub
or
loope
ret
std
les
in
sbb
test
data16
pop
fdivrs
jp
dec
sbb
sbb
sbb
int
or
cmp
jge
and
mov
xor
and
aam
daa
outsl
mov
insb
dec
inc
inc
lea
aam
lcall
pop
jl
daa
push
or
push
xor
pushf
lea
sub
xor
jno
adc
sbb
sub
cmp
mov
jmp
pop
jnp
in
stos
pop
lret
sub
jl
dec
cmpb
xlat
adc
aad
insb
ljmp
pop
jp
sub
es
push
inc
loop
dec
sub
daa
test
add
mov
fcomi
addr16
nop
mov
jns
imul
xor
aam
adc
shrb
mov
mov
jo
shr
test
lahf
jp
xchg
push
shrb
inc
and
push
push
pop
inc
lret
and
ss
mov
push
mov
or
mov
pop
push
repz
lds
scas
jo
test
les
xchg
jl
and
mov
movsb
add
and
mov
inc
push
jl
lret
in
inc
lret
ds
cmc
repz
out
or
movups
mov
ret
movsb
adc
lret
mov
fidivrl
cmc
sub
fwait
inc
jbe
test
outsb
adc
xchg
icebp
aad
push
gs
sbb
push
push
jp
sbb
sub
sbb
or
mov
out
dec
lret
sub
mov
cmc
iret
negl
fiadds
fdivrs
lret
xchg
loopne
push
inc
mov
pop
pop
sbb
mov
sbb
mov
daa
out
xchg
repz
mov
push
push
and
or
or
adcl
outsl
mov
ss
push
lods
insl
sbb
lahf
orb
and
jnp
xchg
leave
jge
dec
xchg
and
and
xchg
cltd
and
sbb
push
insl
roll
rcrl
push
test
xchg
enter
and
dec
inc
pop
hlt
add
loope
cmp
push
and
repz
mov
popf
sahf
enter
scas
into
adc
sub
lods
inc
dec
test
scas
add
pop
pop
fisttpll
pop
sbb
add
cli
leave
pop
and
xor
adcl
into
sbb
xchg
adc
xchg
and
push
xchg
je
insl
lret
mov
and
aad
shll
cld
push
mov
cmp
sahf
xor
push
pop
call
pop
cmp
scas
xchg
sub
lods
and
mov
sti
xor
lret
cmpb
pop
push
sub
sub
ljmp
and
es
push
iret
adc
sahf
cwtl
and
insb
xor
add
or
push
fisttpl
sub
rorl
fsubrl
xchg
xchg
push
push
lock
loope
mov
jnp
out
and
test
shrb
sub
xchg
mov
stos
sahf
les
sub
jge
loop
mov
lcall
insl
test
jbe
jle
aas
push
fwait
inc
adc
lods
lock
mov
bndstx
cmp
push
cmc
ret
and
jl
adc
adc
outsb
mov
orb
insb
mov
cmp
ja
push
aam
push
cs
testl
xor
repz
and
es
les
dec
jae
push
mov
loop
push
lods
lahf
je
dec
rsqrtps
adc
sar
outsl
clc
mov
pop
pushf
mov
out
ret
sahf
add
dec
outsl
movsl
lcall
cmp
jno
dec
cmc
pop
lahf
mov
cs
pop
rcrb
sti
sub
dec
push
and
in
mov
cld
push
lahf
pop
sbb
iret
popl
pop
cmp
cmp
or
shll
lret
push
or
lea
push
mov
sbb
sbb
cmc
adc
scas
fldenv
xchg
and
push
xchg
push
rcrl
mov
add
mov
lahf
gs
and
lret
sbb
arpl
cli
mov
adc
adc
shll
xchg
stos
xor
stc
outsl
mov
pop
int
mov
adc
jae
pop
imul
mov
imul
dec
pusha
adc
adc
mov
cmp
sbb
pop
fdivrs
pop
cmp
sbb
push
jl
lods
or
dec
or
popf
and
xchg
and
pushf
push
mov
cmp
mov
jmp
aam
mov
sbb
jmp
xor
fildll
adc
xor
shld
fnsave
insb
sbb
cmp
pop
mov
popa
mov
jnp
sbb
jnp
gs
sub
jmp
adc
lds
movsb
mov
push
and
mov
sub
lods
dec
dec
popa
shlb
add
pop
dec
sbb
sub
stos
sahf
or
push
cmc
lahf
cli
jle
scas
sar
and
outsb
xchg
or
push
fwait
int3
scas
out
push
or
ds
roll
or
xor
sub
pop
sbb
fmul
insb
pop
sub
cmp
xor
pop
jp
mov
and
adc
sub
adc
es
cmp
repz
mov
in
cld
xchg
adc
cmp
and
mov
add
cmp
shll
cmp
sub
dec
repz
sub
dec
pop
fcomps
mov
sub
es
repnz
bound
adc
or
fcomip
xchg
sbb
aad
fidivs
cmp
outsl
mov
inc
ja
and
das
mov
and
iret
push
fadds
sbb
out
push
pushf
aam
add
loope
xchg
mov
cld
dec
fucomip
pop
add
xor
xchg
test
mov
scas
inc
imul
inc
ret
push
insb
in
inc
mov
sbb
pop
sbb
mov
mov
shrb
push
cmp
lcall
jo
cmc
pop
lcall
clc
fsubs
ret
xchg
add
loopne
push
inc
fcmovbe
call
and
lods
out
mov
mov
push
push
pushf
push
jns
jbe
add
cwtl
pop
and
and
pop
sub
jae
stos
push
test
sti
into
popa
dec
int3
rcrb
jno
cmp
insl
sbb
fisttps
xchg
ljmp
in
mov
pop
in
mov
dec
nop
cmpsl
mov
popa
inc
xchg
in
mov
pushf
or
mov
sbb
fcmovu
sbb
inc
and
jo
mov
repz
adc
pop
or
das
sub
pop
in
sbb
mov
call
adc
mov
jp
jmp
adc
adc
mov
or
leave
push
lea
cs
pop
push
mov
pop
xor
dec
sub
inc
jne
adc
mov
and
adc
loope
inc
es
das
xor
jmp
add
lcall
sbb
movups
int
or
add
aaa
aas
xor
mov
int
iret
addr16
or
fs
lret
sbb
xchg
mov
xchg
fdivl
aas
mov
pop
js
pop
out
lret
sub
repz
mov
mov
inc
push
adc
jmp
dec
cmp
inc
pop
push
hlt
adc
adcb
aam
outsl
dec
std
loope
sub
addr16
sbb
fwait
mov
cmp
mov
adc
les
scas
dec
call
mov
loop
insl
or
jns
adc
in
sbb
dec
fcomip
or
add
push
fcoml
push
hlt
adc
outsl
gs
xchg
lods
push
jnp
ret
add
jmp
leave
mov
pop
dec
daa
push
sbb
in
xlat
and
xor
fcmovbe
pop
sbb
sub
cmp
mov
dec
push
mov
push
scas
jmp
and
or
dec
push
xor
aaa
sbb
insl
setle
mov
sub
push
mov
or
sub
movsb
aad
pop
add
cmp
xchg
sbb
mov
test
mov
mov
push
dec
mov
test
out
mov
dec
inc
pop
int
push
out
xor
ficoms
sub
push
frstor
sub
les
add
call
adc
sbb
add
sub
leave
insb
les
pop
push
lea
pop
jo
push
ud2
pop
jg
push
sub
adc
out
sbb
loop
mov
aaa
xchg
and
mov
cmpsl
fldt
jl
mov
popf
mov
add
sub
sbb
sbb
mov
adc
dec
iret
add
push
mov
push
push
and
push
add
cmp
aas
jmp
cmp
cmp
faddp
cmp
push
mov
xor
xor
jmp
pop
inc
sbb
insb
test
mov
push
mov
or
inc
aad
cmp
repz
ds
sub
fstpl
pusha
lcall
ja
dec
add
and
dec
sub
jbe
inc
in
mov
mov
in
call
mov
add
xchg
fiaddl
lret
or
xchg
movsb
cmp
stos
push
insb
adc
sysenter
clc
add
scas
mov
xchg
or
push
ja
popl
pop
or
aad
sub
imul
imul
sub
fmull
gs
sub
mov
lahf
sbb
pop
sahf
pop
repz
popf
mov
inc
lret
cmpsl
leave
mov
fchs
jecxz
js
cmp
mov
sbb
outsl
sub
or
mov
jns
nopl
cmpsl
imul
dec
push
pop
lds
pusha
push
add
xchg
pop
loop
mov
and
xor
stc
mov
push
subb
lret
mov
jo
push
mov
popa
stc
sbb
dec
mov
fincstp
rorl
repz
enter
das
fildll
or
cmpsb
lret
cltd
lret
or
fimull
aaa
mov
dec
std
and
lock
cmp
jecxz
loopne
pop
sub
add
fwait
sbb
xchg
push
daa
cmp
add
pop
call
pop
sarb
test
mov
mov
or
idivl
xor
pushw
add
mov
fisubrl
mov
mov
test
jecxz
or
daa
cmpsl
push
mov
or
sbb
push
imul
and
mov
pushf
mov
dec
cs
das
xchg
inc
dec
mov
outsl
decb
lcall
fstps
test
and
xlat
inc
sbb
pushf
mull
sbb
shrl
imul
sbb
ficomps
mov
mov
jmp
mov
insb
and
cmp
push
xchg
sbb
outsl
fnsave
inc
aam
xchg
mov
jl
pop
pop
mov
repnz
jl
sub
sub
imul
and
inc
and
scas
push
sti
movsb
mov
je
xchg
mov
push
push
sahf
out
adc
stos
repnz
es
and
daa
scas
xchg
fs
push
pushl
jmp
in
sub
shrb
add
lahf
std
inc
sub
jmp
sub
and
or
repnz
out
cs
dec
sbb
mov
mov
ret
and
jno
je
inc
or
fwait
lret
and
stc
dec
or
and
pop
adc
aas
or
sbb
push
cwtl
lods
fildll
hlt
dec
adc
rorb
pusha
aam
insl
cmc
and
pushl
add
mov
out
shlb
sahf
nop
and
icebp
jp
repnz
cltd
dec
add
adc
negl
ret
dec
fimull
mov
aam
popf
je
xor
dec
insl
xchg
jmp
jp
inc
fwait
fcoml
add
pop
and
push
mov
scas
sub
cmpsl
jmp
add
pop
xchg
jbe
cwtl
mov
outsb
in
mov
imul
out
dec
test
popf
mov
std
xlat
adc
cld
jg
xor
xor
or
insl
inc
mov
fmuls
cmc
push
loop
sbb
movsl
push
pop
mov
lock
out
shrl
adc
jb
aam
dec
cwtl
lcall
adc
into
ljmp
sub
imul
xor
xchg
inc
cmp
inc
sub
add
aaa
movl
daa
int3
in
decb
inc
and
movsl
sub
popa
sbb
shlb
cmp
dec
push
sbb
mov
hlt
cld
test
fimull
std
dec
les
cmovg
mov
cs
int
mov
pop
cmp
jge
andb
jns
mov
scas
pop
ja
repz
in
shll
dec
addr16
fwait
bound
dec
ret
cmp
adc
scas
push
fnsave
jo
repz
or
sub
xchg
fucomp
xor
pop
pushf
stos
add
aas
fisttps
fists
cli
in
mov
cwtl
push
or
sbb
sub
push
stos
add
lcall
mov
pop
pop
adc
fwait
and
or
pop
adc
imulb
pusha
xchg
adc
mov
scas
mov
out
insb
sahf
sub
shrl
cli
sbb
xchg
flds
jnp
inc
push
das
and
lret
add
jno
lock
mov
mov
ds
push
push
pop
and
in
mov
loopne
push
mov
int
mov
in
daa
push
mov
or
adc
jnp
js
stos
pushf
clc
xor
jnp
loopne
dec
in
dec
loope
push
enter
clc
es
movsb
fistpl
daa
adc
int
add
push
mov
dec
andb
inc
adc
outsl
lods
mov
test
pop
sub
dec
xchg
mov
cmp
cli
xchg
and
call
repz
sbb
sahf
popl
mov
cmp
sbb
sbb
fs
lock
inc
or
sbb
into
mov
mov
pop
or
dec
push
cmpsb
in
femms
adc
jbe
ljmp
xchg
pop
sbb
or
push
dec
mov
add
sub
pop
lods
push
fistps
movsl
pop
roll
and
jns
and
pusha
and
push
fidivs
sub
sti
insb
cmp
add
mov
ss
leave
add
and
jno
add
ret
push
rorl
sbb
fidivl
bound
sbb
inc
fcompl
xchg
mov
cmp
xchg
xchg
sbb
pop
sub
pop
add
sub
adc
add
mov
pop
aad
out
nop
das
sbb
cs
inc
push
dec
out
sub
pop
adc
mov
sub
sbb
aaa
sub
stos
mov
and
and
sub
loope
push
push
adc
icebp
aam
xor
dec
push
aas
and
imul
xchg
push
pushf
enter
xchg
dec
or
and
mov
or
lret
sub
fdivrl
sub
stos
sub
sub
lcall
es
sub
mov
push
in
ja
push
and
aam
cmp
jbe
popf
or
and
test
sbb
adc
push
pop
into
inc
lds
sub
jno
inc
shll
xor
and
xchg
xor
ds
repnz
movsl
cmp
and
sub
fistpll
pop
pushf
mov
ss
pop
xchg
divb
pop
icebp
loop
daa
popf
insl
daa
fmull
push
in
leave
in
fdivr
xchg
jne
imul
mov
cld
repnz
cltd
inc
enter
jnp
sbb
jmp
std
lcall
call
lret
mov
shl
shrl
popf
ja
fldcw
insl
jecxz
sbb
xlat
pop
sub
mov
jno
push
push
adcl
push
movsl
push
aas
popf
loope
pushw
mov
nop
repz
mov
sub
sub
clc
fisubrl
or
mov
outsb
pop
adc
and
hlt
mov
or
dec
mov
sub
push
js
aad
add
inc
sub
sub
int
idivb
cltd
jns
jae
and
pop
add
shrb
pop
stos
push
inc
pop
int
jmp
leave
lcall
mov
xchg
out
adc
int3
into
nopl
lret
pop
daa
loop
jno
pop
xor
fdivrs
and
adc
test
test
sub
adc
lds
jecxz
jns
maxps
shlb
adcl
adc
into
fcmovnbe
dec
mov
jo
pop
sbb
pop
repz
lcall
outsb
pop
xchg
push
pop
pop
leave
inc
lods
push
cmp
xchg
and
and
shrb
psubsw
push
dec
pop
data16
xor
adc
adc
scas
stc
push
dec
and
es
insl
sub
outsb
push
ret
mov
outsb
jle
xor
push
adc
ret
or
xchg
mov
fwait
sub
adc
leave
mov
and
add
mov
movsl
aam
adc
in
pusha
jle
dec
adc
sbb
mov
or
push
lret
cmp
jecxz
push
pop
in
or
push
cmp
or
jns
mov
mov
lods
lret
inc
cmpsb
mov
sub
popa
or
shl
push
push
xor
cmc
sub
sub
push
lret
stos
mov
sub
sbb
dec
cmp
mov
xchg
leave
xchg
adc
fdivl
xchg
lods
pop
inc
jp
pop
mov
fisubl
jp,pt
cmpsb
pop
cli
jns
mov
mov
add
scas
push
sbb
scas
dec
or
adc
mov
dec
push
imul
or
xchg
or
jecxz
popa
in
rcrb
mov
xor
jb
ss
fimuls
enter
fcmovb
mov
lret
cmp
ret
addr16
pop
xor
push
ficoml
push
lret
or
adc
add
push
movsl
fisubrs
jge
leave
xchg
aam
ss
pop
mov
and
aad
fmulp
addr16
repnz
sbb
push
xchg
insb
cwtl
das
add
mov
cld
pop
adc
dec
sbb
in
stos
mov
sbb
loope
dec
imul
or
jmp
imul
in
inc
adc
jle
ss
insb
sub
imul
pushf
or
clc
aam
lcall
adc
cmp
push
mov
pop
or
mov
mov
stos
dec
mov
leave
pop
mov
lods
cs
sbb
or
ja
sub
xchg
jbe
and
sbb
jo
xchg
imul
dec
mov
mov
out
pop
or
arpl
dec
push
dec
dec
sub
sbb
lcall
pop
insb
add
mov
lahf
xchg
divps
lods
pop
out
adc
add
dec
ret
xchg
fs
loopne
mov
inc
xchg
cmp
or
add
and
rorb
xchg
mov
lods
or
fwait
sbb
ret
and
in
push
push
xor
pusha
push
push
loope
sbb
pop
jle
clts
out
pushf
test
cs
lds
mov
dec
xorb
pop
cltd
cmp
popf
iret
js
sub
outsl
cli
add
xor
sub
daa
hlt
adc
inc
adc
or
lea
fldl
mov
add
push
rcrl
xlat
sub
imul
inc
cld
push
in
lds
xor
ret
mov
shl
xchg
dec
push
push
daa
fs
sub
xor
sti
cmp
aam
out
pop
enter
loope
fcmovnb
in
sub
sar
cmp
sub
lret
cmp
cmpsl
mov
cs
in
pop
fcoml
insb
push
sub
inc
ss
mov
sub
cpuid
push
xchg
push
dec
int
pop
adc
mov
decb
test
shlb
dec
sub
inc
or
insl
in
pop
pop
sub
mov
or
shrl
sbb
mov
and
mov
cmp
cmpl
cltd
sbb
or
mov
outsb
dec
lret
and
sahf
out
sahf
pop
imul
aad
ja
jbe
lahf
and
push
mov
inc
xor
pop
inc
mov
bound
les
sahf
dec
push
sbb
int
cli
setbe
rcll
add
lret
xchg
es
or
mov
fcomps
fdivs
out
mov
xor
das
mov
jecxz
hlt
fisttpll
lret
inc
sbb
cltd
jecxz
popf
jne
mov
sbb
pop
dec
xchg
mov
cwtl
adc
cld
lea
fsubrs
dec
push
cmp
nop
lds
mov
sbb
pop
cmp
add
rorl
das
data16
or
adc
sbb
fidivs
or
xchg
js
push
adc
pop
and
or
fmull
push
dec
dec
loope
sahf
mov
das
inc
lahf
xchg
pop
sub
loope
push
mov
cmp
pop
aam
adc
sahf
lahf
ds
rorb
inc
fs
or
pop
mov
insb
imul
incb
push
or
xor
aas
sub
adc
and
and
sbb
push
cmp
push
or
jne
push
cmp
mov
rorl
pop
push
imul
repnz
addr16
les
lret
dec
xchg
stos
adc
out
adc
push
or
orl
pop
fnstsw
fstp
dec
push
xchg
jecxz
dec
pop
andl
mov
mov
scas
dec
mulb
les
fidivl
adcl
xchg
les
cmp
cltd
sub
sbb
jmp
push
cli
fcmovbe
aaa
add
jno
fs
mov
es
popf
inc
pop
jle
xlat
push
mov
int3
mov
aad
sbb
es
clc
cmp
xchg
or
into
jg
pushl
jle
adc
jnp
xchg
test
add
mov
aaa
mov
test
out
dec
or
mov
fcoml
push
jle
icebp
xchg
fmul
push
decl
sahf
mov
mov
cltd
cmpsl
sbb
fmuls
sub
out
jb
cs
pop
lods
jg
cmpsb
or
in
inc
push
dec
repz
mov
lods
outsb
jmp
scas
dec
fldcw
mov
sbb
sbb
dec
jecxz
pop
push
pusha
sub
arpl
popa
sbb
lret
sbb
loopne
and
mov
push
ja
mov
aam
sbb
push
aas
dec
dec
call
cwtl
ret
add
xor
sbb
push
insl
jnp
xchg
push
sub
pop
ficoml
lock
test
mov
add
jmp
pop
sub
dec
and
movsb
jmp
adc
mov
fnstcw
adc
rcrl
xlat
orl
sarb
cmpsl
fisubrs
mov
lea
pop
nop
dec
fdivrs
sbb
cmpsb
push
sbb
les
repz
je
pop
shr
or
pop
insl
orb
cmpsb
popa
pop
push
cmp
stos
or
or
push
jno
ja
mov
pop
pop
xchg
sbb
test
pop
or
rorb
into
mov
jne
mov
mov
add
call
push
leave
mov
repz
pop
mov
cmpsl
pop
cs
int3
fdivrl
outsl
aaa
fiaddl
rclb
mov
push
pop
mov
add
sbb
out
jbe
insb
rorb
adc
cmp
add
incb
sub
inc
dec
lahf
mov
and
adc
insb
mov
jecxz
or
or
xor
ljmp
lods
imul
add
add
mov
sarl
xor
nop
and
ficompl
xor
mov
adc
jb
xlat
scas
ss
and
xor
and
cmp
popa
jb
and
push
push
sbb
pop
pushf
aad
push
xor
or
fadd
fisttpl
jecxz
push
das
pop
pop
loop
repz
sarl
push
faddp
sub
fidivrl
lahf
mov
arpl
pop
cmp
es
xchg
inc
mov
push
ss
xchg
push
testl
js
pop
andps
adc
jecxz
mov
jl
sarl
scas
sub
lret
repz
pop
test
pushf
jo
xor
xchg
push
and
mov
jge
sarl
xor
mov
popa
sbbb
scas
dec
leave
dec
lods
mov
imul
and
and
pop
jecxz
dec
cwtl
rorb
cld
imul
adc
dec
add
sbb
pop
jecxz
fisubrs
adc
mov
adc
in
int3
sbb
test
test
jbe
pop
pop
cmc
and
sbb
xchg
xchg
das
dec
scas
lahf
out
in
into
roll
sbb
lret
sbb
sbb
stc
stc
cmp
adc
pop
mov
xor
and
and
nop
sub
push
nop
cmpsl
lods
jge
mov
sbb
mov
inc
xlat
or
pop
subl
jge
and
orb
in
push
cmp
xchg
nop
cs
movsb
mov
fwait
popf
ja
xor
cli
stos
test
stos
into
pushf
and
pop
es
outsl
dec
sbb
lods
ss
fbstp
add
or
pop
push
mov
jmp
xchg
adc
sbb
dec
add
adc
fwait
fiadds
mov
mov
inc
cs
sbb
mov
push
movsb
imul
jno
pushf
cmp
or
ret
aam
ja
dec
lods
xchg
add
int
cmpsl
pop
pop
decl
lcall
psubsw
inc
and
repz
or
fimull
addr16
movsl
add
jbe
pop
push
aad
jp
repnz
aam
decl
fldcw
add
pop
pop
test
or
je
sbb
sub
or
or
repz
jmp
pop
jne
mov
pop
or
int
sbb
pop
mov
adc
mov
jmp
mov
or
imul
cwtl
jle
mov
sub
fs
scas
je
mov
shr
cld
xor
popf
and
ret
fwait
mov
into
mov
pop
pop
mov
push
dec
dec
lahf
add
sub
fdivs
nop
stos
jnp
or
jl
add
test
xchg
fiadds
sarb
jmp
jg
test
push
test
in
xor
loopne
std
pop
mov
ficompl
ret
loope
and
lret
dec
fidivl
sbb
test
sahf
push
mov
int3
popa
ds
pushf
dec
dec
subl
aaa
leave
and
mov
cs
pushf
cmp
jg
push
jae
push
push
push
mov
sub
hlt
and
xchg
mov
push
lcall
push
inc
sbb
sbb
icebp
mov
mov
add
out
and
addl
mov
imul
out
outsl
lcall
cmp
lahf
clc
mov
je
cmp
dec
adc
loopne
cwtl
sub
arpl
aad
sub
cmp
into
subl
mov
adc
sbb
ja
rcll
sahf
aad
sbb
cs
repnz
adc
dec
xchg
xlat
push
in
jecxz
aam
xchg
or
shl
popa
or
push
or
and
dec
test
mov
xchg
sahf
xchg
xchg
add
inc
push
and
mov
sbb
push
adc
sub
fmull
icebp
stos
add
add
pop
xchg
enter
sub
movsl
cld
test
push
dec
bound
fs
inc
adc
push
scas
movsl
push
paddsw
es
pop
sub
adc
xchg
adc
mov
loopne
push
dec
push
fdivr
cltd
fisttpll
inc
fldl
sbb
add
sbb
fimull
sbb
push
sbb
sbb
lods
xor
mov
lret
add
enter
xor
fcoml
stc
pop
scas
pop
jmp
cmp
pop
outsb
out
mov
and
int3
mov
adc
inc
and
mov
jl
cltd
xchg
div
inc
cwtl
push
adc
push
push
cmp
int3
lret
stc
ss
bswap
pop
push
cmp
imul
fcoms
data16
cmp
and
sub
inc
idiv
sub
pop
sbb
pop
test
sbb
push
sbb
cwtl
and
xlat
jecxz
sub
fists
frstor
bound
outsb
pop
xor
lcall
cmc
jecxz
fistpll
xor
inc
sbb
inc
or
mov
ffree
xchg
sbb
add
fidivrl
jae
in
inc
and
sub
out
sbb
into
stc
pop
sub
ficompl
nop
pop
sbb
cmp
xor
dec
xor
sbbl
xlat
repnz
in
or
sub
dec
in
or
xchg
inc
mov
dec
jmp
ja
xchg
dec
adc
sahf
imul
xlat
test
and
sbb
push
mov
mov
mov
xchg
sbb
xchg
mov
mov
sbb
xchg
lret
and
mov
fisubl
rolb
add
and
insl
outsb
and
and
daa
subb
shrb
sbb
je
fisttps
dec
sub
cmpsb
les
cmovl
sub
sbb
imul
adc
jmp
sub
pusha
xchg
mov
xor
dec
lahf
jecxz
xchg
das
push
cltd
ss
cmp
or
outsb
pop
xchg
pusha
sbb
insb
repz
negb
outsb
std
xchg
sbbl
ja
adc
out
xor
xor
cs
shr
or
sti
dec
jl
dec
pop
mov
fwait
and
daa
lcall
mov
dec
push
sub
sub
mov
imulb
repz
xchg
xor
ja
movhps
sahf
xchg
loop
daa
imul
adc
sbb
outsb
rclb
sti
xchg
insb
aad
sbb
pop
sbb
outsb
sub
xor
dec
ljmp
sbb
enter
mov
or
xor
and
sub
and
inc
loopne
jne
mov
arpl
enter
je
loope
inc
dec
adc
jns
je
mov
mov
int3
push
and
and
roll
sbb
decb
dec
push
mov
or
cmp
adc
lret
cmp
rorb
or
or
das
mov
and
pop
dec
and
sbb
stos
lahf
icebp
orl
push
sub
lods
add
and
jb
push
dec
fnstcw
iret
scas
sbb
aaa
outsb
icebp
and
dec
or
mov
hlt
or
mov
in
inc
mov
inc
push
es
xor
jg
push
in
push
mov
and
adc
in
xor
xor
or
inc
repnz
and
jae
or
xor
push
mov
stos
xor
pop
pop
fcoms
or
rcl
push
or
int
pop
or
mov
sub
or
add
jle
imul
int
xor
cli
and
add
sub
and
fiadds
dec
xor
std
jle
fidivrl
inc
or
jbe,pt
add
mov
xor
fdivl
add
adcb
mov
pop
ficoml
fcmove
mov
and
test
cmp
pop
pop
out
mov
sbb
scas
sbb
adc
push
int
in
sbb
lock
xchg
lcall
popa
and
in
shrb
cmp
push
and
imul
rorl
and
pop
mov
add
and
loopne
inc
sbb
lock
arpl
or
loopne
icebp
loop
mov
add
jae
ss
push
push
outsl
mov
adc
adc
and
ljmp
and
mulb
pushf
js
je
pop
adc
dec
lahf
mov
inc
call
add
addr16
cmc
dec
movsl
das
jp
jne
into
add
hlt
stc
cmp
mov
lcall
rorb
dec
adc
imul
xchg
rclb
iret
rolb
gs
ds
xor
cmp
pusha
adc
pop
in
repz
and
adc
std
add
punpckhdq
ds
fildll
hlt
adc
add
iret
std
dec
aam
sub
inc
lock
mov
addr16
mov
and
sbb
faddl
out
scas
add
xchg
bound
movsb
sbb
dec
pop
daa
push
scas
xlat
adc
push
cmp
mov
movaps
xchg
push
jno
and
dec
sbb
sub
insl
loope
xor
aas
shrl
popf
push
adc
dec
lea
cltd
or
inc
imul
call
ss
jmp
lods
and
xchg
into
cmp
and
pop
repz
call
outsb
movsb
das
shlb
dec
add
mov
test
ucomiss
mov
mov
sub
mov
or
mov
mov
pop
dec
pop
daa
testl
sbb
push
rep
xchg
jne
add
decb
call
mov
jg
jb
rclb
aaa
add
outsb
jns
inc
mov
mov
ja
sbb
insl
loope
sub
int3
in
into
ja
lahf
lods
sti
daa
loope
jmp
loopne
mov
leave
sub
lret
inc
fdivl
inc
mov
jns
mov
sbb
mov
scas
adc
leave
fwait
test
mov
jp
add
int
repnz
dec
addr16
pop
push
push
mov
sub
stos
inc
notb
ss
sub
dec
xchg
xchg
imul
push
jl
dec
lods
add
packuswb
sbb
lret
sub
cmc
insb
mov
and
aas
jle
mull
mov
adc
and
je
cli
sub
jmp
leave
adc
inc
int3
jns
aam
mov
lea
into
enter
sahf
push
rcrb
repz
fildl
sbb
mov
dec
adcb
push
pop
aas
repz
hlt
jb
cld
mov
sub
push
sub
jecxz
jg
outsb
cmp
xchg
in
mov
xchg
or
aam
mov
fsubrp
push
scas
mov
push
lds
mov
inc
pop
test
sbb
scas
cmp
rcrl
mov
mov
or
mov
jno
add
dec
adc
fwait
adc
push
xadd
mov
fs
paddq
dec
sar
mov
ds
sub
in
or
fidivrl
or
pop
inc
mov
sub
adc
das
es
pop
insb
sbb
adc
test
syscall
orl
not
push
imul
out
sbb
dec
jp
sbb
cli
lcall
adc
push
ss
push
stc
mov
mov
popf
or
sub
mov
dec
jmp
and
dec
and
cwtl
test
xchg
lcall
cmp
out
cmp
xchg
push
sahf
inc
sbb
test
addr16
mov
or
adc
or
mov
sets
or
ret
mov
cmp
xor
push
fiadds
leave
ud2
xchg
lcall
add
cmp
jge
mov
cmp
jnp
pusha
aaa
rclb
dec
daa
mov
adc
pushw
and
mov
cmpsl
addl
xor
stos
rorb
sbb
xchg
inc
or
mov
xchg
xchg
and
and
into
insb
stos
xor
sar
rorb
sub
jcxz
mov
pop
test
or
or
pushf
and
jge
sahf
xchg
neg
cmp
ficomps
and
pushf
mov
push
mov
inc
jne
cmp
cmp
dec
and
add
inc
aad
lods
xor
push
add
mov
in
hlt
xchg
sti
dec
jecxz
and
sahf
or
mov
ljmp
push
cli
lcall
xor
jle
faddl
add
and
pop
pop
outsb
pop
stos
fwait
and
pop
mov
sti
inc
or
and
sbb
or
ret
dec
sarl
or
or
mov
sub
cmp
mov
push
add
mov
sahf
and
addr16
inc
dec
in
test
movsb
cltd
pop
in
jae
and
pop
es
or
xor
jl
jecxz
or
adc
insb
jp
push
sub
or
stos
sub
mov
add
mov
call
cmp
inc
mov
inc
sub
and
push
cmp
fwait
out
sar
pop
lahf
pop
adc
sbb
and
int
repnz
pop
pushf
iret
mov
shll
mov
xchg
and
adc
iret
adc
movsb
push
add
mov
mov
outsl
loopne
jle
mov
mov
fwait
or
and
push
mov
fs
sbb
sub
loopne
popf
test
cmc
pop
rclb
ret
cs
sbb
es
aad
cmp
mov
mov
arpl
and
pop
adcl
aam
pop
addr16
stc
sahf
leave
insl
dec
aad
sbb
fdivrl
lods
loope
inc
sub
stos
xchg
mov
mov
fldcw
pop
sbb
pushf
add
ja
in
negb
cmp
pinsrw
cs
add
es
add
mov
push
dec
data16
outsb
mov
bound
stc
subl
adc
sahf
xor
dec
cltd
pop
in
lds
enter
dec
sub
adc
xor
fs
test
imul
pop
popf
popf
mov
jo
adc
fs
dec
lahf
and
and
and
push
and
and
jmp
dec
lods
addr16
jl
mov
cmp
pop
hlt
mov
mov
outsb
adc
pop
jg
imul
ja
cmc
inc
mov
xchg
fisttpl
loopne
outsb
jmp
ja
decl
cmp
fdivp
push
insb
inc
jnp
cmp
mov
push
push
inc
cwtl
ret
adc
inc
cs
out
dec
and
jecxz
pop
cmp
cs
inc
mov
dec
pop
xor
push
and
lods
test
and
fs
in
jne
ljmp
out
in
into
imul
sbb
stc
sbb
mov
fsubrs
in
sub
popf
movsl
push
pop
or
push
sarl
jle
sbb
inc
and
out
fcoms
mov
sbb
xchg
lods
push
fdivrs
adc
cmp
movsb
push
inc
mov
dec
and
popf
aad
push
xor
daa
sub
sbb
popa
sbb
daa
int
add
scas
mov
cs
push
sarb
das
aam
xor
mov
loope
or
cmp
lcall
mov
cmp
outsb
cmp
add
lret
mov
mov
ficomps
mov
and
aad
lds
clc
aam
xlat
mov
popf
popa
pop
inc
xor
out
pop
xor
pop
cmpsl
lret
ret
ss
fwait
xor
imul
ret
adc
int
pop
cmp
or
fprem1
xchg
inc
or
add
push
pop
in
das
sub
push
daa
int3
inc
pop
adc
sbb
fabs
lcall
pop
setns
mov
push
sbbl
xchg
cmp
lcall
inc
dec
or
inc
mov
or
sub
loopne
dec
push
les
and
push
loope
decl
loope
mov
fidivs
pop
jne
je
push
sub
mov
fsubp
cmp
or
push
cmp
inc
ljmp
fists
pop
add
fs
negl
xchg
mov
nop
push
adc
cmpsl
sahf
or
js
cs
aas
sub
cmp
adc
xchg
push
sti
mov
iret
data16
dec
or
or
outsb
je
sbb
orb
adc
int
pop
pushf
mov
or
push
jle
ret
rorl
test
or
movsb
push
push
dec
sub
cmp
movsb
push
outsl
pusha
test
aad
sub
push
bound
push
roll
inc
ds
ja
dec
lcall
cmc
and
lods
hlt
loopne
mov
cmp
out
out
fcoms
movsb
xlat
jecxz
xchg
inc
testl
or
jle
mov
push
jle
sub
loopne
fwait
scas
or
ret
push
lahf
mov
inc
hlt
and
fcomps
pop
shlb
mov
cs
xchg
sbb
fstl
add
inc
xorb
lcall
sti
test
jb
out
cmp
fistl
int
es
fildll
in
out
xor
fwait
sub
adc
mov
push
cmp
rorl
orb
push
mov
aas
push
sub
aas
push
lahf
xlat
aas
rclb
lods
bound
into
ljmp
xchg
and
pop
mov
popa
enter
mov
cmp
push
cmp
jbe
push
sahf
or
ret
fsubrs
xor
push
xor
mov
add
sarl
mov
push
or
in
mov
rcrl
push
mov
inc
pop
stc
mov
xor
sarb
int3
mov
ds
out
shl
shrb
sti
das
push
aad
dec
or
jle
outsb
sub
sarb
pop
cmp
adc
fiaddl
inc
adc
in
pop
out
rcl
out
es
lcall
push
mov
sbb
jmp
imul
lcall
fcoms
or
insb
xchg
inc
sub
cmp
xchg
mov
popl
ds
add
popf
push
std
inc
ds
xchg
sarb
adc
repnz
sar
sub
pushf
popf
adc
jecxz
rorl
sub
scas
push
ret
dec
add
pop
xchg
dec
imul
inc
push
mov
sbb
or
pusha
mov
imul
inc
cmp
outsb
dec
adcb
rcll
roll
jecxz
scas
repz
inc
fstl
push
sub
cmpsb
xor
xlat
sbb
sbb
jno
gs
sub
jle
fsub
push
xor
jno
sbb
jno
cs
sbb
lds
adc
dec
jne
test
and
push
insl
cmp
lds
testb
movsb
push
mov
sub
shrb
andl
mov
xor
test
xchg
mov
clc
jmp
inc
xorl
xor
sub
cmp
push
aaa
xor
jbe
sbb
add
xor
jno
ss
fldl
fistpl
push
cmpsl
cs
xor
push
add
dec
push
mov
mov
mov
sbb
dec
test
inc
mov
fwait
xor
loope
mov
or
xor
ror
lods
sub
shll
sbb
fisttps
xor
lea
xchg
imul
xorl
xchg
mov
loope
mov
das
cmc
and
jno
push
xor
sub
sbb
fildll
mov
push
inc
add
stc
dec
les
inc
scas
xor
in
out
or
jl
mov
push
hlt
insb
stos
xchg
lret
push
pushf
lods
xor
loopne
sbb
enter
and
loopne
jp
add
clc
or
ret
jnp
testb
aas
int3
scas
mov
cmpb
shrb
mov
or
fwait
pop
mov
push
adc
and
xchg
adc
adc
adc
inc
sbb
push
adc
jecxz
sub
mov
mov
and
dec
xor
push
and
sahf
rorl
sbb
dec
outsl
icebp
sbb
jp
fisttpl
jg
mov
cmpsl
adc
xchg
or
jmp
pop
daa
mov
lds
pop
mov
ficoms
xor
push
jns
pop
xor
adc
stos
nop
sbb
fisubrl
into
push
pop
lret
test
imul
xchg
mov
jmp
js
mov
or
adc
adc
es
mov
rorl
fwait
dec
ret
rorl
adc
sbb
xchg
and
out
bound
jo
test
aas
int3
and
test
fistps
pop
cmp
fadd
sub
mov
and
sbb
sub
lret
jb
ror
or
and
inc
stos
sub
stos
lcall
adc
jmp
fdivrs
inc
das
aad
push
insb
pop
cwtl
ljmp
hlt
je
cmp
cld
mov
xor
xchg
push
jle
cmpsb
mov
dec
mov
add
shll
sbb
sub
insb
adc
frstor
adc
add
cmp
test
sub
jmp
rolb
xor
mov
js
ljmp
push
fwait
dec
adc
lea
outsb
dec
lret
push
clc
iret
ljmp
pop
shrb
and
push
sub
cld
rcll
mov
dec
add
in
sbb
stc
mov
xchg
add
sbb
adc
dec
xchg
inc
mov
loopne
dec
lret
stos
cmpl
inc
xor
ss
adc
bswap
aaa
mov
lahf
jp
lret
rclb
ret
popa
fimuls
add
lods
pop
dec
push
add
mov
push
jp
mov
add
pop
les
and
fadds
pop
fucomp
jmp
stc
xor
fidivl
sbb
lret
shl
int3
cltd
adc
ficoms
gs
stc
add
adc
mov
faddl
or
cmp
dec
leave
cs
lret
je
mov
push
fdivrl
test
pop
and
mov
insb
movsl
sub
je
popa
outsl
lret
push
pop
mov
orl
mov
jge
jp
push
int3
ds
add
mov
pop
arpl
in
cs
repz
insl
push
mov
pop
mov
mov
inc
mov
shll
cmp
scas
inc
pop
mov
insb
adc
mov
inc
add
push
jecxz
push
repnz
imul
inc
mov
pop
jne
jnp
pop
xor
int
mov
mov
rcrb
addb
xchg
mov
mov
stos
adc
dec
dec
in
sub
sbb
push
mov
mov
lock
push
cmp
dec
pop
iret
xchg
sbb
inc
mov
inc
dec
inc
cmp
jecxz
xor
iret
in
or
fwait
sbb
icebp
imul
ljmp
stos
inc
out
adc
sbb
xor
add
jb
inc
xor
outsb
xor
xor
or
mov
push
sbb
fcmovnb
dec
mov
or
push
xor
aaa
cltd
push
loopne
push
adc
or
cmp
xor
testl
fmull
dec
test
mov
push
les
jb
sbb
sti
dec
stos
mov
scas
mov
mov
fstenv
call
cmp
xchg
mov
jp
pop
xor
pop
pop
jae
fwait
pop
xor
sbb
repz
and
out
mov
rorb
and
push
sbb
or
xlat
cli
push
adc
mov
cmp
add
mov
loop
loopne
pop
sahf
out
adc
lret
gs
xor
pop
mov
test
or
fwait
push
sahf
add
arpl
jecxz
xchg
adc
push
sbb
or
or
mov
add
cmp
ja
inc
mov
loope
jp
or
add
adc
in
fdivrs
lret
in
pop
jmp
mov
sbb
pop
jno
pop
push
mov
push
push
or
pop
add
dec
imul
js
pop
mov
and
cli
inc
mov
jbe
sub
fdivrs
jl
les
fadd
xchg
adc
sbb
and
js
and
cwtl
lret
imul
in
ds
mov
add
cmp
inc
adc
inc
ficoms
mov
sub
and
mov
push
outsb
dec
aas
sub
push
sbbb
xchg
jnp
outsb
add
pushf
xor
aam
cld
cmp
mov
jp
shlb
push
sahf
mov
scas
ss
mov
inc
inc
xchg
fsubr
aas
jecxz
sbb
pop
mov
jl
and
subb
mov
rcrb
sub
fdivrs
and
outsb
shlb
sahf
fadd
lret
test
inc
pop
cmp
xchg
fwait
mov
sbb
int3
pop
sbb
popf
imul
mov
adc
into
inc
adc
ljmp
sub
lods
fdivs
add
in
test
or
add
loop
clc
iret
imul
inc
cmp
add
fcomps
out
dec
push
das
sub
dec
int3
pop
xchg
push
xor
jmp
jno
insb
std
jae
xor
mov
insl
ljmp
xor
fmulp
push
fs
push
xchg
lahf
pop
xchg
sbb
xor
or
push
xor
xchg
cmpsb
int
dec
xchg
insb
scas
or
int3
in
fisttpll
aas
pand
loopne
adc
jmp
sub
xor
stos
sub
test
xor
or
loope
sub
inc
sub
push
mov
mov
sbb
or
sub
push
dec
add
dec
inc
xchg
adc
adc
jne
scas
push
leave
dec
push
into
jecxz
gs
adc
aam
out
and
adc
cs
stos
in
or
pop
cmp
std
and
insl
lahf
sbb
mov
add
xor
lahf
sbb
push
loope
enter
mov
xchg
repz
push
out
or
cs
and
xlat
sbb
mov
fwait
sub
and
xchg
xor
inc
push
out
aam
jb
jo
popa
xchg
add
fldenv
lock
mov
push
mov
in
push
loop
insl
sub
jnp
cmp
jns
cmp
dec
scas
dec
adc
xchg
mov
sbb
les
dec
dec
add
jo
xchg
xchg
imul
adc
mov
xor
jo
pop
fcoml
in
pop
nopl
in
and
add
inc
loope
sbb
daa
das
mov
aam
outsb
fcompl
xchg
mov
ljmp
add
test
jle
lcall
push
dec
fsubp
inc
aam
push
dec
dec
xlat
pop
pop
lcall
ss
mov
sbb
push
iret
adc
into
mov
push
cmpsl
inc
iret
xchg
cmp
filds
push
cmp
mov
sbb
xor
xchg
repz
mov
sbb
mov
jl
lea
xor
adc
sbb
mov
daa
inc
test
jns
jg
testl
and
lret
dec
scas
dec
sahf
pop
mov
adc
sbb
outsb
ret
push
lcall
sbb
mov
lret
xchg
lods
loope
cs
pop
pop
mov
add
aad
xor
jns
sub
jo
js
leave
add
and
scas
int
push
sbb
mov
push
daa
mov
stos
fisttpll
mov
jp
das
adc
aaa
xchg
pop
mov
mov
out
imul
shrb
push
cmp
xlat
push
cmpsl
xlat
into
add
mov
lahf
sbb
dec
mov
into
add
sub
iret
lcall
and
mov
add
out
or
mov
xor
hlt
pop
push
dec
aaa
sub
or
sbbl
lret
pushf
imul
jns
cli
xor
in
pop
imul
jg
push
out
shll
and
add
jno
and
mov
dec
pop
dec
xchg
dec
cmp
lret
andl
mov
aad
dec
addb
or
imul
scas
scas
stc
mov
sub
sbb
fwait
test
inc
test
cs
lret
ret
xor
pop
cmp
pop
sti
mov
stos
repnz
cmc
sub
dec
sahf
or
mov
iret
outsl
push
sub
sub
dec
pop
push
xlat
add
stos
cmp
sub
dec
adc
lret
outsl
xchg
mov
cli
jecxz
sbb
lods
mov
mov
push
sub
stos
ss
add
cmp
mov
add
or
stos
inc
cmp
xlat
adc
inc
je
adc
mov
or
pop
cmp
or
xor
mov
jns
or
lods
xor
loope
inc
inc
inc
or
in
mov
xchg
cld
mov
inc
mov
pop
cmp
outsb
lods
or
push
and
xor
lahf
cld
mov
dec
push
aam
nop
or
sub
push
and
cs
inc
and
dec
int3
test
push
pop
or
mov
sbb
repz
dec
pop
xor
xchg
loope
jb
nop
out
loope
add
inc
pop
mov
mov
shrl
push
xor
pushl
push
inc
sub
mov
cmp
nop
in
push
mov
xor
mov
mov
psubw
testl
xor
mov
ja
pop
sahf
inc
clc
stc
mov
lea
mov
mov
xchg
fcmovnu
lahf
cld
outsl
push
sahf
mov
imul
inc
inc
sbb
jl
xchg
lcall
inc
insb
std
stos
jle
or
fisubrs
inc
mov
jle
dec
xchg
or
lods
or
push
cmp
test
fimull
or
push
sub
mov
lds
out
mov
in
das
fadd
in
sbb
sub
cmp
inc
xor
fs
orl
inc
or
dec
sub
aad
push
or
mov
mov
repz
pop
dec
sub
pop
dec
stos
push
adc
lret
addr16
mov
mov
sub
fsubl
mov
aam
mov
pop
pop
jecxz
arpl
jno
mov
popf
push
mov
add
cs
or
call
push
neg
jbe
cmp
repnz
add
es
insl
and
pop
cs
xor
in
inc
lret
push
jnp
mov
push
cmp
pop
or
imul
cltd
and
push
push
data16
ja
mov
mov
ja
mov
mov
mov
imull
cmc
es
pop
dec
xchg
mov
imul
test
cmp
push
sub
ja
push
and
and
imul
pusha
xor
xor
sbb
fsubrs
sti
xchg
xchg
xor
nop
mov
pop
loopne
ds
pop
and
or
or
and
mov
in
sbb
test
mov
mov
int3
test
dec
and
sub
push
and
and
subb
inc
sahf
push
pop
pop
lods
or
lods
jge
push
or
xchg
cmpsl
loop
or
mov
add
test
in
mov
lahf
mov
or
push
and
and
je
pop
or
sub
adc
setg
hlt
dec
or
lret
push
clc
push
jb
mov
js
iret
pop
je
pop
std
cmp
cmovge
rcrl
rorb
or
pop
insl
outsb
aaa
xor
sbb
dec
mov
jecxz
orl
adc
movsb
push
xchg
and
or
sub
in
mov
jbe
ja
or
and
and
lret
or
and
add
mov
push
cmp
lcall
mov
ss
mov
pop
jl
and
stos
sub
sub
or
pop
fwait
push
push
pop
or
adc
outsb
and
and
xchg
sbb
mov
fmull
stc
adcb
or
ja
push
pop
mov
lcall
adc
push
xchg
and
sub
pushf
cmp
icebp
sub
out
fmulp
mov
jge
push
dec
inc
dec
sbb
sbb
daa
jmp
lahf
mov
sbb
dec
loopne
or
mov
popa
mov
add
insl
nop
leave
inc
ss
and
insb
fs
dec
xor
pop
push
mov
pop
jb
jg
xor
negl
dec
add
push
xchg
leave
sbb
fwait
stos
pop
fsubs
or
cmp
xchg
and
or
mov
xchg
push
cmp
sub
xor
jl
and
adc
and
dec
xor
in
jne
jp
int
cmp
jnp
mov
stos
pop
les
fwait
sbb
jns
pop
int3
leave
mov
push
outsb
jmp
mov
fisubs
emms
sbb
pop
dec
xchg
mov
shll
pop
sti
inc
cmp
sub
int
out
push
push
cmpsb
cs
push
fwait
push
das
outsl
and
push
and
btrl
add
mov
push
addb
addr16
int3
cmp
insl
inc
sbb
dec
mov
sbb
test
add
popf
hlt
dec
jno
popf
sbb
mov
fmuls
xlat
xchg
loope
in
pop
mov
adc
ficomps
rorl
dec
fdivr
inc
scas
sbbb
inc
std
add
cs
xchg
mov
pop
in
sbb
stos
sarl
addb
xchg
imul
hlt
adc
pop
or
out
or
sbb
fwait
addr16
push
imull
sbbb
push
into
mov
les
pop
sahf
cmc
mov
inc
xchg
xchg
xor
mov
jns
inc
or
add
mov
inc
jns
xchg
call
xor
repnz
ja
xor
sahf
sbb
push
cmpsl
imul
rclb
push
aaa
mov
and
lahf
mov
scas
xor
xchg
shrb
insl
push
test
jge
sbb
xor
pop
xchg
xchg
daa
call
cmpsl
jne
mov
mov
fstp
cmp
adc
outsb
jl
add
push
fidivs
idivb
movsb
dec
or
adc
cs
xor
dec
pop
jecxz
stos
push
mov
xor
popl
pop
fists
adc
les
les
sub
rol
pusha
mov
imul
push
push
lret
es
or
xchg
fwait
rclb
sbb
int
fcoml
dec
int3
aam
add
adcl
jge
imul
dec
push
fmuls
sbb
sub
int3
push
mov
mov
xlat
dec
or
outsb
popa
and
xor
xor
sbb
fisubrl
xor
ds
push
popa
dec
pop
pop
sbb
jecxz
pop
cmp
and
stc
and
push
dec
adc
and
pop
adc
stc
mov
aad
mov
and
push
mov
and
mov
cmovs
or
xorb
sub
xchg
test
lcall
mov
mov
or
jl
mov
mov
mov
or
jge
aaa
movsb
dec
inc
xor
insb
aam
subb
imul
das
push
test
roll
and
scas
xchg
aas
cld
scas
scas
push
pushf
add
fdivrs
jno
or
lea
xchg
outsb
dec
pop
xchg
sub
lock
int
and
mov
rorb
pop
outsb
in
mov
push
sub
cmp
adc
das
inc
sub
sub
addr16
cwtl
jns
rorl
and
push
sub
jecxz
insl
out
pop
les
inc
dec
adc
mov
or
into
cmp
mov
sub
jne
pushf
dec
es
dec
lcall
movsb
roll
push
in
les
xorl
jbe
or
cmpsb
mov
xchg
add
sub
sti
int3
ud1
jne
adc
frstor
sbb
mov
mov
xchg
in
adc
cmp
push
iret
fwait
cli
cs
add
fwait
or
dec
fwait
fwait
jnp
pop
inc
push
add
and
mov
dec
mov
jle
adc
movsb
jns
add
lcall
jnp
inc
push
cmp
testl
and
mov
or
push
adc
xor
xchg
inc
je
cmp
mov
mov
pop
mov
xchg
shll
testl
or
and
push
pop
mov
stos
xor
pop
mov
or
add
add
jecxz
cmp
cmp
jle
cmp
adc
and
dec
sbb
cmpsl
pop
sbb
pop
jmp
and
test
add
jp
mov
cli
cmp
scas
in
cmp
popa
sbb
xor
fwait
cmp
jmp
mov
cmp
vucomiss
and
add
shl
push
mov
adc
mov
sbb
fwait
sub
fwait
mov
fs
or
or
ds
aam
jg
or
insl
lock
xchg
inc
pop
mov
push
jecxz
dec
fisubrs
sub
cld
push
and
dec
test
mov
loopne
sub
xor
mov
push
add
mov
xchg
jecxz
imul
fwait
push
and
mov
dec
idiv
jl
in
mov
mov
repnz
adc
das
xor
repz
or
or
aad
loopne
xor
xor
cmp
xor
push
lret
fbld
int3
jl
jle
pop
lcall
aaa
aas
out
mov
inc
pop
lret
fbstp
sub
adc
mov
push
lds
xor
push
mov
subl
push
mov
shll
jmp
repz
sbb
aam
inc
mull
cmp
out
and
insb
mov
movsl
mov
out
mov
cs
ret
outsb
mov
push
in
inc
sti
xchg
inc
outsl
cmpsl
adc
gs
ss
xor
imul
fists
push
shlb
cmp
pop
cs
xor
fbstp
inc
in
xchg
push
ljmp
movsl
imul
aam
enter
orl
mov
lock
ficomps
out
cmp
sbb
cld
xlat
out
jae
xchg
sbb
test
cmp
in
fmuls
sbbl
fsubrl
ja
push
mov
test
sarl
jbe
fwait
pushf
arpl
xchg
popf
xor
test
push
frstor
fcmovu
add
les
aad
aad
push
jno
ss
insl
fisttpll
sarb
fdivrs
inc
aad
imul
cs
mov
mov
push
daa
dec
xor
sub
adc
imul
dec
fwait
mov
pop
aad
pushf
push
out
mov
ret
imul
cmp
mov
jecxz
sahf
and
leave
add
cmpsb
enter
movsb
push
and
jno
divl
adc
push
flds
inc
pushf
or
mov
addr16
push
jp
xor
ss
lret
add
ror
inc
rorb
add
lods
pop
push
pop
addr16
xchg
dec
lods
sarl
mov
les
and
mov
out
cmp
inc
pop
mov
inc
and
pusha
jo
dec
sbb
inc
popf
mov
mov
fcoms
jecxz
pop
cmp
and
and
sub
add
jo
daa
inc
mov
in
mov
sub
dec
xor
sbb
pop
insb
fiaddl
adc
and
fisttps
mov
push
or
shrl
inc
inc
sub
inc
add
repz
rcrb
cmp
cltd
cmp
adc
fwait
inc
in
xchg
push
add
and
lds
pop
adcl
mov
test
adc
sub
pop
in
jg
das
mov
push
dec
mov
pop
cmc
inc
cli
addr16
adc
push
clc
ljmp
push
pop
adc
mov
or
loopne
pushf
sbb
jns
fcmovne
cmp
mov
stos
or
loope
pop
pop
pop
mov
jg
adc
sub
mov
jg
xor
das
mov
push
push
cmp
push
mov
shrl
add
pop
mov
mov
jg
or
inc
clc
dec
adcb
cltd
fdivl
or
add
rorb
js
xchg
jge
js
jecxz
clc
fmull
leave
sub
adc
in
xchg
rcll
xorl
dec
add
add
jg
jl
ret
test
in
pop
in
ret
sbb
out
pop
mov
test
jmp
mov
fidivs
cmp
in
les
fptan
sub
sub
cmp
adc
outsl
leave
mov
ret
dec
mov
cmp
repnz
das
sub
ljmp
inc
lret
xor
pop
xor
mov
adc
xchg
aaa
xchg
cmp
shll
or
cmp
aas
cmp
inc
dec
inc
or
je
add
add
pop
push
or
mov
cmp
adc
pusha
dec
inc
lret
push
mov
push
adc
adc
sbb
adc
inc
dec
mov
xchg
pop
outsb
adc
push
pop
prefetcht1
sbb
or
stc
and
cmp
add
inc
mov
sbb
jno
in
jp
sbb
outsl
cmp
insl
adc
leave
mov
sbb
sbb
cwtl
lea
cmp
xor
xchg
in
ds
push
int
sbb
xchg
fwait
sub
xchg
sub
popa
jge
lcall
fiaddl
xor
mov
mov
inc
clc
cmpsb
cli
xchg
pop
lret
test
call
rcll
sbb
inc
and
xchg
jns
imul
mov
mov
adc
sbb
mov
fdivs
int3
push
dec
and
inc
mov
push
loope
loope
jecxz
xchg
add
movq
or
adc
xor
mov
xchg
jnp
sbb
adc
dec
sub
push
sbb
mov
mov
or
fsubr
push
sbb
ja
ficompl
jno
sbb
dec
and
sahf
mov
outsl
imul
mov
nop
lock
jecxz
scas
dec
movsb
ja
repz
fwait
rorb
cmp
pop
int3
scas
mov
movsb
add
stc
pusha
sub
movsl
cmp
hlt
or
test
ja
cmp
lods
stc
mov
popa
cmp
sub
repnz
mov
mov
movsb
xor
lcall
inc
lcall
add
into
nop
stos
sub
rcrb
int3
push
mov
stos
xchg
xchg
mov
lahf
add
jns
add
inc
jg
sub
into
mov
jne
lea
lret
sub
push
fwait
popa
sbb
jmp
test
outsl
adc
or
push
mov
scas
out
jae
loop
jns
or
out
push
fwait
inc
add
xchg
nop
pushf
jae
adc
js
jl
xlat
mulb
stos
push
sbb
adc
pop
inc
add
ss
fwait
and
dec
xchg
hlt
imul
mov
punpckhwd
xor
mov
scas
cmpsb
adc
and
inc
cmc
mov
loope
out
lods
sbb
inc
pushf
and
cmpsl
loope
pushf
and
mov
pop
jmp
xchg
shrl
je
push
sbb
xor
pop
pusha
or
lock
add
addr16
outsl
mov
add
fs
fisubs
popf
mov
sti
mov
push
push
add
outsl
push
mov
mov
and
inc
sbb
jae
lret
xchg
pushf
clc
out
lea
inc
pop
icebp
mov
xor
in
add
pop
adc
mov
addr16
inc
add
fimull
cmpsb
movsb
sub
adc
sbb
insb
mov
add
cs
mov
add
outsl
mov
xor
loopne
repz
cmpsb
pop
lea
cwtl
push
xchg
jb
ds
or
sbb
sub
adc
sbb
push
mov
adc
jecxz
or
fwait
pop
in
adc
xor
lret
sbb
ljmp
mov
push
fwait
mov
xchg
adc
mov
mov
cmc
popa
jae
xchg
rcrl
mov
push
sbb
push
jae
jle
pushf
scas
mov
pop
ficompl
sbb
loop
and
pop
and
sbb
xchg
sub
pop
dec
sub
lods
fbld
fs
adc
pop
xor
push
movsl
mov
cmp
sub
jg
sbb
push
loope
mov
xor
dec
lahf
adc
sbb
sahf
pop
lea
dec
rcl
jae
mov
scas
hlt
es
push
jae
dec
push
in
ret
jnp
jb
and
sti
dec
add
mov
push
sahf
add
mov
je
icebp
shll
aad
shlb
scas
loope
inc
inc
adc
push
add
jl
loope
rcl
pop
ja
int
adc
xchg
adc
jbe
mov
aad
push
outsb
lahf
xchg
jmp
xor
orl
data16
and
lahf
inc
or
mov
xchg
call
adc
xor
scas
sbb
mov
pop
adc
mov
ds
call
lret
and
outsl
popa
je
push
or
out
and
push
into
pop
test
xchg
and
lcall
repz
push
flds
scas
and
and
pop
rcl
lahf
sbb
push
ss
mov
xchg
jp
mov
or
push
xchg
loop
push
fwait
in
sub
push
fwait
test
cs
lcall
lods
pusha
aas
jae
rorb
add
sub
xor
add
sbb
inc
xchg
inc
push
inc
int3
xchg
inc
push
popf
inc
add
add
adc
cmp
mov
xor
jnp
in
and
mov
cmpl
sub
cmp
fisubrl
sbbl
dec
push
test
dec
add
imul
and
and
mov
inc
cs
xor
cs
mov
pop
mov
fisttps
aas
mov
or
sarb
mov
sub
mov
dec
xor
jmp
es
imul
adc
imul
out
fsubrs
and
mov
lea
hlt
push
cmp
push
sub
aaa
frstor
dec
pop
push
xchg
pop
int3
out
ss
cld
fstpt
jle
insl
loope
test
fidivl
cmpsb
mov
insb
adc
mov
push
lcall
dec
cld
insl
arpl
or
lds
in
and
push
xchg
xchg
adc
pop
push
call
push
loope
mov
js
push
sub
jecxz
jge
jp
add
pop
repz
and
lahf
sbb
outsb
bound
push
leave
jle
mov
insb
mov
mov
sbb
pop
stos
xor
inc
fcompl
mov
repz
pop
in
mov
fisubrl
movsb
inc
pushf
popf
repz
into
push
sub
pop
lret
dec
add
xor
adcb
push
mov
or
jp
or
sbb
loope
xlat
adc
add
cwtl
xor
fbld
xchg
mov
mov
icebp
sbb
dec
xlat
js
push
pushf
or
repz
ret
cmp
sbb
sub
add
jp
scas
pushf
fs
out
scas
or
sub
add
push
mov
add
cmp
push
and
push
mov
imul
clc
insb
negb
jb
or
rcr
sub
xor
push
push
push
add
aaa
shlb
pop
insl
pop
stos
rcrl
std
adc
fstpl
out
sbb
mov
lods
mov
and
insl
loope
xchg
xor
lea
sub
outsb
mov
les
movsb
adc
mov
adc
jae
pop
push
dec
es
and
loopne
dec
sbb
add
jno
and
push
call
ljmp
mov
jecxz
and
aas
data16
cs
in
add
pop
sbb
ja
aam
sbb
pop
mov
fidivrl
stos
fdivl
pop
mov
imul
ret
push
adc
aam
scas
add
lahf
shlb
adc
out
jp,pt
xor
adc
pop
mov
cs
das
xchg
inc
sbb
shlb
ficomps
insl
cmp
sub
jl
add
mov
inc
mov
and
pop
xor
scas
outsl
and
sbb
mov
daa
pop
je
mov
inc
jno
dec
cmp
dec
add
ret
xor
dec
pop
and
push
insb
lea
fstps
daa
outsb
cli
jne
cmp
in
movsl
and
jmp
pop
jecxz
and
and
sbb
les
pop
insb
mov
mov
cmp
push
sahf
jmp
mov
cmc
inc
mov
ss
in
sub
push
add
mov
mov
bound
aad
pop
pop
out
xor
dec
mov
mov
imul
insl
lods
fs
push
jo
mov
mov
loope
sub
dec
icebp
popf
test
sbb
inc
rcll
dec
into
xchg
cmc
test
sbb
into
ja
push
lods
sbb
xchg
mov
sarl
lret
push
jp,pt
test
outsb
push
or
add
popf
mov
mov
nop
outsl
sub
push
sub
dec
sahf
outsb
mov
dec
fists
xlat
mov
push
jmp
sbb
sub
outsl
sub
jnp
lds
mov
lea
or
jecxz
pop
and
adc
hlt
inc
int
lret
sub
stos
jge
imul
cmpsb
into
adc
dec
xchg
pop
je
roll
jae
jns
xchg
imulb
lret
and
jbe
iret
push
movsb
sbb
iret
jbe
mov
or
add
popa
cmp
ss
leave
mov
sub
in
stc
subb
out
movsb
mov
mov
mov
mov
pop
mov
inc
fcmove
add
push
jbe
popf
and
movsl
pop
sub
xlat
xor
add
les
mov
or
imul
sub
sub
push
mov
inc
add
pop
xor
je
pop
pop
scas
icebp
fiaddl
mov
pop
cmc
and
scas
and
sbb
outsb
inc
adc
mov
xor
mov
rcll
xor
das
jb
inc
lret
and
add
jne
sbb
ljmp
or
xor
and
sbb
inc
loope
sbb
jns
xor
and
jbe
jmp
dec
out
adc
jae
out
out
and
imul
mov
inc
fists
mov
clc
jg
iret
adc
sub
mov
into
add
or
aas
jne
sub
adc
sub
mov
adc
adc
dec
pop
mov
pop
push
and
imul
xchg
into
dec
and
stos
lods
cs
adc
test
out
outsb
lds
inc
movlps
xor
scas
lret
mov
and
int3
and
sub
cld
aaa
stos
mov
sahf
jecxz
mov
ror
mov
fcmovne
arpl
xchg
and
sbb
xlat
lahf
xor
loope
mov
test
mov
adc
pop
clc
pop
or
popf
push
xlat
mov
cmp
sbb
cmp
push
xchg
pop
cmp
test
das
arpl
xor
mov
clc
les
cmp
cltd
add
adc
mov
cmp
jo
ret
push
jl
or
aad
pop
jecxz
outsb
jno
and
sbb
js
xor
cmp
cmp
or
pushf
movsl
or
dec
dec
pop
fistpll
leave
cmp
add
mov
and
inc
outsb
loop
and
push
je
and
or
pop
fiadds
in
jo
scas
and
insb
les
mov
ja
xor
or
ret
push
mov
push
mov
adc
fnsave
imul
insl
popf
fistps
sahf
adc
mov
and
mov
xchg
idivl
stc
idivl
movsb
loopne
aam
out
rclb
out
cmp
xlat
ret
xor
pop
add
jg
scas
xor
fsubp
aas
cmp
loopne
xchg
jne
insb
adc
sti
dec
push
adc
pcmpeqw
out
idivb
push
adc
xchg
mov
out
add
sub
xchg
adc
jecxz
addr16
lea
cmp
insb
ja
daa
inc
movsb
pop
dec
mov
iret
sti
inc
mov
jne
fmuls
imul
mov
jne
mov
or
dec
into
mov
jb
rorb
ffreep
pop
or
xchg
inc
inc
inc
imulb
addr16
test
jmp
xor
sub
outsb
daa
xor
dec
mov
adc
pop
pushf
mov
push
arpl
push
and
pop
insl
out
ds
dec
arpl
dec
outsl
and
cwtl
xor
mov
les
iret
nop
adc
jb
cmp
das
sub
pop
xchg
adc
fimull
mov
mov
sub
push
push
push
stc
js
das
daa
or
rcrl
sub
pop
pop
adc
cmp
dec
iret
nop
jecxz
xor
add
fchs
mov
and
fcmovu
rorl
rcrb
pop
or
mov
fsubl
mov
jae
stc
jecxz
push
insb
lahf
jecxz
mov
push
shrl
push
and
fcomi
adc
dec
pop
sbb
and
sub
mov
fdivl
and
rcll
mov
xchg
pop
repnz
adc
adc
adc
mov
dec
xchg
push
dec
aas
pop
or
sbb
sbb
fwait
cs
sbb
pop
adc
mov
and
movsl
dec
es
daa
jb
sub
stos
or
push
sub
dec
das
ror
lret
scas
xor
sbb
xchg
xor
mov
push
mov
xor
aaa
inc
cmp
cmp
dec
mov
cmp
mov
mov
inc
xchg
inc
pop
inc
out
bound
inc
shrb
and
add
stos
rclb
js
xchg
xchg
push
xchg
adc
stos
dec
mov
jbe
dec
or
adcl
push
xchg
push
or
dec
nopl
dec
adc
adc
or
push
adc
and
xchg
sbb
or
sub
pop
pushf
rcrb
pop
dec
and
and
and
and
sub
sub
and
sub
sub
push
xor
sbb
xor
shlb
sub
cmp
cmp
or
sub
mov
xchg
inc
dec
inc
adc
push
push
sub
sbb
push
pop
or
mov
pop
push
outsl
adcl
dec
sbb
mov
jno
stos
and
outsl
daa
aaa
mov
mov
mov
imul
ss
adc
mov
xchg
sub
mov
dec
push
pop
jge
pop
xchg
fdivr
stos
jg
shrb
cmpsl
pop
stos
shlb
cmp
daa
pop
data16
leave
push
dec
and
fsubs
pushl
inc
ret
imul
mov
pop
fisubrs
out
movsl
inc
insb
scas
push
imul
dec
adcb
xor
out
enterw
mov
outsl
jno
in
mov
jae
mov
roll
aad
or
bound
adc
fwait
insl
loop
xor
sbb
mov
loope
lahf
sbbb
add
adc
loopne
loopne
or
rcrl
add
xchg
pop
pop
call
insb
lret
ud0
hlt
jnp
cmc
mov
in
pop
mov
out
xor
mov
bound
test
mov
rclb
or
lcall
or
lea
push
lcall
mov
ljmp
push
and
jg
cs
pop
sub
and
push
add
sub
adc
push
sbb
into
dec
ficomps
adc
scas
dec
xor
or
or
push
in
adcl
jne
movsb
or
jecxz
sbb
outsb
jae
les
das
dec
sub
xlat
movsb
iret
xchg
adc
sbb
sbb
pop
pushf
sub
cmp
insb
es
sub
arpl
sbb
lret
inc
mov
shr
test
sub
push
pop
push
mov
out
add
rcrb
push
and
icebp
insl
lcall
adc
int3
pop
dec
jp
js
adc
movsl
stc
fwait
push
push
nop
iret
lahf
and
mov
sahf
les
add
imul
adc
scas
or
add
test
push
daa
setp
into
into
sub
fistps
pop
lcall
or
push
pop
jno
or
mov
adc
cmp
popa
loopne
daa
dec
push
lret
dec
adc
sbb
mov
push
mov
icebp
sub
in
push
push
dec
daa
xlat
push
lahf
insl
jbe
test
fcomps
dec
mov
push
dec
es
mulb
xor
mov
movsb
es
add
outsl
push
pusha
in
pop
call
repnz
jb
mov
aad
dec
pop
scas
pop
popa
sub
sub
fwait
lret
cwtl
pushf
push
sub
adc
or
icebp
pop
xor
adc
sbb
inc
adc
push
push
xchg
cmpb
cs
cwtl
outsl
sbb
sbb
lods
fcmovu
push
adc
sub
aam
xorb
cmp
in
scas
jmp
sub
adc
add
mov
dec
jno
shr
push
loop
add
pop
and
push
leave
cmp
je
inc
adc
jecxz
outsl
inc
scas
scas
pushf
adc
mov
sbbb
sbb
hlt
or
sub
pop
cld
add
xchg
adcl
popf
and
add
mov
pop
push
cmpl
pop
adc
cmp
and
orb
sub
cmp
inc
ror
test
mov
add
push
mov
test
cs
test
xchg
out
ss
push
mov
adc
addb
inc
xchg
js
ret
jl
scas
dec
adc
icebp
ret
sbb
lahf
xlat
jnp
daa
mov
push
rcr
pop
jecxz
lret
iret
xchg
shll
push
dec
arpl
arpl
or
repnz
fwait
addr16
wbinvd
dec
jb
into
adc
adcb
cli
sahf
clc
leave
mov
lds
cwtl
mov
dec
daa
movsb
andl
clc
mov
mov
nop
cmp
sbb
inc
jb
in
mov
push
hlt
adc
daa
fcoml
xor
popf
mov
jb
and
mov
ffreep
icebp
xor
add
sbb
jg
xor
test
ss
mov
sub
imul
dec
push
out
pop
mov
adc
cmp
sub
mov
fs
fxch
ja
mov
imul
dec
jae
mov
xor
mov
sub
es
push
scas
jnp
aam
imul
cmp
mov
mov
and
mov
or
stos
pop
ja
or
rorb
mov
push
push
cli
int3
out
test
push
sub
pop
sar
mov
push
dec
daa
fdivr
lret
pop
loope
repnz
inc
test
pop
aam
cli
leave
nop
mov
mov
and
insb
dec
in
dec
rcrl
push
pop
or
orb
mov
inc
or
jb
and
sub
jmp
pop
add
addr16
xchg
mov
insb
pop
or
in
out
mov
lahf
sbb
sahf
and
pushf
or
lods
jbe
add
jmp
add
jno
enter
mov
and
imul
push
xchg
sahf
adc
pop
popf
mov
fwait
pop
movsb
mov
cld
fcoms
sahf
sub
mov
stos
and
push
or
jl
cwtl
push
pop
add
push
mov
inc
repz
arpl
and
outsb
adc
xchg
cmpsb
jle
sbb
int
ja
adc
or
lods
cmp
out
mov
pop
fisubs
jl
jmp
and
xchg
loop
fisubl
mov
outsb
push
dec
data16
in
lods
push
cmp
cwtl
dec
shll
sub
push
push
dec
mov
mov
iret
jl
inc
push
xchg
cmc
xchg
decb
sbb
mov
das
dec
fiaddl
mov
popa
iret
xchg
xor
mov
sub
xchg
fdivrl
imul
cmp
sub
inc
scas
mov
sub
or
adc
dec
fdivl
inc
lcall
dec
aaa
dec
sbb
inc
push
lcall
add
cmp
and
bound
movsl
stos
mov
push
mov
mov
fdivs
mov
xor
and
sarb
add
fistpl
fisubrl
push
or
in
xor
rorl
and
xor
in
cs
mov
dec
cmp
jge
sub
add
or
add
sbb
fwait
inc
fcomp
or
scas
dec
pushf
dec
testl
rcl
xor
lcall
cmp
push
bts
cmp
adc
lods
aas
or
push
dec
mov
pop
jae
pop
xor
lret
or
push
and
out
push
mov
lcall
push
lahf
daa
xchg
jl
xchg
lea
leave
bound
bound
jle
fsubrs
mov
fmull
stos
rcrb
sub
lods
lahf
xor
loop
jl
xor
in
outsb
xor
pop
mov
push
popa
adc
xchg
aas
push
fwait
ucomiss
xchg
mov
push
mov
xchg
pop
pop
push
ja
push
test
or
lahf
push
cmp
adc
fimuls
jecxz
lods
inc
aam
push
adc
movsb
xchg
fucompp
dec
adc
sar
mov
push
inc
loope
xlat
adc
push
call
loopne
pop
pop
outsb
mov
jl
inc
sbb
push
bound
push
insl
test
mov
loope
mov
cld
pushf
or
lcall
fdivrs
movups
push
cmp
pop
dec
mov
int
adc
movsl
push
mov
fisubl
popf
and
xor
pop
cmp
sub
test
ljmp
xor
lret
aaa
dec
pop
mov
xchg
mov
sbb
sahf
in
push
cmp
or
lods
lcall
outsb
dec
mov
les
cmpsl
adc
cmp
nop
xchg
loopne
push
push
or
scas
bound
leave
and
pop
mov
xchg
lea
jno
or
int3
adc
and
ljmp
and
sbb
sub
sub
push
stc
xchg
cmc
dec
aaa
stc
es
cs
push
dec
sub
sbb
mov
sbb
push
sub
sub
lea
cmp
cmp
sub
add
inc
cs
jae
dec
push
aaa
cmp
loopne
and
xor
and
or
aam
loopne
and
add
shlb
pop
roll
lahf
out
sub
and
divl
xchg
ss
push
loopne
xor
mov
fwait
imul
lret
or
je
xor
stos
lcall
push
jmp
mov
je
stos
jae
ret
adc
and
in
push
xor
inc
sbb
testb
insb
push
mov
mov
or
push
mov
mov
xlat
addr16
movsb
mov
inc
mov
xor
xor
add
insb
jbe
aam
push
clc
adc
pusha
push
pushf
adc
xor
push
into
ds
sub
mov
xchg
stc
mov
ss
push
sbb
stc
and
arpl
mov
nop
or
push
sbb
lcall
test
mov
add
dec
mov
outsb
and
jns
lea
add
les
sub
aam
sbb
lcall
add
mov
sub
mov
popa
adc
push
add
outsl
dec
jmp
ja
add
shlb
cmp
js
mov
push
push
push
dec
sbb
loope,pt
push
jb
push
and
xlat
imul
jecxz
je
cmpsb
cmp
hlt
and
sub
jl
mov
shrb
sbb
insb
scas
cmp
pop
sbb
and
sbb
or
add
adc
jp
and
mov
fwait
sbb
sbb
cld
ds
push
addr16
ss
insb
nop
pusha
pop
cltd
mov
repz
aad
sbb
and
leave
loop
in
push
push
cmp
mov
repz
ret
shr
outsl
aad
in
pop
aad
mov
and
leave
sbb
lret
fst
mov
dec
arpl
scas
xor
ret
and
mov
cli
push
jle
nop
movsl
outsb
mov
sbb
mov
xchg
nop
cmp
iret
in
and
sub
lods
or
add
mov
ljmp
mov
pop
mov
mov
faddl
inc
mov
cmp
adc
addr16
loop
js
stos
in
sbb
rcrb
mov
ljmp
inc
insb
or
pop
pop
sub
cmp
push
and
imul
fimuls
fdivs
mov
jp
dec
add
mov
andl
je
pop
pop
adc
jl
sub
lcall
fsubr
cmp
dec
inc
inc
adc
jbe
mov
aas
into
loopne
or
cs
cmp
add
jns
fmuls
fdivr
scas
pop
iret
cmp
lret
mov
cmp
pop
cmc
jno
lret
ja
xchg
dec
stos
sbb
jne
loopne
inc
mov
data16
xor
sub
pop
sbb
mul
call
clc
push
leave
daa
bound
push
fimuls
mov
leave
lret
lock
push
es
inc
inc
inc
ljmp
mov
adc
test
pop
jne
fcmovu
jnp
mov
or
add
pop
push
movsb
idivb
mov
imul
into
jecxz
jge
cs
jg
push
adc
or
fmul
mov
mov
or
jecxz
aam
dec
stos
add
xchg
sahf
out
and
or
sub
or
xchg
inc
adc
or
int3
aam
sbb
push
xchg
es
fcmovnbe
add
insl
adc
imul
xchg
xlat
lods
incb
jne
xlat
daa
imul
xchg
insb
pop
nop/reserved
jle
dec
jne
loop
pop
pop
hlt
jo
fisubrl
ss
dec
scas
aad
pop
ja
jmp
ljmp
xchg
mov
imul
pop
dec
mov
inc
mov
jg
and
loop
pop
mov
rclb
loope
fcmovb
insb
dec
loopne
jae
js
mov
cltd
fisubs
ljmp
jmp
fwait
pop
test
adc
mov
jl
aad
mov
lods
cltd
ljmp
adc
lret
cli
push
jae
adc
stos
push
dec
jne
xchg
sahf
fdiv
into
aad
loope
rclb
mov
divps
add
in
push
dec
sahf
imul
mov
push
ss
aas
xor
pusha
pusha
cmpsl
jae
xchg
fcoms
subb
or
mov
dec
jnp
sub
aam
xor
cld
loope
pop
pop
popa
inc
ljmp
xor
or
stc
xor
pop
call
dec
jp
sbb
lret
nop/reserved
std
and
dec
leave
add
dec
idiv
pusha
fsubl
mov
cmp
mov
inc
loope
ret
dec
dec
adc
jnp
sahf
lcall
xchg
xchg
or
stos
jbe
mov
aam
jge
push
pop
push
les
sbb
add
inc
les
out
test
sbb
imul
pop
bswap
xchg
fcoml
push
push
in
add
xor
or
stos
add
lahf
pop
popl
mov
gs
pusha
fiadds
cmpsb
mov
scas
fisttpl
pop
arpl
in
push
push
sbb
es
sbb
or
sarl
fstpt
push
insl
bts
pop
lret
sbb
jge
movsl
jns
pop
pop
push
iret
pop
or
dec
insl
imul
inc
xchg
movsb
or
push
lahf
insb
dec
xchg
roll
cmp
adc
test
icebp
jb
roll
push
scas
in
dec
sarl
sti
insb
or
bound
loope
repnz
mov
dec
cmp
je
cmpb
jl
jl
rorb
and
iret
lret
push
out
mov
loope
scas
xchg
mov
in
fdivr
stc
jp
lock
pop
ss
imul
pop
and
out
or
imul
xor
jnp
nop
insl
in
ds
and
and
popf
test
mov
mov
sub
notl
adc
or
call
xchg
push
lahf
pop
int
dec
adc
sbb
idiv
out
lretw
pushf
dec
pop
jns
test
mov
insb
xlat
push
dec
and
push
xor
mov
xchg
leave
push
add
mov
movsl
xor
pop
xor
mov
or
jb
sbb
xor
dec
fcmove
loopne
lcall
xchg
sbb
sub
lock
repnz
test
movsl
inc
push
aam
mov
lret
lock
lods
lret
pop
loope
jae
in
jl
mov
imull
jne
sub
sub
xchg
sbb
or
int
adc
aam
push
add
xlat
sbb
push
jecxz
orl
xchg
mov
mov
xor
jmp
mov
or
imul
or
lods
fmuls
inc
dec
sbb
lret
jmp
aam
adc
sahf
sub
adc
mov
cli
xchg
movsb
cmp
xor
in
mov
xchg
lods
ja
insb
mov
push
je
in
lret
scas
mov
imul
scas
in
cmp
mov
filds
push
sbb
shll
loop
pop
push
daa
pop
arpl
sbb
addb
loope
jae
arpl
mov
dec
insb
shlb
setno
movsb
dec
or
adc
jns
sahf
insb
and
pop
arpl
fldl
movsl
lock
test
pushf
enter
adc
sub
mov
jecxz
cld
aam
dec
cli
sbb
xchg
mov
jns
lods
jae
insl
stos
dec
push
lods
fdivr
jne
sub
mov
loope
scas
adc
push
xchg
sub
scas
add
sub
pop
cmp
push
pushf
mov
sbb
inc
lea
and
lods
mov
daa
int
adc
jb
scas
les
ljmp
push
pop
aaa
gs
sbb
loope,pt
rcl
fldl2e
jecxz
xor
adc
sbb
ljmp
fwait
adc
repz
mov
cltd
xchg
fsubl
or
push
cltd
test
sbb
inc
adc
sbb
jl
sbb
daa
push
pop
pop
les
xor
and
stos
bound
fidivl
fstps
out
orl
jmp
pop
rcrl
das
jl
sbb
xor
xor
jbe
push
in
xchg
jmp
fcmove
xchg
aaa
adc
les
and
shr
std
leave
lods
inc
inc
mov
shrl
fwait
mov
inc
push
mov
mov
fwait
les
mov
aam
dec
daa
or
lret
in
mov
sahf
enter
mov
ret
jne
popf
pop
xor
sub
inc
pop
pop
out
adc
in
fisttpl
mov
mov
push
push
lahf
cmpsl
frstor
sbb
dec
xor
lret
subb
sub
sub
push
xchg
dec
daa
pusha
pusha
aam
xchg
jnp
sbb
daa
dec
and
sbb
insb
cmc
dec
push
jp
js
cmp
btc
mov
dec
daa
push
push
mov
insb
xchg
pop
push
in
roll
lods
mov
mov
or
cltd
aas
jnp
push
insb
dec
inc
aad
pop
mov
iret
and
push
insl
jmp
faddp
dec
outsl
cmpb
or
mov
sub
into
mov
dec
dec
cmp
adc
and
dec
adc
dec
mov
lods
data16
ljmp
es
divl
mov
jae
negb
pushf
push
inc
push
pop
or
mov
mov
xor
lret
mov
mov
stos
out
mov
out
arpl
sbb
mov
or
mov
mov
pop
jno
inc
cmp
js,pt
cmpb
int
es
fs
pop
mov
cwtl
push
jecxz
subb
mov
push
pop
cltd
aaa
mov
jo
xchg
addr16
icebp
xchg
outsl
sub
xor
ljmp
test
daa
sbb
out
adc
iret
mov
fwait
pop
out
sbb
mov
dec
or
dec
rorl
in
add
dec
insb
rcrl
and
pop
mov
ret
lock
dec
arpl
dec
lahf
test
sub
jno
xchg
in
push
cli
popa
xor
push
jmp
jb
pop
insl
enter
push
sub
insl
enter
lcall
sub
or
push
mov
loopne
jecxz
or
in
cmp
fisttps
testb
dec
and
cli
adc
leave
mov
aaa
clc
adc
jecxz
lahf
pop
inc
dec
int
hlt
shll
scas
and
lds
ja
aad
xchg
ja
mov
lcall
pop
lds
pop
cmp
or
test
push
or
decl
adc
push
fidivs
test
dec
dec
adc
add
pop
das
pandn
aad
lock
mov
or
xchg
mov
lcall
das
or
push
pusha
outsl
call
test
decb
fisubrl
inc
jecxz
xor
repz
loopne
or
movsb
pop
loope
push
xlat
jnp
sub
scas
xchg
ficompl
fsubl
loopne
jo
ljmp
psubusb
rcr
popl
xchg
enter
mov
mov
xlat
fmull
sub
or
adc
gs
out
repz
fwait
push
mov
sub
lea
xor
in
dec
jo
call
pop
sub
pop
data16
les
xchg
dec
aam
xor
btrl
pop
stos
outsl
sarb
pop
or
or
ljmp
adc
insl
and
mov
push
adc
lock
mov
push
or
inc
sbb
cvtpi2ps
xchg
lcall
inc
mov
inc
jne
clc
loopne
mov
add
inc
lods
cltd
sub
pop
mov
dec
jecxz
inc
inc
pop
pop
or
insl
fimull
imul
aaa
addr16
push
adc
loope
icebp
xor
scas
ds
push
into
or
fwait
mov
stos
notl
pop
dec
jo
push
insl
jle
cs
jnp
fbstp
pusha
push
shrb
mov
fwait
sahf
test
mov
xchg
dec
sub
or
into
and
call
mov
les
stc
pop
jle
push
cmp
mov
aaa
push
icebp
loope
adc
pop
dec
and
popa
scas
add
pand
cs
dec
and
push
sbb
mov
jae
or
in
mov
lds
hlt
xchg
ss
cmp
cmp
xchg
inc
and
push
lods
aas
ja
frstor
sbb
popl
adc
notl
push
or
add
mov
je,pn
mov
stos
or
popf
hlt
mov
mov
dec
xor
clc
not
xchg
pop
push
out
sbb
pop
int
and
pop
xchg
push
xchg
int
sub
rolb
shlb
lods
cmp
aas
mov
mov
adc
out
dec
mov
mov
xor
adc
outsl
out
outsb
sbb
lods
sbb
rorb
lcall
push
and
push
icebp
sub
push
lcall
push
nop
add
inc
insb
xchg
clc
add
sub
jbe
sub
mov
sub
xchg
das
push
xor
xor
in
dec
ss
xchg
lret
or
cmp
cmp
cmp
aas
adc
hlt
jle
push
sbb
jle
hlt
sub
xor
pop
pop
push
inc
mov
mov
mov
or
andb
bound
mov
add
or
ljmp
pcmpeqb
cmp
fidivrl
cmp
adc
in
add
fwait
nop
mov
decb
mov
mov
mov
push
dec
mov
sub
ljmp
test
xor
cld
adc
ljmp
mov
insl
data16
pop
cwtl
push
adc
aam
fsubrl
in
aam
es
sub
sub
rcrb
adc
fimull
pop
xor
add
inc
pop
or
cmp
jge
xchg
push
lods
ror
iret
sub
pop
cmp
rcrb
pop
shlb
rclb
inc
inc
push
pushf
adc
lea
push
sub
mov
movsb
data16
adc
add
pop
fldt
push
int3
popl
sub
xchg
add
adc
stc
and
push
shrl
shlb
cmp
repnz
pusha
or
jbe
and
and
das
push
fsubrl
subl
xchg
pop
xor
and
xchg
sub
fsubl
sub
fsts
cmp
push
mov
xchg
dec
cmp
and
or
push
aaa
outsb
adc
inc
mov
or
stos
imul
cmpsb
outsb
inc
decl
add
int
xchg
inc
mov
mov
imul
sahf
fidivs
cs
xchg
push
sub
int3
lods
orb
test
sub
inc
dec
cmpsb
aas
push
sbb
or
fidivrl
cmp
and
cmpsb
mov
or
pop
or
hlt
pushf
std
xchg
mov
pushl
clc
xor
into
loop
pop
add
lcall
fcmovu
inc
fcompl
loop
orb
jecxz
mov
mov
lcall
cwtl
xchg
fmuls
std
popa
shll
jbe
xchg
cmp
add
and
test
xchg
sahf
loopne
push
imul
aaa
int
inc
mov
pop
pinsrw
push
or
popl
enter
xlat
in
cli
cmp
nopl
and
xchg
popf
in
incl
pushf
jle
roll
ficoms
insl
filds
mov
mov
aas
cwtl
push
les
adc
and
movsl
adc
jnp
xor
mov
bound
and
mov
jp
lahf
push
xchg
das
cwtl
adc
in
lret
jle
mov
imul
push
jno
xor
or
pop
enter
mov
fcoml
lcall
lret
adc
mov
aam
adc
push
and
pop
add
stc
sar
add
loop
push
inc
or
lods
mov
pop
sbb
or
repz
pop
lret
pop
test
adc
mov
push
sbb
add
jp
sbb
pop
mov
sbb
pop
or
mov
push
add
int3
mov
pop
jns
lods
add
pop
popa
mov
pmaddwd
sar
pop
pop
cmpsl
ret
inc
push
dec
push
movsb
sbb
and
movsl
pop
into
pop
fdivrs
dec
mov
ja
push
jnp
leave
mov
or
mov
mov
push
pop
or
decb
push
inc
fcoml
xchg
clc
push
add
bound
sbb
jae
or
fimull
adc
outsb
fnstcw
aas
ljmp
mov
rorl
push
xchg
or
mov
sbb
or
mov
mov
dec
pushf
xchg
outsl
fistps
add
adc
stos
ds
insb
fs
or
mov
out
into
fimuls
or
into
subl
mov
mov
xor
jmp
loope
in
add
fmuls
daa
pop
arpl
jmp
enter
decl
xchg
dec
and
in
push
into
add
gs
fs
out
popf
rcrb
outsb
xchg
bound
or
sbb
mov
sahf
add
pushf
sarl
push
push
cmc
sbb
pop
mov
jge
xor
dec
ljmp
lods
inc
fisubrl
pop
imul
sbb
xlat
ss
jmp
mov
xchg
dec
sbb
call
push
sbb
mov
inc
sarb
push
sbb
addr16
inc
and
and
lods
sbb
lods
into
adc
push
popf
inc
lds
sbb
xchg
int
add
pop
and
adc
sub
adc
add
fldcw
or
rcr
mov
test
sub
inc
pop
dec
add
inc
sbb
aam
ficoms
cmp
or
inc
adc
fidivs
or
sub
dec
sub
insl
mov
xor
inc
ficoml
cwtl
push
push
fimull
cwtl
mov
mov
sbb
dec
add
add
inc
or
sbbl
data16
adc
and
sbb
or
int3
push
lods
sbb
mov
iret
mov
add
pop
mov
sub
leave
push
cwtl
aad
xchg
xor
mov
sub
mov
outsb
push
out
and
sbb
sub
push
stos
sbb
sub
pop
sbb
xchg
pop
or
leave
dec
arpl
mov
mov
xchg
lcall
cld
lods
or
inc
or
xchg
mov
sub
cmpsl
cmp
popa
sbb
xchg
out
popa
cli
iret
xchg
jl
jp
adc
mov
decl
push
mov
jo
mov
repz
and
xchg
fdiv
lcall
xor
pusha
lds
popa
push
insl
or
sbb
dec
mov
addr16
dec
add
add
mov
push
dec
cs
adc
out
adc
mov
out
sbb
inc
sbb
int
push
push
test
or
jbe
aas
push
mov
pop
pop
xor
inc
fidivrs
pop
imul
icebp
dec
cmp
sbb
lea
add
xchg
scas
fistpl
shlb
or
es
xor
shrb
stos
push
mov
cmp
in
mov
nop
into
leave
aam
jecxz
jmp
xchg
cld
and
fmul
push
popa
pop
or
fsubs
push
mov
aaa
xor
rcrl
mov
rcl
aaa
imul
push
dec
insb
cwtl
jmp
pop
mov
rorl
pop
push
outsb
mov
push
or
sub
xchg
test
adc
repnz
mov
mov
pop
pop
and
pop
inc
xchg
sbbl
js
xlat
lcall
adc
sub
cmp
addr16
mov
xchg
fildll
dec
int
mov
lret
sub
dec
into
pop
lea
js
mov
vandps
or
jo
in
sahf
mov
imul
xor
push
push
sbb
and
das
in
inc
lock
and
push
pop
sahf
xor
arpl
cmpsb
stos
das
arpl
adc
sbb
xor
mov
rorb
outsb
xchg
ficompl
adc
cmp
ficoml
pop
adc
or
jecxz
icebp
pop
repz
xor
aaa
push
and
pop
sbb
xchg
adc
mov
dec
adcl
stos
sub
xchg
in
imul
dec
in
cmp
jb
push
sahf
jnp
dec
and
push
push
daa
mov
cs
adc
jmp
inc
dec
jmp
push
mov
push
push
pop
mov
mov
mov
stos
mov
fs
dec
fmuls
or
adc
rcr
inc
or
cmp
sub
sub
lcall
or
push
mov
inc
or
mulb
push
add
dec
xor
pop
pop
or
out
mov
pop
lds
and
fisttpl
xor
sbb
xchg
outsb
push
insl
inc
xor
inc
and
movsl
pop
dec
jmp
outsb
and
popa
icebp
and
punpckhdq
mov
dec
flds
dec
mov
sub
push
loop
daa
outsl
xorl
xor
cmpsb
mov
add
in
sbb
cmp
push
insb
outsl
or
lret
jns,pt
in
insb
imul
lods
andb
frstor
adc
and
rorb
inc
xchg
bound
add
fmuls
and
loope
dec
sbb
add
dec
jne
orl
pop
or
orl
dec
or
leave
stos
stc
movlps
in
or
inc
fcoms
adc
out
xlat
das
je
push
into
lahf
inc
jl
sarl
mov
pop
push
mulb
sahf
push
pop
loope
push
pusha
sbb
scas
add
push
lods
mov
or
js
or
fcoms
mov
inc
idivb
dec
lds
adc
cltd
dec
inc
in
lret
dec
and
mov
insl
sbb
outsb
sti
xchg
or
shrb
xlat
ljmp
lret
lea
mov
dec
cmp
and
stos
or
xchg
les
lret
xchg
sbb
cmp
outsl
sub
adc
call
adc
outsb
ret
insb
mov
dec
pop
dec
and
test
sub
jae
add
pop
push
xor
repnz
bound
test
aam
rcrl
add
loopne
inc
stos
addr16
sub
sahf
inc
mov
pusha
sub
adc
xchg
popa
paddd
rcll
in
cmpsb
mov
out
cmp
and
xchg
or
dec
sbb
int3
icebp
lcall
outsb
push
cmp
pop
mov
and
mov
arpl
outsl
adc
adc
lock
sbb
pop
xor
das
mov
inc
into
in
cli
sahf
push
push
adc
inc
sub
femms
cmp
les
or
jle
mov
out
js
jl
and
hlt
ljmp
add
out
clc
sti
stos
test
leave
ds
rorl
pop
out
adc
lret
hlt
popa
push
or
ss
jl
jmp
ljmp
and
cmp
out
sbb
test
nop
jae
push
aas
mov
aas
pop
out
cmc
rcrl
stos
movsb
xlat
jge
sub
cs
mov
push
sub
adc
imul
dec
pop
arpl
jp
sbb
je
add
imul
push
in
outsl
xor
gs
or
push
pop
ds
addr16
xchg
add
loopne
sub
repz
and
mov
movsl
add
aas
cmp
sbb
in
push
cmpsl
add
jns
jge
in
sub
sub
jmp
jbe
aad
jne
les
cmp
push
sbb
sbb
pop
inc
loop
imul
push
lods
lret
scas
jmp
xor
iret
repz
sub
jecxz
adc
xchg
mov
xor
adc
addr16
push
mov
xchg
loope
cmp
aaa
jo
sub
push
mov
xchg
or
shrb
sti
xor
mov
popf
push
push
ljmp
sahf
push
push
or
imul
addr16
aad
mov
jnp
aad
xchg
and
sbb
pop
lods
popa
fs
arpl
cmp
adc
jl
mov
rcr
ss
push
jb
jecxz
pop
xchg
push
xlat
pop
les
add
sub
push
mov
in
js
lret
repnz
les
mov
mov
or
fimuls
push
sbb
cmpsl
fistpl
fmul
jle
pop
sub
jb
popa
xchg
inc
jge
push
and
cmc
sahf
jo
sbb
push
cmp
loopne
and
arpl
inc
xor
add
xchg
sub
jae
cmp
scas
dec
outsb
cmp
add
push
sahf
jecxz
mov
pop
dec
sbb
daa
push
in
mov
popf
mov
xor
add
dec
and
stos
ljmp
cmc
inc
adc
mov
pop
aaa
xchg
push
addr16
pop
pusha
or
jmp
shlb
pop
xor
shrl
adc
mov
cmp
and
xorb
xor
mov
arpl
add
outsb
push
lea
shlb
jp
das
cltd
push
push
mov
sbb
jecxz
test
btc
xchg
cmp
mov
mov
daa
int
clc
mov
sub
iret
xchg
ljmp
fadds
popf
cmc
hlt
and
outsb
sub
scas
les
mov
xor
pop
push
jae
repz
rclb
in
pop
das
xchg
flds
cmpsb
cmp
push
xchg
jb
lock
add
adc
pop
add
daa
xlat
loope
insb
in
adc
jmp
shlb
sub
out
pop
frstor
test
adc
add
push
push
pop
push
out
int
mov
sbb
test
icebp
rolb
mov
adc
testb
adc
mov
ljmp
mov
lea
rcl
leave
out
roll
adc
ret
daa
mov
jl,pt
mov
insl
addr16
sub
imul
adc
adc
lcall
jecxz
insb
addr16
mov
jns
pop
xor
sahf
cmovb
call
sbb
sahf
dec
add
cmpsl
adcl
or
cmc
divb
mov
mov
adc
loop
lea
sub
dec
sbb
push
xchg
lahf
sub
fdivl
mov
stos
xchg
out
xor
adc
addr16
fistl
push
or
dec
mov
ds
insb
adc
or
pop
dec
inc
pop
pop
mov
mov
dec
xchg
pushf
sbb
push
jne
sub
lea
pop
fwait
divb
push
comiss
sbb
cld
xchg
cmp
mov
fucom
or
push
std
sahf
mov
dec
mov
inc
mov
addr16
and
adc
cmp
scas
das
mov
pop
xchg
and
push
fbstp
in
mov
fdivrs
shll
add
into
xchg
ja
cmp
push
xor
sahf
outsb
cmp
fisubs
movsb
inc
loopne
inc
popf
icebp
sub
in
lcall
push
sbb
ret
setle
icebp
stos
ljmp
adc
loope
sbb
fsts
outsb
xor
pop
jl
repz
out
les
adc
sbb
insb
dec
xchg
in
in
lcall
das
fdivs
push
sarb
popa
mov
cmpsb
enter
fisttpll
rorb
aas
out
cmpsb
cld
aad
clc
leave
push
das
adc
jmp
into
sbb
push
aad
mov
insb
movsb
test
jnp
lea
dec
mov
xchg
cmp
ljmp
es
fmul
or
lea
orl
loop
dec
inc
sahf
xlat
xor
cmp
push
and
in
arpl
adc
loope
adc
rorl
jae
fstpt
cld
lahf
cmpsb
popl
inc
inc
adc
push
into
dec
pop
mov
loop
outsb
in
cs
push
stos
cmpsl
dec
pop
add
adcl
in
ja
and
inc
movsb
nop
push
addr16
ds
xchg
lahf
adc
cmp
mov
scas
push
sub
push
icebp
sub
sbb
push
cmp
dec
push
movsb
stos
les
and
dec
dec
xlat
push
cmp
ret
fisttpll
dec
push
lahf
cld
popa
dec
and
sbb
int
xchg
mov
sbb
adc
les
push
in
cmp
sbb
add
inc
shll
sbbb
daa
stos
jmp
fstp
mov
mov
mov
in
xchg
mov
mov
or
inc
jl
inc
sub
push
inc
pop
jge
orl
mov
adc
sub
fiadds
das
pop
cmp
xor
cmp
rcr
outsb
jbe
je
mov
dec
pop
in
iret
pop
fsubrl
enter
je
adc
mov
lret
jp
enter
jae
or
leave
push
loope
jle
and
lods
push
leave
subl
fcompl
out
repz
aas
pop
mov
repnz
mov
push
add
cmp
fucomip
mov
cld
inc
or
dec
jp
subb
push
xor
pop
sahf
jmp
sbb
push
cmp
push
adc
push
insl
sub
jl
pop
and
mov
jmp
pushf
jnp
push
adc
cmp
in
incl
sub
or
adc
int3
fs
out
insb
xor
out
cli
pop
or
popf
xor
insl
out
add
adc
cmp
arpl
gs
push
add
pop
roll
sbb
pop
arpl
rcrl
and
ljmp
lahf
stc
push
pop
or
jb
push
sar
jl
test
push
fmul
test
roll
lods
pmullw
int3
or
mov
mov
push
add
fmuls
sbb
push
iret
rorl
or
enter
std
ror
insb
lods
xor
add
mov
test
fimuls
cmpsl
sbb
aaa
cmp
cmp
icebp
icebp
xor
cmp
add
fimuls
xchg
insl
sub
fisubs
fucom
cmp
jb
and
das
push
sahf
shrb
mov
jbe
cmp
mov
jg
or
fsubl
hlt
orb
imul
pop
test
out
jbe
int3
pop
push
cmp
into
pop
mov
jl
ss
pop
movsl
sub
dec
xchg
aam
mov
pop
push
decb
data16
lods
push
das
push
cmc
dec
and
dec
lock
arpl
or
decl
pop
mov
jb
jl
les
dec
fisubl
adc
adc
sub
sbb
int3
sub
or
pusha
enter
pop
push
out
xchg
inc
and
mov
aad
and
scas
add
mov
outsl
cmp
adc
cmp
and
sub
push
adc
jecxz
cmpsl
adc
or
movups
les
ja
xchg
or
sbb
xchg
addr16
ljmp
cmp
cmp
int
das
cli
std
out
ss
sbb
xor
scas
pop
cmp
lahf
jecxz
xor
inc
mov
js
push
fldcw
mov
or
and
es
fwait
rsqrtps
icebp
loope
int
sub
mov
imul
rorb
decl
aam
mov
dec
into
repnz
xchg
adc
in
xchg
ljmp
inc
mov
xor
in
sarb
iret
cmp
sbb
or
fisubrs
arpl
sbb
jp
lret
cs
xor
lea
test
dec
fsubrl
push
jne
jb
cmpsl
rcrb
adc
rolb
rcr
into
rcl
jne
push
or
mov
sahf
xor
imul
shrd
pop
push
les
jne
sub
lds
mov
jmp
push
pop
frstor
scas
cs
pop
xchg
pop
imul
inc
adc
xchg
cmp
stos
or
in
popa
cmp
fiaddl
fldl
pop
pushf
mov
cmpsb
in
mov
out
mov
aaa
xchg
jl
mov
or
ret
out
movsb
sbb
xchg
xor
sbb
cs
xor
aad
loope
loope
ret
mov
js
scas
cmp
js
in
ds
test
push
sti
or
test
outsl
imul
adc
adc
call
inc
shr
or
negb
xchg
adc
imul
fs
sub
test
mov
ficomps
daa
pusha
lods
ljmp
sub
lcall
daa
aad
insl
pop
test
jno
pop
shrb
in
and
pop
jmp
jbe
adc
sub
loope
loopne
cs
sahf
and
clc
sbb
jmp
mov
repz
mov
loope
fcoms
add
loopne
cmc
cmpsb
in
in
or
mov
in
fmulp
sbb
js
jge
pop
mov
cmp
imul
jmp
out
dec
es
cld
sbb
or
in
mov
aam
movsl
js
cltd
dec
repnz
repz
fwait
adcl
fsubl
in
repnz
std
roll
pop
stc
add
and
or
push
pop
adc
or
outsb
sbb
imul
inc
fs
xchg
mov
jmp
fbld
int
sbb
mov
jmp
push
lahf
fisubs
jl
or
sti
bound
pop
es
pop
jnp
cmc
inc
mov
xchg
push
push
or
sbb
addl
nop
dec
scas
enter
into
xchg
daa
xchg
repz
mov
xchg
sbb
mov
out
xchg
into
sarb
scas
xlat
in
push
or
insb
jne
push
test
adc
cld
fdivl
mov
pmaddwd
mov
jae
imul
clc
das
lea
pop
inc
or
mov
mov
adc
subps
or
jnp
sti
stos
jecxz
pop
sbb
pusha
test
dec
and
jbe
outsb
imul
mov
push
mov
les
pop
push
push
scas
addb
fmuls
adc
fcomps
leave
sbb
daa
mov
mov
sbb
cmc
push
push
sbb
enter
aas
into
dec
xchg
add
or
icebp
cmp
fisubrs
leave
fldcw
adc
enter
out
jecxz
ret
loope
mov
leave
xchg
or
sti
xchg
mov
push
test
push
cmp
push
test
push
inc
or
leave
push
jecxz
and
es
push
outsl
or
notb
sahf
and
jle
mov
mov
cmp
mov
adc
sub
loope
imul
test
mov
adc
shll
int3
push
pop
xchg
adc
dec
arpl
push
fisubs
mov
arpl
sub
sbb
push
xchg
addr16
lods
and
and
sub
pop
xor
or
adc
test
adc
jns
dec
and
mov
daa
push
jmp
adc
push
xchg
jne
mov
rclb
gs
mov
adc
loopne
in
in
push
mov
in
mov
orl
inc
adc
xchg
movsb
or
insl
mov
jecxz
inc
jns
loopne
jnp
xchg
jg
enter
out
hlt
dec
cltd
cmpsb
in
push
xchg
sti
lock
xlat
jg
je
jecxz
dec
mov
hlt
inc
scas
sti
leave
mov
and
sbb
ljmp
mov
scas
pop
and
sbb
ss
add
and
fildl
cmpsb
leave
adc
push
adc
call
stos
add
inc
mov
xchg
shlb
and
mov
mov
inc
fcompl
jne
sahf
aad
sysexit
addb
fdivr
adc
xchg
fwait
in
xchg
dec
insl
outsl
sub
popf
or
xchg
aaa
cmc
shld
and
pop
xchg
dec
int
insl
pop
outsl
push
bound
insl
mov
rcrb
sahf
loope
push
adc
push
scas
mov
adc
ss
cmp
xor
or
aas
stos
cmc
ljmp
repz
test
cmpsb
lods
mov
adc
mov
pop
xchg
dec
fs
push
in
in
mov
cwtl
cmp
movl
xor
dec
push
fdivs
dec
inc
inc
iret
addr16
sub
popa
insl
aad
jp
or
fdivrl
mov
push
ret
loope
out
addr16
fcoml
sbb
sub
cltd
rorb
into
insl
lahf
dec
push
ja
and
scas
leave
jle
les
ficoml
push
popa
lahf
push
cmp
cmpl
xor
mov
fmul
fstpt
pop
dec
ret
hlt
jbe
inc
ja
cmc
ja
fnstenv
jl
mov
or
push
testl
sub
stos
xor
sbb
rcrl
mov
xchg
in
push
ficompl
sarl
int
loope
ds
sbb
fsubs
shll
movsl
xchg
ss
and
sub
out
repnz
pushf
jecxz
lret
xor
add
sbbl
ja
imul
jmp
adc
bound
insl
in
fdivr
sub
arpl
add
lods
fwait
cmp
jae
adc
dec
add
jecxz
addr16
push
inc
loop
jge
push
pop
or
adc
sahf
push
mov
sahf
lcall
fldt
dec
lods
repz
das
inc
sbb
pop
pop
pop
outsb
cmp
subl
ret
jp
test
sahf
mov
jo
loopne
cs
int3
in
pop
add
xor
stos
sbbb
cmc
daa
fwait
mov
add
and
sub
repz
ljmp
int3
dec
pop
push
cmpsb
inc
mov
push
xor
push
sub
jmp
sti
sub
sub
adc
adc
icebp
insb
addr16
ss
adc
adc
pop
mov
outsb
mov
adc
loop
out
add
sub
popf
push
movl
xchg
jl
mov
outsb
lock
cs
cmp
adc
mov
mov
in
sub
cmc
addb
fildl
aam
nop
add
sub
jno
xlat
sbb
cmp
insb
and
xchg
or
aad
cli
ret
sub
int3
cld
pop
aas
repz
popa
or
mov
imul
clc
xchg
out
pop
inc
mov
jb
jno
loope
fsubp
adc
dec
or
mov
dec
dec
or
adc
pop
and
loopne
leave
xchg
insl
das
cmp
rorb
sbb
pop
add
jo
cltd
das
cmp
push
inc
push
and
sbb
clc
mov
and
rclb
nop
cs
mov
sahf
outsb
ss
sub
or
das
sub
or
das
dec
insb
fdivl
inc
cmp
push
dec
or
stos
adc
repnz
add
aaa
aam
fs
fs
xchg
loope
or
add
sub
mov
imul
fucomip
mov
xor
push
sbb
sbb
imul
in
stos
xchg
ss
iret
xchg
push
and
pop
sbb
es
imul
or
mov
push
nop
xchg
loope
sbb
int3
jge
mov
mov
std
jne
push
es
hlt
inc
jne
dec
in
xor
sbb
dec
mov
dec
sub
cli
xor
clc
dec
sti
push
xor
sbb
push
icebp
insb
mov
cmpsl
insl
cmp
ss
or
xchg
jbe
xor
shl
inc
xchg
sub
lcall
ljmp
fmul
jge
push
jnp
sbb
inc
xchg
addr16
mov
pop
sarb
push
sub
jl
adc
push
das
ljmp
lret
jp
or
insl
dec
jg
dec
cld
push
nop
ret
and
jo
ljmp
jne
jno
mov
sbb
cltd
cmp
push
pop
test
cmp
dec
jno
sbb
sbb
cmp
mov
insl
enter
mov
pop
ljmp
pushf
addr16
or
lret
xchg
push
push
ret
imul
jmp
sti
data16
xchg
repz
adc
iret
push
lea
dec
and
ja
inc
sahf
lahf
int
sub
sbb
ljmp
mov
push
jmp
ds
or
pop
dec
pop
stos
adc
sub
cmp
int
cli
outsl
addr16
cmp
mov
call
imul
inc
and
insb
lock
sub
adc
addr16
pop
outsb
mov
pop
lds
sbb
adc
add
std
es
and
ljmp
pop
inc
pop
movsb
sbb
test
sub
lret
js
push
adc
dec
add
sbb
adc
ljmp
stos
lea
sbb
movsl
dec
xchg
cmp
ljmp
repnz
jbe
push
push
stos
inc
push
inc
jb
rcl
add
pop
inc
and
add
xlat
xchg
xlat
pop
add
push
push
nop
inc
cwtl
outsb
data16
mov
jne
xor
psubw
cmp
fisubs
add
pushf
jge
insl
fwait
jns
dec
mov
inc
fimuls
dec
push
push
cs
daa
adc
ljmp
mov
sbb
adc
pop
xchg
fsubrs
cmp
sub
push
in
push
xor
cmpxchg
lea
xchg
lds
jns
mov
outsb
fwait
adc
fisubrs
dec
inc
push
aaa
addl
mov
push
sub
dec
add
pop
flds
addr16
bound
inc
push
xchg
pop
pop
pop
sbb
ror
sbb
add
inc
push
rol
or
push
gs
lock
xchg
adc
jb
inc
fwait
xor
pop
sbb
xor
sub
mov
ds
cmc
arpl
push
xor
pop
cmp
fsub
cmp
xchg
or
cmp
xchg
push
xor
sub
pop
pop
mov
cmp
in
or
mov
imul
mov
push
push
push
ds
sub
jo
mov
out
push
push
sahf
inc
adc
mov
sbb
cli
scas
sbb
lds
or
lea
imul
aad
cmpsl
in
push
jecxz
pop
jnp
lods
jle
int3
mov
pop
adc
int3
test
iret
jl,pt
popl
jp
js
dec
scas
ficompl
fisubrs
fisubl
xchg
pusha
sarl
and
stos
shlb
mov
jle
adc
add
mov
pop
push
or
push
cs
decb
insb
and
jae
in
fisttpl
or
mov
pusha
sbb
ja
stc
push
fcompl
fldcw
and
aaa
imul
es
mov
bound
mov
nop
mov
cs
sbbb
fsts
or
outsl
out
and
adc
daa
xchg
xor
sbb
add
mov
nop
repnz
and
aas
iret
bound
push
sub
inc
lcall
mov
loop
adc
jp
xlat
pop
call
aaa
adc
mov
fisubrl
sbb
js
das
fdivs
push
sub
sub
or
test
jge
ds
sub
fdivl
sub
mov
and
mov
xchg
push
call
jo
out
jns
lret
call
test
fsub
shrb
and
adc
lods
xchg
cmp
push
outsl
add
clc
cs
jns
xchg
add
out
mov
mov
loope
xchg
call
mov
add
stc
shl
cmc
cmp
mov
rolb
adc
mov
out
dec
xchg
rorl
add
pop
mov
push
lret
mov
mov
push
iret
stos
mov
cltd
pop
aas
test
and
or
push
popf
andb
cmp
cli
fs
rorb
rcrb
mov
fdivr
in
jl
popa
iret
mov
sub
cmp
rcll
adc
adc
lahf
call
mov
sub
movsl
insl
aaa
inc
in
cli
test
push
mov
pop
outsl
cmpsl
fldt
xchg
add
sbb
dec
imul
or
dec
bound
sbb
popf
addr16
ss
sub
mov
mov
popa
or
dec
scas
dec
leave
mov
jo
stos
in
pop
push
ficompl
cmp
sbb
ret
in
icebp
sub
lock
sub
sarb
int
push
sbb
pusha
sub
xchg
cmp
leave
dec
leave
adc
push
jg
lock
xor
push
xor
addr16
faddl
aas
lock
push
arpl
loopne
mov
je
int3
das
in
xor
mov
sbb
andl
push
scas
push
addr16
fdiv
or
and
outsb
sub
push
and
scas
cmc
sub
fadd
sub
in
fldl
sub
mov
xor
ret
daa
cmovno
sahf
insb
leave
ds
sbb
mov
jmp
repz
int3
adc
mov
lods
sub
js
sub
fsubrs
jnp
mov
inc
cs
mov
and
sbb
cmp
add
xchg
test
sbbl
loopne
pop
jae
bound
call
dec
fcomp
fsubl
mov
outsl
inc
sub
adc
out
outsl
push
jnp
call
push
dec
push
cltd
andl
cmp
jle
fwait
add
cmp
cld
mov
cmp
cmp
xchg
dec
imul
mov
je
dec
mov
dec
mov
or
dec
je
mov
jle
pushw
in
mov
outsl
cmp
sbb
sarl
mov
vmwrite
add
mov
lds
pop
and
push
faddl
aad
adc
ss
push
loope
popa
call
sbb
push
sbb
push
push
cli
sbb
jns
mov
xor
adcb
jp
fdivrp
jne
xlat
nop
shrl
mov
loop
cmp
lret
mov
pop
js
pop
jns
or
lods
clc
sbb
cs
inc
and
jo
push
sub
dec
xlat
jnp
add
push
rcll
lret
imul
sub
mov
adc
sbbl
adc
adc
or
or
and
and
xorb
loope
mov
ljmp
das
mov
mov
mov
push
jno
outsl
jp
pop
mov
mov
xlat
jecxz
js
and
adc
sysenter
mov
push
adc
cs
push
dec
data16
aam
enter
jo
jp
out
cmpsl
lahf
add
push
mov
dec
or
or
lret
xchg
sbb
lahf
mov
addl
pushf
adc
jbe
adc
mov
icebp
mov
ret
adc
cmpsb
aad
dec
dec
mov
xor
or
or
lock
or
pushf
mov
das
jae
aas
outsl
push
jp
imul
loop
jnp
pop
adc
mov
pushf
cmc
pop
inc
inc
mov
jo
dec
adc
and
pop
dec
pop
insl
lods
fisubrl
or
in
rcr
lods
cmp
cs
das
xchg
and
out
mov
cmpsb
push
movsl
mov
push
pop
imul
bound
stos
faddl
lret
iret
rcl
rolb
inc
imul
mov
push
test
jg
xchg
adc
mov
sbb
or
mov
and
pop
cmp
movsb
pop
adc
dec
ljmp
ficomps
lahf
adc
and
mov
fcompl
adc
test
jne
jno
lret
xchg
ss
adcb
aam
in
sub
and
ret
pop
ret
push
mov
dec
fstps
clc
mov
fidivrl
or
testl
decl
shll
mov
rol
ljmp
mov
adc
cmp
jle
sahf
mov
mov
or
stc
xor
sub
mov
mov
js
aad
ret
addb
testl
jnp
pop
lods
clc
push
cmp
loopne
xchg
outsl
addr16
stc
mov
jbe
dec
xchg
lret
push
pop
mov
or
mov
cltd
lds
cli
addr16
xchg
mov
push
rorl
aaa
cs
sub
xchg
jmp
notb
sub
mov
sahf
dec
pop
inc
lock
xlat
jne
scas
adc
fsubs
lcall
test
pop
sub
mov
lret
sbb
ret
mov
sbb
mov
adc
bound
es
outsb
jns
and
in
and
test
leave
ljmp
cs
xlat
sub
add
sahf
and
pop
adcl
ret
jbe
adc
fisttps
xchg
rcll
lock
shll
dec
jno
mov
push
push
mov
imul
push
and
dec
sbb
outsb
sbb
xchg
dec
push
cmp
adc
aam
cmp
ret
cmp
inc
and
xchg
jp
xor
lcall
test
inc
les
adc
loopne
push
or
sahf
lea
repz
addr16
mov
imul
sub
nopl
push
sbb
inc
aad
ret
cmp
fwait
lcall
jecxz
push
int3
cmpsb
or
pop
lea
mov
lahf
xchg
or
mov
stos
cltd
test
fbstp
rorb
xchg
popf
movsb
jp
sbb
lcall
shll
push
xchg
lret
fcomps
add
jb
jae
pop
inc
adc
mov
mov
xor
sbb
mov
push
dec
or
mov
pop
inc
rclb
lock
xor
mov
or
sbb
shlb
ja,pt
mov
es
cmp
jbe
push
and
fs
mov
mov
sub
stc
push
cli
dec
sbb
mov
dec
int
mov
ror
or
pop
dec
fisttps
dec
dec
adc
push
cmp
sbb
push
cmp
pushf
outsb
loope
daa
sbb
pop
es
pop
sub
mov
dec
aaa
jo
xor
cs
imul
loop
mov
jg
jbe
mov
out
es
cltd
fmuls
and
pushf
xlat
sub
xor
or
mov
dec
sahf
inc
dec
call
cltd
push
push
dec
je
dec
iret
insb
cmp
data16
adc
sbb
sahf
loopne
inc
int
xor
add
and
add
add
push
lea
push
ja
pop
repz
stos
and
mov
and
dec
xor
into
fwait
stos
or
mov
sub
pop
add
insb
cmp
in
sbb
and
or
arpl
stos
add
idiv
les
cmp
xchg
dec
outsb
mov
insb
pop
and
fwait
pop
adc
and
adc
and
ror
sub
push
add
test
mov
push
xchg
jno
sbb
shl
mov
mov
fisttps
mov
mov
test
arpl
cmpsl
fwait
mov
adc
ss
mov
ss
inc
inc
shrb
adc
pop
xor
imul
xchg
insb
cmpsl
nop
int3
dec
call
xor
pop
das
int
mov
jne
rcrb
les
inc
adc
insb
mov
rcll
loop
and
pop
fwait
sbb
inc
das
mov
push
stos
or
or
adc
sbb
adcl
push
lret
sub
xor
sub
jnp
xlat
xor
ljmp
in
scas
pop
mull
adc
mov
lods
add
loope
adc
or
push
add
sub
push
aas
data16
scas
and
inc
or
int
cmp
cmp
sub
xor
les
insb
adc
sbb
sub
inc
cltd
jl
jle
imul
lret
and
push
xor
daa
mov
sbb
stos
pinsrw
mov
push
add
push
xchg
paddusb
mov
mov
lret
int
adc
sbb
adc
mov
cli
js
pop
dec
jecxz
xchg
in
xchg
les
je
adc
shrd
clc
mov
inc
or
push
jl
gs
adc
push
and
jle
sub
jl
or
inc
mov
push
insb
out
push
cltd
fstpl
push
ljmp
and
lret
pop
mov
push
loope
xchg
cmp
and
jo
dec
inc
nop
fnsave
jns
jne
pushf
ret
repnz
mov
sahf
sbb
pushf
sub
mov
xchg
push
rclb
popf
inc
mov
or
dec
add
pushf
jo
xchg
or
jle
popa
in
sti
lea
daa
imul
mov
bound
addr16
addl
dec
jae
mov
mov
test
sub
pop
sti
add
mov
loopne
xchg
sarb
cmp
setne
xor
add
and
das
push
push
push
punpcklwd
push
add
shlb
sbb
push
faddl
xchg
mov
inc
pop
xlat
inc
jmp
cmc
jecxz
cmp
xlat
pop
adc
sbb
add
ret
push
sti
jo
movsl
cmp
mov
lahf
xor
cmpsb
cmp
sub
xor
das
adc
outsb
shrb
pop
pop
fwait
sbb
cld
sbb
cmc
cld
and
lret
add
dec
in
cmp
xor
into
dec
stc
jg
out
enter
lret
jne
mov
push
pusha
jo
popf
sbb
inc
push
pop
pop
jmp
cmc
adc
and
xlat
aam
push
push
lahf
pop
test
cmc
jl
mov
dec
mov
data16
push
xor
add
imul
std
hlt
repz
push
fdivrs
xor
nop
or
push
js
fucomi
test
das
dec
lcall
test
mov
dec
jnp
shll
data16
or
sbb
fmul
push
rcrb
and
lock
sbb
xchg
mov
lcall
adc
add
ret
xchg
xor
imul
lret
adc
and
std
mov
clc
inc
clc
push
push
daa
popf
notb
incb
xor
xor
and
arpl
dec
aad
push
inc
dec
pop
jle
subb
xor
out
mov
sub
punpckhwd
dec
add
xor
repnz
lock
nop
lock
or
push
cmc
sahf
cmpsl
xchg
cmp
mov
push
mov
xchg
jne
dec
test
fdivrl
pusha
mov
shlb
mov
sub
imul
std
xor
fmul
cld
jbe
out
adc
xchg
test
hlt
ret
fucom
repz
ds
inc
aam
dec
sahf
ljmp
in
subl
sbb
xor
popa
adc
add
sbb
addr16
lret
add
push
jl
adcb
xchg
jnp
add
xor
cmp
cmp
adc
or
adc
lahf
mov
fucomp
xor
adc
stc
dec
xchg
adc
xchg
dec
sbb
push
dec
mov
push
fisubs
loopne
mov
lods
popa
cmp
or
nop
sbb
pop
adc
xchg
imul
mov
daa
jecxz
stos
scas
ficoml
pushf
dec
iret
lret
jo
xchg
jo
xchg
inc
inc
enter
faddl
aam
cwtl
push
scas
push
inc
pop
pop
insb
in
das
js
imul
ljmp
sbb
arpl
jne
push
and
sbb
sub
push
add
test
or
and
or
pusha
fwait
jecxz
pop
inc
cmp
mov
or
pop
iret
mov
jmp
pushf
jnp
mov
nop
in
dec
fadds
cs
push
rolb
repz
cmpsb
dec
or
sub
jno
mov
sbb
sub
mov
adc
clc
imul
pop
push
dec
cmp
mov
loopne
repnz
lock
das
jg
or
sbb
mov
jp
das
sub
mov
adc
push
and
in
cmp
sar
mov
fwait
stc
push
mov
cmp
stos
xlat
addr16
and
push
inc
adc
cmpsl
dec
and
xchg
ret
int3
pop
or
xchg
mov
jecxz
cmp
sbb
adc
cwtl
inc
push
jg
ret
imul
pop
adc
jb
iret
jno
fdivs
ljmp
aas
outsb
adc
dec
scas
or
lds
roll
inc
stos
das
jne
aad
orb
jns
inc
outsl
pop
push
xchg
add
cli
sbb
push
sbb
adc
xchg
dec
jb
lcall
cltd
xchg
fcoms
orb
mov
in
das
mov
jns
or
jns,pn
ljmp
in
call
cmpsb
xchg
jecxz
adc
test
ljmp
mov
lret
add
insb
rolb
test
fildll
testl
jp
mov
cs
xor
pop
jmp
jnp
jle
jmp
lcall
pop
and
fiadds
mov
rcrb
mov
sbb
test
sub
int3
cmp
movsb
jle
xchg
mulb
mov
adc
ja
or
adc
std
pop
push
lock
adc
std
xchg
mov
inc
mov
pusha
js
dec
push
setle
inc
mov
pop
jecxz
jns
lods
les
jb
mov
add
dec
adc
popf
jp
outsl
dec
insb
pop
or
or
outsb
sub
outsl
and
or
sbb
cltd
push
jl
jnp
adc
jae
sahf
sbb
inc
sbb
push
test
jbe
insb
cmpb
adc
lcall
mov
add
lods
jb
sahf
addr16
mov
inc
inc
ficoml
out
nop
mov
cs
sbb
and
pushf
pop
jl
test
and
in
xchg
pop
fsts
dec
mov
fcoms
sbb
in
inc
arpl
sahf
cs
mov
rcrl
and
adc
sbb
push
pop
xor
nop
mov
rcrl
dec
inc
cmc
xorb
insb
xor
loop
dec
jno
sbb
rolb
xor
and
inc
cmpsb
push
xor
and
dec
xlat
sbb
mov
out
xor
jb
dec
xchg
mov
jno
jno
sub
imul
insl
jns,pn
aaa
fsubrl
cmp
sbb
fwait
or
lea
outsb
pop
push
and
mov
and
sbb
lcall
and
lcall
xchg
lcall
push
xchg
or
sahf
mov
push
jmp
fists
mov
fsubl
movsb
cld
fwait
push
pusha
addr16
mov
inc
imul
pop
outsb
mov
mov
push
and
xor
faddl
je
pop
xchg
lods
sarb
sub
xchg
lds
decb
add
adc
pop
push
icebp
mov
loope
sti
inc
mov
leave
fidivrl
and
mov
cmp
jge
mov
sub
push
mov
outsb
cmp
xor
mov
cmp
dec
outsb
or
dec
xchg
xchg
pop
pushf
in
inc
daa
lea
dec
sub
push
daa
dec
jns
pop
adcl
pop
lret
test
cli
adc
iret
xchg
and
xchg
or
or
stc
jg
adc
mov
sbb
and
xchg
and
xor
lods
sub
dec
loopne,pt
xchg
pop
push
cmp
xchg
int3
dec
lret
aaa
push
pushf
cmp
shlb
fisttpl
cmp
outsb
stc
sub
push
mov
mov
insl
push
rclb
sub
dec
test
dec
jle
es
repz
cmc
pop
jle
sub
test
jg
sbb
stos
cmp
mov
test
dec
fwait
lahf
and
and
push
mov
cmp
pop
xlat
ja
push
lcall
insb
mov
into
leave
add
xchg
sar
daa
inc
mov
pop
push
mov
pop
sbb
add
mov
adc
and
add
lcall
xchg
mov
adc
jg
lds
cs
sub
iret
popa
call
sbb
mov
je
add
push
mov
pop
or
xlat
mov
add
imul
or
push
sbb
idivl
push
cmp
xchg
push
insl
jecxz
fstpl
or
clc
xlat
iret
sub
testl
inc
adc
add
cs
jp
and
or
stos
lcall
add
push
push
cltd
sub
lret
mov
jmp
sbb
mov
popa
mov
push
arpl
pop
popa
add
repz
movsl
mov
popf
sub
sub
rorl
test
cmp
push
push
or
add
inc
arpl
jp
push
or
xor
call
mov
fbld
or
cmpsb
inc
ss
push
mov
push
sub
outsb
lcall
fnstenv
test
loope
cmp
clc
cmp
xor
or
inc
push
xchg
pop
negl
or
adc
maxps
imul
fcoms
lretw
and
jle
int3
sub
cmpsl
lcall
cmp
out
sbb
jge
rcll
lea
cmp
xchg
cwtl
push
sub
inc
cmpsb
mov
clc
in
repz
sahf
mov
xchg
sbb
cli
and
enter
xor
dec
cs
or
or
jmp
push
enter
mov
xchg
mov
rorl
cmp
fwait
sbb
and
lds
es
clc
xor
stc
ficoms
mov
testb
pop
ret
mov
mov
fmul
xchg
sub
cli
fcoms
add
mov
xchg
push
ret
bound
je
add
shlb
ficompl
arpl
inc
push
mov
movzbl
pop
in
push
in
mov
adc
repz
insb
addr16
bound
fsubs
mov
shrl
dec
insl
mov
pop
movsb
out
or
mov
inc
sub
scas
xor
cli
das
jp
into
push
fiaddl
cmp
adc
or
mov
repz
mov
sub
pusha
lods
dec
movsb
dec
push
das
adc
loope
mov
xchg
add
mov
mov
sbb
loopne
ficomps
mov
xor
mov
pop
nop
test
adc
movsl
or
aas
les
adcb
add
rcl
js
push
repz
insl
inc
cwtl
insb
cwtl
test
adc
stos
xor
loop
push
mov
lods
daa
lret
adc
dec
in
inc
jo
adc
insb
lods
fists
scas
xor
jnp
adc
xchg
push
ljmp
je
les
adc
repnz
sbb
jg
ljmp
inc
or
addr16
dec
mov
jl
iret
mov
push
mov
jecxz
in
stc
inc
cltd
into
sub
sarl
inc
cmpsl
mov
cli
int3
dec
adc
daa
and
mov
adc
push
adc
into
imul
push
push
jno
push
aam
mov
inc
pop
cs
nop
or
popa
push
adc
popf
or
shlb
dec
or
mov
outsl
jmp
ficoml
jmp
xor
jns
xor
mov
lcall
mov
insl
push
mov
sbb
dec
cmp
hlt
aad
push
mov
push
lods
inc
mov
sbb
pop
adc
sbb
dec
fdivrs
mov
lahf
and
sbb
xchg
sbb
mov
sbb
gs
xchg
roll
addr16
push
sbb
int
lock
dec
adc
fsubrs
in
jmp
sti
mov
sbb
or
sbb
mov
mov
and
mov
mov
and
scas
cs
and
mov
insl
jns
sbbl
jp
pop
cwtl
ds
es
out
mov
xor
xchg
jmp
les
inc
adc
dec
lret
xchg
aad
aam
jnp
cwtl
jo
mov
nop
pushf
xchg
and
pop
adc
into
inc
jle
xor
lds
jg
pop
jno
push
xlat
popf
sbb
mov
push
dec
dec
ret
sbb
fistpll
mov
enter
adc
xchg
ljmp
shll
dec
idivl
adc
cmp
stos
jno
mov
inc
pop
or
dec
jg
xchg
stos
cmp
inc
popf
jecxz
out
es
repz
mov
sbb
or
sbb
pushf
stos
mov
leave
jno
shl
or
mov
xchg
jmp
sti
mov
sbb
xchg
addl
andnps
mov
in
push
sahf
rorl
aam
fdivrs
daa
dec
pop
mov
push
inc
cmp
inc
mov
cmc
pop
xor
xchg
popf
in
dec
inc
aad
cmp
sub
mov
fsubr
mov
dec
fisubs
dec
mov
xor
lahf
adc
and
add
adc
hlt
xchg
dec
xlat
popa
xchg
outsl
lret
lods
bound
cwtl
jns
scas
sbb
push
mov
in
dec
mov
mov
push
xor
mov
or
inc
push
push
dec
jge
jg
sbbl
push
sbb
adc
xlat
mov
and
stc
iret
lcall
mov
cwtl
and
dec
shll
in
or
movsl
sub
mov
arpl
and
push
movsb
fistl
outsb
adc
loopne
push
popf
jb
adc
insb
adc
jl
mov
hlt
aad
cmp
rcr
iret
mov
adc
hlt
jg
add
xor
ss
fcmovne
mov
loopne
sbb
out
push
jnp
dec
jl
push
outsl
or
daa
dec
sahf
sbbb
xor
test
jbe
das
adc
mov
sub
pop
add
pop
and
xchg
sbb
mov
mov
pop
hlt
lods
int
mov
dec
sbb
popf
sbb
in
pop
cli
sub
or
push
xchg
add
jge
add
cltd
xchg
mov
and
mov
rcrl
jae
pusha
into
movb
lcall
inc
lret
xchg
outsb
push
mov
pop
je
adcl
xlat
adc
sub
lods
sub
push
mov
pop
test
xchg
cmp
lods
fistl
xchg
leave
sbb
sbb
mov
lcall
rdtsc
sub
or
and
call
and
dec
xchg
jns
enter
add
or
adc
pop
dec
outsb
adc
es
xor
or
cmc
subl
pop
pop
ljmp
and
xlat
test
mov
jmp
cmp
push
pop
xor
mov
xor
push
movsb
rcl
movsb
imulb
or
popf
jg
xor
repz
std
jg
cli
jge
push
ror
dec
fdivr
and
pop
icebp
jle
into
cmp
loope
jle
adc
hlt
outsl
cli
movsb
mov
mov
adc
shll
daa
addr16
push
iret
adc
mov
jns
jno
nop
lock
add
pop
jge
adc
popa
int3
pop
jle
adc
add
arpl
xchg
adc
xlat
fcoms
test
and
jne
dec
xchg
sti
sbb
push
mov
pushf
mov
loopne
push
bound
insb
lods
xor
clc
mov
xor
pop
sbb
test
sub
lahf
outsb
push
int
jmp
sub
mov
dec
add
int
loop
pop
popa
out
rcl
dec
sbb
sbb
aad
mov
add
pushf
hlt
insb
outsb
ljmp
cmpsb
cmp
xlat
jecxz
and
aas
dec
pop
icebp
inc
js
fnsave
cs
pop
add
test
insl
sbb
jmp
and
cmp
xchg
ret
adc
push
inc
fdivl
in
out
cmp
and
pop
addr16
push
fnsave
lds
cmp
sbb
ret
rorl
jl
adc
xor
sbb
cmp
cmp
push
fldl
rcrl
ret
fsubrs
out
lods
or
outsb
pop
xchg
popa
sbb
out
insb
hlt
mov
xchg
push
inc
or
sbb
jo
je
outsb
dec
jmp
imul
jo
jge
mov
outsl
jmp
adcb
push
lret
sub
push
inc
fwait
outsl
jmp
leave
imul
mov
mov
adc
xchg
push
loope
inc
nop
mov
mov
mov
pop
popa
shlb
and
outsb
and
outsb
leave
cltd
shll
cmpsb
ja
lea
sub
adc
pop
bound
push
xorb
fnstenv
daa
ds
sub
inc
lcall
sub
cmpsl
jbe
push
mov
jle
sbb
stos
ss
cmp
cwtl
test
push
cmp
lea
daa
fistpll
push
jp
xor
dec
sbb
push
mov
scas
sbb
outsb
mov
add
cmpsl
mov
adc
sbb
outsb
mov
dec
sbb
insb
dec
xor
cmp
xchg
fldl
xchg
jg
enter
and
dec
insl
loope
leave
mov
ja
daa
xor
pop
xor
or
jno
pop
or
push
sbb
ds
out
loope
add
dec
and
push
stos
cmp
pop
xor
pop
loope
pushf
pop
roll
test
aas
mov
repnz
add
push
push
or
pop
xor
xor
jp
and
jb
mov
mov
fwait
rcr
or
call
int3
mov
in
sub
mov
xlat
movsb
mov
aaa
jns
xor
ret
lret
repnz
pop
add
inc
jno
ds
add
mov
pop
lea
add
mov
int
dec
clc
xchg
leave
lcall
insb
jns
mov
pop
dec
sahf
fmul
xor
mov
xor
movsb
imul
cmp
lds
outsl
push
push
and
dec
ret
lcall
mov
lcall
cmp
jge
sbb
mov
sbbl
lcall
or
push
mov
and
out
or
daa
jno
call
mov
je
push
jmp
push
mov
or
adcb
mov
pusha
cmpb
into
mov
push
scas
leave
jge
and
sbb
aam
push
push
das
les
into
outsb
push
xchg
adc
mov
bound
jbe
adc
mov
xor
and
mov
jo
idivl
jmp
cmp
icebp
add
push
loopne
lret
es
mov
cltd
pusha
xor
out
mov
mov
inc
repz
mov
ret
pop
test
cmpl
adc
sub
jno
popf
lock
into
mov
popa
daa
mov
adc
mov
fidivrl
mov
or
cmc
roll
add
mov
adc
sub
add
or
mov
push
mov
or
xor
lcall
add
add
test
inc
jecxz
imul
mov
xlat
pop
mov
pop
lcall
popl
or
loopne
sbb
adc
adc
lahf
lea
or
pop
into
sub
xchg
pop
out
or
cmc
cs
out
cmc
mov
inc
pop
fisubrl
sbb
punpckhwd
dec
adc
dec
push
aam
mov
rcr
daa
leave
mov
pop
lret
or
adc
jno
imul
add
into
pop
jmp
or
call
stos
aas
dec
enter
adc
adc
inc
push
add
xor
inc
or
mov
outsl
add
push
ss
cmp
arpl
mov
and
lcall
into
pop
arpl
lret
outsl
or
iret
or
bound
popa
popf
push
pop
push
mov
sti
js,pn
add
xchg
popf
shll
pop
adcl
xchg
sbb
test
sub
loope
jle
pushf
outsl
iret
mov
outsb
or
scas
mov
rcll
pop
xor
dec
insl
xchg
in
aas
jno
shlb
push
adc
daa
sbb
mov
cld
adc
adcl
mov
movb
or
shll
mov
repz
adc
mov
scas
cltd
mov
or
dec
adc
cmp
adc
fisttps
sub
popa
or
in
mov
ss
adc
cmpsb
xlat
lcall
adc
mov
xchg
fadds
mov
sub
inc
jne
mov
pop
arpl
fwait
push
and
xchg
adc
repz
aaa
nop
addr16
xor
shlb
aas
xchg
gs
pusha
or
mov
mov
int3
clc
xchg
or
add
jp
xchg
fldenv
movb
ret
pushl
cmpsl
adcb
jg
push
mov
and
loope
das
pop
data16
sbb
inc
rcl
or
xor
dec
lods
sarl
xor
sbb
mov
and
sahf
movsl
jnp
dec
push
xchg
push
dec
pop
jmp
jns
dec
push
cmp
jo
and
dec
add
or
hlt
jmp
testb
push
and
cmp
lcall
xor
pop
add
sub
dec
std
adc
pop
xor
pop
popf
pop
inc
jecxz
jno
or
add
outsl
comiss
flds
and
inc
add
add
sub
or
sub
sbb
pop
adc
loope
pop
and
fwait
sbb
sbb
pop
add
frstor
cmp
jne
xchg
adc
sbb
lds
vmovaps
rcl
addr16
stc
jge
aam
leave
in
adc
push
mov
xlat
lahf
ret
push
inc
cli
cwtl
pop
or
sahf
jno
negb
mov
ret
dec
pop
add
movsl
adc
insl
emms
lock
pop
push
and
cmp
int
pop
sti
mov
jecxz
cmp
mov
inc
test
lea
jmp
xchg
daa
dec
push
nop
mov
add
cmp
and
cld
sbb
push
fimull
in
push
pop
jmp
jg
and
stc
mov
push
xchg
adc
mov
add
dec
mov
or
cltd
jge
xchg
movsl
movlps
sbb
jne
or
add
enter
mov
mov
aad
or
sahf
das
call
xchg
les
je
icebp
shrl
jne
pop
pop
adcb
fs
or
sbb
fiadds
and
leave
mov
in
iret
jnp
ljmp
jae
adc
ret
aam
inc
les
mov
xchg
lret
xchg
ljmp
movsb
or
mov
mov
adc
movsb
jmp
inc
cmp
and
cmp
and
pushf
cmp
and
mov
in
rolb
ds
push
inc
mov
test
pop
imul
cmc
dec
pop
mov
cltd
out
lahf
xchg
leave
xor
and
scas
push
jmp
cmp
push
in
sarb
cmpsb
xchg
and
push
scas
sbb
jbe
aam
or
xor
add
mov
mov
xor
sar
test
mov
mov
pop
mov
clc
dec
adc
out
dec
adc
inc
add
jl
je
daa
ds
and
jmp
cmp
adc
inc
or
mov
and
mov
leave
pop
or
lcall
in
dec
xchg
adc
mov
stc
jle
stos
hlt
mov
pop
sti
stc
xchg
int3
in
stc
xor
jb
xor
dec
ljmp
out
mov
sbb
imul
cld
lea
repnz
es
dec
mov
mov
nop
xor
push
mov
je,pt
lahf
jle
xchg
mov
loopne
fbstp
mov
xor
pop
aam
push
rcl
aaa
divl
add
lret
shrb
rorb
inc
jle
jne
sahf
inc
adc
ljmp
adc
inc
insb
cli
and
fidivs
adc
sub
and
dec
mov
mov
shrl
ja
push
stos
cltd
fisttps
sbb
fisubl
sti
shr
popa
lret
add
fdivrs
mov
jae
ljmp
mov
push
cmp
sbb
xchg
sbb
sbb
dec
pusha
js
jle
sub
cmp
lock
out
push
imul
sub
and
cmc
pop
mov
mov
aad
and
cmp
and
and
mov
and
ljmp
sub
inc
cmp
lea
cmp
js
push
dec
mull
sahf
sbb
cmp
jns
imul
cmp
aas
mov
lcall
mov
or
cmp
add
lret
push
dec
dec
inc
pop
shlb
fldcw
popa
scas
mov
add
or
mov
or
das
mov
stc
jp
incb
sub
test
adc
dec
push
les
xlat
adcb
dec
and
add
add
scas
dec
sbb
sbb
sbb
pop
test
outsb
adc
mov
mov
pop
mov
add
jae
sub
sbb
cmp
pusha
dec
outsb
mov
insb
and
fadds
shr
inc
jp
xlat
adc
jnp
jge
fdivl
cmpsb
add
sbb
ds
jmp
adc
push
popa
push
jle
lods
and
test
bound
inc
insl
dec
sbb
push
adc
inc
xor
add
xchg
add
mov
jl
sub
xorb
in
mov
mov
lret
jo
pushf
jl
lret
push
push
push
jne
add
jae
lock
push
xchg
or
lret
lds
jecxz
mov
adcb
mov
push
cs
out
fisttps
gs
sbb
or
xor
push
adc
xor
mov
les
mov
pop
pop
mov
pusha
hlt
ret
cmp
mov
xchg
popa
movl
iret
sbb
lahf
push
sub
add
fwait
sub
cs
stc
sub
es
sub
ja
sub
popa
sbb
repz
and
sub
stos
mov
or
dec
push
rcll
add
sahf
cmc
ret
inc
adc
dec
jmp
fcomp
mov
outsb
dec
fwait
push
mov
or
xchg
mov
jns
inc
sarb
push
jecxz
push
jp
add
cmpsb
fisttpll
daa
ret
stos
push
adc
out
add
sbb
fisubrs
mov
mov
sbb
ret
into
sti
in
incb
and
pop
cmpsb
cmp
psubw
mov
icebp
pop
xor
sub
adc
and
xor
mov
mov
xchg
adc
mov
in
cmc
aas
mov
in
pop
scas
xor
push
push
push
push
sbb
xchg
icebp
cli
inc
mov
dec
pop
mov
hlt
dec
sbb
sbb
xchg
cmp
sbb
sbb
data16
mov
and
adc
aas
andl
leave
xlat
je
adc
lds
push
push
dec
addr16
push
lock
rcll
pop
in
inc
ret
mov
ds
cmpsl
cmp
cmp
subb
cld
or
loope
sarl
cmc
adc
rcrl
sub
das
ja
ljmp
loope
mov
shlb
test
icebp
push
fmul
arpl
pop
rorl
dec
and
jbe
push
adc
shlb
fs
addr16
test
inc
mov
inc
popf
push
sarl
leave
push
cs
lea
mov
insb
pushf
mov
pop
je
cmp
sbb
cmp
mov
into
out
sbb
mov
pop
sub
idivb
push
pop
push
xchg
and
imul
leave
add
ljmp
cmp
jge
call
inc
add
repz
in
in
sarl
jl
int
pushf
fcmovb
sahf
jne
sbb
nop
rdmsr
enter
jmp
push
add
hlt
lock
insl
data16
adc
sbb
stc
inc
xor
push
nop
movsb
inc
sbb
movsl
sub
rol
lahf
inc
dec
push
scas
scas
mov
pop
cwtd
es
xor
iret
lahf
xor
ret
mov
push
mov
lret
stos
pop
test
pop
push
push
jl
dec
cmp
jp
cmp
mov
test
addr16
cmp
movsb
dec
test
sub
jo
mov
jb
pop
enter
fistpl
pop
mov
idivl
repnz
jb
mov
shll
and
push
pop
adc
hlt
sbb
pop
or
cmc
inc
lea
ds
adc
inc
pop
pop
push
inc
in
pop
mov
scas
mov
jmp
cmp
cmp
data16
mov
cmp
xor
push
pop
orl
adc
cmpsb
int
aam
ljmp
sub
jbe
in
adc
shrb
loopne
out
insb
sbb
push
or
adc
cwtl
jo
sub
int3
lcall
jmp
enter
push
push
jg
sub
xchg
cli
fiadds
insb
adc
jle
int3
cli
icebp
mov
js
lret
mov
push
sub
je
xchg
sub
or
leave
pop
pop
rcl
cld
mov
mov
out
jnp
mov
jge
xor
das
mov
sbb
aas
adc
stos
jno
cmp
leave
cmp
mov
into
add
outsl
dec
aam
or
fwait
pop
jmp
imul
mov
push
ja
push
jno
inc
adc
ret
fdivr
addr16
rcrl
mov
mov
push
sub
les
lret
jecxz
and
inc
xor
leave
or
add
outsl
or
sahf
xor
inc
mov
loopne
imul
or
ret
sbb
dec
into
fnstenv
sub
xor
int3
lret
rcl
dec
addr16
fsubrl
or
jnp
loope
mov
dec
test
in
in
scas
mov
mov
scas
rorb
call
sahf
push
fs
stc
sbb
jno
in
cmp
cs
sub
cmp
loopne
insb
sbb
das
cmp
add
sbb
or
or
inc
mov
add
xchg
lahf
pop
out
or
out
fdivp
xchg
push
push
popa
xchg
jg
jmp
sbbl
mov
jbe
sbb
lea
add
cmp
fdivs
or
mov
mov
pushf
shld
pop
popf
nop
sbb
inc
notb
out
jo
aad
sub
lret
add
or
cmpsl
push
ja
test
sahf
adc
sbb
cld
jl
push
and
cld
push
and
subl
dec
add
xor
sbb
stos
dec
sub
fmul
push
test
adc
mov
jecxz
and
ret
loope
ret
mov
jb
pop
mov
out
jne
call
mov
iret
testb
add
icebp
inc
jae
repz
add
pop
ret
jecxz
lret
adc
sbb
aas
xor
push
dec
jns
adc
push
int3
dec
popf
adc
mov
into
pushf
nop
insl
sub
xchg
jnp
push
mov
lret
lret
cli
ljmp
ljmp
lods
dec
fwait
es
sub
push
xchg
or
movsl
pushf
lahf
js
cmp
mov
mov
dec
or
rcl
ljmp
add
jmp
jl
or
insb
and
cld
jne
test
pop
or
sbb
xor
sbb
or
or
ljmp
aas
xor
jbe
imul
sbbl
repz
add
xchg
dec
and
mov
dec
add
push
cmp
xor
rclb
insb
dec
outsb
jmp
in
pop
cmc
inc
fsubl
stos
jmp
cltd
mov
fldl
pop
loop
out
rcrl
les
test
aad
push
cmp
push
sbb
or
outsl
sub
insl
sub
add
lret
sub
jmp
lods
ljmp
ss
push
sbb
mov
ljmp
test
or
jecxz
jp
inc
fiadds
leave
adc
mov
das
push
push
xchg
xor
cmp
jb,pt
lea
neg
int
sbb
fstl
lret
xlat
jne
jmp
and
jb
icebp
adc
fadds
xchg
das
cmp
mov
jo
push
mov
pop
pop
pop
dec
jmp
imulb
sub
mov
or
pop
or
in
es
dec
gs
mov
scas
mov
cltd
int3
add
mov
xor
mov
mov
test
addr16
dec
cmp
in
push
leave
fwait
insb
mov
push
add
dec
or
cld
cld
inc
sbb
enter
sbb
mov
xor
ss
inc
mov
sbb
cmp
rcll
iret
mov
in
adc
arpl
adc
dec
call
dec
push
pop
pop
add
je
mov
pop
inc
sbb
dec
xchg
stos
xor
aam
sbb
aam
push
scas
dec
push
xor
fbld
std
test
add
lock
cltd
mov
push
sbb
jmp
mov
je
in
push
push
fwait
lahf
push
jno
push
lods
sbb
ja
xchg
mov
jmp
fmul
scas
xor
pop
test
pushf
fmulp
popf
arpl
int3
aaa
into
and
cmc
push
frstor
inc
mov
popa
push
jne
shlb
js
inc
mov
jge
cmc
jnp
fwait
or
dec
stos
negl
or
cmp
notb
add
xor
aam
lret
daa
sub
and
movsb
js
dec
pop
add
cwtl
push
cltd
xchg
int
test
nop
iret
push
or
maskmovq
divl
or
lods
daa
orb
ret
enter
shlb
daa
xor
daa
add
mov
xor
jno
or
lea
popa
inc
or
dec
add
cmp
outsb
ljmp
scas
adc
icebp
inc
mov
es
in
xchg
pop
out
repz
mov
outsl
jb
inc
mov
pop
inc
das
popf
lcall
adc
aad
cmc
je
dec
jns
sbb
inc
and
daa
cli
stc
insl
outsb
movsl
mov
sti
dec
pushf
push
je
std
mov
inc
or
ja
or
sbb
leave
mov
jne
packssdw
hlt
jae
aam
add
sbb
adcl
and
pop
pop
ds
add
imul
es
mov
sahf
push
pop
fdivl
pop
push
iret
dec
jno
mov
push
cmp
or
in
sahf
mov
shlb
jns
pusha
mov
stc
fdivl
movsb
jecxz
jae
push
mov
ficoms
dec
jne
cs
mov
push
daa
pop
adc
add
addr16
adc
in
mov
dec
adc
out
shr
mov
cwtl
adc
pop
add
or
xchg
sub
adc
xchg
push
loopne
adc
push
dec
pop
ljmp
insb
and
and
sub
dec
loopne
jne
imul
pop
insb
push
push
push
mov
lret
addr16
pop
js
adc
rorb
adc
test
ja
mov
cltd
shrb
shrl
daa
stc
aam
test
jno
ljmp
sbb
int
xor
push
mov
int3
sahf
push
mov
adcl
stos
pop
ja
icebp
push
pop
sub
dec
cmp
sub
daa
fwait
cmpsl
jl
xchg
jp
jns
inc
popa
movsb
mov
stos
scas
dec
fstpl
mov
and
into
jbe
bound
insb
xlat
adc
aas
imul
adc
add
pop
jo
cld
push
or
subl
scas
mov
and
mov
mov
das
insb
inc
stos
rorb
pop
sbb
fsubs
jmp
mov
ret
mov
mov
xchg
popa
or
push
daa
iret
add
repz
int
add
pop
test
test
arpl
lock
inc
and
jecxz
inc
aam
adc
imul
jp
sahf
push
js
adc
push
push
fimuls
in
sbb
mov
insb
and
lods
inc
dec
fdivrs
and
sahf
repz
int3
insl
or
repnz
mov
in
xchg
imul
mov
pushf
popa
fwait
cli
lods
xor
fiaddl
sbb
pop
push
jp
mov
cwtl
dec
std
inc
sti
bound
icebp
mov
jecxz
fbstp
mov
dec
and
inc
iret
xchg
jecxz
pop
push
roll
fsubs
or
pop
pop
sbb
cmc
jb
xlat
gs
mov
inc
negl
mov
adc
xor
or
hlt
arpl
mov
test
pop
dec
xor
nop
lods
scas
mov
iret
or
mov
loope
dec
int
or
add
popa
nop
jns
push
mov
xchg
dec
lds
sbb
or
sub
je
adc
daa
addr16
pop
pop
es
fstpt
add
mov
mov
imul
xor
xchg
nop
xchg
icebp
into
push
or
inc
das
subl
dec
mov
sahf
iret
ljmp
arpl
pushf
inc
addr16
lcall
mov
mov
adc
cmp
fisubrl
mov
loope
mov
out
xchg
mov
es
or
arpl
or
in
lret
insl
aam
cmp
adc
and
push
sahf
push
jle
push
and
mov
dec
and
in
or
mov
insl
push
jle
push
dec
fwait
xor
adc
sarb
dec
stos
sbb
mov
jns
repnz
dec
xchg
pop
imul
or
mov
data16
sbb
mov
dec
gs
dec
jp
icebp
rcr
out
outsl
addl
push
test
mov
roll
or
xor
out
push
xor
xor
shll
filds
out
repnz
fnsave
lcall
jl
inc
mov
test
mov
mov
adc
stc
xchg
adcl
push
daa
push
enter
dec
or
iret
xlat
xchg
pop
jb
roll
inc
mov
stos
fldenv
mov
aad
sbb
or
stos
push
fisttpll
adc
hlt
push
inc
push
inc
lret
dec
enter
rcrl
pop
test
cmc
push
inc
pop
xor
push
add
fwait
jmp
xlat
sub
daa
in
dec
nop
push
rcrb
outsb
xchg
int3
int3
lds
fldt
inc
pop
popa
lcall
or
or
cmc
xor
pop
outsb
fnstcw
sbb
inc
push
mov
pop
popa
sbb
idivb
cmp
sub
mov
rorb
pop
int
fildl
inc
mov
into
lods
cld
sub
popa
fisubl
xlat
fwait
push
mov
mov
testl
cld
insl
push
pushf
shld
lret
sbb
clc
cmpsl
outsl
shrd
in
xchg
push
push
nop
adc
fdiv
add
rclb
sahf
repnz
fstp
mov
cmp
js
mov
mov
adc
xchg
cmp
dec
daa
std
in
mov
or
stos
sub
inc
int
mov
mov
push
cs
or
mov
push
push
mov
jb
movntpd
lds
mov
sub
mov
cs
xlat
jg
cmp
lods
sbbb
leave
shlb
pop
push
test
lds
xchg
nop
push
jmp
lret
decl
adc
add
daa
pushf
sbb
jl
leave
mov
aad
mov
fdivs
inc
cltd
sub
mov
pop
aam
sahf
shll
pop
push
pop
xchg
test
pop
and
pop
jecxz
and
jno
in
out
cld
jmp
loope
mov
jp
inc
push
dec
int
inc
xchg
arpl
cmp
pushf
test
mov
xchg
daa
jle
sub
es
shlb
adc
and
outsl
or
mov
or
dec
in
add
int3
addr16
xchg
mov
mov
inc
popa
in
or
cld
adc
xchg
adc
cmp
mov
fstp
sbb
pop
out
int3
cmp
in
inc
jle
je
leave
lock
mov
add
dec
adc
ds
xlat
cmp
stc
dec
outsl
hlt
jle
out
xlat
insl
sahf
int
rcrb
xor
lcall
xor
fldcw
mov
dec
fstps
orl
ficoms
dec
sub
or
fwait
xchg
mov
into
insb
ja
cmp
out
sbb
pop
loop
fisubrs
push
sub
and
mov
shrl
dec
inc
decl
loopne
nop
psrlq
sbb
mov
lret
sub
mov
mov
int3
insb
pop
outsb
xchg
outsl
fstpl
adc
inc
imulb
sbb
mov
pop
lods
pop
mov
leave
pusha
addr16
cmp
and
sbb
insb
mov
inc
lds
cmpsb
scas
push
js
shr
out
cmpsb
or
sub
into
mov
xlat
sub
bound
adc
outsb
and
jecxz
or
std
ja,pt
inc
ret
es
cvtpi2ps
rcll
sbb
test
ret
xchg
push
into
dec
sbb
shr
or
insl
adc
mov
mov
pop
and
push
int
mov
mov
dec
push
push
hlt
iret
fnsave
adc
sbb
mov
add
fwait
and
adc
pop
movsb
inc
cmp
out
insb
fisttps
fstl
leave
dec
or
push
mov
mov
pop
lret
loopne
mov
pop
test
dec
mov
sbb
ds
jp
push
xor
leave
fnstsw
fldl
dec
mov
data16
cs
push
add
xor
mov
xor
mov
data16
or
jae
pop
adc
orb
xor
xchg
insb
sub
jns
stos
sbb
icebp
adc
je
jp
mov
mov
push
cmp
push
sub
add
je
and
pop
stos
mov
xor
sbb
imull
mov
div
or
fmulp
mov
mov
or
insb
adc
nop
push
sub
faddl
push
andl
xchg
or
sub
adc
ljmp
xchg
into
pop
add
xorb
xchg
nop
mov
mov
imul
jo
mov
lret
pusha
fstpl
movb
ret
fmuls
mov
orl
sub
test
insl
jnp
push
pop
lret
ljmp
cmp
das
hlt
sbb
push
clc
jge
in
sbb
mov
in
mov
inc
xlat
es
out
sbb
inc
and
daa
and
popf
pop
jne
in
adc
xchg
fstp
hlt
subl
in
cltd
sbb
rcl
sbbb
repz
pushf
rcl
clc
adc
loope
mov
sti
mov
mov
sub
sbb
es
hlt
outsl
cmp
and
push
dec
jns
mov
jecxz
adc
sbb
xor
repnz
sub
jno
lcall
pusha
orb
cmpl
sti
add
and
and
enter
test
jne
pop
fisttpll
cmp
arpl
jbe
in
fsub
clc
xchg
jp
push
mov
or
jg
and
jle
cltd
adc
mov
mov
insl
out
and
clc
test
imulb
sbb
add
cld
pop
enter
sub
add
cmp
dec
les
lahf
sahf
lock
sub
and
adc
loope
cmp
dec
test
fsubrl
loope
test
xchg
push
adc
loope
into
pop
mov
xlat
push
jle
mov
or
push
daa
or
stos
insl
or
jecxz
sbb
cmp
adc
pop
push
sahf
inc
mov
dec
xor
fsubrl
pop
pushf
jmp
push
pop
dec
testb
lcall
and
mov
cltd
ret
lds
xor
cmp
pop
mov
fcom
shrl
std
mov
imul
sahf
jg
add
insb
sub
push
js
jl
xchg
pushf
ds
add
and
dec
sbb
jne
sbb
lret
sbb
sbb
add
pop
xor
pop
lcall
fdivl
sub
fwait
insl
movsb
inc
xchg
inc
sub
mov
ret
add
or
pop
enter
cmp
pop
add
scas
fildl
adc
push
vprotw
outsb
adc
std
fsubrp
xor
lahf
push
pop
mov
sub
scas
mov
cs
fmul
mov
mov
icebp
je
sub
or
ss
push
push
fiadds
and
push
sub
pop
inc
cmp
jl
repz
lods
hlt
popl
pop
lea
nop
push
jbe
mov
mov
shl
pop
fidivrs
mov
fdivr
je
dec
jne
dec
cltd
fs
movq
sbb
or
inc
pop
shlb
add
into
pop
mov
loope
into
xchg
loope
mov
dec
mov
push
adc
repnz
popa
jp
or
mov
fisubrs
xchg
pushf
cld
adc
xsaveopt
and
ljmp
add
arpl
xor
sbb
cmp
mov
fstpl
or
ret
test
mov
loop
mov
imul
inc
int
leave
cmp
adc
push
xor
push
xchg
sahf
jl
paddsb
fwait
mov
sbb
fnstcw
sbb
mov
jge
dec
hlt
jge
xchg
pop
adc
repnz
aad
pop
lods
adc
int3
popa
cli
fs
fisttpll
sbb
xlat
fildll
mov
xlat
pop
dec
adc
lcall
test
mov
stc
cmpsb
shrl
sub
xchg
ljmp
or
xchg
mov
les
lea
xor
lea
mov
shll
das
push
adc
lock
ljmp
xor
cwtl
mov
int
mov
lea
rorb
mov
mov
cmp
mov
pop
pmullw
lea
mov
adc
lcall
push
rcrb
mov
je
cmpsl
fdivl
sbb
or
add
or
mov
adc
inc
into
notb
and
insb
sbb
dec
movsl
insb
mov
insl
xchg
cmp
add
test
pop
add
or
xor
rcrl
clc
loope
mov
sahf
dec
cltd
inc
adc
cmp
mov
std
sub
mov
aam
ljmp
lods
pop
jge
inc
icebp
dec
imul
dec
lret
cs
lea
les
pusha
dec
jge
pop
mov
pop
and
or
sti
and
mov
into
loopne
lcall
dec
out
push
dec
lret
pop
or
cmp
and
fisttpl
xchg
iret
dec
inc
inc
repnz
inc
xlat
and
es
cmpsl
fistps
or
mov
inc
mov
pop
xor
inc
dec
mov
nop
dec
cltd
insb
pop
das
inc
pop
push
cltd
pop
aas
out
ljmp
push
test
sub
aam
lds
inc
pop
out
stos
rcll
and
dec
dec
add
aas
or
adc
push
mov
push
mov
xchg
daa
fwait
xorb
into
dec
sub
sbb
lea
insb
adc
dec
mov
inc
cs
and
add
mov
inc
pop
jnp
imul
les
adc
or
cmpsl
addr16
pop
or
push
push
adc
cs
out
add
aaa
pop
sbb
pop
pop
lods
cmp
mov
cmp
pop
push
cmp
inc
adc
pop
xor
mov
shrb
in
dec
daa
lret
add
fmuls
adc
cmp
inc
or
jno,pt
adc
jnp
mov
ds
mov
movsb
mov
or
inc
outsb
pop
cmpsb
out
and
es
andl
sbb
push
mov
xor
jo
mov
xlat
adc
bswap
push
xchg
push
or
shlb
gs
stos
decl
and
dec
cmpsb
test
xor
daa
jae
adc
imul
cmpsl
orb
mov
add
push
insb
adc
add
pop
nop
int3
jmp
je
add
test
or
sub
or
jmp
dec
cs
stos
xchg
cwtl
jl
lock
arpl
outsl
jmp
mov
jns
sub
orb
popf
sbb
je
ret
loopne
mov
fiadds
fcomi
call
adc
xorb
pusha
adc
or
aaa
sbb
push
pop
pop
cld
mov
andl
shrl
ds
sub
daa
push
test
sbb
into
adc
sbb
dec
pop
inc
rorb
mov
adc
or
xor
daa
dec
les
jge
mov
mov
mov
rorb
movsb
leave
inc
cltd
adc
push
sbbl
adc
mov
lahf
test
or
mov
popf
cmp
lret
xor
scas
push
addr16
cmc
sar
mov
ds
fmull
aad
shr
imul
mov
popf
mov
popf
pop
xor
inc
push
loope
popa
popf
cli
inc
push
pop
mov
stc
testl
xlat
push
stos
adc
mov
repz
dec
ljmp
lcall
addr16
in
test
and
xorb
cmp
loop
jecxz
jmp
pop
mov
test
cmp
jle
push
mov
test
xor
outsl
inc
sbb
mov
iret
test
and
stc
sub
sub
push
sub
or
mov
addl
jo
pop
ds
jg
mov
movsb
pop
int
sbb
jg
xchg
sub
adc
mov
mov
adc
pop
jl
push
in
repnz
adc
lods
sbb
inc
fisubl
in
inc
mov
cmpsb
pop
dec
fs
fsubrl
ds
push
dec
loop
divl
add
lea
dec
outsb
push
daa
out
push
sbb
mov
jecxz
addr16
mov
aaa
movsl
add
jb
negl
stc
mov
lods
push
insb
mov
daa
and
into
pop
push
int
cltd
test
les
repz
enter
hlt
push
sub
mov
dec
popa
push
aad
xorb
iret
rclb
jbe
insb
iret
lds
insb
mov
popa
xchg
push
insb
dec
inc
out
adcl
std
jbe
imul
psllw
ds
xchg
dec
xlat
push
adc
mov
sbb
adc
fidivs
mov
jle
dec
mov
jo
mov
push
js
mov
iret
fdivrs
jne
int
pushf
into
je
and
dec
inc
or
cmpsb
fcoms
sahf
addr16
xor
dec
pop
add
mov
cwtl
jle
rcrb
fstps
push
xchg
adc
lcall
mov
mov
int3
pop
cld
les
shll
lret
dec
push
cmc
pop
out
out
inc
stos
push
sbb
pusha
pop
add
std
mov
push
inc
pop
daa
mov
jle
sub
jmp
popa
add
test
push
add
sbb
mov
in
push
leave
pusha
sbb
pop
xchg
or
popa
xchg
or
je
lret
addr16
jg
add
mov
adc
dec
mov
adc
out
push
popf
cmp
fwait
mov
pop
adc
xchg
push
out
popa
pop
jbe
pop
ret
dec
or
sbbl
pusha
movsb
addr16
and
push
sub
push
adc
lods
push
mov
xor
bound
adc
sarl
push
adc
dec
pushf
js
jbe
mov
sbb
das
into
jns
fsub
add
adcl
nop
sbb
pop
adc
xor
in
and
sub
data16
adc
iret
loope
insb
cmpsb
adc
or
or
dec
and
sub
decb
call
cltd
dec
jno
or
mov
stos
dec
pop
mov
dec
inc
and
sbb
loope
aaa
ljmp
or
jo
mov
xor
dec
cli
adc
scas
fwait
pop
int
sub
mov
pop
insb
mov
arpl
lret
xchg
sbb
jno
fcompl
repnz
push
mov
mov
lcall
or
push
ds
mov
int3
insb
and
dec
cltd
and
ret
pop
das
dec
xchg
int3
std
inc
and
mov
push
imul
fsubl
jae
and
xchg
pushf
clts
ljmp
inc
and
js
lcall
fistl
jbe
rcl
push
les
inc
mov
nop
adc
notl
ja
push
movsl
adc
mov
mov
cli
jmp
es
or
int
aaa
xchg
lods
fmul
jle
push
pop
pop
cmp
lea
lods
int
cmpsl
mov
sub
shlb
jmp
pop
mov
xchg
push
loop
dec
pop
in
xchg
push
mov
jo
outsb
sub
xchg
imul
nop
xchg
sbb
dec
popf
decb
cmc
shlb
clc
lea
dec
sub
sbb
es
sub
cmp
jns
cmpsl
nop
mov
hlt
cmp
loop
push
jg
outsb
jge
or
mov
loope
lds
and
les
gs
pop
inc
mov
push
mov
lret
or
jbe
xchg
into
leave
inc
add
sbb
out
push
add
jl
xchg
inc
xchg
sbb
mov
xchg
dec
or
push
pop
pop
rcrl
lcall
sbb
test
adc
popf
aad
xchg
mov
push
mov
xchg
test
inc
outsb
push
dec
xchg
addl
sbb
and
add
push
dec
das
push
and
xchg
icebp
jb
shrl
sbb
mov
loop
les
mov
push
push
and
mov
xchg
jle
sbb
xchg
test
cmpsb
sub
popf
pop
gs
sarb
jg
lea
add
int
rorb
add
ret
in
andb
shlb
pop
push
push
loop
jne
js
and
std
out
or
sti
mov
jge
rclb
cmpsb
mov
das
sahf
or
cli
int
mov
pop
push
and
test
xchg
adc
roll
xlat
ret
test
adc
or
inc
push
mov
in
inc
jecxz
std
std
std
insb
movsb
jg
imul
test
push
cli
inc
mov
mov
jecxz
hlt
cmp
ret
adc
sbb
sub
std
dec
les
scas
in
sbb
js
xor
insl
push
int3
xchg
and
pop
packsswb
jecxz,pt
outsb
clc
loopne
repnz
jnp
mov
xlat
pusha
clc
popl
test
push
or
mov
leave
lret
sahf
mov
imul
push
imul
pop
movsl
or
ljmp
sub
or
lds
pusha
loopne
lret
das
fcmovnu
mov
or
jnp
push
sbb
add
push
ss
adc
test
mov
sti
psubq
or
cwtl
cmpsl
or
leave
out
ljmp
sub
sbb
mov
and
sub
test
push
ljmp
nop
test
push
pop
pop
enter
fdivrs
test
les
lods
and
lds
cmp
cmp
add
cmp
mov
aam
rorb
fcompl
or
xchg
add
jp
and
adc
ds
mov
xchg
lea
push
or
cli
rolb
inc
mov
or
cmpsb
fsubl
add
scas
mov
out
dec
jae
adc
mov
xchg
or
fcomps
jecxz
cmp
jmp
ss
jo
mov
and
sub
fmuls
mov
in
cmp
repz
and
lods
loop
fcoml
sbbb
sbb
add
xlat
sub
lret
cmp
in
mov
adc
and
push
adc
sub
and
mov
push
pop
inc
gs
push
movsl
daa
loop
mov
icebp
fwait
or
jns
and
xor
movsl
pop
ja
push
cmp
push
popf
sbb
pushf
lcall
mov
enter
jbe
cli
fstl
adc
mov
gs
pushf
pop
test
cs
push
xor
adc
dec
xchg
repz
fs
mov
adc
or
cmp
imul
popa
test
adc
into
jmp
xlat
movsb
call
psraw
mov
clc
add
leave
xor
sahf
mov
repz
push
xor
push
aad
aam
bound
les
jb
add
mov
insb
daa
ljmp
xchg
test
or
mov
pop
mov
sub
mov
popa
sub
sbb
push
mov
in
adc
ja
xorb
aam
mov
outsb
testb
dec
lret
mov
dec
bound
inc
shl
inc
cmp
stos
pop
sahf
movsb
adc
dec
into
mov
dec
cli
sbb
out
in
jne
jb
adc
mov
pop
ds
out
dec
shlb
push
push
and
mov
mov
test
sbb
jle
shlb
stc
bound
add
pop
jecxz
jmp
or
test
and
sub
leave
fwait
sti
aam
adc
xchg
mov
cmp
adc
lahf
mov
test
aad
shrl
popa
mov
and
adc
jp
iret
xchg
adc
dec
test
add
fwait
cmp
gs
hlt
fld
ljmp
icebp
sti
mov
inc
cmp
jp
pop
in
sbb
jb
cli
adc
lea
nop
or
lcall
adc
or
lea
ja
and
das
push
push
test
add
sbb
pop
fstp
shrb
loop
int3
movsb
push
and
cld
sbb
xchg
jg
cs
xchg
sbb
shll
rcrl
mov
sbb
jecxz
adc
aas
pop
pusha
and
lret
daa
mov
lret
nop
cmp
xor
mov
dec
push
push
inc
or
in
leave
sbbb
rorl
pop
setbe
dec
inc
inc
lahf
les
sub
test
imul
mov
fdivrs
out
popa
enter
mov
lret
sbb
out
cmp
sti
sub
mov
les
xor
adc
into
sbb
andb
icebp
cmpsl
dec
arpl
movsl
jb
jge
test
fsubrs
int3
fcomps
xchg
xchg
lret
push
insb
jmp
or
adcl
sbbl
ror
pop
cli
dec
jecxz
aas
int3
notl
fcomps
xchg
xor
hlt
cmp
dec
ss
je
pusha
push
or
mov
dec
inc
or
xchg
movsb
or
dec
xchg
dec
lds
pop
movsb
mov
scas
mov
mov
imul
or
int
dec
cmp
rcrl
test
push
cmpsl
stos
out
ja
dec
int
add
adc
lods
pop
aas
pop
aam
aam
icebp
adc
cli
cmc
jno
scas
or
inc
orb
not
push
mov
popf
cmp
insl
jnp
sub
out
adc
add
and
mov
sub
inc
and
dec
cltd
sbb
outsb
fstl
sub
dec
popa
mov
sub
jo
adc
dec
dec
add
leave
incb
add
xor
daa
insb
jl
pop
imul
movsb
sbb
sbb
int3
or
lcall
jg
ss
mov
lret
inc
lret
or
cmp
dec
sbb
push
dec
mov
sbb
mov
mov
imul
mov
orl
out
aad
or
sbb
dec
pop
or
pop
iret
mov
loop
aaa
outsb
shll
or
and
push
addr16
dec
sbb
pop
push
dec
inc
sbb
nop
add
loop
mov
repnz
sbb
int
imul
sub
add
shrl
dec
shll
mov
push
cli
pop
push
mov
imul
mov
int
xchg
adc
xlat
sarb
into
gs
jp
fimull
int3
fimull
push
fcmovbe
xchg
rcrl
mov
xchg
sbb
insb
nop
cs
xchg
imul
mov
test
sub
stc
pop
inc
sahf
addr16
fisttpll
sub
shl
jo
or
mov
test
or
pop
and
jl
mov
cmp
lahf
insl
movsb
push
sub
push
js
add
mov
mov
vmread
sbb
and
xor
jae
dec
push
fcmovnbe
and
mov
sub
pop
sub
fdivr
pop
mov
and
fmuls
call
shl
insl
sti
push
fadd
jae
mov
cmc
inc
sub
xchg
cmp
lods
fwait
cmovo
dec
mov
mov
xchg
push
jns
xchg
stc
inc
test
fdivrl
pop
push
cmp
cli
cmpsb
xor
outsl
mov
fdivl
loope
mov
and
lods
push
insl
fiadds
mov
fcoml
ja
lock
pop
push
sbb
cmpsl
cmpsb
repz
adc
stc
loopne
inc
into
pop
aaa
lahf
fwait
ret
data16
push
cld
mov
movsb
aad
jae
sub
pop
adc
or
jmp
jae
mov
push
je
icebp
push
insb
data16
mov
push
ret
loopne
sub
jb
and
hlt
mov
nop
iret
xor
les
repnz
cmp
sub
xchg
dec
adc
outsl
jo
or
mov
pop
mov
mov
sub
repnz
addr16
xchg
lea
jl
das
mov
stos
adc
xchg
daa
iret
gs
rolb
jge
loopne
sub
pop
xchg
sub
sbb
adc
adc
orl
jo
stos
mov
fwait
push
jne
jns
mov
sti
aas
je
pop
es
or
leave
lea
out
lods
push
mov
pop
int
pop
cwtl
shll
mov
xchg
enter
addr16
jl
push
mov
xor
mov
stos
in
mov
mov
sti
sbb
dec
repz
out
lcall
pop
or
and
ret
lods
sub
gs
call
sub
test
imul
les
inc
ss
and
or
push
sbb
in
inc
popa
and
push
xlat
sub
adc
ljmp
mov
pop
push
les
test
push
pop
push
and
jp
mov
sbb
lret
insb
mov
push
pop
aam
movsl
cmpps
jno
ja
jecxz
fcoms
cmpsb
insl
imul
xchg
jns
push
jl
adc
xchg
adc
jno
jmp
inc
insl
imul
jp
or
mov
and
add
jle
sti
and
aam
xchg
mov
out
mov
imul
xchg
mov
or
pop
xor
jno
sarl
cltd
mov
mov
leave
push
push
jl
mov
push
push
fbstp
insl
insl
dec
adc
mov
or
adc
inc
push
fisubrl
mov
dec
sbb
pusha
push
push
cmp
aam
mov
lcall
inc
daa
pop
push
test
xor
or
mov
das
adc
pop
mov
shrl
popa
ret
loop
es
jecxz
xchg
arpl
jge
pop
sbb
jmp
lds
push
popf
movsb
adc
test
push
or
adc
push
and
dec
jbe
aaa
pop
xchg
int
push
mov
aaa
outsl
les
ficompl
sbb
jae
cmp
xor
push
repz
cmp
fidivrs
mov
pushf
ss
sbb
loopne
xchg
inc
insb
lods
fstps
push
daa
dec
mov
sbb
ss
and
insl
popf
shrl
mov
sbb
sub
mov
pop
cmpsb
jl
sbb
mov
mov
xchg
cmp
mov
adc
xchg
lret
xchg
int
xchg
pop
mov
mov
call
sub
and
push
push
imul
pop
in
es
inc
sub
mov
rorl
sbb
push
cwtl
adcl
jp
mov
cmp
loopne
insb
xchg
cs
dec
and
jg
push
sub
test
mov
test
imul
push
push
out
xchg
sbb
insb
xchg
adc
mov
xor
add
adc
fisubl
ja
dec
push
sbbb
repz
ljmp
mov
fisubrs
or
pop
sub
or
xor
jb
getsec
inc
xchg
hlt
jb
in
mov
aad
pop
add
rclb
xchg
jns
sbbl
jmp
ret
lret
subb
add
arpl
jbe
sti
and
lock
ret
mov
popa
inc
sbb
xchg
repz
inc
in
addr16
xchg
sub
stc
xchg
popl
hlt
xor
loopne
or
outsb
adc
sbb
stos
jle
imull
and
imul
sbb
aam
sbb
fwait
adc
jo
push
movsb
dec
or
sbb
mov
cmpb
adc
pop
pop
out
mov
adc
ret
push
add
mov
mov
jecxz
scas
imul
test
ret
add
dec
loope
repz
lods
and
out
stos
pop
mov
xlat
call
dec
cltd
cmp
out
in
sub
dec
lods
sub
bound
pop
out
mov
fmuls
cld
mov
pop
sub
daa
mov
inc
loop
pop
fstps
testl
lds
add
je
sbbb
dec
cld
pop
mov
outsl
insb
sbb
push
bound
jecxz
mov
and
push
push
sbb
lcall
add
cltd
xlat
adc
mov
lock
cmp
test
and
sub
test
sbb
xchg
insb
and
and
fsubs
or
sbb
js
adc
aam
adc
and
stc
hlt
pop
push
push
aaa
mov
insl
std
push
mov
popf
in
jb
cmp
xor
inc
inc
dec
outsl
mov
sbb
dec
xchg
loope
xchg
sbb
mov
adc
or
push
mov
fdivrs
pop
inc
dec
dec
add
dec
xlat
inc
lea
scas
int
sbb
imul
adc
mov
aad
into
rcll
sbb
in
pop
adc
ret
push
sbb
sbb
imul
mov
sahf
sbb
cmc
mov
lahf
adc
pop
xchg
dec
sbb
movsb
pop
add
mov
lcall
fwait
cld
cmovle
shl
fdivrs
push
fdivrl
push
fildll
pop
inc
test
ds
and
pop
sbb
stos
stos
lea
fdivrs
mov
jp
gs
insb
subl
xor
add
es
imul
popf
and
push
xor
sub
or
mov
push
and
add
ret
push
es
stos
adc
dec
testl
testl
test
inc
mov
jl
call
lcall
cltd
test
rcr
rcrl
dec
dec
add
popa
iret
out
testl
loope
shrb
sub
sbb
add
pop
lea
repz
sub
loop
sbb
sbb
mov
and
mov
adc
jb
cmp
out
es
pop
lret
and
xchg
dec
mov
scas
int3
pop
aaa
jp
in
sbb
insb
or
mov
popf
cmpsb
lcall
clc
dec
pop
sti
or
bound
aas
les
fdiv
enter
mov
and
fwait
shl
mov
cs
and
sub
int
clc
pop
mov
movsl
adc
jecxz
out
sbb
pusha
insb
adc
add
sahf
lret
mov
inc
add
and
add
mov
mov
inc
add
mov
pop
pop
inc
push
jmp
stos
mov
or
dec
sub
inc
cmc
fwait
and
adc
iret
xchg
fldcw
mov
fdivl
mov
fsubrl
xchg
arpl
jns
sbb
test
mov
pop
iret
mov
fwait
lods
mov
sbb
push
xchg
and
cwtl
sub
jo
push
mov
jmp
test
xchg
jmp
pop
fwait
adc
mov
sub
sub
adc
cmp
sar
pop
ds
mov
inc
mov
mov
dec
sub
jmp
iret
and
adc
int3
lcall
lods
cs
je
adc
fidivrs
je
sub
in
pop
jo
subl
popa
inc
fwait
mov
ss
loop
xor
fs
imul
jp
sub
pop
enter
ljmp
push
add
inc
jp
arpl
mov
scas
test
faddl
push
jno
push
pop
or
jns
jb
sbb
aas
les
jns
mov
pop
popa
push
roll
aaa
pop
and
push
inc
lock
aas
push
jp
adc
push
dec
into
mov
iret
dec
push
adc
pop
inc
sbb
das
adc
dec
int
addr16
or
sub
add
out
sbb
cwtl
adc
lea
addr16
mov
adc
lods
push
push
mov
fisttpll
pop
or
outsl
jp
adc
sub
and
xchg
mov
cmp
lea
or
mov
pop
pusha
daa
sar
insl
in
adc
out
mov
and
mov
imul
in
lret
inc
mov
add
jl
test
mov
push
fbld
mov
and
lret
mov
and
int
cmc
and
das
and
and
or
sahf
adc
stos
scas
shll
loopne
xor
push
pop
stos
pop
leave
orb
pop
mov
add
sahf
adc
lahf
xchg
mov
or
pop
add
ficompl
call
adc
adc
ds
insl
push
jbe
loop
outsb
adc
cmp
mov
dec
mov
movsl
enter
rcrl
dec
push
adc
sub
int3
es
imul
or
cld
jg
rcrb
shlb
andl
sbb
xorl
outsl
andl
pop
adc
mov
ja
mov
sub
sbb
cld
loop
lcall
rcll
add
aam
test
push
pop
cwtl
data16
xchg
mov
rcrl
daa
sbb
mov
jo
xchg
mov
setns
insb
popa
push
int3
push
and
mov
test
xchg
mov
add
push
jbe
xchg
jae
insb
repz
add
scas
inc
jb
sub
ret
mov
pop
sub
rclb
das
rorl
fsubrs
jae
cltd
fldl
jp
lret
sub
mov
or
mov
pushf
cmp
pop
mov
xor
sbb
adc
in
adc
insl
adc
cltd
out
sbb
mov
pop
xchg
cmp
fimuls
dec
in
lahf
sahf
and
mov
ja
mov
lahf
push
xor
add
mov
or
repnz
push
data16
inc
in
pusha
inc
sahf
or
cwtl
mov
pop
push
sub
fsubl
into
push
pop
inc
dec
cli
enter
cltd
pop
insb
sub
insb
adc
cld
dec
push
jne
popf
fimuls
pop
push
rol
push
mov
adc
push
pop
mov
mov
out
cs
movsl
inc
dec
or
mov
mov
push
dec
mov
stc
push
cmp
loope
outsb
scas
pop
push
and
pushf
aam
push
adc
sub
sbb
sbb
pop
outsb
sbb
xchg
shrb
mov
jp
mov
or
mov
lret
xor
int3
cmpsb
dec
lret
mov
xor
cwtl
lea
ds
aaa
outsb
mov
jb
es
fwait
lret
add
pop
incl
jge
cmpsb
mov
outsl
daa
sbb
sahf
xor
mov
sbb
insb
sub
adc
and
dec
push
pushf
xchg
or
push
fmull
push
push
or
or
popf
pusha
sbb
insb
and
or
popf
push
arpl
fisttpl
jae
push
lcall
aaa
dec
ret
insl
into
cmp
test
or
sub
jl
push
in
jge
dec
in
ljmp
data16
mov
addb
aam
cli
movhps
iret
jb
es
add
and
es
jecxz
ja
push
jmp
leave
push
idivb
push
aaa
cmc
adc
int
sub
push
push
push
scas
push
cmp
adc
imul
pop
testl
out
sbb
sbb
jp
fwait
test
sti
fldl
outsb
mov
dec
mov
sub
fsub
jp
loop
aas
lods
push
addr16
sbb
jnp
adc
iret
jmp
loopew
mov
loope
pop
in
rcll
or
dec
mov
rorl
or
jge
adc
mov
sub
jge
dec
xchg
inc
cmp
in
in
mov
setae
sbb
inc
mov
add
mov
or
das
cmpsb
bound
fwait
ud0
lods
xchg
mulb
es
push
cmp
jo
dec
dec
and
sub
mov
in
cmp
mov
push
lret
jnp
mov
movsl
or
call
cmp
aas
imul
lods
sub
cmpsb
imul
gs
dec
and
test
xor
pop
je
inc
add
sbb
aam
mov
mov
lret
mov
pop
testl
sbb
test
and
cwtl
mov
jns
fsubr
pop
lods
xor
testb
out
push
inc
xor
test
int3
add
mov
es
mov
sti
adc
push
inc
lret
add
jge
jbe
mov
lea
pushf
cmp
mov
jno
mov
xchg
sbb
insb
sub
push
inc
outsl
and
test
les
fdivr
jmp
xchg
ficomps
pop
arpl
add
imul
inc
sbb
xchg
xchg
loope
sbb
setnp
cmpsl
int3
jl
push
adc
fs
xchg
insb
add
jl
cmp
jge
mov
lcall
aam
movsb
mov
jle
call
mov
push
inc
dec
fdivr
push
mov
or
cmpsl
mov
push
or
pusha
and
clc
inc
xor
cmp
lods
negl
daa
add
pop
mov
push
adcl
out
mov
addr16
mov
es
sahf
jnp
xor
push
sbb
test
nop
ror
and
push
dec
push
mov
adc
push
data16
nop
stc
jp
popf
adc
ret
push
movsl
addr16
jecxz
push
cmp
aam
daa
push
leave
jg
adc
ficompl
pop
aas
mov
les
aaa
fdivrs
cmp
jbe
sbb
outsb
sbb
cli
sub
pop
loope
out
pop
push
push
dec
mov
xchg
stc
or
dec
loope
sub
mov
fsubs
xchg
mov
bound
pop
adc
cmpsb
sbb
xor
jb
sbb
fimull
cli
pop
sbb
icebp
inc
outsl
fstl
in
pop
pop
mov
adc
sub
pop
shl
sub
ds
add
sub
outsb
lcall
fldl2t
enter
sbb
add
jl
adc
mov
popf
add
pop
mov
adc
jno
data16
sub
push
lock
inc
xor
cmp
lret
xchg
push
adc
pop
and
add
sub
mov
mov
sbb
leave
es
cmpb
insb
cmpsl
shlb
push
push
lahf
mov
jecxz
pop
dec
sbb
mov
adc
stos
fisubl
in
and
pop
and
loop
xchg
stc
push
jb
pushf
pop
call
sub
repnz
inc
repnz
sub
mov
adc
mov
decl
push
cmp
jae,pn
lods
stos
dec
push
or
or
mov
sbb
mov
divl
mov
cmc
imul
lds
icebp
cmp
or
dec
imul
dec
mov
lahf
and
je
aad
loope
dec
sub
cmp
mov
dec
mov
ficomps
popa
cwtl
and
movsl
daa
jp
insb
and
imul
in
jnp
and
shrb
loope
loop
fwait
and
dec
fmull
hlt
dec
mov
xchg
xchg
push
or
add
cli
daa
pop
sbb
int
xchg
push
xchg
or
mov
cli
lea
pop
or
lret
sarl
push
dec
and
inc
lcall
push
fdivr
pop
sbb
into
sub
ljmp
sub
test
xor
xchg
pop
and
push
xchg
call
adc
sub
push
mov
mov
imul
ss
xchg
push
cs
xchg
inc
sub
mov
imul
mov
xchg
insl
xchg
lea
movsb
test
cmpsl
xor
in
insb
adc
insb
adc
icebp
jle
sbb
fs
xlat
and
add
sbb
popf
fs
sahf
mov
test
enter
popf
and
sub
inc
and
sbb
and
push
push
mov
push
mov
xchg
bound
hlt
in
mov
xor
jmp
cmp
mov
in
add
and
fldcw
pop
data16
push
push
push
idivl
xor
pop
jb
and
jns
mov
inc
mov
and
jns
int3
into
mov
or
jmp
dec
insb
test
lods
sub
sbb
sbb
add
and
xchg
aam
mov
mov
int
sbb
lahf
es
outsb
mov
aad
or
mov
pop
push
mov
add
shll
fistl
dec
or
mov
and
scas
cmpsl
dec
sbb
push
add
and
push
aad
add
movsb
or
outsl
mov
jge
in
pop
fdivr
int
mov
repz
push
add
push
outsb
or
loopne
outsl
imul
pusha
cmpsb
mov
out
insb
sbb
xchg
pop
or
jb
or
lcallw
mov
rep
dec
jmp
and
add
xchg
or
in
add
ljmp
inc
mov
inc
push
xchg
insl
in
je
or
scas
xor
fs
loop
pop
rcrl
sahf
cmpsb
or
setl
mov
scas
mov
pop
mov
mov
mov
inc
test
mov
out
push
dec
into
in
ljmp
mov
ds
push
fstl
mov
popf
cmc
mov
adc
out
fwait
sahf
shrb
arpl
fimull
xchg
mov
lret
sahf
hlt
loope
stos
sti
inc
and
mov
dec
pop
dec
mov
jle
cmp
fcmovnu
push
inc
inc
sbb
cmp
xor
movb
push
orl
sbb
sbb
dec
sub
mov
ljmp
shll
fiadds
fisubs
cld
aas
rclw
lods
mov
jge
movsl
fdivrl
in
or
xlat
pop
pop
into
cmp
mov
mov
mov
popa
mov
mov
ljmp
adc
iret
scas
loop
je
dec
mov
push
mov
push
push
mov
xchg
add
xchg
xorb
fwait
push
movsl
faddl
call
rolb
adc
fsubl
mov
out
pop
sti
mov
inc
out
and
pop
fsubs
or
jnp
int3
outsb
sub
ret
xchg
dec
les
dec
or
sbb
jb
push
push
mov
and
and
lea
stos
lahf
sub
mov
pushf
pop
lret
rol
inc
push
mov
or
push
inc
xchg
mov
stos
jg
pop
int
cmp
push
pop
push
mov
cltd
cmp
sbb
pop
mov
dec
outsl
sbb
push
lahf
dec
in
leave
mov
test
ljmp
mov
insl
push
test
leave
adc
adc
xchg
xor
scas
pop
rcrl
cltd
popa
sub
les
jecxz
xor
mov
xchg
cwtl
fldenv
mov
jmp
movsl
mov
sbb
mov
sub
addr16
adc
daa
aaa
clc
enter
lcall
call
or
mov
inc
inc
push
mov
into
mov
adc
xchg
jbe
jb
xchg
bound
ficoml
sahf
add
rorb
add
adc
gs
sbb
ljmp
movsb
pushf
cmp
inc
mov
repz
jbe
and
addr16
mov
movaps
mov
and
dec
cli
xchg
stc
adc
and
sti
cmp
or
inc
mov
cmpsl
sub
sbb
mov
or
and
outsl
push
sub
ljmp
mov
sub
popf
fimuls
orps
sbb
ss
orb
or
out
jb
mov
and
out
repnz
or
push
or
nop
mov
int3
insl
lcall
sbb
mov
cmp
loope
cmpsb
mov
aam
push
sahf
ficompl
fnsave
daa
adc
push
clc
mov
mov
repz
pop
fwait
clc
dec
jno
dec
xchg
imul
push
inc
inc
inc
push
insb
sub
push
or
jecxz
addr16
push
or
pop
shrl
push
jmp
cltd
mov
cmc
in
add
icebp
adc
mov
or
fcompl
push
push
or
fnstsw
test
fs
sbb
mov
xchg
mov
int3
lods
jecxz
daa
sti
test
icebp
adc
sbb
roll
pop
mov
adc
loopne
lock
push
add
jb
cmp
loope
add
sbb
sbb
popf
sub
dec
mov
inc
sbb
sub
and
scas
addb
adc
jp
in
or
mov
sub
sbb
test
in
jecxz
dec
sbb
mov
dec
pop
jae
and
pop
jmp
xor
arpl
enter
lret
test
mov
dec
notb
inc
cmpsl
push
bound
scas
js
inc
jp
pop
insl
fmull
cli
mov
and
ficompl
lret
mov
fsubrs
ljmp
sub
rcr
addr16
test
lret
int3
or
es
int3
mov
mov
aad
xor
mov
xchg
scas
loope
push
jae
or
test
popf
out
cmpsb
popl
sbb
notb
arpl
mov
cltd
shll
insb
xchg
xor
lret
cli
test
or
jp
add
or
std
sub
jb
lahf
mov
test
orb
xchg
sarl
xlat
cmp
pusha
cwtl
adc
hlt
xor
repz
popa
iret
sbb
incl
mov
addr16
sbb
pushf
movb
je
lahf
fcomps
jae
or
dec
div
xchg
xchg
stos
test
mov
clc
jmp
rcrl
in
dec
fs
and
negl
sbb
or
or
xor
xor
sub
aad
xchg
lret
xor
jo
imul
mov
jge
dec
sahf
insb
jnp
cli
mov
sub
scas
mov
or
dec
dec
dec
add
filds
or
sub
mov
sbb
pop
fidivs
xchg
adc
sbb
lods
pushf
data16
adc
pop
sbb
aas
sbb
pop
pop
push
xor
ret
sbb
sbb
fmuls
mov
lcall
xor
pmaxsw
bound
pop
inc
les
ljmp
subl
lahf
mov
push
jmp
mov
mov
or
push
loope
addr16
mov
mov
jge
jne
cmpsl
js
arpl
push
jae
repz
test
inc
cli
pop
adc
jle
dec
testb
lock
imul
aaa
out
lret
cwtl
adc
insb
sarb
repz
sahf
push
iret
int3
aas
dec
popf
scas
push
or
or
je
xchg
adc
lods
jae
xor
or
dec
xlat
mov
xchg
out
xor
xchg
jne
dec
rorl
dec
push
push
add
test
sbb
outsl
and
in
push
mov
sbb
mov
mov
imul
cmp
outsb
aaa
mov
xlat
xchg
push
fisubrl
test
and
leave
aas
ret
sub
nop
sub
daa
repz
sbb
push
sbb
jecxz
mov
sub
xchg
cmc
cltd
inc
mov
ficoml
mov
daa
cmpsb
xor
shll
mov
outsb
sbb
je
int
bound
push
pop
jecxz
cmp
inc
and
scas
lods
repz
fistpl
nop
push
mov
pushf
and
xor
push
push
hlt
ret
cmpsb
cld
cs
xor
rcr
sbb
and
cmc
and
pop
shrl
or
sbb
ljmp
jmp
repnz
ret
scas
sub
test
int
mov
pop
cmpsb
or
fmull
imul
mov
in
push
lahf
lahf
pop
std
and
mov
jne
clc
sbb
iret
xchg
sahf
adc
xchg
and
and
xor
aam
iret
cmp
das
dec
adc
lahf
mov
fmulp
add
jo
sub
movsb
cmpsb
adc
mov
and
dec
add
mov
mov
rorb
aad
movsb
jb
vmread
cmpsb
or
cmp
jae
sub
sahf
mov
stc
mov
fcoml
fsts
xchg
fdivr
popf
add
lock
mov
jp
rorl
jmp
inc
cs
jp
mov
jmp
mov
in
xchg
pop
sti
xchg
rorb
xor
jo
jecxz
inc
out
mov
icebp
push
lret
dec
pusha
rorl
push
das
in
pop
ret
or
xor
repnz
data16
mov
sti
push
and
jmp
xor
mov
les
sbb
les
lcall
or
xlat
adc
push
sbb
sub
popl
rcrl
mov
repz
sahf
pop
ficoml
mov
mov
arpl
mov
add
pusha
adc
pushf
mov
gs
rcrb
inc
and
test
mov
pop
stos
roll
inc
loopne
lea
mov
push
mov
inc
in
iret
movsb
lea
or
jmp
outsb
mov
fmulp
shll
push
lcall
adc
sub
nop
stc
adc
jp
pop
or
sti
sub
out
xchg
mov
mov
cli
in
sbb
and
and
xor
mov
dec
sarl
jle
fisttps
movsl
pop
sub
inc
xor
stos
dec
add
in
jo
in
xor
lcall
cmp
imul
mov
clc
inc
adc
jp
movsb
and
fsubrs
shlb
and
les
inc
ljmp
out
mov
outsl
imul
inc
mov
pop
lods
sahf
movsb
or
add
sub
xor
push
inc
adc
cmpsb
xchg
stc
sbb
xorl
faddl
nop
aad
dec
or
push
repz
and
inc
cmp
or
aaa
imul
int3
mull
inc
leave
sbb
movsl
or
mov
xor
adc
aam
adc
or
push
pop
aaa
addr16
shlb
pop
es
cmpsb
enter
int3
mov
pop
push
sub
mov
mov
adc
adc
shld
adc
cmp
mov
jbe
sbb
lret
sbb
dec
push
and
leave
jg
aad
inc
pop
out
pop
jecxz
flds
daa
pop
repz
pop
sub
mov
rcrb
add
dec
mov
pop
adc
sarb
push
jne
pop
sbb
xor
fisubl
pop
pop
push
jns
cwtl
mov
pop
and
mov
and
adc
int3
mov
pop
cwtl
mov
ret
add
jg
push
gs
hlt
pop
xchg
ds
push
insl
subl
and
mov
fdivrp
xor
fiadds
test
cmpsb
xchg
dec
iret
lea
jnp
and
jl
mov
imull
xchg
mov
jmp
sbb
push
popa
push
lea
fldt
and
ret
push
and
punpcklwd
add
stc
arpl
push
dec
negl
xor
sbb
xchg
mov
out
out
and
lret
cmp
push
dec
iret
in
sub
out
or
cmp
sahf
mov
je
stos
ja
dec
sub
pop
push
push
insb
xchg
aas
arpl
sbb
loopne
popa
push
daa
cli
lods
cmp
jns
cmp
loopne
test
subl
sub
fmul
mov
adc
xor
xor
into
mov
and
pop
fadd
daa
cmpsb
add
or
mov
inc
das
push
jl
mov
in
lea
sub
aas
pop
imul
jb
sub
std
and
cmp
insb
add
scas
iret
and
adc
jb
in
int3
sub
sbb
imul
out
push
mov
jmp
mov
mov
jl
sub
push
dec
test
aam
cmp
aaa
xlat
or
insl
adc
dec
test
cli
cmpsb
orb
pop
mov
fmuls
out
dec
popf
pop
movsb
or
xor
bound
mov
shrd
dec
cmp
imul
fwait
and
push
mov
ds
sysenter
outsl
push
jecxz
add
mov
test
mov
mov
xlat
jmp
mov
mov
and
scas
testl
mov
ljmp
xor
pop
fists
call
lret
pop
outsb
lods
addr16
mov
popf
adc
outsl
jmp
out
lea
insl
lret
and
cmp
push
xchg
lcall
mov
pop
jnp
std
bound
fnsave
push
insb
dec
and
sub
mov
das
pop
mov
xor
test
popa
mov
xor
push
cmp
xor
cmp
add
push
mov
pop
sbb
loope
mov
cld
cld
cmp
inc
push
and
cmp
jne
iret
shlb
adc
jb
rclb
lea
sub
incl
loope,pt
pop
cmp
or
stc
pop
outsb
cmp
test
aas
fisubrs
test
imul
pop
jecxz
xor
xchg
adc
push
nopl
andb
push
mov
cmp
add
movsl
adc
repz
pop
std
or
sbb
insb
insb
subb
push
clc
enter
cmp
data16
xchg
cmp
data16
push
xor
add
imul
sub
into
ret
testl
insl
insl
or
leave
les
mov
pop
or
sbb
sarb
cmp
adc
pop
dec
pusha
dec
inc
dec
shll
mov
lahf
fisubl
icebp
pop
sub
pop
sub
mov
popf
les
iret
sbb
dec
xlat
pop
cmp
repz
cmp
dec
test
out
or
and
cmp
ss
lock
imul
push
imul
fnstsw
in
test
ljmp
sti
or
or
out
mov
adc
test
out
out
push
mov
insl
or
pushf
cmpsb
mov
int
mov
add
sub
daa
xchg
push
cwtl
mov
loopne
push
fiadds
xchg
xchg
xchg
movsb
sbb
fldcw
outsb
fcomps
push
decb
jno,pn
lods
jg
lcall
lock
lahf
jge
jmp
mov
push
inc
mov
mov
pop
pop
xchg
data16
fstpl
aaa
out
jno
jo
mov
iret
sbb
data16
and
sbb
jecxz
jo
cmpb
in
sub
jmp
or
or
insb
mov
pop
ja
loopne
pop
int
clc
outsl
leave
jo
in
test
test
push
fisubrl
jbe
cltd
sbb
int
lret
fimull
and
je
imul
stc
insl
aaa
push
test
enter
sub
ret
sbb
repnz
cmp
dec
xchg
in
in
sub
loopne
sub
das
sahf
outsl
aad
pusha
pop
push
and
test
outsb
mov
xchg
cmp
mov
leave
sbb
lret
ret
es
sbb
subl
daa
push
mov
dec
int
ss
lea
aam
pushf
xchg
decl
sbb
fdivrs
mov
jmp
xor
insl
shrb
mov
fcmovb
cmpsl
mov
sbb
jp
xchg
sbb
jmp
mov
push
cs
and
in
push
es
dec
jp
push
or
sub
cmp
inc
dec
jnp
scas
das
or
pop
outsl
push
sub
mov
jno
into
mov
jp
roll
push
jno
pop
push
mov
jl
into
cmp
les
mov
fmul
sahf
pop
call
mov
jnp
mov
cmp
fucomip
jnp
mov
sub
mov
fwait
dec
sbb
rcrb
negl
popa
push
mov
jno
fbstp
push
mov
or
stos
lahf
push
cli
lret
adc
jbe
and
adc
push
fsts
jno
bound
push
jg
push
jecxz
dec
dec
sbb
mov
fcmovbe
popa
ret
push
add
mov
aas
stos
pop
adc
aaa
pop
and
loope
addr16
leave
mov
or
mov
lods
and
aam
add
xchg
sub
sub
or
inc
mov
lret
push
stc
rcl
dec
sbb
sbb
cmp
int3
shr
push
sarb
in
lret
pop
mov
js
je
imul
leave
leave
xchg
lret
push
push
lods
lret
or
mov
mov
jge
pop
lds
push
movsb
inc
inc
adc
fnsave
sbb
pushl
loopne
imul
add
xchg
sub
ret
imul
mov
das
mov
or
push
ds
xchg
std
pop
lahf
fldenv
leave
jecxz
mov
push
test
test
xlat
or
mov
mov
push
pop
cld
push
push
dec
jl
insb
imul
or
fcmovbe
mov
iret
lods
aas
mov
add
pop
popa
push
mov
xchg
or
dec
les
les
adc
inc
dec
add
pop
sbb
int
mov
outsb
fisttps
mov
sahf
aaa
insl
stos
in
and
push
leave
dec
dec
cld
popa
adc
aam
scas
push
movsl
adc
sub
add
subl
lock
fcoms
mov
mov
lods
add
mov
adc
xchg
xchg
fsts
les
in
push
mov
mov
jg
out
shll
add
nop
dec
mov
mov
jno
decb
out
mov
ret
stos
pop
and
loope
jp
daa
in
add
push
jbe
sub
mov
adc
xchg
das
psraw
mov
icebp
lret
push
aam
or
sbb
or
dec
stos
push
sahf
inc
cmp
dec
cmpsl
dec
lds
adc
jle
mov
xor
inc
or
pop
leave
lret
sbb
mov
mov
adc
xlat
imul
jae
fisttpll
push
push
ds
mov
xchg
jecxz
pop
dec
or
mov
mov
shrb
cmp
dec
jo
jmp
fimuls
mov
push
aam
adc
in
nop/reserved
mov
fadd
in
das
cmpsb
sub
scas
nopl
das
xchg
fisubrl
push
push
jno
add
mov
aaa
les
push
add
sbb
cwtl
popa
repz
call
ss
and
sub
test
test
push
pshufb
mov
in
dec
mov
movsb
xchg
popa
lock
sub
push
and
int3
out
and
or
adc
rcr
aam
clc
incb
push
adc
jnp
xor
or
scas
hlt
rcrb
xchg
lea
sbb
xchg
pop
mull
out
lods
and
mov
cmp
xchg
aam
mov
add
xchg
add
lcall
into
cmpsb
or
dec
xchg
test
insl
and
mov
jg
mov
pop
mov
mov
xlat
adc
xchg
cmp
repz
ja
lods
pop
adc
adc
sahf
loopne
sub
sbb
movsb
mov
mov
cmp
sbb
push
sbb
ja
lods
ret
or
jg
dec
pusha
jae
std
push
mov
push
mov
loope
adc
mull
jo
pop
sub
or
mov
std
cli
mov
or
push
jns
mov
add
pop
mov
jo
aad
sub
fs
xor
mov
cmp
data16
cli
jns
dec
inc
mov
push
lret
fdivr
outsb
loop
imul
cmpsb
repz
xchg
xor
pop
adc
and
xchg
and
mov
out
rcrl
xlat
orb
in
xor
ljmp
sbb
popf
jne
jnp
pop
xor
jne
push
pop
or
enter
push
je
jecxz
xchg
mov
jmp
das
ds
nop
aad
ret
mov
or
stos
push
sahf
or
adc
fcoml
sbb
inc
xchg
insl
mov
dec
sub
ja
popf
sub
jno
inc
out
xlat
insl
adc
adc
pop
adc
ret
or
repz
or
aad
insl
fdivrl
fisttpl
inc
dec
push
mov
pop
pop
xor
ljmp
repnz
adc
cmc
and
cmp
jl
outsb
push
mov
adc
cmp
pop
and
faddl
push
lea
ret
test
std
add
dec
leave
add
daa
notl
jns
cmp
pop
dec
cmp
imul
dec
sbb
xchg
js
loope
mov
or
fmull
xchg
dec
sbb
pop
dec
and
jmp
xchg
jb
push
popa
nop
cli
sbbb
and
sahf
lahf
adc
xchg
mov
adc
push
and
loope
xor
adc
or
out
mov
lds
shrb
stos
test
jg
or
int
or
lcall
push
adc
iret
pushf
addr16
adc
repnz
sahf
inc
adc
sub
cmp
fisubl
sbb
test
pusha
xchg
or
sub
out
pop
inc
rcrl
cmp
xor
lock
adcb
hlt
sub
cmp
dec
mov
outsl
xor
pop
pop
ja
movsl
lds
lds
adc
and
xchg
das
adc
push
and
ficomps
fisttpl
xchg
pop
push
jecxz
cli
sbb
loopne
lret
mov
fstpl
jno
push
rcll
adc
nop
xor
shl
push
daa
dec
and
jecxz
cmp
sarl
cmp
pushf
sbb
out
sub
xchg
mov
std
or
sub
mov
dec
pusha
mov
dec
push
jle
js
sub
pop
lods
std
dec
test
scas
xlat
jns
ret
adc
jae
lds
cmp
lret
out
sub
ficomps
out
rcrl
mov
mov
xchg
pop
push
out
insb
mov
inc
jecxz
xchg
pop
sbb
pop
sarb
or
ljmp
lret
arpl
lret
je
int
sub
rcrb
arpl
add
aaa
sarl
dec
fsubrs
loopne
and
adc
or
dec
mov
cmp
fnstenv
outsb
sbb
repnz
arpl
insb
pop
push
push
sbb
pop
xor
sar
or
lret
jbe
test
stos
adc
xor
mov
or
mov
mov
xchg
dec
xchg
adc
and
lahf
dec
or
pop
scas
xor
pushf
addr16
stos
inc
mov
mov
cmc
dec
adc
or
dec
add
mov
xor
enter
popf
cmp
rcrl
adc
ja
inc
mov
dec
mov
mov
mov
arpl
or
xorl
add
iret
inc
cmp
lods
and
adc
sbb
inc
or
popf
addr16
stc
sbb
xchg
lds
imul
addr16
adc
push
inc
loopne
mov
pop
scas
repz
jmp
xor
shrl
xchg
mov
or
loope
hlt
addr16
cs
not
jmp
sbb
or
outsb
loope
jmp
in
adc
mov
jl
adc
jge
push
and
cltd
cmc
cli
jae
call
jp
push
lahf
adc
outsl
data16
daa
repnz
fs
cld
mov
and
push
cmp
adc
lcall
lea
aaa
jecxz
jb
lods
pop
jmp
pop
mul
notl
xlat
popa
lret
xchg
push
jl
or
cs
mov
mov
cli
in
and
call
xor
jnp
cli
out
les
add
std
pop
add
pop
xchg
inc
fs
mov
xchg
insl
or
packuswb
mov
mov
sti
mov
lret
xor
cmp
adc
push
adc
push
cld
clc
bound
jno
xor
stc
out
sbb
mov
jmp
mov
and
sbb
push
and
or
sbb
nop
ss
sti
cmp
pop
into
jae
lods
pop
dec
dec
pusha
jecxz
inc
jmp
in
xchg
add
nop
dec
xlat
cmpsb
xchg
adc
daa
mov
es
hlt
xchg
cmp
sub
mov
push
lahf
fnstenv
into
enter
mov
int3
or
les
push
pop
xor
xor
addl
jp
xchg
icebp
dec
ret
in
push
aad
mov
xchg
dec
lods
dec
fisttpl
mov
in
fldenv
pop
test
mov
cmp
dec
filds
sarb
push
mov
sub
or
inc
or
xor
inc
push
aas
push
repz
enter
mov
push
sahf
xchg
push
push
pop
xlat
jmp
sub
jge
sub
inc
dec
jae
sbb
sub
cmp
popf
xchg
cmp
aas
xchg
sar
and
rolb
into
sbb
mov
outsl
fcomps
ret
in
out
in
or
inc
fwait
or
imul
test
dec
sbb
or
cmp
mov
xor
inc
out
adc
mov
mov
pushf
push
shrl
pop
stos
lods
and
mov
leave
jg
rorl
or
ds
pop
or
dec
je
imul
inc
or
adcb
lea
rclb
repnz
enter
xor
mov
fs
sub
stos
iret
mov
mov
adc
stos
sbb
xor
dec
pop
in
subw
pop
movsl
pop
xchg
sub
lahf
movq
jb
es
dec
or
loope
clc
pop
out
xor
insl
adc
int
push
mov
push
jmp
pop
push
add
insl
push
or
mov
jnp
dec
xchg
loopne
adc
in
or
sub
add
jo
push
pop
xchg
ror
aad
pop
mov
cltd
fnstsw
sbb
push
jmp
repz
or
loope
push
dec
mov
adc
mov
pushf
repz
ret
mov
push
mov
sub
sbb
das
dec
sbb
popf
insb
popf
cmc
pop
push
movsb
lds
lea
mov
pop
add
cwtl
push
dec
dec
dec
cmpl
pop
push
and
mov
cmp
testl
lds
or
jbe
outsb
adc
sub
add
inc
sub
sahf
mov
push
jmp
push
jno
shrl
jmp
pop
mull
scas
mov
mov
leave
out
adc
out
pop
xor
sbb
das
push
test
lea
cmp
ficomps
sbb
into
add
push
xor
sbb
or
adc
adc
push
fcomps
jns
aad
leave
xchg
add
fwait
mov
xchg
xor
and
pop
dec
push
sbb
mov
divps
mov
lahf
loop
jo
mov
ss
sarb
loopne
jecxz
cmpsl
jmp
push
sbb
dec
jb
iret
xor
movsl
aad
or
inc
daa
lock
jae
adc
or
stos
push
fsubl
xor
scas
sub
push
daa
aad
cmc
movb
int3
adc
jnp
xchg
stc
or
sbb
xlat
sub
js
es
inc
pop
fstpt
mov
cwtl
adc
ss
dec
mov
scas
in
fwait
pop
fisubs
pop
cwtl
mov
daa
outsl
add
xor
mov
push
mov
xchg
xor
push
adc
jns
adc
xchg
or
xor
jle
loopne
std
cmc
inc
dec
sbb
mov
cs
inc
cmp
add
xor
mov
loopne
adc
and
dec
sti
sbb
fisttpll
sub
add
xchg
sahf
mov
lahf
cmc
cmp
pop
and
int3
add
mov
dec
and
mov
pop
and
and
and
jmp
mov
pop
push
push
popf
ss
push
push
fldenv
outsl
inc
mov
sub
lret
lcall
xchg
mov
mov
or
or
imul
and
push
jbe
adc
push
xchg
arpl
add
mov
and
pop
cmp
xor
and
mov
loopne
mov
xchg
aas
fdivrs
xchg
imul
test
ret
pop
and
adc
dec
sbb
popf
aad
xor
jns
push
daa
xor
fisubrs
sub
mov
negl
shll
ret
ss
test
stos
cld
pop
scas
mov
xchg
push
iret
push
outsl
mov
push
enter
jae
arpl
push
jno
sub
xchg
in
sub
mov
aas
sub
sahf
dec
and
loope
mov
cmp
pop
mov
mov
jl
pop
daa
push
push
ds
sbb
pushf
dec
ljmp
sbb
jecxz
fisubs
jl
sbb
cwtl
je
adc
sbb
in
jb
mov
rcr
imul
cmc
add
xchg
out
sahf
pop
dec
ja
or
pop
xchg
and
and
mov
outsl
test
mov
cltd
cmp
or
mov
arpl
sbb
insl
fwait
push
xor
push
fisttpl
or
adc
imul
dec
ret
mov
jnp
sub
mov
jp
push
insb
mov
mov
jecxz
mov
mov
jp
sub
aam
outsl
add
mov
insl
pop
mov
jl
cmp
mov
push
insl
cli
js
mov
in
xlat
movsb
lods
movsl
fstl
jp
push
test
push
rcl
lods
pop
cmpb
or
mov
into
push
dec
daa
or
pushf
dec
cwtl
sub
and
xchg
fwait
or
adc
jp
pop
xor
sub
xchg
jecxz
stos
das
and
test
sbb
dec
push
and
rcll
push
incb
fwait
dec
fs
xchg
sbb
sub
adc
mov
pop
jecxz
ret
push
lret
or
jl
xchg
sub
cmp
insb
fwait
orl
lea
push
mov
movsl
adc
pop
jle
and
push
pop
imul
popa
cs
jno
mov
ljmp
mov
push
mov
cmp
lods
sub
les
mov
mov
or
inc
xor
inc
ret
adc
mov
sub
sbb
push
aam
inc
adc
sbb
dec
xchg
sbb
mov
xor
ret
roll
push
sub
lahf
dec
add
jmp
jmp
sub
daa
pop
pop
dec
icebp
jno
movl
xchg
sbb
pop
pop
cmp
xchg
xchg
rclb
addl
lods
int
push
mov
lcall
push
out
xor
or
cmp
and
fsubs
jecxz
movsb
dec
sub
mov
lret
jecxz
sbb
inc
aam
or
push
jle
pop
xchg
pop
sbb
cmp
sbb
xchg
pop
sbb
sbbb
adc
ficoml
inc
jecxz
std
lret
fmuls
daa
mov
mov
out
inc
ret
insb
push
pop
pop
rcll
xchg
scas
xor
test
jns
sub
xor
sbb
inc
add
push
rolb
notb
mov
xchg
ljmp
popf
mov
pop
imul
subb
sub
xor
popl
cwtl
or
shlb
add
xor
mov
add
addl
jecxz
inc
cmp
aas
add
std
scas
into
or
xor
jns
ret
inc
push
xchg
inc
or
orl
adc
test
jmp
sbb
cmp
and
inc
mov
push
dec
jp
mov
mov
xchg
add
fst
mov
pop
rorl
mov
aad
cld
popa
jb
mov
xchg
mov
inc
stos
push
cli
jae
or
sahf
scas
stos
and
testb
mov
adc
pop
fdivrs
dec
insb
cmpsb
adc
and
mov
push
mov
mov
mov
jae
push
fwait
adc
lcall
xor
out
test
daa
xchg
adc
sub
sbb
xchg
stos
add
ja
int3
shlb
jnp,pn
outsb
inc
sub
das
aad
scas
adc
or
cmp
dec
lods
int3
sahf
pop
insb
popf
cmc
test
pop
leave
es
sbb
cwtl
cmovne
int
sar
mov
push
insl
pavgb
bound
loope
xor
fstl
pop
cmp
mov
divb
sub
scas
sbb
stos
push
or
push
inc
les
test
add
jmp
sub
lods
mov
dec
and
dec
add
sbb
dec
mov
jmp
sub
pusha
test
mov
and
fcmovb
in
fldt
inc
rolb
scas
into
mov
add
sub
enter
sbb
fwait
inc
sbb
mov
sub
cmp
test
cmp
test
dec
int3
cmpsb
test
push
xlat
or
cmp
int
faddl
jns
sub
addr16
jo
pop
lods
dec
cmp
adc
leave
xchg
inc
les
stos
fs
in
or
push
insl
pop
and
or
push
push
sarb
sbb
or
iret
lret
adc
sub
pop
sub
xchg
mov
push
dec
jmp
lds
or
rorl
aam
ret
es
lcall
or
inc
movsb
cld
pop
std
jl
add
push
pushf
clc
push
jp
push
fdivs
insl
and
push
les
insb
pop
lods
fidivl
nop
leave
loop
adc
fsts
jne
cmp
mov
jae
push
mov
fiaddl
push
mov
mov
faddl
adc
pushl
popa
bound
or
mov
push
mov
add
xchg
xchg
in
ret
popf
push
fiaddl
xchg
or
push
sbb
out
imul
dec
pop
sub
lret
inc
test
rcll
ret
inc
xchg
cmp
stos
and
mov
js
leave
add
test
int
or
lods
popf
lret
fsubrs
xchg
fnstsw
inc
std
sarl
or
aaa
sbb
stos
dec
sub
movsb
scas
lahf
nop
in
adcl
adc
cmpsb
rorl
or
cmp
xchg
adc
fimuls
out
das
and
ffreep
xor
adc
shll
push
imul
fdivp
lahf
sub
jecxz
xor
adc
mov
xchg
and
mov
mov
iret
and
jp
psrlw
or
popa
popf
push
lcall
or
or
mov
xor
in
adc
into
dec
xchg
stos
push
sbb
jmp
push
repz
pop
inc
leave
push
pop
cmp
xorl
dec
mov
inc
mov
popf
lahf
sbb
fldl
orl
adc
pusha
sarl
mov
lret
add
jle
inc
fwait
sbb
inc
cmp
xor
stc
pop
insl
jo
ret
push
push
movsl
movsb
lahf
pushf
adc
sub
ret
and
imul
or
or
mov
push
or
insl
add
xchg
cli
mov
inc
shlb
sbb
clc
push
cld
cltd
xchg
lret
push
cmovle
dec
lcall
pop
outsb
imul
js
dec
test
dec
in
into
jecxz
and
rorl
nop
lea
inc
subb
ret
mov
adc
and
jle
jge
aas
insb
dec
add
push
testb
pop
es
jmp
rcrl
inc
daa
in
cmpsb
cmc
add
mov
push
adc
iret
and
jp
xchg
sub
cmp
inc
ljmp
inc
or
pushf
jp
ud0
adc
adc
les
add
dec
int3
mov
dec
add
push
pusha
clc
dec
les
cmp
bound
jb
jo
ret
push
push
or
adc
cmp
mov
mov
lahf
sub
outsl
jle
cmc
test
mov
add
sbb
ret
inc
push
mov
mov
adc
cwtl
add
imul
xchg
pop
jo
pushf
pop
add
sub
ljmp
sti
push
pop
inc
push
idivl
dec
loopne
dec
les
je
push
sbb
pop
adc
add
sbb
into
mov
jl
or
test
xor
sbb
pop
push
rolb
cmp
sahf
mov
dec
xor
push
fistpl
cmp
pop
fnstcw
jmp
sbb
into
mov
jecxz
add
ss
jns
mov
sarb
les
jg
xchg
dec
cmp
push
xchg
jnp
inc
lds
push
mov
fisubrs
mov
psubq
xchg
aas
in
scas
adc
and
decl
mov
mov
repnz
dec
jle
fdivr
jmp
inc
add
mov
pop
push
sub
or
adc
cli
xchg
adc
adc
push
mov
cmp
daa
shlb
les
ret
mov
push
sarl
or
outsl
jmp
lret
out
out
mov
jl
ss
cvttps2pi
pop
out
and
and
inc
stc
inc
dec
jns
enter
sub
xor
jne
adc
outsb
ficoml
mov
add
cmpl
push
pop
sbb
sub
jns
bound
dec
dec
sbb
sbb
js
mov
les
daa
test
mov
jno
dec
add
push
or
int
aam
fdivrs
clc
rorb
insb
or
xor
mov
or
xor
mov
push
fs
in
sbb
movsb
pop
ds
sahf
call
loope
and
ds
add
pop
push
orl
mov
xchg
ret
push
pop
or
add
sbb
mov
jge
xchg
or
mov
cmp
fs
mov
pusha
sbb
jb
movsl
cwtl
cmp
or
fisubl
or
sbb
jecxz
ficoms
insb
adc
push
stc
jge
add
xchg
push
push
jecxz
jp
pushf
sub
sbb
jg
int
jecxz
addb
adc
push
cld
inc
and
xchg
fldcw
push
add
xchg
dec
inc
xor
dec
sub
sbb
stos
adc
inc
inc
int
xchg
idiv
pop
leave
push
adc
mov
or
jp
daa
shrl
xchg
push
mov
outsb
sbb
mov
sbb
cmp
push
push
xchg
dec
and
push
mov
mov
das
shlb
sbb
sub
mov
add
cmp
lcall
insb
push
pop
jns
sub
mov
les
ret
pop
add
sbb
xor
mov
cs
and
xchg
in
xchg
loopne
mov
cmp
call
std
cli
gs
push
sbb
pop
aas
inc
inc
aad
pop
cmp
popa
or
xchg
adcl
lcall
or
inc
aas
sbb
loopne
das
and
mov
sbb
xor
in
leave
mov
lahf
das
jbe
pop
add
data16
test
ja
mov
sub
or
add
mov
xor
int
stos
mov
lock
and
push
adc
lret
dec
mov
imul
rcrl
pop
dec
sub
shll
stc
jbe
cmc
mov
ss
mov
inc
jb
cltd
inc
sbbb
fisubrl
adc
popa
outsb
movsl
fucomp
inc
cmp
lods
lahf
jb
add
push
xchg
sbb
push
adc
call
jp
xor
sbb
outsl
ret
out
test
mov
mov
push
adc
xor
fdivrs
jge
or
pop
or
add
data16
or
lret
mov
add
inc
lahf
nop
jnp
push
xchg
lahf
adc
cli
outsl
adc
mov
pop
push
dec
mov
out
inc
jbe
mov
imul
jno
jne
pop
xchg
mov
mov
lret
add
mov
xor
divl
mov
aad
sub
imul
mov
mov
imul
mov
dec
loope
mov
sbb
cltd
mov
adc
cwtl
jno
outsb
add
sub
stc
int
cs
popf
cmp
cmpsl
and
int
pop
js
movsb
xchg
adc
cltd
loope
mov
aam
cmp
mov
sub
jp
push
in
or
mov
mov
imul
mov
jge
or
paddq
push
sbb
aaa
cmp
sub
adc
adc
push
aam
jle
lret
adc
jle
sti
dec
pusha
add
pop
cmp
clc
adc
shrl
xlat
loopne
dec
fildll
and
lret
ljmp
int
sbb
push
adc
sahf
dec
or
mov
add
inc
jl
adc
push
repz
test
mov
sbb
test
nop
es
mov
mov
lea
mov
inc
filds
out
sbb
repnz
loopne
xchg
stos
mov
jecxz
mov
leave
call
movsb
lods
jecxz
push
or
daa
aas
fisttps
orb
mov
test
neg
push
into
cmpsb
out
sub
mov
jnp
or
iret
sbb
or
push
fimull
ds
fcompl
insb
call
xor
inc
insl
cs
sub
add
pop
lods
in
add
and
lods
or
sub
into
lcall
int3
test
sbb
into
popf
sbb
cvtps2pi
into
test
jns
mov
or
sub
pop
aaa
lret
cmp
mov
jl
xchg
xor
mov
adc
imul
fisttpll
fldenv
ds
xor
sub
sub
pop
int3
adc
mov
test
pushf
sbb
insl
test
xchg
mov
or
sbb
add
lea
scas
add
push
adc
jns
mov
test
cmp
mov
sub
cmp
mov
push
add
std
mov
inc
fistpll
push
leave
mov
push
test
cmp
fcoms
call
push
jae
scas
pop
adc
loopne
adc
cmpb
pop
jge
jp
in
outsl
into
or
jno
or
test
hlt
scas
mov
mov
dec
jmp
cld
popa
insb
or
xlat
lret
rcl
jg
dec
push
sub
and
test
arpl
aad
and
mov
imul
sub
pop
pop
sbb
or
push
fnsave
imul
adc
xor
dec
adc
and
jle
push
outsb
pusha
pop
cwtl
cmc
push
lods
dec
sub
pushf
jne
imul
push
dec
addps
add
mov
add
jge
sbb
aad
ret
cmp
xchg
test
dec
mov
add
fiaddl
adc
adc
rorl
push
add
das
mov
loopne
sub
push
cwtl
aaa
or
jg
icebp
xlat
pop
fwait
push
pop
scas
add
ret
mov
mov
pop
pop
imul
push
mov
pop
sahf
and
sbb
mov
sbb
mov
insb
icebp
and
and
xchg
mov
push
js
xlat
sahf
add
cmp
push
ljmp
popa
xchg
movl
and
daa
daa
and
sub
out
cmp
movsl
cwtl
mov
and
lcall
lcall
pop
push
insb
xor
mov
sub
dec
xchg
dec
push
dec
xor
insb
mov
or
das
mov
pusha
push
and
into
int3
or
sbb
mov
add
add
pop
mov
call
je
aad
pop
xor
mov
inc
jns
vmwrite
add
and
ljmp
fs
das
outsb
cmp
test
fcmovne
mov
push
push
add
cmove
mov
mov
dec
mov
cwtl
call
and
std
push
push
mov
push
pop
or
stc
dec
add
pop
push
inc
jno
pushf
rcrl
mov
xor
jl
mov
shlb
stos
push
popf
or
pcmpgtb
insl
in
xchg
data16
mov
popa
ds
pop
push
ret
mov
loop
xchg
pop
or
jne
inc
loope
or
adc
push
in
lahf
mov
cmpsb
lret
cmp
hlt
mov
xchg
lret
inc
ja
ss
insl
pop
leave
jle
push
sahf
imul
jle
stos
ficomps
rcrl
push
les
or
inc
out
mov
sbb
iret
pavgb
or
into
add
int
stos
insb
cmp
adc
outsb
int
in
imul
out
pop
mov
pop
aas
rcr
push
pop
jle
adc
xchg
pop
and
or
or
ljmp
adc
push
std
loop
int
or
fcomps
xchg
lret
into
iret
mov
or
insl
mov
popf
lds
xor
mov
sbb
inc
stos
push
inc
mov
dec
scas
inc
sahf
frstor
or
cmp
rclb
pushf
pusha
shrl
pop
adc
push
inc
jmp
cmp
pop
into
or
mov
mov
adc
inc
inc
or
bound
mov
in
mov
mov
sbb
shlb
sbb
pop
jmp
orb
lret
cmp
lea
sbb
dec
loopne
push
adc
sub
stc
aaa
out
sbb
mov
adc
movsl
push
sarl
sub
dec
dec
adc
ljmp
pop
in
hlt
jge
dec
pop
mov
pop
insb
sub
pop
stc
cmp
cmp
addr16
test
scas
movsb
cltd
jae
loop
loop
cs
adc
push
pop
and
mov
and
mov
pop
lahf
add
sub
aas
push
or
in
mov
shlb
insb
inc
sub
movsl
lahf
shrl
popa
ret
xchg
push
test
daa
fstps
int
rcr
enter
or
in
mov
imul
adc
loope
jmp
sub
stos
and
mov
leave
mov
adc
outsl
sub
cmpsb
adc
or
dec
inc
dec
lea
xchg
mov
fwait
mov
inc
pop
enter
sahf
pop
adc
or
adc
or
cmpsl
popf
ja
ret
loop
lret
jge
inc
jecxz
sub
fisttpl
mov
lea
pop
into
or
inc
and
into
shlb
xchg
push
mov
cmovnp
jne
jo
ljmp
shrl
add
ss
dec
xor
in
jecxz
sub
insl
scas
xor
pushf
xchg
lcall
lcall
mov
adc
xchg
sbb
aam
mov
inc
je
xor
xchg
adc
pop
lea
stc
xor
stos
ljmp
js
adc
sub
daa
pop
imul
ret
jecxz
and
mov
rcll
loope
pop
cwtl
cltd
clc
mov
daa
push
pop
mov
adc
movsb
adc
dec
mov
inc
sbb
mov
insb
pop
mov
leave
and
decl
xor
push
in
out
push
jecxz
pop
sahf
popf
and
jns
out
mov
push
mov
aas
mov
lods
pop
lret
out
test
inc
xchg
fistpll
les
shll
sbbl
add
mov
dec
or
dec
add
rcrl
aad
outsl
insb
pop
lret
xchg
pop
pop
dec
movsl
jge
push
xchg
inc
outsl
inc
mov
fwait
rcll
lcall
cs
push
add
cmp
scas
push
pop
call
xchg
cmpsl
mov
insb
das
sub
or
or
mov
insb
xlat
push
cltd
enter
or
ds
out
outsl
xor
scas
ror
loope
fisttps
sub
and
iret
dec
lods
jp
push
fisttpll
sbb
sub
adc
inc
and
loope
push
pop
cs
mov
mov
push
sub
jecxz
push
sbb
and
mov
adc
addb
dec
cmp
or
cmp
push
ds
js
bound
pop
inc
jb
jecxz
jae,pt
lea
sub
in
sub
in
stos
jecxz
arpl
int
fcomps
test
inc
fdivs
sti
sub
test
sbb
and
stc
mov
push
insl
dec
mov
in
out
jge
add
aam
jg
mov
or
enter
out
fildl
dec
sbb
decb
ljmp
movsl
jg
mov
andb
xor
pop
lods
arpl
push
mov
int3
cwtl
ljmp
jmp
test
mov
cmpsl
out
aaa
cmpsl
dec
lods
aaa
adc
cmp
sub
fisubrl
fldt
sub
popf
sarl
loopnew
mov
add
push
xchg
pop
jmp
fistpl
testl
adc
int
scas
mov
test
in
movsb
inc
xchg
push
lcall
jge
subl
ljmp
push
test
pop
sub
jl
loope
mov
and
repnz
and
sbb
pop
sbb
push
dec
jl
jecxz
pop
mov
insb
pop
sbb
test
fdivr
cmpsl
rcrb
push
daa
push
int
insb
sbb
lcall
leave
sti
xchg
fmul
dec
or
test
lahf
sbb
shrl
insl
ss
mov
orb
inc
cltd
push
daa
adc
mov
jp
mov
iret
xchg
inc
fmulp
nop
cmpsl
pop
dec
push
ljmp
pop
sub
push
lods
fisubl
sbb
popa
hlt
aam
mov
xor
lods
out
mov
dec
push
cmp
xor
adcl
ss
call
push
or
pop
sbb
loope
ljmp
and
js
inc
loopne
pop
daa
push
pop
scas
xor
mov
cmp
loop
repz
sbb
sbb
jns
pop
int
call
xlat
cmp
mov
stc
mov
insb
adc
cmpsl
aaa
sarb
push
mov
imul
dec
lret
and
pop
insb
sarb
or
stc
and
cmp
inc
sub
out
gs
xchg
jb
ljmp
jg
je
fwait
xor
cld
jecxz
cmp
addr16
repz
add
fs
or
testl
lahf
fimull
cli
js
xchg
insl
popa
inc
hlt
pop
and
and
xlat
and
push
mov
test
push
adc
dec
lock
push
jo
stc
xor
fs
mov
iret
cmp
push
or
or
cmp
cltd
out
aad
je
add
mov
fcompl
push
jno
les
into
pop
and
mov
jg
dec
mov
jne
scas
adc
push
pop
push
sub
mov
pop
or
push
jne
std
sbb
vphaddwq
insb
mov
stc
mov
jns
cmp
clc
movsl
jge
dec
aam
arpl
lcall
std
jns
sub
lahf
sti
xchg
rorb
lds
movsl
adc
insb
or
addr16
add
inc
cmp
ds
cs
pop
iret
ljmp
aas
scas
sahf
outsb
adc
or
cmpsl
daa
xor
pop
call
fdivrl
sbb
movsb
xchg
xchg
jo
cmpsl
imul
test
ds
bound
push
cmpb
mov
push
and
fs
rorb
jg
mov
popf
pop
das
sub
mov
rclb
sbb
push
jge
into
jl
aad
nop
push
nop
and
push
sub
stos
mov
sbb
fdivrs
xor
aad
inc
xchg
jecxz
mov
lret
add
into
shr
pop
jecxz
imul
mov
ljmp
sub
lcall
or
pop
ljmp
jo
movsl
and
das
pop
xchg
lcall
sub
imul
lahf
cmpsl
pop
lahf
sbb
sub
insb
mov
adc
lcall
sub
dec
pushf
xchg
ficompl
lea
andl
shlb
mov
pop
scas
lcall
and
sbb
mov
sbb
dec
lcall
or
sarl
xchg
add
rcll
sbb
rcrb
cld
out
sub
cs
sbb
ja
sub
xor
jle
pop
xchg
xor
cmp
xor
pop
push
int3
adcb
cs
cwtl
insb
jp
jecxz
push
and
iret
xor
adc
cmp
lea
add
pop
mov
mov
stc
loopne
mov
mov
cmp
pop
mov
sbb
jnp
negb
mov
inc
pop
orb
mov
adc
push
mov
mov
ret
out
xchg
cmp
into
mov
lea
jmp
push
jle
lret
xor
lret
mov
cmp
enter
mov
fistps
add
int
popa
push
int3
movsl
inc
adc
dec
and
and
mov
andl
leave
loopne
jb
pusha
push
pop
arpl
jno
sub
push
mov
or
pop
or
lret
pushf
test
jle
fdiv
cmc
adc
dec
or
movlps
or
cmpsl
fsubrs
repz
nop
cltd
repnz
es
sbb
push
xchg
jecxz
dec
push
fsubrs
push
repz
outsb
dec
pop
xchg
popf
mov
pop
pop
or
pop
cmp
cmp
icebp
aaa
adc
cmpsl
dec
or
in
pop
cwtl
add
mov
pop
mov
xchg
sti
mov
and
imull
adc
subb
pushf
cld
mov
dec
jg
ljmp
xchg
push
cld
pop
xchg
aam
adc
repnz
push
fadds
xor
into
aam
xor
aaa
mov
push
mov
mov
adc
lret
mov
aas
push
add
pushf
repnz
pop
push
push
inc
das
int
or
int3
mov
jae
and
ljmp
add
push
mov
push
roll
mov
push
aam
xlat
imul
or
or
add
sbb
jbe
fdivrs
push
popa
aam
fdiv
jbe
lret
sbbb
stos
fisttpll
fs
mov
sub
add
pop
imull
push
jl
repz
rcrb
sbbl
lret
insl
pop
inc
adc
or
jns
sub
hlt
pop
scas
movsb
xchg
cmp
cmpsl
mov
or
aad
outsb
imul
or
sbb
pop
movb
push
daa
push
xchg
mov
push
mov
mov
lock
push
mov
xchg
fdivr
mov
lahf
js
icebp
xor
mov
or
cmpsb
push
dec
cmp
arpl
mov
jbe
fadds
repnz
fdivrs
mov
sahf
xchg
cmp
sahf
stos
notb
and
lret
mov
outsb
into
mov
jne
das
add
test
and
daa
shr
add
xchg
test
sbb
sub
jo
nop
test
jno
mov
cmp
sarb
ret
stos
push
daa
push
mov
push
sub
scas
rorb
jg
in
les
inc
or
and
mov
jmp
cltd
gs
xchg
sub
xchg
test
aam
ljmp
push
jecxz
xor
scas
push
adc
test
aam
mov
test
sub
mov
adc
jmp
stc
lcall
outsb
fwait
mov
pop
hlt
xchg
negl
mov
push
dec
xlat
xchg
sub
test
and
andb
jnp
fdivr
in
cs
out
sbb
sbb
push
ret
adc
imulb
shrb
push
xor
jl
repz
mov
popf
or
sbb
jmp
aaa
rcrb
loope
cmpsb
or
sub
in
push
lret
sub
pop
sahf
xor
fmul
jbe
sub
pop
xor
adc
jp
pop
pop
scas
add
enter
xchg
xchg
scas
dec
dec
lea
scas
adc
stos
pop
js
pop
fbld
xchg
fwait
insl
aas
mov
pop
lods
pop
clc
push
lods
dec
jns
sbb
mov
mov
pusha
lahf
mov
or
pop
nop
inc
arpl
pmullw
push
mov
jecxz
jle
mov
sbb
xlat
push
scas
das
mov
push
je
or
imul
nop
rorl
sbb
and
dec
sbb
cmc
incb
popf
push
xchg
push
repz
mov
cwtl
cmp
fcompl
pop
push
jmp
xor
lcall
outsb
mov
jne
lretw
jb
sub
mov
mov
xchg
fistps
movsl
popa
mov
jmp
aam
pop
pop
scas
mov
xchg
jmp
pop
addr16
mov
pop
movsb
xchg
push
rolb
call
nop
xlat
roll
into
or
jbe
std
add
shlb
xchg
pushf
jb
inc
pop
mov
enter
dec
dec
or
jp
test
psllw
pop
add
je
sbb
shll
xor
push
sbb
aad
into
inc
mov
and
xor
pushf
test
iret
sti
sub
dec
add
outsl
sub
pop
xchg
pop
xchg
cmp
adc
mov
inc
cltd
mov
add
decl
ss
sbb
lret
pop
sti
or
fbstp
push
or
pop
sahf
clc
hlt
push
inc
inc
insb
jg
pop
inc
stos
pop
pop
imul
push
mov
pop
push
or
adc
daa
mov
lret
or
dec
fimuls
imul
dec
ja
mov
mov
sub
dec
mov
jle
or
jb
sub
dec
cmp
iret
mov
cmp
divps
cmp
or
dec
lods
or
or
sahf
push
movsb
adc
push
in
lock
and
cmp
outsb
daa
insb
cwtl
push
stc
and
pop
scas
push
fimuls
xchg
out
movsb
arpl
iret
and
idivl
je
mov
into
imul
xor
jecxz
enter
push
hlt
aad
movsb
or
jecxz
xlat
push
adc
ss
adc
xlat
stos
push
pop
dec
mov
dec
dec
shrb
test
clc
fsub
mov
and
sbb
int3
cmpb
cld
mov
inc
subb
push
sarl
daa
push
ds
sbb
dec
sub
push
int3
adc
jae
insb
push
or
and
xchg
into
add
dec
test
dec
dec
stc
les
adc
sbbb
clc
ret
push
out
mov
and
cld
adc
sbb
xor
add
out
pop
mov
push
cmp
pop
mov
es
mov
adc
dec
xchg
adc
cmpsb
mov
icebp
lahf
dec
pop
mov
js
dec
lcall
lea
iret
bound
mov
jb
add
and
or
cmp
popa
ret
outsl
pop
popf
add
pop
dec
cs
addr16
add
call
out
xlat
test
lds
or
adc
lahf
inc
bnd
lods
ss
or
loopne
call
sti
and
xchg
mov
pop
setle
or
adc
cmp
and
sbb
aam
and
es
popf
push
inc
sub
dec
cwtl
cli
cmpsl
sub
and
xchg
nop
sbb
lret
add
lods
scas
lret
lods
js
pop
cli
pop
fsubp
xchg
stc
pusha
xor
movsb
cmp
sbb
sub
adc
not
and
xor
sub
loope
pop
xor
xor
int3
sahf
or
add
cmp
fstl
sahf
xlat
sbb
push
add
in
ds
mov
dec
xor
mov
sbb
lret
orb
or
mov
aam
fsubrl
fs
or
das
into
pop
xchg
or
adc
sti
sub
inc
push
out
cld
shlb
nop
inc
lret
and
leave
push
jmp
inc
cmp
movq
mov
push
imul
jnp
or
je
add
mull
inc
mov
shl
shlb
dec
sbb
push
cmp
adc
push
pop
mov
outsb
cmp
xchg
test
outsl
leave
push
popf
add
pop
push
pop
adc
jae
inc
and
and
mov
leave
adc
inc
or
push
sbb
jecxz
inc
push
pop
cmpb
cmp
leave
jle
stos
adc
int3
jl
sub
push
into
push
int3
dec
cmp
sbb
pop
mov
ficoms
add
pop
xlat
icebp
cwtl
inc
pusha
das
dec
cmp
xlat
lcall
xchg
sbb
aad
fdivl
add
pop
add
mov
sbb
daa
adc
int3
fcoml
cmc
arpl
test
inc
and
add
xchg
push
jp
cwtl
add
rol
mov
stos
dec
pop
mov
jbe
scas
lods
jmp
push
sbb
pop
icebp
aam
daa
xlat
sbb
mov
mov
push
mov
mov
jo
outsb
and
xchg
dec
fsubl
ficompl
dec
js
mov
out
sti
or
jl
or
push
stos
loope
int3
movsb
das
sub
pop
fwait
and
into
int3
push
and
test
xchg
push
dec
bound
xor
xchg
into
mov
imul
lock
xor
add
std
push
cmp
repz
hlt
add
adc
and
es
divb
ljmp
mov
cmp
loop
mov
and
pushf
loopne
shlb
sub
or
pushf
pcmpeqw
cmp
mov
sub
cld
leave
mov
sbb
push
loopne
add
lahf
test
fbld
test
fs
add
leave
xlat
fstpl
pop
push
push
daa
dec
sub
sub
sti
push
int3
xchg
pop
in
inc
pop
enter
ja
daa
or
jae
or
clc
push
pop
fbld
and
lret
and
insb
mov
ret
pop
fstpl
adc
jno
outsl
pusha
jns
roll
negb
aaa
je
sub
enter
or
pop
pop
mov
cs
jg
shll
mov
ja
hlt
fs
daa
popa
xchg
fldl
into
mov
mov
sbb
or
fdivr
ret
mov
xchg
or
add
aam
cli
test
or
xchg
push
insb
jl
shlb
or
cs
and
sbb
push
loope
adc
and
insl
adc
inc
int3
inc
cs
dec
pop
push
inc
dec
shrl
mov
dec
leave
test
lret
mov
push
mov
popa
adc
push
in
jp
cmp
aaa
sub
and
sbb
stos
sbb
jno
repz
mov
bound
cli
lds
cmp
or
pop
lea
jp
js
sub
push
xor
and
xchg
sbb
sub
mov
cld
fldcw
inc
sbb
or
lcall
push
insl
push
cmp
mov
mov
cmpsb
push
mov
out
gs
dec
imul
js
sub
pop
and
push
pshufw
stos
les
push
hlt
fwait
push
shrl
insl
push
test
pop
cmp
pop
inc
aaa
inc
adc
push
mov
mov
imul
adc
xchg
ret
fistpll
mov
push
sbb
cmp
movsb
mov
mov
or
lcall
dec
sbb
mov
movsb
dec
rorl
movsb
fisttps
mov
dec
inc
lods
cvttps2pi
xor
addr16
dec
inc
pushf
mov
sahf
sub
das
cmpsb
push
mov
sbb
jge
cmp
ja
stc
jl
ljmp
aad
pop
mov
adc
jo
pop
push
mov
out
out
or
pop
addb
in
dec
ljmp
imul
and
setne
adc
dec
cmc
stos
dec
xchg
add
stos
inc
mov
push
call
stc
mov
cmpsb
push
pusha
jbe
xchg
loopne
or
addr16
pop
lods
cmp
pop
cmp
js
sti
in
sbb
mov
adc
inc
jmp
xchg
xchg
ficoml
repnz
jp
inc
pop
mov
imul
test
lret
xor
ds
movsl
iret
popl
mov
mov
out
cmp
sub
or
test
sub
mov
call
rclb
in
fimuls
xor
inc
sub
aam
adc
adc
xor
es
fwait
jns
ss
int
aam
pop
push
cs
pop
out
repnz
aas
imul
leave
sbb
scas
fs
inc
jae
pop
je
lea
push
je
sbbl
and
icebp
dec
cwtl
cmc
lcall
fdivrl
mov
push
xor
nop
jno
fucomi
sub
into
push
imul
sub
and
test
add
ds
out
leave
cmp
push
repz
jp
call
sbb
gs
lock
push
jecxz
nop
sub
and
pop
jno
pop
out
ds
sub
inc
adc
push
imul
rcl
pushf
dec
loopne
sbb
sub
jecxz
and
push
lcall
xchg
pop
aam
pop
xor
sub
stos
mov
pop
fistl
mov
lret
stos
int
mov
cmp
xchg
dec
push
and
sbb
ss
fisttpl
popf
dec
jns
jb
out
jb
pushw
xchg
rclb
push
sub
cmp
jecxz
aas
test
adcb
add
jb
dec
adc
adc
pusha
adc
es
cmp
loop
and
sahf
sub
cmpsb
inc
adc
loopne
fwait
test
rcl
or
aad
mov
add
mov
repnz
movsb
lcall
movsb
ret
mov
mov
std
sahf
mov
ss
sbb
mov
stos
and
push
fcmovb
shrb
push
push
sbb
mov
sub
push
mov
mov
bound
add
push
sbb
dec
jmp
das
icebp
mov
dec
movsl
loope
lods
cmp
cmp
mov
sub
ret
push
fs
or
nop
mov
or
ljmp
or
mov
in
subl
in
test
ficoml
pop
dec
lds
pop
or
mov
orl
adc
dec
nop
repz
pushf
arpl
pop
dec
or
xor
adc
insl
adc
jne
jmp
sahf
push
mov
stc
outsl
add
or
mov
adc
xor
fdivrs
fisubs
cltd
mov
mov
xor
imul
jmp
push
mov
or
or
adc
inc
leave
cmpsb
add
sbb
push
add
dec
test
sub
jnp
and
mov
push
test
sub
push
mov
insb
mov
shr
sub
into
outsb
dec
test
lods
into
testb
jo
in
pop
jecxz,pn
mov
push
mov
pop
lods
mov
rorb
mov
cmpb
xchg
dec
daa
jecxz
enter
xor
enter
lret
inc
mov
insl
fisubl
pop
sarb
jae
xchg
into
sbb
push
stc
inc
push
or
push
outsb
push
arpl
aaa
sub
mov
repnz
and
sbb
adc
enter
adcb
leave
add
jo
or
push
mov
test
cmp
dec
sub
or
cmpsl
jl
imul
cmc
mov
xchg
cmp
xchg
rorl
dec
jae
dec
sbb
push
lea
shll
or
push
pop
fiadds
daa
push
cltd
fdivs
int3
stc
movsl
mov
add
xor
adc
push
dec
xor
adc
pop
xor
scas
add
jne
jmp
scas
mov
and
fwait
insl
pop
sub
adc
test
xlat
cwtl
or
mov
pop
add
mov
inc
and
inc
scas
adc
in
in
xor
insb
pop
aas
daa
mov
out
xchg
dec
cwtl
loop
lock
imul
lcall
dec
lcall
fdivl
jns
scas
pop
xor
pop
and
inc
cmp
inc
repz
cmc
push
cmp
out
mov
pop
cld
cmp
dec
lret
dec
pop
xor
adc
scas
lret
jg
inc
loope
inc
mov
div
inc
sbb
cmp
inc
sahf
or
mov
mov
add
fadds
cmp
dec
sbb
push
sahf
insb
nop
fnstsw
push
push
push
das
cmp
pop
mov
inc
es
stos
jecxz
mov
push
push
adc
lahf
cli
push
xchg
sbb
inc
pop
cmpsb
cmpl
inc
xchg
rep
push
es
xor
jmp
int3
out
xlat
xchg
xlat
cmp
repz
addr16
mov
rcl
femms
adc
int
fisttps
add
popf
or
lret
or
mov
shrl
mov
sahf
or
mov
mov
pusha
dec
fwait
inc
iret
leave
xchg
pop
or
or
and
push
sub
gs
movsl
dec
mov
xchg
hlt
ret
xchg
dec
jecxz
xor
movsb
js
cmc
pop
and
ljmp
cmc
mov
mov
movsl
sub
and
sub
pop
std
adc
loope
sub
xlat
inc
cltd
cmpsl
loopne
sbb
push
sub
xchg
test
jb
cmp
gs
xchg
dec
sahf
aam
das
mov
adc
sbb
or
add
shll
shrl
into
add
mov
add
push
stos
ficoml
stos
dec
add
cs
lret
push
add
xchg
sub
cmovle
add
sub
lea
or
push
out
lea
dec
sub
mov
lock
rsm
int3
add
push
sub
adc
inc
es
add
ss
or
dec
mov
scas
sbb
fldl
push
movsl
arpl
xchg
nopl
or
add
and
sbb
rolb
adc
lret
adc
out
or
mov
or
or
mov
jecxz
pop
sub
and
ret
push
xor
out
pop
cmp
push
add
lea
mov
add
adc
mov
mov
mov
and
pop
insb
aam
xor
xchg
add
dec
mov
add
adc
mov
add
rorl
mov
add
rorl
xchg
or
add
cld
or
add
rcll
mov
push
movlps
sbb
cmpsl
add
shll
xchg
add
lcall
mov
add
jl
or
mov
out
test
mov
rorb
aad
nop
jecxz
imul
adc
jae
leave
push
sbb
adc
xchg
imul
cmp
stos
cs
and
ficomps
and
or
into
mov
dec
cmpsl
pop
sbb
das
les
and
lods
lods
adc
in
movsb
outsl
adc
lret
mov
xor
stos
mov
stos
mov
stos
mov
mov
push
aaa
cwtl
jp
cmpsb
sahf
push
sub
sub
mov
ss
xchg
sahf
dec
orl
xchg
adc
cmp
lcall
xor
rcrb
mov
xchg
dec
adc
sbb
fwait
and
xor
push
dec
pop
mov
mov
imul
icebp
mov
mov
aam
out
xchg
inc
add
push
cmp
orl
aaa
repz
jne
outsb
hlt
sub
sub
fistl
out
and
and
add
int3
xlat
push
pop
test
jo
fdivs
sbbb
add
call
sub
push
insl
das
xchg
or
sahf
or
ror
lods
aas
mov
scas
jnp
test
jecxz
push
retw
mov
jb
lds
mov
aaa
mov
inc
jle
scas
adc
pusha
scas
pop
xchg
cli
stos
aam
sub
mov
imul
xchg
dec
sbb
stos
dec
loopne
xor
xchg
ret
sub
xor
pushf
adc
out
mov
push
add
lret
dec
cwtl
xchg
stc
pushf
mov
mov
push
fcomps
and
fldpi
pop
cmova
add
aad
fs
pop
popf
shrl
sti
push
and
idiv
inc
add
pop
sahf
roll
ds
jne
push
outsl
mov
mov
mov
pop
jno
mov
sbb
cs
jae
das
xor
mov
jmp
ljmp
inc
ficoml
xor
pop
loope
jbe
push
sbb
sbb
push
loopne
stos
in
mov
sub
xchg
fwait
jo
call
and
ret
lahf
pop
adc
fsts
les
setg
or
mov
popf
lahf
cmc
jo
mov
addr16
push
lods
aas
mov
bound
dec
dec
icebp
jle
push
and
pop
psubd
inc
fcoms
pop
xchg
cmp
dec
aaa
inc
cmp
xchg
mov
push
pop
inc
lods
les
scas
push
pop
cmp
mov
or
mov
ljmp
mov
adc
lods
mov
push
jo
and
repnz
aam
hlt
xor
in
inc
hlt
push
jb
int3
pop
mull
subl
push
dec
lods
js
push
cwtl
adcl
negl
adc
daa
mov
pop
sbb
lahf
or
fdivl
mov
in
pop
les
repz
add
inc
xchg
cltd
hlt
fnsave
push
fcmove
or
xor
and
sbb
cmp
and
ljmp
mov
cmp
jecxz
movsb
and
mov
js
stc
jo
and
lret
dec
divl
and
and
rolb
xor
add
stos
or
gs
push
pop
pop
pop
insl
sub
jne
sub
push
jmp
sahf
mov
add
mov
jp
dec
int3
sub
sahf
xlat
mov
iret
outsl
cmpsl
bound
cld
cmc
fwait
pop
inc
lahf
push
and
jp
add
mov
test
cmp
adc
int3
push
int
mov
dec
aad
add
lods
lcall
pop
ds
pusha
adc
repz
pop
push
cld
lret
int3
inc
mov
adc
push
push
in
test
cmp
stos
insl
jmp
sub
fisttps
mov
sbb
sbb
pop
and
stos
adc
or
fcomps
imul
cs
dec
les
cmc
out
push
nop
cmp
in
lds
ficompl
cmp
in
cltd
andl
jecxz
mov
das
push
adc
sbb
and
fisttps
test
jle
or
and
pop
addr16
cmpsl
adc
lret
or
sbb
jl
js
dec
mov
sbb
adc
and
push
test
mov
push
les
pop
add
insb
mov
stos
pop
sbb
rorb
inc
psubw
aam
rcll
adc
pop
mov
mov
adc
add
dec
and
sbb
jle
scas
lods
mov
rorl
inc
mov
jl
loopne
ret
and
jp
pusha
js
cmp
fcoms
or
xchg
lcall
inc
cmp
xchg
les
insl
sbb
cmp
cs
jne
ret
ja
aad
dec
pushf
scas
mov
push
aad
popa
jle
jl
and
add
inc
xlat
into
sbb
or
scas
mov
fsubrl
xchg
popf
adc
aaa
sbb
or
call
sbbb
leave
xchg
and
aad
xchg
xchg
jae
icebp
xchg
xchg
mov
lahf
mov
loope
scas
and
aas
into
imul
pop
sahf
hlt
mov
lds
icebp
dec
sub
or
outsl
call
push
lods
pop
dec
sbb
and
pop
jmp
insl
cmpsb
cmp
xlat
in
les
sbb
jmp
jno
jae
jecxz
and
scas
cmp
lods
push
cmp
cwtl
dec
adc
jl
clts
push
dec
mov
ljmp
pop
inc
jns
inc
rcl
mov
xchg
outsl
out
dec
dec
sub
or
sbb
inc
popf
jecxz
add
mov
sbb
cmp
negl
adc
aaa
jne
xor
andb
lret
or
mov
or
imul
fucomi
or
in
sub
and
jne
dec
mov
cltd
das
or
sbb
dec
inc
jmp
aad
lea
or
sbbl
sub
sbb
test
imul
test
aaa
nop
xor
pop
xchg
and
mov
or
das
sbb
adc
ss
xlat
mov
mov
xchg
xlat
sbb
mov
sub
mov
inc
inc
out
inc
pop
and
fstpt
sbb
repz
and
repnz
ja
arpl
xlat
fwait
adc
or
cli
out
or
sbb
sbb
inc
mov
sarl
dec
lods
push
call
imul
add
cmp
rcrb
dec
hlt
stos
cli
mov
lcall
jecxz
ret
push
in
dec
lcall
daa
roll
repnz
in
jne
xchg
mov
dec
adc
imul
sbb
adc
pop
push
lret
or
mov
dec
lret
mov
and
fwait
and
xlat
jg
xchg
in
pop
and
in
sub
adc
push
imul
cwtl
repnz
imul
add
imul
stos
jp
dec
mov
push
push
pop
cmpsl
in
or
std
add
push
lahf
jp
movl
lds
lcall
push
xchg
or
mov
iret
sbb
aas
out
cmp
push
pop
cmp
ljmp
lods
int
sbb
sub
mov
push
lret
sbb
dec
pushf
pop
or
iret
xchg
pop
pop
dec
lret
movsl
or
cwtl
push
inc
pop
dec
fwait
and
mov
mov
popa
movl
mov
jae
jmp
imul
or
mov
sbb
xor
loop
xchg
dec
pop
jnp
lods
mov
mov
mov
sahf
push
xor
push
add
lret
push
xchg
sbb
in
mov
aam
int3
sub
xor
mov
sbb
cmp
mov
cmc
daa
mov
aaa
lret
cmp
push
rorl
or
arpl
lcall
jp
pop
or
mov
insl
cmp
mov
cmpsb
cmp
stc
pop
adc
xchg
jae
ja
aad
ds
push
imul
xchg
les
in
mov
dec
cmp
sbb
xor
lea
push
mov
aam
out
cli
daa
dec
xchg
push
adc
sbb
jno
sub
andl
mov
dec
mov
addr16
pop
fsubr
lahf
adc
je
stos
addr16
push
out
fldcw
or
mov
and
cmc
lret
push
dec
gs
in
scas
xchg
loope
mov
cltd
mov
add
adc
in
ss
leave
mov
xchg
xor
lcall
sbb
pop
cwtl
jne,pt
scas
xor
adc
sahf
push
push
int
xor
test
mov
cmp
pop
jg
push
outsb
xchg
bound
push
insb
dec
mov
mov
adcb
mov
push
imul
decl
mov
imul
inc
stos
mov
dec
mov
mov
insb
aam
or
pmaxub
loop
lret
cmp
push
or
leave
push
fcoml
in
popa
sbb
hlt
xor
nop
test
mov
pop
jmp
inc
adc
xchg
dec
or
sbb
nop
push
pusha
int
pop
jns
push
dec
mov
insb
bound
lahf
mov
lock
and
repnz
xchg
push
or
push
sub
lahf
or
dec
or
adc
xor
and
inc
mov
shlb
ret
out
xchg
jne
es
cmp
outsl
lcall
fwait
or
or
or
ja,pt
pushf
xchg
call
sbb
wrmsr
push
test
fstpt
push
lahf
cmpsl
fs
pop
pop
xchg
xor
jnp
inc
pop
aas
jb
ds
fiaddl
push
test
jo
xor
pop
repz
shl
inc
xor
mov
xchg
cmp
mov
sahf
outsl
xorl
ds
fs
ds
sbb
rorl
das
sbb
adc
mov
dec
push
das
bound
cmp
mov
sbb
sarb
dec
outsb
push
daa
lahf
repz
clc
add
aaa
sysexit
daa
popf
or
add
push
sahf
js
jb
rorl
push
jg
leave
xor
adc
mov
and
es
mov
inc
jmp
dec
test
test
push
out
test
push
outsl
sahf
std
addr16
cmp
cld
and
fldenv
mov
xlat
mov
mov
mov
dec
push
daa
lock
xlat
and
add
out
loop
test
and
into
mov
mov
dec
cld
out
adc
sbb
mov
fdivs
or
jp
pop
push
enter
dec
daa
or
mov
mov
lret
shlb
sbb
insb
sbb
lret
into
addb
cli
push
push
sbb
mov
sub
fs
sub
dec
outsb
lret
push
jnp
mov
and
push
or
push
mov
inc
fwait
in
sbb
sti
and
fnstenv
cmp
push
test
insb
push
xchg
je
mov
add
in
rolb
cwtl
fwait
mov
inc
pushf
filds
icebp
mov
pop
fwait
dec
repz
push
mov
inc
push
fsts
aas
into
mov
dec
repz
add
popa
je
mov
mov
je
lret
orb
jbe
dec
xchg
mov
and
cmp
icebp
and
push
popf
inc
sub
stos
in
xchg
out
loopne
xchg
leave
mov
iret
repz
arpl
sbb
pop
insb
lahf
mov
sub
lcall
push
addb
addr16
icebp
arpl
psrad
or
pop
inc
in
ficoml
push
cmp
xlat
jo
jecxz
mov
mov
or
xlat
or
or
adc
xor
into
add
push
push
ret
mov
cmp
lret
repz
bound
bound
bound
dec
testl
jne
add
sub
es
fs
fmull
inc
mov
mov
push
jl
cmp
mov
stos
mov
adc
adc
or
adc
pop
xchg
push
sub
or
sbb
insb
jg
les
push
add
popf
and
pop
inc
mov
cmp
repz
mov
or
pop
pop
rcrw
adc
cmp
pusha
add
mov
je
inc
ret
or
or
lea
inc
mov
cmovb
xor
rcrb
push
sti
or
jle
mov
or
push
sbb
mov
inc
pushf
rep
push
push
add
pushf
and
xchg
or
sarb
ds
nop
sub
int3
sub
fwait
inc
in
add
je
pushf
inc
push
loop
jb
shll
xor
sub
pop
pop
je
mov
cmp
jns
cmc
sub
add
inc
arpl
push
insl
adc
pop
jnp
adc
add
or
push
test
lret
or
lods
aad
pop
insb
cs
push
pop
int3
aad
cmpsl
sub
mov
mov
pop
jg
pusha
mov
lret
and
cmpsb
add
push
adc
and
adc
push
daa
jno
stos
adc
add
sbb
inc
dec
cmp
xor
inc
mov
jno
push
push
xor
ror
sub
shll
shll
rcll
je
daa
leave
insb
or
add
push
jbe
pop
jl
rcll
sub
xchg
sub
push
xchg
push
loopne
dec
fadds
cmp
aad
and
insb
adc
push
push
fwait
and
mov
mov
cmc
inc
sub
rcr
cltd
adc
push
popa
mov
jmp
ljmp
sbb
ds
ja
mov
jg
inc
adc
lods
adc
add
cmc
push
lret
sbb
adc
mov
sbbl
adc
test
rcrl
pop
fs
jecxz
addl
hlt
jg
in
leave
mov
lods
nop
shll
push
movsb
mov
and
jnp
adc
jb
xchg
add
lods
jno
imul
push
aas
and
xor
mov
mov
jns
jmp
cmpsl
mov
lret
mov
loope
jg
jne
mov
mov
mov
ljmp
shll
mov
add
sti
jae
or
sub
xchg
lock
stos
mov
adc
shl
loope
ds
inc
mov
leave
push
sbb
popa
and
push
push
cmpsb
sub
scas
loope
loop
enter
sub
in
xor
fwait
jecxz
pop
sub
jg
xor
push
shll
sbb
adc
mov
xor
xchg
lcall
xor
cmp
cmp
outsl
popa
jbe
popf
cltd
jns
push
pusha
push
scas
xchg
or
push
add
push
jo
and
or
lods
into
mov
push
pop
testl
imul
mov
mov
push
cltd
and
repnz
mov
add
pusha
cltd
gs
mov
sar
cmpsl
xchg
sbb
sbb
sbb
test
aas
push
dec
adc
mov
not
neg
xchg
xor
add
insl
arpl
xchg
adc
rcr
dec
push
in
jmp
xor
adc
imul
or
or
insl
mov
loop
aaa
jge
sub
std
adc
mov
into
xchg
test
sbb
lcall
push
mov
adc
sbb
insb
jbe
leave
lcall
sub
xchg
ds
xchg
mov
sub
data16
int
add
stos
add
add
inc
push
mov
fsubrs
sub
lds
mov
test
sbb
pop
std
add
jge
cmp
rcl
mov
mov
adc
mov
dec
mov
inc
outsb
aas
cs
mov
inc
push
and
mov
adc
pushf
sbbl
inc
aaa
sbb
add
or
xor
sub
pop
sub
pop
cmp
cld
daa
outsl
mov
xchg
movsb
mov
mov
insb
aam
push
or
mov
xchg
jge
lea
or
sub
mov
dec
pop
or
outsl
add
pusha
int
mov
rorb
je
adc
lret
lcall
sub
push
jno
sbb
lret
outsb
dec
in
and
addr16
faddl
or
adc
ret
mov
cltd
pop
xor
jne
shrb
repz
scas
cmp
adc
adc
sbb
mov
les
mov
scas
xlat
fbstp
stc
into
in
pop
int
xor
daa
lret
sahf
xor
outsb
iret
push
sub
into
cmp
ja
pmaddwd
das
cmc
ret
outsb
push
ljmp
mov
sub
test
dec
sub
fstpt
jae
sub
or
sub
add
adc
mov
pop
adc
xchg
test
adc
mov
scas
cltd
leave
and
lods
or
adc
xchg
adc
aad
scas
jne
and
nop
adc
adc
dec
xchg
cltd
and
xlat
mov
xor
push
sub
dec
lahf
push
lock
and
loope
xor
mov
push
sbb
jmp
dec
shll
or
sahf
inc
bsr
add
sub
test
movsb
mov
popa
push
jb
pop
xor
cltd
add
in
add
std
popa
fwait
sbb
orl
rcl
mov
and
iret
xor
jg
out
aad
cmp
jl
and
mov
jno
dec
mov
xor
jge
push
sbb
jge
push
adc
dec
mov
arpl
mov
xor
sbb
iret
mov
xor
push
xlat
jg
or
and
stos
mov
pop
sbb
xchg
xor
stc
pop
lcall
mov
shrb
mov
rorb
sarl
adc
add
sarl
dec
bound
dec
sahf
iret
and
push
lea
sub
sub
jnp
xchg
adc
inc
lea
push
ret
leave
inc
and
push
aaa
cmp
les
inc
ljmp
mov
and
outsb
cs
lahf
sbb
add
add
fdivrs
or
arpl
andb
stos
pop
sarb
stos
shlb
cmp
leave
clc
call
ljmp
outsb
jmp
jle
cld
push
dec
fisttps
cmp
js
das
cmp
iret
cmp
sub
daa
push
sbb
in
decl
cmp
inc
je
sbb
adc
jno
pop
in
jae
cltd
testl
pop
inc
sar
movsl
or
imul
fwait
sbb
mov
rcrl
lret
add
mov
jo
adc
dec
cld
test
mov
lds
cmp
insb
ja
rclb
sbbb
jns
mov
shl
sbb
shl
add
das
stos
add
into
and
ficompl
subl
mov
sub
test
pop
aaa
push
js
jno
mov
test
adc
aam
repz
cmc
jl
mov
stc
outsb
ds
jecxz
add
push
into
add
mov
enter
pushf
and
adc
fmuls
out
int
lahf
adc
les
fcoml
sub
fwait
push
clc
mov
movsl
adc
subl
jg
sbb
dec
lret
pusha
addr16
add
lds
mov
movb
pusha
sub
xor
lods
into
jl
cmp
push
push
inc
adc
sbb
dec
mov
inc
sub
adc
in
movsl
xchg
sub
mov
push
mov
push
fs
in
jg
out
push
sahf
outsl
daa
inc
sbb
sbb
loope
dec
push
jne
and
or
jno
popf
pop
push
jno
lret
jle
iret
sbb
outsb
mov
or
mov
lcall
sub
ljmp
inc
bound
les
daa
jnp
cmp
add
loope
add
mov
mov
je
pop
xchg
push
push
fidivs
xchg
mov
add
imul
sub
mov
pop
adc
nop
sub
lahf
sbb
pusha
jecxz
lds
lods
outsl
and
ljmp
data16
xchg
loop,pn
and
sar
cmp
imul
aaa
out
fistpl
push
mov
daa
and
pop
push
movsb
dec
lret
out
adc
add
adc
push
fsub
sbb
sbb
nop
pop
insl
dec
and
inc
es
sbb
pop
xor
push
cmp
jmp
imul
sbb
jge
lods
push
pop
jmp
mov
lea
pusha
lods
insb
pop
jecxz
cmp
pop
aas
pop
loop
mov
bound
pushf
add
insl
lods
mov
lahf
sub
loop
daa
aam
fdivrs
ss
ret
mov
int3
push
pop
jne
sbb
and
mov
mov
cmc
cmp
jo
jno
sbb
xchg
xchg
and
xor
dec
les
jg
outsl
cltd
sub
arpl
xchg
aad
jg
fnstenv
pusha
rol
cmpsb
rorl
jbe
daa
out
mov
out
clc
sub
sub
adc
das
sar
addl
xor
mov
dec
push
fcmovbe
push
xor
sbb
rcll
xor
bound
dec
jae
xor
fwait
clc
jno
mov
sbb
popa
mov
mov
sbb
jno
sahf
dec
inc
pop
or
and
pop
or
imul
cld
xchg
dec
sarb
sahf
fwait
fwait
pop
icebp
or
int
fistpl
data16
fisubl
push
fisubs
mov
cmc
and
push
loop
sarl
jne
scas
call
pushf
adc
cmpsl
sbb
xchg
loop
in
loop
bound
mov
fs
mov
into
mov
ficoms
shll
mov
inc
loopew
popa
lods
movsb
dec
adc
xchg
sub
mov
and
sbb
sahf
jl
in
xchg
cmpsb
jo
mov
adc
fldt
and
fs
lea
jecxz
imul
sbb
push
pop
add
jp
and
sub
sahf
sbb
dec
jecxz
push
xor
aas
loope
pop
push
rolb
mov
push
test
dec
xchg
out
ja
daa
sub
pusha
push
int3
sbb
xor
push
adc
and
push
arpl
outsb
push
pop
lock
or
push
fwait
adc
or
cltd
rcrl
mov
sbb
sub
insl
adcl
push
sbbl
add
outsl
or
movsl
jne
pushf
or
sub
enter
mov
push
insl
cmpsl
jp
les
shlb
cwtl
push
lds
mov
or
icebp
and
sbb
pop
cmp
data16
ljmp
push
pop
adc
xlat
jb
cli
jmp
inc
add
cmp
adc
data16
rcrb
mov
mov
and
test
into
push
sar
daa
shlb
xchg
fwait
adc
sub
cld
jo
insb
cmpsl
push
or
mov
or
or
enter
dec
mov
pop
mov
in
roll
repz
and
aaa
sbb
es
add
mov
cltd
into
jp
or
mov
int
pop
inc
jmp
add
scas
rorl
sbb
frstor
add
insb
xor
adc
outsl
or
mov
fwait
stos
aam
and
cmp
dec
cltd
or
pop
sbb
xchg
pop
rol
jns
sub
movsb
xor
lahf
les
insb
addr16
aam
lcall
cmpl
pop
fmul
sub
sub
es
pop
add
addr16
iret
dec
sub
mov
xor
lds
push
mov
dec
daa
fsubrl
fwait
es
add
add
push
and
in
dec
pop
insb
adc
jg
into
sbb
adc
lds
ret
jmp
sbb
mov
stc
sub
pushf
adc
cmp
int
jg
test
push
ror
jp
shr
jge
cmc
pop
or
scas
out
arpl
push
jmp
pop
cmp
sbb
int3
loop
fnsave
and
jl
out
cwtl
pop
push
das
repz
movsb
adc
cmpsb
fdivrp
sub
sahf
mov
xchg
add
fsts
xor
aad
dec
dec
pop
add
push
dec
push
add
cld
adc
push
and
mov
mov
out
mov
movsb
pop
xor
push
push
mov
cmpb
stos
mov
xchg
jle
bound
inc
mov
mov
push
inc
fcompl
mov
push
std
leave
ficomps
aas
sbb
jne
lods
xlat
inc
imul
jo
js
rcll
adcl
jbe
adc
inc
xchg
push
or
xchg
into
cmp
add
and
in
cmp
lods
pop
enter
imul
pop
inc
lret
in
dec
int
lahf
inc
dec
xor
stos
loopne
jnp
cmp
dec
push
cmp
xor
ja
hlt
mov
js,pn
repz
cmpsb
insb
pop
ss
mov
fsubl
aam
mov
push
inc
sbb
int
add
loopne
std
orb
lea
push
sbb
mov
mov
loope
push
adc
mov
inc
push
inc
sub
pushf
sbb
into
add
cmp
sub
or
lcall
sub
dec
add
jle
es
stos
popl
push
sub
and
add
lock
xor
add
add
stos
push
and
adc
push
add
pop
out
das
xchg
mov
rorb
add
cmp
add
fcom
sbb
cli
stos
adc
adc
pop
inc
xchg
cmp
sub
fwait
sbb
mov
stos
adc
jmp
sbb
ss
cmp
ja
jl
ss
jecxz
xor
xchg
dec
add
scas
mov
pushl
vmwrite
xchg
imul
xchg
sub
jg
sub
scas
hlt
inc
insl
movsl
or
sbb
insb
or
in
or
dec
inc
push
adc
xchg
das
mov
sub
lods
and
adc
or
movsb
outsl
aas
and
outsl
loope
mov
xor
out
pop
add
pop
pushf
scas
xchg
fildll
sub
mov
aad
mov
push
xchg
ja
jbe
nop
lds
rcll
popa
loopne
nopl
jae
or
cmpsb
flds
jno
in
test
and
sti
sub
movsl
sbb
sbb
subb
shrb
in
mov
loope
repnz
push
dec
pop
push
mov
cmpl
fimuls
adc
jmp
call
and
xlat
in
inc
int3
js
mov
bound
mov
popf
cltd
mov
sub
cmp
or
sbb
popf
loopne
scas
sbb
cmp
jb
fbld
bound
adc
js
or
mov
sbb
inc
jnp
sub
mov
mov
sbb
idivl
xor
mov
loope
dec
in
sbb
adc
out
rclb
rcrb
lret
cwtl
or
dec
fdivrs
jnp
sub
and
push
and
sahf
adc
mul
adc
and
dec
xorl
xor
jecxz
jne
rolb
add
jnp
movsb
dec
rcl
mov
lcall
enter
loope
std
sbb
xor
hlt
adc
pop
pop
mov
pop
mov
mov
mov
popl
cli
pop
hlt
mov
hlt
mov
add
cli
mov
int3
or
jp
fs
xorl
ds
int
mov
jecxz
push
and
ret
cmovb
pop
push
jg
ja
cmp
jae
lods
rcr
jns
mov
js
push
lcall
push
lods
inc
inc
push
push
cmp
or
sarl
mov
inc
gs
sub
cmpsb
and
and
dec
mov
faddl
sub
adc
into
adc
jl
es
fisubrs
shlb
aad
xor
adc
mov
jb
and
inc
or
shlb
add
scas
dec
fimuls
loopne
rcrb
adc
imul
nop
mov
adc
dec
pop
stc
and
popl
inc
cmp
and
mov
ljmp
das
dec
orb
pop
mov
scas
jecxz
dec
jmp
jnp
stc
jmp
jnp
mov
mov
cmp
ja
dec
loopne
add
stc
rolb
and
dec
sbb
les
fdivrs
xor
mov
or
mov
lahf
ss
push
cli
test
add
ds
mov
sbb
int
jnp
mov
push
sbb
les
popa
dec
mov
dec
inc
cs
fsubrl
adc
lahf
fwait
into
jecxz
lcall
push
insl
sbb
shll
or
jmp
lret
xchg
shll
pushf
sbb
sbb
mov
ljmp
jg
inc
mov
mov
pop
push
hlt
insb
push
shlb
push
pop
sub
dec
lods
popa
mov
es
push
jmp
inc
pop
ljmp
jbe,pt
sbb
add
or
jno
lods
arpl
mov
loopne
movsb
in
sub
mov
test
stc
daa
add
and
mov
inc
sarl
jle
repz
movsl
fdivrl
add
les
pop
and
hlt
pushl
lea
call
mov
cmp
dec
dec
inc
aad
ret
pushf
stc
loop,pn
sub
push
sti
dec
std
out
ja
into
out
mov
aad
jl
ficoms
dec
in
loopne
xchg
mov
mov
adc
xchg
cwtl
arpl
adc
mov
cmp
pushf
rolb
es
pop
jl
xorb
cmpsb
leave
test
loope
or
jge
mov
cmpsl
bound
pop
push
movsb
dec
sahf
es
into
push
cmpsb
sub
dec
push
pop
adc
xor
mov
dec
dec
adc
or
or
repz
and
insb
jbe
sbb
xchg
jno
or
into
sbb
dec
dec
mov
sub
xor
hlt
and
jo
push
fs
les
inc
jbe
sarb
sbb
dec
mov
sub
cmc
push
movsl
imul
xchg
jnp
sub
and
dec
jge
pop
gs
pop
push
mov
pop
or
mov
fisubrs
int3
dec
jo
push
iret
js
pop
sarl
inc
pop
pop
lock
popf
imul
rcrb
dec
pop
cli
movsb
push
and
inc
pop
jle
int3
xchg
pop
adc
int
scas
inc
adc
adc
repz
in
add
inc
hlt
sti
push
mov
mov
jp
out
mov
jl
aad
mov
pushf
ret
fs
xchg
into
int3
adcb
int3
push
jmp
xchg
add
roll
sbb
add
fwait
stos
je
or
and
add
mov
cs
mov
and
jge
add
mov
and
lret
jno
mov
sbb
mov
mov
sub
loope
ds
or
int3
add
dec
jg
add
out
js
mov
sbb
dec
add
test
add
sub
pop
and
lret
jbe
mov
and
mov
insb
mov
push
sbb
xchg
sbb
inc
out
int3
sbb
int3
fwait
aas
cmpsl
ret
les
and
pop
push
adc
inc
pop
mov
xchg
int3
fistl
ret
mov
xor
ja
cli
adc
imul
out
bound
int
stc
adc
sti
pop
xor
test
mov
std
pop
std
push
jmp
mov
leave
xlat
out
imul
insb
mov
popf
ja
mov
daa
adc
mov
cmp
pop
cmp
mov
jnp
pop
je
jnp
out
adc
loope
add
jge
xchg
push
mov
and
jbe
push
cmp
jmp
stc
rolb
or
cmpsl
mov
dec
call
adc
insl
pop
jle
daa
into
lods
ficoms
repz
mov
adc
push
pop
push
test
sbb
xor
ret
setge
push
sbb
cltd
push
xor
dec
popf
cmp
and
test
xlat
xor
addr16
jb,pn
lret
and
sub
pop
jge
leave
mov
mov
dec
mov
fsubs
or
scas
or
add
icebp
stos
adc
adcb
cltd
mov
jecxz
or
sarl
mov
pop
pop
xchg
clc
adc
add
adc
xor
mov
inc
sbb
push
stos
sub
repz
and
mov
jnp
add
stos
pop
aam
imul
sbb
shlb
icebp
xchg
add
lret
inc
mov
lahf
rorl
xlat
push
faddl
aam
add
insb
add
insb
fsts
cld
mov
xchg
repz
aam
mov
addr16
cmp
add
mov
sub
push
and
pop
sbb
aam
mov
inc
nop
pop
jg
fbstp
xchg
loope
lcall
and
shlb
and
xchg
push
mov
add
or
sub
jle
and
push
iret
or
rorl
xchg
xor
jnp
mov
aam
adcl
pop
sub
xor
xor
daa
or
cli
xchg
les
js
imul
xchg
insb
nop
mov
jle
and
adc
sub
lret
insb
daa
std
cmpsb
testl
sahf
mov
js
in
mov
add
and
xor
insl
lcall
adc
ret
bts
test
xor
inc
fnstenv
fadds
popf
call
ss
je
les
ud0
mov
lret
pushf
ss
and
pushf
fldt
icebp
das
mov
neg
sbb
sbb
les
adc
dec
adc
sbb
adc
pop
fistps
sub
mov
jg
inc
dec
stc
add
mov
mov
jnp
adc
loop
cmp
dec
pop
jno
adc
sbb
xchg
js
stc
jbe
sbb
lret
pop
push
fadds
jl
flds
add
add
xor
sbb
inc
fcoms
sbb
lret
mov
mov
mov
sbb
adc
cld
fistpll
sbb
inc
push
insb
bswap
stos
lahf
or
icebp
loope
popf
or
mov
shr
and
ret
nop
insb
adcb
fwait
insl
fdivrl
lret
incb
add
sbb
jl
sbb
adc
dec
int3
pushf
mov
iret
outsl
jmp
dec
loopne
mov
insb
jge
inc
cmp
mov
scas
movsl
nop
imul
dec
movlps
test
icebp
inc
adc
addr16
xchg
call
loope
mov
jbe
ficoms
cld
mov
inc
mov
imull
cmp
lods
pop
cwtl
push
insl
adc
mov
shlb
das
andl
xchg
les
and
xlat
jecxz
lock
dec
aaa
mov
jg
daa
mov
ffreep
fs
mov
push
out
into
push
ja
test
into
inc
jecxz
lcall
cmc
push
loope
and
dec
push
jmp
aaa
push
add
dec
add
sbb
xlat
das
cli
inc
jnp
mov
sub
jo
arpl
rclb
stos
je
test
lods
enter
jno
outsl
cmp
mov
inc
lds
jg
jecxz
popa
fwait
adc
push
ljmp
xor
jae
dec
std
push
iret
cmp
les
push
jae
repz
sbb
pushf
mov
or
ljmp
aam
and
cs
adc
xchg
or
jecxz
mov
int3
scas
pop
xor
pop
dec
jcxz
int3
dec
push
inc
es
movsl
dec
and
movsb
sub
popf
mov
loopew
push
movsb
sbb
insb
rcrl
loope
mov
xchg
jo
mov
fwait
pop
push
sub
push
sbb
int
xchg
mov
push
into
mov
mov
dec
add
mov
subb
loopne
cmp
and
inc
adc
mov
popf
pop
mov
std
aad
push
xchg
push
jp
mov
dec
rcl
inc
cmp
repnz
mov
mov
cwtl
fs
push
pop
adc
mov
sarb
ja
xor
sub
sbb
xchg
sbb
adc
dec
mov
int
outsl
mov
imul
sbb
inc
repz
divl
pop
sbb
fsubp
sbb
les
xor
loopne
clc
push
call
lret
sahf
les
pop
add
push
jg
fsubrp
sbb
adc
fmulp
jnp
xchg
push
stos
jne
psubsw
pop
jl
mov
cli
push
lea
lahf
jp
fdivl
inc
hlt
lcall
push
sbb
and
mov
xor
sbb
out
outsl
imul
cmp
iret
popa
aas
jo
adc
adc
and
test
xchg
mov
pop
adc
or
shrb
xchg
sbb
popf
mov
sbb
or
cld
je
mov
or
dec
add
mov
jno
and
ljmp
shrb
dec
sti
rorb
mov
dec
addr16
test
mov
int
lcall
adc
bswap
xchg
rorb
leave
test
push
lret
movsb
dec
cmp
push
push
call
test
sbb
cmp
es
jle
mov
jge
stos
lcall
cmpsb
mov
mov
push
fdivrl
cltd
arpl
enter
dec
jecxz
cmp
xchg
sbb
sub
pop
movd
pop
cmpl
fisubrl
mov
sub
fisttps
mov
cmc
cld
mov
push
pop
add
lcall
pop
or
insb
dec
jmp
cmp
mov
inc
dec
test
lret
pop
adc
pushf
jp
xor
inc
xchg
and
push
dec
out
adc
push
mov
jecxz
imul
ficomps
pop
xor
push
pop
mov
addr16
aaa
push
shll
into
sbb
adc
sbb
iret
xchg
mov
jecxz
pop
xor
cmp
xor
jl
xorb
and
frstor
sub
cmp
popl
or
pop
pop
test
ja
pop
outsb
lea
xor
sbb
or
mov
je
jmp
out
adc
repnz
out
loopne
xor
pop
push
push
inc
cmpl
dec
mov
xchg
stos
sbb
jb
into
mov
push
xchg
loope
and
stos
rcl
mov
std
sbb
mov
mov
insb
sub
xor
push
mov
jns
and
lret
push
push
sub
and
add
push
cmc
xchg
aaa
addl
sbb
inc
pushf
adc
xor
daa
in
pop
push
andl
cmpsl
jmp
or
stc
inc
xor
stos
inc
nop
imul
cmc
inc
sbb
dec
daa
or
dec
mov
and
aas
int3
adc
aaa
sub
mov
stos
ljmp
and
repz
cmpb
lods
popa
in
popf
in
adc
xchg
jle
lret
add
sbb
mov
and
xlat
or
sahf
cwtl
mov
inc
lret
inc
ret
cmp
dec
in
daa
dec
push
dec
adc
mov
mov
leave
aas
push
pop
pop
push
int3
pop
lret
bound
jnp
pop
sbb
sub
insl
mov
hlt
rcrb
test
sub
dec
adc
dec
mov
mov
bound
mov
loope
mov
mov
shrl
mov
and
cmp
add
hlt
fsubl
lock
aad
sub
and
movswl
add
insl
addr16
adc
dec
pop
add
mov
aas
lret
mov
js,pt
jecxz
cwtl
fs
mov
jg
push
mov
outsl
pop
mov
imul
int
lret
stos
add
jl
jle
adc
mov
inc
js
imul
xor
pop
jns
add
adc
jecxz
iret
ja
xlat
and
insl
xlat
sahf
popa
cmp
lret
sub
lahf
pop
add
jbe
aad
push
sbb
push
push
and
sahf
je
cmp
fdivrs
cmp
mov
sub
xor
sbb
pop
xchg
and
adc
lock
cmp
xchg
lea
jg
filds
aam
loope
add
fidivrs
push
pop
or
pop
push
pop
sub
int
sub
cs
lods
and
jle
lret
pop
push
stos
popf
pop
lahf
sub
pop
sbb
jae
rcrb
into
sbb
or
and
out
mov
test
mov
mov
inc
lea
xor
xlat
and
inc
pushf
fimull
loope,pt
dec
adc
lods
push
jbe
mov
mov
loope
aam
ret
and
js
and
mov
push
movsb
push
cmpsb
jecxz
test
fucomip
inc
pmaxub
rclb
and
fcom
xorl
sbb
push
cmp
lods
adc
push
lret
data16
jecxz
push
push
push
fisttpll
mov
push
outsb
ljmp
repnz
pop
dec
movsb
jae
aaa
mov
adc
sbb
mov
pop
shrb
jecxz
pop
mov
cwtl
cmp
pop
xor
mov
jno
push
enter
cmpsb
or
add
mull
adc
lret
add
aam
or
punpcklbw
cltd
pushf
stc
lods
sub
fcoms
ljmp
inc
out
icebp
cmovns
xor
int3
fwait
test
loop
scas
add
jmp
pushf
jno
insb
adc
sub
jp
ds
inc
sub
arpl
invd
daa
icebp
push
adc
scas
cmp
ret
cmp
ja
jne
insb
mov
and
notb
rorb
sub
ss
ss
ljmp
xor
std
ja
xchg
mov
pop
add
ja
xchg
sub
movsb
xor
icebp
adc
mov
xor
mull
cmp
add
push
bound
js
scas
les
sub
or
fldenv
cmc
repz
enter
sbb
jle
push
push
lods
lcall
or
loop
dec
pop
xchg
sahf
lcall
xchg
leave
sbb
or
xlat
shll
data16
add
repz
outsb
and
dec
out
loop
xor
jno
mov
aaa
push
mov
in
incb
mov
data16
shll
enter
mov
testl
or
cli
fdivrl
xchg
cmp
scas
sbb
jne
jl
mov
add
leave
lret
pop
sbb
ffree
dec
out
int
ljmp
mov
jo
push
dec
scas
fwait
fwait
loopne
adc
rcl
cmp
imul
mov
call
outsl
in
mov
jp
mov
and
cmp
out
outsb
xor
jno
xor
add
mov
das
pop
sbb
mov
xchg
xor
add
in
mov
inc
xchg
fcom
push
add
xchg
dec
sbb
pop
lods
jns
cs
push
jno
fiadds
call
movsb
adc
push
jnp
mov
sub
das
fcoms
jns
cltd
getsec
add
cmp
cmp
bound
lcall
fcoml
ret
adc
xlat
xor
sbb
push
scas
mov
outsb
mov
ret
and
stos
rcll
cmp
and
xchg
pop
sbb
mov
pop
inc
loope
xchg
jl
daa
adc
or
rep
aam
loop
and
ficoms
insb
jp
cmp
sub
mov
adc
clc
inc
divl
fdivr
sub
scas
into
sbb
negb
leave
jge
in
sbb
fisubs
in
sub
xor
jo
sbb
push
loope
les
jo
adc
cwtl
or
imul
ret
mov
or
fdivr
and
push
adc
cld
mov
les
xchg
sub
adc
shrb
mov
popf
stos
lds
clc
scas
cmp
lock
lret
mov
movsb
jmp
jl
mull
mov
sbb
dec
dec
dec
push
inc
sub
xlat
lahf
pop
mov
mov
push
dec
fwait
lret
pop
iret
push
pop
sbb
xchg
add
mov
lea
stc
push
test
lahf
rcl
sbb
imul
mov
in
xchg
out
inc
jo
sbb
out
jae
and
add
adc
fistpl
or
pop
scas
stos
sbb
dec
fwait
sub
insb
push
outsb
xchg
sbb
out
xor
xchg
xchg
sbb
jle
insb
outsl
ret
stos
sub
push
or
pop
add
push
int
add
cwtl
inc
int3
lods
sub
loopne
into
push
insl
or
outsl
mov
jns
outsl
pushf
xchg
or
sarb
mov
mov
lcall
rcll
addl
jle
out
adc
es
mov
xchg
inc
and
inc
xchg
call
adc
adc
dec
mov
sbb
push
and
sbb
dec
cmp
fdivl
lahf
addr16
addr16
sbb
adc
call
sub
sahf
mov
jne
ficompl
push
inc
out
movsb
fwait
jne
push
ljmp
dec
cmp
je
jo
dec
adc
sbb
xor
sbb
ret
lock
mov
dec
mov
imul
xchg
scas
sbb
push
push
fdivrs
sbb
lahf
pop
test
add
add
push
shrb
xchg
mov
cmp
mov
xchg
adc
sbb
pusha
or
outsb
out
xchg
pop
sbb
sbb
inc
insb
dec
mov
lods
pop
push
mov
or
mov
fmulp
dec
testb
or
aad
pop
push
sub
inc
ja
mov
push
cmp
xor
adc
push
pop
sub
push
loope
fisubs
cld
mov
dec
into
mov
js
pop
popa
or
ljmp
inc
and
lods
and
jns
lods
call
pop
adc
out
xchg
add
mov
mov
push
les
fistpl
mov
rcrl
sub
cmp
add
pop
mov
push
cwtl
daa
movsl
pusha
call
xor
pop
sbb
js
jno
lods
jecxz
ret
addb
lahf
test
cwtl
inc
cmpsb
pop
jo
rcll
dec
cmp
add
xchg
lea
inc
push
aad
and
out
andl
in
in
insb
aam
movsl
sub
jecxz
repz
push
jno
jle
mov
lahf
int3
cmp
sub
push
mov
cmp
shl
ja
std
nop
dec
cmp
repnz
popa
dec
sub
incb
sbb
sub
test
pop
jp
movsb
push
cmpsl
dec
cmpsl
jo
mov
sbb
stos
mov
sbb
push
mov
jbe
or
mov
adc
inc
cmp
sbb
push
ss
pop
loope
outsl
and
cld
aam
xchg
fimuls
or
aam
cmp
lret
sbb
adc
sahf
fs
sub
fsubl
repnz
jecxz
pushf
mov
or
repz
sub
sbb
les
bound
dec
xchg
inc
lahf
sbb
cli
mov
xchg
cli
and
mov
xlat
stos
sbb
or
dec
stc
mov
fs
pushf
in
add
pop
loopne
jo
shl
or
test
mov
push
xchg
mov
add
push
pushf
or
fisttps
mov
popa
cli
adc
jno
xchg
and
sub
nop
xor
cwtl
sub
push
sbb
jecxz
or
sti
xchg
jge
adcb
rorl
jmp
cli
cmpl
add
jg
fiadds
mov
jae
lods
cmp
or
ficompl
pop
xchg
jle
lahf
jno
xchg
push
mov
mov
jno
inc
pushf
pop
ss
je
lret
sahf
cwtl
divb
loope
addb
mov
dec
mov
lods
in
inc
out
adc
test
loopne
pusha
cld
sti
cmp
pmulhw
int
fadd
inc
fsubs
popf
push
aas
mov
fidivs
scas
sbb
and
add
push
pop
mov
dec
into
mov
push
jp
pop
add
popa
xor
into
in
dec
in
xor
jl
mov
test
out
sbb
fwait
xchg
mov
fldl
add
jmp
pop
imul
je
xor
sbb
mov
jae
dec
ss
gs
cmpsl
adc
out
dec
and
sub
xchg
fs
mov
shl
cmp
fmuls
daa
sub
rcll
inc
imul
scas
ficoms
inc
and
cmp
and
xchg
sbb
sub
mov
jno
pusha
out
loope
mov
xor
fwait
dec
dec
mov
pop
sbb
push
stos
lcall
arpl
dec
faddl
lcall
bound
shrl
aaa
push
aaa
ds
cmp
push
adc
test
push
pop
fiadds
cmp
out
push
push
mov
pop
pop
ds
mov
jle
dec
xor
mov
jg
jns
xor
sbb
dec
fs
or
push
xor
jl
insb
adc
roll
mov
iret
sub
lea
fsincos
add
xchg
xor
push
jmp
mov
adc
cmp
test
lods
and
jno
adc
ret
inc
jp
insb
mov
ds
das
xor
insb
push
jge
mov
cmp
test
add
scas
push
dec
movsl
mov
bound
adc
in
xlat
jg
test
stc
xchg
movzbl
adc
adc
add
out
pop
sub
lahf
add
xchg
fwait
rcll
xor
es
fs
sbb
inc
jmpw
and
orl
push
aaa
mov
inc
or
dec
push
cmp
insb
scas
add
push
aaa
in
mov
decl
ja
loop
adc
into
fabs
imul
jmp
lock
mov
out
loopne
pop
mov
mov
outsb
rcrl
sahf
mov
lods
jp
out
and
cmp
cmpsb
add
jne
xor
sbb
in
and
sbb
rorl
and
aam
pop
adc
cmp
add
out
sbb
push
push
out
cmc
scas
mov
sahf
mov
test
adc
mov
out
xlat
ud2
movsb
inc
sarb
enter
imul
divb
and
xchg
add
push
pop
xchg
adc
mov
push
or
rsqrtps
mov
jg
mov
adc
les
ljmp
imul
mov
add
pushf
adc
mov
shr
cmp
test
fs
stos
cmp
push
scas
sub
adcb
xchg
stos
sub
std
xchg
sbb
sbb
jle
push
sub
loopne
negb
xchg
rcr
cmp
adc
mov
jae
movsl
inc
sbb
xchg
mov
in
pop
int3
vmovntdq
cs
inc
pop
mov
into
mov
hlt
mov
jno
outsl
arpl
sbb
dec
int3
popa
lods
movsl
jo
lods
ljmp
and
daa
rolb
scas
stos
test
pop
pop
into
loope
movsl
xchg
mov
xchg
insl
stc
push
sub
xor
mov
je
andb
sbb
cmp
aaa
ss
xor
or
outsl
lock
addr16
fucomi
sbb
inc
cmp
int3
pop
or
outsl
mov
mov
xor
jle
daa
orb
mov
or
ljmp
lahf
dec
stc
mov
dec
dec
out
xor
xor
daa
int
inc
cmc
loope
mov
or
daa
dec
leave
aam
mov
insb
roll
or
mov
mov
xor
inc
cmc
adc
push
negb
outsb
or
pop
aaa
cmpsb
lock
das
sbb
test
sbb
mov
adc
cmp
xlat
aam
mov
cmp
loop
xlat
xrelease
push
pushf
pop
sbb
mov
xor
xlat
mov
idivl
stos
cmpsl
push
sub
dec
add
cmp
js
je
push
pop
dec
mov
leave
fsubs
mov
add
popa
adc
jmp
sub
mov
cmp
fstl
andl
jne
daa
pop
cs
mov
sbb
sub
mov
ljmp
inc
rcr
add
inc
pop
lahf
adc
or
mov
mov
jecxz
bound
mov
sub
jo
notl
cmpsl
cmp
mov
lcall
add
ret
insl
hlt
scas
sub
lods
pop
push
add
ljmp
xor
mov
lock
pop
lret
fmul
pop
push
adc
sub
daa
fmuls
sub
mov
sub
push
pop
std
add
ss
xor
or
mov
loope
mov
sysexit
sarb
pop
or
adc
mov
adc
pop
or
leave
cmp
into
in
cwtl
mov
xchg
aad
cli
bound
insl
bswap
clc
shlb
fsubrl
inc
and
pop
cmp
arpl
inc
mov
or
repz
shll
sub
or
fidivs
gs
mov
pop
push
scas
shrl
ret
pcmpeqw
mov
sahf
mov
jnp
mov
lret
jle
mov
jle
cmp
pop
loope
fadd
sub
add
xchg
repnz
test
mov
ficoml
popl
jnp
sub
mov
push
cmp
xor
cmp
je
jp
or
adc
sub
adc
mov
xlat
dec
xrelease
mov
pop
xor
mov
inc
hlt
or
mov
xchg
ud0
cmp
push
push
add
push
test
add
jg
cli
aad
movsl
ljmp
xchg
push
and
stc
pop
leave
insl
lods
or
imul
dec
jge
mov
jmp
je
sub
mov
pop
jge
outsb
xchg
mov
data16
jmp
and
dec
popf
cs
lods
pop
test
xor
cmp
int
shll
mov
mov
insb
pop
push
and
scas
shrl
add
fimuls
mov
loope
and
mov
sub
xchg
push
pop
jecxz
out
sub
adc
add
xchg
mov
push
jb
vmwrite
insb
push
stos
mov
adc
das
adc
pop
jp
push
int3
inc
decl
push
xchg
cmp
jne
das
and
pop
mov
mov
addr16
push
dec
pop
cmp
outsl
dec
das
movsb
sti
xchg
loop
and
jp
mov
or
cmc
movb
add
stc
aas
sti
sub
sub
lea
and
into
push
scas
xchg
addr16
mov
test
push
adc
xchg
popa
mov
adc
adc
add
xchg
push
fwait
xchg
call
scas
ds
pop
sub
gs
jnp
pop
ss
fs
cld
xlat
xor
xchg
push
xchg
mov
aaa
push
movsb
sbb
adc
adc
jno
xchg
ljmp
js
loopne
or
mov
sbb
int3
pop
xor
jmp
pop
outsl
mov
dec
lret
jmp
and
sbb
sbb
xor
xchg
cltd
jmp
or
call
cld
aaa
mov
and
dec
sub
jecxz
rolb
push
jge
test
cmp
push
pushl
popl
mov
sarl
dec
loope
dec
mov
imul
sub
in
xchg
ficomps
lock
sbb
adc
gs
fisttpl
imul
in
inc
std
mov
cmpsb
es
jmp
pop
and
adc
das
lahf
into
add
les
stc
mov
mov
divl
andb
inc
sub
mov
insb
out
jmp
in
loop
aaa
repnz
mov
adcb
and
dec
push
add
cmp
ret
mov
or
jmp
fstpl
pushf
push
into
or
pop
out
jae
sbb
cmpsl
or
das
lds
jo
ret
mov
xor
pop
pop
movsb
popl
sbb
add
xchg
jle
jle
adc
mov
sbb
mov
cmp
das
sbb
repz
pop
fwait
sar
cmp
pop
sub
sub
xchg
rcll
sbb
and
fwait
mov
imul
xchg
movsb
cmp
pushf
loope
add
ret
adc
add
xchg
movl
dec
jl
mov
out
sbb
mov
hlt
xlat
fwait
mov
adc
dec
icebp
xchg
jp
xor
loope
jb
in
sti
sub
add
repz
ja
aad
xchg
cli
sbb
cmp
fnstsw
jmp
push
jl
adc
sbb
in
hlt
pusha
pop
ja
je
jle
push
mov
test
mov
jbe
sub
cmpsl
pop
cli
out
push
sbb
and
mov
shll
mov
pop
mov
lods
mov
add
jl
adc
sbb
imul
cld
mov
dec
aad
adc
ljmp
sbb
outsl
or
jns
repz
xchg
add
repz
or
lahf
fwait
movsb
xor
sti
inc
or
test
mull
and
xchg
lahf
or
imul
xor
jae
repz
push
pop
dec
sbb
push
cmpsb
fisttps
das
daa
aad
pop
pop
push
or
lahf
mov
xor
xchg
push
test
mov
push
dec
mov
stc
push
outsb
mov
mov
in
jmp
loope
xor
lcall
dec
adc
pop
rolb
dec
mov
nop
inc
and
xchg
stc
xchg
pop
das
xchg
or
dec
addr16
mov
dec
les
mov
sahf
les
cmp
mov
scas
ljmp
cld
sbb
fnstenv
flds
mov
leave
jl
pop
mov
push
adc
or
pop
adc
mov
inc
add
loopne
adcl
aam
jmp
xchg
xchg
sbb
dec
call
sahf
pop
test
adc
out
mov
daa
sbb
test
sbb
dec
mov
xor
test
les
mov
insb
pop
cltd
dec
popf
xchg
enter
dec
and
push
jb
mov
sub
fs
jmp
sub
cmp
aam
inc
test
pusha
test
add
cltd
jae
xchg
jne
ret
sti
xchg
stc
mov
and
sbb
int
adc
mov
lock
jl
lret
daa
stos
orb
sahf
test
aam
sub
jae
push
sbb
add
dec
and
add
and
push
inc
jae
ja
jl
jnp
sahf
or
pop
sub
cmp
inc
cwtl
cld
adc
jb
push
fsub
inc
je
sbb
push
fcoml
subl
aam
dec
scas
dec
fwait
int3
sbb
sbb
mov
pop
lahf
dec
arpl
mov
ret
outsl
fstpt
lret
xchg
pop
xor
xchg
mov
sbb
sbb
cli
pop
cs
fwait
mov
fdivr
mov
es
lret
roll
insl
ja
sub
xchg
or
dec
sbb
pop
movsb
shlb
pop
ljmp
dec
fcompl
or
inc
jbe
imul
fs
sbb
pop
aad
pop
mov
dec
inc
shrb
sbb
ljmp
mov
mov
jns
ficomps
pop
jge
out
pop
lahf
adc
cmpsb
bswap
inc
stc
test
pushf
jnp
xchg
sbb
pop
ds
into
imul
leave
stc
aas
js
adc
cs
addb
je
adc
movsb
sahf
test
xchg
clc
push
mov
bound
dec
push
or
cld
pop
lahf
push
pop
push
loope
xor
jae
push
or
pusha
pop
or
jle
or
or
mov
xor
fwait
adc
adc
adc
or
mov
rcrb
cs
popf
cmp
std
sbb
adc
jmp
adc
enter
jp
push
mov
sahf
push
scas
cmp
data16
sub
gs
or
addr16
shrl
inc
push
js
call
mov
xchg
xchg
pop
in
int3
fwait
xlat
aad
mov
ret
sub
icebp
insb
stc
xchg
inc
ljmp
lods
jnp
clc
add
rorb
mov
jmp
xchg
mov
push
xchg
sahf
ja
into
or
adc
pop
into
jle
mov
cmpsb
daa
mov
cmovle
dec
in
and
dec
add
add
pop
pushf
push
loope
adc
push
lock
mov
imul
inc
rorb
mov
fmull
ret
mov
lods
inc
or
scas
mov
jbe
out
cli
add
rolb
push
arpl
testl
sbb
pushf
outsl
mov
js
pop
push
dec
inc
lahf
sub
or
cmp
mov
sbbb
inc
das
sub
sub
or
fimull
loope
mov
sarb
push
cmp
leave
adc
daa
dec
cmp
pop
push
adc
push
push
insl
cli
in
or
repz
aaa
push
xrelease
add
fs
jmp
inc
lcall
adc
mov
xor
sub
mov
lret
xchg
dec
fwait
xchg
int3
fwait
pop
xchg
or
fiaddl
jle
jmp
jb
inc
cltd
xor
push
jecxz
test
mov
iret
leave
pop
push
push
nop
inc
ja
in
dec
pop
xlat
loope
sub
fimuls
dec
rcrb
hlt
mov
or
add
int3
stos
adc
pmullw
idivb
shrb
hlt
dec
bnd
sbb
sub
enter
jl
push
push
or
mov
mov
aas
mov
test
jp
add
repnz
jnp
push
inc
cmp
xor
xchg
jb
insb
scas
push
adc
popl
push
testl
lcall
mov
into
aas
or
or
jmp
jmp
dec
sub
lock
mov
mov
imul
adc
mov
mov
imul
test
rol
call
dec
cmc
ds
jge
mov
mov
adc
push
fcomps
mov
and
int
pop
push
pop
sbb
push
in
sub
push
leave
outsb
imul
fisubrs
jl
test
mov
insb
or
mov
in
cmpsb
sbb
or
mov
dec
mov
sbb
lods
ja,pt
or
cld
sbb
call
mov
xchg
dec
adc
mov
scas
shll
jo
xor
adc
cmovl
or
paddq
mov
ja
outsb
push
inc
arpl
gs
xchg
add
xor
adc
pop
pushf
jns
adc
adc
inc
mov
add
pop
jl
outsb
or
adc
sahf
push
mov
sbb
mov
sub
clc
popf
addr16
jae,pt
sbb
aam
sbb
cmp
xor
and
sarl
mov
mov
iret
adc
dec
mov
jnp
stc
inc
dec
bound
addr16
pop
popa
shrl
cld
push
scas
sbb
out
sahf
pop
ret
in
push
lar
adcl
dec
insb
ljmp
cmp
cmp
adc
push
gs
getsec
and
mov
inc
sbb
outsb
push
pop
inc
xchg
mov
cld
adc
pop
inc
stc
push
cmpsl
adc
cmp
pop
add
add
bound
mov
sub
dec
push
test
test
adc
addr16
popa
pop
xchg
or
mov
and
jmp
sbb
and
mov
jo
fwait
push
inc
fdivrs
addr16
leave
jecxz
lcall
add
dec
repz
and
cli
jecxz
sbb
adc
fwait
inc
daa
adc
mov
inc
jns
or
and
fmul
cmp
push
int
jb
fists
inc
sahf
add
mov
cmp
sti
sub
or
in
pop
inc
cmp
insb
mov
jl
cmp
or
pop
and
daa
pusha
inc
movb
or
push
mov
hlt
repz
adc
pop
jbe
jl
fmull
repnz
stos
popa
pop
cwtl
arpl
ret
insl
push
jecxz
fisttpll
mov
loop
sbb
push
push
pop
sub
loope
inc
mov
xchg
and
mov
ja
lret
cli
jecxz
cmp
push
mov
push
jns
nop
cmc
push
loop
pop
clc
test
jg
add
xchg
icebp
xorl
lcall
test
xor
loope
lahf
aad
nop
push
push
sub
mov
pushf
push
dec
aad
dec
gs
push
loop
mov
enter
jno
shrl
inc
imul
pop
cli
stos
outsb
int
or
nop
sbbl
cltd
push
popf
or
insl
movaps
mov
sbbb
lcall
cmp
out
ljmp
or
adc
push
cmp
or
aad
jbe
outsb
or
mull
mov
loope
ror
ja
das
scas
jb
cwtl
jne
add
decl
cwtl
cli
jmp
ss
cmpsl
pop
mov
and
leave
rdtsc
pop
scas
sbbb
daa
mov
ja
movsl
fimull
sub
mov
ljmp
dec
into
lods
int3
xor
sti
sbb
mov
dec
cmp
aaa
fisttps
hlt
hlt
adc
jecxz
sbb
push
lea
in
sbb
sti
adc
fidivrs
adc
jnp
mov
dec
fcmovbe
shlb
pushf
adcb
loop
adc
jae
fcmovu
or
sbb
inc
dec
jb
dec
aam
not
insl
pop
xlat
aaa
movsb
mov
sbb
daa
or
fmuls
addr16
sub
cmp
test
fidivs
stos
aas
jp
dec
lahf
push
sbb
movsb
or
stos
xchg
inc
insb
sub
into
mov
rcll
mov
push
jne
popf
enter
dec
jmp
sbb
jp
dec
dec
pop
lahf
sahf
add
or
inc
push
mov
push
lds
lahf
push
daa
stos
cmp
jns
cmp
push
adc
jmp
pop
pop
aas
jp
insb
outsl
cs
in
ss
mov
imul
sbb
or
and
mov
jb
cmpsl
dec
mov
sarb
push
and
jmp
cmp
vmread
nop
xlat
bound
ficoml
adc
adc
inc
cmp
neg
pop
mov
scas
mov
das
lods
mov
mov
insl
mov
ljmp
aaa
ret
pop
sbb
inc
lret
mov
mov
dec
stc
or
out
jl
or
mov
popf
jle
pushf
aaa
stos
jnp
dec
and
lret
or
mov
mov
js
mov
mov
xor
in
xor
mov
enter
addb
sub
cmp
pushf
mov
push
push
jmp
out
push
lahf
or
fimull
lahf
jo
outsl
insb
out
push
sub
pop
lret
mov
icebp
pop
aaa
insb
fcmovbe
insl
mov
jge
and
sub
fsubp
nop
daa
test
pushf
jg
xor
es
add
mov
push
sub
xchg
fisubrs
arpl
inc
sub
jecxz
push
rcrl
aaa
adc
and
cwtl
mov
stos
push
scas
push
mov
loop
fcmove
hlt
bound
loopne
shrb
and
or
adc
imul
mov
scas
loope
sub
jge
inc
sbb
data16
inc
sub
fidivrs
mov
and
popf
inc
sub
in
cmp
popf
cltd
hlt
fsubrp
or
addr16
push
fdivrs
mov
jo
fwait
jns
inc
adc
and
dec
sbb
outsb
pushf
ds
das
sbb
int3
mov
cmp
pop
fwait
xchg
ret
sahf
lahf
sbb
idiv
arpl
push
xor
push
mov
test
inc
cmpb
rolb
lahf
pop
inc
cmp
aas
rcr
pop
push
fbstp
pop
xchg
daa
int
dec
mov
add
stos
ljmp
xor
pop
cli
sbb
xchg
fcomps
add
inc
outsb
mov
stos
lods
push
fisubrs
mov
lret
or
imul
inc
mov
xchg
mov
mov
and
mov
repz
lds
push
subb
inc
mov
cmpsl
popf
pop
add
cmpsb
js
pop
popf
and
cmp
adc
stos
fcoml
inc
fadds
adc
mov
stc
into
cmp
mov
dec
xor
inc
adc
sub
loope
inc
popf
cmpsl
xor
xchg
je
mov
dec
push
fldl
or
or
adc
sbbl
add
mov
add
pop
out
test
sar
imul
push
adc
mov
dec
mov
sti
stc
ljmp
adc
fs
aas
dec
aad
xor
js
dec
mov
mov
dec
dec
popa
or
lret
dec
lods
sub
adc
shlb
push
lahf
xorl
mov
dec
or
je
adc
adc
lea
and
sahf
shlb
cltd
adc
les
add
sbb
adc
adc
or
loope
outsb
dec
movsb
int
cwtl
loope
pop
rcr
aam
outsl
adc
int
xchg
lcall
ja
lea
lret
dec
pop
mov
mov
pop
inc
clc
or
cmpsb
test
sub
inc
ljmp
into
scas
sbb
movsb
arpl
pop
push
call
in
std
das
cli
das
mov
fcoml
fbld
pop
cltd
mov
inc
pop
lcall
sub
xchg
jge
das
mov
mov
xor
lods
scas
popf
loope
je
mov
add
jle
hlt
and
shll
fwait
add
pop
sbb
sub
test
in
push
cmc
cmpsl
and
nop
cmp
sub
mov
mov
or
lods
pop
cmp
xor
add
lea
or
adc
leave
xchg
and
lods
popa
or
mov
cmc
lret
icebp
lds
es
das
out
pusha
fisubs
fidivrl
dec
mov
scas
jb
sbb
dec
sub
lret
xor
repnz
leave
push
or
packuswb
imul
mov
pop
in
lds
push
xor
int
adc
dec
push
in
pushl
xor
sbb
adc
insl
pop
sbb
add
inc
jmp
xor
pusha
dec
push
sub
or
adc
pushf
fadd
jg
outsl
adc
pop
dec
sti
mov
sbb
addr16
jg
jo
popf
adc
adc
in
out
das
and
push
push
jb
mov
add
xchg
rorl
iret
test
jle
test
mov
or
inc
dec
sbb
sbb
fisttpl
faddl
mov
ret
dec
out
or
andb
pop
outsl
xchg
in
xorl
sbb
test
stos
stos
pop
add
sbb
push
push
call
fsubs
lea
fcmovbe
insb
je
add
dec
popa
nop
mov
daa
push
push
arpl
adc
inc
pop
mov
dec
rcrl
adc
jae
inc
and
jecxz
mov
push
cmpl
into
int
rcll
sub
sub
das
xor
mov
aam
fdivl
mov
test
or
ds
das
fistl
fsubl
daa
pusha
adc
insb
addl
jae
call
stos
cs
pop
loopne
mov
or
sbb
cwtl
cmp
sbb
pop
adc
dec
fstpl
fisubrl
dec
jmp
add
xchg
dec
lods
jmp
cli
mov
jo
stos
add
push
mov
add
pop
add
leave
xchg
arpl
pop
mov
mov
mov
or
imul
movsb
dec
inc
xchg
rcr
inc
aam
repz
fimull
pop
push
xor
mov
push
xor
fldt
call
dec
push
bound
clc
pop
ret
push
jmp
xor
lcall
mov
out
outsl
or
sahf
sub
insl
out
and
mov
pop
ror
adc
out
inc
mov
sub
dec
sub
fdivl
push
add
stc
out
addb
cwtl
aad
gs
adc
jecxz
dec
cli
inc
and
push
imul
and
icebp
pop
mov
inc
push
sub
jle
cs
lahf
fsub
mov
mov
nop
mov
cmpsl
pop
xchg
fs
cmpsb
filds
push
adc
or
mov
sub
das
xchg
inc
adc
or
lret
push
inc
dec
in
pop
cltd
add
repnz
cmpb
dec
inc
aam
dec
jno
add
sbb
and
jno
inc
push
das
mov
push
imulb
pop
xchg
and
cltd
mov
data16
sub
or
notb
add
movsb
sbb
fsubrl
pushf
adc
dec
fwait
repz
stc
xlat
add
xor
lods
lcall
push
xlat
in
add
mov
lret
adc
les
mov
xchg
jbe
mov
push
jno
fmul
push
adc
dec
insb
lds
xchg
je
push
cmp
lret
cmp
xor
addr16
push
imul
pop
mov
adc
popa
shlb
cmp
mov
and
rolb
xchg
jno
hlt
mov
inc
inc
or
cli
dec
movsb
stc
pusha
sbb
mov
pop
and
fiaddl
add
mov
loopne
pop
ljmp
or
sbb
jecxz
mov
int
mov
out
loopne
jbe
cs
fdivrl
stc
jle
les
lcall
mov
xor
and
lods
iret
fimull
insb
add
fistps
mov
lea
sbb
gs
sbb
ljmp
dec
loope
sbb
or
or
lret
pop
xchg
sbb
adc
rcrb
push
sub
shlb
push
sub
stos
pop
push
pop
test
incl
mov
pop
cmp
sub
push
int
lea
aaa
roll
bsr
mov
pusha
jmp
pop
adcb
dec
adc
cltd
jae
jae
rcll
imul
les
in
mov
mov
cmp
push
ja
push
rclb
dec
push
add
cmp
or
movsl
mov
unpcklps
mov
sbb
cmpsb
lahf
mov
les
inc
cmpsb
in
repz
js
enter
sub
jmp
scas
xabort
push
fsubrs
jo
or
popa
xor
ret
push
push
lea
add
or
outsb
or
xchg
sbb
push
les
aam
mov
sahf
in
mov
adc
adc
fisubrl
and
ljmp
fwait
or
loope
ljmp
push
popf
pop
cmp
inc
addr16
mov
or
xlat
into
sbb
fnstcw
push
xchg
fstps
leave
and
xchg
pop
stos
je
js
xchg
gs
sub
mov
dec
pop
jns
push
lret
mov
dec
mov
cmp
xchg
or
fwait
out
xchg
clc
xor
insb
mov
je
mov
and
sbb
outsb
pusha
sub
sub
out
dec
scas
rorl
jecxz
pop
pop
mov
aam
cltd
insl
adc
inc
push
fmul
test
mov
ljmp
bound
lcall
sbb
hlt
or
xchg
daa
push
push
sbb
jmp
addr16
cli
and
dec
sbb
sbb
cmpsb
mov
test
mov
push
inc
cltd
in
push
cwtl
ljmp
xchg
add
pop
cmp
cmp
dec
mov
pop
jl
sub
stos
pop
inc
rcrb
ss
adc
stos
je
and
adc
fbld
mov
mov
cld
adc
cmp
sub
pop
jp
add
aam
push
adc
dec
adc
sti
sahf
cli
jnp
sub
mov
out
decl
dec
push
jmp
pop
or
fidivs
addr16
icebp
cmc
or
add
mov
test
jl
repnz
sbb
sub
add
and
ret
mov
mov
push
les
loope
std
adc
inc
sbb
int
mov
stos
ja
push
sub
loope
mov
rcrl
push
ja
int3
dec
jg
xchg
sub
pop
outsl
in
cs
jo
and
pusha
pop
fmull
push
das
or
pop
xchg
inc
cmp
insb
or
or
fdiv
leave
out
push
dec
dec
lods
or
xor
or
sbb
dec
leave
xlat
jmp
sub
addr16
sub
mov
mov
adc
and
in
ljmp
movsb
out
aam
lret
mov
pop
les
inc
mov
or
jmp
mov
sbb
and
pop
jecxz
shrb
mov
mov
bound
push
xchg
movsb
mov
cltd
negl
dec
decb
movsb
xchg
outsl
repz
cld
dec
imul
mov
mov
sahf
adc
pop
lahf
fldcw
xchg
leave
outsl
ss
js,pn
pop
ss
cmp
ret
push
ds
mov
inc
sar
les
cmc
pop
nop
dec
or
sub
out
cmp
pop
sbb
mov
pushf
mov
cmp
adc
mov
testl
fldt
jno
pop
sbb
pop
fcoml
push
adc
pop
and
out
push
js
sub
test
jg
pop
imul
cld
xchg
ficompl
xchg
or
dec
int
cmp
lods
jge
dec
movups
in
icebp
dec
dec
pop
fwait
or
pop
ret
xchg
out
or
fwait
or
mov
xor
or
inc
jne
fs
pop
fimuls
push
cmpsb
fs
inc
xchg
faddl
adc
lods
test
sbb
add
ret
pushf
ror
cld
dec
cmp
in
pushf
ljmp
jecxz
arpl
lods
rcl
sub
dec
adc
jl
xchg
push
mov
and
and
push
pavgw
adc
xchg
and
out
dec
jb
mov
movsb
hlt
arpl
and
xchg
adc
mov
pop
sbb
lods
xor
or
pop
hlt
data16
call
lahf
pop
push
in
pop
mov
repz
and
clc
pop
loop
inc
bound
aad
lods
sbb
mov
and
add
popf
ret
fs
mov
fsubrp
xchg
or
and
insb
sbb
repz
outsl
xchg
in
rcrl
insl
push
sbb
inc
pop
icebp
sbb
xchg
sbb
or
xchg
cmp
xchg
es
xchg
int3
jl
sbb
cmp
mov
xlat
mov
leave
push
fimull
popa
mov
mov
fs
dec
mov
mov
sbb
out
sbb
add
dec
xchg
repz
or
cmpb
ds
fsubrl
or
or
sbb
pop
xchg
cmpsl
inc
push
sub
and
stos
mov
xorb
pop
dec
test
aad
cmc
add
les
dec
aad
and
popf
sbb
insb
lds
mov
push
test
xchg
mov
xlat
fwait
loopne
mov
or
pop
scas
xsave
sbb
pop
mov
sti
sub
add
aam
insl
pop
adc
pop
hlt
mov
mov
inc
mov
mov
dec
xchg
outsb
pop
inc
pusha
cld
sahf
maxps
jecxz
and
push
ja
imul
inc
cs
cltd
insl
test
mov
sbb
add
rcrb
mov
aam
test
push
adc
rcrb
pop
ficompl
les
insb
clc
adc
std
ret
cmpsl
insb
jp
mov
inc
aam
je
sbb
xchg
fwait
and
lret
fnstsw
imul
jns
push
std
add
adc
jge
mov
cld
sub
jo
fdivrs
ja
mov
testl
ret
mov
and
call
add
mov
mov
sub
cli
jns
testl
into
jnp
xchg
aam
ljmp
notb
mov
bnd
dec
cmp
sbb
mov
xor
pop
pop
sahf
mov
inc
lahf
lret
xchg
inc
add
shll
sbb
add
lret
xchg
jp
sbb
mov
stc
test
pop
outsl
mov
mov
fsubrl
sub
add
mov
sub
dec
data16
je
insb
pop
iret
clc
dec
push
adc
lcall
adc
jl
sbb
std
iret
insb
cmp
dec
loope
and
xchg
es
push
cmp
pusha
mov
sub
sub
push
jmp
push
pushf
sbb
inc
add
jns
jnp
in
mov
test
push
fwait
mov
adc
mov
or
or
fldl
movsb
xchg
push
ficomps
cmpsl
imul
mov
inc
call
dec
insl
imul
xor
mov
xchg
fwait
out
lcall
test
mov
adc
inc
in
aam
repz
in
cmp
insl
mov
jecxz
lahf
sahf
hlt
xchg
xchg
shll
sbb
fadds
insl
sub
push
leave
addr16
neg
pop
lahf
push
mov
adc
or
les
jb
jne
cs
jne
ljmp
aaa
iret
dec
loop
mov
pushf
popf
jbe
ljmp
mov
rclb
sahf
ss
stos
push
add
jno
ljmp
jne
popf
leave
adc
aad
mov
mov
pop
push
adc
pop
jb
aaa
cmc
test
and
sahf
lds
scas
or
into
mov
insb
inc
movsb
inc
inc
and
rcr
stos
push
lods
test
rorb
test
mov
push
ljmp
repnz
inc
push
call
pop
bound
popa
jmp
push
cmp
daa
pop
test
sbb
push
push
add
daa
pop
sub
and
mov
push
call
fmul
cmp
lcall
pop
cs
push
lds
lods
les
add
leave
loopne
fdivrl
jo
test
fdivr
sbb
mov
das
push
dec
sub
sub
cmp
mov
adc
ds
inc
adc
pop
add
loope
cmpsl
outsb
mov
pop
mov
shll
rorb
adc
jecxz
int3
fs
test
sbb
dec
je
jnp
fdiv
xchg
push
pop
pop
idivl
adc
shl
add
rclb
int3
bound
dec
addr16
das
push
mov
push
sahf
mov
and
adc
inc
cmovle
cwtl
sbb
cmp
xor
ds
push
sub
fs
fwait
xor
xor
sub
or
insl
fisttps
insb
int
dec
outsb
imul
out
fwait
xchg
pop
cmp
jecxz
nop
mov
mov
aas
hlt
adc
addr16
les
jno
aaa
fwait
jl
push
xchg
or
xchg
mov
xchg
push
adc
mov
lock
call
incb
ljmp
fisubs
dec
sbbl
loope
insl
push
nop
mov
dec
andl
shlb
imul
add
pop
push
repz
push
fwait
insb
push
adc
sub
repnz
xor
icebp
sub
test
sub
push
cmp
add
pop
jmp
or
xor
mov
add
push
or
and
and
sbb
push
inc
pop
arpl
call
adc
xor
add
mov
aas
lea
aaa
sahf
sbb
adc
in
jno
push
test
mov
lahf
popl
push
jge
sub
fs
and
pop
or
mov
popf
loopne
pop
and
je
cmpsl
fimuls
loop
sub
cmpsl
and
push
shrb
jecxz
xchg
sbb
fwait
jmp
adc
testb
in
dec
inc
pop
loope
adc
fbstp
xchg
sbb
inc
cs
into
in
rcr
fnsave
aam
pop
xlat
insl
movsb
lea
movb
ss
fmull
mov
into
aam
ss
into
add
mov
pop
mov
fcompl
mov
mov
test
loope
sub
fidivrs
xchg
imul
sbb
push
xchg
stos
xchg
cs
mov
gs
pusha
push
cmovl
mov
aam
sub
mov
js
scas
call
mov
shrl
mov
sbb
push
push
push
sbb
adc
rcrl
icebp
dec
push
push
pushf
gs
fildl
mov
mov
lcall
orb
pop
aam
ja
add
xor
es
cwtl
call
xchg
mov
sbb
sar
cli
add
mov
inc
cmp
xchg
jb
cmp
pop
push
lahf
pop
push
roll
mov
hlt
mov
adc
fidivrl
ljmp
insb
mov
xchg
fsubrs
push
popf
rcr
sbb
dec
incl
mov
xor
sbb
mov
aaa
mov
hlt
inc
adc
addr16
sbbl
jno
mov
test
mov
sub
lcall
ret
jb
stos
aad
nopl
add
lods
dec
aad
rcll
popf
imul
inc
xchg
fcoml
sbb
adc
das
dec
sahf
pop
pop
push
insb
ficompl
pop
ljmp
inc
aad
je
adc
das
push
xchg
rclb
pop
sub
scas
mov
ffree
xchg
daa
dec
mov
bound
shrl
movsb
fwait
movsl
push
push
pop
popa
pop
ret
sbb
push
cmpsb
aas
imul
fcoml
push
adc
pop
sub
fisttpll
lods
roll
sbb
push
mov
jecxz
out
mov
mov
cmpsl
in
aas
push
test
mov
add
pop
int
pop
push
jp
push
cmp
xor
aas
sub
add
testb
pusha
and
xor
adcb
sti
nop
cmp
pushf
xor
dec
add
mov
ds
jecxz
mov
mov
or
dec
cli
dec
popf
push
pop
ds
pop
fdiv
push
cld
addl
in
decb
mov
fwait
es
pop
adc
arpl
insb
sbb
sbb
inc
mov
pop
or
mov
mov
mov
add
jo
rcr
xor
dec
into
adc
scas
mov
inc
sub
pop
mov
push
and
mov
sbb
xchg
push
or
xor
test
ja
jnp
adc
movsb
jb
jnp
xchg
cwtl
ljmp
aam
ljmp
ljmp
xchg
xchg
enter
call
gs
insb
pop
or
jne
pop
and
shrb
hlt
cld
scas
mov
or
lret
sbb
cwtl
mov
dec
push
iret
jne
jnp
aam
mov
aaa
das
cwtl
hlt
insb
or
sahf
stos
adc
add
jae
add
adc
outsb
ret
mov
xor
dec
push
fwait
mov
int3
rolb
jmp
fstl
pop
mov
xor
xchg
cmpsb
push
jmp
pop
jge
adc
and
mov
jle
xchg
adc
repz
insb
dec
mov
jl
ss
pop
aaa
sub
push
mov
sbb
or
sbb
mov
xchg
xor
sbb
xor
fstps
mov
pop
lret
and
adc
cs
int3
aam
sahf
pop
mov
mov
jge
sbb
mov
out
or
jmp
mulb
mov
xlat
dec
mov
jno
xchg
or
inc
xchg
or
or
sbb
push
fmull
dec
pop
cltd
lret
iret
enter
mov
cmp
xor
mov
mov
xchg
mov
js
bound
loop
ret
add
cmpsl
lahf
lea
sahf
daa
or
fdiv
push
cmpl
insb
sbb
push
outsl
pop
add
fsubrl
pop
faddl
addr16
stos
pop
mov
sbb
ljmp
pop
sbb
popf
cmp
sub
or
cld
pop
sbb
out
ss
sbb
sub
or
jle
test
mov
and
stos
cltd
lret
xor
mov
ljmp
sub
mov
sbb
push
sub
or
imul
sbb
addr16
das
jle
fisttpll
mov
push
ret
xor
insb
mov
bound
insb
dec
xor
ret
xchg
cmc
adc
inc
xlat
inc
fucomp
cli
cmp
aad
into
or
hlt
shrl
mov
fsubrl
je
cmp
xchg
sbb
jo
adcb
js
pushf
jle
loopne
or
ja
jecxz
sahf
subb
loopne
popa
sbb
jns
rorl
lea
inc
arpl
addr16
sub
loope
loope
adc
sbb
sub
push
fisttpll
ficomps
dec
stos
push
add
pop
jo
and
mov
sbb
sbb
insl
push
cmp
cmp
ret
in
pop
cmp
repz
movsb
sub
mov
lods
jbe
pop
dec
out
cmp
xor
test
jo
xchg
testl
sbb
bound
dec
xchg
sub
or
mov
outsl
sub
inc
sbb
popf
subl
add
mov
jae
imul
stc
mov
adc
push
int
loope
aas
cli
pop
insb
or
jnp
cmp
mov
xchg
push
loope
adc
sub
clc
loope
push
or
movsb
xchg
sbb
in
cld
jecxz
rcrb
sub
mov
xchg
adc
mov
mov
inc
imul
stos
enter
nop
stos
in
jge
fiadds
fldl
test
jge
inc
add
inc
lock
sbb
xor
pop
daa
mov
mov
mov
pop
sub
sti
push
inc
xor
ret
in
aam
and
adc
mov
fmul
push
int3
loop
popf
adc
xchg
jb
mov
inc
mov
ljmp
mov
mov
adc
add
sub
mov
dec
js
or
popf
and
or
and
pop
sbb
and
and
sbb
mov
decl
cmp
mov
add
fisttps
cmp
xchg
fnsave
loope
scas
sub
mov
femms
insl
popf
pushf
and
or
dec
add
push
cmovnp
aad
in
or
sbb
add
fstps
sbb
stos
lret
xchg
or
add
xor
loope
jno
daa
dec
enter
movb
xchg
test
fnsave
inc
push
mov
pop
or
add
int3
cs
icebp
inc
pop
push
fwait
into
lods
mov
add
rclb
push
lret
test
xchg
cmpsl
adc
pushf
outsb
pop
or
ret
or
in
push
jae
add
movsl
fs
sub
add
mov
xchg
sahf
xlat
cmpsl
xor
insb
fisttps
out
gs
test
add
pop
jbe
jns
sbb
nop
popf
jne
add
repnz
dec
sbb
mov
pop
xchg
jmp
sahf
dec
in
mov
lret
nop
push
mov
es
mov
mov
mov
cli
nop
or
xor
call
sahf
mov
insb
lret
or
scas
mov
out
xchg
loope
xor
bound
and
sbb
test
cs
push
fdivr
arpl
jne
frstor
mov
sbb
and
xchg
jno
outsb
sbb
loopne
test
sub
dec
imul
xor
sub
jge
fadds
sbb
push
adc
add
push
insb
xor
push
pop
filds
inc
bound
daa
fdivrs
lea
aam
lcall
call
mov
lret
mov
mov
jg
push
push
ret
xor
imul
mov
int
xor
psllq
js
mov
fwait
movsl
xchg
fdiv
adc
lcall
incb
xchg
or
fwait
dec
out
repz
nop
shl
leave
push
iret
movsb
adc
xor
sbb
jns
pop
test
cmpsl
test
je
mov
pop
fnstsw
push
sahf
adc
out
ret
push
dec
movsl
adc
stc
not
popf
mov
and
mov
jg
lods
int
cwtl
data16
test
or
push
push
loopne
test
push
dec
mov
xchg
push
rcrb
ret
lcall
xor
sbb
sub
cwtl
mov
xchg
xor
add
pop
test
dec
fbld
sbb
or
sbbl
jle
les
repnz
pop
std
stos
stos
mov
add
addr16
dec
aam
rol
mov
roll
cmp
jb
cli
pop
mov
mov
pop
cmp
movb
fwait
and
rcrl
pop
ja
jecxz
dec
scas
and
sbb
lea
dec
andps
cs
lcall
sub
addl
jmp
inc
adc
add
cmp
popf
and
jp
iret
in
dec
fmulp
movsl
sbb
ffree
add
push
int
rclb
mov
mov
push
inc
cltd
test
or
cmp
mov
cli
nop
pushl
mov
sub
int3
std
cli
ds
lods
sbb
lcall
outsl
fnsave
dec
push
cli
arpl
mov
fisubrs
cmp
popf
and
and
push
and
outsl
inc
add
jp
and
and
fidivrs
aam
shl
inc
xchg
cmp
add
insb
inc
popa
sbb
stos
int
or
mov
rclb
cmp
push
jae
push
xlat
mov
lret
mov
xchg
cs
xchg
mov
je
dec
mov
sub
int
cld
fstpl
ljmp
or
sub
add
repz
mov
adc
sbb
sbb
fwait
inc
inc
dec
leave
mov
jae
push
push
int3
in
dec
rorb
std
orl
insb
fcomps
testl
cs
decb
popa
loope
clc
gs
enter
sub
test
push
pop
and
lcall
dec
mov
nop
jmp
popf
out
popa
ja
push
inc
dec
fdivs
ret
in
stos
je
add
lods
mov
mov
jecxz
and
pop
scas
dec
ljmp
add
add
cmp
xor
repz
push
dec
imul
xchg
test
sub
stc
adc
or
mov
mov
jmp
lret
stos
push
sahf
add
dec
repz
shr
bound
scas
data16
and
sbb
mov
fdiv
cmpsl
xor
sbb
jecxz
pop
ficoml
mov
aam
xlat
insl
jecxz
pop
sahf
ss
push
sbb
xchg
jg
push
add
sub
and
jb
add
into
pop
push
dec
mov
jae
add
push
sahf
jo
ret
loopne
pusha
pop
inc
adc
xchg
mov
pop
ja
xchg
pop
mov
push
sbb
xchg
add
mov
sub
daa
mov
sbb
add
jl
inc
xor
push
in
xor
fmull
xchg
mov
mov
pop
ljmp
lret
ret
cld
jge
mov
sbb
sbb
xor
inc
rcll
mov
xlat
mov
and
adc
insl
fisubrl
jmp
inc
push
cmp
and
push
cmp
xchg
jne
repz
xchg
ja
loop
shrl
fistps
pop
jo
dec
addr16
inc
push
test
data16
je
mov
in
push
rcrl
test
inc
leave
sahf
pop
jmp
jno
popf
or
ljmp
push
hlt
lret
mov
push
sbb
xor
mov
cmp
jp
les
std
add
add
imul
jl
dec
sub
js
mov
pop
outsl
pop
sub
movsl
inc
frstor
xchg
je
sbb
xchg
push
aas
or
or
int3
movsb
push
dec
sub
pop
jmp
sahf
roll
and
push
dec
jecxz
leave
lret
sbb
mov
adc
fildll
pushf
sahf
sbb
sub
push
cmp
xchg
jae
aam
push
sbb
scas
imul
push
mov
fistps
add
pop
addr16
pop
dec
sub
out
inc
jp
int3
xchg
push
xor
jb
dec
iret
pop
das
loope
es
or
dec
outsl
or
push
insb
dec
jmp
stos
sbb
pop
jb
pop
nop
imul
fwait
inc
pop
cltd
je
cld
into
xchg
cli
and
test
jmp
ljmp
sbb
sbb
imul
push
into
sub
dec
mov
cld
adc
sub
insl
or
rcll
jae
add
dec
sub
es
push
mov
xchg
push
fdivrs
xchg
jmp
das
or
ja
mov
mov
sub
inc
xchg
outsl
ja
leave
dec
cmp
push
xchg
mov
and
loope
xchg
xchg
jnp
push
sub
imul
sahf
les
ret
and
cld
lret
pop
insb
cli
pop
ljmp
sub
psubd
lods
adc
cmp
mov
mov
hlt
repz
jae
push
pop
push
test
decl
dec
inc
ja
and
loope
gs
out
daa
push
mov
adc
or
sub
xchg
test
push
lock
jmp
or
push
mov
into
xchg
sbb
and
ss
lahf
das
fs
in
test
ljmp
mov
icebp
aad
fadds
cltd
add
jmp
outsl
mov
scas
and
sahf
fstps
fcomp
cmp
adc
pusha
xor
pop
add
leave
addr16
pop
jle
aam
push
mov
repz
test
cld
adc
xlat
xor
push
or
jns
inc
mov
scas
mov
pop
stos
mov
das
fcoml
fmul
jnp
push
push
and
repz
movsl
adc
cli
and
aam
add
jge
call
sbb
mov
add
sub
add
sbb
pop
pop
jo
fidivs
out
cmpsl
lods
xor
push
sahf
sub
pop
imul
or
popf
sbb
ja
mov
dec
in
pop
jge
push
push
and
mov
sub
addr16
lods
js,pt
and
sub
mov
pop
jns
or
mov
cmp
aam
dec
les
in
stos
dec
and
pop
cwtl
daa
mov
cmp
popf
flds
in
repz
scas
fisttpl
push
sbb
and
fsubl
mov
sbb
in
mov
aaa
stos
jg
pop
mov
xchg
in
pop
sti
in
push
int3
or
das
into
fwait
or
rorb
xchg
mov
cwtl
pop
pop
out
sbb
mov
test
pushf
push
enter
stc
sbb
data16
xchg
pusha
dec
jb
test
push
inc
cmp
aas
push
add
add
insb
jno
and
nop
dec
inc
test
add
fnsave
add
or
inc
dec
add
jne
loope
fnsave
sub
or
sbb
mov
jnp
cmp
into
push
fimuls
fwait
xor
dec
push
mov
mov
js
outsb
push
sub
jbe
xorb
cmpl
and
add
rolw
insl
push
sbb
push
imul
es
test
ljmp
lods
fcoms
and
and
push
and
das
xchg
xor
or
push
ss
je
sub
dec
cs
cmp
xor
sbb
cmp
cmp
cmp
mov
adc
pop
lahf
or
pop
or
add
je
add
and
push
pop
jbe
and
push
and
and
mov
es
lahf
dec
add
jne
andl
cmp
into
popa
dec
mov
push
pushf
cmpsl
fwait
and
aam
push
sarl
mov
nop
push
ljmp
fwait
aas
loopne
inc
in
sbb
xchg
push
inc
lods
sbb
stc
int
push
pop
incl
leave
xchg
cmp
pop
mov
inc
dec
cld
mov
imul
fbstp
adcb
sub
xchg
stos
adc
or
xlat
int
fs
ss
dec
push
inc
inc
cli
dec
push
shlb
and
pop
pop
push
pop
or
jb
and
insb
mov
stos
and
cmpsb
fcompl
stc
pop
pop
jo
xor
je
lret
cmp
adc
push
lret
xor
pop
dec
fistpl
leave
jmp
cmp
and
adc
mov
sbb
daa
lahf
push
nop
sbb
repz
push
jle
push
dec
sub
rcrb
sbb
aaa
pop
sbb
push
lret
into
lahf
fadds
loopne
xor
fisubrl
adc
imul
cld
bound
mov
xor
outsb
push
jge
jge
lcall
jnp
mov
and
adc
xchg
repz
and
fiadds
add
add
fstl
mov
decl
jne
and
pop
mov
es
push
or
dec
sub
lea
sub
lea
mov
push
sub
jnp
fidivrs
cld
dec
daa
mov
mov
cmpsb
push
dec
sbb
lods
inc
fwait
mov
ss
add
inc
pop
imul
or
xlat
mov
pop
jecxz
push
push
and
xlat
test
jo
adc
jno
nop
loope
hlt
or
bsf
sbb
adc
aam
push
add
pushf
lahf
jecxz
movhps
es
aaa
in
push
fldcw
out
mov
lods
xchg
pop
and
fidivl
test
pop
sahf
mov
pushf
push
into
dec
add
icebp
dec
loopne
ds
xchg
ljmp
fadd
lods
jmp
fstpl
mov
js
mov
xchg
aaa
js
das
das
arpl
outsb
shlb
movsl
aaa
push
jle
mov
add
xor
inc
pop
jnp
push
mov
lds
mov
pop
inc
xchg
or
pushl
mov
outsb
or
mov
add
int
cmp
in
sbb
sbb
dec
bound
push
ret
repz
jp
push
negb
out
sub
cli
rcl
aad
in
aad
dec
leave
jg
cmp
mov
mov
out
arpl
subl
pop
lods
mov
out
inc
add
imul
test
pop
in
push
and
insb
aam
mov
push
lods
rcl
cmp
mov
jnp
daa
add
pop
lds
pop
inc
push
pop
xor
adc
mov
and
icebp
xchg
cmpl
xchg
push
in
shl
dec
call
xchg
cmp
pop
inc
pusha
out
movsl
or
lret
sbb
sbb
mov
adc
imul
mov
pop
inc
pop
mov
fisttpl
imul
je
and
repz
cmp
adc
add
sbb
xchg
sbb
pop
pop
push
cld
mov
sub
dec
sub
mov
insl
mov
arpl
dec
popf
ss
popf
and
pop
pop
mov
ds
push
pop
ror
and
sahf
adc
pslld
and
xor
ljmp
add
sbb
stos
pop
sub
stos
sub
dec
int3
es
pop
and
aaa
sub
mov
or
add
frstor
dec
sbb
imul
pop
adc
cmp
inc
dec
sbb
pop
enter
lahf
mov
cmp
xor
rep
insl
stos
pop
clc
loop
in
aam
test
xor
jge
xor
and
dec
mov
loopne
or
ret
movd
adc
das
stos
add
lret
pop
jae
cs
cmp
push
insb
inc
das
dec
outsl
sar
pop
notb
xchg
pop
lock
push
mov
cmp
das
lcall
loopne
xor
or
add
jecxz
je
cmp
jecxz
in
sub
mov
mov
movswl
mov
scas
repnz
je
les
xchg
mov
xor
cmp
adc
mov
sub
jb
cmp
sub
xchg
ljmp
movsb
lds
scas
stos
ja
or
cmpsl
lret
jmp
add
jle
sbb
xor
pop
mov
sbb
mov
imul
add
out
jle
adc
popa
cmovge
les
pop
aad
lahf
sbb
add
push
mov
jge
out
in
in
fsubrl
push
and
insl
dec
or
push
jae
push
lods
xor
into
or
sbb
or
sub
icebp
sub
cmp
push
push
cmp
cmp
add
mov
es
divb
push
push
in
addr16
inc
mov
or
adc
cmp
sub
rcll
push
jmp
jno
das
mov
xor
xchg
lcall
mov
repz
mov
xchg
jp
add
mov
cli
ljmp
outsb
xor
stos
dec
into
imul
mov
dec
nop
insb
clc
jge
jmp
mov
mov
pop
xor
or
call
jne
and
fistpll
cmovp
sub
fwait
push
in
cmp
sbb
sub
cli
or
cmpsl
push
xchg
dec
bound
es
cmp
mov
mov
in
adc
popa
cmovo
xchg
pop
int3
popf
fisubs
add
mov
push
ljmp
inc
sahf
sub
mov
jbe
clc
sbb
outsb
dec
lods
or
mov
pop
cmp
fadds
jae
push
stos
cmp
mov
addr16
aad
shll
add
lret
lret
jne
popl
nop
xchg
fisubl
add
fdivr
js
fcoml
mov
ds
pop
cmp
jae
test
cmp
sub
adc
sub
mov
xor
xchg
out
cltd
out
mov
ficoml
sahf
sbb
jo
pop
shll
outsb
pop
das
adc
aaa
pop
fdivrs
iret
push
int
cmp
ljmp
sub
sbb
out
mov
or
in
sti
mov
rcrl
ss
sbb
ret
inc
dec
mov
dec
pop
cs
sbb
cli
jecxz
jle
mov
add
inc
in
iret
rcl
insl
es
mov
je
jbe
adc
sbb
int
pop
dec
sbb
lods
repz
pop
int
fwait
adc
xor
leave
sahf
mov
cmp
cmp
pushf
sbb
ret
outsb
sub
jge
xchg
inc
sub
push
push
xchg
xchg
outsl
mov
insl
mov
sub
inc
mov
lods
rcrl
rcl
out
cwtl
adc
and
sub
nopl
mov
push
push
insb
push
adc
lcall
cwtl
push
sub
xchg
or
test
dec
rcrl
xor
adcb
iret
sbb
mov
shll
jmp
mov
xchg
push
outsb
adc
push
pop
fisubrl
pop
les
sbb
pop
aaa
jo
adc
lods
popf
dec
sub
xchg
adc
sub
add
dec
hlt
dec
or
in
leave
inc
add
cwtl
shrb
inc
dec
shll
jecxz
dec
aaa
dec
mov
sti
mov
jo
movsb
jp
dec
daa
das
push
mov
dec
mov
pop
shr
inc
clc
popa
jmp
mov
sbb
dec
icebp
pop
push
push
insb
popf
out
pusha
stos
fadds
shrl
dec
aad
sarl
test
insl
pushf
dec
and
popf
loop
sbb
mov
mov
dec
xlat
dec
jge
cmc
jp
mov
dec
adc
dec
push
push
sub
pop
mov
add
hlt
adc
popf
test
mov
insl
fists
sub
jp
lods
xor
inc
cmpsb
mov
push
aas
sub
mov
push
or
mov
xchg
out
jnp
mov
lods
inc
in
lret
push
sarb
jmp
fucomip
push
xor
lds
loope
mov
mov
mov
push
and
mov
lods
popf
pop
scas
pop
push
mov
fs
pop
stc
adc
dec
pop
mov
faddl
lods
push
push
lods
gs
push
pop
mov
cmp
dec
outsl
lods
xor
das
and
lret
xchg
enter
int
jne
incb
mov
loop
sbb
sub
dec
mov
pop
iret
lods
dec
scas
sbb
xchg
pop
dec
xchg
or
mov
cmp
loop
push
sub
mov
jp
shrb
sub
pmulhw
test
fcoms
test
rorb
or
xor
xlat
fistps
xchg
into
inc
mov
ds
lods
or
sti
inc
pop
std
mov
popf
adc
mov
in
dec
pop
mov
push
lea
xchg
lahf
sbb
or
jns
push
bound
sbb
cwtl
xlat
lods
cltd
das
aam
lea
push
xchg
inc
stc
sub
fdivrs
push
lods
lahf
sbb
mov
add
mov
fadds
mov
ret
repz
mov
aam
sub
and
arpl
adc
std
jmp
test
cmpsb
arpl
jl
cmp
jmp
push
jecxz
pop
pop
dec
js
jl
out
lret
shrb
in
cld
fcomps
aam
pop
sub
add
push
sti
push
rcrl
pop
nop
nop
jl
into
and
mov
adc
lock
aam
inc
cmp
sbb
ja
push
xchg
cld
sbb
sub
mov
into
xor
in
pop
cmp
pop
lods
pop
mov
lret
imul
mov
mov
popf
sbb
sub
incb
mov
xor
sub
insl
xchg
push
jo
mov
rolb
aam
mov
and
les
dec
fnsave
setb
out
inc
and
adc
test
mov
dec
aas
dec
insl
sbb
popf
jg
mov
push
sbbl
mov
xchg
iret
push
sbb
imul
inc
sbb
sbb
jo
orps
adc
mov
into
fbstp
and
dec
pop
arpl
fmul
or
mov
push
inc
popf
push
in
inc
mov
dec
xor
mov
jl
sub
mov
rcll
dec
sbb
rcl
pop
add
pop
lcall
jo
rol
aas
popf
cmp
lahf
mov
fists
sbb
sub
lret
adc
pop
pop
rol
or
mov
push
add
inc
mov
sbb
ss
cs
mov
cmp
push
mov
xor
lret
or
add
test
push
sub
jne
and
inc
clc
pop
addr16
or
stos
sub
fwait
pop
mov
daa
and
pop
add
push
cltd
stos
inc
nop
ja
test
or
mov
stos
enter
mov
xchg
push
into
lea
aaa
js
mov
lahf
loopne
ss
cmc
rcrl
adc
sub
adc
aad
or
lea
mov
push
sbb
add
addr16
adc
jns
aaa
dec
fwait
sub
fdiv
pop
jae
insl
iret
mov
stos
adcl
cmpsl
adc
pop
mov
jmp
sbb
movsl
cmpsb
cmp
fadds
cltd
ljmp
and
fwait
mov
movsb
in
lahf
jle
inc
fmull
divl
fidivrs
sbb
pop
or
aaa
or
mov
std
mov
jecxz
and
push
dec
stc
sbb
inc
cmpsb
lret
gs
push
jmp
mov
pushf
push
add
or
pop
pop
mov
sub
cmp
cmp
mov
cmp
or
in
aas
scas
jecxz
adc
cmp
jae
mov
sbb
popf
sbb
xchg
loopne
inc
adc
sahf
sbb
or
jge
sub
ja
fsubrl
inc
mov
jle
aam
or
pop
mov
lret
test
mov
adc
int3
xor
pop
setbe
sub
scas
psrlq
mov
or
pop
dec
gs
cli
popw
inc
jle
ljmp
aas
or
jbe
or
dec
addr16
and
xor
inc
rorl
sub
push
dec
les
xor
push
add
sbb
les
outsb
and
xchg
pop
sbb
sbb
adc
arpl
aaa
daa
loope
std
ret
addr16
pop
and
pop
nop
fwait
mov
adc
ficoml
adc
loope
mov
lods
pop
int
adc
or
imul
xchg
sub
test
negl
daa
sbb
dec
sbb
je
aaa
ja
scas
repnz
pop
cmp
hlt
fs
inc
int
sbb
cmc
xor
adc
adc
mov
pop
sahf
dec
add
jb
addl
das
dec
lds
rol
sbb
mov
sahf
mov
xlat
in
stos
fnsave
cmp
push
leave
pusha
out
in
in
decl
outsl
repnz
and
xor
xchg
shrb
xchg
es
cwtl
lods
lods
or
lcall
andl
mov
pushf
mov
in
cmp
sbb
fxam
mov
shlb
fwait
jle
stos
inc
in
cmp
aas
xlat
cmpsb
popa
ljmp
push
pop
and
int
pop
adc
dec
mov
pop
pop
dec
inc
nop
outsl
jns
lods
fmull
jne
or
mov
mov
xchg
mov
cmc
xchg
insb
push
dec
add
push
and
in
pusha
fdivl
in
sub
push
mov
in
shrb
imull
aam
mov
fmull
mov
mov
pushf
pop
mov
mov
inc
cmpsb
jp
pop
or
jp
sbb
pop
mov
add
push
pop
or
pop
shlb
inc
andl
jmp
push
ss
int3
xlat
pop
ljmp
xor
mov
pop
xor
adc
and
les
lods
jg
or
and
pop
or
ljmp
xor
mov
clc
mov
jae
das
or
adc
lcall
jecxz
dec
sbb
into
mov
iret
jp,pt
dec
mov
int
dec
fnsave
cltd
dec
icebp
mov
addr16
loope
aad
mov
mov
roll
out
stos
aaa
pop
es
pop
bound
jl
jecxz
aad
loopne
arpl
fsts
les
adc
ja
outsb
pop
sbb
testb
pop
or
inc
and
popa
mov
inc
fdivr
addr16
xor
jecxz
xchg
pop
cli
out
xor
fs
lahf
push
mov
rsqrtps
and
push
xchg
pop
es
adc
xchg
movsb
mov
jle
xchg
push
in
dec
xchg
sahf
push
mov
out
inc
out
xor
ljmp
es
aad
lcall
fisubrl
mov
fistpll
fldl
xor
das
jecxz
mov
mov
adc
insb
stos
mov
inc
inc
movsl
xchg
je
inc
cmp
or
bound
mov
and
and
mov
ret
cs
imul
xlat
fldt
clc
sar
clc
lods
jae
hlt
xchg
cmp
ljmp
push
lods
dec
mov
popa
inc
in
adc
sub
and
rsm
ret
sub
test
int
add
xlat
mov
adc
push
idivl
push
push
push
cs
pop
data16
dec
and
jbe
inc
insl
push
in
jecxz
cwtl
insl
and
pusha
ret
leave
mov
add
ss
addr16
cmp
mov
lcall
cmp
stc
xchg
or
add
shl
stos
xor
dec
sub
or
fistl
cmp
jae
sbb
fldenv
cmpsl
dec
negl
pop
and
mov
push
mov
adc
shrb
mov
mull
js
jge
mov
xor
ja
loop
pop
mov
or
sbb
hlt
add
push
pop
repz
fisubl
sbb
insb
push
pop
or
sar
adc
xor
xorl
sbb
adc
sub
dec
fbstp
sbb
dec
xchg
push
sbb
push
jp
mov
push
push
insl
pop
inc
jp
aad
xchg
fidivs
sti
jo
push
fisubrs
shrl
aad
sbb
sbb
adc
ficoml
add
loopne
mov
in
dec
cmp
aam
ds
push
jp
mov
dec
int
mov
xchg
dec
fucom
mov
sub
das
faddl
pushf
cmpsl
fimuls
les
popa
jle
jae
adc
cwtl
mov
loope
pop
adc
pop
xlat
xchg
mov
jo
mov
std
or
std
fmuls
mov
testl
adc
push
dec
add
mov
and
nop
xchg
ror
mov
lcall
xor
dec
jmp
mov
or
data16
jbe
pop
cld
imul
jmp
xor
imul
xchg
mov
sbb
dec
mov
insl
lahf
or
dec
push
pop
scas
cmp
push
xchg
push
into
aam
jle
push
add
jle
scas
cld
mov
sbb
cmp
push
xor
aam
pop
push
sbb
fadds
aad
or
aad
xor
pop
stos
into
fwait
or
lret
adc
sti
cmpsl
jne
leave
pop
dec
and
mov
fs
push
inc
pop
adc
gs
xchg
sbb
jns
push
mov
popa
or
mov
push
mov
loopne
jnp
dec
loop
int
lea
push
xchg
int3
sbb
int3
aas
insl
imul
xlat
sti
sub
adc
mov
xchg
popf
lret
in
popa
or
or
orb
loope
or
test
adc
cmp
aam
pop
adc
cmp
les
in
imul
fcomps
ficoms
sbb
or
adc
mov
dec
adc
mov
das
jns
insl
addr16
mov
sti
sub
inc
mov
mov
vmread
push
sbb
loopne
or
inc
adc
jne
incl
decl
rcrl
adc
and
adc
insb
xor
mov
dec
loop
dec
daa
mov
les
mov
decb
sahf
inc
insl
xor
add
mov
aad
xlat
or
lea
sbb
pop
lods
popa
mov
xor
sub
push
mov
mov
sub
movsb
or
sbb
pop
cmovb
subb
add
sbb
or
in
push
mov
dec
cli
mov
mov
fdivrs
adc
aad
inc
add
cmpb
leave
hlt
push
ss
insb
pop
lret
push
xlat
lcall
sub
mov
mov
hlt
stc
mov
pop
ss
mov
insl
lds
pop
or
pop
pop
adc
arpl
das
sahf
leave
adc
lcall
sahf
dec
mov
push
and
mov
cmp
loope
stos
imul
outsl
clc
jle
insl
test
and
adc
lds
jmp
or
jmp
adc
das
dec
out
mov
or
sbb
stos
jg
ds
cltd
ret
jmp
pop
add
fbstp
xchg
jge
or
dec
lock
pusha
aaa
scas
cmp
inc
mov
cmp
insl
sub
outsl
jae
sbb
les
xchg
mov
cmpsb
subl
iret
test
in
out
cmpsl
adc
daa
push
pop
jg
jl
cltd
test
xor
pushf
sbb
jmp
xor
fadds
cmp
mov
lret
das
sub
mov
repnz
adc
add
dec
jmp
xchg
adc
insl
or
jne
sbb
addr16
shl
fwait
sbb
adc
jb
stos
test
jno
adc
cmp
xchg
aas
jnp
push
jno
sub
push
jge
cltd
movsl
insl
mov
pop
into
das
mov
xor
push
pop
insb
cltd
shlb
fsubrl
nop
ror
hlt
inc
ret
add
inc
insb
or
cmp
sbb
bound
mov
cmp
nop
inc
fs
add
inc
and
mov
sahf
fwait
xchg
insb
xchg
and
pop
inc
aam
pop
outsb
stc
push
or
cs
inc
mov
imul
pop
loop
adc
xchg
insb
ficoms
out
hlt
cld
cli
repz
sbb
push
shlb
lahf
mov
pop
and
jo
mov
jae
movsb
push
jno
adc
mov
mulb
pop
nop
inc
popa
jmp
xchg
dec
insb
add
adc
push
xor
dec
cmc
sbbb
bound
lret
ljmp
sti
mov
xor
pop
push
add
cmp
loope
or
mov
push
out
cmp
jle
cltd
repz
push
push
sbb
sbb
stos
and
push
push
imul
mov
insl
mov
mov
push
outsb
aam
and
insl
negb
ds
outsl
sub
scas
push
iret
mov
pavgw
xor
test
jmp
leave
imul
xchg
lahf
lods
push
sbb
lret
scas
pop
or
adc
fwait
sub
ror
orb
xchg
andb
pop
sub
aad
cmp
add
push
add
jb
cmpsb
arpl
and
push
mov
mov
fistl
adcb
dec
mov
dec
sbb
idivb
push
xchg
inc
pop
or
mov
jb
cmp
fsubrl
dec
sub
lods
insb
test
imul
dec
lret
das
orb
adc
xor
imul
fildl
repnz
es
imul
sub
push
push
sbb
pop
xchg
cmc
dec
ljmp
push
push
and
insl
pop
dec
xchg
es
xchg
test
lods
jnp
jp
inc
cmp
jp
test
xor
sbb
shll
mov
sub
inc
daa
cmpb
sbb
xchg
jg
push
aam
sbb
add
jb
dec
shr
or
daa
mov
sub
push
xchg
jecxz
xor
ds
iret
fadds
inc
clc
pop
dec
dec
pop
adc
lods
adc
sbb
das
jb
sbb
pop
jecxz
lcall
or
pop
mov
hlt
dec
xor
mov
lcall
push
xorl
mov
dec
mov
jns,pn
iret
add
dec
mov
or
jecxz
test
mov
and
fcomi
aad
inc
insl
pop
pop
cs
sub
sbb
adc
adc
std
push
cmp
in
or
imul
mov
adc
ljmp
dec
pop
test
insb
pop
inc
sub
cmp
sbb
xlat
dec
insl
or
inc
lahf
test
rcrb
inc
in
sti
pop
les
add
js
insl
sub
arpl
fdivrp
insl
out
jns
xchg
push
inc
nop
in
daa
repz
jmp
lret
ret
sub
daa
xchg
mov
addr16
add
pop
inc
int
insb
imul
mov
or
pop
mov
stos
cwtl
mov
cmpsb
sub
jbe
dec
daa
mov
push
pop
das
sub
or
or
xor
sbb
inc
mov
mov
xchg
mov
int3
pop
add
and
sub
push
test
add
imul
dec
outsb
insl
or
push
mov
xchg
mov
mov
inc
mov
dec
cltd
jnp
xlat
dec
pinsrw
sbb
idivb
cmc
pushf
cmp
loopne
xor
and
push
pushf
xchg
iret
push
daa
dec
sti
push
mov
xor
es
and
repz
cmp
dec
and
mov
and
lret
daa
int
sahf
jl
pop
shrl
loopne
sub
push
imull
push
sub
js
popf
insl
dec
loopne
rorl
bound
pop
jecxz
mov
mov
aam
pop
cs
dec
ret
push
leave
shlb
push
aaa
lds
dec
insb
popf
or
and
fdivrs
cmpsb
inc
mov
sub
jle
mov
or
mov
daa
hlt
insb
lcall
dec
rcrb
out
push
jle
jge
or
mov
mov
mov
sbb
mov
or
insl
sbb
add
ljmp
xor
dec
iret
in
xchg
cltd
jp
into
ljmp
dec
js
or
push
lcall
lret
in
jae
int
lahf
leave
jmp
sub
and
insl
test
sbb
sbb
adc
or
iret
stc
xor
mov
xchg
sbb
jmp
xchg
lcall
mov
dec
xchg
jg
cmc
sub
pushf
adc
add
aaa
mov
loope
mov
sub
pop
sbb
dec
xor
imul
push
mov
mov
inc
xchg
jo
iret
subl
pop
inc
imul
movsb
pop
lret
cwtl
into
sahf
mov
cmc
add
bound
js
es
push
flds
ret
jmp
mov
push
sub
adc
push
lea
pop
mov
xor
and
out
sbb
and
pusha
cvtdq2ps
loope
xchg
dec
push
stc
call
sbb
pop
push
xor
cmc
xorl
sbb
pop
xsaveopt
mov
out
fisttpl
pusha
cmpsb
negl
push
mov
push
pop
shrb
repnz
sbb
pushf
push
fs
pop
movl
cmp
push
push
pop
xchg
fcoms
dec
rcrb
insl
pop
xor
or
lods
insb
xchg
into
mov
mov
les
dec
jecxz
shrb
addr16
rcll
fistps
loopne
inc
iret
mov
stos
in
aas
fstl
jae
in
cmpsl
mov
jb
cwtl
jmp
or
dec
mov
setp
stos
push
test
cmp
clc
fcomip
sbb
cmp
sub
rcll
jno
icebp
cwtl
lret
popa
jp
popf
addr16
mov
scas
rcrb
mov
mov
rcrb
xor
stos
in
fdivrs
xlat
mov
xlat
adc
loope
or
jmp
movsl
sbb
je
pop
jp
sahf
aaa
lea
js
icebp
out
cmp
push
pusha
outsb
lcall
push
cmp
pop
test
mov
xchg
outsb
push
clc
insb
inc
cmpsl
xchg
xor
sbb
pop
cmp
jne
or
fisttpl
pop
cmp
sub
andb
int
or
int
imul
and
lcall
pop
adc
pushl
mov
scas
mov
hlt
xor
pusha
cld
imul
sbb
push
or
aam
jmp
lret
fxch
adc
lods
cld
pop
incb
clc
ret
xchg
sub
or
int
push
mov
push
cmpsl
fsubr
push
xor
int
inc
lret
je
add
out
dec
popl
push
mov
stos
ds
xchg
jecxz
xchg
bound
inc
inc
filds
sbb
mov
xchg
add
xor
dec
inc
dec
inc
dec
lods
outsl
pop
aas
orl
pop
pop
scas
mov
je
inc
jmp
sub
nop
test
dec
xor
repnz
inc
fxch
pop
add
insb
into
imul
cltd
in
mov
or
mov
add
jp
aad
mov
fstpl
nop
lods
jp
cwtl
adcb
lret
xlat
incl
or
lret
cmp
js
scas
popf
loopne
mov
bound
push
inc
andb
push
sub
ss
inc
mov
testb
dec
adc
push
jns
in
lahf
hlt
xchg
divb
dec
pushf
mov
mov
cmp
cli
aad
or
xor
xchg
cs
int
daa
lea
mov
mov
xchg
fdivrp
or
stc
and
les
stos
cmp
push
jge
xor
cmp
xor
imul
insb
add
sbb
mov
jecxz
subl
test
rcl
sbb
or
pop
mov
fwait
arpl
lahf
ds
jb
cmc
or
cli
out
ds
pop
neg
sbb
out
xchg
ret
dec
jecxz
daa
cmp
adc
je
mov
sub
mov
xchg
push
xchg
sub
xchg
jp
inc
enter
test
add
inc
rcrl
dec
mov
ja
pop
jb
insb
xor
jbe
adc
pushf
fsubp
push
mull
outsl
pop
sub
cli
arpl
push
aad
sbb
lock
adc
out
leave
adc
xor
roll
ficoml
mov
xor
xchg
test
mov
push
ljmp
cmp
cmp
push
adc
sub
mov
lea
sub
addr16
ret
movsb
add
insb
push
aas
sarb
mov
or
lods
mov
rclb
les
arpl
dec
sub
pop
pop
mov
add
loopne
dec
sbb
stos
outsl
jmp
addb
lods
fildll
xchg
push
xor
push
push
dec
jnp
aad
ja
push
lret
pop
cmp
rcrb
xchg
lret
and
mov
jmp
dec
dec
or
dec
adc
jmp
and
pushf
jne
xor
fucomip
cld
add
sbb
lahf
sti
push
and
cmp
and
repz
inc
jmp
xor
xor
sub
in
loopne
jl
dec
iret
xchg
pop
mov
push
jg
dec
cs
into
xchg
pop
mov
mov
inc
lcall
add
cld
nop
dec
sbb
sbb
dec
ficoml
outsb
mov
test
fnstcw
ljmp
cmp
das
in
mov
pop
dec
mov
xchg
fbstp
xchg
mov
fdivrs
inc
int3
pushf
rclb
and
int3
out
outsb
and
dec
sub
jo
xor
lea
rolb
int
cli
ret
push
push
mov
nop
jbe
and
dec
adc
das
mov
sbb
ds
das
loop
testb
xchg
dec
mov
mov
fisubrs
adc
lods
cmp
cmp
push
or
add
les
mov
clc
aaa
subl
sub
and
lds
insl
jae
and
jno
push
jg
or
pop
lret
mov
scas
aas
imul
sbb
pop
cmp
mov
sahf
mov
mov
sub
dec
fimuls
push
pop
and
mov
mov
pop
or
lahf
cs
cmp
and
xchg
push
push
push
or
dec
sub
adc
pop
add
arpl
lcall
fidivrl
inc
outsl
lcall
sub
pop
mov
je
and
stos
sub
sub
popf
push
sub
ds
and
push
push
and
stos
sbb
lahf
and
xor
push
sub
push
clc
in
inc
jnp
outsb
sub
xchg
sub
and
fisttps
xchg
sahf
add
scas
xchg
mov
fwait
jne
xchg
lahf
pop
stos
sahf
add
test
aas
xchg
in
push
pop
jb
sbb
ret
xor
xor
cld
add
or
adc
mov
pop
add
fsubp
push
loope
shlb
jae
fistl
in
or
xchg
sbb
jecxz
ficoms
dec
sub
inc
mov
mov
mov
sub
inc
ja
jae
sub
fnstenv
mov
mov
or
fisubl
gs
sbb
nop
imul
sub
cmp
fidivrs
repz
movsb
mov
mov
adc
loopne
add
sbb
flds
mov
mov
sbb
xchg
mov
pop
outsl
mov
xorb
adc
int
cmp
mov
loopne
xchg
cmovg
sbb
inc
sbb
or
lds
orb
mov
adc
sti
mov
repz
add
arpl
or
enter
mov
push
ss
add
and
or
inc
dec
lods
push
add
popa
push
aad
mov
in
movsb
push
imul
sbb
test
or
incb
mov
inc
pop
mov
jle
jle
xchg
mov
icebp
je
out
adc
push
jecxz
pop
pop
and
fldl
sbb
mov
aad
mov
cltd
push
insl
dec
and
ss
add
dec
mov
cmp
jecxz
xlat
insb
jl
cli
inc
imul
int
jp
jp
mov
leave
int3
and
jmp
mov
ficoml
ds
add
aad
and
and
out
add
ds
mov
out
rcrl
mov
aad
daa
and
mov
pop
cmpsb
mov
or
fbld
imul
xchg
and
push
xor
movsb
dec
dec
cmp
pop
lahf
mov
repnz
mov
push
and
push
test
push
sbb
or
cmp
inc
inc
dec
imul
sbb
xor
push
ret
pop
lcall
hlt
push
sub
enter
jae
adc
push
push
sbb
push
popf
adc
inc
into
cmp
mov
mov
add
lahf
or
fisubrs
mov
ds
mov
sbb
and
sub
and
adc
popf
pop
adc
cmc
je
mov
test
xor
mov
mov
loopne
ret
inc
in
shll
fbld
add
xor
pop
xor
pop
add
push
adc
cli
sub
testl
sub
xchg
sub
stos
hlt
add
xchg
push
dec
rcll
lods
xlat
jns
sub
jns
inc
daa
sub
mov
cmp
add
rcrb
pop
subl
mov
mov
mov
xchg
cltd
push
add
fmuls
and
outsl
cmp
push
or
scas
daa
or
sbb
mov
sbb
leave
jg
push
add
push
add
lret
inc
dec
les
xor
addr16
scas
mov
jp
add
cltd
xor
sbb
movsb
pusha
lcall
xor
icebp
lods
or
arpl
or
stos
fidivrs
shrb
es
insb
mov
lret
mov
clc
sub
adc
scas
ds
sahf
icebp
xor
repnz
sahf
cmp
sub
aas
clc
xchg
push
ds
pop
ljmp
adcl
adc
xchg
outsb
lds
rcrb
push
mov
inc
pushf
or
jmp
adc
inc
mov
fsubrl
test
mov
stos
aaa
push
inc
pusha
cli
xchg
add
fnstcw
fiadds
stos
push
push
cmpsl
or
adc
sub
dec
addr16
pop
orl
les
out
in
adc
or
data16
pop
ja
xor
mov
popa
sub
mov
lcall
outsl
pop
les
fldenv
add
mov
repz
iret
cmp
imul
sub
lret
mov
cmp
dec
das
leave
out
mov
adc
fdivrs
and
jbe
pop
out
loope
movsb
jnp
cmp
cli
outsl
and
adc
mov
mov
and
jo
pop
lods
mov
push
and
sub
or
jno
cmp
mov
fwait
nop
cwtl
mov
bound
movsl
adc
mov
lcall
dec
outsl
sub
repz
xor
notl
sub
mov
mov
jecxz
jp
add
fcompl
push
pushf
adc
xor
insb
cmp
test
jl
push
loope
jo
add
adc
cmp
dec
adc
aas
dec
xchg
pusha
push
and
gs
mov
sbb
flds
dec
lea
outsb
and
jne
xchg
xchg
push
inc
sbb
stc
jle
jecxz
stos
sbb
out
mov
int3
xlat
popa
fisttps
mov
pmovmskb
push
imul
sbb
pop
ficoms
test
adc
jnp
test
mov
xor
icebp
and
aad
jbe
maxps
mov
mov
adc
and
mov
sbb
push
adc
dec
xor
into
fs
insb
dec
sub
adc
cld
jecxz
mov
pushf
or
push
jmp
dec
mov
loope
fidivl
lahf
mov
js
dec
sub
inc
loopne
int3
sarb
lahf
stc
loopne
ret
pop
int3
and
jl
sbb
cs
das
mov
dec
sbb
mov
jmp
outsl
push
mov
sahf
xchg
and
jmp
cmp
xor
scas
lahf
dec
out
jae
push
inc
and
imul
jbe
mov
data16
adc
adc
push
sub
mov
imul
daa
xor
imul
mov
push
jl
stc
stos
lret
or
insb
lods
inc
and
out
test
shll
daa
mov
add
sbb
add
adc
pop
fisubrs
jb
push
lods
ljmp
scas
mov
sub
les
push
shll
rorl
fwait
mov
or
xor
sbb
push
jb
mov
cmpsb
pop
nop
std
xor
sbb
pusha
add
xor
mov
sbb
insb
pusha
in
dec
shll
or
pusha
or
cmp
inc
cmc
pushf
push
roll
lods
xor
loop
ljmp
icebp
fmull
xor
bound
aad
pop
push
adc
call
mov
push
out
dec
sahf
mov
dec
pop
xchg
xchg
pushf
push
jbe
out
xchg
xchg
sub
pusha
pop
not
xchg
insb
aad
add
inc
and
int3
mov
outsl
ljmp
in
sbb
pop
mov
and
in
jne
popf
jne
sbb
mov
insl
pop
xlat
aas
mov
pop
mov
cwtl
pushf
stc
and
jmp
popa
cli
or
pop
mov
push
mov
mov
cmp
lret
cmovle
jno
sbb
cli
xor
inc
adc
sub
cmp
push
inc
ret
xchg
fwait
push
sub
pop
leave
test
xchg
sbb
rcrb
bound
push
rol
push
aaa
neg
add
lods
inc
pop
inc
push
sbb
call
push
cmp
cs
xor
outsb
dec
ljmp
mov
cli
ds
sbb
cmp
push
mov
dec
sbb
and
xcrypt-ecb
cmpsl
or
push
mov
mov
and
mov
fdivrs
test
pusha
push
movsb
push
cmpsl
and
push
jbe
mov
pop
lret
movsl
mov
jecxz
loop
adc
sbb
jp
setg
notb
push
adc
push
adc
adc
push
dec
push
data16
nopl
or
data16
mov
push
scas
pop
arpl
add
cmpsb
dec
fcmovne
push
fnstcw
pop
add
lds
add
loop
mov
or
push
popa
ret
pop
pop
pop
xchg
insb
mov
push
inc
popa
sbb
std
addb
mov
movsb
stos
stos
pop
lcall
add
fcoml
push
add
insb
mov
lcall
pop
sbb
in
pop
adc
mov
dec
aad
mov
insb
mov
or
lock
pop
and
adc
push
mov
jbe
adc
jl
cmc
inc
lods
and
sysret
insb
push
lea
dec
shl
dec
push
leave
mov
pop
adc
mov
dec
js
mov
test
popf
push
test
and
and
out
popf
in
mov
inc
xor
or
inc
push
jmp
icebp
dec
mov
fs
jle
sbb
cmpsb
dec
fdivrs
sbb
dec
addr16
fcompl
sub
push
mov
data16
repnz
and
dec
push
sti
dec
inc
sbb
and
jl
push
mov
push
rclb
test
push
cs
sbb
int
inc
sbb
icebp
fisubl
xchg
xchg
cs
test
mov
adc
in
push
leave
popf
fdivrp
pop
mov
dec
jae
xchg
adc
inc
into
dec
lahf
pop
xchg
fwait
pop
lcall
lods
test
adc
fisttpll
xchg
adc
js
or
jg
daa
sbb
lods
dec
clc
adc
push
jb
scas
and
pop
dec
sub
hlt
push
loop
push
xchg
push
adc
insb
add
dec
leave
mov
sbb
jne
mov
out
sub
adc
fbld
mov
dec
inc
scas
in
mov
mov
mov
jne
dec
mov
adc
lods
dec
add
lcall
push
arpl
jle
xchg
adc
mov
pop
mov
xchg
ss
add
or
push
pop
push
xchg
outsb
rorl
ds
ret
int3
stos
int3
lahf
push
xor
insl
jbe
adc
push
bswap
inc
or
or
xor
cmc
push
inc
sbb
cmp
lcall
inc
aad
xchg
cmp
sahf
aaa
push
push
mov
or
sbb
pop
xchg
adc
in
adc
outsb
xor
dec
fsubp
and
fdivrs
pop
add
rolb
and
adc
inc
push
add
sub
nop
aad
adc
adc
inc
xchg
sbb
fcoml
ljmp
sahf
push
push
mov
add
fmull
andb
dec
add
pop
test
jno
inc
es
addr16
push
aaa
sbb
negb
xor
sub
push
aaa
sbb
fadds
xchg
fnstcw
cli
ja
cmp
mov
mov
std
dec
xor
sbb
push
and
xchg
pop
std
and
std
popf
mov
pushf
cmc
inc
dec
sti
dec
or
cvtpi2ps
es
xchg
or
mov
pop
jmp
xor
int3
inc
lea
mov
mov
or
jmp
loope
mov
sub
mov
aas
push
adc
movsl
shll
mov
and
inc
inc
xchg
iret
mov
cmp
in
cs
xchg
adc
mov
lcall
fildl
mov
int3
int
pushf
dec
iret
or
mov
or
int3
and
popf
enter
jnp
pusha
fimuls
and
lds
jecxz
sbb
inc
xchg
push
fldcw
repz
pop
xor
imul
fsubl
inc
dec
add
mov
insl
inc
test
insb
rcl
push
popa
adc
dec
jmp
mov
es
cmp
mov
sbb
cmp
sub
pushf
loope
jle
push
cmp
cmp
loopne
xor
cld
or
dec
shlb
or
jge
cltd
aaa
push
push
mov
loope
in
ret
stos
movsb
sbb
push
and
sbb
scas
out
test
push
sbb
sarb
call
ret
sub
mov
pop
jge
jae
add
inc
push
movsb
mov
adc
or
imul
fcompl
jmp
pop
cmp
jl
mov
mov
clc
js
mov
add
fs
lret
mov
dec
mov
sahf
imul
mov
sbbb
adc
add
lret
push
out
dec
test
mov
lds
dec
pop
repnz
xchg
insb
aam
add
sub
lahf
sahf
inc
shll
sbb
hlt
sub
data16
adc
mov
sahf
out
ror
es
cmpsl
pop
gs
out
and
add
es
subb
arpl
in
test
mov
mov
int3
or
setl
inc
ljmp
lock
cs
add
stos
imul
loop
jge
mov
and
adcl
test
mov
and
and
dec
roll
mov
jmp
cmp
xchg
ss
push
inc
xchg
popf
xchg
fwait
ljmp
mov
add
add
xchg
mov
daa
nop
xor
ret
pusha
pushf
xor
adc
rorl
xchg
dec
sbb
rcrb
or
cmp
cmc
cmp
dec
cmp
push
sbb
push
inc
scas
ret
or
sbb
xchg
dec
sbb
or
test
mov
pop
test
xchg
add
pop
icebp
xor
inc
movsl
cmp
vmovntpd
or
mov
dec
insb
cmp
add
adc
insl
mov
xchg
stos
jmp
addr16
adc
push
sti
hlt
inc
daa
sub
shl
push
sub
lret
fisttps
dec
mov
push
outsb
rcl
ljmp
and
push
add
push
pop
shlb
mov
xlat
stos
cmp
je
int
fisubrs
or
shrl
pop
dec
jno
dec
imul
imul
mov
adc
add
add
or
mov
shlb
jp
adc
icebp
pop
jns
and
add
jl
jecxz
cmp
dec
inc
pop
je
scas
fwait
mov
daa
movsb
mov
sub
mov
mov
rcrb
xchg
lcall
cmp
xor
out
fldl
xchg
sahf
scas
xchg
or
and
leave
adcb
xchg
aam
inc
mov
movsb
iret
jmp
lret
mov
push
in
data16
test
xor
dec
lods
or
jmp
cmp
sub
mov
ljmp
imull
mov
inc
in
push
mov
cmp
push
mov
add
loop
adc
xor
adc
cmpsl
sbb
insl
in
sarb
sub
mov
mov
push
push
pop
pop
mov
pop
and
push
and
icebp
or
jno
xor
pop
or
jmp
push
and
pop
scas
lcall
leave
jnp
movsl
es
push
and
repnz
push
aam
adc
mov
loope
mov
push
xchg
lret
daa
pop
cmp
repz
and
addl
sbb
add
ret
or
js
jbe
test
out
gs
mov
xchg
test
cmc
cmpl
inc
push
loope
enter
xchg
stos
clc
leave
dec
xor
push
pop
sbb
aad
jecxz
js
mov
cmp
xor
adc
sbb
sub
std
inc
call
les
test
repz
mov
mov
fwait
aam
ljmp
in
data16
xlat
fildl
or
scas
inc
mov
push
ljmp
test
jmp
iret
and
mov
insl
mov
or
fstpl
mov
fiaddl
jg
dec
and
and
or
xchg
push
xor
leave
sub
adc
jno
test
lret
mov
pop
sub
pop
loopne
push
inc
push
dec
cmp
loopne
into
dec
ret
imul
in
je
and
outsb
inc
pop
adc
dec
push
sbb
ds
jl
jmp
xchg
sbb
outsb
in
daa
xchg
pop
jno
pop
int3
ror
lods
mov
shrl
mov
inc
roll
outsl
add
jp
add
icebp
fwait
jle
cld
add
inc
test
jp
add
data16
and
loop
jmp
fs
iret
sbb
mov
mov
shl
jp
decl
jle
movl
jmp
insb
cmp
and
pushf
cs
out
push
lcall
inc
and
or
adc
mov
xor
stc
mov
mov
and
fwait
fs
inc
ja
adc
js
jo
pop
sub
flds
sbb
or
loop
jno
push
iret
jo
or
sbb
outsl
shrb
inc
mov
and
push
leave
mov
mov
xlat
mov
int3
cmp
jmp
sbb
es
add
mov
jns
pop
push
outsl
in
call
xchg
rcrl
ja
imul
cmpsl
and
lahf
ljmp
pop
ret
sbb
dec
stos
push
les
adc
dec
enter
sub
mov
aam
or
movsb
out
mov
bnd
mov
stc
cmpsb
mov
insl
xor
push
bound
insl
push
mov
sub
push
outsb
lret
mov
testl
jmp
adc
loope
addb
pop
loope
cmpsb
mov
scas
repnz
mov
cmp
xchg
mov
outsl
lret
xor
stc
push
imul
jb
insl
pop
scas
push
cmp
dec
mov
push
clc
pop
mov
push
fsubs
out
mull
jbe
cmp
iret
movsb
aam
xlat
clc
sahf
mov
mov
adc
aas
adc
sahf
push
jp
out
xor
rcrb
mov
int3
adc
dec
outsb
cltd
sbb
js
pop
sbb
jnp
fmull
popf
adc
mov
cmc
call
xlat
incl
pop
jl
push
push
shrd
mov
jae
push
ffreep
xchg
mov
addr16
inc
fistps
lods
jmp
or
sub
adc
insl
fildll
mov
pop
xor
fdivrs
xchg
sub
sub
dec
jl
pop
mov
in
call
popl
jnp
sbb
stc
inc
cmp
dec
dec
jb
and
xor
into
decb
stos
inc
popa
in
popf
xor
adc
cmp
add
pop
rorl
adc
xchg
dec
in
sarb
lret
repz
add
in
in
mov
ret
jo
mov
int
mov
pop
test
jp
lret
mov
adcb
cmp
cmpsb
fidivs
jg
aad
cmp
or
sar
sub
int
push
or
aam
insb
and
lods
xlat
mov
sbb
scas
jmp
call
cmc
enter
sub
push
ficoms
clc
mov
popf
subl
test
testl
and
xor
xor
sbb
out
shlb
sub
in
into
mov
cmp
mov
lahf
adcl
or
ja
stos
and
fisubrs
jecxz
dec
or
cmc
dec
xor
bound
xchg
and
stc
std
or
mov
xchg
push
push
adc
shlb
pop
jns
loopne
cs
push
aas
cmp
jae
xor
ljmp
in
popa
jo
sbb
enter
pop
scas
fisubl
mov
cmp
dec
push
or
fwait
jecxz
push
pop
push
movsb
popf
fimuls
js
sub
mov
lods
std
push
push
sub
inc
ja
in
ss
and
imul
daa
and
aam
sahf
push
insl
mov
mov
lea
or
add
push
sub
test
inc
xchg
mov
push
pop
and
les
or
sbb
adc
test
stc
jg
hlt
bound
inc
cmp
add
sub
mov
cli
sub
mov
in
cmpsb
jle
cmp
mov
xchg
jmp
cmpb
icebp
sbb
push
bound
sbb
dec
movsb
dec
adc
pushf
scas
sti
jg
and
and
pop
jbe
or
and
cmc
fs
fsubl
bound
or
mov
cld
xchg
sub
and
or
or
or
add
in
cltd
mov
xchg
mov
dec
xor
paddsb
das
ficomps
and
js
shll
test
fistpll
cmp
loope
push
cltd
pop
and
daa
iret
loop
call
and
scas
cmc
cmp
sbb
add
push
pop
jo
movd
mov
add
xchg
pop
xchg
add
add
les
adc
xor
stos
gs
mov
std
sti
cs
nop
nop
and
fidivl
jecxz
push
jle
inc
clc
cwtl
sub
and
xor
repz
sub
mov
sub
mov
stos
xor
loope,pt
cmp
cmp
fldcw
push
aas
shrl
add
shll
cmp
push
sbb
sbb
std
fimuls
push
dec
mov
sub
add
mov
cli
xchg
ret
sbb
lret
sub
push
xor
outsb
cmc
pop
lea
xchg
test
dec
pop
cmp
loop
push
bswap
fcomps
adc
test
sbb
xor
sub
adc
or
dec
mov
pop
xchg
lea
stc
movsl
or
and
arpl
cmp
hlt
bound
jbe
xlat
je
jle
add
fnsave
push
out
xchg
adc
push
pop
jmp
loope
inc
scas
sbbb
les
add
sub
ja
fisubs
push
mov
xor
out
cmc
in
cmpsl
mov
adc
sbb
or
pop
stos
stc
daa
pop
and
xchg
sub
add
pop
cmp
cvtps2pi
push
pop
jl
fldl
sarl
xor
mov
jle
mov
stc
mov
xchg
pop
xor
inc
pop
daa
or
sub
in
jge
das
add
and
sub
cmpl
pop
daa
adc
cmp
sbb
push
dec
push
ss
mov
int
nop
mov
imul
push
inc
mov
dec
movsl
jae
or
jmp
xlat
mov
sbb
push
mov
pop
subl
add
push
dec
adcb
sub
enter
jb
push
fdivs
sbb
hlt
sub
cmc
lods
aad
shlb
jge
lods
leave
cmp
jae
shll
lret
test
sub
mov
cltd
adc
sbb
push
dec
inc
sahf
or
icebp
insb
jl
pusha
out
das
and
sub
imul
aad
sbb
sahf
push
jmp
xchg
push
insb
pop
cmpsb
or
pop
daa
pushf
mov
dec
les
jnp
test
test
ficoms
data16
sbb
mov
jno
sbb
mov
cmp
mov
xchg
ljmp
dec
or
pop
inc
xchg
dec
cmpl
aam
sahf
imul
xor
and
fistpll
loopne
cmpsl
fildl
call
daa
mov
sub
insl
mov
clc
cwtl
jb
stc
pushf
imulb
loope
ret
stos
arpl
adc
rcrl
xor
or
call
cmp
pmaddwd
pop
or
sahf
mov
iret
lea
jge
xchg
mov
pop
push
sbb
jb
data16
sahf
mov
addr16
ret
mul
sbb
dec
mov
or
sbb
and
les
mov
popf
mov
pop
adc
mov
sub
into
sbb
ds
fdivrs
sbb
sti
icebp
fisubrl
and
mov
jl
push
jp
out
std
lds
imul
inc
cmpsl
adc
sahf
sbb
adc
popa
repnz
sar
insl
or
xor
push
fs
loopne
dec
in
dec
insb
jmp
lcall
cmp
les
mov
lods
scas
popa
inc
or
sbb
loope
fdivl
cmp
in
cli
inc
fstl
data16
dec
xchg
push
sbb
inc
adc
and
mov
aas
mov
cli
xor
dec
mov
push
add
loope
add
jl
out
ret
pop
cs
and
lods
shll
add
sub
jbe
cmp
cmp
stos
mov
xor
stos
imul
cmp
push
das
mov
mov
mov
bound
insb
test
mov
or
ret
loopne
xor
cs
leave
in
xchg
dec
cmp
xchg
pop
fdiv
or
imul
sarl
add
push
loope
sub
jp
jecxz
ficomps
fwait
inc
lods
outsl
cmpsl
test
push
sub
leave
or
push
sbb
jo
mov
out
loop
sbb
sbb
fnsave
jb
movsb
inc
out
popf
jno
xor
sbb
cwtl
fwait
lock
and
mov
mov
pop
aam
iret
lcall
lea
sbb
mov
and
insb
int
push
xor
push
dec
and
aas
push
cmp
frstor
and
xor
ja
subl
jecxz
lret
lret
mov
and
decl
sbb
cmp
xchg
pop
dec
lea
in
cmc
or
inc
and
addr16
lds
pop
jbe
pop
pop
lds
jbe
sbbb
test
lcall
mov
cs
xor
aaa
ja
into
repnz
mov
xor
mov
pop
scas
cld
sbbl
mov
aaa
outsl
std
xor
add
lods
pop
lock
les
push
sbb
dec
and
out
cmp
arpl
push
in
pushf
imul
sahf
aam
loop
insb
fcomps
fisttps
shll
mov
xchg
cmpsb
lahf
jp
add
cmpb
adc
push
jmp
mov
jecxz
and
adc
and
pop
sub
faddl
cmp
lods
mov
stc
ficomps
fcmovu
repz
or
mov
pop
mov
roll
sbb
xor
dec
and
sub
xor
iret
mov
or
mov
fimuls
mov
sar
sbb
clc
or
jp
in
aas
fwait
pop
dec
inc
addl
dec
sbb
ds
decb
push
pop
int3
sbb
mov
adc
adc
push
cs
xlat
sbb
and
add
jno
dec
loope
mov
rorl
aam
xor
scas
push
aad
iret
scas
lret
and
add
and
dec
adc
xchg
pop
stc
mov
cmc
jp
xchg
cmp
mov
pusha
mov
inc
add
mov
addr16
dec
mov
sub
insb
imul
leave
mov
stos
adc
clc
dec
jno
xor
inc
jl
push
fwait
pusha
ljmp
insl
sti
mov
and
cwtl
mov
jb
and
adc
out
in
or
xchg
cmpsl
xor
push
cltd
outsl
loop
cmp
push
sbb
outsb
sti
push
stc
mov
in
pushf
fmul
test
arpl
xchg
mov
sbb
fisubrl
sub
les
add
rcll
inc
sbb
inc
or
lret
std
fwait
sahf
xchg
int
outsb
imul
icebp
inc
sbb
pop
jb
fs
jge
movsb
xchg
in
setns
push
int
xor
push
into
xchg
fnstsw
pinsrw
inc
dec
inc
es
pop
pop
les
jg
dec
sbb
or
lcall
aad
cmp
pop
adc
dec
mov
jecxz
lock
das
push
fsub
push
inc
mov
adc
aam
xor
push
popa
js
xor
negl
out
push
cmp
push
insb
add
mov
andb
dec
daa
mov
lcall
add
daa
push
test
sub
call
leave
ss
out
dec
mov
push
sarb
fisttpl
movsb
popf
dec
jle
fmuls
fwait
sbb
xchg
mov
call
mov
cmc
les
and
loope
sub
sbb
adc
loop
rcl
cmpsl
push
into
in
aaa
xor
outsl
mov
dec
xchg
cmp
gs
int3
lcall
lods
es
ds
fisubs
add
decb
mov
sbb
mov
repz
and
sti
test
in
xchg
cmp
lahf
xlat
cli
and
ficomps
lods
lcall
rorb
jle
pushf
mov
ja
outsl
sub
dec
xor
jbe
pop
mov
fsubr
lret
imul
outsb
adc
mov
sub
loopne
dec
pushf
stos
out
out
inc
sbb
pop
ljmp
cltd
imul
ljmp
mov
out
and
mov
fists
push
pop
lahf
inc
int3
cld
popf
cmp
daa
push
lock
mov
fnstcw
lahf
push
jae
cs
mov
xchg
sub
jb
loope
xchg
loopne
bound
cltd
dec
xchg
sub
add
int3
mov
sub
fcomps
imul
push
es
or
lret
test
les
test
mov
aad
and
jge
xchg
dec
scas
pop
out
adc
or
iret
out
push
inc
xor
jle
int
nop
push
aam
mov
or
mov
daa
jno
gs
addr16
xor
push
mov
ljmp
popa
xchg
add
test
int3
pop
cltd
daa
xchg
orl
pop
mov
push
fildll
or
push
leave
and
sti
cs
ljmp
and
and
push
cli
push
xlat
test
push
es
mov
mov
dec
mov
mov
ret
lret
test
dec
dec
inc
addr16
inc
sbb
lds
jle
bswap
jp
mov
call
sub
or
lahf
cwtl
imul
cmp
push
mov
or
cld
nop
jle
lea
std
adc
fldcw
fcomip
xchg
jp
cmp
lcall
inc
push
mov
out
scas
jecxz
ljmp
fsubrp
int
sti
and
in
pop
add
xor
outsl
scas
jae
insb
rcll
sahf
jecxz
and
aas
fisubs
adc
and
mov
push
int
daa
fcom
push
ret
mov
rclb
mov
jp
ds
push
imull
mov
cli
test
adc
dec
or
inc
fisubrl
jb
inc
insl
mov
adc
subb
scas
fisttps
out
les
sub
popf
sbb
out
js
scas
cwtl
ds
fwait
sbb
jbe
mov
ror
or
jle
or
jae
cmpl
xchg
mov
xor
adc
sbb
daa
insl
mov
xorb
jg
and
jnp
mov
mov
inc
push
inc
scas
jecxz
scas
int
out
fadd
test
dec
or
mov
jp
shrl
es
cmp
rcrb
mov
into
iret
xor
int3
xchg
js
lods
push
pop
lcall
or
stos
and
pop
insb
mov
mov
xchg
xor
and
in
insl
mov
jle
pop
cltd
ror
sub
scas
vmwrite
pop
aaa
outsl
fistps
lret
insb
int3
mov
jge
pop
in
dec
or
jle
aam
ret
insb
lea
add
inc
into
cltd
aaa
pop
jg
movsl
push
inc
clc
mov
sub
push
or
xorl
jg
lea
and
sbb
ds
mov
movsb
lds
push
inc
inc
cmp
sub
mov
mov
hlt
xchg
lfs
adc
mov
xor
jge
add
xlat
xor
ds
ret
mov
clc
xor
xchg
push
test
push
jecxz
cs
ljmp
sbb
dec
adc
inc
daa
fucomip
xlat
cli
or
dec
mov
push
call
mov
into
jecxz
jnp
or
push
arpl
aas
adc
push
inc
test
jecxz
push
addr16
aam
sub
mov
pushf
bswap
insb
adc
mov
adc
or
pop
push
xor
push
add
jns
pushf
jge
aad
jns
popf
push
xor
xor
cmpsl
adc
adc
stos
xor
les
or
pop
jne
nop
repz
mov
mov
cmpsb
pop
jae
out
adc
lds
or
sub
push
jo
push
and
loop
dec
ljmp
push
mov
jle
mov
outsl
outsb
loop
add
stos
imul
cs
aaa
test
inc
adc
es
dec
insl
xor
dec
pop
jb
pop
push
cltd
jb
sub
sbb
cmpsl
push
movsl
loop
insb
mov
jae
push
leave
pop
jmp
aaa
fwait
shll
aad
jl
and
into
push
jecxz
repnz
dec
or
add
mov
call
and
sub
or
popa
into
insl
test
popf
inc
dec
stc
mov
or
jbe
pop
mov
or
pop
dec
jmp
jb
mov
jnp
sbb
lock
iret
ljmp
es
or
jle
push
cmp
inc
iret
pop
pop
sahf
decb
pop
movsl
movsl
sbb
mov
fs
or
je
shr
jnp
popa
pop
xchg
add
push
addr16
xor
into
fwait
pop
pop
mov
pop
adc
mov
movsb
popl
jp
xor
lea
or
sbb
pop
mov
stos
inc
cwtl
in
pop
mov
pop
inc
jp
repnz
fidivs
std
and
dec
dec
in
into
insl
cwtl
xlat
jg
sub
mov
or
shlb
adc
or
mov
inc
stos
mov
daa
inc
or
sub
cli
add
ljmp
sub
sbb
mov
ljmp
stos
sbb
add
lret
scas
gs
push
out
call
pop
jl
test
fimuls
and
xor
ja
add
ja
adc
jnp
push
cmc
mov
fs
cli
or
inc
add
dec
adc
lret
subb
add
mov
fdiv
adcb
scas
dec
push
mov
jmp
push
mov
ja
movsb
divb
cld
and
scas
mov
repz
insb
dec
fimuls
pop
push
sub
adc
int
fildll
pop
pop
sahf
imul
mov
dec
insb
call
adc
lods
sahf
imul
add
ficompl
insl
sbb
jo
lahf
ficompl
xchg
pop
imul
idivb
pop
dec
ret
push
xchg
adcb
pop
ficomps
cmp
dec
push
scas
movsb
xchg
xor
cmp
push
sahf
stos
fs
jbe
inc
cmp
jge
dec
jge
jo
lds
aad
ja
jge
data16
pop
mov
lcall
scas
ljmp
popf
ss
xor
jae
sbb
pop
cmp
iret
imul
sbb
pop
sbb
pandn
xchg
fnsave
cmp
or
popf
push
dec
rorb
push
cwtl
pushf
push
cmp
mov
jns
loope
sub
jp
or
arpl
adc
adc
add
push
subps
adc
cmpb
decb
mov
dec
push
or
js
adc
xchg
sbb
push
repnz
lods
cltd
lea
popa
fs
in
cmp
pop
jae
mov
add
jle
sbb
jno
lods
pop
add
inc
sub
adc
outsb
int3
sti
rclb
jl
jb
dec
bsf
aam
sbb
aam
outsl
rcrb
int3
dec
scas
and
mov
ljmp
mov
xor
and
add
jb
dec
push
adc
imul
dec
mov
pop
or
xlat
fcoml
add
insb
loope
pop
jge
popf
mov
add
dec
scas
or
jno
aad
addl
mov
dec
add
mov
mov
pop
add
call
jne
pop
sub
xor
repnz
and
je
cld
xchg
mov
mov
or
pop
xchg
insb
mov
mov
cmp
mov
lea
dec
mov
jl
fmuls
cltd
mov
lcall
jg
or
sbb
mov
unpckhps
mov
xor
js
xor
xor
in
inc
and
adcl
mov
adc
dec
jnp
xchg
lods
or
or
xchg
jecxz
scas
jmp
push
xchg
pusha
pop
clc
sbb
push
sbb
sbb
fstp
mov
stos
sbb
jecxz
mov
aaa
push
jmp
jp
lcall
lcall
mov
and
decl
xchg
test
or
or
mov
pop
in
cmp
in
mov
jbe
jl
in
lods
sbb
dec
stc
inc
cmp
push
jo
ret
and
fdivrl
outsb
fsubrl
pop
jb
cmp
lahf
stos
shrb
aas
pusha
inc
mov
and
dec
xchg
and
or
fdivs
push
lret
clc
es
sub
dec
test
out
int3
outsb
push
adc
push
frstor
stc
or
daa
sbb
cmp
lods
stos
adc
adc
rcll
pop
leave
mov
dec
xchg
insb
test
pop
int3
xchg
notb
pop
mov
fs
into
cmp
lret
adc
dec
inc
xor
fsubl
and
pop
daa
adc
repnz
adc
psubw
sbb
adc
test
xchg
cmc
push
mov
xlat
push
lahf
adc
add
out
adc
scas
lcall
or
imul
decl
xchg
sbb
adc
mov
loopne
mov
repz
mov
xchg
and
nop
and
and
sub
out
and
and
sub
mov
mov
imul
orb
fdivrs
lods
pop
into
scas
xor
sbb
std
pop
aam
push
adc
inc
das
ss
sub
bsf
ror
pop
push
call
push
roll
xor
imul
cmp
pop
mov
pop
push
ss
sub
push
punpckhdq
leave
std
jns
pop
fwait
cli
push
sbb
sbb
lahf
sub
xchg
push
mov
imul
add
dec
pop
fucomi
inc
stos
fldz
mov
fiadds
adc
xchg
cs
out
or
mov
inc
mov
mov
js
int
jae
xor
les
xchg
sahf
lahf
pop
dec
int3
add
adc
xchg
test
dec
mov
sbb
jo
mov
bound
cs
in
sub
xchg
notb
push
stos
out
push
mov
mov
iret
xor
outsb
xor
lea
cmp
roll
inc
insl
iret
adc
inc
lods
sahf
cmpsb
jnp
jl
jmp
mov
dec
adc
sub
sbb
push
outsl
orb
mov
out
xor
cli
ja
aaa
clc
pop
ss
in
mov
cmp
cmpsb
int
test
sbb
cwtl
fsubrl
sub
aas
mov
xor
mov
je
popa
xchg
aas
outsl
cwtl
mov
mov
stos
lret
dec
std
mov
cmpsb
leave
xlat
cmp
pminub
loope
cmpsl
mov
or
or
inc
cmc
in
test
out
or
adc
adc
icebp
ret
stc
mov
sahf
push
filds
pop
addr16
fmulp
repnz
lcall
mov
scas
jmp
jmp
inc
adc
dec
iret
jecxz
xlat
int
nop
test
pop
push
mov
add
into
inc
sub
cs
or
loope
enter
addl
jae
mov
cwtl
fcomp
push
lods
mov
aam
add
leave
loopne
inc
xor
jmp
lret
sbb
popa
add
jl
push
sbb
add
mov
fcmovnb
jge,pt
pop
and
mov
push
and
pop
push
daa
mov
iret
sub
sub
and
fnstcw
jnp
or
in
push
pushf
call
cli
cmp
xor
push
and
fstpl
and
test
push
cli
fstpl
xchg
stos
iret
inc
mov
jmp
or
xchg
sub
cmp
mov
fwait
push
addb
out
sbb
cli
xchg
ja
les
in
sbb
pop
push
inc
sbb
scas
add
or
mov
dec
add
xchg
push
xor
repz
push
negl
shrl
add
adc
or
stos
fmuls
imul
aas
dec
arpl
adc
icebp
test
and
into
lock
scas
jg
aad
push
inc
mov
xchg
mull
pop
ss
adc
cmpsb
or
insb
or
scas
fisubl
push
cmp
jge
dec
nop
adc
push
sbb
xor
and
jno
lods
cmp
rclb
adc
mov
mov
mov
pop
jb
push
clc
pop
push
jecxz
sbb
mov
and
jbe
adc
pop
mov
scas
and
mov
push
mov
sbb
pop
mov
or
into
inc
lods
rorl
std
pop
sbb
mov
push
mov
mov
call
mov
data16
push
pop
dec
or
jp
lret
sub
sub
lahf
adc
outsl
push
and
imul
psubsw
jnp
xor
arpl
inc
int
loopne
adc
mov
jecxz
push
repz
mov
cmc
add
mov
jnp
or
or
inc
xchg
cmp
inc
je
jg
cli
mov
cmp
fcompl
fisubl
mov
pop
das
mov
dec
lcall
pop
push
sahf
ret
push
jmp
xor
loopne
scas
popa
push
jecxz
jae
fdiv
out
jnp
into
aad
into
imul
inc
pop
xchg
aam
icebp
fcoms
add
addr16
cwtl
mov
cltd
imul
sarl
jae
fmulp
lcall
push
movsb
dec
adcb
aaa
pop
adc
pop
and
xchg
sub
mov
jno
push
push
adc
out
mov
cmpsb
push
xchg
sub
movsl
cs
xchg
loope,pt
push
insb
mov
rcpps
jbe
scas
aam
jge
out
lods
inc
sbb
xchg
mov
adc
shll
aaa
lahf
cmp
lahf
lahf
cli
sar
loopne
mov
xor
fstpl
push
adc
cmp
mov
jle
push
imul
inc
movsb
dec
sbb
cmp
faddl
push
pop
fwait
adc
dec
mov
test
and
leave
sbb
movsb
int
imull
jnp
add
scas
jns
lret
scas
jecxz
dec
lds
insl
or
mov
int3
ja
mov
pop
push
or
sbb
stos
push
jmp
leave
adc
xor
adc
lcall
fadds
jne
inc
jl
sub
and
sbb
aaa
shl
mov
jecxz
lea
dec
adc
mov
adc
jo
imul
lret
insb
iret
setbe
sub
push
jns
adc
aas
pop
mov
out
pushf
scas
in
push
jecxz
fisttps
and
and
inc
stos
scas
xchg
push
cmpsl
mov
xor
sub
sarb
and
jg
sbb
inc
loop
mov
jmp
imul
mov
lods
sbb
pop
leave
sbb
mov
pop
xchg
shll
repz
cld
mov
mov
xor
xor
jno
cwtl
ljmp
loop
gs
repnz
cmp
arpl
stc
inc
xor
fwait
sub
dec
fwait
insl
fmull
or
jp
xchg
insl
ficoms
ljmp
daa
xchg
aas
inc
imul
push
add
dec
mov
dec
xor
pop
pop
ljmp
frstor
xchg
mov
popa
and
pop
add
sbb
mov
inc
and
cwtl
jne
scas
or
xor
imul
xlat
cmp
mov
lods
sbb
or
das
adc
fistps
adc
pop
in
imul
sbb
dec
addr16
fdivr
and
lcall
cmp
push
addr16
push
xchg
cs
ficompl
pop
popa
inc
imul
and
movhps
push
fs
ljmp
pusha
xor
adc
hlt
or
xchg
pop
or
ret
mov
and
mov
pop
fwait
popf
dec
mov
pop
or
pop
cmp
mov
movsl
or
scas
je
lcall
sbb
jecxz
loope
aad
jp
or
movaps
push
sub
add
movq
jne
je
push
gs
adc
btr
rclb
nop
adc
or
jge
adc
xlat
fildll
xor
fcmovbe
cmp
loopne
fcomi
sub
int
lret
fistpll
xchg
mov
lea
outsb
push
shl
test
fmuls
out
cmp
lods
rcrl
pandn
push
stos
push
sub
adc
lods
cs
movsb
out
pop
cmpsl
add
ss
cwtl
cmp
sbb
pop
mov
rorl
cmp
adc
bnd
cmp
push
push
dec
sbb
cmp
lret
push
cli
loopne
inc
leave
inc
jecxz
cli
fistl
aam
and
outsl
adc
cmpsl
adc
cmp
imul
out
adc
lods
mov
and
ljmp
push
add
dec
ds
ljmp
adc
loope
dec
ljmp
and
mov
push
inc
push
xor
incb
jp
sub
sbb
rcll
adc
mov
add
mov
fstpl
pop
test
mov
stc
jle
cmp
daa
hlt
cmp
insb
push
dec
inc
and
sbb
push
add
jbe
push
push
ret
xor
xor
popf
and
adc
rcll
lret
push
inc
or
insb
and
inc
lahf
movsl
add
jnp
and
sub
adc
bound
shlb
mov
imul
dec
and
in
lcall
test
xchg
adc
test
lea
cmp
sub
mov
dec
les
aaa
cld
fs
mov
dec
in
push
mov
mov
test
sbb
mov
and
aaa
lahf
sarl
xchg
imul
mov
xchg
ss
xchg
lods
rcrb
xor
jp,pt
dec
sbb
lods
sub
pop
test
cmpsb
mov
fldl
mov
cli
fcompl
pop
xchg
cmpsb
push
sub
cmp
adcl
push
mov
leave
pop
mov
xchg
ret
sub
inc
mov
pushf
int
je
mov
push
iret
push
add
mov
nop
mov
repz
sbb
push
dec
dec
jge
out
fdiv
test
es
sub
or
mov
repnz
add
lret
or
sbb
or
sahf
push
into
outsb
and
outsb
sahf
adc
lods
sbb
sub
dec
pusha
or
stos
int3
mov
adc
or
mov
add
stos
das
push
or
sub
sbb
cvtpi2ps
mov
mov
dec
sub
adcb
scas
mov
sahf
daa
sahf
mov
pop
test
jo
into
mov
xor
adc
adc
jge
sub
sahf
pop
sbb
scas
xchg
leave
cs
test
cmp
jl
or
insb
scas
into
add
movlps
xchg
es
mov
lds
stc
or
sub
dec
cmp
mov
or
gs
nop
cltd
push
int
push
xchg
fs
outsb
or
pop
pusha
dec
daa
sub
mov
inc
cmp
insl
stos
and
sti
aam
mov
int3
sub
push
mov
sub
insl
adc
sub
mov
mov
sbb
adc
sub
xor
js
mov
adc
push
sbb
scas
adc
pop
push
enter
xor
scas
cmc
inc
out
pop
mov
xlat
setg
addr16
insb
ljmp
mov
inc
jmp
inc
cs
push
loop
int3
arpl
dec
iret
popf
lret
push
repnz
cwtl
push
bound
xor
icebp
jg
data16
cmp
push
ficoms
xchg
ret
cmp
fcoml
jae
mov
mov
fcoml
pop
cwtl
aaa
adc
arpl
scas
mov
rolb
ljmp
popf
fiadds
adc
add
fmulp
pop
ret
lret
ficoml
xchg
xchg
cmpsl
lea
adc
cwtl
int3
mov
dec
insl
addps
addr16
fdivrs
ret
mov
adc
adc
sub
sahf
iret
or
jns
mov
mov
jae
push
mov
in
int
mov
dec
les
clc
jno
cmovo
addr16
sbb
adcb
fstl
stos
call
ror
jp
lea
or
jecxz
lahf
push
cmpsb
push
push
push
xchg
sub
pop
sbbb
adc
mov
xchg
sbb
push
clc
insb
push
pushf
sbb
popf
mov
out
test
push
out
jecxz
call
dec
adc
sbb
pop
rorl
in
and
in
test
scas
sahf
jecxz
sub
pop
daa
lods
and
sbb
adc
inc
add
push
pop
push
pop
inc
lret
mov
int3
rcrb
out
fisubrl
mov
jle
aad
fmull
aam
lret
jne
add
ret
imul
jmp
sub
add
out
mov
mov
dec
sub
sub
dec
push
cs
lahf
adc
lahf
lret
mov
into
sub
fcomps
daa
and
pop
jne
dec
mov
xor
lods
push
inc
dec
add
inc
adc
jecxz
jecxz
adc
xlat
imul
fwait
lret
mov
repz
fistps
cmp
sbb
cmp
jo
sbb
and
insb
stos
sub
adc
lahf
push
pusha
push
fwait
pop
lcall
sbb
add
das
xchg
xchg
xor
add
sub
lcall
and
sub
pop
insb
dec
cmpsl
sub
lods
mov
jno
testl
inc
mov
add
adc
adc
arpl
sub
dec
xor
mov
xor
dec
sbb
xchg
fwait
xchg
or
nop
adc
outsb
or
mov
inc
fwait
jbe
dec
inc
mov
lods
mov
jns
add
pop
fcomip
out
aaa
push
iret
scas
test
test
and
fs
shr
dec
adc
inc
mov
xor
aad
in
xlat
lods
sub
inc
dec
jp
or
aad
jb
adc
test
popf
mov
dec
adc
adc
lcall
adc
outsl
aas
sub
jecxz
fcmovu
test
push
jb
aaa
adc
scas
dec
jecxz
ss
mov
imul
push
sub
dec
xor
outsb
loope
fsubrl
loope
push
push
lods
adc
jl
pop
push
xlat
pushf
pop
sub
insl
fcmovu
pop
adc
les
iret
add
pop
and
mov
fstpl
fcompl
nop
adc
cltd
mov
dec
mov
sub
lcall
scas
sub
jle
pop
sbb
mov
ljmp
scas
xor
ret
movsl
mov
lcall
loope
fsubl
jmp
movsl
or
push
pop
iret
leave
aaa
mov
insb
inc
fnstsw
sbb
add
loopne
lods
pop
dec
fsubl
cmp
push
bound
sub
adc
jle
insb
jb
daa
mov
add
insl
cmp
mov
nop
movsl
cmp
fsts
call
loopne
sahf
les
jecxz
mov
fisttpll
add
adc
pop
xchg
adc
inc
fnstcw
and
sbb
jae
fsts
mov
in
daa
leave
fs
aad
loope
call
push
xlat
xlat
fimull
xchg
xchg
sbb
hlt
imul
dec
push
mov
cmp
dec
sbb
pop
sbb
test
lods
cltd
and
jle
cmp
data16
mov
mov
insb
and
and
or
add
sahf
pop
mov
adc
add
mov
fwait
jp
enter
lret
ljmp
in
dec
push
sub
mov
xor
xor
push
add
int
loope
movsb
jnp
sub
adc
cld
xchg
das
push
outsb
mov
int3
nop
cmp
pop
in
mov
pusha
ret
ja
dec
mov
int3
test
inc
les
and
sub
xlat
sub
adc
mov
jnp
push
mov
int
es
insb
sbb
push
clc
cmp
sbb
add
add
jp
addr16
lret
xchg
test
test
daa
dec
sbb
jle
stc
ret
xor
inc
inc
add
xor
jns
pop
push
ret
dec
xchg
xchg
pop
pop
adc
jne
testl
dec
into
ficompl
jo
pop
cmpsb
outsb
mov
sbb
add
stc
or
popa
sti
sahf
das
xchg
or
xor
sub
jle
and
ror
dec
push
mov
movzbl
sub
push
or
scas
inc
daa
and
ficoml
add
ret
xor
jo
or
xchg
sti
pop
test
jns
subl
sbb
insl
sub
clc
or
adc
in
ljmp
mov
sti
push
inc
leave
mov
bound
addr16
mov
shlb
inc
mov
imul
cld
subb
sbb
cli
out
push
jl
jno
test
roll
jge
into
fwait
movsb
push
xchg
insl
push
jmp
addr16
jecxz
mov
mov
mov
jmp
or
push
iret
or
adc
inc
adc
iret
xor
iret
adc
stos
push
adc
imul
push
sub
dec
adc
loope
test
sbb
cmp
and
and
lcall
ljmp
jmp
adc
inc
lret
outsb
call
or
aas
pop
push
mov
test
test
sbb
or
or
fimull
cs
das
fisttpll
shll
out
aad
popf
sbb
or
inc
subl
jl
add
push
cmp
shll
enter
insb
lcall
rorl
mov
dec
xor
rcrl
or
out
inc
dec
outsb
sbb
mov
ljmp
pop
ja
insb
inc
in
xchg
mov
push
cmp
dec
aam
fadds
into
insl
or
jge
adc
test
xchg
out
scas
mov
cltd
sahf
aam
mov
dec
daa
and
push
cmp
aas
cmc
pop
cmc
cmc
and
insb
es
mov
push
and
les
adc
sub
dec
push
insb
std
cmpsl
scas
mov
sub
mov
xchg
mov
adc
adc
aas
pop
mov
cmp
push
push
mov
scas
mov
addr16
imul
insl
jecxz
push
mov
hlt
sbb
das
mov
mov
cli
daa
sbb
loope
push
sbb
cmp
or
arpl
insb
or
mov
jb
push
jae
sbb
dec
pop
push
leave
push
adc
mov
fadds
push
mov
sub
insb
jmp
leave
adc
popf
imul
or
sub
in
mov
cmc
cld
sbb
xchg
mov
lds
mov
fdivrs
sub
pushf
addr16
dec
cmpsb
inc
das
pusha
adc
mov
add
pushf
repnz
cmpsl
sbb
popf
enter
jp
pop
iret
push
mov
mov
adc
sahf
lret
push
out
and
iret
outsl
enter
xor
scas
jns
mov
test
scas
xchg
push
mov
push
jge
jo
or
sbb
or
popf
repz
cmp
hlt
push
or
or
pop
iret
or
xchg
daa
pushf
shll
aas
or
push
or
sbb
loopne
sbbb
ss
iret
push
and
adc
push
into
dec
pop
es
jno
fists
call
stc
lret
cmp
lea
lret
mov
or
gs
or
sbb
cmpsl
or
fstps
les
in
lahf
cmpl
mov
xor
add
sahf
pusha
or
mov
incb
cmp
shr
pop
sbb
wbinvd
jmp
adc
cmpsl
adc
sbb
es
and
pop
cmp
or
pushl
push
push
pop
test
jmp
pop
lahf
scas
mov
push
lcall
cmp
push
mov
loop
sbb
adc
jmp
clc
or
mov
push
xchg
iret
lret
xchg
lea
adc
in
in
xchg
ret
cmpsl
pop
push
adc
jp
shl
fwait
loop
sbb
insb
out
lret
jge
out
adc
sbb
movsl
adc
sub
push
pop
mov
movsb
xchg
jecxz
push
in
test
out
jnp
js
sub
setge
loopne
adc
insb
mov
xchg
push
lods
pop
movsl
adc
or
dec
jge
mov
cmp
cmpsb
add
scas
mov
xlat
sub
rcrl
adc
aam
push
push
insl
scas
mov
adc
mulb
jb
nop
fdivl
psubusw
cld
xchg
push
mov
jae
and
test
push
adc
andb
adc
jle
inc
lock
test
jge
fnstcw
push
mov
cmp
jecxz
mov
and
push
xor
js
mov
lods
enter
push
loop
mov
inc
in
pop
mov
sbbb
aas
fwait
xor
insl
adc
aam
inc
pop
inc
xchg
cmp
inc
mov
xchg
push
mov
dec
out
jle
andl
add
add
dec
add
rep
jmp
fidivrs
pop
mov
add
and
and
notb
fistl
arpl
test
fwait
push
shrb
les
pop
notb
push
std
adc
mov
outsb
insb
out
mov
mov
clc
leave
pop
add
xchg
adc
daa
nop
mov
adc
mov
push
sub
or
jecxz
push
jg
jmp
lcall
sbb
sbb
lret
jae
fldcw
add
and
and
dec
cmp
sbb
inc
repz
jae
call
lret
add
mov
push
xor
out
fcoml
push
test
pop
xlat
mov
pop
or
push
push
cmpsl
rcl
and
aaa
enter
in
test
cli
outsl
lds
push
cmp
fwait
or
push
sbb
pop
or
jmp
andb
cs
shll
pop
fdivr
stc
iret
inc
movsb
pusha
or
mov
enter
lret
jo
xchg
lea
push
adc
dec
rorl
cmovp
sub
pop
icebp
ljmp
fwait
adc
xlat
dec
insl
sub
xlat
mov
movsb
cmp
mov
mov
repz
imul
daa
xlat
mov
scas
les
xchg
cmp
sbb
or
lds
cmp
mov
dec
les
and
pop
jns
rclb
and
adc
lds
ficomps
jmp
mov
decl
or
push
xchg
xchg
mov
mov
fadds
jmp
mov
mov
add
or
jle
fadd
jmp
bound
subb
sbb
scas
pop
imul
div
mov
and
inc
jecxz
push
sub
insb
sarl
pop
jae
fldcw
dec
popf
xor
movsl
adc
je
inc
fimull
add
popf
or
hlt
cld
cmp
clc
jmp
cmp
les
add
lret
int
or
pop
mov
insb
jno
idivl
popf
jnp
in
mov
xor
sub
mov
and
adc
cli
push
xor
es
test
inc
stos
lcall
adc
jb
adc
pop
stos
test
test
pop
lcall
adc
mov
pop
in
lods
inc
cmpsl
or
dec
andb
push
std
out
push
mov
push
push
push
jp
or
pop
and
pop
nop
in
scas
shlb
push
dec
pop
pop
cwtl
lods
or
outsb
cmp
loope
push
incb
insb
cmp
imul
jo
xor
mov
aad
cs
mov
cwtl
add
sub
rcl
cli
push
insb
call
out
lock
loope
pop
mov
pop
cmp
adc
and
adc
daa
xchg
sbb
push
xor
dec
mov
push
push
or
icebp
xchg
and
rcll
mov
nop
std
les
sbb
xchg
cmp
in
insb
fmull
push
xchg
and
adc
ficoms
aas
add
adc
xor
lahf
outsl
mov
mov
adc
jp
mov
fwait
and
push
dec
decl
ret
and
cmp
roll
iret
add
adc
dec
inc
gs
and
leave
imul
test
push
pop
dec
repz
xchg
mov
push
je
mov
fwait
sbb
icebp
and
cmp
mov
xor
push
adc
movsl
push
std
daa
fdivp
pop
inc
xchg
pop
repnz
daa
fisubl
stc
or
inc
add
cmp
lahf
mov
ss
ja
movsb
popf
orb
shlb
call
outsl
jp
adcb
dec
fmuls
jo
adc
sub
xor
pop
mov
aaa
push
xor
inc
fnstenv
lret
push
shrb
mov
shrl
push
sbb
sub
sbb
jae
addr16
lcall
das
bound
cltd
lods
sub
lods
js
xchg
mov
mov
stos
inc
mov
imul
cmp
jmp
scas
lods
pop
xor
or
xor
testl
sbb
leave
ret
jge
addr16
xchg
and
int
xor
jbe
pop
and
fmull
xchg
les
cmp
mov
cmc
and
push
inc
decl
shlb
cmp
sub
adc
pavgw
sub
mov
mov
mov
cmp
lods
jnp
pop
dec
movsl
jge
add
sahf
or
repnz
push
push
jl
dec
cmp
fistps
mov
and
jbe
pop
mov
mov
mov
cltd
push
mov
insb
mov
cvttps2pi
mov
dec
lcall
fisubl
leave
jecxz
cmp
sbb
iret
insl
sbb
je
addr16
mov
fistpll
jae
scas
adc
xlat
mov
push
mov
outsb
test
cmp
push
inc
adc
sbb
xchg
pop
int3
fmull
xor
popa
enter
mov
or
add
bound
aam
imul
xchg
shl
push
mov
xor
push
add
dec
push
and
lahf
cli
push
push
pextrw
push
in
or
jmp
mov
and
mov
sub
push
cwtl
sahf
jle
mov
inc
adc
dec
sbb
das
pop
adcb
scas
cmp
push
ret
daa
push
ljmp
xchg
cmp
ficompl
cmp
lcall
jnp
scas
inc
std
or
jecxz
sub
ljmp
lods
daa
jb
sahf
aaa
notb
mov
nop
fisttps
push
adc
or
adc
adc
mov
sub
xor
mov
jecxz
ud1
and
dec
mov
mov
lods
adc
fcomp
sbb
inc
sbb
mov
les
cs
push
repz
ljmp
insl
and
ds
mov
lods
mov
push
or
inc
ljmp
icebp
aad
adc
cmpsl
pop
mov
mov
sbb
pop
sbb
pop
cmp
jg
cmc
sti
mov
or
xor
aam
std
daa
nop
ljmp
pop
pop
fnstsw
sub
dec
mov
cmp
or
daa
xchg
push
adc
shrb
mov
adc
loopne
lock
sahf
arpl
dec
adc
push
rcll
or
je
pop
ret
lods
pop
test
or
int
or
ret
pop
jecxz,pn
jecxz
inc
mov
jp
pop
mov
aad
sub
xchg
test
adc
je
mov
fdivs
nop
adc
mov
xchg
xchg
lds
sbbb
jo
adc
xchg
pop
outsb
dec
nop
lret
add
pop
popf
adc
outsb
out
das
xchg
mov
jge
xchg
push
mov
insl
pop
jbe
lods
cwtl
repz
sbb
xchg
dec
fs
sub
fisubs
addr16
nop
in
mov
adc
aam
sbbb
mov
xchg
daa
repz
add
pop
and
fwait
pop
inc
insb
insb
insb
nopl
int
sub
loopne
push
push
adc
pop
push
mov
mov
push
aas
rorb
imul
leave
dec
fmuls
scas
stos
push
and
push
repz
pop
pop
xchg
sbb
push
jns
test
movsl
pop
xchg
gs
in
adc
cmpsb
adc
dec
orb
jg
jl
pop
ds
leave
mov
fisubrl
aam
pop
sub
jmp
fsubrl
test
sub
adc
test
adc
sahf
sbb
imul
dec
jmp
push
pop
mov
sahf
push
push
sbb
mov
sbb
push
or
jae
ds
mov
pop
adc
int
icebp
into
lahf
adcb
mov
pop
insb
scas
cmp
sbb
movsb
addr16
jecxz
add
xchg
cld
loope
xchg
shll
cld
inc
sub
xlat
iret
pop
pop
or
arpl
xchg
xchg
jg
adc
lret
sbbb
pop
dec
in
xchg
sahf
push
mov
mov
jle
fists
push
dec
mov
shrl
or
jns
dec
push
lcall
cmpsl
lahf
ret
adc
lods
or
pop
test
push
jge
movsl
xor
adc
or
sti
les
lret
in
aam
popf
mov
mov
pop
js
mov
test
inc
and
push
loope
and
push
inc
push
and
push
mov
cmp
jge
mov
adc
and
sti
fiaddl
loop
ja
inc
addr16
jno
and
ss
xor
sbb
lcall
aad
adc
mov
or
out
ror
or
int3
je
cli
scas
ror
xor
imul
mov
and
es
test
mov
ret
fwait
iret
push
push
sbb
fldenv
movsb
or
and
in
sbb
les
addr16
adc
sub
xor
adc
das
add
bound
xor
pop
outsb
int3
fnsave
stc
in
lret
lods
movsb
scas
rolb
inc
pop
dec
xor
popf
pop
cwtl
xchg
in
mov
sbb
lock
lea
iret
pop
insl
or
adc
pop
add
je
bound
lods
jp
cli
sbb
mov
xchg
iret
cmp
cmp
lret
pop
in
movsl
or
jb
movsb
xor
or
or
xor
xlat
subb
xchg
inc
push
and
mov
mov
push
subb
xor
sub
jp
sbb
or
fmull
lret
push
and
inc
dec
icebp
popf
scas
bound
xchg
icebp
mov
jge
sbb
lcall
push
cs
mov
push
ljmp
addl
int3
push
mov
jae
sbb
sar
xchg
xchg
jle
sbb
scas
push
cld
push
pushf
repz
out
cmp
xor
add
scas
jbe
pop
fs
les
or
fidivl
push
add
lahf
add
mov
es
jo
pop
jp
xor
push
dec
mov
loopne
lds
and
pminsw
pop
cs
cltd
xor
sbb
pop
mov
mov
cmpb
int
js
push
in
mov
cmpsl
mov
pop
out
sbb
lods
push
adc
cmp
cmp
out
cmp
fisubrs
scas
push
scas
lahf
mov
int3
test
dec
in
adc
leave
jp
push
insl
out
sbb
and
cmpsl
test
pushf
push
push
ss
xchg
inc
pushf
std
xchg
sbb
cmp
les
push
fadds
and
out
adc
mov
adc
mov
sbb
sub
jg
and
adc
and
push
test
pop
jg
pop
aad
int3
mov
sbb
mov
test
repnz
push
or
jecxz
pop
lahf
fistpl
lret
xlat
pop
sbb
push
mov
pop
xlat
adc
cmp
lahf
sar
into
lahf
pop
inc
es
ret
cli
shll
push
ljmp
cmp
mov
imul
adc
pop
dec
and
bound
jno
sbbl
push
insl
stos
out
xchg
pop
test
ja
test
fistl
sub
or
inc
mov
fwait
lcall
sub
out
fiadds
xchg
testb
xor
sbb
xor
insb
in
mov
push
mov
pop
or
push
or
add
sbb
inc
pop
loope
xchg
jge
xchg
mov
into
lods
cmpsb
dec
adc
adc
outsl
scas
ljmp
sbb
sub
scas
sub
loopne
adc
and
fidivl
std
sub
das
xchg
inc
insb
fadds
xor
sub
cmp
icebp
pop
adc
cli
rclb
mov
dec
pop
nop
jl
out
lcall
pusha
rcrb
lods
fnstsw
cmp
cld
push
xchg
test
add
add
ss
gs
push
jp
jnp
push
popf
pusha
fidivs
mov
mov
mov
pop
stos
dec
push
lret
mov
push
insl
daa
jo
imul
stos
cmp
dec
mov
sbb
fisttpl
sub
testl
js
push
dec
jl
inc
lods
adc
push
scas
sub
ljmp
jbe
mov
adc
popa
xchg
sbb
scas
cld
dec
scas
inc
sbb
or
add
and
scas
das
push
cmp
pop
lcall
dec
enter
push
rcrb
popa
pop
inc
into
sahf
sub
mov
rcll
out
aaa
hlt
jl
fsubrs
mov
xor
sub
das
xor
jmp
mov
lock
pop
adc
mov
cmp
les
pop
lods
shlb
insb
push
sbb
ljmp
daa
mov
xchg
sub
leave
das
or
fdivp
aas
push
inc
xchg
addr16
xchg
out
dec
xchg
xchg
push
movsb
repz
jp
mov
ss
leave
outsb
cmpb
bound
adc
jp
adc
or
push
pop
test
jae
fwait
int3
add
mov
aam
pop
jecxz
test
jns
adc
jg
sbb
sbb
xor
cmpsb
jg
jmp
pop
sub
or
pop
push
sbb
addb
pop
packuswb
add
cmp
fdivl
push
popa
test
jmp
push
filds
js
rolb
dec
mov
mov
add
into
inc
add
dec
movsb
mov
sbb
out
xor
add
pop
icebp
xor
mov
push
lock
or
repz
pushf
mov
int3
pop
pusha
jmp
fidivrl
push
cmpsl
or
cld
int
ret
sub
and
cld
adc
lock
ljmp
sub
push
push
daa
jmp
mov
push
in
in
ljmp
pop
dec
sub
jbe
insl
pop
jns
lret
js
sub
adc
adc
xor
ret
dec
cmpsl
repz
jg
inc
inc
adc
out
es
dec
rcrb
mov
pusha
out
out
test
xchg
loopne
lock
and
mov
or
xor
xchg
pop
js
ret
mov
or
dec
cs
popf
xlat
in
repz
sbb
push
add
dec
adc
xor
aas
iret
ja
mov
lret
cmp
loope
imul
pop
inc
dec
fisttpll
test
mov
jne
jae
xchg
and
loop
dec
fsubrl
push
cmp
xor
insl
mov
je
in
es
mov
xchg
aad
mov
lods
mov
pop
or
lock
cwtl
and
adc
into
pop
sub
mov
adc
out
mov
mov
imul
dec
cmpsb
inc
in
jecxz
inc
lahf
jge
xor
xchg
into
insl
pop
sub
dec
sbb
jle
xchg
and
xlat
dec
pmaddwd
or
cmp
pop
mov
xor
or
rcll
sub
and
stos
sbb
daa
stos
test
jns
imul
xchg
push
sub
lods
and
mov
or
popf
add
lahf
popa
sbb
sbb
imul
cs
xlat
or
inc
test
std
stos
bts
sbbb
mov
pusha
or
push
dec
dec
push
fucom
push
pop
xchg
mov
int
stc
xchg
fs
jl
adc
addps
lcall
out
mov
sbb
repz
dec
sbb
xchg
pop
push
pusha
jmp
test
add
aas
inc
jp
out
lock
xlat
mov
stos
aaa
dec
xchg
sbb
mov
and
outsb
mov
test
cmc
movsl
and
ds
mov
test
xchg
js
pop
fstp
movsl
adc
add
and
or
sub
sub
mov
or
dec
mov
ret
mov
setp
rcll
cmp
inc
cmp
adc
mov
or
cmpsb
or
stos
loope
jns
insl
adc
les
test
pop
or
cmp
pop
daa
insl
or
adc
lds
cmp
pusha
push
rcll
sbb
jecxz
aad
or
cmp
and
sub
lcall
push
sarb
sarl
ljmp
js
push
movsl
stc
and
dec
insb
mov
lcall
pop
popa
sub
xchg
adc
xor
pop
sahf
pop
push
arpl
xor
aaa
daa
pop
push
sub
lock
add
les
ret
push
popf
sbb
cmp
xor
and
dec
negl
loop
test
ds
mov
imul
mov
and
sub
clc
rol
push
jmp
mov
pop
xlat
pop
aad
sub
push
xlat
push
sbb
dec
rcl
rcrl
dec
xchg
movsl
and
loope
daa
fstpl
outsb
adc
mov
das
je
cmpsb
add
repnz
out
mov
lock
loope
mov
ja
jg
int3
add
pop
xor
mov
push
push
shlb
mov
inc
aaa
lods
rcrl
cmp
push
int
ds
mov
mov
ljmp
or
or
add
ss
push
mov
repz
and
fwait
int
ljmp
cmpsl
stos
lods
les
and
mov
push
xchg
aam
pop
stos
xchg
fdivrs
sub
bound
and
mov
sub
pop
fadds
fnstcw
fwait
cmp
addr16
xchg
insl
lret
sbb
sbb
mov
cltd
das
aaa
pop
xchg
insb
adc
fimuls
push
push
lret
adc
pop
xchg
leave
lret
stos
jo
mov
arpl
cs
aas
jns
mov
sub
xor
lret
ss
sub
jns
xor
into
clc
xchg
outsb
add
dec
push
dec
add
mov
mov
or
incb
mov
push
mov
mov
insb
adc
int
mov
lcall
insl
inc
ret
push
fwait
mov
push
fwait
sub
mov
xchg
test
pop
sahf
pop
xor
mov
in
push
xor
cmpsb
addr16
or
dec
push
sbb
mov
mov
fdivrl
sbb
call
mov
fwait
lahf
pop
fs
or
loop
or
jmp
sub
cmp
les
sub
imul
shrl
leave
pop
jbe
lahf
notl
enter
out
in
or
aaa
sub
sub
stc
adc
test
pop
sbb
movsl
push
ja
les
xlat
jmp
das
mov
stc
sbb
stc
and
lret
insb
cltd
add
mov
gs
mov
movsl
dec
jns
fimull
les
psraw
test
decb
insb
cmp
add
pop
inc
jno
fmuls
popa
sub
sahf
xor
push
daa
mov
push
sbb
test
dec
out
adc
fs
dec
addr16
popf
inc
jmp
fcmovb
orl
jne
test
aam
scas
mov
int3
cwtl
sti
jbe
jl
adc
sbb
mov
add
jmp
xchg
dec
fpatan
jle
pusha
sbb
dec
int
cmp
jne
xor
xor
mov
jmp
lahf
mov
adc
pop
mov
sbb
mov
cs
fldz
push
pop
cld
das
sub
and
xor
clc
fs
push
rcrb
push
lods
ja
insl
pop
movnti
cmc
cmp
icebp
sub
ljmp
mov
jle
or
aaa
sahf
lret
js
add
pop
enter
jae
mov
sub
jns
addr16
push
cmp
push
xchg
insl
pop
jno
sbb
or
xchg
enter
mov
rclb
rcl
dec
pop
pmullw
int3
sar
push
das
adc
shl
sbb
push
outsb
sbb
pop
adc
mov
add
inc
push
cmovl
stos
frstor
xchg
fiaddl
or
aas
xchg
push
sbb
mov
aaa
outsb
jae
dec
mov
fucom
or
stos
xor
sbb
icebp
sbb
call
sub
je
faddp
and
cs
jl
adc
xchg
mov
mov
aad
lret
and
and
sbb
stos
mov
js
adc
pop
and
cmp
leave
imul
sub
movsb
hlt
xor
sbb
adc
add
enter
or
aaa
out
sbb
mov
icebp
imul
adc
add
mov
scas
pop
aas
adc
ljmp
into
in
inc
les
mov
outsb
sbb
push
inc
pop
push
mov
imul
rolw
adc
pop
fdivrs
ljmp
inc
sbb
add
ret
ror
dec
or
push
pushf
rolb
pop
dec
inc
stos
push
lret
mov
pop
mov
push
shrb
sub
push
mov
sub
or
adc
mov
insb
dec
dec
mov
mov
jne
or
mov
push
mov
out
xchg
rclb
fcmove
cmp
mov
pop
ret
int
out
pop
inc
movzbl
dec
lar
or
sbb
mov
sub
pop
pushf
les
roll
imul
in
or
mov
testb
dec
int3
add
fimull
rclb
jae
xor
xchg
les
push
addr16
jle
push
jmp
loope
cmp
mov
scas
pop
xchg
ss
scas
and
mov
daa
aaa
jb
popf
mov
dec
dec
push
xor
leave
pop
adc
lods
xor
popf
dec
adc
pop
repz
loope
and
lcall
jmp
dec
push
movsl
ss
mov
sub
xor
pop
and
jmp
pushl
adc
clc
jo
cltd
inc
lcall
push
clc
ds
lsl
scas
inc
inc
jp
mov
jo
push
or
xlat
fstl
sub
test
fwait
push
xlat
movsb
sbb
fimull
sbb
ljmp
in
or
mov
aaa
test
push
in
popa
leave
mov
mov
test
mov
aad
or
fmull
hlt
fldenv
add
ljmp
les
adc
mov
push
das
cli
clc
ret
insb
sub
mov
pop
mov
cmpsb
push
les
pop
mov
mov
mov
sub
ret
fstpl
hlt
pop
enter
xor
sbb
ds
jmp
cmp
repnz
push
insl
mov
paddusb
sub
into
lret
inc
and
fnstenv
leave
mov
call
stos
xor
inc
jmp
icebp
je
jecxz
or
lods
cmp
pop
sub
sahf
iret
fistpl
test
xor
ret
lods
mull
out
xchg
jno
lcall
dec
fldcw
push
mov
lock
dec
into
xchg
adc
jg
iret
adc
cmp
orl
inc
mov
cmp
cwtl
mov
imul
ja
mov
adc
cs
cmp
adc
jecxz
xor
and
adc
ret
into
ljmp
mov
scas
dec
pusha
mov
adc
pminub
insb
in
jge
jns
cmp
lock
adc
push
or
cmp
push
aaa
leave
mov
push
outsl
cmp
jbe
imul
mov
xchg
scas
lcall
mov
mov
pop
dec
sbb
sti
push
pop
add
inc
scas
jnp
insl
lds
out
xlat
aaa
loopne
mov
mov
insl
pushf
ret
js
or
mov
fsubs
insl
jnp
cmpsl
in
add
adc
mov
addr16
xchg
sub
mov
adc
mov
sahf
add
pop
lcall
cmp
mov
mov
and
mov
push
data16
int3
push
mov
cs
adc
add
and
aaa
clc
xchg
and
repz
adc
dec
mov
push
mov
inc
jns
inc
popf
outsl
dec
ljmpw
loop
and
jne
cmp
sbb
mov
sbb
data16
jmp
divl
movsl
adc
push
lret
xor
adc
outsl
fimull
call
and
xor
pop
pop
pushl
aas
jns
adc
push
sub
movsl
and
fwait
cwtl
cmp
daa
push
add
jo
dec
dec
addr16
leave
mov
pop
fcompl
cmpsl
dec
mov
out
and
mov
test
adc
add
adc
lock
pop
in
jo
mov
adc
sbb
aad
pop
dec
dec
int
jmp
inc
xchg
dec
adc
push
dec
inc
xor
cmp
dec
xchg
ret
push
dec
jbe
imul
enter
addr16
lret
mov
out
jb
push
int3
push
scas
sbb
adc
pop
mov
adc
movsb
jp
lahf
xchg
int3
dec
ljmp
mov
xchg
shr
pop
fdivrs
ret
fdivrl
test
daa
fcmovnu
cli
imul
lods
pushw
or
xor
dec
mov
pop
data16
mov
pop
or
jmp
adc
movsb
sahf
jp
cmp
divl
rorl
insb
inc
dec
dec
adc
or
push
lret
jnp
sbb
inc
es
je
jecxz
fs
int
incb
arpl
fistpll
dec
or
adc
decl
leave
mov
adc
add
lret
inc
and
insb
adc
cmp
add
mov
aam
ret
push
sbb
jo
sub
jmp
movsb
jl
inc
inc
sub
add
lds
cld
repz
testb
dec
xchg
mov
pop
add
pop
xchg
pop
fisubl
push
sub
xchg
nop
fdivl
mov
sub
mov
stos
mov
orl
pop
std
mov
ss
and
and
xchg
in
cmc
pop
dec
inc
in
adc
push
mov
or
xor
pop
pop
sub
adc
add
enter
adc
sbb
loope
repz
clc
sti
popf
pushf
lods
fcoms
pop
ds
and
pop
sbb
mov
pop
scas
imul
sbb
or
negl
in
bswap
inc
daa
bound
in
push
mov
fs
and
ljmp
sub
ficomps
cli
inc
jbe
mov
mov
xchg
mov
cmp
insl
popf
push
cli
jle
mov
inc
add
xchg
jns
cmp
dec
sbb
mov
fbld
sub
xor
push
inc
dec
mov
repz
lret
or
dec
jmp
pop
in
sub
in
movsb
leave
cmc
push
jp
dec
out
push
jbe
push
scas
lods
jne
out
sbb
xchg
jnp
mov
cmc
insl
or
mov
jle
fistpl
xchg
xor
in
inc
dec
das
seto
js
pop
dec
xor
inc
jecxz
fildll
fwait
jnp
daa
jecxz
scas
and
sub
fsubrs
iret
lock
xchg
enter
iret
lret
pushf
faddp
mov
int3
cltd
std
outsb
adcb
cltd
test
je
mov
lcall
cmp
aam
jmp
test
sub
notl
pop
test
and
aad
mov
jg
lcall
adc
inc
mov
jo
push
jl
arpl
daa
pop
fadds
into
adc
inc
sub
lcall
sbb
cmp
rorb
adc
cltd
push
push
mov
stos
loopne
xorl
sbb
sub
imul
call
mov
pop
mov
mov
repz
mov
stos
pusha
adc
or
sub
sub
test
xor
insl
sbb
out
das
lcall
cmp
jle
or
sbbb
adc
scas
jb
sbb
stos
sbb
jecxz
push
popa
shlb
push
lahf
mov
addr16
je
jl
addr16
mov
cmp
js
add
cmp
sbb
int3
push
pop
jecxz
jg
and
adc
mov
xchg
les
sbbl
hlt
lcall
mov
test
xchg
mov
and
dec
sub
icebp
loopne
jl
int
shl
je
or
add
and
test
mov
pushw
dec
push
insb
daa
jle
mov
aas
sub
or
int
sti
aam
test
push
scas
jnp,pn
es
pushf
lcall
push
dec
lods
rorb
fcmovu
stos
ss
push
out
mov
hlt
adc
fdivr
sti
xchg
pop
das
push
or
aam
jae
and
push
into
das
adc
stos
inc
dec
pop
xchg
addr16
add
aad
inc
sub
out
pop
imul
lcall
lret
adc
or
cmpsb
int
xchg
fistps
pushl
cld
ljmp
sub
data16
push
dec
and
and
sahf
cwtl
add
pop
inc
sbb
or
sub
dec
and
mov
into
sarb
cmp
imul
lea
xor
insb
xor
nop
das
adc
subl
enter
adc
pop
gs
pop
adc
cmpl
pushf
lds
decb
daa
push
and
inc
adc
in
aaa
ret
xchg
dec
popa
mov
xchg
mov
add
push
sbb
insb
xchg
mov
push
inc
lcall
mov
xlat
lahf
scas
lock
scas
push
jl
filds
add
icebp
pop
push
xchg
jp
mov
dec
lahf
sub
lods
or
jmp
es
sahf
movsb
jo
pop
push
mov
popa
mov
rclb
js
mov
sub
xor
push
daa
and
pop
push
adc
inc
jae
push
push
out
clc
jb
push
jb
or
ret
arpl
mov
out
jnp,pn
ficoml
sbb
pop
or
jge
push
in
lock
adc
pop
push
out
adc
insb
std
add
daa
dec
fwait
or
push
or
js
mov
adc
cwtl
inc
or
jecxz
push
push
and
fisttpll
stos
mov
lods
into
sbb
pop
push
or
andl
jo
and
into
jns
pop
dec
scas
rcrb
or
gs
sbb
push
jno
sub
psrlq
cs
xor
xor
lcall
add
inc
jmp
jb
repz
scas
mov
sub
mov
inc
in
lods
shlb
in
cmp
aam
lahf
or
mov
adc
repz
or
or
fdivrs
cmpsb
cld
cmp
and
sti
stc
mov
divb
adc
lahf
fwait
mov
ficompl
fwait
push
fidivrs
test
into
adc
pop
scas
and
fmuls
pusha
mov
or
mov
cs
insl
xchg
or
sbb
std
es
je
lret
jns
cmp
pop
jne
add
lret
loopne
cmp
outsb
jbe
and
daa
push
daa
stc
sbb
xor
movsb
insb
pushf
and
push
mov
pop
dec
jp
inc
cmp
cmpsb
or
sub
or
mov
pop
test
stos
sbb
and
jmp
mov
push
jne
and
push
push
popf
pop
jle
pop
inc
bound
sbb
mov
jg
popf
and
pop
pop
popf
ss
pop
sti
neg
mov
or
inc
add
xlat
adc
int3
repz
mov
cwtl
xor
or
int
mov
shll
aad
xor
lea
xor
adc
mov
outsb
xchg
sbb
loope
test
lahf
filds
pop
dec
jns
je
cs
jge
push
sbb
jge
and
sbb
mov
push
popf
mov
push
cmc
mov
push
outsb
movsl
adc
and
push
cld
xlat
pop
mov
or
sar
adc
xlat
movsl
test
cmc
pusha
or
jecxz
out
dec
or
insb
push
imul
jecxz
mov
mov
lock
and
pop
mov
ds
loop
adc
push
mov
daa
inc
pop
and
jecxz
arpl
sbb
in
pop
mov
cmpsb
mov
in
xor
mov
sbb
test
insl
out
pop
lret
and
mov
pop
fs
imul
pop
pop
adc
addb
fldl
ja
in
fs
and
sti
arpl
pushf
out
xor
loope
dec
mov
cmp
ds
cmp
movsl
inc
xlat
outsl
popf
push
in
cmp
lahf
and
clc
fisubrl
mov
lret
fisubs
inc
fsubl
aam
mov
inc
out
sahf
popa
sbbb
inc
mov
sub
mov
mov
insb
or
push
les
lds
jne
insb
xor
ljmp
cltd
mov
loope
mov
sub
in
mov
xchg
adc
inc
or
add
or
and
ficoms
pmulhuw
std
xchg
xor
fadds
out
lods
dec
pop
mov
test
std
loopne
dec
and
sbb
xchg
sbb
scas
cmp
inc
loop
adc
sub
adc
ljmp
es
push
or
adc
sub
fcmovne
insl
movsb
stos
lods
stos
repz
xchg
sahf
mov
outsl
sbb
mov
xor
loopne
xlat
pop
ss
mov
sbb
js
jl
cmp
jae
pop
aam
sub
insl
repz
adc
lods
fwait
sub
bswap
insb
nop
cmpsb
lock
loope
std
rorb
inc
ss
and
adc
sbb
arpl
jecxz
insb
and
xchg
sahf
jnp
cmpsl
mov
cwtl
xor
rcr
out
sbb
dec
jns
cltd
sahf
push
push
cmp
mov
pop
xchg
dec
pop
adc
stos
sub
cmp
mov
addr16
imul
jecxz
push
jo
lods
push
das
inc
xchg
mov
push
movsl
aam
in
dec
pop
or
mov
pop
insb
clc
adc
iret
pop
nop
mov
fxch
jle
adc
jg
adc
mov
imul
sub
xchg
fimull
sbb
push
cmpb
addr16
mov
pusha
leave
jbe
ja
mov
int3
and
or
lcall
aaa
lods
pop
ja
mov
inc
dec
sub
loopne
loope
es
xor
fmull
test
shrl
out
pusha
push
pusha
adc
push
lcall
jp
loop
mov
gs
or
pusha
cmp
mov
sahf
shrl
dec
dec
test
sub
sub
ja
jl
in
aam
mov
xor
pop
and
cltd
loopne
pop
sarl
daa
fbstp
mov
lret
aas
rcrl
cmpsl
and
into
or
setg
and
fsubrl
cmpsb
fisttpl
addr16
cli
ds
mov
lea
leave
lods
scas
imul
mov
pop
dec
jo
fcoms
ljmp
mov
cmp
push
fwait
xor
and
xchg
inc
mov
loope
mov
cli
in
adc
adc
cmp
stc
adc
jl
adc
dec
push
roll
std
popl
xchg
les
sbb
push
xchg
out
push
les
cltd
rorb
cmc
dec
and
mov
jb
imul
adc
repz
mov
fcomps
sub
jae
jle
inc
into
sub
adc
addr16
test
jae
pop
xor
add
addr16
and
inc
lret
mov
insb
mov
les
xchg
mov
pop
push
add
xor
ret
lcall
jg
test
insb
loop
mov
or
jp
xchg
js
mov
jmp
insb
and
and
cwtl
jecxz
cmp
sub
push
add
fildll
nop
mov
test
lock
adc
insl
sub
mov
mov
shll
orl
mov
inc
dec
mov
mov
adc
mov
push
into
sti
push
pop
xchg
sub
mov
fs
stc
or
push
leave
mov
and
insl
adc
sarb
mov
adc
das
add
inc
and
ds
jl
bndldx
mov
jle
push
bound
les
std
xchg
inc
nop
and
inc
cld
dec
cmp
aas
leave
jo
int3
imul
icebp
into
cmpsl
mov
inc
inc
push
aaa
xchg
and
dec
pop
jmp
push
mov
mov
push
jmp
adc
stc
and
insb
pop
pop
iret
cmp
push
or
mov
ret
sbb
rcrl
push
or
outsl
push
nop
fmull
fisubl
jns
imul
stos
jb
inc
inc
aam
push
add
int
jecxz
test
pop
jne
or
mov
push
enter
mov
hlt
lret
dec
bswap
sub
dec
jl
mov
mov
into
jmp
dec
dec
pusha
mov
and
clc
leave
jge
negb
xor
push
sbb
push
sbb
adc
lea
push
xor
shll
pop
in
or
gs
fidivrs
orb
jl
adc
jecxz
test
pop
sub
adc
or
mov
dec
lods
push
pop
sub
cmp
into
dec
pop
rolb
shrb
imul
pusha
or
pop
xor
adc
je
addr16
es
pop
repnz
insb
push
cld
xor
sahf
test
ja
push
mov
xor
stc
aaa
inc
out
adc
daa
ja
adc
loopne
mov
sbb
outsb
push
xchg
sbb
adc
sbb
repz
sbb
adc
nop
push
sbb
push
mov
loopne
sbb
sbb
xchg
enter
scas
sbb
or
jecxz
aaa
shrb
xchg
outsb
sbb
nopl
sbb
fsubr
adc
pmuludq
mov
adc
insb
adc
xchg
sbb
les
adc
mov
push
rcl
jns
push
sar
cmp
jl
mov
xchg
push
sbb
insl
popf
insb
dec
adc
outsl
fwait
cli
in
push
fs
sbb
adc
dec
int3
test
jns
xchg
int3
or
leave
push
mov
ficoms
sub
sbb
int
inc
lret
jle
adc
pop
mov
data16
mov
les
jg
or
mov
add
add
repnz
pusha
cmp
cmp
and
pop
adc
mov
cmp
inc
add
sub
imul
in
push
cmp
xchg
rclb
test
stc
fstpl
sub
sbb
lret
mov
adc
mov
insb
push
mov
xchg
fninit
cmp
daa
xchg
push
scas
pop
outsl
add
sbb
popf
adc
pop
add
clc
jbe
mull
les
bound
adc
jmp
and
xchg
sbb
ror
mov
push
adc
mov
pop
xchg
insb
cmpsl
mov
push
enter
outsl
push
dec
fmull
add
inc
mov
add
rcr
cmp
xchg
iret
into
lret
sbb
aam
sti
sub
lret
push
cmpsl
xchg
sahf
jle
xlat
test
pushf
or
call
dec
rorl
adc
jnp
lea
insb
adc
jl
pushf
mov
cmc
sbb
cmp
sub
adc
in
sbb
dec
mov
aas
dec
iret
push
sbb
sahf
bound
pop
in
mov
stos
push
pop
dec
jle
int
repnz
cmp
mov
scas
mov
push
into
into
jae
or
fisubrl
jl
subb
mov
out
mov
sbb
lfs
mov
jp
push
or
int3
fildll
mov
insl
jmp
push
wbinvd
xchg
aam
adc
push
inc
push
cs
adc
push
in
movsb
in
cld
push
inc
xor
xlat
arpl
sub
pop
es
daa
pop
fcomip
mov
stos
jae
xor
jns
insl
mov
sub
scas
out
fisubrl
mov
mov
aas
fildl
dec
xor
int
sbb
jnp
jl
cld
clc
data16
stc
test
sbb
cmp
pop
cmp
imul
lds
xchg
ja
cs
mov
cld
adc
data16
sub
add
sub
outsb
data16
dec
and
xor
sub
mov
pandn
into
pop
push
and
and
adc
test
fstpt
repnz
jns
out
into
mov
mov
dec
pop
test
nop
aaa
out
jmp
lods
leave
sub
cwtl
dec
adc
push
push
mov
sub
mov
rcl
push
dec
sbb
leave
icebp
add
mov
lea
lret
cmp
push
add
push
pop
sub
je
sbb
inc
pop
mov
pushf
int
xchg
fadd
jmp
add
pop
mov
mov
call
in
repz
into
jl
jmp
pusha
pop
xchg
imul
xchg
push
jg
mov
sahf
mov
fisttpll
sbb
cmp
jb
pushf
jb
jno
or
rcrb
push
ss
cmp
push
sbb
jb
adc
xchg
jmp
mov
cmp
pop
fimuls
mov
mov
xlat
mov
mov
sbb
mov
and
push
or
xorl
sub
or
ljmp
pop
xor
sub
popfw
pop
repnz
pop
jb
mov
dec
mov
lods
and
inc
cs
jmp
les
mov
fs
jno
clc
outsb
pop
jle
xchg
add
inc
out
cmpsb
adc
dec
add
xlat
ss
aam
sbb
fsts
insl
and
iret
xor
ja
jae
hlt
inc
dec
jns
mov
push
std
sbb
mov
out
jg
jnp
shr
dec
lds
pop
fcompl
addr16
insl
sbb
sub
in
cmp
lret
add
pop
popf
mov
dec
ficompl
push
sub
jmp
mov
in
pop
and
mov
mov
xchg
push
mov
mov
out
pop
fidivs
das
mov
mov
shrl
enter
pop
ret
xchg
repz
int3
ds
push
inc
dec
adc
inc
sub
mov
xor
mov
hlt
push
inc
xor
sub
pushf
enter
insb
jg
jle
adc
pop
sub
cltd
mov
jle
inc
pop
addr16
fdivr
jno
push
or
scas
or
ja
fwait
adc
mov
fnstenv
rcll
dec
xor
xchg
xchg
dec
clc
adc
push
cmp
out
ja
adc
imul
test
jecxz
pop
cmc
aad
and
xlat
and
inc
aad
data16
test
fsub
adc
imul
cwtl
xor
lods
pop
sub
mov
test
loope
popa
xlat
dec
cmp
in
or
adc
enter
shrl
jmp
pushf
mov
frstor
hlt
pushf
vmwrite
inc
pop
mov
rorl
lahf
mov
fisubrl
fnstcw
xchg
push
es
int
int
lock
lcall
cmp
outsb
outsl
adc
out
lock
cmp
insb
inc
cmpsl
and
jno
cmp
pop
mov
fwait
aas
push
adc
jle
pop
dec
lods
pop
mov
mov
jmp
rcrl
and
addr16
mov
sub
stos
pop
pop
ret
mov
cmp
pop
add
mov
popf
and
push
mov
add
sbb
push
xor
outsb
out
ret
incl
xor
or
enter
adc
pop
xor
insl
mov
jp
dec
hlt
div
ret
ja
dec
call
mov
stos
fsubp
lahf
push
mov
and
ss
sahf
bound
mov
mov
pop
ds
cmp
subl
jnp
sub
out
mov
sub
or
insl
adc
test
hlt
adc
mov
repz
cmc
imul
loope
fidivrl
add
dec
inc
stos
inc
sbb
sbb
sbb
in
scas
js
xchg
jl
lahf
xchg
mov
xor
mov
cmp
dec
sub
mov
outsl
int3
jmp
jb
imul
adc
mov
pop
jle
cmp
test
sbb
push
adc
mov
aaa
fdivs
lcall
push
pinsrw
dec
test
cltd
xchg
int3
mul
mov
pop
cs
jp
xchg
fistpll
aam
push
ret
mov
xor
xor
push
jle
xchg
cmp
std
mov
in
inc
aam
cmpsl
lock
rcll
lret
jge
adc
pusha
repz
add
int3
call
push
test
mov
mov
fsubl
inc
jl
addr16
jecxz
xchg
adc
lret
jge
mov
mov
cld
imul
xorl
cs
sub
inc
dec
push
push
jmp
out
mov
nop
xor
loope
fsts
jmp
cld
fsubp
cmc
ds
mov
adc
aad
into
mov
out
lods
and
cli
js
scas
mov
and
loop
or
lods
scas
mov
fadd
push
sub
push
sbb
push
cld
sub
mov
adc
jnp
cmp
cmpxchg
sbb
or
add
pop
mov
lods
loopne
push
js
sub
sub
mov
hlt
sbb
lods
xchg
adc
sbb
pop
adc
sbb
inc
dec
push
push
clc
mov
lret
inc
lea
insl
and
pop
push
or
lahf
imul
aad
sbb
dec
xchg
insb
and
sbb
stc
dec
sub
cmc
cmp
xor
jae
fmuls
into
sub
nop
andl
inc
add
inc
push
shrb
pop
rcrb
jl
jns
fildll
mov
test
insl
mov
pop
cmc
arpl
inc
jl
inc
jae
xchg
stos
adc
and
lahf
test
sbb
xlat
or
cmp
sbb
mov
jbe
cmp
outsb
and
insl
push
mov
daa
cltd
fcomps
in
add
lds
lea
fsub
mov
sarb
jmp
pop
push
add
les
dec
insb
lahf
pop
push
xchg
sbb
push
std
push
int
in
test
pop
lret
andl
testl
push
imul
int
test
adc
push
pop
push
xchg
mov
pop
fs
jb
xor
mov
sub
stc
pop
pop
out
cmp
xchg
xor
out
lods
jmp
jb
mov
xchg
fnstenv
adc
mov
push
and
sbb
outsb
mov
mov
jmp
pop
xor
pop
or
dec
das
or
fsubl
gs
and
mov
or
mov
add
cwtl
adc
dec
insb
popa
test
sbb
pop
stos
sub
fstps
scas
jg
in
inc
cmp
lods
sub
pop
sbb
fsubl
into
lods
fbld
jecxz
es
iret
xchg
and
int
aam
ds
int3
in
and
bound
xchg
aad
arpl
mov
or
mov
dec
add
mov
xchg
mov
xchg
std
bound
add
sbb
fildll
aam
jp
insl
ds
fisttps
fsts
andb
dec
imull
inc
jo
es
insb
pop
pop
fs
and
pop
lret
jno
es
ror
imul
pop
negl
scas
dec
or
imul
and
cmp
mov
adc
or
shlb
push
lods
icebp
dec
inc
push
ret
jmp
adc
or
fildl
aas
pop
pushf
test
call
out
cwtl
idivl
mov
xchg
fdivrl
mov
cmp
std
jecxz
sti
test
fwait
mov
mov
add
mov
packuswb
and
out
in
mov
or
fadd
test
mov
xor
cmp
mov
xor
insb
cmc
push
mov
push
out
sbb
sbb
adc
pop
adc
adc
jp
aas
pop
lods
mov
movzbl
out
idiv
cmc
ret
xchg
iret
push
stc
int
into
loop
adc
in
ja
int
mov
fmul
jmp
mov
jge
insl
nopl
jp
jnp
ret
pop
lahf
pop
data16
sbb
mov
sub
xor
lret
ret
jbe
pmulhw
inc
dec
and
xor
fnstcw
scas
mov
test
test
imul
stos
test
mov
lea
mov
xchg
lret
insl
push
xchg
push
xchg
insb
sar
adc
mov
xor
xchg
pop
adc
sbb
jmp
lret
mov
icebp
adc
psubusb
jmp
ud0
adc
sbb
lret
outsb
jmp
sub
addr16
pop
fdivr
aaa
loope
xchg
fbld
or
or
mov
je
into
jae
jae
xchg
and
mov
cs
fmuls
lret
test
repz
and
mov
test
imul
mov
out
push
jmp
into
dec
ret
push
ds
xchg
std
jle
test
loopne
lret
jmp
addr16
pop
insl
pop
sbb
xchg
push
mov
sbb
mov
dec
jae
pop
mov
xchg
movsb
js
subl
popf
jb
sbb
test
rcrl
add
sbb
insb
sub
ljmp
sbb
lds
sbb
cltd
jmp
int
inc
addb
or
mov
xchg
push
jl
inc
xlat
inc
mov
sbb
lcall
or
jmp
xor
in
pop
xchg
mov
aas
fcoml
inc
aas
dec
insl
fmull
mov
mov
xor
scas
sbbl
dec
inc
jmp
mov
pop
mov
mov
sub
adc
sub
addr16
add
arpl
je
out
dec
icebp
or
lret
mov
dec
add
push
out
adc
movsl
insl
xlat
daa
mov
xor
and
ds
jmp
fmulp
roll
hlt
popf
pop
cmpsb
adc
xchg
xor
insl
mov
add
iret
arpl
xlat
dec
add
sub
or
sbbb
and
lea
xor
dec
movsl
jns
mov
and
jmp
lret
ljmp
mov
dec
dec
jns
pop
call
xchg
pop
js
mov
cltd
sub
icebp
fs
jnp
pop
into
imul
les
popl
daa
fldenv
dec
test
inc
sub
pop
shl
add
add
xchg
fimuls
mov
movsb
or
push
stos
push
cli
mov
mov
jecxz
sub
aaa
test
rcrb
push
push
js
lahf
fdivs
inc
mov
adc
add
mov
loopne
cmovno
xchg
pop
inc
scas
xchg
loopne
sub
and
adc
lds
in
adc
sbb
sbb
outsl
lock
adc
or
push
rolb
sahf
les
int
arpl
das
or
pop
sahf
int3
cmpsl
jnp
loop
cmp
enter
pop
xor
popf
notl
fadds
sahf
mov
jo
sbb
cmp
into
aam
mov
mov
adc
add
mov
sub
arpl
pop
lods
inc
fwait
add
pop
mov
sbb
pop
mov
cmp
int
les
int
in
add
ud1
adc
fistl
mov
scas
adc
dec
popf
addr16
fcoms
cli
add
shll
mov
pop
mov
xchg
adc
push
and
out
xlat
addb
dec
xchg
inc
and
jp
dec
cwtl
scas
xchg
out
enterw
pop
xchg
mov
jp
push
sahf
or
dec
pop
adc
inc
push
mov
dec
pop
or
push
aad
jbe
mov
lcall
pop
push
loope
or
and
imul
mov
xor
and
ds
sub
sbb
aam
aam
cmp
push
and
push
jbe
or
sub
pushf
ja
insb
xchg
mov
xlat
pop
push
sahf
fs
pop
test
pushf
dec
insl
in
pop
mov
stos
sbb
sub
sbb
mov
xchg
push
fisubrl
lahf
in
dec
and
and
jb
scas
in
dec
insb
cli
int
cli
mov
dec
mov
xchg
aam
cmpsl
cmp
test
insb
test
mov
pop
xor
push
jno
stos
test
sbb
subb
popf
xchg
mov
pop
fdivrs
pop
ja
jle
mov
outsl
and
sub
call
sbb
mov
into
inc
or
pushl
mov
pusha
leave
scas
shlb
cmpsl
fisttpl
fnsave
jmp
jnp
mov
popa
cltd
xor
add
jmp
xchg
dec
and
mov
or
mov
inc
cli
test
leave
xchg
orb
les
ljmp
pop
loop,pt
nop
test
mov
hlt
mov
inc
pushf
xor
fsub
movb
cmp
ret
rcll
sub
or
xchg
repz
loop
rcrl
fidivrs
xor
dec
sbb
jle
mov
inc
jbe
add
jno
dec
xchg
or
and
enter
sbb
jne
outsl
ja
jno
insl
jecxz
int
push
mov
lods
or
push
jp
or
lods
ret
pop
lret
mov
push
adc
ss
and
fsubs
rorb
inc
les
mov
add
inc
leave
pop
ret
sub
fcmovnu
ja
jne
mov
pop
mov
leave
cmp
jl
jle
insb
insl
fsubrl
data16
mov
bndstx
imull
or
push
leave
scas
inc
imul
mov
shrl
jbe
imul
test
test
out
fcomps
add
dec
mov
jmp
cmp
fwait
adc
mov
mov
dec
insl
leavew
aas
push
lea
mov
rcrl
das
dec
jle
popf
pop
sahf
adc
les
ret
xorb
push
lahf
out
xlat
pop
cmp
inc
cli
pop
and
inc
inc
sbb
loope
sub
mov
jl
mov
add
popf
es
ret
jl
insl
and
xor
rorl
jp
xor
sub
movsl
push
icebp
mov
ss
inc
sti
repnz
pop
mov
mov
cmc
xor
pusha
add
pop
setg
lods
insb
fistps
lods
into
cmpsl
sbb
mov
in
inc
and
mov
es
jo
es
cs
cmp
pop
add
in
sbb
or
insb
inc
mov
inc
bnd
adc
xchg
inc
mov
mov
push
pop
in
or
jl
lahf
test
dec
inc
pop
or
push
adc
jae
cmp
xor
shl
insl
imul
leave
cmc
push
in
pop
push
dec
daa
mov
pop
mov
rcrl
imul
cmp
xor
xchg
push
cmpsl
cs
arpl
ljmp
mull
jnp
scas
jecxz
mov
repnz
fsubr
dec
add
sbb
adc
in
faddl
jle
lea
pop
int
inc
cmp
sbb
inc
xlat
enter
dec
adc
mov
and
xorb
push
inc
mov
pop
jecxz
fidivrs
pop
inc
mov
sysenter
std
in
or
pop
add
fisubrs
mov
xchg
mov
push
ss
into
daa
jge
stos
cmpsl
pushf
jmp
push
mov
xor
dec
and
xor
inc
sbb
lret
frstor
or
xor
or
sbb
push
sub
and
adc
add
ret
bound
push
icebp
out
das
psubw
in
push
sbb
cwtl
out
pop
test
mov
xchg
adc
aam
repz
dec
sbb
stos
repz
stos
ja
lcall
mov
sbb
sub
aas
lods
cmc
pop
mov
cld
sbb
jl
push
push
push
sub
lea
in
inc
mov
arpl
sbb
push
lds
jg
repnz
frstor
movlps
push
cmp
dec
sbb
dec
scas
or
imul
push
sbb
cld
fistpll
insb
sub
into
int3
enter
xor
mov
pop
mov
ret
rorl
inc
xchg
sbb
mov
arpl
xchg
push
xor
lret
mov
add
fwait
push
cmpsl
sbb
gs
insb
push
adc
push
or
shrb
call
sub
push
aad
cli
sbb
int
xchg
dec
addr16
testl
push
xchg
pop
dec
sbb
out
addr16
daa
sbb
pop
adc
aad
lcall
pop
hlt
xchg
cltd
mov
out
dec
push
outsb
adc
pop
es
or
mov
adc
sti
mov
outsl
cmp
jge
insb
xor
push
adc
sbb
pop
push
ret
pushf
adc
xchg
mov
jae
cmpsb
sbb
mov
cmpsb
inc
pushf
dec
jo
movsb
pop
inc
xchg
movsl
sahf
sub
std
scas
daa
nop
sub
fs
into
xor
sbb
mov
popa
mov
negb
push
mov
cli
pop
mov
into
pop
insb
aam
sub
pop
mov
outsb
pop
xor
mov
mov
stc
lcall
pop
xchg
pop
jmp
xor
pop
inc
sbb
outsb
push
in
sub
loopne
jg
sbb
in
adc
sbb
fisttpll
std
mov
inc
sahf
dec
mov
cmpsl
add
mov
pop
inc
jo
xor
xchg
jb
xchg
gs
fisubl
roll
pop
inc
sti
stc
adc
sbb
or
or
les
popf
cmp
mov
and
es
pop
int
repz
and
cltd
fwait
sbb
mov
stos
or
je
sub
inc
stos
push
adc
stos
stos
dec
lock
stc
pop
xchg
insl
pop
mov
sti
xor
pop
enter
cmp
xchg
pop
mov
fcoml
iret
stc
pop
dec
mov
mov
fisttps
and
xchg
sbb
inc
xchg
lds
insl
or
inc
pop
mov
cltd
daa
cmp
xor
mov
push
adc
or
lods
add
out
inc
fwait
cwtl
mov
xchg
bswap
sbb
sbb
push
mov
sub
fcompl
mov
iret
push
inc
popf
and
dec
fisubs
rcr
outsb
mov
or
negb
mov
xchg
and
lahf
adcl
lcall
shlb
lahf
enter
imul
adc
lahf
test
mov
or
push
inc
mov
xchg
dec
mov
push
xchg
adc
adc
xor
pop
adc
mov
ficoml
or
push
fs
cltd
adc
lret
loope
imul
push
push
cmp
adc
sbb
xchg
xor
cmp
inc
arpl
xor
pop
mov
clc
nop
pop
xchg
and
aas
push
and
lret
push
mov
repnz
adc
sbb
and
aam
push
out
push
dec
lret
test
sbb
sbb
aam
sub
mov
adc
in
adc
xor
aam
cmpsb
sti
mov
leave
push
adc
pop
adc
push
xor
xlat
sbb
mov
xchg
outsb
xchg
push
fcmovbe
setl
cs
and
es
adc
inc
or
push
lret
aad
lret
add
lock
add
sub
pop
adc
pop
cmp
add
and
and
aam
cli
mov
pusha
xor
dec
or
jle
or
sbb
inc
xchg
int3
mov
leave
lods
xor
fs
pop
dec
cmpsl
pop
and
push
sub
push
sbb
sub
dec
je
mov
rcr
pop
scas
or
lock
adc
pop
mov
aad
jbe
lods
gs
adc
jns
cmp
mov
wrmsr
lret
jle
adc
cmp
lret
add
adc
lcall
int3
jo
icebp
fstps
pusha
dec
nop
push
popa
adc
push
insl
xor
shrl
loope
and
xor
adc
insb
pusha
sbb
shlb
cltd
inc
cli
mov
push
pop
push
mov
leave
int3
dec
adc
das
jmp
es
adc
mov
pop
and
into
fiaddl
mov
mov
or
pop
enter
repz
das
ja
jecxz
dec
lahf
daa
mov
mov
int3
ds
mov
mov
je
adc
decb
push
subb
aam
outsb
lret
insl
xchg
sub
dec
and
mov
fnstcw
dec
push
or
inc
pop
repz
movsl
or
sbb
push
ret
mov
popl
test
mov
add
add
lret
sbb
and
lds
xchg
test
cli
sbb
xchg
push
adcb
inc
push
xchg
sbb
and
xchg
cvtpi2ps
add
mov
cmp
or
dec
inc
jno
mov
fs
xor
not
adc
and
outsl
out
lock
sbbl
xchg
jp
inc
push
sbb
xchg
fwait
je
adc
mov
fcomps
popa
stos
out
jns
pop
inc
xor
daa
aad
sub
insb
bound
and
insb
mov
adc
out
sub
aaa
cvtpi2ps
iret
insl
out
je
or
ret
add
jb
rcr
movsb
pusha
or
sbb
cli
push
call
push
cli
mov
pop
pop
push
jbe
adc
xchg
loope,pn
push
mov
push
lods
mov
ret
sub
push
cmp
cmp
or
mov
add
ret
sbb
push
add
pop
push
sbb
inc
das
mov
repz
push
mov
mov
xor
add
jae
xchg
sahf
dec
sub
movsb
lods
inc
sarl
push
sbb
push
push
pop
pop
xchg
aaa
sbb
aas
mov
je
adc
mov
cs
pop
pop
or
inc
cmpsl
rcrb
cmp
xor
aad
mov
sub
dec
inc
cmpsl
dec
fmull
sbb
lret
js
pshufw
mov
jo
sub
incb
add
jg
push
lea
push
mov
aad
ret
loope,pn
jge
lret
mov
xchg
push
out
sbb
adc
mov
in
adc
adc
pop
adc
push
outsl
insb
inc
loopne
scas
push
mov
cmp
xor
nop
aad
inc
ret
dec
test
insl
sub
shrb
mov
mov
xorb
cwtl
fmull
popa
or
and
scas
xchg
mov
lret
jmp
add
xchg
emms
lahf
cmp
xchg
add
loopne
or
cltd
insb
call
aad
inc
mov
add
les
insb
adc
mov
xor
xor
mov
ss
xchg
xchg
cmp
roll
leave
mov
aam
push
and
sub
adc
imul
stmxcsr
push
popa
je
pop
sub
pop
das
ds
faddl
or
pusha
pushf
or
mov
jge
fs
and
push
aad
les
jle
cltd
mov
test
dec
push
mov
psubusw
push
dec
out
setbe
repz
or
mov
enter
lea
mov
jl
mov
stc
adc
imul
cld
in
jne
pushf
jae
mov
dec
sbb
adc
test
push
orb
mov
dec
adc
pop
pop
jae
sbb
pusha
xchg
adc
aas
adc
sub
pop
subb
pop
xchg
dec
or
pop
sub
push
adc
out
scas
adc
jle
outsb
leave
fsubs
ljmp
stos
xchg
out
in
nop
lds
lock
xor
cmp
lahf
sub
xchg
enter
push
fistpl
iret
mov
adc
clc
and
pmovmskb
aad
mov
jo
mov
in
mov
xchg
adcb
mov
jnp
aam
xlat
psubq
aad
sbbl
mov
push
mov
xor
dec
jae
cmp
and
and
xor
and
fidivs
adc
adc
sub
scas
adc
jno
xor
pop
lods
lcall
mov
jnp
cmpsb
es
mov
mov
and
push
mov
sub
inc
dec
subb
sbb
xchg
repnz
or
push
fiaddl
cmpsl
xchg
xchg
ss
push
push
movsb
adc
add
fwait
lea
adc
cmp
fstl
xor
mov
adc
fsub
adc
repnz
cmp
inc
mov
dec
incb
pusha
fsubrl
imul
pusha
add
mov
inc
sti
pop
lods
movq
xchg
cltd
movhps
and
sbb
adc
enter
lods
sub
loopne
adc
pushf
xchg
lea
lock
inc
sbb
adc
adc
and
xchg
and
lcall
pushf
es
pop
inc
sahf
adc
ja
arpl
push
cmpsl
cli
pmaxub
fisubs
and
repz
lock
ja
sbb
adcb
dec
mov
adc
repnz
xor
xor
into
fwait
adc
sahf
das
sub
xlat
and
jle
adc
outsl
pop
popf
insb
push
stos
ljmp
xchg
push
sbb
clc
or
xchg
fwait
testb
out
add
imul
test
push
jl
xchg
dec
packuswb
jge
xor
daa
or
xchg
mov
cwtl
lea
xchg
mov
xor
scas
mov
push
cwtl
lahf
mov
and
loopne
lret
pusha
pop
or
jnp
cltd
fsubr
dec
pop
sbb
sbb
push
pop
sbb
dec
fisttpll
or
adc
jecxz
add
mov
mov
mov
nop
and
and
cmc
cmpsb
outsl
pop
mov
sbb
mov
sahf
outsb
adc
and
mov
loop
xor
xor
xor
int
cmp
jae
sub
cmp
and
inc
and
test
xlat
into
shll
xchg
xchg
cmc
jmp
popa
and
ds
insb
push
sbb
cmp
dec
mov
sbb
and
int3
mov
out
test
push
push
test
add
cltd
mov
mov
inc
lock
push
mov
mov
inc
push
xor
sbb
mov
xor
pop
xchg
fmul
or
lret
mov
fstpl
rorl
call
aam
mov
jle
push
insl
adc
adc
in
lret
aam
cwtl
cmpsb
dec
add
jp,pt
mov
mov
xor
add
xorb
bswap
test
mov
loop
leave
mov
loop
jp
aam
fs
fucomi
pop
movsb
bound
xor
mov
outsb
lret
in
stos
incb
addr16
imul
imul
test
mov
and
xor
mov
push
jmp
xchg
or
or
sbb
mov
rorl
sbb
into
pop
xor
or
or
in
jmp
push
insl
das
pop
push
push
mov
xor
test
sbb
adc
insb
addr16
jmp
insb
fnstsw
xchg
mov
xor
int
in
xchg
mov
bound
jae
je
addr16
fstl
or
mov
dec
push
and
or
bswap
mov
bound
or
xchg
out
lds
adc
lret
mov
cltd
addr16
jae
gs
push
addps
pop
iret
fs
xchg
mov
xchg
sbb
push
pushf
add
dec
pushf
pop
push
jle
mov
subl
mov
movsb
dec
lcall
mov
inc
aad
stc
adc
leave
pop
cmpsb
mov
xor
pop
hlt
neg
push
das
leave
insb
mov
adc
push
subl
add
adc
les
and
jns
push
insb
xchg
imull
xchg
lcall
dec
into
jge
cmpb
inc
mov
xchg
int
mov
cli
les
sub
jecxz
faddl
and
mov
jl
pop
shl
popf
repnz
xchg
adc
fdivp
xor
push
cltd
jbe
cltd
or
fdivp
sub
bound
or
cmp
jo
shll
subl
or
mov
or
and
into
in
and
sub
sbb
inc
pop
push
bswap
pop
mov
ret
jp
lea
sbb
movsb
dec
sbb
das
add
fmuls
mov
sub
leave
and
sub
push
fabs
outsb
lahf
jg
lcall
scas
or
in
and
mov
mov
jg
sub
xor
jecxz
xor
movsb
insl
out
adc
dec
lgs
push
push
mov
pop
mov
xchg
mov
rclb
push
sbb
insb
int
mov
xlat
and
imul
fucomip
pusha
or
icebp
and
xchg
push
int3
cli
cmp
lret
loopne
xor
pop
dec
gs
xchg
or
dec
iret
les
or
jns
cmpsl
dec
pop
jno
xchg
adc
mov
mov
addr16
or
adc
adc
sarb
inc
pop
mov
or
fstps
or
mov
cmovno
pop
sub
shrl
xlat
ja
fisttps
mov
sti
mov
stos
adc
leave
xchg
imul
adc
loope
mov
dec
je
mov
cwtl
dec
test
sub
sti
add
mov
movsb
leave
shll
push
lods
push
stos
and
pusha
cld
mov
or
or
nopl
xorb
pop
scas
dec
and
push
push
sub
stc
stos
cmp
insl
iret
xchg
adc
sbb
insl
bound
sub
dec
cld
sti
out
mov
stc
inc
loopne
les
dec
pop
insl
dec
sbb
ja
stc
pop
scas
xchg
cli
lret
jle
mov
divps
or
jp
sub
push
mov
sti
xor
les
iret
bound
sbb
enter
test
dec
mov
push
pop
pop
jno
aam
push
js
jnp
outsb
adc
add
fnstenv
adc
ljmp
sbb
mov
pop
sbb
mov
xchg
dec
pop
inc
mov
clc
add
jle
lods
pop
sbb
sbb
bound
adc
mov
sbb
push
mov
push
xchg
push
lret
repnz
loop
aad
lock
adc
push
or
stc
lods
pop
insb
dec
pop
xor
sbb
xchg
dec
mov
ja
ja
push
pop
stc
sar
push
or
lret
js
dec
cmpsl
dec
cmp
mov
faddl
xchg
and
cltd
adc
push
repnz
bts
or
pop
sbb
dec
orl
adc
fsubs
pushf
in
mov
inc
out
in
cwtl
cmovbe
jns
adcb
sahf
or
or
fadds
or
mov
mov
mov
lods
insb
dec
pushf
adc
adc
bswap
sbb
stos
or
stos
mov
adc
cld
mov
cli
cmp
jle
pop
pop
rorb
push
push
cmpsb
fiaddl
fadds
or
popf
pop
dec
aaa
lods
push
and
adc
lea
adc
xchg
mov
into
filds
cvtpi2ps
inc
push
js
insl
out
repz
cwtl
or
xor
pushf
fwait
sub
jb
loopne
sarb
popa
adc
divl
adc
fstpl
push
jp
pop
das
mov
push
sbb
push
push
repnz
push
sbb
scas
mov
fwait
es
sbb
aaa
mov
stos
in
subl
sahf
mov
and
ja
pusha
das
jo
cmp
sbb
bound
mov
paddd
sbb
cmp
mov
cmpsb
jo
dec
and
and
pop
sub
into
shlb
fmull
in
loop
and
in
je
xchg
ljmp
aad
outsl
sub
pop
add
sbb
cmp
les
pop
es
clc
xor
inc
aaa
shll
push
in
leave
dec
sbb
push
xchg
dec
jmp
iret
mov
and
mov
dec
nop
push
arpl
dec
jmp
dec
pusha
mov
in
xlat
xorl
xchg
out
std
addr16
out
cmp
aam
inc
les
xchg
pop
adc
aad
and
punpckhdq
sub
add
jno
inc
pop
rcl
mov
pop
les
sub
sub
fisttps
push
mov
ds
les
aam
mov
fildll
inc
xchg
rcl
push
shll
aad
jnp
fimull
lcall
lea
dec
addl
popf
mov
mov
lods
enter
dec
and
push
dec
xor
cmp
lds
xor
int3
dec
or
xchg
lcall
jno
mov
ror
repnz
or
jmp
mov
inc
iret
test
pusha
in
repnz
scas
fimuls
aad
dec
jg
cmp
ret
adc
lcall
pop
std
adc
mov
cmp
add
outsl
push
or
roll
pop
mov
or
pop
jb
sbb
dec
dec
mov
sub
push
xor
aas
xor
sub
int3
cmp
mov
xchg
xor
out
push
add
inc
lcall
dec
mov
add
push
mov
pop
push
sbb
sub
add
and
cmp
or
mov
out
push
pop
lcall
int
add
into
insb
in
xor
push
fmuls
dec
sub
popa
push
pop
stc
leave
mov
xlat
lea
fwait
cli
insb
testb
mov
out
push
cmpsb
ret
sub
push
and
push
ss
xor
mov
cmp
push
movsb
push
fidivs
mov
cmp
mov
popf
adc
xor
sub
rclb
shll
dec
cs
cmp
lahf
fldl
add
test
xor
movsl
adc
sbb
adc
add
iret
mov
popa
lret
hlt
fcompl
jp
int
add
mov
cmp
dec
mov
xchg
aaa
int3
xchg
xchg
in
das
call
es
push
adc
pop
push
push
mov
and
sahf
inc
sahf
mov
in
mov
out
sha1msg2
dec
jb
loope
cld
pusha
xor
dec
jb
out
dec
rorb
mov
push
iret
pusha
or
cmp
lahf
lcall
xchg
sbb
and
dec
sub
or
adc
outsb
sbb
sub
push
xor
fucomip
push
scas
or
mov
add
lods
or
mull
ds
adc
jle
pop
xor
sbb
cltd
lods
xor
pusha
inc
push
cld
mov
pop
push
cmpsb
adc
jno
cld
sub
jb
jle,pt
inc
shl
and
push
sbb
sub
into
popf
or
mov
cmp
loope
mov
adc
xchg
sbb
dec
outsb
mov
adc
bound
iret
or
push
shrl
enter
fs
push
lahf
pop
pusha
dec
sbb
mov
dec
jo
dec
mov
inc
cmp
mov
or
imul
inc
xor
push
sbb
in
outsb
adc
test
sub
jg
test
test
repz
test
jecxz
sbb
jno
or
and
cwtl
mov
mov
sub
sub
mov
sbb
cmp
push
add
daa
out
mov
mov
sub
or
push
mov
iret
fisubrs
cmpsl
aam
xor
mov
sbb
shrb
xor
jecxz
or
pop
dec
fdivrs
daa
or
lahf
rcrl
xor
adc
jno
loope
dec
xor
or
ljmp
addr16
xor
fcomip
into
fnstcw
jno
stos
mov
sub
out
jnp
jp
aaa
cltd
add
mov
sbb
fstpl
mov
pusha
jo
add
fldcw
pop
aam
inc
sbb
mov
insl
jmp
iret
xor
add
adcb
push
adc
jo
test
loope
pusha
xchg
ds
test
sub
sahf
xor
ret
push
jae
adc
cmp
pushw
loopne
mov
xchg
and
push
mov
jg
das
arpl
inc
cmc
add
xorl
inc
into
outsl
lret
cmp
sbb
mov
mov
adc
push
lods
xchg
or
push
add
sub
lahf
adc
pop
pop
fisubrs
fildl
mov
adc
push
pop
cs
mov
std
pop
mov
sbb
push
sahf
int3
xor
add
mov
pop
sahf
je
adc
hlt
das
cmp
addr16
push
cmp
xor
push
mov
and
sahf
sbb
adc
push
popa
insl
pop
sub
pushf
fwait
jnp
fwait
sahf
xchg
fwait
pushf
adc
xchg
inc
pop
sbb
sbb
outsb
mov
push
push
sahf
stos
and
push
cmp
and
mov
loopne
sahf
aam
bound
int3
cmp
lock
jp
sbb
scas
lret
jmp
cmp
push
popa
lahf
mov
or
sbb
inc
push
cmp
and
push
pop
pop
xchg
lahf
loope
xor
leave
packssdw
xchg
adc
cmp
pop
xor
sub
xchg
aad
fiaddl
aas
dec
fisttps
sbb
pop
ljmp
or
punpcklbw
and
adc
imul
dec
imul
push
adc
jp
dec
pop
xchg
scas
pushf
add
repnz
rclb
cmp
xor
bound
cwtl
cwtl
add
stos
adc
out
xchg
adc
vunpcklps
sbb
mov
push
jl
mov
push
pusha
shl
pop
mov
dec
mov
mov
lods
daa
aad
repnz
flds
pop
bound
es
xchg
shll
xchg
or
rol
ret
repz
pushl
aam
pop
rorl
pop
cmp
das
es
or
push
mov
pusha
mov
popa
and
jae
pop
arpl
int
aad
lret
xor
mov
int3
push
cmp
pop
add
push
add
sub
sbb
insl
adc
dec
scas
adc
xor
negb
mov
mov
xor
test
xchg
sub
stos
mov
fdivrl
jp
enter
and
xchg
cli
sub
and
sbb
dec
loope
fwait
daa
out
stos
sbb
les
jmp
daa
pop
push
or
jb
push
mov
cmpsl
bts
rcrb
sbb
jnp
sub
xor
sub
ds
aas
and
push
jle
cmpsb
jecxz
jnp
vmread
shrb
stos
int3
stos
xor
repnz
js
push
cmpsl
sub
cmpsl
js
mov
daa
dec
outsb
cmc
imul
xchg
loope
adc
sub
pop
dec
inc
repnz
imul
cmp
fldcw
xchg
sbb
mov
xor
dec
sbb
dec
sub
xchg
data16
stos
mov
sub
pusha
mov
add
lret
push
adc
lret
sbb
dec
daa
pop
test
adc
in
daa
mov
callw
ds
es
adc
inc
and
pop
sub
and
push
nop
pop
cmp
sbb
sub
fst
pop
xchg
imul
adc
pop
pop
daa
push
pop
adc
outsl
sbb
mov
cmp
lods
arpl
push
jbe,pn
push
xchg
fwait
or
lods
xchg
push
mov
dec
adcb
fwait
push
and
dec
sub
xchg
dec
or
mov
dec
add
rol
xchg
lea
push
jae
pop
mov
sahf
add
fwait
mov
jp
stc
cli
dec
add
inc
jge
movsb
dec
push
or
pop
test
mov
in
sti
in
xchg
pop
div
add
aad
fs
insl
xchg
or
mov
dec
xchg
aam
and
and
push
push
cmp
mov
or
lahf
xlat
or
and
adc
mov
popl
scas
push
jae
mov
push
ds
xor
mov
pop
test
stos
push
cmc
xor
push
jae
and
daa
mov
dec
shll
add
sbb
popf
outsl
ss
cmc
adc
outsl
push
jnp
dec
add
lahf
sbb
call
cltd
fisubl
jo
repz
add
daa
mov
jnp
inc
jmp
push
xor
int3
or
mov
jns
xchg
pop
cwtl
or
daa
dec
movsb
int
jmp
push
adc
mov
xor
gs
push
into
sub
jmp
pop
sahf
std
mov
xchg
add
mov
test
addr16
xor
dec
int
stc
jle
scas
push
mov
cwtl
daa
lret
and
int
lock
jns
cwtl
stc
xchg
adc
shrb
xchg
sub
push
jecxz
jns
testb
and
insb
sbb
mov
test
add
adc
mov
adc
push
pop
pushl
cmp
and
or
sbb
sbb
into
mov
fisubs
add
outsb
inc
daa
movsl
cmp
sbb
dec
pop
addr16
and
jp
into
jns
mov
mov
test
add
adc
and
pop
mov
loopne
mov
pop
aad
movsl
push
cmp
or
ljmp
les
mov
lock
mov
pop
sbb
push
ss
fidivl
xchg
fmuls
cmp
adc
adc
xlat
or
or
mov
sbb
mov
stc
push
into
dec
sbb
adc
pushf
cld
push
sub
push
loope
adc
btc
push
and
jle
pop
and
jnp
pop
mov
out
nop
int
cmp
orl
pop
adc
push
pop
xor
xor
cli
dec
cmp
in
sti
cmpsl
test
mov
outsl
fst
movsb
mov
adc
sbb
adc
imul
push
jo
add
pop
adc
sahf
push
in
xchg
jle
adc
pop
aad
cmp
mov
das
dec
scas
in
pop
outsl
in
js
les
push
ljmp
or
push
xchg
sub
out
cltd
or
or
or
jae
xchg
xlat
call
jl
imul
test
sub
pop
into
mov
pop
loope
adc
push
xchg
push
leave
ss
mov
mov
mov
into
pop
jmp
sbbl
ret
ss
xlat
mov
adc
pusha
adc
out
push
push
xchg
dec
adc
pushf
adc
sbb
jecxz
jne
sahf
dec
cmc
push
sbb
pop
cmpsb
xchg
loope
bound
sbb
mov
sbb
push
push
cmp
xchg
fisttpll
jecxz
lock
or
lods
nop
nop
or
fadd
or
lods
adc
imul
filds
sbb
push
pop
add
dec
std
faddl
pushf
sbb
mov
stos
push
dec
cmp
and
mov
cmp
stos
lret
in
sub
cmp
outsb
mov
pop
iret
lcall
xor
aam
insb
sti
xor
sti
rol
lret
cli
je
lahf
or
and
xor
adc
pop
add
fwait
adc
mov
jne
insb
sbb
dec
es
sti
add
and
sub
insl
adc
into
jp
xchg
les
sbb
sahf
adc
insl
cmp
push
pop
mov
ret
test
inc
aaa
pop
outsb
cli
adc
adc
repz
adc
clc
dec
imul
xor
ljmp
mov
ja
jge
lods
pop
lock
into
stos
pop
jmp
in
jno
or
sbb
mov
pop
das
stos
sbb
inc
sbb
pop
xchg
decb
mov
push
add
and
push
inc
imul
sbb
sub
lcall
push
fsubl
sub
outsl
movsl
sbb
and
mov
das
hlt
sub
ljmp
sub
inc
das
push
mov
xchg
inc
inc
aam
outsb
push
add
sahf
fnstsw
pop
mov
add
sahf
or
mov
cmp
lahf
pop
xchg
cmp
mov
sbb
and
sbb
cs
imul
mov
and
mov
sbb
cmpsb
sbb
sub
ss
shlb
outsb
mov
mov
outsl
xchg
ud2
mov
nop
xchg
fwait
push
cmp
mov
cltd
cmp
jo
inc
jae
jge
push
push
jns
mov
mov
pop
push
push
mov
xlat
add
mov
mov
mov
jne
sub
pop
mov
sbb
inc
ret
pop
mov
scas
gs
sbb
lcall
jecxz
pop
cmc
sarl
pop
pushf
loop
sbb
jo
mov
in
xor
mov
jg
fbstp
mov
pop
lcall
jl
cltd
sbb
adc
xor
lahf
pushf
arpl
divb
pushl
sub
inc
pop
and
repz
out
adc
ficomps
dec
xor
lcall
pusha
mov
push
add
xlat
sahf
sbb
push
sbb
cmp
push
add
andl
pushf
dec
dec
dec
scas
sub
push
shrl
sbb
mov
iret
xchg
xchg
dec
lea
mov
popf
mov
dec
mov
mov
dec
into
push
test
shrb
mov
lcall
adc
cwtl
addb
lods
jle
jp
faddp
leave
popf
fstps
movl
jmp
stc
push
jmp
sbb
std
or
clc
add
mov
cmp
mov
sub
add
xchg
or
push
loopne
dec
pushf
cmc
jl
and
stc
xchg
imul
cld
ret
and
std
mov
mov
es
and
sub
fs
jae
jmp
push
adc
aaa
xchg
je
and
sub
sub
jns
cmc
cmp
into
sbb
cmp
das
xchg
sub
lcall
int3
sti
sbb
jnp
xchg
test
iret
adc
int
negb
sub
lock
xchg
outsb
xlat
sbb
push
inc
mov
or
sbb
or
int3
or
pop
cmp
mov
pushf
add
iret
pop
and
lahf
and
cmp
outsl
daa
jb
sub
pop
sub
ljmp
xchg
push
sub
rclb
aaa
orb
shrl
repnz
cmp
xor
sub
repnz
inc
or
inc
mov
mov
cmp
inc
xor
or
daa
sbb
aam
push
jno
lds
adc
or
dec
cmovge
or
imul
mov
push
mov
adc
iret
leave
daa
push
sbb
adc
sarb
iret
sbb
int3
and
les
insl
daa
push
xor
mov
xlat
out
lret
dec
xor
cmp
fcmovnu
or
sbb
leave
fidivl
and
jns
shrl
xchg
ljmp
insb
push
sahf
test
sbb
movsb
fmul
sub
fdivrl
in
push
bndcu
incb
daa
mov
inc
pop
dec
in
push
push
test
repz
jge
rcll
dec
cmp
push
imul
ficoml
stos
push
iret
jns
rclb
in
mov
lret
and
pop
test
data16
jecxz
mov
and
sub
or
xchg
push
es
cmp
push
mov
push
xor
rorl
xchg
or
or
dec
dec
out
push
jmp
dec
push
push
data16
lods
mov
dec
pusha
inc
jb
jnp
cmp
xchg
lahf
int3
sub
ficompl
mov
ljmp
mov
and
ret
pop
outsl
sahf
or
insb
pop
shll
scas
pushf
pop
mov
lret
mov
fiaddl
enter
jae
adc
scas
mov
jp
mov
pop
adc
nop
scas
sbb
adc
das
lea
dec
mov
jmp
jp
or
cmp
sahf
fmul
jnp
into
pop
aas
cwtl
nop
movhps
sbb
mov
and
mov
and
sub
adc
cmp
mov
jne
jae
sub
ret
mov
sbb
movsb
mov
and
push
daa
adc
addr16
dec
ja
addps
fcmovne
xchg
lahf
push
push
add
icebp
push
and
xor
in
shlb
sahf
adc
pushf
sub
dec
aad
pop
pushf
inc
pop
lret
aad
sbb
in
mov
fcompl
jns
nop
addr16
insl
cwtl
stc
adc
das
pop
dec
push
ds
shl
dec
mov
mov
push
cmp
not
xor
pop
pop
push
pop
sbb
jecxz
push
or
sti
aas
mov
adc
push
adc
sub
adc
aas
data16
jecxz
mov
xchg
adc
insb
pop
shl
jg
or
mov
mov
add
pop
and
dec
sbb
mov
jbe
and
ja
divl
dec
mov
add
mov
xchg
insb
maxps
xor
fimuls
xorl
dec
xchg
testb
into
mov
pop
sbb
into
jb
sahf
sub
and
cmovp
jnp
stos
imul
rorl
jl
xor
jns
mov
rorl
lods
mov
dec
add
jae
ljmp
jp
xor
adc
pop
adc
add
imull
fs
push
out
sbb
push
lea
and
add
jp
ret
sbb
scas
fdivrl
jge
mov
inc
insl
pop
in
mov
movsl
pushf
sarl
lods
mov
movsl
inc
xor
lret
ss
jbe
xor
fmuls
xchg
into
fidivs
xor
jmp
cmp
les
popf
inc
pop
into
andb
xor
inc
fldenv
test
jl
es
stos
loopne
je
adc
mov
iret
jne
dec
out
adc
pushf
jne
dec
rorb
mov
or
outsb
mov
dec
cmp
loopne
push
mov
jne
xor
movsl
push
mov
push
and
nop
mov
push
adc
aas
cmp
fwait
dec
ja
cmp
push
cmp
mov
adc
dec
xchg
icebp
adc
adc
mov
dec
jle
push
rclb
push
and
popf
sbbb
andnps
pop
cmpsb
jg
lods
cmc
cld
adc
repz
mov
jns
shlb
mov
adc
movsb
push
dec
add
pop
and
jne
fimull
aaa
bound
fisttpll
mov
pop
sub
pop
lcall
leave
fcmovne
jl
leave
xchg
push
and
jle
setg
ja
xchg
xchg
sub
adc
adc
pop
fistps
sub
lret
mov
aaa
xchg
jns
lcall
mov
fsubl
les
and
dec
pop
int3
sbb
leave
into
sub
push
push
mov
mov
xchg
subb
inc
rcrb
pop
sub
adc
js
faddp
repz
int
xchg
sub
xchg
mov
inc
mov
cmp
add
push
push
icebp
imul
sbb
inc
loope
jo
scas
push
sbb
push
stos
inc
dec
test
rcl
push
outsb
pop
jno
shrb
pop
loop
int
adc
fimull
xchg
push
sub
or
inc
push
das
movsl
es
add
sub
xor
adc
inc
pusha
push
jnp
in
pop
je
sub
lods
and
popf
cmp
rorl
push
jl
cltd
jns
jmp
shr
jl
test
call
loop
out
push
mov
xchg
push
pop
jbe
or
fidivs
clc
imul
adc
sbb
add
and
push
cmp
lock
push
test
enter
outsb
mov
pop
mov
pusha
mov
pushf
stos
das
sbb
pavgw
mov
pop
xor
lcall
jbe
push
cmp
xchg
out
stos
insl
adc
lahf
jns
cs
xor
and
push
and
scas
mov
mov
mov
and
xchg
iret
popa
and
inc
lcall
aaa
dec
pop
jecxz
lcall
mov
insb
adc
stos
add
adc
stos
push
adc
pop
and
adcl
jmp
out
out
lea
cld
das
mov
mov
pop
insl
arpl
pop
test
mov
dec
fs
xchg
dec
add
mov
pop
fimuls
adc
cmp
shlb
ds
add
pop
testl
xchg
push
adc
fsubrl
shlb
in
movsb
adc
jbe
fmulp
mov
xchg
repz
mov
sub
sbb
sbb
sbb
jbe
aas
cmp
scas
adc
push
stos
lcall
sub
mov
inc
or
mov
sbb
imul
add
sbb
mov
pop
std
pop
inc
mov
mov
mov
addr16
ret
sub
sub
cld
inc
adc
push
out
enter
adc
pusha
scas
sbb
push
repnz
pop
sub
add
and
lcall
jno
int3
sbb
or
movsl
lock
mov
dec
adc
fdivl
bound
cmp
and
movsb
mov
fisubrs
lods
push
in
xor
cs
or
aaa
movzbl
jp
fs
fwait
lahf
mov
adc
shrb
sahf
adc
xchg
jbe
clc
ret
fsts
in
sbb
cld
stc
pop
clc
push
rcl
daa
cmc
gs
loopne
outsl
mov
icebp
push
cwtl
je
dec
xchg
iret
sbb
and
mov
ss
lods
fwait
outsb
mov
adc
or
xchg
test
fwait
sub
cmpb
pop
lea
test
clc
in
mov
xchg
jmp
push
sbb
xchg
les
rcrb
jecxz
jg
mov
xor
xchg
lock
dec
ljmp
adc
push
jle
jecxz
test
dec
add
xchg
inc
aaa
mov
cmp
aam
cmp
push
adc
outsb
leave
popf
or
nop
addr16
dec
cmp
mov
and
add
add
jne
add
into
fldcw
cwtl
loope
test
pop
pop
mov
push
or
jo
sbb
mov
mov
arpl
into
sbb
stos
loope
data16
xchg
adc
inc
repz
xlat
jl
mov
xlat
adc
jecxz
add
scas
adcb
sbb
leave
xor
cwtl
or
mov
push
lea
pop
sub
or
aaa
mov
cltd
sub
ret
cld
xor
add
and
push
daa
das
es
mov
jb
push
mov
adc
xor
and
push
lds
ja
ljmp
inc
repnz
hlt
aam
push
jg
sbb
cld
jl
sahf
adc
push
mov
sbb
cmc
mov
dec
xchg
out
xchg
push
pop
popf
dec
xchg
xor
mov
xchg
pop
pop
les
shll
pop
outsb
cmp
jnp
xchg
repnz
adc
sbb
pop
cmp
lcall
push
inc
pop
or
rorl
jecxz
stos
aam
ret
dec
out
fldt
adc
sarl
sahf
add
push
dec
std
ljmp
call
or
insb
mov
les
cmp
adc
adc
jmp
loopne
cmp
jno
dec
inc
cmp
add
test
xor
sbb
pop
cmp
leave
xor
shl
cmpsl
xchg
mov
jle
fimull
outsb
loope
push
int3
mov
fcoml
nop
enter
call
loope
inc
outsl
mov
or
push
fildl
cmp
repz
add
mov
lret
out
ds
sub
mov
movb
mov
add
lock
sbb
sub
es
sub
mov
mov
inc
in
enter
daa
call
jge
jecxz
mov
ja
fisttps
pop
add
iret
outsl
push
lods
add
pop
orl
jae
jl
and
and
add
jo
dec
xlat
push
insb
jg
jp
pop
insl
sub
cmp
and
scas
outsl
cmp
fcompl
jg
or
leave
sti
and
nop
dec
addr16
punpckhbw
inc
in
jo
pop
mov
fcompl
xlat
arpl
adc
and
stos
pusha
and
mov
sahf
jl
and
fwait
fs
fs
je
xor
jns
cld
push
in
inc
inc
and
stos
xchg
mov
dec
dec
jmp
sub
or
imul
out
mov
loop
les
mov
xchg
dec
pop
aam
rcl
push
in
rclb
adc
adc
pop
sub
fucom
jo
adc
leave
mov
xchg
push
sbb
fldt
je
adc
fisttps
insl
mov
or
mov
xchg
adc
sahf
sbbb
adc
xchg
sti
sbb
mov
mov
stos
loope
mov
and
rcrb
loop
pop
shl
sbb
adc
mov
lcall
rolb
mov
addr16
push
inc
test
jp
cs
fisttps
cwtl
outsl
pop
pop
cli
push
jecxz
push
shld
xor
outsl
push
mov
xlat
cmp
or
mov
aad
push
fcompl
jno
pop
fcompp
xchg
fnstsw
jp
or
xchg
pushf
jno
in
insl
or
stos
mov
mov
sahf
fcomip
jbe
dec
fwait
in
dec
mov
pushf
xor
jl,pt
pushf
inc
jbe
xor
xchg
fisttps
sub
mov
dec
aam
sbb
rcrb
dec
fcoms
dec
fiadds
sub
adc
pop
push
pop
adc
movntq
xchg
lods
ficoms
es
xchg
pop
and
faddl
xlat
addr16
sub
mov
push
xchg
repnz
clc
push
aad
clc
dec
loope
mov
fdivs
packssdw
mov
pusha
cmpsb
fldcw
push
and
into
push
push
out
or
roll
and
xchg
cmp
addr16
test
icebp
mov
fdivr
clc
adc
sub
or
xor
and
add
loopne
outsb
int
adcl
lods
lods
push
mov
mov
mov
mov
lea
and
inc
in
inc
adc
pop
std
cld
sahf
nop
or
push
sbb
fidivl
and
jle
rclb
add
arpl
xlat
jns
fisttps
cltd
jne
lods
adc
mov
adcb
pop
stos
mov
adc
sub
mov
sbb
divb
xlat
ficoms
and
cs
mov
outsb
sub
notb
leave
mov
popf
cmp
enter
stos
fwait
int3
ljmp
fwait
or
xchg
in
loop
lods
adc
cmp
scas
outsl
ficompl
adc
cld
mov
or
pop
fiaddl
leave
out
sbb
dec
push
aad
int3
out
cmp
push
mov
pushf
mov
inc
ret
or
push
pop
xchg
or
in
adc
push
sbb
repz
lahf
mov
dec
push
jnp
ret
dec
inc
dec
scas
dec
xchg
pop
push
test
popf
or
test
bndldx
mov
push
mov
push
mov
jbe
popf
mov
scas
addr16
push
pop
push
mov
adc
mov
mov
mov
fnsave
popf
lahf
add
nop
aam
test
cmp
mov
std
int
pop
jmp
in
fsubrp
jnp
sti
adc
std
jmp
cmp
cmp
push
aas
cmpsb
pop
lods
cmp
and
cmp
add
daa
adc
xchg
push
enter
add
mov
pop
or
xchg
popf
out
sbb
push
add
sbb
mov
xchg
xchg
adc
fiadds
sbb
rep
ja
mov
xchg
loopne
cmp
pop
dec
daa
push
or
cltd
je,pt
nop
jnp
xchg
or
mov
cli
movsb
adc
push
sahf
xchg
pop
jmp
jmp
or
std
sbb
mov
push
popf
mov
pop
xchg
mov
mov
add
cmpsb
scas
rcl
rcl
jmp
cmp
adc
xchg
pop
adc
xchg
daa
sbb
aam
fidivs
roll
or
push
xor
faddl
jmp
leave
fwait
jmp
mov
dec
jl
add
and
pop
or
pop
cmp
push
and
inc
lret
sub
jecxz
mov
rcrb
fdivr
xchg
sti
or
add
mov
lea
mov
xchg
push
dec
movsl
cs
popa
lods
cwtl
add
int
jae
jne
and
sub
adc
cs
inc
mov
adc
push
insb
lcall
or
xchg
dec
flds
jmp
pushf
cmp
lods
lea
test
cmp
push
mov
lds
xchg
setne
sub
xchg
hlt
cld
and
aas
lds
jl
lahf
jecxz
fdivrs
test
inc
or
aad
insl
out
lret
inc
in
ret
add
adc
sahf
lea
ss
mov
lods
fwait
xchg
push
test
or
test
loope
dec
cmp
push
int3
dec
adc
shll
mov
push
pop
xchg
sahf
cmp
dec
repnz
dec
push
decl
dec
dec
and
sbb
outsl
xchg
into
lret
daa
push
inc
fisttps
ljmp
dec
mov
test
andb
mov
jp
popf
addb
int
fisttpll
fwait
iret
insb
in
sbb
aad
les
pop
in
or
push
or
xchg
mov
dec
ret
int3
fcomps
or
or
jnp
xor
adc
adc
fldcw
stos
xchg
mov
and
int3
lods
test
adc
mov
jp
add
int
lret
xchg
mov
cs
add
pop
cltd
and
sbb
inc
les
pop
lea
add
incl
es
sbbb
sbb
jns
fcomps
cltd
mov
sub
or
or
dec
sub
mov
adc
scas
xor
out
or
cmpsl
pushf
rcll
mov
mov
into
ss
mov
pop
sarl
jmp
in
pop
jmp
jge
pop
call
paddd
inc
xchg
xchg
mov
shll
cmp
mov
and
cmpsb
fmull
mov
popf
imul
mov
repz
lods
add
jne
push
push
jp
xchg
daa
out
mov
aas
aam
pop
inc
pop
mov
hlt
scas
aam
adc
mov
fstpl
adc
adc
adc
popf
add
pop
xchg
sbb
xchg
pushf
sub
insb
sub
stos
into
sbb
dec
mov
sub
jp
and
scas
test
test
cltd
mov
pop
jecxz
aad
xchg
xchg
lds
or
xor
je
fimull
mov
jb
push
fsubrl
popf
pop
sbb
adc
adc
nop
mov
or
sbb
push
sub
push
sbb
push
fadd
packuswb
inc
xchg
loopne
sbb
push
sub
and
sti
daa
mov
sub
pop
ljmp
push
fisttpll
and
xchg
sbb
add
mov
pop
sbb
xchg
lcall
lcall
adc
lret
int
add
sub
inc
icebp
sbb
sbb
cmp
jno
and
mov
cmpsb
stos
lea
movsb
sub
mov
cs
push
add
aas
cmp
pop
cmp
sbb
sbb
mov
lcall
push
mov
jmp
das
lods
inc
jmp
out
add
cltd
cltd
je
test
sub
push
jbe
or
aas
sub
sub
add
jp
subb
sub
cmp
or
out
fistpl
cmc
push
mov
les
push
add
insl
mov
xor
sbb
clc
or
adc
mov
sub
les
mov
push
ljmp
out
stos
mov
inc
insb
out
push
insb
mov
cmp
fdivrs
cltd
xchg
adc
iret
sbb
clc
rol
push
sbb
mov
in
sub
sbb
fbld
push
sub
adcb
pop
sub
mov
outsb
pop
addr16
dec
je
pop
push
sub
fisubrl
sbb
sub
cmp
adc
fisubl
imul
std
add
pop
xchg
dec
adc
test
pusha
sbb
pop
insl
out
pop
sub
mov
daa
push
dec
subl
cld
add
roll
mov
fcoml
data16
shll
push
pusha
inc
inc
or
sbb
out
dec
into
int
mov
push
xchg
dec
leave
fmul
mov
imul
bound
dec
cltd
mov
rclb
lahf
add
sbb
insl
and
popa
mov
xchg
or
push
push
or
rcll
adc
push
adc
testb
pop
jae
adc
sub
pop
mov
xor
push
sbb
lds
add
jns
out
daa
mov
fdivrs
and
jae
fwait
mov
cltd
lcall
jo
iret
or
xor
or
sti
into
mov
or
hlt
xchg
fsubs
adc
cld
dec
pop
movsl
aad
das
leave
adc
mov
lret
jp
stos
shr
ficoms
sahf
popa
sub
jl
cmp
sub
jns
jns
shlb
lods
push
loope
inc
sahf
cltd
clc
push
fsubl
inc
imul
ljmp
jmp
pop
in
jge
adc
jecxz
insb
push
dec
push
jge
push
jmp
mov
daa
js
cltd
in
test
sti
dec
push
jmp
and
push
int
outsb
sub
xchg
cwtl
outsl
dec
notb
add
dec
lods
test
jae
test
jle
test
xchg
pop
sub
insl
ja
jno
cli
scas
adc
cwtl
addr16
sub
lock
lahf
push
outsb
icebp
inc
pop
mov
inc
lahf
shlb
inc
pop
leave
jge
out
mov
fdiv
popf
call
sub
and
inc
cmp
sub
push
adc
sub
cs
aam
in
rcr
xor
xchg
xor
pop
xchg
fcomps
insb
sub
insl
sub
int3
dec
dec
mov
cld
sub
dec
and
xor
sbb
xlat
dec
or
mov
push
xor
arpl
pop
cmc
sub
jb
push
or
mov
pushf
inc
dec
mov
or
pop
outsb
fs
imul
jns
orb
sbb
loop
or
push
dec
insb
cltd
jo
jmp
xor
xchg
outsl
out
and
das
xor
or
fsub
adc
xor
sbb
or
sub
push
in
xchg
scas
adc
push
inc
jmp
pop
sbb
sub
stos
lcall
orps
int3
rorb
push
xchg
mov
push
dec
int3
rorb
lcall
xor
shrl
xor
add
mov
mov
dec
mov
sub
shrb
ficoms
pop
lea
adc
xor
scas
es
lods
mov
and
and
adc
add
mov
imul
std
insb
and
jecxz
adc
fimull
aad
add
fiaddl
xchg
cli
daa
dec
cmp
add
pop
mov
addr16
pushl
xor
rolb
aas
mov
pop
dec
dec
jecxz
sbb
call
xor
int3
insb
sbb
sbb
or
loopne
into
test
enter
mov
xchg
sbb
outsb
push
xchg
bound
cmpsb
ljmp
fwait
sbb
push
cmp
and
and
test
jmp
loop
or
jl
pusha
scas
mov
add
aaa
rep
cmp
cmp
enter
add
dec
inc
mov
inc
out
pop
pop
or
addr16
fcmovu
sbb
movsb
dec
cltd
ljmp
pushf
dec
xor
iret
fadds
xchg
adc
test
xlat
insl
das
adcb
push
push
or
lcall
idiv
push
bound
pop
adc
push
push
push
movsb
xchg
cld
inc
adc
sub
or
sbb
das
aad
or
out
cmp
jecxz
out
xchg
les
in
xchg
mov
push
mov
leave
loop
push
mov
aas
xchg
mov
mov
push
push
adc
ret
sbb
or
je
and
es
repz
jo
inc
or
lret
stos
cli
lods
dec
rcll
cmc
es
jle
pop
pop
pop
or
mov
jl
pop
mov
pusha
jp
daa
or
sbb
push
out
fldcw
stos
xor
jp
xchg
testb
stos
shrb
jmp
in
mov
sub
test
dec
and
fdivrs
xlat
mov
mov
lods
mov
outsb
out
adc
daa
rcl
pop
sub
inc
mov
cmp
xchg
jne
mov
mov
mov
or
pop
dec
cmp
dec
addr16
and
bound
imul
daa
pop
ljmp
outsb
xchg
or
mov
pop
adc
sbb
loop
jae
shr
push
mov
cmp
or
mov
jmp
fldt
nop
imul
shll
jae
fcompl
cmpl
inc
add
aas
je
les
dec
add
dec
lret
mov
popa
mov
stos
cmp
add
enter
sbb
sub
inc
inc
push
jg
add
and
or
pop
aas
dec
adc
pop
fistl
nop
ljmp
cmp
lcall
cmc
xchg
inc
sbb
pop
or
jo
test
cltd
jecxz
xor
outsb
jnp
pop
push
icebp
aad
pop
mov
or
mov
and
xchg
inc
pop
cmp
dec
sahf
add
xchg
sbb
test
push
add
adc
sub
and
pop
lcall
xlat
imul
pop
icebp
dec
fmul
insl
sub
jb
and
flds
adc
sub
mov
shlb
dec
mov
enter
push
je
jecxz
fcmovb
adcl
adc
jns
xor
insl
sub
sti
out
icebp
lcall
inc
dec
or
ds
pushf
fwait
push
nop
inc
rorl
jecxz
dec
xchg
fistl
outsb
mov
popa
cmp
sub
and
jl
xchg
mov
outsl
jp
push
faddl
shlb
cmp
or
pop
outsl
xor
and
cmp
dec
add
je
sahf
stos
cld
cld
arpl
ret
ret
stos
dec
iret
rcl
xchg
std
leave
xchg
push
add
cmp
bswap
ds
dec
dec
sbb
popf
mov
mov
call
jl
or
add
shrb
sbb
imul
fisttps
jle
imul
push
cli
loop
xor
repz
push
pop
or
mov
dec
fldenv
mov
cmp
fcmovu
inc
cmpsb
xor
mov
or
push
sbb
jl
sbb
aaa
mov
lcall
jge
adc
les
shrb
xchg
jle
dec
or
sub
sub
mov
repz
mov
push
aaa
popa
outsl
rolb
mov
inc
push
mov
jmp
and
fdivr
lods
test
add
aad
js
enter
ja
inc
std
ja
cwtl
mov
sub
das
fisttpll
mov
and
or
movd
push
ja
xchg
cmc
das
call
dec
or
push
push
sub
pop
sti
mov
sub
mov
out
loope,pn
insb
movsb
popf
mov
cmp
sbb
pop
push
aaa
popf
shrl
adc
inc
negl
or
int3
mov
sub
and
popa
in
into
sub
cs
in
test
lret
fadd
xchg
sti
add
cld
push
push
sbb
ds
stc
sbb
data16
sub
mov
ljmp
mov
pusha
xchg
cli
out
sahf
int3
gs
cmp
add
mov
add
test
sub
fs
adc
xor
stc
jle
addr16
xchg
mov
xchg
sub
pop
and
iret
mov
leave
adc
pop
sbb
ficoml
call
or
std
insb
xchg
sub
or
mov
dec
jp
inc
loope
or
fiaddl
sub
xchg
dec
mov
out
mov
test
fucom
fadds
scas
jnp
into
addr16
push
xor
cs
aaa
sbbb
test
insl
pop
ret
je
daa
nopl
enter
sub
push
xor
adc
cmp
es
mov
pop
loop
test
lret
add
mov
sub
movl
add
lcall
jp
sbb
call
cs
loope
jl
xor
push
cmp
jne
mov
push
add
addr16
adc
cmp
jg
pop
xchg
or
fcompp
loopne
mov
divb
call
das
jne
popf
popf
mov
clc
pop
push
cmpsb
fsubrp
scas
mov
sbb
andb
ss
cmp
mov
jbe
cli
jmp
jecxz
push
pop
mov
into
sub
lods
call
sub
mov
paddw
jle
inc
dec
mov
sub
dec
mov
and
adc
push
inc
dec
loope
xchg
test
push
mov
adc
sti
push
fdivr
xchg
adc
fcmovbe
dec
cld
sub
ror
push
adc
mul
shl
lds
pop
lea
and
dec
add
xchg
xorl
lock
test
mov
cmpl
aad
jecxz
xor
ja
mov
insl
test
cmpsb
idiv
sub
scas
xchg
pusha
cs
subb
sub
and
cmp
xchg
mov
lods
push
adc
outsl
imul
incl
popa
sbb
push
test
sub
ljmp
int3
stc
mov
sbb
or
int
mov
mov
in
push
das
ljmp
scas
shrb
stc
mov
dec
rorb
mov
and
mov
test
arpl
insb
cs
iret
sub
pmullw
pop
lahf
add
rorb
sub
mov
sbb
adc
rorb
sbb
inc
arpl
nop
movlps
cmp
sub
dec
mov
out
sub
or
out
fmul
mov
dec
mov
arpl
int3
cmpsl
mov
out
add
sbb
loope
adc
ljmp
pop
cmpsb
adc
pop
pop
sub
loopne
adc
push
or
iret
or
pop
outsb
mov
mov
mov
sub
jl
test
pop
xchg
dec
dec
outsl
adc
push
sub
das
sbb
jle
adc
add
stc
outsl
jp
das
jne
mov
std
mov
xor
dec
jl
in
scas
adc
pop
push
sub
xchg
fisttpl
jbe
cltd
enter
mov
xchg
push
sti
repnz
in
xor
pushf
out
cmp
pop
xchg
rolb
xor
mov
xchg
sub
push
lcall
push
xchg
sub
adc
mov
movsb
push
mov
and
cmp
push
popf
je
adc
fdivr
leave
add
or
rorb
ds
fidivs
dec
adc
or
insl
or
dec
or
pop
cmp
leave
push
nop
pandn
incb
repz
bound
push
or
fidivs
push
push
out
jp
das
pop
test
in
add
ljmp
shrl
popf
cli
cmpsl
adc
ds
add
or
iret
mov
mov
es
stc
nopl
loope
or
mov
push
rorl
repz
sbbl
or
jmp
pop
mov
call
xor
jl
imul
xor
dec
andl
cmp
or
xor
mov
repz
into
or
es
sti
lret
or
ja
inc
jae
lds
jb
push
and
jo
repnz
cmpl
adc
push
pop
fsubrl
daa
arpl
or
sub
push
aam
push
setne
mov
leave
fmull
repnz
xchg
push
xchg
lret
sbb
mov
and
mov
jl
sbb
jns
cmp
xor
stos
and
pop
push
or
push
lret
icebp
dec
dec
and
push
sbb
xchg
mov
inc
stos
push
pop
outsl
jmp
mov
sbb
fdivl
sbb
ret
sbb
and
mov
popa
adc
scas
or
cmp
add
xchg
pop
sti
mov
push
adc
xchg
adc
test
xor
and
fldt
xsaveopt
insl
mov
loope
pushf
adc
js
shll
outsl
shl
popa
mov
jg
pop
aam
jp
or
adcl
jl
in
push
sbb
push
adc
cmp
dec
inc
pop
push
lea
inc
inc
dec
arpl
adc
dec
pop
add
enter
xor
jnp
and
movsb
push
out
inc
or
sbb
imul
cwtl
jne
xlat
jecxz
jnp
add
das
push
mov
push
mov
pusha
mov
inc
mov
sub
jae
mov
loop
dec
pop
dec
mov
loope
jp
and
sub
jecxz
dec
sbb
xor
mov
pop
push
adc
dec
mov
in
lahf
sbb
dec
in
sub
jl
movsl
dec
push
jecxz
add
aam
push
lea
sbb
xor
jl
or
and
out
adcl
adc
fidivs
dec
fmul
std
add
dec
push
fisubrl
inc
mov
lcall
pop
mov
xchg
fstp
fwait
sub
sub
insb
mov
pop
outsl
xor
xchg
jae
in
or
mov
mov
add
xor
xchg
mov
mov
xor
out
fimuls
jne
mov
loopne
jne
fistpll
push
mov
pop
cmp
std
or
insb
pop
outsl
xor
in
cmp
xchg
push
mov
sub
out
and
mov
xchg
imul
and
sbb
je
lcall
ja
xor
cmp
sub
insb
cmp
and
adc
fmul
lret
lea
dec
adc
lcall
out
fimuls
insl
popf
mov
loope
pop
sbb
repnz
aad
and
lahf
or
jp
lret
je
outsb
cld
pop
inc
insl
sub
ss
sbb
jae
clc
and
push
mov
cmp
and
aas
sbb
push
or
push
decb
mov
orl
rorb
xchg
nop
mov
dec
jl
lret
insb
mov
or
mov
nopl
cmc
das
int3
or
push
xchg
imul
jge
aam
and
add
stos
mov
cli
jo
adc
mov
rcll
and
fwait
or
cmp
aam
popf
movsb
or
and
adc
fistps
mov
dec
add
negl
testb
add
add
frstpm(287
mov
inc
adc
jbe
mov
sbb
test
push
inc
xor
ds
fcompl
pop
dec
add
sub
cmp
jne
xchg
sub
popa
jl
mov
fwait
xor
imul
cld
aas
mov
jecxz
xor
xchg
mov
mov
cmp
movsb
or
and
test
and
ds
shll
add
lds
fcoml
sub
push
imul
xor
push
ds
scas
pop
lcall
push
jecxz
inc
fdivrp
les
mov
orl
lahf
ljmp
dec
mov
pop
xchg
in
push
pop
mov
into
int3
int
push
bound
sub
fs
mov
cmovl
mov
adc
xor
stos
fs
out
in
ljmp
dec
pop
sbb
add
pop
adc
jns
or
shr
adc
mov
pushf
adc
pop
sub
cs
sub
iret
mov
adc
and
in
fwait
or
lea
pop
xor
stc
inc
mov
pop
mov
lds
divb
rcl
mov
inc
mov
add
or
jno
test
jp
adc
arpl
and
push
test
dec
sub
dec
sub
daa
ret
pushf
aad
lods
lea
and
sahf
es
jb
and
inc
imul
mov
push
in
dec
xor
pop
pop
jb
sbb
sbb
mov
insb
por
stos
sbb
jp
fcoml
sub
mov
das
push
insl
adc
inc
cmp
xor
sub
or
adc
adc
cmp
add
pop
repz
and
or
sbb
popa
sbb
dec
mov
cmp
into
and
mov
int
bound
push
int
orl
inc
xchg
jnp
shrl
mov
cmc
mov
adc
push
rcrl
push
pop
sub
jecxz
movsb
paddusw
xchg
js
test
jge
jnp
pop
or
or
in
inc
fmuls
sub
jl
gs
pushf
das
or
push
and
inc
mov
push
les
rorl
insb
jnp
insl
add
jl
leave
mov
lcall
dec
mov
jmp
sub
adc
pop
cmp
lret
mov
lahf
out
popa
push
leave
fwait
or
and
jmp
push
fwait
xor
mov
insl
mov
lahf
mov
push
and
xchg
fwait
sub
sub
aam
xlat
frstor
addr16
inc
mov
lahf
push
sub
and
push
adc
mov
fdivrs
xchg
popf
dec
mov
push
sub
lea
popa
push
stos
add
pop
hlt
outsl
outsl
fwait
push
push
daa
sahf
push
push
cmp
insb
jne
sub
ss
mov
fsub
add
rorl
push
and
js
cmpsb
sbb
and
or
aad
or
inc
or
or
scas
inc
imul
push
inc
repnz
pushw
nop
mov
lds
mov
int3
pop
mov
fldenv
mov
fsubrs
repz
popf
mov
add
sbb
or
add
mov
nop
and
sbb
sbb
add
jecxz
test
scas
mov
test
and
pushf
push
jmp
pushf
push
je
in
sbb
or
inc
xchg
stos
inc
sbbl
ljmp
xor
loopne
roll
pusha
dec
dec
add
and
add
imul
sub
aam
imul
mov
sub
pusha
mov
sbb
jl
andl
mov
cwtl
sbb
mov
jmp
rcl
adc
adc
rcl
mov
lea
ljmp
xor
jl
push
das
test
jnp
incl
dec
out
jb
mov
lcall
cmpsl
outsb
lret
inc
and
pop
push
sbb
adc
jae
mov
jecxz
mov
sahf
into
ljmp
lock
sbb
insb
sbb
out
test
mov
or
movsb
push
xor
movsb
adc
bound
das
out
repnz
lret
in
pop
sbb
gs
mov
or
push
adc
dec
iret
je
rolb
fwait
add
adc
mov
test
xchg
jecxz
or
les
addr16
push
popf
dec
faddl
pusha
sub
pop
test
add
fsubp
adc
inc
mov
cmc
aad
ret
pop
repz
out
sub
push
dec
test
push
lcall
loop
mov
fadd
lret
aas
popf
or
daa
stos
in
pusha
push
imul
sub
sbb
inc
mov
es
sti
daa
adc
repz
js
lahf
xchg
push
pop
push
adcb
jl
xchg
xchg
in
pop
icebp
pop
sub
pop
test
test
out
sbb
mov
shll
cmc
sbb
mov
int
pop
push
or
out
in
xchg
es
lahf
dec
movsb
dec
mov
adc
adc
bound
aam
push
jnp
sub
dec
icebp
xchg
pop
mov
xor
cmp
mov
decl
sbb
xchg
loope
sub
sub
sbb
mov
ret
inc
mov
xchg
imul
mov
add
dec
sub
xor
xor
mov
in
aaa
mov
push
sbb
mov
rcrb
ret
push
and
xchg
std
daa
daa
pmovmskb
sub
lock
and
add
loopne
xchg
adc
test
pop
mov
jne
sbb
out
test
stos
sub
sub
cltd
lret
mov
xchg
cld
outsb
ret
adc
add
jae
test
aad
lret
out
fucom
push
adc
push
sub
jg
add
mov
lahf
and
push
pop
xor
inc
pop
mov
das
jp
pusha
sub
sahf
pop
xchg
int3
xchg
iret
jmp
xor
mov
and
pushf
jae
stos
dec
pop
or
sub
out
test
nop
data16
mov
sbb
das
adc
les
mov
xchg
push
push
xchg
sti
and
jbe
xchg
es
lcall
mov
mov
es
fwait
insb
loop
arpl
rcrb
or
lods
adc
dec
jg
xchg
xor
pop
inc
cmc
arpl
cmc
fisubl
mov
mov
clc
xchg
pop
sub
mov
sbb
sub
cmc
aaa
adc
xor
cmc
jns
lahf
lret
xchg
xchg
insb
jl
mov
jae
fstl
arpl
or
mov
cltd
test
rep
js
jge
notl
and
js
mov
dec
movsb
mov
xor
sbb
lea
mov
arpl
loope
cmpsl
scas
adc
dec
dec
pop
add
dec
movb
mov
std
sub
mov
and
fmuls
adc
sub
scas
sub
clc
stc
mov
fnstsw
cmc
test
cmc
loope
shl
mov
imul
add
sub
dec
adc
push
sbb
mov
push
ja
xor
sub
sbbb
pusha
dec
or
pop
xor
jae
jge
inc
data16
je
fidivrs
lods
sub
and
add
push
addr16
jge
pop
in
bswap
mov
adcb
int3
mov
clc
ror
ja
sahf
inc
adc
or
push
jg
std
mov
dec
test
push
mov
mov
mov
loope
arpl
and
mov
xlat
iret
or
add
pop
insb
cmp
sbb
lcall
scas
adc
xor
out
inc
xor
push
inc
mov
and
jno
cld
enter
fdivrl
inc
pop
push
enter
and
insb
icebp
arpl
sbb
lock
icebp
insb
jecxz
fwait
pop
lea
stos
mov
addr16
xlat
addr16
mov
add
fs
pop
sub
daa
int
fwait
push
lret
xor
inc
and
daa
bound
test
mov
in
popf
mov
sbb
mov
add
adc
sbb
xchg
inc
shr
cmp
fisubs
sbb
push
sub
outsb
data16
lret
cmpsb
hlt
lea
fwait
add
sub
imul
sbb
push
int3
aaa
arpl
mov
pusha
push
xor
pop
adc
sbb
pop
lret
out
ds
xchg
rolb
xchg
lea
dec
mov
push
clc
pushf
adc
jno
ret
subb
sahf
cmp
mov
cld
adc
nop
push
jmp
ja
and
inc
xchg
add
adc
jb
and
mov
sub
jl
fcmovnbe
call
mov
push
js
sahf
add
mov
jno
test
outsb
popa
out
insl
mov
mov
push
push
push
fldenv
or
mov
pop
pushl
or
stc
pop
pop
jo
adc
or
adc
jecxz
pushf
int3
push
and
mov
mov
mov
lcall
adc
outsl
fs
add
fnstcw
sub
movsb
mov
dec
add
jno
push
fsubrl
fdivs
or
lea
xor
gs
mov
push
test
xor
fstp
test
and
outsb
dec
pop
and
mov
loope
jns
pop
popf
ficompl
popf
adc
pop
pop
sbb
push
fimuls
stos
jno
imul
or
cmpl
push
push
lods
lret
pop
stc
pop
and
or
leave
repz
testb
pop
and
sbb
ror
or
clc
mov
cwtl
mov
orl
addr16
negb
xchg
adc
bndldx
cmpsb
outsl
inc
lahf
jl
push
fcmovnu
sbb
xchg
insb
ficomps
xlat
adc
scas
scas
xchg
pop
and
or
mov
mov
and
aaa
sub
in
inc
push
ja
icebp
mov
xlat
mov
xor
mov
dec
xor
dec
repz
sbb
push
orb
or
cltd
add
xor
cmpsb
jge
or
in
mov
mov
mov
cltd
test
js
xchg
out
fldt
adcb
inc
adc
dec
pop
scas
pop
sbb
cmp
add
mov
push
nop
xchg
iret
insb
int3
in
xchg
outsb
adc
inc
sbb
fld
xor
sbb
push
insb
fstl
and
scas
jmp
jp
and
int
rorl
pop
sbb
cmp
adc
or
mov
fistpl
mov
jg
push
scas
hlt
cmp
adc
or
je
push
test
in
and
movq
xlat
out
int3
mov
insl
mov
jp
sbb
int
test
inc
inc
pop
jl
push
shr
mov
pop
xor
mov
push
mov
and
cmp
ja
je
push
mov
push
insb
and
adc
jmp
xor
add
fs
mov
or
test
rcrb
sub
add
gs
xchg
sub
jb
push
loop
mov
add
fbld
ja
dec
and
ds
das
inc
les
sub
int3
mov
nop
cmc
aad
daa
clc
out
xor
push
pop
push
inc
push
cmp
negl
leave
lret
push
mov
lahf
shlb
sub
mov
sbb
mov
add
and
jmp
mov
mov
sbb
insl
mov
sbb
jne
push
cld
dec
and
insl
inc
add
movsb
add
fistpl
inc
enter
and
popf
or
inc
ret
loopne
push
fistl
jecxz
mov
fs
loop
or
int3
or
insb
iret
mov
movb
leave
cmp
and
push
arpl
mov
and
adc
test
mov
fwait
hlt
sbb
xor
and
xchg
movsb
lea
jl
inc
pop
jp
add
lods
outsl
rolb
fsts
jecxz
loopne
xchg
sbbl
xchg
sbb
mov
cmpsb
bound
push
scas
and
push
jp
movsb
xchg
and
mov
push
in
aaa
je
push
fadd
scas
ror
jge
pop
pop
movntq
lret
into
iret
mov
loope
push
pop
adc
cld
and
in
sar
imul
push
dec
mov
ret
lods
cmpsb
jge
and
sahf
mov
jecxz
mov
dec
inc
ja
mov
inc
dec
pop
fmuls
jmp
or
lret
pushf
and
or
sbb
add
orl
xchg
cmp
cmpsl
jmp
push
aaa
mov
jmp
adc
iret
mov
jle,pn
jl
dec
cli
cli
test
lret
mov
push
push
add
push
jecxz
dec
mov
add
mov
movsb
inc
call
aam
jp
and
mov
fstps
mov
pop
clc
or
mov
enter
xchg
fadd
push
mov
sub
pop
pop
dec
cmp
sbb
ficomps
xlat
movl
pop
pop
jmp
push
dec
sbb
lcall
cwtl
inc
pop
jno
xchg
inc
add
mov
lock
mov
imul
pop
and
xchg
add
adc
xchg
cmp
adc
daa
loope
xchg
cltd
addr16
sbb
adc
pop
sub
enter
dec
sbb
cmp
sbb
adc
xchg
les
loopne
xlat
in
ficoms
sarb
popf
mov
jne,pt
repz
pop
movsb
xchg
orl
lret
pop
xchg
out
or
fwait
adc
cmp
sahf
insb
xchg
mov
mov
jno
cmp
adc
adc
add
mov
jns
sub
lret
ret
inc
outsl
and
dec
adc
jns
jno
in
pushf
scas
dec
jbe
dec
movsl
cmc
ja
leave
aaa
mov
add
adc
daa
push
mov
mov
mov
xchg
pushf
adc
gs
dec
jp
aam
addr16
insb
jge
jp
mov
sahf
adc
enter
add
cli
les
sbb
adc
push
fdivrs
incl
orl
test
into
inc
scas
fisubrl
or
loopne
inc
adc
xor
setle
movsl
outsb
pop
adc
sbb
pop
lea
pop
rolb
insb
pop
lods
pop
mov
jmp
jp
std
into
mov
pop
pop
dec
jne
aaa
inc
jno
cmpsb
lahf
ret
sub
xor
insb
mov
addr16
insl
test
mov
aam
push
dec
mov
lret
mov
mov
test
dec
fsub
mov
inc
or
daa
lcall
out
pop
xor
pop
fstl
pushf
movsl
fwait
int3
xor
aad
adc
jbe
or
imul
or
call
ljmp
pop
rcrl
inc
fstpl
test
dec
pmaddwd
mov
add
sub
adc
psubb
jo
adc
mov
loope
push
inc
pop
cs
or
jl
sti
mov
insb
mov
out
popa
push
add
cmp
sub
stos
fidivs
insl
push
dec
hlt
and
push
dec
ljmp
push
pop
data16
dec
and
xchg
loop
sub
js
pop
fstpt
jbe
cmp
imul
xlat
ret
je
adc
push
cs
pop
push
add
xor
xor
add
mov
add
and
xlat
in
pop
sbb
xor
sbb
ljmp
mov
loope
stc
mov
cmp
mov
or
insl
sbb
mov
jmp
daa
sub
sbb
add
mov
add
pop
sbb
pop
outsl
xchg
or
inc
mov
test
filds
sahf
repz
push
mov
lea
dec
out
xor
mov
and
inc
sti
stos
xchg
dec
pop
pop
cmpsb
popa
cmp
jns
cs
imul
stc
imul
loope
xchg
lods
and
scas
xor
es
push
outsl
scas
dec
outsb
push
aad
addb
test
fsubr
add
rolb
mov
jne
xchg
fisttpl
mov
je
mov
lret
jnp
xor
adc
xchg
xlat
adcb
dec
add
fldcw
pop
mov
insl
sub
sub
out
add
jnp
stc
ja
xor
xchg
mov
jle
insl
adc
insb
mov
ret
xor
out
push
and
inc
adc
cmp
sub
mov
mov
jns
push
push
xor
insb
rclb
clc
mov
sete
leave
mov
sarb
pop
pop
ds
push
push
movsb
push
adc
ljmp
sbb
pop
insl
adc
xor
mov
jmp
mov
add
stos
add
insb
aaa
pusha
jg
cwtl
in
sbb
lret
daa
pop
cmp
jnp
fnstenv
or
stos
jno
push
push
outsb
movsb
mov
push
lods
cmp
out
xor
push
mov
cmp
mov
out
and
out
sub
das
sbbl
sbb
ret
pop
mov
leave
sub
mov
movsl
lret
in
cmp
iret
push
xchg
mulb
jge
sbb
les
xor
mov
lahf
mov
push
arpl
into
pop
xchg
sub
sub
jge
dec
sbb
cmp
adc
xor
push
xchg
mov
xlat
imulb
fstl
scas
pop
sub
jbe
pushf
push
pop
jmp
mov
adc
add
inc
fldenv
pop
adc
jae
js
ds
cltd
jmp
popf
outsl
push
push
or
jg
test
xchg
sbb
adc
sub
leave
pop
mov
push
adc
sbb
push
sahf
les
insb
xchg
or
push
and
insl
sub
pusha
loopne
adc
push
scas
test
xchg
xchg
out
mov
lock
ja
outsl
lahf
rcrl
or
fcomps
lahf
out
subb
mov
loope
fsubrl
je
popf
ret
subl
and
sahf
sub
or
inc
pusha
mov
sbb
cmp
or
fiadds
das
movsl
push
mov
shll
shlb
cmp
sahf
sub
shll
mov
add
daa
loope
dec
cltd
add
sbb
mov
in
stos
mov
sub
inc
aaa
jno
imul
es
icebp
mov
adc
les
fsubrl
inc
jmp
cmp
sub
adc
jno
xchg
sbb
jb
stos
mov
add
sbb
popf
ja
xchg
movsl
dec
push
mov
dec
inc
mov
mov
xchg
dec
les
mov
pop
lret
mov
pop
and
pushf
notb
and
or
insl
aad
inc
ret
clc
jnp
mov
cmp
lret
aas
out
in
and
sbb
arpl
and
imul
mov
xor
ret
push
adc
fwait
cmpsl
add
aam
loopne
and
mov
das
dec
adc
and
push
and
int3
sub
dec
mov
jno
mov
js
fcomip
adcb
add
pop
stos
lock
loopne
jbe
adc
into
add
jmp
sub
mov
movsl
outsl
enter
sarb
sbb
in
push
ljmp
mov
inc
sahf
xchg
jo
inc
sbb
stc
nop
lea
mov
add
mov
sub
inc
push
js
out
stos
rcrl
dec
enter
pop
jae
sub
repnz
pop
and
fnstsw
mov
out
and
adc
xlat
pop
pcmpgtb
in
insl
pop
psubd
cmp
push
into
stos
sub
push
jle
mov
mov
sub
xor
sbb
aas
and
push
in
jbe
or
cld
ds
pop
push
test
cmp
or
inc
movsl
xchg
std
lods
inc
sbb
cltd
int3
jp
xlat
sbb
sub
adc
cmp
enter
icebp
andb
aas
dec
in
sar
addb
jle
in
sahf
lret
sub
pushf
pop
lahf
cltd
inc
jbe
loop
jo
enter
mov
mov
les
mov
adc
pop
sbb
jmp
sahf
adc
pop
lcall
mov
push
mov
sbb
rcll
out
aam
mov
sub
adc
imul
or
movsl
xchg
fisubrl
test
pop
divl
adc
scas
fnstcw
daa
sbb
sub
add
lret
inc
scas
vmwrite
shl
imul
adc
shrb
test
test
push
sub
movsb
adc
pop
cs
xor
mov
aaa
mov
sahf
insb
or
cmc
into
fsubp
push
dec
dec
pop
loope
aad
nop
mov
xchg
lret
movb
dec
js
adc
xor
jg
gs
or
adc
fisubrs
mov
div
inc
mov
mov
pop
das
aaa
in
daa
repnz
or
xchg
or
and
scas
mov
sbb
rcl
imul
and
mov
dec
int
pop
loopne
test
leave
jp
mov
rcrb
ds
frstor
push
cmp
or
in
mov
out
adc
pop
jge
mov
sub
add
outsb
cmp
adc
add
push
repz
or
stos
jmp
insl
adcb
fimull
mov
or
adc
les
es
push
mov
jmp
lods
cmp
xchg
aam
dec
xor
xlat
in
adc
xchg
fwait
adc
ret
xor
mov
dec
mov
sub
jge
movsl
jns
imul
cmovl
adc
out
sbb
dec
adc
push
lahf
pop
xchg
pop
dec
push
cwtl
sahf
shl
and
or
loop
addr16
shl
ret
pusha
pushf
les
cmp
icebp
xor
scas
das
pop
loope
cmp
inc
xlat
ja
inc
pusha
leave
xor
sub
xor
popf
repz
scas
dec
pop
pushf
or
and
addr16
loope
mov
sbb
daa
jno
or
push
sahf
mov
push
dec
insb
push
pop
jecxz
scas
pop
pop
inc
ds
insl
imul
ret
jle
in
pop
jns
jo
adc
enter
aaa
enter
test
sbb
pushf
xor
sub
lret
test
cmpsb
js
hlt
sbb
addb
fxch
mov
nop
inc
xchg
rorl
mov
cmc
push
fimull
sarb
inc
stc
insl
jnp
sub
jne
and
jg
lret
xchg
fwait
rcrl
lcall
jge
stos
xchg
aam
mov
dec
call
dec
aaa
jbe
lgs
add
fisubrl
mov
fcompl
aam
mov
pop
imul
and
lods
jp
daa
mov
jb
fdivrl
enter
popf
add
inc
imul
pop
mov
jmp
test
and
jmp
xchg
stos
cmp
mov
outsb
je
ljmp
xchg
scas
add
xchg
je
mov
pushf
add
dec
test
leave
iret
insl
sbb
fwait
ljmp
aad
mov
or
jne
jl
out
mov
daa
lods
pop
pop
int3
mov
aam
jae
jmp
pop
lods
ss
inc
and
fiadds
adc
ret
and
push
sbb
insl
adc
or
loope
in
dec
shrl
movsl
or
lcall
jb
data16
adc
or
sub
and
scas
xchg
lcall
mov
mov
sub
sbb
ss
add
data16
insl
aam
cmp
cmpsl
fwait
scas
mov
dec
xor
and
xlat
fcomps
stos
add
stos
repz
push
movsb
lock
nop
loope
mov
add
pop
xchg
decl
cmc
xor
dec
leave
mov
and
popa
int
add
pop
aas
popf
sbb
pusha
jae
lock
js
les
dec
mov
cmp
movsb
loopne
ds
pop
inc
into
mov
scas
cs
sbb
sub
jmp
xor
sub
xchg
daa
stos
in
mov
sub
in
repz
push
pop
sbb
fwait
jo
in
das
adc
lods
jg
mov
sub
or
stos
cmpsb
stos
adc
mov
push
cmpl
or
cmp
in
leave
test
add
add
mov
aaa
xor
jns
jmp
loopne
jecxz
xchg
xor
push
pop
mov
adc
mov
ds
sub
fwait
int3
ss
vmovaps
fsubrp
xchg
ja
je
popa
push
mov
ret
push
sbb
aaa
mov
ja
out
dec
insb
xor
dec
dec
or
stos
dec
notb
xchg
das
or
pop
pop
pop
sbb
mov
add
mov
mov
jecxz
mov
ret
insb
scas
mov
lcall
sbbl
es
lds
mov
hlt
inc
push
sub
push
mov
sub
mov
inc
cmp
sbb
pop
lcall
push
mov
sub
mov
aad
fnstenv
inc
cmp
jb
xor
or
scas
pop
std
cltd
sub
pop
push
jg
adc
xor
inc
mov
adc
movd
xchg
or
call
loope
push
fnsave
sahf
lahf
insl
xor
xor
mov
and
sub
icebp
fwait
and
scas
pop
sub
js
mov
ljmp
rolb
cmp
stos
lcall
cmp
cs
cmp
and
inc
push
inc
dec
or
push
lret
pop
sbb
pop
xor
fldcw
loopne
sub
cmp
sub
ret
xor
push
adc
lret
mov
cwtl
imulb
fadds
out
ljmp
xchg
aas
shlb
xchg
cmpsl
cmpps
mov
jne
popf
inc
icebp
pusha
jne
push
push
xor
shll
adc
pop
inc
fptan
inc
mov
cltd
iret
fiadds
sbb
insl
notb
pop
jmp
inc
and
fcomps
or
or
lret
ss
push
and
fdivrs
jle
mov
add
inc
xchg
call
and
dec
sub
or
add
sbb
movb
add
ss
cmp
test
insb
adc
push
cmp
add
jle
repnz
in
lahf
sbb
int
sub
test
sbb
sahf
push
mov
sbb
push
xor
cmp
stos
rcll
repz
insb
pop
call
adc
into
dec
leave
mov
inc
add
pop
mov
sub
mov
pop
outsl
xor
cmp
pop
dec
jle
into
aam
stc
adc
add
mov
fmuls
cltd
icebp
int
daa
aad
sbb
mov
insb
fcompl
xchg
pusha
adc
bound
enter
cmp
movsl
push
dec
cmp
and
dec
jl
lahf
xlat
rcrb
mov
mov
xlat
mov
insb
xlat
push
lahf
hlt
sub
xor
add
xorb
lea
mov
or
je
and
aad
mov
or
and
sbb
and
popf
push
add
pushf
mov
stc
or
leave
dec
cmpsl
sbb
adc
fidivrl
xchg
mov
iret
fidivrl
adc
lds
push
sti
cmp
in
adcb
mov
stos
fbstp
jae
jne
dec
loope
sub
jns
mov
pusha
data16
sub
sahf
mov
cmpsb
pop
iret
mov
pop
add
aas
or
inc
and
icebp
ljmp
iret
sub
scas
cwtl
shlb
test
cmp
test
enter
rcl
mov
movsb
push
sub
les
or
push
lret
adc
jo
jae
mov
adc
push
orb
sub
dec
popf
mov
lods
cmp
std
add
sbb
lods
jmp
and
outsb
dec
cltd
leave
push
xor
sub
pop
fsubl
je
push
popa
lret
ficoms
push
push
sbb
lret
insb
in
inc
cmp
xchg
mov
mov
xor
cmp
test
popa
xor
jmp
lahf
adc
cmc
push
push
insb
rcr
pop
adc
pop
in
push
fdivrl
cmp
int
int3
ficomps
xor
insl
pop
or
movsb
push
and
test
sub
sbb
adc
add
lahf
inc
add
mov
negb
and
xor
and
sahf
and
scas
dec
push
aam
fucomi
push
es
int3
fdivs
out
xchg
shrb
dec
push
dec
popf
popl
outsl
xor
xor
ret
jne
daa
js
mov
or
pushf
inc
cli
xor
jecxz
movsb
popa
jle
cmp
and
negl
inc
shlb
call
mov
cmpsw
mov
adc
push
ss
nop
fdivl
cmp
push
inc
les
xchg
jge
lahf
push
xlat
push
test
push
inc
mov
and
sub
mov
ds
sub
add
jg
mov
lahf
push
pop
or
fsubl
nop
push
pop
push
into
pop
sub
filds
adc
sbb
add
add
loop
pop
jge
mov
pop
shlb
pop
sub
mov
pop
jmp
fnstcw
mov
lahf
test
push
aad
inc
and
jo
jo
cmp
cmp
stc
cmp
sbb
mov
lret
lahf
inc
push
adc
into
inc
jge
jne
out
outsl
call
jecxz
cs
adc
test
je
add
and
mov
push
cwtl
add
sub
mov
or
dec
dec
add
dec
adc
add
hlt
cli
pushf
cmp
xlat
inc
sbb
pushf
mov
jle
packssdw
dec
das
adc
inc
insb
in
jmp
push
or
cmp
mov
outsl
sbb
test
jmp
sbb
mov
sub
addr16
or
cld
xor
test
and
and
jbe
movaps
sub
sub
lods
and
stos
fsubrl
lahf
sub
ljmp
clc
dec
lods
xor
orl
out
or
ret
jle,pt
sub
push
xlat
mov
cld
jmp
xor
mov
jb
lret
or
add
cmp
lds
mov
xor
jno
mov
push
add
sbb
push
shl
bswap
jnp
xchg
or
xchg
jae
jns
cltd
nop
imul
dec
dec
cmp
and
out
mov
push
leave
push
push
rcrb
xor
pop
cmp
int
repz
into
jbe
push
xchg
into
xchg
ror
shr
hlt
mov
dec
dec
stc
sbb
rcl
jns
jecxz
fwait
jnp
push
iret
mov
paddusb
repz
dec
in
pop
adc
dec
mov
jb
and
fadds
sub
and
fsts
and
ja
jnp
mov
inc
jge
lret
cmpsl
sub
icebp
cmp
adc
fwait
pop
adc
mov
push
pop
add
dec
dec
pop
dec
sbb
loopne
into
pop
btr
sbb
cs
lcall
adc
and
dec
lods
loop
push
or
and
cld
movsl
sub
insl
lea
shlb
and
hlt
xorb
movsb
int3
xchg
sbb
rorb
pop
push
not
es
jle
jp
jle
mov
inc
and
movsl
lahf
mov
push
adc
and
dec
fmuls
int
test
push
mov
pop
das
inc
stos
ja
mov
shll
repnz
jns
mov
mov
mov
cmp
stos
stc
push
aaa
sbb
sti
dec
and
mov
sbb
hlt
jnp
add
add
pop
sahf
cmp
push
mov
inc
mov
mov
adc
sbb
data16
or
xor
adc
pop
into
js
mov
cmp
adc
lea
rorb
pop
push
sbb
mov
mov
ljmp
mov
mov
push
nop
dec
mov
out
pop
xchg
mov
mov
fs
ljmp
call
popf
inc
das
push
inc
pop
and
je
sahf
arpl
leave
mov
sbb
jae
cld
or
mov
repnz
pop
mov
xchg
xor
or
sbb
sub
test
pop
xor
push
mov
mulb
mov
push
lret
mov
in
pop
push
rcl
mov
sbb
xor
test
adc
jo
out
shll
xor
ja
ja
mov
pop
fnsave
jl
xchg
and
sahf
daa
jbe
sbbb
psrad
pop
mov
cs
je
in
mov
nop
jb
insb
xchg
dec
pop
pop
dec
adc
xor
lea
repz
add
jl
sbb
sbb
pop
pop
ja
hlt
push
iret
sbbl
psrld
iret
imul
mov
mov
sub
mov
mov
je
jns
popa
outsl
int3
jb
or
and
faddp
sbb
pop
lds
pop
jns
je
mov
hlt
cltd
sub
hlt
jnp
lret
aas
stos
xor
rcl
jge
pushf
nop
pop
jge
pop
mov
push
or
fwait
pop
mov
out
ficompl
sti
shlb
outsl
cli
add
push
inc
ja
jb
cltd
mov
out
not
xchg
inc
sub
cmc
push
int
scas
je
xchg
mov
outsb
mov
add
dec
or
insb
sbb
adc
mov
pop
mov
or
and
push
shlb
fistpll
adc
movsb
iret
add
inc
pop
jg
push
sub
lahf
cmp
sub
cld
out
push
push
jl
mov
sub
insb
icebp
xor
inc
cld
imul
cld
stos
jl
lret
popf
cltd
adc
es
ret
xchg
push
and
test
int3
aad
inc
dec
test
icebp
adc
shll
sub
dec
sbb
lret
lret
cwtl
lea
mov
or
and
mov
mov
enter
cli
push
std
jae
inc
push
das
mov
iret
or
cmp
loope
leave
cmpsl
jo
outsl
sbb
mov
inc
stc
xor
add
fnstsw
inc
sbb
sarb
jns
push
cmp
fwait
ucomiss
fstpl
push
mov
adc
pop
iret
mov
jl
sahf
adc
jae
test
lcall
adc
aas
adc
xlat
jbe
pop
or
push
adc
cmp
int
aas
sbb
call
cmp
xchg
or
iret
xlat
mov
xchg
add
iret
push
cmp
or
movsl
xchg
push
adc
add
ss
scas
fwait
or
lcall
mov
xor
sahf
shll
mov
imul
mov
inc
ret
or
fisttps
lahf
insl
jmp
test
lret
outsb
lahf
jne
xlat
push
xor
cs
and
push
mov
cmp
test
xchg
ja
lds
xchg
xchg
js
cs
sbb
mov
cmp
gs
imul
leave
in
and
xor
lock
in
in
cld
insb
inc
inc
mov
push
je
stos
das
sub
or
lcall
or
sub
push
mov
adc
xor
xor
mov
jno
iret
mov
cwtl
ljmp
adc
push
mov
sub
jecxz
mov
imul
rclb
fnstenv
loopne
push
sbb
jbe
mov
mov
ficompl
jp
ljmp
fimuls
cld
jbe
js
push
insb
sbb
into
insl
in
jbe
jnp
sbb
xor
movsb
sbb
scas
mov
call
jo
int
ljmp
mov
push
jmp
fstpl
lret
dec
add
rol
jge
push
mov
cwtl
popa
ret
outsl
cmc
or
pop
js
jo
and
xchg
scas
rcrb
xchg
stc
pushf
cmp
push
ja
sub
cmpsb
sub
adc
and
adc
outsl
cmp
aam
hlt
pop
push
orb
pop
xor
jb
jp
sub
lods
movsb
lea
stos
push
add
js
sbb
push
sub
sbb
mov
hlt
pop
and
cmp
pop
rcrl
jmp
xor
repz
sarb
shrb
ret
loopne
sub
lods
int3
mov
int3
push
das
sbb
inc
stos
pop
sub
jb
nop
or
mov
jmp
cwtl
inc
or
pop
out
mov
jecxz
je
mov
rcrb
popl
fadd
dec
bound
cmpsb
xor
pop
daa
pop
adc
xlat
or
sti
sub
insb
fmul
imul
pop
in
cmc
jecxz
sbb
cmpsl
mov
dec
mov
add
enter
fmull
jecxz
adc
aaa
mov
dec
mov
iret
push
lret
rcl
sahf
mov
mov
daa
mov
xchg
jne
sub
lahf
cmp
mov
push
or
std
jnp
fnsave
inc
mov
in
xor
sbb
add
xor
arpl
sbb
dec
push
jmp
pop
mov
leave
cmp
outsb
add
loopne
push
fstl
or
pushf
mov
mov
xor
inc
jle
repnz
jo
adc
push
das
jne
lock
push
lahf
adc
cmp
adc
or
push
cmc
cwtl
mov
mov
xchg
stos
pop
sbb
push
daa
popf
push
mov
sarb
mov
out
mov
xor
or
xchg
popf
cmp
push
das
fisttpl
push
psubusb
mov
adc
inc
test
es
adc
mov
adc
stos
lahf
cmp
or
mov
ja
dec
adc
pop
orl
shl
pop
shl
sbb
out
jo
sbb
or
sbb
or
jge
ljmp
jmp
push
jg
sub
sahf
pushf
rorb
sbb
and
test
or
push
dec
sbb
add
xor
adc
int
adc
jb
adc
push
mov
aaa
cmp
scas
or
std
ja
popa
mov
into
mov
dec
cmp
jg
das
mov
jg
mov
add
loopne
jg
scas
mov
dec
push
ljmp
jge
pop
cltd
jge
movsl
jg
mov
rclb
enter
push
sbb
add
sub
jne
mov
adc
aad
jecxz
cmp
dec
adc
int3
lcall
adc
dec
mov
sahf
adc
jne
push
pop
adc
das
in
inc
ds
add
adc
push
lods
dec
inc
push
add
xchg
inc
dec
or
lds
fnsave
push
stc
and
push
popa
adc
cwtl
or
add
lods
mov
int3
pop
mov
sub
sbb
push
or
push
orb
pop
jp
mov
ret
mov
dec
stc
add
leave
lods
or
rcl
test
pop
sbb
inc
xchg
push
push
add
inc
adc
adc
stos
dec
pop
xor
lahf
rcrb
mov
arpl
xlat
int3
mulb
mov
repz
test
mov
sahf
adc
inc
popf
dec
jl
dec
xlat
mov
inc
jp
inc
mov
and
pop
dec
lea
sbb
add
mov
push
mov
sahf
lret
ljmp
cmp
flds
insl
cld
mov
pop
xchg
std
and
cmpsl
adc
mov
pop
pusha
push
jmp
push
and
sbb
mov
pop
or
iret
lret
imul
insb
sbb
das
ja
subl
int3
stos
xchg
lahf
adc
decl
mov
sbb
jae
popa
push
or
mov
push
cmp
add
adc
fst
mov
hlt
out
insl
cmp
bound
sarb
sub
negb
lods
cltd
sbb
mov
sbb
pop
or
into
xchg
pop
stc
cmpsl
dec
hlt
mov
push
push
in
gs
xor
push
sbb
test
mov
cmp
add
cmp
add
pop
leave
icebp
sub
jmp
sti
or
outsb
pusha
jae
jb
push
cwtl
jnp
mov
addr16
pop
repz
adc
adc
mov
dec
shl
sbb
mov
mov
mov
xchg
loopne
mov
dec
jge
test
jp
mov
xor
fsubs
jge
mov
pop
scas
test
fiaddl
dec
pop
pop
arpl
jg
jns
inc
cmp
dec
add
pop
rclb
xchg
xor
push
mov
movb
pop
mov
mov
dec
push
in
mov
or
push
xchg
aad
push
aaa
int3
sub
adcb
or
pop
sbb
add
mov
aad
jecxz
repz
mull
sbb
and
dec
addr16
jne
into
or
out
and
mov
dec
jmp
test
dec
aad
adc
ljmp
jge
imul
mov
iret
xor
call
adc
mov
xchg
sbb
rcrb
sbb
jb
fwait
or
sub
pushf
dec
xchg
xor
int
imul
in
mov
sub
jmp
mov
jmp
pop
aad
push
ja
insl
mov
pop
dec
cmp
push
outsb
enter
out
dec
and
mov
pop
push
mov
sbb
or
int
push
fsubrs
bswap
mov
push
ljmp
fstps
or
push
mov
fisubrs
ret
movsb
test
jmp
rcll
shlb
rcr
aaa
and
xchg
movsb
mov
mov
cmp
sbb
and
sbb
jmp
pop
cwtl
popf
pop
leave
sbb
ret
lret
xor
lcall
inc
lcall
sbb
lret
loopne
fmuls
scas
mov
sbb
adc
sbb
or
orl
cwtl
xor
push
ss
mov
sbb
adc
enter
lret
shrl
jle
sub
inc
sub
andl
cmp
push
pop
js
pop
jp,pn
or
mov
mov
aaa
add
mov
xchg
int3
subb
sbb
jno
sub
mov
test
sub
adcl
or
push
repz
and
or
imul
jecxz
push
mov
rcrl
mov
aam
push
jbe
pop
adc
mov
fst
mov
outsl
test
xor
sbb
cwtl
imul
adc
ret
sahf
testl
xchg
cltd
ror
ja
add
cmp
cmp
add
lret
sti
xchg
test
fxam
xor
movsb
fimuls
ds
adc
dec
in
sbbb
xor
js
sub
add
int3
dec
add
dec
fs
adc
cltd
js
rorb
cmc
dec
xor
xchg
imul
mov
push
adc
adc
pop
cltd
sbb
mov
push
xor
dec
stc
pop
pop
outsl
test
jns
es
mov
xor
pop
add
push
scas
ja
xor
dec
adc
dec
test
rolb
pop
imul
test
scas
add
inc
jg
sub
dec
dec
mov
daa
mov
pop
repz
fcmovnbe
and
dec
add
and
add
cmpsl
mov
and
adc
subl
push
cmp
mov
pop
mov
mov
xor
mov
inc
push
inc
mov
pop
inc
loope
stos
pop
push
jecxz
pushf
addb
imul
jns
out
jo
pop
dec
sbb
push
sbb
add
aas
sub
data16
pop
sbb
jecxz
fisttpll
add
add
sbb
leave
inc
lret
cmp
jp
adc
iret
inc
lahf
insb
into
movsl
je
sbb
push
in
rcrb
jle
push
lea
inc
adc
nop
xor
sbb
and
mov
dec
mov
push
dec
push
ret
or
add
movsl
outsb
cmpsl
xchg
cmc
outsl
rcl
out
sti
mov
and
xchg
scas
dec
push
adcl
or
mov
mov
pop
daa
push
dec
push
les
sub
cmp
into
dec
fisttpll
xchg
orb
sub
adc
arpl
sbb
out
dec
mov
mov
adc
test
rcll
daa
hlt
inc
jecxz
aas
cmp
je
sbb
jl
sahf
andl
outsl
dec
into
xchg
sarl
pusha
dec
nop
fimuls
xchg
leave
sbb
or
in
aam
es
jne
inc
push
sahf
dec
pop
add
add
out
loope
sbb
xor
pusha
fldl
ss
shll
cmpsb
dec
loope
or
into
hlt
cmp
sub
add
in
mov
movsl
push
aam
push
fistpll
je
shll
dec
and
ds
dec
sbb
out
sub
ret
jo
mov
adc
mov
adc
fwait
scas
test
mov
je
arpl
fsubrs
mov
cmp
xchg
or
aaa
mov
xchg
add
test
insl
xchg
stos
lea
dec
and
inc
jbe
add
dec
loopne
ret
lods
dec
dec
sbb
lahf
push
and
pop
push
push
push
or
cmp
sahf
inc
jle
insb
arpl
test
stos
inc
int
cmp
and
popf
xor
and
push
inc
sahf
xchg
stos
xor
shl
adc
lret
xor
outsl
out
push
xchg
pushf
and
cmc
fdivrs
push
ds
sbb
mov
lret
outsl
sbb
push
adc
or
mov
add
xorb
sbb
add
jns
lahf
pop
out
push
sbb
mov
sbb
lahf
mov
outsl
dec
adc
add
mov
sbb
push
loopne
push
je
popl
mov
andb
inc
stc
sbb
enter
mov
dec
push
and
inc
add
mov
mov
dec
dec
xor
daa
movd
push
sub
xor
fstpl
or
or
in
add
into
shlb
enter
jl
and
sbb
dec
jae
pop
push
dec
xchg
inc
xchg
pop
or
xchg
jecxz
sbb
xchg
loop
mov
gs
sub
aad
add
jbe
inc
repz
pop
or
pushf
imul
insl
sbb
pop
jl
push
insb
pop
outsb
jnp
or
js
out
mov
arpl
push
lret
mov
xor
xchg
fistps
mov
pop
and
sub
sub
and
outsl
mov
mov
push
popa
mov
jns
mov
daa
jnp
rcll
data16
stc
add
jmp
repnz
dec
pop
adc
jno
outsb
push
mov
and
sub
imul
mov
shlb
loopne
int
cmp
and
push
push
or
movsl
mov
into
or
outsl
mov
mov
adc
test
cld
sti
es
ja
andl
mov
sbb
xor
cmp
or
leave
bound
sbb
dec
sub
jmp
adc
outsb
xchg
cmpsl
xor
adc
adc
adc
insb
push
push
fbld
arpl
fstpt
push
and
push
push
jo
jmp
dec
pushf
or
adc
insl
sbb
sahf
popa
mov
mov
or
mov
dec
add
out
scas
push
cmp
shll
jle
movsb
dec
xor
cmp
sub
pop
sbb
sbb
xor
aaa
je
psubw
orl
sbb
dec
inc
pop
xlat
jle
sbbl
addl
inc
xchg
pop
int
cmpsb
and
push
cmovle
dec
into
sub
bnd
push
mov
push
mov
call
lods
or
xor
test
ret
nopl
mov
sub
jp
push
sarb
sub
in
mov
js
and
mov
mov
adc
loope
pop
mov
add
xchg
dec
jp
or
push
cltd
insb
push
or
xlat
int3
cli
jl
or
or
aaa
cmpsb
mov
adc
shrb
getsec
adc
sahf
roll
hlt
sub
rcpps
into
jne
daa
pushf
addl
jb
dec
inc
inc
add
lods
int
adcl
addl
mov
sub
inc
xor
rorb
pop
inc
cmpsb
lods
popa
cmp
testl
pop
ss
push
fldl
sub
inc
cmp
leave
cmp
mov
cmpsb
adc
push
adc
scas
pop
imul
cltd
sbb
rcrb
sbb
xchg
sahf
sub
xchg
mov
mov
loope
cmp
mov
or
push
push
pop
int
xchg
rorl
ljmp
mov
cmc
mov
mov
cmp
lret
adc
fcom
add
bound
lock
mov
sub
pushf
cmp
movsb
mov
test
add
push
xchg
loopne
mov
pop
pop
fisubrs
cmp
mov
int3
and
adc
call
cli
fdivl
adc
es
outsl
pop
xchg
adc
mov
and
adc
stos
dec
mov
shl
dec
inc
loope
in
xor
xchg
or
dec
in
sar
inc
shl
lods
mov
lods
pop
dec
jns
jnp
aam
rcl
xchg
pop
or
dec
popf
xor
fcom
lcall
ds
aam
js
outsl
cli
iret
cmpsl
sti
lret
mov
into
stos
jecxz
insl
sub
hlt
jb
mov
add
cmc
es
mov
addr16
loope
cmp
pop
or
js
pop
sbb
mov
or
fstpl
lahf
decl
inc
mov
add
inc
cmp
sbb
push
lcall
dec
test
in
dec
adc
cmc
jl
fdivs
pop
dec
mov
les
fsubrl
in
add
hlt
scas
lret
mov
mov
inc
fcoms
pop
add
imull
mul
sbb
jle
and
ljmp
fldl
pop
movsl
dec
mov
repnz
add
fidivrs
icebp
test
jp
adc
dec
adc
in
cltd
add
sub
jl
xchg
loopne,pt
pop
dec
ljmp
mov
xor
je
cmp
pop
sub
scas
adc
pop
jl
pop
pushf
xor
ds
dec
inc
test
push
xchg
pop
icebp
data16
into
sahf
xlat
xor
xchg
mov
imul
int3
xchg
pop
push
pop
fcomp
adc
aad
adc
cmp
cld
insl
fiaddl
xchg
sbb
push
adc
adc
mov
or
push
sub
pop
ret
pop
mov
fnstsw
in
xor
insl
addr16
push
loop
scas
jecxz
imul
mov
mov
lahf
xlat
xor
ljmp
pop
push
ffreep
xchg
xchg
sub
inc
das
mov
pop
fwait
xchg
das
jle
sub
or
sarb
nop
sub
pop
lret
cli
xchg
push
enter
sar
faddl
add
jae
into
cmp
sbb
in
cmpsl
cmovl
movsb
pavgb
xlat
shrl
leave
scas
lret
into
and
ficomps
dec
mov
add
imul
in
cmp
out
cmp
inc
pushf
call
in
or
ds
push
mov
mull
sbb
add
mov
dec
cmpsl
aas
and
add
xchg
pop
negl
cmp
push
jl
or
scas
mov
subl
pop
test
aam
sahf
dec
jb
and
mov
ret
jecxz
push
hlt
pop
fbld
lcall
jae
into
inc
mov
push
or
add
inc
add
lcall
cmc
fiadds
popf
add
test
pop
sbb
ds
jle
es
push
jl
mov
es
sarl
xchg
pop
dec
jmp
xor
add
jbe
jo
dec
pushf
sbb
jmp
xor
lahf
mov
repz
or
adcb
shl
mov
rolb
mov
cmp
xor
lahf
sub
shlb
mov
add
out
push
cmp
int
sahf
push
or
shl
mov
xor
ds
lcall
sbb
xchg
push
into
xchg
inc
in
inc
divl
lods
into
jmp
sub
into
out
dec
or
bound
jmp
fnstenv
arpl
jl
jmp
leave
inc
imul
les
lock
and
or
sbb
add
ljmp
dec
les
sub
dec
sbb
aam
pusha
xor
and
dec
jb
hlt
mov
dec
adc
daa
repz
das
fdivp
test
dec
mov
add
je
inc
shll
sbb
adc
insl
repz
lahf
sbb
addr16
xchg
sbb
mov
nop
pop
push
jg
cli
sahf
adc
insl
mov
jbe
ss
xchg
cld
out
rclb
cmp
lret
xlat
pusha
xor
mov
mov
mov
push
outsl
int
pop
and
mov
js
pop
int
rcll
movsb
int
cwtl
mov
rclb
pop
jl
pop
ja
push
scas
push
test
xlat
addr16
jmp
xchg
jg
pop
dec
adc
insb
mov
leave
sbb
sbb
dec
leave
lods
mov
testl
mov
dec
mov
inc
push
js
lea
jb
call
cmp
push
xchg
scas
sub
mov
xchg
mov
inc
push
or
iret
jecxz
pushf
sbb
push
mov
adc
pop
popa
mov
push
add
mov
loope
pop
jge
sbb
les
pop
xor
sub
xchg
notl
ret
aad
ret
popf
cmp
inc
int3
sbb
adc
jmp
and
iret
push
cmp
mov
rcrl
sahf
stos
mov
cmc
sbb
push
repz
inc
scas
test
jg
das
jecxz
xchg
iret
xor
shll
lahf
xchg
jecxz
pop
add
pop
test
push
mov
cwtl
pmuludq
xchg
add
sbb
or
jo
arpl
cmp
add
pop
stos
jnp
fsts
test
mov
or
out
adc
popa
aas
jnp
insl
xlat
sub
xor
lcall
mov
adc
add
and
cmp
xchg
xor
decl
mov
cmp
cs
stc
insl
or
int
mov
push
lods
or
and
lret
into
cmp
adc
test
imul
sub
insb
push
xchg
jbe
fiadds
pop
fcmovbe
clc
sbb
add
outsb
rol
push
pop
loopne
or
dec
lods
mov
xorb
jecxz
mov
jno
inc
dec
imul
push
and
icebp
adc
outsl
fisttpl
lahf
or
decl
inc
push
jnp,pt
lea
insl
fisttpll
xlat
insb
adc
lcall
ret
add
sbb
adc
xchg
bound
in
sub
mov
aas
push
xlat
add
outsb
ljmp
jmp
iret
es
filds
add
push
jl
xchg
and
iret
adc
into
dec
mov
mov
push
push
mov
jge
inc
push
rcl
lea
cs
cmp
inc
icebp
data16
sysret
aaa
adc
insl
or
xor
push
shrb
push
jmp
stos
dec
sub
jo
popa
sbb
mov
ja
xchg
jp
dec
je
add
cmp
jae
add
push
mov
jae
jp
pop
js
into
nop
mov
popf
lret
sub
scas
push
xchg
int3
int3
cmp
jge
push
jle
fs
ja
js
lcall
and
xchg
xchg
pusha
cli
jae
cld
dec
adc
adc
xchg
dec
or
orb
cmp
adc
cmp
leave
insl
pop
adc
leave
jb
mov
lret
loope
cmp
dec
imul
mov
jb
out
jecxz
mov
xchg
or
insb
dec
pop
js
cmp
addr16
push
fidivrl
add
and
xor
mov
std
cmp
arpl
and
push
fmuls
sub
xchg
test
in
or
dec
mov
aad
sbb
cmp
jne
pop
dec
mov
dec
insb
pusha
mov
scas
xchg
cmp
sub
mov
les
movsl
outsl
push
or
sbb
ljmp
push
int
out
sub
mov
mov
fstp
dec
jl
data16
in
mov
scas
fsub
xchg
xorl
push
adc
mov
mov
jl
fwait
jo
mov
and
test
mov
mov
sbb
jae
fwait
addr16
mov
fyl2xp1
xor
in
test
out
nop
sbb
lcall
or
jle
push
lret
js
imul
and
aam
cli
push
sarb
lods
push
xchg
cmp
insl
push
or
leave
scas
sub
and
in
cmpsl
and
movsb
mov
cmp
inc
sub
movsb
adc
lret
or
jae
dec
or
in
push
rclb
lret
pop
leave
dec
loopne
xor
std
mov
jge
adc
mov
imul
int3
cld
push
fcomps
mov
int
mov
cmp
daa
adc
jg
imul
pop
and
gs
lods
sbb
dec
mov
mov
subb
jecxz
inc
xlat
dec
pop
je
imul
bound
lea
outsb
std
xchg
loope
fcomps
mov
and
push
mov
pop
push
popf
sbb
ret
out
jmp
xchg
cmp
into
pushf
test
int
out
outsl
jmp
lret
call
jmp
ret
mov
cmpsl
sub
add
lods
fucom
sub
pop
lods
jmp
mov
adc
mov
es
pop
add
xlat
fmull
aam
fucomi
add
or
add
fimuls
push
leave
jl
lcall
fisubrs
xchg
bnd
inc
sahf
cmpsl
lahf
mov
addr16
aad
or
int
fimuls
pop
insb
ljmp
insl
hlt
pop
into
mov
sbb
pop
mov
dec
out
sbb
add
fstpl
sub
clc
popf
jne
cmp
fnstcw
sbb
gs
negl
insb
push
mov
js
adc
in
inc
xor
sub
dec
sub
fisubrl
sbb
push
cld
dec
ret
adc
jle
movsb
lcall
ds
ss
stos
outsb
lock
shlb
xchg
adc
lods
repnz
inc
or
fiadds
cli
pop
jecxz
and
je
out
bts
insl
and
lret
dec
sub
loope
hlt
das
loope
push
cs
sarl
or
push
fistps
ret
pop
jl
mov
mov
cltd
mov
push
push
test
ret
ficomps
fisttps
dec
insl
testb
cli
mov
out
insl
lret
ffree
clc
jns
lahf
js
mov
dec
into
addr16
aas
lcall
cmp
adc
out
fstl
inc
in
call
push
mov
push
adcb
xchg
outsb
cmpsb
mov
sub
popa
pushf
lds
add
cwtl
add
add
pop
in
mov
jae
lahf
icebp
cmc
dec
xor
lds
and
lcall
xchg
sub
or
je,pt
jl
int3
sub
ss
and
cli
pop
or
inc
ds
repz
pop
and
push
cs
mulb
lock
es
les
test
push
inc
mov
jecxz
in
sub
fdivl
mov
jne
jmp
mov
sar
adc
add
sub
faddl
adc
lahf
repz
mov
adc
lods
lods
push
mov
adc
mov
frstor
xchg
sub
das
push
push
mov
add
fisubrl
push
or
sub
leave
fisttpll
mov
mov
inc
jp
insl
icebp
pop
push
daa
push
rcrl
push
push
leave
lret
data16
push
mov
insb
adc
into
ja
jg
pop
xchg
xchg
push
inc
push
xor
lret
lcall
and
shrl
push
insl
in
push
xchg
mov
mov
inc
dec
lret
jo
lret
pop
mov
xor
mov
pop
addr16
add
mov
mov
hlt
sub
push
jns
push
icebp
shrb
xor
push
inc
xchg
or
push
lcall
gs
jecxz
fsubrs
xchg
pusha
fists
int
insl
lret
xchg
cltd
pop
push
in
fsts
sbb
xchg
fnstenv
push
nop
jecxz
mov
mov
xor
scas
xor
lock
and
lahf
mov
add
mov
std
dec
insb
addr16
cs
cmp
pop
xor
in
push
gs
add
or
incl
push
out
into
pop
cmp
int
mov
movsb
inc
inc
test
jp
mov
ljmp
xor
mov
jne
xchg
add
stos
outsl
fdivrl
mov
pop
insb
popa
push
sbb
std
push
iret
bound
jmp
shr
aam
js
pop
movsb
push
sahf
dec
lea
arpl
or
xor
sub
les
mov
int
inc
sbb
lret
ja
xchg
daa
sbb
inc
sbb
lea
lret
aam
pop
inc
mov
loopne
ds
cmpsb
bndldx
mov
push
jp
rcll
sbbl
inc
lock
inc
mov
nop
loope
mov
negl
dec
or
sub
shlb
push
daa
pandn
ror
add
push
mov
cltd
jnp
jne
adc
iret
in
fadd
dec
sub
jae
or
popa
cltd
iret
cs
lea
cmp
int
out
clc
ljmp
or
orb
fisubrs
pushf
mov
mov
cmpl
das
add
sbb
sbb
xor
and
mov
fwait
jecxz
push
clc
xchg
sarb
xchg
outsb
sbbl
mov
push
jnp
out
jmp
sbb
imul
mov
or
jg
lds
sub
dec
xchg
lods
fwait
or
aad
pop
xor
mov
xor
lds
icebp
cmp
pop
shrb
popa
ss
call
dec
leave
test
add
or
andb
mov
imul
pop
pushf
mov
lea
push
xchg
iret
outsl
jmp
fsubrl
sbb
fadds
cmpsb
push
dec
push
jg
andb
mov
jge
or
sbb
add
mov
in
sub
ljmp
pusha
adc
insl
fs
add
daa
jg
sbb
xor
fcoms
imul
fucom
int3
int3
jp
lods
scas
and
icebp
mov
loope
cwtl
xlat
fimull
or
insl
ja
push
lahf
sahf
sub
out
stos
push
fs
vmwrite
jmp
daa
lfs
push
popf
push
gs
pop
pop
sbb
mov
inc
push
xlat
pop
inc
aam
inc
fwait
cs
push
or
mov
xchg
jg
not
mov
repz
arpl
sbb
imul
mov
add
and
dec
push
xchg
pop
or
pop
loope
lds
or
ja
xor
cltd
outsl
loopne
cs
inc
or
mov
push
or
or
std
mov
dec
fldenv
enter
sub
loop
dec
stos
popa
inc
out
add
or
mov
adc
or
pop
push
mov
mov
cltd
addr16
jae
adc
adc
sbb
int
pushf
mov
test
jl
cmp
test
pusha
lds
sbb
lcall
push
inc
sbb
jecxz
mov
in
ret
stos
and
decl
push
dec
imul
push
stc
loopne
fisttpl
or
lret
adc
sbb
insb
mov
es
pop
test
insl
push
test
movsl
cli
fptan
xorb
rorb
decl
popf
std
pop
mov
and
sub
hlt
sahf
cmp
pop
test
inc
test
shrl
adc
lods
nop
loopne
ret
movsb
pop
fstpt
add
movsb
pushf
xchg
push
ret
xor
jmp
pop
and
lret
inc
jl
adc
lods
enter
or
lods
jecxz
fidivl
test
or
push
insb
or
or
mov
inc
and
rol
cmp
cld
fcoms
test
vcmpps
fucom
sub
xchg
out
pushf
jmp
or
lcall
in
fcompl
repz
dec
push
jmp
sarb
jo,pn
mov
xchg
push
aaa
jge
bound
aad
jno
aad
xchg
jmp
inc
test
add
mov
mov
mov
cwtl
mov
xchg
fldt
xchg
xor
sbb
inc
adc
push
and
mov
insb
repz
daa
mov
repnz
icebp
enter
add
loopne
leave
pop
inc
in
in
sbb
push
xor
inc
mov
outsl
aas
cltd
bound
in
movsl
cmp
sbb
mov
push
insb
filds
aad
aam
mov
adc
sbbl
gs
fnstenv
pop
cmp
out
ja
sbb
aad
jl
push
pop
pop
xor
lea
iret
push
mov
sub
in
cmp
inc
adc
or
jo
inc
subb
addb
push
push
movsb
call
cmp
in
aas
popf
pop
daa
dec
movsl
lea
or
xchg
jbe
movsl
xor
push
cmp
aam
insl
push
loope
daa
addr16
inc
push
jae
push
mov
dec
fsubrs
aam
jmp
xor
sbb
pop
pop
mov
sbbb
or
mov
and
mov
cmovns
pop
int
mov
test
push
insb
mov
xchg
test
pop
rcrl
sub
mov
repz
mov
fistps
lods
xchg
cwtl
imulb
faddl
leave
adc
nop
xor
mov
xor
sahf
mov
xchg
aam
bndldx
data16
xlat
aam
mov
les
sub
mov
ss
pop
mov
push
popf
dec
ljmp
mov
and
fbstp
jle
jne
insb
andb
jo
in
cmp
adc
sbb
std
in
dec
hlt
lahf
jmp
xchg
pop
mov
cwtl
arpl
ljmp
pusha
cmp
repnz
push
hlt
or
je
es
inc
push
mov
dec
push
adc
mov
insb
pop
mov
mov
and
mov
pop
loope
or
xor
adc
mov
mov
jmp
insl
test
mov
push
out
or
int3
mov
ss
inc
leave
push
sub
and
sub
cs
insl
jb
shl
jge
pop
mov
ja
jmp
inc
cmp
push
repnz
stos
sbb
inc
ljmp
es
stc
sbb
sbb
loope
xor
popl
add
dec
dec
mov
enter
mov
cmpsb
fdivr
mov
lret
push
loopne
xlat
xorb
and
imul
pop
test
xor
sub
insl
jae
inc
push
xor
cmp
repz
or
xchg
mov
xchg
pop
prefetchwt1
add
scas
push
clc
inc
push
pop
sbb
pop
add
push
cs
push
pop
sbb
pop
and
rcr
sub
sbbb
movd
stos
sub
scas
mov
mov
arpl
sub
mov
in
adc
outsb
scas
xchg
mov
xor
cmpsl
xchg
mov
cmpsl
adc
aaa
int3
ficoml
test
das
test
sub
mov
jae
bound
fisttps
movsb
ret
rorl
adc
aad
mov
fisubrl
and
ret
cltd
inc
in
pop
push
or
ss
insb
push
int
jb
mov
fisttps
inc
hlt
test
adc
add
nop
jecxz
packssdw
pop
sbb
push
sbb
or
push
adc
sub
push
fsubs
test
sbb
insb
repnz
scas
bound
xchg
repz
aad
pop
xor
mov
insb
and
sub
adc
cmpxchg
movsb
adc
push
test
orl
addl
jl
adc
decl
insb
sbb
adc
lock
cmp
int3
jbe
mov
imul
out
lret
pop
insb
mov
das
mov
mov
jp
cs
or
imul
cltd
push
adc
inc
test
and
pop
int3
sub
cmpsl
sbb
out
cs
xor
out
cmp
fsubr
out
cmp
aam
rclb
sub
popa
inc
add
fstpl
jg
mov
pushf
loop
mov
mov
sahf
push
or
sbb
fldcw
cmp
into
fldl
cmp
out
jbe
mov
dec
dec
fsts
xchg
cmovno
jnp
dec
sub
pop
xchg
xchg
mov
rolb
and
adc
mov
cwtl
push
pop
arpl
push
insb
pop
push
test
lea
sbb
xor
das
cmp
add
addl
lahf
cli
push
test
sub
dec
and
imul
fsubp
and
cmp
add
sub
outsl
push
or
aam
lcall
insb
inc
push
add
add
call
into
loopne
sbb
mov
pop
dec
je
popf
gs
fsts
idivl
leave
push
rcrb
insb
xlat
ljmp
out
inc
incb
pop
scas
dec
lahf
daa
int
cmc
sbb
and
fdivr
push
push
insb
out
movsl
push
sbb
jge
into
adc
jle
daa
push
sbb
dec
adc
iret
xor
insb
call
sbb
test
sahf
scas
outsb
adc
sub
pop
sbb
insb
fisubl
xchg
sbb
lcall
push
addr16
sbb
mov
inc
outsb
test
mov
cmp
inc
push
imul
mov
push
sub
cld
adc
fsubrl
push
sbb
imul
or
adc
cwtl
mov
xchg
jp
scas
jge
outsb
pop
mov
xor
jae
and
movsb
mov
das
in
int3
add
sub
mov
out
outsb
imulb
or
repz
daa
cmp
mov
fisttpl
lret
stos
cmp
sub
or
sub
mov
inc
jb
pop
inc
sbb
adc
lods
jecxz
lods
mov
mov
push
pop
push
xchg
sub
pop
xor
push
jns
repz
jae
insb
jae
loope
fcoms
shlb
lcall
add
pop
xor
or
dec
lcall
push
push
sub
notb
inc
mov
test
test
ret
dec
popf
adc
fcoml
dec
sub
lahf
rcr
push
push
iret
call
in
lods
leave
pop
into
push
sub
insl
mov
sbbl
jae
push
das
xor
mov
push
pop
mov
cmp
sub
or
cs
mov
cltd
xchg
cs
sbb
mov
sbb
imulb
hlt
xchg
lea
pop
push
mov
ret
dec
mov
inc
or
sub
sbb
iret
or
in
push
inc
lahf
mov
jns
mov
test
push
orb
aas
fcoml
xlat
push
jmp
xchg
mov
test
stos
jbe
lods
daa
xchg
cmpsl
lds
cmp
mov
or
mov
mov
pop
xchg
sub
insl
lods
push
das
adc
rcll
pop
dec
lods
sbb
fcomps
dec
call
fmul
mov
jnp
popa
mov
test
rorl
pop
sub
lods
push
pop
pop
pop
mov
jmp
ljmp
inc
xchg
rcr
xchg
jb
jle
sub
jb
pop
dec
jmp
jecxz
push
sbb
add
and
sti
ret
shrb
icebp
push
jb
push
cs
jnp
mov
pop
es
jbe
pushf
sub
daa
inc
jno
aas
pop
int3
iret
addr16
jno,pn
lods
mov
int
push
add
cmp
les
and
xchg
lods
pop
cmp
adc
in
cmp
pop
pop
and
aam
sbb
dec
mov
push
add
cltd
fisubl
shrb
out
adc
inc
jp
rolb
adc
imul
mov
fidivl
shrb
inc
sub
out
pusha
insb
and
push
mov
mov
sbb
movsl
and
mov
sub
ss
cmp
or
or
mov
mov
les
aaa
stos
movaps
push
cmc
jnp
push
lcall
sub
sbb
jae
cmp
fdivr
add
pop
add
adc
xor
add
loopne
add
or
ds
jl
mov
push
aas
or
scas
dec
stos
jg
pop
sahf
loope
dec
movsl
dec
lret
push
addr16
leave
pop
push
insb
mov
jmp
fiaddl
sub
inc
push
mov
mov
sbb
dec
leave
inc
repnz
enter
mov
fldcw
shlb
mov
mov
aad
add
push
inc
inc
push
cs
adc
xchg
xor
test
push
rorl
outsb
cmpsl
shrb
sub
outsb
call
sbb
jecxz
mov
subl
cs
cmp
and
pop
push
or
cld
or
jl
les
adc
or
xchg
xor
aam
push
pmaxsw
xor
jns
aaa
pushf
sbb
sub
aad
mov
jno
jl
cli
leave
cmpsb
push
lahf
fstl
xchg
cltd
test
sub
push
fwait
mov
and
das
mov
ret
loope
push
imul
outsb
and
sub
sub
lods
fisubrl
mov
cltd
lcall
cmp
daa
fbstp
cmp
lahf
fidivl
lea
sub
push
outsb
insl
dec
rcll
pusha
inc
lea
add
push
push
cmc
sbb
sbb
cs
cmp
pop
lret
or
insl
and
cli
push
setb
loope
insb
out
mov
adc
sbb
sub
adc
xchg
jecxz
repz
insb
les
rorl
xchg
sbb
sub
insb
paddb
mov
cmp
adc
and
xchg
dec
push
ds
pop
andb
or
into
ss
inc
xchg
xor
and
xchg
dec
daa
sbb
pop
push
cmc
pop
mov
or
add
jae
mov
adc
dec
add
out
in
push
sbb
sub
sub
xor
push
xor
pop
sbb
mov
into
fadds
lods
and
mov
les
je
repz
insb
imul
cmp
dec
push
popa
cs
sti
sbb
mov
stos
rclb
push
nop
fidivrs
push
add
mov
stos
push
outsb
dec
iret
add
gs
adc
mov
mov
cmp
lds
and
xchg
int
add
rcrb
sub
mov
fcom
and
add
daa
add
ljmp
add
dec
sbb
mov
adc
lret
add
pop
in
sub
stos
stos
push
push
jns
inc
adc
cli
aam
mov
repz
pop
adc
test
and
mov
outsb
or
jle
xor
aaa
push
pusha
add
push
lret
in
mov
dec
mov
push
push
dec
into
cs
sbb
adc
ds
cmp
jne
mov
push
or
fsubl
dec
mov
dec
dec
and
nop
lods
sbb
nop
cmp
fnstenv
cmpb
lahf
sbb
in
mov
push
pushf
jb
jecxz
push
cld
and
insl
jmp
out
push
jg
mov
mov
push
sub
imul
clc
xchg
add
lods
jecxz
fwait
sub
movsb
sbb
mov
faddl
fdivl
pop
mov
pop
pavgb
or
aas
push
iret
sbb
xor
out
jb
or
sbb
push
insl
in
jb
insb
mov
dec
push
inc
out
pop
lret
sarb
mov
mov
fs
sbb
out
sub
iret
ret
sysenter
iret
es
fnsave
ret
psrld
or
into
mov
dec
mov
std
movsl
lods
test
mov
push
rolb
sbb
xchg
mov
add
sub
cmc
gs
idivb
dec
push
ret
inc
jnp
ja
adc
sar
push
negl
das
dec
sbb
push
pop
out
xchg
push
mov
adcl
fs
or
pop
scas
mov
out
push
les
cs
in
cli
jmp
inc
push
adc
cmp
pop
and
test
cmc
pushw
or
divl
lock
xchg
testb
adc
fstpl
adc
sub
add
loopne
pop
or
test
or
fidivs
jge
jecxz
inc
lahf
cmp
rolb
lea
popf
sti
push
push
cmp
cmp
add
test
in
addr16
adc
subb
ret
add
jmp
dec
mov
dec
pop
imul
les
xchg
jnp
inc
fcoml
ret
repz
popf
push
fsts
shr
ret
pusha
lods
sbb
adc
push
nop
loopne
ds
xlat
loop
lahf
push
divl
stos
das
roll
and
or
add
sbb
fwait
and
lahf
stc
or
stos
ret
loop
shll
adc
loopne
dec
or
and
xor
sbb
adc
mov
or
clc
adc
xlat
out
dec
jg
push
in
arpl
mov
add
scas
loopne
cmc
jmp
add
ud2
cld
adc
in
lret
pop
ljmp
outsb
push
mov
cmpsl
addb
jmp
push
int
sbb
addr16
mov
fsubrl
sarl
imul
sbb
add
or
mov
mov
mov
cmpsl
call
xchg
adc
in
fwait
mov
lcall
sub
cmc
repz
jnp
out
lods
push
sbb
dec
sarb
cmp
cmpsb
push
sbb
outsl
add
mov
fcoml
sbb
inc
fcmovbe
cmp
adc
pop
sub
mov
adc
push
inc
aas
pop
iret
mov
lahf
int3
bound
mov
and
push
and
inc
push
inc
ljmp
cmc
sub
lea
insb
sub
fwait
push
sbb
push
mov
rclb
add
adc
pop
popf
push
inc
push
daa
loopne
lret
insb
jge
push
lods
push
rorb
jecxz
mov
mov
sbb
cmp
out
dec
test
add
mov
sbb
add
adc
cmpsb
cld
adc
push
sbb
stos
lds
fcmove
daa
cmp
mov
aas
xchg
pop
mov
ss
cmpsl
mov
xchg
jb
movsb
and
jg
testl
lret
adc
aas
sti
add
add
lret
cs
mov
mov
aam
mov
lods
mov
daa
popf
sbb
sarb
lcall
xor
iret
cltd
jae
addl
xor
lret
or
rolb
pop
loop
push
fcoml
or
push
test
inc
test
call
mov
push
mov
push
aam
and
stos
mov
jle
sahf
cmp
xor
push
cmp
jmp
mov
adc
adc
imul
mov
add
jge
mov
loopne
mov
jb
outsb
insl
scas
push
les
mov
xor
int
pushf
lret
sbb
lahf
adc
fidivrs
daa
cld
inc
sbb
cmp
pop
pop
adc
sbb
into
insb
test
mov
or
inc
push
in
insl
mov
push
insb
and
mov
push
add
adc
xchg
pop
sahf
mov
mov
movups
faddl
sbb
mov
insl
adc
stc
mov
mov
or
insl
test
out
pusha
in
es
mov
and
mov
sbb
sub
pusha
or
jl
jecxz
fisttps
shr
daa
adc
adc
jmp
jns
aam
out
add
push
lcall
mov
pop
mov
out
mov
popa
lcall
xor
jecxz
mov
das
push
sti
inc
lret
movsb
mov
aad
push
mov
rcl
sbb
cmp
jle
mov
je
sbb
shr
or
sbbb
xor
aam
sbb
sbb
mov
adc
fwait
lret
sbb
icebp
stos
test
arpl
dec
addb
jecxz
jecxz
xlat
push
sub
mov
test
dec
pop
pop
insb
aad
ret
fwait
jecxz
pushf
pop
jg
lds
out
xchg
int3
jae
push
push
and
xchg
daa
adc
in
pop
or
add
xchg
push
ficomps
fsubs
pusha
dec
pop
jmp
gs
sbb
mov
cmpsl
xchg
mov
inc
push
jl
lret
and
aas
fisttpll
jnp
inc
and
jl
enter
paddd
flds
xlat
nop
cmpsl
sbb
inc
addr16
and
ret
xchg
add
test
icebp
add
adc
pop
sub
jbe
pop
mov
pop
and
loope
add
sub
add
mov
mov
in
sub
jno
sub
push
add
cwtl
nop
mov
dec
adcl
or
jns
or
repnz
addb
mov
sahf
pushf
add
adc
mov
insb
sub
lahf
inc
les
lea
scas
test
js
or
dec
ja
push
cmp
fdiv
adc
mov
sub
aad
lea
dec
add
sbb
or
testl
and
or
and
mov
movups
insb
push
push
pop
add
in
xchg
movsl
leave
imul
or
int
shrb
lret
arpl
mov
out
xchg
daa
mov
std
lret
dec
es
in
imul
adc
cmp
jmp
aad
sbb
lods
cmp
bnd
jae
ss
or
cmp
enter
cli
or
sahf
scas
xchg
fsts
inc
xchg
add
sub
adc
jle
and
fmuls
fildl
jnp
stos
jg
inc
clc
cmp
movsb
aaa
jae
cli
xchg
jne
inc
sbbb
int
mov
add
mov
fisubrl
adc
or
jp
mov
aad
out
xchg
aam
push
jbe
out
inc
imul
cli
ja
mov
push
sbb
add
scas
xchg
and
jecxz
adc
jno
sbb
jle
add
enter
jl
push
nop
sbb
add
sbb
scas
mov
pop
adc
sub
mov
sbb
fmuls
stos
xor
jle
sbb
xor
mov
adc
cli
scas
mov
dec
lds
or
or
jo
cld
xor
mulb
fst
movsb
and
imull
pop
mov
jp
mov
decl
jecxz
lret
mov
pop
sbb
mov
imul
bound
adc
jl
pushf
pop
pop
sbb
dec
fdiv
push
fdivrs
push
int3
decl
gs
jnp
test
jl
jle
pop
add
test
leave
insb
cltd
aam
in
out
in
xchg
in
sub
ds
pop
into
and
sbb
push
mov
mov
insb
mov
ror
incl
sbb
xchg
cmp
popf
dec
pop
enter
out
push
mov
xchg
rcr
addr16
push
cmp
mov
fdivrl
mov
rcl
clc
fstl
inc
insb
jle
dec
insl
lahf
adc
xor
inc
and
dec
int
cmp
fwait
adc
dec
das
ds
fsubr
mov
ds
jb
pop
inc
inc
mov
cmpsl
or
mov
xchg
inc
cli
subl
fstps
rcr
insl
pusha
imul
dec
lahf
sbb
inc
cli
or
icebp
sbb
les
mov
iret
push
or
out
cli
insl
pop
popf
inc
cmp
pop
movsl
or
dec
test
or
js
or
hlt
inc
loope
fs
and
mov
adc
pop
mov
pop
inc
fwait
int3
push
les
enter
shll
into
cltd
push
shrl
adc
test
jb
mov
movsb
mov
jmp
xchg
dec
mov
sbb
xor
lret
mov
jl
movsl
stos
insb
leave
pushf
movsb
jns
sbb
dec
int3
jecxz
pop
enter
pop
mov
xchg
jno
dec
out
mov
jae
arpl
aaa
out
mov
leave
outsb
pop
adc
inc
jnp
dec
dec
psubusb
sub
pop
or
and
mov
sbb
mov
ss
aas
cmpb
jle
lahf
jecxz
stos
cmp
adc
call
cmp
pop
mov
adc
adc
movsb
daa
clc
imulb
adc
xchg
jle
xlat
cmp
fsubs
insb
add
fnstcw
ds
xor
ljmp
rcl
les
mov
mov
adc
add
pushf
cltd
repnz
dec
sbb
dec
mov
mov
inc
das
pop
push
mov
mov
ficoms
cwtl
pop
enter
xchg
fmuls
loop
bound
hlt
ss
aam
fiadds
jp
mov
jmp
push
fwait
adc
and
xchg
cwtl
ds
mov
mov
xor
in
cmovl
add
sbb
xchg
movsb
cmc
inc
das
ja
mov
fstl
adc
sbb
mov
xchg
lds
jo
or
enter
dec
jecxz
test
and
sbb
cltd
loopnew
or
shl
cmp
sub
pop
add
mov
leave
push
daa
push
ficoml
testl
lods
int
jmp
roll
mov
dec
mov
xchg
jecxz
mov
pop
cs
in
dec
push
xor
xchg
int
jne
sub
cmpl
das
adc
cmp
sti
es
adc
fcoms
int
jns
roll
sub
jecxz
xchg
pop
jo
or
xchg
adc
sub
cs
push
add
jmp
xchg
std
xor
sbb
jo
mov
clc
repz
and
lahf
cmp
shlb
pushf
sbb
add
lahf
xchg
mov
add
gs
dec
lcall
out
dec
or
fimull
adc
in
pop
cmp
mov
js
inc
daa
pop
and
loop
xchg
out
adc
push
mov
and
jno
dec
cmp
je
sbb
out
insl
shr
xchg
fidivs
mov
adc
xchg
pop
pusha
rorl
imul
push
lahf
mov
adc
adc
mov
cmp
scas
xor
xor
dec
test
or
and
hlt
xorb
test
repz
mov
aas
pop
jmp
add
push
mov
testl
test
add
sti
inc
inc
dec
dec
mov
dec
scas
xor
test
push
push
xchg
ljmp
lock
mov
cmp
jl
or
mov
addr16
mov
jl
mov
cmp
pop
lock
jmp
in
scas
je
sub
lea
xchg
pop
loope
cmc
cs
test
andl
dec
arpl
pop
test
pop
mov
and
std
insl
pop
sti
test
sub
push
adc
enter
ret
sbb
lds
out
xchg
push
pop
mov
jle
sbb
out
ljmp
cmp
fcomip
fcmove
insb
daa
shr
mov
lock
vcvtdq2ps
dec
pop
push
jle
rcrl
mov
out
shlb
or
aaa
xlat
mov
inc
xchg
ret
adc
mov
outsl
pop
jno
push
xchg
repz
dec
scas
sbb
dec
insl
repnz
test
mov
leave
pop
xchg
aaa
mov
mov
in
jle
adcb
mov
mov
je
outsb
jmp
add
push
stos
push
or
insb
pop
aaa
shrb
in
divps
mov
scas
lea
stos
mov
movsl
ret
adc
outsb
jle
mov
sbb
icebp
orb
or
mov
loope
mov
dec
mov
fdivrs
pushf
or
aaa
inc
movsl
jl
out
jae
mov
xchg
push
push
mov
xchg
cmpsb
shll
pop
jle
xchg
js
pop
xor
push
dec
popa
push
and
sbb
pushf
xchg
rcr
loope
cmp
xchg
movsb
and
ss
or
adc
cmovge
in
test
dec
xchg
frstor
mov
adc
imul
jo
xor
adc
jns
sub
pop
pop
cmp
and
pop
mov
xlat
xchg
loope
and
fcomip
pop
pushf
je
dec
pop
sbb
ljmp
popf
pop
sbb
sub
mov
push
lods
xchg
out
shrb
push
xchg
inc
mov
xchg
cmpsb
jb
test
and
cmp
or
aam
jp
dec
or
sub
movsb
cmpsb
or
addr16
shrb
es
xlat
int
inc
mov
adc
iret
xchg
cmp
jge
xchg
add
mov
cltd
jbe
adc
ds
sbb
pop
int3
adc
sbb
pusha
or
adc
or
mov
das
int3
mov
or
and
inc
hlt
and
lret
hlt
mulb
dec
outsl
es
pop
stc
daa
sub
adc
out
cmc
jg
andl
sbbb
mov
insb
pop
rcrb
or
leave
dec
add
addr16
aaa
repz
push
dec
mov
and
out
pop
mov
sbb
mov
inc
mov
mov
adc
pop
and
pop
xchg
mov
scas
cmpsb
loope
mov
loope
jecxz
mov
outsl
jb
and
inc
dec
in
mov
fbstp
lret
fldcw
aaa
divb
ljmp
ja
push
sbb
scas
aaa
mov
xor
add
and
xchg
lahf
cmp
sbb
fs
jle
addb
dec
xchg
fidivs
jne
daa
js
adc
insl
or
push
imul
xchg
fstps
mov
dec
sbb
repz
and
sbb
imul
inc
mov
lods
xor
xchg
jns
daa
js
adc
mov
push
sub
adc
mov
and
and
fcomps
aad
inc
addr16
into
rcrl
mov
sub
lock
dec
lock
and
out
stos
shll
fdivrs
push
inc
nop
mov
leave
leave
push
aaa
mov
les
ljmp
ret
icebp
aad
aas
data16
lea
cld
mov
adc
aad
and
adc
shr
dec
into
hlt
sbbl
xor
jb
fistl
test
jl
or
dec
cs
mov
fwait
lret
pop
jbe
mov
mov
sub
addr16
mov
arpl
lds
mov
mov
ret
bound
inc
loopne
outsl
pusha
fists
mov
lahf
es
lea
adc
or
xlat
push
scas
imul
jns
scas
mov
dec
inc
mov
pop
add
popa
call
and
adcb
or
mov
jae
inc
dec
pushf
jp
adc
push
shlb
dec
js
clc
fistpl
and
mov
xor
push
mov
pop
fstpt
shlb
xorb
xchg
fadds
sub
cmp
or
lods
sub
sahf
pop
mov
das
sbbb
bound
and
mov
dec
insb
and
mov
jl
adc
addr16
out
into
adc
fwait
cmp
loop
pop
pop
pop
gs
dec
or
pop
pop
stos
sbb
jg
lret
std
hlt
sub
pop
test
jae
and
add
stc
pushf
mov
icebp
push
cmp
out
addr16
rclb
mov
push
imul
cmpb
jno
or
loope
cld
sbb
jecxz
test
mov
xchg
psubd
std
pop
jl
jl
push
mov
sti
mov
pop
push
mov
pop
adc
lods
mov
mov
call
outsl
dec
sbb
inc
cmc
cmp
xlat
jg
cmp
mov
and
adc
dec
push
or
cmp
inc
dec
and
jge
pop
mov
xchg
rcrb
cmp
cld
sbb
sbb
les
fstpl
sbb
sbb
das
mov
jl
push
mul
xor
adc
jmp
xchg
xchg
mov
repnz
sub
add
fmuls
and
ret
loope
adc
pop
ror
lahf
push
inc
xchg
sbb
leave
dec
pop
or
push
dec
imul
shrl
inc
lcall
cmp
sahf
stos
fcmovnu
mov
or
adc
jo
sbb
test
sahf
test
pushf
sbb
xchg
sbb
mov
sbb
inc
mov
outsb
and
movsl
jg
sub
loopne
mov
add
push
sbb
add
sub
push
mov
jmp
je
push
int3
adc
and
jle
scas
jecxz
sub
nop
inc
cltd
cltd
jg
unpckhps
int3
sub
jge
inc
and
and
es
xchg
jo
enter
push
imul
addr16
and
mov
dec
aad
mov
xor
cmp
and
jae
add
popf
fidivl
lods
dec
sub
inc
in
sti
jo
lods
loope
shlb
mov
pop
adc
cmp
test
and
jae
sub
xlat
cs
iret
insb
test
mov
fisttpll
sahf
daa
inc
dec
add
stos
lret
sub
sbb
dec
or
push
test
mov
mov
inc
sbb
and
fwait
outsb
mov
xchg
insb
popf
add
or
xlat
push
sub
outsb
sub
or
lret
xchg
lea
sub
xchg
cltd
lret
sbb
ss
dec
add
int
in
jae
addl
inc
lcall
pop
andl
adc
xchg
adc
sbb
das
adc
dec
xchg
mov
dec
sbb
cwtl
add
mov
push
shlb
movsb
xchg
cmp
jle
fcompl
mov
cltd
fisubs
call
lods
daa
mov
les
push
adc
clc
xor
addr16
xchg
mov
inc
mov
adc
push
xor
icebp
dec
pop
pop
sbb
mov
mov
fwait
pop
cmp
inc
push
cmpsb
sbb
imul
lods
and
xchg
jbe
dec
bound
das
xlat
dec
int
adc
subl
cmp
sbb
jno
cs
sbb
and
add
cmp
or
aad
mov
xchg
je
or
push
pop
in
or
int
and
clc
mov
pop
cmp
in
mov
dec
mov
ret
pop
xchg
test
test
rolb
sbb
mov
pop
cmp
mov
pop
add
in
cld
and
loopne
dec
and
ret
xchg
xchg
cli
pop
enter
outsl
or
mov
sbb
dec
mov
mov
fcoml
or
push
stc
jb
fistpll
in
rep
dec
stc
mov
add
out
add
dec
and
adc
pop
es
test
loopne
push
cmc
inc
sbb
push
es
push
and
push
nop
mov
and
add
adc
test
pusha
mov
pushf
dec
jp
lret
ss
outsl
pop
and
mov
jbe
fs
jnp
in
pop
ret
dec
in
inc
rcll
repz
loope
sbbl
popf
xor
xor
pusha
mov
or
fsubp
fs
loop
popf
or
mov
fs
addl
lahf
lahf
sub
mov
ficoml
inc
movsb
push
das
xor
popf
jge
jge
xchg
or
mov
sub
push
xor
xorl
jg
mov
leave
insb
mov
and
pop
and
lods
xchg
mov
bound
mov
mov
cmp
in
or
les
rcl
mov
scas
or
sbb
lret
ds
push
aad
cli
inc
push
notl
pop
lret
cmp
mov
addr16
sbb
mov
sub
add
mov
rolb
out
mov
test
push
loop
gs
jp
in
imul
test
sub
ljmp
lahf
sub
mov
pop
imul
fisubrl
stos
adc
mov
or
dec
aaa
sub
sub
pop
inc
dec
ds
loop
xchg
cmp
jns
push
jecxz
sbb
orb
fists
imul
lods
or
dec
mov
je
push
ss
sbb
or
hlt
mov
out
sbbl
cmpl
jns
jne
cmpsb
push
adc
out
mov
rcll
adc
stos
scas
inc
fwait
inc
xchg
sub
loopne
cmp
sub
fsubrp
sarl
out
or
out
pop
sub
jno
call
xlat
jmp
mov
sbb
jge
or
inc
pop
xchg
mov
jl
jle
mov
ljmp
outsl
adc
aad
xchg
fdivrs
pop
xchg
mov
clc
insl
out
or
dec
adc
push
test
mov
inc
iret
xor
shll
rep
cmpsl
sub
sub
out
xor
dec
push
mov
fwait
or
adc
push
dec
adc
hlt
add
cs
stc
mov
repz
shll
insl
scas
lock
aaa
pop
insb
jg
cmp
in
sbb
pop
decl
pop
imul
xor
mov
sbb
hlt
fnstenv
mov
rolb
mov
push
clc
insb
movsb
mov
sbb
cmpsl
outsb
adc
sar
add
pushf
loopne
sbbb
repz
inc
add
pop
mov
sbb
test
cmp
test
imul
jbe
jmp
dec
xchg
js
mov
es
cmp
movsb
mov
mov
fldl
and
add
xor
popf
add
pop
xchg
sarb
adc
sub
or
popf
or
inc
sbb
daa
mov
pop
pop
mov
cltd
adc
push
pop
cmp
call
setg
clc
inc
loop
cmpb
fdivrl
cltd
ffree
cmp
push
pop
push
loopne
lcall
push
mov
loopne
repz
and
in
push
push
aaa
aad
cld
push
fnstsw
fs
cmp
xchg
push
sub
jmp
sub
and
xchg
xor
or
push
cmp
cmp
and
cmp
dec
popl
test
and
push
aas
or
push
inc
scas
inc
sarb
ds
inc
mov
or
ja
sbb
add
dec
push
add
sub
xor
lods
push
lods
sahf
out
pop
add
fcoms
push
stos
dec
jp
or
pop
push
fsubrs
mov
mov
nop
push
cmp
loope
ss
adc
int3
jecxz
inc
mov
and
adc
lret
xchg
adc
clc
inc
aad
roll
fs
push
cmp
ret
fldl2e
cld
adc
mov
sbb
mov
dec
leave
jmp
rcrb
and
aad
or
push
jno
movsb
adc
push
test
int3
mov
shlb
sbb
push
sub
lret
rcll
mov
mov
mov
push
hlt
popf
into
arpl
dec
cmp
clc
or
dec
imul
push
ljmp
pop
sub
fimuls
sbb
movsb
mov
pop
inc
rcl
adc
xor
sub
test
stc
stos
enter
cmp
ficoml
sbb
popa
lods
push
sbb
push
popf
sbb
inc
into
ja
ds
fisttpll
jecxz
shlb
js
mov
shl
pop
arpl
mov
lcall
popf
cwtl
ficoml
jl
adc
stc
ds
push
xor
shlb
pop
adc
dec
jno
lea
pop
int
mov
or
daa
int3
mov
sbb
pop
repz
scas
jge
test
mov
das
cmc
sub
or
jb
mov
sbb
je
push
mov
inc
adc
or
and
lock
fists
dec
jp
into
int3
xlat
jmp
xchg
insl
pop
dec
push
in
in
push
push
mov
cmpsl
lahf
sahf
xchg
shr
cmp
jbe
pusha
insb
aam
cmp
in
into
test
push
ja
push
sbb
jecxz
aas
and
test
jnp
adc
out
sub
sbb
pop
jecxz
pop
or
xor
insl
popf
sbb
nop
fsubrl
sbb
out
jle
jmp
fidivl
aad
jmp
sub
sub
imul
sbb
bound
push
dec
xor
dec
and
push
cmpsl
clc
inc
or
je
push
sbb
nop
in
pushf
pop
cmc
sub
and
arpl
clc
repnz
popa
sub
movsb
ja
test
cmc
jl
call
roll
add
mov
imulb
es
xor
dec
sub
outsb
cwtl
jns
push
push
lcall
mov
sub
mov
aam
xor
loope
lods
sub
lods
xor
jo
pop
clc
cs
fldln2
add
sub
out
xor
lahf
aad
aam
xchg
push
xchg
loope
xchg
dec
aas
inc
and
sbb
pop
adc
mov
ret
xor
lea
dec
dec
cli
enter
cs
push
insl
ja
mov
pop
aaa
scas
hlt
adc
adc
mov
loope
ja
add
les
loopne
add
ja
push
mov
xor
imulb
xor
repz
addr16
push
scas
xlat
and
and
jb
rcll
jle
sub
cmpsb
mov
gs
sub
sub
mov
popa
lcall
xchg
mov
pop
bswap
sub
xchg
push
mov
leave
test
adc
fs
and
xchg
mov
fwait
fs
mov
add
pusha
xchg
fcomps
arpl
or
sbb
push
cld
sub
add
and
aaa
jl
fidivrs
dec
mov
scas
pop
xchg
cmp
out
daa
push
in
push
insl
lret
rclb
xchg
inc
in
adc
and
cmp
mul
sahf
ret
nop
cmp
pusha
and
mov
adc
xor
mov
repnz
push
push
push
iret
dec
sbb
fnstcw
sub
fcoml
pop
push
rorl
mov
push
dec
cmovge
inc
lcall
adc
adc
adc
inc
lret
xchg
xchg
repnz
sbb
push
mov
mov
dec
sbb
cwtl
dec
repnz
xchg
sbb
sbb
sbb
xor
popf
sbb
pop
cs
outsb
sub
repnz
and
mov
dec
push
cmp
and
repnz
dec
sub
and
adc
xchg
sub
xchg
adc
lret
add
push
sub
sbbb
fnsave
push
xor
cmp
mov
mov
repnz
int
ffree
xchg
ss
or
insl
sbb
add
xchg
xor
aad
xchg
or
push
aas
fmull
insl
xchg
xchg
int
pop
xorps
in
jl,pt
mov
shr
ja
and
mov
js
sub
insl
stos
aad
in
shlb
adc
cmp
sub
or
sahf
movsb
cmc
xor
xchg
fsubs
mov
dec
test
mov
push
cmp
or
xchg
les
movsl
mov
add
inc
insl
xor
in
mov
lret
mov
push
pushf
fdivrl
or
stos
push
int3
daa
inc
sub
inc
lea
aam
lahf
mov
aaa
jp
es
cmp
sub
pop
jp
rcrl
repnz
scas
mov
jnp
loope
jle
ffree
inc
pop
mov
mov
cmpsl
adc
dec
sub
sub
sub
adc
cmp
jne
dec
fucomp
lret
adc
lds
scas
xchg
into
sub
clc
cli
xor
lds
dec
jns
mov
in
sahf
nop
inc
mov
and
jle
test
jle
pop
fcompl
jmp
sahf
leave
cmc
aaa
lahf
fmul
mov
cmpsb
lods
mov
lret
pop
jno
push
adc
js
sub
xor
std
push
repz
fistps
jne
jle
int3
lahf
pop
jecxz
dec
dec
inc
add
and
mov
inc
std
mov
fildll
sub
les
ljmp
mov
push
js
mov
push
mov
xor
dec
insb
sbb
into
sbb
xchg
imul
pop
cld
mov
and
xor
dec
push
fld
pop
adc
cmpsb
aad
inc
push
imul
jb
imul
sbb
push
shr
add
cld
mov
jp
call
xor
push
or
push
scas
inc
loopne
outsb
pop
dec
add
leave
into
loopne
mov
aaa
hlt
jecxz
or
sbb
aam
jno
mov
jg
and
stc
and
ja
sub
adc
sbb
rcrb
jo
and
ficomps
pop
sahf
cmp
push
sbb
dec
cs
lock
mov
jecxz
jge
icebp
jmp
pop
dec
movl
mov
xor
xor
jnp
dec
push
arpl
lret
ljmp
adc
cli
mov
fpatan
jecxz
and
jmp
aad
pop
ret
stos
mov
cmp
mov
push
mov
scas
into
mov
or
push
push
test
out
mov
in
data16
pop
aad
adc
popl
mov
je
mov
cmp
jne
mov
lcall
sub
adc
xor
movsb
outsl
fwait
jge
mov
xchg
xchg
fdivr
or
mov
outsl
cs
xor
out
mov
jae
pusha
jp
add
cmc
outsb
mov
movsl
repnz
fisttpll
or
fcom
lret
inc
call
pop
imul
mov
push
add
jg
or
inc
arpl
stos
mov
adc
out
stos
mov
imul
lods
xchg
addr16
push
jecxz
xchg
sbb
movsl
fiadds
pop
inc
xchg
sahf
out
ds
dec
mov
push
hlt
adc
push
stos
inc
mov
mov
je
pop
hlt
fs
jle
lods
repz
xchg
in
mov
lods
stos
outsb
aas
push
pop
pop
fsubrl
pop
orl
mov
pop
jle
push
cld
in
imul
or
lea
mov
dec
sti
or
adc
lret
fisubs
adc
mov
pushf
add
pop
fcoml
adc
dec
jno
data16
cmp
mov
lea
xchg
fisttpll
popf
and
insb
pop
cwtl
or
pop
shll
data16
push
cs
or
stc
fmuls
std
aam
mov
or
sbb
jg
movsl
add
sub
leave
fdivr
mov
in
popf
test
mov
and
push
add
pop
insb
dec
sub
lds
push
xlat
int3
faddl
push
fdivr
sbb
and
rcrl
mov
and
stos
fsubrs
stc
rcrb
mov
dec
inc
shl
repz
cli
mov
mov
cld
ds
addr16
xor
mov
insl
lods
xor
sahf
jno
lods
mov
addr16
ljmp
int3
lcall
jnp
loopne
int3
in
and
mov
jmp
mov
xlat
lahf
sbb
mov
ret
pop
adc
ret
inc
daa
out
mov
and
mov
mov
jp
sbb
mov
cmp
or
loop
cwtl
cmpb
pop
mov
add
jp
les
loope
dec
les
xor
xor
sbb
dec
popa
mov
xlat
push
fwait
xor
mov
les
push
imul
xor
jne
iret
aad
mov
test
and
lock
push
pushf
pop
mov
data16
adc
das
cmp
and
pushf
xor
inc
push
addr16
loope
sbb
cs
mov
jl
pop
scas
sahf
mov
sub
ds
cmp
sub
cltd
push
scas
push
fisttpl
cmc
and
mov
cmpsb
fdivrs
cmp
pop
fwait
and
mov
lret
test
mov
adc
inc
fwait
push
pop
mov
fdivrp
fucom
sub
cmp
add
test
aaa
inc
mov
dec
mov
sbb
jmp
adc
sub
lock
or
sub
sar
mov
in
ror
pop
adc
sbb
lea
les
popa
push
dec
or
jne
push
cltd
and
cwtl
mov
movsl
nop
pop
adc
push
dec
rcrl
pop
mov
add
scas
jcxz
ja
add
hlt
adc
mov
adc
pop
pop
inc
aam
inc
sub
mov
and
aad
lcall
xchg
jg
jbe
xchg
pop
testb
push
pop
dec
fsubs
push
fisubrl
xchg
fwait
or
mul
leave
scas
xchg
dec
jb
out
xor
mov
mov
into
lret
jle
jmp
aad
in
int3
adc
test
xor
xor
adc
popf
adc
pop
adc
int3
adc
sub
inc
int3
stos
ja
inc
push
pop
mov
cwtl
sbb
test
pop
xchg
sbbb
outsl
sub
push
fsubrs
ljmp
ret
pop
movsb
mov
jno
and
ljmp
mov
jb
imul
je
push
mov
sbb
leave
mov
dec
push
lahf
fsubrs
sub
into
mov
inc
xchg
test
or
push
adc
push
daa
xchg
pop
push
cmp
push
mov
sbb
xorl
fists
jnp
or
scas
ljmp
pop
fsubl
push
push
fadds
out
adc
cmp
in
adc
xchg
lds
and
sbb
and
popf
or
inc
pop
test
mov
push
ret
mov
cwtl
jo
cmc
push
es
insl
dec
pop
js
out
add
or
sbb
in
inc
push
lods
adc
shll
xor
notb
insl
pop
imul
push
or
out
jg
push
push
cmp
pop
pop
leave
and
push
dec
jl
or
mov
xor
mov
mov
jl
pop
add
out
or
shll
loope
std
pushf
psrld
nop
or
subb
outsl
cmp
mov
fldz
push
rcrb
cmp
popa
push
adc
and
push
jo
stc
or
ss
or
les
inc
pop
lahf
and
sub
repnz
inc
pop
mov
sub
popf
jl
xor
pop
mov
push
ja
pop
and
push
lahf
mov
add
inc
adc
repnz
sbb
xchg
fs
rorl
mov
dec
push
jo
xchg
dec
out
push
pop
in
pop
xor
lods
xchg
out
pop
ds
cmp
das
dec
and
jb
dec
clc
mull
push
mov
adc
insb
sbb
fwait
cmc
cmp
adc
and
repnz
jae
les
inc
push
shll
shlb
and
xchg
popa
jo
es
leave
vmread
jmp
arpl
xchg
loop
adc
mov
pop
add
adc
mov
xor
mov
lcall
sub
push
data16
icebp
sbb
cmp
adc
xor
sub
rorl
rol
scas
test
cs
cmp
fstp
sub
aas
adc
aas
test
pop
cmp
and
jb
push
pop
pop
into
and
mov
xlat
push
xor
mov
pop
xchg
mov
push
aam
push
or
pop
sbb
adc
andb
ret
aam
iret
lods
fimull
les
adc
daa
ss
fiadds
leave
insb
inc
jmp
inc
outsl
adc
jb
in
sahf
mov
mov
xchg
and
sub
sub
mov
xchg
imul
adc
mov
test
fwait
and
sub
xchg
dec
xchg
out
jle
cltd
cmp
push
arpl
addr16
popa
repz
push
pop
push
push
mov
jno
mov
int3
ja
jg
push
sbb
xchg
mov
out
sbb
ficoms
movsb
and
stos
add
mov
adc
int
pop
mov
xlat
mov
and
ja
push
sbb
mov
fiaddl
lret
cmp
addr16
imulb
test
call
repz
adc
cwtl
sahf
inc
cmpsl
out
stos
imul
je
mov
fstl
inc
push
dec
cmp
cli
aad
shrl
pop
dec
aas
push
mov
push
nop
xchg
fwait
pop
bound
sub
cmp
int
push
mull
mull
stos
mov
pop
add
jl
mov
rcll
xchg
rol
jae
push
sbb
add
pushf
or
jae
subb
xor
dec
popa
mov
ret
adc
jbe
pcmpeqd
jecxz
push
or
test
xor
xor
mov
cmp
test
ja
lret
cmp
add
lods
stos
dec
mov
clc
inc
icebp
pop
sbb
es
in
ror
mov
mov
jmp
mov
in
sbb
inc
call
aam
sbb
push
add
and
jbe
sbb
mov
mov
dec
sub
popl
int
aam
sub
nop
cmp
adc
addl
idivb
sub
dec
rcrb
daa
aad
inc
mov
cld
adc
lahf
mov
mov
iret
xchg
dec
xor
ljmp
dec
pop
mov
inc
xor
sub
add
in
xor
mov
xor
sti
outsb
stos
pop
or
mov
popf
mov
leave
mov
xacquire
push
xor
fimull
push
mov
pop
cmp
jno
pop
mov
or
into
les
inc
stc
sbb
pop
cli
push
add
and
bnd
aas
fildl
test
adc
push
daa
add
sbb
jl
xchg
push
mov
or
push
or
testb
movl
fwait
sbb
sub
dec
popf
and
mov
jo
or
fsubrs
shll
mov
cld
lods
adc
popf
sbb
insb
loopne
inc
jge
dec
rcrb
cld
cli
xchg
cmpsb
adc
mov
imul
adc
add
sbb
xorl
sbb
mov
mov
jecxz
mov
sbb
sahf
sbb
pop
push
pop
dec
cs
dec
add
xchg
mov
dec
scas
adc
lcall
ja
stos
lea
rcrb
imul
or
daa
sarb
mov
aas
aad
cld
cs
int
pop
or
arpl
shrl
inc
mov
adc
mov
mov
dec
in
mov
cmp
fs
das
inc
mov
dec
mov
notl
add
loopne
adc
sub
ljmp
mov
fcmovnbe
add
lods
cmc
push
stc
mov
test
outsb
in
cmp
pop
jo
lret
jp
test
aam
jnp
shl
xchg
psubsw
fnstsw
push
adc
testl
jmp
cmp
cmp
imul
test
xlat
push
orl
lcall
sbb
xor
dec
sbb
stos
mov
ds
sub
scas
loope
arpl
mov
mov
fldl
xchg
mov
scas
mov
scas
xor
xchg
fstpl
jl
daa
repz
push
fdiv
addr16
dec
push
pop
inc
push
lcall
loop
fists
pushl
xchg
mov
push
into
cwtl
add
xchg
mov
loope
push
lea
jp
jne
pop
test
out
cwtl
xor
rorl
enter
negl
cmp
pop
pop
push
setno
cwtl
insb
test
es
insb
adc
push
push
insl
sub
les
mov
cmp
sub
push
mov
mov
or
or
sbb
xor
in
dec
lahf
les
and
pop
mov
andl
jg
jb
pop
cmp
cmpsl
lods
jae
mov
mov
lret
sub
fidivs
cmp
enter
imul
leave
push
mov
xchg
inc
jecxz
testl
rolb
jl
movsl
mov
jle
sbb
roll
or
cld
or
out
fwait
adc
cmp
orb
xor
and
push
mov
fwait
jbe
dec
and
enter
sub
cmp
jecxz
mov
sub
xor
push
add
xchg
pop
int
xchg
mov
cmp
enter
sbb
mov
inc
scas
hlt
xchg
jo
pop
jnp
push
shrl
xchg
ficoml
mov
adc
dec
jecxz
lcall
mov
xchg
cmp
pushf
sahf
loope
xchg
adc
push
mov
and
lret
add
rcl
fbld
push
fbstp
popf
or
and
movsb
dec
in
dec
jne
es
xor
pop
call
mov
adc
fs
and
test
xchg
pushf
sbb
outsb
in
in
fdivl
daa
cs
mov
mov
inc
mov
enter
xchg
sub
mov
push
adc
inc
lock
scas
dec
aad
sahf
lret
hlt
mov
xor
notl
mov
mov
xchg
lock
into
add
scas
push
lods
and
fcoms
int
pop
imul
sahf
mov
sub
jle
inc
push
pop
sub
jb
aas
roll
and
fistpll
andl
pop
test
xchg
mov
xor
adc
or
inc
add
jp
adc
popa
pop
dec
fadd
jge
jge
jnp
in
jecxz
inc
daa
add
cmp
call
and
push
mov
jg
mov
arpl
iret
cmp
push
cli
iret
add
loopne
add
mov
mov
add
out
and
popf
and
push
les
insl
xchg
jge
mov
mov
iret
pop
pop
pop
pop
repz
add
xchg
and
popa
outsb
daa
rcrb
sub
das
mov
lahf
sbb
stc
pop
pusha
bound
push
negb
jp
adc
das
out
and
and
pop
repz
add
int3
inc
dec
dec
lods
rorl
out
sub
or
in
xchg
xchg
lret
pop
inc
pop
xchg
xchg
mov
or
nop
mov
hlt
inc
xchg
add
push
insl
aas
icebp
pop
into
loopne
xor
push
xor
sub
mov
insl
or
pop
pop
into
cwtl
mov
test
mov
sbb
out
fwait
or
inc
and
in
sbb
lock
adc
sub
repnz
pop
fstl
mov
push
addb
or
pop
push
data16
sbbb
daa
jne
data16
mov
int
sbb
inc
mov
add
add
jo
out
popa
negl
lcall
inc
inc
arpl
lret
cmp
sbb
das
subps
adc
add
daa
loope
jnp
pop
mov
pop
std
dec
dec
jno
les
push
pop
ljmp
sti
insb
incb
push
pop
jo
call
in
xchg
sub
inc
pop
jmp
ja
or
aad
cli
and
cs
insb
cltd
test
test
aad
insb
roll
insl
aad
jecxz
jae
imul
push
jns
es
movsl
ds
adc
and
inc
mov
cmp
pop
into
lfs
dec
int3
mov
mov
or
sbb
ja
ds
mov
imul
repz
pushf
adc
outsb
in
and
sbb
adc
adc
pop
cmp
sub
adc
mov
push
pop
mov
adc
insb
sarb
fstl
and
mov
sbb
or
sbb
sbb
and
and
and
xchg
push
adc
mov
pushw
repnz
mov
inc
mov
stos
inc
fcmovb
std
fwait
jae
adc
out
in
scas
xchg
rorb
dec
popf
or
mov
frstor
cmp
mov
mov
bound
into
int3
and
les
dec
shll
jmp
fmul
lods
jno
imul
adc
std
sub
mov
add
mov
addr16
movsb
imul
push
stos
sub
orb
mov
xchg
mov
mov
stc
out
lea
ss
adc
ret
or
xchg
jne
fsubrp
call
lds
dec
cmp
lcall
test
fistps
sbb
ret
push
dec
push
dec
xchg
fstpl
adc
jo
xchg
jns
lret
jl
fcomp
and
dec
pop
jge
mov
inc
jle
sub
test
jb
mov
or
lret
push
inc
jo
push
fstps
lret
or
mov
push
sbb
or
adc
sbb
rcrb
mov
cmp
xlat
mov
and
test
push
dec
inc
notl
pusha
lret
out
mov
sbb
cmp
pop
fwait
push
nop
inc
scas
push
push
into
sbb
ljmp
es
xchg
or
popa
lods
or
fdivrp
push
add
push
aam
mov
mov
mov
cmp
pusha
add
fmull
sub
sub
cmp
sbb
fnsave
lahf
add
test
sub
xchg
cmp
mov
clc
aaa
jl
jg
imul
repz
aas
lea
or
cli
scas
mov
aad
sbb
jmp
fwait
xlat
push
pop
or
fprem
cs
test
addr16
adc
fstl
les
fwait
insb
mov
loopne
iret
jmp
sbb
movhps
popf
orb
push
imul
movsb
xchg
sub
outsb
hlt
mov
cmp
shlb
mov
frstor
add
bswap
popf
sbb
js
mov
es
call
sbb
dec
push
cltd
pop
call
pop
imul
jb
sub
xor
lret
outsb
leave
or
xchg
lret
daa
call
es
lret
xor
gs
punpckldq
movsb
shll
sbb
scas
mov
lea
scas
popf
xchg
fwait
sub
les
adc
push
mov
sub
jg
into
int3
jae
shr
xlat
dec
sbb
adc
push
sub
xchg
cmc
hlt
dec
fucomp
cs
cli
mov
pushf
push
insl
aaa
movsl
mov
stos
fisttps
xor
pop
add
loopne
les
jmp
sbb
or
fwait
mov
fmulp
xchg
addr16
das
arpl
lahf
fistl
outsb
pop
adc
cli
lods
stos
cmpsl
or
rcl
dec
fnstcw
jp
lcall
pmulhw
pop
int3
popf
mov
mov
dec
add
push
cmp
add
rorl
cs
mov
adc
nop
mov
loope
fbld
mov
dec
jmp
dec
stc
cmp
enter
cli
fsubs
sub
inc
scas
push
sbb
push
xor
testl
xor
or
pop
out
push
bound
cmp
push
dec
inc
or
mov
aam
in
xchg
fwait
lods
mov
mov
pop
dec
cld
sbb
jmp
repz
jne
cmovo
dec
adc
adc
jmp
inc
adc
loope
les
cs
add
xor
mov
pop
cmp
dec
movsl
push
mov
push
popf
sbb
lret
ret
or
inc
cwtl
xlat
cmp
add
cmp
jmp
hlt
mov
mov
out
mov
jecxz
sub
sub
inc
sbb
adc
inc
pop
sahf
insl
xlat
lret
nop
das
imul
cmc
lahf
ds
push
push
cmp
jnp
cwtl
outsb
or
cwtl
xor
cli
test
nop
or
aam
js
sahf
add
data16
sub
sbb
shrl
or
in
pop
mov
imul
aaa
cmp
mov
int
daa
pushl
pop
or
sbb
movsl
pop
push
int
pushf
pop
or
stos
rcl
jp
cltd
xchg
mov
push
movb
mov
xlat
int
sarb
fdivrs
jo
in
sub
rorl
xor
jne
ja
jecxz
xchg
push
xlat
pop
fisubrs
mov
out
dec
cmp
jl
or
or
out
stos
repz
and
or
cmp
rorb
push
xchg
xchg
inc
xchg
adc
ret
jg
sub
xchg
sbb
add
pop
mov
popf
inc
xlat
and
xchg
xchg
daa
and
add
jg
in
fadds
arpl
add
out
sti
sbb
insb
and
lahf
push
in
sbb
xor
jno
icebp
xor
inc
clc
sub
lret
sbb
pop
adc
push
mov
das
jb
adc
inc
and
test
cmc
popf
jae
mov
cwtl
push
fs
aas
mov
dec
jl
inc
insb
pop
pop
imull
jp
inc
push
xlat
mov
inc
fmuls
sbb
mov
sbb
shrl
lahf
repz
cmp
shl
and
aas
dec
jecxz
cli
jb
dec
jecxz
ds
push
adc
mov
adc
mov
mov
lret
or
pop
pop
bound
pop
inc
mov
jb
in
bound
fstps
js
xchg
xchg
sbb
and
cmp
jl
add
jno
cmp
adc
ss
insb
cmpsb
outsb
adc
sbb
in
notl
shrl
sub
push
mov
push
or
jns
je
or
add
dec
lcall
xor
outsb
mov
pop
xor
jnp
rorl
mov
adc
add
lcall
push
test
cmp
and
xchg
ljmp
repz
adc
insw
inc
and
sbb
sub
out
and
cltd
cld
inc
mov
pop
mov
mov
xchg
inc
mov
mov
nop
xlat
xchg
adc
data16
aas
xor
pop
dec
lods
stos
dec
sbb
sub
dec
adc
xor
pop
cmp
mov
popf
mov
and
inc
lahf
mov
sahf
lods
movl
and
add
movsl
push
inc
test
cs
sahf
adc
jmp
inc
xlat
in
push
push
pop
pop
movsl
sbb
dec
adc
mov
stc
jo
and
inc
jne
jecxz
adc
push
push
push
mov
into
sbb
pop
rclb
jne
shrl
fisubrs
mov
push
mov
pop
xchg
add
jb
or
insb
push
sbb
mov
jo
pop
sahf
movsl
lock
inc
out
push
outsl
fldl
lods
fstl
mov
mov
ficomps
mov
pop
cmc
mov
add
mov
push
mov
ja
mov
and
jmp
imul
mov
in
in
jo
or
add
xor
push
pusha
arpl
sbb
or
add
in
clc
xchg
xor
add
stos
popa
lods
enter
and
in
jg
mov
scas
pop
les
sahf
and
js
jp
pushl
aaa
add
push
xor
mov
jg
mov
nop
lods
cmp
jecxz
mov
inc
cmc
dec
cltd
decb
lds
dec
decl
pop
or
das
or
adc
add
mov
orl
insb
movsl
sbb
push
mov
loope
dec
xlat
hlt
push
lea
mov
xchg
lcall
cs
adcb
daa
ljmp
rcll
and
mov
push
xchg
sub
inc
shlb
fwait
sbb
fmuls
adc
mov
outsb
adc
dec
add
lods
push
mov
sbb
or
add
adc
sub
addr16
mov
push
into
cmc
xor
clc
scas
out
pop
inc
pop
xchg
sbb
lods
mov
mov
insl
xor
sub
das
xlat
cmp
mov
mov
inc
pop
cmp
xchg
inc
xor
sbb
popl
cmp
mov
cmp
shll
insb
lods
insb
sbb
xchg
lahf
and
mov
movsb
adc
push
js
inc
add
in
inc
sub
push
lahf
out
and
test
xor
int3
jp
cli
lods
push
mov
pop
pop
or
imul
mov
xchg
lret
ljmp
mov
adc
cmc
sub
sub
insb
pop
and
pushf
iret
mov
mov
push
out
int3
mov
and
cmp
jns,pn
pop
popa
push
jae
and
push
jmp
sarb
mov
jl
sti
fists
cmp
sahf
adc
add
mov
inc
imul
lods
rcl
dec
and
pop
and
add
loopne
mov
popf
adc
inc
dec
add
loop
movups
sbb
in
mov
sahf
xchg
push
aas
pop
cmp
dec
sbb
pop
jge
mov
mov
bswap
loope
jb
mov
pop
shll
cmc
push
mov
adc
pop
push
hlt
pop
shll
push
and
lea
sbb
push
push
xchg
push
xchg
push
jg
xor
popf
add
test
add
jge
or
push
lds
add
push
push
jo
lods
lea
push
or
ror
mov
int
mov
test
xor
ja
cmpsb
push
and
cltd
mov
and
jno
lock
sbb
xchg
pop
mov
pusha
xor
cs
int3
nop
push
cmp
push
and
fwait
push
jno
and
mov
jbe
adc
cli
cld
lahf
pop
push
adc
cmp
enter
xlat
add
mov
adc
mov
fwait
and
jbe
inc
lods
push
mov
out
jl
aas
sub
sbb
dec
or
lahf
jge
inc
cmp
xor
or
pmaxsw
fstp
test
add
mov
dec
add
or
xor
adc
popa
test
jle
movsl
dec
xchg
push
out
dec
xchg
push
loope
pop
mov
insb
fbld
into
xor
mov
pop
pop
cs
fisttpll
jbe
mov
adc
fcomip
jecxz
push
scas
pop
test
xor
fbld
xor
adc
mov
or
in
jnp
push
pop
push
inc
add
cmp
sbb
mov
inc
pop
data16
push
loopne
pop
in
ret
mov
cwtl
into
sahf
mov
sbb
jns
aas
in
es
mov
out
push
fmuls
and
rcll
lock
shll
inc
sbb
scas
and
stos
shrb
movsl
push
adc
icebp
adc
outsb
cmp
inc
inc
aam
stos
jno
pop
loopne
and
jnp
and
mov
les
push
movsb
mov
in
mov
dec
pop
dec
inc
pop
test
inc
pop
dec
xchg
dec
or
xlat
sub
iret
sbb
jb
cs
outsb
mov
mov
in
mov
inc
sub
lcall
or
mov
adc
adc
lcall
and
lods
lods
mov
dec
sub
aam
rcll
fistl
sbb
cmp
stos
and
movsl
add
icebp
mov
sbb
lcall
xor
xlat
int
add
dec
iret
mov
xchg
scas
in
dec
jecxz
sbb
pusha
fwait
push
xchg
pop
mov
cmp
daa
sub
sub
xor
inc
sbb
pop
faddp
fisubl
pushf
aas
mov
inc
bound
adc
aad
ljmp
jecxz
push
movsl
jp
loopne
xor
nop
and
and
push
pop
dec
fldenv
mov
and
insb
aaa
loopne
and
push
fstl
test
jnp
iret
add
push
mov
aaa
data16
mov
inc
lcall
arpl
daa
sti
mov
negl
dec
jbe
or
mov
add
adc
cmp
xchg
repz
push
inc
pop
push
or
std
pop
fmull
fucomp
frstor
and
xorl
inc
push
add
or
sahf
lahf
mov
cmp
ret
nop
pop
movsl
shll
fisubs
dec
rcr
jmp
scas
int
fstpt
inc
sbb
add
outsb
push
test
nop
push
or
mov
jne
cmc
fmuls
mov
cs
popf
or
push
add
repz
scas
or
pop
xchg
pop
xchg
je
push
loopne
and
mov
in
and
daa
mov
or
int3
mov
mov
into
les
addr16
jno
adc
mov
push
pop
jecxz
aaa
lock
mov
jbe
inc
enter
cs
xchg
cmp
mov
icebp
jecxz
cmp
mov
mov
xchg
or
jge
inc
pop
sub
fbld
ficoms
es
movsb
dec
ret
ds
push
push
bound
mov
push
pop
adc
fiadds
cmc
mov
dec
sub
sahf
mov
xor
emms
sbb
hlt
lret
andl
icebp
test
ja
jmp
pop
out
dec
dec
ret
ljmp
and
nop
bound
and
jle
ret
push
push
adcb
cmp
rolb
mov
test
jno
or
mov
push
iret
mov
lods
and
jle
jne
or
fsubrs
shufps
sbb
fisubs
xor
fnstsw
cmp
pop
jns
fsubrp
push
adc
push
divb
adc
cmp
sub
mov
mov
jecxz
repz
fwait
or
pop
fldcw
and
mov
cmova
lahf
cltd
push
rorb
lcall
loopne,pn
fcmovnu
xchg
jbe
mov
ljmp
mov
insl
popf
push
xor
jmp
sbb
xchg
or
cmp
mov
cld
leave
inc
mov
xchg
lahf
push
push
add
dec
sbb
imul
mov
or
mov
push
sbb
adc
mov
leave
xchg
ret
or
mov
lcall
cmp
movsb
lea
mov
xor
sbb
pop
xchg
popf
stc
cmp
xor
ljmp
in
pop
or
in
push
or
mov
sbb
lret
es
dec
fadds
mov
adc
outsl
push
testb
sbb
push
push
daa
pop
pop
pusha
shlb
jp
in
sbb
cmp
mov
jecxz
in
and
fs
ret
into
rcll
xchg
pop
aam
push
xor
rclb
sbb
and
ja
dec
jl
mov
ja
mov
movsb
test
jbe
jne
lret
pop
das
fimull
sbb
add
and
stos
lock
lods
mov
test
out
aaa
pop
imul
xchg
mov
out
adc
scas
and
sbb
mov
movsl
push
aam
push
int
add
adc
push
fisubrs
in
test
ja
mov
and
aad
movsl
imul
xor
sub
sub
add
popf
fisttpl
out
rol
stos
shlb
rcll
ljmp
adc
lret
mov
jecxz
jecxz
cmp
das
push
jo
mov
mov
lahf
dec
fisubl
cmp
loopne
aad
xchg
jl
add
adc
push
push
in
clc
ficoms
aad
mov
jbe
lret
rcl
sahf
and
mov
cmp
iret
add
sub
aam
adc
scas
icebp
test
dec
xlat
pusha
ret
int
lret
xor
mov
sub
sub
inc
fstpl
enter
adc
fimuls
push
push
jb
faddl
sbb
sarb
inc
lahf
daa
loope
push
fisubs
testl
cmpsl
sbb
adc
sahf
adc
repz
mov
lds
lea
dec
outsl
add
dec
add
cmpsb
imul
cmovl
test
add
jp
or
mov
pop
clc
or
dec
cmpsl
mov
cmp
imul
fmulp
lods
jge
pavgw
insb
aad
sub
xchg
jmp
lea
fdiv
aam
add
pop
add
adc
ja
sti
jge,pn
cmp
sub
inc
clc
or
sti
jp
mov
testl
jecxz
or
bound
mov
out
in
lea
lcall
imul
addb
sbb
pop
popa
pusha
lea
mov
push
mov
push
lods
movsb
adc
push
or
push
stos
sub
popl
imull
pop
adc
add
add
push
push
fcoms
mov
and
cmp
jno
inc
ljmp
dec
adc
pop
stos
pop
repz
xor
push
sub
rorb
cmpsb
sub
cli
mov
scas
pop
pop
notb
popf
dec
stos
inc
shr
lahf
pop
sbb
add
insb
or
xor
insl
or
mov
cld
inc
adc
or
jns
imul
jo
imul
imul
aad
pop
sub
jne
pop
mov
pop
aam
mov
adc
addr16
pop
pusha
and
scas
xchg
and
and
jno
pushf
sub
sub
push
insb
xchg
out
lahf
jg
lods
add
sbb
daa
ja
cmc
adc
or
add
pop
push
in
shll
imul
xor
sbb
int3
push
xlat
hlt
mov
rol
mov
jb
aad
inc
cmpsb
sub
mov
mov
fiadds
call
mov
or
push
mov
lea
arpl
mov
es
push
aam
jmp
call
sub
cmp
into
push
loopne
shll
test
sbb
cmpsb
arpl
adc
and
pop
js
inc
sbb
mov
sub
aam
sahf
cmp
mov
mov
test
xchg
xor
jecxz
push
leave
sbb
xchg
sbb
xchg
aad
test
ja
mov
stc
pop
faddp
bound
adc
cld
call
add
sub
cmp
and
iret
adc
push
into
or
lea
into
mov
jbe
stos
sub
outsb
aam
jne
sbb
xor
loopne
jb
gs
xor
sbb
dec
sbb
fucomp
inc
int
lret
adc
sub
xchg
fwait
cpuid
flds
jp
or
cmp
inc
adc
push
enter
xor
iret
push
stc
iret
aam
mov
adc
sarb
sub
dec
push
jns
test
mov
std
adc
mov
mov
inc
jecxz
fwait
sbb
lret
aam
in
loopne
dec
and
test
icebp
lss
or
or
lods
jecxz
cs
jge
scas
inc
test
sub
xchg
sbb
jp
int3
inc
popa
pusha
je
mov
inc
cs
cmp
ja
cs
inc
sub
aam
cmp
sub
arpl
pop
andl
or
ss
jecxz
shrl
adc
or
sub
aas
jl
stos
jl
bound
notl
add
dec
sub
addr16
push
sahf
add
out
xchg
push
out
hlt
icebp
cs
sbb
jmp
xchg
xlat
jecxz
and
aas
sub
int
dec
outsl
push
xor
cs
and
or
pusha
imul
imul
insl
sub
and
jmp
cmp
pop
and
jns
push
in
jecxz
call
popf
out
pop
rcrb
xchg
insl
test
js
movsl
sbb
pop
icebp
bound
daa
les
jmp
push
imul
push
ret
jle
clc
pop
pop
rorb
push
mov
rorl
xor
scas
jecxz
sbb
fwait
dec
cli
aam
push
jmp
adc
stos
pop
lea
rol
dec
xor
daa
lcall
pop
or
mov
mov
in
mov
dec
or
jle
mov
add
cli
jne
mov
dec
lds
xor
test
lods
or
xor
loope
xor
rolb
or
mov
push
and
sbb
adc
mov
push
insb
sub
insb
cs
mov
sahf
int
mov
and
or
mov
and
and
ljmp
and
dec
es
lret
daa
adc
mov
sub
sti
cs
stc
mov
mov
fadds
int
adc
rorb
adc
push
jle
ficoml
pop
pop
xchg
sub
lods
and
daa
or
leave
push
adc
and
mov
mov
rolb
outsl
and
daa
sbb
mov
push
sub
mov
loopne
xchg
sub
sub
or
mov
and
sub
into
sbb
dec
jno
lea
sysret
aad
cmpsl
pop
leave
out
lret
testb
loopne
xor
aad
rol
jae
xchg
fsubp
fcoml
jl
addl
xchg
insb
ljmp
dec
cmp
jp
dec
xor
addr16
inc
mov
es
repnz
addr16
mov
xchg
pop
sbb
popf
or
sti
movsb
pop
push
cmp
adc
cmp
sbb
add
cmp
cmp
int3
stos
sbb
fidivrl
daa
outsl
add
pop
stos
mov
fsubrl
repz
mov
fstl
jae
insb
cli
push
ja
js
insl
test
test
popf
frstor
unpcklps
mov
xchg
or
adc
sbb
jb
adcb
jb
in
cld
loopne
pop
sarb
ss
sbb
cld
sub
mov
cmp
and
sbb
dec
sub
adc
scas
mov
clc
xor
cmc
mov
push
mov
jbe
push
adc
lds
repnz
pop
loope
adc
in
adc
add
and
popf
or
cmc
sub
int
and
mov
and
lds
insl
sbb
push
sarb
dec
dec
int
and
sbb
sbb
pop
jp
or
inc
sbb
mov
bound
push
jle
add
or
in
lds
rorl
dec
dec
ja
pop
sbb
out
mov
adc
adc
stc
out
jge
test
rorb
mov
inc
push
xchg
jns
test
outsb
outsl
adc
mov
add
adc
cmp
sbb
testb
movsl
jbe
lret
mov
loop
mov
push
push
test
sbb
hlt
and
or
cli
mov
push
xor
adc
loope
mov
lea
xchg
adc
mov
dec
mov
fsts
mov
dec
inc
adc
cs
or
adc
adc
stc
aaa
mov
dec
pop
jno
sub
rclb
imul
add
mov
jle
pop
rcrb
popl
xor
rorl
mov
roll
popa
cmp
orb
add
xlat
pop
in
shrl
lds
cmp
mov
push
or
aam
icebp
adc
xchg
mov
sub
pop
pop
fldcw
pop
jo
jmp
ss
jp
or
mov
xchg
mov
jecxz
frstor
push
add
jecxz
ljmp
mov
jne
jae
push
jp
mov
adc
or
xor
imul
pop
fdivr
pop
sub
jnp
pop
add
stc
leave
test
lret
push
nop
insb
rclb
sub
xchg
lret
into
scas
push
pop
test
mov
mov
adc
aas
dec
xor
mov
aas
mov
add
adc
fdivrl
das
sub
lret
sbb
out
jnp
jecxz
pop
shrb
xorl
das
inc
imul
and
xor
sbb
mov
add
mov
dec
add
mov
out
push
push
push
add
inc
and
adc
scas
and
push
pop
lds
pop
adc
jle
dec
xchg
push
jne
scas
cmp
sbb
popa
sbb
scas
repnz
test
jnp
test
push
and
xchg
jae
adc
xlat
test
loopne
movsl
inc
dec
dec
das
pop
jp
leave
or
dec
std
clc
dec
mov
in
not
or
idiv
jnp
test
adc
movsl
jo
fcomps
std
adc
pop
push
popf
fadds
shlb
fcoms
imul
xor
scas
iret
sub
mov
xchg
std
mov
adc
in
pop
dec
sbb
sbb
mov
or
push
pushf
pop
cli
pop
test
sub
aam
push
adc
minps
or
sub
jle
std
test
mov
and
popa
pop
das
push
lcall
push
xor
jo
sbbl
imul
inc
xchg
push
insl
lcall
scas
sbb
fwait
divps
lret
rclb
arpl
loopne
shlb
mov
dec
push
lea
add
sbb
fldt
jae
jge
mov
lock
dec
adc
je
jg,pt
sub
pop
push
lods
xor
cmp
scas
push
dec
lret
sbb
loop
sub
adc
or
pop
and
cmpsl
stos
clc
mov
and
sub
jbe
or
fwait
or
or
jle
pop
sbb
xchg
and
inc
clc
pop
jbe
adc
test
mov
call
lret
movzwl
push
movsb
pushf
dec
aam
mov
mov
jo
pop
jecxz
cmp
mov
sbb
adc
push
add
fistpll
adc
fdivrl
call
sub
and
dec
ja
enter
dec
out
push
adc
push
sbb
and
mov
and
and
add
mov
lods
pusha
and
sarb
jae
insl
jmp
jg
addl
sbb
xchg
add
in
and
mov
lret
inc
aam
mov
test
imul
sbb
es
mov
add
into
daa
sub
or
ss
jg
outsl
daa
jp
fstps
sub
mov
jns
pop
popf
inc
insl
adc
iret
jne
cmp
and
in
and
imul
pushf
mov
push
adc
in
sar
or
imul
cld
imul
mov
imul
cltd
cmp
dec
cltd
mov
shrb
xchg
imul
and
push
dec
sub
lret
test
hlt
sbb
out
xor
iret
dec
lret
push
push
imul
int
fwait
push
adc
insl
pop
es
dec
int
push
js
arpl
vmwrite
adc
pop
out
enter
outsb
add
outsb
adc
cmp
jbe
dec
xlat
test
push
mov
xchg
std
xchg
xchg
icebp
inc
mov
mov
or
stos
test
mov
add
or
jns
and
cmpsl
sub
cmp
mov
xchg
lret
inc
pop
repz
adc
call
sbb
jae
xor
fcompl
mov
inc
xor
mov
sub
sbb
adc
pop
add
scas
xchg
adc
pop
ja
pop
adc
jne
mov
xchg
add
push
sub
das
and
xchg
mov
lcall
das
insb
mov
sub
adc
add
push
pop
pop
rcrb
mov
lcall
mov
lret
inc
loope
dec
add
jmp
and
into
lret
sub
sti
shll
and
mov
dec
sub
cmp
int
push
or
test
mov
cmp
sbb
adcb
sbbl
lret
jp
fmul
inc
inc
cmc
mov
lahf
int
lds
push
sub
add
and
mov
xchg
repz
and
orb
mov
adc
cld
jl
mov
add
or
cwtl
sbb
mov
lcall
ds
sbb
xchg
loope
idivl
adc
iret
jg
dec
dec
arpl
cs
push
xor
retw
push
hlt
fcmovnb
mov
sbb
dec
scas
addr16
les
jp
aad
sub
lcall
inc
xchg
xlat
and
repnz
pop
mov
or
sti
gs
out
sbb
push
xlat
xor
fwait
sbb
inc
jb
das
fnstsw
sub
pop
inc
lahf
push
fadds
adc
xor
int3
push
push
insl
lahf
adc
mov
out
push
outsl
jle
cmc
adc
jge
aad
add
movsb
pop
cmp
jnp
adc
mov
addr16
scas
sub
adc
addr16
adc
aad
scas
cmp
repnz
lds
fiadds
loop
push
adc
cld
adc
test
sbb
and
dec
jge
inc
cmc
xorb
dec
inc
jne
and
pop
push
or
sub
fisubl
cmp
sub
sbb
inc
push
sub
cmp
pop
sbb
les
daa
mov
mov
les
adc
add
mov
inc
mov
test
imul
in
jno
adc
or
mov
inc
pop
loop
sahf
nop
ljmp
dec
xor
dec
leave
imul
dec
fs
lahf
jp
sub
adc
inc
lods
addr16
mov
in
mov
loope
es
mov
es
mov
push
jl
inc
imul
cmc
adc
and
dec
insb
dec
push
lahf
adc
call
dec
aad
mov
xorl
ljmp
inc
mov
or
push
and
mov
and
dec
fadds
add
das
arpl
outsb
cmp
xchg
jle
and
mov
add
sbb
dec
leave
mov
data16
xchg
adcl
and
sbbl
addr16
test
xor
sarb
xorb
and
test
popa
xchg
pop
dec
test
popf
inc
mov
pop
mov
lea
xchg
lret
or
js
mov
fsts
xchg
jmp
sub
adc
mov
push
pop
jns
test
insb
sahf
aam
scas
mov
and
lock
out
shll
cmpsl
ja
arpl
daa
cmp
sub
push
pop
cwtl
lcall
icebp
dec
test
popa
push
icebp
mov
dec
cltd
subb
ds
ret
jo
xor
cmc
data16
les
popf
test
or
out
sbb
lret
xchg
mov
cwtl
sti
xchg
and
mov
jae
or
xor
or
xor
pop
mov
mov
sbb
in
mov
enter
and
xor
sub
jne
inc
loop
dec
call
or
icebp
mov
mov
jo
adc
xor
xlat
and
popf
and
ret
sub
fsubrs
xchg
dec
sub
cltd
or
ja
and
into
sahf
cmp
pop
dec
test
sub
mov
dec
xchg
insb
stos
sub
mov
loope
mov
aaa
push
iret
xchg
outsb
popf
xchg
push
pop
cmovbe
clc
lcall
repz
pop
add
jmp
lret
sarb
fwait
pop
pop
adc
cmp
outsb
push
movlhps
in
inc
popf
dec
mov
insb
jbe
mov
bound
add
mov
scas
mov
jno
push
mov
into
xchg
xor
mov
and
repz
test
or
movsl
mov
adc
dec
dec
jae
test
insb
out
inc
add
adc
notb
dec
sub
scas
loope
lcall
and
and
addr16
fistl
push
in
mov
pop
jo
sahf
xchg
pop
ret
test
mov
ficomps
gs
aaa
pop
je
les
sub
lahf
and
imul
rorb
add
addr16
pop
or
and
fwait
add
pop
scas
jmp
insl
ret
lea
out
add
jae
iret
xchg
lcall
cmpsb
jae
xor
sbb
sbb
mov
xor
dec
jne
sbb
cmp
adc
loope
andb
insb
das
ss
insl
int3
or
call
xor
xor
pushf
sbb
adc
dec
sbb
mov
movsb
mov
inc
lds
int
ss
push
in
addr16
inc
aad
adc
lock
out
dec
dec
dec
cmpsl
test
jno
das
int
imul
mov
mov
pop
scas
mov
test
mov
gs
push
cli
mov
aad
mov
stos
xchg
pushfw
in
xlat
mov
push
in
iret
shrb
dec
dec
adc
jbe
adc
push
adc
leave
fmuls
mov
movsl
arpl
int
push
adc
push
popf
mov
mov
and
inc
pop
mov
xchg
and
outsb
sub
mov
xor
shll
fiadds
insl
test
sub
push
lods
sub
leave
loopne
jo
jle
xor
push
dec
add
out
push
insb
push
adc
lcall
cwtl
push
sub
dec
addr16
cmp
dec
sarl
xor
or
out
popa
inc
jmp
jnp
xchg
das
outsb
adc
fwait
lcall
outsb
adc
les
or
pop
pop
xor
cmpsl
aam
adc
cli
add
shlb
sub
mov
out
dec
jmp
dec
rorb
mov
add
jp
sub
push
push
outsl
or
jae
sub
ds
cmp
fdivrs
mov
jecxz
adc
insb
sbb
std
in
lcall
xchg
or
in
call
loope
lds
mov
or
rcr
popf
mov
mov
into
push
sbb
leave
shlb
movsl
inc
push
push
adc
jecxz
cmpsl
dec
orb
cmp
mov
scas
icebp
inc
push
mov
inc
and
inc
inc
sub
dec
fstpt
pop
lods
aad
sub
lahf
daa
sbb
adc
mov
inc
aas
mov
add
fdivrp
je
leave
shlb
mov
jp
add
pop
pop
in
jae
or
sbb
testb
bound
aad
mov
adc
faddl
or
data16
pusha
rorl
jne
inc
aam
push
and
clc
cmp
outsl
stc
int3
sbb
mov
or
lods
mov
lret
pop
sub
repz
mov
mov
push
decl
lds
ds
call
add
aaa
adc
push
or
scas
or
xor
mov
loope
imul
les
and
sbb
addr16
out
or
dec
adcb
mov
jecxz
outsl
shlb
daa
repnz
ss
push
sbb
les
add
pop
scas
outsl
lahf
cmc
dec
dec
or
setb
adc
outsl
jl
aad
add
dec
mov
out
test
push
xor
add
push
xorb
mov
push
adc
push
insb
jnp
xlat
les
lods
sub
or
stc
push
fwait
dec
push
xor
adc
loopne
stos
gs
jmp
iret
loopne
sbb
test
dec
sub
addr16
iret
mov
lea
sbb
xor
dec
dec
jns
push
push
mov
cmp
xchg
sahf
lds
cmp
sbb
or
imul
lods
dec
leave
movsb
imul
sub
lea
jb
inc
pop
push
xchg
xor
or
cmp
test
in
sbbb
dec
test
cmp
loopne
push
ja
add
inc
xor
lcall
movups
dec
stos
pushf
adc
jb
adc
sahf
pop
sub
jl
add
in
sbb
xor
mov
outsl
push
ja
sbbb
fistpll
arpl
int3
lods
cpuid
adc
adc
adc
cmpsl
xor
lahf
test
cmpsb
mov
xchg
mov
pop
push
clc
insb
pop
adc
xor
insl
out
mov
xorb
mov
daa
xchg
int
popf
cmp
xor
xor
cltd
outsl
popa
outsl
push
insb
jbe
pop
push
mov
jg
add
loope
inc
mov
bsr
pop
cwtl
mov
imull
mov
mov
in
sub
mov
lahf
mov
shll
inc
fnsave
daa
sbb
mov
jecxz
sub
adc
sub
sbb
mov
sub
imul
cmp
aam
sub
test
scas
inc
scas
add
adc
data16
lds
xor
out
add
add
aam
push
loop
push
popf
jns
adc
jp
lods
sbb
sahf
dec
sbb
push
inc
mov
cwtl
mov
ss
adc
and
fwait
jmp
sub
js
mov
lcall
jo
pmulhuw
pop
out
bound
dec
lret
push
cmpsl
fs
xor
mov
xchg
dec
push
and
outsb
add
icebp
push
inc
insb
es
or
or
xor
mov
jg
or
mov
je
mov
push
xor
xor
jns
push
arpl
dec
pop
dec
push
or
mov
in
inc
sub
mov
popf
or
stc
mov
jnp
pop
dec
or
mov
adc
push
jmp
xchg
ret
pushf
and
shlb
sarb
adc
inc
fsubrp
sbb
xlat
and
mov
jb
xchg
mov
jno
or
cmp
es
jge
jle
fadd
aam
dec
or
clc
fwait
xchg
cs
addps
or
popf
lahf
sub
loope
into
ss
pop
xchg
mov
pop
xchg
add
jmp
dec
adc
ficoms
or
test
mov
std
push
pushf
mov
lea
adc
jle
mov
test
je
add
sub
pop
loope
into
test
add
add
mov
imul
cmp
dec
cli
mov
ret
out
mov
ret
pop
and
or
inc
adc
mov
arpl
mov
aas
scas
and
mov
das
fucomi
sarb
pop
inc
ss
adc
es
push
adc
push
adc
push
das
in
stos
add
stos
or
add
fbstp
inc
addl
and
insb
fmuls
sub
cwtl
mov
loopne
and
lcall
movsl
and
lret
and
adc
insb
or
pushf
inc
into
clc
xor
ret
adc
sbb
xor
jno
mov
cmp
or
insb
int
mov
std
inc
addr16
inc
pop
jae
or
cmp
lds
inc
xchg
sub
out
sarl
push
mov
fnstenv
jae
mov
ss
rorb
dec
addr16
out
pop
ret
outsb
fcmove
and
outsb
bound
cmpxchg
push
and
lods
pop
cmp
cmp
aaa
dec
repnz
add
dec
es
xchg
mov
lods
add
jbe
fcmove
push
fildl
sbb
out
cs
inc
add
ljmp
jge
pop
popl
pop
and
pop
adc
fildll
aas
clc
sbb
lea
add
inc
sbb
add
cld
cltd
inc
cmp
gs
mov
inc
and
ret
repz
push
push
insl
and
int3
push
add
xor
sbb
pop
sbb
nop
cmpsl
dec
pop
pusha
dec
push
in
insb
orl
add
imul
mov
scas
push
push
dec
test
test
lea
clc
and
and
push
jle
lret
lret
mov
add
push
push
les
jo
push
into
mov
sbb
mov
cmp
push
stc
lahf
jno
jo
enter
jb
arpl
insb
dec
insl
or
adc
data16
mov
cli
inc
imul
pop
pop
cmp
cmp
mov
mov
daa
iret
mov
adc
out
and
pop
int3
xchg
xchg
jg
jno
sbbb
or
decl
sub
or
add
mov
shlb
xchg
inc
daa
adc
leave
loop
push
adc
mov
pop
repnz
xchg
cmp
ja,pt
or
loopne
aaa
push
ja
sub
sahf
or
lcall
pop
out
movsl
icebp
push
jns
mov
or
and
sub
pop
arpl
push
mov
mov
aad
test
push
or
xor
cs
pop
pop
jno
push
mov
mov
stc
jge
movsl
inc
lahf
mov
inc
sti
or
cmp
mov
addl
ffree
push
or
ret
aad
sbb
xchg
pushl
movsl
ret
leave
outsb
push
pcmpgtd
pop
jle
movsb
pop
sub
sarl
movb
mov
lret
mov
data16
adc
imul
inc
adc
inc
sub
pop
inc
je
or
xor
jecxz
mov
aad
inc
jbe
sti
cltd
or
cli
mov
and
aam
push
roll
inc
inc
jecxz
subb
and
adc
mov
push
stc
inc
mov
push
mov
in
mov
xlat
movsb
dec
push
sahf
pop
cmp
aas
fimull
mov
xchg
insb
push
jo
and
adc
mov
lods
mov
lret
adc
jnp
pop
mov
repz
adc
pop
dec
stc
or
mov
jg
fsubrs
daa
cmp
in
adc
orb
mov
mov
xchg
lea
jae
push
xchg
lcall
and
push
jmp
repz
dec
das
icebp
mov
and
ja
mov
bound
in
test
cltd
rorb
cld
aaa
mov
std
inc
lret
dec
dec
and
adc
sub
push
in
in
adc
int3
inc
out
in
mov
adc
push
jge
mov
ret
sub
xadd
mov
cmp
sub
pop
roll
push
shrl
sub
ljmp
rcl
aam
sarb
and
jno
xchg
into
ss
jns
lret
lret
dec
ljmp
pushf
daa
fildll
je
adc
dec
std
cmp
or
cmp
cs
push
lret
outsb
mov
in
xchg
cs
jg
cs
shrl
adc
mov
repnz
pop
pushf
or
stos
out
or
push
cmp
arpl
loope
mov
imul
dec
xchg
jl
adc
adc
nop
shlb
cltd
sbbl
and
push
push
ljmp
push
out
mov
push
leave
add
push
aad
loopne
xor
popf
aam
hlt
pop
add
cltd
jns
push
leave
loope
inc
repz
mov
gs
mov
cs
sbb
and
push
add
and
pop
lods
push
cwtl
jne
decb
adc
ret
hlt
rolb
out
and
sahf
push
cmp
daa
jmp
mov
cmp
fcompl
lock
adc
or
pop
in
xchg
sub
ljmp
mov
fsubrl
jae
mov
dec
cmp
scas
sbb
dec
add
repz
das
add
push
xchg
insb
jmp
xchg
or
addl
cs
jne
dec
pop
insl
int3
out
imul
mov
pop
sub
ss
pusha
jne
push
les
or
push
sbb
adc
dec
stc
rcrl
xor
fistpll
mov
adc
adc
push
push
mov
into
loope
jecxz
or
ret
mov
inc
ss
lcall
pop
mov
push
add
pop
mov
push
dec
sbb
lods
or
xchg
aam
adc
ss
mov
lcall
jae
cmp
icebp
roll
or
push
xchg
add
xlat
inc
pop
aad
add
push
adc
adc
sbb
sbb
sbb
pop
sbb
sbb
andb
mov
and
inc
mov
sub
scas
cmc
cld
push
cmc
daa
mov
adc
mov
dec
loop
sbb
dec
sub
mov
sbb
clc
mov
loope
scas
dec
mov
sbb
sbb
push
insl
and
cld
add
repnz
jae
xchg
mov
mov
cmc
add
jge
sub
xor
int3
test
push
xor
fstpl
or
cmp
repnz
xor
dec
cs
mov
sub
sbb
popf
add
adc
inc
pop
push
in
fmuls
pop
mov
cs
xor
sub
ret
gs
jmp
cmp
jae
push
add
arpl
sbbl
loopne
cmpl
pop
pop
and
subl
xor
adc
mov
or
mov
xor
inc
test
cmpsb
scas
movmskps
jae
jmp
inc
inc
nop
sub
sbbb
xchg
jecxz
clc
das
ja
aad
cmpb
inc
add
pop
or
adc
fcoms
sub
shlb
cli
xor
xor
adc
lret
jl
and
sbb
daa
mov
add
pop
sbb
push
dec
xlat
repz
data16
aam
sbbl
into
ja
xchg
ljmp
sub
sbb
or
mov
sbb
push
dec
addr16
test
sbb
data16
push
pop
iret
or
mov
and
jmp
in
out
mov
popf
pop
push
stc
pop
xor
adc
cmp
adc
adc
fucomi
mov
jmp
pop
hlt
pop
lret
adc
xor
adc
lret
std
leave
call
sbb
loope
inc
lds
test
stc
push
pushf
loope
dec
push
pop
mov
popa
loopne
movsb
pop
push
and
or
scas
sub
loopne
adc
in
sub
xor
ret
stos
sbb
lahf
roll
je
sbb
push
stos
lock
push
adc
lret
fistpl
pop
aas
pop
jp
sbb
ljmp
or
addr16
pop
sahf
lret
mov
jp
dec
inc
repnz
ror
add
adc
and
lret
and
xchg
add
imul
push
popf
addb
pop
lods
jl
add
push
sbb
pop
xchg
leave
aaa
insl
out
adc
push
stc
rcrb
lcall
pop
push
adc
pop
add
or
shr
mov
dec
flds
cmp
mov
mov
push
fistpl
cmpsl
in
cmp
adc
adc
sub
sbb
jnp
clc
mov
xor
scas
leave
jge
nop
pop
inc
mov
jo
insb
pop
pop
cmp
sbb
adc
mov
lcall
dec
test
out
lcall
mov
cli
sub
leave
sub
sti
orb
inc
dec
add
sub
xorb
add
loope
lcall
dec
add
jne
stos
pop
mov
sti
in
adc
or
fiadds
cmp
data16
adc
add
gs
pop
bound
fiaddl
les
aas
xchg
or
sbb
mov
lea
ljmp
icebp
push
xchg
into
push
mov
add
int
adc
jp
mov
popf
adc
in
mov
pusha
pop
outsl
and
sahf
aaa
arpl
daa
sbb
and
sbb
stos
dec
add
stos
dec
or
movsb
xor
arpl
bswap
adc
testb
mov
xor
and
addb
mov
sub
xlat
cmpsl
imul
leave
idiv
push
xor
and
and
mov
xchg
jbe
sub
jg
add
mov
rclb
outsl
or
jae
mul
mov
mov
sahf
stc
dec
rorb
xor
lgs
push
orb
and
inc
idiv
rclb
shr
or
dec
sbb
or
dec
or
div
jmp
fwait
and
es
cs
mov
insb
or
xor
es
xchg
cld
jle
xchg
fwait
testl
or
mov
push
xchg
push
lret
stos
movsl
add
mov
outsl
mov
sub
xor
lods
inc
shll
out
rcr
js
or
ficoml
sbb
popf
lahf
mov
push
jecxz
xor
xchg
sbb
cli
loope
jecxz
stc
mov
je
mov
pop
xchg
mov
rolb
and
jl
push
xchg
iret
push
push
loope
sbb
test
int
jp
repnz
arpl
imul
jb
aam
add
sub
mov
push
and
dec
xor
add
fwait
sub
or
pop
ret
repz
fidivs
sbb
test
xchg
pop
aaa
jae
shrb
mov
pop
stos
cmpb
mov
dec
fldl
and
lret
cmc
aad
aas
test
enter
fmull
adc
fisubrs
mov
lret
dec
in
aam
pop
push
push
pop
mov
sub
pop
push
leave
jno
mulb
daa
mov
add
sahf
daa
imul
pop
sub
lea
addr16
cmc
sbb
jmp
adc
loope
pop
inc
shr
popf
pusha
jnp
push
xchg
lods
in
imul
jnp
xor
push
ret
jb
jmp
loopw
jecxz
movsb
dec
daa
xchg
push
xor
cmp
adc
mov
lret
cmp
popf
fadds
lea
adc
js
jno
int
xchg
cmp
outsl
inc
adc
and
movsb
int
cmp
mov
mov
filds
aas
mov
shrb
inc
sub
sbb
push
sbb
adc
jae
push
shrb
sbb
dec
dec
out
xor
mov
cmpsl
push
sub
in
cmc
fcoms
leave
jmp
sbb
sbb
outsb
fcoml
cmp
sub
mov
adc
call
mov
or
jns,pt
cmp
adc
jmp
sbb
je
in
push
mov
into
inc
cmp
cmp
enter
movsb
scas
dec
or
or
in
push
daa
fistpll
or
scas
jecxz
aas
adc
pushf
and
or
pop
lods
lahf
mov
mov
adc
fnstenv
cmpsl
and
sub
test
add
or
cmpsl
or
insl
lahf
cwtl
ret
aam
cmp
out
scas
movsb
pop
lea
xchg
sbb
mov
stos
sarb
jl
setge
sub
xor
notl
aam
aas
adc
adc
mov
add
repnz
shll
sbb
pandn
jge
add
fisubs
push
mov
lret
int
mov
rolb
fsubrl
and
into
das
push
sub
loop
pop
xor
cmp
or
adc
sarl
push
mov
pusha
pop
fsts
repnz
inc
je
push
out
loope
sub
sbb
push
int3
scas
mov
call
cmp
xlat
fdivrs
adc
sti
daa
pop
sbb
rcrb
mov
mov
mov
stc
mov
into
adc
xchg
xchg
enter
sub
loopne
repz
mov
arpl
pusha
repnz
jle
mov
pop
adc
test
bound
pop
mov
pop
mov
pushf
sub
loopew
add
xor
jecxz
cmp
insl
sub
adc
adc
mov
ret
push
jmp
es
or
xchg
mov
mov
fnstcw
movsl
mov
mov
aaa
clc
inc
cmp
cmp
outsb
or
jno
push
pop
pop
jno
lea
fmul
push
daa
sti
inc
shl
imul
imul
jmp
mov
shlb
fisttps
lret
xchg
int
aam
and
mov
and
cmp
xor
inc
ds
and
adc
repz
negl
out
lret
daa
pop
push
xchg
pop
pop
pop
clc
pop
lds
jp
lock
xchg
lret
cmp
adc
bound
lock
pop
mov
dec
and
mov
push
adc
loope
xchg
test
push
push
clc
test
add
in
sbb
adc
pop
test
es
lods
push
sbb
outsb
sbb
repz
cld
outsb
mov
in
sub
jno
pop
sub
fdivrl
mov
outsl
iret
pop
dec
incl
jmp
enter
aas
jmp
or
mov
cmc
and
repz
jnp
mov
add
addl
mov
sbb
popf
adc
and
and
xor
xlat
and
test
and
daa
sar
push
push
jne
stos
xchg
mov
stos
sbb
adc
repnz
ss
push
adc
dec
adcb
sub
lahf
fcmovne
add
pushf
popf
cs
jl
dec
les
sbb
lcall
dec
xchg
in
xchg
add
xor
xchg
mov
ja
xor
je
rcrl
lds
ss
jns
dec
out
add
invd
outsb
adc
mov
adc
jae
dec
fsubl
xor
mov
lock
jmp
ret
sbb
inc
out
fldt
or
mov
int3
sbb
lods
xchg
xchg
lea
and
or
jmp
push
lea
lret
adc
rorb
inc
xchg
scas
dec
dec
or
cs
fdiv
sbb
mov
adc
adc
or
mov
cs
or
insl
outsb
aam
rclb
outsl
xchg
inc
xor
icebp
mov
inc
push
xchg
loopne
in
push
ljmp
sub
ffree
lahf
mov
dec
pop
fsubrp
and
pushf
ret
jne
ror
movsb
push
add
pop
stc
stos
jno
aaa
das
jne
cltd
jp
cwtl
jne
icebp
sbb
movsb
or
cmpsb
xchg
mov
jbe
pcmpeqw
dec
sahf
adc
insb
jle
dec
pop
xchg
sbb
pop
pushf
mov
daa
push
iretw
sub
push
add
mov
adc
loop
adc
lods
sub
imul
popf
adc
jl
int
jp
pop
outsb
xchg
mov
xchg
sarb
jno
mov
aaa
popa
push
sub
icebp
push
adc
lret
daa
inc
mov
push
inc
lods
sbb
pop
addr16
mov
repz
dec
aas
das
js
loope
push
xor
adc
add
fmuls
push
pop
jno
jmp
push
data16
adc
mov
adc
adc
xchg
sub
or
das
fstps
or
xor
dec
decl
jno
or
or
xlat
repz
dec
pop
sub
mov
mov
lods
clc
dec
shl
mov
sahf
mov
push
xchg
push
pop
out
inc
xor
into
stos
push
fisubs
les
pop
in
movsl
iret
or
daa
pop
push
dec
xor
pop
rorl
fistps
xchg
ret
shlb
push
lods
pop
int3
mov
sbb
mov
and
jmp
addr16
sub
pop
xchg
add
icebp
cmpsl
pop
push
mov
and
mov
jmp
out
sarb
adc
push
lods
ficompl
push
loope
adc
push
adc
dec
cmp
out
imul
addr16
movsl
mov
iret
inc
sbb
in
ljmp
lahf
xorb
stc
push
add
lcall
push
insb
lea
xchg
iret
daa
in
cmp
dec
clc
mov
outsb
jns
ss
test
stos
loope
cmpsb
push
xchg
sbb
cltd
popf
xor
sahf
je
mov
pop
clc
xchg
mov
pop
or
outsl
cmpsb
and
ljmp
in
lret
rcrb
push
repz
xchg
mov
push
sub
and
loope
mov
or
test
xchg
lahf
xchg
aad
mov
dec
addr16
and
dec
popf
out
es
push
adc
adc
out
stos
dec
icebp
insl
lahf
pop
xor
xchg
push
cmp
cmpsb
cmpl
jp
outsb
test
cltd
jge
cltd
cmp
adc
sub
mov
mov
mov
mov
mov
lcall
jno
cs
addr16
xchg
cmp
fldcw
ss
xlat
mov
roll
sbb
aad
hlt
icebp
jge
mov
push
bound
mov
es
mov
jbe
xchg
and
sbb
mov
int
ljmp
cmpsl
sub
hlt
ficoms
sub
and
rolb
cs
scas
add
and
pop
push
mov
cwtl
outsl
xchg
add
aam
outsb
pop
mov
aad
aam
sbb
and
not
push
aam
mov
in
xchg
pop
sbb
shll
sahf
ss
pop
iret
lahf
adc
and
mov
dec
push
adc
cmp
adc
xchg
aas
pop
adc
insb
lea
rorl
pushf
adc
push
sbb
cmp
xchg
pop
push
push
insl
pop
pop
fadds
cmp
dec
dec
add
test
mov
mov
fidivrl
fwait
push
adc
mov
sub
add
mov
es
lret
ljmp
mov
fwait
lea
jle
aam
pop
insb
lea
icebp
testl
rorb
ljmp
mov
pop
lret
out
movsb
add
nop
push
dec
fbstp
cmc
push
cs
fs
and
sbb
int
loopne
sbb
cmovnp
lods
mov
repnz
jbe
xlat
mov
aad
leave
cmpsl
sub
js
dec
int3
xchg
int3
jmp
mov
mov
punpcklbw
leave
push
imul
into
xchg
mov
jmp
add
mov
push
jnp
push
inc
sbb
pop
jmp
add
mov
punpcklbw
add
cmp
outsb
sub
lahf
cli
push
and
jecxz
insl
xchg
sub
or
mov
adc
and
repz
movsb
cmp
xor
or
push
int3
adc
mov
jl
aad
or
insl
mov
xor
cmp
adc
adc
mov
dec
add
out
xchg
scas
push
popf
or
insb
add
imul
enter
stc
fidivs
cld
pusha
push
mov
shl
ds
cltd
aaa
mov
aaa
adc
pop
sahf
or
lds
cmp
mov
jae
pop
mov
fwait
adc
jne
mov
or
lahf
or
outsl
dec
insl
adc
add
dec
test
mov
aam
es
push
sub
dec
lock
xchg
jg
xchg
adc
push
adc
mov
adc
aam
sahf
adc
cmpl
testl
sahf
adc
adc
rcll
dec
adc
or
lret
cmp
pop
mov
imul
inc
test
in
bndstx
int3
lea
aam
or
ret
mov
outsl
sbb
mov
add
jo
leave
insb
adc
mov
add
pop
dec
pushf
fistpll
lcall
lcall
adc
sub
sub
lods
pop
mov
outsl
pop
enter
aaa
stos
push
mov
xor
xchg
xor
mov
ds
popf
test
dec
sbb
xchg
sbb
push
push
lods
ss
add
lcall
cs
push
into
lcall
popl
or
lods
setae
bswap
pop
out
xor
rclb
inc
push
ficoml
bound
push
insb
mov
mov
xor
jo
cmp
add
enter
inc
jmp
push
xchg
add
xor
cmp
add
mov
xlat
and
sti
cmp
cmp
mov
sbb
sbb
add
popf
mov
dec
sarl
lret
mov
in
push
lahf
and
iret
sbb
mov
xor
dec
clc
dec
mov
pop
cmp
dec
jne
push
and
jl
dec
pop
mov
jne
inc
mov
push
fdivl
jecxz
cmp
test
adc
insl
pushf
mov
and
lods
mov
cmpsb
sbb
dec
mov
in
imul
sub
lods
mov
shll
fnstsw
daa
mov
js
les
add
xchg
fdivrl
jns
clc
xor
inc
jp
pop
aas
jge
sti
sahf
pop
outsl
lahf
add
ret
jbe
addr16
loope
and
cltd
mov
insl
dec
dec
jne
xor
ret
cmc
jno
add
or
pop
push
mov
mov
aam
and
dec
rorl
mov
pop
pop
and
dec
pop
test
andl
fisubrs
popf
push
inc
mov
mov
in
mov
inc
enter
sbb
int
inc
inc
out
push
ljmp
dec
sub
loope
xor
xchg
inc
sbb
xadd
xchg
sbb
mov
cmc
insb
and
inc
and
adc
or
adc
sub
lahf
sub
fidivrl
mov
inc
add
xor
dec
mov
lock
lods
sbb
repz
mov
jbe
addr16
rolb
adc
scas
mov
fiadds
enter
popa
adc
lret
out
push
add
inc
jns
iret
mov
inc
mov
frstor
cwtl
fs
adc
sbb
sbb
inc
movups
cli
leave
push
dec
or
sbb
pusha
rorb
ss
mov
xchg
test
or
jnp
iret
cmp
cmp
dec
cmp
dec
push
jno
mov
or
addr16
adc
push
mov
fstpt
in
aaa
sti
ljmp
pop
pop
test
cli
lods
popf
dec
lock
pop
test
roll
mov
fsub
mov
mov
les
push
dec
pop
dec
jmp
mov
sub
fsubl
fs
lea
mov
es
int
in
or
or
jmp
loopne
imul
into
ss
outsl
jg
push
add
cli
dec
insb
loope
sub
nop
mov
or
into
iret
push
push
dec
cmp
scas
push
test
mov
movhps
or
outsl
and
movsl
inc
sbb
push
inc
fbld
daa
int3
stos
fdivrs
je
scas
mov
or
adc
sub
sub
and
xchg
and
or
stos
lcall
imul
test
fyl2x
pop
sbb
xlat
insl
loope
dec
cmp
cs
repz
inc
sub
in
push
dec
pop
or
xchg
sbb
sbb
sahf
lahf
jae
cmp
add
push
leave
les
xor
mov
in
int
cmp
test
cmp
daa
xchg
adc
dec
push
cmp
dec
ret
pop
sbb
push
sub
les
xchg
push
insb
lahf
or
mov
repz
or
test
or
je
scas
fiaddl
daa
push
lock
loope
and
or
data16
jp
adc
inc
fcompl
xor
in
jecxz
ret
push
fwait
movq
or
sub
cmpsb
es
pop
mov
fmull
popa
push
xchg
pusha
xchg
lcall
aas
shrl
or
fidivrs
addr16
cld
stos
xor
fcmove
adc
jnp
mov
xor
adc
insb
aam
push
rclb
mov
and
pop
out
fimuls
fnsave
sub
imull
lods
sub
insb
iret
add
ficoml
rol
rcll
pop
inc
cwtl
push
packuswb
mov
push
pop
dec
lea
adc
insb
lret
sbb
jle
cmc
jl
enter
adc
xor
push
jle
insb
push
sub
add
fdivrs
or
inc
pop
push
fwait
loope
mov
sbb
mov
stos
jno
mov
xor
repnz
pop
push
mov
mov
mov
adc
sub
dec
sbb
adc
fldl
and
fcompl
jecxz
fcomps
mov
ficompl
sbb
cmp
rcrb
inc
or
sbb
fdivl
pushf
into
jbe
sbb
movb
adc
hlt
notl
into
lret
xchg
jmp
push
aad
adc
inc
cli
cli
insl
popf
jae
aad
movntps
addr16
or
cmp
decb
popa
adc
int3
scas
push
mov
sbb
movsl
adc
mov
xchg
mov
adc
add
jnp
add
insb
rclb
xchg
cmp
dec
addr16
push
xchg
and
xor
dec
lcall
sbb
or
arpl
in
jg
mov
sbb
xlat
pop
and
iret
pop
add
or
or
icebp
jo
push
daa
into
sbb
mov
out
sbb
xor
dec
cmp
fisttpll
dec
jge
out
sub
adc
jb
add
inc
stc
int3
pop
out
mov
push
adc
push
insl
push
stos
mov
push
adc
sarb
aad
pop
mov
adc
dec
fucomp
cmpsl
jmp
jmp
pop
xor
test
popf
jne
ret
subl
pushl
xlat
adc
daa
pop
je
xor
mov
in
cmpsl
push
das
sbb
in
scas
das
and
sbbl
xor
and
divl
into
ficoms
cmp
or
jge
test
nop
pop
or
jmp
fs
in
sub
test
pop
scas
insb
xor
das
adc
mov
icebp
iret
test
xchg
and
xchg
mov
sbbb
int
push
in
jecxz
jae
daa
pop
aam
pop
add
imul
pop
cmc
xlat
adc
cs
cwtl
or
push
push
aam
sub
inc
loope
insb
scas
or
jb
ja
pop
xchg
imul
popa
and
mov
pop
adc
push
xchg
jne
inc
or
ljmp
jl
addps
sbb
outsb
mov
xor
cmc
jle
aam
xchg
mov
xchg
lret
adc
rcll
jp
dec
fmuls
cmpsl
iret
cmc
repnz
mov
add
sub
out
outsl
jo
xchg
aam
cmp
stc
fwait
leave
pop
xchg
pop
push
and
mov
daa
pushf
inc
mov
sub
mov
outsl
or
jmp
and
notb
sbb
stos
sub
cmp
mov
jb
dec
pop
xchg
xor
xchg
push
daa
sarl
xchg
pusha
roll
add
sub
and
out
hlt
jge
into
mov
adc
dec
ja
mov
xor
dec
and
fs
mov
inc
pop
lret
cmp
jl
pop
adc
jle
lret
test
scas
sbb
sbb
jecxz
inc
sbb
fadd
ljmp
ljmp
jg
mov
test
sbb
les
movsb
and
rdmsr
lods
loopne
ret
or
cld
mov
and
psrad
lcallw
sbb
add
leave
fxtract
dec
push
dec
les
inc
movsb
mov
dec
dec
into
or
push
add
and
sub
stc
mov
jb
dec
aam
stos
inc
addr16
sub
ret
insb
pop
adc
push
xchg
mov
push
cmp
sbb
push
gs
popa
cltd
push
sti
jl
mov
faddl
xchg
sub
cli
fsubrl
xor
pop
adc
outsb
push
orl
idivl
or
mov
mov
jne
repz
stc
lcall
jmp
rcll
and
mov
or
push
sbb
sbb
rcrl
sub
and
push
cmp
lss
pushf
scas
jle
repnz
fstps
adc
cmp
sub
call
fwait
and
mov
cmp
add
in
adc
cs
or
xchg
mov
push
xor
adc
adc
and
sbbl
jae
dec
push
xchg
les
sbb
std
xchg
daa
mov
cmp
jae
into
rcrb
and
add
into
add
cmpsl
xchg
jmp
dec
shll
addr16
dec
or
mov
inc
popf
xchg
pop
ljmp
loopne
imul
int3
mov
xchg
push
cmp
movsb
frstor
je
dec
sbb
xchg
daa
aad
sbb
cwtl
sub
mov
cmp
push
jae
add
pop
insb
pop
pop
mov
lret
inc
xorl
xchg
popf
clc
in
rcll
jnp
mul
xor
out
loope
xchg
mov
sbb
jl
fwait
sbb
inc
cmpsl
xchg
popf
sbb
lahf
and
or
xchg
into
jns
inc
loopne
adc
xchg
es
jnp
adc
gs
and
inc
dec
jb
out
movsb
mov
sbb
popa
loop
push
pop
mov
fisttpll
jecxz
decl
popf
sbb
and
lret
rcll
lcall
ljmp
pop
pushf
or
sbb
mov
or
psubb
push
sbb
inc
int
add
popf
dec
int3
pop
mov
mov
dec
add
daa
cmc
sar
sbb
scas
sbb
mov
push
cmc
cld
call
iret
or
insb
in
ljmp
adc
aad
add
cmp
mov
jle
int3
adc
movsl
test
scas
mov
or
lret
xchg
in
dec
sub
add
call
jne
lret
xor
rcll
dec
inc
jecxz
test
das
ficoml
xchg
mov
ficompl
aaa
jp
cmpsl
mov
xor
or
dec
fildll
pop
addr16
xchg
and
inc
push
into
jo
sbb
xchg
test
dec
les
push
cmp
inc
pop
adc
mov
xor
stos
mov
cmpsl
push
push
rcr
dec
adc
stos
clc
aaa
pop
push
imul
adc
push
jmp
sti
push
imul
mov
daa
push
mov
cmp
insb
scas
xlat
popf
int
add
sahf
jecxz
mov
stc
aas
xchg
out
mov
test
mov
popf
inc
lret
mov
push
xchg
aas
mov
cmp
jb
and
movsb
ss
int
jnp
mov
lret
orb
sub
sub
lods
fs
enter
dec
pop
cmp
pop
scas
adc
stc
rcrb
sbb
aam
aam
sbb
pusha
cli
mov
sbbb
push
int
jae
pushf
push
adc
test
addr16
mov
or
cmp
imul
push
lret
inc
push
subps
xor
pop
pop
sub
popa
leave
mov
xchg
ficomps
fisttps
xchg
xchg
popa
sbb
push
daa
pushf
data16
movsl
lods
adc
mov
popf
es
mov
les
mov
mov
dec
lret
dec
push
jg
xchg
jbe
cli
adc
data16
xchg
mov
negl
and
push
sub
xorl
arpl
ret
femms
mov
adc
loopne
lret
push
cmp
fwait
mov
outsl
or
mov
push
add
pop
adc
xchg
sbb
sbb
clc
scas
push
imul
add
cli
inc
nop
mov
les
int
aad
mov
jo
fs
mov
rcll
es
scas
nop
xchg
aad
inc
pop
push
cwtl
mov
lcall
addr16
lods
daa
sahf
push
test
int3
xor
xchg
mov
lds
lods
xchg
icebp
icebp
loope
daa
imul
fiadds
pushf
add
mov
scas
xchg
xor
mov
mov
mov
arpl
fwait
jecxz
mov
or
push
in
je
dec
fsubl
inc
push
test
push
rcl
cmp
or
gs
sbb
pop
push
xchg
push
mov
test
xchg
mov
js
cmp
push
decl
inc
sbb
sbb
out
dec
hlt
mov
push
aam
adc
iret
adc
data16
push
jne
ds
cmp
mov
inc
nop
add
ja
mov
dec
in
mov
aaa
cmc
mov
push
stos
sbb
push
call
sub
xor
push
mov
jo
cld
dec
jmp
xchg
push
bound
add
es
or
arpl
or
in
es
push
jp
repz
pop
idivb
inc
cmp
dec
sbb
mov
fdivrs
add
inc
mov
fstpl
pop
daa
mov
aas
das
sbb
push
lret
jle
sub
jne
mov
imul
add
xchg
push
insb
int3
pusha
sbb
and
pop
or
sub
dec
jge
lea
jmp
cmpl
insl
mov
sbb
mov
scas
jmp
mov
xchg
dec
imul
cli
mov
js
ficoms
aam
sbbl
xor
lods
cmpb
imul
ror
mov
cmp
stos
sub
mov
push
or
dec
mov
sti
xchg
ror
lock
xlat
and
insb
lret
and
stc
push
cli
jnp
jl
loope
cmp
or
mov
rorb
mov
push
loopne
sti
cmp
out
pop
sbb
or
mov
mov
aaa
repz
sub
gs
cltd
fwait
negb
fstps
lret
cmp
add
jmp
sub
fidivrl
cmovnp
push
sbb
int
and
clc
xor
dec
ret
fwait
or
mov
lock
xchg
push
xchg
rcll
push
cwtl
cmp
mov
sub
push
popf
ds
mov
pop
pusha
sub
mov
pop
dec
or
movsb
lret
ja
or
pop
and
addr16
shll
rcrb
dec
dec
pop
add
cmpsb
pusha
xchg
push
xchg
pop
or
push
xchg
dec
loope
and
mov
mov
sub
inc
pop
jecxz
pop
sbb
mov
or
repz
ficoms
push
shl
pop
or
xchg
sbb
push
xorb
cli
sub
cmpsl
xor
test
lods
cmp
cmp
push
jmp
nop
and
add
aas
ret
lahf
mov
sbb
pop
dec
fiadds
inc
jmp
out
loop
lods
add
and
or
xchg
cwtl
test
push
cltd
pop
mov
mov
add
lock
into
stos
pop
and
add
pushf
xor
int3
iret
cmp
xor
push
inc
js
xor
sbb
xor
mov
push
les
int
outsb
sub
jecxz
lds
cli
or
push
rcrl
pop
xor
stos
cmpl
push
push
pop
out
aad
test
jl
push
pushf
iret
addr16
stos
pop
imul
dec
dec
cmp
add
push
inc
lods
pop
adc
fsubr
jae
pop
add
gs
fnsetpm(287
xchg
daa
push
movsl
mov
jne
or
popa
add
mov
cmovnp
jle
pop
dec
adc
fsubl
scas
mov
sbb
pusha
loope
mov
iret
sbb
and
mov
xchg
dec
pop
outsl
cmpsl
jle
data16
scas
lahf
sub
in
enter
movsl
sub
fwait
xchg
or
pop
xchg
pop
aas
popa
fwait
sub
lods
or
mov
add
sbbl
mov
jae
sub
pop
outsl
jl
and
outsl
adc
jmp
fisttpl
and
dec
jo
lret
mov
fwait
push
hlt
fs
sbb
and
les
mov
outsl
in
sbb
xchg
fcoms
iret
insb
pop
or
pop
leave
xor
xchg
add
in
adc
or
std
jmp
rorb
out
mov
stos
fimuls
adc
pop
addr16
mov
sbb
lods
add
and
pop
mov
cs
icebp
ror
inc
mov
cmp
cmp
pop
pop
test
sbb
cmp
aam
cmp
inc
add
cs
lods
in
dec
aas
repnz
orb
scas
mov
push
out
xchg
sbb
adc
loopne
int
mov
ds
jp
ss
inc
jge
in
mov
leave
jecxz
xorps
sbb
lahf
mov
add
and
iret
std
xlat
inc
sbb
test
add
repnz
popl
imul
aaa
stos
cmp
and
scas
adc
dec
xor
cmp
push
dec
fildll
popa
cmpsl
pusha
arpl
mov
xchg
lret
sbb
mov
insb
sub
jp
repnz
or
ficoms
adcl
lret
aam
fidivrs
rorl
test
sub
jmp
test
rcrb
or
and
ds
or
decb
xchg
mov
sti
out
andl
pusha
xor
xor
sbb
xorb
pop
insb
pop
sbb
jnp
mov
ss
sahf
movsb
cltd
xchg
pushf
lock
scas
push
cs
test
mov
into
adc
xor
mov
punpckhdq
cmpsl
push
lds
les
sbb
mov
cmp
xchg
pop
inc
cld
bound
pop
jecxz
outsb
xor
adc
pop
push
incb
push
decb
and
insl
popf
rcrl
push
mov
dec
sbb
sub
int
pop
adc
adc
clc
add
cmp
arpl
mov
sub
mov
mov
ret
nop
loope
iretw
cvtps2pd
mov
fs
push
push
leave
pop
or
cmp
pop
lret
add
int
fwait
scas
or
fdivl
inc
enter
add
mov
pop
mov
ja
pop
mov
inc
lods
add
cli
push
pop
mov
dec
int
cmp
jbe
leave
mov
stc
xlat
std
cs
ret
mov
arpl
or
mov
jg
dec
movsb
or
es
sub
adc
xchg
dec
and
mov
add
arpl
add
inc
and
xchg
pushf
add
sar
sti
add
push
cmpsb
popa
test
push
lcall
std
and
sub
mov
pushf
and
and
adc
ret
subb
xchg
inc
jbe
or
das
xchg
movzwl
push
mov
sti
testl
sub
mov
test
and
cld
cmpsl
int3
icebp
jmp
aad
sbb
xchg
cli
jmp
adc
out
xor
jmp
push
sbb
loop
push
rorl
and
mov
adc
es
nop
pop
push
pusha
mov
and
or
mov
js
mov
and
nop
cltd
dec
fs
adc
mov
popf
adc
push
sbb
push
lods
adc
movsb
lret
or
dec
fsubs
iret
aaa
sbb
je
push
dec
pop
rorl
mov
or
in
push
roll
fisubrs
mov
in
repnz
mov
push
sub
outsb
popf
out
imul
mov
dec
adc
push
imul
jmp
mov
xlat
jb
int3
dec
sub
ljmp
xlat
pop
ret
sbb
cs
test
cs
aam
push
mov
adc
pop
ret
paddq
add
jnp
jb
jae
sub
sub
adc
push
hlt
out
push
insb
pop
pop
add
push
dec
les
stos
mov
xor
pop
fmull
mov
xor
icebp
sahf
clc
pop
mov
push
xchg
sbb
int3
dec
mov
outsb
adc
xor
push
psrlq
adc
and
and
xchg
sbb
sbb
sbb
dec
cmp
roll
xchg
push
inc
or
imul
jge
iret
sub
repnz
lea
adc
xor
stc
pusha
mov
inc
iret
aaa
jno
xor
push
inc
cmc
bound
adcb
out
iret
sub
adc
lcall
pop
insb
or
inc
mov
daa
xchg
das
popa
mov
sub
pop
pop
inc
sub
adc
inc
repz
pop
ficoml
adc
mov
lea
adc
mov
in
cli
or
push
sub
lds
adc
xchg
fwait
push
or
sbb
sub
dec
adc
sti
rcrl
xchg
enter
mov
push
aad
adc
ljmp
lcall
test
adc
loopne
int
daa
imul
adc
adc
push
shll
push
mov
push
mov
outsb
pushf
push
lods
movsb
or
insl
push
dec
mov
push
adc
push
xchg
imul
mov
add
je
stos
sub
mov
sub
jnp
lods
or
ds
sti
movsb
adc
mov
mov
shr
inc
mov
cmp
sahf
jg
mov
int3
decl
pop
sbb
fmul
sub
dec
outsb
dec
dec
popa
loope
cli
push
int
adc
jmp
jecxz
out
fdivl
xchg
jb
cmpsb
or
scas
pop
insb
lcall
ljmp
call
sbb
xchg
sbb
int3
sahf
repnz
or
add
decl
inc
push
mov
adc
sti
mov
outsl
pop
dec
push
sbb
insb
adc
sbb
pop
xor
xchg
push
insl
mov
mov
xchg
mov
and
bound
inc
jae
ljmp
inc
lahf
mov
or
dec
mov
pop
or
movsb
push
ljmp
lods
jb
dec
mov
lock
cs
cmp
cltd
ds
inc
cs
push
dec
xchg
lret
cmp
lods
adc
adc
clc
and
cli
insl
pop
inc
jne
aam
adc
or
push
push
dec
xchg
xchg
or
push
xor
add
cld
jb
js
xchg
std
push
jp
push
push
or
imul
stos
mov
jge
mov
sbb
cli
fmulp
add
imul
dec
loop
repz
out
push
push
jl
movsl
mov
lret
outsl
cld
test
sub
adc
insl
cmpsb
or
mov
int
dec
jle
insb
mov
shll
das
mov
cmp
jle
das
mov
pop
cmp
pop
cmp
fnstcw
adc
pop
mov
shlb
imul
xchg
jb
jp
mov
dec
dec
lretw
mov
ss
push
lds
das
and
dec
lcall
mov
xchg
pop
cmp
jle
adc
int3
xor
adc
add
push
enter
data16
jle
stos
sub
cwtl
pop
int
andl
test
mov
lcall
adc
imul
or
or
push
dec
mov
lret
and
insl
outsb
lret
imul
sub
in
sarl
push
dec
das
mov
mov
or
nop
rolb
or
rcl
or
mov
mov
dec
pop
mov
test
mov
rcl
dec
mov
dec
aad
ret
mov
imul
and
insl
outsb
mov
imul
sub
gs
add
xchg
mov
push
ret
dec
or
push
mov
dec
outsb
push
iret
sbb
and
repz
lcall
xlat
adc
sbb
lea
and
mov
or
pop
repnz
inc
gs
or
sbb
jmp
lcall
xchg
and
dec
adc
adc
xor
out
and
mov
mov
lea
mov
int3
in
push
or
lea
dec
mov
cmp
dec
push
int3
xor
sub
dec
shll
test
or
mov
dec
push
or
int3
or
cmp
lahf
sub
int3
sbb
pop
movsb
dec
cmp
mov
inc
add
roll
mov
lods
pop
pop
ja
xor
add
jae
sbb
jp
mov
and
aaa
or
sub
adc
push
sti
ficoms
rcl
outsl
lea
dec
and
sahf
push
and
pusha
nop
jb
shlb
push
adc
movsb
int
ret
mov
jecxz
fldcw
lea
sahf
pop
xor
lcall
mov
adc
insl
sub
test
jmp
lods
orb
nop
and
shlb
repnz
inc
outsl
scas
hlt
lret
aam
mov
lea
push
ljmp
int
das
sbb
pop
pusha
scas
mov
xchg
mov
outsb
adc
mov
adc
pop
lods
dec
shlb
push
cmc
clc
cmp
push
push
stos
insl
sub
lahf
imul
xchg
push
mov
pushf
icebp
dec
scas
dec
int
add
push
sub
cltd
pushf
jno
dec
xchg
dec
out
aam
lcall
ds
aad
sbb
xchg
jb
and
xor
push
inc
or
lret
fucomi
sbb
ljmp
out
int
dec
pusha
lds
sub
adcb
mov
mov
push
xlat
sub
shrb
fcoml
andl
sahf
lahf
das
lea
add
jecxz
cmpb
inc
movsb
dec
inc
lret
imul
ret
repnz
push
pushf
add
scas
mov
outsl
fdivrs
push
mov
in
ds
sub
dec
lret
mov
iret
xlat
sahf
fdiv
lret
fsubrs
and
inc
ror
jbe
outsl
and
cmp
cmp
or
fsqrt
push
push
or
xlat
aam
pop
or
push
push
das
mov
jns
stos
dec
or
mov
sub
fsqrt
push
jb
ret
xlat
dec
das
mov
scas
comiss
pushw
xor
das
lea
cmpsl
xchg
xor
js
fsts
iret
in
dec
mov
or
dec
sbb
mov
imul
mov
adcl
imul
mov
or
xor
dec
or
iret
sbb
or
jmp
iret
ds
das
mov
jno
push
das
and
inc
xchg
cld
or
dec
add
jl
loope
jmp
scas
dec
xchg
rorb
push
addps
push
aam
pop
or
adc
jbe
xchg
cmp
lahf
push
or
push
scas
dec
push
test
pandn
pop
xchg
fisttps
dec
dec
jb
mov
rcrl
dec
inc
repz
int3
dec
add
add
jb
int3
sub
add
inc
mov
mov
notl
mov
jns
add
cmp
pop
or
push
cmp
push
mov
mov
ret
imul
dec
dec
add
ret
pop
dec
xchg
rorb
and
int
or
mov
or
sub
movsl
mov
lea
adc
imul
dec
sbb
or
shrl
dec
cmp
mov
testl
dec
or
fwait
adcb
int
in
fsqrt
push
filds
cmpsb
rcll
fimuls
inc
aam
rorl
dec
add
inc
sub
pop
push
xchg
addr16
fsqrt
push
jne
ret
xor
mov
call
mov
fwait
in
scas
ja
add
jns
shrl
les
jb
rcrb
push
add
inc
lods
push
int3
lret
ljmp
int
je
pop
clc
pusha
inc
psllq
enter
aad
imul
aad
or
lret
push
push
notb
mov
push
je
push
xor
push
icebp
push
push
insl
xchg
push
mov
push
and
push
fmuls
sbb
and
pop
sbb
sub
bound
mov
insb
pop
mov
or
or
sub
sbb
pop
subb
fwait
dec
push
jae
xchg
rep
jge
idivl
imul
and
push
inc
ds
dec
pop
pop
dec
cwtl
cmp
les
mov
xor
rcl
insb
mov
add
fimuls
xchg
sub
pop
pop
int
leave
or
add
xor
xor
imul
sbb
pop
cmp
dec
fs
aas
mov
jp
dec
and
aam
mov
xor
or
push
jecxz
mov
mov
loopne
sub
fistps
add
stc
js
out
test
jp
pop
push
je
and
jns
ja
out
cli
pop
mov
dec
in
jl
lods
sbb
adc
inc
pushl
and
int
or
dec
stc
xchg
int
insb
sbb
or
shrb
stc
xor
les
call
push
sub
mov
add
sti
imul
loop
orl
je
rorl
scas
fisttpll
cmp
int3
mov
sbb
adc
les
push
mov
outsl
add
jp
mov
sbb
mov
sbb
insb
pushf
or
pushf
push
and
ret
cmp
outsl
and
cmp
mov
pop
push
loope
adc
xor
jp
int
insl
pop
push
gs
shll
adc
adc
imul
pop
icebp
dec
xor
or
cmp
cli
lret
leave
mov
mov
fimull
sbb
out
dec
pushf
fdivrs
lea
push
psubb
and
pusha
enter
repz
adc
daa
adc
mov
cmp
jle
mov
sbb
js
sbb
imul
jp
insl
cmp
pop
adc
or
sub
jp
fs
jnp
sub
or
xchg
cli
cld
sub
into
repnz
cli
add
jmp
push
inc
push
cmp
test
sub
dec
incl
pslld
lret
adc
and
pop
push
dec
ljmp
mov
lahf
icebp
mov
imul
or
push
pop
push
sub
outsb
lea
loopne
cltd
push
loope
imull
fsts
outsb
cwtl
dec
stos
cmp
mov
and
push
mov
inc
and
mov
inc
lret
inc
dec
or
mov
lret
cmp
or
mov
fs
pop
mov
pop
adc
xchg
mov
or
stos
iret
and
pushf
push
xlat
and
mov
jle,pn
call
shrb
mov
mov
fadds
mov
dec
fisubrl
into
sub
jge
cmp
adc
and
mov
xor
jle
sti
pop
setnp
mov
xor
xor
insb
cmp
mov
stc
outsb
imul
add
fidivl
mov
test
mov
fwait
fwait
ljmp
sub
test
cs
js
jmp
jae
pop
inc
pop
jb
and
daa
fidivrl
or
insl
pop
xchg
insb
sbb
movsl
mov
xchg
adc
xchg
sti
ss
push
jle
popf
andl
aas
mov
das
adc
sbb
push
fisttpll
mov
pop
ficoms
cmp
mov
outsl
inc
mov
dec
and
mov
adc
and
fsubl
cmp
repnz
push
inc
mov
addr16
fs
aam
sub
pop
xlat
ds
mov
push
sub
jns
and
dec
cmp
insb
dec
mov
adc
sbb
out
adc
lock
arpl
bound
mov
dec
in
xchg
mov
adc
xchg
pop
pop
cld
arpl
imul
pop
xchg
mov
push
add
or
rolb
lea
cmp
mov
and
cmc
push
popf
fsubrs
pop
inc
cwtl
mov
mov
sub
sub
mov
leave
inc
pop
fmul
les
les
mov
inc
mov
adc
jb
popf
lahf
adcl
pop
cs
das
or
int
mov
scas
pushf
jecxz
mov
dec
adc
push
adc
nop
mov
xor
mov
outsl
rclb
mov
cmpsb
pop
adc
cli
test
pop
xlat
mov
cld
or
jmp
push
cmovns
paddusw
es
cmp
sbb
test
arpl
pop
iret
cmp
int
cmp
xchg
push
adc
sub
mov
xchg
adc
fdivs
mov
xchg
nop
into
rol
push
adc
mov
adc
adc
adcl
cmp
fadds
and
addr16
inc
mov
rcll
dec
xchg
adc
xchg
xor
cs
mov
sbb
and
pushf
cmc
insb
sbb
stos
xchg
pushf
jno
mov
pop
bound
sub
nop
mov
cmp
lcall
out
mov
sbb
sub
mov
sub
mov
ljmp
bound
push
mov
and
inc
icebp
mov
leave
enter
daa
push
loopne
add
xchg
ljmp
mov
ror
out
pop
mov
les
or
inc
fdivrl
daa
mov
pop
jg
mov
orl
push
les
movb
test
jno
or
jmp
jnp
xchg
xchg
lea
push
movsl
or
push
add
sbb
int
rorl
mov
imul
dec
sub
loop
fxch
push
mov
or
test
push
sbb
dec
ret
lret
aaa
daa
sbb
scas
outsb
fwait
cmp
pop
mov
enter
xchg
adc
cmpsb
sbb
dec
mov
int3
push
add
inc
lret
mov
or
out
cs
sub
pop
dec
add
int
int
or
add
in
shrl
dec
ret
add
fistpll
push
mov
stc
stc
roll
adc
mov
psubq
js,pt
push
cltd
dec
fsubs
lea
mov
inc
testl
sub
adc
inc
out
mov
pop
lcall
cs
jmp
cmp
sub
cwtl
rcr
mov
xchg
or
add
sbb
flds
inc
repnz
add
fwait
pop
push
iret
es
inc
lcall
cmp
or
xchg
cmp
pop
mov
xchg
push
dec
cmp
lret
pminub
mov
inc
jge
mov
dec
jle
adc
inc
repz
adc
add
pushf
xchg
ror
and
and
pushl
xor
sub
ret
fs
fldenv
jne
sahf
int3
in
stos
sub
mov
fmul
mov
mov
push
dec
dec
or
imul
mov
in
iret
sti
sahf
sbb
sarl
xchg
adc
sbb
outsb
sub
mov
mov
push
mov
outsb
mov
ret
pop
sbb
xchg
nop
lahf
or
sbb
outsb
cmp
sbb
mov
xor
mov
ds
and
xor
and
imul
mov
dec
sub
loope
dec
or
jb
sub
dec
in
dec
and
lods
fdivrs
dec
imul
sbb
hlt
or
inc
iret
scas
xlat
in
je
jg
and
in
jp
insb
dec
jecxz
mov
and
sbb
stos
sbb
adc
mov
shrb
popf
mov
push
int3
xor
test
loopne
or
push
aam
ret
mov
xor
sahf
fimuls
pop
lret
repz
stos
sub
loopne
pop
and
or
mov
outsb
fildll
flds
cltd
adc
cmp
outsb
jle
sbb
es
aam
ljmp
xchg
xor
mov
movsb
jle
arpl
imul
cld
xchg
rsqrtps
stos
fiadds
popf
pavgw
in
dec
push
and
mov
pushf
sub
jns
dec
adc
push
mov
ds
sarl
stos
sub
sub
loop
jg
popf
popa
cwtl
xor
lods
movsb
pusha
nopl
leave
rolb
mov
dec
push
or
nop
jb
push
jg
shrb
xor
leave
xchg
arpl
clc
adc
inc
inc
das
fiadds
push
and
repnz
mov
loope
mov
sub
adc
dec
jmp
in
lahf
or
or
sar
inc
imul
jo
push
xchg
outsl
addr16
sti
fcompl
sub
sbb
mov
in
aas
je
movsl
mov
test
jecxz
clc
sbb
shr
push
repnz
iret
insl
mov
ret
scas
xor
mov
pop
add
ljmp
sub
insl
int
inc
sbb
push
sbbb
cmp
mov
inc
lds
out
outsb
lahf
xchg
push
imul
mov
sbb
cmpl
std
pop
ja
dec
lret
sarb
loope
mov
ljmp
loope
hlt
or
inc
pop
icebp
sbb
sub
mov
ljmp
aad
pop
jmp
jnp
adc
cmpsl
ret
mov
leave
mov
inc
pop
jne
cmp
sbb
jb
adc
aad
iret
lods
adc
or
pop
pop
mov
addr16
push
jl
js
push
daa
and
xchg
mov
icebp
insb
dec
inc
push
data16
lea
push
xor
jbe
fwait
repz
jb
mov
or
adc
sbb
push
add
loope
aaa
and
sbb
add
fmull
jmp
sahf
and
das
mov
mov
xorb
shlb
cmp
xchg
lret
in
xchg
xor
stc
aam
dec
or
cs
sbb
push
push
or
bswap
xchg
rorb
inc
ret
scas
inc
mov
subl
cli
mov
fimull
xchg
adc
and
and
xchg
push
or
xor
mov
lods
push
int3
sbb
loope
xchg
jb
mov
mov
cmpsb
outsl
shrl
bswap
inc
or
stos
test
xor
mov
mov
or
pop
push
xor
das
add
int
inc
outsb
fdivrs
sub
dec
or
dec
push
sbb
xorb
jmp
jns
incb
dec
adc
push
cmp
push
dec
mov
fstl
push
inc
lcall
out
add
jae
fcompl
int
add
cmc
cmp
cld
popa
sbb
jo
push
lcall
decl
mov
fadds
fwait
int
cli
lahf
gs
adc
cmp
mov
rclb
pushf
sub
dec
lcall
test
mov
aad
sbb
jp
lret
pusha
dec
or
fidivrl
push
or
cs
lahf
je
inc
lcall
cmp
or
inc
add
cli
aaa
test
ljmp
dec
cmp
outsb
cs
adc
adc
loop
xorb
in
rclb
xchg
adc
cli
fwait
insb
repnz
cmpl
subb
inc
pop
mov
sbb
pop
xorb
lcall
pop
jbe
xchg
fs
pop
inc
scas
nop
mov
add
adc
and
xor
imul
cmpsb
cmp
mov
hlt
fwait
popa
pop
push
in
dec
pop
les
pop
add
sbb
lods
add
out
add
dec
pop
inc
fwait
mov
adc
lcall
das
mov
push
dec
adc
jecxz
pop
xor
or
adc
adc
inc
call
bswap
push
or
pusha
cs
mov
mov
mov
call
shl
cmp
push
push
mov
pop
mov
push
ljmp
hlt
ds
dec
adcb
sti
xchg
rdtsc
add
mov
adc
pop
sub
cmp
xchg
ret
lcall
sub
lret
xor
sub
mov
addr16
cmp
bswap
dec
mov
pop
test
pop
xchg
lock
sbb
and
outsb
jp
rcll
mov
and
lcall
jo
adc
cmp
jns
sti
lods
jle
cwtl
pushf
stc
inc
aas
inc
fsts
xorl
stos
stc
sub
push
or
pcmpgtd
fwait
dec
dec
rclb
dec
dec
rcr
dec
xor
fcmove
in
int
fimuls
add
mov
sarl
dec
in
inc
push
cmp
out
pop
mov
cmp
mov
sbb
mov
fwait
xorb
lea
shll
xchg
lods
xchg
iret
add
mov
sarl
iret
in
jp
mov
and
mov
or
stc
rorb
push
sub
rcrl
or
rorb
pushf
enter
fisttpl
je
pop
dec
mov
push
push
push
sbb
mov
push
es
jge
push
pop
out
cmp
sbb
popf
in
andb
cmp
xchg
jmp
pop
orb
mov
mov
shrb
push
dec
aam
jecxz
int3
ret
and
aam
or
add
insl
inc
or
mov
mov
fstpl
or
push
or
or
mov
xchg
sub
test
in
cmp
jmp
pop
push
out
lret
adc
add
pop
cmpsl
adcb
mov
stos
test
and
lea
iret
notl
les
lea
dec
test
mov
insl
and
sub
add
mov
sbb
pop
les
sbb
adc
nop
fbld
lea
or
aad
cmp
xor
adc
push
ljmp
xor
cmp
jge
dec
cmpsl
orl
and
into
jo
nop
push
or
xor
xor
stc
mov
cltd
aad
jb
pop
mov
sbb
pop
or
mov
adc
xchg
sub
lret
movsb
dec
push
lret
cmp
lret
std
nop
enterw
lret
mov
and
movlps
mov
jno
jb
mov
add
out
push
adc
xlat
sub
inc
add
mov
inc
jno
sbb
mov
inc
pop
cmc
mov
outsl
scas
cmpsl
insl
cmp
xchg
fcoml
and
push
pop
mov
mov
push
scas
mov
outsl
push
jb
mov
lea
adc
push
or
aas
lahf
push
clc
dec
jge
jp
inc
daa
dec
loop
xchg
clc
sbb
int
push
dec
and
lods
pop
int
aam
cmp
push
int
lcall
sarl
jecxz
push
jge
lahf
mov
push
inc
scas
inc
test
orb
iret
and
data16
test
flds
push
jmp
inc
dec
adc
dec
inc
ss
scas
lret
xor
or
out
dec
mov
cmp
pop
mov
xorl
loope
in
sahf
sbb
jmp
mov
pop
not
lcall
cmp
or
and
int3
imul
inc
mov
mov
inc
cmp
cs
mov
sbb
jmp
or
mov
dec
jmp
aad
iret
sub
dec
sub
add
rclb
and
xor
add
in
lcall
jno
loopne
mov
loop
jmp
imul
add
sbb
shrl
ror
add
xchg
ffree
pop
jb
jmp
mov
les
ret
cs
cmp
jecxz
stos
ret
jb
pop
lcall
adc
mov
dec
adc
sbb
dec
aad
dec
inc
daa
pop
pop
cmp
repnz
adc
ljmp
and
dec
mov
jp
dec
cmp
dec
std
and
mov
dec
add
dec
adc
cs
in
xchg
xchg
lods
dec
xchg
sbb
sub
out
and
dec
jg
insl
addr16
dec
in
xchg
inc
adc
sbb
sub
push
test
sub
js
mov
pop
cmp
push
ret
rorl
mov
or
rorb
lret
sub
inc
push
jb
fmull
lods
add
loopne
aaa
scas
movntps
and
sub
jbe
xlat
movsl
xor
aaa
mov
push
xor
cmp
push
adc
pusha
sbb
push
push
jbe
and
icebp
inc
in
mov
adc
add
shlb
push
fsubl
or
xlat
jp
add
ss
or
sbb
aam
push
fistpll
daa
iret
mov
stc
cli
add
cmp
cmp
or
and
adc
lcall
dec
aas
sub
ljmp
in
dec
test
mov
inc
shrb
leave
es
inc
imul
jbe
mov
pop
inc
into
sbb
adc
cmpb
fwait
leave
jbe
dec
nop
test
rorl
or
jbe
mov
xchg
imul
inc
jne
mov
pop
sbb
push
adc
cli
gs
rolb
jle
test
mov
inc
test
sbb
jle
and
or
lds
sbb
dec
adc
in
cli
sub
data16
sub
pop
mov
pop
xor
push
xorb
lods
test
sti
cmp
int3
push
cs
aad
dec
xchg
sub
adcb
imul
enter
subb
xor
sub
addl
sbb
mov
xor
inc
leave
call
js
mov
inc
leave
push
fdivs
outsb
push
dec
lods
mov
into
call
daa
int
lock
lods
pop
and
fmull
sbb
repnz
mov
or
icebp
inc
ss
jb
push
lahf
aad
pop
aaa
in
outsl
mov
dec
movsl
cwtl
push
fsub
cmp
adc
push
push
bound
push
dec
or
dec
mov
xchg
outsl
inc
fdivl
sahf
pushf
divb
shl
dec
enter
pop
cwtl
repz
ljmp
inc
repnz
jle
mov
enter
mov
xchg
fdivl
fcoms
or
es
pop
dec
push
cmp
sbb
rorb
int3
push
aas
mov
adc
xchg
adcb
rcll
mov
in
adc
subl
jg
adc
mov
push
pop
dec
int
lds
or
popa
loopne
fcmovbe
push
ja
call
das
push
inc
dec
ds
dec
in
adc
in
xor
dec
daa
push
xor
mov
or
shrb
mov
bswap
jl
dec
and
or
inc
aam
pop
fdivs
pop
lods
adcb
mov
add
movsl
rcll
push
ret
sbb
sub
imul
add
loopne
icebp
or
mov
fildll
aam
mov
add
lea
pop
pop
imul
xchg
dec
pusha
iret
lea
push
ljmp
sbb
fsubl
pop
mov
cmp
dec
cli
sbb
imul
xchg
xchg
or
lds
sub
mov
push
or
rolb
fdivrl
insl
addr16
inc
rdpmc
cmp
and
jae
inc
add
jmp
imul
add
cmp
lahf
loope
push
iret
jno
sbb
lods
or
int
cmpsl
sub
imul
lahf
jns
std
fisubrs
mov
inc
lds
add
lds
or
lock
sbb
cmpb
push
mov
inc
add
jb
test
mov
adc
and
icebp
add
sub
aas
loop
inc
mov
sub
cmp
push
outsb
xor
pushf
mov
pop
in
fisubrl
shl
mov
mov
lea
push
sahf
mov
mov
jb
sub
mov
pushf
pop
xchg
push
cmp
sbb
pop
pop
lea
mov
mov
adc
or
inc
push
or
pop
push
push
or
sbb
sbb
outsb
jo
stc
sbb
sbb
insb
pop
mov
jae
cmp
stos
xchg
ficompl
in
insb
out
mov
hlt
sbb
outsb
std
xchg
rcrl
or
out
dec
insb
xchg
mov
adc
sbb
outsb
lds
arpl
jecxz
or
js
jns
push
push
mov
add
loope
jle
pop
js
push
inc
divl
addl
dec
js
adc
inc
jnp
or
aam
subb
lea
cmpl
cmp
xlat
lcall
cmc
adc
leave
add
inc
dec
sub
dec
pop
sbb
andb
push
test
xchg
jnp
xchg
xchg
rcl
xchg
add
or
lds
mov
rcll
dec
push
xor
mov
leave
out
sbb
clc
ja
jo
push
adc
cwtl
mov
jle
push
dec
mov
iret
xor
sub
scas
mov
lds
stc
out
sbb
ja
call
mov
push
popf
pop
mov
adc
mov
lea
data16
dec
jmp
fists
rcrl
jb
jmp
cmp
inc
imul
in
xchg
adc
and
popf
push
les
fisttpll
dec
fcmovnbe
or
fists
xor
adc
adc
xchg
jmp
pop
leave
mov
push
sbb
inc
imul
pop
into
or
mov
push
popf
lods
gs
inc
and
dec
mov
je
sbb
insb
loope
loope
push
sbb
insl
repz
adc
outsb
jg
es
ret
lret
mov
inc
mov
imul
daa
dec
stos
into
fdivrs
addr16
sbb
cmp
outsl
roll
sbb
or
outsl
lahf
jmp
test
in
mov
psubw
pop
mov
mov
jp
int3
xor
pop
in
sbb
mov
push
lods
dec
pop
jl
sub
push
insb
js
jmp
cmpsl
hlt
push
arpl
and
pushf
pop
insb
sub
call
insl
fdivrl
loope
lods
push
das
push
mov
jecxz
dec
into
pop
dec
mov
sub
lret
imul
fimuls
xchg
test
or
and
mulb
sub
push
inc
jmp
fs
sbb
add
sbb
fisubl
pop
xchg
xchg
shl
or
jl,pn
dec
mov
pop
loopne
push
add
mov
scas
cli
mov
and
imul
rorl
int3
and
and
jle
inc
or
cmp
xlat
mov
cmp
cmpsl
sub
in
add
sub
mov
ja
lods
mov
leave
int
je
push
xor
mov
movsl
enter
sahf
rcrl
push
cs
lcall
ljmp
test
or
mov
mov
ljmp
push
jle
ds
or
push
cmc
cmp
xor
mov
jge
jecxz
mov
sbb
pop
adc
dec
adc
aam
lret
adc
adc
arpl
or
push
fiaddl
leave
mov
pop
icebp
in
mov
xor
cmc
mov
mov
sbb
in
pop
mov
je
fsubrl
fmuls
or
and
mov
mov
lret
sbb
cli
and
addr16
mov
push
push
pusha
cmp
adc
addr16
in
pop
push
das
adc
gs
in
mov
and
xor
ja
xchg
sub
fldenv
mov
mov
cli
mov
dec
fs
insl
push
test
add
sub
inc
jg
in
or
sub
xor
dec
lods
sbb
pop
dec
jo
mov
fdivrs
jge
aad
push
dec
dec
divps
dec
lret
sti
or
in
loope
push
push
mov
cmpsb
xchg
jl
pop
mov
popa
mov
xchg
in
inc
movsl
or
cmpsl
movsl
dec
test
dec
aam
inc
test
stos
ret
ds
pop
jecxz
js
ror
les
ja
jl
outsb
pop
sbb
cmp
mov
in
sti
sub
mov
ja
mov
les
lods
mov
pusha
xor
adc
xchg
and
push
push
cmp
int
pop
lret
cltd
in
mov
rcr
rol
pushf
fbld
mov
push
mov
cmp
test
dec
ret
xchg
push
xor
test
mov
mov
fimull
mov
and
insb
and
mov
inc
dec
adc
mov
cltd
or
fimull
push
stc
adc
sbb
addr16
mov
push
lods
fmull
jle
ljmp
lret
pop
fmulp
xchg
ds
pop
mov
dec
aam
les
add
in
xchg
dec
sbb
push
leave
ds
in
sub
sbb
rclb
mov
jecxz
nop
movsb
adc
mov
sbb
addr16
mov
jecxz
push
inc
push
inc
insb
xor
and
push
rcrl
or
jmp
std
test
bswap
das
mov
mov
mov
dec
add
and
popf
mov
js
jbe
xchg
adc
jno
sbbl
or
ljmp
push
scas
adc
test
push
popa
sahf
and
pop
lret
inc
ret
xor
mov
vmwrite
ds
mov
lods
mov
mov
inc
pushf
sub
in
mov
adc
mov
int3
pop
cmp
add
xchg
or
adc
in
adc
mov
and
and
jns
imul
cmpsb
or
in
mov
adc
mov
test
inc
outsb
push
cmpsl
mov
out
aas
inc
nop
jge
rol
mov
sbb
addr16
add
cmp
fstpl
push
add
loope
pop
andl
mov
daa
nop
or
das
lods
movsb
mov
orl
mov
scas
dec
pop
add
pop
jo
sbb
and
pop
scas
lds
pop
fisttpl
rcrb
push
adc
shl
popa
mov
add
nop
push
and
aam
push
push
mov
jmp
mov
pop
in
pop
adc
adc
xchg
insb
xlat
das
mov
fsubrp
xorb
or
pop
iret
mov
ficoml
clc
mov
mov
push
jae
stos
aad
push
push
fmull
inc
addr16
jb
xor
xchg
aam
xor
aad
daa
add
stc
stos
pop
lret
inc
dec
pop
xorl
or
sbb
aad
jg
jmp
cmovl
or
mov
fmull
ja
jmp
in
out
fimuls
inc
fimull
add
arpl
stc
roll
insb
call
xchg
aaa
pop
dec
sbb
mov
dec
cli
jg
push
mov
outsl
adc
xchg
fwait
scas
outsb
es
or
daa
pushf
and
or
addr16
and
call
scas
xchg
movsb
xor
push
lods
arpl
cmp
icebp
and
jle
fwait
sete
ss
popa
mov
es
mov
cmpsl
pop
ficoml
push
iret
sbb
adc
dec
aad
das
ja
xchg
cltd
jne
movlps
or
and
dec
sub
or
insb
lods
xcrypt-ecb
cmpsl
into
lods
push
adc
mov
push
dec
mov
pmaxsw
pop
mov
mov
int3
sub
adc
xchg
jl
mov
jl
xchg
pop
jecxz
jns
int3
rdmsr
pop
dec
pop
in
inc
or
pop
mov
push
cs
sahf
inc
nop
rcl
into
adc
jge
pop
test
out
fmull
mov
lea
fdivrs
test
addr16
pop
push
imul
adcl
add
loop
call
dec
jnp
mov
push
mov
fistl
mov
jl
mov
mov
adc
lods
mov
adc
push
lret
insb
mov
and
xchg
inc
adc
pop
fstl
lcall
mov
nop
pop
pop
or
push
add
lea
jno
jg
sub
stos
xlat
sub
test
std
jle
lcall
jbe
mov
or
dec
sbb
fdivrs
dec
loope
mov
or
int3
pop
decl
or
negl
sub
or
lock
mov
ret
push
jae
sub
inc
pop
outsb
push
push
fimull
fwait
jae
hlt
sub
icebp
sub
mov
lds
jns
out
and
hlt
sub
pop
ss
push
notl
adcl
lahf
icebp
cmpsl
cli
fs
pop
lret
mov
je
add
jle
xchg
cmp
or
pushf
xchg
mov
sub
ljmp
icebp
lcall
pop
jmp
sub
aas
int3
and
daa
adc
clc
mov
and
pusha
and
faddl
sbb
jne
adc
adc
popa
fsubl
jge
adc
and
or
pushf
out
shrl
add
or
adc
ficoml
cld
sarb
int3
jp
adc
lret
push
insl
sub
add
lret
inc
add
ds
xchg
sbb
jle
cld
ret
sbb
add
lahf
sti
incl
imul
int3
in
mov
lret
mov
cmp
lret
insl
xor
roll
es
out
jp
int
add
or
pushf
rcl
lret
push
roll
adcl
test
les
insb
rclb
or
lret
xor
stos
push
push
push
sub
and
dec
insl
sub
cmc
int
inc
test
inc
ljmp
orl
jl
arpl
pop
cmp
pop
jp
mov
push
push
mov
ficompl
adc
into
fwait
push
xor
int
dec
mov
sbb
pop
jp
outsl
fwait
dec
mov
lock
xor
xor
ds
mov
jae
jg
mov
roll
xor
fs
add
cli
lret
mov
insb
sbb
call
jp
cmp
or
and
sahf
cli
and
adc
jbe
leave
mov
fildll
mov
stos
mov
xor
mov
xchg
das
inc
cli
jmp
sahf
std
mov
movsb
push
lahf
push
in
xchg
xchg
dec
cs
push
or
sbb
outsb
adcb
mov
jp
data16
punpckhdq
cwtl
enter
test
push
xchg
jnp
adc
push
int
dec
adc
out
test
lea
jp
and
loopne
push
add
iret
adc
or
pop
add
push
xchg
test
std
mov
dec
adc
dec
push
mov
loope
cmp
ljmp
and
inc
push
rolb
jns
sbb
sbb
sbb
or
adc
clc
fsubrs
inc
sbb
mov
or
lret
dec
fdivrp
dec
scas
les
adc
das
jo
stc
mov
mov
pushf
mov
ret
insb
jp
fimull
pop
daa
xor
popa
push
aad
xor
adc
jbe
test
scas
or
pusha
into
mov
sbb
mov
fimuls
sbb
iret
jb
lret
stos
add
cld
cmpsl
xchg
and
jmp
adc
jb
sbbl
xchg
jg
arpl
cs
cmp
cmp
enter
inc
jl
ret
stos
mov
loop
jle
push
sar
flds
sbb
int3
ret
jge
push
push
fld
xchg
mov
and
loop
and
js
mov
shrl
or
mov
popf
test
or
dec
jg
pop
mov
pop
lea
jl
jo
sbbb
das
nop
inc
rorl
mov
adc
mov
test
inc
mov
sbb
mov
dec
inc
xchg
add
mov
xchg
inc
jbe
repnz
ds
push
push
sar
or
repnz
xlat
xor
push
dec
das
xchg
dec
movsl
sub
push
mov
jle
mov
sbb
rcrl
lea
enter
sbb
lods
sbb
inc
cmpsb
enter
adc
mov
stos
mov
std
std
scas
cmp
fwait
push
xor
lcall
inc
adc
xor
adc
iret
inc
xchg
add
mov
sbb
out
sub
jb
pop
out
int3
push
jae
repnz
pop
sbb
ja
and
jno
and
lds
inc
cltd
aas
int3
stos
and
mov
add
and
shll
push
or
sbb
aas
add
aas
ljmp
add
mov
pop
movsl
sbb
adc
mov
je
rcr
mov
add
pop
fimull
add
jge
sar
sub
and
and
sbb
add
sbb
mov
cwtl
enter
fwait
xchg
sbb
stos
es
mov
dec
insb
pop
adc
cld
sbb
sahf
push
mov
lock
outsl
pop
mov
pop
mov
adc
xor
jb
mov
jg
push
addl
sbb
xchg
add
and
into
imul
sbb
into
cs
rcll
insb
add
iret
mov
adc
dec
push
sub
mov
sub
ret
pop
cld
int
push
stos
pop
ds
adcb
jg
sbb
enter
and
add
jg
dec
or
cmp
pop
xchg
or
sub
sub
sbb
adc
xor
fsqrt
and
pop
xor
or
pop
dec
pop
adc
pop
or
lahf
xor
adc
cmp
mov
test
adc
xchg
push
pop
sub
nop
jb
mov
adc
jo
sbb
jle
push
add
jno
in
stos
repz
xchg
fimull
mov
pop
adc
das
pop
out
not
das
hlt
sbb
dec
push
iret
xor
negb
pop
testl
add
add
jl
jg
test
and
pusha
loopne
movsb
popf
mov
mov
mov
fsts
in
xlat
movsb
mov
in
cli
adc
push
mov
push
add
jb
sbb
aad
inc
sub
pop
vpmullw
adc
dec
addr16
xchg
test
mov
sub
adc
or
aad
loope
push
or
push
sub
pop
pop
jnp
ficoms
pop
and
and
ret
adc
mov
stos
mov
adc
xor
add
xor
jl
les
pop
pop
push
or
jb
or
popf
iret
addr16
and
shrl
push
jmp
stos
test
jne
lock
sti
sub
dec
popa
out
dec
and
xchg
adc
push
sub
cmp
mov
call
xchg
frstor
aam
mov
adc
xchg
adc
lcall
loop
push
int3
loop
lret
das
pop
imull
inc
xchg
and
fwait
and
xor
fwait
and
jg
nop
cmp
in
push
out
push
sub
fimuls
mov
int3
mov
mov
cmpsb
adc
mov
js
xor
inc
aam
std
decb
inc
mov
mov
hlt
push
imul
sbb
movl
cmp
test
decl
lcall
sbb
icebp
lea
sbb
jge
or
mov
xor
and
mov
add
xcrypt-ctr
cmpsl
cltd
sub
ljmp
xchg
sub
pop
in
pop
or
xchg
or
push
mov
adcb
mov
arpl
insl
jnp
aas
mov
ss
insl
repnz
imul
iret
ds
cmp
lods
iret
js
xor
and
or
push
aam
cmp
and
lret
push
data16
and
and
lahf
leave
add
adc
and
call
fnstsw
add
nop
in
inc
or
stc
and
lock
imul
dec
int3
jo
xor
jg
xor
or
adc
mov
dec
call
fisttpll
aaa
jge
out
add
mov
sub
mov
mov
cmpsb
mov
push
sbb
jge
adcl
mov
jecxz
xchg
out
leave
fidivl
jge
call
sbb
lcall
cmpsb
sahf
loope
dec
orl
xchg
jg
scas
test
ljmp
mov
out
jo
cld
pop
cmp
jnp
ljmp
cmpsb
ret
jo
push
cld
outsb
mov
insb
adc
insl
psrlq
je
jne
inc
jb
iret
outsl
cmp
dec
adc
test
aad
add
test
jmp
mov
dec
dec
in
mov
stc
xor
push
adc
push
pop
aam
push
or
adcl
stc
and
aad
inc
inc
mov
dec
push
fsubrs
test
test
or
cmpsl
pop
std
ret
add
dec
push
je
es
lret
pop
dec
into
inc
jl
dec
leave
inc
pop
sbb
outsb
sub
sub
dec
or
xor
leave
or
mov
fdivl
addl
test
sbb
clc
rclb
push
push
push
ss
cwtl
sahf
test
xor
adc
mov
push
les
enter
pop
test
daa
aaa
iret
nop
test
out
jno
mov
pop
mov
and
sub
dec
and
call
out
les
and
mov
lret
mov
cmp
out
mov
fstp
cmp
insl
cmp
push
outsb
or
loop
in
in
icebp
and
imull
test
sbb
mov
pop
pop
xchg
push
clc
dec
jecxz
sar
imul
or
adc
movsl
and
jnp
frstor
inc
xchg
sahf
mov
test
mov
inc
mov
imul
mov
xchg
jecxz
les
mov
sub
mov
mov
pop
cli
and
inc
jae
rcr
mov
loop
dec
cs
repz
jl
jecxz
xor
in
arpl
or
jb
mov
xchg
xor
push
pop
iret
jle
push
dec
ficomps
stos
imul
and
sbb
das
xor
jne
dec
cmp
outsb
outsl
fdiv
lret
call
dec
jnp
pop
jo
insb
sub
or
aam
jno
mov
js
and
popa
mov
cmp
fnstcw
sahf
xchg
or
lods
loop
push
sti
and
arpl
call
loope
dec
ds
aam
sub
sbb
adcl
loope
shl
ret
dec
or
fldcw
xor
and
shl
jo
inc
sub
js
inc
aam
sub
test
cmc
push
mov
and
pop
sbb
mov
outsl
cwtl
aad
loop
in
rcrb
cwtl
xchg
push
ret
cs
das
inc
jmp
subb
outsl
cwtl
sub
mov
pop
mov
inc
lcall
cltd
pop
adc
xchg
push
jno
and
out
cmpsb
dec
and
mov
dec
rcrb
cmp
daa
push
xlat
mov
add
rcrb
pop
jb
lcall
inc
fwait
dec
add
jecxz
cld
xor
xchg
lcall
lods
es
cmp
rorb
js
jns,pt
dec
fcomp
and
es
lcall
lods
cmp
loop
inc
mov
dec
xlat
sbb
mov
fists
jae
cmpsb
pop
sbb
adc
pop
push
test
cmc
sbb
cmp
mull
rcrb
xor
pushf
xchg
ss
and
xchg
push
sbb
cmp
add
cmp
fbld
cmp
pop
cmc
adc
mov
sbb
js
and
sbb
jae
ss
sbbb
sbb
inc
or
mov
out
mov
aam
xchg
push
and
pushf
ret
jmp
xlat
sarl
push
pop
dec
and
stc
fwait
cs
pop
repnz
enter
lret
test
cltd
and
into
fsubp
fstpl
or
xchg
add
lcall
adc
jno
xor
pop
xor
cmp
mov
jb
and
call
adc
xchg
ds
cmp
cmp
adc
jnp
fstp
push
or
mov
jp
or
jno
inc
mov
nop
mov
mov
pop
stos
pop
xchg
push
into
xchg
insb
or
add
mov
movsb
adc
leave
dec
sub
jl
push
jno
aas
push
cmp
mov
inc
mov
call
lds
sub
popa
aam
stos
add
mov
lret
jp
xchg
mov
jp
adc
adc
xchg
sbb
pop
ljmp
insb
ret
dec
jnp
insb
lcall
jl
mov
arpl
dec
adc
jbe
adc
inc
pop
or
dec
pop
dec
sub
mov
outsl
xchg
insb
mov
lret
dec
push
sbb
fcomps
mov
sahf
in
insl
pop
pop
pop
cmp
fimuls
filds
dec
add
and
pop
not
inc
cmpsl
sbb
insb
and
or
jl,pt
sbb
pusha
sbb
adc
fadds
add
sub
sub
adc
daa
cmc
fs
push
sbb
xchg
adc
lret
dec
cmc
enter
popf
jl
mov
in
mov
fwait
cmc
dec
xchg
out
popf
mov
sub
into
adc
jns
iret
mov
lahf
mov
test
ret
std
jmpw
mov
xchg
mov
or
and
inc
or
lcall
faddp
sub
out
loopne
or
iret
imul
adc
rcl
sbb
pop
sbb
popw
inc
or
xchg
ffree
add
ds
aas
mov
enter
sahf
rcl
out
pop
icebp
jg
out
mov
mov
jae
or
add
xchg
insl
lcall
inc
aaa
mov
scas
int
stos
leave
sarl
dec
pop
outsl
outsb
adc
mov
and
cmp
loopne
adc
jecxz
cmp
fisttps
mov
adc
adc
pinsrw
mov
pop
pop
imul
push
pop
orl
insb
into
popl
dec
mov
scas
inc
inc
iret
enter
xlat
or
jns
ds
add
pop
insb
sub
rcrb
sbb
or
push
or
pop
jg
int3
iret
mov
adc
rcl
add
lret
push
insl
outsb
push
xchg
fistps
add
mov
jb
push
cmp
push
insb
sbb
dec
push
push
nop
xchg
outsl
lcall
mov
jae
ror
std
lahf
inc
jp
mov
mov
mov
sub
pop
popf
lret
inc
or
sub
or
push
sbb
add
loop
adc
xlat
push
movsb
dec
mov
push
and
sbbb
mov
std
xor
insl
jle
adc
pop
lods
inc
xchg
enter
inc
pop
mov
sbb
ficomps
faddl
mov
scas
out
sbb
mov
push
ss
shlb
jp
test
mov
jbe
cmpsb
push
adc
push
cmp
dec
adc
sbb
pop
rclb
popa
sarl
pop
pop
xor
xchg
push
stos
cmp
int3
and
lret
or
push
daa
pop
iret
imul
mov
jb
jle
fadd
adc
test
sbb
ljmp
mov
les
pop
sub
pop
or
je
mov
enter
sub
leave
add
iret
dec
push
mov
out
or
sub
and
bnd
test
or
repz
repnz
or
xchg
sub
sub
jnp
push
mov
sbb
nop
and
cwtl
cs
in
xlat
shll
mov
outsb
push
cmp
fisubrs
sahf
or
stc
and
pop
cmp
adc
adc
fwait
sub
push
sub
push
mov
jne
imul
and
lods
adc
push
add
pop
lret
lcall
inc
or
or
or
pop
lcall
jl
mov
sbbl
call
lea
cmp
ljmp
mov
je
pop
adc
je
sarb
icebp
sbb
push
pushf
outsl
mov
lret
fildll
adc
jmp
adc
mov
jo
adc
movsl
push
cwtl
fdiv
mov
jecxz
fists
mov
cwtl
dec
or
adc
xchg
sbb
push
insb
cltd
hlt
push
cs
das
int
std
sbb
sbb
fistpll
mov
int
add
push
push
jbe,pn
je
shrb
pop
cmp
jg
stc
out
lds
adc
adc
adc
imul
loop
and
enter
cmp
insb
sbb
mov
test
add
enter
ret
adc
inc
or
add
rorb
add
sbb
insb
sub
xor
pop
cmp
cmp
sbb
cmp
xor
jb
sbb
rcrb
dec
adc
lea
xchg
roll
insl
movsl
test
cmp
mov
and
insb
or
das
push
rorl
lods
or
jecxz
out
insb
push
ret
push
mov
mov
pop
fucomi
fs
or
in
mov
ds
test
adc
sub
or
mov
jle
into
pop
das
lcall
mov
push
popf
sbb
ds
mov
scas
add
rcrl
and
or
dec
fwait
push
daa
xor
sbb
push
inc
jb
outsl
ficoms
popf
inc
pop
loope
xor
sbb
push
lcall
aad
lcall
xchg
fnsave
xchg
lea
sub
dec
xor
leave
bound
int3
int3
jb
sbb
dec
movsb
es
pop
inc
js
mov
cmpsb
fisttpl
imul
dec
aam
lret
dec
outsl
insl
sbb
push
gs
es
fdivrs
insb
push
xor
xchg
xchg
fildll
dec
ficoml
punpckhdq
xchg
and
xchg
pop
push
jns
xchg
jle
cmp
jg
cmp
icebp
cmpsw
ja
les
outsb
push
xchg
and
in
movb
dec
aam
sbb
jg
push
lcall
and
mov
rorb
xchg
bound
test
mov
pushf
pop
idiv
mov
lahf
mov
lret
neg
sbb
and
imul
or
int3
pop
sub
mov
adc
addr16
in
testb
fadd
adc
jp
adc
mov
push
jp
adc
sub
adc
pop
imul
mov
inc
xchg
add
mov
sahf
sbb
fisubrs
cmpsl
hlt
xchg
or
jl
es
push
in
xchg
daa
sbb
lret
sahf
xchg
jge
ret
jnp
mov
adc
and
out
xchg
sahf
mov
pop
les
pop
in
fidivrl
cs
pop
cld
and
int
sub
popf
jecxz
aam
cwtl
xlat
xor
cmp
add
cmp
jb
or
arpl
insb
loope
les
or
xor
add
pop
dec
mov
imul
lds
and
mov
data16
outsb
mov
pop
push
fdivrl
cmc
mov
mov
or
jp
iret
les
mov
cmp
pop
lahf
dec
lret
xor
daa
xchg
pop
mov
insb
iret
fdivrs
jbe
or
pop
movsb
sub
push
sbb
daa
pop
or
stos
cmc
test
or
sahf
scas
dec
sub
data16
jl
pusha
pop
fs
bound
inc
xlat
xchg
push
xor
daa
push
mov
adc
lds
int3
jb
push
outsb
sbb
and
stos
sbb
pusha
xchg
pop
rclb
ja
adc
mov
mov
mov
shlb
ret
lcall
aas
push
inc
neg
xchg
mov
push
xchg
cld
and
movsl
adc
mov
fistpll
add
xor
dec
repnz
loopne
mov
sub
add
jnp
js
js
cs
mov
or
je
adc
cli
xor
or
dec
or
addr16
sbb
jne
mov
xchg
fcmovb
in
xchg
cs
icebp
or
pop
cli
push
shll
sarb
cmp
mov
lods
shll
add
lcall
test
cmp
outsb
mov
sbb
scas
or
test
xorb
ljmp
test
test
xor
mov
pop
cmp
subb
ret
std
adc
imul
push
inc
inc
ffreep
xor
dec
rolb
ds
adc
inc
mov
lcall
xchg
sahf
adc
rcrb
lea
int
fcompl
pop
add
loop
std
pusha
lahf
xor
fldl
pop
pop
lcall
pop
add
inc
popf
inc
lahf
push
mov
sub
dec
scas
mov
arpl
arpl
mov
daa
mov
pop
sbb
ss
cwtl
mov
jp
jecxz
ret
lods
lods
pop
cs
out
dec
lcall
jno
mov
dec
imul
xchg
fsubrs
imul
xchg
shrl
outsl
es
pop
dec
dec
sub
mov
mov
cmovge
das
xchg
hlt
mov
sub
pop
ds
into
lods
jbe
stos
je
addb
sbb
mov
adc
adc
mov
sub
dec
dec
sarb
xchg
inc
ljmp
push
dec
test
lods
nop
mov
mov
and
into
pop
or
dec
mov
mov
test
sbb
inc
faddl
xchg
leave
sub
mov
xlat
dec
ljmp
adc
or
mov
add
xlat
popf
outsl
cmpsb
cwtl
fimuls
mov
dec
xchg
sbb
dec
jno
pextrw
push
dec
add
jns
pop
mov
dec
push
adc
push
fs
push
imul
mov
mov
xchg
imul
sub
daa
fsubr
add
sbb
push
dec
mov
pushf
cmc
pop
mov
shll
push
or
inc
mov
sahf
xchg
jge
jge
aaa
popa
sbb
mov
sub
outsl
jle
jns
pop
pop
xor
dec
add
xchg
push
dec
lret
add
leave
dec
add
data16
push
sub
mov
adcb
pop
sbb
insb
lods
lea
cmpsb
pop
mov
aas
int3
mov
dec
xchg
sub
mov
cwtl
adc
ljmp
push
scas
xor
lcall
or
mov
push
das
bndldx
rcl
out
inc
pop
xchg
ja
mov
cs
lret
fildll
xchg
sub
fldt
xor
fiaddl
push
add
add
cmp
cwtl
jo
out
and
stc
jle
hlt
test
xor
adc
enter
mov
sbb
test
xchg
repz
fwait
dec
mov
sbb
and
sbb
lcall
jb
mov
xchg
gs
cwtl
mov
push
and
push
or
and
cli
repz
add
les
mov
add
cwtl
push
xchg
cwtl
cmp
cmp
test
loopne
mov
sti
cwtl
aas
imul
xor
mov
xor
cmp
pusha
pusha
or
roll
faddl
jge
bound
adc
mov
mov
sub
pop
xor
and
push
or
cmp
mov
or
push
mov
lahf
in
loope
mov
cmp
xor
aam
push
stos
mov
out
cld
ds
and
out
das
push
dec
push
aas
dec
pop
push
mov
lods
in
data16
mov
jb
movsb
mov
jg
jge
push
jle
sbb
push
or
rcrb
aam
ljmp
es
imul
pushf
push
mov
inc
rcrb
mov
shrl
inc
mov
daa
xchg
push
pop
push
mov
cwtl
jb
push
sub
out
cmpsb
pop
sbb
mov
pop
movsb
xor
out
sbb
mov
sub
ds
xchg
and
shll
popa
pop
add
sub
mov
mov
sub
faddl
mov
push
mov
xor
out
mov
xor
lods
sbb
jmp
rcrl
sub
in
push
andl
push
sarb
push
mov
arpl
or
inc
fwait
dec
add
and
and
push
fwait
cmpsl
xor
lcall
shlb
sbb
push
test
loop
inc
out
inc
lods
es
loop
sub
cltd
pushf
xchg
adcl
or
arpl
arpl
lahf
lcall
mov
sbb
arpl
inc
lods
sbb
daa
and
sbb
and
and
es
adc
hlt
sub
jmp
or
pusha
dec
rorb
add
fbld
fwait
sub
push
pushf
jmp
xchg
mov
fmuls
and
frstor
aaa
divl
inc
jmp
mov
imul
or
mov
adc
mov
jns
pop
loopne
lcall
inc
inc
ja
sub
pop
pop
push
loopne
loope
pop
push
out
and
sbbl
cmp
mov
in
clc
aad
jo
push
sbb
es
mov
mov
pop
imul
cmovl
mov
push
inc
clc
mov
jecxz
in
mov
adc
stc
push
sub
loope
push
fsub
test
addl
lods
out
xchg
mov
pop
sub
mov
jecxz
sbb
pop
dec
push
push
mov
test
mov
and
xchg
icebp
jns
adc
and
ljmp
xchg
mov
and
xchg
movsb
insl
dec
or
hlt
jecxz
adc
test
mov
jecxz
aam
idivl
jl
and
test
addr16
fisubl
xchg
fisttps
nop
jecxz
pushaw
in
ret
out
sbb
shlb
jl
and
sub
and
xor
imul
adc
sub
xchg
push
call
pop
push
push
popa
pusha
mov
cmp
xchg
xchg
movsb
and
sub
and
pop
subb
add
popf
cmp
scas
jle
cmp
mov
xchg
xchg
push
jmp
adc
out
dec
jecxz
popa
pusha
jbe
in
or
int
cmc
or
add
push
in
adc
adc
rcll
lret
scas
aaa
xchg
sahf
scas
pop
arpl
or
fsubl
push
jns
fcoms
mov
sahf
mov
lcall
test
fcmovnb
dec
xchg
mov
sbb
imul
mov
aas
int
cli
mov
xchg
int
data16
push
or
in
jb
and
jb
adc
ds
dec
cmp
lods
and
mov
ljmp
sbb
insb
push
test
insb
ret
iret
out
mov
stc
xchg
test
mov
pop
cmp
sbb
shlb
in
shrd
mov
push
ljmp
sbb
rolb
lods
aaa
pop
sub
push
pop
lea
jmp
mov
mov
sbb
test
stos
ficompl
inc
sbb
add
or
icebp
pop
push
lods
push
cvtpi2ps
and
cmp
jl
add
sub
mov
sbbl
mov
sbb
or
adc
dec
sub
pop
sbb
push
xor
pop
and
push
fs
dec
mov
addr16
fsub
and
icebp
adc
adc
cmp
mov
jb
dec
int
pushf
cmp
rclb
and
inc
sbb
daa
imul
fs
or
mov
in
lods
sub
and
lcall
xchg
iret
mov
jo
jp
dec
pop
cmp
cwtl
mov
aam
dec
pop
inc
je
push
pop
in
ja
sub
pop
sub
add
lcall
icebp
push
inc
adc
or
insb
ja
sub
or
ret
or
insl
es
inc
std
into
ljmp
or
lahf
or
ret
std
repz
lret
push
sti
xchg
push
mov
dec
lret
call
adc
pushf
std
hlt
cmp
cmp
or
mov
xchg
out
loopne
outsb
push
sbb
cs
stc
aad
lds
cmpsb
xor
push
xchg
pop
cwtl
push
mov
paddsw
inc
jle
or
aaa
add
in
xchg
loopne
adc
std
add
push
add
mov
stos
insl
jnp
cs
rorb
popa
push
or
ss
push
out
push
push
push
in
ss
jo
ss
mov
dec
dec
mov
and
inc
push
sub
xor
adc
xor
gs
imul
jns
sub
sbb
sar
add
push
subl
in
mov
rcll
sub
jnp
dec
in
push
lods
adc
repz
mov
mov
mov
and
mov
xchg
jg
adc
daa
mov
je
inc
inc
jl
pushf
push
ret
movsl
mov
adc
insb
nop
push
fwait
stc
sbb
add
fiaddl
adc
ret
mov
cvtps2pd
mov
push
pop
inc
pushf
in
mov
ret
pushf
inc
dec
pop
cmp
imul
shlb
sbb
mov
push
dec
pop
insb
leave
iret
sbb
stc
jmp
std
push
mov
or
xchg
xor
sub
push
test
push
cmp
loopne
int3
loopne
movsb
xor
jg
daa
outsl
and
mov
pop
sub
je
pusha
andl
mov
jecxz
sub
sbb
and
and
ja
dec
stos
adc
lods
in
sbb
aam
push
adcb
cmp
adc
mov
add
cmc
mov
and
ret
xchg
sub
mov
in
adc
sbb
insl
mov
jns
jp
or
decl
ja
jecxz
jge
sbbb
fcmovb
loopne
cmp
test
push
mov
daa
divl
xchg
xchg
ja
xor
fsubl
fnstsw
out
jb
push
xor
mov
ds
push
ds
clc
lret
jl
stc
sub
mov
cmp
pop
popa
pop
sub
push
or
loope
mov
xchg
push
and
pop
aam
xlat
or
push
test
push
fstps
test
inc
movsb
dec
aam
mov
iret
ds
inc
scas
pop
stos
jp
mov
mov
jmp
addr16
push
pop
movsb
push
leave
mov
adc
inc
adc
xor
or
xor
rorb
add
and
pop
stos
ror
out
push
xchg
fnstcw
sub
and
cwtl
pop
rclb
arpl
call
xor
outsb
inc
aaa
arpl
pop
out
pop
xchg
push
in
push
sbb
insl
adc
add
mov
aad
popa
outsb
test
mov
jg
and
mov
ficomps
jle
imul
int
mov
arpl
cmpxchg
mov
push
adc
mov
idivl
adc
pop
mov
pop
mov
aam
aad
test
xchg
mov
inc
scas
mov
sub
popa
movsl
inc
xchg
mov
xchg
xchg
cli
adc
sbb
out
add
int3
insb
fwait
stc
pop
or
ds
stos
daa
jnp
lods
mov
sbb
lahf
inc
mov
cs
mov
lret
mov
mov
sbb
cltd
insb
pop
nop
sub
nop
bound
or
fisubrs
xor
mov
popf
addr16
das
push
fisubrl
dec
jle
imul
les
insl
pop
leave
adc
lods
imul
lds
das
test
insl
outsb
xor
pop
test
jecxz
pop
adc
cmp
popa
jg
inc
push
imul
sarl
xchg
push
mov
mov
jle
mov
sahf
push
test
jns
ret
cmpsb
or
push
mov
xor
and
scas
or
sbb
addr16
xlat
daa
xor
or
insb
cmpsl
cmp
fstl
dec
cmpsb
xor
adc
push
sbb
insb
push
in
addr16
cltd
pop
push
scas
inc
push
sbb
pop
stc
xor
push
loop
loopne
pop
call
jecxz
mov
pop
hlt
xchg
rcll
and
test
cmp
jle
repnz
aaa
xchg
pushf
lods
pushf
aaa
bound
fdivrs
cmp
imul
xchg
sub
push
pop
or
lahf
pop
mov
fsubr
mov
clc
push
jnp
mov
out
jge
xchg
cmp
sbb
int3
jl
in
aaa
nop
cli
sbb
scas
or
stc
xor
jno
push
or
bound
test
push
dec
or
sbb
dec
sbb
sub
xor
leave
mov
dec
xchg
jb
pop
xor
out
outsb
pop
jge
fistl
mov
outsl
mov
push
push
mov
push
and
xor
hlt
pop
push
xor
xor
adc
outsl
push
pop
xor
sub
mov
sub
xchg
mov
push
sbb
dec
sub
and
xor
jecxz
enter
adc
xor
xchg
outsb
sub
mov
mov
xor
jl
sub
xchg
cmp
pop
xor
aaa
push
enter
cmp
and
fisttps
adc
xor
inc
or
jmp
or
sbb
cmp
dec
adc
outsb
shll
insl
mov
fisubrs
mov
enter
stc
cmp
scas
pop
mov
and
ss
inc
mov
pushf
sbb
shlb
in
dec
andl
in
xchg
sub
jle
aam
adc
pop
pusha
pushf
add
jle
cmp
sub
mov
stos
lcall
dec
inc
jo
mov
push
pop
sbb
dec
add
adc
fwait
sub
xlat
stos
ds
rcr
pop
push
sbb
insb
push
in
sub
and
and
and
repnz
imulb
sub
rorl
enter
hlt
adc
pushf
int3
lret
sbb
xchg
push
cmp
in
push
mov
push
lret
ljmp
data16
sub
cmp
and
adc
and
inc
sub
pop
or
and
cmp
ret
push
mov
adc
mov
data16
mov
mov
mov
lods
addr16
sub
mov
xchg
mov
and
dec
push
lret
jle
fnstenv
int3
sub
dec
push
lcall
stc
pop
dec
cmp
adc
adc
sbb
mov
pusha
or
pop
or
or
dec
adc
inc
cs
inc
dec
adc
notb
dec
lret
mov
lods
pop
loopne
ss
test
stc
inc
adc
sub
or
arpl
mov
xor
pop
jmp
add
inc
pop
jl
adc
jns
scas
imul
sti
fcompl
negb
cli
inc
push
xchg
sahf
inc
push
sbb
cmp
sbb
mov
xchg
push
stos
imul
push
jb
adc
sbb
add
cmp
outsb
adc
adc
sub
int3
icebp
outsb
xor
jb
or
jmp
jbe
mov
cwtl
sub
sub
xchg
and
adc
adc
adc
and
or
popf
cmp
and
pop
or
subps
aaa
mov
xchg
rcll
push
sub
aam
push
fmull
loope
pushf
or
imul
daa
or
jmp
daa
adc
xlat
sbb
mov
mov
pop
or
add
dec
insl
sbb
xchg
and
jno
pop
outsl
outsb
sub
aad
sbb
sub
popa
dec
xchg
push
xor
enter
sahf
or
inc
pushf
push
push
push
sbb
loopne
andb
pop
or
pop
aaa
lret
insl
jbe
push
jno
push
insb
add
clc
cld
push
xchg
iret
sbb
push
mov
pop
test
and
push
mov
xchg
adc
loop
sbb
push
fisttps
jecxz
pop
test
prefetch
popa
pushf
mov
leave
adc
jnp
lcall
loope
xchg
flds
leave
adc
adc
sub
mov
pop
sbb
loope
inc
imul
int
xchg
sub
push
aam
cs
insl
sub
mov
imul
cmp
xchg
sbb
dec
cwtl
push
insl
pop
mov
or
enter
lret
adc
lea
dec
jle
or
push
sub
outsl
fmull
mov
mov
push
inc
sbb
call
inc
pusha
lret
push
in
adc
xchg
xchg
dec
cltd
mov
sbb
push
fcmovnb
jp
or
mov
ficoml
push
push
jmp
fisubrl
jo
sbb
sbb
imul
cs
mov
pushf
xor
pusha
and
push
das
pusha
pop
loope
or
into
test
sub
lods
lret
mov
push
pop
sahf
xlat
xchg
sbb
adc
inc
jg
push
inc
inc
sbb
outsb
xor
cwtl
xor
push
sti
mov
xchg
out
push
cs
add
sub
std
jle
mov
popa
jnp,pt
addr16
push
stos
pushf
addr16
add
aad
add
inc
pop
pop
or
jl
inc
popa
cli
daa
loopne
aam
cmc
mov
add
repnz
mov
inc
xchg
insb
pop
add
or
shrl
cmpsb
mov
push
fadd
adc
sub
mov
push
dec
adc
adc
sub
pop
stos
outsb
sbb
fistps
cpuid
mov
or
in
lahf
ret
sub
imul
scas
fstl
je
je
aad
xchg
pop
mov
movsb
out
fsub
loop
xchg
pushf
or
xchg
mov
xchg
xor
lods
cmp
sub
fcoml
ficoml
xchg
inc
xchg
lock
cmp
out
push
jmp
inc
adc
or
push
mov
insl
mov
adc
pop
adcb
int
inc
and
daa
adc
sbb
adc
xor
cmc
loope
xlat
and
and
jo
inc
fidivrl
lcall
nopl
adc
mov
rcrb
pop
movsb
mov
cmp
lock
cli
rcll
cmp
je
pop
and
sub
or
movsl
and
ffreep
into
jecxz
jns
inc
sbb
pop
inc
imulb
rcrl
xor
mov
out
add
mull
jo
pushf
mov
sahf
pop
repz
adc
adc
addr16
in
cld
push
insb
jecxz
xor
xchg
or
sub
in
push
jp
jmp
fistpl
cmp
pop
gs
addr16
push
insl
fisubrl
sbb
sbb
insb
mov
dec
and
inc
mov
int
into
movsb
adc
flds
jb
data16
xchg
rclb
adc
scas
cmp
test
pusha
push
icebp
cmp
jl
push
call
popa
int3
sahf
jmp
push
mov
cmp
aam
iret
inc
dec
inc
int3
notb
push
mov
lahf
jecxz
xchg
inc
pushf
pop
jns
xchg
or
sub
dec
div
into
dec
pushf
dec
mov
inc
pop
cmpsb
jecxz
fucom
pop
test
orb
adc
push
mov
push
loopne
ret
clc
stos
and
sub
sbb
js
lods
mov
insb
jp
cmpsl
push
mov
push
out
mov
pop
and
roll
jl
or
pop
adc
push
repnz
add
orl
outsl
stos
lea
shll
fimuls
pop
xor
ret
dec
sub
cli
repz
cmpsb
inc
ss
pop
adc
mov
push
sbb
imul
xor
stos
int
inc
sahf
pusha
xchg
or
sub
daa
cmp
dec
adc
mov
ret
and
sub
mov
mov
int
lret
or
cmpsl
jb
fwait
sti
or
call
in
into
je
test
insl
or
or
inc
lret
sub
push
xor
push
das
int
push
sub
cmp
xchg
push
jl
adc
insl
adc
inc
xchg
add
adc
and
adc
xor
pop
rorl
sub
movsb
xchg
pop
mov
push
or
mov
lret
push
ror
sub
adc
mov
imul
aas
punpckhdq
mov
inc
dec
sbb
aad
sub
test
jge
mov
push
mov
sub
pop
fildll
addr16
cmp
push
pop
adc
shrl
mov
sar
bnd
adc
movsl
sahf
repz
fwait
push
sbb
pop
adc
ds
xchg
push
push
pop
ds
mov
fimuls
dec
in
popf
adc
repz
pop
or
inc
sbb
jecxz
insl
sub
hlt
add
fbstp
add
insl
popa
fsubs
in
sahf
lods
lret
adc
scas
or
xchg
mov
jg
movsb
and
mov
xchg
comiss
int
pusha
pop
xchg
mov
pop
daa
cld
enter
sbb
jp
xor
mov
xor
pop
rcrl
cmp
or
sub
fiaddl
je
mov
fists
add
imul
mov
scas
mov
inc
sub
jnp
mov
add
sbb
incb
pop
dec
popf
pop
int
ficoms
and
paddq
and
xchg
sub
pcmpgtb
imul
scas
jo
push
mov
cmp
mov
push
or
in
sub
outsb
mov
dec
daa
mov
pop
mov
ret
inc
jbe
cmpb
fwait
jmp
imul
and
sub
jae
ss
inc
out
test
cs
repnz
jmp
xor
pop
sbb
dec
adc
addr16
jl
adc
out
aaa
and
mov
adcb
push
and
sub
mov
dec
movhlps
insl
movsb
aaa
adcl
leave
cmc
cmp
mov
in
mov
lods
push
dec
in
sbb
sbb
pusha
inc
scas
scas
lcall
negb
xor
inc
dec
aas
fldt
push
lods
test
inc
iret
test
jb
xchg
jnp
test
push
lret
and
fsubs
test
les
inc
sub
nop
adc
out
mov
push
les
fiadds
andb
add
pop
popf
jo
in
inc
jo
shll
insb
cmp
push
jp
mov
push
adc
daa
or
dec
push
push
and
push
imul
push
sbb
xor
dec
push
pop
xchg
pop
shr
frstor
ljmp
and
mov
and
dec
rclb
adc
aaa
pushf
sbb
push
in
sbb
sub
insb
cmp
mov
dec
in
push
das
imul
fdivs
inc
and
mov
mov
sub
in
jne
pop
adc
mov
add
inc
xchg
mov
mov
and
adc
push
jbe
pminub
adc
mov
call
outsb
das
imul
sub
insl
adc
jmp
stc
decb
xor
add
push
int3
pop
nop
movsl
fisubrl
push
dec
sub
int3
mov
xchg
push
jb
adcl
or
dec
addr16
hlt
int3
jmp
or
shrl
sti
jge
cli
bound
imul
je
jne
add
or
or
or
lahf
and
mov
arpl
mov
mov
xchg
fs
adc
xchg
and
push
insb
pop
and
cmp
add
shlb
or
and
ja
push
lea
out
and
jle
sbb
xor
mov
cli
jl
bound
mov
daa
xchg
mov
mov
jmp
xchg
push
mov
push
jecxz
pop
or
push
xchg
jle
xchg
sbb
and
adc
mov
dec
sbb
sub
xor
dec
daa
and
fcmove
dec
adc
or
inc
aam
cwtl
je
push
xchg
fwait
clc
movsbl
lods
adc
dec
shl
add
inc
ds
lcall
stos
in
jmp
sub
test
jmp
addr16
adc
cmp
sub
mov
mov
lods
sub
cmp
mov
add
dec
mov
or
mov
leave
int
xchg
pop
add
xlat
jno
pop
cmp
bswap
daa
xlat
fildll
and
mov
add
cmp
ljmp
add
mov
int
add
int3
push
push
push
mov
jge
pop
mov
ret
inc
jge
in
test
rclb
mov
in
pop
pop
mov
sbb
pop
pusha
imul
xchg
or
sub
in
push
push
inc
das
ficoms
in
pop
jnp
jb
scas
enter
imul
cmp
es
loopne
inc
add
pop
ljmp
inc
adc
adc
inc
or
incb
iret
addr16
fistpl
test
int
insl
sbb
ja
lahf
cltd
lds
add
sub
icebp
scas
add
jp
dec
push
inc
jl
stc
xchg
je
push
push
fisttpl
inc
jbe
push
mov
cmp
xor
loope
int3
push
adcl
leave
out
mov
fcoml
adc
sub
push
jecxz
insl
sbb
fwait
dec
cwtl
dec
cmp
orl
scas
push
sbb
in
push
lock
push
repnz
dec
xchg
ficoml
ret
push
xchg
push
cmp
bound
lods
pop
into
fistps
xchg
mov
mov
out
xor
mov
dec
lret
insb
push
jno
lcall
xchg
xchg
push
mov
fadd
bound
push
xchg
push
pushf
test
xchg
xchg
jl
pop
xchg
mov
pop
andl
mov
xchg
cli
lcall
aad
dec
scas
mov
push
insl
adc
jmp
stos
jb
pop
fisubl
sahf
addr16
icebp
and
dec
mov
cld
loopne
mov
xchg
int
adc
outsl
cmp
or
int
dec
xlat
adc
lret
dec
hlt
adc
mov
aam
lods
in
inc
fsubrl
in
outsl
sbb
mov
les
int3
in
fcoms
fsubrs
push
je
sbb
stos
mov
xor
sahf
aad
push
xchg
mov
cwtl
push
sub
test
push
mov
xchg
pop
push
daa
or
jl
shll
or
mov
ret
dec
adc
lret
mov
add
add
add
pop
lods
dec
jae
pop
push
pop
ret
aam
sbb
push
jnp
leave
loope
jg
adc
add
pop
in
int
xchg
mov
lret
inc
andl
adc
jl
or
mull
sbb
es
push
push
fbld
notl
cmp
outsl
cmp
imul
enter
dec
sbb
or
lcall
addl
cmp
inc
xchg
popa
sbb
add
clc
jg
sbb
ja
sbb
pop
fsubrs
out
cmpsl
xchg
fwait
div
shrb
mov
cmp
mov
adc
insl
sbb
addl
test
or
pop
cmc
pop
push
inc
stos
cltd
insb
aad
inc
add
sbb
subb
xchg
adc
mov
dec
xchg
stos
fwait
sbbl
adc
popf
call
xchg
add
test
dec
out
dec
pop
jp
dec
imul
addb
jl
xchg
aam
lods
mov
xchg
sarb
sub
adc
push
jno
push
push
out
jbe
adc
pop
push
push
pushf
negb
in
in
mov
cmpsl
or
loope
add
or
into
xor
adcl
or
cs
pop
addr16
pop
jnp
and
inc
lcall
insb
mov
adc
int3
push
push
psubb
insl
lods
mov
push
sub
lds
repz
insl
xchg
cmp
adc
inc
insb
fildll
pop
and
and
push
fists
cmp
or
stc
push
mov
xchg
add
add
je
mov
nop
aas
sbb
cmpl
mov
fstpt
adc
fwait
insl
sbb
fistpll
pop
adc
adc
lea
pop
or
sbb
jo
cmp
sbb
sub
fmuls
or
or
sahf
shlb
push
js
sub
pop
sbb
xchg
jle
std
cmpb
shll
sbb
sub
push
insl
lcall
out
lcall
xchg
insl
mov
jbe
inc
sub
jge
dec
pop
mov
push
ljmp
adc
insl
or
inc
xor
mov
push
push
mov
adc
mov
popf
xor
dec
daa
and
js
or
sub
in
pop
cs
dec
mov
fnsave
and
out
in
sbb
sbb
adc
scas
das
fdivrl
and
add
jae
mov
lcall
fcom
in
sub
xchg
dec
adc
lret
fadds
fsubl
lret
xchg
or
jo
xchg
rorl
lds
mov
push
cmp
sub
pop
rcrb
fistpll
xor
scas
push
cmpsb
popf
jo
lret
dec
inc
xor
insl
repz
pop
or
shll
add
push
and
inc
sub
cs
inc
das
insb
and
and
inc
pushf
das
orb
ja
int3
and
in
xchg
mov
data16
cmp
sbb
mov
mov
mov
cmp
mov
xchg
into
test
andl
stos
mov
rcrb
cmp
imul
or
add
int3
inc
aad
mov
inc
sbb
xlat
lock
les
xor
lea
insl
por
cs
inc
push
nop
cs
popa
test
adc
es
shrb
daa
wrmsr
mov
outsl
aas
cmpsl
dec
sbb
push
adc
rcr
jle
mov
insl
int
or
cmp
adc
pushf
pushf
sbb
pop
sbb
scas
outsl
cmp
hlt
xlat
daa
fimuls
push
outsb
pop
pop
pushl
insb
mov
and
jnp
sbb
cmpl
inc
repz
inc
adc
pshufw
inc
jb
insl
les
pop
or
inc
push
inc
sbb
pop
push
jle
int3
outsb
inc
loope
sbb
les
stos
imul
pusha
mov
bound
addr16
std
sbb
testb
mov
fists
add
xor
insb
stc
xor
fadds
or
aaa
mov
sbb
incl
cmp
dec
sub
loope
add
jg
sbb
xchg
pop
outsb
add
shrl
sbb
lret
xor
inc
daa
loopne
or
in
lret
cmc
imull
aam
mov
sbb
loope
pmulhw
das
jmp
lcall
adc
xchg
lods
sti
dec
jb
jae
dec
sbb
jne
out
hlt
dec
sarb
pushf
adc
sub
jmp
sub
fs
push
sbb
sbb
xor
push
pop
and
mov
and
aam
adc
aad
out
sbb
pop
push
insb
sbb
pop
xchg
sbb
addr16
add
in
push
xchg
mov
scas
jmp
adc
push
mov
pop
sbb
mov
lods
cltd
sub
sbb
xor
ja
pop
sahf
pop
and
pop
jp
pop
insb
sub
and
fnstenv
in
out
arpl
fcoml
sbb
std
pop
mov
insl
pop
mov
xor
les
push
xlat
stos
xchg
adc
fldcw
sbb
test
mov
and
push
fsubrs
jg
sub
int
adc
and
dec
sbb
mov
sbb
test
xchg
inc
xorb
cmp
dec
les
int3
adc
mov
xchg
sbb
xchg
jl
cmc
sub
clc
js
sbb
xor
pop
or
fwait
popf
outsb
inc
dec
cmp
mov
adc
jg
aad
pop
lods
jge
loope
cmp
lods
cmc
sub
stos
mov
sahf
popf
dec
mov
and
push
and
sub
sahf
inc
pop
popf
inc
cmp
cmp
sub
xchg
iret
sub
xchg
pop
add
int3
cmp
dec
xchg
lret
dec
xor
push
inc
dec
mov
or
and
roll
pop
or
pop
fsubp
push
mov
xchg
or
test
or
xchg
dec
dec
es
xchg
mov
push
add
cmpl
in
ds
and
repz
sbb
cmp
xchg
or
sarl
cmp
or
lods
test
jne
mov
inc
bound
adc
mov
fnstenv
or
pop
jo
lods
push
push
or
sbb
xchg
loope
fmuls
push
add
cmp
pusha
mov
inc
into
sbb
xchg
ss
hlt
rcll
dec
imul
and
out
fnsave
xor
mov
push
mov
call
or
xchg
adc
add
insl
push
test
sub
and
push
dec
js
aad
cmpsb
push
or
push
xchg
daa
in
cmp
loope
adc
adc
notl
pusha
cli
dec
add
adc
in
gs
cmpl
or
fisttpll
inc
push
out
or
xchg
lret
loope
lea
push
insb
shl
mov
lcall
sub
xlat
data16
push
repnz
push
cmpps
push
mov
cmpsb
jle
sub
outsb
dec
xor
mov
mov
insb
xchg
jl
or
add
sarl
sbb
mov
push
xchg
in
add
cmovge
mov
push
in
std
loope
mov
adc
xor
inc
dec
or
inc
nop
fiadds
mov
or
popl
sbbb
xchg
sbb
and
dec
sbb
lcall
xchg
xor
pop
sahf
test
pop
sarb
jl
or
add
jp
adc
and
mov
mov
idivb
jb
or
cmpl
ds
imul
xor
and
cmpsl
adc
fwait
push
cmp
pop
add
enter
inc
lahf
cwtl
push
mov
orps
cmp
mov
and
sbb
add
pop
fcmovne
dec
ja
test
add
dec
insl
pop
leave
test
in
rcl
pop
addr16
aam
xor
jnp
aaa
push
hlt
push
xchg
or
and
jle
and
data16
xchg
dec
insl
or
sub
sbb
sub
fcmovne
std
inc
bound
jge
push
pop
adc
in
pop
cmp
popa
cli
pop
pop
adc
aad
add
shlb
cwtl
adc
push
mov
cltd
sub
add
mov
jl
or
ret
fimuls
fcmovu
repnz
inc
int
mov
addr16
mov
adc
pushl
jnp
mov
mov
inc
movsl
stos
pushf
mov
shl
out
fldenv
lret
inc
pop
adc
pushf
es
jo
adc
inc
fs
stos
adc
sub
xor
pop
andb
aas
mov
pop
jmp
ja
sbb
popf
or
or
push
mov
clc
push
hlt
adcb
and
mov
mov
in
xchg
adc
testb
jmp
sub
cmp
push
ss
sbb
sub
mov
and
adc
push
mov
add
rcll
xchg
fincstp
jmp
push
jg
fprem1
mov
cmp
cmpb
std
mov
add
stos
add
or
xorl
loopne
or
mov
adc
out
inc
bound
sbb
test
jge
jno
adc
xchg
lcall
fwait
popf
mov
push
xchg
addr16
mov
xchg
add
adc
mov
sti
pop
ss
xor
push
fstpl
or
cmc
and
cmp
pop
or
jg
cmp
push
sub
mov
in
dec
push
sbb
shlb
sub
jle
or
comiss
xor
fistl
jle
out
outsb
adc
pop
inc
lods
jle
cmp
dec
sub
shrb
jle
cs
push
mov
arpl
adc
scas
rcrl
rcrb
push
ss
mov
popf
push
insb
pop
int
xchg
dec
adc
test
sbbb
mov
mov
mov
or
in
xlat
cmp
or
addr16
cmp
dec
cwtl
push
mov
push
fimull
inc
add
mov
push
orb
inc
dec
in
dec
add
fisttpll
adc
lea
insl
pop
sbb
js
and
test
pop
push
or
lret
mov
and
test
insb
daa
leave
and
jo
scas
lcall
imul
jo
push
xchg
mov
enter
cmpsb
mov
mov
sbb
in
mov
xchg
lret
pop
sbb
push
outsb
or
enter
sbb
daa
push
inc
lods
leave
jmp
cld
mov
sub
sub
xchg
or
xchg
sbb
adc
pop
adc
or
inc
cmp
sbb
js
ljmp
js
jb
in
fwait
cmp
sbb
xlat
jg
es
cmpsb
insb
in
xchg
call
or
les
imul
cld
mov
adc
add
or
lret
sahf
adc
les
fwait
adc
or
or
mov
jg
data16
jo
out
adc
nop
jnp
cmpsb
add
nop
shlb
xlat
sbb
xchg
mov
push
sbb
ljmp
push
push
dec
pop
mov
sbb
adc
jo
cmp
mov
push
xchg
or
mov
adc
lods
push
lcall
inc
add
mov
aam
and
outsb
cmp
push
jnp,pt
lods
fiaddl
aad
data16
je
mov
or
xchg
adc
test
cmc
movsl
lods
push
jae
shl
in
mov
lock
lcall
or
or
outsl
or
mov
stos
ds
pusha
sub
outsb
mov
clc
lcall
sbb
sbb
mov
dec
notb
pop
fwait
adc
xchg
sub
inc
adc
dec
inc
inc
xchg
sub
sbb
insl
sub
dec
clc
or
imul
bound
xacquire
sbb
xor
fdivr
sbb
std
add
sub
xchg
nop
pop
sub
inc
addr16
push
adc
xchg
push
cmp
or
ds
push
sbb
or
fldl
push
insl
out
ja
shrb
jp
inc
add
loope
mov
mov
dec
jmp
fwait
jle
les
mov
cmpl
jae
es
aam
mov
sarl
or
ja
es
and
sub
inc
lahf
sub
imul
xchg
adc
imul
adc
js
or
insl
ret
adcl
subb
inc
popf
or
subps
sbb
or
mov
jl
pusha
bound
inc
mov
adc
mov
imul
dec
sub
or
sbb
jecxz
ret
roll
jl
push
das
jns
testb
mov
clc
mov
mov
sub
xor
mov
jb
sbb
jb
dec
in
lock
iret
lods
outsb
or
lods
in
jo
out
dec
mov
inc
mov
add
ja
ss
or
xlat
or
insl
lahf
push
xchg
xlat
inc
xchg
ss
test
fmull
pop
and
push
ljmp
movsl
push
cmp
push
lahf
sub
add
xchg
xchg
mov
xchg
cmpl
add
pushl
xchg
push
jno
jge
dec
jle
les
push
loopne
aaa
mov
push
cltd
and
push
push
loopne
sahf
and
or
inc
adc
shl
divl
push
lret
fdivrl
xchg
negl
je
imul
xchg
mov
outsw
and
daa
loope
ds
mov
xchg
sub
cmp
adc
scas
mov
lods
mov
jb
sub
idiv
mov
stos
pop
stos
sub
jge
test
push
orl
repnz
sbb
das
das
into
in
imul
dec
ret
setle
loop
adc
adc
push
icebp
lods
ds
jo
lahf
fwait
adc
in
in
je
pop
mov
adc
incl
in
mov
xchg
cmp
push
inc
push
inc
out
leave
mov
adc
push
divl
test
inc
or
scas
out
add
lret
mov
cmpsl
jecxz
js
divb
aas
test
adc
jno
mov
push
call
hlt
daa
xchg
mov
inc
push
daa
push
cmp
sahf
loope
mov
lods
adc
ds
repnz
jns
test
lahf
mov
add
sbb
stc
and
sbb
adc
and
mov
adcb
insl
sub
iret
inc
or
fwait
aas
lods
xor
test
das
or
insl
imul
xlat
and
sbb
test
sub
hlt
add
sbb
xlat
adc
lods
inc
test
adc
sahf
push
rorl
adc
xchg
in
or
bound
or
insl
inc
pop
cmp
pop
and
sub
ds
pop
xchg
dec
push
sbb
inc
sbb
push
and
push
push
sbb
int3
dec
adc
jo
movups
sbb
or
dec
sbb
or
cmp
pusha
and
push
and
dec
cmp
vminss
shrb
push
pop
rclb
push
jno
push
adc
pushf
and
lods
pusha
push
push
inc
and
lret
add
ret
or
xor
cs
push
sbb
enter
adc
and
cmpsb
sbb
adc
aaa
push
jmp
dec
sbb
sbb
cs
sbb
jge
mov
push
pop
adc
adc
and
pop
int
push
ret
adc
jae
and
lods
bound
pop
lds
mov
adc
adc
adc
sbb
mov
adc
adcb
mov
sbb
out
cs
sbb
pop
sub
xchg
xchg
sbb
sbb
aaa
dec
cs
inc
fisubrs
xchg
xor
push
inc
bound
xchg
xor
push
cmp
movsl
sahf
cmp
ljmp
sbb
mov
xchg
mov
cmp
mov
sub
mov
mov
stc
sub
xchg
pushf
sbb
adc
fists
inc
cmp
fs
add
xchg
mov
outsl
push
dec
push
adc
sbb
pop
xchg
adc
jp
add
or
xchg
aad
faddl
or
sbb
je
insb
sbb
push
pushf
jge
repnz
daa
orl
jmp
add
repnz
inc
mov
xchg
push
add
sbb
dec
lret
inc
or
rcr
cltd
adc
push
inc
lret
ret
hlt
arpl
xchg
or
bound
cmp
push
sub
add
inc
lea
mov
inc
inc
pop
mov
mov
xlat
xchg
incl
movsb
cli
mov
adc
dec
push
push
ljmp
pop
or
lret
sti
pop
inc
in
jp
and
loopne
enter
lea
js
fsubs
and
push
insb
push
or
push
data16
sbb
mov
lret
pop
lret
xor
sub
std
in
cmp
pop
add
add
ss
rcl
ljmp
lret
ds
in
lock
cmpsl
imul
push
adc
xchg
and
movsl
pusha
psubb
in
enter
dec
jp
mov
cmp
xchg
cmp
sub
aam
pop
mov
mov
or
sub
sub
or
adc
cmp
lret
mov
mov
insb
mov
mov
imul
pop
test
mov
in
cmpsb
cmp
lea
les
jl
sbb
pop
out
add
inc
push
adc
mov
mov
xor
mov
cmp
incl
mov
push
les
inc
fwait
dec
and
cmp
into
sbb
jnp
push
mov
movlps
icebp
ljmp
or
adcb
movsl
pusha
pop
xor
call
divb
lcall
jbe
mov
push
pusha
in
mov
jl
lret
pop
adc
scas
cltd
pop
mov
xor
jmp
mov
imul
push
daa
jmp
in
dec
mov
mov
imul
dec
push
call
xor
adc
push
idivb
dec
pusha
jo
lret
mov
loopne
xor
pop
in
xchg
sbb
jle
stos
mov
lret
shl
adc
xchg
packuswb
push
pop
pop
or
faddl
decl
stc
jns
mov
les
xor
xor
xchg
dec
loop
cli
add
mov
xor
fdivrs
dec
popf
fwait
sbb
sbb
push
xchg
imul
push
test
sub
aam
adc
stos
insb
or
sub
lret
mov
xchg
add
pop
dec
add
nop
mov
call
add
sbb
xchg
xor
fwait
adc
fdivs
adc
dec
mov
jo
push
cmp
sub
inc
mov
insl
xor
stos
adc
fsubrl
mov
xor
ss
out
call
sti
fstpt
mov
adc
int3
roll
sub
adc
clc
lcall
push
insl
lea
es
dec
scas
das
movb
adc
xchg
or
pop
orl
pop
inc
add
mov
mov
or
dec
add
push
lea
or
mov
inc
into
mov
mov
add
popf
adc
xor
fdivrs
dec
aam
jp
fisttpll
icebp
lods
aam
inc
push
add
jle
xchg
inc
or
out
push
push
and
add
or
dec
iret
push
jl
ljmp
jbe
add
inc
jmp
jmp
jmp
jmp
pop
cwtl
sbb
xor
mov
leave
mov
lcall
sub
push
lahf
pop
mov
je
call
push
or
cmova
dec
and
pop
fmull
sbb
dec
iret
decl
lret
dec
sbb
imul
dec
in
adc
or
adc
sbb
fnsave
jne
cmc
shrb
movsb
mov
cltd
scas
addr16
pusha
insl
test
mov
push
push
rcll
or
mov
mov
inc
dec
out
jnp
pop
int3
pop
dec
les
push
test
xor
pusha
jl
outsl
shl
push
leave
adc
ud2
push
or
adc
adc
dec
or
mov
fbld
cwtl
push
icebp
popa
jb
or
or
push
xor
mov
lds
fwait
inc
mov
clc
sub
iret
sub
sbb
push
adc
xor
inc
push
shrb
jle
nop
push
xor
add
insl
mov
inc
out
fimuls
sub
in
es
xchg
pushf
pop
or
and
jo
fistl
stc
lods
mov
iret
arpl
or
pop
inc
jbe
hlt
mov
sub
mov
jno
sub
jo
adc
adc
xor
stc
jp,pt
push
iret
or
push
dec
stos
push
es
adc
sub
int
and
xchg
lods
sbb
mov
iret
dec
pop
into
mov
lea
push
push
repz
cmp
sahf
dec
cli
lods
shrb
push
xor
es
pop
push
and
repnz
daa
push
and
adc
outsl
out
inc
sti
mov
and
enter
sbb
fmuls
daa
cltd
cmpsl
pop
adc
aad
leave
mov
sbb
daa
loope
jecxz
dec
push
sbb
adc
and
mov
push
adc
and
and
int3
push
and
jo
les
insb
push
sub
ficompl
push
pop
and
pop
ud0
mov
jns
popf
jecxz
push
leave
out
lods
dec
fmuls
cmc
fucomi
lret
jmp
ret
and
shrb
popl
xchg
dec
sbb
mov
imul
adc
cmp
dec
pop
mov
adc
mov
sbb
rcrl
lods
push
imul
push
xor
lret
insl
pop
aas
push
lret
add
rorb
push
into
lea
inc
ja
nopl
cmovg
mov
sub
in
push
fisubrs
lcall
cltd
mov
in
popa
mov
daa
mov
cmpsb
pop
in
lahf
push
cmp
push
lea
cmp
mov
insb
out
and
jo
adc
ljmp
insl
call
jae
jge
sbb
andb
loope
test
cli
adc
and
add
cmc
les
push
lahf
lcall
loope
pop
and
cs
dec
or
push
mov
add
lret
inc
lods
inc
sub
ror
sti
cmpsb
pop
dec
sbb
mov
fwait
lock
push
jo
shld
mov
sub
dec
scas
add
shlb
das
sub
xor
aaa
jb
sub
nop
sbb
pop
insb
pop
push
cmp
mov
dec
jp
add
push
pop
lock
pop
cmc
add
cmp
dec
inc
pop
mov
scas
mov
imul
xchg
sbb
leave
jmp
repnz
sbb
push
jmp
cmp
pop
fldt
mov
adc
lcall
sub
insl
popf
sub
adc
xchg
cltd
ljmp
fiadds
xor
and
sub
pop
sbb
aaa
push
sti
push
jl
or
and
movsb
cli
mov
pop
cs
aas
into
xor
mov
mov
addr16
mov
sarb
push
sub
dec
das
bound
syscall
mov
cli
xchg
pcmpgtb
lret
iret
ret
adc
in
add
dec
push
xchg
jecxz
or
cmp
cmp
mov
or
arpl
cs
or
mov
or
test
mov
outsl
cmpsl
xor
pop
rcr
dec
pop
xor
cmc
xlat
imul
lea
lahf
mov
aam
pop
jg
sahf
movsl
fiadds
inc
push
lods
stos
repnz
aad
leave
cld
mov
mov
cmp
xor
test
inc
aam
add
stos
test
rcr
push
sub
mov
aas
mov
push
loope
pusha
or
or
punpcklbw
add
pop
push
sub
repz
sub
aam
push
push
int3
mov
mov
int3
pop
xchg
lret
push
add
lea
adc
movsb
ror
and
bound
stos
dec
and
scas
ret
std
mov
ds
sub
jb
cmp
pop
into
or
or
lret
sub
popf
dec
jbe
mov
fnstsw
pusha
ss
and
or
mov
mov
jb
inc
mov
cmc
jp
leave
repnz
pusha
adc
sbb
push
int
dec
xor
popl
and
and
xor
push
add
dec
cmpl
loopne
aas
lret
and
cmp
mov
adc
js
push
cmp
adc
jge
scas
jmp
dec
dec
push
xor
adc
es
rcr
xor
sub
ljmp
dec
mov
das
cli
fwait
push
into
and
xchg
mov
and
push
push
push
sbb
pop
insb
pusha
ficoms
xor
push
dec
leave
loope
jnp
fwait
in
into
add
cli
mov
mov
and
das
push
cld
insl
pslld
into
outsb
xchg
and
add
in
shlb
dec
das
push
cmp
adc
xor
adc
jl
fadds
insl
mov
mov
sbb
imul
daa
or
out
xor
or
inc
fucomip
cmp
jno
xor
mov
lods
push
je
popl
sub
hlt
sahf
test
mov
sbb
xor
in
adc
dec
pop
sub
inc
loope
push
push
cmp
push
add
sbb
scas
xchg
out
out
out
xor
pop
les
sarl
cli
cld
jnp
xlat
lea
push
push
iret
xchg
ja
stos
enter
push
lds
push
int3
xchg
push
addr16
lahf
lods
into
jb
push
sbb
push
ret
xor
mov
cld
cmp
xor
push
daa
in
cmp
push
and
lock
cmpsw
mov
pusha
cltd
jmp
cmc
out
test
sub
leave
add
xchg
lret
scas
aas
or
outsb
nop
ljmp
lods
and
iret
lret
sub
daa
dec
popl
push
shlb
push
hlt
sub
rolb
push
adc
sbb
inc
adcl
ror
jp
xchg
sub
sub
jl
lods
xchg
or
jae
pop
cmp
inc
and
lock
roll
dec
and
movsb
bt
sub
out
lahf
xor
popa
xchg
lretw
sub
inc
jmp
push
push
sub
add
xor
mov
push
push
jg
pop
sbb
imul
or
fldt
sub
sarl
pop
cmp
imul
insl
ja
test
jns
mov
addr16
fcmovnu
pop
xchg
push
jbe
mov
adc
inc
adc
jmp
fidivrs
es
adc
daa
mov
and
fsubp
movsl
xchg
xchg
daa
push
sub
fwait
dec
mov
imul
pop
into
push
add
adc
rol
push
cmp
pop
mov
mov
arpl
jmp
push
push
negl
pushf
push
and
mov
inc
dec
sub
or
push
lahf
int
or
les
pop
sub
jecxz
mov
movl
mov
or
dec
xchg
imul
mov
roll
dec
push
mov
fwait
xchg
xor
cwtl
addr16
jmp
xor
jle
or
mov
fisubrs
in
sub
sub
inc
std
fmuls
mov
outsl
sbb
pop
add
movsl
out
push
push
sub
sbb
push
push
ror
add
sbb
sub
es
ret
lcall
loope
pop
adc
sbb
mov
je
push
push
lea
or
dec
cli
adc
push
rcr
mov
add
cmpsb
mov
xor
pop
jp
imul
shll
fnstcw
insl
add
or
outsl
pop
or
inc
nop
or
outsb
jno
xchg
xlat
and
loopne
adc
dec
js
adc
mov
xor
gs
cmpsb
sbb
daa
into
out
or
popa
cli
in
mov
dec
xchg
or
inc
cmp
push
es
int3
pop
lods
mov
mov
lret
mov
mov
into
xor
xchg
add
cs
sub
xchg
adc
adc
int3
push
jle
mov
int3
aad
dec
push
mov
lcall
bound
pop
mov
sbb
lret
mov
push
pushf
sub
add
mov
cli
lahf
movsb
or
or
adc
push
scas
mov
btc
xchg
clc
mov
push
das
arpl
daa
arpl
mov
pop
add
pop
ss
push
xor
mov
cltd
repz
stc
aad
xchg
push
cwtl
mov
lcall
fdivr
pusha
push
cmpsl
rcll
pop
addr16
ficoms
dec
daa
mov
sbb
sbb
shrb
sub
iret
inc
pop
xlat
daa
and
iret
mov
or
loopne
icebp
in
loop
xchg
mov
inc
loope
fwait
push
pusha
out
or
jb
iret
xor
mov
aaa
aam
js
pop
jg
mov
sub
sbb
ds
jnp
xchg
cmp
or
aas
test
add
lods
xchg
xchg
or
xor
xor
push
mov
insb
mov
push
push
sub
out
push
add
loopne
mov
fbld
mov
pop
or
enter
mov
xor
arpl
sub
add
pop
insb
adc
or
jae
cmp
stos
or
pop
jle
dec
sub
sub
arpl
pusha
cmc
xchg
push
pop
inc
dec
out
test
adc
inc
or
push
add
cmc
insl
sahf
arpl
movsb
jle
outsb
dec
or
loope
ror
insb
out
push
or
and
stos
jo
addr16
or
cmp
push
add
fdivp
stc
ret
das
sbb
cmp
outsb
mov
jbe
dec
stc
and
lods
mov
mov
push
inc
mov
jg
into
in
sbb
mov
dec
test
sbb
push
movsb
mov
and
fucompp
movsl
sarb
adc
lahf
int3
pop
push
repnz
les
jb
push
adc
adc
mov
fnsetpm(287
mov
adc
push
sbb
mov
insb
addr16
or
push
pop
ljmp
stos
inc
sbb
pop
sbb
mov
test
xchg
or
mov
in
out
mov
setnp
or
fisttps
aas
rcl
outsb
gs
push
imul
push
mov
and
daa
pop
mov
cwtl
adc
popa
stc
and
cmp
lret
xor
mov
inc
mov
stc
pop
lock
jmp
movsb
mov
ljmp
cmp
push
and
dec
nop
mov
daa
xchg
fsubr
or
cmpsl
in
or
sbb
sub
and
dec
repnz
ret
or
sbb
leave
pop
dec
mov
cli
and
cmp
mov
adc
imul
dec
pop
push
or
pushf
out
enter
pop
scas
or
xchg
xor
in
call
push
les
fmull
or
test
cmp
bound
mov
mov
shr
push
das
int
cmp
lods
or
mov
lret
mov
add
aam
sbb
outsb
and
mov
pop
int3
sbb
sbb
iret
sub
loopne
xchg
adc
mov
push
in
test
stos
cmp
or
push
add
dec
dec
sbb
pop
int3
jb
pop
es
push
and
std
ljmp
lret
faddl
shl
xchg
fisubs
pop
and
adc
xchg
bnd
pushf
inc
lock
jne
out
lcall
push
and
mov
in
fidivrs
xchg
outsl
out
iret
lret
cmpb
sbb
cmp
int3
fcomps
nop
rol
mov
nop
jge
lea
or
sbb
out
jbe
sahf
adc
or
push
fcoms
push
jp
int3
cmp
dec
or
lret
orb
fcmovnu
or
scas
and
or
loopne
testb
js
imul
jnp
inc
and
xor
inc
insb
js
rcll
xor
xorl
fimuls
sub
movsl
dec
or
lods
iret
sub
sbb
into
arpl
inc
cs
pop
enter
dec
cli
fwait
xlat
stos
into
lods
mov
mov
jl
jns
jae,pt
dec
mov
outsl
dec
ss
les
repnz
punpcklbw
cmp
mov
xchg
push
lods
and
and
mov
mov
push
adc
xchg
mov
cmc
sbb
cmpsl
pop
arpl
or
dec
sarb
adc
popl
lret
jecxz
pop
imul
in
in
xchg
or
mov
mov
dec
add
imul
loope
or
xlat
or
and
and
dec
jp
rorb
or
mov
dec
les
sti
cmp
push
ret
dec
ret
loopw
fistpll
cmp
lcall
dec
pop
xchg
ja
daa
fisubrs
cltd
adc
xchg
bound
pop
adc
in
cwtl
cmp
in
ret
or
push
adc
out
subb
imul
pop
pop
fwait
cltd
mov
rcrb
iret
push
inc
test
shll
cmp
in
mov
lahf
lret
xchg
outsl
sub
adc
cmp
lret
xor
bswap
cmp
fildll
sbb
or
push
ljmp
insl
lods
adc
adc
dec
adc
mov
lcall
cmp
inc
pop
loopne
test
nop
iret
movd
xlat
sbb
bound
add
out
pop
push
popf
jg
cmp
ss
lret
cmpsb
fcomps
or
iret
inc
stos
pusha
cmpsl
dec
popf
mov
in
mov
cwtl
ret
cmp
xchg
ss
jecxz
in
mov
adc
mov
adc
adc
packuswb
das
fidivl
mov
popf
ficomps
repnz
dec
or
adc
in
sub
rorb
mov
scas
lea
into
push
lcall
inc
cmpsb
jo
push
pop
lahf
fnstcw
jle
mov
or
adc
lret
jmp
movq
test
dec
sub
adc
and
stos
je
mov
cmp
mov
es
fldcw
dec
add
xor
sarb
cmp
jb
dec
jg
std
xchg
or
aaa
mov
cmp
adc
xor
or
imul
adc
nop
sub
int
xchg
dec
pop
sbb
movlps
inc
lea
jo
add
sbb
add
sbb
pop
daa
insb
or
sbb
or
outsl
jle
and
lods
mov
xor
es
jbe
xor
mov
or
mov
lea
int3
adc
push
sub
sub
sbb
dec
inc
or
inc
push
imul
lret
pop
push
pushf
rorb
aam
or
push
push
imul
dec
push
adc
addl
jecxz
xchg
jle
adc
xor
test
mov
test
jae,pn
ja
sbb
pop
cmc
adc
and
int
outsb
dec
aaa
xchg
cmp
cmp
xchg
and
adc
cmp
adc
sbb
mov
sbb
mov
mov
lahf
adc
mov
sbb
adc
cmp
sub
mov
xor
dec
mov
pop
pop
or
mov
inc
mov
push
and
dec
ja
sbb
out
adc
xor
jecxz
inc
in
popa
aaa
or
fwait
lret
add
add
je
lds
ds
mov
push
insl
mov
mov
mov
les
fwait
imul
fnstcw
cmp
xchg
adc
ds
inc
or
sbb
fdivrs
mov
mov
sub
out
dec
mov
pop
mov
jne
ss
js
fnstenv
mov
andl
rolb
in
int3
ds
imul
pop
cmp
push
sbb
std
aam
pop
adc
cmp
mov
pop
dec
push
pop
mov
sbb
push
inc
or
dec
xor
out
xor
in
cmp
fcompl
sub
sti
push
int
add
inc
push
pop
testl
sbb
inc
clc
pusha
xchg
fnsave
in
push
push
jno
into
in
xchg
mov
icebp
mov
lcall
out
adc
dec
dec
idivl
add
push
shl
sbb
dec
mov
sbb
xor
cmp
jp
daa
test
dec
inc
addb
iret
lret
mov
popf
cmp
add
xrelease
mov
adc
and
mov
dec
push
sbb
addr16
aas
fnsave
mov
clc
cwtl
mov
mov
adc
pop
lods
out
push
test
shlb
lahf
loop
or
insb
shll
aam
cmp
mov
in
mov
jmp
mov
je
dec
cmp
push
shrl
push
adc
lret
mov
or
mov
das
push
scas
cmc
push
lea
inc
movsb
dec
aam
mov
xor
stos
and
mov
mov
xor
movsb
xchg
adc
sub
push
cmp
xor
mov
fsubs
cmp
adc
jg
jmp
sub
aam
and
test
mov
imul
sub
cli
sbb
sub
rep
addl
scas
subl
insb
int
test
jp
inc
add
insl
pop
sbb
int3
and
fists
insl
xor
and
sub
add
sbb
mov
mov
xor
cmp
imul
sub
jmp
outsb
sub
mov
inc
pusha
pop
adc
daa
pop
push
fwait
cs
rcl
xlat
ret
shrl
sahf
adc
push
fcoms
stos
push
int
out
fldcw
adc
mov
push
cld
or
aad
leave
ss
sbb
insl
es
ret
push
sti
push
push
mov
lods
pop
inc
jmp
xchg
jecxz
in
pop
push
or
fisubrl
sbb
lahf
les
scas
outsl
fs
mov
ljmp
cwtl
adc
out
es
out
cwtl
add
adc
and
xchg
les
ret
repnz
nop
movsb
lds
test
push
xchg
lahf
insb
push
push
adc
xchg
push
ds
nop
add
ret
xor
sbb
popa
pop
mov
adc
dec
stos
mov
push
loope,pn
sub
inc
inc
sub
rorl
insl
or
mov
stos
mov
push
mov
pop
push
sub
dec
sub
cli
add
pop
mov
push
inc
in
repz
inc
bound
js
fmuls
es
jmp
aam
or
adc
sti
outsl
movsb
insl
and
sub
push
hlt
aad
mov
cmpsl
adcb
pop
add
aam
dec
sahf
inc
xor
or
dec
imul
adc
addr16
push
aas
add
xchg
aam
sub
int3
push
pusha
jge
ds
iret
aam
mov
data16
sahf
xor
add
mov
or
lods
adc
adc
repnz
fnstsw
jo
insl
or
les
fisttpll
or
addl
push
pusha
mov
and
sahf
popf
iret
mov
leave
adc
movsb
adc
inc
das
xchg
jb
ljmp
push
cli
jle
or
mov
cltd
or
sbb
test
pop
jle
adc
adc
jecxz
dec
je
pop
push
adc
mov
and
rcrl
daa
iret
lea
xor
fs
add
loopne
test
xchg
fisubrl
dec
cmpl
mov
fcomps
scas
push
enter
xlat
mov
es
fidivrs
mov
sub
inc
in
mov
dec
into
xchg
jno
or
enter
imul
add
cmpsl
rclb
and
sbb
in
cli
les
call
ds
or
incb
sub
arpl
mov
dec
sub
les
fcompl
insl
dec
arpl
pop
cmp
and
shlb
fcomps
je
push
sbbl
les
dec
in
and
mul
popf
aaa
test
cmp
push
lods
dec
hlt
cmpsb
out
ret
dec
push
sub
out
push
iret
fwait
sbb
mov
mov
int3
adc
loope
outsl
dec
cltd
push
out
les
leave
xor
sub
daa
adc
mov
sbb
cmp
jno
adc
rolb
les
xlat
mov
sbb
sub
decl
inc
fcoml
ret
xor
arpl
ficoml
xchg
shr
adc
lahf
aam
add
dec
pusha
sub
ret
sbb
daa
fmul
jmp
testl
xor
adc
cld
xor
sbb
cmp
mov
adc
xchg
mov
dec
les
mov
dec
mov
leave
push
mov
out
and
mov
in
inc
aam
add
fmulp
mov
lods
mov
jle
inc
divps
sub
int3
inc
jecxz
hlt
rolb
push
lahf
mov
stc
sbb
icebp
cmc
pop
cmc
cld
and
inc
leave
inc
sbb
or
sbbb
sbb
dec
jmp
jl
sub
mov
repz
push
sbb
sbb
xlat
push
scas
movl
inc
xlat
mov
aas
les
mov
dec
mov
imull
xor
lret
sbb
pop
adc
pandn
iret
daa
loope
cmp
cmpb
push
popa
adc
cmp
or
jbe
push
push
adc
mov
out
fwait
push
or
adc
xchg
adc
pop
pop
incl
addr16
push
insl
leavew
imul
dec
lret
mov
jnp
into
mov
push
ret
insb
or
lret
mov
rcr
mov
cmp
pop
aam
pop
xchg
jp
lock
adc
sbb
movsb
fcmovb
xorl
inc
insb
iret
hlt
stos
fimull
mov
rorl
sbb
imul
dec
add
enter
push
sub
mov
add
mov
lods
sbb
jp
movb
xchg
and
hlt
adc
pushf
and
inc
pusha
xchg
andb
sub
clc
insb
xor
xchg
aam
jb
shr
adc
add
pop
mov
sbb
int
fs
jl
adc
and
xchg
and
sbb
xchg
lock
repz
pop
icebp
enter
adc
add
sbb
les
ljmp
cltd
sbb
sbb
jl
adc
xor
fsubrl
xor
pop
push
daa
mov
rcr
les
push
jp
push
cmp
or
push
adc
and
icebp
or
mov
int
or
add
or
dec
push
xchg
ficompl
jo
xchg
and
dec
out
xchg
adc
push
imul
mov
pop
pop
add
adc
push
push
push
sub
pop
daa
roll
inc
inc
dec
mov
cmpsl
dec
rcll
push
aam
cmc
or
and
adc
fdivs
pop
sub
cmc
cmp
mov
and
scas
cld
xchg
int3
lret
loop
push
nop
pop
scas
xchg
dec
jns
adc
mov
leave
and
cmp
adc
mov
mov
inc
sbb
xchg
cmove
inc
cmp
xchg
push
and
cwtl
mov
cmpsl
leave
pop
paddusw
pusha
pop
push
test
sbb
nop
in
inc
insl
jl
fcmovu
or
fiadds
leave
jl
push
test
jecxz
std
leave
xchg
push
rolb
push
xchg
cmpsl
stc
into
sub
lcall
xchg
cmp
pop
push
add
pop
dec
pushf
test
scas
mov
push
inc
cli
cmp
adc
imul
fwait
adc
xchg
mov
mov
push
sbb
push
pop
pushf
jle
shrb
call
rcrl
mov
out
iret
fmul
cmc
sbb
jne
aad
mov
inc
insl
addr16
ss
xchg
inc
je
in
mov
dec
daa
sbb
call
nop
decl
inc
stos
adc
xchg
leave
push
cwtl
rcr
and
dec
frstor
xchg
or
pushf
push
ss
and
dec
pop
cltd
jp
imulb
mov
pop
pushf
xchg
mov
jl
sub
mov
push
faddp
sbb
push
bound
add
adc
mov
in
mov
pusha
daa
adc
lret
xchg
and
dec
stos
int
cmpsl
inc
inc
out
push
adc
les
cmp
sti
test
sbb
xchg
push
pop
pop
fsts
pop
or
push
pop
loope
iret
or
add
popa
push
push
add
push
loope
mov
jnp
cli
inc
xchg
int
in
fstpl
dec
mov
sub
inc
rcrb
jl
lret
hlt
inc
or
xchg
and
or
ror
mov
roll
adc
jno
dec
or
push
lea
daa
push
je
lret
sarb
push
fxch
xor
inc
imul
ja
dec
ds
inc
pop
mov
adc
push
xchg
or
inc
shlb
popa
dec
mov
xchg
repz
cltd
lret
xrelease
scas
lret
dec
lcall
sub
pop
cmp
pop
ret
mov
test
dec
sbb
sbb
fmul
cmp
jp
int3
sub
sbb
sbb
dec
adc
aad
or
lods
mov
jmp
aam
jecxz
cwtl
mov
subb
sub
out
xchg
lcall
movsl
cmp
push
inc
lahf
jo
lea
ret
repz
inc
dec
loop
or
stos
xor
xor
push
in
aam
push
push
call
inc
dec
push
or
insb
rcrl
dec
int3
repz
adc
pusha
sbb
ret
inc
iret
adc
in
pop
les
push
je
xchg
jle
jecxz
stos
adc
jecxz
xor
xor
xor
xor
les
stos
sbb
icebp
push
cmc
push
es
mov
or
or
add
jno
fdivl
pusha
mov
sbb
or
in
adc
lahf
pop
scas
lahf
pop
sbb
lcall
jecxz
cmp
push
ljmp
inc
sub
sbb
sub
icebp
and
inc
sub
aam
mov
cs
icebp
ret
jp
push
int
test
out
nop
dec
fimuls
int3
movsl
sti
shlb
sub
in
pop
in
adc
stos
sbb
jo
loopne
and
mov
imul
fmul
xor
and
xchg
clc
mov
push
sarb
mov
adc
push
cmp
and
jbe
and
mov
ja
stos
and
mov
xor
adc
sahf
jp
fnstsw
xlat
mov
stos
push
stos
xor
jge
fdivrs
fisttpll
stos
lds
jle
movsl
xchg
ja
mov
insb
imul
faddl
or
adc
mov
pop
inc
fdivr
cmp
aam
and
sbb
bound
mov
inc
adc
sbb
mov
xchg
mov
xchg
or
xor
pop
inc
adc
mov
add
dec
or
jae
lcall
fdivl
adc
add
into
mov
sti
push
lea
dec
pavgw
mov
xchg
jne
movsl
dec
prefetch
addr16
outsb
lret
lods
fsubp
adc
int
in
mov
sub
sbb
jns
sbb
jbe
push
sbb
sub
inc
adc
xchg
adcl
push
cmp
loop
adc
insl
fists
fldpi
mov
inc
cmpsl
or
mov
lods
pusha
rol
dec
xor
jle
inc
aas
pushf
cmp
or
call
xchg
and
push
xchg
or
out
in
shll
pop
or
and
mov
or
xor
and
mov
cmp
out
pusha
repnz
push
jbe
push
and
nop
cmp
mov
or
sbb
pushf
movsl
adc
inc
jge
cwtl
adc
sahf
cs
push
mov
movsb
mov
adc
sbb
pop
fwait
pop
int3
add
imul
pop
xchg
sbb
jecxz
daa
mov
adc
sub
fsubr
push
xchg
push
xchg
inc
mov
push
pop
mov
gs
mov
jb
lea
dec
dec
icebp
stos
addr16
jbe
cld
in
mov
mov
in
mov
scas
mov
jne
sbb
daa
and
mov
cmp
jbe,pt
jl
sbb
stos
sub
fs
out
or
out
call
bound
cmpsl
cmp
in
or
mov
or
adc
mov
sub
shll
mov
dec
mov
in
int3
lahf
and
rolb
add
sarb
leave
jae
push
shlb
mov
mov
or
outsl
imul
cmp
push
xchg
adc
or
pop
or
push
movsb
into
cmp
subb
dec
sbb
sub
inc
fnstcw
sbb
mov
adc
fisttps
or
dec
inc
or
pop
aad
daa
sub
or
jle
sbb
movsb
sbb
test
inc
mov
lret
sbb
dec
divl
int
arpl
lret
ss
or
lahf
push
add
popa
inc
push
dec
xor
sbb
inc
fcomps
fwait
xchg
sub
lods
jecxz
sahf
or
mov
gs
incl
pop
xchg
int
pop
test
les
scas
pusha
push
loopne
dec
cltd
xchg
xor
in
cmp
aam
aaa
jmp
mov
sbb
dec
xor
inc
lea
mov
dec
pop
xchg
sub
push
inc
rcl
test
loope
rcrl
sbb
cmp
leave
pushf
dec
insb
pop
push
dec
push
aam
daa
cmp
js
adc
repnz
lods
jp
mov
push
xchg
add
out
xlat
fistps
cmp
xchg
jl
sub
subb
pop
mov
cwtl
int
lods
les
push
inc
dec
add
ljmp
or
scas
dec
or
lahf
dec
decl
aas
insb
pop
cmp
sbb
cmp
xlat
sbb
or
xchg
in
inc
lret
jecxz
and
or
add
sbb
push
daa
rolb
xor
out
popf
frstor
imul
js
add
mov
int3
repnz
out
adc
sarl
jno
mov
fmuls
movsb
push
add
and
xchg
sbb
clc
mov
mov
insb
and
push
jb
int
pop
insl
adc
fs
cmpsl
xor
outsb
test
mov
fs
popf
xchg
les
pop
sub
push
stc
fidivl
lret
dec
fwait
mov
or
mov
sbb
cmp
push
xchg
leave
push
std
adc
pusha
mov
sub
jae
mov
sbb
fisubl
test
jge
push
loope
sub
fisttpl
les
stos
or
lcall
cwtl
cs
jl
cs
outsb
sbb
adc
repnz
out
in
jp
mov
das
push
outsb
mov
js
push
jecxz
mov
sub
int3
mov
js
pop
mov
ja
push
ret
clc
outsl
ret
add
pop
mov
cmp
cld
adc
mov
or
fs
es
add
mov
push
sbb
fstpt
test
push
pop
dec
cmp
pop
dec
fadds
push
fwait
pop
push
and
cmpsb
inc
movsl
jbe
add
dec
adc
push
add
popf
andb
push
or
arpl
cli
or
cmp
sub
dec
test
je
or
jne
clc
testb
mov
or
add
xor
or
int3
and
sub
int3
imull
jno
ficompl
test
addb
aas
adc
pushf
ret
push
or
cs
sub
sbb
mov
ss
mov
pop
push
mov
xor
mov
jge
inc
dec
cli
add
xor
mov
and
pop
int
xchg
dec
and
and
sub
repz
cmp
mov
adc
dec
cmp
inc
pushf
ret
pop
sbb
push
cmp
and
insl
dec
push
popf
cli
add
mov
push
jl
or
lret
lahf
and
xchg
fcompl
cli
aam
rclb
pop
mov
cld
xchg
inc
test
xor
cmp
iret
pop
or
adc
ja
mov
adc
dec
push
pusha
mov
fisttpll
rcr
pusha
adc
add
push
ljmp
sarb
into
outsl
jp
stos
cwtl
filds
in
clc
dec
ljmp
test
inc
daa
dec
aam
xchg
andb
pushf
cmp
adc
jae
iret
push
out
mov
daa
mov
hlt
jmp
outsb
pop
pushf
arpl
loope
dec
outsb
dec
pop
jne
lods
insb
jno
and
sbb
iret
rorb
cmp
adc
push
pop
mov
enter
dec
inc
popf
fsubr
pusha
xor
sbb
fucomp
clc
sub
push
push
lods
lret
jle
or
adc
sbb
sbbl
mov
push
jno
rcll
lret
std
mov
mov
xchg
pop
dec
addr16
bound
mov
jno
add
and
aad
or
sbb
sub
jp
lret
pavgb
int
addr16
dec
mov
scas
dec
jecxz
jle
idiv
mov
jecxz
jge
sbb
cld
pusha
xchg
sub
adc
ror
int
push
stos
fwait
jge
sub
lahf
adc
and
jns
or
lcall
pop
insl
push
jne
or
cmpsl
jne
outsb
push
daa
sarb
inc
add
int3
add
dec
add
cltd
sub
fwait
xchg
fistps
fisttpl
inc
pop
ret
add
mov
pushf
fsub
jbe
sti
add
incb
jbe
in
xchg
cli
aam
div
xlat
xchg
pop
push
add
ss
adcl
jmp
mov
aaa
pop
xchg
movsb
dec
adc
in
mov
adc
dec
call
das
ret
fsubs
pop
insl
out
jecxz
and
into
push
push
sbb
in
imul
test
and
cwtl
mov
pop
jecxz
push
mov
xor
cmp
stos
push
les
dec
sub
fsubr
jmp
loopne
ljmp
push
loop
scas
adc
out
lahf
sub
sbb
inc
push
movsl
cmp
fdivs
loope
repnz
int3
imul
push
mov
pop
push
push
jmp
pop
aam
ds
sub
inc
add
loop
dec
pop
aas
mov
sub
ret
inc
sbb
inc
mov
jno
push
pusha
fistpl
mov
aad
pusha
dec
push
hlt
jne
insl
in
inc
fisttps
gs
xor
roll
lret
leave
out
inc
ja
mov
jle
push
push
pop
les
fwait
or
sub
mov
adc
cmp
pop
xchg
call
lea
pusha
xor
pmullw
push
push
adc
movsb
mov
fwait
lds
scas
adc
push
lea
or
shlb
mov
leave
popf
invd
inc
push
adc
mov
outsl
push
ja
push
into
xchg
lcall
in
mov
mov
push
sbb
push
push
and
mov
popa
cmp
insb
xor
adc
loopne
dec
jb
pop
cmp
or
sub
cmpsl
jmp
scas
fldl
lahf
daa
movsl
sbb
shl
lcall
loop
mov
sub
and
daa
fwait
leave
and
mov
ljmp
sub
decl
dec
in
cwtl
cld
adc
adcb
aam
mov
jmp
xor
push
push
pop
mov
stos
push
cmp
cmpsl
lea
mov
aam
cs
outsb
insl
int
adc
pop
jecxz
in
std
lcall
push
dec
lret
or
es
es
add
cmp
in
arpl
into
mov
mov
push
push
int
imul
jno,pn
or
clc
cs
sbb
dec
mov
mov
jge
movsb
and
repnz
sar
sbb
ss
out
loopne
jb
aaa
push
stos
clc
or
and
cltd
lret
fcomps
adc
xchg
or
and
gs
mov
bound
jbe
fidivrs
pusha
mov
mov
xor
orb
test
cltd
movsb
or
insb
mov
jbe
mov
push
pop
adc
stos
jnp
ljmp
cwtl
stos
rorl
xor
hlt
mov
data16
leave
repnz
stc
outsl
xorb
movsb
mov
orb
xchg
or
fdivrs
shrl
iret
jo
shlb
mov
mov
mov
jecxz
jecxz
mov
push
inc
mov
dec
cmovp
stos
sbb
lods
xor
or
push
mov
int
sbb
movsb
lret
inc
fimuls
cmp
jl
pop
adc
daa
xchg
adc
popa
mov
out
mov
divb
xor
sbb
add
pop
mov
pop
sbb
sahf
iret
rcrl
mov
lea
jno
stos
sbb
ror
pop
add
fwait
mov
push
sub
add
sarl
or
and
mov
cmp
ljmp
pop
pop
adc
push
imul
pop
addr16
push
mov
and
hlt
inc
mov
sarl
adc
shrb
imul
push
mov
mov
xor
les
mov
inc
test
insb
push
pmullw
jmp
xchg
mov
xor
mov
int
mov
inc
mov
sub
shll
popa
dec
dec
lds
sbb
inc
jecxz
pop
dec
es
daa
sahf
into
das
stos
or
ffree
fildll
mov
fmul
out
pop
or
inc
jb
pushf
ficomps
jg
inc
inc
add
setle
sub
add
xchg
ss
mov
leave
mov
les
es
lret
xchg
pushf
fwait
and
fisttps
cmp
ljmp
pop
lods
adc
dec
sub
lds
testb
xchg
lea
fmuls
mov
rcl
jl
xchg
insl
xchg
insb
dec
cs
lods
lret
pop
int3
inc
cmpsl
xchg
inc
jg
xchg
out
lods
pop
lock
leave
int
cwtl
mov
pop
sbb
enter
roll
xlat
or
jne
inc
mov
addr16
pop
push
pop
xlat
jmp
cs
mov
leave
test
leave
inc
or
pminub
cwtl
sub
mov
mov
inc
xchg
arpl
into
mov
stos
xchg
or
lea
dec
lods
in
push
sub
and
and
sahf
jns
or
add
push
ljmp
xor
aad
in
push
sub
inc
clc
filds
lret
push
adc
cmp
and
shrb
sbb
push
daa
push
cmp
pop
push
mov
dec
jmp
fmull
cmp
shlb
int
hlt
shrl
scas
mov
fcompl
xor
inc
in
sbb
bound
and
or
and
or
adc
ret
mov
jbe
das
push
dec
mov
mov
ja
stos
mov
test
fildll
or
or
xchg
shl
sub
cmp
cmp
jb
cmpsl
pop
lods
outsl
pop
push
shrl
fidivrs
sub
mov
insb
lea
dec
inc
push
jnp
xchg
inc
cltd
jg
and
mov
xchg
pop
jl
sub
int3
insb
les
lea
hlt
insb
jl
mov
jecxz
push
push
mov
pop
les
fstpl
jecxz
xor
lock
jp
repnz
pushf
inc
call
cli
fdivs
mov
sbb
dec
repz
sbb
mov
inc
cmpsb
sbb
mov
ds
inc
mov
add
add
sbb
subl
push
lahf
or
cs
push
dec
outsb
or
jecxz
icebp
dec
push
loope
pop
aaa
push
xor
es
push
and
lea
ljmp
pop
bound
fildll
xor
in
sub
cmp
insl
or
push
cmpsb
into
or
or
inc
pop
and
mov
adc
cld
ret
dec
pop
xchg
xchg
adc
shl
daa
iret
adc
loope
xor
sub
push
pop
lea
dec
inc
bound
fisttpll
je
outsl
fdivrs
dec
data16
jae
mov
loope
mov
mov
xor
and
dec
fyl2x
add
adc
daa
sahf
pop
idivb
push
xchg
inc
fimuls
mov
sub
or
mov
or
xchg
inc
cltd
divl
inc
rorl
sbb
jg
in
xchg
in
pop
push
dec
rolb
popf
aas
das
ljmp
inc
push
push
arpl
or
nop
jp
mov
inc
aas
call
nop
dec
insl
pop
dec
xor
mov
and
pop
fnstenv
les
fldcw
aaa
mov
test
repz
dec
cmc
or
test
cmp
pushf
pop
pusha
fwait
dec
xor
shll
or
dec
sbb
inc
in
sbb
stc
mov
push
call
xchg
fdivl
adc
sahf
lret
adc
xlat
push
ret
or
xchg
or
adc
pop
add
lock
cwtl
mov
push
pop
shl
in
movsl
cwtl
dec
aad
test
jae
xchg
cmp
lods
or
ret
or
lcall
cli
sub
and
sub
cli
inc
pop
fisttps
xchg
fwait
les
nop
sub
push
gs
inc
pop
pop
mov
rclb
lret
lcall
les
scas
in
jmp
movsb
pop
cltd
pusha
addr16
mov
jl
mov
xchg
lods
rorl
dec
and
push
or
roll
movsl
rcr
mov
adc
or
cmp
dec
fwait
mov
inc
sbb
mov
je
sub
jns
mov
or
push
pushf
add
xchg
int
cld
insl
inc
push
ret
push
int3
jecxz
jns
adc
cmp
pushf
cli
xor
jae
pop
inc
fistpl
fsubrs
sbb
mov
cmp
or
mov
mov
mov
inc
mov
xlat
or
jo
adc
sbb
pushf
ucomiss
or
inc
in
fmull
push
fdivl
mov
shl
dec
pop
cltd
dec
mov
lret
imul
jge
stos
addr16
xlat
add
adc
dec
decl
orl
adc
lret
or
sti
dec
cmc
clc
jecxz
cmpl
les
mov
mov
mov
add
ror
jmp
fisttpll
ljmp
push
test
ja
mov
xchg
mov
pop
int3
test
movsb
mov
inc
and
test
push
imul
pop
into
mov
mov
aas
or
cmp
lea
sbb
insl
pop
leave
fs
jl
pop
jp
mov
mov
pop
xor
pop
push
or
lea
xchg
xor
in
xchg
aas
xor
pop
cltd
mov
lret
daa
dec
sub
sub
loope,pn
adc
outsl
mov
jns
lret
or
out
and
fwait
cmp
xchg
test
in
mov
sbb
repnz
cmp
or
xor
iret
out
lret
pop
xchg
sub
iret
and
dec
imul
loopne
xchg
mov
popf
jb
rorl
pop
mov
pop
daa
pop
cs
adc
jmp
sub
inc
fcoml
push
cs
sti
mov
xchg
loopne
adc
jae
adc
clc
jne
scas
sbb
add
push
dec
pop
xchg
fcom
dec
adc
ljmp
adc
add
jge
insb
fisttps
sub
in
lret
adc
stc
dec
sub
stos
iret
lret
jb
ds
or
xchg
imul
lret
push
sub
aam
lcall
ret
or
mov
xchg
insb
pop
pshufw
insl
test
or
cmp
mov
cmp
push
cmp
addr16
stc
jo
dec
in
pop
adc
pop
into
imul
les
push
movsb
iret
aam
out
outsl
mov
xor
movsb
flds
fwait
or
das
sub
push
adc
sbb
inc
jnp
xchg
adc
mov
fwait
lret
bound
adc
and
dec
testl
push
push
outsl
jo
mov
fcoms
ret
xorb
xchg
push
mov
mov
cmp
adc
add
push
lcall
jmp
add
das
xor
mov
fdivrs
pusha
jb
push
movsb
push
mov
pop
stc
mov
add
hlt
xchg
mov
mov
push
inc
imul
dec
inc
mov
jp
pop
leave
or
fdivrs
xchg
sub
adc
stos
aaa
mov
push
ljmp
mov
mov
lahf
outsl
cmp
cld
daa
mov
jae,pn
lahf
les
mov
jmp
paddsb
sub
cs
sbb
inc
pop
mov
addr16
sbb
push
fsubrl
or
dec
cmp
mov
mov
mov
data16
pusha
repnz
ljmp
xchg
add
test
adc
pushf
pop
dec
push
adc
les
hlt
dec
je
pop
hlt
mov
mov
pop
inc
and
daa
int
jo
loope
jns
inc
sub
test
lods
fcomi
arpl
je
xchg
dec
push
je
push
mov
and
add
fmulp
or
in
pop
jns
push
fimull
sub
sahf
push
pushf
push
xor
scas
inc
xchg
xor
addr16
mov
mov
cli
cmp
push
fiaddl
or
dec
inc
pop
jecxz
cmpsb
mov
cwtl
jp
adc
pop
ret
pop
loope,pt
arpl
lahf
push
movsl
push
adc
add
mov
imul
mov
dec
add
cs
lods
fcomps
adc
fstl
sub
fcmovnu
jecxz
insl
pop
dec
js
mov
fdivrs
jmp
aam
test
aam
pop
nop
sub
lret
mov
mov
aad
imull
lcall
loopew,pt
movsb
add
sub
push
gs
loopne
outsb
jae
sub
sbb
dec
sbb
dec
lahf
rol
je
dec
add
sbb
notl
pop
and
lods
pop
out
mov
dec
daa
pop
or
lods
das
dec
fbld
cs
les
or
mov
push
cmp
xchg
js
les
sub
push
adc
stc
les
xor
test
cmp
mov
sbbl
cmpsb
into
mov
mov
inc
mov
mov
daa
dec
mov
adc
cmp
inc
pop
push
movsb
mov
ds
pop
icebp
pop
test
vmwrite
adc
test
sbb
adc
lret
xchg
adc
test
nop
dec
add
iretw
dec
pusha
inc
dec
insl
fwait
or
and
pop
leave
xchg
or
inc
adc
mov
jl
leave
mov
adc
in
jle
mov
pop
pusha
les
lea
sbb
jnp
movsb
adc
call
mull
fists
xlat
mov
push
xor
sub
popf
mov
mov
cltd
ljmp
leave
xchg
test
stos
shrl
fsub
adc
and
jmp
pop
dec
test
push
adc
mov
add
dec
enter
mov
xchg
sbb
in
repz
out
mov
stc
adc
pop
jecxz
xor
sbb
insl
sbb
ret
inc
dec
adc
in
sbbb
lcall
dec
std
dec
pop
loope
fsts
push
pop
movsl
or
jp
fisubs
inc
xor
sbb
mov
iret
insb
adc
inc
int
les
adc
aad
xchg
and
adc
pop
fisubrl
cmp
mov
sbb
mov
test
shll
push
into
xor
adc
clc
push
leave
ljmp
push
sbb
fcomps
fidivrl
test
addr16
sbb
addr16
xor
pop
mov
fcoml
mov
pop
hlt
cwtl
mov
cs
sbb
adc
jns
lret
pushf
jbe
xchg
rorb
int
scas
xchg
sub
lret
testb
pop
aam
lea
jo
xor
fdiv
jmp
je
add
or
sub
sbb
movsb
outsb
test
sub
lret
inc
pusha
mov
adc
aad
or
xor
dec
mov
mov
fistl
movsl
and
mov
int3
mov
jmp
mul
or
push
iret
cmpsb
xchg
fs
loop
xchg
fwait
insb
mov
outsl
fcoml
daa
mov
mov
pop
movsl
cmp
or
pusha
pop
dec
push
subl
in
push
or
sub
or
pusha
push
inc
fidivrl
lds
flds
and
and
push
clc
outsl
pop
mov
int
adc
push
ficoml
nop
mov
mov
icebp
addr16
mov
mov
and
xor
xor
sub
hlt
stos
adc
dec
mov
jecxz
or
add
or
je
inc
sub
sub
out
int
dec
xchg
inc
addl
dec
in
jbe
ljmp
xor
inc
dec
cmovle
xor
popf
aad
insb
pop
movsl
or
or
mov
cmp
adc
mov
fcoms
dec
sub
jecxz
jle
xlat
sub
push
push
jmp
cmp
and
loope
pop
adc
add
sub
sti
in
mov
xchg
faddl
inc
ljmp
les
lcall
sub
push
pop
out
sbb
xchg
pop
insl
imul
stos
xchg
pop
in
setp
sbb
sbb
xor
loopne
pusha
insb
addl
push
pop
faddp
dec
mov
mov
pop
mov
xlat
sub
lods
dec
das
mov
jmp
push
mov
pop
cld
mov
out
pop
push
adc
inc
push
add
aad
mov
push
dec
add
fwait
push
pop
sub
jae
sub
dec
xchg
addr16
mov
xchg
fisttps
or
lock
dec
ret
fwait
bound
cltd
xor
dec
push
mov
rcll
cmpsl
mov
nop
mov
fwait
or
inc
sub
loopne
sub
dec
ljmp
and
cwtl
sub
dec
sbb
push
aad
mov
mov
les
fstp
jns
nop
mov
push
pusha
fcom
insb
and
or
fimull
pop
pop
mov
lcall
add
fsubs
mov
sub
das
fsts
xchg
fdivr
cs
pop
mov
mov
lods
scas
add
pop
in
mov
mov
popa
leave
imul
cmp
adc
cmp
xor
in
cmp
push
and
pop
lahf
fisubrs
xlat
jb
xchg
sbb
xor
mov
or
ss
cld
cmp
xor
or
orb
jg
push
jp
or
add
mov
inc
push
scas
mov
push
xor
lods
rolb
stc
loop
nopl
repnz
int
pop
mov
pminsw
lods
decl
leave
daa
sub
jb
insb
xchg
sub
or
sbb
mov
push
push
lock
xor
leave
dec
outsl
or
mov
sahf
or
je
or
orb
fimull
mov
lods
rolb
sub
fwait
mov
adc
daa
orl
mov
mov
adc
and
lods
adc
lret
sbb
cmp
jns
in
pop
cmovs
pushf
stos
push
fwait
and
and
movsb
push
lret
out
dec
adc
push
and
rorl
sub
inc
sbbl
push
adc
das
test
in
fdiv
and
fidivl
insb
mov
push
mov
xor
ljmp
dec
fldenv
cwtl
add
push
testl
mov
lock
or
push
pop
adc
sbb
mov
ljmp
or
popa
lret
inc
test
movsb
ficomps
add
hlt
push
movsb
popf
subb
out
mov
int
or
inc
test
les
decl
ja
push
adc
pop
test
mov
xchg
and
jge
into
adc
or
mov
sub
lea
addr16
dec
iret
dec
xchg
mov
xor
jle
or
xchg
sbb
mov
add
xchg
inc
adc
daa
dec
xor
cwtl
pop
push
repz
lods
call
xchg
lea
fstpl
push
mov
sbb
push
sbb
ja
fisubrs
xchg
ljmp
mov
and
bound
cmpsl
fmuls
roll
mov
outsl
pop
inc
int3
adc
cs
inc
xchg
inc
inc
ss
jb
shr
mov
mov
jb
adc
push
and
fwait
add
jns
pop
or
sbb
enter
out
fwait
daa
aaa
xlat
push
mov
xlat
or
mov
negl
test
shll
adc
or
sbb
add
mov
and
pusha
popf
fdivr
mov
ljmp
pop
pop
dec
and
lahf
mov
dec
movsb
popa
iret
push
sbb
sub
ljmp
xchg
lea
push
inc
push
out
popf
imul
cmp
mov
dec
rcrl
or
daa
sbb
xlat
sbb
int3
pop
xor
cs
in
mov
or
inc
rcll
arpl
mov
mov
pop
xor
subl
sub
mov
xor
xchg
push
sbb
adcl
js
int
xchg
sub
xchg
les
out
cli
sbb
movsb
adc
xor
adc
dec
montmul
cmpsb
inc
mov
jecxz
or
add
into
or
jbe
insb
cltd
push
orl
int
sub
mov
or
xchg
cwtl
enter
repz
push
sbb
fisubs
ret
pop
xor
sub
sub
cmp
push
mov
mov
ds
frndint
push
ret
nop
add
and
adcb
lods
add
ret
mov
cmp
mov
pop
mov
data16
repz
fcmovu
mov
mov
stc
mov
cmc
push
jns
xor
fldenv
out
push
xchg
jb
mov
das
xchg
adc
dec
cmp
imul
flds
test
arpl
push
jecxz
mov
es
pop
mov
mov
add
xor
ss
xchg
mov
mov
sbb
push
lret
inc
nop
sub
lea
dec
xchg
cmp
inc
nop
insl
imul
cmpsb
lcall
or
nop
nop
ljmp
mov
mov
jno
adc
and
cs
cmpsl
loope
push
sahf
in
lahf
enter
ds
adcb
and
adc
jno
outsl
and
iret
dec
sbb
or
test
or
pop
sbb
lcall
add
and
or
fcmovb
pop
adc
and
mov
adc
lock
into
sarb
rcrl
ficompl
das
dec
mov
sbb
cltd
movsb
adc
xor
add
lea
pop
dec
and
xchg
push
les
mov
dec
sbbl
frstor
pop
push
pop
pop
push
arpl
aas
rorb
add
xchg
ja
imul
ficompl
mov
or
insb
int
inc
addr16
lds
lcall
xchg
inc
out
arpl
in
add
xchg
addr16
and
mov
sbb
push
mov
adc
dec
sbb
enter
and
push
xor
mov
imul
rcll
or
sbb
fdivs
int3
in
adc
repz
lahf
xor
test
or
lret
loop
fmuls
cmp
fnstcw
pop
pop
hlt
sbb
cmpsb
inc
call
jp
lret
scas
ror
pop
imul
arpl
mov
cwtl
popa
ret
mov
push
add
loopne
scas
sub
add
push
rolb
adc
push
sahf
or
jl
mov
dec
push
jns
or
sbb
pop
or
push
cmpsl
push
nop
push
push
sbb
fldl2e
fsubs
call
mov
push
cmp
xchg
sub
cmp
cmp
das
jbe
dec
mov
and
je
je
ret
sub
shll
push
aam
dec
adc
jnp,pn
daa
pop
jo
into
loope
xchg
inc
mov
mov
dec
xor
pop
and
jecxz
or
push
and
lret
int3
das
add
popa
imul
jns
push
hlt
dec
sti
lcall
inc
addr16
xchg
pop
mov
adc
xchg
std
mov
aam
jmp
xor
xor
pcmpeqw
pusha
stc
adc
nop
jo
rcll
lock
sbb
cmp
dec
cli
inc
jo
sbb
mov
sbb
and
adc
mov
xchg
stc
mov
cmp
insl
dec
and
orb
cmc
jmp
sub
hlt
std
test
jae
cltd
push
or
cmp
adc
int
xchg
push
mov
dec
arpl
jl
pop
xchg
scas
inc
int
sbb
sbb
sti
mov
addr16
add
dec
pushf
sbb
xchg
popf
orl
mov
fs
leave
addr16
loopne
sahf
lcall
pop
and
insb
or
or
xchg
push
ficompl
bound
inc
lahf
push
test
dec
sbb
xor
mov
in
sub
jg
sarb
push
inc
out
icebp
jp
lret
mov
sahf
faddl
setg
dec
aam
sub
xchg
push
mov
sbb
push
lret
cld
pop
xor
xchg
sub
lret
mov
imul
iret
add
dec
pop
test
cmova
fs
adc
adc
and
sub
and
pop
xchg
outsl
mov
pop
or
adc
fistps
mov
dec
lret
add
and
dec
in
cli
test
rolb
sarb
insl
ud0
xchg
jno
pop
push
xor
dec
jmp
nop
jecxz
sub
ret
lahf
push
les
shrl
mov
addr16
inc
mov
push
add
fiaddl
and
dec
add
mov
sbb
lret
aaa
loop
mov
into
sbb
pusha
cs
push
ffreep
mov
push
sbb
xlat
insb
xor
imul
imul
rol
mov
sub
insb
cmc
ficomps
mov
mov
mov
es
out
or
mov
mov
mov
repnz
push
lret
pop
mov
mov
pop
push
sahf
mov
fadds
int
jp
mov
test
into
cli
imul
dec
adc
loope
dec
ficoml
addl
les
sbb
sti
lahf
dec
outsl
mov
push
dec
push
xchg
dec
push
xchg
adc
stc
xchg
mov
dec
popf
jecxz
mov
imul
dec
into
orl
xchg
jle
cwtl
scas
add
pop
mov
lret
lret
dec
push
xor
je
push
mov
mov
adc
cmpb
dec
push
dec
xchg
inc
or
dec
std
in
jp
imul
mov
seto
xor
push
nop
dec
xchg
dec
push
sub
or
pop
push
loop
int3
cmp
in
outsb
xchg
clc
add
inc
xor
fsubrs
push
daa
out
es
pushw
cli
addb
inc
lock
pop
adc
mov
sbb
sub
mov
in
fisubs
shlb
jmp
std
push
mov
test
push
sbb
adc
inc
inc
sub
addl
push
jno
and
je
pop
int
xor
fmull
cmove
dec
cmp
xor
cmc
bndldx
xacquire
jae
fwait
outsl
fcomps
outsl
push
mov
psubw
xor
ficoml
inc
sub
inc
dec
mov
add
insb
daa
dec
leave
nop
mov
push
orb
mov
mov
pop
dec
mov
int3
xchg
mov
add
cmp
icebp
andb
mov
mov
sub
dec
mov
push
std
mov
mov
iret
fld
or
insb
jno
sbb
jne
mov
add
insb
outsl
das
inc
addr16
mov
push
insl
out
ds
fsubrl
add
out
repz
test
ss
dec
lret
cli
push
leave
rcrb
and
jae
xchg
xchg
jne
push
jnp
pop
fiadds
roll
mov
jae
mov
pop
test
lret
sti
mov
xchg
jg
cltd
test
jno
mov
add
cmp
daa
or
sub
fisttpl
inc
sub
cmp
jb
xchg
cmp
aad
push
adc
aas
ja
jae
sub
dec
lahf
jmp
stos
sbb
add
mov
push
bound
les
sbb
cmpsl
xlat
pop
inc
mov
add
adc
inc
push
pop
sahf
mov
fcompl
jne
jge
lret
call
cmp
inc
pusha
cmpb
fmul
iret
addl
mov
and
or
je
adc
ljmp
push
and
mov
clc
sub
pop
repnz
orl
jmp
rol
or
xor
call
lcall
jg
mov
sbb
lds
imul
mov
cwtl
pop
rcll
add
dec
or
add
stos
and
psubw
cmp
leave
pushf
packssdw
pop
xchg
and
or
lcall
push
test
arpl
dec
and
inc
jl
xchg
and
inc
push
sbb
test
out
incl
stc
outsb
sahf
pop
xchg
nop
cmpsl
lds
add
xor
inc
lahf
mov
out
push
inc
pop
cmp
cmc
js
int3
leave
pop
pop
packuswb
aas
pop
push
test
scas
xorl
testl
pop
int
jno
inc
aaa
cmp
pop
cmpsb
rclb
cs
or
outsl
dec
out
outsb
push
sbb
lsl
cmpsb
inc
mov
xor
dec
les
mov
jne
jle
das
and
inc
inc
mov
in
sbb
push
jnp
xlat
sbb
shl
push
push
add
xchg
pushf
test
xchg
ds
jge
cmp
jae
push
movsb
roll
cs
jcxz
into
sbb
pushf
cmp
pop
push
push
cmc
mov
out
nop
rcr
sbb
or
shlb
xlat
push
pushf
push
xor
xor
addr16
xor
inc
cmp
aaa
and
stc
pop
jmp
mov
mov
test
push
xor
iret
sbb
aaa
lret
xlat
push
and
xchg
mov
adc
lret
jge
xlat
add
inc
push
mov
xchg
and
xchg
and
hlt
jg
xchg
movups
inc
dec
fwait
repz
lret
es
adc
pop
adcl
mov
or
push
fnsetpm(287
inc
pop
xchg
xor
dec
enter
movsl
dec
ficomps
jecxz
inc
sbb
or
mov
daa
dec
aad
push
sbb
cmp
dec
and
mov
lcall
or
outsb
movsl
fsubrl
mov
rcll
mov
lods
sub
mov
loope
mov
mov
dec
push
xchg
lock
ljmp
push
roll
xchg
enter
lret
std
dec
imul
and
mov
sub
sub
sbb
or
int3
jmp
or
mov
rorl
jo
dec
pop
mov
in
ss
shll
push
sub
jp
and
popa
pop
bound
lret
jp
adc
fucomip
insl
lret
dec
test
mov
insb
mov
pop
sub
or
mov
add
fists
or
int3
dec
shll
xor
dec
xor
push
jecxz
mov
add
mov
shlb
mov
push
add
nop
ret
push
loop
stos
xlat
test
pop
push
rcrl
stos
inc
dec
add
dec
adc
pushf
into
xchg
aas
add
dec
pop
cwtl
xchg
std
inc
xor
into
add
xchg
lret
adc
je
add
idivl
nop
adcb
mov
sub
popf
dec
adc
int
enter
lret
adc
sbb
insb
and
push
and
iret
sub
into
xchg
mov
mov
test
sbb
add
inc
sbb
into
rorl
mov
dec
loopne
lcall
int
mov
dec
lret
inc
lret
mov
xchg
es
test
push
add
nop
or
inc
ss
dec
pop
int
mov
inc
mov
sub
outsb
inc
push
sbb
cmp
push
sub
push
push
add
je
inc
sub
pop
sub
mov
mov
pop
ljmp
lahf
lret
lods
push
sbb
inc
fwait
xchg
rolb
inc
mov
mov
lcall
mov
sbb
mov
mov
cmp
push
scas
cld
xor
subl
xor
mov
cmpsl
mov
xchg
mov
mov
or
mov
cmpsb
dec
mov
dec
shlb
pop
fcmovb
out
pop
movsl
or
mov
or
ss
xchg
mov
push
stc
xor
imul
and
xchg
cmpsl
jle
xchg
or
jne
pop
rorb
add
push
or
imul
mov
adc
pop
mov
mov
xor
mov
mov
int3
int3
movsb
imul
dec
loope
aam
dec
cmc
addr16
pop
cmp
stos
inc
daa
adcb
cmpxchg
mov
and
dec
adc
lcall
rcrb
push
fs
popa
cmc
movlps
or
push
adc
out
adc
fwait
mov
dec
mov
ficoml
fsubl
mov
outsb
loopne
adc
lret
add
in
test
mov
cli
lods
rorl
mov
fmuls
mov
sub
popf
scas
or
push
push
cli
lods
pusha
lock
dec
push
lea
push
out
rorb
and
jl
mov
xor
ror
mov
ds
mov
mov
sub
inc
stc
add
fmull
push
or
dec
xchg
ds
negb
adc
bound
mov
sbb
cmp
shll
arpl
into
test
iret
push
mull
inc
or
popf
popa
push
pop
push
fs
adc
pop
adc
xchg
ljmp
mov
arpl
aam
out
mov
mov
or
mov
push
sub
mov
dec
nop
or
repnz
js
lds
loop
jo
adc
into
pop
adc
jl
xchg
sahf
xlat
sub
mov
scas
fwait
aas
repnz
or
stc
int3
push
push
mov
movsb
adc
insb
mov
rcrl
pop
imul
ret
jg
mov
cmp
ja
jg
inc
int3
inc
insb
pop
das
andb
fildll
adcl
push
jnp
popa
inc
lock
dec
push
mov
push
mov
xor
mov
out
jae
xchg
das
daa
fsts
push
mov
decb
cmp
sub
outsl
xchg
jno
inc
dec
daa
or
xchg
sub
sbb
fmul
in
mov
mov
or
push
outsl
test
sub
pop
and
xor
add
repnz
fisttps
jae
iret
lods
add
sbb
sbb
cmpsb
and
mov
xlat
fucomp
aas
ja
mov
and
lcall
dec
cmp
jns
lret
loope
mov
inc
push
addr16
xor
pop
pushf
lods
sub
mov
out
jno
shrl
push
push
lahf
lea
push
inc
xor
mov
and
lcall
mov
cli
dec
pop
xchg
dec
mov
add
pop
fsubrl
sub
stos
orl
sbb
push
out
or
and
adc
sbb
outsb
push
cmp
inc
ret
fdivl
dec
fisubrl
dec
xchg
fmull
nop
or
dec
push
jns
xlat
jae
sub
jno
mov
stos
adc
lods
test
bound
push
pop
stos
lods
fimull
aas
and
loope
xor
nop
lods
inc
adc
outsl
sub
xchg
adc
sar
sti
mov
pop
fisubs
inc
sub
addr16
cmp
leave
cmp
gs
sub
inc
int3
das
ja
adc
dec
mov
repz
adc
jl
or
int
stos
inc
mov
sub
lret
and
fisttpll
mov
lret
ret
xchg
mov
dec
daa
out
iret
mov
addb
fdivl
adc
adc
adc
inc
dec
push
insl
mov
or
pop
adc
xchg
ficoms
shrl
insl
push
push
testl
loop
xchg
adc
movswl
fwait
cmpsb
push
outsl
mov
sbb
or
inc
or
sbb
or
popa
int
add
mov
xchg
rorl
dec
lahf
mov
or
into
adc
inc
pop
jb
or
call
mov
outsb
pushf
fwait
and
push
add
mov
adc
sahf
xchg
adc
xor
push
pop
lea
outsb
mov
lds
ror
int
fwait
push
cmp
imul
jb
cs
xchg
lods
xor
sub
movsb
or
sub
mov
xchg
xor
xlat
fsts
sub
xor
inc
jle
mov
lcall
push
cld
outsl
not
mov
inc
xchg
fwait
push
sub
sahf
dec
fldenv
aam
fdivp
adc
das
mov
fcom
jge
and
inc
pop
repnz
fwait
mov
xor
cltd
jb
push
sub
or
adc
test
mov
aam
rcrl
rorb
xor
xlat
and
sahf
into
sub
adc
fimuls
pop
rcrb
rclb
outsl
clc
shll
fwait
push
das
and
sahf
into
fnstenv
pop
push
sub
adc
adc
int
fwait
mov
mov
adc
xlat
push
cmp
sub
add
xchg
adc
sti
cmpsb
sbb
out
das
add
add
syscall
add
push
inc
or
or
sbb
nopl
lcall
cwtl
inc
sbb
cmp
lcall
add
fisttps
mov
mov
sub
dec
mov
mov
lea
rcl
cmp
or
push
lods
leave
lret
dec
mov
push
sub
jno
push
or
pushf
int3
sub
dec
cmp
aas
scas
iret
lcall
ficoml
nop
cmp
cmp
xchg
or
out
xor
cmp
fprem1
dec
dec
push
dec
dec
aam
jmp
fcoml
sub
push
std
insb
cmova
cld
std
sbb
popf
iret
imul
cmp
sub
stos
sub
push
dec
pushf
mov
addl
outsb
jb
or
xchg
adc
sbb
out
loopne
out
leave
pushf
ljmp
xchg
cmp
dec
ret
xchg
push
cmpsb
dec
inc
insb
and
adcb
jbe
les
addr16
sbb
inc
cmovp
pop
fwait
scas
out
adc
or
mov
xchg
push
mov
xor
or
xchg
daa
sbb
dec
dec
rcr
cmp
out
mov
and
jg
rcrb
add
out
push
in
loope
mov
test
pop
pop
push
sub
dec
rcrl
adc
push
mov
adc
rcl
mov
adc
cmp
push
xchg
mov
lea
daa
popf
push
mov
aad
adc
adc
xor
loop
mov
push
dec
lcall
mov
pop
sub
clc
cmpsl
xchg
shrl
mov
lret
pusha
cli
int3
rolb
inc
rolb
adc
pusha
rorb
ds
or
mov
dec
cmpsb
mov
andl
sub
aas
hlt
cmp
sub
xchg
xchg
or
addr16
jecxz
or
out
dec
in
or
in
stc
dec
mov
mov
mov
inc
jecxz
mov
paddsw
les
insb
dec
ror
loope
sahf
nop
and
xchg
sbbl
add
aam
xchg
dec
cmc
lahf
and
nop
test
hlt
jno
shrb
les
std
lahf
mov
cmp
jmp
mov
xchg
je
mov
pop
xchg
or
rclb
ljmp
daa
cltd
xchg
gs
fwait
call
cltd
pop
push
xor
mov
xchg
cmc
push
bound
xchg
test
mov
andl
mov
jae
mov
xlat
sti
mov
adc
lret
mov
or
sbb
jb
dec
faddl
mov
cli
nop
dec
xor
popa
icebp
lock
adc
repnz
jno
xchg
test
jns
adc
xchg
outsl
or
fwait
cltd
repz
xchg
fadds
push
dec
or
outsb
pop
cmp
pop
daa
add
pop
push
addr16
push
xchg
aam
in
pop
pop
adc
stos
mov
pop
ds
sub
sub
ljmp
iret
mov
fildl
cs
mov
dec
int3
mov
rcrl
dec
sub
jp
or
xor
ret
stos
dec
sbb
push
push
js
or
adcb
aam
sti
shr
popf
ja
pop
dec
mov
sub
lahf
or
inc
or
inc
xor
fwait
in
stos
fcomip
sbb
cs
ret
addb
xchg
push
jb
test
orb
cwtl
lret
mov
sbb
add
das
lds
push
ficomps
cmpsl
mov
stc
mov
jecxz
pop
jecxz
dec
popf
push
js
call
cmc
dec
enter
mov
lods
or
sbb
add
scas
fwait
nop
mov
mov
jp
leave
inc
into
sahf
cli
push
ds
stc
mov
mov
push
lods
loope
adc
test
inc
sub
pop
int3
gs
ret
mov
pop
sahf
adc
sti
sub
sub
ror
outsl
add
or
push
ljmp
insb
mov
push
lret
les
lcall
xor
and
test
jecxz
jle
int
fmuls
jno
cmp
push
lea
dec
mov
add
push
or
or
lods
dec
jmp
mov
sub
bound
aaa
pop
and
shll
bound
jle
adc
mov
rorb
cmpsb
add
pop
mov
dec
push
mov
mull
fldenv
adc
stc
adc
cltd
daa
mov
notb
shr
test
xchg
push
adc
lahf
dec
flds
lret
mov
push
push
dec
loop
gs
jecxz
mov
lea
pop
jecxz
lock
jmp
repz
xchg
jle
adc
roll
jbe
adc
rclb
add
adc
pushf
adc
jecxz
mov
adc
xchg
or
mov
leave
jp
sub
pop
or
sub
sahf
clc
sub
cli
adc
sbb
mov
popa
fidivrs
xchg
mov
xchg
pop
xchg
or
or
jne
mov
add
pop
notb
addr16
iret
or
orb
sbbb
adc
lods
ja
push
pop
pop
aam
fs
in
imul
in
pop
jecxz
lds
jp
test
inc
mov
int
fists
jmp
jg
inc
fcmovbe
add
fs
xlat
test
sbb
insl
sub
sbb
or
cmp
cld
jmp
xchg
xor
jmp
push
add
jle
les
jae
adcl
aaa
out
adc
aas
mov
pop
adc
mov
jecxz
dec
add
dec
pop
pushf
xor
sub
xchg
aam
fistps
xchg
es
test
ds
sub
lahf
push
fcmovnu
mov
sub
fwait
pop
loope
jnp
mov
mov
adc
stos
push
or
fstp
cltd
sub
jo
lods
jmp
loopne
cli
mov
xor
mov
repz
setae
in
lahf
sbb
push
in
adc
add
xlat
les
jae
jo
fbld
sub
adc
inc
sbbl
lds
fistps
or
or
dec
mov
xchg
test
and
pushf
leave
into
mov
sub
mov
mov
jle
clc
jae
insb
mov
adc
imul
popf
or
test
push
fcomps
daa
pop
in
insl
test
add
xchg
nop
fisubs
mov
lods
sbb
push
jae
or
mov
dec
movsb
inc
fistpl
cmp
nop
inc
test
mov
mov
sub
pop
push
sti
les
pop
add
divb
lahf
adc
inc
xor
outsb
lds
mov
stos
adc
and
inc
xchg
fsts
xor
xor
jecxz
add
push
add
pusha
push
out
in
xchg
dec
fisubl
or
or
stos
adc
insb
lods
stos
and
pushf
xchg
push
pop
xor
push
push
cmpsb
inc
mov
pushf
push
mov
aad
insl
sbb
adc
inc
jge
leave
mov
popf
fwait
xor
mov
fistpll
popl
sbb
lret
push
dec
imul
sbb
mov
jae
es
popf
mov
lods
fidivs
xor
dec
scas
push
aas
push
xor
add
fucomip
jecxz
xchg
aas
gs
loopne
aas
sub
inc
mov
or
ja
pop
jbe
inc
insb
sbb
jne
jb
inc
or
dec
es
sbb
ljmp
movlps
xchg
and
jge
jb
clc
inc
dec
xchg
add
addr16
fdivp
data16
clc
fwait
pop
mov
mov
daa
sahf
lods
or
int
addr16
or
xchg
sub
fnstcw
sub
mov
xor
push
sbb
dec
add
sahf
fucomp
sbb
push
lods
jmp
mov
iret
mov
xor
xchg
inc
rcl
add
sbb
adc
sbb
sbb
push
push
mov
paddusw
adc
out
push
or
imul
shlb
mov
lret
repz
adc
add
popf
jbe
sub
mov
daa
test
sbb
xor
pop
les
lahf
xchg
push
out
pop
sbb
mov
jge
inc
fcomps
mov
fwait
or
fisttps
lock
shll
jo
push
xor
xchg
cmp
and
sahf
lods
inc
add
rorb
cli
enter
xor
or
mov
leave
mov
imul
or
out
jg
pop
ja
jbe
dec
xchg
or
mov
stos
aad
mov
xchg
or
jp
mov
push
cmp
xchg
outsb
pop
into
gs
lcall
mov
mov
lahf
fstpl
js
sbb
add
adc
pusha
stos
out
mov
shrl
mov
and
shl
notb
adc
insb
pop
int3
cwtl
arpl
fsts
dec
bound
shrl
fisttpl
and
outsb
mov
cmpsb
mov
lahf
mov
push
jae
pop
sbb
push
jecxz
lret
adc
enter
cmpl
inc
or
dec
stc
mov
pop
mov
in
sbb
adc
mov
mov
pop
push
or
stc
sub
sti
cmpsl
stos
int
ljmp
out
scas
test
add
sbb
aad
andl
subb
cwtl
cmp
or
cmp
or
ss
mov
into
jp
leave
rol
sbb
dec
sub
mov
repz
dec
adc
stc
pop
jae
mov
push
or
adc
sbb
stc
mov
inc
xor
mov
test
mov
in
pop
andl
rcrl
mov
xor
sbb
cld
inc
mov
ret
cmp
aam
dec
sbb
mov
xchg
jb
in
leave
daa
mov
daa
rclb
inc
sbb
adc
push
lods
mov
loop
icebp
shlb
mov
or
mov
mov
scas
or
sub
adc
mov
jg
mov
dec
loopne
and
pushf
loop
jmp
sbb
imul
or
les
sbb
sar
push
dec
cmp
xchg
pusha
lcall
adc
pop
dec
imul
jnp
inc
jge
mov
xchg
outsb
mov
aad
in
je
or
rorl
cmp
pop
adc
test
add
aad
int3
xor
push
sbb
sbb
jno
cmp
jnp
dec
insb
popa
inc
and
pop
sub
in
adc
insl
or
mov
int3
pushf
sub
xchg
lret
cmp
and
mov
inc
pop
popf
loope
xchg
cmpsb
ds
daa
loopne
dec
lea
or
sahf
inc
adcb
push
mov
sarl
push
inc
fmuls
daa
xchg
xchg
or
enter
xor
imul
add
std
cs
mov
fistpll
add
pop
fistpll
aaa
rclb
inc
sahf
popa
inc
push
mov
cmpsb
fiadds
mulb
dec
add
aaa
lahf
mov
cld
idiv
and
xor
dec
aaa
or
mov
sahf
and
adc
jae
mov
mov
data16
mov
popa
dec
adc
dec
lahf
insl
jmp
lcall
pop
repz
aam
mov
mov
sbb
xchg
or
mov
jecxz
dec
jae
or
inc
mov
mov
push
add
or
in
push
sbb
ret
jecxz
enter
mov
je
mov
dec
in
pop
pusha
in
or
xor
sbb
push
outsb
or
fwait
movd
fimuls
and
out
xchg
push
adc
loope
pushf
or
loope
test
cmp
fisttpl
mov
addr16
test
jno
push
daa
inc
rclb
xor
inc
sub
dec
dec
dec
and
ja
mov
insl
or
repz
xor
push
out
push
dec
fmull
or
or
les
in
in
jae
xchg
or
jl
inc
pop
inc
jecxz
mov
and
jp
int
std
fs
cwtl
cs
sub
insb
push
pop
in
push
lea
jl
or
movups
adc
mov
pop
sbb
leave
sub
popa
or
or
lret
mov
push
or
sbb
xchg
clc
jb
sub
mov
sbb
push
and
sbb
stos
call
sete
lods
rcl
xor
cmp
pop
mov
push
cli
lret
fisubs
pushf
loopne
inc
inc
pop
insb
mov
cmc
outsl
dec
into
sahf
data16
jle
aaa
mov
das
pop
ja
das
lock
leave
dec
push
jp
or
mov
mov
lock
adc
fdivrs
daa
movsb
loop
pcmpgtd
sbb
adc
mov
lret
mov
sbb
xchg
mov
push
inc
pop
faddl
rcll
aaa
mov
pop
cmp
std
dec
or
xor
jp
adc
repz
sbb
pop
fldenv
aad
addr16
and
jle
jns
das
mov
es
xor
pop
lods
adc
pop
sub
pop
int
jp
push
out
pop
sub
stos
in
and
movsl
bndstx
push
push
push
outsb
out
xchg
adc
cmp
mov
xchg
js
test
mov
sub
leave
or
sub
jb
test
mov
dec
and
testb
jp
int
pop
sbb
mov
push
and
sbb
ficomps
mov
push
and
mov
mov
xor
shlb
push
mov
int3
sbb
pop
sub
xor
mov
and
mov
shll
xlat
es
femms
paddq
add
pop
dec
dec
sbb
xchg
dec
jo
stos
or
jp
pop
cli
cmp
push
aam
cmp
sbb
ud2
lds
cmpsl
les
dec
xor
fmuls
shlb
or
aad
lock
pop
insb
pop
jae
ja
les
fs
sbb
push
adc
mov
ljmp
pop
or
adc
mov
fwait
into
int3
mov
les
gs
inc
inc
mov
xchg
add
xchg
mov
and
mov
out
repz
shlb
mov
cmp
or
cmpsb
jp
addr16
lcall
in
pop
adc
dec
xchg
call
pop
adc
inc
sbb
mov
sbb
cmp
xchg
test
pop
daa
pmaxub
cmp
mov
insb
add
in
mov
lods
aam
push
mov
xchg
std
adc
mov
pop
or
mov
test
test
jae
rcr
fs
push
adc
into
sarl
int
int3
ror
adc
shll
jae
loop
popf
fmuls
pop
int3
add
inc
add
xor
leave
imul
mov
movsb
adc
subl
fists
lret
in
ficompl
dec
jnp
mov
out
roll
mov
popf
ljmp
aaa
movsb
dec
jnp
in
pushf
out
xchg
sbb
ljmp
and
int
repnz
sbb
fiadds
lret
and
mov
sbb
pop
add
mov
adc
mov
gs
pop
in
jo
push
into
stos
xchg
mov
std
mov
insb
push
or
jno
jge
or
sub
cmp
js
test
or
stos
cmp
imul
call
jbe
mov
popa
int3
shrl
subl
cmc
aad
push
dec
dec
insl
popf
inc
push
and
xor
insl
fidivrs
mov
xchg
bts
or
int3
insb
mov
pop
mov
addr16
cmpsl
jle
push
dec
into
xchg
pop
or
out
lea
insl
push
nop
fcoms
inc
cli
mov
jo
mov
iret
push
mov
or
lcall
dec
and
movsb
cmp
imul
jp
insb
push
in
pop
push
cmp
andb
aaa
mov
mov
lcall
nop
cltd
dec
int3
and
pop
movsb
das
leave
aas
fwait
adc
sub
jl
mov
daa
push
xchg
movsb
xorb
jecxz
fstpt
ds
nop
push
or
xor
dec
adc
out
outsl
insb
mov
xchg
adc
dec
loop
sub
pushf
xchg
jns
loopne
es
clc
pop
cmpsl
data16
stc
ds
cli
scas
push
xchg
inc
ficompl
cmp
dec
push
jge
and
sbb
or
imul
xor
adc
and
push
sub
push
daa
xlat
dec
mov
nop
mov
movsl
mov
dec
inc
out
dec
addr16
or
mov
test
arpl
push
sbb
pop
sub
int
inc
enter
int
sbb
pop
fisubrl
sbb
call
sub
mov
jecxz
push
pop
std
xor
or
sub
mov
inc
fldl
mov
xor
and
pusha
push
inc
lods
fwait
out
sbb
cmp
call
lret
push
or
into
mov
cli
xor
or
leave
fildl
add
rcl
aam
xchg
test
ret
inc
xor
jo
and
or
adc
xor
mov
sub
into
lret
ss
xor
lods
cmpsl
mov
frstor
dec
in
loope
inc
sbb
sbb
adc
and
pop
or
popf
dec
xchg
xchg
dec
aam
adc
adc
xchg
ret
out
frstor
adc
push
push
nop
aam
dec
or
mov
or
inc
enter
jp
or
lock
push
push
cmp
enter
pop
adc
enter
lahf
sbb
fwait
in
or
and
sub
into
cmpsb
sbb
es
cwtl
lcall
les
push
push
ret
sbb
sub
inc
and
or
xchg
push
fisubrl
dec
insb
out
xchg
mov
test
or
fbld
icebp
int
cwtl
lods
add
mov
fsubl
mov
inc
shr
ljmp
pop
in
mov
fimuls
push
je
fcoms
xchg
fists
andl
adc
lea
and
mov
cmpsl
aas
test
shll
or
lret
fimull
call
inc
push
retw
dec
shll
push
test
mov
adc
mov
add
mov
ret
aaa
dec
xchg
push
mov
push
adc
aad
xchg
mov
pop
dec
leave
xor
es
push
les
adc
jnp
push
add
imul
add
xchg
xchg
out
lods
sbb
repz
ja
mov
icebp
imul
xor
cmc
insb
cmp
and
push
addr16
inc
mov
loop
push
or
daa
or
les
adc
jb
ss
jb
push
lcall
fbld
jmp
dec
fsts
paddw
test
jb
js
notl
cmp
dec
cmp
jno
pushf
sarb
pop
arpl
cmp
push
dec
inc
shrl
mov
dec
push
scas
pop
cmp
fmuls
out
sub
les
iret
push
fimuls
push
sbb
push
ja
les
int3
out
mov
dec
sbb
movsl
dec
cmp
mov
int
lods
push
inc
or
mov
cwtl
inc
test
lret
push
lods
and
mov
push
ficoml
js
testb
xor
mov
mov
add
dec
popf
or
cmpsl
outsb
outsb
mov
in
fs
jecxz
dec
in
leave
mov
mov
dec
push
fnstenv
pop
cmp
pop
pop
lret
test
push
add
test
jb
lahf
sub
ljmp
sahf
fs
jnp
xchg
sbb
lods
arpl
push
push
dec
ljmp
inc
shrb
push
outsl
sub
outsl
imul
adc
lcall
or
push
push
push
cli
fdivrl
daa
pushf
mov
cmc
lods
std
pushf
stos
jno
scas
xchg
mov
push
cmpsl
dec
mov
cmpsb
fcmove
dec
movl
xor
addr16
sub
mov
ret
jne
or
xchg
orb
push
sbb
aam
jp
out
mov
mov
addl
sti
sbb
and
scas
xchg
cmp
sub
mov
dec
dec
push
sub
sbb
dec
stos
lcall
or
rorl
pop
or
mov
adc
pop
mov
ret
cmp
jecxz
rcrb
bound
or
adc
adc
call
xchg
mov
lret
addr16
push
out
in
sarl
pop
loope
shll
js
cmp
insl
inc
dec
mov
jae
jbe
sbb
fwait
adc
adc
lcall
cli
sub
pop
pmaxub
dec
jecxz
fst
xchg
jo
fisubrs
xor
mov
imul
cltd
xchg
fdivrp
or
dec
inc
fisubrl
push
rcrl
jg
inc
adc
in
outsb
and
leave
cld
and
mov
inc
popa
mov
push
loope
or
xor
pop
aam
adc
inc
sbb
mov
jl
dec
cmc
mov
xchg
sbb
add
dec
xor
lahf
xor
add
and
into
xlat
xor
sub
or
adc
sub
xchg
cmp
xchg
sub
jbe
lock
nop
icebp
aas
mov
dec
adc
pop
jno
xchg
jne
pusha
sbb
or
mov
cmove
stos
fdivrs
stos
repnz
or
dec
fadd
xchg
cmp
stos
mov
or
lods
ud0
cmp
leave
mov
and
add
cltd
add
insb
push
push
int
sub
xchg
pop
push
mov
cmpsl
aam
cmp
out
xchg
and
insl
pop
push
cltd
dec
jmp
clc
jbe
xchg
mov
mov
cs
cmp
mov
adc
push
insl
or
cmpsb
sub
mov
out
dec
dec
push
lods
rol
dec
ljmp
mov
inc
mov
sub
sbb
insl
pop
push
fadd
out
lods
dec
adc
add
out
sbb
xor
ficompl
out
hlt
inc
push
dec
scas
xchg
adc
jl
pop
stos
ja
jo
in
dec
cli
les
xor
lret
addr16
push
les
out
test
andb
jae
mov
push
push
fcmove
iret
mov
mov
nop
push
mov
jo
mov
and
out
into
push
pop
mov
mov
push
cmp
push
xor
adc
sub
inc
inc
in
jl
ret
push
push
inc
and
xor
fbstp
stos
or
or
sub
rcll
cmpsl
mov
sub
dec
int
orb
push
mov
rcrb
mov
jmp
xchg
dec
cwtl
dec
out
inc
mov
pop
adc
lcall
mov
aam
xlat
adc
insb
ret
sbb
mov
mov
sbb
mov
add
ja
mul
push
and
pop
mov
int
xor
clc
jecxz
repnz
mov
popa
or
jnp
hlt
jnp
push
xor
add
adc
adc
xlat
lcall
adc
cmp
push
add
cmp
sub
adc
into
jnp
sub
mov
addb
lret
insb
xchg
scas
adc
nop
push
sarl
aam
int
adc
adc
rcrb
sbbb
lock
mov
inc
loope
mov
mov
daa
fcomps
loopne
cmp
dec
mov
or
das
das
loop
mov
or
xchg
mov
push
rclb
iret
jns
push
int
loope
cltd
lret
add
inc
pop
push
in
jnp
mov
sbb
les
rcrl
sbb
and
dec
dec
jp
jecxz
xor
dec
flds
adc
cmp
and
or
dec
dec
dec
lods
inc
lds
je
dec
xchg
adc
sbb
pslld
fwait
mov
xchg
sub
mov
xchg
arpl
add
inc
int3
dec
imul
pop
movsb
lock
test
mov
adc
mov
aad
mov
or
sub
pusha
mov
scas
sub
jae
sub
adc
orb
es
and
imul
mov
xchg
cmp
leave
ja
or
rcrl
inc
push
xchg
lods
inc
dec
xchg
frstor
in
pop
cli
dec
push
lods
nop
jno
stos
ds
stos
clc
xor
stos
cmpsb
jp
mov
push
cli
push
mov
ret
dec
sbb
sbb
stos
sub
adc
xor
mov
dec
ds
push
dec
lcall
cs
sbb
pop
mov
jmp
lods
rorl
imul
repz
je
sub
or
sbb
push
push
jg
test
mov
sbb
pop
mov
sbb
mov
sub
pusha
sub
lahf
push
sub
sbb
test
fiaddl
sub
in
sbb
icebp
aam
in
sub
int
adc
lahf
inc
lods
push
inc
test
pop
add
sbb
test
add
out
cltd
cmpl
test
push
or
rolb
pop
pusha
dec
and
ja
cs
sub
int
les
movsl
mov
sarl
pushf
ret
invd
das
loop
pop
aaa
mov
jl
cmp
or
jnp
ja
aad
or
ret
lcall
and
xchg
and
xchg
push
mov
filds
push
jecxz
mov
stos
adc
dec
mov
mov
pop
fsubl
stc
jge
adc
pop
jbe
cltd
adc
mov
adc
test
push
jne
cmp
aam
jle
adc
jo
sbb
and
into
daa
mov
inc
inc
lods
popf
inc
xor
lods
or
cltd
xchg
iret
cmp
mov
sbb
push
stos
daa
and
push
or
inc
sbb
fbstp
cwtl
dec
pop
mov
pop
mov
sbb
pop
pop
adc
aaa
dec
leave
mov
dec
or
dec
dec
xor
mov
sub
sbb
je
stos
imul
lcall
push
xchg
dec
sbb
or
pusha
dec
add
jo
push
inc
inc
fimuls
es
or
aas
sub
les
cmp
nop
adc
push
add
mov
out
cmp
mov
rclb
les
addr16
mov
dec
jo
pop
pop
mov
pop
pop
xchg
xlat
loope
mov
int3
push
inc
adc
divb
out
mov
push
mov
adc
sub
mov
sbb
mov
aas
adc
push
mov
add
xchg
sahf
pop
test
cmp
sub
cmc
cmc
aam
rorb
add
daa
mov
setne
sub
push
mov
mov
ja
jne
cmp
popa
wbinvd
xchg
inc
cwtl
xchg
jno
dec
sahf
mov
xor
setp
int3
pop
aam
dec
call
scas
cmp
test
push
aam
testb
mov
xchg
popa
mov
or
mov
sahf
in
xchg
mov
fcoml
push
mov
or
fadd
and
lret
daa
cmp
loope
sbb
pop
push
cltd
pop
in
fstp
inc
xchg
pusha
loope
dec
pop
add
jge
pushf
hlt
pop
mov
daa
ds
adc
add
mov
pusha
xor
push
inc
rorb
xor
fisttps
mov
sbb
sub
cmp
or
pop
aam
add
leave
pop
or
lea
lods
aaa
add
mov
dec
jp
int3
sbb
add
sub
and
push
sub
es
aad
lds
jns
loope
dec
adc
cmp
xor
cltd
adc
sahf
push
jmp
and
stc
lret
and
jge
adc
inc
inc
mov
jecxz
orb
xchg
fcmovnu
into
arpl
in
mov
cld
ljmp
dec
fs
in
push
pop
or
mov
sbb
sti
mov
push
test
sub
sbb
lret
jecxz
dec
je
xchg
pop
hlt
rcrb
pop
inc
in
bound
fiaddl
movaps
mov
pop
imul
ja
adc
mov
arpl
in
adc
xor
sub
mov
es
xchg
sub
in
pop
incl
mov
sbb
mov
inc
jbe
push
dec
dec
mov
outsb
mov
sti
bound
or
mov
or
add
fmull
fwait
mov
repnz
in
lahf
mov
cli
popf
push
fucom
js
sbb
inc
cmpsl
jp
lahf
mov
test
xor
add
fisttpll
loope
subb
sarb
test
paddusb
mov
nop
mov
push
lret
sbb
add
dec
jmp
inc
push
mov
insl
fsubl
out
dec
xor
fnsave
addl
pop
jg
loope
enter
pop
mulb
adc
sbb
xchg
mov
iret
cmp
fisttps
ljmp
or
and
add
jecxz
andb
xor
fwait
js
lret
mov
jmp
and
lea
add
and
jle
outsl
test
cmp
dec
inc
movsb
xor
int3
inc
shll
cmpsl
rorb
mov
fstpl
sbb
dec
mov
lea
mov
daa
movsb
cmpsl
pop
cmpsb
mov
push
mov
gs
cltd
xor
popa
adc
mov
dec
popf
jb
or
aas
lods
repz
into
cmp
into
cmp
aam
pushf
test
mov
scas
cmp
sub
push
into
add
sub
cmp
imul
loopne
or
shll
dec
cmp
push
xchg
pop
inc
jecxz
push
jbe
pushf
push
mov
jl
orb
fwait
push
aaa
jecxz
lahf
mov
lea
test
xchg
cltd
push
cld
mov
dec
sbb
insb
xchg
inc
leave
or
inc
adc
pop
or
lods
mov
or
sub
outsb
push
mov
rcr
les
enter
cltd
daa
mov
sbb
pop
dec
mov
xor
inc
out
cmp
mov
insl
fwait
mov
shrb
ds
xor
popf
mov
or
xchg
xchg
mov
or
inc
fcmovb
in
mov
rorl
sub
inc
sub
enter
adc
lods
icebp
fdivrs
movsb
mov
shrl
sub
fisubs
mov
fidivl
imul
les
push
inc
scas
dec
jb
dec
mov
cmp
cmp
adc
push
loop
jl
sar
dec
hlt
push
pop
lret
fcmovne
rcrl
fsts
lea
imul
xchg
adc
std
mov
mov
subb
dec
or
lods
push
lods
movsb
int
out
sbb
stos
lock
adc
jae
mov
inc
push
int3
shld
xor
test
dec
lock
or
insl
ja
mov
push
mov
sub
int3
xchg
xchg
pop
push
or
dec
int3
dec
pop
mov
add
mov
cwtl
adc
jns
lret
jns
daa
loopne
fcoml
mov
pop
movsb
mov
dec
xor
cs
or
inc
push
retw
testb
ss
and
mov
sbb
lods
in
addr16
and
adc
sub
xchg
push
fwait
movsl
inc
xchg
fdivrs
test
ret
pop
clc
xor
mov
push
das
mov
pop
cmpsl
mov
sbb
cli
pop
push
lods
addr16
stos
mov
adc
outsl
int
shlb
out
fcmovb
mov
fwait
or
xor
insl
sub
xchg
inc
dec
xor
icebp
push
cmp
sbb
xor
push
aad
sbb
cmpsb
and
mov
sahf
addr16
lret
push
adc
scas
mov
fs
pop
stc
cmp
in
sbb
leave
jmp
mov
jbe
scas
and
cmp
push
into
daa
adc
dec
fcoms
outsb
mov
sbb
dec
cli
or
push
adc
push
inc
call
int3
int3
loop
xor
fldenv
dec
ljmp
sub
insl
out
xchg
xchg
je
insb
mov
int3
inc
dec
les
lea
outsb
xchg
loop
push
push
daa
pop
mov
nop
rcrb
fsubs
aad
and
push
movb
sbb
aad
fsubrs
xchg
movsb
push
mov
inc
dec
dec
pop
inc
dec
pop
pusha
sub
std
fisttps
outsb
ss
movsb
jg
sub
loopne
dec
gs
fstl
popa
cwtl
dec
mov
fistps
lods
pop
pop
cld
icebp
iret
sbb
daa
loope
loopne
xchg
mov
int
dec
adc
xchg
fistps
jp
jno
mov
jmp
or
dec
aam
fwait
in
mov
push
testb
cmp
mov
and
sbb
ds
jecxz
shrl
jo
dec
or
imul
orl
ds
ficomps
sbbl
das
ret
inc
outsb
sub
nop
pop
pop
or
sub
test
dec
cld
mov
adc
lret
sbb
imul
addr16
jo
test
pop
adc
mov
push
outsl
jo
dec
mov
xchg
jl
popa
mov
sbb
mov
add
xchg
aad
insb
dec
cmovnp
lret
int3
mov
sub
adc
or
pop
sbb
repnz
sub
jae
adc
mov
lods
ret
jl
cmpsb
setae
push
ljmp
xchg
dec
and
mov
pop
insb
sub
insb
nop
lret
mov
jne
xor
cs
imul
insb
adc
outsl
xlat
jecxz
in
mov
mov
lods
push
rcll
fwait
pop
out
adc
pusha
dec
movsl
xchg
loopne
loopne
xchg
subb
popf
cld
ficoms
jle
imul
addr16
mov
sbb
jo
lret
push
dec
out
pop
mov
into
mov
popa
inc
jp
and
jo,pt
cs
dec
fiaddl
adc
mov
and
leave
pop
lcall
inc
mov
push
jle
or
cmp
lods
int
mov
daa
sub
jg
lcall
lret
int
sbb
jle
leave
sbb
xor
fidivrl
test
push
sbb
sbb
jb
mov
sarl
cmp
push
and
and
loopne
dec
scas
mov
sbb
idivl
addr16
jo
cmc
imul
xchg
cmpsl
inc
jmp
les
out
cltd
mov
mov
mov
scas
and
test
orb
fdivr
enter
pop
das
xor
femms
adc
lea
push
cmp
cltd
hlt
icebp
pop
ret
ds
test
and
lret
movsl
sbb
xlat
lahf
xchg
push
and
add
aaa
dec
repnz
adc
fwait
add
mov
xchg
adc
pop
ret
add
cmp
xor
js
xchg
test
sbb
push
aas
aaa
loopne
push
test
fstpt
iret
vmulss
push
or
mov
sahf
add
out
repz
loopne
add
ds
pusha
inc
imul
fldl
out
in
or
mov
push
in
fsub
push
in
sbb
int3
test
inc
push
daa
push
adc
andb
adc
or
mov
push
xchg
addl
sbb
enter
mov
loope
jo
mov
stos
inc
jo
and
sarl
in
sbbb
inc
scas
push
fmull
shll
nop
adc
outsb
sahf
mov
test
cwtl
bound
xchg
and
mov
es
dec
imulb
add
cmp
mov
push
or
hlt
mov
or
push
mov
out
jmp
dec
cltd
scas
jmp
cmp
lret
fnstsw
push
dec
dec
inc
cmp
dec
dec
mov
arpl
push
adc
mov
inc
and
mov
scas
shrb
mov
mov
sbb
sub
mov
dec
inc
mov
mov
xchg
adc
push
fimuls
push
ficompl
jb,pt
dec
cmp
push
dec
mov
rcrb
insb
push
and
adc
gs
pop
adc
inc
scas
pop
in
sub
mov
xchg
pop
pop
pop
cld
xor
mov
popf
cld
out
imul
mov
enter
mov
push
mov
dec
push
bswap
ljmp
sbb
mov
int3
ja
fcmove
adc
mov
ljmp
sub
scas
push
xchg
mov
dec
in
in
xchg
out
jge
xor
ds
into
pause
push
out
jne
ljmp
scas
push
mov
xchg
rcll
lods
and
or
fisubrl
push
dec
les
ss
cmp
in
cmp
xchg
je
adc
and
mov
mov
out
push
int
addr16
mov
imul
sub
aam
ss
push
outsb
cltd
rcll
stos
cs
push
lods
movsl
out
clc
rcrl
in
cld
dec
mov
les
repnz
push
stos
and
jmp
cmp
adc
cmp
adc
jns
lods
icebp
mov
cmc
fidivl
pop
je
dec
jg
cwtl
jne
xrelease
and
jbe
or
jg
aas
cmpsb
ljmp
in
sub
ja
js
lret
lcall
or
dec
xlat
psllw
outsb
xchg
mov
cwtl
sub
add
dec
loope
int3
lret
jmp
add
pusha
pop
mov
xchg
mov
mov
pop
pop
mov
mov
aam
cmc
dec
ljmp
lods
pop
cs
and
orl
pusha
fucom
xor
sbb
or
adc
and
les
inc
cmp
pusha
int3
ds
cmpsb
mov
popa
bound
mov
xchg
mov
xchg
sbb
sbb
jge
cmc
pusha
lret
cmp
inc
xchg
out
pushf
ss
jnp
inc
sbb
mov
push
aad
daa
ror
mov
sub
dec
sub
xor
sub
pop
xchg
into
fnstsw
imul
jle
dec
pop
xchg
aaa
or
xor
fsubs
or
adc
xchg
push
sbb
add
scas
outsb
xchg
fcomps
inc
pushw
sahf
inc
es
fstp
outsb
dec
addr16
call
pop
cltd
push
jb
xor
push
jbe
daa
sbb
xor
cmp
loope
sbb
sbb
add
test
sub
dec
sbb
sbb
push
push
push
sub
xor
int
popf
stos
subb
and
adc
or
mov
das
mov
pusha
orl
in
mov
push
xor
pop
push
xlat
and
mov
in
cli
push
xchg
push
rorl
or
mov
xchg
popa
mull
adc
inc
out
dec
push
push
popa
pop
inc
sbb
push
sbb
dec
push
test
iret
xor
adcl
dec
jecxz
out
shrb
daa
lea
je
or
dec
cmp
push
movsl
enter
xor
scas
cli
add
cli
les
dec
loope,pn
or
xlat
daa
dec
popa
or
or
or
push
sub
int3
movsb
dec
in
lods
lods
loope
push
adc
hlt
sub
daa
mov
push
scas
jge
sbb
or
out
push
jp
popa
out
add
repnz
xor
mov
cmpsb
shlb
outsl
call
jmp
dec
push
icebp
cmp
fsubl
inc
nop
addr16
adcl
pop
aad
je
in
enter
mov
lds
adc
or
or
aad
test
mov
add
pop
bound
in
dec
sub
mov
dec
sbb
adc
insl
outsl
xchg
into
aam
test
sub
aam
repnz
lcall
lret
sub
stos
xchg
lret
mov
pop
dec
add
dec
ljmp
int3
ud1
lods
rolb
pop
inc
lds
mov
sbb
adc
adc
lods
sub
mov
pop
jecxz
add
push
push
inc
pop
loopne
ret
sti
pop
and
notl
push
xor
sub
adc
sbb
or
ljmp
add
data16
les
xchg
lret
inc
and
out
jb
test
pop
fxch
adc
mov
xchg
mov
cld
inc
sbb
mov
push
xor
adc
dec
xchg
les
xchg
push
or
xlat
and
or
out
aad
mov
pop
je
incl
test
xchg
les
das
mov
xor
clc
and
leave
orb
aas
push
jnp
cmp
andb
push
cli
mov
es
loop
push
bound
cltd
push
outsb
lahf
int3
out
pushl
or
in
push
lahf
pop
push
or
loop
or
and
sub
jne
pop
lret
dec
call
sub
or
adc
ret
xchg
cwtl
lahf
push
ret
into
and
push
pop
or
mov
std
sub
les
xchg
sub
call
add
sti
dec
les
push
int3
mov
in
or
xchg
movsb
adc
mov
mov
or
sbb
mov
dec
pop
arpl
sub
lds
jp
add
push
adc
je
test
and
fwait
int
repnz
dec
push
in
repz
jp
jns
sub
cmpsl
pop
mov
scas
leave
mov
ret
cli
insl
test
pop
sub
or
mov
jle
popa
push
cmc
mov
fstpl
cmp
mov
jl
lret
sub
fnsave
adc
mov
sub
leave
dec
jge
aam
mov
ja
shll
sbb
lds
push
mov
pop
decl
pushf
jp
fmulp
jno
dec
mov
inc
sbb
stos
lcall
adc
clc
or
mov
mov
dec
lahf
leave
dec
sbb
sbb
out
push
popf
lret
daa
push
out
imul
adc
add
movsl
dec
pop
popa
shrb
pop
adc
jb
xor
cli
setns
aad
lahf
data16
orl
sbb
lahf
jns
outsl
mov
inc
je
pop
xlat
xor
xor
or
push
jb
rol
fs
in
and
icebp
inc
sub
push
popa
adc
pop
lods
mov
adc
cmp
add
pop
jge
repnz
into
mov
loop
ret
add
dec
mov
dec
inc
jecxz
rorl
inc
ljmp
call
das
inc
lahf
xchg
and
pop
gs
notl
and
jle
adc
cmp
jmp
xchg
adc
sub
scas
loope
xor
daa
push
add
lret
test
aas
dec
mov
lret
fnsaves
rcrb
xchg
cmp
sub
mov
xlat
fwait
scas
les
dec
xchg
fmul
fsts
cmp
mov
pop
mov
add
lahf
cmp
fimull
push
pusha
addr16
int
pushf
xchg
dec
int
pop
lock
pusha
cmc
mov
imul
fldl
dec
pop
dec
sub
dec
insb
push
ss
ds
pop
cmp
sbb
ret
mov
cmpsl
xchg
sahf
loop
out
pop
pop
jle
fxch
cltd
sahf
sbb
adc
mov
xchg
push
adc
sbb
or
insb
dec
rcrl
xchg
mov
sahf
loopne
shlb
jg
je
mov
jp
xchg
mov
sbb
mov
or
mov
ja
lahf
nop
fyl2xp1
adc
int3
and
idiv
dec
cmp
clc
jecxz
insb
out
mov
jbe
lret
xchg
sub
outsb
int3
adc
sbb
lahf
and
push
fwait
sub
mov
lret
into
jo
pop
xlat
inc
fsubr
mov
pop
shll
xor
inc
popa
cmp
xor
nop
rclb
rolb
sbb
sbb
mov
sbb
repnz
adc
xchg
sub
vmread
movsb
leave
pusha
jl
imul
mov
mov
pop
mov
loop
fwait
adc
fadds
notb
dec
in
cmp
jl
mov
sub
aam
or
xchg
cli
sub
or
lret
lds
movsb
sbb
lods
hlt
sbb
lret
cmp
pop
or
insb
cmpsb
shld
mov
subb
mov
adc
mov
lods
dec
stc
fucomp
add
fwait
std
je
mov
cmp
dec
out
pop
push
adc
iret
pop
les
ja
jnp
negb
je
mov
xchg
int3
in
push
popa
ret
mov
fs
mov
es
psubusb
je
ret
xchg
push
sub
xchg
pop
mov
cmp
dec
mov
xchg
sub
in
push
xchg
and
dec
inc
inc
and
push
outsb
dec
pop
adc
into
ficomps
rorb
xchg
dec
sbb
lea
and
prefetch
lds
push
or
or
cmpsb
or
addr16
dec
xchg
push
jecxz
mov
outsl
sub
stc
or
jnp
lcall
rcll
les
add
or
mov
sbb
and
in
dec
and
sub
ss
adc
ds
imul
cmp
in
sti
ljmp
imul
adc
xchg
test
mov
adc
xor
push
or
mov
sbb
push
jo
in
notb
jno
jbe
mov
xor
nop
lds
imul
and
lods
invd
nop
ljmp
imul
stos
pop
xchg
les
aaa
xchg
cld
incb
fs
fimull
dec
push
movsb
iret
lret
sub
loope
lret
sub
pop
adc
lea
iret
aam
lret
clc
mov
fidivl
or
sub
or
in
mov
bound
fdivrs
inc
iret
jg
insb
popf
fisttpll
push
xchg
into
aaa
push
lret
imul
adc
xchg
mov
out
and
lods
adc
sahf
repnz
dec
les
push
sub
push
lret
xor
aam
mov
and
bound
mov
pop
pop
into
xchg
fwait
mov
or
in
and
mov
cmpsb
scas
cli
mov
xor
out
jne
leave
popa
insb
jp
dec
inc
test
xor
sbb
pop
dec
scas
mov
mov
inc
scas
sahf
add
call
dec
in
jl
cld
cli
popa
cld
insb
clc
idivb
lock
mov
scas
xchg
xor
jl
xchg
out
addr16
mov
std
dec
ror
mov
sbb
outsl
test
or
or
fsubrl
jne
pop
mov
cltd
leave
aam
in
jl
loope
push
leave
add
sub
and
xchg
sbb
mov
into
push
pop
adc
dec
daa
push
and
xlat
dec
imul
or
daa
aam
nop
subb
jb
or
les
adc
mov
mov
jg
mov
push
jmp
or
or
lahf
loop
jne
xor
cld
push
inc
pop
lret
ds
int
and
int3
leave
es
inc
enter
cmpsb
test
movsb
movlps
push
mov
popf
jne
sbb
je
xor
xchg
dec
add
jne
lret
or
test
push
cmp
adc
mov
or
xchg
cld
lahf
in
push
jle
aas
dec
scas
stc
les
mov
push
shrl
cmp
dec
or
pushl
jnp
lret
dec
int
std
mov
mov
les
popa
xchg
push
loopne
mov
lahf
call
lods
repnz
dec
adc
mov
cld
fidivrs
jl
popa
lock
mov
fcmovnb
dec
jl
dec
stos
or
sbb
or
loope
or
mov
push
mov
pop
mov
in
fmull
rclb
push
gs
pusha
lret
decl
push
test
mov
inc
stos
mov
sbb
imul
scas
lea
sub
rcl
or
xor
pushf
rorb
xchg
pop
inc
psubd
not
xchg
shll
mov
incb
jo
add
into
jno
popf
sub
pop
adc
aad
lods
add
sbb
sahf
dec
leave
lods
xlat
popf
jb
jae
add
out
loope
std
psubd
add
imull
ds
aam
mov
sbb
mov
sbb
mov
cmp
popf
int
popa
push
clc
and
ret
rcll
or
mov
adc
jno
stos
rol
hlt
testl
or
mov
xchg
dec
jno
and
out
xlat
or
jl
xchg
dec
lcall
jo
jl
loopne
scas
jo
je
fs
std
inc
fs
or
test
xchg
ret
aam
shlb
mov
add
cltd
mov
aad
js
popf
cmp
sbb
pop
movsb
mov
add
pusha
dec
fadds
sub
loope
dec
jno
mov
dec
jmp
icebp
fdiv
inc
inc
push
adc
mov
call
mov
in
testb
inc
rorb
les
sub
dec
cmp
sub
jne
mov
popf
pusha
xor
add
sbb
inc
jp
fs
ds
mov
xchg
shrl
fucompp
sub
ret
int3
aam
dec
fsubrl
or
pusha
les
fadds
adc
aam
xlat
pop
lea
into
mov
mov
and
dec
ljmp
das
pusha
das
adc
adc
fcom
add
sahf
push
or
push
gs
fldt
mov
inc
sahf
pop
shrl
jmp
add
xor
add
push
jp
mov
adc
push
das
push
sbb
lret
adcb
int3
inc
sahf
mov
popa
leave
sbb
loopne
jb
mov
adc
addr16
loope
push
push
and
popf
clc
cmpsb
imul
cmp
push
rep
and
jg
es
inc
xchg
or
adc
fcmove
push
outsl
les
jno
add
mov
add
loopne
ss
daa
mov
mov
movsb
push
mov
xor
nop
addr16
in
int3
lcall
sub
dec
leave
ficoml
jns
dec
es
push
les
push
out
adc
lcall
mov
stos
push
xchg
dec
push
test
push
mov
sbb
cmovo
mov
dec
dec
fimull
jae
mov
stc
data16
rorl
jbe
dec
out
pop
rol
insl
stc
pop
jl
or
jne
shrb
or
push
mov
fbld
leave
and
jmp
jp
inc
adc
xchg
lods
fs
cmp
mov
xor
call
mov
daa
into
lea
lea
js
sbb
sbbb
mov
lea
mov
xchg
popf
dec
outsl
dec
add
or
movsl
cmp
add
out
ret
into
adc
mov
lods
lret
sarb
int3
dec
subb
insb
dec
sbb
mov
les
int3
sub
sbb
lret
mov
mov
and
scas
dec
test
mov
jecxz
mov
shl
adc
mov
add
movsl
movsb
into
decl
insb
mov
call
loopne
test
out
fmul
xchg
xlat
pop
and
inc
testb
mov
iret
insb
loop
fwait
push
adc
ds
insl
sbb
xor
js
pop
sub
cs
push
loopne
subb
mov
repz
cltd
adc
fsubl
mov
and
pushf
or
inc
pop
dec
scas
mov
inc
push
push
or
repz
sub
or
loope
sbb
cmp
idivl
pop
add
ret
imulb
adc
rclb
inc
mov
sub
push
mov
fadd
test
push
js
rclb
insb
adc
popa
adc
mov
fcmove
test
push
test
sahf
rclb
dec
sbb
notl
push
sub
popa
xchg
stos
xor
pop
xor
dec
subl
mov
pop
fsubrs
cmp
insl
adc
push
nopl
push
adc
cmp
pop
sbb
daa
nop
mov
pusha
cwtl
cmp
xchg
and
or
mov
sub
ret
enter
mov
add
sub
push
adc
int
sub
push
dec
ret
rcrl
push
push
jle
dec
xor
lea
sti
inc
mov
push
xchg
cmp
cmp
xor
adc
jae
mov
mov
push
xor
cmp
out
jae
in
and
insb
push
int
cmc
push
daa
je
test
inc
bound
pop
cli
ret
xchg
faddl
ja
ja
ljmp
mov
dec
mov
insl
lret
add
imul
movsl
lahf
daa
xchg
push
int
adc
mov
cld
pop
xchg
xlat
sbb
aam
adc
ret
hlt
push
adc
xor
and
xor
clc
xchg
mov
inc
dec
lahf
push
test
loope
in
adc
push
lcall
daa
cwtl
int3
dec
xor
addr16
lret
lods
sarl
int
int
jmp
test
lret
sub
push
push
sub
cs
xchg
inc
push
push
cwtl
jmp
rcr
xchg
dec
mov
sti
inc
cmp
aam
xchg
fmull
aas
mov
pusha
sub
stos
ud0
and
imul
icebp
dec
mov
sub
jae
mov
pop
jmp
fiadds
mov
adc
dec
fcmove
lods
insb
mov
mov
adc
call
cmpsb
into
movsb
mov
inc
xor
fldl
int3
inc
in
fsts
in
adc
pusha
rclb
das
ja
adc
mov
pop
dec
and
fldcw
xchg
adc
ds
xlat
les
mov
push
into
push
out
or
mov
sub
push
or
scas
lea
loope
mov
sbb
sti
mov
inc
addr16
fs
adc
fs
adc
and
add
mov
sarb
push
mov
mov
inc
jg
lds
icebp
jbe
decb
or
insl
fisttpll
and
cmp
stos
repz
movsb
or
les
inc
outsb
jge
sbb
xchg
xor
insb
loop
into
les
jmp
and
inc
cmp
addr16
sbb
jp
fwait
sub
xchg
ja
ror
stc
add
aaa
ljmpw
stos
xor
mov
mov
xor
les
in
push
add
fs
rcrl
or
ss
pop
adc
xor
jp
comiss
adc
cmp
pushf
dec
fs
sbb
fnstsw
scas
imul
push
mov
pop
xor
cmpsl
dec
sub
dec
xchg
sub
mov
popf
add
sub
sbb
push
les
stos
jae
es
aad
test
fildl
aas
xor
push
pop
push
outsl
pop
rcrb
cmp
and
and
outsl
cmp
adc
inc
sbb
movups
imul
push
pop
insl
imul
arpl
jnp
mov
adc
les
inc
into
mov
jnp
sti
sbb
jo
insl
pop
mov
push
insl
enter
jl
push
loop
scas
aam
mov
cwtl
sub
int
shll
imul
sub
loope
data16
push
pusha
mov
add
jne
xchg
pop
fmuls
insb
xor
or
sbb
outsb
jge
sahf
sbb
xchg
cmp
jb
lret
cli
test
adc
hlt
push
sub
mov
test
outsb
js
cmp
leave
xchg
xor
or
loopne
out
aaa
jne
push
imul
imul
jl
jne
cwtl
lea
adcb
mov
jmp
mov
popf
leave
push
pop
stos
xor
and
jge
ljmp
fnsave
adc
and
fiadds
xchg
xor
cli
jmp
pop
dec
xchg
push
jae
xchg
jae
fstpl
pop
cwtl
ficoms
lcall
sar
adc
les
rorb
insl
jne
xchg
or
ret
wbinvd
mov
insb
dec
xchg
mov
lea
sbb
mov
lcall
movsl
inc
mov
imul
mov
icebp
lea
fsubl
lds
dec
pop
mov
cmp
cwtl
mov
int3
push
pop
movsl
mov
daa
add
add
and
cmpb
xor
push
jbe
jb
adc
xchg
pop
cmp
mov
or
outsl
jp
in
pop
lahf
jnp
and
std
sbb
int3
sbb
mov
jg
jg
out
add
sbb
fcmovb
les
push
push
rcll
pop
into
add
std
outsl
mov
les
movsl
jns
ss
sbb
mov
ret
pop
pop
and
adc
or
out
mov
out
mov
xchg
clc
inc
mov
stos
xor
data16
pop
rcrl
or
sbb
mov
adc
lea
sbb
sarl
cli
dec
dec
sub
out
lret
xor
adc
outsl
inc
xchg
popf
adcb
jle
lahf
xchg
jecxz
out
fistpll
insb
popa
add
dec
in
mov
int3
sub
js
cmp
fdivl
pop
dec
ja
pop
dec
pop
rol
inc
pop
out
and
mov
fdivs
insb
xor
aam
pop
dec
cmp
push
sbb
sbb
add
sbb
xchg
push
adc
adc
sahf
enter
insb
mov
jne
push
or
push
stc
iret
mov
or
sarb
dec
jmp
les
sub
cmp
pop
cs
aam
or
sbb
fidivl
and
aad
mov
rcr
mov
add
pop
sbb
pop
popl
xor
pop
push
mov
mov
xor
mov
cli
outsb
dec
jae
pop
test
addr16
dec
mov
pop
fimuls
xchg
adc
or
mov
lret
xor
dec
or
cmpsl
cltd
les
test
mul
test
push
mov
or
sahf
sbb
push
adc
xchg
ljmp
push
andb
nop
iret
pop
loop
es
fs
sbb
int3
jp
dec
and
lds
lret
fdivs
sbb
dec
dec
xchg
push
xlat
sbb
cli
or
inc
test
jae
sub
xchg
sub
lahf
cmp
xchg
pushf
and
xlat
cli
pusha
test
lods
adc
pop
sub
inc
aad
inc
fldenv
lock
or
sbb
inc
lock
les
iret
mov
movsb
fcompl
movsb
cli
subb
or
push
add
pop
lods
push
mov
sub
fmull
sbb
jg
pusha
sbb
into
sub
inc
addr16
adc
scas
pop
or
nop
xchg
inc
adcl
movsb
hlt
or
xchg
and
sub
inc
addr16
int
pop
out
test
ja
adc
lcall
faddl
xchg
adc
in
mov
inc
dec
test
adc
push
outsl
cmpsl
cld
mov
outsl
lcall
lods
push
add
jae
in
roll
shl
in
cmp
jl
mov
push
movaps
insb
jo
pop
fnstcw
rcr
int3
inc
loope
pusha
flds
icebp
es
test
jle
leave
mov
pop
xchg
push
stc
xchg
out
xchg
stos
fs
or
push
or
movl
std
lahf
out
leave
push
dec
scas
in
xlat
or
mov
popf
sbb
insb
into
sub
cmpsl
pop
jecxz
mov
insl
imul
add
inc
add
movsb
jae
addr16
pushf
mov
outsb
mov
bound
mov
push
andb
fists
popa
sbb
jp
addr16
cmp
pop
xor
mov
insb
fimull
test
movb
iret
push
leave
sbb
mov
push
cmp
pop
sti
pop
and
ret
insb
xlat
fimull
popa
and
cmp
cmp
jno
sahf
cmp
mov
or
or
insb
ret
mov
adc
inc
outsb
test
sub
enter
outsl
add
scas
cmp
les
fisttpll
pop
or
xchg
out
iret
pusha
nop
pop
mov
ljmp
dec
or
push
inc
mov
in
and
test
call
xchg
or
jns
dec
dec
aam
insl
iret
daa
and
mov
les
push
push
fldl
iret
xchg
bound
int
out
fsubrs
insl
sbb
xor
adc
and
xor
rorl
in
std
sbb
inc
adc
cmp
pop
sbb
mull
and
clc
mov
in
pop
add
aaa
dec
out
inc
cmp
jp
cwtl
sub
xchg
stc
mov
inc
add
xchg
cmp
mov
rcr
cmpsb
push
pushf
xchg
fwait
push
fwait
push
les
ss
sub
mov
cmpsl
adc
gs
dec
jmp
jl
imul
call
addr16
mov
test
adc
pop
les
mov
pusha
addr16
ja
and
lret
shrl
or
dec
sbb
fnstenv
fisttpll
shrb
cwtl
test
sbb
or
push
sbb
or
jmp
lahf
or
aam
dec
cmp
in
mov
int3
ud2
add
inc
xchg
dec
sub
sub
xchg
lods
pop
pop
out
sub
insl
sub
sub
fdivrs
cmpsb
int
sahf
mov
sbb
inc
mov
mov
xchg
fdivr
adc
sub
dec
sub
adc
loope
jmp
push
addr16
pop
xor
movsl
pop
push
sub
dec
mov
ret
mov
sbb
rcr
mov
pop
pop
faddl
xchg
fwait
mov
mov
mov
sarb
ss
mov
mov
mov
mov
push
jmp
pop
dec
stc
outsb
out
mov
insb
fldpi
pop
xor
cwtl
push
sbb
lods
mov
and
pop
mov
sbb
adc
fs
xchg
lcall
jno
dec
fmulp
addr16
sub
pop
mov
adc
or
or
lret
xchg
xchg
push
or
xor
pop
pop
stc
dec
mov
or
cmc
loop
adc
ljmp
add
and
push
loope
inc
mov
pop
fstpl
add
cmp
nop
or
dec
pusha
jmp
mov
push
xchg
inc
into
test
sub
mov
sub
or
sub
jmp
pop
pop
lea
icebp
ret
sti
push
dec
mov
add
sub
setp
pop
lret
je
fcoml
sbb
jl
add
popa
std
sub
jmp
in
cltd
sub
and
out
lcall
aas
mov
and
sqrtps
mov
int3
scas
push
xor
inc
lds
sahf
les
pop
push
shr
pop
mul
rolb
lea
mov
xchg
and
xchg
lret
add
add
or
and
xchg
mov
or
adc
fdivrp
push
cmpb
push
les
test
cs
adc
mov
push
xor
leave
jno
xchg
pop
lahf
jecxz
ljmp
inc
inc
iret
cmp
daa
xlat
insl
mov
cltd
push
lds
jno
adc
pop
sbb
push
xchg
cmpsb
dec
sti
dec
fwait
jl
jmp
cmp
cmp
notl
stos
jg
adc
mov
cmc
xchg
pushf
daa
dec
movsb
mov
push
push
adc
mov
loope
insl
aad
clc
xlat
jl
mov
and
sbb
and
jl
push
mov
dec
es
in
cli
sbb
push
ud0
xchg
jno
xchg
xlat
mov
sbb
sub
dec
sbb
ljmp
or
les
in
out
jl
sbb
fwait
movsb
sbbb
pop
or
and
loopne
int
mov
adc
xchg
dec
vpsrad
jecxz
loop
mov
aas
xchg
adc
mov
and
mov
push
loope
lret
lret
adcb
xor
lods
imul
fiaddl
dec
jp
aam
pop
sub
pop
addr16
dec
sub
dec
push
testl
jne,pn
mov
jno
ds
fldenv
incb
ljmp
sahf
adc
faddl
inc
push
and
mov
adc
push
xor
mov
pushw
nopl
aaa
push
out
stos
mov
into
jp
cltd
adc
push
and
jmp
lret
jo
mov
mov
ja
jmp
dec
add
adcb
adc
mov
mov
loop
xor
jp
lea
je
mov
sahf
dec
insl
cmp
add
jno
pop
mov
sbb
out
sbb
nop
addr16
add
mov
rclb
or
push
add
mov
fs
sub
and
jb
imul
call
les
push
data16
push
and
sbb
loopne
mov
fistl
mov
outsl
popa
jmp
ss
adc
shrb
pop
xchg
push
les
mov
dec
mov
leave
dec
cmp
cmp
push
push
pop
scas
xchg
mov
add
mov
lcall
loop
aas
iret
push
fwait
cli
fwait
rorb
fst
ja
sbb
inc
xor
das
and
ljmp
pop
lods
inc
popl
stos
xchg
cmp
dec
pop
dec
mov
cs
dec
xor
dec
inc
add
and
xchg
mov
into
or
sub
push
xchg
lea
inc
push
mov
push
push
and
xchg
cmp
aad
add
and
mov
dec
out
pusha
test
lahf
clc
mov
shl
and
inc
push
sahf
or
std
adc
mov
dec
mov
mov
adc
mov
stos
cli
popa
outsl
push
addb
xor
or
cmp
add
arpl
outsb
insb
mov
mov
and
nop
popa
mov
add
pop
mov
xchg
mov
in
and
sub
sbb
or
pusha
dec
push
into
rcrb
push
mov
pop
xchg
nop
mov
mov
ss
stc
pop
push
xchg
mov
xor
mov
add
cltd
addr16
cmp
push
mov
adc
push
hlt
loopne
cmpsl
sub
fsubs
out
mov
push
mov
sub
push
xor
dec
sub
jle
add
sbb
dec
cwtl
push
or
push
cli
cld
aam
insb
push
pop
or
into
pop
popf
add
loopne
sub
les
sub
les
cld
in
dec
xor
and
inc
inc
xchg
nop
aam
in
mov
xchg
xchg
add
loope
push
insl
fiaddl
jo
mov
xchg
jecxz
sbb
sahf
dec
test
push
xchg
cwtl
add
dec
xchg
mov
xchg
pop
mov
sahf
jae
push
insl
movups
movsl
movsb
cli
je
dec
pop
in
add
and
insb
pop
int3
incl
or
cmp
lock
dec
add
pop
xchg
test
imul
cmc
loopne
into
xor
inc
std
and
test
mov
popf
addr16
mov
fs
movsl
push
add
xchg
xor
repnz
insb
or
mov
fidivs
adc
add
js
adc
int
or
xlat
stc
xchg
pop
inc
xchg
push
mov
stos
arpl
inc
or
divl
cmp
xor
mov
push
or
lea
les
mov
lret
ljmp
imul
lret
push
jae
mov
mov
sub
cmp
idivl
fcomps
pop
pop
dec
call
pop
jge
int3
inc
push
cmp
sbb
fldcw
loopne
jnp
cltd
imul
mov
push
mov
movsb
inc
jle
fmul
fwait
loope
sbb
sbb
jmp
dec
insb
test
rorb
push
jns
test
mov
js
nopl
or
jne
and
pop
cmp
mov
ror
inc
sbb
pusha
jns
pop
dec
xchg
sub
push
xchg
add
pop
sbb
lds
sbb
loop
or
add
push
daa
xchg
addr16
push
add
adc
fsubr
test
lahf
push
adc
xor
inc
push
xor
daa
push
loope
imul
addr16
sbb
orb
outsb
or
sub
sbb
jecxz
cmpsb
and
out
xor
sbb
pop
pop
js
popf
nop
xor
lret
pop
xchg
les
das
xchg
and
sbb
jge
sar
push
push
stc
push
sbb
fwait
daa
rolb
nop
ljmp
push
sbb
sub
cwtl
xor
xchg
js
push
cltd
fdivrs
in
xchg
jne
ja
jg
das
je
movsb
push
pusha
in
pop
and
xor
scas
xchg
repz
ds
aad
ljmp
cmp
aaa
xchg
filds
adc
or
sbb
orl
inc
iret
fcoms
or
daa
xchg
idivl
xchg
add
or
xor
cmp
imul
adc
push
aaa
lcall
mov
mov
add
push
cli
imul
leave
dec
push
imul
add
jp
sub
aaa
sub
sti
das
dec
xor
sub
cltd
hlt
lods
sub
ss
arpl
sub
push
push
stc
ljmp
cli
mov
adc
jle
and
adc
push
add
push
arpl
adc
xchg
xchg
icebp
into
lcall
xchg
adc
sarb
xchg
sti
cmp
pop
ficoms
cmp
push
jp
sub
ret
push
xor
adc
ret
sbb
inc
jb
dec
mov
pop
int
dec
mov
rsqrtps
push
adc
mov
imul
mov
in
insl
arpl
xor
mov
bound
insb
in
imul
cmp
mov
bound
sub
pop
cmp
push
inc
lret
icebp
fsubrl
mov
sbb
adc
adc
rcl
insb
out
idivl
push
push
jecxz
push
xor
pop
jl
push
cld
das
adc
push
or
fcmovne
mov
and
add
add
es
lret
mov
pop
jecxz
insb
sbb
add
cwtl
es
mov
in
insl
fwait
ud0
or
mov
jp
add
aad
inc
jne
lahf
xor
and
mov
dec
pop
cmpsb
jo
iret
mov
popf
push
inc
cmc
pop
or
insl
push
sub
lock
dec
ss
mov
ljmp
and
and
xor
cmp
push
or
adc
sub
xor
push
lods
icebp
mov
enter
jp
hlt
add
sarb
jbe
cmp
lret
sbb
test
or
das
add
xchg
loope
mov
xor
mov
sub
ret
mov
dec
add
cmpsb
dec
xlat
stos
xor
das
dec
sbb
stos
adc
insb
mov
sbb
mov
test
or
lods
pop
icebp
lahf
stos
shlb
dec
dec
pop
push
add
adc
xchg
adc
pop
imul
mov
mov
xchg
clc
mov
fwait
and
and
popf
setp
and
pushf
pop
or
mov
adc
mov
sub
std
adc
pop
xor
dec
xchg
xlat
sub
cwtl
add
cli
iret
sub
popf
adc
and
push
mov
insb
adc
inc
add
aad
lret
imul
lcall
out
popf
iret
xor
cmp
fwait
pop
pop
mov
dec
cld
aas
dec
into
xchg
mov
or
inc
xchg
movsb
sbb
dec
je
xor
ja
jno
dec
push
and
push
xchg
inc
cmp
subb
xor
sbb
mov
inc
daa
dec
push
ret
les
ljmp
push
xor
in
mov
sub
imul
xor
pop
cmc
adc
dec
or
je
mov
push
mov
int
xor
lahf
scas
enter
jns
push
insb
mov
or
dec
cmp
cs
push
pop
in
sub
xchg
jae
rclb
add
mov
loope
mov
ja
mov
scas
sub
cmp
mov
xor
xchg
and
pop
add
push
dec
and
xchg
out
mov
cs
xchg
imul
or
arpl
loopne
xor
mov
adc
pusha
mov
pop
lahf
repnz
sub
lcall
adc
push
aas
jae
mov
call
mov
cmpsb
sub
pop
cld
cmpsl
inc
push
pop
xchg
sbb
cmp
ficomps
jnp
cwtl
pop
outsl
in
push
mov
or
pop
push
mov
inc
jmp
push
and
ja
pop
or
pop
jb
gs
flds
or
lods
cli
xor
xor
iret
stc
jae,pn
xchg
cmp
pop
notl
inc
mov
mov
sub
dec
popa
sub
sbb
int3
adc
int
ds
push
sbb
sub
fisubs
addb
cmpsl
pushf
pushf
repnz
adc
sete
push
jnp
xchg
fistpll
dec
mov
jg
adc
jecxz
push
jb
push
xchg
xor
femms
aad
insl
test
adc
xor
jo
fisubrs
dec
out
push
inc
jno
int
aas
xchg
sbb
mov
fdivrl
push
out
or
push
sbb
js
scas
sub
lods
es
call
cli
or
popf
aas
sbbb
loope
xchg
xchg
shrb
push
in
ds
mov
dec
rolb
inc
jmp
sbb
mov
push
dec
lcall
jo
cltd
dec
xchg
jo
aam
push
dec
movsb
sarl
mov
add
adc
in
in
decl
sbb
xor
push
and
arpl
int
sub
les
movsb
int
jbe
fisubl
xchg
jae
sbb
push
cmpsb
dec
jb
test
pusha
decl
fmuls
jg
mov
into
pusha
pop
cmpsl
sub
dec
xchg
clc
fisubrs
mov
mov
push
sahf
dec
adc
repnz
sub
push
jae
imul
inc
test
mov
out
xchg
adc
jecxz
outsb
pop
dec
sub
push
mov
je
iret
or
jo
and
pop
daa
sub
push
pusha
or
sub
dec
jno
sub
inc
adc
adc
cltd
shrb
bound
push
es
lods
pop
push
mov
pop
pushf
inc
enter
push
add
inc
mov
cli
push
jmp
xchg
pushf
adc
jmp
and
push
or
sarl
mov
cmc
leave
push
mov
cmp
push
sahf
mov
test
mov
cmp
inc
movsl
dec
sbb
iret
out
movsb
or
push
outsl
mov
sahf
dec
push
mov
sub
mov
mov
cmp
mov
loope
xchg
fidivs
xchg
ja
mov
js
loope
push
scas
pop
push
sahf
fimull
or
mov
insb
arpl
mov
push
repz
sbb
push
dec
adc
dec
push
pop
loop
jp
out
sub
xor
pop
xor
xchg
into
adc
aaa
sub
sbb
xor
ja
cmp
imul
push
cwtl
adc
pop
or
cmp
into
sahf
adcb
in
inc
dec
or
push
scas
test
daa
addr16
jg
loopne
pop
test
scas
sbb
xor
aaa
lea
sub
jb
cld
mov
clc
adc
enter
mov
je
cmp
daa
movsl
adc
int
unpcklps
or
push
sub
push
and
stos
mov
inc
mov
ljmp
stos
jge
pop
push
cmp
jns
int3
mov
or
insb
mov
pop
stos
pop
sub
cwtl
sahf
push
pop
cmp
rorl
push
add
sbb
cmp
xor
aad
int
xchg
push
les
test
mov
cld
mov
and
mov
push
adc
push
out
sub
jbe
mov
xchg
pop
inc
aam
clc
adc
lcall
jae
rclb
push
xchg
in
popa
jl
aad
cmpsl
cmp
push
mov
inc
in
insl
mov
adc
insl
adc
jo
pusha
cmp
push
cmp
call
adc
mov
xchg
dec
sbb
adc
sub
or
stc
dec
out
imul
xlat
inc
xor
insl
popf
repz
rorb
in
outsb
adc
repz
das
dec
test
pop
jns
dec
adc
lcall
inc
xchg
push
out
ljmp
faddl
push
insb
dec
jns
cmp
stos
mov
inc
inc
mov
inc
jae
mov
or
pop
add
dec
or
lcall
in
sbb
mov
xchg
inc
addr16
out
adc
out
adc
pop
fwait
dec
jo
adc
pop
je
cmp
mov
cs
or
adc
fs
cmc
mov
dec
out
adc
xchg
cmp
mov
and
mov
in
sti
mov
jns
mov
aaa
into
into
int
sbb
jmp
inc
xor
fst
fs
xchg
jecxz
in
sbb
cmp
cwtl
pop
dec
jge
rclb
inc
test
mov
or
aaa
addr16
push
dec
int
jl
mov
add
in
pop
push
shll
push
push
xchg
rsqrtps
mov
cmp
sbb
jno
add
pop
sub
mov
sub
test
push
in
ss
sahf
sub
pop
pusha
mov
add
in
cmp
lcall
mov
daa
into
hlt
in
lods
push
nop
pushf
fnstsw
mov
push
outsl
xor
and
sbb
in
jbe
dec
or
lret
les
ss
cmp
adc
negb
mov
mov
scas
push
lcall
in
data16
sbb
and
and
or
cmp
sub
jnp
clc
jg
lcall
add
insb
fwait
adc
adc
adc
mov
movsb
test
push
cmp
aam
xchg
or
pop
add
rcrb
or
jp
pop
mov
int3
sbb
sbb
dec
or
mov
mov
mov
mov
add
pusha
mov
xlat
jbe
iret
outsl
sbbb
aam
pop
cmp
sahf
xchg
outsl
inc
lahf
dec
and
pop
shr
jp
sbb
out
pop
pop
jl
adc
mov
jecxz
insb
test
xchg
lcall
inc
lahf
ret
cld
adc
dec
and
jl
mov
ror
outsl
or
adc
and
inc
pop
add
push
sti
mov
pop
and
pop
jne
mov
int
scas
dec
add
into
mov
xchg
xor
popf
test
shll
test
mov
adc
add
out
gs
jmp
xchg
ss
ds
call
mov
lret
adc
setg
push
out
jmp
call
les
push
mov
add
sbb
fcom
mov
and
jmp
shl
adc
repnz
push
xchg
decl
xor
outsl
add
cltd
sbb
xchg
fistps
ja
lods
movsl
int
in
inc
push
and
add
repz
push
bound
stc
or
pusha
insl
imul
imul
cwtl
cmc
outsb
fbld
pop
clc
addr16
adc
notl
stos
shlb
or
push
insb
sbb
das
adc
xchg
xchg
adc
mov
xor
pop
lods
xorb
or
mov
jne
hlt
rcl
addl
pushf
or
or
sahf
cmp
fdivl
mov
cs
insl
test
addl
add
out
mov
adc
in
push
mov
xor
inc
lcall
test
pop
inc
rdmsr
mov
xor
adc
pop
pop
aad
nop
sbb
enter
dec
fsubl
mov
frstpm(287
or
dec
test
dec
stc
outsb
jno
mov
fsubrs
push
push
cmp
mov
jmp
pop
rcll
lcall
xor
adc
loope
adc
aas
jno
mov
cltd
pop
cmpsl
out
xor
or
jno
loopne
xchg
sbb
or
lret
stos
or
orb
idiv
mov
xchg
pop
call
xchg
cmpsl
sbbb
testb
sub
and
ds
mov
rol
or
adc
push
sahf
and
lock
rol
adc
stos
iret
cmp
cmpsl
ret
sbb
insb
xchg
sbb
repnz
sarb
add
and
lods
insb
insb
push
fwait
add
add
push
cmova
xchg
cmpsb
xor
nop
add
xchg
cmp
fidivrs
cli
mov
ss
into
clc
mov
mov
and
je
mov
pusha
dec
sbb
push
setb
rcr
sub
or
insb
jo
aad
mov
insb
jne
mov
or
add
data16
je
lret
dec
or
pop
add
add
test
notl
mov
fisttpll
push
push
subb
stc
aas
pop
bswap
push
imul
or
pop
or
or
jl
pop
adc
push
push
mov
sbb
xchg
cmp
pop
xor
mov
xchg
add
xor
stc
and
dec
shl
jnp
mov
sub
test
add
in
push
dec
xchg
or
push
mov
pop
shr
test
push
cld
addr16
mov
add
fcmovu
stos
lock
cmp
scas
sahf
xor
inc
not
adc
and
cmp
test
xor
movsl
mov
add
push
mov
lock
les
shlb
push
pop
adc
out
lret
mov
mov
call
or
in
movl
mov
lcall
mov
pop
addl
mov
pushf
push
add
stos
cmpsb
xchg
std
mov
imul
and
inc
mov
mov
sbb
out
add
cld
inc
loope
dec
adc
dec
nop
enter
scas
cwtl
jl
int
das
xcrypt-ecb
cmpsl
or
arpl
es
in
test
es
sub
adc
icebp
xlat
mov
mov
or
or
fxch
and
mov
lret
sbb
fisttpll
mov
jne
ljmp
xlat
add
adc
cld
pusha
sti
inc
xchg
int
rorl
jb
call
and
scas
fwait
test
mov
xor
ljmp
add
push
insl
sahf
and
pop
lahf
les
sahf
pop
js
sbb
mov
adc
leave
or
mov
shlb
cmp
add
sbb
mov
adc
fsts
xchg
mov
inc
mov
maxps
sbbl
test
fsubr
mov
int3
insl
fwait
mov
outsb
sbb
or
push
insl
or
test
dec
mov
add
push
xlat
pushf
dec
jg
lds
push
mov
cmp
cmpsb
adc
lock
lahf
adc
mov
and
js
lret
xor
into
xchg
dec
rorl
push
fisttps
mov
mov
and
push
mov
shrb
mov
dec
mov
or
int
adc
xchg
sub
and
filds
fadd
push
dec
sub
into
cmp
mov
jge
lea
test
xchg
pop
push
imul
sub
fsubl
dec
cwtl
stc
pop
push
mov
sti
mov
je
imul
pop
mov
loope
dec
test
scas
xchg
setbe
push
push
std
add
stc
imul
call
lods
jbe
inc
fdivrs
mov
test
aas
or
inc
dec
out
sbb
sub
lcall
das
imul
addb
fldcw
leave
mov
jbe
adc
sbb
sbb
jle
ret
ficoms
adc
loopne
or
in
jle
mov
in
sub
or
jle
mov
cmpsl
fwait
rorb
mov
sub
std
sub
add
lcall
ds
in
sahf
ljmp
cmc
mov
push
rol
sub
int
mov
shl
aad
cmp
cwtl
aad
sub
dec
mov
repz
pop
add
inc
shrb
inc
mov
push
xor
aaa
sbb
add
repz
mov
shrb
imul
pusha
leave
push
paddq
das
sbb
sbb
mov
dec
fs
fists
adc
stos
ror
pop
push
scas
pop
pop
jbe
add
pop
dec
add
int3
es
mov
rcll
adc
add
or
and
jb
mov
cmp
mov
jl
test
out
jl
sub
or
out
dec
inc
movsb
out
ss
pusha
fs
pusha
clc
outsl
sub
leave
inc
push
mov
pop
xchg
out
loope
mov
push
lea
push
cmpsb
pushf
push
jae
and
mov
je
mov
inc
push
outsb
push
lcall
je
push
mov
movsb
je
push
xchg
jge
mov
xor
subps
dec
pop
sub
push
push
cwtl
mov
xchg
icebp
or
jns
insb
popf
xchg
and
cmpl
mov
jmp
cltd
jp
mov
data16
sbb
add
adc
sub
les
incl
into
jecxz
rclb
mov
push
imul
ljmp
mov
notb
test
sbb
aad
mov
pop
stos
dec
add
out
cmpl
mov
loop
mov
outsb
mov
adc
dec
repz
test
cltd
test
notb
ja,pt
xor
sbb
clc
mov
movsl
dec
mov
lcall
cmpsl
dec
push
out
xchg
mov
mov
sbb
fmuls
cltd
jl
adc
add
mov
or
adc
lcall
xchg
cs
sbb
or
lcall
sbb
movsl
sbb
mov
in
bsf
pushl
sub
fwait
mov
pop
sub
inc
adc
movsl
inc
inc
fdiv
or
or
xchg
jecxz
jg
sbb
fmuls
jp
fstl
sbb
dec
les
fcmovu
push
cmpsb
inc
loope
xlat
push
add
insb
scas
and
xlat
xor
add
loop
test
insl
xchg
and
push
out
lcall
jecxz
lods
push
movsb
les
jle
ret
rorb
push
in
mov
out
pop
xchg
iret
repz
push
test
mov
or
leave
mov
sbb
lret
lods
xchg
shrl
pop
mov
scas
push
stc
iret
cmp
mov
les
push
scas
pop
shlb
pop
cs
dec
sub
xchg
mov
dec
test
rcll
or
xor
shrb
lock
pop
ficompl
mull
aaa
xchg
fwait
push
lahf
add
push
fdivr
ds
cmp
fists
jmp
test
jmp
mov
add
and
popf
lahf
sbb
inc
mov
pop
xchg
negl
add
in
and
cmp
jb
and
xor
mov
dec
xor
divl
or
pop
testb
pop
outsl
loope
mov
lret
scas
iret
lret
cwtl
jge
or
pop
push
sub
ror
cld
pop
mov
les
xchg
sub
push
in
lock
jae
mov
dec
push
js
cmpsl
shrl
mov
lods
inc
daa
inc
call
insb
daa
jb
aad
mov
js
xchg
ficoml
rorb
or
lcall
and
leave
inc
das
movsl
and
mov
lahf
sbb
push
cltd
dec
fisubrs
fwait
rcl
mov
push
lahf
dec
mov
les
sub
aas
nop
fnstsw
fsubrl
push
push
iret
repnz
push
push
jb
iret
les
push
cmp
push
hlt
test
imul
es
lods
push
dec
sub
push
or
inc
sbb
mov
or
push
prefetch
sub
orl
push
pop
fs
pop
jb
int
and
inc
sub
jge
push
mov
dec
sbb
fmuls
sahf
decl
add
stos
xor
pop
inc
jmp
inc
or
jge
cmc
push
jp
xchg
mov
sbb
and
jecxz
push
and
and
sub
or
jo
dec
movsb
inc
mov
and
mov
outsl
outsb
mov
fisttps
fucomi
ret
push
roll
xchg
xchg
xchg
or
mov
jns
std
ror
jns
mov
jae
jno
jmp
test
jecxz
cmpsb
loopne
jno
nop
jl
adc
mov
inc
push
cmpsb
add
loope
mov
and
lds
dec
stc
adcl
lcall
mov
or
dec
fmulp
pop
push
mov
mov
int
mov
add
nop
fldenv
xchg
aad
sub
bound
lds
and
loope
ljmp
jp
xchg
push
fdivp
push
push
xchg
jl
movsb
pop
rclb
push
xor
jns
leave
mov
int3
adc
aaa
popf
enter
sub
sbb
ret
repnz
lea
fdivrs
pop
ljmp
aam
mov
dec
fstps
xlat
rol
les
dec
int
mov
add
pop
leave
dec
inc
test
out
imul
xlat
cmc
mov
or
dec
add
adc
cmp
fistps
jno
loop
rclb
push
jle
movsl
inc
stos
insl
or
and
xor
lcall
jge
int3
shrl
scas
adc
lock
push
cmp
lods
arpl
jns
mov
xchg
mov
xor
xor
dec
aad
sbb
add
jl
push
dec
push
ffree
mov
in
mov
icebp
hlt
dec
leave
jl
or
push
pop
testl
push
daa
sub
sub
or
sub
lahf
mov
cltd
lcall
pop
lcall
lods
addb
fsubrp
sub
imul
insl
daa
and
jmp
addps
pop
push
or
inc
adc
add
int3
cmpsb
out
dec
into
sbb
lods
test
les
fmuls
scas
dec
push
and
push
sub
into
shrl
fisubs
push
movsb
mov
ret
imul
jg
rorl
inc
push
loopne
pop
xchg
mov
stos
push
sbb
push
mov
imul
insl
fisttps
pop
push
fnstcw
and
fidivs
jb
xchg
jns
mov
jecxz
sub
push
js
in
mov
mov
push
test
sub
jmp
bswap
jp
mov
adc
sar
xlat
je
je
sbb
sub
fadd
jno
pop
adc
adc
cmp
into
icebp
sub
mov
leave
jmp
inc
pop
pop
mulb
pushf
xchg
xchg
sub
aas
sub
ss
push
mov
in
push
cli
mov
cmc
sbb
test
iret
in
popa
in
movaps
data16
clc
inc
je
lahf
sub
pop
mul
test
jne
cltd
or
stos
insl
ret
pusha
mov
shlb
add
xlat
pop
mov
out
in
inc
push
cmpsl
aam
and
jno
outsl
ja
mov
jle
xlat
ljmp
aas
xchg
jp
leave
mov
mov
mov
or
fwait
push
and
icebp
lock
cmpsb
cwtl
stc
push
mov
movsl
jbe
iret
xor
clc
ss
sbb
ljmp
sub
rcl
nop
lea
leave
push
ds
ja
lea
adc
mov
mov
in
mov
jg
and
in
je
jns
sub
leave
mov
mov
push
add
faddl
out
cmp
sub
clc
cmp
mov
dec
mov
lds
and
dec
lret
dec
ss
rclb
int3
dec
in
iret
sbb
xor
insl
xacquire
in
xchg
sbb
fimull
or
jl
cli
adc
dec
popf
ficoms
mov
lds
xor
imulb
imul
or
add
or
pop
mov
pop
pop
mov
adc
outsb
cmp
test
aam
jp
pop
sbb
mov
js
outsb
testb
dec
sub
sbb
jp
es
push
aam
mov
sub
lret
pop
inc
daa
icebp
int3
jbe
add
lret
mov
sar
es
or
mov
repnz
adc
shlb
add
ffreep
les
pop
and
inc
mov
sahf
push
pop
cmp
cmp
aaa
push
sub
push
sub
into
or
and
cmc
xchg
cmp
dec
aaa
rol
inc
rcrb
and
outsl
jne
lods
push
fsubrl
jl
aad
data16
movsl
fildll
sub
in
lcall
push
xor
outsb
fsub
lcall
mov
sub
xchg
cs
js
sbb
mov
pop
fisttps
or
jmp
inc
add
outsb
mov
xor
call
popf
mov
fcomps
aam
arpl
es
add
lcall
ret
je
cs
imul
jle
pop
setbe
pop
jnp
sbb
in
jg
xchg
adc
sbb
xchg
stc
push
daa
cld
jecxz
xor
jb
jae
outsb
ret
jb
mov
dec
push
stos
and
add
jge
mov
xor
sbb
mov
in
push
bts
es
mov
xchg
lcall
pushf
addl
popa
sbb
xchg
shll
dec
mov
icebp
nop
lea
and
push
push
mov
push
jmp
jecxz
xor
dec
pop
inc
or
pop
push
dec
pop
pop
dec
sub
push
iret
sbb
xchg
ret
scas
dec
lret
test
mov
xchg
sbb
ret
push
test
push
lahf
xor
pop
arpl
sbb
adc
mov
loope
cmp
or
rcrb
jae
daa
push
lcall
lods
jp
or
mov
xchg
stos
dec
sahf
add
mov
xor
int3
ss
out
aas
xchg
adc
pop
dec
xchg
into
popl
or
arpl
add
add
sbb
mov
inc
push
clc
iret
scas
arpl
call
mov
jp
cld
daa
xchg
sub
dec
and
pop
lods
sbb
sub
pop
subb
or
shr
cwtl
popf
sbb
sbb
mov
fstps
jbe
xchg
outsl
pop
mov
push
sub
inc
repz
mov
test
sub
mov
xor
jg
add
adc
lock
insl
ja
fnstsw
push
in
sbb
inc
stos
andb
cmp
sarl
sbb
mov
fmull
inc
or
dec
pop
aam
cmp
and
xchg
add
call
mov
scas
cmp
insl
iret
inc
clc
scas
rclb
outsl
inc
dec
add
adc
int3
mov
sbb
push
popf
adc
gs
lds
fistps
sbb
icebp
lret
movsb
push
leave
fistpl
inc
push
scas
mov
les
test
mov
cltd
push
insb
negl
aas
adc
mov
push
arpl
rcl
scas
dec
mov
pop
inc
cmpsb
dec
repz
sbb
std
inc
lock
test
cmc
xchg
ret
jb
lea
arpl
aas
cmc
shrl
dec
inc
pop
xchg
sub
xor
fbstp
movsb
lods
adc
jae
stos
mov
in
cltd
sbbb
fsts
lcall
jno
emms
mov
adc
vpunpckldq
jo
fisttpll
lret
jae
fldt
test
fmull
mov
sub
sub
push
cmp
shlb
jle
jecxz
loope
in
arpl
pop
das
inc
xlat
int3
sub
sub
adc
repnz
test
insb
imul
add
scas
dec
pop
push
pop
and
int3
dec
jmp
push
xchg
aam
rcrb
mov
push
fdivr
mov
inc
sbb
je
loop
sbb
arpl
add
test
inc
movsl
aas
sub
cmpl
cmp
in
lods
leave
into
ss
jo
movsb
xchg
or
stos
mov
mov
or
ja
cs
popf
add
xchg
or
into
sub
push
into
and
pop
shlb
xchg
lea
test
in
scas
mov
add
sbb
lods
sub
lcall
push
xchg
or
mov
pop
icebp
leave
stos
shr
cmp
imul
testb
ljmp
and
mov
jl
or
fimuls
xor
xchg
cmp
fsubrs
mov
and
pop
cltd
mov
push
cmp
mov
lcall
bound
sbb
das
cmp
mov
sbb
or
jecxz
rcr
cvtps2dq
or
btl
mov
cltd
cmp
rorb
ja
test
jae
push
adcb
mov
aam
pop
xchg
lcall
sbb
rorl
or
data16
cmp
insl
test
pop
xchg
gs
add
mov
fs
dec
inc
out
pop
cmp
iret
cld
in
subb
jbe
lret
lods
xchg
pop
popf
mov
fmuls
rclb
shrl
insl
popf
pop
cmp
sbb
mov
loop
out
int3
add
mov
cs
pop
pop
clc
push
mov
int
fistps
mov
xchg
bound
repz
adc
inc
or
dec
sbb
stc
xor
repnz
cltd
xchg
test
mov
stos
sub
or
or
dec
mov
loopne
xchg
int
scas
inc
mov
sbb
bound
ja
mov
add
ror
fdiv
push
inc
cs
cmp
dec
cmp
imul
mov
pop
xchg
imul
aaa
addr16
mov
fsub
rcl
xor
pop
push
dec
fdivr
daa
sahf
xchg
jnp
adc
add
cmp
cwtl
xchg
adc
icebp
mov
cmp
das
test
add
push
and
repz
lcall
cmp
jo
push
inc
cmp
fildl
jno
insl
lcall
sbb
stos
sub
fcomps
lods
push
cld
pop
nop
dec
ficoms
and
fcoms
push
mov
mov
adc
popf
xchg
pushf
or
pop
iret
and
push
ljmp
jb
pop
mov
repz
repz
loopne
xlat
fwait
imul
pop
sub
mov
push
test
push
fsubr
xchg
inc
xchg
pop
push
sahf
ljmp
dec
pop
jae
adc
add
shlb
push
into
shrl
mov
xchg
xor
sbb
jb
jl
hlt
lret
iret
sub
push
stos
sub
mov
jns
mov
push
cmp
or
jl
fadds
cmp
js,pn
shr
and
sub
mov
pop
idivb
popl
sub
ljmp
cmp
mov
sbb
sbb
mov
stos
arpl
sbb
mov
mov
mov
cmpsb
call
push
dec
mov
pusha
cmc
add
inc
mov
imul
movsl
lret
mov
mov
shrl
ljmp
fistps
xor
out
test
mov
fldl
mov
aas
add
xchg
testb
daa
int3
lea
sar
mov
setbe
or
mov
dec
adc
dec
jb
adc
cli
enter
or
movsb
cmp
test
bound
sbb
mov
inc
and
jl
js
sbb
pushf
in
scas
test
jle
xchg
push
adc
dec
pop
xor
sbb
enter
or
add
addr16
mov
add
into
adc
push
ja
or
add
push
push
dec
lods
sub
dec
push
xlat
inc
daa
int3
lods
cltd
mov
es
push
mov
mov
xlat
inc
xchg
mov
push
leave
js
sub
mov
pop
mov
mov
mov
sbb
mov
push
xlat
inc
mov
add
xchg
jnp
adc
incb
pop
decl
nop
int3
dec
mov
in
mov
imul
insl
bound
outsb
fstps
and
out
movsb
inc
pop
mov
int
aam
or
cmp
int3
jnp
fdivrs
fsts
outsb
int
or
pop
adc
jp
daa
dec
or
dec
push
pop
int3
add
cmp
pop
sbb
enter
movsb
push
dec
cs
sbb
push
add
xor
or
outsb
leave
das
aam
xchg
and
mov
inc
ror
lahf
icebp
sub
addb
out
and
inc
inc
mov
adc
or
fcomps
flds
imul
pop
iret
or
mov
cld
adc
call
ret
jne
push
mov
call
leave
sahf
xchg
daa
fstps
jbe
push
push
adc
lds
inc
sti
mov
sbb
fdivs
lcall
or
sbb
or
std
mov
xchg
cld
and
or
mov
sub
scas
dec
xor
daa
mov
iret
sbb
insb
addr16
inc
add
ret
arpl
mov
mov
push
mov
popf
sub
adc
dec
dec
fadds
daa
push
pop
mov
aam
push
lea
xor
int
sub
inc
cmp
pop
loopne
or
jecxz
movsb
adc
push
and
or
or
cmp
pop
jne
mov
jae
outsb
movsb
sbbl
or
ficompl
jns
nop
out
mov
dec
lea
mov
mov
mov
mov
push
repz
cld
sbb
adc
sbb
mov
push
push
push
icebp
xchg
fadd
pop
js
cmp
popl
jp
pop
cmp
mov
les
mov
filds
jae
adc
xor
cwtl
sbbb
call
cmp
aaa
lds
mov
dec
push
cmp
sbb
int
cmp
clc
push
repz
sbb
xchg
sbb
es
fistpl
sbb
sti
mov
sbb
xor
popf
cmp
in
xor
push
mov
sete
call
mov
mov
adc
adc
pop
or
fld
bound
mov
mov
xor
scas
jl
fimull
inc
outsb
scas
pop
xchg
and
mov
leave
xchg
nop
cmp
adc
clc
sahf
mov
inc
mov
or
fstpl
push
mov
push
dec
das
mov
test
nop
jnp
insl
cmc
cmpsb
xchg
adc
in
fs
xchg
inc
dec
aas
or
pusha
test
fcmovne
rcrl
add
mov
inc
int
les
xchg
cwtl
or
ja
mov
test
sub
lret
cmp
sbb
enter
nop
add
fmulp
xchg
mov
adc
add
sub
cltd
jmp
daa
mov
cmp
jo
mull
push
xor
pushf
dec
pusha
enter
aad
pop
aaa
int3
adc
add
push
jecxz
cmp
mov
or
scas
sub
mov
dec
dec
jmp
pop
cmp
pop
dec
out
pinsrw
cmp
add
nop
dec
push
add
fbstp
dec
dec
lahf
jg
cmpsl
popa
xor
aaa
adc
insb
shlb
xchg
aaa
mov
aad
movsl
call
pusha
xor
mov
dec
cmp
lea
push
sahf
inc
gs
push
iret
cmp
xor
int3
dec
sbb
and
adc
cmp
int3
imul
and
push
leave
orl
sub
push
sbb
push
fldt
dec
pop
mov
add
popf
mov
add
rcl
mov
int
js
cld
aam
jbe
popa
js
addl
jb
push
aam
test
mov
mov
jns
mov
cmp
nopl
adc
fnstenv
xor
dec
mov
fs
hlt
pop
cli
int3
dec
ljmp
movsb
ret
fimuls
jo
fiaddl
and
cwtl
sbb
scas
dec
jmp
mov
pop
int
in
movsb
dec
push
rcl
mov
mov
and
out
pusha
leave
cmp
dec
hlt
sub
mov
loope
int3
jge
mov
mov
fs
bound
pop
sub
push
fwait
dec
pop
ljmp
rcr
in
push
insb
lahf
loope
test
dec
hlt
into
pop
into
clc
sahf
dec
dec
sbb
dec
push
push
cmp
dec
in
cmpsb
addr16
fidivs
std
sbb
pop
adc
and
repnz
mov
dec
mov
int
xlat
mov
adc
mov
mov
mov
mov
les
jl
or
or
sbb
push
pop
cld
lahf
cmpl
popl
sarb
pushf
stos
into
fcomps
imul
mov
adc
dec
sbb
jmp
mov
adc
sahf
adc
mov
dec
xchg
mov
xor
and
mov
daa
dec
dec
addr16
ret
nop
pusha
int
xor
xchg
pushf
stos
ficomps
bound
test
and
adc
imul
add
add
add
or
add
jno
or
xor
add
cmp
pop
pop
sub
sub
rdtsc
arpl
adc
push
push
stos
int
sahf
je
testb
mov
outsl
leave
mov
or
pop
call
leave
pop
out
cmc
cwtd
repz
cmp
dec
mov
call
aad
push
xor
and
push
jno
mov
mov
mov
mov
inc
testl
cmc
insb
ror
inc
mov
xor
daa
cltd
into
mov
aad
sbb
das
sbb
inc
adc
adc
out
cmp
push
rcll
adc
sub
scas
insl
lret
lahf
push
sub
adcb
push
or
je
cmpsl
sub
aam
fdivrl
sahf
cmpsb
inc
sbb
adc
cmc
or
mov
hlt
inc
mov
int
push
push
cld
xor
push
cltd
push
cmp
dec
push
or
push
dec
lcall
pop
ljmp
adc
popf
sbb
mov
xor
loopne
xchg
inc
pop
pop
fistpll
movsb
bound
shll
xchg
inc
out
jmp
inc
leave
cwtl
daa
sub
adc
add
ja
repnz
sti
notl
mov
fdivr
sbb
in
xor
shlb
adc
cmpsl
jmp
cmp
aam
test
mov
test
pop
das
adc
jmp
sub
sub
js
pop
add
pop
sbb
fneni(8087
movsb
push
imul
fs
push
push
or
cmp
out
test
mov
sti
mov
inc
mov
and
nop
sub
mov
lret
mov
es
or
stos
nop
push
daa
aaa
fsubs
loope
mov
lcall
popf
mov
dec
ficomps
or
or
and
xor
jno
inc
mov
push
imul
push
jl
jge
lods
add
push
popf
sbb
xor
int3
mov
dec
sti
les
mov
in
mov
rclb
fsub
mov
mov
adc
ja
pop
lock
les
push
ret
lods
scas
mov
cli
xor
inc
mov
pop
adc
add
imul
iret
call
mov
movsl
stos
xor
cmp
shrl
gs
in
pop
scas
xor
push
stos
fistl
int
mov
repz
jno
movsb
addr16
out
inc
lcall
mov
xor
cld
es
cmp
das
sub
adc
push
in
ficoml
pop
dec
adc
adc
je
out
out
lock
pop
outsl
test
cmp
sbb
aad
popf
push
inc
sub
push
pavgb
scas
xchg
cmp
mov
pushf
or
inc
push
aad
dec
xlat
scas
inc
xchg
pop
jmp
imul
jno
loopne
cli
fsubs
aam
xchg
dec
jno
cmp
sub
js
push
cltd
dec
xchg
addr16
mov
in
ss
push
aad
add
dec
sbb
push
fnstsw
std
fs
or
jno
xor
in
sub
add
out
xchg
xchg
les
ret
pop
mov
lahf
scas
mov
fcoml
mov
das
movsb
xchg
scas
mov
je
cmp
aaa
fcompl
push
imulb
xchg
sbb
stos
add
mov
mov
jae
sbb
repz
mov
and
fsubrs
bswap
pop
fisttps
push
rcrl
les
out
dec
sbb
notb
bnd
sbb
mov
les
adc
cmpsb
push
mull
js
mov
flds
mov
movsb
loope
xor
popf
mov
or
mov
movd
add
mov
insb
pushf
arpl
mov
dec
mov
add
int3
ljmp
jp
outsb
adc
int
nop
mov
xor
hlt
lahf
stc
ja
lds
sbb
daa
push
insl
sub
or
mov
mov
int3
adc
mov
and
mov
xchg
mov
daa
push
mov
repz
mov
sbb
shll
decb
fsubrl
or
dec
shl
push
mov
inc
dec
and
and
int3
bound
dec
nop
sub
cmp
fdivs
lods
sbb
xchg
dec
mov
and
into
jb
pop
adc
push
or
xchg
lahf
imul
pop
mov
ss
fwait
mov
mov
loope
or
fwait
jnp
mov
mov
sbb
sub
xchg
adc
inc
mov
insb
adc
cmc
push
push
lock
test
or
daa
sub
xchg
int3
cmp
cmp
cld
dec
mov
aad
mov
andb
fs
jae
aam
sbb
lods
mov
dec
add
dec
inc
leave
or
or
fimuls
and
jecxz
jl
mov
push
push
lcall
ss
jnp
int
cmpb
mov
fisubs
inc
mov
mov
mov
xchg
adc
call
lahf
pushf
cli
dec
xchg
out
xlat
mov
ljmp
lret
cli
adc
ror
fimuls
addr16
fmull
pmullw
jmp
push
jle
dec
xchg
jo
loop
loopne
lods
scas
jge
insl
inc
and
scas
mov
xor
add
dec
push
mov
sbb
fidivrs
daa
sbb
cmp
inc
iret
sbb
mov
lret
in
cmp
enter
scas
adc
stos
pop
push
sub
mov
loopne
leave
dec
dec
push
jg
sub
sarl
or
inc
sub
loopne
pop
sbb
shl
adc
outsl
sub
push
hlt
pop
fldcw
cwtl
test
sete
sbb
cltd
pushf
mov
add
and
aam
dec
clc
lret
jecxz
jns
push
or
jge
cmp
out
jmp
inc
cmp
movsb
iret
addb
aam
pop
int3
or
fsubrs
ds
iret
or
fimull
xlat
repnz
push
pop
push
push
jl
imul
lea
push
dec
push
or
jo
jne
inc
in
jbe
inc
insb
int3
cld
sbb
daa
lock
push
dec
fdivrs
fisubs
push
pop
mov
inc
decb
movsb
insb
int3
push
aas
inc
dec
pop
shrl
adc
adc
pop
dec
aas
xchg
sbb
ljmp
and
fidivrl
je
lods
ljmp
sub
xchg
mov
stc
ficoml
test
popa
leave
scas
sbb
or
nop
and
mov
xor
or
cmp
push
aas
aad
xchg
cmp
out
mov
dec
mov
outsl
xchg
dec
inc
enter
push
aas
dec
movsl
inc
int3
adc
or
xchg
inc
lret
aad
sub
imul
cmp
loopne
test
mov
hlt
fsubr
call
cmp
dec
adc
fists
das
jmp
insl
sbb
add
mov
mov
inc
and
mov
inc
and
sub
xchg
ds
mov
cmp
inc
les
cmp
test
inc
push
daa
pushl
sbb
loopne
mov
sbb
dec
or
aas
scas
or
test
xlat
push
int
sti
scas
push
inc
aaa
leave
lahf
mov
test
pop
mov
adc
xlat
push
fcoml
je
lods
nopl
push
xchg
dec
shl
lcall
fdivr
sti
leave
mov
adc
outsb
inc
dec
jmp
or
adc
das
jmp
inc
push
mov
jns
test
lret
les
sbb
xlat
lock
dec
sub
std
mov
xchg
dec
mov
adc
je
xor
out
cmp
les
or
shll
scas
cmp
push
xor
pop
outsl
dec
rcl
xchg
addr16
push
out
les
cmp
or
out
jmp
jnp
lahf
pop
iret
data16
pop
jecxz
adc
sbb
adc
xchg
fsubs
into
push
sub
and
fisubrs
adc
add
push
or
insl
sahf
dec
jnp
fstl
out
pop
add
fs
xchg
or
xchg
sti
cli
add
xchg
dec
sbb
sarl
push
prefetchw
cltd
dec
test
js
insb
and
gs
popa
push
addr16
out
pop
or
outsl
outsb
notb
add
pop
nop
xchg
dec
rcr
xchg
xchg
imul
dec
jmp
xor
sub
loop
das
mov
outsl
sahf
outsb
mov
mov
push
or
xchg
addr16
dec
dec
push
es
adc
jmp
fstl
mov
cmpsb
xchg
adc
nop
push
test
fwait
pop
mov
cwtl
stos
xlat
mov
dec
jecxz
jo
dec
ficomps
fsts
imul
or
cltd
mov
scas
or
aaa
jecxz
hlt
addb
sbbb
inc
cmp
mov
pop
jecxz
sti
ljmp
or
jg
cmc
jecxz
out
imul
lods
lahf
imul
or
call
jecxz
fcomip
xchg
lods
add
scas
jecxz
adc
xchg
imul
stos
test
popf
dec
popw
in
iret
loop
pop
xor
inc
sahf
or
push
aaa
pop
adc
xchg
cmp
jo
clc
xchg
and
rcl
ss
xor
cmpsl
popf
adc
addr16
mov
dec
xchg
out
test
inc
adc
mov
loope
mov
les
orb
sub
pop
sub
dec
mov
xor
xchg
sarb
mov
pusha
xorb
dec
adc
adc
jp
gs
xor
mov
call
add
test
dec
rcrb
sub
les
mov
or
adc
in
dec
push
and
repz
and
push
sub
jecxz
and
inc
int
dec
cmp
dec
dec
or
out
jge
xchg
xchg
int3
cli
add
jno
mov
icebp
push
fldenv
add
jecxz
xchg
jno
sub
mov
mov
jbe
mov
dec
adc
lahf
punpcklwd
add
lcall
popf
xchg
outsl
cmpsb
rcrb
pop
hlt
xchg
mov
cmp
adc
rol
in
cwtl
test
das
xchg
imul
dec
movsb
js
mov
jmp
push
jo
adc
fldenv
jae
cmp
mov
xchg
push
mov
pop
jnp
sbb
pop
cmp
mov
inc
dec
movsl
mov
lods
push
loopne
iret
sahf
add
clc
mov
fimuls
xorb
mov
nop
push
mov
inc
dec
push
xchg
andl
sbb
adc
pusha
scas
aad
mov
in
push
loope
mov
xchg
dec
fsubs
aas
imul
mov
sti
mov
xchg
pop
movsl
lods
mov
arpl
inc
adc
mov
cmp
and
imul
sbb
es
cmp
out
and
or
xchg
call
dec
cltd
mov
xlat
int3
adc
fbstp
xor
jecxz
dec
lret
mov
xchg
pop
cmp
add
dec
insl
popf
mov
xchg
xchg
aas
jmp
nop
cmp
mov
out
mov
lea
jae
cmpsb
pop
js
inc
sub
push
loopne
fdivp
or
sub
mov
addr16
scas
aad
mov
mov
sbb
dec
push
jg
xchg
mov
jb
and
or
int
cld
inc
or
mov
dec
mov
mov
xor
mov
imul
mov
sbb
fwait
pop
pop
in
sbb
dec
jns
fildl
pop
outsl
xchg
es
fdivrs
xor
cltd
and
mov
adc
int
iret
mov
fs
bndstx
les
fsubl
pop
addps
mov
push
pop
stos
lock
mov
jns
ret
and
data16
xchg
pop
or
fs
fndisi(8087
loope
jg
xor
mov
mov
daa
or
addr16
mov
add
xor
repnz
inc
pop
push
mov
adc
sub
stc
insl
pusha
xchg
mov
mov
jl
fldenv
xchg
test
mov
mov
aam
sahf
adc
ds
adc
push
and
inc
jnp
pop
push
fwait
and
imul
sbb
dec
mov
jg
cmp
insb
push
in
pushf
shl
sbb
jb
add
sahf
push
push
cmp
rcl
daa
into
aad
push
adc
fmull
lcall
mov
shrb
inc
xor
ds
push
int3
pop
push
push
push
mov
push
fsubr
or
sti
stc
push
push
xchg
es
lret
or
and
adc
and
fwait
cs
adc
fsubrs
sbb
add
add
orl
rolb
js
xchg
and
sbbl
or
xchg
fiadds
xor
mov
push
mov
inc
int3
es
imul
pop
js
pop
pop
loop
loope
adc
adc
ret
clc
mov
int3
daa
adc
enter
ret
xor
adc
loope
cmp
xor
push
pop
dec
stc
mov
cmp
and
nop
push
add
into
adc
les
jl
mov
mov
aam
scas
ret
nop
push
leavew
fwait
and
push
sahf
std
lret
loope
lods
adc
imul
and
pushf
jmp
and
rcrl
imul
js
addr16
icebp
mov
push
or
inc
mov
dec
jo
std
pop
mov
dec
mov
dec
sub
mov
mov
xchg
push
movsb
mov
lret
imul
repz
daa
jb
cmpsb
cwtl
les
push
movsb
sbb
dec
jp
push
lcall
inc
jle
mov
xlat
mov
les
push
repz
aas
scas
sub
scas
jns
aas
mov
sub
xor
aaa
test
fldz
pop
add
cltd
arpl
xchg
fnsave
popa
adc
imul
mov
je
jae
adc
push
outsb
out
cmp
sti
insb
leave
lods
sahf
je
cmp
cmpsl
hlt
pop
jecxz
aad
mov
push
cmp
lds
push
int
add
dec
call
lock
leave
call
ret
cmpsb
add
scas
mov
and
mov
rorb
negl
jo
aad
mov
int
in
inc
bound
push
in
ss
push
cmp
push
adc
iret
iret
adc
inc
xor
addr16
add
scas
jno
idiv
adc
stos
cmpsl
mov
or
mov
stc
aaa
leave
xchg
or
mov
dec
les
decb
jl
je
dec
psrad
inc
mov
inc
fdivrl
dec
inc
jmp
ficomps
sti
sub
xor
cltd
in
adc
inc
sti
push
movl
push
dec
inc
pop
aas
pop
jle
sbb
adcb
cmp
push
mov
int
jle
aam
fsubrs
adc
dec
cltd
inc
lret
inc
push
or
aam
scas
lods
cmp
addr16
push
dec
roll
pop
push
test
push
test
sti
mulb
lahf
pop
es
pop
adc
scas
sub
inc
fs
andb
push
add
push
popa
stos
fsubs
add
lahf
pop
ret
dec
fdivr
adc
push
stc
push
leave
lods
notl
rcrl
mov
push
adc
sbb
mov
mov
loope
push
jo
aad
scas
jecxz
sub
scas
mov
lods
lea
xchg
xchg
sub
jge
mov
pop
pop
mov
mov
inc
out
sub
lret
test
adc
push
ljmp
movsl
mov
inc
push
lcall
mov
lahf
addr16
lea
xchg
and
sub
or
inc
and
imul
mov
sub
loope
into
loope
data16
repz
push
xlat
add
dec
sahf
mov
and
inc
jmp
iret
jbe
int3
cmpsl
lea
cmp
or
mov
bound
xchg
popa
sahf
push
dec
icebp
mov
loopne
cmp
lea
in
sub
xchg
nop
push
add
sahf
sbb
jbe
push
test
insl
ljmp
mov
jno
lret
xlat
in
ljmp
xchg
cmpsl
jecxz
pop
cli
jo
stos
in
inc
inc
mov
mov
cs
push
iret
scas
pop
arpl
rcrb
rcr
adc
ja
dec
cvtps2pi
pop
jecxz
and
dec
xchg
adc
iret
jge
bound
cwtl
mov
leave
dec
push
mov
movsb
lret
mov
adc
sub
push
mov
scas
inc
push
arpl
shrb
push
jb
adc
xor
cmp
sub
cmp
inc
lahf
cmpsl
mov
add
sbb
pop
sbb
or
or
inc
andps
int
and
repz
iret
xor
adc
outsl
mov
loopne
test
pop
adc
fildll
push
push
xor
into
or
rcll
jnp
sbb
cltd
jl
ret
addr16
popa
mov
adc
nop
int
sbb
repz
pop
inc
sbb
pop
jl
xor
rclb
aad
mov
mov
fsubrl
dec
pop
cmpsl
mov
fsubl
or
ret
sbb
mov
fisubs
pop
or
xchg
in
jg
mov
rolb
stc
push
fldcw
sar
test
dec
xlat
ds
xor
sub
dec
call
outsb
cmovbe
sbb
bound
test
mov
sar
hlt
push
dec
sub
bound
add
popa
adc
cmp
adc
ds
rep
or
rorl
jmp
ss
and
mov
leave
mov
loope
cld
jb,pt
and
movsb
ss
inc
xlat
jb
imul
test
rcrl
mov
int3
mov
aaa
out
add
inc
dec
lret
mov
sub
cmp
and
sti
es
lods
fsubrs
outsb
push
lea
fdivs
or
pusha
push
sbb
push
mov
in
pushf
mov
sub
push
xlat
and
sbb
xor
pop
adc
int3
aas
jae
push
push
push
pop
and
bound
adc
fcmove
push
sub
cmp
sbb
bswap
movsb
jns
adc
pop
jge
sub
daa
rcrl
or
cmp
imul
imull
add
xchg
push
mov
dec
cs
ret
dec
sar
stos
or
mov
pop
in
jp
push
sub
je
stc
jp
mov
jecxz
sbb
fidivl
jecxz
or
rcll
dec
cmpsb
mov
mov
push
sub
adc
add
notb
sub
mov
ss
outsb
movsb
dec
dec
data16
rorb
or
clc
push
cs
shlb
icebp
loope
sbb
xor
push
jne
mov
mov
mov
inc
dec
int
inc
pop
mov
dec
orb
jae
cmp
mov
pop
mov
rcll
xor
or
push
push
test
adc
stc
sbb
jae
cli
rorl
iret
dec
jns
loopne,pn
xor
pusha
pop
cs
push
jbe
iret
jne
mov
push
pop
inc
in
mov
int3
sub
rcll
in
xchg
int3
jno
or
ret
sub
dec
fmul
enter
and
hlt
or
push
push
add
test
ja
test
dec
in
dec
add
ja
into
call
mov
sbb
punpcklbw
js
sub
inc
fadd
dec
mov
seta
ss
imul
push
xchg
lea
lods
mov
fiaddl
dec
push
xchg
mov
outsl
daa
mov
push
pushf
test
pop
ds
jno
xor
xlat
shrl
sub
lret
ret
push
sub
xchg
insb
int
fwait
mov
shl
sbb
scas
outsb
inc
push
jns
mov
mov
pop
mov
pop
mov
push
nop
adcl
jge
push
push
dec
test
xchg
mov
mov
add
das
push
lcall
mov
mov
xor
jecxz
mov
loope
mov
add
cmpsb
mov
adcl
int3
mov
push
adc
imul
dec
or
cmp
push
sbb
adc
push
jae
adc
jbe
out
mov
outsl
push
int3
push
insb
scas
sub
fisubl
shll
cs
mov
adc
xor
pushf
out
push
arpl
and
dec
lea
in
jnp
xchg
mov
test
outsb
mov
mov
mov
sbbl
mov
loope
mov
lret
das
mov
out
stos
mov
enter
fsubs
call
push
mov
xchg
int
hlt
cwtl
jne
pop
jle
adc
cmp
jae
inc
dec
push
std
push
mov
and
insl
fwait
mov
movsl
dec
ljmp
or
rorl
les
scas
xor
ss
in
in
sbb
incl
xchg
addb
movsb
loop
sub
pop
pop
int3
sbb
loop
and
jmp
icebp
nop
mov
mov
iret
nop
pop
xor
bound
aad
sbb
or
sub
rcll
lods
adc
cmpsb
fmull
sbb
out
and
jl
fdivl
imul
in
pop
in
and
test
imul
ret
insl
inc
sub
jno
jl
cli
inc
mov
inc
inc
pop
out
adc
mov
xor
int
jne
testb
fldenv
pop
outsb
lods
lcall
ljmp
loope
pop
repz
addr16
pop
mov
mov
sub
pop
daa
xchg
pop
jae
pop
xor
loop
push
les
or
addr16
lret
mov
push
mov
dec
mov
mov
into
xor
shl
cmp
sbb
hlt
cmp
insb
pop
aam
sbb
icebp
cwtl
jge
jmp
cmp
pop
insl
pop
xor
stc
fwait
loope
scas
sub
sbb
xchg
add
fnstenv
push
adc
roll
popa
bound
mov
fdivr
clc
add
jns
mov
sbb
daa
mov
shrl
sub
push
mov
jl
loope
das
mov
mov
mov
push
movsb
lcall
ss
in
push
pushf
xor
cmp
sahf
inc
xor
or
push
mov
mov
mov
pop
cmp
jp
and
pusha
mov
or
sbb
adc
or
jb
and
mov
push
vmulss
jae
out
or
clc
xchg
add
adc
ja
jae
jle
push
mov
inc
aad
sbb
push
adc
data16
sbb
add
lds
sbb
adc
push
shlb
and
adc
fisubrs
push
fisttpll
ret
adc
out
cmp
or
cmp
mov
adc
ficompl
lea
pop
mov
in
fcmovnb
rcrl
add
inc
test
dec
or
test
mov
sbb
pop
enter
jle
xchg
call
sahf
pop
push
add
call
cli
fdivr
mov
mov
jle
mov
clc
adc
pop
sub
cmp
add
pop
mov
mov
daa
nop
aad
push
addr16
and
ljmp
mov
sbb
push
dec
add
dec
mov
cmp
xor
sbb
sarb
push
outsl
and
dec
clc
ss
outsl
subl
jg
add
fadds
pop
fiadds
orl
dec
leave
pop
cmpsl
flds
cmpsb
push
pushf
xor
push
pop
push
sbb
fsubl
push
sar
cli
add
sbb
cmp
sahf
push
dec
cmp
or
or
cmc
ret
loopne
jne
imul
jl
mov
std
xchg
insb
adc
ja
sahf
fwait
mov
pop
and
es
inc
adc
adc
mov
shl
or
ret
or
stc
rcll
or
sub
fstpl
popf
adc
adc
les
xchg
jecxz,pt
dec
and
lea
dec
mov
lret
leave
jmp
repnz
inc
jge
aaa
sti
xlat
outsb
lret
adc
out
add
push
and
sub
cmp
jno
imul
loope
fwait
adc
mov
outsb
push
shrb
test
cmp
js
jae
aad
pop
movaps
inc
inc
dec
jge
jge
fdivrs
daa
into
jne
sub
jnp
and
mov
mov
adc
je
mov
add
ficomps
test
mov
addr16
pop
pop
mov
fstpl
dec
dec
test
xchg
mov
jecxz
pushf
dec
xchg
out
dec
mov
loope
cmp
sti
cwtl
stos
pop
fiaddl
push
stc
repnz
negb
ficoms
mov
andb
pop
cmpsl
sub
loope
or
sub
push
push
sbb
int
mov
dec
xchg
add
or
xchg
mov
fadd
popf
dec
pop
cmp
insb
sbbl
cld
xchg
dec
insb
fwait
push
add
fsubp
inc
adc
imul
xchg
test
pop
fsubrl
dec
stos
jne
ja
and
jmp
insl
popf
pop
jo
xchg
mov
jae
jno
adc
lret
pop
sub
std
cmc
pop
notb
fwait
aaa
sahf
and
scas
and
and
jb
and
and
mov
or
mov
int
pushf
les
add
or
push
mov
dec
ljmp
pop
aad
aam
pop
fsubr
int
sub
pop
pop
and
mov
and
fmuls
or
adc
xlat
and
scas
or
xor
push
inc
setg
ja
jecxz
in
cmp
in
push
rcr
dec
mov
aaa
popf
lea
sub
fldl
lahf
faddp
jae
cmc
jl
sub
lea
movsl
push
pop
sbb
popa
es
or
adc
mov
xor
inc
stc
pusha
xchg
stos
pop
movsl
adc
add
mov
mov
pop
or
mov
fmuls
jbe
insb
or
sub
xor
cli
cmp
mov
adc
and
in
stos
push
push
jno
test
insb
adc
lods
mov
xchg
cmpsl
pop
in
add
js
lods
inc
push
fstpl
push
es
scas
shlb
push
and
xor
dec
inc
pop
insb
cmp
and
das
push
pop
mov
notl
stc
test
fdivr
out
pop
pushf
push
sbb
inc
push
sub
addr16
xchg
pushf
ss
les
das
cmp
xlat
adc
insb
mov
fmull
dec
jb
cwtl
sub
out
inc
pop
jge
pop
cmp
xor
jle
ljmp
daa
fnstenv
lcall
hlt
arpl
js
sahf
mov
cmp
push
clc
xchg
es
in
add
mov
das
lahf
pusha
sbb
xchg
mov
out
dec
loope
test
mov
sbb
popa
lea
or
adc
rcrb
and
dec
sub
add
or
and
jo
cmp
mov
push
pop
xor
ds
pop
push
or
cmp
mov
jle
push
sub
es
mov
aaa
xchg
stos
insb
cli
bound
or
rcrl
sbb
or
mov
jno
lods
repz
es
xchg
pop
or
adc
cmp
aam
cli
sub
cmpsb
mov
into
jae
mov
cmp
sub
and
sbb
shrl
sbb
pop
loope
hlt
flds
scas
sbb
sti
rorl
mov
cmp
adc
mov
push
jns
adc
inc
push
stos
add
mov
inc
sbb
fdivrs
rorb
xchg
jl
nop
int
mov
arpl
push
cwtl
inc
cmp
mov
cmp
adc
sub
and
push
inc
ljmp
movsb
iret
insl
imul
es
jae
inc
sub
adc
and
mov
and
pop
je
cmovl
jecxz
pop
adc
fdiv
xchg
dec
mov
decl
sbb
and
addr16
adc
fnstenv
push
test
adc
loop
lea
xor
fnstsw
lahf
cli
cmp
lcall
lods
dec
and
adc
rorb
mov
push
bound
or
adc
sahf
push
add
je
sub
mov
das
mov
mov
sbb
mov
fistps
pop
movsl
xchg
sub
adc
icebp
inc
test
mov
test
imul
repnz
inc
aas
sub
mov
sarl
mov
xor
cmpsb
cltd
scas
nop
iret
lret
pop
loopne
jae
stos
push
fwait
push
fidivl
xor
fdivrs
ljmp
mov
nop
test
inc
sub
ljmp
negl
push
inc
jno
or
mov
testb
mov
test
or
je
jb
mov
jmp
jecxz
dec
lahf
movsb
outsb
xor
fldl
pusha
cmp
sub
or
fisubs
dec
in
pop
xchg
jmp
sbb
sub
fnsave
js
xor
daa
jne
fldcw
jp
xchg
jle
fdivrs
repz
xchg
addr16
out
in
dec
inc
mov
jp
cltd
xor
cmp
xlat
daa
sahf
cmp
faddl
push
inc
add
push
into
test
cmc
adc
leave
sub
int3
mov
jnp
daa
ror
xchg
jecxz
aam
mov
mov
es
movsb
push
dec
les
fwait
push
dec
mov
shr
bnd
adc
les
scas
or
sbb
sbb
adc
daa
fbld
or
ficoml
in
fwait
daa
in
lea
lods
sbb
jo
push
mov
lret
jae
in
sbb
pop
mov
nop
jbe
sbb
mov
push
sbb
les
js
outsl
sbb
pop
daa
arpl
inc
shll
outsb
xor
push
in
iret
mov
fisttps
cli
sbb
call
and
iret
bound
add
imul
sbb
cmp
outsb
roll
jmp
aad
xchg
daa
mov
ljmp
int
cmp
sti
insb
mov
daa
stos
sub
test
dec
dec
insl
mov
lds
addr16
imul
xchg
ja
lods
ror
sbb
xchg
dec
pop
adc
ret
jle
jp
cmp
insb
mov
adc
or
adc
jae
xor
fsubrp
or
push
sbb
or
jmp
addl
or
mov
sub
inc
mov
cmp
mov
jne
mov
les
sbb
sti
cmp
add
lahf
mov
push
int
jecxz
pop
pop
pop
pop
int
test
inc
pop
enter
jecxz
lret
xorb
cmp
mov
mov
pop
out
or
mov
bndstx
sub
fsubr
imul
inc
les
movb
xchg
sahf
mov
lret
add
shll
inc
fs
mov
mov
pop
sbb
cmp
push
in
stos
jle
pop
push
sbb
adc
or
fcoml
add
adcl
or
mov
js
jns
push
dec
adc
or
in
sub
mov
xor
jecxz
in
cmpsl
fsubrs
aad
pusha
out
ljmp
mov
push
rorl
cmpsl
enter
repnz
pusha
add
jmp
mov
and
and
daa
mov
pop
movsb
aam
into
stos
xor
jle
loopne
outsl
jno
bound
pushf
outsb
sub
mov
jecxz
fcoml
out
loopne
les
and
in
push
ret
mov
adc
nop
hlt
repnz
lock
sbb
out
adc
pop
arpl
mov
push
inc
and
mov
add
sti
scas
lret
adc
adc
ret
mov
or
mov
or
lret
test
dec
or
les
repnz
dec
add
mov
popf
push
repnz
jg
hlt
or
dec
pushf
xor
shll
cli
movsl
xchg
mov
pop
add
std
mov
jbe
inc
mov
inc
fisttpll
adc
inc
push
test
xlat
lcall
jp
scas
mov
fsubp
lret
ljmp
aam
rorl
pop
rclb
jo
push
mov
xor
ja
inc
pop
in
mov
or
xchg
lods
mov
int3
add
inc
fmuls
adc
aam
xchg
dec
cmpsl
adc
push
sub
xchg
mov
adcb
icebp
pop
les
fsubrp
mov
lret
fisttps
cmp
inc
cmp
aam
cli
test
dec
lds
xchg
add
dec
fldl
mulb
in
aaa
fwait
setg
dec
cli
xor
adc
pop
insb
cmpsl
fmuls
push
mov
test
pop
je
insb
jle
push
xchg
sti
and
mov
pop
inc
push
ljmp
add
dec
test
repnz
cmpsb
inc
push
push
repz
mov
or
rcll
std
sub
mov
or
in
cli
neg
subl
xchg
lret
cmp
mov
push
push
sbb
mov
fwait
mov
test
mov
mov
int
sbb
adc
push
push
sbb
cmp
sub
lret
sub
movsb
mov
imul
xor
rol
out
dec
mov
push
or
xor
int
xchg
popf
scas
jge
call
mov
push
pop
pusha
sbb
fcompl
int3
xchg
aaa
mov
pusha
push
pop
insl
sbb
andb
lret
sbb
dec
loope
mov
sub
insb
js
and
inc
ljmp
sti
pushf
jle
and
mov
cmovle
sub
xor
and
stos
int
iret
movsl
sub
pushf
aas
fsubrs
mov
lds
pop
sub
pop
mov
movsb
insl
arpl
push
pop
pop
punpcklbw
out
xchg
insb
mov
jl
adc
or
mov
pop
sbb
mov
movsb
sahf
push
into
mov
sar
rcll
cmp
mov
icebp
outsl
pop
loop
push
mov
dec
cmp
add
dec
mov
push
sbb
jl
fidivl
push
pop
mov
adc
push
lret
insb
inc
sbb
add
mov
imul
sbb
cld
int3
les
fs
push
imul
add
insb
outsl
aad
in
fwait
xchg
xchg
push
mov
adc
cmp
adc
pop
loopne
daa
lea
hlt
sbb
push
sbb
adc
scas
loope
sub
test
sub
clc
fisttpl
popf
mov
jns
inc
lret
or
mov
mov
out
popf
pop
jb
mov
xor
lret
stos
repz
ljmp
sbb
test
cwtl
mov
xchg
jb
loope
xchg
out
mov
lret
enter
sbb
into
sahf
sbb
jo
add
daa
iret
mov
sbb
test
xchg
cltd
rcrb
push
insl
imul
js
les
dec
lret
inc
mov
loope
fwait
mov
adc
fnstcw
xchg
pop
stc
sbb
inc
add
dec
jnp
push
mov
sub
out
mov
and
xchg
mov
push
mov
cmp
int
dec
adc
mov
or
pop
add
xchg
or
nop
sahf
sbb
adc
jge
adc
push
and
dec
int3
mov
mov
jns
out
add
repz
int
adc
inc
adc
cmp
movsb
and
es
adc
lds
lods
cmpsb
dec
jecxz
pop
mov
pusha
inc
xchg
test
adc
mov
loope
int3
and
and
insb
mov
mov
push
js,pt
xlat
and
dec
mov
pop
adc
sub
mov
push
fwait
pop
xchg
or
inc
jne
push
dec
xchg
les
imul
mov
insl
jbe
cs
cwtl
cmp
xchg
dec
sub
std
insb
push
xor
sbb
outsl
and
mov
pushf
xor
lds
xor
xchg
xchg
fsubl
add
mov
pop
push
xchg
mov
cmpsl
mov
inc
je
push
addb
cvtdq2ps
cmp
push
cs
mov
call
out
push
sub
xchg
mov
or
sti
call
or
jo
mov
ljmp
cmc
lcall
int
xor
scas
lods
add
xchg
mov
adc
mov
lea
fcomps
dec
xor
cmpsl
sub
inc
jmp
xlat
add
lods
and
sbb
add
inc
push
push
add
pop
or
dec
int3
push
xchg
mov
adc
mov
cmpsb
jno
stc
fdivrl
stos
ret
pop
jecxz
sbb
pop
int3
xlat
imul
cmpsb
fisubl
adc
int
call
fwait
jecxz
jb
nop
push
fmull
in
bound
jp
cltd
lcall
jl
test
roll
pop
sub
in
popf
dec
jnp
pop
mov
cwtl
outsb
pop
sbb
jp
repnz
es
add
or
sub
icebp
sahf
stos
xchg
dec
or
cmp
je
dec
xchg
jne
imul
cmp
xchg
add
daa
cmp
ja
dec
hlt
sahf
jo
xchg
fstpt
nop
sbb
pop
insl
or
mov
add
js
mov
sbb
enter
loope
inc
push
scas
fimuls
mov
xchg
popa
xchg
adc
nop
and
pxor
stos
jmp
mov
shrl
sbb
push
test
repnz
mov
imul
iret
dec
cld
push
pop
mov
mov
mov
ret
adc
out
jb
sbb
cmpsb
aam
push
and
mov
inc
shr
push
sub
das
popf
jne
aad
test
stos
adc
jmp
jecxz
sub
adc
aam
xchg
in
push
inc
pop
cmc
lods
pop
scas
push
pop
leave
movsl
dec
cmc
daa
rsqrtps
aam
test
into
test
dec
sub
mov
loope
fidivs
insb
pushf
je
or
inc
int3
push
insb
int
loope
popa
sub
pop
test
sbb
adcb
int
repnz
popa
scas
subb
pop
nop
jnp
repnz
push
xchg
push
cs
push
outsl
inc
mov
enter
daa
dec
in
mov
push
psllw
mov
push
cmp
lods
std
sbb
jg
adc
xchg
xlat
xchg
scas
push
xchg
sbb
mov
das
in
mov
adc
push
jbe
loope
test
sbb
add
dec
fmuls
popa
dec
aas
mov
fwait
pop
mov
lcall
mov
push
lock
imul
call
mov
aam
pusha
fwait
push
and
push
add
movsl
dec
jns
inc
out
adc
movsb
lret
or
leave
cltd
imul
jnp
or
and
add
mov
jb
ds
imul
addr16
jp
imul
aaa
rcrb
pop
fisubl
testl
adc
fisubrl
sbb
jb
pop
adc
xchg
stc
aaa
test
pop
lcall
outsb
xor
mov
psadbw
fidivs
push
or
cmp
inc
push
mov
sbb
mov
sarb
cmc
lahf
jnp
mov
lods
mov
cld
pop
scas
adc
lret
mov
fwait
pop
in
jnp
sub
add
push
adc
sbb
push
sub
pop
iret
push
inc
leave
adc
adc
mov
outsb
cmp
mov
adc
repz
jecxz
ss
sbbb
add
movsl
movsb
mov
and
jae
fdivrs
push
and
pop
inc
jmp
xchg
mov
fs
and
sub
dec
imul
mov
dec
das
and
dec
xchg
push
or
sub
aas
icebp
mov
inc
adc
ficoml
fcoms
imul
jae
loop
sbb
pop
xchg
shrb
es
push
imul
mov
repnz
roll
adc
push
fcmovnbe
jae
xchg
xchg
fimull
add
jne
scas
xor
scas
xor
mov
mov
or
adc
pop
xchg
adc
sub
or
imul
dec
dec
push
sbb
in
push
add
pop
sbb
add
cwtl
mov
lret
xchg
je
adc
into
pop
imul
insl
out
int
dec
push
mov
lds
outsl
dec
les
xchg
jns
push
ja,pt
std
test
jnp
shrl
shll
es
adc
push
mov
xchg
es
nop
add
scas
out
outsb
adc
mov
mov
repnz
mov
ror
jecxz
adc
jg
ret
lret
imul
pop
scas
insl
and
and
push
lret
adc
mov
mov
sbb
call
sbb
jno
cmp
jae
aas
adc
mov
and
dec
into
fmuls
movsb
sbb
jae
test
and
pop
loope
in
inc
mov
sbb
mov
js
push
jnp
mov
test
or
or
outsl
repz
bound
and
add
enter
sbb
cmp
adc
out
push
fistpll
ret
xchg
or
mov
pop
mov
scas
adc
mov
ret
popf
sbb
std
cwtl
ret
xor
pop
dec
sbbl
mov
in
xchg
lods
repz
pop
adc
xchg
cmp
into
adc
dec
inc
add
dec
mov
movsl
les
dec
cmp
push
cwtl
faddl
mov
in
mov
adc
sbb
mov
mov
lods
testb
cmpsl
and
mov
pop
cmpsl
pop
cmp
jp
cmpsl
mov
aam
or
jo
imul
leave
inc
imul
or
mov
lret
into
pushf
stos
or
fiadds
int
lret
mov
fmuls
enter
sbb
insl
les
mov
dec
test
sub
pop
imul
bnd
nop
cmp
and
add
push
dec
cmc
lahf
pop
out
test
mov
jno
andb
add
pop
xchg
dec
ljmp
jecxz
or
pop
pushf
cwtl
jl
int3
xor
pop
adc
jbe
jne
mov
cmp
out
pop
mov
lods
sub
lods
xchg
aam
sub
rcrb
jecxz
mov
imul
adc
or
addr16
mov
mov
push
sahf
es
leave
ficomps
xchg
xlat
push
dec
xlat
pop
jge
adcl
mov
das
sbb
out
xchg
xchg
outsb
in
jae
xorl
fidivs
jnp
push
mov
adc
push
lret
xchg
mov
and
mov
int3
cmpsl
imul
pop
repz
dec
call
mov
mov
dec
lret
xchg
fisubrs
cmp
inc
scas
mov
ja
fwait
or
in
out
jp
mov
ds
fcmovne
xchg
pushf
xor
dec
fdivp
inc
push
ja
pop
mov
movsb
lea
push
sub
mov
arpl
aad
mov
mov
sbb
add
mov
dec
dec
mov
push
xchg
adc
mov
insb
pop
xor
xchg
dec
les
add
in
sbb
sub
outsb
mov
mov
shlb
or
fwait
insb
testl
stos
mov
pop
iret
pop
mov
in
sbb
int
xor
inc
jno
mov
stos
cmp
sbb
and
sahf
in
dec
sub
ja
clc
xor
pusha
pop
out
dec
push
clc
adc
cli
stc
mov
bound
and
adc
mov
or
aas
sahf
scas
mov
insb
lahf
add
mov
and
cmc
or
dec
or
jo
test
mov
mov
scas
jb
cmc
flds
adc
jno
mov
decb
cld
xchg
sbb
loope
pop
or
mov
pop
push
ret
push
test
daa
test
popa
sbb
pushf
lea
dec
lcall
lahf
hlt
push
loopnew
push
lret
pop
add
or
xchg
lahf
sti
in
mov
jle
sbb
stc
dec
fdivrs
push
in
fsubrl
int3
jb
enter
and
shll
jbe
cmc
sub
mov
pushf
inc
popf
imul
xchg
push
fiadds
jne
sbb
xchg
pushf
jns
scas
mov
jge
mov
dec
xchg
stos
pop
cmp
icebp
mov
fisubrl
arpl
add
les
rcrl
cmp
dec
test
int
scas
fimuls
dec
sbb
shlb
bound
fnstsw
lds
push
pop
lret
push
aad
lret
dec
and
mov
aaa
lret
repz
movsb
mov
xchg
mov
loope
insb
push
dec
xchg
movsb
mov
push
pop
pop
subb
push
mov
xlat
pusha
mov
or
outsb
jmp
outsb
faddl
out
sub
sbb
jp
adc
push
dec
loopne
add
sarb
cltd
out
and
xchg
mov
push
pop
xchg
push
xchg
mov
fisubrl
adc
ret
inc
jp
push
stos
mov
pmaddwd
pop
insb
pop
push
jo
fistl
sarb
add
jo
adc
jl
inc
mov
adc
rcl
bswap
enter
scas
mov
sbb
in
jl
mov
dec
add
dec
in
add
pand
adc
lods
outsl
enter
adc
mov
es
sahf
insl
leave
loopne
add
shl
jp
add
stos
cmp
mov
xor
jno
adc
stos
jb
arpl
cltd
inc
test
add
sub
loop
or
out
mov
or
mov
inc
cld
lea
pop
pop
mov
loopne
nop
or
adc
xchg
cmpsl
mov
cmp
push
out
ret
test
daa
mov
cmpsl
insb
xor
add
orl
lret
jecxz
add
enter
dec
sub
mov
adc
push
sub
lret
les
sahf
and
loope
es
push
sbb
stos
mov
cwtl
pop
jg
sbbl
mov
mov
dec
dec
loope
inc
imul
ret
lret
cmp
leave
mov
add
lahf
push
rcr
mov
pop
and
mov
mov
adc
ret
cwtl
adc
inc
mov
or
lods
dec
push
dec
or
les
lahf
nop
ljmp
lods
fs
jmp
addr16
adc
cmpsl
lcall
enter
jae
outsb
or
in
push
aaa
pop
sub
in
pop
insb
das
sub
push
fcomps
mov
mov
les
ljmp
rorb
fwait
adc
mov
pop
test
loope
push
or
incl
and
mov
addr16
xchg
push
and
jl
dec
cltd
mov
push
test
movaps
das
and
stc
stos
movsb
add
imul
jp
xchg
cli
jmp
mov
in
popf
adc
mov
enter
insl
sti
xor
insb
popa
cmp
fs
test
insb
loopne
je
in
les
push
in
cmp
lcall
push
jnp
or
cmp
push
adc
iret
jmp
xor
cmpl
add
mov
movsl
cmp
adc
sbb
addr16
mov
cmp
rcl
cli
aas
fstl
mov
mov
jle
aas
cld
orl
repnz
inc
call
jl
jns
push
call
cwtl
jle
sub
jo
push
mov
dec
add
push
fisttpll
data16
lods
ret
faddl
pop
push
sub
xor
xor
das
andl
icebp
inc
or
mov
ljmp
loopne
scas
into
sbb
aas
daa
ja
lret
lahf
in
dec
mov
sbb
pop
lea
mov
out
lock
pop
ficompl
jle
add
aad
mov
pop
int
sarl
push
in
es
data16
sub
add
out
icebp
pop
pop
cmp
shlb
and
pop
stc
pop
gs
fimull
jb
mov
push
xor
mov
inc
sbb
leave
push
cmp
orb
mov
shrb
dec
mov
mov
xlat
lea
rorl
jecxz
cmp
std
and
mov
xchg
insb
add
je
or
push
push
and
push
adc
addr16
les
push
les
das
or
ret
push
cwtl
jo
fldcw
insl
push
jbe
jecxz
cmp
push
xchg
jb
dec
fcoml
les
mov
mov
jecxz
test
mov
jne
add
pop
cli
sbbl
popa
jge
adc
loop
mov
mov
insl
rcl
fbstp
and
xor
arpl
push
mov
add
cld
pop
stos
pop
daa
jle
sbb
shl
loope
adc
push
or
test
xchg
in
mov
int3
or
addr16
or
sub
and
fsubr
jp
inc
xchg
ret
jg
and
das
les
inc
push
es
push
jns
jge
push
aas
lds
xor
xchg
into
jns
dec
popf
inc
and
mov
inc
mov
sbb
xchg
shlb
dec
sbb
js
out
mov
sbb
nop
push
addr16
lret
sbb
sub
jae
call
mov
or
dec
addl
mov
push
fistpll
fcomps
punpckhwd
stc
fwait
ret
or
popf
rolb
jb
dec
mov
xchg
add
dec
mov
sahf
std
xorl
mov
mov
or
mov
in
daa
fwait
and
in
or
mov
les
jp
sub
sbb
jae
fistps
ljmp
or
es
sti
cmp
aad
std
add
and
scas
or
add
mov
das
ficoms
xor
pop
sbb
decl
add
push
inc
jno
int
mov
bound
push
or
repz
or
out
adc
dec
sahf
jno
mov
mov
outsl
mov
xchg
push
xlat
mov
scas
sub
and
ficoml
mov
adc
mov
aad
or
push
sahf
int
movswl
jge
dec
jp
fsubs
les
cltd
cmp
int3
loope
sahf
cmpsb
xor
stc
testl
dec
sbb
sarl
sarl
jmp
insb
pop
push
aad
adc
stos
leave
inc
sbb
sbb
sahf
sbb
push
inc
pop
dec
adc
lcall
rcrl
rcrl
or
insb
cwtl
int
enter
xchg
pop
sub
push
sbb
sub
push
rcl
sub
push
ficoms
sbb
sbb
mov
cltd
icebp
adc
cmp
or
sysexit
test
adc
push
jno
cmp
sbb
mov
dec
push
adc
pushf
aas
in
push
jl
in
bound
jno
rorb
leave
lods
ficoml
mov
clc
out
lods
mov
ds
aas
xchg
jecxz
aas
mov
inc
lahf
in
icebp
mov
cmp
adc
pop
fdivr
sti
mov
mov
mov
sbb
dec
pop
mov
add
insb
iret
add
push
jge
mov
or
mov
or
sbb
or
aad
sub
and
out
enter
pop
data16
dec
xchg
movsb
xor
xchg
push
push
mov
mov
or
push
insb
adc
jo
call
sti
jecxz
add
lods
dec
mov
or
lods
ss
jno
lea
dec
scas
dec
push
lret
mov
les
sub
ljmp
js
dec
inc
xlat
jno
xlat
add
es
scas
rclb
push
sbb
subl
insl
shrw
push
psubb
aad
dec
xor
xchg
mov
push
mov
sbb
sbb
sbb
rcll
push
dec
jle
negb
sti
mov
or
loope
ret
push
das
xchg
jmp
and
cwtl
add
nop
es
sbb
aas
sbb
nop
sub
adc
pop
int3
aad
mov
add
xor
dec
movsb
hlt
rclb
adc
cmp
popf
push
inc
mov
ficoms
push
jle
lods
and
data16
inc
adc
leave
sbb
int
cmc
mov
or
out
sbb
cmpl
incb
sub
mov
push
and
inc
out
dec
fimuls
fistpll
sbb
add
into
inc
sub
mov
cmp
les
pop
inc
cmp
pop
cli
mov
inc
imul
or
xchg
and
jno
mov
sub
fisubrs
in
fdivrl
inc
mov
xchg
cmp
out
adc
pop
lahf
and
notb
push
hlt
cs
jno
test
add
jns
aas
push
fwait
sbb
popf
stos
int3
arpl
leave
pop
mov
xor
test
mov
in
loope
inc
adc
pop
fdivl
in
push
cli
fsts
dec
lds
je
jl
stc
adcb
scas
rorl
or
test
fstl
push
add
fmull
hlt
push
dec
sbb
mov
insb
pop
lahf
mov
aam
push
jb
or
mov
je
or
daa
push
int
ljmp
pushf
jg
xor
and
bound
stos
leave
insb
cltd
xchg
mov
and
push
mov
add
sbb
pop
je
cmp
mul
mov
rolb
mov
cmp
mov
lods
jl
jbe
mov
pop
jns
aad
test
cli
cmpsl
int
sbb
inc
pop
adc
cld
dec
movsb
mov
lea
mov
jp
adc
repnz
cwtl
dec
push
mov
or
push
pushf
test
add
fdiv
fwait
mov
bound
push
daa
and
dec
sub
sbb
add
test
push
push
mov
adc
shrb
js
xchg
push
cmp
shlb
and
pusha
push
mov
pop
test
dec
add
mov
cmp
enter
sub
sbb
adc
dec
jae
lods
js
repnz
movsb
movsb
loop
in
mov
xor
sbb
dec
addr16
cmp
je
shrl
cmp
sarb
jle
jecxz
dec
and
mov
jns
and
in
arpl
xor
fs
out
orl
adc
sub
into
cmpb
scas
aam
bound
and
mov
scas
hlt
cmp
int3
outsl
sub
inc
xlat
mov
orb
pop
sti
movsb
in
jp
jns
lret
and
data16
sahf
pop
je
repz
arpl
sub
sar
adc
and
in
xchg
test
push
popa
xor
dec
xchg
movsb
mov
pop
les
jns
imul
and
fsubrs
fwait
lcall
fsubrl
and
xchg
and
mov
cmpsb
mov
shll
sti
push
in
jbe
xchg
mov
rorl
mov
sub
lcall
aam
add
testl
addl
inc
popf
es
lea
fidivs
fisttpll
addr16
inc
rcrl
es
push
fstps
lret
das
aas
in
test
rol
xor
aaa
inc
arpl
mov
das
pop
mov
hlt
bound
adc
nop
xor
xchg
lret
mov
popf
mov
aam
mov
push
or
mov
mov
orb
lcall
mov
inc
jl
push
lret
out
mov
or
pop
add
scas
or
stc
daa
adc
repnz
jp
lds
leave
push
into
adc
daa
and
xlat
sahf
dec
xor
es
push
mov
adc
sub
inc
bound
repnz
add
push
sbb
fmul
je
mov
pop
call
nop
or
pop
fsubl
adc
fmull
inc
punpcklwd
je
cmc
pop
push
cmc
pop
fstl
mov
lahf
jmp
inc
pop
bound
xchg
je
dec
insl
fwait
idivb
out
movsb
dec
out
in
cmpsl
jg
fbstp
or
das
push
adc
jo
lret
mov
cwtl
xchg
dec
push
arpl
xchg
lahf
fstl
js
in
adc
mov
pop
or
xchg
lock
es
jo
or
jne
test
push
dec
mov
cltd
lea
lea
lock
dec
push
jno
hlt
mov
cmc
add
into
mov
jns
or
lahf
push
lret
daa
push
or
push
and
out
or
jb
loope
test
sbb
dec
push
dec
add
lods
inc
das
shlb
movl
adc
test
aaa
cwtl
adc
loopne
lahf
fnsave
cs
sub
lea
add
add
jmp
in
mov
jb
fcmovnbe
aaa
aaa
pop
push
es
xor
mov
add
dec
adc
dec
jb
in
je
repnz
mov
adc
add
xor
movlhps
sub
push
sbb
jb
sbb
mov
xchg
jne
int3
dec
rcrb
push
out
xchg
fnstsw
jmp
in
andl
inc
push
adc
sub
lret
adc
bswap
lods
and
dec
adc
adc
iret
shll
pop
adc
fidivrs
imul
es
ds
push
push
push
sti
cmp
cmp
aaa
sbb
imul
loopne
mov
mov
dec
mov
cmc
fldl
sub
inc
aaa
sub
fdivrp
add
adc
and
jno
fsubrp
cltd
das
shrl
or
shll
lea
mov
xchg
imul
int3
dec
lods
mov
dec
xor
push
dec
or
pop
mov
push
adc
lea
jecxz
push
mov
push
mov
int3
push
dec
push
xchg
cmp
sbb
lret
mov
xchg
dec
push
dec
shll
inc
sub
sbb
fsubl
dec
xor
es
xor
cmp
add
sub
push
push
cmpsb
shlb
icebp
es
push
and
dec
int3
add
data16
testl
jns
sbb
pop
mov
rcll
ljmp
mov
ret
imul
adc
inc
iret
add
fistl
adc
sahf
adc
push
inc
insb
gs
push
fwait
bound
sahf
pop
fisubs
pop
fistpl
aam
data16
inc
int3
cmp
pop
out
mov
jae
andb
pop
jl
jmp
movsb
gs
or
cltd
and
mov
mov
enter
iret
xor
xlat
repz
aaa
add
inc
fs
in
test
fisubl
push
sub
dec
addb
sub
sbb
inc
std
sbbb
xrelease
aad
scas
jb
rcl
cmp
add
inc
sbb
cli
and
adc
jns
shll
rorl
inc
adc
cmp
sbb
mov
shrb
and
pop
pop
dec
mov
xor
mov
cltd
fidivs
test
mov
insb
dec
lret
pop
mov
or
addb
jne
dec
xchg
sub
loopne
add
arpl
or
dec
jge
cs
mov
xchg
adc
add
loop
xchg
outsb
data16
push
leave
mov
fsubl
cld
cmc
adc
cmovo
cmpsl
pop
mov
lcall
loop
ljmp
inc
mov
jae
mov
or
enter
lcall
pop
xchg
fwait
mov
mov
jb
scas
cli
jne
jl
scas
adc
int3
push
push
sub
adc
inc
ret
mov
pop
adc
cmp
adc
jmp
add
cltd
fildll
and
cmp
loopne
xchg
sub
jp
xor
cmp
mov
push
das
dec
inc
sbb
mov
mov
mov
dec
xchg
xlat
inc
xchg
insl
xchg
jbe
or
out
cs
mov
sub
mov
and
xchg
push
or
and
adc
loop
inc
test
or
adc
sbb
repz
push
adc
lds
test
in
hlt
pop
cmp
cs
outsl
das
sub
insb
sbb
or
cmp
out
inc
mov
xchg
popf
bound
adc
out
push
mov
sub
inc
jl
dec
cmp
cs
scas
dec
repnz
or
movsb
nop
push
add
pop
mov
dec
lods
mov
mov
mov
push
dec
mov
mov
xor
pop
sbb
sbb
adc
test
mov
repz
push
push
jle
cmp
outsb
test
mov
fiadds
mov
in
jp
sub
aas
push
leave
lea
and
sub
mov
getsec
fs
push
push
adc
mov
mov
sub
packuswb
mov
push
enter
adcl
xchg
stos
cmp
pop
jecxz
fwait
sbb
iret
pop
lea
loope
daa
sub
hlt
enter
and
adc
push
adc
adc
xchg
pop
push
or
sbb
pop
or
push
pop
adc
dec
sub
and
and
and
jno
sub
hlt
adc
or
pusha
sub
sub
mov
xor
xchg
and
and
imul
lds
gs
fildl
mov
push
xchg
std
push
nop
cld
or
jae
sub
cmp
pop
push
adc
lods
sbb
add
pop
div
cltd
lcall
xchg
cmc
sub
popf
movd
aad
push
and
mov
popf
adc
cmp
push
psrlq
push
add
popa
aas
in
lods
mov
les
xchg
mov
fiadds
sbb
not
mov
adc
fisubl
es
orb
and
jg
mov
and
lock
push
xor
adcb
sbb
inc
inc
mov
lods
rorl
imul
lret
jns
ljmp
jno
es
loope
rorl
hlt
rorb
popa
int3
push
adc
cmpl
lahf
and
jns
sub
xor
mov
sub
push
pop
and
xor
push
fiaddl
popa
xor
in
push
dec
cmc
pop
mov
loope
and
or
in
loope
popa
add
xor
insb
pop
sti
sub
imul
cmpsl
sarl
cmpsb
loop
lcall
push
je
mov
mov
mov
std
or
gs
lcall
jnp
inc
mov
sbb
add
inc
dec
ds
orl
add
outsb
mov
mov
stos
int3
imul
mov
push
jne
lahf
inc
or
fimuls
test
pop
inc
mov
xchg
sub
aad
push
fwait
xchg
outsl
pop
mov
push
xchg
lea
dec
jae
cmpsl
push
pop
sub
movsb
in
sbb
lcall
sbb
loop
pop
mov
loop
pop
dec
pop
jno
add
xchg
and
lahf
inc
mov
pop
push
jecxz
popf
or
add
ss
scas
movsl
or
or
dec
imul
inc
ds
js
push
loope
fadd
test
cmp
adc
cwtl
mov
into
popf
push
sub
or
sub
adc
addr16
inc
es
mov
jecxz
out
subl
mov
in
inc
ficoms
pop
sub
and
shll
adc
and
mov
int
and
rol
jecxz
xchg
mov
xchg
bound
movhps
lret
fadds
mov
adc
test
lret
cli
jp
push
daa
icebp
inc
loopne
insb
mov
loopne
test
filds
rorb
mov
push
jle
in
dec
pavgb
cltd
dec
push
mov
pusha
dec
cli
js
jge
cwtl
pop
packssdw
dec
sbb
xchg
aad
sahf
jle
rcr
lret
fldcw
test
xor
adc
into
sbb
cmp
or
sub
lods
test
cmp
rclb
movsb
add
inc
adc
pushf
mov
or
mov
mov
cmpsb
xor
les
ret
adc
xor
inc
mov
add
nop
gs
imul
xor
or
pop
adc
push
xor
xlat
fildll
mov
sub
repz
fucomp
or
sahf
imul
pushf
fs
pop
xchg
call
lret
dec
aaa
sbb
mov
and
arpl
dec
test
lock
int
pop
jl
pop
sub
inc
fcmovb
insb
mov
pop
into
bound
mov
cmp
and
ret
jp
lcall
or
push
pop
sbb
xchg
xor
sbb
repz
xorb
les
mov
cs
dec
pop
pop
insl
call
sahf
iret
adc
js
mov
sahf
dec
adc
arpl
or
jmp
ret
icebp
inc
repz
sahf
add
dec
mov
sub
mov
leave
ljmp
jmp
cmp
jno,pn
jl
jnp
cmpsb
aad
ret
sbb
xchg
imulb
sbb
lods
mov
sub
cwtl
mov
push
dec
jno
scas
jmp
push
dec
sub
jnp
dec
adc
into
dec
jp
ljmp
cmp
lods
jl
adc
iret
jb
xchg
in
fstpt
push
mov
int3
jecxz
fsubs
daa
cli
mov
sbb
pop
ss
inc
outsl
and
pop
adc
pop
jecxz
in
movsl
outsb
mov
dec
cwtl
je
hlt
mov
jmp
jns
pop
rcrb
jecxz
sub
leave
outsb
sbb
fnstsw
out
mov
or
push
dec
leave
add
mov
inc
repz
xchg
cmovge
loopne
pop
mov
stos
data16
outsb
loopne
xchg
int3
pop
ljmp
xchg
fwait
dec
mov
in
cmpsl
xchg
jl
fsubrl
icebp
arpl
mov
mov
pop
sub
dec
dec
inc
popa
aam
mov
push
insb
int
sti
and
mov
je
int3
int
fs
add
xlat
inc
in
mov
sahf
or
pop
imul
sub
pop
pop
sub
xchg
add
or
into
xchg
insl
xlat
outsb
movsb
push
fdivp
insb
mov
inc
add
adc
add
pushw
mov
jne
rcl
out
movsb
and
mov
cs
sub
dec
sub
lea
es
xor
into
enter
fidivl
push
aaa
cmp
sub
stos
cmp
daa
loopne
sbb
sbb
lcall
pop
mov
js
sbb
jp
push
adc
sub
int
dec
cmp
jl
shlb
sbb
pop
add
lods
cli
or
push
pushf
lods
movsl
aaa
adc
mov
mov
mov
lods
inc
and
dec
jl
in
in
dec
jecxz
jae
adc
sub
dec
xchg
lcall
jle
cli
dec
and
xchg
push
pop
xchg
mov
push
sbb
loopne
pusha
sbb
mov
and
or
xor
or
and
popf
fsubrl
xor
xchg
and
adc
ljmp
sbb
repz
out
sub
dec
or
mov
sub
int3
cs
xchg
rcll
pop
and
adc
mov
inc
insb
lock
int3
les
flds
out
mov
dec
and
xchg
sbb
int3
jmp
rolb
push
cmpsl
sub
push
dec
popf
sub
fdivp
les
hlt
in
rcrb
cmp
and
in
fwait
sbb
ss
sahf
imul
fimuls
lret
in
fldl
inc
sbb
jecxz
sahf
in
sbb
push
rcrb
xor
pop
sbb
mov
loope
jo
fnstenv
out
pop
bnd
pop
sbb
push
cmc
push
cmp
jl
fiaddl
into
push
sbb
push
mov
mov
test
and
jl
or
int
inc
stc
subb
ljmp
lret
loopne
stos
or
inc
mov
fmull
dec
pop
mov
leave
inc
movb
push
sub
fdivrs
insb
andl
rcrl
loope
and
adc
cmp
or
jle
int
mov
adc
push
mov
lcall
inc
dec
sub
lods
cmp
mov
loope
popl
lahf
movsl
adc
enter
fstpt
cmp
mov
in
jle
dec
jae
loopne
les
jmp
mov
push
fimuls
aaa
push
or
mov
insb
cmp
or
in
dec
movsb
mov
jb
insb
out
mov
xor
dec
dec
jo
mov
push
xorb
shll
into
sub
pop
fwait
adc
push
pop
mov
pop
adc
iret
popa
push
jno
and
jmp
in
sub
repnz
xchg
cwtl
into
or
or
lea
mov
fistps
jmp
jb
sahf
lea
cltd
es
test
popf
std
adc
sub
adc
or
cwtl
push
adc
repz
xchg
test
fcompl
push
or
mov
aaa
ficompl
sub
int3
call
loopne
out
cmp
lret
or
sub
mov
int
push
sbb
cmp
jle
test
idivl
mov
scas
and
sbb
enter
sbb
es
xchg
insb
in
sbb
pop
cmp
ficoml
fistps
pushf
mov
ss
jb
mov
xchg
mov
sbb
push
cmpsb
xchg
int3
and
ljmp
or
pop
mov
sub
icebp
pusha
and
repnz
or
sbb
out
and
sbb
fisttpl
lea
sete
jle
roll
lret
imul
sahf
jno
outsb
enter
or
dec
mov
and
or
shrb
shl
or
dec
in
in
mov
dec
imul
xchg
lods
adc
pop
aaa
dec
sub
jmp
adc
xchg
xchg
sbb
pusha
mov
xchg
addr16
pop
xchg
insb
adc
stos
sbb
mov
popa
or
clc
dec
adc
ss
pop
dec
cs
push
fmull
sbb
push
outsb
ss
addr16
into
in
popa
or
into
sahf
inc
mov
sbb
call
out
iret
adc
shlb
ljmp
shlb
loopne
sbb
cmp
stos
stos
adc
xchg
sahf
jmp
push
lods
mov
and
lret
testl
test
sub
popl
les
jecxz
mov
and
rcrb
add
ret
adc
aad
mov
cmpl
ds
xchg
mov
mov
or
push
pop
push
fucomip
xchg
ja
push
jb
aas
pusha
xchg
sbb
adc
out
pop
mov
sbb
insb
and
push
insl
sbb
inc
sub
push
and
jnp
sbb
and
jle
lcall
dec
popa
loopne
insb
daa
xchg
mov
dec
test
pop
lret
push
xchg
dec
call
repnz
into
adc
pop
pop
cmp
xlat
xchg
ljmp
jge
adc
push
xchg
jl
dec
lods
cmp
mov
jp
or
mov
mov
cmp
sbb
rorl
and
dec
fstps
stos
sub
cmp
add
mov
and
daa
mov
mov
enter
or
xor
or
mov
xlat
out
adc
xchg
bndldx
pusha
faddp
add
sbb
push
cmp
ss
mov
loope
push
outsl
sbb
mov
fsub
mov
xor
cmp
int3
push
fs
fdivs
adc
lret
inc
jl
mov
xchg
repnz
std
cli
out
adc
sub
lahf
addr16
mov
adc
addr16
mov
or
sub
test
xchg
or
xor
or
or
dec
dec
inc
mov
dec
xchg
push
jb
mov
sbb
dec
dec
pop
xchg
sbb
push
repz
addr16
adc
jne
cmpsl
jp
dec
add
adc
dec
mov
dec
sub
jecxz
leave
das
sti
sbb
aad
je
nop
or
test
movsl
or
jns
fwait
add
bound
sti
insl
pop
push
dec
addr16
pop
inc
fbld
testb
or
mov
and
stos
push
sub
mov
mov
push
jne
shlb
int
cmc
popf
dec
mov
adc
cmp
fwait
movsb
jbe
popa
ficomps
shrl
leave
jne
popa
ljmp
ficompl
imul
mov
insl
in
cwtl
jmp
xor
mov
dec
out
loopne
in
or
cmp
sarb
pop
test
jl
cs
or
pop
das
sahf
add
adc
int
xor
arpl
and
jmp
out
cld
dec
xchg
inc
loopne
jge
or
push
add
popf
lahf
and
xor
lods
push
sbb
jmp
mov
in
sbb
xchg
adc
mov
sub
dec
sbb
loope
mov
repz
addr16
pushf
or
adc
inc
adc
jmp
bnd
or
add
insb
mov
pop
adc
adc
xchg
push
rorl
in
movsl
inc
cmp
sub
cmc
or
push
dec
nop
sbb
stos
loope
addr16
mov
ret
ja
mov
subl
xchg
es
sub
iret
cmc
and
or
test
fsts
int
aad
adc
xor
mov
mov
adc
int3
clc
ja
in
pop
mov
loope
push
and
sbb
imull
call
lods
mov
cmp
mov
addr16
adc
mov
ljmp
outsl
mov
daa
je
mov
adc
and
mov
cmp
aaa
adc
add
lock
aaa
dec
lret
sub
je
ds
sub
push
or
in
cmp
das
or
xor
sahf
adc
icebp
mov
enter
add
into
popf
les
or
scas
rcrl
out
push
push
shll
jns
shlb
fimull
dec
ljmp
add
xchg
mov
hlt
out
sub
ja
stos
in
adc
insl
jmp
sarb
popa
dec
xor
in
negl
fldl
int
xchg
sub
outsl
lahf
mov
idiv
mov
shrl
in
or
jle
xor
xor
and
aad
les
dec
sbb
insl
pop
inc
inc
daa
loop
and
or
inc
cmp
push
push
test
lahf
nop
xchg
sbb
add
adc
sbb
inc
push
test
or
imul
xor
jmp
mov
imul
or
mov
mov
sbb
cs
dec
cmp
adc
cmp
sub
inc
adc
dec
ss
push
xor
inc
mov
xchg
bound
sbb
hlt
dec
push
cmp
pop
mov
flds
sub
lcall
cmp
mov
jne
ret
int3
mov
test
loope
dec
pop
xor
into
mov
fcmove
sbb
out
or
xor
fists
mov
sub
adc
or
sbb
dec
and
pop
add
push
push
sub
push
sub
add
sub
push
sbb
and
adc
cmpb
xor
sub
ss
sbb
sub
xor
push
push
or
frstor
xchg
or
mov
xchg
xchg
cmp
xlat
mov
cwtl
pushf
or
mov
jbe
xchg
dec
test
dec
xor
or
sub
add
cmovle
push
adc
mov
imulb
adc
xchg
mov
sbb
inc
add
inc
into
das
mov
stos
adc
insb
push
dec
adc
or
xor
cmpsl
push
pop
outsb
mov
xchg
and
pushf
push
push
add
pop
jae
adc
stos
rcll
fcoms
ffreep
mov
sbb
inc
xor
xor
jbe
adc
sub
adc
pop
push
lcall
cld
xchg
rorb
xor
adc
mov
addl
push
stos
dec
adc
stos
dec
adc
lods
mov
jns
or
dec
ja
aam
push
pop
adc
rcrl
fcomps
mov
xchg
mov
push
sbb
ror
inc
cli
sbb
pop
sub
mov
jb
ss
imul
sub
sbb
mov
push
repz
mov
rcrb
inc
push
push
xor
notb
fnstenv
adc
ficoml
imul
es
lods
push
dec
sub
sbb
adc
or
lahf
test
adc
push
sbb
add
adc
xchg
mov
xchg
inc
das
pop
mov
stos
or
add
lcall
das
ss
or
mov
dec
adc
add
enter
adc
filds
dec
sbb
add
stos
arpl
xchg
sub
xor
xchg
sub
cmp
sub
cld
or
fwait
das
sub
hlt
jl
jae
fwait
lods
call
sbb
push
cmp
insl
jb
int3
clc
mov
rolb
fcmovbe
sbb
mov
adc
push
sbb
int3
pop
xor
pushf
push
sbb
cmp
lcall
adc
cmp
and
xchg
cmp
push
or
mov
pop
adc
mov
mov
sub
push
or
add
sahf
lods
push
notl
ss
sub
clc
mov
or
aam
xchg
stos
xchg
add
je
sbb
aaa
jb
push
sbb
popl
adc
inc
push
int3
imul
push
push
or
pop
and
dec
jmp
push
xchg
lcall
adc
or
dec
adc
xchg
mov
lcall
and
sbb
daa
pop
fistpll
sbb
push
mov
and
pop
mov
or
fwait
push
or
xor
adc
lcall
or
jle
sub
inc
sub
xchg
adc
test
fildl
in
out
and
in
rclb
int3
hlt
adc
or
scas
xor
xchg
xchg
shll
addl
lcall
and
xchg
ds
rcrl
sub
add
xchg
or
lcall
inc
inc
xor
sub
xor
lcall
out
aaa
dec
scas
sub
fistl
xchg
xchg
and
cmp
sub
lcall
das
fcomps
imul
out
roll
movsl
xlat
mov
mov
stos
rorb
adc
push
lcall
dec
rorb
cmp
mov
bswap
inc
ds
push
lea
fimuls
pop
push
sub
sbb
jb
xor
in
adc
lcall
xchg
sti
inc
lcall
es
sbb
lods
or
pop
adc
push
cmp
jmp
push
inc
or
std
sub
fwait
insb
mov
repz
add
or
xchg
jno
push
jecxz
dec
fisttps
or
xor
inc
sub
adc
jp
sbb
mov
enter
push
cli
stos
sub
mov
cmp
sbb
cs
sbb
imul
in
adc
and
sbb
pusha
sub
sub
pop
push
xchg
pmuludq
push
xorb
lea
cmp
or
or
fcoml
sub
aaa
sbb
sbb
jns
or
or
pop
mov
dec
mov
push
jo
lods
push
ss
aas
pusha
dec
xchg
sbb
jo
les
es
mov
adc
xor
adc
inc
push
repz
sub
adc
and
adc
sub
jp
sub
push
push
into
fldz
mov
push
xor
sahf
lret
push
cltd
adc
shrb
mov
jl
cltd
pop
fistpl
push
jae
push
xchg
lods
lcall
inc
cmp
mov
push
icebp
inc
cmp
aaa
xor
cmp
das
inc
imul
cld
push
test
sbb
loope
jle
dec
xor
push
je
or
and
popl
sub
imul
fsubs
pushf
shr
xor
cld
das
adc
mov
sub
push
xchg
xor
mov
pop
xor
xchg
xor
out
adc
fsubl
inc
test
push
pop
xchg
push
sub
sbb
sbb
cmpsb
sub
xchg
or
sub
jmp
pop
dec
pop
sbb
dec
lds
int3
push
sub
pushf
inc
push
push
mov
iret
push
sub
sbb
cmp
cmovge
and
xchg
in
pop
sub
out
adc
mov
jae
sub
enter
dec
jl
inc
jmp
icebp
gs
fnstenv
mov
push
xor
or
sub
fadds
cs
push
fiaddl
sub
cmp
push
xor
je
add
clc
xor
sbb
jbe
adc
push
fmull
adc
cwtl
push
sub
push
std
pop
and
pop
and
daa
lcall
and
mov
push
mov
das
and
sub
sti
testl
xchg
push
cmp
push
jne
adc
xchg
mov
shrl
jo
arpl
mov
add
fisubs
push
dec
cmpsl
cmp
dec
push
adc
imul
mov
dec
sub
popf
push
pop
addr16
inc
fisubrl
cs
cltd
cwtl
in
psrld
sub
inc
decl
xchg
arpl
cmp
fstpt
inc
xchg
aam
and
jbe
and
push
mov
or
adc
xchg
xor
int
mov
push
loope
push
sbb
jmp
and
aam
or
loopne
mov
sbb
andl
aam
adc
sbb
loopne
sbb
sbb
nop
lods
fstpl
or
js
jno,pn
mov
shlb
pop
shll
cmp
xor
and
fsubp
fwait
or
pop
outsb
cmc
mov
adc
cmp
int
xchg
push
out
nop
add
movq
or
sub
adc
lcall
in
xchg
or
rcll
sbb
imul
lcall
repz
outsl
and
pop
inc
mov
rorl
dec
and
sbb
sbb
mov
adc
mov
push
adc
inc
sub
mov
xchg
cmpsb
pop
sub
sahf
mov
adc
sbb
mov
jmp
xchg
xor
xchg
adc
and
or
sahf
shrb
inc
sub
cmpsl
push
sub
daa
inc
lcall
or
xchg
adc
aad
shrb
or
jecxz
xchg
push
lcall
inc
lcall
inc
cmp
data16
adc
sub
insb
sbb
jae
cmp
dec
inc
subb
out
pop
sub
push
and
loope
push
sub
push
cmp
sbb
mov
loope
loope
adc
aas
aam
xchg
jae,pt
push
popf
or
sbb
ja
sbb
xlat
daa
cmp
add
repz
mov
dec
or
or
push
push
or
sbb
inc
xchg
inc
xor
scas
sbb
push
cmp
lcall
mov
adc
push
xchg
inc
xor
push
test
push
adc
sbb
lcall
cmp
pop
bound
cmp
mov
adc
ds
jb
sub
cmp
dec
pop
add
xor
mov
in
pop
and
lea
or
mull
cmp
xor
lcall
lret
loopne
das
jne
push
es
lret
cmp
sbb
push
les
fcom
cmp
xor
loope
adc
jnp
int3
sbb
mov
cmp
xchg
ja
sub
adc
mov
popf
inc
push
outsl
lea
aas
sub
pop
inc
or
imul
sub
jmp
sbb
sbb
adc
sbb
cmp
xchg
inc
setp
mov
cmovbe
xor
or
imul
sub
pop
cmp
lea
xchg
cmp
sbb
or
lahf
sbb
aam
lea
adc
pop
sbb
imul
sub
pop
and
imul
sub
in
xor
mov
or
bound
bound
lret
push
dec
sub
pop
pop
cs
xor
ficompl
push
or
stos
pop
in
dec
rorl
rcrl
jbe
in
adc
dec
testb
and
sub
pop
xor
ficoms
push
aas
push
out
inc
dec
pusha
mov
or
rolb
xchg
cwtl
movd
sub
xchg
fnstsw
mov
pop
lea
mov
and
lcall
sub
lcall
xor
cmp
sub
inc
push
outsl
sbb
xchg
adc
lahf
xchg
lea
push
push
mov
into
xor
and
pop
daa
or
imul
sub
pop
ss
shl
or
adc
cmpsb
push
pop
pop
adc
arpl
sub
mov
lcall
cmp
inc
push
cmpsb
aas
dec
cwtl
dec
adc
fbld
sub
jne
scas
ja
lahf
pop
pop
mov
je
dec
push
push
daa
push
idivl
sbb
xor
cmp
cmp
cmp
xchg
push
lahf
adc
cltd
mov
jge
mov
add
rorb
adc
add
int3
xchg
cmp
imul
push
push
and
push
push
test
adc
cmp
sahf
xchg
push
xchg
cld
or
inc
or
or
push
clc
sub
adc
loopne
mov
or
sbb
push
and
mov
push
in
or
adc
xchg
test
xor
mov
push
ds
cltd
jns
or
clc
mov
lods
inc
sub
mov
or
inc
cmpsl
push
icebp
pop
cmp
jae
jae
cmpsb
xchg
or
and
int3
shrl
out
lock
int
jns
sti
ja
jb
sbb
cmpsb
neg
xor
ds
test
adc
dec
rorb
dec
movsb
cmp
sbb
or
movsb
incl
sub
std
cmpsb
xchg
xchg
bound
dec
push
mov
jne
xor
mov
inc
lcall
ja
mov
push
int3
daa
add
popa
dec
std
dec
xchg
aam
data16
and
lods
pushf
imul
stos
lcall
lret
pop
push
push
out
cmp
push
notl
imul
aas
sub
es
cmp
loope
icebp
jo
cmp
push
lcall
aam
xorl
mov
idivl
lock
or
and
dec
mov
pop
push
pop
aad
mov
pop
fs
inc
push
aas
int3
fimull
pop
daa
fnstenv
and
nop
lret
xchg
addr16
int
jbe
aam
xor
dec
mov
push
add
sub
jnp
outsl
xor
ss
xor
xor
adc
shrb
test
xchg
stos
scas
xchg
jae,pn
xchg
scas
jae
nop
jecxz
push
int3
sub
sub
and
xchg
jbe
mov
icebp
sbb
inc
mov
xchg
sbb
jle
shrb
out
andb
in
sbb
shl
outsb
loopne
cmp
js
movntq
jmp
sbb
push
xchg
inc
cmp
or
es
adc
push
mov
sbb
sbb
aad
sub
cmp
adc
push
insb
pop
dec
inc
dec
cwtl
inc
pop
or
insb
scas
insl
notl
lods
and
out
pop
or
push
test
movsl
aam
push
adc
out
xchg
icebp
or
int3
mov
lcall
push
xor
lods
leave
and
out
dec
call
dec
mov
repnz
mov
sub
imul
add
adc
add
sbb
xor
add
jge
dec
or
or
cmpsl
mov
mov
adc
sbb
enter
sub
dec
dec
adc
arpl
or
jne
cmp
mov
jb
adc
jmp
cwtl
sbb
dec
dec
lret
movsb
int3
loop
push
or
lcall
je
cmp
hlt
mov
xchg
rol
pop
xor
or
adc
and
and
lods
arpl
mov
daa
popa
adc
and
sub
sub
dec
out
push
add
lock
sub
jnp
int3
push
adc
mov
insl
sarl
lcall
and
call
xchg
outsl
popf
rep
mov
aam
fistl
or
sub
and
push
ret
xchg
cs
pop
cwtl
push
pushf
loopne
xchg
sub
add
lcall
jmp
inc
into
popf
int3
cwtl
xor
loop
or
push
xchg
adc
or
push
into
sbb
jb
int3
aas
and
cs
adc
test
or
push
sub
mov
into
in
leave
sub
push
xchg
dec
or
pop
sub
xchg
out
pusha
sbb
dec
bound
lods
or
or
push
push
inc
sbb
cmpsl
imul
adc
mov
inc
bound
mov
or
mov
xor
outsb
push
xor
negl
xlat
sahf
cmp
mov
mov
inc
push
xchg
lods
or
pop
cmp
mov
mov
out
mov
sarl
xchg
or
sub
adc
sbb
sbb
enter
movsl
imul
jg
adc
sbb
or
push
and
xchg
mov
outsb
xor
pop
out
jb
lret
xor
dec
into
test
push
inc
push
lock
adc
jns
cmp
mov
adc
push
and
push
and
sub
pop
push
xor
adc
out
lds
cs
sub
sahf
mov
lcall
test
push
out
sub
adc
mov
cmp
pushf
xchg
repnz
cs
sub
es
add
ror
pop
stc
inc
xchg
mov
or
xchg
dec
aaa
mov
sahf
testl
sub
add
cmp
cmp
adc
mov
cmp
mov
adc
cltd
add
push
xchg
test
push
cmc
enter
xor
xlat
xchg
fstl
xor
mov
mov
adc
lods
repnz
int3
aad
adc
mov
lcall
das
sbb
ds
movsb
or
stos
lcall
sbb
xchg
cmp
xchg
repnz
sub
insb
or
daa
jb
lret
ss
or
int3
adc
dec
ret
and
xor
xor
adc
jnp
mov
int3
push
cs
and
mov
pushf
lcall
jnp
jo
jbe
xchg
int3
push
divb
divb
adc
mov
jbe
repnz
pop
sarl
dec
lcall
lcall
inc
adc
mov
lret
test
jb
inc
icebp
adc
add
in
adc
xor
fisubl
arpl
lcall
icebp
call
ljmp
mov
adc
sub
dec
jb
cmp
imul
mov
add
sbb
clc
setp
push
negb
mov
adc
sub
call
sub
or
jbe
cmpsb
and
and
das
jb
outsl
and
sub
dec
push
push
jbe
sub
cmp
fdiv
xchg
push
movsl
xchg
push
lret
outsb
add
jg
sub
xchg
pop
pop
or
iret
push
xchg
adc
push
or
or
push
lcall
sub
mov
push
and
notb
cmp
adc
rclb
xchg
sbb
int3
insb
sbb
pusha
push
ss
sahf
push
push
and
add
pop
push
pop
push
adc
mov
mov
sbb
xor
sbb
push
xchg
andb
push
mov
sbb
cs
ror
push
xlat
shlb
cmpb
cmp
lcall
test
push
sub
cmpsl
lcall
jnp
mov
sub
pop
mov
mov
out
cmc
cmp
cmp
push
xor
sbb
inc
dec
mov
stos
xchg
or
push
add
push
add
ss
mov
dec
sti
or
push
inc
sbb
pop
lcall
les
pushf
adc
or
fwait
arpl
adc
sub
in
pop
mov
jae
repnz
imul
xor
pop
fwait
stos
imul
and
into
and
sub
dec
cmp
xchg
jecxz
push
dec
pushf
es
dec
inc
push
cmp
dec
in
push
push
lahf
mov
sub
cmpsb
mov
push
sbb
mov
cmp
or
lods
cmpsl
pop
lods
and
sub
jb
mov
movsb
adc
or
sbb
push
dec
adc
xchg
push
ds
rclb
sub
and
push
popl
outsl
or
cmp
adc
and
rol
push
inc
sti
push
inc
stc
lahf
inc
int3
pop
pop
mov
lcall
cmovle
xor
jb
fadd
push
aad
add
or
aam
push
push
dec
push
or
sub
mov
or
das
fcoms
adc
ljmp
pop
es
xchg
fcompl
and
cwtl
xor
or
xor
sbb
rolb
dec
cmp
iret
adc
addr16
call
mov
or
adc
mov
sbb
adc
mov
mov
mov
or
call
adc
jae
xor
push
xor
mov
add
mov
and
in
adc
cmp
mov
push
add
loopne
insb
sub
or
or
xchg
xchg
sbb
push
insb
jno
sub
sub
mov
lea
dec
dec
or
int3
xlat
xorl
in
xchg
jo
mov
pop
imul
imul
jle
lcall
xor
sbb
aam
xor
es
sub
cmp
sbb
lea
jle
lcall
adc
loope
mov
adc
mov
xchg
pop
inc
sub
push
sub
sbb
mov
cmc
arpl
das
xchg
mov
sub
and
sysenter
nop
push
movsl
and
adc
push
aas
inc
inc
fisubrs
push
movsl
sysenter
ds
xchg
and
or
repnz
jbe
repnz
cmp
inc
ret
int3
ret
mov
push
in
jp
and
sbb
and
push
push
sub
cmpsl
lcall
adc
lcall
insb
cmp
popf
imul
sahf
inc
cs
ds
push
push
dec
adc
mov
test
push
aad
xchg
xor
sbb
adc
dec
or
lea
ss
mov
lcall
sbb
push
or
sub
add
pop
pop
sbb
in
sbb
pop
aaa
rcll
or
aaa
fstpl
or
xor
push
pop
imul
or
jns
push
bound
jecxz
pop
es
and
xor
inc
fucomip
adc
loopne
into
ret
jne
dec
ss
push
dec
sub
cmp
test
push
sub
or
inc
ss
notl
lcall
mov
and
inc
add
sub
or
cs
cmp
xchg
push
or
in
push
and
dec
mov
dec
dec
push
data16
mov
sbb
or
test
adc
cs
push
std
inc
or
xor
dec
jmp
pop
or
push
pop
and
movsl
jns
cmp
cmpsb
lahf
push
lcall
adc
inc
cmp
enter
pop
insb
sbbl
repnz
dec
fldl
shlb
jno
int3
dec
loopne
xchg
xchg
or
push
or
sub
xor
enter
lcall
cmpsl
adc
es
cmp
scas
aaa
xor
sub
out
mov
stc
fwait
cmp
add
and
mov
xchg
fwait
out
add
in
sti
add
pop
mov
subb
test
out
add
and
push
inc
dec
lods
inc
rorb
inc
mov
repz
ds
xlat
xor
sbb
imul
addl
ds
pop
push
rorb
xor
notb
inc
sub
mov
cwtl
xor
imul
rorl
pushf
xchg
xor
push
test
rsqrtps
testl
mov
xchg
dec
sti
jae
sbb
pop
sahf
inc
or
adc
es
sarb
aam
dec
lea
pop
cmp
lcall
test
sub
add
sbb
push
mov
mov
push
push
adc
push
sub
push
xor
outsb
and
shrb
jbe
xor
das
or
cwtl
adc
and
push
mov
movsb
sub
mov
or
fwait
test
push
or
cmp
xchg
mov
lcall
shl
dec
lret
mov
out
in
orl
push
nop
rorb
dec
pushf
or
inc
sub
js
or
imul
xchg
or
int3
xchg
cmpsb
and
insl
lret
sbb
sbb
adc
xchg
loope
insb
stos
xchg
dec
cmp
daa
mov
inc
hlt
popf
push
mov
call
lods
ficoml
test
lods
adc
es
mov
and
cmp
xor
test
or
and
or
sbb
and
pop
sbb
mov
jae
or
inc
out
and
push
xor
push
mov
rcr
jl
xor
dec
sti
mov
or
aaa
push
add
in
xor
or
jo
sub
mov
or
xchg
jae
cmc
lods
sub
out
sub
push
negb
jbe
dec
cs
sub
cmp
inc
aas
enter
sbb
jb,pn
hlt
xchg
sbb
ds
scas
imul
add
sub
xor
push
psubsb
xchg
mov
pop
test
and
int3
repz
cs
sub
xchg
sbb
sahf
int3
sbb
and
ds
dec
lods
aad
mov
fdivl
inc
sbb
fcompl
mov
pop
adc
sbb
stos
ror
xorb
fwait
jbe
mov
pop
dec
nop
add
dec
push
insb
dec
movsl
mov
sub
and
or
sbb
or
add
fsubr
push
mov
mov
sub
dec
nop
aaa
xchg
mov
mov
es
mov
call
lock
lods
dec
les
adc
push
xor
lods
mov
cmp
stos
out
test
jnp
popa
mov
fiadds
int3
and
fcmovnu
cmp
fildl
lock
or
cmpsl
dec
push
cmp
jg
push
cltd
mov
push
fs
inc
out
imul
sub
es
dec
pop
jae
mov
push
ss
test
sub
sbb
push
inc
push
mov
test
mov
popf
xor
int3
adc
cwtl
fbstp
xor
sahf
xchg
jne
das
int3
xchg
arpl
push
sub
sub
push
push
popf
pop
xor
xchg
mov
push
enter
or
sbb
iret
movsb
lods
rcrb
push
adc
push
cmpsb
int3
sbb
sbb
push
mov
sbb
iret
dec
data16
rorl
push
iret
cmp
lcall
iret
dec
push
sub
mov
rcrb
lret
faddl
add
jbe
lcall
xor
or
or
enter
dec
or
adc
adc
sbb
mov
loope
xor
fcmovbe
sbb
int
pop
pop
cli
fildll
dec
mov
jo
jle
lcall
add
sbb
sbb
ss
lahf
lods
xor
inc
outsl
sbb
push
subb
sub
imul
mov
es
xor
lds
aad
dec
cs
sbb
enter
rcll
out
sub
adc
mov
cmp
pushf
das
add
jae
test
dec
test
dec
adc
aas
xchg
sbb
or
cmp
mov
stos
and
jge
in
insb
xchg
popf
imul
and
push
lea
cltd
test
mov
xor
adc
mov
adc
inc
pop
sbb
std
es
xchg
xor
scas
push
push
jns
lcall
rcr
mov
das
and
ja
sub
jmp
nop
cltd
dec
mov
pop
outsb
xor
lcall
sbb
pusha
or
or
fldl
push
and
inc
or
fiadds
mov
stos
adc
adc
into
fnop
adc
and
insl
mov
arpl
xlat
pop
pop
adc
mov
shl
and
outsb
cmp
pop
xor
icebp
xor
sbb
insb
add
xchg
sbb
sub
cmpsb
shlb
add
dec
ret
pop
push
xlat
mov
andl
cli
fadd
adc
cltd
fbld
and
jns
adc
es
and
lahf
es
fsubrs
sbb
pop
flds
add
ficomps
push
lods
push
push
sti
adc
mov
xchg
cmp
push
xchg
filds
adc
jle
mov
dec
or
pushf
mov
pusha
aaa
sbb
and
mov
sbb
add
out
jns
sahf
mov
int3
xlat
lcall
or
or
cmp
lods
xchg
pop
or
pop
rorl
cmp
lcall
sbb
out
jno
sbb
xchg
adc
into
dec
cs
ret
in
cmp
pavgb
cs
arpl
dec
xchg
inc
andl
adc
xor
push
clc
int
cmpsb
or
pop
pop
setbe
insl
into
aas
xchg
sub
xor
insb
xchg
data16
and
enter
adc
fmuls
ficoms
cmp
dec
cmp
popf
subl
xor
adc
dec
xchg
lea
sbb
xchg
lea
and
cmp
ret
pusha
shrb
in
loop
aam
cli
lcall
and
inc
out
adc
dec
push
adc
inc
enter
lcall
lock
lcall
mov
jbe
sub
popf
inc
arpl
orl
dec
repz
xchg
cmp
and
lcall
jae
enter
mov
test
aas
in
add
mov
dec
out
or
je
mov
jmp
rclb
push
and
bound
cmpsb
ficompl
adc
je
inc
adc
dec
sbb
dec
add
enter
mov
in
push
test
and
pop
sub
jae
xchg
es
fwait
enter
jge
sub
xor
add
ss
or
inc
jne,pt
imul
sub
jle
movntps
mov
or
cmp
adc
mov
cmpsl
fisttpl
sbb
jg
and
lds
cmp
push
pushf
sub
fwait
or
lods
aad
sbb
xchg
ret
push
jecxz
wrmsr
xchg
rorl
adcb
sub
xorl
int3
lcall
out
mov
sub
mov
int3
mov
out
sbb
or
mov
lods
andb
lret
dec
ja
fistps
in
push
cs
or
enter
xchg
stc
and
mull
fldt
push
push
adcb
sub
shll
or
divl
arpl
adc
test
xchg
lods
cmp
ds
jmp
xchg
lock
jns
push
mov
bound
push
fistl
jbe
in
into
popa
dec
out
outsl
push
shlb
rol
lods
sarl
push
pop
push
and
xchg
or
int3
popf
inc
decl
inc
lods
cmpsb
movsb
xchg
add
sbb
cmpsb
lods
push
inc
or
lods
mov
cmpsb
dec
push
xor
test
jne
hlt
sbb
lahf
and
push
push
xchg
es
adc
outsb
adc
sbb
imul
xchg
lahf
sbb
pop
or
jle
sbb
cmp
fmull
mov
push
or
inc
pusha
or
inc
xor
sub
add
jle
lcall
xor
fmuls
leave
loope
outsl
xlat
cmp
xchg
push
rorl
push
or
cmp
mov
xor
xor
push
push
dec
mov
dec
jbe
inc
ret
inc
ret
ds
adcb
sahf
pop
sbb
cltd
pushf
push
sub
push
movsl
jns
push
cmp
sbb
subb
or
hlt
sbb
cs
in
xchg
mov
xchg
rcll
adc
and
sub
and
push
xchg
adc
test
inc
adc
sub
ficoml
sbb
adc
jns
cmp
mov
cmpsb
jg
sub
or
aad
orl
test
inc
filds
sbb
inc
push
push
mov
jns
jns
fistpl
xorl
inc
aad
mov
jge
jg
in
or
add
inc
sub
enter
fstps
pop
lock
push
out
stos
push
in
fimuls
mov
sbb
adc
fstpl
loop
cmp
dec
and
xchg
xor
xor
lods
pop
fcoms
lret
mov
ds
shrl
jae
jnp
adc
or
test
movb
adc
dec
push
sbb
repnz
sbb
mov
xor
or
adc
insb
pop
int3
jl
or
int3
cmp
cmp
int3
and
jecxz
inc
inc
setbe
or
xor
add
in
mov
dec
jb
mov
ficoml
push
ss
lahf
xor
adc
rorb
inc
sbb
sbb
lods
sbb
movb
adc
add
and
adc
push
or
ds
mov
pop
cli
fstl
fldcw
rorb
mov
or
inc
mov
sahf
int3
adc
or
fwait
or
cmpsb
data16
int3
in
lcall
pop
mov
punpckhwd
xchg
push
adc
sarl
pop
or
int3
or
pop
pusha
les
pop
inc
or
in
imul
xchg
call
jecxz
aaa
push
clc
push
stos
sbb
cmp
sbb
lods
xchg
dec
outsl
ret
dec
adc
into
out
xorb
addr16
aam
int3
xchg
sbb
mov
xlat
popa
sbbb
lret
sbb
push
lahf
push
mov
xchg
push
das
or
aad
pop
mov
lods
xor
adc
push
mov
adc
add
pusha
cli
je
pop
adc
push
lea
cmp
sbb
cs
push
into
push
or
adc
int3
fcmovb
pop
pop
mov
addr16
into
push
aas
push
cmp
nop
loopne
adc
xor
sbb
cltd
pushf
inc
cwtl
push
xchg
addr16
or
xchg
imul
add
and
jae
enter
adc
insb
adc
adc
fwait
fiadds
mov
mov
leave
adc
adc
add
shr
xchg
pop
sub
xchg
push
and
jp
mov
ss
xchg
pop
mov
push
xchg
dec
stc
inc
and
pushf
push
shrb
mov
adc
call
push
and
mov
sbb
rolb
sbb
sbb
insb
ss
imul
mov
push
mov
fs
push
adc
pop
dec
or
ds
negl
out
movsl
es
sbb
sbb
out
and
and
push
push
adc
sbb
dec
push
jno
sti
pop
lods
into
cmp
adc
lcall
or
lcall
repz
and
insl
stos
adc
xor
shll
lcall
clc
inc
xchg
xor
mov
or
pop
dec
pop
stos
and
push
cwtl
dec
stos
cmp
outsl
inc
fwait
sti
push
inc
adc
bound
pop
mov
jns
push
push
push
test
mov
xor
mov
or
imul
jno
push
mov
xor
inc
add
sub
adc
adc
inc
push
sbb
add
and
lcall
cs
pushf
fcomi
int
or
cmp
lds
inc
sbb
push
nop
shrb
or
mov
xor
popa
or
jne
xor
or
test
mov
push
mov
adc
mov
fimuls
adc
rcrl
xor
xchg
cmp
nop
aaa
ss
lods
add
sbb
sbb
or
or
lods
enter
pop
adc
int
aad
xor
sbb
lar
into
dec
push
fidivl
or
push
or
xor
push
nop
cmp
out
es
mov
xchg
adc
adc
adc
push
mov
dec
mov
xchg
push
pushl
pop
and
pop
xchg
adc
sbb
ds
xchg
cmp
sub
adc
sbb
mov
mov
adc
mov
mov
push
lods
xchg
sub
jne
stos
lcall
lods
xchg
sbb
push
rcrb
stos
adc
xor
push
test
pop
push
pop
adc
sbb
push
rolb
mov
add
lcall
sbb
xchg
xor
jmp
dec
sub
test
mov
sub
iret
or
pushf
popf
cmovae
popa
das
and
mov
dec
and
push
aam
jae
or
sub
mov
pop
pmaxub
push
xor
ret
mov
into
pop
xchg
mov
push
stos
push
or
adc
or
aaa
mov
xor
fldt
out
dec
adc
sub
lcall
in
jecxz
es
push
xor
push
daa
add
or
xchg
ret
fcoms
push
ja
xchg
divb
and
ret
xchg
jbe
mov
lea
daa
adc
xor
std
sahf
lcall
ret
cmp
sub
sub
mov
jb
mov
mov
lcall
dec
jb
and
jo
inc
sub
mov
dec
movsl
int3
push
aas
push
inc
lods
mov
rclb
fidivrl
and
push
cltd
std
jb
stos
adc
fists
push
rclb
and
mov
or
mov
orb
test
pop
mov
and
sbb
sbb
cmc
dec
push
lcall
or
imul
inc
gs
add
pushf
inc
mov
stos
adc
or
sbb
lods
lret
mov
adc
imul
sub
xlat
xor
xchg
popf
push
cmp
mov
fisttps
sub
or
xchg
dec
ret
sub
sbb
bound
clc
mov
xchg
das
sub
adc
push
mov
or
dec
scas
int3
dec
or
jmp
pop
test
sarl
jecxz
hlt
mov
daa
cmp
clc
mov
enter
bound
clc
scas
pushf
aaa
xor
stc
push
push
push
mov
stos
push
popf
stos
dec
jae
push
dec
imulb
sub
ret
sbb
adc
arpl
dec
lock
jp
icebp
bound
and
pop
pop
call
dec
and
jae
jle
clc
fidivrs
popa
ss
int
outsl
jnp
jecxz
add
pop
sub
fstps
hlt
jge
push
stc
lods
xchg
pop
fsts
nop
ret
sarl
arpl
sbb
out
mov
fsubrs
cmp
lods
jmp
jge
mov
xlat
imul
lret
add
push
jge
sub
adcb
clc
in
lahf
mov
xor
int3
sbb
adc
fldl
es
xchg
jno
inc
pushf
pushf
setns
inc
sar
ror
xchg
cmc
jmp
call
data16
scas
jo
ud0
nop
sbbl
pushl
rolb
or
add
or
arpl
inc
shl
aam
andb
mov
and
lret
mov
xchg
out
addb
jb
lods
frstor
dec
lods
xor
xchg
push
sub
push
xchg
lret
and
dec
mov
in
mov
ficoms
adc
xchg
ja
ss
push
push
cmp
insb
sub
sub
pushf
jmp
sahf
mov
mov
jbe
inc
out
cmpsb
imul
stc
out
std
jb
push
dec
add
sbb
call
pop
add
ret
cmp
fnstsw
cmpsl
cmp
les
fnstcw
mov
data16
aaa
sub
xchg
xor
test
movsb
adc
xchg
stos
sbb
sbb
fwait
test
cmpsl
fcompl
mov
and
repnz
jae
xor
dec
movsl
mov
lds
inc
stc
clc
clc
jmp
aam
xor
sbb
or
mov
jmp
xchg
imul
cmp
outsl
insl
lods
xchg
xchg
cwtl
out
ret
in
lret
cmpsl
gs
test
repnz
ret
mov
fisubs
insl
loope
arpl
andl
lods
xor
cmpsb
aam
ds
xor
mov
dec
lock
fistpl
lods
pop
mov
imul
jne
lret
fwait
in
into
xlat
xchg
xor
or
pop
adc
call
cmp
call
or
or
sahf
and
pop
push
scas
lock
jo
inc
or
daa
inc
lret
or
jns
test
xchg
repz
call
xchg
and
stc
fs
fistl
cmp
xchg
addl
cmp
cwtl
xchg
test
clc
sbb
cmp
sahf
mov
inc
loopne
aam
jg
aaa
int
mov
cltd
xor
sub
scas
ret
xorl
mov
lret
pop
inc
jno
sti
outsl
mov
ljmp
lods
cmp
mov
and
js
jge
cmp
sub
sbb
push
jbe
out
leave
jmp
sahf
push
sbb
jecxz
add
sbb
stos
jmp
idivl
xchg
loope
cmp
repz
out
std
inc
out
enter
cltd
sub
cs
push
mov
insl
mov
std
jg
lea
in
cmp
dec
data16
mov
cmp
adc
lock
std
imul
adc
dec
scas
shrb
sbb
out
push
xor
or
add
je
push
jne
jb
dec
outsb
outsw
inc
add
lret
jmp
lea
jb
pushf
cmp
stc
stc
cmp
pushl
mov
lea
jae
lea
movsbw
inc
sub
mov
setae
mov
dec
call
lea
jne
bswap
shl
xor
movsbl
bswap
aam
sub
mov
add
sub
mov
add
cmc
mov
pushf
mov
clc
test
movl
movb
lea
je
bt
pushf
test
sub
call
xor
or
or
or
ret
jecxz
sbb
and
mov
flds
jecxz
add
pushf
mov
imul
aad
outsl
or
hlt
mov
nop
lds
add
dec
cld
adc
pusha
inc
imul
es
pop
call
mov
xlat
cwtl
add
xchg
cmp
mov
mov
push
xchg
push
js
cmp
sub
fldl
int
jb
inc
jmp
mov
add
add
cmpsl
test
and
movl
cmp
push
lea
ja
adc
cmc
sub
shrd
bts
add
test
mov
test
mov
jmp
sub
repnz
sbb
cmc
imul
add
test
movsb
pop
inc
in
sub
lret
sub
jo
daa
mov
or
mov
mov
sub
inc
movsl
cmpsl
xchg
orb
cli
dec
cmp
mov
pop
sub
dec
dec
adc
ss
bound
pusha
loope
ret
addb
xchg
xor
mov
imul
addr16
popa
jae
sbb
push
mov
or
out
mov
es
popa
and
adc
mov
repz
xor
aam
imul
push
xor
icebp
jl
iret
loope
or
test
pop
mov
pop
jle
stos
aaa
and
mov
cmc
les
pop
mov
dec
xchg
mov
pop
cs
inc
adc
loop
jg
cmp
xor
jp
dec
sub
repnz
sbb
inc
jne
fiaddl
or
jp
stos
cld
lock
cmc
movl
inc
push
jne
inc
xor
icebp
mov
or
popa
loopne
or
or
xor
ret
mov
in
jg
xor
ficomps
paddb
pop
cmpsb
and
push
shrb
std
les
daa
inc
sahf
xor
addl
cs
loop
pop
push
mov
xorl
xor
jb
sbb
cmp
lret
je
dec
in
in
nop
mov
mov
or
pop
adc
jnp
add
mov
sti
or
in
shlb
mov
sbb
push
push
ljmp
inc
fcmove
dec
add
das
pop
jbe
sub
sbb
xchg
mov
adc
pop
mov
mov
mov
gs
dec
sbb
js
mov
dec
lods
inc
add
mov
lods
jae
int3
cld
adcb
or
repnz
jbe
sbb
pushf
sbb
xchg
xor
out
ds
add
push
sbb
xchg
insb
or
das
in
xor
xchg
out
cmp
addr16
mov
mov
stc
fs
outsb
push
in
add
add
fdivrs
and
mov
jo
jns
push
dec
cmp
xchg
test
pop
and
test
test
gs
sti
insb
clts
xor
mov
xchg
sti
push
inc
push
and
shrl
xchg
es
jmp
push
je
aad
cmpb
in
dec
inc
jle
jle
aas
shl
scas
scas
jbe
xor
insl
insb
or
pop
mov
jmp
push
loop
out
push
sub
adc
or
stos
fistps
pop
and
or
adc
inc
mov
inc
mov
pop
xchg
xor
fwait
nop
out
jnp
icebp
aas
adc
mulb
sub
push
or
divb
iret
fs
add
sbb
xor
mov
jmp
aad
push
mov
adc
sbb
clc
fdivs
jns
out
or
testl
or
leave
or
lahf
call
sub
jne
fcoms
and
test
mov
jb
jecxz
jge
push
mov
add
data16
dec
mov
in
inc
jo
lret
cltd
and
mov
dec
pop
fwait
jmp
cmp
int
scas
or
mov
xchg
lcall
or
mov
inc
jns
and
xchg
int
mov
xchg
lods
mov
mov
mov
xlat
dec
xchg
jbe
mov
or
movsl
iret
popf
addr16
and
lods
add
adc
cmp
in
jns
dec
xchg
add
dec
add
out
lea
test
inc
inc
mov
cmp
js
aam
mov
adc
adc
mov
fimull
add
add
sub
mov
rcl
subb
cmp
test
outsb
xchg
lds
test
out
push
adc
inc
mov
adc
fistps
and
nop
and
adc
sub
or
call
cwtl
dec
push
cwtl
jae
push
cld
shrb
fcmovb
testl
shld
mov
clc
pushf
and
pushf
pusha
call
lea
jae
call
stos
add
push
lds
and
sbb
test
stos
call
test
aam
jecxz
imul
mov
fdivrs
sbb
fwait
mov
jg
pushf
scas
ja
popa
rol
add
mov
push
mov
imul
js
xchg
sub
fmul
mov
cmp
ret
xchg
ja
or
fldl
add
popa
insb
inc
insb
insb
outsl
arpl
sub
cwtl
sbb
dec
mov
xchg
fists
fnstsw
push
clc
sub
movsb
jns
lock
mov
call
cmp
aad
test
add
shrb
mov
and
mov
stos
stos
and
xor
jg
cltd
jmp
mov
pop
cmp
int
mov
xlat
jl
push
ljmp
add
inc
pop
sbb
pop
nop
jnp
outsl
xchg
and
push
and
push
fwait
and
jecxz
out
lcall
ljmp
jle
xlat
ret
mov
int
vmread
paddq
jl
adc
sbb
mov
test
nop
fbld
jne
mov
cmp
mov
sbb
mov
xchg
jno
sbb
xorl
ret
ja
and
pop
mov
dec
iret
and
adc
mov
dec
dec
mov
lret
dec
movsl
jp
movsb
adc
pop
fldpi
dec
jnp
jo
sti
mov
movb
mov
sub
dec
addr16
mov
add
mov
aas
mov
repz
push
loopne
repnz
xor
pop
stos
test
xlat
fs
fs
into
dec
or
dec
cmp
xchg
sub
test
loope
enter
call
mov
cmp
cwtl
iret
inc
xor
cltd
push
mov
or
cmp
xchg
adc
jecxz
repz
xlat
pusha
cmp
stc
clc
mov
mov
imul
daa
add
adc
xchg
sbb
pop
loopne
jo
xchg
dec
sar
xor
test
movsl
xlat
push
jae
out
xor
test
add
mov
dec
dec
cmp
jae
pop
mov
ljmp
mov
mov
or
jmp
cmp
in
incb
sbb
dec
sub
bound
push
sub
addb
test
pop
or
outsb
clc
pop
lcall
dec
jns
xchg
imul
lcall
add
and
out
fimuls
into
mov
inc
pop
xchg
push
stc
add
inc
outsl
dec
outsb
imul
add
cmpsb
and
cmp
movsl
adc
fwait
les
xchg
mov
lcall
enter
lock
sarb
pusha
mov
add
fwait
dec
push
fiadds
mov
leave
and
outsl
orb
addr16
inc
jnp
in
aam
subb
cld
popa
pop
insb
xchg
js
or
mov
jmp
pop
shl
adc
int3
xchg
sbb
dec
fnstcw
jbe
test
mov
out
push
in
imul
xchg
jo
repz
xchg
pop
dec
inc
rcrb
outsb
clc
cmpb
pop
adc
pop
mov
pop
xchg
jl
cmp
sub
stc
xchg
aas
incb
jl
xchg
insb
mov
call
pusha
testl
out
pop
enter
jmp
andl
fs
jb
test
cmp
pusha
cmp
lea
jae
push
pusha
lea
jae
btc
xor
pushf
lea
mov
push
mov
neg
adc
xor
mov
jmp
adc
fwait
cltd
dec
cmp
xchg
flds
inc
mov
cs
imul
negl
pop
gs
mov
loope
fbstp
into
jg
push
in
in
addb
xor
rol
pop
test
sbb
mov
xor
adc
sbb
adc
xor
cmp
cmp
cmp
mov
outsl
aam
shlb
lret
in
aad
add
inc
cld
jae
enter
shll
sbb
mov
subb
mov
jmp
cmc
xchg
call
sub
pop
xor
sub
fiadds
mov
cmp
dec
bound
fiadds
or
adcl
cltd
daa
inc
fdivl
xor
incb
sbb
jle
add
std
cmpsb
or
dec
cmp
movsl
outsb
out
jns
mov
mov
js
push
mov
adc
push
add
push
pusha
push
movb
lea
jmp
ret
and
xchg
sbb
dec
add
xchg
gs
sbb
lret
sbb
and
xchg
fisubl
in
aam
loope
test
cmp
ss
and
inc
mov
jmp
movsl
loope
gs
jbe
fidivrs
data16
xchg
push
xchg
inc
push
mov
out
sbb
xchg
aas
mov
inc
incb
mov
cs
mov
ljmp
mov
mov
jb
lock
hlt
or
imul
or
cltd
push
cmp
pop
sub
pop
mov
push
cmp
nop
push
jae
inc
fst
iret
movsb
imul
push
jnp
and
inc
scas
test
xlat
jo
cmp
out
shlb
sahf
mov
xor
iret
push
stc
adc
sub
add
adc
add
sbb
movl
jbe
pop
or
mulb
int
fucomip
push
test
cmpsb
jae
sub
das
xor
pop
nop
aam
rcrb
sbb
lea
in
aas
sbbb
filds
cltd
movsl
in
ja
cmp
and
cmp
icebp
aas
pop
lahf
pop
inc
push
maxps
sahf
loop
pushf
cmp
loope
sbb
xchg
sbb
bound
jb
push
add
lea
sub
incl
adc
paddsw
pop
xor
jle
cmp
pop
mov
push
into
fldcw
mov
mov
lods
sbb
notl
data16
popl
or
xchg
or
mov
and
jns
sbb
adc
jnp
jo
mov
or
adc
cmc
std
sub
cmp
mov
hlt
rcl
push
aas
mov
das
xor
pop
xor
lea
adcl
sub
inc
fsubr
call
xchg
jmp
shl
test
mov
jbe
out
aam
pop
push
pop
rorl
mulb
fdivrs
cmp
stos
stos
inc
scas
sbb
cmc
loope
pop
xchg
aaa
mov
mov
fcoml
lcall
stos
and
mov
sub
ficoms
sbb
divb
cli
out
and
rorb
out
mov
arpl
mov
add
fcompl
roll
fsubl
add
add
add
or
add
add
add
add
or
add
xchg
fnstenv
add
add
add
xor
add
add
push
or
add
add
add
mov
add
std
aas
daa
add
add
add
out
add
add
add
sub
add
add
jmp
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
jmp
add
jne
sub
lock
das
add
and
add
xor
mov
sub
add
add
add
add
les
ret
shrl
and
push
jp
out
xor
ret
push
push
aam
lock
int3
test
nop
dec
outsb
jg
xor
or
mov
andb
cli
jbe
push
add
arpl
and
pop
pop
test
shr
cmp
mov
inc
pusha
push
daa
ret
push
outsb
sbb
dec
sbb
mov
xor
pop
scas
mov
ret
sub
pusha
mov
add
jne
cmp
jmp
mov
rcll
test
or
jmp
in
sbb
into
xor
addr16
sub
push
aas
aad
adc
ret
sub
push
ja
add
ja
mov
push
fs
or
sub
xor
incl
insl
jns
adc
cmp
mov
out
pop
push
clc
addr16
paddusw
ja
cld
sub
jmp
les
outsb
iret
inc
pop
mov
pop
adc
imull
fstl
insb
subb
cmp
adc
into
adc
es
mov
xlat
jno
inc
ja
iret
js
sub
adc
or
lock
shll
fisubl
das
dec
stos
inc
mov
idiv
xlat
aam
cli
inc
add
in
rcrl
sbb
ljmp
inc
mov
lea
cltd
cmp
add
sbb
dec
mov
mov
push
xchg
sub
xchg
popf
push
rcrl
decb
mov
mov
mov
movsb
pop
adc
mov
in
or
sbb
push
push
insl
dec
push
cmpsb
or
mov
daa
mov
and
jnp
xchg
out
pop
mov
dec
mov
xorl
xchg
mov
in
push
push
jne
push
pop
jle
pop
sub
sub
fs
xor
test
pop
fldl
and
xchg
mov
leave
xor
lea
mov
xchg
xor
aad
cwtl
push
out
nop
sub
and
enter
dec
sti
mov
rorl
lds
fdivp
xchg
cmp
push
in
mov
loop
mov
cmp
sti
and
fisubl
xlat
fwait
lahf
inc
cltd
adc
and
jmp
adc
pop
enter
sub
adc
stos
cld
inc
cmpb
sti
push
pop
les
mov
jmp
pop
cwtl
dec
and
xor
adc
orb
mov
rcrl
test
inc
ret
jge
jne
fistpl
addr16
push
jno
add
sbb
add
gs
pop
xchg
cmc
inc
push
dec
dec
iret
in
imul
inc
and
pusha
pushf
movb
pushl
ret
lea
je
pushf
stc
cmc
pusha
cmp
pushl
call
rorb
iret
lods
lods
pop
mov
cmp
lds
mov
xor
lods
iret
rcrl
lea
and
jmp
adc
imul
iret
sbb
les
and
cmp
pop
shl
add
dec
jo
iret
imul
dec
ret
ljmp
pop
jbe
out
imul
rcrl
cltd
fwait
or
cmpsl
pop
sub
lea
pop
lea
shl
inc
ret
xchg
xchg
loopne
push
xchg
aad
fs
jmp
pop
sbb
push
mov
dec
mov
leave
mov
cltd
addr16
mov
arpl
repnz
jo
addr16
filds
cmp
sub
inc
push
cmp
pusha
jb
jnp
insl
loope
mov
and
xlat
mov
cmp
orb
xchg
jl
inc
adc
cmpb
cmp
inc
push
and
cmp
test
jns
call
out
xchg
notb
jmp
add
cld
mov
pop
adc
pusha
adc
mov
cmp
sbb
xor
dec
mov
aad
add
sbb
dec
stos
in
stc
sbb
mov
jecxz
lods
addb
sbb
mov
mov
jo
jg
dec
adc
stos
nop
stc
dec
ja
mov
and
pop
shlb
outsl
test
test
sub
subb
add
data16
inc
dec
std
adc
and
btc
pushl
shl
mov
test
pushl
cmp
pusha
sub
lea
jbe
push
rep
bswap
lea
bswap
movzbl
mov
push
pushf
mov
pusha
lea
jmp
jmp
sub
les
push
sub
push
jns
pop
inc
pop
clc
enter
loop
test
inc
ror
push
adc
popf
pop
xchg
int
push
or
loope
and
in
aad
jbe
fildl
shll
aaa
icebp
jecxz
mov
mov
and
xlat
repz
outsb
call
push
sti
jo
dec
addr16
pop
jg
call
arpl
mov
and
xor
outsl
pop
mov
lock
loop
loopne
lret
mov
push
out
xor
xchg
xchg
inc
loopne
add
cmp
loope
test
pop
dec
cmp
in
dec
jbe
or
cmp
and
pop
mov
popf
rsqrtps
rol
mov
and
bound
and
cwtl
arpl
fimuls
call
lea
jae
bt
cmp
push
jmp
neg
sbb
xchg
neg
mov
setle
mov
seta
pushf
mov
bsf
stc
dec
mov
sar
mov
cmc
mov
test
test
test
or
pusha
lea
je
push
movb
call
ror
movb
mov
test
movb
neg
movb
call
dec
push
out
mov
jo
add
pusha
push
outsb
dec
dec
popa
xchg
es
loop
stc
fs
jmp
add
out
inc
and
cmp
sub
sbb
xchg
dec
adc
loop
mov
imul
xor
icebp
scas
mov
movsl
cs
push
inc
testb
call
xor
mov
lret
push
mov
test
je
rcrl
fdivrs
push
add
sar
clc
pop
sbb
inc
cmp
xchg
xchg
popf
les
lds
pop
xor
int
addb
pop
outsl
enter
rep
call
dec
push
arpl
call
pop
push
mov
imul
sub
insb
mov
lock
mov
dec
stos
push
loop
mov
repnz
sbb
jl
pop
outsb
jp
test
mov
sbb
push
lds
jmp
repz
dec
mov
push
jns
dec
je
sarb
push
dec
in
mov
sub
into
and
push
mov
rclb
lret
aam
adc
std
dec
clc
hlt
decb
fidivs
fistpll
shlb
outsl
dec
push
negb
add
pop
mov
cmp
dec
add
push
outsb
in
and
inc
or
push
pusha
std
mov
jp
add
mull
test
test
cmp
dec
dec
ret
cltd
mov
inc
mov
adc
lock
sbbb
movswl
out
out
push
bound
lock
push
bound
jne
mov
les
in
add
int3
fcomip
dec
cmpsl
push
hlt
dec
mov
idivb
jge
mov
sub
data16
insb
adc
and
push
bound
inc
mov
shl
push
sub
mov
mov
lea
dec
shrl
adc
and
scas
sahf
prefetchwt1
dec
push
xor
xchg
rorl
xor
push
jae
xchg
fistpl
and
mov
das
test
ljmp
pop
roll
sbb
test
in
cmp
add
pop
int3
jbe
dec
and
aad
lret
mov
jmp
test
sbb
jecxz
loopne
jns
mov
cld
shrb
or
or
or
andb
arpl
sub
jne
jae
fldl
es
sbb
in
xchg
ret
mov
add
mov
sarb
shrb
push
in
push
fs
add
adc
enter
or
push
jle
insl
inc
mov
mov
fbld
jns
add
sub
clc
jmp
mov
je
aas
jbe
cmpsl
cltd
pop
jns
div
sub
insb
xlat
pop
mov
dec
inc
cmpsl
into
ret
xchg
ja
mov
cs
sbb
and
and
push
mov
int
mov
lock
push
pop
aam
arpl
xor
adc
pop
repz
and
fimull
xor
repz
sbb
inc
jecxz
add
aaa
mov
sti
dec
dec
lcall
jge
repz
adc
add
scas
outsl
sub
int3
pop
sbb
addr16
and
push
cmp
jae
and
sub
ja
mov
addr16
js
sbb
pop
cmp
push
mov
cli
sbb
scas
arpl
loopne
pushf
pop
adc
cmc
into
xchg
cld
cmp
push
cmpsb
inc
cmc
incb
das
mov
enter
push
pushw
daa
fwait
inc
dec
adc
jecxz
cld
dec
mov
and
icebp
rcrl
xchg
insl
std
xor
mov
pop
xlat
and
mov
pop
cmpsl
jg
popa
scas
inc
pop
imul
aad
cwtl
sub
add
fiaddl
lea
les
dec
in
and
pop
push
or
lret
sbb
fildl
push
loope
pop
mov
xor
call
data16
jg
dec
lods
pop
pop
es
sub
jo
fdivs
je
or
loopne
mov
hlt
push
sub
cmp
add
call
and
shrl
iret
push
xor
les
stos
xchg
mull
jns
xor
call
or
mov
xchg
mov
xchg
leave
js
sub
dec
daa
pop
cmp
mov
xor
ljmp
sub
int3
dec
inc
fisubrs
pusha
enter
movb
cmp
sub
test
inc
aad
stos
sbb
ljmp
sub
sbbl
sub
call
sbb
push
mov
mov
xchg
jae
rcrl
movsb
dec
dec
mov
cmp
pop
adc
test
nop
bound
sbb
mov
aam
fmulp
shlb
and
std
loope
addr16
loope
or
dec
xchg
push
sahf
xchg
push
data16
cmpsb
push
sub
cmpsl
imul
jmp
sbb
das
and
scas
popa
push
mov
test
mov
pop
mov
and
cmp
scas
in
ds
lods
mov
push
in
mov
jns
mov
push
xchg
lahf
xor
cwtl
ret
adc
paddsw
pop
out
mov
mov
jae
loopne
outsb
fcmove
mov
sbb
rcr
mov
pop
clc
es
frstor
push
bswap
jnp
adc
jecxz
inc
or
push
rolb
mov
daa
xchg
xchg
mov
imulb
xchg
add
sbb
lcall
fisubl
fs
aam
jge
adc
loope
cmp
divl
loopne
lock
test
rclb
xchg
xlat
xor
loop
stos
fwait
cltd
push
mov
and
mov
adc
lret
cmp
jecxz
xchg
jae
lret
out
inc
lcall
addr16
push
push
daa
sub
ljmp
inc
clc
add
lret
sbbl
outsb
iret
popa
inc
push
setno
jle
sti
or
into
cld
mov
lcall
sbb
jp
bound
idivl
or
push
lea
adc
adc
in
into
sahf
inc
insb
xlat
fisubrs
push
xor
lea
lods
jb,pn
sub
test
cmp
sbb
jns
daa
cmpsl
dec
adc
or
out
rol
jbe
and
bound
ja
adc
dec
outsl
sarb
pop
push
xor
fs
dec
mov
sbb
clc
call
in
notb
sbb
sub
aad
cli
gs
lcall
fsin
and
inc
inc
xchg
ror
roll
out
inc
out
rolb
stos
jo
arpl
mov
fdiv
arpl
jno
pop
enter
mov
or
cmpsl
cwtl
adc
shlb
jnp
adc
imul
xchg
dec
loop
sarb
andb
cmp
jne
push
or
movsl
jmp
test
push
adc
cmp
setg
movsbw
movzbw
mov
test
jmp
add
sbbb
mov
daa
js
sub
push
inc
outsl
notb
push
mov
sub
fisubrl
xlat
jmp
sub
test
cmpsl
jno
inc
pusha
dec
and
mov
cmp
or
pop
outsl
test
xor
sbb
mov
js
push
mov
inc
lret
lods
cmp
sbb
shll
and
sbb
lods
lods
pop
daa
push
inc
push
inc
push
dec
xor
cs
insb
add
mov
sbbl
push
cmc
in
lds
rcr
pop
test
push
in
add
call
or
cld
int3
imul
stos
shlb
gs
aam
mov
sbb
adc
xchg
jbe
mov
mov
inc
into
into
es
mov
mov
sbb
outsl
sbb
push
mov
sbb
dec
sbb
add
sub
fsubr
mov
sarb
and
lcall
mov
cmp
xor
jns
mov
dec
dec
outsl
lea
sti
cmp
adc
imul
mov
and
cltd
jecxz
mov
dec
mov
dec
test
mov
add
aad
adc
cmp
mov
into
jle
jmp
lods
push
jae
or
lcall
or
insl
shlb
lea
mov
decb
dec
cld
cmp
cmpsb
adc
popf
jg
ss
subl
outsb
mov
insb
inc
ret
fwait
test
scas
cmp
sub
pusha
loop
in
sbb
push
mov
scas
sarl
cwtl
gs
sub
pop
sub
js
test
mul
push
int3
sub
out
je
jno
aam
xor
sbbb
icebp
iret
mov
add
or
icebp
sbb
hlt
out
cmc
xchg
out
js
in
adc
and
sarb
sub
mov
inc
cli
dec
xor
push
pop
mov
adc
lahf
fidivl
repnz
mov
int
pop
inc
int3
sbb
mov
or
xchg
ja
dec
push
xchg
or
mov
cmp
daa
mov
aad
sbb
mov
push
dec
out
xchg
cmp
dec
mov
push
xlat
gs
repz
dec
sti
test
sbb
push
fdivr
shll
mov
adc
in
xchg
loopne
dec
ret
ds
mov
dec
andl
pop
mov
fisubrs
add
push
and
mov
dec
cltd
inc
jecxz
push
adc
adc
cmp
jb
mov
cmp
rol
sarb
les
add
sbb
or
bound
dec
xchg
dec
or
mov
lock
dec
dec
sbb
lret
cwtl
push
jge
push
rolb
adc
clc
sbb
mov
mov
sub
dec
ficomps
xchg
repnz
movsl
dec
lret
push
imul
pusha
adc
insl
sbb
mov
ficomps
mov
pop
inc
pop
or
pop
sahf
into
jg
inc
cmp
add
jg
les
gs
mov
mov
mov
or
xchg
add
nop
cmpsl
in
pop
mov
int
pusha
fs
add
sub
enter
movsb
dec
push
loop
pop
lea
mov
xchg
jmp
mov
and
ret
insb
in
dec
xor
hlt
in
and
in
push
mov
daa
comiss
mov
pop
mov
inc
lret
test
pop
dec
push
mov
call
fwait
adc
cld
pop
sbb
sbb
adc
push
movsb
pop
adcl
loopne
cmpsl
dec
test
mov
aaa
ret
fistpl
mov
int3
ja
inc
jno
pop
cmp
leave
sub
aaa
notb
aad
insl
rorb
sub
test
cltd
clc
call
mov
pushfw
popw
push
mov
pushf
ror
cmc
bt
jmp
mov
adc
sar
adc
add
mov
movb
xchg
shl
shld
neg
mov
pushf
movw
test
sub
movw
jmp
movzbw
pop
pusha
pushf
pushl
ret
imul
pusha
pop
shll
cs
popa
xchg
sahf
push
pop
inc
shll
cmp
ja
stos
cs
lds
xor
pop
xor
xor
lret
add
cmp
pop
sarl
or
popf
or
xchg
adc
nop
adc
les
cld
sbb
push
xor
das
popa
jp
xor
jo
sub
repz
mov
inc
push
mov
movsb
adc
clc
jo
lret
and
fbld
push
pop
mov
xor
mov
fnsave
inc
jl
div
push
and
xor
in
mov
rcr
rcrl
ljmp
add
push
or
mov
movsl
xchg
mulb
dec
divl
xchg
jo
sub
fsubrl
inc
mov
add
pusha
jmp
pop
movsb
sbb
pop
lea
fldt
bound
cmp
rolb
add
mov
jecxz
mov
sbb
dec
xchg
enter
pop
cmpsb
sbb
push
rcrl
fstpt
jb
sbb
mov
insb
and
mov
xor
fsubs
shr
adc
push
sbb
insl
stc
lret
ds
insl
or
es
xchg
or
xor
or
xchg
lods
push
mov
cmpsl
gs
ror
idivl
dec
daa
fadds
dec
jmp
xchg
fisubl
add
and
mov
add
mov
jnp
jmp
test
push
imul
mov
jge
mov
jg
pop
mov
rolb
jmp
lret
xchg
inc
mov
shl
inc
or
xor
push
inc
mov
loop
iret
jle
sbb
cmovs
call
sbb
xor
mov
outsl
nop
loopne
and
xchg
jo
add
or
mov
push
clc
call
pusha
rep
movsbl
pop
movsbw
mov
pushf
lea
jmp
aas
mov
mov
sti
inc
mov
inc
adc
sub
popa
add
or
and
clc
sahf
lock
repz
rolb
mov
adc
mov
mov
rclb
leave
call
dec
ret
jecxz
xchg
les
or
push
jecxz
call
mov
mov
mov
in
in
dec
lret
enter
rol
pushf
mov
cmp
mov
pushf
sub
jbe
add
cmc
jle
cmp
test
pushf
pushf
call
mov
movl
lea
call
jmp
mov
insb
jp
fstpl
mov
adcb
aaa
repz
mov
sub
mov
js
sub
pop
iret
and
fisttpl
imul
push
sub
ss
xchg
or
add
adc
sub
aad
and
fimuls
pop
xchg
out
icebp
jle
jge
xchg
daa
loope
addr16
mov
imul
dec
or
xchg
jg
jl
outsb
dec
addl
cli
gs
xchg
int3
in
dec
shrl
mov
jmp
push
mov
jns
les
add
adc
into
mov
call
pop
xchg
arpl
dec
hlt
jo
cmpsb
cmp
int3
cs
mov
pop
push
inc
inc
push
call
xlat
inc
insl
sahf
or
cwtl
xor
cmp
in
testl
mov
push
jns
sub
or
xchg
or
mov
xchg
mov
mov
ja
out
push
or
movl
cmp
dec
adc
xlat
shl
mov
cmp
and
cmp
jmp
mov
push
pushf
lea
jmp
push
cmpb
sbb
mov
jo
jo
scas
push
mov
cmp
mov
inc
fstps
mov
jmp
dec
mov
push
lds
cltd
cmc
inc
mov
movsl
loope
mov
mov
shl
lock
rcrl
pop
aaa
addb
or
cmp
out
push
insl
test
push
inc
push
dec
out
sub
jbe
mov
xchg
jbe
sub
leave
fsubr
dec
shrl
inc
iret
out
lret
movsb
sub
push
or
insb
notl
sbb
jbe
cmpsl
daa
mov
xlat
call
xchg
sub
loope
push
ret
cmpsl
push
aas
in
ja
jge
dec
loop
dec
in
mov
imulb
fidivs
mov
hlt
ret
cltd
jb
cmpsl
ljmp
cmp
xchg
mov
loopne
jg
and
out
sbbl
fistps
adc
jl
add
dec
jg
dec
int3
mov
jnp
sbb
sahf
mov
loope
adcl
into
sub
xor
cli
addr16
std
lahf
jbe
inc
insl
ss
stos
rcll
xlat
fwait
jp
mov
and
jae
mov
filds
mov
add
push
add
adc
sbb
movsb
int3
enter
mov
jbe
ds
push
fidivs
dec
push
mov
jbe
push
xchg
inc
out
cmp
pop
xor
pop
sbb
lods
xor
bound
push
test
or
jmp
lahf
pop
push
ja
lret
mov
negl
or
push
into
pop
xchg
jecxz
adcl
xor
fimull
ret
andl
or
cwtl
test
jp
mov
mov
xchg
dec
stos
mov
cmp
xlat
push
int3
inc
adc
pop
jle
xor
outsl
daa
or
sub
cmp
cmpsl
and
lcall
insl
lods
imul
dec
mov
lods
in
mov
inc
sub
gs
inc
or
sub
jb
mov
les
mov
mov
cmpsb
mov
cmpsb
jmpw
jge
test
adc
sti
andb
je
xor
les
xor
mov
pushf
push
or
mov
jnp
cmp
xchg
xor
rclb
push
int
and
cs
in
cmpsl
push
add
rorb
imul
jb
ret
and
inc
cmpb
mov
and
out
into
jbe
les
and
dec
lcall
push
mov
insl
rcll
fs
insb
sahf
sbb
and
fucomip
push
adcl
and
mov
mov
dec
fwait
jns
outsb
adc
mov
xchg
clc
aas
xchg
ljmp
lods
push
mov
jle
nop
cmpsl
insb
push
or
bound
movsb
mov
sub
fidivl
cmc
movsb
sub
fs
jne
btr
xadd
lea
shld
mov
bt
rcr
adc
sub
sub
dec
rcr
mov
bt
jmp
addr16
js
sbb
lds
movsl
or
pop
gs
push
jp
sub
addr16
mov
sbbb
or
sbb
cmpsb
daa
cli
sub
cld
loopne
mov
clc
imul
sahf
pop
fisubs
jg
test
cmp
add
shll
xor
lret
cmp
push
movsb
mov
pop
sahf
xlat
dec
jmp
add
adc
push
lea
jmp
test
mov
pop
pop
jno
jo
out
xor
loopne
mov
in
jmp
mov
pop
lods
jp
dec
jne
arpl
add
jg
push
rcrb
ljmpw
mov
cmpsl
addr16
xor
out
sbb
or
or
int
sbb
pushf
mov
xchg
sbb
iret
dec
jmp
or
test
adc
decl
mov
fdivl
shlb
mov
pop
and
shr
pusha
add
rcl
pushf
clc
clc
mov
pusha
jmp
push
push
lea
je
push
lea
jmp
pusha
inc
cmp
not
test
bt
cmp
add
pushf
movw
lea
call
pushf
cmp
pusha
lea
jns
jae
test
cmp
pusha
pushf
pusha
lea
jae
test
call
in
popa
jae
sbb
imul
pop
xchg
neg
out
stos
lret
push
mov
ljmp
lock
jbe
adc
ss
adc
mov
lret
pushf
fadds
mov
ficomps
mov
fidivrl
lds
in
pop
xlat
inc
jg
das
xchg
xchg
xchg
nop
mov
xor
mov
mov
add
or
jl
jl
fadds
mov
lahf
push
clc
btc
sub
mov
push
jmp
pushf
lea
je
pusha
lea
jmp
jmp
das
jle
jb
les
sbb
mov
and
fcoml
mov
out
faddl
xor
mov
jl
mov
cmpsb
jns
xchg
xchg
mov
inc
sub
fsub
or
mov
jne
pusha
and
ret
inc
mov
xchg
sbb
sti
lret
cmp
mov
sbb
stc
iret
les
sub
adc
pop
out
daa
inc
into
pop
xchg
aas
mov
aam
inc
shlb
in
icebp
sub
pop
pushf
repnz
inc
repz
int
outsl
pop
gs
push
push
jmp
push
pushl
jmp
push
insb
jb
fstp
pusha
rcrl
fbld
mov
leave
mov
or
fnstcw
mov
sbb
and
or
adc
cmp
jl
repz
dec
xchg
sbb
fdivp
mov
xor
outsb
sub
pop
ret
sbb
pushf
in
mov
xor
leave
je
jo
inc
inc
mov
sti
sbb
or
push
sti
in
dec
inc
je
or
mov
or
sti
leave
fs
or
fnstsw
add
xchg
leave
sbb
and
pop
test
or
cli
aas
js
dec
push
xchg
pop
inc
cmpsb
movsb
into
pushf
mov
stc
mov
data16
cltd
inc
movsl
xorb
and
mov
fildll
adc
insl
jmp
les
add
sbb
push
xor
mov
and
jo
add
imul
or
mov
or
push
call
add
inc
push
dec
push
je
gs
insl
dec
outsb
outsw
inc
add
add
jno
les
pop
cld
mov
xchg
xor
inc
ret
dec
xor
jnp
addr16
fimuls
and
or
sbb
mov
lods
xor
cmp
jl
rcl
mov
jnp
jns
popa
rcrb
cmpsb
cmpb
pop
xchg
jnp
rolb
and
fistpl
push
add
pop
jns
nop
and
loopne
add
xlat
movsl
lods
and
icebp
mov
mov
fwait
jmp
gs
test
mov
sub
xchg
dec
dec
jle
cmp
push
loope
push
fs
push
and
xor
fsubl
and
mov
arpl
iret
les
sarl
mov
nop
push
cmpsl
mov
add
inc
sub
sbb
orb
push
mov
push
outsb
mov
add
add
int3
inc
dec
jge
mov
pushl
ret
ret
jo
les
pop
call
mov
and
jbe
aad
sbb
or
mov
int
fsubrp
xchg
les
cmpsl
pop
out
cmp
sub
stos
popa
push
pusha
xchg
sar
adc
push
xchg
pop
leave
jecxz
xchg
mov
or
pop
not
pop
addr16
cmp
aaa
addr16
lret
push
or
faddl
mov
sub
jmp
lea
jne
pusha
jmp
xchg
jne
outsl
sbb
xor
mov
pop
jmp
push
fadd
pop
ds
lods
call
jg
cmp
jns
hlt
or
pushaw
add
push
mov
add
cmp
lret
orb
jp
bound
mov
movl
mov
sahf
mov
push
cwtl
jno
push
inc
jle
fdivr
data16
in
pop
dec
loope
pop
jb
dec
fdivr
stc
mov
jns
xchg
js
sbb
mov
je
outsb
std
shrl
addr16
pop
mov
sbb
lahf
dec
add
rol
jle
jb
push
adc
pushf
mov
cmp
fstpl
or
mov
in
lods
sub
mov
shll
jge
movsl
pop
xor
out
push
xchg
sub
jg
push
sbb
jno
pop
add
pusha
dec
pop
sbb
or
xor
clc
mov
or
test
jbe
cmp
dec
xlat
push
idiv
add
lods
test
push
pop
cmpsl
shll
js
outsb
sbb
negl
enter
inc
dec
idivl
pop
mov
and
push
outsl
idivl
cmpsb
xchg
or
pop
cmp
jne
sub
les
fildl
ret
outsl
sahf
rolb
adc
test
xchg
lea
and
push
jl
push
fs
jg
fcomps
xchg
sub
push
out
rcrb
jecxz
or
and
add
lahf
xchg
sbb
pop
cltd
jl
cmp
or
in
imul
sub
sti
movsl
sbb
test
push
int
xchg
mov
and
jmp
dec
insl
sbb
add
shll
adc
das
call
jl
xchg
jmp
aas
ljmp
push
jb
aam
mov
ret
add
mov
hlt
xor
mov
lahf
and
cs
cwtl
inc
mov
aam
std
dec
cltd
push
sub
addl
rcll
sub
aam
sub
inc
mov
lods
lcall
lahf
dec
leave
sti
add
sbb
movsb
imul
in
lcall
pop
sub
cmp
and
push
out
insl
sbb
bound
lods
int3
jl
ret
mov
inc
mov
ja
arpl
call
jge
jl
dec
rorl
jmp
shll
scas
push
push
pop
pop
ss
inc
dec
jmp
jbe
push
fistl
inc
sub
daa
mov
mov
fmuls
mov
mov
pushw
mov
shll
pusha
sub
xchg
ljmp
les
push
xchg
stos
sbb
sarb
mov
scas
push
popa
and
es
icebp
jle
into
cmp
jmp
mov
daa
xor
stc
mov
enter
sub
cmp
push
add
inc
rorl
std
xor
pop
shl
fldt
fdivp
pop
add
push
cwtl
xchg
jae
ffree
sarb
call
or
or
mov
cli
stos
xor
mov
sub
sub
or
xchg
lds
and
add
add
cmc
movb
stc
bt
cmp
pushf
lea
jb
push
pushf
pushf
cmp
pusha
mov
lea
js
jae
or
adc
bsr
mov
cmp
btr
bswap
mov
bswap
mov
pusha
adc
mov
mov
clc
xor
cmc
pushf
movb
stc
repnz
call
mov
bswap
shrd
add
pop
push
mov
lea
pushf
jmp
bt
movb
cmp
pushf
jmp
xor
dec
imul
adc
ret
in
int3
pop
or
lret
xchg
push
ret
stc
notb
dec
cmp
sahf
mov
cmp
repz
mov
cmp
jp
stos
rcrb
mov
jns
enter
mov
adc
cmp
add
fwait
leave
jae
jmp
cmc
js
xchg
adc
sub
dec
lds
jnp
nop
xchg
pop
mov
movsl
dec
push
adcb
lods
jb
jecxz
rol
jo
dec
pop
imul
lods
jo
push
les
lcall
in
lret
fwait
cld
bound
imul
mov
fstpl
sbb
push
jl
mov
aad
ja
xchg
gs
jne
jb
cltd
rcr
scas
xor
dec
add
xor
and
mov
mov
jae
nop
sub
sbb
inc
sahf
mov
xor
add
dec
pop
cltd
mov
rolb
out
jnp
stos
and
xlat
jmp
sbb
outsb
cmp
gs
ret
lock
mov
dec
xchg
pop
sbb
pop
add
push
lcall
in
les
cmp
out
stos
and
inc
lret
bound
inc
out
jnp
and
cmp
inc
scas
push
sub
jg
dec
imul
inc
xchg
rcrl
stos
int3
mov
or
xchg
imul
cmp
mov
sarb
pop
lock
xchg
cmp
bound
xor
popl
pushf
xorb
jp
clc
andl
std
add
sub
jo
addr16
ljmp
arpl
cmp
insl
fistpll
pop
mov
cli
or
lods
gs
mov
mov
and
ja
push
imul
movsb
les
sbb
sbb
cmp
xchg
sub
cmp
pusha
dec
pop
rorb
cmp
in
sbb
jae
ss
and
xchg
jnp
add
imul
inc
imul
sbb
out
pop
out
in
push
aas
mov
rcrb
sub
xchg
aad
cmpsl
lds
repnz
xchg
jb
mov
into
cmc
addr16
mov
mov
popa
mov
fldenv
inc
pop
cwtl
jno
incl
ja
push
mov
popf
gs
pop
dec
les
mov
jecxz
push
outsl
iret
out
mov
lock
stos
adc
movsb
in
mov
push
ret
insb
add
xchg
xchg
adc
jb
enter
sub
popf
inc
popa
sahf
ret
hlt
bound
jo
push
sti
in
mov
push
outsl
mov
cwtl
or
sub
arpl
pop
mov
in
pop
clc
adc
mov
aas
sahf
out
or
xor
addr16
xchg
pop
iret
dec
subl
jb
pop
int3
sub
ss
mov
pop
xchg
dec
mov
pop
inc
mov
sub
out
inc
dec
aaa
cmc
push
fidivrs
push
xchg
fcomps
add
leave
pop
cmp
rorb
mov
push
inc
test
mov
movsb
pmuludq
push
xor
aad
pop
lea
vpinsrd
xor
push
push
aad
jle
sub
xchg
dec
call
jae
popa
int3
sub
sbb
mov
mov
add
cmp
lea
mov
dec
fmull
pushf
test
cmc
xor
adc
sbb
dec
data16
cwtl
cwtl
cmpsl
push
push
or
imul
call
or
cmpsl
lds
subb
adc
jbe
mov
stc
xor
xor
comiss
and
lahf
iret
add
or
inc
test
sub
addr16
mov
adc
add
dec
outsl
popa
fs
imul
add
test
in
stc
bt
cmp
pushf
cmp
pushf
pusha
lea
je
bt
push
mov
cmp
cmp
jmp
pushl
mov
jl
pushf
mov
movb
pusha
pushf
pushl
ret
repnz
fisubs
les
into
and
pop
subb
jo
aas
sahf
js
jge
or
inc
out
add
mov
out
shlb
loopne
enter
cltd
mov
jne
out
aaa
movsb
mov
into
fs
inc
jo
inc
mov
aad
nop
jns
lods
pop
fildll
into
or
mov
dec
repnz
adc
in
xchg
dec
cli
test
cmc
pusha
dec
popa
pop
in
cmc
xchg
sahf
dec
mov
call
push
pusha
call
push
lea
jae
dec
shr
mov
bswap
cmc
mov
lea
shl
mov
pushf
pusha
xor
cmc
repnz
pushf
lea
jne
sub
btr
xadd
bts
mov
bsr
add
sub
pushf
btc
pop
mov
cmp
call
jg
inc
gs
je
or
or
fisubl
xor
jp
jne
or
les
adc
mov
cwtl
mov
lret
imul
es
sahf
xor
mov
xlat
xchg
test
out
inc
jl
and
insb
shrl
enter
pop
adc
inc
lea
and
mov
xchg
lret
fwait
adc
add
out
sbb
pop
adc
shrl
shld
stos
jne
gs
sub
sti
mov
pusha
inc
div
mov
mov
xor
in
stc
imul
inc
sbb
jns
mov
pop
mov
lds
pop
roll
cmp
gs
cmp
push
or
jns
bound
hlt
cmp
clc
jmp
insl
aaa
es
iret
scas
in
in
stc
add
cmovo
push
adc
out
loop
aad
in
int
or
jne
or
mov
lock
pop
cwtl
cwtl
xchg
mov
mov
adc
xlat
scas
xor
mov
mov
les
movsl
add
dec
jecxz
in
insl
pop
rcrl
mov
xchg
daa
int3
pop
lock
fs
iret
nop
cs
add
scas
cltd
flds
cmp
and
rdtsc
ret
pop
lock
dec
cmc
loopne
cmpsb
fmuls
pop
insl
adc
inc
mov
pop
fs
test
cld
inc
mov
out
xchg
test
int3
mov
out
cld
loope
xchg
mov
inc
xor
sarb
int
mov
je
or
jb
jl
int3
sbb
inc
xchg
dec
mov
sbb
lea
push
bsf
mov
xor
neg
bt
push
pusha
jmp
xchg
mov
lret
imul
inc
dec
mov
cmc
fisttpll
add
mov
lock
stos
or
fldt
mov
fldt
fistpll
sbb
gs
jb
adc
in
xchg
mov
jge
sub
push
xchg
cmp
stc
sub
push
out
jbe
inc
sub
jmp
and
sbb
cmc
bound
xchg
call
xchg
cli
in
aam
sub
in
adc
cmp
ljmp
ret
iret
pop
sub
jo
inc
xor
in
test
dec
mov
sub
or
mov
lock
fnstenv
stos
push
imull
test
stc
jb
ja
or
shll
inc
xor
hlt
sti
and
adc
pop
mov
inc
xor
in
sbb
jecxz
jb
sbb
insb
gs
and
rolb
insb
fsubs
les
fs
inc
dec
mov
mov
fiaddl
loop
cmp
sti
lds
fisubrl
add
pop
xor
je
dec
ret
jl
mov
mov
or
mov
call
cmp
mov
ret
add
add
aam
mov
fs
jecxz
lret
stc
test
push
popa
iret
dec
das
ffreep
outsl
das
inc
xor
pop
in
roll
shll
xor
push
mov
lea
call
outsl
scas
jp
sbb
push
in
cmp
mov
test
cmp
fidivrl
pop
gs
out
and
inc
sbb
leave
fcoms
sub
pop
mov
pop
xchg
pushf
jne
loop
push
or
mov
xchg
lods
ja
xchg
mov
mov
sub
aam
pop
mov
inc
scas
and
sub
dec
cmp
sti
mov
inc
lds
jge
hlt
dec
jnp
push
mov
popa
sbb
fldenv
mov
cmpsl
mov
cmp
cmp
aaa
sbb
out
pop
pop
stos
sbb
stos
cltd
stc
imul
inc
bound
idivl
in
pop
pop
inc
or
jno
and
push
and
stc
orl
adc
repnz
cmc
jle
jbe
daa
push
clc
xchg
cmp
mov
pusha
repz
xor
and
add
pusha
sub
cmc
call
call
aas
in
popa
sbb
lcall
stos
mov
mov
cmp
imul
mov
leave
adc
jle
xor
ss
repnz
jnp
test
inc
push
pop
shl
jmp
hlt
rcl
pop
das
mov
ja
dec
mov
dec
push
int3
imul
jae
das
pop
sub
aam
test
aad
adc
cmp
dec
jecxz
xchg
insb
aam
mov
or
push
push
push
and
mov
mov
xor
add
adc
mov
outsl
pusha
sbb
bound
mov
aad
jp
aaa
jmp
push
jb
enter
shll
fidivrs
ficomps
cmp
movsl
test
lock
dec
push
push
xchg
pop
add
sub
adc
add
add
adc
int
jg
and
xchg
mov
xor
fbld
rcrl
testl
cli
test
pop
lods
mov
pushl
lea
je
call
test
pusha
sbb
xor
and
cs
lds
loopne
jnp
or
jp
outsl
or
cmovge
test
bound
sub
push
dec
pop
into
cs
aad
int3
pushf
jge,pt
add
shll
inc
dec
cli
fs
insl
loopne
inc
es
mov
fisubs
nop
cmp
addb
lcall
xchg
push
dec
clc
xchg
lea
ja
call
lahf
pushf
xchg
pop
sbb
pop
cmp
mov
or
jle
mov
std
ficoml
xchg
xchg
mov
mov
mov
outsl
inc
mov
je
aaa
xor
lret
ss
mov
dec
scas
cld
cmp
add
pop
repnz
and
int
data16
inc
pushf
add
mov
mov
mov
sti
rcll
insl
mov
sbb
dec
pop
std
sub
cli
inc
xchg
xchg
sbb
movhps
push
mov
pop
fwait
daa
pop
sbb
sub
lds
bound
dec
sub
push
xchg
adc
cmp
xchg
stc
or
nop
pushl
cmc
shll
adc
in
iret
out
inc
mov
xor
arpl
pop
cmp
sub
push
cltd
jmp
mov
imul
aad
insb
push
dec
hlt
pop
adc
movw
mov
mov
pushl
ret
movzbw
movzbw
mov
pushl
push
pushf
lea
jmp
call
pushl
jmp
shlb
pop
sbb
ljmp
jmp
mov
aas
xor
mov
gs
mov
lahf
add
stc
insb
or
out
mov
fstpt
mov
sti
test
cli
push
ja
jl
dec
or
fstl
in
mov
mov
xor
inc
imulb
inc
rorb
lret
movsl
arpl
xchg
nop
inc
push
sbb
stos
sbb
cmp
stos
xchg
sub
ds
pushf
dec
imul
sub
add
dec
cmpsb
lss
pop
pusha
lea
call
jmp
push
push
inc
push
xor
cs
insb
add
les
mov
data16
sub
mov
ret
jnp
ror
add
iret
cmp
inc
adc
rorl
add
lods
fsubl
cmp
icebp
mov
shr
push
repz
shll
dec
imull
enter
int
lret
test
sbb
loope
test
ret
cmp
aad
or
loop
push
inc
push
ss
push
adc
mov
jmp
imul
test
pop
mov
push
cmp
inc
fdivrp
fists
pop
sbb
cmc
inc
cmp
fs
jnp
repnz
push
insl
and
sti
push
loop
rorl
std
dec
hlt
xchg
push
add
or
repnz
dec
lods
out
out
push
or
loop
dec
push
xchg
or
add
mov
add
int3
lcall
les
jno
or
sub
imul
cmp
cmc
loope
movsbl
mov
push
movw
pushl
ret
xchg
pop
sbb
add
adc
das
shrb
mov
xor
pop
sub
lods
shl
mov
mov
sbb
ficoms
fistpll
subb
cmpl
stos
jae
shll
inc
popf
fnstenv
xchg
fmull
mov
xchg
daa
inc
sbb
stc
stc
test
adcb
arpl
sub
bt
stc
call
or
pop
sbb
cmp
inc
sarl
shrl
mov
mov
mov
adc
mov
in
push
xchg
xchg
imulb
pusha
pop
and
or
push
mov
mov
inc
lods
adc
jo
movsb
fs
clc
std
or
dec
in
imul
aam
mov
je
mov
daa
cmovp
loop
xchg
jge
xchg
cld
and
aas
lcall
ja
push
push
imul
mov
xchg
inc
mov
and
jae
shl
adc
xor
mov
sub
rcr
xor
mov
stc
bsr
cmp
shrd
mov
pusha
cmp
clc
test
xor
bt
call
push
dec
inc
dec
dec
xor
cs
insb
add
test
pushf
jmp
movb
push
movl
jmp
jmp
xchg
pop
stos
pop
sbb
scas
mov
iret
xorl
xor
hlt
lretw
pop
test
jl
cmpsb
les
push
fcoms
sub
add
mov
cli
and
inc
in
ret
mov
pop
in
aam
adc
fadd
es
adc
je
jmp
mov
inc
mov
jnp
hlt
and
xchg
in
sub
or
mov
fs
cli
pop
sbb
cmp
mov
addl
dec
xor
ficompl
mov
ror
inc
or
push
popf
movsl
icebp
xchg
subl
sub
xlat
inc
and
dec
or
lods
mov
dec
mov
and
test
inc
jo
dec
push
repnz
pushf
push
or
sbb
fistpll
les
fucomi
fdiv
pop
leave
inc
push
lds
cltd
push
das
and
inc
cmp
sub
push
testl
push
cmc
cmp
movw
jmp
bt
cmp
pushf
pushf
pusha
lea
jae
test
test
pushf
stc
add
mov
mov
mov
lea
jmp
lea
ja
mov
setb
inc
inc
pushf
inc
inc
stc
cmp
dec
not
xchg
cmc
neg
mov
xor
add
shl
rol
mov
bt
mov
pushf
call
mov
cs
sbb
push
mov
popa
shr
add
int
xor
add
mov
rcrb
stos
cmp
dec
out
mov
and
int
mov
xor
dec
icebp
or
cmp
jo
adc
dec
and
or
cmp
outsb
sbb
pushf
push
std
ret
xor
repnz
mov
adc
shlb
shlb
mov
pushf
add
stc
jmp
dec
push
dec
dec
inc
xor
cs
insb
add
test
xchg
incl
add
movb
pusha
cmc
jmp
pusha
movb
pushf
mov
pushf
lea
call
cmp
pop
sbb
call
daa
jns
inc
dec
mov
inc
repz
push
inc
sub
subb
jg
pushf
adc
xchg
xchg
mov
bound
ret
stc
inc
stos
push
idivl
fcomp
sub
jmp
pop
call
xchg
and
sbb
daa
and
add
mov
popa
mov
adc
pop
cmpsb
lret
mov
fistl
repz
mov
mov
std
aas
adc
xchg
jnp
mov
mov
mov
inc
shlb
add
inc
int
jmp
nop
out
fsts
push
test
lods
scas
mov
jmp
lock
sbb
xor
mov
add
out
sub
and
ficompl
ss
pop
jb
or
test
and
cmp
push
in
jp
out
add
xchg
mov
cmp
loope
test
inc
and
dec
rcll
push
sub
movsl
xchg
xchg
test
or
mov
pop
fwait
mov
adc
icebp
dec
movsl
dec
mov
imul
inc
aad
push
xor
out
jg
mov
loope
hlt
inc
and
in
scas
mov
push
push
xor
je
lock
cmp
filds
out
outsb
subb
fmul
lahf
loop
pop
xor
jb
mov
dec
push
sti
mov
inc
fists
es
or
and
add
mov
pop
lds
jmp
inc
adc
sbb
sub
sub
pop
arpl
ficoms
mov
and
fisttps
test
decl
xchg
test
jmp
pusha
cmp
pushl
lea
je
stc
stc
clc
cmp
jmp
fisubrs
push
sbb
dec
xchg
test
daa
jmp
sub
fstpt
popa
xlat
je
push
or
dec
inc
xchg
lahf
out
xor
pop
sti
and
pop
push
xorl
in
test
adc
sub
fs
add
and
movsb
test
xchg
test
xor
inc
xor
fcomip
cld
pop
pop
test
test
or
call
testb
aas
scas
call
test
pop
jns
fmul
mov
es
ret
or
ror
bt
neg
jmp
lret
push
sbb
in
mov
lret
lds
mov
jmp
mov
push
cmpsb
mov
aas
sarl
sub
cltd
push
cld
cltd
rcll
mov
or
push
outsl
dec
lods
sub
out
cltd
jnp
xchg
and
outsl
push
xchg
cmpsb
pop
roll
faddl
outsb
fisttps
addr16
jnp
int
rcr
repz
mov
and
lea
pop
sub
mov
and
out
mov
ss
push
xchg
or
daa
cltd
lret
pushf
jb
pushf
cmp
pushf
lea
ja
bswap
pop
bswap
mov
pusha
mov
movzbw
mov
movzbw
movzbw
lea
mov
mov
pushf
movb
mov
pusha
call
stc
jmp
mov
pushf
lea
jae
clc
push
pusha
jmp
test
push
sbb
mov
cmp
and
mov
div
out
xchg
rorb
dec
xchg
xchg
sahf
or
in
xchg
push
pop
xchg
inc
sbb
movsb
xchg
adc
ljmp
int
xor
add
and
mov
push
and
cltd
mov
popa
addb
fisttpll
mov
insb
movsb
adc
sbb
repnz
push
lahf
mov
out
sub
or
jo
mov
adc
pushf
lea
call
pusha
lea
jb
pushf
pusha
pushf
mov
pushl
ret
pushf
push
mov
movl
mov
pushf
movb
push
movl
pushl
pushl
push
lea
jmp
call
call
pusha
lea
jae
jmp
or
push
sbb
lods
add
add
jecxz
cmp
fcoml
lcall
cmp
lods
xor
stos
ja
es
pop
inc
jg
jno
jne
int3
lret
addb
sbbb
test
daa
cmpsl
call
mov
pop
ljmp
loope
std
movsl
mov
mov
in
jbe
scas
sbb
inc
mov
lods
in
adc
lret
movsl
mov
gs
sbb
pop
lcall
mov
adc
cmp
in
lret
inc
cmp
das
mov
out
fsubl
adc
mov
adc
repz
cmp
lods
ffreep
loope
xchg
jg
lret
or
leave
rcrb
jo
scas
mov
adc
mov
imull
movsl
mov
lods
sbb
pop
sbb
ret
jo
push
add
popa
push
inc
or
shrb
sbb
push
sbbl
rcll
ljmp
cmpsl
or
push
cli
sub
rcrb
in
out
shr
in
outsl
jg
push
and
test
push
fs
popa
pop
int
in
repz
jnp
xor
repz
andb
mov
and
ds
loopne
sbb
xchg
and
loope
adc
dec
out
in
and
lar
xchg
loope
loope
inc
out
xorb
sbb
xchg
int3
into
jns
testl
mov
push
shll
sub
lret
shll
sub
es
out
pop
dec
and
and
jno
lds
jno
cmp
push
inc
fyl2xp1
outsl
int
cmpb
lahf
jae
daa
out
push
mov
mov
jg
movsb
add
jmp
repnz
push
leave
pop
jae
test
add
fldcw
ret
cld
bound
xorb
iret
jo
xor
jns
mov
jmp
jg
push
inc
sbb
push
sbb
add
jge
pushf
lea
repz
sub
push
test
out
pushf
mov
iret
subb
and
int3
add
push
enter
inc
add
rcll
mov
and
inc
mov
leave
jne
push
loopne
sbb
outsl
repnz
daa
out
or
loopne
mov
mov
dec
and
ret
and
sub
popf
push
push
mov
pop
mov
test
cmpsb
cmpsb
jp
dec
into
adc
sbb
sub
sub
sbb
ror
ds
jno
mov
cmpsb
mull
daa
loopne
cli
xchg
cli
stos
jg
mov
cmp
fstl
ds
mov
call
mov
fwait
sbb
cmp
loope
or
flds
mov
push
testb
sub
add
mov
sbb
aas
sub
subb
jmp
ret
outsb
cmp
or
data16
imul
lods
loop
inc
sub
dec
xchg
arpl
sub
out
clc
fistpll
pop
scas
add
outsb
push
sbb
outsl
inc
jle
nop
and
mov
out
dec
aaa
mov
daa
or
mov
pop
fdivs
jge
pop
aad
xchg
dec
iret
outsl
out
mov
sub
arpl
sti
or
fmuls
xchg
es
into
mov
or
sub
fwait
loop
int
dec
xchg
dec
outsb
loop
adc
or
les
ficomps
into
iret
arpl
idivl
xor
sti
je
pop
sub
jg
mov
out
mov
push
pushl
pushf
cmpb
push
call
adc
inc
dec
sbb
cwtl
addr16
jmp
mov
jge
inc
inc
inc
out
dec
outsl
push
popf
mov
xchg
mov
cltd
push
jmp
push
mov
mov
inc
jno
dec
pushf
inc
push
stos
fstpt
in
dec
or
cwtl
sbb
add
dec
add
mov
or
jmp
inc
lock
pop
cs
imul
movsl
movlps
outsb
lods
inc
test
xor
jg
andl
into
jle,pn
setno
popf
lods
loop
roll
dec
sbb
cli
gs
xor
aad
adc
sbb
dec
mov
loope
xchg
cmc
pop
lcall
push
or
adc
iret
inc
cmpsb
xchg
dec
std
inc
mov
fwait
jns
xor
or
inc
lea
or
mull
pop
inc
lods
ret
push
mov
sub
or
pop
cli
mov
xchg
pusha
and
mov
loope
dec
add
scas
push
out
sbb
push
adc
sbb
adc
iret
scas
shlb
mov
xor
outsl
and
in
sbbl
bound
outsb
data16
add
in
jb,pt
cmp
xlat
sbb
addr16
stos
inc
cmpsl
sub
adc
data16
cmp
push
int
lea
addr16
mov
sub
mov
aaa
jge
sbb
add
fistps
jecxz
xchg
call
push
imul
in
das
pop
jnp
rcll
in
mov
imul
mov
xor
negl
lea
je
pushf
pushf
test
pushf
sub
bt
cmc
stc
cmp
pusha
mov
call
int3
mov
sub
mov
add
add
cmpsl
js
and
loop
fisubrl
out
sbb
xlat
cmp
xor
push
leave
cltd
mov
out
shll
jno
xchg
mov
inc
arpl
shlb
bound
sbb
ja
push
fmul
lret
ss
push
ret
push
mov
xchg
outsb
das
jnp
push
or
cmpb
fistpll
cmp
jae
jne
into
dec
pop
daa
ja
mov
addr16
flds
cwtl
mov
cmp
jge
fnsave
mov
sbb
clc
fsubs
cwtl
daa
imull
lcall
xlat
inc
stos
ljmp
xor
push
inc
rcrl
lods
lds
mov
cmp
pop
adc
shlb
inc
xor
fs
cli
mov
imul
cli
cld
sub
pop
ljmp
insl
mov
lahf
mov
ret
js
push
xor
aad
push
cli
adc
rol
daa
std
jbe
pop
add
test
sub
or
dec
sub
test
cmp
sbb
cmc
dec
dec
push
sbb
xchg
dec
dec
lds
or
lods
dec
arpl
ret
jge
dec
push
add
iret
and
add
mov
mov
dec
scas
lds
fldt
ret
lret
in
cmp
imul
lods
xchg
int
xlat
hlt
ljmp
fwait
cmp
lret
pop
les
jnp
punpcklbw
jno
inc
int3
push
mov
xchg
dec
push
mov
dec
and
frstor
adc
ret
dec
sbb
fists
or
punpcklbw
pop
aaa
mov
xchg
mov
mov
dec
mov
jae
std
out
pop
lea
sbb
push
test
add
sbb
in
dec
mov
jno
mov
mov
push
mov
out
test
dec
pop
aaa
mov
mov
sahf
aas
xchg
sbb
jo
xchg
mov
cmp
mov
push
mov
sbb
pushf
hlt
loop
adc
les
xchg
sbb
mov
sbb
ret
xchg
push
cmp
frstor
leave
ja
mov
test
pop
ret
add
loope
ret
lods
xchg
fadd
loop
push
or
call
aad
insl
jno
dec
pop
mov
les
jp
jb
pop
mov
int3
ds
jae
test
testb
pop
out
data16
data16
outsl
les
sti
cpuid
out
inc
push
xchg
mov
cwtl
jecxz
add
and
out
mov
dec
sbb
daa
enter
stos
popa
xchg
and
cpuid
in
js
js
add
xor
cmp
test
js
jno
pop
inc
inc
cmp
and
pop
addl
mov
mov
pushf
sub
test
in
stos
fsubrs
fcoml
mov
hlt
or
jle
scas
ficoms
pop
and
sbb
call
outsl
sub
icebp
fiaddl
dec
mov
xchg
pop
into
push
pop
or
and
inc
pop
test
pop
xchg
jmp
cmp
pop
adc
loopne
dec
and
jle
das
mov
cs
push
mov
nop
mov
fisubl
fildll
xor
shrb
cmp
mov
cmpl
inc
in
pop
cmp
cs
sbb
sub
inc
ds
mov
mov
add
imul
sti
test
insl
test
add
xor
mov
ljmp
cmp
adc
or
mov
xchg
mov
cmp
and
push
cli
fdivl
cld
sub
jmp
push
pop
jmp
adc
inc
dec
sbb
les
mov
push
xor
mov
and
cli
xchg
roll
pop
and
lret
dec
outsl
mov
push
popf
fldenv
mov
popf
fdivrs
cld
les
sarl
inc
aas
cmpl
fs
shrl
ror
subl
addr16
mov
xorl
and
cwtl
clc
test
imul
adc
lcall
sub
or
xor
dec
or
mov
int
jne
lret
and
jbe
cmp
and
addr16
push
movb
mov
data16
fistpl
adc
and
or
inc
mov
inc
jns
fsubrs
inc
cmp
shrl
iret
stc
das
int
mov
fwait
out
push
xlat
sbbl
pop
inc
jmp
gs
enter
xchg
rol
in
and
std
mov
mov
or
sbb
jmp
icebp
pusha
mov
fstp
insl
push
int3
mov
xor
pusha
js
gs
andl
rolb
outsl
hlt
in
xchg
or
add
lret
stc
and
mov
inc
fs
jae
bound
xlat
xor
xor
cmpsb
push
xchg
es
jmp
mov
xor
lea
rorb
lahf
dec
sbb
std
mov
rcr
adc
pop
jp
pusha
mov
into
adc
pop
cld
aam
leave
test
sbb
xchg
test
movsb
imulb
test
test
inc
jo
mov
sub
cmc
pop
cmpsb
jmp
out
jge
jmp
inc
stc
and
data16
xor
mov
jno
jmp
xchg
pop
pushf
out
mov
and
dec
pusha
adc
mov
rcll
sbb
in
push
enter
out
pop
int
adc
not
call
or
lret
popf
ljmp
in
adc
fisttpll
rorb
adc
push
or
xlat
or
xchg
or
push
or
xchg
push
add
outsb
push
push
push
call
push
dec
inc
sbb
lea
pop
loope
adc
iret
pop
sub
rcrb
or
xlat
fistpll
sub
sbb
ds
ljmp
or
xchg
and
mov
adc
jnp
xor
adc
cmp
and
sub
sub
cmp
ss
dec
and
push
das
sub
jb
cmp
dec
ds
mov
sbb
push
xchg
push
or
mov
hlt
dec
or
aad
cs
notb
push
dec
cmp
push
inc
sub
aam
dec
gs
cmc
pop
adc
ljmp
mov
jb
sub
and
adc
adc
or
dec
sbb
sbb
sbb
mov
sbb
sbb
adc
xor
pop
inc
inc
sahf
ljmp
sub
xchg
push
mov
mov
ja
sub
mov
cmp
push
jge
or
mov
or
mov
cmp
cld
cmp
add
adc
jnp
push
pushl
push
stos
pop
lret
jb
mov
cmp
inc
mov
ss
push
sub
iret
incb
dec
fcmovb
jp
inc
adc
enter
sbb
cmp
inc
jge,pt
jbe
out
adc
negl
push
bound
and
test
mov
sbb
push
mov
dec
cli
les
dec
push
setle
xchg
push
pop
lahf
ficompl
or
arpl
daa
fs
sbb
mov
in
fisubs
add
jne
jb
inc
fwait
fs
fsubp
mov
arpl
sbb
mov
mov
pop
out
jl
lods
jnp
push
lea
cmpsb
movsl
or
xchg
jb
push
inc
inc
mov
adc
xchg
lods
push
push
sub
clc
dec
cld
dec
ds
xchg
dec
fadds
les
fbld
daa
push
and
pushf
das
adc
popf
pop
jmp
jp
aaa
mov
push
adc
cmp
shl
sub
add
sbb
and
ret
aas
shl
dec
lea
fimuls
outsb
sbb
or
mov
adc
sbb
outsb
femms
pop
aam
or
into
inc
dec
push
inc
dec
mov
or
inc
aad
push
daa
lcall
punpckhbw
setg
inc
or
pusha
inc
fcoml
cwtl
sub
or
dec
pop
aaa
jl
bndldx
dec
jae
orl
vmread
sahf
mov
or
nop
sbb
ja
das
xchg
les
mov
add
jo
cmpsl
sbb
das
jns
xor
movsb
sbb
sbb
movd
pop
xor
xor
gs
push
or
popl
cmp
dec
aaa
gs
lea
aaa
mov
and
sub
aam
daa
lock
mov
dec
sub
pushf
in
and
cmp
in
push
cmc
fs
call
aas
testl
jl
jns
les
push
pop
jo
rorb
fisttps
out
adc
test
and
adc
dec
mov
bswap
fimuls
loopne
clc
sbb
or
add
dec
shlb
test
syscall
adc
int3
cmpps
in
sub
xor
lret
test
add
aas
sub
imul
pop
and
outsl
dec
sbb
ficoml
repnz
or
adc
call
xor
and
or
or
repz
loope
push
and
inc
or
cmp
scas
mov
dec
in
das
fs
push
cmpsb
mov
rclb
sbb
enter
enter
mov
sahf
push
ret
sbb
jno
pusha
mov
mov
hlt
adc
mov
pop
inc
push
inc
test
dec
aad
sbb
dec
add
push
stc
jae
xor
push
or
sbb
sub
dec
outsb
cmpsl
pushf
inc
shrl
jns
repnz
or
inc
xchg
and
jl
mov
xor
xlat
cmp
jecxz
mov
or
fcomps
add
or
stos
int
mov
adc
mov
orl
jecxz
mov
push
or
fisttpll
xchg
sub
and
or
add
or
sub
orl
add
stos
jmp
or
dec
mov
cmp
or
imulb
ljmp
ljmp
dec
cmp
adcb
loopne
sahf
xchg
outsb
or
mov
add
push
or
sub
pushf
inc
pop
cmp
or
push
jo
int
dec
jmp
mov
stc
cmp
adc
adc
adc
dec
aam
sti
or
leave
sbb
push
mov
pop
sti
fildl
insl
or
mov
sbb
cmp
jecxz
imul
repnz
stc
sahf
sbb
lea
or
or
jmp
rcll
es
pop
shll
inc
lret
push
outsl
mov
jno
sbb
andb
dec
clc
loopne
ja
or
lock
or
ljmp
out
mov
sub
ret
pushf
rol
xorb
leave
rorl
sub
mov
mov
shrl
push
dec
leave
cld
out
jmp
das
sbbl
or
je
cmpl
inc
cmp
outsb
jne
enter
shll
dec
daa
sbb
cmpsl
insb
jmp
test
cmp
ds
inc
xchg
call
leave
sbb
les
inc
ftst
sub
les
inc
fisttpll
push
mov
fisttps
mov
adc
sbb
inc
insb
push
jo
push
dec
push
dec
and
adc
sub
sub
inc
rorl
inc
dec
cmp
sbb
stc
lea
and
and
or
or
pop
frstor
and
arpl
push
repnz
xchg
movsl
sub
cld
dec
dec
cmp
pop
shlb
jecxz
jns
test
mov
and
sbb
mov
adc
jbe
or
sub
xor
jbe
inc
les
enter
xchg
jbe
pop
cmp
mov
inc
push
std
test
aas
inc
lcall
cltd
push
jb,pt
divb
lods
es
fdivr
mov
imull
out
clc
jb
jns
sbb
mov
js
cli
repnz
xor
or
popf
adc
push
add
mov
cwtl
and
sti
ja
inc
repnz
nopl
or
std
ljmp
xor
push
mov
xor
ja
adc
or
mov
clc
aaa
inc
mov
adc
xor
jnp
dec
adc
adc
jl
jbe
cmp
sub
mov
or
push
ds
adc
shufps
mov
push
cmp
pushl
sbb
mov
into
pop
shlb
mov
ret
xchg
ds
sub
daa
adcl
stos
mov
out
daa
and
and
add
adc
push
and
push
lods
and
lcall
ss
jnp
jb
xchg
jmp
dec
dec
pop
xchg
adc
mov
lret
movlps
mov
push
and
jl
inc
in
add
gs
out
mov
and
mov
adc
sub
bound
mov
lea
stc
xchg
and
iret
fcmovu
pop
lcall
lock
sbb
jp
xor
aas
pop
adc
bound
inc
mov
push
fisubl
ja
lret
in
in
mov
cmpsb
fs
out
cvtps2pi
sbb
mov
sarb
push
cmp
push
xchg
sbb
mov
sbb
stc
in
inc
ss
push
fwait
dec
mov
cmp
adc
ds
pop
mov
xchg
push
mov
sbb
adc
mov
sbb
xchg
sbb
into
push
out
add
xor
sbb
sbb
sub
mov
adc
jge
inc
jns
cmpsb
cmp
sahf
push
ljmp
repz
movsl
stos
mov
data16
sub
pop
push
rcrl
jno,pn
pop
movsl
cmpsb
arpl
repz
mov
stos
dec
setle
sub
pop
or
pop
loope
ljmp
mov
enter
ficoms
mov
mov
adc
fs
xchg
jl
rclb
lcall
out
adc
push
inc
add
scas
call
gs
cmpsl
xor
cmpl
jmp
sub
sub
aam
in
xchg
or
xchg
add
outsl
jns
cmp
xor
push
leave
or
xchg
push
dec
repnz
mov
es
xor
popf
push
aad
movsb
dec
pop
dec
vphaddubw
in
and
mov
push
lcall
sbb
mov
mov
loopne
adc
push
adc
push
pop
and
or
or
xchg
xchg
and
or
push
or
or
or
fcomp
inc
dec
push
pop
push
push
stos
out
cwtl
pop
pop
aad
or
rorl
pushf
mov
adc
and
xchg
shufps
in
mov
int
adc
adc
arpl
sub
ficoms
jne
setne
sti
cltd
adc
or
add
or
mov
adc
pop
and
pop
in
repnz
call
sub
push
in
nop
mov
inc
sbb
mov
sub
xchg
xchg
and
movsl
lcall
mov
rcrl
test
and
gs
sbb
sub
inc
mov
add
adc
out
cwtl
lret
fisttps
inc
sbb
mov
xor
push
fwait
bound
sbb
xor
pop
and
inc
sub
mov
pop
adc
add
push
lret
xor
movq
inc
mov
and
sti
jge
pop
dec
xchg
jecxz
pop
mov
mov
xchg
and
xchg
lcall
push
daa
pushf
icebp
cmpsb
adc
out
adc
adc
cmpsb
and
push
and
stos
or
mov
adc
xchg
sub
pusha
or
aas
xchg
or
mov
adc
sub
das
mov
cltd
fwait
mov
or
sub
loopne
xor
ret
lcall
mov
sbb
sbb
pop
or
cmp
or
jno
int
sti
mov
es
dec
movsl
fwait
in
gs
add
pop
rcrb
sbb
or
push
cs
ss
push
push
xor
mov
mov
or
or
imul
and
outsb
mov
insb
stos
mov
adc
stos
outsb
sub
jp
push
xchg
xchg
out
repnz
cmp
mov
or
cmp
dec
xchg
mov
sbb
outsb
adc
insb
adc
iret
outsb
setb
push
dec
insb
or
sbb
outsb
or
xchg
or
outsb
int
pop
sbb
push
insb
dec
mov
outsb
into
xchg
inc
sbb
inc
insb
dec
mov
sbb
outsb
rcll
insb
push
mov
outsb
rclb
insb
push
mov
adc
xchg
aaa
sbb
ss
push
mov
outsb
rclb
insb
push
mov
adc
xchg
sub
adc
insb
push
mov
adc
sub
adc
adc
xchg
and
push
and
and
xchg
sbb
outsb
xchg
and
pop
pop
insb
push
mov
adc
rcrb
sbb
mov
and
or
data16
or
daa
cmpsl
jmp
push
iret
or
or
mov
or
dec
rorl
ljmp
sbb
inc
in
mov
es
fsubrs
ss
push
aam
push
rorb
rcll
xchg
nop
adc
adc
xchg
xchg
xchg
xchg
adc
xchg
push
fistl
pop
aad
adcl
out
and
test
in
adc
rclb
dec
push
xchg
rcll
push
xchg
sarb
mov
pusha
adc
ficoml
imul
sbb
cmpsl
sub
lods
mov
adc
nop
call
mov
dec
sbb
mov
iret
sub
or
dec
aam
dec
mov
rcll
inc
xchg
xchg
insl
int3
cmp
mov
mov
lea
adc
outsb
aam
aad
push
sbb
imul
cwtl
bswap
sub
dec
orl
stos
nop
mov
or
mov
adc
mov
adc
dec
dec
adc
rorb
mov
rcrl
dec
nop
pop
arpl
adc
mov
mov
lods
mov
sbb
xchg
mov
rcl
fsts
sbb
mov
orb
xchg
rcll
mov
adc
adc
mov
xchg
or
dec
fucomi
mov
push
push
xchg
mov
adc
xlat
adcl
cmp
inc
push
adc
sbb
xchg
mov
push
xchg
outsb
push
xchg
sub
push
push
aam
cmpsb
adc
nop
rclb
sbb
lcall
cmp
push
push
pop
push
fisttpll
sub
mov
push
pop
sub
xchg
aaa
mov
sbb
sbb
mov
fldt
sbb
push
push
mov
mov
cwtl
dec
adc
fdivs
lea
adc
mov
fptan
sbb
adc
xchg
cvtps2pd
mov
lcall
push
pusha
sarl
loopne
dec
iret
push
xchg
and
pop
dec
in
mov
adc
call
sub
inc
and
mov
pop
pop
xchg
mov
or
pushf
sub
mov
mov
fsubrl
je
shlb
mov
stos
ficompl
adc
rorb
and
push
push
pusha
fcmovne
imul
adc
cs
cmp
cmpsl
fistl
pop
and
mov
push
ficomps
sbb
push
lea
shrb
nop
mov
adc
pop
pop
das
push
rorb
xchg
dec
and
lea
xchg
jo
push
int3
rclb
loopne
ficoms
cmp
aas
aam
sub
sahf
mov
dec
push
loope
xchg
or
or
dec
imul
mov
loop
xchg
mov
adc
mov
int
jb
sub
inc
xchg
pop
mov
out
inc
mov
add
or
movsb
or
or
mov
lcall
rorl
sbb
inc
in
push
test
sub
data16
into
addr16
sbb
cmpsl
sub
add
push
push
mov
arpl
sbb
xchg
push
dec
xchg
lahf
insl
call
dec
sub
push
lea
imul
xchg
mov
push
mov
push
dec
push
push
stos
or
shr
hlt
mov
adc
sub
or
das
adc
sub
rorl
ficoms
rclb
xchg
xchg
fists
cmp
ds
jb
insb
mov
xorps
in
mov
rorb
in
rclb
and
adc
add
subb
adc
out
or
xchg
xchg
aam
iret
das
sub
lea
push
outsb
xlat
add
cmp
adc
cmp
push
sub
outsl
sbb
jo
push
mov
xchg
out
outsb
push
push
xchg
fidivl
mov
xor
lcall
mov
mov
adc
arpl
or
loope
outsl
adc
or
push
pushf
mov
repnz
sub
sbb
sub
daa
mov
mov
mov
push
dec
adc
or
and
int
xlat
xchg
inc
xchg
push
mov
lcall
mov
jne
incb
mov
sub
cld
fmuls
shlb
nop
dec
test
notb
adc
dec
sar
push
cmp
and
sbb
or
sub
push
inc
xlat
sbb
sti
and
cmp
dec
dec
xchg
inc
push
das
inc
push
mov
dec
push
out
shlb
sub
rcl
adc
pop
adc
clc
mov
dec
adc
fwait
push
xchg
or
aam
aad
push
sbb
mov
push
stc
adc
jp
lea
fistpl
cli
pop
or
std
mov
fimull
cmp
jl
mov
sub
cmp
cs
jbe
mov
std
popf
lea
ds
sub
sub
in
aad
jge
adc
adc
movsl
jg
jg
mov
push
outsb
xchg
rclb
sub
inc
xchg
xchg
adc
sub
inc
ljmp
xchg
or
adc
sarl
push
insb
xchg
dec
adc
cmp
and
aad
xchg
ficoml
xchg
fld
sub
dec
push
and
int
orb
mov
stos
fists
rcl
inc
sbb
roll
push
cmpl
dec
pop
mov
mov
fisttpll
sub
and
rorb
push
rorb
mov
sub
push
push
jae
iret
inc
sub
sub
movl
jecxz
adc
fidivrl
jb
sub
test
pop
mov
inc
outsb
dec
xchg
push
adc
cmp
mov
mov
xchg
flds
sub
cvtdq2ps
sub
push
fcoms
cs
insl
xchg
ret
dec
push
sub
rorb
or
adc
mov
dec
push
mov
aaa
mov
ficoms
rclb
aam
rclb
stos
lcall
cmp
cmpsl
sbb
dec
xchg
dec
iret
fnstsw
or
leave
pop
rcll
mov
insb
nop
xchg
xor
dec
adc
or
ja
mov
out
push
mov
mov
lods
rorl
or
xchg
dec
jb
mov
add
je
sub
dec
xchg
aas
adc
push
jno
push
mov
pop
nop
mov
or
adc
rorl
int
or
push
push
jb
mov
adc
aad
mov
into
adc
mov
xor
sahf
push
mov
mov
mov
rorl
mov
adc
lcall
mov
push
mov
push
in
adcb
fwait
mov
adc
adc
push
push
je
das
xchg
mov
add
je
and
pop
mov
push
insl
push
and
jno
xlat
cmc
fsts
push
or
fldt
shrb
pushf
mov
adc
lods
xchg
mov
push
xchg
push
and
xlat
ljmp
inc
xchg
cltd
push
into
push
cmp
ds
push
xchg
or
push
clc
adc
mov
roll
dec
push
adc
dec
push
jae
push
push
push
push
mov
push
nop
rclb
rclb
adcb
sub
pop
dec
mov
xchg
lods
mov
leave
repnz
mov
popf
adc
sbb
xor
outsl
mov
push
mov
sbb
push
cltd
mov
testl
push
adc
sahf
push
push
pop
scas
lcall
mov
mov
push
das
push
mov
rcrb
ja
mov
push
rcrb
andb
mov
sub
pop
push
dec
sub
pop
fildll
adc
jp
and
dec
dec
aad
xchg
dec
push
cmp
dec
jns
mov
push
out
adc
loop
sbb
fmull
ljmp
mov
cmpsl
lret
and
addr16
xchg
or
adc
xor
inc
push
ror
xlat
dec
fldt
sub
push
dec
aam
daa
push
mov
push
rcll
or
xlat
push
and
pop
dec
push
fisttpl
cmpsb
sbb
sarl
rorb
xor
lds
pop
add
push
iret
dec
aam
ror
pop
mov
test
int3
mov
xchg
or
and
adc
push
cli
adc
or
or
xchg
ss
dec
adc
int
iret
aas
nop
dec
aad
mov
into
into
xor
dec
mov
or
push
mov
xor
mov
adc
mov
nop
adcl
ds
movlps
ljmp
cmp
je
mov
cmp
mov
int3
xchg
dec
push
repz
inc
adc
lea
aad
adc
stos
mov
or
lret
pop
push
rcrb
fwait
dec
push
cmp
dec
adc
sub
pop
push
push
adc
roll
push
dec
xchg
dec
fisttpl
mov
or
xor
or
inc
shrb
cli
daa
shrb
call
or
mov
lret
scas
in
dec
xchg
sub
pop
sbb
and
movsl
xor
xlat
or
lods
mov
add
aad
aaa
mov
daa
cmp
lea
pop
adc
bound
mov
and
cs
push
mov
adc
jl
fistl
mov
xchg
lea
ss
fs
or
xchg
cmp
mov
sarb
int3
xlat
sub
sub
inc
lret
ret
inc
push
sbb
int
sbb
mov
xchg
ds
dec
iret
push
lret
mov
and
push
xchg
sub
jnp
jecxz
lea
or
adc
and
jl
push
adc
outsb
adc
or
aad
push
dec
pushf
mov
adc
mov
nop
mov
lods
xor
pop
nop
test
adc
mov
or
shrb
cs
and
mov
sub
lods
mov
rorb
xchg
insb
or
xchg
sub
loopne
add
movsb
and
popa
shll
sub
cmp
adc
push
xchg
pushf
gs
mov
xor
test
sbb
pop
push
xor
xlat
ja
sub
mov
mov
and
or
xor
or
xchg
dec
push
xchg
pop
adc
adc
loop
sbb
out
sbb
jne
push
xor
into
sub
dec
lahf
daa
dec
mov
inc
xor
sbb
mov
or
arpl
sub
pop
shrl
lods
push
xchg
int
cmp
nop
adc
or
mov
or
mov
and
adc
arpl
sub
dec
mov
jbe
and
gs
outsl
xchg
adc
into
mov
xchg
mov
mov
sbb
pop
fildl
dec
sbb
into
nop
mov
cmpsl
subb
or
or
cs
dec
adc
push
mov
xor
mov
iret
aas
sbb
scas
cmp
mov
shlb
dec
cmp
adc
xor
bound
mov
daa
gs
stc
in
or
and
xor
movsl
push
in
push
aam
nop
pop
xchg
push
pop
xchg
xchg
dec
adc
mov
pop
mov
adc
pop
aad
sbb
sub
and
mov
clc
sbb
sbb
fisttpl
fimull
pop
sub
jl
es
into
xchg
rolb
or
or
push
sbb
pop
mov
fisubrl
shlb
jb
adc
lods
push
mov
push
xchg
xchg
daa
aaa
rclb
or
cmp
addr16
xlat
or
mov
or
adc
ja
nop
pop
inc
push
xor
or
xchg
xchg
aas
adc
adc
mov
add
push
push
cmpsl
adc
sub
sub
fbstp
mov
sub
adc
and
fildl
lret
or
or
sub
scas
test
mov
popl
int
adc
dec
xchg
daa
xchg
adc
push
bound
sub
or
popf
mov
rorl
cmp
fs
xchg
imul
pop
pushf
test
push
mov
and
and
xor
scas
or
mov
adc
scas
add
sbb
dec
or
adc
dec
rorb
xchg
daa
cmp
or
xchg
xchg
push
adc
push
dec
jbe
adc
scas
popf
rorl
mov
scas
add
aaa
ja
xchg
and
cs
lcall
inc
test
lea
sete
push
mov
push
rclb
ret
xchg
adc
rclb
sahf
xor
inc
cmpsl
cmp
pushf
rcrb
out
mov
mov
push
cmp
xchg
xor
or
and
in
ret
adc
sub
mov
mov
fisubrl
xchg
mov
sub
mov
mov
xor
and
iret
adc
xor
lret
sbb
and
pushf
push
and
mov
mov
insb
insb
mov
sub
inc
pop
incb
das
adc
jnp
mov
adc
and
scas
xor
mov
cmpsl
mov
daa
insb
mov
int
insb
lea
cmpsl
dec
inc
mov
add
adc
sbb
shlb
out
lea
add
icebp
das
or
pop
jle
xchg
push
cli
cli
adc
push
mov
in
push
mov
pop
sub
fwait
adc
je
iret
repz
scas
aas
dec
sbb
psrld
push
das
daa
inc
sbb
imul
push
movsl
push
fiadds
sub
sub
sbb
sbb
dec
int3
push
dec
insb
push
push
ss
push
insl
cmpb
movsb
arpl
shlb
das
cmp
mov
adc
scas
dec
cmp
bound
sub
mov
inc
sbb
push
xor
inc
and
xchg
adc
and
xor
push
xor
adc
push
mov
pop
xor
xchg
cs
and
xor
sbb
outsb
adc
pop
and
stos
in
pop
aad
mov
sahf
addr16
pop
inc
stos
cmpsl
scas
mov
int3
xchg
xchg
out
nop
repz
mov
sub
ss
sbb
pop
lods
shrb
mov
mov
push
cmovns
sub
xchg
inc
bsf
adc
lods
xchg
adc
and
xor
es
xchg
or
repz
orb
xor
lea
or
insb
stos
dec
mov
adc
and
cmp
sub
cld
adc
push
out
sbb
mov
add
lahf
mov
mov
iret
rcrl
push
popf
inc
adc
xor
mov
push
xor
sbb
aam
cmc
xor
sub
xchg
sbb
into
lea
and
pop
cmp
mov
scas
mov
push
adc
unpckhps
mov
xor
adc
jle
xlat
dec
dec
xchg
dec
xor
mov
mov
or
cmp
mov
pop
lret
or
sub
xor
mov
push
mov
push
mov
or
xor
cmp
rcl
arpl
and
or
mov
or
push
or
cmpsb
mov
in
adc
and
inc
or
and
cwtl
dec
xlat
dec
xchg
and
mov
inc
xchg
mov
add
xor
in
stos
test
fdiv
cmp
adc
bound
punpckldq
push
push
xor
inc
cld
sub
mov
movsb
xor
xor
mov
mov
gs
push
xor
or
in
inc
inc
adc
push
xchg
push
lahf
scas
xor
test
adc
sub
lea
into
js
test
push
or
push
xchg
push
mov
sub
das
cmp
lods
mov
mov
cmp
into
xor
into
push
push
xor
bound
push
sarb
xchg
or
aas
femms
push
mov
imul
or
xchg
push
ljmp
push
repnz
bound
das
movsl
ja
das
or
cltd
int3
cmp
xor
xor
insb
sbb
sub
cmpsb
pop
insl
mov
push
mov
pop
mov
into
int3
rcl
jae
xchg
out
or
sub
scas
mov
cmp
ljmp
push
cmp
lods
sbb
xor
daa
adc
mov
sbb
mov
fs
adc
ret
pop
pusha
push
adc
aas
xor
nop
xor
and
ljmp
or
sub
orl
dec
mov
test
sbb
and
and
sqrtps
hlt
dec
mov
mov
movsb
lods
sbb
or
ds
pop
mov
push
xor
mov
push
push
mov
sub
mov
push
adc
adc
sbb
ss
into
xchg
jl
fists
test
xchg
pop
xor
push
movlps
adc
xchg
add
inc
fmull
mov
mov
fstps
mov
sarb
add
push
rorb
mov
push
sub
nop
cmp
movsb
movsl
cmpsb
mov
rclb
cs
pop
cmpsl
enter
xchg
xchg
mov
mov
rcr
cmpb
pushf
into
xchg
mov
mov
outsb
mov
fdivl
sub
sbb
and
test
dec
mov
or
dec
adc
cmc
push
stos
das
xor
shrb
xchg
add
mov
mov
aas
mov
scas
xor
or
xchg
scas
xor
movsb
dec
test
push
and
pop
mov
das
jbe
mov
xor
sbb
dec
nop
jae
int3
mov
fs
iret
or
and
mov
adc
sub
loopne
adc
push
int3
pop
mov
movsl
adc
xchg
cmp
and
dec
xchg
mov
jl
adc
lcall
lcall
mov
insl
jno
ret
push
dec
or
cltd
pop
mov
jl
stos
stos
xchg
sbb
mov
mov
or
test
lods
mov
out
cs
jne
dec
push
xchg
xor
mov
adc
sbb
sbb
aaa
shll
cmp
movsb
push
mov
xor
sub
ret
dec
jl
notl
lods
pushf
sahf
jp
or
adc
lods
cmp
push
push
movsl
mov
cmp
pusha
cmp
pop
xchg
mov
dec
push
and
mov
xchg
scas
mov
int
pop
cmpb
lahf
movsl
and
and
xchg
repnz
sbb
test
mov
nop
movsbl
cmp
movhps
mov
int3
inc
or
and
mov
adc
ja
fisubrs
das
mov
scas
stos
mov
adc
stc
mov
shlb
jno,pn
sbb
mov
lret
sub
push
cmp
xlat
mov
mov
dec
ret
ss
adc
popf
or
xor
mov
mov
fcmovnu
xor
jae
pxor
xchg
pushf
xchg
mov
or
pop
add
cmp
into
mov
mov
aaa
lret
adc
sub
xor
scas
movsb
push
sub
sub
sbb
ror
shrb
mov
cmp
dec
scas
sub
push
mov
xchg
cmp
push
dec
cmp
push
aam
sub
lret
and
sub
xor
adc
adc
cli
push
sub
pop
and
sbb
pcmpeqd
mov
popa
mov
stos
scas
ja
mov
sbb
or
aam
and
mov
lods
jnp
add
xor
and
and
mov
add
xor
mov
adc
test
test
cs
mov
es
xor
mov
aaa
adc
cs
stos
ret
loop
xlat
sbb
scas
lea
iret
jns
sbb
cmp
leave
push
sbb
mov
movsb
sbb
insb
sbb
pop
push
stos
fwait
and
add
ret
ljmp
das
dec
scas
pop
int
xchg
adc
push
push
cld
adc
cmpsb
adc
bound
or
pushf
mov
xor
mov
sub
pop
into
dec
stos
or
xor
pop
xchg
pop
sarl
xlat
dec
mov
rcll
adc
in
mov
adc
and
aad
ret
xor
mov
hlt
stos
insb
cmp
push
stos
cmp
mov
xchg
pop
sbb
xchg
mov
sbb
jbe
mov
adc
sahf
mov
pop
lea
or
pop
sbb
pusha
mov
push
pop
inc
sub
jp
push
stc
adc
cmp
lods
dec
adc
sbb
adc
xor
insb
fstpt
xchg
jae
sub
jl
aam
xchg
dec
scas
mov
or
xor
or
and
std
push
ds
xchg
or
cltd
push
mov
push
sub
ror
mov
scas
into
adc
aas
adc
push
sbb
dec
das
mov
xchg
adc
xor
xlat
cmp
in
adc
mov
das
adc
or
mov
mov
jne
insb
xor
mov
sub
cmp
adc
mov
int3
xchg
or
mov
sbb
and
arpl
mov
dec
mov
xchg
push
ds
sub
mov
jp
sarb
nop
add
and
add
dec
mov
xchg
mov
push
add
popf
sbb
cs
xchg
mov
or
pushf
cmp
cs
out
sbb
mov
dec
inc
mov
adc
adc
pop
loop
push
mov
test
cmpsb
lea
jae
pop
sub
adc
js
and
pop
stos
or
dec
and
mov
into
test
push
sub
sbb
add
scas
test
in
test
nop
inc
mov
and
aad
adc
pushf
xlat
into
cs
in
cs
mov
xor
pop
adc
aam
dec
cmp
sub
xor
xchg
push
aad
xchg
push
xchg
stos
rcll
xor
push
adc
enter
jnp
adc
mov
cmp
add
cli
pop
push
mov
insl
inc
pop
xor
mov
scas
sbb
stos
xor
cmp
das
pop
mov
ljmp
cmp
inc
inc
xchg
mov
outsb
ds
or
mov
sbb
aas
dec
xchg
mov
popa
xchg
push
mov
das
test
aas
daa
stos
popf
cmp
cltd
or
adc
mov
pop
adc
jb
mov
mov
sbb
xchg
mov
or
fst
push
lods
sub
loop
aaa
out
and
aad
push
push
and
xchg
test
xchg
insb
rorb
and
movsb
cmp
push
sub
push
mov
or
gs
or
fsts
or
xor
cmp
ds
push
roll
popf
and
adc
cmp
or
aam
popf
aaa
and
mov
sbb
mov
push
mov
mov
rorl
stos
cmp
or
or
les
adc
adc
es
lcall
lods
aas
jns
roll
in
insl
shll
push
sub
xchg
xor
jnp
sub
and
inc
adc
xor
push
mov
mov
xchg
or
pop
lret
dec
cmc
add
mov
into
xchg
push
sbb
sub
sbb
es
outsl
int3
mov
mov
push
mov
rorb
adc
add
fnstsw
stos
sub
xchg
or
push
lods
inc
cmp
add
scas
repz
test
adc
or
adcb
dec
xor
aam
ret
mov
cmp
shlb
dec
sub
cwtl
mov
scas
mov
sub
dec
xchg
mov
mov
jle
pop
mov
xchg
xor
sbb
push
xchg
xor
arpl
sub
mov
sub
xchg
and
dec
rorl
sbb
aas
fs
xor
mov
xchg
adc
pop
xchg
loope
xchg
or
mov
mov
mov
mov
push
fisttpl
mov
cmpsb
mov
and
dec
xor
push
xchg
inc
or
movsb
adc
ja
cmp
or
sbb
in
cmpsl
adc
dec
sbb
xchg
or
push
pop
je
or
dec
mov
push
dec
dec
in
mov
mov
push
dec
jno
cmpxchg
aam
push
ds
add
gs
or
dec
lock
push
shlb
xor
mov
or
cwtl
mov
dec
ret
pop
in
mov
aas
cmc
dec
mov
fstpt
mov
adc
pop
mov
dec
or
ss
loop
mov
xor
xchg
into
push
ret
push
cmp
mov
movsl
lods
clc
mov
test
pop
lea
adc
lock
xchg
dec
push
push
or
ds
pop
shlb
rorb
sbb
ja
xchg
shlb
es
add
sub
pop
shr
rorb
adc
decl
dec
add
dec
xchg
dec
mov
pop
or
pushf
fwait
push
dec
or
insb
or
xchg
sti
push
pop
dec
into
mov
pop
mov
mov
and
push
mov
push
lcall
dec
dec
mov
xchg
push
and
sub
stc
sub
mov
push
xchg
push
mov
dec
dec
xor
pop
lods
sub
sbb
sbb
orl
adc
cmp
mov
dec
push
and
lahf
cmp
pop
mov
sub
push
sahf
testl
pop
mov
xor
xchg
push
push
mov
movsb
lods
scas
imul
test
sbb
mov
or
and
xor
adc
pop
mov
loop
nop
shrl
fidivs
iret
mov
pushf
adc
xor
add
adc
mov
push
mov
or
adc
xor
cs
ja
sbb
addb
jle
sbb
sbb
orb
shlb
mov
shlb
int3
jb
icebp
push
and
jl
xchg
sub
mov
inc
sbb
push
fisttps
in
mov
fimull
gs
pop
mov
mov
dec
sbb
repz
or
aad
jae
xchg
stos
or
add
sahf
test
dec
sysexit
adc
jno
xor
dec
fistpl
push
orb
adc
sahf
or
mov
rcrb
test
push
int
mov
nop
lcall
cmp
mov
dec
xlat
sub
push
cli
sub
dec
stos
ss
or
fimull
sbb
or
scas
xchg
push
mov
aas
xchg
or
andnps
inc
push
lcall
rsqrtps
lret
scas
xchg
dec
push
dec
repz
fs
mov
scas
jb
shrl
aad
adc
add
sub
ret
mov
bound
adc
push
sub
mov
xchg
dec
lcall
adc
mov
cld
mov
cli
adc
dec
or
fstl
push
sub
jae
push
mov
adc
int
icebp
sub
mov
shl
xlat
sbb
or
sbb
mov
xchg
or
push
aad
mov
jns
pop
mov
push
negl
add
push
outsb
nop
mov
cs
popf
mov
mov
cmp
insb
lea
add
sete
adc
insb
nopl
push
xchg
mov
push
or
adc
adc
shlb
mov
mov
sub
mov
idivl
rorb
sbb
sub
xor
or
lods
cmp
adc
sbb
add
push
fistpl
push
aaa
mov
pop
adc
mov
testl
sub
inc
sbb
fldenv
sub
lea
or
mov
mov
in
sbb
mov
dec
push
cmpsb
adc
mov
push
pop
mov
xchg
adc
lea
into
fdivl
mov
xor
cmp
adc
push
lret
adc
adc
cmpsb
mov
cli
xor
dec
xchg
and
ljmp
fsubrl
mov
mov
jmp
add
mov
arpl
pop
lcall
aad
mov
int
xchg
inc
xchg
in
fs
test
pop
sbb
and
push
mov
push
push
mov
cmp
mov
sub
test
cltd
in
mov
sbb
push
and
adc
ret
adc
ret
adc
push
and
shll
sub
mov
and
insb
pushf
adc
fstl
mov
and
ljmp
scas
push
sub
pop
or
push
push
xchg
subl
movsb
push
sub
sub
xlat
sbb
jns
adc
inc
mov
fisubs
xor
mov
mov
pop
mov
sbb
mov
push
jg
sbb
or
mov
fisttpll
fs
das
xor
adc
or
cs
aam
push
xchg
push
imul
lahf
test
cmp
or
mov
sub
mov
lcall
fcoml
push
xchg
rclb
xchg
sub
add
push
hlt
sbb
or
pop
shrl
dec
adc
dec
in
bound
lock
dec
xor
xor
add
xchg
cmp
rcrl
xchg
inc
dec
out
ja
or
adc
or
cmpsl
jmp
cmp
pop
sti
adc
je
cmpsb
outsb
push
addr16
out
xor
loope,pt
jmp
push
loop
insb
cmpsb
mov
adc
movsb
outsb
and
in
bound
daa
sbb
mov
adc
cmp
test
arpl
outsl
mov
jb
dec
sub
sbb
jbe
aaa
ret
std
mov
mov
adc
fstps
aad
dec
push
popa
loope
or
or
jl
testb
adc
sbb
inc
cmp
stc
aaa
lcall
xor
or
cmp
adc
test
add
cwtl
mov
xrelease
xor
das
sub
aaa
imul
jle
call
add
lahf
pop
adc
or
sbb
dec
dec
jb
xchg
and
movsl
add
and
xchg
loopne
and
jbe
shr
daa
sub
jae
fwait
jb
xlat
lahf
sbb
adc
dec
or
dec
or
push
adc
inc
outsb
inc
xchg
sbb
insb
cmp
xor
xchg
sbb
insb
sub
and
xchg
push
sbb
insb
sbb
pop
outsb
push
xchg
adc
adc
push
outsb
or
sub
sub
mov
inc
sbb
outsb
ds
cmp
cmp
adc
sub
xchg
and
and
adc
adc
push
or
xchg
add
cmp
sub
sbb
and
loop
or
pop
xchg
dec
lcall
fwait
adc
sbb
outsb
pop
xchg
pushf
sbb
sbb
adc
sbb
outsb
pop
xchg
sahf
sbb
pop
insb
pop
mov
outsb
pusha
adc
xor
cmpsb
mov
push
es
data16
cmpsb
xchg
out
daa
insb
cmpsl
mov
adc
sbb
outsb
test
and
popa
xchg
inc
sarl
pop
xchg
outsb
sub
inc
loope
dec
sarl
or
xchg
dec
sarl
pop
xchg
outsb
sub
inc
loope
cmp
outsb
pop
in
sbb
sahf
pop
movsl
int
fisubl
cmpsb
adc
fisubs
mov
es
jne
sbb
cmp
inc
pop
mov
fisttpl
rcl
push
inc
pop
sub
in
outsb
xchg
xchg
clc
call
mov
sbb
es
cmp
testl
lret
mov
call
mov
sbb
fwait
xor
int3
or
ret
or
adc
lods
fists
cmp
inc
xchg
cmpsl
mov
out
loope
push
rcll
mov
push
mov
mov
mov
sbb
mov
jo
pusha
adc
lods
rcrb
inc
fisubs
push
lods
rcrb
inc
fsubl
sbb
rcrb
lds
lcall
sarl
stos
push
fidivrs
push
aam
cmp
pushf
lcall
pop
fwait
lods
jmp
lahf
addr16
mov
push
sub
shll
pushf
push
fwait
jb
clc
and
jge
mov
iret
inc
repnz
in
iret
mov
push
jbe
xchg
je
in
iret
jbe
ljmp
xchg
sub
sbbb
adcl
lods
and
out
push
cwtl
sbb
push
push
and
nop
loop
and
cmpsl
arpl
popf
push
mov
movsl
in
dec
rcll
fcomp
cmpsl
cltd
hlt
or
stc
jl
ret
push
push
adc
push
xor
or
sbb
mov
dec
addr16
ja
pop
fistpll
add
ds
xor
leave
lret
insl
and
xchg
dec
inc
sbb
insb
or
aaa
outsb
mov
insb
or
and
xchg
insb
pop
mov
adc
sbb
outsb
xchg
sbb
lds
ds
outsb
and
insb
pop
mov
adc
sbb
outsb
or
inc
adc
in
sbb
insb
mov
adc
sbb
outsb
adcl
add
or
push
inc
lods
xchg
inc
sbb
add
rcll
sbb
outsb
and
add
rclb
sbb
sub
insb
dec
inc
xchg
inc
sbb
cmp
xor
jg
sub
xchg
and
mov
sbb
outsb
ds
adc
std
or
sub
jge
inc
sbb
mov
mov
and
cmp
pop
ljmp
mov
outsb
or
out
sbb
sbb
mov
jp
inc
dec
cmp
outsb
stc
sub
xor
outsb
cmp
insb
mov
sbb
outsb
cmp
sbb
ja
cmp
outsb
xor
negb
daa
mov
sbb
sbb
outsb
adc
cmp
inc
mov
iret
or
cmp
adc
or
inc
xchg
mov
popf
adc
mov
adc
adc
dec
jp
jg
xor
sbb
mov
ret
iret
jb
inc
stos
les
xchg
subb
inc
stc
mov
xor
push
lret
inc
mov
dec
xor
lds
cltd
ja
cwtl
bnd
and
cld
add
out
les
int
js
std
aas
sbb
sti
jns
mov
shrb
enter
jp
call
or
dec
mov
inc
jg
cs
out
stc
stos
into
jbe
ss
push
xor
mov
std
inc
ja
and
clc
xchg
dec
xchg
adc
xlat
pop
stos
repnz
xor
mov
cli
mulb
cs
xchg
and
sbb
mov
rcrb
setp
scas
or
lods
das
mov
mov
cmpb
jnp
xor
imul
ss
aaa
push
sbb
cmp
mov
pop
test
xor
test
add
aam
xchg
push
lcall
mov
inc
sub
add
mov
inc
push
xchg
and
xchg
test
adc
mov
ficoml
sub
mov
cmp
les
repz
push
xchg
push
shld
insb
popl
jae
rorb
pop
lret
xor
pop
pop
stc
jg
ret
das
cltd
jae
adc
pop
lret
xor
inc
cmpsb
int3
test
mov
push
mov
xor
in
ds
cmp
fstpl
mov
pop
cwtl
cmp
sbb
pushf
mov
clc
scas
mov
lret
mov
aaa
push
ljmp
mov
sbb
sahf
xor
inc
outsb
xor
sbb
dec
jge
sbb
sub
cwtl
dec
xor
push
fs
seto
xchg
xchg
cmp
jo
jns
or
sbb
or
sub
xor
jns
mov
sbb
je
adc
push
out
dec
jbe
cli
enter
mov
jb
sti
xchg
sahf
push
cmp
ss
jns
adc
imul
inc
push
repnz
enter
mov
or
adc
xor
xor
sti
xor
sub
ud0
jl
cmp
movsb
adcl
inc
je
adc
out
outsl
mov
cmp
xchg
fwait
sbb
negb
sbb
push
adc
mov
inc
je
popf
cmp
mov
cmp
movsb
inc
popf
adc
xchg
jle
lea
pop
xchg
repz
mov
xor
das
mov
fsts
xchg
pusha
xchg
data16
cmp
js
add
and
iret
jbe
mov
mov
clc
adc
mov
or
cmpb
sahf
clc
shlb
stos
sbb
scas
inc
js
sub
xor
lret
adc
mov
and
mov
cmpsb
das
out
adc
mov
push
out
arpl
mov
and
jb
mov
sub
fcmovbe
in
adc
push
fs
loop
pop
arpl
jl
fcomp
sub
jecxz
jmp
into
mov
fdivrl
sahf
pop
fwait
mov
jmp
test
fs
cltd
xchg
or
push
int3
jae
sub
inc
or
jb
adc
xor
dec
mov
or
test
cwtl
pushw
daa
aad
jge
or
jbe
add
iret
xor
sub
mov
dec
roll
stc
ficompl
and
jns
dec
mov
sub
cmp
movsb
or
das
sets
sarl
negb
adc
and
cmp
loopne
and
insb
and
mov
cs
inc
inc
insb
mov
cmp
outsb
mov
and
sub
mov
sub
xor
jecxz
adc
and
push
test
int3
and
pop
sahf
cmpsb
mov
pop
in
push
pop
sbb
imul
inc
xor
jnp
sti
adcl
and
in
pop
repnz
cmp
pop
adc
cwtl
mov
cmp
xchg
xor
adcb
popf
scas
cmp
pop
mov
iret
or
sub
push
daa
es
or
pop
and
jo
and
cmp
xchg
push
sbb
leave
push
sbb
inc
lcall
or
sub
pusha
or
adc
or
pop
adc
mov
sbb
push
push
pop
and
stos
in
insb
push
scas
cmpsl
int
or
or
jle
popl
mov
out
dec
inc
push
fcomi
dec
add
jbe,pn
ds
jns
push
cmp
sub
xchg
cmp
dec
sbb
adc
or
push
mov
push
push
xor
and
mov
test
mov
add
cmp
cmp
mov
cmp
cmp
adc
push
xor
ss
pop
or
add
sti
inc
pop
sbb
adc
push
sbb
sbb
mov
pop
sbb
sub
sub
test
xor
ds
sub
push
lcall
mov
sbb
inc
and
xor
inc
push
sbb
hlt
jae
push
push
mov
in
xor
cwtl
arpl
les
mov
in
or
inc
cmp
or
and
mov
imul
or
cld
stos
dec
xchg
aas
scas
pop
cmp
sbb
outsb
das
xchg
sub
sub
insb
pop
mov
sbb
outsb
sub
pop
sbb
or
cltd
iret
mov
sbb
sbb
sbb
lds
mov
or
push
jae
stos
sub
out
stos
push
ja
dec
or
sbb
mov
loop,pt
adc
add
adc
aaa
mov
or
jne
or
pop
jbe
sbb
fimull
movsl
data16
lret
push
mov
sbb
test
lods
les
sub
in
lret
xor
mov
mov
mov
inc
add
std
sub
push
sbb
cmp
dec
lods
jo
aaa
movsb
cmp
ja
xor
cli
ret
or
mov
mov
or
imulb
mov
es
outsl
aam
or
push
ficompl
fisttpll
or
mov
fwait
mov
cmp
cmpsb
sti
outsb
pop
repnz
aaa
push
aaa
push
stc
mov
push
std
jle
add
adc
cld
xchg
cmp
mov
dec
xor
mov
sub
leave
push
lcall
sbb
xor
mov
sub
xor
cli
sahf
bound
mov
mov
imul
mov
lahf
or
aas
jne
sbb
in
jae
jnp
clc
in
pop
fldenv
and
out
push
movsl
andb
jbe
mov
sbb
pop
cli
shlb
bound
adc
call
jmp
das
push
pusha
mov
fs
and
and
push
and
mov
jmp
and
push
or
aam
push
pop
push
pop
and
push
and
and
mov
pop
and
cmp
mov
and
sub
adc
jno
dec
bound
repz
sbb
sbb
mov
and
sub
push
xchg
int3
mov
sub
jns
add
mov
mov
or
cld
ja
pop
ds
loope
loope
imul
xor
loopne
pop
or
jb
in
cmp
jmp
xchg
and
daa
les
lds
or
push
pop
arpl
addr16
bound
lea
in
cmp
push
std
mov
adc
es
lahf
loop
mov
sbb
push
cltd
jmp
and
pop
lcall
pop
add
inc
add
enter
xor
xor
les
mov
sti
push
jg
adc
pop
mov
adc
mov
cmpl
push
test
cwtl
lret
dec
or
push
add
inc
fcoms
test
add
cmp
jno
or
jo
or
xor
mov
mov
loope
scas
into
pop
jge
push
lcall
popf
ljmp
mov
in
cmpsb
mov
or
sub
loopne
mov
sub
subl
lret
adc
push
mov
cmp
mov
lret
hlt
push
sbb
dec
jbe
leave
adc
leave
or
sbb
mov
dec
leave
add
adc
sub
dec
mov
cmp
out
pop
andl
and
cmp
jb
mov
dec
outsb
sub
and
jg
scas
sub
and
dec
adc
cmp
push
in
dec
add
or
test
sub
push
cmp
mov
aam
aaa
mov
sbb
dec
xor
sub
filds
sub
sub
les
shlb
and
adc
cmpsb
test
repnz
push
dec
inc
andl
arpl
dec
and
sub
sbb
adc
cvttps2pi
inc
xor
mov
sbb
lods
push
push
das
jo
sub
push
sahf
jp
adc
pushf
inc
adc
or
pop
add
sub
pop
adc
adc
cmp
sahf
rclb
sbb
adc
pop
push
adc
dec
push
ss
xor
dec
sub
jo
push
daa
outsb
dec
pop
aam
xor
push
sbb
dec
pop
mov
pop
inc
xchg
add
ss
xchg
sub
xchg
push
xor
sub
pop
dec
adc
adc
push
pop
or
push
cmp
mov
sub
divl
push
adc
cmp
jo
aaa
dec
and
inc
pusha
dec
adc
movups
or
jg
jb
icebp
cmp
jno
out
dec
rcrb
xor
outsl
dec
cmp
jo
dec
push
mov
xchg
or
push
outsb
dec
inc
xchg
sbb
test
push
push
adc
or
sub
sub
jle
and
pop
sbb
sbb
mov
sbb
sub
insb
push
or
dec
sbb
cwtl
xor
ficoml
dec
inc
mov
dec
xor
fs
cmpsl
and
dec
out
mov
sbb
arpl
popf
cmp
repz
sub
push
mov
and
push
sbbb
adc
mov
mov
jno
pop
pop
push
cmp
cmp
inc
adc
cmp
insb
sub
mov
and
lods
setns
pop
popf
sbb
dec
add
inc
push
ds
dec
xor
xor
xchg
adc
sbb
push
cmp
out
push
xor
sbb
mov
adc
sbb
push
cmp
or
mov
setl
bt
inc
lods
push
inc
jl
insb
sbb
or
sub
orb
cwtl
cmp
adc
xor
sub
mov
les
dec
lahf
adc
push
sub
dec
dec
push
push
inc
xchg
dec
cmp
xchg
xchg
aaa
sbb
aas
push
and
insb
dec
or
adc
sbb
and
dec
push
outsb
sbb
push
adc
dec
push
pop
mov
jo
sub
adc
movups
push
sbb
in
inc
jnp
mov
sbb
cmp
lods
push
sbb
xor
dec
or
inc
xchg
jne
cmp
dec
and
pusha
and
adc
adc
cli
cmp
push
dec
es
sbb
outsb
or
push
or
inc
daa
jbe
sub
cmp
xor
fwait
sbb
pop
push
adc
dec
insb
pop
pushf
xor
jp
inc
dec
cmp
push
imul
dec
pop
cmp
ret
sbb
sbb
stos
sub
push
add
lret
ljmp
xlat
into
adc
sub
mov
xor
inc
jns
or
xchg
or
pop
adc
jmp
xor
loop
xor
sub
outsl
pop
adc
push
sbb
or
sub
out
sbb
jae
mov
sbb
xor
sub
dec
and
ss
sbb
adc
setb
shlb
dec
mov
mov
sbb
bndstx
xor
push
es
outsb
and
pop
outsb
lret
notl
fisttps
cmp
fistl
dec
mov
pusha
xor
sub
ja
sbb
add
pop
dec
push
sbb
adc
ss
push
sbb
jno
sub
push
fwait
and
cmp
sub
testb
push
aas
mov
data16
sub
sub
mov
rcrl
sub
or
je
xor
sub
outsb
and
xor
dec
or
adc
pushf
push
cmp
adc
shrl
aas
scas
and
add
and
inc
sbb
in
or
push
jne
xchg
stc
jg
std
iret
mov
clc
mov
push
ja
mov
push
cld
hlt
dec
lods
cmp
push
mov
dec
push
arpl
shr
fsubrl
sbb
aaa
movsb
mov
jl
mov
inc
sti
jnp
int
mov
in
sti
inc
jb
or
js
jl
mov
jp
cld
jbe
mov
mov
ds
mov
ds
inc
js
cltd
std
daa
sahf
mov
or
pop
stc
lea
adc
pop
iret
repz
lods
stc
xchg
aam
cmp
adc
lea
sbb
pushf
inc
repnz
ds
inc
or
add
jb
call
int3
mov
push
aas
and
mov
dec
xchg
int3
fwait
rclb
sbb
adc
xor
rcrb
push
lea
pushl
push
dec
or
nop
mov
inc
adc
jb
pop
and
push
dec
jb
lods
jg
push
mov
adc
mov
sarb
inc
roll
iret
and
iret
mov
xchg
cmp
aaa
mov
leave
mov
cld
ds
rolb
je
test
sti
sarl
mov
jns
test
bound
cmpl
jl
ret
jge
int3
jnp
adc
inc
xor
xchg
rcrb
dec
cmpl
iret
pop
jp
cmp
mov
dec
incb
inc
cmp
lret
mov
adc
mov
mov
mov
mov
punpckhdq
mov
sti
decl
xchg
mov
mov
cmp
xchg
dec
inc
xchg
or
insb
sbb
pop
mov
ret
and
add
js
inc
insb
fldcw
std
dec
dec
sbb
aaa
mov
or
sbb
mov
sahf
jle
ficompl
mov
xchg
push
aam
xchg
dec
mov
sub
lcall
lea
andb
aaa
mov
sub
mov
push
lods
dec
pop
aam
out
push
and
push
scas
mov
pop
aas
jne
jbe
idivb
jmp
rorb
cmp
nopl
jbe
loop
bound
movsb
sub
cmc
sahf
or
adc
cmp
jmp
mov
and
and
cmp
xor
sub
jmp
cmp
and
ss
push
aam
jne
pushf
cld
clc
sbb
jbe
cli
clc
mul
ss
inc
xor
cmp
dec
mov
mov
sbb
push
lea
sbb
jg
jge
mov
push
mov
insl
dec
jbe
ret
adc
sarl
cmp
add
mov
pop
in
fsubl
jbe
lcall
jns
stc
mov
ja
hlt
movsb
aas
xchg
mov
add
cli
push
movsb
push
jns
inc
cmp
cld
jge
mov
mov
sahf
addr16
js
sahf
repnz
push
in
mov
sbb
into
sarl
cmp
jle
xor
adc
mov
in
mov
test
and
push
cld
dec
adc
aaa
mov
adc
jge
push
std
repnz
fninit
mov
rclb
push
add
push
ds
lret
jge
mov
outsb
xchg
adc
jns
shrb
xchg
lcall
mov
adc
mov
jge
sbb
ret
mov
icebp
pop
pop
and
pop
dec
or
stos
and
sub
mov
mov
sub
nop
xchg
xor
and
sub
iret
jnp
add
push
sub
rcll
sbb
cmp
mov
or
das
sbb
cmp
cmp
es
xor
mov
push
adc
mov
add
mov
or
mov
cmp
std
mov
cmpb
or
lods
push
daa
lret
bound
and
sti
sbb
je
xchg
pop
xchg
lea
adc
rolb
sbb
push
imul
ds
adc
pop
aaa
or
pop
pop
repnz
xlat
ss
mov
sub
fs
sbb
xchg
and
bound
cmp
adc
xchg
sub
dec
nop
and
or
cmp
sub
mov
and
cmp
cmp
cmp
ja
mov
push
mov
sarb
sub
xchg
cmp
jecxz
sarl
insb
push
sub
adc
clc
ljmp
jp
jmp
lods
sbb
sahf
andps
add
es
cld
hlt
xor
mov
or
aas
cmpsb
in
sbb
pop
mov
sbb
pop
xor
adc
cmp
inc
xchg
lahf
mov
cmp
inc
inc
fwait
shll
lcall
jae
xchg
imul
cmpsb
pusha
fbstp
inc
jge
mov
lods
add
add
fcmovb
imul
shll
and
push
sbb
mov
inc
jns
dec
sti
inc
and
push
lcall
testb
inc
into
add
mov
push
call
jmp
clc
adc
rorb
and
mov
jnp
mov
loope
ucomiss
mov
mov
cwtl
rorb
mov
and
test
push
fwait
fwait
imul
loop
and
pop
jo
mov
div
stos
cld
dec
sub
and
lret
add
mov
inc
and
loope
push
mov
packsswb
mov
mov
ds
shrl
dec
adc
mov
loope
xor
push
jbe
mov
ret
inc
dec
xchg
aam
sahf
mov
inc
inc
loopne
and
subl
fisubrl
push
xchg
lea
in
mov
push
add
push
cwtl
xchg
and
fsubr
ss
or
pop
inc
push
lahf
or
sbb
std
lcall
mov
adc
push
sbb
cmp
add
mov
jge
js
dec
push
cmpsb
lods
and
das
dec
cmp
scas
mov
adc
ret
je
push
mov
rcrb
cmovs
inc
sbb
adc
cwtl
pusha
icebp
xor
ds
and
xor
adc
sub
es
subb
xchg
cmp
fisubs
cmp
fs
pushf
or
mov
mov
lea
sbb
out
adc
scas
jge
xchg
out
inc
cld
out
push
adc
lods
insl
dec
push
and
lea
or
add
xor
pop
aam
aaa
push
push
xchg
call
dec
lcall
cmp
jae
pop
daa
push
jg
xchg
nopl
xor
jb
mov
xchg
push
ret
shl
sub
es
mov
xor
xor
sub
mov
or
and
adc
xchg
fs
and
jns
mov
rclb
xchg
mov
and
daa
xlat
push
adc
sbb
xor
sub
cmp
std
sbb
adc
pop
mov
into
xchg
aas
mov
push
aaa
jecxz
mov
dec
and
fiadds
movsl
lcall
mov
pop
mov
sub
in
dec
jae
fldenv
cmp
mov
lret
clc
mov
push
mov
pusha
or
sbb
mov
ljmp
dec
mov
jo
mov
sbb
ja
sarb
aaa
leave
sbb
mov
test
rcll
test
sbb
pushf
inc
aaa
mov
mov
lcall
adc
hlt
and
pop
or
adc
cs
int3
sbb
sbb
mov
pmuludq
ficompl
scas
or
adc
fimull
xchg
sbb
dec
add
cs
pop
add
fwait
bound
aaa
ret
fldcw
adc
cmpsl
sub
and
roll
je
push
lods
push
pop
jae
sbb
mov
inc
lods
adc
pop
orb
cwtl
subb
sti
jne
mov
mov
inc
cltd
rorb
repnz
adc
adc
adc
movsl
pusha
push
ds
aad
fdivrs
push
cmp
ja
lret
cmpsl
jmp
sbb
sub
lret
or
lahf
adc
sahf
mov
push
push
cs
in
scas
adc
adc
sub
ret
fisubrs
aas
adc
in
add
cmp
scas
jg,pn
push
lea
inc
mov
jp
push
xchg
push
aaa
cmp
jnp
pop
dec
clc
sub
jnp
cmpsb
and
mov
adc
fwait
xchg
aas
jns
push
jecxz
adc
jge
xchg
popf
sbb
popf
mov
jl
and
cmp
arpl
push
fcoml
aas
push
push
jbe
cmp
sbb
in
gs
pop
adcl
mov
lret
aaa
push
and
orb
xor
dec
aaa
incb
cwtl
push
addr16
mov
jge
aas
outsl
psubb
fs
add
jg
cmp
sbb
jle
push
ds
push
pop
and
push
stos
pusha
pop
xchg
adc
jp
adc
fmull
mov
push
movzwl
sub
pop
gs
rcrb
pop
pop
out
ja
sbb
daa
je
das
cmp
push
sub
inc
lret
aaa
or
cmp
idivb
arpl
notb
inc
lcall
bound
jg
pop
fucom
lods
clc
push
jle
cmp
scas
cmp
adc
and
sub
cld
push
js
inc
adc
aas
sub
bndldx
js
sub
sbb
and
call
inc
mov
movsl
stc
mov
or
push
in
push
cmp
arpl
test
shrb
cmp
in
addr16
in
icebp
jae
push
sub
lds
cli
and
test
adc
cmpl
dec
push
cmp
jle
testb
ss
xor
lods
and
cmpsl
adc
or
push
jb
pusha
icebp
cwtl
sahf
xchg
sbb
stos
sbb
cmp
and
mov
xchg
adc
mov
xor
stos
jp
xor
outsb
mov
push
xor
movb
repz
and
mov
pop
xchg
mov
repnz
and
jg
dec
pop
mov
lahf
icebp
roll
ja
add
dec
lret
jb
and
jnp
fbld
pop
in
outsb
add
orl
aad
pop
int3
dec
or
cli
adc
add
movsl
std
mov
addr16
cmp
jmp
push
jo
outsl
dec
mov
cmp
in
dec
mov
rcrb
lock
ret
cmp
push
xchg
mov
mov
sti
enter
ja
push
inc
adc
movq
xor
jmp
cld
scas
xchg
xor
and
mov
filds
sti
adc
mov
mov
or
push
xchg
inc
repnz
in
fisubs
dec
icebp
xchg
scas
cmc
push
xchg
cwtl
test
cmp
repz
sub
jp
mov
mov
inc
mov
insb
sub
scas
lret
rorb
cmc
and
movsb
and
scas
add
ss
sbb
jns
dec
mov
push
sbb
xchg
adc
aam
adc
inc
rcrl
rolb
mov
xor
adc
sub
or
mov
fidivs
jp
add
adc
push
adc
sub
adc
push
adc
push
sbb
repz
aam
pop
fmul
and
jecxz
and
sbb
and
test
mov
adc
clc
push
and
adc
jmp
pushf
dec
cmp
cmp
lahf
mov
jo
xor
inc
mov
ret
jb
pop
xor
xor
push
sub
aaa
hlt
nop
rorl
push
adc
shrb
pop
cmp
dec
scas
hlt
int3
les
and
bound
scas
and
inc
sub
stc
mov
push
notl
jae
adc
js
cs
xor
test
jo
push
sti
aam
fildl
mov
lahf
xchg
sbb
js
cmp
adc
adc
aaa
cmp
cmp
xlat
pop
insb
ret
into
daa
jb
mov
dec
fwait
sbb
bound
frstor
sbb
out
sbb
mov
sbb
movsl
inc
in
sbb
adc
push
cmp
push
dec
pop
addr16
daa
fs
out
notb
sbb
mov
cmp
js
xchg
incl
push
fwait
dec
ja
lea
lods
int3
dec
dec
mov
pop
outsl
mov
mov
test
mov
int3
pop
aad
xchg
push
getsec
stc
mov
sahf
pop
fwait
sti
adcb
pushf
xor
repz
cmp
xor
shlb
cld
mov
int
test
mov
cld
or
cmpsl
xor
xchg
outsb
sbb
sahf
cltd
daa
lcall
xchg
shlb
dec
mov
cmpsb
fs
mulb
das
xorb
and
inc
cmp
jge
jns
popf
pop
mov
pop
or
jne
dec
add
pop
fs
mov
mov
inc
push
cld
inc
push
iret
in
paddusb
aam
inc
jne
and
mov
lahf
pop
adc
mov
sub
repz
cmp
adc
xor
add
pop
sbb
repz
and
push
das
repnz
cmpsb
mov
mov
das
xchg
sub
sahf
xchg
adc
xor
das
iret
lods
mov
mov
movsb
push
mov
cmpsb
bound
loopne
pushf
mov
sbb
scas
xchg
daa
mov
or
mov
jne
xchg
sub
aaa
fisubl
sub
dec
adc
sbb
sbb
cmpsb
das
or
jmp
push
xchg
lahf
insl
or
pop
aaa
add
mov
xor
arpl
ja
cmp
mov
popa
ss
negl
or
aaa
xchg
loop
imul
loopne
bswap
dec
jp
aas
orl
sub
std
repz
adc
mov
cmp
scas
and
ficomps
mov
aam
add
dec
cmp
aam
xor
sbb
xchg
sahf
scas
jae
xchg
and
xor
pop
mov
xchg
sahf
mov
and
das
pushf
es
outsl
push
sbb
jbe
jns
aam
bound
out
push
adc
xor
add
mov
mov
lret
sti
js
and
and
stos
aaa
add
jle
push
xchg
shrl
aaa
lods
out
test
adc
in
cmp
scas
jne
das
jne
jb
xchg
aaa
or
xor
loope
stos
push
adc
sbb
adc
ds
je
jo
ds
stos
fs
fdivp
push
adc
stc
add
jns
es
push
push
cld
data16
jae
inc
scas
js
daa
jns
mov
in
sub
sbb
idiv
and
or
cltd
sbb
sub
imul
add
and
push
cmpsl
sub
inc
mov
add
pop
bound
iret
mov
cltd
cmp
push
nop
lcall
add
adc
sti
pop
int3
mov
sbb
xlat
pop
popf
mov
je
js
fmull
mov
je
add
cmp
lahf
insb
mov
in
fs
jae
push
adc
imulb
cmpsb
insb
pop
test
imulb
push
pop
imul
pop
fdivrl
or
sbb
lahf
dec
sbb
fwait
push
mov
bound
ja
cmp
lret
rol
divb
ljmp
pop
cmpl
adc
jns
and
fwait
in
paddd
jae
aaa
and
adc
adc
aas
pop
scas
dec
mov
sbb
dec
sbb
bound
mov
mov
cs
cld
cmp
repnz
jp
rcll
xchg
xor
outsb
xor
or
xor
testl
push
stos
fwait
cmpsb
sbb
testb
mov
test
popa
mov
fisubl
movsl
adc
ljmp
stos
jp
jp
push
pop
add
test
sbb
or
frstor
xchg
mov
xchg
aaa
ss
movsb
cld
movb
cmp
add
sub
add
push
mov
fstpt
cmpsb
cwtl
and
dec
movsl
and
int3
cli
mov
scas
sbb
loop
out
adc
sbb
cmp
js
bound
sub
ss
pushf
add
dec
mov
xor
movsl
insb
insl
sub
pop
mov
xor
push
ds
mov
jge
xor
cmp
mov
xor
das
jle
ds
js
or
xor
sbb
sti
jns
cmp
aaa
mov
cmp
push
int3
repz
and
mov
pop
xchg
jne
cmp
loopne
adc
nop
adc
push
stos
adc
mov
pop
popf
inc
add
enter
sbb
push
pop
jbe
add
mov
cmpsb
push
xchg
xchg
cmp
pop
clc
setb
xor
test
clc
pop
xchg
movsb
adc
mov
add
adc
bound
cld
cltd
sub
pushf
insl
add
outsb
sti
cmp
std
push
outsb
add
pop
mov
outsb
push
and
and
sbb
pop
jo
cmp
jge
ret
jle
fwait
inc
sbb
movsl
and
scas
add
pop
mov
lea
mov
aam
sub
fwait
cmp
cmp
mov
sbb
aaa
ja
aas
ja
test
adc
jle
cmp
push
scas
aas
mov
xchg
mov
aaa
xor
xor
mov
mov
mov
mov
add
ds
cmp
lods
mov
sbb
push
sbbl
mov
das
cmpsl
push
jb
movsl
ljmp
push
xor
pushf
mov
popf
subb
and
arpl
in
sbb
adc
adc
pop
fs
sub
cmp
push
adc
push
ret
insb
and
dec
and
iret
mov
scas
sbb
in
stc
cwtl
arpl
jne
int3
pusha
mov
jmp
and
push
adc
adc
push
mov
out
push
cmp
dec
dec
out
cmp
add
xor
cmp
push
stc
inc
push
cltd
xor
es
and
mov
push
pushf
push
mov
mov
dec
adc
xchg
jae
cltd
jns
scas
mov
mov
dec
xchg
loope
sbb
jle
or
popf
pop
pop
push
lahf
fstps
push
out
adc
sahf
pop
pushf
adc
cmc
xchg
sbb
xor
call
scas
cmpsb
mov
and
in
xor
push
mov
je
pop
jb
jl
inc
dec
xchg
out
adc
adc
or
xor
mov
and
sahf
mov
jg
je
mov
jae
or
jnp
or
sbbl
pop
in
daa
and
mov
dec
mov
jno
shl
out
mov
xchg
lcall
out
and
mov
daa
pop
xor
push
scas
xor
inc
cmp
mov
daa
es
addl
int3
and
inc
push
pusha
mov
dec
dec
dec
push
mov
sbb
sahf
inc
fdivs
test
pop
cmp
add
aas
mov
adc
das
sbb
inc
and
sbb
outsb
pop
xchg
adc
adc
sub
subb
dec
inc
xchg
ds
cmp
push
aaa
xchg
dec
xor
xor
and
cmp
fwait
pop
push
xchg
xchg
ficoml
lahf
adc
push
push
mov
push
xchg
sub
int3
cmp
mov
jmp
es
pop
and
nopl
cmp
stc
ljmp
inc
mov
cmp
sub
out
or
out
xchg
cmpsb
fs
mov
xor
pop
push
mov
adc
ds
es
xchg
xchg
push
mov
adc
xchg
mov
mov
jae
loop
cmpsl
adc
sbb
pop
sbb
out
jbe
pop
push
fildll
dec
pop
bound
and
push
mov
push
xchg
sbb
pop
sbb
inc
jae
pop
cmp
xor
or
push
dec
adc
jecxz
sub
insb
push
mov
push
adc
adc
bound
xchg
ja
or
push
sbb
mov
mov
and
out
into
bound
cld
xlat
adc
xchg
cld
push
les
gs
push
gs
xor
push
cli
testb
mov
dec
push
pusha
dec
dec
and
xchg
xchg
or
cmp
pop
out
sahf
das
pop
rcll
mov
xchg
ljmp
mov
and
mov
or
sub
jo
mov
and
and
pop
fsubs
ds
pop
mov
and
adc
fidivs
push
out
or
sub
sbb
outsl
push
sub
inc
pop
cmpsb
setae
jecxz
sub
aam
daa
cmp
inc
cmp
dec
pop
and
adc
shrb
das
sbb
mov
cmpsb
and
sbb
mov
pop
sub
sbb
roll
cmpsb
adc
or
push
sbb
cmp
inc
sahf
cmpsb
mov
shrb
cmp
inc
cmp
xchg
lods
fbstp
rorb
inc
inc
jmp
inc
mov
adc
lods
fildll
cmp
inc
movsb
cmpsb
xchg
pop
aaa
adc
outsb
pop
cmp
inc
lahf
cmpsb
adc
inc
cmp
cmp
inc
cmpsl
cmpsb
xchg
jo
cmp
outsb
mov
cmpsb
mov
adc
lods
fbld
cmp
inc
test
adc
lods
fbld
cmp
inc
lods
cmpsb
popf
pop
or
or
inc
dec
inc
or
clc
or
cmpsb
push
pop
mov
push
cmp
inc
dec
cmpsb
push
pop
adc
in
outsb
pusha
cmp
inc
scas
sub
fistps
mov
pop
mov
test
adc
xchg
inc
dec
sbb
sub
dec
inc
adc
fistpll
mov
dec
adc
fistps
test
cmpsb
push
pop
mov
shrb
pop
cmp
dec
adc
fistpll
cmp
inc
mov
and
lock
cli
sub
out
sarb
pop
mov
adc
ljmp
or
adc
lods
fildll
cmpsb
mov
aam
mov
int3
inc
in
cmpsb
fcompl
rcl
jecxz
rorl
jmp
sarb
pop
mov
iret
lods
fucomip
rcr
outsb
test
mov
outsb
jmp
sub
lods
sarb
inc
frstor
fistpll
jb
outsb
orb
in
inc
jle
shlb
inc
roll
or
jo
rolb
dec
leave
outsb
jnp
jae
inc
sub
outsl
dec
jg
cmp
mov
inc
or
inc
jne
rolb
jno
cmp
mov
jns
dec
flds
jmp
sarl
mov
incb
leave
sar
dec
hlt
sarl
mov
lock
fldcw
or
in
dec
call
cmp
mov
movl
lret
jmp
cmc
xchg
fldcw
or
in
inc
stc
jmp
dec
xor
push
or
faddp
cmp
push
push
sarl
cs
sub
dec
pop
xchg
pop
lcall
push
and
mov
sub
adc
into
sbb
popa
or
cmp
mov
lods
mov
inc
push
push
setnp
push
iret
sbb
sbb
cmp
push
sub
cmp
mov
and
int
loop
fldcw
xor
leave
jb
dec
mov
adc
sbb
outsb
rcll
into
inc
dec
shrb
pop
or
pushf
adc
mov
fnsave
dec
sub
adc
pop
xor
and
xchg
push
adc
fsubrs
pop
ficomps
jns
jno
sti
xlat
popf
pop
jl
push
pop
sbb
int
adc
xchg
aad
addr16
push
loopne
shrl
xor
pop
pop
loop
repnz
mov
push
arpl
es
mov
xchg
iret
addr16
bound
rcr
and
mov
xorb
adc
sub
ficompl
pop
fistps
pushf
or
sbb
pop
sahf
or
pop
pop
lahf
jecxz
pusha
mov
leave
mov
insl
push
cmp
fcmovne
sbb
xchg
cli
push
stos
aas
sbb
cltd
fs
mov
ficomps
in
push
sbb
pop
jp
and
mov
pop
ljmp
lahf
icebp
rcrb
sbb
cmpsb
scas
inc
fwait
xor
xchg
fsub
and
sahf
arpl
and
mov
inc
inc
sub
and
adc
rcrb
sbb
pusha
std
mov
xchg
cmp
mul
movsb
stos
mov
lcall
addr16
mov
dec
jg
cmp
aam
adc
or
mov
mov
or
fmulp
iret
push
aam
xchg
and
pop
pop
pop
stos
push
ficomps
inc
mov
mov
enter
mov
mov
cmp
dec
mov
push
mov
push
cmp
int3
jge
mov
xchg
mov
jg
cmp
push
fisubrs
push
bound
andb
push
push
pop
dec
imul
sub
adc
and
push
mov
and
push
pop
mov
sbb
out
push
xchg
icebp
stos
mov
xchg
push
cmp
push
cltd
and
pop
adc
pop
mov
mov
and
pop
pop
fildll
pop
sbb
aas
inc
sbb
or
push
mov
xchg
sbb
adc
mov
popa
dec
das
cmp
outsb
mov
pushf
dec
push
and
sbb
outsb
push
xchg
adc
xlat
xchg
insb
push
mov
js
or
sbb
mov
adc
mov
dec
and
or
sbb
or
push
inc
push
push
outsb
lret
lods
dec
inc
or
das
adc
int3
mov
sbb
mov
sbb
dec
inc
mov
mov
mov
dec
pop
aaa
addr16
jge
lret
sti
adc
rcll
dec
mov
out
sbb
pop
or
sub
mov
or
mov
lret
int
dec
mov
mov
or
cld
arpl
adc
rcrl
inc
mov
popf
pop
sbb
jne
adc
xor
int
sbb
lea
mov
or
or
mov
and
into
and
es
adc
or
sbb
sub
xor
jne
cmp
adc
xor
ljmp
jbe
rorb
pop
es
and
and
sub
ja
dec
push
mov
jbe
push
sti
push
out
or
adc
push
pop
or
dec
psraw
pop
aaa
sub
ror
push
and
xor
pusha
sub
mov
sahf
insb
in
adc
jnp
xor
std
scas
and
xor
scas
aam
test
sbb
or
ds
jle
sub
or
sbb
decb
sub
aas
dec
rclb
jg
xor
add
and
inc
pop
dec
xchg
sbb
push
mov
shrb
add
push
jl
adc
cmp
adc
andl
adc
shl
pop
sub
xor
push
outsb
and
push
pop
mov
xchg
jecxz
push
aaa
or
cmp
inc
out
sbb
imul
push
outsl
dec
xchg
cmpsb
sbb
sahf
mov
lcall
and
xor
pop
pop
lea
lods
adc
andl
xor
push
dec
cmp
movsb
adc
sbb
adc
imul
push
fcoml
pop
clc
mov
fmul
psllw
pop
imul
jns
mov
dec
in
scas
stc
mov
push
pop
adc
push
clc
push
loop
js
mov
push
mov
sbb
adc
and
cmp
sbb
sub
rcr
outsl
or
adc
cmp
clc
push
fstp
imul
sbb
loop
xor
dec
adc
adc
sti
or
inc
adc
dec
leave
lret
and
adc
or
jne
clc
mov
pop
mov
xchg
cmp
je
cwtl
xor
bound
sbb
sbb
sbb
cli
sbb
adc
pop
push
or
lock
push
out
lods
xor
or
imul
dec
cmp
jle
dec
jge
xor
in
dec
aad
fldcw
adc
les
or
adc
out
push
cs
daa
arpl
int3
or
and
or
orb
inc
scas
sbb
mov
mov
adc
adc
ss
pushf
cmp
cmp
out
mov
dec
sbb
mov
jge
sbb
sbb
and
mov
sub
loop
push
inc
mov
cmp
mov
cmp
push
cmp
add
add
push
pop
cmp
out
sub
dec
and
xchg
sbb
push
push
sbb
pop
lods
dec
add
or
xchg
jns
push
dec
cmp
sarl
test
xor
cwtl
xor
sbb
jmp
dec
ss
aad
pop
lods
sbb
mov
adc
sub
inc
dec
adc
dec
sub
or
mov
lcall
cwtl
adc
and
lock
pushf
push
sbb
or
sbb
or
test
push
and
push
cmp
leave
flds
dec
test
bound
sbb
cmpsb
cmp
cmp
dec
adc
xor
adc
push
lods
jecxz
add
xor
nop
dec
sub
dec
add
push
cmp
mov
push
cwtl
jl
dec
pop
repz
push
cmpsb
sub
mov
mov
push
push
sbb
inc
mov
int3
clc
mov
xchg
sbb
jno
or
and
sbb
sub
sub
sub
cmp
inc
sub
adc
adc
jg
mov
or
sbb
mov
inc
pop
sub
rorl
push
dec
ja,pt
mov
dec
push
loop
xor
inc
add
stos
cli
jae
push
mov
push
mov
sub
push
sbb
sub
sbb
fs
in
adc
ds
sbb
sbb
lock
pop
sbb
adc
cmp
adc
xchg
mov
dec
lret
adc
daa
sub
cmp
sub
cmp
dec
cwtl
xchg
or
dec
cmp
adc
ss
mov
into
inc
rcrb
dec
clc
and
push
lret
imul
cmp
or
sub
inc
stos
mov
ds
adc
rcrl
push
sbb
push
sbb
sub
subb
push
ret
xchg
adc
mov
ds
and
and
out
repnz
jnp
adc
leave
mov
add
dec
mov
rorl
das
mov
movsl
mov
fcmovnb
lcall
or
pop
or
sbb
rorb
or
pop
xchg
or
mov
mov
cmpb
lret
insl
insl
dec
mov
rorb
call
test
or
pop
sbb
mov
or
test
bnd
int
sbb
mov
or
leave
sub
aaa
mov
leave
ret
or
xor
jmp
dec
or
leave
xchg
mov
dec
sub
adc
jne
inc
mov
or
fldt
dec
jmp
dec
adc
mov
xchg
cmp
or
dec
leave
pop
into
test
das
pop
loop
je
repz
adc
adc
or
or
sub
repnz
dec
lret
mov
enter
add
dec
std
inc
mov
cmc
sbb
add
ds
gs
cli
dec
rorb
sub
sub
jmp
repnz
int
and
xor
push
pop
lret
out
jl
mov
and
dec
lcall
cmp
int
decb
dec
arpl
mov
jle
dec
xor
ljmp
pop
xor
add
call
mov
or
call
dec
leave
or
mov
mov
or
das
or
das
xchg
dec
or
mov
pop
adc
out
addr16
sbb
lret
les
arpl
pushf
mov
loopne
dec
jecxz
mov
mov
adc
lock
popf
push
push
inc
pop
je
hlt
outsb
or
and
mov
iret
push
daa
xchg
sbb
hlt
and
test
mov
into
adc
es
xchg
mov
sub
pop
mov
dec
shlb
ss
and
popf
xchg
push
push
mov
mov
stos
cmc
jbe
fistl
cmp
pop
mov
cld
aaa
push
dec
mov
xor
or
aas
and
or
js
das
leave
leave
push
lret
arpl
dec
add
add
mov
adc
pop
inc
stos
movsb
std
into
sbb
fwait
or
fwait
mov
cmpsb
sub
lea
sbb
mov
fcmovnbe
pop
push
jb
btr
and
lods
mov
or
or
or
cmp
push
ds
pop
scas
pop
or
adc
clc
or
nop
pop
es
int3
and
sbb
outsb
mov
outsb
rcrl
aaa
or
mov
in
or
mov
inc
pop
sub
hlt
inc
outsb
or
mov
pop
iret
or
xchg
jb
or
in
mov
rcll
push
add
adc
mov
cltd
dec
pop
lea
popf
rcll
cld
adc
dec
dec
in
in
pop
xchg
or
shlb
leave
mov
fisttpl
pushf
andb
pop
adc
jmp
jmp
mov
sub
push
ja
sub
mulb
xorl
enter
pop
adc
lret
xchg
orb
insb
pop
icebp
dec
push
push
jae
xchg
dec
in
sbb
jno
mov
jae
xor
cld
mov
aam
xor
cmp
inc
shrl
inc
mov
adc
mov
ds
or
in
and
xor
or
pop
add
daa
jno
cs
std
push
inc
daa
repnz
xor
jae
xor
xor
dec
push
or
adc
or
push
jmp
subb
leave
dec
xchg
xor
xchg
or
scas
cld
sub
adc
imul
sub
lods
lret
sbb
or
jp
int3
xchg
stos
sbb
inc
insb
dec
jo
dec
rorl
cltd
outsb
ficoml
adc
rclb
stc
push
adc
mov
sbb
push
adc
xchg
fistps
sbb
loopne
or
or
and
xchg
dec
mov
dec
adc
inc
or
dec
cmpsb
outsb
addr16
sub
call
push
lret
test
mov
out
dec
int3
or
mov
imul
or
int3
pop
xchg
or
sbb
pop
sub
js
inc
sub
or
movsl
pop
daa
pop
imul
add
cmp
jge
lock
or
xlat
adc
into
or
cmp
sub
or
push
and
iret
mov
lret
or
test
or
js
mov
movsl
iret
pop
imul
jns
push
dec
jo
enter
dec
enter
rcrb
mov
or
rclb
or
mov
lret
push
icebp
outsb
dec
mov
mov
adc
or
leave
add
dec
loop
and
or
dec
stos
inc
inc
jb
or
inc
sbb
mov
or
adc
sub
hlt
or
and
jnp
adc
dec
movsl
dec
leave
repnz
mov
cltd
lret
or
cmp
adc
inc
push
aaa
mov
aaa
sub
xchg
or
sub
and
or
iret
add
pop
and
add
or
dec
xchg
cltd
dec
mov
loopne
xchg
dec
pop
pop
or
cmp
add
mov
mov
in
sbb
repnz
pop
inc
incl
fnstcw
mov
xor
xor
mov
das
xchg
and
insl
sbb
in
arpl
test
and
in
mov
test
pushl
daa
stos
or
sub
arpl
xor
adc
repz
popa
adc
jl
das
add
or
adc
out
push
int3
pop
std
xor
or
cs
mov
movsl
dec
pop
ss
push
pop
adc
insl
push
test
dec
or
loop
xor
dec
mov
or
jge
int3
jp
and
movsl
xor
loop
mov
push
dec
push
dec
dec
mov
sbb
jnp
mov
lcall
sub
jle
out
and
sbb
add
or
sbb
push
aam
sbb
adc
dec
psllw
inc
dec
adc
dec
mov
pop
sbb
and
dec
adc
or
add
cmp
psrad
dec
andl
test
es
cmp
or
cmp
lret
add
xor
cmovnp
jno
dec
das
iret
push
orl
or
xor
dec
mov
mov
pop
loop
push
adc
iret
notb
jmp
xchg
shlb
popf
inc
or
mov
sarb
xchg
push
dec
pop
or
int3
push
shll
or
push
or
int
dec
mov
adc
pop
dec
xor
or
or
out
dec
pop
xchg
arpl
jmp
xchg
mov
hlt
aaa
insb
jns
mov
outsb
adcb
inc
mov
jb
push
or
mov
int
mov
xchg
nop
sbb
lods
cmp
or
cmp
insb
adc
dec
flds
pop
dec
or
mov
sbb
pusha
fisubl
or
arpl
aad
sub
arpl
pop
sbb
dec
jae
add
adc
sbb
jae
inc
rorb
dec
inc
out
push
mov
pusha
sbb
push
xor
ret
out
lret
or
inc
iret
dec
enter
cmp
xchg
cmp
fs
cmp
pop
mov
xor
or
fisttps
js
dec
xchg
movsb
sbb
or
or
leave
or
jne
sbb
or
call
push
and
or
stc
js
or
lea
push
int3
xlat
pop
or
add
or
lea
push
or
dec
sub
sub
mov
dec
sub
dec
sub
inc
sub
mov
xor
xor
int
fmull
pop
lcall
and
dec
xchg
xor
mov
iret
lea
or
out
int3
adc
pop
das
or
or
nop
or
jge
or
dec
fimull
sbb
sti
gs
sbb
mov
insb
adc
or
repnz
or
fwait
cs
xor
aaa
popf
pop
sbb
cwtl
std
and
rclb
inc
xchg
adc
sub
sub
mov
dec
ret
nop
and
ljmp
or
dec
mov
mov
int3
mov
or
lods
dec
dec
mov
popf
mov
pop
mov
int
and
or
jle,pt
sarb
mov
iret
int3
push
add
dec
jge
dec
xor
fwait
daa
mov
xor
lods
and
adcl
or
or
in
sub
sbb
or
or
jge
rorl
jmp
cli
add
cmp
xchg
push
or
sub
lcall
or
dec
jp
psllw
mov
pop
xor
sbb
dec
in
pop
mov
sbb
jo
or
sbbl
adc
pop
dec
or
mov
inc
xchg
xchg
jb
stc
xor
sti
arpl
fldt
sub
repnz
jp
adc
jae
pop
cmp
xchg
test
or
aam
in
and
jo
mov
call
push
add
sarb
or
sbb
xor
les
xchg
pop
mov
mulb
sub
jbe
or
push
and
jns
ficompl
adc
adc
adc
stos
adc
cmp
dec
mov
jmp
and
fistl
or
std
and
or
dec
push
pop
xchg
and
or
repz
cmp
push
pop
push
pop
xchg
mov
cmp
dec
repnz
xor
sbb
scas
ds
xchg
ret
sbb
push
lods
inc
and
dec
xchg
movsl
daa
and
jb
inc
sub
cmpsl
das
mov
loopne
mov
jno
pop
and
dec
push
or
lcall
arpl
inc
daa
rorl
jmp
ds
jle
or
pop
daa
xor
call
sub
mov
pop
cs
sub
or
xor
pop
mov
ja
cld
dec
or
sub
sub
aas
xchg
push
movsl
mov
dec
ret
and
dec
ss
outsb
push
xlat
xchg
add
or
cmp
add
adc
dec
pop
xchg
and
or
push
and
or
mov
push
adc
pusha
pushw
jae
inc
pushl
int3
ret
sbb
adc
in
rcrl
iret
out
push
dec
sbb
lret
xchg
adc
into
push
ja
add
push
lret
dec
repnz
mov
enter
mov
xchg
pop
or
cs
dec
out
inc
adc
je
or
jno
sbb
push
dec
pop
and
dec
sbb
dec
jl
stc
pop
add
or
push
add
bound
mov
and
jbe
lea
xlat
lret
dec
mov
jmp
or
jle
ss
sti
xchg
loop
iret
inc
lahf
add
and
xlat
sbb
imulb
xchg
insb
or
add
add
out
or
add
leave
mov
popf
push
bound
push
iret
push
leave
roll
sub
movsl
xchg
sub
cmp
inc
xor
inc
xor
movsb
adcl
push
push
clc
and
das
in
das
or
insb
ss
imul
jo
add
pop
xor
cmp
jmp
lret
movsl
push
out
add
or
adc
lret
mov
push
cmpb
imul
lret
in
pop
enter
or
lret
mov
push
sbb
aaa
js
mov
xor
adc
push
adc
dec
insl
cmp
dec
sbb
cltd
int3
rorb
nop
or
add
mov
push
or
cwtl
std
insl
add
add
inc
repz
pop
call
sbb
inc
pop
inc
dec
inc
add
pop
mull
sub
jnp
sub
dec
adc
lds
mov
xor
movsb
call
xor
arpl
dec
mov
lahf
or
jbe
xchg
jo
js
add
cmp
iret
or
inc
push
or
sub
xor
dec
sub
dec
imul
xor
sbb
mov
jle,pt
aam
or
sub
cmp
pop
or
add
std
push
in
or
cltd
int3
fwait
sub
adc
or
dec
add
xchg
or
dec
mov
leave
icebp
pop
testb
dec
enter
xchg
cltd
or
icebp
mov
in
lret
leave
jbe
add
leave
jle
dec
sbb
inc
or
cmp
sub
mov
push
fstps
sbb
in
pop
and
rorl
cmp
icebp
jbe
xchg
mov
xchg
cwtl
dec
sbb
lcall
sbb
outsb
ficoms
insb
loope
mov
outsb
in
movsl
sbb
insb
jmp
test
imul
sbb
lods
insb
outsb
mov
adc
sbb
outsb
icebp
fmull
arpl
dec
mov
push
lret
cmp
loope
mov
in
or
cmp
cmp
sbb
cltd
lret
pusha
dec
lret
stc
or
mov
jno
add
or
insb
iret
das
pop
or
bound
pop
push
or
push
push
push
mov
inc
in
adc
dec
adc
or
adc
lret
mov
sub
adc
adc
push
and
das
rorb
mov
leave
das
push
mov
or
add
adc
or
dec
sarb
mov
scas
testl
push
je
mov
adc
or
adc
or
mov
enter
loop
inc
xchg
es
lcall
xchg
or
ja
sbb
sbb
or
or
leave
inc
rcrb
jno
xlat
fisubrs
pop
aas
xor
frstor
jl
cmp
jno
cmp
xchg
or
leave
add
rorb
add
fbstp
jne
leave
pushf
mov
or
xchg
sbb
or
push
inc
and
lret
cmp
or
push
xchg
insl
or
or
fistl
cmp
xlat
loopne
or
pop
adc
push
fstpl
sbb
outsl
pop
cmp
inc
push
lret
cmp
fstl
add
xor
sub
dec
pop
jmp
test
iret
dec
jge
add
or
addr16
gs
cmp
sub
in
fs
add
mov
xchg
mov
cmc
lea
call
or
repnz
adc
push
sbb
or
outsb
inc
adc
or
add
sbb
cld
fwait
cmp
pop
fwait
inc
sbb
gs
mov
dec
sbb
jle
lock
push
inc
int3
and
push
lar
xor
and
push
iret
fistps
adc
mov
outsb
sahf
dec
xor
sub
cs
sahf
mov
stos
icebp
out
and
int3
ficomps
sbb
pop
adc
add
pop
sbb
repz
stc
dec
cmp
insb
mov
pop
dec
push
adc
xor
sub
es
xor
xchg
dec
fidivrl
cmp
mov
push
push
cmp
cmpb
mov
shr
or
push
push
xchg
addb
fisubrl
imul
adc
ss
xchg
cltd
sbb
cmp
push
inc
mov
dec
lods
pop
inc
sbb
or
xchg
xchg
fimull
dec
push
lcall
popa
add
mov
hlt
lds
test
xchg
jmp
sbb
sbb
xchg
dec
leave
jmp
repz
fadds
insb
sub
mov
xor
ja
cmp
pop
leave
mov
bound
popf
sbb
add
push
fs
cmc
gs
adc
pop
and
sbb
daa
fcompp
and
xchg
fldcw
mov
dec
inc
inc
pushw
and
fldenv
cmp
repnz
sbb
lea
xor
and
ficoml
mov
adc
adc
fbld
sbb
fiadds
xchg
and
add
lahf
jns
ja
cmp
pop
mov
sub
adc
insl
and
arpl
in
cmpsb
cmpsl
loop
popa
stc
sub
ret
sbb
sbb
lcall
pop
bound
insb
jecxz
out
cmpsl
lret
bound
push
jbe
pop
rclb
jbe
daa
fcoml
ficomps
mov
outsb
cs
ficomps
mov
out
cwtl
fwait
and
sbb
add
imul
push
fsubs
cmpsb
cmpsb
jl
push
xchg
lods
fs
and
jb
adc
ja
inc
and
mov
push
shlb
cmp
or
cmc
cltd
adc
jnp
sbb
inc
in
sub
test
sub
aaa
out
xor
sub
ret
movsl
outsb
scas
inc
repz
add
mov
pop
cmpsb
pop
pop
lea
sbb
pop
or
sbb
pop
in
and
adc
gs
mov
imul
adc
adc
dec
or
sahf
cld
inc
mov
fists
insb
pop
imul
hlt
jp
and
push
cmpl
popf
sub
pop
ja
fistpl
and
in
xor
sbb
mov
jae
pop
push
hlt
divb
xor
lahf
mov
pop
insb
mov
imul
sbb
xchg
int3
loop
cmpsl
mov
out
sbb
adc
in
inc
arpl
dec
xor
xchg
cmpsl
daa
and
xor
xchg
adc
and
mov
inc
ficoml
into
xor
ficoml
sbb
lods
pop
sarl
push
cmp
and
sub
push
movsl
loop
pop
in
cmp
pop
in
xor
hlt
add
aas
adc
frstor
dec
xchg
cmp
bound
sbb
sbb
bound
movsb
pop
sub
xchg
jmp
xor
push
push
mov
adc
rol
mov
sbbb
inc
in
jmp
lock
into
sub
sub
loope
fcoms
gs
xor
mov
mov
fcoml
mov
xor
dec
cld
movsb
das
adc
or
dec
xor
es
pop
ror
or
rorl
mov
mov
insb
or
or
outsl
mov
sti
stos
shrl
push
cmovp
cmp
je
adc
mov
out
mov
mov
pop
mov
outsl
sbb
es
dec
add
fnop
sub
ss
bound
pop
cmp
push
jmp
bound
dec
ss
xor
adc
adc
xchg
mov
iret
sbb
das
or
cmp
orl
sbb
or
mov
fimuls
setb
mov
sbb
push
lods
ficoms
rcrb
fidivrl
adc
jo
jecxz
and
sub
and
adc
insb
adc
sbb
fisubrs
push
stos
adc
mov
sbb
das
mov
mov
xchg
negl
and
mov
adc
dec
scas
or
bound
imul
or
insb
sub
sbb
outsb
sub
insb
push
mov
sbb
outsb
pop
xchg
push
sbb
adc
adc
outsb
setb
sbb
push
mov
push
push
inc
dec
inc
outsb
dec
ds
cmp
cmp
insb
xor
das
outsb
sub
push
push
push
xor
push
and
push
mov
or
jb
push
push
push
inc
or
sbb
bound
rcrb
sub
mov
xchg
or
repz
and
mov
std
mov
jl
jp
addb
nop
ds
jb
push
pop
dec
dec
shlb
movsb
push
xchg
incb
roll
push
test
int3
mov
and
or
or
fisubrl
int
outsb
inc
scas
sbb
out
cmc
pop
ds
sub
lock
adc
sbb
push
push
sbb
sbb
fiaddl
mov
sbb
sbb
sub
sbb
jns
or
push
dec
inc
rorl
shrb
xchg
adc
sbb
insb
sbb
test
adc
sbb
or
push
js
popf
repz
imul
jmp
testl
data16
sbb
inc
cmp
lret
xchg
fimull
outsl
dec
fxch
xchg
dec
lret
es
std
pop
bound
pop
ds
rorb
cmp
push
mov
int
jl
lcall
or
push
or
aaa
adc
sahf
outsb
add
or
adc
adc
xchg
push
adc
nop
sbb
add
outsb
push
xchg
inc
sbb
insb
xchg
mov
adc
xchg
cmp
or
cmp
dec
sbb
outsb
adc
insb
dec
mov
adc
sbb
outsb
xchg
sub
shrl
insb
xchg
mov
adc
sbb
outsb
adc
mov
vmulpd
sub
jp
sbb
cmp
and
repz
dec
imul
pop
mov
cs
adc
or
lods
jae
je
sbb
cmp
mov
icebp
sbb
outsb
mov
sbb
rcll
sbb
outsb
mov
cltd
mov
outsb
insl
xchg
scas
sbb
xchg
sbb
outsb
xchg
xchg
lahf
sbb
adc
sbb
outsb
rclb
xchg
cwtl
insb
mov
sbb
outsb
mov
mov
mov
lret
push
adc
xchg
movsl
sbb
jp
mov
mov
test
testb
call
push
mov
cltd
insl
dec
inc
xor
jb
mov
mov
pop
mov
dec
mov
sbb
push
pop
sub
xchg
push
push
and
ds
stos
scas
mov
adc
dec
arpl
lret
adc
movsb
pop
or
mov
inc
mov
pop
and
jae
dec
cmp
adc
cld
pop
jae
xor
fisubrl
jecxz
adc
movsl
popa
dec
outsl
mov
jmp
es
mov
lods
push
ficomps
and
sbb
inc
in
lea
sub
pop
pop
push
mov
jmp
pop
dec
cwtl
xchg
pusha
sbb
scas
insb
aaa
mov
adc
xchg
pop
sub
adc
int3
sbb
stc
adc
sbb
push
je
outsb
or
adc
jmp
push
xor
cmp
mov
xor
int
push
adc
mov
sub
adc
mov
stc
jl
lods
pop
adc
cmp
popf
or
push
mov
es
xor
jnp
cmp
popa
dec
push
dec
adcl
push
scas
or
outsl
fimull
sub
sbb
mov
ret
stos
sub
sbb
mov
leave
pop
shrl
mov
inc
sub
fistpll
imul
pop
xlat
pop
insl
lret
es
sub
lcall
enter
mov
fidivl
cmpsl
add
sub
sbb
push
shll
cmp
aas
lret
xor
or
cmp
mov
xor
repnz
dec
add
or
sub
lcall
push
cmp
adcl
pop
jnp
ljmp
mov
jb
adc
pop
jae
adc
mov
insb
dec
add
out
outsl
or
xlat
stc
mov
cmp
subl
repz
mov
sbb
jge
cmp
fldenv
mov
or
mov
insl
iret
rep
mov
inc
cmp
adc
and
sti
jle
push
ds
shrb
pop
xor
sbb
cmc
dec
jns
stos
sub
or
pop
cmp
sar
mov
adc
sarl
sbb
iret
mov
ljmp
sbb
jge
shll
mov
jne
jbe
leave
dec
adc
mov
push
shll
test
or
jp
jbe
sub
mov
loope
add
mov
sbb
jae
inc
pop
ljmp
imul
sbbl
cmp
ljmp
cwtl
push
test
loop
ficoml
xor
jle
stos
fcomip
cmp
dec
add
fadds
and
jbe
int
stos
mov
sub
or
xchg
cwtl
int
adc
pop
mov
mov
sub
ret
dec
testl
sti
push
adc
push
xchg
pop
fstp
mov
mov
or
cmp
mov
mov
or
push
ljmp
mov
mov
das
imul
mov
inc
mov
adc
rorb
rorl
adc
outsl
sbb
fistps
inc
dec
ljmp
dec
insl
mov
pop
vmptrld
dec
stos
dec
jo
paddw
dec
out
lock
cmpxchg
daa
mulps
mov
push
js
orl
push
pop
out
jl
cmpsl
stos
aaa
sahf
vmptrld
dec
scas
dec
mov
paddw
dec
out
xchg
repnz
pop
mov
ljmp
xchg
cmp
pop
cs
test
jno
lods
lcall
sub
lods
imul
sbb
or
es
lcall
cltd
push
push
fucom
inc
xor
push
popf
ljmp
arpl
stos
jnp
data16
sbb
fpatan
sbb
arpl
pop
mov
xor
pop
into
dec
jg
mov
jo
push
dec
lcall
fs
fcmovnu
out
lret
stos
push
jmp
sub
cmp
nop
popa
insb
lock
jns
lahf
mov
jp
push
sub
xchg
fcmovnbe
imul
js
lea
mov
lods
push
out
fisttps
pop
insb
xchg
and
xchg
push
movsb
jp
pop
sbb
in
fsubl
into
sbb
fcomp
ret
xchg
or
xor
and
xchg
lahf
push
jbe
and
mov
push
cwtl
loop
lea
mov
push
loop
mov
lret
in
fstpl
mov
push
movsl
fstpl
gs
mov
popf
xchg
clc
xchg
mov
mov
dec
aas
movsl
insb
cmpsb
out
jb
repnz
scas
fcomps
pop
repnz
and
pop
pushf
ljmp
movsb
scas
icebp
jecxz
dec
in
mov
pop
and
outsl
test
je
dec
movsl
mov
ficoml
pop
in
dec
cli
dec
dec
es
rcr
adc
mov
and
repnz
adc
sub
add
fcoml
mov
mov
sbb
popf
test
fstl
addr16
push
xchg
mov
pop
or
scas
sub
xchg
mov
sarb
inc
imul
fildll
out
mov
sub
lods
inc
sub
or
and
sti
outsl
fcmovnb
sbb
dec
dec
push
jle
push
ds
into
loope
out
adc
ja
lcall
arpl
roll
mov
int
cmp
sub
mov
xor
stc
cmp
and
loopne
out
fsubs
or
ret
arpl
cmp
pushf
add
cmpsb
add
inc
xchg
push
insb
and
pop
jo
popa
es
pop
out
cmp
scas
cmpsb
outsl
adc
aad
icebp
sbbb
test
mov
fcom
sbb
fidivl
call
push
cmpsb
xchg
mov
aaa
addr16
adc
arpl
xor
decl
ret
test
or
adc
or
and
mov
mov
insb
xchg
add
sbb
fs
jecxz
or
shll
mov
add
add
outsl
inc
add
sbb
mov
in
in
aad
inc
in
xor
mov
sbb
jl
cs
cwtl
mov
out
cmp
gs
mov
pop
je
in
rolb
jmp
and
movsb
std
xchg
mov
mov
mov
in
inc
add
je
ss
adc
cmpsl
iret
cmc
rcrl
cwtl
mov
and
mov
push
mov
pop
std
jp
icebp
repnz
movb
mov
movw
call
lods
and
rcrl
pop
pusha
sahf
and
scas
mov
mov
cltd
scas
cltd
mov
ds
data16
test
adc
flds
loope
or
adc
jmp
add
cs
je
add
mov
inc
lret
jle
in
stos
lds
aad
jo
daa
es
mov
and
out
lods
movsb
aam
movb
pushl
lea
ja
shr
rcr
push
sub
not
shld
cmp
cmp
sub
add
sub
mov
stc
mov
jmp
xchg
jg
rcrb
idivl
mov
loopne
jge
adc
xor
dec
aaa
pushf
or
push
or
cmp
cmp
out
lods
loope
inc
fcmovnb
ljmp
mov
lods
dec
dec
pop
lock
dec
sub
ljmp
or
xor
aaa
mov
stos
xor
and
push
mov
fstpl
adc
push
jmp
leave
test
pop
xor
test
xchg
filds
jmp
mov
add
sub
std
jmp
push
mov
mov
and
mov
mov
sbbl
add
dec
rcl
xor
daa
and
call
cmc
inc
mov
jno
pop
iretw
fs
outsb
in
test
sbb
push
dec
lea
sub
add
into
pushl
out
scas
ja
jb
push
cmp
stos
adc
pop
in
cwtl
lret
cmp
xchg
push
arpl
xor
xchg
jns
and
push
add
sbb
loope
ret
sub
xor
sbb
jno
dec
mov
pop
in
mov
sbb
or
sbb
cltd
xor
arpl
gs
fstl
sub
sub
xorb
push
mov
into
pop
sbb
ds
das
loope
sahf
mov
ds
lods
lret
loopne
inc
sub
xchg
mov
idivl
adc
add
pushf
and
xor
stc
dec
daa
and
xlat
push
mov
in
rcrb
sub
out
stc
in
idivl
add
in
jmp
repnz
and
inc
inc
pop
xchg
push
pop
mov
pop
ljmp
and
jmp
inc
sub
test
test
aad
aad
lcall
jecxz
push
adc
xlat
or
aaa
cwtl
sub
std
xor
mov
or
pop
dec
fldcw
add
jo
pop
adc
fwait
xor
xor
xor
lcall
mov
cmpsl
mov
sub
push
add
fldenv
fiadds
inc
pusha
cmc
pushf
call
movb
movsbw
pushf
mov
pusha
lea
movsbl
lea
call
out
pusha
mov
ret
shrb
mov
inc
xchg
and
std
ljmp
xchg
xchg
data16
add
sbb
xchg
mov
sbbl
pop
enter
lods
xor
xchg
movsl
gs
fisubrl
sub
mov
leave
cmp
jg
pushf
jne
push
in
fstl
ret
add
ds
sbb
jge
mov
lods
insb
mov
xor
pop
insl
insl
loop
fdivrl
add
xchg
cmp
adc
mov
add
je
sub
pushf
lea
je
pushf
pusha
rep
movw
mov
push
pushl
lea
jmp
call
mov
xchg
mov
sub
faddl
inc
loope
js
jp
and
stos
fildll
std
cld
insl
int3
mov
mov
test
push
jl
mov
push
push
push
sbbb
or
inc
arpl
xor
sbb
add
sbb
cmp
repz
and
js
ss
fs
push
jo
es
loope
lods
negl
adc
leave
js
xor
add
jb
xchg
cmp
gs
cmp
les
fistl
loopne
fildll
mov
mov
and
adc
call
xchg
sbb
hlt
xchg
sbb
fsubs
xlat
mov
or
jge
push
enter
jae
scas
jb
pop
push
mov
aas
jle
negb
cli
add
fwait
jae
fdivrs
and
sub
in
mov
mov
inc
push
mov
data16
add
jg
xor
pop
fs
std
fidivl
pop
cld
sbb
jmp
test
jnp
fnstcw
scas
pop
out
je
jbe
xlat
inc
xchg
mov
add
or
int
insb
repz
lahf
push
lds
cld
and
call
xchg
mov
pop
cmp
mov
daa
mov
cwtl
xchg
xchg
and
pop
mov
xchg
out
fldt
cmc
xchg
jns
pop
mov
aad
adcb
fmull
add
cmp
sbb
jne
add
jbe
fwait
jl
cmpl
div
call
jno
scas
out
outsl
movb
sarb
mov
mov
mov
jge
sub
stc
sbb
cmp
or
in
lahf
iret
call
nop
popa
das
clc
inc
and
mov
push
xchg
cmpsl
enter
xchg
test
pop
sar
pop
lret
lcall
push
lcall
negb
pop
jne
stos
repnz
ljmp
pop
jnp
mov
ret
adc
mov
sbbl
aas
mov
into
loope
cs
add
sbb
mov
popl
cmc
clc
mov
pushf
cmp
pushf
push
lea
ja
test
test
inc
ror
sub
shl
setb
shr
movzbw
add
lea
push
mov
ror
test
stc
mov
jmp
and
in
sub
ljmp
imul
insb
insb
stos
insb
xlat
sbb
xchg
mov
jns
sub
out
sub
stc
push
pop
rcl
push
xchg
jecxz
mov
inc
push
mov
gs
outsb
pop
and
lds
lods
or
jno
pop
pop
mov
xchg
pusha
repz
out
cmp
test
daa
repnz
sbb
cld
mov
stc
ljmp
mov
xchg
cmp
vpaddb
ja
sbb
or
xor
mov
and
in
mov
lods
xchg
add
xchg
or
stos
ret
sub
pushl
push
pushl
rep
push
call
cmp
pop
dec
mov
std
adcl
mov
and
mov
and
in
mov
mov
push
gs
push
shr
ds
je
sahf
sub
dec
mov
stos
xchg
lret
add
dec
fwait
inc
fwait
inc
cmp
sbb
ret
adc
sub
mov
ret
inc
jle
jg
push
out
ret
inc
and
sub
inc
sbb
test
bound
add
cmpb
je
and
jne
or
mov
mov
rcrl
loopne
fsubs
adcb
out
push
jne
test
popa
mov
push
out
push
sub
clc
ret
fnop
or
andb
das
xor
int3
mov
ret
mov
rorl
sbb
in
mov
les
stos
cmc
inc
sbb
and
fistps
sahf
enter
dec
push
mov
jno
ja
repnz
in
push
lret
fs
jmp
adc
call
lods
je
add
in
pop
push
idivl
imul
loope
push
pop
scas
ja
xlat
inc
fs
ljmp
fsincos
sarb
dec
cwtl
lret
sbb
cmp
gs
adc
inc
call
jns
mov
cmp
adc
mov
sub
pop
outsl
dec
test
int
xor
mov
jg
jecxz
pop
add
jle
dec
xchg
pop
xchg
jl
pop
jno
mov
das
add
mov
or
scas
mov
pushf
rep
lea
jns
movzbl
pop
push
pushf
movb
lea
jmp
mov
jae
sbb
and
out
mov
push
pop
cmpsl
inc
xchg
clc
cltd
adc
popl
aas
je
adc
out
or
data16
sahf
or
lret
out
adc
sbb
aas
sbb
push
clc
mov
cmp
and
xchg
lret
mov
mov
xor
mov
jne
sbb
jmp
inc
xor
push
pop
sbb
or
out
das
cltd
cwtl
testl
daa
ja
scas
push
mov
movsl
pushl
in
jp
daa
sub
das
mov
nop
divps
adc
pop
mov
aam
in
ja
jl
mov
enter
inc
sub
lods
out
pop
push
pushf
cltd
testb
in
jle
outsl
xchg
out
jae
inc
je
dec
xchg
fcmove
mov
cltd
loop
xchg
jge
std
pop
pop
push
je
out
xor
lcall
mov
out
movsb
je
movsl
out
dec
sub
jbe
add
sub
mov
cli
adc
xor
cli
hlt
mov
mov
enter
je
push
jmp
cmp
jmp
or
pushf
jno
dec
lock
rcll
inc
fsubl
int3
pop
inc
sub
fcompl
sub
and
notb
shrb
mov
pushf
mov
add
and
repnz
hlt
les
movsb
in
cmp
or
addl
mov
scas
pop
test
lahf
fsubrs
out
es
xchg
sub
xor
jecxz
adc
xor
aam
xor
test
inc
mov
lds
jnp
imul
gs
outsb
jmp
pop
mov
arpl
adc
cmp
in
lea
adcl
lret
push
jns
jg
enter
idivb
xchg
cli
and
aad
sbb
out
jmp
xor
or
cmpsb
add
add
pusha
sbb
sbb
xchg
int3
lods
loop
jne,pn
out
sub
push
jmpw
add
outsl
arpl
jae
xor
js
add
es
sbb
sub
scas
into
loopne
roll
popa
enter
arpl
loopne
int
fisttps
into
cli
rcrl
lock
data16
inc
fmuls
bound
lods
push
push
int3
add
stos
mov
cmovae
inc
mov
jp
dec
or
and
in
push
imul
push
pop
popa
sub
push
cmp
lea
xchg
pop
adc
pop
adc
mov
jecxz
push
dec
mov
inc
push
sbbb
mov
add
lahf
ja
cld
xchg
mov
jno
cmovle
adc
fistpll
mov
jecxz
jnp
jg
sub
lock
cmp
into
das
mov
and
dec
mov
pop
fdivl
pop
pop
adc
sti
fildll
sbb
and
loope
inc
jmp
pop
push
mov
movsl
jbe
cld
pop
cmpsl
dec
xchg
and
xchg
xchg
test
ret
fs
stos
inc
aam
add
and
sbb
fucom
insl
addr16
fcomps
inc
mov
mov
les
inc
mov
adc
inc
cmp
aaa
jo
xchg
xchg
imul
mov
and
inc
popa
repz
pop
sub
adc
lds
bound
clc
and
jno
mov
add
push
hlt
mov
xchg
add
cmp
add
mov
les
ja
mov
divb
ljmp
pop
filds
sahf
mov
cmp
mov
cmp
pushf
add
movb
mov
stc
test
call
mov
cmc
jp
dec
xor
lds
mov
sbb
mov
pop
xor
xorb
dec
rclb
mov
gs
mov
cltd
ljmp
dec
sbb
sarb
xchg
xchg
pop
mov
subb
scas
dec
iret
stc
fiadds
and
shl
mov
xchg
jns,pt
jae
into
insl
addr16
push
mov
gs
lods
andl
cwtl
pop
insb
sahf
in
fucom
pop
cmp
insl
test
sub
mov
sar
lea
ds
mov
rorb
outsl
pop
aad
fucomi
push
movsb
xchg
jle
xchg
jecxz
dec
pop
fadds
lock
push
sub
test
stos
fdivrl
insb
int3
mov
and
insb
cmp
xchg
fiaddl
lods
jb
pop
call
and
iret
inc
stos
xchg
mov
push
out
les
jnp
loopne
int
les
orb
mov
cs
sbbl
mov
cld
faddl
sbb
mov
out
sbb
leave
mov
mov
or
mov
mov
int3
mov
fisttpl
mov
or
sub
insl
fstl
push
push
sub
lock
mov
xor
inc
popa
sbb
int3
xchg
mov
insl
mov
jbe
sub
js
push
inc
mov
pop
shll
imul
mov
push
loope
pop
jno
shl
xor
and
cltd
xchg
mov
adc
lea
decl
je
mov
push
hlt
jbe
stos
test
jae
pushf
mov
js
push
addr16
out
mov
icebp
sbb
fsubrs
stos
test
jl
pop
and
fcoml
cmc
gs
in
test
les
xor
pop
dec
dec
scas
mov
mov
call
dec
mov
test
ljmp
bswap
scas
xchg
jno
mov
hlt
aam
and
shufps
jne
imul
or
jmp
sbb
adc
pop
jb
or
cmp
or
or
ja
out
jb
aad
sub
aam
jmp
jl
hlt
adc
jle
adc
pop
iret
jle
and
jl
pop
xchg
loop
fldenv
cmp
mov
les
hlt
cli
mov
sub
repz
inc
cmc
mov
lds
data16
mov
cmpb
push
std
mull
lods
adc
fsubrs
loope
outsb
adc
lcall
ret
mov
mov
int
push
jecxz
add
pop
mov
cwtl
div
push
stc
jbe
cmp
inc
and
pop
and
mov
in
xchg
push
sub
call
nop
mov
into
xchg
xlat
test
jo
gs
cmp
jmp
pop
dec
icebp
mov
jecxz
xchg
pop
loopne
push
inc
bound
xor
and
push
jmp
and
cld
cltd
sbb
jne
test
mov
jne
cli
movsl
jae
add
stos
lock
sub
mov
out
cmp
cli
inc
inc
lcall
xchg
sbb
xor
pop
lods
insb
sbb
daa
lods
pushf
mov
arpl
mov
sbb
ret
rcll
roll
das
mov
xchg
test
mov
mov
inc
addr16
iret
inc
cmp
cmp
xchg
and
adc
mov
ja
sub
jns
outsl
in
lods
pop
mov
fisubs
jo
mov
jecxz
int
ret
repz
cmc
lret
jmp
es
clc
or
sub
fsubrs
push
push
xchg
jl
fs
xor
sbb
or
cli
jp
test
and
jge
adc
iret
jg
push
jg
xchg
imul
cmp
mov
jns
lcall
jp
inc
jno
aad
out
or
inc
fs
sahf
fisubrs
out
divl
loopne
dec
int
fistps
aam
cli
inc
jl
push
popf
mov
test
repz
imul
inc
cmpl
jae
mov
repz
lods
jo
jge
loopne
and
mov
sbb
sahf
jae
pushf
jae
pop
in
jae
pushf
jecxz
lods
dec
mov
or
cltd
jbe
jle
inc
inc
sbb
xlat
into
and
pop
xor
sti
fbstp
mov
fwait
sbb
sub
fwait
sub
pop
adc
sub
sti
loop
int
fwait
xchg
xchg
dec
pop
jne
fisubrl
lds
and
jb
pop
adc
sub
push
pop
aaa
fbld
je
dec
movl
add
xchg
xchg
ret
fucom
sub
std
popf
loope
call
add
pusha
push
ds
sbb
pop
mov
inc
ffreep
xor
sub
add
decb
pop
nop
add
push
push
test
sub
sub
mov
cwtl
lods
sub
dec
cmp
pop
imul
lahf
or
mov
in
pop
mov
dec
pop
mov
notb
popf
pop
movsl
dec
cmpsl
pop
push
repz
xchg
mov
loop
loopne
or
sub
mov
sbb
roll
pop
jae
inc
and
bound
fisttpl
in
push
mov
cmp
xor
lahf
sub
lock
pop
mov
out
mov
lret
test
mov
or
lret
movsb
movsl
xchg
out
cmpsb
ror
stos
cltd
pop
aad
sti
call
mov
and
rdmsr
aaa
rcrb
int
js
push
out
or
pop
and
mov
mov
fwait
add
lret
xor
pop
xor
lods
jns
sbb
roll
imul
pushl
shr
sbb
idiv
bt
call
mov
push
pushf
lea
ja
pusha
pushl
lea
jb
call
push
lock
std
std
test
xchg
arpl
cmpsl
ret
jg
mov
rol
frstor
imul
xchg
pop
loop
xor
xchg
in
jge
sub
mov
dec
inc
int
cld
aam
push
roll
xlat
sub
test
push
popf
xchg
mov
fiadds
cmp
hlt
inc
cmpsb
mov
in
xchg
push
es
adc
imul
inc
mov
mov
pop
lods
sbb
mov
push
dec
les
mov
leave
cmp
mov
cld
dec
sub
js
fwait
loope
nopl
test
jmp
xchg
les
pushf
in
mov
push
and
dec
mov
adc
sub
outsb
sub
adc
xor
sbb
push
add
fs
ficompl
or
lods
fidivrs
mov
popf
rcr
out
jb
mov
jmp
xchg
std
fisubrs
jp
push
inc
sbb
fimull
loop
pop
mov
dec
xchg
jb
mov
in
bound
adc
mov
es
xchg
inc
fadd
sbb
into
xchg
push
pop
cld
mov
and
in
imul
fcoml
sbb
xchg
mov
xor
and
clc
mov
sbb
popa
xchg
out
push
inc
sahf
fimull
jae
jae
jp
test
push
inc
add
outsl
out
lahf
icebp
shll
ds
xor
mov
xchg
stos
cwtl
psraw
ror
clc
sub
call
jmp
pop
mov
shrd
pusha
and
mov
or
mov
cmp
test
rcl
xor
lea
call
pusha
call
jle
stos
sbb
fmuls
and
pop
pop
lret
lret
std
shrl
int
imul
and
mov
lods
adc
xor
mov
popa
mov
lods
sub
mov
stos
xlat
lea
repnz
xchg
pop
mov
test
jmp
dec
mov
aam
lods
mov
scas
push
invd
popa
adc
sbb
test
leave
out
aaa
cmpsl
addr16
rolb
subb
cmpsb
daa
in
movsl
fwait
imul
jle
xor
shll
add
and
push
mov
pop
mov
pop
sbb
inc
pushf
lods
mov
mov
jb
cld
aam
addl
repnz
movsl
pushf
ljmp
xsaveopt
scas
scas
dec
pop
cmpb
je
push
and
js
jmp
cmp
pushl
popl
call
pushl
lea
jae
push
cmp
pushf
mov
jmp
leave
inc
dec
stos
sbb
ret
push
add
mov
mov
inc
or
mov
js
out
lds
dec
roll
inc
sbbb
push
xor
into
mov
daa
jne
sarl
rcrb
fcmove
xchg
mov
ss
addr16
hlt
fwait
sbb
or
adc
pusha
jg
lods
or
les
mov
movsl
fidivrl
dec
aaa
ss
xchg
test
sub
faddp
jp
das
push
xchg
in
std
or
or
movsb
fwait
jl
mov
mov
fsubl
fs
call
test
sub
pushf
lea
jne
push
push
push
lea
call
push
lea
jmp
sub
popf
test
mov
nop
iret
outsb
iret
roll
orb
stc
mov
fwait
cwtl
cwtl
or
aas
inc
scas
outsb
daa
ret
scas
sub
xchg
push
in
push
lock
ja
mov
sbb
mull
inc
minps
stos
jne
inc
pushf
sub
das
les
cltd
loop
xchg
mov
push
xchg
xlat
ss
push
cmpsb
leave
xchg
jmp
sub
movsb
hlt
inc
mov
and
jb
dec
adc
sbb
in
arpl
xchg
hlt
xchg
adcb
lods
mov
das
jbe
out
sahf
loopne
sub
xor
push
mov
pop
mov
adc
sbb
int3
cld
scas
je
adc
mov
xchg
cld
mov
divl
sub
hlt
pop
fldenv
ss
stos
push
ret
inc
cmp
in
mov
fnsave
adc
out
jmp
jge
fs
aad
pop
inc
test
flds
enter
push
lcall
inc
icebp
add
add
xchg
push
iret
push
pop
fistpll
subl
xchg
add
mov
hlt
pop
adc
ret
xchg
fwait
inc
movsb
in
les
fdivs
sub
adc
push
es
int
push
enter
and
dec
xor
dec
nop
lock
shrl
sahf
xor
cmp
and
push
push
dec
adc
adc
lcall
jns
xor
cmpsb
es
cmpsl
mov
cmp
int3
lahf
filds
sbb
push
push
test
cmp
add
cmc
test
pushf
lea
jne
pusha
pusha
push
pushf
mov
call
cld
mov
and
add
cmc
dec
sbb
in
scas
sub
rolb
mov
fld
sub
jae
loopne
mov
mov
jnp
imul
push
fwait
leave
js
sti
or
sub
dec
xchg
inc
xor
jmp
fsubrs
cmp
sbb
xor
add
cmp
dec
sub
xchg
jo
in
inc
mov
fcoml
cli
fisubs
sbb
fcom
mov
cmp
out
jmp
lods
mov
sbb
xchg
push
inc
pop
pop
fldcw
push
out
inc
adc
addr16
pop
xor
fwait
and
repz
mov
nop
adc
inc
cltd
jno
std
and
mov
pop
mov
out
mov
nop
imul
sub
sbb
cli
mov
xlat
ja
push
mov
ss
sub
into
add
or
jmp
cmc
mov
je
push
popfw
movb
inc
jmp
orl
dec
mov
mov
loop
inc
dec
mov
cmp
or
out
lods
test
cmp
out
pop
mov
push
pop
iret
dec
loope
add
nop
mov
mov
mov
jo
jae
cmp
je
stc
mov
mov
xchg
fistpl
orb
ja
sbb
inc
inc
testl
paddq
call
enter
xchg
imul
or
ljmp
mov
call
and
psubw
mov
call
mov
mov
in
sub
cli
ljmp
std
cmp
xor
fmulp
mov
dec
mov
fistpl
xor
fdivrp
sbb
inc
mov
jl
mov
std
xchg
cmpsl
pop
mov
mov
or
fildl
in
inc
out
mov
rol
stc
neg
push
jmp
sub
fisubl
mov
fnstenv
jp
xor
cpuid
rcl
into
cld
incb
push
and
pop
mov
sti
push
test
dec
jnp
imul
dec
lea
fldt
les
push
test
mov
push
mov
stos
divb
mov
add
fcmovu
mov
push
pop
mov
sti
fs
or
imul
pop
cmpsb
call
cs
mov
bound
call
add
xor
xlat
jno
in
xor
jnp
out
mov
push
arpl
cwtl
xchg
test
cmp
push
adc
aaa
adc
out
bound
xlat
adc
mov
inc
fsubr
mov
xor
mov
insl
stos
in
fisubs
mov
lahf
pusha
ljmp
scas
and
add
xchg
or
lods
stos
stos
hlt
add
int3
daa
sub
sar
loopne
add
icebp
cmp
in
aas
testl
push
xchg
mov
and
inc
outsb
mov
adc
shlb
fimull
in
mov
or
jo
cmovno
push
add
insl
mov
ja
dec
push
jne
sbb
xor
xchg
mov
out
divl
xchg
mov
sbb
mov
jns
jge
push
dec
inc
mov
das
sti
mov
adc
jb
lods
mov
sbb
icebp
push
inc
sbb
sbb
push
mov
mov
pop
cmp
imul
into
xor
add
sbb
mov
or
mov
pop
js
pop
clc
or
scas
mov
sti
adc
inc
inc
add
push
das
int
sub
cmp
xor
mov
mov
cs
jge
jg
cmp
dec
fidivl
ljmp
inc
dec
imul
pop
mov
adc
mov
add
out
dec
add
mov
inc
push
scas
aaa
pop
dec
imul
shlb
jg
rorl
lret
mov
push
and
jnp
les
push
jne
cvtdq2ps
or
mov
push
popa
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
clc
inc
add
mov
ljmp
es
mov
push
push
and
xor
icebp
mov
or
das
inc
lcall
lret
fistpl
mov
xchg
lret
inc
mov
test
gs
or
call
out
push
test
inc
test
mov
scas
sbb
dec
orb
mov
jecxz
add
sub
push
add
jne
mov
cwtl
jl
xchg
ja
sub
pop
loop
mov
xor
bound
jbe
push
add
sarl
stos
mov
pop
mov
ss
mov
xchg
xorb
aas
mov
xor
in
pop
lds
mov
stos
dec
aam
fs
mov
les
cmp
dec
scas
mov
add
jmp
adc
dec
fsubl
cmp
mov
lahf
scas
pop
cmp
add
rorb
mov
in
jo
xlat
push
add
in
fs
in
cli
fnsave
jnp
xor
inc
call
xchg
and
jno
jne
jp
cmc
test
stc
dec
jae
mov
mov
mov
mov
or
mov
xchg
movsb
dec
jmp
lods
fadd
icebp
into
adc
das
jno
add
sarl
rolb
pusha
inc
pushl
inc
setl
pushl
inc
rcr
sbb
xchg
xchg
and
add
mov
dec
mov
test
stc
jmp
jae
ret
mov
sbb
or
or
fcoms
xchg
and
sbb
aam
add
xchg
sbb
pop
add
mov
icebp
dec
fsubrs
adc
dec
push
pop
shlb
repz
fisubs
push
das
aam
mov
loopne
sub
mov
sbb
push
and
add
sbb
mov
dec
mov
std
dec
jecxz
pop
aam
mov
rcr
xor
inc
xor
in
jecxz
cld
fsubl
push
sti
dec
rolb
cmp
jmp
fdecstp
fmuls
mov
idiv
jmp
sbbb
sbb
enter
sbb
xor
cmp
movsb
outsb
adc
daa
enter
std
dec
loope
add
or
fisubs
pop
xchg
sti
mov
or
pop
push
fidivs
in
xchg
cmp
xlat
dec
xor
mov
cli
mov
jge
inc
mov
sub
pop
mov
adc
pop
cld
dec
fisubl
and
jg
fimull
mov
pop
sub
xchg
sub
cltd
add
std
xchg
fdivs
or
mov
mov
in
dec
adc
push
mov
rcrb
testl
or
movsl
push
into
mov
test
mov
cmpsl
jge
lea
cmp
out
mov
scas
das
test
fs
inc
ret
das
cli
test
addr16
and
mov
out
pop
fmuls
js
jbe
je
data16
imul
jb
mov
xor
aas
push
mov
jle
lret
std
in
ret
and
popf
andb
je
addr16
mov
lea
ja
push
movb
imul
pushf
test
add
pusha
lea
jmp
rol
cmc
rcl
setb
bt
not
clc
jmp
pushf
pusha
stc
neg
push
call
cmpsl
cmp
lahf
sbb
cmp
stos
lret
aam
inc
test
mov
pop
sti
dec
ud1
jne
xchg
pop
fcompl
adc
mov
divb
int
gs
inc
push
and
cmp
jle
iret
pusha
adc
add
prefetchwt1
loope
fmuls
jo
call
fwait
lahf
sbb
or
scas
popl
sarb
outsl
rorb
idivb
popa
push
inc
xchg
fisttpll
mov
xor
stc
or
adc
ret
add
daa
add
icebp
loope
enter
xor
jecxz
scas
jecxz
add
addr16
cwtl
out
push
clc
fmull
mov
cli
add
mov
inc
lret
xchg
sbb
ffree
adc
pushf
mov
mov
dec
cmp
mov
lcall
imul
sub
popf
in
dec
loop
sbbb
cmpl
hlt
mov
inc
dec
dec
paddq
movsb
fwait
cmpsl
imul
imul
xor
pop
mov
stos
icebp
sbb
sbb
sbb
jne
jbe
push
ret
pop
dec
cmp
ret
lock
jmp
inc
popa
outsb
lock
scas
xchg
daa
jl
sub
or
jmp
mov
sub
cwtl
test
or
out
adc
sbb
jbe
and
xchg
adc
popa
fstpl
jle
xor
outsb
pop
jle
xor
cltd
dec
ss
outsb
insb
in
rcll
xor
rcrb
add
mov
scas
sub
mov
inc
inc
jbe
loopne
imul
mov
repz
mov
xchg
xor
jno
mov
cmpsl
and
mov
pushf
pop
push
jp
pop
xchg
fldcw
mov
daa
push
mov
or
sbb
loope
mov
push
dec
dec
dec
dec
inc
push
cs
insb
add
les
sbb
xchg
jmp
sahf
aas
mov
cld
inc
inc
mull
mov
movsl
adc
or
or
jb
xor
lods
mov
icebp
imul
in
xchg
dec
mov
sahf
xchg
aam
out
inc
mov
cmp
popa
mov
pop
orl
jmp
mov
push
aaa
inc
rcr
adc
aam
cmp
ljmp
inc
ss
fidivrs
dec
inc
test
daa
sub
call
sahf
inc
cmpsb
pop
repz
imul
das
popa
mov
push
sub
cmpsb
sbb
in
sbb
jmp
out
push
xor
push
gs
pop
xor
adc
mov
arpl
add
pusha
fs
jbe
and
movsb
fadds
leave
and
mov
sbb
outsl
sti
sub
paddq
fcompl
orb
cli
neg
push
imul
std
sbb
pop
sbb
lcall
daa
out
xor
test
sub
dec
fdivr
mov
lret
aas
cltd
jg
add
xchg
ljmp
inc
cmp
leavew
add
out
fildl
insl
push
pop
xor
mov
sub
jnp
dec
inc
and
test
repnz
fistpl
out
mov
inc
lcall
pusha
aad
clc
mov
push
ss
push
adc
xor
or
dec
dec
rolb
sbb
out
push
jae
test
lret
push
xor
xor
cmp
rolb
punpckhwd
mov
mov
test
jg
lea
outsl
sahf
cwtl
fsubrs
push
sub
sti
and
pop
and
imul
les
push
leave
xchg
imull
cmp
stc
add
sbb
flds
mov
jge
xchg
cmpsl
pop
push
cmpsb
adc
sarl
mov
mov
mov
mov
in
rcrl
icebp
xchg
fstps
pop
xchg
stos
mov
or
adc
shlb
fdecstp
push
stc
es
aaa
xchg
dec
jle
mov
jo
and
cmp
pop
mov
xor
pop
std
add
in
jnp
mov
in
pop
xor
ds
shl
xchg
scas
divl
in
cli
ss
jp
push
cwtl
outsl
stos
adc
push
ret
mov
inc
jp
mov
lds
mov
mov
sbb
jg
push
mov
cmpsb
xchg
xlat
sarl
xor
testb
lock
jecxz
mov
into
outsb
push
push
daa
xchg
push
test
daa
lret
push
xchg
hlt
and
cmpb
in
fisttps
outsl
push
scas
adc
adcb
ss
lods
pushf
popa
rcr
repz
mov
mov
out
push
enter
sbb
add
pop
hlt
xchg
xchg
dec
cmc
cmpsl
out
bound
dec
in
js
mov
or
shrl
repz
ret
dec
push
xor
add
test
mov
arpl
in
daa
outsl
sub
jb
mov
add
or
loopne
ss
movsl
push
xlat
ret
mov
hlt
mov
adc
dec
mov
push
fstl
fwait
cmp
aad
push
cltd
sbb
lret
call
test
ja
lock
xchg
das
iret
sub
xor
iret
mov
cmpsb
xor
adc
or
int3
loopne
mov
int
sbb
xor
xchg
fs
jb
rcl
sbb
jmp
or
sbb
sbb
mov
inc
push
jle
xchg
adc
stos
add
cmp
movsl
std
dec
jno
jg
fnstcw
fists
fisubrs
icebp
add
aad
or
push
sbb
filds
addl
pop
repnz
add
xchg
negb
test
sub
push
push
scas
cmpsb
sub
iret
aad
inc
fmull
dec
pushf
and
testl
xor
rcr
dec
mov
stc
push
jle
push
mov
in
inc
xchg
jno
mov
cmp
imul
or
jle
xchg
and
movsl
mov
rcrl
fwait
inc
mov
add
insl
stos
add
test
mov
fdivrs
ja
ja
repnz
xor
das
ret
push
mov
xchg
cwtl
sbb
pop
test
or
aam
pop
in
pushf
shrl
xorb
orl
mov
add
dec
fldenv
pop
xor
je
inc
mov
scas
cmp
divb
or
or
pushf
rolb
jb
repz
pushf
je
fmulp
test
jl
loop
sbb
push
inc
adc
and
add
xor
out
cli
in
loopne
mov
dec
sub
icebp
les
shll
dec
adc
popa
movsb
es
mov
jmp
cmp
mov
inc
ds
sbb
mov
pop
loopne
ljmp
pop
adcb
into
adc
cli
aas
adc
jl
push
loopne
and
fcomp
adc
gs
mov
sub
add
adc
vandnpd
aas
std
es
fistps
mov
add
into
in
fnstsw
lds
sub
js
fcom
jmp
dec
push
outsl
stos
out
mov
mov
sbb
loope
or
mov
fisubrs
fadds
sti
pop
out
fnstcw
dec
test
push
cmp
in
xor
in
sbb
mov
call
test
cwtl
and
dec
mov
ficoms
mov
sarl
sub
and
pushf
cli
and
cld
push
push
jne
fwait
cmp
cltd
add
cmp
idivb
pop
xchg
sbb
int3
add
scas
adc
mov
arpl
pop
stos
pop
xchg
sub
inc
movsl
sbb
repz
rcl
repz
repnz
jmp
xchg
dec
cmpsl
shlb
xor
push
out
or
test
mov
ss
push
leave
mov
dec
mov
ss
sub
sti
push
push
push
mov
repnz
rol
inc
pop
mov
adcl
pushf
add
xchg
shll
divl
jo
dec
loope
adc
jo
loope,pn
sbb
jnp
lods
cmp
cmp
inc
lea
jmp
jmp
add
dec
jo
outsb
push
jb
outsb
je
jb
add
repz
push
call
inc
mov
bt
cmc
sub
jg
not
push
push
add
pushf
jmp
call
pushf
lea
call
pusha
jmp
iret
inc
add
push
pop
movsl
sbb
je
movsb
jmp
sbb
mov
nop
pop
mov
pop
sbb
mov
push
popa
lods
repnz
inc
inc
pop
lods
jae
dec
stos
push
js
and
mov
or
outsl
sub
icebp
push
jle
fs
std
mov
inc
in
pop
fisubrs
ret
lret
ds
test
addb
adc
fxch
popa
cmpsl
test
or
dec
cmpsl
xchg
push
pop
mov
mov
mov
xchg
sbb
xchg
xchg
adc
cli
in
insb
es
mov
pop
push
imul
xor
mov
pop
fistpl
push
jp
cmc
mov
out
cmp
and
xchg
pop
and
sub
add
xchg
push
xor
mov
jp
in
imul
jnp
pusha
mov
pop
mov
push
sub
mov
jne
lcall
mov
es
jmp
fdivl
adc
pushf
cld
mov
pushf
mov
dec
scas
arpl
mov
jns
repz
jle
out
orl
lret
and
mov
test
add
ret
insl
sarl
and
xor
or
mov
xchg
sbb
jmp
push
mov
lret
jbe
mulb
cmpsl
jecxz
fistpll
bnd
insl
scas
xor
je
mov
orl
sarb
lods
loopne
pop
fsubrs
jno
es
fiaddl
pop
mov
out
sbb
pop
les
fstps
xchg
notb
icebp
dec
mov
movsl
repnz
adc
shll
insb
jbe
aaa
inc
pop
aas
ja
clc
in
push
mov
inc
rcr
icebp
fldt
sbb
inc
push
popa
shlb
push
xchg
cmpsb
fsubs
pop
lret
leave
cmpsb
leave
push
xchg
sbb
mov
sub
jmp
or
mov
adc
xchg
gs
push
push
sbb
xchg
mov
pop
mov
mov
cltd
imul
dec
mov
mov
push
jecxz
sbb
xor
pop
add
inc
mov
out
je
aaa
jb
dec
popf
scas
icebp
inc
cld
cmp
mov
dec
repnz
scas
icebp
push
inc
das
ficoms
je
stos
dec
mov
xor
inc
dec
xor
cs
insb
add
add
jae
popa
addr16
outsl
js
add
mov
mov
inc
jnp
mov
and
jmp
and
and
call
add
js
dec
mov
or
data16
add
rclb
adc
hlt
jae
mov
mov
out
add
orl
call
ljmp
add
mov
jmp
or
and
mov
push
push
or
std
add
mov
mov
lds
test
xchg
leave
fstps
aas
jmpw
pop
xorl
jp
cmpsl
ljmp
add
lcall
outsb
addl
outsl
inc
lods
xorb
add
aaa
push
xor
pop
sbb
mov
mov
test
inc
push
adc
test
sbb
cli
xchg
add
call
cmp
jnp
ret
popf
inc
cmp
into
shl
fmul
push
cmp
cs
cmpsb
and
push
sub
sbb
rorl
and
add
and
or
flds
inc
daa
lret
cmc
xchg
cmpsb
mov
sub
sub
push
sub
jge
xchg
pop
sub
stc
dec
movsl
jnp
xchg
add
jns
push
loopne
insb
mov
roll
mov
dec
sbb
lret
notl
mov
test
mov
in
sbb
aas
inc
test
jle
ljmp
jmp
jge
test
movsl
dec
pop
mov
fstpt
dec
movsl
or
bound
les
das
popa
mov
ds
jle
shll
test
jle
pop
mov
cmp
aaa
pushf
sub
jb
dec
movsl
dec
or
xor
pop
loope
sub
push
repz
adc
cld
mov
stc
inc
cmp
xchg
in
pop
les
stos
in
xor
lds
push
mov
mov
push
ss
cmpsb
mov
sub
jb
aad
mov
adc
dec
test
mov
and
loop
in
repnz
movsl
or
mov
jge
xchg
nop
sbb
or
cwtl
enter
pop
ja
fbld
out
pop
rep
je
mov
sub
inc
cwtl
lock
inc
mov
cmp
dec
nop
gs
mov
fidivl
pop
dec
push
ficoml
scas
xchg
in
inc
adc
xchg
mov
mov
lea
js
jne
sub
rol
mov
stc
pushf
clc
add
clc
mov
push
cmc
movzwl
add
movsbw
mov
stc
cmp
add
call
lahf
lret
ja
sbb
sub
push
add
or
in
ljmp
inc
sbb
xchg
sbb
mul
stc
int
pop
or
pop
out
nop
cltd
imul
add
mov
inc
push
mov
ljmp
push
es
pop
jmp
mov
mov
incb
push
flds
inc
inc
ds
pop
bnd
mov
in
mov
lret
mov
es
push
inc
jp
pop
test
or
cmp
mov
sti
inc
cmp
bound
cmpsl
ret
push
imul
inc
mov
sbbb
test
mov
sub
jb
jbe
add
sub
imul
add
mov
cwtl
ret
xlat
lods
mov
add
cmpsl
add
lahf
mov
and
inc
call
pop
ret
rorb
in
jp
push
mov
rcrl
sbb
lods
std
pop
pop
cmp
arpl
add
add
cmpsl
cmp
xchg
ret
loop
mov
jb
mov
fcomps
outsl
popf
rolb
mov
inc
mov
jbe
hlt
je
cld
jae
sub
mov
call
pop
mov
jge
out
out
daa
enter
pop
imul
lods
call
mov
lahf
lock
push
xor
ds
sub
adc
push
lcall
pop
std
xor
in
mov
jns
jnp
gs
pop
jo
mov
in
mov
push
xchg
mov
inc
sti
ja
and
sbb
or
xchg
sbb
out
mov
dec
nop
jb
fisttpl
aas
xchg
inc
mov
mov
mov
test
pop
xchg
sub
xchg
daa
adc
aad
pop
jle
and
lods
sub
pop
push
push
adc
lock
cmpb
cmpl
adc
xchg
adc
pusha
xchg
lea
jno
push
pusha
dec
stc
bt
movb
cmp
shl
setns
push
lods
stc
bt
bt
ror
test
mov
call
mov
pusha
cmp
stc
test
mov
push
mov
push
lea
je
call
insl
lret
sbb
jo
dec
and
mov
mov
dec
xchg
mov
mov
test
fsubs
push
mov
out
clc
das
mov
test
cmpb
sbb
sbb
and
rcrb
dec
insl
inc
scas
push
insb
out
orb
xor
dec
mov
adc
sbb
cmp
jne
inc
dec
lret
or
mov
arpl
sbb
es
cmp
xor
xor
xchg
rorb
lods
in
jbe
xchg
stos
notb
cli
cmp
xchg
out
cmpsb
cmp
mov
adc
pusha
lea
cld
sti
mov
xchg
scas
aam
or
arpl
ficomps
jae
aam
js
xchg
insb
lahf
cld
sbb
pop
push
dec
arpl
or
mov
dec
lcall
and
jnp
mov
and
xchg
sbb
out
aam
and
mov
out
adc
lret
lcall
mov
add
aam
aas
mov
add
out
cmp
js
sub
jns
loope
sti
divl
cld
pop
or
in
jp
cs
mov
or
and
jg
iret
mov
loope
ret
test
sahf
ss
in
inc
test
je
jmp
adc
repz
mov
push
sarb
shl
xor
into
and
or
scas
cs
and
mov
pop
mov
mov
outsl
icebp
sub
jmp
sbb
loop
fsubl
jae
shr
scas
push
icebp
mov
test
add
mov
jae
loop
and
jmp
popl
pusha
int3
adc
mov
push
mov
lret
sbb
nop
sub
adcb
xor
nop
dec
jl
adc
jmp
test
lgs
int3
xchg
shlb
mov
jo
mul
xchg
cmpsl
es
xchg
outsl
xchg
fadds
lea
call
cmc
cmp
push
jmp
cmp
call
cmp
movb
jmp
call
pushf
push
jmp
lea
je
rol
stc
adc
stc
add
or
not
not
sub
adc
movzbl
ror
shr
stc
bts
mov
rol
ror
bswap
sar
add
dec
jmp
pushf
lea
je
pusha
movb
lea
jmp
pushf
mov
movb
movw
pushl
ret
negb
sti
push
imull
mov
ja
xor
es
stos
adc
cs
daa
xchg
cwtd
test
xchg
push
mov
push
stos
fwait
repz
movsb
sbb
pop
mov
jb
call
mov
xchg
xchg
notl
out
sbb
mov
dec
mov
cld
jle
xor
loopne
adc
int
xchg
jb
push
test
sti
lods
jno
mov
push
sti
jo
xor
xchg
loope
data16
jmp
cmp
es
orl
insl
xor
mov
fadds
inc
fsubs
ja
mov
and
adc
fcomps
shlb
or
add
mov
mov
inc
loopne
data16
add
xor
jae
add
xor
sbb
adcb
gs
mov
inc
jbe
test
mov
xchg
test
mov
sub
out
xor
mov
dec
shlb
test
loopne
pop
sub
jns
movsb
out
test
incl
and
xchg
roll
into
adc
adc
repnz
xchg
cmc
and
test
idivb
ud2
mov
and
sub
pop
add
pop
repnz
into
shrb
mov
mov
adcl
dec
lea
and
dec
xor
xchg
shl
pop
lret
cwtl
mov
lea
movsl
out
jbe
cmp
adc
cmp
mov
mov
cmpsb
or
mov
insb
xchg
mov
enter
jle
data16
icebp
cmp
inc
iret
cmp
shll
mov
or
sti
add
push
cmc
add
dec
pop
fildl
push
or
add
je
outsl
fs
gs
imul
add
mov
mov
into
nop
nop
iret
cmpl
push
sti
or
rorb
dec
pop
pop
xchg
mov
enter
push
xor
adc
sub
mov
add
inc
cmpsb
xor
adcb
pop
xlat
cmp
mov
push
jmp
fsub
adc
xor
loopne
fdivrs
cmp
mov
scas
out
gs
adc
loop
movsl
adc
mov
add
push
test
fidivrs
cmp
loope
jp
sbb
das
pop
in
mov
lea
mov
add
pop
pop
cmp
std
lods
stos
scas
inc
insl
dec
sbb
xor
push
dec
fists
sub
lahf
jge
mov
test
test
mov
mov
pop
jmp
fistl
push
fisubs
hlt
frstor
fneni(8087
rolb
shrl
xor
stos
in
push
imul
enter
xchg
stc
stos
sub
cmp
xchg
push
or
inc
or
mov
popf
add
sub
gs
dec
fs
cli
js
inc
ret
sbb
cs
movsl
sbb
aad
loope
out
aas
sub
in
sub
adc
adc
push
jmp
shrb
ret
add
sub
ds
add
push
popf
inc
aas
pusha
or
sub
or
mov
mov
cld
xchg
sub
repz
es
js
not
mov
pop
movzbw
jmp
jmp
aad
cli
xchg
scas
std
dec
std
jb
mov
popf
mov
sub
fsubs
fcoms
stos
mov
repnz
mov
adcl
in
push
adc
std
dec
call
std
jne
sahf
xor
and
bswap
add
cli
jae
fnstsw
add
loop
cmp
dec
adc
xchg
hlt
test
cli
push
sbb
add
movb
pushl
pusha
lea
ja
inc
inc
seta
jmp
setae
bswap
pop
bswap
pop
bswap
pusha
mov
lea
call
sbb
mul
aad
xor
pop
aad
and
pusha
fisttpll
rorl
dec
cld
cmp
test
rcr
lret
test
push
movsl
enter
aas
cmp
sbb
add
popa
ja
mov
cmp
cld
and
mov
mov
aaa
subl
daa
lea
out
adc
repz
repz
mov
xchg
sbb
sbb
xchg
in
and
inc
lcall
pop
xchg
sbb
jp
xchg
inc
stos
rol
lods
movsb
mov
adc
mov
iret
scas
cmpl
add
frstor
pop
cmp
mov
sbb
addr16
jnp
mov
fwait
imul
pop
negb
add
shl
pop
inc
sti
ljmp
jecxz
push
jno
jns
mov
pop
push
jp
mov
xor
fs
jle
xchg
data16
sbb
xchg
mov
mov
mov
test
xchg
xor
imul
ror
test
neg
jmp
repnz
pusha
mov
call
inc
repnz
push
mov
and
xor
frstor
fadd
add
call
lcall
push
push
or
inc
cmp
mov
mov
es
adc
call
push
inc
jmp
pop
rcl
fsubs
loope
dec
xchg
cli
add
jo
leave
test
add
mov
jnp
adc
rol
pusha
push
not
call
sub
test
call
les
cmp
rclb
push
xchg
mov
and
add
inc
sti
push
pop
shll
aaa
and
xor
mov
movsb
or
lret
or
int3
xor
jb
repz
fs
sbb
inc
in
jmp
aam
js
clc
mov
xor
pop
dec
mull
push
in
outsb
mov
cmpl
ds
push
out
fidivs
xor
mov
ficompl
add
jg
xor
mov
add
loop
shrb
sbb
fs
movsl
xchg
repz
pop
push
mov
add
in
xchg
pop
aam
imul
sar
sbb
xlat
jo
sahf
jle
subl
std
dec
cmpsl
dec
or
mov
sbb
sbb
in
dec
xchg
ret
inc
cmp
daa
fidivl
jl
out
fstl
pop
mov
mov
dec
push
out
jmp
or
je
ljmp
mov
mov
ss
mov
lods
push
out
bound
es
mov
aaa
nop
jns
cld
pop
sub
push
and
cmp
pop
inc
ror
das
arpl
cli
pop
int3
arpl
mov
mov
in
test
push
ja
aas
iret
cmp
mov
test
cmpsl
js
cltd
imul
flds
mov
xchg
out
xchg
imul
popf
sub
or
sbb
enter
push
jp
insl
pop
ds
jae
sub
mov
xlat
mov
test
data16
sub
jnp
shlb
xor
sti
xlat
adc
inc
lahf
dec
mov
dec
inc
pop
fwait
das
pop
lcall
adc
pop
into
or
arpl
xor
jg
fstps
add
into
lods
repz
inc
mov
add
shll
sbbb
mov
mov
shrl
enter
xchg
enter
and
dec
imul
dec
pop
popa
repz
outsb
adc
cmp
mov
pop
sub
movsb
xchg
inc
mov
pop
add
add
fldcw
ljmp
ja
jbe
aam
movsl
push
pop
cli
lods
lcall
leave
adc
aaa
push
xchg
call
stc
xor
add
mov
and
sbb
mov
or
arpl
les
xor
inc
outsb
sahf
out
adc
mov
sub
adc
hlt
xchg
movsl
outsl
inc
push
lods
sbb
jno
shlb
inc
fnsave
mov
jle
cld
cmp
loop
push
dec
fiaddl
inc
mov
pxor
inc
jbe
add
dec
xchg
cld
mov
out
cmpsl
in
xchg
lock
xchg
or
xchg
jecxz
mov
adc
shrl
pop
ja
push
leave
push
pop
dec
fadds
cld
push
pop
vpsignb
inc
incl
sbb
add
sub
repz
mov
stos
loop
aaa
aaa
and
clc
daa
mov
push
adc
fucomp
lea
and
mov
cmp
int
inc
mov
mov
mov
xchg
inc
mov
add
test
jo
hlt
daa
in
push
push
fwait
push
ja
imul
sub
dec
adc
shufps
cmc
shrl
test
push
int3
sbb
lods
add
lea
cwtl
jne
lret
xor
inc
mov
les
fsubl
adc
fsubrl
scas
mov
push
inc
pop
fnstcw
dec
xchg
or
or
lods
bound
fildl
mov
inc
jnp
push
and
lock
or
mov
scas
sti
sub
push
jle
test
or
in
cmp
mov
push
cmpsl
outsl
xchg
pop
pushf
fnstenv
orb
cmp
adc
sub
gs
pop
shl
stos
int3
sbb
in
pusha
inc
mov
pop
jecxz
pop
jl
dec
add
sub
mov
xchg
sbbb
cmpsb
xchg
pusha
mov
push
xchg
js
cmp
cmp
pushf
pushf
lea
ja
bt
bt
push
pushf
imul
cmc
test
clc
add
movb
lea
jmp
add
jg
les
xchg
push
jmp
fwait
movsb
jp
rolb
lods
xlat
pop
ret
pushf
stc
insb
pop
cmc
div
hlt
or
out
movsl
sub
or
xchg
aam
sahf
or
adc
ss
jae
mov
mov
test
or
insl
lcall
sub
into
pop
int
lret
cmp
pop
sub
ss
mov
sbb
pop
xchg
pop
test
fcmovu
jle
les
fwait
in
mov
xor
mov
arpl
in
sub
jne
dec
inc
inc
imul
outsl
push
clc
or
test
mov
aas
scas
mov
mov
jns
pop
cmp
xlat
inc
push
stos
pop
xchg
dec
xchg
fisttps
push
pushf
xchg
adc
xchg
roll
xchg
es
lret
aaa
jecxz
add
popf
inc
jecxz
mov
inc
add
push
add
mov
xchg
push
cmpsb
out
jnp
es
push
insb
xchg
sbb
in
sbb
sbb
lea
and
xchg
mov
sub
mov
mov
int3
loope
outsl
dec
cmp
lahf
jnp
ja
gs
in
outsl
dec
and
push
pushf
icebp
jmp
push
adc
add
sahf
pushf
sbb
lea
sub
pop
mov
jl
push
int
int3
dec
adc
mov
mov
movl
call
lods
lock
lods
rclb
loop
xor
inc
fcoms
and
xchg
xchg
movl
mov
mov
jb
or
mov
repz
push
mov
insb
push
pop
lods
jnp
xchg
mov
js
aas
push
add
add
gs
and
push
dec
cmp
jb
and
or
mov
cmp
adc
incl
sub
xchg
rolb
pop
mov
inc
add
cmc
fimuls
stc
loopne
lcall
ljmp
mov
xor
push
aas
loopne
cmp
fld
out
push
rcl
cmp
jnp
xor
add
jnp
dec
repz
cli
test
test
nop
xchg
dec
fcoms
pop
mov
shll
ret
into
adc
dec
push
aam
cltd
mov
fmuls
pop
sub
lahf
daa
jmp
ficoms
test
cmpsl
jp
jl
les
stos
adc
movsb
movsb
test
pop
pop
xchg
pop
sub
std
xor
rcrl
pop
pop
repz
xchg
mov
ss
push
jne
or
or
mov
push
scas
out
gs
cmp
sbb
mov
mov
push
aaa
cs
jecxz
cwtl
and
les
mov
mov
test
rcrl
adc
sbb
xor
gs
stos
cmpsb
out
push
adcl
iret
pop
dec
sbb
bound
jb
cwtl
dec
rcrb
addl
lahf
or
and
mov
cmpsl
dec
loope
pop
mov
fisttpl
mov
push
jb
arpl
jp
add
sbb
sahf
xchg
iret
rcl
pop
mov
cld
and
or
mov
cmpl
xor
mov
sbb
pop
sbb
data16
enter
rcl
in
cwtl
std
add
shlb
out
es
iret
jecxz
out
lret
dec
loope
jae
jecxz
fsubrl
in
sub
push
lock
xchg
leave
push
mov
std
lods
cmpsb
push
inc
mov
sub
jnp
fst
ja
aad
push
fnstenv
push
lods
mov
out
cmp
nop
test
mov
sub
stos
ljmp
and
xor
jbe
bound
notb
xor
les
inc
pop
push
and
dec
imul
rcl
adc
dec
cwtl
mov
fstps
inc
cmp
sbb
jmp
xchg
mov
aam
lds
icebp
rcrl
cmp
fnstsw
mov
and
sub
jecxz
pop
les
and
xchg
aad
int3
xlat
sbb
sbb
jbe
iret
add
jae
rorl
xorl
repz
inc
sbb
mov
dec
dec
sahf
xchg
jp
les
testb
push
testl
rcl
dec
mov
fbstp
jp
data16
mov
mov
jge
loope
jmp
inc
or
scas
adc
ret
add
in
fstps
mov
les
dec
cld
push
cwtl
add
js
addr16
divb
adc
add
sub
inc
pop
mov
mov
fwait
int
lret
xor
inc
addb
adc
push
xchg
mov
inc
mov
movl
and
movb
mov
push
movb
pushf
mov
pushl
ret
cmp
sbb
push
je
les
pop
ret
shrl
lcall
orb
out
push
and
dec
fistps
jl
or
enter
mov
fdiv
mov
adc
push
aam
adc
pop
shrl
sbb
lods
cli
pop
inc
jae
sti
jmp
sub
shl
jae
ret
mov
xor
mov
mov
sbb
jg
in
and
in
ret
cli
mov
pop
inc
cmpsb
or
mov
sbb
or
push
push
pop
int3
push
jge
mov
mov
mov
inc
xchg
inc
mov
xchg
xchg
mov
out
fwait
out
mov
test
dec
sarl
fdivrp
dec
call
cmp
sbb
in
adc
add
mov
je
mov
repz
and
mov
adc
arpl
sbb
inc
cmp
dec
movsb
pop
icebp
adc
loopne
mov
xor
testb
imul
in
push
ljmp
adc
lret
pop
jmp
outsl
pop
repnz
std
in
daa
pop
addb
push
sbb
dec
ret
cltd
repnz
pop
ss
les
and
xchg
shrl
aas
adc
xchg
mov
shrb
flds
add
fistpll
mov
inc
into
xchg
loopne
cmc
pop
and
push
flds
or
jno
jb
iret
push
jne
cmp
in
fwait
in
inc
push
sbb
sub
add
pop
pushf
mov
push
ss
out
mov
pop
cwtl
mov
iret
aas
ljmp
cmpl
and
adcl
sarb
mov
mov
push
js
cmp
add
sti
xchg
shr
inc
mov
shr
sub
mov
shr
mov
bt
call
outsl
mov
js
les
mov
dec
pop
xor
push
jecxz
push
cmpxchg
aaa
xor
adc
in
xor
pop
or
cmp
jge
and
jl
xor
push
fmul
je
or
lcall
imul
fucomp
mov
jp
ds
cmp
push
mov
push
roll
in
xchg
mov
jmp
jp
int3
out
mov
mov
data16
fcmovu
mov
push
sbb
andl
sub
cwtl
fxch
ja
mov
mov
mov
dec
idiv
not
pusha
pop
repz
popl
call
mov
pushf
lea
jmp
add
pushf
pushf
push
jmp
neg
test
clc
bt
xor
push
sub
pushf
jmp
inc
mov
lea
jmp
push
movb
mov
call
not
mov
pushf
mov
dec
movw
inc
pushl
popl
dec
lea
movsbw
dec
movl
push
jmp
pushf
bswap
mov
movsbl
not
pop
mov
movsbw
movzbw
pushf
xchg
xchg
mov
bswap
push
jmp
movb
jmp
bswap
jmp
mov
pushf
pushf
push
push
lea
jmp
push
movzbw
mov
call
pushf
pushf
pusha
and
jmp
cmc
pushf
xor
jmp
push
call
movl
movsbl
inc
mov
pusha
movb
pusha
inc
cmc
xor
pushf
jmp
call
jmp
neg
jmp
movsbl
mov
call
push
xchg
bswap
mov
mov
movsbw
pop
push
mov
jmp
cmc
cmp
btr
mov
shl
shl
mov
setne
clc
mov
pusha
cmp
add
test
shrd
movw
jmp
clc
pushf
xor
clc
stc
bt
pusha
sub
test
xor
movb
jmp
inc
bt
cmp
bt
xor
pushf
call
push
pushf
jmp
rol
clc
jmp
clc
push
pusha
pushl
popl
cmp
movb
bt
cmp
add
jmp
aas
notl
bsf
clc
mov
cmp
pushf
call
test
push
pushf
not
pushf
jmp
jmp
jmp
pushl
or
call
pusha
neg
btc
mov
test
pushl
jmp
test
call
xor
call
jmp
jmp
mov
push
lea
jmp
movb
call
movb
sub
push
jmp
bswap
lea
mov
jmp
mov
pop
movzbw
pushl
mov
movw
mov
pushl
ret
stc
xor
jmp
call
aaa
shr
lea
mov
jmp
push
lea
jg
cmc
xor
call
lea
je
call
xchg
clc
movzbw
movzbw
mov
adc
xor
xor
pushf
pushl
call
xchg
cld
pushl
movsbl
bswap
mov
mov
pushf
push
cld
push
jmp
inc
pushf
movw
mov
pushf
lea
jmp
mov
pusha
pushf
push
pushl
lea
jmp
mov
not
pop
mov
lea
movl
movsbw
movsbw
mov
not
not
push
bswap
repz
popl
pop
movzbl
pop
dec
mov
inc
push
pushf
mov
pop
pusha
movsbl
inc
pushl
popl
movzbw
bswap
movl
pop
not
mov
call
jmp
pushf
jmp
call
inc
inc
bswap
mov
movsbw
mov
not
pushl
popl
dec
pushf
not
mov
movl
dec
jmp
pusha
push
lea
cpuid
push
sub
cmc
call
pushf
movb
inc
bt
bt
cmp
xor
pushl
jmp
lea
jb
popf
pusha
pusha
lea
jmp
pushf
popl
push
mov
jmp
rol
test
cmp
movzww
clc
cmc
jnp
xor
call
movsbw
lahf
movzww
stc
cmp
xor
stc
cmc
pusha
test
sub
cmc
pusha
clc
rol
stc
bt
add
call
xor
clc
call
call
xchg
test
cmc
xor
stc
jmp
pushf
pusha
mov
pusha
mov
pushf
mov
bswap
jmp
pushf
pushl
popf
push
pushf
pushf
lea
jmp
mov
lea
jne
call
pushf
mov
jmp
jmp
call
push
push
mov
call
inc
mov
jmp
mov
pushf
pusha
mov
pushf
lea
jmp
pushf
lea
jge
pushf
mov
not
mov
movzbw
not
push
not
repz
not
dec
movzbw
push
bswap
pushf
mov
pushf
pushl
popl
pusha
lea
pushf
movl
dec
mov
jmp
bswap
shld
lea
mov
movzbw
setne
shl
test
mov
stc
cmc
cmc
jmp
pushf
push
jmp
push
mov
pusha
push
mov
bswap
movsbw
mov
pop
pusha
movsbw
pop
mov
call
push
push
pushf
popl
jmp
dec
inc
lea
mov
pushl
pushl
push
pop
pushl
popl
call
jmp
call
xor
pushl
xchg
jmp
movzbw
movl
lea
mov
call
movl
push
mov
mov
inc
call
push
inc
push
lea
jmp
push
mov
setns
pushf
jmp
shl
push
mov
mov
push
call
mov
add
push
pushf
push
pushf
mov
mov
movl
lea
jmp
movzbw
movsbw
mov
call
inc
pushf
jmp
push
mov
bswap
mov
not
movsbl
call
push
add
mov
cmp
lea
jae
xor
call
mov
mov
bswap
push
inc
pushl
popl
call
movw
pushf
popl
pusha
pushf
jmp
bswap
mov
push
jmp
shld
shld
lea
mov
inc
pushf
cmc
clc
mov
cmc
add
pusha
mov
mov
movb
pushf
mov
lea
jmp
pushl
popl
movb
push
mov
push
lea
jmp
movb
mov
push
pushf
popl
push
call
mov
pushf
popl
call
btc
mov
add
add
ror
jmp
movsbw
mov
cmc
add
setge
push
not
mov
mov
push
jmp
inc
test
xor
not
inc
lea
shld
push
movzbw
sbb
lea
shl
rcl
sub
shl
neg
cmp
clc
mov
inc
movzbw
sub
mov
adc
cmp
not
shr
add
shl
bsr
mov
sbb
dec
or
xor
btc
bswap
xor
call
pusha
push
mov
movb
pushl
pusha
mov
bswap
mov
bswap
pushf
mov
bswap
call
movw
mov
movb
lea
jmp
shr
rdtsc
stc
clc
sub
pusha
movb
jmp
pushf
jmp
pushf
pushf
pushl
popl
movb
lea
jmp
clc
cmp
jmp
xchg
mov
bswap
pushl
pusha
jmp
pusha
push
mov
movl
lea
jmp
rdtsc
push
mov
sets
mov
mov
mov
pusha
pushf
divl
pushf
pushl
jmp
mov
pusha
pushf
push
push
mov
not
pushl
mov
mov
call
pushl
popl
pushf
pushf
movl
lea
jmp
lea
pushf
mov
lea
pushf
bswap
movzbw
pushl
popl
lea
movl
dec
mov
lea
jae
pushf
pushl
pusha
inc
jmp
repz
popl
pushf
mov
pushf
mov
movw
push
lea
pop
pushl
popl
lea
movl
pushf
dec
inc
mov
pushl
movb
inc
test
xor
jmp
shl
mov
inc
bswap
shrd
btc
add
btr
test
pusha
mov
not
xor
or
call
pushf
popl
pushf
call
jmp
jmp
movl
mov
movb
lea
jmp
inc
pushl
lea
jmp
cmc
cmp
jmp
pushf
xor
lea
rol
dec
inc
call
cmp
and
push
mov
jmp
sar
cmp
mov
shr
rcr
mov
jmp
not
call
mov
pushl
popl
mov
lea
jmp
pushf
pushf
mov
not
pop
movsbw
pusha
mov
jmp
pushf
popl
pusha
pushf
jmp
call
stc
pushf
stc
sub
jmp
not
dec
pusha
neg
mov
ror
dec
test
add
mov
pushf
stc
cmc
sub
bt
jmp
pushf
mov
jmp
inc
pushf
mov
lea
jmp
movb
mov
call
adc
pusha
push
mov
shl
stc
add
setb
pushf
movb
mov
pushf
mov
movb
lea
jmp
jmp
mov
not
mov
pushl
bswap
mov
movzbw
movzbw
repz
popl
pushf
pusha
pushl
mov
dec
not
mov
pushl
pushl
popl
inc
lea
movl
call
mov
pusha
jmp
pushf
mov
pusha
lea
jmp
bswap
push
bswap
mov
jmp
pushl
popl
mov
pushf
mov
movw
lea
jmp
inc
test
stc
sub
cmc
xor
movw
cmp
pushf
stc
neg
pusha
cmc
xor
movb
call
repz
popl
not
mov
jmp
bt
bt
mov
clc
cmp
cmc
push
sub
call
dec
clc
mov
inc
inc
bts
not
xor
dec
pusha
inc
mov
mov
pushl
inc
jmp
call
mov
pushl
not
pusha
movsbw
mov
jmp
mov
jmp
pushf
cwtl
pushf
cmp
test
sub
pushf
mov
mov
mov
mov
mov
lea
jmp
mov
pusha
call
mov
shl
mov
pusha
pushf
jmp
mov
pusha
pushf
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
pushf
mov
movw
movsbw
mov
bswap
pop
call
call
stc
sub
cmp
call
pushf
sub
jmp
mov
call
lea
mov
mov
movsbw
mov
jmp
push
mov
inc
pop
mov
mov
call
call
inc
push
lea
jmp
pushf
mov
pop
push
movzbl
pusha
pushl
pushf
mov
jmp
pusha
mov
pushf
mov
pusha
push
lea
jmp
add
add
call
jmp
mov
pushl
pushf
popl
call
dec
mov
xor
shr
mov
bt
pushf
pusha
sub
jmp
bsf
sar
ror
add
stc
ror
rol
push
test
add
movw
adc
and
neg
movzbw
mov
pushf
mov
stc
push
test
sub
movw
call
setae
setge
mov
mov
pushf
call
push
call
lea
movb
jmp
mov
pushl
popl
pushf
mov
mov
lea
jmp
push
lea
mov
jmp
jmp
test
test
xor
btc
mov
cmc
add
pusha
mov
pusha
pushf
pushf
lea
jmp
rol
movw
pushf
stc
mov
xchg
movb
call
pushl
popf
mov
lea
jmp
mov
mov
movsbw
mov
movzbw
pushf
inc
call
daa
btr
sub
setl
mov
jmp
lea
ja
push
call
movb
mov
push
movb
call
pushf
lea
ja
setg
btr
rcr
sar
mov
bt
aaa
lea
movzbl
cwtl
shl
aam
sub
lea
lea
rol
ror
shl
and
btc
ror
cmp
sub
not
bswap
push
mov
call
mov
pushl
movb
movb
lea
jmp
jl
push
pushf
mov
push
call
dec
mov
call
mov
rcr
mov
pusha
pusha
sub
call
add
push
push
pushf
pushf
popl
jmp
jmp
mov
lea
jp
pushf
jmp
cmc
mov
cmpl
call
ror
setbe
dec
stc
pushf
sub
xor
mov
setno
mov
call
pushf
pushl
sub
push
jmp
call
sar
movzbl
cmc
call
mov
pusha
mov
jmp
push
push
pushf
mov
pushl
popl
pushf
pusha
pushf
pushl
lea
jmp
inc
bsf
rol
mov
sub
mov
clc
pushf
sub
jmp
pushf
pushl
jmp
bswap
pushf
mov
pusha
pop
mov
bswap
movsbw
pushf
repz
popl
dec
jmp
mov
not
jmp
push
mov
pushf
mov
jmp
push
pushf
pushf
popl
movw
pushf
call
xor
pushf
test
cmc
xor
pusha
stc
jmp
movb
inc
clc
cmc
xor
mov
push
lea
jns
push
inc
pusha
pushf
push
lea
jmp
mov
pushf
pusha
movsbw
mov
bswap
push
movsbw
repz
popl
movzbw
mov
not
mov
pushf
jmp
push
movb
movw
pushf
popl
movb
push
pushf
pushl
popl
pushf
pushf
mov
mov
lea
jmp
mov
not
lea
movsbl
repz
popl
push
pop
mov
pop
bswap
mov
dec
movsbl
not
pushl
popl
pop
movzbl
movl
pop
mov
pushf
inc
pushf
xor
pushl
push
mov
pushl
inc
push
push
mov
mov
lea
jmp
pushl
add
call
jmp
pusha
push
pushf
pushf
mov
pushf
xchg
lea
je
movzbw
pushf
mov
call
call
push
pushl
popl
mov
pushf
mov
lea
jmp
xor
cmc
cmp
mov
sbb
sar
mov
cmp
pusha
pushl
mov
add
jmp
movsbw
pushf
push
mov
pushf
movzbw
push
jmp
jmp
push
pushf
inc
clc
bt
test
bt
xor
movb
jmp
call
neg
stc
pushf
add
stc
clc
sub
mov
pushl
pusha
pushf
mov
pushl
pushf
pushf
mov
lea
jmp
mov
mov
push
mov
pushf
not
pop
pusha
repz
popl
call
lea
jne
or
bswap
adc
bsf
mov
cmp
bt
and
jmp
mov
jmp
jmp
cmp
cmp
xor
pushf
sub
pusha
clc
rol
pushf
clc
clc
xchg
bt
test
pushl
xor
bt
bt
clc
movb
sub
test
jmp
push
mov
push
mov
push
mov
pusha
pushf
lea
jle
jne
xor
clc
jmp
ror
mov
pushl
clc
push
add
pusha
mov
movw
push
pushf
lea
jmp
mov
pushf
repz
popl
dec
movzbl
pop
mov
pop
movzbl
mov
bswap
call
movb
xchg
lea
pushf
pusha
mov
lea
lea
movsbl
pop
mov
pusha
call
pushf
pushf
jmp
cmc
xor
push
inc
pushl
lea
jmp
pushl
popl
jmp
jmp
pusha
jmp
call
push
inc
movw
pushf
pushf
pusha
lea
jmp
movw
call
call
bts
aas
aad
btr
mov
pushf
pushf
sub
pushf
mov
mov
pushf
movb
lea
jmp
pushf
movb
pushf
pushf
mov
push
pushl
push
xchg
jmp
jmp
call
mov
jmp
jmp
shl
pushf
mov
and
inc
cmp
mov
mov
pushl
sub
stc
stc
push
bt
shl
lea
jle
push
pusha
mov
call
inc
mov
inc
mov
inc
pop
not
pushl
popl
pop
jmp
inc
pushl
popl
movsbl
bswap
mov
movl
not
push
dec
mov
pushf
pushl
call
call
push
repz
popl
movsbw
lea
movsbw
mov
xchg
push
mov
movzbl
mov
pushl
popl
pushf
pushf
not
lea
jns
push
jmp
lea
jne
or
btr
lea
cmp
mov
pusha
jmp
pop
adc
adc
inc
or
pop
and
adc
xor
adc
xor
adc
xor
adc
add
pop
push
insb
adc
lock
adc
xor
adc
pusha
inc
adc
pusha
inc
adc
inc
jmp
pop
shrb
pop
lock
adc
pusha
jne
pop
adc
pop
xor
adc
push
clc
adc
add
pop
add
pop
lock
adc
and
pop
add
adc
adc
adc
loopne
adc
and
adc
inc
adc
lock
pop
xor
adc
xor
adc
rolb
pop
and
pop
lock
adc
push
push
adc
xor
pop
add
pop
pusha
inc
adc
pusha
inc
adc
xor
adc
and
adc
lock
adc
pusha
jl
pop
add
adc
adcb
pop
push
clc
adc
push
push
adc
pusha
jl
pop
mov
adc
mov
adc
jo
adc
adc
adc
mov
adc
lock
pop
nop
cmp
adc
adc
adc
xor
adc
xor
adc
and
pop
adc
mov
adc
pusha
inc
adc
pusha
inc
adc
inc
adc
lock
adc
rolb
pop
adc
adc
xor
adc
xor
adc
and
adc
rorb
adc
adc
adc
push
insb
adc
adc
adc
mov
adc
lock
adc
rorb
adc
lock
pop
xor
adc
and
adc
xor
adc
xor
adc
and
adc
ror
pop
addb
pop
pusha
inc
adc
pusha
inc
adc
add
adc
mov
or
pop
rorb
adc
and
adc
rolb
pop
and
adc
inc
jmp
pop
xor
adc
xor
adc
adc
adc
inc
or
pop
lock
adc
rorb
adc
ror
pop
mov
dec
adc
add
pop
inc
jmp
pop
inc
jmp
pop
and
pop
rorb
adc
xor
adc
pusha
inc
adc
pusha
inc
adc
push
clc
adc
mov
adc
lock
pop
sbb
pop
lock
pop
rorb
adc
rorb
adc
loopne
adc
inc
adc
push
insb
adc
and
adc
sbbb
pop
sbb
pop
adc
adc
loopne
adc
push
clc
adc
push
clc
adc
xor
adc
jo
adc
adc
adc
rorb
adc
xor
adc
xor
adc
inc
or
pop
pusha
inc
adc
pusha
inc
adc
push
movsl
adc
and
adc
push
push
adc
push
push
adc
add
adc
nop
cmp
adc
xor
pop
adc
pop
add
pop
jo
adc
adc
adc
adc
xor
adc
nop
cmp
adc
mov
adc
rorb
adc
mov
adc
sbbb
pop
adc
inc
jmp
pop
push
insb
adc
sbbb
pop
xor
adc
pusha
inc
adc
pusha
inc
adc
xor
adc
add
adc
nop
cmp
adc
push
movsl
adc
lock
adc
inc
jmp
pop
adcb
pop
mov
adc
inc
or
pop
xor
pop
lock
pop
adc
adc
xor
adc
adc
pop
rorb
adc
ror
pop
lock
adc
add
adc
push
insb
adc
adc
addb
pop
xor
adc
push
movsl
adc
xor
adc
pusha
inc
adc
pusha
inc
adc
xor
adc
lock
adc
nop
cmp
adc
inc
jmp
pop
and
adc
xor
adc
mov
adc
shrb
pop
xor
pop
xor
adc
shr
in
sbb
inc
stc
cmp
pop
shl
pop
not
bts
pop
mov
aaa
pop
test
rcr
stc
not
popf
bswap
pop
mov
pop
jmp
push
pusha
pusha
mov
movw
jmp
stc
and
pushl
mov
jmp
call
jmp
movb
jmp
movl
dec
inc
mov
pushf
push
pushl
push
inc
test
xor
mov
pushf
call
movw
jmp
push
pushf
mov
inc
pusha
lea
jmp
repz
popl
call
push
jmp
clc
sub
push
mov
mov
pushl
pushf
push
mov
lea
jmp
call
mov
jmp
call
pushf
mov
call
jmp
movw
mov
movsbw
call
mov
call
inc
movw
movb
lea
jmp
pushf
call
pushf
popl
jmp
pushl
pushf
movb
pushf
popl
jmp
push
pushf
mov
jmp
mov
jmp
pushf
pusha
jmp
pushf
mov
pushf
push
pushl
pushf
lea
jmp
movw
lea
jne
clc
adc
stc
xorb
bswap
pop
pushf
push
movb
mov
lea
jmp
stc
sub
cmc
pusha
bt
xor
push
neg
cmc
movb
xor
push
clc
sub
movl
mov
pushf
lea
jmp
inc
push
lea
jmp
push
jmp
mov
movb
lea
jmp
btr
mov
call
sete
test
mov
cmp
add
pusha
pusha
mov
pushf
mov
lea
jmp
lea
lea
pushf
movl
movsbl
not
mov
call
cmp
mov
stc
jmp
mov
mov
jmp
and
mov
adc
clc
or
mov
clc
cmp
stc
pushf
not
call
pusha
call
movb
decl
pusha
mov
call
pushf
pushf
popl
pushf
pushl
popl
push
lea
jmp
push
mov
pushf
popl
call
mov
call
movzbw
mov
mov
pop
bswap
push
pushf
mov
call
mov
pushf
push
mov
pushl
ret
pusha
mov
rol
shl
neg
sbb
mov
pusha
sub
jmp
push
jmp
inc
pushf
mov
lea
jmp
bt
test
cmc
add
bt
bt
shld
pushf
lea
jne
mov
pusha
jmp
mov
pushf
not
pushf
movzbl
mov
mov
movsbw
repz
popl
jmp
mov
pushf
mov
lea
jmp
movb
mov
inc
push
mov
lea
jmp
call
add
push
mov
pusha
pushf
lea
jmp
pushf
cmc
rol
movzbw
inc
call
movsbw
inc
movl
jmp
movzbw
xchg
std
call
xor
clc
clc
call
xor
bt
xchg
call
mov
pusha
mov
pusha
pushf
push
lea
jmp
call
rep
neg
bswap
shrd
mov
bsr
mov
jmp
mov
movb
pusha
lea
jmp
pushf
inc
cmc
call
jmp
mov
call
pushl
add
pushf
lea
jmp
push
push
inc
clc
bt
mov
movb
xor
call
pushl
movsbw
mov
bswap
movsbw
pushf
mov
mov
movzbl
pushf
mov
lea
lea
jmp
pop
bswap
repz
popl
not
mov
dec
movzbw
mov
movsbw
bswap
inc
pop
pushl
popl
pushf
movl
pushf
call
mov
jmp
bswap
jmp
push
pusha
mov
jmp
jmp
push
push
mov
pop
push
jmp
shr
pushf
stc
cmc
or
clc
clc
cmc
xor
mov
jmp
mov
pusha
xchg
movsbw
lea
mov
not
call
jmp
jmp
xor
jmp
pushf
inc
pushf
mov
lea
jmp
not
push
mov
pushf
inc
movw
bt
movb
xor
pushf
lea
jae
inc
pushf
pusha
lea
jmp
lea
jne
call
jmp
pushf
popl
push
mov
pushl
popl
pushf
pushf
movw
mov
lea
jmp
pushf
lea
js
push
movl
call
pushf
add
pusha
call
inc
mov
mov
push
lea
jmp
movsbw
call
dec
call
mov
pusha
movb
movb
lea
jmp
aaa
mov
push
jmp
bsr
clc
mov
test
jmp
movl
inc
movzbl
mov
mov
mov
inc
pushf
xor
pushf
inc
dec
bswap
mov
lea
lea
xor
cmp
sub
stc
setg
shld
cmc
mov
sar
bswap
call
not
call
mov
stc
movb
sub
movb
call
lea
cmp
jmp
bts
xchg
rcl
mov
sar
mov
pusha
pusha
add
jmp
call
inc
bt
bt
push
xor
call
pushl
popl
mov
mov
mov
mov
lea
jmp
clc
mov
call
call
mov
jmp
jmp
pushf
jmp
mov
call
jmp
push
pusha
mov
pushf
pusha
movl
xchg
pop
mov
mov
mov
bswap
call
inc
pushf
xor
push
movw
inc
pushl
pushf
lea
jmp
mov
mov
pusha
pushf
lea
jmp
bswap
call
stc
pusha
cmp
mov
jmp
cmc
xor
call
jmp
inc
pushl
pushf
lea
jmp
call
pushl
popl
mov
inc
call
jmp
sub
call
shr
rcr
movzbl
bt
jmp
lea
jne
adc
bts
movsbw
shld
xorb
movsbl
push
mov
pushf
movb
pusha
lea
jmp
call
push
and
test
pushl
push
movb
cmp
jmp
pushf
lea
jmp
inc
add
xor
clc
pusha
movzbl
movzbw
rcl
mov
push
ror
pushf
bt
test
call
push
mov
jmp
mov
movsbw
pop
mov
pushf
call
or
mov
bswap
mov
inc
cmp
clc
mov
jmp
jmp
not
pop
pusha
pushf
popl
jmp
jmp
pushl
popl
pop
not
bswap
movl
not
mov
call
dec
mov
jmp
call
pushl
popl
mov
pushl
lea
jmp
inc
pop
lea
movsbw
sub
not
xor
adc
shl
ror
shld
neg
movzbw
btc
xor
cmc
bswap
stc
movzbl
clc
jmp
jmp
not
stc
sub
add
add
stc
ror
adc
shld
xor
add
test
stc
pushf
pushf
and
xor
bt
ror
not
mov
pushl
test
add
push
mov
pushf
pushf
pusha
mov
lea
jmp
call
mov
movb
inc
movb
xor
pushl
pushf
pushf
inc
push
mov
movb
lea
jmp
mov
pop
not
pusha
mov
pushf
jmp
movsbw
mov
not
not
jmp
mov
movl
pushf
add
movb
call
pushf
mov
call
inc
pushf
pushf
sub
jp
xor
call
bt
pushf
sub
pusha
mov
lea
jae
mov
pushf
movb
pusha
pusha
lea
jmp
call
call
stc
shl
call
not
xadd
xadd
mov
stc
sub
shl
shl
mov
test
stc
sub
pusha
clc
bt
stc
shr
pusha
call
pushl
pushl
push
mov
pushf
pushl
pushl
ret
neg
rol
dec
ror
xor
rcr
rol
movzbl
movzbl
lea
mov
call
pushf
pushl
popl
pushl
pusha
pushl
movb
lea
jmp
mov
pushf
movb
pusha
pushl
ret
lea
jl
popl
pusha
movb
lea
jmp
bswap
repz
popl
lea
movw
jmp
jmp
movw
mov
mov
lea
jmp
movw
mov
pop
pushf
pushl
movzbw
mov
inc
movzbw
jmp
pusha
bswap
movzbw
mov
jmp
pushf
xor
jmp
jmp
mov
push
repz
popl
lea
mov
pushf
mov
movsbw
lea
pushl
mov
call
pushl
popl
push
pushf
mov
movb
lea
jmp
call
call
pushf
call
pusha
mov
call
mov
pushf
pushf
lea
jmp
inc
mov
pushf
pushl
lea
jmp
pusha
mov
pushf
jmp
aad
pushf
shld
bsr
lea
clc
pushf
jmp
call
mov
call
lea
mov
lea
call
add
push
mov
pushl
movb
mov
pushl
pushf
pusha
pushl
lea
jmp
xchg
pushl
call
jmp
pop
mov
movsbl
mov
bswap
lea
repz
popl
call
test
call
mov
movb
pusha
pushf
mov
pushf
mov
lea
jmp
mov
pusha
call
inc
call
movsbw
push
movsbw
movsbw
push
lea
movzbw
mov
push
movsbw
movsbw
mov
push
mov
push
pushf
repz
popl
inc
mov
pushf
jmp
add
jmp
cmc
bt
not
stc
not
stc
test
pusha
sub
jmp
push
mov
pushf
mov
jmp
pushf
repz
popl
mov
inc
mov
movzbl
lea
mov
mov
movzbw
mov
movzbw
bswap
pushl
popl
jmp
mov
jmp
pushf
popl
pushf
pushl
popl
movb
pusha
lea
jmp
mov
inc
movb
pushl
pushf
lea
jmp
push
inc
clc
stc
xor
push
pushf
inc
pushf
lea
jmp
pusha
mov
mov
mov
mov
mov
lea
jmp
push
pushl
shr
mov
movl
jmp
call
and
bt
pusha
mov
dec
xor
shl
btc
xor
movzbw
xor
rcl
shr
shrd
lea
sbb
add
shl
or
xor
push
lea
jle
xor
shl
movzbw
mov
stc
clc
call
bsr
mov
pushf
bt
clc
add
cmp
neg
pushf
call
pushf
pushf
xchg
movsbw
pusha
bswap
pusha
mov
movzbw
jmp
push
xor
pushl
movb
jmp
sub
clc
add
jmp
mov
bswap
call
push
mov
jmp
cmc
xor
pusha
jmp
mov
cmc
bt
stc
stc
and
cmp
push
cmp
pushf
lea
jne
push
xorb
pushf
lea
pusha
jmp
not
lea
movzbw
call
mov
movb
lea
jmp
movb
mov
jmp
movzbw
mov
movw
pushf
repz
popl
movl
jmp
pop
mov
movzbw
lea
mov
lea
pushf
jmp
dec
sub
adc
call
push
inc
call
xchg
movzbw
pushf
jmp
pushl
popl
pushf
movl
pushf
lea
inc
mov
pushf
call
pusha
bswap
mov
bswap
mov
not
not
call
lea
jmp
push
add
movw
mov
mov
lea
jmp
mov
lea
jae
pusha
pushf
pushf
popl
pushf
call
pusha
mov
movw
pusha
call
mov
pusha
jmp
inc
call
mov
push
pop
call
mov
inc
push
movb
xor
call
pushf
movw
sub
pushf
jmp
mov
not
pushl
popl
inc
movl
dec
lea
not
not
mov
call
inc
mov
mov
lea
jmp
pusha
pushl
mov
pushf
call
pushf
lea
jns
pusha
pushl
popl
movl
lea
jmp
not
mov
mov
inc
dec
dec
mov
pushf
not
pushl
popl
bswap
movzbw
jmp
mov
pushl
popl
push
pushl
pushf
lea
jmp
inc
pushl
movw
push
lea
jmp
pushl
mov
movzbw
movw
repz
popl
jmp
neg
bt
pusha
xor
stc
cbtw
test
mov
bt
cwtl
test
sub
push
mov
test
call
pusha
test
add
stc
xor
test
test
xor
call
jmp
shr
push
pushf
jmp
stc
call
push
bswap
push
mov
push
push
movsbw
pusha
pusha
mov
bswap
not
mov
pop
call
inc
sub
jae
bt
pushf
test
add
jmp
mov
mov
movsbw
not
repz
push
pop
push
pushf
movzbw
pushl
movzbw
mov
inc
pusha
pushl
popl
lea
pushf
movl
lea
lea
inc
mov
push
call
pushl
popl
push
pushf
push
movw
lea
jmp
cmc
add
pusha
pushf
movw
lea
jmp
pushl
pushl
mov
not
call
pushl
popl
inc
pop
movl
jmp
movsbw
movl
not
jmp
pushl
popl
movb
movb
pushf
mov
lea
jmp
pusha
call
pusha
inc
xor
sub
rcr
adc
clc
movsbw
mov
clc
shl
call
pushl
sub
call
clc
push
ror
push
pushf
add
movl
call
pusha
mov
jmp
movl
jmp
sbb
sub
movzbl
clc
test
test
xor
push
pushl
inc
stc
pushf
ror
mov
dec
pushl
sub
bt
pushf
xor
test
mov
jmp
call
pushl
mov
pushf
lea
jno
pusha
movb
mov
pusha
movl
pushf
push
mov
call
pusha
jmp
pushf
push
inc
clc
xor
jmp
pushf
push
mov
push
mov
pushl
ret
call
bt
test
xor
push
push
inc
mov
sub
jmp
pushl
inc
call
das
mov
test
jmp
