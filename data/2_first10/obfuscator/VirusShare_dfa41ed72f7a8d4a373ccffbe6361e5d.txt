push
mov
push
push
mov
mov
mov
mov
movl
movl
movl
cmp
movl
jne
mov
mov
sbbl
xor
mov
add
mov
adcl
movzwl
addl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
xchg
xchg
mov
xchg
sbb
in
loopne
lock
jle
jle
push
jg
jle
out
mov
hlt
mov
mov
cld
cmc
shlb
mov
xchg
ret
loop
dec
jmp
lcall
div
shlb
sub
lret
jmp
sub
ljmp
daa
ss
and
leave
ss
ss
add
add
fidivs
and
daa
cmp
xor
adc
fisttpl
adc
or
adc
addr16
aas
add
cmp
or
sub
insl
adc
xor
push
jle
jbe
adc
jb
jne
cmp
adc
jl
pop
dec
inc
sbb
push
dec
jl
inc
push
dec
inc
adc
push
mov
dec
imul
jb
cmpsl
dec
scas
lods
mov
movsl
ja
mov
jns
jne
push
mov
dec
mov
dec
mov
dec
mov
push
xchg
mov
xchg
mov
scas
cwtl
out
addb
out
cltd
in
and
repz
in
test
xchg
mov
loopne
test
sub
mov
in
imul
clc
mov
mov
loope
popf
popf
fwait
into
lds
xchg
rcl
cwtl
aad
xlat
cli
lock
ficoms
out
leave
out
jmp
es
aam
and
and
add
rcr
add
rcl
daa
and
or
cmp
sub
add
adc
push
sbb
cmp
add
adc
and
and
push
cmp
push
jb
outsl
jae
add
cmp
ja
or
or
sbb
add
push
fs
jae
outsb
push
dec
inc
adc
push
ja
push
jp
push
adc
jle
jne
dec
fs
dec
dec
mov
inc
imul
dec
jp
mov
pop
xchg
xchg
xchg
aaa
fildll
xchg
mov
in
or
jle
push
jg
jle
mov
pop
push
mov
dec
mov
push
mov
mov
mov
stos
mov
mov
out
mov
mov
mov
subl
and
testl
mov
in
mov
mov
lcall
fwait
negl
decb
in
ret
ljmp
shr
sti
fistpl
aam
loope
fdivp
sub
in
and
aaa
sub
int
cs
lds
fidivl
sub
std
aaa
leave
movb
xor
fildll
enter
add
shll
add
shlb
rcr
iret
adc
add
add
cmp
cmp
sub
popa
sbb
jne
push
imul
adc
jbe
inc
inc
inc
adc
dec
sbb
push
js
inc
push
jo
adc
pop
push
push
dec
push
jl
push
dec
pop
dec
push
inc
jae
push
jnp
pop
movsb
stos
cmpsl
pop
jg
jge
inc
mov
mov
jl
pop
push
jle
mov
orl
mov
mov
mov
push
pop
pop
mov
xchg
xchg
stos
andl
xchg
test
mov
cltd
mov
cld
xchg
sahf
cli
std
div
xchg
mov
xchg
xchg
mov
out
xchg
clc
mov
loop
xchg
sub
rorb
inc
test
mov
nop
xchg
neg
rcrb
enter
pushf
daa
out
jecxz
lret
popf
ret
repnz
in
cs
repnz
and
xor
fildl
les
daa
and
sub
sub
or
adc
or
aad
push
das
sbb
and
add
arpl
imul
jo
sbb
or
xchg
cltd
mov
and
adcl
jge,pt
jle
jg
jle
xor
ss
sbb
jo
adc
jae
dec
dec
adc
sbb
pusha
or
adc
inc
imul
jle
jb
push
pusha
pop
jae
jo
imul
scas
imul
test
mov
jle
lods
mov
test
mov
dec
dec
mov
mov
xchg
push
pop
test
fwait
sbbl
in
xchg
xor
mov
divl
movl
mov
mov
pushf
out
out
fwait
testl
jecxz
rclb
negb
inc
ret
cld
loope
imull
aad
rcr
and
out
icebp
lds
es
icebp
and
cli
cld
ds
and
cmp
xor
and
aas
or
adc
or
push
aaa
fcmovbe
fnstenv
or
fbstp
xor
gs
pusha
sbb
cmp
add
bound
cmp
cmp
or
bound
sbb
or
jg
add
gs
adc
push
inc
pushaw
jnp
imul
jno
insl
imul
imul
jge
inc
inc
inc
inc
insb
mov
mov
jnp
jp
push
jo
dec
push
jg
dec
mov
jl
pop
test
movsb
test
mov
push
xchg
mov
cmpsl
pop
xchg
lods
push
scas
pop
mov
mov
mov
mov
out
cli
repnz
mov
cwtl
sahf
loopne
lods
xchg
mov
mov
mov
hlt
imul
out
mov
jecxz
popf
out
loope
call
lret
lds
clc
cmc
shl
rcrb
ror
fdiv
clc
ljmp
repnz
lea
cltd
ds
into
ljmp
test
adc
sbb
inc
jle
aad
jle
das
and
in
xlat
lret
leave
neg
xor
sub
xlat
stc
ss
and
add
cmp
or
push
int3
or
daa
pop
push
aaa
add
pusha
push
xor
sbb
fstpl
add
cmp
insb
imul
cmp
or
cmp
cmp
aas
cmp
inc
data16
inc
adc
add
sbb
push
dec
push
push
je
insb
dec
dec
insl
jle
push
pop
jne
bound
mov
pop
outsl
inc
jnp
stos
test
push
jo
inc
mov
mov
je
pop
pop
inc
pop
push
push
pop
dec
test
andl
pop
xchg
sahf
jecxz
popf
mov
cltd
test
cmpsl
mov
test
mov
mov
in
mov
xchg
sahf
jecxz
sarb
loope
xchg
negl
imul
xchg
lds
xchg
jmp
xchg
ret
shr
jmp
lret
jmp
shlb
repz
hlt
out
fxch
cs
cld
sub
es
leave
into
xor
sub
stc
fmul
aad
and
fisubrl
cmp
add
or
into
das
enter
add
and
push
rclb
add
fcomp
cmp
cmp
or
sbb
or
jb
je
jg
push
cmp
sbb
sbb
aas
adc
je
jge
push
bound
data16
push
dec
adc
insb
dec
outsl
jle
mov
jp
jnp
mov
movsb
jo
push
mov
sub
mov
push
movzwl
mov
or
mov
push
mov
mov
or
mov
mov
xor
mov
xor
or
lea
or
mov
mov
mov
addl
xor
xorl
push
lea
imul
movl
cmp
mov
mov
movl
je
imul
xor
mov
lea
movl
mov
movl
jmp
imul
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
mov
mov
sub
movl
mov
or
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
pushl
push
push
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
addl
cmp
jne
cmpl
jne
cmp
jne
mov
imul
mov
mov
mov
mov
mov
mov
add
xor
lea
xor
cmp
jne
mov
xor
lea
xor
mov
cmp
jne
mov
xor
lea
xor
mov
cmp
jne
pop
pop
pop
leave
ret
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
mov
jecxz
out
popf
sub
jle
push
jg
jle
push
inc
dec
mov
mov
inc
inc
pop
mov
inc
pop
mov
mov
subl
subb
mov
jmp
test
ljmp
in
hlt
in
xchg
mov
xchg
xchg
popf
mov
fwait
mov
repnz
leave
sti
jecxz
cld
in
in
nop
lcall
leave
into
cld
in
rol
ret
fdivrp
dec
out
aam
ret
sub
out
and
repz
es
sub
and
ss
xor
fnsave
add
and
and
sbb
push
and
das
push
fdivl
xor
aas
pusha
pop
cmp
fs
push
pusha
pop
cmp
cmp
adc
adc
adc
jl
push
imul
jno
push
adc
jo
push
jle
imul
inc
jle
dec
test
dec
dec
mov
push
test
pop
push
jns
jbe
mov
pop
push
mov
test
stos
mov
xchg
scas
test
xchg
mov
lods
popf
nop
pop
popf
nop
mov
movsl
mov
cwtl
subb
test
mov
xchg
stc
hlt
mul
mov
out
test
mov
lahf
lahf
jmp
in
cld
xchg
add
xchg
jmp
out
testb
lcall
cmc
and
loope
out
sub
loope
sub
sub
ror
lock
lds
int
cli
xlat
cmp
sub
sub
fscale
and
fldl
cs
int
add
into
or
add
int
cmp
or
xor
cmp
adc
sbb
sbb
add
outsl
orl
cltd
inc
sar
add
orl
push
jg
jle
data16
das
push
or
addr16
insl
cmp
push
jle
insl
sbb
inc
jge
je
push
or
inc
inc
push
adc
fs
jbe
dec
pop
sbb
dec
ja
jge
stos
pop
pusha
inc
inc
jle
scas
gs
mov
jge
dec
jo
jbe
test
pop
pop
mov
mov
push
dec
pop
test
stos
xchg
mov
mov
and
lods
cwtl
fwait
jmp
mov
stos
xchg
ljmp
call
idiv
mov
les
mov
repnz
jmp
hlt
std
xchg
xchg
mov
incb
in
xchg
loop
lret
int
lret
aam
cli
and
stc
ficompl
ret
out
out
iret
in
out
out
xor
and
rcr
aad
sub
xor
cmp
and
aam
and
sarl
sub
adc
sub
fidivrl
sub
sbb
arpl
filds
add
sub
xor
insb
jbe
push
adc
or
ja
cmp
sbb
jp
sbb
jb
push
or
dec
pop
inc
dec
js
imul
sbb
jl
jge
inc
inc
jg
jg
js
mov
jbe
mov
je
dec
jp
push
push
stos
push
dec
push
mov
inc
mov
pop
pop
test
addl
scas
lods
mov
mov
pop
mov
mov
stos
cltd
lahf
mov
jmp
in
hlt
hlt
imul
mov
lahf
out
in
xchg
repnz
mov
sti
ret
pushf
mov
les
dec
out
iret
into
lahf
nop
xlat
ror
in
icebp
ljmp
aad
rolb
mov
test
xchg
xchg
sbb
jle
push
jg
jle
aam
leave
inc
inc
fxch
lock
xor
sub
icebp
sub
and
cld
xlat
and
cmp
cmp
sarb
comiss
push
sub
or
add
add
xor
cmp
and
cmp
data16
or
sub
or
imul
xor
adc
sbb
cmp
adc
imul
addr16
sbb
dec
jno
push
ja
push
je
cmpsb
push
jnp
jle
dec
movsb
inc
inc
push
mov
mov
pop
jp
push
jle
mov
stos
mov
dec
andb
mov
test
pop
cltd
movsb
pop
pop
cwtl
popf
mov
lods
lods
adcb
cmpsb
loop
loopne
stos
icebp
pushf
test
mov
test
lock
mov
icebp
notb
mov
lahf
jecxz
cmc
repnz
xchg
into
leave
mov
repnz
xchg
hlt
icebp
sti
les
in
xlat
and
fcos
and
ljmp
ss
cmp
aad
lret
cmp
xlat
and
xlat
ss
sub
cmp
lret
fistpll
xor
sbb
xor
or
xor
sbb
or
cmp
cmp
ds
xor
jo
xor
sbb
sbb
sbb
pusha
fs
je
sbb
je
fs
punpckldq
dec
adc
data16
imul
sbb
mov
ja
mov
mov
inc
jo
jae
mov
mov
pop
inc
push
mov
inc
push
push
movsl
inc
mov
scas
mov
push
mov
mov
xchg
mov
mov
mov
call
test
loop
sahf
mov
xchg
cltd
dec
aaa
dec
popf
addl
loopne
adc
jg
jle
test
xchg
nop
mov
lea
cli
pushf
addl
repnz
xchg
call
mov
lcall
mov
xchg
xlat
int3
fcmovnbe
imul
cli
xchg
cmc
rcrl
fcompl
fsubr
cld
sub
rol
sub
enter
lret
xor
xlat
sub
aaa
or
daa
leave
int
rclb
and
add
cmp
xor
and
push
adc
and
or
adc
sbb
imul
push
jb
outsb
outsl
ja
cmp
jg
push
adc
inc
adc
add
outsl
jg
dec
add
jno
insl
dec
data16
imul
push
pop
dec
outsb
sbb
sbb
ja
push
pop
dec
dec
addr16
lods
movsb
lods
cmpsl
dec
mov
push
pop
push
mov
scas
pop
cmpsl
mov
movsb
dec
scas
mov
mov
mov
test
mov
cltd
cmpsb
jecxz
mov
hlt
icebp
lea
repz
mov
call
xchg
mov
icebp
lcall
mov
cwtl
int3
ret
loopne
call
repz
int3
ljmp
xlat
out
shl
out
enter
jmp
leave
aam
enter
cli
clc
add
ret
shll
aam
cmp
aam
push
add
fdivs
cmp
cmp
adc
add
cmp
cmp
or
popw
arpl
sub
adc
sub
sbb
gs
je
bound
je
push
mov
sub
movl
movl
mov
subl
push
xor
mov
add
mov
mov
subl
push
adcl
push
sbbl
test
movl
je
mov
mov
and
mov
mov
or
imul
andl
mov
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
xor
or
dec
mov
jmp
and
mov
xor
xor
xor
mov
mov
xchg
sub
mov
andl
push
xorl
call
xor
xor
xor
mov
mov
or
mov
mov
negl
mov
orl
xor
sbbl
add
cmp
movl
jne
inc
mov
xor
add
movl
jmp
test
test
mov
out
mov
push
cwtl
lret
jle
mov
jle
cmc
jmp
fstps
ret
shlb
daa
mul
std
cld
cs
rcr
icebp
enter
fcmovb
es
sti
lret
into
roll
xor
fcmovu
or
xor
les
xorl
pushl
push
adcl
call
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
xor
mov
xorl
xor
sbbl
add
movl
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
subl
mov
sbbl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
decl
mov
add
mov
movzwl
sub
mov
mov
mov
add
xor
movl
mov
mov
mov
mov
movl
cmp
movl
jbe
mov
addl
mov
xorl
add
adcl
mov
lea
adcl
push
pushl
addl
pushl
addl
call
mov
xor
mov
mov
xorl
xor
addl
add
cmp
movl
jne
mov
mov
inc
movl
cmp
jb
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
add
mov
mov
test
je
movl
mov
mov
inc
inc
sub
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
xor
xor
lea
mov
add
imul
cmp
je
mov
mov
mov
xor
mov
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
xor
add
imul
cmp
jne
mov
mov
jmp
mov
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
mov
mov
inc
inc
sub
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
mov
cltd
test
mov
mov
rorl
jle
jg
jle
inc
sbb
or
sbb
inc
inc
insb
push
imul
push
jge
jb
dec
jl
gs
jg
push
inc
inc
jg
dec
inc
inc
inc
pop
push
lods
cmpsl
test
pop
stos
push
mov
jle
push
mov
inc
mov
orb
mov
xchg
mov
mov
mov
lea
pushf
xchg
mov
call
lcall
jmp
test
xchg
sti
xchg
fwait
loop
repz
xchg
les
cmc
mov
lock
clc
sahf
out
xchg
xchg
stc
xchg
iret
out
xchg
in
loopne
into
clc
jmp
rcr
rol
hlt
out
icebp
imul
ret
sub
divb
cmc
cmp
aad
sub
ss
cmp
xor
add
aas
add
lret
and
cmp
and
adc
ss
push
fcmovnu
ds
aam
sbb
xor
adc
imul
sub
aaa
je
jp
punpckhbw
cmp
add
push
sbb
sbb
arpl
adc
sbb
inc
pop
movq
jo
jo
jg
push
push
jge
movsl
fs
ja
jle
mov
dec
jno
pop
mov
lods
stos
jl
jbe
mov
mov
cmpb
dec
mov
cmpsl
lcall
stos
mov
pop
pop
mov
in
movsb
mov
sub
out
xchg
sti
xchg
in
fwait
shl
notl
fwait
xchg
mov
xchg
out
call
fwait
popl
loopne
sti
xchg
sub
in
loope
in
xchg
out
repz
into
int3
push
fmulp
and
fcom
aad
and
aad
sti
das
leave
sub
xor
repnz
fidivrl
xlat
test
cwtl
fwait
adc
sbb
mov
pushf
cmpb
push
jg
jle
xor
sarl
and
xor
pop
xor
adc
xor
int
or
xor
xor
xor
fsubs
es
pusha
data16
or
insb
xor
add
cmp
sbb
outsl
outsl
cmp
bound
pop
jns
push
dec
addr16
dec
inc
insl
inc
inc
imul
pop
pop
jno
push
jb
sbb
outsl
inc
movsl
lods
mov
inc
imul
movsl
mov
dec
push
scas
dec
mov
movsb
push
cmpsl
cmpsl
pop
mov
test
test
test
xchg
lods
mov
xchg
xchg
mov
pop
movsl
mov
pop
mov
xchg
mov
loop
in
clc
mov
jmp
negl
lcall
xchg
xchg
loopne
mov
in
hlt
xchg
icebp
mov
mov
xchg
popf
mov
iret
mov
ljmp
lock
clc
int
loopne
lahf
iret
fcmovnb
jmp
shr
int
fisubs
xor
rcl
sarl
fnstenv
xlat
das
xor
cmp
int
ds
ret
fiaddl
push
push
adc
lret
cmp
shlb
add
cmp
xor
xor
xor
pusha
adc
cmp
push
outsb
pop
sbb
or
xor
imul
sbb
sbb
sbb
pop
dec
sbb
dec
sbb
or
insl
dec
sbb
push
pop
dec
pop
arpl
jge
imul
outsl
mov
jl
push
inc
mov
dec
push
mov
jns
jl
mov
mov
cmpsb
mov
mov
test
xchg
push
mov
out
mov
mov
xorl
test
mov
mov
xchg
in
repnz
mov
mov
xchg
xchg
ljmp
dec
add
jg
jle
orl
nop
lcall
xchg
ret
cwtl
test
cltd
test
rcll
into
hlt
rcr
fyl2xp1
in
into
icebp
and
fcmovnbe
in
fdivr
fdivr
jmp
int
and
ror
ret
cmp
lret
and
fidivrl
cli
aaa
xor
fimull
daa
cmp
sub
add
unpckhps
sub
fcoml
and
and
adc
pusha
and
sbb
push
imul
adc
pusha
adc
imul
or
arpl
or
jnp
add
inc
push
insl
bound
adc
addr16
pop
push
push
jne
push
dec
jg
pop
je
je
pop
imul
dec
push
mov
js
pop
mov
orl
push
addb
inc
mov
push
pop
dec
xchg
xchg
xchg
mov
mov
mov
popf
mov
cmpsl
mov
pushf
out
out
sub
mov
mov
xchg
lcall
xchg
ljmp
nop
jecxz
std
pushf
out
loop
call
call
loope
out
loope
vpsubusb
lahf
and
clc
pushf
lds
frstpm(287
and
fisubrs
and
div
and
and
ds
leave
cmp
shrb
das
clc
ror
ffree
xor
lret
es
add
or
add
sub
sub
aaa
pop
push
das
sbb
cmp
adc
fs
push
add
imul
sbb
pcmpgtw
cmp
sbb
jo
sbb
inc
imul
addr16
js
jb
addr16
inc
jne
push
gs
jbe
gs
jno
jnp
push
inc
jb
pop
ja
inc
pop
jl
pop
scas
dec
jb
outsb
jae
inc
dec
lods
jbe
push
movsl
mov
test
cltd
dec
sbb
xchg
mov
xchg
test
pusha
call
sarb
mov
mov
pop
mov
orl
lcall
in
mov
in
xchg
mov
test
xchg
movsb
mov
mov
mov
jmp
in
cltd
mov
bnd
out
test
mov
cltd
fwait
lret
std
out
shr
loope
ret
loop
rcrb
xchg
lret
fcmovnbe
and
hlt
popf
ret
sar
in
iret
fld
int
cs
icebp
int3
ror
stc
sub
fdivr
add
xor
push
aam
and
and
or
add
shll
cmp
rcrb
fdivrl
push
fsubs
sbb
sbb
sbb
or
bound
jbe
sub
xor
jle
or
or
aas
push
cmp
dec
jns
cmp
inc
add
or
push
inc
push
sbb
outsl
push
sbb
mov
jb
test
pop
addr16
pop
push
lods
stos
push
push
push
inc
mov
pop
stos
push
pop
pop
push
push
stos
mov
inc
addb
movsl
mov
pop
mov
pop
mov
cwtl
mov
mov
jmp
mov
xchg
mov
mov
mov
mov
hlt
in
sti
cmp
xchg
lcall
out
lcall
sahf
sahf
loopne
mov
loope
lret
rorb
in
call
lret
xchg
cwtl
clc
xchg
push
mov
push
or
mov
add
push
inc
mov
movl
adcl
mov
or
xor
subl
mov
xorl
add
mov
incl
mov
addl
xor
add
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
imul
mov
sub
xor
mov
pop
ret
xchg
xchg
xchg
mov
in
add
xor
cvtps2pi
jle
jg
jle
loopne
jecxz
aam
sub
not
lret
ljmp
into
repz
repnz
daa
cs
cmp
clc
add
inc
aam
ffreep
paddusw
daa
or
xor
rorb
or
cs
or
push
adc
xor
aas
popa
or
sbb
sbb
pusha
or
aas
bound
or
addr16
adc
adc
aas
outsb
jo
gs
adc
or
pop
or
sbb
dec
inc
je
push
dec
adc
jns
push
sbb
inc
pop
inc
pop
addr16
pop
inc
outsl
inc
outsb
pop
cmpsl
pop
push
push
mov
jne
inc
jne
mov
inc
dec
pop
mov
mov
pop
push
push
xchg
test
lods
mov
mov
push
lods
mov
pop
mov
xchg
mov
movsb
orl
repnz
mov
nop
mov
ret
addb
stc
out
hlt
loop
sti
loop
rol
out
jmp
in
xchg
int
rorl
mov
loop
clc
ljmp
clc
out
cli
sub
xlat
and
out
sti
lds
lret
repz
sub
ds
xor
rcr
fcompp
xor
rolb
cmp
lret
fcoml
cmp
xor
xor
push
int
adc
es
aam
xor
sbb
adc
pusha
or
or
cmp
add
add
add
pop
cmp
fs
sbb
outsl
imul
push
dec
jo
gs
dec
pop
sbb
sbb
inc
addr16
mov
inc
imul
inc
inc
stos
dec
insl
mov
jne
inc
pop
mov
inc
push
push
mov
inc
mov
mov
pop
stos
test
xchg
test
mov
fwait
mov
mov
cwtl
mov
in
mov
mov
ljmp
in
sbb
jle
jg
jle
mov
notb
xchg
mov
jmp
in
ret
test
scas
xchg
hlt
loopne
test
imul
mov
mov
std
sti
hlt
ror
mul
stc
enter
out
xchg
bnd
lahf
in
cld
and
ficoms
and
fcom
cli
fsubp
sub
xor
ret
xor
sub
xlat
cs
and
std
sub
aad
cmp
lret
aam
cmp
int
sub
xor
and
daa
xor
shrl
xlat
sbb
sbb
aaa
fisubs
and
adc
sbb
aaa
arpl
or
add
adc
pusha
pop
aaa
adc
inc
inc
jb
insl
jno
cmp
jbe
gs
add
push
insl
packssdw
jbe
fs
jbe
push
sbb
jb
sbb
push
jo
jge
cmpsb
pop
cmpsb
inc
addr16
dec
jns
jb
push
test
test
jo
dec
push
dec
push
pop
dec
mov
pop
lods
pop
push
pop
push
pop
mov
lods
mov
xchg
push
nop
xchg
xchg
test
stos
mov
xchg
test
test
xor
in
notb
cli
in
hlt
mov
mov
xor
lcall
cltd
ret
in
repz
div
fistl
nop
enter
iret
int3
aad
cli
sub
and
sti
lock
xlat
test
icebp
int
sub
cld
aaa
enter
add
fnstsw
cmp
or
ss
and
add
push
cvtpi2ps
sub
fidivs
cmp
xor
sbb
imul
add
jo
ss
imul
jb
add
pop
adc
inc
dec
sbb
dec
sbb
jne
addr16
imul
jno
xchg
mov
fwait
xchg
inc
pop
cmp
test
jecxz
scas
xchg
orl
sbb
push
stos
scas
jnp
pop
mov
mov
mov
mov
jne
lods
mov
mov
mov
mov
mov
mov
xorl
mov
mov
mov
mov
mov
mov
stc
hlt
lcall
pushf
mov
sub
scas
loope
jmp
xchg
in
repnz
jecxz
mov
mov
sahf
lahf
cwtl
in
icebp
in
not
xchg
int
call
enter
aam
stc
sub
sub
shr
in
into
leave
rcr
sub
fadd
and
ss
aam
std
cmp
iret
sub
xor
xor
rorl
fcmovu
sub
es
add
daa
rcl
xor
cmp
aaa
or
or
add
pop
cmp
add
or
cmp
adc
adc
or
imul
adc
push
push
inc
popa
dec
push
inc
outsb
push
sbb
sbb
push
dec
js
inc
jle
push
jp
arpl
pop
mov
mov
insl
cmpsl
movsl
push
inc
cmpsb
test
pop
mov
jle
mov
stos
pop
push
pop
orl
inc
mov
mov
movsb
mov
xchg
xchg
mov
xchg
movsb
mov
mov
test
out
mov
loopne
idivb
notl
lcall
notb
in
clc
mov
repz
loope
xchg
call
lret
lea
into
ror
cli
jmp
loop
rcr
and
and
ljmp
sub
repz
and
sub
fld
stc
ljmp
and
or
fmull
sub
aam
ss
xchg
mov
mov
add
test
out
mov
loopne
std
fwait
push
jle
push
jg
jle
push
adc
adc
add
adc
sbb
and
and
xor
pop
push
jnp
adc
jnp
pop
insl
adc
jno
jne
dec
imul
dec
or
insb
pop
pop
push
dec
jle
insl
dec
pop
push
pop
mov
jnp
inc
mov
jae
push
inc
dec
inc
je
dec
cmpsl
inc
pop
stos
mov
subb
pop
mov
mov
mov
push
fwait
xchg
mov
push
pop
xchg
mov
mov
in
ljmp
in
lock
xchg
out
jmp
xchg
xchg
cld
mov
scas
mov
cli
in
jecxz
cmpb
cld
lds
jmp
enter
xchg
in
fcomp
sar
cltd
ret
shl
cmc
and
aad
into
in
fldcw
cs
sub
int3
aaa
lret
divl
cmp
sub
cmp
xor
aam
sarl
fsubrs
cmp
mov
fcmovbe
shll
or
add
xor
aas
xor
or
add
das
jbe
arpl
or
cmp
sbb
sbb
add
inc
cmp
fs
inc
dec
arpl
jae
dec
jae
popa
or
imul
je
push
pop
jle
jbe
jbe
cmpsl
scas
gs
pop
dec
stos
jb
outsl
push
push
dec
lods
inc
mov
pop
mov
push
cmpsb
mov
mov
movsl
cmpsb
pop
pop
mov
lea
adcb
pop
mov
mov
cmpsb
stos
sbbl
cmpb
out
stc
xchg
pushf
mov
std
ret
xorb
in
in
nop
out
lock
loop
in
std
test
xchg
xchg
mov
cltd
fwait
lahf
lcall
icebp
mov
dec
mov
jle
jle
rcrb
aad
iret
repz
and
aam
jmp
repz
lds
aam
and
sub
fmulp
sub
das
add
sub
es
fildll
iret
shrb
cmp
add
or
aaa
pop
rcl
adc
sub
xor
sbb
sbb
cmp
outsb
rdmsr
add
mov
sub
sbbl
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
or
mov
sub
mov
push
add
mov
push
sbb
xor
xor
or
xor
add
or
mov
add
mov
mov
movl
xor
sbbl
movl
sbbl
movl
add
jmp
xchg
test
xchg
mov
mov
lret
jle
test
jle
xor
pop
sub
and
add
fldl
adc
xor
or
adc
aaa
aaa
popa
push
sub
add
jp
movl
cmp
movl
jne
mov
mov
movl
mov
movl
mov
mov
mov
mov
mov
jmp
xchg
adcb
nop
mov
pushf
popf
loope
out
lahf
xchg
dec
add
jle
test
jle
adc
add
jge
sbb
ds
push
sbb
insb
or
addr16
jb
inc
ja
gs
push
inc
push
jg
sbb
sti
xor
add
movl
jne
and
mov
or
andl
movzwl
xor
mov
adcl
mov
movl
sub
movl
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
xor
mov
sub
mov
mov
movzwl
and
mov
or
movl
add
movl
mov
sub
xor
or
mov
subl
sub
add
movl
mov
movl
mov
cmp
movl
je
mov
mov
orl
xor
incl
xor
lea
mov
sbbl
xor
div
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
xor
andl
sub
movl
cmp
jne
mov
add
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
mov
xor
add
add
ror
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
pushl
pushl
call
jmp
mov
xchg
addl
and
lea
insb
lret
jle
test
jle
inc
push
movsb
imul
pop
inc
lods
je
jne
push
pop
test
push
pop
addb
push
xchg
test
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
cltd
xchg
iret
adc
in
in
jecxz
pushf
pop
ficomps
jle
jg
jle
cs
pop
imul
jbe
dec
jge
jns
je
inc
or
jno
pusha
inc
jne
push
dec
jbe
dec
pop
push
dec
mov
pop
push
addr16
scas
dec
jns
jle
pop
lods
mov
inc
jno
jnp
mov
push
scas
mov
mov
pop
lods
movsb
mov
dec
fwait
pop
cltd
mov
mov
mov
xchg
xchg
stos
jmp
lcall
xchg
cmc
xchg
mov
cwtl
shl
mov
call
cmc
mov
mov
mov
cmc
rorl
lret
call
out
fwait
std
rcrb
out
ficompl
daa
cli
in
aaa
iret
lds
shl
imull
idivb
xor
cmp
xor
fldcw
xor
sub
into
cs
int
xlat
adc
add
xor
or
or
sbb
sbb
outsb
or
bound
or
adc
xor
push
xor
ja
inc
inc
pusha
adc
sbb
jnp
dec
inc
inc
inc
inc
inc
or
push
jo
jp
gs
jge
insb
addr16
dec
je
pop
inc
cmpsl
bound
stos
jb
jle
push
pop
scas
jnp
outsl
mov
xorb
inc
push
pop
mov
mov
movsb
mov
push
mov
fwait
push
pop
mov
mov
mov
jecxz
mov
lock
lea
mov
mov
mov
mov
xchg
mov
mov
mov
out
mov
in
iret
std
cld
lock
cld
lock
int
jmp
fxch
aad
lock
cli
enter
call
orl
loop
pushf
lea
pop
jle
push
jg
jle
call
daa
and
sub
lret
fnsave
fidivrl
and
aam
cmp
int3
adc
pop
add
sbb
cmp
cmp
cmp
sub
xor
and
sbb
push
pushw
pop
push
pop
cmp
outsl
adc
jae
inc
jnp
imul
adc
sbb
inc
push
jno
inc
jbe
sbb
imul
dec
mov
jno
movsl
dec
scas
pop
mov
outsb
push
dec
mov
mov
mov
pop
jl
mov
pop
stos
mov
movsb
scas
scas
mov
push
adcb
popf
mov
jecxz
mov
addb
stos
sahf
lods
scas
loop
xchg
xchg
mov
adcl
nop
mov
sti
lea
cmc
xchg
int3
popl
mov
lret
shl
lret
pushf
popf
aam
stc
popf
sar
out
lret
mov
sti
lret
shl
icebp
cmp
rcl
in
fstp
rcr
add
or
xor
sub
sub
xlat
iret
das
ss
aas
cmp
push
add
and
and
adc
ja
adc
xor
xor
sbb
imul
pop
jne
popa
jbe
gs
sbb
or
dec
arpl
push
push
push
gs
pop
jl
inc
push
pusha
pop
jb
movsb
inc
dec
test
inc
mov
jo
dec
mov
lods
jle
stos
sbbl
addl
pop
test
movsb
mov
mov
cmpsl
lahf
pushf
mov
lcall
mov
sub
mov
mov
mov
cwtl
mov
repz
in
out
ret
dec
sahf
pop
jle
push
jg
jle
xchg
nop
lcall
jecxz
test
cltd
ljmp
div
incb
lcall
div
rorl
repnz
xchg
leave
cltd
rol
xlat
loopne
popf
shl
lret
enter
int3
and
lret
test
mull
xor
cli
xor
aas
filds
lds
aas
sub
sub
fistpll
cmp
das
wrmsr
lret
rcl
adc
adc
filds
add
add
xor
xor
add
cmp
xor
adc
pop
sbb
gs
sbb
push
movq
jb
inc
add
je
jle
add
insl
jb
jno
jb
outsl
push
inc
push
pop
jae
dec
dec
jb
pop
dec
bound
mov
jp
dec
pop
pop
stos
jge
mov
dec
mov
mov
dec
mov
mov
mov
dec
mov
dec
mov
orl
cwtl
mov
xchg
mov
cmpb
mov
scas
ljmp
xchg
call
ljmp
repnz
clc
popf
lods
in
out
in
in
lahf
stc
xchg
sti
stc
loope
fwait
in
in
xchg
loope
ljmp
nop
rol
int
rcl
loope
int
cld
shr
leave
pushf
cwtl
std
shl
lock
cld
jmp
ret
jmp
xor
rol
xor
ds
leave
xor
ret
xor
ss
aad
and
leave
add
or
adc
or
adc
sbb
and
cmp
sub
popa
outsb
insb
fs
data16
or
adc
jb
xor
jno
or
jns
sbb
cmp
imul
imul
ja
jo
adc
jb
dec
mov
pop
dec
cmpsl
jp
scas
cmpsl
jae
xchg
mov
push
pop
int3
stc
mov
loope
xchg
popf
loopne
ret
adc
mov
jg
jle
push
je
mov
pop
scas
jns
mov
xorb
mov
push
dec
push
lods
mov
cwtl
lods
mov
pushf
mov
mov
scas
lcall
subb
xchg
xchg
loop
rol
xchg
repz
test
test
cwtl
sti
sahf
clc
rol
cltd
jecxz
hlt
lahf
cltd
test
jecxz
into
sahf
iret
out
in
ret
in
fwait
negl
int
and
sti
test
out
ret
and
sub
das
ret
xlat
and
shlb
ror
shll
filds
xor
xor
and
leave
or
cmp
cmp
and
rcl
xor
fldt
cmp
bound
cmp
push
xor
and
add
push
bound
outsl
or
imul
jl
cmp
sbb
insl
add
js
jl
dec
sbb
popa
or
push
dec
sbb
jp
insl
bound
insb
jp
movsl
inc
mov
dec
outsb
insb
jle
stos
dec
mov
dec
dec
push
dec
mov
dec
mov
pop
pop
scas
mov
pop
mov
cmpsl
movsb
mov
mov
test
mov
mov
mov
cltd
sahf
out
mov
in
mov
hlt
repz
icebp
pushf
stc
idivb
xchg
sti
mov
jmp
sti
mov
popf
xchg
xchg
xchg
in
repz
notb
test
leave
mov
repnz
ljmp
aam
in
fcmovb
loopne
stc
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jne
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
or
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
mov
adc
lea
sbb
mov
mov
mov
mov
and
mov
push
and
lea
add
mov
mov
push
movzwl
adc
push
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
mov
mov
mov
mov
add
mov
subl
xor
mov
orl
xor
sbbl
xor
add
xorl
add
movl
div
mov
movl
cmp
movl
je
xor
or
and
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
add
mov
mov
cmp
je
mov
xor
add
mov
mov
mov
xor
add
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
lcall
loopne
repz
nop
shr
pop
enter
jle
jle
xchg
mov
pop
pop
xchg
mov
lcall
lods
call
xchg
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
xchg
sbbb
cmp
testb
xchg
jle
cmpsb
jle
jle
out
cwtl
mov
call
xchg
cli
call
mov
lock
loop
mov
jmp
loope
les
cmp
test
rcrb
sub
decl
mov
dec
xchg
addl
enter
jle
jle
cmc
in
repnz
rcll
cmc
stc
int3
not
popf
loop
sub
ret
xor
sub
shl
xlat
into
nop
lea
in
loopne
das
out
mov
dec
loope
cmp
jle
push
jg
jle
cwtl
call
int
repz
shrl
sti
cmp
cmp
enter
cmp
and
push
xor
add
adc
push
adc
ficomps
aam
adc
bound
addr16
pop
sub
aas
push
xor
sbb
xor
syscall
xor
imul
pop
sbb
inc
adc
inc
sbb
adc
push
imul
push
dec
adc
sbb
push
outsl
push
jne
inc
je
dec
stos
inc
inc
jp
mov
outsl
cmpsl
jnp
pop
movsl
jne
jg
mov
push
addb
pop
inc
cmpsl
orb
xchg
mov
mov
mov
xchg
mov
xchg
mov
mov
xchg
mov
call
mov
mov
lea
std
repz
cmc
xchg
sbbl
mov
lret
enter
loop
clc
cltd
xchg
dec
dec
iret
out
fstps
daa
enter
ljmp
lret
out
aaa
ror
cli
les
fcos
rcl
xor
add
fdivs
lret
xor
lds
xor
ss
xor
xor
adc
cmp
or
cmp
add
pop
jbe
adc
jns
extrq
xor
arpl
push
arpl
adc
push
pusha
pop
pusha
push
dec
dec
imul
inc
jp
jl
mov
dec
dec
gs
pop
stos
cmpsb
dec
mov
dec
pop
pop
mov
mov
pop
cmpb
pop
inc
push
push
mov
mov
xchg
mov
push
nop
mov
mov
sbbl
loopne
cwtl
lcall
mov
lods
mov
cltd
xor
ds
xchg
lock
bound
xor
jle
push
jg
jle
sbbl
sti
fwait
mov
cld
rcrb
mov
in
pushf
cwtl
icebp
sti
loop
ret
lds
shr
ret
xchg
rcll
call
shlb
clc
fld
in
sub
fdivrp
and
fsub
fdivl
das
sub
xor
rcl
cmp
cmp
ss
xor
cmp
fisttpll
das
das
xor
and
rcl
pop
or
sub
cmp
adc
xor
popaw
sbb
bound
pop
sbb
pop
add
jnp
or
jo
cmp
sbb
arpl
jnp
adc
sbb
jge
or
push
gs
jno
fs
push
inc
inc
pop
jbe
sbb
jno
je
mov
insb
dec
jb
dec
push
push
mov
js
dec
mov
mov
pop
pop
inc
movsl
subb
mov
dec
mov
push
sahf
popf
test
mov
in
cmpsl
stos
out
mov
mov
mov
xchg
lahf
lea
mov
test
in
out
mov
negl
mov
lret
shl
cmc
xchg
negl
fstps
fcmovnbe
clc
enter
les
das
out
enter
leave
sub
int
aad
int3
cmp
into
ret
rcr
pop
les
add
fnstcw
or
shlb
xor
xlat
rorb
enter
push
cmp
or
sbb
push
pop
push
cmp
push
jbe
add
xor
add
sbb
adc
inc
or
jp
jle
dec
inc
inc
push
sbb
push
adc
push
pop
sbb
push
dec
inc
sbb
insl
push
dec
jb
pop
gs
jne
mov
xchg
mov
xchg
mov
repnz
div
sbb
scas
sub
cmpsb
jle
push
jg
jle
jge
pop
inc
inc
inc
mov
pop
movsl
jnp
cmpsb
mov
jle
pop
sbbl
pop
stos
mov
movsl
pop
test
pop
mov
pop
xchg
cwtl
dec
mov
nop
mov
mov
test
out
xchg
idivl
lcall
lods
ljmp
notb
cmc
pushf
xor
loope
enter
jmp
jecxz
shl
fcmove
in
xchg
enter
sti
shl
fsub
cmc
out
xor
iret
ljmp
call
cmp
sub
rcr
shl
frstor
fnsave
and
xor
sub
add
or
fdivrl
xor
fcmovnu
adc
add
and
push
sbb
and
cmp
aas
or
aaa
jb
push
gs
adc
or
jg
jp
push
sbb
je
or
push
imul
inc
insb
jle
push
adc
dec
adc
jp
sbb
outsl
pop
push
adc
mov
dec
dec
mov
inc
insl
mov
jae
pop
stos
push
pop
jge
andl
addb
mov
dec
mov
push
push
mov
pop
test
cwtl
mov
mov
in
mov
mov
out
xchg
xchg
std
cwtl
in
mov
sbbb
mov
mov
in
out
repz
shr
clc
out
lcall
stc
jecxz
xchg
in
not
shr
shl
into
enter
sti
rcr
in
pushf
ljmp
fisubs
and
and
and
repz
enter
xor
ds
sub
int
add
xor
sarb
or
sub
fisubs
aas
or
push
add
xlat
adc
adc
xor
cmp
xchg
xchg
das
mov
orl
daa
ret
jle
push
jg
jle
sysret
pusha
arpl
sbb
bound
bound
das
pusha
push
jno
adc
aas
jb
jb,pt
cmp
inc
bound
push
sbb
jle
insb
sbb
inc
push
adc
inc
inc
imul
pop
push
push
push
jo
mov
push
dec
dec
scas
outsl
inc
stos
lods
push
test
pop
mov
push
mov
test
pop
xchg
push
addb
mov
sbbl
lea
test
mov
out
mov
mov
ljmp
mov
popf
lret
xchg
out
xchg
xorb
cltd
mov
xchg
addl
in
lahf
in
iret
jmp
out
xchg
aad
call
xlat
aam
xchg
clc
popf
rcl
sahf
popf
rcr
daa
enter
stc
sub
and
das
iret
daa
out
aam
iret
shl
xor
cli
icebp
aad
fstp
rol
cld
add
add
ud2
ficoms
daa
lret
add
or
sbb
sbb
xor
adc
fnstsw
adc
and
sub
insb
sub
or
jbe
or
adc
jo
inc
arpl
push
inc
jne
push
jnp
pusha
jg
fs
outsl
pop
fs
gs
jb
mov
jo
mov
mov
mov
insb
mov
dec
movsl
lods
pop
test
dec
pop
mov
cmpsl
pop
push
scas
mov
test
mov
xchg
mov
pop
xchg
mov
test
lods
out
mov
xchg
cwtl
div
mov
mov
xchg
xchg
lahf
jecxz
mov
call
cmc
xchg
mov
adcl
cld
mov
in
ljmp
mov
lcall
xchg
lahf
out
out
jne
mov
jle
jle
jle
xchg
not
iret
repnz
shlb
and
neg
clc
aam
and
jmp
out
xor
fcmovb
sub
cs
xlat
cmp
add
xlat
roll
mov
push
movl
cmpl
je
pushl
andl
mov
addl
pushl
mov
orl
pushl
movl
call
movl
jmp
xchg
addb
loope
dec
dec
xchg
loop
hlt
sub
adc
mov
jle
jle
jle
and
std
cmc
xor
xor
xor
fbstp
fadds
and
aas
fsubrl
cmp
sub
aad
adc
sbb
cmp
cmp
and
pop
cmp
xor
imul
inc
or
push
movl
mov
movl
mov
mov
mov
mov
not
push
mov
movl
cmp
mov
mov
je
xorl
mov
xorl
xor
subl
xor
orl
lea
subl
xor
movl
cmp
jne
movl
jmp
adcl
lea
mov
xor
add
xorl
mov
mov
xor
xor
mov
mov
mov
mov
mov
add
push
pushl
push
pushl
call
mov
mov
pop
pop
leave
ret
mov
cltd
cltd
das
pop
shll
xchg
repz
lds
jle
leave
iret
pop
adc
lret
adc
das
xor
adc
xor
aam
cmp
push
add
xor
insb
pusha
or
adc
pop
or
adc
sbb
outsl
push
jne
adc
gs
inc
or
inc
dec
inc
jb
jo
inc
outsb
push
pop
jbe
jb
sbb
ja
inc
pop
arpl
jbe
test
pop
cmpsl
push
mov
mov
push
stos
js
mov
mov
push
mov
sbbb
mov
dec
mov
mov
mov
mov
pushf
mov
test
lods
mov
popf
xchg
repz
xchg
ljmp
repnz
nop
cmc
xchg
mov
hlt
call
loopne
mov
sahf
orl
shr
mov
call
lock
jmp
fstp
fcomip
popf
xlat
mulb
loope
cld
std
sub
aad
sti
sub
int
daa
iret
enter
das
sub
cmc
aam
ss
add
aas
and
pop
sub
adc
xor
xlat
wbinvd
cmp
popa
fisubs
sbb
cmp
sub
xor
or
outsb
adc
push
cmp
jnp
or
adc
sbb
adc
pusha
add
dec
arpl
jp
sbb
add
push
push
jae
outsl
jnp
dec
insl
adc
push
sbb
jge
inc
push
jne
gs
test
jl
inc
jae
mov
test
push
jne
mov
jge
jl
pop
mov
push
movsl
movsl
pop
mov
pop
pop
adcb
dec
dec
pop
andb
scas
mov
in
mov
mov
sahf
mov
test
test
mov
xchg
popf
out
mov
xchg
idiv
repz
sti
mov
xchg
xchg
xchg
fldcw
icebp
in
mov
sbb
in
jle
push
jg
jle
out
test
call
popf
out
loop
jmp
out
sahf
fyl2x
lahf
leave
xchg
rol
fdivr
repz
popf
fsub
int
ret
es
cmc
xor
cli
cmp
fisubrl
sarl
daa
int3
fldl
cld
rolb
sub
lret
add
fstl
or
xlat
add
or
pusha
add
cmp
fdivl
add
data16
popa
arpl
jo
push
jno
push
jp
jo
cmp
pop
ja
inc
js
inc
jne
je
je
insl
sbb
dec
inc
inc
dec
jno
push
jo
dec
pop
push
push
jl
push
inc
jp
jae
push
addr16
push
pop
jl
dec
fs
insl
insl
dec
lods
jno
scas
pop
dec
mov
dec
push
test
pop
mov
pop
mov
dec
xorl
loop
mov
lods
mov
cmpl
cltd
fwait
jmp
divb
mov
call
xchg
xchg
loopne
stos
xchg
mov
xchg
out
out
ljmp
sar
mov
ret
pop
cld
jmp
rcl
xchg
lcall
and
cld
std
loope
jmp
sub
out
stc
iret
repnz
shl
repz
xlat
fdiv
int3
and
xor
aad
cmp
cmp
fisubrl
cmp
les
or
or
ffree
adc
or
cs
ds
sub
faddl
or
pop
push
arpl
data16
add
outsb
xor
imul
sbb
adc
bound
add
or
or
push
or
jbe
imul
jp
sbb
dec
jle
jbe
bound
movsb
cmpsl
cmpsl
inc
outsl
pop
push
imul
inc
jbe
dec
push
pop
dec
movsl
push
jle
push
pop
pop
pop
test
inc
test
pop
mov
test
mov
in
xchg
out
in
loopne
inc
jmp
jle
push
jg
jle
mov
mov
mov
stos
mov
mov
and
mov
loope
xchg
in
test
cwtl
mov
jmp
out
std
xchg
lock
xchg
cld
lcall
cld
and
lret
cltd
cli
int
mov
loop
iret
mov
in
clc
hlt
in
in
sar
xchg
es
hlt
and
out
fcmovnb
lret
and
xor
int3
and
lret
cs
into
cmp
into
xor
xor
lret
cmp
es
fiadds
das
xor
adc
and
and
sub
adc
adc
xor
cmp
fdivl
insl
add
push
sbb
je
push
cmp
sbb
sbb
jnp
sbb
sbb
adc
dec
sbb
dec
sbb
punpckhdq
push
jno
adc
js
push
jp
jle
pop
inc
dec
dec
inc
arpl
jle
dec
pop
dec
movsl
inc
dec
inc
inc
dec
test
mov
mov
mov
mov
inc
push
dec
push
lea
mov
mov
push
pop
xchg
mov
mov
mov
idiv
in
mul
repz
pushf
xchg
sti
cmp
mov
mov
mov
mov
addl
rorl
mov
mov
sar
xlat
idiv
in
loop
cltd
into
cli
loop
in
and
in
in
int3
ror
ror
rol
xlat
fcmovnbe
sti
lret
into
ss
stc
fcomp
and
fcmovu
and
lret
adc
xor
or
adc
sub
add
xor
push
and
insb
add
push
addr16
sub
insl
or
jne
gs
jb
arpl
inc
jle
xchg
xchg
loop
movsb
mov
sub
sub
push
jg
jle
sbb
add
dec
jns
jo
jl
dec
pusha
inc
push
sbb
jg
jg
push
pop
data16
pop
pop
arpl
dec
dec
dec
pop
inc
movsb
movsl
inc
mov
jne
dec
ja
dec
mov
mov
dec
pop
test
xchg
pop
xchg
push
xchg
mov
mov
loop
pop
xchg
pop
stos
jmp
loope
mov
test
mov
mov
mov
xchg
mov
repnz
cld
sbbb
mov
xchg
xchg
mov
clc
xchg
fwait
shl
rcrl
loop
cli
into
xchg
call
xchg
lret
in
aam
in
fsub
cld
loop
fistpl
fldt
call
in
out
dec
rcl
les
and
fdiv
sar
cli
and
add
les
ss
lret
or
push
sub
sub
fistl
aam
add
ds
add
cmp
imul
add
data16
sbb
add
xor
push
bound
add
add
bound
sbb
outsb
inc
dec
or
inc
pop
jns
jb
jg
sbb
sbb
jge
cmpsl
sbb
mov
dec
push
inc
mov
stos
mov
dec
test
mov
inc
cmpsl
push
xorl
push
pop
mov
test
mov
scas
mov
mov
call
mov
mov
imulb
mov
mov
jmp
mov
nop
icebp
repz
testb
loop
cli
pushf
hlt
out
cwtl
test
mov
out
cltd
int3
std
popf
into
test
repnz
leave
fcomp
cltd
idiv
int
std
loop
iret
rcr
cs
and
repz
sub
not
popl
fwait
xchg
pop
jle
mov
mov
clc
mov
sbb
jle
push
jle
jle
enter
cmp
ret
xor
enter
and
int3
cmp
fnop
shrb
aad
push
mov
sub
xor
push
xor
movl
sub
movl
adc
mov
decl
push
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
push
mov
and
add
add
mov
or
mov
xor
and
add
mov
mov
mov
movl
cmp
movl
jae
movl
jmp
sub
mov
mov
sbb
mov
xor
add
push
orl
mov
call
incl
movl
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
xor
add
movl
mov
movl
cmp
jae
movl
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
sbb
mov
mov
lea
adcl
addl
mov
mov
sbbl
xor
sbbl
mov
sub
xorl
add
movl
mov
movl
cmp
jae
jmp
mov
mov
mov
mov
imul
shr
xor
lea
orl
mov
add
and
mov
cmp
jae
mov
and
mov
mov
xorl
mov
xor
add
push
mov
xor
add
push
mov
add
push
mov
pushl
call
mov
mov
add
mov
xor
lea
cmp
jb
mov
mov
mov
add
mov
mov
xor
lea
mov
cmp
jb
mov
mov
mov
add
mov
xor
lea
mov
cmp
jb
mov
xor
add
pop
pop
mov
mov
pop
leave
ret
mov
mov
loop
mov
jecxz
in
out
orl
jle
sub
cmp
cmp
fcomps
push
sub
cmp
sbb
cmp
jb
or
aaa
xor
or
jo
cmp
outsl
jnp
pop
sbb
jge
pusha
add
jge
popa
ja
dec
push
dec
imul
jne
cmpsl
inc
mov
jne
pop
mov
jle
mov
inc
mov
lods
dec
dec
mov
dec
mov
pop
mov
push
push
mov
mov
cmpl
pop
andl
pop
stos
push
test
pop
popf
pop
pushf
loope
xchg
test
out
repnz
mov
test
mov
fwait
cmc
mov
xchg
repnz
mov
mov
xchg
out
mov
in
icebp
jmp
sti
out
in
jmp
int3
negb
out
lahf
fcom
es
stc
loop
repz
jmp
les
call
shll
fsubrl
ret
cmp
aaa
xor
cmc
clc
xor
int3
cmp
pop
lret
aad
lret
xor
push
and
sub
sbb
xor
adc
sbb
cmp
add
xor
cmp
adc
jae
cmp
inc
add
sbb
sbb
inc
or
add
or
insb
jo
jnp
pop
jl
mov
bound
dec
mov
popa
cmpsl
mov
cmpsb
mov
jnp
lods
mov
dec
mov
jp
inc
mov
mov
movsb
stos
dec
mov
dec
mov
push
stos
mov
fwait
scas
mov
mov
mov
out
ljmp
in
cmc
nop
mov
cmpl
lahf
ljmp
mov
test
xchg
lock
mov
std
std
vshufps
mov
xor
dec
icebp
test
mov
inc
mov
jle
jg
jle
dec
std
int3
into
shl
fxch
aam
xchg
negl
cld
pushf
shl
and
std
lret
iret
sub
and
sar
lret
cmc
sti
xor
sub
cmp
xor
and
or
sub
sarb
sbb
rolb
pop
or
push
aas
arpl
fs
imul
push
jnp
inc
jle
add
pusha
jns
jne
nopl
jae
outsb
jno
addr16
push
push
pop
jle
mov
data16
jno
pop
jne
push
inc
stos
push
inc
cmpsl
dec
pop
jnp
test
pop
dec
mov
mov
xchg
pop
pop
movsl
movsl
movsb
inc
lea
lahf
mov
pop
stos
mov
xchg
loopne
xchg
mov
xchg
icebp
fwait
lock
pushf
lock
lahf
and
cmc
in
cli
xchg
nop
cmp
idiv
std
mov
clc
repz
out
nop
mov
movl
xchg
ljmp
out
jmp
es
fsub
lret
call
fbstp
lret
shll
int3
fdivp
shrb
shrl
rol
cmp
and
lds
enter
shrl
rorl
bndstx
add
sbb
sbb
sbb
pusha
sub
gs
or
cmp
cmp
pop
add
or
or
outsl
jae
adc
or
add
bound
jg
outsl
outsb
addr16
outsl
adc
pop
pop
mov
jnp
cmpsl
inc
push
push
push
jle
dec
inc
inc
jb
mov
lods
dec
push
mov
mov
push
test
mov
scas
xchg
mov
push
push
mov
mov
cltd
cwtl
mov
dec
sbb
popf
pushf
xchg
adc
or
arpl
jle
movsb
xchg
mov
lcall
mov
jmp
out
mov
xchg
mov
xchg
mov
rclb
in
in
mov
jecxz
mov
nop
xchg
sti
jecxz
cli
sahf
mov
out
ljmp
in
fmulp
in
repz
shll
and
ljmp
jmp
and
out
sub
daa
xor
int3
icebp
shll
aad
icebp
cmp
xor
leave
stc
ret
ret
aaa
faddl
aaa
xor
or
ss
sub
int
fmuls
or
and
adc
sub
aas
sub
push
sub
imul
aas
jg
jae
jp
jae
adc
outsl
jp
push
addr16
push
insb
imul
gs
dec
dec
jne
jae
push
inc
jb
jo
mov
mov
jge
dec
inc
push
inc
mov
mov
inc
push
test
inc
push
mov
push
inc
xchg
xchg
mov
xchg
push
mov
mov
out
xchg
lods
xor
call
xchg
cli
xchg
xchg
cltd
sahf
xchg
sti
loop
xchg
xchg
out
xchg
pushf
nop
lods
xchg
jmp
mov
stc
xchg
xor
xchg
stc
test
sarb
leave
enter
in
jmp
les
sahf
fdivr
repnz
rol
leave
sub
sub
out
and
mulb
and
cs
ljmp
aad
ror
and
add
sub
fimull
enter
pop
or
push
adc
fcmove
das
adc
push
shlb
ficomps
xor
or
cmp
adc
push
cmp
je
adc
jbe
addr16
pop
pop
cmp
jg
add
pop
inc
add
inc
pop
jge
mov
cltd
sar
mov
jmp
in
lock
add
jle
dec
inc
inc
pop
dec
imul
je
dec
mov
jl
jns
push
cmpsb
dec
push
stos
dec
mov
test
js
pop
jnp
mov
mov
dec
mov
mov
pop
mov
mov
mov
movsl
mov
push
mov
mov
sahf
mov
mov
mov
lock
cwtl
lahf
lea
mov
mov
decl
xchg
xchg
test
cmc
test
test
icebp
out
in
cli
pushf
pushf
and
lcall
neg
xlat
int3
fcmovnu
shlb
shl
in
and
leave
shlb
das
xor
hlt
stc
rcr
cmp
ret
fisttpl
cmp
into
shlb
adc
xor
cmp
add
adc
add
or
sub
or
jae
jp
cmp
jb
inc
dec
push
sbb
outsl
sbb
jg
adc
inc
dec
pop
adc
jle
dec
inc
jl
pop
pop
jns
push
sbb
js
mov
test
jae
jno
push
dec
mov
mov
pop
jnp
jge
mov
mov
cmpb
xchg
mov
scas
test
mov
xchg
mov
mov
loope
mov
call
in
mov
lcall
xchg
mov
mov
mov
mov
cmc
xchg
out
call
mov
xlat
hlt
jmp
push
mov
sub
sbbl
movl
movl
mov
xor
movl
mov
mov
xor
inc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
and
mov
addl
push
orl
mov
xorl
xor
movl
sub
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
mov
adcl
push
mov
xor
negl
sub
movl
lea
movl
cmp
ja
mov
mov
adc
mov
push
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
xor
add
imul
add
mov
mov
mov
xor
sub
mov
mov
xor
sub
lea
cmp
jbe
pop
mov
xor
mov
pop
lea
pop
leave
ret
xchg
test
cltd
and
push
adcb
jmp
mov
jle
jg
jle
negl
loope
and
sub
int3
sub
stc
aaa
std
xor
lret
cmc
cmp
sub
add
sub
rcl
fsubs
push
xor
into
and
add
into
or
xor
add
adc
ficompl
cmp
data16
push
add
fs
xor
adc
outsl
adc
outsb
jo
sbb
jne
jnp
sbb
imul
adc
add
dec
outsb
outsb
outsb
bound
jnp
dec
push
inc
dec
outsl
pop
jbe
arpl
pop
sbb
push
inc
pop
push
inc
mov
movsb
mov
push
push
pop
scas
inc
push
dec
stos
addb
pop
addl
dec
test
mov
mov
nop
pop
mov
mov
movsb
mov
cltd
ljmp
test
cltd
lcall
cld
xor
mov
nop
sahf
mov
idivb
loope
cli
mov
pushf
into
pushf
iret
mov
cmc
mov
xlat
fwait
sahf
in
call
and
in
lock
in
sub
cs
rcl
sub
int3
xlat
fdivrl
lock
ret
cld
rcr
push
add
fsubs
xor
add
xlat
sub
sbb
xor
outsb
gs
add
adc
push
cmp
or
xor
sbb
adc
add
push
sbb
push
js
jo
jge
push
imul
jl
jo
jb
insl
inc
jge
sbb
inc
imul
dec
inc
mov
scas
push
scas
push
dec
sbbb
mov
mov
dec
pop
mov
lea
fwait
lods
lods
mov
mov
mov
xchg
popl
hlt
sbb
push
xchg
test
aam
mov
push
jg
jle
scas
jecxz
jmp
mov
loope
call
mov
xor
mov
clc
mov
out
xchg
mov
pushf
clc
sahf
inc
in
nop
pushf
jecxz
ret
in
ljmp
iret
hlt
xchg
rol
repnz
cltd
fcomp
sar
shr
shrl
fucomp
es
shll
lret
clc
not
sub
rcl
std
ret
cmp
sub
sub
fildl
into
adc
ss
cmp
xor
adc
xor
sub
pop
or
das
sub
outsb
das
xor
xor
push
cmp
jne
pop
outsl
outsl
adc
inc
sbb
add
push
pusha
pop
jb
jne
jo
dec
outsl
jne
push
adc
push
inc
inc
imul
inc
scas
jge
push
mov
dec
scas
mov
dec
scas
cmpb
push
pop
mov
dec
mov
push
mov
scas
mov
mov
mov
mov
sahf
xchg
mov
lods
mov
lcall
cld
stc
pushf
in
xchg
mov
xchg
mov
xchg
mov
cmc
mov
jecxz
xchg
mov
test
loopne
xlat
lahf
xchg
xchg
call
sar
int3
aad
daa
iret
xabort
fndisi(8087
ret
and
loope
leave
cs
cmp
sarl
shrb
add
fsubs
xor
fimull
aas
iret
and
cmp
pmullw
ucomiss
sub
addr16
sbb
and
cmp
adc
jo
xor
push
adc
xor
cmp
jle
inc
push
insl
jl
gs
sbb
bound
sbb
sbb
adc
pop
je
mov
mov
pusha
lret
out
loop
xchg
xchg
sub
mov
jle
push
jg
jle
mov
gs
test
scas
push
dec
jae
dec
mov
cmpsb
jbe
pop
mov
mov
xchg
pop
mov
pop
mov
push
subl
lahf
test
test
mov
popf
cmpsb
mov
fwait
loopne
sbbb
mov
in
xchg
jmp
repz
xchg
ljmp
jecxz
loop
mov
lcall
call
aad
fistl
cltd
aam
fcomip
shl
and
ljmp
bnd
xlat
sub
fldenv
icebp
xor
add
fidivs
aas
add
aad
daa
sub
and
fildll
int3
aas
or
and
add
fmuls
adc
sub
sbb
xor
xor
aas
data16
outsl
adc
xor
pop
jae
imul
insb
outsb
cmp
inc
je
dec
inc
push
inc
jne
outsb
jns
imul
dec
pop
jbe
pop
js
adc
pop
sbb
jns
pop
pusha
je
jno
popa
inc
pop
dec
dec
push
dec
jb
dec
dec
dec
test
jp
push
mov
push
inc
inc
pop
pop
mov
dec
pop
xchg
mov
mov
scas
mov
lcall
mov
mov
mov
movsl
lcall
mov
mov
lea
clc
loopne
bnd
in
ljmp
mov
movb
out
imul
rorb
repnz
in
shr
out
xchg
out
clc
rcl
popf
fcomp
shll
neg
leave
out
in
and
lock
int3
sti
hlt
and
xlat
cli
xor
fmul
rol
fisttpl
aad
enter
xor
xor
or
das
or
xchg
call
mov
in
mov
call
jle
push
jg
jle
adc
xor
sbb
sub
fnstsw
adc
fstps
daa
sub
jbe
xor
imul
xor
sbb
insl
insb
aas
jbe
jle
adc
dec
jle
outsl
dec
push
push
push
pop
outsl
jo
pop
jne
inc
jp
push
push
jnp
pop
cmpsb
dec
mov
push
dec
insl
jp
dec
jne
pop
pop
push
jl
push
mov
pop
pop
push
mov
pop
pop
mov
sbbb
mov
xchg
scas
cmpsl
pop
mov
mov
xchg
mov
mov
in
cmpsl
ljmp
out
hlt
mov
mov
mov
xchg
clc
mov
adcl
lcall
loopne
lock
jecxz
popf
out
nop
cmp
lcall
lret
xchg
ljmp
nop
jmp
rcr
and
cmc
fisubrs
out
jmp
sub
iret
lret
rcr
fcmovu
sub
fcmovu
add
add
ror
or
es
int3
or
and
aaa
add
or
pop
adc
xor
fnstsw
arpl
add
aas
outsl
push
bound
jo
or
push
push
jl
jb
jb
cmp
push
dec
inc
add
adc
push
jno
addr16
or
adc
dec
sbb
pop
push
js
gs
dec
stos
pop
test
mov
test
jne
pop
pop
dec
pop
dec
jne
dec
mov
push
dec
mov
pop
push
pop
mov
push
stos
mov
push
dec
mov
xchg
pushf
push
lcall
xchg
movsl
in
stos
xchg
mov
in
lahf
mov
in
mov
xchg
lock
xchg
stc
lock
out
icebp
xchg
test
cli
mov
out
sahf
cltd
loope
mov
mov
sub
sbb
push
xor
movl
movzwl
add
mov
movl
mov
add
andl
mov
add
push
pop
xor
lea
rep
call
xorl
mov
orl
movl
subl
andl
subl
cmpl
subl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
orl
add
push
mov
add
sbbl
push
mov
pushl
adcl
call
push
movl
mov
subl
xor
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
mov
add
push
mov
pushl
call
mov
xor
dec
xor
mov
cmpl
je
movl
push
mov
xor
add
push
mov
add
push
mov
pushl
call
pushl
call
mov
push
mov
xor
add
push
mov
add
push
mov
pushl
call
jmp
mov
cltd
mov
add
add
test
in
pusha
insl
jo
enter
jle
jle
sub
jp
ss
adc
jle
jg
cmp
cmp
inc
sbb
pop
pop
inc
or
adc
adc
insl
push
pop
inc
pop
push
imul
dec
jl
jg
insb
stos
test
dec
insb
mov
pop
leave
ret
xchg
test
mov
mov
testb
adc
jle
push
jg
jle
xchg
loopne
sub
rcl
leave
icebp
int
in
repz
in
int3
and
out
cmc
aam
ljmp
ret
cmp
test
aam
xor
cmp
std
add
and
or
rorl
sub
ficompl
sbb
aad
cmp
xor
sbb
push
sbb
xor
pop
sub
cs
adc
jae
jae
jno
pop
adc
add
sbb
pop
jb
adc
sbb
inc
add
inc
push
or
dec
dec
jno
sbb
pop
pop
sbb
pop
jae
cmpsl
jge
js
dec
dec
dec
dec
outsl
jle
inc
dec
push
push
cmpsb
push
dec
mov
mov
pop
js
push
push
mov
inc
mov
pop
dec
xchg
mov
stos
push
pop
mov
test
mov
subb
sahf
pop
pushf
stos
and
mov
mov
in
mov
xchg
cltd
xchg
mov
xchg
fwait
loope
loope
repz
lock
jmp
xchg
mov
hlt
nop
pushf
popf
clc
lock
shr
in
mov
leave
jmp
lret
jmp
in
rcll
lret
into
int
and
rcr
ljmp
xlat
das
aad
and
clc
es
aam
std
rol
and
sti
hlt
cld
sub
aam
add
add
fadd
push
cmp
add
add
pop
or
xor
cmp
adc
cmp
ss
cmp
and
gs
adc
cmp
imul
jo
jo
adc
sbb
dec
pop
sbb
or
insl
jge
inc
arpl
je
push
jp
push
mov
jae
stos
je
jp
dec
stos
pop
outsb
lods
inc
stos
push
inc
mov
push
test
mov
jg
jle
movsb
inc
stos
mov
mov
dec
xchg
dec
cmpsb
mov
mov
stos
xchg
call
out
or
jle
push
jg
jle
mov
lcall
pop
jecxz
lea
stos
mov
out
subl
xchg
mov
jmp
in
cmc
loope
rcrl
mov
lcall
xchg
popf
hlt
mov
std
pushf
sahf
in
call
lock
out
repnz
jmp
ret
cmc
icebp
lds
loope
out
std
das
fsubrl
sub
es
cmp
fcmovnu
cmp
xor
add
or
aaa
leave
fmull
add
adc
push
xor
adc
push
sbb
pop
adc
sbb
or
das
cmp
or
jae
adc
xor
outsb
cmp
jb
or
movhps
jb
jne
or
sbb
push
sbb
nopl
jno
inc
gs
push
push
gs
pop
pop
inc
jnp
dec
jo
push
push
fs
mov
dec
dec
imul
jb
push
inc
jg
dec
mov
mov
inc
pop
pop
cmpl
push
cwtl
push
xchg
mov
mov
lea
sahf
mov
mov
call
xchg
xchg
jmp
xchg
jecxz
div
xchg
rcrb
mul
ljmp
cltd
pop
xchg
add
xor
cltd
lcall
rcl
cli
clc
lret
out
jmp
repz
shr
ret
popf
ret
stc
fbld
lds
xor
enter
xor
and
aad
cmp
fmulp
fst
fst
pop
and
add
daa
xor
fistpll
and
adc
adc
sbb
bound
fstp
cmp
adc
sbb
cmp
imul
push
cmp
ja
ds
jb
je
jne
pop
sbb
jl
xchg
mov
cltd
sti
scas
nop
add
imul
mov
add
jp
cmpb
jg
jle
sbb
bound
push
push
adc
adc
insl
push
pop
ja
jp
pop
pusha
pop
push
pusha
movsl
inc
pop
cmpsb
push
pop
inc
dec
stos
stos
mov
jo
jno
js
pop
mov
js
mov
mov
mov
mov
pop
lods
xchg
movsb
lods
stos
push
pop
xchg
mov
loop
mov
in
lock
xchg
xor
xchg
sahf
divl
and
scas
mov
jmp
out
icebp
popf
nop
jmp
negb
jmp
pushf
cltd
xchg
ror
mov
ret
out
out
xchg
xchg
hlt
sahf
lret
repz
cli
repz
xlat
aad
out
and
loope
int
xor
aad
idivb
fxch
sub
ret
stc
std
fidivs
add
leave
and
leave
adc
iret
add
rorb
sub
or
and
or
push
and
and
sub
add
das
cmp
outsl
outsl
outsb
das
push
sbb
add
inc
cmp
sbb
jae
sbb
dec
push
push
push
fs
dec
imul
pop
inc
inc
pop
pop
mov
dec
pop
push
inc
inc
inc
lods
stos
scas
jbe
mov
dec
mov
jl
mov
stos
scas
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
pop
mov
xchg
lahf
mov
mov
xchg
shll
loopne
mov
jmp
mov
xor
lock
hlt
mov
jmp
mul
xchg
xchg
out
shr
fcomps
cltd
icebp
fsubl
sti
std
aam
ror
sub
out
stc
mov
xlat
ret
aam
aaa
xor
sub
cmp
xor
xor
lds
mov
xor
icebp
xchg
mov
out
outsl
leave
xchg
jecxz
jle
aad
and
cmp
cmp
sub
iret
and
adc
ltr
and
or
push
aad
sbb
sbb
pop
adc
aas
pop
das
pop
ja
adc
jno
cmp
imul
cmp
inc
aas
sbb
inc
pusha
adc
push
inc
push
insb
push
pop
pop
push
je
push
sbb
cmpsb
bound
jg
movsb
pop
mov
inc
dec
inc
stos
dec
mov
cmpsl
push
jbe
push
jle
inc
jns
jle
movsl
sbbb
pop
pop
xchg
dec
mov
andl
pop
push
scas
sahf
lods
xchg
out
xchg
mov
jecxz
pushf
lahf
stos
lcall
xchg
mov
mov
cld
hlt
decl
in
xchg
xchg
mov
mov
nop
call
loope
repnz
lock
ret
in
sahf
lcall
rol
int
in
fcmovnbe
cmc
ret
fstp
cltd
fpatan
daa
cld
loopne
and
call
sub
repnz
les
xor
std
ror
fcmovnbe
cmp
shlb
lret
or
and
cmp
cmp
sbb
and
sbb
fnsave
pop
sbb
cmp
xor
bound
sbb
add
addr16
cs
add
jo
cmp
or
or
jg
jg
jo
dec
inc
bound
inc
data16
outsl
outsb
jbe
push
mov
sub
mov
sbb
mov
mov
mov
mov
movl
movl
orl
mov
andl
push
sbbl
push
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
pushl
push
pushl
push
pushl
push
push
call
mov
dec
mov
jmp
mov
movzbl
sbb
xor
mov
addl
add
andl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
xor
add
adc
movl
movl
movzwl
adc
mov
movl
mov
subl
xor
add
mov
xorl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adcl
movb
xor
add
and
mov
mov
subl
xor
sbbl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
jmp
mov
lea
mov
test
je
lea
push
mov
xor
add
push
mov
xor
add
push
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
mov
sub
add
mov
pushl
xor
mov
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
call
mov
mov
add
pop
pop
pop
leave
ret
addb
xchg
lods
imul
xchg
notl
pop
jb
jle
push
jg
jle
ja
push
dec
dec
pop
insb
dec
dec
insb
jnp
push
inc
jp
ja
dec
cmpsb
inc
insb
pop
js
mov
mov
ja
push
push
mov
js
dec
mov
inc
mov
mov
mov
movsb
dec
test
mov
stos
mov
popf
lods
pop
xchg
pop
mov
in
ljmp
out
mov
mov
sti
xchg
orl
lock
xchg
in
fwait
xchg
cltd
in
mov
repnz
sbbl
mov
in
fwait
out
in
std
repnz
call
xlat
fmul
lcall
cmc
std
icebp
popf
ljmp
lds
iret
fcmovnbe
repnz
repnz
cmp
rcr
int3
roll
fildl
add
rcll
or
xor
and
sub
or
sub
cmp
imul
outsl
cmp
jbe
insl
jle
push
jo
push
jl
jge
adc
dec
inc
adc
pop
push
dec
jae
push
sbb
push
dec
mov
mov
pop
jle
scas
outsl
cmpsl
dec
push
jo
inc
lods
cmpsl
lods
insl
test
jp
mov
pop
inc
dec
mov
mov
dec
mov
pop
pop
mov
stos
mov
pop
test
pop
lahf
mov
xchg
movsl
pop
cmpsl
mov
mov
hlt
jecxz
icebp
mov
xchg
sahf
cli
xchg
xchg
mov
ret
in
out
mov
out
mov
mov
out
lahf
xchg
ret
xchg
hlt
ret
mul
mov
lcall
lock
jmp
cwtl
aad
leave
ret
cli
ret
loop
out
ret
and
stc
iret
shll
and
repnz
cli
int
ss
cld
cmp
fcmovnu
xlat
and
enter
xchg
cmpb
mov
pushf
icebp
mov
and
adc
jle
and
and
adc
sbb
xor
sub
push
adc
adc
bound
add
addr16
add
cmp
sbb
jo
pcmpeqd
aas
adc
jg
sbb
inc
pop
adc
jae
sbb
adc
push
pop
inc
dec
jle
push
pop
inc
pop
pop
pop
pusha
ja
mov
outsl
push
push
jb
jae
scas
cmpsl
pop
mov
mov
xchg
inc
mov
pop
inc
mov
dec
mov
mov
pop
pop
pop
mov
pop
xchg
scas
mov
mov
test
mov
imulb
out
sti
out
xchg
ret
xor
jecxz
out
mov
jmp
jmp
clc
mov
idiv
mov
mov
lret
rcrl
aam
popf
rcrb
int3
daa
hlt
cli
aam
les
and
daa
cmp
enter
sti
shll
aad
daa
sub
xor
cmp
xor
push
and
or
xor
shrl
or
sbb
or
das
xor
sub
or
imul
insl
or
addr16
push
jl
jl
or
push
sbb
inc
dec
dec
inc
imul
gs
or
jne
popa
dec
pop
insb
pop
sbb
dec
pop
push
je
pop
jae
inc
inc
inc
jge
dec
push
push
jbe
jb
ja
movsl
jg
push
inc
mov
mov
mov
stos
push
pop
cmpsl
mov
adcl
mov
cmpsb
push
test
test
lahf
mov
mov
mov
test
xchg
and
mov
xchg
add
cli
mov
clc
icebp
xchg
cmc
out
mov
les
xchg
xchg
cltd
cltd
lea
loopne
testl
xor
jle
enter
out
ret
mov
call
xchg
aad
loopne
out
negb
rcl
and
es
in
fdivr
jmp
into
rcl
and
sti
icebp
xlat
fidivs
fcmovu
ret
sti
pop
add
aas
ds
lret
adc
leave
int
pop
push
cmp
aam
sarl
ds
pop
xor
cmp
xor
insb
jb
or
arpl
push
sbb
jl
jb
inc
adc
jle
inc
inc
jnp
imul
jo
jae
inc
sbb
push
push
pop
jl
jbe
jge
jl
jbe
stos
mov
pop
pop
jo
mov
mov
cmpsb
push
mov
jns
jge
mov
mov
push
dec
mov
pop
mov
cmpsl
lods
cwtl
mov
popf
pop
xchg
mov
in
jmp
loopne
mov
xchg
xorb
std
xchg
mov
loopne
mov
loop
test
out
out
in
mov
repz
cwtl
popf
test
std
lret
shl
lret
nop
hlt
call
clc
shlb
fadd
not
ljmp
ffree
in
sub
les
leave
out
int
lds
rcr
fcom
add
aas
xlat
rcr
add
and
leave
adc
and
int
daa
or
add
aas
sbb
add
cmp
fstl
ds
adc
adc
xor
add
jnp
cmp
insl
sbb
add
dec
inc
jb
push
inc
jle
push
adc
inc
pop
adc
adc
arpl
jbe
push
test
jp
dec
outsl
cmpsb
pop
jbe
jb
inc
push
mov
jb
mov
push
pop
jns
lods
push
xorl
mov
mov
mov
testl
scas
adc
jg
jle
test
mov
xchg
cltd
popf
mov
xchg
jecxz
xchg
mov
mov
xchg
movsl
test
mov
mov
lock
mov
lock
jmp
icebp
scas
mov
in
idivl
les
sub
rcrl
xlat
loopne
mov
imul
out
shl
test
aam
fucomp
sub
in
out
sub
ror
xor
leave
aad
iret
int
cs
fxch
sub
shrl
add
sub
sub
or
and
xlat
sbb
aam
fisttps
aaa
cmp
and
es
sbb
outsl
cmp
outsl
add
outsb
aaa
bound
jbe
adc
or
insl
add
add
push
push
jb
adc
inc
outsb
je
imul
push
push
pop
inc
cmpsl
mov
js
inc
jg
outsb
lods
mov
outsb
push
stos
jae
jbe
movsb
dec
jg
jle
mov
scas
mov
cmpsl
test
addb
movsb
mov
mov
sub
mov
sub
mov
adc
mov
xor
xor
sbb
mov
mov
andl
push
sub
push
mov
xor
sub
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
mov
add
xor
mov
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
mov
mov
add
mov
mov
mov
adc
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
xor
or
dec
mov
jmp
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzwl
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
lea
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
movzwl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
orl
fwait
jo
icebp
mov
mov
loopne
xchg
mov
jle
pop
jle
jle
pop
jb
scas
jp
mov
mov
mov
mov
mov
xchg
test
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
xchg
mov
fwait
fwait
imul
in
xchg
mov
dec
repz
jle
jg
jle
pop
mov
pop
cltd
xchg
xchg
mov
xorb
mov
mov
out
out
nop
mov
lcall
ret
mov
mov
cmc
cli
xchg
mov
xchg
mov
cld
sahf
sti
ret
jmp
add
lcall
pushf
int3
out
cmc
repnz
fcomps
rcl
lahf
cmc
sahf
icebp
fsubp
clc
fmul
sub
enter
call
and
das
iret
lds
and
ret
rcl
xor
aas
aad
cmp
add
sub
xlat
fcmovu
xor
or
add
add
popa
ss
sub
imul
sbb
push
jno
insb
adc
jle
or
adc
add
push
sbb
dec
push
push
jl
or
pop
push
sbb
bound
mov
dec
stos
dec
outsl
imul
inc
lods
push
dec
insb
pop
push
mov
pop
mov
mov
mov
dec
push
xchg
mov
mov
mov
xchg
andl
call
cltd
cli
xchg
sti
xchg
call
in
jmp
nop
mov
pushf
xchg
loopne
xchg
idiv
pushf
pushf
in
xchg
popf
stc
mov
lahf
in
cmc
xchg
call
fistpl
and
es
xlat
daa
and
and
into
repz
das
cs
into
cs
aam
out
sub
test
clc
fstpt
shlb
les
aam
or
or
add
add
add
cmp
xor
push
sbb
fistl
cmp
fstpl
fldl
arpl
push
punpcklwd
jne
adc
sbb
js
adc
sbb
popa
jp
cmpb
cmp
nop
icebp
adcl
add
mov
push
jg
jle
add
inc
jp
sbb
push
jbe
jo
push
pop
dec
jle
inc
imul
jno
mov
dec
stos
lods
insb
pop
dec
scas
mov
inc
push
jno
lods
pop
movsl
dec
lods
push
pop
jns
inc
pop
push
inc
pop
pop
inc
stos
pop
pop
mov
test
push
test
mov
pop
popf
mov
mov
mov
xchg
mov
in
call
mov
mov
out
mov
cltd
loopne
les
in
cmc
lock
cwtl
div
sub
cwtl
leave
popf
stc
jmp
pushf
pushf
xchg
ret
sar
rcl
int
repnz
fst
sub
cs
fisubl
sti
daa
fsubrp
xor
xor
and
cmp
fadd
ror
add
cmp
cmp
add
fcmovne
lds
sub
adc
shrb
adc
sub
adc
outsl
sub
cmp
sbb
data16
data16
push
jne
adc
jns
je
push
jl
ja
inc
dec
inc
bound
insb
js
jo
dec
push
dec
dec
push
dec
pop
pop
jg
inc
outsb
push
insb
inc
mov
jne
data16
dec
movsl
jb
pop
pop
stos
test
mov
jb
mov
test
inc
xchg
xchg
lods
mov
mov
xchg
mov
test
pop
mov
mov
stos
mov
jmp
mov
out
cli
nop
nop
clc
in
std
xchg
loopne
decb
xchg
xchg
lods
lods
mov
ret
out
cmp
lcall
loopne
stc
jecxz
in
pop
shl
iret
aad
enter
repnz
jecxz
into
and
sti
out
mov
repz
fbld
xor
sub
neg
xor
mov
call
orb
cwtl
push
sub
push
jg
jle
cmp
fldenv
or
pop
push
or
int3
adc
add
rcl
and
sbb
fcmovbe
fmull
xor
xor
xor
sub
adc
lsl
bound
jae
add
imul
jnp
adc
pop
inc
cmp
push
data16
pusha
inc
sbb
jno
outsb
adc
jb
jl
push
inc
pop
jp
push
pop
push
pop
push
dec
pusha
inc
jns
jle
pop
insl
mov
scas
mov
mov
pop
js
push
dec
test
mov
mov
push
mov
subl
xchg
mov
sahf
mov
movsl
xchg
lods
mov
sti
mov
out
orb
lock
cwtl
mov
repnz
nop
loope
sahf
test
sti
cli
ljmp
out
repz
xchg
rcr
cltd
out
cltd
sahf
call
popf
and
idiv
and
xlat
leave
enter
fisubrs
in
sar
in
out
xor
and
cs
clc
fdivr
add
add
add
add
and
and
les
and
sub
aam
aad
aaa
das
data16
es
cmp
sub
pcmpgtd
or
jnp
ja
gs
ss
adc
jns
or
jnp
pusha
pusha
push
push
inc
push
jne
jno
dec
pshufw
push
sbb
dec
js
inc
pusha
inc
push
mov
imul
mov
push
mov
inc
mov
dec
test
test
cmpsl
xchg
andb
sahf
mov
mov
pushf
nop
jecxz
fwait
sahf
mov
mov
popf
jmp
lahf
fwait
xchg
jmp
cmc
repz
mov
mov
cmpl
lods
mov
lock
loopne
adcl
jle
xchg
nop
hlt
xchg
ljmp
ljmp
mov
iret
lret
out
out
ror
out
rcr
nop
fstpl
lock
cmc
sti
xlat
les
lret
sub
and
repz
aas
sub
rol
cmp
pop
fcmovu
xor
adc
daa
push
add
adc
nopl
xlat
cmp
aas
push
and
xor
adc
outsb
push
jbe
fs
pop
or
pusha
jnp
js
add
adc
add
pusha
or
outsl
jnp
inc
gs
dec
insl
ja
sbb
jnp
pop
jb
push
push
pop
imul
mov
cmpsl
dec
movsb
scas
inc
jnp
dec
pop
lods
dec
pop
inc
scas
push
mov
stos
mov
mov
mov
mov
push
pop
xchg
mov
lahf
pop
scas
mov
mov
call
out
repnz
test
xchg
test
xchg
cmc
in
mov
jmp
lock
rol
lds
xchg
out
mov
cmc
imul
sti
decl
cwtl
testl
rorl
cltd
lock
call
loope
popf
cmc
std
and
fldcw
lret
sub
in
and
and
in
sub
fmul
aaa
xor
fnstenv
cmp
sub
cmp
xor
iret
add
add
push
sub
fildl
add
pusha
fistpll
and
xor
and
and
add
pop
or
imul
add
jnp
or
jae
inc
outsb
jns
sbb
inc
data16
dec
sbb
or
ja
jno
adc
pop
adc
dec
jae
sbb
inc
jns
push
addr16
inc
test
jnp
stos
lods
test
dec
push
mov
dec
cmpsl
pop
stos
mov
xchg
cwtl
xchg
mov
fwait
hlt
test
repz
cmpb
mov
jle
jle
push
push
mov
push
test
pop
mov
xchg
pop
mov
popf
xchg
xchg
lods
and
pushf
xchg
push
mov
sub
push
push
sub
push
mov
movzbl
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
mov
sub
movzwl
mov
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
xor
lea
mov
adc
mov
mov
mov
and
mov
mov
mov
mov
add
mov
mov
sub
xor
sub
add
mov
mov
or
movl
xor
movl
mov
mov
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
xor
add
jmp
mov
xor
mov
add
movzwl
mov
movzwl
xor
add
mov
mov
inc
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
inc
jmp
mov
xor
add
mov
pop
pop
pop
leave
ret
xchg
adcb
push
shr
and
in
adcb
jle
push
jg
jle
movsl
mov
nop
mov
jmp
testl
in
fwait
xchg
jecxz
jmp
mov
mov
xchg
mov
xchg
adcl
cltd
xchg
test
xchg
shr
rcl
idiv
and
pushf
jmp
out
out
and
aam
lret
clc
daa
and
xor
cmp
daa
ss
sti
ret
ret
pop
and
aad
aad
cmp
fisttps
xor
or
rorl
and
sbb
cmp
or
arpl
and
fsubl
and
and
push
insb
sbb
or
outsb
pop
xor
data16
jbe
ja
jp
jg
push
push
aas
add
dec
dec
dec
js
jnp
movq
jb
arpl
jno
ja
push
push
jae
pop
dec
jno
inc
pop
push
cmpsl
scas
dec
inc
cmpsl
inc
imul
jb
cmpsl
mov
mov
dec
jp
dec
inc
addl
pop
pop
mov
xchg
xchg
xchg
mov
sahf
mov
mov
andb
test
sbbb
jmp
out
sar
std
addl
lock
in
negb
enter
call
call
fcmovbe
lret
repnz
cld
hlt
fdivr
out
jecxz
jmp
fsubrl
loope
call
and
shl
es
sub
frndint
fidivs
xor
fstp
and
sub
sub
xor
rorb
sub
adc
sub
and
and
cmp
cmp
xor
push
pop
addr16
or
sbb
or
cmp
or
or
jge
gs
jo
or
pop
adc
dec
push
push
push
jbe
adcb
mov
in
in
loopne
xchg
addl
xchg
jle
push
jg
jle
push
js
ja
cmpsb
push
push
jg
pop
test
inc
push
mov
push
jno
lods
mov
push
test
stos
stos
mov
sbbb
dec
mov
scas
stos
pop
push
sahf
mov
xchg
xchg
push
mov
loope
in
xchg
cmpsb
test
pushf
xchg
and
hlt
xorl
loopne
mov
mov
xchg
xchg
lods
lea
icebp
rol
mov
loopne
les
loop
fdiv
into
lret
lock
aam
fwait
popf
aad
ret
in
out
cld
in
ret
jmp
ret
and
leave
hlt
iret
sub
fst
lret
cld
int3
sub
add
std
sarl
fisubl
aad
or
sub
adc
movlps
adc
aaa
sbb
aaa
sbb
sbb
xor
and
pop
punpckhdq
outsl
push
or
cmp
cmp
jl
jbe
jg
je
inc
or
fs
or
inc
push
push
push
fs
jns
outsb
pop
sbb
sbb
outsb
jge
insb
cmpsb
mov
mov
lods
mov
dec
jb
push
pop
push
mov
mov
pop
mov
mov
cmpsb
mov
mov
movsl
cmpb
cmpsb
xchg
ljmp
mov
lahf
mov
mov
xor
mov
jecxz
out
loopne
xchg
out
icebp
in
mov
out
pushf
mov
out
and
std
mov
repnz
cli
ljmp
cli
fildll
aad
xlat
cmc
shl
jmp
repz
imul
xlat
in
xor
clc
cmp
and
and
cmp
and
lret
fstp
cmp
fmul
cs
xlat
rorb
cs
mov
cwtl
mov
mov
mov
mov
cmp
jg
jle
shll
fmuls
pop
push
xor
or
cmp
adc
movlps
adc
sbb
jle
inc
js
inc
add
inc
ja
adc
dec
inc
jp
push
jae
pop
pop
pop
push
jg
stos
jge
jge
test
dec
jle
mov
mov
stos
push
mov
mov
dec
push
mov
inc
pop
mov
sbbb
pop
orb
mov
lods
xchg
mov
mov
cmpsb
pop
lahf
mov
cwtl
out
jecxz
in
xchg
lea
cmc
mov
sub
xchg
icebp
icebp
hlt
xchg
imul
xchg
repz
xchg
cwtl
mov
xchg
notl
hlt
xchg
leave
out
shl
jmp
std
into
jmp
repz
and
clc
cltd
ret
rol
ror
ret
cmc
fadd
fcmovb
ret
ror
xor
int
lds
iret
aas
fstp
rcl
cmp
add
cmp
or
or
rclb
and
push
adc
fbld
add
and
xor
sbb
and
outsb
or
cmp
and
add
jnp
fs
adc
outsb
sbb
ja
jge
imul
inc
adc
cmovl
sbb
jbe
pop
jb
push
dec
outsb
inc
insb
jge
jne
push
pop
fs
je
push
imul
inc
mov
stos
jne
mov
mov
mov
jns
mov
mov
cmpl
cltd
mov
pop
push
lahf
lods
mov
out
mov
loop
mov
mov
out
scas
lods
nop
in
loopne
mov
xchg
sahf
mov
mov
xchg
in
lock
xchg
mov
xchg
mov
jmp
in
xchg
xchg
jmp
lret
in
xchg
mov
xchg
xchg
xchg
or
xchg
popf
in
mov
pop
xchg
mulb
jle
push
jg
jle
xlat
jmp
sti
test
out
std
cwtl
ret
sub
loop
and
sub
leave
ret
enter
int3
out
xor
ror
sub
cmp
idivl
xor
aaa
and
add
sub
cmp
add
or
cmp
add
or
pusha
sub
das
xor
add
adc
cmp
imul
fs
add
add
insb
jp
insb
js
jns
sbb
data16
inc
sbb
dec
jle
jle
dec
push
adc
movlps
adc
pop
mov
cmpsl
pop
je
bound
jnp
pop
pop
inc
mov
jbe
pop
inc
push
pop
push
jo
mov
push
jl
cmpsl
xorb
mov
xchg
xchg
movsl
movsl
mov
cwtl
mov
mov
mov
ljmp
icebp
mov
mov
fwait
sti
lea
lods
out
cli
mov
idiv
mov
mov
cmc
les
sahf
int3
in
cwtl
repz
std
pushf
out
lret
ficoml
rol
cld
cltd
xlat
fucomip
dec
fld
loope
shll
es
xor
das
xor
cmp
push
cmp
aaa
fstpt
fldcw
fistpll
push
cmp
xor
es
adc
add
fidivl
pop
fldenv
pushw
outsl
or
outsb
adc
push
push
push
inc
adc
sbb
inc
inc
jge
jbe
dec
jb
sbb
jbe
insl
dec
push
sbb
push
jne
jle
outsb
jp
inc
push
jns
cmpsl
jae
jl
pop
inc
outsl
cmpsb
jle
test
dec
insl
cmpsl
outsl
mov
inc
pop
mov
pop
xorl
pop
mov
xchg
test
push
xchg
mov
xchg
xchg
mov
xchg
hlt
popf
xchg
mov
add
jle
jle
lcall
xchg
cmpsb
mov
out
cltd
jmp
lods
mov
jecxz
cmc
xchg
mov
call
xchg
lahf
lahf
sti
lahf
ret
movsl
mov
xchg
in
nop
jmp
repz
lret
xchg
jmp
rorb
cli
shr
test
rcrb
out
clc
and
into
rol
sub
ret
sub
sub
and
sub
xor
xlat
and
and
sub
aas
and
fld
and
push
add
push
add
or
jo
add
fisttpl
add
xorl
orl
push
mov
sub
xorl
push
xorl
movl
push
movl
subl
pushl
orl
call
push
push
adcl
push
sbbl
lea
orl
call
movl
mov
movl
cmp
movl
je
adcl
xor
inc
jmp
orl
cwtl
mov
mov
loope
mov
jmp
fisubs
daa
scas
leave
jle
mov
dec
push
push
mov
mov
loope
cmpl
mov
test
pushf
xchg
cli
fwait
xchg
test
in
mov
mov
mov
mov
xor
mov
sbbl
push
adcl
push
push
andl
call
movl
cmp
jne
sbbl
pushl
orl
call
movl
mov
cmp
movl
je
addl
lea
sbbl
push
addl
push
movl
call
xor
movl
jmp
mov
cwtl
mov
pushf
out
mov
jle
mov
repnz
ret
les
test
cmc
cld
mov
lea
jmp
out
idiv
and
in
test
fsub
das
sub
sub
iret
and
aam
leave
adcl
push
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
push
mov
orl
call
movl
cmp
je
adcl
push
push
adcl
call
movl
jmp
decl
lea
mov
adcl
lea
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
subl
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
mov
xor
push
adc
mov
add
mov
mov
cmp
jne
mov
xor
add
mov
mov
test
je
mov
mov
mov
xor
add
imul
mov
xor
xor
add
add
imul
cmp
jne
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
push
mov
lea
push
push
call
mov
add
cmp
jb
xor
inc
push
mov
lea
push
push
call
mov
add
cmp
jb
xor
inc
push
mov
lea
push
push
call
mov
add
cmp
jb
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
pop
pop
cmp
je
mov
mov
xor
add
imul
mov
jmp
call
lea
mov
mov
mov
mov
lea
push
pushl
pushl
pushl
call
mov
mov
pop
leave
ret
xchg
xchg
mov
cmp
testl
xchg
sahf
jle
push
jg
jle
or
fbstp
sbb
cmp
cmp
ss
or
cmp
addr16
pusha
popa
xor
imul
jno
push
imul
cmp
dec
inc
adc
inc
jbe
adc
pop
outsl
push
adc
push
pusha
adc
mov
imul
scas
inc
push
jo
pop
push
mov
mov
dec
jg
mov
mov
stos
test
lea
xchg
lcall
mov
mov
in
out
sahf
cmpsb
mov
fwait
out
mov
lcall
div
out
test
scas
in
out
mov
xchg
lods
mov
cmc
lcall
lds
clc
iret
fwait
jmp
lret
call
cltd
jmp
into
ret
ret
in
pushf
lds
fcomp
fdivrp
fadd
stc
std
sub
repnz
xor
cmp
cmp
fcmovne
cs
ret
fmull
or
lret
sub
xor
cvttps2pi
adc
adc
cmp
sbb
add
ss
jne
xor
or
adc
cmp
add
adc
push
sbb
popa
inc
popa
inc
outsl
pusha
add
inc
arpl
jnp
adc
dec
jbe
insl
pop
jno
arpl
pop
push
jns
gs
inc
js
pop
jp
lods
inc
inc
insl
insb
inc
dec
lods
jae
mov
mov
jle
lods
mov
dec
inc
dec
pop
mov
nop
pop
xchg
push
mov
mov
push
mov
mov
ljmp
mov
mov
mov
xchg
cld
mov
in
mov
lcall
sahf
cli
in
in
mov
sahf
xchg
out
negl
out
mul
test
sahf
into
mov
cltd
mov
mov
mov
jle
pushf
jle
push
jg
jle
loope
ret
call
lret
fcompl
cli
pushf
popf
sub
sub
es
daa
lock
and
cmc
and
cli
rcl
sub
cmc
fmul
xor
fdivrs
cmp
fnstcw
ror
add
add
das
cs
fisubrs
sub
fistps
add
push
gs
sbb
sub
sub
popa
or
js
sbb
add
gs
inc
sbb
inc
jne
cmovne
dec
inc
jge
inc
dec
jp
jo
push
jne
insl
dec
jae
jo
inc
jo
inc
mov
outsb
dec
test
jge
inc
dec
mov
pop
dec
mov
push
stos
pop
mov
pop
mov
adcl
push
xchg
scas
xchg
mov
pop
mov
jmp
mov
cmpsl
mov
loope
out
mov
mov
popf
clc
mov
mov
clc
roll
xchg
mov
notb
shl
cmc
cltd
mov
enter
xchg
rcr
xchg
xlat
les
lahf
es
rcrb
cld
and
out
repz
in
xor
stc
xor
fmulp
ror
cmp
ret
lds
or
das
add
lret
fmul
daa
fisttpll
shll
pop
or
ds
cmp
adc
or
push
sub
or
xor
xor
cmp
jp
imul
popa
jns
jp
jae
jne
push
inc
insl
insl
dec
data16
push
pop
push
push
push
imul
pusha
ja
jl
sbb
dec
push
inc
pop
lods
inc
pop
mov
test
insb
inc
lods
test
dec
xorb
inc
mov
mov
dec
push
dec
mov
stos
xchg
xchg
mov
xchg
xchg
or
shll
lock
xchg
loopne
bound
push
loop
jle
jg
jle
mov
pop
jecxz
mov
mov
jmp
sahf
jecxz
nop
xchg
push
mov
mov
mov
mov
mov
mov
mov
sti
lock
out
clc
ljmp
xchg
call
cld
in
cltd
aam
popf
inc
and
fcmovnb
clc
lret
shll
aam
lock
cmp
and
xor
xor
and
into
cmp
or
pop
and
add
or
and
das
adc
cmp
xor
cmp
bound
add
aas
cmp
insb
cmp
ss
push
pop
jb
xor
cmp
cmp
inc
add
sbb
inc
pusha
push
adc
inc
or
jno
dec
jno
inc
mov
arpl
push
inc
dec
arpl
mov
mov
movsl
mov
mov
mov
test
mov
addb
lea
mov
mov
lea
lcall
xchg
out
orl
mov
lahf
mov
jecxz
movl
nop
sahf
mov
add
loope
loop
les
lahf
int3
ljmp
in
idiv
lret
rol
rcrl
daa
sub
ficompl
xor
in
in
repnz
iret
sub
fdiv
fdivr
fidivs
shlb
cs
xor
aam
push
int
and
and
cmp
fidivrl
push
cmp
ficompl
sbb
bound
cmp
insl
cmp
or
jbe
xor
or
aas
push
inc
sbb
add
cmp
add
je
inc
sbb
popa
data16
adcl
mov
mov
xchg
loop
stos
stos
or
jle
jg
jle
popa
ja
js
pop
ja
bound
pop
jne
pop
jg
arpl
inc
outsl
pop
jnp
movsl
insl
pop
mov
jb
test
mov
jge
pop
push
pop
mov
inc
pop
test
pop
push
dec
test
mov
lods
xchg
lahf
loope
xchg
cltd
pop
mov
addl
out
lods
mov
testl
cwtl
cld
loopne
stc
cld
test
nop
lods
scas
cli
xchg
out
mov
nop
test
cli
in
popf
enter
int3
hlt
jecxz
in
fadd
shl
cld
cwtl
cli
pushf
in
cltd
daa
xlat
out
out
es
lret
cli
out
int3
into
jmp
lret
hlt
and
idiv
xor
aad
cmp
and
sub
daa
add
sub
and
enter
and
cmp
ficoms
fnstcw
push
push
pop
or
sbb
adc
push
sub
push
and
or
popa
adc
jbe
insb
adc
jb
add
arpl
jg
imul
push
dec
inc
push
or
dec
adc
jo
jo
adc
inc
dec
popa
pop
ja
jg
dec
js
inc
outsl
pop
inc
dec
jge
mov
dec
pop
dec
mov
scas
push
test
pop
movsl
test
dec
mov
push
xchg
fwait
mov
loop
mov
andl
loop
loop
loop
hlt
mov
mov
mov
xchg
stos
xchg
cli
in
pushf
xchg
cld
rorl
loopne
hlt
sbbl
hlt
loopne
in
sahf
neg
ljmp
aad
and
leave
jecxz
stc
enter
xor
out
fdivl
int3
xor
rcr
incl
cmp
pop
rol
cmp
lret
enter
mov
cmc
add
loopne
out
xchg
in
xchg
ja
jg
adc
jle
inc
jle
jle
ds
push
or
mov
push
push
push
movl
mov
notl
push
mov
movl
mov
movzwl
mov
mov
cmp
je
mov
subl
xor
orl
add
cmp
je
mov
sbb
mov
xor
add
push
pushl
subl
pushl
orl
pushl
orl
call
notl
mov
mov
movl
mov
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
mov
cwtl
lcall
addb
jo
int
loope
jle
jg
jle
das
rcrb
xor
adc
sub
xor
sub
and
or
sbb
pop
gs
jne
cmp
jl
jl
jo,pt
push
cmp
sbb
dec
or
sbb
addr16
adc
imul
inc
mov
jo
movsl
imul
jg
lods
push
inc
mov
mov
pop
jns
mov
mov
mov
pop
inc
mov
dec
mov
mov
xchg
sahf
pop
mov
andb
xchg
out
subl
out
cwtl
xchg
in
mov
hlt
mov
loopne
xchg
call
xchg
in
lock
in
lcall
in
in
in
ret
into
aam
repz
std
bnd
jmp
sti
ret
cmc
fisubl
and
out
xor
shl
int3
fcmove
xor
fisubrs
aas
sub
cmp
xor
rorl
cmp
shll
or
aam
daa
or
aaa
xor
xor
adc
and
cmp
wbinvd
outsb
gs
aas
adc
xor
jns
pop
pop
sbb
punpckhbw
jo
arpl
pusha
or
inc
arpl
insw
push
dec
sbb
push
pusha
imul
pop
pop
pop
inc
mov
test
mov
jb
pop
push
je
mov
push
stos
scas
jp
push
mov
movsl
adcl
inc
lods
dec
dec
mov
xchg
xchg
xchg
loope
sbbl
xchg
loopne
lods
lahf
out
mov
cmc
sub
repz
stc
in
jmp
mov
mov
mov
call
shl
std
fwait
xchg
mov
xchg
subl
xchg
bound
jle
jg
jle
mov
cwtl
mov
int3
xchg
xchg
cltd
cwtl
int
lret
pushf
aam
rcl
cmc
daa
icebp
out
cld
cmc
and
out
fdivp
lock
lret
fidivl
clc
fnsave
fadd
add
daa
int
aam
or
add
fisubrl
and
and
add
adc
adc
add
sub
adc
cmp
add
popa
add
outsb
cs
push
js
or
adc
push
jnp
jnp
inc
data16
sbb
or
arpl
push
push
dec
pop
push
inc
adc
cmpsb
mov
dec
stos
pop
je
dec
fs
cmpsb
inc
mov
outsb
dec
dec
push
scas
inc
mov
mov
jle
mov
inc
mov
lods
dec
mov
mov
push
mov
lea
mov
xchg
xchg
pop
mov
mov
out
in
jmp
call
lcall
lock
sti
mov
repnz
lcall
mov
clc
cmc
lret
lock
out
loope
aad
jecxz
lret
out
repnz
out
fcomip
rcl
pushf
cld
in
sti
ret
lret
ror
xor
into
xor
sub
xor
add
cmp
fcom
sub
das
fisttpl
cmp
xor
aaa
pop
daa
cmp
pop
sub
xor
push
adc
xor
aas
es
add
push
jae
sub
ss
adc
adc
sbb
jl
or
jle
push
arpl
inc
jb
inc
je
pop
adc
insl
outsl
push
dec
push
sbb
pop
sbb
jae
push
pop
pop
dec
jg
pop
lods
push
push
mov
dec
pop
mov
jle
jle
jge
xorb
cmpsb
mov
push
xchg
mov
lea
push
lods
sbb
testb
rcr
in
jle
jg
jle
mov
pop
mov
in
mov
in
mov
xchg
jmp
div
mov
cltd
mov
ret
icebp
testb
sahf
cltd
xchg
xchg
std
sub
xchg
xchg
lcall
cwtl
ret
mov
xchg
int
aam
aam
lret
rcr
popf
ret
cld
fldenv
out
fcmovb
sub
int3
out
lock
sub
cld
and
std
and
fcmovu
sarl
add
lret
ffreep
lds
adc
and
daa
cmp
sub
cmp
cmp
aas
add
fidivrs
push
or
cmp
sub
add
add
ja
outsl
je
add
adc
adc
bound
dec
jp
inc
inc
jle
insb
gs
adc
inc
jg
jp
dec
jbe
je
push
dec
push
mov
scas
jne
jns
push
jl
jno
jp
mov
mov
mov
js
pop
xorl
mov
pop
mov
mov
lods
mov
xchg
loopne
mov
mov
nop
xchg
mov
pushf
sub
orb
cmc
in
decb
xchg
mov
out
lea
test
notl
icebp
jmp
adcl
loopne
shl
ror
lret
lcall
cmc
loop
repz
in
hlt
ljmp
call
jmp
into
sarb
into
hlt
cmc
xor
ret
rcr
add
sub
daa
int3
cmp
and
adc
es
sub
sub
aaa
xor
sbb
adc
and
xor
aas
xor
adc
xor
jae
cmp
cmp
jnp
sbb
sbb
inc
add
adc
xchg
mov
push
call
testb
xchg
jle
jg
jle
push
insl
imul
push
dec
pop
jbe
push
jg
push
cmpsl
insb
movsl
pop
mov
inc
pop
insb
push
imul
scas
dec
mov
movsb
stos
push
push
pop
test
mov
dec
stos
mov
inc
mov
pop
mov
mov
lea
fwait
pushf
mov
in
mov
jecxz
orl
hlt
test
nop
ret
xor
sti
repnz
adcb
lock
lock
clc
sahf
out
loopne
in
xchg
dec
leave
into
out
sahf
int
cld
hlt
ret
vpaddsw
cwtl
out
shr
loop
and
loop
lret
enter
in
shrb
repz
ret
ret
and
xlat
daa
lock
and
and
add
and
xlat
and
cmp
xor
sub
ss
xor
and
adc
and
bound
cmp
add
or
adc
push
pop
add
add
sbb
jo
push
jbe
gs
gs
adc
inc
adc
imul
push
inc
insb
ja
jnp
jo
inc
push
stos
jb
dec
pop
outsl
dec
dec
mov
jo
inc
mov
push
dec
mov
push
jg
push
mov
mov
dec
mov
test
lods
test
mov
jecxz
mov
mov
adcl
repz
sbbb
mov
std
mov
xchg
repnz
mov
stc
fwait
testl
mov
in
jmp
popf
in
iret
aad
call
int
rcl
out
ficompl
in
sub
movl
movl
mov
adc
mov
sbbl
push
subl
mov
adcl
push
mov
orl
xor
subl
push
mov
add
mov
add
mov
mov
addl
xor
addl
add
movl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
subl
xor
subl
add
cmp
movl
je
jmp
adcl
cwtl
mov
adc
mov
nop
lock
loop
sub
jle
pop
jle
jle
sti
enter
cs
add
or
xor
fstl
or
cmp
add
jo
add
or
mov
and
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
add
subl
sub
movl
cmp
movl
jb
dec
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
xor
xor
xor
xor
sbb
mov
lea
movzbl
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
xor
mov
sub
mov
add
add
imul
and
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sub
cmp
jae
mov
mov
xor
add
jmp
orl
mov
jp
mov
and
sbb
jle
pop
jle
jle
sub
arpl
ficomps
and
or
imul
adc
popa
adc
add
adc
adc
inc
cld
mov
xor
xor
lea
mov
xor
add
imul
mov
mov
sub
cmp
mov
mov
jae
xor
xor
lea
jmp
xchg
xchg
mov
cltd
fnsave
xchg
xchg
fcomps
ljmp
jle
pop
jle
jle
adc
cmp
ds
gs
ja
dec
inc
inc
dec
jle
jae
push
fs
inc
adc
outsl
push
dec
xor
xor
lea
mov
xor
add
imul
mov
mov
sub
cmp
mov
mov
jae
xor
xor
lea
jmp
xor
xor
lea
mov
xor
add
imul
mov
mov
sub
cmp
mov
mov
jae
xor
xor
lea
jmp
xor
xor
lea
mov
xor
add
imul
mov
mov
sub
cmp
mov
mov
jae
xor
xor
lea
jmp
xor
xor
lea
mov
xor
add
imul
mov
pushl
mov
add
push
call
add
mov
mov
xor
mov
sub
mov
mov
xor
add
imul
sub
cmp
jbe
pop
pop
pop
leave
ret
xchg
cltd
pop
cmp
jmp
lock
mov
in
xchg
repnz
sub
jle
jg
jle
es
xor
and
ret
xlat
lret
cmp
and
cmp
add
xor
int3
adc
add
sbb
sbb
xor
cmp
cvtps2pi
add
adc
aaa
jp
pop
je
adc
sbb
sbb
sbb
dec
inc
push
outsb
push
jne
inc
adc
push
jnp
sbb
ja
ja
popa
push
jge
pop
test
jg
dec
inc
jge
mov
mov
ja
lods
pop
pop
jb
lods
push
pop
mov
inc
stos
orl
addb
mov
fwait
xchg
pop
test
lods
jecxz
cmpl
mov
in
scas
mul
sub
fwait
test
out
mov
mov
hlt
out
xchg
in
in
out
cltd
nop
lahf
nop
mov
jecxz
cmpl
loopne
mov
lahf
ret
mov
mul
mov
repnz
out
sti
xchg
into
pushf
loop
div
icebp
fisubs
iret
and
ret
enter
xor
not
lds
vaddsubps
rolb
aas
shll
aam
or
enter
xor
rclb
xor
push
sub
aad
fcomps
fnstcw
or
aas
xor
cmp
cs
addr16
push
add
push
jnp
jb
ja
add
dec
or
push
movhps
inc
inc
push
jae
je
push
pop
push
insl
pop
insb
jae
movsl
mov
push
pop
inc
imul
push
mov
mov
jg
jnp
mov
jge
sbbl
inc
xorb
xchg
mov
mov
mov
cltd
mov
mov
loope
addl
adcb
mov
in
in
xchg
test
nop
xor
shll
jg
jle
mov
std
lock
mov
xchg
lock
icebp
fwait
sti
std
jmp
pushf
lret
icebp
stc
sti
iret
in
loopne
mov
out
jmp
cwtl
out
into
lock
cmc
fprem
clc
int
and
aad
fmul
fdivrp
into
lock
lock
cmp
enter
xor
cli
add
mov
cmp
sub
fdivrs
and
or
or
or
fstp
sbb
bound
cmp
bound
push
adc
popa
outsb
adc
jbe
push
je
jl
inc
pusha
jbe
jle
push
inc
sbb
pusha
or
jae
push
inc
jae
inc
or
jp
jg
outsl
js
pop
popa
bound
dec
mov
insl
mov
cmpsb
push
push
pop
mov
pop
mov
pop
inc
push
jl
pop
mov
lods
mov
push
test
test
scas
push
mov
mov
mov
mov
jmp
scas
repnz
test
testb
call
in
out
out
cmc
in
in
mov
xchg
xchg
adcb
cli
call
int3
out
aam
hlt
xlat
sar
sti
enter
sti
fucomi
es
into
ljmp
icebp
and
ror
das
sub
xor
cmp
xor
add
add
lret
add
and
rorl
or
sub
sbb
push
sub
pop
xor
addr16
cmp
wbinvd
or
add
or
jo
outsb
push
insb
or
insb
sbb
jg
add
bound
push
bound
dec
dec
jge
adc
push
mov
cmpsb
pusha
addr16
arpl
mov
mov
xchg
xchg
mov
fwait
inc
jnp
sbb
mov
mov
inc
in
jle
push
jg
jle
jge
mov
ja
pop
stos
push
mov
mov
xchg
mov
lea
push
mov
xchg
xchg
xchg
mov
loope
mov
test
mov
loope
test
call
call
ret
sbbl
cmc
mov
cld
icebp
xchg
lock
mov
loop
cltd
jmp
rcl
mov
nop
loope
ficoml
int3
jmp
cmc
out
rol
aam
fldenv
aam
repnz
fcomp
xor
in
in
lock
hlt
xor
sub
fyl2xp1
rcl
xlat
sar
aas
add
daa
and
adc
int3
pop
and
xor
or
or
cmp
or
cmp
push
cmp
sbb
sub
insb
adc
outsb
sub
add
xor
jb
xor
jnp
aas
or
push
bound
jns
inc
jl
imul
pop
or
popa
outsb
push
bound
push
jge
inc
push
dec
jl
pop
inc
mov
mov
jne
mov
dec
jl
andb
mov
mov
pop
test
test
fwait
mov
mov
loope
popf
cmpsl
test
repnz
jmp
mov
xchg
jecxz
icebp
mov
cmc
call
stc
nop
jecxz
out
loop
jmp
jmp
call
out
lock
adcl
lahf
aad
lock
int
in
std
lret
icebp
iret
cld
int3
clc
int3
and
sub
leave
sub
xor
and
repnz
xor
aad
das
sub
ret
fcom
aas
cmp
and
sub
adc
or
and
rorb
xor
sub
push
cmp
sbb
fsubl
flds
cltd
mov
repnz
out
in
mov
arpl
jle
add
jle
add
adc
add
imul
jbe
xor
sbb
js
add
dec
pusha
push
or
push
inc
jno
dec
outsl
push
jbe
push
pop
push
jge
jo
pop
jp
mov
push
push
dec
mov
mov
pop
dec
push
je
pop
mov
mov
jle
mov
mov
dec
push
test
push
xchg
xchg
xchg
xchg
mov
cwtl
xchg
cltd
mov
test
mov
hlt
mov
loopne
clc
clc
rol
lahf
mov
jmp
cli
mov
mov
repnz
ret
lret
xchg
cltd
mov
mul
rorb
cld
fwait
std
fwait
inc
mull
rcl
cmc
in
and
in
aad
jmp
out
rcl
icebp
sub
aad
xlat
cmc
cs
leave
ret
xor
cld
sti
pop
rcr
push
add
lret
and
or
sub
sub
rcrb
or
xlat
adc
aas
sub
xor
xor
sbb
or
ds
insl
cmp
arpl
ss
xor
outsl
jno
jae
or
sbb
cmp
add
rsqrtps
push
pop
inc
jno
fs
dec
pop
gs
dec
pop
mov
pop
push
inc
push
mov
lods
dec
pop
inc
push
dec
inc
push
dec
dec
push
jl
mov
mov
pop
push
pop
scas
popl
mov
mov
pop
test
mov
mov
jecxz
loop
mov
jmp
mov
xchg
test
clc
repz
nop
mov
repnz
xrelease
icebp
jecxz
lcall
push
xor
mov
push
and
push
mov
movl
mov
mov
mov
add
mov
adc
xor
mov
addl
add
mov
mov
andl
mov
adc
mov
sbbl
mov
sub
mov
mov
pop
test
pop
jne
mov
xor
add
leave
ret
xchg
xchg
xchg
inc
jge
imul
test
lock
push
jg
jle
enter
mov
sar
ret
mov
lret
aad
fmul
enter
idiv
jmp
clc
fcmovnu
shl
daa
ret
das
enter
sub
shl
das
sub
ss
xor
ret
add
and
iret
daa
add
and
sbb
or
arpl
sbb
adc
arpl
cmp
outsl
or
aaa
push
je
sbb
js
jl
add
jae
add
inc
arpl
add
sbb
cmovns
dec
adc
gs
imul
cmpsb
jne
jg
inc
pop
mov
scas
jl
push
push
dec
inc
pop
pop
jb
dec
mov
mov
mov
mov
mov
test
push
mov
lahf
mov
fwait
loope
loop
scas
lods
mov
mov
mov
mov
lahf
mov
sti
call
idivl
mov
pushf
xchg
out
xchg
leave
cld
sti
iret
fwait
rorb
aam
aam
in
ficoms
cmc
xlat
hlt
fdivr
lahf
and
fsub
aad
aam
les
sub
xor
and
sub
aaa
fdivr
aam
fcmovnb
xlat
xor
add
sub
and
das
fmull
daa
xor
or
or
cmp
sbb
arpl
push
sub
das
cmp
or
cmp
outsl
sysexit
add
xor
movq
sbb
arpl
adc
bound
sbb
or
adc
dec
push
insl
inc
addr16
jo
jbe
insl
sbb
dec
pop
cmpsl
fs
mov
pop
push
outsl
mov
mov
stos
ja
pop
pop
mov
mov
mov
mov
mov
sub
in
mov
repz
sti
mov
push
jg
jle
stos
test
mov
lea
popf
addl
test
xchg
mov
lea
loopne
in
repz
repnz
test
sahf
lahf
cli
repnz
xchg
in
hlt
rcrb
leave
repnz
clc
iret
popf
leave
lock
leave
repz
jmp
ror
sti
shl
in
frstor
sub
and
jecxz
and
int3
jmp
shrb
sub
ss
sti
fldt
and
cld
and
aam
or
cmp
ds
es
das
or
xor
pop
xor
bound
aaa
adc
and
pop
cmp
sbb
sub
ds
imul
sbb
adc
cmp
bound
outsb
push
push
or
prefetchw
jg
push
inc
push
jns
pop
gs
push
jno
jbe
jl
jnp
jnp
dec
inc
test
test
inc
inc
jo
scas
je
mov
push
dec
js
push
inc
mov
push
mov
dec
dec
dec
cmpsl
mov
test
mov
push
pop
pop
pop
pop
pop
pop
xchg
lahf
xchg
out
sahf
pushf
lahf
out
test
xor
mov
movb
in
xacquire
mov
cwtl
adcl
fwait
out
lock
out
xchg
aam
lret
lock
repz
icebp
fsubrp
fst
and
sahf
jmp
and
shlb
lock
enter
cmp
leave
xlat
neg
sub
and
push
xor
ss
and
and
cmp
and
adc
cmp
add
aas
aas
sub
add
xor
or
cmp
jb
sub
popa
imul
push
aaa
push
xor
js
pop
sbb
push
add
sbbb
mov
test
mov
out
jle
push
jg
jle
jp
inc
jne
dec
or
jg
push
fs
inc
outsb
pop
dec
pop
push
mov
outsl
jo
pop
sbb
scas
pop
movsb
inc
scas
mov
jno
push
insl
movsl
lods
cmpsl
push
mov
pop
test
pop
mov
orb
xchg
dec
cmpsb
mov
mov
pop
pushf
lods
pop
mov
nop
out
mov
mov
in
cmp
mov
test
jmp
mov
mov
xchg
idiv
mov
idivl
out
xchg
mov
popf
lahf
cld
incb
lret
cmc
xchg
clc
in
ret
iret
repnz
loope
daa
rol
lds
in
cli
call
sub
cli
fcom
int3
enter
xor
int3
and
les
xlat
fisttps
xor
xor
sub
add
cmp
add
cmp
xor
or
sbb
popa
add
das
push
or
xor
sub
ja
adc
cmp
jae
push
pusha
or
cmp
gs
imul
jl
push
pop
jb
dec
inc
insb
jge
imul
jne
pop
gs
inc
imul
mov
mov
je
dec
test
inc
inc
pop
test
dec
xchg
push
mov
xchg
test
mov
mov
mov
mov
hlt
xchg
lcall
mov
xchg
lcall
xchg
jmp
div
nop
mov
idivb
testl
jmp
in
mul
cmc
lret
fwait
in
icebp
cmc
cltd
out
lret
hlt
loope
shl
mulb
not
ljmp
icebp
sub
lock
rcl
shl
fisubrl
sarl
xchg
cltd
cltd
cmp
out
mov
jecxz
stc
xchg
jle
push
jg
jle
rcr
sar
fldenv
cmp
ss
fistpll
das
cmp
or
or
sbb
sub
xlat
pop
cmp
adc
adc
sbb
add
addr16
arpl
jb
xor
sub
or
pop
jb
jns
pop
sbb
add
adc
js
add
jns
inc
xorps
ja
adc
adc
pop
movsb
jle
pop
movsl
inc
push
ja
imul
mov
inc
push
inc
movsb
mov
dec
mov
dec
dec
inc
jp
push
jns
test
stos
cmpsb
xchg
inc
cmpsl
mov
pop
test
push
mov
lcall
test
test
loopne
lods
mov
in
sub
sti
call
in
jecxz
stos
repnz
xchg
mov
cld
sahf
sarb
hlt
addb
pushf
repnz
notl
int
hlt
xchg
ret
daa
jecxz
and
fldcw
and
lock
and
xlat
sub
hlt
int3
fldt
fisubs
cld
shrl
lret
add
and
rorb
add
enter
or
pop
fnstenv
shlb
fdivl
cmp
add
add
cmp
push
es
imul
xor
ds
popa
bound
insl
data16
push
or
inc
add
addr16
ja
jg
dec
pop
outsl
push
jae
push
pop
jno
inc
dec
push
inc
scas
dec
movsl
pusha
jb
outsl
push
push
push
dec
dec
jne
jne
jno
mov
mov
cmpb
dec
movsb
movsb
dec
xchg
scas
mov
mov
pop
mov
sbbl
out
mov
lods
lock
xchg
mul
xchg
mov
sbbl
xchg
lea
into
inc
imul
xchg
lock
cmpsl
clc
jle
mov
mov
repnz
xchg
mov
xchg
ret
xchg
cltd
mov
rol
out
sub
mov
shl
repz
in
push
mov
push
movzbl
and
mov
mov
addl
mov
add
xor
movl
movl
cmp
movl
jne
mov
add
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
xchg
xchg
mov
pop
shrb
mov
mov
sub
clc
jle
push
jg
jle
in
fsub
test
lret
popf
das
fdivl
int
jmp
call
daa
int
fcmove
into
rcl
add
es
sub
or
ss
fnstsw
xlat
push
sub
fnstsw
aaa
push
ss
add
xor
or
sbb
insb
gs
or
jnp
jnp
push
insl
sbb
sbb
jge,pt
js
ja
gs
dec
sbb
adc
inc
data16
sbb
jl
jno
push
je
pop
jge
push
test
inc
inc
inc
lods
jge
cmpsb
jge
mov
push
jbe
dec
dec
jae
movsl
dec
stos
dec
dec
test
mov
push
movsb
test
mov
nop
scas
xchg
xchg
cmpsb
lea
mov
sahf
xchg
jecxz
in
test
test
sbbl
jmp
out
lcall
xchg
mov
clc
mov
fwait
idivl
jecxz
clc
popf
xchg
lcall
rol
repz
in
into
in
sti
repz
shll
and
icebp
and
out
bnd
and
cs
fsubrs
rcl
and
stc
and
cmp
fidivrs
pandn
xor
add
and
add
das
adc
adc
adc
and
sub
push
sbb
push
aas
outsl
data16
xor
je
jle
adc
push
cmp
add
sbb
add
sbb
fs
dec
adc
push
fs
insl
imul
mov
dec
pop
je
dec
mov
jge
mov
mov
dec
stos
jno
dec
stos
inc
push
pop
mov
mov
stos
mov
inc
pop
push
mov
nop
xchg
mov
lahf
lods
mov
pushf
test
mov
sub
mov
mov
add
xchg
mov
rol
stos
jle
push
jg
jle
movsb
mov
test
and
lcall
mov
loopne
xchg
movsl
out
loope
mov
mov
out
nop
mov
idiv
leave
std
cwtl
in
lds
pushf
xchg
repz
rcr
cld
into
push
cmc
sahf
xchg
out
and
sub
fcmovnu
int
iret
sub
xor
cs
repnz
lret
fprem1
cli
fcom
into
aad
add
ds
ds
cmp
adc
adc
das
and
cmp
cmp
fnstenv
add
add
sbb
and
cmp
add
das
imul
jb
or
arpl
add
sbb
sbb
adc
push
pop
dec
dec
dec
push
pop
dec
jp
pop
pusha
mov
je
jns
pop
insl
jno
pop
push
mov
mov
scas
js
dec
jnp
dec
scas
push
pop
mov
lods
mov
pop
mov
lods
scas
dec
movsl
scas
xchg
movsb
lea
push
mov
test
nop
xchg
xchg
loopne
mov
jmp
cwtl
loopne
out
lods
divb
in
jmp
mov
mov
scas
xchg
mov
cli
out
mov
idivl
xchg
loope
vprotd
shr
leave
enter
lock
fadd
ret
hlt
and
les
lret
shll
fnsave
shll
sub
lret
cmp
xlat
xor
sub
daa
add
xor
lret
or
std
xor
sub
into
xor
aam
pop
pop
pop
cmp
fidivrl
cmp
imul
and
jae
bound
outsl
cmp
jae
xor
cmp
push
adc
jne
cmp
insb
dec
inc
sbb
push
sbb
dec
sbb
dec
dec
push
jo
xchg
xchg
mov
out
decb
out
lock
nop
call
dec
cld
jle
push
jg
jle
outsl
pop
jne
pop
pop
mov
movsl
insl
inc
lods
stos
test
lods
mov
outsl
movsl
ja
pop
jp
pop
pop
mov
jle
pop
dec
inc
cmpsl
dec
jge
inc
mov
mov
nop
lea
pushf
sahf
mov
xchg
loopne
mov
mov
mov
mov
in
icebp
out
xchg
mov
mov
in
lea
cwtl
in
cmpb
test
fwait
idiv
int
lahf
call
xchg
jecxz
xchg
aam
enter
ror
fld
clc
sti
xlat
out
lret
ljmp
in
rol
sub
repz
int3
add
cmp
shlb
add
xor
fdivl
rcll
sub
add
pusha
and
push
pop
es
bound
or
cs
jb
push
push
or
push
jge
adc
adc
add
sbb
adc
jae
dec
dec
pop
dec
sbb
je
jo
arpl
stos
cmpsl
arpl
inc
dec
dec
jb
jns
push
dec
insl
jge
inc
dec
inc
scas
jno
mov
push
jp
mov
jge
mov
mov
sbbl
mov
lahf
mov
lods
mov
xchg
cwtl
xchg
test
jecxz
sti
loope
nop
mov
mov
icebp
mov
out
ret
xchg
nop
lcall
mov
clc
mov
mov
hlt
test
int3
out
xchg
lcall
xchg
ret
shl
shl
loopne
imul
ljmp
sub
cld
int
aaa
cmc
cli
xor
int
ss
and
aaa
xlat
sub
and
cmp
sub
and
xchg
fwait
xchg
mov
out
pushf
out
addb
imul
jle
jg
jle
sub
adc
pusha
aam
xor
add
pop
imul
jb
xor
js
jl
jne
outsl
adc
popa
inc
inc
push
jne
or
push
inc
inc
dec
insl
outsb
pop
push
addr16
imul
inc
pop
sbb
stos
jne
inc
movsb
dec
dec
pop
pop
mov
mov
mov
pop
mov
push
push
inc
mov
test
inc
mov
orl
pop
test
sahf
nop
lods
xchg
mov
pop
mov
xchg
xchg
pop
xchg
lahf
popf
mov
sahf
mov
test
loopne
hlt
xchg
mov
loopne
mov
fwait
out
in
in
lock
sarb
std
out
cld
jmp
nop
cli
lret
lret
out
ficoml
fdiv
out
fcmovb
out
and
in
sub
es
repz
cs
rcr
sub
xor
cmp
sti
add
add
ffree
aam
rorb
xor
into
aam
sarl
push
adc
or
cmp
and
sub
and
add
ja
xor
push
pop
or
adc
adc
jle
add
jne
pushw
jg
adc
fs
imul
adc
insl
push
js
jg
dec
mov
insl
push
jo
inc
dec
cmpsb
pop
mov
dec
pop
dec
inc
insb
mov
jnp
push
lods
dec
push
mov
jge
jg
mov
mov
stos
stos
andb
mov
mov
pop
xchg
mov
mov
mov
lock
cltd
mov
ljmp
sahf
jmp
xchg
xchg
jmp
sahf
mov
xchg
hlt
xchg
push
mov
push
push
adc
movl
xor
or
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
addl
cwtl
cmp
lea
pop
mov
jle
push
jg
jle
xchg
out
test
enter
xchg
xchg
xchg
ljmp
idiv
lcall
daa
out
sti
ffree
in
ret
es
daa
rcl
aas
sub
icebp
ror
fdivs
and
add
leave
cmp
ds
xor
fmulp
push
add
sub
pop
cmp
adc
fcmovnu
sbb
cmp
adc
cmp
ds
sub
add
outsb
jns
jle
ja
sbb
pusha
pop
adc
dec
push
dec
or
or
inc
outsl
inc
inc
sbb
dec
pop
sbb
pop
dec
inc
inc
pop
inc
jns
inc
inc
push
pop
addr16
inc
inc
lods
inc
dec
mov
lods
dec
mov
dec
scas
push
mov
mov
jp
inc
pop
mov
movsl
test
test
push
mov
mov
xchg
nop
sahf
cmpsb
loope
test
orl
cmpsb
xrelease
imul
xchg
cld
mov
in
mov
jecxz
sub
jmp
mov
cltd
hlt
icebp
cld
ret
rcll
loopne
aam
xchg
shr
out
nop
lcall
out
cwtl
jecxz
aam
ljmp
out
and
aaa
sub
xor
shrb
and
and
and
pop
or
sub
or
and
or
xor
adc
cmp
or
add
sub
aas
push
push
and
or
push
sub
fs
rdpmc
or
outsb
xor
jno
xor
jne
or
jle
jp
inc
dec
or
imul
popa
addr16
jbe
sbb
push
mov
jno
gs
dec
inc
mov
pop
inc
mov
jge
push
jnp
jp
push
dec
inc
mov
mov
movsb
pop
test
dec
mov
xchg
cltd
xchg
xchg
mov
and
xchg
jmp
mov
aas
ffree
jle
push
jg
jle
mov
movsl
mov
test
mov
mov
loop
mov
test
loope
xor
mov
lock
fwait
mov
loop
sti
out
xorl
xchg
lds
mov
lret
test
int
cmc
shl
cltd
out
lret
shl
hlt
out
div
rol
jmp
and
cmc
lret
ss
and
ss
ds
shll
and
and
lret
iret
das
enter
and
sub
fistpl
sbb
fcomps
push
and
pop
push
bound
add
adc
push
bound
add
or
or
cmp
pop
jno
sbb
imul
outsl
inc
jo
push
pusha
ja
adc
js
insl
sbb
jae
pop
jle
push
insb
jns
scas
push
fs
push
cmpsl
cmpsl
mov
mov
pop
mov
push
lods
jle
mov
scas
mov
push
pop
mov
mov
test
lcall
mov
xchg
cmpsl
mov
mov
out
mov
popf
sar
rol
in
in
mov
fwait
mov
lcall
cltd
popf
sti
repnz
loopne
lcall
in
not
ljmp
fucomip
hlt
out
clc
and
aad
ret
ret
and
daa
fxch
and
sar
lret
fcom
cmp
xor
xor
fcmovnbe
xor
cmp
fsubl
aas
fldenv
xor
or
leave
fcom
pop
rcrl
pop
cmp
adc
and
push
sub
bound
cmp
pop
jbe
xor
cmp
pop
jge
jbe
jle
inc
dec
xchg
addl
call
hlt
jecxz
insb
call
stc
std
jle
push
jg
jle
pop
dec
jb
jl
dec
or
adc
dec
pop
pop
jle
inc
pop
pop
jb
inc
bound
js
inc
dec
mov
test
dec
dec
test
jo
dec
jg
jns
mov
mov
movsb
mov
lods
xchg
mov
xchg
lods
xchg
stos
mov
mov
scas
xchg
addl
mov
scas
jecxz
sahf
mov
xchg
addb
xchg
loop
lahf
out
ret
movl
divb
hlt
xchg
div
xchg
dec
xchg
xchg
xchg
test
call
leave
mov
repnz
xchg
sar
xlat
cwtl
rcl
notl
cltd
rcr
ret
ret
inc
cli
sub
cld
cld
ror
int
aad
xor
ss
xor
rcr
shrl
add
into
ror
or
add
sbb
sbb
xor
sub
fldenv
fists
xor
sbb
push
jb
imul
xor
insl
or
or
jae
jge
js
je,pt
jge
ja
jne
jl
dec
add
dec
push
pop
inc
sbb
jg
push
pop
jo
pop
jl
inc
mov
inc
inc
dec
dec
lods
dec
cmpsb
insb
insl
jb
mov
dec
inc
push
lods
dec
push
push
jge
push
inc
movsb
mov
inc
addb
stos
push
dec
stos
mov
mov
scas
mov
test
mov
loop
lcall
cmpsl
xchg
cwtl
icebp
xchg
movsl
test
cli
lock
div
xchg
ret
out
div
mov
mov
test
out
xchg
mov
nop
out
xchg
movb
popf
cwtl
lea
lret
aam
not
leave
fdiv
in
fst
fcmovnu
out
popf
sar
jmp
out
and
sub
xor
daa
sub
hlt
and
clc
flds
xchg
adcl
xchg
in
mov
popf
popf
lds
push
jg
jle
shlb
movb
aad
push
and
cmp
pop
aam
leave
cmp
and
cmp
sub
popa
or
adc
data16
add
pop
push
jo
jbe
push
push
fs
sbb
jge
sbb
imul
inc
push
jno
outsl
dec
inc
push
pop
sbb
insl
push
pop
mov
mov
mov
ja
mov
inc
outsl
movsl
jp
dec
dec
mov
inc
mov
mov
test
mov
mov
xchg
mov
mov
in
loopne
loop
lock
in
std
lcall
lds
jmp
mov
xchg
shl
clc
iret
decb
push
xchg
int
sar
xlat
icebp
icebp
xchg
fucomip
fdiv
fdiv
int
clc
stc
enter
and
int3
xor
fidivl
vpmovmskb
iret
xor
rcl
add
fdivrl
and
cmp
and
and
aaa
and
sub
pop
pusha
xlat
cmp
aaa
cmp
cmp
pusha
and
sub
add
pop
cmp
pop
or
or
outsb
push
pop
insl
imul
jbe
imul
dec
jg
jb
pop
adc
push
dec
je
push
pop
dec
push
jb
push
pusha
inc
push
dec
inc
jle
scas
jg
pop
mov
push
push
jbe
ja
inc
mov
pop
push
mov
pop
push
test
mov
mov
inc
nop
lods
lea
stos
test
push
pop
movsl
mov
xchg
pop
xchg
mov
movsb
in
repnz
fwait
xchg
mov
mov
cmp
lds
xchg
sti
xchg
test
jae
pushf
icebp
mov
repnz
jmp
mov
jle
jle
nop
nop
loop
mov
out
ret
xchg
xchg
in
sti
clc
jmp
lds
jle
add
add
jbe
addl
push
fcmovb
jbe
orl
popl
inc
ss
push
jge
mov
lods
push
jge
mov
lds
jge
xchg
ficompl
xchg
jbe
mov
in
xchg
lcall
addl
jbe
jle
jle
cmpl
jle
lds
push
jbe
mov
lods
jb
add
cmp
jns
jns
xor
jns
jns
pushf
data16
add
sbbl
jle
lds
bnd
add
mov
std
jle
cmp
loop
push
fistpll
jle
cmpl
mov
addl
mov
fidivrs
add
jp
mov
jg
jle
add
jp
mov
jg
jle
add
jp
movsl
jle
ds
ret
pop
jle
add
jp
jle
lds
inc
jp
inc
jg
jle
jle
mov
mov
lds
jle
xchg
lret
mov
xchg
lret
jg
jle
dec
into
jle
in
jns
lret
jle
jle
jns
pop
jp
sti
jp
into
lds
jle
addl
push
insb
imul
or
add
push
cmp
addl
xor
imul
subl
cmp
pusha
add
andl
sbb
cmp
data16
cmpsl
ss
mov
lds
jle
lds
inc
mov
ret
mov
jp
sti
lds
jle
add
jp
into
jle
data16
les
jns
inc
nop
ds
pop
repz
jp
sti
lds
jle
add
jp
into
jle
data16
out
jle
mov
add
jp
sti
add
jp
into
jle
data16
mov
mov
lds
jle
lds
inc
mov
fcmovb
jle
jle
jg
xor
lds
ss
lret
jle
xchg
xchg
data16
mov
jle
jns
jns
inc
xchg
ds
pop
repnz
jp
repz
jle
xchg
lret
pushw
cmpsl
scas
jle
lds
jg
jle
scas
jns
jns
inc
jb
xchg
lds
bnd
push
jge
mov
repnz
lret
gs
movsl
rolb
xchg
repz
lret
repnz
lods
in
jle
xchg
xchg
jbe
or
lods
lods
in
jle
xchg
xchg
lds
outsl
jge
outsb
repz
lds
cmp
mov
nop
jle
lds
repz
lret
pushw
add
jle
xor
repnz
lods
jbe
ret
cmpb
mov
push
ret
jle
adcl
lods
push
aaa
jle
jno
lds
adcl
mov
mov
push
data16
add
push
or
adc
jle
in
out
scas
jle
jle
mov
jle
orl
ds
mov
repz
repz
jae
jle
lds
cmp
jg
jle
jle
jle
in
jns
push
outsb
xor
push
andl
cmp
bnd
lods
xorl
dec
outsl
pop
lcall
mov
push
push
addl
adc
cmpl
jle
add
gs
lds
sti
add
scas
outsb
lds
jns
xor
inc
cmp
push
ret
dec
jg
jle
mov
lods
push
lret
add
jle
jbe
in
inc
lds
inc
addl
cmpl
daa
data16
add
add
jbe
add
jbe
orl
lds
jle
lods
jle
add
lods
jb
add
lods
push
jge
push
jb
add
jp
mov
lds
jle
add
mov
push
mov
jns
jbe
add
lds
fwait
add
outsb
dec
adc
ret
jle
ds
jle
mov
jbe
add
jge
mov
lret
mov
mov
jns
dec
fsubp
std
jle
jecxz
jle
orl
jle
jle
nop
addw
jle
in
lea
jns
push
jp
mov
lods
mov
xchg
push
jns
push
outsb
addl
sti
push
dec
gs
outsb
push
popl
jle
jle
lds
subl
jg
jle
or
fiaddl
jle
jns
lds
jg
jle
scas
jns
lds
push
xchg
push
daa
jle
sti
lds
cmp
jle
jle
ret
dec
repnz
jp
jle
nop
jle
in
xchg
push
mov
cmp
mov
jbe
mov
nop
jp
cmp
jbe
dec
jbe
outsl
mov
cwtl
add
mov
add
inc
mov
loopne
mov
sbb
cmp
or
jbe
add
jp
mov
inc
lds
rep
mov
cwtl
add
mov
add
inc
mov
add
mov
push
popl
add
jp
mov
inc
dec
movl
mov
cwtl
add
loopne
mov
sarb
pop
lds
jbe
add
jp
xchg
mov
rorl
lds
push
mov
repz
inc
inc
mov
add
mov
nop
jle
lds
data16
lds
adc
or
into
data16
lds
or
adc
outsw
jns
jns
add
addb
inc
dec
data16
add
cmpb
push
add
mov
repz
pop
repz
les
jns
push
mov
or
push
std
or
push
add
js
push
movsl
dec
mov
mov
nop
jns
jle
jle
or
jle
ss
jle
jle
insl
inc
in
xchg
jl
jle
ja
mov
mov
jp
cmp
pop
mov
jle
or
jl
jle
ret
jle
les
mov
pop
or
addr16
jo
or
mov
popa
inc
mov
dec
ljmp
jle
mov
cs
sti
lds
dec
lds
or
jno
or
lret
jle
fisubl
jl
jle
push
inc
push
cmp
jle
jle
repz
jmp
data16
jle
lds
mov
in
std
xchg
inc
je
lds
je
das
inc
in
jge
jl
inc
mov
xchg
test
jl
jle
push
xchg
cltd
xchg
xchg
jns
mov
xor
inc
das
jle
jle
jmp
jle
stos
rep
cs
data16
repz
lea
inc
jl,pn
inc
lds
mov
mov
movd
sub
addr16
enter
ja,pn
jle
lds
repz
repnz
imul
lds
repz
repnz
adc
push
mov
mov
repz
xchg
xor
inc
out
jle
das
adc
mov
aas
les
inc
lds
jle
repz
push
cmp
aas
or
pop
movsl
inc
in
cwtl
cmp
or
add
data16
fstpt
push
repz
data16
push
aas
in
xchg
inc
inc
in
cwtl
cmpl
dec
gs
cmp
jge
or
dec
in
xchg
jg
jle
mov
movsl
bound
data16
lds
push
in
or
bound
std
dec
jle
jle
cmp
add
ja
in
jge
lds
movsl
inc
mov
cwtl
mov
jge
jle
imul
lds
push
in
or
insl
mov
ja
in
outsl
jg
push
sbb
mov
push
in
sub
jle
movsl
jle
aas
or
sbb
cmpl
jge
push
addl
inc
push
movd
gs
fwait
mov
push
jns
sbb
data16
inc
jge
push
addl
in
cwtl
inc
jns
lds
xor
jle
jle
jg
jge
sti
popa
psllq
sbb
jl
sti
movsl
add
sbb
test
lds
cmpsb
mov
in
je
jge
repz
dec
jp
xor
mov
cmpsb
jmp
jns
movsb
jle
movsl
ljmp
pop
jbe
rep
push
lds
jp
sti
mov
xchg
pop
cltd
cwtl
pop
cmp
jle
xchg
mov
jle
jg
jg
aas
cmp
jbe
repz
pop
lds
sbbl
sub
mov
cwtl
mov
dec
add
xor
aas
jge
cmpw
inc
xor
add
sub
jle
ds
jle
jne
jle
jg
pop
mov
loop
pop
mov
dec
les
aas
movb
lds
add
inc
sub
add
mov
pop
lds
pop
inc
jle
jle
movsl
addr16
loopne
mov
jle
mov
aas
cmpsl
inc
mov
pop
xchg
cmpsl
jge
std
jg,pt
ljmp
rol
jle
nop
jle
kxnorb
mov
scas
rol
jle
lds
inc
into
sub
jg
jle
dec
sar
jle
lds
inc
mov
add
jp
and
jbe
xorl
push
xchg
inc
in
bnd
ret
cwtl
repnz
lds
cld
jle
add
jle
ret
pop
jbe
cmp
jle
lds
pushl
push
inc
lea
nop
add
pop
mov
loop
jle
loopne
ret
jle
out
lret
lds
sbb
jle
std
jle
ds
loopne
ret
jle
or
jp
pusha
mov
cs
loopne
ret
jle
or
jbe
mov
xor
ret
jle
or
outsl
ret
mov
xor
aas
mov
jle
std
loopne
ret
mov
loopne
ret
mov
push
loopne
lret
jle
aas
std
lds
jo
jle
loopne
lret
mov
or
loopne
sarb
jle
ret
xor
adc
jle
je
jle
lret
jle
mov
loopne
lret
jle
aas
std
loopne
lret
mov
sbb
jle
loopne
sarb
jle
repnz
insb
loopne
rol
js
jle
lret
jle
mov
loopne
lret
jle
aas
std
lret
test
loopne
lret
jle
loopne
sarb
jle
cmp
lret
cmp
mov
loopne
lret
jle
aas
std
loopne
rol
inc
mov
ret
mov
loopne
lret
mov
inc
les
loopne
sarb
jle
or
loopne
ret
jle
repz
xchg
lds
cmp
push
mov
ret
mov
jecxz
jle
aas
mov
jle
ss
lds
push
fcmovb
pop
mov
loopne
fcmovb
mov
jle
cmp
ret
es
loopne
fidivrl
jle
sbb
loopne
fidivrl
jle
cmp
stos
mov
jp
loopne
fidivrl
jle
cmp
scas
mov
jbe
loopne
fidivrl
jle
cmp
mov
jle
add
ret
jle
inc
les
mov
popa
jecxz
jae
cwtl
loopne
fidivrl
jle
cmp
mov
jle
lret
jle
cwtl
loopne
fidivrl
jle
sbb
loopne
fidivrl
jle
cmp
mov
jle
add
movl
xchg
loop
and
addb
mov
lods
mov
jle
xor
addb
mov
jecxz
addb
mov
lods
cmpsb
addb
mov
jle
addb
mov
out
addb
mov
icebp
lea
lahf
mov
add
cmpb
lret
repnz
mov
mov
mov
add
dec
jg
lret
mov
inc
mov
ret
dec
jge
jle
loop
push
mov
jbe
mov
mov
mov
xchg
lds
lods
in
jge
add
mov
sbb
xlat
ret
jle
lds
xchg
lods
mov
add
lcall
aas
lods
in
jge
mov
dec
add
std
jle
jle
mov
scas
mov
ja
bnd
dec
mov
lret
jle
mov
mov
jle
lret
mulb
mov
push
mov
add
mov
lds
jle
add
ret
jle
jle
jle
scas
jns
jns
inc
mov
mov
mov
jle
lret
mulb
mov
push
mov
jns
mov
add
jle
add
ret
jle
jle
jle
scas
jns
jns
inc
mov
bnd
mov
pop
mov
lods
mov
dec
push
lods
ret
std
jns
cli
jle
ret
jle,pt
addb
mov
add
mov
jno
std
outsl
jg
mov
ret
mov
mov
jle
lret
mulb
add
mov
lods
in
mov
add
mov
jle
lret
jle
ret
jle
ljmp
jl
mov
dec
jl
jle
popf
in
xchg
loopne
ret
mov
lcall
sub
jle
xchg
lds
xor
pushf
in
loopne
lret
jle
push
mov
jle
xchg
loopne
lret
mov
loopne
lret
mov
lahf
in
loopne
lret
jle
in
loopne
lret
mov
out
loopne
lret
jle
in
loopne
lret
mov
mov
loopne
lret
jle
loopne
lret
mov
lds
or
loopne
lret
jle
mul
push
mov
jle
xchg
lret
mov
in
loopne
lret
mov
loopne
loopne
ret
jle
loopne
ret
mov
xchg
out
loopne
ret
jle
ljmp
mov
xchg
jecxz
loopne
lret
jle
loopne
ret
jle
jmp
jle
push
lret
mov
loopne
lret
mov
imul
aas
std
loopne
lret
mov
je
ds
loopne
ret
mov
lret
mov
mov
jle
xor
loopne
ret
mov
cmpb
loopne
ret
jle
mov
sahf
mov
cmpl
loopne
ret
jle
add
loopne
ret
jle
mov
loopne
jle
ss
aad
jle
loopne
ret
jle
aam
jle
loopne
ret
mov
test
jg
jle
ret
mov
mov
jle
lret
sub
mov
jle
lret
add
mov
jle
lret
xchg
add
mov
lods
in
mov
lret
xchg
mov
bnd
mov
jle
inc
jle
jle
jle
ret
jle
jle
jle
ret
mov
jle
jns
inc
xchg
std
loopne
cmp
jle
lcall
std
mov
and
jle
jle
ret
jle
ret
mov
add
mov
lods
in
mov
lret
scas
mov
mov
jle
jle
jns
mov
mov
subb
inc
ret
jle
cmp
mov
dec
jbe
ret
jns
lds
add
lret
jg
jle
repz
push
mov
jle
jle
jg
mov
dec
inc
jle
jle
jg
out
jle
loopne
add
loopne
add
mov
loopne
add
mov
add
mov
loopne
add
mov
add
mov
mov
xor
loopne
xorb
jle
loopne
xorb
jmp
jle
loopne
xorb
adc
jle
loopne
cmp
sbb
loopne
xorb
mov
loopne
xorb
addb
xorb
mov
jle
in
loopne
ret
jle
addb
mov
addb
mov
addb
mov
or
mov
pop
outsl
addr16
lcall
mov
ret
jle
ret
mov
add
mov
lods
in
mov
lds
ds
mov
add
mov
jle
ret
mov
jle
jns
jns
inc
xchg
add
mov
mov
imul
out
loope
jle
lds
aas
ret
mov
inc
ds
mov
jle
vcvtsd2ss
loopne
sarb
jle
cmp
loopne
rol
les
arpl
jle
jle
cmp
lds
or
enter
loopne
lret
mov
mov
loopne
sarb
jle
push
lds
fisubs
jnp
loopne
ret
jle
lods
loopne
ret
jle
loopne
ret
jle
loopne
sarb
jle
ret
mov
mov
jle
add
mov
loope
add
jle
mov
mov
ret
mov
orl
add
ret
jle
jle
jle
ret
mov
push
jp
jle
mov
mov
jle
mov
cmp
add
mov
jns
mov
mov
jle
lret
ret
jle
jle
ret
jle
aaa
data16
jle
ret
jle
ret
mov
add
mov
lret
mov
jns
mov
mov
add
fiaddl
addr16
addb
mov
addb
mov
addb
mov
add
mov
jle
add
mov
mov
dec
mov
jle
inc
jg
jle
dec
lds
ret
dec
repz
push
mov
arpl
add
mov
mov
dec
mov
pop
lds
gs
jns
lds
inc
jg
jle
jle
cmp
lds
push
repz
dec
mov
jle
scas
jns
lds
jle
mov
cmpsb
jge
jle
inc
jg
jle
inc
lds
inc
jge
jle
dec
lds
ret
ret
dec
jge
jle
cli
std
dec
mov
lds
inc
mov
ret
add
andb
fcmovb
std
jbe
lret
jle
std
jns
lret
jle
lods
jns
mov
jle
into
mov
mov
jle
lret
mulb
add
mov
lret
mov
jle
mov
jle
lret
jle
lret
jle
lret
mov
mov
jle
add
mov
jle
jle
lret
jle
scas
jns
jns
inc
mov
subb
inc
ret
jle
cmp
mov
dec
jbe
ret
jns
lds
add
mov
jle
lds
subb
mov
jle
lds
and
add
cmp
push
mov
mov
jle
mov
cmp
push
mov
mov
lds
inc
jg
jle
ret
mov
jle
jns
jns
inc
xchg
mov
pop
mov
add
mov
dec
mov
cli
mov
jg
add
jg
jle
subb
mov
jle
lret
lcall
jg
jle
ret
jle
lds
jge
mov
add
mov
mov
lds
inc
jg
jle
ret
mov
jle
jns
jns
inc
xchg
ds
cmpsb
repnz
dec
mov
lock
pop
mov
mov
push
cmpb
dec
xchg
lds
mov
mov
push
mov
lds
test
jle
jle
je
add
xchg
movsl
mov
mov
addb
mov
xlat
addr16
std
jle
cmp
setb
pop
mov
movl
xchg
pop
mov
xchg
dec
mov
xor
out
mov
jns
jle
jle
xchg
lds
jle
fs
decl
cmp
lret
lods
jns
or
repz
movsb
mov
xchg
push
mov
dec
jle
dec
repnz
lds
mov
inc
lds
mov
scas
mov
cmpb
pop
mov
pop
mov
xchg
lds
and
push
in
mov
mov
mov
mov
scas
dec
or
ret
jns
lds
mov
mov
jle
jle
jle
lret
mov
mov
jle
lds
subb
mov
jle
lret
lcall
jg
jle
ret
jle
lds
jge
mov
add
mov
mov
lds
inc
jg
jle
scas
jns
jns
inc
mov
jle
jge
mov
mov
push
repz
movl
jle
lds
jle
repnz
orb
jns
lds
cmpb
add
mov
add
mov
jle
add
mov
jle
scas
lds
scas
lds
lods
lds
mov
lds
in
scas
lds
dec
lds
movsl
dec
cwtl
cltd
lds
xchg
jle
lds
nop
pop
outsb
jg
jle
mov
dec
jle
ret
ret
jle
or
ret
ret
jle
jo
ret
lds
sarb
jle
ds
ret
std
jle
cmp
dec
jle
dec
jle
jle
nop
mov
mov
ret
lds
das
jle
std
jle
jecxz
jle
add
dec
dec
cmp
xor
dec
bound
add
ret
sub
xchg
lea
cmp
jns
jns
xchg
repnz
vpaddw
jecxz
jle
adc
hlt
xor
xchg
xor
bnd
out
test
scas
lds
pop
jle
or
divl
dec
dec
xchg
xor
bnd
movsl
push
idiv
mov
lds
inc
repnz
lds
inc
pop
xor
divl
dec
dec
xchg
cmpl
jp
jge
mov
jbe
adc
hlt
xor
xchg
mov
jns
jb
aas
std
jge
jne
mov
mov
jb
fisubs
xor
mov
dec
dec
testb
adc
mov
outsb
xchg
cld
dec
jns
jns
xchg
cltd
lods
gs
cmp
push
jle
std
jle
push
lea
push
ret
ret
lds
cmpl
repz
gs
addl
out
push
testb
repz
mov
icebp
jno
jge
sti
jns
sti
mov
jp
or
divb
mov
gs
lds
das
pop
lods
lds
mov
inc
js
sti
jbe
dec
lock
kaddb
stc
jbe
sti
mov
jbe
js
jge
sti
jns
dec
repnz
sti
lds
jb
sti
xor
shll
cwtl
cltd
pop
xchg
inc
cmp
jle
lds
xor
ret
daa
jbe
xchg
movl
es
add
jp
mov
mov
mov
lea
cmp
addl
outsb
mov
jge
mov
lds
jle
cmp
or
or
mov
dec
inc
cmc
ret
lds
fwait
mov
lods
dec
jge
mov
dec
pop
out
jle
lds
fwait
mov
sbb
ret
mov
mov
inc
adc
sbb
mov
mov
repnz
vmovd
or
lods
push
jge
mov
inc
pop
push
repz
vmovd
or
lods
push
jge
mov
inc
lcall
lds
sbbl
ds
push
lds
dec
xchg
sbb
mov
lds
xchg
or
mov
lds
jge
jge
mov
repnz
inc
inc
mov
mov
lods
xchg
dec
inc
add
bnd
in
jle
addl
lds
xor
lds
jle
jns
lds
mov
lods
or
mov
repz
lds
repz
dec
adc
jle
jns
dec
mov
sbbl
loopne
add
jbe
addl
add
mov
jb
pop
jbe
mov
lods
push
lods
add
or
in
bnd
add
dec
adc
jle
jge
dec
or
mov
add
repz
push
jge
mov
dec
push
hlt
sarb
jns
addl
add
mov
jb
push
jbe
mov
lods
lretw
add
in
bnd
add
data16
jle
addl
push
pop
add
subl
lods
jp
sbb
jle
jle
add
jp
add
add
add
jp
add
add
mov
lds
orl
or
mov
repnz
push
add
inc
add
dec
jp
mov
lods
push
add
cmpsl
jp
mov
lods
push
add
add
aas
mov
repnz
lds
cmp
jg
jle
xor
pop
repz
jb
mov
add
dec
inc
orl
jle
std
jle
jns,pt
jb
jns
inc
dec
addl
add
add
jbe
dec
mov
lods
ret
jg
in
jle
orl
lds
add
sub
inc
add
jbe
add
in
bnd
add
jp
mov
lods
add
mov
xlat
movsl
ret
jns
lds
xchg
mov
lds
andw
jle
adc
lds
mov
lods
or
mov
lds
cmpl
lds
add
dec
lds
push
ret
pop
dec
ds
ret
xchg
jle
lds
lds
sarl
ret
jle
or
ret
jge
movsl
push
mov
add
bound
ret
lds
test
jle
jle
add
jbe
mov
ret
push
pop
and
jle
lea
popl
inc
xchg
lret
pcmpeqd
gs
lock
in
fwait
dec
outsb
dec
xor
decl
jle
mov
lds
fwait
inc
lds
in
bnd
pop
jge
dec
aas
dec
dec
addr16
lods
fwait
mov
mov
lods
lret
push
lods
in
jle
mov
fwait
push
lods
aas
in
bnd
pop
mov
repz
lds
fwait
push
lods
aas
in
bnd
pop
mov
repz
lds
fwait
push
jg
std
jns
outsb
mov
repz
jg
jp
repz
jle
jle
dec
lds
inc
test
pop
jecxz
jns
cwtl
jns
xchg
mov
cmp
jle
lds
add
jbe
addl
adc
ret
lds
cmpl
inc
mov
cmp
add
mov
lods
add
mov
lds
addl
lds
orl
jb
cmp
jb
ret
lds
orl
outsb
addl
lds
orl
inc
mov
addl
jge
jle
xchg
mov
dec
lock
mov
push
xchg
ret
jmp
jle
decb
loop
jle
jle
testl
lds
cmpl
push
orl
jle
add
add
jbe
add
push
jge
movl
lds
std
jle
lds
inc
mov
lds
jle
jle
add
dec
jbe
ret
in
xchg
call
ds
loopne
add
cmp
loopne
sub
loopne
add
add
ds
loopne
addl
jle
jle
movl
mov
sub
call
bnd
xorb
jmp
loop
jecxz
add
cmp
lds
lds
lret
jle
xchg
mov
mov
jg
jle
scas
lds
sbb
add
dec
lds
sbb
lds
mov
lds
jle
dec
mov
repz
lds
lds
mov
repz
lds
xchg
vmovdqa
jle
mov
jge
dec
pop
mov
or
jg
jle
jl
add
dec
repz
lret
jle
xchg
lds
jge
mov
dec
pop
mov
xchg
aas
dec
mov
inc
lds
add
jg
jle
jg
mov
jns
xchg
out
repz
inc
and
jle
lds
mov
aas
xchg
lret
push
jg
push
bound
mov
lods
inc
jge
or
ret
es
mov
lods
jp
or
or
mov
xor
movzwl
push
xchg
rorl
jle
xchg
vpunpckldq
xchg
gs
lds
xchg
mov
xchg
jl
aas
jno
pop
aas
or
cmpl
data16
lds
xchg
add
bound
adc
push
repnz
lds
mov
data16
jle
add
bound
mov
or
lods
in
lds
xchg
add
bound
xorl
inc
mov
lods
push
movsl
add
push
adc
mov
lds
int
jg
jle
or
or
mov
mov
repz
lds
lret
jle
xchg
lds
jge
mov
in
jns
xchg
mov
pop
dec
ds
jle
lds
orl
jbe
jns
ds
ret
cmp
jle
jns
push
jns
dec
repz
jns
ret
jns
ds
jle
lds
adcl
jo
jns
ds
ret
jle
repz
dec
jne
jns
ds
ret
jle
std
lds
jle
xchg
lds
push
adc
jle
lret
jle
mov
push
repz
jns
xchg
out
jns
pop
mov
std
jle
lds
jle
add
add
mov
mov
repz
inc
fisubl
lds
repz
dec
mov
jle
add
loopne
out
inc
jge
mov
jns
add
jle
ret
es
inc
gs
push
cmpsb
mov
mov
pop
push
addl
inc
cmpl
jle
std
jle
inc
repz
jle
add
dec
lods
jl
ds
cwtl
push
cmp
jle
lds
dec
inc
xor
mov
or
inc
or
pop
repnz
lret
dec
scas
pop
fwait
mov
inc
lds
xchg
pop
jge
jge
mov
inc
std
inc
cmpsb
ds
in
je
pop
cltd
ds
xchg
inc
cmp
jle
lds
add
jbe
addl
fcmovb
add
add
jbe
cwtl
ss
loopne
add
jb
ds
loopne
cmpl
add
jbe
ds
loopne
addl
add
dec
addw
popl
inc
nop
aas
repz
in
bnd
cmp
mov
dec
outsb
jbe
jle
lds
xor
lods
data16
mov
dec
outsb
pusha
ret
lds
cmpl
cmp
add
push
outsb
cmpl
cmp
add
sbb
xor
sti
xor
jb
jnp
jle
loopne
outsb
jnp
jle
loopne
jne
cmp
jge
loopne
jbe
js
loopne
sti
repz
push
mov
loopne
repz
data16
mov
loopne
repz
addr16
inc
jle
sti
fwait
mov
jle
js
mov
dec
jg
jle
sti
vmovd
ja
je
sbb
fwait
ret
lret
jle
mov
dec
sbb
ret
loopne
sti
lds
jle
loopne
jne
jbe
mov
in
sbb
mov
jnp
jle
loopne
jne
jbe
mov
icebp
sbb
sti
xor
fwait
xor
loopne
sti
loopne
sti
lds
jle
loopne
jne
jbe
mov
in
sbb
mov
jnp
jle
loopne
jne
jbe
mov
icebp
sbb
sti
xor
fwait
xor
loopne
sti
loopne
sti
fwait
sbb
jle
sti
push
ja
cmp
repnz
lods
in
jle
sti
sti
data16
ja
cmp
repnz
lods
in
jle
sti
sti
push
mov
sti
data16
mov
sti
fwait
mov
jle
js
mov
dec
js
jns
repz
mov
dec
outsl
outsb
repz
gs
lds
mov
lret
repnz
lods
in
jle
mov
repz
xor
jnp
jle
loopne
insb
mov
jle
mov
rep
lds
repz
mov
loopne
outsb
movsl
lods
loopne
insb
outsl
mov
rep
dec
gs
gs
aas
lods
cmp
cwtl
cltd
pop
xchg
dec
cmp
jle
inc
lds
nop
mov
jle
movsl
loopne
or
jnp
jle
loopne
or
add
jp
ret
xor
ret
daa
jbe
mov
repnz
xor
cmp
lret
cmp
mov
jle
loopne
add
lret
jp
xchg
adc
lret
jle
cmp
add
loopne
add
mov
jle
mov
repz
cltd
jp
xchg
sub
ret
bnd
inc
lret
or
loop
cwtl
xchg
cmp
add
jbe
daa
cmp
ret
data16
xchg
jns
jbe
inc
les
mov
lret
lret
aaa
jns
mov
jle
cmp
cmp
loopne
cmp
mov
jle
mov
repz
lret
jp
in
outsl
lods
adc
shrd
lret
xchg
loop
les
push
lcall
jne
repz
jp
mov
lods
dec
lods
aas
loopne
lret
and
add
cwtl
xchg
cmp
addl
jp
ret
cmp
daa
jbe
or
jns
loopne
inc
lds
xor
mov
jle
movsl
jnp
jle
loopne
add
cmp
mov
jle
mov
repnz
lea
dec
xor
lret
lret
mov
inc
mov
jle
mov
repz
in
lret
lods
jg
jno
adc
adc
lds
loop
xor
jle
loopne
add
lods
loopne
add
mov
repz
ret
sub
xchg
cltd
inc
repnz
gs
cmp
push
lds
inc
xor
nop
mov
jns
jnp
jle
xchg
cmp
mov
jle
xchg
loopne
add
movsl
inc
cmp
cmpl
inc
cmp
dec
jl
xor
dec
decl
mov
jns
js
cmp
mov
repz
sbb
jl
addl
inc
cmp
jle
lds
add
add
jbe
addl
data16
lds
andl
in
bnd
add
jbe
add
jbe
addl
jb
ret
add
add
jbe
add
push
mov
lret
jbe
ret
jle
mov
jmp
outsl
popl
inc
repnz
lods
in
lds
xchg
sub
cmovns
std
jle
lds
orl
outsb
mov
inc
mov
in
bnd
aas
mov
lock
inc
jbe
mov
jge
jbe
dec
lds
xchg
movl
outsb
inc
mov
lret
jbe
ret
jle
add
jbe
fstpt
add
dec
jbe
aas
movsl
mov
pushl
outsl
popl
inc
repnz
lods
in
mov
lock
lds
lds
mov
inc
lds
andl
jbe
ret
jg
in
jle
adcl
jbe
aas
movsl
mov
jp
outsl
popl
inc
repnz
lods
in
mov
lock
lds
lds
mov
lds
andl
jbe
ret
jg
in
jle
adcl
lds
jbe
mov
jge
jbe
inc
les
add
jbe
addr16
bound
cmp
jle
lds
jp
ret
daa
jbe
addl
jbe
ret
lods
jbe
ds
jp
mov
lods
in
mov
dec
cmpl
add
jbe
mov
lods
in
lds
mov
movsl
mov
lds
andl
in
bnd
mov
jge
dec
mov
xor
inc
lds
jle
nop
jle
lds
ret
add
add
jbe
jo
inc
rep
shlb
jle
jle
ds
jae
lret
jns
jns
mov
lea
mov
xchg
outsb
mov
inc
cmp
or
pushw
dec
jns
add
push
addw
gs
jp
add
jb
cmpl
jns
add
push
repz
lds
jnp
jns
sti
std
jle
inc
repz
jbe
xchg
add
push
jge
mov
repz
bound
mov
jns
mov
mov
repnz
jp
jle
addl
lods
fstpl
pop
add
jb
mov
lds
subl
dec
inc
sti
lea
nop
ret
sub
ds
ret
and
xor
mov
lods
outsb
pop
or
xchg
jnp
jle
lods
jle
push
cmp
jle
jle
mov
std
jle
pop
lods
cli
in
cltd
mov
mov
jns
outsb
mov
lds
fwait
dec
lret
loopne
out
mov
jl
mov
xor
cmp
loopne
or
dec
inc
je
mov
repnz
lds
je
dec
loopne
cmp
jle
loopne
jne
lods
mov
repnz
dec
cltd
clc
cmpl
mov
loopne
mov
jns
jbe
stc
in
cltd
inc
repz
add
mov
jns
dec
clc
icebp
ret
jns
lods
jns
ds
cwtl
cmp
jle
mov
pushl
aas
jns
loopne
push
lods
lods
mov
outsb
mov
dec
gs
sbb
lds
xchg
mov
rol
es
mov
repz
inc
addr16
jle
stos
in
jns
inc
jnp
jns
rol
jg
jle
or
or
or
ror
jle
add
ds
jle
jle
add
jle
jle
add
push
push
jle
add
jg
jle
add
push
lods
sarl
jle
add
jg
jle
sti
mov
data16
lds
leave
jle
lds
inc
jnp
jns
add
outsb
dec
ds
jle
lds
xchg
jg
jge
pop
mov
cwtl
jbe
sti
mov
jge
jge
mov
mov
icebp
jne
jge
fwait
adc
data16
call
vpunpckldq
sti
xor
mov
mov
push
clc
xchg
in
pop
vpaddq
mov
xchg
xchg
lret
jge
jge
movsl
jbe
xchg
addl
push
jle
jle
xchg
xchg
jle
push
repz
sbb
lea
jns
mov
ret
jb
lds
xorl
jp
jns
push
adc
fwait
lds
data16
shr
xchg
cwtl
pop
cltd
inc
cmp
jle
jns
adc
cs
jg
jle
fisubs
js
jns
dec
lds
inc
mov
cwtl
inc
rorl
aas
cmp
jle
lea
jle
inc
jle
loopne
jg
aas
std
std
jl
cmp
dec
xor
jle
loopne
cmp
jg
rol
jle
cmp
jle
inc
gs
mov
stos
jg
mov
mov
lds
sarb
jle
xchg
ljmp
push
inc
nop
jle
in
cwtl
xchg
ds
lds
aas
jo
jg
inc
jmp
outsl
ss
imul
mov
repz
ret
jns
mov
jg
jle
pop
jns
dec
cltd
inc
xor
lods
pop
jle
jle
data16
lods
inc
lret
ret
jns
mov
cwtl
xchg
cmp
ljmp
jb
addl
push
fcmovb
lds
addl
inc
jg
jle
mov
lds
jle
jle
lds
inc
mov
mov
cmp
add
bnd
aas
jge
mov
lods
aas
jge
mov
dec
add
sbb
mov
xchg
ret
xchg
jbe
push
mov
xchg
vpcmpeqd
push
lds
jbe
mov
cmp
jge
mov
jb
add
lds
addl
aas
jge
mov
lds
aas
lds
xchg
lds
std
jle
gs
inc
in
bnd
add
push
jge
aas
push
addl
add
outsb
outsb
repz
jbe
pusha
data16
jns
addl
lret
mov
pop
data16
lds
cmpl
xchg
inc
in
jns
jb
andl
in
jns
add
outsb
push
add
push
mov
movsl
add
push
orl
mov
mov
mov
in
add
jb
mov
inc
mov
addr16
inc
mov
nop
cwtl
repz
outsb
xor
jns
add
xor
ds
repnz
add
xor
ds
loopne
cmpl
cltd
repnz
xor
mov
lods
mov
inc
xor
push
cmpl
test
add
xor
mov
lods
mov
inc
xor
push
aaa
cmpl
mov
add
xor
mov
lods
mov
inc
xor
push
xor
aas
mov
repz
xor
mov
lods
mov
inc
xor
push
xor
repz
lret
data16
jns
mov
mov
repnz
add
cmpl
jle
add
jle
lds
cmpl
ret
dec
jg
jle
sbbl
adc
addl
push
fcmovb
jbe
fwait
or
xor
addl
push
fcmovb
jbe
addl
cmp
lret
add
push
lds
movsl
or
bound
lds
orl
lret
or
bound
loop
lds
outsl
push
mov
lods
push
lods
add
push
lds
lds
mov
pop
ret
inc
repz
mov
stos
push
gs
adc
movsb
mov
decb
mov
decb
lds
jb
mov
lds
mov
bnd
push
movsl
or
mov
lds
xchg
or
push
movsl
or
jns
jns
add
push
lds
movsl
or
jb
mov
lds
cmpl
jns
addl
push
jle
les
cmpl
repnz
xor
ds
jmp
cmpl
loopne
add
xor
les
lods
xor
aas
xor
mov
repz
les
lods
xor
aas
xor
mov
repz
les
lods
xor
aas
xor
mov
repz
les
orl
xor
mov
repz
lret
dec
xor
lds
mov
mov
repnz
push
jle
lds
cmpl
inc
repz
jl
jle
addl
data16
gs
inc
lret
lret
pop
in
jns
outsb
rolb
jns
add
dec
ds
jle
std
jle
jecxz
jle
add
jbe
addl
adc
ret
jbe
fwait
or
rclb
ret
es
addl
push
jle
jle
addl
lds
addl
or
push
movsl
mov
push
jle
jle
add
push
push
mov
lods
or
loop
lds
orl
push
mov
lods
or
mov
add
jb
orl
repz
mov
stos
pop
gs
sub
movsb
lret
adc
cmp
aas
push
or
lds
bound
lds
xchg
repnz
in
movsl
jle
push
mov
repz
push
push
xchg
lds
adc
or
out
jns
lds
addl
or
push
movsl
mov
jb
mov
cmp
lds
cmpl
pop
push
xor
jns
push
repz
sub
data16
jns
add
dec
ds
jle
and
jle
add
bound
addl
ret
into
jbe
addl
push
fcmovb
jbe
fwait
addl
push
fcmovb
jbe
addl
lds
addl
or
push
movsl
mov
bound
jle
add
push
push
mov
lods
or
loop
lds
orl
push
mov
lods
or
mov
add
jb
orl
repz
mov
stos
pop
gs
sub
movsb
lret
push
mov
jl
cmp
aas
push
or
lds
push
mov
mov
lds
xchg
repnz
in
movsl
jle
push
mov
repz
push
push
xchg
lds
adc
or
out
jns
lds
addl
or
push
movsl
mov
jb
mov
cmp
lds
orl
addl
add
jp
mov
mov
dec
jne
jns
add
inc
xchg
cwtl
cmp
jle
lds
addl
jbe
ret
add
add
jbe
xchg
lds
jbe
mov
repnz
in
jge
push
jp
repz
lods
push
jge
into
jle
xchg
jle
lds
jle
lds
inc
jp
inc
jg
jle
jle
mov
mov
lds
jle
xchg
in
out
scas
jle
jle
jns
mov
dec
jns
std
psrad
jle
addl
nop
dec
or
jb
xchg
jp
push
data16
jns
addl
lds
cmpl
lds
xchg
ljmp
push
jle
jle
lods
addl
cmp
cmp
cld
ds
sar
add
add
ret
push
add
enter
leave
or
lret
push
or
ror
addl
adc
rolb
ficoml
sbbl
sbb
popa
pusha
add
andl
addl
bound
add
subl
addl
push
jo
jb
subl
sub
addl
jb
sub
xor
daa
and
lods
xor
mov
cmp
jle
jle
mov
les
mov
dec
movb
ret
jns
std
mov
pop
lods
repz
inc
daa
sarb
jle
les
inc
gs
inc
xor
dec
inc
ret
jns
les
repz
gs
dec
or
xor
sarb
jns
xchg
mov
push
mov
lods
inc
xor
or
xor
jns
push
mov
lods
inc
xor
or
xor
jns
push
cmpl
push
aas
jge
aas
add
cmp
repz
dec
lds
fs
dec
mov
repz
in
push
lds
inc
mov
repz
in
adc
inc
movb
xchg
cld
jns
cltd
jns
cwtl
dec
cmp
jle
or
cli
mov
mov
jg
aas
mov
movsl
jge
.byte
