loopne
insb
lcall
movsb
mov
dec
stc
or
aam
insl
sbb
inc
add
in
xor
insl
lods
jmp
jns
mov
jns
sti
cmpsb
jne
and
sbb
adc
push
mov
leave
shlb
pop
ret
imul
hlt
xchg
fnstenv
scas
and
fwait
xor
and
pop
and
ret
imulb
repz
mov
test
or
repnz
cmp
jno
test
ret
fcmovu
sbb
jno
xor
sbb
mov
add
stc
nop
xlat
shll
ds
lds
fwait
out
clc
or
aas
lods
xchg
xor
sbb
cmp
and
pop
dec
pop
lcall
sub
push
mov
mov
je
andb
andb
sbb
push
sbb
inc
or
testb
ds
mov
popa
sbb
idivb
stc
lods
and
dec
test
out
out
pop
je
pop
arpl
push
jns
xlat
or
and
push
xor
push
bound
ja
mov
and
push
dec
out
cli
adc
js
popa
pop
sub
rcll
addb
push
stc
jnp
adc
mov
dec
stos
data16
fwait
lea
mov
mov
das
inc
xor
lea
mov
bound
adc
stos
lods
push
pop
outsb
pop
out
push
jns
incl
dec
add
xchg
pop
mov
or
ffree
repz
and
jg
stc
xor
pop
pop
sbb
add
ss
push
xor
inc
negl
dec
mov
addr16
fwait
xlat
shrl
adc
mov
ds
xchg
iret
es
mov
clc
adc
cmp
xor
sbbb
pop
push
ret
or
das
add
pusha
inc
sub
pop
pop
push
and
ds
mov
cmp
in
mov
repnz
add
in
addr16
je
dec
cmpsl
movsl
in
dec
es
rolb
pop
jmp
icebp
shlb
cmpsb
addr16
jl
repz
sbb
loop
push
in
mov
sahf
jl
bound
add
popf
cmp
shlb
mov
and
mov
jg
xchg
pushf
sub
dec
ss
lahf
sbb
adc
push
fs
test
shl
or
les
sub
jnp
xor
mov
sub
fwait
les
xor
decl
xor
or
adc
loope
mov
imulb
jnp
mov
lds
les
or
pop
or
ret
mov
jnp
sub
test
add
or
jle
lret
lods
inc
jne
sub
xchg
dec
mov
aad
jo
imul
add
scas
aas
enter
xor
sub
stos
push
push
cli
mov
and
clc
cmp
pushf
push
push
push
inc
mov
inc
push
dec
push
outsb
jge
push
clc
hlt
lds
jb
aas
into
or
jno
add
xor
fcoml
insl
inc
mov
lea
xchg
ljmp
sub
lahf
pushf
sub
imul
xor
loopne
ja
dec
ret
outsl
or
push
xchg
imul
sub
je
fldl
shlb
dec
or
sbb
out
xchg
push
mov
lods
cmp
lret
nop
aad
sbb
in
jp
rol
pop
je
aam
cli
stos
cld
xchg
push
outsb
inc
dec
cmp
jecxz
in
arpl
loop
mov
lods
cmp
test
xchg
dec
xchg
cmc
cmp
or
xchg
sbb
shlb
or
sbb
pusha
cli
sar
xchg
dec
cwtl
mov
scas
js
push
cmp
push
cmp
lock
mov
shl
cmp
cli
mov
jp
jp
sub
adc
cmp
test
fbstp
dec
je,pn
mov
push
insb
jne
test
jnp
aad
push
addr16
js
xor
mov
jo
cmp
jns
push
xchg
loop
ss
addr16
push
or
sub
xchg
dec
iret
push
sbb
cmp
xor
xlat
out
insb
inc
das
sub
sub
mov
or
mov
ss
push
ds
xor
cwtl
fwait
pop
adc
sbb
test
jl
pop
scas
loop
fsts
insl
pop
push
adc
loopne
jp
jb
in
inc
es
cmovle
xor
pop
xor
mov
jecxz
je
or
ret
cwtl
jle
mov
or
fildll
sbb
cwtl
push
mov
mov
into
fidivrs
rolb
add
scas
xchg
cli
dec
shr
enter
push
mov
mov
jo
dec
push
xor
lahf
loopne
out
enter
loop
dec
cmc
push
jns
mov
into
stos
stc
push
add
ljmp
jo
sbb
out
inc
and
lcall
jne
fucomip
cmp
clc
sbb
mov
les
cld
loop
out
adc
lea
addr16
insl
fwait
daa
in
lahf
jo
jg
xchg
pop
outsb
xor
and
xchg
xchg
cwtl
cltd
into
movsb
das
add
stos
dec
popa
daa
dec
xor
cmp
add
aaa
idivb
jmp
call
jmp
sbb
xor
movsb
mov
sti
mov
test
push
dec
popa
test
lret
jg
iret
mov
jo
adcb
sbb
loope
add
and
push
dec
jnp
popl
xchg
xorl
adc
hlt
fcmovb
cmpsb
cmp
dec
cld
mov
xchg
popf
movsl
pop
fcoms
ficoml
in
addr16
pop
adc
sbb
sti
repz
jne
sbb
xchg
cmpsl
fs
adc
rolb
sub
movsb
mov
push
pop
xor
xchg
loopne
hlt
fdivp
mov
push
dec
sahf
inc
sub
mov
jle
push
ljmp
les
fcompl
jl
outsl
fmuls
fsubrl
adc
in
cli
loop
pushf
imul
pop
movntps
sub
push
add
lret
xchg
div
mov
mov
int3
iret
ret
inc
jl
iret
lods
iret
divl
in
out
fbstp
aam
mov
iret
xlat
add
push
inc
push
xorb
sub
xchg
adc
inc
repnz
pop
adc
fidivrs
sbb
mov
xchg
or
icebp
jb
fisubrs
cwtl
popa
cmc
dec
xlat
and
pop
imul
push
aad
adc
pushf
lcall
sahf
push
test
dec
jns
and
sub
xor
repz
add
repnz
xor
xor
push
mov
jmp
pop
jg
cld
ds
ret
fistpl
std
push
cld
loope
pusha
sbb
dec
add
fnstenv
mov
push
pop
lock
rcll
testl
daa
shl
jnp
popf
xchg
jbe
cmpsb
push
jg
or
jb
inc
xchg
jl
out
sahf
cld
pop
outsb
push
test
xor
sahf
jp
popl
dec
inc
ficompl
iret
and
sbb
icebp
add
push
arpl
shl
negb
adc
mov
adcb
xlat
in
lcall
or
stc
add
stos
add
cmp
popa
sub
mov
psllw
aaa
rol
and
scas
cmpsl
mov
addr16
out
int3
jb
cmp
inc
sub
push
test
add
mov
inc
cmpsb
cwtl
xchg
xchg
push
sbb
mov
xchg
push
push
fldcw
pop
adc
jge
mov
push
pushf
sbbb
sbb
repnz
lods
xchg
and
pop
push
cli
lock
sub
pop
push
adc
adc
mov
dec
add
xchg
repz
add
fadds
dec
dec
cmp
or
ljmp
dec
nopl
fdivp
hlt
and
cmpl
sbb
ret
je
xchg
data16
stos
test
pop
rcrb
and
cmpsb
adc
pop
test
jne
xchg
xor
rcl
int3
dec
pop
xchg
and
mov
jp
jae
and
push
faddp
stos
nop
in
jbe
push
sbb
jns
ljmp
adc
stos
pusha
dec
cmp
cmovno
mov
mov
or
jno
rol
fs
sbb
mov
pop
adc
loopne
fimuls
mov
mov
inc
das
addr16
imul
lea
rolb
push
xchg
lods
mov
dec
call
mov
imul
cwtl
jle
inc
incl
pop
lods
les
xchg
dec
push
mov
lcall
jne
cmpsl
gs
or
mov
xchg
mov
pusha
jo
inc
mov
and
aaa
clc
ljmp
inc
push
dec
bound
adc
pop
add
iret
push
and
mov
aam
adc
add
mov
insb
cli
lret
or
mov
xor
mov
jne
cmp
dec
adc
mov
jecxz
cmp
test
subb
cmp
xor
notl
jle
push
cmp
bound
push
push
popf
out
shrb
loopne
popf
movsl
add
pop
jg
jns
xchg
cs
loopne
cmp
jmp
sbb
cld
push
das
mov
add
enter
mov
psraw
push
lret
lock
rol
cmc
shll
pop
fsubs
adc
mov
cli
lret
jno
adc
mov
add
enter
hlt
fisubl
add
orb
int3
stos
arpl
mov
in
inc
add
adc
mov
and
in
or
dec
andl
in
fistps
fadds
dec
mov
cmpsb
pop
pop
mov
jbe
cmp
int
out
repnz
shlb
pushf
cmpsb
xchg
test
xchg
sbb
inc
outsb
xor
jp
inc
sub
jno
idivb
sbb
xchg
add
test
mov
xchg
insl
outsl
leave
lcall
adc
cltd
jp
lret
movsb
add
mov
in
cmpb
bound
add
push
daa
sarb
sub
push
pushl
pop
fistps
jae
stc
mov
mov
xorl
xlat
lahf
jo
cmp
loop
push
stos
xor
inc
aad
or
adc
cltd
jbe
orl
cmp
dec
mov
adc
shr
sbb
add
pusha
mov
repnz
lcall
dec
lret
lret
jl
dec
shl
icebp
and
cld
pop
scas
cmpsb
scas
shl
out
les
mov
enter
push
inc
outsl
mov
xor
push
mov
xor
dec
xchg
mov
cs
arpl
popa
rorb
mov
cmp
adc
stc
inc
pushw
add
mov
stos
ret
add
dec
push
jo
push
enter
es
pop
jl
ss
test
sub
data16
mov
shll
jge
cwtl
aad
xchg
adc
pop
loopne
mov
fwait
ror
das
xor
data16
es
or
sub
xchg
test
pop
nop
movsl
imul
push
cmp
pop
push
jl
shll
xchg
add
cmpsl
rcll
enter
jnp
add
in
xor
adc
or
mov
mov
inc
sbb
jnp
repz
scas
data16
mov
lods
and
arpl
sbb
add
adc
or
inc
cmp
jle
aas
mov
sub
push
push
out
or
test
das
add
in
mov
imul
lret
sbb
popa
adc
imul
add
mov
sub
adc
mov
jp
sbb
mov
pop
xor
cmpsb
sbb
pusha
dec
shl
sbb
das
fiadds
add
xor
je
add
mov
pop
xchg
loope
dec
test
or
ror
pop
push
cmpsb
mov
cmp
mov
add
je
das
mov
stos
nop
sub
enter
cmp
imul
js
xchg
push
sbb
insl
add
pop
in
and
push
std
sbb
cmpsb
add
in
aam
sub
subb
cltd
pop
scas
es
fistpll
sbb
dec
mov
icebp
out
nop
push
or
inc
imul
ljmp
sbb
cltd
sbb
push
push
mov
dec
fwait
jge
jne
out
xor
and
and
or
fcompl
add
or
mov
xor
js
shlb
jbe
std
add
push
push
adc
adc
inc
add
mov
mov
test
incb
xchg
adc
cwtl
mov
cs
jns
dec
or
popf
aaa
test
outsl
jb
jmp
insb
inc
aas
mov
aam
imul
les
sti
or
add
jnp
xor
inc
sub
push
adc
mov
arpl
push
xchg
xchg
pop
cmpsl
cmpsb
sub
pop
sbb
add
sbb
and
mov
icebp
test
ljmp
pop
pusha
imul
fistpll
pop
xchg
cli
nop
pusha
pop
in
push
invd
sbb
out
test
push
imull
fwait
outsl
push
jne
push
jmp
je
and
dec
pusha
mov
mov
clc
fs
push
xchg
adc
repz
jbe
mov
inc
out
scas
xor
mov
pushf
push
mov
sbb
add
dec
in
fbld
cmp
out
xchg
mov
imul
enter
in
pop
sub
push
dec
xor
mov
xor
adc
enter
insb
push
and
sbb
lret
aam
xchg
mov
nop
sub
pop
fwait
mov
jbe
mov
push
popa
fwait
imul
lods
test
loope
mov
test
push
jp
push
out
mov
cmp
mov
icebp
jbe
dec
ljmp
push
adc
flds
ja
pop
mov
inc
inc
roll
pop
loope
les
adcl
mov
dec
js
xor
adc
dec
and
push
pop
push
cmp
movsl
mov
bound
insb
push
pop
arpl
pop
repz
bound
dec
inc
cmpsl
loopne
inc
bnd
push
sbb
sahf
imul
movsb
push
fsubl
ljmp
xor
pop
mov
inc
push
cmp
inc
test
add
enter
jle
sbb
mov
int3
sahf
nop
mov
dec
into
add
test
push
push
fistps
popa
sub
pop
popa
push
sbb
lret
xchg
push
aas
and
test
push
dec
mov
stos
shl
je
data16
in
sbbb
xchg
pop
xchg
addl
repnz
or
loop
cmp
jmp
addr16
push
cmp
dec
pop
pop
dec
sub
jecxz
mov
or
mov
pop
inc
popf
stos
sbb
add
sbb
adc
jnp
ss
repz
scas
inc
push
jne
xor
subb
shr
push
xchg
aam
jnp
jmp
movsb
add
popf
xchg
dec
lods
cmp
enter
js
add
loope
or
cmp
push
shrl
sub
push
adcl
leave
movsb
jb
stc
inc
lods
jbe
and
into
imul
test
sub
loop
ljmp
adc
cld
into
adc
cld
lds
mov
in
mov
push
movb
xchg
pop
xor
adc
shl
mov
insl
cwtl
in
test
fwait
adcb
mov
pop
ret
xchg
mov
scas
pop
jb
mov
das
subb
adc
adc
mov
inc
into
adc
mov
xchg
push
loop
repnz
test
push
ljmp
mov
pop
pop
add
mov
fidivrs
out
dec
shl
pop
enter
and
andb
aam
dec
insb
dec
and
in
mov
jns
push
test
loopne
lods
stc
lret
xor
aas
sbb
fcomps
and
inc
es
and
shll
dec
dec
test
push
adc
iret
aad
cmpsl
cld
and
das
add
int
push
je
inc
pop
clc
ja
lahf
lahf
xchg
addl
mov
mov
leave
cmp
cli
xchg
fcmovnu
repnz
roll
add
cmp
fiadds
inc
inc
bound
jge
and
cmpsb
inc
push
cmc
out
mov
add
ret
xchg
jae
adc
jne
pusha
repz
in
jnp
cmp
pextrw
dec
mov
mov
bound
test
adc
mov
fwait
sbb
inc
xchg
cmp
shrb
adc
pop
lcall
iret
popf
and
and
movsl
popf
clc
rcl
fs
and
dec
jge
cld
testl
jbe
push
ss
enter
clc
mov
lret
mov
cmp
out
hlt
push
cli
xchg
mov
jno
xchg
imul
ret
je
inc
sbb
sarl
jbe
sbb
push
arpl
mov
mov
repz
fs
sbb
aaa
sub
data16
pusha
sahf
stos
xchg
mov
mov
lods
xor
ja
xorl
xor
sub
daa
inc
inc
out
jb
sub
jg
movsb
lea
fdivl
js
repnz
sub
mov
stos
out
loop
pop
or
aam
pop
or
xchg
inc
mov
loopne
add
sub
sbb
inc
xor
mov
ljmp
into
xchg
aam
cmp
popf
lods
or
sahf
hlt
xor
or
jne
or
mov
push
pop
lahf
xchg
stos
aas
movsb
aad
scas
push
bound
push
fists
repz
cmp
lahf
dec
cmp
lret
jnp
jecxz
ret
sub
dec
cmp
jbe
iret
pop
mov
iret
andb
push
cmp
cwtl
lahf
mov
lods
pop
jg
or
push
sbb
dec
enter
popf
repnz
push
aaa
ja
or
push
push
shlb
adc
cld
outsl
ret
pop
jnp
mov
bound
and
dec
mov
adcb
push
dec
xor
inc
outsl
xchg
shll
in
mov
add
js
call
repz
decl
cld
sub
pop
pop
mov
stc
sbb
ficompl
push
insb
dec
loop
repz
sub
fsubrs
lret
fimull
cwtl
mov
std
sbb
mov
stos
adc
enter
es
sarb
insl
call
test
sbb
into
stos
js
pusha
or
pushf
lret
dec
mov
lret
cmc
dec
es
clc
int
movsb
dec
add
inc
pop
xchg
push
cmp
pop
mov
xchg
xchg
bound
inc
lods
bound
inc
cmp
inc
push
lods
mov
add
in
repnz
aam
pop
mov
xor
inc
enter
mov
push
ja
aas
xchg
loopne,pt
cli
cwtl
fidivrl
pop
jp
dec
ja
loop
mov
mov
mov
cmpsb
sbb
sahf
xor
loopne
pop
mov
jl
push
xor
push
pusha
sbb
test
adcb
hlt
inc
inc
adc
mov
mov
sahf
jp
cmp
out
clc
pop
or
mov
jp
adc
test
jne
xchg
mov
negb
mov
pusha
outsb
pop
lods
ret
in
ret
pop
into
xor
insb
mov
sub
ret
or
inc
andb
ret
xor
jo
sub
stc
cmp
js
leave
sub
pusha
dec
mov
push
leave
call
lock
adc
or
sub
mov
rclb
and
aad
xchg
mov
and
and
ret
jno
fnstenv
push
lahf
push
cmp
shll
inc
push
push
mov
mov
cmpsb
int
aad
movsl
adcb
xor
out
sub
fs
xchg
dec
call
out
sbbb
movaps
int
pop
ret
push
xor
divl
add
dec
mov
xchg
mov
bound
hlt
mov
ja
loopne
out
test
fs
test
push
mov
in
test
fcoms
lock
cltd
adc
mov
inc
dec
or
fld
pusha
jns
sbb
ja
pop
inc
and
xchg
sarb
mov
sbb
int
in
pop
or
inc
pusha
mov
pop
lea
inc
inc
dec
push
aad
or
mov
lcall
jae
jl
mov
vmread
call
arpl
jg
pop
in
and
hlt
hlt
sarb
ret
notb
fisttpll
xchg
xchg
dec
xchg
sbb
popf
popf
fcoms
inc
popa
dec
xlat
aas
roll
test
or
or
add
mov
insl
and
and
shll
pushf
sub
push
mov
or
test
jbe
insb
mov
dec
mov
cli
in
sarb
out
call
mov
push
adc
or
mov
test
lods
sbb
fldenv
sbb
in
sub
andl
outsb
xor
loope
pop
inc
addl
pop
or
mov
xchg
add
lods
push
adc
mov
push
in
aaa
test
inc
out
add
popa
cld
jb
pop
movd
fsubrl
mov
insb
sbb
xor
outsb
xchg
ss
mov
js
mov
sub
adc
cmp
notl
sub
repz
push
daa
in
xor
int3
dec
jmp
push
pop
insb
inc
mov
mov
movsb
push
sbb
and
std
xor
dec
cltd
pop
rcrl
mov
aaa
in
xlat
hlt
lahf
cmp
add
pop
lahf
add
dec
cmp
outsb
lods
sbb
inc
scas
mov
xor
mov
ds
or
jle
lods
ret
add
xlat
sbb
repnz
data16
cli
lahf
loope
lahf
jns
arpl
inc
adc
jp,pt
sbb
jae
pop
int3
ja
sub
ret
inc
out
fimull
mov
push
pop
jb
lret
xor
push
jp
clc
sbb
push
imul
sbb
outsb
clc
or
mov
cmpsl
push
mov
jae
sti
mov
mov
lret
or
cmp
idivb
and
sub
or
add
lea
dec
sbb
fs
or
inc
rcll
sub
sbb
scas
dec
cmp
lods
scas
clc
push
ficompl
movsb
xor
lcall
out
xchg
jbe
std
and
xchg
ds
xchg
inc
sub
int3
stos
movsb
lock
push
insb
push
je
inc
inc
xlat
jb
adc
mov
fwait
scas
aam
pop
ret
sub
fisubrl
cmp
fstpl
pop
push
pop
shlb
inc
and
fmuls
mov
test
push
in
push
mov
aas
iret
push
mov
jp,pt
cmc
adc
adc
in
movsl
test
fimuls
or
mov
dec
xor
decl
in
loopne
movsb
push
or
or
imul
and
pusha
jb
inc
cmp
jbe
rcll
hlt
mov
mov
push
add
mov
cmpsb
inc
adc
fidivrl
sti
push
push
pop
jns
lea
in
aaa
push
insl
enter
mov
mov
cmp
jns
jnp
repnz
sub
popa
mov
ret
mov
and
mov
cmp
add
inc
xchg
pop
out
sbb
cltd
shl
adc
les
cs
ret
std
dec
push
jg
adc
sub
xchg
leave
lret
in
jecxz
ret
inc
add
xchg
fnstcw
fs
ss
sbb
sbb
inc
stc
xchg
pop
pushf
sbb
sbb
xor
pop
mov
sub
or
pop
mov
sub
jl
mov
ret
repnz
daa
or
or
clc
mov
push
scas
mov
ret
arpl
sub
add
pop
outsb
pop
inc
and
shl
fisttpl
add
ja
adc
repz
fisubrs
fcoms
push
insb
mov
ds
test
std
push
lret
mov
out
cmp
scas
cltd
jae
aaa
into
fdecstp
push
pop
bound
mov
mov
test
call
pusha
fcoms
std
mov
lea
push
xor
dec
pop
out
fst
fidivrl
cmp
pop
mov
push
cmp
or
xorl
xchg
fadd
dec
fs
sub
mov
pop
adc
test
out
fimull
mov
clc
popf
fnsave
and
test
in
sub
aam
jmp
lock
pop
fistl
out
push
aaa
fcompl
cld
das
shlb
loopne
loopne
or
mov
or
ret
cmp
pop
mov
es
ljmp
fadds
or
filds
add
negl
jp
in
mov
aam
add
testb
pop
mov
jle
jp
ds
imulb
out
das
push
add
inc
repnz
lea
stc
aas
push
sub
movsl
xor
in
test
fiadds
mov
loopne
push
xchg
push
into
mov
mov
push
lret
sub
pop
or
into
mov
aas
dec
pop
sub
and
aam
lret
push
xor
push
pop
popa
lret
in
movsl
int
ds
mov
sub
xchg
je
test
rorb
cmpsl
mov
mov
jnp
daa
leave
push
cmp
inc
sbb
push
cli
pop
xchg
sub
and
mov
add
mov
xor
jno
ljmp
fisttpll
xorb
mov
divb
scas
jge
data16
ljmp
or
or
insb
fsubp
xor
xchg
xor
jno
outsb
aad
xor
frndint
pop
lods
xchg
les
lcall
xchg
xchg
xor
daa
add
cmpb
pop
in
mov
aad
cmp
popf
inc
es
addb
cltd
push
idivb
xor
in
xchg
jmp
jb
xchg
fwait
cli
dec
jae
and
cmpsl
cli
ret
mov
inc
mov
and
out
jne,pn
lods
int
fadds
dec
in
fwait
push
jb
mov
shrb
push
aas
inc
xor
push
std
mov
inc
js
je
repnz
pop
cmpsl
sub
cmpsb
push
push
push
add
cld
sbb
sub
cmp
lahf
sub
add
xor
jo
int3
loope
push
out
sbb
mov
lods
inc
ficoms
nop
repnz
flds
jecxz
into
mov
ss
out
adc
pusha
mov
mov
dec
inc
jl
sub
cmp
xchg
ds
fs
or
mov
adc
mov
in
int3
add
loope
pop
dec
adc
pop
into
jmp
test
daa
xchg
xor
mov
mov
or
in
int3
ss
popa
sub
add
aaa
cmpsb
pop
xchg
movsb
jbe
leave
add
mov
xor
stos
push
xor
es
bound
popf
std
loopne
add
int3
sbb
test
popf
clc
stos
or
mov
pushf
fwait
insl
mov
mov
pop
imul
sbb
inc
ret
pop
or
mov
clc
enter
orl
bound
popa
inc
mov
cmp
push
push
js
pushf
cmp
mov
or
pop
cld
fildl
rol
sub
push
icebp
cld
jp
mov
jmp
cmp
rcll
mov
cmpsb
mov
int3
outsl
outsl
mov
adc
pop
cwtl
push
lret
sbb
mov
adc
clc
push
cs
test
subb
mov
std
pop
jns
sub
pop
jns
test
sbb
push
adc
int
pop
and
pop
loop
aam
test
fs
mov
jb
pop
les
hlt
das
adc
pop
dec
rorl
sbbl
jge
out
orl
mov
arpl
stc
iret
dec
sub
repz
jo
pusha
lods
xor
dec
sub
push
sbb
into
xor
daa
popa
sbb
and
arpl
push
adc
nop
mov
push
cmp
mov
aam
mov
je
aaa
and
adc
jbe
mov
gs
inc
idivb
add
mov
add
sbb
insb
inc
jp
jns
test
cmp
dec
xlat
dec
inc
out
add
jo
loope
xchg
fsubr
add
push
andl
aaa
in
push
inc
fs
test
out
ds
test
ret
fildl
arpl
addb
and
mov
in
jp
mov
lret
out
call
pop
mov
sub
das
mov
es
xor
sub
push
out
xchg
stos
pushf
ds
mov
rcrb
jl
xchg
xchg
sarb
jno
cmp
push
leave
sub
mov
scas
mov
hlt
lea
cltd
sahf
aas
sti
xchg
or
dec
aam
sub
popf
popf
gs
adc
add
jbe
fmul
in
push
xor
cmp
sahf
inc
xchg
cmpsb
pop
cmpsl
aam
inc
xchg
jecxz
test
inc
cmpsb
pop
sub
sub
cmp
rcll
pop
mov
jno
loop
adc
js
jmp
js
xchg
mov
gs
sub
or
add
rcrl
test
lret
outsl
mov
inc
xor
sbb
or
push
loope
aas
and
in
xor
outsl
in
daa
sub
add
or
or
stos
in
sub
hlt
incl
and
and
sbb
dec
xchg
aad
dec
mov
lods
rol
mov
adc
scas
mov
xchg
lret
add
cmp
shlb
loop
outsb
je
imul
sahf
lock
cmpsl
jnp
pop
add
or
xchg
das
jns
xchg
lcall
mov
lods
idiv
pop
jb
in
sub
mov
in
xchg
and
mov
push
in
ds
inc
jg
dec
lcall
neg
xchg
daa
arpl
inc
pop
adc
cltd
push
jp
dec
mov
xor
xchg
pop
aam
jmp
int
xchg
adcb
dec
adcl
mov
mov
insl
inc
dec
data16
imul
and
jnp
out
lods
daa
mov
inc
jne
cmpsl
mov
mov
inc
incl
sub
add
and
xor
mov
movsb
loopne
mulb
sbb
icebp
or
mov
cwtl
cmp
push
das
jmp
out
xchg
jns
nop
imul
add
cs
push
cmovno
aad
mov
cmp
rclb
lret
add
mov
xchg
in
push
and
xor
lods
adc
jl
jo
add
pop
icebp
nop
jp
gs
mov
add
add
cli
daa
inc
bound
cmpb
movsl
inc
jbe
fcoms
sbb
aad
pop
mov
sbb
mov
arpl
lahf
xor
cmpsb
fs
lea
nop
xchg
testl
sarl
adc
jno
mov
xor
jne
in
pop
or
jae
hlt
or
insl
add
mov
rcrb
dec
xor
testl
les
int
push
call
adc
push
lock
inc
je
stos
loopne
or
xchg
les
divl
adc
jbe
sti
push
outsl
sub
daa
frstor
ret
mov
push
out
shl
sbb
sub
fistps
xor
inc
mov
sub
push
lret
mov
fidivrs
jg
add
inc
int3
and
xchg
mov
xor
lcall
aam
aam
sub
pushf
or
xor
xor
aaa
inc
cli
push
or
insb
cli
dec
sub
inc
lods
outsb
jae
icebp
popf
ret
out
inc
clc
lcall
and
mov
dec
or
gs
sbb
cld
fstl
arpl
jp
xchg
and
push
dec
dec
push
fwait
mov
je
cmp
pusha
add
popf
inc
jecxz
cmpsb
xchg
mov
adc
ret
xchg
fadd
in
push
fiaddl
out
outsb
in
jb
ds
fdivrl
sub
or
inc
rolb
xlat
out
jmp
ss
hlt
js
testl
mov
xlat
pop
sbb
or
xchg
int3
cwtl
cmp
shrb
lods
gs
fdivrl
xlat
lret
cmp
sar
mov
scas
jmp
or
and
dec
push
push
std
icebp
pushf
scas
popf
lret
pop
stc
movsb
repnz
push
cmp
movsl
mov
mov
lahf
popf
loopne
outsb
loop
sbb
lea
cmpsl
mov
inc
mov
xor
adc
sub
pop
mov
sbb
xchg
mov
sahf
loop
lock
hlt
les
insb
sbb
xchg
roll
pop
shl
pop
lret
dec
fisubrs
fisttpll
sbb
loope
enter
jo
arpl
lahf
sub
add
mov
not
mov
sbb
divl
neg
fcomps
push
rcrl
mov
push
rep
and
movsl
and
sub
je
fiaddl
jne
cwtl
arpl
xchg
push
pop
lods
daa
inc
mov
adc
push
daa
jo
aaa
jg
push
sbb
pop
mov
fldcw
dec
scas
sarl
adc
xchg
adc
aaa
jbe
pop
ret
push
dec
in
repnz
popf
test
sub
icebp
rolb
icebp
outsl
xchg
jl
fildl
cmp
sbb
mov
jb
pop
ror
es
or
divb
fucomip
inc
jmp
testl
hlt
movsb
fsubr
mov
mov
mov
jle
mov
mov
jmp
xchg
fmulp
loopne
in
xchg
jle
or
sbb
movsb
gs
adcl
jg
pop
shlb
mov
mov
xor
cmpsb
scas
das
or
icebp
mov
hlt
cmp
xchg
mov
mov
adc
push
sbb
jbe
and
mov
in
cmp
xchg
enter
sahf
pop
mov
sub
lds
xor
inc
pop
leave
push
in
in
ret
cld
jno
lods
mov
imul
loopne
xchg
cmc
sti
mov
dec
sbb
in
jge
sub
dec
into
xlat
loope
sub
lds
sub
inc
push
or
movsb
inc
pop
out
call
push
add
negb
cli
push
sub
mov
ret
inc
and
inc
popf
mov
scas
sti
andl
cli
mov
popa
into
pop
insb
clc
push
inc
jmp
idivb
subb
fsubrl
jmp
or
sbb
rorl
sub
cmp
iret
in
gs
push
jl
xchg
mov
jbe
ss
jmp
in
mov
or
or
int3
cmp
or
loope
add
jg
mov
pop
xor
movsb
inc
lods
fs
mov
clc
adc
xor
lods
inc
orl
sub
adc
xor
xchg
mov
clc
xorb
shrb
cmpsl
nop
sub
push
test
testb
movsl
ficoms
sbb
sub
inc
vpandn
inc
dec
imul
popf
xchg
clc
mov
adc
out
fdivs
mov
push
xchg
ja
cld
inc
sbb
push
sbb
mov
dec
sub
shr
mov
mov
ljmp
fcmovbe
jae
out
xchg
push
mov
lock
int
scas
inc
pop
out
pop
test
inc
jmp
fs
in
add
cmpsl
add
push
sub
xchg
div
mov
or
es
mov
adc
adc
inc
cld
dec
pop
dec
pop
mov
sub
pop
mov
inc
cmp
in
cmc
sub
or
pop
sarb
lds
add
ret
mov
pop
sub
cld
cmp
popf
xchg
jl
xor
adc
mov
or
addb
adc
std
sti
mov
daa
pop
mov
push
jnp
cmp
dec
mov
nop
mov
aas
fisubs
inc
bnd
repz
stos
outsb
repz
jbe
inc
loop
rcl
popf
sub
cmp
push
scas
orl
inc
insb
stc
popf
or
es
arpl
sbb
pop
inc
push
push
push
hlt
sbb
cmp
cli
jmp
mov
ds
std
int
mov
fs
and
imul
xlat
mov
push
jg
dec
icebp
xchg
mov
inc
cmpsb
sub
pop
movl
jne
pop
fldenv
dec
fcompl
pop
push
mov
or
fbld
adc
andl
dec
lret
push
cwtl
sub
stos
add
dec
pushw
cmp
adc
xchg
and
movsb
xor
outsb
clc
popa
inc
mov
lea
jle
sarl
sub
cmpsl
in
mov
repz
dec
aaa
pop
pusha
loopne
xor
div
cmp
loopne
mov
inc
push
jnp
ret
outsl
in
adc
jp
and
imul
in
lods
test
mov
push
adc
sbb
xor
push
sub
cli
addr16
out
into
push
aas
aaa
out
inc
pusha
lods
push
dec
xchg
stos
sub
push
sbb
xor
and
xor
insb
std
insl
aam
in
jge
aaa
jmp
add
sub
les
mov
or
mov
notb
inc
or
sbb
ret
xor
nop
xlat
push
cmp
test
out
pop
xchg
es
mov
aaa
pop
or
loop
push
xor
xor
xchg
cmpsl
xchg
adc
ret
and
nop
sub
mov
push
daa
cmp
sub
scas
or
push
or
scas
cmp
push
xor
mov
sub
or
movsl
bound
leave
push
adc
clc
sbb
dec
hlt
je
cwtl
jb
xchg
aam
daa
dec
xor
mov
jp
inc
sub
clc
faddp
stos
nop
jbe
inc
sub
hlt
fcmovb
cmpsb
mov
ds
lock
mov
cmp
push
in
sarb
ss
call
dec
xor
in
mov
jl
dec
cs
loopne
lods
xchg
js
inc
sub
neg
ret
je
inc
es
fdivrs
cmp
or
aam
mov
push
add
shlb
xor
add
int3
mov
jle
sbb
je
in
or
dec
sahf
movsb
mov
jbe
and
out
aam
mov
push
add
shll
xor
add
int3
mov
jle
dec
xor
cld
loop
scas
xchg
jp
inc
sub
clc
faddp
stos
add
lcall
pop
ds
lock
or
pop
repnz
mov
and
fs
or
imul
cs
or
subl
int
stos
xchg
add
adc
push
cmp
mov
cmpsl
test
jp
ljmp
mov
aas
decl
test
movsl
insb
nop
shrl
xchg
jp
mov
adc
faddp
inc
cmp
aaa
movsb
shrb
scas
inc
jp
jbe
repz
pop
push
orb
or
in
jns
fidivs
xchg
or
data16
mov
inc
lret
pop
filds
inc
dec
xchg
or
pop
rol
mov
je
in
or
loope
mov
into
dec
popf
subl
imul
adc
sub
in
cmpsb
jnp
inc
fstpt
sahf
cmp
mov
std
cmp
adc
mov
pop
inc
pop
pop
and
int
cs
sub
ficomps
int3
fildl
ljmp
xchg
stos
mov
jl
sub
push
xchg
ss
std
jbe
movsb
cli
pop
mov
mov
jl
mov
inc
testl
or
stc
das
or
rorb
loop
loope
dec
stc
std
jmp
push
sub
inc
mov
mov
push
in
addr16
add
fldl
sbb
jb
sub
jg
rol
loop
xchg
push
jp
add
pop
fcmovbe
loope
fwait
lea
adcb
xor
adc
dec
loopne
and
add
push
sub
cld
gs
filds
inc
fdivs
mov
repz
inc
shl
insl
mov
cwtl
clc
fnstcw
es
mov
jne
sbb
jmp
repnz
add
adc
test
push
mov
addl
cmpsb
lods
aad
pushf
bound
scas
inc
and
mov
sub
cld
rclb
fbstp
dec
test
mov
mov
lret
add
inc
mov
int3
les
stc
or
fs
fnclex
sub
mov
jbe
push
lods
pop
pop
pushf
jnp
mov
inc
addb
fsubs
mov
repz
hlt
arpl
js
in
push
add
lahf
adc
les
stos
push
sub
inc
xchg
adc
dec
xor
mov
cmpsb
sub
fistps
and
cld
in
sub
or
or
cmovae
leave
jge
es
xchg
rorb
mov
xchg
out
sahf
out
fs
popf
mov
mov
lcall
adc
fidivrl
outsl
xchg
pop
mov
es
icebp
dec
mov
lea
lods
jl
out
insb
lret
adc
sbb
lret
test
jp
mov
es
xor
lcall
fdivl
dec
pop
lret
cmp
mov
pop
adc
mov
xchg
sub
cmpsl
outsb
dec
notl
xchg
push
dec
xlat
ja
enter
inc
call
inc
cmpsb
push
dec
jecxz
pop
call
outsl
fstpl
xor
xor
rcl
mov
pop
pop
fs
cmpsl
mov
clc
sbb
dec
mov
xor
push
mov
sbb
inc
decl
mov
addr16
hlt
mov
push
repnz
aad
rorb
push
scas
movntq
adc
iret
and
aam
mov
notb
lock
pop
enter
cwtl
dec
in
in
gs
lods
push
ljmp
fucomi
mov
fisubl
cli
fs
icebp
jbe
ljmp
adc
pop
jmp
pop
xchg
int
push
jg
loopne
and
imulb
stos
sbb
out
xor
xor
icebp
xchg
scas
repz
std
leave
subb
jecxz
shr
or
scas
or
cmpsb
fwait
loope
xchg
push
outsl
pop
xchg
pop
mov
popa
ja
push
xchg
loope
xor
push
sub
movsl
sarb
sti
stos
pop
push
push
fcompl
mov
rclb
pop
into
pop
adc
push
aam
xor
leave
lcall
sbb
dec
fs
lock
jns
cmp
cmp
mov
sub
adc
jp
mov
cmp
jp
jp
repz
sub
lock
rcl
jle
lcall
cmp
inc
inc
mov
mov
cmp
inc
jb
xchg
pop
jbe
mov
xchg
shrb
int3
pop
inc
push
and
push
sbbl
cmp
fmulp
adc
mov
xchg
gs
sub
adc
add
loope
add
or
xchg
in
mov
ja
pop
sbbl
push
cmp
jbe
push
fisttps
daa
je
movsl
retw
cmp
sub
adc
sub
sbb
xchg
adc
in
xchg
lods
mov
pop
shl
sub
mov
add
std
scas
xchg
in
xor
push
loop
nop
aam
xchg
jne
xchg
gs
xor
sbb
inc
aas
in
pop
cmp
cmp
lods
push
xor
jmp
mov
mov
jnp
call
adc
xchg
jmp
adc
outsb
sbb
lret
bnd
adc
mov
imul
idivb
rcll
int3
mov
adc
hlt
mov
sub
outsl
mov
or
or
jge
jecxz
add
mulb
xchg
jge
loope
and
insl
sub
pop
sbbl
ret
adc
cmc
pop
push
in
xlat
mov
add
cmp
scas
ret
pop
sub
xchg
xchg
jno
and
pop
adc
loop
and
cmc
and
out
mov
cmp
add
adc
xchg
adc
rcr
lods
enter
add
in
mov
mov
xor
sbb
push
push
push
or
jo
push
adc
xor
lret
icebp
out
xlat
mov
inc
jno
adc
icebp
outsl
push
pop
jnp,pn
loope
mov
data16
mov
scas
mov
xor
cwtl
jle
mov
aas
lret
mov
jne
or
fstpl
les
cmpsl
ljmp
xchg
push
mov
mov
testl
mov
pushf
movsb
xor
out
jge
in
jb
mov
insb
jecxz
mov
xlat
mov
push
hlt
orb
es
or
and
cmp
outsb
xor
sub
add
int3
aas
xchg
or
lds
pusha
inc
mov
jg
sti
stos
aaa
adc
aaa
fcmovb
cmpsb
cltd
scas
pop
les
enter
loopne
cmp
mov
leave
pushf
add
mov
fwait
inc
sbb
lret
sbb
jne
pop
and
pop
jns
in
jo
sarb
mov
xchg
dec
xchg
ja
adc
fnstcw
and
out
pop
mov
push
call
ss
mov
sbb
mov
mov
jmp
xchg
jp
data16
or
les
sub
hlt
fidivrl
mov
or
shlb
dec
lahf
stc
cltd
jle
loop
xchg
lock
dec
mov
cli
ss
flds
aam
out
cli
loopne
lods
out
inc
mov
jbe
fnsave
adc
xchg
out
movsb
and
out
aam
sub
stos
hlt
pop
out
arpl
mov
mov
mov
arpl
test
jno
insl
js
neg
repz
inc
cmp
repnz
or
data16
dec
xor
mov
popf
jnp
in
xor
and
jb
fwait
clc
pop
cmc
xor
loopne
les
adc
imul
lods
push
jge
movsl
stos
jo
cmp
or
aam
mov
push
add
shlb
xor
add
int3
mov
jle
dec
xor
cld
loop
scas
xchg
jp
inc
sub
clc
faddp
stos
nop
jbe
mov
xor
pop
mov
xchg
lret
imul
mov
loope
pop
mov
std
pop
jecxz
sahf
ljmp
jns
dec
push
mov
cmp
nop
pop
iret
inc
push
in
cwtl
aaa
incb
fs
lcall
sarb
inc
outsb
push
pop
mov
mov
divl
or
in
sbbl
daa
add
mov
push
xor
js
jnp
sbb
js
mov
loope
bnd
ret
mov
and
dec
les
in
xor
sub
sub
push
add
pop
push
pop
push
pop
xor
jae
addw
and
mov
add
mov
add
cmp
add
sub
jg
add
push
mov
pop
cmp
jne
xor
inc
push
mov
pop
cmp
jne
mov
mov
xor
test
xchg
test
adc
nop
xchg
jae
cmp
test
ret
mov
pop
mov
test
rcrl
mov
imul
loop
insl
rolb
nop
loopne
rcrb
imul
pop
imul
xchg
test
imul
lds
and
xchg
test
mov
adcl
shrb
rolb
rcrb
pop
cmp
adc
rolb
sarb
in
rolb
pop
cmp
add
test
test
and
push
outsb
in
pop
push
dec
add
fs
add
hlt
mov
cmpsl
js
jg
dec
xchg
push
xchg
pop
lods
insb
ja
jns
jnp
cwtl
pop
iret
inc
scas
push
ret
dec
mov
inc
lea
inc
xchg
inc
xchg
dec
xchg
dec
xchg
dec
cltd
dec
fwait
push
popf
push
lahf
push
sub
movsb
and
cmpsl
insl
jp
push
icebp
or
in
sub
ja
xor
and
popf
sbb
jl
shlb
or
rclb
jmp
lahf
sbb
and
xlat
fsubr
into
xchg
das
jo
add
or
xor
aas
mov
jns
push
xor
push
out
jge
stos
mov
lret
out
int3
push
push
aaa
and
out
cmp
popf
mov
xor
stc
cmc
ljmp
dec
mov
cmp
push
adc
inc
sti
int3
mov
mov
addr16
test
push
or
fidivrs
and
jo
cwtl
jnp
xor
cltd
mov
sub
insl
jns
xor
inc
cmp
adc
mov
add
adc
sti
push
mov
mov
push
mov
repnz
pop
stos
in
pusha
pop
xor
lds
mov
adc
lret
mov
pusha
test
arpl
pop
