jae
out
repz
sub
aad
sub
pop
aam
push
fsubrl
adc
lret
mov
cld
cwtl
cwtl
jmp
mov
lods
lods
xor
pop
sub
xchg
adc
loop
cs
mov
cmp
push
or
xchg
iret
inc
fldl
fs
subl
push
and
cld
cmp
push
push
push
ja
add
iret
jbe
cmpsl
stos
rclb
jns
pop
in
nop
push
mov
icebp
cmpl
xchg
pop
in
or
or
adc
outsl
sar
adc
ljmp
fmul
test
sub
xchg
push
or
orl
iret
clc
push
or
scas
das
adc
addr16
popf
loop
or
dec
das
out
insl
or
pop
imul
pop
mov
test
stos
or
repz
neg
int3
sbb
and
jle
pop
pop
hlt
push
pop
pusha
fptan
sbb
lret
push
pushf
jecxz
aam
nop
movsl
fcomps
sbb
stos
mov
repz
and
nop
push
scas
xor
lahf
jbe
sub
lods
out
jae
fnstsw
add
jl
mov
pop
xchg
cmp
pop
sbb
pop
inc
lcall
iret
jbe
cmpsl
stos
cmp
sbb
cmpsl
sbb
xor
mov
cld
scas
or
xlat
iret
sbb
jo
push
gs
mov
sub
imul
rcrl
cmc
loop
cld
repz
mov
ret
lock
inc
dec
cld
push
notl
sbb
pop
into
popf
xorb
push
sub
sbb
push
cmp
jmp
hlt
cmp
cli
cs
shr
daa
adc
mov
repz
and
dec
adc
les
mov
add
mov
lea
and
adc
xchg
lahf
jle
jo,pt
ror
das
inc
insl
adc
xor
outsl
xchg
pop
push
sub
dec
xchg
fbstp
ja
push
mov
fidivrl
sbb
mov
adc
cmp
es
test
add
jo
fs
mov
mov
repz
fsubrl
fs
fidivrs
and
jne
negl
aad
pusha
arpl
xor
out
insl
lahf
out
mov
mov
cmpsl
stos
fcoms
daa
or
adc
addr16
fwait
imul
sti
pop
clc
push
pcmpgtd
ret
aad
pusha
arpl
push
das
out
insl
lahf
out
mov
mov
cmpsl
stos
les
and
cld
xchg
gs
mov
xchg
fs
mov
xor
inc
jne
jmp
ss
fists
clc
mov
lods
xor
cld
repz
push
add
sub
test
sbbb
fpatan
sub
lods
ss
scas
movsb
adc
dec
push
jne
out
jmp
xchg
sub
jbe
xor
dec
call
add
inc
call
sbb
ret
mov
push
and
lret
mov
adc
mov
adc
xchg
xor
sub
jbe
xor
dec
call
add
or
sbb
ret
mov
push
cmp
xor
je
xor
hlt
add
push
sub
test
xchg
add
iret
jbe
cmpsl
stos
fcoms
daa
or
push
push
idivl
or
imul
push
pcmpgtd
ss
dec
ja
mov
ja
stc
movsb
sahf
rorl
or
push
and
sbb
inc
outsl
push
push
idivl
or
imul
mov
pcmpgtd
ss
adc
outsl
pop
and
sbbb
pop
sub
cli
imul
test
daa
lahf
dec
ror
or
mov
and
sbbl
jge
inc
cmp
repnz
cld
pop
xor
enter
mov
lret
sbb
daa
or
push
push
idivl
lds
imul
sti
pop
in
pcmpgtd
ss
fists
clc
dec
mov
adc
cmp
xor
cld
repz
push
add
sub
test
sbbb
fpatan
in
inc
add
ss
or
testl
std
clc
push
mov
adc
jecxz
xor
cld
repz
push
add
sub
test
sbbb
fpatan
or
lods
ss
dec
cmpsl
adc
dec
push
jne
out
aad
pop
sub
mov
ss
jbe
cmpsl
stos
rol
test
int
push
pop
movsb
jne
cs
or
fisubs
orl
out
lret
fists
shrb
pop
fs
shlb
mov
rol
lcall
mov
sarl
pushf
jle
aam
out
dec
add
mov
and
cwtl
in
fildll
lret
dec
test
mov
pushf
rorl
or
xor
push
sub
jmp
ss
or
mov
and
lret
xor
adc
mov
or
adc
xchg
add
iret
jbe
cmpsl
stos
rol
test
ret
int3
aam
pop
push
push
or
fisubs
orl
jmp
ss
fists
clc
popa
mov
adc
and
int3
cld
repz
push
add
sub
test
sbbb
fpatan
in
add
ss
mov
ss
in
pop
cmp
fs
inc
orb
push
xchg
aam
adc
jl
jbe
fpatan
sbb
lods
ss
jb
sbb
mov
testl
mov
adc
rorl
loopne
stos
fcoms
daa
or
pop
push
idivl
or
imul
sti
pop
clc
push
pcmpgtd
ss
fists
shrb
pop
push
adc
push
xchg
mov
iret
rol
lcall
mov
sarl
pushf
jle
aad
out
sbb
addb
mov
and
cwtl
in
fildll
lret
fists
clc
shll
xor
cld
repz
push
add
sub
cwtl
jmp
push
fildl
xchg
movsl
cmp
pusha
enter
pop
add
std
clc
cmp
lods
xor
cld
repz
push
add
sub
sub
inc
jbe
frstor
sub
fcmovb
jae
pop
adc
cwtl
jo
add
xchg
popf
loop
or
cmp
fs
or
push
xchg
aam
adc
jl
jbe
int
hlt
fidivrl
and
sbbl
jnp
inc
cmp
repnz
cld
pop
mov
enter
mov
lret
add
mov
call
add
cmc
in
or
test
adc
mov
push
and
jne
negl
shlb
arpl
or
out
insl
lahf
out
mov
mov
cmpsl
stos
fcoml
cmp
pushf
jle
ror
out
adc
addb
mov
and
cwtl
std
pop
fildll
lret
fists
clc
pushf
mov
adc
enter
pushf
fmulp
cld
repz
push
add
sub
mov
addb
shll
fcoms
mov
xchg
imul
stos
fbstp
lds
or
icebp
sub
xchg
jle
xchg
aam
adc
jl
jbe
fpatan
mov
lods
ss
jb
sbb
mov
testl
mov
subl
movsb
in
mov
cmpsl
stos
rol
scas
mov
sub
aam
pop
cmp
cs
or
ficoms
pop
jno
push
leave
aad
xchg
rol
pusha
pusha
cld
lock
mov
mov
xchg
pusha
addb
nop
push
mov
addr16
mov
bound
lock
lahf
pop
xchg
xor
mov
shll
pushf
rolb
xchg
aad
cmp
pop
or
inc
cmp
pop
cld
push
pcmpgtd
enter
jbe
cmp
dec
int3
cmp
stos
js
gs
push
mov
negl
sub
adc
cmpl
pop
out
dec
xor
adc
mov
xchg
jmp
adc
xor
cwtl
xchg
jecxz
jno
stos
sahf
xor
or
test
ret
jl
pushf
icebp
rorb
mov
mov
pushf
pop
xor
shlb
jmp
cmp
sbb
jg
lahf
stc
lods
adc
and
cmp
cs
xor
xor
and
adc
lret
clc
js
ja
mov
adc
inc
push
inc
xchg
ss
fisttpl
sbb
dec
nop
test
dec
cmp
xor
adc
ja
fidivs
mov
cmp
out
imul
rcrb
push
lcall
lock
cld
mov
jb,pn
nop
adc
data16
push
mov
out
add
pop
push
test
fldt
sub
pop
rolb
adc
aad
jnp
mov
mov
push
sti
mov
into
out
fcoms
cli
pusha
cltd
xor
add
test
inc
add
divl
push
or
adc
or
adc
or
mov
mov
jne
xchg
shlb
mov
fwait
adcb
lcall
mov
cltd
ret
sbb
inc
sub
jbe
scas
adc
mov
lahf
lret
out
jns
jbe
mov
aas
aam
repz
cmp
and
adc
xchg
jmp
push
push
dec
sbb
xor
lods
sub
test
jg
rep
and
jne
mov
push
sbb
cmpsb
and
xchg
leave
bound
cmp
pop
leave
lods
shl
cmp
divl
mov
or
movsb
add
mov
imul
mov
icebp
subl
pop
mov
add
and
or
pop
push
sahf
or
pop
imul
pop
and
inc
fdivs
ret
cmp
out
fwait
jmp
cs
fcomps
in
dec
fistpll
ret
cmc
lds
push
xor
jo
mov
xchg
test
aam
test
or
mov
lea
xchg
mov
sub
sub
lret
unpckhps
add
push
ds
cwtl
cmpsl
hlt
mov
push
sbb
shll
aad
shll
mov
outsb
das
mov
ss
enter
dec
jl
xchg
leave
das
out
rclb
cmc
aam
fmul
cld
and
inc
sub
adc
test
rol
fmuls
lret
hlt
rcrb
add
mov
add
or
out
pop
mov
lcall
push
xchg
je
add
sbb
cli
or
orl
cli
les
or
stc
pushl
or
in
pop
cmp
andl
stos
fs
fistpl
xor
cmpsb
cmp
notl
add
xor
aad
in
pop
mov
mov
sbb
or
outsb
lahf
dec
lea
or
mov
and
scas
shrb
and
pushf
or
lret
xchg
and
test
xchg
add
lods
fists
push
repz
outsl
jl
pop
sbb
je
and
xor
lahf
push
pop
movsl
pop
addb
test
lock
mov
rcll
xchg
dec
in
in
pop
or
add
out
mov
mov
mov
mov
ds
jnp
es
pop
fs
mov
add
movb
inc
pop
dec
xchg
fwait
or
lods
xor
ja
movsb
scas
outsl
arpl
lret
addr16
xchg
daa
pusha
or
mov
test
jb
xor
jns
and
push
sub
movb
popa
push
jecxz
or
ret
roll
adc
dec
loopne
xchg
xor
adc
or
imul
and
inc
mov
int3
imul
cmpsb
shll
iret
mov
push
out
pop
xchg
mov
scas
enter
cmpsl
andb
mov
add
mov
mov
popf
out
mov
mov
jns
leave
out
mov
ret
dec
jns
and
rcr
lods
pop
jne
out
cld
addl
add
mov
xchg
xor
add
push
cmp
jns
ss
xchg
aam
add
sbb
cli
je
jno
loop
or
mov
int
cld
mov
arpl
inc
stos
push
js
mov
mov
mov
into
pop
or
pop
or
mov
or
dec
mov
adc
mov
mov
sbb
add
pop
mov
lret
jl
vmovntps
aad
das
hlt
sbb
jbe
sbb
cmpsl
dec
lods
lods
mov
or
jmp
or
and
scas
or
pop
cmp
pusha
pusha
xchg
or
addr16
lret
pusha
mov
stos
mov
repnz
and
ret
mov
ljmp
jge
mov
mov
sbb
inc
push
and
jecxz
dec
or
mull
or
and
aaa
mov
rorl
sub
and
or
fs
fdiv
add
push
arpl
aam
enter
mov
stc
roll
inc
inc
jmp
push
xchg
jb
ret
cmpsl
ds
fwait
jmp
outsb
fisubrs
hlt
aam
cwtl
or
add
dec
add
hlt
nop
cs
inc
ret
clc
sub
jbe
jbe
cmpsl
stos
xor
sbb
sub
adc
xorb
frstor
lods
sub
sbb
add
loopne
jne
push
lret
arpl
cld
mov
jnp
enter
fadd
add
repz
test
push
sub
insb
fwait
mov
sub
pop
xchg
lods
push
pop
push
jo
push
and
jno
or
jns
icebp
jle
add
mov
add
enter
or
mov
imull
fld
inc
fs
xorb
sbb
sahf
add
pushf
lods
and
rol
and
add
stc
arpl
push
mov
sub
mov
subl
cmp
push
jle
xor
hlt
cmp
pop
loopne
jb
scas
add
pusha
hlt
mov
lret
fcmovne
das
sbb
sub
fbld
xor
int3
sub
sub
sub
pop
jmp
xchg
or
scas
movsl
adc
fstpl
mov
hlt
add
sbb
pushf
pop
pushf
rorb
push
sub
stos
lret
fisttps
popa
sbb
fwait
sbbl
rcrb
cs
ds
mov
dec
or
imul
fs
lahf
dec
mov
cmc
cmpsl
and
sub
jnp
xchg
mov
je
mov
push
sub
out
fdiv
push
fildll
loope
push
enter
mov
jne
fistps
mov
je
mov
ss
xchg
cmpsb
ja
mov
sbbb
cs
add
jns
cmp
push
dec
xchg
in
mov
hlt
lods
dec
subb
stc
lahf
rorl
push
mov
das
repnz
lret
push
out
or
test
inc
lods
mov
or
mov
mov
hlt
lods
pop
gs
jecxz
sbb
ret
mov
push
pop
aad
xor
cmp
inc
mov
pop
cli
rcll
add
mov
ss
mov
or
repnz
lods
and
or
ds
jle
movsl
sbb
imul
or
nop
jnp
inc
mov
pop
je
out
fs
lret
cmpsl
js
int
sbb
or
pop
loopne
jb
mov
jno
push
insb
ror
cmp
ss
icebp
fmul
cld
repz
fs
push
shlb
imul
mov
xor
jns
mov
xchg
aas
into
rcr
pushf
hlt
add
sbb
jnp
in
mov
pusha
cld
jns
mov
inc
mov
or
orl
sbb
xor
mov
enter
dec
movsl
js
les
out
jp
int
xchg
and
xor
pop
fmulp
inc
lods
fmuls
push
lahf
push
sbb
fiadds
or
out
cmc
aaa
push
jecxz
adcb
mov
roll
pop
mov
pusha
mov
shll
cld
cmp
jg
test
stos
ss
mov
nop
push
push
mov
das
add
mov
push
sbb
sahf
add
fistpl
mov
sub
mov
or
mov
mov
sbb
fsubrs
sti
cmpsl
and
clc
mov
filds
addr16
sbb
or
fs
out
pop
out
aad
lahf
hlt
mov
mov
pop
inc
and
sbb
mov
xlat
nop
cmp
or
jbe
add
and
test
mov
push
pop
hlt
into
sub
dec
xchg
ljmp
cmpsb
repz
dec
or
test
adc
stc
arpl
push
repz
sub
inc
mov
jle
mov
mov
lods
pop
out
jae
cmc
hlt
cmp
add
mov
jecxz
out
nop
lods
divl
add
jb
pop
xor
mov
xor
mov
lods
or
scas
das
in
bound
stos
xor
dec
cld
in
push
jp
rolb
mov
jne
push
es
push
repz
aam
inc
mov
jecxz
mov
movsb
ja
jo
lods
pop
inc
jbe
jbe
push
pop
in
pop
mov
sahf
add
ret
cmc
jnp
inc
mov
jne
adc
inc
or
mov
xchg
xchg
sub
xchg
std
out
aaa
in
nop
mov
call
jecxz
scas
xchg
and
xor
cmpsl
pushl
outsb
mov
nop
cld
sbb
adc
sbb
push
inc
data16
mov
mov
xor
lcall
scas
and
jae
mov
clc
mov
outsb
mov
and
push
mov
adc
add
jp
pop
fmulp
inc
dec
pop
xor
inc
movsb
pop
rorb
shll
push
inc
mov
cmp
cltd
pop
stc
mov
loopne
aam
stc
sbb
adc
adc
sbb
sub
int3
mov
dec
aas
std
push
mov
std
stos
mov
jmp
ljmp
xchg
sbb
cs
punpckhbw
aaa
xchg
jg
or
inc
inc
jo
aaa
mov
bnd
les
xor
jmp
out
jno
fnsave
mov
cmp
xchg
and
cmp
add
xlat
cwtl
in
jne
je
lock
pop
or
lcall
add
rol
inc
sub
hlt
push
xor
into
lret
sub
and
push
sub
jnp
xchg
cmp
xor
sbbl
in
aam
lahf
loopne
movsb
shl
add
sub
and
xchg
cs
xor
jecxz
dec
or
jb
adc
sub
jbe
mov
jge
imul
testl
mov
sahf
bnd
addr16
adc
pop
loopne
pop
cmp
dec
or
outsl
ror
das
outsb
mov
daa
imul
or
xchg
aam
xchg
sub
mov
push
or
orl
sub
fcmovnb
jae
test
mov
imul
stos
fbstp
hlt
mov
das
cwtl
pop
fadd
mov
mov
and
push
inc
pop
cmpsl
test
sarl
pushf
fwait
jb
je
cs
imul
scas
or
xor
add
adc
mov
outsb
aaa
pop
xchg
sub
add
or
pop
jo
xchg
aam
sub
mov
sbb
push
jne
cmp
sbb
xor
rorl
and
lret
mov
dec
or
das
out
pop
mov
lcall
push
xchg
je
add
sbb
cli
jbe
imul
pop
pop
outsb
jecxz
and
cmp
fcoml
add
stc
add
xorl
in
jle
sbbl
jae
test
mov
push
jmpw
pop
dec
xchg
fwait
jmp
outsb
jg
and
cmp
adc
push
enter
dec
popf
jle
jne
jns
inc
jle
sbbl
add
out
addr16
xchg
fwait
imul
leave
sahf
lahf
hlt
cmp
inc
push
mov
push
inc
push
dec
push
nop
inc
aaa
mov
mov
repz
mov
add
sub
test
mov
test
xchg
sub
jns
mov
adc
out
mov
mov
lahf
pop
xchg
or
cs
cmp
sti
xor
pop
add
pop
and
sahf
aam
leave
sbbl
jbe
mov
pop
in
pusha
ficompl
add
out
mov
xchg
pop
stc
cmp
dec
fcmovne
cld
lret
sbb
sub
xchg
jl
repz
notl
arpl
lods
pop
xchg
mov
or
mov
xor
shrl
movsl
in
lahf
push
in
je
mov
aaa
clc
add
cwtl
test
dec
loopne
movsb
rcrl
inc
lods
pop
xchg
ja
movsb
push
movsl
clc
loop
movsb
jmp
push
dec
arpl
push
inc
or
jb
adc
sub
jbe
cld
sbb
inc
repz
vpsubsw
mov
or
cs
inc
ss
pushf
into
or
xchg
lcall
mov
cmc
sbb
mov
adc
and
dec
sbb
data16
js
push
lods
cmp
dec
sbb
push
jbe
mov
mov
clc
jns
dec
mov
mov
dec
clc
jecxz
aad
cmp
frstor
int
je
xor
or
fcmove
test
inc
out
mov
pop
mov
jge
cmpsb
cmp
mov
push
pop
in
mov
test
or
xor
aaa
daa
loopne
and
arpl
push
pop
mov
inc
sbb
lcall
inc
pop
test
xchg
inc
and
mov
xor
mov
sarl
jl
pop
aam
xlat
cwtl
outsb
pop
imul
fdivrs
cmpsl
and
stos
testl
pop
hlt
mov
jae
fstpl
jne
xchg
xor
hlt
jmp
mov
mov
adcl
mov
or
xchg
push
testl
jmp
aad
daa
mulps
pop
lods
sub
stos
fists
inc
push
nop
shlb
bound
aad
add
ja
pop
xor
mov
cmp
pop
mov
sub
inc
lds
jae
mov
cli
sbb
xor
idiv
xor
or
pop
outsl
rcrl
mov
add
lock
mov
test
ljmp
mov
lods
pop
mov
mov
pop
adc
pop
loopne
pop
in
stos
fucomip
mov
mov
lahf
outsb
sbb
push
repz
cmp
push
mov
sti
imul
mov
fxtract
push
sub
fwait
clts
add
mov
pop
ficomps
inc
aaa
mov
popf
imul
xor
jo
mov
sbb
push
or
mov
xor
xor
push
add
inc
or
paddw
xchg
adc
out
xchg
mov
push
out
cmc
pushf
enter
cld
stos
testl
push
inc
lret
jae
and
mov
pop
into
mov
xchg
mov
nop
cs
mov
xlat
orb
fisubs
aas
mov
mov
adc
push
mov
lods
cs
pop
adc
pop
loopne
pop
aad
stos
fisttps
mov
sub
rclb
insl
jne
fsubrs
je
xchg
ret
xor
mov
mov
loope
rcrb
pop
xchg
test
push
mov
xchg
hlt
add
inc
cmp
adc
pusha
push
jb
je
cmpsl
ljmp
inc
inc
imul
sti
mov
jmp
mov
xor
cmp
mov
inc
frstor
popa
clc
ds
jle
sarb
mov
test
repz
add
push
sub
shr
cmpsl
cmp
mov
jae
xor
int
sub
sbb
aad
sbb
xor
fsqrt
js
das
out
rorl
mov
jb
fs
jne
test
sub
xchg
clc
mov
hlt
enter
les
fimuls
scas
movsl
mov
aam
cmp
enter
out
jno
sbb
roll
jns
pusha
ds
adcl
sub
sub
sar
cmpsl
fcmovne
push
adcl
pop
out
imul
pushl
arpl
sbb
mov
mov
dec
test
mov
call
arpl
mov
dec
add
or
add
in
mov
or
lret
and
xchg
inc
pop
shrb
sti
insl
lahf
or
popf
inc
or
cltd
stc
in
or
mov
lcall
jle
pop
fstpl
jne
jb
mov
mov
aaa
push
stc
stos
sub
jne
mov
popa
les
fmulp
test
in
mov
push
sub
xchg
and
adcl
dec
sub
xor
andl
shl
adc
shrb
pop
es
and
push
sbb
pushf
enter
pop
addb
push
or
jle
mov
xor
stc
mov
add
mov
lds
ss
xor
sbbl
test
xchg
fwait
add
ja
fldl
or
fistpll
add
cs
cmp
test
add
fwait
xor
fs
mov
jl
sbb
ret
inc
cmp
repnz
mov
cli
push
cs
cwtl
repz
xchg
pop
sar
inc
pop
mov
pusha
add
mov
push
cmc
sbb
data16
mov
adc
jl
mov
inc
xchg
imul
fimull
jge
mov
test
mov
out
insl
aaa
push
pop
ss
adc
ret
push
lahf
lods
daa
movsb
shll
mov
add
xor
repnz
stos
stos
fucomip
mov
or
inc
mov
mov
mov
jl
test
incb
jae
xchg
adc
mov
test
pop
in
xor
dec
mov
lahf
hlt
divl
addl
push
xchg
or
pop
imul
cmpsb
ja
mov
inc
ljmp
mov
lods
and
movsb
adc
mov
ja
jbe
lock
jmp
in
fisubs
div
pushf
enter
lcall
or
mov
xor
and
add
jl
scas
add
or
das
scas
jne
jno
xor
pop
xor
mov
adc
sbb
not
dec
ljmp
pop
xchg
fimull
scas
movsl
pusha
sbb
xchg
aaa
inc
push
mov
or
jmp
aas
pusha
mov
imul
pushf
enter
bnd
std
push
lahf
mov
hlt
lret
out
gs
xor
push
test
movsb
lcall
stos
push
insb
jecxz
pop
or
cmc
fcoms
lds
push
loope
je
xor
loope
sub
add
daa
mov
in
flds
xchg
test
sbb
mov
test
push
enter
mov
lahf
inc
push
inc
push
xchg
or
sub
dec
or
popa
ret
sub
cld
jmp
cmp
sahf
repnz
pushf
mov
mov
and
in
repz
js
enter
bound
cli
xor
fadds
cmpsl
and
addb
imul
cmp
mov
xadd
lods
andb
cmp
clc
inc
sti
or
xor
insb
jmp
pusha
ds
sub
jbe
add
cld
imul
xor
mov
push
pop
mov
inc
mov
inc
jns
mov
sbb
mov
leave
adc
rorl
fs
lahf
dec
jge
mov
iret
cld
pop
cwtl
stos
int
xchg
aad
cmp
jl
mov
jmp
out
jno
lahf
hlt
mov
push
and
mov
mov
aaa
mov
push
lea
pop
ss
xchg
aam
shl
dec
cld
shll
push
xor
jle
dec
insl
sub
scas
fildll
test
push
enter
dec
push
pop
das
mov
sbb
jmp
pop
fmulp
inc
out
aad
cmp
jle
ret
mov
inc
or
mov
xor
pop
add
pop
inc
in
pusha
jecxz
pop
or
lock
push
xchg
or
sub
inc
or
mov
cmp
sub
jl
mov
mov
in
gs
shrl
cmp
push
mov
enter
dec
push
pop
das
mov
sbb
jmp
pop
fmulp
inc
data16
cmp
jle
out
out
dec
adc
mov
xor
inc
test
cmpsb
lcall
in
pusha
jecxz
hlt
cmc
nop
aam
out
insl
in
add
sbb
movsb
inc
or
fdivrl
push
roll
out
ds
jb
fwait
jmp
outsb
jbe
mov
arpl
inc
fs
hlt
dec
cld
fcomi
and
xchg
jg
sarl
xor
cwtl
sbb
mov
sub
jp
jbe
mov
lds
jae
xor
xor
jne
xor
mov
or
pop
push
adc
push
ja
je
fmuls
repnz
and
stos
inc
sub
adc
or
jbe
adc
mov
fnstenv
hlt
push
push
pause
cmp
xchg
nop
inc
es
push
add
pop
inc
mov
icebp
add
lods
faddl
adc
repnz
push
inc
dec
sbb
push
jbe
fyl2x
cmpl
aam
cwtl
jp
mov
pop
inc
and
hlt
pushl
mov
pop
imul
cmpsl
and
fstl
dec
pop
aam
push
fsubrl
sbb
iret
mov
push
out
pop
pusha
sbb
add
stos
push
push
mov
rorb
sbb
lods
jmp
mov
rclb
pop
jmp
shl
subl
mov
or
sbb
das
cmp
mov
mov
rol
jb
ja
mov
imul
rorl
arpl
cmp
sbb
mov
mov
pop
adc
lods
in
add
roll
stc
sbbl
enter
and
sub
shll
mov
leave
sub
mov
lea
loopne
xchg
xor
hlt
cmp
add
adc
xchg
iret
add
fimuls
sub
inc
sub
xchg
shll
jp
cs
add
int3
jo
jg
xor
rorl
push
or
mov
cmovl
shlb
outsb
mov
flds
repz
push
fdivrs
sub
push
je
insl
adc
rolb
sbb
movsl
adc
fs
push
dec
into
sahf
mov
lret
das
out
ret
xor
mov
jo
call
mov
dec
adc
aam
sbb
inc
mov
xchg
out
pop
inc
mov
fistpl
outsb
aaa
pop
xchg
xchg
pushf
rorl
or
push
sub
sub
ret
fcmovbe
push
jp
mov
cs
aas
jmp
shlb
pop
in
pop
loop
push
inc
fldenv
movsl
js
jae
adc
mov
xor
int
enter
push
cmp
push
notl
movsl
jle
mov
mov
pop
scas
movsl
adc
bound
rclb
das
inc
clc
popa
push
jne
je
xor
aad
adc
xchg
aam
sub
mov
sbb
fs
jb
mov
int
or
xchg
movb
mov
add
insl
aaa
sar
lods
lahf
mov
repz
pop
fiadds
jmp
divl
push
imull
jle
imul
test
jmp
mov
add
inc
ss
outsl
lahf
rcrl
mov
aaa
push
cmp
push
push
arpl
fwait
or
inc
push
mov
mov
pop
push
adc
in
mov
dec
or
fbld
mov
flds
aaa
sbb
mov
pop
je
cs
mov
mov
mov
add
jmp
mov
cmp
mov
sub
leave
cmp
es
jbe
cmpsl
stos
rol
aam
call
inc
mov
adc
jle
mov
push
mov
or
lret
mov
xlat
sbb
insl
adc
into
jnp
repz
and
push
jge
lret
scas
mov
add
clc
es
jns
mov
cmpsb
pop
add
stos
mov
cmc
add
cmp
sub
in
mov
iret
cld
pop
xor
aaa
frstor
repnz
push
or
dec
rcll
jns
mov
adc
inc
stos
fistps
and
insl
xor
not
mov
iret
cld
or
ret
push
sarl
pushf
aam
jbe
push
pop
xchg
cmp
mov
pop
jmp
js
je
add
cmc
add
es
imul
cmc
loop
std
repz
mov
inc
xchg
mov
lret
adc
or
jmp
mov
xor
cmpsb
imul
push
mov
jno
or
pushf
pop
pusha
rorl
mov
xchg
jns
inc
cld
aam
imul
and
cmp
mov
and
dec
adc
jb
add
ss
dec
or
mov
rorb
lds
out
push
cmp
popf
push
jecxz
mov
push
mov
hlt
xchg
fists
cmpsl
jne
add
inc
push
lods
in
pop
dec
or
mov
lahf
outsb
and
pop
popf
jb
fs
fmulp
sub
daa
loopne
mov
jae
and
push
mov
or
fucomip
mov
inc
and
insb
sbb
xchg
nop
dec
outsb
add
mov
ret
aad
mov
mov
imul
add
out
pop
mov
pop
or
xorb
mov
sub
cmp
pusha
ds
xor
hlt
xor
int3
test
inc
mov
divl
dec
mov
inc
push
jb
xor
hlt
bound
jb
mov
fists
outsl
pop
lret
cmp
shll
lock
or
aaa
fstl
les
ja
cs
mov
pushf
jns
lret
adc
mov
cltd
stos
fistpll
ret
cmc
nop
cs
leave
test
mov
aas
push
lods
les
mov
adc
xchg
cmp
xchg
mov
add
xor
mov
imul
add
ret
imul
outsl
push
xchg
or
sub
jecxz
cmpsl
pop
or
sub
xor
cmp
adc
mov
mov
inc
push
sbb
xor
jae
xor
or
mov
fistpll
out
insl
lahf
mov
inc
lret
xor
pop
sub
or
pop
cli
lahf
fs
shl
test
inc
lods
ss
jo
pushf
mov
xchg
negl
shll
shrl
and
push
aaa
imul
mov
sub
lret
dec
cld
ret
bound
mov
push
scas
ss
jb
sbb
movsl
adc
adc
mov
sub
or
shlb
loopne
mov
repz
xchg
or
xchg
decb
jbe
push
pop
cmc
mov
jae
inc
lret
push
pop
pusha
in
pop
mov
dec
and
jo,pt
ror
das
inc
cli
push
xorl
cld
repz
push
xchg
aam
mov
lods
bnd
or
add
mov
fimull
xchg
pop
cmpsb
lcall
jmp
pusha
jecxz
mov
nop
imul
mov
mov
pusha
cld
mov
andb
mov
or
xor
ja
push
mov
sbb
sahf
adc
inc
push
lods
and
das
insb
aaa
mov
sbb
imul
iret
or
cwtl
jl
mov
imul
mov
push
sbb
sahf
sbb
jmp
push
and
inc
and
xchg
push
pop
jne,pt
add
data16
data16
and
jnp
or
jbe
ficompl
fidivrl
lret
cmp
and
push
movsb
jo
inc
sbb
idivl
dec
outsb
add
enter
movsb
xchg
sub
jecxz
cmp
sahf
mov
out
push
or
ss
pushl
mov
adc
dec
cld
fcmovne
push
insb
aaa
cmp
ds
imul
pushf
enter
bnd
push
mov
fwait
jmp
sub
enter
lcall
cmpsb
lcall
xchg
bound
in
cmc
nop
inc
jb
push
xchg
or
mov
je
int
or
mov
push
sub
jl
bnd
fwait
imul
inc
movsb
popf
hlt
cmp
mov
sbb
inc
push
dec
sub
in
jne
stc
pop
pop
jne,pt
dec
in
add
pop
cmc
test
inc
repnz
cmp
test
sbb
lds
xor
xor
xor
jo
xor
or
enter
out
rcl
pusha
push
xor
xor
pop
cmp
rcll
pop
aam
push
fbstp
je
mov
mov
xor
mov
sbb
lret
enter
dec
popf
scas
in
jne
stc
testb
imul
sahf
enter
mov
test
lahf
push
imul
fwait
movsb
or
scas
push
sub
pop
cmp
pusha
pusha
jecxz
dec
or
jno
adc
popa
push
idiv
xor
fdivrs
repnz
and
out
jno
cwtl
shrb
push
pop
jle
sbb
repz
push
add
ss
aad
adc
sub
and
adc
and
cmp
gs
jmp
sbb
jmp
fs
stos
nop
inc
rep
ret
mov
stos
jbe
pop
pushf
subl
lods
movsl
adc
sub
mov
or
or
pop
ljmp
mov
cmp
js
mov
sub
lcall
lret
push
mov
sub
lahf
les
stos
enter
dec
movsb
jmp
sub
pusha
or
enter
insb
push
jne
cmpxchg
in
and
push
add
xor
jmp
out
repz
add
ss
push
lods
imul
cld
pop
fildll
and
and
pop
mov
sbb
mov
inc
dec
cld
insl
popa
push
mov
in
jle
sub
lahf
les
into
pop
scas
movsl
out
fsts
or
cmp
or
adc
cmp
xor
inc
or
add
test
inc
enter
sbb
push
mov
mov
pop
fstpl
push
add
mov
pop
cli
xchg
pop
push
mov
daa
or
arpl
popa
sbb
dec
addl
mov
int3
xor
adc
cltd
and
in
push
jmp
mov
adc
test
xchg
pop
push
mov
xor
je
fistpl
inc
jl
lcall
pop
and
push
test
in
cmpl
jge
jae
ss
cmp
and
inc
or
mov
aaa
sar
adc
jne
adc
jae
imul
int3
add
repnz
dec
add
jae
push
out
mov
fidivrs
aam
inc
scas
popf
xor
mov
xor
popf
mov
jecxz
jno
je
sub
pop
xor
cmp
repnz
addl
mov
les
loope
pop
mov
xor
xchg
je
aaa
dec
adc
std
dec
jbe
pop
loope
pop
sbb
adc
addr16
ficomps
ds
inc
dec
pushf
push
idivl
push
jmp
jle
int
mov
hlt
cmp
add
mov
cmp
sbb
outsb
or
mov
dec
xor
mov
sbb
test
inc
cmpsl
xchg
push
testl
jge
inc
lds
data16
pop
cmp
stos
fistpll
ret
cmc
lds
push
es
dec
sbb
clc
add
push
xchg
shll
mov
xor
xor
xlat
dec
scas
mov
mov
pop
jbe
repnz
clc
js
xor
repz
push
lea
testb
pop
push
or
jo
fwait
add
xor
and
jne
cltd
mov
dec
or
mov
adc
mov
add
xchg
pop
or
xor
mov
jmp
rorb
ret
add
mov
inc
adc
lret
fsubl
mov
aad
addr16
xchg
dec
fwait
rorl
or
push
mov
cmp
push
add
les
adc
sbb
mov
adc
mov
call
js
repnz
das
out
ret
mov
jo
mov
jecxz
cmp
sbb
mov
out
lods
dec
add
or
cli
sub
scas
or
dec
jno
xor
hlt
mov
in
fcomip
sub
pushf
out
jecxz
repz
enter
xor
inc
jle
lds
aas
jo
fwait
shrl
and
repnz
or
bswap
mov
or
or
aaa
rclb
push
in
mov
or
pop
xor
aam
ret
inc
sub
adc
or
jne
mov
lret
scas
or
sub
inc
mov
or
call
aam
push
adc
fmul
cld
out
in
or
mov
cmpsl
mov
jbe
or
xchg
mov
int
or
lcall
lret
lcall
rclb
mov
iret
push
data16
cmp
aam
inc
or
das
xchg
mov
rcrb
movsb
jns
bound
add
add
and
nop
stos
neg
xchg
bound
jne
icebp
dec
iret
cld
repz
fmulp
test
scas
sahf
cmp
scas
rclb
insb
out
cmp
mov
shl
popf
mov
shr
pusha
or
push
outsb
aaa
shlb
lret
jecxz
je
cmpb
pop
ss
jo
aam
mov
sete
jp
rcrl
shrl
fwait
andl
sub
stos
fildll
in
loope
loopne
pop
sarb
mov
test
cmpsl
and
mov
int3
test
push
popa
or
jle
test
or
imulb
or
cmpsb
mov
hlt
lods
pop
imul
in
mov
pusha
mov
cmp
mov
push
aad
or
sub
repz
mov
cmp
imul
ficompl
push
outsb
aaa
pop
xchg
lcall
les
je
bnd
dec
les
cs
imul
divb
or
adc
lret
push
push
shrb
cmp
push
pop
sbb
mov
fmulp
test
inc
repnz
mov
test
ret
push
sub
adc
loope
sbb
lret
movsb
ds
mov
and
clc
and
and
repz
mov
push
xchg
jge
sub
pop
push
mov
mov
sub
jl
int
mov
jne
test
or
jae
adc
adc
inc
mov
in
aaa
push
xchg
xorb
or
or
daa
fs
rorl
inc
jne
adc
mov
add
and
xchg
in
insl
lahf
dec
push
loop
fdivs
cmpsl
and
xor
shll
cld
in
pop
lea
fs
mov
jno
mov
jb
or
mov
xchg
int
out
insl
lahf
mov
mov
fdivrs
out
jae
cwtl
ret
cmpsl
fxch
or
jmp
cs
mov
test
and
fimull
mov
mov
clc
pusha
push
jo
push
std
iret
cld
sbb
jnp
ret
cmpsl
test
or
jle
adc
pop
in
je
fsubrl
scas
movsl
outsb
loop
out
xor
cmc
decl
xchg
or
popf
scas
fxch
aas
cwtl
mov
icebp
lcall
jl
daa
test
add
push
rcl
mov
and
aam
adc
mov
sub
or
jo
mov
push
insb
ds
cwtl
cmpsl
hlt
pop
mulb
daa
sub
push
idivl
mov
ja
push
mov
or
imul
stos
fbstp
jecxz
xchg
nop
lods
mov
jp
hlt
xor
sbb
jnp
ret
and
call
inc
test
mov
sahf
push
xor
mov
mov
mov
mov
int3
das
out
ret
inc
imul
dec
inc
xchg
aam
xchg
test
jp
gs
rorl
pop
movsl
jns
bound
mov
push
fmulp
mov
push
dec
or
mov
lahf
outsb
clc
in
cwtl
fmul
cld
pop
mov
xor
xchg
sar
inc
inc
dec
push
pop
lods
jb
cs
inc
xchg
sti
out
les
lahf
xor
pop
test
stos
lock
lahf
hlt
jns
cli
adc
aaa
rclb
cli
and
aaa
imul
pushf
or
push
sub
mov
push
dec
push
jle
dec
insl
sub
sbb
mov
xor
mov
outsb
in
mov
mov
aaa
sarb
mov
mov
add
mov
mov
stc
ds
and
lods
mov
stos
int
pushf
adc
cld
xor
dec
cld
fistpl
sub
dec
call
stos
mov
call
and
jbe
sub
hlt
lods
sub
shlb
movsl
adc
scas
cmp
test
cld
fcomi
xchg
cs
mov
sbb
cld
jns
mov
aas
sub
sbb
mov
mov
addl
inc
fildl
xchg
mov
mov
inc
push
jne
out
ja
outsb
ror
xchg
cmpsl
jl
add
cld
jns
mov
inc
mov
in
inc
adc
xchg
jmp
outsb
es
hlt
cmp
sub
mov
pushf
push
inc
push
lods
fmuls
icebp
cmc
clc
adc
stc
aaa
imul
aam
stos
add
or
jbe
pop
push
cmp
repnz
mov
sbb
hlt
jb
lods
stos
fistps
mov
insb
lahf
sar
mov
iret
cld
pop
cmpsl
imul
sbb
nop
shll
jbe
insl
gs
lods
cs
jns
insl
adc
pop
pop
xchg
jno
lret
and
or
mov
pop
jecxz
xor
nop
pushf
enter
bnd
fcom
push
pop
mov
sbb
repz
pop
int
pushf
pop
xchg
scas
pop
loop
xor
dec
cld
fistpl
cmp
jecxz
xor
fcoml
out
ds
xchg
lret
out
divl
jnp
int
mov
sbb
ss
push
sub
mov
mov
ljmp
out
insl
or
sub
jmp
cmpsb
and
shlb
mov
sub
cmpsl
and
or
subl
scas
push
sub
mov
int3
mov
aaa
sar
adc
rorl
enter
push
aas
inc
mov
imul
addr16
adc
mov
xor
and
mov
and
in
mov
dec
or
pop
shr
out
push
mov
into
push
ficomps
outsb
mov
lahf
sbb
movsl
shll
or
mov
cmc
push
pop
push
adc
pop
and
xchg
stc
cld
shrl
fbld
xchg
pusha
mov
and
xor
leave
sahf
enter
mov
test
jp
dec
sbb
shrl
fwait
mov
or
sbb
jne
shlb
popa
or
xor
ror
das
aas
popf
in
jne
je
mov
repnz
and
ret
mov
andb
lods
pop
test
pop
mov
xor
hlt
add
popf
fisubl
je
stc
jmp
mov
and
aaa
push
xchg
sahf
inc
cmp
shll
jnp
cs
call
ficompl
daa
scas
movsl
test
cmpsb
jmp
test
pusha
or
aaa
mov
sbb
push
in
adc
xchg
idivl
push
gs
jle
cs
fstpl
movsb
adc
aam
and
cli
sub
pusha
jecxz
mov
pop
add
mov
mov
popf
push
jecxz
cmp
push
cmp
sbb
test
jmp
sub
mov
push
inc
xchg
or
addr16
movsb
cs
rorl
mov
aam
cmp
jmp
cs
xchg
pop
xor
xor
lret
sub
or
sub
repnz
movsl
dec
mov
inc
les
push
idivl
je
xchg
fwait
jmp
outsb
jle
cmp
data16
add
push
test
jg
cld
ds
jle
lcall
xor
pop
xchg
fwait
sbb
mov
sub
stc
mov
sbb
shll
cmp
push
xchg
inc
es
adc
dec
pop
and
adc
xchg
pusha
ds
jns
push
jecxz
repz
in
inc
sub
sub
cld
adc
rol
call
jae
dec
fistl
pusha
add
adc
imul
cmp
enter
sahf
rorl
or
pop
jne
xchg
aam
in
xor
or
ljmp
jno
sbb
jne
pop
or
std
inc
add
mov
cmc
mov
pop
int3
rorb
dec
pop
ss
jns
aam
add
or
jg
mov
fcmovu
and
sbb
lret
divb
outsl
ror
pop
xchg
push
sahf
rorl
repz
ss
gs
aam
add
xor
jmp
das
fs
int3
mov
pushf
add
pop
loopne
xchg
xor
jecxz
js
outsl
and
dec
cmpsb
xor
inc
or
arpl
test
ret
adc
rorl
mov
test
lds
push
cmp
movsl
test
xchg
and
cmpsb
mov
mov
sbb
jmp
nop
and
shlb
mov
sub
jbe
mov
lds
scas
pop
sbb
mov
dec
repz
mov
enter
insl
jge
add
jmp
mov
aaa
sarb
mov
sub
push
xchg
push
lahf
or
movsl
shl
subl
push
mov
xchg
jne
xchg
outsl
dec
pop
and
or
enter
insb
jge
add
add
mov
fldcw
test
mov
fwait
push
jle
sub
push
lds
fstpl
jne
xchg
arpl
and
hlt
jecxz
cmc
clc
je
xchg
adc
pusha
push
div
xor
pop
nop
xchg
sbb
and
and
jl
cmp
push
ret
cmp
xor
mov
cmp
inc
loopne
pop
cmp
lret
mov
sarb
insb
jge
and
push
rorb
cmp
sbb
fs
adcb
mov
push
sbb
sahf
sbb
jne
cmp
outsl
dec
cld
pop
xchg
mov
popf
and
sbb
jmp
jne
enter
mov
sub
xlat
push
pop
push
movsb
out
repz
pop
lods
xchg
fstpl
cmpb
mov
sub
ficoms
or
je
je
push
adc
mov
shlb
xlat
aam
pop
or
cs
inc
int
add
jae
mov
test
and
sahf
mov
ficoms
mov
pop
imul
xchg
cmpsb
sub
sbb
push
pop
push
loope
subl
js
test
mov
sub
fiaddl
dec
js
fisubs
gs
lahf
rcrl
push
push
popf
enter
bnd
xlat
aam
lahf
or
out
inc
lods
rol
andl
pop
sbb
mov
sub
lret
push
jge
orl
adc
and
fcmove
cld
pop
enter
mov
shl
cmpsl
mov
fimuls
xchg
cmp
xor
mov
cmp
inc
loopne
pop
xchg
mov
mov
pop
out
insl
mov
gs
fstps
xor
aam
test
outsl
dec
cld
adc
push
mov
pusha
jg
mov
jb
or
mov
lret
push
ja
jno
push
outsb
ror
cmpb
dec
jns
stos
test
mov
fmulp
test
jmp
daa
nop
pop
notl
mov
fadds
jns
movl
leave
out
ljmp
and
popa
in
cmc
js
repnz
out
pop
mov
into
dec
int3
repz
popa
mov
test
outsl
dec
cld
call
cmp
cmp
es
cmp
mov
sbb
mov
and
xchg
mov
shrb
pop
mov
aam
je
mov
add
fbld
sub
imul
jecxz
mov
inc
jo
mov
mov
cmp
mov
xchg
dec
lods
bound
cmp
cmp
lret
clc
push
mov
xchg
jnp
into
fsubrs
pop
notl
push
pop
mov
ret
push
add
dec
add
repnz
mov
je
push
mov
and
jne
pop
xor
ss
fcoml
arpl
out
jecxz
sub
xchg
inc
mov
mov
ja
out
cmc
aaa
adc
adc
shrl
pop
sarb
mov
jne
pop
xor
sbb
sub
cwtl
mov
loope
rcrl
mov
out
das
adc
xor
jecxz
jl
outsl
lds
lret
mov
iret
imul
push
sub
sbb
push
add
sub
jmp
out
pop
mov
hlt
cmp
negb
mov
enter
dec
push
pop
es
fs
dec
imul
push
mov
pop
push
xchg
je
or
xor
jno
sub
inc
lds
push
cmp
mov
dec
mov
mov
int
mov
add
imul
sub
sbb
movsb
xchg
jmp
lods
mov
mov
or
das
dec
sbb
andl
dec
int
in
nop
inc
ss
pop
lahf
rcrl
sbbl
jb
push
adc
add
or
cmp
out
or
sahf
hlt
mov
imul
pop
and
nop
mov
lahf
outsb
sbb
jmp
lahf
and
and
xchg
or
mov
dec
mov
cmc
ljmp
lea
mov
dec
sbb
mov
aaa
rcrb
and
sub
repz
push
dec
push
aam
xchg
mov
or
add
xor
xor
int3
and
mov
mov
int3
jecxz
or
mov
push
xor
xor
pop
jns
sbb
and
cmpsl
aam
leave
sbbl
jbe
jecxz
rol
xlat
inc
lds
inc
cmp
jecxz
pop
mov
loope
cmc
clc
add
lock
fs
mov
inc
les
sbbb
fs
out
or
sahf
hlt
mov
in
aas
inc
pop
cmp
jge
cld
fisttpl
cmpsb
mov
add
fsub
repnz
and
dec
lods
lods
mov
call
push
test
ret
lahf
jns
mov
sti
aad
in
pop
mov
dec
loop
mov
aaa
sarb
jg
jne
repz
xor
and
in
cmc
call
xchg
xor
repz
pop
lods
mov
mov
and
out
mov
imul
or
sbb
xchg
push
jne,pt
icebp
enter
or
repnz
out
sete
dec
lret
xchg
cltd
xor
xor
jnp
inc
push
and
mov
dec
or
fildll
insl
lahf
xor
xor
or
pop
es
xchg
aam
test
inc
dec
jl
cmp
ret
aaa
mov
adc
ficoms
lahf
fistps
clc
mov
mov
jne
and
mov
enter
imul
jle
je
out
prefetchnta
xor
mov
dec
sbb
mov
sub
push
jnp
jb
mov
test
adc
aaa
es
add
ss
fs
aam
hlt
sub
fstl
cmpsb
shl
and
lods
ss
jno
sbb
nop
adc
sub
add
or
rclb
mov
ds
imul
cmpsl
and
stos
aad
cmp
call
adc
jle
test
and
in
adc
mov
xchg
mov
das
jns
jg
jne
outsl
call
stos
jmp
add
push
xlat
push
pop
mov
clc
push
add
ss
jno
sbb
jl
pop
fiaddl
lret
pop
stc
dec
cld
insl
aaa
cmp
lahf
sarl
and
daa
repnz
and
stos
sub
lcall
lods
mov
pop
jmp
pop
test
adc
fistps
js
lret
cli
loop
imul
and
mov
les
fsubrl
sbb
leave
call
mov
mov
xchg
jne
hlt
cmc
aaa
pop
fists
cli
cs
sar
shrl
pusha
jmp
xchg
and
popa
stos
jle
cs
decb
pop
push
inc
sbb
push
les
adc
nop
pop
xor
mov
push
pop
insl
mov
sar
xchg
push
pop
int3
mov
aaa
pop
push
push
push
out
aaa
es
loop
sbb
mov
stos
inc
sub
adc
mov
cmc
sub
mov
adc
scas
scas
out
outsb
nop
mov
inc
aaa
mov
jne
dec
in
cld
pop
cwtl
stos
fadd
insb
xlat
push
pop
sahf
lods
out
jae
cmp
es
test
scas
movsl
lcall
jno
pusha
jecxz
xchg
cmc
nop
inc
sub
xchg
or
lods
es
push
lea
inc
fs
sub
jle
or
add
mov
or
xchg
pop
push
mov
repz
clc
mov
xchg
adc
sbb
stc
arpl
push
fs
test
lahf
xor
loopne
je
jne
cmpsl
xchg
jle
mov
xor
mov
adc
lds
in
jnp
cmp
test
enter
mov
inc
sub
push
arpl
xchg
int3
push
aad
add
sbb
lret
leave
ficoml
or
cld
mov
js
std
das
out
pop
mov
into
pushf
lret
repz
ss
xchg
aam
add
mov
push
lahf
clc
mov
out
lods
ss
jmp
jo
pop
bound
dec
cld
fisttpl
cs
mov
popf
mov
fxch
xchg
push
pop
fldcw
imul
jmp
addr16
ret
ss
fstpl
aas
inc
lret
loopne
adc
cmp
push
sub
daa
or
mov
xor
sub
jl
rcll
mov
ret
mov
sbb
pop
mov
dec
ret
mov
fisttpll
aaa
sarb
cli
jle
add
add
in
cli
enter
aad
inc
les
dec
jmp
inc
xor
mov
jbe
in
mov
ret
sub
mov
rcl
cs
xor
dec
aaa
fdivs
push
insl
outsl
dec
cld
mov
adc
add
jae
jg
adc
mov
jae
pusha
jecxz
nop
cmc
nop
stos
mull
imul
sbb
test
inc
push
pop
add
xor
subl
push
fildll
sbb
push
jecxz
adcb
or
outsb
aaa
das
and
dec
jge
andl
repz
inc
sarl
cmp
andl
das
inc
mov
movsl
fsub
cmpsl
movsl
cmp
clc
push
xchg
lahf
sub
inc
aaa
es
jbe
mov
jmp
push
inc
jl
push
idivl
sbb
pop
lods
addl
hlt
cmp
sbb
sbb
rep
pop
and
sbb
mov
loope
ss
popf
inc
mov
iret
imul
enter
ss
sub
pop
cmp
subl
jl
in
ror
push
scas
lret
enter
dec
push
and
mov
mov
or
fiadds
nop
inc
jnp
add
jl
aad
mov
pop
lods
mov
push
xor
pushf
fmul
lods
pop
jne
xor
popa
jecxz
nop
cmc
nop
and
pusha
jne,pt
test
fidivs
popf
mov
mov
xchg
push
je
mov
test
or
rcrl
hlt
mov
mov
add
sub
mov
push
and
jne
inc
call
inc
jnp
add
mov
push
nop
mov
ss
jno
sbb
movsb
adc
add
cmc
js
adc
scas
xor
cs
pop
fmull
mov
or
subl
lock
inc
or
imul
pusha
jecxz
jne
outsl
mov
lret
xchg
das
js
lret
fisubs
test
inc
dec
decb
fs
test
fstpl
dec
jbe
mov
fistpl
insl
aaa
mov
popf
fsts
xor
ret
ror
mov
test
lahf
lock
fldl
xor
jno
sbb
loope
mov
fcoms
popa
in
rclb
mov
sbb
imul
inc
xor
sub
fs
testb
pushf
or
lods
pop
loop
jbe
mov
in
cmp
je
stc
mov
fimuls
jae
fs
testb
inc
inc
pop
push
push
idivl
and
xchg
fwait
imul
fstps
sahf
hlt
mov
in
aas
inc
dec
cmp
dec
dec
cld
pop
adc
or
lret
imul
ret
sbb
push
cmc
mov
insl
outsl
adc
or
jae
test
mov
mov
jne
out
ja
mov
mov
imul
or
ret
cmp
sti
fsubs
cltd
hlt
lret
lods
mov
mov
and
jns
pop
push
out
xchg
aaa
stos
fistps
push
inc
fnstcw
mov
cmp
testb
ret
jge
mov
adc
lret
imul
mov
fldcw
mov
mov
mov
lock
js
cmc
das
out
cltd
mov
fidivrs
xor
sub
iret
das
cmpsl
les
out
insb
bound
movsl
xlat
ret
lahf
xor
sub
dec
je
out
fistps
or
mov
stc
in
popa
sahf
pop
sub
fidivrs
inc
sub
test
shr
mov
hlt
filds
add
cmp
mov
jg
stc
jb
mov
mov
xchg
mov
pop
lds
out
dec
cmp
rcrl
cld
ficoml
add
xor
sbb
jnp
pop
pop
arpl
or
shl
cmc
js
mov
out
sbb
orb
cmpsb
pop
fmulp
sub
lds
fwait
jb
ja
cs
sub
dec
dec
mov
xor
jno
out
imul
lock
js
das
out
cltd
mov
mov
repz
inc
les
push
or
or
das
fs
adc
cltd
jae
mov
rcrb
xor
lret
mov
pusha
or
push
test
sbb
dec
pop
mov
test
sub
rcrl
jl
or
jg
mov
int3
and
mov
arpl
cmp
xor
push
dec
outsb
ror
cmp
lahf
shrl
mov
mov
mov
sub
and
jbe
ficompl
sarb
pop
sahf
hlt
mov
push
adc
mov
jl
enter
and
inc
rorb
pop
test
aam
lret
push
xchg
push
cld
xchg
std
out
xchg
lods
and
xor
add
divl
iret
add
idivl
cmc
das
out
cli
add
iret
cld
repz
mov
ljmp
jge
sub
jae
jae
lock
adc
sub
cmpsb
lcall
push
and
jecxz
jo
outsl
and
fs
jne
sbb
sbb
aaa
push
xchg
ret
mov
shr
repz
mov
pop
fidivrs
sub
jae
jae
loop
adc
sub
cmpsb
lcall
push
and
jecxz
jo
outsl
and
fs
jne
sbb
sbb
aaa
push
xchg
ret
in
mov
jl
or
sub
lods
pop
xchg
ja
movsb
cmp
mov
or
repnz
xor
inc
jmp
mov
dec
int3
push
jmp
ror
or
imul
pop
loop
pushl
or
ss
adc
mov
iret
les
fmulp
test
in
mov
cmpsb
sub
xchg
and
adcl
stos
test
xor
subl
shl
adc
shrl
pop
sarb
mov
mov
push
xchg
sub
in
pop
sub
push
adc
js
out
icebp
test
fwait
or
or
jge
xor
hlt
xchg
mov
push
mov
sar
mov
rorl
dec
pop
ficoms
aam
xchg
or
dec
add
es
mov
daa
or
out
pop
movsl
data16
clc
mov
nop
mov
lahf
outsb
sbb
imul
sahf
enter
mov
imul
lret
lahf
add
and
dec
mov
and
mov
scas
add
jmp
pop
and
ror
push
lods
inc
fwait
rorl
shlb
jg
xchg
xlat
mov
inc
popf
push
jecxz
cmp
inc
cmp
mov
and
dec
ds
pop
jecxz
xor
mov
inc
push
inc
xor
xor
mov
push
stc
shll
dec
mov
inc
inc
pop
inc
ss
push
pop
push
dec
stc
mov
pusha
pop
mov
cmpsl
roll
rclb
xchg
or
inc
sub
pop
dec
pop
ss
mov
jl
ds
xchg
fwait
jle
scas
sahf
sbb
notl
jp
xor
or
out
nop
cs
orb
aaa
es
pop
pop
fisubs
test
inc
mov
insb
jge
fwait
imul
mov
pop
out
push
pop
in
adc
push
xchg
xlat
jb
and
or
mov
jns
icebp
jle
add
jo
sbb
jnp
adc
shll
mov
leave
sub
pushf
mov
adc
jne
fldenv
movsl
js
subb
adc
push
xchg
mov
mov
inc
mov
test
rol
xchg
jae
pop
mov
lahf
dec
lret
movsl
cmp
add
enter
jp
and
mov
pop
mov
add
mov
sub
out
jge
addl
jno
movsb
adc
add
adc
mov
lods
scas
mov
pop
sbb
add
xor
cli
jmp
ret
sub
inc
sub
enter
lret
mov
pop
lods
push
inc
pop
es
movsb
stos
xlat
push
adc
idivl
pop
out
shlb
xchg
pop
aaa
fcomps
push
xchg
aam
mov
cmpsb
push
or
imul
cmp
movsb
cmc
mov
cmc
pop
jmp
shl
pop
push
mov
loope
sbb
and
aam
leave
sbbl
jbe
adc
mov
xchg
push
sub
test
cmp
aaa
sar
dec
popf
rorl
pushf
mov
sub
lahf
mov
xchg
aaa
pop
or
add
jae
push
mov
or
pop
mov
pusha
pusha
arpl
xchg
adc
mov
xchg
mov
or
inc
add
add
inc
maskmovq
notl
mov
jo
pop
outsb
push
mov
or
cltd
inc
or
and
sbb
or
iret
mov
in
xlat
mov
fildl
out
push
lea
ret
xchg
jle
rol
sar
cmpsl
jg,pt
xchg
fwait
jmp
outsb
sahf
sub
hlt
aam
cwtl
dec
jne
pop
pop
lods
arpl
cld
fprem1
js
mov
out
pop
mov
test
inc
or
xor
jmp
ret
sbb
sub
loope
lahf
mov
fildl
es
jb
pushf
cmpsl
outsl
scas
pop
bound
push
push
nop
or
adc
je
fidivs
dec
pop
fcoml
xchg
aam
add
or
jmp
out
addl
push
mov
dec
mov
ss
and
test
js
mov
xor
sub
jl
out
push
mov
push
jle
lea
xchg
daa
xor
xor
arpl
lahf
hlt
xchg
ret
fistps
in
xor
fadds
cmpsl
and
sub
mov
jle
ror
out
mov
cmp
lahf
int
clc
mov
arpl
inc
dec
add
adc
in
fbld
mov
je
mov
inc
in
xchg
jnp
mov
sarl
pushf
cmp
out
pop
hlt
out
fadds
push
es
mov
or
lret
enter
mov
outsl
pop
lret
cmp
loop
fdivrp
rcrl
mov
jmp
rorl
jbe
rcrl
pop
out
jae
in
mov
ss
fists
nop
xor
adc
je
iret
cld
pop
xor
aaa
frstor
adc
push
sbb
add
or
jno
adc
sub
fsubrl
in
pop
mov
jae
pop
scas
ds
jle
rorb
xchg
pusha
scas
xchg
stc
push
rorb
pusha
mov
pop
jae
push
push
testl
jge
mov
scas
popf
hlt
xchg
fists
cmpsl
jne
pushl
inc
push
lods
in
pop
dec
or
mov
lahf
outsb
and
pop
popf
jb
fs
fmulp
sub
test
push
mov
push
fs
add
sub
addl
add
push
enter
dec
sbb
cs
rcrb
xchg
movsl
into
pusha
mov
cmp
sub
imul
push
mov
push
and
lods
sub
addl
add
push
enter
dec
sbb
cs
rcrb
xchg
movsl
into
pusha
mov
cmp
sub
ja
mov
push
fs
pop
add
sub
addl
add
push
enter
dec
push
rep
mov
ljmp
mov
mov
cmp
fwait
imull
addb
mov
adc
push
inc
lret
mov
add
stos
lret
sub
insl
mov
and
jmp
cmpsb
and
inc
jl
jns
mov
mov
icebp
subb
push
mov
or
test
fs
jmp
fistpll
ret
jle
scas
repz
insl
lahf
mov
xchg
and
sbb
test
stos
sbb
sub
adc
xorb
int3
push
adcl
adc
in
pop
mov
cmp
push
and
iret
jae
sarb
push
push
mov
popf
mov
iret
push
repz
ret
adc
sub
push
arpl
nop
mov
mov
xor
pop
bound
gs
loopne
dec
subb
adc
cwtl
cmpsl
hlt
div
cmpsl
and
cmp
inc
lahf
mov
cmpsb
shl
add
sub
fnsave
das
mov
iret
adc
xor
repz
mov
nop
sbb
xor
mov
repnz
and
mov
les
dec
xchg
stc
push
add
mov
roll
push
xor
pop
clc
push
and
adc
daa
cmp
insl
lahf
rorl
jns
ss
push
cmpsl
mov
mov
cmp
pop
outsb
es
fcompl
sbb
jbe
mov
mov
stc
insl
fadd
mov
hlt
xor
mov
cmp
inc
pop
mov
inc
stos
mov
xor
pop
bound
loopne
push
adc
or
hlt
test
xchg
mov
imul
jo
xchg
in
idivl
fildll
push
notl
jecxz
add
ret
push
xchg
push
ret
xchg
mov
adc
or
repz
js
cltd
das
out
xor
imul
fdiv
jmp
inc
repnz
or
push
mov
rcrl
inc
int
insl
pop
xchg
loopne
sbb
mov
insl
enter
dec
pusha
popa
cld
pop
adc
ror
das
addr16
cmp
jne
xlat
sub
lcall
popf
push
jecxz
mov
pop
out
lahf
lods
popf
hlt
mov
sbb
rcr
and
nop
inc
aaa
mov
mov
add
mov
add
loope
jl
ja
xchg
fwait
jle
jl
pop
in
jae
mov
sub
adc
lahf
jge
cmp
jl
ja
jns
jle
add
xor
xor
push
call
lods
mov
xchg
rolb
out
scas
jne
add
mov
hlt
cmp
pop
bound
inc
lret
and
dec
push
outsb
aaa
mov
sbb
imul
aam
sarb
adc
andl
das
lods
ret
mov
mov
inc
in
sahf
push
xor
mov
pop
add
mov
loopne
cmc
cli
das
fists
insl
lahf
mov
cmp
pop
cmc
scas
push
push
adc
mov
ja
stos
inc
lods
pop
xchg
cmp
mov
mov
in
jne
xchg
aas
jnp
and
add
inc
and
adc
mov
or
mov
fldt
adc
push
idivl
mov
xor
xor
fwait
leave
imul
imul
inc
add
negb
sarb
sbb
data16
aad
and
add
cwtl
ret
clc
imul
and
movsb
arpl
ret
mov
int
pushf
inc
lds
jbe
mov
ds
jle
fisubrs
shll
dec
fmull
push
and
test
inc
dec
jl
inc
test
shrl
enter
sub
push
mov
jp
loope
add
xor
aaa
sarb
pop
jge
add
jae
in
int3
enter
enter
mov
jmp
push
inc
add
cmp
sbb
mov
lldt
sbb
mov
scas
mov
sarb
pop
jge
adcl
sbb
adc
imul
xchg
std
jmp
xor
xchg
xor
ror
push
scas
fldl
fistps
nop
inc
and
add
imul
ficoml
push
sub
sbb
push
loope
jmp
subl
js
test
mov
sub
mov
fisubs
lods
es
rcrl
push
bound
bnd
rcl
push
lahf
inc
mov
shll
roll
ret
andl
imul
mov
push
add
dec
xchg
push
outsl
hlt
mov
in
pop
sarb
mov
jne
pop
mov
jl
xchg
loop
stos
push
push
or
jl
cmp
mov
icebp
subl
js
test
mov
and
in
int3
mov
aaa
pop
push
outsb
xor
push
aaa
es
jbe
xor
hlt
jmp
inc
repz
cmpsl
dec
mov
movsl
mov
mov
xor
mov
push
add
mov
pop
jbe
fidivrl
addr16
fdivs
pop
mov
dec
test
cmp
push
cmp
jle
sub
xchg
fnsave
adc
xor
cmc
adc
xor
or
mov
into
popa
adc
pop
or
aas
inc
stos
pop
add
mov
mov
popa
adc
fwait
addl
outsb
mov
cmp
jb
mov
mov
mov
insb
sub
nop
or
out
insl
or
jmp
cmpsl
and
ret
push
pop
add
mov
or
push
addb
mov
and
lcall
pop
fstl
and
adc
das
orb
dec
sub
mov
cmpsl
aad
fdivl
aam
into
test
jb
std
test
out
xchg
cmp
arpl
fnstsw
stos
mov
mov
stos
fildll
mov
xchg
adc
pushf
sub
xchg
sub
repz
mov
ljmp
hlt
lret
jmp
mov
add
jne
notl
out
sub
cs
sarb
jle
add
mov
loopne
test
sub
test
shrl
mov
sub
pusha
lds
fcompl
movsl
adc
inc
cmp
decl
fcmovnbe
scas
insl
aaa
mov
mov
or
or
call
add
jbe
mov
lds
outsl
sbb
mov
in
lret
dec
jns
mov
ja
jns
pop
jge
add
int
repz
sbb
xor
mov
and
cmp
rdpmc
cmp
imul
and
fcomi
mov
clc
add
xchg
adc
lahf
roll
push
es
add
je
push
add
gs
push
idivl
push
outsb
xchg
add
int3
sbb
mov
fldcw
push
jecxz
and
popa
std
pop
push
lahf
cs
fcmovnbe
out
mov
pop
stc
inc
sbb
and
mov
idivl
push
mov
jle
sub
inc
jae
test
bound
adc
inc
cltd
lret
jg
jmp
imul
push
fmulp
mov
push
inc
mov
push
idivl
jmp
outsb
scas
cmp
hlt
insb
pop
in
pop
mov
outsb
and
xchg
mov
xchg
lods
arpl
insl
or
cmp
pop
mov
inc
jo
bnd
cmp
out
pop
add
lds
xor
pop
bound
inc
cmp
cs
cld
fcmovnu
scas
insl
aaa
cmp
xchg
cmp
mov
test
mov
inc
mov
push
loope
dec
fildl
in
jae
fstpl
lret
inc
jmp
xchg
mov
inc
and
sarb
pop
jge
add
sbb
mov
cltd
call
enter
loopne
add
jge
test
loopne
pop
imul
or
sbb
dec
pop
mov
js
add
mov
ret
repnz
aaa
and
ret
inc
jae
pop
stos
adc
test
sbb
andl
or
mov
leave
das
out
push
xor
pop
fldcw
fisubs
imul
or
cld
rclb
ret
sub
jae
add
xchg
pushl
push
mov
das
xchg
push
adc
xor
cmp
or
mov
out
inc
jecxz
inc
xor
mov
xor
in
mov
jmp
xor
aad
lock
js
xchg
das
out
pop
mov
pusha
imul
popf
enter
or
mov
subb
test
inc
push
xor
int
mov
or
fiadds
loopne
enter
inc
sahf
enter
or
je
out
dec
pop
ss
push
dec
les
jmp
stos
cmp
ret
inc
jae
or
xchg
pushl
hlt
add
inc
dec
jo
xchg
or
je
out
dec
pop
ss
push
les
fsubrl
sbb
sub
inc
jae
clc
push
adc
pop
jne
neg
repz
fistps
clc
lock
nop
adc
inc
lahf
xor
jbe
mov
arpl
scas
xor
push
idivl
lods
inc
xchg
fwait
jmp
mov
cltd
and
aam
cwtl
inc
loop
pop
jne
cmp
rorl
cmc
outsl
pop
aas
cmp
lahf
shl
add
mov
rolb
bnd
and
mov
cs
jge
pusha
push
mov
in
pop
xchg
pushl
jecxz
sbb
outsl
out
aam
jmp
imulb
dec
pop
mov
or
sub
jl
pop
test
in
cmc
or
jl
push
xor
mov
jmp
mov
popf
sub
sarl
je
inc
or
mov
jmp
imulb
out
out
aam
lahf
jae
cmpsb
shl
cmpl
xchg
das
icebp
xor
inc
mov
and
xchg
mov
in
fbld
insl
lahf
mov
xor
or
fwait
xor
sbb
shll
cld
out
cmp
mov
inc
lds
xor
and
mov
add
mov
mov
xchg
stc
ret
mov
sbb
ret
clc
dec
add
pop
jl
cld
push
mov
lods
mov
sbb
and
pop
mov
or
xchg
mov
jmp
mov
jle
je
xor
xor
mov
fwait
dec
sub
sbb
scas
and
fs
es
cmp
hlt
cwtl
cwtl
jmp
mov
test
gs
mov
mov
popf
sbb
int3
sub
inc
in
xchg
aam
ds
or
jne
fs
lods
ss
shlb
sbb
repz
lret
lahf
jle
pop
or
enter
mov
imul
enter
or
xchg
sub
push
mov
or
pop
jne
mov
mov
sarb
or
and
cld
in
and
push
js,pt
lret
lea
xchg
rcrb
sbb
mov
xor
mov
pop
mov
mov
adc
add
fnstenv
shlb
imul
add
mov
test
inc
dec
jl
pop
test
add
ja
fdivrs
sbb
pop
in
mov
or
das
and
pusha
jne,pt
push
movsb
xchg
inc
or
push
in
test
sub
sub
mov
incb
adc
ret
pop
add
lods
pop
mov
mov
rorl
sbb
cmpsl
pusha
jne,pt
std
add
inc
lea
bnd
lock
subb
hlt
and
jns
add
sub
rclb
xchg
jmp
es
mov
pop
fmulp
test
imul
push
notl
gs
or
xchg
pop
popf
hlt
fdivs
std
lret
fldenv
and
leave
mov
nop
cs
ds
push
xor
or
push
int
push
sub
mov
mov
sub
jae
xor
adc
mov
inc
fldl
xchg
sbb
aaa
rclb
xchg
mov
stos
xchg
mov
push
or
fmulp
sub
sete
xchg
mov
sbb
mov
xor
mov
pop
mov
mov
adc
add
fnstenv
cwtl
ljmp
pop
cli
insb
je
xor
pushf
fimull
lods
loop
mov
or
fcmovbe
sub
add
cmp
xor
hlt
push
ror
fisubrs
cmpsb
call
jno
pusha
or
pop
mov
ror
mov
xchg
pusha
jne,pt
mul
xor
or
jg
test
pop
mov
enter
push
idivl
les
lods
pop
xchg
clc
jbe
sbb
cmp
ret
pushl
lret
add
sub
rclb
xchg
jecxz
jno
jno
xchg
inc
or
scas
mov
add
js
mov
in
sbb
fwait
add
shlb
nop
fdivrs
pop
mov
pop
das
mov
mov
nop
cs
adc
sub
inc
or
repz
or
sub
lock
rcll
movsb
inc
in
pop
loop
pop
push
pop
add
push
int3
push
and
cld
xor
xchg
jmp
pusha
adc
je
sbb
mov
cmpsb
mov
neg
lods
fs
andl
fwait
movsl
adc
add
push
mov
jg
outsb
aaa
mov
shlb
pop
out
aad
xor
jp
enter
bnd
mov
push
push
mov
inc
lods
mov
test
and
mov
jl
inc
xchg
and
vmulss
loope
aaa
pop
cmp
sarl
cwtl
add
add
jmp
test
sub
ret
lea
xchg
jb
jae
out
fwait
in
inc
lods
pop
xchg
sbb
xchg
pop
addr16
lret
inc
add
lea
cmc
clc
ret
adc
lahf
or
je
mov
enter
bnd
cmpsl
pop
decl
test
add
mov
push
push
adc
cs
sbb
cmc
pusha
pusha
arpl
xchg
mov
dec
enter
pusha
ds
dec
testb
enter
sbb
xchg
shll
mov
rcrl
inc
movb
loop
adc
jno
inc
mov
and
cwtl
dec
rclb
loop
xor
add
fisubs
icebp
mov
sub
push
not
dec
loop
sahf
or
lods
sub
xor
push
sti
lods
pop
loop
fnsave
xor
push
or
mov
sbb
mov
push
xchg
add
push
imul
aaa
int3
out
bnd
int3
push
adc
push
add
fwait
cs
lods
xlat
stos
cmc
xchg
popf
hlt
cmp
add
inc
push
and
fnstenv
push
shrb
push
pop
xor
pusha
jne,pt
imul
cld
push
push
jmp
push
mov
push
outsb
xchg
xchg
fwait
or
ret
xchg
fdivrp
mov
adc
out
xor
dec
cld
xlat
jl
cs
rclb
jp
out
xchg
adc
fimuls
insb
in
testl
mov
add
push
cmp
ret
jl
jae
and
push
pop
in
pop
add
jge
add
cs
mov
nop
mov
out
insl
add
jo
je
xor
and
imul
xor
cmp
leave
out
ja
addb
jae
fdivrs
std
lret
mov
or
and
push
pop
adc
pusha
jne,pt
mov
testl
daa
sbb
dec
insb
stos
out
aam
lahf
mov
jle
inc
lods
pop
xchg
pop
pop
push
adc
aad
out
xor
hlt
add
jp
cs
rclb
adc
jo
into
sub
push
addb
mov
divl
jbe
rcrl
fsubl
xor
mov
pop
mov
and
cmp
nop
adc
jle
loopne
mov
xor
call
inc
sub
xchg
lahf
rcl
sub
inc
lods
pop
xchg
bound
out
xor
push
jbe
mov
sbb
nop
adc
dec
mov
fsubl
dec
pop
mov
bnd
int
push
divl
add
rcrl
mov
mov
icebp
push
pop
in
pop
or
sti
repnz
fiadds
mov
cmpsl
sbb
shlb
cltd
dec
xor
push
cld
cmp
enter
jo
add
sbb
out
cmp
mov
xor
hlt
rcrb
pop
jne
notb
jne
jae
outsb
aaa
mov
adc
or
sti
dec
or
sub
xchg
push
pop
mov
push
movl
xor
sbb
cmp
jne
fisttpll
popf
jl
ja
jne
push
jne,pt
je
adc
lods
and
bnd
cwtl
dec
jmp
rcrl
pop
inc
jbe
jl
push
dec
cwtl
sbb
outsl
shlb
out
repz
hlt
roll
rclb
xchg
pusha
mov
jmp
data16
jge
enter
cmp
mov
notl
out
pop
test
jae
test
push
rol
fisubrl
cmpsb
lcall
jbe
pusha
outsl
add
pop
xor
sarl
std
add
add
mov
bnd
dec
push
adc
leave
out
out
rol
sbb
xor
mov
jae
in
cmp
pushl
mov
cmc
hlt
cmpsl
adc
adc
mov
push
mov
pop
fmulp
test
out
testb
inc
and
out
mov
arpl
fstl
mov
jbe
shl
pusha
outsl
jne
cmc
nop
cs
cmp
out
xor
or
sbb
outsl
insl
mov
cmp
push
jle
cmova
in
pop
loop
pop
push
pop
fs
inc
mov
pusha
or
mov
cmp
enter
gs
je
hlt
pop
lret
pop
push
imul
inc
movsl
bound
mov
push
loope
repz
xchg
push
rcl
sti
lods
pop
out
outsl
fidivl
test
mov
nop
cs
adc
sub
inc
or
repz
or
sub
lock
rcll
movsb
inc
in
pop
loop
pop
push
pop
add
fst
mov
mov
nop
cs
push
aad
cmpsl
cmp
enter
jne
pop
push
in
leave
imul
lods
push
sete
arpl
out
or
xchg
mov
in
mov
adc
lret
enter
dec
xchg
pop
sub
rclb
xchg
jecxz
jno
inc
test
inc
or
jge
push
xchg
mov
aad
test
jle
lret
xchg
fsts
pop
cld
cmc
jl
inc
and
or
mov
cmpb
push
pusha
call
je
out
push
or
mov
in
push
mov
sahf
push
xor
xor
out
xor
stos
add
das
aaa
sar
and
jne
ljmp
leave
test
sub
xor
shll
pusha
fwait
subl
icebp
movsl
adc
xchg
mov
jbe
mov
or
hlt
nop
cs
and
popf
cmpsl
je
xor
pop
fmulp
shrb
ret
cmpsl
fisttps
jno
subl
into
movsl
adc
mov
lds
outsb
aaa
mov
jne
push
inc
fdivs
or
enter
inc
inc
dec
xchg
or
mov
mov
xor
inc
or
adc
lret
and
or
outsb
aaa
mov
mov
or
lods
push
push
xchg
scas
xor
jmp
cs
in
jb
inc
pop
adc
ljmp
and
xor
cmc
nop
sbb
mov
jmp
push
add
xor
jmp
mov
mov
test
movsb
sub
in
pop
jns
ljmp
or
mov
cmp
outsb
aaa
das
xor
loopne
jne
push
loop
inc
or
sti
or
sub
or
xchg
jmp
shll
in
pop
jns
sbbb
movsl
enter
dec
data16
mov
push
adc
das
xor
loopne
jne
push
mov
sti
push
sub
sub
xchg
jmp
shll
in
pop
jns
mov
enter
dec
data16
mov
xor
loopne
jne
push
outsb
mov
or
sti
nop
sub
sub
xchg
jmp
shll
in
pop
jns
push
pop
mov
movsl
enter
dec
data16
test
outsb
aaa
das
xor
loopne
jne
push
cmpsb
mov
or
sti
mov
sub
or
xchg
jmp
shll
vdivpd
lret
push
movsl
enter
dec
data16
and
add
das
xor
loopne
jne
push
adc
clc
sub
sub
xchg
jmp
shll
in
pop
jns
xor
push
xchg
and
add
jl
mov
mov
rcrb
jns
adc
add
fwait
xor
adc
xchg
mov
jmp
pushf
xchg
mov
ds
and
mov
sbb
pop
inc
hlt
int3
repnz
enter
sub
and
jno
data16
sub
jmp
push
notl
imul
ret
into
dec
ss
adcb
popa
std
jb
jb
jne
sbbl
sub
push
fidivrl
sti
push
andl
pop
inc
jl
or
and
call
fidivs
add
gs
xorb
lods
sbb
data16
sub
jbe
cld
dec
mov
sub
jbe
out
sbbb
rcll
cmp
fsubs
mov
add
aam
mov
push
lods
push
mov
aaa
test
ds
xor
or
mov
pop
add
push
imul
cltd
out
fwait
or
in
sahf
sahf
jne
insl
push
mov
or
xor
dec
pusha
popa
cld
fprem1
cli
cs
shr
out
add
es
mov
ret
dec
jl
or
add
lods
sub
lock
popf
xchg
and
cwtl
in
xor
jnp
movsl
sbb
sbb
imul
mov
inc
push
push
fimull
repnz
jecxz
mov
fwait
add
inc
cs
xchg
pop
outsb
cmpsl
adcb
mov
popf
and
pop
adc
mov
iret
add
js
xor
push
sbb
lcall
adc
aad
jnp
mov
dec
pop
scas
pushl
add
enter
lock
inc
hlt
fwait
mov
mov
ret
repnz
jbe
push
mov
pop
or
addb
shlb
hlt
and
and
mov
push
mov
cmc
xchg
pop
ljmp
xchg
pusha
ds
fs
lret
inc
add
pop
fmulp
test
sub
or
xor
mov
mov
or
fmull
out
xlat
xchg
gs
xor
sahf
cmc
add
in
xor
addb
stos
into
imul
lods
xchg
out
push
dec
push
mov
dec
mov
inc
insl
sbb
sbb
and
adc
lahf
cs
xor
xchg
shlb
push
popa
hlt
data16
sub
test
push
mov
add
mov
ja
mov
hlt
sti
.byte
.byte
push
addb
inc
addb
add
add
xor
add
bound
add
push
addb
inc
addb
add
add
pop
add
je
jb
arpl
fs
jae
add
movsb
add
fs
imul
add
imul
gs
xor
cs
insb
stos
sbbb
ret
inc
adc
dec
outsl
jns
mov
mov
mov
jmp
rclb
jmp
rclb
pop
pop
iret
lea
ss
mov
icebp
mov
repnz
jbe
lods
sub
xor
enter
outsb
inc
inc
mov
lods
cld
mov
rcl
mov
and
mov
mov
enter
rclb
inc
xchg
add
inc
add
aas
add
mov
inc
outsb
outsl
das
rol
aam
rcl
mov
fs
mov
inc
xchg
jp
aam
jecxz
fisubrl
std
sarb
xor
shr
xor
enter
mov
out
jnp
cld
inc
roll
xor
xor
hlt
fmulp
es
sub
inc
stc
push
das
add
sub
das
sarl
fs
test
inc
mov
lods
cld
mov
cltd
mov
jae
mov
rcl
mov
mov
inc
adc
rcl
mov
mov
lods
lods
ss
inc
aam
mov
movsl
jp
aaa
jecxz
pop
lea
mov
xchg
cmp
dec
lret
mov
insb
jo
or
fwait
add
pop
fldl
push
cmp
jnp
repz
lock
out
enter
insb
or
add
mov
inc
sub
xor
xchg
cmp
mov
inc
aam
mov
add
stc
popl
xchg
push
and
mov
mov
enter
data16
add
dec
xchg
jge
imul
mov
aad
ljmp
mov
push
frstor
add
cli
lret
pop
jbe
sub
push
xchg
outsb
inc
push
cld
inc
sub
in
mov
cld
inc
in
xor
inc
adc
lret
aam
cli
jno
std
test
dec
into
lds
cwtl
movsb
xor
sub
or
mov
cld
and
dec
mov
popa
adc
imull
ret
jae
loop
sbb
lea
xor
mov
mov
add
mov
push
jge
stc
mov
jp
leave
pop
stos
xchg
add
loope
mov
addb
mov
add
lds
inc
xchg
mov
bound
ret
sbb
mov
out
mov
cmp
cmpl
inc
inc
jmp
js
inc
cmp
xchg
enter
sub
adc
aas
xchg
movsl
xor
cmp
outsb
inc
mov
inc
jns
jg
rcll
xchg
aas
js
cmp
outsb
inc
mov
inc
jns
jg
shr
xchg
lret
in
and
sub
inc
adc
stos
cmp
cmp
test
dec
xchg
mov
xor
inc
stos
xchg
jmp
or
add
rcl
mov
and
mov
cmp
mov
shlb
or
xor
sbb
inc
push
cmp
jno
add
cmc
rol
push
dec
pop
add
xchg
sub
or
dec
neg
sub
imul
push
add
or
dec
rol
sbb
push
xorw
pop
xor
dec
neg
cmp
je
dec
push
inc
pop
mov
sub
push
and
pop
xor
xor
push
mov
inc
mov
push
orl
pop
inc
adc
paddd
neg
ror
xor
and
push
xor
rcpps
xor
sub
and
psllw
push
inc
pop
sbb
xchg
xor
mov
inc
xor
and
inc
mov
sbb
cvttps2pi
neg
push
fcmovnbe
pminub
sbb
push
xorw
pop
or
sub
cmp
jl
mov
dec
and
xchg
add
dec
push
xchg
sub
and
push
add
pop
sub
cmp
jle
rcr
push
subw
pop
mov
xor
mov
push
aaa
pop
neg
mov
xor
neg
pand
push
xor
inc
push
xchg
pop
xor
mov
sub
push
inc
pop
psadbw
push
inc
pop
imul
dec
pand
xor
push
push
xchg
pop
mov
add
xor
pcmpeqb
ror
push
ror
mov
shl
dec
add
cmp
jne
adc
xor
push
or
pop
or
imul
xor
dec
push
sbbl
pop
or
mov
sbb
sub
orps
aaa
adc
sub
neg
push
xor
fst
adc
cvttps2pi
adc
neg
rcl
rsqrtps
psrld
push
ret
