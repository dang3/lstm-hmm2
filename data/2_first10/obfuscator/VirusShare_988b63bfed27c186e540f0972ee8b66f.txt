mov
sbb
mov
jae
nop
int3
push
push
and
pop
call
shll
mov
clc
fwait
jbe
adc
mov
out
cli
xlat
xor
rorl
sbb
mov
in
fdivr
lcall
xchg
xchg
sub
jne
push
mov
adc
clc
adc
mov
xchg
or
mov
push
inc
insl
mov
xchg
push
fdivl
cmc
dec
push
jbe
push
or
sbb
sbb
mov
lods
xchg
hlt
and
out
fdivl
hlt
push
lods
insb
outsb
mov
and
push
pop
mov
into
testb
pop
and
mov
or
push
je
mov
fdivr
out
xchg
sti
mov
imul
aas
inc
in
pop
sbb
mov
sub
pop
cmp
faddp
cmp
dec
or
xor
aam
mov
sbb
icebp
cwtl
push
and
cmpsb
and
pop
pop
inc
xor
stc
mov
fstps
jge
mov
iret
mov
call
pushf
mov
xchg
cmc
loop
andb
push
add
cmp
jno
add
stos
test
push
jmp
call
push
mov
mov
fdiv
push
jns
pop
and
jb
jp
add
cmpsb
cli
jg
nop
lods
pusha
cmp
cmp
mov
js
call
or
and
push
ss
and
jnp
pop
aad
lock
shll
or
mov
nop
lcall
mov
in
push
jo
daa
pop
jae
or
dec
fldenv
call
jecxz
mov
cmpsb
hlt
outsl
xchg
mov
sub
cld
pop
cwtl
push
xchg
sub
lods
iret
test
lahf
popa
ffree
adc
xchg
and
in
addr16
add
pop
nop
ljmp
pop
test
sub
mov
mov
loop
xchg
xchg
xchg
dec
push
inc
mov
xor
pop
jno
femms
fs
arpl
xchg
cmp
cmp
push
aaa
jmp
shl
and
push
jnp
or
mov
sub
sub
cmp
push
not
mov
or
lcall
test
cmpsb
cmp
stc
mov
dec
inc
mov
js
sarl
mov
fisubs
in
jl
dec
mov
or
mov
popf
cmpsl
sub
mov
loop
call
push
out
sbb
fdiv
les
int3
dec
ja
sti
adc
jae
cmp
jbe
mov
push
cld
add
mov
push
cmp
nop
orl
push
loope
mov
push
sbb
pop
sub
mov
aam
sbb
outsl
jae
xor
fs
repnz
mov
mov
dec
das
hlt
mov
das
ficoms
inc
push
cmp
cs
dec
push
pop
lahf
aaa
orl
ret
pop
insl
shll
dec
fidivrs
and
dec
pusha
sbbl
iret
xchg
iret
lcall
jle
cmpsl
das
sbb
aam
movsb
push
lea
cmp
int3
loopne
cmp
ret
mov
or
push
test
inc
inc
call
sarb
xor
sub
mov
out
aam
shlb
outsb
and
sub
test
cmp
or
sbb
out
sub
or
rcrl
fimull
pop
pop
inc
adc
clc
mov
in
repz
xor
inc
enter
aaa
mov
and
mov
dec
sub
mov
mov
jle
xor
mov
pop
test
mov
sbb
sarb
dec
clc
call
pusha
mov
cmp
add
bt
bt
jmp
inc
mov
pusha
lea
call
jmp
lea
je
sar
sub
movsbw
mov
sub
clc
ror
mov
cmc
pusha
shr
adc
shr
sub
shl
mov
jmp
mov
pusha
mov
pop
pop
pop
and
jl
xor
jnp
mov
cmp
lds
inc
arpl
jne
rorl
cld
dec
adc
aad
outsb
add
int3
loop
clc
jnp
loopne
push
imul
mov
cmp
in
and
inc
add
xchg
sub
filds
fwait
xor
sbb
jle
mov
ret
data16
sub
leave
das
loopne
stc
scas
push
dec
test
sub
mov
lods
in
pop
adc
fisubl
or
out
loope
inc
rclb
xor
ret
cmp
dec
fadds
es
int3
lahf
xor
loopne
or
mov
cwtl
jne
cmp
lock
stos
popa
shll
sub
shl
push
and
daa
jbe
leave
push
mov
test
aam
xlat
mov
aas
lock
pushf
xlat
dec
fwait
movsl
addr16
mov
mov
stc
sub
fsts
jns
mov
cmp
pushf
test
sbb
sbb
jge
mov
fwait
mov
dec
sbb
mov
mov
xchg
out
push
mov
mov
stos
mov
add
push
in
ljmp
mov
cbtw
push
cmp
inc
xchg
jns
cld
inc
jnp
mov
fstpt
jge
fimull
or
or
lock
lods
loop
repz
outsb
inc
and
sub
cld
mov
push
les
gs
call
lcall
inc
cmpl
je
mov
out
jmp
and
les
and
xor
es
xchg
sbbl
and
xor
testb
adc
testl
in
jmp
mov
sbb
or
or
ds
pop
sahf
and
lods
stos
mov
leave
imul
xchg
inc
jno
aaa
inc
int3
inc
jbe
mov
fwait
test
add
fnstsw
add
fstl
movl
dec
mov
out
dec
fisubs
add
adc
lret
out
enter
or
sbb
and
in
loope
lret
popa
push
addr16
dec
cmp
fs
stos
push
mov
testb
push
mov
jp
adc
push
mov
fsubrs
loop
sub
mov
es
add
lret
pop
nop
adc
push
push
cld
and
sbb
and
dec
cmpsl
negb
push
fcmovnb
cwtl
push
in
add
cmpsb
rol
testb
xchg
jnp
xchg
repz
jmp
outsl
xlat
out
xchg
push
notl
push
adc
cld
push
outsl
pop
xlat
int3
fnstcw
pop
cmc
ret
pop
mov
aam
xor
lcall
fmuls
je
or
jl
arpl
ja
pushw
pop
mov
cmp
xlat
sub
sub
inc
ss
and
sub
jb
ficoml
pusha
enter
jb
in
mov
iret
push
out
inc
lods
popa
jge
sar
sti
push
push
adc
inc
mov
dec
sbb
je
aaa
dec
repnz
fdivs
push
scas
inc
and
mov
jns
or
mov
outsb
mov
sbb
std
mov
in
fs
push
jmp
test
mov
sbb
movsb
push
jae
pop
push
mov
dec
and
dec
in
cmc
or
ror
mov
inc
push
mov
sahf
sbb
shrl
out
push
scas
cs
mov
sbb
push
dec
jge
rcrl
cwtl
test
cs
movsl
cmp
push
mov
inc
cwtl
int3
fmuls
inc
pop
sub
sub
cli
add
adc
scas
add
loop
and
cmpsl
outsl
jl
in
sbb
and
dec
decl
outsb
lds
loope
inc
mov
pop
xchg
mov
stc
adc
pop
mov
xlat
aas
fs
pop
iret
loopne
dec
mov
cld
pusha
and
dec
xchg
sahf
ds
or
mov
pop
pop
lds
leave
das
cmp
and
sub
lods
outsb
sub
aam
cmp
and
data16
push
pop
js
sub
or
fistl
shl
iret
xchg
rcrl
fsubrs
inc
lea
dec
gs
shrl
js
pushf
adc
fisubrs
cwtl
scas
pop
cwtl
inc
sahf
cmp
or
mov
clc
mov
xchg
movnti
das
jns
rol
add
pop
ret
dec
mov
jle
gs
dec
lock
popa
fs
imull
rorl
mov
out
add
addb
dec
mov
lods
cld
inc
std
rcrl
sbb
xor
inc
jle
jmp
mov
lcall
push
pushf
add
or
sub
mov
out
repz
push
inc
cmp
inc
fcomi
mov
or
in
dec
jge
xor
popl
jg
mov
dec
and
jae
sub
adc
dec
pop
xor
mov
inc
rcrl
xlat
repnz
test
mov
inc
test
cmp
in
mov
out
ljmp
mov
mov
pusha
int3
sub
jp
gs
pop
xchg
fwait
ss
mov
fucomi
mov
imul
or
call
ja
cwtl
pusha
mov
dec
aaa
mov
shll
icebp
sub
push
ljmp
repnz
test
jmp
shrl
xchg
fnstcw
mov
adc
insl
push
push
leave
push
push
movsb
xchg
stos
mov
rcll
push
and
xorl
and
push
add
or
nop
xorl
cmp
and
inc
pop
data16
xchg
cmp
sbb
cmpsl
shufps
ss
rcr
pop
sub
sub
sub
xchg
xchg
test
test
xchg
maxps
pop
inc
xchg
jnp
inc
insb
jle
shlb
cmpb
mov
jl
jo
or
lret
xorb
or
jecxz
nop
dec
push
push
mov
test
popf
jne
add
je
fistpl
adcb
fcompl
sbbb
test
lock
movsb
mov
mov
pusha
fucomp
xor
mov
mov
or
xor
out
insb
je
pop
rcl
lds
scas
jno
jo
std
add
cmp
inc
lcall
mov
xor
loop
cli
ret
push
enter
hlt
inc
cmp
mov
ja
scas
xor
pop
jge
inc
push
cmp
stc
adc
fisttps
adc
sub
lret
std
push
clc
inc
push
add
and
xchg
mov
enter
xchg
xchg
inc
shll
add
mov
push
repz
hlt
decb
addr16
add
xor
int3
sub
shrb
jno
mov
mov
cmp
lock
outsl
and
ret
sub
stc
xor
fwait
and
dec
int3
jp
lods
bound
iret
iret
aad
add
jp
punpckhwd
pop
xchg
pop
xor
mov
add
sub
mov
sahf
mov
mov
pop
xor
adc
mov
xchg
leave
adc
cmc
lea
sahf
push
push
mov
mov
arpl
dec
lahf
sub
fidivrs
jne
int
inc
stc
adc
pop
inc
fsts
cld
vmread
push
mov
mov
jmp
inc
pop
cmp
mov
loopne
dec
lret
out
ficoms
sub
sbbl
int
pop
fsubp
dec
xchg
test
aad
fwait
dec
add
lods
mov
jno
jns
inc
loop
int3
inc
dec
push
inc
lock
outsb
pushf
sbb
jg
test
movsb
sbb
fcmovbe
jno
xchg
es
int3
dec
sbb
cmp
mov
push
test
test
ds
sub
cmp
cmpsl
clc
push
popa
dec
pop
in
cli
jb
xor
shrb
loopne
fwait
addl
cld
mov
pop
in
mov
repz
pop
dec
in
rcrb
adc
or
pushf
out
imul
orb
sarb
mov
rcll
out
sbb
loop
scas
es
jns
or
sarb
push
sbb
pop
mov
mov
popf
outsl
xor
fsubl
adc
shufps
pop
cwtl
loop
jp
in
xorb
fs
popf
push
push
sbb
fldcw
add
pusha
mov
stc
clc
dec
lret
in
sti
lret
leave
xor
test
in
addr16
xchg
pop
ljmp
rclb
cmp
daa
jbe
cmp
or
adc
loopne
and
jg
adc
and
mov
mov
cmc
stos
sub
sbb
xorl
mov
dec
jl
mov
cmp
adc
fdivp
fmul
xorl
clc
das
mov
jg
xor
jmp
fwait
std
sbb
mov
xlat
dec
push
pop
jmp
sub
mov
std
xor
add
jl
sahf
jp
adc
outsb
add
cmpl
push
xor
jo
cwtl
pop
fbstp
mov
jbe
movsl
or
ss
pop
adc
fnstsw
fidivrl
and
cmpsl
popa
jae
insb
xchg
mov
mov
push
cmp
clc
adc
pop
dec
lock
daa
lods
mov
or
ret
xchg
movsb
scas
jo
mov
jge
ljmp
xor
xchg
sub
test
in
mov
xlat
fmuls
push
popf
hlt
rcll
lret
mov
out
jne
and
mov
int
ficomps
or
sbb
jge
lock
fnstsw
or
dec
outsb
mov
cltd
out
jl
loope
fstpt
lock
pop
inc
xlat
mov
icebp
cmp
mov
popf
xchg
jg
mov
int
pop
xor
orb
jmp
dec
and
jno
imul
sahf
test
mov
sub
xchg
in
jge
mov
xor
push
and
aaa
push
and
sbbb
cmp
cmp
fwait
ret
fsubp
ljmp
adcl
mov
push
insl
pop
test
in
in
mov
jnp
sbb
xchg
mov
jge
push
cmpsl
outsl
ds
mov
int3
push
mov
out
sub
mov
notb
push
push
inc
fsubrl
faddl
mov
xchg
and
divb
imul
leave
and
iret
cmp
push
adc
cli
cmp
sbb
pop
dec
add
data16
mov
fwait
cmpsl
std
int
movsb
imul
pop
jp
cli
xor
pop
stc
adc
add
ss
roll
jecxz
mov
fsubrl
pop
repz
dec
sbb
dec
ret
ljmp
cmc
aas
cmp
enter
js
fsubp
in
dec
rcll
sti
jae
rolb
sti
pop
pop
in
mov
cltd
sub
push
push
or
hlt
inc
leave
pop
adc
scas
push
sub
inc
xor
jne
fiaddl
outsl
loope
push
xchg
add
shll
jmp
or
fmuls
mov
in
int
or
mov
sub
shl
rcr
test
fcomps
push
lret
rcr
xor
xchg
push
iret
aam
cli
out
jns
xchg
into
sbb
inc
xchg
inc
rclb
mov
inc
mov
outsb
in
and
or
sahf
lret
mov
xchg
dec
mov
sub
mov
cmpsl
cmp
inc
hlt
out
push
popa
sbb
sub
shrl
mov
sbb
push
in
imul
mov
ret
call
out
clc
mov
jne
sbb
stos
xor
push
les
testb
mov
stc
jbe
aam
test
push
mov
pop
or
rclb
pushf
push
push
std
and
xor
lock
outsb
add
aas
ljmp
loop
shl
xor
adc
loopne
jne
cmp
xchg
mov
mov
pushf
repz
pusha
stos
lcall
inc
lahf
and
ss
out
clc
lods
negl
xor
adc
lods
inc
popa
rol
jl
pop
xchg
pop
repnz
cmpsl
jno
xor
aaa
sub
mov
repnz
sub
push
mov
fwait
scas
and
call
test
mov
cmovno
sbb
pop
int3
insb
incb
stos
mov
mov
cmpsl
sbb
pop
mov
inc
inc
ds
repz
int3
movsl
sbb
aas
dec
pushf
jo
or
cmc
stos
cmp
mov
xor
adc
movsb
dec
lret
sub
loopne
in
scas
es
lods
jns
sbb
adc
add
shrb
out
xor
dec
rcrl
subb
inc
scas
sbb
jge
ficoml
xchg
dec
mov
fstpt
jb
lret
dec
mov
imul
ja
mov
out
jae
mov
outsl
gs
add
jb
lcall
arpl
or
outsl
stos
rol
dec
int3
scas
sub
fwait
dec
inc
jno
rcl
out
loopne
mov
mov
jo
jecxz
pop
outsl
jno
movsl
or
stc
test
ja
cmc
or
je
xchg
dec
shr
testb
fstpt
push
fwait
pop
or
cmc
xor
jnp
or
mov
sbb
adc
into
test
pop
in
xchg
push
ss
push
cltd
adc
insl
ds
jnp
dec
cmp
sti
lods
cwtl
dec
jno
jb
ret
sub
js
dec
dec
push
jecxz
jno
iret
xor
push
test
test
outsl
mov
xor
sarl
cmp
shlb
stos
lcall
call
aam
dec
bound
mov
movsl
fldcw
mov
inc
dec
push
sahf
and
sub
push
or
fs
pop
dec
gs
mov
fists
cmp
leave
ja
or
push
dec
sbb
or
incl
lods
and
inc
push
movsb
push
push
fisubrl
imul
jge
dec
outsl
jmp
mov
loopne
ja
inc
scas
addr16
and
inc
jnp
mov
inc
dec
xlat
js
push
add
mov
mov
xor
and
ss
cmc
stos
and
lret
sub
cwtl
out
fdivs
pop
shrl
and
inc
pop
xorl
xor
cmpl
add
push
ds
shlb
fwait
popf
cmpsl
pop
dec
popf
imul
dec
sbb
jge
xchg
xchg
dec
pusha
aaa
ja
xlat
cmp
push
sbb
add
xchg
sub
outsb
jl
cli
mov
sub
mov
jl
cltd
add
mov
das
xchg
sar
loopne
jne
fwait
cmp
jmp
jmp
cmp
nop
adc
jae
pop
movsb
dec
aaa
mov
jbe
insb
hlt
leave
inc
cmpsl
cld
push
daa
ja
xchg
loope
mov
xchg
inc
mov
decl
pop
jmp
frstor
sbb
xor
cld
lds
mov
push
fs
test
add
pushf
push
into
aam
add
les
and
push
cmp
insl
mov
std
mov
xchg
sbb
orl
les
jp
addr16
add
test
inc
cmp
mov
int
popf
int3
jo
pop
mulb
lret
fistpl
mov
sbb
pop
loopne
mov
pop
sbb
test
push
fs
mov
inc
test
inc
popf
xchg
xchg
jbe
sub
xchg
int3
sub
and
add
adc
ljmp
scas
mov
jo
data16
cmp
mov
xchg
lcall
out
shrb
cmp
negl
ss
mov
movl
inc
mov
in
mov
push
push
xchg
test
or
fistps
push
dec
subb
cmp
add
adc
push
scas
je
mov
xchg
inc
inc
mov
cmp
push
je
push
sub
fdivrs
xchg
push
in
aam
rcl
push
add
popf
outsl
cld
sub
jb
mov
inc
and
aad
pusha
jae
lea
test
sub
push
push
pop
or
inc
push
mov
and
mov
sub
lods
mov
in
sbb
mov
cmp
dec
jle
adc
lahf
jecxz
test
push
jg
in
fcomi
xorl
fstl
add
pushf
call
andl
and
lret
stc
imul
std
hlt
int3
lea
dec
pusha
repnz
jl
lahf
ret
mov
dec
inc
bound
dec
fists
aad
cmpsl
sti
loope
out
insb
mov
jne
xlat
dec
push
dec
mov
iret
cmp
xchg
cmp
mov
loope
orl
movsb
push
movsb
cmc
and
dec
enter
roll
jae
fimull
aaa
add
sbb
lea
call
call
call
mov
test
cmp
pusha
pushf
push
push
lea
jbe
xor
and
mov
not
shld
add
add
bsf
mov
call
pusha
mov
lea
call
jmp
push
xchg
pop
mov
sbb
das
imul
mov
add
into
les
in
loope
insb
add
repnz
negl
sub
add
jecxz
out
mov
mov
pop
mov
or
adc
cmp
imul
xchg
xor
sub
stos
push
jp
imul
mov
sbb
xchg
or
sbb
mov
bt
push
jmp
popa
sbb
mov
fsubrs
negb
adc
cmp
xor
jp
andl
dec
sbb
inc
pusha
sti
loopne
jecxz
adc
sub
add
je
rorl
sub
fists
orb
ljmp
iret
iret
jae
mov
jo
inc
arpl
loop
inc
mov
sahf
xchg
and
push
inc
movsbl
jmp
cmp
jo
pop
dec
sub
lock
jmp
int
subl
icebp
push
mov
cli
cli
jnp
sub
fstl
jl
shr
jecxz
jmp
mov
jns
pop
inc
ficoms
stos
fs
mov
jne
outsl
es
inc
lret
pop
dec
fadd
testb
xor
repnz
sbb
cmp
pop
into
les
xor
and
or
push
or
mov
or
test
add
push
push
cmp
je
jp
inc
mov
cmp
lcall
cltd
inc
adc
stos
sbb
mov
dec
jmp
arpl
cmp
stos
ss
mov
ss
adc
or
out
pop
aad
pushf
mov
cli
outsb
dec
pushl
add
xchg
in
jg
cld
dec
mov
out
out
xchg
jmp
sub
xchg
mov
shrl
ds
addr16
xorb
ret
cmp
mov
popa
pop
inc
or
mov
in
test
cmpl
or
ret
movsb
xorb
movsl
sbb
sbb
bound
cmp
push
nop
or
repz
lea
notl
jnp
sub
inc
jg
sub
mov
clc
jo
xchg
mov
in
hlt
mov
dec
inc
das
ss
xor
pop
add
out
scas
inc
xor
ret
jno
hlt
add
jne,pt
add
call
lea
jne
dec
mov
push
sbb
mov
cmp
stc
call
mov
dec
aas
inc
or
fisttps
mov
dec
les
mov
mov
jmp
dec
pop
shlb
aam
jle
xchg
or
faddl
push
mov
mov
or
push
or
inc
int3
mov
cmc
or
add
je
push
add
ss
int3
mov
ret
decl
cwtl
mov
push
cltd
cmp
add
add
ljmp
mov
js
mov
pop
or
shl
mov
ds
ret
shlb
push
jle
movsb
pop
lcall
inc
sbb
pop
inc
jns
push
mov
js
cs
cmp
aad
sbb
push
xor
jp
mov
jl
pop
push
in
test
pusha
and
not
pushl
jns
jp
sub
jp
pop
dec
adc
inc
jmp
jmp
call
stc
sbb
or
push
cmc
shrd
xchg
mov
rol
push
push
bt
sub
btc
mov
test
adc
push
movsbw
push
daa
jbe
shl
push
movzbw
or
movsbw
sbb
push
test
cmp
cwtl
rol
mov
pushf
cmp
stc
test
pusha
movb
jmp
lea
jbe
neg
shr
xadd
sub
clc
bsr
mov
xchg
shrd
call
lahf
lea
movsbw
movzbl
not
movzbw
mov
pushf
lea
ja
jmp
stc
arpl
mov
daa
fisubrs
mov
cmp
jl
sbb
imul
loop
adc
mov
or
jl
std
out
cltd
adc
and
sahf
les
xor
mov
mov
pop
hlt
or
sar
xchg
pop
or
stos
pushf
je
cmp
xchg
repnz
sbb
mov
mov
in
in
bound
cltd
mov
incl
xchg
pop
inc
ljmp
push
jmp
loop
jnp
push
lods
dec
and
add
ret
ss
sub
loopne
adc
mov
das
xchg
sbb
add
sbb
popl
repz
dec
mov
jle
mov
pop
push
cltd
les
xchg
leave
pop
mov
in
jge
incb
jbe
jae
dec
and
fimull
and
sbb
fwait
mov
sahf
pop
pop
mov
scas
inc
sar
das
ficompl
loopne
shrl
cwtl
fs
pushw
cld
and
sbb
or
outsb
push
and
loope
push
inc
lea
jmp
fnsave
cmp
int
xchg
lret
pop
adc
inc
repz
add
ror
mov
std
dec
shll
xchg
mov
push
addr16
ret
sbb
inc
js
je
jb
arpl
jae
fwait
mov
add
subb
xchg
lock
je
es
adc
dec
test
push
scas
fildll
or
add
stos
add
mov
lock
lds
adc
pop
lea
cld
pop
lds
in
jl
aaa
mov
jne
add
jmp
inc
insb
outsb
into
ljmp
lods
mov
clc
icebp
jl
mov
adc
xor
cmpl
es
sub
adc
pushf
lea
jb
pusha
test
cmp
mov
movw
lea
jae
stc
bswap
mov
shl
cmp
not
mov
sbb
cmp
mov
pusha
test
cmc
sub
test
pusha
repnz
push
pushf
lea
jne
xchg
shrd
mov
push
or
or
btc
sub
test
lea
pushl
bt
test
pusha
sub
call
aam
mov
mov
leave
jmp
int
pop
insl
mov
testl
outsl
mov
cltd
push
cltd
test
test
add
das
jp
push
ja
mov
xchg
ja
popf
cmc
add
pop
flds
push
sbb
call
inc
iret
in
xchg
dec
mov
movzbw
jle
mov
pop
movsbl
pop
movsbw
xchg
pop
bswap
push
mov
pushf
pushl
ret
sbb
mov
les
and
vmread
dec
pop
add
les
jb
xchg
outsb
inc
mov
push
ror
aad
push
ret
out
pop
lahf
out
xor
loopne
dec
fimull
aam
jo
cmpsb
mov
and
lods
cmp
ja
xor
imul
shlb
mov
jl
mov
int
gs
adc
lret
pop
and
adc
call
fs
fisubl
imul
inc
and
stos
sbb
and
movb
pusha
call
lea
je
push
clc
push
sub
movb
lea
jmp
sbbl
sbbl
lods
mulb
mov
iret
cs
mov
into
jno
ficoms
or
outsl
data16
loopne
mov
fmull
rcr
add
inc
mov
add
mov
jecxz
jle
daa
cltd
lahf
pop
adc
and
mov
adc
shrl
stos
jbe
pop
aaa
pop
lret
add
loop
push
cmpsl
inc
mov
out
std
xchg
rcrb
mov
push
sub
daa
jle
inc
mov
inc
testl
mov
xlat
test
cmp
jo
jp
ja
mov
call
mov
jg
imul
and
repz
movl
repnz
mov
loope
dec
out
pop
cs
imul
jle
stos
ss
or
and
jle
jb
les
in
test
aad
hlt
ret
xchg
mov
xchg
insb
cwtl
pop
jne
push
outsb
push
add
mov
outsl
mov
adc
lock
or
cs
push
fwait
xlat
hlt
arpl
in
loopne
fucomp
xchg
mov
enter
push
repz
hlt
sti
jo
push
inc
sbb
pop
int
negl
popa
out
xchg
aad
setnp
rol
mov
pushf
movzbw
mov
lea
bt
push
not
mov
stc
bt
mov
bt
stc
pushl
cmc
rol
call
add
xchg
mov
mov
cwtl
mov
das
sbb
jo
aam
lock
cmp
cmp
adc
fisubl
push
in
shrl
and
mov
push
mov
pop
fsubl
cmpsb
mov
dec
test
add
stos
rorb
sub
dec
adc
mov
push
int3
xchg
dec
xchg
mov
mov
add
hlt
and
mov
pop
ss
daa
std
adc
rorb
arpl
or
mov
notl
add
jmp
loop
mov
mov
movsl
pop
push
lahf
mov
or
out
repz
lcall
mov
adc
adc
rolb
jns
sub
in
mov
fimull
arpl
pop
and
aad
lods
fisubl
xor
xlat
mov
pusha
mov
bound
mov
call
shll
es
mov
aaa
test
add
pusha
dec
out
mov
push
sti
lods
cld
test
movsb
clc
xor
xor
in
and
push
sbb
rolb
push
pop
inc
and
add
adc
fbstp
pop
jp
popf
adc
push
pop
sbb
shll
mov
lcall
jmp
dec
addr16
pop
rclb
xchg
mov
lods
mov
in
add
sub
fiadds
add
inc
sbb
add
add
out
bound
test
sbb
mov
sbb
or
add
adc
add
add
sub
mov
pushf
lea
jmp
movsbl
setb
pushf
mov
xchg
movsbw
mov
bswap
mov
call
mov
pusha
push
push
pushl
ret
pusha
push
lea
call
call
lea
jbe
not
mov
movsbl
add
or
bts
mov
lea
cmp
stc
add
bsr
movzbw
stc
movl
cmp
mov
clc
pusha
clc
cmp
push
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
xlat
mov
mov
mov
jno
cli
jmp
hlt
sub
fists
xchg
inc
out
dec
mov
divb
mov
fdivrs
adc
dec
test
mov
pop
sbbb
aaa
lahf
mov
movsl
adc
push
cwtl
xchg
mov
lods
into
push
xor
push
xchg
arpl
cmp
xchg
mov
or
lods
call
jge
filds
mov
sarl
sbb
divl
mov
mov
enter
loopne
out
out
pop
add
and
test
imul
out
cmc
cmc
scas
xchg
xchg
stos
imul
filds
outsl
enter
dec
or
pop
test
dec
push
in
pop
sub
in
cmp
dec
in
sti
fisttpll
mul
push
jl
sub
push
int
dec
ret
sub
ljmp
jae
lcall
add
cmpl
xchg
pop
xor
out
rolb
and
sub
insb
in
xor
fiadds
pushf
add
daa
pop
jp
cs
shll
xor
popf
jb
pop
and
push
mov
sub
inc
dec
push
xchg
cld
and
stos
xlat
rcll
dec
shr
fdiv
sbb
dec
mov
mov
inc
sbb
in
fidivl
mov
sub
out
cmp
xlat
cltd
lods
mov
pop
or
test
jl
jecxz
sub
mov
fs
ljmp
dec
test
arpl
jb
mov
ja
adc
addr16
aad
aad
jns
rol
in
jae
fcompl
lret
insb
sub
pop
rclb
int3
sub
dec
jne
jp
adcl
lahf
push
pop
fwait
xchg
jp
test
adc
jg
adc
xchg
mov
sub
cld
and
adc
rcrb
jl
gs
cmpsl
test
sbb
or
xchg
mov
inc
popf
out
add
push
jecxz
ret
jl
sub
add
and
sbb
rcr
js
add
stos
imul
call
mov
cwtl
or
inc
std
hlt
jae
inc
leave
push
dec
add
insb
sbb
clc
cmp
movsl
stc
jns
jmp
dec
popa
sub
sbb
rep
bswap
mov
mov
mov
pushf
pusha
pushf
lea
jmp
pusha
lea
jb
pushf
pushl
pushl
ret
and
sub
shl
movsbw
mov
stc
test
sub
test
pushl
clc
call
pushf
call
pusha
dec
clc
rcr
rol
pushf
rcr
rcl
setge
sub
bt
call
pushf
jmp
mov
pusha
pushf
pushf
push
lea
jmp
call
mov
jmp
clc
cmc
cmpb
movl
call
lea
jne
sub
sbb
movzbw
bswap
mov
stc
add
clc
movzwl
bsr
shrd
shrd
bsf
mov
stc
push
cmc
add
bt
mov
test
test
jmp
mov
mov
xor
ret
hlt
sbb
jb
imul
add
xchg
sub
imul
fists
mov
mov
push
or
push
cmp
int3
xor
mov
mov
mov
out
fs
pop
int3
jo
fidivrs
sub
popa
ftst
mov
adc
pop
pop
lea
jmp
clc
push
clc
test
add
call
clc
clc
cmp
movb
pusha
jmp
fdivl
imulb
subb
jl
sub
xchg
lret
call
xchg
xor
lods
hlt
aaa
test
dec
jmp
jb
shll
mov
mov
pushf
mov
sbb
mov
int3
iret
sub
push
ljmp
in
push
repz
push
cmp
aam
popa
ljmp
sub
cmc
mov
neg
call
call
mov
bsf
add
mov
shr
clc
lea
ror
mov
test
add
add
movsbw
mov
lea
push
mov
pushf
mov
lods
push
cmc
push
jmp
pushf
adc
mov
lea
call
pushf
pushl
push
mov
lea
jb
pusha
pushf
pushf
mov
pushl
ret
repnz
jmp
aam
cmp
sub
pop
cwtl
test
sub
push
jns
push
mov
cmpsl
jge
mov
cmpl
repz
fwait
mov
gs
pushf
into
mov
outsb
fsubrl
mov
push
fnstsw
addr16
cmp
pusha
mov
movb
stc
test
lea
jle
je
clc
pushf
push
add
cmc
call
outsl
pusha
sub
inc
add
pop
add
data16
jmp
push
add
fwait
xor
shrl
cmp
pop
dec
std
hlt
andb
inc
cmp
adc
imul
lahf
test
add
ja
sbb
rclb
and
fisubrl
mov
repz
adc
pop
xor
mov
mov
shlb
test
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
insb
stos
pusha
mov
aam
xchg
rcll
ljmp
and
jl
dec
cmp
adc
imul
std
mov
lods
mov
in
fs
int
mov
popa
pop
jb
cmc
fsubs
cld
sti
loopne
mov
and
mov
jo
repnz
mull
aam
and
lds
call
mov
test
in
lock
inc
rorl
or
lea
je
inc
bts
sete
add
bts
or
btc
pushf
mov
bt
movb
add
test
clc
cmc
test
mov
setno
mov
pusha
test
cmp
jmp
lea
jae
ror
xadd
btc
shr
mov
movsbl
pusha
mov
bsf
adc
bt
pop
mov
pushf
bt
xor
test
pushf
repnz
mov
pushl
lea
jne
bswap
ror
neg
neg
mov
test
stc
pushf
xor
sub
stc
bswap
not
stc
lea
add
test
jmp
push
pusha
pusha
adc
movb
movb
movb
pushl
ret
or
mov
mov
xchg
call
in
jmp
xchg
push
test
jmp
ds
pop
js
or
inc
lods
add
pop
push
addb
adc
push
inc
jmp
mov
dec
mov
gs
push
lock
add
xchg
fists
xchg
in
aam
xor
jle
loopne
or
decb
jb
cmc
jae
in
push
xchg
mov
mov
ss
sti
mov
jle
ret
adc
out
adc
xorb
sub
pusha
jp
cli
lods
xor
cmp
cmp
loopne
and
inc
aam
xchg
ret
clc
sub
sbb
les
and
popa
jo
cmpsl
pusha
mov
fwait
push
sub
hlt
mov
xor
mov
in
inc
insl
push
out
xchg
leave
repz
fstpt
or
jnp
movsb
mov
mov
ja
push
loope
bound
jecxz
repz
pop
int
adc
pop
dec
ret
xor
xchg
xlat
mov
out
es
sbb
dec
jno
cwtl
aam
cwtl
xchg
xor
nop
popf
mov
daa
mov
sbb
test
inc
ficomps
popa
pushf
push
popf
jb
inc
jmp
xchg
pusha
jmp
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
pushl
sete
stos
mov
call
call
lea
ja
call
out
lods
cmpsb
pusha
mov
dec
inc
imul
aad
repnz
dec
mov
mov
pop
mov
ja
or
push
cmp
pushf
dec
loop
mov
and
or
mov
loope
enter
and
in
cmp
pop
rol
fxch
shlb
push
and
das
dec
jle
dec
dec
fcmovb
stc
mov
mov
movsl
fdivrl
push
jnp
shll
sbb
mov
push
push
pushf
pushl
ret
cmc
sub
bt
mov
jmp
dec
outsb
imul
je
outsl
outsb
and
jb
jb
and
xor
pusha
mov
xchg
iret
sti
stos
shrl
sub
add
mov
ljmp
mov
hlt
adc
cmp
int
repnz
mov
into
sti
cmpsl
xchg
mov
shrl
lods
aaa
out
add
repz
xor
add
push
add
mov
or
loopne
push
push
xchg
inc
scas
stos
fadds
popl
lock
pop
sbb
cmc
mov
xchg
and
mov
jns
sbb
clc
push
sahf
mov
repnz
and
pop
ljmp
dec
lods
pop
int
jae
sbb
pop
ja
adc
mov
xchg
outsl
or
xchg
push
add
cmc
xchg
movsl
pusha
mov
jns
aas
or
jae
outsb
pop
stos
out
or
sub
repz
mov
cwtl
xlat
adc
lock
jmp
mov
inc
cmp
dec
fnstsw
rorl
in
sub
jp
inc
mov
jle
jbe
mov
xor
sub
push
test
or
out
leave
inc
xor
movsb
mov
mov
xor
jne
in
cmp
or
call
push
inc
not
pusha
pushf
mov
lea
pusha
movb
push
pushl
lea
call
jmp
mov
mov
cwtl
or
dec
mov
ss
cld
jg
ljmp
xor
lea
or
cmc
or
push
or
mov
es
jno
lock
int3
pop
outsl
pop
mov
mov
into
sbb
cmc
test
jmp
lock
inc
and
mov
sbbb
stos
mov
jmp
pop
movsb
pusha
mov
xlat
movsb
cld
cmp
cmp
test
push
lret
inc
jge
sbb
ret
xor
adc
lock
cmp
dec
mov
mov
jo
loopne
mov
bnd
push
out
cmpsb
or
jp
out
clc
add
jp
lret
lea
repnz
jbe
and
and
lret
lret
pop
das
inc
sbb
sub
fsub
pop
sub
lds
cmpsl
test
pop
leave
idivb
dec
inc
xchg
insb
mov
insb
inc
cmp
pushf
lret
shl
clc
bsr
shr
xor
push
setl
mov
setns
push
pop
mov
movzbw
movsbw
mov
mov
movsbw
movzbl
pop
mov
jmp
adc
xchg
mov
sbb
xchg
mov
out
jle
sub
cld
and
xor
adc
pop
fisubs
testl
ljmp
or
xor
mov
or
mov
es
push
cmc
in
pop
mov
bound
or
push
out
hlt
mov
pop
add
rcll
push
movsb
sbb
and
ficoms
enter
add
fwait
test
fwait
aaa
jl
cli
daa
shl
jg
xchg
lds
mov
ds
test
sub
inc
xchg
movsb
mov
pop
or
fiaddl
jp
das
insl
jmp
stos
imul
mov
fs
test
jp
sbb
add
int
ja
ret
mov
aaa
inc
and
push
inc
push
xchg
sbb
rcrb
inc
icebp
xchg
mov
in
fs
pop
sbb
xchg
movsl
in
fstl
or
rcrb
dec
sbb
sub
in
jmp
test
xchg
jle
fsub
sbb
dec
and
lea
ja
push
push
pushf
lea
jb
pusha
jmp
pop
inc
scas
mov
inc
fsub
popf
shl
into
jae
mov
mov
sub
cmpsb
push
xor
sbb
or
sbb
mov
xchg
cltd
mov
test
daa
jge
mov
ss
dec
jle
lods
mov
mov
in
or
out
pop
mov
inc
les
and
js
movsl
sti
fdivp
and
out
dec
mov
push
lds
gs
stc
pushl
test
pushf
jmp
daa
ret
pusha
mov
lods
pop
xchg
jg
sbb
jbe
adc
xchg
shrb
xor
jne
mull
xchg
out
fs
shl
call
sub
loopne
popa
mov
insb
cltd
fcmove
sar
fs
or
inc
je
cmc
mov
and
jle
xor
aad
jl
mov
dec
push
popa
sub
or
add
inc
gs
outsl
fs
gs
imul
add
inc
and
ja
pushf
lea
je
stc
test
stc
cmp
jmp
sub
ja
pusha
mov
xor
repz
stos
xchg
sbb
enter
mov
mov
in
cltd
call
int3
mov
sbb
movsb
addr16
dec
or
inc
adc
adcb
es
jp
adc
in
inc
add
lcall
sahf
lods
lret
fs
arpl
xor
cmp
or
dec
lcall
add
and
movsb
test
adc
add
inc
aas
mov
sbb
mov
call
cmp
sbb
ja
mov
add
adc
or
adc
xor
xchg
adc
push
xchg
mov
popa
test
cmp
les
xchg
push
fstl
jnp
xor
fwait
js
fcoml
ret
dec
repnz
movsl
xor
inc
out
or
ret
cmpsl
inc
out
pop
push
cmpsb
push
jp
inc
fwait
les
roll
pop
jl
daa
rorb
dec
xchg
jbe
sarl
lcall
fdivs
xor
pop
leave
lea
sub
push
bound
push
dec
pop
out
mov
mov
jno
mov
or
mov
sbb
daa
popa
std
rol
dec
and
movsl
and
dec
xor
push
cmp
gs
fdivrp
or
pop
out
aad
jns
adcl
data16
lock
jae
sarl
mov
dec
or
ret
dec
inc
sub
filds
or
push
fmulp
push
stos
sub
out
aaa
shrl
in
lods
adc
movsl
mov
cmc
enter
insb
mov
dec
fdivp
idivl
mov
and
mov
or
dec
data16
or
sbb
adc
imull
sbb
xor
adc
lcall
cmp
push
stos
and
cmp
pop
sub
inc
cmp
mov
movsl
out
lock
fdivrs
and
xchg
xlat
orb
inc
hlt
addr16
mov
sub
add
dec
shlb
mov
mov
call
mov
cwtl
sahf
pusha
mov
stos
bound
dec
xlat
jle
cmp
sbbb
cmp
or
shrl
fs
jo
mov
movsb
and
mov
mov
pop
sbb
pop
push
pop
adc
scas
push
cmpl
cmpl
in
sbb
jecxz
aas
sbbb
inc
or
iret
cmp
shll
ljmp
icebp
test
scas
js
popf
cmp
dec
mov
and
je
je
cmc
pushf
test
or
call
movl
pushf
mov
lea
jmp
jmp
imul
ret
adc
stos
jae
cmpsl
movsb
add
sub
mov
jbe
aad
out
js
sub
jge,pn
aas
pop
movsb
mov
nop
out
jmp
pop
cli
rol
jg
dec
stos
jne
inc
xchg
stc
scas
int
imul
jns
push
push
jnp
jbe
sub
mov
imul
lds
or
cs
pop
pop
push
fwait
outsl
sub
pop
gs
mov
insb
ja
xor
inc
push
insb
push
fidivl
insl
test
sbbb
imul
movsl
ret
ljmp
mov
fcomi
insl
jle
mov
repnz
or
jmp
insl
aaa
lahf
ja
outsb
mov
jecxz
jo
movl
pop
mov
pop
push
inc
xor
pop
test
jns
fmull
inc
push
ds
mov
push
push
jb
jp
inc
mov
lahf
sub
or
test
dec
out
insl
or
mov
dec
sbb
jnp
pop
sub
jmp
ret
or
pusha
cmpsl
dec
pop
mov
xchg
dec
rcr
ljmp
lahf
mov
decl
dec
test
mull
push
outsl
jmp
movsb
pop
iret
jp
dec
dec
stos
push
lret
mov
dec
lds
jb
fs
fildll
mov
push
je
cld
repz
sub
test
lea
sarb
dec
in
outsl
movsb
dec
fistps
jbe
ret
push
lcall
push
nop
fwait
pop
sub
mov
mov
adc
clc
movsb
fldenv
pop
int3
pop
xor
ficomps
pushf
mov
cmpsl
stos
jg
push
push
pop
loop
jmp
movsb
sti
sub
ljmp
mov
lret
popa
cmpsl
dec
movsl
cli
stos
movsb
stos
inc
xchg
dec
incl
push
cmpsb
fadd
in
shlb
fneni(8087
fistl
dec
mov
jmp
ljmp
and
sub
aaa
ja
jl
shrl
ss
movsb
xor
popa
push
jle
push
rorl
stos
js
cmp
jno
jno,pn
sub
xor
insb
sub
mov
scas
stos
mov
mov
insb
xor
sub
cmpsl
jno
xor
jbe
and
pop
icebp
outsb
inc
outsb
and
jmp
aaa
and
je
pop
outsb
scas
test
push
inc
scas
dec
mov
add
ret
pop
jno
sti
jae
dec
sti
scas
inc
mov
push
scas
dec
mov
add
ret
pop
jno
sti
je
jle
xor
xchg
dec
pop
push
xchg
hlt
jo
cmpsb
jo
sti
xor
fidivs
mov
add
inc
cmpsb
jo
sti
jbe
data16
scas
test
push
inc
scas
dec
movsb
aaa
add
addb
sti
idivl
sti
xor
cmp
dec
pop
xorb
mov
lea
mov
ret
addr16
sti
cmp
sti
scas
xchg
jns
push
scas
dec
cmpl
cmpsb
jo
sti
cmp
sti
scas
into
jp
nop
scas
push
shlb
cmp
lods
cmp
cmpsb
jo
int
pop
scas
test
inc
scas
dec
mov
add
ret
pop
jno
sti
sti
jns
sti
scas
mov
push
ja
dec
mov
jl
movsb
cmpsb
jo
sti
mov
xchg
cld
push
push
scas
dec
cmpl
cmpsb
jo
int
pop
scas
test
mov
add
ret
pop
jno
sti
jns,pt
sti
scas
mov
push
ja
dec
mov
mov
insl
sti
aas
jns
sti
scas
bnd
mov
dec
idivb
pushl
cmpsb
jo
sti
add
sti
scas
ljmp
rolb
pop
xor
jo
cmpsb
jo
sti
inc
jns
sti
scas
cli
orl
roll
pop
add
jo
cmpsb
jo
sti
inc
jns
sti
scas
lret
mov
nop
pop
adc
jo
cmpsb
jo
sti
inc
jns
sti
scas
fiaddl
faddp
add
jo
cmpsb
jo
sti
inc
jns
sti
scas
xchg
test
push
scas
dec
add
lods
add
cltd
int
pop
scas
test
inc
scas
dec
mov
add
ret
pop
jno
sti
lds
sti
scas
test
iret
outsb
mov
dec
mov
test
mov
pop
jo
sti
inc
jns
sti
scas
test
push
scas
dec
mov
add
subb
mov
loope
mov
pop
dec
arpl
or
mov
int
or
cmp
xor
mov
dec
arpl
or
mov
cmp
dec
int
dec
xor
mov
pop
dec
arpl
adc
nop
jno
int
adc
cmp
xor
mov
pop
push
sbb
dec
fwait
push
mov
adcl
outsl
sti
xor
adc
inc
pop
xorb
popf
int
pop
scas
mov
mov
add
ret
arpl
sti
adc
dec
sti
scas
mov
dec
movsl
arpl
xchg
xchg
jo
cmpsb
jo
sti
aam
jg
xor
xchg
dec
pop
push
xchg
jo
sti
xchg
jns
sti
xor
aad
inc
pop
xorb
popf
int
pop
scas
mov
dec
scas
dec
mov
add
ret
arpl
sti
jns
sti
scas
mov
dec
movsl
arpl
xchg
push
jo
cmpsb
jo
sti
xchg
jns
sti
xor
xchg
dec
pop
push
xchg
jo
sti
pop
jns
sti
xor
cwtl
add
xorb
popf
int
pop
scas
mov
push
dec
scas
dec
mov
add
ret
arpl
sti
cltd
jns
sti
scas
mov
dec
movsl
arpl
xchg
sbb
cmpsb
jo
sti
pop
jns
sti
xor
xchg
dec
pop
push
xchg
jo
sti
sbb
sti
xor
mov
inc
scas
dec
mov
add
ret
pop
jno
sti
fstpt
sti
scas
mov
push
ja
dec
mov
pop
jo
cmpsb
jo
sti
pushf
jns
sti
xor
faddl
push
pop
cmpb
test
icebp
xchg
xor
add
subb
cltd
int
pop
scas
test
push
inc
scas
dec
mov
add
ret
pop
jno
sti
sahf
jns
sti
scas
mov
push
ja
dec
mov
pop
jo
cmpsb
jo
sti
pop
jns
sti
xor
lahf
add
cmpb
test
insb
ljmp
mov
popf
jno
int
mov
icebp
dec
xor
sbb
dec
pop
mov
popa
dec
dec
dec
dec
xor
scas
movsl
pop
loopw
loope
push
loop
mov
dec
dec
jb
xor
insb
mov
sbb
dec
ficoml
jbe
jecxz
dec
jb
xor
insb
mov
sbb
dec
ficoml
jbe
gs
dec
jb
xor
insb
mov
sbb
dec
ficoml
jbe
out
dec
jb
xor
insb
mov
sbb
dec
ficoml
jbe
push
xor
insb
mov
sbb
dec
ficoml
jbe
jmp
xor
imul
dec
ret
mov
loop
mov
dec
dec
jb
xchg
xor
jno
and
push
and
sbb
dec
ficoml
jbe
lods
dec
dec
jb
xor
insb
mov
pop
test
xchg
cmpsb
jo
int
subl
dec
pop
cltd
pop
js
das
dec
dec
inc
dec
xor
popf
pop
push
stos
outsb
pop
push
insb
dec
insl
jmp
and
cmp
ljmp
lods
bound
in
outsb
scas
push
ljmp
je
outsb
xchg
pushl
sub
pop
cmp
dec
jno
stos
push
jp
ljmp
stos
inc
aas
jp
mov
jl
lds
dec
mov
xchg
je
mov
cmp
inc
clc
adc
dec
out
subl
js
jp
jb
in
outsb
cmc
pop
enter
int3
mov
inc
aas
push
dec
cmp
insb
rcll
int
jb
jp
mov
mov
pop
jge
pop
jo
lods
jg
sti
jo
jae
mov
ret
mov
sub
lea
xchg
jae
jl
mov
cmp
outsb
mov
stos
nop
divb
mov
xor
dec
icebp
icebp
repz
xlat
mov
loop
dec
cmp
dec
dec
xor
icebp
or
insb
dec
push
fucomp
xor
scas
adc
fs
dec
jo
xchg
dec
dec
arpl
xor
insb
mov
sbb
dec
fidivrl
xchg
mov
loop
push
or
stos
sbb
lods
mov
shlb
jb
popf
inc
cmp
fidivs
arpl
and
in
sbb
cmp
mov
scas
jle
jp
dec
mov
insb
push
mov
pop
lods
add
insb
or
imul
insb
ja
loopne
cmpsl
dec
adc
loopne
lret
imul
jp
ret
mov
mov
loope
int
and
jae
bound
ja
mov
sbb
sbb
and
movsl
int
and
out
jecxz
repnz
int
mov
add
pop
in
out
and
jb
mov
mov
fs
movsb
mov
fwait
pop
lods
fsub
and
gs
sbb
insb
scas
cmpsl
jb
es
js
jnp
add
jnp
iret
int
rcrl
int
imul
repnz
cmp
mov
jl
dec
lea
out
lret
pop
jb
jnp
addr16
fildll
jnp
cmpsl
insb
lcall
outsl
sub
ret
cmpsl
int
clc
push
test
int
ds
mov
scas
jbe
jo
mov
mov
ljmp
dec
imul
jl
dec
aas
jmp
in
repnz
cmp
cmp
push
lods
xor
scas
push
outsb
cmp
repnz
sub
imul
stos
ljmp
jl
dec
ljmp
loope
ret
insb
repnz
lods
scas
push
stos
mov
imul
addr16
insl
jl
jge
jb
cmpsl
fnsave
aam
mov
jp
scas
ja
cli
inc
lret
mov
lods
mov
jne
cmp
divl
xor
cmc
scas
repz
ljmp
or
scas
aaa
stc
cmp
repnz
jg
and
jp
out
dec
or
sub
js
adc
push
dec
sbb
pop
pop
arpl
in
push
dec
inc
push
adc
outsl
jo
std
dec
and
add
roll
leave
mov
jnp
jle
jno
insb
bound
insb
inc
aas
insb
jne
scas
data16
cltd
mov
outsb
lods
inc
add
inc
repnz
ret
lods
jb
shlb
jnp
mov
out
dec
pushf
rorl
stc
mov
push
inc
jp
jl
repz
mov
outsb
dec
xchg
dec
pop
int
outsb
roll
idivb
rclb
cmp
jo
inc
or
imul
add
fwait
mov
movsl
mov
cmpsb
jl
xor
or
sti
scas
orl
int
test
nop
outsb
or
adc
cwtl
lret
sub
dec
mov
jae
data16
push
pop
jb
int3
jae
mov
mov
pop
mov
inc
arpl
mov
jbe
lret
add
jl
mov
jae
pop
push
xchg
jb
scas
push
insb
popa
adc
adc
cwtl
sub
incl
jo
jmp
in
or
imul
mov
jo
sbb
lods
lods
adc
push
dec
mov
jl
stos
push
in
pop
ret
movl
mov
or
popf
jle
mov
rep
pusha
inc
jo
out
xchg
cmp
or
movsl
insb
dec
shlb
insl
fadds
sbb
sbb
push
and
sub
ret
ss
arpl
sarl
inc
xchg
scas
jo
and
add
in
mov
outsb
jp
nop
out
shr
dec
jg
xchg
mov
ret
jp
pop
inc
jb
pusha
pop
jns
scas
mov
jae
jae
or
xorl
popf
xchg
xchg
mov
jbe
push
icebp
cli
inc
jo
inc
inc
sbb
in
add
mov
pushw
fstpt
enter
or
inc
jae
stos
xchg
insl
dec
push
xchg
dec
xchg
or
jns
rcl
inc
je
dec
ds
sub
and
dec
loope
push
or
inc
gs
insb
xchg
and
in
cmp
jbe
repz
add
xchg
cmp
jo
mov
push
jl
inc
dec
sbb
leave
mov
icebp
dec
js
jp
jnp
ljmp
jo
mov
xor
fnstsw
pop
cs
xor
add
dec
stos
pop
jmp
jge
ret
or
jl
pop
mov
repnz
movsb
mov
mov
insl
mov
sbb
mov
mov
subl
mov
shrl
out
jb
or
cmp
cmp
test
je
mov
dec
inc
outsb
mov
arpl
clc
insb
mov
xchg
pusha
push
push
filds
out
mov
jl
push
lret
js
adc
cmpl
xchg
out
insl
mov
jb
mov
push
pop
mov
inc
bnd
jbe
mov
sti
aad
push
loope
rorb
adc
inc
cs
test
dec
xchg
push
mov
scas
aaa
add
cmc
xchg
pop
add
dec
inc
jmp
xor
imul
rcrb
lods
ljmp
mov
mov
add
les
sbb
int3
mov
pop
jns
mov
mov
in
rcll
jb
outsb
aaa
shl
roll
jo
idiv
scas
push
sub
mov
sub
cmp
jge
jbe
ljmp
cs
test
jl
lods
add
pop
shll
int3
ret
aam
cmp
repnz
mov
lcall
push
sti
sbb
ljmp
sbb
adc
mov
inc
ficoml
pop
sub
rcl
fwait
push
roll
rcrb
std
das
add
mov
push
inc
cmpsb
push
rorb
dec
push
add
lcall
jp
add
adc
shr
aaa
pop
lret
out
push
insl
jne
cmp
mov
sahf
jns
cmpsb
les
ljmp
fmull
insb
stos
sti
jbe
mov
dec
lods
daa
aam
fstps
test
xor
fucomi
jmp
cli
jmp
jmp
pop
push
fucomip
outsb
cs
orl
push
out
mov
pop
imul
push
std
mov
and
stos
sarb
xlat
xchg
fldcw
nop
ret
push
cmpsl
sbb
adc
or
pop
jnp
rep
ss
lods
outsb
in
sub
lds
push
cmpsb
pop
push
pop
xlat
push
mov
mov
aaa
push
mov
repnz
vaddsd
inc
inc
insb
dec
fsts
ja
js
aaa
push
mov
divb
insb
jo
sub
xor
xchg
sub
jno
mov
into
outsb
iret
shrl
pop
sub
nop
or
subl
outsl
add
mov
xor
ret
aaa
and
lods
ret
in
inc
jbe
add
or
jbe
sar
sub
stos
test
jo
inc
mov
out
cmp
sub
inc
mov
xor
je
mov
outsl
dec
cmc
sub
push
lods
push
imull
xlat
jnp
in
fstpt
sbb
pop
cmp
sbb
sub
jl
push
in
cli
xor
stos
adc
push
jbe
pop
jl
cmp
mov
mov
push
inc
stos
mov
in
sarl
cs
lock
and
mov
insl
scas
xor
mov
sub
cmp
xchg
pop
jns
shl
jo
jmp
xor
adc
lret
fldenv
js
xchg
cmc
out
sarb
mov
push
mov
mov
adc
int
das
sub
icebp
mov
lods
or
jg
in
cmp
insb
icebp
aas
shrl
inc
dec
in
mov
ljmp
clc
in
mov
jmp
sti
xor
jnp
mov
cld
mov
je
mov
in
rolb
sbb
mov
push
sbb
mov
mov
pop
pop
insw
jb
jns
jl
ljmp
sub
imul
jmp
add
ret
loop
dec
add
stos
mov
fnstcw
mov
jge
mov
std
mov
in
cmp
mov
js
imul
jb
inc
mov
stos
mov
bound
pop
js
xlat
xor
xchg
cs
pop
and
push
orb
ljmp
addb
adcl
in
mov
cmp
mov
add
popf
sbbb
dec
mov
xor
in
xchg
ja
shll
mov
outsl
lods
or
mov
jno
bound
push
and
movsl
jno
gs
shll
and
int
mov
loopne
shll
arpl
or
stos
lret
sbb
inc
pop
jne
xchg
mov
inc
pop
add
pop
inc
repz
mov
stos
xor
adc
lods
push
negl
mov
push
daa
pop
pop
mov
outsl
das
sub
dec
in
mov
mov
stos
ljmp
lahf
jecxz
push
sub
sbb
sbb
sub
or
movsb
push
pop
stos
dec
inc
fisubrl
cmova
dec
sti
adcl
jno
fldl
movsb
jp
mov
sub
in
push
ss
xchg
or
inc
js
mov
inc
scas
adc
js
cltd
push
xlat
imul
sub
pop
mov
push
in
outsb
pop
lods
cmp
stos
fnsave
jmp
ficomps
stos
dec
pop
ljmp
shlb
int3
xor
cmc
inc
js
outsb
jae
inc
dec
enter
jae
sub
cmp
pop
add
mov
outsl
icebp
insl
fldz
cs
push
ja
mov
push
sahf
imul
stos
pop
cwtl
in
testb
in
or
mov
pop
mov
sub
xchg
in
shl
nop
aad
jmp
bound
xor
adc
outsb
js
lock
pop
je
pop
or
add
pop
cmpl
jno
inc
int3
pop
mov
xchg
cs
jb
push
dec
sub
mov
js
imul
xorl
popf
in
cmpsb
popf
popa
stos
pop
ljmp
mov
add
xor
out
jne
imul
shll
mov
mov
xor
cmp
fwait
lret
das
imul
loopne
or
push
stos
ss
sub
ret
lcall
mov
cmp
xor
pop
sub
popa
das
pop
in
gs
jmp
mov
repnz
mov
jmp
push
cmp
aaa
scas
xchg
imulb
mov
js
das
sbb
sub
repz
sub
sbb
mov
sub
rorl
in
jae
sti
bound
sub
cmp
mov
jmp
cs
cmp
push
pushf
add
mov
sub
cmp
mov
imul
jecxz
lods
aaa
addl
dec
jmp
add
out
jle
cs
inc
xor
testb
ret
mov
js
jp
xor
cmpsb
test
arpl
pop
in
jl
cwtl
out
pop
xchg
jp
stos
push
lock
fnstcw
cs
xor
push
fisttpll
ljmp
negb
sub
daa
lret
pop
pop
jb
lods
mov
stos
xchg
ja
popw
loope
sbb
jmp
push
popa
sub
fldenv
std
enter
jge
jle
xlat
mov
stc
lock
cwtl
jle
inc
in
mov
test
sbb
ljmp
into
sbb
outsl
sbb
les
pop
jns
jmp
mov
das
mov
in
lods
jg
cs
cmp
push
ja
pop
pop
push
jo
mov
scas
je
stos
shlb
dec
and
dec
mov
jo
inc
repz
scas
jmp
jmp
dec
shlb
into
ljmp
clc
add
jo
fadds
inc
add
out
cmp
xlat
mov
lods
mov
aad
dec
aas
out
cwtl
xchg
ja
sti
inc
pusha
mov
push
cltd
lea
adc
adc
sbb
dec
ljmp
xor
xchg
in
sbb
mov
jg
inc
mov
icebp
insb
xor
cmp
jo
lret
sub
fcom
mov
js
jne
hlt
insb
xchg
cmp
mov
lea
stos
sbb
inc
jmp
mov
fcmove
outsl
out
into
mov
movsl
dec
neg
fistpl
test
in
mov
jge
mov
int
inc
ja
mov
push
shll
push
jns
pop
mov
or
repz
fildl
stos
xlat
mov
test
int3
pop
push
aas
sub
add
adc
jge
pop
pop
fisttpl
test
ljmp
mov
dec
stos
das
sub
sbb
inc
jle
sub
pop
adc
arpl
pop
adcl
jae
ljmp
pop
inc
dec
mov
fistl
shl
leave
sbb
pop
mov
mov
jne
imul
jecxz
jmp
push
sbb
xchg
sub
sub
mov
or
into
mov
xchg
mov
dec
add
ds
sub
sbb
inc
cld
shr
adc
dec
sub
or
lret
imul
add
jae
test
fldt
pop
sbb
adc
insb
adc
cmp
jl
cli
repz
add
mov
mov
sub
in
push
test
adc
sub
dec
sbb
ret
inc
cmpsb
insb
pop
fsts
xchg
sbb
test
in
mov
fcmovne
popa
and
fmull
xchg
adc
inc
push
in
and
adc
in
push
adc
shlb
cmp
imul
fsubrs
pop
sbb
sbb
pop
jbe
inc
or
pop
int3
sbb
push
xor
rorb
sub
push
ret
sbb
sub
xchg
push
sbb
sub
adc
ds
pop
adc
push
pop
lods
lret
ret
dec
imul
push
out
cmpsb
iret
cmp
inc
lret
repz
iret
pusha
aad
push
fists
sub
rorl
mov
inc
outsb
jae
lcall
fucom
mov
lock
aam
dec
scas
sbb
jae
add
iret
imul
push
sub
mov
inc
out
in
cwtl
and
je
adc
pop
or
sbb
lods
inc
arpl
pop
pop
fistl
dec
jno
call
fwait
and
inc
sub
jmp
push
dec
fstpl
push
jecxz
mov
repnz
pop
jae
mov
push
push
mov
cwtl
fsubl
mov
sub
inc
dec
mov
xor
cmp
jb
ss
push
sub
sti
lods
sub
aaa
jb
cmpsb
scas
js
imul
xchg
and
push
cwtl
lods
push
or
jg
das
out
inc
mov
ljmp
stos
or
mov
test
mov
icebp
pop
jmp
fistpll
sbb
shrb
push
xchg
out
dec
aad
mov
idiv
mov
jno
xor
jl
add
ljmp
bound
sub
xor
sti
sub
sti
pop
test
stos
jae
dec
mov
dec
aaa
mov
lahf
xchg
outsb
lods
pop
ja
scas
xor
or
jnp
addb
push
outsl
dec
stos
out
xor
sbb
out
int3
mov
mov
ljmp
jge
jl
xchg
shrb
push
sahf
movsb
fists
mov
ficompl
outsb
jo
stos
or
cmpsb
xchg
inc
dec
mov
cld
pop
push
inc
imul
in
push
sub
xor
aaa
out
push
pop
and
mov
cmc
notl
push
fucom
xchg
insl
ja
idivb
imul
lds
inc
mov
bnd
stos
push
jp
rolb
jle
push
es
jmp
and
cmc
leave
inc
in
jno
imul
dec
mov
jmp
cld
pop
jo
ljmp
outsb
pusha
lods
lret
jnp
hlt
mov
jnp
lds
lods
test
insl
int
inc
push
jae
mov
dec
insb
jb
bound
add
inc
jmp
stos
add
and
sub
and
imulb
add
ret
inc
pop
mov
inc
in
push
dec
mov
bound
sub
je
jbe
dec
dec
ljmp
fcoml
jbe
mov
je
push
jbe
jl
jnp
test
xchg
sub
repnz
push
push
fwait
jl
clc
push
sbb
daa
sahf
xchg
pop
jns
fisubrs
out
popf
ljmp
bound
prefetchw
or
pop
jae
stos
int
jg
stos
ljmp
enter
das
mov
ss
push
pop
out
fistps
and
push
push
sbb
and
lcall
or
mov
add
aas
xchg
call
xchg
dec
mov
sub
sarb
jle
and
and
lock
in
pop
cmc
scas
dec
repnz
iret
jge
test
inc
mov
rclb
jmp
lcall
jg
cld
jg
sbbl
push
pop
xlat
push
in
pop
xchg
fucomip
fstpl
hlt
sahf
jle
inc
jp
sub
jle
div
in
lods
jbe
test
inc
xchg
pop
in
mov
jb
dec
cmpsb
pusha
out
std
out
ds
add
iret
cs
xor
ljmp
pushf
xor
clc
ds
cld
in
lret
fwait
js
movsb
les
cmp
xor
sub
lret
add
insl
pushf
test
addr16
jbe
je
push
arpl
jmp
idivb
test
adc
push
cld
lds
ficompl
fcoml
loop
rorl
jge
sbb
xor
ja
lret
cli
jg
scas
rcrl
popa
mov
fs
fldz
mov
outsl
jge
hlt
mov
lahf
fildll
jmp
add
push
js
jl
push
scas
add
push
das
add
inc
aaa
xor
stc
jge
xor
jmp
aaa
or
popa
sbb
sbb
push
fisubrs
mov
mov
int
mov
pop
loope
pop
das
outsb
lea
jo
dec
rolb
jns
inc
ret
insb
fwait
out
sti
and
ret
inc
dec
cmp
das
xchg
mov
mov
leave
jbe
mov
pop
out
lock
les
push
lock
movsb
pushf
out
jnp
add
test
cli
repnz
xor
stos
ds
inc
mov
or
gs
jge
dec
jnp
testl
out
push
out
pop
frstor
je
fldenv
and
sbb
cltd
jp
fwait
mov
cmp
jge
lds
aaa
push
jp
push
arpl
jo
ficoms
inc
lods
ficomps
adc
icebp
sub
add
inc
jge
pusha
jg
pusha
aaa
lcall
dec
pop
mov
jae
ja
xchg
pop
pop
pop
imul
mov
sbb
stos
pushf
lds
inc
jg
inc
lock
das
lcall
jp
mov
cmpsb
pushf
test
rep
repz
push
jge
in
dec
cld
mov
ljmp
mov
mov
xor
xor
jle
data16
mov
xchg
dec
loopne
frstors
nop
push
test
cltd
stc
loop
jns
shll
cmpsb
jg
jl
mov
mov
test
cmp
jl
mov
and
ret
int
mov
and
pop
xchg
add
ret
call
repnz
ret
pop
cli
cmpb
fsubl
pushf
lock
lret
sub
scas
ja
xorb
pushf
pop
jle
cltd
imulb
push
out
popa
inc
ret
lock
cltd
xor
aaa
inc
mov
xor
mov
bnd
jo
aas
inc
mov
out
fs
aaa
inc
mov
lods
jne
fildll
inc
imulb
fcomp
pop
jge
rorl
ljmp
xor
jne
mov
cltd
pop
fsubl
sbb
shlb
js
jne
lahf
addl
mov
in
fistpl
insl
sbb
int3
repnz
mov
cltd
jbe
cld
lds
cwtl
icebp
mov
mov
xor
arpl
push
mov
imul
outsb
insb
out
shlb
fstp
out
mov
lods
bound
pop
sbb
pop
cld
push
jbe
fstpl
mov
shr
jns
mov
mov
outsl
test
or
dec
mov
mov
xor
outsl
push
sti
mov
mov
pop
sbb
fsubs
out
xor
and
gs
aaa
mov
cwtl
xchg
sbb
pop
mov
insb
out
dec
push
lods
inc
push
lret
mov
cmp
jg
jne
mov
mov
sbb
pop
inc
out
pop
adc
mov
xchg
je
mov
outsl
stc
mov
pop
xor
jge
ret
pop
stc
mov
cli
lods
push
ljmp
mov
pusha
mov
stos
loope
out
mov
push
cmpl
dec
cli
add
mov
xchg
mov
mov
es
je
push
repnz
jbe
pop
out
je
mov
xor
fsubrs
xchg
dec
inc
mov
fisubrl
xchg
adc
insb
insl
pop
arpl
outsb
test
jmp
or
lret
out
out
dec
cmc
scas
pop
lret
aas
dec
cmp
data16
xchg
test
or
adc
cli
js
mov
in
xor
push
data16
outsb
cmp
xor
cli
lret
sub
sub
mov
outsb
jle
dec
cli
or
imul
outsl
cmp
adc
mov
stos
xchg
mov
dec
xor
mov
mov
sti
pushf
insb
mov
cmc
in
xor
adc
dec
mov
mov
push
addr16
mov
mov
int3
mov
mov
cmp
or
mov
int3
mov
mov
push
addr16
mov
icebp
or
mov
mov
daa
test
pop
outsl
cmp
mov
dec
jb
or
sbb
sub
mov
aaa
inc
adc
mov
aaa
mov
hlt
int3
inc
add
scas
and
cld
mov
les
stos
scas
cmp
icebp
or
outsl
mov
adc
daa
imul
cli
jbe
add
ret
mov
jns,pn
sub
mov
mov
jnp
je
push
cmp
add
xchg
mov
mov
push
mov
xchg
cwtl
jnp
je
push
cmp
inc
jnp
mov
dec
mov
mov
push
addr16
cwtl
dec
sarl
mov
dec
mov
mov
mov
xchg
cwtl
jnp
mov
jns
jnp
je
add
mov
cwtl
jnp
je
push
cmp
cmpb
jmp
inc
in
inc
push
jae
inc
cwtl
mov
cmp
jnp
mov
dec
mov
mov
cmp
jg
scas
arpl
je
aas
int
cmc
stos
cltd
out
sub
sub
jo
imul
sub
sub
xor
subl
inc
insb
mov
mov
pop
bound
outsl
push
add
icebp
aas
jb
xchg
push
cmpb
mov
out
mov
push
mov
ja
mov
inc
dec
testl
mov
cmp
pop
mov
ljmp
add
jmp
daa
jae
ret
pop
mov
mov
out
outsl
xchg
cli
lods
adc
pushf
sarb
outsl
sub
sub
ret
outsl
cmp
adc
push
sub
xor
push
mov
mov
mov
jb
mov
mov
cmpsl
xchg
mov
arpl
repnz
push
lret
cmc
cld
inc
push
xchg
jno
jnp
icebp
shlb
scas
push
hlt
dec
xor
xor
mov
lock
fidivrs
jb
sbb
or
lods
lret
incl
frstor
fldt
scas
mov
mov
out
cmc
jnp
cmp
dec
fcoml
push
mov
repz
repnz
cli
cmp
or
cmc
repz
mov
mov
lods
add
cmp
jae
outsb
mov
insb
dec
jmp
jae
hlt
sub
popa
insl
hlt
xor
pop
ficomps
int3
lods
loope
insb
mov
xor
cmc
jo
and
mov
cli
jl
jnp
mov
scas
sub
push
in
inc
lcall
repnz
jb
dec
imul
bound
mov
xchg
hlt
lods
in
dec
lods
insb
inc
xor
mov
popa
lods
jne
popl
mov
pop
cs
out
jae,pn
div
jno
jge
jo
popf
cli
sbb
inc
xor
cmc
mov
scas
dec
fs
div
outsl
cmpsl
sub
out
outsb
jle
lret
mov
adc
fs
into
xchg
pop
dec
out
jp
dec
fs
dec
scas
jmp
mov
outsb
dec
cmp
cmp
jne
and
pop
jle
add
jnp
or
imulb
stos
add
std
dec
xlat
inc
push
shll
adc
xor
pushf
aaa
dec
lret
pop
mov
jno
adc
inc
jl
je
mov
fwait
jns
inc
lcall
jne
aam
fcompl
data16
add
loopne
mov
fcomps
stos
jb
cli
push
es
mov
mov
stos
ljmp
push
fadds
or
sub
push
js
das
jo
daa
push
mov
mov
mov
ds
stc
mov
imul
push
sub
insl
cmp
mov
jge
test
adc
mov
lahf
jecxz
jno
sbb
mov
cwtl
fimuls
fcomps
int
frstor
in
sti
test
pop
out
and
fmull
icebp
imul
insb
outsl
insb
inc
lods
arpl
jp
mov
xor
mov
mov
aaa
adc
js
sahf
sub
ja
add
in
dec
pop
sahf
jg
mov
repnz
fdivrl
cmpsl
sub
pop
push
pop
cmp
fmuls
cmp
in
jbe
imul
dec
in
push
pop
jp
mov
dec
iret
lods
je
xchg
cmp
push
xor
cmc
out
jle
sub
enter
push
inc
lret
add
ret
mov
mov
dec
jb
push
repz
aaa
inc
ss
jge
scas
cli
mov
div
movl
cmc
inc
inc
xchg
jge
mov
insb
cld
in
jo
rolb
aas
jbe
xor
test
jge
movsb
fsubrl
inc
insb
jbe
cwtl
dec
nop
or
adc
aas
adc
std
cmp
and
jnp
jnp
push
insb
mov
dec
add
sub
inc
sub
stos
jl
dec
stos
iret
cli
and
push
popf
test
fs
shll
dec
js
in
lret
or
pop
mov
ja
sub
pop
loopne
jp
dec
int
jb
popa
mov
and
js
insb
cli
data16
jbe
pop
dec
xor
scas
inc
pop
jne
arpl
mov
jno
int
jo
pop
pushf
dec
dec
arpl
pop
dec
ret
ja
gs
sbb
dec
mov
imul
rorl
inc
xor
pop
xchg
pop
dec
js
gs
mov
jns
mov
pop
cld
pusha
insl
inc
push
mov
push
inc
iret
xchg
dec
mov
inc
rcrb
sbb
push
dec
ljmp
mov
push
aad
inc
xchg
repnz
popa
lods
adc
push
pusha
fmull
sub
sti
dec
test
jp
xor
cmp
call
pusha
inc
sti
subb
push
pop
mov
push
mov
jae
sub
inc
out
sub
insl
stos
sahf
push
imul
adc
into
stos
xchg
enter
addr16
sbb
add
std
xchg
shrb
jmp
mov
inc
inc
stos
outsl
mov
stos
sbb
mov
icebp
aam
or
js
cmp
subl
or
inc
ds
int
sahf
insb
int3
les
insl
outsl
push
push
scas
mov
jbe
das
jne
insb
outsb
pushl
mov
outsl
mov
pop
mov
cmc
jle
addr16
imul
cmpl
js
adc
shrl
loop
jns
cmpl
pop
sbb
imul
jle
sub
dec
inc
sbb
loopne
imul
jo
jae
inc
xorb
jno
data16
dec
mov
pop
lods
aad
sbb
pop
jnp
loop
es
imul
jl
mov
mov
inc
out
xchg
jl
mov
xchg
jnp
sbb
jl
rcll
lock
mov
mov
inc
out
xchg
jl
mov
xchg
jnp
sbb
jl
dec
imul
repnz
jnp
js
mov
jl
mov
push
mov
jl
mov
insb
jp
scas
mov
out
ss
jl
mov
repnz
mov
jl
mov
repnz
out
sub
insl
ret
imul
mov
jl
mov
push
mov
jl
mov
jnp
mov
hlt
out
cmp
jl
mov
repnz
into
out
adc
jl
mov
repnz
jnp
movsl
mov
scas
sub
ljmp
cmp
jl
mov
dec
jae
jl
mov
repnz
jnp
fmull
jl
dec
sub
mov
idivb
mov
xorb
pop
mov
lea
adc
push
out
lcall
repnz
jb
les
jno
mov
divl
jl
mov
dec
jae
jl
mov
fimuls
jnp
add
repnz
clc
cmp
jg
xorb
or
rclb
mov
pushf
jae
jl
mov
test
xor
mov
stc
jae
jl
mov
dec
mov
jl
mov
addr16
stos
test
je
mov
cli
bnd
test
jl
mov
repnz
sahf
mov
out
and
lds
xor
jne
mov
inc
jae
jl
mov
dec
mov
inc
pusha
jb
inc
outsb
lods
out
mov
jae
cli
in
movsb
xor
lods
inc
or
mov
or
or
mov
mov
sbb
inc
cmp
js
jns
lea
dec
sbbb
sbb
lock
pop
cltd
pop
inc
sbb
dec
add
pushf
or
test
or
sbb
loop
mov
push
loop
sahf
icebp
mov
fsubp
std
pop
icebp
sti
cmpsb
dec
dec
pop
jns
cmp
fisttps
jb
mov
lock
test
cmpsb
or
outsb
repnz
cmpsb
mov
outsb
je
out
ja
lds
loop
sti
push
dec
add
xchg
loop
jp
or
sti
dec
jecxz
mov
dec
jecxz
ss
xor
cli
xchg
jo
mov
xchg
shl
outsb
stos
and
cmp
arpl
inc
test
in
inc
es
cmp
pop
jno
jns
cmp
mov
sub
push
pop
cmc
call
pop
ja
jns
cmp
mov
cli
lods
push
cmp
sti
ljmp
ja
push
or
imulb
dec
jmp
xor
xor
cli
subb
lods
loop
sub
loop
in
icebp
mov
loop,pn
scas
icebp
mov
out
loop
das
icebp
scas
or
and
dec
jo
dec
fwait
mov
js
or
adc
icebp
mov
xor
pop
mov
or
or
in
dec
xorl
dec
xlat
mov
loop
icebp
mov
jne
cs
icebp
mov
ss
jbe
mov
mul
and
icebp
mov
mov
lcall
and
mov
pop
lea
dec
jmp
or
xchg
xchg
jge
xor
cli
into
stc
icebp
mov
cmp
inc
or
jp
icebp
mov
inc
cli
dec
sub
or
aam
mov
cli
btc
mov
sti
arpl
pop
xor
lea
dec
insb
cld
or
adc
xor
mov
mov
cmp
pop
jb
jns
lea
dec
lods
mov
ds
cs
cli
aas
icebp
mov
jg
and
mov
pop
lea
dec
in
inc
or
xchg
xchg
jle
xor
cli
iret
shl
mov
or
inc
pop
repnz
dec
sub
xchg
mov
cli
adc
arpl
pop
xor
fisttpl
insl
ret
or
push
xchg
incb
xor
mov
test
test
add
hlt
test
xor
mov
push
arpl
inc
cmpb
pop
imul
dec
xchg
pop
or
je
dec
adc
or
in
dec
or
mov
mov
enter
icebp
mov
mov
mov
dec
loop
lret
rorl
loop
mov
mov
lret
in
or
mov
mov
or
sbb
or
xchg
dec
or
into
icebp
mov
psrad
icebp
mov
iret
loop
adc
mov
nop
loop
shl
mov
push
loop
xchg
icebp
mov
adc
rclb
mov
xchg
arpl
cmp
pop
cmc
adc
lea
dec
xor
ljmp
insb
jg
insb
inc
xchg
scas
imul
jo
sti
fnsave
scas
je
cli
push
ss
stos
inc
sub
sub
mov
push
sub
nop
jne
ss
push
lods
lock
inc
js
enter
jno
inc
mov
aaa
insl
das
or
push
test
iret
je
push
jb
push
mov
mov
dec
pop
jo
je
push
jnp
jbe
lea
mov
dec
ja
insb
je
mov
mov
aas
gs
aad
pop
nop
mov
mov
cmp
bnd
imul
jle
xor
xor
xor
outsl
mov
dec
mov
out
dec
mov
fdivl
mov
cld
push
jo
jle
pop
notb
cmp
je
dec
inc
mov
jo
jle
mov
dec
pop
jo
jle
pop
dec
stc
cmpsb
js
jo
shll
insl
jo
pop
mov
loope
push
pop
pop
repnz
hlt
jo
add
data16
xor
or
jo
mov
je
int
out
pop
inc
and
cmp
push
jae
jp
jno
pop
sti
or
pop
sbb
repnz
je
sbb
mov
fdivl
daa
dec
repnz
mov
xor
addr16
dec
arpl
jns
sti
dec
dec
fdivrl
sub
imul
sub
mov
scas
pop
mov
mov
imul
dec
inc
outsl
mov
dec
dec
mov
inc
lret
out
mov
je
jno
or
sbb
jne
in
xor
cmpsb
jne
jo
mov
insl
int
in
pop
dec
arpl
in
arpl
push
mov
jl
out
xor
xor
ret
icebp
xor
mov
mov
cmp
mov
stos
mov
cs
outsl
mov
mov
jb
mov
xor
add
jae
clc
pop
loop
stos
aaa
pop
jns
sti
mov
dec
cmp
xor
cmpsb
jns
jo
mov
jno
int
xor
push
lret
ret
xor
pop
jbe
imul
sti
or
push
cmp
mov
jle
repz
dec
or
push
mov
jge
js
cmp
mov
pop
jns
xor
leave
sti
dec
repnz
aas
xor
cmp
andl
or
mov
scas
lcall
jl
repnz
jp
jge
cmp
mov
je
jle
hlt
dec
jne
dec
jnp
hlt
pshufw
fwait
dec
int3
nop
fidivrl
je
std
jp
ja
data16
add
ja
inc
pop
mov
jg
dec
jnp
mov
cmp
mov
arpl
jo
test
scas
jno
dec
jb
cmp
aaa
jns
int
je
int
inc
mov
arpl
jbe
test
mov
lea
scas
push
inc
cmp
push
sti
lea
pop
jo
mov
dec
stos
je
pop
ljmp
xchg
ljmp
rcrl
pop
mov
mov
repnz
inc
mov
insb
rorb
imul
jo
push
jnp
jne
xor
mov
mov
pop
jl
sub
gs
jo
sbb
dec
jno
or
jle
fisttpl
add
xor
cmp
mov
mov
xor
push
xor
push
ss
xor
scas
push
repz
jp
dec
pop
mov
push
mov
arpl
repnz
cmp
jne
jl
mov
dec
sti
into
negb
mov
push
jno
or
popa
pop
pop
push
jo
jnp
outsb
mov
add
into
jae
jl
mov
bound
dec
imul
mov
repnz
mov
jae
jl
mov
repnz
cltd
mov
out
and
jl
mov
outsb
sub
mov
mov
out
jge
cmpb
repnz
jnp
rcrb
sbb
sbb
pop
inc
cmp
xor
xor
push
adc
addr16
pushf
mov
jo
jno
hlt
inc
repz
andl
inc
rorl
pop
sub
inc
fcomp
arpl
loop
xchg
fwait
ja
dec
repz
mov
sbb
loop
jl
push
inc
adc
pop
mov
imul
push
inc
or
jge
inc
fdivr
inc
add
popa
jne
movb
pop
xor
andl
xchg
inc
cli
int3
es
enter
inc
ds
gs
or
mov
popa
rorl
dec
cs
dec
fcomps
mov
jmp
push
pop
inc
pcmpgtw
scas
pop
dec
aam
addr16
lahf
ret
xor
inc
xor
inc
ds
imul
pop
inc
or
insl
repz
xor
inc
adc
push
out
mov
imul
aad
jge
xchg
stos
xchg
dec
pushf
aaa
mov
pop
pop
sub
xchg
dec
jns
xor
jae
inc
or
rcrl
decl
aam
jns
xchg
jge
push
nop
dec
add
inc
push
rorb
fsubl
or
imul
inc
sbb
jg
inc
pop
hlt
xor
or
lahf
lods
js
jnp
sti
sub
ljmp
adc
pop
xor
pop
ret
mov
or
insb
push
int
sbb
cli
mov
sti
insl
std
pop
jb
lods
lods
inc
jmp
cmp
outsl
push
scas
lock
or
cmp
dec
xor
or
jp
xor
aaa
or
repnz
mov
enter
shll
push
js
jnp
sub
lods
xchg
inc
shrl
outsb
add
cmpsb
leave
fsubrs
scas
xchg
int3
push
pop
sbbl
pop
fsubl
jns
loopne
popa
scas
loop
and
sbb
adc
std
arpl
lret
in
sbb
outsl
in
mov
data16
cmpsb
icebp
mov
and
pusha
inc
dec
js
cmp
push
outsb
pop
push
dec
push
lret
mov
or
dec
imul
jecxz
ljmp
jb
mov
stos
aas
fldcw
push
jne
push
mov
push
cltd
imul
jae
push
xor
pop
and
add
push
lds
fiadds
pop
push
aaa
scas
pop
rclb
aas
or
jb
dec
imul
lret
jnp
in
xchg
inc
add
nop
mov
pop
xchg
xor
pop
stos
test
jg
imul
lods
lods
lcall
outsl
mov
jae
jne
mov
jnp
jl
jge
jg
inc
jnp
dec
mov
push
jae
jl
mov
fs
push
lcall
outsb
pop
push
repnz
jnp
ja
mov
lods
jge
inc
jl
mov
dec
jnp
push
mov
pop
jae
jl
mov
gs
imul
lods
jb
jne
js
sahf
bnd
jle
mov
inc
jae
jl
mov
push
imul
jnp
addr16
insl
rorb
sahf
bnd
jle
mov
inc
jae
jl
mov
push
jnp
pop
mov
data16
in
lods
ja
inc
jl
mov
jnp
pop
mov
insb
push
sbb
repnz
jnp
push
mov
repnz
xchg
imul
mov
jnp
pop
mov
repnz
shrl
jl
mov
dec
jnp
pop
mov
repnz
adc
je
jnp
inc
repnz
jnp
push
mov
popa
jae
jnp
push
insb
jae
jns
jg
inc
dec
mov
push
jae
jl
mov
outsl
xchg
cmpsb
repnz
jnp
inc
inc
mov
push
jae
jl
mov
bound
push
outsb
out
jno
dec
pusha
lea
mov
out
jle
inc
jl
mov
dec
jnp
push
mov
push
jae
jl
mov
bound
push
cwtl
repnz
lods
je
ja
mov
inc
jae
jl
mov
dec
jnp
push
mov
pop
jae
jl
mov
fs
pop
lods
jo
jae
jbe
jns
mov
inc
jae
jl
mov
dec
jnp
push
mov
pop
jae
jl
lea
mov
jnp
push
mov
cmc
insb
aad
jno
js
jg
mov
push
jae
jl
mov
jo
bnd
jle
mov
jae
jl
mov
outsl
push
bnd
jge
mov
inc
jae
jl
mov
dec
lea
bound
inc
pop
mov
test
inc
cmpsb
and
arpl
ret
inc
lahf
ret
and
gs
ds
dec
xorb
xor
push
inc
xor
js
bound
xchg
or
jmp
icebp
push
push
lods
mov
hlt
add
icebp
dec
and
stos
pop
push
or
ljmp
mov
cmp
pop
and
mov
jg
mov
lods
sahf
scas
adc
or
cld
inc
gs
jnp
sarl
clc
subb
mov
ds
cli
ss
jbe
jnp
and
inc
stos
sbb
mov
push
ret
jae
jge
mov
fisubrl
scas
jb
xor
add
inc
rorb
pushw
pop
stos
cmpl
xor
add
jo
aas
mov
dec
push
cwtl
pop
xchg
inc
imul
jp
sub
sub
gs
movsl
xor
jno
das
stos
lods
add
test
jle
push
add
or
cmpsl
mov
jnp
outsb
jge
js
sub
adcb
decb
xor
jge
int
jle
inc
xchg
repnz
stos
incl
sti
dec
pop
mov
pop
jl
inc
jnp
js
push
dec
and
into
mov
imul
inc
lea
mov
sub
xchg
jae
sarb
xchg
dec
xor
push
or
cmpb
jg
inc
jnp
mov
ds
inc
add
or
cld
mov
inc
jge
push
int
dec
dec
dec
xchg
sub
inc
add
jge
jae
push
insl
inc
cmp
sarl
lds
push
insb
mov
sbb
push
inc
es
incb
int
mov
jb
jge
aad
mov
xchg
movsb
inc
repnz
dec
je
inc
sub
std
popa
outsb
test
mov
jge
dec
pushf
mov
dec
stos
xchg
jl
test
add
std
sbb
aaa
hlt
cmp
mov
std
inc
ja
dec
jnp
insl
cli
cmp
jo
js
inc
jb
outsl
jg
sub
insb
scas
cmp
insb
sbb
push
jge
cli
insl
lds
fimuls
shr
lea
pushl
outsl
pop
cli
mov
inc
pushl
mov
addr16
mov
daa
or
insb
in
shrb
xor
push
mov
dec
insl
dec
cli
mov
xor
test
mov
outsb
jo
cli
shrl
cmpsb
loop
sbb
push
icebp
xor
insb
test
pop
jl
mov
shrl
push
aas
mov
jg
pop
cmpsb
mov
icebp
inc
mov
jo
xor
cli
scas
insb
xor
mov
pop
jnp
aas
mov
int
jo
js
lret
jnp
outsl
jnp
mov
and
pop
mov
xor
movsl
mov
xchg
outsl
bound
jo
in
outsb
mov
fdivrl
fistl
jge
jno
cli
call
in
scas
mov
dec
aas
mov
arpl
push
xor
or
inc
cs
jne
cmp
mov
sub
sahf
cltd
js,pn
cmp
cmp
pop
cmp
cmp
fs
cmp
cmp
mov
pop
jnp
arpl
xor
jnp
pop
jnp
test
jnp
loopne
cmp
mov
jae
pop
andnps
mov
jae
pop
sqrtps
mov
jae
pop
cmovge
mov
jae
pop
cmovns
xchg
gs
pop
cmovbe
mov
jae
pop
adc
je
rorl
cmp
mov
aas
mov
add
jo
cli
mov
aas
mov
test
insl
clc
mov
jnp
or
cmp
mov
test
insl
inc
or
cmp
jnp
js
movsb
in
outsb
aas
mov
push
push
js
inc
or
cmp
jnp
js
adc
mov
inc
jg
outsb
sub
mov
dec
or
aas
push
loope
icebp
jns
pusha
xchg
push
es
sub
push
or
mov
jns
push
daa
dec
dec
dec
sub
push
or
out
push
test
mov
std
out
shll
mov
int
pop
shrb
jnp
cmp
fnstsw
data16
icebp
mov
mov
dec
mov
mov
ja
jecxz
sarl
imul
aas
mov
popa
cli
lea
cli
add
cli
inc
fistpll
dec
cli
test
jno
push
sbb
sahf
cltd
js,pn
cmp
cmp
pop
cmp
sti
cmp
fs
cmp
cmp
mov
pop
jnp
arpl
xor
jnp
pop
jnp
test
jnp
adc
push
and
cli
int
cmp
jnp
aas
mov
mov
pop
js
in
repnz
push
add
imul
ja
vprotw
fsubr
inc
fnsave
je
sub
repz
jl
xchg
ja
mov
bound
jbe
insl
mov
dec
mov
aaa
sbb
pop
scas
mov
jbe
test
pop
mov
outsb
movsb
cs
gs
imulb
jnp
js
fsubrl
or
imul
push
inc
outsb
jnp
mov
mov
test
stc
cmp
pushf
imul
jge
outsl
scas
divl
ja
mov
sti
stos
stos
aad
inc
outsb
aaa
push
mov
jle
mov
cmp
pushl
xor
outsl
adc
or
gs
movd
jb
jne
nop
push
dec
js
cli
icebp
cmp
lods
pop
test
outsb
xor
arpl
rorl
adc
mull
adc
test
insl
outsb
aaa
out
icebp
cmp
pop
cmp
mov
stc
cmp
pop
mulb
aaa
stc
inc
add
inc
dec
outsl
jbe
mov
pop
outsl
pop
cmp
jno
cmp
insl
add
mov
mov
sti
pop
or
jp
jnp
dec
mov
jne
mov
aaa
xlat
outsb
cli
notb
inc
fdivrl
mov
jae
push
and
mov
dec
lahf
push
sti
outsb
fdivrl
jg
jbe
jg
outsl
int3
imull
ja
inc
inc
xchg
push
les
pop
mov
push
movsb
add
ja
in
outsb
ja
pop
test
jb
cmp
arpl
mov
outsb
lds
outsb
out
mov
mov
mov
jle
test
jb
mov
dec
mov
sti
stc
cmp
pop
jnp
mov
sub
loopne
push
push
jo
cmp
xor
mov
mov
sti
xor
sti
arpl
jnp
mov
mov
jbe
outsl
dec
ja
ja
arpl
dec
aaa
push
mov
negb
adc
mov
cmp
stc
pushl
ja
cmp
popa
adc
jnp
popa
sbb
mov
mov
nop
inc
mov
dec
test
sub
dec
jbe
mov
jbe
mov
es
xor
jp
fdivrl
fdivr
cmp
fdivrl
outsb
mov
ja
mov
mov
outsb
xor
arpl
mul
idiv
lea
jnp
ljmp
adc
dec
sti
push
mov
cmp
jnp
and
fiadds
inc
xor
arpl
dec
cmp
xchg
insb
outsb
mov
arpl
dec
jbe
mov
out
testl
dec
cmp
mov
idiv
lea
mov
mov
xor
mov
pop
ret
push
dec
add
mov
out
stc
cmp
pop
mov
xchg
outsb
fdivrs
mov
push
into
cmp
push
or
aaa
fisttpll
in
cli
insl
pop
mov
imulb
mov
arpl
call
dec
sarb
pop
jnp
in
jb
aaa
arpl
dec
mov
mov
negb
popf
push
out
jnp
inc
dec
jnp
sahf
mov
mov
mov
dec
jnp
jnp
mov
jnp
cmp
pop
jnp
jnp
xor
jnp
jnp
fsqrt
ficoms
xor
push
sbb
cmp
push
cli
jb
mov
mov
sti
arpl
mov
stc
movsb
xor
mov
xor
jbe
jno
ja
ja
pop
aaa
call
mov
cmp
dec
jne
mov
pushl
testb
xor
arpl
mov
stc
cmp
pop
imul
popf
jae
js
cli
icebp
cmp
cs
arpl
jns
lret
lods
cli
mov
jo
fucomip
aam
outsl
dec
jl
addr16
add
mov
jle
xor
mov
jl
xor
inc
in
push
inc
mov
mov
ds
pop
ret
inc
sbb
out
je
std
call
mov
addr16
xchg
mov
outsl
inc
sub
sub
mov
ja
dec
sahf
jbe
xchg
mov
ret
jb
mov
or
sbb
jl
push
add
hlt
movsl
lahf
pop
jb
js
adc
mov
jb
jg
insl
mov
mov
jno
cmp
lds
clc
sbb
push
xchg
js
mov
ret
cli
pop
shll
sti
inc
sbb
addl
lods
or
ja
insl
imul
outsl
lods
loopne
lods
scas
inc
jg
lret
pop
cmp
lret
push
xchg
add
dec
lock
ficoml
jns
jmp
aas
inc
lret
and
sbb
jle
arpl
cmp
pushf
lods
ja
pop
jle
pop
jbe
mov
sbb
push
lea
mov
dec
sahf
jl
jg
dec
jl
pop
dec
push
ja
pop
dec
dec
test
outsl
sub
bnd
add
pop
inc
sbbl
testb
cmp
gs
sar
cmpsb
jae
mov
ja
pop
dec
ja
call
lds
jnp
mov
pop
dec
dec
out
push
dec
repz
and
cmp
pop
mov
jle
pop
fdivl
mov
sbb
nop
outsl
pusha
bound
inc
jno
push
scas
lods
add
testb
rclb
mov
addr16
mov
push
push
jo
daa
dec
xchg
pop
push
cmp
pop
out
iret
jge
jecxz
inc
push
mov
jne
ficompl
leave
in
sarl
push
cmp
pop
insl
xchg
mov
push
lods
adc
pop
sarl
fmull
outsb
dec
jo
loopne
xorl
bound
std
pushl
int
jnp
nop
jl
lock
pop
inc
mov
dec
scas
pop
fwait
int3
je
xchg
xor
outsl
cmp
das
push
cld
jge
dec
arpl
jns
scas
arpl
in
mov
inc
inc
mov
jge
xchg
push
push
stos
jno
mov
push
jl
jl
jne
adc
cltd
movl
jg
push
ss
mov
inc
lea
loop
stc
jnp
add
jbe
scas
outsb
mov
pop
jbe
dec
loope
test
pop
push
aas
push
jo
mov
inc
sti
inc
dec
inc
inc
jb
push
das
call
stos
jp
ret
addr16
stos
jb
add
inc
imul
sub
decl
inc
stos
xchg
sub
dec
or
movsl
call
pushf
adcb
pop
in
lcall
xchg
jne
shrl
pop
insl
insb
mov
fsubl
xlat
jl
pop
adc
jne
inc
fs
cltd
jns
ret
imul
cmpb
inc
push
decl
js
jns
decl
fs
negl
jo
ljmp
or
movsl
ljmp
push
adc
dec
mov
jns
mov
pop
lret
jno
out
jbe
cmp
inc
stc
mov
xor
push
mov
push
fmuls
cld
sarl
jecxz
movl
pushf
aad
addr16
addl
test
pop
mov
add
jb
ret
icebp
inc
jb
sbb
cmpsb
shlb
push
inc
push
sub
xlat
jmp
gs
push
jnp
dec
bound
in
ljmp
xchg
and
das
insb
out
loopne
mov
pop
mov
jo
cld
dec
lret
inc
xchg
or
add
or
xchg
sub
pop
add
mov
mov
out
adc
sub
fiadds
xchg
shrb
std
repnz
push
xchg
mov
fsubrl
js
adc
adc
sub
stc
stos
loopne
jo
rorl
adc
pop
lcall
call
imul
and
shll
testb
dec
fcom
adc
lods
add
movups
aas
dec
fsub
pop
shr
addl
sub
cmp
out
dec
sbb
jg
sub
je
outsl
mov
fdivrl
movsb
add
cmp
adc
outsb
xchg
insl
dec
cmp
call
jae
jnp
js
fs
imulb
mov
notb
mov
jmp
xchg
lods
addl
inc
mov
push
notb
cmp
mov
arpl
xchg
outsl
push
fucomip
mov
dec
push
js
cli
add
push
aad
loope
sub
fcomps
jo
in
orb
int
fstpt
mov
add
ret
jg
pop
add
dec
sbb
data16
scas
insl
dec
pop
dec
ljmp
movsb
inc
mov
fisubrs
xor
sbb
sub
dec
xlat
insb
jb
push
cmpl
jg
inc
mov
dec
scas
jnp
inc
sti
negl
mov
push
jns
fildl
in
fs
jp
dec
cmc
mov
lret
push
lret
sub
outsb
add
dec
jno
xchg
outsb
dec
ljmp
pop
popa
out
mov
repz
iret
push
je
cmp
mov
ficoml
andb
add
lods
ljmp
mov
jb
cmp
ljmp
movsb
xor
xor
clc
jb
add
insl
ja
dec
mov
jg
mov
xorb
rorl
push
leave
lret
sub
std
xchg
add
pop
jg
dec
ss
pop
mov
jp
iret
xchg
inc
push
rorb
aad
js
mov
mov
nop
inc
fmull
js
jmp
sub
inc
dec
addl
andb
cmp
xchg
dec
incl
cmp
in
std
sub
faddl
and
inc
scas
dec
sarb
out
fwait
dec
insb
jb
outsl
dec
out
ret
ret
add
insl
testb
cli
shl
dec
dec
jnp
ret
add
inc
idivb
pop
rorb
push
jbe
push
jae
js
cmp
mov
outsb
push
mov
cli
pop
ljmp
aaa
mov
cmp
xor
mov
mov
mov
cs
or
cmp
mov
inc
imul
dec
ja
inc
bound
jno
fwait
dec
xchg
popa
ss
or
inc
mov
fidivs
inc
pop
pop
mov
push
out
adc
pop
adc
xor
mov
dec
pusha
mov
cmp
jno
push
inc
inc
mov
xchg
adc
xor
xchg
arpl
lock
stos
jg
mov
pop
xchg
mov
mov
fs
aam
mov
js
int3
jmp
dec
sbb
pop
dec
test
push
inc
jae
inc
add
cmp
jnp
inc
mov
shlb
leave
or
dec
movsb
into
test
aad
fcomp
inc
inc
cmpsl
outsl
mov
mov
ds
mov
pextrw
dec
repnz
mov
gs
out
pop
lods
ret
js
cmc
aaa
inc
mov
lret
fidivs
movsb
ljmp
imul
stos
or
mov
and
mov
mov
pop
mov
or
dec
cmpsl
notb
in
inc
or
xchg
inc
mov
idivb
push
jp
scas
jl
mov
xor
scas
jb
mov
jg
inc
mov
mov
pop
ja
stos
dec
dec
cmpsb
xchg
jb
fucomp
divl
iret
addr16
jae
movsl
lods
call
in
inc
insl
ljmp
shll
jbe
or
insl
cs
inc
ja
pop
in
jb
sub
sub
pushl
pop
cmc
dec
add
cld
push
push
pop
sti
mov
js
std
mov
push
sbb
loopne
push
lock
fidivl
jns
outsb
jnp
add
clc
out
mov
jmp
inc
xor
push
rclb
cmp
fsubr
arpl
xchg
test
vdivsd
lret
in
mov
lea
loop
stc
aam
mov
xorl
mov
dec
ja
div
inc
cmp
jbe
jo
js
test
rcrb
fnsetpm(287
notb
pushf
leave
jg
pusha
mov
jge
dec
inc
nop
insb
shlb
inc
pcmpeqd
xchg
jne
movsl
cmpsb
ljmp
clc
lods
inc
push
popa
je
insl
adc
sub
add
ljmp
ret
xchg
cmp
push
in
lods
std
mov
dec
clc
jno
cld
ljmp
mov
iret
shrl
lods
into
fadds
out
addl
push
addr16
add
rcrb
sub
bound
jnp
ljmp
dec
add
fimuls
mov
jo,pt
pcmpgtb
aaa
push
inc
mov
xorb
jne
or
clc
xor
push
pop
ljmp
scas
mov
push
pop
ret
dec
das
jbe
subb
xchg
inc
jmp
push
fstl
std
sbb
or
pop
jns
vpshufhw
and
push
loop
je
add
mov
dec
jae
lods
popa
dec
outsl
mov
jmp
imul
or
mov
add
mov
push
bound
ret
mov
mov
movb
xlat
fsubl
jp
jb
jp
outsl
jg
xchg
in
inc
jne
push
xchg
push
cli
dec
ds
push
rclb
inc
gs
xchg
inc
cli
add
mov
push
repz
rorb
outsw
test
outsl
mov
inc
inc
js
fidivrs
cli
in
mov
shr
dec
jno
jle
add
aaa
jne
lret
jbe
cld
dec
idivb
or
or
cli
imul
pop
ja
arpl
adc
sti
out
inc
jne
outsb
cwtl
push
inc
inc
jbe
fistpll
jl
outsb
push
push
fs
xchg
jnp
cmp
int
aas
mov
cli
add
imul
repz
jne
jge
out
pop
cltd
aas
cmp
enter
jb
mov
ret
mov
in
sbbb
inc
js
into
add
lret
jbe
mov
inc
out
cmp
bound
inc
call
fadds
jno
inc
scas
jae
test
stos
jnp
sub
enter
or
decl
push
sub
mov
sub
rorb
push
jns
xor
jbe
adc
aas
test
roll
mov
jecxz
adc
ljmp
sub
outsb
jge
push
xchg
cmp
adc
test
jb
scas
sarb
in
xchg
adc
aas
les
out
dec
add
adc
divb
jg
inc
mov
xchg
or
ret
jecxz
add
mov
mov
mov
mov
gs
mov
mov
inc
dec
jg
jno
or
fidivrl
xchg
daa
jo
dec
xchg
xchg
dec
leave
mov
jo
inc
adc
push
clc
imulb
add
test
mov
cmpsb
cmp
mov
dec
jge
sub
sbb
sahf
mov
cmp
cmpb
aam
push
dec
std
add
mov
sar
int3
vmulps
jmp
loop
dec
iret
mov
jno
je
inc
rep
cmc
faddl
pop
pop
mov
jmp
pushl
fs
jle
dec
mov
pop
xchg
fnstsw
cltd
push
int3
addl
insb
mov
bound
push
or
addr16
cmp
fldt
ret
add
jbe
ja
sub
dec
pop
aaa
fdivrl
insl
inc
ds
jle
stos
fsub
in
outsb
mov
outsb
jle
sahf
insb
sbb
pop
outsb
out
bound
pop
out
pusha
insl
mov
arpl
data16
insl
ficomps
mov
or
dec
stos
push
push
js
ljmp
js
je
mov
mov
inc
jae
dec
dec
jecxz
std
scas
xor
mov
jae
mov
jl
mov
pop
lea
push
push
cli
pop
rorl
pop
jl
cmpb
xchg
pusha
dec
mov
or
cmp
push
cli
mov
mov
mov
jae
mov
pop
std
imul
pusha
dec
mov
ss
addl
mov
inc
decb
out
out
jnp
inc
or
mov
dec
dec
or
inc
std
jl
movl
jl
jnp
mov
mov
mov
and
dec
jnp
jne
mov
pop
mov
xchg
pusha
dec
mov
cmp
imul
mov
orb
mov
dec
sub
jl
mov
cmp
inc
cli
mov
fs
cli
sbbl
gs
mov
mov
dec
mov
jge
jno
mov
data16
mov
rorb
dec
jae
mov
inc
ljmp
bound
inc
mov
sub
jl
dec
jl
adc
mov
mov
push
push
mov
dec
insb
dec
gs
mov
jae
push
cli
mov
push
pop
cli
dec
jle
mov
push
repnz
test
jnp
arpl
xorl
cmp
lods
jl
dec
mov
xchg
dec
scas
lods
jae
or
inc
cli
stos
pop
enter
fucomi
jnp
insb
or
test
push
orb
fs
cmpsl
jae
cmp
pop
cli
movsl
pop
inc
dec
pop
movsb
mov
mov
push
mov
or
mov
in
pop
mov
mov
lahf
lds
cmp
jl
cli
popf
pop
inc
dec
js
pushf
mov
fwait
sub
lcall
cltd
jne
dec
push
jne
mov
xchg
add
pusha
mov
xchg
xorl
mov
inc
inc
jl
cli
xchg
pop
add
gs
mov
xchg
sub
xchg
out
jnp
dec
or
nop
jne
mov
xchg
push
inc
mov
dec
mov
gs
test
jnp
push
or
mov
js
popf
inc
pop
push
dec
jne
pop
lahf
aad
jnp
jbe
inc
sahf
jne
mov
pop
sahf
xorb
aad
jno
xor
mov
mov
cmp
pushf
dec
je
mov
fsubl
bound
dec
int3
fwait
jl
hlt
mov
mov
imul
cli
lcall
cli
mov
movsb
push
sahf
cltd
cmpl
mov
fs
mov
movsl
jne
mov
dec
pop
xchg
xor
data16
cmpsb
jl
xchg
dec
arpl
mov
cmpsl
sub
pusha
xchg
out
jnp
dec
or
test
sbb
xor
pusha
mov
test
cmp
pop
loop
mov
mov
pop
in
pop
stos
sbb
pop
mov
xchg
jb
pop
cmp
push
cli
nop
pop
xor
lods
mov
sub
scas
out
jnp
push
or
mov
mov
scas
sbb
push
mov
jno
push
cmp
dec
xchg
dec
dec
mov
xor
cmp
mov
mov
cmp
mov
jnp
dec
or
mov
mov
pop
mov
dec
mov
mov
jo
push
cmp
inc
cli
mov
pop
gs
mov
inc
mov
cmp
mov
jnp
inc
or
xchg
mov
pop
mov
fucomi
inc
mov
test
outsl
jae
cmp
jg
cli
test
fs
jge
movl
jle
out
cwtl
jl
out
jnp
dec
adc
jae
cmp
jns
cli
sbbl
mov
sub
mov
or
mov
in
pop
mov
mov
mov
fs
cli
mov
gs
jb
mov
jp
cmc
ja
insl
jns
cli
dec
jnp
inc
out
mov
pop
dec
js
cmp
mov
popl
outsl
pusha
gs
jo
dec
int
jnp
insl
or
mov
in
pop
test
dec
mov
cmp
imul
inc
mov
xchg
xchg
mov
in
repnz
sub
cmpsl
in
push
out
inc
mov
mov
cld
dec
cli
mov
push
mov
mov
jge
dec
mov
mov
cmp
inc
inc
add
jb
iret
pusha
jnp
push
xchg
jl
mov
mov
push
cmp
mov
mov
push
mov
jnp
cmp
push
or
jne
mov
jl
dec
adc
push
mov
and
pop
mov
lods
jns
push
cmp
pop
cli
nop
pop
adc
gs
mov
lods
sub
jl
xchg
out
jnp
push
or
xchg
jne
push
mov
pop
xchg
andb
dec
mov
stos
clc
jae
cmp
dec
cli
xchg
loope
cmp
out
jnp
inc
or
jbe
mov
xchg
inc
jecxz
andb
inc
cwtl
out
jnp
jle
adc
dec
cmp
jp
cli
xchg
pop
adc
inc
cli
lcall
test
in
repnz
dec
fwait
out
jnp
jb
adcl
in
pop
pushf
andb
div
jp
mov
popf
gs
outsb
gs
mov
mov
data16
cmpsb
dec
xorb
add
bound
xchg
xchg
dec
mov
outsb
inc
jecxz
mov
pop
mov
jo
out
cwtl
jl
out
pop
xchg
dec
dec
cwtl
adc
jg
mov
inc
cmpsb
cld
push
jl
inc
movsb
mov
mov
push
cltd
iret
dec
jnp
jge
inc
movsb
jne
mov
pop
mov
mov
movsl
addr16
cmp
jnp
cli
cmpsb
pop
cmpsl
dec
inc
mov
jl
cmpsl
sub
pop
fwait
adc
jns
dec
test
sub
cmp
jp
cli
test
gs
mov
jl
daa
mov
dec
outsl
popf
dec
jne
jb
jl
stos
inc
call
jnp
jne
mov
dec
ss
lods
mov
stos
imul
lods
jl
imul
jae
scas
cwtl
jl
out
pop
xchg
dec
dec
mov
ljmp
jmp
mov
loop
pop
shlb
mov
dec
mov
jl
mov
dec
jl
cli
mov
loopne
jl
jl
mov
outsl
jnp
outsb
mov
mov
rep
push
movl
cmp
repnz
lds
xchg
xor
pop
cs
pop
jl
jg
push
stos
lret
insl
mov
inc
jp
insb
xchg
jo
mov
jp
inc
fidivl
pop
push
int
jne
pop
arpl
inc
jne
jo
out
mov
push
jp
adc
test
test
lds
ja
fnstsw
push
push
pop
sahf
inc
insl
cmp
sub
ja
pop
mov
pop
jo
popa
jnp
jg
push
outsb
addr16
pusha
jo
dec
mov
pop
jns
mov
mov
arpl
scas
fs
popa
mov
int
pusha
pop
cmp
lock
xchg
mov
inc
dec
mov
add
jne
mov
push
mov
insl
xor
inc
insb
ja
insb
push
ljmp
dec
mov
jnp
pop
mov
jnp
imul
jae
popa
test
jae
jnp
imul
repnz
jnp
insl
dec
pop
call
repnz
push
jl
mov
pop
push
addr16
push
mov
push
jno
scas
pop
out
add
lods
pop
in
ljmp
lods
dec
insb
ljmp
jmp
jge
pop
stos
scas
jne
push
imul
jg
arpl
cmpsb
xchg
lods
ja
gs
pushf
popa
mov
scas
dec
fsubs
lods
inc
jnp
pop
jp
inc
pop
mov
gs
pop
lods
inc
dec
pop
in
inc
dec
mov
and
imul
mov
aaa
lods
popa
mov
aaa
nop
push
xchg
mov
inc
push
inc
scas
imul
jl
mov
dec
popa
mov
dec
jae
jl
mov
mull
movsb
lods
jnp
inc
mov
jne
insb
jnp
out
pop
mov
dec
jnp
jbe
insl
out
fs
fs
cld
pop
dec
mov
jb
mov
je
jb
out
dec
mov
sub
jl
ret
dec
lods
push
mov
pop
pop
inc
pop
scas
inc
mov
scas
dec
in
dec
lods
pop
repz
inc
inc
lods
push
jge
mov
mov
outsb
mov
into
jg
inc
jl
lods
pop
sub
repnz
stos
cs
jmp
dec
outsb
jae
repnz
jb
insb
jnp
inc
jp
addr16
dec
in
dec
outsl
sub
insl
ljmp
lcall
test
mov
test
dec
pop
dec
outsb
call
jae
jnp
sub
pop
outsb
insb
imul
dec
je
mov
pop
cmc
insb
jmp
jnp
jb
sub
out
push
dec
lods
pop
bnd
imul
mov
js
inc
dec
lods
pop
cld
outsb
xchg
inc
lods
push
out
fs
jge
dec
lods
pop
dec
insb
stos
mov
push
jae
jnp
jmp
inc
mov
jp
jl
dec
out
pusha
bnd
imul
push
dec
jnp
jo
in
inc
mov
bnd
imul
dec
outsb
insl
scas
inc
repnz
jnp
jbe
lods
dec
mov
insb
in
ljmp
lcall
inc
adc
sub
jle
mov
adcb
incl
imul
stc
aaa
sub
insb
lcall
out
insl
insl
shll
pop
arpl
aaa
das
outsb
bound
popa
jp
pop
mov
push
test
dec
je
sub
or
mov
mov
jmp
mov
lods
or
push
popa
mov
fwait
and
push
scas
in
lret
fs
scas
jnp
popa
mov
xor
ljmp
xchg
into
fs
in
rol
xchg
lea
scas
inc
test
out
jne
punpckldq
mov
jno
je
imul
cmp
fstp
aas
pop
ljmp
mov
add
dec
adc
mov
fcmovnbe
mov
jle
jnp
mov
popa
push
sub
mov
xchg
je
push
shl
in
fs
inc
sub
or
sbb
jno
sub
js
xchg
pop
jle
nop
jl
pusha
jmp
test
sub
scas
mov
mov
mov
push
jo
dec
scas
or
lods
aas
sbbl
jbe
insl
js
dec
imul
outsb
pop
jle
mov
or
lods
push
loopne
outsl
sub
adc
jb
movsb
test
xchg
xchg
shlb
data16
xlat
insl
cltd
mov
insb
push
mov
push
outsb
sub
cmp
add
and
sub
in
aam
push
fistpl
push
lock
or
lret
negb
data16
push
or
in
jmp
gs
dec
pop
inc
ficoml
inc
mov
and
imul
decb
lret
popa
jle
cli
loope
mov
sub
jbe
bound
pop
gs
orb
in
insb
jle
in
xor
jnp
lret
jl
jp
gs
dec
outsb
lods
push
add
mov
movsb
daa
mov
mov
scas
push
xor
push
add
push
mov
icebp
fs
lret
mov
inc
popf
sbb
in
mov
cltd
sbb
dec
xor
cmp
jo
cmp
cmpsb
scas
incb
jbe
cs
xor
mov
inc
cmp
inc
test
inc
xchg
add
mov
jle
jbe
sti
or
out
sub
sti
jge
mov
or
insl
pop
fs
ja
ljmp
std
ja
in
cli
cltd
or
mov
push
jo
cmp
shrb
inc
test
in
sahf
test
scas
push
inc
push
mov
mov
sar
jle
lret
ja
pop
jecxz
xchg
dec
xor
pop
insb
pop
mov
jmp
ljmp
xchg
jle
lods
shrb
mov
popf
into
loopne
jnp
loopne
ret
jns
jle
ficoml
fsubrl
into
push
mov
insl
fs
mov
cmp
mov
cs
iret
xor
dec
inc
sahf
mov
add
jmp
dec
dec
pop
or
jl
mov
repz
jne
data16
push
cmc
push
jle
insb
or
inc
jne
mov
cmp
jne
js
xchg
fbstp
push
cltd
push
lret
dec
adc
inc
out
cld
pop
js
pop
insb
nop
mov
cwtl
sahf
std
out
xor
mov
mov
adcb
dec
dec
pop
das
sbb
neg
aas
inc
mov
xor
pushf
enter
jge
mov
push
push
mov
mov
pop
push
adc
or
lods
cmp
jno
jmp
pop
mov
xor
dec
jnp
jge
xchg
inc
cmp
imul
mov
mov
outsb
xor
mov
lods
mov
aas
jo
inc
pop
jmp
repnz
pop
in
out
pop
jg
xor
push
push
adc
es
outsl
fs
xchg
cmc
flds
pop
push
insb
pop
dec
dec
mov
movsb
imul
sbb
xchg
adc
inc
mov
mov
imulb
pushf
dec
fwait
jno
loopne
push
sti
mov
addb
stc
sub
and
xchg
fcmovnbe
fs
xor
dec
out
inc
cmpsl
mov
je
dec
jae
push
into
outsl
sahf
mov
fistpl
adc
aas
insl
and
outsb
mov
pop
mov
inc
xor
loop
stos
mov
sub
jbe
mov
dec
mov
sub
pop
jb
inc
sbb
sahf
ja
jge
outsl
outsb
sbb
stos
in
cs
mov
insb
push
xchg
mov
pop
xchg
orb
lea
pop
pop
sbbb
fists
hlt
jmp
dec
pop
push
cmp
arpl
bound
pop
jb
or
xchg
aas
lock
movsl
into
add
hlt
subl
pop
imul
ret
push
dec
sbb
dec
push
stc
xor
mov
or
dec
xchg
imul
bound
repz
sub
mov
negb
jne
xchg
enter
jae
xchg
stos
mov
shll
and
outsb
mov
cmc
in
out
or
lret
mov
push
or
ret
fs
test
pop
lods
jl
push
cmc
sysenter
dec
dec
pop
lret
inc
push
data16
mov
or
or
and
fisubrs
je
lcall
in
mov
mov
add
sbb
mov
stos
popa
jp
jne
lret
jne
es
inc
dec
stos
cltd
movsb
cmp
inc
lock
enter
mov
sysenter
and
stc
fistpll
icebp
repz
sbb
loop
mov
movsb
mov
in
adc
lcall
jne
cli
das
push
std
ja
pop
fstpt
inc
push
xchg
ja
movsb
popf
arpl
mov
pop
je
rcr
inc
out
jge
out
popfw
in
add
inc
inc
push
xorb
xor
jo
mov
fcmovbe
mov
adc
inc
push
scas
jle
sarl
push
push
or
mov
or
mov
je
pop
jno
fwait
push
fcompl
push
mov
jbe
xlat
mov
lods
push
loop
xor
je
and
xor
inc
repz
push
outsb
addb
in
lcall
scas
jl
loopne
xchg
scas
cld
pop
sub
mov
fmuls
and
cmp
dec
push
jae
arpl
inc
mov
xor
sub
pop
xlat
cmp
bound
test
imul
popa
mov
ljmp
xchg
xor
insb
mov
or
test
lods
sti
xchg
jae
mov
mov
scas
jb
jp
pop
bound
flds
xor
imul
shr
add
scas
dec
mov
imull
daa
rorl
rcrl
cmpsl
xlat
popa
add
jp
fs
mov
fsubrl
push
insl
ja
ljmp
scas
repz
dec
jge
add
push
inc
or
push
ret
stos
adc
push
push
call
cmc
test
out
mov
or
inc
adc
movl
in
fs
cs
mov
inc
inc
jg
push
imul
scas
inc
add
arpl
das
and
sub
lret
or
sub
test
stc
and
mov
inc
cli
insb
mov
and
loopne
jbe
add
mov
fs
addl
sbb
cld
inc
pop
jb
popf
stc
cs
sbb
bound
xor
in
mov
inc
test
jo
icebp
out
arpl
rcrl
pop
ret
pop
mov
sti
push
dec
out
movsb
imul
sub
lock
bound
mov
push
mov
dec
xchg
ljmp
sbb
fisubrs
cs
test
aas
jbe
pusha
sub
fdivrp
movsl
mov
scas
jg
lods
dec
push
andb
jb
add
js
outsb
mov
fs
test
test
hlt
ja
icebp
bound
iret
ljmp
push
dec
sar
fs
stc
outsb
dec
pop
add
and
outsb
push
insl
add
fs
lods
movsb
loope
arpl
mov
ljmp
jae
xor
cmp
stc
pusha
mov
adc
push
iret
jl
outsb
pop
pop
test
fucomp
movd
fs
lods
mov
out
jne
fs
xchg
and
outsb
in
fs
in
scas
daa
mov
inc
imulb
lock
out
cltd
push
loopne
add
imul
inc
push
cli
jnp
jge
jb
popa
add
jb
ss
sti
in
jne
cmp
rcll
sub
stc
and
pop
sarl
jbe
andl
push
pop
je
cmp
iret
jb
pop
nop
pop
push
lods
mov
fwait
jb
int
sbb
scas
int3
jb
jb
mov
dec
and
jecxz
cmpsl
jo
lret
push
pop
call
insl
dec
mov
popa
push
jns
test
sub
lcall
stc
mov
jns
dec
data16
fistl
sub
mov
mov
mov
dec
adc
fs
call
dec
mov
mov
dec
push
and
dec
mov
mov
data16
cs
mov
push
repnz
aad
cmovp
jp
xchg
test
in
push
fs
in
mov
mov
testb
repnz
in
xor
mov
and
out
push
jg
add
pop
aaa
in
xchg
lods
sbb
mov
aam
push
jo
push
pop
jns
fs
dec
dec
mov
push
mov
dec
xchg
fs
mov
ja
fcmovnb
adc
pop
js
lcall
mov
jge
outsb
jbe
mov
pop
filds
jns
adc
add
inc
lret
lods
add
test
addb
cld
push
jbe
add
mov
sbbb
cs
clc
jb
jl
lock
inc
mov
nop
mov
jle
cmpsl
in
jo
inc
sub
imul
inc
rclb
shr
sub
shrl
in
insb
push
jge
sarb
pop
xchg
adc
lea
sti
inc
dec
out
fs
pop
jg
pop
inc
mov
dec
push
out
das
or
push
cmp
inc
adcl
outsb
fisubrl
sbb
idivb
xor
xchg
cmp
mov
cli
xchg
mov
xor
push
lods
jecxz
insb
add
mov
rclb
lea
js
inc
aam
lods
push
inc
dec
inc
mov
push
adc
in
rcrl
insl
push
dec
adc
pop
out
test
pusha
addb
repz
sbb
adc
add
and
add
test
push
repz
pushf
out
push
cmp
mov
fsubrs
outsl
in
fists
lret
jno
fwait
outsb
scas
or
leave
imul
cwtl
jb
in
pop
push
ficomps
out
cld
jns
outsb
and
fs
push
in
outsb
andb
gs
mov
dec
fcmovu
repnz
xor
pop
inc
dec
sbb
jns
xor
in
outsb
jns
mov
push
ret
stos
insl
outsb
in
xchg
dec
in
repz
mov
int
push
mov
or
add
int3
push
imul
fistpll
inc
popa
jb
cmp
scas
jno
lret
scas
cmp
out
adc
lods
mov
outsb
dec
test
inc
dec
and
rcrb
inc
inc
insb
scas
cli
je
outsl
dec
nop
xchg
mov
js
inc
sub
or
jno
adc
jbe
ret
and
jg
inc
lods
fldt
pop
fwait
sub
popf
nop
ret
lcall
jl
pop
jae
cwtl
mov
inc
mov
mov
clc
outsb
push
push
mov
dec
mov
ret
test
mov
in
push
data16
xor
outsb
mov
cmc
ret
dec
push
or
js
mov
inc
pop
inc
subl
btr
fs
jno
cld
cli
xlat
dec
sbb
push
inc
out
xchg
add
outsb
sub
nop
xlat
jbe
xor
incl
inc
out
sarl
mov
out
in
mov
push
add
dec
dec
sbb
insl
mov
jmp
add
jns
jns
sti
jnp
xor
dec
in
repz
rorl
jle
sbb
push
push
outsb
jb
scas
cmpsb
ss
inc
push
mov
mov
packssdw
push
add
sahf
push
jns
out
xchg
push
cmpsb
push
lock
push
sarb
cmovb
jno
in
cmp
enter
pop
cmp
sti
orl
jg
mov
jge
sub
faddp
ja
cmp
mov
pop
sarl
cwtl
cmp
das
push
sbb
daa
inc
lods
cmp
mov
cmp
sbb
scas
cmp
and
mov
cmp
ljmp
rcll
mov
aaa
sbb
scas
sub
lcall
lret
fs
push
repnz
and
mov
sub
cwtl
pop
fs
mov
lods
cmpsl
dec
fs
pop
out
mov
xor
insl
je
and
dec
cwtl
bound
cld
add
outsb
push
pop
adc
das
xor
sub
cmp
loop
cmp
lea
cmp
jb
shl
cmp
sti
cwtl
dec
xor
jo
push
dec
je
and
dec
xchg
pusha
push
inc
mov
jecxz
push
jle
cmp
dec
je
movsl
sub
pop
sarb
push
loopne
pop
mov
or
js
push
mov
lds
cs
scas
cmp
push
jge
jae
outsb
inc
loop
movsb
ja
ss
orl
pop
or
or
sub
sub
jnp
push
mov
cmpsb
inc
lock
inc
pop
loop
imul
cmpsl
mov
inc
pusha
icebp
cmp
inc
mov
inc
xchg
mov
dec
insb
mov
in
add
xchg
pop
xchg
xor
jle
pop
movsl
lock
pop
dec
add
sbb
push
int3
pop
outsb
jno
xor
dec
add
sbb
mov
stos
loopne
aaa
pop
outsl
int
cwtl
xor
add
scas
mov
imul
add
imul
push
mov
loope
out
add
imul
test
out
int3
push
movsl
xor
scas
push
lret
in
cmp
imul
test
int
inc
lock
jne
aam
adc
lods
mov
lret
adc
test
sub
lcall
pop
pxor
loop
outsb
dec
lcall
into
je
mov
cli
jg
jp
mov
movsb
inc
pop
jp
loop
out
test
or
insl
sbbb
push
xor
in
cmp
into
lods
sub
dec
inc
sbb
cmp
in
or
mov
or
mov
pop
jae
pop
mov
jg
cmpsb
mov
popa
aas
sahf
insb
cmp
xchg
fcoms
imul
add
jne
ss
pop
aas
rcrb
jp
sub
sbb
int3
mov
push
mov
outsb
lods
dec
mov
incl
mov
add
hlt
bound
xchg
xchg
pusha
in
sbb
aaa
pop
jae
inc
inc
push
mov
test
call
cmpl
inc
cmpsb
mov
outsb
mov
mov
push
mov
xchg
jp
fs
sti
outsb
daa
xor
cmpb
rcll
div
pushf
inc
iret
or
jb
adc
add
shrl
pop
test
mov
inc
dec
nop
mov
xchg
jle
cltd
sahf
xchg
into
stc
outsb
xchg
insb
xor
xchg
mov
outsb
mov
push
cmpsb
out
adc
inc
imul
fnstcw
xor
scas
push
sub
outsb
orb
mov
mov
addb
gs
scas
das
sahf
xlat
jp
inc
scas
divb
lahf
jp
fwait
xchg
lea
or
or
push
push
int
push
dec
mov
fisubrs
fiadds
repnz
lea
repnz
rcrb
cli
scas
stos
lods
inc
ret
outsb
imul
mov
in
orl
fs
repnz
ret
jbe
xchg
cli
imul
mov
int3
push
stc
outsb
sarb
fs
or
jb
mov
jge
jbe
xchg
add
fwait
cmpsl
mov
lret
push
pop
ucomiss
jb
pop
inc
add
fs
gs
push
fs
loope
loope
push
xchg
mov
pop
sub
inc
xchg
jbe
push
in
and
xorb
jbe
stc
cmp
cmpsl
shrb
aas
fs
cmpsl
outsb
mov
add
outsb
cli
rolb
test
jle
cmp
out
and
lods
jg,pn
outsb
dec
andb
jb
lahf
gs
pop
out
insb
test
ret
fs
xchg
icebp
movsl
arpl
jnp
cmpsl
imul
aam
jmp
dec
xchg
jae
es
add
xchg
stos
into
ljmp
cmp
add
jp
shl
outsb
jb
pop
push
xchg
xor
lcall
push
push
mov
fs
in
inc
xchg
stc
outsb
divb
or
fldcw
dec
subb
push
pop
jp
inc
xor
xchg
xchg
or
insb
test
xor
into
cs
xorl
mov
cmpsl
dec
pop
in
icebp
push
insl
mov
cmp
xchg
sub
sahf
lods
mov
je
and
addb
or
outsb
xor
xor
in
out
mov
jp
arpl
xor
sbb
inc
push
pop
push
sub
lret
xorb
imul
pop
fs
aad
push
sbb
popf
insl
dec
ljmp
out
test
cmpb
in
xor
cli
pop
xchg
outsl
push
pop
xor
lds
rcl
inc
adc
fstpt
add
and
test
pop
push
arpl
adc
movsl
jbe
das
test
xor
adc
insb
push
les
ret
mov
push
and
repz
mov
mov
cmc
jge
dec
sbb
xor
add
call
mov
adc
dec
je
push
les
push
push
push
dec
je
cmp
fadds
lret
loop
inc
scas
subb
push
or
inc
sbb
sub
sbb
add
sbb
push
repz
pop
test
dec
js
stos
sub
or
sarl
stos
and
in
jecxz
mov
dec
inc
jge
cmp
push
and
mov
cmp
xchg
out
mov
sub
jae
mov
jb
push
or
outsb
mov
add
mov
mov
outsb
jg
sub
fs
dec
cmp
inc
fwait
jnp
fadd
jb
or
add
pusha
je
sbb
push
movsl
mov
mov
hlt
daa
dec
adc
fidivrl
mov
xor
out
or
cwtl
add
mov
mov
fs
sub
aad
inc
dec
inc
mov
lea
ljmp
hlt
in
inc
sub
nop
xchg
movsb
cli
sahf
adc
dec
cmp
outsb
sub
test
sbb
outsb
fs
jle
push
repz
inc
cmp
gs
xor
shrl
aad
movsl
push
repz
fisubl
imul
dec
push
push
or
scas
pushf
mov
dec
pop
ficompl
hlt
lcall
adc
rorl
dec
iret
imul
push
dec
pop
int
mov
in
cwtl
inc
std
pop
jae
in
dec
jg
jne
cli
fcoms
incl
js
lods
cmp
fs
shrl
arpl
test
pop
sbb
dec
sub
imul
int
sahf
popf
sub
jae
lods
dec
jg
push
in
mov
cwtl
pop
fs
push
jne
push
mov
insb
mov
int
push
stos
loope
jg
dec
push
fs
mov
lds
fdivl
sbb
sub
shrl
push
loop
cltd
dec
insl
jae
push
xchg
cmp
mov
je
scas
jb
sub
push
xor
sbb
loope
dec
dec
js
push
stos
lods
mov
xor
add
mov
xchg
push
mov
jo
dec
xchg
stc
push
push
jl
fs
daa
in
imul
jp
xor
sub
dec
inc
xor
insb
pusha
push
insl
loope
stos
push
inc
cmp
dec
pop
dec
push
jne
in
push
enter
sbb
dec
lahf
dec
fs
imul
mov
jle
out
push
dec
xor
dec
push
inc
aas
fmuls
push
push
push
inc
mov
repnz
push
cmpb
repz
outsb
mov
pop
jmp
pop
dec
xchg
jbe
pushf
addr16
cmp
dec
outsb
loop
or
xor
pop
fnstenv
push
js
das
xor
pop
pop
push
fs
test
cli
mov
inc
xor
mov
fs
xor
inc
mov
cmp
mov
loope
addr16
fbld
pop
sti
sbb
std
shl
cmc
mov
je
cmp
push
or
mov
and
jo
dec
cmpsb
adc
mov
and
jb
std
fadd
dec
insb
ficomps
in
test
rorl
fadds
cmp
nop
lret
rorl
and
push
dec
pop
testb
cmp
es
in
popf
pusha
dec
lretw
push
xorb
fcmovu
mov
std
in
xor
stos
pop
pusha
data16
lahf
jle
pop
mov
sub
push
sti
add
lret
movl
push
js
dec
push
outsb
or
push
push
outsb
pop
inc
dec
ss
and
in
leave
xchg
pop
mov
jbe
add
push
in
fs
insl
insb
out
push
add
and
jae
ret
dec
xchg
stc
push
jae
insl
dec
cmp
xchg
mov
loop
movsb
cmp
mov
jp
inc
mov
push
notb
loope
mov
aad
mov
inc
pop
shlb
inc
iret
push
fisubl
mov
sbb
xchg
xor
dec
push
stos
or
mov
inc
push
fnstsw
dec
cli
inc
enter
ret
sub
lret
dec
fs
out
inc
stc
push
shlb
dec
addl
enter
test
push
lea
sub
dec
mov
lods
fnstsw
push
push
lret
xchg
dec
push
xlat
dec
roll
dec
and
pop
lods
lock
dec
dec
insl
fs
popl
cbtw
or
shlb
sub
lods
push
pop
pop
push
fiadds
shlb
rcrb
dec
arpl
mov
push
mov
mov
insl
and
fs
shll
scas
in
cwtl
jp
data16
push
mov
cli
sub
outsl
gs
mov
push
not
pop
inc
push
ds
adc
fidivrl
add
push
or
or
cmp
jge
add
int
dec
dec
popa
sbb
fs
call
add
inc
mov
or
sub
lret
push
mov
mov
pop
jecxz
movsl
push
fs
add
dec
pop
out
inc
scas
mov
push
mov
and
add
in
sti
imul
lds
pop
cs
sti
in
outsb
insl
cwtl
dec
ss
xchg
push
or
xchg
push
in
jg
jns
cli
leave
outsb
mov
cwtl
inc
or
jns
and
cmp
in
fidivl
jbe
mov
pop
test
cmovp
outsb
cmp
push
out
xor
shr
stc
dec
je
rolb
push
push
inc
outsb
add
pop
mov
jns
dec
dec
xor
in
lds
xor
push
push
inc
jo,pn
aam
inc
mov
dec
jo
dec
xor
insb
xchg
lods
pop
mov
lods
fs
jge
push
pop
mov
in
sub
dec
inc
cwtl
jbe
pop
in
mov
push
cmp
ror
rcrb
sti
dec
sti
cwtl
sub
dec
imul
cs
xchg
push
mov
mov
in
pop
fs
outsl
sub
mov
mov
aas
fs
sahf
xor
sbb
ds
xchg
mov
jo
pcmpgtd
lret
in
imul
dec
pop
push
out
imul
push
dec
shll
and
xor
push
cmp
add
sub
outsl
scas
icebp
data16
pushf
fsts
dec
push
add
insb
dec
ss
push
dec
adc
xchg
cmp
pop
scas
fldt
arpl
xchg
data16
repnz
cmp
fnstenv
popa
pop
dec
add
out
sub
sarb
cmp
xorb
insb
cwtl
aaa
insl
push
cmp
push
adc
jae
xchg
iret
xor
push
jne
push
mov
arpl
std
push
dec
imul
data16
dec
pushf
leave
mov
lods
mov
push
dec
das
stc
cli
xchg
push
add
aaa
sbb
push
sub
inc
push
fidivl
pusha
add
pushf
pop
push
imul
ljmp
sub
pusha
xchg
push
int
outsl
inc
lods
stos
stc
ljmp
scas
idivl
mov
rorb
dec
in
int
pop
js
dec
dec
aad
adcl
push
dec
shr
add
push
push
mov
call
addr16
pop
jp
fs
adcb
adc
dec
bound
pop
outsb
insl
nop
cli
adc
repz
add
push
lock
scas
add
in
push
dec
fcomps
test
cmp
and
mov
xchg
in
loope
loope
js
lods
push
push
sbbl
mov
mov
lods
iret
push
pop
inc
stc
adc
fisubrl
jb
int3
sti
popa
push
pop
shr
sub
cmp
or
movsb
pop
hlt
jge
xor
jecxz
mov
movb
clc
push
daa
push
xor
std
lods
lds
add
mov
push
add
popf
pop
in
lods
dec
cmp
aas
cltd
jo,pn
lret
out
fs
pop
lods
insl
inc
popf
dec
ret
mov
fwait
add
fidivs
inc
addr16
mov
inc
jb
cli
dec
lock
push
fdivrs
das
insb
cmc
insl
aad
jb
xor
and
adc
fwait
aam
orl
sti
push
sbb
in
outsl
rcrb
das
xlat
push
jno
dec
mov
fiaddl
xchg
mov
push
lock
pop
add
and
sub
push
xor
push
sbb
cmp
xor
call
arpl
xchg
into
inc
in
adc
sub
loope
add
push
push
push
mov
push
sub
inc
xor
and
or
xchg
push
mov
sbb
cwtl
xchg
push
dec
imull
jp
arpl
ss
push
and
add
fidivrl
inc
cmp
mov
hlt
cmp
xor
add
insl
mov
pop
inc
cmovb
mov
outsb
in
or
dec
push
xchg
and
mov
js
adc
mov
sbb
js
pushf
fsubrs
stos
or
js
cmp
rcrl
scas
insb
xor
fsubrs
test
xor
out
jmp
push
inc
test
add
dec
inc
mov
mov
push
cld
nop
fisubrl
gs
outsb
lock
je
push
inc
inc
mov
cmp
outsb
mov
outsb
repz
jae
mov
and
imul
sub
cltd
sub
inc
movsl
lock
stos
push
and
and
add
je
mov
xchg
lods
sbbb
out
es
mov
inc
lea
mov
insl
orl
in
cs
scas
sub
dec
cmp
inc
mov
push
push
pop
add
cs
aas
bound
mov
push
jbe
cwtl
xchg
push
out
push
scas
cs
inc
pop
inc
scas
into
outsb
dec
pop
out
sbb
addr16
xor
xchg
push
cmpsb
dec
lock
popa
add
lods
shll
jmp
sub
ss
jno
sti
push
fsincos
push
out
xchg
dec
movsl
shrl
mov
inc
dec
xor
pop
repz
pop
inc
popa
gs
lods
or
push
outsb
outsb
aad
loop
sahf
rcrl
lea
outsb
mov
cmp
inc
cli
or
idivb
popf
imul
add
jb
andb
lods
divb
into
mov
push
outsb
rorl
cmpsb
ss
lock
lea
js
js
scas
xor
insl
cld
xchg
out
outsb
iret
je
scas
adc
xchg
lock
push
pop
jp
and
xor
jp
lock
adc
inc
lcall
push
aad
add
sub
add
inc
mov
lods
adc
push
outsb
sub
gs
sti
jno
inc
cmp
dec
loop
lods
mov
lcall
ljmp
mov
inc
jns
ds
inc
cmp
mov
lock
inc
dec
adc
add
adc
pop
imul
jle
xchg
scas
xchg
inc
or
xlat
push
pop
lock
push
pop
dec
add
xchg
test
lods
imul
insb
js
lods
mov
frstor
cmp
adc
mov
adcb
jb
mov
pop
imul
in
jns
sti
push
sbb
inc
adcb
adc
inc
jbe
insl
jp
outsb
inc
hlt
cmp
popf
pop
xchg
add
inc
pop
mov
or
cmpsb
dec
call
inc
insl
xorb
icebp
xor
xlat
orl
pop
out
mov
jnp
push
dec
testb
in
cmpsb
push
xlat
add
arpl
je
cs
pop
lods
or
imul
bound
sbb
gs
xchg
push
inc
addr16
jp
cwtl
dec
cmp
int
aam
lcall
pop
aad
push
cltd
mov
ljmp
out
pop
sbb
rclb
push
lock
mov
cmpsb
loop
pop
shlb
sub
pop
imulb
outsl
inc
cmpsb
push
cwtl
add
jae
and
insl
stos
cmp
push
out
popf
mov
inc
dec
insl
scas
bound
or
fsubs
inc
pusha
add
adc
inc
and
jge
inc
xor
in
cmp
and
dec
fs
jnp
ljmp
imul
in
out
pop
mov
in
loop
sbb
jg
inc
push
movsl
xchg
push
test
inc
outsl
inc
fists
outsl
pop
mov
pop
and
les
pop
jge
clc
push
lods
mov
pop
dec
pop
imul
sti
pop
fsincos
push
dec
out
xchg
das
cmp
je
pusha
xor
sbb
in
cmpsb
adc
push
inc
dec
mov
push
pop
je
dec
push
jb
enter
hlt
dec
cmp
scas
push
pop
flds
push
sbb
fiaddl
cli
addb
imul
in
cmpb
xor
add
push
adcb
fsubrs
mov
in
mov
lahf
mov
loopne
push
sbb
xor
pop
in
cmp
js
mov
sbb
repz
repz
lcall
pop
aad
inc
filds
pop
out
adc
mov
lods
addl
dec
jno
sti
lcall
call
sbbb
xchg
out
push
push
pop
cmpsb
inc
out
xchg
push
cmpsb
dec
lock
fs
roll
inc
in
sti
adc
jp
in
insb
cmp
cs
push
fcmovbe
pop
push
filds
pop
cmpsb
mov
stc
lods
iret
pop
pop
outsb
roll
mov
fistpll
sbb
movsb
fldenv
in
ret
out
cmc
popf
adc
cs
int3
ss
jno
sti
sbb
sti
push
jo
out
pushf
cltd
sub
or
hlt
loop
jne
cmpsb
or
gs
ret
xchg
fidivs
sbb
sbb
into
loopne
mov
imul
ss
mov
js
sar
mov
mov
cli
fdivs
push
pop
xor
scas
fwait
push
mov
jl
xchg
cmp
push
add
ret
subb
dec
push
inc
sbb
pop
push
fnsave
ret
fistpll
sti
sbb
scas
insb
icebp
xchg
fistpl
dec
popa
dec
cmc
outsb
mov
rclb
lea
mov
test
push
push
or
xor
lods
add
xlat
push
pop
and
cmp
jle
lret
inc
test
sub
sbb
js
push
in
in
xlat
ss
lods
lahf
pop
pop
bound
sub
fwait
shll
sti
icebp
push
js
jge
add
mov
data16
fcompl
pop
arpl
push
lcall
add
js
scas
cmp
insb
add
cmc
pop
jb
adc
dec
loopne
outsb
push
mov
mov
dec
pop
and
add
and
mov
in
ja
fsubs
push
add
push
stos
sub
stc
mov
sub
scas
popf
push
mov
lcall
push
xorb
or
xchg
mov
movsb
bound
push
xchg
push
inc
outsb
jne
in
ja,pt
push
imul
loop
sub
scas
fstl
mov
jb
push
stos
lods
xchg
stos
cmpsb
mov
in
lods
jb
leave
mov
push
lock
lea
shll
pop
mov
push
xor
outsb
inc
and
sti
pop
sbb
pusha
cmpb
das
sub
lods
stos
outsl
push
outsb
jmp
xchg
xchg
jl
push
fisubrl
in
icebp
jmp
push
fnstenv
add
daa
push
dec
sbb
cwtl
jb
sub
int3
es
xor
sahf
sbbl
dec
cmp
add
cli
add
popa
push
std
mov
scas
loop
fidivs
pop
inc
adc
cmp
mov
sub
push
fisubs
pop
push
fistpll
outsb
inc
ss
iret
bound
jb
cli
fucomip
dec
adc
pushl
dec
out
push
inc
xor
outsb
mov
mov
xchg
pusha
jb
mov
loop,pn
pop
mov
js
push
pop
dec
dec
popa
mov
popf
jo
loope
cmpb
imul
loope
push
cmpsb
jl
pop
push
rcrb
gs
mov
cs
inc
outsb
or
cmpsb
push
lahf
lock
lea
mov
es
push
aam
daa
pop
fisubl
shr
lock
sti
sti
push
pop
jno
sbb
sub
inc
insb
adc
and
or
sub
pop
push
outsb
pop
sbb
or
push
add
or
inc
jbe
fs
in
bound
inc
fiaddl
push
inc
push
xor
fucomp
mov
add
fs
scas
scas
xchg
jb
lock
in
outsb
jg
in
jns
outsb
jecxz
mulb
inc
cs
scas
push
xor
pop
fisubrl
adc
xor
in
jb
add
jno
sti
mov
subb
jo
pop
ljmp
pop
rcll
mov
in
push
loopne
xor
pop
out
jae
lcall
push
sub
cmpsb
sarl
cmp
sti
pop
outsb
iret
push
xchg
das
hlt
cmp
popa
jle
sti
mov
jnp
push
es
push
dec
sti
pusha
jno
fs
sahf
sub
cs
dec
pop
fwait
out
jg
push
data16
adc
pop
fistpll
je
dec
pop
ljmp
imul
sub
movsl
fistl
or
jo
pop
dec
ss
scas
cmp
dec
stos
lock
push
push
dec
insb
jb
mov
fwait
and
lods
sbbb
mov
orl
inc
or
sahf
push
and
cld
adc
dec
jge
jb
fs
js
sub
dec
inc
insl
cmp
cwtl
mov
jecxz
hlt
inc
inc
xchg
sub
into
jb
push
add
xor
loop
jns
dec
pop
arpl
bound
pop
or
je
mov
daa
jbe
inc
pop
lret
idivb
dec
ficoml
add
lret
jo
aam
ljmp
arpl
push
add
mov
inc
pop
inc
lods
inc
call
sub
gs
push
push
inc
leave
mov
dec
dec
in
insb
xor
pushf
push
cmp
icebp
jno
adc
push
xchg
lea
lcall
icebp
ret
lahf
sub
xor
mov
outsb
jp
sub
in
stos
cmc
aaa
xlat
jecxz
scas
push
pop
lret
insl
cmp
out
repnz
push
test
in
mov
lods
cli
ss
lods
or
scas
xor
ret
push
arpl
scas
cmp
repz
imul
insl
push
dec
pop
lret
mov
imul
dec
das
mov
cmp
imul
cmpsl
sbb
cmc
push
push
push
mov
pushf
inc
sbb
dec
ficompl
cmpsb
je
mov
inc
jnp
dec
adc
repnz
add
stos
push
stc
cs
push
outsl
lcall
push
inc
mov
push
dec
or
icebp
mov
dec
mov
mov
jle
xor
add
fidivrl
dec
jge
bound
fsubrl
push
out
sbb
push
push
mov
arpl
mov
orl
xor
jae,pn
repz
shrb
mov
jb
inc
xchg
in
push
or
bound
lock
adc
dec
cli
adc
cmp
lahf
push
and
sbb
inc
imul
sti
add
clc
loop
xchg
dec
rcr
add
js
jb
xchg
and
sbbb
fs
js
in
mov
iret
jnp
push
imul
in
loop
fst
and
jge
ret
xor
mov
imul
push
popa
cmp
imul
addr16
dec
loope
jb
scas
andb
lods
fnsave
imul
lret
outsb
scas
sub
dec
sub
movsl
add
scas
outsl
sub
fldlg2
fs
xchg
or
dec
jo
mov
xor
mov
lods
xor
bound
inc
push
rolb
out
xchg
pushl
sub
sub
jl
dec
in
pop
add
leave
inc
push
sti
sub
sub
lret
cld
jno
push
jb
loop
mov
sahf
cmp
ror
loope
sub
out
stos
xchg
push
pop
fs
insb
shr
sbb
dec
pusha
xor
xor
push
fs
dec
pop
cmpsb
out
mov
imul
jecxz
xor
or
insl
lds
dec
xchg
sub
cli
or
daa
jl
dec
in
fs
dec
les
rcr
cmp
outsb
jns
push
dec
sub
outsb
sbbl
or
js
adc
push
push
daa
cmpsb
stos
pop
into
push
adc
dec
sbb
cmp
leave
scas
lock
outsb
add
push
dec
loope
cld
xchg
sbb
es
and
fisubrl
jbe
scas
in
xor
dec
insl
push
cmp
rorb
pop
lcall
inc
mov
call
je
lods
inc
mov
xchg
xor
sub
mov
jle
and
push
or
gs
pop
or
adcb
out
dec
cmpsb
adc
sar
cmp
cmp
in
addl
fdecstp
dec
jl
aaa
data16
in
cmpsb
mov
adc
or
mov
lods
sub
dec
inc
lods
jbe
dec
add
fistl
outsl
jne
mov
push
xchg
xchg
dec
xchg
in
mov
in
fnstsw
xchg
loop
dec
rorb
xchg
dec
es
into
fisubrs
dec
push
push
jp
rcrb
dec
dec
or
cs
cmp
cwtl
test
pushf
lret
cmp
sarl
fldlg2
sbb
dec
testb
fs
adc
add
lds
cmpsl
ja
test
ret
push
es
pop
fs
arpl
fimull
sub
fsub
stc
mov
and
inc
inc
jl
call
pop
push
mov
jns
cmpsb
mov
dec
popa
scas
xor
scas
call
add
lods
cmc
mov
jge
adc
pop
out
push
data16
stos
pop
pop
push
mov
mov
rolb
scas
pop
adc
sbb
cld
sti
outsb
cmpsb
cmpsl
inc
push
mov
scas
inc
mov
cmp
mov
testb
mov
shrb
jmp
xchg
cmp
insb
push
insl
pop
data16
dec
fwait
mov
push
push
cmp
dec
inc
orb
nop
imul
pop
mov
push
sub
outsb
sub
outsb
int
pop
dec
or
out
mov
movd
push
imul
inc
inc
jecxz
hlt
jb
fcmovbe
adc
in
sbbl
cli
cs
movsl
insl
lret
outsb
mov
jno
addr16
outsb
lahf
in
dec
xchg
dec
push
fwait
xor
jbe
cmp
sub
insl
sub
add
bound
pop
jp
fs
lea
lahf
subb
pop
loope
jbe
ljmp
lock
pushf
push
sbb
leave
mov
cmovp
mov
xor
pop
pop
xlat
push
inc
sbb
rcr
bound
dec
loop
imulb
sub
imul
push
pop
push
cmp
out
mov
dec
mov
mov
lods
fpatan
test
and
imul
dec
pop
cmp
fsubr
scas
dec
inc
ret
int3
add
jb
add
sub
mov
lret
outsb
cwtl
stos
cli
pop
sarl
lods
or
jl
dec
es
fcoms
sub
dec
push
dec
je
and
add
and
pop
dec
in
sub
ret
dec
inc
cmp
adc
sbbb
sbb
insl
lret
sub
mov
in
lcall
cmpsl
imul
ret
inc
cmpsb
xchg
dec
inc
mov
fnstcw
in
dec
out
pop
inc
push
and
fs
std
inc
insl
push
mov
adc
push
push
cli
cli
xlat
jns
inc
pop
dec
xchg
cmp
mov
inc
ret
or
cmpsl
mov
adc
dec
pop
push
dec
daa
lcall
arpl
or
lods
dec
aam
cmp
sbb
sub
scas
imul
daa
push
int
add
push
dec
push
fisubrl
jbe
pop
pop
push
addl
lds
jne
lods
stos
lret
pop
adc
mov
jbe
pop
lahf
cmp
push
push
jecxz
mov
push
pop
push
out
ss
sub
dec
and
in
add
fidivl
out
pop
addb
cmovp
pop
ss
subb
out
mov
xor
mov
and
lea
stc
imul
ret
and
mov
pop
insb
cmp
sbb
fs
cmc
in
outsb
mov
fmull
dec
data16
imul
push
add
pop
testb
outsb
xorl
ret
fcmovb
cltd
adcb
jo
pop
mov
pop
ret
mov
mov
cmpsb
lods
outsb
mov
cs
sbb
inc
inc
mov
pushf
icebp
cld
push
outsb
int
jp
sub
js
dec
dec
push
mov
dec
outsl
cmp
push
jae
inc
add
mov
pop
sbb
dec
sbb
scas
lods
push
addr16
insl
cmovb
paddsb
sti
scas
sbb
inc
orb
fisubl
push
jecxz
sub
mov
push
add
push
sbb
shlb
push
push
es
cmp
pop
push
and
add
imul
cmpsb
in
clc
in
lcall
insl
dec
or
sti
dec
pop
out
fs
leave
jle
loope,pn
out
in
out
ss
cmp
push
mov
gs
cmp
imul
jg
sbb
popa
insl
pop
imul
outsb
arpl
ret
cmp
call
lds
insl
inc
jb
mov
sahf
push
vmread
sub
hlt
and
outsb
xor
outsl
stos
ss
jmp
outsb
jg
pusha
or
cli
xchg
lcall
sub
ret
adc
inc
xchg
in
faddl
in
add
fiadds
mov
xchg
mov
jp
sub
push
pusha
lea
jle
sub
fs
out
aaa
js
mov
or
sti
clc
fidivrs
outsl
scas
add
mov
pop
mov
adc
mov
out
dec
fisubl
int
in
dec
sub
or
mov
push
jnp
pop
pushf
push
jle
into
aad
jle
sub
jg
pop
and
loop
int3
outsl
inc
sarl
pop
es
in
pop
out
dec
mov
scas
pop
mov
incb
and
sub
filds
sahf
int
xchg
push
mov
out
gs
mov
sub
pop
mov
lcall
hlt
or
xor
jo
mov
dec
push
xchg
jnp
mov
cli
add
push
movsb
lods
dec
lock
push
cmp
mov
test
push
movsb
jle
jecxz
in
imul
rep
push
add
js
pusha
dec
jbe
out
mov
or
repnz
push
push
add
loope
inc
sub
inc
pop
sub
scas
outsb
dec
test
inc
stos
icebp
mov
jecxz
repnz
sbbl
jno
push
jne
lret
cmp
jmp
call
mov
cld
lcall
outsb
repnz
jl
inc
mov
push
cli
or
rorl
mov
arpl
mov
xor
xchg
movsb
mov
inc
cmp
in
and
cmp
ljmp
stos
xchg
test
in
xor
jl
js
aaa
pushf
push
lret
lret
hlt
push
mov
cmp
fimull
xchg
and
scas
jg
inc
insl
mov
ret
or
sbb
cld
jg
std
je
inc
pop
ljmp
insb
repz
mov
outsb
out
mov
scas
in
adc
push
and
jae
insb
hlt
je
push
jo
les
and
xor
cmp
adc
sub
imul
pop
sbb
inc
push
pop
push
add
pop
jne
pop
dec
xchg
dec
mov
cmp
push
xchg
inc
scas
pop
je
mov
dec
mov
scas
imul
outsl
jl
push
scas
ljmp
jl
fs
dec
xor
mov
js
nop
push
add
xor
xchg
insb
outsb
fists
adc
mov
sub
dec
pop
ret
gs
pop
push
push
dec
stos
adcb
xchg
jle
ds
popl
scas
xchg
outsb
cmpsb
jnp
mov
mov
pushf
sub
mov
pop
imul
pusha
xor
jge
pop
out
mov
sbbl
pop
insl
pop
jmp
sub
sub
mov
les
loopne
mov
lret
and
fdivr
pop
push
jbe
jae
jge
push
adc
and
aaa
pop
into
aam
and
mov
outsl
push
mov
sti
push
jnp
pop
and
add
jge
insl
jge
fdivl
push
das
pop
jae
mov
movsl
adc
fimuls
or
les
outsb
mov
ljmp
jl
into
cmp
cld
push
mov
es
lds
mov
pop
sahf
bound
pop
stos
cmove
fnstsw
xchg
jmp
jb
jp
push
mov
push
imul
sub
jmp
inc
mov
dec
jns
jne
je
out
add
iret
mov
pop
aaa
dec
dec
mov
dec
mov
inc
in
clc
dec
or
xlat
and
or
mov
rcrb
jae
push
cmp
mov
divb
pop
mov
mov
popf
hlt
dec
mov
add
repz
xchg
add
loop
dec
lods
mov
std
jge
ljmp
push
into
repz
and
outsl
jns
ljmp
jne
jp
pop
jp
jle
xchg
decl
mov
icebp
idivl
std
repnz
rcrb
sbb
pop
mov
fisttpl
mov
js
mov
xor
xchg
xor
arpl
or
mov
shlb
scas
test
push
idivb
outsb
sbb
dec
shrl
mov
cs
sub
ret
dec
pop
ja
xor
rcll
push
sub
gs
fs
mov
cmp
pop
pushf
mov
ljmp
dec
jnp
repnz
jg
aad
outsb
ret
cwtl
jmp
in
mov
cmp
mov
jae
mov
aad
push
inc
push
push
mov
mov
negl
dec
ss
insb
push
fstpl
fisubrs
jle
loopne
push
push
bsf
mov
pop
mov
or
xorl
jb
cs
jg
and
stos
nop
xchg
divb
mov
jne
mov
mov
cld
pop
outsb
in
stos
mov
jo
add
dec
mov
push
lcall
in
cmp
sarl
jb
or
outsl
add
push
int
lock
jnp
xor
testb
xchg
nop
xor
lock
fs
jnp
xchg
push
js
in
nop
xlat
push
dec
sbb
dec
mov
int3
adc
push
push
pop
lods
insb
mov
imul
lret
pop
mov
subl
push
jo
mov
jmp
pop
outsl
jo
outsl
je
scas
in
cwtl
mov
push
das
xchg
jnp
out
or
push
xorl
dec
pop
mov
js
jg
jae
outsl
mov
xchg
xchg
xchg
adc
in
sub
je
rolb
mov
xor
push
jle
lea
lock
inc
jns
iret
shll
pushf
outsl
mov
and
in
inc
mov
and
into
mov
cmp
add
movsb
mov
mov
mov
cmp
jge
jle
scas
push
shlb
call
je
jl
ljmp
push
jnp
insl
dec
jmp
lret
xchg
inc
jne
inc
dec
jg
pop
clc
or
adc
push
lock
stc
repnz
inc
jl
mov
push
fnstsw
mov
nop
lret
push
mov
mov
shll
xorb
movsl
call
pop
mov
or
pop
test
push
imul
ja
xchg
stos
inc
inc
repz
hlt
pop
adc
in
dec
pusha
mov
xor
in
loop
je
push
rcl
add
je
dec
popa
pop
cmp
xor
inc
mov
cs
pop
cli
pop
add
das
push
or
push
repnz
mov
fmul
xor
jnp
mov
push
stos
push
jnp
ljmp
jmp
into
mov
je
cmp
mov
push
negb
mov
outsb
outsl
pop
inc
or
jge
pop
adc
mov
inc
mov
std
movsl
push
dec
pushf
dec
dec
repz
lret
repnz
addl
mov
xchg
mov
inc
lret
xor
sub
mov
ret
sarl
mov
bnd
pop
xor
fstpl
incl
lods
adc
shll
dec
jno
jle
mov
lods
shr
ss
jecxz
jno
push
addr16
test
pop
je
pop
dec
in
push
cwtl
adc
xlat
and
xchg
sub
and
mov
rorb
adc
out
xchg
dec
fisubl
mov
loope
xor
insb
imul
mov
dec
cltd
xchg
lahf
dec
popa
dec
outsb
pop
cmpsb
cs
jns
mov
push
dec
pop
pop
in
loop
mov
into
inc
xchg
sbb
mov
cli
or
xor
out
insb
mov
inc
hlt
insl
push
push
sbb
shlb
mov
jns
pop
sbb
fidivl
and
dec
dec
or
mov
pop
cwtl
movsb
out
fsubrp
imul
or
dec
mov
stos
scas
mov
cmp
loope
mov
arpl
dec
jle
mov
aad
cmpb
test
repz
cmpsb
mov
dec
xchg
jg
or
dec
imul
pop
cltd
cmc
mov
loope
pop
push
out
xor
pop
or
cmpsl
pop
pop
insb
pop
pop
cmp
push
add
inc
jle
div
out
in
and
adc
scas
inc
loope
dec
inc
imul
pop
push
sahf
inc
insb
xchg
sti
xchg
jb
sti
inc
mov
jnp
aaa
pop
popa
testb
push
and
je
or
out
push
stos
jnp
add
cmp
jnp
pop
cwtl
rcl
mov
cmp
iret
pop
sub
pop
stos
cmp
dec
mov
and
pop
jl
add
popf
mov
in
nop
mov
out
fwait
push
push
hlt
popf
jb
cmp
je
outsb
push
pop
mov
xor
scas
inc
pushf
pop
ja
or
scas
jle
cmp
pop
sti
pop
insb
cmpb
mov
xchg
sub
xchg
in
xchg
lahf
mov
lahf
xor
mov
sub
mov
les
adc
lret
sub
and
aad
jl
pop
repz
stc
sarb
mov
sbb
cmpsl
xor
inc
out
cmpsb
cmpsb
insl
inc
imul
inc
xorb
mov
lock
ss
jae
mov
xchg
lahf
out
jle
xor
inc
jo
jecxz
inc
stos
push
gs
sbb
cmp
push
jno
cwtl
aam
ret
std
jl
sbb
pop
cmp
lret
mov
fmull
xor
mov
xor
ret
inc
stc
lea
cmp
adc
lcall
xor
orl
add
dec
aad
mov
push
or
push
lea
xor
pop
in
repnz
inc
popf
mov
std
inc
push
mov
jns
dec
dec
daa
imul
inc
inc
shll
into
push
loop
mov
adc
gs
adc
sbb
jg
movsb
ja
jmp
push
cmp
mov
sbb
jb
inc
subl
dec
out
pop
or
movsb
mov
pusha
mov
mov
stos
inc
mov
push
mov
push
addr16
hlt
in
or
je
push
jp
lods
nop
in
xor
xchg
jae
xor
mov
adc
mov
dec
push
xchg
into
xor
pushf
ja
sahf
outsb
pop
out
mov
push
push
xor
pop
aaa
and
sub
popf
test
push
jp
push
mov
dec
in
shr
xchg
pushf
shlb
mov
sar
ret
jbe
xchg
mov
jge
leave
sbb
cmp
out
cs
imul
jae
push
int3
add
sti
cmc
ja
pop
mov
or
je
out
sahf
je
popa
push
jle
mov
xor
rclb
hlt
pop
fucomip
testb
jae
pop
rclb
fldl2e
dec
inc
inc
pop
jnp,pn
dec
jl
push
stos
jp
scas
int
cmp
pop
mov
notb
xor
add
and
jne
add
shlb
outsb
insl
out
mov
in
pushf
push
cli
push
out
je
and
ja
or
scas
sbb
inc
jle
cmp
pop
cvtdq2ps
mov
cmp
cmp
mov
mov
pop
aas
ror
lahf
sbbb
mov
pop
and
lret
dec
push
sbb
dec
lock
ret
dec
xchg
in
jnp
lret
out
sbb
pusha
fcmovnu
mov
std
lods
dec
dec
inc
test
shl
sarl
mov
dec
outsl
aaa
adc
pop
lret
lcall
xchg
jae
mov
sub
iret
imul
and
xor
jle
fadds
daa
mov
aaa
sub
cmc
in
inc
jne
pop
mov
and
pop
repz
jp
scas
lds
inc
stc
ss
jne
add
xchg
or
rolb
pop
lods
aaa
mov
mov
mov
push
hlt
jp
jge
outsb
jb
jb
cli
jp
jb
cltd
dec
xor
sbb
pusha
mov
pop
xorb
lods
lods
push
mov
pusha
push
iret
je
fs
imul
mov
ss
cmp
inc
movswl
insl
xor
pop
sub
mov
addr16
pop
into
or
ja
popf
inc
insb
inc
push
into
mov
std
dec
add
rorb
loopne
test
mov
call
test
adc
fldcw
mov
lods
mov
daa
xchg
inc
sub
sbb
cld
or
enter
insl
mov
es
cmpsl
shlb
stos
mov
cs
mov
xchg
jnp
outsb
in
mov
xchg
fnstsw
fistpl
ficompl
subl
jnp
xchg
repz
je
pushf
mov
cwtl
ret
out
cltd
mov
sbb
pop
fidivl
push
pop
jl
shl
jo
cmp
push
cli
cld
arpl
aam
push
push
lcall
arpl
scas
adc
insb
jnp
stos
jo
lcall
inc
lds
mov
outsl
jo
inc
cmpb
dec
testb
push
mov
lds
bound
cli
les
dec
idiv
sub
pop
fildll
fs
lods
ret
and
sub
insl
pop
int3
inc
jg
mov
aaa
pop
xchg
stc
or
pop
push
out
pop
mov
negl
adc
std
into
jb
inc
cltd
aaa
push
dec
adc
jp
test
test
lock
sub
cmp
dec
fdivs
cmpsb
bound
ror
xchg
rcrb
mov
pop
les
xchg
call
test
mov
mov
mov
stos
test
push
dec
rcrl
adcl
jp
ficompl
int
xchg
fs
test
or
adc
or
xchg
add
sub
aas
mov
into
jmp
call
out
call
xor
xchg
ljmp
fidivrs
mov
call
js
add
dec
fiadds
ficompl
sti
push
or
pop
lret
inc
gs
pop
fdivl
insl
push
jmp
jmp
faddl
inc
jle
jne,pt
insl
clc
push
mov
daa
cmpsb
jno
cld
sub
daa
cli
inc
scas
jmp
mov
hlt
ds
popa
daa
inc
adc
leave
xchg
mov
je
mov
stos
push
jae
hlt
inc
adc
dec
scas
sqrtps
or
ficoml
dec
mov
leave
inc
jle
dec
inc
mov
into
ljmp
iret
mov
cmp
cs
pushf
rcll
aas
nop
push
pop
mov
scas
ja
push
dec
push
fimull
mov
cmp
scas
or
cmp
out
push
mov
push
lahf
inc
jbe
push
inc
ds
push
lea
imul
lret
cmp
push
xor
insl
push
insl
cs
dec
scas
in
outsl
lock
mov
int3
jno
add
outsb
inc
sub
jno
mov
into
xchg
jp
andb
insb
out
jge
dec
rclb
or
mov
mov
inc
dec
sub
repnz
mov
jbe
imul
lds
or
cmp
out
cltd
mov
cs
pop
and
jl
mov
dec
stos
jo
mov
dec
into
inc
repnz
pop
stos
ret
adc
test
dec
or
mov
movsbl
add
outsl
fisubs
clc
aaa
and
dec
jg
jno
cs
fidivrl
fbld
mov
or
sti
clc
ja
dec
sahf
xchg
jg
js
js
inc
in
dec
push
data16
adc
inc
inc
or
sbbb
ja
xor
sbb
scas
inc
inc
jnp
ret
lret
outsl
insb
or
xor
int
dec
xor
sti
jo
inc
rcr
into
icebp
lea
push
jecxz
pop
mov
mov
out
in
sbb
lret
cs
lcall
fisubrl
bound
pop
inc
mov
hlt
dec
loopne
dec
mov
stos
mov
popa
xchg
std
and
mov
add
and
cltd
test
dec
clc
fs
or
xchg
push
dec
jnp
jne
dec
jae
insl
stos
lods
iret
rol
stc
lods
ljmp
mov
dec
sbb
push
dec
sub
push
sbb
inc
dec
cmp
add
dec
xor
gs
lahf
scas
shrl
inc
das
push
sarb
scas
stc
in
fcomps
push
adc
scas
aaa
mov
insb
jl
stos
pushf
sbb
cmp
lea
fs
inc
or
aad
xchg
sti
add
cmp
insb
dec
std
popa
jg
sub
cmp
mov
aam
add
ja
mov
ret
inc
or
xor
outsb
xchg
pop
insl
insb
mov
imul
add
enter
xchg
std
push
mov
lds
mov
sar
adc
popa
push
jns
dec
and
scas
mov
inc
dec
outsb
xchg
movsl
sbb
adc
inc
cld
cmpsb
dec
enter
pop
jmp
jmp
xlat
mov
or
int3
mov
xchg
push
sub
sbb
outsb
pop
jb
test
test
jp
cmp
jg
lds
lcall
test
pusha
pop
addb
fisubl
mov
dec
scas
mov
sbb
and
lods
mulb
bswap
fs
lock
inc
out
mov
push
lret
sbb
test
pop
hlt
mov
jb
test
adc
imul
in
fs
mov
mov
sub
pop
shl
std
fcomps
std
cwtl
pushf
stos
fidivrl
gs
imul
pop
fisubrl
sub
popa
cltd
test
lock
rorb
inc
push
inc
gs
adc
jns
add
mov
jge
scas
inc
inc
and
push
in
and
mov
aaa
in
mov
pop
nop
mov
mov
jge
cmp
jg
aas
fs
cli
outsb
insb
dec
out
add
sub
adc
and
xrelease
or
dec
int
popa
xchg
ret
mov
pop
dec
cmp
xor
fs
in
data16
fsubl
cmp
or
outsl
fs
dec
in
adc
js
xchg
adc
jl
lods
ljmp
clc
mov
int3
xchg
mov
mov
fldt
js
lea
dec
inc
push
add
push
out
mov
mov
sti
lret
cmp
pushf
push
lock
in
in
adc
mov
xchg
bound
xor
and
adc
xor
frstor
enter
in
xor
addr16
stc
ljmp
arpl
stos
loop
imulb
xor
ret
dec
outsb
repnz
push
sbb
outsb
mov
das
inc
aaa
cmp
popf
pusha
or
jb
mov
xchg
sub
sbb
dec
pop
outsb
aam
cmp
mov
test
mov
aaa
dec
jmp
test
dec
hlt
int
hlt
inc
jmp
jl
js
daa
jge
jo
cmp
outsb
dec
jmp
adc
dec
ffree
mov
fs
cs
push
jo
mov
jb
fs
or
nop
add
ljmp
lret
repnz
jo
aas
fs
je
je
mov
mov
mov
add
std
jnp
mov
mov
repnz
aas
adc
inc
aas
lea
or
adc
xor
in
pop
bound
out
aaa
int3
lret
jg
in
stos
fs
das
into
jmp
mov
and
ja
cmp
hlt
inc
icebp
xchg
cltd
cli
scas
mov
outsl
or
add
lret
rcll
push
leave
ret
fisubl
fmull
sub
xchg
repnz
outsl
bnd
lret
adc
pop
dec
mov
leave
inc
mov
xchg
shr
sbb
cld
cmp
pop
aaa
push
sar
mov
cmp
insl
lds
leave
dec
in
fstps
out
scas
das
lods
dec
jbe
sub
fisubs
dec
mov
fisubs
lods
sub
mov
insb
fwait
out
xchg
adc
fs
mov
inc
push
xchg
negb
push
and
dec
loope
push
insl
jle
mov
or
rcll
mov
in
push
jp
into
js
or
lea
or
nop
mov
adc
adc
pop
inc
repz
jno
mov
outsb
in
mov
cmp
js
push
ja
aaa
dec
inc
out
xor
push
in
fs
push
jo
add
cmp
jb
insl
lret
xlat
mov
jg
shrb
mov
rsm
cmpsb
test
lods
out
ret
xchg
pusha
into
push
ljmp
sub
ret
mov
outsl
scas
jmp
cmpsb
mov
mov
imul
out
out
inc
xchg
mov
sbb
outsb
outsl
sub
std
xor
insl
fmuls
pop
scas
xchg
inc
jmp
xchg
lock
andl
clc
dec
jmp
sbb
cmpsb
insb
mov
sub
fs
mov
push
std
insl
lea
movsl
fnsave
adc
jb
push
imul
or
sbb
push
mov
dec
mov
xchg
jbe
xorl
xchg
arpl
cmp
jae
adc
jno
sbb
inc
push
imul
insb
call
stos
or
cmp
popa
push
fimull
scas
cltd
out
xor
lahf
push
jecxz
xchg
imul
outsb
sar
dec
mov
jl
aaa
and
daa
push
cmp
mov
dec
adc
ljmp
fisubrl
clc
outsb
jne
fldt
movsb
divl
ret
or
ljmp
mov
push
cli
cmpsb
fs
lret
dec
jbe
repz
sub
call
mov
or
xor
mov
push
fs
sbb
das
test
mov
test
lods
push
cli
aam
xchg
dec
jb
outsb
psubd
xchg
add
leave
out
push
std
push
scas
repz
push
imul
mov
out
fidivrs
jge
fs
xor
repz
push
or
addr16
arpl
jb
cld
mov
jge
sbb
ret
and
mov
mov
lret
lods
sub
cmp
jge
fs
sbb
cmpsl
and
lahf
sub
cwtl
in
imul
lret
sub
xor
mov
dec
loopne
sahf
in
stos
jno
insl
lods
mov
in
sub
out
insl
imul
push
push
cmpsb
pusha
xor
lret
mov
lods
jp
fs
sti
in
sub
outsl
insl
test
push
mov
sbb
lret
push
stos
push
fbstp
sbb
lods
fdiv
iret
add
outsb
mov
pop
out
mov
mov
jge
test
xchg
push
cli
int
out
cmc
or
lods
mov
icebp
ja
push
push
outsb
add
iret
das
pop
aaa
mov
lods
lret
je
push
mov
pop
in
aaa
imul
push
fidivl
jp
pusha
mov
mov
mov
in
in
stos
test
or
jge
jle
data16
nop
scas
out
pop
push
adc
jne
mov
imul
jae
popf
pop
cmp
out
shrl
push
movsb
inc
push
xor
push
dec
adc
std
daa
aam
and
jl
seto
add
jb
ss
addr16
mov
mov
aaa
lds
dec
adc
ror
faddl
hlt
pop
inc
cmp
repnz
lods
stos
fmuls
scas
test
lods
mov
lods
popf
jecxz
dec
dec
pop
hlt
cli
jecxz
addr16
cltd
dec
jnp
cmp
pop
xor
xor
mov
pop
pop
inc
push
je
lods
dec
out
sub
addr16
in
aas
jnp
mov
outsl
xor
pop
xor
lret
mov
stos
add
ja
in
inc
in
adc
mov
jae
jae
dec
fisubrs
push
dec
out
fwait
jge
gs
fadds
inc
or
and
nop
or
push
lods
mov
adc
mov
rcll
sub
sahf
lods
dec
mov
sub
fcomps
les
xlat
in
nop
scas
pusha
sub
cmp
les
xor
sahf
addr16
insl
out
jbe
cmpsl
dec
jb
add
cmp
in
out
les
add
ret
cmpb
les
xchg
jns
sub
pop
pop
dec
and
les
out
fwait
jl
jp
push
les
mov
dec
stos
and
lahf
jbe
fdivl
mov
and
loop
jg
fisttps
and
and
loopne
mov
in
movsl
cwtl
das
jbe
lods
or
les
cld
mov
jns
add
xor
mov
in
xchg
les
das
xchg
adc
pop
movlps
jb
dec
les
mov
sbbb
adc
sar
iret
les
movsl
outsb
push
push
out
imull
inc
mov
lods
into
outsl
mov
jge
mov
xchg
ficoml
js
sbb
test
xchg
ret
pop
dec
bound
aaa
les
mov
lods
fs
push
mov
xor
mov
mov
movsb
fldenv
add
adc
dec
sbb
fs
mov
and
lods
aaa
imul
push
and
lret
sub
xorl
out
adc
inc
movsl
mov
std
fs
pop
fs
scas
push
jl
stos
ret
mov
cmp
xchg
pop
std
faddp
push
push
pop
loop
mov
add
insb
test
sub
fidivrs
mov
outsb
add
dec
cmpsl
inc
in
xorl
outsb
jmp
je
adcl
aaa
sub
push
cli
mov
mov
pop
shll
mov
add
mov
sbb
outsb
push
lret
fs
lahf
data16
addl
cld
outsb
mov
pop
movsb
popa
es
adc
rclb
aaa
pop
lahf
shlb
jg
mov
adc
pusha
lret
and
fs
adc
mov
inc
cs
fdivr
mov
mov
sbb
jne
xchg
cmpsb
subb
mov
pushf
movsl
mov
arpl
ret
mov
loop
pop
out
jne
call
leave
and
adc
pusha
fimuls
sbb
and
jmp
dec
and
push
stos
dec
mov
stos
outsb
movsb
mov
or
jae
sub
scas
jmp
xor
out
das
out
inc
xchg
or
leave
fidivl
in
andl
flds
popa
jns
movsl
xor
dec
dec
xchg
fwait
out
mov
xchg
push
int
mov
fwait
and
adc
in
adc
push
add
insl
aam
sbb
enter
mov
or
insl
fs
inc
orb
data16
shlb
or
mov
inc
cmp
clc
fnstcw
lods
orb
jns
inc
push
cld
pop
cmp
dec
xor
ljmp
fildll
jp
sbb
outsb
cmp
scas
jmp
mov
sub
adc
icebp
stc
nop
xchg
cmc
cmp
jb
xchg
lea
mov
push
mov
xchg
int3
aad
sbb
sub
sub
sbb
add
add
rcl
pushf
sti
jo
pop
gs
or
jp
rcrb
xchg
jmp
dec
inc
mov
pop
or
inc
jbe
dec
out
sbb
push
int3
mov
sbb
jb
insb
repz
push
cmp
pushf
outsl
insb
lahf
jno
mov
mov
inc
jmp
pusha
test
stc
mov
inc
mov
add
push
jmp
shr
mov
mov
cmp
dec
cld
jb
push
push
movsb
jnp
dec
pop
push
dec
mov
je
mov
mov
imul
scas
outsb
mov
ds
pushf
xchg
mov
loopne
stos
mov
mov
mov
mov
idivb
jl
insb
popf
fwait
leave
xchg
sub
inc
test
aaa
push
dec
out
js
test
cmpsl
jnp
loop
insb
sub
ret
or
out
mov
inc
push
int3
fdivrs
in
push
les
call
inc
xchg
push
test
mov
pusha
ja
sbb
xlat
jo
icebp
scas
ud0
xchg
insb
iret
sbb
decb
xchg
gs
jecxz
les
mov
mov
mov
hlt
push
sarl
or
add
jb
das
inc
je
mov
hlt
mov
out
and
imull
adc
push
push
les
ja,pt
mov
fisubs
call
or
cmp
jb
push
push
lea
rcrb
jbe
dec
add
add
jb
aad
iret
mov
test
pop
fstpt
lods
or
bound
sbb
pop
mov
shl
test
pop
inc
push
incb
sti
inc
adc
jnp
sbb
inc
sbb
fadd
mov
fidivs
pop
xor
fcmovb
ret
inc
mov
ljmp
lds
mov
xchg
xchg
cmp
and
or
dec
push
andb
sub
xor
imul
fucomp
dec
loopne
jo
jnp
fs
or
cwtl
or
fwait
mov
cmp
mov
ja
imul
pop
pop
hlt
shlb
orl
imul
out
sub
and
in
arpl
jp
aas
lcall
ljmp
repz
cmp
pop
mov
mov
fnstsw
iret
sub
call
pushf
divb
lahf
mov
testl
pusha
fbstp
jno
pusha
mov
pop
xor
jle
add
fwait
js
call
imul
sub
movsb
ficomps
mov
sbb
outsb
ljmp
fs
inc
lods
stc
sbb
add
xor
adc
cmp
xor
sbb
fs
sub
jbe
add
sarl
mov
ljmp
cmp
mov
jo
out
test
or
adc
out
xor
pop
insl
repz
cmpb
sbb
xchg
out
pop
lods
lcall
dec
xor
xchg
lock
into
shll
stc
outsb
repnz
aam
or
into
not
push
add
ss
into
ds
push
imull
leave
ss
sbb
sub
mov
sub
xor
mov
test
imul
or
add
sub
pusha
shl
mov
or
out
icebp
xchg
fwait
mov
stos
in
aaa
push
mov
push
shlb
cmc
inc
add
cmp
aas
dec
jp
jmp
scas
push
addb
mov
add
push
xchg
xchg
push
std
packsswb
hlt
sbb
or
pop
mov
je
into
add
inc
jmp
pop
ds
jbe
imul
js
pop
mov
ret
clc
jp
dec
push
jmp
arpl
inc
insl
inc
idivb
jns
jne
cmp
in
fs
in
sub
xchg
notb
mov
cmp
dec
xchg
jmp
jle
jae
push
pop
xor
call
roll
xchg
fistpl
jp
jae
and
jno
jae
arpl
mov
fs
cmc
je
je
pop
add
arpl
cmp
jmp
xchg
mov
xor
cmpsb
out
lret
addl
sbb
lods
adc
xor
aas
mov
je
push
std
insl
xchg
je
xor
test
rcrl
cmp
or
je
insb
push
xchg
incb
stos
das
or
push
mov
pushf
inc
sbb
mov
or
mov
sti
insl
cli
jae
lea
mov
jge
aas
and
imul
insb
mov
inc
xchg
mov
out
adc
cld
icebp
or
sub
ss
mov
movsl
xor
cwtl
ds
test
push
sti
imul
cmpsb
pop
adcb
lret
lods
push
sub
inc
dec
aas
mov
cli
dec
cmpb
push
mov
mov
jecxz
pop
inc
pop
jg
jg
push
or
lret
pop
mov
mov
ljmp
lods
jae
inc
jmp
fcompl
outsl
pop
mov
cmpl
lcall
or
scas
jb
aam
in
das
insl
sbb
dec
out
or
ja
cmp
out
data16
mov
in
cmp
aad
lret
or
aad
idivb
jge
cmpsl
sub
int
jge
mov
insl
cmp
stc
mov
ret
dec
out
mov
or
jp
dec
daa
aad
push
cli
pushf
ljmp
pop
jl
cmp
ret
insb
scas
mov
sti
repz
add
shl
sub
mov
jbe
pop
nop
or
mov
out
testl
and
add
mov
pop
mulb
mov
dec
jae
lods
push
or
pop
xchg
or
lret
cmp
daa
jbe
dec
mov
pminsw
scas
xchg
inc
outsb
mov
outsl
stos
pop
outsl
pop
das
into
loop
outsb
jle
mov
enter
jo
jmp
jle
pop
push
pop
je
into
cmp
or
sahf
and
imull
imul
sbb
sbb
push
fstpl
stos
cmpsb
jne
xchg
shll
fsubrs
insb
xchg
xchg
jl
mov
das
mov
insl
xchg
dec
xchg
dec
scas
xor
aaa
and
cmpl
lcall
shlb
pop
idivb
jno
jle
cmovo
mov
jle
push
cmp
test
cmp
jl
nop
aaa
fidivrs
cmpb
test
call
jns
adc
sub
shrl
jns
sbb
cmp
sub
pop
insb
out
shlb
cmc
lods
add
loopne
icebp
ret
mov
sbb
mov
fisttpl
stos
xor
ss
das
and
mov
movsb
jnp
cmp
xchg
out
lods
hlt
test
ret
ss
lods
xcrypt-ofb
cmpsl
out
cmp
movsb
mov
add
lret
sbb
insl
clc
pop
outsb
ror
and
ss
ja
sbb
xchg
push
imul
mov
sti
xor
cmp
pop
adcb
sub
dec
push
mov
sbb
outsb
outsl
aas
mov
fidivl
add
mov
std
hlt
xlat
adc
adc
mov
jno
insb
bound
add
jg
rcrb
cmp
add
ds
mov
jmp
sub
pushf
dec
dec
insl
inc
pop
inc
inc
inc
jg
outsb
mov
mov
push
mov
sbb
jne
stc
rcll
hlt
and
outsb
mov
xor
push
pop
mov
lahf
sti
xchg
mov
popa
dec
mov
add
dec
xor
mov
xchg
test
xchg
shlb
pushf
in
sti
pop
jno
loope
mov
call
fld
mov
sub
es
mov
jecxz
pop
adc
pop
ds
jbe
or
push
inc
stos
inc
testb
push
gs
mov
sbb
push
loope
stc
cltd
out
inc
push
daa
sub
cs
cmp
hlt
movsb
jecxz
jae
pop
fisttpll
dec
inc
ss
jnp
imul
dec
pop
pop
dec
push
push
fs
inc
lods
mov
push
mov
sub
addr16
pop
mov
fwait
dec
push
fisubl
int3
movd
je
pop
sahf
push
mov
in
ljmp
ror
inc
lods
fs
insl
mov
mov
fsubs
pusha
adc
mov
lea
push
mov
adc
adc
cmp
fisttps
push
pause
sub
mov
aaa
call
arpl
jns
les
pop
dec
fwait
or
in
sub
and
sub
add
mov
daa
std
xor
loopne
out
xchg
cli
scas
jp
mov
test
mov
xchg
mov
mov
or
xchg
aas
push
push
data16
mov
push
mov
sub
lea
push
xchg
adc
inc
dec
inc
sub
cli
sub
inc
xor
inc
push
xchg
pop
stos
fs
mov
inc
scas
dec
sbb
pop
jnp
sti
jnp
pop
loope
push
scas
xchg
repnz
jecxz
add
mov
sbb
rclb
xchg
les
add
scas
xchg
inc
adc
inc
and
mov
mov
hlt
aaa
mov
inc
mov
xor
xor
inc
cmp
dec
shlb
push
std
dec
xchg
jb
cmp
adc
adc
mov
repnz
cmp
jbe
lods
xchg
mov
outsl
negb
std
nop
lods
stos
in
mov
cwtl
shrl
lahf
inc
sub
inc
push
jo
mov
cmp
and
popf
fcomps
push
ja
call
fdivrl
das
inc
add
cmp
add
out
gs
cld
in
dec
push
cmp
mov
cmp
cli
inc
dec
fdivrl
cmp
push
sub
imulb
jno
pop
bound
in
in
inc
int
jno
mov
fildll
mov
pop
sub
dec
lock
pop
jns
addr16
dec
mov
push
popa
mov
gs
sub
in
adc
sub
add
sub
push
sub
scas
cmpsl
cmp
sbb
gs
mov
mov
fsubp
arpl
dec
mov
je
prefetchwt1
or
jae
add
insb
cli
outsl
lods
fs
pop
rep
movsl
jge
divb
scas
pop
sub
push
fimuls
fiaddl
jg
insl
inc
mov
inc
cmp
stc
push
stos
lret
mov
lret
jb
jb
dec
add
ss
push
or
or
and
add
fs
insl
lds
es
mov
shl
or
add
add
fs
cld
lret
add
dec
mov
jbe
inc
cmp
mov
cmp
cmp
dec
out
mov
fisubrl
cmp
jnp
pop
pushl
pop
jns
sti
xor
pop
xlat
lret
loope
shrb
les
or
or
int
xchg
rolb
scas
mov
jo
movsb
add
js
or
mov
jb
icebp
insb
mov
outsb
sbb
xchg
out
std
lcallw
sub
lock
hlt
dec
loope
hlt
int3
pop
repnz
cmp
pop
stos
js
dec
and
xor
fs
inc
sbb
jmp
sub
inc
mov
mov
cmpb
mov
stos
dec
dec
cltd
mov
sub
jmp
cmc
inc
push
cli
enter
cmp
das
mov
sti
je
inc
lds
sub
orl
push
jnp
push
xlat
add
jb
or
dec
jno
adc
lds
iret
cld
inc
gs
mov
mov
adc
mov
das
insl
clc
outsb
repz
inc
and
or
int3
lds
dec
fdivr
push
jnp
jnp
sti
sbb
js
mov
mov
jo
xor
add
lock
out
in
lods
in
sub
pop
insl
hlt
pop
in
hlt
dec
pop
mov
dec
adc
or
lret
loop
and
dec
lahf
dec
jne
mov
cli
jnp
dec
push
sbb
pop
cli
and
sti
xor
cli
jnp
hlt
cli
jnp
insb
adc
jnp
dec
and
cmp
jo
enter
or
mov
jae
stos
mov
inc
subl
dec
xor
fbld
sbb
adc
add
not
mov
loop
roll
lock
jo
je
lea
cli
and
add
out
insl
int
test
cmp
cmpl
mov
dec
aas
adcb
sti
sarb
repnz
pop
sub
cmp
xchg
push
add
fwait
inc
mov
loopne
mov
ret
ja
jno
push
jb
push
cmp
js
and
in
addb
insb
pop
aam
mov
popa
xor
nop
icebp
out
bound
scas
sbb
loop
sarl
scas
mov
pop
fld
les
subb
sti
dec
and
aas
pop
xor
pop
mov
mov
pop
sbb
mov
lahf
mov
inc
decb
test
incb
cmp
jns
pop
fstpt
add
mov
cwtl
xchg
or
jp
jmp
cltd
adcb
dec
test
jne
ret
sub
mov
out
mov
lods
ja
hlt
mov
push
daa
testl
adc
and
insl
dec
fmulp
push
pop
std
imul
jo
xor
fdivrl
fmul
lret
sub
push
jo
insl
pop
jbe
pop
xchg
das
adc
stos
gs
jae
leave
fwait
or
mov
data16
mov
mulb
jbe
push
imul
xor
repz
xchg
fwait
mov
xor
lods
mov
stos
mov
fs
cmpsl
cli
repnz
mov
mov
mov
pusha
mov
testl
popf
cmp
adc
lea
mov
repnz
outsb
dec
loopw
push
sbb
mov
or
cld
mov
andb
popa
lea
cld
insl
push
ss
inc
int
imul
lock
jmp
fs
and
push
inc
les
inc
push
shll
je
data16
filds
sub
jns
cmp
mov
outsb
mov
pop
lret
dec
into
cwtl
pop
jle
lea
mov
lret
fcmovbe
stos
inc
pop
outsb
mov
loopne
call
jl
outsb
repnz
jmp
inc
pop
jl
imul
jb
dec
xchg
test
pop
inc
cs
lcall
jo
outsl
hlt
mov
sbb
lods
int3
add
cmpsl
aaa
push
mov
push
add
jl
sbb
mov
lods
and
xor
outsb
ss
mov
adc
push
ret
sbb
js
shrb
divl
imulb
fs
xchg
dec
clc
mov
xchg
pop
adc
movsb
repz
dec
sub
cmc
adc
into
pop
insb
aaa
jb
scas
sbb
xor
mov
outsb
popa
into
decb
mov
out
and
bound
das
push
out
shlb
lcall
mov
xchg
dec
push
iret
mov
arpl
repz
adc
loopne
outsb
inc
lea
int3
in
ja
and
mov
mov
xor
ficomps
ljmp
mov
ljmp
insl
mov
mov
fs
or
dec
mov
rcrb
sub
adc
gs
outsl
outsl
cli
jo
jno
mov
pop
imul
mov
jo
push
enter
outsl
xchg
out
fs
or
pop
cmp
mov
aam
std
push
testb
mov
in
cmp
movsb
adc
jmp
fs
gs
mov
mov
fstpt
ret
inc
fsub
or
or
shl
dec
dec
imul
data16
pop
or
cli
mov
pop
push
rcll
mov
inc
sub
or
xor
lea
mov
jnp
imul
jg
cs
mov
les
pop
mov
jge
addr16
push
sub
xchg
jns
dec
nop
mov
mov
iret
repz
add
pop
mov
or
sub
in
or
inc
push
out
jle
je
adcb
pop
xchg
inc
and
scas
out
xchg
push
push
test
mov
add
sti
lds
outsb
cmp
or
sub
lret
inc
sbb
xchg
adc
std
sbb
mov
das
fbstp
sarb
mov
std
into
lret
jnp
out
fs
lods
xlat
or
pushf
jbe
push
sub
push
mov
jl
out
sti
inc
mov
dec
mov
xchg
call
out
or
in
pop
sbb
jecxz
out
shrb
roll
fldcw
loopne
pop
je
dec
mov
fildl
jecxz
decl
in
rclb
jp
out
aaa
sbbl
push
in
arpl
jmp
sub
mov
subb
push
mov
inc
cmpsb
outsb
fimuls
cmp
arpl
outsb
push
add
arpl
push
jae
out
push
lods
movsb
mov
jl
cmp
jae
cs
mov
aaa
stc
push
std
ds
mov
xchg
sahf
lods
xor
fbld
sahf
xrelease
test
pushf
mov
push
push
inc
jno
roll
outsb
addl
jae
aad
and
or
jg
out
inc
mov
mov
test
int3
out
movsb
push
mull
inc
mov
jae
sti
cmp
dec
imul
imulb
clc
mov
push
cmpsb
mov
lcall
dec
js
inc
and
bound
mov
into
lods
lock
xchg
inc
outsl
mov
hlt
js
jne
dec
adc
lea
jo
pop
shlb
jl
sub
push
and
popf
mov
dec
pmuludq
movsb
imul
test
push
mov
mov
lcall
loop
push
bound
pop
mov
fs
add
xchg
out
in
and
adc
pop
call
dec
jb
pop
jb
pop
pop
mov
and
sub
xor
fldl
loopne
adc
cmp
cmc
jb
jmp
bound
xor
dec
mov
mov
sub
mov
icebp
or
mov
jmp
fs
mov
mov
nop
nop
inc
cmpsl
outsb
insb
pusha
das
pop
ljmp
cmpsb
jmp
adc
fs
push
sbb
or
inc
pop
jns
bound
aam
add
iret
mov
arpl
and
pusha
aas
test
out
mov
subl
imul
inc
decb
aas
add
fs
fildll
jle
push
pop
and
xchg
int3
inc
enter
lock
mov
cmpsl
lahf
mov
add
pop
xor
les
mov
lods
lret
xor
subl
add
jge
mov
push
xor
lods
cmp
data16
je
adc
movsb
ret
lret
and
aaa
pushf
mov
push
andl
aaa
enter
jbe
addr16
sbb
dec
dec
sbb
stc
mov
dec
js
scas
jns
push
jns
push
jnp
pop
and
sarb
adcb
pop
popa
daa
outsl
mov
pop
pop
add
push
addr16
mov
hlt
mov
test
sahf
fistl
pop
mov
aam
lods
fisubrl
rclb
in
jo
push
inc
jae
push
jle
scas
jl
jb
std
stos
jl
dec
push
inc
roll
mov
and
xchg
xchg
mov
mov
and
insl
xchg
jbe
or
scas
fs
pop
fsubs
out
lock
hlt
adc
adc
je
mov
outsb
dec
test
lcall
mov
xor
sbb
into
and
js
mov
pusha
loope
bound
add
fs
mov
insl
in
in
inc
add
out
std
rcpps
popf
fnstenv
in
jb
mov
mov
mov
and
int3
je
sbb
jbe
daa
and
pop
cmpsb
frstor
loope
jmp
sub
iret
cs
xor
xchg
leave
adc
push
inc
inc
jae
lcall
lods
cmpl
inc
outsb
loope
mov
test
xor
dec
or
out
fs
sbb
je
sub
add
jnp
mov
jo
and
xchg
lods
ja
jne
je
jbe
int3
ljmp
test
xchg
ds
cmp
pop
dec
outsl
out
dec
fs
mov
xor
jno
xchg
mov
cs
sub
xchg
mov
outsb
or
je
repz
add
jb
fcmovbe
mov
mov
in
pop
jno
jo
pop
mov
mov
cld
jo
fwait
cs
xchg
adc
sbb
mull
jmp
dec
lret
mov
or
arpl
daa
mov
fildl
in
je
dec
mov
inc
dec
cwtl
dec
xchg
lret
int
testl
add
pop
cmp
cmpl
into
dec
jae
jne
or
imulb
dec
jl
testb
jne
mov
stos
dec
pusha
leave
dec
and
push
je
inc
test
test
loop
mov
mov
xor
mov
clc
out
std
imul
nop
jle
nop
sub
mov
sub
and
jnp
cli
cltd
scas
sti
inc
add
mov
into
fsts
mov
dec
add
int3
cmp
mov
push
js
push
adc
out
sub
sti
stc
and
or
xlat
mov
lcall
cmpsl
dec
xor
dec
cli
gs
lret
aam
mov
add
jge
cmp
and
mov
lahf
in
cs
fisubl
xchg
xor
bound
xor
aaa
xor
daa
and
pop
inc
rolb
dec
push
rorl
dec
fists
mov
sub
aam
insb
mov
leave
mov
cmpl
sbb
pop
rol
and
mov
movsl
lods
stc
push
adcl
aas
orl
mov
je
test
dec
popa
sub
mov
dec
inc
mov
xchg
movsl
in
mov
insl
mov
stc
insl
mov
pop
lea
mov
push
outsl
jno
sub
xchg
jo
insb
imul
jae
in
push
sbb
cmpsb
je
icebp
cltd
cmpsl
xchg
icebp
pop
jbe
and
xor
jl
dec
jg
jnp
or
inc
push
in
aas
dec
xchg
das
or
ret
mov
inc
jnp
lret
fdivp
in
sub
aam
out
pop
xor
jg
push
push
or
jno
mov
in
out
mov
call
mov
out
fmulp
es
imul
ljmp
and
mov
sbb
dec
mov
and
pop
cmp
mov
mov
adc
mov
mov
sti
jb
loope
bnd
lods
adc
dec
pop
insl
insl
xor
mov
inc
mov
dec
cmp
mov
xchg
xchg
inc
jb
xchg
jg
cmc
gs
outsb
sbb
mov
jnp
pop
sub
xchg
mov
mov
mov
sub
push
pop
add
pop
aas
insb
fs
lods
ret
mov
push
cs
push
int3
jne
mov
scas
jp
fs
mov
mov
pop
push
xor
mov
and
cli
mov
pop
aam
pop
arpl
outsb
in
xor
push
adc
add
iret
insl
enter
inc
insb
jb
push
std
sbb
adc
inc
mov
testb
xor
mov
inc
push
fmul
add
dec
cld
dec
fwait
stos
fs
mov
xchg
fildll
outsb
in
cs
cmp
outsl
xor
sbb
cld
repz
cmpsl
jo
outsb
cmp
movsl
rcrb
outsl
ljmp
shrb
imul
xchg
in
pusha
pmaxsw
outsb
mov
jmp
cmc
lret
sub
pop
test
in
imul
add
add
outsb
xchg
stos
stos
les
adc
inc
jne
scas
lods
inc
jge
mov
cmp
fistpl
mov
insb
pushf
push
lahf
imul
cmpsb
outsl
stos
xor
dec
or
mov
or
addr16
push
cmpsl
mov
sysret
jnp
fsts
call
push
mov
cmp
push
fisttpl
dec
pop
dec
add
cmpsb
mov
jmp
pop
pop
mov
mov
and
xor
jae
rol
push
aad
ficomps
arpl
or
sub
dec
mov
push
scas
lcall
and
push
mov
and
lods
cld
divb
in
icebp
int
jl
outsl
jge
bound
scas
cli
lret
pop
dec
iret
arpl
jo
arpl
or
pop
pushf
insb
inc
mov
jl
or
mov
sbb
xor
inc
cmp
popl
lods
mov
add
cli
pop
es
leave
mov
xor
scas
pop
in
pop
sub
or
add
dec
push
and
shll
and
dec
push
and
dec
push
and
shll
and
mov
dec
push
sub
or
push
mov
push
push
inc
mov
mov
push
or
insl
scas
sbb
repnz
cmp
mov
je
mov
push
ds
sbb
out
int
out
aas
in
push
push
int
and
jmp
lods
rorl
ss
pop
pop
add
push
ret
insl
xchg
xchg
nop
insb
jle
pop
test
jmp
pop
add
jae
es
leave
shrb
pop
add
mov
pop
push
inc
lea
mov
sti
scas
or
xor
cmp
int3
or
dec
lods
stos
inc
cmp
ds
js
pop
sti
jb
andb
out
cmpsb
outsb
dec
pop
push
pop
mov
dec
aas
xchg
and
insl
xor
xor
pop
clc
out
aad
jl,pn
jno
gs
pop
push
aam
int3
cli
pop
adc
dec
pcmpeqb
daa
lods
xor
in
aaa
pop
mov
xchg
jo
pop
out
inc
cmpsb
mov
mov
lret
jge
rcl
cld
adc
sub
push
jae,pn
test
xor
rclb
pop
mulb
scas
nop
test
leave
sub
in
pop
xchg
jl
sub
mov
xor
sbb
push
inc
mov
cltd
subb
je
and
in
pop
insl
pop
gs
fildl
test
add
pop
test
js
cli
lods
imul
in
sbb
pop
cli
mov
mov
inc
pop
imul
pop
dec
nop
and
and
cmp
lock
or
lret
fbstp
addr16
insb
adc
or
sbb
lea
or
push
xchg
adc
cmc
cmp
subl
sbb
pop
imul
mov
jnp
lea
shrl
mov
ja
pop
xchg
mov
insb
xchg
jns
sahf
jno
rolb
fidivl
xor
pop
mov
in
xchg
pop
jbe
bound
lret
out
inc
dec
mov
dec
in
and
cwtl
dec
insb
imul
gs
mov
lods
mov
pop
xchg
imul
outsl
mov
jno,pn
adcl
insb
pop
push
fs
divb
les
test
inc
rcl
pop
mov
xchg
cmp
insl
mov
and
pop
out
adcb
insl
lcall
pop
mov
out
je
out
pop
push
mov
ret
nop
sbb
cli
pop
data16
cs
repnz
jle
imul
stc
dec
out
or
ffreep
push
je
push
or
lea
sub
pop
or
cmp
mov
push
ss
inc
add
push
pop
lea
inc
js
dec
pop
mov
divl
fs
inc
out
inc
push
inc
add
xor
lods
clc
scas
ljmp
test
in
repnz
cmp
lock
add
fadd
and
push
std
cmp
insb
jnp
add
pop
or
mov
cld
ret
jbe
outsb
addb
jmp
jno
inc
sbb
inc
outsb
lret
repnz
cmp
jl
clc
push
or
inc
loop
pop
add
imul
in
cmp
iret
in
call
jle
out
das
or
push
jae
imul
cmp
imul
push
lea
or
imul
lret
jae
mov
sbb
sbb
jns
jnp
fcmovbe
push
aad
mov
or
cmc
aad
sub
sti
or
and
js
sbb
cwtl
mov
mov
scas
rcl
add
fs
and
dec
pop
insb
jmp
and
pop
cmp
sbb
cmp
popa
jle
repz
jmp
mov
xor
lods
call
in
out
push
dec
jp
mov
pop
dec
das
ss
jge
popa
mov
pop
imul
outsb
pop
jb
jp
dec
cltd
adc
stos
xchg
sub
pop
hlt
sbb
sbb
das
and
dec
clc
les
sahf
vpcmpeqb
mov
push
pop
bound
xchg
cmpsb
sub
loopne
inc
jl
mov
sar
ja
pop
inc
cs
shlb
bound
jo
sbb
fwait
xchg
fs
dec
in
push
mov
push
sub
pusha
push
insb
xchg
cmp
dec
jmp
orb
sub
popf
mov
push
fisttps
pop
les
mov
outsl
push
inc
cmp
pop
xchg
outsb
pusha
sub
cmp
push
mov
lods
icebp
sub
mov
add
incl
pop
icebp
repnz
push
nop
int
popa
mov
fs
or
mov
in
iret
and
inc
push
popf
sahf
cli
cmp
xor
lods
test
rorb
add
adc
popa
sbb
add
dec
lret
xor
dec
dec
mov
sbb
mov
dec
mov
sub
and
adc
push
sahf
jle
mov
clc
test
das
xchg
pusha
scas
push
out
inc
xchg
popa
jo
dec
lds
lret
les
pop
push
xor
fidivrl
push
fcom
lcall
pop
mov
sti
push
clc
and
enter
shrl
mulb
push
and
testb
outsl
push
popa
imul
movsbl
fs
jbe
push
jmp
fimuls
push
in
fidivl
loopne
xor
insb
pop
mov
scas
aaa
pushf
into
ja
call
lcall
mov
add
jl
ljmp
mov
lock
mov
orl
mov
fiaddl
fs
ljmp
ret
mov
and
cld
fs
push
rorl
mov
das
mov
mov
dec
inc
hlt
xchg
push
mov
adc
xchg
nop
dec
scas
jge
mov
inc
outsb
add
push
add
mov
aaa
mov
sar
mov
in
and
fs
adc
xchg
push
mov
adc
jmp
mov
in
mov
sub
xor
xchg
mov
cs
xorb
stos
cmp
mov
mov
ret
aaa
fldt
or
cmp
jno
jb
jnp
jl
xor
xor
mov
jb
xchg
cld
jns
loop
xor
loop
ficoms
outsb
mov
xor
xorl
mov
fdivl
xchg
inc
or
mov
jg
push
sbb
outsl
lock
mov
sbb
xchg
sbb
and
mov
popa
cmp
loop
jmp
mov
cmpsl
stos
jo
pop
xorl
lods
cmp
or
je
cwtl
dec
repnz
jno
jl
inc
sub
aas
sub
cltd
das
scas
jbe
mov
stos
cld
ljmp
or
js
clc
sbb
dec
out
lret
mov
adc
jp
es
push
ljmp
inc
sti
mov
pop
int
push
dec
push
mov
lcall
lods
xor
lods
xorl
add
aam
pushf
lds
call
xor
push
sub
jmp
fucomip
cli
dec
nop
mov
add
out
add
lcall
shrb
cmp
fidivs
xchg
imul
jns
outsl
cmp
or
mov
xchg
and
xchg
mov
pop
sbb
in
aam
es
xchg
mov
mov
adc
in
push
mov
outsb
push
xor
mov
mov
shll
adc
jne
inc
mov
sbb
ds
orb
jne
add
xchg
cli
stc
or
sub
sbb
and
adc
mov
cmpsl
mov
sub
cld
int
mov
popa
test
out
adc
pop
sbb
and
dec
ss
out
addr16
repnz
jno
jns
mov
icebp
daa
jb,pt
fs
outsl
popl
out
lock
bound
mov
jg
cmp
sub
lods
out
cs
les
adc
mov
cmp
push
lock
sbb
outsb
lahf
mov
pusha
sub
or
push
lods
ss
xor
jp
lcall
imul
fcomip
push
ljmp
cmp
dec
repz
out
mov
mov
fdivrl
lods
add
int3
scas
sbb
aad
nop
or
repz
mov
mov
pop
lock
hlt
pop
rclb
in
mov
mov
out
shl
addr16
push
xor
insl
pop
jp
and
jg
push
ret
repz
scas
js
insl
imul
pop
popa
jge
vsqrtss
or
stos
movsb
mov
jae
adc
mov
jo
inc
pop
das
sub
dec
lcall
imul
cmp
cld
sbb
cmp
addr16
cmc
add
stos
mov
sbb
test
imulb
mov
pop
inc
fs
in
das
sub
add
xor
add
arpl
mov
scas
pushf
cmc
cli
mov
rcl
ficoms
dec
pushf
scas
nop
xchg
and
jl
pop
mov
xor
fcompl
push
outsb
push
cmp
or
xor
les
add
add
repz
arpl
inc
arpl
fs
inc
dec
cmp
dec
dec
es
pop
sbb
pushf
cmp
out
cwtl
call
mov
insl
cmpsb
cmp
dec
lods
xchg
push
lods
icebp
mov
cmp
bound
clc
mov
push
pop
dec
or
or
repnz
fsubrp
sbb
bound
xor
leave
xchg
outsb
outsb
rorl
ljmp
mov
lcall
outsb
call
push
aas
fs
mov
cs
sbb
insl
lahf
lds
outsb
xor
mov
cmp
je
out
mov
inc
jecxz
fs
icebp
sub
mov
test
stc
out
pop
hlt
add
mov
je
push
push
test
scas
mov
dec
pop
mov
sbb
lea
mov
gs
stos
pop
das
fs
loop
or
hlt
inc
and
mov
sbb
dec
callw
xor
mov
jecxz
aas
pop
inc
cmp
or
or
test
ja
in
stos
lea
mov
dec
or
jl
ss
in
ret
sub
xchg
mov
decb
fs
stos
lret
mov
hlt
and
iret
sub
xchg
aaa
push
inc
loopne
or
psubusb
xor
sbb
mov
fistpll
pushf
push
mov
pop
jae
rorl
mov
xor
mov
insl
jno
cmp
dec
int
push
push
rcrb
inc
in
mov
repz
in
inc
int
in
fidivl
jp
outsb
jg
jg
arpl
dec
ljmp
fs
jb,pn
mov
mov
xor
push
mov
sbb
cmp
inc
cmp
adc
jb
incb
popa
fstpt
xchg
popf
xorl
push
lods
sbb
xchg
dec
sbb
push
or
push
mov
dec
shrb
lcall
loopne
add
add
pop
mov
mov
mov
icebp
push
sbb
adcb
pop
out
push
adc
lcall
add
es
cmp
cmpsl
in
cltd
mov
sub
xchg
mov
jl
push
sbb
inc
adc
cmpsl
push
mov
das
std
pop
mov
mov
jns
out
loop
pop
sti
sbb
cs
das
insb
jecxz
mov
nop
pop
pop
or
orl
hlt
mov
jecxz
or
popf
test
jmp
fisubs
xor
stos
push
int3
xchg
pop
dec
xlat
xchg
sbb
pop
inc
or
sahf
jb
inc
cltd
sub
cld
dec
or
out
jns
pusha
outsb
jmp
pop
repnz
fists
lods
adcl
shlb
xor
mov
pop
push
inc
sti
mov
jl
cmp
mov
jo
adc
mov
mov
mov
xchg
mov
pop
xor
xchg
in
das
pop
mov
test
mov
jle
add
das
imul
mov
stc
lds
add
pop
mov
stos
mov
dec
dec
je
repnz
pop
xlat
jg
imulb
das
push
imulb
mulb
outsb
mov
add
scas
jb
fsubrs
iret
pop
sub
fadds
or
sarb
push
std
cmp
imul
das
xchg
cmpsb
push
xor
jnp
es
shlb
pop
pusha
pop
ret
out
mov
sahf
xor
icebp
popa
pop
fwait
cmp
ljmp
test
addr16
arpl
repnz
imul
scas
divb
sbb
dec
jge
outsb
push
inc
loopne
repnz
fldenv
jecxz
xchg
and
jl
pop
xor
clc
sub
in
xor
cli
inc
into
dec
mov
shl
imul
push
dec
sub
fildll
or
fisttpll
add
mov
orb
push
or
pop
add
sbbl
lret
std
incb
mov
es
push
mov
subl
push
xchg
cmp
mov
and
in
jno
dec
movsb
dec
jge
cld
pop
fnstcw
xchg
pop
insl
mov
mov
cmp
bnd
jne
popa
mov
jmp
ljmp
clc
testb
mov
jl
mov
js
mov
mov
xor
mov
sbb
pop
sbb
inc
in
xlat
dec
mov
lea
mov
out
pop
dec
adc
stos
testb
or
inc
divl
decb
cwtl
xor
outsb
inc
in
fdivrl
lods
inc
in
pop
js
cs
xor
int3
jnp
stc
in
adc
mov
mov
xor
fsubs
dec
dec
arpl
jnp
or
mov
cmp
dec
mov
cmp
dec
mov
inc
mov
jne
fwait
daa
fdivs
je
cli
xchg
mov
sbb
gs
hlt
sub
mov
icebp
outsb
imul
cmpl
cmpsb
arpl
in
sub
cmpl
lret
cmp
push
dec
rcr
mov
dec
gs
jl
hlt
sbb
mov
sub
mov
loop
mov
pusha
xor
out
mov
mov
mov
loop
dec
stos
or
scas
jl
movsw
fistpll
movsl
cwtl
mov
pusha
jne
popa
push
sbb
icebp
pop
push
pop
sub
lods
icebp
mov
sub
idivb
push
cmp
cmpsb
push
lock
nop
fs
dec
in
xor
hlt
jns
insl
cmp
add
ljmp
mov
or
inc
test
adc
mov
int
sub
mov
jmp
cld
fmuls
aas
lock
sub
push
notl
std
mov
inc
cs
and
lret
pop
rorb
js
inc
mov
xor
cli
inc
mov
fs
dec
xchg
jl
or
inc
fwait
jl
mov
mov
push
dec
xorb
mov
ss
jbe
mov
mov
repnz
dec
sti
inc
mov
jnp
dec
sub
or
inc
outsl
cmp
int3
pop
ss
dec
cli
add
adc
lea
mov
mov
insb
ss
jp
cli
jnp
add
mov
repnz
cli
inc
mov
jnp
jl
cli
test
mov
and
int
inc
add
adc
jae
ljmp
inc
mov
out
jnp
lods
adc
fisubl
inc
nop
fildl
inc
push
inc
inc
jns
pop
xchg
enter
dec
jl
stc
push
mov
inc
mov
push
jge
dec
mov
push
hlt
pop
mov
add
test
mov
outsb
sub
sbb
jp
rcrl
dec
inc
mov
ss
stos
outsl
movsb
xor
jg
cmpsb
and
dec
xchg
ljmp
xor
jne
jne
push
les
jbe
rorl
iret
xchg
icebp
idivl
imul
push
fs
inc
push
enter
mov
jge
lret
add
mov
aas
hlt
xchg
sub
jnp
xor
enter
xchg
das
pop
cmpsl
jmp
jle
pop
fsubrl
sbb
hlt
and
sti
test
jl
jg
cli
pop
jg
mov
sarl
mov
sbb
pop
inc
mov
sarl
mov
sbb
pop
inc
mov
or
xchg
les
and
cli
jl
loop
enter
jae
jl
jnp
or
mov
arpl
xor
dec
pop
add
fidivrs
arpl
cmpsb
in
mov
inc
mov
aam
jg
bound
pop
inc
lret
movsl
in
out
scas
scas
popa
loope
pop
xor
xchg
cmp
dec
or
or
inc
ds
push
lods
iret
mov
sbb
adc
ret
pop
xor
data16
stos
mov
dec
pop
cmp
sub
test
repz
or
jns
dec
testb
mov
dec
pop
push
pop
push
mov
stos
outsb
sbb
rorb
jmp
fs
scas
sub
mov
mov
dec
test
in
pop
pop
xchg
jp
mov
mov
mov
in
cs
lret
insl
mov
pop
iret
xchg
subl
out
mov
mov
inc
jp
mov
or
mov
cmp
inc
pop
mov
scas
in
xor
cmp
xor
jbe
pop
mov
cmp
addr16
mov
dec
pop
push
pop
dec
mov
mov
jne
or
pop
xor
hlt
mov
or
enter
push
cmp
cs
cmp
pop
pop
or
insl
int3
or
or
mov
jp
mov
jl
pop
pop
cmp
push
sbb
inc
ret
dec
push
push
push
or
gs
clc
test
cmc
adc
out
bnd
scas
fdivr
xchg
mov
repnz
push
push
scas
rclb
pop
ss
nop
xor
enter
add
imul
cld
jne
jnp
scas
cwtl
outsb
jae
jae
arpl
xorl
out
movsb
add
sbb
in
fs
lahf
lods
insb
lds
jnp
int3
inc
mov
pop
dec
out
sbb
dec
lea
outsb
dec
dec
mov
scas
dec
push
xchg
xchg
jb
push
jbe
lret
outsl
mov
sbb
mov
inc
push
arpl
sbb
addr16
push
mov
xor
mov
or
outsb
jbe
xlat
in
hlt
pop
fisubl
pop
xor
jl
loop
icebp
rorl
aaa
outsb
outsl
sub
and
movsl
mov
cmp
cs
fcmovu
mov
or
gs
iret
push
dec
outsb
inc
fs
or
add
xchg
push
xchg
sub
inc
pop
push
adc
dec
mov
out
adc
jns
push
jnp
mov
jnp
lret
jge
cmp
dec
inc
inc
mov
pop
insb
xchg
push
add
or
jg
sbb
cmp
dec
mov
dec
jle
dec
addr16
dec
mov
mov
aas
dec
pop
in
xchg
dec
scas
dec
loope
mov
mov
cmpsl
lds
shl
jae
push
or
or
adc
mov
popa
jnp
in
cmp
insl
insb
sub
pop
mov
fwait
ja
sub
push
leave
cmp
sbb
fcoml
movhps
fs
cs
lods
inc
pop
xor
or
arpl
and
outsb
pop
rclb
pop
cmp
dec
mov
dec
jp
dec
addr16
dec
mov
dec
js
inc
adc
dec
dec
sarl
jns
jnp
or
movsb
push
sbb
xor
pop
sbb
in
cmpsl
notb
xor
cli
out
xor
outsb
push
dec
inc
outsb
pop
xchg
mov
scas
dec
test
mov
xor
aam
push
push
mov
scas
jle
mov
adc
out
cmp
xor
mov
and
inc
inc
popaw
lret
pop
cli
out
or
pop
jnp
xor
pop
pop
or
push
pop
inc
daa
aas
outsb
movsl
cmp
fs
or
je
xchg
mov
fildll
fs
imul
cmp
and
push
cltd
decl
and
scas
push
aaa
push
mov
arpl
sub
xor
insl
lret
add
jno
inc
sub
sahf
adc
shld
dec
les
xor
addr16
pop
jge
mov
fs
lods
pop
dec
sbb
xor
aas
fs
add
xor
out
adc
sub
mov
aaa
pop
jmp
sahf
mov
cmp
pushf
je
pusha
nop
out
fsubrs
cmp
fbstp
or
jne
lea
lock
sti
insl
mov
mov
inc
inc
outsl
repz
mov
dec
sub
cs
sbb
movsl
arpl
xor
movsl
pop
mov
sbb
sahf
pusha
xor
or
push
sbb
fwait
and
imul
xor
add
xor
cmp
and
aad
mov
sbb
cmp
cmp
jae
mov
push
pop
repz
mov
jb
std
sub
sbb
arpl
mov
and
xor
jg
out
push
sub
push
mov
je
call
insl
xorl
sar
or
pop
cmp
test
mov
sub
clc
or
pop
enter
push
push
mov
rcll
push
and
popf
inc
mov
xchg
push
repnz
xchg
movsb
push
xor
pop
out
mov
sub
scas
cmp
idivb
ret
mov
cltd
cli
push
xchg
cs
imul
outsb
push
jb
jp
dec
pop
xor
adc
mov
stos
aad
mov
arpl
lret
aad
mov
and
stos
jle
pop
icebp
fsubl
cmp
adc
pusha
popa
lcall
and
inc
mov
push
cld
pop
add
shr
cmp
cmp
or
es
adc
movb
add
in
sub
fscale
es
jecxz
mov
push
insb
mov
xor
adc
stos
jns
dec
cltd
or
sahf
arpl
xor
pop
mov
dec
push
repz
mov
push
cs
sub
push
aaa
repz
jb
dec
jge
adc
movsl
and
int3
inc
jmp
inc
sub
pop
inc
inc
inc
idivb
jle
jp
cmp
jb
jno
jo
and
pusha
sub
mov
cmp
stc
insb
add
sub
and
cmp
outsl
rcll
shrb
xor
add
scas
gs
or
in
jle
into
dec
sbbl
sbb
les
enter
pop
popa
cli
dec
rorb
fwait
bound
pop
in
push
mov
dec
hlt
mov
loope
jg
dec
outsb
pop
fcomps
inc
pop
cmc
pop
xor
mov
cli
jno
xor
cmp
test
xor
jno
and
pop
movsl
mov
mov
cmp
ja
sub
fcoms
pop
icebp
cmp
repz
daa
mov
pop
pop
js
and
imul
mov
dec
cltd
in
add
outsl
mov
out
push
mov
je
xor
call
sub
jno
std
scas
mov
loop
and
cli
push
mov
aad
repz
movsl
in
dec
outsb
daa
imul
addr16
aad
fildll
cmp
in
lds
in
imul
mov
mov
or
and
bound
addr16
dec
out
das
into
pop
mov
mov
gs
sub
fs
aaa
lods
insb
xchg
or
fs
inc
inc
lods
or
and
stc
cli
pop
in
arpl
cld
xor
mov
cltd
shlb
mov
bnd
dec
pop
push
popf
adc
call
xor
xorb
adc
leave
jmp
fs
pusha
insb
push
es
sub
mov
push
mov
push
dec
std
mov
pop
cmp
cltd
icebp
paddq
jp
mov
pop
adc
shll
ja
push
lea
repnz
jne
and
sti
inc
dec
dec
adcl
lods
inc
pop
adcl
popa
cltd
daa
in
mov
aas
and
dec
pop
outsb
lahf
jo
mov
pop
aas
mov
outsb
scas
pop
aam
fwait
xor
lea
mov
outsb
pop
jge
pushl
lds
cmp
jne
ficomps
mov
stos
out
in
adc
icebp
loopne
scas
or
mov
jae
dec
stos
ret
sbb
jle
cmp
mov
inc
shll
add
xor
or
or
push
mov
mov
and
loope
aas
mov
inc
pop
pop
add
popa
add
jns
mov
jno
outsb
xor
fnstenv
popl
mov
add
ds
add
dec
adc
pop
ret
or
mov
insb
js
or
outsb
dec
pop
das
jp
inc
push
outsl
jo
lret
cmpb
mov
pop
jmp
nop
xchg
lods
jbe
cltd
pop
jmp
add
sbb
outsl
dec
repnz
cmpsl
test
jns
push
outsb
dec
dec
sub
lahf
ret
lahf
out
jae
push
xchg
dec
mov
out
cs
inc
shufps
in
xchg
inc
scas
xor
insb
jne
fisubrl
inc
cmp
mov
adc
jecxz
inc
lcall
dec
inc
fiaddl
repnz
mov
jns
lock
in
push
or
jg
scas
inc
dec
mov
hlt
call
popf
sahf
repnz
sub
push
inc
scas
xor
inc
dec
xor
pop
sbb
sub
daa
inc
and
xor
mov
xchg
imul
adc
cld
aam
movsb
insb
std
das
sbb
inc
daa
insb
repz
add
insl
test
cli
xlat
jae
stc
dec
mov
jmp
fdivr
movsl
jnp
clc
shlb
negl
cli
mov
adc
stc
xor
jns
test
inc
jl
pop
xorb
cmc
stc
adc
mov
jl
inc
mov
inc
pop
inc
push
cli
inc
dec
sti
inc
mov
scas
outsb
inc
adc
insb
fs
in
bound
push
fs
outsb
lret
jmp
dec
jl
mov
subl
mov
das
pop
into
bound
popa
adc
and
in
xor
dec
sbb
cld
and
inc
and
xchg
dec
dec
fidivs
orl
stos
sub
mov
inc
sub
fadds
outsl
and
dec
aaa
test
fdivrs
and
das
push
pop
cs
mov
mov
jbe
adc
mov
cmpb
inc
jb
sti
inc
jg
icebp
bound
inc
and
push
fidivrs
sbb
scas
outsl
movsb
or
and
cwtl
ret
bound
and
inc
xor
in
dec
or
inc
arpl
int
pop
lods
xchg
mov
inc
das
repnz
out
int3
mov
push
dec
std
iret
adc
int
in
outsl
stc
int3
ret
movsb
leave
jl
subl
cli
stos
scas
mov
mov
pop
inc
adc
lcall
or
aam
hlt
cltd
jg
pop
pop
adc
cmp
dec
mov
je
mov
shl
scas
fs
aaa
arpl
stos
push
xchg
dec
xor
in
adcb
popf
dec
sarl
mulb
mov
in
mov
mov
fldl2e
mov
add
cmpb
sub
xchg
out
nop
sub
neg
dec
jmp
insl
das
pop
sub
mov
cmp
sub
fs
cs
orb
push
sub
sub
loope
push
scas
rclb
outsb
mov
push
les
mov
jnp
lods
inc
add
aam
push
xchg
icebp
mov
lret
cwtl
sahf
xchg
or
inc
incl
xchg
je
bnd
fisttps
ljmp
and
pusha
jmp
dec
fstl
and
dec
cld
ds
push
je
inc
rcll
jnp
ret
inc
jo
push
scas
cli
inc
rcrb
insl
pop
rcrl
pop
push
jl
pop
cmc
movsb
cs
lods
mov
popa
jl
test
outsl
sbb
leave
shrl
mov
xchg
jns
adc
ret
andb
mov
daa
insl
mov
popa
push
inc
iret
mov
lret
add
sahf
jge
std
rolb
jb
repz
js
dec
jne
sub
cltd
adc
push
push
test
add
into
bound
adc
lods
or
mov
and
gs
popf
dec
xchg
and
lcall
mov
mov
std
dec
fs
mov
lcall
pop
jmp
clc
jne
jnp
jle
leave
int3
mov
lret
shlb
push
push
jns
mov
mov
movsl
sahf
movsl
scas
leave
shrb
je
mov
push
imul
in
icebp
cmp
aas
pop
fwait
sub
sub
cs
pushf
pop
or
sub
cmpb
or
testb
xchg
xlat
in
fmull
dec
push
mov
jb
jae
je
outsl
scas
and
les
xor
xchg
dec
push
mov
jo
inc
sbb
cmp
mov
setno
hlt
outsb
sub
lods
jb
movsb
adc
stos
vphaddwd
sub
addr16
inc
ja
int3
xchg
ja
test
xchg
mov
out
cld
insb
out
das
adc
repz
outsl
enter
xor
insl
mov
push
popf
mov
ret
mov
mov
rorl
pop
mov
jae
push
mov
fwait
mov
inc
int3
pop
mov
bound
dec
aam
das
push
dec
loope
jne
adc
mov
into
dec
rcll
std
bnd
scas
pusha
or
xchg
ss
scas
pop
cld
in
mov
pop
xor
push
mov
mov
sbb
mov
push
add
or
cmp
inc
push
dec
jne
out
mov
inc
dec
std
jnp
mov
jl
insb
jbe
ljmp
adc
pop
add
push
rorb
pusha
dec
inc
test
jne
cmp
outsb
popa
imul
push
push
mov
scas
sti
repz
mov
in
insl
repnz
outsl
fs
nop
mov
in
les
cmp
cs
rcr
sub
sahf
sub
iret
mov
mov
cmovnp
loop
outsl
mov
mov
hlt
xlat
jb
in
mov
shl
jns
lea
jne
sub
popl
icebp
arpl
inc
mov
cmp
outsl
and
push
or
xchg
stos
add
lret
stos
add
lods
push
sti
jno
adcl
dec
je
pushf
notl
push
cld
call
push
std
dec
pop
jl
scas
dec
jp
stos
out
xchg
fldenv
ret
jmp
mov
shll
sbb
orl
js
xor
pushf
xchg
aaa
push
xchg
sbb
loopne
sarb
lahf
fstpt
xor
insb
sbb
insl
pop
dec
add
insb
mov
sti
cli
jno
cmp
jg
push
je
dec
mov
mov
aam
pop
mov
lcall
std
inc
jg
das
movsb
ficomps
divb
ja
xchg
adc
add
lds
mov
lea
pop
mov
das
les
sub
sbb
pushf
jae
dec
mov
push
inc
mov
jns
pop
inc
fadds
jg
add
cmp
mov
fs
mov
dec
aaa
mov
xchg
loope
add
out
push
into
fldt
add
into
jo
mov
jnp
or
xor
es
mov
mov
fcmovu
pop
jge
cwtl
pop
sbb
out
je
dec
aad
int3
or
cmp
push
mov
mov
stos
ret
xor
hlt
xchg
xchg
vmovupd
xor
pop
jge
fistl
out
sbb
lea
sbb
xchg
xorb
cmc
inc
push
push
cld
push
sub
arpl
rcr
outsb
dec
arpl
movsl
lret
cmp
xchg
inc
mov
rcr
ss
lahf
inc
insb
fs
xchg
lods
in
cmp
pop
xchg
notb
test
rclb
xchg
mov
cmc
xchg
inc
xor
inc
pop
cmc
xchg
push
in
movsb
js
stos
mov
rorl
jl
push
outsl
aam
inc
fbld
in
jne
sbb
outsb
popa
rcrb
cmp
jnp
pop
aam
je
dec
shlb
fs
dec
cmp
insb
pop
cmp
ficomps
push
xor
add
rclb
and
inc
push
jae
jnp
mov
push
nop
jns
lds
in
wbinvd
fsts
incb
add
xor
and
lret
fistl
fdivl
sbb
sahf
sub
stos
pop
out
cmovl
shrb
mov
ficomps
std
pop
in
cwtl
imul
sub
in
lods
hlt
data16
inc
popf
ja
jbe,pt
jecxz
xchg
inc
sub
mov
iret
je
in
and
test
out
loop
xchg
cmp
in
pop
pop
mov
insb
cmp
push
je
add
dec
xchg
test
sub
mov
mov
loop
sub
sbb
mov
mov
fs
xor
pusha
and
inc
lret
subl
fs
ret
mov
ljmp
inc
stc
sahf
pop
add
into
into
jmp
and
cmp
test
pop
push
jg
outsb
mov
imul
iretw
push
inc
fwait
sbb
ficoml
movsl
or
cmp
mov
pop
mov
fmuls
pusha
les
mov
push
mov
pop
clc
mov
gs
push
cmp
cmp
jg
fidivs
lds
out
mov
int3
imul
mov
push
xchg
sbbb
mov
stos
aad
pop
jnp
dec
push
inc
jge
pop
xchg
mov
pop
int
std
lahf
pop
add
insl
lcall
fisubrs
hlt
cmp
pop
jl
dec
jle
or
fld
push
inc
push
mov
les
into
pop
decb
lods
fbstp
and
mov
fs
bound
shr
aam
mov
fmull
iret
fadds
out
mov
bound
imul
daa
jb
mov
out
das
push
mov
mov
aad
cmc
fs
or
out
or
aam
sbb
or
push
in
sub
sti
pop
je
lahf
sti
shrb
pop
jb
imul
andl
inc
lock
mov
lods
or
test
sbb
mov
inc
lock
pop
mov
rcl
adc
iret
stos
xchg
fildll
inc
popa
mov
popf
das
ss
inc
push
ds
out
imul
out
dec
in
pusha
pop
lret
sub
or
mov
xor
mov
shrb
xor
mov
clc
subb
xor
loop
sub
pop
lcall
sbb
sbb
sbb
orl
push
hlt
lods
cmpb
add
aad
push
xchg
and
cmp
rolb
shl
lods
pushf
adc
in
pop
fisubs
xchg
stos
pop
jle
les
dec
fdivrs
and
sbb
popa
repz
lea
pop
pop
dec
jno
mov
mov
movsl
out
inc
fsubrl
jns
in
pop
xchg
xor
pop
cmp
push
fs
add
aas
cld
pop
dec
jnp
add
sub
pop
sbbb
dec
jmp
jecxz
inc
push
ljmp
out
jge
sbbb
or
mov
lods
les
or
bound
mov
outsl
lods
je
pop
out
out
push
jge
pop
mov
fbstp
jns
pushf
mov
sbb
jne
mov
ljmp
adc
test
scas
call
pop
push
mov
out
or
inc
ds
scas
mov
jo
ficomps
fstl
std
fistps
xor
mov
add
jl
pusha
dec
int
jbe
bound
incb
and
fs
mov
test
mov
mov
std
aad
outsl
insl
gs
mov
mov
push
lods
aad
inc
jle
sub
fisubrl
dec
loope
mov
cmp
dec
mov
repnz
sub
inc
fdiv
cmp
push
cmp
in
dec
push
imul
cmp
je
push
lock
inc
movl
sbb
mov
dec
inc
xor
xor
pop
xchg
cwtl
popa
jo
stos
dec
xchg
pop
add
sub
pop
xchg
dec
popa
adc
mov
movsl
hlt
cmp
sbb
cltd
or
push
scas
pop
dec
push
jge
bound
mov
ja
loopne
jp
pusha
rcrb
adc
sub
insl
pop
cld
aaa
nop
mov
mov
mov
iret
mov
sbb
paddw
popa
mov
push
dec
adc
sub
mov
mov
pop
cmp
cwtl
jl
jno
push
mov
cmpsb
push
cs
xchg
mov
mov
mov
movb
and
fs
cwtl
cmp
xor
mov
jmp
mov
fs
xlat
pop
repz
inc
sub
jns
sti
jl
pop
in
mov
aas
sub
adc
mov
push
xchg
aad
mov
sbb
dec
pop
push
mov
cmpsb
pop
cs
mov
aad
jae
sti
cmp
dec
or
sub
dec
scas
pop
pop
ljmp
inc
in
test
cli
push
cmpl
ja
push
dec
jl
lret
testb
js
outsb
pushf
add
cmc
sbb
rolb
dec
outsb
in
sbb
out
mov
shrb
jl
push
jle
cli
and
pop
dec
push
cli
cld
bound
pop
sub
out
inc
pop
cmp
pop
jp
push
loope
sub
insl
repz
ja
inc
jge
pop
bound
aam
mov
test
cs
jl
sbb
cmpsb
sbb
jb
push
nop
lcall
aas
out
inc
push
mov
inc
repnz
out
inc
in
loopne
cltd
inc
inc
test
cmpsb
insb
mov
out
and
and
clc
xorb
add
mov
pusha
sub
mov
mov
jle
insl
das
aaa
out
insl
mov
xor
adc
push
pushf
orl
fwait
sub
in
fs
aam
adc
xor
iret
xchg
je
ja
and
sub
mov
aam
mov
ja
insb
dec
lods
sub
popa
arpl
sub
cmp
nop
add
or
jl
add
mov
jb
pop
xchg
add
call
out
xchg
mov
push
repz
cmpsl
dec
pusha
xor
stc
xor
jno
jmp
bound
cmp
data16
ret
mov
das
clc
jl
jno
out
jb
ljmp
sarl
sub
loope
pop
les
inc
nop
and
rep
add
imul
sub
push
enter
push
or
in
inc
push
pop
dec
jmp
inc
mov
push
xchg
enter
sahf
dec
dec
xor
in
imul
mov
aam
inc
mov
sbb
scas
cmp
jle
stos
outsb
sub
sub
xor
fcomi
ficomps
fsubs
add
arpl
ss
pop
cmp
dec
les
mov
outsb
leave
in
fidivl
xchg
scas
push
pop
inc
inc
push
bound
int
cli
adc
lret
push
add
cmovg
sbb
push
mov
insb
fs
mov
into
repz
or
inc
fistpll
inc
call
inc
mov
inc
ret
inc
dec
mov
ljmp
push
enter
pushf
shll
loope
imul
arpl
aaa
and
imul
mov
fs
sbb
pop
sub
ds
xchg
push
mov
dec
and
cmp
jle
lcall
pop
mov
cld
and
jo
test
mov
mov
push
cmc
mov
jno
ja
adc
int
push
mov
dec
mov
mov
jle
inc
les
cmc
arpl
popa
jp
xchg
inc
cmp
xchg
cmp
pop
jle
hlt
into
sub
sahf
mov
push
pop
dec
cmp
sbbl
mov
scas
and
int3
pop
ss
and
pop
sbb
push
mov
call
mov
insl
dec
mov
sub
lods
push
fidivrs
cld
mov
test
pop
inc
adc
xor
mov
push
dec
movsl
sarb
fbld
int3
pop
pop
mov
inc
xor
loopne
fisubl
idivl
icebp
pop
or
ret
je
add
fisubrl
pop
stos
jns
pop
push
inc
stc
sbb
jno
stos
cwtl
mov
lods
or
cmp
pop
xchg
sbb
pop
jmp
pop
mov
jnp
or
sti
lods
enter
pop
mov
inc
xor
sub
pop
scas
inc
inc
test
mov
pusha
addr16
mov
test
lods
stos
xchg
outsb
lds
lods
insb
jns
pop
push
inc
stc
sbb
inc
push
or
push
dec
fwait
mov
pop
sbb
xor
lods
loop
scas
inc
inc
test
mov
addr16
dec
jle
xor
in
add
cs
fcomip
or
inc
sbb
jno
cmp
cmp
jbe
fnsave
push
dec
jns
jae
rcrl
loope
negb
popa
push
std
les
jnp
cmpl
inc
ret
push
sub
or
jb
mov
fcoml
iret
aas
daa
in
sbb
inc
and
sub
jp
pop
inc
push
rorl
popf
scas
add
popf
dec
jp
jle
popa
insl
jl
pop
lret
dec
and
lock
jbe
stc
push
sbb
sbb
pop
rcrl
enter
xchg
xchg
loopne
jmp
and
xchg
cmp
test
push
push
jle
loopne
int
icebp
dec
insl
rcrb
sarb
rclb
jbe
nop
subl
out
leave
inc
fsubp
int3
int3
into
mov
mov
in
loope
jns
sub
push
js
in
adc
roll
dec
mov
pop
cli
js
sbb
jle
stc
dec
jg
out
into
cli
bound
and
int
add
dec
push
cmp
pop
mov
push
clc
frstor
fistl
and
loope
jl
push
mov
jmp
jle
in
aam
or
pop
adc
push
xor
fcoms
dec
lods
loope
adc
cmp
mov
call
pop
sub
adc
or
jae
cbtw
scas
xchg
or
outsb
cmpsb
push
xor
cmp
out
mov
mov
pop
stc
sti
pop
sub
test
or
ja
xor
and
dec
in
sti
inc
xor
pop
pop
dec
bound
fs
fisttpll
cwtl
mov
test
pop
mov
or
jae
fcomip
jl
xchg
mov
xchg
sbb
inc
inc
dec
loopne
push
int
jge
xchg
and
sub
test
dec
imul
adc
enter
out
jb
adc
pop
push
andl
cmp
xchg
popa
es
mov
scas
add
dec
fs
out
add
jne
jg
fdivl
mov
pop
sbb
and
daa
sub
popa
shr
and
add
outsb
lds
shr
adc
pop
test
lret
in
jbe
stos
into
dec
imul
push
ret
jl
test
add
in
push
inc
mov
xchg
into
rcl
xor
cmp
in
mov
push
xor
fs
fs
mov
je
cmc
rcrb
stos
mov
lods
push
pop
stos
rorl
dec
mov
pusha
lods
adc
out
cmp
pop
xchg
pusha
outsb
pusha
jb
mov
ljmp
gs
divb
cmpsl
sbb
cmp
push
outsb
arpl
stos
je
and
mov
cmc
out
jae
loop
jmp
xor
fs
cmc
fisubrl
cmp
sub
lock
lds
jb
loop
lahf
xchg
daa
lods
fdivrl
mov
sbb
push
shl
rol
data16
xchg
jmp
mov
mov
int3
mov
mov
mov
pop
test
inc
xchg
sbb
addr16
push
test
shl
in
sbbb
movsb
xchg
insl
mov
scas
bound
inc
icebp
add
dec
xor
pop
push
cld
pop
rclb
mov
or
cli
sub
clc
add
sbb
data16
or
cltd
inc
push
mov
dec
pop
xor
cmpsl
push
call
out
xchg
cli
mov
cmp
jb
stos
or
cmp
scas
jb
outsl
fs
loop
pushf
dec
hlt
movsl
shlb
pop
imul
add
push
adc
xor
insb
lahf
dec
pop
mov
data16
fadd
mov
lods
cmpl
pop
cmp
aaa
sahf
insb
jp
xchg
shrb
inc
cmp
push
js
sub
stc
lock
clc
jbe
cmp
js
shll
insb
ret
inc
xchg
or
hlt
inc
push
enter
gs
mov
push
pop
sub
jb
mov
mov
ds
mov
cmc
daa
dec
mov
xchg
sahf
jne
or
cmp
fs
cmp
xchg
jmp
jmp
dec
pop
shlb
stc
into
or
mov
dec
shlb
dec
pop
aam
je
adc
dec
test
sbb
orb
cmp
gs
push
mov
cmp
leave
pop
dec
inc
mov
sti
push
iret
sbb
jp
popf
sbb
popa
mov
dec
push
pushf
and
outsb
inc
shlb
jo
cmp
push
sbb
cmp
shrl
cmp
xchg
loope
push
and
fldl
int
outsb
movsb
inc
rclb
data16
mov
test
cmpsb
mov
push
fs
in
sar
xor
ljmp
arpl
in
repnz
mov
add
xor
sbb
mov
pop
push
hlt
mov
xchg
push
daa
in
fdivrl
aad
push
data16
cli
scas
icebp
adc
mov
push
push
arpl
outsl
pop
addr16
in
cli
call
mov
clc
fiaddl
dec
enter
push
dec
movsb
rorb
ds
scas
mov
dec
jg
mov
ret
push
js
call
pop
in
adc
push
mov
out
subl
and
dec
clc
push
insb
hlt
adc
adc
lods
pop
stos
sub
fwait
push
mov
rclb
in
adc
fchs
pop
mov
add
inc
mull
sti
jl
mov
lahf
or
scas
jbe
jbe
sub
or
in
fadd
shlb
inc
test
xchg
xchg
pop
adc
outsb
test
jbe
pop
jo
jge
mov
rol
div
out
xor
neg
jg
mov
mov
add
pop
inc
sbb
insl
mov
jns
mov
das
mov
hlt
mov
cmp
xor
inc
mov
inc
js
sub
movl
data16
xor
das
or
jp
pop
aaa
sub
mov
or
adcb
loop
gs
fsubs
aas
fsubs
or
les
lods
jle
fsubrs
repnz
addr16
pop
shrl
inc
movsl
cwtl
dec
insb
bound
aas
shl
xchg
xchg
cmp
inc
jge
mov
inc
mov
sbb
jmp
imul
lods
test
and
movb
mov
insb
int3
dec
pop
lods
insl
push
mov
jae
sub
lret
sbb
fistpl
push
sub
pop
cltd
mov
pop
rorl
jge
and
lret
outsb
bound
or
sub
inc
and
out
sbb
jns
dec
inc
fdivs
mov
sub
insl
mov
in
or
dec
xchg
xchg
jo
scas
insl
clc
push
cwtl
std
adc
xorl
sarb
jo
ret
das
cld
add
repnz
mov
mov
daa
outsl
dec
mov
cmp
icebp
or
jbe
mov
mov
das
ljmp
ja
rol
mov
lcall
lret
outsb
insb
ljmp
cli
bound
je
bound
mov
lcall
xchg
ret
push
std
or
je
add
enter
fidivrl
mov
mov
mov
cmpb
movsb
bound
xor
cmp
shlb
dec
pop
aas
mov
mov
and
mov
clc
push
aam
das
lret
fldenv
aas
sbb
rcll
add
or
std
jle
loope
cld
xchg
or
rolb
ljmp
xchg
movups
call
rol
jl
leave
and
pop
das
std
in
aam
out
cmc
pop
mov
aas
cs
out
mov
lods
inc
dec
push
xchg
xlat
jne
popa
dec
pop
int
aaa
adc
into
push
jmp
lock
scas
sbb
les
add
nop
rcrb
movsb
cmc
stos
les
lods
push
shlb
mov
repz
sbb
inc
lea
mov
clc
bnd
mov
stos
in
fnstcw
pop
mov
daa
adc
push
jae
xor
jg
into
or
cmc
ret
mov
cmp
and
xchg
mov
push
std
mov
lret
adc
divl
push
pop
adc
les
insb
leave
jmp
shr
xchg
inc
popa
inc
push
or
cli
je
inc
fnstsw
fiaddl
dec
pop
mov
mov
mov
insl
mov
xchg
adc
xchg
inc
js
in
xor
outsb
jo
and
insl
loope
push
pop
pop
outsb
jae
fwait
mov
icebp
imul
outsl
je
dec
sti
sarb
mov
int
mov
pushf
dec
dec
or
ljmp
or
dec
daa
cmp
pop
dec
mov
mov
cmp
or
dec
push
xchg
add
js
stos
mov
call
hlt
bound
lods
or
mov
inc
lcall
xchg
sbb
repnz
or
gs
pop
inc
stos
mov
and
push
insb
pusha
adc
jne
add
add
dec
jne
insl
stos
inc
dec
mov
cli
fs
adc
outsb
pop
stos
dec
dec
mov
mov
in
mov
scas
inc
rol
mov
in
mov
insb
jns
mov
jo
or
jno
mov
aad
sti
outsl
mov
pop
jb
jnp
mov
sub
test
add
arpl
popa
mov
fidivrl
push
pop
inc
arpl
pop
imul
jmp
dec
jnp
add
add
scas
push
jae
mov
insb
stos
jnp
jle
add
mov
push
mov
and
add
stos
inc
mov
push
fwait
jge
push
mov
mov
popa
dec
sub
inc
cs
jns
push
mov
leave
mov
sti
in
add
xchg
mov
pop
fs
cli
inc
in
add
xchg
cmp
mov
mov
loop
out
imul
xchg
loope
mov
inc
pusha
xchg
ljmp
lods
das
mov
xor
add
mov
shr
adcl
pusha
pop
insl
push
repnz
dec
xor
je
dec
cmp
dec
pop
outsb
jo
jp
cmp
bnd
repnz
dec
repnz
icebp
mov
shll
inc
pop
iret
data16
add
pop
jnp
stos
mov
incb
rcll
pop
repnz
js
stos
dec
push
insl
cli
pop
jge
pop
fsubrs
mov
sar
xor
stos
je
test
js
test
jmp
sti
sbb
ja
adc
movsb
orl
mov
in
dec
mov
jnp
movsb
std
aaa
loop
ss
adcl
rolb
mov
aad
outsl
cltd
frstor
outsb
pop
jg
into
sbbl
outsl
xor
push
ret
cmp
push
ljmp
jno
or
cmpl
jnp
cmp
stc
mov
or
cmp
jbe
dec
lods
adc
add
scas
lds
dec
cmp
data16
jae
sahf
mulb
cmpsb
dec
lock
dec
outsl
aaa
and
push
push
jne
pop
mov
sbb
and
loopne
dec
clc
jmp
inc
ja
and
dec
xchg
lods
xchg
adc
test
iret
sub
out
cli
push
pop
jb
pusha
das
push
xchg
mov
jnp
lock
mov
je,pt
pop
adcl
jne
adc
pop
cmp
jae
or
mov
jle
dec
cmpsb
add
mov
je
xor
mov
leave
int
imul
mov
je
jbe
outsl
repz
insb
sbb
and
sub
mov
ljmp
dec
pop
insb
sbb
mov
cmp
dec
xchg
fcmovne
mov
std
xchg
jmp
fistps
jb
stos
mov
out
push
jne
enter
xchg
mov
jge
aam
test
jno
jnp
decb
pop
cli
outsb
loop
mov
in
pop
push
outsb
inc
pop
and
stos
mov
dec
mov
mov
push
push
adc
fdivrs
lahf
mov
mov
out
adc
xchg
sub
mov
sub
push
int
mov
int3
addr16
sub
mov
imul
xor
fs
push
insb
lret
cmpsb
pop
mov
pop
aam
loopne
or
lcall
inc
xor
pop
inc
mov
inc
loope
fs
scas
and
mov
jne
pusha
lock
imul
in
out
je
push
xor
cmp
mov
dec
jno
test
xlat
cmc
rcrb
dec
decb
imul
mov
leave
push
stc
fadd
shll
jge
out
mov
popa
movsb
addr16
pop
js
adc
fists
repnz
movsb
dec
cmp
int
jnp
ja
clc
arpl
jecxz
xor
ror
push
in
stos
and
gs
loop
sahf
shll
pop
fsubs
roll
push
and
sub
gs
adc
adc
pop
push
inc
insl
adc
hlt
xchg
data16
fsubs
sub
push
mov
mov
cmpsl
repnz
imul
mov
mov
mov
jo
add
push
stos
pop
jp
and
das
mov
sbb
mov
xchg
out
and
lea
or
sub
xchg
out
dec
mov
aaa
mov
mov
jmp
mov
pop
subb
sbb
push
jae
es
push
enter
mov
xor
fucomip
ret
or
sahf
into
ret
xchg
ljmp
cmp
packsswb
call
icebp
inc
cld
daa
dec
mov
dec
lods
dec
xor
cmp
fwait
jb
insl
ja
imul
bound
lea
jb
arpl
push
mov
dec
mov
popf
cmp
fldt
negb
divl
scas
cmpl
icebp
js
sti
mov
mov
shrb
cmp
sahf
dec
xor
inc
xchg
insb
inc
inc
scas
push
add
insb
mov
push
sti
jno
push
dec
lds
dec
mov
ljmp
jg
aaa
fdivs
shrl
xor
or
ds
sub
stos
push
or
or
popa
cwtl
scas
add
jb
inc
xor
jnp
lret
cmpsl
lahf
cmp
fsubrl
out
aaa
iret
mov
mov
insl
insl
ljmp
sub
sbb
lock
fcmovnu
push
imul
push
sbb
in
addr16
ds
pop
addr16
xrelease
leave
divl
lahf
xchg
stos
or
mov
in
xchg
cmovno
sub
dec
bound
ljmp
cmp
int
mov
sbb
sbb
mov
add
bound
inc
xchg
inc
add
andb
pop
sbb
fadds
push
test
xchg
cltd
repnz
cmpsb
xor
mov
ret
xor
inc
mov
sahf
call
hlt
popa
mov
shll
xchg
fadds
lret
ds
push
cmc
xchg
clc
movsb
mov
hlt
lods
repnz
aas
andb
mov
dec
cmpl
jne
les
fwait
dec
jbe
push
hlt
cli
pusha
xor
sti
sahf
lds
cmp
mov
out
dec
sub
das
sub
mov
or
movzbl
pop
andb
clc
mov
mov
cmpb
jno
mov
sbb
fs
pop
push
add
pop
mov
lods
arpl
mov
popf
jle
outsb
jne
dec
xchg
mov
jmp
stos
cmpsb
int
xor
pop
pusha
sarb
push
pop
jb
dec
adc
sub
fxch
jb
out
movsl
in
cmp
outsb
pop
mov
arpl
mov
jp
cltd
addr16
lret
pop
insb
jp
sub
imul
enter
in
andb
pop
sub
lds
fidivs
outsl
xchg
test
popa
mov
or
repnz
mov
cmpl
xor
fiadds
pusha
sbb
mov
jl
xor
enter
and
pop
add
icebp
mov
jo
aas
jmp
es
loop
and
adc
or
int3
pop
pusha
push
dec
mov
outsb
mov
push
pop
jno
negb
or
ds
sbb
dec
arpl
test
hlt
jg
sub
inc
mov
push
jecxz
push
mov
or
aaa
lods
adc
jp
loopne
in
xchg
cmp
pushf
mov
lcall
decl
xorb
sar
vcmppd
mov
mov
mov
and
and
jno
sti
out
and
dec
aaa
mov
jg
cs
cwtl
imul
hlt
nop
sub
add
mov
cmp
sahf
jne
sbb
cmp
jae
dec
dec
mov
das
or
stos
je
xor
push
mov
lea
add
rorl
sub
sbb
dec
jge
and
ss
inc
andb
pop
jne
insl
or
lahf
das
loop
mov
push
xchg
jp
push
dec
aad
adc
sub
mov
pusha
jmp
push
adc
shrb
loop
xchg
das
in
imull
loop
adc
icebp
cs
jmp
xor
arpl
cld
xlat
inc
lods
push
mov
sbb
push
addb
xor
dec
pusha
xor
daa
stos
push
xchg
pop
psrad
dec
cmp
scas
cld
mov
insb
outsl
mov
incb
addr16
pop
repz
je
mov
sbb
int3
insl
arpl
hlt
or
xchg
push
lret
jecxz
popa
aam
cs
lods
jle
inc
pop
loope
dec
out
stc
lret
xor
or
outsl
test
fs
sti
daa
movnti
lods
push
mov
das
add
lods
push
test
pop
push
mov
push
xchg
xor
lcall
jle
or
jmp
lods
push
cmp
popa
inc
faddp
adc
mov
mov
cmp
dec
and
mov
cmp
ret
roll
push
lock
cmpb
int
outsb
dec
movsb
test
fcomps
push
adc
popf
xor
sbb
mov
xor
imul
insb
popa
cld
xor
scas
inc
repnz
mov
cmc
ljmp
jbe
fidivrs
sub
mov
and
scas
add
cld
repnz
lea
xchg
iret
lods
das
fs
test
push
mov
lock
leave
or
stos
into
inc
jns
clc
jle
data16
and
push
mov
int
test
pop
into
adc
jns
push
mov
dec
sub
lods
sub
outsb
jg
jnp
mov
adc
repnz
fcoms
push
lea
mov
cld
shrb
jnp
xor
aas
and
sub
scas
adc
subb
push
pop
lret
lahf
or
rol
loopne
mov
imul
lods
cmpsl
mov
sbb
dec
mov
cld
dec
icebp
sarb
adcl
lcall
jle
sub
in
jnp
sbb
inc
ds
xchg
mov
pop
mov
std
icebp
or
mov
and
pop
pushl
sub
jge
pop
popl
pop
ljmp
mov
cmp
test
pop
rol
loop
fwait
and
in
in
nop
cld
imul
pop
rorb
mov
cltd
cli
sub
jns
jae
lea
in
hlt
cmp
jle
or
ret
dec
add
pop
inc
in
inc
pop
dec
mov
lods
jb
jmp
repz
or
inc
mov
sub
cmp
push
push
mov
sub
lods
clc
mov
sub
leave
popa
pop
in
xlat
in
inc
loopne
sar
aad
sub
and
dec
mov
pop
adc
jg
imul
js
fidivrs
or
lcall
pop
popl
int
mov
mov
xchg
loop
inc
jbe
pop
jecxz
mov
mov
lret
subl
or
ljmp
mov
fs
cmpsl
sub
out
out
sbb
insb
cmpl
insb
jbe
dec
jnp
sub
popa
call
jbe
mov
mov
jg
in
pop
outsb
inc
sbb
dec
mov
test
mov
nop
imul
inc
mov
fs
les
sbb
xor
int
mov
in
scas
stos
mov
rclb
mov
jne
ficoml
out
popa
fs
mov
mov
sub
mov
iret
sub
inc
inc
ds
jecxz
mov
mov
je
dec
inc
aam
inc
mov
lret
aad
inc
loop
loope
cwtl
scas
cmpsl
xchg
xchg
push
stc
mov
cmp
dec
inc
in
lock
call
xchg
lret
cmpsl
xor
ss
outsl
mov
pop
dec
ret
fldcw
dec
sub
outsl
aad
pop
inc
dec
xor
mov
inc
push
mov
or
sub
mov
aam
or
cmp
fs
or
out
jp
dec
jnp
enter
lock
cmc
inc
test
or
fdivrl
fwait
shrl
and
cmp
cmp
fdiv
cmp
xor
fs
cmp
pop
pop
ds
push
imul
insb
das
fimuls
xchg
je
jb
cmp
xchg
mov
adc
pop
ja
lods
iret
push
inc
jp
add
test
jmp
aam
adc
adc
cmp
mov
scas
sbb
mov
jae
pop
rcll
dec
dec
cli
sar
data16
sub
and
loop
or
lods
jg
ja
sbbb
xor
lret
mov
jae
dec
inc
rcll
ljmp
push
imul
int3
fidivrs
lock
mov
cmp
xchg
mov
cmp
fmull
lret
dec
jb
adc
jno
repnz
adc
xchg
mov
jnp
jns
inc
fstp
int
xchg
es
mov
inc
xchg
pop
add
adc
mov
ja
push
xchg
xchg
sarl
adc
mov
fdivrs
sub
xchg
sub
dec
loope
shrl
mov
mov
add
mov
popa
das
xor
mov
mov
cmpsl
push
cmpb
out
fstpt
lods
cli
mov
pop
cs
rcrb
jmp
sbb
lret
sub
leave
stos
ret
cmp
sbb
dec
add
bound
cs
daa
stc
aam
sub
cs
jmp
sbb
mov
mov
pop
daa
cmpsb
bound
aaa
outsb
xchg
mov
out
mov
clc
sub
mov
movsb
movsb
xor
jae
or
sbb
in
imul
xor
ljmp
mov
inc
adc
xchg
mov
popf
pop
jl
pop
push
repnz
pop
xchg
pop
test
mov
fimuls
and
les
jo
push
push
sub
xlat
and
fwait
and
pusha
dec
add
and
xchg
jnp
xor
mov
stc
std
pop
and
pop
xchg
out
cmpsl
inc
in
ror
insb
rcrb
push
jbe
sbb
lret
fldl
mov
loope
mov
dec
jo
enter
lods
aam
inc
jno
jo
dec
and
lock
rcrb
xchg
test
dec
sub
cld
mov
jo
mov
jo
or
mov
push
xor
aas
js
pop
pusha
repnz
add
test
push
loop
adc
es
push
mov
sub
mov
test
mov
adc
insb
push
imul
int3
mov
mov
mov
mov
jb
sub
jo
roll
orl
sub
in
paddsb
cltd
pushf
cmp
mov
inc
nop
push
ret
stc
pop
call
les
adc
push
cli
out
add
fwait
jp
ds
arpl
add
xchg
in
mov
stc
in
mulb
out
dec
lret
les
xorb
pop
into
es
imul
mov
xor
push
cmp
cmp
jg
sub
imul
into
subb
adc
imul
iret
cld
jns
aas
sub
xchg
xchg
iret
mov
subb
movsl
aas
outsl
xor
lahf
mov
mov
adc
pop
pop
cld
dec
insb
insb
fwait
xor
inc
sti
pop
lea
gs
add
push
testb
inc
push
and
xor
mov
push
imul
xor
xchg
inc
inc
imul
shlb
inc
pop
push
test
lods
cmc
push
in
mov
push
cmp
std
mov
nop
test
mov
xchg
icebp
mov
mov
dec
clc
push
inc
mov
and
aaa
jbe
das
movl
and
std
adc
adc
mov
les
js
dec
xlat
inc
mov
mov
lods
add
add
cld
pop
add
xor
nop
dec
add
aad
mov
and
and
bswap
mov
mov
dec
push
jne
in
dec
rcr
test
jb
out
cmc
ljmp
jae
jle
test
sub
sti
xor
bnd
push
shlb
movsl
add
jne
lods
seto
movsbl
in
fs
fcoml
and
outsl
inc
push
mov
jne
sub
lds
dec
inc
and
fs
mov
fdivrl
mov
xchg
add
test
jle
pop
stos
or
jb
cwtl
loope
addr16
cltd
jmp
daa
adc
ja
lock
in
ror
jb
mov
xchg
mov
or
hlt
sbb
inc
dec
add
fs
lods
fwait
cmp
xchg
mov
jnp
inc
mov
push
in
mov
stc
inc
dec
out
fisubrs
mov
outsb
push
jns
orl
gs
jno
stc
enter
loopne
lcall
xchg
iret
in
dec
jno
gs
scas
js
les
inc
packssdw
mov
es
rcrb
insl
or
ret
data16
mov
jo
or
push
in
xlat
pop
in
cmp
jae
cmp
jmp
cmp
inc
pusha
push
adc
sub
lods
xor
xor
stc
dec
lods
out
mov
adc
push
and
insb
inc
dec
popa
push
cltd
mov
fs
push
rcr
or
mov
jg
mov
in
stos
or
in
jmp
sub
jo
outsb
fisttpl
mov
jno
add
sub
int3
xorl
mov
adcl
sbbl
xor
xor
jle
imul
dec
addr16
ja
mov
outsl
pop
mov
std
cltd
int3
shrl
or
int
movsl
jae
in
inc
mov
andb
push
sbb
lock
cli
sub
insb
sub
cmp
mov
dec
pop
sub
jge
mov
inc
pop
out
ljmp
ljmp
xchg
out
push
dec
lods
adc
shrl
add
sbb
gs
cmpsb
jo
loope
out
int
sub
mov
push
pop
or
sbb
cld
push
mov
dec
in
mov
fidivl
outsl
ds
aas
enter
adc
dec
xor
inc
int3
inc
jae
int
aaa
jnp
and
mov
pop
insb
add
out
js
sub
adc
jp
or
jg
jb
mov
repz
pop
inc
je
xor
cld
push
subb
outsb
shrd
sub
pop
inc
movsb
adc
pop
mov
mov
mov
dec
imul
jecxz
push
cmpsb
outsb
add
out
repnz
mov
sub
dec
adc
add
rcr
call
mov
stos
dec
int3
imul
adc
jno
ljmp
fisubl
mul
xchg
lcall
mov
dec
xor
and
sub
addb
ljmp
mov
mov
out
fildl
mov
xlat
push
dec
push
sti
in
jbe
jl
ljmp
mov
inc
adc
xor
addl
jbe
mov
push
sbb
shll
cli
add
dec
jae
dec
mov
mov
or
aaa
aad
jle
adc
jb
fdivs
ja
aas
jle
cmp
push
add
movsb
add
mov
mov
leave
in
sbb
cmp
or
mov
into
xchg
inc
inc
pop
out
ror
mov
dec
adc
pop
repnz
or
addr16
push
loopne
sti
cmc
aaa
lea
jns
lods
jb
inc
outsl
adc
jl
jnp
jne
cli
test
je
rcrb
inc
test
pop
mov
push
scas
mov
cmc
mov
testl
subb
push
jbe
cmp
repnz
jmp
pusha
dec
mov
adc
cltd
dec
mov
rclb
push
mov
loop
xchg
outsl
pop
outsb
mov
clc
retw
xchg
push
xchg
mov
jl
inc
inc
inc
idivb
jnp
imul
insb
inc
adc
xchg
or
das
cs
fcoms
push
cmpl
pusha
les
xlat
jp
jnp
ret
inc
loopne
xchg
mov
hlt
and
jge
imul
mov
aas
lods
fs
dec
xor
cmp
fwait
inc
es
je
push
imul
add
mov
int3
incb
mov
sbb
sub
ret
cmp
add
test
jmp
arpl
jmp
lret
xor
jge
inc
jl
xchg
in
dec
mov
sbbb
jae
push
mov
jg
gs
int3
mov
data16
lea
fnstcw
repz
shlb
mov
push
inc
cmp
and
push
imul
xor
inc
repz
fdivrl
popa
mov
pop
push
stos
inc
lahf
mov
sub
xor
lock
fmul
dec
mov
push
outsl
bnd
mov
mov
xchg
sub
nop
stos
jge
outsl
push
bound
fs
add
in
pop
cli
xor
out
dec
jae
mov
jle
dec
adc
pushf
leave
jl
jle
and
mov
aad
lret
inc
in
je
ljmp
cmp
mov
inc
insl
inc
add
jl
outsb
inc
lcall
push
fs
xor
testb
insb
push
jecxz
lods
mov
adc
add
dec
adc
addr16
pushf
in
pop
and
push
js
adc
cmc
pop
ret
pop
jl
mov
int
mov
cli
sub
lods
std
adcl
sbb
loope
repz
iret
lods
daa
push
mov
rcrl
jl
mov
ljmp
fsubrs
repz
decb
xor
insl
mov
lods
dec
pop
aaa
dec
je
div
lods
jp
std
rorl
rorl
pop
arpl
jmp
lods
divb
lock
jne
jns
cld
nop
mov
das
iret
repnz
movb
sarb
pop
repnz
jnp
push
jo
aas
dec
jge
negl
mov
repnz
dec
ret
lcall
push
lods
inc
or
pop
mov
mov
mov
aam
scas
mov
scas
ja
lods
jnp
jnp
mov
mov
mov
repnz
jnp
fmuls
addr16
adc
stc
out
cld
jae
jl
mov
dec
jnp
push
mov
xchg
fldcw
aaa
add
push
out
sub
popf
pop
mov
scas
repz
lods
js
cld
repnz
jnp
xor
mov
dec
mov
out
mov
mov
mov
dec
pop
mov
mov
in
jns
imul
xchg
pop
lods
icebp
mov
pop
lods
jnp
jg
cli
mov
lods
inc
mov
lods
dec
repz
mov
into
scas
shrb
out
loop
addr16
mov
insb
inc
nop
mov
lods
jns
test
les
add
nop
push
lods
repnz
jae
fidivrs
lods
mov
mov
mov
sub
sub
movsb
outsb
push
fbld
push
lods
fs
insl
call
mov
outsl
mov
xor
into
jo
cs
jge
push
xchg
sbb
aas
jo
clc
outsb
mov
outsl
mov
jp
adcl
pop
cmp
and
mov
push
je
jp
sub
je
dec
and
cmp
andl
int
jmp
fwait
stos
jbe
mov
sbb
cmp
lea
pop
movsb
pop
add
adc
xchg
mov
jae
push
cli
fs
push
xor
sub
dec
int3
ljmp
cmpsl
cs
pop
movsb
pop
jbe
gs
shll
cmp
mov
jb
adc
rcrb
out
hlt
dec
jae
es
xorl
mov
jno
push
cmc
and
dec
cmpsb
bound
jmp
les
jnp
xor
cmp
ljmp
jg
xor
push
inc
aad
fsubrs
repz
push
jmp
xor
imul
jbe
mov
test
lds
je
hlt
inc
inc
aas
cli
clc
jbe
mov
fildl
out
push
data16
lods
sub
inc
mov
jns
insb
mov
lret
jl
movsb
mov
or
fbstp
xchg
cmp
sub
ficomps
pop
hlt
and
subl
jno
mul
loope
mov
jns
fs
stos
pop
fdiv
mov
bound
movsb
ret
fs
jnp
mov
add
faddp
xor
xorb
ret
int3
jl
jbe
mov
cmpsb
out
adc
jno
xchg
repnz
push
inc
rclb
fsubrp
movsb
addr16
adc
pop
dec
xchg
push
arpl
pop
sahf
mov
cltd
lret
out
je
aam
pop
das
jmp
fwait
in
sub
mov
imul
inc
lock
scas
test
mov
jle
jge
add
pop
cs
fcmovne
faddl
movsb
or
jge
pop
dec
clc
mov
lock
jl
or
xor
adc
xchg
je
aam
cmp
fnstsw
jmp
jb
push
push
mov
int3
js
adc
push
ja
lods
loopne
das
jnp
mov
fs
cmp
inc
xor
jp
xchg
mov
sbb
pop
insb
movsb
fildl
push
das
sahf
dec
jns
gs
fcmovnb
fs
sahf
out
jb
pushf
mov
cmpl
loope
ror
sub
popa
cli
vmovdqu
call
mov
and
sub
or
pop
fnclex
stos
cmp
shlb
js
jns
inc
cmpsl
cmp
jb
push
in
js
fs
popf
xchg
mov
pop
mov
lret
sub
inc
movsb
inc
les
outsl
pop
gs
mov
sub
mov
jp
xor
jne
dec
cmp
lahf
inc
mov
dec
jb
pop
int3
test
dec
lret
insl
pop
xchg
fs
mov
mov
push
jbe
jae
idivl
pop
out
jle
notb
jp
sbb
insl
in
fnsave
je
mov
dec
roll
sarb
fnstenv
or
cmc
in
rcl
adc
clc
in
fidivrs
jle
jo
adc
ja
mov
fildl
jge
add
lret
mov
jns
ja
jl
adc
insl
push
fimuls
jle
inc
push
mov
push
and
jl
sub
or
mov
mov
aam
sar
mov
mov
and
into
or
push
insl
int
sti
dec
sub
repz
xor
ljmp
jl
movsb
dec
loopne
fisubrs
xchg
inc
push
push
cmc
cmp
shlb
mov
xor
jp
inc
gs
test
out
add
das
loope
in
fs
dec
mov
push
mov
leave
xor
pusha
push
adcb
ljmp
dec
negl
out
orb
inc
adc
jbe
fdivl
jp
cmpsl
movsb
cld
ret
xor
out
dec
cmp
xchg
inc
into
inc
mov
adc
xchg
sub
mov
push
jge
aam
jae
dec
insb
int3
mov
pop
into
and
xor
arpl
push
inc
mov
rcrb
push
fwait
mov
push
push
fwait
xchg
outsl
in
jo
fidivrl
or
adc
sbb
rol
fnstsw
repz
pushl
xor
hlt
das
and
pop
icebp
lcall
insl
cmc
jb
iret
icebp
jnp
sub
test
in
jbe
repnz
mov
ficomps
mov
push
dec
jecxz
imul
and
inc
cmpsb
int
lret
into
repz
mov
push
movsb
mov
inc
jne
pop
jl
leave
dec
lds
clc
dec
adc
insl
out
or
pop
in
sub
dec
adc
sbb
mov
jmp
push
or
dec
out
outsb
jle
inc
jmp
sub
xor
cs
cmp
loopne
pop
or
sbb
insl
mov
aam
dec
outsb
jnp
ja
ja
push
inc
or
fwait
iret
into
les
mov
cld
jecxz
cmc
outsl
js
fsubs
mov
cmp
outsl
outsl
ret
fiadds
mov
mov
jl
mov
movsb
cli
xor
inc
pop
ljmp
dec
pop
imul
jb
sub
jo
or
lds
jo
adc
repz
or
stos
xor
mov
sbbb
out
imul
xor
imul
mov
idivb
cmp
add
cmp
dec
mov
mov
inc
adc
pusha
pushf
pusha
lods
cmp
stc
stc
stc
neg
call
lret
jle
mov
iret
test
mov
dec
fiaddl
outsl
jbe
sub
std
test
jg
add
jge
imul
push
xchg
xor
mov
mov
inc
push
cmp
mov
xchg
jg
cmpsb
jg
mov
sbb
lret
pop
mov
mov
out
or
test
mov
inc
xchg
dec
add
cmpsl
pop
jmp
jno
cmp
loop
loop
sbb
lds
int
cmpsb
std
mov
test
sbb
dec
xor
out
imul
subl
decl
sbb
add
in
cmpsb
push
pusha
scas
ja
into
push
xchg
jle
pop
sahf
jecxz
mov
mov
push
pushf
push
pushl
ret
call
mov
dec
clc
clc
clc
bt
rol
stc
pushf
stc
stc
add
cmc
mov
mov
lea
js
ror
cmp
test
cmp
pushf
movsbw
lea
movzbl
mov
mov
push
push
lea
ja
pusha
lea
jb
stc
call
jne
cmp
adc
repz
and
je
lret
shll
enter
sub
inc
jge
dec
sub
push
push
loopne
pushf
repz
mov
pop
sbb
popf
push
mov
outsb
or
pop
stc
jecxz
inc
movmskps
mov
push
inc
ret
cmp
fidivl
fstp
xchg
adcl
test
dec
mov
jl
and
pop
pop
ja
pushf
jmp
pusha
lea
jb
test
cmc
jmp
mov
mov
aas
jne
lock
repz
pop
pop
push
inc
nop
push
shr
sbb
push
push
and
out
or
jnp
loop
insb
dec
imul
xchg
dec
jmp
repz
adc
sbb
movsb
and
inc
xchg
js
xor
les
push
mov
int
adc
int
push
data16
jmp
popf
adc
fists
cmp
dec
orb
pop
adc
test
fsubs
test
pop
mov
out
or
cwtl
lea
bound
in
fs
sbb
mov
inc
mov
inc
pop
push
push
rorl
cmp
mov
cmp
sub
enter
sbb
pop
addl
shrl
ljmp
loope
fimull
enter
pop
sbb
das
add
xchg
stc
jnp
mov
add
sbb
notl
dec
xchg
lahf
lret
clc
jo
lea
popa
pushf
out
or
std
dec
jno
shrb
ret
ja
xchg
imul
outsl
in
jo
cmpsl
subl
pop
mov
mov
pop
data16
cli
lods
add
xor
sub
push
daa
xor
enter
mov
aaa
fmuls
add
cmpb
jmp
jmp
mov
mov
out
mov
xor
dec
fdivl
repnz
or
test
ffree
in
sbb
cwtl
into
in
rcrl
mov
jmp
jge
xchg
sub
jge
mov
imul
insl
es
mov
sbb
or
lcall
pop
cmp
xchg
jo
jbe
sub
sub
pushl
leave
pusha
push
mov
inc
lea
pushf
lea
call
jmp
movb
cmp
cmp
jmp
add
mov
call
mov
pushf
pusha
movb
push
lea
jmp
xor
mov
outsl
fldl
inc
sbb
stos
insl
push
iret
movsb
les
lcall
pop
lods
xor
hlt
pushf
mov
jnp
movsb
stos
jg
fs
lret
xorl
gs
xlat
xor
mov
fistpll
imul
xchg
push
cmp
fisttpl
dec
sbb
into
repz
lea
mov
push
jle
bt
test
push
lea
jne
pushf
mov
pusha
mov
push
call
mov
bt
cmp
call
bound
jp
mov
nop
mov
jmp
out
xchg
adc
lea
aaa
dec
bound
jbe
bound
jb
shlb
aad
dec
popa
ret
sahf
jnp
call
fdivl
cmpsl
and
iret
adc
vminpd
out
xor
std
jbe
cmp
pop
lods
inc
imul
stos
rclb
cmpsl
incb
outsl
enter
pop
loope
xchg
xchg
jne
je
cli
call
pusha
pushf
adc
mov
lea
call
pusha
push
lea
jb
pushf
pushl
ret
inc
mov
pusha
stc
and
stc
add
add
bt
push
add
mov
dec
pushf
lea
jne
bt
mov
bt
bt
push
call
pushf
lea
je
call
sti
pop
cltd
jns
mov
xchg
mov
xchg
pop
or
push
sub
jg
mov
push
sub
push
lcall
mov
inc
pop
sahf
push
flds
and
mov
imul
pushl
gs
js
cmpsl
ret
pop
out
sub
cwtl
sti
mov
and
pop
adc
bound
sbb
sub
mov
lahf
pop
jne
nop
pop
add
lods
test
es
sarb
or
or
xor
jnp
jmp
pop
in
in
push
orl
outsl
data16
jno
xor
test
movsb
inc
cmpsl
aas
jne
xchg
ljmp
fdivr
jecxz
imulb
testb
sub
mov
nop
sti
int3
jb
xor
xlat
jo
mov
pusha
push
hlt
and
mov
cmc
and
cmc
movb
pusha
add
push
lea
jmp
clc
jmp
seta
ja
mov
int3
shlb
mov
xchg
push
mov
adc
loop
push
insl
ret
stc
in
mov
iret
and
and
add
test
data16
dec
push
cmpl
insb
mov
ret
loope
rclb
jmp
and
lods
ss
inc
ret
icebp
stc
lea
pop
iret
bound
jge
jg
mov
out
stos
test
or
in
adc
mov
mull
jne
pushl
je
pop
mov
mov
jne
xchg
repz
lea
imul
ficompl
xlat
imul
test
aam
xacquire
sar
lea
fsubl
and
movsl
shl
or
sahf
push
lods
push
insb
sti
adc
stc
das
and
push
dec
inc
mov
pop
mov
call
or
mov
and
aaa
es
jge
adc
jg
jbe
dec
sub
shr
repnz
fs
mov
mov
mov
jb
inc
mov
je
cmp
pushf
out
and
loop
dec
psllq
aaa
cmp
movb
cmp
jmp
out
sarl
loope
mov
sahf
movsl
lcall
xchg
mov
mov
out
jnp
or
test
push
sub
mov
insb
adc
in
stos
mov
adc
insb
mov
add
imul
jge
rcrb
mov
push
outsb
rclb
iret
inc
pop
lods
adc
push
dec
leave
sbbb
fisubrl
mov
movsb
vlddqu
fimuls
pop
out
mov
mov
xor
mov
fdiv
push
push
leave
dec
inc
mov
pushf
jbe
push
fiaddl
pushf
add
jne
mov
xlat
mov
mov
adc
inc
fiaddl
hlt
jmp
pop
jbe
pop
push
mov
out
mov
rol
lods
fwait
daa
jl
aam
jns
dec
movsb
imul
adc
mov
jnp
sub
and
adc
popa
cwtl
sbb
mov
pop
jecxz
add
add
fs
imul
add
aad
add
xor
dec
stc
shl
push
lods
stc
neg
pusha
pushf
dec
stc
rol
cmp
test
sub
lea
jo
neg
pushf
pushf
lea
call
push
stc
cmp
movw
pushf
lea
jae
cmp
push
pusha
cmp
mov
pusha
call
cli
dec
test
jo
mov
sar
xchg
push
add
push
cmpsb
xor
pop
pushf
je
enter
out
or
sub
in
int3
sub
rclb
jmp
ljmp
out
cltd
adc
dec
fbld
testb
test
inc
gs
in
mov
aad
stos
xor
xlat
gs
sarl
sub
sub
fistps
pushf
push
adc
mov
lea
jge
jae
push
pusha
pushf
lea
jne
pushf
pushf
push
stos
movb
pushf
lea
jmp
pusha
movb
lea
je
test
cmp
push
lea
je
push
lea
jmp
mov
dec
jne
mov
pushf
call
mov
fisttps
sarl
sub
into
cmp
lea
adc
mov
jmp
mov
rol
cmp
out
pop
sbb
and
cwtl
bnd
mov
or
sub
int3
inc
cmc
aas
scas
mov
lcall
hlt
jno
movsb
out
or
adc
mov
addr16
dec
lahf
pop
dec
test
movsb
fsts
xchg
cmpsb
vprotw
xchg
and
aas
mov
dec
add
mov
dec
idivb
dec
add
fisttpll
in
or
psubb
or
es
pop
nop
xchg
jl
inc
push
jmp
pushl
cmp
call
lcall
cmpb
push
mov
jo
stos
arpl
add
mov
lret
lock
rcr
pushf
add
dec
mov
mov
xlat
mov
lods
imul
pop
daa
inc
test
jecxz
test
shlb
insl
fsubrl
xchg
out
ret
sub
ret
pop
xorb
sarb
dec
cmp
rcl
cmc
enter
pop
push
sbb
mov
pop
add
mov
jae
mov
sub
xor
mov
push
pusha
jp
hlt
push
push
jmp
and
mov
or
test
sub
xlat
aaa
shll
mov
stos
movsl
mov
mov
pushf
mov
js
jg
push
push
jmp
test
dec
sub
pop
mov
in
ficompl
jae
mov
inc
push
xchg
push
push
and
jp
push
aam
xor
pop
shlb
sbb
inc
pop
rol
mov
cs
or
dec
cmp
nop
or
ficoml
cmp
sub
pop
sub
add
jnp
dec
cmp
repz
and
sahf
outsb
or
ficomps
int3
sub
xlat
push
aad
sarl
sbbb
cli
loope
dec
pop
adc
cmpsb
mov
mov
pop
scas
xor
fisttpll
dec
sub
jb
movsl
sub
in
jne
mov
int
dec
xor
sub
shll
mov
cmp
rorl
arpl
test
lret
sub
xorb
mov
enter
test
rcrb
ret
insl
mov
inc
into
scas
lea
gs
cmp
repz
mov
and
in
adc
and
fwait
emms
mulb
rorb
mov
call
xchg
repnz
aaa
adcb
cmp
aaa
push
loope
inc
pop
jle
push
mov
add
and
or
xchg
mov
scas
ret
out
jge
adc
inc
inc
mov
cli
imul
jp
fists
popl
and
and
sub
repz
fsubrl
push
push
xchg
arpl
and
xchg
push
jmp
out
fs
insl
cmp
pop
ret
nop
jle
test
enter
divb
mov
xor
roll
iret
in
test
outsb
test
jae
in
fdivl
lahf
dec
flds
imul
ret
push
inc
jbe
repnz
cmpb
inc
xchg
stc
dec
int3
out
mulb
aam
cmp
xor
test
dec
sbb
enter
insl
mov
in
iret
add
xor
ljmp
lods
xchg
jne
inc
data16
ljmp
ljmp
cwtl
adc
lods
ss
pop
push
xchg
mov
cmpb
push
pushl
push
pusha
lea
jne
aaa
dec
test
sub
bts
shrd
mov
adc
mov
add
add
mov
pusha
cmc
test
jmp
rol
btc
rcl
btr
push
shld
cmp
ror
push
lea
rol
mov
adc
shr
push
cmp
rol
push
dec
sar
bt
bswap
push
pusha
add
stc
call
test
clc
test
sub
test
test
cmp
jmp
mov
xadd
mov
or
push
mov
sar
sete
rcr
mov
cmc
bt
call
jmp
sub
pusha
call
xchg
jo
mov
sub
or
int
daa
js
jle
inc
cmpb
sbb
mov
add
cmpsb
out
int3
loopne
cwtl
xlat
in
add
dec
sbb
out
call
stc
fdiv
in
stc
push
leave
mov
sub
and
inc
pop
ret
scas
movsl
cmp
mov
lahf
xor
fnstenv
dec
mov
push
ja
test
test
dec
add
fldcw
pushf
mov
and
dec
pop
lods
push
dec
add
imul
mov
cmp
jo
addr16
add
xchg
and
bnd
xchg
dec
jmp
pop
adc
mov
push
sub
test
cmp
out
or
addr16
jp
mov
out
fcompl
in
xor
js
mov
push
sti
mov
je
adc
push
pushf
pushl
ret
pushl
movb
call
push
pusha
clc
imul
pushf
stc
cmp
movb
add
mov
mov
pushf
push
lea
jmp
mov
mov
sar
scas
cmpsb
pop
mov
aas
cmp
addr16
sbb
lock
leave
jmp
mov
notl
loop
inc
lcall
sti
dec
ret
mov
daa
dec
jno
mov
jne
jb
mov
cwtl
lds
sahf
scas
data16
xor
push
inc
ja
xlat
pop
divl
mov
outsb
pop
mov
ljmp
cltd
fnsave
jae
icebp
sub
rorl
xchg
in
jns
std
into
arpl
shl
pop
cmpsl
pop
idivl
into
mov
cmp
out
sbb
fwait
dec
pushf
sbb
test
fsubrp
inc
test
mov
jns
les
xor
push
cltd
outsb
jae
jge
sti
push
lret
cmp
aas
or
imul
inc
push
mov
pusha
jae
pop
adc
rol
mov
sqrtps
xchg
sbb
mov
mov
mov
cs
xchg
arpl
xchg
dec
sti
stos
xchg
and
int
sbb
sbb
rcl
adc
inc
push
mov
lods
sub
push
outsl
gs
adc
lcall
jge
jmp
orb
add
inc
aam
bound
xchg
or
in
push
adc
ret
xchg
fwait
dec
inc
xlat
sti
pop
mov
adc
mov
dec
loopne
mov
test
adc
cmpsl
pop
in
out
orb
mov
adc
adc
xchg
mov
xchg
lea
push
int
popa
sbb
and
add
std
and
pop
jecxz
rorb
pop
dec
add
cmpb
cltd
shll
pop
shlb
or
enter
inc
push
aas
xor
ficomps
push
xor
dec
outsb
xchg
stc
mov
cli
mov
mov
push
pushf
mov
mov
movzbw
mov
pushf
push
push
pushl
ret
mov
pushl
lea
jbe
push
or
sbb
xchg
sub
xadd
mov
bswap
stc
mov
stc
rol
bsf
add
shrd
shr
shld
lea
lea
mov
bt
rcl
add
pushl
lea
mov
pop
mov
pusha
call
xor
jno
movl
call
lea
je
shrd
neg
bsf
shld
add
push
sbb
sar
dec
sub
xor
shl
cmc
shr
test
btc
jmp
repnz
imul
cmp
stc
mov
ds
push
ja
movsb
les
loope
adc
jg
and
int3
js
ret
jle
jl
push
xor
add
out
notl
aad
pop
jp
cmp
sarl
xchg
mov
mov
fmull
mov
aam
fwait
mov
mov
subb
shll
mov
insl
ficompl
pop
sbb
xor
mov
imul
xchg
add
sahf
std
adc
inc
cwtl
push
call
out
or
fs
xchg
enter
and
stos
repnz
int
pusha
push
mov
pop
inc
int3
mov
iret
dec
and
inc
pusha
mov
push
lods
enter
addr16
loop
and
mov
push
imul
xchg
mov
xchg
pop
sbb
inc
xchg
mov
pop
rcl
sbb
add
jmp
mov
mov
inc
mov
push
mov
inc
jl
aas
outsb
test
jle
jl
xor
pop
sarb
out
in
xchg
dec
mov
rolb
jb
pushf
rolb
cmpsl
addr16
inc
mov
sahf
fstpt
mov
lret
lods
daa
xor
adc
out
pop
in
js
xor
ret
pop
mov
ret
sub
xchg
dec
lahf
add
lret
fwait
test
push
aaa
jl
lods
fisubrs
mov
shrl
jns
fdivrs
mov
or
dec
or
out
pop
push
pop
or
fs
bound
pop
scas
out
xchg
repz
lret
aas
fcoms
mov
cmc
xorb
mov
mov
push
pop
dec
nop
lahf
xchg
xor
es
lcall
inc
adc
rclb
call
xor
imul
inc
xor
adcl
or
mov
imul
loope
cltd
faddl
rorb
test
mov
push
in
mov
pushf
mov
cmp
pop
stc
stc
cmc
out
pop
pop
push
arpl
push
psllq
xor
push
lret
jg
add
jmp
jno
sbb
mov
in
fdivs
notb
pop
std
add
in
pop
lock
test
inc
int3
push
sub
pop
cmp
gs
push
pop
outsb
or
lea
aam
fcmovu
adc
sub
adc
push
mov
movb
lea
jae
mov
mov
pushf
jmp
test
push
imul
add
lds
inc
inc
frstor
cli
mov
lcall
pop
stos
out
or
xchg
movsl
ljmp
jno
mov
jl
rcl
in
bound
sbb
push
in
gs
cli
add
and
mov
push
stos
dec
lods
les
adc
push
repz
pop
sub
jnp
repnz
cmp
gs
fst
push
push
mov
movl
and
jne
sbb
pushf
pushf
mov
call
enter
pop
mov
aad
movsl
push
or
out
aam
ljmp
push
pop
mov
stc
scas
mov
push
xchg
icebp
sbb
bound
mov
loop
push
jmp
out
dec
scas
cltd
pop
repz
pop
mov
ss
cmp
cmpsb
stos
int3
or
cs
mull
push
xchg
and
fiadds
shlb
add
in
xchg
lods
mov
loop
push
test
test
push
arpl
sub
add
pop
insl
mov
inc
cmp
out
shl
xor
xlat
push
xor
or
lods
rcl
testl
and
push
jb
dec
fldl
inc
aaa
mov
mov
gs
adc
jb
rcll
fmulp
ficoml
cmp
sub
and
inc
iret
je
int3
mov
xor
xlat
out
and
movsb
call
ret
push
bt
and
bt
add
movl
pusha
pushf
lea
jmp
mov
sub
inc
jnp
lods
pop
fistpll
xchg
je
clc
pop
sbbl
xorl
xchg
cmp
mov
mov
lret
ja
repz
fs
mov
scas
sbb
sbb
mov
pop
sub
loopne
mov
loope
stc
dec
addr16
jns
dec
and
popa
mov
outsl
movsl
jle
mov
nop
fsubrp
push
and
add
mov
fiadds
cmpl
je
repnz
add
aaa
jae
mov
sub
mov
mov
inc
jae
cmp
mov
inc
add
mov
ljmp
aam
faddl
dec
inc
fadds
rcrl
dec
sahf
in
lds
pop
xchg
negb
pop
xchg
pop
mov
clc
or
into
fs
and
lret
fsubrl
push
mov
xchg
and
ficoml
add
mov
scas
mov
xchg
clc
add
mov
inc
sbb
stos
js
ret
cmp
int3
lock
mov
jnp
mov
pop
lods
mov
scas
fwait
cs
test
test
imul
imul
nop
jnp
or
rorb
jge
push
add
in
shrl
push
sub
xor
movsb
idivl
pop
xor
cld
dec
jecxz
pop
sarb
mov
jecxz
es
pop
mov
and
xchg
adc
imul
js
sti
insb
jno
fadds
push
sbb
cmpsl
jmp
fldcw
fstpl
rol
loopne
aam
inc
imul
mov
push
or
cmp
xor
insb
mov
jnp
pop
mov
or
adc
sub
dec
icebp
sbb
dec
mov
or
xchg
imul
push
push
inc
mov
pop
in
mov
bound
dec
mov
and
mov
push
push
jmp
adc
loop
aas
jo
aad
int
cmp
xchg
pop
jecxz
pusha
and
gs
inc
xchg
setns
inc
in
mov
xor
pushf
call
push
pusha
pusha
call
adc
xor
cld
jg
or
push
xchg
and
int3
adc
jecxz
loop
and
pop
adc
test
jmp
test
push
push
sarl
mov
xchg
sub
dec
iret
adc
and
test
addb
xchg
dec
test
fs
jno
popf
adc
fs
xor
test
push
loop
aam
lcall
cmp
mov
xchg
add
outsb
push
loop
adc
es
add
hlt
out
add
clc
aad
shll
adc
notl
sub
or
ja
push
cmp
inc
jg
je
xor
popf
sbb
xor
cmp
and
in
mov
add
test
xlat
btr
shld
mov
stc
cmc
cmp
bt
add
clc
cmp
movzwl
bswap
ror
btc
shld
mov
pushf
add
clc
mov
mov
call
xor
pop
fs
mov
mov
daa
aam
or
pop
or
movsl
mov
mov
inc
sub
aaa
scas
vpmuludq
jg
push
xchg
pusha
out
popf
vmptrst
jmp
into
push
or
stos
fildll
fidivs
pop
je
stos
gs
out
test
pop
dec
dec
in
mov
enter
pushf
xor
sbb
jg
bound
add
loope
or
jge
js
scas
push
repz
mov
mov
cmp
cmp
mov
xchg
dec
sbb
ljmp
dec
in
sar
lret
jp
pop
in
cmp
pop
cmc
xorb
mov
jecxz
lret
push
mov
sbb
xchg
pop
in
fwait
push
cltd
inc
mov
mov
mov
pusha
xchg
pop
cmc
xor
mov
sbb
xor
cmc
adc
lods
pop
pop
movl
bound
mov
mov
movsl
cmp
add
bound
nop
jne
pop
push
call
lret
push
out
cmp
loop
jle
addb
pop
stos
xor
hlt
pushf
mov
pop
push
fwait
or
adc
insl
mov
sahf
out
pop
push
adc
jp
adc
dec
mov
cmc
mov
subl
pop
xchg
mov
test
lods
dec
aam
bound
xor
out
jle
push
adc
dec
subb
sahf
lcall
outsb
inc
test
add
subb
and
lods
jb
xor
adc
jns
xchg
xor
cwtl
test
jo
movsl
inc
pop
cmc
pop
mov
push
mov
les
into
inc
push
dec
and
insl
inc
jb
xor
mov
mov
mov
add
inc
int3
sar
push
je
push
lea
lcall
push
jmp
pusha
inc
lods
popa
pop
mov
jns
push
xor
pop
fmull
stc
pop
shlb
insl
pop
push
lods
lret
and
pop
outsb
int
jmp
mov
fdiv
ss
cmpsb
dec
mov
pop
cmp
mov
cwtl
into
adc
movsb
into
add
jne
jns
jl
or
mov
cs
mov
adc
lcall
xor
scas
roll
mov
and
icebp
cltd
popa
pop
mov
inc
aas
int3
mov
xchg
lahf
jno
pop
pop
in
sbb
cmpsl
ficoms
fwait
jmp
mov
popa
mov
ss
ljmp
mov
mov
cltd
xor
js
dec
and
out
adc
int3
inc
xor
inc
outsb
scas
stc
les
dec
inc
sahf
sbb
popa
pop
mov
mov
and
roll
les
lret
push
or
popa
push
cmp
push
xorb
ret
clc
cmp
sbb
xchg
stos
or
lock
jmp
lods
andl
pop
dec
in
mov
stc
loop
push
nop
mov
shll
pop
insb
mov
aaa
notl
gs
repz
xor
mov
cld
mov
lret
sahf
rcll
ret
lea
sbbb
dec
xor
mov
loop
jmp
push
js
mov
jp
call
pushf
pusha
push
pushf
lea
jmp
movl
pusha
lea
jmp
leave
jmp
pusha
pop
mov
aad
in
mov
pop
ljmp
rcr
and
loope
enter
shr
or
aad
mov
sub
test
mov
dec
and
push
and
flds
push
and
icebp
xchg
push
xacquire
mov
adc
lcall
push
cmp
adc
jle
lahf
out
mov
lret
and
lea
je
bt
cmp
pusha
mov
sub
movb
pushf
movb
mov
lea
jmp
rorb
fwait
icebp
ds
pop
or
lods
loopne
mov
sti
ljmp
out
jbe
and
test
ljmp
lret
fldenv
xchg
jmp
test
jl
pop
push
sbb
mov
movsb
stos
pop
mov
es
imul
mov
into
mov
cmp
loopne
sbb
ret
iret
sub
inc
pop
aam
mov
cmp
mov
lcall
pop
js
ret
lret
pop
and
in
xchg
xchg
mulb
insb
mov
sub
lds
push
cmpsb
push
fwait
outsb
sbb
pop
mov
jo
add
leave
sahf
enter
mov
mov
out
movsl
call
or
leave
pushf
call
pop
dec
jg
mov
es
add
or
pop
jg
je
xchg
sub
lods
out
jg
mov
shll
sbb
icebp
jmp
xlat
jno
pop
pop
es
fdivrl
jecxz
mov
out
orl
xor
xchg
cmp
adc
aam
mov
push
push
sbb
xchg
or
pushf
movw
mov
lea
ja
push
sub
dec
sub
add
bswap
mov
stc
not
setno
mov
cmp
test
repnz
push
pusha
call
lret
inc
inc
pop
pop
mov
ds
addr16
aad
andb
test
mov
inc
int3
xor
test
dec
lahf
test
mov
mov
mov
xchg
popa
adc
daa
hlt
cli
pop
aad
lret
fdivl
mul
pop
lcall
push
repz
sbb
test
pop
pop
mov
mov
imul
mov
movsl
add
loope
push
cmpsb
fisubrl
inc
aad
pusha
and
fyl2x
clc
cmp
sub
inc
inc
xor
push
adc
aad
cltd
pop
jge
fs
cmp
mov
xlat
pop
xlat
xchg
lret
push
data16
testl
clc
ss
add
add
subb
add
pop
mov
add
stos
sbb
mov
imul
lret
lcall
pop
pop
mov
mov
push
fwait
xlat
xor
ds
test
dec
add
out
or
aad
pop
jl
sbb
mov
cli
dec
mov
sbbl
pop
sub
sbb
loopne
add
push
in
insl
fwait
mov
fldenv
sti
out
pop
inc
dec
adc
test
fisubs
ret
mov
sti
push
and
jno
pop
add
mov
lcall
push
and
sbbl
xchg
test
or
stc
out
mov
inc
xchg
dec
inc
push
std
mov
dec
imulb
aas
aaa
sub
stos
mov
add
ja
lods
adc
dec
xchg
sbb
std
pop
adc
jmp
hlt
push
ljmp
xchg
mov
negb
and
pushl
push
pushl
ret
cmp
push
lea
je
push
lea
je
stc
cmp
cmp
cmp
jmp
pushf
jmp
pushf
pushf
pusha
lea
jae
pushf
pushf
mov
lea
jmp
adc
inc
mov
cld
jg
add
push
and
sbb
inc
or
push
push
pop
gs
xorl
das
leave
xlat
jmp
test
or
add
jmp
xchg
imul
xor
inc
adc
mov
xchg
loop
push
jb
sub
test
xor
mov
jne
inc
sti
scas
mov
add
les
pop
cmpsl
lret
insl
lods
ds
mov
xchg
mov
outsb
push
movsl
xlat
adc
sub
ss
out
adc
ficoms
push
sarl
adc
notl
popa
lods
addl
xor
inc
jle
je
xor
sbb
mov
dec
xchg
adc
push
in
sub
aaa
push
pop
pop
mov
test
hlt
sbb
fsubrl
pop
mov
mov
out
mov
bound
mov
xor
mov
loope
mov
int3
jp
add
mov
cmp
ret
jo
sarb
or
sbb
and
ja
inc
mov
inc
dec
mov
dec
inc
inc
rcr
shl
xor
cmc
xchg
bswap
mov
push
test
not
mov
cmc
cmc
xchg
movzbw
mov
stc
sub
call
stc
stc
add
test
cmp
pushf
lea
jb
test
pusha
pusha
test
cmp
movb
lea
jae
cmp
shld
shld
mov
and
shl
pushf
mov
movsbw
bsf
stc
shrd
mov
clc
clc
clc
bt
sub
pushf
push
pushf
repnz
call
dec
pop
cs
pop
mov
leave
mov
inc
inc
stc
xchg
mov
and
mov
push
jle
out
cmp
mov
lods
mov
pushf
rolb
cmpsb
testb
add
add
arpl
stos
adc
hlt
or
dec
adc
dec
cmp
adc
mov
cmp
xchg
jne
cs
fdivrl
in
in
ret
repnz
pusha
mov
jmp
push
call
sub
pop
pop
mov
and
push
cmpsl
mov
scas
imulb
pushf
shrl
adc
movsl
push
movsl
iret
mov
in
cli
movsb
mov
push
push
sti
inc
clc
or
fst
lret
inc
jg
in
mov
fsubrl
xor
pop
add
out
ss
pushf
jge
xchg
adc
in
sbb
xchg
stos
xchg
mov
cmp
repz
aam
stos
pop
mov
push
cltd
xchg
or
adc
xchg
lcall
and
ja
add
shr
pushf
call
movl
pushf
pushf
pushf
mov
mov
movb
movb
pushf
pushl
ret
sub
pop
inc
mov
xchg
lcall
mov
jne
loop
test
lock
and
inc
and
mov
pop
scas
adc
in
aam
pop
loop
sbb
adc
sub
aaa
sub
addr16
mov
adc
mov
dec
cmp
pushl
pushf
lea
ja
jmp
lea
je
pushf
pusha
movl
adc
pushf
pushf
pushf
lea
jmp
xchg
adc
pop
pop
mov
jne
inc
push
mov
cli
ret
ja
mov
enter
pop
pop
int3
movsl
jmp
inc
mov
popf
mov
aam
mov
mov
cmp
int3
xorb
push
or
adc
lods
sbb
add
clc
mov
clc
pushf
bt
test
call
lea
je
push
pushf
pusha
pushf
lea
jmp
clc
test
mov
pusha
lea
je
stc
cmc
test
cmc
sub
push
push
push
pushf
lea
jmp
bt
rol
call
movl
movb
movl
pusha
pushf
push
lea
jmp
stc
cmc
or
pusha
push
call
imul
mov
mov
push
aam
pop
mov
or
loope
mov
xorb
cmp
pmuludq
cmp
ficoml
pop
jnp
pop
nop
je
aad
scas
hlt
sub
push
mov
cltd
das
jae
jp
ret
pop
dec
data16
mov
ficompl
lret
out
icebp
gs
test
and
add
pop
pop
xchg
xchg
fildl
mov
sarb
pop
mov
pop
adc
inc
adc
sarl
cltd
sahf
jo
loope
push
fucomp
adcl
scas
jecxz
or
or
and
adc
and
pop
scas
cltd
sub
mov
sub
cltd
cld
je
mov
ret
in
jo
inc
shll
fimull
push
in
das
jecxz
xchg
adc
lea
out
pushl
loop
pop
mov
mov
sbb
xor
jmp
lret
mov
sbb
pop
inc
enter
xchg
loop
mov
xor
add
rorb
xor
adc
fdivrs
scas
lods
subb
mov
add
cmp
pushf
pusha
pushf
lea
ja
call
dec
stc
bt
clc
call
push
movw
call
push
call
movl
jmp
add
add
inc
sbb
add
add
out
bound
test
sbb
mov
sbb
or
add
adc
add
add
test
movw
mov
lea
je
and
neg
shr
setno
add
mov
or
mov
pushf
add
cmp
mov
movb
bts
call
jmp
ja
cs
in
imul
xlat
pop
inc
dec
xor
mov
in
dec
fdivrl
out
jbe
sbb
fcomip
mov
fnsave
push
insb
sub
mov
js
sub
jae
jae
mov
ljmp
jmp
push
jnp
fsubs
jl
mov
ret
sbb
insb
insl
or
inc
data16
and
bound
mov
mov
idiv
clc
imul
inc
dec
clc
push
imul
movsb
push
push
test
test
mov
gs
scas
pop
das
insb
push
xchg
mov
sbb
dec
rcll
cwtl
in
mov
sub
cmpsl
insl
cs
pop
lcall
fs
and
insl
dec
pop
int3
mov
inc
add
pop
cmpsl
fisubs
xchg
mov
inc
inc
add
inc
icebp
ret
fsubrs
jbe
out
adc
fstps
lds
outsb
fisubl
fsubl
imul
jmp
jle
in
mov
adc
push
in
inc
notl
xlat
pushf
jae
cmpsl
stos
ds
sbb
and
inc
jae
ja
addr16
jno
add
stc
pop
inc
or
mov
or
pusha
fs
cmpsl
jbe
xchg
fs
jmp
pop
mov
ljmp
jp
lcall
pop
into
mov
mov
push
dec
lret
insl
mov
hlt
pop
fdivl
sahf
or
bound
pop
insb
in
fdivrl
pop
push
xchg
add
cmp
test
xchg
pop
push
fdivrs
out
sub
pop
jmp
mov
xor
jl
inc
lcall
push
push
jp
sub
xchg
mov
movaps
das
mov
mov
mov
and
dec
xchg
jb
stc
sbb
mov
dec
pushf
jbe
sets
fstpt
rorl
cwtl
jbe
push
jne
inc
cmc
in
insl
add
movsb
loop
js
jae
cmpsl
jecxz
ljmp
fnstsw
repz
enter
jnp
dec
gs
sbb
dec
outsl
mov
dec
cltd
int3
call
ficoml
sub
je
cmp
jbe
ja
test
cs
mov
jge
push
cmp
push
fwait
mov
das
push
mov
jb
imul
insb
lods
in
cmpsl
stos
sbb
jp
add
pop
les
jns
dec
fsubrp
mov
jg
lock
fstpt
jp
jbe
imul
movsl
or
lods
insb
jnp
fwait
add
fwait
out
mov
insl
mov
sub
pop
pusha
jae
sbb
or
aas
int3
jno
or
femms
jl
into
shlb
insb
xor
inc
cmp
sub
inc
mov
or
jge
dec
jl
mov
jne
jg
jecxz
std
cmp
mov
js
jb
outsl
or
test
sub
xor
pop
dec
cmp
int3
dec
sti
add
adc
jbe
cmpsl
in
pop
inc
fdivrl
stos
movsb
jae
sahf
mov
fiadds
mov
negb
jnp
test
jge
add
out
jae
shrb
pop
push
pop
dec
cmpsb
jae
loopne
insb
cmpsl
in
out
inc
jnp
jb
adc
add
or
movsb
jae
push
pop
pop
mov
jge
add
out
ret
mov
sbb
inc
jno
movsb
out
insb
pop
mov
cs
cmpsb
sub
cltd
cli
test
inc
pushl
mov
mov
movsb
data16
and
xchg
ficompl
mov
repnz
js
orb
jo
mov
jmp
insb
inc
imul
pop
xchg
xchg
in
aas
push
dec
fsub
mov
das
sarb
insl
cmpsl
dec
test
loop
daa
mov
movsl
push
pop
fs
jge
data16
mov
jl
mov
dec
call
pushf
mov
cwtl
insb
and
jnp
mov
imul
dec
flds
jns
mov
jp
push
pop
pushf
cs
stc
call
lea
or
iret
out
pop
cmpsb
adc
sti
sbbb
ret
mov
jbe
jae
inc
push
push
cwtl
out
int
jo
mov
pop
mov
outsl
repnz
popa
test
hlt
ja
fadds
lahf
push
out
dec
fwait
mov
out
test
mov
stos
dec
rep
sub
dec
dec
enter
or
rcll
push
and
cld
orl
fidivrl
in
adc
fwait
lcall
adc
lods
je
sbb
dec
popf
mov
adc
orl
push
je
inc
push
js
iret
aas
out
sbb
movb
ss
out
dec
jno
ljmp
scas
lret
into
sti
insb
jbe
shll
jge
jge
popf
aaa
mov
mov
in
cmp
dec
cmpsl
stc
enter
cmp
popf
dec
imul
sub
nop
inc
push
rorb
in
cmp
mov
imul
dec
test
push
orb
push
add
fiadds
or
popf
test
test
stos
mov
jne
add
mov
or
ljmp
dec
mov
daa
sub
insb
ret
test
imul
sti
ss
fdivrs
mov
mov
lods
lea
mov
sbb
xor
push
xor
insb
jg
insl
fiaddl
iret
adc
mov
jle
pusha
mov
or
int
loope
popf
pusha
pop
jne
push
pop
mov
mov
or
imul
daa
push
shll
mov
fisttpll
push
xor
dec
push
out
mov
push
xchg
push
stos
push
add
icebp
movsb
fs
ficoms
mov
in
rorb
cli
xchg
shll
mov
movsb
xchg
mov
jge
xor
mov
mov
jbe
dec
aas
xchg
jge
dec
xchg
pop
mov
js
pushf
repz
dec
cli
stos
fidivrs
lods
movsb
outsl
pop
ret
test
push
mov
sub
push
adcb
mov
xchg
out
fnstenv
movsb
mov
outsb
inc
push
adc
lods
push
and
test
push
inc
cmp
xchg
insb
in
jns
outsb
inc
aam
arpl
push
jne
dec
mov
dec
and
popa
sti
nop
push
inc
or
jne
fsubl
sahf
cs
pop
out
out
add
mov
mov
dec
pop
mov
inc
mov
cs
jp
mov
add
call
xor
jge
nop
fistpl
jg
xor
mov
lret
push
push
cli
mov
outsl
and
add
comiss
inc
pop
outsb
js
sbb
ljmp
and
or
test
inc
into
sbb
decb
mov
outsl
lcall
jb
inc
call
imul
push
adc
mov
sbb
hlt
insb
push
xchg
or
sub
test
outsb
cmp
jae
ja
mov
cmp
fisttpll
mov
outsb
mov
add
js
aaa
aam
inc
js
dec
test
lods
and
leave
mov
jne
fs
inc
out
inc
out
into
sub
or
mov
pop
fwait
mov
bound
fisubl
sub
push
lahf
sahf
sub
and
adc
cmpsb
push
in
test
jb
pop
fistl
mulb
push
lea
push
test
jns
ljmp
std
mov
std
lods
jae
mov
jl
adc
mov
repnz
sub
push
bound
jmp
jecxz
mov
pop
in
cmp
lods
sub
dec
jno
aas
mov
add
jle
loopne
adc
lahf
mov
nop
sarb
int3
sub
fistl
inc
call
ljmp
cs
mov
jmp
adc
movsb
sbbl
push
fdivl
je
popa
mov
xchg
insb
mov
lods
jmp
inc
xor
stos
jb
push
lods
je
push
pop
inc
loopne
cmp
inc
push
loop
decb
movsb
je
repz
sub
add
pop
or
inc
jo
dec
sub
sub
inc
in
cli
sahf
xchg
mov
dec
shl
lods
pushf
xor
ret
mull
dec
push
dec
mov
movsb
sbb
js
cmpb
adc
iret
inc
frstor
mov
mov
jge
icebp
ficoml
adc
push
js
push
or
ljmp
jbe
test
xchg
jecxz
jb
mov
into
lcall
inc
mov
call
out
repnz
dec
aad
adc
jne
nop
dec
inc
inc
jnp
add
inc
mov
xchg
pop
inc
xor
aam
sub
nop
mov
or
into
sub
jp
ret
jns
leave
pop
repnz
scas
sub
mov
push
insl
adc
ljmp
pop
mov
into
adc
cmpsl
fs
out
mov
lea
stos
jns
jp
clc
in
rorb
ret
stos
push
add
in
fcmovnu
mov
dec
cmp
cmp
jae
jmp
mov
adc
cmp
leave
xchg
mov
push
sub
dec
inc
mov
lods
mov
call
inc
std
out
pop
xorl
xor
jne
jns
cs
jge
jle
lock
icebp
js
out
addr16
jb
mov
outsl
mov
or
and
jmp
sub
jae
scas
mov
rcl
pop
cli
out
outsl
movsb
je
pop
mov
jmp
jb
xchg
sbb
sbb
out
out
push
lret
fiadds
sahf
lods
xlat
mov
fcmovnu
repz
out
repnz
jmp
divl
mov
mulb
shlb
or
loopne
out
nop
sub
mov
arpl
out
pop
dec
nop
pop
loop
ficomps
addr16
inc
cmpsl
or
lea
dec
decl
arpl
jl
fiadds
cmp
arpl
pop
inc
flds
inc
and
cltd
jnp
push
test
sub
inc
pop
movsb
or
and
cmp
fs
sub
ss
mov
insl
movsb
add
lret
push
mov
or
mov
pop
jle
fstpt
push
test
sbb
int
sub
jbe
out
int3
pop
adc
mov
bound
and
icebp
loop
ja
push
inc
jne
aas
fstpt
or
data16
in
mov
mov
dec
lods
sub
cwtl
test
aas
mov
les
pop
movsb
fcmove
adc
adc
jmp
or
sub
test
pop
add
movsb
add
incb
lcall
adc
into
pop
and
ss
mov
int
loop
or
movsb
clc
jmp
cmpsb
scas
push
das
dec
test
decb
sub
add
pushf
xlat
inc
push
aas
sub
jmp
imul
adc
xor
dec
sub
add
xor
frstpm(287
dec
std
pop
pop
pop
jecxz
sbb
jp
cs
cli
into
push
sub
les
cmpsb
mov
iret
shlb
inc
mov
add
mov
mov
imul
sbb
mov
cs
mov
push
pop
sysexit
rcll
rolb
jecxz
jl
leave
xchg
lret
movsb
sub
lods
inc
lcall
bound
lods
pusha
or
stos
sahf
movsl
out
jge
mov
mov
gs
int
cli
in
pop
std
gs
push
into
into
mov
xchg
dec
fs
sub
movl
dec
in
jb
push
fdivr
push
mov
outsl
jmp
mov
push
cmp
lea
push
gs
cmpsl
into
and
fprem1
add
cltd
jle
enter
pop
mov
mov
sub
dec
xlat
rorl
inc
pushf
stos
fcomip
shll
dec
mov
sti
push
mov
ljmp
lea
or
jbe
pop
pop
inc
xor
repz
pushf
call
xor
lods
js
jnp
dec
data16
insl
repnz
iret
dec
stos
imul
jb
in
jl
cmp
pop
outsb
aam
mov
mov
outsl
sti
ret
cmp
mov
lods
movsl
cmc
rcrb
mov
jns
icebp
xchg
mov
test
fsubl
sbb
nop
gs
push
lods
mov
int
mov
add
pop
shl
and
movsb
cmp
mov
push
call
nop
jge
scas
roll
data16
loopne
pop
xchg
lret
inc
ljmp
mov
cmpsb
mov
mov
push
fimuls
sbb
jne
jge
out
inc
data16
jns
pop
or
es
sub
loop
cmpsl
fdivrs
or
loope
scas
sahf
je
dec
fstps
pop
ljmp
loop
jge
pop
data16
push
cmp
es
popf
into
jmp
je
shll
sbb
mov
cmc
jbe
mov
jmp
xchg
fwait
sub
lods
fnstsw
out
dec
mov
sub
sub
sbb
and
inc
push
dec
pushf
stos
sub
aaa
xchg
jb
dec
fstl
scas
fiaddl
cmp
into
shrl
mov
add
or
and
jns
movsb
sbb
mov
inc
xchg
mov
mov
xchg
adc
test
pop
ljmp
stos
cmp
lock
adc
jo
add
lret
ds
insb
mov
js
xor
sbb
jnp
outsb
test
outsb
dec
xor
insb
lret
ja
sbb
jb
mov
xchg
mov
or
insb
fldcw
outsb
aaa
cmpsl
mov
xchg
imulb
in
or
ljmp
jb
mov
aaa
mov
mov
inc
repnz
lret
jno
push
jbe
sub
insb
cmp
jb
lods
mov
dec
pop
dec
pop
inc
inc
dec
mov
repnz
dec
jbe
or
addb
push
dec
pop
cli
jnp
jae
dec
outsl
push
push
mov
les
dec
jle
jp
adc
enter
js
inc
insb
dec
xchg
incl
pop
insb
insb
flds
dec
insb
inc
mov
lea
jg
jnp
scas
jns
adcb
push
jg
push
cli
insb
mov
pop
inc
push
jae
scas
push
pop
dec
pusha
ja
bound
jge
fs
popa
dec
outsb
jae
ret
inc
popf
bound
je
cmc
inc
bnd
mov
orb
adc
jae
mov
xor
pop
outsl
mull
dec
push
rolb
fs
push
jbe
dec
rep
les
fwait
mov
inc
bound
inc
into
outsb
inc
jno
dec
cli
jge
bound
inc
cli
inc
inc
stc
test
repz
mov
mov
push
insl
lods
je
inc
mov
shlb
ja
jl
jae
jne
in
jbe
fwait
dec
idivl
pcmpgtd
jae
repnz
loop
push
mov
das
inc
mov
shlb
jo
jl
js
cmc
inc
insb
lea
nop
jo
out
insb
push
insb
cld
jp
insb
dec
pusha
iret
loopne
dec
movsb
inc
pusha
jb
movsl
js
dec
inc
in
inc
jns
into
mov
mov
lret
dec
ficoml
mov
sbb
mov
dec
call
fs
jbe
add
push
test
mov
mov
jg
push
aas
pop
insl
pop
stos
fisubs
ljmp
jmp
adc
iret
jbe
cmp
sbb
jp
inc
jnp
movsb
sub
dec
in
je
inc
loop
shlb
ss
cmpsb
nop
sub
ret
mov
push
push
cltd
mov
insl
ja
push
cmp
pop
mov
cmp
out
inc
insb
into
and
xor
pop
cltd
fdivl
data16
movsb
dec
jp
push
pop
inc
out
push
push
xchg
cld
in
mov
push
sbb
das
xor
inc
nop
mov
mov
mov
jbe
xchg
inc
cmp
fs
out
mov
jp
dec
out
push
fisubrs
sub
mov
push
lea
xor
inc
jmp
ds
das
mov
jmp
insl
cs
mov
stos
jp
mov
mov
aaa
cmpsl
mov
jp
or
adc
cmpsl
mov
adc
popa
fs
push
ss
mov
into
add
jbe
push
xchg
test
pop
sti
jmp
cmpsl
cli
xchg
or
mov
sub
add
mov
mov
lea
stos
pop
decl
jle
xchg
in
and
lock
push
imul
xchg
mov
dec
jmp
fs
repnz
jecxz
mov
mov
in
std
dec
sub
mov
jb
fs
stos
dec
jmp
loopne
fsubrs
fsubrp
jbe
movsb
jmp
mov
lret
inc
mov
hlt
sub
and
outsb
loope
xchg
adc
or
insb
pusha
mov
jge
clc
ljmp
ljmp
jp
outsb
push
icebp
mov
dec
aas
jl
movsb
aam
adc
aas
adc
cltd
mov
adc
insb
xorb
dec
leave
inc
dec
mov
or
enter
in
insb
fs
xor
sub
xchg
dec
mov
imul
stos
push
lods
addr16
inc
in
cmp
cmp
int3
int3
sbb
dec
jmp
outsl
ficoml
dec
lret
mov
mov
or
mov
inc
push
xchg
ja
nop
subb
mov
adc
fidivrl
jo
and
fs
push
test
jbe
test
lock
sub
dec
pop
jle
sub
xchg
push
iret
lods
aam
dec
leave
in
popa
outsb
stos
xor
fmull
shrb
and
xchg
repnz
adc
fdiv
in
xchg
mov
push
mov
ds
push
mov
out
subl
pop
mov
push
flds
sub
fs
pushf
jno
sysexit
ljmp
xchg
dec
fnstenv
mov
jmp
out
arpl
pop
sub
icebp
out
xlat
xchg
or
mov
adc
mov
sub
leave
pusha
mov
imul
das
or
clc
mov
out
or
add
jecxz
ss
aas
imul
mov
inc
jp
lods
and
pop
jnp
mov
in
ret
cmp
scas
insl
push
or
fsubrs
das
imul
sub
mov
popl
mov
add
dec
sbb
mov
inc
scas
pushf
out
inc
inc
into
inc
push
das
xchg
in
int
jb
int3
stos
push
adc
cld
outsb
adc
xchg
push
pop
inc
ja
mov
mov
xchg
jb
scas
cmp
repnz
repnz
mov
sub
dec
xchg
ss
repz
jp
insl
aas
mov
jnp
sub
lods
pop
ret
mov
pop
stos
dec
das
mov
aas
fwait
xorl
push
das
sub
push
in
add
and
in
insb
mov
and
or
adc
dec
jmp
jp
dec
test
insb
jecxz
mov
dec
add
ret
mov
scas
insb
sti
mov
das
adc
jno
aad
in
in
lds
sub
aad
mov
orl
xor
in
mov
loop
add
lds
das
and
das
fwait
push
sub
jnp
xchg
aaa
in
push
ret
out
aam
mov
mov
gs
aaa
jg
das
mov
adc
test
xor
jecxz
add
sbb
in
sub
mov
dec
popf
jb
lods
stos
adc
mov
scas
cmovg
data16
mov
inc
mov
xor
fidivs
inc
out
mov
cwtl
icebp
insb
or
pusha
ret
scas
insl
dec
dec
push
nop
das
adc
push
jmp
outsl
icebp
xchg
dec
jnp
pop
add
push
fs
and
cmp
testl
inc
shr
mov
pop
jb
mov
repnz
imul
fsubr
sub
arpl
lret
aaa
and
cmc
das
and
jmp
movsb
call
shl
mov
pop
movsb
in
cltd
push
mov
cli
out
stos
das
adc
out
inc
rep
or
dec
pop
stos
xchg
push
or
cmp
scas
xchg
pushf
fs
mov
imulb
in
jmp
sub
insb
push
ja
xchg
mov
add
bnd
ljmp
jb
insl
or
sub
jo
lret
mov
fisubs
sahf
lods
dec
sub
outsb
std
decb
insl
lods
xchg
sarl
jmp
lret
movsl
das
ljmp
jb
insl
push
repnz
dec
mov
jl
sub
dec
repnz
data16
insl
mov
lods
cmpsb
mov
xorb
jbe
js
xor
jmp
or
xor
push
loop
mov
into
mov
out
out
jmp
mov
icebp
mov
mov
outsb
es
test
aad
out
pop
jno
icebp
mov
shlb
mov
sub
jb
out
add
or
mov
jnp
mov
mov
mov
push
mov
out
jmp
lcall
insb
out
xchg
stos
mov
pop
fmuls
neg
mov
pop
decb
das
xchg
sahf
in
or
dec
jnp
lcall
ss
jae
pop
insl
stc
loopne
jbe
xor
outsl
dec
hlt
push
je
stos
jb
push
rcrl
test
and
cmpb
cmp
icebp
insl
xchg
jo
pop
sub
push
cmp
mov
stos
gs
sub
pand
movsl
mov
insl
hlt
enter
in
cs
push
lods
sub
test
arpl
adc
mov
cltd
sbb
jmp
adc
js
pusha
mov
jne
sbb
xor
imul
mul
in
cmpsl
add
inc
orl
and
scas
jp
clc
push
push
sub
jbe
sbb
clc
jno
repnz
sub
sub
xor
out
xchg
dec
jp
repz
fsubrs
adc
cs
xor
sub
push
jmp
cmpsb
outsb
rclb
cmc
das
mov
insl
jbe
ds
nop
jge
or
lea
jmp
mov
shrb
push
movsb
ret
ljmp
dec
loopne
cld
mov
out
ljmp
js
ficoml
jp
mov
and
jge
lea
stos
cmc
sti
scas
enter
cli
cmp
pop
decl
adc
dec
jns
ret
sub
dec
movsb
xchg
mov
push
jne
cmp
and
pop
jo
insb
daa
jg
out
ret
fadds
dec
leave
cs
cmp
xor
sub
xchg
rolb
stos
shl
pop
sub
insl
shlb
movsb
pop
sub
dec
pop
inc
popf
outsb
and
xchg
clc
outsb
sbb
arpl
inc
jno
or
js
stos
cwtl
gs
sbb
hlt
pop
repz
ret
mov
jbe
or
cmp
fidivrl
insb
push
mov
jge
lea
adc
xchg
lcall
dec
mov
dec
out
dec
out
in
or
add
xchg
iret
add
adc
rolb
push
data16
lods
sar
jne
jbe
xchg
cmp
mov
xor
rcrb
pop
cmp
jg
mov
imul
and
outsb
xchg
fs
out
ja
ja
mov
sub
imul
fstpt
scas
mov
mov
dec
fmuls
mov
outsb
into
lret
addr16
push
add
iret
or
xor
mov
and
sbb
fs
out
adc
mov
xchg
out
ret
and
push
or
push
aas
mov
mov
cwtl
lds
jg
pop
jne
inc
jno
push
xor
jbe
xorb
cmp
cmp
mov
push
cmpsl
jle
xchg
out
fs
arpl
adc
inc
das
lea
in
lods
lahf
into
loopne
shll
and
jle
shlb
cmp
test
add
sbb
sbb
clc
push
lea
dec
leave
jno
ja
movb
mov
fs
jge
inc
imul
je
dec
dec
sub
cwtl
mov
cmpsl
inc
mov
addr16
xchg
sbb
xor
outsl
xlat
int
push
sub
shl
pop
arpl
add
aaa
pop
jle
dec
or
xorb
mov
les
sub
sub
push
adc
popa
ret
sbb
ret
jbe
jp
std
mov
pop
je
and
add
ljmp
add
add
pop
enter
ror
xor
mov
movsb
rclb
sub
hlt
bound
mov
mov
dec
inc
popa
lods
outsb
jp
and
adc
cs
lods
imul
movl
scas
inc
sub
jmp
lret
movsb
insb
cmpsb
hlt
out
sbb
sti
decb
dec
cmpsl
lcall
lcall
das
rcrb
mulb
mov
call
ja
dec
gs
lea
dec
xchg
jmp
cmp
mov
enter
imul
rorl
test
sar
jns
mov
shl
jg
inc
int3
rolb
mov
cli
into
cltd
imul
mov
dec
int3
pop
push
push
cld
cmp
mov
sbb
ret
psubq
int3
subb
sub
inc
push
mov
sbb
out
add
outsb
jp
outsl
push
mov
pop
inc
and
push
pushf
sub
xchg
fistpl
in
push
adc
cwtl
fwait
outsl
push
ret
not
scas
jbe
fisubs
fisubrl
fs
out
cwtl
jo
idivl
push
cmp
or
in
jo
fs
inc
fnstenv
fiaddl
aas
or
data16
psllq
jp
fs
imul
mov
xor
rcll
jbe
adc
pop
fsubrs
mov
cmpsb
add
lods
aam
in
fdivs
or
insb
fisubrs
jge
dec
dec
movsb
je
xchg
mov
jne
jo
fcmovne
sbb
cli
xchg
repnz
push
test
outsb
xor
pushl
fdivrp
add
ja
cmpl
rcrl
lcall
add
lahf
pop
rcrl
test
repz
dec
sti
mov
ljmp
fbstp
jb
inc
jg
sub
mov
rcrl
jae
dec
cs
lret
cltd
aad
mov
in
mov
mov
lea
fs
sub
jmp
mov
sti
cmp
pop
dec
jl
sbb
jl
imul
addl
inc
push
xlat
dec
out
pop
cmpsl
dec
incl
imul
or
adcb
inc
int3
and
movsb
call
jne
ja
mov
lret
and
out
dec
pop
adc
lcall
mov
sbb
sbb
mov
js
fs
jp
inc
push
inc
sub
js
movsb
fdivrs
rorl
pushf
in
mov
lea
sbb
sbb
add
mov
sbb
adc
sbb
mov
adc
adc
push
mulb
push
add
movsb
jnp
nop
sbb
je
mov
inc
jns,pn
sbb
stos
sahf
push
hlt
add
stos
jb
fs
jmp
jno
cmp
in
fwait
inc
mov
or
ret
hlt
into
lahf
jb
stos
mov
insb
mov
lods
xchg
jle
mov
insb
movsb
push
ja
lods
add
push
dec
xchg
cmp
fsub
sub
mov
push
pop
mov
js
or
cld
inc
and
ljmp
movsb
mov
cli
mov
lds
jge
cmp
in
movsb
add
jne
dec
mov
mov
clc
stos
ss
dec
jno
orl
adc
sahf
outsl
out
lcall
test
push
add
sti
in
xchg
outsl
sub
popf
cli
dec
xchg
clc
jb
fidivl
insb
push
xor
aam
popa
mov
or
pop
cmc
dec
push
mov
test
or
je
addr16
cmp
stos
inc
sub
test
cmp
sahf
add
mov
pusha
mov
pushf
lea
test
xor
outsl
cmpsb
loop
imul
xchg
pop
out
jle
mov
lret
xlat
xor
lods
cmc
jb
fs
rcrb
sar
inc
dec
adc
sbb
push
or
sub
shrb
test
lods
fs
mov
scas
icebp
jge
es
les
jne
or
inc
ret
sub
insl
repnz
out
ja
js
cmc
aam
mov
push
insl
cmpsb
insb
sbb
lock
push
jmp
sbb
pop
js
roll
push
leave
ret
sbb
mov
loop
pushf
in
mov
cltd
pop
jno
mov
mov
int3
es
mov
out
arpl
pop
in
add
add
mov
insb
or
into
mov
imul
ljmp
fsubl
inc
jne
movsb
jp
push
add
shll
fs
out
fists
rcll
aam
pop
dec
arpl
push
mov
popa
mov
adc
insl
ljmp
enter
inc
shrl
jbe
fs
mov
js
sahf
sbb
in
mov
fdivs
jp,pt
xchg
mov
adcb
dec
inc
or
or
movsb
dec
or
and
fs
adcb
mov
mov
mov
aad
or
dec
stos
or
outsb
pushf
lret
aam
rolb
lods
sbb
test
adcw
outsl
fcmovnu
ss
mov
sub
dec
push
ljmp
arpl
push
arpl
pop
imul
cmc
mov
aas
pop
fs
cmp
push
pop
sbb
inc
pop
mov
imul
jg
loop
pop
sub
fidivs
xchg
shlb
mov
push
loop
scas
das
jmp
and
inc
adc
jae
cli
pop
dec
and
stos
push
leave
scas
syscall
loope
ljmp
inc
je
and
mov
popf
sbb
outsl
into
xchg
lods
mov
es
mov
mov
jne
sbb
xor
int
push
push
inc
ja
push
into
cmpsb
imul
cld
test
add
movsb
cmpsb
cmp
cwtl
xor
movsb
push
dec
mov
sarl
dec
and
outsb
fs
xchg
mov
ret
dec
sub
shlb
or
movsb
in
movsb
sub
jmp
sti
jg
inc
in
jne
cmp
inc
lock
repnz
adc
mov
and
adc
inc
insl
add
scas
lret
or
sahf
ret
call
mov
gs
dec
jnp
nop
xlat
ret
xchg
insl
ljmp
and
rcrl
mov
pop
inc
mov
lret
inc
push
inc
pop
inc
and
sbb
and
popa
sbb
movsb
pop
mov
jns
int
ds
out
sub
daa
add
or
insb
cmp
jns
push
lahf
clc
adc
jl
dec
cltd
pop
cwtl
xor
xchg
inc
inc
fwait
sub
pop
mov
imul
mov
or
shr
repz
fs
lods
ds
movsb
inc
mov
pop
mov
movsl
lcall
sahf
outsb
fs
mov
fsubrl
roll
jo
gs
ljmp
into
iret
dec
add
xor
mov
movsb
dec
xchg
inc
mov
popa
push
aad
test
test
mov
push
movsb
fs
lds
xchg
sti
mov
dec
xor
sub
lods
and
stos
sbb
insb
stc
dec
lea
imul
jb
adc
adc
pop
fwait
into
or
dec
stos
lea
fs
pop
movsb
xchg
ss
stos
dec
mov
aas
sbb
lods
mov
mov
jb
mov
push
ficoml
or
call
fstpt
nop
ss
outsb
ljmp
stc
loop
sub
test
into
xor
add
mov
fwait
sub
inc
lea
iret
mov
or
shl
ret
adc
or
jne
cs
mov
js
inc
push
gs
stos
cltd
sbb
stc
mov
cmc
dec
data16
xorl
outsl
scas
or
les
sarb
mov
imul
push
jae
dec
pushf
shl
jo
xchg
fidivrl
xchg
lods
jns
push
aam
aad
or
cmp
adc
push
ret
and
lds
scas
lds
call
ret
or
sbb
inc
lock
inc
lock
jae
xor
mov
stos
jnp
sub
xchg
test
je
or
inc
aaa
fisubl
adc
inc
sub
aaa
add
mov
movsl
or
dec
pushf
sub
insb
xchg
mov
lods
lock
jmp
movsb
mov
fcmovnbe
shrb
jae
xchg
nop
cmpps
or
cs
pop
mov
imul
sub
dec
pop
and
rorl
lock
rolb
sub
mov
jnp
in
pop
movsb
out
sub
push
loope
movsb
iret
mov
jl
sub
jl
out
or
enter
cs
mov
push
push
cwtl
jl
test
fs
or
and
cwtl
fwait
cmc
inc
call
inc
into
dec
mov
in
xorl
aam
pop
jbe
or
sbb
jne
mov
mov
out
insb
bound
jmp
jns
cli
in
xlat
sub
xchg
or
sub
dec
push
inc
nop
sbb
jl
repz
lds
xorb
jge
enter
fisttps
or
push
aas
leave
inc
inc
jns
lea
lcall
bound
mov
mov
psubsw
inc
imul
leave
pushf
aas
add
mov
pop
sbbb
mov
pop
divl
mov
je
add
inc
jb
inc
lods
lods
fwait
daa
mov
aas
lds
dec
jns
sti
stc
aaa
adc
push
insl
jle
fstps
mov
fimuls
jnp
fnstenv
cmp
popa
fdivrl
jl
popa
dec
movsb
jae
push
jg
dec
sbb
jb
insb
movsb
add
sbb
cwtl
xchg
cmp
jnp
jns
mov
test
lret
sbb
xchg
xchg
or
jl
jb
mov
test
cmp
gs
stos
sbb
jp
js
jp
imul
dec
dec
lods
mov
adc
data16
sub
sbb
aam
and
push
pushf
cltd
ljmp
add
shll
fiaddl
int3
dec
gs
mov
fstpt
inc
mov
push
fiadds
je
aas
inc
xchg
dec
jb
ja
scas
and
mov
mov
and
inc
mov
fwait
jl
lret
jle
cli
js
mov
push
jbe
gs
lods
fdivr
cs
or
jae
imul
stos
mov
mov
jns
or
int
push
adc
xchg
test
mov
lods
outsb
pushf
inc
aas
cld
dec
aas
daa
sub
mov
jns
jo
jle
lock
das
rorb
rolb
push
adc
rorb
mov
jnp
outsl
xchg
sbb
xor
sbb
movsl
xchg
adc
mov
rcr
filds
sahf
and
adc
push
cmpsl
xor
lea
sahf
cwtl
jecxz
pop
push
stos
lds
mov
mov
dec
jo
fdivrs
inc
jmp
mov
jl
inc
fucomip
inc
das
adc
jmp
jo
fwait
test
xchg
xchg
dec
int
int3
cmp
lret
push
pop
call
mov
pop
mov
fnsave
xor
push
out
and
inc
lods
mov
scas
inc
popa
sub
and
into
pop
call
sbb
cmp
int3
lret
ja
in
lods
pop
fs
mov
jns
movsb
jns
mov
insb
fs
xchg
sbb
cmc
fst
lret
dec
scas
je
lods
bound
jo
dec
cmpsl
or
push
jne
mov
mov
cmp
mov
mov
lock
sub
cld
incb
repz
adcl
jg
xor
mov
mov
inc
jmp
xlat
pusha
ljmp
cld
jno
lcall
fsubrs
movsb
insl
inc
jns
stos
clc
jmp
jne
int
pushf
pop
mov
pop
jge
fbstp
fs
add
cmp
push
jnp
dec
pop
sbb
aad
cld
adc
dec
and
pop
inc
sub
push
stc
or
xchg
test
ljmp
jge
repnz
fsubp
dec
in
cld
cmc
pop
clc
std
push
out
es
cli
movsb
xchg
push
add
imul
push
jp
imul
sbb
mov
pop
pushf
or
aas
cmp
xor
mov
mov
testb
lods
fsubs
cmp
sub
sahf
movsb
pushf
stos
jne
push
sub
aas
add
repnz
xchg
jb
jmp
shlb
fs
lds
mov
pop
imul
clc
sbb
sub
sahf
jno
das
xlat
sbb
insl
in
cld
jmp
xrelease
xor
enter
out
cmp
jmp
add
jno
jecxz
cld
jmp
inc
push
cmp
lahf
mov
loopne
xor
push
insb
dec
mov
lods
stos
movsb
lea
jo
pusha
or
inc
int
adc
loopne
xchg
pop
jl
push
or
cli
inc
mov
cmp
adc
jo
adc
into
pushf
sbbb
lods
cwtl
or
jb
js
cld
notb
inc
stos
cmc
xor
stos
xor
es
xor
mov
add
xchg
pop
shll
sbb
and
lea
xor
bound
lcall
dec
ja
aas
fcmovnbe
pop
pop
dec
scas
fs
jne
pop
cld
push
mov
push
ds
rorb
dec
jle
or
push
std
dec
pop
jp
outsb
add
sbb
adc
lods
repnz
jno
pop
divl
mov
sbbl
int3
mov
xchg
add
dec
gs
jl
in
adc
inc
aas
jnp
ds
inc
mov
jecxz
xchg
les
jo
dec
movsb
cmp
adc
sbb
mov
std
or
movsb
lods
xchg
pop
fcom
jge
xchg
jl
jne
dec
mov
or
arpl
ffreep
xor
xor
aas
out
mov
pop
dec
adc
inc
jns
dec
and
movsl
lock
dec
lahf
mov
cmp
stos
mov
xchg
out
dec
mov
pop
mov
sbb
inc
inc
sti
das
insb
adc
pop
sti
sub
push
pop
jge
dec
loop
movsb
out
les
imul
cltd
inc
mov
or
jno
pop
fimull
cltd
out
adc
ss
dec
sahf
dec
jns
movsl
mov
clc
mov
cmc
inc
nop
les
sub
push
lods
rorb
ret
sti
fstps
mov
es
ds
call
push
jb
or
movsb
dec
mov
lods
decl
stos
dec
mov
orl
je
imul
cmpsb
std
and
flds
fyl2xp1
ret
jne
cmp
xchg
out
sti
outsb
ja
pop
cmp
mov
dec
insl
xchg
out
push
fiaddl
inc
fmull
jl
das
in
lock
sub
cmp
add
xor
int
mov
lods
leave
mov
popl
xchg
fs
pop
sarb
out
pop
mov
cmp
dec
dec
jg
mov
outsb
jnp
into
cltd
in
out
pop
inc
or
notl
insb
jg
or
addr16
std
and
data16
sbb
cwtl
jo
insb
xchg
cs
mov
jle
xchg
out
inc
lcallw
push
sbbl
jne
jge
decb
xchg
push
xor
das
jle,pn
testb
jge
mov
lods
mov
gs
pop
adc
mov
daa
add
ljmp
leave
pop
lcall
push
out
das
mov
shrl
stos
dec
jnp,pt
rcrb
jae
icebp
sub
adc
dec
sti
enter
jp
jb
fisttpll
xchg
jge
xor
cwtl
clc
sub
sub
adc
in
cmpsb
mov
jno
imul
js
fsub
cli
mov
pusha
inc
inc
push
jmp
push
xchg
jb
cmp
bound
test
loop,pt
sub
ljmp
sub
dec
lret
add
movsb
sbb
dec
dec
fsubrp
or
mov
inc
jle
mov
clc
bound
xlat
jae
fldenv
out
into
das
mov
sub
mov
pop
pop
push
mov
pop
jg
dec
dec
inc
push
dec
sub
mov
adc
addb
push
push
scas
cltd
mov
dec
push
pop
pop
fdivr
rcl
jle
ret
xor
outsb
in
lods
xchg
jg
mov
imul
mov
popf
pop
push
or
fs
inc
push
leave
inc
sarl
dec
rclb
lret
xchg
in
rol
jmp
jb
fcompl
ds
adc
popw
push
rorl
dec
pushf
repnz
push
pop
dec
pop
scas
lea
cld
cmpsb
out
push
jae
stos
enter
sub
sub
and
insl
mov
shrl
push
cmp
push
jp
pusha
fs
out
xor
and
stos
inc
mov
sbb
mov
mov
sti
fstl
xchg
in
shll
mov
negl
into
jmp
in
bound
xchg
out
nop
shl
or
ret
fbld
push
adc
push
dec
std
out
inc
inc
mov
arpl
or
test
jp
cs
inc
je
jmp
cmp
subb
mov
pop
inc
sub
lods
sbb
inc
lret
adc
pop
and
inc
insb
outsb
dec
test
out
pop
xor
into
lahf
inc
lcall
jbe
stos
inc
sbb
inc
aad
insl
mov
xor
adc
mov
adc
and
lods
inc
lea
test
adc
mov
movsb
out
test
mov
push
jae
insb
bnd
mov
pop
mov
adc
dec
movsl
or
out
cwtl
sbb
decb
imul
mov
jle
daa
fs
dec
imul
sbb
test
adc
out
jbe
lahf
sub
mov
iret
out
push
rep
rorl
data16
sti
cmpsb
add
lock
adc
and
fwait
out
jne
inc
loop
add
insl
cld
mov
outsb
pop
test
repnz
push
arpl
dec
pushf
test
cmp
fisttpl
cmp
lea
sub
popa
add
outsb
jae
movsb
call
jl
and
nop
push
or
ljmp
lret
push
jno
xor
or
xchg
jge
xor
lret
and
and
iret
mov
subb
or
sub
and
daa
xchg
imul
loope
mov
in
sbb
pop
fs
hlt
xchg
and
mov
stos
dec
pop
pop
jmp
jne
das
push
int
pop
cmpsb
mov
lock
mov
sbb
cmpsb
out
xchg
and
ret
incb
xlat
xor
bound
sahf
hlt
add
push
rcll
ljmp
dec
jne
mov
cmp
mov
add
push
lods
movsb
push
sub
jne
dec
movsl
andl
mov
pop
sbb
pop
mov
lahf
les
push
ret
arpl
lods
mov
es
jle
cwtl
imul
cmp
in
sub
std
pusha
xorb
dec
mov
sbb
cmp
mov
stos
mov
out
imul
mov
mov
mov
insb
push
push
ja
imul
jno
inc
or
xor
push
cs
lcall
sbb
imul
jnp
dec
loopne
mov
mov
adc
arpl
mov
sbb
fisubl
xor
in
push
cwtl
sbb
mov
dec
test
cmp
add
mov
xchg
mov
push
ss
mov
test
dec
out
rcll
je
lahf
lods
adc
inc
imul
out
std
test
int3
jp
enter
test
mov
cmp
rcrl
lods
int
pushf
inc
jb
cmpsb
in
xor
ljmp
negl
lods
out
enter
fidivrl
stos
ficomps
push
scas
popa
pop
ret
shlb
jns
ret
shrl
stc
sub
icebp
dec
movsb
jae
in
repnz
daa
repz
fidivrl
and
or
inc
ja
imul
xchg
xchg
and
dec
inc
push
sbb
sbb
lods
ljmp
iret
push
mov
push
mov
dec
out
mov
adc
imul
xor
cwtl
xchg
xor
mov
pop
into
cli
push
lods
or
out
jnp
push
fldcw
jne
pop
movsb
dec
pop
sub
lock
lods
stos
cwtl
std
or
out
fs
jl
test
push
xchg
sarb
dec
insb
inc
push
mov
shl
dec
sub
fsubs
xchg
jp
cmp
lret
in
stos
dec
shrl
lds
jmp
call
dec
xor
iret
dec
xor
cmc
lods
out
in
imul
and
push
pop
jl
dec
sub
das
fs
jb
outsl
pushf
in
lock
hlt
inc
fs
xchg
jmp
scas
xor
xor
inc
mov
dec
cmp
mov
arpl
jne
in
jno
cld
out
lods
sub
jp
jbe
std
jge
lret
das
mov
dec
andl
rep
jae
pushf
adc
jae
insb
out
fs
fisubrl
lea
jb
imul
shrb
mov
sub
add
dec
stos
push
scas
sbb
sbb
jnp
mov
dec
push
dec
adc
test
mov
popa
dec
mov
jb
outsl
jle
cwtl
loope
jbe
sbb
ja
adc
popf
lea
mov
xchg
jge
andl
cld
imul
ss
test
inc
adc
add
imul
outsb
and
push
jae
movsl
test
jg
jp
inc
pop
mov
mov
nop
iret
lds
movsb
pop
cmp
adc
dec
in
jne
ljmp
pop
push
adc
scas
outsl
xor
dec
in
mov
xchg
push
jl
loop
dec
fs
into
pop
mov
push
scas
xor
shrb
mov
out
sbb
inc
imul
lret
sbb
lock
xchg
mov
push
negl
push
jns
in
ret
out
dec
cmp
fwait
cld
imul
mov
jnp
add
rcrb
leave
sarb
or
jnp
dec
cmpsl
mov
divb
or
inc
cltd
jbe
jne
mov
jno
pop
push
movsb
xchg
lea
lahf
mov
or
in
mov
add
add
fs
pushf
cli
jg
and
jl
jno
popf
xchg
adc
out
into
aas
shlb
fnstenv
out
imul
fs
int3
inc
xchg
dec
fwait
sub
mov
loopne
adc
mov
xor
cs
sbbl
xchg
lods
mov
das
jmp
pop
loopne
sbb
or
jl
pop
sbb
std
out
mov
pop
fs
mov
repz
imul
int3
dec
xlat
ret
ficoms
or
movsb
mov
mov
add
sti
imul
lods
fs
xor
and
jo
xlat
das
sub
imul
push
inc
adc
cmc
push
and
stos
add
pop
jns
cld
inc
mov
mul
mov
idiv
out
push
dec
push
in
lods
add
ljmp
jl
jne
push
mov
xor
sbb
ror
pop
xchg
sbb
out
rcrl
lods
fisttpll
and
adc
bswap
cmpsb
ss
dec
mov
into
mov
shlb
out
jo
stos
mov
cmpsl
add
out
mov
ret
push
and
leave
lea
or
out
dec
in
test
gs
jns
nop
or
mov
mov
or
sub
or
and
sbb
pop
cmpsb
in
sbb
cs
or
adc
aas
cmp
pushl
insl
xor
xchg
jnp
jb
shlb
sub
lods
mov
jmp
test
rcll
movsb
jae
addl
clc
jp
xchg
in
leave
pushf
sub
sbb
js
mov
mov
cli
aad
push
xchg
icebp
movsb
inc
std
fucomp
lret
ret
rolb
sub
pminsw
fs
cltd
inc
jle
and
in
mov
pop
shlb
test
inc
push
cmp
out
repz
sahf
xor
pop
push
sbb
inc
push
jle
jne
mov
movsb
test
stos
daa
ror
pandn
push
gs
sub
jne
xchg
push
add
inc
lods
lods
orl
dec
inc
insl
stos
lea
loop
xchg
pusha
jb
sbb
xor
jo,pn
test
mov
ljmp
rol
inc
mov
in
ja
pusha
xor
das
sarb
and
lods
jl
lock
push
ljmp
inc
nop
jg
repnz
fiaddl
push
push
inc
ss
and
pop
call
push
mov
or
fsub
xor
movsl
lods
in
xor
out
aas
mov
mov
jae
sub
sub
xor
cmp
cmp
dec
jo
in
in
fstpt
pop
sti
pop
mov
lret
arpl
scas
push
ds
add
insl
pop
or
lahf
push
fistl
out
sub
cmp
movsb
cmp
and
aas
push
cld
out
loope
sbb
fs
cmp
mov
pusha
shlb
out
cwtl
jbe
cltd
mov
stos
xor
into
cmp
pushf
xor
rol
lahf
mov
jne
cmp
stos
cmp
cld
adc
ljmp
xor
mov
out
pop
sbb
lret
cmp
mov
inc
mov
mov
mov
or
cmp
xor
in
dec
cld
stos
jecxz
das
mov
sarl
mov
cmc
inc
fdiv
xor
std
inc
adc
hlt
insl
sahf
es
cltd
cmpl
dec
xchg
inc
in
push
das
pop
out
out
cwtl
repz
mov
cmp
outsb
dec
sub
inc
outsl
mov
mov
out
lock
mov
lods
xchg
ficoms
cltd
push
push
adc
enter
bound
lret
prefetchw
inc
jne
ss
insl
xor
stos
inc
mov
shrd
pop
lahf
cmc
fs
mov
inc
push
dec
and
sbb
pushf
test
bound
ja
das
fimuls
cmpsl
adc
inc
movsb
and
shrl
mov
rorl
shrb
inc
jecxz
mov
xchg
sub
pop
aas
mov
insl
inc
push
data16
cmpl
std
mov
inc
push
js
idivl
push
hlt
out
cld
nop
push
jbe
fs
jne
xor
pop
push
repz
sbb
push
call
test
jb
scas
jbe
xchg
cs
stos
lea
cwtl
aas
out
inc
cmpl
cmp
lods
xorb
pop
jne
ljmp
arpl
or
pop
pushf
pop
stc
cmp
rcll
imul
lsl
add
pop
sub
push
xchg
rcll
repz
and
inc
xchg
dec
sub
std
lcall
sub
xchg
or
sub
push
push
xor
cwtl
or
inc
mov
jno
mov
push
ljmp
or
or
test
ja
je
pop
xchg
das
insl
push
mov
inc
add
jg
dec
inc
outsl
movsb
sbb
or
mov
std
or
clc
lods
mov
fisttpll
add
ja
and
jge
sbb
outsl
pop
jecxz
mov
mov
shll
movsb
js
stos
popa
mov
dec
xchg
outsl
mov
sbbb
shl
sbb
rorl
push
xor
xlat
xchg
jp
mov
je
pop
clc
inc
adc
divb
inc
fmuls
cmp
push
xchg
out
or
ret
andb
aad
inc
int3
pop
push
cmp
test
fs
leave
rolb
push
mov
mov
cld
sbb
pushf
imul
mov
jo
cmc
mov
movsb
jp
jl
xchg
sbb
test
add
jae
cli
or
fs
sbbl
jl
pop
sub
cltd
lahf
add
mov
xchg
or
pop
cltd
jle
xor
mov
scas
mov
lods
test
lret
inc
imul
aaa
push
mov
icebp
add
pop
add
je
mov
push
inc
jp
pop
roll
push
sbb
cli
faddl
or
push
hlt
sub
cli
mov
xor
das
insb
push
cmp
sub
mov
jp
mov
xchg
cmpsb
movsb
mov
xor
jl
sar
sbb
sbb
add
push
sub
lds
pop
aas
insb
sub
pop
sbb
pop
mov
jmp
xor
mov
jg
cmp
inc
sub
fmull
and
mov
popf
rorl
and
jae
pushf
loopne
push
and
jmp
cli
movsb
das
xchg
add
pop
pop
ret
into
cli
repz
repz
lods
dec
jp
dec
ds
aam
leave
enter
stos
inc
stc
pop
mov
xor
sub
lds
ss
cmp
jae
jmp
push
lods
leave
ja
push
mov
call
pusha
mov
and
inc
pop
out
xlat
and
adc
push
xor
movsb
out
aaa
xchg
sub
fwait
dec
dec
dec
cmp
mov
loope
pop
push
mov
xor
mov
jp
movsb
daa
inc
sbb
js
adc
out
outsl
ja
push
inc
mov
ljmp
cs
inc
xchg
dec
daa
sub
mov
jae
push
imul
push
sub
sbb
pop
adc
xor
inc
rclb
or
mov
scas
into
jb
loop
cs
adc
imul
and
int3
pop
scas
push
fs
mov
jbe
dec
in
sub
jbe
inc
xchg
xor
mov
pop
xor
fisubs
aam
inc
cmp
jns
mov
movsb
shlb
fwait
add
test
aas
pop
adc
in
mov
mov
mov
push
inc
sub
jae
ljmp
movsb
inc
push
pop
repz
or
shlb
sbbb
and
arpl
pusha
jg
inc
push
insb
xor
ja
fnsave
jnp
pop
ds
pushf
out
fs
dec
ja
xchg
mov
inc
or
sbb
das
je
add
negl
aas
test
jne
push
lds
in
jnp
xchg
inc
mov
into
popa
or
mov
data16
pop
insb
lcall
inc
pushaw
jb
out
sub
push
ja
xchg
jmp
dec
inc
mov
sbb
not
dec
out
test
rcrl
lret
testl
pop
sub
jmp
es
mov
jl
ja
idivb
lock
xchg
fcmovne
pop
inc
sub
or
xchg
sti
out
jne
jnp
or
push
pop
adc
push
cmp
xchg
hlt
repnz
imul
push
mov
cmp
es
pop
cmpxchg8b
leave
xchg
nop
and
add
jg
arpl
sarb
clc
push
and
inc
repnz
mov
hlt
test
xlat
jne
mov
jo
fs
popf
cmpsb
xchg
mov
inc
sub
push
jg
adcb
sar
pop
mov
repnz
mov
dec
jg
cli
mov
aad
paddb
stos
jne
add
and
dec
pop
pop
lret
jp
lods
shll
stc
pop
mov
or
mov
jle
leave
lods
cmp
fsubrs
adc
pop
repnz
pop
lcall
imul
std
adc
or
and
dec
sarl
mov
movsb
xchg
pop
imul
aaa
popa
loope
dec
loop
xor
imul
dec
cmpsb
shll
sbb
movsb
mov
push
and
sub
push
pushf
mov
into
outsb
xor
aaa
adc
stos
mov
xchg
pop
cmp
mov
inc
repz
lods
fiaddl
xor
movsl
xor
lahf
stos
sub
jecxz
fcoml
pop
push
jecxz
pop
mov
fistpl
insb
push
pop
add
mov
lods
shl
sub
aad
lret
mov
idivl
jo
fs
pop
stos
inc
inc
push
sub
jmp
push
cli
fnsave
flds
test
das
out
adc
aad
jne
lock
inc
sub
jge
out
ljmp
icebp
jnp
popa
fldl
push
xor
inc
mov
mov
popf
je
xor
push
and
cmp
or
dec
pusha
mov
loop
insb
jge
cmp
push
lahf
mov
arpl
jmp
jbe
sub
mov
add
insb
pop
inc
shll
sbb
xor
pushf
cmp
add
stos
and
lods
cs
sarl
jnp
fldcw
shlb
shll
pop
sarl
adc
pop
imulb
scas
inc
add
or
jnp
jb
mov
inc
lret
jl
mov
cmp
add
xchg
mov
mov
mov
out
out
sbb
lods
sub
xchg
js
fadd
jb
cmc
add
dec
hlt
shl
xchg
loope
cmp
ljmp
cld
fdivrs
js
mov
movsb
mov
push
fists
and
iret
sbb
and
push
mov
iret
in
xor
and
hlt
sti
idivl
lods
into
ljmp
pop
jae
xchg
jae
int3
fld
mov
push
movsb
push
mov
and
jae
mov
std
pushf
pusha
pop
inc
lods
movsb
cmpl
loopne
out
xchg
scas
pop
cmp
ret
pop
xchg
jl
imul
jne
xor
test
gs
subb
cs
sbb
or
lcall
pop
shrb
loope
out
add
xchg
mov
jge
lcall
leave
jns
ret
or
cmp
mov
mov
lock
xchg
push
sub
jns
data16
pop
or
pusha
mov
xor
push
sub
cli
imul
xchg
sbb
outsl
stos
fdivrs
jmp
sub
pop
in
xor
imul
xchg
loopne
mov
mov
jle
xlat
loop
add
pop
repnz
mov
dec
je
jle
xchg
movsb
jae
push
mov
mov
out
sub
imul
mov
fiaddl
push
jle
inc
imul
mov
arpl
jo
mov
pop
mov
aas
push
dec
push
push
sbb
or
inc
and
fldcw
call
pop
xor
pop
xor
pop
bound
jbe
imulb
addr16
in
insb
inc
insb
ljmp
jno
lret
lock
arpl
mov
mov
jo
dec
jne
test
inc
push
lret
inc
pushf
dec
int
push
pop
push
cs
push
outsl
mov
fsubr
mov
jp
xchg
or
ljmp
jmp
idiv
repnz
mov
insb
ljmp
int3
add
in
fstps
sub
add
mov
lods
push
mov
jge
ljmp
sub
adc
sub
into
bnd
xlat
fiadds
push
nop
mov
movsb
jle
mov
mov
call
push
in
cmp
jno
out
js
in
leave
adc
ljmp
fnstsw
rcrb
cmc
ds
jne
mov
fisttpll
xchg
std
mov
out
fs
push
sti
mov
mov
xchg
mov
ret
lock
inc
mov
int3
push
mov
ret
outsb
rcll
inc
push
pop
cli
xchg
mov
call
push
dec
push
fisubrl
pop
fwait
jns
es
call
icebp
out
add
rolb
cmpsl
inc
adc
cltd
xchg
push
inc
loop
xchg
cs
rclb
xchg
jle
fmuls
pushf
idiv
xchg
sub
out
icebp
mov
ror
ret
mov
mov
fchs
mov
test
cmc
in
xor
sub
xchg
push
sbb
test
das
jo
sbb
xchg
lahf
xor
fs
movsl
push
fistpll
mov
pop
pop
pop
hlt
faddp
out
xchg
in
push
testb
dec
inc
jb
scas
cltd
mov
pop
sub
std
and
jb
adc
cmpsl
add
add
mov
pop
xchg
sti
push
jl
cwtl
mov
pop
ret
inc
xchg
add
imul
ljmp
jns
pushf
ficoml
jge
inc
mov
add
lods
and
mov
negb
das
and
lret
jne
cmp
jb
cwtl
pop
in
xor
sub
mov
push
adc
xlat
movsb
cmp
fs
ret
mov
inc
push
movsl
mov
push
ret
out
flds
xor
scas
pushf
fsubl
cmc
ljmp
pop
cld
cmp
movl
insl
ljmp
sub
jae
in
movsb
pusha
xchg
pushf
push
outsb
inc
data16
mov
mov
ds
inc
dec
mov
dec
call
into
sbb
cmp
cmp
and
jp
fcomps
pop
add
stos
lock
pop
sub
xor
movsb
je
and
cmp
fs
mov
mov
out
add
loope
dec
dec
jns
mov
jle
std
inc
xchg
ret
ss
nop
inc
xchg
mov
imul
into
cmpsl
pop
cmp
mov
xchg
ja
cs
call
movsb
movsl
les
gs
mov
jl
add
sbb
dec
adc
sbb
and
jmp
push
movsl
dec
xor
mov
popf
jae
out
testb
cld
fs
pop
mov
push
sbb
dec
aad
and
les
cmp
fdivs
test
icebp
inc
pop
mov
lock
push
mov
cmp
imul
loopne
cmpb
dec
int3
jno
jb
and
clc
xchg
bound
dec
test
jnp
mov
lock
mov
sbb
xchg
mov
pop
add
lret
jmp
jmp
or
fcmovu
addr16
jle
icebp
jge
imul
xor
xor
test
mov
inc
cmpsl
xchg
cmp
xorb
cmp
insl
jl
imul
cld
push
fistpl
sbb
lods
mov
ss
mov
mov
and
sbb
outsl
xlat
pop
fildll
jo
sub
and
les
lods
sub
mov
pop
xor
adc
stos
inc
sbb
jle
mov
movsb
repnz
mov
cmp
add
jns
xor
jo
pop
mov
mov
in
shrb
inc
jg
push
add
inc
add
push
xorl
popf
jbe
xor
movsb
fsubl
add
pop
jp
in
add
adc
adc
jns
mov
in
lods
gs
in
lret
xchg
and
inc
adc
stos
dec
cltd
adc
std
add
lods
ret
sub
orb
fldl
sbb
inc
mov
mov
aas
sub
call
mov
rorb
add
mov
dec
dec
outsl
ljmp
pop
lea
lods
int3
hlt
pop
daa
data16
inc
push
cld
sub
push
imul
jo
movsl
sub
nop
mov
adc
shll
dec
inc
iret
fimull
push
adc
shlb
es
cwtl
jl
pusha
lcall
push
ja
fs
adc
les
movb
sub
lods
xchg
leave
pushf
push
les
sub
stos
inc
ds
dec
push
mov
lods
cmpsb
mov
dec
jae
cmp
xchg
push
mov
imul
dec
xchg
scas
adc
ljmp
cbtw
test
mov
jg
movsb
ss
mov
inc
out
pop
pop
test
repnz
shl
fdivrs
lods
mov
xchg
add
imul
adc
xchg
insb
in
mov
daa
aam
imul
or
gs
std
cmpl
cltd
mov
cmpsb
subb
ficoms
into
add
lods
hlt
dec
test
adc
int
lret
imul
inc
or
or
cwtl
cli
loop
add
insl
or
fsubrs
inc
mov
push
out
pop
lret
push
pop
push
jg
out
sub
sti
push
testl
jg
mov
cs
rcrb
fcomps
lods
outsl
adc
mov
in
fidivs
adcl
std
and
sub
jg
pop
movsb
mov
lahf
sbb
rcl
cmp
pusha
movsb
int3
pop
ret
icebp
in
push
das
and
sbbl
out
mov
lea
sbb
jl
cwtl
adc
outsl
sub
adc
pop
lret
jbe
addb
add
stos
mov
cltd
mov
fdivrl
out
ss
jg
push
bound
adc
inc
movsb
mov
cmc
jb
jno
mov
loope
xor
scas
mov
or
lods
rclb
jnp
sub
int3
imul
mov
sub
sbb
push
add
push
pop
rorl
sub
inc
testl
in
fsubrp
xlat
lcall
inc
xchg
mov
sub
jne
ljmp
aaa
fldenv
or
movsb
push
sub
fcmovnbe
inc
push
cmp
xchg
cli
inc
mov
adcl
jecxz
mov
xchg
sub
lret
aam
xor
add
movsb
les
fmulp
sbb
lods
icebp
stc
sbb
iret
xchg
xorl
push
push
jns
ja
jg
clc
fwait
inc
cmpsl
imul
mov
mov
inc
out
sbb
jnp
jl
add
xchg
test
gs
enter
pop
popa
mov
imul
loop
ret
xchg
shrb
xchg
imul
push
bound
xor
xchg
test
icebp
pop
cmp
or
test
jl
mov
into
xor
mov
rorb
movsb
insb
mov
orl
push
fimuls
pop
cmp
push
push
xor
mov
lret
cld
data16
mov
mov
mov
pop
adc
cmpsl
outsl
jle
adc
movsb
aam
push
sbb
xor
outsb
xchg
pop
xchg
jle
imul
nop
push
mov
iret
xchg
sbb
mov
mov
pop
movsb
in
outsb
adc
ror
jle
jo
mov
push
fwait
xchg
inc
jmp
pcmpgtw
ljmp
clc
mov
test
or
aas
jle
adc
int
inc
inc
jo
mov
adc
repz
dec
or
roll
sub
hlt
jae
adc
nop
loope
jecxz
jnp
mov
ds
bound
jne
mov
les
popf
in
ret
mov
aam
jb
and
mov
xchg
ljmp
cld
dec
inc
jmp
sbb
leave
lahf
je
call
sti
leave
or
imul
cmpsl
xchg
addb
or
lret
testb
ja
fnstenv
inc
inc
jge
adc
fmull
test
push
add
pop
xchg
or
push
mov
ds
push
push
icebp
jne
mov
std
or
leave
and
sti
mov
mov
cltd
sbb
mov
scas
movsb
push
cmp
movsl
sub
cltd
in
jle
sub
xchg
into
inc
fs
add
xchg
repz
sub
push
ss
xlat
and
adc
jb
mov
aad
bound
xchg
ror
inc
sbbl
adc
pop
clc
lock
rolb
sbbb
sub
xchg
mov
cmpsb
cld
lahf
xor
push
lea
jecxz
fs
push
shl
outsl
mov
in
test
cmp
fnstenv
dec
test
mov
pop
enter
cmp
xor
dec
cs
push
and
or
leave
dec
mov
mov
out
icebp
mov
js
add
shll
pushf
sub
push
jp
nop
jge
fs
jecxz
inc
fcompl
lods
inc
data16
sub
decl
inc
push
adc
insl
rolb
or
inc
sbb
pop
fs
pop
hlt
out
movsb
fistpl
dec
push
mov
adc
mov
mov
loope
mov
push
call
mov
stos
test
cmp
jecxz
inc
xchg
das
repnz
cmp
pop
stos
jge
cmp
sbb
cmc
push
out
out
lods
xchg
mov
push
jnp
inc
rcr
cmc
jb
cmp
mov
hlt
and
push
and
repz
rcr
cmpsb
cmp
mov
sbb
mov
imul
in
movsb
inc
popa
mov
cs
pop
inc
or
sub
and
aas
loope
hlt
jae
cmpsl
cmp
aas
and
mov
mov
pop
sbb
pop
notb
jecxz
loope
sbb
push
addr16
repnz
xchg
movsb
jecxz
or
cs
xchg
dec
adc
xchg
loop
leave
imul
call
and
leave
mov
test
cmp
inc
leave
or
inc
ficoms
imul
mov
add
or
mov
push
mov
lret
stos
and
repnz
sub
jb
xchg
jecxz
push
andl
addr16
xchg
fldt
iret
cwtl
lret
jecxz
add
xor
xor
jno
lret
pushf
rcrl
dec
arpl
dec
imul
jb
jmp
xchg
mov
out
mov
sub
jp
je,pt
inc
cmp
js
mov
jle
iret
xlat
or
std
mov
fs
outsl
out
in
jno
and
push
sub
insb
int3
bound
pop
fsub
jns
out
movsb
sub
dec
add
cmp
fdivrs
ja
dec
lcall
jo
mov
outsb
sbbl
push
fpatan
daa
hlt
or
push
jo
mov
mov
mov
mov
sub
imul
or
pop
into
mov
push
fwait
aam
or
or
leave
stos
jl
movsb
test
sahf
popa
adc
inc
pop
dec
repz
mov
popa
fs
in
xlat
lods
fstl
movsb
add
adc
xchg
mov
imul
leave
out
imul
push
aam
pop
fdivrp
rclb
cs
pop
call
inc
stos
gs
mov
sahf
lahf
icebp
shr
mov
js
push
inc
fsubrl
mov
cs
jns
pop
pop
movsb
rcrb
push
xchg
ja
jae
dec
mov
jmp
mov
xchg
sti
out
stos
push
cmp
mov
add
fnsave
cs
add
ss
cmp
mov
mov
in
pop
push
popa
scas
adc
jmp
lods
inc
in
pop
xlat
das
in
jae
adc
popa
aas
inc
icebp
xor
mov
insl
ss
push
pop
in
stc
cld
xor
push
or
out
lods
movsb
mov
jmp
jle
sub
popa
mov
sub
xor
fwait
push
mov
shrl
movsb
jle
sub
ja
and
jecxz
mov
std
push
je
ja
adc
mov
adc
test
inc
in
xor
insl
inc
cs
lea
cli
popl
lahf
xor
outsl
pop
ja
lret
call
inc
ds
jmp
xchg
fs
aaa
hlt
jge
mov
aaa
insl
jb
mov
xchg
cmp
lret
push
push
mov
lret
mov
out
orl
cli
mov
lods
and
ljmp
jae
mov
repnz
call
add
cwtl
mov
dec
mov
adc
dec
fsts
rol
nopl
push
jmp
lret
outsl
add
aas
jb
movsb
xor
jne
sbb
nop
xchg
test
lahf
movsb
cmc
mov
inc
mov
stc
outsb
or
outsl
dec
sbb
push
les
jl
and
mov
pushf
repnz
mov
ds
cmpsb
outsl
mov
and
mov
jg
sbb
stos
loop
negl
sbb
in
add
push
jle
out
jno
leave
lods
stos
cli
ljmp
ds
bound
inc
cmp
push
test
idivl
xor
cmp
rorb
cmc
lock
push
aad
push
inc
lret
fs
nop
into
enter
mov
fadds
lea
add
movsb
insb
rcrl
fs
or
aad
andb
hlt
pop
ljmp
fsubs
pop
clc
cltd
inc
lret
inc
sbb
out
sub
cmpsb
sbbb
dec
pop
out
lods
dec
jmp
adc
pop
adc
lock
xor
inc
gs
dec
dec
lret
pop
dec
push
cmc
std
dec
xchg
lds
or
fists
cs
mov
jmp
lods
xor
inc
ss
test
cli
xchg
mov
pop
popf
pop
add
sub
mov
jle
mov
repz
sahf
mov
out
pushl
lock
inc
loope
push
cmp
fsubl
add
or
cld
fidivrl
std
jg
aas
nop
inc
cmp
pusha
jmp
and
popf
fidivrl
mov
insl
sbb
sub
add
dec
fsubrs
jg
addr16
std
pop
stos
push
add
mov
repz
pop
imull
out
dec
addr16
aam
and
inc
cmp
dec
jne
pop
jg
pop
mov
sahf
add
in
aas
xor
and
std
in
cltd
int
push
or
mulb
cld
add
mov
jmp
jl
sub
xor
ljmp
push
lcall
cmp
aam
mov
shr
inc
jns
cmpsl
jbe
lret
ljmp
and
stos
cmp
and
add
mov
mov
dec
mov
xchg
addl
packsswb
stos
fs
fdivrs
fidivs
sub
jb
das
ficomps
insl
cmp
cltd
pushf
sbb
imul
mov
add
jmp
movsb
fsubrs
xchg
nop
pop
dec
clc
and
outsl
jg
dec
dec
mov
sahf
add
call
hlt
adc
lcall
mov
push
jecxz
pop
cmp
fs
aam
push
icebp
stos
lea
cmp
sarb
jno
mov
inc
xor
jnp
pop
ljmp
add
mov
aaa
mov
add
test
sbb
popf
push
fwait
es
test
sub
icebp
rcr
arpl
loop
sub
movsb
xchg
sub
dec
mov
cmpb
push
sbb
aas
movsb
adc
pop
popa
jne
lds
lods
ljmp
jp
lds
negb
inc
int
jno
fnstsw
inc
inc
into
sbb
out
movsb
inc
jp
cwtl
jbe
add
xorl
cmp
add
push
dec
sub
jle
adc
pop
pop
mov
xor
jns
movsb
lods
int
adc
cs
pop
mov
ficoml
adc
imul
pop
mov
cli
mov
xchg
jne
xor
fimull
fstpl
and
inc
pop
imul
sbb
mov
out
inc
and
shll
push
stos
inc
call
ss
leave
roll
jmp
xchg
jnp
mov
cmp
loop
pop
sub
or
fnstenv
sbb
xorl
gs
fldenv
mov
and
cmp
mov
fcompl
mov
push
mov
pop
int
mov
clc
xor
jg
inc
lea
or
cld
imul
fs
dec
sub
and
cmp
sub
test
sar
sub
mov
into
dec
push
fucomip
insl
mov
and
fs
in
or
xchg
cmc
daa
popf
add
jae
adc
leave
gs
pop
jae
loop
or
jns
fs
fisubs
imul
xor
adc
into
xlat
fdivrs
adc
cmp
pushf
mov
lret
stos
add
insl
inc
repz
or
pushf
adc
inc
test
jne
cmp
inc
shrl
inc
sub
fs
repnz
pop
imul
sbb
xor
mov
clc
cmpsb
aaa
aaa
xor
jns
mov
ljmp
sub
fwait
stc
fs
mov
iret
lods
nop
jge
mov
mov
shrl
gs
js
jnp
jg
dec
jmp
mov
jg
and
and
lock
loope
imul
inc
sbb
xchg
cmp
scas
push
cmp
dec
push
ljmp
xchg
cmp
popf
dec
ljmp
push
sbb
mov
in
xchg
fs
pop
mull
iret
jb
jp
mov
jnp
aad
cmp
das
rorb
pop
cwtl
cmpl
movsb
lret
test
jmp
fidivs
jg
in
adc
push
adc
fs
jp
mov
sbb
mov
inc
std
lcall
scas
mov
imul
cmpsl
push
and
xlat
shld
jae
inc
das
js
pop
add
push
int3
fsubl
fidivrs
pop
xor
pop
dec
fucom
cmp
sub
je
fs
or
jle
lock
in
nop
mov
dec
insb
inc
icebp
mov
arpl
jne
mov
ss
scas
outsb
mov
fstpt
push
out
cmpl
adc
mov
push
xchg
jle
inc
or
stos
adc
mov
aad
mov
icebp
dec
jo
dec
sub
jbe
mov
jle
push
adc
sub
jns
movsb
mov
mov
inc
mov
out
lahf
sub
int
mov
dec
sbb
aas
cmpsl
cmp
outsb
fs
push
inc
push
cmc
ljmp
sbb
mov
fildl
inc
out
orl
mov
jp
adc
outsb
inc
outsl
orb
fcmovbe
and
cmc
inc
jb
dec
and
add
xchg
lods
sbb
pop
push
push
or
mov
jecxz
jmp
dec
enter
rclb
mov
and
xlat
and
sbb
repz
ss
mov
push
jmp
or
jbe
xor
push
and
jecxz
test
push
lahf
insb
cltd
xor
jp
insl
movsb
fdivrl
adc
sub
or
fnstcw
inc
lock
je
pushf
in
mov
outsl
xchg
les
pop
imul
imul
cmp
xchg
dec
push
inc
adc
loop
sub
inc
pop
push
inc
push
das
dec
push
push
push
stos
lea
add
push
xchg
movsl
popa
mov
ret
hlt
pop
ss
xchg
aad
xchg
ficoms
sahf
std
aas
leave
int3
push
inc
push
rorb
mov
push
sub
jecxz
stos
inc
orb
add
sub
jb
rcr
cmp
gs
xor
push
mov
jae
or
mov
inc
sbb
mov
xchg
mov
stos
insl
inc
movsb
aas
mov
ss
jnp
push
sub
push
ljmp
inc
jecxz
jmp
aad
addr16
xchg
dec
jnp
push
pop
push
aas
pushf
sub
idivb
adc
xchg
dec
fisubrs
and
lock
mov
clc
insl
mov
in
frstor
xorb
stos
ljmp
jmp
fs
xchg
sahf
mov
dec
mov
hlt
mov
stos
jb
lds
std
cmp
pushf
add
jl
popa
jne
outsl
insl
sub
int3
mov
dec
xchg
mov
mov
fdivrl
cld
mov
inc
fstps
pop
out
sbb
inc
test
into
test
nop
push
mov
inc
leave
hlt
pop
subb
mov
sub
daa
xchg
mov
mov
addr16
adc
shlb
stc
outsl
sub
inc
mov
jge
cmp
stos
lret
mov
sarl
test
jp
pop
les
test
sbb
push
dec
aas
fs
cli
cmpsl
ds
xchg
adc
outsl
and
ds
les
in
pop
mov
js
incl
dec
shrb
test
mov
push
push
shll
fildll
pop
movsb
mov
repz
leave
jae
push
lret
dec
mov
out
movsl
fnstcw
ja
add
or
cld
insl
sarl
loop
adc
or
push
mov
insb
insb
lret
mov
or
in
pop
int3
cmp
and
ss
pop
xor
mov
add
jl
out
jbe
mov
sarl
push
push
push
insl
push
filds
jg
incl
sub
fs
cld
push
mov
sub
push
cmp
fs
mov
arpl
dec
inc
inc
and
xchg
add
cli
je
push
jp
scas
cli
stos
rep
aad
cmp
mov
repnz
mov
jbe
aad
fs
inc
dec
sub
movb
negl
dec
push
ss
sub
sahf
push
adc
pop
out
call
sbb
push
outsl
fs
movsb
mov
sbb
lods
jmp
adc
out
in
imul
ss
xchg
sbb
and
jnp
adc
mov
dec
push
lret
aam
xchg
inc
ret
xchg
je
andl
dec
mov
repz
jmp
enter
clc
test
mov
dec
ja
jne
pop
rcll
adc
sub
shl
jae
icebp
fwait
mov
fs
mov
and
icebp
inc
sbb
xor
aas
das
mov
inc
aam
fbstp
stos
stc
ret
pop
xor
dec
outsl
popf
push
gs
xchg
lret
notl
mov
cli
jb
icebp
lea
add
movl
pop
out
rcrl
jb
in
mov
jmp
inc
stos
lds
scas
mov
xor
inc
push
dec
inc
iret
shlb
ljmp
jp
cld
dec
cli
ficoml
adc
jle
cld
sbb
bound
inc
fists
ljmp
jae
or
fs
sub
rcll
rol
fs
mov
dec
mov
out
movsb
xor
sub
ret
xchg
incb
insb
xchg
mov
in
push
sti
test
pop
popf
sbb
out
pop
push
jg
add
test
sbb
sbb
fs
or
stos
movsb
mov
into
dec
or
cmp
jb
fldenv
test
in
inc
dec
inc
xor
lahf
leave
xor
push
lods
insb
xor
leave
movsb
jg
in
nop
push
add
mov
pop
in
scas
lods
xlat
movsb
inc
iret
mov
les
out
fs
add
cld
xchg
dec
mov
pop
ja
loopne
add
and
mov
mov
imul
pop
cltd
das
lret
arpl
mov
inc
arpl
inc
lds
mov
jbe
ss
pop
loope
shlb
addb
or
insb
out
sub
pop
sahf
sbb
add
add
fisttpll
fs
insb
mov
mov
mov
inc
jp
icebp
out
jbe
add
ffree
ja
sub
jl
mov
lods
mov
aam
xor
daa
jmp
fscale
rcrl
cwtl
xchg
adc
dec
and
cmc
cld
dec
test
imul
jb
dec
inc
lods
cwtl
and
xor
pushf
lret
lahf
push
imul
cld
jae
push
cmp
inc
movsb
mov
je
or
xor
cmp
mov
xchg
mov
ja
std
std
mov
cmp
test
aam
sub
ret
inc
fwait
and
cltd
stos
adc
pop
jno
add
jge
mov
ss
aad
out
adc
adc
fwait
mov
pop
fs
loope,pt
or
ds
lcall
mov
inc
push
inc
loope
repz
xchg
mov
and
in
mov
xchg
jp
pop
in
pop
xor
and
ljmp
arpl
mov
jmp
mov
mov
lcall
in
repz
rorb
jae
jb
sbb
lods
xchg
adc
fs
add
repnz
sub
mov
mov
sub
call
in
das
adc
push
pop
xor
xchg
sub
pop
mull
bound
pop
inc
cli
cltd
mov
inc
lods
sub
mov
inc
aam
pop
and
outsl
enter
jp
mov
stc
mov
ret
dec
xchg
ficoms
inc
lods
fcmovne
orl
fs
cli
dec
or
jl
jp
mov
out
into
cld
shll
xchg
xchg
cmp
movswl
cmc
shlb
add
cmp
push
imul
sub
scas
cmp
mov
scas
inc
sbb
mov
xor
pop
icebp
mov
and
mov
jb
pushf
mov
insb
dec
flds
add
xor
loopne
cmp
mov
das
rorb
inc
mov
add
mov
cmpsl
mov
ljmp
ljmp
jo
test
dec
outsb
push
ss
movsb
repz
les
mov
cmpsb
inc
pop
iret
mov
lahf
ljmp
inc
mov
into
out
xchg
pop
fcoms
pop
sub
stos
dec
pop
rcrb
and
adcl
fdivs
roll
in
add
nop
dec
rorl
movsb
xchg
ds
imul
dec
divl
scas
inc
loope
inc
inc
bound
js,pt
sub
and
mov
and
hlt
out
js
inc
cs
leave
inc
cmp
jnp
cwtl
xchg
dec
mov
xchg
hlt
imul
push
sub
add
stos
lahf
ljmp
mov
sarl
and
das
pop
outsl
sub
dec
cli
jno
cmc
test
aas
sbb
in
mov
inc
loope
les
and
jnp,pt
imul
jle
std
shll
xchg
lock
into
mov
rcr
cld
mov
addr16
sbb
movl
jp
sub
nop
cmp
push
sbb
bound
fists
dec
xchg
sub
ret
test
call
push
cld
mov
inc
sub
mov
clc
mov
cmc
stos
inc
inc
mov
fiadds
lret
inc
lds
int3
flds
jl
mov
mov
lods
jb
hlt
cmp
mov
pop
movsb
and
and
mov
push
scas
das
cld
js
lcall
push
je
out
pop
sar
push
ret
sahf
jae
adc
and
mov
rolb
mov
push
jle
lcall
fisubrl
inc
xchg
jnp
xchg
sbb
cli
xor
cmp
pop
sbb
jo
out
sub
push
sub
dec
cld
imul
scas
out
jb
test
xchg
cld
rorl
push
movsb
js
pop
jge
or
in
jb
mov
inc
imul
dec
ljmp
inc
fld
cmp
test
insb
int3
xlat
fs
sub
rclb
jo
iret
inc
mov
stos
lods
pop
lret
mov
mov
add
arpl
in
ret
inc
daa
das
push
into
and
inc
fadds
mov
daa
adc
add
xchg
cmp
faddl
into
mov
mov
iret
pop
jne
cmp
jmp
sub
repnz
adc
jbe
sbbl
jno
std
add
add
lret
xor
or
rcl
push
cmpsb
jp
xchg
xor
test
stos
cmc
fldl2e
sub
jo
sti
xor
or
rclb
pop
stos
mov
stc
or
lret
sbb
mov
out
dec
insl
sub
arpl
adc
ds
mov
hlt
push
cmp
xor
and
insl
in
outsb
mov
adc
dec
ds
adc
mov
jne
pop
sub
ret
pop
push
mov
push
pop
cmp
dec
sbb
imul
sahf
mov
adc
and
int
inc
add
pop
dec
in
fcoms
call
loope
mov
test
ljmp
imul
in
inc
ret
adc
cmp
xchg
je
insb
adc
cltd
sahf
pop
cmp
pop
push
ljmp
outsl
imul
and
lea
xchg
add
sub
xchg
iret
in
push
mov
sub
sti
sub
jle
ja
je
adc
lcall
jbe
sbb
mov
fs
loope
cmp
dec
outsb
ja
imul
cmpsl
mov
or
ror
xor
mov
out
ret
addl
jne
sub
imul
stc
xchg
stos
mul
mov
fadds
mov
inc
out
cmp
xchg
mov
jecxz
jmp
das
mov
dec
repnz
cmc
insb
jbe
jmp
lods
ja
jnp
sub
cmp
clc
jb
jb
inc
out
cs
pop
loop
cld
adc
in
movsb
lods
sub
int3
aaa
fdivr
cli
sbb
ret
xchg
daa
outsb
inc
xor
gs
insl
adc
aas
call
ret
mov
jge
lret
ret
xchg
bound
xchg
mov
movsb
out
lret
xorb
clc
mov
xchg
adc
sub
or
push
xchg
jnp
orl
pop
outsl
pusha
ret
push
or
mov
push
pushl
out
sbb
pop
stos
ss
jae
cld
je
jne
std
imul
mov
popf
cmp
cmp
in
scas
cltd
dec
pushf
dec
ficoms
mov
mov
cmpsb
or
fisttpl
or
inc
push
rcll
rcrl
sahf
xchg
popf
mov
dec
dec
sub
cmpb
dec
ret
xchg
cmc
jno
ret
or
nop
xchg
outsb
push
insb
in
xchg
pop
and
pop
jno
xchg
das
sbb
inc
nop
fwait
ss
dec
fs
lods
mov
in
xchg
sahf
enter
data16
out
roll
test
pop
lods
fstps
jnp
push
repnz
jle
ret
rcll
add
jg
xchg
les
sbb
popf
pop
xor
cltd
mov
dec
sahf
mov
sar
cmp
icebp
ffree
and
mov
das
ficomps
jg
bound
subb
inc
fs
nop
bound
push
lds
in
add
in
dec
or
add
cwtl
mov
in
cmp
pushf
adc
int
xchg
call
cmpsb
lods
ret
mulb
inc
negl
mov
xchg
in
inc
out
pop
fadd
mov
imul
loope
inc
lods
int3
movsb
dec
jp
and
mov
scas
mov
rclb
imul
ds
lahf
add
xor
pop
mov
movsb
rcl
repnz
lea
es
jg
cmp
cmp
shlb
lods
dec
fcoms
movsb
js
cmpsb
orl
push
xor
and
pop
loop
jl
xor
fnstsw
pop
sub
ljmp
sbb
outsl
sbbb
cmp
cmp
adc
push
ljmp
mov
jbe
pusha
dec
mov
adc
movsb
jb
push
test
mov
add
lds
js
sbb
push
push
mov
stc
add
mov
mov
cmp
mov
inc
pop
insl
pop
shrb
pop
pop
mov
fs
pop
ljmp
dec
es
xchg
hlt
ficomps
std
movsb
mov
sahf
mov
aaa
aas
mov
adc
push
imul
sub
adc
out
lods
outsl
fidivl
gs
adc
imulb
sahf
testl
repz
out
bound
push
pop
insb
add
cmp
mov
jecxz
inc
jge
outsb
push
in
pop
test
mov
movsl
lcall
push
insb
subl
outsb
fs
fldz
cli
gs
lcall
pop
sub
push
and
loop
stos
and
bound
in
fistpl
pop
xchg
sbbl
neg
shr
movsb
out
jp
mov
cwtl
mov
jp
out
cld
iret
pop
fnstenv
popf
xorb
xlat
dec
and
jp
sub
dec
loop
inc
pop
mull
mov
loopne
das
and
out
push
cltd
mov
push
je
mov
jle
int
inc
dec
cmp
xchg
or
sub
insb
cmc
dec
and
stos
fwait
shrb
aam
lcall
jno
stc
jo
js
enter
jl
outsb
mov
iret
or
stos
gs
jg
jbe
or
push
xchg
out
inc
adc
sbb
adc
inc
in
lcall
and
in
add
mov
and
dec
pop
pushf
pop
push
nop
jne
pop
mov
jge
in
jb
mov
sbb
add
pop
nop
and
movsl
int3
cld
push
addr16
xchg
in
adc
orb
xor
cmc
addr16
out
lret
dec
movsb
pop
fistps
jnp
es
clc
mov
xchg
jp
shlb
dec
mov
inc
add
jg
push
and
or
mov
jle
pop
call
mov
dec
xor
stos
in
cmp
shrd
icebp
xor
aad
mov
out
sub
cmp
andb
fs
xchg
dec
movsb
mov
shlb
add
inc
push
aas
xchg
lret
fs
xchg
out
and
leave
jmp
scas
inc
jbe
push
jo
es
inc
add
jle
scas
imul
inc
sbb
cli
rcll
in
or
dec
lods
push
andl
lods
adc
mov
imul
dec
leave
push
or
and
jl
sub
test
stos
inc
movsl
jg
roll
enter
pop
jmp
nop
jle
aam
and
ret
lods
ret
je
jae
fstl
mov
sbb
das
and
imul
add
jb
mov
insl
lds
in
into
pushf
mov
cli
test
stos
ja
sbb
dec
jne
xor
pushf
xor
fnstcw
or
fidivrl
mov
pop
mov
jl
sti
push
adc
nop
cld
lock
rol
cmp
push
dec
jp
popf
cs
sub
mov
mov
enter
inc
leave
xor
in
lea
loopne
sub
in
movsb
pop
pop
stos
sbb
inc
dec
das
cmp
sub
sub
iret
enter
insl
lret
icebp
aad
icebp
mov
out
insl
das
pusha
out
mov
push
jne
cmp
loop
mov
ds
lds
push
and
xor
jg
and
fwait
jne
sub
push
inc
mov
xchg
sbb
insl
dec
sahf
jne
adc
mov
clc
adc
scas
xchg
cld
jmp
jl
fs
push
mov
jp
jecxz
xchg
shll
push
pop
cltd
push
outsb
sbb
mov
cmpsl
or
add
inc
nop
cmp
fidivrs
je
addr16
lods
push
lahf
and
sbb
ljmp
sub
pop
ljmp
adc
xchg
and
out
xchg
pop
mulb
push
mov
ljmp
popf
sub
pushf
dec
pmulhuw
mov
pop
lahf
ss
mov
dec
pop
shrb
adc
inc
pcmpgtb
fildl
popf
arpl
leave
jecxz
mov
fs
xlat
sub
mov
rorl
dec
adc
inc
in
fs
pushf
pushf
push
stc
outsb
in
cltd
jbe
sub
push
daa
sbb
inc
sbb
out
pop
cmpsl
insb
out
notb
gs
and
mov
cmp
in
jae
and
ret
adc
jge
outsb
xchg
aaa
repz
xchg
dec
jno
cld
sbb
dec
or
shr
int
and
mov
mov
rorb
cmp
adc
out
mov
aas
cld
movsl
cmp
loop
rcrl
shl
jnp
insl
add
and
add
insb
ds
sahf
icebp
mov
cmp
outsl
lea
push
adc
jae
pop
les
cwtl
ljmp
push
loop
std
loopne
fsubr
aaa
jne
mov
adc
jg
jle
or
sbb
lods
sub
jb
sbb
loopne
xor
scas
mov
sbb
mov
mov
adc
xor
push
outsb
inc
movsb
ljmp
or
sub
and
push
xor
pop
ss
inc
mov
arpl
fwait
push
or
xchg
aam
incl
dec
push
mov
push
sub
mov
stc
adc
cmpsl
sbb
pop
rorb
arpl
sbbl
xchg
sub
test
nop
ljmp
jnp
mov
push
adc
or
sbb
mov
pop
add
fs
dec
lret
add
stc
inc
stos
lahf
fs
sahf
shlb
stc
sti
push
aam
insl
push
lret
jae
rolb
int
jge
mov
push
lahf
hlt
cmp
imul
dec
mov
testb
sbb
imul
jnp
jae
jmp
pop
pop
iret
cmpsb
xchg
jb
jno
cli
mov
pusha
popa
in
add
sub
mov
lcall
jnp
dec
stos
sub
mov
jle
push
inc
insl
or
dec
ljmp
fildl
pop
int3
xchg
sbb
js
ret
sbb
imul
mov
jl
inc
xor
fiaddl
push
mov
addl
cmpsl
pusha
and
outsb
add
mov
mov
sub
in
pop
cmp
nop
mov
cltd
adc
sbb
mov
ret
xor
int
jle
int3
add
dec
add
jp
addl
gs
adc
into
hlt
leave
insb
iret
or
xchg
or
ucomiss
jg
ficoms
fsubl
fbld
jg
cli
ljmp
push
xchg
jle
pop
and
scas
test
shlb
adc
mov
sub
cmc
loopne
lahf
outsb
shr
ret
adc
loop
int
sub
fdivs
or
cmc
pushf
das
fisttpll
fmul
adc
add
sysenter
mov
sbb
nop
fwait
out
xchg
stc
xchg
dec
enter
push
inc
cmp
sub
ret
dec
xchg
dec
mov
outsb
xchg
leave
dec
push
xor
inc
popf
dec
cmp
add
movsb
imul
es
cmp
lea
ljmp
fs
and
les
pop
out
and
xchg
mov
jecxz
in
rol
xlat
add
push
js
xchg
les
loopne
ljmp
loope
jns
push
dec
cmp
dec
stc
insb
push
mov
arpl
es
movsb
sahf
movsl
fdivr
or
rcrb
test
push
repnz
cmpsb
cmpsb
pop
push
rcrl
pop
sub
sub
lahf
sbb
inc
mov
jns
sub
mov
mov
imul
clc
andl
test
push
mov
frstor
inc
fisubl
inc
and
js
add
inc
push
sbb
std
pop
xchg
push
in
add
ret
sub
xor
test
inc
pop
add
sub
sar
movsb
fcmovbe
scas
dec
pusha
bound
mov
sub
shlb
sbb
hlt
fbld
pusha
mov
test
ss
arpl
add
add
push
cmp
call
pop
jo
sbb
pop
outsb
add
daa
and
fs
stos
dec
addr16
sub
popa
add
andb
inc
push
imul
insl
cltd
mul
cli
mov
and
outsl
mov
pop
sub
loopne
cld
push
int3
out
nop
incb
outsl
or
andb
ficompl
dec
push
les
fs
test
cltd
dec
sahf
mov
xchg
fnstenv
into
fs
sbb
cmpl
xchg
add
jae
sbb
pop
jbe
fidivrs
stos
xchg
jg
sbb
pop
jo
or
sbbl
push
out
bound
repnz
xorb
adc
stos
jae
xor
pop
pushf
aam
cmp
pop
mov
jne
mov
rclb
lar
fs
jge
stos
std
cli
pop
mov
lret
jnp
in
xor
jge
inc
dec
cmp
fsubrl
lret
jp
sbbb
pop
jae
inc
popa
lahf
cmc
jns
xchg
xorl
sbb
sti
gs
jb
inc
pop
jae
jg
mov
jp
jmp
out
imul
in
push
add
ja
aam
aad
fistpll
ret
xor
add
dec
outsb
adc
dec
add
fwait
cmpb
repnz
jae
insl
in
fstps
adc
mov
lsl
into
xchg
pop
push
mov
iret
push
fsubrs
mov
xchg
jmp
dec
mov
lret
and
lea
pop
stos
repnz
iret
cmp
push
adc
pop
fbld
call
push
in
add
movsb
mov
adc
mov
fisttps
pop
cld
pop
sarl
lods
test
int
aam
out
mov
test
out
stos
jb
das
mov
adc
fists
popa
push
push
cld
idivl
pop
pop
mov
ret
icebp
ss
jnp
mov
cmc
dec
and
adc
mov
movsb
sub
or
xchg
mov
fdivs
outsb
aad
cmpb
mov
test
iret
sbbb
push
popf
fsubp
mov
sbb
lods
pop
inc
jmp
addr16
cmp
movsb
xchg
repz
jmp
cli
imul
jp
pop
loopne
pop
pop
mov
jg
int3
filds
inc
sbb
jnp
adc
fcmovnbe
fs
jl
std
sbb
pushf
xlat
int3
outsl
ss
fnstenv
sarb
int
outsb
fs
ret
pop
push
dec
cs
int3
dec
push
out
movsb
loop
jp
inc
lret
popf
dec
xorl
movsb
jae
stc
mov
inc
fdivrp
insb
lahf
xchg
mov
mov
sub
decb
inc
out
aas
cmp
fs
lea
popa
movsb
scas
add
mov
xchg
stos
xchg
cli
jo
iret
push
ja
movsb
mov
fs
dec
ds
and
repz
incb
inc
xlat
aad
and
dec
push
xor
xor
sub
in
sahf
xor
push
or
sahf
inc
stc
or
outsb
je
cmp
inc
pusha
cmp
les
sub
jle
pushf
aaa
and
movsb
test
test
mov
dec
jp
push
aad
data16
xor
push
inc
jg
mov
mov
cmp
fdiv
fnsave
mov
std
jno
andl
jg
test
mov
lcall
loopne
loope
fstpl
mov
les
testb
inc
xchg
pop
stos
hlt
pop
xchg
and
imul
inc
cwtl
clc
ljmp
inc
and
add
stc
ss
imul
pop
xlat
inc
adc
pop
xor
ss
push
dec
movsb
scas
testl
adcb
fwait
dec
lcall
jl
mov
fisttpll
jg
dec
mov
mov
inc
testb
dec
movsl
imul
outsb
jle
mov
fs
ja
stc
loop
jp
sub
push
sub
jbe
sbb
leave
std
xchg
adc
hlt
lret
sahf
lds
addr16
mov
pop
lret
movsb
das
jmp
into
mov
fists
jp
sbb
xlat
imul
mov
lcall
xchg
imul
repnz
jae
dec
lods
repz
ret
bound
xlat
pop
adc
mov
jns
mov
xchg
mov
mov
insb
cltd
xor
mov
fcompl
pcmpeqw
and
or
mov
lock
or
mov
pop
pop
mov
xchg
mov
sbb
movsl
lret
cmp
aad
dec
lea
stc
ds
icebp
add
mov
dec
enter
rclb
movsb
jo
add
fisttps
mov
icebp
xchg
testl
inc
mov
adc
sahf
imulb
repz
jns
mov
data16
lods
aam
mov
mov
mov
inc
or
ds
jp
mov
add
push
sbb
mov
adc
jle
adc
and
out
mov
push
dec
mov
out
insb
repnz
aas
add
frstor
aad
ret
add
aad
xchg
dec
call
fcompl
arpl
cmc
inc
mov
insl
popf
inc
pusha
aad
inc
add
mov
test
imul
jmp
hlt
addr16
lods
fwait
mov
xchg
jo
sub
repnz
fwait
les
ja
es
aam
or
outsb
flds
in
sub
sbb
xor
xor
nop
sub
inc
test
xor
into
and
mov
mov
mov
cmp
dec
inc
mov
sarb
sub
and
push
lret
mov
ljmp
test
mov
push
lea
mov
iret
cmp
sbb
stc
cmp
pop
stos
mov
xor
push
add
or
adc
into
jo
cld
test
sub
adc
and
dec
scas
sub
add
leave
jge
aas
mov
lcall
pop
fstpl
jnp
stos
popa
out
arpl
pushw
iret
ss
lods
out
gs
mov
jbe
jecxz
idivb
movsb
and
cltd
repnz
es
arpl
jl
mov
cmp
repnz
pop
cmp
movsl
out
flds
cmp
adc
cld
aam
ljmp
inc
cli
cld
movsb
imul
mov
lcall
ja
lods
repz
inc
mov
pushw
outsl
ja
ljmp
outsb
outsb
pushf
push
adc
shrl
xchg
inc
rclb
sbb
nop
cmc
lcall
fs
xchg
int
push
stos
mov
mov
lahf
rcr
pusha
adc
std
inc
lcall
mov
cli
mov
mov
adc
dec
into
insl
inc
mov
xchg
iret
cltd
dec
inc
dec
pop
adc
push
dec
testb
ret
jbe
jmp
lock
int3
aam
add
mov
mov
xchg
pop
mov
mov
fsubrs
je
nop
je
add
in
fs
mulb
scas
lret
add
in
insb
subb
cmp
loope
inc
or
add
ret
jo
jb
ds
xor
sub
mov
call
or
lret
mov
pop
nop
cmpsl
flds
jecxz
pop
dec
dec
xchg
lods
stos
inc
xor
es
add
out
jae
cmp
movsb
pop
mov
mov
popl
dec
inc
ja
cmp
pop
xchg
sti
jmp
dec
mov
push
adc
gs
pusha
xorl
jg
jno
pop
fsubrs
mov
fidivs
mov
sub
mov
mov
xchg
fimull
mov
in
daa
sbb
bound
test
pop
inc
jmp
repz
mov
les
mov
loop
mov
movsb
push
xchg
jp
mov
out
test
push
or
add
jo
roll
mov
test
adc
adc
cwtl
movsl
ret
cmpsb
jb
js
push
mov
xor
ds
scas
movsb
jmp
ftst
andl
push
in
pop
jp
pushf
add
stos
dec
shr
pop
aas
aam
lds
mov
or
sub
cmp
push
sub
and
mov
add
cmpsb
std
pop
xchg
je
pop
jb
xor
fnstenv
or
mov
jb
out
cli
dec
sbb
lahf
xor
mov
mov
pop
ret
imul
bound
jl
daa
clc
dec
fdivs
inc
push
daa
outsb
call
cwtl
icebp
pop
in
insb
imul
repz
mov
sub
mov
push
movl
aam
mov
jge
lods
xchg
inc
mov
inc
pop
stos
jp
mov
jnp
push
jne
push
or
cltd
outsb
push
jnp
pushf
mov
or
xchg
aas
adc
in
xchg
xor
test
push
outsb
sub
mov
shl
mov
stos
xlat
out
push
jno
pop
mov
jbe
roll
inc
xor
enter
mov
data16
iret
jmp
fadd
bound
les
pop
in
mov
pop
cmp
cltd
clc
lahf
inc
mov
adc
out
cmp
rclb
in
shlb
mov
imul
popf
sbb
dec
jnp
insb
mov
add
scas
fs
out
in
mov
cld
out
sub
mov
mov
inc
jae
cs
pop
fwait
jb
imul
pop
movsb
ljmp
xchg
jb
ret
mov
mulb
and
sub
nopl
xor
aam
cmpsl
jb
into
xchg
jnp
cltd
mov
jge
ljmp
jmp
aad
incl
andb
xchg
loopne
shl
inc
loope
xchg
enter
cmp
inc
sbb
fisubrl
xchg
jnp
cld
adc
inc
sti
shr
jo
rorl
outsb
pop
cld
pop
sub
jo
mov
sbb
fs
loop
movsb
lret
cs
xchg
sbb
jb
mov
jp
pushf
inc
in
scas
inc
add
xor
or
fistpl
mov
add
fidivrs
push
out
or
stos
push
cmp
in
push
or
mov
out
out
cmp
roll
pop
sub
jb
inc
and
sbb
ficompl
dec
push
std
and
mov
pop
xor
push
jle
cs
out
aas
xor
fldenv
shlb
popf
push
out
and
leave
cli
jo
push
push
out
daa
movsl
sbb
sbb
adc
roll
outsb
pop
fs
push
jecxz
add
push
aas
das
dec
ds
aas
enter
jno
mov
mov
xchg
pop
mov
fsubrp
jns
clc
int3
leave
frstor
insl
mov
imul
jno
ficoml
les
mov
pop
jle
jbe
cltd
xor
dec
aas
and
fs
imul
jb
into
repz
ljmp
adcb
iret
enter
dec
xlat
je
movsb
stos
out
test
and
aaa
mov
out
jo
jae,pn
insb
mov
cli
pusha
mov
in
fcmovu
jecxz
mov
lds
nop
leave
testl
movsb
xlat
mov
adc
pushf
jae
mov
fwait
add
push
rcrl
add
or
pusha
sbb
xchg
jl
ret
pushf
adc
mov
out
lahf
sub
xchg
ljmp
int
test
bound
test
aad
mov
or
mov
lods
and
ret
jb
arpl
jnp
fidivs
out
pushf
ss
jb
js
mov
rclb
jl
fidivrl
or
loop
pop
cld
mov
dec
push
popf
int
jp
add
push
lret
mov
lret
xchg
sub
sub
mov
inc
loop
mov
loop
outsb
imul
popa
push
test
inc
int
repz
inc
jl
inc
sbb
mov
nop
pop
push
int3
out
sarb
inc
sbb
push
sub
bound
pusha
xor
daa
bnd
cmp
outsb
xchg
sbb
movsb
push
iret
jnp
inc
sbb
cmp
xchg
shl
pusha
dec
aam
cmp
outsb
in
test
in
lret
int
rolb
out
in
and
movsb
enter
scas
add
or
aam
cwtl
sti
or
pop
pop
and
out
js,pt
into
mov
lods
shl
popa
xor
mov
lea
xor
std
mov
imul
pop
rorb
repz
icebp
push
dec
push
js
xor
adc
pop
push
pusha
adc
repz
cmpsl
and
je
jle
lods
cltd
paddsb
test
inc
mov
pop
mov
xchg
cmc
xchg
push
int
popa
sub
repnz
sub
mov
inc
int3
arpl
cmpsl
sub
add
cmp
fdivr
orb
leavew
ret
imul
xor
and
inc
pop
sarb
fcmovb
imul
scas
add
inc
or
or
inc
pop
cmpsb
andl
dec
push
insl
std
lea
in
and
inc
mov
lret
xor
adc
inc
jmp
xchg
int3
jge
mov
imul
rolb
xor
test
jl
repnz
nop
mov
repnz
xchg
jg
popf
insb
stc
iret
call
jo
outsb
push
xlat
cltd
cld
pop
adc
adc
pusha
cmp
mov
insb
je
pop
fs
mov
jle
xchg
aad
xchg
js
das
movsl
cmpsl
pop
jae
sub
in
jb
cli
jecxz
jp
imull
shlb
imul
movsl
in
jmp
incb
cmp
fists
das
jo
aaa
movsb
fldl
les
lret
js
mov
adc
dec
jae
jle
lods
lods
cwtl
shll
sub
test
xor
push
imul
fdivrs
and
out
movsb
inc
push
cmp
ljmp
jno
scas
outsb
mov
aad
fcmovbe
lods
das
adc
repz
or
inc
or
inc
fmul
in
into
repz
lods
jg
pop
dec
lods
movsb
add
push
in
ss
fdivl
pop
mov
scas
jnp
dec
sub
xor
addl
mov
fcomps
jns
dec
das
dec
icebp
lret
push
inc
inc
rcrb
jg
push
dec
xor
jmp
mov
mov
xor
add
lahf
lret
stos
test
fs
dec
and
sub
jno
xor
xchg
add
cld
adc
sbb
daa
push
push
push
ror
fdivs
fmul
jb
clc
dec
int3
call
in
mov
leave
sbb
add
lret
jge
pop
cmp
jne
ds
lcall
jecxz
lret
lret
mov
jbe
push
add
xchg
add
int
cs
call
dec
jbe
ljmp
das
push
jle
xchg
sar
popa
jp
vandnps
in
xchg
aad
jmp
add
lahf
out
adc
movsb
aaa
sub
iret
imul
pop
mov
xor
dec
lea
cwtl
shlb
jl
xor
cmpsb
test
clc
inc
add
in
stc
fidivrl
fidivl
popf
jb
adc
fs
xchg
jne
push
mov
and
dec
mov
sbb
fwait
imul
add
lret
fimull
lea
and
cmpsb
xchg
loopne
sahf
xor
int3
stos
mov
jmp
fs
mov
insb
inc
jmp
inc
jmp
dec
das
movsb
fwait
lret
adc
outsl
lods
cli
jmp
je
lret
inc
cmp
cmc
mov
inc
lahf
hlt
das
cmp
push
lods
jmp
ret
jbe
inc
or
dec
test
mov
ljmp
mov
fs
cmp
mov
lea
pop
xor
push
pop
ljmp
sar
mov
bnd
fs
fdivr
imul
imul
insb
and
xchg
test
jg
mov
cmp
mov
daa
mov
aam
pushf
aad
sbb
add
aam
rol
call
inc
imul
xchg
jmp
pop
dec
xchg
xor
inc
fs
popf
jmp
dec
adc
adcb
lods
jnp
dec
cli
pop
incl
fsubs
imul
add
gs
addr16
jmp
stos
outsl
mov
inc
in
fisttpl
jp
fs
jb
mov
mov
test
sub
jno
dec
jp
mov
push
dec
into
add
cmpsl
mov
mov
adc
jle
cmc
jbe
test
insb
jne
mov
divb
jge
faddp
jnp
int3
jle
add
mov
daa
dec
pop
push
imul
jmp
xchg
add
xor
sub
add
rcl
jnp
fbld
mov
movb
mov
push
aam
dec
movsb
xchg
mov
sub
cmp
aas
jle
outsb
inc
out
mov
jge
cmp
cli
jecxz
inc
inc
push
push
and
sbb
mov
or
stos
mov
mov
pop
mov
push
and
add
mov
aas
or
stc
in
adc
sahf
xchg
cmp
mov
lea
movsl
jmp
xor
pop
popl
or
movsl
leave
sub
scas
and
push
mov
mov
mov
jae
inc
cld
xor
sub
aas
fs
repnz
or
out
lahf
ljmp
aad
inc
sbb
push
aaa
lods
incb
sub
adc
outsl
out
insb
mov
mov
ds
pop
jle
push
imul
stos
push
mov
push
lcall
daa
cwtl
aam
mov
and
loope
jne
adc
sarb
sub
cmp
push
les
pop
inc
inc
outsl
mov
fdivp
je
mov
jmp
xor
cltd
pop
sbb
fsubs
xor
pminsw
out
movsb
loopne
out
fs
mov
jne
adc
jnp
add
pop
out
push
and
jg
in
insl
ret
cmp
inc
mov
pop
insb
std
cwtl
movsl
js
jns
pushf
ss
shl
xchg
inc
je
push
jb
fdivs
lea
xchg
xchg
mov
push
loopne
cmp
fdivl
cmc
inc
out
stos
scas
dec
jmp
rol
icebp
movsb
mov
xchg
pop
lods
es
arpl
pop
dec
mov
sbb
cmp
xchg
xor
fs
adc
mov
in
fdivrl
lahf
or
out
clc
sbb
stos
jg
mov
stc
cli
fildl
in
inc
lea
fninit
xlat
mov
jbe
push
in
movsb
xchg
das
and
mov
sbb
or
popa
sarb
std
sub
mov
stos
inc
repnz
dec
in
xor
insb
stc
push
int
ss
js
mov
call
sub
movsb
test
sub
cmp
cmpsb
loope
incb
dec
imulb
int3
imul
xorb
rcll
stos
out
inc
pusha
adc
outsl
pop
imul
sub
mov
jge
scas
cld
dec
pop
mov
dec
fidivl
lds
xchg
arpl
jle
ljmp
shlb
inc
insl
mov
or
inc
xchg
mov
ds
jmp
test
dec
fstps
cltd
xchg
mov
adc
daa
xchg
fs
rorl
ja
sub
inc
xchg
or
sahf
jnp,pn
sub
push
lods
and
fidivs
dec
push
or
sbb
pop
imul
ss
push
leave
arpl
movsb
jae
in
in
inc
sub
pop
into
pop
mov
and
or
pop
fsubs
jns
lods
nop
sub
ds
push
int
js
jg,pn
dec
xlat
lret
push
inc
xor
insb
addr16
mov
sbb
xor
stos
sub
sub
or
jnp
and
fisttpll
push
outsb
lods
xor
fadd
cmp
in
lcall
dec
popf
loop
jnp
clc
ret
stos
ret
xor
rorl
jbe
lret
and
lahf
jmp
js
aam
add
pop
sarb
xor
push
pop
into
mov
xor
mov
call
cmpsl
clc
cmc
sti
pop
pop
mov
or
stos
push
push
add
out
lods
sbb
jb
sub
or
rcl
test
push
inc
pop
lods
lahf
sbb
adc
jbe
cwtl
popf
mov
or
cmc
fnstsw
mov
xchg
gs
stos
cwtl
fs
cmp
mov
sbb
fstps
inc
xchg
jle
iret
fisubrl
decl
test
sub
dec
dec
inc
xchg
inc
sub
xchg
stos
jb
ljmp
test
out
in
shr
mov
je
rcrb
mov
out
jp
dec
int
jle
push
jnp
cmpb
inc
repnz
jo
fisubs
test
into
js
mov
lods
jns
adc
iret
div
mov
sub
dec
jae
push
pop
adc
or
pushf
inc
ret
xlat
mov
sub
in
aas
gs
inc
in
inc
lea
mov
scas
stc
adc
cmp
fisubl
or
pop
jl
idivl
fs
xchg
jno
jp
enter
jo
mov
outsb
lds
jecxz
in
int3
inc
sahf
scas
push
dec
cmp
pop
pop
std
into
into
jb
int3
ljmp
sub
jne
fs
cmpsl
out
dec
filds
mov
pop
jg
out
adc
mov
mov
sbb
fcomps
add
mov
imul
clc
and
inc
ds
push
sbb
dec
loopne
js
roll
sbb
pusha
fs
add
and
or
jo
test
push
lods
adc
push
aam
mov
mov
fdivrs
sar
fucompp
cmp
stos
fs
mov
ljmp
inc
bndldx
sub
cli
shlb
insl
mov
cld
bound
dec
cmp
jmp
inc
pop
mov
hlt
lea
ret
mov
jle
out
out
lcall
imul
cs
jp
ja
adc
sti
sbb
popa
dec
in
jbe
sub
cmpl
mov
fistpll
lret
jle
inc
bound
cltd
xchg
cmc
out
dec
ret
in
cltd
add
test
cwtl
out
in
mov
insb
out
sub
lock
and
js
mov
jl
pop
add
popa
in
call
push
mov
pushf
daa
pop
jb
jge
shlb
std
add
pusha
push
add
out
movsb
push
and
inc
sahf
xchg
xchg
xchg
stc
loop
out
mov
in
pop
or
out
xor
jg
mov
pop
call
fucomi
inc
stos
rclb
sahf
add
pop
sarb
or
test
shrl
inc
xchg
stos
fisubs
ljmp
adc
mov
out
sbb
stos
and
jnp
mov
fdivrs
bound
jne
mov
insl
and
outsb
pop
ret
rcrl
into
pop
out
ljmp
mov
inc
pop
insb
movsb
xchg
push
out
es
mov
push
scas
push
popa
call
fidivl
mov
out
xlat
pop
jmp
jge
in
repz
pop
mov
and
fcmovnbe
push
cmp
mov
xchg
loopne
scas
jmp
cs
mov
jae
insb
ljmp
jns
xchg
sbb
mov
sub
or
jb
cld
fidivl
add
rorb
fs
int
xor
mov
sbb
movsb
rclb
inc
lret
jno
scas
cld
repnz
mov
jae
aam
dec
cs
sbb
sub
lcall
lea
push
jecxz
sbb
cwtl
inc
lret
jne
sub
xchg
dec
sbb
sbb
inc
dec
out
fcomps
inc
sbb
add
sbbb
or
mov
loop
or
lret
mov
mov
jl
sbbb
aaa
and
movsb
shrb
mov
out
gs
and
push
imul
outsb
jle
push
xor
dec
movsl
xchg
mov
sub
xchg
out
data16
addl
stos
push
xor
pop
lods
in
jp
fcoml
inc
add
sbb
inc
pusha
or
mov
sbb
pop
in
aad
rorl
sub
jb
andb
test
mov
cltd
aas
pusha
lret
idivl
inc
push
pop
adc
repnz
add
jb
dec
stos
xlat
in
cltd
loopne
push
pop
xor
push
mov
pop
xor
stos
cmp
push
cmp
xchg
mov
dec
jle
xchg
push
mov
sbb
pop
outsb
adc
imul
stos
inc
inc
mov
mov
pushl
adc
sub
adc
inc
jle
lods
mov
andl
sbb
lcall
dec
mov
xor
cmp
out
mov
in
ret
push
insl
std
ds
jg
push
inc
rcr
lcall
das
fs
mov
lea
sbbl
adc
dec
push
out
jns
ljmp
add
push
pop
sub
xchg
inc
aas
out
movsb
std
repnz
and
fwait
add
inc
sbb
mov
outsl
mov
testb
repnz
into
jb
push
pop
pop
xor
sahf
addb
pop
mov
jns
mov
ret
sub
inc
push
outsb
data16
sub
lock
out
out
dec
inc
cltd
push
stc
jb
jnp
inc
call
stos
mov
jno
xlat
xchg
js
addr16
add
ja
inc
imul
cld
mov
jmp
loope
outsb
scas
add
call
cmp
es
or
shll
sti
lods
imul
fwait
cltd
inc
sbb
pushf
add
xchg
sahf
insl
pop
push
cmp
sub
mov
or
ljmp
out
out
pushf
lods
pushf
stos
cmp
mov
mov
icebp
out
aas
xchg
mov
jbe
jo
sub
insl
imulb
jnp
imul
sbb
mov
jae
dec
or
addr16
lcall
adc
mov
adc
add
aad
cmp
mov
sahf
dec
cmc
pop
ja
mov
push
cmc
and
fisubrs
int
sarb
pusha
insl
adc
int
nop
fs
pop
enter
adc
jge
inc
shrl
out
push
dec
jb
int
sub
loop
movsb
cmp
cltd
jb
popa
and
insb
sarb
pushl
fiaddl
cli
into
xchg
lret
sti
cmc
icebp
call
cltd
popf
fmul
lods
sahf
sarb
pop
shll
add
jg
pushf
sub
jmp
sbb
loop
inc
push
iret
sbb
dec
xor
mov
jbe
movsl
shlb
lcall
sbb
sbb
cld
inc
lea
or
jns
adc
stos
ret
cs
dec
jecxz
inc
pop
out
rol
push
movb
jmp
xchg
dec
fldt
pop
repz
push
int3
jo
inc
fnop
pop
inc
jns
imul
jnp
je
jnp
ret
js
xchg
push
jp
mov
subb
xor
mov
cld
pop
push
jnp
fldenv
inc
push
adc
sbbl
nop
xor
mov
imul
popa
sbb
lahf
jnp
dec
clc
xchg
mov
int3
imul
pop
sbb
lea
jle
push
pop
imul
and
jl
adc
cmp
ret
pop
subl
inc
or
cmpsl
fcompl
sbb
in
ss
pushw
or
stos
sub
pop
xchg
daa
jge
xchg
pushf
outsl
aas
xor
fcompl
mov
pop
loop
cltd
dec
sub
insl
test
mov
call
es
pop
or
cld
arpl
into
test
inc
jp
xor
add
push
test
dec
cmpl
movsb
aaa
sbb
mov
xor
jb
cwtl
ljmp
pusha
es
lret
xchg
ja
and
out
xchg
mov
in
xor
pushf
add
movsb
pop
clc
push
pop
dec
xlat
mov
addr16
and
adc
xchg
sub
jecxz
loope
mov
mov
xlat
push
bound
ljmp
gs
pop
push
test
push
movsl
cmc
sti
dec
addr16
stos
inc
mov
lock
popf
dec
xor
xchg
cmpsb
popa
in
xchg
outsb
inc
inc
cld
jb
push
repnz
sub
add
je
jle
aam
rclb
xchg
cmpsl
lods
mov
or
ret
shl
lods
rolb
mov
jge
sarl
push
add
cmc
icebp
mov
cs
ss
ss
or
popl
es
std
call
fs
or
pop
fstps
fcom
popl
call
fucom
jb
ret
pop
xor
call
shll
jbe
adc
pop
dec
or
arpl
mov
loop
mov
int3
push
sub
repnz
jno
ljmp
dec
jbe
stos
or
sub
out
out
xor
std
bound
xchg
scas
aad
and
mov
repz
add
data16
fnstsw
repz
mov
int
add
daa
ss
into
imul
xchg
sub
add
cmp
mov
push
jns
mov
scas
data16
inc
pop
test
cmp
jle
lahf
ret
pushf
sub
imull
mov
stos
push
xor
ljmp
sub
sbb
mov
fnstcw
adc
ret
mov
sbb
and
lock
mov
mov
movsb
add
add
inc
mov
outsl
leave
rorb
mov
push
ljmp
outsb
mov
jno
lods
mov
xchg
xor
adc
mov
push
lods
jecxz
call
clc
sub
dec
add
das
addr16
adc
pop
xchg
xor
iret
push
imul
in
es
inc
sub
cli
nop
int
ret
mov
lods
jmp
fs
cmp
push
mov
lods
xor
xor
fs
in
ljmp
test
cmp
inc
fsubr
inc
xchg
mov
inc
adc
inc
lods
add
xchg
and
mov
xchg
cmp
add
out
adc
jbe
or
push
inc
cwtl
addr16
out
inc
loope
xor
stos
lcall
stc
adc
iret
add
adc
fs
repnz
dec
adc
fidivrl
leave
adc
rolb
mov
cmpsb
mov
mov
sbb
pop
cmp
add
test
shlb
sbb
xchg
push
aam
pop
xor
jp
lods
lods
adc
or
jmp
clc
pop
xchg
bound
imul
out
jl
dec
insl
loopne
lods
jo
out
scas
rolb
and
inc
mov
dec
fisubl
stos
outsl
add
lcall
sbb
movb
arpl
jp
ja
rep
fsubs
insl
out
or
mov
xchg
sahf
xor
mov
cmp
push
pop
mov
xchg
and
jmp
ds
push
cmc
xchg
ret
dec
xchg
add
lret
aad
push
adc
movsl
ljmp
fwait
adcb
adc
les
adc
stos
inc
add
aad
dec
or
push
jne
scas
pop
fwait
lods
jmp
cmp
mov
jno
pop
loopne
adc
fisubl
addr16
into
jle
sbb
pop
mov
aas
call
stc
jl
mov
mov
nop
sbb
jg
sbb
add
adc
push
pop
xor
dec
jmp
into
pop
inc
movsb
xchg
mov
lds
xor
cmpsb
push
mov
push
fnstcw
xchg
cmp
sub
stos
or
bnd
movsb
sub
fidivrs
ljmp
add
xchg
lods
movsb
fnstenv
rorb
loop
add
lret
xlat
add
ret
fsubr
in
mov
shlb
out
mov
or
fs
mov
dec
mov
mov
xor
rcrl
cmp
pop
sub
add
cmpsl
scas
mov
mov
arpl
mov
dec
stos
ljmp
sahf
orl
adc
in
inc
out
xor
mov
xchg
into
mov
cmp
jae
push
lret
rorb
cmpsb
and
and
mov
adc
lods
adc
jae
adc
mov
gs
adc
dec
imul
loop
jns
into
daa
and
mov
int
cld
xchg
popa
stos
fbld
push
ljmp
scas
adc
sub
int3
cli
xchg
sarb
aas
gs
push
outsb
mov
popa
mov
add
imul
xor
fs
cli
stc
add
mov
push
daa
mov
xchg
scas
in
orl
inc
mov
cmp
inc
repz
mov
shrb
xlat
sbb
cwtl
testl
nop
stos
addb
mov
mov
xor
add
and
imul
xor
test
outsl
ret
daa
mov
cmp
sbb
ljmp
repnz
add
or
or
scas
out
jns
mov
dec
mov
stos
dec
sub
movsl
aaa
jbe
ds
jne
add
inc
push
mov
ror
jmp
rclb
xchg
scas
test
ds
cmp
jmp
test
mov
inc
mov
sahf
sub
mov
sub
jg
cli
out
xchg
cli
inc
jmp
je
popf
lea
pop
push
bnd
adc
das
cltd
js
in
jb
inc
jmp
inc
movsl
pushl
mov
rep
add
bound
fldt
fnstenv
sahf
out
lret
fs
aam
inc
sub
and
icebp
sarb
jns
pushf
outsb
mov
fcmovu
mov
cli
mov
stos
or
xchg
in
push
gs
ja
jecxz
jp
fs
aas
mov
pop
sbb
mov
adc
sub
add
pop
ss
push
mov
pop
ljmp
in
cmc
push
repnz
rcrl
es
add
aam
cltd
jle
cs
call
in
enter
outsb
jno
insl
lret
cmc
mov
call
add
outsb
inc
mov
clc
out
cwtl
aad
push
xchg
mov
popa
sub
and
fwait
jg
ret
fcos
hlt
and
or
jmp
inc
stos
clc
out
mov
sub
hlt
xchg
add
sub
mov
push
enter
sub
mov
cwtl
inc
rol
inc
and
sbb
movsb
sbb
jbe
movsl
push
fwait
lds
rclb
push
sbb
daa
insl
insl
cwtl
testl
push
sbb
fbstp
pusha
xor
sbb
lds
dec
jnp
sub
out
xor
mov
add
lret
mov
or
fstpt
subb
mov
aaa
mov
lahf
mov
icebp
pop
das
fwait
pop
dec
sub
mov
call
xor
stos
sbb
cmp
out
sub
jnp
dec
nop
mov
lret
imul
dec
jno
rorb
out
add
adc
fnstenv
or
jne
insl
imul
scas
xor
or
stos
push
imul
addb
pop
shlb
inc
sub
ja
dec
xchg
lret
xchg
mov
dec
fs
cmp
pop
sub
xlat
loope
inc
cld
push
outsl
test
mov
mov
les
inc
jmp
mov
addr16
xchg
sub
jo
ljmp
mov
fiaddl
ficoml
into
fidivs
popf
loop
in
fs
sbb
pushf
pop
popf
xchg
aaa
pop
lods
addl
das
fldcw
cmp
cmpl
stc
inc
sbb
inc
aam
test
jp
ficompl
je
adc
aam
das
dec
insl
mov
dec
mov
ss
sub
jmp
out
movsl
add
aas
sbb
sub
sub
lcall
ljmp
pop
push
dec
es
add
lods
arpl
ljmp
xchg
mov
shr
dec
leave
or
mov
insb
mov
adcl
aas
imul
sbb
xor
jns
push
xchg
insb
fimull
jp
adc
cmp
inc
test
fnstcw
imulb
sbb
clc
xchg
jge
inc
push
jnp
fdivrs
pop
dec
das
cmp
jg
add
out
std
fisubrl
imul
jge
mov
jp
cwtl
inc
repnz
mov
and
pop
sarl
ret
xchg
into
fwait
inc
es
dec
xor
cmp
imul
inc
xchg
mov
push
mov
mov
iret
es
mov
rolb
dec
fdivs
mov
imul
das
insl
aam
insl
pop
mov
xor
sbb
movsb
pop
jle
fsubrs
lret
neg
and
xchg
fisubrl
fwait
add
inc
inc
push
enter
clc
jnp
negl
rcr
fsubr
inc
lods
jge
mov
xor
adc
jg
das
mov
mov
rorb
lods
and
jp
fs
fs
andl
fiaddl
test
adc
mov
imul
out
jo
jge
fyl2xp1
cmpl
ljmp
lods
pop
sbb
or
hlt
jb
ljmp
add
sbb
mov
pop
stc
adc
ds
push
call
cmpsb
stos
ljmp
into
jbe
lds
push
add
fcmovu
fdivr
sbb
inc
loopne
push
lds
test
or
out
mov
mov
out
hlt
xchg
stc
mov
jnp
imul
call
push
adc
add
or
mov
push
sub
inc
adc
jle
mov
cld
scas
lods
dec
sbb
in
imul
adc
dec
mov
movsb
sub
jecxz
lods
repz
push
cmp
lods
loop
outsb
push
ss
sub
jp
xchg
in
xchg
xchg
fs
mov
push
aas
enter
sbb
pop
mov
leave
xchg
pop
add
fiaddl
jge
fwait
cmp
pop
stc
movsb
cmp
cmpsb
dec
xor
jg
outsb
sub
lock
pop
mov
in
sub
mov
mov
andb
movsb
jl
popa
inc
adc
test
fs
inc
cs
xor
cltd
mov
loop
mov
push
das
cmpsb
dec
mov
jnp
sub
pop
mov
fwait
je
testb
out
cmp
mov
std
pushf
mov
sbb
pop
push
lods
int
lock
mov
ds
dec
aaa
mov
ja
js
fs
cmp
xor
sbb
push
inc
lcall
cmp
add
inc
xchg
das
xor
subb
jle
mov
js
rolb
popf
inc
cmp
cltd
push
stos
iret
sbb
mov
xchg
sbb
or
lea
ss
add
rolb
bts
inc
dec
std
cmc
cmp
sbb
push
mov
fs
insb
dec
std
inc
pop
fstpt
outsb
mov
sbb
sub
out
pop
aad
test
je
lock
repz
out
push
push
in
pop
int
pop
fiadds
ja
movsb
negl
mov
fists
mov
sub
xor
inc
je
or
lock
mov
mov
fimull
mov
add
sbb
jne
mov
sub
adc
insb
cltd
cmc
cli
sub
inc
or
add
sahf
fidivs
ja
movsb
mov
pop
push
mov
iret
push
jge
decb
push
jae
jno
jb
or
inc
ss
add
push
nop
ss
dec
sbb
aad
cmp
cltd
mov
jbe
adc
jg
fscale
ljmp
das
out
sub
jp
pushf
scas
enter
repz
int
mov
lock
repz
xor
pop
stos
jb
inc
push
ljmp
mov
jae
cs
call
into
movsb
rolb
imul
addr16
mov
imul
adc
movsb
sbb
pop
popl
cmc
push
mov
in
sbb
dec
andb
sbb
cltd
adc
loop
sti
jp
sbb
add
cwtl
jno
inc
jno
sbb
mov
pop
shrl
sbb
test
movsb
test
iret
dec
add
jl
sbb
test
inc
pop
iret
inc
inc
frstor
cld
stos
inc
mov
or
test
stos
dec
pop
fs
sbb
xchg
shlb
enter
cwtl
pop
ss
sbb
imul
xor
jnp
aas
ljmp
cmp
in
cwtl
adc
jge
dec
aam
mov
sbb
dec
jl
xor
iret
push
out
rcrb
mov
cmpsb
sbb
sahf
mov
or
shll
jae
jnp
mov
imul
fwait
out
lods
dec
add
and
insl
xchg
fdiv
movsb
mov
jnp,pt
jle
xor
ret
xlat
imul
sub
push
insb
int
xchg
dec
jb
outsb
cwtl
mov
aad
jns
stos
mov
mov
daa
xor
cli
pop
popf
stos
jl
xchg
push
sub
fisttps
out
testb
pop
shll
push
mov
lret
sub
movsb
lret
and
mov
inc
cmp
cltd
in
or
call
jns
subb
pop
repz
ljmp
outsl
or
and
jno
or
add
inc
rorb
hlt
push
mov
out
mov
stc
flds
arpl
pop
and
stc
or
mov
movsb
out
mov
sbb
imul
push
cld
mov
dec
jle
imul
sub
mov
mov
sub
adc
dec
out
cmp
cmp
imul
loop
mov
pop
out
imul
outsb
scas
pop
sub
xchg
addb
ret
out
mov
add
dec
jns
movsb
push
rcrl
pop
jp
movsb
adc
fsubp
cmpsb
mov
out
or
cld
stos
lahf
mov
xor
xchg
popa
scas
mov
subb
mov
xor
cli
ja
xchg
and
sarb
xor
jg
push
inc
lods
cmp
push
add
movsl
cwtl
or
imul
stos
mov
js
mov
outsb
enter
lahf
clc
test
add
movsb
out
mov
cs
mov
sub
mov
push
mov
lock
je
popf
sub
lret
sbb
leave
lods
inc
cmp
xor
shlb
lods
test
mov
jae
stos
imul
das
pop
pop
mov
pop
dec
icebp
mov
inc
in
fs
out
pop
pusha
sub
add
cwtl
jmp
inc
std
jmp
pop
jle
and
loope
ljmp
nop
sub
dec
aas
xor
lds
pop
shrl
xor
add
faddl
movsb
adc
jo
pop
out
mov
sub
in
cmpsb
arpl
add
shrb
mov
sub
in
mov
imul
or
adc
xor
js
daa
mov
std
inc
cmp
mov
leave
push
and
pop
push
lea
out
stc
sub
lcall
lret
hlt
cli
sub
bound
inc
push
inc
add
xor
dec
pop
call
jp
inc
shrb
add
xchg
mov
mov
cmp
addr16
popf
movsb
lcall
sub
jmp
xchg
test
push
sub
jle
jo
das
or
push
mov
xchg
pushf
cltd
jne
shr
dec
cmpsl
sub
inc
sbb
sahf
jbe
pop
mov
push
sbb
jbe
adc
bound
mov
je
push
inc
inc
adc
cmp
ljmp
mov
fisttpl
xor
xor
movsb
movb
mov
pop
jecxz
jnp
pop
cltd
out
loop
mov
ret
cld
xchg
dec
pop
dec
fsubrs
pop
scas
jle
adc
leave
sub
in
jge
ja
fwait
or
sbb
inc
add
pop
inc
outsl
and
arpl
jbe
loop
jae
mov
xor
mov
mov
lcall
add
mov
bound
push
nop
mov
push
iret
sbb
sbb
insb
jg
mov
lahf
jno
imul
shrb
sbb
punpckhdq
stos
xchg
in
stos
mov
or
dec
arpl
mov
jno
sub
pop
inc
xor
sub
je
ss
mov
jnp
dec
out
mov
repz
jg
xchg
push
daa
fistl
rcll
jg
xchg
pusha
or
adc
jo
les
cmc
push
xchg
outsb
push
xor
fs
mov
push
packssdw
mov
xor
test
aad
pop
loopne
mov
sub
mov
jmp
jae
fsubs
mov
out
sbb
test
jge
icebp
mov
cmp
sbb
test
push
and
jl
fs
xchg
aad
push
sbb
push
inc
pop
popf
cmp
pop
lcall
sub
out
fs
ret
or
push
jns,pt
scas
in
ljmp
or
mov
in
arpl
sbb
into
cld
aas
enter
mov
inc
ds
xor
push
imul
fs
notb
mov
push
or
adc
insl
xchg
xlat
movsb
push
je
stos
repnz
les
push
int
sbb
out
ja
jp
inc
sarb
pop
pop
push
xchg
divb
dec
jg
jge
lods
aaa
inc
mov
fwait
jmp
cmp
in
and
xlat
add
pop
or
mov
mov
cmp
sbb
xchg
adc
in
shlb
sbb
mov
insl
in
das
fs
pop
add
inc
hlt
xor
xchg
stos
imul
lret
rorl
pop
fnstcw
mov
fisttps
dec
incb
nop
lea
push
scas
jnp
loope
jnp
push
mov
jmp
sbb
pop
pushf
in
mov
divb
add
xchg
imul
pushf
jge
sub
in
mov
dec
push
dec
dec
or
xchg
xchg
lahf
std
ja
or
jg
cmc
lcall
mov
fs
mov
addr16
push
fidivs
lcall
in
sbb
pop
mov
mov
inc
lcall
movsb
stos
pop
jle
into
sbb
and
jns
mov
pop
xchg
outsb
movb
xchg
fisubrl
popf
data16
cmp
inc
mov
pop
sub
sub
movsb
lods
popa
ljmp
aaa
dec
inc
mov
mov
adc
les
cld
cmp
or
pushw
nop
dec
mov
cmpl
fmuls
pop
mov
je
sub
or
shlb
shlb
movsb
inc
cmp
arpl
leave
pop
out
enter
mov
mov
mov
jecxz
cld
lret
push
dec
jp
fdivrs
sbb
ss
adc
frndint
loope
adc
shlb
imul
stos
sbb
into
push
cld
imul
mov
lods
ret
xchg
iret
icebp
xlat
das
xchg
mov
push
cmpsl
lea
loopne
sub
jne
sbb
es
outsl
cs
cld
pusha
cltd
push
dec
push
adc
push
test
xchg
gs
test
imul
lea
or
add
jecxz
lods
inc
sub
sub
mov
push
jp
dec
cmp
ljmp
imul
shrb
xchg
data16
dec
insb
jg
jmp
es
fnsetpm(287
fistpll
arpl
mov
add
jns
xorl
mov
ja
pop
dec
pop
insb
inc
mov
lods
aam
lret
pop
inc
movsb
mov
and
xor
jnp
das
call
mov
jle
jns
add
xchg
in
jle
xor
out
cltd
push
loope
stos
mov
mov
lcall
popa
dec
dec
dec
cltd
mov
fiadds
nop
add
sbb
mov
xchg
sbb
sbb
mov
sub
mov
dec
jl
dec
inc
cld
mov
sub
in
pop
xlat
jl
inc
push
out
dec
lods
adc
jns
mov
inc
jle
jb
and
mov
subl
lea
mov
push
sbb
pop
mov
insl
dec
push
inc
push
addb
shll
shll
rolb
mov
jecxz
cmp
dec
mov
mov
lar
subl
adc
icebp
inc
shr
fldl2e
pop
inc
jp
pushf
fisubs
mov
outsb
pop
add
mov
push
popf
adc
out
lret
lret
and
xor
cs
dec
cltd
jp
out
push
push
into
xchg
ljmp
dec
sti
cltd
ja
xor
mov
movl
pop
sti
adc
ja
pop
dec
jbe
fs
lds
mov
fidivrl
insb
arpl
stos
lods
push
rorb
pop
test
imul
push
rol
andb
scas
outsb
js
push
shr
in
or
jle
jecxz
mov
mov
iret
cltd
sti
insl
rorl
dec
push
addr16
push
jo
ret
lds
jmp
and
push
sbb
adc
sub
fstpl
test
ja
repz
shlb
and
or
sub
xchg
outsb
scas
insl
in
sbb
pop
adc
outsl
lret
lret
outsb
sbb
dec
mov
sub
push
inc
adc
jle
rcrb
mov
push
stc
pop
add
insb
xor
icebp
test
movsb
mov
xlat
ss
push
fwait
pushl
outsb
mov
add
xor
fwait
mov
mov
ljmp
popa
push
mov
sbb
or
mov
loopne
xor
in
mov
test
mov
daa
jbe
inc
ret
lcall
pop
xchg
jl
sbb
repz
xor
fcom
mov
sub
jne
mov
or
pushf
mov
jmp
daa
loope
test
xor
leave
sub
lcall
movsb
inc
adc
out
lods
call
push
lods
jbe
arpl
or
ljmp
or
mov
mulb
ret
subl
or
pop
xlat
sahf
repnz
jmp
inc
cmpsb
inc
push
inc
lds
cld
jle
dec
out
movsb
fisttps
cli
repnz
stc
ljmp
test
mov
dec
jne
inc
in
pushf
adc
bound
pop
mov
mov
mov
mov
pop
fsubp
insb
jmp
nop
outsl
cmp
dec
sub
sbb
lcall
pushf
xor
in
outsb
xor
sub
mov
sbb
mov
inc
jle
test
js
mov
push
adc
push
lds
cs
dec
adc
je
adcl
in
xchg
shrb
popf
std
dec
mov
mov
les
inc
lods
jmp
add
lods
lods
fcmovb
or
and
push
inc
div
imul
ss
cmpb
cmp
push
arpl
inc
jmp
inc
pusha
cmp
push
movsb
cmp
lret
push
test
inc
jns
shll
pushf
jmp
mov
cmp
jae
jl
outsb
in
cmp
movsb
cmp
cmp
inc
ss
adc
mov
out
lcall
xchg
cmpsl
mov
movsb
add
dec
inc
sub
xchg
stc
dec
outsl
push
cmp
adc
sub
sbb
roll
insl
cli
mov
lahf
sbb
stos
add
fstps
pop
cmovle
rorl
fs
dec
dec
out
daa
pop
nop
push
pop
insb
addr16
dec
inc
cmp
mov
popf
mov
bound
add
or
fisttps
out
in
shl
das
jne
outsb
push
pop
adcb
push
ret
mov
cmp
arpl
mov
ds
jns
mov
movsl
xor
lahf
push
lea
fistpll
push
dec
enter
jmp
dec
sub
adc
mov
pop
or
arpl
pop
shlb
std
push
mov
mov
jecxz
xchg
mov
jno
jle
popf
and
fistpll
inc
divb
mov
and
ja
push
dec
push
xor
addl
stos
dec
js
andl
and
adc
lret
sub
imulb
adc
bnd
fxtract
xchg
fnstenv
xor
cld
push
cs
inc
enter
call
pop
out
aad
mov
pop
sub
push
xchg
hlt
sbb
cmp
mov
cld
lock
xor
jmp
sub
pop
xor
clc
sbb
int3
lahf
inc
js
xchg
push
rcll
jle
adc
push
sub
mov
movsl
bswap
cs
out
rorl
movsl
xor
jo
adc
pop
pop
pop
ss
lds
dec
out
outsb
dec
inc
insl
ds
stos
addr16
pop
mov
pushf
imul
pop
fs
js
pop
shrl
mov
add
push
xchg
stos
dec
std
int3
mov
dec
push
call
pop
into
mulb
sub
ror
jne
xor
inc
mov
movsb
add
cltd
arpl
les
clc
imul
mov
movsb
dec
clc
push
outsb
push
aam
adc
cmp
or
fdivs
mov
insb
outsb
ja
sub
arpl
sbb
sbb
inc
mov
inc
sub
shrb
addr16
adc
sbb
sub
test
stc
dec
cwtl
add
inc
cs
lea
dec
pushf
xchg
adc
jb
imul
stos
test
sti
fnstenv
fmul
aad
adc
sbb
mov
orl
fucomi
lods
jg
mov
jecxz
ljmp
je
insl
jb
xor
push
xchg
mov
movsb
loop
addl
jg
or
cmpsb
das
les
xor
lret
loope
fisubrl
in
sub
cmp
jl
adc
mov
lea
fisttps
inc
inc
push
mov
movsb
xor
cltd
stos
daa
sahf
or
inc
add
fisttps
sarl
push
outsb
fstp
jne
mov
mov
xchg
jnp
or
cmpsb
pop
adc
stos
inc
add
fiadds
jne
pop
jle
ficompl
adc
movsb
dec
sbb
adc
cmpsb
test
or
ljmp
imul
call
mov
jne
and
vandnps
lock
jle
ja
adc
jecxz
pop
fldcw
outsb
imul
test
xchg
adc
mov
jp
dec
lret
dec
inc
inc
aaa
jnp
sbb
mov
xchg
jbe
jnp
call
dec
in
fs
push
adc
sbb
jge
lods
sub
xacquire
leave
int
add
jl
ljmp
jmp
inc
loopne
push
push
adc
or
ds
call
sbb
jne
out
imul
lock
cld
lahf
mov
outsl
rorb
mov
inc
pop
xor
mov
push
cmpsl
in
cwtl
jns
pusha
lods
mov
add
popf
clc
add
mov
dec
adc
xchg
je
push
stos
push
shlb
or
hlt
fs
ret
xor
or
cmc
pushf
mov
jae
and
js
fs
repz
jbe
push
mov
inc
jae
clc
dec
cmpsl
fisubrl
fsubrs
push
inc
mov
mov
loopne
fildl
xor
data16
dec
jns
add
jnp
mov
movsl
inc
inc
fldln2
push
xchg
fdivs
fldt
std
test
imul
pop
lds
mov
in
rclb
push
test
jns
ss
lret
outsb
orl
cmpsl
repnz
and
mov
cmp
dec
cs
mov
lret
dec
mov
jge
or
dec
xor
mov
mov
cmp
sub
jp
bound
add
aad
sahf
xchg
sarb
inc
jnp
cmp
or
movsb
inc
call
add
inc
int3
mov
dec
push
repnz
push
movsb
jnp
mov
inc
or
js
out
shr
push
iret
inc
stos
jnp
dec
leave
pushf
ss
push
cmpsl
mov
adc
xchg
sub
cli
movsb
out
in
ljmp
adc
inc
fildll
cltd
cmp
jb
mov
inc
imul
in
sbb
cmpsl
push
mov
std
sbb
jg
pop
or
xchg
out
dec
add
cmp
mov
sub
mov
sub
xor
xchg
rclb
enter
dec
or
subb
in
sub
js
mov
xchg
out
ss
and
lods
aas
stos
shl
jle
cmp
and
out
fists
xchg
inc
scas
jl
dec
fcmovnb
test
xchg
sbb
ds
cmp
sahf
ljmp
push
ret
jns
ss
rcrb
insl
inc
dec
lds
dec
inc
inc
pop
das
pop
adc
mov
fldenv
andl
lds
stos
add
mov
sub
pop
mov
and
jae
jmp
out
dec
jnp
mov
aaa
and
aam
push
insl
sti
cmp
in
mov
sub
inc
or
aas
mov
or
push
ja
aad
inc
adcb
add
sub
repnz
mov
sahf
add
pop
movsl
mov
inc
sahf
sub
icebp
inc
jg
mov
in
in
scas
movsb
sti
add
pop
cmc
jnp
add
xor
sub
and
pushf
stc
push
add
push
add
jb
jp
repz
call
and
es
xor
xor
and
pop
and
cld
jg
or
jle
outsl
js
push
jge
sbb
dec
jecxz
mov
mov
scas
movsb
cmp
pop
and
pop
push
xchg
inc
or
test
xor
pushf
xchg
xor
inc
cwtl
das
test
pop
sbb
lahf
imul
mov
out
cld
gs
lret
add
sub
iret
mov
ret
xchg
sub
mov
decb
and
xor
in
out
out
lods
sub
sti
xchg
sbb
push
or
mov
push
add
or
das
pop
in
aas
and
jle
inc
cwtl
sbb
dec
not
jnp
cltd
aas
mov
inc
inc
push
test
pop
xlat
add
jle
fiaddl
adc
and
sahf
movsb
mov
mov
ss
stos
pusha
lods
cs
sbb
fiadds
movsb
cltd
xor
inc
in
pop
mov
mov
ret
callw
xchg
xchg
push
adc
das
xor
movsb
insb
jge
or
mov
outsl
daa
lahf
jmp
or
in
dec
jmp
repz
ljmp
arpl
jno
ja
xor
into
add
pop
into
adc
push
outsl
xchg
lods
cltd
mov
lret
jp
movsb
xchg
add
repnz
stc
xchg
test
jle
mov
mov
and
aad
fucomip
movsb
aas
xlat
push
inc
jnp
aas
icebp
jbe
add
push
jb
outsb
mov
mov
loope
jp
pop
jno
push
lods
dec
pop
lcall
dec
pop
dec
xor
lea
imul
push
pop
leave
xorb
push
mov
mov
mov
xor
out
jp
fs
inc
mov
jl
test
stos
pop
fs
jb
test
imul
movsb
gs
pop
push
imul
push
insl
pop
push
ja
inc
mov
cmpsb
std
mov
mov
std
fildll
lock
jne
push
or
pop
jge
or
mov
mov
xchg
jmp
jbe
cltd
jo
cmp
xorb
inc
mov
sbb
lret
or
lcall
imul
fistl
sub
mov
shlb
xchg
xor
ret
push
sub
or
add
sbb
repz
js
dec
sub
xor
or
ja
jg
mov
andl
cmpsb
push
pop
cmp
push
mov
mov
sub
lods
lahf
and
subl
jecxz
in
fidivrs
gs
in
xor
bound
sub
mov
imul
cmc
sarb
sbb
sarb
or
pushf
fnstenv
lret
or
push
sub
out
dec
jns
xchg
sub
jg
lods
fucomp
lock
out
mov
xchg
shrb
mov
add
sti
nop
dec
add
add
push
lods
push
fisttps
xchg
lods
popa
xor
push
test
pop
cmp
imul
fisubrl
xchg
dec
pop
mov
lods
cltd
pop
fidivl
or
dec
sbb
dec
data16
push
lret
in
dec
cmpsl
mov
stos
into
mov
daa
int
popa
pop
pusha
jp
inc
sbb
and
clc
outsb
aam
pop
cmc
pop
push
roll
lcall
jns
nopl
out
mov
xchg
mov
push
lods
movsb
shll
gs
or
icebp
int
fsubrl
test
xor
mov
ja
ja
sbb
mov
mov
dec
shll
sub
mov
test
aaa
dec
movsb
push
subb
aas
jne
movsb
ja
adc
stos
jmp
fcomps
add
enter
cli
cmp
xchg
jbe
movsl
fidivrl
stos
mov
jo
insl
jmp
in
pushf
sub
orl
mull
std
shll
fisubrs
inc
orb
lcall
fs
fidivrl
xor
inc
aas
push
js
mov
lds
and
cmpsl
inc
dec
sahf
mov
jle
jmp
or
push
add
or
and
lahf
rep
inc
cld
jecxz
decb
mov
dec
sub
jns
lods
dec
cmp
divb
js
dec
mov
stos
mov
das
jp
inc
sbb
adc
leave
push
sub
pop
cs
xor
jge
into
ficomps
mov
mov
add
fadds
loop
cmp
ret
fwait
pop
imul
iret
mov
pop
inc
stos
lods
mov
out
rclb
adc
push
sbb
adc
das
fwait
mov
out
inc
stos
inc
dec
inc
push
mov
lea
inc
aam
mov
mov
clc
movsl
jg
lahf
push
add
mov
leave
jle
sub
adc
mov
into
ja
pop
sbb
mov
lret
clc
enter
mov
jno
imul
call
cltd
pusha
movsb
jp
mov
pop
shlb
test
int3
sbb
inc
pop
popf
int3
iret
aad
and
lock
lods
or
cmp
xor
stos
mov
jmp
mov
cmpsb
mov
shrb
fbstp
push
xorl
movsb
insb
add
adc
pop
jne
aam
sub
into
imul
inc
lods
imul
push
mov
sub
fdivr
sub
jge
aaa
adc
mov
das
jns
imul
push
ss
lcall
pcmpgtd
jne
aad
iret
lret
push
mov
inc
inc
add
xor
loopne
sbb
jne
decl
int3
icebp
sbb
push
ret
mov
bnd
mov
ret
inc
dec
ds
add
or
movsb
insl
fcoms
pop
mov
ss
dec
fcmovnu
xor
fs
negl
insl
cltd
out
fstl
std
xlat
sub
les
inc
pop
repz
shll
and
pop
inc
pop
inc
jae
fcmovne
lock
mov
dec
cmpsb
cs
outsb
outsl
add
pushf
add
xchg
rolb
pushf
repz
dec
adc
pop
cmp
sbb
cmp
popa
or
push
mov
add
popl
sbb
or
fxch
mov
mov
aas
call
imul
mov
mov
clc
int3
into
pop
jb
add
ret
mov
test
sub
pop
ret
add
repnz
jle
test
flds
push
out
pop
test
mov
push
jmp
in
loop
mov
fmuls
seto
sbb
add
sahf
pusha
mov
add
fistpl
xor
fstps
sbb
adc
push
inc
mov
hlt
mov
inc
inc
popa
jl
adc
pusha
pop
add
mov
mov
cs
test
movsb
jecxz
jno
sub
rsqrtps
sbb
mov
adc
push
mov
xchg
lea
jb
or
pop
int3
rol
in
inc
dec
call
mov
mov
cmp
cli
inc
js
scas
and
fistpl
push
cmp
xchg
lcall
outsb
jne
or
out
push
movsl
mov
cld
xchg
sub
fiaddl
movsb
xor
shr
and
leave
testl
push
out
pandn
cmp
push
or
out
les
rcl
inc
mov
xchg
cmpsl
jbe
mov
cmp
adc
notl
pop
and
dec
sbb
popf
sub
cltd
pop
imul
cmp
fs
dec
imull
sub
jecxz
lods
movsb
lahf
cmp
pop
mov
jo
adc
pop
fldpi
enterw
pop
in
mov
out
mov
js
int
out
cmc
xchg
out
mov
lcall
dec
cs
pop
xchg
push
xchg
and
jmp
and
push
jno
cmp
add
push
or
into
xchg
lods
jns
imul
sbb
fs
mov
push
sar
xchg
das
shrb
in
xchg
lret
adc
add
mov
jle
test
test
mov
jns
loopne
fcompl
mov
fs
mov
or
rolb
cwtl
push
insl
loop
gs
testb
mov
ficompl
mov
push
or
scas
cmc
adc
add
test
pop
ja
push
lahf
fildll
stos
jl
inc
icebp
pop
sub
aas
clc
sub
cmp
pushf
sarl
insl
sub
lret
or
pop
sbb
mov
imul
pop
or
sbb
addl
add
cmp
enter
cmp
push
out
outsl
in
inc
mov
stos
inc
ficomps
lods
into
cmp
lods
lahf
inc
sub
adc
jb
push
out
ljmp
push
movsb
imul
mov
mov
xorl
sbb
inc
xor
insb
push
jp
fisubrl
jmp
pop
sbb
pop
movsb
dec
vminss
pusha
adc
jecxz
mov
add
setl
mov
push
inc
cmp
mov
inc
adc
and
jg
adc
leave
mov
push
pop
pmulhuw
js
pop
std
out
fdivs
push
into
fmull
inc
ds
fs
rcl
mov
and
sub
mov
jle
mov
adc
and
pop
sbb
mov
sub
sub
dec
dec
mov
and
mov
dec
add
movsb
sbb
call
xor
shl
mov
jnp
cmp
push
pop
add
lcall
pop
mov
loope
dec
fs
jno
in
das
movsb
sti
cld
aam
outsl
fs
jg
mov
dec
inc
mov
in
add
jp
scas
jmp
out
loop
mov
std
sub
lret
inc
loop
arpl
cmp
shrb
int
mov
inc
bound
mov
pop
pop
ja
movsl
ljmp
lea
xor
out
lret
add
or
test
xlat
jb
loop
dec
or
aad
popa
push
mov
jl
dec
xchg
cs
push
lret
jb
lods
jle
clc
jg
fdivrl
pushf
xor
out
jo
dec
mov
mov
fadds
popa
sub
aad
scas
jmp
fs
push
jl
mov
cwtl
aaa
in
mov
es
mov
mov
fcompl
dec
jge
outsb
and
jnp
xchg
out
adc
dec
in
pop
xor
xor
sub
mov
dec
sbb
stos
insl
xchg
ret
fstpt
inc
push
cmp
dec
push
aam
adc
push
mov
xlat
test
sub
fs
lret
sbb
out
lret
subb
xchg
or
insl
stos
push
add
xor
inc
pop
mov
imul
lret
cmp
push
in
inc
aaa
lret
out
add
pusha
sub
xchg
rolb
pop
xor
in
pop
daa
adc
nopl
sbb
adc
fisubl
out
scas
sub
cmpsb
mov
je
xchg
push
jbe
fcomp
scas
mov
lea
or
mov
mov
push
into
cli
std
icebp
pop
or
int3
lahf
mov
and
or
inc
inc
xchg
lcall
and
jb
inc
jno
mov
js
sbb
std
xor
and
push
daa
mov
movntps
sarb
outsl
or
pop
hlt
lea
mov
outsl
fwait
idivl
jbe
imul
out
daa
sahf
mov
je
movsb
aas
psadbw
cli
cmp
jnp
fcomps
inc
dec
sbb
sbb
and
push
push
mov
jo
arpl
or
push
imul
loope
inc
ss
das
movsb
outsb
aas
adc
leave
push
inc
push
push
inc
shr
mov
pop
mov
add
ljmp
in
push
push
inc
adc
inc
testb
in
dec
pop
mov
adc
mov
push
push
jle
fldl
sbb
sub
jnp
fs
into
call
and
dec
ret
sbb
cwtl
dec
into
push
push
jo
das
cmp
and
or
inc
jge
pop
mov
mov
and
lods
adc
fs
cld
rcll
in
das
movsl
lcall
movsb
or
adc
imul
in
push
or
mov
addr16
rcr
or
fs
inc
test
fiaddl
ja
pop
dec
int3
xchg
cld
cmp
ljmp
movsb
push
fisttps
std
arpl
xor
sahf
sbb
sbb
daa
bound
pop
xor
mov
shrb
or
or
cmp
mov
xor
ss
mov
push
mov
add
lds
pushf
mov
inc
sub
fsub
lds
fldt
jle
cmpsb
adc
lods
fdivl
inc
scas
inc
insb
push
inc
mov
or
inc
mov
lret
mov
loope
popf
aaa
leave
daa
leave
stos
adc
lret
into
cld
adc
mov
jns
xchg
xor
xor
std
xchg
pushf
and
into
sbb
daa
or
sahf
mov
sub
test
ja
testb
fmuls
dec
aad
jecxz
ja
xchg
cs
movsl
push
int3
in
je,pn
cltd
push
jge
mov
add
inc
push
sahf
inc
bound
fdivrl
dec
ja
iret
adcb
xor
ret
mov
fmul
sbb
add
adc
dec
or
out
out
or
inc
xor
imul
arpl
jge
mov
nop
inc
inc
sahf
out
lret
mov
lret
shlb
imul
lahf
scas
inc
in
imul
out
les
sbb
sub
or
addb
mov
lahf
in
fiaddl
jo
cmc
sub
sub
hlt
inc
sub
sarl
fcoms
mov
pusha
pop
das
mov
lods
out
out
cmp
popf
push
jp
inc
cmp
push
ja
pushf
mov
stos
fwait
inc
pop
adc
in
adc
sub
icebp
dec
rcll
dec
jne
xchg
sbb
sbb
mov
addr16
add
xor
cmp
call
push
jecxz
imul
and
push
mov
into
ds
sub
mov
into
ljmp
es
sbb
push
lods
mov
test
cmp
testl
in
rcrl
test
mov
insb
add
jnp
and
pop
inc
push
jmp
and
dec
add
jae
insl
xor
pop
movsl
ljmp
sub
jp
gs
jmp
stc
xchg
xchg
or
jp
mov
in
hlt
mov
jge
sahf
fdivrs
lahf
dec
and
imul
cmpb
mov
hlt
int3
nop
ja
in
insb
popf
mov
xchg
xor
add
popl
sbbl
mov
div
and
rclb
pushf
jl
cmp
inc
jmp
imul
pop
cli
enter
movsb
inc
out
mov
incl
fisttpl
movsb
mov
mov
mov
jle
mov
lret
push
rcrb
push
lcall
nop
popa
aas
fs
pop
loope
inc
into
sub
cmp
xchg
dec
lods
pcmpgtb
ja
adc
mov
push
loop
sub
and
imul
and
mov
push
rclb
add
sbb
mov
jo
popa
mov
sahf
cmpsl
inc
stos
jne
sbb
mov
hlt
xor
cmpsb
imul
lret
dec
addr16
jg
jne
rcr
int
mov
dec
mov
arpl
dec
sub
and
xor
pop
mov
cmp
ss
mov
cs
mov
jbe
out
popa
stos
pop
dec
dec
fldcw
adc
xadd
fnstenv
jp
lret
fsubrp
in
int
sbb
sub
fnstsw
test
mov
sbb
inc
dec
mov
lea
inc
decl
lahf
das
out
push
jnp
outsl
jo
push
cmpsl
sbb
rorl
mov
or
inc
pop
fmull
ficomps
dec
lcall
push
test
fs
adc
inc
xchg
pop
mov
xorl
push
es
push
cmpsb
out
dec
movsb
rcll
cld
ret
out
add
lds
or
repz
movsb
or
jno
lret
lods
pop
add
clc
fs
pop
mov
push
xor
bswap
out
cmp
push
stc
bound
js
sub
in
mov
fs
les
jnp,pn
sbb
jp
dec
mov
mull
push
rorl
mov
pop
pop
out
adc
xor
or
les
add
push
jb
add
stos
in
dec
xchg
lods
loope
cmp
dec
add
push
out
std
sbb
icebp
jmp
xchg
imul
mov
push
stos
lea
sahf
jno
xchg
sub
inc
and
shr
push
ds
push
cmpsl
pop
fs
adc
pushf
jo
or
jns
jae
call
dec
pop
cmp
fldcw
stos
les
lahf
and
mov
inc
iret
aam
dec
scas
data16
sub
data16
adc
fs
in
jns
xchg
aam
sbb
imulb
or
das
add
in
out
mov
ret
insb
adc
cltd
or
adc
clc
divb
mov
popl
xor
and
sbb
cmp
and
adc
push
cmp
xor
mov
sbb
es
pop
xchg
mov
or
jae,pn
in
jl
dec
mov
sub
sbbl
les
xchg
mov
out
mov
add
ret
cmp
stos
inc
lahf
mov
inc
nop
sub
pop
mov
sbb
adc
and
pop
jge
jl
mov
xchg
mov
fisttpll
dec
xor
jecxz
lcall
pop
out
cli
cmp
insl
repz
dec
mov
ret
add
xchg
fsubs
mov
mov
sbb
sub
lcall
cmpsb
mov
or
lods
insb
dec
inc
sub
imul
movsl
es
jae
adc
jnp
adc
cmpl
pop
adc
jge
dec
jge
push
lret
push
lret
fdivrl
mov
push
dec
loop
inc
cmp
xchg
cmc
rcrl
jl
call
dec
aaa
es
pop
fs
sbb
mov
ret
test
ret
sbb
adc
push
xor
inc
sbb
imul
out
int
cmpsl
jle
lahf
sub
stos
test
pushf
lds
out
sahf
pop
and
dec
ljmp
mov
sbb
test
push
sbb
outsb
push
out
and
xorl
xchg
cltd
dec
iret
ljmp
fistpll
jg
push
mov
out
mov
dec
rolb
lods
mov
test
je
cmp
in
xchg
mov
inc
sahf
aam
lds
fs
xchg
or
repz
xchg
adc
lcall
dec
mov
repz
or
js
ds
mov
loope
xchg
add
ss
push
xchg
xor
pop
push
daa
xor
and
inc
inc
sub
out
jne
movsb
xor
ljmp
stos
leave
imul
nop
push
pop
imulb
outsb
movsb
or
pusha
cmp
pop
cmpb
packsswb
mov
sbb
in
imul
add
jb
popa
mov
dec
pushf
mov
dec
cld
in
pop
inc
lcall
movsb
push
outsb
mov
cwtl
jmp
jno
sub
dec
pop
push
mov
cltd
fistl
mov
outsb
in
cmp
xor
adc
js
inc
sbb
xorl
aam
sbb
call
test
add
pop
ds
sbb
pop
jle
xor
and
sub
mov
pop
into
sahf
jmp
lea
xchg
lds
std
movsb
jl
sub
lea
imul
cmp
jbe
adc
mov
sub
lods
in
pusha
add
cs
and
ljmp
lock
sbb
call
push
and
imull
pop
arpl
push
mov
outsb
scas
out
lock
pop
cli
cs
sbb
insl
out
push
or
xor
jge
out
loop
cli
and
int3
into
idivl
dec
lcall
sti
dec
mov
or
or
mov
cmp
and
bound
cmp
arpl
lods
lods
imul
fldt
xchg
jo
aam
cmp
cmp
leave
jle
cmpsl
lock
sti
xor
jbe
or
sbb
mov
push
mov
fxam
adc
orb
dec
sbb
fs
xchg
fldcw
sbb
adc
xlat
xchg
imul
scas
inc
push
mov
in
push
jae
sbb
int
cmp
mov
push
lahf
fsubrl
mov
cmp
inc
aas
lret
jl
and
sbb
ficoms
test
ss
lods
mov
popf
ds
movsb
pop
sbb
out
pop
adc
int
ljmp
adc
jbe
xchg
mov
sbb
lock
mov
sub
mov
aaa
stos
jae
sbb
movsb
or
mov
dec
cmp
outsb
jge
sub
or
mov
pop
inc
call
mov
icebp
jmp
mov
jle
negb
xor
xlat
push
mov
cmpsl
xor
sarb
dec
out
xor
add
shlb
je
push
mov
adc
mov
push
sub
sbb
out
test
push
mov
mov
fnstcw
jbe
jbe
das
lds
loope
lcall
dec
fidivrl
push
lea
stos
sub
adc
jp
dec
inc
inc
lods
push
pop
fwait
test
cmp
addr16
add
into
sub
fcom
fdivrl
outsb
insl
rorb
in
stos
lret
movsb
ret
stc
nop
lock
add
pop
sub
pop
ds
jg
inc
inc
add
loope
ret
andl
loopne
leave
mov
push
clc
sahf
imul
add
movsl
and
fdivs
mov
cmp
inc
dec
loope
ror
cmp
cmc
mov
movsb
addr16
js
and
add
sub
xor
test
ss
add
pop
ss
jecxz
hlt
out
in
fs
or
mov
nop
xor
push
mov
xchg
dec
pusha
in
adc
jbe
dec
jp
fs
mov
pop
push
outsb
push
insb
adcb
and
fs
nop
mov
mov
push
xchg
add
xor
pop
jno
fs
sub
dec
jnp
dec
rolb
jb
movsb
mov
push
je
imul
mov
push
rolb
jbe
dec
xchg
sub
pusha
ljmp
or
daa
mov
fs
leave
fs
and
dec
loop
fcoml
mov
add
insb
or
lods
mov
cmp
mov
test
lret
ss
and
out
icebp
pop
out
cmp
xchg
movsl
shll
ret
cmp
mov
popf
ds
sbb
lcall
sbb
sub
aam
sbbl
fs
pusha
lds
mov
loop
decl
je
out
fdivrs
into
sub
lods
cmp
out
ficompl
idivl
and
pop
movsb
out
mov
or
out
fists
sub
push
inc
in
xor
fbstp
imul
and
jg,pt
loope
fsubrs
popa
dec
cmpsb
gs
fldcw
jo
out
imul
lock
pop
xor
pop
movsb
icebp
popa
cmpsl
pop
repnz
xchg
jge
xor
dec
outsb
rep
fisubrs
mov
pop
add
push
cltd
fbstp
pop
xchg
cmp
add
adc
fldl2e
jbe
jle
out
inc
inc
dec
or
adc
mov
mov
add
and
sbbb
rcrb
repnz
das
fisttps
ljmp
ss
mov
loop
jp
cli
stos
push
pop
in
pop
sbb
stos
add
sub
into
lods
sub
xchg
jmp
pop
adc
pop
arpl
pop
into
push
xor
and
notb
mov
add
or
shr
aam
push
incb
pop
and
and
dec
jb
in
in
cwtl
inc
cltd
out
lods
pop
pop
into
cmp
jl
ja
or
sbbl
popa
fldt
dec
loope
pop
ret
inc
mov
movsb
or
adc
add
test
in
push
mov
test
cmc
imul
sub
inc
subb
mov
jae
sub
xchg
and
arpl
loop
mov
adc
add
pop
dec
pop
in
pop
fwait
dec
mov
xchg
insl
repz
lret
inc
dec
movsl
lods
mov
jp
insl
popf
push
jnp
pop
inc
cwtl
sahf
add
xchg
or
in
out
fisubrl
out
fs
xor
cmp
mov
pop
sarl
ljmp
rcr
sub
cmp
jb
inc
fnstenv
ljmp
inc
jecxz
dec
xor
into
xchg
rcl
movsb
ljmp
mov
fnstsw
insl
add
loopne
mov
cmp
lods
mov
mov
sub
out
lods
pop
out
inc
inc
or
push
mov
cmp
add
and
je
sub
pop
lea
push
rclb
mov
sub
push
insb
inc
int3
roll
mov
sub
xchg
mov
sbb
rcll
dec
int3
mov
sahf
je
xor
push
xlat
inc
adc
mov
inc
sarl
sbb
jl
les
arpl
jae
addr16
lea
ret
jbe
dec
and
push
dec
mov
nop
stos
mul
pop
sbb
or
push
inc
roll
shrl
fwait
out
jbe
sub
pop
int
inc
xorl
or
add
xchg
shl
mov
movsb
aaa
sub
pop
sub
roll
cmp
hlt
xchg
cmp
xor
add
mov
lea
loope
add
sub
aad
cmp
xchg
repz
cmp
xor
das
dec
les
bnd
sub
add
sahf
xor
inc
bound
dec
sbb
push
mov
mov
fstps
inc
popa
jne
out
imul
in
cwtl
shlb
jle
insb
push
push
dec
mov
mov
xor
ss
ret
cli
fiaddl
and
test
xor
fs
rclb
jns
into
jp
push
mov
mov
mov
adc
faddl
mov
stos
jb
in
sbb
sbb
iret
inc
sub
push
xchg
pop
sar
cmp
pushf
push
jno
data16
out
lahf
cmp
shr
stos
xor
outsb
hlt
lcall
test
and
int3
sbb
sahf
inc
push
subb
xlat
xchg
ss
fisttpl
call
cltd
sbb
aad
clc
jg
int3
hlt
das
out
xorl
pop
pop
movsb
mov
pop
fwait
es
sbb
add
jmp
out
test
sbb
lret
lahf
pop
hlt
ljmp
repnz
mov
push
call
push
gs
outsb
ja
ret
xchg
push
sub
rolb
adc
mov
sbb
jp
cmp
pushf
stos
scas
fprem1
outsb
repnz
ret
test
xor
movsl
out
inc
outsl
in
repz
pop
movsb
sub
jnp
add
jp
jbe
icebp
faddl
cmc
mov
dec
outsb
mov
sub
push
aam
in
mov
mov
dec
pop
cmpsb
scas
and
cs
movsb
scas
mov
nop
xor
cld
stc
fs
xchg
add
lret
movsb
adc
stc
in
inc
xchg
insb
pushf
inc
je
cmc
mov
ljmp
pop
in
mov
sbb
icebp
jbe
lret
xor
arpl
add
xor
adc
cmp
cmp
mov
fcos
test
mov
fcompl
in
mov
mov
inc
push
ret
jo
mov
lret
lods
dec
cmc
push
mov
inc
lret
mov
jne
xchg
fidivl
mov
or
outsb
addr16
push
adc
into
jo
andl
add
bound
stos
imulb
or
push
data16
mov
xchg
add
jo
xchg
sub
dec
push
push
icebp
jle
rcll
or
dec
hlt
jle
gs
sbb
nop
daa
out
clc
imul
inc
in
imul
rcll
or
inc
arpl
mov
push
mov
imul
leave
stos
xor
movsb
or
mov
js
loope
cmpsl
inc
xor
jecxz
push
testb
scas
faddl
lea
stos
adc
cltd
mov
push
fimull
push
dec
inc
outsl
dec
xor
inc
aas
adc
adc
cmp
inc
fiadds
xor
mov
add
ljmp
mov
inc
cs
fstpt
cmp
push
add
xchg
push
fidivrs
inc
pop
rcr
inc
fs
insl
sbb
nop
outsb
mov
add
or
xor
mov
pop
shr
les
pop
pop
pop
xchg
sbb
inc
dec
data16
stos
mov
adc
jnp
popa
mov
push
fstp
scas
movsb
dec
xchg
pop
das
fldt
xchg
jae
rclb
mov
mov
lods
rorl
add
fcompl
jl
aas
pusha
pushf
int3
jmp
xchg
lret
mov
jb
fs
pusha
es
test
or
sub
jmp
fldcw
adc
jb
xchg
sub
outsl
push
push
rorb
push
pop
scas
lock
stos
sub
test
push
arpl
in
push
add
jg
dec
pop
and
ret
cltd
roll
xchg
ret
push
out
mov
sti
xchg
fcoms
out
jnp
pop
jae
mov
ja
mov
sub
andb
aaa
ror
push
jmp
or
sub
xorl
imul
xchg
sub
sbb
flds
xor
cmpsl
add
sbb
addr16
addl
int3
add
iret
adc
xchg
mov
ret
and
dec
pop
dec
sub
or
je
icebp
add
sahf
mov
xchg
mov
jbe
mov
rcll
and
cmpsb
aam
mov
pop
clc
std
scas
shrb
cwtl
inc
mov
add
mov
data16
repnz
aam
sbb
xchg
insb
sub
out
popf
push
push
sbb
in
sub
outsb
fmull
sarl
insl
pop
outsb
xlat
inc
nop
push
add
mov
mov
js
out
andl
xchg
outsl
mov
and
cli
mov
mov
lods
cltd
sbb
cld
popf
add
inc
lods
adc
inc
and
stos
rol
mov
std
fiaddl
mov
dec
adc
mov
jne
xchg
fdivs
push
stc
insb
fs
aad
int3
mov
imul
pop
jl
mov
in
lea
add
push
cmp
test
mov
add
xchg
xor
jg
dec
movsb
enter
jg
mov
ja
add
fdivs
fisttps
imul
jl
push
or
sahf
insb
imul
sub
or
insl
imul
inc
loope
jne
es
imul
mov
repz
loop
lods
sub
adc
mov
push
xor
mov
gs
adc
adc
jmp
stos
bound
mov
inc
das
jne
stos
aad
xchg
rcrb
cmpsl
jne
ljmp
lcall
jne
add
lret
jns
jg
movsb
mov
lods
movsb
in
aad
pushf
lea
push
mov
fiaddl
call
xchg
call
rolb
fbstp
addr16
mov
dec
and
xchg
inc
mov
aas
std
push
loope
jns
push
fldcw
inc
out
ret
pop
aam
test
dec
xorb
lods
mov
dec
enter
lcall
inc
lods
or
les
sub
cmp
jns
mov
imul
add
imul
into
xchg
rcrb
leave
movsb
aad
mov
stc
pop
cmpb
fs
ret
in
sub
in
dec
push
push
stos
pop
cvtps2pi
aam
jp
jb
int
je
ret
cmc
cmp
movsb
pop
stos
and
insl
jmp
loope
xchg
push
fsts
stos
jnp
mov
fs
xchg
rorb
les
adc
jno
les
add
cmp
ret
adc
pop
insl
iret
shll
ss
arpl
xor
jle
pop
aaa
out
outsb
shrb
lcall
or
mov
mov
outsb
ds
test
test
mov
inc
out
and
dec
xchg
movsb
mov
scas
aad
rcr
jbe
lds
inc
outsb
rcrb
test
add
cmp
xor
fwait
call
mov
ljmp
add
dec
inc
mov
adc
mov
jnp
xchg
xchg
mov
mov
lods
imul
and
jmp
fldcw
test
in
out
outsl
stos
jnp
pusha
sbb
inc
test
stos
flds
aaa
xor
loop
add
rcr
mov
pop
call
fdivrl
jbe
enter
mov
cs
dec
or
clc
dec
sub
lahf
addb
enter
das
pusha
ljmp
and
fistpl
push
das
xor
fimull
lock
and
sbb
movsb
mov
xchg
nop
sub
out
iret
push
std
sbb
push
add
imul
dec
mov
ljmp
lock
dec
test
xchg
and
loop
imulb
fwait
inc
xchg
and
adc
lds
cmp
sbb
paddb
and
lahf
dec
xor
loop
loopne
pop
in
sahf
test
test
jb
out
rolb
sti
jno
sub
pop
adc
inc
push
ljmp
and
jnp
sbb
insb
jge
lret
pop
test
out
adc
out
inc
filds
cltd
loop
or
jns
sbb
movsl
cmpsl
jbe
imul
push
sub
adc
stos
pop
lods
push
stos
mov
rclb
loope
push
xor
inc
mov
pop
out
pop
inc
fstp
jecxz
jl
out
leave
in
xchg
hlt
popf
pusha
mov
xor
pop
jl
xchg
adc
stos
inc
pop
enter
mov
imul
adc
icebp
inc
sbb
sbb
pop
shrb
jge
push
inc
pop
push
mov
testb
jl
icebp
lret
movsb
adc
xor
sub
cltd
andl
xchg
mov
lcall
test
daa
push
sbb
and
pop
lcall
jb
push
pop
cmc
or
add
test
bound
mov
jne
mov
xchg
jns
adc
aaa
cmp
push
fiaddl
mov
cmpsl
scas
ja
sarl
push
rolb
movsb
cmc
es
lahf
das
outsl
push
sbb
dec
mov
orl
cmp
aam
inc
push
fbstp
push
out
sbb
out
push
movsb
pop
gs
lods
loopne
sbb
mov
mov
add
pop
out
push
xor
gs
cld
imul
clc
lahf
lods
imul
and
leave
push
std
data16
fistl
stos
and
jno
hlt
pmaxsw
xchg
pusha
gs
pop
jge
mov
bound
mov
hlt
inc
cmp
stos
lret
jbe
adc
xchg
jnp,pt
cmpsb
lock
outsb
scas
mov
daa
cmp
test
adc
mov
sbbl
pop
ljmp
mov
movsb
scas
jle
push
gs
mov
add
clc
mov
and
dec
ljmp
jecxz
inc
cmpsb
cs
ljmp
add
imul
sbb
jg
xchg
in
outsb
into
mov
sbb
mov
aas
stos
les
stos
dec
and
ret
dec
mov
movsb
and
cmp
pusha
jns
lods
sub
push
vmovq
sbb
lret
cmpsl
pop
inc
fs
pop
add
push
test
add
jns
out
sub
movsl
push
stos
mov
rorl
arpl
pop
ljmp
pop
cmc
mov
and
xchg
adc
or
push
aas
xchg
pop
pop
mov
dec
xor
popa
in
ss
sar
sub
cld
pop
lods
mov
push
sbbl
lock
fisttpll
inc
xchg
iret
push
ja
jo
pop
dec
xor
xchg
movsb
push
imul
jmp
loope
push
gs
loop
sbb
fwait
int3
cwtl
mov
movsb
or
xlat
data16
mov
and
mov
mov
loope
fldcw
push
xchg
sahf
jmp
jno
jnp
jg
mov
mov
xchg
aas
fmuls
mov
mov
lret
jnp
jp
fs
imul
stos
xchg
stc
ljmp
fimull
jo
cmp
pop
pop
and
mov
test
ds
arpl
sbbb
or
jae
sti
daa
mov
in
push
inc
imul
jmp
mov
in
out
das
fs
sub
out
xchg
add
mov
push
sub
lret
mov
leave
and
pop
rcrb
shrl
dec
loopne
aaa
into
inc
aad
insb
mov
pop
mov
sbb
daa
dec
mov
loopne
mov
pop
mov
inc
and
dec
fistps
xchg
push
adc
push
and
shrl
dec
imul
pushf
dec
fmuls
jle
div
jl
test
enter
ds
imul
cmpsl
pusha
mov
pop
out
mov
mov
imul
add
jnp
cmc
mov
loope
fiadds
jg
mov
ficoms
dec
mov
lods
pusha
call
mov
test
fs
mov
pop
ljmp
jnp
sbb
push
or
xor
cltd
mov
mov
mov
inc
roll
xchg
adc
adcl
cmp
mov
cmp
sbb
jecxz
shlb
aad
jae
leave
imul
fs
nop
out
mov
push
rorl
out
sbb
inc
xlat
rcrl
fcomps
lods
mov
mov
lods
fs
jl
sub
jp
inc
sub
add
jno
inc
popa
mov
push
jo
adc
cmp
or
pop
adc
les
inc
mov
lea
push
push
or
js
or
movsb
xor
mov
dec
add
mov
add
mov
mov
jbe
jecxz
nop
mov
add
sub
dec
push
out
pop
in
cmp
sub
adc
jb
outsl
cs
mov
push
loop
xchg
or
adc
stos
lret
in
adc
inc
in
sbb
sti
jnp
xchg
inc
jl
jno
cmp
fptan
cmpsl
into
in
sti
iret
ss
add
mov
movsb
sub
add
mov
fnstcw
loopne
mov
inc
fs
or
imul
inc
sbb
iret
jne
outsl
loop
in
mov
mov
test
aad
push
inc
movsb
lahf
adc
adc
jne
inc
movsl
dec
fs
adc
pop
fwait
push
push
jne
int3
and
jns
movsb
movsl
mov
adc
cld
jmp
jnp
sbb
jmp
sbb
jno
stos
jl
xchg
inc
jge
ror
or
and
daa
jno
xor
sub
std
sub
and
clc
stos
flds
ds
ss
ficoms
dec
push
in
push
insl
xchg
push
dec
push
sbb
or
jl
orl
push
xchg
movsb
fistps
rorl
lea
sbb
fdivrl
sub
lcall
jbe
jbe
fldcw
xlat
stos
ss
add
dec
insl
dec
inc
cs
push
cltd
mov
or
add
sbb
cld
aas
lahf
jmp
push
cwtl
inc
cmp
mov
mov
aam
dec
pop
imul
push
shll
imul
dec
out
mov
ret
jmp
dec
mov
movsb
mov
stos
sbb
out
ljmp
outsb
dec
cmp
jnp
mov
into
sbb
jne
or
cmpsb
lds
popf
je
std
push
xchg
orb
bound
les
mov
outsl
cmc
jecxz
xor
in
push
fisttpl
or
inc
lret
fsubs
mov
dec
cmpsl
jmp
jo
push
fisubrs
cmp
push
inc
and
inc
fnstsw
pop
sbb
rclb
sarb
push
lret
mov
pop
popa
sbb
cli
fs
mov
mov
iret
mov
shrd
lds
mov
filds
aad
xor
insb
push
into
add
aad
xchg
mov
popf
jecxz
pop
fwait
xor
imul
cmp
int3
loop
push
ret
adc
cmp
cmpsl
pop
xchg
movl
inc
xchg
out
imul
pop
push
sub
js
pop
xor
sub
fs
adc
mov
mov
ljmp
dec
mov
popa
lret
inc
dec
mov
mov
aam
mov
fs
jge
jb
pop
sar
das
pop
ja
fsubrp
mov
shll
and
insl
lret
xchg
jo
push
dec
xor
sbb
sbb
or
sahf
adc
add
lahf
pop
pop
adc
add
push
out
imul
inc
and
mov
imul
int3
ds
sbb
xor
or
ret
jmp
lods
sbb
lods
fs
cwtl
or
ror
arpl
sti
push
das
xchg
add
cmpsb
repz
mov
orb
cmc
jae
dec
mov
cmp
repnz
insl
cs
dec
flds
leave
and
movsb
lock
mov
sbb
fldcw
es
ret
icebp
lds
into
std
jp
xchg
mov
xor
in
call
sub
push
add
test
pushf
dec
sbbl
inc
xlat
in
sub
cs
or
leave
mov
jns
mov
cltd
xor
inc
xor
mov
pop
ficomps
movsb
pop
push
outsb
aam
out
sbb
xor
pop
lret
push
lods
mov
fimuls
mov
movsb
or
push
mov
xorb
leave
test
xchg
mov
into
pop
outsl
popf
mov
mov
jge
xor
push
sub
inc
pop
jp
insb
cmp
sub
ljmp
fdiv
test
cmpsb
out
cmc
xchg
cmpsl
mov
mov
es
rcll
mov
adc
add
mov
xor
xchg
lods
inc
notl
jge
sarl
adc
pop
ljmp
xchg
scas
fdivs
js
dec
dec
or
sarb
sub
popf
lea
movsb
inc
mov
imul
pop
clc
andl
cmpsl
cmp
pop
or
es
ja
addl
bound
std
sbb
sahf
imul
cmp
int3
lret
pop
fs
call
adc
popf
push
fidivs
in
dec
popf
mov
pushw
aas
pop
pop
andb
sub
int3
loopne
inc
movsb
loopne
das
call
cmp
out
add
jns
xchg
mov
jge
cltd
mov
add
inc
mov
sbb
push
mov
fsubrl
cwtl
jnp
movsb
insb
enter
jo
push
xchg
pop
fwait
movsb
jecxz
fadd
jbe
cltd
rorl
mov
pop
push
inc
inc
cmp
xor
cmc
or
adc
nop
out
int3
mov
inc
mov
lods
mov
lret
movsl
inc
lods
cmp
and
lds
insl
cmpsb
stc
jg
mov
ret
stos
pop
dec
movsb
lret
jmp
dec
jbe
dec
scas
out
cmp
dec
and
rol
cmc
xchg
in
addr16
sbb
or
dec
scas
or
xchg
xchg
mov
fldt
mov
sbb
popa
gs
repz
dec
push
inc
sub
xchg
mov
enter
fmul
jbe
int3
jne
cltd
leave
insb
or
cld
pushf
dec
push
cwtl
scas
out
xor
inc
test
mov
int3
add
je
addb
or
ret
inc
out
outsl
mov
popf
push
adc
sarb
pop
mov
enter
push
mov
add
lret
sub
test
loopne
jno
pop
jno
sbbb
stos
adc
stos
outsb
sbb
ret
repnz
sub
mov
mov
lods
aam
ljmp
mov
sti
sbb
adc
pop
aam
fmuls
mov
fnstcw
lock
fs
pop
xchg
in
out
pop
fdivr
mov
shlb
cmp
shrl
xchg
fcmovnu
rcrl
stos
jnp
loope
add
js
mov
add
dec
dec
fs
test
jl
cs
ss
stos
mov
movsb
outsb
cltd
repnz
out
adc
mov
jmp
and
jle
jbe
push
and
sub
jb
in
add
pop
cld
inc
and
fisttpl
inc
pushl
adc
or
mov
addr16
cld
dec
or
mov
or
inc
imul
dec
add
sub
andb
push
and
pop
movsb
stos
jl
mov
push
int
add
inc
jbe,pt
rorb
incb
jbe
inc
mov
mov
loope
and
mov
sub
es
adc
add
or
mov
jnp
pop
cwtl
fimuls
jecxz
inc
mov
addl
xchg
je
fsubs
loop
lahf
pop
pop
xor
cmovp
mov
mov
fnstcw
add
lock
push
fcomip
mov
mov
lret
inc
cltd
fucompp
frstor
call
call
add
xchg
jne
sub
dec
push
fildll
sub
mov
das
jg
int
mov
fmull
lods
cmpsb
lcall
sub
out
push
jmp
ud1
xchg
or
mov
jl
les
das
inc
pop
sahf
int
cwtl
dec
xor
gs
push
rcll
repz
sub
xchg
mov
cmp
mov
mov
jnp
aad
out
fbld
test
mov
aaa
loop
sahf
xor
xor
lcall
lea
test
imul
repz
fucompp
adc
in
mov
dec
cmp
adc
fisubrs
dec
ja
cmp
sub
and
jmp
je
imul
mov
fldenv
in
or
fucomp
out
in
ja,pn
or
aam
sar
and
fdivrl
push
push
das
jo
xlat
xchg
es
andl
out
mov
jmp
mov
clc
sub
movsl
fldenv
add
mov
es
ljmp
out
push
push
stos
ja
inc
loop
jbe
imul
mov
or
div
pop
lcall
fmuls
pop
mov
pop
adc
push
flds
subl
ds
popf
jns
sub
outsl
ja,pn
fs
jecxz
jl
dec
scas
push
nop
dec
in
xor
xorl
or
insb
das
dec
loop
outsb
xchg
or
mov
jnp
jnp,pt
xchg
mov
les
mov
xchg
adc
stc
jae
in
jae
sub
inc
sub
push
and
cmp
imul
pop
pushl
mov
sar
add
or
repz
xor
dec
inc
push
mov
mov
or
scas
popa
push
lcall
mov
loope
mov
and
adc
xlat
push
push
insb
add
cmp
movsb
mov
cli
ret
xor
push
ljmp
repz
pusha
mov
push
roll
pop
or
pop
lods
cld
rcrb
repnz
adc
pop
cmp
xlat
test
fs
cmp
inc
lods
sbb
mov
mov
sbb
cltd
xchg
push
inc
gs
dec
sbb
pop
ljmp
imul
adc
fisttpll
ss
movb
push
inc
frstor
sbbb
lods
aas
pop
add
pusha
add
jp
inc
mov
es
out
imul
xchg
and
cmp
push
in
push
les
stc
add
push
ss
mov
jns
mov
mov
dec
pushf
dec
imul
cwtl
mov
add
insl
loope
jle
xchg
dec
imul
jae
xor
popf
cmp
movsl
movsb
mov
out
lret
fs
iret
jg
lret
mov
ret
xor
lcall
mov
das
outsl
jmp
mov
lods
in
gs
icebp
lahf
pushf
dec
aas
jbe
sub
imul
xchg
add
pop
cmp
mov
lret
mov
test
push
test
pop
lret
ljmp
outsb
sub
dec
orb
into
movsb
mov
fimull
cmpsb
pop
roll
or
sbb
sti
lods
std
sbb
jno
sarl
js
fistps
stos
cld
add
adc
in
daa
xorps
jmp
jp
fwait
lods
in
stos
pop
mov
int
inc
aas
fnstenv
movsl
jg
mov
or
jmp
xchg
cmpsb
jb
push
mov
xchg
sub
roll
pop
cmp
cmp
push
cmp
ljmp
ret
mov
pop
das
push
push
fisubrs
push
hlt
into
inc
jge
jno
out
mov
inc
add
jmp
popf
incb
fs
mov
cmp
pop
xchg
xchg
lret
cwtl
repnz
adc
sarl
xorl
mov
sbb
adc
pop
stc
enter
aas
and
push
ljmp
mov
addr16
out
mov
pop
jg
push
pusha
xchg
das
ret
pop
or
dec
cli
rorb
mov
adc
pop
roll
mov
dec
insl
inc
int3
lcall
insb
mov
outsb
js
ret
jle
mov
jg
cmpsl
movsb
cmp
sahf
ss
std
push
adc
insb
into
orl
imul
dec
sub
mov
fcmovnbe
push
mov
cmp
call
inc
mov
mov
pushf
fs
lcall
gs
and
stos
and
in
or
out
test
fsubs
cli
fcoms
mov
stos
fwait
cwtl
bound
push
pusha
outsb
mov
jo
mov
and
xchg
lds
adc
fsts
inc
test
loopne
cmp
and
ljmp
test
inc
xchg
into
jg
nop
into
mov
ja
add
dec
inc
jno
sbb
or
lahf
sarl
into
iret
and
dec
imul
insl
sbb
stos
leave
pusha
push
inc
in
pop
loopne
cwtl
std
inc
hlt
fs
mov
ficoms
sbb
movsb
aam
repnz
mov
mov
dec
pop
adc
sub
fs
mov
lds
fimull
pop
jns
adc
fimull
push
xchg
loopne
fsubs
mov
paddsw
gs
fdivrs
mov
mov
and
xchg
add
fbstp
es
cmpsl
push
mov
aam
andb
xor
fs
mov
div
ljmp
jecxz
pop
xchg
pushf
dec
push
fdiv
outsl
cld
mov
shr
stos
add
cmp
bnd
test
xlat
outsb
inc
lods
xor
inc
pop
sbb
lahf
jecxz
insb
add
mov
xor
mov
popf
add
or
inc
xchg
push
push
in
in
out
outsb
in
xor
out
push
xchg
mov
cmp
pop
aaa
in
dec
lret
adc
repz
packuswb
insl
and
lock
les
andl
cld
jp
jnp
mov
dec
mov
xchg
push
stos
pop
xchg
into
xchg
pop
sub
cltd
jb
inc
sbb
je
rorl
mov
dec
mov
inc
sub
dec
xor
daa
jl
jnp
int
ret
imul
push
mov
in
inc
jnp
mov
sbb
aad
rclb
mov
cli
add
shr
jbe
pop
sbb
adc
out
ds
fsubl
mov
and
mov
xlat
mov
and
ljmp
pop
pushf
les
sbb
imul
ljmp
push
je
repz
mov
xchg
push
movsb
jne
imul
fs
xchg
sub
or
inc
push
mov
cmp
mov
test
test
subl
xchg
cmp
xchg
mov
loope
sbb
mov
mov
cltd
inc
aad
arpl
addr16
in
xchg
cmp
add
aas
add
cmp
mov
aam
mov
and
cmp
mov
aam
lods
push
mov
mov
sub
je
dec
or
cltd
fs
add
lret
cmpl
shlb
and
xor
cmpsb
or
mov
pop
inc
push
icebp
je
sahf
fwait
mov
or
adc
clc
and
mov
cvtps2pi
arpl
inc
jl
add
mov
jl
stc
addl
outsl
add
out
mov
insb
lods
xchg
lcall
and
sub
mov
add
scas
mov
and
jb
xlat
and
dec
pop
xor
or
and
stc
inc
lcall
rcrb
ljmp
inc
loope
push
mov
lea
inc
and
adc
shll
out
cmp
arpl
sub
push
add
sbbb
repz
ds
xorl
jne
jbe
lret
sbb
sbb
sti
cmp
jae
insl
cmpsb
inc
dec
movsb
mov
call
pop
push
jns
cmp
mov
jecxz
add
in
test
std
add
xchg
or
pop
lods
or
leave
inc
cmpsb
rorl
jp
sub
xor
sahf
int
jp
loope
xchg
push
lea
xlat
enter
or
jge
fdivl
dec
xchg
inc
fldcw
testb
xchg
mov
incb
pop
add
lods
incb
daa
sysenter
xor
aam
or
jp
jl
ja
int3
mov
jl
shrl
sbb
sbb
fs
stc
inc
lds
xchg
scas
or
shlb
stos
les
dec
adcb
mov
ljmp
loop
pop
aam
lods
sbb
push
and
out
xchg
outsb
in
fs
cmp
sub
mov
dec
mov
mov
repnz
inc
jp
inc
mov
dec
sub
pop
mov
sbb
jnp
les
inc
outsl
dec
fldenv
sbb
mov
lock
jbe
insl
cmp
rcrl
fisubrl
fs
ss
popa
push
insb
sub
cmp
pop
loop
cltd
adc
and
imul
insl
or
fs
cmpsb
shll
pop
iret
fimuls
lret
ret
jns
fs
cmp
inc
cmc
cmp
lock
sbb
adc
pushf
repnz
imul
xchg
adc
and
mov
jmp
pusha
fs
mov
sub
mov
pop
leave
andb
pop
lcall
sbb
imul
add
mov
xlat
hlt
pop
clc
aaa
jp
cs
fwait
lret
stc
sbb
jae
mov
lret
add
sbb
jge
rolb
shl
ds
stos
dec
push
xchg
pop
or
lea
add
cs
imul
adc
and
into
shlb
lds
mov
fdivrl
pop
jnp
dec
stos
call
mov
adc
cmp
shr
xor
imul
xchg
cltd
pop
xor
sbb
pop
out
jp
dec
lea
shr
ds
pop
icebp
popf
or
jae
nop
ror
sub
mov
aad
shrl
mov
lods
insl
jno
arpl
mov
xchg
lods
fisttps
mov
shl
add
subb
mov
std
adc
rcrb
mov
mov
cmpsb
daa
jge
in
js
ficompl
inc
and
js
cmc
mov
sbb
icebp
mov
in
cwtl
xchg
out
sti
rorl
pop
adc
movsl
out
mov
jle
add
clc
adc
ficoml
aas
push
stos
sbbb
xor
sub
adc
or
fwait
aad
dec
movsl
dec
popf
sub
outsl
dec
mov
jns
cwtl
inc
pushf
in
jb
ret
or
mov
negb
ret
xor
pop
jg
add
popa
cmp
roll
mov
add
imul
and
loopne
jmp
aad
and
mov
in
push
lret
fs
sub
mov
into
movsb
xchg
cli
aas
sbb
scas
add
stos
sub
shrl
cmp
or
insl
adc
rclb
int3
js
push
inc
fisubrs
or
popa
mov
pop
int
mov
sti
loopne
stc
mov
dec
outsl
mov
filds
shlb
stos
inc
in
ds
or
cmp
push
sub
mov
hlt
xor
add
mov
xlat
xlat
pop
pop
shl
inc
jbe
dec
movsl
add
jb
add
idivb
test
dec
je
jbe
shll
xlat
xchg
mov
fsubrs
xchg
hlt
sub
xchg
mov
stos
inc
fsts
mov
jp
in
mov
jbe
push
mov
popa
mov
jb
int3
dec
or
mov
push
mov
mov
out
adcb
in
mov
lods
pop
outsl
xchg
sbb
leave
ret
jl
sbbb
sbb
stos
incb
shr
or
pop
push
jno
jp
int
dec
aam
xor
into
cwtl
mov
adc
dec
xchg
test
jge
decl
aad
fwait
scas
lock
xchg
outsb
ret
inc
push
js
hlt
mov
scas
imul
xlat
es
outsl
fimull
jns
and
movsb
loop
mov
lock
xor
das
jl
negb
pop
cmp
nop
jnp
lods
pop
cmp
or
xchg
xchg
xor
mov
ljmp
js
xor
jae
sbb
mov
shlb
sub
xlat
repz
pop
sub
push
push
sub
lock
dec
mov
add
out
xor
scas
pop
dec
enter
mov
aas
or
test
das
testl
fcmove
add
stos
inc
or
jno
mov
or
xchg
pop
xor
sbb
out
xchg
jl
inc
cmp
xchg
mov
pop
jns
xor
jb
int3
dec
js
call
inc
test
xor
out
cmc
fcomps
jge
mov
test
sti
cmp
sub
jmp
fsub
or
in
jmp
leave
int
rcl
fs
jnp
pusha
or
mov
iret
jg
popf
add
dec
movsb
cmp
mov
adc
imul
popa
push
jle
xor
test
test
aad
mov
mov
cld
imul
mov
les
lret
mov
lods
mov
mov
jno
sub
subl
movsb
adc
dec
sbb
cmovl
inc
or
push
mov
lea
mov
sub
bound
std
outsl
xchg
pop
xor
sarb
and
lea
arpl
stos
addr16
test
or
push
fs
push
jle
jae
ror
mov
int
imul
adc
push
imul
inc
mov
add
xchg
data16
test
inc
or
inc
je
fs
nop
in
mov
lret
dec
lods
add
and
cmc
lds
shrl
fildll
jns
mov
pushf
lcall
out
push
ret
xchg
ljmp
jnp
fxch
lret
pushf
jbe
mov
dec
jno
in
iret
in
dec
push
data16
std
mov
es
icebp
mov
sbb
pusha
sub
insb
movsb
ds
ljmp
out
pusha
jnp
pop
outsl
sar
inc
lret
stos
push
insb
lret
lock
enter
fs
repnz
stc
sub
movsb
ret
sbb
dec
es
movsb
add
pop
cmp
js
ljmp
movsb
xchg
sbb
inc
sbb
mov
or
rorb
ror
iret
dec
in
loop
adc
or
popa
sub
stos
cs
mov
mov
sbb
lods
jne
stc
pop
inc
xorl
push
sub
or
mov
pop
rclb
lret
aam
mov
outsb
movsb
icebp
xchg
pop
lods
ret
aaa
stos
inc
cld
test
push
or
push
jne
xchg
sbb
cmpsb
pop
stos
incb
push
fcoml
mov
imul
scas
dec
mov
mov
adc
jnp
mov
jle
inc
pop
inc
and
mov
aad
test
cmp
add
mov
outsb
fs
mov
add
mov
data16
out
xchg
pop
xchg
addr16
insl
mov
scas
inc
test
stos
adcl
aas
push
lret
and
aaa
ja
lods
or
cmpsb
jp
or
movl
sub
lret
lahf
sub
aad
or
fs
pop
dec
sub
loope
jo
rol
repz
lea
and
sbb
lods
and
insb
pop
into
shrl
daa
imul
pop
mov
jecxz
or
int
push
jbe
fs
lea
imul
fidivl
fdivs
aam
jle
iret
and
popa
rcll
out
stos
lcall
push
inc
jns
jg
jle
add
sti
sbb
cltd
aaa
sub
jmp
xor
xor
ret
mov
cltd
test
test
or
mov
fldt
sbb
je
sub
cmp
mov
pop
imul
das
pop
sbb
sbb
xor
xor
es
into
jne
mov
dec
push
fsubr
ljmp
pop
subb
stos
fmuls
insb
insl
jo
pushf
mov
add
clc
jl
dec
test
push
lret
shlb
fiadds
add
fs
and
aaa
das
pop
mov
jecxz
sub
lods
out
mov
in
fisubl
mov
lods
dec
xor
jecxz
aas
push
addr16
jno
in
leave
sub
dec
into
lds
rcll
mov
inc
dec
mov
push
inc
movl
xchg
dec
push
xor
in
fcoms
adc
push
mov
mov
stos
mov
cmp
loopne
mov
fs
stos
fwait
mov
push
dec
sahf
lea
insl
and
imul
rolb
out
adc
adc
adc
movsb
jge
stos
and
jg
push
in
sahf
stos
inc
scas
xchg
fnstenv
divb
outsb
sub
std
cltd
cmpl
icebp
or
outsl
inc
sbb
stos
insl
inc
adc
cmp
fdivr
pushf
fs
pop
mov
sub
aam
incl
mov
int
insl
mov
std
mov
add
loop
or
mov
inc
push
inc
sbb
xchg
cmpsb
lret
pop
cld
cmp
nop
adc
jmp
outsl
xchg
sahf
lds
xchg
loopne
mov
sub
inc
cli
lret
ljmp
fisubrl
push
dec
sub
scas
das
insl
mov
mov
imull
imul
fldenv
inc
xchg
sub
mov
mov
sbb
addr16
int
push
mov
ja
pop
mov
scas
mov
fsts
jg
or
inc
mov
outsb
add
sub
cs
movsb
mov
adc
dec
and
mov
je
sahf
pop
std
mov
add
dec
aam
xor
jns
dec
addr16
jecxz
ja
mov
xchg
inc
xchg
inc
push
notrack
inc
cltd
jmp
dec
add
xor
jo
cmp
dec
push
aas
movsb
mov
add
mov
inc
pop
cmp
ljmp
xchg
pop
push
mov
and
in
out
call
xor
and
loopne
mov
xchg
mov
subl
and
iret
gs
movsb
repz
adc
mov
in
jg
jle
add
dec
aad
pop
sbb
xchg
mov
inc
faddl
stos
xchg
lret
pop
fidivrs
adc
inc
add
in
jmp
stc
test
lahf
hlt
add
jp
lds
jl
push
mov
adc
adc
incl
fs
sahf
pop
loopne
int3
pop
lock
push
insl
jle
les
dec
jg
dec
push
outsb
cmc
dec
inc
notl
movsb
dec
mov
and
scas
fldenv
insb
insl
mov
stc
jecxz
cmp
imul
push
cmp
js
add
hlt
push
jb
cltd
outsl
cmpsb
cli
insb
std
mov
insl
out
xchg
sbb
ljmp
das
cld
jmp
stos
scas
pop
push
out
pop
leave
dec
jp
or
arpl
out
cmp
jecxz
cltd
mov
push
rolw
mov
xchg
pop
dec
sub
stos
xchg
mov
pop
mov
jae
hlt
xchg
je
or
fisttpll
xchg
dec
dec
inc
jbe
adc
mov
out
xchg
jge
dec
pop
push
data16
test
mov
cs
jmp
mov
or
mov
flds
fs
in
jmp
popa
xchg
es
jecxz
out
mov
sbb
stc
jnp
roll
out
jge
ficompl
popf
movsb
and
push
pop
cmp
into
movsl
aaa
xor
jg
or
xchg
test
lcall
int3
jmp
aas
xchg
cli
add
xchg
inc
mov
movsb
lret
cmpsb
addl
or
jl
mov
repnz
xor
mov
rol
out
pushf
shlb
push
jl
inc
jge
das
xor
pop
and
aad
ljmp
in
shrb
test
lock
xchg
imul
cs
jp
add
pop
mov
fsubl
jbe
push
movb
lahf
lahf
enter
add
lods
dec
loop
xchg
cmpsb
jecxz
imul
jb
and
lea
ja
lock
and
mov
mov
xlat
aaa
mov
and
push
jbe
jnp
rcl
mov
xor
fcmovbe
pushf
add
jo
fdivrp
mov
cmc
sti
insb
push
mov
fs
pushf
lret
push
push
dec
punpckhbw
cs
sbb
push
insb
dec
cmp
add
xchg
fs
clc
loopne
repnz
inc
inc
pop
jg
fstp
sbb
cld
int3
in
cmp
xchg
repnz
push
insb
xchg
or
ds
and
push
iret
pop
sub
inc
mov
movsb
pop
out
fstps
jmp
out
cmpb
ljmp
jne
pop
aaa
shlb
mov
lock
cs
push
adc
enter
es
pop
xor
sahf
movsb
lret
mov
inc
cwtl
cltd
mov
rclb
sbb
out
and
sub
js
push
movsl
daa
mov
out
ret
fnstenv
rcrb
into
aam
pop
mov
jle
rorb
idivl
test
mov
push
das
aam
and
sub
add
add
mov
out
mov
outsl
add
stos
mov
fstl
lods
push
mov
int
pop
data16
mov
les
je
aas
add
mov
add
push
loop
mov
pop
jge
lret
jp
test
inc
push
jo
or
sub
out
cs
inc
scas
pop
pop
add
std
push
fldenv
pop
sahf
or
imul
aad
mov
jecxz
mov
jo
jecxz
pushf
push
scas
jl
pop
inc
mov
jns
push
mov
cltd
jg
stos
inc
out
mov
iret
mov
aad
push
loope
fs
lret
enter
xchg
cmp
pop
jge
lock
leave
or
iret
xchg
xchg
and
insl
dec
fbld
mov
in
aas
movsb
xchg
test
jne
test
add
cli
das
mov
and
dec
sbb
scas
enter
ret
js
sbb
cmp
sahf
in
add
fs
out
mov
mov
test
push
hlt
lock
into
add
dec
mov
clc
aas
mov
mov
or
in
ja
lea
xchg
movl
clc
mov
push
sti
pop
pop
push
je
sbb
pop
cwtl
xchg
lea
adc
and
mov
pop
in
cmp
outsl
and
cs
clc
adc
push
push
jmp
ja
es
sbb
out
cs
sub
mov
ficomps
inc
sbbl
mov
sbb
pop
mov
dec
cld
ss
aas
cmp
xchg
loope
pop
pushf
add
pop
imul
push
dec
mov
enter
lret
fnsave
jnp
fisubrs
mov
dec
scas
or
pop
bound
mov
or
ja
dec
or
cltd
sahf
scas
stos
movsb
xchg
cmp
in
fildl
test
jb
add
xor
sub
sbbl
aam
sbb
add
jmp
insb
and
sbb
push
das
ss
or
pop
addr16
into
into
jg
out
icebp
push
pushf
idivb
sar
in
push
xchg
loop
dec
arpl
or
pmulhuw
push
adc
dec
fpatan
inc
xchg
mov
xor
xchg
insl
jnp
push
into
xor
jmp
fisttps
jg
inc
cmp
data16
inc
push
inc
cltd
push
decb
rcrl
push
movb
cmp
xor
shll
dec
sbb
adc
or
or
ds
std
sub
sub
mov
pop
enter
add
ret
mov
adc
mov
cltd
fiadds
and
sbb
fsubr
lahf
sbb
inc
cli
jae
inc
ds
arpl
lahf
mov
xor
cmpb
call
sub
ljmp
leave
lcall
push
dec
pop
stos
movsb
mov
mov
in
mov
int
insl
cld
inc
lods
cmp
mov
xchg
dec
shlb
push
and
fimuls
dec
and
sbbl
or
mov
mov
add
movsb
pop
gs
add
and
sbb
pop
add
dec
or
sbb
insb
stos
loopne
jmp
xor
mov
icebp
lret
hlt
push
jb
insl
jo
mov
enter
setp
fwait
xor
jp
shl
js
cwtl
push
add
imul
xor
pop
insb
cmp
in
imul
add
mov
dec
insl
lea
xchg
mov
aam
xor
xchg
jnp
jp
dec
add
pop
add
or
insl
scas
cltd
std
mov
repz
movsb
mov
orb
call
pop
or
mov
sbbl
mov
inc
inc
jnp
push
loop
pop
sarl
mov
fwait
cltd
add
js
jg
push
ret
cmpsb
mov
out
add
cmpsb
pop
or
cld
test
out
sbb
jecxz
test
pusha
mov
push
cltd
imul
mov
imul
stos
mov
out
hlt
inc
cmp
lea
add
insb
inc
jg
stos
test
loop
insb
fs
imul
xchg
sub
inc
mov
xor
cmp
sbb
movsl
sub
xchg
lods
movsb
gs
fs
scas
cmp
movsb
add
enter
dec
sub
lods
fs
test
mov
movsb
cmp
rcll
incl
jne
mov
je
mov
pop
ds
jge
hlt
mov
jmp
adc
repz
sub
outsl
jb
sub
mov
cmp
jnp
outsl
cli
stos
pop
addr16
push
imul
cmp
lret
jl
test
lods
psubusb
idivb
movsl
push
cmc
fs
ja
pushf
fnstsw
cs
mov
adc
sbb
fninit
ja
inc
fwait
out
pop
out
into
sbb
imul
pop
push
mov
fsts
pushf
lock
lds
jge
xchg
mov
aam
jnp
shl
into
outsl
sarl
jae
pop
cld
sbb
adc
lock
roll
push
and
decb
xor
sub
xchg
out
push
icebp
std
fcmovu
jbe
add
push
iret
fs
jns
jle
cmp
xchg
imul
pop
mov
addr16
fldl
push
cwtl
subl
mov
das
dec
mov
xchg
adc
push
pop
repz
and
xchg
xchg
push
imul
mov
scas
imul
lcall
ljmp
jl
sbb
out
jo
add
cs
negb
cltd
sub
shrb
pop
dec
jmp
dec
aas
xchg
fists
push
inc
mov
jp
movsb
into
push
lret
mov
imul
inc
lret
push
sub
xchg
push
movsb
call
jl
jb
mov
in
dec
jns
fstpl
mov
mov
adc
ljmp
jae
xlat
push
pop
fs
ret
enter
mov
rcrb
hlt
stos
ret
lahf
and
add
cwtl
addl
mov
stos
fiaddl
cmpsb
mov
xor
ret
ljmp
mov
jne
movsb
and
mov
sub
stos
pop
jecxz
lods
test
inc
lds
movswl
xor
cmpsl
cmp
or
xor
outsl
push
les
sub
mov
jecxz
shr
push
lods
imul
insl
sbb
hlt
mov
cs
mov
jb
or
cld
and
out
cli
imul
mov
xchg
inc
ljmp
or
popf
aas
pmullw
ret
das
movsb
sub
mov
push
pop
mov
mov
cmc
push
mov
sbb
push
add
icebp
and
cmp
add
leave
mov
push
loopne
shrb
push
pop
jle
xor
mov
or
jns
jl
jbe
cli
clc
mov
adc
movsl
xor
loope
pop
or
test
push
lret
mov
insb
inc
sbb
xchg
loopne
jae
fstps
das
jecxz
jbe
imul
push
cltd
fwait
jmp
xor
sub
push
jp
inc
enter
paddd
movsb
lods
pop
dec
dec
sbb
bound
fcompl
adc
pop
cld
fs
jnp
addr16
cltd
movl
dec
dec
lcall
test
sbb
jnp
or
imul
out
imul
ljmp
pop
aaa
xlat
and
or
in
xchg
jge
jle
out
jno
repz
mov
fisubl
or
add
loopne
pop
mov
movsb
cli
sub
mov
push
mov
jnp
stos
inc
pop
mov
pop
mov
fs
cwtl
push
jmp
xlat
push
fmull
imul
jmp
pop
xchg
int
inc
ja
xchg
stos
dec
inc
adcl
mov
ret
call
mov
pop
or
fwait
lret
shll
cwtl
hlt
mov
inc
pop
dec
mov
xchg
and
fs
xchg
addl
cmpb
pop
xchg
lea
pushl
int3
sbb
push
or
pop
inc
or
mov
sar
jae
insb
test
dec
jg
dec
aas
adc
fldt
arpl
jge
add
dec
and
call
dec
jb
push
out
fs
pop
mov
into
or
outsl
sbbb
or
jns
sub
scas
jbe
and
cltd
inc
or
jns
mov
xlat
pop
mov
sub
push
out
sbb
negb
inc
imul
jne
out
jne
das
faddl
xor
jg
inc
pop
ret
sbb
stos
or
sbb
movsb
cmc
shll
das
cli
dec
stos
in
and
lret
xchg
push
gs
jae
pop
or
add
push
cmp
mov
sub
ja
xchg
sbb
sbb
xchg
jmp
pop
iret
in
add
xchg
cmpsb
test
stc
inc
into
out
js
push
xorb
enter
add
sub
xlat
and
pop
mov
ljmp
ja
out
inc
fcomi
inc
dec
loope
push
mov
mov
dec
test
in
add
fs
xor
ret
fdivs
enter
mov
stos
inc
mov
lods
bound
adc
jns
xchg
mov
push
ficompl
roll
xor
out
cmpsb
sahf
pushf
mov
sbb
xorl
insb
aad
lahf
imul
dec
jae
in
mov
out
adcb
sub
pop
mov
add
hlt
xchg
fdivrp
push
xchg
pop
int3
sub
mov
lcall
mov
inc
es
mov
inc
mov
nop
imul
subb
mov
add
mov
pop
lock
mov
pop
add
push
push
fs
add
repz
gs
lea
lret
or
dec
sub
mov
out
cli
jns
inc
and
iret
mov
xchg
inc
movsb
ss
ljmp
xchg
ret
or
xchg
and
cs
sub
jno
add
inc
mov
push
mov
inc
dec
outsl
or
dec
repnz
test
pop
or
xchg
pop
cld
mov
jbe
inc
dec
clc
std
das
loop
inc
or
jmp
pop
jae
cmp
mov
fisubl
xor
pushf
cwtl
adc
popl
out
les
pop
insb
jp
adc
mov
fdivl
mov
jb
dec
cmp
fs
mov
mov
xchg
mov
out
or
or
test
fs
dec
xor
cmpsl
jg
into
out
faddl
in
xor
sub
jmp
or
inc
dec
or
xchg
xchg
outsb
out
cmp
lea
gs
dec
adc
pop
shll
test
or
sub
call
int
jnp
sub
stos
rcrb
jecxz
cli
hlt
gs
dec
shl
cmp
jne
mov
mov
mov
lods
int3
out
xor
loope
cmpsb
xchg
fsubrl
fadds
fs
repnz
jo
dec
xchg
add
mov
ret
adc
insl
inc
iret
orl
jbe
outsb
fidivl
xchg
fwait
cmpsl
push
subb
ret
cmp
out
xchg
and
jp
stc
push
push
fs
stos
addr16
mov
dec
pushf
fwait
movsb
ss
insl
push
jbe
jne
in
out
sub
outsb
es
clc
sub
stos
pop
lahf
inc
and
fcmovbe
add
xchg
push
ljmp
movsb
jbe
xchg
push
test
dec
rclb
mov
dec
jmp
imul
mov
mov
add
lods
fstpl
stc
mov
iret
std
fwait
inc
out
sbb
ljmp
popf
data16
pcmpeqd
inc
mov
stos
movsb
mov
aas
pop
sub
bnd
mov
mov
sub
ss
jmp
insb
pop
fwait
pop
sub
pop
cmp
sub
std
xor
inc
inc
add
sub
pop
icebp
jne
adc
cmp
mov
sbb
inc
out
cltd
popa
test
pop
sbb
and
add
into
add
int3
xchg
in
inc
push
mov
lret
xchg
inc
mov
jl
arpl
fisubrl
sbb
dec
data16
push
inc
mov
mov
fmull
dec
inc
pop
push
sarb
and
push
mov
jns
pop
pop
dec
inc
stos
jmp
div
and
adc
int3
sbb
xor
fsubrs
push
inc
pop
cmc
pop
xchg
mov
iret
aad
sub
mov
jl
lcall
dec
adc
imul
leave
aad
std
add
inc
andl
int3
inc
or
xchg
push
or
es
movsl
dec
push
rorl
push
ljmp
scas
cli
xchg
ret
aam
pushf
rolb
jg
pop
jno
loopne
add
mov
push
lds
push
lea
mov
fs
inc
and
xor
cwtl
sub
add
push
sub
inc
dec
in
add
inc
rcll
std
push
push
add
jle
scas
xor
push
out
into
pop
testl
rclb
mov
iret
push
mov
xor
dec
sub
mov
mov
sbb
adc
movsb
pop
pop
pop
adc
imul
push
jp
sbb
pop
inc
pop
xchg
repnz
hlt
push
jmp
icebp
pusha
lea
adc
or
cli
add
xchg
insb
into
jnp
insb
in
fs
mov
movsb
xchg
inc
mov
pop
mov
insb
movsb
bound
add
cs
dec
lcall
rolb
mov
jp
pop
sbb
cltd
dec
pushf
inc
fcompp
loop
ficoms
inc
jo
shrl
cmpsl
add
fldt
jmp
test
sbb
jae
out
je
fwait
aaa
insl
adc
and
jnp
lods
jno
adc
dec
jp
bt
sarl
jge
cmp
jle
mov
sbb
jp
pop
test
js
inc
push
and
ljmp
orb
mov
jp
push
cmp
inc
jecxz
outsl
push
pop
push
iret
fcomps
fldenv
and
mov
outsb
fs
ljmp
out
xchg
cmp
jl
inc
imul
movl
dec
pop
mov
add
pop
xlat
and
inc
sbbb
js
iret
popl
mov
fs
inc
and
call
enter
jl
cmp
or
pop
adc
pop
in
out
js
lcall
lods
jne
push
dec
mov
mov
lahf
das
repnz
push
out
lcall
iret
pop
mov
pop
into
hlt
pop
std
dec
jno
lea
add
or
fisubrl
cld
cld
sbb
jecxz
jbe
dec
push
out
inc
add
xchg
mov
sbb
or
rorb
add
nop
outsl
push
les
mov
or
testb
flds
arpl
pop
mov
icebp
mov
mov
xlat
movsb
push
add
sub
inc
jle
dec
insb
leave
ds
imul
lret
mov
xchg
loope
sub
mul
adc
or
add
loopne
ret
pop
mov
mov
inc
sub
roll
dec
push
mov
mov
mov
clc
nop
nop
into
in
repz
sbb
fs
hlt
add
lcall
push
xchg
dec
addb
scas
mov
jp
jp
jbe
cwtl
mov
nop
in
movsb
jnp
out
sbb
test
push
jmp
and
mov
dec
faddl
sbb
dec
inc
fwait
jecxz
mov
mov
jo
pusha
inc
inc
movsb
sub
cmp
cs
out
inc
cld
sub
jp
mov
sub
mov
xchg
movsb
aam
xor
out
lods
or
and
xchg
and
add
jmp
inc
pxor
call
hlt
sbb
jno
aam
and
push
sbb
jl
fs
movsb
stos
inc
push
sbbb
push
mov
sub
dec
sti
xchg
or
stc
out
out
inc
and
out
imul
push
sub
pop
xchg
or
xchg
xchg
addr16
sbb
jp
mov
jl
mov
into
shll
inc
jo
outsb
dec
mov
adc
add
mov
lret
fsubrs
outsl
fadds
outsb
leave
sbb
imul
cmpsl
push
clc
pop
or
and
movsb
ss
mov
ljmp
mov
jo
mov
fistl
inc
sbb
xchg
rorl
jmp
or
into
xchg
and
aad
pop
mov
cmpsl
ret
inc
ss
mov
out
ljmp
test
inc
mov
cmp
fcmovb
xor
mov
or
fs
xchg
inc
test
inc
push
sarb
and
fsubl
shlb
dec
ss
or
enter
test
sub
out
ss
mov
insb
mov
stos
mov
rclb
fsubr
mov
cmp
mov
hlt
cli
push
aas
movsw
pushf
inc
sub
sbb
push
pop
or
push
push
call
xor
or
pop
pop
xor
shll
pop
daa
push
stos
sbb
adc
ss
fwait
je
out
jg
stos
push
jo
subb
mov
xor
pusha
arpl
jle
mov
lret
sarb
add
sub
fstpl
data16
and
fs
notl
mov
in
add
mov
loopne
inc
lcall
xchg
jbe
fs
xchg
in
pop
inc
rorl
je
out
fcom
push
lods
ja
loope
adc
ss
or
jno
mov
mov
mov
add
push
insb
fcompl
icebp
je
les
outsb
movsb
leave
test
jge
sti
mov
icebp
jl
dec
and
cmp
arpl
pop
mov
outsb
inc
pop
sbb
stos
rclb
dec
fwait
adc
push
jecxz
xor
out
sub
mov
jl
imul
imul
in
inc
and
cld
dec
or
aas
lahf
movsl
ljmp
and
ret
call
adc
inc
adc
cmp
lret
jnp
jge
cmpsb
out
out
cmovae
pop
pop
stc
daa
mov
mov
es
fistpl
das
push
lcall
push
jb
rcr
fcoms
pop
call
and
mov
jle
cld
popl
xchg
sbb
iret
cmp
je
push
xchg
mov
xchg
fcoml
push
push
dec
jo
cmp
xor
push
addb
add
imul
cmc
aad
lret
sub
mov
clc
ret
in
xchg
faddl
dec
inc
stos
pop
jg
ljmp
jge
mov
lods
xlat
and
push
pop
cmc
cwtl
imul
sub
push
sub
xlat
inc
les
dec
jb
sub
outsl
ljmp
fisttps
fsubr
jp
incl
mov
ss
mov
push
js
out
or
add
dec
inc
shrb
ljmp
mov
out
shrb
lret
sbb
cld
jp
jae
test
dec
pop
sarl
jmp
pop
in
stos
ja
sub
pop
mov
or
cli
adc
and
fsubrs
iret
push
jno
inc
out
das
mov
out
inc
mov
cltd
adc
mov
cmp
int3
stos
jl
lret
cltd
or
add
call
and
js
push
inc
das
mov
in
std
jns
cmp
test
pop
rclb
fidivrl
inc
imul
ret
out
adc
in
lea
jb
xchg
cmp
lahf
scas
cli
ja
inc
lods
jnp
mov
in
or
adc
jp
psubusb
push
inc
lods
pop
adc
movsb
repz
inc
bound
dec
sarl
mov
mov
jns
pop
neg
outsb
add
fs
inc
dec
jp
cld
cmp
pusha
xchg
fidivrs
sbb
push
rcrl
lea
cs
call
loopne
dec
pop
adc
movsb
dec
cmp
jecxz
in
fs
mov
mov
inc
dec
js
mov
pop
ljmp
add
xchg
xor
cmc
ret
rcl
cwtl
lcall
pop
xchg
cmc
lods
or
lods
mov
lds
stc
push
push
jae
push
imul
repnz
repz
jle
inc
loop
outsb
cltd
data16
jo
inc
pop
inc
adc
test
adc
lods
stos
xchg
cmpsl
aad
add
test
jl
ret
jne
insl
js
xor
inc
lods
jge
loopne
xor
jle
ret
sbb
fs
jbe
call
mov
rcll
mov
loope
lret
and
add
dec
xchg
inc
into
lahf
sub
movsb
push
sti
fmull
mov
je
ds
sti
add
inc
pop
aas
cs
pop
fcoms
and
aaa
mulb
mov
xor
pop
hlt
fdivr
adc
incb
add
jno
push
jmp
pop
xchg
mov
rcll
movsb
addr16
add
push
mov
aam
xor
fdivrl
mov
push
push
push
inc
cmp
add
xor
mov
movsl
sub
leave
pop
mov
mov
rorl
sti
push
shll
mov
sbb
adc
xor
in
jno
push
mov
add
incl
stos
mov
xor
adc
inc
xor
sbb
icebp
fsubrs
inc
stos
cmp
and
movsb
adcb
dec
xchg
aad
movsl
add
lods
fs
fdivrs
mov
test
cmp
mov
dec
xchg
inc
push
ds
sahf
fldl
int
pop
sub
or
pop
cwtl
std
or
daa
xor
dec
and
inc
into
cld
sub
push
mov
or
daa
fs
inc
daa
ss
jmp
sbb
add
ficoms
and
pop
xchg
insl
addb
imul
xor
sbbb
sbb
inc
es
ret
lds
lock
jbe
dec
lods
movsb
test
lock
and
mov
sbb
xor
in
outsb
out
push
std
fdivs
loope
mov
iret
xchg
imul
divb
add
outsb
cli
jle
or
sbb
adc
xchg
inc
or
es
aas
cs
mov
inc
cmp
aad
ret
push
pop
sbb
lahf
mov
xor
jne
out
add
dec
clc
pop
mov
inc
jae
or
es
fnstenv
push
mov
hlt
aaa
mov
sbb
dec
xor
shrl
mov
inc
fcmovnb
lods
fadds
aaa
sahf
dec
movsb
jo
pop
jmp
mov
testb
dec
xor
mov
sbb
jmp
addr16
lret
into
xlat
mov
test
addl
daa
cmp
je
movsb
ss
ljmp
sbb
lret
sbb
jl
inc
cmc
xor
push
xchg
push
rorb
xor
hlt
mov
sub
leave
mov
hlt
movsb
imul
mov
fldcw
jb
or
test
push
lahf
test
jecxz
iret
and
movsb
jmp
loopne
out
movsb
call
inc
fdivrs
insl
push
mov
cmc
sbb
into
daa
dec
add
shrl
stc
and
int
jbe
mov
push
pop
loop
pop
negb
add
inc
xchg
jnp
xor
fxch
sub
xchg
inc
cltd
sub
xor
in
add
push
lea
aas
dec
out
adc
stos
lahf
add
cmp
add
test
imul
push
inc
shll
jnp
imul
xchg
subl
cmp
cli
pop
fs
push
xchg
hlt
sahf
imul
sti
push
xlat
xchg
orb
or
lcall
add
inc
jmp
or
jl
push
lock
xor
loope
out
sub
cmpsb
sarl
test
popa
jbe
push
cld
fs
test
jmp
inc
hlt
je
div
mov
popa
cmp
jmp
imul
jne
sub
cld
push
dec
mov
aad
push
pop
out
std
xor
and
jl
movsb
data16
pop
sub
cmp
stos
test
ret
push
pop
aaa
and
push
cld
or
dec
dec
jge
inc
xchg
adc
jae
push
pushf
mov
sbb
sahf
or
jg
out
xor
push
fimuls
nop
push
or
fwait
xchg
lds
dec
xchg
std
dec
repnz
mov
clc
pop
sbb
xchg
das
xchg
jl
imul
mov
adc
fldl2t
xlat
push
imul
scas
xchg
and
in
adc
and
out
mov
lds
dec
dec
push
push
movsb
mov
lods
mov
shl
jb
cmp
dec
lods
sub
push
xor
lods
in
pop
xchg
out
inc
adc
xor
je
mov
fs
jo
and
mov
push
sbb
xor
daa
ja
out
lret
lock
mov
or
fdivrp
push
inc
jl
aas
pusha
and
movsb
add
jo
push
aas
pop
popa
push
dec
adc
mov
imul
into
insl
mov
dec
imul
ss
cmp
push
jp
ror
ss
out
mov
mov
sbb
push
mov
aas
cs
xchg
mov
stos
into
test
cwtl
lods
push
insl
mov
jp
jb
movsb
adc
mov
lret
in
mov
int
mov
xchg
outsl
imul
push
ss
mov
ret
xor
xchg
cmpsl
outsl
loope
mov
add
dec
icebp
insl
repz
mov
call
fstl
inc
aaa
dec
out
fistps
and
ss
pusha
sahf
pop
je
loop
je
imul
sbb
insb
movsb
adc
inc
stos
std
xor
push
jbe
sbb
insl
and
jmp
stc
pop
inc
fxch
mov
pop
sbb
mov
pop
sub
stos
ljmp
lahf
inc
mov
lcall
das
shrb
std
pop
push
inc
fs
cmp
add
push
out
ljmp
stos
mov
cmp
xchg
psrld
sbb
loopne
addb
dec
call
fadds
lods
out
ja
fstpt
fwait
shrd
pushf
pop
cs
mov
mov
sbb
ret
cs
xchg
cmp
jns
arpl
rcr
aad
imul
shlb
sbb
and
mov
fwait
icebp
push
imul
lret
fscale
sub
pusha
fs
adc
pop
inc
fucomp
loop
dec
stc
ss
jp
cwtl
add
inc
daa
xor
inc
mov
adc
into
loope
rcrl
xor
insl
jne
jmp
jns
shll
xor
push
rcll
jle
inc
imul
pop
fnstenvs
jb
cmpsl
cmp
fnsave
shrb
pop
mov
pop
push
cmp
cmpb
aam
adc
mov
int3
dec
imul
inc
ljmp
cmpsl
scas
and
mov
jle
pushf
lds
jmp
imul
call
enter
push
fnstsw
dec
aas
pushl
repz
daa
stos
or
incb
cmp
cs
dec
and
or
add
mov
inc
into
test
inc
inc
and
movsb
adc
aas
leave
cltd
ret
insl
add
push
cld
dec
xlat
cwtl
jl
outsb
sub
cs
push
mov
xchg
mov
je
insb
adcb
in
sbb
jecxz
ds
or
xchg
std
or
fidivrl
cmp
jp
insl
popl
xlat
pop
aaa
mov
test
sbb
repz
mov
inc
xor
outsb
inc
movsb
sub
imul
sbb
out
cmp
js
jp
sti
add
dec
lret
adc
inc
iret
inc
roll
dec
xchg
and
cmp
fsubl
inc
xor
movsb
dec
jmp
repz
stc
idivl
aaa
das
das
dec
insl
push
inc
pop
movsb
mov
push
pop
sbb
fsubrl
jg
test
fs
imul
xchg
movsb
enter
aas
lret
and
adc
mov
or
sti
sarl
mov
ret
and
shrl
pop
add
lea
pop
shrb
test
jle
sbb
or
sets
loope
inc
je
fcomip
arpl
ljmp
loopne
imul
xor
fs
dec
ja
iret
fwait
lea
insl
stos
dec
or
mov
out
jbe
and
orl
aad
stos
jmp
test
jo
and
dec
cltd
mov
insl
push
jne
mov
mov
add
pop
movsb
mov
mov
push
into
movsb
jmp
mov
xor
cltd
popa
pop
cli
mov
pop
or
xor
fstps
pop
and
jl
bnd
loope
dec
aas
daa
or
pop
xchg
clc
sbb
mov
pop
sub
pop
fsts
sub
or
mov
push
rcr
cmpsb
mov
lods
mov
aas
in
out
jb
iret
lret
push
lea
push
adc
jbe
dec
ljmp
andl
cmp
or
lret
or
aam
data16
cltd
inc
nop
sbb
fcom
dec
jmp
arpl
in
ljmp
xchg
hlt
movsb
cld
add
mov
mov
sbb
push
fs
es
xlat
cmpsb
mov
inc
inc
push
test
pop
cmp
xor
sbb
in
push
jbe
and
lcall
sub
jne
jnp
ret
fists
mov
mov
int
add
rcrl
fs
mov
jne
sahf
push
loopne
mov
lds
pop
cltd
test
dec
mov
pop
ds
fistpll
call
or
xor
jne
mov
sbbl
in
inc
and
insb
sub
repz
inc
insl
imul
int3
stos
dec
inc
mov
push
mov
push
xchg
adc
loope
or
in
out
push
mov
mov
daa
or
inc
je
pop
mov
xor
add
out
pushf
scas
jno
sub
mov
and
mov
int3
call
mov
ljmp
loope
or
fdivs
lods
cmp
inc
dec
pop
xor
mov
mov
ror
push
pop
ror
js
insl
cmp
scas
sub
or
movsb
sbb
mov
jno
pop
push
in
and
je
loopne
cmpsl
cmp
jecxz
loopne
jbe
rcrl
jne
push
push
xor
pop
xor
movsb
rcr
jle
dec
jle
sub
xchg
aad
mov
loopne
inc
shlb
imul
ds
bound
out
sub
lods
lret
and
sbb
imul
mov
mov
push
xor
or
mov
lock
loopne
mov
js
cmp
dec
adc
xor
movsl
clc
imul
das
adc
fmuls
insl
sbb
and
nop
loopne
pushf
cmp
add
jle
mov
fsubs
inc
and
mov
fwait
rolb
dec
inc
pop
ret
mov
outsb
dec
add
incb
adc
mov
inc
cmp
mov
jp
pushf
cmp
inc
in
xorl
pusha
dec
testl
cld
jl
in
jo
pop
inc
xor
fs
insl
shrl
hlt
ja
jle
push
ljmp
imul
cmp
fwait
test
repz
mov
iret
mov
mov
pop
or
dec
lea
rorb
xlat
sub
jae
push
push
loope
xor
mov
loop
or
movsb
mov
and
pushf
jp
mov
adc
std
int
rcrl
and
lcall
inc
lcall
push
scas
cmp
inc
ja
and
lds
xor
mov
cmp
inc
push
int
jle
movsb
out
jge
ss
inc
cs
in
cmp
pop
cmp
add
addr16
mov
mov
and
dec
xlat
pop
leave
cmp
outsb
fcoms
movsb
addr16
mulb
mov
xchg
pop
cmc
jnp
insb
push
sub
inc
icebp
into
push
cwtl
inc
add
push
xlat
adc
inc
lods
and
pop
mov
outsl
scas
mov
jg
inc
sbb
fs
cmc
lret
sub
inc
inc
leave
nop
xchg
insl
xchg
fstl
sti
inc
lods
adc
popa
dec
push
cmp
in
inc
sbb
stos
jnp
pop
in
fcompl
pop
cld
push
xorb
ljmp
jo
sbb
fldt
imul
xchg
rclb
push
and
xor
jp
dec
xchg
lcall
in
ds
cmp
dec
mov
out
mov
jo
imul
into
das
mov
lock
stos
jo
pop
mov
inc
adc
jb
movsb
jb
dec
xchg
addr16
ret
push
out
sbb
dec
pushf
lret
mov
adc
xchg
mov
push
sub
inc
dec
mov
out
dec
fiadds
movsl
mov
or
cltd
fs
in
test
fcomi
es
inc
sbb
dec
je
mov
jg
mov
push
idivl
movsl
dec
inc
lods
repz
xor
adc
pushf
fildll
pushf
add
or
pushf
insl
sub
out
mov
pusha
gs
ds
repz
add
pushf
dec
lds
adc
movsb
subl
int
out
or
sbb
and
ljmp
daa
in
push
subb
inc
fmulp
call
jb
std
inc
fs
add
mov
insl
inc
pop
into
inc
pop
jecxz
inc
pop
out
push
test
jmp
inc
addr16
hlt
jle
pop
add
push
mov
xor
cmc
imul
pcmpgtb
mov
or
mov
cmc
ficoms
enter
repz
mov
bound
rclb
lods
fwait
jle
addr16
cmpsl
adc
gs
stos
jmp
mov
pop
sbb
jl
call
adc
and
daa
mov
arpl
xchg
sahf
mov
push
pop
andb
jge
scas
pop
dec
das
or
fcoms
xchg
movsb
sbb
jmp
fs
cmpsb
cmc
ljmp
push
push
xchg
pop
imul
inc
inc
mov
test
cltd
xor
cmp
fwait
call
jp
inc
and
in
mov
shlb
push
xchg
mov
mov
popf
int
fucomp
lods
mov
lahf
incl
mov
jnp
rcrb
xchg
rep
mov
or
jo
fstps
imul
adc
jns
pop
xchg
and
push
sub
idivl
pop
jecxz
dec
aam
popf
adc
mov
test
imul
jmp
sarl
ss
imul
inc
pop
cli
das
pop
shrl
cltd
test
mov
in
xor
fs
push
in
xor
inc
fs
push
shlb
jmp
dec
les
popa
aaa
mov
dec
xchg
add
mov
cmp
xchg
adc
mov
sub
aas
out
stos
fcoms
idiv
push
paddw
xor
clc
lret
addr16
cli
je
repz
lods
sbb
adc
jg
adc
lock
mov
jl
movsb
cmp
stos
xchg
jb
and
out
add
adc
sbb
mov
stos
mov
push
mov
js
ljmp
insb
sub
sub
and
pop
mov
subl
andb
lods
lods
adc
popa
subl
mov
dec
sarb
fldl
cli
mov
pop
es
stc
pop
xchg
dec
xor
fdivs
push
aas
rol
out
jg
mov
aam
cmp
adc
xchg
in
fisubl
loopne
push
mov
dec
rorl
repz
ds
mov
movsb
js
xchg
in
jo
add
int
cmp
push
fcomps
sub
in
jnp
add
out
and
mov
push
xchg
stos
dec
out
mov
dec
leave
mov
ss
dec
jnp
aaa
fs
lods
dec
js
or
ret
mov
movsb
shl
cmc
sub
sub
pusha
pushf
out
jmp
lea
pop
xor
xchg
mov
push
ds
test
mov
and
and
inc
leave
cmp
nop
add
jmp
fcomps
movsb
sub
stos
in
outsl
jb
stos
adc
into
and
sub
fiaddl
inc
mov
adc
scas
addl
lahf
mov
xor
lds
xor
push
mov
sbb
decl
mov
aas
mov
mov
push
mov
pop
lahf
gs
sbb
xchg
test
repz
fdivrs
push
add
push
shll
ljmp
xchg
mov
in
or
ficoms
xchg
inc
cmp
sbb
das
inc
sub
cmp
jp
xor
cmp
pushf
cli
insb
xor
sbb
or
cs
lock
and
inc
stos
imul
or
mov
sub
in
repz
movsb
fsubs
mov
fs
mov
sbb
bswap
push
aaa
subl
iret
pop
push
dec
dec
aas
call
ret
dec
or
sub
inc
pop
movsb
aaa
mov
push
aad
push
cmpsl
clc
sti
mov
dec
add
iret
cmp
aas
jns
dec
cwtl
jbe
insl
add
xchg
cltd
divb
dec
adc
xor
mov
sub
xchg
adc
lahf
stos
lahf
scas
and
inc
lds
sub
and
out
xchg
pop
push
push
fbstp
fisubs
cltd
bound
fcoml
insl
add
js
bound
lock
fdivrs
adcb
or
sbb
fldenv
pusha
das
mov
mov
adc
jo
fs
lock
in
subl
add
into
imul
bnd
ss
xchg
enter
mov
push
fldl2e
out
mov
inc
pop
lret
add
or
cli
shrl
mov
add
jnp
push
xchg
push
push
je
xor
push
jnp
mov
xor
push
mov
lods
lea
cmpsl
add
mov
mov
inc
push
test
repz
popa
sbb
adc
inc
sbb
xor
sub
stc
insl
repnz
movsl
imul
dec
push
jae
sahf
das
sahf
lods
stos
fs
enter
daa
xchg
mov
mov
xchg
cmp
jp
mov
push
add
push
dec
jnp
mov
inc
pop
aas
sbb
fs
jb
mov
dec
pop
outsb
sahf
lret
das
lods
popl
dec
stos
cbtw
add
test
xchg
add
cmp
inc
in
ret
mov
jb
jne
ds
test
ds
repnz
add
sub
dec
push
jb
xchg
pop
fiadds
mov
inc
fstpl
sti
mov
dec
jne
addr16
inc
aam
lret
notrack
mov
bound
xchg
pop
dec
cwtl
dec
inc
inc
mov
inc
orb
pop
mov
jl
rdmsr
inc
mov
mov
mov
add
cld
mov
and
jbe
sub
push
test
jb
add
dec
outsb
push
add
fwait
inc
aad
fcmovnb
push
outsl
pop
lret
cmp
sub
test
iret
xchg
imul
lcall
adc
pop
xchg
dec
sub
or
and
popa
mov
stos
test
sahf
gs
arpl
arpl
xchg
mov
ret
cmp
sub
mov
pop
mov
inc
dec
add
lea
pop
mov
dec
mov
pop
pop
in
mov
xor
sbb
leave
iret
jo
lcall
mov
imul
pop
add
mov
or
mov
jne
cmp
inc
lret
push
cmc
inc
negl
gs
and
test
ljmp
inc
aam
cmp
sbb
in
or
or
scas
fnstenv
testl
scas
icebp
in
movsl
out
adc
pop
inc
rcl
cld
jmp
xchg
shrl
xor
in
inc
dec
arpl
push
movsb
out
xor
jle
icebp
out
test
loopne
xchg
outsl
fs
cmp
push
shll
movsb
xlat
psubusb
out
fs
stc
pop
loope
jb
cld
pop
or
xchg
mov
in
imul
jecxz
jecxz
add
push
jge
aaa
icebp
mov
cwtl
mov
push
fsubs
lea
xor
sbb
in
pop
shll
cmp
fcomi
outsl
mov
xchg
or
inc
fiaddl
inc
mov
mov
imul
aad
sbb
mov
insl
mov
jae
dec
inc
iret
bound
or
mov
popf
jp
xchg
outsb
js
xchg
jg
lds
pop
subb
push
imul
mov
cmp
mov
movsb
repz
shll
or
test
hlt
mov
pop
clc
into
jae
lods
pop
jp
jp
lahf
push
shll
outsb
inc
mov
cmpsl
mov
aas
popf
mov
xchg
fsubr
mov
mov
out
fstpl
fmuls
xor
sub
test
xchg
pop
loope
push
ret
cmpsb
adc
add
insb
std
add
bound
std
loopne
test
xor
add
jl
jb
or
movsb
mov
lcall
sbb
out
in
mov
and
jns
in
ret
loop
cmpsl
xor
out
dec
sbb
xor
lea
xor
inc
sub
xchg
loopne
fcompl
dec
push
loope
movsb
aam
fwait
iret
jae
imul
mov
pop
fsts
jp
xor
fisttps
push
inc
repnz
jno
lods
repz
pop
push
pop
js,pn
dec
call
pop
mov
mov
movsb
xor
lret
inc
repnz
xchg
fwait
lds
repnz
inc
mov
loop
xchg
jae
cmp
hlt
or
daa
push
jae
sub
or
lods
fs
decl
andb
fs
mov
leave
ja
push
mov
cltd
repz
dec
xchg
mov
insl
dec
fs
iret
inc
lods
out
cmpsl
cmp
mov
or
test
ds
mov
mov
scas
shlb
jmp
out
xchg
loopne
js
xor
push
call
xchg
xchg
sarl
jb
lods
shr
jecxz
mov
pop
mov
inc
imul
rcl
and
cmp
push
xor
imul
or
jle
lret
sub
jno
add
loopne
lds
ljmp
mov
adc
dec
movsl
dec
dec
pop
das
sub
adc
cmp
xor
jmp
jae
jle
or
mov
inc
jp
jae
mov
loop
outsb
out
stos
dec
shrl
fs
ficomps
push
ljmp
pop
sub
lods
imul
inc
int3
inc
mov
icebp
ja
pusha
sub
xor
inc
push
mov
jle
jo
out
cmpsl
mov
jb
sarb
jge
loope
ss
xor
clc
scas
cmp
movsb
fwait
in
addps
enter
jno
mov
jmp
pusha
ret
movsl
cmp
mov
jno
imul
nop
mov
scas
add
ret
jb
sub
and
imul
ja
fs
gs
cmpsl
pop
cmp
jp
xor
and
into
mov
inc
fcompl
mov
mulb
fs
adc
xor
or
ss
call
in
pop
cmc
int
arpl
std
je
mov
jbe
subb
cmc
movsb
insb
xor
incl
fmulp
mov
ds
ror
xchg
arpl
jb
or
test
add
lock
mov
js
movsl
faddp
out
pop
and
dec
cld
fsubl
pop
dec
mov
xor
pop
test
dec
sub
or
sub
insl
sbb
movsb
lea
or
repnz
jnp
ret
loopne
inc
inc
pop
pmulhuw
adc
inc
inc
repnz
mov
fs
sub
pop
out
test
fwait
mov
mov
mov
rolb
test
aam
loopne
repnz
dec
subb
mov
jno
addr16
add
je
scas
and
adc
mov
jmp
mov
je
mov
add
fs
cli
in
jnp
les
loope
inc
lea
add
data16
push
inc
add
jnp
jmp
loope
mov
add
cmpsb
dec
mov
cmp
lods
inc
jb
jg
das
ret
popf
pop
jne
or
out
and
aas
jg
mov
pop
add
out
adc
mov
ja
lcall
movsb
fisttps
mov
xchg
jb
mov
stc
das
lcall
fmul
dec
pusha
dec
mov
imul
fidivl
mov
dec
das
ficompl
js
cmp
mov
cld
pop
lods
mov
jae
in
jmp
cmc
push
cmp
mov
push
imul
push
cmove
outsl
add
out
inc
push
arpl
fldcw
jmp
fs
pop
dec
xchg
dec
arpl
lahf
sbb
sbb
mov
pushf
int3
push
lcall
lods
mov
xor
iret
jno
or
in
cmc
jecxz
neg
pop
je
or
jecxz
lock
hlt
lds
pop
lahf
movsb
mov
lcall
jge
sub
inc
lods
out
pop
cs
sbb
ljmp
cmpsl
xchg
ljmp
iret
imul
arpl
push
roll
leave
ror
ss
hlt
mov
jnp
scas
movsb
adc
dec
imul
imul
aam
fdivs
bound
out
inc
nop
imul
out
pop
or
sbb
ljmp
mov
mov
jmp
aaa
adc
jbe
int3
hlt
int
inc
jmp
dec
outsl
dec
jne
xor
enter
cmp
lock
sub
movsb
cmp
push
daa
adc
in
icebp
push
dec
imul
cmpsl
xchg
jmp
cli
movsb
lret
inc
mov
and
add
jbe
movsb
cltd
aas
sbb
mov
test
or
or
div
fld1
testl
imul
sbbb
stc
mov
mov
bound
cmc
jmp
lahf
inc
jmp
xorl
mov
add
mov
scas
mov
sbb
jb
jb
inc
sbb
mov
and
cmpsb
pop
sahf
out
mov
dec
xchg
dec
add
frstor
mov
push
push
inc
movsb
cmc
pop
jb
or
rcr
inc
lea
pop
cmp
push
imul
and
dec
dec
dec
mov
push
fldcw
loop
xor
sub
fwait
stos
repnz
scas
fs
cmp
lods
dec
stos
dec
push
add
dec
lret
in
leave
cmc
add
inc
jns
sahf
add
lahf
xchg
mov
icebp
mov
and
addr16
inc
rorb
xchg
mov
shll
jbe
fbstp
dec
ss
mov
cs
iret
pop
adc
dec
cli
les
ret
sbb
test
sbb
in
jl
out
cld
out
fisubl
add
test
addr16
mov
les
add
xor
cmp
mov
insb
mov
fdiv
data16
pop
shl
lods
mov
cwtl
cld
insl
or
inc
cmpsl
call
icebp
mov
out
and
inc
popa
sub
push
add
addr16
xor
dec
ficoml
or
mov
add
add
push
mov
outsb
push
jne
inc
adc
aam
data16
ret
test
pop
arpl
popf
inc
lds
imul
xchg
jle
xchg
add
test
push
out
lcall
add
testl
xor
imul
in
outsl
push
mov
pop
arpl
loopne
sbb
lret
pop
adc
lods
ja
mov
aas
popa
mov
ja
sbb
xchg
dec
xchg
sbb
sbb
inc
sub
and
jp
inc
lock
inc
jg
xlat
outsl
loope
jmp
xchg
aas
pcmpgtw
xor
rcll
popa
adc
ja
cli
jno
pop
sbb
call
test
and
xchg
jb
xor
and
fisttpl
lret
jmp
push
xor
jg
enter
shrl
jo
inc
fnsave
loop
mov
bound
jge
lcall
out
daa
mov
xor
dec
stos
in
mov
es
mov
push
add
cwtl
xor
lds
icebp
leave
inc
pop
out
push
sub
lcall
and
adc
imul
sbb
mov
cli
mov
xor
fbstp
jns
add
adc
shlb
sub
sbb
or
dec
aam
add
cli
daa
inc
out
dec
mov
bound
add
dec
adc
sub
mov
in
add
xorl
es
out
jbe
cmp
in
test
ljmp
adc
pop
jbe
push
movsb
cmp
in
mov
jbe
lea
lds
scas
mov
stc
add
les
inc
in
sbb
mov
sbb
sub
push
inc
jbe
or
cs
jne
and
movsb
jbe
mov
jg
pop
mov
stos
mov
test
ret
sbb
jmp
jns
push
cwtl
and
aad
mov
mov
jnp
sbb
daa
ss
pop
loope
insb
jl
mov
push
cs
xchg
pop
imul
lods
test
cmp
pushf
cwtl
and
dec
hlt
into
loop
mov
mov
jecxz
xchg
daa
adc
xchg
mov
cli
mov
inc
adc
out
into
xor
or
jno
in
sub
and
mov
mov
jbe
cmp
push
cltd
loop
int3
shlb
pop
fsubrs
fists
mov
mov
push
in
inc
ds
and
cmp
pop
std
xchg
push
iret
dec
lahf
mov
sbb
dec
jp
inc
xlat
int3
inc
int
cmp
adc
iret
adc
fnstsw
or
mov
cmpb
fs
push
xchg
leave
sub
rolb
fwait
xchg
mov
test
cmp
outsl
aas
jle
mov
mov
fdivrp
ficoml
inc
mov
aad
movsb
loope
pushf
add
shrd
loope
xor
xor
push
mov
lods
das
stos
sub
push
repz
xchg
cld
xor
fs
push
xchg
out
fadds
mov
lret
in
jecxz
sub
jb
call
dec
xchg
rcrb
fcmovb
and
cld
xchg
xchg
push
push
pop
sub
sarl
les
fs
fs
mov
in
neg
adc
pop
fcoml
mov
jg
lock
movsb
sub
movsl
in
jae
xchg
xor
mov
adc
icebp
outsl
inc
dec
jle
lret
addb
faddp
ss
sarb
sub
mov
jg
pusha
movsb
je
push
and
popa
aas
test
xor
repnz
xchg
jbe
test
lcall
movsb
stc
xor
sub
or
nop
iret
mov
sbb
repnz
or
add
lea
das
sbb
aam
inc
call
ss
xchg
jecxz
in
xor
pop
orl
movsb
inc
xor
fldl
jecxz
into
jno
shrb
mov
cmp
lret
fsubl
sbb
or
outsb
add
aaa
repnz
lcall
out
sub
mov
pop
fwait
loopne
mov
in
push
stos
mov
sbb
popf
movsb
out
push
imul
aas
inc
lret
mov
or
xor
imul
push
mov
insl
shl
dec
xor
hlt
jmp
inc
rolb
jmp
dec
cs
or
insl
add
dec
push
pop
pop
mov
add
jle
cli
inc
sub
add
xchg
mov
nop
adc
mov
roll
mov
xor
pop
fs
mov
out
shlb
jg
stos
xor
rolb
inc
orl
inc
adcl
and
push
ret
cltd
xor
and
jl
and
xor
clc
sub
mulb
ljmp
sbb
sbb
dec
es
pop
cli
pushf
mov
fisubrl
ss
push
mov
sub
jp
in
cmp
data16
mov
aas
rcl
leave
ss
stos
or
mov
imul
inc
sbb
cwtl
sub
mov
jg
inc
xchg
and
loope
cmp
and
jle
and
dec
dec
push
rsqrtps
addb
jp
jns
fucomip
cmpl
dec
sub
jnp
cld
insb
stos
xchg
jnp
sbb
inc
xor
cmp
out
xor
fsubl
cltd
lds
jb
aad
xor
xor
rcr
dec
mov
out
pusha
xchg
mov
das
lcall
out
add
clc
jo
and
jbe
inc
es
mov
sbb
sbb
mov
jp
out
movsl
pushf
mov
bound
sbb
xchg
es
jmp
cld
mov
mov
sbb
sbb
jge
xor
add
lods
movsb
mov
mov
lock
inc
test
add
and
insl
fs
cli
loopne
hlt
ss
es
ljmp
popf
lods
xchg
stos
movsb
mov
movsl
pop
cli
js
push
sarb
mov
mov
mov
push
inc
test
into
push
mov
lea
cmpl
popa
cmc
xchg
jne
jp
mov
xchg
cmpsb
enter
imul
dec
ljmp
aaa
test
loop
mov
roll
mov
inc
pop
mov
outsb
xchg
aas
movsb
test
out
insb
fs
mov
movsb
out
lahf
jp
mov
dec
fs
jg
stos
mulb
ret
fwait
mov
push
rorb
inc
or
add
sub
add
cld
rep
sub
sub
push
inc
dec
cmp
movsb
xor
add
push
mov
imul
xor
fbstp
movsb
popa
jb
pushf
rcrl
mov
js
jns
or
inc
popf
movsb
jecxz
lods
inc
xor
popl
mov
pop
fadds
outsb
cmp
das
inc
mov
jns
mov
test
push
push
mov
idivb
and
les
sbb
jecxz
test
mov
cmp
mov
jb
sbb
mov
insl
adcl
bound
fs
mov
ja
fsub
xchg
push
int3
lea
mov
mov
stc
jl
inc
xchg
out
inc
les
dec
movsl
outsb
das
sti
stos
ret
jecxz
insl
or
in
mov
aam
cmpsb
rcr
imul
sbbb
ret
in
sub
lret
add
sbb
lods
mov
ja
scas
cwtd
mov
cmp
in
pop
and
inc
shrb
clc
dec
fmuls
mov
mov
mov
or
mov
mov
or
mov
jle
xor
aam
lds
xchg
imul
shlb
cltd
movsl
sub
inc
aas
fdivs
ficoml
test
dec
lret
and
dec
rep
push
pop
aam
out
jns
ss
mov
leave
jp
inc
sub
out
pop
pop
insl
xchg
xor
imul
mov
clc
rolb
xchg
and
orl
push
es
xor
jmp
fmuls
and
sub
fsub
or
fisubs
cwtl
fnsave
jmp
and
shll
or
pop
mov
inc
mov
test
or
sahf
pop
je
sbb
jl
mov
arpl
in
dec
jns
daa
xchg
iret
fldt
jne
das
adc
dec
adc
pop
jp
mov
ljmp
jne
insb
push
imul
testb
mov
pop
mov
imul
imul
jae
jge
out
repnz
pop
pop
and
jle
cmp
ror
lods
dec
or
mul
add
pop
adc
mov
popa
cmpsl
jp
sub
inc
sub
mov
sbb
outsb
or
lcall
mov
adc
insb
cmpsb
popa
cmc
and
pop
sarb
adc
dec
in
mov
pop
cli
sub
mov
ds
mov
scas
sub
mov
inc
inc
fs
mov
imul
or
data16
inc
add
mov
dec
or
loopne
xor
inc
leave
pusha
repz
fs
mov
outsb
mov
pop
mov
jle
imul
mov
loopne
sbb
push
in
iret
push
aaa
sbb
mov
pop
xchg
xchg
xor
adc
jnp
cmp
pusha
mov
add
in
fs
fsubs
lea
xor
xchg
push
adc
xchg
lcall
iret
les
dec
stc
ja
inc
jbe
or
xchg
cmpsl
jge
adcl
rcll
pop
movsb
fs
inc
lock
jp
je
xor
add
cmp
xor
cmp
sti
rcrl
xchg
cltd
cmpsb
xchg
xchg
mov
mov
lahf
or
movsb
xor
lret
hlt
iret
lods
in
fs
test
call
sub
sbb
lcall
les
jbe
inc
out
ret
mov
out
ss
out
push
sbb
xor
xchg
jl
dec
fbld
stos
pop
inc
mov
hlt
js
pop
sub
xchg
pop
aam
mov
sub
mov
enter
pop
popa
or
addl
std
test
in
pop
test
int3
je
xor
mov
cmpb
lret
movsb
pusha
mov
cmp
jae
ss
inc
repz
cmova
add
sub
and
add
call
mov
adc
test
sub
add
mov
in
jb
sbb
inc
pop
mov
ss
fisubrl
xor
addr16
lock
sub
out
mov
xchg
aam
scas
jne
scas
lret
ds
cltd
iret
mov
ljmp
js
popa
loope
jmp
mov
fnstsw
imul
int3
jg
jnp
sahf
mov
dec
dec
adc
fs
ds
cmp
or
dec
outsl
dec
shl
pop
roll
add
sub
fisttpll
jp
pop
fistpl
adc
pop
push
dec
adc
ss
mov
xchg
sub
lahf
pop
mov
dec
dec
aaa
or
adc
jbe
adc
ja
jmp
cld
int
xor
and
mov
jl
xchg
dec
push
fiadds
in
jmp
and
mov
jp
es
loope
pushf
mov
lods
xchg
in
or
xchg
dec
push
pusha
inc
stos
xlat
pop
cmp
push
inc
outsl
test
jp
inc
int
adc
andl
jne
or
jg,pn
sbb
sahf
les
push
bound
outsl
in
cmp
in
inc
push
jb
jmp
sbb
xor
mov
in
jl
pushf
pushf
add
jno
andb
sbb
lds
mov
adc
in
shll
outsl
push
pushf
cmpsb
jp
or
xor
fwait
addr16
inc
dec
fldl
cmc
and
sub
mov
lret
cmp
lret
xchg
stos
sbb
sbb
psrlq
cmc
cmpsb
gs
pop
stos
shr
fcomps
mov
loope
lret
xchg
shrb
or
mov
nop
inc
cmp
jge
imul
clc
adc
jne
enter
imul
shr
push
inc
test
std
sti
ljmp
das
or
dec
or
xchg
inc
cmp
adc
sbb
in
adc
int
ror
add
popa
mov
shrb
xor
cmp
pop
xor
sbb
rcll
jae
adc
push
mov
lock
mov
hlt
xchg
rclb
sbb
test
jbe
insb
xor
stos
in
dec
lock
sarb
clc
xor
popf
leave
add
aaa
inc
or
mov
add
shlb
out
mov
or
push
mov
mov
jae
dec
or
jo
mov
out
insl
les
lcall
rcll
pop
imul
lcall
clc
jnp
arpl
ljmp
jnp
rcrb
stos
movsl
jb
fs
cmp
jmp
mov
mov
mov
push
rcrb
sbb
xchg
push
int3
jl
out
frstor
cltd
lcall
movsb
gs
shlb
mov
rcr
addr16
lds
pop
sarl
or
adcl
push
jle
inc
cmp
or
fildl
jle
push
and
adc
mov
mov
pushf
ljmp
lea
and
mov
cmp
lcall
dec
call
push
aad
fldcw
std
adc
jp
jnp
in
sbb
and
push
push
xor
add
push
adc
loopne
jo
push
insl
adcl
inc
pop
fcoml
imul
dec
test
out
stos
shlb
lock
in
push
pushf
inc
add
rep
jo
xchg
in
mov
jae
push
outsl
es
mov
enter
sbb
cmp
mov
adc
or
mov
pop
enter
hlt
shll
mov
das
cmp
cmc
pop
add
ret
push
cs
into
into
repz
in
xchg
std
lret
jnp
cmp
jge
jle
push
mov
push
sub
arpl
sub
and
and
cmp
call
adc
movsb
aad
fdivrs
out
stc
pushf
add
cld
jecxz
loope
jmp
lahf
dec
leave
dec
cltd
mov
addb
cmc
pop
xor
pop
test
inc
out
lret
repz
xchg
jno,pn
sahf
mov
bound
lods
fisubrl
stos
out
cmp
dec
in
lret
into
ljmp
pusha
push
jb
aam
xchg
dec
aaa
jne
fs
shl
jg
decl
mov
pop
xchg
popa
in
push
and
jbe
movsb
add
lret
add
jae
ds
iret
mov
jge
push
inc
insl
movsb
jne
shr
dec
rcrl
jnp
sub
xchg
push
inc
dec
pop
ror
and
imul
ljmp
mov
fnstsw
sub
xor
fdivrs
flds
adc
cmp
imul
movsb
cld
lahf
les
rorb
jl
mov
rorl
fs
pusha
adc
fsts
insl
fcompl
mov
loopne
pop
mov
and
fbstp
enter
cmp
sbb
movsb
and
push
lret
ret
and
xlat
dec
inc
xor
inc
icebp
lock
mov
dec
cmovp
aam
and
mul
add
adc
ficomps
xor
ret
xchg
shrb
mov
out
jbe
jg
mov
pop
and
dec
and
lock
lahf
mov
cmp
push
cmp
or
jge
inc
and
lods
xorl
or
sahf
pop
adc
stos
add
insl
scas
xor
jns
in
inc
jp
test
lahf
pop
outsb
push
fldcw
sub
xlat
imul
adc
push
pop
sub
push
mov
cli
lahf
jo
jns
in
add
sub
inc
shrl
popa
arpl
adc
flds
movsl
mov
inc
xchg
jbe
in
jnp
xor
push
add
in
jle
mov
adc
pop
sub
push
inc
dec
and
ds
pop
pop
sbb
aas
outsl
jb
sub
repnz
add
arpl
sbb
adc
icebp
jno
das
cmp
test
cltd
mov
fs
xchg
stos
sbb
dec
adc
cmpsl
push
ja
mov
sti
mov
test
shrb
pop
out
loope
mov
mov
test
pushf
dec
xchg
jmp
pusha
dec
es
ja
aas
and
jge
sbbb
ret
stos
imul
mov
shrb
mov
push
jae
inc
insb
adc
std
xchg
sub
aam
mov
and
adc
sbb
nop
ret
lret
stc
cltd
pushf
add
scas
fs
fs
shlb
or
dec
lret
add
fisttpl
mov
dec
xorl
mov
xchg
cmp
in
enter
pop
pusha
push
dec
pop
outsb
adc
or
mov
cli
loopne
and
outsl
jns
clc
pushl
push
and
fxam
test
test
cld
pushf
lret
cmp
add
inc
shrb
ljmp
notb
ljmp
loope
stos
ret
pop
dec
scas
inc
sbbb
cmc
sti
ljmp
sahf
pop
jp
fmuls
lahf
std
mov
into
lret
test
adc
jb
adc
jbe
inc
jnp
hlt
fidivrl
xor
sbb
push
sub
ds
inc
shrb
mov
ds
mov
bound
mov
add
push
aas
cmp
mov
or
lds
lods
jbe
push
push
fucomi
in
test
mov
icebp
inc
xchg
movaps
fwait
jge
repnz
add
sarl
push
out
jp
jle
push
loopne
mov
or
shll
mov
pop
in
mov
mov
das
add
jl
and
sti
popf
xchg
adc
or
iret
pop
sbb
add
cmpsb
xor
je
sbb
cld
je
mov
add
sarl
popa
in
sbb
inc
push
add
jnp
ja
sub
inc
and
cmpl
adc
inc
sbb
push
fcmovu
fs
sub
insl
jns
mov
movq
mov
mov
jecxz
xor
mov
aam
xchg
pop
sub
ljmp
repnz
mov
movsl
jg
loope
dec
adc
dec
adc
ja
adc
movsb
loope
push
adc
cmp
add
and
mov
dec
iret
lods
mov
inc
stos
loop
imul
jl
hlt
push
lahf
adc
pop
lret
adc
movsb
xor
pop
pop
stos
fstps
jp
and
orb
sub
fs
sub
jnp
jae
add
push
push
in
jp
add
mov
xorl
jmp
stos
xor
xchg
mov
aam
xlat
cmp
dec
test
repz
sbb
and
mov
cltd
mov
jp
repz
into
das
cwtl
scas
insl
call
shll
pusha
lods
add
stos
cltd
pop
fwait
into
popa
outsb
jmp
sub
bound
inc
mov
jg
pop
mov
es
cli
add
scas
adc
jp
ss
adc
shrb
sbb
pop
outsl
add
outsb
xchg
aas
in
or
icebp
xchg
js
fisttpll
sbb
inc
andl
test
dec
nop
test
loop
ret
shl
in
leave
pop
hlt
pop
das
dec
popf
mov
sub
pop
pop
cwtl
ficoms
out
ljmp
popa
push
imul
mov
leave
aad
push
xor
dec
test
pushl
mov
iret
movsl
push
dec
pop
pop
mov
adc
js
adc
push
shrb
and
push
jle
add
xor
cmp
stos
jmp
movsl
scas
popa
out
movsb
pop
jle
out
jge
xor
jb
inc
push
or
arpl
imul
pop
in
loopne
dec
ljmp
stos
mov
movsb
push
pop
ja
jp
out
mov
sbb
lcall
movsb
es
mov
aad
jo
movsb
push
pusha
repz
outsb
pusha
movsb
addr16
jg
clc
pop
mov
movsl
xor
cwtl
hlt
sbb
negb
mov
cld
xor
push
insl
mov
mov
jge
addr16
add
sub
jae
sti
js
or
cmp
out
inc
mov
ja
mull
fnstcw
mulb
adc
add
divl
jo
js
pusha
es
dec
inc
jno
sbb
mov
cli
push
mov
and
dec
jnp
fcomps
sahf
mov
add
popa
aas
jnp
xchg
adc
ficoml
jb
repz
fs
push
jl
clc
jg
mov
and
sbb
inc
outsb
mov
ret
clc
ret
push
and
mov
sub
dec
add
xchg
movsl
iret
sbb
jae
xchg
insb
shl
cmp
imul
cmpsl
inc
leave
rolb
sahf
aas
nop
xchg
dec
or
loop
xor
xor
fcoms
cld
push
mov
xlat
out
aad
push
nop
insb
push
fs
mov
jp
flds
or
xor
clc
lret
push
out
or
sub
adc
and
lret
inc
lahf
daa
mov
xchg
imul
xchg
lcall
cli
mov
xor
ds
xchg
and
in
xchg
out
dec
imul
test
std
jb
outsb
int3
jne
jp
fwait
movsb
fnstsw
pop
push
push
lea
pop
int3
sbb
imulb
inc
or
or
adc
push
pop
lods
add
leave
pop
scas
mov
lahf
cmp
lahf
lods
insl
sti
dec
shrb
movsb
xor
mov
lods
std
aad
in
mov
adc
mov
imul
int
in
in
stos
movsb
mov
jmp
adc
xor
sti
pusha
push
in
jl
pop
lock
repz
pusha
adc
lds
cmpsl
xchg
loope
and
sub
std
ja
dec
cs
xchg
outsl
loop
adc
in
push
inc
jns
pop
ss
movsl
pop
insb
imul
imul
ret
dec
jns
cmpsb
jb
dec
movsb
fwait
inc
jl
popa
sub
jb
jns
xchg
pushf
insl
pop
mov
inc
ret
ds
or
jnp
adc
loopne
call
rcrl
jno
dec
sbb
xchg
add
sbb
pop
push
adc
movsb
push
jne
stos
adc
testb
sub
mov
ret
xlat
or
inc
cmp
jne
jg
gs
out
movsb
dec
push
pop
jmp
mov
or
test
rorb
push
icebp
clc
mov
dec
add
pop
iret
loope
dec
push
add
pop
mov
add
daa
jmp
fs
es
icebp
inc
outsl
add
dec
add
xor
popa
loop
push
jg
jp
push
stos
xchg
inc
or
or
jge
lods
roll
add
pop
imul
or
inc
mov
dec
inc
xchg
mov
push
mov
lods
xor
pop
xchg
cltd
rcrl
mov
push
mov
pusha
sub
sub
jo
pop
mov
mov
push
ror
inc
in
cltd
fimuls
repz
out
lods
xchg
inc
cmp
ret
adc
fs
pop
pop
and
fstpl
pop
dec
fstps
dec
mov
out
push
xchg
add
inc
enter
icebp
xchg
mov
mov
jb
jae
jge
clc
jbe
scas
loopne
xchg
jge
sub
pop
pop
xor
add
add
sbb
aam
jg
xchg
xorb
cmc
dec
mov
sbb
mov
mov
xor
ljmp
push
shrl
out
jae
xchg
mov
inc
sub
sub
pop
repz
leave
dec
out
fsubr
cwtl
loop
cmp
stos
addr16
mov
fnstenv
repnz
loope
adc
aam
icebp
movsb
mov
sbb
test
das
mov
inc
aad
lahf
loop
adc
jbe
outsb
inc
mov
mov
fscale
fildll
sahf
jmp
sahf
pop
iret
fimull
loope
mov
and
ds
into
lret
inc
jnp
inc
pop
out
mov
mov
call
jns
xchg
xor
mov
push
pop
push
mov
jno
lret
subl
flds
out
rol
leave
stos
pusha
sub
insb
and
mov
lock
jbe
daa
fnstenv
mov
gs
outsb
jge
iret
sbb
xchg
pop
rcll
out
and
cmpsb
cmpl
cmp
inc
cs
fcmovnb
jmp
movsb
scas
mov
jp
ja
subl
ds
repnz
iret
xchg
insl
sahf
jp
movsb
outsb
push
je
aas
aas
arpl
push
xor
add
add
fsubp
push
push
lret
imul
jle
fs
push
repnz
mov
shrl
jne
mov
cltd
pop
imul
mov
mov
int3
cmp
add
cmp
sbb
mov
daa
jae
in
inc
inc
ficompl
testb
iret
imul
ror
pop
sarb
and
lods
mov
aas
sbb
sub
adc
adc
movsb
in
fs
xchg
dec
and
jle
adc
inc
inc
push
repnz
xchg
sub
ja
cmpsb
jnp
push
or
sbb
addr16
jecxz
inc
icebp
das
sbb
add
and
sub
jle
lock
pop
sbb
dec
push
hlt
jne
xchg
fiaddl
cmp
or
daa
add
push
movsb
xchg
xchg
fidivrs
lods
sub
inc
jge
das
pop
div
cmp
push
or
sarl
cmp
push
clc
ret
sarb
adc
pop
push
std
mov
fsubrp
cmp
fbld
dec
dec
sbb
loope
cwtl
mov
mov
or
imul
subb
cmc
jae
push
repz
mov
push
pop
ret
add
jnp
inc
out
add
xchg
xor
mov
dec
dec
add
lea
or
sub
andl
mov
fldenv
cld
xor
jae
and
cmc
dec
outsb
arpl
dec
mov
stos
inc
cmp
adc
push
or
std
scas
jno
dec
loope
das
mov
ss
cmp
movsb
std
sub
push
xchg
test
arpl
cmp
and
insl
sbb
lcall
jae
adc
xchg
std
cmp
mov
jp
stos
cmpsl
jecxz
adc
std
mov
sub
push
adc
jnp
sub
mov
ret
cld
sub
fs
fisttps
int3
or
loop
bound
pop
jo
movsb
cmp
fs
mov
pop
mov
out
sbb
mov
push
mov
divl
out
insl
ds
fcmovbe
jp
fsubrp
iret
dec
out
fbld
movsb
mov
stos
lds
sbb
ja
pop
out
movsb
cmpl
push
mov
mov
test
repnz
pop
and
xchg
cmp
std
sahf
data16
lock
popf
add
mov
orb
das
js
sbb
mov
cmpsb
jbe
rcll
fs
or
flds
inc
std
gs
sub
movsl
rolb
cwtl
mov
xor
popl
lds
mov
sbb
mov
inc
mov
aam
and
enter
movsb
loop
mov
test
addb
dec
jge
js
int
xor
out
push
in
lret
cmp
in
add
movsb
pop
add
jg
aam
shll
xchg
or
or
add
ja
in
xor
adc
fs
shl
scas
inc
aaa
sub
mov
shlb
outsl
outsb
push
stos
mov
lods
imul
pop
shrl
mov
insl
and
jnp
nop
jnp
cld
inc
lds
xchg
mov
push
into
movsb
aam
push
rorb
in
out
shlb
sub
mov
jb
add
xchg
and
adc
push
pop
lods
call
jge
mov
in
adc
into
sub
testb
outsb
cld
in
sub
adc
adc
imul
movsb
sub
fwait
xchg
lods
or
pusha
mov
add
ljmp
std
pop
subw
ljmp
push
test
cltd
mov
arpl
xor
nop
movsl
sbb
int3
outsb
jl
mov
jae
push
cwtl
or
mov
add
jl
cltd
into
es
ret
and
lret
out
jne
jae
or
out
movsl
xor
and
jo
push
dec
mov
lea
adc
sbb
in
dec
insl
push
outsb
cmp
fwait
pusha
test
test
lcall
push
inc
outsl
xor
mov
or
push
mov
sbb
subl
jl
jnp
or
push
dec
lcall
pushf
out
fs
aad
push
repz
or
fisubl
mov
pop
stc
cltd
test
enter
inc
or
xor
ficoml
inc
data16
loopne
mov
jp
pop
xchg
pop
dec
mov
xchg
call
push
and
out
sbb
dec
add
push
mov
test
or
pop
stos
fs
pop
popa
fnstenv
mov
mov
outsl
and
adc
int
xor
pop
leave
sbb
xchg
mov
nop
xchg
adc
mov
popa
pop
push
add
aad
jl
or
inc
dec
pop
push
subb
jnp
lock
mov
into
enter
fs
xchg
fstpl
je
add
mov
mov
push
aam
dec
aas
lea
fmul
mov
stos
dec
lods
mov
sahf
repz
pushl
pop
outsl
inc
out
mov
aas
jecxz
dec
fs
leave
lcall
imul
fdiv
ja
jmp
pop
movsb
repnz
dec
sub
jae
jle
test
movsl
sub
jmp
into
in
jbe
mov
shrb
imul
pop
ja
cli
cmp
adc
pop
imul
push
inc
cwtl
rolb
inc
jl
cmp
xchg
popf
xor
push
jo
je
loopne
insb
fcmove
fdecstp
aaa
pop
cs
or
jb
push
insb
sbb
sub
into
pop
arpl
sbb
push
jo
jb
fwait
sub
fsubrl
jae
pop
mov
dec
jno
inc
imul
adc
call
mov
lret
inc
imul
aaa
mov
clc
mov
jl
add
testl
dec
add
dec
test
pop
sbb
daa
or
lods
ror
sbb
int
dec
aad
in
jle
xlat
adc
xchg
arpl
je
mov
rolb
insb
test
arpl
and
sbb
pop
fcomps
fstpt
lds
mov
add
into
mov
lret
inc
sbb
xchg
idiv
mov
insb
and
dec
xor
jge
rcll
into
jg
push
push
cmpl
loop
cld
gs
imul
mov
mov
jns
icebp
test
cmpsl
mov
out
imul
fs
sti
mov
and
loopne
jbe
test
popa
push
push
push
mov
sbb
push
fsubrs
dec
aad
jne
mov
gs
xchg
mov
xchg
push
xchg
stos
mov
mov
les
aas
mov
ret
scas
sti
pop
lods
clc
lods
and
xchg
xchg
fistps
push
test
inc
cmp
cwtl
mov
mov
outsl
lahf
addr16
ss
push
outsb
cwtl
repz
jecxz
inc
push
cmp
inc
inc
jo
mov
sub
push
popa
sbb
fs
push
cltd
movsb
andl
jbe
mov
mov
dec
addr16
stos
cwtl
je
and
call
imull
scas
imul
xchg
push
out
push
and
mov
sub
jge
adc
mov
or
pushf
sub
enter
or
lcall
icebp
add
push
jg
add
outsb
call
movsb
jb
jae
xchg
cld
mov
jno
sbb
jp
addr16
inc
sahf
hlt
pop
mov
sbb
pop
push
lret
add
imul
out
cli
mov
addl
mov
cmpsl
pop
les
xor
stos
js
outsb
orl
rcr
xor
jne
pop
outsb
inc
stc
movsl
mov
mov
aaa
mov
push
xor
cld
sub
stos
add
fs
jne
mov
mov
fcomps
cmpsl
sbb
jne
es
cmp
test
idivl
cs
icebp
outsb
add
data16
xor
aaa
jmp
fs
add
jns
outsb
push
ret
pushf
shrl
enter
cmp
gs
dec
pop
ss
out
push
in
dec
cld
inc
fs
lcall
add
out
jns
into
aas
test
andb
cmp
mov
mov
xor
call
cmpsl
std
sub
ret
mov
mov
insl
jno
xchg
push
inc
in
fs
notb
imul
mov
mov
fwait
jnp
mov
insb
add
movsb
das
xchg
adc
or
mov
pop
addr16
fnstenv
mov
mov
dec
lret
loopne
xchg
xchg
es
into
and
adc
fmuls
inc
ret
jecxz
loop
inc
mov
fs
ss
pop
dec
mov
negb
sub
aas
dec
cmp
mov
pop
sbb
shrb
cmp
pushf
dec
lret
add
push
jl
icebp
fisubl
in
pop
pop
test
imul
cmpsb
gs
clc
xlat
aam
mov
movsb
aad
lock
cwtl
dec
ds
gs
mov
sub
cwtl
insb
mov
mov
stc
adc
rcll
lcall
pop
adc
hlt
inc
fsts
mov
jl
jbe
jecxz
xor
adc
fs
jnp,pn
jle
sbb
int3
mov
cmpsl
dec
or
ja
loope
mov
dec
and
mov
push
mov
jno
arpl
pop
sti
mov
push
int
adc
aas
push
test
sbb
fcmovu
aam
jl
xchg
sub
loope
or
outsb
mov
int3
cltd
pusha
or
fstps
cmp
mov
push
addr16
mov
jle
cmp
push
sbb
inc
shl
jmp
mov
lods
pop
imul
xchg
sub
out
std
inc
sti
repz
jl
jo
addr16
jg
and
xchg
fiadds
mov
stos
aad
out
sub
sub
jp
mov
shl
pop
orl
jge
mov
out
mov
mov
push
aas
xchg
sbb
and
and
pusha
push
sbb
mov
pop
lea
xchg
lock
andl
cmpsb
stos
movsb
popa
mov
dec
repz
pop
push
xchg
push
adc
inc
push
ret
leave
and
lods
xchg
add
fs
push
add
or
sub
dec
mov
out
outsl
movsl
xchg
fisubl
push
mov
imul
loop
mov
stos
jnp
mov
jecxz
fidivrl
lcall
inc
cwtl
adc
pop
pop
lods
inc
movsl
inc
aas
push
push
pop
mov
sub
mov
sub
dec
mov
or
ja
jle
daa
xor
push
fsubp
iret
and
adc
out
fwait
cltd
bound
mov
and
leave
ja
dec
add
inc
lahf
cld
xchg
or
loopne
cltd
cmp
repnz
imul
sub
mov
and
test
into
sbb
mov
fs
fucomp
dec
out
xchg
shlb
inc
sbb
add
dec
stos
js,pt
scas
int
call
inc
push
lock
xor
xlat
xor
and
xor
repz
push
out
xchg
ret
out
aaa
in
mov
jb
jle
jo
inc
xor
pop
sub
ja
movsl
movsb
xor
inc
xchg
xchg
sbb
sub
inc
dec
mov
mov
push
push
pop
jns
add
xchg
scas
push
push
inc
pop
outsl
jmp
and
and
mov
shll
inc
ret
sarb
imul
movsb
sahf
test
xlat
mov
dec
push
pop
mov
cmpsl
mov
cli
dec
movsb
mul
mov
sbb
sub
ret
clc
mov
loope
gs
pop
mov
jne
dec
gs
and
xor
add
jbe
mov
dec
xlat
or
loope
ret
and
add
imul
inc
mov
sub
rolb
cld
jmp
pop
mov
enter
lcall
rcr
mov
call
ds
inc
cltd
xor
and
pushf
pop
jp
pusha
add
jl
add
out
fucomip
fiadds
mov
pop
push
stc
mov
adc
les
jno
mov
aad
pop
popa
rcrb
sub
jnp
mov
pop
dec
hlt
mov
incl
xchg
imul
sarb
imul
imul
mov
loopne
outsb
cmp
cmp
cs
pop
cltd
ret
addb
mov
jmp
mov
ss
negb
and
scas
or
insl
out
dec
ds
mov
movsl
sub
jge
add
loopne
sbb
dec
std
stc
adc
ss
xchg
add
cmp
xchg
sbb
movsb
mov
sbb
sub
test
call
inc
repz
inc
pop
cltd
ret
fwait
shr
xor
out
pop
xchg
add
inc
into
icebp
sub
cmpsl
fldenv
xchg
out
inc
cmp
jecxz
jbe
scas
push
mov
adc
jge
sub
push
jp
adc
test
sti
xchg
sbbl
jp
jb
int3
cltd
lret
stc
dec
pop
das
adc
and
or
cltd
imul
mov
out
pop
ret
test
shrl
out
dec
and
aam
lea
push
dec
jle
in
mov
inc
ret
ss
mov
xlat
jle
pop
mov
dec
inc
pusha
fistl
sbb
mov
jns
fidivrl
add
aas
and
sti
inc
mov
mov
cmp
or
mov
fs
xchg
imul
sbb
fistl
cwtl
dec
std
xchg
lcall
pop
idiv
outsb
sahf
mov
nop
gs
movsb
sbb
lea
daa
lret
push
jbe
sarl
push
into
outsl
repz
cmp
hlt
movsb
sub
xchg
mov
jbe
iret
loopne
and
mov
jl
fnstenv
loope
imul
dec
outsl
jne
iret
repnz
mov
mov
inc
jns
or
dec
inc
cli
movsb
test
push
and
addr16
push
movsb
mov
sub
andb
or
and
outsl
fcompl
mov
hlt
es
int
out
mov
inc
cmp
xchg
xchg
into
add
decb
imul
repnz
nop
push
loopne
popa
shr
lods
cmc
cmp
out
fs
mov
in
hlt
pop
aas
add
dec
add
push
not
shl
mov
add
out
test
sbb
int3
lea
std
dec
sub
or
cli
cmp
push
call
shll
jmp
add
pop
lcall
add
mov
loope
mov
fisttps
out
jp
pop
sbb
lods
addps
xchg
hlt
pop
xchg
imul
into
push
xchg
pop
hlt
lret
add
adc
lret
xor
ret
idivb
fs
dec
xchg
dec
lret
lahf
sbb
movsb
addb
mov
lods
ljmp
leave
push
daa
hlt
sbb
rorb
je
addr16
or
in
movsb
cmp
ret
arpl
pop
push
mov
xchg
cmp
fcoms
xchg
push
push
fadds
cld
cmp
inc
rcrb
pop
add
imul
adc
popl
aam
mov
mov
pop
mov
dec
fisubl
js
adc
mov
cmpsb
cmp
dec
adc
stos
sub
xchg
addr16
pop
ds
mov
arpl
sub
push
add
dec
je
mov
jecxz
pushl
dec
mov
mov
dec
lcall
nop
fistps
lret
adc
push
scas
sbb
std
dec
nop
out
adc
mov
or
popl
jae
cli
arpl
ja
push
mov
mov
cmp
gs
add
push
cmpsl
jo
movsb
adc
adc
inc
dec
mov
int3
sub
cmp
dec
cmp
dec
hlt
jge
lods
and
inc
leave
mov
mov
aas
sbb
pop
sbb
repz
mov
insl
mov
push
xchg
fptan
push
dec
mov
add
adc
cld
mov
sub
pop
jle
outsb
push
adc
in
je
adc
fistl
insb
cmp
aas
scas
dec
lods
inc
sub
fs
jl
pop
mov
dec
push
rcll
jno
call
sbb
xchg
jg
add
test
movsb
xchg
movsl
inc
pop
mov
xor
out
mov
insb
inc
adc
cs
cmp
outsb
push
pop
insb
sbb
jmp
lock
add
imul
xchg
add
loop
clc
sbb
mov
and
lods
or
cmp
fnsave
mov
out
fisttpl
adc
sbb
pop
push
jle
lret
push
pop
pushf
fistpl
cmp
mov
fmul
bound
dec
arpl
pop
add
xlat
aas
cltd
add
std
cwtl
jge
pop
mov
sbb
ljmp
in
inc
test
stos
sbb
test
repnz
sbb
adc
mov
push
mov
imul
cmp
aam
mov
les
jnp
movsb
mov
gs
push
out
std
and
jnp
xchg
inc
addr16
mov
jmp
hlt
xor
inc
lock
inc
mov
lods
mov
call
or
dec
xchg
pop
sub
into
idivl
xor
bound
je
push
xabort
aam
movsl
cmpsb
add
es
insl
roll
mov
fisubrs
and
fsubs
mov
or
lcall
je
fdivl
cs
jmp
inc
mov
icebp
mov
adc
cmp
mov
sub
outsb
dec
add
dec
jg
sub
jbe
movsl
push
fld
jp
sub
cmpb
jmp
out
adc
push
jne
ja
std
aad
mulb
jp
addr16
mov
gs
add
ljmp
dec
sbbb
ds
stos
call
sbb
movsb
jmp
imul
mov
cmp
pusha
jg
in
or
jbe
xor
out
push
push
mov
mov
inc
adc
pop
cld
xchg
sub
fs
testb
mov
stos
push
dec
mov
fsub
mov
jae
dec
mov
mov
mov
jl
imul
sbb
jp
inc
fucomip
xor
fnstcw
test
iret
stos
cltd
xlat
adc
jbe
mov
lods
xchg
sbb
jg
dec
ljmp
leave
jbe
sbb
jo
lahf
jle
rol
pop
adc
outsb
mov
rcr
jbe
cmpsl
inc
jae
mov
or
leave
js
dec
lahf
mov
jae
sbb
sbb
cmpsb
call
and
inc
lret
rcrb
out
movsb
sub
std
push
incl
imul
xor
js
cwtl
adc
shlb
scas
icebp
call
outsl
in
xchg
roll
test
into
push
mov
jb
mov
adcb
sub
xchg
mov
sub
pushf
int
push
cmp
cmpsb
sarb
stos
ret
scas
mov
lods
adcb
bound
push
dec
adc
mov
add
push
adc
mov
stc
inc
jle
mov
jno
xchg
js
lcall
sahf
jnp
cmp
adc
mov
aad
fimuls
mov
inc
sti
in
loop
xorl
pop
or
pop
sub
lea
fwait
dec
call
mov
fstpt
ss
jmp
pop
mov
andb
mov
adc
dec
add
mov
sub
mov
lahf
outsb
push
loop
dec
inc
jno
push
push
sub
xor
jg
enter
pop
js
mov
inc
fsubl
mov
cmp
xlat
sbb
mov
pop
mov
ss
xchg
fs
fiadds
inc
test
stos
es
fs
pop
jo
addb
test
sbb
lret
fimuls
add
adc
rcll
mov
fs
add
cmp
mov
pop
push
mov
testl
in
cltd
fisttpl
xchg
xor
pusha
aaa
inc
and
pop
mov
js
push
pop
sub
mov
jp
push
ret
movsb
mov
and
or
outsl
scas
stos
add
push
adc
dec
cmc
aam
loopne
inc
orb
cmp
push
ja
push
cmp
cmp
pop
ret
jl
in
add
insl
mov
sub
dec
jle
andb
shrb
xor
pop
sub
and
mov
shrb
push
xchg
stos
jmp
jecxz
pop
out
movsb
int3
stos
mov
push
pop
dec
mov
xchg
jbe
jo
lods
and
sbb
out
insl
imul
pop
adc
pop
cwtl
xchg
cmp
push
mov
imul
popf
push
jb
mov
lret
jno
dec
fildl
dec
fs
jmp
sbb
xchg
out
inc
adc
cld
jl
pop
inc
jnp
sbb
cmp
xchg
ljmp
xor
or
arpl
ret
or
nop
push
pop
rclb
cmc
ss
icebp
incb
jo
push
xchg
lds
hlt
dec
aad
call
insl
sbb
add
cmpsb
xchg
enter
mov
js
imul
jmp
sub
sbb
pop
mov
arpl
cmpsl
fisubrl
push
inc
imul
jne
pop
int3
hlt
pop
sub
sbb
inc
or
cmp
clc
cltd
mov
into
mov
mov
fstpl
push
mov
insb
mov
aaa
imul
sbb
sbb
inc
dec
sbb
clc
cli
mov
push
add
jmp
push
bnd
inc
lods
pop
mov
lcall
shrw
xor
fs
in
arpl
arpl
inc
inc
cmp
sbb
xchg
movsb
mov
lds
or
push
mov
gs
xor
aas
xchg
xchg
cwtl
inc
hlt
gs
mov
mov
jg
cli
jnp
and
mov
dec
inc
out
jnp
inc
addr16
inc
pop
fs
in
fs
mov
mov
fptan
and
outsl
pushf
add
addr16
push
xchg
aad
mov
and
inc
sarl
imul
push
jmp
pop
jmp
ret
aaa
imul
stos
stos
push
insl
mov
cwtl
arpl
cltd
fisubrl
sahf
stos
sub
push
cli
test
je
mov
pop
repnz
adc
rcrl
jb
mov
mulb
dec
mov
xchg
mov
adc
push
push
inc
stos
xchg
pop
jnp
movsb
ret
dec
lret
popf
jg
sub
sub
ret
nop
xor
push
dec
inc
js
out
lods
fimuls
ds
sbb
fidivl
inc
or
adc
sbb
pop
jg
xchg
in
in
in
bound
sbb
inc
push
loop
pop
push
int3
xor
scas
jg
mov
movsb
mov
cwtl
fadds
cmp
addr16
outsb
je
ljmp
dec
cmc
dec
dec
pop
xor
push
xor
mov
cwtl
inc
xchg
mov
lods
popa
push
sub
ss
mov
out
sahf
mov
mov
out
sar
xchg
pop
adc
push
inc
or
jb
dec
jb
imul
or
ljmp
add
push
jnp
pop
fs
es
rcr
add
dec
or
xlat
dec
add
movsl
mov
jg
gs
jae
jno
dec
cmc
sub
xlat
push
sbb
inc
add
sub
lods
jno
lds
movsb
fdivrs
out
notl
out
sti
xor
jnp
xchg
js
push
pushf
movsb
scas
xchg
fs
scas
xor
pop
int
push
pop
cltd
shlb
xor
ret
inc
out
sbb
mov
insl
loope
mov
jo
mov
subl
cltd
lock
adc
call
fsts
cmp
inc
mov
lahf
in
jb
mov
mov
out
push
and
lods
movsb
clc
cmp
fwait
jge
pop
out
dec
dec
into
out
inc
push
xchg
sbb
les
sbb
mov
sub
xor
sbb
inc
repnz
roll
fwait
rcrb
into
jno
mov
addl
sarl
jae
ljmp
stos
pop
xchg
add
inc
mov
into
xor
outsl
stos
popl
sahf
sbb
xchg
add
push
out
sarb
sbb
jnp
xchg
push
arpl
jmp
jno
dec
dec
lcall
mov
pop
ss
insl
rcrl
jmp
push
dec
bound
movsb
inc
iret
fs
mov
fnstenv
notb
mov
aaa
arpl
call
lock
cmp
xchg
das
gs
das
pop
flds
pop
mov
lcall
fidivl
dec
cmc
ret
or
insl
sub
out
aas
push
enter
jae
and
ss
outsl
xlat
pop
daa
push
test
dec
add
sub
inc
fs
das
insb
sub
cld
movsl
fldcw
jbe
lods
xchg
repnz
orl
shll
loope
sbb
pop
lret
or
fs
in
stc
add
xchg
dec
fsts
jne
pop
iret
inc
adc
pop
test
and
mov
in
or
xor
mov
dec
lahf
jne
shl
nop
int3
jae
stos
pop
xor
es
pop
jbe
out
push
scas
mov
jno
sbb
jne
lahf
ss
jmp
rcr
dec
cmp
adc
inc
xor
dec
ljmp
sub
sub
in
dec
pop
pop
shlb
sbb
mov
fs
sub
and
jnp
aaa
and
fwait
jne
mov
add
enter
push
cltd
mov
xor
les
inc
add
aad
lret
jle
jl
dec
hlt
xor
mov
mov
imulb
jle
pop
inc
add
insb
aam
jb
inc
cmp
rcll
outsb
inc
mov
mov
outsl
out
outsl
movb
mov
ss
adc
mov
xor
mov
call
jge
xchg
mov
out
pop
xchg
xchg
lds
xchg
andb
xchg
in
pop
ss
add
sbb
ret
or
ljmp
int
pop
xor
dec
mov
filds
inc
xlat
in
ror
fcomps
fiaddl
or
push
jmp
mov
clc
jne
lea
inc
sti
lcall
movsl
popa
xchg
ljmp
in
ds
inc
pusha
fbld
rclb
movsb
ds
or
xor
pop
jnp
in
insl
jnp
sahf
popl
outsb
push
pop
shlb
aad
jnp
shlb
add
or
aas
lds
popa
jae
sbb
fldt
and
sub
stos
jne
insb
insb
fucomip
insl
inc
and
xchg
rcrl
or
sub
adc
stc
mov
xchg
inc
lods
jle
pop
imul
dec
push
rcrl
xor
rorb
mov
sbb
adc
add
xchg
mov
fs
lret
fisttpll
cmc
inc
mov
inc
pop
lret
push
pop
je
sahf
insl
mov
lds
sub
add
insb
mov
jb
adc
insl
mov
jae
stos
adc
nop
mov
xchg
or
into
imul
and
push
and
movsb
jne
xchg
out
into
inc
rolb
test
inc
jl
inc
repnz
lods
sbb
or
xchg
mov
mov
cmp
dec
bound
test
mov
dec
movsb
sub
into
mov
inc
cmpsl
shlb
xor
addr16
push
das
mov
add
push
xchg
and
dec
and
rcrb
adc
xchg
aaa
adc
cmp
insb
push
test
mov
ds
mov
sub
add
call
mov
mov
xor
sbb
sub
lods
jmp
gs
das
fisubs
popa
and
ss
ljmp
push
iret
lahf
fisttpll
clc
sub
mov
fstpt
pop
xchg
jp
dec
jge
das
jno
sub
sub
test
pop
or
push
lods
lret
cmpsb
mov
test
mov
sub
mov
arpl
pusha
xchg
cmpsb
std
cli
movsb
sbb
inc
sbb
and
mov
stos
xor
adc
mov
push
pop
insb
addr16
jo
add
jno
mov
call
sbb
jp
push
sbb
dec
inc
inc
scas
gs
adc
imul
xlat
movsb
cmp
mov
stos
fs
iret
loopne
lock
xor
addr16
movsb
or
in
mov
outsb
dec
aas
cs
pop
into
scas
and
jo
sbb
push
inc
ret
out
mov
mov
mov
adc
xchg
xor
sarb
and
ds
imul
sbb
std
pop
jl
mov
pop
arpl
cld
aas
cmpl
xchg
pop
sbb
mov
cltd
mov
mov
sbbl
sbb
adc
imul
sub
movsl
rcrb
adc
fs
dec
movsb
pushf
sub
mov
insb
fs
adc
out
movsb
scas
cmp
daa
mov
out
mov
int3
inc
sarb
cltd
packssdw
mov
pop
fwait
cs
rclb
pop
lea
pop
jbe
pop
sbb
dec
sahf
daa
movsb
lea
popf
fcomp
daa
leave
jge
jae
clc
lret
lret
pop
bound
inc
gs
ljmp
and
lcall
cmp
addr16
inc
sub
push
mov
sub
adc
add
xchg
fbld
pop
lret
jp
adc
xchg
adc
sahf
mov
sub
cltd
popa
jecxz
sbb
push
movsb
fcmovb
push
xor
mov
cli
cmpsb
lahf
jge
imul
sahf
mov
inc
hlt
aad
mov
lds
or
movsb
jecxz
dec
adc
cmp
pop
and
push
sub
jne
xchg
test
movsb
inc
jp
mov
pop
xorl
mov
cli
sbb
out
sub
dec
jne
push
fs
push
addb
adc
and
movsb
and
sbb
jno
lcall
fstl
ljmp
lret
cmp
cmp
loopw
lods
movsb
sbb
push
dec
jle
popf
push
pop
adc
pushf
out
mov
in
adc
lahf
dec
jle
stos
cwtl
test
mov
fsubrp
mov
push
mov
sub
inc
push
sub
outsb
ljmp
testb
jecxz
lret
push
aaa
xor
pushf
mov
lret
sbb
jb
xor
js
sub
xor
sub
or
stos
frndint
cli
jns
std
mov
inc
dec
cmc
adc
in
popa
cmp
dec
jno
jb
decb
es
sbb
push
push
ss
sbb
push
ret
jle
out
push
mov
xor
shr
mov
fs
push
dec
push
adc
mov
cs
out
pop
mov
leave
je
inc
imul
repz
aas
mov
lret
dec
popa
iret
cmpb
pop
bound
or
or
sub
in
movsb
test
xchg
shlb
jne
jb
xchg
ja
mov
cmp
pop
ret
inc
push
pop
mov
push
clc
into
jo
sub
movsb
mov
ja
outsb
inc
insb
decl
lcall
jae
cld
out
sbb
ljmp
ret
divb
pop
cmp
mov
iret
and
jb
mov
and
cmp
mov
cmc
aam
jl
orl
inc
decb
ret
sub
popa
adc
push
lea
out
jge
dec
push
ja
inc
mov
iret
pop
ret
xlat
scas
ljmp
popa
mov
movsb
xchg
or
cltd
xchg
cwtl
dec
loopne
lock
fadds
jbe
out
std
incl
dec
call
xchg
fstpt
cs
adc
jge
or
and
mov
mov
sub
lret
pop
mov
pop
sahf
iret
jo
xlat
movsl
je
outsb
push
dec
repz
xchg
dec
clc
popf
cltd
jo
pop
js
mov
inc
popa
out
inc
pop
inc
sub
mov
fs
xlat
movsb
and
add
addr16
or
jae
mov
jecxz
sti
imul
arpl
fwait
mov
out
fs
js
mov
les
jae
popf
jge
xor
pop
lods
hlt
fs
xor
sbb
loope
push
lods
and
arpl
pop
and
inc
lods
xchg
mov
out
daa
repz
in
test
outsb
dec
mov
shll
xor
bound
jl
pusha
push
imul
cltd
movsb
ljmp
loopne
inc
lahf
mov
adc
cmp
out
and
jl
jmp
xor
mov
lods
jle
stc
jb
insl
cmp
xchg
jg
mov
cld
test
sar
sbb
sahf
mov
pinsrw
mov
addr16
adc
sbb
dec
into
hlt
dec
fisttpll
in
fmuls
add
aad
fcom
mov
imul
jnp
inc
mov
adc
jb
dec
outsl
stos
lret
inc
pop
jo
pop
into
fiaddl
jp
fisttpll
cld
pop
aam
push
repz
mov
ud2
movsb
sbb
add
lret
int
mov
rcll
mov
cmp
in
fimuls
jne
outsl
rclb
jbe
insb
stc
arpl
mov
aaa
fcmove
mov
repnz
mov
aad
mov
test
clc
push
stos
inc
lret
push
pop
icebp
into
bound
das
push
mov
add
push
dec
dec
mov
ds
dec
fs
jnp
cltd
cmpsb
jb
out
xor
addr16
outsl
adc
adc
into
popf
cmpsl
adc
inc
bound
test
repnz
outsb
adc
or
mov
int
adc
mov
aaa
lods
shrl
rcrl
movsb
les
ljmp
add
cmpsl
faddl
outsb
lds
cltd
push
inc
jl
mov
mov
inc
stc
ljmp
out
push
fidivrs
xchg
and
mov
outsb
movsl
or
xlat
or
movsb
mov
movsb
fdiv
jne
mov
add
fbld
fmull
ss
pop
dec
in
add
xchg
mov
pop
pop
imul
in
dec
dec
out
push
insb
lods
adc
les
lea
cmp
insb
mov
and
xor
mov
fbstp
mov
xor
pop
push
xor
data16
sbb
fs
mov
push
sub
jnp
dec
mov
pop
push
mov
movsb
and
xchg
jno
push
lcall
stos
mov
test
jb
js
mov
lods
lock
mov
push
aaa
jnp
pushf
mov
cltd
sarb
cltd
call
mov
cmc
movsl
pop
fistl
aam
les
mov
roll
push
xor
jae
jmp
sbb
sbb
inc
jo
or
jbe
int3
mov
pop
rcl
sahf
adc
jmp
inc
and
jbe
divl
or
jae
inc
sbb
inc
pusha
xor
loopne
cs
jbe
and
rcrb
mov
adc
inc
insb
inc
cs
dec
into
in
aas
jg
dec
mov
int3
imulb
mov
popfw
push
and
dec
pop
in
aas
test
or
ja
fs
mov
mov
in
push
shrb
icebp
jae
cwtl
outsb
nop
dec
js
gs
push
into
sub
inc
lods
in
mov
pop
adc
movsl
movsl
sti
inc
dec
inc
cmp
sbb
aaa
lahf
mov
adc
mov
lahf
cltd
jle
mov
or
in
dec
shrl
sub
clc
fdivs
jne
add
jle
mov
enter
mov
std
cmp
sub
push
in
ljmp
into
orl
add
cltd
adc
mov
mov
cmp
lcall
xlat
jne
lods
fstpl
xchg
inc
xchg
jbe
add
adc
pop
ja
cmp
lahf
add
fmuls
sbb
cmpsb
cmc
mov
addr16
inc
sub
xlat
addr16
jecxz
lahf
pop
mov
sbb
mov
jp
lea
pop
push
enter
fs
jbe
push
sub
or
dec
arpl
mov
decb
cmp
push
in
in
pop
int3
mov
push
scas
loopne
shlb
sub
mov
cmp
pop
jecxz
imul
mov
cmp
push
cmp
sti
fs
cld
imul
andl
stos
lea
push
cmc
lock
sub
xchg
cmpb
or
pop
and
pop
stc
and
push
cld
fmulp
inc
into
push
cmpsl
cmpsb
aam
sbb
add
cmp
ds
shrb
outsb
outsl
inc
das
cmc
push
jo
insl
sub
jge
cmp
dec
nop
lods
fisttpll
mov
dec
sbb
mov
daa
aad
pop
das
xlat
data16
shl
or
aad
jmp
loope
fldcw
xchg
jnp
rcrb
imul
cltd
loop
push
dec
mov
adc
mov
mov
adc
or
test
mov
stos
jne
ljmp
sar
sub
dec
dec
mov
movsb
ss
xchg
insl
iretw
flds
mov
push
mov
ret
xor
xchg
xchg
dec
mov
ljmp
popa
test
pop
cld
movsb
cli
scas
push
lods
cmp
mov
sub
cmc
push
mov
insl
outsb
sarl
sti
mov
adc
ljmp
out
out
adc
dec
mov
data16
jbe
rorb
mov
sbb
jbe
out
adc
std
aad
cmp
or
jge
xchg
scas
call
popf
out
lds
in
and
push
jp
pop
decb
dec
data16
movsb
dec
ja
pop
in
inc
out
notb
pop
lret
pop
fiaddl
imul
in
mov
adc
outsl
push
push
xchg
ja
movsl
hlt
aad
push
xor
mov
ljmp
mov
pop
mov
lods
movsb
stc
adc
ret
pop
sbb
ss
xchg
popl
mov
insl
pop
dec
mov
sub
adc
nop
and
and
data16
add
imul
andl
ficomps
je
popa
mov
cmp
loopne
sub
addr16
add
popf
das
push
and
mov
sbb
imul
stos
fimull
orl
pushf
loope
mov
mov
popa
test
addr16
ljmp
cld
stos
sub
push
add
sbb
pop
lea
lods
lds
xor
mov
ja
sbb
fists
sub
inc
lods
leave
jle
sub
in
dec
fs
sub
or
mov
in
jbe
adc
nop
sub
faddl
fnstsw
xor
jnp
rorb
movsb
sub
jne
in
mov
adc
iret
jmp
shrb
fs
rcrl
jg
sbbb
sub
mov
shll
lret
mov
pop
inc
inc
je
insb
xlat
xor
mov
adc
ficoms
adc
movsb
outsb
jle
fdivr
xor
insb
shll
stos
mov
cmc
adc
cld
stc
imul
mov
mov
adc
mov
xor
rcll
repz
ret
jmp
lret
cmp
out
stos
popf
jbe
pop
jl
nop
incb
mov
xor
mov
jb
sarb
cmp
pop
ret
je
pop
das
jg
push
jno
xchg
mov
mov
cltd
arpl
mov
repz
int
sbbb
fdiv
insl
and
and
xchg
out
push
out
decb
dec
pop
clc
sbbb
sbb
ljmp
mov
jl
inc
repz
out
jmp
stc
test
outsl
rcrl
das
ficoms
insl
mull
dec
cwtl
add
sbb
clc
mov
stos
and
sbb
sub
sub
fs
mov
inc
scas
imul
push
mov
add
ds
cmc
sub
lcall
adc
ljmp
mov
das
inc
sbb
pop
lods
test
and
add
lds
shr
mov
or
cli
mov
std
sbb
arpl
cmp
inc
mov
int3
lods
mov
jb
sahf
cmpb
or
sahf
stos
das
jg
fbstp
nop
iret
das
sub
sbb
repz
pop
std
jne
cwtl
movsb
push
inc
jnp
add
or
pop
lea
loopne
inc
add
inc
mov
inc
ss
fucomi
and
jl
or
mov
imul
into
push
loopne
xchg
loope
cmpl
sbb
add
mov
imul
lods
in
cltd
cmpsl
adc
roll
repz
arpl
cmp
dec
adc
imul
aam
insb
add
js
inc
push
std
popl
pushf
mov
add
mov
jnp
aad
mov
ret
js
ds
and
inc
fdivs
xor
pop
sbb
cli
fs
or
cmp
mov
ja
fs
ret
pop
bound
popa
int3
fadd
add
sub
movsb
imul
push
mov
js
into
sbb
das
movsb
push
movsl
cmp
scas
stos
fildll
std
rcr
sarb
and
pop
mov
lahf
add
push
fs
hlt
out
mov
xor
sti
cmp
into
sub
mov
inc
mov
push
push
pop
ss
in
inc
xor
xchg
loope
push
jp
sub
lret
mov
mov
sbb
push
push
stos
inc
mov
inc
test
dec
dec
mov
xor
push
lods
enter
xchg
jmp
jle
sub
sub
faddl
and
call
cmc
pop
aad
cmpl
std
inc
adc
mov
mov
dec
sub
jmp
pushf
enter
xchg
xchg
scas
scas
ret
pop
clc
outsl
mov
daa
add
and
sarb
ds
mov
je
aam
mov
pop
xchg
outsb
mov
dec
or
xlat
pushf
push
ljmp
jmp
sbb
mov
pop
push
cmp
inc
repz
xchg
xchg
in
jp
inc
jno
ss
ds
jge
or
and
dec
inc
decb
fistpll
fs
jb
cltd
dec
pop
inc
test
imul
fsts
xchg
movsl
lock
dec
add
fs
cld
mov
gs
loopne
enter
lods
fisubl
dec
bound
adc
or
inc
mov
ds
xchg
jge
mov
fs
adc
mov
insb
jb
movsb
mov
xlat
gs
add
dec
and
lds
cmpsl
daa
push
push
sub
or
negl
fsubrl
inc
addr16
jge
jno
aaa
sbb
jp
cmpl
inc
dec
shlb
test
inc
lea
xor
ret
dec
fs
add
inc
std
mov
out
shrb
xchg
add
pushf
popa
mov
jns
xor
es
inc
xorb
movsb
cmpsl
stc
cmpsb
jnp
test
sbb
fnstcw
mov
in
sbb
xchg
adc
popf
pop
rolb
call
in
std
jp
sbb
ljmp
inc
mov
rorl
fwait
mov
jo
lret
add
mov
xor
int3
jb
inc
jb
pop
mov
dec
out
dec
push
push
packssdw
je
xchg
rol
mov
cmpl
call
pop
out
pop
xor
mov
popf
fwait
sub
outsb
jp
ja
test
movsl
movsb
sub
sar
adc
daa
outsb
aam
cltd
jl
js
adcb
scas
jge
iret
imul
pop
adc
insl
push
mov
jbe
sbb
dec
jmp
adc
test
stos
adc
add
dec
push
xchg
push
fnstsw
push
inc
push
mov
inc
adc
push
lds
jnp
movsl
fwait
jne
ret
push
sbb
mov
jno
jbe
or
fs
fsubs
dec
es
sub
in
adc
daa
in
jmp
rolb
xchg
adc
mov
xchg
sbb
sub
mov
or
outsb
inc
mov
cmp
das
adc
inc
adc
xchg
nop
bound
dec
or
xlat
mov
stos
lret
mov
testl
repz
fstl
sub
jns
lcall
fnsave
mov
jl
les
jecxz
icebp
shll
dec
int
pop
sub
fs
or
pop
pushf
sbb
call
pop
lahf
shr
imul
xlat
mov
mov
xchg
pop
fildl
sbb
dec
lds
test
inc
decb
movsb
mov
stos
mov
shrb
mov
adc
out
sub
sub
mov
push
imul
sbb
jb
pop
push
push
pop
in
inc
pusha
popf
jbe
sbb
cmp
sub
es
mov
add
lret
mov
sbb
jno
insl
and
shlb
addl
movsb
jb
pushf
cwtl
or
xchg
sub
call
inc
call
clc
push
or
jmp
popw
fs
in
hlt
imul
jge
mov
jns
je
stos
outsb
add
mov
cmp
jmp
mov
sub
mov
movsl
ss
jle
dec
stos
insb
movsb
lret
clc
pop
inc
repz
dec
pop
lea
les
loopne
cmp
cld
and
stos
out
and
adc
adc
aad
inc
movsb
mov
dec
push
dec
xchg
outsb
rorl
sub
jo
lock
cmpsb
mov
loop
fidivrl
add
mov
push
lcall
sub
jge
movb
and
or
sbb
fwait
mov
mov
xchg
cli
aam
mov
pop
sub
lds
push
fucomp
inc
movsb
push
sbb
scas
lock
cmp
mov
inc
rorl
or
mov
and
int
test
pop
cmpl
pusha
push
adc
push
outsl
int3
xor
jb
cmp
dec
dec
std
stos
sub
or
cwtl
cli
mov
pop
out
imul
pop
loop
inc
test
mov
cwtl
rorl
mov
mov
fwait
lahf
inc
push
aas
sub
push
sbbb
sub
ret
add
lock
dec
and
jo
fidivrl
jnp
adc
fistpl
inc
rep
addr16
pop
idiv
sahf
cli
daa
test
pop
xorb
jl
cltd
xchg
das
jne
push
and
push
fnsave
sbb
jl
ljmp
mov
and
lret
stos
lret
jp
insb
and
add
adc
out
adc
test
push
ds
mov
pop
int3
insb
push
lret
stos
imul
lcall
push
mov
mov
cltd
inc
adc
mov
xchg
cld
pop
mov
xchg
call
fdivrs
mov
div
outsl
ret
std
push
push
sbb
dec
lret
addr16
hlt
in
fldenv
fs
jns
repz
cmp
inc
pusha
jl
push
int
pop
or
dec
sub
jne
xor
ja
enter
mov
pop
xor
pop
stos
cmc
xchg
fs
movsl
ljmp
sub
dec
adc
popa
jmp
das
xchg
lahf
inc
lods
or
iret
cld
je
adc
out
sbb
out
data16
js
movsb
fnstsw
pop
push
inc
cltd
push
imul
mov
sub
mov
lret
stos
movsb
psadbw
pushf
jle
loop
js
sub
push
mov
imul
pop
sub
push
push
js
xchg
mov
movsb
jle
out
cld
push
mov
lds
sub
pushf
jg
or
sbb
insl
insl
fs
dec
std
imul
jle
pop
aam
or
mov
movsb
mov
xchg
and
dec
push
pop
mov
xor
lods
movsb
fadds
jb
fwait
cwtl
sarb
pop
ret
push
jge
pop
out
mov
lcall
lea
xor
dec
fisubl
fwait
jno
bound
lahf
jo
iret
gs
lods
pop
cmp
inc
inc
cs
scas
xor
repz
insl
sub
dec
in
call
sbb
jo
push
rolb
stos
pop
cli
adc
push
ljmp
xor
js
or
cmp
in
sub
fisubrl
sub
fs
imul
mov
cltd
sbb
shll
jo
mov
push
pop
push
std
imul
jbe
or
inc
repz
or
nop
fmulp
jl
mov
mov
out
jg
sahf
mov
add
es
mov
into
and
lods
jns
fiaddl
push
cli
jnp
adc
out
call
mov
fs
mov
mov
pop
jmp
xchg
in
cmovnp
mov
lea
int3
xchg
orb
cmp
sbb
daa
movsb
mov
cltd
fisttpl
in
fs
jnp
mov
in
out
out
scas
rcll
cli
xor
outsb
jle
sub
or
cmpsb
dec
mov
dec
dec
dec
out
shll
sub
pop
fldenv
add
ds
movsl
jno
cli
cld
and
pop
sub
fs
jp
jg
lcall
cmpsl
aad
leave
ja
dec
push
xchg
int
test
cltd
icebp
dec
mov
inc
pmuludq
mov
js
sti
mov
out
mov
push
inc
jnp
or
dec
shrl
aas
or
daa
ljmp
pop
dec
and
mov
dec
fisttpl
inc
inc
fldt
hlt
add
pushf
lods
cmp
mov
cmp
jmp
data16
bnd
les
xchg
jns
js
ljmp
jle
sbb
into
mov
sahf
test
std
in
add
out
repz
sbb
repz
pop
push
das
pop
cmp
sub
fisubrl
sub
pop
fdivs
xor
hlt
lods
popl
test
sbb
xchg
jge
out
mov
sub
and
add
fists
ret
ret
and
push
push
aam
mov
outsb
jo
mov
jl
xor
stos
sti
stos
push
pop
inc
cmp
popa
fstpt
dec
out
push
cmp
imul
inc
jecxz
jp
pop
mov
adc
ficoms
fsubs
sbb
mov
test
int3
loop
cmc
mov
inc
xor
mov
sub
mov
aad
jp
mov
roll
fwait
in
or
out
aas
push
aad
lds
or
or
push
inc
dec
fdivs
dec
jns
mov
mov
addr16
movsb
lds
fdivs
pop
jle
xlat
pusha
lret
fs
or
ljmp
cmp
in
aas
mov
xor
mov
cwtl
cmovb
cs
xchg
bound
adc
mov
aam
jb
cwtl
das
mov
dec
out
fs
jp
into
pushw
push
cmpsb
jne
jg
inc
int
jo
dec
ja
jbe
or
enter
xchg
pop
cld
jbe
xchg
fdivs
fsubr
aas
cmp
mov
dec
or
loopne
sub
repz
ret
in
and
rorb
rol
cld
fcomps
faddl
aas
iret
lret
in
xchg
inc
lcallw
cmpsb
or
mov
out
mov
pop
rcrb
mov
dec
mov
gs
dec
call
mov
leave
push
insl
jl
pushf
subb
cmc
mov
dec
repnz
sbb
xchg
or
pop
push
pop
loop
insl
mov
xchg
ljmp
xchg
popf
inc
cmp
loope
das
movsl
xchg
stos
hlt
push
lock
add
pushf
cmp
inc
lret
jmp
xchg
sahf
sti
xchg
jnp
ljmp
or
or
stos
subl
pop
push
xor
movsl
cli
frstor
inc
or
imul
hlt
sbb
imul
sbb
sub
lods
fs
leave
dec
adc
or
mov
data16
imul
jmp
cmc
ret
inc
push
lods
xor
add
fbstp
xchg
push
jmp
sub
mov
sub
shl
dec
dec
xorb
outsl
sub
mov
fs
movsb
jne
shrb
sarb
test
mov
sahf
cmpsl
into
xchg
popa
push
jecxz
outsb
inc
iret
jl
lea
jnp
lods
int3
fsts
and
or
jp
jo
xchg
sub
repz
in
cmp
lock
mov
and
and
mov
push
cs
sbb
notl
test
gs
outsb
out
cmp
inc
cmp
iret
pop
xor
push
cmp
sbb
jno
arpl
cwtl
mov
data16
xor
mov
test
mov
sub
aas
sbb
pusha
add
sub
daa
ljmp
cmpsb
cmpl
std
adc
add
call
mov
mov
outsb
hlt
mov
jns
mov
push
out
arpl
dec
push
add
sbb
push
jp
sbb
add
repz
js
lret
pop
test
orl
jbe
and
outsb
dec
stc
imul
loope
fisubrl
js
int3
xchg
inc
mov
scas
rorl
or
movsb
je
jp
or
fldt
cmp
dec
aas
jo
loop
insl
cmp
mov
jae
sti
mov
lods
jno
fs
ds
aas
in
std
outsl
mov
int
cmpsl
add
movl
lea
lahf
sbb
cmc
repz
lods
jl
test
ffreep
push
mov
dec
or
fs
mov
outsb
andl
out
sub
xchg
push
sahf
sub
xor
cmp
in
add
inc
lock
mov
mov
fnstsw
inc
add
cmp
mov
adc
sub
pop
sbb
imul
inc
aad
xchg
push
cmp
insl
daa
loop
movsb
jbe
inc
testl
dec
jnp
mov
inc
lcall
xor
pop
mov
mov
adc
aaa
dec
sahf
pop
rcr
fdivs
cmpsb
or
int3
or
push
out
mov
sub
out
aad
and
push
jl
mov
ss
push
or
stos
fisubs
addr16
in
jecxz
fimull
xchg
jno
movsb
cli
mov
adc
push
outsb
add
jmp
cwtl
dec
movsb
push
rorb
xlat
mov
ja,pn
push
push
dec
sbb
pop
xchg
shll
test
cwtl
rcll
test
inc
jns
cmp
shrb
loope
jl
adc
xchg
jno
adc
fisttpl
or
jo
movsb
cmp
add
sbb
pusha
sbb
sub
jae
push
sub
mov
or
inc
lret
and
cmp
ljmp
outsl
je
cmc
daa
sbb
mov
jns
cmpsb
inc
fldenv
lcall
pop
jle
and
mov
mov
jp
cs
scas
into
das
jl
jbe
push
pop
lret
daa
cmpsl
inc
dec
pop
pop
cwtl
aad
xor
mov
test
cmp
mov
popa
ljmp
and
mov
sbb
push
dec
adc
mov
or
push
dec
dec
sbb
xor
movsl
mov
test
pop
aam
scas
add
incb
std
jl
sub
mov
xor
fadd
add
insb
dec
add
daa
sbb
ret
cmpsl
sahf
cwtl
inc
call
scas
push
and
sub
or
sbb
in
cmp
cmp
rcl
fidivrl
outsl
into
add
jg
mov
lret
jne
ret
outsl
sub
out
aas
stos
pusha
jecxz
or
jo
les
out
outsb
ljmp
mov
cld
iret
adc
mov
shlb
aad
lods
push
and
dec
mov
cld
ss
fstl
sbb
sbb
add
adc
das
adc
push
pop
shrb
cmp
add
mov
pop
mov
insl
mov
push
mov
je
push
rorb
cmp
jo
push
das
ljmp
adc
xor
fs
pushl
je
add
jns
ja
sub
push
xor
jns
mov
shrl
and
pop
es
jmp
loop
vsqrtpd
out
mov
adc
and
cli
bound
dec
lea
sbb
xor
dec
in
mov
std
and
sub
mov
lret
or
sti
iret
sbb
and
jne
test
cwtl
cmp
mov
orb
mov
mov
xchg
dec
fwait
jle
cmp
in
add
push
test
js
pushf
xchg
mov
xchg
fisttpll
or
push
lds
sahf
dec
lret
dec
mov
add
pop
mov
movl
fdivr
add
dec
shrl
lds
pop
ljmp
in
lret
mov
repnz
ds
repnz
mov
mov
add
sbb
mov
push
dec
das
or
sbb
adc
pop
lods
ss
push
out
jnp
or
and
fistps
fwait
pop
xchg
imul
xor
ja
push
and
mov
inc
mov
mov
inc
sub
mov
jae
sbb
add
sqrtps
inc
add
add
sbb
pop
inc
mov
jg
sub
sbb
cmc
xlat
cli
xchg
out
sub
iret
jb
mov
push
xorl
aas
or
movsb
dec
jne
push
jle
fnstenv
rorl
adc
lods
data16
out
sub
mov
jp
aaa
mov
sub
pushf
inc
int
fs
imul
adc
mov
jb
movsb
mov
int3
sti
cmpsb
lahf
pop
or
push
mov
sub
mov
mov
sahf
xchg
les
fstl
add
lea
dec
out
das
mov
jl
addr16
inc
clc
sbb
ss
daa
icebp
out
imul
push
mov
mov
ds
push
faddl
clc
stos
push
rorb
mov
push
jp
pushf
inc
inc
fadds
push
ljmp
aaa
adc
lret
addl
sti
mov
inc
shrl
test
sub
lds
hlt
pop
mov
sub
dec
pop
dec
pop
outsb
dec
stos
jbe
or
jb
sbb
xchg
dec
divb
sbb
test
popa
xor
lock
sbb
ret
mov
push
or
repz
fiaddl
mov
cmpsb
pop
pop
aad
iret
les
stc
jp
xor
fucom
xchg
sub
jmp
and
and
je
fdivr
insl
fidivs
or
jo
pop
sub
jns
sub
loope
fcmovb
cli
cmpsb
fildll
inc
push
in
xor
loop
jae
fmuls
in
test
mov
mov
js
mov
rcr
ret
mov
or
std
mov
outsb
sub
cwtl
out
pop
push
mov
sub
ljmp
jg
cli
insb
push
incl
cmp
dec
or
mov
js
loop
mov
mov
adc
dec
fs
mov
in
repz
mov
mov
cli
dec
test
mov
movsl
sarl
mov
out
cltd
inc
jbe
or
aas
ss
lock
push
jnp
clc
dec
cmp
add
das
mov
pop
cmpsb
xchg
into
pop
dec
push
loop
ss
pop
lret
enter
adc
mov
sub
mov
push
xor
inc
dec
sti
roll
iret
shr
dec
popa
mov
fs
push
movsb
jae
fsubrl
add
push
in
cmp
sbb
mov
hlt
es
jl
xor
sub
sbbl
dec
loopne
call
and
cmpsb
push
xchg
movsb
imul
pop
enter
mov
pop
or
or
mov
pop
into
loope
lcall
and
pop
jno
push
cmp
jo
fildll
cmc
jp
fs
xor
mov
mov
inc
cmp
icebp
std
adc
or
sahf
stos
push
aas
jg
dec
in
pop
imul
test
jp
es
sti
lret
stos
and
js
lods
push
pop
pop
hlt
jo
outsb
push
fidivrl
dec
mov
insb
xchg
das
out
les
push
mov
lcall
jle
lahf
push
sbb
xchg
fadds
xor
fdivp
movsb
add
xchg
rolb
pop
dec
insl
add
pop
inc
sub
das
movsb
or
cwtl
xor
sbb
and
je
lea
inc
add
fs
mov
dec
leave
dec
inc
push
fs
inc
lods
enter
pushf
test
pop
adcl
inc
push
mov
jne
mov
lock
sub
fidivs
xorl
or
jmp
xlat
addb
or
aam
push
ljmp
inc
cltd
mov
add
clc
clc
and
out
xor
fidivrl
fisttps
ljmp
mov
jp,pt
inc
dec
out
pop
andb
dec
pop
decb
nop
sub
aaa
cld
adc
jae
mov
insl
and
incl
movsb
xor
testb
out
scas
pushf
jno
pop
jbe
sarb
movsb
mov
jp
mov
adc
stos
fsubs
mov
ror
pusha
scas
clc
inc
xchg
pop
js
and
jno
movsb
push
jmp
and
cmp
insl
mov
add
or
stos
adc
fmuls
pop
jle
add
cmp
idivb
dec
inc
pop
sbb
lock
add
and
inc
cli
and
pop
lds
and
lahf
or
cwtl
int3
in
lods
dec
and
shrl
pop
lret
mov
loopne
mov
pop
dec
outsl
sahf
adc
pop
imul
pop
pop
add
mov
mov
and
inc
push
jns
std
add
lods
aas
leave
jo
js
lods
mov
mov
jo
stos
mov
sbb
jg
aam
jl
into
aas
and
adc
stos
stos
nop
psubusb
xor
popf
mov
push
sub
jnp
sbb
mov
popf
es
mov
dec
xor
inc
fldl
cmp
adc
call
aam
fwait
mov
mov
mov
xor
pusha
mov
scas
jne
stos
jb
adc
lret
push
imul
add
mov
stos
cmpsl
lret
cmp
mov
outsb
js
or
out
and
rcrb
dec
and
scas
xchg
and
test
pop
imul
jmp
xchg
jp
xchg
jns
je
jno
pop
popa
inc
sub
shlb
lock
inc
add
mov
data16
pushf
jecxz
in
add
mov
ret
pop
jmp
mov
add
dec
dec
js
sarb
push
movsb
outsb
insl
pop
cmp
inc
addr16
repnz
cmp
cmpsl
push
lret
dec
or
sahf
sar
pop
push
fildll
mov
mov
add
fld
mov
test
dec
dec
pop
imul
movsb
in
mov
sub
mov
fists
ljmp
adc
and
repz
xchg
fmulp
enter
push
sub
inc
pop
and
xchg
inc
gs
out
fs
cld
and
enter
bound
xchg
sub
cli
movsb
cmp
lods
mov
fs
adc
sbb
mov
lods
mov
sub
cmp
out
adc
inc
iret
jns
sti
xchg
cwtl
jecxz
cmp
das
mov
dec
dec
cmp
fs
shll
add
fidivs
andl
lods
and
sub
jbe
clc
in
dec
dec
shlb
das
add
dec
cwtl
jmp
int
sub
fs
add
mov
stc
gs
aam
mov
rcr
sub
outsl
lods
in
mov
push
fs
sbb
call
in
adc
push
mov
imul
mov
xor
aad
cmp
jne
enter
mov
lret
mov
mov
std
jmp
adc
push
push
sbb
sbb
mov
adc
stos
movsb
cld
ds
sbb
into
sbb
ljmp
jne
xchg
jp
insl
lret
xchg
inc
xor
jg
or
test
dec
cmp
fs
movsb
mov
fwait
into
sbb
inc
add
add
cmp
add
das
js
dec
sar
sub
mov
xor
sbb
sub
jle
inc
mov
or
fwait
in
add
inc
lods
sub
mov
in
mov
add
jge
andb
rcrb
push
gs
fidivs
cli
fs
repz
jle
jbe
ss
cmpsl
fxch
sbb
sbb
mov
cltd
std
adc
cmp
cmp
fld
jb
lods
fs
xchg
lahf
xor
cli
mov
sub
out
mov
jg
jb
outsl
int3
ljmp
ss
jg
test
das
rorb
out
mov
test
inc
or
ljmp
ret
shll
stos
cwtl
movsb
ret
pop
dec
adc
sub
scas
cltd
rclb
fs
out
stos
dec
push
push
jmp
stos
or
mov
mov
mov
jne
js
lods
cmp
sbb
cmpsl
xor
int
xchg
jle
cmp
in
pop
push
xor
ret
or
cltd
adc
xlat
test
cmp
add
cmc
arpl
cltd
cmc
popa
dec
shrl
sub
jbe
call
ljmp
xor
mov
out
jbe
imul
out
movsb
xchg
sub
call
out
movsb
mov
xor
mov
arpl
sbb
loop
mov
jnp
outsb
push
stos
pushf
shrb
rcr
mov
movsb
push
call
jnp
pusha
das
inc
lods
rcll
gs
xchg
push
insl
xchg
fisttpl
seto
neg
cmp
pop
js
imul
outsl
jmp
dec
jl
push
cld
inc
jmp
push
mov
pusha
out
mov
jbe
dec
and
call
xlat
in
mov
pop
xchg
stos
xchg
mov
jle
mov
jg
sbb
pushf
iret
jle
push
mov
hlt
sub
adc
clc
dec
insb
jnp
into
pop
jo
mov
ljmp
mov
pop
cmpsl
iret
test
movsb
sar
call
into
enter
cwtl
mov
push
fildll
ficoms
lcall
dec
fsubs
inc
call
lahf
push
jecxz
push
xchg
lret
int3
pop
add
mov
filds
fcoml
pop
xchg
outsb
fiadds
iret
mov
fcoms
sub
push
ficomps
call
fwait
xor
lahf
pop
mov
or
loop
fisubrs
lret
sub
movsl
in
shr
inc
xchg
mov
das
add
aaa
movsb
out
int
jns
fmuls
sbb
cmp
dec
ret
test
pop
ss
aaa
lods
add
scas
xchg
cltd
sti
lods
jecxz
stos
push
sbb
sub
fsts
clc
fists
mov
aas
jbe
packuswb
shlb
testl
imul
xor
inc
iret
jbe
shl
and
jbe
xor
adc
inc
mov
into
ds
pop
repz
lcall
imul
jp
push
mov
mov
adc
add
sub
out
xchg
lods
enter
jbe
lock
jp
add
mov
jmp
rcrl
bnd
or
lods
sbb
ret
mov
push
cld
adcl
mov
pop
push
in
insl
xchg
sub
adc
int
into
sub
push
mov
in
jnp
xchg
add
test
into
push
xchg
or
push
loope
jb
lods
out
out
stos
aam
push
mov
lds
push
fstps
xchg
fsts
mov
mov
stc
pop
push
out
lahf
fprem
mov
ja
movsb
lret
out
mov
pop
inc
cmp
fs
add
loop
jne
mov
fs
pop
jnp
lods
inc
sbb
insb
sbb
sub
inc
ds
jns
std
das
push
pop
outsb
xor
aam
sbb
int
inc
push
and
inc
jbe
and
push
adc
daa
dec
dec
movsb
lock
test
jnp
jns,pn
and
pop
xchg
lock
lcall
mov
xchg
iret
sub
in
repnz
fidivrl
fs
out
int
xlat
pop
jl
mov
xchg
xor
mov
jge
repnz
lods
stos
out
bound
subb
gs
decl
sub
mov
lods
repz
or
pushf
xchg
ss
mov
add
mov
test
sti
cmpsb
push
fwait
fs
and
push
loope
cmpb
mov
mov
mov
add
mov
sti
push
sub
incl
and
out
dec
pop
mov
sbb
shll
cmp
inc
sbb
mov
cltd
add
lcall
inc
lret
mov
xchg
cmc
dec
adc
dec
shrb
das
add
or
lcall
outsb
sub
pop
mov
outsl
xchg
call
loop
or
fnstenv
pop
add
into
pop
add
xor
gs
shll
lea
imul
dec
cld
clc
in
sbb
pop
xchg
cld
and
mov
ss
cmc
sbb
dec
int
test
fsub
sbb
xchg
inc
and
dec
mov
sub
repnz
adc
push
inc
test
sub
mov
push
test
add
xor
ret
dec
mov
jae
aas
fsubrs
mov
mov
xchg
inc
fsubrl
or
scas
push
mov
into
mov
loope
dec
outsb
xor
out
outsb
fcomps
fdivrs
adc
lcall
lock
arpl
ret
iretw
mov
orb
adc
outsl
jb
pop
cwtl
movsb
push
mov
mov
insl
push
sbb
imul
inc
add
jp
xlat
arpl
outsb
mov
lcall
xor
das
ficoml
dec
cld
push
lea
pop
ja
lods
aad
out
or
dec
adc
pop
pop
test
insl
mov
in
push
xor
jl
leave
or
inc
sub
mov
inc
jp
pop
cld
push
xchg
inc
sub
in
mov
in
sub
std
add
xchg
xchg
out
lods
popf
push
mov
aam
or
movsb
in
push
push
inc
push
pop
je
bound
aaa
xchg
scas
jle
or
jae
imul
and
mov
out
sbb
mov
mov
inc
adc
ljmp
jg
in
rorb
incl
add
cmc
cltd
rorl
mov
fiadds
push
xor
stc
mov
inc
out
out
xor
cmc
or
call
jnp
aas
dec
or
fs
test
mov
movsb
aas
add
imul
out
out
arpl
dec
fcmovnb
xor
insl
mov
lea
std
cli
lcall
repnz
sti
inc
in
bound
fidivs
ss
loope
push
mov
pop
int3
pop
or
mov
cmp
pop
mov
imul
insl
ret
lock
fdivrp
and
sbb
sub
insl
aas
xchg
inc
pop
or
jne
int3
leave
mov
stc
aad
jmp
sbb
pop
sub
fcmovbe
sbb
pop
in
repz
mov
mov
test
bound
ss
in
aas
pushl
xchg
test
fs
jne
mov
arpl
dec
and
cmpsb
lret
out
mov
shr
mov
inc
sbb
pop
jmp
stc
jecxz
mov
into
mov
inc
fs
sub
add
fidivrs
frstor
xlat
stc
push
scas
mov
and
bnd
xchg
test
scas
rorl
sub
je
rclb
or
test
jbe
sbb
stos
add
push
jge
sub
in
mov
movsb
lods
sbb
outsl
xchg
stos
inc
push
mov
pop
mov
lock
add
inc
outsb
icebp
or
cli
lods
test
pop
pusha
xchg
jb
scas
jno
int3
dec
mov
push
icebp
inc
stos
outsl
negb
lret
inc
vucomiss
mov
inc
adc
mov
dec
jmp
lods
jecxz
cmp
xlat
inc
and
xchg
pusha
xchg
adc
popl
test
inc
or
add
jle
jb
sbb
loopne
jge
lods
and
push
sub
leave
out
xor
push
adc
xchg
std
cmp
dec
mov
inc
jo
leave
fnstsw
jmp
push
pop
out
ret
mov
adc
xlat
leave
into
jl
or
xchg
lcall
xchg
das
or
sub
mov
and
xchg
imul
jle
js
divb
jne
adc
std
pop
sbb
push
in
int3
xchg
xor
mov
xor
jge
xor
mov
xchg
lods
inc
les
xchg
popa
sub
add
lret
push
jnp
mov
pop
pop
add
movsl
adc
xor
pusha
sbb
jle
and
lds
inc
fsubr
cld
sbb
sbb
js
fmuls
and
add
movsb
xchg
cmp
jns
enter
xchg
jne
shl
sbb
fwait
movsb
mov
fisttps
push
and
sbb
mov
mov
sti
jp
loopne
adc
repnz
std
daa
stc
mov
pop
add
inc
push
inc
xor
arpl
stos
cs
mov
dec
pop
mov
adc
sub
xor
pop
aaa
out
inc
dec
push
mov
inc
add
lret
fxch
sbb
repnz
cmpsb
leave
pop
jae
arpl
sub
or
mov
in
jecxz
in
jg
int
insl
mov
push
xchg
bound
mov
or
call
roll
out
inc
imul
push
push
mov
das
call
lea
outsl
sub
movsb
cwtl
or
mov
fs
or
add
jmp
nop
fldcw
push
cli
and
mov
push
inc
jle
sub
or
or
cmc
shlb
mov
push
jns
ret
xor
sbb
xchg
cld
loop
out
and
adc
cs
lahf
loop
mov
imul
lods
cwtl
add
lahf
mov
inc
enter
mov
cs
ret
je
push
and
sub
ret
imul
mov
adc
int3
adc
sub
mov
int3
imul
cltd
sub
sbb
mov
cmp
in
jbe
stos
mov
enter
mov
inc
mov
dec
mov
insb
mov
pushl
xor
sbb
xchg
sub
jle
fildll
insl
push
mov
xchg
ja
scas
push
inc
inc
lret
into
mov
fldcw
ss
int
sbb
and
int3
ljmp
add
dec
fs
std
inc
jnp
xlat
out
test
enter
or
adc
mov
inc
dec
ret
cli
fs
adc
sbb
inc
pusha
or
in
xor
xchg
mov
and
or
dec
xchg
les
stos
fsubrs
cmp
xchg
add
lods
cli
je
mov
mov
test
stos
lods
lret
imul
dec
inc
lds
xor
or
sub
dec
add
in
nop
pushf
lock
ret
jne
out
add
cmc
xchg
scas
jle
fmull
push
push
test
xor
movsb
sahf
lret
cwtl
push
dec
jle
pop
aam
out
in
or
iret
ljmp
xchg
dec
loop
je,pt
dec
push
stc
mov
and
or
fs
rcrb
fistpl
xor
in
jmp
mov
pushf
stc
out
loop
xchg
enter
xor
cli
shrb
stos
scas
mov
js
push
jmp
jp
jp
sub
sub
insl
or
xchg
nop
adcl
ds
mov
adc
test
xor
dec
add
dec
add
mov
jp
xchg
shrl
fs
aaa
aas
push
in
push
cmc
sbb
xchg
out
lods
stos
sbb
mov
inc
pop
test
sbb
lods
push
sbb
sbb
movsb
lahf
inc
in
gs
movsb
push
cld
repnz
negl
sbb
or
lock
push
adc
lret
arpl
nop
xchg
mov
arpl
enter
cmpsb
movhlps
adc
pop
inc
iret
imul
stos
sub
subl
dec
sub
insl
mov
in
pop
enter
daa
repz
push
xor
pushf
or
addr16
and
les
push
adc
jg
rcll
mov
test
call
adc
int
stos
pop
mov
cwtl
pop
lods
pop
insl
mov
inc
cmpsb
jbe
fdivs
rcrl
or
xor
push
int3
mov
fadds
js
addl
pop
outsb
fisttpl
ljmp
or
cld
mov
or
fisubl
and
mov
push
ss
gs
imul
call
pusha
lods
faddp
adc
push
pop
orb
nop
jg
dec
sarl
add
pop
cmp
sahf
jp
cs
sbb
lea
xchg
bound
fdivrl
sar
ds
mov
gs
lahf
lods
or
inc
mov
leave
inc
xchg
jmp
sub
and
test
or
xor
call
imul
in
sbb
sub
imul
pop
pop
out
movsb
dec
and
adc
sahf
out
push
notb
jecxz
xor
pop
loop
mov
add
lahf
gs
adc
mov
enter
jo
movsb
cltd
xor
mov
xchg
push
loope
popf
xor
fdivs
add
mov
fwait
mov
xor
push
xchg
ficoml
out
jge
cmp
cld
or
pop
sbb
cmpsb
sub
add
cli
fcomps
loopne
sub
lock
mov
sbb
lret
or
call
pop
fsubrp
sub
mov
and
dec
mov
outsb
subl
sub
sbbl
or
mov
leave
mov
jmp
loopne
cli
shrb
jno
daa
lods
movsb
fistpll
sbb
pop
ficompl
add
fmull
jle
dec
popf
mov
test
xor
loop
add
push
sbb
and
sub
lcall
adc
imul
or
in
mov
sbb
out
xorb
xor
jle
lods
cs
mov
fists
rcrb
add
aaa
test
fs
das
repnz
adcb
xchg
mov
inc
lods
flds
sub
mov
sarl
push
hlt
repnz
cld
fidivrl
stc
sub
pop
fmull
pushf
jns
les
shrl
out
scas
sub
and
imulb
imul
fidivrs
cmp
or
add
mulb
or
ds
push
add
out
in
or
stos
shl
inc
push
mov
cltd
mov
push
repnz
fs
mov
sbb
add
sbb
jmp
adc
pop
adc
std
shll
add
xor
pop
mov
push
sub
leave
jle
ss
inc
add
or
cwtl
sbb
sbb
mov
out
std
add
inc
jno
xchg
loope
push
jbe
call
repz
add
in
adc
ljmp
lods
mov
xchg
jne
xor
jo
aam
xchg
push
pop
mov
mov
inc
les
ficomps
mov
faddl
dec
adcb
in
clc
int3
pop
inc
push
pop
inc
std
out
sbb
jne
insl
lret
xor
cmpsl
lods
mov
inc
pushf
es
aas
ret
mov
lods
andb
jp
mov
sbb
ljmp
fisubrs
jnp
imul
cmp
pop
icebp
movsb
add
push
add
xor
gs
psadbw
cld
stos
fs
sub
jbe
mov
jno
add
lret
mov
addr16
das
mov
push
out
dec
dec
fs
and
daa
hlt
nop
xor
mov
fmuls
add
sbbb
and
pop
punpcklbw
jnp
dec
add
movsb
aad
shrb
jl
fcoml
jae
mov
das
jl
jp
cwtl
jns
xchg
dec
out
notl
outsb
fldcw
add
pop
jne
push
push
int3
mov
jp
push
sub
push
sbb
out
xchg
cld
mov
out
sbb
stos
lods
lret
and
rcrb
insb
inc
jl
and
shlb
bnd
orl
xor
aad
push
fcoms
jb
xor
cmpsb
xorb
dec
fldl
stos
jnp
ss
out
mov
cli
cmp
lahf
lret
es
jmp
xchg
pop
and
aas
adc
sbb
mov
dec
jp
enter
mov
mov
iret
jbe
arpl
jge
push
sub
loop
in
push
sub
sub
mov
jmp
sahf
ss
lahf
outsb
imul
daa
adc
inc
icebp
sbb
fadd
ret
xchg
das
or
cmp
cmc
fisubrl
xchg
jg
mov
sub
xor
iret
jae
out
fs
jno
sub
in
xchg
lds
arpl
movups
sar
pop
adc
dec
divb
push
dec
push
bswap
mov
mov
xor
and
inc
mov
lret
mov
call
jns
pushf
adc
mov
scas
cmpsb
in
fisubrs
jl
xchg
adc
fsts
ficoml
gs
movsb
mov
leave
cmp
push
cmp
cmp
imulb
push
cmpsb
into
push
sti
cmpsl
pop
jbe
es
repnz
mov
incl
mov
ds
pop
scas
fwait
jl
inc
and
jnp
cmpsb
fisubl
xchg
mov
addb
movsl
cmp
int
sub
jno
and
or
shll
pop
das
out
adc
stos
cli
and
shld
loope
add
xchg
push
jnp
fisubs
repnz
lds
pop
ds
lods
popa
dec
xchg
pop
and
sub
call
cmpsb
hlt
add
adc
imul
jge
jno
popl
jo
sbb
out
bound
pop
cltd
imul
fs
or
addb
jmp
lods
inc
inc
pop
pop
cli
mov
popa
popa
xchg
les
sub
faddl
dec
repz
ds
sub
pusha
ret
inc
sub
dec
ret
pop
or
push
and
sub
jns
mov
gs
pusha
cltd
push
xchg
aam
repnz
in
pushf
jecxz
cmc
gs
lods
pop
movsb
imul
dec
sti
sbb
enter
mov
ret
push
sub
insl
inc
movsb
push
rcr
mov
fs
mov
adc
dec
lods
in
data16
test
mov
dec
test
mov
jnp
stc
dec
push
popf
into
mov
cmpsl
idivb
fisubs
mov
outsb
test
mov
mov
mull
push
aas
adc
out
lods
mov
sbb
sbb
popa
inc
fstps
mov
movsb
rcr
addl
subb
dec
jmp
loop
aad
jecxz
jae
ljmp
fldcw
xchg
rclb
jmp
out
inc
or
fs
sub
or
add
lods
lods
xor
pop
ss
orl
and
xlat
repnz
sub
lea
jnp
loopne
aad
test
repnz
mov
inc
mov
jp
inc
cmp
cmp
out
movsb
inc
insl
fs
fists
inc
sbb
sub
mov
mov
mov
imul
push
lret
and
fdivr
mov
fidivrs
iret
in
sbb
test
pushf
loope
and
push
ljmp
lock
mov
xchg
jp
jg
aad
xchg
sbb
lret
inc
shll
mov
rorl
sbb
aad
adc
cld
sub
mov
enter
jb
sti
sbb
lods
insl
jmp
or
les
cs
insb
sti
add
sahf
rcll
dec
pop
call
xor
rcrl
sub
and
pop
inc
shlb
jne
cld
mov
mov
cmp
xor
je
jl
mov
in
inc
shlb
xor
pop
incb
mov
dec
je
incb
jl
mov
xchg
pop
xor
xchg
sbb
cmp
dec
xchg
sbb
call
outsl
fsubrl
in
sarb
pushl
and
mov
outsb
int
gs
sahf
mov
iret
adc
jl
push
out
jmp
push
xchg
xorl
nop
popa
stos
mov
scas
jmp
leave
jne
sti
rorb
pop
loope
pop
add
jle
push
test
dec
cs
push
loopne
nop
dec
pop
out
sahf
pop
inc
stos
fcmovu
dec
jne
mov
shrl
xor
sbb
sbb
shlb
cmpsl
and
sbb
jo
push
movsb
add
adc
mov
fs
lods
inc
mov
dec
movsb
in
sti
mov
mov
inc
xor
je
in
adc
adc
adc
ret
lcall
int
adc
popf
push
movsb
ss
jl
or
bound
mov
lods
sub
andl
mov
mov
out
mov
lock
inc
mov
or
pop
call
fldenv
dec
rcrl
mov
imul
std
add
daa
mov
das
aas
lods
inc
aad
xchg
mov
in
cmpsb
test
test
fsub
sbb
iret
jp
insl
pushf
out
mov
xchg
dec
mov
lods
out
movsb
je
std
cltd
mov
xor
sbb
jbe
dec
fcompl
add
push
cmpsl
jp
cmc
xlat
xchg
add
push
mov
test
dec
mov
sbb
dec
repz
or
scas
jb
xor
cwtl
idiv
jnp
add
jb
aam
cltd
lds
xchg
shll
aas
push
or
fsts
mov
fdiv
xor
mov
movsb
fidivs
mov
fwait
ret
and
aaa
mov
jo
mov
pusha
iret
test
rorl
fs
mov
rolb
cltd
lea
jecxz
cs
inc
shlb
mov
inc
mov
pop
popf
stos
rorl
jne
pushf
loope
fcomps
dec
outsb
lea
mov
mov
lock
arpl
xchg
out
or
jbe
or
inc
lods
sbb
add
push
sub
sbb
push
mov
xchg
adc
addr16
sbbb
stos
push
repnz
imul
sub
js
sub
fnstcw
lret
movsb
cmp
push
mov
dec
lcall
fsubs
cmc
out
rolb
movsb
pop
mov
dec
mov
adc
in
in
adc
push
lods
shlb
hlt
andb
or
inc
cltd
nop
add
clc
loop
lods
jae
lods
mov
rcr
lods
stos
pushf
dec
test
cwtl
mov
mov
aas
add
mov
fildl
dec
sbb
dec
inc
add
ljmp
add
xchg
push
leave
rclb
imull
mov
and
push
sbb
jae
cmp
adc
pop
cltd
sbb
cmp
fidivrl
push
call
iret
lret
fwait
inc
iret
popf
push
mov
ljmp
call
inc
lods
mov
pop
in
movsb
xor
call
cwtl
ret
dec
loopne
sbb
or
mov
test
inc
mov
roll
jbe
pop
call
mov
jo
sahf
lret
or
inc
aam
xor
xchg
sbb
call
jne
mov
inc
lcall
cwtl
jg
movsb
dec
sbb
add
hlt
xor
inc
and
insl
mov
les
mov
ja
inc
inc
mov
sbbl
fs
into
aam
adc
imul
jb
les
decl
jl
mov
call
ficompl
pushf
pop
bound
xor
dec
push
fcoml
xor
cmp
mov
xchg
mov
mov
sbb
stc
iret
fidivrs
xchg
pop
test
pop
lret
cltd
sub
jnp
into
insb
and
push
ss
push
std
push
stos
inc
aaa
jo
enter
pop
dec
orl
jmp
test
fcoml
sub
in
rcrl
repnz
sarl
push
pop
mov
test
jne
or
movsb
and
bound
cmpb
js
rcll
out
loop
mov
stos
jg
jns
lret
dec
jo
scas
call
sub
xchg
test
cwtl
sbb
lcall
xchg
push
cmp
lahf
cli
jb
jecxz
xchg
pop
es
pop
inc
sarl
call
ljmp
inc
test
loop
es
cmpsb
cmp
movsb
aam
xchg
cmp
jbe
inc
in
inc
mov
xchg
clc
lea
mov
arpl
lahf
mov
lcall
xchg
fildl
sbb
fimuls
ret
cltd
sbb
push
mov
xor
test
add
mov
jbe
aad
cld
mov
mov
data16
stos
inc
out
imul
sub
or
in
xchg
in
fidivrl
dec
pushf
and
push
mov
out
mov
sub
lea
dec
xchg
inc
sbb
mov
fiaddl
xchg
addr16
fdivs
mov
adc
outsb
scas
mov
sub
leave
mov
inc
je
dec
icebp
fdivl
push
sub
and
repnz
mov
add
xchg
sub
imul
jge
fs
mov
or
add
testb
mov
jo
lret
fbstp
stos
inc
fs
mov
pop
hlt
xor
adc
das
pop
jp
jbe
movsl
mov
out
iret
cmpsb
loop
rcrl
inc
ffree
jbe
and
jle
stos
sahf
xchg
dec
cmp
lods
loop
bound
movsb
xor
mov
imul
decl
test
mov
mov
cltd
std
fwait
adcl
pop
add
sbb
inc
lods
fnstcw
je
imul
sbb
mov
push
jbe
or
sbb
add
movsb
pop
imull
ja
cltd
lock
mov
push
mov
dec
fcmovnbe
gs
imul
shll
inc
stos
or
mov
push
leave
pusha
adc
xchg
sub
pop
loop
pop
push
das
jno
vcvtsi2sd
dec
testl
xorl
in
jae
sub
rcrl
xor
xchg
mov
je
stos
repnz
test
add
lods
int
inc
outsb
rcl
or
out
dec
adc
mov
or
xchg
das
push
imul
sahf
cli
sub
lahf
stos
fcoml
dec
fcmovbe
ficoml
rorb
or
jge
imul
insb
ja
lods
cltd
or
dec
stos
leave
adc
jmp
pop
into
jbe
addr16
movsb
push
xchg
jl
lret
sahf
cmpsb
outsb
ds
in
out
je
adcl
jne
jns
pop
mov
mov
daa
pushf
xor
repz
or
xchg
repnz
into
pusha
out
test
xor
std
movsb
and
movsb
sbb
adc
inc
push
loop
mov
movsb
add
jmp
outsl
rcll
jo
dec
pop
pop
push
data16
push
nop
fadd
pop
stos
jmp
iret
cwtl
sbb
dec
movsb
ds
in
in
lea
sub
dec
and
jp
andl
push
cmp
iret
jb
jp
inc
inc
out
add
aad
sahf
cwtl
jo
lods
cmp
jnp
push
sub
pop
outsb
and
jg
decb
ret
or
xchg
jns
aam
divb
jns
xchg
addr16
mov
xor
stos
mov
lea
mov
adc
inc
or
incl
mov
rcrb
cli
pop
dec
mov
cmc
add
push
and
jne
xchg
mov
jle
subl
pop
push
mov
xchg
push
loopne
push
fs
lock
mov
outsl
int3
test
fimull
xor
inc
int
movsb
cmp
mov
cmc
lcall
dec
push
icebp
xchg
fwait
cmpsb
aaa
stos
and
insb
xlat
push
call
xchg
sbbl
sbb
mov
sub
xlat
ljmp
push
mov
adc
std
pushf
pop
xchg
mov
jo
inc
adcb
push
rcr
icebp
sbb
jle
mov
xchg
sub
lret
xor
fidivrs
xlat
out
icebp
xchg
push
stc
ljmp
lea
test
xchg
insb
es
pop
or
inc
adc
sub
das
movsb
push
adc
out
fs
jb
xchg
mov
fbld
addr16
stc
or
outsl
pop
xchg
cmp
push
sbbb
mov
push
imul
in
add
xchg
push
add
sub
mov
pop
jp
fcoms
iret
and
aam
lea
es
cwtl
pop
dec
outsb
cs
insl
xchg
push
fsubrs
inc
push
dec
jmp
lock
jno
inc
xchg
adc
out
fs
enter
out
outsl
or
aad
iret
ret
jecxz
out
and
popa
popf
jl
mov
push
inc
ficomps
jge
add
es
out
fucomp
lahf
out
fwait
push
jge
rcr
imul
mov
mov
idiv
fs
popa
push
out
add
jecxz
jbe
aas
call
ljmp
xor
imul
daa
lods
sbb
xlat
push
ja
ljmp
cli
dec
rcr
and
cmp
inc
jge
push
dec
scas
ret
mov
pushf
and
lods
outsb
jae
out
push
push
jbe
xor
or
xchg
jl
movsb
sub
fdivs
pop
xchg
xchg
stos
icebp
ss
addb
adc
push
pushf
xchg
testl
nop
jne
sub
stos
fistpll
cmp
test
cmc
testl
hlt
cltd
insl
shll
ret
mov
shrl
outsb
cmp
add
filds
fstps
shrl
dec
les
and
js
mov
pop
popf
je
push
setb
pop
ret
fnstcw
mov
iret
jns
add
pop
shl
lcall
or
bound
cmp
pop
fsubr
jg
xchg
loopne
jbe
idivb
dec
dec
push
imul
imul
in
in
inc
xchg
mov
js
das
adc
mov
idivb
mov
or
xchg
enter
sub
fisttpl
sub
out
adc
pop
push
or
lods
movsb
js
xchg
jle
jmp
mov
ja
test
ss
lret
cmpsl
in
push
nop
ficoms
in
pop
jp
divb
outsl
mov
pop
sbb
test
push
push
sbb
jne
sub
arpl
jecxz
cmp
into
imul
sub
ljmp
lret
outsl
inc
inc
cli
adc
lea
push
in
orl
cmpsb
loop
movb
fwait
pop
pop
or
std
push
dec
jge
iret
clc
out
or
dec
int3
cwtl
lods
lret
pop
jae
pushl
push
xchg
sub
jl
test
popl
outsl
inc
push
pop
out
mov
mov
mov
popf
fnstsw
cwtl
repz
dec
mov
ret
sub
pop
bound
adc
mov
pop
sub
mov
fs
fildll
dec
mov
cli
fsin
xchg
sub
mov
decb
lods
ljmp
xchg
push
out
stos
sti
imul
xchg
jle
iret
jge
pop
pushf
insl
cmpsb
mov
pop
add
cmpsb
jl
sub
imul
pop
adc
fs
fldcw
sbb
aam
dec
lods
test
stos
imul
cld
stos
xchg
mov
es
pop
inc
jmp
inc
sbb
fcmovnb
xlat
sub
sbb
mov
mov
mov
push
pusha
sahf
mov
daa
add
cmpb
imul
sub
in
mov
adcl
fists
insl
inc
test
cmp
out
ficompl
pop
insb
mov
and
or
mov
dec
jecxz
mov
sbb
cltd
ss
push
std
repz
fs
adc
pop
mov
xor
sbb
mov
repnz
xor
aas
lcall
xchg
xor
adc
movsb
or
ss
loopne
pop
or
leave
lock
xor
test
fs
leave
or
out
xlat
daa
push
daa
push
outsl
mov
lds
stc
cli
mov
xchg
int
xchg
test
pop
fs
mov
adc
mov
lock
js
pop
dec
adc
dec
ja
push
adc
and
pop
pop
xchg
mov
and
mov
nop
xor
or
and
mov
jl
mov
out
fs
add
insl
movsb
adc
sbb
push
cs
pop
push
pop
xlat
mov
movsb
out
test
pop
or
in
xchg
mov
push
xlat
pop
jo
lret
stos
cli
and
arpl
mov
scas
lret
and
ficoms
mov
mov
xorl
pop
mov
mov
les
dec
ret
imul
or
push
push
dec
jbe
jne
lahf
outsb
jp
fs
imul
cmp
enter
cmpsb
sbb
add
jmp
lret
dec
sub
sbbl
push
fnstcw
stos
faddl
dec
insb
fimuls
in
mov
sub
pop
daa
add
shr
sub
mov
js
mov
pop
jno
cmpsl
cmp
sbb
mov
stc
imul
jae
shlb
adc
popa
rolb
mov
inc
dec
cmc
push
enter
imul
sti
mov
push
jne
inc
jmp
dec
pushf
outsb
inc
cs
pop
mov
dec
out
sub
iret
jge
xor
push
decl
dec
jnp
fists
lret
aam
jmp
add
mov
ss
fs
mov
pop
out
sbb
arpl
adc
dec
adc
jg
sub
ljmp
sub
cld
test
xor
sub
cmc
cmp
jno
xchg
dec
testb
pusha
xchg
lods
and
sbb
test
repnz
and
je
cmp
in
push
dec
inc
pushl
adc
arpl
mov
cs
mov
or
sbb
cld
jae
push
lock
and
jecxz
xor
stos
xchg
sub
insl
cmpsb
sub
ja
xor
xchg
lods
aam
inc
aam
in
inc
scas
outsl
lret
jmp
cld
ja
test
out
imul
cli
pop
inc
xchg
push
dec
jnp
in
in
stos
mov
imul
cltd
sahf
cltd
xor
test
outsl
mov
imul
lret
fistpll
or
mov
les
mov
mov
and
imul
out
mov
or
outsl
dec
or
stos
orb
dec
jns
push
mov
fwait
jl
or
sub
aam
cmp
or
and
adc
add
add
cltd
xlat
add
mov
and
mov
hlt
sub
adcl
jle
adc
mov
pusha
jp
test
sarb
je
sub
add
pushf
pop
cmp
sbb
add
jb
sbb
ds
jl
out
sub
adc
fadds
mov
in
inc
cmp
mov
out
das
imul
mov
adc
or
sbb
sti
dec
movsl
out
ja
mov
loop
fisubl
repnz
insl
imul
inc
sbb
xor
test
ror
mov
push
popf
movsb
push
int3
test
xchg
inc
and
pop
adc
ljmp
jmp
mov
mov
xorl
cld
outsb
cmp
jecxz
mov
aaa
imul
shl
jbe
and
movsb
dec
adcl
and
push
gs
test
jp
inc
mov
daa
mov
imulb
and
adc
icebp
add
or
fs
cs
sbb
outsb
aas
xchg
mov
cmpsb
add
adc
imul
xor
push
sub
xor
xor
or
incl
fbstp
insb
jle
scas
call
xchg
push
outsb
nop
push
sub
sub
adc
pop
adc
fs
sub
xlat
repz
sbb
xchg
repnz
scas
inc
lock
mov
lods
out
or
filds
fxch
arpl
xchg
mov
dec
roll
outsb
out
mov
sbb
fcomp
in
inc
jecxz
adc
push
ja
mov
xchg
lcall
sub
and
lods
test
rorb
xchg
pop
cmp
cmp
cmp
pop
out
cld
ret
sub
filds
jp
mov
fldenv
lea
xchg
xchg
push
testl
mov
mov
mov
xchg
enter
das
movsb
pop
sub
out
es
pop
pop
loope
xlat
mov
adc
pop
inc
sbb
cmp
mov
sub
ljmp
cmp
mov
pop
add
add
mov
mov
ret
test
std
xor
or
pop
push
scas
aam
and
push
lret
cli
loope
dec
popf
fisubrl
dec
ja
cltd
imul
loopne
sub
iret
fucomi
lock
ljmp
pop
ljmp
lods
xlat
ja
inc
sub
pop
jo
repz
inc
sub
mov
adcl
out
xor
add
dec
pop
loop
sub
inc
je
and
std
lock
and
fsub
outsb
pop
mov
insl
enter
int
nop
imul
and
stos
fwait
lret
mov
aad
adc
inc
jne
mov
adc
dec
sbb
inc
xchg
jl
dec
mov
addl
mov
je
fs
inc
test
mov
jp
sahf
sbb
xchg
orl
push
cmpsl
mov
stos
movsb
cltd
push
pop
inc
icebp
cmp
sbb
movsl
jmp
cmp
cwtl
pusha
push
rcrb
int3
sbb
pop
pop
add
or
into
dec
lods
or
test
lods
mov
je
mov
icebp
lahf
stos
out
jle
ljmp
cmp
push
das
cmc
jp
pushf
loope
pop
nop
in
aad
mov
es
mov
mov
mov
xchg
mov
xor
out
stc
gs
fs
lods
cmc
sbb
fldt
pop
pushl
movsb
popf
and
out
inc
dec
push
cltd
sbb
cld
pop
lahf
jbe
cmpsl
aas
xchg
push
insb
int3
and
mov
push
lahf
and
mov
les
lret
loope
fs
into
fincstp
jmp
cmp
push
aas
mov
fistpll
outsb
push
lret
mov
sub
or
out
jp
lods
shrb
sbb
roll
fdivl
sbb
aad
jne
bound
imul
fsubrp
cmpsl
adc
out
mov
add
push
pusha
inc
lods
insl
dec
push
mov
mov
jle
xlat
cmp
into
ss
add
popa
xchg
pop
jae
sbb
pop
arpl
imul
sbb
clc
cltd
aad
ja
stos
nop
sbb
or
adc
push
dec
sub
mov
shlb
fidivrl
fistpl
pushf
out
mov
loop
push
repz
inc
fs
fadds
adc
jmp
mov
movsb
xlat
loopne
sub
movsl
sbb
into
sub
cltd
mov
inc
xor
stc
jp
lea
mov
jb
push
test
shr
ja
jmp
dec
sbb
ljmp
dec
out
pop
jmp
outsb
arpl
and
daa
xchg
mov
shlb
sub
das
test
xchg
mov
cs
dec
jmp
jecxz
leave
and
hlt
sahf
dec
jae
hlt
mov
into
insb
out
dec
imul
aad
xchg
testb
test
dec
rcll
xor
xchg
out
rclb
mov
push
cmp
mov
sub
mov
pop
jp
fldenv
nop
out
mov
mov
mov
adc
aam
popf
movsl
or
std
inc
dec
or
lret
cmp
jno
sub
cmp
jb
jle
xlat
dec
xchg
into
jb
xor
cmp
popa
xor
and
mov
dec
rolb
push
sbb
mov
mov
mov
sbb
push
divl
ja
mov
fldt
push
dec
or
arpl
xchg
mov
pop
sub
xchg
out
sti
jle
adc
sbb
add
and
cmp
mov
pop
sub
enter
lods
inc
ret
cmpsl
sahf
insl
fdiv
jge
sbb
mov
mov
cwtl
mov
sbb
adc
fbld
sub
xchg
test
inc
sbb
xchg
sar
lcall
test
lock
or
jg
insl
jne
xchg
int3
mov
fs
adc
mov
iret
xchg
bound
sub
push
pushf
push
rorb
xor
cltd
loope
lds
dec
jg
pop
sbb
push
lods
xor
dec
fs
flds
je
imul
lahf
lcall
xchg
add
iret
fildl
stos
stos
pop
lret
sub
jo
lods
mov
push
fisubrl
push
lahf
cmp
pop
adc
mov
out
jno
lret
or
xchg
dec
sub
aad
out
mov
xchg
ret
lahf
jge
sub
daa
repnz
mov
jmp
out
push
sahf
cltd
imul
movsb
mov
data16
push
cltd
jo
fstp
shl
out
push
inc
sub
xor
cwtl
and
popf
fsubs
pop
jb
movsb
sub
std
imul
sbb
insl
jbe
mov
repz
sbb
xchg
movsb
fcmove
lds
sahf
es
xchg
das
sahf
jmp
fidivrs
inc
pop
inc
in
cmp
adc
mov
and
stos
pop
sar
dec
adcb
cli
ds
neg
pusha
sbb
cltd
dec
aas
fs
dec
adc
cmp
xor
push
dec
sbb
jb
inc
jecxz
into
push
dec
cmp
mov
loop
cli
mov
cmp
sbb
mov
shll
ljmp
leave
push
jb
sbb
inc
icebp
faddl
pop
cmp
cs
mov
jo
mov
xchg
mov
sbb
aas
adc
das
pop
xchg
cltd
push
out
mov
jle
outsl
pop
xchg
shlb
notb
xchg
lods
xor
mov
xchg
lahf
clc
sub
arpl
jecxz
jbe
aam
mov
fcmovnbe
loop
nop
in
or
xor
out
loopne
addl
sbb
inc
add
inc
idivb
add
and
dec
add
cld
lods
scas
mov
sbb
sub
sar
pop
std
out
cmp
cwtl
adc
iret
mov
cmp
aad
in
add
aaa
push
or
jb
xchg
mov
push
outsl
rep
sub
ljmp
out
loop
ss
adc
leave
aaa
aam
daa
scas
push
mov
js
lcall
ss
jmp
cmp
cld
xlat
lods
jp
sub
outsl
adc
and
fmul
mov
jb
xor
pop
xor
lods
fs
mov
sub
xlat
std
mov
aam
outsl
rorb
add
jmp
pop
std
and
out
adc
push
fcmovbe
scas
or
jle
mov
cltd
data16
shrb
sub
clc
or
sbb
pop
mov
inc
daa
jo
push
xor
sbbl
dec
in
jg
mov
push
inc
mov
and
mov
push
or
scas
cmc
inc
cmpsl
jg
push
inc
jo
add
mov
and
mov
stos
xchg
out
dec
push
pop
sbb
xor
xchg
in
ficomps
mov
shl
bound
adc
push
lods
sub
hlt
dec
cld
ss
movsb
fs
and
fs
pop
sbb
pop
data16
jo
cltd
into
push
mov
sahf
insb
fs
lds
outsb
lret
testl
cmp
sbb
int3
dec
inc
imul
xor
mov
inc
push
cmp
inc
fcomps
mov
nop
insb
mov
rorl
inc
inc
pusha
lret
aaa
pop
pop
imul
sbb
dec
inc
lock
jle
inc
xchg
adc
outsl
out
or
lcall
mov
cs
out
jp
mov
sahf
or
push
insb
mov
lds
inc
call
movsb
call
into
mov
adc
lds
mov
adc
popa
in
out
movsb
pop
addr16
pusha
sbb
add
cld
bound
cmpsl
sub
jnp
lret
mov
clc
sub
pop
lahf
xor
fs
movsl
int3
adcl
inc
adc
mov
mov
rorl
adc
das
and
hlt
fistps
js
mov
lock
enter
shll
lahf
andl
xor
les
sub
outsl
ret
mov
loopne
mov
cmpb
out
fdivrp
or
loop
cmpsl
xchg
push
lret
or
adc
imul
inc
loop
add
or
add
mov
pop
xor
popa
cmp
sub
outsb
push
sub
pop
mov
push
mov
mov
mov
add
out
cli
rolb
ss
std
cld
test
gs
mov
sub
js
addb
jle
sbb
adc
cwtl
cmc
mov
mov
jbe
mov
ret
mov
std
std
sub
addb
mov
mov
outsl
jbe
xchg
movsb
std
cmp
iret
imul
dec
orl
outsl
add
mov
sub
lods
je
daa
fistps
jne
loop
lods
push
mov
jp
xor
movsb
pushf
adc
pop
shrd
test
stos
movsb
mov
adc
mov
insl
cmpsl
jecxz
lods
movsb
test
imul
and
sub
popa
sarl
test
xchg
jmp
insb
out
pop
add
mov
mov
fcmovne
jmp
add
rcl
shrl
push
call
push
rorl
dec
out
movsb
mov
pop
mov
ds
imul
xor
mov
mov
push
push
push
lods
add
jb
jmp
mov
push
jbe
repnz
leave
xor
imul
push
jmp
cmpl
inc
dec
jns
cwtl
test
add
iret
rclb
jmp
add
jmp
sbb
mov
sti
lock
or
sar
sub
insl
adc
jb
shlb
and
nopl
push
lahf
xlat
shlb
fwait
out
sbb
movsb
hlt
sub
mov
icebp
fistpll
ret
adc
in
pop
out
notb
cmc
ffreep
stos
jns
cmp
pushf
mov
lods
ret
test
repnz
les
test
scas
inc
sub
jecxz
addl
leave
stos
mov
xlat
add
cwtl
cmp
pushf
and
xor
inc
sahf
push
popf
sbb
movsb
mov
sbb
idivl
fiadds
out
mov
mov
in
popf
inc
in
mov
insb
jle
movsb
push
add
aaa
jbe
lds
loop
fbld
std
inc
add
or
mov
pop
jns
push
jle
dec
xchg
movsb
mov
push
fidivs
repz
sarl
jae
cmpsl
pop
clc
mov
jge
add
addl
mov
jmp
call
jns
in
or
mov
sub
cli
dec
scas
adc
adcb
cltd
loope
mov
adc
sub
add
dec
jge
outsb
shl
xor
jp
insl
fisubl
xor
push
test
push
xor
or
rcr
loop
push
add
mov
dec
push
sbb
lds
mov
or
push
ds
inc
in
inc
lods
incl
or
jmp
shl
jno
out
jg
inc
push
aam
ds
cmp
movsb
std
pop
ffreep
jb
cmp
mov
or
dec
mov
sub
push
add
movsb
jo
out
adc
mov
jae
add
or
jle
xchg
pop
pop
jo
adc
es
rcrb
dec
jle
mov
lds
push
xchg
mov
jo
les
fwait
dec
hlt
inc
imul
push
add
int3
adc
mov
pop
mov
adc
push
addr16
stos
xor
adc
enter
lods
xlat
mov
jecxz
cltd
imul
das
mov
ljmp
xor
jae
loop
sbb
lcall
pushf
mov
lret
stc
fistps
push
add
and
ja
fs
jmp
and
adc
enter
cmp
ret
sub
xchg
fldt
bound
lahf
jo
dec
adc
inc
push
rcr
mov
loope
xchg
sub
mov
outsb
lods
stos
push
cmc
mov
mov
jecxz
sub
pop
push
lea
jle
jns
pop
fs
mov
insb
push
xchg
cmp
mov
out
jbe
shr
imul
test
pop
dec
nop
fldenv
xlat
ds
add
jbe,pt
fs
inc
jle
gs
enter
lahf
adc
xchg
jecxz
dec
adc
push
mov
fwait
jl
mov
dec
mov
movd
mov
testl
xor
je
dec
mov
les
mov
push
stos
inc
data16
dec
cmc
sub
imul
xchg
pop
icebp
inc
sahf
lods
cld
outsl
xor
jae
mov
stos
dec
out
adc
mov
shl
and
add
bound
inc
and
into
ss
inc
out
adc
out
into
sbb
std
movsb
call
fcomp
cld
imulb
sub
add
pop
cmpsb
xchg
jl
pop
pop
jmp
das
jle
push
mov
lods
and
and
mov
push
push
lea
cwtl
and
add
jns
push
xor
push
incb
insb
lock
test
enter
mov
adc
pop
inc
pop
sub
aaa
cwtl
push
pop
lcall
loopne
inc
arpl
add
or
lret
shl
mov
pop
in
cmp
mov
test
lret
test
outsb
pusha
mov
inc
jnp
push
pop
jo
adc
add
inc
add
aas
pop
out
fs
jne
pusha
clc
movsb
ss
fildl
sbb
fcmovne
mov
inc
dec
xchg
mov
adc
push
bound
add
sbb
add
jo
out
je
dec
iret
icebp
jp
jns
popa
xor
cmp
sub
push
jp
xor
cld
test
xchg
mov
scas
xchg
mov
lds
xorb
xchg
xor
jbe
subb
jne
loope
clc
pop
divl
lods
push
lret
push
cmpsl
out
push
dec
cmp
mov
adc
xor
mov
stos
mov
lret
pusha
imul
push
dec
pop
push
adc
repnz
add
shlb
fidivrl
mov
lret
into
push
dec
into
dec
sarb
mov
mov
fmul
push
jns
inc
clc
mov
push
mov
push
dec
cld
in
push
les
jl
arpl
das
dec
sub
sbb
int
sub
out
inc
scas
xchg
lds
cmc
rep
scas
clc
mov
je
dec
fwait
lods
clc
jecxz
cld
push
mov
or
stos
stos
repnz
sbb
jl
mov
ljmp
add
push
lods
clc
sbb
add
jne
loop
cmp
in
repnz
out
insb
push
dec
dec
pop
pop
dec
xchg
aam
test
js
inc
push
sub
add
jno
fs
in
sbb
pop
sub
mov
fisubl
lds
and
movsl
aam
lods
cmp
aad
and
ret
rsm
and
adc
pop
test
or
out
mov
mov
aam
aad
pushf
mov
lret
sub
xchg
cmp
aas
push
sub
movsb
imul
rolb
add
push
inc
and
add
cmp
sub
pop
lret
add
in
mulb
push
shlb
es
ret
adcl
cltd
mov
or
cmpsl
sbb
jne
lahf
repz
inc
shll
movsb
add
fstps
pop
lods
lods
fisubl
jg
ret
jbe
rorl
pop
pop
jne
mov
cmpsl
jno
jo
frndint
clc
inc
jle
or
xor
add
or
mov
push
imul
andl
mov
outsl
jns
insl
out
xchg
sub
aas
sbb
xchg
insl
sub
pop
int
inc
in
fs
push
xor
popf
in
push
jo
cmp
jg
loopne
cs
pop
ss
pusha
push
sarb
mov
aad
adc
mov
sbb
sbb
nop
mov
pop
inc
mov
js
out
and
jp
adc
fcoms
outsl
sub
jno
push
push
mov
xchg
mov
rep
das
in
xchg
add
mov
jns
push
pop
fistpl
jl
fcompl
mov
mov
lock
cs
push
push
push
pop
and
fsubrp
pop
dec
jge
jmp
and
into
insl
test
int
mov
jo
pop
lea
or
lods
filds
cwtl
popa
test
cmp
inc
sahf
cmp
lock
or
cli
pop
mov
movsb
mov
pop
jmp
insl
stos
jle
sbb
sub
into
push
out
or
aad
sub
lods
push
jecxz
and
fidivrl
xchg
outsl
cmp
cmp
clc
xchg
hlt
ret
sti
test
cmp
push
iret
dec
iret
test
xor
std
cmp
fs
setl
cmp
iret
inc
cwtl
jnp
cltd
fsts
jno
out
out
ds
mov
mov
mov
sub
jbe
dec
sbbb
into
inc
mov
addr16
and
sub
sub
cmp
xor
lods
fidivrs
and
inc
lods
fdivs
jp
pop
mov
sti
dec
mov
into
fwait
jo
xchg
adc
repz
xchg
lret
stos
lds
mov
xchg
imul
mov
imul
pushf
enterw
sub
jecxz
das
outsl
fidivl
push
imul
repnz
addr16
fsubrl
xor
xchg
out
push
imul
fs
shll
dec
lods
push
sbb
jb
lock
push
sbb
xchg
pop
sub
in
fsubl
adc
loop
mov
fs
in
ljmp
out
lea
push
lods
das
push
sbb
jb
adc
xchg
push
cmp
fsts
mov
push
mov
inc
jbe
movsb
pop
inc
sub
mov
lock
jle
out
or
stc
shlb
imul
cmpl
outsl
test
je
out
push
call
pop
add
das
test
imul
jecxz
popf
jle
lea
push
sub
stos
mov
pop
inc
jge
dec
fs
sub
cmp
fs
push
int
faddl
insl
adc
jg
cmpsl
jo
pop
rclb
jecxz
je
in
cmp
mov
cwtl
fsubs
dec
out
std
xchg
cmp
out
cmp
pop
fidivrl
sub
dec
xorl
aaa
movsb
jg
jl
pop
ja
cmp
dec
inc
das
sub
movsb
dec
rcrl
and
adc
pushf
cld
lret
sub
fldl2e
dec
mov
push
mov
out
insl
mov
test
jl
cwtl
es
pushf
inc
add
push
mov
daa
jmp
sub
pop
ss
out
pop
pop
inc
ficoms
cs
mov
repz
sti
inc
jl
pop
ljmp
loopne
cld
call
jb
repnz
push
aad
or
mov
add
push
cwtl
dec
lret
movsb
mov
bound
cltd
adcb
lods
jne
or
lret
lret
addb
inc
jb
or
or
cmp
and
dec
push
xchg
jnp
jne
adc
lret
lods
fsubrs
inc
leave
repnz
dec
jae
mov
sbb
inc
outsb
call
adc
lret
stos
fs
in
push
pop
add
xchg
sub
stc
flds
mov
or
adc
push
pop
in
push
xor
sub
imul
fxam
push
xchg
popl
std
inc
cmc
in
das
mov
dec
xchg
dec
mov
test
sahf
pop
mov
cld
lods
sbb
xchg
xlat
jb
jbe
sahf
xor
rol
dec
insl
xchg
push
cmp
daa
stos
mov
jp
fs
dec
and
test
inc
int3
movsb
mov
jp
jbe
fs
movsl
cmp
sbb
dec
or
cmp
sarb
in
iret
pushf
bound
and
inc
jne
aas
mov
movsb
and
push
cmp
insl
call
fs
xchg
jmp
call
bnd
pop
loop
leave
cmp
mov
stc
movsb
jbe
inc
rorb
addr16
out
es
pop
mov
aam
rcrb
into
jg
imul
sbb
inc
scas
jae
and
pop
push
sub
adc
movsb
rcrb
add
test
je
lea
push
stos
cli
push
mov
rcrb
cwtl
in
pop
mov
pushf
mov
lds
fdivs
adc
mov
and
inc
insl
out
adc
movsb
mov
mov
jns
sbb
push
add
lods
test
inc
inc
pop
xor
cmp
arpl
dec
imul
in
mov
pminub
sbb
daa
out
mov
sarb
fs
mov
sub
push
sub
sub
fcmovnbe
xchg
test
pop
popf
paddusw
xlat
add
cli
xchg
dec
xchg
mov
jle
out
mov
sbb
sbb
or
dec
subl
fs
scas
mov
sbb
jecxz
push
jb
jle
lahf
jb
outsb
ss
ljmp
mov
pushaw
push
out
cld
cmpl
fs
xor
movsb
out
leave
mov
cwtl
rorb
lods
scas
push
push
push
pop
lock
pop
clc
stos
insb
movsl
fbld
xor
lea
popa
jbe
add
cmp
sbb
faddl
push
out
stos
fcoms
mov
insb
dec
pusha
lock
insl
stc
lcall
mov
filds
fldz
or
cli
dec
mov
arpl
mov
inc
push
ret
repnz
sub
inc
stos
paddq
cmp
movsb
outsb
cmpsl
adc
shll
icebp
mov
mov
jbe
cmp
imul
orb
pop
jmp
lea
gs
lds
aaa
pushf
and
pop
mov
push
stc
das
pop
repnz
aam
jp
xchg
std
fdivrl
pop
sub
or
addr16
movsb
ret
pushf
cmpsl
sub
push
cmp
push
out
outsb
mov
or
int
inc
dec
xchg
jne
iret
dec
mov
dec
mov
add
push
dec
xlat
sahf
inc
cmp
xchg
stos
cmp
rorb
repnz
mov
ja
dec
jmp
cs
imul
daa
add
das
aas
jns
dec
lret
fs
lahf
fsubrp
push
nop
sahf
mov
push
sbb
dec
adc
aas
mov
and
xchg
lahf
lcall
sub
sbb
add
mov
pop
xorb
jg
leave
ficompl
mov
add
xor
mov
adc
xchg
gs
add
push
mov
pop
stc
sub
push
or
xchg
ljmp
mov
out
jp
xchg
and
shrb
mov
sub
je
sbb
xor
pop
push
sbb
cmp
fsubrl
pop
jbe
fdivs
mov
adc
jbe
jle
call
mov
test
jb
lods
add
lret
adc
je
push
lods
jge
inc
push
orl
mov
mov
mov
test
test
movq
add
dec
adc
mov
dec
dec
pop
outsb
sbb
inc
sahf
inc
roll
jbe
or
sub
daa
mov
lret
jmp
test
or
and
fimull
out
adc
mov
stos
push
mov
ret
add
int3
decb
lcall
mov
decl
es
jp
fwait
mov
imul
loop
loope
xor
popa
cmp
mov
xchg
fsubrp
sub
mov
inc
test
shrl
or
xlat
lods
adc
fs
int3
test
push
add
loop
pop
sbb
sbb
imul
imul
insl
xor
sub
mov
inc
mov
inc
imul
pop
pushf
fisubrs
fldt
in
faddl
sbbb
add
push
adcb
sbb
clc
add
fisubrl
je
xchg
mov
xchg
xchg
adc
nop
pusha
divl
into
jmp
xchg
lods
adc
test
jb
push
sbb
cmc
into
pop
lods
sbb
sub
cmp
push
pop
mov
inc
dec
ret
sbb
pop
xchg
out
sbb
repz
dec
mov
xlat
outsb
cmp
pushf
dec
lret
das
add
adc
mov
movsb
sarl
test
xor
imul
out
mov
xchg
or
jl
xchg
inc
pop
ds
es
adc
lods
rcl
jecxz
add
jg
test
pop
fstpt
iret
push
sub
jmp
xor
dec
xor
je
jle
cs
mov
nop
adc
inc
test
idivb
jno
mov
and
sub
cmp
sub
je
testl
adc
sub
stos
stos
lret
fstps
inc
in
mov
imul
test
adc
mov
lods
outsl
insb
imul
fisubl
imul
out
mov
adc
jge
jp
lods
sbb
loope
inc
ret
or
or
push
arpl
pop
pop
jl
or
jno
stos
push
or
pop
rorb
das
shlb
aad
js
inc
lods
pop
mov
enter
or
xor
pushf
add
push
pop
pop
movsb
xchg
push
adc
jmp
sbb
cmp
add
mov
fadds
or
rcl
mov
cmp
cwtl
scas
jno
bnd
std
imul
inc
lods
movsb
add
mov
mov
pop
testl
into
dec
ljmp
dec
loop
jle
hlt
repnz
sub
pushf
leave
repnz
sahf
or
orps
pop
jg
iret
jge
xor
adc
outsl
xchg
jl
xchg
pop
push
cmpsb
idiv
outsb
test
push
jnp
or
xchg
push
popa
or
push
into
aas
cmp
pushf
repz
sub
imul
aad
inc
mov
mov
jg
fs
xchg
mov
and
loope
mov
xchg
leave
xchg
ljmp
cmp
cmpsl
fs
mov
insb
das
test
add
loopne
add
in
sub
cld
dec
adc
pop
movsb
sbbl
xchg
and
jg
cli
insl
decb
or
es
call
bound
sbb
testb
stc
out
mov
fadd
mov
lods
and
ret
outsb
test
nop
je
test
push
ret
js
test
test
lock
lods
inc
pushf
cmpb
inc
icebp
push
iret
subl
stc
enter
sbb
jb
sub
pushf
adcl
jno
fadd
sbb
es
xor
sahf
sub
mov
jo
or
mov
shl
cmc
fsubrs
inc
aam
mov
xorl
or
aad
lret
pop
mov
push
sbb
test
jp
ljmp
loopne
xchg
inc
jg
in
shl
and
outsl
jb
pop
sbb
cmpsl
ret
stc
test
out
fs
xchg
push
pop
push
fstl
xchg
push
mov
add
mov
in
out
movsb
pop
lret
and
outsl
insl
xlat
mov
fcompl
push
pextrw
add
sub
out
xchg
sbb
repz
xchg
and
sub
or
xchg
pop
xchg
push
and
ret
mov
push
mov
jle
jns
xchg
xchg
insl
call
movsb
mov
push
fwait
iret
insl
fcom
jmp
cmc
pop
out
fistps
sbb
cmpb
cwtl
mov
jg
dec
fs
rdtsc
cmp
lret
loopne
pushf
ljmp
outsl
js
cmp
push
test
es
test
xchg
jecxz
leave
xlat
and
mov
lahf
das
aam
inc
out
mov
jae
sbb
xchg
lret
std
jae
xor
sbb
rorb
andb
in
adc
retw
inc
sbb
scas
dec
cltd
or
movsb
xlat
inc
cmp
test
flds
in
fldt
ret
gs
cltd
jmp
ss
iret
mov
push
xchg
mov
cmp
mov
test
sub
cmc
sub
jmp
ficomps
add
push
mov
ret
stc
fisubrl
mov
jno
cmp
sub
dec
aad
ja
decl
cmp
jnp
sub
pushf
jle
rcrl
jg
in
lahf
cmpsb
pop
mov
sub
adc
push
mov
cmp
jnp
sub
cs
sbb
in
push
fnsave
xor
sub
loop
inc
mov
icebp
push
adc
in
add
mov
sub
lea
mov
aad
push
ret
loopne
cli
push
and
adc
xor
jo
mov
push
insl
movsb
pop
lea
outsb
fdivs
enter
lea
roll
pop
andb
push
enter
cmp
inc
incb
aas
faddp
aas
xor
fcmovnb
cmp
lods
inc
adc
jno
mov
jle
stos
sbb
jmp
pop
sbb
adc
fiaddl
call
mov
add
imul
rorb
imul
cltd
cmp
out
inc
fdivrp
insb
jmp
jle
shlb
lea
ret
fs
pop
movsl
xchg
jns
or
jl
pop
cld
push
pop
mov
pop
or
das
xor
test
sbb
jbe
imul
dec
push
mov
testl
out
imul
ret
xor
add
fs
push
push
aas
mov
mov
and
jns
or
mov
jnp
orl
jae
dec
inc
jge
pop
push
cwtl
test
testb
jle
lret
rorl
xlat
jb
cmc
cmpsl
or
jmp
sarl
pusha
outsl
imul
add
mov
dec
movsb
js
xchg
aam
nop
xor
ret
xchg
in
mov
lahf
mov
rcll
mov
sbb
pushf
cmpsl
mov
lods
movsb
xor
fistl
mov
ret
mov
mov
mov
mov
inc
pop
lock
jno
and
movsb
lods
cld
dec
sbb
push
add
push
mov
add
lcall
inc
rcll
pushf
rorb
xor
enter
outsb
cmpsl
mov
dec
push
pop
scas
inc
push
mov
test
jg
loop
lds
pop
mov
mov
aas
adc
push
movsb
jle
jmp
push
or
insb
lahf
jmp
scas
rcll
push
lret
repz
mov
ret
fmuls
fwait
mov
ljmp
iret
repz
jge
fstpt
mov
adc
les
pushf
pop
les
pop
ds
movsb
or
push
cmp
sahf
mov
or
jge
test
mov
sbb
mov
or
xchg
dec
sbb
mov
pop
mov
fwait
jns
negl
or
mov
mov
lret
std
int
mov
cmpb
cmp
in
popa
pop
or
mov
andl
int3
ret
fists
inc
das
dec
xchg
xor
jle
mov
je
lods
inc
stos
outsl
dec
leave
aas
or
or
and
jmp
xchg
loop
or
lret
addr16
jge
outsb
movsb
mov
jmp
std
js
in
insl
mov
mov
subb
adc
and
test
inc
addb
jmp
movsb
iret
mov
scas
call
cmc
xchg
mov
xchg
in
enter
dec
push
mov
pop
add
test
xchg
insl
in
inc
xchg
or
mov
mov
or
ljmp
lock
shll
and
insl
outsl
lock
das
fs
adc
sarl
mov
pushf
mov
call
std
aad
pop
push
mov
cld
nop
dec
loop
ret
mov
out
dec
pop
ljmp
adc
pop
into
testb
push
cltd
jo
mov
movsb
mov
or
jno
cmp
inc
add
insl
sub
jge
push
nopl
decl
cmp
push
mov
std
lock
pop
in
cmpl
ss
js
push
jl
jno
fs
ret
repz
adc
pop
adc
stos
ds
pop
cmp
cli
dec
jmp
cltd
sarl
mov
and
mov
aaa
xchg
insl
enter
jae
mov
cs
cwtl
pop
or
fwait
inc
insb
sub
nop
test
dec
push
sbb
out
les
jae
stos
pop
mov
xor
clc
aad
inc
mov
cmp
lods
fstps
jp
xchg
xchg
fcompl
rorl
mov
inc
mov
lods
leave
pushf
imul
sti
dec
cmp
mov
imul
inc
or
cli
xor
cwtl
stos
mov
lods
and
xor
pop
pop
mov
into
push
inc
add
and
stc
xorb
xor
pop
inc
inc
inc
jmp
aam
dec
insb
into
push
pop
sbb
je
aas
push
sti
adc
or
jg
rclb
ret
enter
mov
lcall
lods
mov
ja
inc
or
jp
pop
test
push
mov
jb
outsb
das
cwtl
pop
sub
xchg
stos
outsb
test
int3
pop
push
punpckhdq
outsl
mov
les
aam
or
fisubl
repz
sub
stos
sbb
dec
out
jle
mov
dec
jg
inc
lods
rol
test
imul
std
das
aas
out
pop
cvtpi2ps
fistl
aam
xorl
pop
push
dec
and
insb
inc
cmp
aad
enter
ret
sbbb
mov
stos
or
jb
fs
icebp
enter
movsb
cmp
fbld
inc
jle
push
es
sbb
ds
subl
roll
stos
ja
sub
pop
dec
push
mov
inc
cmp
or
nop
es
loop
sub
clc
aas
xchg
dec
cltd
xchg
imul
xor
adc
xor
cmp
popf
inc
hlt
push
loopne
cmpsl
in
in
mov
cwtl
icebp
into
loop
cmp
rcll
in
cli
add
lods
dec
push
or
jae
lods
inc
scas
and
mov
mov
pop
and
popl
aas
out
push
adcb
sbb
jp
fdivrs
jnp
xor
lods
movsb
cmpsl
mov
clc
push
sti
pop
ss
adc
mov
lock
and
addr16
jbe
sub
push
lret
ficompl
push
movsb
sti
mov
dec
sub
cmpsl
push
cmpsl
lahf
mov
dec
jecxz
sbb
adc
mov
sahf
add
or
push
fwait
or
out
rcl
andb
mov
jp
inc
lret
stos
and
ret
repnz
mul
mov
or
idivb
sti
cmp
dec
jg
cmpsb
and
sbb
jb
mov
ss
lcall
fisttpl
aaa
repz
mov
mov
mov
mov
jne
inc
into
js
pop
sub
arpl
xchg
test
ja
jo
pop
jae
clc
adc
sub
lods
xor
enter
cmp
scas
je
out
or
add
pop
cltd
popf
adc
in
add
push
jp
ret
popl
sbb
fildl
fwait
nop
rcrb
dec
imul
jo
xchg
aas
pop
mov
loop
cs
out
mov
aas
xchg
xchg
sbb
in
andl
pushf
push
add
cltd
xor
cmpsl
dec
inc
movsl
ljmp
adc
cmp
inc
test
dec
jp
add
sti
sbb
dec
in
sti
out
lods
xor
sti
das
pop
lret
fxch
push
loope
cltd
dec
lahf
pusha
stos
out
push
xchg
cs
jmp
insl
inc
push
stos
imul
mov
adc
in
jp
adc
pop
test
pop
in
enter
inc
pop
loop
ret
ret
mov
lods
mov
dec
ljmp
pop
sub
push
mov
mov
push
fmuls
sahf
out
mov
fisubrs
push
push
lods
pop
adc
and
mov
popf
movsl
ljmp
mov
iret
mov
jp
fsubs
jb
lods
inc
pop
xchg
cmpsl
jecxz
mov
jns
lahf
movl
mov
push
sbb
idiv
scas
xchg
out
scas
into
pop
mov
sub
popa
mov
imul
add
sub
cmp
fisttps
cmp
cmp
add
inc
xor
mulps
inc
mov
in
xchg
stc
fisubrs
lds
or
pop
idiv
xchg
push
mov
dec
or
mov
sbb
pop
mov
sbb
xor
popa
mov
aad
sub
gs
ja
aaa
mov
out
adc
shl
pop
addr16
xorl
ljmp
addb
dec
int3
movsb
xor
lds
hlt
aas
nop
jnp
xchg
stc
and
fsubs
outsb
mov
movsb
cmp
cltd
or
xlat
out
fistl
jnp
sbb
adc
jg
aas
out
or
inc
or
pop
lods
adc
mov
fiaddl
lret
mov
fwait
inc
mov
inc
mov
hlt
cmp
pop
jecxz
push
into
movsb
inc
add
lds
push
jmp
dec
jmp
decl
sub
ds
or
sbb
xchg
call
inc
lea
movb
sbb
add
push
sub
in
jge
stos
pop
out
popa
frstor
pop
mov
jg
ds
xlat
dec
pop
add
mov
mov
and
shl
and
pop
cmc
inc
fnstenv
in
out
movsb
imull
arpl
jl
fs
movsl
add
mov
and
push
lods
movsb
pop
sarb
fildl
dec
mov
lret
fs
leave
jp
mov
cmp
push
push
outsl
dec
fimuls
cwtl
jle
mov
inc
inc
lods
sub
leave
fs
insb
movsb
fildll
aas
and
cli
lret
jecxz
std
inc
out
adc
fdivr
pop
jmp
and
movb
pop
pop
ljmp
decb
inc
mov
mov
pop
lods
cmp
call
or
orl
and
test
mov
jge
mov
cmp
jge
jg
shrl
scas
jbe
lret
fs
lods
jl
movsb
out
rorl
inc
add
repz
or
fcomip
popa
sub
add
loop
add
mov
pop
daa
jg
and
sub
in
cltd
std
dec
rclw
xor
jmp
pop
or
pushf
test
adc
inc
push
dec
out
shrl
unpckhps
js
sbb
enter
ret
dec
fs
mov
sbb
lods
sti
jne
xchg
push
xchg
jnp
sbb
jg
mov
push
iretw
stos
ja
sub
fmuls
jbe
dec
daa
cli
sti
cmp
pushf
pop
sub
mov
dec
in
aad
ljmp
mov
enter
pop
std
orb
pop
mov
xchg
jb
jg
fucomip
repnz
popf
and
mov
ret
xor
inc
aas
inc
lds
push
jmp
aas
rol
sub
sub
fs
and
pop
dec
add
ja
adc
roll
push
mov
jae
aad
sbb
ret
test
sbb
add
adc
mov
inc
imul
jecxz
and
mov
jl
fwait
push
xchg
jmp
pop
push
cltd
into
std
mov
sarl
leave
gs
mov
jbe
movsb
in
fiadds
sub
dec
test
cltd
pop
inc
aaa
mov
or
jmp
dec
push
push
jmp
lcall
stos
mul
orl
mov
jg
cmp
fs
sbb
inc
iret
jg
add
or
orl
or
sub
lods
mov
shrb
js
pushf
or
sbb
test
ds
push
aad
mov
enter
pop
dec
fsubrl
jno
into
loope
lds
ss
icebp
dec
sub
push
mov
mov
into
mov
repnz
ficoml
rcl
jbe
and
mov
movsl
fs
scas
in
cmpsb
pop
mov
enter
xchg
addb
mov
std
in
add
lock
dec
mov
je
mov
sbbb
adc
push
aaa
fs
add
push
mov
out
mov
popf
jmp
pop
leave
mov
imul
and
cmp
stos
pop
cmp
cltd
and
jge
inc
push
push
sbbl
scas
shlb
iret
jb
in
lret
test
lods
fs
fcmovu
dec
int
jbe
ds
movsb
mov
mov
cld
mov
aad
sub
test
inc
and
jle
ret
aad
xchg
cld
cwtl
mov
stos
stos
push
lods
mov
or
jae
call
sub
push
sbb
pop
aas
jmp
pop
shl
mov
int3
daa
aas
pop
push
aad
sbb
dec
xchg
aas
dec
jl
push
je
mov
sub
jbe
jb
xlat
out
fldcw
aam
cli
jnp
imul
lcall
jae
mov
in
xchg
add
xor
adc
ljmp
mov
mov
mov
cmc
add
adc
inc
xchg
mull
mov
into
mov
mov
push
int
lock
mov
cmp
loop
pop
xor
lahf
cmp
inc
dec
push
mov
or
addr16
sbb
jno,pn
xchg
aas
inc
or
jb
loope
inc
push
inc
repnz
cmp
push
dec
mov
pop
je
decb
lock
daa
out
loopne
aas
or
imull
xchg
ret
adc
rcrl
or
ljmp
add
fs
sti
push
push
loop
pushf
scas
cli
ret
mov
daa
ror
cmpsb
movsb
sbb
jl
ret
iret
sbb
shlb
or
sbb
or
test
stc
jge
mov
lahf
sbb
dec
pop
add
cltd
test
lret
xchg
test
pop
pop
out
inc
je
imul
jb
pop
in
test
imul
push
sbb
xor
sub
popf
adc
outsb
jl
fadds
jae
mov
sub
mov
sbbb
outsl
or
test
xchg
pop
lds
out
cwtl
push
aas
nop
jne
hlt
fdivs
inc
sbb
rolb
mov
push
out
jns
and
and
xchg
jp
xchg
loope
mov
dec
xchg
dec
sbb
mov
dec
lds
fs
cmpsb
push
add
lret
mov
call
pushf
push
mov
xchg
fsts
popa
jnp
push
roll
test
sbb
shlb
sbb
cmc
loop
mov
cli
push
mov
dec
enter
cmp
fbld
roll
mov
das
leave
and
sub
jno
inc
in
mov
mov
insb
movsb
insb
sub
ss
dec
inc
jg
sbb
xchg
out
insb
fistps
jb
ljmp
faddl
daa
fbstp
movsl
sbb
xor
xor
sbb
jo
movsb
sahf
test
mov
roll
sbb
fs
push
jo
dec
orl
xor
pop
cmp
pop
movsb
fs
jne
inc
mov
cwtl
mov
sub
fwait
into
mov
filds
mov
jno
sahf
dec
rcrl
or
stc
dec
int3
xor
dec
repnz
loop
sub
cmpsl
xchg
out
fs
ja
jae
or
mov
adc
stos
jmp
scas
and
in
push
xchg
stos
test
jbe
mov
inc
dec
out
test
push
fmul
movl
adc
dec
add
jnp
inc
inc
movsb
xor
icebp
cmp
add
jg
cmp
mov
repnz
mov
xchg
shr
mov
fdivp
sub
xor
jp
dec
cmp
call
movsb
out
std
mov
xchg
daa
push
inc
pop
or
add
inc
xor
sbb
scas
iret
push
inc
xchg
sub
dec
mov
ja
push
sbb
mov
pusha
testl
sbb
push
test
adc
es
push
jne
mov
inc
iret
inc
lock
add
jne
jp
fnstcw
cmp
enter
cmp
ljmp
outsl
rorl
dec
sbb
pop
std
fistps
cmp
pop
sbb
inc
out
xchg
mov
push
std
pop
push
aaa
pop
inc
xchg
and
pop
ds
mov
inc
push
pop
pop
adc
movsb
xchg
fwait
push
fildll
mul
outsl
inc
dec
lods
loop
xchg
dec
inc
jb
mov
push
nop
movsb
sub
stos
cwtl
push
stos
jge
sbb
insb
stc
ja
sbb
lea
cmc
out
push
mov
sbb
xchg
mov
dec
or
movsb
repz
lods
push
dec
and
add
sbb
xchg
outsb
imul
ja
movsb
roll
push
movsl
lret
and
ljmp
pusha
jp
das
test
mov
pushf
insl
outsb
rcr
stos
pop
cmp
sbb
imul
mull
sbbb
mov
fidivrs
lcall
jmp
xor
xchg
push
mov
push
pusha
sub
xor
sbb
pop
leave
push
lods
dec
or
add
mov
sub
shrl
xor
mov
iret
stos
mov
jge
out
or
cs
cwtl
or
icebp
lret
scas
or
outsb
sbb
push
int3
add
mov
push
call
inc
shr
mov
adc
lock
pop
mov
cmp
dec
shll
push
pushf
call
sub
aam
mov
je
mov
sbb
jge,pt
or
mov
lahf
push
movsb
dec
imul
push
jne
movsb
mov
stos
mov
inc
iret
mov
in
inc
call
and
sub
sbb
mov
fdivs
jmp
cltd
jae
dec
or
lods
cmpsl
push
imul
insl
insb
or
pop
aaa
imul
dec
imul
or
lds
daa
sub
jae
xor
nop
mov
push
inc
sbb
pop
fidivs
pop
scas
sahf
sbbb
psubusb
out
mov
mov
sub
adc
in
push
stos
imul
leave
dec
idivl
iret
ret
mov
fildll
in
popa
je
jnp
add
gs
inc
fs
dec
xor
pop
mov
add
imul
and
cs
xlat
ret
pop
xchg
movsb
push
repnz
cs
or
fildl
lret
out
push
imul
mov
loopne
and
out
jp
out
std
loopne
jge
scas
mov
pop
sbb
mov
ljmp
lret
jg
pop
mov
cltd
hlt
mov
fisttpl
scas
jo
sldt
jns
repnz
pop
pop
int
out
mov
lds
pop
jg
push
sbb
iret
inc
mov
adc
ja
je
jle
dec
mov
mov
dec
sbb
and
je
daa
mov
jl
mov
and
cmp
cltd
adcb
jb
rclb
test
repz
mov
mov
shlb
push
leave
lds
inc
out
inc
xor
sbb
push
adc
adc
movsb
gs
cltd
neg
aam
aas
push
pop
adc
fs
subb
lock
loope
push
imul
push
xor
icebp
repnz
dec
icebp
adc
inc
adc
loopne
lret
sub
scas
outsl
and
sbb
mull
push
orb
jbe
cli
xor
notb
outsb
imul
or
imul
pop
insl
jmp
insl
pop
fs
push
stos
out
popa
negl
out
stc
lahf
shlb
addr16
mov
pusha
gs
ljmp
ljmp
inc
pop
add
push
and
scas
orl
loop
jle
xchg
js
repnz
repz
xchg
mov
dec
into
push
rclb
pop
stos
arpl
adc
sbb
loope
push
shll
arpl
aas
ljmp
leave
je
pop
fwait
or
lods
stc
mov
cwtl
pop
sub
mov
insl
jg
scas
jb
out
push
ds
jmp
out
sub
shr
cmp
pushf
mov
jle
out
mov
mov
mov
stc
mov
xor
cli
stos
and
das
or
aad
xchg
stos
dec
fxch
ljmp
pop
inc
lret
ljmp
movsb
xor
cmp
xchg
rorb
cmpsl
jae
mov
inc
lahf
hlt
sub
mov
das
pop
test
std
push
and
lods
add
jmp
lds
push
scas
pushf
adc
js
jg
pop
dec
dec
adc
popa
fwait
inc
mov
les
mov
dec
mov
in
int3
cmc
test
das
jnp
sbb
mov
mov
lods
jae
stc
xchg
leave
movl
pushf
push
fs
sar
rdtsc
mov
jne
js
outsb
cmc
cld
and
mov
dec
push
mov
and
adc
fs
in
mov
hlt
pop
jle
pop
cmpsl
jnp
loop
test
jae
pushw
repz
sub
mov
sub
mov
pusha
idivb
enter
cmp
lret
jle
js
xchg
shl
in
insl
jo
jb
mov
int
mov
mov
lcall
in
fiaddl
mov
pop
lcall
jg
sbb
fldt
xor
and
fs
xchg
pop
in
ret
pop
inc
aas
pop
std
shll
pop
adc
or
dec
or
xchg
pop
cmp
xor
jl
rorb
jle
or
call
xchg
ljmp
add
addr16
aad
repz
cld
inc
shrl
jmp
mov
mov
sub
in
dec
out
sbb
adc
jge
test
ja
jg
jg
cmpl
pop
cmp
cltd
xchg
adc
shl
movsb
mov
pop
pop
mov
stos
inc
arpl
lock
dec
xchg
rcll
adc
sarl
push
call
les
hlt
in
cwtl
mov
dec
cmpsl
mov
cld
aam
aam
jbe
or
cmp
mov
dec
rorl
dec
add
mov
xchg
sbb
in
aas
dec
into
dec
push
and
mov
pop
jp
test
int3
pop
jne
fidivrl
aas
xchg
push
mov
push
xchg
cmp
fcmove
jp
mov
push
cmc
cmp
push
and
cwtl
add
push
mov
fidivrs
inc
add
mov
push
icebp
cmp
add
repz
jo
data16
xor
dec
xlat
test
addr16
into
push
lock
sub
fdiv
arpl
lea
mov
in
push
cmpsb
xchg
sub
jno
sbb
repnz
mov
xchg
or
or
in
xor
bound
outsb
jns
stos
ljmp
mov
je
add
lret
inc
cltd
lea
decl
xor
jp
cltd
xor
call
sub
ja
ljmp
loope
jp
inc
or
cmp
pop
mov
mov
or
inc
cmp
add
dec
add
test
mov
jb
out
mov
test
mov
add
jl
cli
inc
mov
into
jl
sbb
sbb
adc
ret
faddl
adc
pop
push
dec
fbstp
cmpsb
pop
fmul
pop
dec
pop
popf
mov
sbb
scas
cld
out
stos
jne
jecxz
mov
clc
sbb
xor
imul
adc
adc
pop
std
inc
pop
add
dec
fsubs
rcl
lods
xor
pop
ja
inc
andnps
cmp
and
loop
mov
shrb
pop
jb
push
out
jnp
xchg
stos
push
jg
push
sub
push
mov
pcmpgtd
add
ret
int3
jmp
leave
decb
add
xchg
pop
pop
fs
or
cmovp
inc
mov
push
movsb
sub
jbe
or
in
mov
or
add
lds
addr16
cwtl
sti
lods
movsb
ret
pop
ds
cmp
mov
jae
out
jne
ljmp
imul
mov
lods
call
xchg
movsb
fisttps
mov
lret
mov
pusha
jl
add
dec
pop
mov
add
jnp
rolb
popa
push
data16
mov
push
pop
shrb
outsb
adc
fdivs
adc
inc
imul
xor
xor
sbb
push
call
popa
movsl
add
pop
sbb
jl
inc
lret
ret
std
lods
and
adc
jnp
jl
dec
mov
or
sub
pop
or
fdivs
push
fs
sarb
insb
xchg
inc
pop
data16
pop
scas
into
movsb
daa
cld
popf
imul
adc
aam
test
inc
dec
xlat
movsb
orl
mov
push
xor
adcl
pushl
sbb
inc
stos
inc
cltd
fmuls
loop
jne
leave
fs
cld
shll
pop
mov
mov
pop
lods
and
cld
rcrl
sbb
push
mov
aad
xlat
out
pusha
inc
mov
clc
dec
xchg
push
and
int
jp
or
inc
mov
inc
sbb
or
cld
shl
mov
jge
cmp
aad
hlt
pushf
int3
hlt
bound
jmp
in
add
push
lds
add
movsb
shr
mov
ficomps
insl
insl
add
push
push
sbb
sarb
add
xchg
or
pop
lcall
and
mov
pusha
dec
pop
std
xchg
repnz
sub
push
sbb
push
movsb
ret
aam
xor
rcrb
dec
jo
fwait
xchg
loop
or
sbb
fildll
pop
fmulp
jb
pop
int3
dec
addr16
add
push
cltd
punpckhbw
mov
lret
stos
inc
jle
lods
fnstsw
xchg
pop
dec
dec
mov
adc
cwtl
fs
xchg
int
inc
and
sbb
adc
adc
jle
test
divl
fs
cld
dec
std
sub
daa
or
test
push
movsl
movsb
xor
inc
jp
lret
rol
test
repnz
mov
loope
stc
dec
inc
outsb
cmpsl
pop
and
pop
js
orl
xchg
mov
scas
sbb
es
shll
jbe
or
arpl
pop
andl
push
loop
ja
popf
add
insl
add
idivb
rcll
jp
loope
pop
sbb
dec
test
inc
mov
gs
mov
inc
inc
adc
xchg
dec
pop
pmulhw
mov
mov
pop
js
movsb
orb
push
pop
das
out
call
sbb
and
mov
fdivrs
hlt
add
adc
dec
into
ljmp
stos
out
adc
cmp
in
xchg
aam
fs
inc
mov
stc
mov
jns
pop
jp
mov
movsb
ds
push
jns
sub
inc
mov
int3
sub
decl
insl
push
loop
aam
pop
push
aad
mov
inc
pandn
andl
push
mov
orb
mov
fs
dec
push
cld
jg
jb
inc
inc
roll
lods
insb
fs
call
pusha
stos
inc
call
fmull
inc
xorb
insl
pop
jle
int3
pop
pop
lock
xchg
lahf
in
jl
call
sub
iret
push
and
xor
sub
jle
pushf
xchg
jg
fsub
insb
fidivs
push
rep
std
mov
stos
add
ds
sbb
fldenv
adc
cmpsb
mov
xlat
cltd
fldcw
mov
enter
sbb
mov
sarb
out
add
sub
orl
sbb
dec
movsl
rorl
mov
stos
lea
jbe
cmpl
mov
ja
test
lahf
fimull
out
std
adc
and
push
jae
mov
ffree
add
dec
adc
jno
pop
arpl
jo
cmp
pop
repz
or
ds
pop
jne
fisttpll
jp
sbb
iret
push
stos
fsubrs
dec
das
nop
add
negl
sub
mov
ja
cmp
cmp
cmp
repz
data16
lcall
orl
mov
add
fadds
jae
stos
loopne
push
scas
das
pop
xor
mov
jbe
cli
in
stos
dec
jg
sub
add
mov
dec
mov
cs
fwait
cwtl
push
lods
cmp
jecxz
outsb
loope
ljmp
cmpsb
dec
shld
testb
dec
push
xchg
fwait
sub
sbb
fs
mov
xchg
fimuls
incb
xchg
inc
sub
mov
scas
inc
jl
cmpsl
xchg
rcrb
xchg
lcall
fistpl
fdivrs
jp
negb
out
lret
mov
lods
push
ss
add
rep
mov
mov
xchg
not
push
shr
sub
push
add
pop
lds
and
jmp
jns
lcall
cltd
sub
call
out
mov
and
insb
arpl
push
popa
aas
jle
icebp
mov
xor
jnp
fs
bound
mov
jo
mov
jge
js
pop
hlt
cmpsb
repz
insl
xchg
or
cmp
jecxz
inc
andb
mov
push
insb
stos
mov
jp
pop
fidivrl
js
arpl
mov
in
inc
jns
or
jnp
in
gs
pusha
scas
jb
sub
jecxz
fnstenv
push
bound
or
cltd
dec
cld
es
sub
push
pop
dec
je
adc
inc
sub
jae
repz
pop
or
lds
pop
rcll
aam
daa
loope
repnz
sbbb
inc
and
test
xchg
movsl
inc
jo
sbb
cli
inc
inc
stos
imul
js
fildll
out
call
mov
cmpsl
sub
xchg
ss
mov
jb
sub
add
jne
mov
jne
inc
lods
mov
mov
xchg
jg
mov
or
or
fwait
bound
sub
push
cmpl
stos
xor
push
pop
andl
imull
and
push
mov
push
ljmp
add
xor
imul
cmpb
iret
imul
ficompl
mov
imul
adc
dec
dec
and
dec
and
insb
decb
dec
add
imul
iret
xchg
ret
loop
jl
sbb
push
sbb
add
fs
call
dec
mov
jle
mov
fadds
mov
or
enter
aam
or
adc
imul
ret
sbb
adc
stos
mov
lods
pop
stos
movsb
popa
jmp
fildl
pop
out
outsb
sti
in
pop
mov
ljmp
testl
adcl
lea
mov
out
pop
inc
mov
sbb
sub
xchg
loop
sub
and
cmp
jle
inc
insb
shlb
push
pop
push
mov
mov
push
inc
mov
cpuid
jmp
enter
sbb
jl
push
dec
repnz
mov
sbb
rorb
lds
add
sub
push
das
fbld
xor
push
xchg
jns
pop
shll
js
dec
add
lods
cmp
popa
sti
insl
pop
jae
push
pop
xchg
mov
add
xchg
daa
mov
push
dec
out
fmuls
das
dec
and
aas
pushf
mov
ja
imul
push
jo
bound
mov
inc
mov
push
insb
in
jb
repz
cmp
mov
ss
je
lods
out
jnp
sbb
push
inc
push
mov
jnp
pop
daa
rcr
imul
out
xchg
and
mov
inc
mov
xchg
icebp
and
fcmovne
push
xlat
fcoms
out
add
lahf
xchg
inc
mov
push
pop
dec
fs
pop
movsb
mov
mov
mov
sbb
ja
pop
popa
push
mov
into
scas
arpl
sbb
mov
aam
dec
push
adc
adc
movsb
mov
leave
sub
pop
xor
cwtl
pop
loope
jae
lods
or
sbb
dec
pop
call
loop
sbb
push
lods
ljmp
imul
stos
call
stc
lods
mov
data16
cld
and
pop
mov
fs
inc
pop
sub
pop
pop
and
jne
push
fsubs
inc
mov
pop
fs
xchg
shlb
mov
jge
xchg
out
fxch
xchg
fs
daa
adcb
es
cs
push
push
mov
dec
mov
stos
aad
or
es
insb
fdivrl
jae
lcall
pop
add
fstpt
mov
lret
and
ds
jnp
rcrl
mov
jge
cvtps2pd
mull
mov
pop
lahf
outsl
lods
js,pt
adc
mov
and
mov
dec
sbb
fwait
movsb
mov
ljmp
inc
in
push
inc
inc
mov
std
not
push
imul
mov
js
jmp
adc
sub
cmp
xchg
into
jp
aas
sub
xor
idivb
arpl
sub
inc
sub
js
stos
mov
ss
pop
fistl
jne
adc
int3
pusha
cmp
xor
xchg
add
mov
in
xor
mov
xor
xchg
test
movsb
loop
inc
inc
jp
inc
sub
loope
inc
add
aam
mov
push
imul
xor
jle
pop
inc
ret
mov
rep
aas
imul
sbb
outsl
xchg
xor
in
add
lods
ret
mov
and
in
pop
inc
into
fnsave
pop
mov
sbb
fisubrl
lahf
pop
fsubs
movsb
add
mov
sub
mov
mov
int3
addl
push
push
and
rcrb
pop
pop
mov
xlat
insb
testl
les
lds
ja
pop
sbb
movsb
cmp
xchg
inc
in
and
mov
les
add
xor
mov
ret
pop
test
nop
das
pop
inc
fs
adc
or
jbe
pushf
into
call
cmc
push
fisubl
mov
cs
jmp
inc
aas
xor
into
shlb
xchg
movsb
mov
aas
jo
pushl
inc
cmpl
decb
cli
sub
cmpsb
es
outsl
lcall
icebp
iret
adc
jl
lods
ret
sbb
add
je
aad
loop
sub
or
aas
in
jecxz
pop
pusha
jno
mov
popa
mov
mov
fs
in
cmpl
cmp
ficompl
mov
or
mov
mov
mov
addr16
mov
adc
mov
add
nop
add
xchg
fs
ret
push
push
ljmp
out
xor
arpl
xor
sbb
dec
push
jnp
sbb
cmp
push
adc
dec
fs
mov
jns
mov
loope
je
jb
outsl
push
cld
push
cmp
mov
adc
push
mov
cli
mov
xchg
cmc
jle
xchg
cltd
cmp
push
mulb
pop
movsb
inc
sub
mov
sub
cmp
iret
sub
dec
pop
add
jbe
shl
xor
mov
pop
repz
inc
pop
cltd
pop
mov
push
rcll
inc
push
inc
xchg
mov
sbb
or
ss
pop
roll
cmpsl
mov
flds
sahf
push
jno
je
dec
imul
lods
jnp
sub
xchg
iret
mov
movsl
mov
stos
fs
pop
icebp
es
ss
scas
push
jge
shrl
adc
in
clc
mov
xor
xor
lock
push
imul
ljmp
inc
or
inc
sub
push
and
xor
loope
jnp
fs
mov
je
push
jno
in
data16
sahf
jl
fnstenv
scas
lods
xchg
push
jo
sub
popf
aad
or
and
or
jmp
movsb
xchg
jo
sbb
push
jecxz
dec
or
xchg
mov
bound
and
and
cld
in
push
push
jle
imulb
movsl
sbb
fwait
das
outsb
inc
rcl
mov
mov
out
pop
dec
fwait
fs
gs
fs
movsb
clc
mov
fildl
movsl
or
xchg
sub
sub
push
jo
sub
sub
mov
fldcw
test
pushf
lock
push
jo
jmp
push
xchg
adc
xor
sbb
repnz
stos
sub
add
jb
xchg
mov
repz
mov
pop
jbe
cmp
test
test
dec
test
cmp
pop
jp
xchg
sub
push
out
fwait
push
scas
push
lcall
push
xchg
push
mov
sub
pop
cltd
pop
in
xor
push
inc
xchg
pop
shrb
or
mov
pop
pop
stc
movsl
stos
fldt
rcll
sbb
movsb
mov
sti
or
loope
push
jl
and
mov
dec
rcll
sbb
sub
push
lods
jg
lea
mov
push
dec
pop
int3
out
aas
and
test
nop
lods
adc
das
adc
sub
or
js
out
idivb
sub
into
lahf
repz
loopne
fcmovu
xchg
out
mov
push
sub
sub
sbb
push
add
scas
sbb
or
fs
lea
es
imul
shrl
test
or
mov
mov
cmp
imul
sti
xchg
lds
sbb
fsubrl
popa
add
cs
sub
or
mov
repnz
mov
pop
and
cld
jb
ret
xchg
adc
sbb
and
jnp
jbe
xor
jge
jecxz
mov
icebp
mov
dec
cmp
ds
dec
out
insb
leave
outsb
jmp
dec
mov
mov
sbb
push
xchg
in
pop
inc
fsubl
mov
jnp
add
insb
std
inc
push
lea
ret
or
lcall
sbb
orb
pop
cltd
imul
adc
sti
xchg
push
popf
dec
scas
pop
inc
adc
inc
dec
cmp
imul
repnz
into
repz
xor
pop
cli
push
pop
push
mov
divl
enter
fs
stos
xchg
jg
ret
loope
adc
fs
rorl
cltd
mov
jb
test
ja
lret
stc
xchg
push
lods
or
lods
arpl
adc
xchg
test
testb
aaa
inc
jne
ret
int3
pop
dec
inc
bound
dec
pop
fistps
jbe
cmp
sbb
fisttps
lret
cmpl
sbb
movsb
mov
ds
mov
adc
and
pop
jae
cmp
adc
roll
inc
pop
or
aad
adc
cmp
pop
add
sub
lret
out
mov
fwait
clc
pusha
sahf
rcl
sub
mov
repz
mov
jp
lahf
and
fildll
ljmp
xchg
subl
jp
les
std
or
movsb
ret
jge
mov
rcrl
movsb
fimuls
into
pop
data16
pop
pop
repnz
popa
jb
mov
outsb
or
push
sar
push
push
jb
aam
or
mov
lcall
int
jne
imul
aaa
xchg
or
push
adc
ljmp
sub
and
cmp
repz
js
fwait
adc
fcom
lcall
mov
push
push
sbb
add
dec
inc
dec
cwtl
fimuls
les
adcl
jae
mov
out
or
mov
dec
leave
fwait
mov
push
leave
mov
test
sub
repz
nop
es
pop
jge
inc
stc
mov
xchg
mov
mov
ljmp
lods
fs
adc
lea
pop
movsb
in
mov
or
andl
clc
xchg
vmwrite
adc
pop
xor
nop
lods
out
lods
fs
jmp
repz
ljmp
mov
jl
inc
mov
mov
jb
lea
mov
insl
lret
shl
ret
lods
sub
jl
mov
xchg
es
call
xchg
imul
add
out
std
in
xor
ss
or
scas
seto
mov
lea
inc
mov
adc
mov
ljmp
inc
inc
jae,pt
adc
jp
fs
test
enter
sub
cld
jb
inc
inc
push
push
call
mov
xchg
cmp
in
fildll
xor
dec
push
sbb
sbb
mov
mov
pop
inc
mov
pop
cli
jns
jge
dec
lret
mov
cld
fnstsw
inc
movsb
outsl
aas
loope
jne
andb
jle
mov
dec
inc
sbb
add
pop
ss
dec
les
stos
cmp
fimull
push
into
push
xor
sub
fisubl
inc
inc
mov
out
std
nop
ret
add
pop
jg
mov
push
or
add
xchg
das
xchg
data16
inc
push
dec
sub
and
xchg
and
lret
cmp
insl
clc
fs
scas
xor
or
jne
cmc
inc
fwait
dec
aad
xchg
insl
jno
movsb
push
cld
fs
or
out
das
push
pop
jg
jl
push
xor
test
xchg
movsb
hlt
call
mov
ret
js
scas
imul
stos
jo
add
in
into
into
jae
jno
les
mov
sub
xor
sub
xlat
dec
cld
adc
movsb
test
dec
xchg
push
sub
xor
scas
cwtl
jmp
mov
std
cmp
or
sub
lock
scas
sahf
add
je
daa
pop
sti
mov
push
cmpsl
lock
mov
insb
fmuls
adc
mov
mov
adc
pusha
cld
fs
inc
leave
imul
sbb
or
nop
addr16
imul
out
lcall
push
push
out
mov
sbb
push
popf
imul
movsb
pop
mov
jns
mov
in
xlat
xor
fimuls
cmc
xlat
aam
fldenv
lret
add
adc
rcr
loope
mulb
mov
xchg
sub
push
push
sbb
ss
push
inc
insl
mov
out
pushf
inc
add
sbb
enter
jmp
cs
mov
sbb
in
test
imul
daa
sub
push
imul
pop
test
jp
cmp
cmp
sbb
pop
lods
mov
mov
imul
movsb
sbb
stos
into
xor
lahf
inc
xchg
mov
adc
jp
adc
dec
int3
out
add
inc
lods
stc
and
in
js
inc
cmp
insb
movsb
adc
dec
repnz
jge
lret
dec
fs
push
icebp
xchg
ss
adc
jbe
into
jle
arpl
and
cmp
jo
add
add
inc
dec
xor
inc
sbb
outsb
dec
out
rcrb
dec
dec
pop
sub
jne
rcrl
addr16
js
mov
lods
fisubs
xor
adc
ficoms
cmp
push
bnd
cmc
lods
dec
js
xchg
pop
sub
in
iret
or
jp
shrb
not
out
and
jns
and
adc
out
fldt
testl
cmp
jne
dec
gs
xchg
add
repz
push
lret
pop
or
and
sbb
fisubl
subb
dec
daa
adc
movsl
sub
das
and
inc
dec
jne
in
add
cmp
hlt
aam
inc
insl
mov
into
movsl
jecxz
mov
imul
xor
inc
mov
or
dec
mov
js
dec
add
aas
movsb
clc
push
arpl
mov
call
push
add
jle
add
das
adc
mov
inc
jae
sub
rorl
adc
xor
sub
test
imulb
mov
cld
jl
push
inc
arpl
xchg
jge
in
add
movsb
movsb
les
aas
adc
mulb
in
adcl
and
ss
lock
cmpsl
ja
es
lret
inc
movsb
push
ret
movsl
test
sahf
sbb
fwait
js
dec
push
dec
sbb
out
cmp
sbb
xor
sub
icebp
sbb
js
in
mov
inc
cmpsl
cli
cld
inc
and
pop
dec
movsb
sti
loopne
dec
enter
pop
popa
xchg
movsb
jb
insb
in
adc
fs
push
in
inc
sti
ret
or
add
mov
inc
xor
mov
jbe
or
and
jle
mov
push
push
inc
adc
popf
dec
insl
enter
mov
mov
add
mov
dec
nop
aam
add
mov
adc
ja
popa
fs
and
int3
pop
xor
inc
mov
lahf
rcrl
xor
dec
jle
jmp
pop
ja
jb
inc
xchg
xor
es
push
jle
je
dec
insl
hlt
sub
into
mov
dec
jg
dec
and
repz
jg
xor
add
popf
mov
pushl
push
add
adc
je
push
loop
ljmp
xchg
fs
sbb
inc
pop
fcoml
mov
fisubl
add
sub
dec
pusha
cli
fs
rcll
out
jge
mov
in
push
mov
dec
push
jp
or
insl
test
dec
icebp
pop
data16
cmp
dec
outsb
pop
add
fdiv
or
fdiv
add
rolb
fmul
sbb
xchg
cmc
insl
cli
cwtl
jge
leave
cmp
mov
or
cmpsb
xor
shll
pop
mov
jg
fldcw
in
int
push
paddb
cmp
mov
adc
cmp
push
pop
pop
jb
fistpll
mov
cmpsb
jp
fcmove
push
faddp
imul
push
int
xor
jg
xchg
ss
leave
or
out
rol
stos
int3
cld
xchg
cli
jne
mov
out
jle
mov
jmp
cmp
pop
inc
jb
xchg
in
cld
ja
cmp
movsb
scas
movsb
mov
std
mov
orb
mov
hlt
mov
movsb
lcall
push
or
jnp
js
jp
inc
mov
inc
pop
cmp
xchg
lret
les
push
addr16
mov
adc
jp
mov
adc
subb
or
mov
xor
sahf
in
test
mov
sbb
xor
setae
mov
outsb
mov
in
adc
dec
lods
pop
ret
xchg
repnz
aad
rcll
in
pop
inc
mov
inc
sti
mov
addl
nop
in
sbb
stc
pop
subb
jmp
aas
fs
fld1
pop
sub
jnp
jb
fsubrs
push
sbb
nop
push
cli
lods
xor
jecxz
std
jbe
push
std
inc
aas
cltd
and
jne
dec
hlt
fs
out
push
xchg
jmp
test
sbb
mov
lods
or
mov
inc
dec
xchg
addl
enter
je
into
push
insl
lcall
imull
sbb
dec
inc
mov
lds
jl
hlt
pop
cwtl
fbld
adc
outsl
fdivrl
arpl
dec
sub
cmp
cmc
shll
pop
cwtl
push
outsl
mov
ss
loopne
sbb
pop
xor
loop
add
iret
lahf
nop
daa
cli
cmpsl
mov
repnz
or
cli
popf
orl
push
xchg
cwtl
xchg
inc
popa
in
push
add
cmp
cld
in
mov
arpl
jno
movsb
add
ja
orl
call
lods
ds
push
pop
scas
push
sbb
jg
sbb
adc
dec
test
or
aas
push
jmp
jns
or
push
xchg
mov
adc
xlat
fwait
inc
jno
fidivrs
mov
cmp
mov
ds
lods
push
or
lret
adc
pop
fistps
mov
or
sub
mov
mov
mov
push
xor
lds
sub
sbb
loope
into
sub
or
or
stos
adc
pop
sbb
inc
push
shlb
inc
clc
lea
pop
sti
stos
sbb
xchg
repnz
lods
inc
popa
lods
sbb
inc
or
mov
mov
cli
loopne
and
addr16
test
outsb
mov
clc
and
adc
cmp
xor
push
cltd
jmp
insl
inc
pushf
leave
std
jecxz
push
xor
xorl
adc
dec
inc
outsl
add
cmp
stos
mov
test
cmp
dec
mov
imul
mov
mov
lds
pushf
js
mov
xchg
out
sub
incl
cltd
pop
stos
rcll
in
xchg
jns,pn
incl
push
lea
std
push
ret
or
add
sub
fs
xor
and
std
dec
in
movsb
jmp
adc
mov
pop
jbe
inc
cmp
inc
repnz
xor
mov
stos
aad
aas
push
out
lock
repnz
dec
incb
lahf
jne
cld
cmp
adc
jg
pusha
push
ljmp
and
outsl
add
inc
adc
adc
dec
rep
clc
pop
rolb
jbe
in
sbb
fs
dec
incb
inc
push
pusha
or
cltd
jae
inc
icebp
mov
pusha
out
lcall
dec
stos
imul
mov
jle
fsubl
rorl
repnz
sahf
movsb
lret
daa
rcrl
dec
int
mov
scas
adc
sub
fildl
and
or
aad
xor
mov
hlt
pop
mov
mov
loope
or
fidivrs
int3
push
add
jns
loop
leave
sub
mov
repnz
jne
arpl
cwtl
movsb
and
cmpsb
jecxz
or
insb
scas
hlt
pusha
xor
aam
sbb
aam
scas
dec
adc
or
stos
es
repnz
adc
jo
loopne
sbb
fs
xor
push
stos
ja,pt
aaa
loope
call
jmp
fs
mov
out
mov
repz
fisubs
sbb
adc
sbb
out
add
add
adc
xchg
add
xor
addr16
rorl
loopne
pop
add
mov
es
sub
jno
mov
inc
xor
fs
popa
mov
shll
je
dec
insb
inc
test
sbb
mov
cwtl
push
movsl
inc
sbb
cmpsb
out
cmpsl
adc
clc
mov
icebp
lret
or
and
cltd
ds
fstl
mov
lret
js
fiadds
cs
in
cmp
jp
mov
out
mov
hlt
jp
xlat
hlt
add
or
leave
and
mov
ret
dec
in
out
pop
sbb
adc
fsubrp
out
sbb
cwtl
pop
cld
mov
icebp
mov
clc
call
push
int3
pop
ss
imul
fcoms
mov
push
ds
in
mov
sti
fwait
jbe
dec
jbe
inc
jp
sub
in
sub
add
dec
sub
pop
aam
xor
mov
pop
sbb
lea
cmp
jle
xor
dec
movsb
and
sbb
mov
into
or
dec
xchg
inc
and
aad
ljmp
jnp
lods
xchg
ljmp
popf
inc
mov
lahf
jge
mov
push
mov
jl
add
inc
adc
dec
pop
in
inc
shrb
adc
mov
rolb
mov
cli
cmpsl
test
xor
iret
call
add
push
lock
or
lods
jo
ret
lods
test
out
mov
add
dec
movsb
mov
stos
pushf
pop
jb
imul
int
lret
sub
adc
jle
mov
sub
fs
repnz
ljmp
inc
aad
int
pop
mov
jo
enter
or
loopne
inc
hlt
ljmp
shrd
outsb
sbb
loopne
repnz
stos
fmulp
dec
push
das
in
pop
xchg
cld
sbb
dec
xor
mov
ljmp
pop
lcall
xchg
adc
mov
lret
loop
lea
xor
or
pop
jo
add
ds
adc
subl
xchg
adc
cltd
adc
sub
sbbl
adc
mov
call
mov
jle
jne
iret
stc
lods
movsb
out
push
fsin
jp
mov
int3
adc
push
fadd
scas
dec
jmp
mov
fs
subl
sbb
sub
ljmp
imul
push
xor
cmc
js
push
push
mov
inc
pusha
sbb
insl
dec
cmp
push
in
jo
and
mov
sub
cmp
cs
pop
cltd
into
lods
jnp
mov
pop
aad
push
xlat
sbb
sub
fnsave
bound
inc
push
lea
xlat
pop
sbb
iret
sarb
popa
mov
mov
sub
es
push
inc
xchg
mov
ret
xor
push
mov
push
pop
sbb
add
sbb
inc
aas
mov
into
fdivl
dec
jle
mov
mov
mov
iret
push
xor
jns
mov
cmp
addb
call
std
jae
sub
test
lods
popa
jle
rcl
fs
jp
pop
loopne
mov
adc
in
mov
fstpl
aaa
push
pop
stos
stos
xor
xor
mov
add
push
mov
xor
and
mov
push
cmp
pop
or
data16
inc
mov
sti
lods
popf
ret
test
cli
mov
xchg
jmp
movsb
push
jl
pop
add
nop
test
pop
cmc
inc
incb
mov
fdivrs
popf
fcompl
xor
sbb
adc
les
ljmp
jge
dec
or
in
add
cmpsl
push
out
test
inc
or
out
ss
push
mov
pop
adc
or
outsb
xor
enter
pop
jle
inc
pop
dec
jnp
cs
gs
xchg
clc
jg
repnz
movb
and
ret
and
mov
loope
out
cli
adc
mov
scas
mov
ljmp
mov
icebp
ljmp
dec
dec
mov
lahf
mov
out
mov
test
ret
mov
dec
dec
cwtl
mov
fiaddl
out
fsts
inc
insb
sub
fnstcw
xchg
ret
sbb
xchg
icebp
xchg
aas
incb
mov
aam
insb
jbe
inc
sub
sbbb
je
xor
sub
mov
mov
jno
imulb
insl
pop
sub
sbb
mov
push
cmp
lret
mov
add
rolb
jne
hlt
jne
rcr
push
dec
push
lds
dec
jo
mov
imul
vmread
jns
popf
mov
fdiv
filds
add
test
lahf
pop
mov
and
movsb
jecxz
fs
jl
mov
std
outsb
xor
repz
push
or
mov
outsb
aam
jns
pop
adc
outsl
lcall
pop
sub
jle
mov
je
mov
dec
xchg
sbb
sub
dec
inc
push
jne
mov
cmp
adc
hlt
jnp
xor
inc
pop
sahf
xor
sbb
mov
dec
add
cs
xor
inc
mov
std
mov
loopne
dec
repz
cmpb
lods
movsl
or
stos
insb
push
dec
jmp
shl
gs
fs
aam
fsubrl
or
out
mov
cmpsb
and
add
sbb
in
shrl
mov
in
cli
cmp
and
fs
iret
insb
in
dec
movsl
repz
test
out
ds
add
frstor
loop
into
dec
mov
shr
xchg
xlat
mov
push
xchg
iret
pop
xchg
inc
inc
inc
loopne
sbb
sub
inc
clc
aad
jnp
in
jne
cld
push
pop
mov
pop
bound
imul
or
stos
cmpsl
dec
jmp
jmp
mov
lret
inc
cltd
movsl
fiaddl
movsl
test
js
rol
xchg
pop
icebp
pushf
sub
stos
inc
push
pop
pushf
cmp
xor
push
stos
dec
xchg
pop
psubd
and
out
inc
xlat
das
jno
cmpsl
movb
pop
pop
lds
cmp
sahf
adc
mov
or
inc
lods
mov
lock
mov
inc
add
xor
lret
in
or
movsb
sub
movsl
xchg
inc
or
mov
stos
inc
mov
divl
popa
hlt
fs
jnp
push
pop
xchg
mov
movsb
mov
loop
cmp
fs
enter
leave
ss
sub
popf
fnsave
lret
adc
xchg
mov
movsb
loope
jnp
nop
movsl
pop
out
adc
adcb
lcall
xor
stos
in
xchg
pop
mov
aaa
js
push
test
and
push
clc
rolb
es
lods
icebp
out
out
fs
pop
adc
sbb
mov
jle
jl
rcll
inc
mov
adc
push
cltd
inc
mov
mov
xor
jge
jmp
pop
jmp
jb
jmp
imul
lds
sahf
dec
fldenv
xchg
iret
sbb
push
jmp
push
mov
jbe
lods
fcompl
repz
jmp
mov
sbb
js
movsb
icebp
jp
lods
sub
mov
mov
and
pop
or
pop
aas
xchg
inc
data16
xor
jns
dec
lds
pop
mov
xlat
and
and
mov
leave
out
sar
pop
mov
sti
lcall
repnz
jnp
dec
jecxz
add
bound
test
sbb
cmp
xorl
push
or
cld
xor
enter
or
xchg
sbb
leave
pop
les
jns
orl
and
jne
stos
push
movsb
pop
testl
dec
or
out
pop
notl
imul
ljmp
jmp
out
fstps
fs
icebp
mov
fistl
outsl
pop
xor
mov
dec
push
jno
push
pop
jg
or
fwait
movsb
sti
es
mov
add
xor
js
cld
ret
add
add
jle
push
jo
adc
cmp
cwtl
add
inc
stos
inc
push
jbe
fimull
jecxz
push
insb
mov
repz
test
cltd
mov
jae
mov
movhps
lods
movsb
push
cmc
mov
cs
repnz
sub
ficoms
ljmp
cld
ljmp
jle
pop
popf
cmp
cli
sub
push
in
mov
movsb
ds
int
pcmpgtd
das
lock
loop
pusha
fs
add
sbb
cltd
rclb
loopne
push
pop
xchg
test
mov
cvttps2pi
pop
cld
insb
mov
std
push
je
mov
add
cli
adc
sub
xchg
cmp
lret
outsb
movsb
mov
std
out
jno
cmp
adc
cs
jbe
std
cmc
sbbb
mov
inc
mov
std
call
sbb
jno
xor
clc
aad
repnz
lock
std
lahf
out
ds
pop
cmp
imul
mov
arpl
mov
into
mov
fs
xchg
mov
repz
fisubs
test
cmc
dec
and
push
mov
jb
inc
ss
sub
push
rcr
mov
cli
cld
mov
jge
or
push
mov
aad
int3
adc
mov
subb
inc
cmp
push
sub
add
ds
pop
mov
out
sub
xchg
call
push
push
jae
and
pushf
adc
in
inc
lret
or
je
lret
sub
in
add
jbe
fs
das
out
ljmp
jg
jl
adc
aam
adc
andl
mov
idivl
ss
jnp
adc
or
mov
test
arpl
je
pop
stos
dec
jl
xor
pop
mov
in
dec
movsb
add
ljmp
aam
in
rclb
stos
out
into
cmp
int3
inc
push
sbb
in
adc
frstor
nop
into
test
out
outsb
aas
xchg
je
push
mov
loop
lods
fs
jns
movsb
stos
imul
or
xor
sub
dec
add
xchg
sub
test
dec
add
jbe
dec
call
in
jecxz
outsb
dec
sub
sti
loope
outsl
daa
dec
adc
rcll
fcom
cmpsl
lods
lds
push
mov
mov
mov
push
mov
cmp
cltd
mov
mov
xor
sub
xchg
mov
addr16
xchg
jbe
lods
and
insl
imul
fidivl
adcb
jle
imul
lret
xchg
jno
sbb
out
mov
arpl
sub
push
out
sbb
sub
dec
sbb
xor
inc
inc
and
jb
out
movsb
and
push
push
xchg
shrb
aad
pusha
int3
lcall
push
sbb
xchg
adc
ja
pop
sub
dec
mov
fwait
adc
pop
pop
movsb
popf
in
sub
mov
lds
shr
fisubl
test
and
inc
ss
jno
push
inc
icebp
mov
scas
ret
xchg
mov
or
jae
inc
dec
in
hlt
mov
jb
fcoms
stos
mov
rclb
mov
adc
js
lret
mov
mov
insb
mov
sbb
fdivrp
mov
jg
push
inc
stos
int
pop
leave
push
insb
lods
pushf
cwtl
jg
enter
xchg
sbb
adc
jbe
jg
pop
dec
sarb
test
add
ljmp
jp
xchg
mov
imul
jg
dec
mov
mov
mov
xor
shl
movsb
cwtl
out
mov
or
call
push
dec
mov
inc
movsb
ror
jnp
sbb
divl
mov
jo
and
mov
popf
stos
ss
xchg
mov
insl
sbb
jecxz
stos
mov
out
or
insb
mov
or
jg
xchg
lods
fs
test
xchg
mov
xchg
pushf
inc
loope
mov
xchg
faddp
insl
jmp
inc
pop
les
push
pop
rcll
push
add
xlat
cltd
jb
std
out
pop
xchg
mov
jnp
shr
test
adc
push
cwtl
ljmp
cwtl
rorl
imul
dec
push
sbb
adc
inc
add
xchg
mov
push
repnz
sub
dec
jge
loop
pop
or
mov
xchg
loopne
sub
into
movsb
add
jle
mov
mov
adc
fildll
xor
and
mov
addr16
divl
fcoml
movsb
push
mov
mov
or
or
sbb
imul
xchg
cld
cmp
mov
cmpb
scas
aad
mov
int
dec
mov
or
std
xor
movsb
jae
add
pop
xor
and
lds
mov
sub
lock
pop
adc
test
xor
sbb
sbb
add
xor
imul
push
mov
es
xor
aas
mov
inc
insb
mov
insl
sub
push
aad
inc
push
jle
fadd
fs
int3
xor
lahf
xchg
loopne
cld
mov
lcall
inc
cmp
sub
sbb
jmp
arpl
mov
sbb
xor
jbe
or
or
mov
js
inc
cmc
adc
jecxz
shrl
jmp
push
sti
jb
cmp
cmp
inc
cmpsb
stos
inc
mov
cmp
aas
xchg
push
movsb
movsb
xor
jp
lret
mov
xor
lret
dec
std
fnsave
int3
sbb
js
jg
pushf
faddp
add
inc
inc
xor
lret
mov
or
jae
in
call
movsb
and
add
dec
jns
push
call
xlat
lods
push
in
ss
jl
mov
xlat
pop
add
jge
add
fidivs
pop
sti
or
lods
jae
lcall
lea
mov
lea
sbb
adc
inc
out
or
dec
dec
push
cmpsb
push
dec
push
inc
pushf
push
je
push
ljmp
leave
push
pop
decl
sarb
mov
ficoms
fnstcw
xor
dec
int
aas
loop
xlat
es
movsb
xor
repz
je
lcall
jl
pop
nop
push
outsl
or
jecxz
xchg
into
aas
lcall
loop
mov
dec
mov
mov
gs
mov
hlt
mov
adc
dec
mov
jno
loope
fwait
and
ljmp
es
mov
sbb
cmp
in
inc
andl
pop
enter
scas
sub
mov
gs
jo
push
imul
movsl
rcr
sub
enter
xchg
jb,pn
jge
movb
divl
fsubs
incb
fld
test
adc
pop
popf
mov
int3
mov
sub
insl
jbe
jg
inc
mov
stos
enter
add
pop
push
movsb
je,pt
popa
mov
inc
shll
cmp
shr
insl
add
cltd
fwait
cmp
in
aas
arpl
xchg
xchg
loope
mov
push
pop
shll
test
bound
addr16
insb
in
fsubrl
fldt
fdivrl
pop
mov
dec
stc
aad
es
sbb
das
xchg
jnp
ret
lea
cmpsl
je
push
addr16
sbb
push
int3
dec
cld
imul
inc
outsl
call
sbb
scas
data16
or
adc
scas
mov
sbb
xor
bound
pop
mov
xor
dec
dec
test
lret
jbe
cmp
cltd
enter
lock
std
shll
inc
nop
mov
pushf
in
inc
lret
jno
scas
mov
outsb
sti
ds
mov
pop
cmpsb
outsb
mov
xchg
leave
or
data16
aam
xor
mov
movsb
ret
stos
insb
add
fs
std
pushf
push
hlt
push
adc
jp
inc
xor
pop
pop
push
push
jp
or
add
or
adc
movsb
in
jbe
ja
adc
repnz
pop
mov
loop
lods
movsb
sbb
movq
lds
and
jae
out
int3
int
inc
xor
cmp
jle
leave
mov
sub
xchg
ret
sbb
push
jmp
shlb
mov
fildl
shll
orb
xchg
dec
push
xchg
stc
pusha
ss
ss
sahf
adc
iret
imul
addr16
sbb
jne
insb
insb
shrb
push
pop
fwait
xor
push
adc
dec
mov
sbb
jnp
dec
rcrb
pop
adc
addr16
js
jb
and
out
scas
aas
in
xchg
shrb
mov
xchg
sti
test
push
jg
fwait
mov
pop
lods
negl
jle
imul
into
xchg
pop
jnp
fs
stos
out
lock
daa
jno
xchg
mov
jnp
inc
fldenv
mov
cmpsl
dec
insl
jl
roll
and
sarb
lret
mov
xchg
aas
movsb
cmp
out
je
in
jle
fwait
pop
add
jne
lds
rcrb
mov
push
test
push
loope
cwtl
mov
imul
add
fs
andb
sbb
sbb
stos
mov
je
lea
jecxz
sub
in
int
and
mov
cmp
push
adc
or
xchg
jp
mov
repz
nop
xlat
imul
inc
sub
mov
into
popa
mov
popf
jle
out
leave
movsl
mov
outsb
xchg
filds
mov
cld
lret
repnz
or
push
dec
stos
arpl
sbb
movzwl
stos
in
outsb
ror
in
fwait
inc
mov
adc
sbb
fs
jl
lret
ljmp
jg
out
inc
jns
outsb
sahf
fwait
mov
sbb
and
sbb
push
add
adc
or
mov
mov
cli
dec
fs
or
cmp
in
pop
inc
push
mov
cmp
ja
or
adc
jecxz
mov
mov
ljmp
ror
xor
xchg
addb
out
mov
loopne
mov
daa
icebp
cld
aad
sbb
cmp
cltd
xor
fbstp
lods
fadd
jmp
fwait
loopne
mov
movsb
js
push
lahf
mov
test
xor
insb
out
pushf
loopne
xchg
fs
push
rorb
lods
jecxz
test
mov
jo,pn
movsl
adc
in
xor
inc
dec
xchg
lods
cwtl
inc
inc
jae
inc
xchg
ror
ja
imul
cmp
dec
sub
push
lds
inc
pop
lcall
xchg
into
xor
xchg
insb
jbe
sbb
or
loop
dec
mov
pop
xor
jg
in
fcmovnbe
mov
push
loop
cmp
sub
pop
lret
imul
cmp
sbb
lahf
daa
test
js
mov
cmpsl
fldl
cltd
and
pop
cwtl
and
jp
stos
out
push
sub
dec
andl
jle
loope
pop
dec
outsb
add
jae
lds
jl
out
inc
mov
inc
movsb
sbb
popa
sub
jmp
mov
rolb
push
add
and
ljmp
sub
pop
pop
mov
lods
add
bound
das
mov
shll
test
into
movsb
aad
jbe
jmp
enter
mov
scas
jno
cs
pop
or
jbe
sarb
mov
outsb
jecxz
push
pop
outsl
xchg
ss
js
movsb
and
imul
sbb
or
cld
add
cmp
inc
add
xchg
push
xlat
test
into
shlb
fs
or
in
inc
mov
ss
add
test
enter
test
pop
adc
pop
xlat
ja
aam
sbb
cmp
sub
das
jmp
pushf
and
lret
sub
jo
in
loope
inc
decb
adc
aas
decl
fnstcw
outsb
pushf
pop
lea
and
lcall
inc
stc
and
fptan
add
fldt
mov
xchg
adc
and
das
movsb
out
dec
and
or
lods
or
pop
movsb
or
lods
cmc
movsb
sarl
imul
gs
movsb
aas
cwtl
mov
jbe
addr16
lret
repnz
dec
mov
xchg
mov
inc
jnp
jne
inc
cld
cmc
dec
sbb
pop
sti
mov
sti
mov
inc
or
mov
mov
cmp
testb
pop
mov
adc
out
add
pushf
cmp
xchg
sub
popa
scas
or
rcrl
repnz
mov
mov
jg
jno
lret
pop
add
adc
mov
cmc
inc
push
mov
inc
cmpsb
dec
cmp
sbb
daa
popa
mov
push
cmpsl
pop
jmp
dec
pop
cmp
mov
add
mov
xchg
dec
lret
test
xchg
cmpsl
into
js
mov
sub
dec
jns
jb
adc
outsb
sub
data16
mov
test
jb
xlat
aad
outsb
lcall
ss
push
mov
mov
add
jae
sbb
dec
jne
ss
mov
inc
movsb
shlb
or
imul
mov
ljmp
daa
jecxz
movsb
jg
pushf
aaa
hlt
mov
jle
cmc
es
aad
xor
adc
sar
rcrl
pushf
sub
mov
lock
cs
mov
mov
popa
and
dec
out
in
mov
sbb
popa
add
imulb
sbb
pop
jp
and
decl
sbb
sub
outsb
inc
adc
lods
mov
shlb
dec
aad
mov
jo
xchg
inc
mov
adc
nop
xorl
pop
movsl
push
jae
cmp
imul
adc
add
testb
das
cmp
pop
adc
lods
sub
mov
lods
orb
mov
lods
rcrb
or
cmpsb
aaa
lret
fisttps
mov
adc
fs
inc
fbld
adc
cmp
and
mov
xor
clc
int
shr
mov
insl
mov
sti
cmp
mov
mov
popl
inc
inc
cmp
pop
ret
mov
ds
jns
jge
dec
pop
mov
inc
push
mov
jmp
out
xchg
mov
dec
lds
adc
pop
inc
fdiv
aas
push
xchg
adc
xchg
insl
mov
inc
jns
sbb
jecxz
pushf
dec
je
pushf
cwtl
std
inc
rcrb
in
mov
mov
pop
mov
hlt
xor
in
cmp
out
movsb
inc
mov
mov
outsb
mov
sarl
jge
subl
cld
xor
sub
mov
sbb
pop
cwtl
sbb
fwait
in
imul
xor
shrb
daa
sub
sbb
scas
cli
lret
sub
addr16
pop
sbb
es
in
mov
rcrl
cmc
nop
test
add
imul
stc
mov
fisttps
add
movsb
push
les
mov
mov
clc
pusha
xlat
sub
sbb
and
jmp
out
mov
mov
jo
sarb
mov
dec
inc
fdivrs
into
pop
cwtl
test
mov
rcrl
dec
inc
in
enter
loop
insl
mov
not
jo
sahf
loop
inc
lahf
gs
int3
xchg
inc
aad
dec
add
mov
dec
nop
jnp
push
test
stos
or
cltd
add
pushf
jb
inc
sbb
insb
std
jo
iret
aad
add
addr16
mov
out
cs
andl
shlb
insl
test
pop
inc
fistps
push
mov
inc
aaa
sbb
inc
mov
test
sbb
or
cltd
cld
in
cmp
shll
mov
mov
out
mov
or
or
imul
push
mov
mov
sbb
sbb
fdivr
test
test
dec
pusha
out
fs
clc
adc
fistpl
jp
in
rcll
loopne
int3
ds
mov
dec
or
lcall
cmp
test
cmp
jae
into
leave
jo
out
jecxz
jl
out
and
adc
or
pop
xor
or
out
jae
xorl
dec
adc
xor
adc
repz
mov
or
push
out
and
mov
loopne
lods
mov
jp
dec
movsb
or
push
dec
mov
jb
insl
lock
lock
xchg
js
push
push
sbb
push
and
mov
cmp
mov
add
cmpsl
push
mov
cmp
pop
and
aad
outsb
jl
mov
nop
mov
jne
mov
in
mov
mov
test
mov
sbb
imul
cmp
mov
pop
push
repnz
adc
in
pop
cmp
jp
xchg
pop
cs
inc
sub
dec
inc
mov
into
mov
mov
inc
mov
dec
xor
addr16
mov
popa
clc
fs
sbb
and
inc
dec
inc
sbb
movsb
sar
push
pop
jnp
pop
jo
jg
push
pop
lods
adc
lea
xor
mov
and
nop
sbb
scas
jb
inc
cmp
bnd
lods
mov
jp
movsb
jns
fsubs
adc
xchg
out
lret
mov
lcall
cmpsl
sti
mov
inc
xchg
sbb
fildl
mov
pop
cmpsl
or
mov
xchg
sbb
mov
xchg
and
pop
je
sbb
fmuls
inc
adc
push
jmp
outsb
push
jl
out
and
inc
dec
out
push
incl
pop
aam
aam
and
ficomps
mov
scas
add
add
add
mov
cwtl
inc
lret
xchg
lods
rorl
xlat
mov
push
mov
xchg
shrl
inc
arpl
enter
pusha
dec
fs
push
sub
insl
outsb
insl
xor
sbb
ret
fld
in
or
jne
xorb
sbb
xor
dec
push
xchg
xchg
lcall
arpl
aad
fldt
into
sub
imul
imul
out
test
lods
pop
clc
dec
pusha
xor
mov
adc
adc
mov
stos
push
push
pop
push
cltd
adc
and
mov
push
fsubs
jae
fdivl
add
mov
movsl
push
pusha
mov
mov
test
fwait
das
mov
cmc
mov
pop
adc
cltd
fadd
add
fs
mov
mov
and
repz
inc
popl
fisubrl
lods
lahf
mov
xor
daa
xor
stos
adc
in
sar
dec
cmp
and
jnp
sbb
cltd
mov
repnz
mov
movsb
lret
cld
jae
sub
dec
xorl
dec
out
popa
push
mov
into
mov
jle
fs
sbb
sahf
xchg
pop
mov
mov
test
into
fcoms
lret
push
add
rclb
or
loope
insl
cld
mov
out
aas
jo
ds
fs
data16
nop
push
hlt
ss
fs
out
adc
sbb
mov
push
ljmp
ficoms
and
xor
test
dec
jbe
int3
mov
mov
sub
out
cli
movsb
fs
arpl
jnp
xor
fdivl
mov
stos
pop
js
nop
mov
es
sub
shl
stos
push
inc
jle
test
dec
cmp
shld
stc
in
push
aas
iret
imul
stos
xor
push
movsb
in
dec
in
xchg
popa
in
imul
add
in
push
sbb
es
mov
inc
inc
cltd
call
ret
xor
repnz
sti
pop
jg
out
xor
inc
mov
adc
lcall
inc
mov
push
icebp
clc
mov
mov
and
fcomi
pop
imul
mov
std
mov
sbbb
in
out
aas
mov
fdivl
mov
movsb
cmpsl
or
sub
fisttps
mov
insb
std
xchg
mov
outsb
pop
repnz
pop
aam
mov
ror
mov
in
jle
into
imul
jbe
lods
bound
sahf
cmpb
inc
or
in
shr
cmp
outsl
push
shl
lret
sub
out
sbb
jo
xor
in
push
xlat
inc
xlat
lcall
sbbb
popa
ss
or
subl
push
cli
dec
js
out
dec
mov
int3
sub
sahf
jmp
add
jl
into
or
sahf
and
decb
mov
pop
fnstenv
outsb
das
fs
insb
adc
hlt
lods
scas
mov
jae
push
pop
icebp
and
and
movsb
xchg
clc
addr16
pop
fs
aas
xchg
pop
lock
add
push
xchg
lahf
jns
and
mov
mov
cmc
lock
jbe
sbb
dec
add
dec
lods
push
pusha
inc
xlat
out
xchg
dec
clc
xchg
negl
and
outsb
xor
or
dec
insb
sbb
in
lods
push
gs
or
cwtl
and
loop
mov
push
movsl
push
sub
mov
repnz
lret
xlat
subb
inc
jae
jb
insl
sub
pop
xchg
mov
in
cmp
lods
mov
or
mov
jns
dec
lret
out
inc
xchg
xorl
jnp
daa
movsb
imul
inc
call
inc
mov
jl
in
sar
lods
xchg
shrb
or
push
rorb
cld
inc
fnstenv
push
insb
adc
add
loopne
xor
sbb
sbb
movsl
jle
xchg
cmc
jnp
inc
push
mov
mov
or
imul
fsubs
jmp
mov
mov
inc
push
cmp
fbld
mov
lods
push
and
pop
pop
dec
ds
cld
lahf
push
aad
mov
sbb
arpl
jo
test
pop
fdivp
xor
stos
lret
in
in
out
push
imul
cmp
pop
cld
push
add
mul
adc
scas
insb
cld
fwait
dec
dec
cwtl
test
daa
fsubrp
or
fs
ljmp
or
adc
ficoms
xor
std
sub
add
loop
adc
je
mov
ja
xchg
or
jmp
and
lods
push
pop
jno
out
ret
mov
mov
mov
and
mov
mov
movsb
icebp
je
fcompl
adc
or
xchg
test
mov
imul
push
push
cmp
sarl
cmp
lret
add
jg
in
in
push
or
in
into
dec
lds
pop
outsb
out
insl
fs
push
std
test
fistpll
lcall
cmc
clc
fisubs
push
jge
jg
pop
insb
xchg
out
cmp
pop
je
decb
dec
sbb
sub
lock
sbb
cltd
scas
or
fs
jae
jmp
dec
mov
and
leave
fs
cmp
ret
xchg
dec
dec
movsb
mov
icebp
jg
jp
push
pop
push
mov
imul
lods
fs
hlt
mov
or
xchg
ss
sbb
mov
incb
inc
adc
es
mov
sbbl
cwtl
shrb
inc
mov
out
sub
imul
xor
jge
jg
pop
jg
xor
xchg
mov
ja
jb
adc
sbb
jbe
xchg
addr16
outsb
pop
jecxz
jle
and
add
imul
sub
sbb
imul
cs
push
pop
jno
mov
xchg
leave
lods
lret
mov
sti
mov
inc
and
lock
xor
fmull
dec
jecxz
xchg
sub
inc
cmp
je
jnp
sub
cld
addb
mov
push
clc
pop
ss
cwtl
outsb
sbb
dec
jmp
mov
ficompl
cmpsl
mov
jo
jno
adc
test
mov
adc
cmpsb
or
in
nop
add
inc
inc
fcmove
pop
sbb
jae
imul
mov
xchg
pop
push
dec
stc
pop
stos
adc
mov
jg
mov
and
add
std
aad
cs
or
or
imul
pop
insb
cmpsb
cld
push
push
les
mov
add
xchg
out
cmp
xor
cmc
xor
xchg
stos
adc
inc
mov
iret
daa
sub
push
je
lret
cmp
pop
ficoms
or
cmp
aas
mov
sbb
mov
nop
sbb
mov
xlat
nop
lods
test
pop
idivb
inc
mov
dec
pop
cmp
sbbb
sub
adc
jmp
or
pop
js
sbb
cmc
or
mov
mov
hlt
sbbl
lcall
fs
jg
jns
mov
nop
data16
push
pop
clc
sbb
and
sub
out
outsb
roll
fs
lret
and
or
loope
lods
mov
das
out
jmp
push
lds
sub
pusha
and
mov
lods
call
das
movsb
popf
bound
ret
xchg
inc
xor
fsubs
into
push
push
pop
jae
mov
and
add
xchg
fldl2e
push
seta
mov
jnp
jmp
mov
jmp
dec
in
sahf
cld
xor
pop
push
imul
pop
xor
call
pop
cmp
fadd
call
cmp
ljmp
xchg
sub
and
hlt
lock
pop
lea
pop
mov
test
sbb
sbb
mov
lods
dec
fs
sub
je
test
mov
dec
jb
adc
popa
xchg
aaa
pop
mov
xchg
xchg
push
xor
fcoms
jns
jne
orb
dec
xchg
je
jecxz
out
jp
adc
int
jnp
jae
and
add
loop
std
and
push
mov
fs
pop
imul
push
dec
xchg
jmp
iret
stos
fisubs
out
or
aam
mov
jle
sbb
nop
sarb
fs
pop
jb
jno
rcll
pop
pop
in
xchg
test
or
xor
out
in
cmp
addr16
das
test
fdivrp
lds
test
xor
xchg
xchg
mov
inc
push
adc
aad
cmp
in
insb
aam
mulb
roll
sub
push
jmp
mov
mov
es
and
pop
add
insb
cmpl
add
inc
push
out
movsb
pushf
lea
push
xor
aaa
mov
push
movsb
movsl
into
fsubrs
inc
push
pushf
pop
pushl
xchg
test
push
or
push
xchg
cld
aad
mov
xor
cltd
jb
cmp
xchg
pushl
jbe
mov
ret
jno
push
xchg
xor
push
mov
outsl
out
add
enter
sub
add
es
mov
stos
movsb
jle
adc
cltd
cltd
cmp
mov
popa
lcall
adc
mov
jb
jb
pop
out
mov
inc
sub
sub
sbb
ret
and
add
jne
decb
adc
pop
test
es
lods
mov
ljmp
mov
xchg
outsb
stos
or
sti
xor
push
jb
in
push
imul
and
mov
cmp
sbb
mov
test
outsb
in
adc
cmpsl
xchg
dec
jl
pop
outsl
jp
push
cld
js
inc
xchg
imul
cmc
xor
mov
mov
stos
clc
jecxz
push
or
imul
out
outsl
ss
mov
arpl
insl
pop
dec
adc
push
inc
adc
pop
push
addb
mov
push
push
xor
scas
cmp
out
shll
cmp
dec
subl
fistpl
ret
mov
lods
enter
sarl
ret
jne
and
jmp
jp
push
inc
inc
mov
dec
test
push
out
lret
sbb
cmp
inc
xor
out
ds
imul
sbb
out
mov
ljmp
sub
pushf
in
inc
xor
and
mov
jp
cs
push
sar
jg
pop
add
jbe
inc
lret
dec
rcrb
gs
sahf
xchg
xchg
fimuls
pushf
jnp
cmc
fsubl
xor
in
mov
sub
orl
mov
sub
outsl
ret
jl
dec
addr16
leave
aas
lods
in
ss
cwtl
cmpsl
ja
sarl
push
sbb
push
ds
and
cmpsl
ret
jecxz
jo
mov
pop
pop
xor
push
sbb
fcmovbe
out
adc
adc
divl
jmp
push
in
xchg
nop
push
out
inc
jb
jns
fsubl
pop
push
roll
xor
dec
packuswb
mov
ss
bound
add
insb
movsb
sub
mov
jl
adc
or
push
dec
or
nop
pushf
lods
pop
stc
addr16
addr16
inc
fs
lcall
loop
inc
mov
inc
movsb
xchg
mov
push
test
lret
outsb
sub
aaa
pop
add
cmp
lcall
mov
sti
mov
adc
fs
xorl
add
incb
jmp
ljmp
pop
push
jg
push
repnz
xchg
imul
push
movsb
xchg
push
aaa
or
aas
xchg
lods
mov
jo
lret
sub
jae
cmc
cmp
pushf
mov
mov
pop
sbb
pop
xor
inc
lahf
cmp
and
jbe
std
lea
pop
mov
lock
mov
into
push
add
mov
and
sbb
fxch
jg
adc
xor
mov
sbb
pop
repnz
sub
jno
jle
jl
and
xchg
jg
pop
pop
pop
mov
cmp
cwtl
sbb
xor
xlat
mov
fnstcw
fidivs
add
fidivs
in
push
sub
movsb
ss
xchg
fsub
sbb
inc
pop
repnz
sub
lret
js
cmp
mov
movsb
sub
movsb
lods
mov
aad
and
xchg
fs
pop
xchg
xor
adc
pop
fdivrs
xor
leave
insb
movsl
jle
mov
insl
lods
mov
pop
stos
rcrb
mov
loope
xor
cltd
je
ss
sahf
cli
je
jno
shlb
cltd
jp
push
clc
mov
dec
clc
xchg
aas
mov
mov
lods
movsb
push
test
imul
xchg
rorb
mov
ljmp
dec
mov
xor
xor
lea
add
mov
in
ja
jp
mov
push
out
mov
push
loopne
aad
rolb
jg
les
jge
nop
movsb
clc
jae
insl
cmp
outsb
ljmp
out
lock
push
sbb
mov
test
or
jns
mov
sbb
or
jae
sbb
pop
out
dec
push
fcomps
inc
fs
test
jae
sti
push
shlb
das
fimuls
jnp
push
fisttpll
je
inc
enter
mov
xchg
sub
inc
int3
es
pop
cmc
xlat
subb
mov
sub
pop
nop
lret
fs
xor
enter
ret
cltd
mov
loope
ja
push
dec
or
aam
idiv
fidivrs
xor
cmp
xor
mov
xor
mov
in
cld
jp
inc
dec
mov
ss
mov
popf
lock
xorb
dec
cmp
in
mov
cli
out
lret
out
cmp
mov
mov
cmpsb
dec
lods
stc
and
mov
repnz
jb
mov
jb
js
pop
mov
dec
push
mov
out
mov
push
mov
movsb
sbb
xchg
imul
xor
xor
pushf
jg
add
addr16
ret
adc
repz
xchg
xor
inc
inc
ds
inc
and
mov
inc
ljmp
xor
mov
cmp
loope
mov
sahf
xor
jle
add
pop
lods
push
xchg
loopne
stos
jno
test
and
lods
push
nop
ljmp
jbe
inc
comiss
push
imul
cli
push
aam
insb
push
bound
mov
sbb
mov
cmp
push
sub
and
mov
sub
mov
mov
pop
xchg
subl
inc
mov
repnz
inc
cmp
je
scas
cmp
jp
pop
sub
in
dec
fldcw
dec
sbb
adc
fstl
stc
test
fmulp
and
fdivs
pusha
pop
gs
imul
movntq
shr
or
xchg
and
decl
jb
test
jns
mov
add
lret
cwtl
xchg
cmp
movsb
inc
mov
xor
or
popa
in
mov
xchg
stos
xchg
jp
sbb
cltd
mov
mov
xor
pop
repnz
jl
cmp
das
push
out
lcall
adcl
in
or
in
sar
jae
cmp
dec
push
int
scas
dec
inc
daa
mov
jp
call
mov
data16
mov
lcall
in
call
jb
jle
dec
dec
xlat
insl
inc
imul
fwait
fwait
leave
icebp
jg
xchg
jbe
sub
aas
adc
rolb
stc
mov
and
push
fbstp
jae
dec
loope
push
push
cmp
movsb
mov
adc
lods
out
inc
mov
fs
cmpsl
add
xor
inc
or
ret
push
stos
cmp
movsb
cld
sbb
xor
bndstx
jae
lods
loopne
add
shl
fcomps
fisttpl
scas
loope
xor
cmp
repz
je
add
and
shr
jge
notrack
movsl
cmp
or
push
test
cmpsl
loopne
mov
cltd
test
or
int
sub
mov
fcmovnb
lods
jmp
and
jle
fisubrs
and
aas
xor
xchg
gs
nop
mov
jb
loopne
mov
pushf
negl
outsl
aad
dec
lret
mov
loop
pop
mov
fwait
push
incl
gs
mov
adc
mov
fiadds
cmp
sbb
push
sarb
into
fistpl
push
cmpsl
daa
leave
push
mov
sbb
scas
mov
nop
loopne
xor
ljmp
stos
rcrl
out
movsb
mov
dec
mov
int
add
mov
inc
mov
sbb
jno
in
dec
jg
fwait
arpl
loope
jnp
movsl
jne
clc
std
sub
int
jbe
mov
fs
ljmp
in
lahf
jae
dec
jmp
movsb
mov
mov
xchg
xor
xorl
daa
addr16
sub
fmul
imul
mov
nop
cmp
mov
xlat
sub
add
pop
fdivrs
mov
mov
add
lods
mov
subl
cmp
jne
jno
test
nop
mov
fistpl
and
push
loop
in
sbb
inc
cmp
xor
pusha
ljmp
int3
dec
add
sbb
enter
sahf
cmp
outsb
mov
xor
lahf
stos
sub
dec
add
sub
stc
pushf
lods
pop
and
pop
add
aaa
ljmp
stc
mov
xchg
and
outsb
or
movsb
jno
aad
enter
std
or
inc
xchg
lds
mov
cli
call
xor
outsb
aaa
add
insb
sub
dec
mov
aad
mov
fcom
xchg
mov
movsl
out
push
rcrl
repz
or
shll
dec
call
jp
jb
adc
imul
sahf
hlt
xor
mov
ljmp
inc
and
pusha
mov
xor
jne
or
inc
lcall
or
pop
fadds
dec
scas
or
aas
cld
mov
movsb
fwait
sub
aad
mov
push
imul
fdivrl
push
loopne
xchg
movsl
jg
inc
jno
ss
mov
repnz
test
and
pop
jmp
add
cmpsb
ret
insb
clc
xorb
inc
mov
inc
mov
in
cli
out
sub
insl
stc
mov
pop
jl
fdivrp
insb
and
sub
or
ret
mov
sbb
sbb
push
dec
pop
shlb
jecxz
inc
lods
mov
loopne
xor
in
gs
dec
mov
dec
xor
inc
push
adc
pop
fs
jge
outsb
into
add
lret
cmpsl
xor
rorb
inc
enter
mov
cmc
nop
push
jo
and
cld
jg
cmp
sbb
cmp
stos
inc
sub
push
loope
stos
in
push
mov
mov
ljmp
inc
stos
pop
test
or
adc
mov
mov
cmc
out
mov
fists
mov
mov
sti
adcl
xchg
pop
stc
adc
inc
lods
dec
push
or
je
xchg
pop
ret
jbe
fs
mov
dec
xchg
jne
in
fs
jl
ret
jns
mov
mov
jae
add
inc
xor
lods
mov
imul
repz
dec
cmp
or
in
lret
inc
pop
jb
pop
jb
ljmp
and
sbb
dec
sub
dec
cmp
ljmp
jle
subb
insl
adc
jae
xchg
inc
fstpt
test
outsb
add
in
mov
repz
sub
mov
push
xchg
xlat
jmp
push
inc
inc
movsb
sbb
xchg
dec
incb
pop
dec
sbb
stos
add
inc
sbb
cli
mov
arpl
mov
xchg
jo
iret
pop
xchg
mov
pop
pop
pop
in
or
dec
xchg
lcall
lret
mov
xlat
xchg
lcall
out
out
ljmp
imul
add
orb
adc
aas
dec
jb
add
and
imul
add
test
or
mov
clc
pushf
cmp
push
daa
in
cwtl
cld
adc
sub
xor
in
mov
cltd
testb
lods
jo
fnstsw
adc
out
sbb
aam
mov
addps
movsb
loop
push
je
or
xor
sbb
out
and
cltd
mul
cli
push
cmp
lock
sub
cmc
add
pop
arpl
adc
add
lcall
stos
add
jo
movsb
stos
mov
lea
pop
flds
mov
mov
adc
mov
shll
jmp
nop
mov
xor
sub
test
pop
jg
movsb
clc
mov
pushw
jg
mov
mov
in
jl
stos
fsubrs
jne
sbb
push
imul
stos
repz
test
or
inc
bnd
shl
xor
fistpl
lea
sub
sub
jg
rcrl
pop
mov
pop
aaa
aam
sti
push
jge
enter
lods
das
mov
sbb
sub
dec
insl
push
movsb
cmp
sbb
stos
lret
sahf
mov
lahf
mov
cmpsl
push
cltd
sub
aad
scas
fdivl
fidivrs
fstpt
out
leave
xor
movsb
pop
mov
pop
jno
ja
pop
bound
jmp
or
mov
or
int
fs
jge
mov
and
ficompl
jecxz
popl
push
pushf
mov
pop
into
xchg
dec
int
popf
push
sbb
outsl
add
add
inc
inc
es
mov
ss
jge
movsl
pop
xor
xor
movsb
add
mov
mov
mov
push
cmpsl
imul
and
and
adc
test
daa
cmc
out
inc
and
and
inc
test
sarb
mov
mov
jmp
lock
or
dec
cltd
cltd
dec
fimuls
sub
ja
movsb
sahf
ljmp
mov
cltd
mov
popf
out
xor
dec
lods
jnp
sbb
inc
sbb
mov
push
les
push
bound
js
cmp
jge
sub
fldl
xor
lods
std
cmpsl
std
jne
js
fs
sbb
xor
xor
xor
subb
pushf
inc
cltd
dec
fs
mov
gs
lret
rcrb
out
jne
lret
push
push
test
push
adc
cs
jb
sbb
cmp
jl
pop
insl
mov
mov
fs
xlat
pop
mov
inc
jo
aam
inc
adc
cltd
dec
fsubrl
aam
call
add
outsl
movsl
adc
call
sub
sbb
pop
repz
jne
loopne
sahf
inc
lret
jmp
scas
shrb
movsb
je
aam
shll
push
mov
mov
and
dec
mov
add
cmp
repz
addr16
ja
adc
xchg
and
add
imul
inc
mov
xchg
cltd
jb
outsb
inc
inc
clc
jae
lahf
movsl
loop
dec
mov
jnp
imul
aam
dec
orb
add
xchg
movsb
jb
or
sahf
lahf
push
mov
sahf
cld
sub
cmpb
pop
fdivrl
inc
mov
aam
outsb
scas
es
movsb
pushf
adc
sbb
ljmp
jnp
lods
add
shll
mov
add
cli
cs
dec
or
sub
into
inc
lods
std
in
pop
gs
rol
sub
aad
icebp
push
call
sbb
das
movsb
loopne
push
pop
and
movsb
movsl
mov
lds
sbb
leave
psubusw
sbb
fstpt
loop
sti
push
fstps
xor
nop
inc
shl
ljmp
outsl
popf
dec
jb
out
mov
mov
or
inc
cmc
int3
or
push
dec
push
test
mov
pop
icebp
xlat
ljmp
cmpsl
mov
jno
mov
arpl
out
lret
push
sahf
sub
jbe
sti
jp
not
inc
mov
dec
sbb
jl
movsl
stos
popl
mov
and
sbb
jne
and
outsl
sti
aam
insb
sub
pushf
lret
ljmp
sbb
stc
jae
mov
pop
fistl
mov
inc
add
inc
xchg
mov
mov
out
push
jmp
rol
mov
mov
int3
les
pop
push
je
shlb
sbb
mov
push
mov
std
and
mov
sbb
xorb
fwait
inc
adcb
and
or
addr16
imul
mov
stos
orl
xor
inc
sahf
lods
or
pop
das
inc
insb
sub
hlt
aam
xchg
cmpsb
scas
lret
or
inc
sub
mov
les
push
shll
add
push
lds
shr
dec
inc
xor
cmp
pop
sub
loopne
adc
inc
and
iret
push
mov
fwait
shlb
xor
dec
cmp
std
mov
insl
jae
scas
out
mov
outsl
pop
pop
icebp
add
xor
jg
jge
jp
xlat
mov
pop
adc
mov
jge
negb
xor
test
inc
ret
imul
pop
out
aad
xor
lahf
test
ss
push
sub
fidivrl
inc
cs
movsb
xor
into
sbb
sub
repnz
cmp
dec
mov
iret
sub
inc
jae
fnsave
outsb
es
jo
adc
inc
fs
dec
xchg
icebp
jle
aas
add
test
cmp
scas
dec
leave
cmp
lods
pop
loope
repz
sub
inc
ja
arpl
inc
je
scas
push
aad
aaa
xchg
xchg
inc
imul
lea
add
pop
bound
xor
ret
mov
sub
stos
jg
cmp
add
fwait
orb
cmc
cwtl
enter
push
jp
mov
mov
loop
stos
push
cld
and
lcall
push
scas
dec
mov
jmp
loopne
pusha
add
stos
jg
jo
pop
push
shlb
lods
sbb
aad
or
sbbb
movsb
repz
ss
lds
mov
cli
pop
aas
inc
ljmp
mov
fisubs
mov
sbb
repnz
pushf
call
pop
jnp
mov
int3
push
sbb
int
lods
xchg
dec
pop
shlb
and
add
jnp
sbbb
mov
aas
leave
dec
adc
fstpt
rcr
mov
call
ljmp
lea
stos
xchg
leave
or
fsubrs
or
jo
fsts
inc
pop
pushf
jl
inc
mov
jge
mov
or
fmull
jno
xchg
adc
aam
aam
add
mov
scas
cltd
xchg
or
add
fcoms
xchg
cs
xor
stos
inc
into
dec
mov
call
out
test
orb
enter
mov
cld
xchg
jmp
sub
stc
or
mov
push
aam
jnp
adc
pop
andl
adcl
andl
mov
jle
add
pop
xchg
mov
mov
lea
scas
pop
mov
cmpsl
test
xor
adc
rolb
inc
mov
xorb
addr16
movsb
hlt
adc
rcll
outsb
and
cltd
cltd
ror
mov
mov
mov
adc
inc
sbb
mov
imul
xchg
imul
outsb
ret
dec
cmp
mov
push
movb
cwtl
mov
sbb
mov
les
adc
mov
insb
add
lock
call
mov
out
test
lret
lods
add
bound
scas
std
jl
xor
pop
data16
adc
dec
fwait
out
imul
pop
adc
insl
fs
pop
pusha
xorb
sbb
jmp
mov
je
lret
out
mov
ds
fnstenv
cmp
pop
pop
sub
inc
mov
pop
in
xor
xlat
les
push
ret
ds
in
repz
inc
xchg
cltd
inc
arpl
mov
cmp
repnz
mov
out
mov
loopne
roll
dec
xchg
mov
popf
sarb
xchg
inc
loopne
mov
das
aam
mov
lret
push
add
subl
sub
jns
ret
clc
aad
push
xlat
pop
shlb
inc
pop
lods
outsl
shlb
iret
inc
xchg
dec
arpl
xor
leave
imul
addr16
sahf
aas
lods
push
push
adc
cltd
pop
data16
outsb
popa
orl
inc
lahf
dec
push
jbe
ret
sti
loope
out
or
add
mov
jnp
inc
sub
dec
add
add
lea
lock
mov
aas
and
fs
sub
out
stos
jo
push
inc
lds
ficompl
inc
stos
jne
jne
mov
ljmp
mov
jbe
mov
idivl
mov
std
mov
adc
mov
push
fmuls
daa
test
lea
stc
inc
in
push
sti
push
test
popa
push
inc
adcb
outsb
das
insl
or
push
outsl
mov
xor
rorl
add
mov
repz
mov
or
push
js
lahf
mov
shrl
movsb
call
aad
sbb
loope
sahf
cltd
les
les
push
sbb
inc
mov
in
pop
cli
out
pop
mov
out
cmp
xchg
cmp
into
adc
add
icebp
inc
sbb
out
push
cli
jnp
mov
movsb
add
enter
mov
pop
lods
sbb
movsb
cmpsl
or
inc
out
xchg
pop
test
pop
jns
jmp
arpl
push
test
inc
decb
loopne
sub
into
xor
mov
xlat
fidivrs
cmp
push
sti
mov
gs
sub
jge
inc
cmpsb
insb
jle
mov
and
out
sbb
cld
xchg
cmc
mov
sub
or
daa
outsb
ret
dec
fs
data16
jp
std
mov
out
dec
and
mov
jmp
and
dec
jle
mov
rorb
outsl
push
das
lea
scas
xchg
adc
pop
pusha
jb
push
pop
fidivrl
addr16
iret
ds
adc
and
mov
arpl
sbb
push
fbld
fscale
fidivl
cwtl
xor
movsb
cmpb
cmp
sub
add
mov
pushf
out
jnp
fstl
cmp
push
pop
outsl
add
mov
dec
jle
out
inc
daa
xchg
imul
hlt
mov
movsb
roll
mov
sub
aad
pop
and
jns
jl
inc
cmc
and
or
pushf
jnp
sbb
cmpsb
cmpsb
push
dec
dec
andl
dec
ds
xchg
repnz
xchg
dec
add
inc
rcr
push
push
add
sub
mov
dec
push
pop
sub
jnp
push
push
jle
fisttpll
ds
cmpb
xor
jnp
sbb
inc
mov
jae
cli
testb
pop
xor
cmc
scas
mov
mov
sbb
xchg
pop
iret
lret
movsb
enter
jge
iret
add
jne
xlat
addr16
xor
out
in
mov
outsb
xor
das
jmp
call
cmp
add
mov
ficoml
push
push
inc
inc
inc
lock
cld
or
or
push
cmp
or
ljmp
and
int3
lods
mov
addl
jno
or
cltd
jae
dec
jg
mov
lret
popa
fnstenv
inc
mov
insb
movsb
dec
sub
cld
add
or
pop
push
or
test
jmp
and
cli
mov
sub
ret
cltd
inc
out
sub
or
rorb
incl
or
inc
lret
xor
push
stos
inc
fimuls
test
mov
push
push
sub
dec
push
mov
pop
int3
ds
je
outsl
cld
jo
jg
xchg
fadd
cld
loop
jo
js
add
pushf
flds
pop
mov
mov
fistl
into
aaa
jb
lea
lods
jnp
mov
xchg
inc
movl
push
sub
bound
loope
insb
push
xadd
mov
fldcw
mov
xchg
rcrl
or
mov
jp
dec
sub
out
movsb
out
jbe
inc
fs
add
push
fbld
dec
stos
insb
inc
fs
imul
insl
ljmp
out
out
jle
scas
push
mov
mov
sahf
in
push
decl
push
adc
out
jnp
aam
dec
mov
mov
add
sbb
mov
pop
inc
inc
fwait
aad
mov
fwait
jge
cwtl
das
pop
imul
mov
xor
and
cld
jb
sub
out
and
fmuls
imul
jp
std
jle
jno
push
mov
add
fistps
incb
scas
sahf
sarl
loop
sbb
repz
gs
movsb
sarl
cmp
adc
stc
scas
lcall
imul
out
fwait
adc
jg
dec
js
fbld
mov
pop
xchg
pop
jne
and
mov
rolb
push
js
xchg
mov
sar
push
mov
dec
adc
jo
jbe
jae
jnp
or
mov
and
jnp
push
pop
cmp
pop
fdiv
dec
or
call
js
fs
mov
fsts
ljmp
ljmp
sbb
push
dec
xchg
mov
adc
push
aad
jns
and
jae
pop
sti
incl
mov
int
out
insb
push
aam
outsb
xor
pop
jnp
outsl
popf
push
cmp
movsb
ja
into
dec
icebp
mov
dec
inc
cmp
fiaddl
shlb
jo
push
les
cs
std
dec
fs
dec
rorb
mov
imul
cli
dec
inc
dec
test
adc
lods
les
movsb
xchg
dec
mov
in
lea
int
push
cmc
sarb
xchg
mov
dec
movsb
mov
aas
push
fwait
cltd
mov
gs
addr16
mov
mov
sub
inc
xchg
enter
push
in
imul
bound
in
ja
push
mov
dec
mov
fldlg2
gs
loope
xchg
das
and
mov
jp
sub
xor
jb
lahf
dec
xchg
jno
in
push
jp
movsb
ds
hlt
xor
aas
sub
xchg
jp
sbb
outsb
xchg
lret
cmp
rol
outsl
mov
int3
int
lods
mov
jns
push
or
xlat
jmp
jg
inc
lock
mov
inc
push
out
or
aam
sub
sahf
sbb
lret
pop
cmp
inc
ja
stos
rcrl
neg
cmp
add
daa
dec
clc
andb
jo
mov
imul
mov
jns
imul
inc
scas
movsb
inc
cmc
jle
inc
jp
outsl
ds
xchg
xor
inc
sub
stos
add
push
popa
aam
jae
test
iret
lods
push
test
les
stos
xchg
fdivr
sbb
stos
addb
lods
push
mov
aad
pusha
push
push
in
mov
ljmp
mov
push
jb
adc
xor
mov
subb
adc
adc
or
out
sub
sbb
pop
das
insl
es
ljmp
imul
rcrb
sub
add
push
dec
rolb
cmp
insl
sbb
inc
rcr
clc
in
pop
into
cltd
adc
add
fs
xchg
stos
ss
repnz
pop
das
cmp
mov
inc
push
fmuls
aad
sti
std
add
mov
js
lahf
jl
fwait
aas
push
pop
push
inc
pop
cmpsb
nop
xchg
sub
movsb
out
mov
add
push
or
dec
fcmovnu
mov
enter
mov
or
push
cmpsl
pop
js
sbb
mov
hlt
pop
fcoml
sbb
in
lret
jge
ret
fsubl
xchg
inc
mov
das
pop
and
dec
test
jg
mov
insl
cltd
loopne
sbb
xchg
cli
call
popl
mov
fbld
mov
or
jae
rclb
ret
lahf
enter
mov
lret
mov
inc
jl
jp
fcompl
adc
repnz
test
out
rorl
fwait
or
cmp
cmp
fndisi(8087
fisttpll
fmuls
pop
cmpl
pop
outsb
out
fistps
ss
dec
inc
loopne
add
jno
inc
pop
out
or
shrb
mov
fsubrs
notb
mov
sbb
movsb
and
lods
and
cmp
shll
loop
jecxz
ror
jnp
sbb
jno
push
sub
and
or
mov
dec
out
cs
mov
mov
fisttpl
std
in
outsb
lods
cmp
movsb
xlat
stos
push
sbb
or
and
or
mov
xchg
loop
movsb
sarb
sbb
inc
mov
add
mov
mov
lds
test
mov
in
inc
add
jmp
add
lcall
aad
mov
sbb
mov
or
cmp
arpl
notl
pushf
pop
data16
jp
mov
lahf
sbb
pop
mov
xor
lret
in
repz
xchg
and
pop
inc
pushl
jp
loop
lods
aas
dec
jge
mov
std
or
jg
insl
adc
inc
cmpsl
xlat
ss
popf
fstl
xchg
cmp
jno
push
adc
cwtl
jo
ss
lock
pop
xor
mov
lods
cld
icebp
push
sbb
pop
ja
imul
fldz
das
dec
push
out
or
jbe
jb
sub
sub
imul
stos
lods
fs
sbb
std
mov
imul
loope
jecxz
push
jecxz
in
xchg
out
push
pop
enter
sbb
dec
add
ror
insl
mov
lods
xchg
scas
mov
inc
adc
fs
mov
mov
addb
sahf
xor
or
iret
jmp
push
out
fs
fdivrp
in
and
lcall
xlat
ds
inc
fadd
jmp
int3
adc
cmpsb
mov
fs
inc
mov
sub
adc
fs
add
in
cs
cs
adc
sub
loopne
dec
cmp
mov
test
sub
dec
insl
cwtl
mov
out
mov
sarl
icebp
inc
cmp
push
ja
adc
push
inc
mov
fs
cmp
pop
cmc
push
pop
in
movsb
sarb
test
dec
or
out
xor
inc
jl
clc
cmpsl
lret
and
hlt
or
xchg
lret
test
xchg
in
jg
movsb
into
leave
popa
imul
pop
sbb
cwtl
sahf
jp
loope
push
ljmp
inc
inc
jns
jg
and
adc
clc
xchg
jmp
pop
aad
enter
arpl
and
nop
loop
inc
pop
pop
lea
stos
and
aas
jecxz
sti
add
imul
xchg
es
cltd
xchg
or
push
test
rcr
dec
rcrb
inc
cmpsl
in
ss
push
sar
xchg
mov
mov
sbb
sbb
test
cmpsb
push
lret
sti
push
pushf
lock
cmpsl
xchg
stos
xlat
out
jp
xchg
outsb
xor
jbe
mov
adc
lds
repnz
cs
mov
sub
and
mov
xchg
inc
sub
and
call
inc
dec
scas
fs
push
mov
dec
cmpsb
call
data16
push
mov
push
push
int3
xor
stos
movsb
loope
mov
iret
repnz
pop
dec
into
pushf
lea
stos
pop
icebp
cli
cmpsb
cwtl
pop
int
jecxz
out
mov
xor
hlt
leave
addr16
inc
das
pop
pop
and
mov
test
pushf
mov
and
clc
cmp
pop
push
push
in
dec
mov
dec
shlb
ds
ss
push
mov
xchg
push
sub
sub
pop
and
adc
xorl
mov
xchg
cmpsb
outsl
clc
lret
lock
mov
out
mov
or
push
xchg
or
shlb
outsl
jbe
jp
jne
cvtdq2ps
dec
cmp
xchg
push
das
movsl
add
in
pop
movsb
out
fs
repnz
out
lods
aas
fcomps
push
adc
xchg
adc
sarb
shll
pop
xchg
stc
jg
data16
inc
popf
movb
std
sbb
pop
pusha
mov
push
adc
movsb
iret
ret
movsl
insl
add
cmc
push
inc
pop
out
dec
fsubrp
sub
cli
sbb
xchg
int
idiv
stos
movsb
sahf
or
nop
sbb
cmpsb
adc
call
jb
lea
xor
sbb
xlat
pop
mov
fcmovnb
mov
int
mov
lods
dec
pop
das
cmc
gs
mov
ss
lahf
dec
cmc
mov
and
mov
push
jnp
inc
aad
pop
clc
fs
in
pop
scas
jnp
fildl
icebp
sub
push
sbb
pusha
mov
inc
out
cmp
iret
sub
dec
fwait
add
mov
mov
pop
jnp
orl
jle
inc
add
mov
mov
pusha
fmuls
mov
and
and
movsb
dec
and
add
aaa
fimull
iret
les
push
in
insl
xchg
lea
lods
into
es
xor
hlt
xor
sub
push
leave
into
out
and
scas
xor
push
or
cmp
mov
dec
mov
daa
and
pop
test
popf
dec
inc
xchg
sub
sbbl
test
test
or
in
inc
insl
pop
push
je
ss
xor
inc
mov
mov
fwait
cmpsl
mov
pop
and
jmp
push
shlb
inc
fucomip
mov
fisubl
or
call
inc
jg
ss
pop
mov
out
dec
insl
inc
sub
pop
nop
fs
ds
dec
pop
jle
xor
push
loopne
into
xchg
xchg
sub
adc
push
jbe
movsb
xlat
rcll
addr16
aad
std
dec
daa
lahf
inc
leave
loope
imul
rcll
add
scas
xchg
pop
mov
mulb
cmp
popf
adc
cmovl
ror
out
stos
cltd
cmp
jg
sbb
inc
es
mov
insb
xchg
movsb
sarb
mov
lods
mov
inc
movsb
addr16
in
lea
jne
jmp
ljmp
push
lret
push
fdivl
dec
into
out
cmp
shl
aaa
mov
fisubrs
pop
lret
push
mov
movsb
push
call
add
mov
jae
outsl
adc
adc
ret
mov
lret
mov
mov
push
push
lcall
andb
inc
sbb
or
leave
fwait
jnp
add
pusha
icebp
push
adc
adc
push
imul
or
sbb
movsb
xchg
pop
adc
dec
add
mov
in
or
cmp
outsb
mov
mov
orb
and
in
lods
cmp
inc
dec
push
jge
pop
cmc
jecxz
jns
imul
or
jl
das
lods
xchg
inc
mov
movb
call
out
fs
jmp
inc
clc
subb
pop
fs
fstl
sub
lahf
jnp
mov
aam
gs
cmc
mov
insb
clc
pushf
decl
inc
xor
daa
shlb
sahf
sub
dec
adc
push
out
dec
lods
out
xorb
sti
lcall
dec
dec
shlb
xchg
jl
pusha
or
out
sbb
in
jnp
test
cmpsl
je
std
sub
lcall
pop
hlt
adc
dec
push
mov
fstpt
cltd
jge
movsb
mov
cmp
inc
fcmovu
xor
ror
insl
call
ljmp
inc
and
mov
jne
out
fildl
add
inc
insl
xchg
dec
jb
or
cmp
fisubrl
mov
cmpsb
xchg
lcall
fwait
jne
shr
jge
ljmp
or
je
sbb
mov
and
arpl
sti
dec
add
mov
outsb
sub
insb
ffreep
dec
fnstcw
add
add
rcrb
mov
call
iret
cmp
mov
hlt
lods
int3
jle
mov
hlt
lret
pop
or
add
outsb
pop
xchg
or
push
push
mov
cmp
sbb
and
out
sti
xchg
xorb
adc
adc
cwtl
movsl
sbb
sub
and
lahf
aaa
add
mov
ret
mov
pop
inc
clc
int
mov
jno
leave
mov
cmp
jp
out
cmpsb
fcomp
stc
dec
hlt
jp
jbe
pop
cmp
stos
lret
or
ficoms
das
movsb
nop
fisubrl
pushf
pop
cmp
jae
xchg
add
aas
xor
inc
cmpsb
adc
jp
xchg
pop
add
and
aam
loope
cs
jbe
idivb
das
dec
dec
push
xchg
sbb
faddl
loop
push
mov
push
adc
cltd
mov
jmp
jno
or
lcall
adc
xchg
jle
fucomi
lea
mov
add
adc
mov
xchg
inc
std
out
mov
stc
xchg
pusha
inc
hlt
sbb
and
movsb
push
jle
adc
inc
or
outsb
inc
and
sbb
sbb
push
or
shrl
insl
xor
stos
jmp
or
adc
ss
sbb
inc
xchg
and
hlt
out
xorb
out
pop
push
fwait
xchg
leave
inc
push
aas
and
lods
xchg
or
push
pop
jno
into
andb
and
adc
sarl
iret
mov
out
add
jne
call
js
sub
fsubrl
jns
inc
imul
cli
xor
push
ficomps
pop
xor
lods
pop
movsb
ds
inc
jg
inc
cmpsb
cmp
insb
es
pop
jbe
add
sbb
mov
outsb
ja
scas
inc
lods
es
mov
xchg
mov
mov
ds
es
jmp
cmp
js
jae
and
fistl
dec
loope
leave
jb
mov
inc
mov
cmp
pop
xchg
stc
jb
pop
or
mov
pop
mov
inc
cli
addr16
mov
sti
dec
xor
icebp
lods
cs
sbb
jns
xchg
fmulp
jnp
ljmp
adc
xlat
pushf
in
mov
fs
sbb
lods
jo
or
cmc
and
mov
dec
ffree
push
jg
lcall
xor
js
insl
in
inc
lods
pusha
rorb
iret
ret
out
fucom
dec
insb
or
and
inc
es
jl
pop
shlb
xor
jbe
push
jne
push
pop
jae
aaa
mov
push
in
dec
inc
popa
movsb
daa
cmpsl
adc
pop
adc
into
xchg
sub
gs
dec
test
movsb
rol
mov
out
int
leave
mov
jl
cmp
out
jnp
sarl
hlt
daa
cld
ljmp
stos
mov
js
jg
std
daa
mov
dec
mov
add
cs
aam
loope
sbb
fdivrp
mul
push
cli
mov
adc
enter
xchg
in
sub
jle
mov
outsl
movsb
and
jno
jae
in
fldenv
sbb
xor
inc
xor
push
call
pop
and
xor
out
movsb
fstpt
xor
xchg
call
jl
inc
fildll
cmc
or
popa
adc
pop
iret
cli
sbb
cmc
jp
sub
cld
aad
loopne
add
cmpsl
lret
lea
fmulp
cmp
mov
fs
jnp
jecxz
movsb
or
jge
xchg
pop
neg
incl
inc
cs
mov
incb
xchg
inc
jnp
pop
jnp
pop
insl
mov
imull
inc
aas
cmp
jge
sbb
jno
bound
jne
insb
add
enter
push
in
lret
leave
jg
ds
xor
iret
or
mov
sub
inc
clc
fistl
repz
hlt
pushf
xlat
xchg
add
dec
pop
mov
sub
mov
rcrb
or
mov
jae
xchg
clc
push
icebp
fstps
or
mov
pop
arpl
sbb
sbb
ror
mov
mov
into
mov
lret
jae
fcomps
dec
sbbl
lahf
mov
lea
inc
ljmp
cld
mov
adc
push
inc
nop
cmp
dec
push
sbb
mov
sbb
aam
mov
fistps
mov
mov
or
fnsave
fwait
insb
cmp
movsb
mov
in
inc
pop
push
lods
movb
mov
lods
jnp
adc
add
xchg
jo
int
cmp
dec
pop
jb
jp
mov
add
popf
lret
loope
sub
fs
jmp
ret
aas
mov
fs
sahf
pushw
xchg
lret
mov
sbb
loope
insl
ret
popf
add
movsl
sub
push
mov
dec
ret
sbb
out
or
sbb
xor
ds
mov
in
dec
lea
push
or
in
dec
xor
xchg
enter
push
xchg
jae
and
cmp
mov
dec
xchg
shlb
push
push
mov
dec
cmpsb
sbb
xor
cmpsl
decl
clc
dec
ss
xor
das
popa
repz
push
pop
add
add
lea
gs
sbb
dec
pop
pop
loopne
adc
jno
cmp
mov
and
inc
push
inc
sbb
iret
out
inc
adc
add
mov
pop
ja
jge
loop
dec
mov
xor
stos
inc
pop
fnstenv
sub
fdivrs
lods
sbb
or
sbb
xchg
insl
das
push
push
sbb
addr16
aas
aas
rolb
in
repnz
call
aad
jp
call
fchs
dec
mov
fs
or
mov
out
inc
sbb
andb
testb
rol
insl
or
mov
shlb
mov
jnp
jnp
repz
mov
mov
jecxz
xor
outsl
add
sbb
fs
ds
sub
and
and
jmp
mov
shrl
mov
xor
shrb
test
sbb
inc
jne
cmpsb
ds
ret
ss
dec
andb
sbb
cmpsb
pop
push
cmpsl
into
dec
jb
sbb
push
xorb
ljmp
test
icebp
leave
pop
xor
aaa
inc
lods
sbb
pop
sbb
mov
jp
mov
xor
outsl
lods
jge
in
inc
cmc
test
ds
lods
pop
mov
push
je
clc
mov
mov
sub
xor
jne
sarl
push
and
stos
or
mov
xchg
fbld
sub
sub
mov
xchg
adc
lea
mov
sub
test
lea
movsb
mov
inc
sbb
fiaddl
out
aad
adc
xor
fcomps
div
jns
popf
inc
enter
cmpsl
cmp
inc
aad
repnz
mov
add
pop
inc
fwait
insb
xchg
jmp
mov
fcomps
dec
into
stos
insl
lcall
out
hlt
sub
xchg
mov
stc
jp
and
call
mov
test
bnd
pop
test
aas
jnp
out
lret
push
jle
mov
mov
fld
gs
in
faddl
outsb
ds
jecxz
mov
rolb
das
xlat
adc
pop
push
outsb
mov
jmp
movsb
sub
dec
inc
daa
test
push
sbb
cmovns
insl
aas
adc
loope
sahf
xchg
add
and
xchg
mov
pop
jo
jmp
adcb
xlat
sub
xchg
cld
rorl
cli
mov
xchg
or
mov
shll
xor
arpl
mov
sbb
loopne
lock
sbb
jo
cmpsl
push
mov
in
out
or
lcall
je
mov
xor
inc
inc
cwtl
fs
in
jmp
xchg
and
test
jge
sbb
mov
mov
rol
jp
dec
movsb
push
shlb
jbe
stos
bnd
mov
and
es
adc
xchg
sub
mov
sbb
jne
sbb
aas
pop
mov
add
mov
sub
xchg
pushf
shll
mov
sub
cld
push
imul
fdivl
orl
icebp
pop
sbb
inc
orl
notl
sub
movsb
les
xchg
fistps
fs
fs
jge
jb
push
push
iret
cmp
pop
repnz
or
push
xchg
mov
addr16
insb
push
dec
cmp
fs
pinsrw
jbe
lods
ds
adc
insl
fdivl
test
push
imul
imul
stos
push
fldl
add
stc
mov
sbb
push
dec
dec
fs
cmpb
aam
adc
or
sbb
xchg
lock
lret
dec
jg
ss
xchg
push
imul
cmp
mov
pushf
add
inc
mov
adc
jg
loope
adc
push
fcoms
jle
xchg
jnp
stc
jne
out
or
movl
enter
cwtl
add
jb
inc
dec
fisttpll
std
mov
push
movsl
adc
push
push
sbb
add
ret
mov
add
cli
and
cmpsb
movsl
nop
mov
sub
je
cli
dec
imul
xor
dec
insb
sub
rcll
mov
adc
or
inc
push
iret
fisubl
xchg
adcb
mov
or
inc
out
dec
dec
pop
pop
outsb
push
sub
out
push
sti
sti
lahf
sbb
fwait
mov
add
cwtl
mov
mov
pop
shrl
lcall
rclb
lea
cmp
int3
cld
in
ficomps
cmp
lods
inc
in
push
mov
cmpsb
std
sbb
add
pop
mov
pushf
mov
jae
sbb
movsb
mov
in
mov
mov
mov
insl
mov
ljmp
pop
ljmp
inc
add
jmp
cwtl
lahf
shl
xor
lret
stos
lods
and
adc
inc
push
jno
jge
ljmp
fisttpl
sub
bound
lods
pop
movsb
mov
cmpsl
adc
mov
rclb
test
imul
push
pop
and
aaa
out
push
outsl
fsubs
xor
in
pushf
xor
leave
fs
jle
inc
insb
xchg
out
mov
in
push
fs
ds
sub
mov
repz
gs
dec
mov
ds
dec
sbb
xchg
out
mov
out
lods
inc
mov
jle
sbb
cmpsb
inc
mov
std
fucomi
addr16
mov
fwait
pusha
mov
test
inc
dec
je
fwait
cmc
xchg
rolb
mov
mov
dec
cmp
lret
xchg
jp
jae
call
jb
push
mov
mov
mov
inc
and
sti
mov
push
addl
mov
or
cmpsl
arpl
jno
jp
sub
add
dec
push
fldenv
cmc
jb
stos
loop
ljmp
pop
pop
dec
pop
dec
stos
pop
inc
inc
test
mov
cwtl
and
loopne
jecxz
jl
mov
insb
movsb
aaa
mov
test
aam
rclb
mov
cmp
adc
jne
loopne
add
sub
das
or
mov
push
mov
out
daa
mov
pop
mov
pop
mov
mov
loopne
stos
adc
cmp
jp
adc
fldenv
pop
xor
nop
fcmovu
mov
shl
idiv
add
xchg
mov
mov
sbb
push
scas
pop
push
lea
jbe
xchg
inc
daa
or
pop
ss
aas
fs
hlt
push
sbb
scas
dec
push
push
mov
dec
clc
outsl
movsb
mov
loopne
pushf
or
push
shr
aad
ss
inc
nop
sbb
sarl
insl
dec
popf
in
pand
xchg
arpl
ss
and
rorl
ret
jecxz
daa
loopne
xchg
xchg
mov
mov
pushl
fs
movsl
das
jo
cmpsl
sbb
sbb
in
push
out
inc
sub
lcall
xchg
imul
fs
aad
and
and
loopne
sbb
inc
mov
nop
stos
mov
insl
jp
xchg
lcall
inc
into
sub
int3
sub
in
fstl
mov
jecxz
aas
and
dec
call
dec
push
je
in
pop
sbb
lret
jge
repz
inc
pop
push
popa
leave
das
movsb
pop
xchg
test
pop
jo
xor
inc
repnz
outsb
jle
xchg
xor
scas
push
mov
pop
jne
or
mov
inc
jecxz
or
xchg
out
push
ljmp
add
stos
movsb
and
sbb
jge
jbe
outsb
push
hlt
orb
out
pushl
dec
sahf
mov
and
idiv
bound
or
mov
push
dec
loop
xchg
ds
sbb
mov
xchg
fldt
inc
dec
iret
mov
pop
cmp
flds
inc
adc
mov
dec
mov
movb
test
ljmp
lock
mov
jge
out
fdivr
adc
jmp
jecxz
add
jb
mov
and
mov
jmp
gs
cmp
push
xchg
xchg
out
in
gs
test
movsb
mov
dec
sub
sbb
mov
pop
sub
sub
out
jg
and
mull
or
mov
push
fdivs
fcoms
lret
loopew
loopne
inc
aaa
sarb
pop
mov
cs
cmpsb
sbb
jle
or
cmp
xchg
inc
push
fisubrs
test
mov
add
sbb
enter
into
sbb
pop
mov
decl
scas
bnd
inc
mov
jle
or
clc
fs
insl
push
movsb
int3
push
in
pop
repz
fidivrl
and
push
sbb
push
mov
and
insb
fsubs
mov
dec
jns
mov
daa
jae
int
add
mov
ss
repz
mov
test
mov
bound
sub
test
pop
xchg
das
adc
pop
adc
fs
cltd
inc
jge
mov
icebp
and
jmp
jecxz
fwait
mov
sub
iret
clc
jns
fcomp
cmc
sub
lret
push
nop
test
sbb
mov
ret
outsb
jae
push
jle
movsb
push
and
dec
cs
aas
jmp
adc
mov
adc
add
or
insl
jge
inc
imul
out
mov
inc
inc
sub
into
shr
inc
mov
mov
pop
out
fs
aam
pop
imul
push
adc
stos
cmp
cmpsb
rorb
into
imul
xor
sbb
xchg
in
ret
xor
lods
inc
js
pop
aad
das
mov
mov
bound
outsb
cmp
iret
mov
dec
xchg
cld
jg
jge
xchg
std
pop
adc
lods
push
or
std
clc
fdivrp
es
pop
cli
or
push
and
cmp
push
push
mov
or
insl
stos
inc
mov
loop
xchg
sbb
or
dec
jg
mov
ljmp
xorb
movsb
mov
dec
push
adc
in
fs
or
mov
out
push
mov
mov
push
add
xchg
push
mov
sub
adc
xchg
lea
pop
gs
cmp
add
out
mov
sub
repz
push
mov
imul
dec
and
sbb
lods
stos
mov
inc
add
iret
dec
movsb
fldenv
inc
mov
sbb
mov
pop
dec
ss
scas
sub
pop
loopne
or
add
dec
inc
push
xlat
lods
mov
in
add
adc
jne
shlb
ds
jg
test
push
test
pop
mov
inc
lods
es
scas
jno
sub
add
cmpsb
adc
jecxz
repz
or
popf
cli
adc
sub
data16
clc
insb
xchg
test
jo
call
sbb
cmpsl
inc
and
inc
ds
push
inc
in
popf
out
punpckldq
mov
clc
pushw
mov
lods
mov
lahf
pop
ljmp
or
rcr
psrlw
push
imul
shrl
push
xor
mov
push
inc
sub
cmp
jb
sbb
pop
dec
pop
in
nop
cmp
and
mov
inc
mov
add
loope
stos
nop
pop
pop
test
mov
movsb
push
push
repnz
and
into
sti
fdivl
int3
cmc
out
push
je
cmpsl
add
xchg
mov
int3
insl
push
mov
mov
lret
movsb
adc
and
mov
in
enter
cld
rolb
sahf
enter
push
cli
jne
mov
mov
and
xchg
cmpsb
pop
add
dec
adc
das
out
clc
push
push
push
pushf
inc
fucomip
jne
pop
inc
movsl
mov
pushf
dec
lcall
mov
mov
stos
inc
cmp
sbb
addr16
inc
fwait
sub
dec
xchg
add
cwtl
jg
leave
imul
aam
mov
cs
adc
dec
movsb
sbb
ror
rcrb
inc
sbb
push
inc
push
jecxz
jg
inc
jae
mov
jmp
ja
gs
out
test
outsb
shl
outsl
cmp
mov
jne
xchg
lret
xchg
mov
das
das
repnz
repz
in
inc
out
dec
ss
jp
shll
xor
add
insl
cmp
jb
pop
xchg
mov
jle
fsts
cmp
push
int3
ljmp
cmpsl
xor
lods
sub
sub
lahf
out
adc
mov
popf
cmp
rolb
daa
repnz
sbb
enter
shr
jecxz
jge
cs
push
mov
mov
cmp
push
dec
push
dec
add
clc
cli
sub
ja
stc
xor
xchg
lahf
dec
mov
and
mov
or
jbe
cmpsb
jns
movsl
dec
outsb
cltd
xlat
jo
push
cmp
sub
cmp
dec
mov
lea
cli
shl
in
dec
or
mov
and
andl
int3
sbb
fs
jb
jo
sar
movsb
jle
mov
lea
push
filds
jmp
sub
sub
rorl
out
sbb
mov
push
jmp
out
lahf
js
xor
mov
jl
cwtl
mov
add
mov
jl
je
pop
test
cmpsb
fwait
rorl
gs
mov
add
add
jne
out
adc
cmp
inc
dec
pop
cli
cmp
sti
adc
or
pop
jnp
pop
aam
movl
mov
mov
xor
ljmp
push
fdivs
lea
fidivl
stos
inc
cwtl
mov
jp
jp
rcr
or
dec
out
icebp
cld
out
aam
mov
jge
repz
js
popa
adc
jp
call
ds
sbb
sub
dec
int
or
mov
xchg
pop
jle
stos
xor
inc
and
iret
and
scas
dec
dec
arpl
fs
imulb
push
xor
lods
push
jl
dec
arpl
call
sbb
mov
sub
andl
mov
dec
into
imulb
push
jmp
jge
loope
mov
movsl
negb
lahf
jge
out
das
imul
aam
int3
add
aad
mov
imul
cltd
inc
stc
lods
out
movb
add
pop
out
fs
mov
push
pop
cmpsl
cltd
lds
xor
pusha
mov
clc
inc
bound
cmp
loop
out
xchg
push
aas
jle
jae
sub
mov
or
into
mov
xchg
sub
xor
out
das
iret
psubsw
jnp
cwtl
xor
inc
notl
jg
push
or
adcl
xchg
jno
lds
pop
and
xor
sub
xchg
pop
movsb
mov
dec
out
sbb
popl
jns
xor
in
cmpsl
pop
dec
jl
adc
pop
insb
xor
jmp
xchg
out
xchg
mov
xor
mov
adc
fs
aam
push
out
mov
mov
pop
xchg
sub
fstps
adc
inc
repnz
sbb
mov
or
sarb
fiaddl
lods
movd
shl
lods
fmuls
or
ret
sbb
int3
call
int
lods
lret
lahf
rcl
mov
shrl
mov
dec
movsb
dec
cwtl
loop
test
ljmp
mov
dec
pop
mov
or
out
sahf
cmp
inc
ret
inc
mov
loop
cmp
xchg
xchg
fs
mov
or
cmp
hlt
xchg
sbb
lods
mov
fadd
dec
call
sub
sbb
repnz
in
pushf
mov
cltd
data16
fldl2e
das
fsubrs
xchg
popa
lock
add
jge
mov
ljmp
ror
fs
cmp
imul
fisttpll
std
aas
cwtl
mov
stc
xchg
in
sub
insl
addl
stos
and
or
mov
dec
sub
popf
movsb
hlt
fs
mov
jne
push
insl
js
outsl
inc
ljmp
mov
xchg
mov
adc
sbb
jo
inc
leave
cltd
adc
xchg
sbb
and
mov
ja
sub
inc
sbb
fwait
add
hlt
and
out
lret
push
in
sub
lret
push
imul
dec
xor
mov
pop
andb
fdivs
inc
rcl
mov
mov
aas
or
outsb
popa
movsb
movsb
ljmp
lds
push
popa
jne
xor
mov
out
or
icebp
dec
call
into
inc
scas
adc
mov
fmull
xor
mov
jg
sbb
xchg
mov
or
popf
xor
push
adc
rcll
cmp
mov
cld
fcoml
dec
xor
je
push
bound
inc
rol
imul
xchg
rorl
and
mov
dec
pop
movb
jle
pop
mov
push
in
add
dec
in
and
jge
add
sbb
in
pop
pop
xor
or
pop
mov
jp
inc
mov
nop
and
fistpll
fsubs
sbbl
push
mov
inc
lret
mov
xchg
sbb
adc
scas
cld
and
outsl
fs
rcl
inc
mov
cwtl
in
inc
add
daa
popf
out
imul
push
push
inc
mov
mov
sub
jns
xchg
out
pop
jae
push
adc
lret
popl
arpl
jl
jl
mov
dec
inc
push
mov
loope
jmp
pop
movsb
cmc
imull
fs
ljmp
stos
xorl
adc
inc
mov
sub
or
xor
ret
mov
incb
scas
add
punpckldq
xor
xlat
test
sub
sbb
lret
inc
loop
pop
aam
call
nop
repnz
xchg
xchg
orl
lods
movsb
imul
xor
sbb
inc
push
mov
pop
or
sbb
cmp
or
push
add
frstor
xchg
addb
loopne
inc
inc
imull
lcall
or
or
subb
mov
dec
mov
push
mov
mov
and
inc
lods
test
rorb
mov
mov
ljmp
sarb
lret
pushf
sbb
andb
jbe
das
sub
fmuls
icebp
test
push
cmc
sub
call
xor
adc
sbb
mov
call
push
leave
addr16
adc
mov
mov
ds
pop
std
cmp
add
jl
and
daa
popa
das
fbstp
cld
imul
mov
jno
sub
test
push
or
mov
mov
in
sti
cmp
push
pop
push
cli
push
pop
dec
fcoms
pop
hlt
push
adc
stos
les
and
call
lcall
mov
sub
in
dec
ljmp
add
out
xchg
test
imul
pop
inc
fdivrl
mov
or
pop
cmpsl
out
popa
lret
xchg
lods
gs
daa
or
or
adc
cli
mov
add
mov
push
push
enter
mov
xor
or
xlat
jno
sahf
jnp
cmpsb
cld
test
loopne
inc
cs
pop
lea
add
sarl
mov
cmp
dec
pusha
adc
push
cld
ret
dec
and
ja
sbb
lret
sub
ja
andl
sahf
push
cli
out
sbb
cmp
fs
jmp
sbbl
xlat
xor
ss
dec
loop
or
xlat
je
fists
or
push
xor
hlt
mov
rclb
xor
cwtl
aam
dec
lret
xor
adc
mov
stc
pop
sbb
dec
sbb
xchg
addr16
mov
jg
call
lea
xchg
repnz
lea
pusha
arpl
and
in
icebp
shl
out
jnp
insb
inc
adc
js
push
rcrl
pop
fidivl
fmuls
rcll
mov
pop
adc
lds
cmpsl
and
lods
fs
push
inc
pusha
gs
xorl
sub
stc
popf
insl
jg
push
out
je
mov
inc
int
popf
dec
cmp
mov
jmp
lods
jmp
je
sahf
push
lret
cltd
ljmp
xchg
mov
jae
pop
mov
cli
jne
leave
out
jnp
sbb
cmc
dec
test
xchg
sub
pop
inc
es
mov
inc
in
mov
lock
mov
or
pushf
dec
rorl
add
mov
dec
dec
imul
stc
dec
idivl
or
scas
add
pop
aas
add
sub
adc
jns
movsb
testb
push
sub
popl
addl
push
push
push
in
pop
dec
in
mov
out
movsb
mov
popf
xchg
push
incb
std
mov
cmp
jne
inc
push
cli
mov
jo
cltd
xchg
cmc
dec
insb
shlb
inc
sub
and
outsl
xor
push
jae
mov
mov
insl
dec
dec
arpl
call
cmp
call
imul
or
in
aaa
dec
out
mov
and
pushf
sbb
gs
or
dec
push
push
mov
xchg
mov
jge
push
xorb
pop
push
add
fwait
cwtl
xchg
rcrl
mov
mov
addr16
adc
test
call
mov
fimull
adc
pusha
and
sub
and
inc
aad
adc
fs
add
out
inc
jne
dec
lret
leave
pand
sub
cs
hlt
xor
std
addr16
dec
fs
push
and
sbb
shl
inc
sub
pop
inc
mov
outsl
and
testl
or
imul
rclb
cltd
xchg
clc
dec
dec
pop
or
nop
jb
fcoml
jle
test
fdivs
ds
ss
stos
dec
adc
inc
add
out
bts
movsb
inc
bound
fdivs
repz
push
out
inc
pop
in
jo
in
adc
mov
pop
xchg
adc
int3
clc
xor
push
fmuls
xlat
adc
inc
jmp
jnp
push
pop
es
cmp
xchg
in
in
push
cmp
pop
cltd
dec
stos
cmp
cmp
sarb
ror
js
mov
xor
pop
push
sub
jae
rolb
into
jns
ret
pop
insb
xor
scas
lahf
dec
pop
nop
sub
call
mov
jnp
jnp
es
xchg
add
loop,pn
rcrl
push
jmp
sub
out
das
incb
aam
mov
test
xchg
test
mov
inc
test
pop
push
xor
xchg
call
jl
jne
imul
rorb
xlat
fsubrl
sub
stos
xor
jecxz
mov
jle
inc
or
adc
pop
nop
into
or
pop
dec
loope
xchg
outsb
xchg
inc
push
outsl
test
mov
or
jg
xor
popf
lods
int
jle
or
mov
mov
movsb
cmp
adc
jno
pop
jo
sbbb
lods
inc
aam
sbb
push
xchg
or
fstl
fisubl
dec
xchg
faddp
dec
and
ljmp
and
stc
jle
mov
pop
jmp
lret
in
data16
popa
jl
outsb
jle
js
xlat
nop
mov
lods
test
push
dec
out
push
adc
push
add
out
fs
fcomps
cs
pop
mov
inc
inc
call
fs
or
push
cld
pop
aas
out
sbb
mov
movsb
lcall
fiadds
and
gs
inc
loop
pop
dec
addr16
sub
mov
test
das
rolb
stos
inc
dec
scas
fdivrp
or
push
or
cmc
mov
enter
insb
popa
loop
enter
std
jno
lahf
iret
in
adc
inc
mov
mov
cmc
aas
sub
jne
sbb
clc
imul
ss
xchg
aad
in
testb
cld
jbe
dec
xor
out
push
jmp
es
ret
xchg
mov
jmp
test
loope
ret
dec
bound
xchg
aad
cmp
push
in
mov
ljmp
jecxz
loop
lods
add
fcomip
dec
or
icebp
fs
dec
out
mov
sub
mov
lods
adc
cmpsb
sub
subb
mov
loope
js
xchg
mov
xchg
push
push
ds
shll
jmp
pop
mov
in
js
inc
loop
mov
add
or
pop
mov
inc
fwait
lds
fldl
loopne
xorb
jecxz
inc
jl
mov
cmpsb
mov
dec
sbbb
adc
outsl
shl
xchg
data16
insl
mov
and
lret
and
dec
sbb
add
sbb
push
test
aas
shlb
jl
sub
and
int
jo
and
cltd
jmp
inc
repz
mov
sub
icebp
cs
mov
adc
ljmp
mov
jnp
adc
pop
xchg
stos
inc
adc
insl
sub
fwait
das
movsb
sbb
das
cld
pop
cmp
sub
into
mov
pusha
enter
faddp
sbbb
dec
les
outsl
mov
int
cld
movsl
cmp
cld
adc
fsubrl
or
jo
movsb
fs
loop
test
xchg
data16
push
fadds
int
xchg
mov
inc
dec
jbe
cld
jle
lret
cltd
shll
and
rcrl
adc
xchg
and
cltd
mov
mov
pop
fwait
pop
mov
and
fists
jecxz
dec
stc
cmpsb
outsb
push
test
daa
sbb
push
std
push
in
cltd
arpl
push
loop
dec
jns
inc
sub
imul
mov
cmp
mov
dec
add
js
jne
cmpsb
push
xchg
mov
sbb
in
inc
sbb
mov
jp
in
push
lds
cmp
incl
mov
aad
stos
aas
push
stos
jb
test
push
push
roll
pop
pop
in
insl
pop
add
out
dec
mov
movsb
fmuls
pop
adc
mov
repz
sub
ljmp
cmp
and
jb
mov
xor
adcl
cwtl
jl
das
ss
mov
xchg
lret
mov
cmp
jns
out
lock
inc
xchg
testb
js
dec
or
jmp
lds
sbb
into
and
mov
js
adc
or
mov
mov
push
cltd
and
sbb
in
push
sbb
and
out
mov
jmp
stos
sub
lods
ds
jno
jb
xchg
loop
cmpsl
xchg
dec
sub
lods
adc
lods
fadd
or
in
fs
daa
in
mov
sub
cmc
or
or
mov
dec
stc
movsb
movsl
inc
sbb
sub
rorl
jns
in
mov
jno
cmp
xor
cmp
xor
and
lret
fnclex
adc
dec
insb
or
jmp
hlt
cmp
test
cmp
and
xchg
and
ss
push
mov
mov
daa
and
push
inc
mov
cmp
cmp
pop
cmp
jmp
ja
sub
fmul
jg
pop
pusha
cmp
xchg
rcr
cmpsb
inc
sub
rolb
jl
clc
popl
jl
insb
shrl
fadds
imul
popa
pop
cld
pop
test
inc
and
push
or
sahf
ja
enter
or
in
mov
movsb
mov
sub
cmp
insl
ljmp
leave
mov
lret
loop
jge
scas
int
jnp
stos
movsb
fdivp
mov
iret
jp
ja
shrl
mov
jo
out
pop
cltd
or
jne
cmp
sbb
mov
jmp
push
adc
jg
psraw
stc
loope
je
sub
inc
lret
stc
cwtl
push
cli
fimuls
fistpl
repz
insl
fwait
inc
scas
mov
cwtl
fstpl
bound
inc
xchg
sub
ret
or
dec
ss
in
cli
xchg
inc
call
jb
pop
inc
pop
mov
xchg
sub
inc
mov
daa
ss
dec
sub
xchg
mov
testl
and
or
es
imul
inc
mov
sbb
fwait
cwtl
or
rcrb
inc
sar
or
pop
out
and
outsb
out
cld
sub
ljmp
xor
or
dec
add
inc
mov
fimull
pushw
inc
movsb
jle
fsubrl
stos
mov
mov
in
js
fsubs
lret
in
add
loopne,pn
shr
inc
cli
popf
pop
leave
test
xchg
movsl
jmp
jge
out
jo
pop
in
jae
xchg
leave
mov
or
jns
xchg
incl
fisttpll
or
imul
in
or
xchg
std
hlt
and
dec
push
or
aas
or
mov
imul
negl
imul
jb
movsb
enter
loop
jne
and
in
aam
push
cmpsl
lret
arpl
out
sub
lock
decb
sub
imul
inc
fs
jl
test
add
lret
je
loop
cmp
jno
mov
cwtl
test
add
mulb
mov
mov
or
aam
out
sub
repnz
xchg
add
mov
je
jns
decb
push
leave
pop
lods
pop
mov
sbb
mov
or
pushf
ret
mov
mov
repz
dec
outsb
sub
insl
cmc
xchg
iret
dec
sub
pop
jne
sahf
add
mov
mov
push
mov
fcmovb
mov
out
mov
icebp
xchg
ss
mov
cmp
dec
mov
dec
push
pop
sti
push
fcoml
push
pop
pop
dec
mov
shl
cmp
push
insl
jle
inc
lahf
mov
pusha
inc
push
movsl
push
imul
add
sbb
mov
iret
jecxz
mov
jne
xor
pop
push
pop
subl
imul
xchg
ret
fistps
out
xlat
lods
leave
inc
rorb
repnz
xchg
dec
into
jl
mov
scas
pop
jae
mov
ss
or
jle
cmpsb
mov
lret
ja
rcrb
aas
jno
lock
decb
pop
ds
rcrl
ret
cmpsb
xor
ja
cli
and
jge
ljmp
cmc
outsb
adc
ljmp
lcall
inc
cld
out
cld
sub
cmc
ret
or
lea
gs
inc
sub
fldenv
nop
lods
test
in
adc
push
mov
andb
fdivrp
lahf
adc
jmp
mov
sarl
jne
sti
subl
fwait
lret
test
jne
pop
fldcw
xchg
stos
pop
movsb
mov
xor
stc
mov
jnp
jmp
jne
aas
into
mov
inc
push
in
jle
or
add
add
addr16
and
fisubrl
sbb
jl
sahf
xchg
mov
mov
das
aam
jp
mov
add
push
adc
mov
int
inc
es
sub
jg
movsb
std
jns
mov
std
mov
dec
xlat
cmpsl
sub
jb
mov
adc
fisttpll
imul
imull
out
mov
and
jmp
mov
adc
dec
add
mov
xor
inc
mov
mov
cltd
mov
and
lcall
jl
jb
repnz
pop
pop
sbb
sar
dec
cmp
jbe
std
push
iret
cli
mov
pop
test
fimull
sbb
mov
mov
mov
or
adc
rclb
cmp
xorl
sub
jmp
call
stos
inc
and
add
sub
adc
mov
outsl
daa
pushf
push
adc
outsb
ret
rclb
cltd
push
cli
cmpsl
mov
push
pop
rcr
fiadds
dec
lret
lods
je
loopne
push
pop
jo
scas
fcompl
fwait
std
dec
inc
in
movsb
movsb
jnp
lock
sub
lcall
xchg
or
lea
enter
jp
mov
adc
push
push
lock
ljmp
jge
cmpsb
aam
rcl
loope
into
inc
jmp
sub
dec
dec
call
xor
cmp
mov
sub
in
fcoml
dec
add
test
shlb
outsb
lods
hlt
iret
and
add
jae
ss
xlat
mov
loope
add
pop
push
lods
stos
insl
dec
test
cmpsl
insb
dec
mov
mov
jle
cltd
outsb
push
push
lock
loope
mov
outsl
mov
dec
cmpsb
roll
outsl
push
into
pop
clc
cld
and
imul
mov
cwtl
or
xchg
lea
repnz
movsb
imul
out
cmp
loopw
data16
and
xchg
ja
in
out
mov
xchg
sahf
dec
mov
push
push
ljmp
sbb
sbb
das
lds
push
mov
aam
mov
cmpsb
pop
jne
into
insl
jmp
and
shll
fs
jne
mov
jle
movsb
xchg
add
lds
and
insb
jl
jp
or
loope
fs
and
roll
sub
lret
pop
mov
inc
in
fdivr
mov
hlt
test
jnp
jo
daa
lfs
add
jp
dec
lahf
push
lea
xchg
lcall
ss
loope
ss
dec
cmp
dec
inc
es
out
jg
loopne
sti
outsb
xchg
scas
sub
movsb
pop
dec
jmp
jg
sub
cli
xchg
cmp
cli
cmc
dec
jecxz
dec
add
cltd
adc
popa
inc
ljmp
mov
call
outsb
test
add
jb
fstps
mov
jp
mov
inc
cmp
push
aaa
imul
cmp
add
jg,pn
pop
dec
in
dec
iret
lahf
mov
stc
aaa
das
jbe
in
fsubr
sub
fcmovne
data16
sub
movsb
sbb
mov
fdivs
jle
rcl
cmp
pop
fisubrs
xchg
ljmp
rcr
sbb
fdivs
ljmp
hlt
jae
lcall
push
sub
fs
pop
pop
push
fisubl
lds
cld
and
jns
roll
mov
ror
mov
call
mov
imul
test
ja
push
outsb
mov
imul
into
mov
push
push
js
dec
jbe
cltd
sti
inc
mov
or
adc
xchg
mov
ss
movsb
dec
xchg
jo
xchg
lds
inc
outsb
and
jns
push
jne
outsl
test
dec
pop
rcr
jae
ja
pop
cld
int
aas
shr
pop
mov
xchg
xor
cltd
sbbl
xchg
lods
pop
fstp
jp
push
and
sbb
lea
lret
divb
cwtl
std
xchg
jecxz
adc
outsb
inc
imul
mov
shll
loop
or
push
mov
jne
repnz
adc
out
sub
fiadds
mov
adc
adc
repnz
xchg
or
sar
aad
push
repnz
cltd
sbb
cmp
or
and
cmp
cltd
and
aad
push
call
repz
rcl
sbb
movsb
cmpb
mov
into
add
mov
lret
jbe
sub
push
movsw
pop
dec
inc
or
sbb
cmpsb
popa
repnz
mov
hlt
xor
xlat
stc
sub
imul
bound
jp
pop
jl
clc
dec
jo
push
mov
dec
jle
inc
movsl
jmp
sub
jnp
jl
jns
mov
repnz
push
add
cmp
inc
sbb
push
sbb
loopne
ljmp
out
sub
inc
mov
loopne
movsb
outsb
enter
xchg
xor
ds
mov
xchg
repz
mov
xchg
aam
les
aad
xchg
mov
cmc
add
xchg
call
inc
into
jg
insb
pop
sub
nop
iret
lea
rcr
mov
fcomps
in
out
movsb
shlb
rorl
and
add
push
and
xorb
popf
int
out
inc
je
sbb
inc
mov
std
movsb
jb
aaa
cltd
inc
pusha
xchg
bound
loop
lahf
out
movsb
xor
fidivl
mov
cmp
lock
adc
mov
gs
sbb
adc
insb
lods
inc
rcrb
aam
sahf
jae
sub
into
mov
fs
daa
pop
adcl
push
sbbb
fs
fs
jbe
stos
nop
sbb
sti
push
js
popa
xlat
mov
xchg
or
clc
inc
flds
cltd
ss
mov
sbb
push
outsb
enter
jnp
aaa
add
mov
stos
jmp
nop
insl
jbe
pop
std
adc
mov
js
cmc
leave
xor
das
call
movsb
divb
lcall
cmp
jp
jnp
out
push
jnp
into
gs
sahf
cmp
jmp
mov
cltd
cld
outsl
fidivrl
out
push
cmp
mov
lods
jp
test
jnp
fs
sbb
sub
hlt
stos
cmp
lahf
or
sbb
or
pop
out
sbb
mov
pop
test
into
lea
cmp
inc
or
into
sbb
push
push
das
in
or
jecxz
cltd
aas
movsl
repz
xchg
ret
mov
cli
or
arpl
lea
push
int3
lcall
push
sub
outsb
stc
inc
push
out
cmpsb
sub
or
lds
and
dec
pop
into
and
cwtl
dec
sbb
mov
jbe
xor
mov
fbstp
mov
inc
push
add
jbe
push
mov
vmovsd
inc
sti
mov
fwait
popa
adc
mov
mov
lods
xchg
or
int3
sub
jno
mov
push
aam
dec
shlb
or
call
fs
and
cmp
xchg
adc
pop
sub
xchg
inc
stc
add
fbld
sbb
inc
jge
mov
xchg
mov
enter
push
dec
inc
mov
cmp
jge
inc
js
inc
sti
xor
push
cmp
sub
jae
adc
jge
push
dec
shll
and
cmp
cltd
jge
xlat
dec
add
cmp
test
loopne
jle
push
scas
das
les
push
jns
pop
xor
outsb
mov
push
pop
lods
test
dec
inc
mov
inc
pop
call
and
hlt
mov
pop
sbb
cmp
aaa
insl
or
mov
jg
rolb
pop
shll
cmp
mov
adc
sub
orl
jae
inc
push
dec
or
push
mov
call
jl
mov
repnz
scas
aas
adc
inc
rcrl
xchg
dec
mov
cmp
pop
out
iret
jg
ljmp
mov
lea
mov
mov
fs
pushf
inc
inc
pushf
add
add
mov
xchg
pop
movsl
mov
pop
jge
xchg
test
or
add
fs
inc
pop
sbb
dec
add
pop
mov
mov
iret
jo
rcr
adc
in
dec
cmp
pop
or
rcl
jae
mov
addr16
stos
and
xchg
enter
sub
mov
stos
popa
bsf
stos
aam
aad
mov
xor
cltd
or
clc
in
lea
ljmp
fdivr
cld
incl
jb
or
cld
jno
data16
shrd
insb
loopne
adc
out
jle
mov
cs
pusha
push
cmp
mov
test
adc
ficoml
ss
push
into
enter
ret
lds
test
adc
xchg
inc
and
mov
pop
pop
cld
js
imul
outsb
testb
pop
sarl
sbb
xchg
call
movsb
jbe
jbe
fnstsw
ljmp
mov
popa
cli
mov
es
and
daa
mov
pop
aad
mov
repnz
mov
push
or
adc
pop
or
ljmp
mov
or
cmp
push
inc
cmpsb
in
adc
or
add
mov
xchg
imul
ss
xchg
dec
repz
int3
jp
andl
idiv
stos
mov
sub
inc
sub
push
aas
enter
insl
pop
or
call
dec
sbb
or
fs
or
popa
or
cmpsb
dec
cmp
mov
xchg
mov
mov
cmp
or
fwait
mov
rcrb
add
xlat
outsb
or
mov
mov
jmp
lods
push
mov
in
insb
push
cld
jbe
and
adcl
adc
mov
enter
adc
dec
jge
cmp
stc
les
nop
sti
add
outsb
sbb
mov
in
push
movsl
fisubl
inc
std
js
adc
shrb
sbb
js
mov
cmpb
add
pusha
imul
fisttps
inc
dec
mov
loop
loope
out
aam
cwtl
faddp
add
mov
xchg
or
nop
mov
sbb
mov
std
and
jnp
inc
ss
mulb
pop
cmp
insl
mul
incl
std
and
ret
rcr
scas
or
insl
pop
out
negl
xor
sub
rolb
or
test
pop
loop
and
pop
pop
ds
adc
in
lds
inc
mov
shlb
mov
js
pop
pusha
sbbl
shrl
cmpsl
cmp
test
and
jno
imul
sbb
and
imul
cmp
mov
push
insl
add
loopne
mov
xchg
pop
lea
mov
sbb
stos
stos
cwtl
cltd
inc
inc
jne
pusha
jg
push
sub
pop
jl
insl
stos
lcall
addr16
pop
imul
push
lret
cmc
mov
cmpb
add
and
out
mov
mov
sbb
mov
cmp
lcall
xchg
lcall
inc
enter
fiadds
call
loop
loop
pop
mov
and
sti
pop
add
cltd
ret
leave
add
out
jbe
insl
adc
mov
test
jo
add
sub
xor
adc
pop
test
int
gs
pop
test
outsb
bound
pop
out
sub
pushf
cmp
stos
cs
outsl
mov
sub
mov
or
jae
lea
shll
ds
push
xchg
inc
xchg
fs
scas
arpl
mov
mov
xchg
inc
das
dec
nop
mov
decl
ljmp
pop
jne
ja
addr16
jmp
lods
jle
dec
and
add
or
hlt
pop
inc
jl
xchg
pop
mov
xchg
inc
xchg
iret
lds
cmp
push
inc
or
or
dec
cli
popl
inc
push
jnp
mov
inc
sbbb
xor
sub
xchg
outsb
pop
cwtl
sub
andl
push
inc
loopne
jle
cltd
sbbb
hlt
jle
imul
pop
jb
outsl
movsb
sarb
fsubs
lods
cwtl
loop
jge
fcmovu
cltd
inc
cmp
jmp
das
jb
ja
adc
pop
add
mov
mov
pop
mov
je
cmp
jns
or
inc
clc
popf
add
sbb
push
cmpsl
xchg
das
or
mov
inc
and
fcomps
mov
pop
mov
test
les
lods
leave
dec
fdivrp
int3
sbb
jae
mov
fcoml
popf
jp
ficomps
cltd
mov
int3
das
lahf
or
adc
enter
mov
stos
je
cwtl
addb
lds
xchg
cltd
imul
mov
fistpl
inc
pop
xor
xor
je
pop
inc
jo
dec
adc
and
clc
icebp
int
mov
cmp
mov
inc
mov
fbstp
outsb
or
fsts
call
jg
adc
insl
fs
jb
sub
ds
addl
ss
pop
dec
das
in
xchg
xorl
push
fwait
and
inc
jnp
std
mov
int
dec
popa
xor
iret
push
lods
pop
sbb
stc
pusha
xchg
mov
jnp
push
mov
pop
mov
or
xor
jmp
bound
ds
sbb
fwait
lods
push
fwait
test
jg
ret
fcmovb
sti
test
test
mov
insb
icebp
sub
xlat
nop
xchg
mov
push
xor
push
and
stc
enter
push
arpl
sub
and
inc
sbb
cmp
mov
ret
xchg
rcrb
mov
pushl
aam
lods
dec
test
cmp
imul
mov
aas
add
jle
push
sub
push
xor
aaa
pushf
mov
into
shll
push
imul
cld
call
aaa
cld
xchg
imul
sbb
mov
cmp
rorb
lret
cmp
fldenv
add
stos
loopne
fnstenv
jmp
mov
adc
fldcw
xacquire
pop
test
fs
dec
stc
movsb
cmp
pop
inc
ja
dec
outsl
fisttpll
dec
sbbl
pop
dec
loopne
jae
mov
mov
jp
pop
adc
inc
mov
ljmp
xchg
inc
cmp
je
ss
mov
repnz
xlat
jne
cld
movsl
or
jnp
outsb
pushf
inc
mov
sub
fs
cld
int
xchg
cli
or
inc
cmp
loopne
mov
add
js
pop
push
fisttpll
and
imul
frstpm(287
push
and
popl
insl
in
and
in
cmpsb
dec
lods
iret
and
imul
movsb
add
mov
sar
jle
inc
int
cmp
aaa
aas
ja
inc
cmp
cmp
mov
mov
add
arpl
mov
outsb
rclb
xchg
push
add
xchg
mov
fs
into
xchg
sbb
dec
push
movsb
xchg
js
clc
insl
mov
jge
stc
mov
xchg
jo
pop
negb
xchg
mov
pop
test
mov
incb
repz
in
shll
mov
mov
jge
pop
pop
mov
scas
lcall
lods
sbb
ljmp
out
je
mov
popf
pop
push
xchg
dec
dec
jmp
pop
mov
in
push
sbb
aas
xor
add
mov
jno
and
cltd
cmp
jno
dec
iret
out
std
push
dec
in
cmpsl
pop
sub
mov
xchg
sub
mov
pop
outsl
adc
icebp
and
jnp
mov
push
pushf
outsb
mov
jge
ss
and
lret
sub
movsl
adc
lahf
jb,pt
rcr
insl
push
call
mov
iret
xchg
push
xchg
sub
or
mov
outsl
fs
add
outsb
inc
insl
fmuls
out
gs
push
jb
xor
out
insl
aas
movsb
sbb
mov
pop
je
push
lods
sbb
adc
jns
insl
cltd
incl
push
imul
sub
outsb
jb
pop
inc
sub
sub
movsb
daa
imulb
sub
int
pushf
ss
pop
std
aam
cmc
insb
jle
sbb
into
cwtl
xor
leave
sub
mov
daa
xor
aaa
repz
xchg
and
movsb
jne
dec
add
test
cmpsb
fs
dec
cmpsl
into
sub
dec
int
cmc
stc
adc
mov
loopne
ret
test
ret
ja
jge
aad
sahf
lret
sub
into
adc
pop
push
lea
clc
jbe
cmpsb
inc
mov
outsl
push
lcall
mov
fistps
cltd
push
cld
out
mov
dec
jle
sub
cli
cwtl
push
pop
movsb
int3
into
pop
into
ljmp
mov
ret
fisubl
in
and
mov
mov
popl
lods
and
mov
inc
imul
sub
jno
test
lods
jmp
sub
add
repnz
mov
or
test
cs
inc
pop
das
rcrb
and
dec
out
sbb
xchg
ljmp
dec
clc
jmp
addr16
jb
or
movsb
cmpsb
lret
push
xchg
lods
pop
ss
fisubrs
sbb
pushf
jns
and
mov
lcall
mov
pop
mov
push
xchg
test
fs
cld
mov
js
rcll
lret
ljmp
adc
or
mov
add
xchg
outsb
pop
nop
xlat
add
fstl
mov
andb
inc
imul
xchg
cld
cli
pop
and
adc
and
inc
icebp
jnp
xlat
insl
fs
outsb
out
pop
ss
cwtl
inc
mov
push
and
lods
iret
in
push
mov
enter
arpl
mov
loop
mov
adcl
test
cmpsl
push
cltd
cmp
inc
mov
mov
mov
pop
in
push
pushf
sbb
dec
test
adc
subl
addb
popf
std
aam
in
lods
fwait
or
jmp
lahf
ds
xchg
push
mov
mov
pop
out
sbb
push
das
add
popf
inc
cmp
mov
mov
jg
sbb
or
lahf
repnz
inc
inc
sbb
pop
loope
frstor
movsl
je
jb
and
jbe
inc
add
jb
jle
out
xor
popa
sub
aam
cmp
movsl
in
mov
lods
movsb
jae
loopne
xchg
xchg
cmp
outsl
aad
inc
mov
adc
pop
fcomps
or
push
dec
addr16
xchg
fs
jbe
outsb
cmpsl
je
sub
and
mov
ss
outsb
fsubrs
icebp
out
icebp
lods
fld
or
fs
inc
lahf
mov
scas
scas
stc
mov
sti
mov
jecxz
icebp
adc
cmpsl
jo
mov
fldcw
loopne
pop
imul
xor
stos
ss
xorl
outsl
and
fldenv
and
outsb
iret
mov
movsb
addr16
push
inc
jno
mov
push
mov
fistps
or
adc
xor
pop
sub
fldcw
ljmp
fbstp
in
arpl
push
and
js
mov
sub
adc
adc
adc
icebp
inc
aas
push
jae
cwtl
dec
mov
or
insl
inc
mov
cld
jno
sub
in
push
xchg
mov
cld
aam
xor
jmp
fdivs
and
aad
rolb
cmpb
jl
icebp
sub
inc
ucomiss
nop
mov
stos
lods
scas
jo
lock
inc
mov
mov
cmova
fs
je
or
into
pusha
pop
fcmovu
stos
mov
sbb
mov
fsts
popf
data16
movsb
js
sub
xchg
adc
orb
push
adc
inc
jg
inc
sub
into
cmp
xchg
cmpl
add
pop
movl
mov
cltd
jle
jb
stos
inc
sub
vmread
jl
inc
dec
imul
xchg
stos
idiv
pop
adc
dec
and
mov
inc
and
jle
cmp
mov
and
push
ss
inc
aaa
jnp
dec
rcr
mulb
dec
movsb
xor
push
dec
inc
and
jecxz
jecxz
pop
fstpt
pushf
add
dec
shrb
cwtl
ds
pusha
dec
outsb
sahf
lds
push
push
pop
lods
mov
jle
xor
lea
andb
jmp
movsb
jb
jne
inc
data16
insb
into
jp
push
push
bound
call
sti
xchg
inc
sub
ja
jnp
jae
fdivrs
inc
fdivrs
inc
sub
sbb
inc
mov
fsubrl
shlb
cmp
decb
outsb
pop
in
inc
inc
ss
sbb
sbb
sub
sbb
bound
push
xchg
push
ss
mov
out
movsb
dec
sbb
xor
push
inc
in
sarl
mov
push
jbe
mov
fwait
andl
or
arpl
imul
loope
out
push
lea
mov
aaa
addb
sbb
arpl
jge
mov
xlat
das
mov
inc
test
adc
adcb
mov
jmp
pop
mov
dec
ficompl
imul
lods
mov
popf
push
inc
or
fildll
outsb
cld
aas
popa
jno
outsb
xchg
test
shrl
dec
fs
cld
in
test
ljmp
popf
insl
push
frstor
push
inc
jp
push
jg
adcb
xchg
movsb
cmp
js
decb
sahf
lods
imul
pop
mov
adc
cmp
fmull
or
imul
adc
movsb
andl
fldenv
push
xchg
imul
daa
out
cli
jl
xchg
sti
rcrb
ljmp
repnz
add
cwtl
dec
movsb
rolb
mov
adc
aad
mov
int3
sub
inc
imul
dec
fbld
inc
test
faddl
inc
push
insl
lcall
dec
pop
cltd
or
inc
mov
mov
adc
xorb
sub
nop
xor
jmp
sub
pop
mov
int
inc
push
jle
mov
mov
sbb
cmp
mov
jge
push
pop
insb
inc
pop
cmp
std
repz
mov
pop
pop
out
fistl
dec
fldln2
faddl
sub
imul
insb
arpl
cmpsb
dec
push
mov
sti
out
mov
mov
lods
mov
jb
cmp
pop
or
pop
jg
or
or
inc
mov
mov
push
lret
outsb
sarl
xor
aad
jbe
out
and
pusha
stos
out
mov
mov
mov
cmp
cld
jne
inc
push
mov
jp
pop
icebp
or
dec
inc
mov
dec
xchg
movsb
xor
lock
pop
push
add
jmp
mov
mov
sub
mov
outsl
sarb
cmp
jns
push
fs
push
popa
jmp
sbb
xchg
sub
jbe
or
lods
jp
xchg
push
dec
jne
es
inc
repz
shr
ss
mov
adc
movsl
jge
mov
push
cmp
jg
mov
es
jecxz
inc
fistl
mov
inc
pop
rcl
jno
sub
mov
cmpsl
or
negb
out
fs
imul
mov
mov
add
pusha
cli
xchg
mov
and
jae
pop
jns
insl
mov
out
dec
ror
xchg
inc
test
jg
dec
imul
add
ljmp
and
fstpt
fidivs
add
cwtl
mov
popf
xor
ljmp
pop
push
jb
ret
fs
test
dec
cmc
mov
add
xor
je
ret
pop
in
mov
imulb
movsl
dec
imul
daa
ljmp
inc
jae
imul
sub
adc
ret
sbb
movsb
ja
mov
pop
nop
ljmp
ffreep
fs
pushl
cmp
movsb
popf
andl
aam
jecxz
out
in
or
std
out
rclb
rclb
push
int3
int3
sbb
out
sarb
cltd
lret
inc
fcoms
or
mul
xor
jecxz
push
popf
mov
ds
aam
adc
push
mov
lods
ss
mov
pop
cmp
sbb
leave
mov
scas
orl
sbb
es
xor
int3
pop
mov
mov
movsb
cli
inc
mov
mulb
data16
rcrb
stos
mov
rorb
pop
jns
sbb
mov
movsb
test
addl
fdiv
mov
mov
out
sbb
jmp
dec
popa
add
je
jne
push
dec
sbb
mov
or
mov
lds
ljmp
sub
mov
mov
and
add
std
stos
cs
test
sbb
cmpsb
add
cld
sub
js
inc
or
push
mov
rolb
jnp
cmpl
mov
inc
out
jmp
lret
mov
jl
in
je
flds
jnp
ss
dec
ds
jb
movsb
mov
into
or
add
add
inc
popa
fwait
call
insl
mov
std
fcmovnb
mov
dec
mov
arpl
push
xchg
pop
movsb
stos
sar
out
imul
cmp
lods
mov
imul
fmull
dec
cmpsb
xchg
out
fisubl
dec
cwtl
lret
xor
notl
rol
inc
leave
push
mov
inc
sub
test
mov
out
je
neg
dec
dec
scas
adc
ljmp
aas
adc
sbb
xor
mov
cli
in
dec
adc
or
pop
mov
push
mov
cltd
repz
pop
cmc
shrb
stc
stos
icebp
ja
out
sahf
sub
fwait
outsl
or
push
rcl
pop
pop
call
cmp
bound
imul
pusha
jl
sbb
stos
sbb
or
loopne
iret
adc
insl
sub
pop
pop
std
cmpsb
pop
sbb
inc
cmp
pop
imul
das
and
xor
xor
int
adc
movsb
fisttps
fnstcw
loopne
or
orb
jo
lret
adc
adc
popf
sub
aad
mov
jbe
out
jnp
fsts
add
out
out
repz
bound
sbbb
xchg
je
mov
add
dec
icebp
pop
out
inc
icebp
xlat
int
addr16
jge
repnz
and
pop
mov
std
mov
mov
xor
call
cltd
mov
stc
ds
dec
aaa
pushf
repz
sbb
mov
lds
jbe
lcall
mov
pop
cwtl
fs
dec
cltd
xlat
lret
fiaddl
sahf
shl
jb
push
aad
popa
cld
imul
push
cmc
push
lret
fs
dec
dec
and
mov
cmp
les
adc
inc
jnp
dec
mov
push
lret
stos
outsb
add
pop
test
sbb
rclb
sub
adc
pop
xor
movsb
pop
dec
out
les
push
cmp
push
aas
ljmp
jns
cmpl
add
je
loop
pop
fs
cltd
mov
xchg
adcb
jns
pop
sbb
popa
sti
add
pop
into
cmp
ret
xor
hlt
and
cld
imul
cmp
push
movsb
mov
xor
into
sarl
sub
sub
ds
sub
xchg
aad
int3
flds
movsb
cmpsb
ljmp
push
push
push
pushf
mov
cmp
sbb
je
movsb
pop
pop
xor
and
rorl
xchg
enter
cmp
xchg
ljmp
aam
cmp
inc
loope
add
xchg
ss
je
sub
mov
cltd
data16
neg
push
dec
jp
inc
push
sbb
jl
fmull
cmpsl
dec
hlt
into
icebp
inc
subl
inc
push
jg
xor
lods
push
xlat
pop
xchg
ljmp
enter
dec
or
push
fcompl
mov
test
cmp
movsb
movsl
in
rorl
sub
hlt
mov
add
aas
lods
int
jp
int
sub
mov
pusha
mov
or
sub
outsb
and
mov
ret
out
jl
inc
fwait
shrl
aad
outsb
dec
cmp
jl
lahf
mov
jmp
sub
movsb
fisubrl
inc
pop
arpl
cmc
xchg
ss
xchg
xor
push
jp
in
dec
push
add
fs
xchg
mov
fistps
stc
inc
xchg
hlt
xor
cltd
insl
aas
ss
xchg
xchg
pop
test
inc
hlt
fistpll
es
filds
mov
mov
bound
cltd
mov
add
cli
mov
mov
jge
add
lret
push
insl
into
movsl
mov
in
cmp
subb
push
push
push
gs
xchg
xchg
out
add
xor
dec
pop
lea
sar
mov
imul
loop
and
mov
mov
adc
mov
fsts
pusha
pusha
mov
ficompl
lock
cli
mov
insl
dec
pop
mov
fisubl
imul
dec
imul
shl
jnp
jle
add
and
nop
mov
jns
pop
int
sub
jnp
movsb
sbbb
shlb
xor
mov
ret
shll
rcl
insl
jb
outsb
inc
movsb
add
adc
lahf
jecxz
loop
out
shl
je
cltd
sahf
stc
inc
jne
adc
pop
jp
inc
push
or
sub
data16
mov
mov
shlb
fs
rolb
dec
pop
push
inc
pop
jne
mov
sub
js
pop
jno
int3
fwait
iret
popa
call
add
mov
xchg
mov
sub
add
in
in
dec
and
xchg
lds
into
fimull
pop
xacquire
inc
mov
adc
push
jno
sti
xchg
pop
dec
cli
outsb
mov
xor
insb
add
lret
mov
rcrb
shr
adc
sbb
xchg
dec
insl
and
cmpsl
out
pop
scas
mov
out
into
fisttpl
out
insl
js
mov
insb
rorl
aaa
lods
cmpsb
pop
fldcw
fisttpll
add
sbb
nop
jbe
movsb
mov
dec
ljmp
addr16
fs
jge
popf
mov
pop
je
cmpsb
jg
cmc
imul
and
adc
jns
movsb
nop
mov
sub
add
out
les
mov
inc
aam
xlat
xchg
push
shl
sub
and
sub
int3
stc
add
aam
sub
lods
push
ret
in
ds
xlat
addr16
mov
push
xchg
jbe
pop
jns
stos
xlat
mov
imul
out
pop
imul
rcr
ret
nop
loop
push
ss
in
pusha
jp
ljmp
mov
call
mov
xor
in
leave
or
decb
xor
inc
shrl
push
cltd
xchg
cs
mov
int
inc
sub
stos
mov
xchg
adc
out
movsb
mov
mov
insl
ss
push
add
mov
stc
mov
subl
out
add
imul
les
fcomps
pop
mov
mov
ja
cltd
dec
jecxz
nop
push
lea
add
cmp
stos
leave
pop
adc
je
test
or
mov
lods
and
shrb
dec
inc
movsb
jno
adc
aad
jo
mov
xchg
push
test
mov
nop
out
sub
aad
cld
cmp
mov
jge
outsb
mov
cmp
es
insl
dec
and
jle
out
ds
jbe
imul
jb
push
dec
inc
sbb
stos
out
cli
imul
and
and
mov
std
fadds
mov
maxps
cwtl
lds
out
fwait
jmp
mov
icebp
xchg
ret
push
cld
outsb
dec
lods
rclb
out
outsl
cmp
sub
mov
inc
adc
push
and
pop
add
sahf
jno
inc
cltd
dec
mov
cmp
aas
pop
inc
fwait
rolb
shrl
xchg
fs
adc
add
sbbl
test
lcall
mov
popf
cld
add
call
and
xchg
mov
fcoml
into
imul
mov
pop
xchg
out
clc
lret
shlb
out
ds
fscale
mov
jp
inc
dec
mov
andl
out
rcrl
in
fxch
mov
jecxz
mov
popf
dec
sub
cmpsl
in
out
es
fsts
dec
jae
leave
mov
js
fcoml
dec
cmpsb
mov
cld
or
fwait
in
flds
pop
aas
sbb
mov
sub
insb
out
das
pop
jecxz
sbb
imul
or
jo
add
xlat
sub
mov
mov
insl
mov
xchg
sbb
std
fstl
iret
sub
adc
cld
jp
fmul
mov
nop
mov
pop
lods
dec
dec
fucomip
ror
inc
cwtl
pushf
mov
daa
test
xlat
sub
sar
dec
jmp
cmp
iret
dec
sbb
sub
jbe
fmul
mov
imul
pop
daa
ficomps
jo
out
call
xchg
pop
daa
inc
mov
das
aaa
xchg
push
push
sub
stos
sub
jno
enter
jno
lock
je
xchg
sub
pop
mov
push
xlat
test
movsb
mov
ljmp
insb
dec
lcall
icebp
push
mov
test
inc
inc
ficoml
loop
stos
or
cmp
fstps
lods
pop
sub
dec
pop
jns
cli
jg
orb
lret
dec
movsb
xor
sarl
and
pop
lahf
dec
inc
sbb
cmp
mov
sbb
std
ja
andb
push
jp
mov
insb
and
mov
pop
mov
fs
test
cvtdq2ps
out
pop
in
loop
inc
fs
clc
decl
sbb
cmpsb
mov
fcom
add
push
or
pop
dec
ljmp
rcl
movsl
lods
aas
and
jecxz
ret
movsb
xchg
into
sub
jnp
dec
scas
mov
aas
dec
sub
jp
inc
iret
pop
pop
or
dec
fs
add
jb
movsb
dec
imul
stos
loope
pop
mov
enter
dec
cmp
push
adc
add
adc
ss
in
int3
inc
sub
test
popf
stc
ss
loope
out
or
out
fwait
xchg
imul
cmp
adc
inc
movsb
addl
rorl
fnstcw
mov
call
mov
mov
inc
aam
std
out
fidivs
std
jg
fcoms
or
adc
pop
pop
inc
xchg
fidivs
cmp
xchg
jb
add
das
jns
pop
cmc
inc
pushl
ljmp
stos
fsubrp
adc
lods
imul
xorl
daa
shr
aas
test
mov
ret
outsl
mov
cmp
ja
adc
int
sbb
dec
je
bound
stos
fs
jnp
pop
or
push
and
stos
aas
inc
leave
into
mov
jnp
sbb
push
ficoms
sub
xchg
jo
fldenv
xchg
mov
test
repnz
shlb
pop
mov
xchg
pusha
loopne
pop
stos
inc
adc
jb
scas
push
pop
lods
mov
ljmp
cltd
pushl
jae
add
daa
ret
or
and
addb
mov
js
repnz
inc
jmp
cmpsl
ljmp
sti
outsb
lods
or
push
inc
das
movsb
in
xchg
sbb
xor
in
mov
push
jbe
arpl
or
in
dec
adc
or
cmpsl
fwait
lea
xchg
mov
imul
ret
pop
fnsave
push
gs
arpl
in
add
xor
daa
into
xor
adcb
jge
js
ds
mov
jno
in
add
add
sbbb
cs
mov
xchg
cmp
into
outsl
adc
mov
push
lret
lods
xor
add
iret
pop
jecxz
std
jge
jns
mov
dec
std
dec
movsl
mov
adc
mov
das
lcall
outsl
inc
mov
push
lods
push
inc
sbb
or
mov
ljmp
cld
into
or
inc
jnp
fisubrs
jno
fcomip
jne
sub
pop
push
cmp
cwtl
out
cwtl
test
cmc
xchg
std
repz
in
add
cs
sbb
push
fnstenv
inc
push
push
fs
cmp
mov
mov
rolb
push
pop
or
dec
dec
jl
dec
xor
adc
lahf
pop
mov
cmp
xlat
dec
or
jb
cs
add
adc
scas
sysexit
inc
mov
into
sub
adc
inc
lock
xor
pop
cmp
cs
pushf
jb
ljmp
pop
mov
mov
inc
hlt
movsl
mov
add
mov
mov
add
gs
in
sub
or
into
stc
mov
fcoml
inc
insb
mov
nop
repz
jmp
xchg
add
outsl
shll
mov
sub
outsb
xchg
mov
mov
inc
scas
daa
or
or
ret
andb
fimuls
add
test
imul
inc
sti
inc
push
icebp
adc
and
cmc
sahf
lret
push
mov
mov
ss
jne
inc
test
xchg
ret
ret
cli
push
jge
test
in
jnp
lcall
loopne
cld
mov
pop
lds
mov
push
hlt
push
sbb
push
lods
inc
dec
jne
dec
mov
dec
fsubrs
sbb
mov
mov
insb
and
dec
adc
pop
inc
ss
jnp
cmp
shlb
dec
movsb
rorb
push
xchg
pop
or
das
movsb
xchg
xorb
sub
cwtl
or
jno
mov
gs
push
cmc
lcall
push
jnp
xor
vmovupd
iret
mov
and
mov
inc
test
dec
into
sub
frstpm(287
jge
inc
imul
imul
nop
stos
out
push
es
mov
js
xor
je
jp
mov
ss
sub
xchg
es
push
fnstenv
fs
mov
shll
pop
pop
sbb
imul
cltd
lods
mov
xchg
out
or
sbb
pop
sub
xor
cld
mov
movsb
lcall
decl
sbb
dec
add
jno,pn
outsb
push
sarl
imulb
add
mov
jns
jmp
jnp
leave
adcl
sub
rorb
lcall
daa
cmp
hlt
ret
jmp
lods
pop
jo
rcr
xchg
mov
fdivrs
insb
das
fs
aam
les
shrl
inc
or
inc
and
push
xchg
test
fstps
adc
push
add
mov
cwtl
pusha
mov
call
clc
push
addb
pop
es
jns
pop
arpl
pop
imul
mov
psubsb
imul
out
mov
aas
adc
xor
inc
lds
dec
lret
or
ja
mov
mov
mov
pop
sbb
jns
sbb
lods
lahf
jnp
jge
and
xchg
fs
push
jge
mov
ja
xchg
mov
sub
popa
roll
push
mulb
movsb
cmp
sbb
xchg
lock
loop
push
push
stos
adcb
dec
test
out
aad
dec
mov
in
pushf
roll
sbb
lea
sub
mov
pop
dec
sbb
cltd
add
in
pop
enter
pop
jae
mov
in
cwtl
int
dec
jg
int
test
mov
scas
movsb
ja
das
aaa
popf
add
bnd
lcall
xchg
jbe
inc
ret
stos
pop
jns
or
jmp
lods
lret
dec
cmpb
adc
cmp
push
xchg
sbb
out
jbe
xchg
cld
xor
ljmp
cmp
out
mov
es
popf
sahf
fidivl
outsl
add
movsl
sub
fs
pop
aam
sti
lds
gs
lods
fldcw
mov
bound
fiadds
cld
fs
fwait
jnp
jae
xchg
jb
inc
lods
fs
sbb
mov
test
push
daa
icebp
ss
vcomiss
clts
fs
cmpsb
or
mov
cmp
stos
lahf
pop
mov
std
es
clc
fldenv
jnp
addr16
cmp
repnz
jne
pushf
push
outsb
dec
xor
ficomps
fcomps
inc
orl
dec
sub
adc
jne
aaa
rcrl
es
movsb
jne
pop
pop
out
in
lods
and
leave
cld
out
lods
das
mov
xor
mov
repnz
stc
jno
sub
jb
insl
movsb
adc
mov
pop
incl
cmpsb
fs
fsubr
in
and
mov
add
incl
popf
mov
or
lret
jbe
jo
pop
pop
jle
mov
sub
cmp
int
loopne
ss
std
inc
sub
pop
add
jp
xlat
sbb
scas
fsubs
in
sbb
xchg
adc
arpl
addl
or
cmp
je
jbe
movsb
adc
ss
ja
jno
psubsw
mov
xor
pusha
fimuls
clc
testb
cmp
mov
inc
ja
repz
sub
test
rclb
aad
pop
idivb
mov
outsl
dec
jmp
loop
mov
pop
nop
ret
es
push
mov
stos
cmp
mov
mov
fistpll
es
inc
push
rclb
jbe
mov
dec
scas
push
in
dec
fldl
sub
cmp
push
inc
jne
into
in
mov
cld
out
or
movsl
punpckhdq
adc
mov
jb
lock
ret
push
adc
inc
pop
xor
push
mov
stos
repnz
mov
ja
or
sarl
cmp
and
adc
mov
clc
push
mov
inc
push
bound
in
xchg
sub
sbb
std
es
pop
or
call
adc
es
insl
fs
add
mov
cmp
cmp
int
sub
dec
cwtl
jbe
out
std
fsubs
test
dec
push
sbb
mov
jge
dec
or
mov
cltd
push
mov
xchg
cmp
add
mov
add
pop
mov
dec
mov
dec
adc
outsb
pushf
inc
xor
add
or
out
mov
cmp
mov
mov
out
push
ja
lret
enter
loop
sub
ljmp
mov
hlt
fs
mov
inc
pusha
adc
into
jo
pop
sbb
jno
scas
mov
mov
das
xor
pop
out
hlt
into
in
movl
jp
push
sbb
imul
imul
imul
pop
ljmp
cli
cmpsl
inc
and
lods
roll
pushl
daa
and
out
lods
or
xor
jl
or
repnz
fisttps
xchg
into
adc
jge
icebp
jno
stos
test
pop
bound
xchg
xchg
out
cs
sbb
repz
fsubr
stos
es
dec
es
roll
lret
fs
cmp
fwait
adc
cmp
jno
cmp
xor
cld
lea
clc
cmc
or
dec
sub
sub
pop
rol
cmp
jb
outsb
mov
in
movsb
popf
mov
adc
inc
lods
sbb
sbb
test
mov
mov
roll
sbb
inc
mov
and
push
test
cmp
sbb
xchg
mov
movsb
scas
sahf
ficomps
pop
inc
jle
das
and
xchg
cmp
jl
fstl
adc
inc
rorl
add
and
sbb
mov
dec
lods
or
xor
movsb
popa
inc
and
aas
sbb
adc
adc
rcrb
sub
inc
cs
out
mov
lods
fsubrp
addr16
bound
outsb
loopne
mov
ja
std
cmc
cmpsb
sub
mov
sbb
xor
out
mov
daa
iret
sub
mov
scas
aas
js
jmp
cmp
jo
cli
int
pop
mulb
xchg
xchg
pop
xor
and
sbb
push
je
rcrb
dec
push
lds
inc
xor
jecxz
adc
jbe
imul
adc
sahf
orb
sti
call
sbb
sar
sbb
fcmovbe
lcall
or
jne
push
xchg
rcrb
jb
push
mov
sbb
inc
bound
arpl
push
xchg
push
ja
cmp
popa
movsb
out
mov
pusha
xchg
js
cld
bound
xchg
or
jp
lahf
inc
jg
cld
repz
dec
fcmovnbe
in
adc
xchg
outsb
frstor
ljmp
test
or
lahf
sahf
xor
leave
ja
icebp
or
dec
inc
fcoms
adc
lods
fs
xor
rolb
cmp
sub
xchg
sub
mov
call
cld
sbb
inc
inc
add
out
out
mov
sbb
xchg
pop
adc
stos
lret
mov
xor
and
sbb
inc
iret
mov
fucomip
dec
inc
adc
mov
xchg
dec
clc
mov
and
sbb
jg
cmp
jno
ljmp
pushf
imul
adc
cmc
jl
fidivrl
sub
lret
loop
mov
mov
test
ror
dec
jg
lods
and
out
daa
or
lock
pop
imul
jg
pop
fmuls
dec
lret
jnp
call
addb
add
flds
sub
or
mov
std
sbb
sub
test
je
or
inc
ss
add
cli
fsubrs
dec
or
dec
movsb
xchg
pop
xor
mov
jp
adc
ffreep
aas
adc
mov
out
clc
sub
cs
fdivr
pop
lcall
push
out
ljmp
inc
xchg
test
mov
dec
out
jae
cwtl
fadds
test
jo
sub
push
movsb
xor
sbb
sub
les
jae
push
push
sub
mov
aas
movsb
jae
mov
gs
push
lods
pop
mov
jle
xchg
aas
xchg
ss
mov
leave
nop
sub
jne
sub
inc
scas
ljmp
out
in
sbb
int3
sub
mov
push
jne
or
fisubs
jns
jns
jge
xor
mov
or
push
and
jnp
mov
mov
clc
mov
jbe
jb
push
mov
dec
leave
arpl
cvttps2pi
outsb
jecxz
test
pop
mov
cmp
lret
sub
in
sbb
rorb
test
bswap
sbb
jno
scas
push
nop
sbb
addr16
jns
repz
je
push
movsb
cmp
mov
mov
adcl
jno
adc
dec
lods
hlt
ror
ljmp
in
movsb
xchg
add
sbb
lods
repnz
and
aam
js
fs
outsl
notb
shll
cmpsb
roll
xchg
das
add
scas
ljmp
lcall
jae
es
add
xchg
mov
mov
ficompl
mov
xlat
cld
scas
mov
jp
xchg
inc
cmpsb
or
push
cmp
adc
jno
push
adc
imul
xchg
mov
xchg
and
cltd
leave
pop
adc
mov
sub
in
xchg
rolb
push
push
jl
ffree
sub
and
lods
lock
shl
xor
sbb
jns
sub
xor
cld
jp
fwait
fs
inc
mov
xchg
stos
in
testl
test
inc
repz
mov
fildl
fldt
cmpsl
loopne
mov
jle
mov
sub
test
roll
hlt
xor
aaa
ret
add
lods
fwait
enter
add
cmp
sub
add
scas
mov
iret
rorb
xor
mov
cltd
lods
sub
or
mov
popf
sbbb
sbb
mov
lock
add
cmp
fisubrs
sti
mov
mov
mov
dec
or
mov
ljmp
ret
rclb
add
push
ds
jno
lea
and
and
cmp
push
out
xorb
inc
mov
aam
inc
add
fiadds
add
mov
pop
fcomps
mov
aad
mov
or
add
cmp
jecxz
push
ds
push
inc
lea
roll
fsubl
xor
jmp
pop
mov
mov
gs
aad
dec
sub
jg
ret
mov
mov
call
xor
push
icebp
js
dec
cmp
mov
dec
cmpb
pop
pop
mov
pop
push
sub
add
call
dec
out
push
loope
mov
inc
dec
fisubrs
sub
mov
pop
loope
lods
sbb
mov
jb
adc
xchg
andb
outsb
js
movsb
out
push
sub
mov
movb
or
std
fs
mov
aad
jb
cmp
inc
xchg
jecxz
sbb
sub
push
sub
inc
mov
or
xchg
pop
or
in
cmp
pop
and
cltd
cmp
mov
test
mov
je
imul
mov
mov
imulb
adc
sbb
cmp
and
lcall
jg
sti
adc
fwait
sbb
ds
xor
lods
mov
loopne
adc
ret
push
loope
adc
sub
lret
insb
popf
out
mov
test
into
or
push
xor
out
fbstp
mov
rcrb
aam
ret
pop
jno
dec
loope,pt
sti
jbe
add
and
lods
mov
repnz
xchg
loope
cmc
out
xor
ret
jg
adc
lea
das
out
dec
in
loope
pop
xchg
movsl
pop
lahf
mov
in
add
outsl
setae
pop
movsb
jbe
or
inc
fistl
sti
push
dec
adc
inc
adc
je
test
dec
xorl
adc
mov
jp
popf
std
sbb
mov
sbb
out
inc
pop
xchg
rcr
mov
imul
fstps
pop
push
inc
stos
dec
push
std
adc
pop
mov
push
int3
ret
test
lea
pop
hlt
jge
pushf
mov
jmp
rcr
cmpsl
mov
cs
push
mov
cld
lods
lods
stc
add
or
faddl
mov
push
push
out
fisttpll
push
push
jbe
fs
or
inc
push
popa
in
aad
mov
fs
pop
imul
ljmp
lcall
push
hlt
adc
aam
nop
arpl
or
mov
out
push
adc
cld
add
mov
xchg
lods
push
lock
cli
lret
lods
xchg
jb
push
lock
cmp
in
jl
sbb
xchg
xor
aas
pop
and
neg
cmp
outsb
out
fxtract
push
jmp
test
aam
stos
repz
inc
jbe
cwtl
loop
mov
cwtl
fnstcw
iret
packuswb
cmovl
xor
ret
pop
shlb
dec
jge
inc
add
andl
cltd
fwait
and
cwtl
push
aam
push
lret
mov
add
fsubrs
movsb
scas
sbb
flds
xor
ret
mov
or
std
inc
stos
out
pop
dec
mov
push
lret
fs
imul
lret
mov
jmp
add
dec
fxam
inc
push
popa
inc
xlat
jle
mov
xchg
and
sub
in
cmp
adc
jae
adc
and
movsb
xor
cld
mov
fldlg2
call
into
std
out
notb
enter
dec
sub
pop
add
inc
mov
pop
jnp
inc
pushf
lods
and
nop
push
repz
push
das
sbb
xor
sarb
insl
dec
push
pushf
sub
outsl
xchg
xchg
mov
pop
mov
xchg
sti
sti
sbb
inc
adc
push
ret
push
cmpsb
inc
int3
pop
pop
mov
sub
adc
fs
imul
add
mov
push
add
into
outsb
xchg
in
lods
mov
xchg
les
dec
mov
inc
sub
hlt
in
insl
subb
pushl
stc
adc
sub
sti
pop
in
adc
sbb
pusha
mov
mov
pop
and
and
sahf
loop,pt
fsubp
mov
mov
inc
inc
lret
mov
pop
add
xchg
mov
dec
mov
imul
jno
fs
dec
ret
inc
and
call
mov
jl
stos
outsb
fnstcw
sbb
mov
in
sub
jle
pop
push
pop
fs
inc
jns
xor
inc
push
pushf
add
lds
add
out
xor
sbb
lods
pop
insb
popa
xorl
sarl
inc
inc
test
pop
insl
cs
lret
mov
fs
rclb
sti
je
ss
movsb
fisubrl
daa
lret
mov
adc
fistps
ljmp
or
andb
mov
scas
rcrl
lfs
out
addr16
pop
mov
push
add
out
pop
mov
xchg
jo
test
dec
insb
mov
mov
mov
imul
mov
pop
call
jge
in
pushf
sub
jge
inc
insl
data16
push
jo
mov
lcall
popf
pop
rcl
lret
lds
cmpsl
inc
outsb
inc
mov
outsl
insb
aaa
jns
pop
loop
sub
fiaddl
mov
ret
xlat
hlt
rolb
leave
mov
sti
and
cld
outsl
jl
inc
xor
stos
push
dec
imul
sbb
aam
mov
add
jle
fs
mov
pop
fdivs
sahf
imul
movsb
adc
call
lret
repnz
or
fs
cmp
scas
sub
subb
dec
and
fdivr
cmp
outsl
in
sbb
sub
and
pushf
add
xchg
imul
fucomi
push
fwait
mov
ret
cmp
movsb
mov
sbb
ss
sub
xor
or
lods
pushf
cli
push
jp
inc
mov
inc
xchg
fsubs
cmpsb
lds
rcl
or
fbld
movsb
add
sbb
pop
or
lods
push
lret
sub
adc
inc
fdivrp
jg
mov
jno
movsb
xlat
pop
jmp
adc
and
inc
insl
and
mov
stos
hlt
inc
ljmp
pop
fstps
mov
enter
pop
xor
push
imul
mov
inc
adc
jmp
test
scas
ljmp
stos
xor
scas
lret
xchg
jmp
add
xchg
ss
mov
and
sub
sub
jo,pn
dec
fwait
push
fs
sub
pop
pop
push
pop
into
pop
fidivl
cmpsb
sub
call
rcrb
and
clc
mov
push
pop
arpl
mov
addr16
ss
loope
out
jbe
add
mov
push
inc
pop
shlb
mov
in
dec
sbb
add
outsb
jmp
incl
fcmovnu
inc
pop
in
loopne
lock
add
add
ljmp
ror
fnstsw
aam
adc
test
sarl
jle
mov
aad
mov
cwtl
roll
mov
cwtl
mov
stos
lea
rcl
cmp
icebp
or
shr
sub
lcall
bound
out
jmp
xor
cmp
jne
cli
jnp
and
out
dec
push
cmp
xor
lods
and
test
add
push
mov
cld
ljmp
ss
addl
mov
xlat
jno
int
adc
jp
xorl
bound
cltd
arpl
daa
into
mov
cmp
ds
in
gs
pop
mov
movsl
scas
mov
shlb
add
cmpsl
jge
jne
xor
in
scas
sub
js
jnp
cltd
push
fildl
jns
jle
cwtl
sub
push
push
inc
adc
fmull
imul
xchg
jge
outsl
je
jp
push
push
fdivs
xor
stos
movsb
or
repz
sbb
lret
loop
shll
add
lods
inc
or
fs
lcall
fwait
cmp
inc
cmp
push
inc
mov
lcall
sbb
ficompl
aas
add
pop
or
sarb
lds
imul
and
sub
fs
into
mov
cwtl
xor
pop
pop
popa
sub
push
dec
inc
cs
mov
sti
stos
dec
mov
enter
loope
mov
or
outsb
lods
mov
es
ret
shll
cmp
dec
out
fs
sub
out
xchg
add
mov
xchg
pushfw
mov
leave
or
adc
mov
cmp
repnz
mov
inc
fstp
aad
xor
mov
loopne
movsb
push
andb
shlb
xchg
fwait
pop
je
mov
test
ss
mov
xchg
addr16
mov
sbb
in
and
xor
lret
sub
or
repz
sbb
fiaddl
cld
test
jb
mov
mov
decb
mov
push
jg
mov
outsb
mov
sub
imul
sbb
add
outsb
sub
scas
mov
xchg
jo
jl
fldcw
push
mov
add
ds
icebp
aas
and
movsl
mov
adc
mov
sbb
mov
add
pushf
ficomps
sti
mov
dec
outsl
push
shll
push
cli
pop
push
mov
iret
jmp
shrl
ret
cmc
jg
sbb
adc
and
out
fs
mov
dec
dec
shrl
xor
inc
mov
mov
jle
or
shrb
lret
mov
out
jge
ss
into
repnz
inc
fs
xchg
clc
sarb
and
imul
pushf
sbb
and
pop
insl
fwait
push
test
loop
mov
ljmp
imul
pop
mov
inc
mov
fcomps
lret
fldt
aas
dec
sub
xchg
cltd
mov
shlb
dec
mov
jp
inc
lods
insb
push
aas
and
flds
inc
test
test
jmp
dec
fs
or
xor
movsb
add
jmp
popa
push
test
popf
mov
pop
subb
fiaddl
scas
pop
inc
mov
sub
and
mov
je
adc
cmp
popa
pop
outsl
fs
xchg
rclb
push
stc
mov
adc
sub
popa
pop
dec
mov
ljmp
xchg
jg
jnp
mov
sbb
push
push
mov
shr
popf
jmp
imul
andb
pop
mov
test
hlt
dec
inc
lea
in
push
loopne
jnp
sbb
stos
xchg
mov
adc
pop
loope
jecxz
jp
inc
cmp
rorb
fs
test
sub
mov
push
inc
sti
cmp
cmp
rorb
rolb
xchg
idiv
out
jno
pop
jecxz
in
outsl
xchg
ljmp
int3
shll
loope
loopne
mov
insb
inc
in
adcl
loop
cli
mov
jnp
out
fistpl
test
fs
into
jbe
sub
mov
out
cmp
ds
push
add
push
dec
mov
pop
inc
mov
imul
push
mov
fcoms
in
jo
lods
and
sbb
popf
cltd
cli
xlat
aaa
fbld
jp
xchg
cmc
loopne
inc
add
fidivl
aam
incl
push
inc
mov
rep
aad
push
jle
stos
mov
inc
daa
push
je
movsb
ds
push
adc
mov
jle
mov
pusha
movsb
fnsave
test
cmp
dec
out
xchg
fs
lea
mov
sbb
testb
nop
jns
adc
xchg
leave
repz
outsl
mov
fs
iret
fcom
cltd
jp
fs
adc
std
adc
enter
shlb
mov
call
push
xor
nop
mov
enter
pop
pop
xchg
cmp
jns
xchg
dec
in
mov
jg
push
inc
push
orb
jmp
outsl
fs
push
xor
jecxz
aas
push
mov
mov
fimuls
faddl
jge
inc
fs
mov
adc
lods
push
mov
rolb
jb
je
pop
jae
fidivs
test
inc
ds
out
andb
ret
mov
push
sub
push
aad
leave
sarl
jp
sub
lock
jge
mov
or
jb
inc
fldenv
fucomi
lea
xchg
jmp
pusha
push
test
and
jbe
pushf
mov
stc
loopne
add
out
or
in
mov
mov
cs
out
jp
mov
sbb
aas
jp
fldl
jmp
push
jae
mov
inc
xchg
jg
mov
add
inc
xor
out
lods
adcb
movsb
test
out
mov
push
enter
int
fsts
xor
jb
loopne
lods
adc
inc
test
mov
or
mov
into
imul
and
adc
add
into
aad
xchg
shrl
movsb
xor
das
loopne
xor
adc
sbb
data16
push
stc
outsb
cmp
fs
cld
in
ljmp
insl
mov
jp
dec
pop
pushf
int
pop
add
repz
mov
or
pusha
addr16
aaa
jge
dec
inc
xchg
and
imul
sbb
pop
aam
jp
inc
addr16
pop
add
ds
aaa
xor
dec
mov
pop
repz
dec
out
cmp
mov
outsl
mov
mov
pop
push
dec
dec
ss
push
dec
and
lods
xor
mov
fnstcw
mov
in
pop
fucomp
push
push
data16
out
dec
aad
lret
jle
lret
sub
data16
jns
lret
push
jbe
push
add
xor
in
and
xorb
or
lods
lcall
inc
mov
xchg
subl
sbb
sbb
inc
adcl
pop
push
push
jo
dec
flds
jno
fbstp
fs
stc
aad
notl
pop
xchg
jl
fistl
into
jmp
sub
std
push
sbb
std
movsb
jb
push
jno
out
lcall
daa
ffreep
cmp
dec
dec
icebp
jo
bound
pop
add
mov
pop
xchg
dec
out
pusha
cmp
push
ja
xchg
cmp
pusha
cmp
push
fldt
imulb
sbb
adc
insl
sbb
das
mov
mov
ret
idivb
stos
lea
icebp
push
fs
pushf
sub
pop
in
scas
jae
cmpb
data16
dec
movsb
mov
incl
jle
adc
mov
sbb
push
lea
mov
xor
int3
inc
insl
cmp
push
inc
add
cld
clc
int3
sbb
int
test
sub
imul
aas
outsb
test
ljmp
imul
adc
fs
jns
test
shll
test
je
test
or
fwait
dec
and
xchg
lcall
shrb
mov
cmp
aam
shll
pop
adc
fs
jae
pop
ds
mov
leave
inc
pop
lret
lods
push
mov
jb
lods
call
out
jl
aas
sbb
dec
movsb
and
loopne
repz
or
adc
dec
subl
fcmovnbe
popa
or
push
jp
push
jmp
or
xchg
mov
out
lods
xor
pop
inc
into
push
mov
loop
ret
in
stos
mov
or
inc
rclb
xor
movsl
and
push
movsb
nop
fcoms
jae
push
mov
sub
hlt
sub
jnp
add
mov
cwtl
push
lods
jp
in
popa
push
mov
mov
jns
mov
call
mov
add
stos
inc
insl
cltd
and
shrb
sti
data16
lds
jl
sti
mov
fs
adc
repnz
gs
inc
mov
stc
sub
int
imul
mov
stc
xchg
leave
out
movsb
sub
and
add
jne
mov
pop
dec
sub
dec
push
add
mov
or
jo
in
push
push
adc
lea
push
hlt
in
test
aad
sbb
add
nop
into
imul
outsb
js
sbb
clc
into
jl
push
fimuls
stc
and
mov
out
decb
mov
or
mov
rolb
inc
into
xchg
sub
xchg
adc
add
jg
jne
sub
mov
inc
fs
ja
leave
xor
sub
or
mov
pop
add
into
jg
mov
jle
es
mov
scas
jnp
gs
into
dec
push
outsb
add
rolb
lahf
pop
pop
jb
sahf
xchg
fmull
cs
lcall
add
mov
fdivl
loope
out
insl
leave
out
dec
pop
movsl
fs
int
mov
sar
insl
xchg
dec
ss
cld
mov
mov
sub
mov
sub
mov
mov
fcompp
pop
sar
jb
xchg
sub
jo
mov
sarb
inc
xchg
push
jae
test
stos
xchg
sub
aam
shll
push
imul
mov
xchg
cmp
testl
xor
js
mov
outsb
mov
push
jb
dec
cltd
arpl
outsb
cli
push
push
rorb
xchg
and
cltd
or
cld
sarl
fwait
std
mov
adc
pop
insb
in
dec
je
stc
dec
and
adc
movsb
shrl
test
add
ja
mov
jmp
inc
jle
xchg
arpl
pop
cwtl
jp
aad
sbbl
pand
fildll
fildll
enter
loop
cmp
cmpsb
mov
dec
jp
outsb
dec
fs
pop
adc
lds
jb
sahf
fistpl
or
popa
test
cwtl
push
sub
test
insb
stc
out
push
shl
aaa
rorl
jb
xchg
outsl
cmp
in
dec
aaa
mov
hlt
jns
cltd
jbe
jne
mov
test
cltd
lret
sbb
into
add
xchg
jle
push
sub
ret
mov
lret
or
shrb
and
popf
lret
lret
sti
mov
mov
test
jmp
rcll
jge
jb
sbb
imul
fs
addr16
je
add
cmpl
add
inc
pop
imul
cmpsl
or
lea
add
inc
jle
in
mov
xor
js
xor
mov
dec
cltd
jnp
cmp
aam
adc
add
and
insb
data16
sub
push
push
cltd
push
popf
and
fldcw
mov
xor
pop
insl
js
iret
fs
outsb
fidivrs
fisubrs
cltd
ljmp
lahf
jge
popa
mov
push
icebp
lcall
stos
movsl
adc
adc
cmp
xchg
decb
arpl
lods
jle
pop
dec
imul
lea
adc
fbld
lods
pop
push
cmpsl
dec
or
mov
or
add
fisttpl
test
dec
out
stos
mov
add
sub
push
stos
mov
or
xor
push
adc
subl
push
leave
xchg
out
outsb
inc
std
mov
lock
imul
pop
cltd
adc
xchg
lock
jb
push
out
push
mov
adc
or
jp
jbe
jmp
jg
data16
rorl
jns
xchg
inc
inc
adc
sub
cltd
mov
call
mov
popf
xchg
xor
lcall
mov
movsb
jg
imul
mov
dec
jne
adc
sub
jge
jnp
mov
add
decb
mov
or
cwtl
rcrb
out
ljmp
inc
into
ss
inc
push
movsb
repz
jns
dec
in
xchg
leave
cmpsl
cmp
sbb
rcl
add
test
ljmp
pop
adc
mov
imul
jnp
outsb
outsl
mov
fmull
jnp
push
xchg
leave
dec
xchg
test
pop
sbbb
mov
out
push
fdivrs
add
mov
dec
cmp
adc
lret
shrb
mov
jle
or
scas
xchg
add
inc
push
push
fsubl
mov
fdivr
mov
sub
cmp
push
out
xor
dec
xchg
sbb
adc
js
les
and
imul
icebp
sub
fsubrl
jnp
push
ds
out
pop
pop
inc
inc
adc
pop
jb
dec
insb
movsb
out
sti
jmp
xlat
mov
scas
xor
mov
out
hlt
dec
jmp
daa
dec
sbb
inc
insb
aam
mov
dec
jg
lahf
js
dec
and
inc
or
cmp
popa
adc
sahf
or
adc
jno
xchg
cli
inc
jbe
test
cmc
mov
or
sarl
or
pop
push
jg
aaa
push
popa
pop
pop
int
add
and
cmpsb
push
mov
push
xchg
inc
movsb
into
dec
in
jp
jg
pushf
out
pop
pop
movb
cli
shlb
sub
mov
dec
into
jnp
es
loopne
xor
cld
sahf
adc
dec
aas
data16
jg
fisubl
stos
iret
pop
dec
jecxz
mov
adcl
inc
mov
scas
mov
pop
adc
fs
jb
test
push
iret
mov
lcall
cwtl
inc
insl
fs
dec
push
nop
or
pushf
cmp
out
int
xchg
in
xor
data16
mov
repz
int
sbb
mov
jl
movsb
js,pt
xchg
sbbl
inc
cmp
xchg
and
mov
add
test
sbb
movsb
jae
push
mov
fsubrp
lock
in
jmp
fs
xor
in
cs
fisubrl
xchg
sbb
push
addr16
jo
out
daa
cmp
mov
jmp
push
xchg
add
and
inc
xchg
in
pop
mov
out
idivb
or
inc
loope
jg
stos
out
jmp
sub
inc
mov
push
out
or
push
repz
mov
cmpb
xchg
jno
jae
dec
mov
and
xchg
mov
aad
mov
cld
and
fwait
pop
loope,pn
loopne
inc
pop
js
popa
mov
inc
loopne
mov
pushf
jmp
inc
jg
cmpsl
sub
movsb
xor
dec
mov
aas
xor
stos
orl
jae
cli
incb
lret
lahf
imul
cmpsl
sbb
mov
and
fisubrs
fdivrs
dec
push
dec
jg
daa
ss
into
adc
fs
and
data16
enter
into
aad
xlat
xchg
sbb
mul
dec
cmp
inc
int3
xor
mov
dec
stc
push
fs
sub
pushf
cmp
sub
out
mov
inc
and
mov
imul
sahf
scas
push
adc
mov
pop
mov
pop
iret
jecxz
push
add
outsl
mov
sbbb
and
lea
arpl
pop
pop
lock
jo
enter
inc
std
shl
adc
xchg
jle
jg
push
jns
push
stos
and
pushf
mov
ljmp
jmp
push
cs
cmpsl
stos
out
fildll
je
and
or
cwtl
jno
mov
outsb
sbb
in
mov
orb
loop
cmp
das
cmp
ljmp
outsl
add
hlt
sahf
xor
aam
pop
out
xchg
dec
pop
xor
sbb
jle
movsl
ss
out
movsb
xor
sbb
notl
mov
inc
sub
cld
inc
dec
or
cmpsl
push
mov
xor
arpl
pop
movsb
cli
push
xlat
jo
xor
add
fs
mov
decb
xchg
dec
pop
push
jbe
or
loope
cmp
xchg
imul
fdivs
inc
fwait
ja
xchg
mov
jmp
movsb
gs
dec
mov
in
dec
pop
and
sbb
cld
addr16
stos
mov
and
imul
clc
cltd
mov
stos
sbb
jo
cmp
decl
sub
out
fs
inc
mov
dec
imul
pushf
bound
call
mov
flds
jae
dec
mov
setle
rcr
into
ret
fs
inc
mov
ss
or
pop
mov
out
fs
dec
mov
xchg
jbe
js
outsl
in
and
cmp
inc
pop
jne
cmp
int3
dec
mov
add
dec
cmp
and
mov
xchg
dec
lds
insl
push
rorb
ljmp
adc
jg
mov
push
loope
mov
jb
pop
pop
pushf
adcl
ljmp
sahf
lock
push
sbb
fs
pop
inc
popf
and
inc
push
lea
pusha
lret
adc
mov
fucomip
iret
fs
push
jecxz
inc
xchg
in
mov
iret
push
mov
push
pop
out
xor
mov
aad
out
xchg
mov
out
les
dec
mov
shll
out
test
xor
imul
aad
mov
lea
sbb
dec
sarl
jae
scas
addr16
jbe
and
in
mov
popf
mov
mov
jns
jmp
insl
lods
jle
push
imulb
push
mov
cmp
enter
mov
stos
sahf
inc
cmpsb
lock
jne
icebp
mov
mov
inc
and
mov
mov
inc
icebp
int3
scas
adc
stos
repnz
push
mov
sbb
mov
scas
push
adc
subl
lret
adc
jae
into
cmpsb
jl
outsb
push
cmp
test
insb
popf
cltd
jo
jo
into
or
cld
mov
addr16
in
fnstsw
jl
xorl
in
xor
jp
imul
flds
mov
inc
pop
cmpb
fs
lds
add
jecxz
sub
push
cmpsb
clc
das
insl
bound
xchg
mov
out
xor
enter
dec
lret
cmp
dec
mov
xor
add
and
rcrb
cwtl
popa
out
pop
mov
dec
adc
jp
mov
and
aad
repz
xor
jmp
fdivr
xor
xchg
jae
push
aas
pop
out
mov
test
jns
mov
movsb
loope
pop
ret
inc
cs
xor
adc
and
scas
sub
mov
iret
mov
inc
movsb
roll
sbb
inc
push
fimuls
sarb
jp
xorb
std
pop
in
mov
std
fstl
jnp
push
cmpsb
cmc
and
push
imul
push
mov
pushf
jmp
insl
ss
pop
pushf
and
popf
movsb
or
stos
mov
loope
mov
out
xor
fs
sub
jle
js
lret
push
hlt
sbb
out
pop
cmp
add
cltd
rdtsc
popf
in
lret
popf
jo
jb
movsb
xor
pushf
ljmp
add
jg
lret
movsb
stos
pop
xchg
iret
cmp
sub
mov
cs
fildl
arpl
jp
loopne
outsl
sub
scas
pop
dec
rorb
mov
jnp
es
push
sbb
daa
rcr
stos
inc
clc
int
insb
int
imul
pop
dec
xchg
fs
add
in
dec
andb
lods
leave
test
sub
cmp
stos
fs
or
and
push
mov
outsb
filds
ja
jns
mov
adc
push
jno
repnz
ret
fcmovu
jle
fcmovu
cmp
sbb
pop
das
fs
in
arpl
inc
adc
sub
test
lcall
adc
aad
stc
ljmp
adc
outsb
xlat
sub
inc
sub
mov
xor
inc
into
mov
hlt
cltd
loop
mov
nop
leave
mov
jp
push
jbe
dec
cmp
xchg
lahf
clc
in
rclb
and
hlt
adc
mov
dec
dec
and
call
jb
ja
mov
mov
enter
inc
imul
sbb
mov
loop
cmp
shll
mov
add
loopw
pop
push
or
bound
adc
add
push
adcb
and
in
add
sbb
push
and
and
ljmp
lahf
rorb
hlt
mov
cli
xchg
inc
jle
cmp
dec
adc
push
jge
fs
mov
icebp
or
add
mov
outsb
test
sub
inc
daa
adc
mov
fnstenv
xchg
into
jne
sub
inc
outsb
xchg
sub
arpl
fldcw
sti
stos
sub
ss
fld
aam
mov
scas
mov
lcall
fs
dec
fwait
jp
popf
dec
call
jnp
sbb
mov
scas
mov
pop
push
cli
cmp
outsb
mov
fstl
xchg
pop
clc
mov
cmp
adc
adc
in
mov
mov
cld
sub
push
pop
out
inc
pop
in
push
mov
jg
fstl
or
mov
cmpsb
xchg
je
dec
xchg
mov
jb
ret
loope
jmp
mov
jecxz
inc
pop
aam
addr16
cmp
lret
mov
dec
mov
cmp
and
ds
je
xchg
jg
out
sbb
push
jmp
mov
pop
xlat
or
xor
sbb
icebp
in
stos
sahf
fdivrl
xchg
cmp
rorb
xchg
and
xchg
jb
sbb
jbe
dec
xor
dec
pop
add
sbb
dec
pushf
les
and
jge
stos
icebp
dec
jg
mulb
jle
xor
and
arpl
dec
push
lcall
mov
or
icebp
ljmp
cmp
pusha
cmpsb
mov
mov
dec
jle
das
xor
dec
movsb
ficomps
push
ljmp
xchg
jnp
xchg
ljmp
sub
in
fadd
mov
xchg
mov
movsb
stc
hlt
and
insb
je
or
xor
sbb
push
cs
lahf
xor
xchg
sbb
outsl
mov
fwait
add
data16
jb
mov
push
cmc
sub
pop
mov
inc
icebp
mov
lret
lret
add
das
andl
sub
movsl
xlat
insl
push
inc
aas
mov
adc
sahf
aad
mov
movsb
addb
pop
inc
push
pop
lret
push
loop
dec
or
inc
inc
mov
xchg
adc
fs
mov
ljmp
mov
ss
bound
repz
sub
shrb
xchg
push
imul
xor
sbb
xlat
das
insl
sbb
out
aam
and
loop
mov
fsts
dec
aam
xchg
jl
imul
fs
jge
jmp
call
inc
and
movsb
std
inc
push
in
add
dec
dec
add
dec
xchg
enter
sub
sub
daa
ret
inc
repnz
dec
jo
cs
insl
fs
sbbl
es
push
or
push
sub
fs
lods
dec
push
out
mov
rcr
push
scas
jmp
inc
loope
push
mov
lods
lahf
mov
mov
jmp
out
dec
shll
mov
ficompl
pop
cmpsb
or
cmp
shll
lock
std
ljmp
ror
repz
jnp
int
dec
jne
test
iret
sub
out
cltd
cwtl
and
inc
addr16
shrl
pop
jmp
sub
jl
dec
arpl
aad
fildll
push
icebp
cmpsb
jge
and
inc
mov
test
cli
mov
clc
or
adc
sbb
or
adc
add
andb
jle
fisttpll
and
int3
push
sahf
lds
and
cmp
loopne
imul
inc
adc
sub
out
fs
test
dec
and
jbe
cwtl
rclb
or
sub
adc
leave
pusha
inc
jno
out
fs
sti
cmpsb
lock
pushf
inc
mov
loope
into
adc
sub
mov
insl
movsb
jo
stos
cmc
jmp
stos
cld
mov
push
dec
pusha
aam
jg
mov
rorb
inc
fwait
jecxz
dec
push
add
inc
inc
cmp
adc
dec
add
sub
mov
insb
insl
xchg
mov
dec
inc
dec
movsb
mov
adc
out
push
ja
ljmp
add
lea
test
sub
jo
jp
cs
repnz
pop
mov
cmp
jle
lret
in
ds
imul
pop
lret
push
dec
sbb
mov
dec
cmp
pop
push
or
or
cmpsl
push
sahf
xchg
out
aas
sub
xchg
push
mov
ret
out
fs
inc
in
jle
js
jle
xchg
out
inc
push
inc
lcall
jl
test
inc
pop
unpckhps
shrb
loop
popf
lret
clc
shlb
push
mov
push
insb
stc
push
sub
xchg
hlt
mov
xchg
sub
sbb
stos
fdivs
push
xor
mov
push
ljmp
out
stos
push
aad
enter
jnp
add
xchg
test
mov
jp
xor
lock
push
in
hlt
mov
stos
sub
cmc
xchg
inc
orl
fnstsw
push
push
cvtps2pd
orl
ds
decb
mov
mov
cmc
push
arpl
out
fists
outsl
xchg
cli
movsb
adc
push
jno
dec
mov
stos
arpl
cmp
jl
das
out
push
push
nop
icebp
fcmovb
mov
mov
fistpll
mov
and
insb
push
pop
jnp
sbb
mov
xor
push
outsl
cmp
shlb
pop
es
cmp
lcall
push
scas
test
jbe
insb
pop
or
jg
lret
sbb
andl
add
jle
inc
pop
sub
in
test
lds
lcall
jne
inc
jecxz
xor
les
jle
ret
inc
das
aaa
or
push
jb
mov
add
fs
fisttps
mov
cli
clc
mov
mov
mov
sub
jbe
mov
inc
cld
test
jae
sub
dec
and
and
ds
dec
push
inc
add
test
sbb
jge
xchg
add
add
ss
and
mov
add
push
pop
out
pop
movsb
fwait
xchg
movsb
fstps
push
aam
jno
jle
sub
xchg
aaa
call
xor
sbb
inc
pushf
fs
pop
inc
js
mov
pop
out
sbb
lahf
addl
cmp
push
movsb
rep
ljmp
js
repnz
stos
movsb
cmpsb
test
push
call
cli
ror
push
pop
jmp
lcallw
pop
xor
xor
and
adc
jb
lods
xor
and
mov
xchg
outsl
mov
and
mov
xchg
subl
movsb
xor
je
pop
imul
iret
leave
test
into
pop
movsb
and
gs
fs
pop
int
sbb
rclb
ljmp
stos
test
or
test
inc
cmp
xchg
inc
enter
daa
add
sbb
jnp
mov
out
add
pop
je
cld
pusha
cwtl
stos
ss
fldl
sahf
inc
xlat
jecxz
push
jp
add
imul
jb
mov
xchg
test
psrad
and
movsb
ja
cli
jg
cmpsb
and
inc
dec
inc
imul
or
test
pushf
push
les
xorb
dec
pusha
xor
shll
cmc
sub
fsubrs
jmp
jp
pop
stc
sbb
decl
xchg
xchg
or
push
dec
sbb
xchg
sbb
in
movsb
repz
das
mov
out
sbb
fdivrl
jbe
dec
or
stos
mov
dec
jno
pop
sub
push
sub
sub
int3
push
push
xchg
add
add
aaa
cmp
and
xchg
mov
pop
dec
sbb
lea
mov
sub
jne
fcmovbe
imul
xor
out
inc
cltd
roll
jb
movsb
inc
sub
add
push
push
adc
dec
mov
test
insl
push
int
pop
xor
jb
leave
outsl
push
sub
xor
pop
adc
jb
add
rcrl
jnp
sbb
xchg
roll
pop
and
lods
push
sbb
rclb
or
imul
arpl
fnstenv
jle
mov
mov
inc
or
insl
pop
dec
shrl
in
pop
xor
loop
mov
arpl
data16
stos
mov
in
pop
cmc
out
cli
push
test
arpl
ror
in
fdivp
arpl
sbb
xchg
adc
mov
push
das
fdivrl
imulb
inc
fdivrs
jle
adc
sar
sub
jae
pop
jg
dec
cli
mov
mov
sub
subb
hlt
daa
dec
jl
lods
ret
out
xchg
xor
aas
pop
adc
push
nop
pop
stos
jmp
inc
cmc
test
add
inc
jecxz
mov
out
ret
pop
adc
fidivl
imul
sbb
in
inc
xor
mov
fs
xor
inc
in
push
movsl
pop
mov
xchg
xchg
jo
xlat
push
mov
jge
ljmp
rolb
insl
subb
test
push
ljmp
pop
lret
or
dec
rep
sub
sbb
sti
pop
lods
push
loopne
decl
dec
pop
cli
add
les
imul
imul
mov
fwait
js
jecxz
clc
movsb
aam
jno
pop
outsb
add
sti
int3
cmc
inc
dec
sbb
loop
das
mov
out
aad
rcr
fcomps
popf
ljmp
cmc
or
mov
int3
sub
or
dec
dec
jmp
ja
sahf
jb
outsl
xor
ja
and
cli
jns
adc
arpl
jne
mov
mov
hlt
xlat
lds
inc
in
hlt
sbb
into
inc
or
rorl
jp
cmp
adc
mov
sub
mov
jbe
fcompl
sahf
sahf
mov
lods
push
jo
push
cmp
sarl
aam
mov
inc
fs
mov
shr
jbe
pop
jmp
je
int3
jge
mov
cmp
mov
cmp
and
aaa
push
bound
push
ret
sub
and
mov
imul
scas
pop
icebp
fwait
pusha
or
mov
jmp
or
int3
aam
lods
mov
jo
and
xchg
js
in
mov
sbb
dec
pop
push
inc
insl
int
lods
cmpsl
pop
mov
int3
cmpsb
insb
in
cmp
insl
std
cmp
inc
movsb
xchg
mov
insb
fmul
out
and
pop
mov
ja
mov
jle
pop
adc
test
jmp
lret
push
ret
lahf
rcrb
mov
mov
mov
mov
in
lret
fs
or
xchg
leave
ljmp
sbb
leave
pop
in
loop
sub
inc
call
outsl
stos
rcr
or
sub
jae
mov
sbb
mov
aam
adc
mov
imul
addr16
std
xchg
inc
inc
das
fs
push
mov
cmpsb
add
cmc
cmc
imul
jo
jb
jl
icebp
push
int
jno
sub
into
fs
lock
cltd
inc
lcall
mov
and
sub
jb
xchg
lahf
mov
mov
js
mov
mov
sti
sub
repz
adc
mov
sub
pop
xchg
hlt
pop
jg
stc
insb
sarb
outsb
jmp
sub
jbe
in
pop
mov
jnp
dec
cs
decb
push
sub
mov
jbe
sbb
add
lcall
push
movsb
lea
popl
pop
mov
in
bnd
mov
sahf
in
add
lret
fimull
flds
insl
dec
pop
or
out
xor
movsb
push
xor
or
or
ds
shrb
imull
push
fs
lret
lods
xor
shlb
push
add
inc
inc
lcall
mov
lock
loope
dec
call
mov
lea
push
push
fs
into
fsubs
aas
orl
jns
loop
ja
std
loop
call
or
sahf
pop
int3
ficompl
cmp
ret
test
out
clc
test
push
xchg
fisubl
cmpsb
std
mov
or
es
push
lods
jo
adc
in
out
jae
mov
and
mov
dec
cltd
scas
mov
pushf
add
inc
sub
sub
or
stos
scas
cwtl
mov
and
lret
cmpsb
jg
xchg
jge
and
add
out
lcall
cld
sub
lret
in
arpl
xor
xchg
repnz
sbb
addr16
cmp
shlb
arpl
shrl
xchg
sub
pusha
xchg
dec
mov
and
fs
sub
shlb
xor
push
pop
sub
lcall
aad
lret
shl
nop
cmp
inc
adc
mov
jno
fs
fcomps
cmpsl
add
stos
insb
xchg
sub
mov
daa
cmp
pop
int
or
ja
dec
mov
outsl
repz
pop
jae
fsubrs
inc
sub
fstps
cli
sbb
insb
xlat
push
mov
das
xchg
stc
and
pop
xor
mov
xor
rorb
inc
push
jp
ret
fsub
aad
repz
push
adc
roll
or
mov
andb
cmpsl
push
mov
sub
imul
mov
xchg
pop
add
iret
fs
std
into
adc
dec
fld
mov
add
adc
mov
icebp
out
add
outsb
pop
cld
jle
sbb
sti
dec
test
outsb
incl
inc
mov
addr16
add
cmp
ret
insl
adc
aad
xor
stos
mov
dec
subb
fwait
movsb
mov
add
push
jo
in
addr16
dec
pop
push
shrl
jns
jb
sbb
mov
push
jbe
aam
scas
mov
mov
xchg
movsb
xchg
jno
mov
jp
popf
in
sub
sahf
into
ja
insl
xor
lahf
test
dec
js
mov
mov
xchg
les
xchg
adc
or
adc
iret
test
out
addr16
movsb
xchg
sub
dec
shrl
jge
pushf
enter
push
cmp
gs
xchg
adc
inc
out
aaa
int3
aas
pop
add
xchg
nop
add
cld
mov
ja
mov
sub
js
ljmp
inc
sbb
and
inc
xchg
mov
scas
rclb
or
movsb
stc
in
jle
jne
and
xor
fs
das
push
inc
cli
outsb
mov
lret
pop
fs
out
cmc
subb
cltd
movd
aas
dec
push
inc
and
and
add
sahf
testb
push
mov
push
xchg
mov
sbbl
movntps
dec
and
movsb
bound
test
repz
dec
outsl
prefetch
push
hlt
imull
jo
lret
mov
test
mov
xor
cs
into
lcall
jns
xchg
cmc
xchg
lret
repnz
adc
dec
xor
lret
ljmp
ror
movsb
jg
aad
dec
dec
jbe
gs
inc
cmp
xor
mov
fadds
sbb
add
imul
xchg
add
ss
or
adc
lcall
mov
adc
adc
shll
adc
or
repnz
mov
add
or
mov
sahf
xor
mov
outsb
jecxz
cmp
mov
repz
rclb
push
cld
jl
xchg
shll
dec
imul
pop
xor
or
inc
shlb
mov
inc
movsb
test
lods
stos
jne
insl
xor
cmp
pop
jmp
fs
imul
sbbl
push
aad
in
mov
cmpsl
xchg
sarb
ss
mov
and
ss
jge
out
dec
lds
sbb
leave
cwtl
shl
inc
aas
out
movsb
jns
ljmp
pop
call
aam
add
inc
mov
cmp
orb
push
ret
mov
out
xorl
daa
repz
in
cli
add
lahf
fcmovne
pop
cmp
inc
mov
or
jg
gs
int3
movsb
int
pop
stos
inc
iret
cs
not
cmp
loope
dec
fsts
lret
cs
stos
rcrl
sub
fs
outsb
xor
lret
sub
jne
scas
insl
pop
jp
inc
mov
mov
cltd
add
test
imul
int
push
sbb
shll
mov
inc
call
jbe
sbb
lds
inc
dec
fwait
ret
fdiv
movsb
incb
xor
imul
mov
xor
sub
ljmp
xor
sbb
inc
insb
mov
sti
mov
and
jl
outsb
in
jge
jb
sbb
mov
pop
add
xor
nop
xor
out
lods
orb
scas
js
sub
testb
insb
sub
sub
dec
adc
andl
mov
test
mov
adc
and
into
repnz
sbb
cmc
xchg
mov
nop
sar
add
stc
dec
movsb
lea
fucomip
jnp
lcall
pop
push
aam
xor
jb
xchg
pop
add
bound
and
dec
leave
xor
cld
in
push
loope
stc
data16
fs
xor
loope
xchg
ret
cmp
sub
in
arpl
fdivrs
mov
inc
addl
ljmp
jle
xor
inc
jnp
aaa
add
xchg
out
push
add
sbb
lea
popa
hlt
insb
sbb
addl
cmp
sub
sub
mov
push
repz
pop
dec
jmp
test
mov
jmp
movsl
sub
push
sbb
inc
inc
mov
shll
shr
and
das
ss
mov
adc
aam
sub
fs
sub
fwait
aas
in
sti
mov
js
fwait
add
pusha
inc
rolb
dec
xor
sub
xchg
outsl
daa
adc
mov
push
in
jp
jl
mov
push
into
repnz
jo
pop
dec
xchg
call
push
lea
add
lods
dec
imull
mov
iret
and
cmp
into
leave
cmpsl
bound
sub
fsub
push
sbb
sbb
cmc
jge
lods
jmp
sahf
mov
mov
mov
bound
cmpsl
in
mov
adc
pop
jg
cld
lods
lods
lock
push
in
sbb
cmpsl
test
das
ljmp
adc
xchg
mov
dec
xor
cwtl
xor
jbe
jp
movsl
hlt
inc
xchg
mov
mov
inc
fwait
push
push
roll
fs
mov
mov
insl
in
jecxz
jle
sub
jo
mov
movsb
xchg
call
or
out
cmp
mov
push
jo
mov
test
cmpsl
mov
sub
pop
rorb
lods
or
adcl
int
sub
and
and
ds
repnz
adc
mov
push
mov
test
mov
fs
xchg
adc
dec
das
cmpsl
aam
inc
mov
pushf
inc
in
in
movsb
movsl
push
adc
rorl
sbb
dec
cmpsl
jb
adc
and
pushf
inc
enter
inc
jae
je
cwtl
fmull
cmpsl
jb
push
lods
xchg
movsb
push
popa
xchg
mov
imul
lret
mov
adc
nop
insb
jle
outsl
pause
out
loop
inc
les
dec
arpl
mov
adc
repz
into
mov
pop
pop
jae
or
jmp
fs
xchg
dec
push
jno
add
cmp
xor
xchg
jnp
cli
inc
dec
lret
mov
orl
jbe
aam
jnp
pop
movsb
loopne
xchg
out
pop
into
jmp
mov
or
mov
jbe
or
mov
xor
insb
test
fstpt
dec
scas
bound
popf
testb
lret
es
movsb
je
mov
aam
pushl
arpl
xchg
lods
clc
mov
fimuls
pop
imul
cmp
jo
push
push
push
or
mov
sahf
sbb
sub
pop
push
or
cmp
mov
or
sub
loop
and
out
xchg
cmp
mov
jno
cmp
jecxz
out
fldenv
xor
push
cmp
arpl
jns
sbb
push
jae
enter
cli
jno
js
stos
fisubrs
push
hlt
push
mov
aaa
sbb
pop
sahf
arpl
test
in
and
insl
mov
sub
ja
dec
sub
into
jp
jae
hlt
xor
fsts
ficomps
or
push
or
imul
add
js
lods
idivl
jae
pop
mov
mov
dec
inc
mov
rcll
push
in
outsb
mov
cmp
and
es
jg
pop
inc
add
sti
fs
inc
fsubrl
sti
dec
inc
or
mov
mov
cmp
pop
or
push
xchg
jecxz,pt
repnz
iret
lods
pushf
mov
mov
mov
mov
jp
cs
inc
lcall
movsb
jnp
adc
dec
add
insl
add
pushf
fimuls
inc
jno
push
loop
sub
ret
loopne
cmpsl
jp
fs
fildl
cltd
fisubl
mov
das
lret
in
or
lods
shrb
jne
rcrl
lea
lods
xor
jb
rolb
fists
data16
sub
xchg
cmp
repz
stos
ret
cmp
ficoml
adc
mov
and
pop
les
repz
das
jle
adc
fs
sub
xor
cli
out
test
push
addr16
mov
or
mov
jae
pop
add
sub
pop
mov
adc
rolb
mov
adc
xchg
and
pusha
call
int3
xchg
adc
fs
rcl
add
push
pop
out
leave
movsl
sbb
addb
decl
dec
aas
inc
sub
add
in
or
popf
mov
inc
sbb
dec
jl
pop
sub
pop
lahf
movsb
leave
add
or
mov
mov
sub
cltd
sbb
imul
sbb
rorl
sub
xchg
rcll
jbe
in
xor
into
sub
ss
movsl
mov
or
and
idivb
lret
lahf
dec
jmp
adc
inc
mov
mov
dec
rclb
rorb
into
out
pop
adc
add
pop
leave
add
es
add
add
mov
xor
cli
lods
mov
movsb
sbb
hlt
sbb
out
add
and
fstps
fs
in
cmc
shrb
leave
std
repnz
dec
data16
movsb
adc
jle
push
xlat
pop
out
inc
xor
out
sahf
nop
xchg
push
jmp
mov
mov
fldenv
roll
pop
mov
adc
bound
sbb
lret
dec
sub
sbb
imul
das
cltd
ljmp
mov
mov
mov
je
jne
lock
dec
sarb
lds
pop
mov
ljmp
and
inc
fcmovbe
mov
mov
or
int3
ljmp
cli
insb
push
sub
add
push
ret
repnz
inc
lods
nop
mov
or
xor
add
movsl
xlat
cmp
pop
jae
fidivrl
pusha
rorl
add
fldcw
mov
xor
mov
mov
push
mov
cmp
jl
out
push
neg
insb
add
inc
cmp
jle
inc
adc
in
push
lret
cmp
mov
xlat
imul
push
insb
lods
std
mov
jle
dec
fsubr
push
jmp
dec
mov
sti
push
add
jae
xor
jo
outsb
mov
inc
add
and
out
dec
xchg
aad
sub
and
out
das
push
jnp
out
jge
inc
ds
sbbl
xchg
add
dec
sahf
mov
and
cmpsl
cwtl
mov
stc
test
fsubs
imul
movsb
xchg
aas
add
insl
inc
sbb
mov
jmp
pop
scas
loop
jnp
jl
push
jp
cmpl
pop
add
or
sbb
sahf
xlat
xchg
inc
inc
mov
push
lcall
push
lret
fisubrs
gs
cmpsl
jb
outsl
movsb
scas
jno
xchg
rolb
sarb
mov
arpl
orl
loop
inc
repnz
fs
sbb
mov
push
cmp
cmp
jmp
cmpsb
mov
mov
mov
sub
insl
xchg
popl
fwait
cwtl
repnz
lahf
mov
popa
sti
xchg
xor
popa
dec
nop
cli
sub
dec
jp
repz
and
fs
xchg
inc
test
cli
scas
das
insb
dec
dec
mull
mov
cmp
jb
sbb
insl
addr16
lret
push
mov
inc
fldt
inc
inc
ljmp
jmp
push
imul
push
xchg
sub
cmpsb
stos
int
mov
cmp
jns
cmp
xchg
adcb
pop
jb
out
mov
push
jl
pop
out
lret
push
das
push
int
mov
sahf
mov
imul
jle
stos
push
scas
dec
arpl
sbb
lret
lret
inc
popa
xchg
clc
push
or
in
mov
movsb
sbb
push
fs
xor
and
xor
lods
imul
pop
add
or
outsb
incb
add
ss
stos
and
shlb
mov
js
inc
or
insb
test
mov
dec
movsb
xor
or
insb
mov
xor
pop
inc
inc
mov
dec
pop
movsb
call
xor
or
fildl
aaa
xor
pop
jge
nop
leave
test
outsl
sub
das
mov
int3
inc
out
fdivl
lea
inc
scas
or
lods
out
mov
or
movsb
repz
push
int3
sahf
imul
addr16
jne
mov
fisubrs
test
inc
adc
ljmp
mov
pop
loopne
inc
aam
nop
es
xchg
mov
lods
lds
xchg
mov
es
sti
or
mov
sub
add
insb
fsincos
test
sbb
aas
adcb
mov
xor
mov
mov
jp
and
dec
sahf
inc
jmp
bound
cs
call
xchg
mull
loopne
adc
adc
into
xor
test
test
dec
rorl
lcall
push
sub
jle
push
or
sub
xchg
roll
dec
mov
mov
fdivs
jg
stos
mov
cmp
popa
cs
sbb
cmpb
lock
cmp
lods
das
push
cltd
dec
cmp
inc
cmpsb
mov
rcll
daa
movsb
push
ret
rcrb
adc
in
add
popf
testb
movaps
ja
xchg
fiadds
xor
mov
sahf
mov
ljmp
and
orb
lods
pop
jo
ds
add
out
stos
add
aas
out
movsb
dec
xlat
or
xor
adc
fcompl
fisubl
mov
jge
push
movsl
in
sub
jecxz
jo
sahf
ret
icebp
push
mov
mov
inc
mov
pusha
pop
ret
fs
push
sbb
mov
or
cmp
cli
sbb
sahf
cwtl
inc
xor
adc
inc
nop
fcomi
cltd
inc
movsb
in
shlb
inc
sbb
orl
jcxz
lods
adc
js
out
jne
aam
test
push
xor
subb
fs
imul
adc
in
addr16
adc
bound
fs
pop
imul
je
je
jo
pop
fcoms
jns
mov
inc
out
pop
push
scas
sbb
out
mov
mov
xchg
or
cltd
js
mov
xchg
pop
popf
sbb
lea
jns
mov
fs
xchg
into
ja
stos
sub
mov
test
jb
hlt
out
add
bnd
enter
loop
out
aam
es
into
lods
out
push
mov
jp
cmpsb
dec
lds
pushf
jl
sti
test
sbb
xchg
jmp
mov
movsl
ja
insb
nop
lret
add
mov
lcall
out
inc
fs
aam
xchg
inc
and
mov
out
jl
adc
xlat
lock
sub
mov
or
cmp
jp
mov
xchg
stos
and
aas
notb
movsb
mov
test
push
subb
push
mov
movsb
xchg
fistpll
cmp
imul
loope
fwait
std
flds
inc
sbb
cmpsb
imul
and
sbb
cltd
imul
subb
out
test
loop
add
aas
movsb
mov
sbb
ljmp
sub
repz
dec
sbb
mov
imul
dec
and
mov
ljmp
mov
jle
hlt
or
sub
push
mov
jbe
add
xchg
jle
out
rolb
rolb
fdivr
and
shl
sub
add
sub
fs
fidivrs
inc
xchg
cmp
and
jecxz
into
jmp
or
test
jbe
sahf
push
lret
fs
int
cs
sub
int
cmp
jp
sub
lcall
jnp
jmp
stos
or
push
scas
jae
aam
mov
lret
pop
pmullw
xchg
xchg
xor
dec
inc
jle
mov
cld
dec
pop
mov
stos
mov
cmpsl
mov
or
hlt
mov
jge
adc
push
stos
repnz
dec
aad
pop
or
andb
daa
dec
inc
fsubs
dec
xchg
pop
or
adc
in
push
mov
repz
sub
shrb
push
inc
pop
ss
imul
sub
fs
inc
mov
daa
mov
outsl
ret
push
add
push
movsb
add
xchg
enter
pop
jmp
add
mov
out
aad
je
roll
pop
jg
inc
xor
add
or
sub
xor
sub
mov
sub
pop
cmpsb
mov
dec
movsb
xadd
cmc
mov
add
dec
insb
jp
inc
popa
repz
lcall
clc
aam
and
andl
sub
fildll
dec
ljmp
fs
enter
pop
dec
adc
xor
ja
push
xor
popa
push
xchg
sub
jne
sub
cmp
pop
movsl
inc
pop
out
imul
nop
or
es
decl
sub
lret
out
shrb
xor
xchg
pop
hlt
outsl
dec
dec
mov
sub
les
mov
pop
stos
push
int
flds
lret
movsb
enter
jle
cs
sbb
and
pop
xor
aaa
lret
movsb
mov
test
xlat
cmp
dec
repz
pop
pushf
ljmp
andl
les
in
popa
daa
inc
int
push
pop
clc
jle
mov
jo
cmpl
sahf
icebp
pop
adc
mov
mov
fs
and
pop
mov
or
mov
lods
push
dec
jns
sahf
pop
pop
inc
inc
lcall
fiadds
jno
inc
out
cmpsl
mov
ss
out
insl
mov
bound
xchg
leave
mov
cltd
pmaxsw
cli
push
pusha
adc
jns
lods
adc
repz
mov
pop
dec
in
lahf
xchg
nop
pop
adc
mov
push
xchg
mov
imul
xchg
mov
mov
dec
mov
leave
int3
cmp
psubsw
sub
and
jg
jnp
sbb
mov
fwait
mov
inc
in
cmp
std
mov
xchg
jmp
lret
cmp
mov
pop
faddl
rcr
out
in
out
mov
xchg
fistpll
shrl
xor
outsl
push
jae
arpl
aad
sub
imul
jl
adc
fists
and
adc
and
push
test
cmp
xlat
xorb
out
ret
xchg
add
mov
insb
pop
gs
inc
in
mov
test
sub
jge
int3
lods
push
dec
fisubrs
js
mov
sti
adc
sub
lods
out
ljmp
ja
jg
adc
in
mov
shr
out
xchg
jle
adc
xchg
mov
adc
clc
je
mov
arpl
push
iret
sub
add
fcmovb
int3
stos
stos
fsubs
dec
push
jecxz
jp
mov
fcmove
pop
adc
sub
mov
fs
cmpsb
fnstenv
push
inc
mov
pop
push
or
js
add
lods
push
or
add
fidivrl
sub
in
into
les
sub
stos
pop
inc
inc
push
push
in
mov
or
add
outsb
jno
test
fs
cmpsl
sub
jp
mov
aaa
je
fisubs
ss
mov
js
push
mov
das
xor
inc
mov
inc
adc
fs
pop
inc
dec
mov
jno
ljmp
popa
push
cmp
popf
imul
fidivl
adc
inc
repz
or
push
aas
cwtl
pop
iret
sub
rorl
jmp
mov
pop
data16
cmp
fimull
xchg
imul
inc
add
iret
pop
sub
cltd
out
fdiv
arpl
dec
xlat
jae
add
stos
fwait
movsb
xchg
outsb
movsb
aas
das
push
pop
inc
jo
ljmp
les
fs
mov
sbb
outsb
sbb
leave
xor
and
cmc
or
pop
dec
pop
pop
rorl
aam
dec
imul
insb
fdivrl
lods
push
lea
lret
out
push
sbb
inc
fsubs
aas
mov
lret
push
cld
dec
sub
into
sub
add
call
push
or
loope,pn
push
push
movsb
inc
lret
pop
cli
sub
les
mov
mov
or
push
stos
imul
ja
xchg
loop
aad
and
insl
ds
bound
incl
mov
xchg
sbb
mov
arpl
sbb
or
fs
mov
inc
or
fcoms
dec
iret
aas
pushf
ljmp
cmp
mov
lahf
push
loop
insl
movsb
pushf
iret
inc
fs
imul
xchg
iret
and
jge
cli
fisubl
jg
or
adc
mov
mov
ja
and
jns
test
xchg
testl
loope
outsb
int
push
loop
in
jb
cmpsl
or
or
xchg
adc
lds
fmul
shrb
fwait
repz
xor
pop
mov
in
mov
sbb
test
inc
jno
mov
or
call
add
rorb
icebp
insl
call
push
leave
sub
cmp
jle
sahf
jl
jl
xchg
loope
ljmp
push
inc
cmpsb
dec
pop
push
in
push
cltd
test
add
lds
out
rcr
mov
fsubl
pop
lods
inc
or
aad
xor
cmpsb
push
out
insb
adc
xlat
pop
lds
inc
add
sbb
orb
adc
adc
mov
dec
in
movsb
cmpsb
jg
pop
add
mov
data16
stos
sub
jg
fs
daa
sub
push
push
aam
mov
cmp
dec
push
and
inc
fbstp
fwait
ja
out
jp
aaa
add
push
mov
mov
lods
and
mov
lret
xchg
or
mov
fisttps
leave
cwtl
xor
push
pushf
je
cli
js
mov
mov
jmp
xchg
clc
imul
pop
push
popa
push
jmp
cmp
lock
clc
adc
xchg
mov
dec
pop
sbb
sbb
test
int3
jg
xor
movsl
shlb
sub
fmull
popa
decb
mov
lock
in
dec
adc
pop
scas
dec
notb
orl
sbb
outsb
imul
push
out
inc
enter
jg
sbb
ficompl
mov
jl
xchg
cmp
dec
mov
lret
popf
push
push
jno
jo
xor
xchg
or
movsb
push
mov
dec
adc
sub
bound
loop
cmp
inc
mov
xor
jle
rclb
pop
test
or
cltd
and
rorl
inc
xchg
insb
fwait
addr16
pop
sub
jl
ja
pop
std
lds
push
push
aas
sbb
fisubrs
jle
mov
fs
sub
adc
mov
or
inc
mov
cmp
sbb
xor
xor
xor
mov
cmp
cmpsl
je
sub
adc
cltd
negb
cmp
cmp
imul
pop
xchg
dec
or
rolb
fs
out
sbb
rsm
loop
cs
push
movsb
dec
inc
mov
imul
or
cmc
fdivs
movsb
or
ljmp
xorb
in
dec
pop
inc
out
ss
cltd
mov
aas
dec
add
filds
adc
insb
jb
sub
pop
xor
in
ljmp
in
mov
mov
imulb
movsb
cmc
push
les
or
cwtl
sub
cmp
outsl
push
out
fisubl
psubsw
fdivl
fsubrs
shr
ljmp
jae
xor
sarl
xor
pop
or
hlt
loop
bound
adc
add
out
jmp
jg
push
aas
xchg
ss
add
jle
fistpll
imul
mov
adc
je
sub
mov
fmuls
pop
ret
mov
inc
push
jmp
pop
xchg
fs
sbb
and
fsub
xchg
cld
daa
add
sub
aas
sub
mov
jmp
sub
enter
adc
fstps
fwait
enter
inc
movb
mov
mov
inc
decb
je
push
adc
scas
xchg
fistpll
gs
popl
out
hlt
or
adc
cmp
loop
and
out
mov
stos
dec
test
das
insl
aad
push
fwait
loop
pop
pop
push
push
std
pop
iret
test
pop
and
or
adc
out
jl
movsl
movsb
js
add
ds
aad
outsb
or
test
movsb
hlt
sub
inc
push
test
dec
push
jo
add
rclb
je
fadd
ds
jnp
outsb
out
cwtl
adc
fwait
out
dec
shlb
test
jge
fisttps
xchg
fcoms
call
mov
in
popl
mov
xor
jl
negl
test
loope
inc
sub
loop
add
mov
dec
mov
push
lea
xchg
sbb
inc
fsts
not
mov
pmulhuw
adc
pop
stos
arpl
rcrl
pop
push
stc
or
mov
outsb
lock
lret
push
dec
jmp
cmpb
mov
mov
ret
dec
dec
inc
js
lods
int
movsb
or
rol
adc
mov
ds
xchg
mov
out
jp
sbb
dec
ss
add
and
dec
sbb
xor
jbe
out
adc
in
or
fcoml
and
sub
movsb
mov
nop
aad
mov
sbb
and
cmp
out
in
stos
cs
dec
jmp
shl
sub
lds
xchg
pushf
popf
jo
push
xorl
inc
add
push
push
int
dec
push
sbb
mov
dec
daa
and
inc
das
ficoms
scas
xchg
aam
orb
or
xchg
mov
pop
pop
xchg
dec
push
jae
sub
mov
icebp
pop
mov
inc
mov
movsb
jge
cltd
mov
das
sbb
out
pop
es
pop
rorb
outsl
dec
push
mov
scas
in
inc
jge
cld
jge
jo
push
cli
and
stos
or
xchg
js
adc
add
lods
sub
jnp
fs
adc
out
cmp
jmp
pop
adc
cmp
cmp
push
sldt
fnstcw
or
shrb
or
lret
pop
popf
das
movsb
fstps
imul
lea
lods
inc
stos
je
vmovdqu16
repnz
xor
lods
inc
pop
sar
cmp
or
imul
xor
inc
sub
test
cld
inc
lret
fisubs
setp
push
pop
jb
mov
push
inc
mov
ljmp
cli
pop
sub
xchg
outsb
mov
adc
push
fisubrl
lds
pop
dec
mov
and
jle
lods
cmp
push
inc
shrl
cltd
add
push
adc
add
fwait
movsb
mov
pop
imul
movsl
and
mov
fwait
mov
int
dec
pop
aas
aam
idivb
cli
push
push
movsb
inc
les
jg
xor
pop
sbb
cltd
and
movsb
ds
aad
lret
push
ja
mov
fildll
fldenv
fisubl
mov
lahf
out
std
imul
rcrb
repz
hlt
cmp
xor
mov
js
jle
adc
in
int
dec
test
dec
hlt
lret
imul
icebp
dec
movsb
xchg
xor
les
pop
test
repz
bound
pop
stos
ja
cmp
fsubs
clc
mov
and
sbb
and
jns
mov
mov
call
imul
fdivrl
fs
mov
leave
mov
movsb
mov
hlt
sarl
jecxz
pop
push
notb
mov
enter
aas
clc
dec
pop
sub
lcall
fisubrl
data16
cli
fidivl
xorl
mov
divl
mov
jecxz
rclb
or
lret
jbe
andb
shrb
outsb
scas
test
insb
cmp
incl
sbb
sub
pop
or
icebp
sbb
push
movsb
std
pop
dec
stos
inc
xchg
push
or
cltd
mov
sub
out
popf
into
jp
and
dec
insl
adc
outsl
and
inc
and
mov
and
xlat
push
pop
ds
pop
inc
fmuls
lods
mov
pop
je
in
cs
cs
fnstenv
bound
out
push
sbb
data16
or
jp
jne
nop
sbb
push
mov
adc
and
outsl
pop
lods
icebp
mov
insl
mov
inc
pop
insb
jae
mov
outsb
jp
icebp
adc
dec
popf
xorl
mov
mov
mov
lret
sub
inc
or
inc
popl
cli
and
pop
jge
fidivrs
push
jecxz
inc
sbb
outsl
or
cmp
mov
sbb
outsl
cmp
pop
sbb
ret
sbb
stos
and
sarl
data16
add
jnp
shll
jae
push
out
enter
pop
fbld
ds
movsb
bound
dec
outsl
incl
insl
cmp
and
movsb
xor
mov
outsb
inc
in
or
cmpsl
arpl
std
sub
xor
push
cmp
xchg
push
or
or
mov
fdiv
jecxz
lods
fdivs
push
lret
mov
mov
add
push
pop
int
ds
push
pushf
mov
or
jne
push
in
xor
xor
mov
nop
jge
repz
pop
jo
mov
and
mov
divb
aam
das
jg
pop
fnstsw
andb
xchg
push
jge
scas
bound
out
ja
pop
mov
sbb
xchg
fstps
or
out
aaa
pop
sbb
mov
jb
lahf
inc
mov
xor
movsb
pushf
dec
jp
xchg
call
cs
jge
mov
lret
into
fsubrp
roll
push
out
xchg
mov
xchg
xor
ror
iret
xchg
add
iret
pop
adc
aam
dec
dec
sbb
xor
mov
pop
add
repz
mov
pop
add
dec
in
xor
imul
xlat
push
insb
mov
inc
test
inc
xchg
jb
movsb
enter
fldcw
xor
fs
or
add
add
inc
ds
inc
test
mov
orb
inc
mov
cwtl
add
mov
int
xchg
lea
out
jecxz
out
jp
mov
or
sbb
outsl
mov
xchg
out
mov
mov
popa
xchg
dec
out
stos
push
or
adc
mov
sub
pushf
xchg
cmpsl
loopne
mov
pushf
orb
inc
aaa
pop
clc
or
mov
sbb
xor
mov
imul
mov
int
leave
lahf
cltd
in
inc
sbb
inc
lods
jbe
pop
lods
cld
mov
jmp
xchg
mov
shl
or
sub
movsb
inc
sbb
push
cmp
push
and
pop
adc
je
or
gs
sbb
and
enter
mov
mov
les
inc
mov
adc
or
jbe
mov
push
ljmp
adc
test
lahf
outsb
xor
lret
stos
mov
testb
mull
mov
into
stc
dec
sub
hlt
movsl
add
add
cmpsb
sbb
sbb
fs
add
mov
call
dec
das
pop
xor
test
loopne
scas
fstpt
xlat
push
mov
adc
jns
inc
std
jg
jl
xchg
leave
scas
movsb
outsl
xchg
and
sbb
movsb
out
das
sbbb
xor
mov
xchg
adcb
push
dec
cmc
adc
mov
push
les
sbb
jg
sbb
inc
mov
in
lods
push
and
out
insb
sbb
int3
jp
outsl
jg
lret
out
inc
push
cmp
insl
aaa
mov
xlat
fdiv
xchg
imul
mov
add
sub
sbb
mov
cmp
push
nop
jae
jge
aas
sar
ljmp
cs
sbb
hlt
or
add
lea
push
xchg
rclb
mov
xor
arpl
ss
ds
jbe
mov
jl
cwtl
addr16
pop
xor
jbe
imul
imul
rcll
imul
adc
call
dec
popf
mov
lret
sub
mov
jns
loope
add
das
inc
dec
jne
je
add
pop
out
inc
jbe
loope
test
repz
lahf
inc
cmpsl
inc
and
clc
dec
pop
shr
mov
mov
es
icebp
sub
xor
repz
pop
inc
ljmp
pop
or
outsb
fists
nop
and
jns,pn
pushf
ljmp
out
les
das
in
outsl
pop
dec
jp
std
fs
ds
pop
jnp
push
push
pushf
sub
es
pop
ss
xor
clc
sub
test
nop
jae
fdivrl
sbb
mov
cltd
inc
nop
stos
mov
aaa
or
mov
fidivs
fsubs
inc
sub
dec
rorl
pushf
cwtl
jbe
out
gs
mov
movsb
aam
sub
sub
addr16
pop
imul
ljmp
xchg
or
sub
mov
fsubs
dec
movsb
out
adc
mov
mov
sub
addr16
fwait
adc
mov
sbb
sub
mov
mov
xor
jne
cs
fcoms
push
sub
insl
rcrl
push
mov
gs
mov
ficomps
hlt
fdivs
test
sarb
out
pop
mov
ficoms
test
cmp
ljmp
xor
push
shrl
cmpsl
out
dec
add
out
add
imul
lcall
shrl
jo
sti
jp
adc
shrl
xor
jmp
sub
lods
gs
mov
cli
add
movsb
lods
or
es
mov
cmpb
jg
je
outsb
ret
js
das
sbb
add
comiss
adc
stos
jo
icebp
sbb
ljmp
andl
ja
sub
adc
jle
xlat
inc
lahf
out
in
mov
add
jbe
repz
aas
mov
jbe
fcoms
lcall
clc
lret
sbb
mov
imul
mov
aad
dec
fwait
addb
jecxz
or
icebp
inc
push
fwait
inc
xor
je
imul
or
outsl
popf
imul
insl
and
cmpsb
movsb
xor
out
ljmp
xchg
xchg
out
sub
out
fcomps
mov
fs
fsub
imul
mov
movsb
xchg
out
cmp
imul
mov
outsl
add
out
mov
sarl
sbb
adc
cli
movsb
mov
iret
and
in
mov
scas
jns
mov
xchg
pop
lea
xchg
mov
inc
pop
in
mov
or
movsb
jecxz
adc
outsl
cmpsb
ja
push
cmpsl
dec
cmpsb
dec
dec
movsb
mov
pop
inc
cltd
cmp
mov
inc
das
mov
ljmp
cmp
bound
movsb
mov
sub
cltd
mov
push
push
push
push
insb
inc
int
cmp
scas
xor
cmp
and
mov
shll
xor
dec
xchg
xchg
mov
sub
jo
subl
mov
arpl
test
mov
cld
jne
mov
lea
out
adc
sbb
push
pop
mov
add
xchg
add
push
push
push
sbb
pop
cmp
or
jp
ss
adc
shlb
pushf
pop
sti
imul
mov
xor
inc
mov
mov
jnp
movsb
jo,pt
aad
cwtl
in
outsl
add
dec
lods
pop
fnstcw
cmp
sub
mov
inc
jecxz
movsb
xor
lea
stos
insl
outsl
scas
cmpl
mov
add
push
and
cmpsb
call
rcrl
push
mov
inc
shll
cld
call
loopne
cwtl
lock
cld
sub
aas
jp
jmp
fs
inc
mov
jb
jnp
pop
and
push
shlb
mov
cltd
push
into
mov
out
clc
sub
xor
dec
cmp
cmpsb
out
cmpsl
fs
pop
call
loop
mov
stos
and
jbe
or
jmp
lret
pop
pop
sub
xchg
sub
jmp
adc
pusha
xor
icebp
cmpl
gs
jle
movsb
add
das
mov
in
hlt
std
imul
or
mov
sbb
mov
or
mov
test
sub
roll
push
cmp
inc
xlat
add
xor
jnp
jae
or
xor
mov
jnp
loopne
sub
sub
clc
sub
sbb
fldt
dec
dec
pop
mov
and
stc
pop
aam
sub
inc
cld
cwtl
leave
xchg
lret
movsb
rclb
add
stc
or
dec
pop
pop
jnp
popf
cmpsl
cmpsb
mov
inc
fcomi
jbe
sbb
cmpsl
jp
inc
loop
pusha
inc
xor
leave
mov
and
and
dec
add
mov
cmc
dec
kxorb
dec
stos
xchg
push
sbb
ljmp
shl
lds
or
mov
push
xor
ss
push
jl
push
out
fsubs
fs
xlat
scas
mov
bound
ds
daa
xor
mov
xlat
scas
pop
push
lcall
push
jae
and
repnz
or
inc
arpl
shll
call
mov
sbb
scas
insb
cmp
fsubp
inc
pop
cmpl
outsb
xchg
dec
xchg
jae
adcl
push
sbb
imul
ffreep
lret
dec
sbbb
mov
js
insl
outsl
adc
loopne
jg
inc
loope
out
test
movsb
cwtl
jmp
dec
cli
dec
pop
dec
dec
out
ret
inc
cmp
pusha
cmp
call
push
pop
les
sbb
movsb
add
test
adc
mov
rcr
sbb
lds
imul
je
dec
sub
fisttpl
pop
into
pop
es
cmc
jmp
popa
push
out
rclb
xchg
movsb
ss
mov
xchg
pop
lods
sub
jl
sbb
pusha
pop
mov
imul
lods
mov
in
popf
js
movsb
and
fnstenv
inc
xor
std
cld
push
pop
lods
ficomps
sbb
ljmp
add
xchg
lods
iret
bound
jp
pop
lcall
jmp
mov
mov
std
xlat
mov
in
dec
les
dec
js
mov
dec
data16
push
jno
jb
popa
or
cmp
mov
inc
cmp
add
xor
cld
in
lahf
inc
jno
jbe
adc
sub
movsl
gs
test
push
test
push
adc
sbb
fcom
cmc
jp
cli
xor
and
sbb
inc
scas
movsl
mov
mov
lret
loopne
call
stc
rorb
cs
jl
push
repz
iret
sbb
enter
imul
push
cmp
adcb
pop
loope
imul
in
add
cmpl
call
sbb
lods
or
addl
imul
mov
imull
loope
mov
jmp
inc
adc
cmp
mov
jmp
jns
xchg
je
xor
push
cltd
int
iret
push
into
ss
sbb
ljmp
and
inc
leave
dec
or
pop
popa
subb
scas
push
sub
jb
imul
movsb
push
jno
nop
cmp
sbb
sub
daa
vmovupd
call
nop
loopne
or
jle
mov
in
cmpsb
mov
adc
movsl
and
sbb
in
dec
lock
push
adc
inc
adc
mov
ljmp
lret
ss
stc
into
je
aad
xchg
test
out
dec
xchg
addr16
mov
pushf
insb
inc
add
mov
pop
jb
cmp
popf
push
insl
lcall
adc
sub
cmp
data16
adc
fcompl
aad
fcmovnu
and
cld
and
jecxz
in
and
divl
xchg
imul
pop
mov
sub
xor
inc
ljmp
das
imul
mov
loop
into
aad
pop
das
jbe
mov
jae
icebp
pop
pushf
push
popl
inc
inc
mov
xchg
cmp
repz
in
test
jo
push
jno
cltd
repnz
loop
mov
fs
xchg
lcall
mov
jo
mov
in
sti
or
xlat
call
xchg
add
pop
mov
inc
jbe
aaa
pop
fadds
cmpl
in
lcall
add
sbb
cmpsl
lods
push
and
push
outsb
jle
lods
jg
pusha
lds
stos
mov
lret
out
pop
cmp
negb
sti
aad
mov
jmp
xor
add
pop
mov
mov
sbb
cld
jge
pop
mov
or
clc
inc
inc
pop
test
push
es
add
aam
xchg
jecxz
cmp
or
fisubs
jo
pop
mov
mov
fidivrs
jg
and
dec
icebp
push
jp
hlt
inc
int
mov
std
xchg
cltd
in
flds
cmpsb
les
dec
jmp
sbb
out
add
test
test
insb
adc
mov
pop
movsb
sub
ret
adc
dec
dec
fdivs
cwtl
cli
ss
mov
jecxz
pop
pushf
rcll
mov
dec
rcll
sub
in
sbb
mov
in
mov
aad
or
lcall
fiadds
pusha
sub
ja
add
inc
orl
std
insw
jge
fimull
mov
fistpll
cli
jae
cmpsb
rcrl
mov
xchg
push
xchg
adc
dec
ja,pt
dec
dec
test
push
mov
call
dec
fnstcw
push
mov
dec
in
cmpsb
jmp
scas
and
subb
or
add
gs
repnz
jne
aam
es
or
jp
popf
jmp
loop
add
sbb
in
pop
out
lahf
mov
cltd
jle
lret
inc
sub
add
aaa
out
add
push
push
fimull
imul
hlt
movsb
dec
adc
aas
mov
xor
mov
arpl
test
lea
jb
out
cwtl
loopne
xchg
or
lods
mov
push
xchg
arpl
fs
and
lods
nop
push
sub
neg
sub
or
mov
lea
movsb
shlb
or
dec
adc
pushf
push
rolb
mov
or
imul
sbb
lods
in
sahf
jno
push
sub
gs
cmp
inc
jp
add
loop
jne
inc
add
dec
sub
lea
out
dec
or
pop
adc
das
pop
add
mov
push
push
push
inc
fidivl
mov
es
inc
add
insb
xchg
rorb
and
nop
inc
jmp
loop
xchg
cmp
add
add
popl
xchg
cmp
mov
jo
insb
dec
leave
gs
mov
xchg
xchg
lds
xchg
mov
outsb
push
fisttpll
push
inc
mov
push
xchg
pusha
or
pushf
push
jecxz
test
fsts
nop
ljmp
ffreep
inc
and
out
mov
push
data16
sbb
shl
inc
insb
lds
ljmp
add
add
cmpsb
fdivl
movsb
inc
xchg
mov
push
in
cld
loopne
dec
mov
inc
push
dec
jno
sbb
inc
mov
fldenv
dec
lods
mov
pop
sub
incb
xor
daa
cmp
nop
xor
out
movsb
dec
dec
jnp
and
fs
jb
stos
sbb
jmp
sti
les
out
pop
lods
and
push
in
jno
insl
test
loope
lcall
or
dec
imul
or
sbb
movsb
pop
insb
jecxz
or
push
outsl
dec
and
push
push
xchg
test
fs
stc
mov
cmp
push
xlat
call
imul
rorb
and
into
imul
jnp
fldt
arpl
or
fcoms
pop
mov
inc
shrb
arpl
cwtl
ja
inc
addb
adc
push
insb
aam
fisttpll
jmp
inc
pop
outsl
andps
mov
loope
in
cmc
jg
sub
add
into
mov
scas
mov
add
or
xor
ret
or
cmpsl
mov
pop
mov
rcrb
aam
rcll
add
dec
movsb
sub
push
dec
dec
adc
inc
and
sbb
out
fsubrs
lods
lret
pop
xchg
sub
jnp
add
out
fisubl
cwtl
jno
inc
insl
jne
orb
fdivrl
inc
in
ds
sbb
or
out
jb
mov
push
adc
cmp
test
add
sbb
mov
sbb
imul
inc
insl
lret
lret
jb
jbe
inc
and
cltd
jp
movsl
movsb
sbb
adc
xchg
xchg
cmp
cmpsl
mov
faddp
or
sub
movsb
lock
imul
adc
sub
scas
jb
pusha
ret
jnp
jbe
adc
aad
cmp
mov
inc
addl
fs
movsl
add
mov
dec
and
xlat
sbbb
sub
inc
imul
stc
push
imul
jp
adc
jle
test
outsb
inc
dec
lea
dec
inc
sub
fistpl
mov
rorb
shl
sbb
xchg
cwtl
push
lret
popf
mov
cli
adc
push
hlt
push
call
adc
cmc
adc
cmp
fwait
and
sahf
jg
mov
setg
out
inc
cs
sbb
push
lret
push
and
sub
mov
sub
inc
int3
scas
xchg
enter
jp
inc
push
test
sbb
sub
out
pop
jp
inc
int3
insl
cld
push
xor
pop
mov
rorl
fiaddl
pop
sahf
xchg
ja
scas
lcall
int3
dec
pusha
xchg
movsb
xor
sbbl
and
shlb
or
in
dec
add
lret
cmp
mov
jl
out
into
xchg
push
ret
mov
cmp
call
jb
lods
push
movsb
enter
je
xor
rol
cmp
sti
lret
pop
inc
lods
mov
pop
lods
std
test
xchg
cltd
and
mov
jnp
jge
es
inc
jecxz
inc
add
xor
dec
cmpsb
je
movsb
cmpsb
std
loop
mov
mov
test
in
iret
lea
movsl
arpl
mov
add
adc
cmp
pop
dec
mov
xor
inc
stos
lret
dec
data16
sub
lcall
xorb
inc
mov
push
cmp
xor
xchg
jbe
or
ds
or
pop
pop
mov
jnp
arpl
std
sbb
sub
jg
push
push
stc
imul
mov
lds
and
sbb
jo
imul
inc
jbe
add
pop
jae
dec
mov
pushf
xchg
xor
mov
stc
flds
mov
ljmp
push
aas
ss
mov
shlb
mov
inc
in
insl
sub
adc
imul
mov
paddsb
fidivs
jl
fcomps
or
pop
sbb
ret
pop
nop
push
xchg
movsl
stc
push
loop
dec
ret
dec
mov
dec
jnp
loop
add
xor
cld
test
mov
dec
das
mov
iret
cmc
stos
and
data16
inc
les
imul
sti
aam
repnz
cld
fdivrs
sbb
fs
loop
or
sub
divl
push
xchg
ja
shll
stos
inc
arpl
push
cmp
shl
jg
jge
stos
and
jbe
stc
in
push
dec
fimuls
imul
and
jecxz
jge
andb
mov
cmpsl
cmp
cmp
into
fwait
lods
mov
ja
stos
mov
jns
dec
mov
icebp
mov
icebp
movsb
inc
es
jns
rol
jge
mov
out
cltd
jle,pt
imul
xor
jb
ret
adc
cltd
addr16
pcmpeqb
imul
push
dec
xchg
jne
adc
mov
shll
inc
jle
xchg
mov
movsb
sub
in
inc
adc
mov
outsb
push
sub
call
lds
jp
out
add
popl
add
imul
or
lcall
pusha
inc
xchg
cmc
out
rclb
stos
dec
testb
sub
xchg
push
jle
movsb
mov
mov
test
inc
outsb
pop
lahf
fstl
bnd
add
imul
adcb
movsb
pop
test
insl
in
popf
adc
daa
pop
jp
xchg
std
xor
add
and
xchg
out
andl
int3
sbb
adc
push
push
jnp
data16
push
imul
scas
les
push
sub
loop
lods
lret
jg
inc
cmp
lret
add
jb
jne
fcmovu
int
pop
mov
fs
pop
pop
dec
fldl
xor
ds
pusha
mov
std
je
jge
insb
sti
dec
movsb
or
fwait
movsb
call
push
adc
popf
and
fs
xchg
out
sub
insl
mov
dec
bound
fistl
mov
jg
icebp
into
sub
fcoms
or
lea
adcb
test
je
sub
push
mov
pop
mov
inc
out
adc
std
dec
es
movsb
jbe
aad
shll
and
nop
cmp
fwait
push
lods
xchg
popa
addr16
sub
mov
aam
jl
dec
xchg
leave
hlt
in
jecxz
xchg
push
inc
lods
jno
sbb
fwait
jnp
iret
sbb
aaa
dec
lahf
pop
xlat
xor
jnp
sub
incl
mov
out
jge
cmp
inc
test
jns
stc
faddl
jnp
insb
sarb
jnp
lds
dec
insb
enter
jae
js
lea
out
jmp
jnp
or
mov
jns
dec
leave
mov
daa
aas
popf
adc
ficomps
into
aam
xor
push
repz
cld
lea
dec
inc
jp
mov
sub
daa
or
in
ja
pop
hlt
outsl
fdivrs
sbbl
fs
pushf
adc
stos
jb
adc
add
adc
xor
xchg
sahf
pop
lods
dec
imul
adc
adc
cwtl
mov
aaa
mov
cmp
cmp
mov
sarl
and
mov
sub
push
insl
bound
aam
pop
lcall
cltd
enter
cmp
test
sbb
test
mov
outsb
cmp
stos
add
pop
mov
jmp
lods
arpl
pop
or
fisubrs
mov
jbe
cmp
jo
and
push
xchg
pop
push
sbb
push
mov
mov
push
into
in
fisubl
inc
dec
lods
aaa
mov
and
jge
pop
or
ljmp
popa
xchg
imul
icebp
rcrl
mov
adc
mov
cs
adc
inc
or
lods
cmp
push
mov
and
js
rcrl
inc
test
dec
cltd
xchg
xor
dec
out
lods
or
dec
scas
dec
fistps
cmp
xchg
jno
lret
mov
jo
jno
push
fwait
imul
std
pushf
push
mov
sub
ret
lcall
mov
mov
xchg
test
iret
bound
aad
fdivl
or
jle
mov
ficomps
notl
cld
lods
stos
fisubl
lds
jb
or
mov
testb
aas
call
cmp
jb
mov
inc
popf
rcll
sub
cmpsl
fwait
inc
call
repz
sti
cld
push
add
in
xchg
leave
sti
cmpb
push
dec
aas
adc
stc
dec
jno
lahf
cmp
jo
mov
fcmovnb
jp
dec
inc
cmpsl
xchg
adc
pop
xor
or
inc
cmp
cmpb
lcall
or
xor
andb
getsec
lds
xchg
lcall
mov
inc
mov
adc
mov
rcll
and
xor
icebp
jp
push
add
dec
cs
popf
scas
ljmp
jg
je
pop
xor
fldt
inc
iret
fisubl
into
ljmp
loop
imul
cltd
je
sahf
fsub
sar
addr16
stos
or
leave
pop
mov
hlt
flds
fdivrs
mov
sub
cltd
out
dec
pop
js
shrb
out
outsl
sti
sahf
and
sbb
ficompl
jae
pushf
push
test
das
popf
jmp
aas
jg
out
mov
imul
decb
pop
mov
and
jl
sub
in
dec
inc
das
pop
dec
dec
mov
aad
cmp
test
pop
jmp
sub
cmp
js
xor
stos
clc
outsl
inc
jg
bound
push
cmc
push
lret
aad
xchg
pop
shrl
mov
pusha
sub
pop
jne
ds
int3
and
mov
inc
test
pusha
cld
push
rcrb
cmp
mov
and
sbb
or
sbb
fisttpl
movsb
pop
cld
rcl
mov
fisttpll
aaa
out
xor
addl
mov
leave
loope
imul
js
sbb
sbb
inc
xor
aam
pop
imul
movsb
aas
xchg
xchg
xchg
fs
lea
xor
cli
mov
dec
int
inc
sahf
mov
inc
scas
fs
insb
mov
cmp
and
subb
jmp
imul
insb
dec
and
lcall
cmpl
ja
aas
cwtl
test
sbb
in
or
fsubrs
cmp
leave
dec
pop
or
aam
jle
rclb
insl
mov
mov
xchg
fs
notb
stc
dec
or
push
test
inc
iret
ljmp
jp
cs
rcrl
mov
push
cmpsl
push
lea
rolb
cmp
or
mov
repz
ss
std
mov
jge
dec
insl
in
mov
data16
pop
lcall
insl
adc
adc
fmuls
int3
xlat
fs
daa
cmp
mov
data16
clc
and
push
mov
sub
pop
cld
mov
mov
jl
sbb
mov
inc
in
hlt
repnz
pop
jmp
xchg
loopne
adc
test
or
rol
stos
fisttpll
movsb
fwait
data16
xchg
cmp
mov
jecxz
addl
in
xchg
mov
push
mov
scas
ljmp
fistl
mov
push
add
adc
or
out
cwtl
xchg
imul
cmp
xor
xchg
ss
pop
sub
ret
sub
cli
enter
and
jle
negb
fstl
and
xchg
dec
pop
xchg
aaa
push
and
xlat
faddl
shrb
or
movsb
dec
pop
lcall
stos
jmp
pushf
mov
or
sub
lods
dec
adc
imul
gs
and
pop
ret
ljmp
add
add
das
notb
je
xorl
repnz
sub
pusha
push
iret
mov
sbb
orl
rolb
clc
in
std
dec
push
inc
mov
aad
xchg
jb
out
adc
bound
mov
cmp
stc
ds
fbstp
loope
push
mov
push
xchg
mov
xor
cmpsb
mov
into
out
push
sub
lret
push
jl
adc
lds
jae
adc
xor
inc
movsb
dec
add
in
fisubrl
push
jl
cmpsb
add
gs
sub
out
and
movsb
or
enter
xor
cli
pop
pop
or
decl
add
push
stos
jbe
rolb
iret
js
push
test
lret
inc
lock
call
sti
pop
mov
xchg
xor
and
mov
fs
mov
jnp
out
pushf
bound
inc
hlt
jns
addr16
push
dec
jle
cmp
aas
xlat
jae
test
sbb
inc
sbb
xchg
das
push
in
or
jg
cmp
aad
push
stos
ficompl
dec
out
adc
mov
lods
movsb
or
mov
inc
fsubrs
cli
xor
jecxz
dec
xchg
insl
cmp
lods
adc
push
inc
movsb
mov
pop
ja
jmp
jno
mov
icebp
push
aas
push
out
xchg
loop
jae
push
jp
andl
in
cltd
dec
mov
daa
outsl
push
fcoms
xor
addl
lods
mov
out
sub
lret
popa
movsl
mov
fcmovu
dec
dec
mov
sub
add
pop
xchg
lea
loop
mov
pushf
or
sbbl
fdivl
lret
or
arpl
sbb
xchg
arpl
ljmp
add
sbb
into
mull
adc
jge
imul
cltd
jge
fs
xchg
mov
fstpl
je
adc
out
xor
dec
pushf
push
xchg
rcrl
sub
into
int3
push
in
movsl
ljmp
or
fcomps
push
xchg
insb
into
mov
mov
jg
mov
xchg
rcrl
out
aad
xor
popf
xor
inc
outsl
lret
scas
imul
xchg
sub
mov
mov
outsb
in
movsb
lock
fmul
add
cmp
jg
repz
insb
mov
sbb
out
jns
push
mov
sub
and
mov
inc
push
jbe
lret
mov
lcall
inc
sub
pop
lahf
mov
cwtl
inc
sub
mov
les
jg
das
loopne
lcall
add
lea
dec
xlat
stos
ljmp
faddl
xor
je
cli
es
ja
cmp
out
lods
fs
push
adc
inc
mov
push
xchg
outsl
ljmp
sub
add
scas
jnp
xchg
sar
in
pop
insb
or
cmpsl
pop
pop
jmp
mov
mov
in
mov
dec
clc
pop
aam
pop
mov
push
cli
cltd
inc
test
or
xlat
sbb
push
inc
in
mov
xlat
jo
into
adc
subb
aas
pop
nop
mov
fcoml
add
test
stos
jo
leave
imul
sbb
pusha
mov
loopne
outsb
dec
movsb
es
aam
mov
inc
mov
lret
cmp
push
fdivrs
hlt
jmp
fsts
cmp
test
test
mov
jmp
mov
cmp
pusha
loopne
cmpsb
mov
ficompl
or
lods
sarb
loop
adc
imul
std
cld
cmp
jne
pop
jno
lods
mov
fcomi
insb
dec
es
jmp
lods
mov
imul
sub
sbb
insl
ljmp
psubd
outsb
cld
shrl
ror
xchg
and
dec
adc
shr
lahf
mov
out
lret
xchg
fsts
sbb
inc
arpl
sub
sbb
movsl
add
push
xchg
add
bound
cli
mov
jg
jno
sbb
test
js
inc
es
sbb
push
addr16
and
sbb
out
lret
imul
leave
popa
repz
push
ret
lcall
call
or
fs
cmc
mov
ds
test
in
jae
mov
fs
aad
in
out
leave
pop
adc
in
and
jb
sar
xor
fldt
in
jmp
xor
nop
xchg
lret
call
mov
pop
sbb
rcl
stos
movsb
hlt
mov
jmp
jne
enter
mov
sbb
lods
das
outsb
adc
arpl
test
pop
movsb
fstl
dec
pop
outsb
in
mov
mov
jns
mov
fildl
push
outsl
xchg
inc
sbb
cmp
frstor
icebp
sbb
ljmp
test
add
push
out
mov
xchg
pusha
sbb
jge
sbb
test
rolb
or
out
dec
sarb
mov
ret
ljmp
sarl
fnstcw
push
mov
imul
std
in
cmp
jno
arpl
mov
xor
std
pop
mov
fsubr
cli
mov
out
repz
dec
pop
sub
ljmp
shlb
xchg
push
movsl
movsl
jo
fldl
bound
pop
jecxz
mov
stos
mov
inc
test
shll
and
aam
add
dec
push
and
and
in
das
cltd
shlb
test
mov
repz
shrb
decl
stos
adc
pop
dec
movsb
jg
add
negl
push
jb
inc
repnz
push
lcall
pop
xchg
daa
push
adc
adc
mov
or
lret
add
xchg
add
mov
or
mov
sbb
push
mov
cmp
and
pushf
mov
inc
and
decl
pop
add
sbb
popf
outsl
popf
ss
and
push
shll
add
and
xchg
testl
imul
stos
iret
addr16
xor
or
pushf
mov
movsl
movsb
dec
sbb
repz
outsb
adc
adc
ret
xor
pop
and
pop
insb
mov
ljmp
jbe
std
xadd
jae
nop
pop
cmpb
popa
lret
outsb
outsb
neg
jl
sub
popf
cld
sbb
cmp
mov
dec
pop
les
cmp
jecxz
xchg
rorl
les
popa
sub
shlb
fsubrs
out
fcmovnu
arpl
fimull
push
repnz
cltd
clc
xor
mov
adc
pusha
loopne
stos
mov
adc
sub
ss
adc
sbb
push
ljmp
in
sub
jae
and
xlat
movsb
or
mov
sqrtps
nop
push
movsb
cmp
fadds
add
jmp
lock
arpl
mull
or
lret
stos
lret
out
push
mov
and
adc
cmp
mov
pop
popf
repz
std
add
adc
cmp
sbb
xchg
dec
sbb
lods
adc
mov
lret
sub
lret
gs
xor
test
sub
fsubrs
mov
lds
dec
xor
jno
pop
jmp
pop
movsb
or
jl
cwtl
push
jle
lods
movsb
js
cmp
sar
fadds
int
mov
sub
add
in
scas
int3
out
dec
std
adc
ss
fidivrs
mov
pop
sub
test
into
sub
rcrl
sar
inc
sub
idivb
add
mov
and
sbb
in
xchg
cmp
int
adc
xor
xor
idivl
bound
cmp
data16
bnd
or
xchg
jp
sahf
subb
push
hlt
sti
mov
dec
xchg
ljmp
mov
movsb
xchg
out
fiadds
mov
fdivrl
js
and
fbstp
sahf
push
fldcw
inc
jp
add
pop
cltd
jnp
mov
jg
ja
push
dec
add
cli
ret
clc
out
fs
aam
xchg
jle
int
jmp
fcompl
and
imul
gs
push
loop
xchg
sbb
test
jae
mov
dec
jnp
rcrb
sbb
mov
movsb
stos
mov
imul
adc
sbb
aam
sub
jge
sbb
in
aas
imul
push
jno
inc
cli
fcmovne
scas
lock
fstpl
mov
cmpl
mov
push
cltd
and
ror
and
pminub
es
inc
and
iret
fists
xor
add
test
dec
jb
stos
pop
out
movsb
adc
inc
xchg
stos
scas
fcoml
cmp
dec
lcall
fs
mov
or
dec
jmp
jns
xchg
add
int
lds
sbb
dec
sbb
out
dec
or
insb
mov
pop
sub
jmp
sarb
mov
dec
push
add
adc
mov
lret
loop
pop
bound
pop
arpl
cmc
movsb
fwait
add
pop
fadds
pushf
adc
sbb
loop
fdiv
jnp
inc
in
dec
repz
movsl
xchg
cmp
sub
cli
jbe
and
dec
rorb
and
and
inc
inc
imul
out
cmpsb
sub
push
ljmp
daa
sub
in
les
daa
pop
dec
mov
mov
loope
xlat
into
aam
mov
jns
loope
inc
jo
mov
loope
fimull
or
lds
mov
cltd
and
js
loopne
cmp
and
push
pushf
add
cltd
jmp
ret
shrl
stos
movsb
push
shll
negl
ret
arpl
adc
enter
scas
fs
mov
lods
test
jae
mov
adc
fbstp
mov
addr16
into
and
icebp
in
xchg
push
jecxz
jle
and
lods
pop
or
outsl
add
inc
add
bound
cmp
or
mov
xchg
mov
mov
repz
add
sarb
lahf
out
icebp
inc
movsb
movsl
jb
imul
fisubs
imull
sub
and
scas
jle
adc
dec
shl
fdivrs
popa
imul
push
lret
jo
test
mov
out
jbe
je
xchg
add
add
in
jl
inc
jmp
or
pop
outsl
lret
inc
jno
pop
shlb
int
and
pop
xchg
inc
fwait
hlt
mov
cmp
int3
xchg
xchg
jnp
das
or
add
push
in
inc
ljmp
lahf
inc
testb
inc
fcmovnu
sbb
xor
mov
outsb
loop
sub
or
and
daa
push
add
scas
mov
mov
inc
int3
call
mov
sub
jl
pop
fwait
movsb
test
jbe
incb
test
out
stos
adc
pop
mov
add
pop
ret
movsb
or
in
repnz
data16
ja
inc
sub
jbe
add
movsb
xor
scas
dec
sub
rcrb
xchg
pop
subb
fstps
fisubrl
sub
sub
dec
dec
dec
inc
arpl
jmp
dec
ljmp
mov
add
movsl
sahf
rcll
ds
pushf
jle
or
imul
adc
sti
js
mov
les
mov
push
movsb
rcrl
imul
or
mov
push
xchg
sti
leave
fcmove
pop
pop
adc
jecxz
imul
xchg
jmp
inc
xor
lret
insl
inc
loopne
add
add
dec
adc
inc
inc
sbb
xor
jmp
test
cld
dec
cmp
aam
jl
xchg
cmpsl
xor
je
movsb
jae
xchg
mov
daa
std
mov
add
jae
dec
dec
mov
push
leave
and
ljmp
adc
fwait
adc
xchg
mov
push
or
mov
insl
pop
inc
xor
cli
ljmp
lret
jbe
insb
cmpb
dec
push
aaa
cmp
insl
dec
jo
add
adcb
out
inc
add
imul
xor
test
loop
add
mov
push
jp
add
jmp
mov
enter
pop
mov
stos
xor
mov
add
mov
mov
pop
test
push
in
inc
mov
xchg
cs
xchg
idivl
dec
adc
push
mov
mov
add
mov
inc
cld
fsqrt
push
fmuls
pushf
jo
fsubs
push
incl
mov
xchg
mov
xchg
shl
xchg
sub
xor
sbb
das
jno
jae
inc
add
into
push
xchg
mov
loop
push
rorl
iret
fadd
cmpsl
mov
stc
mov
mov
add
lods
arpl
push
mov
adc
cmp
insb
test
es
out
inc
rclb
sub
xor
push
add
cmp
imul
inc
dec
lds
add
cltd
inc
loop
lds
movl
ficoms
pop
pop
cmc
mov
adc
push
shl
xchg
sarl
ret
inc
rclb
adc
adc
inc
gs
xchg
enter
cmp
push
fwait
cmp
outsb
cld
call
movsb
push
cld
addr16
inc
sbbb
mov
aam
into
insb
xchg
mov
or
dec
movsb
mov
xchg
fs
sbbl
mov
mov
enter
mov
pop
out
iret
mov
mov
adcl
mov
mov
movsb
pop
add
je
sbb
insb
ja
decb
mov
addr16
push
repnz
xchg
leave
cltd
imul
sub
popf
mov
ss
shr
add
xor
rorb
jne
and
lods
fs
fs
lea
xchg
xor
push
into
mov
sbbb
icebp
lahf
pop
cmc
jne
sbb
xor
adc
daa
pop
leave
mov
enter
ret
add
jp
push
push
inc
adc
cltd
out
ja
repnz
loop
imul
adc
mov
xchg
mov
mov
fiaddl
inc
in
xchg
mov
inc
mov
inc
cli
lods
xchg
mov
cmp
test
pop
inc
jg
lea
add
xchg
fwait
insb
sub
mov
fs
ret
es
int3
lret
aad
cli
fisttpl
cmp
loopne
add
cmc
data16
cli
sub
repz
decb
cld
inc
lods
mov
jl
mov
shlb
fildll
into
push
sti
lods
sbb
es
cmp
ljmp
notb
sub
mov
pop
fidivs
pop
movsb
ds
in
jg
and
out
adc
jg
int3
cmc
cmp
fdivl
push
mov
iret
inc
xor
rcll
lods
adc
sarl
clc
stc
mov
mov
addr16
inc
aas
imul
lods
movsb
mov
pop
cmc
loope
mov
ljmp
rclb
mov
xchg
loop
out
cli
or
imul
shrb
dec
adc
adc
pusha
cmp
sbb
fs
mov
add
loope
mov
sub
movsb
das
call
jo
sub
dec
sub
ja
mov
mov
out
das
jnp
sbb
int3
jmp
loop
cmp
add
cld
jns
je
fs
sub
cwtl
and
fiaddl
pop
jp
or
mov
jnp
aad
mov
fwait
outsl
inc
aad
push
lcall
sub
mov
ja
orl
mov
adcl
push
pop
test
jecxz
mov
es
jmp
mov
push
cltd
das
fisttpll
imul
std
dec
push
icebp
push
cmp
lods
sbb
push
xor
mov
cld
movsl
outsb
imul
mov
and
movsb
mov
pusha
mov
push
add
adc
arpl
xchg
sbb
fdivs
js
loopne
adc
in
jae
lret
stos
repz
jo
andb
lods
sti
jo
add
pinsrw
ljmp
sbb
mov
pop
addr16
adc
or
lahf
and
inc
fs
jb
or
or
pop
dec
out
ss
pop
movsb
mov
adc
jl
fwait
int3
xor
mov
push
jnp
negb
enter
mov
sbb
lods
dec
out
xor
mov
pop
add
lods
cmp
sub
xchg
jne
push
sar
and
imul
outsb
push
inc
popf
add
jns
jno
xor
pop
fdivs
shll
repz
mov
xchg
jbe
xchg
sbbl
add
mov
adc
call
xchg
shlb
mov
repz
xor
sbb
jo
fcomip
in
aaa
iret
fisttpl
add
lods
dec
pop
in
cmp
xor
jns
imul
cmc
cmpsl
adc
push
pushf
inc
push
dec
data16
sub
daa
test
mov
sbb
pusha
ss
jp
push
pop
test
jle
insb
inc
hlt
in
lock
aas
and
mov
mov
xchg
fnstenv
push
fs
sbb
ljmp
push
aas
jo
outsb
ret
push
mov
pop
repnz
hlt
mov
daa
aaa
jae
add
in
push
cwtl
dec
xchg
cmp
mov
leave
and
inc
test
mov
push
in
push
mov
popa
test
mov
dec
dec
or
aas
xchg
jb
sub
fs
fdivrs
loopne
call
push
orb
insb
sbb
repz
addl
jmp
dec
divps
dec
imul
fs
pop
pop
inc
sarb
rorb
adc
adc
sbb
pop
mov
push
or
pop
sbb
in
push
xchg
scas
push
mov
dec
lock
testl
push
jl
and
xlat
call
add
add
cwtl
loope
aam
out
and
clc
push
pop
mov
push
pushf
dec
mov
inc
lods
mov
movsl
mov
movsb
daa
in
push
aam
pop
mov
pop
jb
push
xchg
adcb
push
mov
stos
sbb
xchg
into
mov
inc
stos
xor
ds
cltd
data16
jbe
mov
and
add
loopne
sub
push
jmp
mov
dec
icebp
add
sub
arpl
pushf
cmp
xchg
enter
xor
shl
lret
test
addr16
ja
inc
sub
pmulhw
mov
inc
jle
or
sbb
mov
jl
push
pop
cwtl
xorl
or
data16
xor
xchg
out
das
lods
inc
sbb
jle
push
sub
fs
push
jmp
out
mov
sti
mov
scas
cltd
sar
insb
movsb
adc
mov
dec
pop
xchg
jle
push
cmp
in
push
hlt
inc
lcall
jbe
stos
mov
pushf
nop
cmc
push
das
loope
js
lret
fildl
push
mov
inc
xchg
xchg
imul
arpl
iret
push
lcall
lret
scas
rcrl
jbe
ficompl
sub
push
cld
pop
xor
les
mov
xchg
add
out
dec
aam
aaa
push
in
push
leave
push
std
sbb
inc
and
adc
mov
mov
bound
dec
aam
cltd
xchg
aas
jg
sahf
and
mov
shrb
ficoml
mov
lahf
jge
add
mov
movsb
push
leave
jmp
aas
dec
add
mov
fmul
adcb
sbb
adc
adc
xor
fs
pop
jno
inc
fnstenv
lea
push
das
pop
sub
pop
stos
sub
sbb
mov
dec
imul
add
mov
adc
sub
dec
jbe
js,pn
lea
or
xchg
jge
xchg
cwtl
jge
cmc
outsb
add
inc
pop
repnz
push
iret
dec
or
fs
xchg
xchg
es
aas
fwait
arpl
test
dec
dec
mov
dec
mov
mov
inc
mov
mov
mov
cltd
inc
inc
sbb
fs
add
std
mov
cltd
fldt
movd
xchg
mov
cld
sbb
jae
in
adc
in
test
cltd
fiadds
add
jnp
das
xor
aam
iret
jl
shl
adc
movsl
outsl
mov
mov
int
dec
loop
jecxz
push
testb
push
ror
mov
push
into
fs
arpl
dec
in
inc
add
xor
das
lcall
rolb
popa
adc
mov
iret
lret
inc
aaa
mov
add
fwait
dec
add
mov
in
pusha
movsl
lret
ret
mov
push
sub
xor
sub
jns
xchg
ss
sub
sbb
rorl
xorl
xor
cld
push
lods
sbb
xchg
xchg
orb
rcrl
jo
add
xor
ja
movsb
fstl
arpl
clc
lret
jg
push
sbb
or
fistl
je
out
out
movsb
divl
jno
adc
mov
imul
das
jb
aas
mov
inc
lods
push
test
adc
sarb
outsb
xchg
and
ja
and
xchg
xchg
leave
scas
pusha
bound
outsb
imul
mov
ljmp
arpl
ljmp
pop
inc
and
mov
inc
dec
lahf
xchg
cld
pop
jg
insb
test
testb
ret
and
jbe
out
loopne
xchg
push
js
stos
mov
mov
cli
push
add
pusha
daa
cmpsb
je
sub
fs
rorl
add
dec
ret
add
push
xor
faddp
pushf
sbbl
outsb
mov
fldenv
mov
cmpsl
je
out
std
pop
sub
add
in
sub
icebp
cmp
jp
mov
stos
clc
sahf
lret
xor
fsubs
jbe
cltd
lock
adc
dec
add
dec
frstor
stos
and
pop
cltd
inc
jo
test
lds
fcomps
pop
stos
xchg
dec
lcall
ret
cli
daa
addr16
jbe
cmp
ss
pusha
push
sub
sbb
cld
inc
sub
xor
xchg
push
xchg
test
ds
rol
fdivrs
mov
ja
inc
sub
sbb
aas
cld
imul
out
sarb
mov
les
into
dec
xchg
mov
fldcw
sub
jl
dec
cs
filds
cli
mov
shrl
fstpl
cmpsl
push
jbe
insl
xor
movsb
jmp
jle
aad
cld
mov
add
popa
aad
out
jl
push
dec
cmp
fs
mov
imul
pop
or
in
push
mov
cwtl
movsb
mov
push
into
cmp
test
out
aaa
jl
imul
jecxz
ljmp
xor
outsb
push
mov
lret
repnz
mov
jae
repnz
stos
cmpsl
and
jae
sub
add
add
xchg
xor
sbb
jmp
sti
jo
adc
mov
stc
stos
cmpsl
cmpsb
inc
lds
mov
gs
jle
pop
call
cs
mov
enter
movsb
test
mov
adc
addr16
jnp
je
or
dec
lcall
sbb
fsubrl
jl
out
add
mov
push
inc
push
je
out
out
mov
sub
lret
push
push
mov
out
les
dec
call
dec
sub
popa
and
insl
flds
fs
lods
lock
sub
cmp
inc
imul
fbld
test
jle
xchg
cmp
mov
mov
cmc
dec
outsl
dec
incb
out
fisttps
pop
movsb
cmp
outsb
mov
into
js
add
imul
lock
ret
mov
cmc
rcll
lods
mov
pop
sbb
jo
lods
add
xor
out
es
in
xchg
lret
pop
stos
in
add
jmp
fsubs
and
ret
sbb
in
ret
mov
mov
shll
inc
mov
inc
sbb
cmpsl
inc
aam
xor
sahf
call
xchg
add
movsb
lock
popa
in
xor
movsb
das
js
sarb
dec
xchg
jo
fistpl
mov
stos
pop
cld
pcmpeqb
les
xorb
jle
mov
sub
inc
pop
adc
in
fwait
dec
sbb
and
leave
xchg
cmp
mov
jge
jb
xchg
out
inc
imul
shll
setno
sub
mov
insl
movsb
int
inc
or
xor
inc
dec
inc
inc
push
add
adc
mov
xor
das
lea
mov
mov
fisubs
sub
std
jb
fs
xchg
xchg
fs
cmp
addr16
sub
lds
cwtl
movsb
gs
outsb
outsl
sub
cltd
pushf
shrb
sbb
inc
mov
divb
in
enter
out
sbb
jg
jno
mov
mov
add
cmp
insb
leave
out
std
xor
lret
mov
inc
jb
lods
out
cwtl
into
sub
dec
mov
std
or
fwait
push
pushf
push
sub
sbb
fidivrs
pop
js
dec
add
dec
dec
leave
cmpb
push
xor
or
pop
gs
insl
pusha
cwtl
jl
inc
cs
into
je
sub
push
pop
xchg
stos
outsl
cltd
out
inc
aas
dec
push
int3
mov
push
mov
adc
push
dec
cmpsb
dec
in
rcll
cmp
pop
lds
xchg
inc
mov
inc
push
popa
sub
into
das
xor
outsb
addl
mov
lret
or
push
gs
pop
push
call
pop
loope
dec
cmpb
out
movsb
adc
push
mov
lods
push
fnstenv
jb
inc
je
jge
subb
out
push
ja
sbb
hlt
sti
iret
in
out
inc
mov
cld
jb
fs
jge
jl
dec
add
data16
sub
inc
dec
add
push
and
mov
pop
movsb
add
and
and
scas
sub
push
cs
fcoms
cli
mov
pop
and
mov
inc
cltd
nop
ficompl
jmp
sbb
ljmp
fs
pop
jnp
mov
frstor
jmp
cmp
mov
mov
push
shl
lret
add
hlt
mov
stos
xor
sub
sbb
cmpsl
or
mov
loop
and
jle
push
lcall
js
push
push
mov
fs
xor
xlat
out
leave
aaa
rorb
in
movsb
pop
adc
cwtl
js
lods
jbe
inc
repnz
pop
adc
push
and
std
inc
ficompl
inc
cmp
aad
sub
and
movsb
mov
clc
push
xchg
inc
lods
cmpsl
nop
pop
xor
fwait
jle
pop
add
outsl
cmc
js
loopne
adc
pusha
es
movsb
dec
fs
je
les
sub
mov
pop
movsb
js
push
aas
cmp
cmc
push
popa
loope
test
out
sbb
call
sub
leave
mov
es
js
fidivrs
sub
jge
rep
or
insl
mov
fwait
fs
fsubs
sbb
add
incl
and
add
stos
in
push
jne
aaa
xor
outsl
hlt
xor
shrb
aad
ja
cmp
je
insb
stos
cs
mov
jge
inc
mov
push
add
or
mov
jge
clc
inc
aaa
scas
jl
push
cmc
xchg
fdivl
ret
movsb
mov
and
cmp
popf
roll
jo
mov
fsts
inc
fs
push
rcr
sbb
add
inc
call
xchg
inc
mov
orl
daa
jbe
fs
dec
cmp
movsb
mov
jp
out
inc
das
pusha
or
jecxz
mov
lret
lds
mov
into
dec
mov
xor
sbb
jae
mov
push
cld
pop
jb
jmp
inc
int3
js
sbb
lods
movsb
pop
pop
lcall
in
inc
cwtl
mov
popa
mov
fsubrl
popa
into
cli
ret
dec
mov
mov
add
outsl
test
stos
mov
dec
clc
adc
dec
insl
ffree
hlt
xchg
in
fwait
in
xchg
fs
lods
mov
lock
inc
dec
rorl
cld
rcrl
xchg
cmp
inc
or
je
push
mov
sub
cwtl
mov
pop
or
and
mov
xor
add
mov
cmp
sahf
pushf
push
popf
or
out
in
rcr
mov
mov
out
dec
fwait
pop
pop
or
cmp
les
int3
pop
dec
ss
sub
ret
xchg
incl
pop
lret
movsb
adc
mov
fstps
or
movsb
jns
daa
je
dec
cwtl
fwait
mov
in
mov
cld
aas
addr16
dec
sti
mov
mov
sar
xor
imul
imul
pop
mov
jo
jbe
or
pop
decl
lods
and
inc
jb
sbb
push
inc
rclb
movsb
mov
pop
jg
cmp
psrlw
jmp
sub
jnp
sub
es
es
cmp
add
mov
cmp
enter
into
fadd
jo
cs
aad
sub
rcl
das
pop
sub
xorl
adc
mov
jp
sub
pop
mov
jbe
inc
cmc
mov
jb
imulb
mov
push
lods
lods
dec
mov
jo
mov
add
mov
fwait
add
fnstenv
into
inc
xchg
pop
mov
and
inc
jmp
repnz
jecxz
js
pop
xchg
sbb
cmp
cmp
hlt
xor
xchg
pop
and
das
lret
jo
mov
sbb
movsb
mov
sti
pop
and
xor
clc
xchg
sbb
xor
insb
aad
or
fnsave
out
packssdw
pushf
aad
into
jb
data16
in
jae
cmc
loop
into
push
sbb
outsb
jp
cmp
pop
out
das
popf
dec
inc
xor
sub
loope
lret
push
xchg
pop
repnz
pop
lret
xchg
fidivs
cld
sbbl
push
inc
fistpl
cmp
jnp
orl
pop
cmp
iret
push
push
pop
movsb
ret
cmpsb
out
cwtl
mov
cmc
fistps
lret
inc
fs
add
inc
pop
into
xor
or
loope
shrb
clc
lea
and
jns
push
and
test
ljmp
jp
sbb
es
lods
jno
int3
lds
shll
mov
out
popf
adcl
push
sub
mov
dec
inc
in
mov
popf
inc
mov
addr16
out
mov
cs
insb
xchg
movsl
jmp
sbb
fildll
fsubrs
mov
inc
lock
jmp
fcomip
or
mov
out
mov
mov
out
ds
mov
movsb
lods
stos
lds
das
push
aas
aad
aad
mov
adc
mov
mov
ret
xchg
out
jnp
cltd
push
imul
shlb
mov
lret
mov
repnz
popl
mov
mov
xchg
ja
cmpsb
mov
rcl
mov
xor
frstor
ftst
int
fcompl
pop
jns
sub
out
insb
ss
mov
and
jbe
ret
or
pusha
or
mov
cmp
das
je
sbb
les
jge
test
mov
in
mov
pop
test
push
aaa
mov
mov
icebp
jl
sbb
add
pop
mov
xchg
cmp
shlb
inc
lods
cmp
mov
and
sbb
push
das
xchg
sub
mov
push
sbb
cmp
icebp
insb
mov
lds
jg
aaa
lcall
mov
mov
lods
shll
xor
push
fs
fidivs
popa
cs
inc
or
push
test
mov
inc
call
daa
mov
add
sub
pop
jge
mov
inc
fadds
dec
mov
lcall
repnz
insl
sub
xor
or
xlat
pop
movsb
jbe
outsl
pop
fdivs
aad
and
jmp
dec
movb
das
lods
mov
out
lods
jno
cmc
push
xchg
mov
push
push
out
xchg
sub
cwtl
das
xor
fildll
loope
aam
ss
cmp
out
add
cli
mov
mov
ljmp
pop
ffreep
outsl
push
ficoms
out
sub
inc
nop
movl
sbb
in
add
adc
and
jae
cmp
int3
jo
cmpsb
mov
or
out
loopne
and
jecxz
out
push
add
fisubs
sub
je
xor
sahf
xchg
pop
cmp
ja
mov
lds
out
add
js
rcr
lcall
lock
mov
mov
stos
jno
sbbl
jp
lods
daa
sbbl
pop
mov
cltd
daa
pop
das
js
inc
adc
subb
imul
xor
adc
arpl
stos
dec
inc
int
mov
pop
mov
andl
call
andb
notb
push
clc
ja
pop
test
int3
imul
add
stos
movsb
cmp
je
insl
stos
sbb
xchg
jl
adc
mov
jno
imul
push
je
out
in
sarb
mov
or
mov
sar
ret
ss
xchg
sar
jmp
loop
das
dec
jg
loop
pop
imul
das
movsb
xlat
jb
iret
lcall
ror
shll
popf
adcb
das
out
mov
pop
roll
add
lret
shr
fs
adc
add
call
ja
mov
in
push
lods
dec
inc
loope
in
loope
mov
dec
jae
push
insl
mov
sub
and
cmp
xor
add
ret
xchg
lret
mov
mov
lret
lahf
pop
dec
leave
outsb
repz
cltd
js
push
mov
adc
xor
mov
push
inc
mov
fiadds
outsb
xor
adc
or
fdivrs
data16
popf
xchg
mov
inc
mov
xchg
enter
div
cmpsb
in
pushf
adc
es
hlt
icebp
pop
out
cmpsl
decb
in
sub
inc
jmp
pop
or
ror
mov
sub
pop
sbbb
cmp
xchg
ret
dec
lea
add
jmp
xchg
je
das
adc
ret
test
xorl
inc
mov
in
add
jo
inc
int3
imul
lods
pushf
std
adc
imul
mov
adc
popf
jle
fisubs
sahf
repnz
xor
xor
mov
inc
fwait
imul
pop
lea
fdivrs
sub
sbb
enter
or
test
mov
out
sub
jo
test
ljmp
stos
arpl
iret
inc
inc
into
dec
imul
cmp
dec
rcl
sbb
setae
push
mov
or
imul
dec
inc
call
fistpll
insb
stos
jl
inc
std
push
ljmp
mov
lcall
mov
jl
sub
bound
cmp
cld
push
lret
sub
push
xorl
jae
inc
and
repnz
insl
add
lods
jno
and
mov
ret
mov
jmp
xchg
or
mov
mov
mov
and
push
adc
sbb
jo
inc
out
pop
loopne
cmp
dec
stc
jecxz
xor
stos
test
push
orb
or
and
dec
and
adc
flds
pop
pop
jmp
ljmp
jge
inc
cli
cld
jle
xor
sbb
aas
pop
stos
pop
inc
jle
pop
adc
and
push
push
mov
shll
clc
sbb
pop
adc
jo
fs
cld
cmp
repnz
jbe
loope
inc
je
sub
mov
fimull
add
out
decl
decl
jmp
repnz
sub
pop
into
cltd
leave
jle
jecxz
fdivp
push
lds
mov
out
mov
push
or
add
mov
and
call
mov
aad
push
and
push
ljmp
addr16
dec
jae
inc
stos
cs
or
out
repz
inc
and
push
jmp
enter
mov
mov
mov
mov
pop
sbb
mov
xchg
cmp
testb
ss
aam
daa
jno
add
repz
jmp
outsl
cmpsb
vpunpckhqdq
mov
inc
lods
xor
repz
pop
sbb
or
mov
ficoml
hlt
sbb
lret
and
inc
cmpl
mov
aaa
sahf
adc
cwtl
jl
mov
lahf
and
jne,pt
and
cltd
mov
shrl
lcall
xchg
dec
or
les
sub
popf
and
push
jp
jns
push
jmp
mov
push
mov
sub
sbb
mov
add
push
pop
xor
stos
and
outsb
cmp
and
pop
aad
mov
and
inc
mov
stos
mov
lcall
leave
dec
mov
mov
js
sbb
sub
stos
test
call
xor
stos
mov
addb
push
inc
stos
frstor
or
lods
movsb
call
imul
add
popl
je
dec
cltd
stos
popf
mov
sti
adc
mov
pop
pop
insb
add
mov
mov
subb
pop
xor
or
inc
xchg
sub
ja
pusha
sti
add
or
sub
sub
aam
push
pop
pop
jmp
xor
mov
inc
sub
es
test
test
or
sbb
lods
ja
movsb
sti
dec
mov
mov
fidivl
add
or
mov
aas
loope
lods
mov
push
aas
fwait
mov
sahf
pop
cmpb
imul
test
add
mov
add
add
rcrb
push
ret
and
mov
dec
inc
mov
dec
xchg
or
outsl
rcr
jno
movsb
into
push
enter
jb
testb
cli
mov
cmc
xor
xor
fldenv
jae
xor
xchg
add
or
push
adc
iret
jp
lcall
xor
out
adc
dec
mov
add
arpl
mov
inc
out
jg
test
les
std
pop
cmpsl
sbb
adc
cmpsl
jb
mov
dec
rclb
pop
imul
out
pop
faddl
repnz
outsb
inc
sub
jne
push
cltd
out
fwait
push
mov
imul
fbld
dec
fsts
jnp
cltd
adc
mov
cmp
js
add
cld
push
xchg
loope
test
lods
sub
out
xchg
std
inc
data16
jg
adc
add
ss
inc
pop
imul
and
lretw
sbb
sets
sub
push
mov
inc
push
push
cwtl
in
stos
inc
fildll
in
add
pop
mov
inc
jg
or
lcall
pop
ljmp
mov
mov
jo
fidivl
or
dec
loop
sbb
lods
movsb
jmp
fsubr
out
ret
mov
xorb
lcall
scas
movsb
and
das
sbb
or
vpsubw
out
push
fsts
mov
xchg
mov
push
xchg
cmp
inc
dec
cmp
xchg
pop
xor
xchg
clc
into
sub
sbb
inc
sbb
inc
popa
gs
ficomps
and
ss
and
stos
mov
xchg
loope
cmp
push
dec
aam
lret
adc
cs
outsb
xchg
out
addr16
repz
push
mov
sub
sti
test
fs
lahf
adc
sub
cwtl
clc
jle
adc
mov
stc
sbbb
add
out
lods
imul
push
in
jne
jo
pop
icebp
xor
adc
mov
inc
sbb
sbb
jge
dec
mulb
insb
clc
xlat
or
dec
cli
add
push
jmp
stos
stc
and
divb
outsl
lahf
pop
out
xlat
je
sbb
std
out
push
or
outsb
add
std
push
lret
sub
test
jp
dec
xor
in
gs
sbb
inc
push
loopne
push
popa
xor
movsb
repnz
lret
in
xchg
test
adc
pop
pop
xchg
mov
out
fxch
fucom
dec
push
adcl
imul
xor
mov
inc
pop
fmull
push
inc
ss
repnz
sbb
cmp
rcr
jae
cli
mov
jmp
sub
push
scas
dec
or
adc
and
out
imul
aad
pushf
les
popf
out
cltd
dec
insb
fcom
aas
imul
cmp
adc
mov
mov
dec
das
fs
mov
aad
push
push
inc
imul
cmp
jmp
jge
repz
jno
loop
xchg
xor
jne
daa
aas
dec
push
mov
repnz
mov
pusha
or
movsb
test
mov
sar
dec
mov
dec
leave
rcll
xor
cltd
or
pop
aam
insb
xor
pop
loop
mov
cmp
imul
test
stos
mov
pop
shlb
and
ds
inc
cmpsb
pop
push
call
dec
stos
jl
inc
push
mov
rclb
out
mov
out
push
psrld
ljmp
bound
dec
mov
in
out
jp
mov
mov
push
inc
mov
sub
ljmp
mov
xor
adc
out
bound
cli
scas
mov
ljmp
movsb
lret
stc
lahf
push
and
push
adc
into
cwtl
out
push
ret
lods
pop
into
outsb
push
pop
or
jnp
push
scas
fs
test
stos
outsb
movsb
out
pop
jge
cmp
xchg
lods
insb
mov
inc
sub
sub
inc
lahf
add
insb
xchg
test
add
mov
xchg
push
push
push
mov
mov
fiaddl
gs
xchg
pusha
add
filds
sarl
xchg
out
sbb
nop
ret
push
loope
add
cld
dec
mov
xor
dec
ljmp
jmp
xor
inc
sbb
inc
inc
jae
fbld
xor
cwtl
mov
xrelease
dec
imul
in
lds
jo
pop
les
adc
mov
cmc
das
inc
scas
cmp
sbb
lods
or
mov
mov
aam
mov
xchg
xchg
inc
outsb
outsl
fnsave
fildl
xlat
out
fs
jnp
sbb
fsts
dec
pop
mov
xor
inc
enter
sub
filds
sbb
lret
xchg
jecxz
adc
jp
adcb
loop
out
push
dec
lock
negl
dec
jg
aas
jo
jmp
sub
cmp
sbb
sub
pop
into
das
sbb
pop
xor
lcall
shll
cli
mov
push
or
and
cmpsl
loope
fs
loopne
mov
std
out
popa
mov
lods
fidivl
cmc
data16
ret
pop
jle
call
push
mov
mov
lds
lock
imul
or
fs
shl
pop
dec
movsb
repz
ja
pop
mov
or
pop
fwait
shl
xchg
cltd
cmpsb
adc
fldenv
jbe
ss
shll
out
and
inc
and
push
mov
mov
ljmp
sbb
movsb
int
sbb
inc
test
fs
dec
ffreep
dec
mov
pop
push
xchg
push
test
jo
and
lahf
adc
fcmovnb
xchg
push
mov
mov
dec
inc
bound
cmpsl
nop
and
stos
loop
outsl
loopne
mov
jnp
pop
ret
aam
or
inc
in
mov
lods
out
aas
stos
je
sub
test
loope
cld
push
mov
sbb
fnstenv
nop
xlat
adc
dec
xor
mov
int
mov
mov
pushf
or
dec
test
rorl
mov
inc
dec
pop
push
inc
fisttps
dec
xorl
fiadds
pop
rolb
sarb
mov
cmp
sbb
callw
pop
inc
dec
cli
inc
cmc
pop
adc
outsl
mov
jge
cmp
ja
ds
cltd
cli
hlt
mov
jns
inc
lods
pop
cld
outsl
sub
xor
cmp
push
and
jb
imul
pop
add
dec
cwtl
test
mov
xchg
jbe
push
imul
mov
and
ret
mov
cmp
and
fsts
aam
inc
adc
mov
xor
xor
xchg
ljmp
adcb
movsb
cmp
out
jge
das
fadd
mov
movsb
fs
xchg
mov
ret
dec
in
jo
inc
test
lods
add
jecxz
jno
fs
push
cs
inc
out
inc
imul
xchg
stc
dec
out
sbb
call
subb
pusha
or
xlat
adc
push
fstl
ret
rep
gs
and
lret
xchg
sbb
push
hlt
iret
pusha
jl
cmp
adc
mov
and
mov
jl
xchg
dec
imul
fs
call
adc
sbb
inc
imul
fistps
inc
and
xor
mov
adc
test
into
sbb
sbb
and
inc
jmp
push
clc
inc
cmp
pop
mov
push
mov
and
repz
xchg
mov
andl
sub
push
in
mov
cmp
xchg
cltd
nop
xor
leave
and
cmp
sbb
inc
fiadds
add
popf
and
test
into
bound
mov
ds
cmc
loope
loopne
cmpsl
jno
shrl
push
iret
sbb
les
xchg
push
clc
repnz
bound
rolb
sbb
test
idiv
cmp
pop
fprem1
mov
xchg
call
lods
ret
mov
pop
jns
sub
dec
fsts
pushf
outsl
jb
mov
adc
and
dec
pop
pop
or
testb
add
sub
lds
test
cwtl
int3
mov
inc
mov
cmp
rorl
cmp
std
pushf
cld
jno
jl
adc
out
cwtl
mov
sub
aad
gs
inc
int3
adc
test
sbb
pushf
cwtl
sub
orl
lea
mov
push
repz
mov
mov
sbb
dec
bound
mov
and
push
lea
mov
inc
outsb
sti
or
xor
iret
cli
push
mov
sarl
mov
lea
sub
pop
jb
and
mov
and
mov
jb
fs
mov
xchg
les
inc
or
fs
sub
sar
push
loope
dec
jnp
and
fdivs
not
jnp
push
aad
fs
and
movsl
pushf
into
pusha
xor
repnz
shr
mov
fwait
pop
inc
mov
xlat
xor
sub
jg
dec
cltd
sub
or
pop
pop
scas
out
dec
lock
cmp
inc
or
xchg
std
sub
add
push
ss
xor
cmp
stc
les
rorb
scas
fs
xchg
gs
movl
pop
xchg
sub
or
roll
test
dec
pop
bsf
jle
adc
sbb
cmp
into
jecxz
jp
fsubr
ret
or
call
cmp
flds
cmpsb
or
pop
mov
or
sub
in
and
loop
lods
movsb
dec
dec
dec
dec
lret
xor
out
cmp
fisttpll
mov
sub
push
sub
jecxz
iret
jecxz
insl
jne
sub
xor
repnz
leave
mov
mov
fcoms
js
xchg
cld
ljmp
shl
fisubrl
xor
icebp
inc
bound
pop
das
sarl
sub
shl
addb
mov
iret
dec
ja
sbb
mov
push
sbb
inc
loop
lea
mov
mov
mov
dec
pop
cmpsb
shrb
mov
subl
add
add
pop
mov
test
test
xchg
aas
in
jae
stos
mov
ret
jle
addps
dec
mulb
mov
or
sub
sbb
lods
in
jmp
mov
lods
pop
fs
filds
mov
repnz
lcall
jnp
loop
into
rolb
imul
pusha
dec
push
pop
jl
jmp
mov
pop
cmpb
push
out
movsb
jo
jbe
jge
dec
aas
push
sub
jle
jb
orb
xor
ss
push
fnstenv
arpl
mov
out
or
mov
pop
mov
dec
sub
stc
pop
cld
daa
pop
fisubl
fistpl
dec
sarl
add
jns
or
rorl
movsb
and
subb
setnp
push
dec
pmulhuw
mov
pop
dec
inc
adc
cld
ljmp
xchg
subb
mov
shrl
popf
out
movsb
cmp
jg
pop
data16
adc
sti
xchg
mov
pop
mov
mov
stos
fisubl
push
rorb
jp
jbe
adc
fdivl
push
jl
dec
outsb
cmp
inc
mov
mov
sbb
mov
daa
lods
shl
xor
cmp
das
push
mov
fnstsw
mov
pop
lea
int3
pop
orb
push
shlb
aaa
les
iret
mov
add
push
dec
mov
pop
rol
mov
repnz
add
mov
rorb
xorb
xchg
dec
push
push
int
call
and
fsubs
lret
imul
test
data16
inc
sub
push
push
cmp
fsubrs
xor
fildl
scas
lock
xchg
in
pop
fs
adc
arpl
ljmp
pop
fstpt
out
push
ss
imul
pop
mov
arpl
shl
je
add
adc
orl
sub
push
sub
mov
loop
imul
mov
ror
dec
daa
out
inc
or
mov
xchg
xor
es
mov
in
mov
cmp
push
mov
fadds
scas
mov
inc
rolb
shrb
pop
je
pop
sbb
sub
push
scas
sbb
shrb
cmc
ds
xchg
addl
mov
pop
pusha
pushf
insl
dec
mov
shlb
in
add
xchg
fwait
ror
outsb
push
dec
push
cli
mov
push
sbb
jecxz
sub
pop
xor
adc
inc
pop
notl
fsubs
addr16
mov
push
les
ljmp
aam
cltd
pop
mov
popf
sbb
test
push
shl
dec
arpl
push
dec
pop
stos
mov
fdivrl
pop
clc
stos
pop
in
stos
scas
stos
fbstp
jns
push
iret
sub
popa
lret
push
ljmp
fcomi
inc
push
jmp
pop
lret
push
call
jbe
push
inc
inc
jcxz
shll
push
push
rol
flds
push
mov
jb
lods
loopne
adc
dec
inc
cltd
ja
push
hlt
push
adc
and
push
inc
pop
push
outsl
in
push
popa
lcall
push
lea
push
sub
leave
and
dec
jge
clc
cmp
lds
iret
insl
aad
shlb
mov
bound
xchg
push
repnz
push
adc
stos
mov
int3
jmp
fdivrl
push
icebp
push
repz
jmp
xor
leave
cmp
mov
shlb
adc
dec
xchg
push
cmc
ja
and
fldt
outsl
xchg
in
scas
push
pushf
inc
push
push
mov
push
cmp
daa
push
lcall
addl
fsubs
fsts
int
xlat
push
jmp
push
mov
fmuls
inc
aaa
fs
cli
push
or
dec
push
hlt
fists
fnstsw
push
fsts
das
je
jmp
addr16
add
outsl
pop
mov
sub
adc
mov
int3
ljmp
insw
lret
stos
inc
push
fiadds
jae
out
in
stos
xorl
pop
into
adc
add
cltd
shrb
ss
les
in
push
stc
aaa
shll
cs
stos
int3
sub
outsb
mov
push
xor
add
push
cmp
mov
out
push
aas
aam
call
xor
push
inc
inc
dec
jns
lahf
call
stos
pop
dec
push
popl
sbb
out
cwtl
jecxz
lcall
or
dec
xorl
add
push
dec
in
add
xor
jl
icebp
xchg
dec
xchg
jmp
hlt
daa
and
push
arpl
cmc
imul
xchg
fistps
popa
and
popf
aaa
push
insl
ss
inc
stos
sbb
pop
das
push
jno
pusha
push
cs
mov
dec
loopne
clc
push
inc
adc
or
mov
sbb
push
fidivrl
xorb
jecxz
xor
jl
test
and
cli
or
adc
sbb
xchg
icebp
push
sar
into
push
stos
fsubrp
js
cmp
xchg
mov
push
fsubrl
jmp
mov
mov
add
aam
jne
cwtl
add
jecxz
dec
dec
xchg
aaa
mov
pop
fs
jle
pop
push
dec
pop
int
sub
xor
mov
mov
pop
mov
jmp
push
hlt
xor
cwtl
adc
sub
inc
test
sbb
mov
or
mov
movsb
mov
jns
fdivrs
shlb
dec
fwait
add
push
or
xchg
mov
in
es
push
pop
bound
add
xor
jmp
jp
fs
rclb
cmp
rolb
cmc
push
lods
fwait
insl
loop
cmp
int3
adc
lea
add
test
and
inc
std
add
mov
adc
stos
lea
or
jb
mov
fs
or
int3
outsb
dec
int3
jno
ret
das
in
imul
test
lret
or
adc
inc
jle
push
mov
aas
aam
add
shlb
mov
dec
movsb
sub
mov
mov
xor
adc
sbb
inc
inc
insb
fldenv
movsb
out
mov
notl
fs
aam
jmp
xchg
push
pushf
insl
jle
sbb
das
movsb
or
pop
out
out
icebp
or
pusha
mov
cmp
push
xchg
outsl
hlt
dec
daa
movsb
add
inc
push
push
mov
sbb
jle
leave
push
int3
cli
je
popa
mov
icebp
inc
icebp
pop
xchg
loop
pop
mov
sbb
lds
jmp
lea
or
inc
fidivl
fs
jl
sbb
pop
inc
rcrl
or
xor
mov
addb
lods
sbb
jle
dec
cwtl
and
out
xchg
sub
loop
lods
sbb
mov
xchg
test
or
add
jns
dec
adc
testb
mov
call
repz
rorl
movsb
insl
or
jle
xor
stc
daa
dec
jns
mov
and
rorl
push
daa
insl
scas
sbb
mov
sub
dec
fwait
int3
push
cld
icebp
out
popl
push
mov
shr
jo
pop
xlat
inc
cmpsl
xor
icebp
xchg
shll
hlt
sbb
je
ds
repz
dec
sbb
call
in
out
call
push
into
sub
repz
setb
xchg
lods
je
sar
add
dec
xor
cli
bound
pushf
gs
push
ss
gs
loopne
rclb
addl
loop
shll
imul
inc
add
jle
xor
stos
mul
dec
imul
rcrl
mov
jno
fs
xchg
jecxz
pop
add
data16
pop
pop
insb
inc
xor
nop
fsubl
sub
test
clc
pop
pop
dec
repz
fldcw
outsb
dec
imul
add
out
jecxz
aaa
in
movsb
fldt
in
mov
es
pop
cld
in
enter
pushf
mov
fcom
add
pop
ljmp
xor
adc
out
xchg
sarb
fnstenv
dec
cmpsl
or
push
inc
jb
out
sub
popf
js
jne
movsb
or
es
fs
adc
cltd
jae
cmpsl
ja
or
movsb
arpl
sub
mov
aas
je
cld
pop
out
movsb
arpl
rcl
cmp
pusha
sub
idiv
push
or
les
arpl
pop
aam
lock
cwtl
outsb
sbb
imul
test
mov
outsl
loope
test
repnz
xchg
or
insl
fbld
out
pop
gs
xor
xchg
xor
jns
hlt
xchg
mov
push
sbb
ja
mov
out
ficomps
sbb
mov
or
test
fsubrp
jmp
mov
lods
inc
mov
jae
mov
pop
sub
aas
xchg
cmpsb
dec
fs
rcrl
clc
mov
out
push
mov
adc
cld
push
mov
dec
test
xor
jno
inc
jo
lods
lret
xor
outsb
movsb
stos
and
adc
sub
add
ret
mov
dec
push
cmc
mov
ss
movsb
pop
jge
cmpsl
mov
xchg
adc
bnd
jae
dec
sbb
jg
int
and
lods
fildl
mov
and
or
sbb
sbb
jg
inc
jbe
rcrw
sbb
sbb
test
fidivs
out
jp
pop
repz
push
sub
inc
cmp
lret
loope
xor
jle
frstor
push
push
andl
pop
sub
add
sub
sbb
inc
mov
or
stos
jns
aad
cmpsb
and
out
ss
mov
in
dec
adc
js
jg
jae
xchg
rolb
and
or
outsb
sbb
nop
out
in
push
stos
mov
hlt
in
add
jg
sbb
adc
lea
jle
xchg
jmp
outsb
fs
jne
dec
mov
cmp
sbb
loop
xor
int
enter
jmp
out
cltd
out
bound
xchg
mov
dec
push
ja
sub
mov
push
stos
insl
call
fmull
scas
mov
dec
sbb
jecxz
sahf
stc
sti
mov
outsl
dec
loop
xor
or
aas
cwtl
ja
jno
lea
jl
out
data16
arpl
cmc
jg
es
mov
out
orl
rol
jecxz
push
loop
into
inc
dec
add
cmp
mov
jmp
jmp
adc
mov
aad
faddl
add
lods
sbb
movsb
dec
or
outsb
push
imulb
and
repnz
jnp
call
in
scas
add
fimull
and
jg
push
imull
dec
xchg
test
stos
jg
rcr
stos
dec
shlb
bound
ja
jge
jg
push
jbe
cmp
jne
jmp
pop
mov
push
in
pop
mov
cvtdq2pd
mov
pop
pop
dec
pop
cmpsb
cld
insl
push
xchg
aaa
es
lret
or
test
ss
adc
ss
fsubrs
out
in
jge
jb
clc
in
push
call
jp
shll
testb
fs
xor
sahf
stos
out
test
or
mov
rolb
fucomi
cmc
or
iret
es
or
fists
pop
mov
inc
cli
iret
push
push
imul
arpl
inc
out
addr16
dec
js
pushf
inc
xchg
mov
pop
lods
sbb
pop
and
or
das
movsb
loopne
jnp
push
data16
lret
inc
and
pop
inc
ds
xor
add
cli
out
jbe
rcrb
insl
xor
inc
pop
ret
lods
sbb
and
push
jle
push
jnp
filds
xchg
jge
jl
movsl
mov
shlb
pop
cmp
es
jecxz
sub
fwait
push
pop
hlt
nop
add
hlt
adc
fstpl
sbb
cmp
jle
fcompl
clc
xchg
cli
inc
loop
rcll
xchg
sti
in
rorb
in
pop
xchg
inc
insl
cli
xchg
inc
inc
cli
add
sbb
dec
cmp
lods
lods
pop
js
cld
imul
mov
mov
fistpl
mov
fs
lock
aam
test
jnp
movsb
test
fmul
bound
jecxz
jae
int3
in
mov
or
lret
jno
pusha
pop
mov
cmc
push
xor
mov
sbb
rorb
mov
push
or
fs
pop
cmp
pop
in
gs
sar
inc
cmp
ss
mov
pop
mov
testb
mov
movb
dec
orb
mov
xor
inc
jno
mov
ljmp
jno
enter
push
es
cltd
xor
sub
scas
into
arpl
xchg
jno
sbbb
loope
stos
sbb
imul
fs
sbb
xchg
pop
xchg
push
loop
mov
pop
mov
jae
xor
and
dec
push
outsl
sarb
dec
add
or
movsb
pop
xor
xor
out
push
lea
stos
mov
push
ljmp
jne
arpl
fisubrs
loopne
sbb
xchg
jecxz
jb
out
sbb
mov
jne
std
movsb
inc
add
cli
xor
in
leave
and
pop
inc
sbb
push
cmpsb
insw
data16
xor
movsb
bound
or
push
push
lret
xor
iret
pop
arpl
add
imul
inc
xor
orl
sub
aaa
movsb
jmp
jle
addl
inc
cmp
mov
test
arpl
imul
stc
fdivs
movsb
jae
push
dec
and
inc
stos
roll
sub
add
cltd
outsb
loopne
scas
add
les
insl
dec
aas
bound
test
and
and
dec
push
mov
js
inc
pop
xor
mov
mov
dec
mov
sbb
movsb
or
lret
push
xor
mov
inc
or
faddl
iret
cmp
dec
scas
dec
add
pop
test
mov
imul
or
imul
sbb
loop
dec
mov
cmp
pop
cmp
adc
mov
jns
push
fisubs
or
sar
in
out
push
pusha
add
js
shl
or
dec
push
jg
sbb
inc
stos
xchg
insb
cli
pusha
xchg
xchg
cmp
mov
pop
xchg
stos
and
mov
enter
out
scas
movsb
pop
mov
inc
or
loop
and
mov
test
ss
shlb
push
inc
pop
xchg
das
imul
into
jg
or
rcrb
mov
mov
lods
incl
pop
sub
in
or
imul
mov
insl
fwait
sub
pop
push
cmp
test
adc
arpl
sbb
arpl
sub
sub
pusha
fs
and
pop
flds
jmp
dec
push
and
cmp
in
mov
sub
pop
loop
adc
ljmp
push
xor
sub
call
ss
mov
xchg
popa
or
xor
in
mov
clc
cmp
icebp
lea
test
mov
loopne
fstpt
dec
ds
dec
stos
bnd
movsl
cmp
inc
or
dec
out
push
adc
mov
mov
fdivs
jb
clc
das
movsb
jb
movsb
insb
add
pop
addr16
add
lock
mov
xchg
cmp
inc
rclb
inc
adc
aas
xchg
test
mov
xchg
call
xor
mov
pop
jae
imul
test
jg
or
cltd
es
lcall
sbb
add
fidivrs
xchg
clc
popa
mull
jns
mov
ret
stos
inc
fs
js
test
xchg
pop
or
outsb
mov
mov
test
lock
and
lods
pop
dec
cmc
cltd
dec
jecxz
dec
jp
call
xchg
out
fucomp
icebp
mov
movsb
jo
jb
in
cli
mov
push
add
dec
mov
imul
into
push
dec
daa
cmp
jle
enter
outsb
arpl
movsb
add
mov
and
xchg
fnstcw
js
mov
jbe
mov
fs
lcall
xor
lret
imul
gs
orl
mov
scas
insb
out
hlt
out
or
imul
pop
mov
fwait
test
sub
lret
cld
xchg
mov
jo
insb
add
jne
inc
pop
aad
sbb
fadd
das
test
jl
outsb
ljmp
or
cltd
inc
in
testb
inc
ljmp
pushf
andl
sub
sub
bnd
inc
int3
fsubs
cld
stos
mov
cmc
jnp
or
jne
inc
inc
dec
lods
xchg
push
sub
pop
mov
movsb
mov
adc
loopne
or
fs
clc
iret
sub
in
xor
out
push
subb
add
cmc
push
push
add
sbb
addps
das
nop
mov
mov
and
fidivrl
mov
aas
insb
insl
ljmp
pop
out
push
repz
add
dec
in
sbb
xor
into
pop
pop
lods
sbb
pop
imul
inc
or
in
dec
out
fildll
mov
xchg
sub
mov
jg
xor
pushf
jge
sbb
xor
mov
fs
call
int3
mov
out
loope
mov
add
cmovge
cld
or
sha1nexte
fmul
outsb
insl
fs
adc
jg
jnp
lock
int3
sbb
and
dec
inc
das
pusha
inc
aas
sub
lcall
movsb
fwait
ja
jnp
ljmp
ljmp
dec
pop
les
pop
xor
xchg
sub
sahf
jl
fstl
xor
stos
loopne
int
hlt
cmp
jne
mov
cmp
lret
daa
into
jne
mov
mov
into
clc
jb
xor
jb
xlat
cmpsb
mov
cmpl
and
push
out
stos
arpl
in
notl
addr16
hlt
sub
mov
std
xorb
movsb
and
fdivp
out
sbb
mov
negb
or
xlat
xchg
pop
mov
push
sub
xchg
std
imul
imul
cmp
stos
mov
jne
scas
push
xchg
inc
lcall
repnz
push
inc
js
pusha
fwait
mov
dec
stos
sub
mov
mov
push
js
ss
movsb
stc
call
cld
inc
fadd
xchg
xchg
insl
cld
pop
xor
fs
sbb
int3
jg
mov
sub
push
adc
outsl
test
cmc
idiv
jb
insb
and
fcompl
mov
dec
jmp
cmp
leave
inc
ds
sub
lock
push
fdivs
bound
les
aas
movsb
ljmp
or
pop
cmc
das
adc
lods
fstl
cld
mov
inc
sbb
syscall
daa
xorl
jno
hlt
pop
dec
push
add
and
jo
dec
repnz
sub
pop
sarb
mov
repz
ja
push
pop
clc
ljmp
lods
insl
fs
xchg
sahf
movsb
sbb
fldcw
inc
xchg
inc
mov
mov
add
sub
fwait
loop
xchg
add
imul
js
repnz
jo
push
inc
dec
lds
out
out
aam
shlb
shrb
jo
ljmp
jg
ss
cs
sbb
data16
lds
adc
sbb
lods
push
or
out
inc
cmpsb
aad
push
pusha
cwtl
cltd
xchg
jmpw
pushf
pop
outsl
pop
mov
jne
mov
jne
sbb
data16
inc
mov
out
arpl
push
adc
mov
nop
dec
push
test
sub
dec
push
mov
ret
cmp
push
or
cltd
jge
mov
push
jl
out
push
push
adc
aas
out
inc
adc
imul
jno
das
pop
jbe
push
scas
movsb
adc
sahf
cmpsl
enter
inc
mov
jns
imul
mov
outsb
mov
fs
icebp
ljmp
mov
xchg
hlt
mov
pop
sub
andl
lock
add
xor
or
outsl
sbb
dec
sarl
cmp
mov
popa
xchg
jge
mov
dec
int
pushf
fsubl
je
out
add
mov
lods
sbbb
mov
jl
lods
repnz
fs
je
rolb
stos
lahf
mov
jb
push
andl
lods
stos
mov
pop
mov
adc
dec
js
sub
jp
lea
ficompl
movhps
sub
xorl
in
add
aam
cmp
xor
repz
jbe
popl
pop
sub
stos
add
test
or
sti
jp
mov
loop
ss
inc
inc
fldcw
jb
jns
cld
lods
lret
mov
mov
dec
addr16
or
push
jne
mov
and
insb
inc
out
inc
pop
sub
push
add
cmpsl
sti
mov
sbb
jl
push
jmp
lret
push
or
cwtl
fstp
xor
pop
adc
pop
dec
fmul
inc
or
or
xchg
jecxz
mov
outsl
in
dec
cmpsb
adc
test
jp
js
hlt
push
inc
push
hlt
je
mov
xor
outsl
and
and
shlb
shr
mov
int3
cmp
mov
fld1
xchg
mov
xchg
sbb
xor
lret
addr16
dec
lods
push
add
cmp
add
dec
cli
xor
sbbb
cli
dec
mov
sub
lret
fwait
mov
je
pop
mov
btr
lods
fistpl
xor
jns
dec
pop
sbb
push
jl
dec
push
or
sub
fs
mov
daa
jns
pusha
test
movsb
mov
push
push
push
mov
mov
jbe
jne
sub
add
push
mov
cs
add
jb
xor
movsb
dec
das
jmp
aad
mov
cmc
out
das
ret
fbld
movl
js
mov
add
mov
or
mov
sbb
pushf
dec
mov
adc
testb
add
dec
in
movsb
movsl
xchg
and
or
imul
jge
dec
cwtl
mov
sti
push
ret
push
enter
daa
push
mov
mov
mov
fsubrl
dec
lock
and
pop
mov
jge
stos
ss
hlt
push
sub
cmp
cli
pop
push
cmp
lds
test
iret
out
inc
movsb
punpckhdq
cmp
push
push
pop
pushf
loopne
inc
mov
xchg
les
push
in
int3
testb
dec
sbb
push
lock
fcompl
pushf
mov
sub
jbe
mov
or
cmp
cmp
ret
or
pusha
andb
inc
mov
dec
mov
pusha
push
sbb
iret
jl
pop
fisubrl
je
popl
sub
jmp
and
add
daa
fldcw
test
or
in
aas
mov
pushf
push
mov
std
popf
je
in
shl
jns
dec
addr16
adc
lret
out
xor
pop
dec
inc
cmp
inc
and
and
lods
hlt
pop
out
xor
xor
sub
push
push
rcll
mov
push
ja
cltd
dec
inc
inc
sbb
jle
sub
ja
push
decl
mov
aaa
mov
clc
scas
adc
int3
sub
push
jge
sti
push
fwait
iret
mov
dec
bound
mov
sub
mov
push
imul
lcall
in
loop
int3
push
lret
scas
ja
arpl
inc
sti
mov
sbb
adc
sub
inc
rorb
dec
xor
fnstsw
sbb
pop
xor
jo
test
cmp
andb
or
pop
push
add
popa
jp
mov
push
xchg
cltd
ja
stos
mov
sbb
repz
jo
or
jns
push
dec
sub
jbe
push
scas
sbb
movsb
mov
pop
addr16
or
lcall
into
outsl
and
push
jno
cmpsl
mov
movsb
push
add
mov
mov
stc
xchg
mov
push
test
mov
inc
cmp
insl
mov
sbb
jp
pop
sbb
lods
and
aaa
dec
in
iret
jne
aam
mov
and
jp
mov
sub
dec
inc
adc
bound
and
jns
mov
aaa
std
jge
inc
data16
or
fwait
inc
pop
xorb
les
and
or
mov
aaa
hlt
add
dec
mov
xor
and
sbb
stos
out
int3
sbb
pop
hlt
out
jbe
push
xorl
sbb
scas
pusha
std
movsl
pop
dec
push
inc
pop
push
insl
outsl
fxch
ja
fsubrl
adc
mov
lds
sub
push
fildl
jecxz
pop
inc
push
call
mov
cmc
mov
xchg
shll
push
add
rclb
or
and
je
loop
jns
scas
pop
inc
mov
and
inc
push
loopne
cltd
push
lret
lret
ja
mov
sbb
leave
int
cmpb
push
pop
out
sub
jmp
aam
push
xor
add
addr16
orl
and
je
imul
mov
test
inc
push
mov
in
push
test
pushf
cwtl
sub
mov
adc
inc
add
stos
mov
lahf
push
mov
rcll
cltd
push
jl
mov
imul
jae
cli
pop
addr16
xor
out
sub
xor
push
sbb
ja
jns
jmp
je
pop
sub
cmp
push
out
xchg
insb
lret
fldt
push
ja
loopne
adc
inc
push
test
inc
sub
mov
into
sub
push
push
xor
lret
push
in
and
pop
push
fs
push
mov
jne
loop
dec
fs
lret
push
in
shlb
mov
mov
push
mov
lcall
out
sar
push
cwtl
es
mov
pushf
hlt
lea
dec
pop
xchg
lret
adc
push
adc
repnz
jp
jp
mov
adc
mov
icebp
cmpb
gs
adc
stos
cmpsl
imul
mov
sti
jbe
cmp
sub
addr16
lods
or
push
push
xor
xchg
or
rcrb
pop
jno
sub
insb
and
push
popaw
push
ds
cld
sbb
arpl
shrb
stc
adc
push
sub
pop
dec
or
cmp
and
xchg
mov
pop
cwtl
subl
mov
push
imul
mov
jmp
push
inc
sbb
fildll
jmp
push
ret
push
sti
push
out
in
xchg
outsb
ret
adc
fsubrl
les
xchg
mov
and
enter
data16
movsb
es
jp
jns
rorb
push
cmp
or
inc
pop
ljmp
jp
dec
popa
push
cld
xor
in
inc
push
and
dec
adc
push
mov
add
rclb
and
mov
repnz
cmp
rclb
imul
push
popf
pop
push
jmp
mov
push
mov
xor
mov
mov
mov
and
push
fs
add
loop
mov
loopne
sub
push
int
leave
sti
cmp
dec
mov
dec
jne
add
push
jl
inc
xor
xor
sbb
addr16
pop
out
push
rcll
mov
nop
dec
mov
scas
mov
cs
stc
popa
mov
mov
aad
dec
xchg
pop
mov
xlat
push
mov
xor
mov
sti
jno
push
or
or
stos
icebp
popf
add
inc
xor
push
cmp
fmulp
roll
insl
stc
push
cwtl
sahf
out
stos
adc
in
in
and
sbbb
pop
jbe
call
xchg
xchg
dec
adc
cmp
std
add
pusha
mov
lret
cmp
adc
add
andl
push
das
jecxz
adc
inc
mov
xor
or
sub
sbb
ljmp
mov
push
jecxz
xchg
imul
stos
jmp
pop
sub
cs
mov
xor
ja
xlat
popf
lock
jecxz
repz
in
push
jnp
je
cmc
fsubrs
pop
jno
push
sub
fimull
cmpsl
aad
push
push
mov
in
call
lods
and
add
push
in
scas
jne
subl
cmp
xchg
sub
je
push
aad
push
scas
cltd
shr
dec
dec
xchg
es
les
repnz
sahf
cwtl
mov
ljmp
dec
push
aas
sub
mov
es
cmp
mov
jnp
add
mov
and
ret
mov
or
arpl
fldcw
movsl
je
or
popa
imul
push
movsb
add
lock
fs
nop
push
jo
sbb
jge
fwait
out
inc
leave
adcb
sub
loop
jle
data16
dec
arpl
stos
loopne
xchg
mov
cwtl
pop
push
push
jp
jmp
div
push
sbb
loop
inc
and
popf
lahf
inc
mov
push
fstps
out
fldl
push
and
dec
mov
js
call
push
test
cld
mov
iret
xchg
std
loope
pop
inc
shll
push
push
mov
adc
jle
jge
clc
mov
insl
shll
add
mov
and
cmc
popa
stos
fincstp
scas
mov
stos
mov
xor
mov
nop
cmpsb
push
sub
aaa
add
push
insb
push
jne
movb
push
das
in
or
test
adc
and
stos
sub
cmpsl
les
jp,pn
dec
jns
and
imul
mov
adc
cmp
nop
ss
add
xlat
xchg
pop
push
mov
imul
sbb
xchg
jl
test
hlt
ss
mov
aad
dec
lahf
push
fldenv
push
lret
cmpsb
or
insb
loopne
out
das
rcrb
jp
hlt
jg
or
push
std
jnp
mov
jne
ljmp
bound
mov
sbb
dec
adc
sahf
cmp
and
or
gs
sub
outsb
insl
and
and
xlat
icebp
push
test
sahf
xchg
push
xor
stos
js
into
xor
sbb
aas
fcmovu
lret
sbb
cmp
psrld
xchg
push
cmp
mov
ja
push
sti
popa
dec
inc
push
jl
cmc
lods
out
adc
push
leave
xor
and
xchg
dec
dec
sub
push
push
pop
and
movb
movsb
mov
negb
iret
push
pop
mov
mov
adc
push
pop
add
adc
jle
push
sub
xchg
xor
in
push
mov
pop
test
stos
aaa
xchg
push
push
xchg
dec
es
ret
enter
mov
and
inc
stos
into
mov
rclb
dec
cmpsl
pop
add
popa
hlt
or
out
add
add
jno
int3
jg
stos
push
lcall
xchg
sub
rclb
outsl
mov
idivl
and
jge
pop
lock
lods
cmp
out
inc
jns
inc
xor
outsb
xchg
jmp
push
out
ret
or
inc
movsl
mov
push
inc
fisttps
lods
js
movsb
out
cmpb
push
add
loop
adc
cld
test
sub
pop
fs
dec
imull
inc
inc
cwtl
data16
mov
xor
fs
mov
inc
mov
cs
lahf
es
lds
mov
fwait
xor
or
xchg
fxtract
xorb
ret
mov
add
shlb
mov
push
push
shr
lea
push
arpl
test
mov
pop
sbb
mov
mov
dec
cwtl
and
js
jo
insb
lock
inc
fdivr
mov
mov
cmp
xor
stc
and
in
inc
mov
imul
dec
cmp
lret
sarb
cmp
cltd
pop
nop
xor
fldcw
mov
jle
dec
out
xchg
loop
stos
inc
movsl
pand
in
jb
adc
or
push
adc
testl
stc
out
insb
inc
stos
pop
fidivl
push
add
daa
cmp
dec
loopne
and
mov
in
sbb
enter
sbb
movsb
aad
xor
sbb
mov
push
jae
jns
inc
mov
call
cmc
pop
in
insl
ds
or
mov
jb
fs
xchg
daa
inc
lret
push
lock
insl
lock
or
sbb
lcall
or
fbstp
sub
jnp
add
add
loopne
out
insb
sub
lods
fldt
mov
sub
push
inc
mov
and
out
push
aam
ret
scas
out
cld
idiv
lods
ljmp
pop
insl
int3
sbb
adc
cld
lcall
sbb
inc
mov
mov
adc
insl
adc
test
lret
sbb
hlt
andb
mov
push
inc
lret
loop
lret
sub
jo
push
decl
cmp
arpl
pop
adc
std
jo
and
jle
mov
jmp
mov
adc
sbb
test
ds
sbb
cs
xchg
sbb
or
lea
ret
push
popl
iret
mov
shl
xchg
xchg
xchg
movsb
jle
adc
mov
mov
cmc
pop
adc
das
mov
sahf
inc
mov
stc
in
dec
cmp
stos
mov
sub
or
inc
jmp
add
push
rorb
fidivl
jle
imul
lcall
enter
inc
add
cmp
imul
jnp
jmp
aas
je
or
aad
movsb
iret
pop
int
jns
xchg
imul
ret
xlat
inc
stc
out
mov
scas
jp
inc
inc
sbb
movsb
cmp
mov
andb
fldln2
push
lods
je
add
jmp
scas
and
jae
stos
inc
mov
jle
mov
jns
fidivrl
or
sub
das
imul
cmp
lods
test
mov
call
ret
jmp
lcall
subb
jp
add
out
out
mov
movsb
push
mov
adcb
xor
ljmp
cmc
dec
or
sti
aas
xor
jge
mov
cmp
iret
jmp
into
hlt
mov
or
mov
imul
imul
out
std
add
pop
std
movsb
hlt
and
jbe
stc
push
inc
add
jp
es
fs
je
and
mov
aad
cmp
cmpsb
outsb
dec
shll
mov
add
fs
adcl
nop
mov
out
and
scas
add
xchg
addr16
stos
movd
in
sbb
pushf
mov
cmp
add
inc
push
cmpl
mov
call
push
xor
push
or
adc
mov
jbe
outsl
mov
inc
jbe
cwtl
stos
jae
mov
xor
inc
aaa
fldl2e
mov
cmp
call
pop
imul
jmp
push
xchg
dec
adc
mov
adc
sub
pushl
inc
sahf
pop
jnp
adc
adc
add
and
add
xchg
loope
lock
in
sub
scas
setp
and
frndint
rorl
jnp
mov
hlt
mov
test
aaa
andb
dec
in
es
fdivs
test
out
cmp
add
in
inc
cwtl
das
lret
in
push
fstpl
lock
cmpsb
leave
addr16
adcb
into
es
mov
jbe
popa
or
sbb
jo
mov
hlt
mov
ret
mov
out
cli
arpl
cltd
and
push
out
xor
mov
fsubrp
stos
sbb
xchg
pop
call
arpl
push
cmp
mov
test
ds
push
pop
push
add
push
rorl
stos
repnz
jo
lcall
imul
mov
cmc
pop
push
or
mov
inc
movsb
clc
call
mov
pop
dec
cmpl
pop
mov
inc
fildl
xchg
fwait
push
lods
negb
mov
enter
mov
jecxz
popa
sbb
xchg
sahf
mov
lods
cmp
mov
rcrl
push
dec
jmp
stos
aad
shrl
xorb
int3
imul
sbb
nop
lret
dec
in
jg
inc
outsb
stos
sub
sahf
cmpsl
adc
inc
add
adc
lods
dec
mov
inc
sbb
inc
in
out
es
ljmp
shlb
movsb
in
pop
fs
fwait
dec
push
in
mov
icebp
stc
imul
test
mov
movsb
and
jns
adc
cmp
movsb
fcmovne
dec
cmp
into
fsubrl
mov
aas
and
and
stc
lea
mov
jbe
add
fimull
sub
inc
mov
mov
dec
sub
mov
popa
jge
ret
adc
mov
bnd
outsb
push
andl
add
int3
adc
in
pop
mov
sbb
das
bound
incl
cmc
jg
mov
sbb
daa
filds
enter
sub
mov
sub
dec
sti
pop
and
outsb
cmp
push
or
and
imul
mov
sbb
pop
push
paddq
dec
lea
mov
rcrl
fnstcw
aas
inc
push
in
movsb
enter
and
dec
pop
insb
sbb
cmpb
xchg
and
adcl
sbb
xor
push
subl
ret
mov
ja
dec
bound
jl,pt
pop
cmpl
jno
imul
test
cwtl
pop
mov
add
aad
das
mov
adc
push
jp
out
cltd
inc
jp
jmp
popa
lahf
call
pop
into
lret
jl
icebp
and
xor
sub
dec
inc
jge
jg
push
ds
insl
inc
push
jns
into
es
jb
mov
adc
mov
test
jle
stos
icebp
shrb
inc
shl
and
scas
je
stos
xchg
push
push
outsb
xor
mov
inc
movsb
nop
fisttps
ljmp
ja
bound
add
sarb
out
fs
aas
or
mov
sub
insb
jnp
jg
dec
imul
testb
test
ficoms
movsb
cli
dec
inc
rorb
into
pop
push
cmp
shrl
cmp
pop
jne
fs
iret
jne
mov
and
xchg
jnp
insb
push
addr16
std
out
test
loope
add
or
lods
jno
out
push
cmpsl
cmp
xchg
imul
pop
insl
mov
pop
inc
outsb
cld
push
aad
cmp
sbb
fs
pushf
jmp
xchg
mov
repnz
or
mov
jnp
sbb
data16
inc
add
dec
fdivs
lret
fwait
loope
jg
inc
sub
fs
mov
pop
int3
and
popa
jae
pop
jno
mov
adc
push
mov
stos
popf
mov
jp
pop
lds
fcoms
and
push
or
push
inc
lods
inc
xchg
fimuls
test
hlt
filds
lock
movsb
stos
mov
adc
psubusw
out
dec
pop
lea
xchg
cmpsl
scas
imul
das
fcmovb
jnp
loop
push
jl
ret
and
sbb
cmp
inc
call
add
mov
loopne
inc
test
jae
push
nop
lcall
inc
jb
test
sub
jmp
jge
xchg
pop
dec
inc
movsb
out
add
push
add
ljmp
adc
lret
cmp
sub
mov
into
push
mov
mov
add
scas
repnz
fs
xchg
mov
inc
bound
imul
and
or
push
jge
fmul
lock
movsb
pop
std
pop
clc
push
adc
inc
adc
clc
and
sbb
cs
scas
sub
das
fs
mov
dec
dec
sbb
push
mov
inc
ss
pusha
fimuls
inc
jne
xor
jl
adc
movsb
daa
cld
inc
call
ja
or
test
xor
dec
jle
rorl
insl
pop
mov
xchg
inc
movsb
ja
mov
add
sub
clc
dec
in
sbb
xor
add
xchg
loope
outsl
cmp
aad
popf
sub
pop
pop
jl
aaa
out
fstps
lods
pop
mov
iret
and
test
ret
sbb
mov
add
popf
and
ljmp
fidivl
lret
fs
repnz
cmp
roll
mov
es
inc
imul
cs
cwtl
in
sbb
shlb
xchg
lods
repnz
mov
push
add
push
je
add
fs
test
mov
fldz
loop
dec
aad
test
inc
repnz
pop
fidivrs
fiadds
loopne
aam
sub
push
dec
sbb
cmp
sub
aas
stos
lahf
jmp
xchg
scas
js
fdivrl
outsl
jbe
or
jno
std
adc
adc
rcrb
mov
enter
cwtl
mov
mov
jnp
fildll
gs
mov
aas
movsb
mov
shlb
push
stos
fnstenv
mov
leave
xchg
loop
add
add
pushf
dec
call
fs
fwait
in
mov
mov
aas
mov
in
xor
inc
daa
xor
and
mov
scas
js
add
inc
inc
cmc
out
faddl
psubb
pop
mov
mov
call
test
mov
cli
mov
daa
fwait
xchg
fbstp
push
cli
or
or
das
stos
clc
aam
cmpsl
sbb
mov
movsb
lock
loopne
icebp
push
cmpsb
dec
mov
jmp
repnz
mov
imul
fs
add
in
push
adc
xchg
fidivs
ja
sbb
cltd
scas
dec
jmp
movsb
das
imul
adc
mov
popf
jne
or
sbb
inc
jb
sbb
fs
test
pop
adc
incl
nop
mov
inc
subb
xor
mov
nop
movsb
fsubp
in
sbb
insl
xor
push
fildll
mov
cmp
ss
in
daa
cmp
addr16
addl
in
cmc
movsb
loope
cmp
add
cld
xor
outsb
outsl
cli
rorb
out
inc
es
lea
push
insl
jns
mov
aam
mov
movsl
inc
dec
es
mov
inc
mov
movsb
mov
sbb
jae
jo
push
mov
mov
nop
jbe
fs
jle
insb
jbe
jne
sbb
adc
cmp
push
xchg
ja
add
jl
jne
repz
and
ljmp
movsl
adc
jae
leave
dec
orb
lret
std
add
sbb
jg
mov
inc
xchg
test
inc
and
movl
xchg
mov
lret
pop
inc
sbb
push
or
xlat
pop
adc
cmp
insb
inc
add
add
pop
icebp
mov
mov
cmc
push
mov
lock
lcall
loope
scas
out
mov
je
and
sbb
inc
ljmp
mov
jmp
movsb
jns
xor
jnp
pop
push
sbb
and
stos
ja
in
cmp
jg
loop
bound
iret
fmuls
jb
dec
pop
adc
jno
lods
js
add
xlat
jae
jo
scas
daa
adc
jo
jmp
cli
mov
or
repz
movsb
mov
pop
and
sbb
or
or
add
push
or
mov
and
mov
add
test
das
sbb
orl
rclb
push
lods
dec
idivl
jge
lods
in
popa
sbb
pop
pop
adc
inc
add
mov
out
xorb
or
pop
and
int3
ret
fsub
fwait
pop
cli
scas
insb
mov
nop
jns,pt
and
xchg
lods
aas
ja
ss
mov
inc
fwait
adc
push
xor
push
sub
loope
mov
jne
mov
lret
pop
imul
test
rolb
inc
lods
sub
fmuls
xchg
mov
movsb
jbe
cmpsb
rorl
xchg
test
xchg
out
cld
push
jnp
movsb
cmpsl
fsubrs
inc
adc
bound
fnstsw
jmp
test
sub
fsubr
push
add
jg
imul
sub
repnz
inc
stos
iret
mov
xchg
shll
add
mov
adc
out
out
and
out
jge
mov
mov
movsb
addb
fsubrs
jle
pop
in
iret
mov
and
xor
push
insl
inc
push
adc
loope
mov
push
inc
or
xor
lcall
or
ret
fcomi
push
lret
fwait
call
stos
lds
jp
adc
pop
push
fisubs
ss
nop
ss
fimull
cmp
and
pop
push
pop
push
lock
stos
mov
daa
lock
repnz
sub
imulb
mov
jb
mov
pushf
cwtl
outsb
inc
xor
test
out
sbb
mov
mov
mov
sub
dec
ja
call
lds
nop
lret
or
fisubrs
fdivrs
cmp
mov
jl
dec
std
pop
lods
or
xor
mov
mov
arpl
push
into
aas
int
sbb
int
jle
mov
mov
add
mov
shrl
clc
movsb
or
ja
clc
xchg
or
sahf
or
rcrl
insb
movsl
mov
loop
shrb
push
out
cmovnp
rcrl
and
xchg
xchg
xor
insl
or
adc
test
ror
ret
out
mov
inc
cmp
sbb
in
repnz
outsl
adc
sub
mov
fcmovnb
push
push
cmp
jmp
sarb
mov
lods
cmp
fsqrt
mov
dec
or
std
loop
std
aam
jmp
fstpl
aam
sbb
mov
cmp
outsl
test
mov
aad
push
aam
dec
xor
int3
xor
arpl
xor
adc
movsl
fists
test
ror
or
repz
mov
dec
sbb
lret
xlat
sub
or
or
and
push
adc
cmp
pop
inc
jno
test
fs
mov
in
mov
and
fstp
stc
mov
mov
mov
adcl
xor
js
in
add
hlt
mov
pop
ljmp
inc
decb
stos
pop
pop
xchg
mov
loopne
imul
inc
jbe
mov
psubsw
fadds
fs
loopew
shrb
in
fbld
dec
inc
movsl
bound
fs
aas
stos
push
cmp
mov
mov
iret
cmp
cmp
aas
sbb
mov
out
dec
sbb
sbb
sub
imul
hlt
sub
lea
popf
es
mov
sub
inc
xor
addb
enter
jb
sbb
mov
cs
xchg
and
cmp
nop
sbb
sbb
mov
insb
sub
lret
xchg
aam
testb
xor
adc
ss
jp
movsb
in
fsubrs
adc
or
push
sub
mov
daa
or
sbb
xor
dec
sbb
mov
loop
setnp
jle
cmpsl
test
push
in
push
insb
loop
jo
lds
push
movsb
enter
push
mov
cmp
jae
fwait
aam
and
rolb
fisubrl
shl
xor
xchg
sub
es
push
jg
inc
dec
mov
fucomp
movsb
mov
jo
int
and
xor
icebp
xchg
subb
jle
out
pushf
fstpt
pusha
pushf
je
bound
cmpsb
hlt
mov
fstps
push
cmpsl
or
pop
add
pop
pop
dec
aad
pushf
jle
stc
mov
scas
inc
mov
or
jle
sbb
inc
jbe
out
cmp
data16
cld
mov
das
jg
stos
sub
sbb
jle
jne
scas
mov
sbb
ds
test
mov
out
mov
mov
std
pushf
fwait
popa
and
inc
inc
hlt
bound
adc
inc
push
aam
xor
aam
mov
xchg
xor
mov
imul
sub
enter
jl
enter
lods
lret
popa
inc
inc
mov
xlat
mov
dec
inc
pop
mov
xchg
pop
ja
adc
jnp
xorb
ljmp
icebp
or
arpl
sarl
jg
jnp
push
int
lods
push
jns
arpl
or
dec
fistpll
das
add
call
pop
scas
push
push
inc
in
out
dec
sbb
bound
xchg
test
or
aad
dec
inc
or
sbb
or
adc
popa
and
or
jecxz
negl
push
mov
cmp
mov
iret
push
mov
adc
jne
push
pop
jecxz
stos
pop
pop
insl
js
test
mov
jbe
fs
sub
mov
push
fcmovne
xor
jo
pop
lods
rcll
sarb
add
hlt
add
mov
imul
aad
push
out
hlt
cli
cmpb
loop
pop
jmp
ljmp
cmp
inc
cmc
jae
pop
jle
sbb
xchg
movl
cmpsb
add
sub
cli
push
xor
pop
mov
or
loope
jb
inc
aaa
jns
out
std
inc
or
fsubrp
rcr
outsl
and
inc
xor
push
movsb
daa
xor
aad
in
xor
insl
and
incb
pop
push
imul
sub
or
push
xchg
je
test
rolb
and
xchg
ss
inc
lods
xchg
gs
cli
jge
stos
stos
push
add
imul
mov
push
sarb
rcr
jb
aad
push
push
stos
stc
imul
inc
pop
sbb
jl
push
daa
jmp
imul
leave
inc
mov
mov
and
lods
mov
add
xchg
cmp
bound
xchg
xchg
xchg
mov
mov
es
sub
jl
sahf
cmp
into
fwait
push
mov
sbb
mov
test
mov
std
pop
dec
es
sahf
jle
aam
std
repz
cmp
cmp
ss
movsl
mov
mov
sub
lods
pop
jle
cmpsl
stos
inc
jl
fistps
pop
pushf
jne
jne
movsb
subl
pop
movsb
scas
xchg
jae
inc
stos
out
dec
outsl
jno
or
dec
mov
cltd
xchg
cwtl
xchg
cmc
sub
cmpsl
fmuls
dec
imul
cmpsb
dec
or
bswap
subl
cmp
adc
cli
out
insb
adc
jl
mov
and
xor
or
sub
out
pusha
jne
adc
cmp
icebp
xchg
sub
cld
adc
movsb
popa
mov
xor
or
fisubl
repnz
fistl
out
xor
push
or
je
jecxz
cltd
leave
dec
push
xchg
mov
mov
pushf
sub
stos
jmp
test
push
shlb
insl
movsb
lea
bound
mov
cs
cmp
or
mov
and
xor
ja
fs
pop
std
sbbl
call
add
mov
lret
jl,pn
ljmp
add
mov
mov
insl
ljmp
mov
imul
sub
mov
sub
ds
mov
xor
mov
inc
in
shlb
inc
pop
js
popf
loope
fisttpll
fs
jns
push
ljmp
mov
or
push
jbe
xor
arpl
test
jb
push
push
into
push
fldt
and
jne
ljmp
inc
js
mov
add
mov
xor
popa
pop
es
testb
push
xchg
push
mov
cmpsl
sub
mov
movsb
xor
jb
sbb
xchg
call
dec
arpl
lods
or
push
add
clc
ja
xchg
xor
std
xlat
sub
subl
mov
into
lods
fs
or
les
dec
std
xor
movsb
ja
push
pop
lahf
in
ret
lods
mov
mov
mov
cs
inc
add
cs
movsb
lret
mov
movsl
mov
sub
jne
movsb
adc
cld
adc
mov
mov
and
ret
fcoms
movsb
mov
or
push
fs
jbe
in
test
ret
rolb
or
add
sub
adc
jmp
and
pop
sub
mov
mov
sbbl
insl
pop
jae
out
pop
adc
clc
std
dec
dec
imul
xchg
sbb
fdivl
mov
pop
sub
sahf
sub
pop
lods
mov
outsl
xchg
dec
jg
or
mov
lea
fdivs
das
cli
pop
fs
mov
jmp
ljmp
mov
add
cltd
cmp
sub
mov
mov
shll
mov
mov
daa
rsm
mov
fs
insl
nop
xchg
inc
jmp
mov
push
pop
push
inc
jp
adc
fs
inc
xchg
shl
ja
xchg
lods
jmp
cmc
aas
int
xchg
sbb
ljmp
mov
push
fwait
sbb
dec
sti
jno
stos
sbb
push
push
jp
out
test
lahf
lods
sbb
popf
imul
lret
and
or
pop
jb
out
sub
mov
dec
cmpl
aam
mov
stos
mov
xchg
sbbl
lods
pop
mov
cltd
jge
xchg
jno
stos
cmpsl
jge
jl
cmc
dec
push
adc
test
fs
push
mov
les
cld
andnps
cmpsb
mov
stos
jae
lods
cmp
xor
mov
test
je
xchg
dec
jbe
add
loopne
sbb
test
xor
dec
int
and
or
inc
mov
xlat
push
fcoml
add
ja
xor
cltd
incl
lret
pop
pushf
jp
jp
adc
mov
fs
cltd
or
inc
stc
push
mov
lret
popf
xchg
lods
jno
push
jb
cmp
pushf
push
lret
and
push
add
scas
pop
insl
xchg
jg
cmp
outsl
lahf
jno
in
in
sub
sub
sbb
movsb
repz
inc
sbb
shll
jg
xorl
or
jge
nop
sub
cld
mov
cs
stc
insl
jmp
stos
jne
adc
add
lds
jne
lods
cltd
rclb
pop
rcl
dec
lret
cmpsl
ret
ficoms
mov
je
adc
push
xchg
scas
inc
lock
mov
jl
push
popa
fisubs
dec
cmp
or
push
sbb
sbb
push
adc
test
push
js
pop
ds
jae
lret
icebp
mov
cs
movsl
fldt
inc
xchg
test
out
ficompl
mov
stos
call
fwait
dec
lock
lret
pop
mov
in
fwait
lock
and
jmp
jns
aad
loope
jne
cmp
push
into
fucomi
sarl
dec
adc
dec
mov
cmpsl
jae
inc
pop
mov
movsl
pop
jge
fwait
sub
push
sub
xor
push
std
mov
insl
mov
fisttps
sbb
insl
jle
inc
add
push
icebp
mov
aad
stos
gs
mov
inc
lret
test
jne
sbb
push
cld
stc
pusha
enter
cld
and
iret
cmp
mov
out
dec
test
inc
test
stos
mov
adc
mov
dec
mov
add
inc
adc
inc
adc
pusha
fs
jg
mov
mov
decb
push
dec
out
and
ret
mov
jbe
in
lds
arpl
xlat
std
cwtd
pop
nop
jmp
mov
mov
cmpsl
out
dec
mov
das
outsl
test
add
push
pop
shll
les
fs
popa
xor
push
outsb
sbb
jno
mov
inc
add
and
in
lods
insl
movsb
data16
mov
dec
mov
inc
push
mov
mov
daa
mov
call
mov
rorb
sbb
pop
push
test
out
mov
push
addr16
rcr
cmp
out
pop
mov
daa
add
mov
mov
fs
push
imul
or
es
jae
add
jno
mov
push
mov
inc
ja
mov
aas
cmpsl
cli
pop
lock
sub
jbe
lret
adc
js
subl
movsb
movb
lret
xchg
and
pop
jne
inc
push
hlt
sbb
pop
lock
mov
jb
stos
pop
mov
das
lea
pop
push
xor
dec
outsb
cmpsl
mov
ljmp
and
popa
sub
out
loopne
and
and
jb
mov
cs
outsb
dec
fsubrs
mov
and
in
push
fmuls
xor
inc
jge
es
inc
jbe
sbb
inc
jl
xor
or
xor
ret
or
mov
fnclex
stos
ss
pop
push
push
je
push
fdivl
sub
stos
fs
shrl
push
popf
inc
ljmp
into
xor
and
inc
inc
shlb
mov
inc
lcall
call
mov
cmc
lods
inc
sub
inc
lret
sbb
dec
sbb
lret
dec
push
pop
movsb
stos
mov
pop
cmp
pop
js
cmp
push
push
xor
pushf
out
aas
repnz
jbe
or
adc
mov
add
sbb
clc
fwait
mov
mov
push
sbb
pop
lods
iret
aam
into
xchg
pop
fsubs
or
mov
es
outsb
fidivrs
dec
imul
shll
push
pusha
mov
and
push
sti
xlat
lcall
jnp
into
hlt
shl
dec
outsl
stos
inc
jg
lock
add
adc
mov
lds
push
ret
xchg
test
int
xchg
repnz
adc
jns
shrl
xchg
jmp
int3
aaa
adcb
cwtl
lods
adc
dec
mov
mov
sub
fwait
outsl
dec
out
add
mov
sbb
mov
mov
jmp
bts
imul
sahf
push
arpl
mov
movsl
add
xor
ljmp
rcrl
mov
cli
mov
les
push
push
pop
jp
movsb
pop
mov
cmpsl
add
bound
add
mov
iret
cmc
gs
push
fs
sbb
mov
pushf
inc
cli
push
test
js
fisubs
sbb
fmulp
sbb
imul
ss
jecxz
andl
lcall
dec
movsl
jnp
push
jp
nop
ret
cmpsl
loop
sub
fucomi
jp
push
arpl
call
pop
out
and
repnz
pop
or
int
xlat
ret
jns
sbb
insb
mov
popa
add
sahf
popa
jge
fistpll
dec
and
pop
cmpsl
add
and
dec
xor
push
inc
stos
add
sbb
movsb
jo
fs
lds
inc
adc
fldl
xadd
setge
leave
push
negb
inc
xchg
push
sub
xchg
cmc
add
les
cmp
outsl
cmp
out
cld
mov
int
stos
sbb
push
sbb
mov
jp
mov
sub
add
pop
int
gs
add
daa
pushf
jne
mov
popa
insl
ficompl
mov
fisttpl
mov
ds
push
inc
jg
mov
pop
outsb
mov
pop
into
scas
fs
out
or
in
shrb
push
rorb
loope
jmp
lret
xchg
cwtl
jmp
imul
movsl
je
sub
mov
sarb
cmp
cmc
shrb
call
push
cmp
dec
dec
fs
mov
or
dec
dec
lods
jp
sbb
mov
gs
test
in
pop
push
mov
loopne
pop
sbb
out
push
mulb
loop
inc
ret
sbb
xchg
push
dec
sbb
out
lea
push
cmp
outsb
add
rclb
mov
fldenv
in
sub
and
xor
add
hlt
pushf
pushf
lods
and
test
jbe
push
scas
push
rorl
add
mov
mov
inc
push
ljmp
lcall
jp
cmp
sub
js
ss
mov
outsb
inc
insb
out
test
inc
jmp
filds
icebp
inc
jmp
mov
fwait
mov
subb
sub
inc
pushf
loop
ds
mov
add
ret
mov
dec
xor
sub
xchg
je
mov
pop
bound
fs
and
stos
pop
inc
xchg
movsb
test
pop
cmp
adc
xor
nop
adc
cmp
jb
lret
fidivrl
mov
sahf
push
or
imul
imul
cmp
pop
fstpl
bound
pop
adc
sbb
jl
movsb
xor
mov
jl
sbb
into
jne
cmpsb
mov
mov
stc
mov
ds
jp
fs
xchg
ljmp
test
or
jp
sbb
cmc
out
inc
ret
add
movsb
cmp
adc
pop
mov
cmp
in
cmp
dec
sub
push
rcll
pushf
sub
jecxz
icebp
mov
pop
pusha
mov
lods
leave
int
jbe
das
andl
push
lods
xchg
js
dec
xchg
mov
out
mov
xchg
call
fsubs
jge
inc
mov
or
mov
push
pop
pop
cwtl
cmp
addb
icebp
insl
push
in
add
lods
sub
fs
xchg
sbb
popa
mov
loope
jo
push
add
daa
aad
jb
aam
inc
lods
cmpsl
imul
lret
dec
insb
adc
inc
xor
flds
pop
jp
pop
mov
dec
pop
ja
push
fs
fimuls
mov
xor
rcll
xor
clc
mov
sti
idivl
push
and
ficomps
sbb
pusha
lcall
mov
sbb
jb
arpl
mov
test
xorl
ds
jbe
sbb
pop
add
dec
out
sbb
pop
and
fisttps
pop
inc
sub
fldt
dec
notl
out
add
pop
out
xchg
jl
stc
dec
pushf
add
inc
sub
jge
jbe
sub
sbb
insl
cmp
movsb
cmp
into
xchg
dec
icebp
pop
xchg
mov
sti
mov
mov
adc
ret
loopne
jle
and
sbb
jge
push
mov
test
lahf
lock
cmp
mov
gs
mov
aas
fsts
mov
pop
lret
out
ljmpw
mov
xor
sub
add
cld
mov
mov
js
loop
pushf
adc
mov
mov
out
gs
jp
fcomps
add
pop
dec
filds
mov
std
or
sub
adc
ds
mov
xor
fcoms
test
mov
out
cld
xor
bound
xchg
mov
ss
repnz
add
ds
shrl
xchg
jp
fwait
outsl
pop
in
inc
lcall
mov
dec
jmp
inc
enter
add
dec
dec
jle
sarb
cs
jne
fisttps
ret
mov
or
push
jl
cltd
push
mov
mov
xchg
and
xor
into
sub
imul
mov
mov
imul
ret
dec
data16
imul
js
sub
int
adc
mov
xor
aas
call
iret
lea
imul
ret
insl
dec
out
xchg
imul
ljmp
pusha
cmc
cmp
dec
inc
enter
xchg
cld
push
push
ja
jecxz
in
movsb
push
lods
or
sbb
in
fadds
cmp
sbb
sbb
movsl
dec
inc
mov
sub
adcl
fisttpl
aam
mov
mov
repz
sbb
aad
xor
and
sbb
aaa
enter
and
in
and
in
hlt
xchg
jl
or
inc
adc
mov
sti
cmpsl
sti
xchg
enter
kmovb
hlt
mov
hlt
mov
ljmp
push
xor
call
aad
roll
lods
inc
inc
test
adc
sub
xchg
imul
divl
mov
stos
int
and
gs
xor
xchg
jo
inc
sub
popf
xchg
xor
hlt
pushf
out
mov
stos
xchg
sbb
ret
or
call
jp
sbbb
xchg
lds
jb
inc
add
cmp
fcoml
test
das
push
call
pop
mov
repz
sub
xlat
sahf
mov
cmp
mov
and
lods
fs
ret
rorb
xor
repz
in
inc
push
mov
repnz
jo
sub
jg
cs
xchg
jne
dec
loopne
or
imul
jne
enter
pop
jbe
std
or
sub
insb
and
push
inc
inc
lods
std
dec
add
add
cmc
add
jnp
call
cld
fimull
out
cwtl
in
ljmp
add
aas
mov
out
imul
xor
daa
stos
push
shl
aas
sub
pop
sub
mov
push
cmpsb
push
mov
push
insl
divb
fimull
fs
shlb
ljmp
ljmp
cmpb
jg
jge
cmc
xor
sub
sub
mov
test
jl
stos
add
ds
pusha
std
clc
int
fs
inc
xchg
cmc
pop
and
leave
cltd
mov
mov
movsl
pop
sub
aas
sbb
dec
mov
xchg
inc
mov
out
xor
neg
and
subb
dec
std
and
inc
or
loop
jo
lcall
mov
add
jg
or
inc
sub
sbb
xor
lcall
xor
adc
stos
mov
in
leave
push
fsub
sahf
inc
lods
fs
insb
jae
lock
adc
sbb
js
jp
movsl
cmp
mov
fxch
and
or
add
and
mov
call
add
popf
fnstsw
sbb
or
test
out
roll
std
dec
lret
shl
push
xchg
cld
inc
sbb
movsb
arpl
out
cmpl
inc
mov
xor
jmp
or
in
ds
sbb
das
minps
mov
rcr
in
fs
jne
lock
lahf
je
pop
ja
mov
movsb
or
dec
incb
loope
fnstsw
call
lret
sar
dec
or
loopne
inc
sar
insb
data16
sbb
adc
push
adc
pop
ret
adc
fsubrs
jge
inc
stos
test
sti
sub
arpl
and
arpl
dec
adc
sbb
shrb
mov
xchg
cld
dec
pop
pop
movsb
out
cltd
sub
pop
sbb
or
xor
imul
adc
jp
xor
fwait
mov
push
cld
or
adc
rcr
xchg
scas
fcomps
adc
ss
jnp
adc
sbb
sub
daa
shll
adc
cwtl
mov
int3
test
jnp
clc
pop
pop
push
push
mov
movsb
sti
mov
ljmp
pop
cltd
data16
cmpsb
adc
dec
dec
out
lahf
lds
cmp
push
repnz
imul
fdivs
sub
add
insb
sbb
out
xchg
inc
dec
add
bound
bound
jg
shrb
mov
iret
test
test
mov
je
sub
aam
shlb
mov
adc
int
xor
fwait
sub
cmp
rclb
mov
pop
outsb
xor
or
dec
data16
or
lock
out
cmp
rolb
and
xor
leave
fs
pop
pop
out
push
ret
jbe
mov
sub
mov
adc
mov
push
das
fs
jnp
dec
xchg
icebp
or
inc
push
aam
or
into
sub
xchg
or
je
cmp
outsl
jne
stos
out
fs
inc
and
fiadds
into
pop
push
mov
int3
das
jge
inc
test
mov
scas
out
cli
mov
dec
jg
inc
inc
data16
jle
push
outsb
loop
mov
mov
inc
jmp
jo
xchg
lea
jnp
mov
lods
jp
add
ss
lock
mov
adc
jo
sbb
movsb
sbb
add
push
xchg
movsb
push
mov
mov
or
mov
push
inc
pop
or
mov
ret
flds
xchg
mov
xchg
pop
rcrl
adc
les
xor
cwtl
je
jbe
lods
orb
lret
imul
sub
pop
mov
adc
lret
inc
insl
ljmp
fildl
vprotq
lahf
fldl
sbb
out
and
adc
aas
lahf
lods
subl
jmp
leave
adc
xor
jg
cmp
cmp
jae
add
cmp
sbb
cmc
xchg
in
les
push
add
sbb
fucomi
inc
test
mov
clc
out
cltd
cmpb
inc
lock
jne
push
pminsw
aam
sar
add
push
mov
xlat
lock
in
pop
push
dec
int
aaa
int
jns
xchg
out
lret
mov
aam
jmp
and
mov
cs
cmp
xor
jecxz
jae
outsl
in
xor
push
and
std
cmp
pop
stos
cmp
mov
mov
cli
lods
pop
mov
out
das
out
xor
shll
mov
or
mov
add
pop
push
mov
sub
int
and
ja
cmp
gs
add
ja
fcoml
fldenv
push
sbb
sub
loopne
jmp
movsb
flds
shr
adc
inc
faddl
pop
jecxz
enter
fldl
stc
and
add
push
push
pop
jbe
mov
ret
and
push
xchg
fcmovnu
out
or
movsl
jg
sub
cmc
jbe
fs
std
mov
dec
sbb
movsb
xor
sub
loope
mov
dec
adc
jnp
xor
sub
adcb
xor
insb
and
bnd
out
stos
ror
jl
xor
jb
inc
ss
inc
lcall
push
cmp
imul
into
in
fldenv
dec
sub
in
adc
imul
push
sbb
add
and
xchg
ret
lea
jle
jo
je
push
lahf
movsb
cmpsb
leave
push
pop
les
pop
outsb
add
jge
rcr
cmp
cltd
jo
int
adc
rorb
les
in
insb
aas
aad
imul
aad
stos
lret
dec
into
push
ja
addb
imul
jmp
pop
lds
inc
rdtsc
data16
push
rolb
lret
or
in
shlb
mov
inc
mov
test
ljmp
add
out
imul
arpl
aaa
cmpsb
mov
pop
jge
movsl
xchg
jmp
sub
xor
inc
lahf
jecxz
jb
lds
dec
adc
fcmovnb
js
shrb
lret
pusha
mov
fnstcw
enter
fmuls
pop
dec
sbb
iret
and
xor
lea
movsl
mov
stos
dec
add
xor
push
sbb
sub
repz
inc
sbb
imul
das
mov
xor
or
mov
sahf
xor
insb
xchg
sbb
add
test
jg
test
movsb
lret
jecxz
push
push
jae
sbb
ficoml
fwait
adc
lds
cwtl
cmpb
sub
andl
push
push
push
and
sub
jecxz
jle
mov
loopne
add
adc
cld
fsubl
pop
icebp
sbb
mov
sub
shll
lods
ljmp
dec
lds
inc
insb
jecxz
out
mov
sbb
jbe
adc
sub
mov
or
mov
ss
dec
loope
add
lret
popa
into
das
fcomps
imul
call
js
dec
xchg
ja
sub
push
roll
cwtl
mov
stos
add
call
or
out
pop
pushf
inc
or
lret
push
cmp
cltd
adc
lods
shlb
pushw
cmp
push
or
jns
ret
int3
mov
xchg
call
mov
dec
in
xor
frstor
pop
jmp
mov
insl
mov
aas
mov
es
jle
jmp
dec
push
add
mov
and
popf
mov
insl
sti
cld
ret
int3
xchg
enter
in
out
jl
subb
mov
or
ss
fisubs
jp
mov
call
inc
loope
int3
mov
mov
sbb
insb
pop
push
movsb
jp
stos
xchg
loope
insb
out
js
cwtl
inc
ss
jmp
inc
stos
pop
inc
in
mov
scas
out
sub
push
daa
lret
jecxz
jg
inc
loope
mov
mov
mov
sbb
or
insb
cli
pusha
mov
pop
and
mov
jp
rclb
mov
popa
dec
cmc
mov
mov
dec
mov
push
xor
movsb
sub
lahf
scas
inc
jg
sti
int
add
mov
icebp
data16
loopne
xchg
out
inc
dec
or
mov
cmp
movsb
adc
xor
cmp
sbb
idivb
mov
test
sbb
or
cmp
xchg
sub
movsb
adc
fdivrl
iret
dec
push
daa
inc
or
cmp
inc
std
add
fmuls
data16
inc
sub
pop
insb
sub
je
aam
decl
xor
pop
es
aad
dec
ljmp
outsb
pop
jp
mov
popa
adc
mov
fldl
sub
bound
xchg
cs
jno
ljmp
out
mov
popa
dec
cltd
mov
or
mov
imul
sub
imul
lods
pop
mov
out
push
xor
jne
iret
lret
xchg
dec
call
sub
ja
mov
push
xchg
push
xor
mov
scas
jb
mov
or
mov
test
movsb
adc
loope
and
pop
rcrb
inc
mov
pushf
inc
sahf
mov
fwait
mov
movsb
fsubs
add
nop
xor
dec
pop
inc
mov
xlat
aas
add
das
into
xor
pop
inc
adc
ret
movsb
ss
jb
bound
mov
push
xchg
bt
inc
mov
or
push
inc
ja
sub
xor
cld
and
popf
or
andl
xor
mov
or
add
sbb
imulb
pop
fnstcw
inc
or
or
fnstenv
push
jbe
ljmp
pushf
scas
jns
out
mov
std
test
popf
std
adc
bound
call
imul
repz
fs
imul
mov
hlt
call
mov
in
fs
pop
sbb
push
mov
jge
or
xor
movsb
and
nop
mov
data16
pop
push
inc
push
rcrl
nop
gs
push
subl
int
cltd
rsm
iret
loope,pt
stos
sub
pop
push
lea
nopl
sarl
sbb
inc
cli
sbb
sub
sub
mov
adc
nop
cmp
xchg
loop
cmp
ljmp
push
pop
add
ficoms
test
in
cmc
rcl
aad
mov
stc
sti
mov
xor
shrb
inc
stos
pop
lcall
ja
xor
xor
xchg
push
cmpsb
pop
cmp
int
rcl
leave
jbe
aas
rcrl
loopne
sbb
pop
lods
data16
xlat
enter
ret
add
daa
jge
insb
iret
adc
scas
adc
xor
fs
mov
ljmp
jl
push
pusha
fcmovu
cltd
fidivs
mov
imul
flds
sbb
sbb
outsb
dec
mov
xchg
xchg
lock
push
repnz
bound
and
dec
mov
lret
test
int3
jo
mov
mov
out
sbb
les
and
pop
cmp
push
push
mov
fs
jnp
or
daa
cltd
add
mov
mov
push
mov
inc
or
rolb
jmp
lock
pusha
xchg
movq
adc
mov
xlat
imul
imul
pop
xchg
sahf
push
loopne
or
into
lods
mov
call
in
inc
lods
mov
inc
das
mov
fs
arpl
sub
loop
cld
imul
pop
sub
push
mov
mov
cli
xchg
jmp
ja
out
into
insw
mov
sbb
mov
sub
hlt
mov
dec
out
lea
jp
clc
inc
pop
fldenv
adc
mov
arpl
push
shll
scas
sub
jl
push
adc
in
cmp
xor
jge
out
mov
xor
mov
dec
stos
adc
fs
mov
add
rcll
fcmovu
sbb
jb
rcl
adc
mov
or
pop
xor
sahf
stos
out
cmp
fsub
pop
dec
xor
or
dec
mov
sbb
dec
fildll
pushw
fs
cmpsb
sub
mov
or
sub
mov
sbb
push
lahf
inc
stos
push
subb
push
pop
test
inc
test
cmpsb
mov
decl
pop
xchg
sub
insl
sub
fstpt
lods
outsb
insb
lea
std
or
aas
out
xchg
divb
shr
outsb
sub
out
lods
fs
jmp
sub
mov
pop
jp
gs
addl
lods
push
cwtl
sbbb
outsb
dec
addb
stc
cmp
inc
adc
inc
push
adc
and
push
add
in
push
out
pushf
in
and
dec
ffreep
pop
and
cmpsl
sbb
test
mov
mov
or
dec
and
lret
icebp
cld
push
adc
mov
in
ja
fidivs
imul
inc
rorb
ret
mov
sub
inc
add
mov
cltd
adc
nop
sbb
xor
sahf
inc
dec
add
ss
pop
fs
inc
cld
push
jl
jnp
inc
add
xor
add
sub
popa
es
jae
imul
bound
jb
insl
sbb
scas
mov
xor
cmp
jle
pop
mov
xchg
fcmovnb
mov
aad
aas
mov
push
cwtl
inc
mov
in
int
dec
mov
dec
loope
cmc
lcall
ja
dec
xchg
fbld
lcall
mov
push
nop
nop
out
sub
jns
cmp
jle
or
into
xor
xchg
jl
adc
fbstp
stc
mov
fdivs
push
dec
je
mov
imul
gs
scas
cmp
adc
jge
cmove
lds
adc
and
cld
sbb
out
and
test
add
shll
jmp
mov
mov
cmp
add
clc
addb
rcrl
outsb
stos
pusha
aad
cltd
movsb
jae
dec
jg
mov
lcall
jbe
addr16
jae
adc
sub
jg
insb
lds
sbb
pop
xchg
xchg
lods
pusha
sub
sti
adc
or
sahf
push
fwait
lods
pop
pop
inc
lret
dec
xchg
inc
pop
ret
mov
and
dec
xchg
lods
push
mov
movsb
xchg
hlt
jne
shll
or
ss
mov
divb
bound
sub
inc
push
lea
add
sbb
in
movsb
aas
mov
mov
je
ljmp
mov
in
and
test
cltd
cmpsb
cmc
dec
mov
add
loop
add
mov
into
or
loope
hlt
sbb
test
and
std
jmp
movsb
or
xchg
fucomip
pop
data16
dec
sub
xchg
inc
pop
ret
cmp
fsubrl
sbb
lods
cmp
lods
xor
roll
pop
xor
push
mov
sbb
scas
je
jb
push
flds
adc
push
or
mov
mov
jl
dec
clc
push
aad
ds
sub
xchg
pop
in
push
ret
pusha
inc
out
xchg
loopne
fisubrl
sub
test
iret
sub
insl
cmc
les
mov
dec
adc
pop
mov
int3
loop
add
jae
lret
ret
pop
aaa
gs
fdivrl
jae
test
data16
dec
les
int
test
sbb
or
add
dec
jl
cwtl
push
adc
out
push
data16
insb
cmp
fmuls
jnp
pop
sub
push
inc
jnp
xchg
pop
imul
push
lock
and
mov
dec
inc
roll
fprem
dec
jecxz
inc
cmp
mov
cmp
xchg
bound
fnstcw
cmp
mull
in
cltd
cmpsb
cmp
xchg
mov
sub
inc
mulb
inc
mov
pop
mov
jl
jecxz
or
pushf
jp
pop
jg
vpunpckhqdq
jb
movsb
mov
sarb
ret
stos
mov
jnp
xor
mov
mov
mov
sahf
jl
scas
in
cmp
pop
loope
iret
add
sbb
scas
mov
add
xorb
jnp
or
test
lods
mov
inc
nop
mov
dec
out
xchg
fistpl
dec
out
adc
loopne
mov
inc
cwtl
mov
scas
test
inc
test
mov
out
das
adc
xchg
push
lea
mov
cltd
stos
idivb
lds
imul
lret
adc
dec
and
jb
pop
out
dec
movsb
push
jmp
lods
pop
xchg
shrl
xchg
xorl
xchg
js
hlt
sub
pmaxsw
lret
cmpsb
mov
outsl
push
inc
mov
and
lods
aas
jle
aaa
inc
add
loop
rol
into
jne
jmp
insb
cmp
popf
mov
jmp
cld
ret
cld
sbb
sub
das
mov
sub
jb
outsl
dec
lcall
mov
or
aas
movsb
add
mov
mov
dec
das
lcall
jae
jno
movsl
std
adc
add
cmp
mov
adc
cmp
lcall
push
and
pop
cli
or
mov
or
mov
mov
jb
jb
pop
mov
mov
xor
ret
add
into
sbb
jo
mov
shl
inc
sahf
jne
rcrl
jmp
adc
nop
mov
ret
mov
dec
mov
pusha
and
add
inc
mov
dec
repnz
outsb
inc
scas
fld1
sbb
repnz
aam
cs
mov
inc
fidivrs
jns
cli
jl
stos
mov
push
and
sub
add
dec
jle
xor
jg
pop
pop
xchg
mov
mov
sbb
jmp
add
xor
sbb
jnp
js
idiv
outsl
add
mov
or
decl
or
inc
rcrb
out
je
fisttpll
int
imul
xor
mov
cmp
mov
mov
outsb
xor
ljmp
pop
and
lahf
gs
stc
leave
das
loop
repz
lods
mov
movsb
out
sub
jmp
mov
scas
xchg
inc
fmul
out
fdiv
test
out
hlt
jle
push
scas
nop
or
into
pop
repnz
test
pop
das
xor
arpl
jg
push
add
mov
cwtl
dec
rcrl
call
inc
movsb
mov
cmpsl
lret
sub
cmp
push
das
out
pop
ljmp
pop
jno
sbb
arpl
out
inc
xchg
ss
push
test
sub
pop
jns
repnz
xor
sbb
call
push
sbb
sbb
pushf
shrb
mov
mov
xchg
stos
or
fisubrl
fadds
js
out
mov
mov
pop
shl
xchg
out
loop
out
xor
cmp
call
adcb
lds
mov
in
push
movsb
cmc
add
out
dec
movb
out
adc
mov
das
sbb
inc
test
ja
inc
jecxz
add
inc
std
push
daa
and
out
cmp
jp
or
imul
out
call
aad
xor
adcb
mov
fs
push
jo
ljmp
cmc
call
mov
incb
pop
sbb
dec
leave
aaa
ficompl
or
inc
inc
mov
push
dec
and
imul
es
pop
aad
push
dec
aad
add
test
mov
push
add
pop
jg
outsb
or
mov
cli
dec
ret
pop
jecxz
jl
insb
call
stc
int3
clc
je
mov
adc
or
add
imul
movsl
push
dec
jmp
lods
inc
and
fldenv
inc
dec
sub
lahf
ret
pop
adc
enter
sarb
mov
je
test
inc
jne
aas
xor
fdivl
movsl
mov
lods
addb
insb
stos
or
movsb
mov
call
fsubs
jle
fcomps
or
cmp
jg
inc
into
or
rol
imul
insl
add
or
and
addr16
sbb
test
sbb
sub
xor
ss
push
icebp
fs
fs
and
dec
cmpb
enter
push
xchg
inc
pop
aam
ret
je
sub
fs
mov
mov
adc
sub
fcmovb
push
enter
pop
sub
xchg
add
imul
mov
jle
pusha
xor
imul
adc
lds
adc
cmp
cmp
jge
in
jbe
pushf
mov
push
mov
test
cli
shlb
ja
push
push
adc
xchg
dec
fldcw
arpl
lret
inc
adc
pop
mov
fildl
jne
leave
adc
fcoms
jmp
xor
das
mov
daa
mov
mov
arpl
insb
iret
lahf
mov
incl
mov
and
test
jp
mov
adc
sub
jp
adc
pop
movb
cmp
into
dec
outsb
adc
pop
adc
inc
fmull
fldz
insb
movsb
pop
cltd
mov
mov
mov
mov
orl
push
xchg
stos
sbb
lret
cmp
mov
lock
xchg
jnp,pt
push
into
daa
adc
movsl
mov
push
addr16
js
xchg
insl
dec
jne
imul
add
movsb
dec
das
pop
jmp
or
inc
xor
adc
vpaddw
mov
addr16
lods
dec
inc
mov
lock
cli
pop
movsb
cmpsb
jp
repnz
pushl
adc
push
cld
shl
or
mov
pushf
call
out
xor
scas
dec
jbe
push
adc
sti
fld
mov
into
cmpsb
out
ja
mov
jle
int
or
arpl
cmpsl
je
int3
sub
imul
dec
lods
jo
xchg
test
lods
shrl
rcll
pop
push
mov
pop
push
rclb
test
negb
stos
inc
ljmp
pusha
leave
push
mov
pop
jb
and
imul
mov
xchg
cwtl
mov
cmpsl
mov
xchg
mov
mov
std
inc
jne
xchg
enter
clc
movsl
mov
fs
out
mov
xlat
xor
ds
adc
das
movsb
addr16
out
adc
fimull
or
push
clc
jge
std
pushf
add
xchg
jmp
lods
dec
sbb
test
and
scas
enterw
dec
mov
adc
movsl
lods
push
mov
jne
sbb
xchg
insl
cmp
xchg
mov
mov
imul
jb
andb
cld
lret
rcrb
imul
push
dec
sub
push
ss
cltd
outsl
lea
inc
xor
sbb
ja
pop
adc
fwait
jg
loop
xchg
lods
jg
jno
cmp
sbb
test
jmp
xchg
jp
adc
daa
xchg
pop
push
int3
out
push
sub
mov
ret
leave
ret
or
in
adc
ljmp
rolb
das
outsb
mov
inc
call
mov
pop
dec
add
add
and
sbb
mov
xor
jp
xlat
mov
adc
and
xchg
mov
aam
or
inc
lahf
pop
jae
in
mov
xchg
sub
jp
scas
jo
cmp
push
lds
xchg
mov
adc
sti
cmp
idiv
xchg
or
xchg
push
dec
test
lahf
out
or
pusha
sbb
movsb
fsubrl
subb
inc
fadds
lcall
xchg
sbb
aaa
push
xor
sub
push
inc
jg
nop
fldl
dec
and
in
stos
mov
pop
pop
cli
inc
fnstcw
out
pushf
push
mov
adc
mov
mov
clc
lret
pop
insl
cmp
pushf
adc
cmp
bound
jnp
jnp
out
scas
bound
out
fs
cs
testb
jg
daa
fcomps
lret
mov
xchg
std
imul
aas
push
sbb
in
add
into
mov
mov
mov
idivb
loop
mov
xchg
mov
cmp
imul
or
push
jmp
daa
loope
xor
mov
cs
mov
pop
jecxz
jne
cmc
outsb
cmp
cmp
pop
mov
sbb
mov
dec
data16
adc
inc
jae
inc
or
outsl
xor
mov
idivb
movsb
cmpsl
scas
sahf
into
clc
jmp
fisubrl
inc
mov
add
mov
out
lahf
sub
dec
xchg
imul
out
and
addr16
sbb
xchg
in
outsl
jle
mov
mov
or
cwtl
cs
and
add
mov
clc
insl
scas
daa
ja
lods
popa
lahf
jb
mov
jl
push
leave
das
xor
int3
dec
out
imul
push
mov
syscall
xchg
xchg
rorb
andb
push
data16
call
jnp
jo
fldl
js
xchg
repnz
xlat
cmpsb
mov
dec
mov
mov
lock
jbe
or
sti
outsl
cmc
sbb
insl
cs
das
sbb
lock
and
lret
inc
add
fbstp
fs
loop
ja
jl
lldt
repz
shlb
movsb
xor
inc
adc
sbb
lock
mov
jmp
inc
push
sbb
xchg
repz
jbe
lret
dec
push
and
inc
cmpsb
adc
add
in
aaa
inc
push
sub
mov
es
ror
push
sub
sub
rclb
sti
jl
je
dec
add
call
xlat
sub
jmp
stos
fs
test
stos
mov
mov
or
mov
lcall
xor
push
negl
clc
adc
jle
or
ret
jbe
add
fimull
scas
jno
in
sub
cli
pop
xor
fimuls
dec
cmpsl
xchg
push
adc
aad
sub
movsl
pop
sub
pop
enter
fsubrl
cmp
sbb
not
ret
add
sbb
rcrl
pop
jnp
mov
push
in
mov
mov
js
pop
xor
lahf
xlat
fsubrl
push
dec
cs
addr16
dec
sbb
xchg
mov
pop
inc
movsb
ja
and
imul
push
dec
add
or
xor
call
pop
std
mov
mov
movsl
ret
jmp
dec
test
xor
jge
xchg
imul
inc
add
jns
jg
or
pop
repnz
in
inc
fs
jo
out
outsb
inc
popf
ljmp
push
xchg
push
push
shl
movl
arpl
inc
mov
mov
mov
sub
test
mov
dec
pusha
or
addr16
jg
insb
and
mov
in
ss
xor
jb
ljmp
arpl
xchg
sub
imul
xor
in
inc
add
loope
fisubrs
out
das
and
popa
pop
lods
cmp
pop
rcrl
jmp
shll
dec
mov
mov
pop
inc
push
repz
clc
cld
enter
push
sbb
cmp
xchg
lret
dec
dec
les
fs
xchg
inc
sbb
and
in
jno
movsb
mov
cld
lods
xchg
ja
in
inc
mov
scas
dec
jecxz
pop
inc
js
nop
xchg
loope
mov
fidivrs
ss
add
ljmp
lods
nop
mov
mov
add
inc
sub
cs
movsb
nop
inc
shl
fistpll
shrb
and
inc
sbb
movsb
inc
shlb
jmp
cmp
mov
out
push
ds
hlt
loop
aas
pop
mov
sub
xchg
test
pop
flds
lcall
jnp
add
daa
movsb
cmpsl
iret
dec
stos
fs
sub
jle
pop
pop
inc
adc
fsubrs
sub
iret
lea
fsubs
pushf
bound
sub
jl
cmp
out
mov
mov
leave
inc
pop
mov
cmp
mov
test
adc
out
jecxz
jg
lods
movsb
pushf
xor
fs
adc
sub
dec
sub
ds
out
fadd
sbb
mov
inc
ss
je
lahf
ljmp
stc
mov
iret
xchg
mov
jp
movsb
cmp
cmp
fs
rol
lods
mov
jno
jb
out
cmpl
cmp
or
pop
mov
adc
movsb
mov
call
mov
ret
sbbb
inc
xor
popa
add
jge
mov
out
push
sbb
aam
xchg
das
inc
xchg
test
loop
xor
xchg
jecxz
jo
push
fs
inc
out
sub
adc
lock
sub
mov
gs
packssdw
lea
jmp
std
and
inc
mov
xchg
mov
jp
rcr
andl
xor
push
mov
stos
rcll
out
repnz
pcmpeqw
xor
loop
fildll
xchg
push
cmc
test
inc
ljmp
into
outsl
sub
push
and
sahf
into
push
xchg
les
adc
xlat
sub
stc
sbb
cwtl
roll
xorb
stos
jge
or
mov
push
xor
js
outsb
mov
idivb
or
scas
movsb
sbb
ficomps
and
fs
shlb
subl
repnz
push
add
xchg
cmpb
dec
or
lods
vpunpckhwd
std
and
leave
inc
fs
ret
mov
fs
hlt
leave
mov
push
jecxz
sub
movsb
jecxz
jle
mov
or
cmp
sbb
add
insb
insl
add
out
lcall
icebp
pop
ds
inc
gs
mov
pop
adc
fwait
into
xchg
cld
or
ret
push
outsl
rcrl
lea
xlat
inc
lods
jns
or
mov
and
inc
lods
sbb
mov
mov
mov
sahf
adc
jge
loope
mov
cs
bound
popf
rolb
out
jo
es
sub
dec
jb
std
push
ret
das
jno
repnz
mov
fs
cltd
mov
jae
jle
lock
das
pop
xor
repnz
pop
in
fdivl
cltd
lret
adc
in
fsts
cli
in
mov
ljmp
dec
lods
loopne
sbb
imul
xchg
rol
and
in
pusha
jae
jnp
ljmp
push
stos
mov
movsb
test
lock
cli
add
xchg
inc
rcrb
xor
xchg
xor
out
mov
aas
fnstcw
int3
testb
dec
fstpl
xor
outsb
add
loop
aad
into
and
mov
xor
fistpll
je
rcr
mov
sub
fldt
adc
scas
out
jmp
outsl
insb
rcrb
cmp
fsubrl
cwtl
jo
insl
jb
xchg
mov
cmp
inc
push
outsb
pop
mov
adc
pop
lahf
add
pushw
popf
add
aad
add
fimull
int
sub
pushw
jno
test
or
adc
aaa
les
fs
test
cld
and
mov
out
jae
pop
into
sbb
jecxz
das
fldenv
xchg
fsubr
adc
dec
cmp
xchg
jo
inc
movsb
jl
test
stos
xor
pop
rclb
cmpsl
or
dec
mov
fildll
arpl
cmp
mov
outsb
cmpsl
cmc
out
movsb
xor
dec
insl
addr16
scas
jae
fs
mov
push
mov
mov
in
loop
pop
jl
adc
inc
and
cwtl
arpl
call
sub
xchg
ret
or
sbb
jmp
push
pop
pop
xchg
arpl
aas
cs
dec
dec
xor
iret
inc
mov
ficoml
inc
cltd
and
sub
cld
push
and
inc
sub
cwtl
out
std
movsb
xor
lret
xor
dec
jno
repnz
jae
or
jp
ret
jl
sti
cmp
out
aas
fistl
mov
leave
sub
in
lret
into
mov
sbb
fisubrs
push
adc
lods
fs
cmpsl
sti
js
lret
icebp
jle
mov
andb
rcrb
das
insl
xor
or
scas
add
and
jnp
lcall
inc
call
jmp
cmp
jge
add
jae
pushf
mov
mov
jne
pop
mov
outsl
mov
and
or
orl
addr16
dec
lock
sub
pusha
fadds
lcall
in
pushf
inc
inc
ljmp
pop
pop
loopne
in
loopne
ljmp
dec
std
adc
dec
mov
jl
jle
xchg
rorb
xchg
sbbb
mov
push
dec
adc
rolb
xchg
fs
xchg
push
push
into
mov
je
stos
or
movsb
sbb
lret
gs
sti
notb
popa
outsl
inc
xchg
inc
fucomip
ja
push
movsb
push
dec
and
stc
imul
cmp
mov
fildll
inc
fidivl
std
pop
fiadds
cli
or
sbb
push
mov
jge
jg
jae
jbe
sbb
mov
bound
mov
sbb
jo
mov
mov
fwait
jo
jmp
out
lods
xchg
ds
push
mov
leave
mov
mov
stos
pop
mov
std
sbb
sbb
sub
inc
lea
mov
add
pop
mov
pop
sbb
gs
pop
adc
and
ljmp
jns
xchg
repz
sub
call
sbb
cld
cmc
lcall
test
notl
cmpsb
call
xchg
adc
mov
test
out
mov
movsb
fs
enter
add
mov
fldcw
mov
jae
sbb
or
inc
dec
and
shl
fidivl
shrb
inc
adc
adc
push
pop
cmp
lods
outsl
lds
jb
les
push
cmpsb
and
push
out
popf
inc
mov
test
cmc
repnz
cmp
mov
or
fmull
repnz
pop
dec
lcall
ret
pop
push
and
inc
mov
add
out
arpl
adc
sbb
fbld
adc
ss
stos
lods
xor
inc
in
dec
lods
movsb
lret
push
out
cli
adc
mov
push
mov
shrb
sbb
icebp
imul
xor
insb
movsb
pop
or
out
cld
fmull
adc
inc
sbb
xchg
mov
xchg
cli
data16
cmp
ds
xchg
pop
unpcklps
int3
cmp
insl
xchg
lods
lret
add
jb
or
pushl
and
mov
in
jmp
mov
movsl
jns
jnp
mov
imul
jp
adc
aas
lock
jp
xor
inc
lods
pop
or
mov
push
clc
xchg
mov
mov
sub
out
inc
pop
xlat
pushf
aas
sbb
xchg
daa
gs
ljmp
and
rcr
mov
fstl
loopne
les
call
pop
jg
dec
sub
jmp
cld
insl
rol
add
movsb
iret
rorl
daa
cmp
xor
imul
out
add
cmpsl
aas
ret
sub
mov
test
cmpsl
outsl
add
mov
sbb
mov
xchg
fnsave
stos
inc
jp
decb
pop
or
dec
aas
sub
jae
sbb
movsl
ja
mov
popa
sub
into
jg
in
cli
sbb
lahf
mov
jno
mov
into
jge
addr16
push
push
int3
sbb
dec
out
or
dec
nop
loop
jp
adc
pop
or
dec
mov
push
cld
jne
xchg
dec
cwtl
lret
andb
fsubrs
jbe,pt
std
push
push
sti
sahf
fs
fdivp
xchg
in
add
push
enter
mov
int
cli
das
adc
sub
mov
add
xor
out
jne
sub
stos
adc
sbb
shl
ja
jb
in
mov
lds
mov
hlt
sub
pop
xchg
stc
sub
ja
fs
and
cmp
ja
call
call
push
mov
fistl
movsb
lods
jnp
mov
sbb
clc
xchg
mov
cmpl
and
js
xchg
fs
mov
cmp
mov
stos
mov
jmp
add
inc
add
xchg
es
jmp
inc
scas
popa
pushf
jo
gs
add
pop
les
push
lods
cmp
push
dec
adc
xor
mov
arpl
rol
or
icebp
dec
jae
inc
or
xchg
cli
popf
xchg
mov
lahf
lret
cmp
cmp
daa
adc
stos
ljmp
call
testb
test
movsb
adc
adc
nop
mov
lcall
mov
mov
xor
lea
call
jecxz
lds
mov
push
enter
dec
xor
inc
adc
out
pop
push
sahf
inc
ja
sbb
fs
mov
cmp
jle
xchg
push
mov
fildl
shll
bound
es
insb
xchg
stos
jbe
lods
clc
add
jmp
cltd
sub
js
and
sub
movsb
add
jae
lret
ljmp
xor
repnz
loop
cmp
pop
stc
pop
pop
mov
mov
test
xchg
js
in
in
mov
inc
jns
push
pop
add
mov
jae
xchg
lret
aam
lock
or
addb
add
into
rolb
mov
sahf
lea
or
int3
outsb
xchg
jnp
sub
inc
mov
les
lock
movsl
call
push
rcr
jnp
push
insl
in
lods
mov
lret
push
aad
jns
inc
cmp
lcall
or
pop
sub
testb
jge
dec
dec
jmp
xor
insb
ljmp
sar
xchg
jnp
lcall
je
push
fdivs
cli
scas
cmpsl
adc
xlat
cmp
into
jae
adc
lcall
inc
movsb
dec
fcomps
or
dec
movsb
xor
loop
stos
js
pop
pop
faddp
jns
cld
into
mov
lret
push
add
ja
xlat
adc
out
xor
add
fldcw
mov
mov
pop
pop
movsb
testl
jne
mov
or
arpl
mov
scas
jmp
pop
mulb
fbld
lods
push
mov
imul
fdivs
xor
out
xor
scas
push
add
imul
inc
mov
cmp
data16
mov
push
rorl
mov
inc
jmp
pop
pop
sbb
ja
fs
adc
fs
fs
mov
jae
jnp
pusha
adcb
or
inc
adc
or
inc
jecxz
and
in
sbb
lds
in
dec
sbb
pop
xor
pop
adc
or
mov
jbe
lahf
jnp
cld
jl
in
push
dec
add
inc
stos
andl
inc
jmp
mov
pop
int
insl
iret
sti
outsb
dec
movsl
mov
and
inc
stos
and
fidivl
loope
mov
and
and
stc
jne
rcr
xchg
dec
and
adc
cmc
jge
adc
dec
mov
dec
and
popa
mov
push
insb
cld
insb
aas
aam
mov
adc
pop
mov
xchg
ljmp
out
dec
adcb
int3
push
cmp
sbb
cmp
push
fcmovnu
test
mov
negl
sub
fnstcw
outsl
mov
sub
dec
inc
pop
adcl
gs
int3
out
sbbl
out
gs
jg
cld
mov
xor
ljmp
popa
mov
xchg
cmpsl
je
lcall
ljmp
lods
ret
les
adc
or
push
ret
call
mov
sbb
cltd
addr16
sub
aas
clc
adc
xor
pop
sbb
push
fs
fsubs
lods
fcmovu
xor
nop
and
pop
or
stc
popa
pop
out
push
jl
or
or
inc
xlat
inc
add
dec
jecxz
fisubs
jge
sub
cltd
pop
mov
add
xchg
lahf
jno
imul
lds
outsl
xorl
addr16
adc
xchg
into
inc
addl
dec
test
ljmp
repnz
sub
repz
push
aas
mov
fs
test
add
loopne
pop
mov
aas
out
inc
cmp
lret
xchg
loope
stos
mov
rorb
outsb
outsl
xchg
loope
and
sub
sbb
mov
jp
test
adc
test
das
ss
adc
push
jecxz
fstp
xchg
cli
dec
sbb
mov
cld
xchg
jg
inc
imul
add
repz
into
pop
jnp
je
addr16
lret
rorb
jp
push
test
jbe
mov
clc
adc
push
xchg
je
and
cli
sbb
push
jae
dec
and
push
push
ljmp
fdivrl
mov
jb
push
bnd
das
into
cmc
jle
cmp
mov
inc
insb
add
mull
xchg
dec
dec
flds
jbe
lds
into
outsb
ljmp
mov
fimuls
jge
stos
imul
xor
mov
add
shlb
add
dec
rcr
pushf
sub
push
mov
add
xchg
outsb
mov
inc
mov
jnp
movsb
mov
enter
jbe
insb
and
ss
pusha
test
jmp
cmp
jg
imul
xchg
jmp
mov
jmp
insl
lods
outsb
aas
cwtl
fs
lahf
mov
les
test
gs
sub
pop
xor
clc
int3
das
push
sub
pop
movsb
add
cli
xor
xor
adc
sbb
enter
mov
das
loope
add
arpl
into
cmp
sti
fdivr
cmp
inc
mov
movsb
xchg
mov
in
cmp
xchg
cwtl
out
das
dec
mov
jns
testb
mov
jns
xor
and
pop
sub
inc
popa
sbb
mov
movsb
cltd
es
jmp
jecxz
aam
lcall
testb
insl
inc
jle
pop
xor
pop
jle
rolb
push
pushf
pop
iret
out
push
jb
add
sti
cli
push
stc
test
add
sbb
out
movsb
inc
cmpb
std
aam
outsb
outsb
fs
mov
test
into
cwtl
inc
sub
repz
jg
jle
pop
ror
mov
add
hlt
push
adc
sbb
fcoms
xor
mov
cs
lds
mov
sti
lcall
nop
aam
lret
fs
daa
add
xchg
inc
mov
xor
mov
mov
in
mov
in
sbb
lods
xchg
sbb
xchg
mov
add
stos
and
movsb
popa
cmp
xor
cmp
subb
test
dec
ljmp
imul
icebp
or
adc
lcall
jbe
push
int3
xchg
ds
jns
arpl
jg
in
out
and
ljmp
and
dec
pop
lods
clc
pop
in
lcall
ljmp
or
dec
sbb
pop
pop
or
adc
std
popa
out
loope
inc
adc
movsb
and
inc
or
cmp
sbb
jmp
lret
sbb
lahf
jno
jg
jns
sbb
push
cmp
int
sbb
fs
cltd
sub
and
jb
or
xor
inc
inc
dec
mov
int
enter
pop
call
adc
std
mov
or
push
mov
jg
imul
pop
lods
mov
cmpsl
lds
movsb
lret
mov
stos
or
fistps
xchg
iret
outsb
cltd
imul
popf
stos
sub
in
and
sbb
andb
mov
dec
pop
xchg
das
movsb
ficomps
or
fists
sbb
fdivp
sub
jp
aad
call
jb
fs
xchg
sahf
rcl
pop
insl
movsl
stc
lret
dec
sbb
and
jge
ja
mov
xchg
adc
jne
insb
jecxz
mov
cld
xchg
pop
bnd
mov
int
lret
gs
int
cmp
xchg
jb
inc
cli
or
mov
jae
lret
inc
push
xchg
into
mov
fsubl
fdivp
pop
jecxz
or
jb
or
es
iret
ljmp
pop
or
nop
outsb
call
insl
sarl
std
push
jp
or
cltd
pop
dec
add
cmp
jp
xchg
jle
push
arpl
mov
lods
or
movsb
fdivrp
pop
mov
cltd
hlt
push
lods
les
sbbb
sbbb
mov
sub
jo
shl
std
and
dec
iret
inc
andb
mov
adc
out
fs
xchg
scas
cmp
imul
adc
inc
out
sub
into
sahf
or
cmc
jns
fstl
lahf
dec
fadds
push
cmpsl
sbb
out
fisubrl
in
call
repnz
sub
add
shrb
mov
in
dec
icebp
daa
jne
inc
cmp
or
jae
jg
jg
inc
inc
adc
std
add
mov
orb
inc
push
fs
sub
pop
push
push
das
mov
pop
jg
add
mov
dec
mov
dec
mull
ficoml
stos
push
xor
and
std
out
cltd
loope
dec
sahf
call
in
jb
jg
or
into
adc
mov
push
mov
lret
inc
pop
add
sarb
xor
sahf
aam
pop
ret
jge
lock
dec
push
fldl
xlat
sbb
aam
jmp
cmp
decl
loopne
jl
mov
adc
jp
cmp
movl
aaa
mov
movsb
je
leave
in
js
in
shll
adc
sub
and
out
lahf
mov
mov
xchg
in
xor
dec
sahf
adc
test
push
ss
push
stos
imul
test
inc
jne
cld
lcall
inc
movsb
incb
jg
fiadds
js
repnz
jno
loope
sahf
jl
mov
xchg
and
out
inc
test
dec
fs
fadd
mov
ret
jecxz
adc
test
push
fdivs
sub
mov
mov
jle
lds
loope
add
inc
pop
mov
add
or
sti
inc
push
in
repnz
aas
and
bound
jb
fnstenv
lret
sub
or
dec
and
xor
inc
shll
xor
mov
sbb
dec
fwait
pop
clc
cmc
mov
cld
cmpl
jl
lods
jmp
lods
jecxz
mov
mov
fstpt
pop
aad
add
test
insb
add
insl
mov
mov
fcompl
shlb
mov
add
ret
sub
mov
cmp
jno
ljmp
or
cmp
jle
int
repz
arpl
mov
cld
adc
rclb
ljmp
jl
aaa
sub
and
outsl
mov
cli
ja
add
jnp
adc
popf
sub
test
ljmp
ss
not
adc
lar
push
sarb
ret
call
stos
mov
out
out
in
add
call
in
imul
dec
movsb
jp
push
push
push
fwait
outsl
mov
xor
lret
call
sbb
enter
jbe
push
jge
or
fimuls
and
adc
stc
fwait
in
outsb
lret
jnp
mov
shll
outsl
pop
sbb
std
je
mov
ror
das
jg
out
insl
sbb
lret
sub
inc
cld
sub
out
in
inc
out
xchg
or
fdivp
xchg
inc
cmpb
int3
cmc
jmp
ss
call
push
cld
xchg
movsb
sub
sub
dec
aaa
test
push
aas
fcomps
mov
into
lea
xchg
lods
dec
out
in
xchg
icebp
sub
int3
add
mov
test
jg
jmp
nop
jo
out
flds
jge
pop
mov
xlat
jle
or
inc
push
bound
xor
push
mov
test
add
adc
loop
fmull
addb
testb
cmc
aad
xlat
xchg
ljmp
push
scas
ja
fsubrs
pushf
lcall
in
ss
add
push
push
cmp
jecxz
dec
aas
push
mov
test
or
insb
cmp
out
xlat
sub
jecxz
jmp
fildll
pop
pusha
scas
fidivs
or
and
mov
pusha
xor
fucomip
jl
xchg
pop
cmc
sub
lea
mov
pusha
es
mov
inc
xchg
popf
mov
aad
add
fnsave
push
jae
push
fwait
pop
pop
dec
pop
insl
sub
xchg
int3
pop
mov
xlat
push
sar
mov
icebp
repnz
dec
jbe
dec
clc
sub
sbb
inc
bswap
jns
mov
sahf
data16
push
adc
cmpsb
test
mov
shlb
stc
aad
cmc
mov
insl
sub
nop
mov
jo
in
imul
cmp
pop
dec
jl
cmp
or
bnd
fcomps
out
jge
insl
xor
push
ja
jo
addr16
sub
xchg
jns
popa
mov
stos
insl
and
imul
pop
fstpt
fldenv
dec
sar
jnp
add
divb
mov
dec
pop
inc
push
pop
push
out
sub
adc
push
dec
es
js
jmp
push
pop
inc
dec
psubw
jg
in
out
sub
fistps
je
pop
insl
in
xchg
and
negl
imul
data16
pop
push
dec
loopne
mov
ja
dec
test
adc
adc
fcomip
mov
inc
cli
push
mov
aad
orl
fisubrl
or
jp,pt
fiadds
jae
lods
jnp
insl
sub
add
xchg
fcmove
inc
dec
jbe
mov
push
je
jl
out
js
lods
ret
divl
imul
in
stos
jo
pop
cmp
insb
test
fs
pop
leave
mov
ljmp
mov
test
jp
push
xor
cmp
or
jo
cmp
jl
add
sahf
pop
cld
insb
outsl
repz
dec
xchg
clc
dec
jb
movsl
push
jo
adc
pop
jp
lahf
jns
imulb
dec
adc
insl
aam
cwtl
insb
mov
mov
mov
jo
xchg
scas
xchg
outsl
jge
jge
jg
test
jl
jl
cltd
dec
jmp
push
and
addr16
cli
jmp
fcmovne
pop
pushf
lcall
add
sar
icebp
xlat
adc
test
arpl
insl
jmp
sbb
mov
scas
fnstcw
jmp
repnz
icebp
or
push
out
jae
push
in
jecxz
jae
sub
cwtl
mov
sub
jp
jle
fiadds
jo
mov
cli
push
ljmp
push
jp
inc
stos
xchg
je
movsb
push
jle
insl
int
fdivrl
pop
inc
popf
jmp
jo
stos
jo
out
xchg
mov
insb
add
sub
sbb
dec
jg
jbe
adc
pop
jle
insl
add
pusha
mov
imul
insb
insb
lock
cs
jo
mov
push
cwtl
jle
inc
cmp
or
rcr
jne
dec
inc
xchg
mov
outsl
push
jae
inc
dec
imul
ja
ss
adc
push
dec
jle
jae
lods
and
push
push
push
fnstsw
sub
jp
fimull
dec
ret
iret
adc
lret
pop
movb
mov
in
pop
lcall
push
lcall
hlt
jge
jp
ret
or
mov
xchg
inc
mov
out
out
pop
or
jnp
insl
stos
out
and
dec
push
push
dec
or
or
ret
xor
mov
test
jl
pusha
and
adc
insl
call
xchg
imul
pop
test
inc
scas
insb
jge
pop
stos
outsl
adc
mov
imul
arpl
jae
jne
inc
inc
add
jnp
pop
xor
lret
cld
jne
jo
xor
int3
rol
ljmp
pop
cli
or
stos
mov
fisubrs
add
data16
test
enter
arpl
pusha
jp
push
jp
inc
and
insl
imul
test
push
dec
jnp
sahf
icebp
in
sarb
js
sarl
jae
cltd
pop
or
dec
mov
insl
adc
mov
fwait
xchg
insl
dec
test
addb
push
addr16
mov
loop
push
jg
data16
addr16
outsl
xor
pop
lahf
xchg
jne
out
imul
gs
in
jnp
lret
jo
dec
jle
jo
out
fiaddl
shll
push
mov
add
mov
pop
je
jg
imul
push
or
xlat
shlb
outsb
pushf
imul
mov
sbb
cli
push
mov
js
ficoml
insb
outsb
jns
jno
cwtl
sbb
jp
mov
ret
dec
inc
jbe
mov
loope
cmpsl
test
cld
jp
shlb
dec
push
sub
clc
outsb
pop
loopne
mov
jae
jbe
mov
mov
stos
mov
loop
shrb
inc
out
jb
pop
pop
mov
dec
inc
jle
insl
subb
pop
aaa
jbe
xchg
jg
arpl
push
imul
sub
rcll
jnp
jge,pn
das
stc
xchg
pop
jle
jae
mov
push
rcr
fnstenv
lcall
jl
cld
das
or
js
dec
adc
jp
insb
loopne
xor
movsl
adc
je
adc
jle
lods
mov
inc
sarb
addr16
lods
lret
mov
insl
jnp
cwtl
mov
insl
clc
jmp
inc
pop
dec
imul
push
or
dec
jl
notb
enter
loopne
ja
gs
cwtl
mov
cmp
mov
lds
push
loop
or
jp
testb
and
and
pop
cmp
or
sbb
and
jg
pusha
mov
out
or
ret
xchg
outsb
jnp
mov
xchg
inc
push
mov
icebp
jecxz
jp
in
outsl
mov
jbe
repz
dec
dec
xlat
jo
inc
xchg
pop
jmp
pusha
lret
fistpl
push
fs
inc
in
std
ret
test
or
add
mov
insb
in
out
jl
push
mov
dec
pop
stos
outsl
jo
or
dec
out
mov
xchg
mov
adc
pop
mov
cmp
mov
outsl
cmp
jo
adcl
jle
jbe
lods
mov
inc
inc
dec
sub
sub
dec
dec
jl
inc
sbb
add
leave
xor
adc
fisttpl
mov
push
roll
jbe
dec
jae
lods
adc
fisubrs
nop
test
sub
fistl
cmp
jp
sbb
or
les
fiadds
mov
inc
les
cwtl
xor
stos
mov
dec
xchg
jp
fbstp
into
outsb
sub
and
inc
hlt
fs
and
subb
movsb
pop
or
fildl
or
in
sub
imul
and
or
subb
subl
xchg
popf
xlat
fistps
inc
sub
mov
cltd
pop
ss
arpl
inc
fisubrl
out
pop
jb
insl
movsb
mov
mov
outsb
lahf
push
in
or
pushf
loop
and
fs
xchg
or
jmp
jmp
inc
insl
and
xor
lock
icebp
sub
mov
nop
cwtl
sub
shr
adcl
mov
xchg
jbe
in
sbb
ljmp
or
test
data16
jno
in
repnz
jbe
mov
insb
fildll
rcll
xchg
add
ret
jo
fiaddl
sbb
addl
imul
insl
jmp
in
and
lods
movsb
jmp
call
or
push
jno
and
and
lahf
insl
push
add
cmpsb
out
sub
mov
pop
dec
sbb
es
sbb
fisttpll
lcall
in
pop
cltd
xchg
pop
inc
cmpsb
sbb
stos
mov
fsts
pop
ss
rclb
fs
movsb
fildll
inc
ret
movsl
out
aas
inc
mov
mov
and
push
cld
fmuls
orl
dec
hlt
cltd
xor
and
add
popl
xchg
lea
or
jg
lds
or
inc
sub
negb
dec
enter
test
iret
clc
mov
movsb
js
frstor
pop
ret
ret
leave
cs
add
int3
sar
push
mov
pop
repz
jecxz
sbb
movsb
dec
nop
cmp
aas
push
cmp
in
inc
decb
push
add
and
sbb
shrb
cmc
std
xchg
test
xchg
ja
repnz
push
out
fs
sbbb
pop
mov
cmp
test
cld
cmp
xor
clc
cmpl
in
mov
mov
sbb
imul
jae
out
imul
aas
sbb
fsubrp
scas
xor
cs
and
sub
bound
leave
cmp
ret
push
stos
repnz
int3
add
or
loop
jno
and
out
fs
cmpl
movsb
jae
xchg
inc
or
cmp
inc
lret
lods
add
imul
mov
jle
inc
fnsave
xchg
in
cld
inc
gs
xchg
imul
adc
movsb
jae
cwtl
xchg
push
lret
aam
xchg
dec
xchg
push
lret
jecxz
ret
mov
add
in
bound
xchg
test
or
dec
xchg
cld
inc
fimull
fwait
repnz
mov
xchg
stos
xchg
enter
cwtl
icebp
fs
imul
in
js
movsb
cs
cli
aas
call
sub
and
add
js
jb
movsb
mov
test
xchg
shll
movsl
push
push
into
lods
enter
outsl
sub
adc
and
xor
add
push
sbb
dec
in
mov
sbb
fwait
mov
sbb
movsb
jbe
or
scas
add
int
icebp
push
mov
inc
lcall
movsb
xchg
push
mov
pop
lds
iret
insl
imul
sub
scas
mov
outsb
sub
sbb
mov
jbe
int
ljmp
pop
imul
sub
xchg
inc
and
or
fld
push
icebp
pop
push
mov
xchg
shll
orb
dec
jmp
popf
fs
mov
inc
call
mov
mov
mov
lahf
faddl
cmp
xlat
lods
nop
jmp
jno
pop
add
cmc
xlat
std
add
cmp
xchg
xchg
jge
shll
out
jmp
js
xor
push
call
cld
stos
out
jae
add
jo
dec
cmpsb
sbb
dec
shlb
movsb
rorb
xor
pop
std
cmp
and
fisubs
mov
inc
sbb
add
sub
dec
pusha
lds
jge
xor
sbbb
stos
pop
xchg
xchg
or
inc
aad
sbb
adc
or
aas
aaa
insl
rcrl
cmpsb
insl
xor
lock
xor
incl
push
clc
inc
stos
pop
push
mov
or
mov
push
popl
lods
push
push
imul
jge
imul
ja
lret
mov
loop
and
pop
sub
add
xchg
repnz
inc
pushf
adc
leave
jno
push
pop
enter
add
mov
outsl
cmp
mov
pusha
lret
add
pop
sub
cmc
or
sbb
pop
in
inc
jns
data16
sarl
pusha
fnstenv
sub
pop
pop
stos
fsubrs
and
push
add
inc
ss
xor
push
movsb
fwait
adc
cld
adc
cmp
jmp
dec
dec
push
ja
fsubrs
jb
out
pop
aaa
push
or
xor
fldenv
inc
xchg
jnp
dec
insl
mov
int
cld
cmp
adc
jo
xor
loop
jb
repz
sbb
cmp
push
sbb
jge
loop
fcmove
lahf
xchg
mov
decb
imul
fsubrl
cli
xor
fistps
sahf
rorl
xchg
cmc
addr16
inc
mov
xchg
xor
jmp
jo
push
fs
movaps
sbb
xchg
addr16
pop
imul
dec
movsb
lcall
inc
lock
fs
lock
xor
adc
je
push
lret
add
mov
push
repz
mov
aas
push
dec
inc
or
aad
inc
sub
cld
sbb
jl
inc
bound
inc
pop
push
lods
lahf
lret
insl
dec
cmp
add
inc
jns
sub
out
sub
push
add
imul
loop
int
je
outsl
sub
mov
imulb
push
movsl
fstpt
out
mov
pop
jmp
rolb
jl
out
ljmp
mov
sahf
fs
adc
sub
sahf
lods
jbe
mov
push
push
lret
out
sub
movsb
mov
cmc
jne
popa
inc
iret
xchg
dec
mov
cli
and
and
stos
push
pop
xchg
fldl
addr16
fistpll
mov
test
push
flds
in
fs
jle
xchg
das
and
dec
cltd
out
sub
fidivrl
ret
fs
inc
or
fistpll
std
sub
dec
xor
stos
lods
and
ljmp
xor
mov
pop
and
es
adc
mov
inc
arpl
dec
jae
inc
add
and
roll
sbb
dec
fstl
xchg
rolb
imull
dec
fiaddl
push
jmp
pop
pop
in
cli
inc
jb
jne
pop
sbb
fstpt
lock
gs
or
mov
bndstx
movsb
xchg
aas
lcall
cltd
jp
inc
push
fidivs
jbe
sahf
sahf
inc
js
fmul
dec
je
fidivl
out
mov
inc
dec
jp
mov
dec
aas
inc
xchg
and
shrb
orl
adc
stos
dec
sbbb
or
mov
jle
loopne
and
jne
ljmp
or
or
sbb
fs
lret
sub
pop
cltd
nop
in
mov
cli
fbld
or
xchg
bound
adc
icebp
push
cmp
fsubr
stos
inc
scas
loopne
cmpsl
mov
lea
les
cld
mov
pusha
pop
scas
sbb
adc
jo
dec
jle
adc
pop
sbb
cs
sub
push
fiadds
sbb
dec
popl
mov
imul
icebp
xchg
orb
movsl
jle
insb
rcrb
or
mov
call
in
inc
mov
imul
or
sbb
insb
data16
ret
pusha
xchg
repnz
pushf
into
cmp
ficoml
or
out
in
movsb
stos
adc
pushf
and
test
jne
outsb
jnp
jle
cltd
out
nop
or
mov
sub
inc
mov
mov
sbb
je
insl
dec
notb
ss
jmp
sub
pop
rcrl
or
movsb
scas
popa
push
mov
adcb
or
test
dec
filds
ret
mov
mov
mov
arpl
je
jp
loope
push
and
cs
int
mov
shr
imul
sbb
xchg
xchg
sbb
lret
or
jp
outsl
rolb
cmp
inc
das
iret
push
jl
imul
mov
pop
lock
cmc
lea
stos
sub
push
jp
cmp
imul
xor
mov
jo
daa
ret
sbb
xchg
sub
data16
push
xor
jmp
rolb
jne
mov
fdiv
test
push
lea
sbb
jno
in
out
imul
dec
fs
xchg
pop
test
inc
and
je
imul
add
inc
jae
push
sub
mov
shr
pop
adc
sahf
mov
mov
sub
xor
test
dec
out
cmpsl
cwtl
mov
cltd
imul
sahf
push
call
in
jne
or
fs
push
jae
and
jecxz
insl
std
fdivp
push
movsb
cmp
jns,pt
mov
sub
loop
lea
pop
sbb
add
jmp
ss
mov
pop
and
sbb
inc
negl
jl
push
loop
ljmp
mov
xchg
daa
xlat
or
popa
adc
addr16
inc
in
dec
pmulhuw
adc
mov
add
orl
add
sarb
inc
xchg
mov
xchg
sbb
ja
pushf
test
out
dec
or
sub
pop
divl
aaa
sbb
cmp
stos
pushf
push
jne
jge
int
push
sub
xor
dec
jmp
cs
out
pop
cmc
shl
dec
sar
pop
jmp
inc
pop
mov
clc
imul
dec
lock
lods
lds
testb
out
xor
mov
sbbb
sbbb
stos
or
mov
sbb
inc
jo
enter
jns
sbb
jecxz
xor
shrl
sbb
push
rcrb
push
jle
inc
mov
jb
insb
cltd
jne
push
fs
adc
sub
or
fmul
pop
sbb
add
in
mov
pop
sub
dec
ja
test
lcall
es
push
iret
mov
xchg
gs
movsb
sub
fs
cs
fs
pusha
aas
fcom
xor
aad
fsubl
push
pushf
fsubr
jle
pop
jo
int3
nop
jne
test
hlt
stos
pop
sbb
cmp
push
jne
pop
mov
pop
outsb
imul
movsl
cmp
sub
ljmp
ljmp
mov
pop
cltd
sub
dec
cmc
fs
mov
dec
jge
les
cmp
sbb
sbb
jns
imul
inc
dec
adc
lods
xor
mov
and
push
mov
mov
in
movsl
xchg
inc
std
enter
cld
imul
iret
inc
xchg
inc
das
movsb
stos
fs
aas
xchg
dec
mov
popw
dec
sbb
inc
data16
aas
movsb
lods
inc
test
stos
adc
jecxz
aas
push
xor
or
or
or
rcl
xchg
ret
mov
into
and
jb
nop
mov
cmpsl
fmull
ficompl
xchg
pusha
addr16
push
mov
out
sbb
ret
inc
mov
stos
popa
adc
insl
fcmovbe
cltd
movsb
bound
out
sub
dec
ljmp
mov
imul
mov
sarb
rorb
repnz
mov
shlb
das
inc
push
jnp
into
adc
je
test
mov
insl
pop
jl
les
dec
lret
mov
xchg
adc
stos
mov
push
xchg
add
pop
test
in
cmc
movsl
mov
test
fldcw
and
pop
mov
sub
and
mov
pop
and
je
cmp
xchg
pop
push
cmc
pop
pop
bnd
outsb
out
jg
mov
pusha
jno
addr16
push
mov
addb
and
js
call
dec
pusha
das
fs
cmp
call
sub
dec
mov
cmpsl
ficoml
enter
jle
xchg
xchg
jnp
ljmp
jmp
mov
mov
js
and
push
loopne
sbb
insb
pop
jmp
sub
leave
jnp
sbb
aam
outsb
adc
pop
test
out
rcll
andb
imul
movsb
sub
cmp
dec
push
insb
jb
mov
rorl
sub
sbb
arpl
movsb
mov
sti
sub
and
jno
push
iret
cltd
sbb
movsb
jb
xchg
lods
push
in
cmpsl
mov
mov
outsl
inc
mov
inc
cmp
fisttpl
arpl
and
loopne
out
aad
in
xchg
dec
fsubl
fs
filds
lea
mov
mov
lock
mov
dec
sub
out
sahf
popa
sub
mov
xor
aad
adc
aam
xor
jle
pop
bound
inc
pop
outsl
mov
pushf
jg
jle
adc
imulb
ss
jle
adc
jecxz
jmp
sub
movsb
gs
cli
xchg
cwtl
call
inc
imul
jb
inc
mov
mov
lahf
std
and
pop
jle
into
sub
inc
pushf
inc
and
je
fs
pop
insb
pop
imul
mov
mov
iret
cmp
mov
mov
mov
mov
add
fcmovnu
dec
and
jge
in
fwait
adc
imul
add
pop
jle
ror
shr
iret
loop
mov
add
scas
sub
cli
insl
jg
gs
inc
das
fs
daa
xchg
in
insl
inc
pushf
xlat
push
add
icebp
lcall
fsubs
push
pop
add
rcrb
das
sub
addr16
shll
jne
std
sbb
cmp
ret
mov
cmpsb
sub
or
nop
nop
or
in
in
sub
or
test
mov
aad
adc
mov
daa
test
fs
stos
mov
sbb
and
mov
stc
adc
sahf
sbb
pop
rep
sub
xor
dec
jnp
out
cltd
ds
out
lret
mov
clc
mov
sub
mov
mov
cmpsb
jns
lods
sbb
repnz
jb
dec
sbb
fidivrl
cmp
icebp
pop
cwtl
data16
jmp
mov
daa
and
nop
xor
ss
lahf
outsl
ljmp
push
test
cld
sbb
jp
jb
jne
mov
mov
push
push
ret
cltd
add
cmp
mov
xor
or
cmp
mov
sbb
inc
xchg
int3
loop
mov
lods
pop
adc
jle
out
icebp
mov
cmpsb
ret
xlat
pop
imul
lret
int
mov
int3
cwtl
adc
cmpsb
adc
mov
mov
add
pop
inc
lahf
add
mov
out
add
in
ror
ret
dec
int
stos
xchg
mov
cld
fistpll
dec
cmp
mov
sbb
xchg
ja
pop
mov
loope
ja
divb
push
lahf
dec
jl
fldcw
out
std
mov
leave
dec
push
xor
mov
ljmp
jne
outsb
or
mov
mov
cld
pop
fcoms
fs
pop
sbb
loope
mov
push
push
test
or
int3
mov
xor
jmp
jae
lret
add
outsl
addr16
out
test
lret
out
out
sbb
lods
fisttpl
mov
fwait
cmp
sub
inc
add
cmp
aas
test
movsb
xor
adc
xchg
cmp
mov
push
data16
dec
jmp
std
imul
es
mov
pop
in
movsb
leave
stos
pop
pop
lea
les
adc
lds
pop
xor
int
addl
dec
ja
sahf
negb
in
shrl
fnstenv
sub
and
ret
stos
sbb
ljmp
test
xchg
add
sub
inc
dec
push
dec
stc
movsb
mov
push
xor
dec
in
nop
sub
mov
pop
dec
inc
cmpsb
stc
jmp
fwait
stos
aas
inc
add
push
xchg
sbbl
jg
scas
xchg
dec
mov
jne
fsubl
je
lret
xchg
test
cmp
in
or
jne
and
cmp
cltd
mov
movsb
shl
mov
ficomps
mov
jmp
scas
jb
es
jge
xchg
or
lea
sub
cmp
jne
fs
dec
aam
and
mov
ret
sahf
ret
inc
cmp
jno
fnsave
lea
inc
cmc
push
mov
push
xor
push
stos
pop
leave
lods
dec
inc
sub
out
std
fwait
push
jne
sub
mov
rorb
out
les
in
mov
fidivrs
ret
adc
mov
insb
pop
dec
push
frstor
jle
pop
pushf
test
inc
movsl
push
aam
ss
bswap
movsl
pushl
push
push
outsl
jp
jp
inc
add
jae
imul
mov
inc
pop
sti
ljmp
sbb
clc
jbe
pop
and
and
sbb
jne
mov
push
mov
ret
push
jo
push
movsl
add
movsb
mov
mov
hlt
xor
hlt
aaa
sub
push
add
movsb
lcall
xor
mov
movsb
jns,pn
adc
push
clc
imul
push
push
insb
mov
fs
rcrl
imul
fwait
mov
std
call
push
pop
sbb
add
ljmp
movsb
lahf
into
sbb
jnp
popf
psubw
xchg
test
ret
fists
mov
pop
mov
cmp
addr16
outsl
out
shll
sub
mov
ret
push
cmp
jbe
sub
pop
pop
fs
cli
cld
pop
add
and
adc
xor
mov
sti
mov
dec
repnz
arpl
pushf
sub
dec
push
movsb
jl
stos
clc
push
dec
ret
iret
push
sub
and
in
dec
decb
xor
movsl
and
cld
mov
out
mov
jbe
pop
ss
inc
mov
jmp
lock
push
outsb
xchg
movsb
xor
lods
movb
add
jp
sbb
sbb
jl
movsb
movsl
inc
xchg
jae
xor
popf
aam
les
test
inc
pushf
push
outsb
mov
sbb
pop
inc
in
ss
push
dec
jnp
out
xor
rolb
mov
inc
add
cli
rclb
mov
mov
push
mov
mov
mov
mov
test
sub
mov
out
mov
xor
sbb
fs
cld
inc
fnstenv
rcll
outsb
cmp
shrb
jb
outsb
adc
push
jle
movsb
repnz
xor
sbb
rolb
xlat
or
jne
ret
out
fnstenv
adc
and
pop
aaa
jp
js
roll
into
enter
int
sub
xor
push
or
gs
mov
xor
in
sbb
cmp
jecxz
mov
sbb
mov
mov
push
imul
and
ss
fsubrl
out
in
fistpl
mov
inc
aad
nop
andb
arpl
cwtl
es
mov
aaa
sub
sub
and
repz
std
jl
add
loopne
jle
xor
jae
bound
dec
sub
ds
add
orl
sbb
jb
mov
inc
mov
loop
cmp
push
jmp
adc
xor
dec
adc
mov
dec
pushf
xchg
dec
mov
clc
ss
out
movsb
sbb
push
inc
jnp
dec
mov
or
xor
inc
or
jge
push
nop
icebp
dec
in
lods
dec
ror
adc
ss
ret
or
inc
adc
leave
popa
jl
lcall
add
into
dec
xchg
push
jge
aas
push
nop
sub
mov
shlb
enter
mov
mov
insb
out
mov
sub
pop
lea
pop
push
jb
out
clc
mov
adc
sbb
roll
push
dec
add
fmull
mov
pop
xor
add
cmpsl
stos
mov
adc
push
mulb
dec
add
sbb
nop
aad
mov
push
mov
cmp
sbbl
lcall
lods
or
inc
call
fisttpl
call
loope
call
inc
jbe
ret
jecxz
dec
cmpsl
fs
or
mov
cwtl
mov
ljmp
out
and
mov
jle
aam
sbb
sub
mov
push
pop
ja
mov
xchg
sti
pop
jmp
pusha
dec
daa
dec
xor
ljmp
int
cli
adc
mov
or
lds
dec
add
aad
xchg
pop
in
scas
movsb
cli
jg
jp
test
or
pop
xchg
les
push
or
aad
addr16
lea
mov
outsb
push
imul
cmp
ret
call
pop
out
rcr
cmpb
pop
das
ss
mov
push
xchg
add
outsb
in
aad
and
push
push
lret
fistl
jnp
fwait
push
xor
inc
imul
xchg
pushf
stc
insb
jmp
movsb
push
jne
xchg
ss
aam
mov
ds
je
jne
xchg
dec
mov
clc
movsb
mov
pop
push
xchg
iret
jle
outsb
andl
pop
sub
mov
enter
cld
leave
aad
cmp
sub
outsb
add
xor
sbb
imul
pop
loopne
jmp
sbbl
jle
into
subb
jp
fs
mov
xchg
sub
ss
cmp
adc
pushf
ss
test
mov
push
jmp
inc
or
and
fnstcw
sub
cwtl
call
movsb
sub
push
mov
fsts
pop
mov
jl
test
xor
xchg
add
ja
lret
mov
scas
mov
iret
mov
and
pop
and
dec
out
jge
adc
dec
orb
loop
pop
loopne
push
pushf
cltd
loope
lea
jb
shrl
jp
inc
dec
mov
xchg
insl
jns
mov
sub
sub
jge
pop
ja
imul
dec
test
subb
hlt
dec
inc
movsb
js
xor
mov
sub
int
jns
mov
data16
jae
xor
jmp
jbe
sub
inc
pusha
out
fiaddl
imul
leave
insl
cli
fldt
data16
clc
sti
pusha
jmp
pop
movsb
test
push
outsb
cmc
dec
out
mov
addr16
fs
pop
dec
das
adc
dec
pushf
ljmp
mov
add
pop
orb
pop
popf
sub
repnz
sbb
das
stos
dec
mov
pop
or
jg
mov
jle
fiadds
into
jle
imul
stos
jle
andb
or
xchg
add
cmp
adc
adc
sub
fs
add
mov
stos
in
ret
loopne
mov
ret
mov
jns
ss
lret
and
lret
lret
movsb
add
int3
in
jg
aad
cmc
push
hlt
std
cld
dec
xchg
mov
or
cltd
inc
inc
je
xchg
sub
test
sbb
inc
es
pop
dec
add
stc
test
roll
negl
nop
xor
pusha
in
enter
pop
pop
dec
push
hlt
insl
loopne
popl
push
inc
lods
fdivrl
mov
and
jbe
fs
adcl
push
sub
popl
rorb
pop
xchg
mov
push
lcall
mov
push
jl
mov
mov
lret
iret
inc
jle
ja
sbb
xor
pusha
add
ljmp
aas
loopne
pop
iret
fsubs
adc
add
mov
ljmp
inc
rcr
into
mov
fs
aaa
lahf
xor
fstpl
divl
clc
mov
inc
fs
shll
fadds
pop
jo
push
dec
dec
mov
shrb
adc
scas
mov
pop
xchg
sub
push
sbb
xchg
fucom
cmp
mov
cmp
js
adc
fadd
xor
testb
mov
adc
cld
pop
adc
xor
jnp
dec
in
fadds
fs
dec
fildl
push
jae
rorb
dec
push
jge
daa
mov
dec
lcall
jae
jl
divl
ret
fs
fwait
lcall
xor
pop
stc
nop
shrl
inc
movsb
insb
mov
and
dec
enter
cmc
inc
imul
xor
push
or
adc
mov
loope
pop
cmp
cli
data16
push
cmp
jg
xchg
mov
lock
dec
mov
movsb
dec
mov
dec
xor
and
int
sub
sti
into
cwtl
mov
lods
loope
subl
lret
es
fistpl
adc
xchg
dec
loop
mov
lcall
xchg
rorl
sub
mov
inc
adc
addl
sbb
leave
mov
rcl
inc
cli
push
aaa
pop
push
jnp
sbb
xor
sti
mov
jnp
jb
insl
inc
push
das
and
push
pusha
jmp
jb
jle
push
mov
fst
jbe
test
loope
dec
push
das
ds
mov
sbb
mov
mov
push
sub
xchg
xchg
pusha
and
hlt
rclb
addr16
push
cmp
fbld
cmpsl
adc
cld
push
ja
std
add
xchg
xor
out
popf
sub
push
call
jnp
sub
push
loope
inc
das
ficomps
push
popf
or
into
or
dec
cwtl
leave
mov
xor
popf
push
mov
pop
daa
jmp
shlb
cli
add
jno
lcall
mov
sub
lock
pushf
inc
inc
lahf
cli
pop
add
sub
sbb
pusha
dec
push
subl
jle
lods
test
ficoms
xor
iret
std
adc
push
inc
dec
pop
dec
push
inc
and
sub
push
scas
std
lcall
mulb
scas
ljmp
and
movsl
ljmp
sbb
inc
dec
jno
jg
lahf
dec
in
imul
mov
das
rcrl
xchg
jo,pn
arpl
mov
pop
xor
add
or
jg
pop
jne
sub
mov
and
pop
mov
div
add
pop
jl
outsb
inc
cs
cmp
xchg
test
dec
mov
mov
lods
adc
jecxz
mov
int
fisubl
inc
xor
cmp
insb
std
movsb
aas
aaa
iret
dec
pop
in
adc
push
xorl
scas
mov
xchg
cmp
push
push
pop
add
xchg
xor
out
and
adc
out
xchg
shl
out
jnp
adc
popa
cmpsl
push
imul
inc
out
jnp
inc
dec
call
dec
mov
inc
pop
xchg
outsl
loopne
out
daa
pushf
call
rol
fldenv
fs
and
and
adc
jl
sub
nop
rorl
inc
int3
cmp
cmp
ja
mov
sub
and
jl
movsb
push
inc
cmp
imul
iret
cmpsb
mov
sub
std
sbb
inc
inc
pop
sbb
cli
mov
cmpsl
out
mov
inc
aaa
movsb
cmp
adc
in
xor
mov
push
lods
dec
jne
aam
mov
fnstenv
sub
sub
sbb
or
jno
inc
ret
addr16
add
loopne
inc
xchg
test
mov
cltd
jle
addr16
lea
mov
add
outsl
lods
inc
outsb
je
jg
movsb
enter
add
icebp
push
je
mov
jnp
sbb
pop
cmp
xor
movsb
pslld
jno
xorl
sub
movsb
lea
push
cmp
jb
std
xor
sbb
xor
dec
movsl
lcall
inc
mov
out
mov
mov
jno
enter
pop
fadd
adc
mov
addr16
nop
push
sti
jno
pop
in
mov
jno
fs
fimull
call
outsb
inc
inc
sbb
and
fimull
pop
fistpl
aas
pop
frndint
repz
mov
mov
inc
adc
pop
sar
push
stc
test
repnz
call
cs
add
push
mov
data16
outsl
cltd
xchg
pop
cmp
fstps
adc
mov
cmpsb
jmp
push
add
jne
fwait
aas
stos
rorb
ljmp
fisubs
test
mov
xor
cmp
jb
mov
fsubrs
dec
sub
fnstcw
push
shll
stos
shlb
add
adc
imul
adc
xchg
sub
jmp
mov
jp
mov
inc
bound
cmp
sbb
mov
or
mov
jp
pop
fcmovbe
movsb
mov
fs
inc
dec
or
or
cmpsl
pop
lret
cld
pop
dec
imul
sub
shlb
test
ds
sub
dec
mov
push
loop
out
mov
pop
clc
pop
subb
daa
push
mov
xor
inc
jp
mov
sub
in
sahf
sbb
push
lods
das
adcl
lret
repz
add
dec
sbb
rcr
jnp
fildll
fs
out
std
aad
cli
sahf
inc
mov
leave
data16
xor
sub
add
icebp
daa
jmp
inc
and
inc
jmp
movsb
ja
leave
bound
jo
push
aam
xor
xor
dec
jb
out
xor
lods
add
in
std
mov
cli
or
int
lock
lahf
lahf
dec
loopne
sub
and
push
stc
in
repnz
and
adc
testb
ret
mov
sbb
and
mov
mov
lcall
call
lds
cld
pop
aas
mov
cmpsl
inc
fdivs
xor
sbb
lcall
daa
or
jg
insl
orl
mov
arpl
jb
out
cmpl
inc
jbe
lods
aaa
loop
scas
sub
mov
add
xor
rcrb
add
inc
clc
daa
push
in
fs
xchg
and
cmpsl
mov
je
jno
dec
shll
sbb
ja
jge
out
push
push
imul
pop
xchg
out
out
out
cmp
adc
inc
movsb
pop
jge
lret
xor
pushf
add
cs
push
das
push
jecxz
or
xchg
or
dec
sub
jp
test
and
popf
in
dec
mov
jmp
mov
lret
xchg
mov
lret
dec
stc
into
addr16
xor
jle
mov
add
sarb
filds
int3
push
mov
jmp
mov
sub
arpl
dec
lea
mov
inc
bound
lods
jmp
and
shl
jnp
adc
fildll
stos
inc
popa
jae
repz
scas
sbb
loope
jbe
insb
mov
std
jmp
xchg
add
repz
push
mov
in
out
dec
jne
addr16
mull
or
mov
pushf
lods
data16
sbb
cmp
xor
xchg
xchg
mov
fistl
lret
pop
mov
fs
push
push
lcall
dec
jo
jg
xchg
mov
test
jle
mov
mov
push
std
popa
cwtl
mov
push
iret
aad
ja
ja
jecxz
das
inc
and
aas
dec
push
jae
inc
jl
jno
xchg
enter
adc
inc
mov
scas
mov
xor
jp
addr16
aam
cmp
push
call
mov
fs
test
inc
je
mov
icebp
scas
jne
sbbb
gs
and
and
adc
cltd
addr16
bound
out
lds
cmp
adc
lcall
ja
test
jle
movsb
mov
sub
dec
call
push
data16
arpl
das
movsb
test
cmp
xor
mov
iret
insb
jae
jp
add
pop
jbe
jns
dec
ja
mov
fists
push
lahf
sarl
movsb
dec
shrb
lds
nop
into
sarl
add
pop
inc
push
jle
mov
cmpb
dec
lahf
ret
or
xorl
jne
xor
enter
ja
mov
or
sbb
mov
rcll
pop
jle
adc
inc
pop
or
ret
lods
scas
jge
xchg
lock
mov
mov
sbb
inc
mov
cmp
push
leave
fildl
dec
add
jge
xchg
sub
mov
ss
fs
leave
mov
cwtl
pop
add
test
out
stos
inc
inc
pop
scas
jp
add
dec
or
int3
out
out
mov
pop
mov
push
imul
xor
mov
cltd
repz
lcall
and
mov
ds
cmpl
pop
pop
and
push
jmp
or
add
mov
testb
xchg
mov
incb
mov
inc
jecxz
ljmp
jg
xor
sbb
inc
insb
iret
cs
dec
jb
arpl
cmp
pop
bound
scas
das
xchg
and
scas
jmp
loop
cmp
lahf
dec
test
into
out
adc
mov
aad
cmp
or
rol
dec
aas
mov
jb
sbb
jg
jmp
out
outsl
sbb
test
mov
dec
pop
and
mov
lods
lock
ret
jno
pop
popf
fnsave
push
inc
jae
sbb
out
jne
xchg
daa
lahf
mov
divb
push
jne
push
fnstenv
jecxz
fistl
mov
lcall
mov
jl
in
jae
aam
dec
mov
test
cmpsl
andb
push
push
into
pop
dec
push
loope
push
and
fs
inc
sub
jnp
cld
push
adc
icebp
shl
repz
sub
or
dec
stc
mov
fs
push
fwait
pop
jge
cmp
jne
mov
ret
xchg
sbbb
pop
push
cmp
ljmp
and
shlb
imul
add
in
jo
jb
cmp
out
rclb
fdivrs
inc
stos
outsb
and
jae
and
jno
lret
sbb
sbb
push
jb
stos
dec
push
shll
push
hlt
and
jecxz
jno
les
jns
adc
movsb
add
jle
cld
mov
dec
mov
pop
jl
jecxz
xchg
das
pop
cmpsb
add
jnp
jmp
sub
mov
xchg
cmp
pop
in
aad
adc
lret
mov
xor
mov
icebp
add
mov
insb
subl
jnp
add
movsb
daa
sbb
pop
pop
outsb
inc
mov
movsb
or
stc
xchg
cmpsb
pop
insl
pop
or
outsb
fs
mov
sarb
push
mov
roll
fxch
fs
mov
arpl
pushf
and
aaa
les
jecxz
test
je
push
and
mov
add
lahf
cwtl
cmc
insl
es
test
out
sbbl
lahf
xchg
hlt
xor
xchg
movl
iret
xchg
int3
sub
pop
rclb
shrl
aas
dec
imul
inc
imul
lea
adc
inc
pop
leave
popf
mov
cli
add
sub
js
cltd
out
ret
sbb
or
es
adc
mov
push
push
mov
gs
mov
jbe
xchg
arpl
sub
or
stos
add
push
fistpll
outsl
mov
sarl
std
cltd
mov
sahf
imul
cwtl
lock
add
push
adc
add
sbb
sub
xchg
test
add
fsubs
sub
push
imul
cmp
jl
mov
adc
dec
mov
jns
cld
mov
insl
and
xchg
sbb
dec
dec
push
adc
mov
das
ret
push
daa
insl
scas
jp
fs
push
lret
jle
inc
loope
jmp
sbb
sub
je
cmpsl
pop
xorl
hlt
clc
out
adc
cli
int3
imul
jp
pop
cmp
cs
pusha
das
div
movsb
mov
jecxz
mov
sti
divl
inc
outsl
aas
pop
jle
xor
outsl
stos
jle
or
out
xor
jbe
jns
imul
data16
aam
outsl
push
aaa
xor
out
or
xor
or
pushl
cmp
repz
mov
cmp
sti
mov
dec
xchg
push
push
inc
add
xor
dec
popf
call
push
inc
xor
or
adc
lcall
std
nop
stos
jmp
jne
push
out
cld
repz
xchg
mov
jmp
or
xchg
or
fs
js
enter
inc
mov
popf
push
mov
shrl
iret
mov
call
jb
sahf
adc
ds
ficoml
adc
lods
mov
sbb
call
pop
mov
jmp
mov
push
xchg
push
fsubrp
test
and
mov
cmpsb
pop
jle
int
outsb
movsl
push
xor
xor
mov
or
mov
aas
fnsave
xchg
std
jmp
add
cmp
in
sub
stc
loop
ss
lcall
sub
fs
xchg
mov
fwait
insb
xchg
dec
mulb
add
movsb
mov
or
inc
imul
adc
xchg
push
dec
jne
out
pop
lods
jne
imul
lret
fadd
jmp
dec
inc
xor
adc
sbb
fsubl
or
mov
cmp
cmpsb
adc
sub
dec
mov
mov
lcall
inc
xchg
into
inc
iret
fwait
mov
inc
mov
xchg
pop
lods
push
push
mov
movsl
push
lret
sub
pop
cmc
ljmp
insb
mov
cmp
dec
lret
int
xlat
fisubl
xor
dec
push
fsubrs
inc
xlat
cmp
jecxz
rcrl
inc
shrb
lahf
jle
xor
ss
dec
pop
sub
sub
and
jmp
xchg
fldt
fs
xchg
mov
sbb
shlb
adc
cmp
fildl
xchg
push
fadds
call
outsl
outsl
jle
dec
leave
fs
mov
sbb
sub
jmp
hlt
repnz
jno
cmpb
xor
fwait
das
movsb
aaa
jl
adc
inc
shr
xchg
and
icebp
push
xchg
lcall
or
inc
sysret
and
or
lods
mov
stos
xchg
daa
jmp
push
mov
lock
or
sub
sub
ret
jmp
jle
test
negb
adc
cli
and
insl
dec
push
inc
fs
mov
mov
dec
cs
cmp
cmp
pop
pop
xor
mov
inc
pushf
mov
inc
or
pusha
cs
imul
xchg
jo
mov
rcrb
out
push
imul
jno
adc
mov
cmp
mov
jle
insl
sbb
shl
cli
aad
mov
sub
adc
in
xchg
bound
out
mov
std
arpl
psrld
lahf
lock
push
outsl
outsl
adc
cmp
push
subl
mov
in
jge
mov
mov
inc
mov
cs
idiv
jo
jle
or
sub
lret
mov
push
aad
push
insb
inc
add
sbb
aad
cli
xor
jmp
jge
pop
ret
test
pop
std
lea
and
les
scas
mov
int3
jle
ret
ss
mov
or
std
sub
dec
ret
xor
dec
mov
and
pusha
test
int3
jmp
out
out
dec
inc
mov
dec
mov
lret
fs
adc
je
out
cmpsb
jl
dec
xor
jmp
inc
mov
lahf
dec
mov
lods
pop
push
mov
or
mov
pop
jecxz
mov
dec
push
fs
adc
std
sub
movsb
pop
xchg
test
popl
jl
movsb
hlt
insl
test
cltd
imul
in
cmp
sbb
xor
jmp
and
loop
add
add
daa
inc
fs
push
rcl
sti
jp
test
sub
xchg
cld
dec
inc
mov
adc
fs
fdivrs
fldl
movsb
xchg
fldcw
mov
cmp
xchg
sbb
inc
xlat
mov
aad
xchg
dec
xor
jo
xchg
push
add
dec
mov
pop
adc
inc
or
push
mov
adc
cltd
adc
call
dec
sub
movsb
in
jns
adc
sub
imul
es
movsb
jg
ljmp
arpl
sbb
and
xor
imul
or
sbb
jne
popa
mov
cmp
jo
push
cmp
pop
sarb
or
sbb
or
sahf
mov
sbb
jnp
xor
mov
movsb
sub
lods
cmpl
sub
mov
jns
fs
push
jp
stos
mov
rolb
sub
movsb
mov
ljmp
sub
pop
gs
aas
fadds
ja
mov
pop
xchg
sub
and
or
dec
push
and
dec
fs
out
imul
sbb
inc
loopne
and
pop
lcall
int3
ja
add
pop
mov
ss
test
mov
mov
rcrl
mov
mov
and
add
inc
push
outsl
lods
aam
cltd
cld
es
xchg
push
scas
inc
lock
bound
mov
cmc
xchg
xor
mov
lahf
and
inc
ret
and
inc
cmpsb
test
or
cmp
mov
inc
pop
jp
sub
imul
aad
insl
ljmp
cmp
or
enter
and
das
movsb
mov
mov
idiv
jp
test
shl
popa
insl
pop
jp
mov
jp
fwait
xchg
jg
add
addr16
push
or
mov
fucompp
or
es
inc
mov
push
mov
add
cmpsb
jmp
sub
cmp
nop
adc
fs
daa
mov
mov
imul
adc
fidivs
stc
and
mov
outsl
xchg
daa
pop
sbb
mov
xchg
sbb
sahf
sub
movsb
mov
xchg
fwait
inc
sub
sub
test
or
out
pushf
add
data16
add
lock
dec
mov
jns
fs
insl
dec
sub
scas
stos
inc
ret
add
jo
mov
inc
sbb
mov
orl
mov
xchg
lds
fwait
pop
mov
cmc
outsl
stc
cmp
sbb
scas
js
sub
popa
dec
int
dec
mov
in
mov
repz
arpl
add
rorb
ror
lcall
jb
imulb
out
push
test
clc
jmp
call
pop
xchg
jae
call
adc
jl
je
arpl
jmp
cld
in
jecxz
leave
clc
add
inc
xchg
push
push
repz
lahf
mov
jbe
dec
push
pop
or
cmp
xchg
pop
push
inc
push
fcoms
xchg
ljmp
sbbl
cmpsb
shrl
dec
add
and
pop
imulb
mov
push
icebp
adc
stos
arpl
cs
dec
test
or
adc
push
jl
xor
daa
jp
adc
jb
add
add
pop
push
mov
int
push
gs
mov
popf
fs
push
ja
mov
mov
push
pop
pop
rclb
pop
mov
add
push
xchg
push
push
cli
bnd
xor
fnstsw
stos
hlt
lock
mov
test
scas
adc
push
ret
imul
push
arpl
jbe
out
in
push
xor
or
sbb
add
inc
cmp
outsb
shrl
mov
adc
aam
stos
mov
js
pop
dec
cmp
lret
add
loopne
ljmp
mov
push
mov
mov
shl
jl
sbb
push
stos
dec
add
push
sub
cmp
push
add
and
push
jecxz
or
jne
shrl
push
add
dec
popa
fcom
push
mov
dec
push
jmp
popa
cmpsb
push
cmpl
repnz
push
cmc
jnp
push
xor
add
pusha
std
xchg
add
jecxz
cmp
test
push
push
xlat
xchg
and
pop
dec
stos
mov
pop
scas
gs
xor
shlb
cltd
jp
test
cmp
test
dec
mov
push
pop
movsl
add
and
adc
push
sbb
sub
sarb
stos
cld
push
jmp
adc
push
pop
add
out
sub
popf
push
cs
dec
imul
jbe
mov
lods
dec
xchg
sub
mov
pop
mov
push
and
cmp
fsubrs
adc
inc
push
frstor
test
insl
repnz
dec
les
dec
mov
cmp
jns
push
push
mov
mov
fisubrl
jnp
cmc
ret
mov
pusha
test
jb
xor
sahf
xchg
sbbl
mov
ds
imul
lret
pop
jo
xchg
mov
imul
out
jns
icebp
mov
mov
adc
pop
cld
out
jp
ljmpw
and
lret
push
jne
pusha
pop
push
jno
cmc
icebp
sub
test
jmp
push
adc
js
cmp
outsl
cld
repnz
jne
sahf
add
xorl
cmpsl
mov
push
mov
jno
pop
push
push
lods
jne
jp
push
pop
mov
sub
lds
xorb
dec
dec
int
adc
mov
imul
in
rolb
inc
xchg
push
stos
and
dec
pusha
xchg
sub
js
jge
ljmp
sub
inc
int
fldenv
repz
push
divb
lahf
dec
inc
pop
push
ljmp
push
push
push
aam
ror
aaa
push
sub
arpl
and
jnp
es
out
loope
mov
mov
cmp
mov
xor
jp
jle
cmp
pusha
shl
test
mov
inc
mov
ja,pn
popf
into
dec
inc
fidivrl
inc
stos
call
ljmp
add
and
mov
xchg
jno
push
xchg
insl
cmp
arpl
push
cwtl
dec
mov
mov
pop
clc
push
push
adc
stos
aad
pusha
shrb
fnstsw
or
dec
push
push
push
xor
test
lret
aas
and
adc
push
cltd
push
lea
hlt
ret
jbe
stos
pop
sub
and
lahf
fdiv
and
adc
inc
dec
push
jo
pop
mov
mov
nop
call
jle
jne
and
repnz
lret
test
and
ljmp
enter
aam
add
pop
scas
call
je
dec
pusha
sub
adc
sahf
dec
in
mov
inc
push
jmp
jmp
push
into
cmp
sbb
pop
push
jmp
in
adc
pop
jmp
outsl
lahf
pop
sahf
adc
js
ret
push
fstpt
mov
pop
in
mov
rolb
stos
lea
leave
rorb
mov
aas
int3
ljmp
stos
clc
xchg
js
into
addr16
push
sete
ret
dec
xchg
sub
pop
dec
out
jne
push
sub
icebp
loop
repz
xchg
cwtl
cli
and
mov
sub
stos
pusha
dec
out
sub
jns
inc
imul
leave
mov
cmc
mov
inc
addr16
pop
and
push
ret
mov
loopne
daa
stc
dec
rcrb
loop
xchg
or
dec
outsl
sbb
sub
lock
popa
mov
dec
pop
sub
ret
iret
inc
idivb
push
push
mov
push
xor
adc
insl
adc
test
pop
es
push
cmp
mov
pushf
push
mov
sbb
rcrl
xor
dec
mov
addl
push
gs
addr16
push
mov
pop
sub
fwait
scas
cld
ss
mov
imul
mov
push
push
pop
sub
jnp
lcall
shll
sbb
dec
jnp
add
mov
sub
maxps
das
mov
push
mov
or
sub
sahf
cmp
pop
ljmp
jmp
mov
push
cmc
jae
xchg
and
lret
movsb
mov
push
imul
ljmp
fmull
call
mov
jns
lock
call
jl
dec
xor
ljmp
scas
push
xchg
insb
xor
loopne
ret
dec
adcb
out
mov
mov
jo
pop
push
cltd
xor
adc
pop
push
test
jle
mov
push
inc
mov
jo
cmp
lea
out
push
ret
in
adc
popf
mov
push
imul
xchg
loope
push
nop
pop
rol
sbb
jg
dec
or
or
pop
cli
jne
cmp
es
iret
push
mov
pop
and
std
daa
push
cwtl
ret
dec
les
adc
add
sbb
jge
push
pop
mov
push
inc
lea
push
loop
mov
icebp
je
in
pop
add
pop
lret
sub
push
fimull
stos
sbbb
dec
ja
sub
std
jg
push
js
jno
cmp
mov
repnz
dec
cs
fisttps
jb
mov
jns
rorl
or
in
pop
fsubl
push
cmp
mov
js
jnp
jecxz
sbb
xchg
cltd
mov
and
adcl
inc
xlat
push
jp
fidivl
cwtl
mov
mov
loope
ljmp
add
add
pop
cwtl
call
loop
lret
in
rcll
mov
subl
mov
dec
mov
dec
movsb
cmp
xor
shrb
in
popa
rclb
out
pop
push
adc
mov
mov
rcl
xor
and
inc
inc
cli
jns
push
fisubs
push
xor
sbb
sbb
mov
add
daa
jmp
add
rol
mov
frstor
push
jns
into
push
inc
shl
xor
inc
flds
das
inc
movsl
ljmp
lods
popa
fmull
cmpsl
xchg
out
mov
xor
push
gs
inc
inc
and
scas
mov
inc
inc
and
out
lods
sbbl
sti
add
and
rorb
inc
rolb
mov
pop
sub
aam
lock
push
cmp
jmp
jecxz
outsl
fldenv
fimull
movsb
cmp
cwtl
sahf
out
dec
loopne
jnp
pusha
mov
cmpsl
lahf
dec
shll
pop
mov
lock
push
xlat
arpl
popa
mov
adc
inc
lret
jle
into
xor
pop
in
pop
xor
mov
js
decl
jg
pushf
les
jo
pop
pop
pop
dec
fs
or
stc
incb
bound
call
ljmp
push
sbb
out
data16
pop
or
xchg
and
out
shrb
mov
outsb
fs
in
mov
imul
jbe
idivb
insb
sub
pop
lock
lahf
push
or
inc
cmpsb
roll
xorb
dec
into
push
lret
insb
cs
je
aad
mov
aad
lds
movsb
movsl
call
mov
or
adc
inc
push
negb
imul
pop
xchg
mov
push
jecxz
ljmp
jge
adc
ret
jp
jle
or
push
adc
rorl
rcr
mov
and
test
sbb
jb
outsl
and
out
pop
out
jo
mov
push
mov
nopl
inc
fucom
dec
imul
jp
mov
iret
cmpsl
arpl
out
dec
mov
sbb
in
mov
stos
pop
fucom
dec
or
xchg
loop
or
incl
lcall
mov
cmc
xor
and
mov
sbbb
add
jne
dec
pop
std
lcall
ljmp
dec
into
sbb
add
ja
nop
adc
out
lahf
test
dec
fs
cwtl
mov
loope
cli
movsb
mul
xlat
clc
push
inc
enter
inc
add
rorl
jo
sub
mov
icebp
inc
ljmp
pop
inc
imul
cwtl
jmp
out
jo
mov
mov
lahf
add
out
test
xor
lret
sbb
pop
fwait
xor
push
push
dec
jmp
nop
pop
sbb
jl
mov
mov
ss
sahf
lock
pop
xor
lret
repnz
lcall
add
sbb
daa
mov
jnp
shlb
sbb
dec
fwait
xchg
mov
jle
ja
jo
shr
insb
arpl
leave
lds
rolb
cmp
es
and
inc
fiaddl
lret
xlat
loope
insl
dec
stc
mov
ljmp
stos
add
and
or
mov
mov
jmp
movsb
and
sbb
shrl
ja
ljmp
rep
jae
ret
sbb
xchg
cli
mov
dec
lea
sbb
arpl
adc
fidivrl
lahf
sub
aam
loop
jb
inc
bound
insl
cli
xor
int
sub
popa
fisttps
clc
movsl
cs
adc
pop
add
jbe
mov
std
sub
inc
ss
inc
fidivrl
bnd
or
andb
fstps
jae
or
shll
sub
xor
lock
sbb
call
dec
xor
jbe
mov
out
cmpb
push
test
pop
lods
jg
push
flds
fs
mov
push
mov
mov
adcw
clc
call
xor
add
insb
pusha
sbb
in
lods
jo
jo
je
mov
movsl
sti
push
ljmp
cs
inc
pop
jnp
cmp
rclb
mov
fsubrs
dec
and
xchg
shll
push
lods
fs
dec
cli
movsb
and
lcall
imul
and
bound
mov
or
push
cmc
or
sbb
push
mov
iret
xchg
aam
inc
outsb
enter
sbb
lods
cld
push
dec
int
cmpsl
dec
pop
psubd
movsb
xchg
mov
xchg
scas
leave
pop
jecxz
loop
adc
and
sub
insb
lea
jo
and
out
add
popf
mov
mov
push
dec
pop
sahf
mov
mov
mov
sub
fs
inc
aas
jge
xchg
out
fsubs
pop
shr
and
jne
popa
mov
pop
jnp
pusha
test
daa
xor
or
lret
lret
mov
xchg
pop
mov
mov
lret
ja
cmpsb
xchg
mov
leavew
lods
loopne
repnz
push
mov
mov
ja
inc
cltd
lcall
mov
aas
jp
sbb
pusha
xchg
inc
ja
mov
pop
test
ficoms
ss
shrl
outsw
shlb
shll
fdivrs
sbb
mov
push
out
test
jp
dec
fwait
std
cs
ljmp
jmp
sbbb
adc
repnz
sti
shl
inc
jge
iret
in
les
shl
xor
add
cmpsl
push
shrb
adc
outsb
sub
jle
test
inc
jg
inc
pop
mov
add
or
and
dec
ljmp
xchg
bound
xchg
shrl
adc
subb
pop
adc
adc
dec
stos
iret
sbb
jmp
arpl
jae
das
cld
or
movsl
inc
or
stos
mov
mov
cmp
mov
jnp
aam
arpl
cmc
add
mov
das
test
and
cld
imul
fwait
insl
out
xchg
sbb
repz
stos
adcl
sub
cmpsl
pop
js
pop
movsb
adc
scas
cltd
aad
fistps
sarb
jnp
mov
rcrl
add
push
push
inc
add
out
enter
pop
dec
pop
jmp
sub
inc
fidivrs
dec
jle
cmp
fwait
loope
rorl
fadds
fwait
cmp
sbb
fldl2t
popf
mov
pop
cmp
push
arpl
add
fs
inc
add
jb
mov
xlat
aad
mov
cmp
jae
cmp
fcmovnu
mov
fsubrs
iret
inc
mov
sbb
out
cmp
fnstenv
ret
cltd
jo
sahf
mov
add
into
pop
lahf
push
pop
insl
lret
fadds
sub
scas
das
add
dec
cmp
xchg
dec
pushf
out
cmp
pop
sub
jnp
stos
ljmp
popa
inc
pop
pop
and
sbb
lods
sahf
movsb
int
cmpsb
sub
sbb
pop
sti
fiaddl
add
imul
jae
mov
pusha
mov
inc
sub
mov
daa
fs
hlt
enter
sbb
imul
movd
mov
stos
mov
jle
cmp
add
lock
je
roll
push
mov
or
xchg
mov
mov
inc
testl
cmp
or
lods
imul
out
push
cmp
je
cmpl
mov
add
jl
jbe
arpl
xor
je
mov
add
lds
cmc
xorl
sbb
cs
shl
add
sub
xchg
push
xchg
dec
cmpsl
sbb
cmpsl
push
push
adc
ljmp
jle
leave
pop
fadds
add
loope
bound
adc
mov
pop
dec
fimuls
lea
cltd
fwait
leave
popf
mov
cmp
je
test
aas
mov
cmc
es
sbb
push
es
roll
imul
push
jl
in
cmpsl
mov
pop
mov
cmp
pop
add
lds
ret
ucomiss
pop
sub
fs
mov
xchg
mov
sbb
inc
fmuls
fists
push
ret
lcall
les
xlat
test
ret
pop
mov
insl
repz
out
scas
push
inc
jecxz
jl
mov
sub
or
inc
xor
faddp
shrb
in
iret
ja
std
fisttpl
les
and
out
xlat
movsl
call
or
inc
shl
and
popl
mov
pop
ror
leave
mov
cmc
lds
ss
pop
cwtl
mov
and
xor
xor
jnp
stc
lret
cld
jg
repnz
sbb
lret
and
and
fnstcw
xor
mov
jmp
fdiv
mulps
inc
stos
fsubr
push
pop
out
cli
jbe
mov
add
cmp
add
mov
popa
push
popl
mov
aad
mov
je
mov
jbe
out
dec
jae
stc
fnstenv
jmp
inc
inc
aad
clc
sbb
dec
lods
lret
movsb
sub
push
rclb
addr16
mov
fwait
xchg
in
mov
mov
filds
sub
into
inc
xchg
jg
and
aaa
sub
enter
data16
or
loopne
cmpl
mov
sub
xor
out
push
mov
cld
inc
mov
sub
fisubl
sbb
mov
in
imul
and
inc
aad
jp
adc
in
cmp
test
cmp
sti
mov
in
bound
add
push
pop
in
test
loopne
imul
ror
pop
out
lret
test
sub
imul
add
xor
sbb
fnstsw
mov
iret
cmc
loopne
mov
mov
aas
dec
in
jne
mov
sub
inc
pushw
lock
dec
fsts
push
imul
movsb
lret
bound
jmp
lcall
dec
lahf
lds
push
add
dec
out
add
push
adcb
sbb
scas
mov
mov
pushl
add
dec
out
sub
and
mov
cltd
jbe
shrb
jns
in
test
arpl
adcb
sti
adc
jmp
xor
fsubs
cmc
pushf
jl
sahf
popf
pushf
sub
lcall
cltd
or
test
pusha
fwait
push
sub
ljmp
std
jl
inc
cmc
jae
addb
add
mov
mov
stos
jns
call
ficomps
in
sub
push
nop
sarl
ljmp
negb
hlt
fldl
test
mov
pusha
push
iret
ja
lea
dec
push
dec
das
cwtl
out
and
mov
daa
movsl
call
cmp
adc
jne
and
inc
sub
add
int3
pop
xlat
push
outsb
pop
jp
aas
movsb
adcb
orb
jbe
mov
test
in
lods
sub
sub
enter
loope
ret
add
xorl
ss
sub
mov
cmpsb
cmp
aad
enter
jl
or
in
inc
lcall
add
js
leave
ret
shl
pop
inc
jb
test
pop
stos
push
ss
out
adc
cmp
lods
jl
scas
pop
outsb
jbe
nopl
xchg
dec
cld
push
sahf
dec
cmpl
arpl
aas
sbb
movsb
cltd
fisttps
inc
pushf
pop
movsb
pop
ss
gs
sbb
dec
cmpsb
repz
pusha
lret
mov
stos
aas
cmp
movsb
and
into
es
adc
dec
dec
pop
je
sub
cwtl
icebp
sbb
jle
stos
ret
fdiv
jo
aad
pop
or
mov
xchg
andl
sbb
aad
dec
adcl
ljmp
xor
insl
inc
ljmp
cmp
cmp
jb
lods
mov
out
jp
push
mov
cmp
addr16
fs
pushf
mov
ficoml
xor
test
mov
inc
cmp
push
fs
test
jb
fsubrp
in
sub
scas
cmc
dec
shlb
inc
sub
imul
lock
jae
daa
xor
jae
lds
cmpsb
aas
or
idiv
sub
sub
add
sbb
dec
jg
sti
or
popa
andb
add
sub
and
mov
insb
jbe
lea
mov
test
xchg
sti
and
lods
ds
sbb
pushl
stos
push
xlat
add
mov
mov
fistpl
adc
mov
cmc
test
mov
scas
dec
out
out
push
addr16
insb
cmp
mov
pop
jbe
fs
jno
aad
scas
lods
popa
push
dec
push
aad
aam
jg
inc
push
push
pop
js
xchg
xor
sub
sets
sbb
jne
pushf
fadd
pop
loop
aad
mov
add
setno
addr16
mov
fmulp
mov
aas
lahf
add
lea
or
cmp
jg
adc
cli
sub
mov
sti
shl
in
sti
sbb
or
xchg
subb
cmp
add
idivb
jb
push
inc
jmp
or
sub
stos
imul
mov
cmpsl
je
dec
jl
sti
out
cld
das
and
sbb
push
sbb
mov
adc
xchg
adc
cmp
jp
pusha
out
mov
ficoml
mov
mov
arpl
jnp
out
sub
stc
jno,pt
add
adc
xchg
clc
das
inc
stos
fwait
jbe
scas
push
movsb
mov
sbb
int
or
xchg
fcomps
jae
dec
xchg
xchg
mov
ss
lret
sub
push
scas
fdivs
fucomi
ds
sub
mov
push
jb
clc
sbb
mov
mov
loopne
lret
lret
imul
mov
out
scas
sarl
shrl
and
aad
enter
xchg
repnz
inc
mov
sbb
das
movsb
mov
in
test
clc
dec
sbb
xor
call
fists
cmpsl
sti
sbb
into
mov
das
add
mov
mov
push
call
inc
push
popf
mov
ss
inc
ljmp
sbb
adc
mov
xchg
or
outsl
mov
dec
fcomps
popa
push
test
lret
xlat
cmp
pop
mov
xchg
aad
leave
lret
ds
fs
or
sub
cmp
insb
insl
adc
sub
pop
push
insb
add
sub
add
fisttps
cli
jno
lods
jae
inc
icebp
inc
imul
scas
push
xchg
movsl
stos
hlt
cmp
in
jmp
in
xor
xor
popf
call
dec
xor
xchg
int3
add
subb
dec
push
mov
jg
add
or
outsl
push
inc
xchg
pop
add
imul
hlt
decl
lods
xor
xor
cld
movsl
ret
push
jbe
lods
pop
inc
xchg
mov
iret
adc
dec
or
cmp
and
lret
sub
int
push
out
cmp
fisttps
shlb
repz
fmul
out
add
das
leave
pusha
lods
test
push
cmp
mov
pop
push
lret
add
xor
sub
lods
and
mov
inc
rclb
movsb
jb
push
outsb
dec
shrb
jne
loope
insl
fcompl
dec
sbb
sbb
cmp
into
adc
mov
lret
js
repz
fstpt
lods
push
sbb
popa
sbb
jo
add
insl
sbb
dec
pushf
test
xchg
loopne
fidivl
or
fsubrs
pop
sbb
pop
push
mov
lock
inc
adc
pop
sbb
sub
imul
dec
sahf
xor
popf
ja
idiv
jo
mov
popf
stos
inc
xchg
xchg
push
pop
hlt
adc
fildll
add
inc
fs
mov
dec
jg
in
pop
popf
int
dec
ret
and
imul
sbb
out
pop
test
movsb
ret
mov
stos
inc
je
arpl
inc
ficoms
inc
add
imul
loop
repnz
xchg
fsubs
xchg
jo
xor
movsb
mov
add
mov
xor
std
inc
movsl
sub
aas
leave
icebp
dec
daa
stos
lods
jmp
ja
pop
aam
sbb
in
clc
add
xor
andl
inc
shl
cli
push
dec
inc
xor
lret
mov
dec
mov
clc
adc
add
mov
or
add
mov
icebp
lahf
test
xadd
bnd
arpl
sbb
aas
mov
inc
jb
mov
cmpsl
shll
int
imul
sub
mov
adc
or
xchg
ljmp
cmp
or
or
ret
pop
xchg
in
and
das
jbe
ficompl
insb
jbe
or
aaa
mov
sbb
sbb
aas
out
out
movsb
mov
pusha
int3
shl
fwait
sub
rclb
sbb
adc
mov
ss
std
pusha
lods
add
inc
inc
jecxz
add
jle
lahf
lcall
jmp
jo
pop
mov
imul
outsb
stos
sar
dec
imul
out
lcall
xchg
push
and
fwait
iret
movsl
arpl
call
jg
orb
jae
xlat
ja
les
fstp
arpl
mov
fcmovnu
pop
insb
mov
mov
push
pusha
js
mov
inc
lods
mov
jbe
cmp
outsl
and
jne
and
mov
pop
loope
es
sbb
mov
adc
rorl
into
adc
fistps
call
ss
xor
mov
loopne
sbb
sbb
loop
xor
sahf
outsb
cmp
push
xor
mov
hlt
and
stos
adc
pop
dec
repz
inc
inc
mov
mov
jo
mov
icebp
fs
sbb
mulb
dec
cmp
lock
add
add
dec
cmp
test
mov
xor
mov
mov
xor
mov
fwait
loope
inc
movsl
cmp
aad
fcompl
cs
push
jno
sub
inc
add
out
test
add
repz
out
or
xchg
cld
push
ljmp
je
xor
inc
push
mov
stos
cmp
loope
jae
fdivrs
inc
sub
inc
imul
in
aad
insl
jg
imul
pop
aam
mov
dec
sbb
pop
mov
test
stos
jg
jmp
cs
mov
add
imul
push
pop
mov
inc
insb
ljmp
subl
cmp
or
movsl
std
cmp
movsb
mov
ss
dec
jb
and
fiadds
pushf
push
push
push
fwait
dec
mov
xor
add
inc
jmp
mov
fscale
mov
push
fdiv
sarb
ret
outsl
or
lods
movsb
mov
test
inc
stos
mov
and
push
lret
in
lret
out
pop
stc
fs
aad
xchg
ds
insb
aad
filds
iret
in
aam
pop
adc
int
and
leave
add
jle
dec
stos
je
shrl
jae
fs
mov
andb
jmp
push
call
jae
inc
cmc
adc
adc
aam
inc
cmp
mov
mov
or
repz
mov
loope
lock
test
addr16
mov
mov
cmpsb
xchg
pop
or
jbe
and
mov
fdivr
sub
rorl
xor
stos
mov
sti
pop
in
aaa
push
fsubrp
mov
hlt
imul
mov
insb
pop
push
dec
push
inc
mov
fcomp
negb
mov
out
cmp
int
and
inc
pop
mov
pop
xchg
outsl
pushf
in
sbb
mov
jne
out
test
add
das
ss
dec
fisubl
xchg
inc
imul
mov
imul
xchg
dec
mov
cli
mov
pusha
sbbl
jo
and
daa
cmp
in
dec
jg
out
gs
ret
mov
mul
sbb
fisubl
jo
mov
data16
xor
insl
stos
mov
cmp
pop
xchg
mov
stc
mov
pop
adc
imul
xlat
daa
in
jp
add
jnp
sbb
pop
mov
dec
lss
jle
sar
and
decl
fiadds
imul
movsb
sbb
pop
and
xchg
out
xchg
jg
test
test
jb
test
push
ljmp
imul
outsb
mov
or
imul
sbb
xchg
imul
sbb
xlat
pop
ljmp
dec
inc
icebp
ds
mov
loope
xor
stos
jmp
xchg
sbb
sub
int3
mov
test
stos
daa
lea
fs
mov
insl
leave
jmp
ljmp
lret
cli
inc
ljmp
imul
push
shrl
sbb
mov
aad
mov
imul
jne
cmp
icebp
andl
ret
hlt
sub
outsb
pop
nop
cmpsl
in
lcall
out
sub
and
lcall
imul
aad
imul
mov
jae
jno
repz
push
fs
ljmp
mov
jge
repz
mov
imul
xlat
int3
mov
aaa
sub
loopne
mov
pushf
dec
insl
pusha
insb
inc
in
inc
sbb
or
movsb
add
leave
dec
iret
arpl
pop
rcr
cmp
outsb
cs
insl
int
mov
fbstp
fmuls
add
in
mov
hlt
mov
ret
add
mov
test
push
movsl
out
mov
jp
outsb
test
int
lcall
iret
je
movsb
das
sub
in
dec
pushf
inc
adc
xorl
jp
pop
sub
repnz
mov
and
cmc
dec
sbb
jp
pop
inc
jb
bound
call
inc
inc
stos
jb
ficoml
inc
out
jle
in
ljmp
orl
mov
inc
rclb
mov
xchg
push
shll
movsb
lock
dec
das
test
outsb
sbb
popa
cmp
ficoms
aas
shl
scas
outsl
movsb
adcl
dec
repnz
ja
sbbb
scas
shr
imul
inc
scas
mov
movsl
push
inc
insl
add
dec
jge
loope
fiadds
pop
sub
fldenv
add
pop
sbb
add
add
lea
mov
mov
fimuls
insb
jae
roll
xor
inc
cmc
pop
xchg
into
imul
and
jns
shll
sbb
jne
insl
pushf
imul
dec
fistps
int3
das
hlt
and
sub
gs
scas
fs
cwtl
pop
mov
push
ret
bound
pop
mov
insl
dec
mov
out
daa
or
stc
outsl
insb
idivl
xchg
aas
cmp
ds
add
cli
iret
add
clc
lcall
jnp
sahf
out
fmuls
jnp
push
xchg
jo
add
aaa
and
movsb
dec
mov
jecxz
pop
push
cmp
sub
sbb
mov
sub
imul
ljmp
jg
mov
cmp
inc
ss
mov
jge
ficoms
insl
sti
sbb
mov
cmp
pop
repz
adc
dec
sub
pushf
sbb
test
pop
mov
cli
dec
test
and
daa
xchg
mov
inc
mov
shrl
xlat
leave
pop
test
movsl
xchg
xlat
aas
iret
push
and
lahf
notb
pushf
lahf
outsb
outsb
mov
cmp
movd
cmp
mov
add
push
jnp
stos
lea
push
cmp
sub
test
test
dec
xchg
or
cmp
shrb
xchg
xchg
jne
ret
insb
cmp
mov
in
cmp
dec
pop
shll
rorl
or
repz
xchg
sub
popf
ss
xchg
mov
add
ret
pop
in
mov
inc
mov
icebp
jb
imul
sbb
lea
movsl
xor
pop
or
and
or
aam
aaa
push
fs
pop
out
inc
push
cmp
lock
ret
fsubl
cs
pop
sbb
shll
inc
lock
cli
ds
cs
fs
xlat
or
mov
lea
jnp
rorl
mov
mov
adc
xchg
xchg
xchg
add
enter
mov
add
push
inc
in
sub
les
sub
movsb
mov
rcrb
je
push
and
add
sbb
lcall
xchg
retw
fld
push
call
lcall
pop
pop
push
loope
mov
xchg
cwtl
jbe
xor
dec
lahf
add
mov
arpl
rorb
cmp
pop
jp
or
pushf
xor
ljmp
adc
rorb
push
xchg
fsts
ds
pop
into
dec
add
push
xor
inc
pop
xor
push
push
daa
inc
xchg
adc
les
pop
inc
mov
addr16
imulb
jg
cmp
cs
cwtl
pusha
adc
pop
push
mov
aas
shlb
mov
xchg
jae
data16
loop
pusha
stos
cwtl
cli
pop
inc
push
fiadds
rcl
jg
aam
sbb
aaa
fadds
repz
inc
ss
popf
sub
push
outsb
add
pop
cltd
mov
ja
test
inc
ret
cmc
movsb
lret
adc
jp
inc
and
fs
out
mov
in
xchg
fcomps
pop
or
dec
pop
lods
sbb
fs
inc
cld
imul
jns
and
xchg
xchg
mov
fcoml
mov
inc
mov
mov
dec
and
fnstenv
shlb
mov
rorb
stos
mov
adc
add
xlat
out
mov
sbb
cmp
inc
sbbl
ss
xor
cmp
out
add
fs
int3
xchg
cmc
sub
xor
ja
or
mov
adc
jl
or
xchg
push
mov
push
mov
jae
mov
jmp
xor
gs
jl
in
jne
adc
xchg
sbb
pop
test
das
movsb
sbb
mov
sbb
sbb
insb
xchg
cltd
jae
imulb
add
mov
pop
fdiv
dec
xchg
into
psubusw
ror
inc
dec
push
dec
mov
dec
add
xchg
ss
test
insb
dec
sub
addr16
push
rorb
inc
aad
shrb
jl,pn
or
push
movsl
xor
add
imul
cmc
ffreep
xor
out
roll
cwtl
mov
dec
popa
inc
mov
jae
jp
repz
out
imul
insl
sub
dec
es
orb
lods
fcomps
pusha
outsb
jae
sbb
std
cmp
aad
xchg
out
sbb
test
sub
xchg
xchg
jb
imul
xor
jl
cmp
popf
dec
pop
je
aas
in
mov
inc
push
out
adc
sbb
das
and
fs
pop
lds
jnp
mov
dec
mov
das
sub
add
lcall
scas
mov
add
jne
push
jge
jp,pn
mov
arpl
jb
jbe
sahf
mov
xchg
fldcw
fstp
or
xchg
test
enter
mov
jge
inc
aaa
shrb
xchg
xchg
dec
sub
inc
mov
adc
imul
mov
jg
mov
cld
xchg
ljmp
and
out
pop
mov
mov
xor
cltd
addr16
ret
add
mov
pushf
dec
mov
imul
sub
movsl
add
xchg
xchg
incb
push
test
mov
cmpsl
std
pop
jle
mov
jp
ds
idivb
sbb
dec
loopne
pushf
and
shll
dec
push
add
add
mov
sarb
sub
push
mov
mov
in
and
stc
mov
bound
data16
movsb
lods
mov
dec
sub
pop
ds
in
hlt
dec
fdivs
mov
ljmp
aaa
mov
stos
test
arpl
mov
mov
lret
jae
push
out
xchg
stos
jnp
sbb
lret
in
mov
lea
in
dec
popa
lret
arpl
cld
add
mov
or
jno
xchg
inc
xchg
sbb
leave
add
jbe
and
cmc
mov
add
insb
int3
mov
inc
fadds
push
aas
lock
xor
xor
aad
sbb
sbb
out
popf
jp
jp
mov
jp
jne
mov
cli
ficoml
rorb
mov
mov
add
rcll
dec
inc
cmpsl
adc
aaa
nop
out
cmp
jnp
push
add
jle
sbbl
or
push
push
push
jg
dec
sbb
movsb
xorl
call
mov
jbe
pop
pop
insl
or
pop
or
ljmp
cmp
adc
icebp
sub
test
imul
jmp
push
fs
notb
scas
fimull
lret
mov
leave
in
jg
sub
cli
sub
or
js
mov
fwait
ss
push
adc
push
shrb
loop
out
fnstenv
fadds
inc
jmp
mov
in
data16
fbstp
js
sbb
xchg
xchg
test
mov
movsb
clc
mov
mov
push
push
test
js
lcall
imul
or
xor
out
test
add
or
adc
sub
pop
cmpsl
xor
push
cld
add
int3
mov
js
inc
iret
pop
jp
jae
lcall
cmp
loope
iret
inc
std
push
mov
fsubs
fs
addb
jnp
or
arpl
and
das
push
xor
pushf
cmp
inc
mov
dec
mov
or
and
adcl
cmc
mov
imul
stc
cmp
sbb
jo
xchg
xorl
jnp
jp
mov
test
shl
push
or
movsb
in
andl
inc
jnp
cmpsb
aaa
sbb
ja
pop
or
pop
xchg
hlt
hlt
cli
scas
sar
arpl
mulb
pushf
outsb
test
sbb
insb
fs
pop
mov
jmp
or
sbb
movsb
jmp
xchg
jbe
imul
jle
push
dec
std
mov
push
sbb
sbb
adc
popa
adc
inc
repnz
gs
cs
subb
daa
inc
hlt
lret
mov
in
sarl
mov
cmp
mov
jge
xchg
inc
xor
xchg
jecxz
mulb
adc
outsb
pop
push
iret
jmp
sub
mov
movsb
dec
imul
mov
adc
sub
sarb
shll
stc
cli
testl
jge
ljmp
cmpsl
jns
mov
cmp
adc
sbb
loope
mov
dec
enter
push
mov
cmp
into
inc
adc
or
fsubrp
insb
mov
push
or
and
scas
ja
addl
imul
sub
fisubl
int
push
jg
movsl
arpl
sub
mov
faddp
cmp
push
mov
sub
add
in
shrb
ljmp
add
popf
jne
mov
jnp
cmpsl
mov
imul
dec
scas
push
jl
sub
iret
lock
dec
sti
dec
int
cmpb
lcall
inc
movsb
and
mov
jb
xchg
pop
pop
mov
fs
inc
nop
fs
mov
push
jg
subb
in
jmp
xchg
jbe
insl
test
mov
hlt
dec
mov
push
test
pop
inc
into
lods
jle
pop
add
mov
push
cmp
mov
sbb
ljmp
jg
cmp
je
enter
jne
sub
int
arpl
por
cltd
cld
loopne
pop
in
pop
dec
adc
xchg
push
mov
jmp
add
push
insl
fs
mov
mov
daa
mov
clc
jae
pop
aad
repnz
or
ret
aad
les
jge
imul
pop
mov
inc
xchg
fsubl
gs
repz
fmuls
cltd
jo
inc
enter
test
mov
imul
rcll
adc
pop
ja
push
cwtl
mov
sub
inc
inc
sbb
ficoms
jp
sub
mov
popf
lods
sub
sahf
loope
mov
jne
call
push
jno
stos
cmp
lcall
xchg
xchg
cmp
xor
ret
jp
daa
les
or
jns
pop
popl
adc
pop
xchg
inc
mov
imul
sahf
inc
sub
dec
push
idiv
ss
or
or
cmp
cmp
mov
lods
jne
out
or
xchg
and
es
cltd
shlb
mov
cltd
pop
cmp
mov
repz
mov
mov
std
xorl
enter
outsl
je
or
inc
cli
mov
sti
ljmp
xchg
bnd
fs
mov
mov
add
les
ja
enter
call
xchg
popf
lea
je
xor
sbb
mov
cs
and
call
cmp
cltd
add
dec
jl
out
xor
jmp
xchg
enter
pop
cmp
outsb
mov
dec
sti
je
stos
add
jmp
pop
sub
sbb
inc
pushf
dec
lods
pop
xchg
in
inc
push
push
imul
call
insb
or
lret
mov
sub
add
outsb
out
fnstenv
push
dec
mov
add
mov
sti
lods
in
in
jo
cmp
fiaddl
push
mov
mov
mov
jmp
shrl
cli
cmc
xorl
push
lret
into
movsb
or
cmc
rcr
dec
mov
test
mov
xchg
mov
mov
jno
xor
add
sbb
xchg
in
jl
nop
lret
leave
incl
sub
lret
push
and
dec
inc
pop
mov
lods
xchg
push
inc
call
in
lods
pusha
push
in
jo
xlat
pop
shrl
mov
lret
pop
enter
lock
movsb
out
imul
or
xchg
sub
fs
jg
sub
jg
add
push
jp
dec
or
inc
pop
adc
and
das
xchg
arpl
faddl
inc
test
fnstenv
jl
ss
pop
imul
cltd
mov
fs
xor
cltd
dec
jl
inc
push
sarb
lahf
aam
outsb
in
es
and
popa
lock
xchg
xor
lods
in
mov
mov
dec
shll
ret
fistps
out
push
jge
jge
fmuls
clc
mov
pop
pop
cmp
pop
in
fldenv
dec
popa
jmp
ss
pop
ficoml
stc
add
je
imul
xchg
scas
jo
addr16
adc
mov
jns
test
mov
les
add
sbb
dec
xchg
fstl
and
xlat
push
pop
xlat
shrb
jbe
xchg
cmpl
push
in
jp
jge
push
mov
mov
test
mov
or
popf
cmp
sub
inc
sub
or
andb
stos
sbb
inc
inc
push
or
arpl
mov
out
jne
ljmp
push
dec
out
imul
add
push
jbe
fs
lds
jle
or
dec
loope
inc
jno
xor
pop
je
and
pop
shld
cwtl
arpl
push
and
or
xchg
fstpt
lock
ss
xchg
push
jae
push
es
jle
xchg
xor
in
lock
rorb
or
mov
jp
ret
adc
or
popl
jo
enter
push
mov
lret
and
insl
iret
cmpl
lea
cmp
inc
out
xor
bound
and
jne
xchg
stos
ret
inc
jp
es
out
movsb
imul
fdivr
mov
sub
mov
bnd
mov
out
inc
push
out
dec
add
jbe
or
add
mov
pop
lret
adcl
add
in
mov
outsb
push
das
stos
xchg
ja
lret
sub
and
cmp
scas
or
dec
sarl
insb
cmp
mov
sti
cmp
arpl
push
test
mov
jne
add
inc
fsts
push
mov
pusha
push
xor
loope
rol
lret
jecxz
cmp
ds
mov
fucom
into
mov
movb
cmpl
dec
pop
inc
popf
shl
mov
hlt
movsl
or
push
hlt
lret
sub
add
cmpl
das
pop
jbe
push
xor
call
insl
fwait
pop
adcb
movsb
popa
cmc
test
jmp
sbb
loop
inc
mov
cltd
push
or
sbb
icebp
movsb
hlt
out
and
mov
fdecstp
pop
insl
fidivl
aas
shll
pop
jle
mov
push
xchg
xchg
imul
gs
push
mov
inc
sub
add
out
lods
mov
sub
mov
sub
in
call
test
aam
add
push
jnp
inc
cmp
pushf
sub
pop
ds
out
lret
mov
jnp
or
xchg
xor
mov
mov
insl
into
adc
pop
pusha
addl
loop
cmp
push
dec
in
test
scas
ja
push
xchg
mov
inc
add
cld
pop
jge
lahf
add
int
add
test
movsb
shll
sbb
pop
push
sbb
add
fbstp
sub
sbb
push
out
cmp
xchg
inc
loop
lcall
inc
into
loope
les
fmuls
into
xor
in
insb
or
arpl
loop
nop
ss
scas
in
movsb
mov
cmp
push
pop
sub
rorb
lret
cwtl
push
hlt
push
popa
insb
addb
cmpsl
pop
gs
out
and
or
into
pushf
or
xchg
and
int
jp
add
pop
xor
pop
dec
push
movsb
mov
fnsave
out
cmp
jl
inc
add
int3
xor
or
lret
sub
hlt
ss
movsb
add
loop,pt
ljmp
dec
mov
sub
es
std
add
jecxz
into
movsb
or
mov
adc
sar
les
xchg
or
dec
call
push
sbb
cmp
addl
fsubrs
in
adc
aas
dec
xchg
adc
mov
inc
fs
xchg
fadds
cmp
sbb
pop
inc
lods
movsb
xchg
in
inc
mov
out
cwtl
lret
jle
jb
movsb
jnp
imul
xchg
inc
cmp
xor
xchg
sub
leave
sbb
and
imul
pop
cmp
mov
pop
imul
fisttpl
dec
sbbl
shlb
ja
sub
jmp
and
add
movsb
pop
test
adc
adc
aad
mov
pop
dec
xchg
jg
xor
jo
outsb
insb
inc
cwtl
adc
aam
fs
enter
dec
pop
rorl
fnstenv
inc
dec
mov
mov
arpl
xor
pop
insb
sarl
xchg
lea
xchg
cmpsb
cmovbe
push
jmp
notl
push
ret
test
test
or
mov
rcrl
jb
mov
push
xchg
jg
fmull
mov
adc
mov
movsb
iret
aad
repz
mov
lods
aas
mov
loope
cmp
pushf
loop
sbb
jle
cmpsb
mov
outsb
stc
inc
mov
lcall
push
inc
inc
out
cmp
jp
dec
cmp
shrb
inc
imul
int
adc
shlb
xlat
inc
leave
rcr
pop
jle
pop
push
jg
mov
cmpsl
les
ss
cld
movsl
test
push
pop
cwtl
stos
inc
xchg
mov
mov
in
decb
or
aaa
in
into
adc
out
js
andl
cld
jb
sti
stos
mov
xchg
xor
cmpsl
popa
insl
xchg
mov
jmp
stos
movsb
ljmp
fildl
jmp
popa
ror
lds
stos
sbbl
repnz
mov
push
shrl
jecxz
shrb
lds
xlat
mov
in
out
cmp
jg
stos
movsb
and
jp
sub
fsts
insl
push
inc
mov
test
movsb
ds
pop
xchg
lods
cmp
dec
cmc
fcompl
cld
push
pop
ljmp
dec
std
inc
in
dec
add
xor
inc
mov
push
je
fs
sub
movsb
push
mov
popfw
ds
pop
or
inc
adc
jg
int3
push
push
movsb
xor
test
pop
sub
dec
dec
or
xchg
mov
aas
mov
loope
insl
cmpsl
sub
ds
fldt
inc
mov
mov
stc
insl
ljmp
pop
ret
cmp
lahf
or
das
push
bound
mov
sub
push
push
adc
cwtl
daa
dec
outsb
mov
rcll
or
push
inc
push
cli
call
outsb
sub
je
popl
roll
sub
push
pop
xor
dec
inc
das
adc
jns
mov
lock
xchg
inc
or
mov
sbb
or
outsl
lods
push
sub
jnp
mov
xor
sbb
jp
jns
push
hlt
push
add
lods
fwait
cmc
fsts
adc
add
insl
sbb
dec
movsb
mov
inc
lahf
nop
imul
stc
imul
push
mov
jb
inc
sub
mov
stos
inc
adc
sub
adc
add
mov
mov
arpl
in
js
out
jb
xchg
das
fsts
cmpsl
iret
add
jge
add
jg
or
mov
and
xchg
ror
dec
lcall
xchg
cs
mov
lret
dec
cmp
into
arpl
xchg
fidivrs
cmp
dec
pop
mov
jle
pop
stos
xchg
in
mov
imul
pop
ss
orl
push
xor
pusha
or
cmpsl
sarl
add
adc
jae
mov
mov
and
jmp
jp
andb
sahf
cmc
test
pop
je
cltd
dec
mov
lret
pushf
movsb
dec
int3
mov
adc
inc
sub
inc
lea
or
jae
xor
lret
test
bound
xchg
loope
test
mov
cltd
ret
and
inc
js
adc
out
xor
jae
and
sbb
or
lods
sbb
inc
mov
int
lahf
repnz
fsubrl
test
push
lea
sub
out
pop
sahf
or
lods
dec
movsl
stos
scas
jl
jno
ss
jp
fs
add
stos
sub
into
xor
or
push
popf
jbe
sub
jmp
jb
inc
push
xchg
arpl
adc
sbb
repnz
push
leave
sub
decb
jg
inc
out
fnstenv
dec
inc
imul
cmpsb
push
call
and
stc
ss
out
inc
sbb
je
jg
push
repz
fs
sbb
push
mov
je
cli
push
test
push
jle
cs
sarb
jle
add
cmp
fsubp
mov
test
inc
fstpt
sbb
jo
mov
rcrl
mov
je
or
xchg
mov
shlb
jmp
shll
ret
pop
push
xchg
push
push
fs
adc
dec
hlt
lea
xor
fldenv
mov
inc
xchg
and
dec
aam
stos
inc
cltd
movsl
leave
jp
shrl
mov
inc
fsts
cli
outsb
push
test
mov
das
les
je
xor
xor
dec
lods
test
aam
jge
fbld
fnstenv
push
mov
add
push
sbb
xchg
adc
dec
mov
inc
ljmp
and
push
jb
push
xchg
inc
xor
sub
push
pop
cld
enter
ret
mov
and
xchg
pop
push
jl
imul
xchg
idiv
pop
loop
xor
ss
add
mov
push
pop
sub
lahf
in
cmp
cmc
iret
call
adc
movsb
adc
inc
jns
orl
movsb
jne
mov
jecxz
roll
sti
mov
movsb
pop
les
xor
jge
cmp
es
lds
jp
and
out
mov
imulb
push
data16
inc
es
fistps
add
sbb
in
out
jae
cli
jg
pop
lods
shll
inc
inc
mov
mov
push
sub
xor
jae
addl
out
inc
popa
jne
ja
sbbl
cmpsb
test
sub
roll
ss
out
jl
xor
mov
cltd
out
fdivr
mov
fsubrs
fstpl
push
sahf
js
xor
mov
cltd
sbb
add
lret
lahf
push
push
and
adc
sbb
add
data16
das
in
push
imul
pop
pop
lock
pushl
jo
es
xchg
inc
xchg
mov
push
mov
rcrl
jle
clc
dec
pop
jle
outsl
dec
das
insl
push
cld
in
std
pop
xor
scas
daa
jl
pushf
stc
mov
pop
test
mov
call
mov
xor
dec
orl
xor
cmp
jnp
mov
movsb
jle
adc
xchg
icebp
inc
aam
mov
adc
outsb
push
xchg
add
jae
sub
addr16
adc
fidivl
clc
sbb
insl
xorl
xchg
insl
mov
inc
clc
jae
jg
xchg
rcr
mov
mov
mov
out
in
orb
out
jle,pt
sub
jle
idivl
movsb
jbe
inc
and
lret
loop
pop
outsb
sbb
ret
outsl
cmpsb
pop
sbb
icebp
out
sbb
mov
mov
inc
mov
imul
or
mov
fnstenv
inc
lret
dec
jne
mov
sahf
push
scas
jg
movsl
sbb
addr16
fldenv
push
push
cmp
lret
mov
ljmp
and
leave
or
sbb
ja
push
jmp
mov
stos
into
mov
inc
aam
popf
adc
ds
loope
ss
nop
andb
sbb
mov
pop
shlb
pop
loopne
push
sub
inc
ljmp
jp
mov
mov
jge
daa
jb,pn
ss
bound
xchg
push
xchg
pop
bound
insb
or
shlb
jns
fisubl
mov
call
fmull
int3
xchg
jmp
ss
or
ljmp
sar
sbb
fistpll
loopne
xor
and
push
dec
in
mov
add
xor
insb
or
aam
pop
in
mov
lret
push
fs
push
daa
cmpb
push
outsb
jne
sub
fld
arpl
mov
fs
std
sbb
cmp
add
jb
pushl
arpl
jle
sahf
mov
cmp
repnz
push
dec
cwtl
insl
or
aas
iret
jmp
scas
cli
sbb
insb
adc
test
jle
fdivs
cmp
and
in
inc
test
mov
add
dec
lock
es
scas
adc
les
fimull
or
pop
leave
shl
xor
leave
push
mov
dec
xchg
ret
push
in
sti
shlb
pop
mov
test
or
stos
fs
sub
movsb
imul
fsubs
cmp
cmpsl
push
mov
mov
mov
add
push
out
movsb
test
jne
imul
push
std
nop
inc
push
scas
into
clc
fistpll
shrl
mov
pop
dec
adc
imul
ret
or
pusha
out
pop
push
jg
and
stos
imul
dec
sub
insl
adc
sub
ss
sub
sub
loop
into
pop
cli
inc
mov
add
cwtl
out
mov
sub
nop
aaa
adc
out
or
mov
int
test
cmpsb
outsl
add
push
test
les
loop
ret
loopne
pop
lahf
adc
daa
mov
dec
mov
mov
lds
pop
ja
dec
push
fs
imul
fildll
mov
shlb
pop
pusha
rcrb
xor
movb
imul
dec
dec
lock
jecxz
rcrb
dec
shl
jg
mov
jns
cmp
cmp
ljmpw
in
lahf
pop
adc
push
and
lahf
mov
cmp
aas
push
daa
jb
jbe
sbb
mov
xchg
sub
insl
xor
add
in
and
inc
xchg
mov
sbb
fiadds
in
pop
push
or
sahf
push
inc
arpl
mov
jae
or
cwtl
hlt
adc
cli
xlat
pop
add
jmp
jbe
sahf
aad
xchg
adc
xor
mov
test
dec
sbbb
inc
pop
jns
outsb
xor
add
mov
or
int3
out
lea
pop
std
dec
in
jae
dec
push
inc
inc
test
inc
dec
add
insb
or
and
sbb
dec
insb
xchg
jle
jmp
inc
int3
dec
xor
les
pusha
stos
enter
fs
psadbw
push
sbb
mov
xlat
sub
jp
dec
in
jp
lock
inc
mov
test
es
ret
addb
popf
mov
mov
aam
cmc
imul
jb
inc
xchg
cmp
dec
xchg
test
test
mov
popf
xor
pop
or
out
push
pop
sub
fs
fcmovbe
push
xchg
cltd
xchg
pusha
insb
add
addr16
imul
in
bound
push
loopne
sbb
jle
mov
push
std
push
jmp
shlb
outsb
outsb
leave
shrl
ds
or
ss
jle
adc
fsubr
popf
pop
pushf
subl
mov
orb
dec
or
mov
mov
int
cmpl
in
xor
mov
imul
fsub
xchg
dec
jne
inc
add
sub
shll
mov
mov
mov
sbb
add
imul
in
jbe
test
ljmp
mov
aaa
pop
xchg
call
pop
add
mov
push
loop
nop
dec
fs
push
xlat
cltd
pop
je
cli
idivb
fwait
mov
fs
xor
int3
in
sar
loop
enter
add
mulb
cmpl
or
addb
inc
xlat
lcall
xchg
dec
out
out
push
add
push
xor
add
xor
pushf
cmc
cmpsb
mov
sahf
mov
iret
jp
xchg
ret
js
adc
add
int3
sbb
jns
or
jne
pop
adc
xchg
adc
cmp
inc
fildll
in
lahf
inc
ja
mov
ljmp
lcall
in
pop
idiv
xchg
jmp
jg
mov
push
shlb
adc
jo
adc
inc
mov
cmp
out
in
pop
lret
lahf
pop
mov
inc
add
leave
pop
mov
sbb
shrb
stos
jp
cs
movsb
out
imul
inc
ljmp
and
fs
cmp
cmpsl
sarb
xchg
repz
mov
push
mov
orb
jg
sbb
das
mov
cltd
xchg
sahf
add
addl
adc
scas
mov
je
cmp
sbb
das
hlt
mov
adc
push
es
dec
jno
inc
les
shlb
fnstenv
sbb
xchg
rcll
test
or
jecxz
aad
jno
sub
bnd
jnp
fwait
rclb
inc
sub
mov
ds
xor
jae
aam
add
cmp
outsb
push
push
mov
into
gs
ss
cmp
imul
jo
test
dec
cltd
dec
hlt
sahf
and
mov
inc
mov
push
les
lods
mov
adc
or
ss
out
mov
out
fs
mov
jnp
dec
push
lea
sub
mov
insb
movsb
repz
out
dec
pop
and
imul
js
dec
inc
xorl
mov
shrb
aas
in
ficoml
pop
mov
cmpsl
cmp
xor
mov
pusha
push
add
cld
outsb
movsb
outsb
das
mov
imul
into
inc
js
sbb
mov
mov
cld
rcr
fdivrs
insl
dec
pop
stos
scas
outsb
lods
mov
sti
je
insl
or
in
add
sub
daa
test
hlt
jnp
mov
lods
mov
xlat
mov
jp
dec
jp
dec
mov
jae
jo
movsb
and
jp
mov
repnz
and
lods
dec
adc
cli
or
mov
inc
xchg
mov
ret
mov
sbb
fs
sbb
pop
mov
xchg
xor
sub
jmp
cmp
sbb
mov
or
insb
sub
outsb
imul
shrb
iret
call
inc
push
lods
or
push
loop
and
movb
call
out
xor
out
mov
or
sbb
pop
push
in
xor
fs
sub
leave
xor
push
imul
test
in
mov
clc
loop
fnstsw
xor
in
dec
insb
adc
dec
cmp
in
out
test
stos
iret
xor
dec
mov
cwtl
stos
xor
andl
outsb
fs
mov
ljmp
dec
add
adc
mov
pop
inc
sbb
insb
rcl
push
lret
je
daa
add
jecxz
jg
jno
dec
es
jl
subb
andl
cmpsl
lds
cmp
jb
aad
in
fcomps
scas
cmp
push
outsl
jne
or
aas
push
ljmp
xorb
push
jae
test
mov
mov
xchg
jno
push
arpl
pop
jae
rclb
jl
shr
adcb
push
paddsb
in
mov
imul
loopne
in
mov
test
mull
mov
out
icebp
xor
adc
push
jg
jmp
shlb
in
ret
mov
js
std
shrb
test
mov
inc
jp
mov
jbe
mov
adc
mov
push
inc
inc
lret
fs
adc
xchg
xchg
in
dec
mov
cmc
add
out
adc
addr16
bnd
sbbb
stos
xchg
cmp
xor
xor
inc
sbb
inc
or
pusha
test
cmp
pop
call
repnz
jg
mov
sar
dec
ss
push
xchg
mov
cltd
inc
or
pop
mov
imul
lcall
mov
lds
pop
jbe
cld
or
int
mov
aam
and
mov
xchg
dec
test
xchg
sub
sahf
fiaddl
and
nop
mov
mov
mov
cmp
pop
mov
test
fisubrl
add
and
mov
mov
aaa
or
xor
xchg
adc
inc
pusha
addb
mov
dec
fsts
stc
jno
mov
fisttps
add
mov
insl
sub
test
mov
ret
jle
xor
adc
ss
cmc
jbe
xor
addr16
sbb
leave
add
cs
jb
jge
mov
push
add
dec
mov
shr
or
fistpl
cmpsl
arpl
push
imulb
cmpsl
jns
in
jmp
in
aad
pop
popf
lret
dec
mov
mov
ja
cwtl
das
jns
cli
mov
dec
inc
shr
stos
and
imull
ficoml
test
jne
jp
sbb
aaa
push
xchg
lret
out
push
inc
or
mov
dec
cmc
pop
or
mov
jbe
dec
jp
sub
fs
cmp
das
push
push
lcall
popl
shrl
inc
mov
in
or
gs
adcb
ds
jmp
lret
les
call
out
fprem1
rclb
jp
popa
imul
cmp
mov
in
shl
inc
adc
movsb
stc
push
scas
cmp
inc
gs
iret
sub
rcl
ret
adc
rcrb
push
rorb
movsl
jp
push
fidivs
cmp
dec
call
jl
insl
push
mov
arpl
pop
inc
movsb
in
mov
mov
rolb
pop
push
jbe
imul
lret
push
adc
mov
sub
insb
or
cltd
dec
mov
jno
inc
lret
mov
dec
test
mov
mov
repnz
data16
xchg
in
dec
rorb
lea
iret
lods
and
push
es
lea
fs
dec
fiaddl
pop
sub
add
ss
iret
jle
stc
popa
mov
mov
sbb
xchg
push
test
fsubr
negb
pop
call
cmp
in
std
decb
xchg
sub
push
repnz
shlb
hlt
xchg
push
movsb
les
fldl
out
sarl
sbb
imul
xchg
mov
mov
jg
ljmp
daa
or
xor
add
jmp
bound
inc
jl
pusha
or
jbe
cmp
inc
add
ss
imul
push
popa
outsb
dec
in
inc
ds
adc
std
fdiv
mov
xlat
rcl
push
je
pop
xchg
jae
pusha
aad
sub
sbb
mov
fdivs
fs
test
xor
lret
mov
imul
imulb
sbb
fnstenv
adc
jnp
dec
mov
les
std
jg
dec
xchg
xor
xlat
out
out
popa
arpl
aam
pop
mov
pop
sub
dec
mov
cmp
inc
adc
jl
int
adc
jno
and
cmpsl
scas
aad
data16
xchg
cmc
inc
mov
dec
ljmp
dec
rcrb
mov
jne
and
jnp
pop
jb
out
inc
imul
stc
out
xchg
jg
or
pop
cmpsl
in
hlt
cld
sub
popa
and
imul
fs
data16
movsb
mov
loop
ss
call
jmp
movsb
test
cltd
sub
jno
repnz
mov
dec
lds
sbb
mov
dec
fs
lods
fisttpl
jne
shrl
add
fldcw
pop
xchg
imul
add
lea
cmc
movsl
mov
insb
dec
sbb
mov
dec
mov
and
mov
sbb
pop
cltd
js
cmp
cs
out
icebp
call
inc
lock
mov
sub
add
xchg
icebp
dec
mov
jnp
push
lret
jl
lcall
inc
pop
jns
or
repz
movsb
out
jae
ret
outsl
cmp
bound
dec
shll
mov
ds
loopne
add
pop
xor
pop
adc
out
sbb
movl
lods
sbb
outsl
mov
inc
push
inc
lods
pop
adc
jle
cmp
mov
jbe
push
sbb
mov
scas
imul
mov
sub
jnp
fdivrl
adc
shlb
push
fs
cmpsl
frstor
jo
inc
enter
adc
fidivl
jne
inc
lods
pop
dec
and
xchg
xchg
push
fs
aam
repnz
mov
or
fistpl
or
cmp
push
jecxz
je
das
insl
shlb
pop
inc
out
fs
lods
and
inc
movsb
js
cmp
xchg
push
add
and
sub
adc
push
mov
je
push
jae
pop
or
jge
dec
xchg
into
dec
pop
jnp
out
movsb
or
adc
shrl
xchg
outsb
iret
pop
fwait
mov
pop
js
or
and
pop
cltd
out
mov
sub
insb
lea
push
rcrl
inc
test
push
or
lcall
mov
lods
arpl
mov
test
jmp
cltd
add
gs
into
in
lahf
jnp
out
push
aam
mov
jbe
int
cltd
in
add
cli
daa
inc
lods
dec
xchg
lret
imul
adc
inc
divl
push
sbb
dec
dec
pop
jge
movsb
push
lock
jb
adc
mov
push
adc
mov
sub
shll
clc
das
outsl
enter
inc
stos
add
ljmp
sbb
add
cmp
xchg
or
xor
fs
adcl
xchg
mov
ja,pt
out
cs
outsl
fs
or
sbb
and
bound
cli
xchg
and
xchg
sub
and
out
fucom
iret
ja
outsl
lods
jne
fs
add
bound
pushf
adc
out
pop
outsb
xor
sub
call
lret
aam
inc
pop
test
notl
jnp
cmp
hlt
jp
jne
xchg
js
andb
ret
mov
dec
adc
dec
sub
add
cmpsl
mov
loop
popf
xchg
push
mov
xchg
pop
pop
mov
into
aaa
mov
and
inc
jmp
movsb
jl
mov
arpl
jl
rorl
sub
inc
movsb
jns
test
mov
movsl
shrl
adc
sar
stos
jno
movsb
jmp
adc
cmp
or
xchg
shll
dec
add
lea
cmp
fs
insl
movsl
mov
xor
into
aad
hlt
jle
fwait
incb
inc
mov
enter
nop
into
outsb
or
jbe
add
leave
lods
mov
mov
sub
xlat
dec
xor
cmp
mov
test
cmpsb
rorl
aad
add
out
jmp
jb
push
cs
lds
mov
mov
ja
mov
push
outsb
inc
cmp
repnz
adc
xorb
xchg
jle
fsubrs
and
inc
cwtl
in
push
add
insb
jle
out
push
cmp
outsl
movsl
xchg
pop
orl
dec
mov
loop
dec
rorb
sarl
movsb
cli
pop
ret
xchg
mov
sub
jg
jo
fwait
imul
pop
fstpl
mov
jl
js
and
fsub
inc
psubusw
mov
movsb
mov
pop
dec
adc
jnp
mov
inc
sbb
sub
push
insl
mov
loopne
mov
in
dec
mov
fistpl
ret
or
push
daa
imul
mov
xor
or
test
and
jnp
lock
or
xchg
shrl
xchg
mov
mov
sub
and
cmp
lret
sub
push
add
cmpsb
push
jg
mov
fcmovnbe
jge
mul
ret
dec
sbb
cltd
scas
add
roll
lret
adc
subl
jge
stos
cs
fcmovnu
pop
xor
ret
xlat
popf
in
fwait
mov
rorb
lods
call
inc
inc
pusha
xchg
jl
adc
push
sub
inc
inc
lods
je
dec
cli
push
dec
cmp
or
fadds
and
js
clc
insb
enter
mov
xlat
lcall
push
push
sbb
push
or
add
iret
jmp
scas
jp
dec
outsl
int3
mov
jne
sbb
das
fwait
xchg
loope
mov
cmp
aaa
into
sbb
xor
push
cmp
mov
sbbl
fs
test
mov
addr16
fistpl
add
xor
mov
outsb
cmpsl
arpl
sub
movsb
flds
lock
or
shrl
sub
in
adc
jbe
enter
lcall
outsl
adc
stos
adc
gs
into
in
jge
dec
outsb
int3
mov
dec
pop
pop
sub
or
sbb
inc
or
outsb
pop
cmp
lcall
pop
scas
movsb
cs
decb
stc
into
mov
push
in
xchg
pop
dec
xchg
out
push
sub
mov
mov
pop
inc
mov
xchg
pop
jg
out
sbb
imul
leave
pusha
xchg
jl
jnp
std
xor
or
sahf
js
dec
mov
jne
jae
filds
pavgw
and
jl
ljmp
add
loopne
dec
pusha
or
sti
lcall
lea
mov
push
xchg
out
adc
lds
fs
or
mov
pop
test
pop
sub
add
cld
mov
pop
xchg
andb
aas
lcall
fcom
scas
jp
xchg
sbb
out
xchg
js
jno
stos
cmp
jmp
mov
inc
fwait
loope
cmp
mov
push
mov
adc
inc
xchg
dec
loop
scas
out
push
pop
and
pushf
mov
decl
fcom
or
sbb
xchg
outsb
add
frstor
dec
flds
cmc
and
sarb
mov
shll
popa
xchg
cli
loopne
mov
fnstenv
sub
cmp
cli
fs
xor
or
xchg
mov
xor
into
xchg
sbb
sub
sub
dec
out
mov
sub
movsb
jns
ja
pop
cwtl
fisttps
lret
sbb
cmpsl
sub
stc
or
ss
cmc
outsl
inc
enter
push
lcall
ljmp
insl
cs
pop
aas
insb
push
sub
and
add
xchg
push
and
leave
dec
jnp
push
orb
call
fildl
pop
pop
fisubrl
fcompl
inc
mov
aas
jp
pop
int3
xchg
shll
lock
pop
inc
data16
nop
sub
sbb
mov
jmp
fmul
jg
mov
clc
int3
add
jge
sbb
ja
cmp
add
jbe
testb
aad
push
mov
add
ja
fwait
shrb
cmpsl
sarb
shl
repnz
fisttpl
ljmp
cmpsb
lock
cmp
inc
int3
jg
shr
adc
mov
imul
add
dec
icebp
xchg
adc
or
xchg
notb
cli
ret
pop
push
mov
jnp
dec
cmpsb
ljmp
xor
mov
add
adc
lahf
addb
notb
jbe
sahf
cltd
insl
add
jg
cmpsl
scas
or
nop
test
adc
or
nop
xchg
ljmp
dec
out
push
fisttps
or
int3
mov
orb
add
fsubl
ljmp
add
popl
add
mov
mov
cmp
adc
cld
jmp
lods
lahf
ret
xchg
cmp
mov
sub
imulb
jbe
adc
xor
in
cld
gs
movsb
and
mov
cmp
inc
push
push
inc
push
xchg
and
lods
les
in
test
aad
inc
jmp
push
add
fs
pop
popf
ss
test
adc
cmp
es
call
sbb
movsb
cli
or
cwtl
lods
adc
xchg
inc
add
lret
jmp
jnp
sahf
cwtl
dec
add
pop
aam
mov
adc
fs
adc
in
mov
or
js
pmaxub
mov
out
es
xchg
out
daa
adc
inc
movsb
or
sub
jmp
inc
outsl
dec
sarl
dec
call
jg
negl
pop
inc
leave
out
popa
fcompl
rcrb
xor
js
fildl
pop
xor
cli
mov
inc
pop
mov
mov
stos
push
dec
stos
xor
ss
idivl
sbb
fimull
outsb
or
inc
loop
cmc
shrb
sarb
adc
dec
std
mov
mov
jae
sub
add
test
out
cwtl
cmovns
add
mov
call
pop
sarb
cs
or
lea
into
xor
sub
test
movsl
pop
clc
ljmp
sbb
jp
push
imul
add
xchg
fcoms
adc
fs
push
jl
gs
jmp
cmpsl
cmp
jg
outsb
lea
js
xchg
mov
dec
ljmp
inc
jns
and
mov
nop
lock
jge
cmp
add
nop
xchg
and
insl
out
jle
hlt
lret
mov
imul
arpl
popa
add
or
subl
movsb
inc
jmp
lret
pop
mov
dec
mov
fdivrl
rol
jge
std
adc
mov
int
int
jp
inc
aad
dec
adc
sub
das
lods
shlb
cmp
xor
and
cs
pop
stc
push
or
gs
insl
pop
ret
jbe
fsubl
jbe
int3
inc
insb
fmuls
sub
and
outsb
add
ljmp
xchg
sbb
aam
rorl
cmpsl
test
sub
mov
jnp
out
mov
mov
lret
rolb
sbb
mov
aas
data16
arpl
mov
cld
cmc
cwtl
nop
out
dec
adc
roll
iret
inc
pop
shll
decl
push
scas
mov
mov
test
lret
jno
fsubs
stos
inc
mov
xor
addb
lcall
adcl
in
cmp
jp
movsb
hlt
test
dec
icebp
fptan
and
scas
fiaddl
mov
inc
jmp
movsb
cld
mov
push
pop
xchg
sbb
jp
dec
lret
mov
jg
cmp
push
or
cmp
add
pop
jge
cmp
pop
xabort
push
mov
sbbl
pusha
sub
adc
aas
in
imul
mov
jno
dec
jo
mov
xchg
jno
jns
adc
inc
lret
mov
jl
push
sub
aam
into
in
inc
mov
imul
mov
stc
fwait
aas
push
jmp
jns
add
rcrl
add
ds
xchg
xlat
call
hlt
adc
pop
jl
fmul
lods
push
add
sbb
push
xchg
fdivrl
adc
jnp
sbb
sub
sahf
fstpl
or
sub
cmp
and
fnstcw
cmp
in
out
push
arpl
add
into
jo
add
movsb
mov
daa
jg
xchg
in
jb
fld1
sbb
add
inc
push
adcl
out
pop
rcpps
adc
lock
cmpsl
mov
lods
mov
cmp
push
or
add
fcomp
cmpsl
jge
outsb
scas
mov
frstor
sub
pop
sub
inc
mov
addr16
pop
rcrb
or
test
test
xor
imull
dec
pop
mov
movsb
xor
es
adc
pusha
test
adc
mov
pop
sbb
clc
fs
add
into
push
cmpsb
push
out
jge
dec
jae
adc
adc
xchg
jmp
hlt
aas
subl
inc
mov
dec
mov
imul
and
stc
in
push
jp
mov
lret
xchg
sbb
sbb
and
testl
sbb
movsb
mov
loopne
mov
xor
jl
into
mov
imul
les
nop
scas
cmp
sub
pop
jmp
xchg
pop
mov
sub
leave
shll
or
loopne
rorb
aas
mov
dec
jo
stc
dec
dec
fs
push
fisubs
mov
outsb
pop
xchg
ljmp
out
clc
bound
sbb
pop
in
into
movsb
cmpsb
loopne
sbb
jg
xchg
mov
ret
sub
popa
bound
xchg
inc
insl
fstps
sub
xlat
jle
imul
dec
das
inc
inc
in
sbb
and
mov
movsb
es
mov
and
mov
mov
xlat
int
std
test
mov
mov
lods
insl
fs
lods
stos
lea
rorl
xchg
inc
and
lea
lret
jb
out
push
repz
add
arpl
jno
cltd
popa
pop
jl
stc
stos
mov
movsb
adc
and
insb
xor
xchg
push
repz
in
sub
fwait
repz
adc
aas
stc
jecxz
inc
mov
sbb
and
dec
inc
sub
rolb
jae
push
sbb
movsb
push
cmp
aaa
cmp
jbe
push
pop
insl
movsb
jle
loop
cmp
sub
lcall
icebp
cwtl
or
jp
pop
scas
fisttpl
loop
jno
inc
test
ss
les
and
pop
lods
sar
cs
fwait
pop
iret
jmp
imul
jp
lcall
movsb
inc
inc
and
ljmp
insb
inc
sahf
mov
enter
test
ljmp
add
clc
pop
xchg
stos
mov
aam
sbb
pop
or
or
push
jns
dec
subb
and
adcl
inc
insl
shll
push
add
xor
js
push
mov
and
sbb
fs
scas
sarb
stos
mov
xor
mov
dec
aad
xchg
insb
mov
inc
jns
cmp
jle
clc
pusha
icebp
fldl
fs
shlb
aaa
sub
cld
cld
mov
pushf
sbb
les
xchg
dec
dec
xor
push
xchg
add
or
rcrl
je
dec
dec
jno
icebp
lods
push
inc
or
arpl
sub
xor
mov
adc
pusha
lcall
xor
inc
and
dec
or
fwait
test
imul
insb
pop
leave
movsb
inc
nop
push
call
imul
clc
in
rclb
mov
lods
cld
ror
out
dec
mov
dec
ds
mov
adc
cmp
cmpsl
outsb
sub
cmpsl
std
xor
cltd
in
dec
out
sub
jmp
loopne
bound
into
addr16
inc
imul
fldl
or
mov
xchg
pop
ljmp
loope
daa
std
jle
jge
ret
or
repz
call
fdiv
out
cmp
mov
in
add
pop
push
adc
dec
js
enter
test
ss
int
movsb
fdivrs
inc
sarb
fs
push
ror
inc
mov
dec
loopne
xchg
fs
cmpsb
out
sbb
stos
stos
and
or
mov
sbb
or
fldcw
pop
mov
xchg
imul
jge
lret
and
mov
in
hlt
sub
push
xchg
and
sub
aaa
mov
mov
dec
or
push
xchg
and
inc
jb
out
sbb
adc
or
mov
pop
aad
dec
mov
repnz
movsb
lds
dec
rclb
imul
xchg
dec
xchg
mov
sahf
add
xchg
sbb
mov
add
mov
jnp
das
ljmp
je
pop
es
xchg
mov
movl
and
jp
dec
call
mov
test
mov
cmc
popa
negl
xor
test
sbb
fidivl
sbb
sub
inc
mov
in
jge
lods
or
cltd
inc
popa
into
jge
rcll
aas
inc
xor
dec
cmp
std
sub
xor
jge
das
fs
mov
repnz
out
lcall
roll
decl
pop
add
mov
add
stos
mov
repnz
jmp
into
ficoml
fidivrs
pcmpeqd
dec
ss
test
dec
xor
push
sbb
inc
sbb
std
cmp
loope
add
or
ja
fadds
gs
xchg
jbe
push
fwait
pop
fs
flds
into
js
js
or
and
push
or
fistpll
cld
inc
dec
add
fldcw
test
and
sahf
push
or
cmpl
imul
push
jne
lods
test
call
fwait
pop
fdivs
jle
loope
str
ficompl
dec
shll
subl
or
shlb
aam
cmp
push
nop
and
ds
movsl
loopne
call
test
fbstp
test
xchg
dec
mov
mov
jnp
out
mov
sahf
push
mov
cltd
fisubl
outsl
pop
fs
iret
cmp
cmp
fs
mov
mov
fldenv
rcll
shl
rolb
pop
dec
cmp
jae
adc
sub
sbb
push
sbb
xor
adc
mov
xchg
jo
lret
pusha
jl
aaa
adc
adc
xor
andl
outsl
stos
cwtl
pop
or
je
mov
and
jne
sahf
adc
in
shrl
dec
add
imul
lret
push
xchg
inc
pop
mov
dec
aas
cli
popf
ds
in
outsb
arpl
or
outsb
sbb
sbb
xor
icebp
mov
push
std
pop
jp
out
movsb
cmpsl
test
in
jge
push
cmp
jg
jns
mov
frstor
push
in
cld
adc
outsb
push
rolb
leave
arpl
in
and
mov
insl
push
add
stos
mov
jno
or
push
call
pop
or
push
fs
jb
test
pop
arpl
js
or
push
or
imul
adc
je
inc
movsl
movsl
stos
inc
sahf
jg
dec
dec
dec
xchg
insb
mov
es
ljmp
lods
js
ja
dec
inc
sub
out
dec
insb
jb
addr16
pop
xchg
push
add
jle
xor
std
movsb
mov
cmc
lea
mov
out
arpl
outsb
mov
jo
lods
mov
fists
hlt
lahf
sbb
dec
push
movsb
out
add
push
fwait
in
pop
in
xor
shlb
sbb
pop
jp
lea
imul
mov
pop
sbb
ljmp
or
mov
dec
jns
aaa
mov
aas
outsb
stos
push
incl
adc
or
cmp
push
mov
cld
inc
lods
mov
pop
sub
xor
jmp
xchg
aaa
push
pop
dec
bound
fwait
adc
mov
loop
sbb
xadd
push
mov
xchg
stos
inc
xor
xor
xchg
mov
iret
inc
int
sbb
dec
cmp
jnp
loop
xor
mov
or
movsl
das
lods
xchg
add
lods
sub
pop
les
push
push
xchg
sbb
out
popf
add
ss
in
test
ds
xchg
int3
test
int3
aad
adc
add
mov
aad
jg
inc
sti
push
test
add
shrb
loop
sbb
shlb
mov
fs
sbb
movsb
ja
fldcw
pop
pop
ss
cmc
or
or
mov
inc
aas
push
outsl
sbb
insl
fs
adc
int3
push
sbb
push
mov
mov
jle
rcrb
add
or
movsb
outsb
cmpb
subb
insb
dec
repz
sbb
inc
sbb
xor
mov
sahf
lret
pop
fmuls
cmpsl
aad
push
cmp
pushw
lcall
mov
mov
aam
add
in
imul
imul
push
dec
lret
or
cmpsl
mov
movsl
cmp
sar
or
xchg
out
push
inc
sbb
sub
repz
and
rorl
fldenv
or
nop
insl
pop
stos
xchg
call
cmp
pop
xor
xchg
sahf
lret
xchg
stc
imul
fcompl
jl
xor
jno
mov
mov
or
idiv
lds
mov
dec
fisubl
xchg
pop
cmpb
loope
push
cli
mov
jle
jae
add
call
fidivs
push
cmpsb
sbb
ret
fadds
pop
xor
adc
lods
out
adc
jno
sub
mov
lods
sub
fwait
sub
cmpsl
out
xor
sarl
mov
xchg
movl
out
mov
jle
rcl
iret
push
jae
or
inc
mov
sbb
mov
loope
jns
inc
neg
lock
fisubs
call
cs
jno
lcall
cmp
xchg
mov
into
mov
sbb
mov
push
popf
xchg
inc
cmpsb
fs
call
movsb
in
jmp
mov
hlt
xchg
aas
push
push
pusha
lea
ja
pop
cltd
shrb
sahf
sbb
pop
repz
lahf
cmpsb
cld
jp
cmp
pop
mov
imul
nop
enter
shlb
mov
popa
addr16
fstpt
lret
and
je
mov
adc
sub
inc
mov
lret
mov
pop
out
fsubl
stos
fisttpl
incl
movsb
add
out
imul
dec
and
mov
pop
or
mov
fidivrs
xchg
repnz
dec
xchg
jl
cltd
fs
pushl
jmp
and
sub
rorl
jle
outsb
mov
cld
push
lds
dec
push
pop
imul
pop
sub
jae
push
loop
xor
test
les
movsb
mov
xchg
cmpsl
push
cli
sbb
cld
jle
enter
sub
adc
sub
shrl
fdivrl
testb
fisubrl
mov
into
mov
sub
mov
xor
stc
sbb
push
bound
push
call
movsb
movb
add
lock
push
sub
jl
fnstcw
or
ljmp
mov
insb
aad
and
push
dec
jl
stos
in
mov
mov
mov
inc
push
inc
popf
shlb
outsl
stc
movsb
mov
xchg
fistpl
push
aam
cld
push
out
mov
pop
daa
pusha
sub
xor
andb
push
aas
negl
es
add
in
je
fwait
sub
cmc
dec
scas
jnp
xchg
pop
xchg
and
test
addr16
fsubrs
xchg
dec
jp
xor
dec
add
test
mov
jns
mov
cld
inc
fildl
out
xor
fs
mov
or
imul
lods
mov
sbb
mov
pop
daa
pop
in
int
jl
cli
inc
outsl
pop
bound
fdivs
sub
fisttpll
jl
sahf
fdivs
fdiv
call
ja
rcrl
ja
call
roll
add
jle
lods
out
add
arpl
orb
and
add
dec
jge
pminsw
xchg
sub
aaa
mov
or
into
jle
xchg
and
jno
aaa
jne
jmp
pushf
nop
test
rcll
jbe
ljmp
iret
lret
aas
jp
mov
dec
xor
push
aaa
aas
inc
in
add
adc
pop
iret
and
fstl
add
aad
lret
pop
cwtl
jl
jb
out
fwait
inc
test
xchg
lods
mov
xchg
sub
inc
inc
cwtl
mov
mov
dec
sbb
loop
lods
movsb
arpl
rcrl
loopne
cwtl
cmpsb
iret
cwtl
sub
inc
jg
xlat
adc
iret
cmp
mov
pop
inc
sub
push
loop
mov
jb
rorl
push
sbb
addr16
sbb
insl
arpl
inc
outsb
cs
and
imul
push
hlt
lods
das
mov
cmpsl
cmpsb
xchg
cmp
pop
jno
test
inc
push
mov
sub
mov
mov
xor
je
sub
clc
lcall
test
ja
loop
scas
aas
nop
sub
add
sbb
and
out
mov
movsb
loopne
arpl
stc
idivl
sub
jns
xchg
mov
int3
jno
pop
fnsave
aas
fldcw
movsb
and
add
and
adc
nop
mov
cmp
aas
jo,pt
sbb
jne
xor
sub
push
fsts
mov
fsubs
xchg
cmp
xchg
mov
scas
push
leave
icebp
xchg
movsb
sahf
inc
jae
cmp
xchg
decl
add
mov
push
aam
ja
out
pop
ret
cltd
dec
rolb
xchg
sbb
jnp
cld
jnp
hlt
xchg
movsb
jl
pop
pop
imull
push
and
repnz
je
fsubrp
test
push
jae
add
push
shll
mov
ss
lret
and
sbb
test
pop
cltd
std
and
pop
pop
insl
or
sub
push
into
pop
xchg
mov
test
jae
adc
lret
xchg
mov
in
call
xor
insb
lret
lret
push
dec
jge
jbe
lods
pop
jle
cli
scas
test
xchg
jb
in
jbe
inc
inc
inc
sub
jae
jns
sub
pop
or
out
fisttpll
push
pop
push
enter
out
add
cwtl
bound
pop
sub
pop
push
push
jns
movsb
gs
mov
mulb
sub
push
lods
dec
pusha
jg
sar
inc
push
repz
pop
inc
cmp
ds
dec
push
adc
out
pop
or
lods
ljmp
loopne
mov
pop
jo
daa
cmp
pop
mov
loop
xor
pop
repnz
mov
push
gs
imul
and
je
mov
cmp
xchg
ret
js
cwtl
loope
jp
xchg
adc
mov
xor
dec
mov
hlt
push
mov
pop
mov
cli
dec
fs
fimuls
sub
xchg
mov
test
inc
sar
movsb
dec
mov
jp
and
mov
jno
ret
ss
fwait
into
jno
mov
popf
dec
popa
fadds
lock
inc
jmp
jecxz
inc
test
js
dec
cmc
aad
cli
aad
cmpsl
clc
das
dec
push
mov
out
movsl
fmul
dec
pop
stos
mov
in
xor
mov
inc
sub
fs
or
stos
push
stc
js
data16
into
adc
adc
dec
dec
fs
insb
xchg
dec
movsb
mov
mov
cltd
fcmovnb
dec
cwtl
test
adc
loope
jnp
lret
jmp
xor
xchg
aad
push
inc
sub
fs
jp
std
cltd
mov
loopne
xchg
inc
fistpl
ret
repnz
fwait
lock
aam
push
mov
shll
xor
ret
inc
mov
dec
in
ficomps
sbb
stc
sub
les
mov
xor
pop
repnz
and
xor
sti
jl
dec
jae
insl
sbb
dec
outsb
andl
jne
out
lret
cli
bound
rcll
cmp
xchg
mov
out
push
cmp
popa
insl
or
pop
mov
cmp
sub
stos
iret
add
je
or
jno
imul
cmp
clc
push
jne
negb
das
adc
pushf
cs
pusha
mov
movsb
sbb
clc
int
pop
cmp
outsl
shll
movhlps
jge
and
ficoml
dec
mov
or
and
dec
inc
js
negb
pop
rolb
mov
cmp
mov
pop
pop
fadds
jae
mov
mov
or
aad
aas
movsb
outsl
sub
ret
xor
push
into
ret
jg
xor
movsl
ss
popf
fs
or
test
cmp
inc
cmc
cs
insb
add
clc
bt
inc
mov
xlat
rcll
dec
in
push
adc
push
sarb
lahf
lock
rcrb
in
lret
stc
pop
shrb
arpl
jl
or
mov
push
int
daa
aam
popf
dec
in
fmuls
mov
in
das
pop
mov
sbb
ficompl
and
dec
jne
clc
or
fs
leave
push
pop
gs
inc
mov
inc
loop
ss
aas
sub
out
int3
pop
push
sbbb
movsb
push
pop
push
lds
jns
test
int3
mov
sbb
hlt
pop
mov
cld
addr16
loopne
and
mov
je
xchg
mov
call
in
fmull
imul
pop
mov
in
cmp
xor
push
xchg
inc
jmp
dec
jne
jg
mov
cmc
lret
aam
or
adc
iret
js
aad
cmpsb
pop
ds
jge
xlat
test
dec
es
cwtl
aam
push
movsb
xchg
imul
sub
arpl
test
sbb
inc
inc
mov
loop
iret
add
sub
call
mov
div
loop
aam
dec
jg
cltd
pushl
mov
gs
jle
mov
in
je
push
fwait
aas
mov
cmp
adc
out
dec
inc
adc
rclb
addr16
mov
jne
into
das
jp
insl
and
pop
js
push
xor
xchg
shlb
lret
push
sbb
aaa
in
fdivrs
test
pop
lcall
xor
dec
and
jmp
lods
pop
nop
or
fsubs
cmc
pop
cmp
and
sub
cli
dec
sub
add
movsb
jmp
fcmovb
dec
inc
cli
xchg
loope
in
pop
sub
pop
iret
jmp
jle
js
inc
outsb
sub
mov
sub
imul
paddb
aas
jnp
jecxz
das
mov
aad
push
and
imul
adc
xchg
in
mov
jbe
cltd
outsl
rclb
cmpb
sbb
inc
and
clc
lret
push
inc
iret
cli
rcrb
popa
dec
sub
xchg
mov
ja
sbb
cwtl
ja
cli
aam
test
or
mov
les
inc
cmpb
sbb
dec
mov
push
push
mov
sub
stos
jbe
pop
cmp
fldenv
call
insb
cltd
jmp
nop
dec
popa
or
insb
pop
mov
fstl
lahf
stos
dec
popf
cltd
mov
stos
je
xchg
out
bnd
push
push
mov
add
in
push
jge
mov
je
lods
mov
js
add
or
out
jnp
pop
repnz
outsl
mov
dec
insb
and
mov
push
adc
mov
in
inc
and
jno
or
xor
sbb
xchg
add
popf
jecxz
xchg
insb
fwait
ja
flds
lret
xchg
popa
je
add
shrb
outsl
mov
jne
cmp
out
loope
imul
gs
mov
dec
mov
out
das
dec
ds
dec
sub
cld
jb
sbb
mov
jmp
jae
out
loope
dec
inc
fistpl
fwait
adc
popf
pushf
mov
bswap
adc
mov
dec
leave
stc
fdivrs
xchg
hlt
lret
sub
mov
into
mov
push
cmc
xlat
jnp
pop
cmp
sub
adc
pop
mov
pusha
jge
sub
movsl
sub
into
insb
ja
and
cld
cmp
xlat
int3
jge
add
sbb
pop
and
lret
flds
xlat
jl
add
out
push
popf
lcall
fmull
js
lret
sbbl
adc
in
xchg
sbb
out
nop
popa
sbb
xchg
and
dec
push
arpl
movsb
xor
hlt
pop
pop
mov
push
add
aaa
leave
pushf
inc
jno
das
push
or
cmp
or
mov
adc
push
inc
push
or
inc
sub
sub
mov
jne
jne
inc
cmp
filds
push
adc
lret
loop
lret
xchg
data16
in
mov
insb
push
repnz
mov
je
ret
fdivr
and
adc
mov
push
jg
or
ficomps
mov
xchg
addr16
out
rcrl
jmp
dec
inc
fs
mov
imul
pop
enter
addr16
call
cmp
insl
les
jns
popf
inc
xor
push
sbb
in
adc
push
mov
lahf
inc
pop
les
jne
adc
je
scas
mov
call
mov
add
out
in
outsl
xor
imul
jb
seto
dec
push
cmpsl
fadds
outsb
inc
pop
jb
mov
orl
lcall
adc
add
ja
daa
stos
out
mov
fwait
lret
inc
cmp
xchg
sub
push
jbe
nop
mov
mov
test
inc
int3
dec
mov
cwtl
push
stc
pop
adc
orl
mov
stos
jae
jg
cmp
xor
rcrl
out
aam
jmp
cwtl
sahf
test
fs
sub
popa
stc
inc
push
xchg
sahf
inc
psubsb
insb
mov
lods
dec
sub
fdiv
test
jp
or
insl
fcoms
stos
fs
sub
je
ja
push
fsts
ficompl
movsb
mov
arpl
leave
dec
mull
outsb
inc
xor
push
mov
jae
not
lcall
test
enter
es
push
pushf
movsb
je
fmul
adc
loop
repnz
mov
lea
adc
or
sti
inc
addr16
xchg
test
in
jge
jns
int3
mov
add
mov
cmpsl
pushf
dec
or
push
cmpsl
adc
int3
lcall
inc
cltd
xlat
in
adc
mov
stos
inc
inc
icebp
loop
movsb
or
scas
or
or
iret
scas
lods
test
loopne
add
jecxz
dec
pop
stos
cmpsl
lcall
std
es
pop
adc
icebp
hlt
arpl
or
in
xchg
sub
das
inc
call
sbb
jae
pusha
addr16
out
add
clc
nop
and
jecxz
xchg
push
jmp
std
mov
fsubl
stos
add
adc
int
push
clc
mov
je
pop
out
or
adc
mov
mov
add
nop
mov
cmc
xchg
inc
stos
xor
arpl
push
xor
cmpsb
dec
xchg
movsb
add
movsb
ffree
test
out
jg
inc
imul
adc
sahf
in
nopl
fisubs
push
mov
fs
add
jns
pop
lret
mov
xchg
push
jge
sbb
cld
pop
fs
es
imul
stos
inc
shll
popa
out
das
test
mov
aas
dec
mov
iret
fs
stc
ljmp
out
sbb
mov
or
inc
outsb
pop
adc
mov
push
imul
dec
ds
xchg
shrb
jl
cmp
jnp
aas
cld
push
aas
rorl
jmp
hlt
inc
xchg
movsb
sub
jae
pop
add
add
inc
lahf
rcrl
push
mov
lea
inc
out
dec
jnp
shlb
cmc
aad
mov
mov
nop
and
inc
add
dec
pop
mov
xlat
xorb
popa
imul
imul
imul
imul
in
xchg
or
fdivr
pop
rclb
test
jmp
loope
orl
or
mov
andb
dec
jmp
mov
pusha
pop
xor
add
sbb
scas
daa
pushf
int
insb
xchg
aas
push
pop
mov
or
jnp
popf
pop
cmp
nop
and
dec
orb
xchg
xchg
add
push
mov
push
ds
pop
jge
rolb
lds
stos
lods
call
loop
das
rclb
lods
sbb
pop
add
outsb
pop
shll
xor
mov
adc
add
mov
fisttps
fwait
inc
jo
sub
rclb
and
lret
lea
mov
dec
stos
xchg
add
sbbb
cbtw
xor
jmp
movsb
imul
push
enter
push
fs
mov
and
sbb
jae
jl
push
dec
aam
mov
sub
and
xchg
negb
and
fnstenv
fidivl
mov
jnp
daa
jns
or
les
test
shrl
xchg
mov
sub
mov
aam
inc
outsb
aaa
jb
or
jg
xor
out
or
fimull
dec
enter
pop
inc
xchg
push
mov
pop
lcall
adc
lahf
adc
sbb
jmp
std
mov
mov
incl
or
mov
jbe
dec
xchg
jl
cmc
mov
sub
int3
mov
out
cmp
push
mov
mov
or
sbb
mov
dec
xchg
jnp
dec
clc
gs
ja
lds
cwtl
xchg
lods
sbb
mov
outsl
int3
jnp
or
push
stos
dec
and
xor
out
jae
jp
cmpsl
clc
sub
pop
inc
fs
jb
sub
mov
inc
ret
out
mov
cld
jmp
cmp
xor
adc
insb
iret
xor
dec
mov
repz
cmpl
jne
adc
cs
clc
pop
push
insl
cltd
filds
pop
cld
push
mov
ss
mov
fs
xchg
mov
xlat
xor
mov
pop
cs
arpl
fwait
cmp
stos
stos
cltd
popf
or
add
cmpl
sub
pmaxub
pop
sbb
lods
cltd
lret
repnz
push
aas
aam
pop
adc
aaa
fcmovnbe
movsb
call
insl
mov
push
test
xchg
ret
adc
cmp
push
es
inc
xor
push
out
inc
dec
in
fmull
arpl
fxch
xchg
daa
xor
stos
imul
cmp
and
sahf
cmpl
lock
notb
mov
movsb
sub
sti
xchg
or
cmp
pop
mov
fildll
pop
loop
neg
in
aas
push
or
mov
xchg
mov
jmp
jge
int3
fwait
imul
xchg
push
test
stc
cld
lea
jb
in
xor
div
pop
inc
in
jo
rclb
inc
add
inc
jl
push
in
fcmove
xor
sub
dec
dec
jbe,pt
adc
or
mov
xlat
push
cmp
pop
fxch
xchg
div
bnd
dec
push
outsl
je
dec
fcompl
push
jne
xchg
cltd
jnp
lods
js
pop
jb
gs
out
and
movsb
xchg
dec
adc
jp
loop
out
and
sub
iret
jmp
xchg
add
xorl
stos
jle
shr
stos
or
lsl
sbb
pop
or
pusha
pop
je
mov
movl
repz
inc
iret
cmp
enter
mov
mov
push
pop
lods
pop
imul
mov
movsl
dec
mov
push
add
xchg
or
add
mov
adc
jg
sar
fcomps
mov
jl
cltd
setg
push
dec
inc
sub
pushl
insb
sub
jns
push
enter
adc
je
pop
jmp
push
imull
rorb
ss
xorb
xchg
inc
cmp
inc
pop
shll
xchg
fld
inc
jne
or
fs
loope
sarb
outsb
inc
jnp
jp
xchg
inc
cltd
shl
into
xchg
mov
aam
jp
fs
mov
xor
lea
xchg
inc
addr16
subl
je
clc
pop
pop
and
mov
push
lock
leave
jno
std
bound
inc
gs
dec
int
pop
xchg
mov
mov
incb
clc
int3
lcall
sbb
fiaddl
cli
dec
lahf
pop
adc
jno
xchg
mov
and
mov
mov
daa
mov
jnp
outsb
sub
fs
stc
in
or
outsl
pushf
adc
push
xchg
cmove
in
dec
test
push
gs
int
movl
xchg
push
cwtl
cmp
call
pop
sbbl
cmp
adc
mov
mov
dec
fists
jmp
das
iret
rcll
fs
pop
push
into
lretw
cmpsl
dec
sbb
sahf
rorl
push
pop
push
sbbl
lds
inc
cmp
push
cwtl
lret
ret
ret
push
outsl
imul
pop
sahf
sbb
lods
or
jmp
into
adc
ror
add
mov
jo
insb
add
ljmp
ss
insl
sub
add
pop
xchg
xchg
daa
in
push
xorb
mov
js
dec
fcmovu
sti
fstps
int3
fwait
xor
jp
inc
cmpsb
dec
push
movsb
jbe
scas
clc
sbb
jmp
push
mov
xor
inc
lcall
sub
ds
loop
sarl
adc
mov
sbb
jle
inc
xchg
pop
pop
ret
and
js
je
xor
addr16
test
mov
push
sarb
inc
cli
jne
pop
addr16
xchg
pop
outsb
mov
and
je
push
add
push
in
push
idivb
sub
test
sbb
lods
sbb
inc
pop
lahf
je
mov
pop
jno
pushf
xor
aas
xlat
jnp
fdivs
adc
int
out
push
movsb
mov
jge
dec
push
xchg
les
or
fsts
jns
insl
js
sahf
and
out
in
xor
jle
out
lods
pop
dec
sbb
add
pop
push
xchg
in
in
sbb
cmp
xchg
inc
xor
or
adc
xchg
push
aaa
aad
jne
sahf
jle
lea
fdivrs
lock
das
jl
call
sbb
jne
cmp
repnz
mov
sub
mov
cmpsb
add
push
jb
mov
insb
mov
jle
push
sub
dec
std
pop
xor
into
cli
cmp
das
movsb
in
cmp
mov
fdivrl
push
in
xlat
pop
and
lea
mov
arpl
adc
repz
sbb
ret
das
push
push
sbbl
mov
enter
lahf
data16
push
outsb
fs
sbb
jg
je
jnp
pop
cmp
repz
dec
fstpl
outsb
lds
aas
jecxz
pushf
mov
pop
stos
fsubl
outsl
jnp
xor
inc
mov
sub
mov
push
bswap
lret
bound
enter
aad
cltd
gs
jg
pop
out
call
fwait
add
mov
les
or
sub
add
mov
sbbl
das
testl
sarl
xchg
lahf
insl
std
test
scas
dec
adc
push
push
cmc
push
or
add
mov
or
and
pop
dec
lahf
sbb
dec
cmpsl
arpl
inc
in
xchg
pusha
aam
das
xor
dec
in
shlb
and
loope
js
fbld
adc
push
mov
test
outsl
das
scas
pop
adc
cmp
jne
notb
push
inc
flds
std
xor
xchg
jne,pt
rolb
cs
and
xchg
sub
into
data16
dec
xchg
sub
dec
in
fs
sbb
xor
and
xchg
xor
pop
imul
pop
xchg
pop
sbb
mov
clc
out
inc
xor
lret
or
xlat
add
call
mov
inc
sub
xchg
ret
shl
sbb
stos
into
lea
cmp
mov
jg
mov
dec
mov
popa
push
sub
es
mov
loopne
mov
in
mov
lods
push
jmp
ret
push
xlat
mov
pusha
mov
mov
mov
outsl
jle
jecxz
ljmp
or
mov
ljmp
mov
je
inc
adc
call
sub
dec
loopne
andb
inc
ficomps
imul
fs
xlat
cmpsb
xchg
cmp
fucomip
aam
repz
cmp
frndint
add
jmp
mov
ret
aas
push
movsb
mov
sarl
add
dec
xchg
or
push
out
test
popa
push
arpl
fdivrs
in
sbb
jns
lods
nop
movsl
adc
int
pop
cmpsb
cmp
sbbb
mov
sub
int
push
xchg
out
scas
mov
inc
std
cmp
lods
inc
jns
sbb
jmp
jne
xor
inc
cmp
xchg
sarl
add
push
cmc
fdiv
fs
mov
fisttpll
inc
jp
mov
sub
out
mov
xchg
push
cmp
dec
movsb
mov
lea
dec
cltd
cmp
mov
pop
lret
pop
test
dec
add
repnz
dec
inc
pusha
dec
jb
rcr
loope
les
outsb
push
sub
pop
cmp
mov
movb
push
mull
es
mov
or
fmull
lret
jge
ljmp
add
sti
movsb
add
xchg
cld
js
mov
fsub
rcrl
movsl
pushl
in
shlb
insb
inc
xlat
fldenv
ds
inc
test
jmp
mov
mov
push
dec
ficoms
nop
iret
inc
mov
push
pop
pushf
sbb
aam
add
lods
loope
dec
xchg
or
jns
pop
es
inc
cmpl
iret
sbb
cld
loop
in
jle
loope
loop
data16
imul
repz
dec
lods
out
fs
ja
push
push
xor
and
fistl
mov
pop
ret
shlb
dec
lods
cmpsl
scas
sub
sub
in
sbb
fwait
ret
mov
add
ret
mov
or
cwtl
jo
outsl
inc
or
outsl
filds
out
or
adc
mov
sub
arpl
imul
push
inc
sub
jg
add
stos
fnstenv
mov
pushf
xor
mov
incb
sub
aas
fdivrs
dec
jb
cmpsl
test
lcall
sub
push
and
test
add
fs
push
out
pop
mov
imul
in
mov
adc
jmp
sbb
pop
jne
fwait
sbb
cmp
cmp
test
movsl
add
mov
popa
gs
sub
ret
test
xchg
add
inc
out
insb
adc
lret
aam
fcomps
push
lret
mov
or
sbb
icebp
sub
test
sub
cmpsb
hlt
sbb
xor
arpl
pop
add
in
ret
sarl
rclb
push
push
jl
in
or
adc
daa
ret
mov
sub
adc
sub
adc
pop
cvtps2pd
fs
cltd
ficomps
push
push
push
enter
mov
daa
cmp
jmp
pop
test
dec
inc
cs
xchg
mov
dec
inc
pop
movsb
mov
add
inc
inc
sub
cltd
mov
sub
stc
xchg
shll
movsb
inc
mov
xlat
mov
mov
stos
jns
mov
in
fdivs
xchg
jl
xor
call
inc
out
sahf
sub
mov
movsb
mov
sahf
int3
push
pop
mov
sbb
popf
stc
sti
ret
mov
enter
xchg
pusha
dec
xchg
sahf
add
inc
jg
cmpsb
aad
inc
or
fists
movsb
shl
adc
push
testb
popa
sbb
xchg
std
adc
sti
mov
mov
insl
sbb
jno
pop
icebp
cwtl
out
push
inc
pop
mov
and
in
bound
push
dec
xlat
imul
std
pop
sti
jge
inc
test
or
nop
rcr
das
lret
and
test
or
lcall
jg
xchg
popa
es
fists
mov
fbstp
movsl
jns
std
das
push
call
inc
jb
cmp
mov
loope
inc
inc
or
xor
gs
popa
xchg
imul
inc
test
jg
fcmovnbe
cmp
stos
out
mov
pop
fdivrl
cltd
push
lds
dec
adc
lods
dec
jne
fisttpl
pop
push
xor
dec
aas
lcall
or
mov
mov
popf
stos
inc
arpl
test
push
sbb
pop
test
adc
jl
cmp
into
enter
movsb
jo
incl
mov
sub
sbb
jmp
sahf
in
pop
mov
aas
test
iret
jnp
arpl
cltd
sbb
in
dec
fsts
idivb
leave
movsb
xchg
movsl
call
mov
fs
in
or
or
cmpb
call
sarb
scas
or
push
add
mov
rolb
std
mov
cmpsb
jp
xchg
mov
pop
outsl
cs
or
or
mov
imul
xchg
and
sub
inc
ret
lea
popf
add
lea
gs
adc
repnz
fwait
jmp
popa
pop
dec
movsb
incl
hlt
mov
cmp
mov
fstpl
xor
lret
out
and
push
ret
test
jb
fisubrs
inc
mov
push
insl
lcall
pop
lods
inc
cmp
or
out
movsl
dec
test
pop
pop
sbb
sub
hlt
dec
adcb
dec
xor
mov
icebp
test
dec
xchg
mov
outsl
cmp
mov
aas
rep
call
add
mov
push
push
sub
add
dec
mov
cmovns
adc
mov
push
mov
jge
mov
and
mov
dec
jb
addb
xor
cltd
pop
pop
mov
add
lret
cli
les
adc
insl
cwtl
pop
ljmp
mov
and
outsl
scas
test
pop
jbe
repz
push
fs
dec
ja
lss
jmp
lea
js
stc
sub
outsl
sub
outsb
in
jge
mov
dec
and
pop
jns
es
dec
and
imul
push
out
mov
push
sbb
lret
mov
adc
jg
negl
cmp
jmp
pop
sub
pop
movsb
out
and
mov
jl
test
popa
jp
or
push
mov
push
pop
or
push
mov
jge
cld
dec
push
dec
adc
sbb
test
loopne
xor
rcrb
inc
jnp
adcb
mov
jne
mov
movsb
jb
pop
in
push
add
jnp
jnp
push
cld
dec
outsb
shlb
gs
movd
dec
inc
and
imul
pop
sbb
mov
jl
push
pop
pushf
or
es
test
push
mov
pop
xchg
test
xor
mov
pop
pop
mov
ret
mov
dec
test
cs
loopne
mov
movsb
aam
xchg
lds
mov
jnp
out
lods
or
adc
fdivrp
insl
cmp
outsb
arpl
fcomps
inc
cmpl
mov
inc
fcomps
cmp
jbe
push
popf
add
shrl
inc
cltd
rcll
mov
and
ss
jge
jl
jne
shlb
call
test
repnz
dec
in
ljmp
xor
in
imul
adc
test
jo
pop
pop
loopne
xor
lret
loope
rorl
lea
lods
daa
loope
adc
sbb
push
test
fucomip
push
shll
mov
xchg
add
cltd
mov
xor
push
mov
mov
mov
dec
lea
xor
jb
fisttpl
test
xchg
push
jp
sub
cli
adc
rcr
dec
or
fs
cmpsb
xchg
dec
lret
daa
subb
lcall
test
mov
enter
aam
mov
sbb
add
jne
mov
fs
sbb
sbb
xor
imul
mov
mov
sbb
lcall
stos
jae
sbb
hlt
in
call
test
pop
pop
add
sbbb
adc
jne
lods
incb
inc
sbb
xlat
fstpt
pushf
dec
fildll
mov
es
ljmp
loop
mov
subl
jmp
adc
xor
aaa
mov
cmp
jg
pop
std
lock
mov
or
pop
in
ljmp
jl
inc
mov
imul
fs
sbb
mov
ss
stos
jb
std
push
mov
or
and
outsb
xlat
rcll
fisubrs
pop
jne
add
cli
inc
and
imul
jmp
out
fnstcw
inc
or
mov
or
stos
popf
es
aam
subb
and
adc
sbbb
cs
pop
imul
mov
mov
cmp
push
or
lea
push
rcll
neg
xchg
jp
rcll
out
push
subb
xor
les
fcoml
into
test
mov
js
int
std
in
mov
ja
fsub
in
sub
mov
pop
dec
sub
sub
sub
scas
mov
out
out
fsubp
cltd
dec
xor
insl
decl
push
push
inc
cmpsl
push
push
add
cltd
adc
dec
add
jp
lret
mov
pop
pop
adc
inc
fisttpl
cmpsb
dec
jmp
enter
jns
push
iret
shl
or
cmp
aaa
jmp
push
or
push
dec
imul
mov
push
cmp
xchg
sub
stc
dec
dec
fmull
cmpsb
cld
xlat
daa
mov
or
lahf
jecxz
test
jae
pop
icebp
inc
fcomps
add
pop
pop
xchg
xchg
and
add
fstl
xor
ja
sub
std
sbb
cld
mov
fs
testb
roll
inc
dec
cwtl
adc
loop
scas
inc
xor
outsl
adc
arpl
mov
in
out
ljmp
push
jle
pop
adc
mov
icebp
pop
aaa
and
mov
and
or
rolb
fcoml
lcall
mov
sbbl
imul
pop
jns
adc
ds
adc
or
mov
sbb
outsl
movsl
jl
call
mov
lods
movsb
dec
jle
fnstsw
enter
dec
pop
movsb
or
or
fwait
dec
jmp
mov
enter
lods
xchg
inc
mov
mov
lcall
xchg
or
dec
inc
lahf
outsl
push
jb
call
mov
and
aad
es
xchg
push
pop
cmpsb
fs
jle
xchg
inc
lea
movsl
pop
sti
xor
movsb
xchg
sbb
pop
xchg
push
js
das
fs
repnz
inc
inc
lods
xchg
and
jns
sahf
dec
std
pop
jo
hlt
imul
fs
mov
ret
sbb
dec
test
or
aas
mov
loopne
mov
add
mov
call
mov
sbb
pop
cmp
lcall
cwtl
sub
jns
stos
cmp
push
xchg
test
ds
lret
fs
sbbb
dec
rorl
sbb
out
jp
int3
mov
popl
subb
lds
mov
pop
sbb
push
roll
addr16
imul
outsb
xchg
mov
mov
inc
out
jno
sbb
ds
cmp
cmc
sahf
call
and
decl
sbb
fs
xchg
sub
in
dec
add
addr16
hlt
push
cmpsl
stos
jno
push
cltd
and
cmp
mov
add
ljmp
jb
shl
filds
jg
push
pop
ror
cmp
scas
add
jnp
cltd
call
mov
mov
test
sbbl
imul
pop
ret
xchg
xor
test
push
popa
scas
cmp
fs
mov
addr16
jl
popa
outsb
idivl
fptan
das
cmpsl
mov
out
xor
stc
jb
adc
xchg
roll
or
inc
shrb
movsb
cmc
orb
fs
out
mov
fwait
mov
or
mov
inc
fnstenv
mov
cmovp
call
push
dec
aas
sbb
aaa
jg
jge
rorb
jecxz
jo
xor
jo
xabort
stos
push
and
nop
sbb
sub
addl
and
add
mov
jb
jl
loopne
divb
sbb
ja
in
es
out
adc
jmp
mov
mov
adc
xchg
or
data16
inc
imul
pop
pop
jle
sub
fwait
and
inc
sub
jge
sbb
in
shlb
ds
test
push
push
js
push
jnp
fimuls
inc
stos
std
jle
fldenv
inc
imul
xlat
insb
ss
lods
xor
inc
mov
mov
nop
sub
mov
je
sar
adc
or
rcl
mov
nop
aaa
dec
repz
adc
jl
dec
push
cli
mov
jp
fcomps
or
rcrl
cmp
dec
inc
sub
pop
cmp
jb
sub
inc
and
push
sbb
inc
dec
cmc
out
pop
orb
xor
rcll
ss
insl
jecxz
xchg
or
insb
stos
adc
push
ja
pushf
jp
mov
mov
clc
push
and
jge
cli
add
adc
pop
or
pop
xchg
dec
push
mov
pop
sub
call
das
mov
pop
mov
mov
or
in
out
jne
and
fistps
addr16
into
pushf
jmp
mov
fcmovb
inc
add
sub
inc
inc
mov
push
in
inc
call
xchg
lds
add
jno
fyl2x
jge
or
orb
adc
js
push
mov
movsb
and
ret
adc
xor
pop
adc
fs
push
pop
xchg
scas
fstpl
icebp
rcr
pop
push
arpl
mov
andb
xchg
cld
or
pop
decl
jg
ret
inc
jle
sbb
fdivp
in
xlat
mov
adc
mov
ljmp
jl
add
lds
clc
stos
cmp
popa
or
or
mov
jl
call
or
sbb
and
mov
mov
lret
adc
pop
insl
inc
sub
mov
lods
xchg
add
sbb
pop
jecxz
outsl
mov
cmc
imul
and
pop
and
sub
mov
dec
jbe
inc
fs
xchg
daa
mov
adc
push
mov
inc
xor
mov
mov
movsl
jge
movsb
xor
sub
push
sub
push
sbb
jle
fcompl
xchg
fbstp
pop
ret
sarb
and
inc
inc
jbe
mov
mov
dec
dec
push
mov
cmpsl
divb
pop
in
mov
xchg
lods
xor
mov
xchg
cmp
inc
stos
jmp
cmpsb
lahf
dec
movsl
mov
add
push
ret
and
lret
inc
mov
cmp
push
imulb
addb
jae
xchg
sbb
pushf
xchg
or
fsubrl
push
adc
ss
push
xchg
xor
mov
fs
pop
dec
jne
dec
jae
or
add
cmp
stc
out
fstl
icebp
mov
sub
popa
push
inc
movsl
out
loop
ss
mov
dec
push
bound
scas
xchg
rol
nop
je
lret
movsb
jae
add
enter
push
insb
mov
popf
push
cmc
cltd
push
ficompl
outsl
bound
pop
adc
inc
shl
fs
cwtl
popl
mov
dec
adc
imul
movsb
pop
fldl
cmpsb
insb
enter
push
fs
push
inc
packssdw
movsb
insl
push
jns
jns
jae
insb
fidivl
sti
movsb
popl
not
dec
inc
push
and
lahf
jns
dec
xor
fisttpll
shrb
cmc
and
jmp
add
mov
sub
int3
rorb
mov
pop
adc
jno
les
adc
fs
repz
sbb
or
insl
testb
xchg
into
test
daa
insb
adc
dec
mov
scas
lahf
stos
neg
pop
mov
fcoms
cli
push
cli
call
push
adcl
sbb
sub
stc
mov
inc
push
push
mov
jnp
jae
gs
adc
add
push
hlt
adcl
mov
repz
lcall
pop
adc
enter
dec
dec
inc
adcb
outsl
stc
fptan
xchg
pop
inc
imul
mov
mov
hlt
add
sbb
add
dec
dec
xorl
iret
imul
sub
out
jb
out
adc
jp
outsl
or
jbe
xchg
lock
outsb
jno
mov
jno
add
mov
sti
outsb
add
pushf
fidivs
sbb
sbb
fldenv
fs
pop
xchg
xchg
sbb
push
mov
xchg
stc
jne
push
ss
inc
es
loop
inc
subb
icebp
lds
sub
and
aas
jg
adcb
sub
in
xor
add
inc
cmpsl
push
dec
lret
pop
mov
out
pop
shll
call
cmpsl
sbb
jno
and
sbb
sub
adc
cwtl
cltd
bound
std
aas
int3
in
add
int
aad
ss
int
adc
jmp
idivl
out
addr16
pop
ret
xlat
imul
lods
daa
mov
sbb
fdivs
aam
mov
inc
imul
stos
aad
xchg
stos
pop
fnstcw
mulb
cmc
sub
shrl
mov
and
stos
inc
dec
adc
decl
ds
scas
inc
cmpsl
mov
clc
adc
mov
dec
and
or
gs
adcb
daa
roll
push
adc
jae
mov
push
lret
scas
jbe
imul
orb
out
dec
lcall
stos
jecxz
push
cmpsb
stos
imul
rorb
or
mov
mov
jno
or
fidivs
mov
lret
rcll
mov
stos
js
xchg
movsb
xor
fisttps
aaa
aas
lock
pop
sti
imul
push
sub
loop
movsb
adc
mov
pop
sub
in
ret
lea
mov
sarb
stos
std
xchg
movsl
cmp
xchg
sub
aas
push
and
push
fs
lret
jb
jecxz
mov
push
push
xlat
dec
imul
or
lds
call
fcomps
push
push
xchg
stos
sbb
sar
cmp
jmp
imul
or
mov
lret
lock
in
pop
std
cld
cli
out
sub
mov
test
inc
jge
jle
leave
sbb
lcall
andl
cwtl
pop
fs
push
add
imul
lods
in
pop
mov
add
jnp
mov
inc
addr16
mov
pop
test
lret
or
das
in
add
or
out
out
in
adc
pop
push
pop
lock
mov
aas
pop
sub
inc
xlat
testl
jl
dec
jbe
in
pushf
and
in
push
xchg
add
aad
lret
lret
sbb
outsb
jnp
ss
inc
jne
push
mov
cmpsl
add
aaa
mov
loop
lret
into
xlat
ficompl
fucomip
mov
cmp
ljmp
mov
lea
movsb
mov
shll
sub
inc
fs
out
icebp
or
aas
aaa
stos
jl
fs
into
lret
enter
fnstsw
fsubrs
mov
cmp
mov
sbb
mov
in
jns
int3
jnp
dec
sbb
pop
fsts
or
mov
fwait
jp
das
add
sbb
pop
or
add
pop
fs
jp
fldcw
sub
dec
dec
jp
ljmp
inc
mov
pop
fwait
sbb
push
inc
pop
xor
dec
cltd
sub
cmp
clc
push
cltd
inc
pop
xor
daa
test
add
aad
cmpsb
add
imul
dec
sahf
ficoms
jae
jge
jnp
movsb
xor
scas
dec
pop
jo
and
shld
out
lods
fs
xor
cli
je
inc
mov
subl
and
fs
cmp
sub
sahf
mov
add
js
out
dec
js
addl
inc
or
fs
jp
ret
sub
mov
add
add
repnz
mov
push
push
ss
dec
dec
hlt
mov
inc
and
dec
loope
rorl
insl
jg
pop
adc
jp
lret
pop
adcb
movsb
sbb
adc
xchg
and
into
sbb
ds
sbb
in
aas
xor
sbb
pop
mov
lcall
dec
ret
std
inc
sbb
mov
dec
mov
test
push
int
or
xchg
dec
mov
shrl
jge
fimull
fs
mov
outsb
jecxz
or
out
leave
mov
mov
jg
mov
jecxz
mov
mov
mov
sbb
sbb
out
push
movsl
mov
sbb
mov
dec
fwait
loopnew
outsb
pop
insw
add
sbb
in
imul
mov
je
mov
pop
jmp
cli
inc
lret
stos
mov
add
jae
adcb
mov
pop
clc
xlat
cmp
outsl
xor
or
push
fs
or
mov
dec
stc
xor
mov
xchg
pusha
pop
out
lret
jl
flds
mov
push
or
fs
hlt
sbb
repz
xchg
cli
pop
sub
shl
imul
and
iret
pop
js
mov
adc
add
test
mov
fadds
lcall
rol
xchg
mov
push
js
dec
pop
sbb
sti
pop
pop
pop
lods
lret
xor
dec
mov
mov
inc
sub
movsb
adc
sub
das
push
in
mov
xchg
out
ds
bound
mov
jbe
mov
lods
aaa
imul
out
mov
fstps
and
sub
out
cmpsl
pop
rcrb
and
int
lea
inc
mov
outsb
scas
jae
jp
dec
bound
mov
ja
jp
push
pop
imul
xlat
mov
push
mov
dec
les
shll
testb
scas
das
jmp
stos
add
shll
xor
rcr
and
dec
dec
dec
push
lcall
inc
fsubr
add
jp
or
cmc
cmp
xchg
jg
pop
fs
xor
inc
jmp
gs
adc
ret
add
push
sub
jbe
inc
lods
cmpsl
jne
push
call
jno
cs
adc
fcoms
stos
xchg
xor
mov
adc
mov
jns
mov
addl
insl
add
or
mov
sub
jbe
fs
int
adc
insl
movsb
fcmovu
inc
xchg
insb
mov
mov
gs
repnz
insb
or
jge
in
cltd
sub
in
cmpsl
xchg
mov
clc
das
or
lcall
cltd
xchg
es
enter
jle
inc
xchg
sbb
push
ss
add
xor
cmpsb
jbe
pop
mov
push
xor
insb
lea
out
ja
dec
jo
adc
add
outsb
mov
sbbb
pop
arpl
inc
and
cli
notl
dec
psllw
push
mov
mov
mov
mov
xchg
xchg
or
push
and
adc
pop
mov
or
jno
cmp
lea
cmpsl
xor
add
fdivrs
das
fcmovu
fs
fs
xchg
fildl
pop
fcoms
jl
call
cld
and
and
leave
and
sbbb
mov
imul
push
xchg
fildll
push
mov
jne
ljmp
or
push
inc
dec
xchg
jne
fnstsw
lret
in
enter
ret
loopne
stos
aad
mov
mov
out
sbb
ret
lock
or
jmp
sub
lea
pop
dec
xor
inc
xor
xlat
cmp
mov
pop
outsl
outsb
movsb
out
in
ja
aam
lret
lds
out
ret
lea
dec
sbb
fmull
jge
daa
xchg
out
jle
pusha
test
iret
sbb
push
cltd
xor
mov
pop
ss
lret
ljmp
push
adc
mov
iret
xchg
lods
pop
xchg
addr16
or
cmp
jp
xchg
and
pop
out
es
lods
and
mov
dec
negl
cli
push
dec
roll
cmp
pop
dec
jae
das
jl
mov
mov
push
jp
xorl
push
xor
rcrb
pop
pop
inc
mov
test
xchg
sub
or
stos
mov
mov
inc
int
orb
out
mov
xor
into
jbe
test
jle
popf
out
xchg
ljmp
and
push
mov
inc
inc
test
cltd
pop
test
jl
jnp
mov
jbe
mov
movsl
repz
inc
push
mov
sbb
mov
cmp
call
xchg
mov
movsb
jle
nop
jb
mov
imul
sbb
push
xlat
mov
icebp
push
sbb
jne
popf
iret
jb
insb
movsb
mov
clc
fs
fsub
mov
lret
lret
popa
dec
push
or
xor
push
mov
jb
mov
adc
push
xchg
xchg
sbb
jbe
movsb
loop
test
rol
jl
outsl
stos
jl
jl
testb
inc
fistps
add
sub
cltd
sbb
enter
fndisi(8087
lods
aas
imul
js
fcomps
lods
scas
push
push
pop
mov
lret
inc
push
jae
sbb
pop
cltd
jnp
sub
sub
add
mov
adc
outsb
sti
add
fs
call
je
dec
push
sub
mov
xlat
dec
sbb
mov
push
in
add
movsb
ss
stos
lea
dec
jmp
std
in
jo
cltd
filds
lods
pushf
mov
mov
add
adc
pushf
repz
dec
adc
push
mov
xlat
leave
rorl
lahf
std
lea
ss
pop
push
add
fcmovnu
push
sbb
jne
jo
fs
aam
cmp
or
incb
pop
out
jo
andl
aam
xor
sub
pop
inc
sub
cmpsb
xchg
das
xorl
add
mov
add
filds
loop
popa
fimuls
inc
jo
insl
pop
int3
add
orl
xor
iret
test
into
fstps
xor
push
inc
fcmovnbe
and
sahf
xor
ja
pusha
loopne
inc
fists
fwait
rorl
adc
push
lea
dec
pusha
scas
imul
in
jnp
jae
and
mov
shrb
inc
mov
aam
jae
jmp
mov
or
or
dec
imul
pop
push
lods
cltd
mov
fimull
outsb
push
and
scas
adc
arpl
pushf
add
mov
xchg
clc
dec
out
fldenv
push
add
mov
test
lods
mov
pop
repz
dec
fs
imul
push
and
xlat
and
adc
xchg
lret
fistl
pop
jno
add
or
lods
std
pop
movl
mov
or
and
insb
and
sahf
lret
jmp
push
mov
sbb
repz
inc
rclb
mov
adc
fildl
and
lret
filds
mov
subb
dec
or
dec
xor
mov
pop
call
mov
inc
enter
mov
cmp
and
inc
xlat
je
inc
out
pop
add
push
test
scas
mov
jge
mov
les
xchg
aad
bound
xchg
lahf
hlt
xchg
sbb
mov
jp
lret
pop
pop
ja
testb
mov
pop
mov
inc
xor
insl
jmp
in
or
sbb
pop
js
cld
cmp
sbb
push
ret
mov
pop
out
stos
add
lods
jg
popf
and
mov
out
jl
fdivl
mov
add
cmp
aaa
lods
mov
setl
aas
adc
adc
sub
stc
xor
inc
mov
fcoms
adcb
adc
push
fs
dec
cmp
xchg
decb
cmp
out
decl
rcll
mov
and
fs
sahf
iret
xchg
std
cmp
or
stos
in
mov
cld
lods
outsb
push
mov
stc
cmc
mov
movsb
mov
adc
fs
xchg
repz
int3
jo
inc
sub
dec
insl
xchg
pop
cmc
fsubp
push
fnstcw
pushf
adc
add
dec
dec
imul
cld
cli
jb
mov
rcr
inc
adc
xchg
pop
mov
fs
or
dec
test
inc
movsb
pop
jle
ret
and
insl
leave
pop
or
jno
mov
out
jb
jne
mov
popf
adc
cltd
int
mov
push
fcoms
stos
cld
jne
mov
and
shrl
dec
lods
or
jae
add
aam
mov
sbb
lea
and
lret
outsb
or
fnstsw
imul
in
fistpll
outsb
and
inc
mov
xor
mov
mov
dec
push
in
adc
jae
aam
jo
fcompl
mov
repnz
jae
pop
cmpsl
mov
ljmp
push
popf
jbe
xor
into
cmc
mov
lcall
addr16
fldt
sub
fnstenv
out
or
mov
fsubl
ss
movsb
clc
and
inc
fsubrp
and
paddsb
adc
cmpsb
jns
mov
xchg
out
xchg
or
daa
test
mov
aad
mov
adc
arpl
mov
inc
outsb
or
movsb
movl
test
outsl
stc
pop
sbb
xchg
scas
push
imul
movsb
loopne
inc
fdivl
fildll
pop
sub
lods
mov
in
pop
cli
stos
sbb
inc
inc
mov
lcall
rcl
ds
gs
fstps
repnz
xchg
sbb
ss
and
jp
ds
out
aam
testb
popf
test
pushf
cld
aam
jno
ficoml
lea
notb
insb
test
jmp
mov
push
cmpl
push
dec
xor
fs
ret
xor
pop
repnz
mov
cmp
inc
scas
movsb
pop
ss
das
mov
into
jge
pushf
jmp
push
test
sub
dec
inc
cltd
repnz
adc
ds
je
repnz
cmpsb
leave
push
jns
nop
lods
cmp
push
test
mov
imull
aas
mov
mov
xchg
arpl
cmc
mov
fsubrp
sub
push
add
adcl
jo
jns
jmp
and
fisubs
inc
jp
push
adc
roll
mov
popf
adc
inc
mov
cmc
movsl
mov
and
push
mov
mov
pop
in
movsb
das
sbb
inc
fxam
adc
push
xlat
adcl
pop
sahf
xor
mov
pop
mov
mov
nop
pop
in
out
movsb
popa
sbbl
imul
in
pop
out
inc
pop
push
jg
mov
pop
ljmp
and
hlt
xor
cmc
or
sbb
outsb
dec
inc
rcll
dec
pushf
incl
sar
lods
loop
mov
dec
and
lcall
in
mov
push
dec
jnp
es
dec
adc
or
out
lods
imul
push
insl
aam
mov
call
int3
add
insb
inc
orb
pushf
cli
dec
mov
inc
adc
or
xor
push
xchg
and
sbb
xor
loop
dec
cs
adc
les
out
or
mov
je
movsb
jo
adc
mov
ja
jbe
or
shll
jb
fs
ljmp
cld
fidivrs
lahf
sub
pop
xchg
insl
movsb
xchg
xchg
imul
dec
xchg
iret
fs
outsl
xchg
xchg
inc
add
outsl
push
push
pop
sub
pop
mov
into
pusha
fdivs
cmp
int
out
jge
subl
mul
lcall
pusha
fdivrp
fs
shr
jbe
movsb
xor
xchg
imul
addr16
call
mov
loope
js
rcrl
sbb
dec
aad
sub
cmpsl
jecxz
shrb
push
cmpsb
fildll
mov
fstps
sub
fidivl
dec
or
sbb
leave
stc
dec
pop
jbe
inc
stc
sub
mov
outsl
add
add
cmp
xor
cwtl
dec
sub
cltd
std
dec
xor
cmpsl
push
insb
pop
negl
sub
cmc
adc
sbb
daa
fs
mov
test
fdivrs
movsb
out
insl
jg
andl
jae
test
popa
imul
mov
cmpsb
inc
adc
xor
ret
jb
sbb
and
push
frstor
out
add
clc
ss
lods
lcall
cmp
mov
mov
jle
fadds
add
xchg
fsubrp
cs
mov
fdivs
jmp
in
pop
repz
lret
push
outsl
jle
insb
call
das
mov
sbb
fists
mov
mov
call
aad
dec
dec
mov
je
arpl
mov
insb
mov
fwait
or
arpl
movsb
adc
fmuls
jo
jno
or
cmpsb
jns
dec
jle
jmp
movsb
mov
add
pusha
push
cltd
dec
icebp
inc
push
sub
fnstsw
ret
sbb
jl
test
xchg
and
movsb
enter
add
test
xor
lcall
inc
mov
test
ss
repz
dec
pushf
xchg
outsl
mov
subl
pop
mov
pop
push
ror
lret
mov
and
push
mov
ret
fnstcw
rorl
push
pop
sub
mov
call
out
jae
dec
add
dec
aam
in
push
push
cmc
inc
dec
pushf
jno
imul
bound
sahf
imul
xchg
mov
pop
pop
dec
sahf
jp
mov
jae
cltd
mov
and
fisubl
mov
xor
repnz
mov
xor
or
add
dec
cmp
popa
ss
jle
sahf
call
fsubl
push
or
inc
gs
dec
je
ret
sarb
fsubs
fmuls
and
jmp
mov
mov
ds
push
mov
inc
push
push
inc
fwait
sbb
repnz
pop
cmpsb
xchg
stc
xchg
shrl
sti
or
dec
mov
pop
lods
aas
jne
jo
sbb
test
pop
loop
out
xor
xor
mov
cmpsl
xchg
loop
push
imul
movsl
into
bound
pop
jne
pop
mov
push
inc
jns
fsubl
in
hlt
adc
ret
adc
lahf
ret
nop
add
and
xchg
in
inc
andl
mov
call
scas
insl
and
imul
sub
pop
jp
insl
lock
sub
push
test
hlt
adc
call
in
aam
push
in
cltd
rcrl
and
sub
lea
sarb
lret
out
lods
pop
ja
mov
test
xchg
dec
fs
cmp
sbb
inc
jle
js
test
imul
leave
fistl
push
add
pop
push
cld
aas
out
xor
test
scas
int
call
out
cmp
mov
sbb
xchg
orl
adc
inc
mov
mov
shl
leave
inc
fiadds
push
aas
inc
sub
outsl
out
fs
jecxz
jl
cmpb
dec
push
xchg
data16
ss
into
push
xchg
cwtl
dec
in
mov
dec
data16
xchg
jb
fs
cmp
call
adc
out
sbb
imulb
inc
inc
add
jnp
stos
push
jmp
and
mov
mov
mov
movsl
cmp
shlb
xor
stos
leave
test
dec
ret
popf
add
fs
adc
shlb
rolb
subb
test
pop
repz
sub
in
add
sub
xlat
xor
adc
cmp
scas
jb
sbbb
mov
and
mov
inc
cmp
xchg
mov
fcompl
jne
xlat
ja
xchg
adc
xchg
mov
loop
icebp
mov
mov
xor
pop
jno
fnstenv
push
in
int3
shl
imul
in
stos
add
mov
jbe
scas
outsb
fs
fcom
jmp
and
ja
adc
cmp
das
add
and
test
test
ss
je
sub
ret
sbb
jmp
leave
dec
add
add
xchg
lahf
clc
adc
pop
pop
in
outsl
or
adc
sbb
imul
fistl
out
and
sbb
jae
inc
adc
fists
xor
pop
lea
outsl
shlb
push
movsb
gs
rorb
xorb
inc
or
fs
repz
and
cmp
dec
fistpll
dec
mov
divb
mov
in
mov
sbb
xchg
mov
mov
push
mov
movb
dec
movsb
mov
popf
lret
into
pop
sub
mov
jae
push
mov
push
mov
imul
adc
outsb
mov
push
lods
mov
adc
sti
cmc
sbb
loopne
ficoms
pusha
movsl
hlt
add
push
jle
movsb
rolb
lods
fs
leave
and
sub
mov
ja
inc
fisttpll
inc
mov
cmc
xorl
notb
pop
iret
push
sub
mov
xchg
push
push
outsl
jg
adc
inc
stos
cld
inc
jmp
sahf
add
rcll
dec
mov
mov
cli
in
testb
mov
add
fsubl
cmp
mov
push
popf
dec
adc
mov
les
outsb
adc
mov
mov
aam
sbb
jle
sbb
cld
ret
mov
mov
add
bswap
in
lret
outsb
push
lea
fidivrl
std
xor
ljmp
mov
push
fadds
cmc
mov
es
incb
cli
push
xlat
cmpsl
sub
adc
lcall
pop
call
add
add
sub
lods
stc
fistpl
mov
aaa
jno
pop
jo
or
popa
ljmp
ss
pop
sub
mov
ret
push
flds
pop
xchg
nop
divb
addb
fldenv
leave
lods
cwtl
xor
jp
ret
push
je
std
mov
xchg
repnz
hlt
sub
xor
jmp
stos
inc
fbstp
jecxz
or
pop
fnstenv
pop
add
ljmp
mov
lret
shrb
adc
xchg
ljmp
addr16
mov
xchg
psrld
cmp
cli
mov
mov
jns
sahf
fs
xor
fnstenv
sub
outsl
bound
dec
push
rorb
aam
jbe
lea
lcall
adc
dec
sbb
adc
and
push
adc
testl
jmp
lds
sub
xchg
ret
and
push
test
or
ret
ljmp
out
out
lea
jg
and
rorb
hlt
out
jecxz
mov
insb
pusha
test
or
stos
movsb
pop
bound
fisttpl
xor
xor
daa
aam
pop
mov
mov
add
dec
mov
jb
jle
pushf
xor
cld
movsb
xor
aad
loop
nop
and
addb
pop
mov
loop
pop
call
ljmp
jnp
call
xchg
je
add
cmc
fldcw
dec
lea
dec
sub
in
mov
jmp
orb
inc
fimuls
testb
inc
adcl
inc
lcall
xchg
pop
incb
jae
jg
stos
stc
sub
sbb
jmp
sbb
repz
mov
das
stos
cli
es
insl
dec
xchg
lock
bound
jno
mov
inc
les
loope
or
adc
daa
mov
imul
test
aam
aad
and
jb
repz
pop
sub
sbb
fldl
or
test
shrw
data16
xchg
mov
sub
jb
std
out
sub
mov
test
dec
notb
mov
fs
out
mov
inc
movsl
in
fldcw
pushf
out
push
and
movsb
cmp
or
add
into
into
shll
add
xchg
loope
mov
inc
xchg
jno
push
cwtl
addl
ja
fisttps
ds
sbb
pop
sub
incb
outsl
jle
xlat
dec
jl
mov
mov
pop
sub
jge
leave
jecxz
or
hlt
stos
or
mov
push
xor
jno
lods
mov
jge
sbb
stc
sbb
data16
lock
xchg
jp
call
icebp
adc
int3
fs
or
fsubrl
fisttpl
cmpsb
js
mov
pop
movl
or
fidivl
fiadds
xchg
sbb
jge
mov
pop
popa
push
cmpsl
fbld
popa
pop
movsb
and
push
fistl
sbb
out
ds
mov
pusha
xchg
enter
std
and
jnp
xor
ficoml
movsb
sub
ret
sbb
mov
mov
ja
fnstenv
std
loop
sub
dec
pop
iret
dec
cli
insl
mov
adc
jne
cmpsb
iret
mov
sbb
sbb
imul
xchg
or
sahf
lock
ja
pop
push
or
testl
inc
into
or
adc
es
push
clc
js
call
jne
scas
jp
ljmp
lret
mov
or
add
mov
fidivs
xchg
ret
rcrl
inc
lock
adc
pop
and
cmp
cmpsb
mov
mov
nop
push
or
mov
stc
push
mov
in
jg
dec
xchg
fsubrs
or
jae
sahf
mov
out
mov
movsb
adc
sub
test
gs
pop
arpl
sub
call
jae
inc
in
out
adc
test
inc
ret
and
dec
add
out
aam
in
add
pop
cmp
pop
imul
pop
cmp
mov
inc
imul
dec
ret
jl
inc
jbe
sbb
movsb
or
cmp
push
inc
mov
fstpl
dec
xchg
ds
or
pop
push
loope
or
in
shrl
sub
cltd
es
int
inc
fisttps
sbb
aad
add
jmp
fcomps
lods
xor
in
xchg
sub
or
mov
stos
rcrl
shrb
mov
add
sbb
lahf
addr16
pop
push
ficomps
jp
jl
sbbb
movsb
jg
lret
cli
aam
or
sub
int3
insl
cs
fwait
adc
imulb
jecxz
insb
lret
or
cmc
push
sub
arpl
sti
pushf
dec
ret
sbb
mov
call
jmp
loopne
fidivs
or
dec
aaa
add
movsb
and
jne
int
sub
or
fcom
lret
sub
repnz
inc
test
mov
lock
rolb
push
cs
movsb
clc
push
fstps
sbb
mov
jno
fs
and
xor
mov
out
loop
pop
dec
cltd
mov
outsl
inc
fmul
mov
fs
xchg
rcl
dec
add
xor
dec
pop
test
hlt
push
and
lods
cli
jo
sub
pop
sub
jmp
mov
inc
inc
pop
in
out
mov
xor
jbe
movb
into
inc
pushf
fdivrl
in
cwtl
cli
jo
jge
xlat
loop
inc
mov
cmpsb
imul
ja
xchg
sbb
mov
imul
sub
inc
imul
mov
mov
pop
jne
mov
out
rorl
je
or
pop
inc
xchg
aad
dec
repnz
push
fwait
pop
lds
lds
orl
cmp
movb
sub
inc
test
incb
dec
daa
call
sahf
xchg
pop
jmp
mov
jnp
sub
aas
push
dec
fmuls
mov
mov
xor
add
xchg
jle
dec
inc
adc
cltd
jnp
jbe
clc
ss
sbb
test
jb
or
or
dec
sub
mov
imul
ljmp
cmp
call
imul
mov
sbb
insl
in
pop
sub
fucomip
jnp
cwtl
xchg
xor
daa
cli
in
push
jmp
stc
push
mov
pop
mov
subb
cmp
mov
jg
aaa
mov
jge
jmp
leave
scas
rol
add
mov
rorb
rcrb
dec
adcb
jmp
cmpsb
ror
add
mov
call
mov
mov
outsb
add
jle
loopne
daa
push
jnp
sub
add
shrl
push
mov
in
inc
sbb
add
mov
out
mov
xlat
sub
mov
fs
iret
shr
xor
adc
iret
push
pop
std
cmpsl
xchg
xor
adc
push
lret
js
inc
fwait
inc
xor
sub
pushfw
pop
xchg
and
push
mov
mov
das
cmp
xor
push
adc
stc
insl
lods
push
jb
jbe
xchg
xor
push
sub
xchg
dec
and
lea
popa
add
add
sub
inc
sahf
jp
cmp
mov
dec
pusha
fs
mov
mov
xchg
jg
and
jno
shlb
cmc
pushf
lahf
mov
inc
push
sub
push
adc
pop
fs
push
gs
mov
jp
ja
jle
xor
mov
addr16
repnz
and
lea
fidivs
or
mov
xor
in
and
mov
push
add
ljmp
xchg
push
ss
shl
out
imul
test
sbb
ss
repz
jge
jmp
pop
adc
dec
mov
cmp
xchg
xor
rcrb
inc
mov
insb
insb
mov
sub
dec
fucomp
call
fs
add
pop
cltd
mov
push
inc
fadds
ror
add
aas
cmpsl
lock
add
mov
push
jp
fwait
insb
and
imul
fs
mov
loopne
mov
ss
stos
xlat
test
fwait
loopne
test
dec
jle
rolb
jl
cmp
repnz
cmp
fisubs
jge
jp
push
lret
aas
les
push
add
push
mov
cmc
mov
pushf
inc
sub
cld
add
push
sub
inc
mov
jbe
fsubrs
push
adc
jns
sub
and
fstpt
std
aam
xor
jmp
vaddss
xchg
and
xchg
push
test
std
cmp
repz
mov
dec
pop
lret
jmp
fists
loopne
loopne
stc
adc
les
adc
addb
xor
jnp
inc
mov
ret
inc
ljmp
xchg
in
orl
das
xor
test
insb
movsb
aas
add
or
mov
or
inc
mov
xchg
adc
dec
out
movsb
adc
in
xchg
adc
fdivr
add
pop
iret
in
repz
inc
jno
fs
inc
or
dec
scas
fs
test
in
scas
and
call
out
leave
jnp
sbb
gs
dec
movl
stc
dec
add
inc
outsl
push
pop
int
and
push
imul
pop
inc
cmp
push
popf
and
push
outsb
out
stos
inc
push
adc
in
dec
pop
mov
clc
repnz
or
fsubrp
sbb
rcl
cmp
xor
push
add
dec
xchg
dec
aaa
mov
pushf
shll
pop
or
out
insl
sub
cld
sbbb
xchg
mov
add
fcmovne
push
shrl
hlt
jle
test
dec
sub
iret
ss
jb
inc
into
ja
insl
or
movsb
jbe
add
lcall
dec
test
imul
enter
jb
sub
cwtl
mov
add
xor
or
xchg
pop
mov
fidivrl
sbb
mov
push
mov
sbb
mov
add
ljmp
ss
sbb
push
dec
std
xchg
dec
rcll
cmpl
cmp
sub
adc
shl
imul
scas
mov
xor
inc
push
pop
xor
sbb
cmp
iret
jp
or
jnp
adc
repnz
je
movsl
jle
enter
push
movsb
or
loope
and
mov
inc
hlt
jp
or
icebp
xchg
cmpsl
lock
mov
movsb
ss
lahf
je
push
stos
sbb
pop
out
movsl
in
mov
jb
adc
sub
loop
nop
jmp
inc
sbb
leave
sbb
cmp
mov
xor
test
arpl
fistps
add
pop
mov
mov
jns
sbb
test
xchg
mov
push
jecxz
mov
fnstenv
test
out
lods
fs
sahf
scas
jo
adc
mov
ss
imul
dec
int3
mov
imul
inc
imul
jno
jle
adc
pusha
add
out
movsb
jecxz
mov
cmp
add
pop
push
sar
fs
mov
jmp
movsb
movsl
adc
test
sbb
lds
push
loope
inc
xchg
stos
sbb
ret
insb
cld
mov
pop
mov
test
mov
js
jl
jbe
enter
pop
or
loop
cmpsl
in
mov
pop
xchg
push
aad
loopne
cmpsl
sub
into
and
call
test
inc
inc
in
mov
cmp
add
pop
adc
add
in
repz
mov
sub
leave
jp
mov
daa
fnstenv
loop
mov
mov
mov
das
xchg
jecxz
adc
inc
add
iret
mov
fs
lret
out
ret
into
fnstcw
mov
mov
jne
not
xchg
add
pop
cmp
shrb
inc
mov
xor
jb
push
decb
push
pop
inc
push
pop
std
xlat
in
xor
dec
mov
or
popf
sub
xchg
mov
or
inc
sub
orw
loope
cmp
insb
ret
cltd
jle
int
lahf
push
mov
mov
pop
inc
or
or
fadd
ds
imul
jle
mov
dec
bound
inc
and
xor
cmp
sub
xor
imul
pop
aas
lods
fs
fcomps
inc
or
mov
mov
loop
mov
aam
adc
push
adc
pop
out
orb
fstps
decl
sub
jae
or
push
mov
out
lods
imul
mov
push
mov
fsubrs
or
icebp
lcall
fcomp
pop
mov
sbb
pop
push
push
inc
pop
lods
lret
and
outsb
fyl2xp1
xor
rolb
cmpsl
mov
and
pop
daa
xor
lock
es
js
jo
inc
test
movsb
iret
out
push
fs
popl
fs
outsb
push
lahf
adc
ljmp
or
jmp
fnstsw
mov
dec
int3
push
sbb
inc
adc
fwait
or
jo
sbb
loop
and
loop
les
fcompl
lds
fmuls
inc
test
pop
lcall
mov
fsubs
mov
xor
imul
push
dec
adc
xor
inc
mov
mov
divl
inc
es
add
dec
jne
add
sbb
inc
push
mov
push
inc
andl
je
insb
insb
cs
int3
aad
decl
fdivs
movsb
das
push
int
xor
lcall
rcll
decb
mov
jne
xor
movsb
clc
cltd
ljmp
cmp
inc
popa
push
push
adc
hlt
push
add
sbb
add
push
lods
adc
jo
inc
ret
dec
out
std
stc
cli
sub
mov
inc
jmp
lret
xchg
xchg
arpl
xor
imul
mov
lods
xchg
mov
imul
push
pushf
cmp
push
rorl
bound
out
jp
sub
lea
push
out
mov
add
mov
mov
cwtl
adc
xor
xor
jnp
push
mov
xchg
mov
dec
or
add
mov
popa
jl
insb
lret
mov
negl
lods
sbb
and
adc
inc
jg
xchg
repnz
das
cmp
scas
std
adc
jp
pop
add
ret
cltd
orb
mov
int3
fwait
loopne
xor
jne,pn
mov
rol
pop
fnstcw
add
stc
jo
mov
jno
sbb
or
ljmp
mov
out
addb
inc
cmp
push
sbb
lea
adc
cwtl
aaa
xor
dec
lret
mov
mov
sub
cmp
sbb
mov
mov
aas
sub
jl
xor
insb
pop
sub
jbe
out
rclb
push
or
pop
das
pop
push
call
xor
shl
mov
and
inc
xor
nop
data16
add
lock
fldcw
lcall
int3
add
xchg
enter
fs
repnz
xlat
mov
dec
mov
pop
test
xchg
sub
ss
lahf
fs
shl
dec
xchg
repz
pop
out
mov
lret
fcoms
inc
push
xchg
pusha
test
mov
jns
and
out
test
lahf
pop
daa
mov
shlb
xchg
jnp
testb
dec
lea
and
jbe
jno
pop
out
movsb
ljmp
dec
in
jb
fimuls
sbb
cltd
addr16
test
xchg
mov
stc
arpl
adc
shrb
sbb
pushf
push
xlat
sbb
insb
sbb
lods
cmp
in
mov
push
add
outsl
xchg
iret
xor
inc
or
fnstsw
out
fdivrs
jge
syscall
insl
shll
and
insb
data16
fwait
sbb
mov
nop
mov
and
sahf
push
movsb
aaa
cmp
mov
ljmp
jg
mov
lahf
mov
and
loop
movsb
pushf
fldl
push
fs
out
adc
outsl
dec
out
adc
pop
push
mov
mov
dec
fstpl
stos
xchg
daa
pushw
xor
addr16
lret
or
ret
ss
lcall
test
cmp
loope
inc
mov
push
push
sub
sbb
movsb
fucomip
xchg
arpl
sbb
lcall
pop
mov
clc
ljmp
std
lods
lock
push
pop
cli
adc
gs
imul
xchg
popa
mov
inc
test
pop
mov
cmp
inc
aam
into
clc
aam
imull
testl
call
testb
dec
cmc
or
data16
mov
jmp
movsb
jbe
cltd
out
fs
pop
pop
iret
flds
ljmp
inc
mov
shrb
sbb
xor
dec
inc
in
sbb
xchg
fldl
push
lods
in
xchg
ret
faddl
or
or
or
pop
mov
lcall
pop
push
jp
dec
and
jne
cwtl
jb
mov
popf
dec
loopne
add
jbe
test
sahf
jge
scas
pop
dec
mov
nop
inc
dec
out
aad
adc
lret
js
inc
cmp
ret
arpl
sbb
mov
int3
leave
xor
jae
lock
cmp
mov
aaa
aas
insb
imul
shrl
mov
aas
xor
lea
in
jnp
or
pop
add
jmp
mov
push
sbb
hlt
mov
mov
out
jne
repz
xchg
or
ss
stc
and
dec
and
mov
pop
adc
test
hlt
adc
out
enter
add
inc
sbb
fs
mov
lret
data16
mov
or
or
inc
inc
jbe
imul
jnp
and
int3
test
mov
je
pop
jae
mov
insl
stc
pop
jae
sub
jle
popf
add
mov
and
inc
add
inc
inc
fnstcw
in
sub
xor
lcall
std
push
aaa
dec
mov
jae
or
add
fs
inc
xlat
cltd
jnp
imul
int3
add
cmpl
stc
xchg
mov
xchg
inc
shr
outsb
movsb
out
into
adc
sbb
xchg
imul
movsb
sbb
mov
jo
jl
test
imul
jle
mov
stos
movsb
addr16
or
lock
lret
ret
lahf
jnp
jb
push
mov
repnz
push
imul
and
or
ss
cmpsl
stos
movsl
pand
ja
popa
jmp
mov
fmulp
adc
arpl
xchg
inc
lods
enter
and
dec
outsb
mov
test
pop
xchg
cld
or
pop
cmp
mov
mov
addl
jle
inc
and
js
xchg
dec
cmp
movsb
inc
sub
mov
mov
cli
outsl
lods
mov
xchg
aam
fdivrl
movsl
or
mov
xchg
mov
dec
call
ljmp
add
in
cltd
pop
out
add
repz
js
shr
dec
jmp
nop
fwait
mov
sbb
fisttps
rclb
fstl
mov
xchg
test
fs
cwtl
xor
dec
imul
pusha
xlat
sub
xchg
sbb
add
lret
or
call
cmp
loop
xor
addr16
mov
fmuls
fldl
add
inc
lahf
das
fs
pushf
pop
enter
pop
jae
sbb
inc
lods
and
sbb
sub
sub
stc
test
mov
ror
mov
sbbl
xchg
mov
sbb
inc
test
fidivrs
repnz
andl
ljmp
pop
mov
fisubl
movsb
mov
inc
lods
clc
xchg
leave
ret
mov
out
mov
mov
aas
jbe
xchg
or
lcall
sbb
adcb
inc
fxch
push
lods
aam
inc
icebp
jb
jmp
das
fidivrl
xchg
jb
jle
pop
add
mov
jb
fadd
in
xchg
shll
add
adc
pop
and
popf
scas
pop
nop
lret
mov
sub
jle
nop
js
stos
mov
loop
lcall
cmc
dec
jmp
movsb
je
sbb
xchg
cmp
fs
lahf
into
hlt
add
dec
xlat
mov
ja
test
ljmp
sbb
pop
in
lods
cmp
xor
out
loop
mov
mov
das
movsl
fnstenv
stos
nop
push
scas
push
jmp
mov
test
ret
xchg
cmp
mov
les
lods
add
sub
iret
xor
fcoms
sbb
cld
xor
mov
shrl
jmp
push
call
dec
sbb
iret
into
add
jnp
imul
jns
xor
mov
pusha
xor
loopne
pusha
mov
pop
out
fcoms
inc
mov
add
icebp
outsb
lods
adc
sub
hlt
call
rorl
jmp
in
int
sbb
pop
pushf
mov
push
gs
lcall
cmpb
xchg
mov
repnz
push
cmc
dec
outsl
inc
sub
or
push
ds
mov
das
pop
mov
insb
mov
jp
pushf
dec
sbb
icebp
faddl
in
dec
mov
push
xchg
fcoms
mov
movsl
dec
lret
sub
mov
xlat
sub
movsb
dec
shrb
jp
cmpsb
sbb
jge
jns
cltd
xor
bound
pusha
xor
mov
dec
sbb
push
mov
mov
into
in
shrl
pop
neg
push
dec
jmp
js
rcl
inc
sbb
aad
ljmp
inc
mov
lret
adc
xchg
sub
push
adc
xor
add
pushf
outsl
mov
pop
lahf
xchg
loope
add
das
cmp
push
push
sbb
sbb
mov
mov
mov
mov
int
scas
dec
cmpsl
clc
cmp
jle
leave
sub
sahf
iret
das
inc
xchg
testb
fs
push
dec
ret
movsb
mov
xchg
mov
sub
orb
xchg
inc
nop
sub
out
lods
test
imul
jno
or
or
sti
cmp
lods
aas
cmpsl
xchg
mov
or
jbe
cmp
or
rclb
popa
andb
push
sub
xchg
cmc
fildll
jb
hlt
or
xor
jbe
add
cltd
aas
jl
gs
scas
stos
or
cwtl
xor
addr16
adc
or
subb
pop
xchg
dec
push
mov
inc
leave
movsb
popa
add
inc
adc
ficoml
sub
push
jle
mov
and
sub
movsb
xchg
stc
pop
mov
add
arpl
movsb
or
stos
sbb
cmp
or
dec
inc
mov
and
out
adc
jmp
cmc
pop
divl
testb
fs
mov
adc
mov
test
push
hlt
lods
inc
xchg
mov
add
xchg
leave
sub
outsl
adc
mov
lahf
fs
lea
jns
jmp
outsb
pop
out
and
daa
mov
mov
sub
inc
out
shr
cld
lcall
repz
jl
mov
push
or
insl
pushf
xor
imul
call
sahf
sbb
dec
xor
call
inc
and
fs
jne
jbe
dec
test
imul
pop
jmp
adc
xor
aad
je
ds
or
test
arpl
cmc
cwtl
rcl
test
ljmp
repz
pop
jb
jnp
jmp
lahf
movsb
call
adc
inc
stc
dec
popf
ja
inc
xchg
cli
sbb
fsubs
jl
iret
push
ljmp
inc
and
jnp
fsts
sub
jle
scas
mov
xchg
je
push
fisttps
iret
pop
and
push
arpl
mov
push
das
sbb
xor
cmp
mov
dec
into
and
lcall
ljmp
mov
icebp
ja
mov
jb
outsb
rcrl
shl
add
jne
mov
fs
lds
jg
out
jbe
in
pop
pop
xor
sti
sbb
adc
stc
inc
lret
dec
hlt
or
or
fisubs
rep
mov
inc
mov
imul
out
jae
inc
sub
inc
push
cs
pop
jae
sbb
xlat
adc
jne
insb
out
xchg
sub
test
lods
dec
aas
sub
fcom
sbb
add
or
pop
xor
popf
pop
clc
jmp
lret
sbb
mov
test
or
cmc
jb
ljmp
inc
sbb
xchg
sbb
jge
mov
push
mov
jne
or
sar
pop
imul
xchg
sub
ret
push
mov
enter
cltd
lret
ds
inc
mov
mov
shll
cmovg
aaa
fs
int
in
subb
pushf
jno
jl
mov
in
sub
mov
in
imul
push
sahf
mov
lret
into
sub
jg
bnd
mov
outsb
xchg
adcl
or
lcall
push
iret
mov
test
cmpsl
js
nop
or
or
dec
dec
inc
bound
es
shlb
mov
fisubrl
and
jne
mov
dec
adc
cld
sub
out
push
xchg
jno
fs
jl
push
jb
push
mov
insl
dec
sub
push
pop
lock
or
xchg
adc
cld
testb
pop
dec
in
jo
das
insb
pop
sbb
sbb
adc
jae
jl
andb
frstor
sub
add
sub
out
test
mov
ss
cmp
and
dec
cmp
pop
int3
std
jae
dec
cwtl
inc
jle
or
xlat
in
stc
in
inc
add
inc
pop
movd
iret
gs
pop
adc
cmp
cs
mov
out
cltd
cmp
sahf
jp
incb
jg
pushf
adc
outsb
cmpsl
rcrb
dec
xchg
adc
push
jno
dec
or
sbb
sub
add
add
sub
lods
test
mov
pop
jb
mov
in
lods
sub
adc
xchg
jl
mov
add
ljmp
dec
push
sub
out
adc
das
sbb
enter
mov
inc
inc
mov
mov
push
add
mov
sub
fs
push
push
fisttpll
jle
stos
fucom
lods
xchg
pop
xor
jle
mov
mov
iret
push
sbb
jg
call
mov
push
or
sbb
push
inc
pop
or
and
push
mov
dec
ret
cltd
popf
dec
xchg
std
lcall
mov
mov
int
mov
std
mov
add
jnp
or
push
xchg
enter
lahf
adc
pop
sub
outsb
mov
jp
movl
lcall
pop
jae
aam
sub
movsb
repz
int
push
rcl
cld
xorb
leave
lret
decb
jge
jmp
xchg
mov
lds
movsb
mov
fs
shll
gs
pop
or
add
pop
inc
jp
inc
out
insl
das
adc
add
into
cmp
cmc
jno
lret
sub
movsb
adc
and
sahf
lea
or
addr16
imul
add
push
outsb
xor
das
je
mov
movsb
mov
call
xchg
clc
xor
add
decb
add
add
inc
fiaddl
outsl
shll
cmp
sbb
cmp
ror
inc
sub
pop
pop
lcall
test
aas
sbb
cmp
push
mov
and
insl
insl
test
cmpsb
into
outsl
sbb
jp
mov
pop
ficoms
jb
ljmp
shl
fldl
sbb
sub
xchg
mov
and
mov
push
adc
mov
push
out
inc
sbb
stos
call
and
or
mov
int
add
sbb
and
aas
cld
test
es
adc
mov
mov
adc
adcl
test
mov
ja
adc
and
test
das
fs
mov
es
mov
add
fwait
outsl
push
iret
jno
xorb
pop
bswap
rclb
fs
push
sub
and
in
xlat
push
jge
lret
dec
outsl
xor
sub
push
enter
cs
pushf
jg
sti
ss
ror
sbb
jo
xor
lret
pop
pop
es
filds
outsl
lahf
cmp
sub
mov
gs
hlt
push
add
fisubl
xchg
mov
add
das
jno
imul
mov
push
mov
dec
push
into
cmpsb
jle
pop
xor
xchg
pop
cmp
lret
jle
out
fs
mov
cmp
ljmp
lea
popf
ficomps
bound
adc
out
push
mov
scas
mov
and
sarb
lods
inc
dec
xchg
mov
cmpsl
mov
mov
test
sub
clc
ret
aas
inc
sbb
in
shrl
xor
jno
fistpl
in
sub
subl
dec
xor
inc
jbe
mov
in
pop
ret
call
stos
jns
cmc
aam
mov
movsb
inc
push
adc
or
incb
lods
movsb
mov
test
insl
cmp
sbb
push
dec
inc
add
ds
mov
dec
leave
lods
addr16
repnz
push
xchg
push
fcom
lret
in
inc
scas
add
nop
mov
xchg
cmp
inc
add
scas
add
insl
fs
imul
mov
mov
daa
iret
test
xchg
cld
jmp
sub
or
fs
add
cld
decl
in
dec
xor
out
out
xchg
push
xchg
xor
pushf
jns
or
inc
jmp
aam
lret
mov
out
test
ljmp
sub
inc
mov
add
cmovns
dec
add
sbb
outsb
adc
sbbb
test
mov
cmp
jnp
daa
xchg
sub
add
pop
adc
fs
mov
les
dec
jp
inc
and
jecxz
xor
neg
pop
sbb
and
inc
inc
lcall
pandn
inc
mov
dec
jae
sbb
orb
adc
popa
mov
jge
arpl
out
jo
fwait
cmp
addr16
cmpb
sbb
jnp
fsts
jbe
fadds
adc
outsb
leave
arpl
jbe
adc
sbb
add
mov
dec
je
je
pop
test
jle
gs
pop
cmp
mov
sbb
or
dec
xchg
cmp
jecxz
jae
fcomi
lret
adc
popa
inc
mov
inc
push
xor
push
in
fists
add
or
pushf
inc
icebp
sub
dec
cmpb
in
movsb
pop
test
pop
lahf
inc
or
and
cli
mov
jae
inc
xor
add
movsb
or
cmpsb
mov
mov
or
adc
in
outsb
imul
out
into
sub
das
outsb
pop
cs
sti
imul
out
and
push
fs
fnstcw
mov
les
les
jmp
outsb
push
cmpl
mov
push
inc
inc
push
cmp
mov
xchg
inc
vmread
ja
aas
fisttpll
ret
imul
stos
push
sahf
jp
flds
in
fmulp
mov
mov
cmpsb
lcall
mov
in
xchg
enter
jp
jp
dec
jmp
rol
sbb
and
shll
imul
gs
dec
loopne
adc
pop
xchg
stos
jle
inc
pop
push
push
int
popf
adc
mov
push
push
xchg
sbb
js
dec
sub
enter
add
pop
mov
cmpb
dec
cmc
and
push
mov
inc
xchg
popa
out
popf
push
int
iret
sub
fsubrs
subb
movsb
cmc
pop
jl
jp
out
int
jp
mov
movsb
inc
shr
cwtl
cltd
dec
jp
arpl
push
mov
fdivr
or
pop
aas
shrl
pusha
inc
sahf
sub
mov
aaa
mov
fldln2
clc
push
inc
roll
cmp
pop
enter
insb
push
cmp
out
fstps
iret
pop
out
jno
push
mov
and
pop
mov
sub
dec
fstps
aaa
jl
cmpsl
jne
fs
pop
ret
fdivs
int3
push
mov
inc
mov
cmpsb
mov
xlat
sub
inc
inc
in
sbb
movd
mov
pop
inc
lds
js
cs
cli
xchg
inc
fs
adc
xchg
cld
pop
push
lock
fs
inc
mov
cmp
cmc
xorb
mov
sub
pop
push
xchg
in
fstps
sub
in
aaa
jnp
cmpsl
or
xchg
jae
sub
mov
rcll
cmp
cmp
sub
mov
push
inc
pop
push
push
frstor
faddl
inc
sbb
or
iret
cmpsb
hlt
in
js
mov
mov
mov
fstps
fdivrs
jecxz
das
inc
ljmp
mov
or
xor
fiaddl
sti
dec
out
xor
bound
pop
push
sub
popa
in
jp
dec
popf
in
push
movsb
cli
dec
jnp
bound
rcrl
jmp
jb
sbb
xchg
add
popf
inc
mov
js
pop
push
dec
jbe
xchg
jp
cmp
sbb
sti
jmp
js
leave
xlat
fsubrs
jns
cmp
or
mov
xor
outsb
xchg
or
pop
mov
pop
xchg
add
fs
into
cmp
mov
mov
mov
push
fldt
sub
pop
push
roll
sub
adc
mov
lods
imul
loope
call
fs
stos
xor
fld
call
xchg
ret
lahf
mov
aam
in
leave
sbb
out
dec
mov
sub
pop
movl
pop
adc
pmullw
inc
xchg
xchg
dec
jne
idivb
xchg
mov
fldl
dec
mov
bound
sub
mov
mov
insl
mov
dec
xor
jb
outsl
mov
add
fs
in
jns
jp
mov
mov
push
jae
mov
cltd
data16
cmpsb
jne
jnp
or
add
mov
mov
call
subb
pop
jne
addr16
and
into
add
xchg
xchg
push
pop
bound
les
fs
cwtl
fwait
mov
sbb
ja
call
ss
insl
pop
int
mov
repz
stos
adc
lock
cmpsb
xchg
xor
repz
js
in
out
sub
shll
inc
mov
jbe
fldenv
xlat
xlat
mov
insb
or
aas
push
lock
pop
jns
and
movsb
loope
out
aam
leave
jne,pn
jno
inc
testl
ljmp
addr16
sbb
into
cmpsl
test
dec
mov
fisttpll
fnstenv
fcmove
dec
in
movsb
inc
out
je
cld
mov
mov
test
cmpsl
dec
add
cli
out
movsb
or
sbb
lods
stos
into
shr
addl
les
ja
adc
mulb
pop
clc
in
out
cld
xchg
aad
mull
inc
imul
movsb
push
sub
mov
nop
push
sbb
push
or
stos
psrld
mov
ror
xchg
pop
adc
pop
push
and
sarb
inc
pop
jle
jb
adc
jnp
mov
pop
inc
lods
not
loopne
mov
inc
test
in
adc
mov
adc
aaa
or
in
inc
xchg
cld
push
xchg
inc
inc
mov
cwtl
ret
loopne
aam
fs
in
sub
addr16
inc
or
dec
dec
mov
stos
sub
jmp
and
inc
dec
mov
dec
add
pushf
cmpsb
jo
jecxz
xchg
outsb
outsl
cltd
stc
out
movsb
xchg
mov
ret
insb
orl
test
popf
out
jl
insl
mov
mov
repnz
sub
sar
movsb
mov
or
mov
outsb
out
orl
pop
cmpsb
data16
in
push
xchg
push
and
mov
lock
pop
mov
sub
movsb
fsubr
or
inc
jge
mov
fdivrp
jne
insl
sub
call
out
or
ja
out
cwtl
xlat
test
hlt
xchg
imul
sbb
lods
cmpsb
xchg
pop
and
sbb
addr16
cmp
bnd
popa
inc
pop
add
fwait
arpl
sbb
mov
fiaddl
mov
cli
out
xchg
xchg
shrl
lcall
ficomps
les
xchg
into
pop
sbb
push
cwtl
push
in
fwait
das
stc
fs
call
mov
into
movsb
cmp
lret
mov
xchg
sub
das
push
mov
mov
push
mov
mov
adc
out
movsb
das
fsubp
mov
fisttpll
pusha
mov
ficoms
xor
xor
pop
dec
push
mov
jb
cltd
or
add
sbb
test
push
pop
jp
mov
movl
dec
lret
mov
jl
pop
xor
push
jae
pusha
and
mov
push
scas
mov
xchg
xchg
icebp
mov
or
sub
cwtl
rol
frstor
loope
mov
movsb
or
inc
cld
in
stos
test
sub
cld
fs
mov
xchg
dec
push
dec
std
mov
shl
callw
xchg
rcll
sub
ret
ss
inc
cmpsl
xor
push
lock
ret
xchg
xchg
sbb
loop
rclb
stos
fwait
and
fdiv
jbe
stos
push
mov
out
out
shrl
xchg
inc
push
add
pop
jg
adc
xlat
pop
cli
or
sub
incl
sub
or
xchg
adc
mov
call
repz
rcrb
lret
in
jnp
mov
cmp
in
out
dec
aas
add
adc
or
testb
add
nop
scas
mov
ljmp
pop
mov
inc
xor
test
shll
out
cwtl
cld
mov
or
dec
or
clc
mov
out
outsb
imul
jo
jg
cli
stos
mov
xor
movsb
aad
ret
adc
jnp
ljmp
lahf
mov
or
pop
xchg
imul
imul
outsl
fs
xlat
cmp
adc
adc
cltd
mov
rcl
imul
fs
xchg
movsb
leavew
test
outsb
test
lods
jne
lea
push
mov
mov
or
call
mov
out
jbe
mov
sbb
shlb
mov
roll
add
jne
imul
scas
dec
or
in
bound
or
pop
adcl
xchg
pop
jns
test
inc
xor
jo
arpl
mov
pop
push
popf
andl
push
dec
fwait
cwtl
or
mov
jl
mov
push
jnp
sbb
sbb
sub
lods
sbb
sub
fcomps
je
xchg
imul
xchg
bound
scas
fs
popa
pusha
mov
cmpsl
les
or
arpl
sbb
mov
clc
dec
inc
dec
xchg
dec
push
lcall
mov
ja
adc
mov
dec
dec
aaa
dec
repz
inc
mov
or
push
dec
es
push
cmpsb
sub
ret
sahf
mov
sti
jo
sbb
dec
xchg
sbb
ds
pop
movsb
mov
jbe
fiaddl
gs
and
lds
adc
or
movsb
mov
xchg
loopne
sub
insb
loopne
fs
imul
mov
notl
mov
mov
pop
jle
ss
xchg
sub
notl
sub
in
dec
xchg
outsb
out
fcom
lcall
fnstenv
push
adc
pop
inc
or
add
sub
inc
add
xchg
xadd
in
lea
movsl
icebp
inc
pop
mov
hlt
jg
cmp
xor
mov
popl
fs
in
xor
aam
lcall
je
int3
out
xor
imul
jge
out
fs
sbb
call
sub
movsb
and
sub
add
push
leave
adc
add
dec
fldenv
inc
mov
dec
mov
cmp
sbb
mov
lret
mov
repnz
loope
jmp
imulb
inc
aaa
and
inc
lret
jp
jmp
mov
dec
dec
lret
in
fsubrs
sbb
lock
dec
ss
jge
rclb
dec
pop
xorl
jmp
ljmp
movsb
xorl
sub
repnz
inc
bound
fs
dec
mov
pop
cwtl
cmp
mov
mov
mov
jb
inc
cmp
xchg
sub
out
mov
call
sub
cmpsl
mov
inc
push
int3
inc
in
pop
pop
or
mov
into
ss
daa
js
pop
jle
sahf
scas
cmp
sub
aaa
pop
pop
add
cltd
jo
and
into
mov
je
in
dec
int
mov
fidivs
mov
or
pop
mov
in
xchg
jo
mov
dec
out
stos
or
pop
sub
dec
pop
jne
pop
sbb
loope
dec
inc
jns
in
xadd
push
sub
sub
pushl
imul
dec
test
shr
inc
xlat
ficompl
shll
insb
pop
jecxz
out
scas
xchg
test
imul
sub
subl
push
push
push
inc
jns
jmp
sub
inc
jg
mov
jmp
loope
outsb
std
pushf
adc
mov
sub
ret
xorb
mov
gs
stc
mov
xor
int3
imul
xchg
dec
sbbl
xchg
cmp
push
mov
pop
dec
cld
cmp
mov
inc
pop
mov
cmp
into
and
sub
xor
int
jno
inc
in
movsb
lods
aam
js
cwtl
negb
cmc
sbb
inc
out
or
push
xchg
adc
cmp
jg
dec
dec
add
and
pushf
add
add
jns
add
or
loop
and
arpl
stc
fadds
into
out
push
mov
test
pop
jbe
dec
sub
cmp
and
dec
push
jge
fs
mov
pop
sbb
inc
and
dec
jmp
fcomps
xchg
push
sub
mov
inc
pushf
mov
rorl
mov
sbb
xchg
adc
das
dec
jns
cmpsl
mov
cltd
leave
adcb
mov
add
fnstsw
pop
mov
sub
inc
movsb
adc
outsb
outsl
xchg
lods
out
movsb
mov
js
imul
add
fcomps
xchg
and
sub
push
pop
cmp
dec
cmp
dec
adc
adc
mov
test
mov
add
dec
inc
outsl
int3
bound
push
movsb
adc
xchg
mov
mov
stos
imul
repnz
lret
jo
subb
xor
cmp
mov
mov
mov
fstps
dec
data16
sub
dec
imul
cmp
dec
pop
mov
mov
pop
jae
pop
add
mov
sub
pop
cltd
adc
jle
shlb
jp
add
xchg
leave
dec
xchg
int3
insl
rcrl
push
push
and
push
dec
xor
leave
cmp
dec
rorl
and
das
loopne
jp
adc
flds
inc
inc
movsb
nop
ret
pop
add
pop
daa
jne
lods
das
adc
sbb
sbb
cmp
dec
xor
mov
mov
add
out
push
push
mov
test
sbb
inc
stc
push
packssdw
sti
sub
sub
adc
add
test
pop
lret
test
sub
js
sub
and
cmp
sub
mov
lock
shl
into
add
test
mov
mov
adc
xchg
mov
das
dec
mov
jge
inc
xor
cld
push
test
popa
movsl
aas
or
mov
sub
dec
outsb
mov
push
lods
stos
out
xchg
mov
pop
lods
fidivl
scas
das
pop
push
jae
neg
cmp
sub
sti
add
aad
add
decb
lahf
ss
mov
daa
fs
and
shlb
inc
sete
adc
decl
fs
push
pop
jge
mov
aas
in
nop
leave
rorb
sub
push
stos
movsb
xchg
pop
test
or
lret
mov
ret
out
cmp
mov
fisubrs
mov
sbb
push
out
dec
add
pop
and
pop
aaa
sbb
dec
jp
ja
ja
mov
inc
loopne
mov
xor
cmp
jecxz
cmpsb
mov
jbe
ds
dec
inc
push
or
jg
or
add
mov
push
or
test
je
inc
cld
xor
push
xor
jb
in
mov
js
leave
dec
cltd
push
repz
fs
xchg
in
ja
insb
daa
adc
stc
les
test
pop
test
inc
push
movsb
pushf
lret
test
mov
jb
jmp
mov
js
and
or
rclb
stos
enter
sub
test
cmpsb
scas
mov
mov
xchg
loope
mov
jle
sub
mov
fs
mov
aam
push
xor
push
mov
sbb
jmp
xor
push
xchg
cltd
xor
outsl
daa
orb
subb
cmc
push
mov
ja
add
xchg
into
push
inc
push
mov
in
xlat
pop
cmp
movsb
loop
movsl
sub
mov
js
add
shll
movsb
mov
dec
xchg
clc
into
jmp
xchg
ret
add
fcmovne
movsb
mov
mov
pop
dec
dec
das
pop
stc
enter
dec
clc
push
add
mov
fs
cmc
push
outsb
ljmp
sbb
mov
movsb
xor
or
pop
hlt
sbb
jo
out
fs
iret
orl
mov
enter
inc
jbe
ficompl
inc
xchg
out
lods
lret
sub
jmp
fxam
je
out
and
xchg
arpl
jnp
sub
mov
in
je
mov
rcrb
add
aad
lret
fldcw
and
sub
sub
stos
cli
orl
je
xor
push
push
pop
mov
add
mov
lea
andb
xchg
jmp
call
lret
imull
push
in
cltd
in
fwait
jp
sub
add
or
bound
out
xchg
cmpb
bound
popa
cmp
dec
jl
inc
pusha
lea
sub
inc
rcrl
pop
lcall
shlb
adc
cld
imul
fldcw
inc
push
lods
and
inc
mov
sahf
and
int3
dec
or
ss
add
sub
push
ds
andb
ljmp
xchg
inc
and
cli
jbe
fs
or
jo
mov
fldenv
mov
cmpsl
mov
cmp
jge
and
xchg
test
jge
je
mov
rorl
out
sbb
mov
insl
add
push
xchg
xchg
pop
jae
xor
jae
push
push
bound
mov
push
jle
lods
mov
dec
aas
xchg
test
xchg
sahf
into
cli
in
xchg
pop
inc
jmp
filds
das
daa
mov
mov
mov
dec
xlat
das
pop
inc
push
fcmovnu
ss
test
cmpsb
jle
push
mov
sbb
call
xor
jb
jne
rorb
push
sbbb
mov
or
popf
shlb
jg
scas
div
jae
ficomps
mov
mov
mov
test
js
jo
loope
push
xor
sub
hlt
fwait
inc
data16
push
clc
insb
sbb
icebp
rcll
outsb
in
sub
push
jmp
mov
mov
pusha
pop
mov
ljmp
adc
hlt
out
xchg
mov
jmp
lahf
lahf
pop
call
movsb
das
push
push
mov
cld
fistpl
sti
cmc
movsl
fwait
sub
in
shrl
test
sub
fmull
cmp
dec
mov
out
movsb
and
in
push
jmp
mov
dec
dec
fnstsw
and
jp
xor
jbe
jbe
or
and
repnz
mov
and
imul
ds
scas
mov
pop
inc
xchg
mov
rcl
add
jbe
filds
ljmp
inc
cmp
jo
add
ljmp
subl
jmp
pushf
pop
adc
jnp
roll
ficomps
or
fisttpl
fwait
jno
mov
out
in
xor
jecxz
push
dec
cmp
mov
or
and
je
cltd
imul
jmp
in
mov
mov
int3
ret
outsl
aaa
sub
sbb
ljmp
mov
popa
rclb
adcb
mov
jbe
cs
jnp
test
sbb
aam
jae
negb
incb
ja
loopne
fcmovnb
jbe
push
int3
inc
and
pop
inc
mov
dec
mov
inc
nop
cmp
pushf
inc
pop
fs
rcr
mov
in
pusha
mov
inc
fs
lea
out
cld
jo
dec
cld
loop
into
push
subl
mov
aas
or
cli
scas
rcrl
add
push
xor
mov
mov
int
loopne
fldt
mov
test
repz
or
clc
sahf
pop
mov
mov
in
fs
add
push
or
mov
sbb
int3
xor
xchg
lds
call
int3
push
pop
in
repz
jp
push
data16
repz
lret
pop
imul
mov
ficomps
mov
jbe
push
adc
xchg
je
add
outsb
or
xchg
pop
jae
mov
popf
dec
popa
jne
sub
ss
lahf
lock
andb
imul
fcoms
pop
popf
cltd
sbb
fiaddl
mov
sbb
dec
mov
sbb
into
mov
divl
sub
adc
icebp
mov
sub
cmp
or
shlb
mov
inc
dec
dec
inc
test
aas
dec
jb
sub
pushf
or
int
xor
mov
jmp
sub
pop
push
movsb
or
sbb
shlb
xchg
cmp
xchg
dec
negb
aam
and
aaa
push
jnp
jle
mov
repz
imul
jmp
xor
lahf
xchg
bnd
ja
leave
iret
stos
repnz
fs
imul
lea
and
and
pop
xorb
aam
loop
popa
sbb
cmp
fsubl
cmp
xor
insb
adc
dec
adc
sbb
pushf
sub
push
or
jecxz
jl
xor
int
jnp
les
lock
pop
clc
movsb
daa
pop
imul
pop
pushf
sbb
sub
jo
dec
inc
insb
mov
scas
es
jle
xchg
dec
pop
mov
push
mov
fildl
aam
push
lods
mov
jle
fdivr
repnz
pop
sub
mov
movsb
mov
daa
xor
lea
pop
ficoms
or
xor
imul
bound
mov
int
add
lret
inc
out
add
xchg
test
pusha
xor
pop
jmp
add
cmp
add
jle
xchg
jle
dec
lea
nop
inc
mov
or
jge
dec
cmp
pushl
outsl
lods
inc
fs
shll
stos
decl
mov
cmc
shl
and
mov
adc
mov
xchg
xchg
or
cmpsb
loopne
ljmp
mov
or
push
repz
xchg
lock
mov
aam
test
jp
test
pop
sbb
clc
mov
loop
das
jb
push
or
lret
pop
ja
shrb
icebp
fldcw
js
or
mov
inc
mov
insl
shlb
inc
stos
call
inc
movsb
mull
pop
mov
insl
imul
xor
fisubs
dec
out
cmp
pop
jae
decl
push
xchg
shrl
inc
inc
cmp
aas
shrl
gs
hlt
out
dec
sub
into
sbb
loope
cltd
nop
rorl
aas
mov
jle
push
sbb
inc
test
shrb
nop
or
adc
jnp
mov
mov
fcom
jle
ret
stos
xchg
fs
mov
sub
push
iret
fwait
lea
cwtl
das
cli
push
fs
bound
ljmp
add
pop
pop
int3
add
adc
pop
cmp
lea
lcall
hlt
mov
pop
inc
sti
fdivrs
pop
ljmp
or
jl
outsl
pusha
imul
movsb
xor
sbb
out
jl
movsb
dec
dec
adc
repnz
xor
pop
enter
push
fiaddl
fbstp
or
xor
sub
dec
lret
jge
jl
push
nop
sub
insb
lea
mov
test
subb
or
popf
fcmovne
imul
and
gs
ja
mov
jp
push
mov
xchg
xchg
jecxz
add
bound
jae
fcomps
test
pop
pop
shrb
lods
jb
sbb
das
sbb
mov
mov
shrb
jg
mov
cmp
movsb
pop
test
jge
ljmp
ljmp
and
add
inc
sub
sbb
xchg
jne
dec
xchg
je
mov
cld
lods
cmp
aad
add
xchg
cld
outsb
imul
adc
mov
jecxz
dec
push
inc
fwait
insl
rcrl
push
pop
xchg
clc
enter
pop
jne
cmp
jecxz
mov
mov
cwtl
lret
insb
fcompl
mov
iret
mov
pop
hlt
xchg
data16
sarb
pop
incb
push
aam
or
jae
daa
sbb
xchg
daa
dec
insb
inc
xor
loop
add
adc
inc
xor
test
add
clc
or
in
cmpsb
push
test
ds
dec
jge
dec
pop
repnz
sahf
ss
sub
js
nop
sub
mov
cwtl
outsb
dec
xor
cld
lea
cmpsb
stos
shll
dec
dec
jge
dec
ljmp
mov
popa
cltd
push
mov
sahf
mov
xchg
jnp
sub
jb
movsb
shl
rcrb
ret
inc
and
sbb
out
push
xchg
out
arpl
sarl
sbb
pop
sbb
sbbb
xor
mov
pop
and
adc
data16
push
popf
xorb
cld
sbb
mov
out
and
call
fistl
jmp
jg
mov
lods
push
data16
push
arpl
fmull
cli
dec
cmpsl
xchg
and
or
into
lods
dec
mov
cmp
pop
nop
sbb
push
repnz
movsb
jl
jne
xlat
loopne
stc
jno
push
mov
mov
dec
fnstsw
inc
movsl
scas
jno
dec
mov
push
ret
insl
pop
add
adc
jb
lods
insl
fs
lret
stos
js
adc
or
sbb
rclb
sub
xchg
sub
sbb
cld
dec
dec
inc
imul
mov
adc
xlat
sub
dec
incl
dec
mov
xor
xchg
or
mov
xor
sbb
stos
outsb
or
xchg
sub
pop
rclb
movl
shl
cli
mov
mov
aad
xor
add
mov
insl
lds
test
jo
fcomip
out
das
in
les
dec
in
lcall
stc
sub
inc
cmp
pusha
xorl
pop
shrl
add
jae
fnstcw
shrl
jmp
dec
pop
lods
test
mov
jmp
jg
imul
hlt
lock
and
shrb
mov
or
ss
xchg
stos
fs
mov
out
enter
fwait
jno
fsubs
movsb
ja
jg
cmp
ljmp
mov
popf
and
ljmp
mov
movsl
mov
fs
xchg
jo
fwait
nop
jne
xor
jl
enter
mov
xchg
mov
inc
out
jnp
fldt
ljmp
xchg
les
jmp
mov
jge
std
out
push
fcomps
ret
sub
fstps
outsb
or
sub
test
sub
sub
xor
push
test
mov
sub
pop
or
jg
call
call
pop
mov
cltd
dec
shlb
xchg
scas
jno
iret
fisubrs
jmp
aad
inc
lock
jle
outsl
jmp
mov
iret
mov
test
sbb
jbe
xchg
jns
push
push
pop
dec
fs
mov
push
int3
out
push
dec
lods
repz
lea
out
icebp
jns
adc
sarl
add
popf
shrb
mov
mov
lcall
pop
pop
shll
in
arpl
inc
inc
jmp
scas
adc
push
mov
xchg
inc
lahf
xor
scas
idivl
out
mov
addl
adc
sysret
xchg
test
sbb
cltd
fisttpll
js
or
daa
lods
movsb
dec
loope
aaa
jge
fs
mov
test
ljmp
aad
jnp
decl
adc
and
fimuls
mul
mov
sub
mov
fwait
rcrl
dec
sub
sbb
insb
dec
jmp
push
xor
js
or
ret
or
lret
lods
pop
fdiv
xchg
mov
xlat
push
push
fldcw
xchg
mov
pop
adc
xchg
mov
mov
mov
and
sub
push
and
pop
cmp
stc
sub
stc
insb
in
out
es
lea
bound
fsubrs
or
mov
pop
lock
inc
mov
sbb
xor
fcompl
and
mov
es
repnz
xor
dec
jmp
ret
sbb
rep
stos
sahf
xor
mov
into
es
cmp
inc
outsl
pop
mov
jo
movsb
jne
inc
cmc
mov
cmp
notb
iret
ds
pop
lods
insl
movsb
in
cmpsl
imul
sbb
inc
movsb
mov
lods
jmp
fsubp
jg
pop
mov
pusha
lods
stos
add
push
inc
mov
movsb
jmp
imul
je
aas
adcl
add
lock
fnstenv
jle
xor
mov
orb
imul
cli
push
mov
push
and
psubd
adc
jbe
loop
dec
rclb
pusha
sbb
int3
lahf
push
lcall
or
fsubp
lods
mov
test
mov
sahf
mov
fstps
gs
in
imul
popa
call
stos
cmpsl
imul
fstl
adc
sub
fisubl
shll
mov
mov
loop
inc
pause
sbb
sbb
aad
and
aaa
je
sbb
shl
or
shlb
ljmp
mov
sahf
or
pop
add
subl
jge
ss
inc
jmp
shrb
ret
inc
sahf
out
gs
jno
fimuls
in
cmpb
andb
leave
dec
mov
cltd
inc
sub
fistpl
jg
push
add
in
xchg
push
arpl
inc
lret
sbb
cmpsb
sbb
les
lret
mov
jge
cli
fimull
lahf
loopne
push
fdiv
jp
mov
or
bound
push
pop
push
mov
xor
dec
aaa
test
popf
xor
mov
jecxz
xor
inc
jne
mov
fldcw
xchg
inc
add
repnz
add
inc
cld
pop
inc
shlw
xchg
jle
mov
into
push
jb
adcb
cmpsb
data16
es
cltd
xchg
or
imulb
push
ret
repnz
mov
dec
sbb
rcr
push
into
popf
adc
jp
repnz
cmp
pop
or
mov
and
sub
into
push
int3
gs
and
lds
jmp
lret
cmp
cltd
repz
sbb
cwtl
pshufw
xchg
jnp
sub
add
aad
ret
lds
sub
jge
jae
mov
mov
lods
mov
lods
movsb
fstl
insl
jl
sbb
pop
jecxz
jns
xor
icebp
aas
imul
iret
repz
orb
mov
xor
scas
inc
mov
rclb
outsw
daa
lods
movsb
add
fs
pop
mov
in
lret
decb
push
out
je
int
outsl
aas
fisubrl
push
xchg
sbb
inc
xor
xchg
push
mov
inc
mov
cmpl
push
sbb
leave
subl
mov
sahf
scas
adc
daa
out
xchg
fcmovbe
addl
movsb
jbe
je
hlt
mov
out
shrl
dec
inc
and
imul
outsl
lods
jg
push
jne
dec
imul
es
dec
out
xorb
dec
lods
jp
add
and
pop
mov
pop
shll
mov
cmovb
scas
jp
jbe
call
cmp
in
sti
filds
mov
mov
int
mov
jbe
fs
xchg
xor
sti
arpl
xchg
movsb
das
push
call
dec
fsubl
les
jne
jno
adc
jmp
lods
pop
mov
add
add
out
sahf
or
loop,pt
idivb
inc
jl
pop
adc
xchg
jb
lods
out
sahf
sbb
mov
fldenv
std
push
pop
pusha
movsb
int3
push
fst
add
insb
pop
sbb
leave
fwait
mov
adcl
fwait
mov
push
lock
jnp
cmpsl
mov
pop
into
xor
dec
or
call
mov
mov
jne
mov
add
jg
aas
ss
mov
fildll
imul
jp
lds
ds
dec
xor
and
imul
fs
ds
ds
jl
out
jns
pop
pop
mov
inc
cmp
mov
push
fwait
jb
ret
inc
push
out
mov
xchg
in
orl
outsb
dec
push
dec
in
adc
xorb
popf
xlat
or
psadbw
test
adc
leave
inc
push
mov
mov
test
mov
xor
int3
sub
adc
test
out
daa
enter
inc
jmp
sub
pop
movsb
in
loopne
stos
adc
insl
xor
xor
addr16
cmpsl
sbb
test
sbb
add
mov
push
movsl
insl
dec
adc
sbb
push
mov
imul
inc
push
adc
test
insb
fldenv
movsb
mov
test
jae
ss
jp
fs
je
mov
mov
rclb
mov
push
push
lods
pop
jno
mov
and
cmp
xlat
fsubrs
outsb
or
xchg
dec
sbb
loop
rclb
cmp
testb
xor
mov
jg
out
incl
dec
divl
sbb
or
std
mov
test
pushf
orb
mov
sti
pop
inc
jg
inc
jae
pushf
cwtl
or
mov
imul
mov
jle
sub
dec
sbb
or
sub
mov
lahf
or
into
call
mov
cli
dec
dec
repz
clc
or
mov
sbbb
imul
fidivrs
popa
mov
mov
das
xchg
cmc
jbe
jbe
adc
fs
mov
pop
sub
dec
imul
mov
in
xchg
jp
jle
lret
push
mov
jbe
cmpsb
inc
push
ljmp
inc
jle
rcl
mov
gs
roll
pusha
repz
xor
rolb
orl
gs
subb
stos
icebp
insl
add
jbe
call
cmp
fs
cmp
inc
sbb
cmp
fisttpl
lret
movsb
es
push
fs
inc
sbb
les
xor
sbb
dec
je
or
es
out
cs
test
pop
xlat
jl
jb
icebp
inc
adc
inc
lods
jg
fildl
stc
dec
shrl
inc
ljmp
dec
nop
movsb
mov
int
ljmp
pop
mov
dec
fcoml
rorl
add
sbb
push
pusha
subl
stos
scas
dec
push
sbb
bound
fs
fwait
pop
jo
sbb
scas
jnp
push
and
stos
mov
std
nop
mov
sub
out
sahf
xor
daa
ljmp
out
movsb
shl
and
add
mov
cmpsl
xor
mov
test
mov
cwtl
push
fcmovu
xchg
ss
in
inc
dec
cli
xor
bound
and
cld
mov
jmp
rolb
pop
dec
xchg
sti
fdivrl
sub
mov
in
adc
lret
sarl
jno
add
je
leave
jp
cmc
lret
sbb
sbb
enter
cmp
cli
or
mov
push
add
out
or
std
insb
add
inc
push
ret
mov
fs
movsb
out
lock
dec
movsb
aaa
js
mov
push
cmc
mov
jecxz
pop
decl
loope
and
jl
leave
sbb
mov
dec
int
loope
movb
or
or
cmp
cmp
insl
out
lods
dec
nop
dec
pop
jbe
pop
faddl
je
inc
jle
xchg
imull
jnp
mov
mov
or
insl
mov
cltd
cmpsb
cmp
scas
inc
arpl
xchg
cltd
mov
int
cld
jle
mov
inc
flds
ret
les
daa
xor
cmp
ss
nop
stc
push
movsb
pushf
das
inc
aaa
in
mov
sub
sbb
mov
stos
shlb
cmp
jle
sub
int
and
inc
mov
adc
inc
cmp
cmc
push
insl
or
jno
push
test
fwait
loop
fs
repz
inc
fistl
mov
xchg
mov
pushf
hlt
clc
test
aaa
push
mov
out
loop
sbb
and
sub
cmp
stos
int3
sarb
cltd
outsl
dec
pop
mov
add
in
or
push
sub
dec
inc
sbb
je
push
int3
das
movsb
mov
les
push
adc
mov
dec
inc
xchg
mov
lds
xchg
and
sbb
cmp
or
test
dec
dec
outsb
nop
mov
sbb
ret
mov
iret
sub
ljmp
jl
hlt
xor
push
jle
mov
jns
mov
ss
aad
pop
data16
mov
fs
dec
lods
push
push
xchg
cli
sbb
fwait
jl
inc
gs
lods
movsb
test
fstpl
or
jge
mov
dec
jb
push
and
pushf
mov
fcomi
rorb
insb
aas
jge
stos
int3
jmp
inc
call
test
xor
pop
shl
mov
imul
ja
xor
in
loopne
lea
mov
push
movsb
in
xor
fdivs
insb
xchg
add
das
or
dec
sahf
aam
daa
aam
jg
shlb
mov
jp
int
jae
fisubl
outsb
cmp
popa
jb
pop
sub
mov
xor
push
xchg
jmp
shlb
fwait
mov
cmp
inc
mov
lcall
ljmp
aam
cmpsb
loopne
xor
pop
sti
fidivrl
or
xlat
pop
enter
lods
push
ljmp
sbb
movsb
sarb
je
in
add
imul
jnp
lahf
jb
lea
add
pop
xchg
mov
fs
jae
adc
imul
lahf
or
adc
stos
ss
and
mov
nop
sbb
loopne
or
inc
mov
lea
cltd
outsb
lods
fs
xchg
popf
xchg
fildll
dec
movsb
jle
xchg
js
jae
and
xor
insl
cmpsl
sbb
push
imul
mov
bnd
aas
rcl
into
cmpl
mov
insl
sub
jl
lods
xchg
sarl
leave
outsb
sbb
sub
pop
insb
push
movsb
and
jne
jae
lods
rcr
xor
sbb
sbb
or
pop
dec
xor
jle
mov
enter
sub
sub
jns
cmp
mov
mov
inc
jo
jbe
jle
mov
test
imul
repnz
mov
mov
stos
jge
stc
mov
jp
dec
xchg
sbb
jbe
xchg
lret
dec
adc
add
cmc
repnz
stos
std
movhlps
dec
out
movsb
ds
arpl
adc
and
push
das
sub
call
mov
pop
and
gs
inc
inc
mov
test
fwait
xlat
pop
sbb
push
cli
jecxz
jmp
add
mov
mov
jnp
rcrb
das
dec
pop
xor
lahf
adcb
xchg
fldt
sahf
mov
inc
test
lock
jb
dec
dec
mov
fisubrs
pop
fcomps
adc
pop
dec
mov
pop
push
mov
fs
arpl
movsb
mov
sbb
add
push
in
pop
test
cltd
cmc
mov
mov
push
arpl
mov
loopne
jbe
pop
dec
inc
or
pop
mov
dec
mov
fs
pusha
lds
mov
popf
hlt
shll
lods
aad
or
push
jge
lea
hlt
dec
sahf
insl
movsl
sbb
pop
jecxz
inc
js
add
repnz
stos
fs
out
std
aam
or
add
mov
dec
jns
jb
fwait
hlt
inc
add
jb
push
cli
lcall
int3
ror
inc
scas
ss
sub
sbbb
int
jne
push
cli
mov
xchg
sub
xchg
fwait
push
insl
cs
inc
das
cmp
lret
ficoml
imul
mov
incl
mov
repz
ljmp
cmp
jbe
dec
cmp
push
fisubl
jl
adc
lds
lods
push
adc
aas
ljmp
sub
push
push
fcmovb
les
js
cmp
jmp
mov
jge
lret
das
pop
or
stos
fisubrs
sub
shlb
lret
pop
push
xchg
es
jbe
int3
lods
out
movsb
iret
dec
fwait
adc
and
sub
pop
pop
data16
vmovapd
jecxz,pn
test
jp
xlat
and
test
fists
out
sbb
inc
aad
leave
xor
mov
pop
xchg
cwtl
xchg
cmp
pushf
mov
dec
inc
leave
cmp
jb
imulb
jo
out
shrl
insl
or
cli
inc
or
mov
lcall
push
pop
xchg
adc
sub
loopne
cmp
mov
cmp
xchg
subb
imul
mulb
lods
add
jae
xor
or
mov
mov
push
mov
jno
pop
out
and
fs
rorl
aaa
rolb
push
jne
mov
in
pop
nop
fnstsw
movsb
mov
pushf
jb
lret
mov
mov
inc
mov
aam
xor
mov
dec
fdiv
jmp
jecxz
push
cmp
and
clc
fs
fisubs
cld
sbb
mov
pop
je
inc
dec
dec
repz
movsb
lods
lret
sbb
imul
andl
hlt
cwtl
lcall
movsb
push
data16
lods
xor
mulb
push
test
add
mov
roll
icebp
lret
jg
jle
out
pop
mov
lahf
insl
inc
dec
jmp
das
jnp
or
dec
insb
nop
inc
in
lret
pushf
push
js
sub
push
xchg
and
hlt
sub
cli
pushf
movsb
or
inc
iret
sub
adc
or
jp
inc
add
mov
mov
repnz
test
fwait
lods
movsb
xchg
cld
inc
lahf
std
enter
andl
mov
cltd
dec
iret
repz
jle
jg
mov
test
mov
outsb
xchg
orl
mov
adc
xchg
push
movsb
xlat
pop
sub
add
jns
mov
mov
shl
lods
adc
mov
pop
lcall
jno
cltd
sti
xor
rolb
addb
xchg
xchg
insb
mov
push
inc
cltd
jb
into
jb
add
sub
pusha
jle
pushf
xchg
push
jbe
jecxz
mov
fs
shr
into
lret
ret
in
sub
out
daa
les
or
lret
pop
mov
jg
clc
inc
mov
popa
mov
gs
cmp
mov
push
in
inc
or
fidivrl
faddp
inc
mov
push
push
outsb
nop
dec
ljmp
aas
cltd
adc
fildl
iret
sub
imul
adcb
lock
test
out
xor
mov
xor
cltd
mov
mov
sbb
sub
movsb
inc
jns
andb
daa
nop
jge
ja
jg
jae
push
mov
sbb
daa
lods
ret
rcrl
addl
gs
add
cld
sub
mov
sarb
mov
bound
or
jg
mov
es
cs
inc
mov
dec
ss
dec
or
imul
pop
mov
add
or
adcb
cmp
fs
lods
fldenv
lret
jecxz
ljmp
xchg
hlt
lret
xchg
or
or
lret
out
pop
inc
lods
mov
lea
lret
inc
push
imul
fadds
in
inc
or
push
mov
outsl
inc
or
and
cwtl
sbb
les
iret
or
pop
call
sub
js
mov
sub
mov
add
sub
arpl
lret
fdivs
and
add
dec
or
sub
lods
out
adc
jge
in
test
outsl
inc
decb
lds
ds
pop
pop
cld
fs
inc
aam
lahf
xchg
xor
push
push
js
mov
int
lea
sarl
fidivs
clc
fldl
outsb
mov
std
ds
ljmp
jmp
push
popaw
cltd
cmp
adc
je
out
jb
pop
and
mov
stos
aam
mov
or
jae
mov
sub
pop
mov
mov
push
pop
clc
outsb
pop
outsb
scas
sarl
das
aaa
or
mov
sbb
pop
lret
ljmp
cs
or
je
int
adc
push
imul
popa
jns
or
push
push
pop
pop
cltd
pop
dec
xor
and
ret
dec
es
lods
inc
fnstenv
add
sub
les
sub
aas
sub
jl
push
push
in
push
add
jo
cmpl
jns
sahf
in
lret
push
adc
sub
test
cmp
xchg
js
cwtl
jle
add
lcall
stos
loopne
lock
or
sbb
ret
inc
xchg
inc
mov
test
rcrb
jb
jecxz
je
inc
adc
mov
jmp
sti
sbb
and
ljmp
mov
nop
add
repz
and
mov
or
jbe
ficompl
addr16
or
lods
scas
lahf
push
clc
aam
fcomps
or
call
mov
pop
add
mov
lret
outsb
repz
and
lcall
inc
test
imul
dec
push
mov
mov
inc
sbb
jl
insb
enter
enter
ja
dec
and
xchg
rorb
adc
shll
inc
subl
cmp
sub
lcall
add
scas
pushf
hlt
push
jmp
sbb
cmpsb
gs
xor
insb
cmp
loope
add
icebp
cmp
fnstenv
std
outsl
sub
xor
pop
push
ss
xchg
into
adc
loopne
out
cltd
sub
shl
lods
sbb
call
data16
ds
lds
fimull
add
xchg
xchg
lods
insb
call
stos
and
les
lods
adc
sub
pop
adc
cwtl
push
clc
lods
outsl
mov
dec
call
test
xchg
mov
or
jecxz
jo
jg
addl
mov
push
sahf
jb
xchg
stos
movsb
push
insb
fdiv
adc
scas
jnp
cld
fsubrp
nop
dec
mov
mov
lret
inc
fistl
inc
into
iret
dec
lcall
dec
inc
push
jmp
jge
sub
cmp
dec
inc
xchg
pushf
pop
mov
jmp
call
cli
and
adc
stos
mov
xor
ljmp
movsb
fdiv
aam
scas
add
mov
out
jns
lock
repz
sub
pop
inc
push
or
inc
pop
mov
pushw
jp
push
and
and
mov
cld
inc
or
push
xor
mov
movsl
enter
push
xchg
mov
inc
cmp
subl
daa
cmp
or
outsb
std
je
jo
fs
cmpsb
call
insb
cltd
dec
dec
jmp
xor
std
jb
int3
and
jnp
rcr
add
mov
mov
sub
cltd
jns
inc
jle
push
inc
movsb
int
imul
fwait
cwtl
gs
outsl
test
xor
sbb
push
sbb
sar
in
and
sarb
xchg
mov
xlat
fs
repz
xlat
movb
add
xchg
or
jmp
in
jb
aas
fisttpll
pop
addl
scas
popa
call
cmp
jmp
movsb
loop
and
mov
xor
inc
subl
mov
out
fldcw
iret
push
and
ljmp
jp
mov
inc
in
adc
adcb
adc
mov
dec
mov
mov
cmpsb
sbb
inc
jb
inc
std
lret
mov
xchg
dec
mov
dec
lea
or
test
mov
xchg
mov
or
cld
xchg
lahf
addr16
rcrl
inc
push
mov
loopne
adc
mov
jle
pop
dec
inc
insl
jg
mov
inc
cmp
aas
dec
movsb
push
xchg
mov
or
sub
or
xchg
call
in
jle
iret
add
xchg
test
push
mov
nop
les
das
pop
dec
jge
pop
cltd
rolb
pop
adc
fdivr
mov
mov
int3
dec
lea
or
std
adc
mov
sub
jne
sti
xor
push
adc
or
js
push
out
lret
imul
out
fldl
jmp
pop
mov
cltd
xchg
mov
je
cmpl
je
lods
dec
xchg
xchg
imul
outsb
lea
mov
in
add
loopne
rcl
xor
rcr
cmp
mov
and
iret
xchg
xor
out
sahf
aaa
jb
mov
lods
adc
fs
ret
dec
cs
sbb
call
or
pushf
or
pop
loop
xchg
mov
jb
dec
fdivrl
ficoms
insl
adc
sbb
fs
jg
jne
movsb
gs
fsubr
aad
std
jb
jg
imul
ja
stos
pop
icebp
bound
pop
add
cmpsb
sbb
push
movsb
or
shrl
cs
add
mov
sub
cs
inc
sbb
mov
jns
adc
push
push
lock
neg
adc
ss
pop
fs
push
mov
sbb
cmc
lret
sub
sarb
mov
push
inc
or
ja
dec
data16
mov
stc
fdivrp
mov
aaa
push
call
mov
sbb
adc
dec
rcrb
das
cmc
sbb
xor
jecxz
jnp
push
pop
pop
movaps
movsb
stos
add
sub
lods
stos
inc
mov
cld
inc
adc
cmp
and
cmp
gs
cld
lods
pop
int3
pop
shrd
inc
jns
mov
cmpsb
into
das
insl
xchg
aad
loopne
push
aaa
call
imul
outsb
mov
push
sub
ret
adc
mov
dec
push
push
lcall
inc
into
loop
in
jo
movsb
or
rcrl
imul
pop
bnd
xchg
pop
cmp
scas
in
aaa
jmp
lahf
rcll
push
mov
leave
lock
mov
das
test
in
dec
ret
sbb
repz
jns
lea
outsb
xchg
repz
sub
cmp
mov
mov
bound
cltd
cmp
call
ljmp
in
sub
insb
stos
sahf
jb
call
test
pop
jle
xor
into
push
ja
xor
dec
call
repnz
adc
push
pop
divl
push
push
insl
test
inc
mov
jae
pop
cmp
pop
imul
xlat
push
dec
lds
push
repnz
or
gs
icebp
pop
push
pop
mov
dec
push
push
mov
test
and
mov
into
inc
mov
push
fisubl
pop
enter
stos
popf
pop
ds
lds
xor
or
ljmp
push
std
jge
ljmp
ljmp
adc
push
mov
cs
sti
jmp
aas
mov
out
dec
dec
or
imul
daa
data16
popa
das
pusha
mov
ret
mov
jo
pop
cld
cltd
push
pop
sbb
xchg
mov
sbb
cmp
pop
push
xor
mov
dec
std
cmp
jae
mov
and
jb
scas
jl
push
jg
push
mov
sub
dec
and
push
xchg
jne
mov
icebp
pop
adc
outsb
jle
pop
jno
cmp
xorb
fcmovbe
pop
push
jl
inc
pop
fisttpl
xchg
out
xor
lcall
sbb
cwtl
and
mov
mov
mov
xchg
dec
popa
rcr
gs
pusha
shlb
add
push
push
mov
sub
pop
ja
popa
ficoml
outsb
xchg
jae
cmpsl
lahf
add
sbb
lcall
scas
insl
lock
push
ficoml
or
hlt
jb
cmpb
mov
mov
xor
adc
dec
dec
popa
lods
mov
cmp
add
mov
scas
jo
mull
dec
push
lods
mov
mov
inc
mov
aas
xor
pop
mov
fimuls
cmpl
mov
cmp
push
inc
cs
push
dec
mov
sbb
inc
mov
stos
and
add
sti
popa
popa
jno
fs
or
pop
inc
add
aam
push
lret
xor
testb
lds
pop
popa
out
cmp
jp
lds
insl
fisubrs
mov
fimull
cmp
cld
sbb
pop
fisubrl
dec
cmp
inc
add
lds
xor
dec
and
push
popa
push
dec
mov
xor
incb
fnsave
and
popa
pusha
rcr
sbb
push
stos
cmpsb
fs
sub
mov
inc
sti
fistpl
pop
xchg
xchg
mov
mov
in
cs
ret
popa
pop
scas
scas
and
jae
adc
mov
mov
popf
push
fs
mov
testb
push
jle
adc
loop
out
test
mov
jae
pop
jle
jp
arpl
pop
repz
out
dec
push
inc
mov
rcrl
sub
inc
sti
ret
mov
pop
sbb
push
lret
insb
into
sarb
jbe
pop
outsl
mov
iret
push
pop
cmpsl
nop
lret
imul
xchg
int
jb,pn
sbbl
repnz
cmpsb
pop
shlb
js
pop
dec
or
shll
loop
mov
sub
or
cltd
sahf
xchg
in
mov
repnz
lea
aas
push
jno
ljmp
nopl
jp
ret
xchg
mov
xchg
push
jnp
imul
stos
jp
pop
mov
cltd
push
stos
lods
hlt
mov
and
push
ret
pop
add
out
jae
inc
mov
or
scas
xor
test
xchg
cs
in
and
mov
mov
push
lea
out
hlt
jb
test
insb
push
mov
dec
inc
or
mov
in
ljmp
add
ret
fwait
sbb
lahf
mov
lds
int3
mov
call
outsl
mov
xchg
or
ljmp
ficoms
mov
lea
cmp
enter
push
dec
pop
mov
mov
imul
lret
add
jg
fldenv
pop
jge
xchg
shl
stc
xchg
ja
mov
fwait
xor
xlat
repz
iret
inc
or
pop
scas
push
sbb
adc
cmc
popa
mulb
inc
out
insb
push
or
xchg
scas
shrl
lahf
imul
jne
cmp
and
mov
jns
inc
pop
mul
push
mov
mov
jno
push
std
xchg
out
loop
repz
stos
ja
xchg
jecxz
sarb
pop
jp
inc
push
pop
or
jb
arpl
imul
stos
rcll
outsl
sbb
lods
out
scas
and
fsubr
jp
addb
repnz
imul
pop
push
out
adc
inc
push
cmpsb
prefetchwt1
subb
xchg
popf
insb
mov
ret
mov
mov
cld
int
cli
pop
jg
jl
dec
adc
testb
adc
xchg
orl
jp
dec
jb
enter
scas
jb
data16
ljmp
jp
loope
jp
dec
ljmp
insb
pop
in
ret
push
fisubrs
mov
negl
mov
aam
mov
lods
movsb
dec
cmp
push
movsl
add
das
dec
sub
das
in
mov
mov
push
mov
jb
aam
rorb
ret
push
push
icebp
mov
jecxz
add
pop
pop
mov
add
cmp
mov
repnz
insb
lods
out
into
push
mov
adc
rolb
add
inc
ljmp
ja
popf
adc
adc
xchg
mov
ljmp
arpl
outsl
dec
stos
scas
mov
call
sub
stc
addr16
lock
xchg
je
jo
jp
mov
jb
ret
push
and
mov
dec
mov
dec
ljmp
jp
mov
insb
mov
loopne
mov
xor
mov
push
in
push
jb
inc
mov
daa
add
dec
in
das
jl
xor
adc
xchg
mov
in
out
cmp
push
cli
mov
add
mov
imulb
mov
rolb
test
pop
jl
divb
subl
xchg
cli
iret
jae
nop
adc
stos
sub
adc
out
les
outsb
jno
scas
push
sbb
push
aad
js
movsb
push
mov
push
aam
outsl
std
sub
mov
in
imul
stc
push
lods
inc
xchg
idivb
push
and
ljmp
outsb
xor
int3
add
nop
sub
sub
xchg
movl
mov
jp
hlt
jg
xchg
js
cmp
lret
dec
xor
jb
xor
xchg
adc
pop
repnz
je
and
repz
or
bound
cmpl
push
lock
sub
arpl
add
frstor
xchg
xchg
flds
adc
inc
fstpl
xchg
js
les
dec
jb
inc
push
pop
scas
mov
mov
cmpl
repz
push
jno
pop
out
std
dec
mov
xchg
xor
mov
or
jle
or
or
inc
icebp
mov
cld
iret
mov
fisubs
std
scas
out
mov
jns
stos
out
fwait
or
add
cltd
dec
dec
in
push
fsubrp
clc
mov
add
pushf
aam
jg
scas
insl
icebp
push
or
lds
dec
dec
push
inc
je
mov
stos
dec
inc
repnz
outsb
fsubr
jmp
neg
jp
xor
push
mov
jno
ret
xrelease
push
out
cmc
loope
imul
push
out
addr16
pop
mov
mov
xchg
mull
ljmp
jb
iret
xor
sahf
jl
push
fimuls
or
lahf
sub
repnz
jne
test
or
hlt
fidivrs
ret
push
push
xchg
add
dec
stos
adc
stos
lret
mov
cmp
pop
gs
mov
jle
push
or
push
sti
pop
stos
push
push
rolb
fildll
xchg
xchg
sbb
cs
mov
jg
fidivrs
wbinvd
lret
sbb
arpl
repz
mov
fiadds
jne
ljmp
aad
out
push
cwtl
xorb
scas
mov
dec
jp
adc
dec
repz
popa
dec
arpl
sub
push
icebp
fbstp
jcxz
jb
push
pop
push
xchg
mov
push
hlt
jae
add
push
enter
enter
imul
adc
call
push
inc
std
stos
scas
clc
dec
ficompl
sub
sbb
pop
mov
sub
adc
mov
bound
push
notb
cmp
js
ljmp
add
idivb
xor
pop
fsubl
arpl
jle
push
jns
sub
dec
ss
xchg
mov
cmp
sarb
sub
adc
lahf
jle
mov
shld
lahf
arpl
aaa
mov
sarl
sbb
sub
psubsb
testl
mov
in
add
cmp
test
jns
mov
xor
stc
insb
cmp
mov
jnp
ljmp
testb
xchg
clc
sbb
stos
ja
cmp
cmp
mov
dec
arpl
xchg
dec
fistps
clc
push
jno
cmp
xchg
inc
mov
or
stc
dec
mov
cmp
jb
jp
pop
jbe
dec
push
mov
push
movsl
aaa
xor
mov
sub
lahf
cmp
push
mov
ds
fs
les
dec
jns
in
ss
jp
jns
mov
cmp
jns
mov
mov
jp
imulb
push
in
ja
mov
std
xchg
or
notl
jne
js
in
aaa
mov
daa
dec
jno
inc
arpl
lret
mov
loopne
push
mov
or
jbe
mov
testb
push
mov
repz
repz
jb
js
mov
clc
lret
cmp
mov
lahf
mov
mov
fisubrl
cmp
jg
mov
int3
or
testb
jo
mov
ja
dec
inc
sahf
push
sahf
movsl
pusha
imull
cwtl
cmp
js
mov
mov
and
cmp
and
mov
data16
adc
and
xchg
push
jbe
mov
notb
clc
loopne
ljmp
mov
dec
mov
sub
cmpsl
js
mov
mov
xchg
push
mov
mov
mov
cmp
mov
inc
pop
nop
cmp
sbb
jle
inc
gs
jbe
arpl
mov
aaa
dec
std
int3
or
es
xor
leave
xor
mov
mov
hlt
pop
pop
scas
jns
cmp
jno
mov
mov
mov
scas
jns
scas
dec
in
mov
std
or
pop
dec
jle
push
mov
or
testl
mov
outsl
mov
mov
or
cmp
jae
in
dec
pop
lcall
imul
in
aaa
enter
adc
fnstenv
pop
fidivrs
add
dec
imul
repnz
mov
jns
mov
mov
je
dec
movsl
jae
jmp
or
test
jp
jbe
mov
arpl
idiv
clc
mov
sbb
mov
clc
in
xor
std
imul
mov
in
mov
cmp
cmp
pop
dec
cs
loopne
stc
push
pusha
call
jl
sub
mov
neg
xsha256
cmpsb
push
aad
mov
dec
clc
mov
pop
jns
das
pop
mov
push
pop
cli
js
mov
adc
adc
mov
mov
or
cmp
xor
cmp
add
lret
sub
pop
push
jbe
hlt
aad
fidivl
mov
divl
nop
js
cmp
fcoml
lret
or
sbb
inc
mov
jbe
mov
pushl
negb
mov
int3
mov
jno
xchg
pusha
sub
cmp
js
pop
mov
xor
add
aas
cmpsb
xchg
cmpb
push
inc
outsl
test
inc
pop
dec
bound
xor
jno
testb
add
ja
pop
cli
and
mul
arpl
mov
jb
inc
xchg
push
sub
clc
iret
mov
cmp
adc
sub
mov
cs
push
push
dec
pop
mov
and
arpl
cmp
ja
mov
adc
cmp
data16
inc
js
lcall
jns
add
or
repnz
outsb
jmp
insb
imulb
cmp
adc
es
imul
cmp
js
pop
imul
dec
repz
inc
in
ret
mov
outsb
lods
lods
arpl
arpl
mov
neg
std
and
ja
in
mov
not
cmp
int3
int
aad
bound
mov
mov
or
movsb
push
xor
movsl
gs
int
jne
cmpb
lods
pop
sbb
mov
mov
in
aaa
inc
ja
cmp
not
cmp
mov
aad
clc
add
mov
jb
stc
cmp
inc
mov
sbb
pop
push
bound
jmp
in
mov
mov
std
cmp
dec
pushf
xor
fidivrs
test
mov
mov
sbb
mov
jo
sub
stc
mov
dec
jl
jnp
or
mov
into
arpl
int
cmp
ja
wbinvd
adc
dec
mov
cmpsl
arpl
mov
mov
std
dec
push
cmp
and
dec
inc
fldl
jl
xor
sarl
mov
psadbw
lock
mov
insl
inc
fsubrs
fs
cmp
jg
dec
jns
in
lock
cmp
fisttpl
clc
dec
lret
mov
mov
dec
sbbb
into
dec
inc
add
aam
cmp
inc
sarb
pusha
mov
in
idivl
movsl
dec
sarl
mov
sub
inc
mov
inc
inc
mov
arpl
lods
aaa
cmp
int
sbb
ja
dec
imul
inc
and
push
cmp
pop
push
sti
mov
and
or
cmp
cmc
mov
outsb
mov
iret
sbb
cmp
pushf
test
imul
inc
cmp
mov
testb
xchg
pop
out
cmp
dec
cmp
sahf
fwait
mov
dec
push
mov
jns
dec
push
push
xchg
test
mov
cmp
lock
push
push
xchg
int3
pop
notb
or
imul
mov
std
pop
or
sbb
cmp
inc
push
in
or
repz
jns
std
push
mov
adc
inc
jb
jbe
mov
dec
inc
fadd
sub
testb
mov
into
daa
int
jnp
jne
cmc
aas
inc
clc
cmp
repz
lret
push
adcb
xor
jnp
push
xlat
stos
mov
cmp
cmp
call
jae
fcoms
rcll
ja
jb
or
arpl
xchg
cmp
in
cli
aaa
fsqrt
divb
inc
jns
jno
lret
negl
push
imul
jg
push
jae
dec
pop
pop
out
clc
leave
arpl
cmp
mov
jns
popa
push
push
xchg
pop
sub
stc
cld
mov
mov
mov
cmp
inc
pop
pop
rorl
pop
out
test
inc
dec
and
aaa
adc
ja
shr
stos
aad
mov
std
pushf
es
leave
js
roll
shll
xchg
xchg
movsb
sub
clc
pop
xor
mov
ljmp
imul
fisttps
cmp
push
fs
xchg
inc
pop
ret
dec
in
das
jbe
cmp
jns
pop
push
jo
popf
arpl
fs
aaa
lods
ja
std
push
int
pushf
dec
inc
bound
lret
push
sub
cmp
mov
xor
sbb
xchg
out
mov
adc
ja
int3
idiv
xlat
push
bound
jno
jbe
or
mov
xor
ss
hlt
ja
in
mov
in
adc
test
pop
push
in
cmp
mov
je
in
lods
mov
fimull
cmp
arpl
fs
mov
inc
cmp
stc
xchg
cmp
imull
cmp
mov
std
jecxz
mov
rol
mov
ja
pushf
ficomps
pushf
in
mov
ja
xchg
arpl
cmc
js
lods
clc
add
das
cmp
push
inc
pop
jno
cmp
iret
out
in
dec
ret
and
pop
xor
dec
cld
das
inc
aaa
xchg
dec
dec
stos
ja
arpl
dec
mov
push
divl
pop
shrl
jle
jecxz
sub
jb
stc
mov
and
outsb
in
inc
dec
cs
arpl
int3
aaa
pop
mov
ja
dec
push
negl
mov
mov
or
mov
test
xchg
fwait
stos
or
mov
cmc
ss
std
gs
in
outsb
jb
jge
add
mov
mov
pushf
add
aaa
mov
js
add
or
push
fnsave
mov
mov
sub
enter
arpl
xlat
in
mov
in
cmp
dec
lahf
jns
mov
stc
rcrb
dec
xchg
cmp
mov
jae
je
mov
inc
leave
mov
pop
pop
mov
mov
pushf
xor
fldenv
mov
mov
cmp
out
xor
sbb
pop
into
sub
inc
sahf
cli
loopne
push
pusha
xor
inc
inc
dec
andb
mov
xlat
in
sub
movsl
cli
test
cwtl
fnsave
xchg
fsubrs
mov
les
imul
jns
mov
fcomp
inc
sub
dec
or
mov
or
xchg
loopne
pop
mov
lret
ja
mov
dec
repz
adc
and
js
rorb
lret
cmp
jns
mov
jae
dec
jbe
dec
add
or
mov
adc
out
mov
cmp
mov
arpl
cmp
cli
pop
inc
imul
jbe
not
pop
cli
sub
ja
mov
mov
loope
fdivs
aam
mov
xor
mov
jns
mov
fnstenv
cmp
jbe
push
jbe
loope
shl
arpl
cmp
push
arpl
mov
pop
cli
xchg
lahf
inc
cli
xchg
pop
mov
je
clc
dec
cmp
fprem
cmp
int
loope
stos
mov
ret
punpckhbw
add
fidivl
mov
mov
test
xor
lret
mov
cmp
psubusw
popa
movsb
out
pushf
xchg
pop
sbb
repz
clc
shrb
push
xor
mov
cmc
stc
and
xchg
mov
push
inc
dec
sub
iret
into
scas
fwait
into
sub
dec
stc
aaa
dec
arpl
pusha
ja
iret
iret
sub
negl
ss
fisttpl
int3
adc
clc
rcll
xor
pushf
ficompl
mov
cmp
repz
xchg
dec
push
test
xchg
lret
inc
jno
mov
push
jg
jle
pop
adc
js
fldcw
pop
cmp
loope
dec
mov
fs
loop
mov
stc
inc
clc
inc
cmp
dec
inc
push
lcall
pop
jecxz
inc
popa
jbe
mov
gs
iret
loop
push
divl
dec
les
arpl
cmp
dec
sub
ret
pop
mov
add
lock
push
adc
pop
jo
iret
push
jno
xchg
adc
imul
jae
push
mov
jmp
lret
fists
cmpsb
xlat
push
dec
loop
clc
cmp
cli
in
jns
jle
jne
mov
sub
iret
std
fwait
cmp
in
jbe
mov
cmp
push
fidivrl
jae
jnp
xlat
jle
adc
test
cmp
std
movsb
mov
mov
and
int
mov
dec
mov
jl
stos
mov
mov
jle
push
js
js
clc
xchg
mov
dec
insl
aad
pop
cmp
dec
aaa
cmp
arpl
aad
cld
mov
add
push
jle
mov
ljmp
jo,pn
jbe
arpl
dec
data16
fdivrs
ja
mov
jmp
cmp
adc
rcrb
inc
push
mov
cltd
lcall
jne
cli
iret
cmp
ret
adc
jl
mov
jno
shl
lcall
mov
mov
decl
fdivrs
xorb
jg
and
xchg
jno
cmp
jo
aas
xor
cmp
inc
lahf
mov
xor
adc
movsb
fiadds
jb
inc
cmp
mov
movaps
in
jno
ja
clc
or
mov
push
idivl
repz
mov
hlt
sub
clc
inc
movaps
cmp
fs
mov
mov
popa
and
stc
cmp
in
jmp
push
cld
sbb
jbe
jge
xor
mov
xchg
xlat
stos
adc
sub
sahf
pop
js
ss
fildl
js,pn
pop
jmp
aad
sbb
sub
jns
push
jns
enter
into
pop
mov
jl
jp
jnp
pop
in
push
pop
or
push
xor
dec
pop
mov
push
mov
std
stos
pop
mov
dec
fmull
pop
xor
mov
pop
add
pop
inc
mov
frstor
fs
mov
inc
outsl
dec
mov
ja
mov
mov
add
out
xchg
rcrb
inc
xchg
dec
idiv
or
fs
and
aam
outsl
jno
mov
pop
idivb
jp
inc
push
pusha
sbb
je
and
notb
and
mov
fs
lods
mov
cmp
xchg
shrb
mov
fisubrl
adc
mov
lret
loop
xchg
inc
push
jp
mov
sub
imulb
ja
or
shll
cmp
cltd
push
cmp
xor
jp
clc
inc
cmp
pop
ljmp
mov
jae
jo
outsl
jbe
pop
xchg
mov
add
les
push
arpl
mov
xor
stos
cld
jo
rcl
gs
or
call
adc
cmp
jns
into
jl
cld
inc
fwait
es
stc
int
push
cs
insl
bound
iret
jno
xchg
mov
imul
addr16
cmc
mov
rclb
xchg
push
xor
in
add
frstor
mov
jns
clc
pusha
mov
stc
mov
fidivrl
push
pop
mov
gs
dec
negb
scas
sub
fucomp
jo
cld
aas
in
jl
mov
dec
jne
mov
jmp
dec
jg
mov
dec
jb
sbbl
inc
lcall
test
dec
fstpt
xchg
or
jae
dec
mov
mov
jnp
pop
pop
outsl
cmp
imul
mov
mov
mov
or
jns
xor
mov
idivb
imul
mov
jp
mov
idivb
bound
cs
jae
fs
lods
inc
imul
adc
pop
in
stos
xchg
mov
jmp
push
das
mov
dec
pop
inc
sbb
out
out
fidivrl
aaa
or
iret
cmp
repz
outsb
clc
cmp
cmp
add
shll
in
out
inc
mov
bound
xor
arpl
loopne
adc
xor
divb
cmp
mov
inc
jns
and
push
jns
mov
jl
gs
mov
mov
out
cmp
notb
les
gs
mov
lods
pusha
and
pop
jl
ds
in
dec
or
dec
cmp
arpl
push
jg
gs
mov
ljmp
outsb
dec
sub
movsb
inc
dec
sbb
sub
inc
xor
mov
ljmp
xorb
xlat
aam
iret
xor
jns
sbbb
clc
lods
pop
jno
jge
outsb
dec
jle
lods
jbe
pushf
pop
sahf
addr16
inc
mov
test
stos
or
mov
leave
subps
mov
sub
adc
bound
out
cmp
stos
stos
data16
mov
push
push
jb
jnp
cmp
jno
sysexit
push
js
pop
push
jae
jno
adc
dec
mov
fcompl
inc
loopne
shrb
ds
adc
or
cmp
arpl
addr16
dec
jbe
jg
cmc
or
adc
mov
ljmp
lcall
ja
dec
cmp
testl
dec
stos
js
arpl
push
mull
mov
sbb
mov
out
jns
mov
stc
leave
xor
mov
push
jge
stos
divb
push
add
out
push
sbb
addr16
sar
inc
divl
sbb
test
or
cmp
and
mov
jp
push
stos
add
jp
lcall
pop
repnz
xor
jnp
push
xlat
mov
mov
pushf
ss
pushf
loopne
ljmp
cld
inc
jecxz
clc
dec
or
cmp
mov
cmp
jns
dec
out
mov
and
mov
jge
jns
xor
mov
mov
aaa
pop
inc
test
cli
ja
pop
test
and
mov
pop
xor
cld
std
sbb
repnz
mov
stos
dec
testb
mov
aaa
inc
adc
sbb
hlt
push
pop
adc
lods
js
mov
aas
js
jns
mov
dec
cmp
jne
jle
dec
inc
pop
jbe,pn
arpl
data16
in
imulb
mov
lret
add
in
into
dec
jae
xor
arpl
jp
jns
mov
fnsave
jecxz
dec
decb
in
mov
dec
cmp
not
psrad
ja
cli
stos
loopne
jmp
cmp
in
jb
inc
cmp
pushf
jnp
cs
fwait
lods
pop
or
jno
into
push
cli
jae
jns
jle
ds
push
xchg
into
push
dec
jle
insb
js
jno
pop
mov
div
pushf
adc
cld
and
imull
ror
xlat
sbbl
je
push
ljmp
js
dec
push
call
arpl
in
adc
mov
sub
fs
pushf
fwait
int
in
cmp
testb
jae
mov
dec
dec
inc
aaa
or
ja
jns
loop,pn
ds
test
scas
ja
ljmp
rolb
fucomp
sarb
in
push
fs
js,pn
push
sti
jno
adc
cmp
xor
jnp
into
hlt
int
ljmp
jne
inc
push
jg
jbe
lret
or
ja
mov
mov
pushf
cmpsl
pop
or
aad
cmp
pushf
dec
sahf
and
mov
mov
jnp
push
idiv
pop
inc
aaa
lahf
arpl
lods
aam
lcall
dec
into
xor
jp
repnz
push
cli
push
stc
pop
leave
std
out
and
jle
scas
pop
or
mov
ss
xchg
insb
jbe
mov
adc
push
mov
mov
mov
pushf
jle
aam
pop
mov
mov
mov
xor
or
push
movsb
out
outsb
scas
jbe
divl
adc
push
hlt
push
lea
mov
popa
jno
adc
mov
insl
xchg
xchg
imul
push
pusha
xor
or
repz
std
dec
dec
sbb
mov
sub
mov
inc
inc
add
repnz
imul
icebp
fistl
pop
xor
mov
out
imul
cmp
mov
fistpll
jnp
out
data16
adc
int3
jno
push
xchg
ja
mov
ret
dec
pop
jg
lds
into
ficompl
cmp
inc
sub
add
aam
pop
pop
jle
jns
icebp
cmp
mov
adc
je
cli
mov
or
testb
iret
mov
outsl
cli
cmc
mov
hlt
pop
jl
push
arpl
push
inc
sub
cmp
js
dec
cmpb
gs
test
ljmp
jle
jb
push
xor
xor
pop
in
pop
dec
mov
push
xlat
fdivrl
inc
ds
out
loop
xor
rcrb
leave
xchg
pop
jno
adc
jno
into
rclb
adc
je
or
mov
dec
jle
sbb
xlat
bound
stc
dec
fiadds
out
mov
scas
inc
inc
loop
lahf
movb
dec
add
insl
cli
aaa
pop
pusha
rol
sub
enter
push
dec
lret
std
or
fs
mov
loope
ret
ret
out
mov
sbb
mov
push
push
inc
adc
xorb
ljmp
jle
push
cld
clc
in
jmp
inc
push
shr
jne
mov
ja,pt
lods
dec
cld
arpl
fs
gs
sub
mov
lcall
daa
fs
sbb
fisttpl
jecxz
jno
jbe
into
adcl
stc
sub
ja
xor
cld
bound
iret
jmp
je
out
cmp
add
pop
pop
ret
inc
pop
stc
add
fcoml
mov
mov
imul
into
inc
and
xchg
jno
jns
iret
xchg
pop
jnp
aad
xchg
shl
insb
inc
xorb
mov
scas
mov
loopne
mov
imul
in
shl
cld
stc
lods
jmp
mov
js
hlt
in
push
jmp
ss
push
adc
mov
jle
ret
shll
cmp
cltd
pushf
dec
inc
inc
xchg
push
dec
jne
in
idiv
cmp
push
ja
cmp
mov
into
sbb
notl
push
jno
xchg
nop
mov
rcrl
ret
sbb
movsb
sbb
punpckhbw
xchg
inc
in
jno
stc
rcrb
mov
imul
orl
out
cmp
rorb
ret
jo
dec
adc
into
mov
cmp
cmp
push
jae
xor
inc
inc
or
mov
inc
arpl
bound
dec
mov
bnd
inc
xchg
jmp
dec
push
popa
inc
ljmp
testl
outsl
mov
out
addr16
hlt
dec
arpl
das
sbb
push
insl
jns
sar
xorb
cld
mov
push
repz
lcall
std
push
mov
ljmp
jno
push
cmp
mov
cmpl
cmp
xchg
sub
jl
pop
jbe
fmuls
das
imul
out
idivb
out
mov
sub
push
mov
pop
sub
xor
sbb
mov
out
lcall
out
push
js
adcb
popa
or
lods
mov
clc
ljmp
stc
cmc
stc
movb
sbb
or
dec
notb
jae
push
pop
std
arpl
stos
in
aaa
ja,pn
rcrl
stos
push
idivl
pushf
push
pop
test
jl
leave
sbb
mov
dec
lret
fimuls
inc
js
arpl
iret
xlat
imulb
insl
clc
sub
ja
dec
cmc
mov
arpl
mov
cmp
xchg
into
scas
clc
cmp
pop
je
jno
mov
inc
popa
mov
out
insl
cmp
pusha
das
jg
sbb
imul
outsl
and
xor
or
scas
divl
js
into
mov
addr16
shlb
xchg
dec
mov
dec
mov
push
in
ds
or
adc
mov
inc
out
or
fs
jno
sbb
into
data16
stos
std
lock
pop
sub
rol
test
and
test
shlb
xchg
shrl
inc
inc
sub
pusha
aam
inc
inc
jb
iret
mov
out
sti
pop
jno
jbe
dec
pop
mov
out
mov
lds
sub
mov
fs
xchg
jbe
xor
dec
xor
jnp
pop
push
or
sbb
jns
arpl
sbb
add
inc
push
mov
into
inc
push
inc
popa
xchg
fdivs
addr16
aaa
repz
inc
ljmp
out
aam
ds
mov
pop
cmp
pop
adc
mov
inc
lock
repz
dec
mov
jmp
pop
mov
push
pop
dec
arpl
into
sarl
test
mov
in
jb
cmp
imul
dec
dec
sub
in
jg
inc
les
lret
jl
push
idiv
sub
pusha
fxch
inc
jle
cld
cmp
cltd
pop
fs
push
jns
into
dec
clc
imul
dec
out
jge
or
dec
jl
mov
sub
mov
push
push
inc
mulb
out
xor
cmpl
sub
ljmp
mov
movb
fidivl
rcr
dec
fwait
pop
mov
jp
jbe
arpl
xlat
divb
or
idivb
cld
cmc
sub
mov
jne
outsl
lcall
adc
dec
imul
sub
nop
push
dec
jns
stc
pop
roll
outsb
idivb
push
loope
cmc
ja
je
dec
not
cmp
js
dec
ret
mov
mov
call
cmpb
mov
pop
out
mov
inc
push
faddl
shlb
punpckhbw
push
jp
addr16
jle
push
pop
xor
repz
mov
sti
mov
lahf
push
lods
inc
outsb
pop
dec
push
lock
out
inc
cmp
inc
dec
jl
mov
scas
divb
dec
and
js
mov
daa
xchg
mov
push
imul
jno
fimuls
and
mov
call
test
jno
cmp
insb
jle
mov
aas
mov
jl
mov
fidivrl
and
mov
clc
sub
idiv
pextrw
push
sub
js
clc
xor
mov
ds
lret
mov
xor
ds
lret
jmp
das
push
data16
jae
cmpsl
mov
imulb
ja
ljmp
mov
lods
sbb
push
inc
pop
mov
sub
push
or
cmp
out
inc
cld
das
jb
fidivl
arpl
testl
jp
repz
test
sub
mull
dec
pushf
cmp
das
into
mov
mov
jne
dec
loope
mov
jp
sbbb
jb
ds
or
sbb
stos
mov
push
rcr
sub
push
test
adc
push
mov
push
pusha
xchg
cmp
mov
shrd
rol
bts
xchg
mov
rcl
cmc
mov
rcl
rcr
mov
and
not
xor
lea
xchg
seta
lods
not
neg
not
pusha
call
ror
jmp
movl
pusha
call
and
adc
add
mov
push
inc
xlat
scas
adc
mov
sar
adc
pop
test
cltd
stos
mov
or
add
int3
cmp
jne
iret
mov
outsb
and
je
pushf
andb
xchg
sbb
mov
push
movsb
bnd
adc
mov
pusha
pop
xchg
cmc
clc
test
shr
jmp
mov
lea
je
push
xadd
rcr
sbb
mov
and
cmp
add
add
ror
mov
mov
test
pusha
pushf
call
add
sbb
btr
movl
pop
neg
mov
jmp
lea
jae
pushf
jmp
lea
jae
bt
jmp
cmc
stc
mov
stc
cmc
stc
pusha
cmpb
jmp
xlat
jge
fstps
imulb
or
fistps
into
stc
aad
repnz
shrl
adc
push
xor
js
out
cmp
and
mov
jle
push
movsb
pop
and
inc
push
push
mov
insl
je
mov
ja
mov
and
fsubrs
shlb
sub
jbe
fistpl
sbb
or
sbb
or
in
lock
shlb
sub
insb
pop
ret
cld
shrl
cli
xor
decl
test
add
aas
movzbw
sub
bsr
btr
btr
mov
cmp
shr
cmp
neg
add
shl
and
mov
call
push
lea
call
push
jmp
lea
jne
lea
movb
lea
lea
lea
pushf
mov
setle
mov
bswap
lea
pusha
pusha
pushf
jmp
add
rol
sar
neg
mov
cmp
pusha
bt
test
call
pushf
and
pop
mov
pusha
jmp
pushf
lea
jbe
pushf
inc
call
add
push
adc
mov
adc
push
adc
les
add
or
jb
pop
mov
push
adc
popw
ret
jns
adc
inc
jno
imul
jmp
pop
xchg
mov
dec
out
ret
mov
cmp
sbb
test
je
sahf
sbb
xor
out
inc
pusha
repnz
ljmp
js
pushl
mov
insb
adc
repnz
stc
nop
in
out
push
push
pop
jne
xlat
pop
mov
and
and
ret
xlat
jae
in
xlat
ficoml
or
cli
rorl
jmp
jp
out
int3
mov
cmc
push
movsl
jp
xor
mov
lods
fistl
aaa
scas
test
adc
flds
pushf
outsl
push
dec
mov
xor
shl
fldl
cwtl
jno
mov
xchg
fdivl
lcall
jno
inc
popa
test
xor
std
sbb
fisttpll
nop
dec
in
aad
xor
fs
jmp
jg
not
pop
mov
push
dec
push
jb
sub
dec
xchg
jae
imull
imul
mov
loopne
in
popa
cmp
pop
adc
pop
sbb
push
into
inc
pop
test
pop
push
rclb
inc
fsubs
or
cmp
in
and
xor
dec
mov
mov
fdiv
stos
leave
loopne
dec
mov
sbb
push
adc
mov
int3
jbe
fcmovne
pusha
int
jbe
xor
icebp
out
or
dec
sub
fldz
popf
pop
dec
jg
adc
jae
aas
inc
jmp
jmp
test
mov
mov
xchg
lods
jb
hlt
cmp
xchg
addl
push
or
stos
jmp
push
jae
pop
jno
aaa
dec
stos
testl
aaa
jmp
hlt
mov
mov
jg
push
jle
and
or
int3
je
lret
cmp
lods
lea
push
jno
jo
aam
bound
test
ss
xor
fs
jae
push
xor
pusha
lea
call
pusha
lea
jae
pushf
cmc
xor
call
fwait
ss
std
scas
sbb
vcvtsd2ss
scas
lock
pop
in
shlb
dec
adc
jmp
jns
inc
jmp
mov
in
in
xchg
xchg
fcomip
cmp
loope
lock
hlt
insb
aaa
mov
mov
jl
cmp
pop
lds
pop
and
fildl
jecxz
mov
dec
jo
mov
mov
mov
pop
mov
xor
std
sbb
jno
inc
jnp
rclb
pop
push
movl
xor
xchg
dec
fwait
mov
lret
cmp
jo
inc
addr16
std
dec
xor
imul
nop
pusha
test
pop
push
stc
mov
or
pop
push
mov
movsl
adc
daa
sarb
mov
subl
ret
dec
sarb
xchg
pop
mov
test
dec
adc
push
call
mov
incl
jmp
dec
bt
stc
rol
test
movl
push
call
jmp
lea
je
cmp
add
bswap
ror
sub
rcl
mov
btr
shr
pusha
mov
shld
cmc
add
shrd
btc
shr
add
sub
or
stc
bswap
stc
mov
call
movb
cmp
pusha
lea
ja
bt
pushf
adc
cmp
sub
rcr
dec
xor
mov
sub
add
lea
rol
sar
mov
test
or
rcl
mov
push
repnz
push
pushf
lea
jne
lea
movb
mov
pushf
lea
mov
not
lea
jmp
pushl
popl
jmp
cmpb
pusha
lea
jne
and
sar
movzbl
shl
mov
cmc
test
add
clc
cmc
movzwl
adc
shld
mov
jmp
call
pusha
lea
jae
cmc
cmp
jmp
setbe
jmp
clc
add
pushf
cmp
mov
cmc
cmp
lea
pushf
jmp
or
rcrl
or
xlat
aad
mov
adc
lret
gs
adc
test
mov
scas
dec
testl
sbb
xor
cwtl
test
outsl
mov
add
sub
aad
stc
shll
fs
stc
call
clc
test
xor
and
btr
mov
setae
rcr
pushf
jmp
dec
push
adc
in
mov
mov
outsb
sbb
sbb
push
push
stos
sub
lret
and
mov
adc
pusha
fmul
sahf
aam
add
push
add
movsl
adcl
pop
mov
xor
lcall
cmp
sar
add
stos
jmp
sub
repnz
test
or
or
loop
sub
pop
mov
adc
scas
pusha
je
add
or
xor
stos
hlt
call
jmp
cmp
mov
outsl
imull
inc
lret
push
jecxz,pt
or
xchg
mov
or
cmp
inc
pop
xor
jns
cmp
cmp
mov
mov
dec
inc
rcrb
hlt
stos
or
jp
popa
cli
jl
repz
test
and
popf
and
mov
xchg
inc
lret
and
mov
loopne
adc
jb
rcl
inc
repz
fldcw
cmp
rcrb
mov
pop
or
or
mov
and
push
les
pop
stos
jnp
sbb
add
rol
pop
ds
aas
pop
lcall
movl
lahf
pusha
lea
mov
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lea
je
pusha
jmp
dec
xor
bsr
mov
push
jmp
pushf
pushf
lea
je
call
add
pop
pop
jbe
popa
push
outsl
ja
jb
cmp
mov
pop
enter
push
dec
pop
lahf
enter
push
mov
lahf
enter
push
push
add
enter
push
cmc
pop
sub
pop
mov
insl
pop
mov
lock
adcb
data16
je
jmp
shr
aaa
cmpsb
xchg
lock
leave
in
test
shll
or
adc
shlb
and
mov
inc
pop
cltd
cmp
cli
js
mov
mov
pop
inc
push
push
jl
je
ficomps
out
lret
aas
cmp
fiaddl
addl
pop
mov
xchg
in
loope
sub
clc
jp
and
sub
xorb
add
fidivl
pushf
add
push
mov
pop
mov
sub
ljmp
not
out
dec
scas
mov
cmp
fistps
fidivl
shl
mov
inc
imul
lods
mov
push
pause
in
cltd
push
pop
cmpsb
cmp
add
mov
push
test
and
push
test
dec
inc
pop
add
cmp
cmp
lea
jle
pusha
mov
lea
je
push
pusha
pushf
cmp
push
push
lea
je
pushf
pushf
pusha
cmp
pushf
pushf
pushf
lea
je
pushf
lea
jmp
push
xchg
test
and
dec
hlt
sbb
pop
cmc
mov
dec
in
and
push
adc
cmpsb
mov
imul
into
inc
push
inc
leave
xlat
mov
xor
call
pop
fldl
jno
sub
inc
lock
mov
addl
cmova
add
aaa
fucomip
cmp
pop
inc
loop
pop
xor
sbb
cld
jg
call
fcoms
push
and
sub
sbb
idivb
jmp
repz
mov
lahf
iret
int
test
jecxz
dec
insb
xchg
fstl
mov
cmpxchg
mov
pushf
hlt
bound
lea
dec
outsb
sub
js
mov
repz
jge
cmc
mov
adc
pop
mov
xor
hlt
sbb
jmp
cmovne
std
in
mov
mov
jl
daa
push
sbb
stos
xor
and
lcall
mov
testb
js
push
mov
rolb
push
jp
std
out
out
sub
clc
jb
loop
lock
xchg
xchg
cmpsl
dec
into
pop
mov
shll
jg
test
in
mov
mov
stc
stc
cmc
jl
fs
jmp
lret
test
mov
adc
adc
adc
mov
cltd
sub
movsb
mov
sbb
nop
mov
insl
jecxz
cli
sub
jns
aam
pop
imul
clc
add
lcall
push
mov
cld
jecxz
pop
subb
xor
cwtl
sbb
imul
gs
lea
pop
lret
pop
aam
mov
mov
cmp
xor
call
ret
int
mov
push
cld
int
jle
cli
cwtl
lods
adc
or
clc
xor
testb
jmp
cmp
pop
nop
adc
iret
push
in
inc
shr
pop
jbe
sub
cltd
or
mov
mov
in
nop
jecxz
or
add
adc
popa
push
cmp
loop
loopne
add
mov
stos
jecxz
jnp
sbb
scas
insb
setbe
dec
dec
inc
lea
dec
setns
inc
mov
rcl
sbb
or
xchg
shl
mov
cmc
mov
cmp
cmp
pusha
xchg
sbb
btr
bsf
mov
stc
clc
test
sub
call
mov
pushf
call
or
mov
dec
insl
xchg
daa
cmp
add
adc
call
rolb
inc
rclb
adc
mov
ljmp
out
lea
and
test
int3
pop
mov
add
std
and
mov
cmp
mov
and
xchg
inc
cmp
pop
mov
pushw
dec
jmp
fmuls
pop
mov
lods
pop
stos
pop
push
in
inc
lret
rcr
xchg
loope
cltd
jge
andl
pop
stos
into
movsb
pop
mov
fbstp
and
xchg
mov
and
pop
lret
out
inc
push
loope
jno
fmul
outsb
pop
xchg
cli
ret
mov
repnz
or
jg
pusha
call
pushf
pushf
lea
ja
xor
sub
shr
ror
add
pushf
pusha
xor
mov
setl
mov
cmp
clc
repnz
jmp
sbb
inc
int3
pop
mov
loop
xor
xchg
or
mov
std
cmp
xchg
rolb
push
lcall
movl
cwtl
cmpsb
pusha
sub
mov
sub
inc
enter
push
test
outsb
rcll
mov
fcoms
sub
adc
inc
rorl
hlt
add
pushf
pusha
mov
pushl
ret
pusha
lea
jae
test
cmp
test
call
lcall
or
iret
adc
icebp
or
or
fnstenv
mov
push
rorl
cmp
fwait
or
fstpl
pushf
xchg
rcrl
stos
popa
rcll
dec
aaa
mov
pop
xchg
test
neg
stos
cmp
push
cld
add
cmpb
sarl
push
and
mov
xchg
adc
rcrb
es
inc
cmpsb
mov
sub
loope
sahf
aam
das
fsts
sar
test
mov
mov
adc
pop
mov
mov
cmp
imul
mov
ljmp
cltd
pop
dec
sub
mov
cld
cmpsl
aam
dec
jmp
jmp
pushf
mov
ds
cmp
push
or
insb
test
xor
out
test
xchg
mov
push
add
jl
loope
scas
movsb
push
sarl
mulb
repz
fsubrs
test
xor
inc
lcall
fs
jne
rol
shld
aam
dec
sub
shrd
rcl
movzbw
cmc
mov
sar
rcl
add
test
cmp
xor
mov
call
js
sti
push
push
mov
inc
cmp
out
jmp
stos
js
xor
insb
stos
ret
addb
imul
and
insb
scas
mov
movsb
insl
adc
mov
pop
stos
fistps
mov
inc
jle
sub
dec
or
xor
call
outsl
xor
ds
inc
dec
clc
movsl
and
stos
push
mov
mov
daa
cmp
sub
cli
adc
test
or
ljmp
sbb
mov
imul
adc
ja
leave
add
scas
stos
pop
decb
jne
repnz
xor
lgs
mov
mov
jge
sub
mov
fldenv
test
mov
daa
pushl
fbstp
xor
loopne
movsl
add
xor
sti
test
stos
cmp
stc
sti
jb
stos
push
xor
lret
sahf
test
lods
xor
push
xchg
cmc
outsl
test
pop
scas
mov
loopne
hlt
cmp
insl
mov
inc
sub
and
xor
arpl
mov
aaa
cs
pop
ja
clc
push
pop
mov
int
iret
out
adc
and
or
lret
dec
outsl
fcomp
hlt
mov
adc
loopne
xchg
fsubrl
je
xchg
das
iret
mov
stos
jb
dec
mov
cmp
or
mov
sub
xchg
pusha
xor
lea
pop
dec
sub
jno
mov
leave
test
jmp
pop
or
dec
into
dec
sub
leave
pushl
int
iret
adc
adc
mov
dec
push
fldl2e
addr16
mov
lret
int
iret
rclb
mov
xchg
push
xchg
into
and
or
xchg
pop
push
adc
test
int
adc
push
imul
xchg
cs
rorb
xchg
or
mov
pop
dec
nop
push
rcll
push
ret
lds
dec
rcll
adc
jno
les
enter
push
bound
cmovnp
push
inc
addl
pop
aam
or
les
adc
bound
add
dec
push
xchg
push
call
inc
add
add
inc
push
jno
push
xor
cmpl
push
pop
xlat
xchg
dec
or
inc
sub
ret
push
and
arpl
ljmp
mov
adc
and
and
ret
cmp
xchg
sub
xchg
adc
add
push
push
fcoms
jg,pn
push
int3
xor
or
mov
iret
push
xchg
jns
lock
mov
stc
xlat
push
pop
dec
adc
add
push
adc
or
add
inc
or
iret
jle
push
call
mov
lret
arpl
gs
pop
pop
aad
inc
pop
lock
dec
adc
add
ja
jno
push
fcoms
out
lret
cld
add
nop
xchg
lods
cwtl
lcall
push
lea
adc
push
mov
sbb
cwtl
push
int3
adc
sbb
mov
xchg
xchg
wbinvd
inc
orl
adc
sbb
enter
mov
xlat
cltd
std
stos
mov
sar
icebp
xlat
jbe
pop
aad
in
lret
jnp
push
push
and
out
lcall
mov
fcoms
push
dec
xchg
adc
sbb
ljmp
push
push
dec
test
cmp
sbb
aam
into
mov
cld
orl
xchg
cwtl
or
push
push
or
cmp
int
test
shll
ret
jp
push
movl
push
cs
add
orl
xor
inc
sub
std
inc
mov
testl
into
aam
jbe
inc
xchg
push
push
mov
sbb
int
inc
std
push
orb
xlat
pop
cltd
jmp
mov
ret
jg
call
lcall
mov
in
in
popa
cmp
xchg
lea
les
cld
in
push
cwtl
fsts
push
or
mov
shl
pop
xchg
fs
mov
push
lcall
sti
add
push
sbb
fwait
pop
in
inc
cmp
dec
adc
test
inc
ds
cld
lret
lcall
add
sbb
sbb
rclb
lret
push
aad
pushf
call
sar
movsl
addr16
sbb
sbb
inc
inc
cmp
pmullw
cltd
shl
mov
leave
and
dec
stos
loope
andl
outsl
mov
and
out
inc
mov
xchg
sbb
jno
add
dec
test
dec
enter
cmpl
ror
push
inc
mov
dec
push
pop
sbb
jp
cmpb
and
mov
test
add
jb
sbb
cld
inc
mov
lock
lret
int3
mov
cmp
push
fstps
xchg
adc
and
adc
outsl
sub
pop
fcmovu
push
mov
push
dec
rcl
sbb
xlat
jns
or
ret
push
fstpt
push
les
movb
mov
popa
jae
adc
das
pop
sub
std
add
fcom
sub
sbb
inc
inc
cmp
in
orl
test
call
push
cwtl
sbb
adc
stos
ret
orb
mov
imul
inc
mov
sub
pop
testl
or
rcll
pop
fs
add
push
sbb
push
addb
call
incb
call
or
cmpsb
rorl
inc
pusha
xorl
push
pop
mov
push
or
out
xchg
pusha
pop
push
adc
ret
or
dec
int3
xchg
jge
leave
adc
in
or
inc
mov
imul
xor
or
add
push
leave
push
push
push
push
aam
adc
xchg
pop
adc
sub
or
inc
or
jmp
inc
mov
cmc
pop
popa
xor
xor
jo
jno
mov
or
ljmp
dec
adc
sbb
sub
cltd
cmp
or
or
dec
dec
or
mov
xchg
stc
sbb
or
imul
leave
movsb
sub
push
cmp
dec
mov
mov
inc
aas
lret
in
and
std
ljmp
cmp
ljmp
jecxz
lods
int3
jno
mov
mov
in
int
int3
adcl
xor
push
js
hlt
ret
mov
or
mov
int3
cs
outsb
sbb
mov
lods
cli
idiv
scas
lock
adc
cli
mov
testl
mov
jnp
xor
and
or
mov
inc
push
xor
mov
aas
test
jmp
lock
dec
push
test
mov
add
pop
hlt
daa
cwtl
movsl
sub
in
mov
cmc
test
or
push
fcompl
sbb
xor
sub
shr
out
sub
outsl
ljmp
shrb
push
jmp
mov
xchg
cmp
jl
fdivrp
popf
mov
xor
mov
jbe
mov
cvtps2pd
arpl
outsb
cmp
fmull
or
sarb
or
adc
pop
fists
inc
cmp
rcrl
rcll
xchg
mov
cld
xchg
cmp
dec
or
ret
or
xchg
jp
vaddps
mov
lret
sub
mov
dec
cs
dec
cmp
or
mov
mov
into
jns
cmp
or
push
adc
dec
cmpb
or
or
in
cli
dec
xchg
push
jp
iret
cmovge
movl
dec
push
rclb
mov
push
xchg
loope
pop
xchg
aam
rcll
iret
in
lea
mov
xchg
adc
lret
push
test
mov
adc
ror
cmp
repnz
adc
sbb
push
ror
push
xchg
dec
push
push
pop
pop
sbb
push
xchg
dec
push
inc
rol
lret
xchg
sbb
mov
add
add
enter
push
cwtl
aad
rorl
shrb
add
lret
push
lcall
xchg
push
addl
push
fistpl
xchg
xchg
dec
add
cld
push
rol
dec
xchg
pop
sbb
aam
xchg
addb
pop
sahf
jb
fldcw
rorl
push
inc
xchg
fwait
sbb
int3
inc
mov
rol
ret
fstpl
mov
add
fwait
fs
push
or
shrl
int3
push
sahf
pusha
pop
push
dec
ret
cmp
cli
jle
push
or
pop
push
push
inc
ds
inc
pop
cltd
mov
xchg
push
cmp
mov
mov
fbld
sbb
dec
ret
js
ds
jmp
leave
adc
mov
push
push
cmp
add
nop
xor
enter
cmp
add
loopne
push
adc
push
cmp
pop
popa
jmp
sbb
pop
into
arpl
stc
mov
pushf
loope
push
sbb
shll
jge
jg
or
add
push
lcall
insb
mov
and
fistl
leave
ret
push
jo,pt
dec
xchg
arpl
fsubrl
fistpl
test
sub
rol
pop
push
fistpl
push
dec
aas
jns
push
std
mov
and
sbb
aad
sar
push
cmp
sahf
mov
xlat
popl
mov
and
pop
mov
jge
test
into
jb
mov
push
mov
mov
outsl
lahf
bound
stos
xlat
je
lret
xchg
popf
and
ret
std
mov
in
into
sbb
xchg
mov
jge
ret
and
pop
pushf
fwait
xlat
dec
inc
jnp
stos
push
mov
loope
inc
sbb
clc
jae
jnp
stos
lds
pop
popa
and
jle
dec
add
stos
add
push
fbld
bts
int
cmp
aas
add
popf
ljmp
jb
addb
ret
arpl
dec
inc
cmp
add
ret
jb
push
jl
or
jl
or
push
popf
popa
fistps
push
cmp
jle
inc
nop
lcall
ljmp
add
popa
ficomps
xchg
int3
add
mov
dec
push
pop
mov
jle
loop
pop
and
rsqrtps
push
cld
add
pop
push
sbb
dec
test
mov
push
and
ficomps
adc
inc
mov
int
push
sbb
mov
inc
add
rcr
cmp
push
pop
xchg
cmp
stos
adc
mov
ja
cmp
mov
push
pop
je
pop
packssdw
ret
sti
mov
dec
jbe
pushf
add
ds
push
pop
push
or
jle
xor
jl
pop
pop
push
mov
test
mov
xchg
jle
mov
adc
aas
out
jnp
bound
dec
jge
mov
sahf
pop
dec
jl
jp
push
ret
mov
inc
push
clc
js
jg
xchg
push
ficompl
mov
aad
push
add
nop
dec
lea
or
shrl
in
or
inc
imul
sub
mov
ror
inc
mov
add
push
push
sbbl
pop
push
and
mov
pop
das
inc
push
push
xchg
dec
jg
jae
cmp
xchg
sahf
and
fcmovnu
ret
jns
cld
inc
test
push
inc
pop
mov
sbb
mov
call
dec
xlat
pop
loopne
dec
mov
jne
jp
push
mov
sbb
lahf
dec
inc
out
xchg
dec
outsl
scas
and
fsubs
push
ljmp
in
fsubrs
mov
into
push
ds
mov
dec
nop
jmp
push
lret
shl
push
inc
dec
aam
inc
and
xchg
dec
test
stc
cmp
add
shlb
and
push
pop
adc
sar
mov
lea
lcall
jns
outsl
add
mov
pop
push
xchg
adc
inc
jnp
inc
jl
or
pushf
jne
pop
push
push
or
jl
shrb
xchg
fcomps
push
cmp
jg
into
aam
fwait
pop
push
ror
inc
mov
cli
fldt
gs
test
adc
data16
mov
dec
push
aam
sub
sbb
xchg
insl
cli
jge
cli
push
inc
push
rcrl
lahf
ficomps
fstpt
ds
inc
push
cwtl
adc
mov
mov
xchg
push
push
mov
inc
jbe
sti
and
iret
push
imul
nop
dec
les
add
push
xlat
sbb
rorb
push
mov
pushf
pop
adc
mov
in
ret
dec
int3
dec
cmp
pop
push
adc
mov
leave
push
pop
mov
dec
inc
cmp
or
pop
fistpl
into
mov
cmp
in
mov
sbb
pop
push
nop
dec
xchg
add
dec
mov
aad
inc
xchg
les
pop
addl
pop
ficompl
das
add
xor
cli
pop
push
sbb
push
fistl
push
lods
or
dec
dec
fwait
sbbl
push
lea
inc
aas
inc
shr
lret
push
fnstcw
push
inc
addb
mov
xchg
xlat
sbb
xchg
xchg
push
stos
dec
inc
addb
inc
xchg
adc
xlat
pop
push
adc
int3
enter
inc
dec
test
mov
push
push
adc
es
jbe
dec
rcl
aad
icebp
adc
bnd
mov
xchg
push
mov
xchg
xchg
call
rorl
add
pop
or
int3
iret
cmp
xchg
or
dec
mov
dec
or
cmp
xchg
js
dec
rorl
xor
pop
test
dec
lret
xchg
imul
mov
jp
leave
or
adc
adc
push
sub
or
or
adcl
cmovge
dec
dec
mov
dec
push
or
inc
push
gs
das
mov
out
jnp
out
xor
dec
in
aaa
push
int3
jp
mov
dec
sub
dec
js
addr16
mov
insb
xlat
scas
adc
pop
cmp
mov
inc
mov
dec
cmpsb
xor
lea
or
ljmp
xlat
imul
mov
lods
xchg
xor
pop
xchg
adc
xchg
or
pop
iret
pusha
fmuls
scas
lret
add
pop
cmp
push
push
iret
dec
cmpsb
cld
cli
shll
inc
mov
mov
outsb
ja
cmp
mov
xchg
and
sti
mov
xor
mov
dec
mov
mov
jb
mull
xor
mov
add
and
in
xchg
xchg
adc
loope,pt
xchg
fcompl
inc
fildll
xchg
stos
stc
pop
ljmp
mov
outsl
mov
cwtl
jmp
jae
ja
lods
sbb
je
pop
push
lods
in
aaa
mov
sbb
testl
sahf
loopne
fcompl
cs
out
and
ja
call
fldt
push
mov
xchg
aam
push
lahf
cltd
inc
scas
imulb
test
cs
ljmp
aaa
imul
rcrb
sub
aaa
jmp
push
or
call
push
mov
jmp
pop
aad
dec
sbb
and
add
daa
scas
pusha
addr16
xor
mov
dec
imull
add
cmpsb
xchg
and
sahf
fwait
je
fbstp
mov
adc
inc
push
in
ficompl
sub
pop
test
and
cs
dec
frstor
aad
jg,pn
adc
cmp
icebp
push
mov
dec
insb
fbld
cmpsl
aas
imul
lcall
aaa
loope
pop
loop
movsl
and
push
icebp
scas
js
das
jno
push
sahf
sub
aad
mov
and
fdiv
fs
adc
mov
mov
cmp
scas
pop
push
nop
je
jg
xchg
sbb
dec
xlat
cs
call
xchg
das
push
imul
mov
pop
gs
pop
jge
in
bound
out
jae
sub
mov
jp
fcoms
xchg
lcall
pop
sbb
outsl
jp
sbb
ret
fsts
and
rol
outsl
xchg
sbb
xchg
outsl
xor
in
or
sub
sbb
jb
push
push
out
das
dec
insl
dec
fistps
mov
push
insl
jb
mov
xlat
call
cmp
jl
cmp
enter
loope
lcall
stc
sbb
jg
js
push
fbld
inc
dec
js
ljmp
xor
cwtl
xchg
scas
fwait
xchg
hlt
push
pop
popf
mov
rcrb
shlb
call
jo
lret
xor
push
stos
cwtl
sbb
pushf
push
cld
outsl
mov
or
je
jae
pusha
fs
mov
pop
addr16
adc
or
nop
leave
ja
stos
dec
fucom
pop
fnstcw
fsubs
pop
xchg
mov
in
insl
js
stc
shlb
lods
in
xor
in
divb
pusha
and
fildll
icebp
pop
out
jecxz
mov
jecxz
jo
jo
xchg
jne
fstps
mov
lods
in
mov
loopne
in
lret
bound
sbb
push
addr16
movsl
push
leave
mov
out
cld
xlat
pop
xor
push
jbe
pushf
call
lods
in
adc
cld
fisubl
pop
imul
push
imul
jo
movsb
popf
xchg
push
pop
jo
inc
movl
dec
fidivs
cltd
movsl
in
inc
adc
xchg
in
jnp
pop
rol
ljmp
out
cmc
in
sahf
mov
lcall
into
in
pop
aam
fildll
push
cltd
sbb
push
and
push
pop
outsl
pop
lcall
sbb
fistpll
cli
xchg
sub
dec
rcr
movsb
dec
jno
outsb
jb
mov
loopne
pop
shr
pop
in
dec
shrl
ljmp
outsb
cld
iret
mov
sbb
loop
jb
insl
lahf
and
push
jb
test
lock
lcall
pop
and
inc
inc
outsb
jb
sub
cmpsb
fninit
fbstp
shlb
fsub
je
outsl
into
jno
mov
loope
jp
into
xchg
stos
arpl
sbb
hlt
inc
add
movsb
das
iret
jp
dec
sbb
sarl
fsubrl
lret
test
and
sbb
imul
in
js
dec
fs
xlat
in
jb
push
loope
push
imul
pop
ret
push
sti
imul
outsb
insl
dec
jo
pusha
jg
arpl
insl
lods
int3
sub
adc
in
jp
and
call
lret
pop
xchg
rcrb
pusha
ficoms
std
and
rorb
sti
sbb
dec
dec
pop
lahf
je
cmpsb
in
mov
xor
movsb
xchg
jns
lret
xor
cltd
or
lret
in
push
notl
pop
jp
negl
in
iret
out
jbe
dec
lock
push
lock
push
in
jp
push
rcr
insl
in
push
fidivrl
pop
mov
jmp
repnz
loope
loop
pop
cli
mov
in
repz
loopne
call
push
mov
sbbb
test
sti
je
inc
and
mov
cli
jo
mov
push
pusha
ds
fsubp
sbb
lock
dec
jbe
test
push
jb
pop
jne
jp
sahf
inc
pop
inc
pop
add
adc
sbb
fcoml
lcall
jbe
push
sbb
dec
lock
lock
test
add
fsubrs
fucomi
pop
imul
adc
aad
lods
push
fistpll
jae
rcrb
bound
divb
inc
pusha
sbb
mov
insl
out
ret
mov
inc
fwait
push
push
mov
out
or
outsl
addr16
pop
sti
into
cld
lret
mov
je
jbe
aad
in
and
mov
mov
push
setl
jbe
arpl
je
je
loope
lcall
jbe
bound
jbe
bound
inc
lret
pop
lret
repz
arpl
fwait
aad
popa
jne
ja
enter
xchg
sti
cmc
jo
mov
pop
jbe
jno
adc
in
pop
adc
gs
sti
dec
test
jnp
repz
jo
loope
push
dec
jbe
cmp
out
pop
jbe
addr16
mov
movzbl
jl
fbld
inc
insl
push
pop
xchg
nop
pop
ja
dec
jg
push
and
in
nop
inc
fstpt
adc
pop
fwait
pop
adc
daa
cwtl
popf
fs
sarl
ficoms
aaa
add
je
arpl
add
imul
cmpsl
test
jns
rcrb
xchg
mov
push
iret
push
divl
inc
outsl
cmp
je
sbb
mov
jnp
inc
js
mov
cmp
mov
arpl
cmp
cmp
jecxz
pop
sbb
dec
in
push
fldcw
push
dec
sbb
jb
mov
fcompl
test
cmp
dec
pusha
pop
mov
in
aaa
sti
adc
fcomp
push
bound
fs
inc
in
mov
jmp
dec
loop
sti
in
sbbl
and
sub
ja
pushf
jno
jno
push
ficoms
jnp
gs
in
cmp
xchg
pop
xlat
push
push
in
dec
dec
and
sahf
push
sbb
fstpt
dec
push
inc
arpl
sti
jno
js
pop
mov
cmpsl
adc
dec
aaa
jne
or
in
pop
pop
pushf
sti
test
in
jno
dec
fcoml
stos
lcall
fdivs
pop
dec
dec
lock
aam
idiv
pop
mov
jno
dec
stos
fcmovbe
gs
adc
and
test
xchg
fldl
push
in
push
ss
mov
in
pop
dec
je
mov
out
aaa
ja
sub
pushf
jo
mov
fstl
in
out
divl
add
mov
fnsave
sti
in
jae
fldl
mov
sti
fisttpll
jl
fstpl
loopne
pop
fimull
fs
mov
push
pop
in
or
divl
add
mov
fnsave
sti
in
jae
fldl
int3
push
inc
in
pop
mov
fnsave
testb
ja
ret
sti
fisttpll
jl
fstpl
inc
in
ja
ret
sti
fisttpll
jp
aad
leave
dec
sub
sbb
mov
in
jae
popa
inc
in
pop
aaa
lea
in
jmp
inc
mov
jnp
dec
fstp
loope
dec
call
sbb
dec
pop
in
ficompl
jle
pop
sbb
pusha
outsb
push
fsubl
dec
sarl
lock
push
cs
pop
pop
sub
pop
inc
adc
aam
push
sbb
dec
popf
outsl
pop
pushf
cmpsb
insl
push
push
lahf
xlat
mov
movsl
fnstcw
jl
cli
insl
mov
jge
sbb
pop
test
out
in
insl
jb
dec
sub
pop
gs
push
inc
lcall
mov
insl
rcll
push
sub
fiadds
ret
in
push
in
sbb
cmp
xor
in
add
sbb
cmpsb
push
adc
lahf
fs
insl
mov
xchg
pop
sti
adc
mov
pusha
fstps
test
aad
and
negl
sbb
cli
inc
insl
mov
fisubs
arpl
xchg
fcompl
pop
cwtl
xchg
jae
out
loopne
or
sbb
aaa
outsb
mov
push
jmp
fs
pop
push
adc
out
mov
lcall
stos
fs
fistpl
mov
jnp
out
jp
fwait
inc
fcomps
ljmp
outsb
inc
popf
sub
fstpl
cwtl
call
notb
cltd
xchg
outsb
jb
in
rclb
ficoml
push
sahf
and
jno
push
in
outsb
jp
popf
jl
stc
cli
outsb
dec
push
stos
out
pop
pop
mov
fcoml
call
sbb
lret
out
mov
call
cld
out
jb
jge
out
cli
outsb
into
xchg
xor
std
and
add
mov
ljmp
outsb
mov
lret
cmp
std
xchg
js
inc
cmp
outsb
stc
out
sarb
push
fucom
adc
jae
mov
sbb
mov
sarl
subb
cltd
mov
in
outsb
hlt
mulb
push
outsb
jl
ljmp
shll
mov
mov
cld
outsb
inc
jp
pop
sbb
xor
divb
and
bound
outsb
jl
shll
sbb
fs
fnstsw
fucomi
int3
mov
dec
sahf
xchg
xor
fsubs
cld
outsb
ret
jecxz
push
outsl
outsb
cmpb
and
mov
addr16
or
movsb
inc
in
mov
mov
mov
outsb
iret
outsb
xchg
push
adc
xor
mov
push
push
fisubl
aad
push
adc
cld
adc
xor
inc
rclb
adc
dec
dec
das
dec
pop
fisubl
dec
sti
scas
cld
fnsave
das
cld
mov
adc
mov
cs
test
adc
scas
adc
das
aaa
sub
sti
scas
jae
push
mov
mov
xchg
mov
mov
jno
dec
das
and
adc
pop
adc
cmp
pop
mov
fnstsw
jl
push
ret
mov
ja
loopne
scas
mov
clc
mov
div
inc
or
scas
cmp
fs
fnsave
mov
jo
mov
add
dec
scas
and
scas
mov
dec
scas
adc
ja
fdivs
mov
jo
notl
cmp
subl
sub
shr
ljmp
int3
pop
pop
das
and
dec
aad
aas
adc
cwtl
scas
outsb
push
adc
scas
sbb
scas
cmc
imulb
cmc
pusha
imulb
push
dec
xchg
in
cmp
adc
lahf
cltd
icebp
std
notb
inc
fisubs
ja
pop
sahf
scas
mov
cmp
scas
cmp
mov
scas
out
js
cmc
jo
mov
scas
divb
clc
dec
aaa
scas
xchg
cwtl
enter
cmp
aaa
scas
dec
rclb
sahf
das
mov
push
adc
out
mov
xchg
sti
das
mov
cmp
fs
fwait
js
xor
pop
lret
scas
loop
dec
pop
fs
ffree
xchg
lahf
jo
testb
scas
fnstsw
sbb
scas
xor
lds
mov
push
pop
mov
fsubrs
insl
sahf
scas
mov
ss
std
insl
dec
scas
and
inc
in
inc
scas
stos
aam
sub
inc
das
fnsave
xchg
pop
jo
mov
popf
fs
pop
mull
fisttpl
add
jo
mov
scas
mov
shrl
scas
fldl
sbb
test
dec
das
mov
mov
pop
adc
js
mov
adc
xchg
sahf
scas
pushl
cmp
scas
das
divl
js
scas
test
gs
insb
sbb
sbb
adc
das
cmp
ret
outsb
add
ja
lods
pop
cwtl
pop
in
mov
loopne
or
lock
das
lods
cltd
fwait
sahf
fldcw
dec
mov
push
inc
inc
popf
sbb
imul
ficoms
bound
mov
and
pop
pop
shrb
sbb
lods
pop
xchg
cmp
push
shrl
push
dec
in
mov
and
lods
test
cmpsb
pop
push
ja
dec
jl
in
fists
sub
push
out
pop
fldt
lods
inc
divb
fs
fsubr
lods
inc
sub
lahf
outsb
movsb
lods
pusha
out
out
and
lods
enter
ss
out
xorb
lock
aad
ljmp
lea
gs
and
cs
div
push
cmc
js
push
pop
ret
std
in
xchg
push
lods
xchg
fstp
cwtl
mov
jbe
lods
lret
test
sahf
shrb
aam
push
ficompl
sbb
push
lods
inc
xlat
aas
push
lods
shrb
gs
push
pushf
nop
cs
sahf
xchg
lcall
in
xor
mov
lret
addr16
jmp
aam
movsb
pop
push
fsubp
popf
fwait
pop
sbb
out
imul
jbe
pusha
mov
repz
icebp
scas
xchg
leave
adc
aad
cmp
popf
push
xchg
pop
and
rclb
pop
dec
sbb
xchg
ljmp
sar
mov
lock
icebp
scas
lret
popf
lcall
dec
mov
test
push
in
sbbl
lods
jecxz
mov
in
and
loope
cmp
jbe
xchg
sbb
lcall
mov
sbb
cwtl
lods
inc
stos
jne
pusha
mov
xchg
lcall
jp
push
pop
lcall
pop
insb
inc
lods
test
outsl
and
adc
outsl
xchg
pop
scas
and
push
xor
lods
pop
mov
add
jbe
frstor
push
pop
shrl
lock
sbb
call
insb
outsl
fbld
mov
nop
mov
xchg
xorb
xlat
push
mov
lods
lods
jns
in
fs
out
inc
lret
jae
ljmp
inc
or
pop
cld
adc
cmc
mov
jns
aaa
js
jg
or
notb
aaa
and
ja
and
xlat
and
aaa
notl
cmp
cmp
sbb
je
jg
or
enter
cld
in
mov
sarl
push
mov
pop
es
jl
lock
mov
lock
iret
xor
sarl
push
push
inc
ss
and
ss
xchg
aad
fwait
cmpsl
mov
imul
pop
sahf
xor
xchg
mov
cld
pop
sahf
mov
pop
xchg
mov
add
xor
pop
sahf
xor
mov
xor
maxps
pop
call
dec
xor
pop
adc
xor
pop
call
dec
xor
pop
adc
xor
pop
call
int
cmp
sbb
js
inc
dec
and
aaa
and
mov
fcmovnu
cmp
jecxz
xor
ja
out
scas
xorb
aaa
mull
sahf
pop
out
clc
xor
movsb
inc
mov
ss
icebp
jbe
cmc
ja
inc
movsb
cmp
aaa
and
clc
mov
pop
adc
hlt
push
mov
ss
push
jne
ss
cld
adc
mov
mov
pop
adc
ss
jbe
cwtd
mov
fdivr
inc
rorl
jae
mov
call
pop
push
xorl
pop
sahf
mov
pop
push
subl
pop
push
xorl
adc
xchg
xor
decb
mov
xor
out
testb
and
shll
and
shll
and
xor
mov
push
push
and
jbe
and
fisubrs
out
cmp
cmp
aaa
mov
push
es
ss
push
mov
adc
aaa
negl
mov
jo
daa
cmc
inc
aaa
js
adc
movsb
leave
fmuls
scas
cmc
js
fisubrs
out
and
stc
mov
pop
and
mov
fwait
push
jne
ja
adc
lea
movsb
rcll
xchg
sub
pop
cmp
int
pop
mov
bound
cmc
dec
rcrl
clc
dec
in
jae
mulb
sbb
int3
aaa
ds
xor
ja
and
xor
pop
test
cmp
js
and
mov
jl
xchg
or
mov
and
and
xor
mov
xor
out
testl
pop
js
and
xor
and
mov
mov
ds
xor
and
add
mov
cmp
std
daa
loopne
ss
cmp
loop
cmc
mov
xor
adc
sbb
pop
cmc
fsubr
add
cwtl
test
mov
push
cmc
out
addps
xor
pavgb
mov
popa
rorb
jge
push
mov
xor
movsl
scas
aaa
mov
pop
loope
or
divb
lret
int3
sbb
pop
xchg
ss
mov
outsl
out
adc
dec
shl
mov
inc
mov
fcoml
pop
int
rorl
popa
ss
jp
out
xor
aaa
mov
and
and
jl
and
pop
xor
shll
cmp
mov
ret
mov
pushf
and
xor
and
xor
and
xor
pop
test
cmp
dec
xor
mov
push
mov
and
mov
mov
and
fidivs
mov
mov
and
and
mov
xor
cmp
xchg
in
pop
repz
std
sub
test
fwait
jmp
repz
jecxz
sub
xor
call
test
fidivrs
cmp
aaa
mov
frstor
pop
sahf
aam
mov
push
pop
pop
mov
frstor
cli
aam
fs
loop
pcmpgtb
push
loop
pcmpgtb
push
bound
and
cmp
cmp
adc
xchg
pushf
and
push
adc
mov
cmp
mov
pop
aam
sub
mov
jmp
xor
test
test
jge
js
dec
addr16
mov
repnz
pop
add
pop
lcall
mov
adc
dec
xchg
pushf
cmpsb
hlt
pop
imul
dec
int3
lret
cmc
mov
addr16
xchg
jge
call
cld
decb
imul
pop
adc
push
xor
cmp
dec
jp
pop
cmpsb
dec
jge
lods
cmp
adc
in
or
and
cli
lcall
pop
pop
arpl
xor
fwait
icebp
mov
scas
push
repz
into
pop
jno
hlt
push
jo
add
xor
xor
mov
push
scas
lea
js
std
aas
scas
shrl
push
sbb
push
sbb
filds
lods
push
shr
pop
and
shl
inc
push
lret
fcoms
icebp
stos
rclb
push
pop
fs
ljmp
lods
in
into
cltd
inc
shl
sbb
roll
push
mov
pop
test
push
insb
or
repz
aad
cwtl
inc
ljmp
fldenv
pop
test
test
std
and
jecxz
outsl
cwtl
push
push
pop
xchg
ficoml
pop
test
aam
or
mov
shr
sbb
test
mov
mov
test
jne
push
push
mov
xchg
hlt
dec
mov
inc
ficomps
cmp
fisubrl
ret
lods
ljmp
pop
push
lods
push
ljmp
int3
cs
or
xchg
jne
fsubrl
jb
mov
pop
pop
add
xchg
shll
insl
push
aaa
mov
mov
mov
or
push
repz
jae
cmpl
pushf
lds
xor
push
sbb
fidivrl
scas
pop
sar
sbb
xor
sub
lods
notl
arpl
push
scas
xchg
add
inc
mov
ss
dec
aam
mov
dec
bound
dec
loopne
mov
movsl
repz
push
sbb
into
repz
fdivr
sbbl
xchg
outsl
push
sahf
bound
pop
loop
fwait
add
icebp
hlt
pop
in
dec
iret
imul
shlb
iret
clc
mov
push
and
push
cmc
cs
push
jns
sub
push
fldl
jno
fldt
scas
sbb
pop
scas
cli
push
into
test
mov
fwait
push
sarb
das
jo
dec
push
movsl
repz
push
fld
sbb
push
fcoml
push
adc
lods
lret
daa
lea
mov
lods
scas
les
inc
es
ss
divl
sub
pop
push
push
sub
hlt
adc
scas
pop
cmpsl
sub
mov
cmp
mov
movsl
xor
arpl
das
js
add
xchg
iret
outsw
push
pop
inc
ljmp
dec
out
push
sub
sub
in
imul
fsubl
dec
inc
das
adc
outsb
cltd
loopne
dec
inc
ljmp
pusha
aaa
jo
xchg
and
sbb
dec
jle
add
std
xor
mov
mov
mov
jbe
shrb
imul
hlt
adc
lods
aaa
xor
pop
fs
jp
inc
outsl
and
xchg
jg
into
fsubrl
xchg
xchg
ja
pop
fsubs
push
in
and
pushf
push
or
pop
sub
pushf
sub
sbb
mov
outsl
int
cli
outsl
dec
push
stos
cwtl
ficompl
fdivs
push
ljmp
ret
ljmp
shrb
pusha
pushf
sbb
fmul
test
or
push
test
cmp
xlat
cli
sbb
xor
nop
jp
xchg
frstor
int
fwait
sbb
ficomps
xlat
xor
mov
faddp
jb
das
lods
fcmove
movsl
pusha
sbb
mov
jo
ja
inc
jo
loope
lret
cwtl
loopne
mov
lcall
arpl
xchg
mov
or
bound
fildll
clc
jae
lahf
repnz
rclb
mov
xchg
mov
loopne
or
and
pushf
out
xor
fisubrl
pop
lahf
cltd
mov
cld
mov
stos
sbb
pop
pushf
xchg
cmp
ret
addr16
jp
sbb
ftst
fists
sti
pop
jae
adc
divb
fildl
imul
sub
pop
jae
or
add
push
sbb
inc
push
jecxz
scas
jg
int
lret
cwtl
pop
es
sbb
mov
jae
ja
xchg
pop
or
mov
adc
lock
sbb
inc
clc
mov
sahf
xchg
xchg
push
inc
rcrl
ds
aaa
mov
ret
repnz
sbb
in
push
xabort
push
xchg
shll
mov
pop
xor
pop
pop
lahf
cltd
sbb
subl
cltd
popa
jae
pop
js
adc
insb
call
pop
sbb
aad
js
fwait
sahf
xchg
xacquire
dec
fs
jle
push
xorl
xchg
or
jp
mov
pop
pop
push
scas
call
pop
inc
mov
mov
loopne
mov
subb
add
jo
cmp
jp
fistps
cltd
cmp
repz
pop
insl
cli
scas
pop
fwait
stos
lcall
jne
cs
cmpsb
mov
cmpsl
std
aaa
clc
adc
imul
jae
out
or
std
les
xor
push
imul
jns
pop
cmp
sbb
ficomps
bnd
pop
cmpsb
jae
mov
out
divl
nop
mov
inc
shl
sub
sbb
sti
je
cmp
push
and
dec
xor
cwtl
add
fcoms
jo
fistps
cwtl
jecxz
cmp
call
scas
adc
or
xchg
decl
dec
ficomps
cmp
jno
jle
cltd
stos
out
fadds
xchg
inc
mov
sub
mov
int
scas
je
ljmp
scas
xchg
aas
shl
notl
scas
mov
ret
jg
je
inc
in
outsl
jp
pop
out
pop
sbb
sbb
xor
sub
fwait
sahf
jb
adc
sarl
movsl
dec
sbb
rolb
jp
pop
scas
aam
pop
mov
test
insl
sti
or
push
fadds
cmp
xchg
or
pop
xchg
loopne
test
cmp
es
mov
sub
xor
cmp
sarb
js
mov
jo
push
or
dec
xchg
cltd
fwait
xchg
xchg
dec
xchg
xchg
cmpsb
pop
jecxz
scas
into
mov
je
cs
movsl
lret
adc
xchg
jae
out
xor
ja
push
push
push
pushl
pop
out
fisubl
loopne
insl
pop
bound
lcall
scas
cltd
pop
pushf
cwtl
sbb
call
pop
outsl
xchg
and
rcrb
add
das
jae
adc
out
pop
or
jns
call
stos
out
sub
cmp
out
pop
pop
test
pop
pop
unpcklpd
scas
cmp
jecxz
jb
mov
fcmovnu
pxor
jl
adc
nop
shl
inc
aad
jl
daa
decb
hlt
mov
sbb
fsubrs
push
lahf
sahf
ficomps
dec
int
shl
cmp
pop
in
xchg
fldenv
xor
aad
inc
fbld
jl
je
jle
outsl
xchg
dec
loope
lock
dec
decb
je
mov
jae
insl
in
fcmovbe
scas
rolb
call
add
jae
ljmp
pop
xchg
and
and
pop
xchg
mov
inc
or
imul
xchg
sbb
push
pop
pop
fimuls
xor
mov
push
clc
adc
cld
insb
ret
das
fldenv
pop
inc
out
test
push
xor
pop
jno
fcmovnbe
and
push
adc
std
mov
jo
pop
in
sub
dec
mov
push
sbb
fwait
push
cs
ljmp
pop
addr16
mov
inc
dec
test
pop
push
cs
testl
js
arpl
push
mov
adc
jle
jbe
mov
mov
cmp
shr
scas
fsincos
stos
sbb
das
sbb
ja
adc
fnsave
sbb
pop
add
mov
sahf
clc
fiaddl
scas
mov
jg
xchg
scas
test
fldl2e
pop
movsb
xlat
xchg
push
and
scas
lret
bound
es
jle
mov
xor
mov
adc
lea
int
mov
push
push
fadds
ficomps
sub
fisttpl
cli
arpl
lret
mov
sarb
push
pop
fstps
int
rolb
push
mov
push
int
fs
fcompl
repnz
insl
pop
cli
push
popa
xchg
fsts
sbb
bnd
in
imull
div
imull
repnz
push
outsl
daa
dec
cmp
xor
mov
je
adc
subb
jmp
test
or
xchg
out
mov
mov
mov
scas
fstp
cmp
in
mov
pop
mov
cmpsl
cmp
aad
and
ret
cmp
mov
pop
lods
fldt
mov
clc
add
mov
mov
popf
xorb
add
cmp
adc
mov
mov
mov
aaa
xor
aaa
xchg
int
mov
ja
int
xor
or
popf
xor
loop
aam
cmp
cmp
js
mov
mov
jbe
mov
fs
lahf
addr16
sbb
cld
cwtl
dec
shl
cmp
cld
cwtl
or
cmc
pushl
mov
mov
fidivs
xor
stos
jecxz
push
test
jmp
cs
fildll
les
repnz
xor
loopne
inc
cmpsl
push
mov
repnz
pop
bound
xchg
aad
sbb
imul
sub
mov
ljmp
sub
mov
mov
pushf
jbe
xor
mov
mov
mov
int3
aaa
int3
out
xor
int3
sti
xor
fnstsw
int3
dec
add
pop
inc
hlt
js
test
mov
pop
jo
cmp
cmp
aaa
xor
repnz
adc
call
test
mov
mov
out
adc
mov
xchg
cmp
xor
xor
push
mov
jg
inc
imul
sbb
jb
mov
push
stos
fildll
pop
fiaddl
inc
jge
cmp
jp
pop
das
pushf
fsubs
push
inc
mov
pop
dec
lock
out
inc
stos
pop
and
adc
pop
outsb
ja
sbb
sahf
and
ja
dec
mov
ss
and
aaa
mov
cmc
mov
int3
xor
mov
shlb
jns
cld
mov
in
inc
cmp
push
int
xchg
int3
mov
int
dec
mov
ror
xor
push
int
xor
int
jo
js
int
xor
decb
mov
out
cmp
ds
or
ss
test
sarb
jl
pushf
outsl
iret
cmc
fdivr
add
push
cld
test
js
mov
mov
cmp
mov
lods
pop
movsl
jno
cld
cmp
rorl
lcall
iret
popf
xlat
jl
jmp
sti
in
and
push
mov
pop
ljmp
pop
pop
lret
pop
push
dec
int
xchg
jmp
fwait
icebp
and
inc
repz
lret
std
adc
cmc
js
int
cmp
ss
xchg
jns
ss
xor
mov
mov
pop
xchg
js
mov
jo
cmp
int3
xor
js
int3
mov
int3
mov
mov
xor
jle
mov
mov
push
xchg
inc
ss
inc
in
xchg
dec
ss
arpl
inc
mov
cmp
mov
jl
push
sbb
mov
cmc
js
sbb
jbe
cmc
mov
in
cmp
dec
inc
fdiv
mov
fidivs
xor
cmc
addr16
and
sbb
xlat
repz
or
fstps
loope
ficompl
loope
xor
cltd
xchg
inc
cmp
jmp
pop
fisubl
inc
fdivp
adc
mov
js
sbb
stos
pop
test
mov
ret
xor
rcr
pop
sbb
cmp
cmp
js
shl
xor
aaa
xchg
mov
jge
ja
fwait
pop
div
mov
fstpl
repz
int
fwait
enter
clc
add
pop
repz
add
or
das
add
pop
hlt
mov
inc
lock
pop
hlt
int
sbb
jno
or
fdivrp
sub
arpl
test
push
xlat
scas
xchg
mov
push
ljmp
push
push
scas
fwait
mov
jge
scas
fldl
jg
repz
arpl
pushf
ja
fcoms
sbb
cmp
cmpsl
fwait
mov
mov
sub
mov
inc
sub
fsts
pop
xchg
or
pop
lret
call
dec
sbb
jl
jp
cs
push
cwtl
loop
mov
lcall
dec
jecxz
cmp
rorl
rorb
cmc
mov
cmp
daa
jo
mov
cmp
and
mov
and
xchg
mov
mov
mov
mov
xchg
test
mov
and
mov
pop
mov
xchg
jecxz
adc
mov
mov
test
push
lahf
push
and
je
cld
shlb
into
imul
cmp
into
aaa
test
out
rolb
or
and
cwtl
jge
aas
lret
push
push
xlat
and
cmc
cmp
xlat
addr16
cmc
int
sbb
cmpl
pushl
mov
int3
mov
fdivp
xor
xlat
push
pop
xchg
int
push
pop
xor
ja
push
push
fdiv
mov
mov
test
cmp
jl
fnstsw
push
mov
push
push
pop
pop
int3
dec
add
cmp
ja
sarb
xor
sbb
mov
dec
xchg
cwtl
pop
pop
outsl
adc
gs
mov
call
lods
pop
popl
arpl
repz
loope
popf
ficompl
sub
mov
outsl
jne
loop
mov
mov
jl
js
mov
test
cmp
ror
cmp
aaa
mov
test
xor
mov
cmp
loopne
fnstsw
stos
xor
test
jbe
mov
int3
mov
fidivs
xor
xlat
stos
nop
cmc
aaa
mov
stos
shl
cmp
std
cwtl
shl
push
mov
mov
mov
dec
xchg
pop
add
jg
mov
xlat
notl
mov
push
arpl
fdivrp
xchg
jnp
cltd
gs
cmpsl
cld
addr16
fs
cs
lret
and
repnz
aam
push
pop
cmc
push
iret
rclb
cmpsb
leave
mov
inc
push
cli
cmc
popa
add
mov
mov
xlat
jg
sahf
add
rolb
shll
add
pop
fdivrs
cmp
fidivs
sti
xor
notl
mov
inc
add
cmc
mov
cmp
lea
jbe
fidivs
sti
xor
pop
int
popf
cmpsl
in
xlat
pop
fcompl
xchg
imul
xorl
repnz
stos
sbb
lahf
je
neg
icebp
bound
imul
push
push
jp
in
and
lret
test
sbb
pop
push
add
jae
xor
inc
cs
cmp
jle
mov
jae
stos
sbb
sbb
gs
dec
and
shr
push
sub
mov
push
jnp
sub
jp
push
scas
push
sub
popf
aas
push
lods
rcr
shrb
add
pop
sub
aad
loope
pop
adc
in
fxam
out
inc
fs
mov
fbld
lret
bound
fwait
test
arpl
pushf
cmp
bound
pop
into
and
arpl
sbb
xchg
ljmp
nop
lret
sbb
out
cld
mov
enter
mulb
scas
cmpb
mulb
mov
mov
and
lock
scas
pop
push
inc
xor
ret
clc
sub
je
cmc
fdiv
shl
loopne
mov
popa
je
ds
mov
or
je
ss
mulb
xor
fnsave
js
popa
mov
push
xchg
cltd
sbb
ss
sub
mov
fidivs
sti
xor
test
inc
sti
xor
gs
mov
mov
mov
loopne
jnp
das
pop
sbb
pop
scas
and
out
xchg
fsubrp
and
jl
out
lahf
jecxz
xor
scas
fs
push
mov
aad
adc
repnz
pop
mov
fsubrp
cwtl
test
loop
adc
dec
repnz
xchg
lcall
loop
pop
push
cs
jo
sbb
rcrb
outsl
frstor
fwait
mov
pop
sbb
ja
sbb
daa
ds
jecxz
mov
sbb
jae
fisttpll
ja
fldcw
movsb
cs
xor
enter
push
sbb
pop
push
mov
mov
imul
ficompl
fisttpll
test
clc
addr16
scas
push
fdivs
pop
jns
dec
cli
xchg
push
call
loop
push
rcrl
mov
fcmovu
dec
imul
call
in
scas
in
push
js
mov
ja
jb
das
fidivs
negb
movsl
cmc
js
xchg
fnstcw
fildll
out
add
idivl
mov
rorl
test
xor
rol
and
lret
int3
out
jecxz
loopne
mov
or
idivb
popf
cmpsl
xor
cmp
mov
js
inc
sti
mov
mov
cmp
inc
fidivs
push
adc
testb
int
sbb
ss
lock
xor
xchg
adc
xor
xor
js
fdivp
xor
cmp
pusha
push
push
sti
push
cmp
and
das
and
lods
jecxz
lods
mov
cs
inc
repz
das
ficompl
scas
popa
loop
or
inc
xchg
jmp
mov
mov
imul
xchg
enter
in
fstl
test
pop
mov
stos
fcmovnu
loope
mov
mov
in
call
pop
push
sbb
fsin
test
adc
fwait
mov
popa
cltd
pop
pusha
mov
pop
pop
aaa
dec
dec
mov
jnp
mov
cmp
ficompl
enter
mov
sbb
fwait
pop
mov
mov
clc
xchg
aam
repz
sbb
and
add
ficoml
and
sbb
scas
clc
mov
inc
push
push
scas
shlb
cmc
or
out
cmp
cld
movsl
xchg
xlat
aaa
cmp
cld
movsl
xchg
xlat
aaa
cmp
mov
mov
mov
inc
ja
out
mov
inc
aad
fldl
testb
fldl
fisttpll
std
cmc
mov
xor
mov
inc
sti
pop
xor
fwait
cmp
inc
xor
scas
mov
adc
outsl
rorb
clc
add
push
cmc
loop
into
sbb
inc
dec
pop
fwait
divb
inc
jo
mov
inc
xor
scas
testl
mov
push
pop
loop
lahf
fwait
xchg
pop
lcall
or
pusha
and
cli
out
scas
andl
add
xlat
pop
fstl
jp
fsubs
and
mov
iret
scas
jecxz
cs
clc
cs
xor
push
fbld
pop
cld
pop
push
stos
cli
das
pop
sub
xor
add
sbbb
pop
addr16
mov
pop
pop
push
jp
xlat
std
cmpsw
in
scas
ljmp
dec
std
imul
pop
fldlg2
or
movsb
jle
push
dec
imul
ficomps
push
int
std
add
pushf
pop
sbb
mov
pop
jecxz
sbb
pushf
jp,pn
xchg
imul
pop
push
rcrb
out
hlt
scas
cmp
scas
arpl
fsubl
ret
ficoml
mov
mulb
and
test
cld
cwtl
xor
aaa
and
ret
xor
fwait
cmp
push
ret
mov
rorl
cld
push
adc
fwait
cld
mov
clc
or
cmc
mov
hlt
and
and
xchg
test
pop
idiv
ja
mov
int3
mov
fidivs
xor
cmp
popl
sti
push
adc
mov
sbb
into
aad
mov
dec
pop
fwait
cmp
test
xor
push
inc
dec
xor
ja
mov
pmulhw
push
fs
in
sahf
sbb
imul
fsubs
cmp
sahf
lahf
pop
push
shrl
je
cs
mov
test
std
mov
cld
dec
push
cwtl
pop
xchg
in
bound
and
fs
sub
rcll
pop
cwtl
mov
ja
pop
in
arpl
sbb
in
shrb
mov
pop
scas
cmp
mov
pushl
mov
mov
out
pop
js
js
loop
test
call
pop
loope
sahf
adc
mov
add
jne
out
sbb
scas
jp
mov
data16
xlat
out
scas
fists
fldt
int3
test
push
mov
adc
pop
cmpsb
push
fstp
gs
repz
bound
pop
and
shlb
fs
xchg
jne
xor
and
xor
jne
xor
shrl
inc
xor
xchg
fidivl
mov
sub
inc
xor
xchg
fidivl
cmp
out
mov
sbb
xchg
mov
dec
hlt
mov
and
hlt
int3
std
shll
repz
std
cli
sbb
xchg
pushf
sub
ficoms
in
shl
outsl
cmp
loop
adc
cmp
sub
roll
int3
cmp
sbb
mov
pop
push
aas
shrb
int
lds
and
add
ja
cmpsl
iret
lret
mov
gs
int
pop
gs
pop
shlb
xchg
mov
repz
jbe
scas
xchg
pop
adc
ficoml
xchg
cmp
cwtl
hlt
fisubs
gs
pushf
xchg
pop
fwait
dec
xor
cmp
mov
sbb
xor
mull
xsave
lcall
fisubrl
fdiv
push
fistpl
push
jb
inc
push
xchg
adc
xchg
sbb
dec
int
xchg
inc
add
das
cmp
ds
cmp
in
push
mov
test
test
pop
cli
fistl
ljmp
outsl
jp
sahf
das
and
cmpsb
mov
ret
clc
jae
movsl
aam
mov
pop
jb
push
arpl
rolb
mov
jmp
mulb
mov
xchg
fmull
sub
in
loope
push
loopne
xchg
out
test
mov
and
ficompl
jp
sahf
aam
hlt
jp
and
jae
push
out
pop
pop
fnstcw
xlat
cmpsb
mov
adc
scas
xlat
fcomi
in
sbb
das
add
fcmovu
in
lcallw
fstps
sbb
xor
pop
pop
or
jmp
js
add
hlt
scas
in
lods
pop
xchg
ljmp
cmp
aam
push
das
mov
and
int3
jno
cmp
push
data16
insb
ficompl
fidivl
cmp
divl
and
cli
das
pushf
js
stos
mov
in
scas
outsl
js
dec
and
sub
scas
jae
sub
das
add
lods
cli
scas
pushf
ja
sub
pop
scas
shrb
sbb
das
cmp
dec
scas
push
mov
mov
pop
je
cmp
stos
sbb
push
push
cwtl
mov
cwtl
ficomps
ss
ja
pop
jne
push
pop
out
xchg
fld
xchg
push
inc
out
dec
fcompp
adc
pop
xchg
mov
pusha
cltd
mov
mov
and
xchg
sbb
fcompl
mov
into
ja
ss
fucom
sbb
mov
sub
lods
or
fsubrs
bound
push
fwait
imul
lods
mov
pop
stos
ficoms
and
dec
cmpsl
sti
pop
pushf
xor
inc
dec
cmp
and
cmp
xchg
rolb
fdivrl
jp
xchg
xchg
loopne
xchg
repnz
movsl
fcoml
cmp
scas
xchg
icebp
leave
ljmp
mov
dec
dec
aas
cs
lcall
lock
and
out
scas
lret
sbb
adc
rclb
mov
ljmp
mov
and
std
stos
and
mov
scas
dec
mov
loope
push
repnz
push
sahf
mov
out
test
mov
js
addr16
sbb
cltd
dec
push
pop
pop
push
fwait
mov
outsl
pop
call
pop
and
mov
sbb
push
ret
lods
or
sub
movsl
popa
pcmpeqd
gs
push
imul
xchg
and
or
jnp
sub
cs
loop
and
sti
ja
and
adc
lods
gs
xchg
xchg
sub
out
fidivs
and
icebp
test
pop
int3
hlt
fsubrs
cwtl
popa
lods
in
fsubrl
data16
mov
xchg
push
pop
xchg
pushf
stos
cltd
xchg
rcrl
sbb
fwait
aad
push
out
jbe
jmp
xor
mov
incb
popa
repnz
jo
cmp
push
cli
faddl
out
sbb
les
js
scas
cmp
int
push
loop
mov
push
xchg
dec
inc
subl
das
std
pop
addb
shlb
jne
mov
xchg
pop
sbb
fldl
pop
int3
mov
mov
mov
outsl
mov
cmp
scas
jo
mov
sbb
cwtl
jmp
in
xor
jl
mov
cmp
repnz
movsl
repnz
std
jno
bnd
cmp
repnz
push
int3
scas
dec
scas
imul
repnz
xchg
mov
mov
mov
fdivs
das
sbb
repnz
dec
repz
iret
dec
popa
repz
clc
sbb
repnz
dec
pop
repnz
dec
add
repz
out
int
cmp
decl
outsb
add
xchg
dec
repnz
inc
or
divb
push
cld
dec
mov
dec
int3
notb
dec
dec
xor
dec
adc
fcomps
dec
in
idivb
cld
jbe
fmull
into
mov
das
push
dec
rcrl
mov
push
pop
jno
mov
dec
arpl
das
adc
ja
mov
mov
pushf
idivl
aas
cmp
cld
dec
pop
mov
cld
dec
scas
ja
scas
sahf
adc
ja
pop
dec
mov
divb
xchg
dec
mov
ret
xchg
dec
outsl
ja
xchg
je
ja
push
mov
mov
dec
mov
push
cld
dec
inc
test
scas
fmuls
lret
sbb
jae
pop
dec
pop
int3
mov
scas
sbb
not
scas
iret
dec
and
shrb
push
dec
pop
push
das
pop
dec
shr
lret
scas
adc
js
imull
xchg
dec
cmp
les
int3
js
scas
dec
pop
loop
shrl
push
xchg
je
testl
scas
div
lahf
pop
loop
dec
pop
xchg
pop
outsl
not
xchg
add
call
not
dec
pop
shl
dec
push
xchg
pop
outsl
notl
je
notl
cmp
scas
pop
pop
cmp
cmp
cmp
and
mov
nop
bnd
dec
xchg
mov
mov
repnz
mov
popa
ret
cmp
out
aaa
outsl
aam
aaa
mov
xor
in
js
sub
ljmp
sbb
cltd
shrb
pop
pop
cs
fwait
xchg
fdivrl
icebp
ret
xor
imulb
mov
dec
arpl
lret
shrb
imul
movsl
jmp
cmp
inc
xorl
idivl
iret
pushf
sbb
and
cli
fimull
dec
pop
data16
cs
push
scas
ja
pop
fdivl
icebp
idiv
lock
sbb
sbb
fwait
and
stos
sbb
cs
icebp
mov
idivl
shl
mov
loopne
cmp
cs
pop
aam
mov
inc
loope
test
insb
xor
xchg
test
lock
ljmp
lock
outsb
sbb
mov
push
enter
add
xorb
sub
and
insb
scas
mov
sub
cmp
add
ret
scas
xor
xor
in
negb
ss
gs
ss
ds
test
sti
inc
xor
fwait
mov
jne
das
lahf
jecxz
mov
ss
scas
xchg
aam
jo
imul
fistpll
mov
xor
std
daa
mov
and
es
cmp
cmp
scas
jbe
cmp
mov
xchg
cmp
xor
testb
mov
std
and
and
push
inc
in
es
ss
push
ret
push
mov
mov
inc
jecxz
push
sub
ss
popa
cmc
mov
fs
pushl
idivb
mov
xchg
xor
ss
es
pop
pop
das
out
cmp
mov
sarb
inc
xor
ss
pop
out
cmp
std
and
mov
mov
mov
jnp
test
pop
xchg
out
cmp
std
daa
xchg
mov
cmp
divl
push
ret
push
cmp
xchg
dec
mov
cmc
int3
leave
rclb
and
push
xchg
sub
xor
fnsave
cmp
dec
xor
mov
cmp
cmp
les
cmp
insl
inc
cmp
idivb
mov
push
adc
outsl
enter
xor
cmp
mull
ss
xor
js
push
ret
push
cmp
xor
pop
sbb
je
jg
cs
cmpsb
test
cmpl
inc
mov
lcall
dec
xlat
rclb
pop
sti
jl
cld
dec
pushf
cltd
mov
jge
push
pop
loope
pop
dec
dec
mov
stc
pop
repnz
jg
ljmp
test
xor
fisubl
mov
lods
cld
cwtl
jne
mov
ret
inc
cmp
push
lcall
dec
lret
ljmp
cld
sub
ss
push
mov
fs
add
jo
push
push
nop
jle
loopne
std
pop
imul
and
push
push
out
fisubs
fnstenv
stos
and
jnp
push
pop
es
mov
in
cmp
mov
jmp
sub
pusha
fnsave
lods
sbb
lahf
je
fadds
mov
lea
xlat
adc
data16
mov
popf
pop
outsb
mov
push
push
cmpsl
fwait
or
mov
pusha
push
cltd
xor
push
dec
and
outsb
popa
push
shlb
xchg
fsubs
repnz
jecxz
sbb
shlb
jno
iret
mov
iret
inc
lods
adc
add
mov
jne
cmp
sbb
popa
inc
imul
aaa
nop
push
sbb
xlat
push
cmpsb
and
fwait
and
fstp
adc
psrlq
and
icebp
jl
pusha
sbb
pop
aad
sahf
popa
in
arpl
mov
test
cld
inc
add
or
ljmp
aad
aaa
stos
fisubrs
enter
inc
jne
imul
sbb
and
bt
test
jb
sbb
cmpsb
popf
inc
and
shlb
mov
lcall
outsl
and
addr16
push
in
int
jecxz
mov
out
repnz
xorl
test
xor
push
xlat
cmpsb
cmp
loope
cmp
fistps
jae
push
mov
sahf
xchg
xchg
cmp
fsubl
jno
iret
cmp
out
ficomps
fdiv
push
fsts
dec
push
fcmovu
push
repz
jecxz
dec
pop
adc
pushf
and
xlat
xchg
inc
mov
mov
mov
orb
hlt
mov
push
pushf
xorb
dec
mov
outsl
xchg
repz
test
xchg
dec
sub
inc
inc
sub
stc
cmpsb
aad
nop
mov
test
push
sbb
push
arpl
and
cwtl
loop
arpl
jmp
xchg
and
push
dec
int
dec
push
push
fdivs
cmp
repz
cld
xor
stos
pop
pop
lcall
xor
push
ret
hlt
push
cwtl
mov
aad
xchg
imul
int
cld
mov
sbb
mov
cmc
mov
scas
cmp
mov
cmp
jp
lcall
xor
cmp
aad
scas
mov
xor
sbb
ja
xor
mov
divb
cmp
outsb
mov
pop
sbb
hlt
int
cmp
outsb
sbb
cmpsl
in
xchg
push
or
cld
popf
mov
xor
mov
outsl
js
scas
sahf
repnz
add
jg
repnz
not
scas
clc
bnd
add
fs
push
test
ja
inc
repnz
push
int3
xchg
repnz
xor
call
outsb
push
repnz
mov
bnd
xor
dec
add
xor
scas
mov
hlt
dec
dec
imul
dec
jbe
scas
xchg
mov
idiv
shl
xor
int
adc
xor
js
jecxz
popa
xor
xchg
jecxz
shrb
movsb
insl
mov
adc
arpl
loop
and
filds
js,pn
mov
rcll
imul
bnd
sti
addr16
repnz
aad
jmp
repnz
mov
negb
mov
addr16
outsl
mov
scas
sahf
and
or
mov
jl
push
addr16
push
je
mov
push
mov
mov
repz
outsl
addr16
push
scas
int
xor
addr16
clc
das
inc
addr16
mov
scas
mov
notb
cmp
scas
outsl
addr16
addr16
idivb
aaa
jbe
mov
mov
mov
jmp
outsl
aaa
push
push
je
aaa
xchg
aad
addr16
aaa
mov
xchg
scas
xor
aaa
cmp
js
das
mov
in
aaa
mov
into
jbe
scas
outsl
and
aad
dec
and
shrl
out
push
or
xor
sub
push
cli
and
push
jl
aas
mov
in
and
cmpl
mov
mov
subb
das
pop
and
in
outsl
mov
scas
pop
adc
scas
je
mov
subl
mov
cwtl
fs
mov
addr16
js
push
dec
addr16
aad
outsl
loopw
dec
insb
pop
addr16
int3
aaa
scas
cmp
clc
scas
pop
add
fisubrs
cli
addr16
lock
outsl
and
addr16
std
inc
mov
adc
in
cmp
inc
data16
addr16
mov
jmp
outsl
cmp
je
cmp
cmp
cmp
cmp
das
cwtl
sub
mov
pop
sarb
jb
lcall
lcall
lcall
sub
shrb
outsl
lcall
mov
lcall
lcall
jb
lret
scas
mov
int3
mov
mov
mov
mov
xchg
jno
and
mov
cmpsb
mov
addr16
mov
call
mov
outsb
lods
aad
addr16
jo
sbb
sbb
aaa
inc
sbb
and
rcrb
pushf
cmp
leave
pop
cltd
fwait
mov
xor
push
lahf
test
pop
repnz
mov
push
popa
sbb
cld
repnz
cli
cltd
movsl
xchg
fisttpl
sbb
rorb
xchg
push
and
cmp
push
repnz
call
ljmp
dec
test
rcrb
dec
or
sbb
fsubs
jecxz,pt
or
arpl
je
fcoms
sbb
xlat
mov
stc
push
lods
pop
aas
pushf
je
divb
jb
xchg
jmp
into
dec
pop
push
fildll
test
pop
push
mov
es
bound
stos
xchg
fwait
in
pop
cmp
xor
mov
repz
xchg
jno
or
sbb
cltd
adc
and
pop
mov
mov
je
stos
fbld
je
jle
fmuls
jp
sahf
scas
xchg
ficomps
addr16
and
mov
lds
fs
xchg
sar
cld
pushf
mov
rcrl
ficoms
lahf
cli
scas
clc
repnz
movsl
sbb
pop
pop
stos
push
pop
fbld
repz
pop
frstor
push
repz
jle
push
xchg
sahf
pop
xchg
repz
int
xlat
jecxz
pop
pop
xchg
mov
stos
pop
sbb
daa
sbb
sti
rorl
pop
sbb
pop
cli
hlt
pop
pop
lods
addr16
je
push
sbb
ficompl
jle
lock
fists
clc
bnd
das
gs
outsb
sub
mov
mov
je
das
out
outsb
pop
repnz
adc
and
cltd
mov
stos
fcomps
fstpl
adc
and
push
adc
push
fpatan
sbb
mov
test
ss
ret
jae
fcomp
adc
imul
das
popf
out
push
shl
rcll
pop
filds
stos
fcoms
lcall
jae
and
popf
pop
jl
mov
data16
in
fwait
aam
movsb
je
outsb
pop
pop
lcall
popf
sbb
sarb
add
pop
repz
negb
push
cld
and
push
pop
imull
sbb
push
pop
push
fs
mov
or
pop
sahf
scas
test
push
push
push
push
push
fisubrl
mov
imul
push
fidivl
push
incl
imul
mov
in
out
je
mov
outsl
popf
lcall
fldcw
repnz
push
frstor
xchg
repnz
pop
faddl
inc
outsl
popf
cmpsl
repz
jmp
pop
popf
imul
insl
push
adc
out
fcoms
jno
pop
hlt
mov
lcall
std
xchg
and
cwtl
clc
mov
push
nopl
mov
push
push
out
repz
pop
pop
out
xchg
fs
cli
je
push
inc
loope
sbb
roll
push
pop
pop
popa
jecxz
lea
repz
fs
into
lret
iret
hlt
lds
mov
outsl
push
push
repnz
sub
mov
jne
jl
out
pop
adc
push
sbb
push
mov
and
repz
fldcw
ficoml
imul
lcall
or
inc
rep
pop
and
imul
aam
fistps
ja
in
sub
pusha
fwait
out
push
mov
xchg
xor
xchg
int
lea
mov
stc
push
outsb
outsb
repz
sub
push
fsubrs
push
add
mov
movsb
fldcw
cmp
movsl
sbb
mull
pushf
xchg
repz
pop
stos
call
outsb
shl
push
std
pop
pop
repnz
adc
into
cli
xchg
rcr
cld
repz
fcomps
pop
and
shl
into
fildl
dec
sahf
cwtl
add
lcall
xchg
cld
xchg
lea
sub
repz
movsl
loop
pushf
cmpsb
lahf
ja
push
stos
pop
and
pop
loopne
inc
jp
pop
jge
dec
ds
movl
xor
ret
je
fldenv
push
aam
int
mov
and
cmp
loopne
inc
adc
insb
or
incb
mov
pop
stos
out
arpl
repz
stos
pop
sbb
repz
lret
pop
lods
out
and
repz
mov
rcrl
jl
sar
int3
sbb
pop
pop
push
call
or
fstl
outsb
pop
scas
push
out
fisubrl
mov
inc
pop
in
fistpl
inc
inc
dec
daa
pop
sbb
and
mov
je
loope
sbb
mov
bnd
fcompl
repnz
push
fisubrs
js
mov
aaa
rcrl
mov
imul
cmp
dec
or
fcmovne
jl
cltd
daa
repz
pop
lods
fcoms
and
or
hlt
mov
imul
pushf
fdivrs
fdivr
je
stos
inc
sahf
sbb
xchg
cmp
mov
shlb
jae
rcrb
movsl
sarl
fldenv
outsb
jmp
cmc
push
pushf
int
jg
xchg
aam
jb
push
lcall
pop
fsubrs
cmpsb
pop
fdiv
shrb
push
movsb
jmp
pop
sahf
aam
fcompl
mov
rcll
mov
hlt
mov
ja
push
xor
ret
push
jp
popf
movsl
aas
fcoms
mov
inc
push
pop
fists
cwtl
push
repz
jmp
cmp
jp
pop
push
in
sbb
cli
pusha
dec
mov
mov
push
fst
pop
fcmovnbe
je
pop
fbld
pop
sub
sti
dec
mov
lods
divl
dec
jp
pop
and
push
jae
aam
push
jae
xchg
repz
sub
aad
xchg
jae
sbb
fwait
sbb
hlt
iret
dec
lock
cli
out
repz
pusha
jae
pop
push
lret
inc
scas
stos
pop
daa
pop
cwtl
data16
mov
je
add
in
scas
xchg
jl
cmp
mov
jbe
scas
lret
repnz
lret
mov
xchg
test
cmp
xor
mov
hlt
mov
adc
adc
mov
negl
dec
fidivrs
fildll
sbb
pop
in
xorb
adcb
adc
xor
inc
je
shll
arpl
mov
lock
mov
push
icebp
lock
cmpb
into
sbb
fwait
out
jne
js
aaa
fdivrl
call
jbe
faddl
pop
divb
js
inc
mov
aaa
mov
fnstenv
mov
sahf
pop
push
fdivs
rcll
pop
xor
fnstsw
arpl
inc
sti
mov
mov
pop
mov
and
add
jo
xchg
leave
popa
aaa
and
ss
pop
leave
or
xchg
mov
xchg
shll
mov
popa
xchg
pop
push
xor
mov
pop
leave
or
notb
ss
xchg
pop
xchg
inc
xor
scas
mov
push
ret
push
mov
pop
mov
into
mov
xor
dec
inc
push
push
xlat
test
lahf
outsl
cmp
ss
cmpsb
xlat
gs
shll
fidivs
xor
fistl
dec
xor
jge
ficoml
pop
repnz
mov
or
divl
shrl
pushl
test
mov
aaa
rol
xor
nop
int
add
pop
ss
add
popa
aaa
add
aaa
cmp
js
push
add
hlt
inc
out
mov
jbe
inc
xor
inc
xor
imul
pop
in
fcoml
push
inc
push
push
movb
inc
push
push
movb
xchg
push
rorb
js
mov
push
adc
js
pop
cld
gs
ss
cld
movsl
rcl
aaa
cmp
cld
movsl
rcl
aaa
cmp
cld
movsl
rcl
aaa
and
ret
xor
fwait
testl
jae
stc
pop
mov
pop
jg
neg
dec
pop
xchg
fildl
int3
notb
lret
mov
aaa
push
ret
mov
int3
mov
out
mov
pop
xchg
dec
ret
pop
xor
cmp
ss
dec
ret
or
ss
cmpsb
ret
movsb
fmull
xor
mov
fidivs
sti
xor
pushf
outsl
pop
cmpsb
ret
movsl
ss
add
ss
add
ss
add
ss
inc
dec
pop
mov
mov
inc
push
add
lock
fdivp
xor
or
ss
xchg
inc
push
and
aaa
ja
inc
push
and
aaa
int
pop
push
inc
aaa
notl
cmp
arpl
mov
pop
ret
add
testb
pop
das
neg
jge
pop
aaa
fcoml
pop
mov
dec
pop
mov
divb
ret
and
ret
xor
fwait
cmp
nop
push
ret
add
insb
idivb
aaa
mov
mov
mov
sbb
inc
push
aaa
pop
aaa
lea
inc
xor
mov
into
mov
xor
mov
mov
int
mov
int
mov
mov
scas
ja
inc
push
ret
push
inc
dec
xor
aaa
inc
mov
dec
pop
out
xlat
sbb
xchg
sbb
cs
ret
lahf
mov
lods
dec
scas
mov
in
xchg
test
fsts
xor
lock
or
movsb
xchg
cs
nop
dec
fldcw
cld
push
or
ljmp
sub
sub
ja
pop
repz
popa
dec
adc
push
scas
add
clc
mov
pop
cmpsb
scas
lcall
fs
out
sbb
cmpsl
dec
fdivp
js
mov
cli
fisubl
dec
and
cmp
int
popa
hlt
adc
add
sub
aaa
shll
xchg
inc
ja
sbb
hlt
testb
sbb
popf
xlat
fsubp
fcomps
xchg
push
sbb
jo
dec
idivb
adc
mov
int3
idivb
shr
popa
cmc
adc
pop
les
ret
fistl
dec
idivl
mov
pop
cwtl
cmp
sti
fimuls
cli
neg
mov
mov
fidivrs
xchg
repnz
pop
andl
aad
mov
xlat
sbb
test
outsl
das
push
cwtl
pop
scas
sbb
scas
jp
and
pop
inc
lahf
shrl
cmp
push
inc
fisubl
fsubs
push
xchg
mov
pop
adc
dec
imul
fs
pusha
mov
push
pop
pop
bound
adc
xchg
repnz
fisubrs
dec
pop
and
movsl
mov
dec
repz
out
xchg
push
hlt
js
dec
hlt
cli
mov
xchg
scas
dec
hlt
pop
sbb
rcr
imul
out
push
pop
jecxz
pop
fidivrs
int
add
sbb
fisubl
loopne
dec
dec
scas
inc
fwait
aad
cmp
clc
push
sbb
mov
js
sub
in
das
cmp
scas
divb
sahf
xchg
outsb
iret
das
push
jae
test
std
in
ldmxcsr
pop
and
stc
mov
lods
mov
into
xchg
xor
lahf
fadds
lcall
adc
lods
cld
and
fbstp
test
inc
loope
cltd
loopne
faddp
inc
ficompl
sub
fbld
dec
cs
and
movsl
xor
sahf
fcmovu
popa
xorl
repnz
xor
dec
loope
mov
bnd
ja
push
repnz
scas
sbb
sbb
mov
xchg
xor
cwtl
mov
scas
test
dec
loopne
rcll
mov
int3
cmp
mov
inc
das
call
xlat
sbb
jbe
lock
cmc
inc
das
push
inc
repz
loopne
shrb
das
mov
mov
movsb
cwtl
pop
fcmovnu
jae
sub
icebp
inc
adc
cwtl
mov
inc
testb
cmp
sbb
fcompl
mov
xchg
test
ret
idiv
aaa
sbb
movsl
shlb
bound
jbe
mov
lods
xchg
insb
add
in
lods
test
adc
sbb
lods
mov
outsb
or
pop
xchg
sbb
mov
push
scas
xchg
bnd
and
lods
sub
lahf
xor
jns
xchg
and
push
and
push
mov
scas
xchg
fsubrl
lods
cwtl
bound
fcom
xchg
repnz
sub
pop
mov
fistpl
cld
sbb
fmul
mov
xchg
push
lds
mov
lods
push
cmp
fwait
sbb
aaa
scas
ja
jmp
pop
pop
cwtl
mov
xchg
jp
xchg
pusha
sbb
scas
movsl
mov
lods
scas
stos
dec
push
pop
xchg
jl
scas
lds
fcoms
lret
iret
lds
into
lcall
rorb
lods
aaa
cmc
loop
cmp
jl
xorl
aam
xchg
scas
pop
dec
xor
repnz
jnp
aam
cmp
mov
dec
in
outsb
lods
pop
lret
cli
ja
lods
lahf
xchg
mov
lods
scas
mov
imul
inc
movsb
ja
fimuls
pop
sub
adc
pusha
cmpsl
aad
lods
les
out
cs
lods
add
adcl
inc
mov
or
mov
aam
loop
lock
push
inc
pusha
push
mov
out
cld
sub
cs
pushf
cwtl
push
dec
lahf
les
aam
jns
insb
jns
push
dec
push
popf
cwtl
pop
pop
adc
pop
loopne
ds
add
cwtl
xor
dec
cmp
ja
hlt
cmp
outsb
sahf
xchg
arpl
mov
mov
fdiv
scas
lock
pushf
mov
lcall
loop
mov
or
imul
cli
aaa
sub
pop
into
mov
shl
xchg
inc
cmp
push
and
jmp
push
loop
jecxz
scas
lret
shl
loopne
scas
push
jmp
pop
pop
and
mov
jae
xchg
mov
fsubrl
xchg
xlat
push
fisubrl
xlat
pop
out
push
pop
imul
jne
xchg
fisubs
ss
sarl
outsl
push
pop
xlat
scas
xchg
cltd
adc
fwait
in
xchg
pop
adc
pusha
sbb
fs
popa
mov
scas
inc
push
rcll
sbb
sub
pop
outsl
cli
scas
pop
push
stc
lahf
imul
push
subb
sub
jmp
test
enter
mov
aaa
mov
jo
ja
test
mov
test
scas
pop
mov
test
scas
jae
test
mov
mov
fildll
test
scas
mov
test
mov
mov
outsl
test
jl
test
scas
mov
cs
jl
test
scas
js
test
scas
out
mov
stos
fdivrs
mov
ds
stc
xor
iret
scas
dec
in
stos
loopne
popf
mov
inc
lret
cwtl
imul
sarb
jp
loop
xchg
xchg
scas
pop
dec
push
fcmovbe
xchg
mov
cltd
das
cmp
popf
cmpsl
adc
dec
mov
test
adc
sarb
insb
scas
enter
cltd
sub
das
push
js
sbb
jae
jne
cmp
pop
das
cmpb
pop
cli
das
pop
mov
and
fdivrl
gs
push
mov
imul
push
pop
mov
lahf
loopne
pop
push
stos
cltd
pop
popf
sbb
dec
scas
push
bound
or
cwtl
insb
push
das
shr
sbb
stc
icebp
das
adc
ret
jbe
mov
mov
mov
fdivrl
aaa
mov
mov
je
mov
mov
mov
mov
int3
mov
mov
fs
mov
mov
mov
repnz
jno
dec
das
jl
mov
jno
dec
das
jl
mov
add
mov
cmp
push
ret
mov
jl
push
ret
mov
ja
mov
mov
mov
call
pop
ret
scas
xchg
or
xlat
fwait
adc
scas
inc
inc
test
mov
push
out
das
adc
push
test
addr16
sbb
fimuls
push
xlat
xor
fstps
mov
sbb
nop
push
scas
ficoms
xchg
mov
fildll
popw
xchg
iret
scas
and
popf
test
push
mov
mov
loopne
scas
push
clc
stos
push
sbb
mov
jle
and
test
scas
xchg
stos
icebp
pop
fldenv
fcompl
aam
jle
scas
xchg
mov
fcmovu
scas
inc
cmp
test
enter
mov
mov
fstpt
loop
dec
test
jl
test
das
idivb
xor
mov
scas
ja
test
scas
out
mov
test
xor
jo
js
test
mov
out
mov
mov
mov
fstpt
divb
test
scas
out
ja
test
test
jl
pop
cmp
test
scas
jp
pop
out
addr16
mov
adc
scas
cld
xor
mov
cmp
outsl
lcall
data16
mov
jae
out
fcoms
adc
cmp
xchg
scas
adc
inc
inc
repnz
cwtl
fimull
scas
sub
pop
ficoml
cwtl
adc
fwait
jnp
mov
hlt
cli
sbb
scas
cmp
xchg
scas
rcl
stos
pushf
cltd
movsl
or
fmul
scas
adc
cmp
jl
push
cli
scas
pop
aam
sbb
pop
shlb
sahf
or
xlat
aad
das
mov
pushf
scas
mov
mov
outsl
add
add
mov
jl
arpl
mov
add
add
outsl
add
add
mov
mov
mov
jbe
push
ret
mov
divb
add
mov
mov
fstpt
pop
add
mov
js
add
add
cld
fidivrs
mov
pop
in
cs
mov
scas
shrl
push
scas
shrb
shlb
mov
call
xchg
sbb
and
jae
and
sbb
test
cmp
inc
xchg
xchg
aad
shll
scas
cli
rcrl
cs
rcll
scas
mov
mov
mov
mov
mov
mov
mov
lods
je,pn
cs
pop
pushf
mov
push
mov
lods
bound
pop
lods
pop
dec
rcrb
pusha
loope
aas
loopne
inc
loope
xorl
lret
scas
lods
push
rcrl
push
lock
push
pop
in
movsl
adc
or
lcall
ss
mov
loop
xor
jp,pn
cwtl
or
aam
rcrb
cs
loopne
add
negl
mov
mov
aad
ficoms
pop
rol
cs
in
pop
pop
fsubs
mov
cs
ljmp
xchg
lods
push
jb
fidivrs
cmpsl
lods
pop
xchg
into
push
mov
cmp
movsl
bound
stos
and
aam
lods
ljmp
or
and
mov
mov
push
lods
pop
lret
xor
cmp
rol
lock
inc
lock
inc
jge
es
pushf
lods
pop
lret
in
dec
shrl
fcomps
lods
pop
loop
lcall
push
lods
test
ret
movsb
sbb
mov
data16
cld
push
dec
fsubrl
adc
in
push
daa
jbe
lods
mov
pop
pop
lret
lods
and
sti
psubsb
mov
lret
repnz
fistl
adc
outsb
push
lods
ficomps
call
pop
xlat
ljmp
xchg
lods
jl
cwtl
pusha
shrl
adc
lods
imul
lret
shrb
into
or
pop
test
push
shrl
dec
xlat
ret
lods
ljmp
mov
lods
dec
fdivs
aas
fwait
call
pushf
inc
xor
pushf
cld
mov
xor
fbstp
ja
pop
sbb
hlt
sbb
pop
out
cli
hlt
cmp
js
mov
sub
fs
fs
mov
mov
loope
ljmp
add
push
pop
jnp
scas
dec
idivb
scas
fdivl
jnp
scas
mov
push
sbb
cli
pop
cs
movsb
jp
cs
pop
stc
cmp
mov
jns
add
shlb
mov
xchg
das
xorl
sarl
sti
nopl
insl
dec
mov
scas
fdivl
sub
or
push
ret
fs
inc
repz
ds
ficoms
out
ss
dec
fwait
aad
aaa
out
push
mov
ja
dec
fidivrl
mov
xor
imull
inc
sbb
arpl
hlt
mull
sahf
push
repnz
jle
movsl
lahf
movsb
sti
das
imul
mov
nop
dec
sub
mov
inc
and
or
inc
xorb
das
fdivrl
jg
mov
outsb
js
push
js
notb
ja
cli
mov
mull
xchg
push
frstor
repz
int
inc
xor
jmp
frstor
xchg
and
mov
mov
mov
dec
mov
out
shlb
div
cmp
mov
xor
or
cmc
sub
js
fnsave
mov
jbe
cmp
sub
xor
cmc
cmp
mov
outsb
imull
cmpsb
inc
cmc
test
mov
cmp
ljmp
aaa
out
ret
cmp
cmc
dec
mov
sahf
cmc
divl
mov
outsb
mov
test
push
xchg
sbb
movsb
pushf
push
fcoml
cs
pop
popa
mov
and
scas
aaa
mov
scas
dec
mov
fildll
jb
cs
sbb
pop
pop
aam
mov
rcrl
test
xor
cmpsl
clc
dec
pop
xlat
xor
mov
insb
fsubs
mov
mov
ficompl
divl
mov
fbld
in
gs
movsb
and
out
mov
negl
mov
rcrl
aam
push
pop
push
imul
pop
push
fisubl
sbb
loopne
js
div
test
mov
sub
mov
scas
xlat
fsubrl
lock
jp
in
pop
lods
push
jl
pop
sbb
lods
xchg
jl
pop
sahf
inc
xchg
mov
cs
clc
hlt
pop
lods
imul
xchg
mov
xchg
les
inc
add
lods
shlb
xchg
pop
push
lods
into
negl
shll
iret
pusha
jo
jecxz
call
out
test
scas
lret
mov
pop
arpl
imul
shl
xchg
repnz
lcall
cmpsb
aaa
icebp
jp
sahf
cmp
in
pop
lahf
sbb
scas
dec
mov
testl
ret
scas
mov
push
mov
cmp
repnz
xchg
jae
arpl
mov
aas
dec
dec
testl
pop
sbb
scas
mov
aad
inc
hlt
push
sbb
iret
hlt
int
mov
das
jbe
sahf
das
add
out
shll
mov
cli
das
shl
xor
cli
mov
dec
mov
cli
mul
aaa
xor
pop
mov
pop
div
pop
mov
jle
fldt
pop
mov
pop
div
mov
xchg
dec
mov
cli
mull
inc
cli
js
je
mov
jbe
dec
cmc
mov
xchg
sub
mov
divl
mov
mov
sub
sub
ja
mov
outsb
negl
dec
cli
js
je
mov
jbe
mov
dec
testb
dec
ja
cli
mov
divl
mov
mov
sub
mul
aaa
xor
loop
xor
cwtl
fnsave
outsb
js
fsubrl
cli
mov
divb
outsb
aaa
pop
ja
fnsave
testl
idiv
jbe
mov
outsb
negb
mov
cmc
mov
pop
dec
cmc
pop
mov
cmc
mov
call
mov
fldcw
gs
jnp
cld
mov
jg
mul
aaa
xor
pop
mov
pop
div
pop
mov
cmc
mov
js
xor
pop
testb
xchg
and
push
addb
xor
mov
outsb
negb
mov
cmc
mov
xchg
sub
sub
ja
hlt
das
mov
xchg
sub
ja
mov
outsb
negl
mov
inc
cwtl
sub
cli
mov
mov
outsb
mov
jnp
divb
mov
divl
outsb
cmp
push
mulb
and
ja
mov
outsb
negl
mov
inc
cwtl
sub
cli
aaa
loop
xor
pop
aaa
mov
cmc
mov
xchg
sub
aaa
loop
xor
pop
ja
pop
ja
mov
xchg
dec
ja
cli
ja
ja
outsb
ja
mov
pop
mov
mov
xchg
cli
mov
mov
lcall
dec
jnp
mov
das
aas
push
cmc
mov
xor
xor
pop
testb
xchg
cmp
fldcw
pop
cmp
cmp
inc
cli
cmp
cmp
outsb
cmp
mov
jle
fdivl
mov
mov
dec
cmc
mov
jle
fdivl
outsb
mov
mov
mov
cli
mov
mov
jnp
push
jle
testb
xchg
cli
cmp
inc
mov
fnsave
js
and
inc
and
cmc
xchg
xor
pop
testb
xchg
sub
mul
divb
outsb
negb
mov
cmc
mov
xchg
sub
aaa
loop
xor
pop
aaa
mov
cmc
mov
xchg
dec
ja
jp
sbb
rcrb
jmp
repz
aaa
and
inc
cli
mov
divl
outsb
cmp
push
mov
jbe
je
cli
mul
aaa
xor
cwtl
outsb
negl
mov
inc
cwtl
sub
cli
mul
divl
outsb
negl
mov
cmc
mov
xchg
sub
mul
cmp
outsb
cmp
mov
cmc
mov
xchg
sub
cmp
cmp
outsb
cmp
and
inc
mov
dec
mov
imull
sarb
xor
dec
mov
dec
testb
loop
xor
pop
testl
testb
mov
cmc
mov
xchg
cli
cmp
inc
mov
pop
mov
mov
xchg
cli
mov
mov
outsb
mov
mov
pop
mov
mov
pop
dec
cmc
xchg
xor
and
inc
and
stos
push
daa
imul
mov
xor
sbb
js
pushf
rcrb
mov
mov
xor
fs
push
sbb
or
xor
repz
fidivrl
push
mov
das
mov
mov
repnz
lods
jae
scas
mov
repnz
roll
scas
cltd
push
or
dec
or
fdivl
pop
pop
dec
aad
out
push
repnz
xchg
mov
mov
or
cld
pop
aad
mov
sbb
push
mov
fldcw
fcompl
scas
adc
fidivl
cmp
cmp
xor
divb
shlb
scas
ja
jae
or
scas
or
mov
mov
and
cmp
pop
cmpsl
sub
mov
scas
sbb
sbb
in
xchg
push
loop
out
jnp
jne
sti
sbb
mulb
mov
fsubp
jl
pop
mov
aaa
push
jne
sti
in
int
mov
fbld
pop
jb
adc
cli
neg
cltd
sahf
push
add
fstp
jmp
sbb
inc
pop
mov
fsubs
xchg
lcall
shrb
jb
sarb
pop
mov
mov
repz
fidivrl
mov
out
cmp
fildll
repz
outsl
and
cmc
cmpsl
mov
push
in
mov
shr
xchg
jo
push
dec
push
pop
pop
push
sub
es
cltd
cltd
sbb
push
outsl
sti
js
in
xor
dec
testb
push
mov
mov
idiv
cmp
xchg
mov
pop
ja
cmp
push
mov
adc
cmp
pop
je
pop
cmpsb
daa
fwait
xchg
imulb
notl
jo
testb
test
jno
push
mov
aaa
test
mov
stc
cmp
xor
test
jno
push
mov
stos
xor
bndldx
mov
outsl
stos
push
mov
jo
idivb
pop
dec
aaa
int
xor
ja
cmp
mov
scas
out
cmp
cmp
cmpsb
xor
js
cmp
mov
stos
fcmovnbe
cmpsb
mov
std
mov
add
not
jo
divb
aaa
arpl
ja
cmp
xor
test
jno
push
mov
pop
js
js
mov
cmp
daa
jno
jge
in
xchg
cmp
outsl
stos
fwait
cmp
inc
jo
int
ja
aaa
arpl
xor
mov
sbb
mull
dec
cmp
cmp
pop
js
imul
call
cmpsb
fidivs
aas
aaa
outsl
pop
stos
xchg
js
add
testb
dec
ja
cmp
pop
mov
mov
idivl
jno
and
or
jno
push
xchg
stos
cli
mov
sub
mov
stos
xor
testb
test
jno
push
mov
js
mov
cmp
mov
cmp
idiv
cmp
xor
in
movsl
imulb
cmpsb
mov
xor
stos
iret
push
ja
jo
mul
mov
xor
ja
mov
jmp
pop
mul
mov
cmp
mov
out
mov
shrl
mov
mov
mov
and
cmp
pop
aaa
arpl
testb
mov
xor
or
cmp
push
mov
ja
mov
stos
mov
in
int
jg
cmpsl
jne
idiv
js
pop
mulb
dec
aaa
dec
es
cmp
inc
push
mov
mov
stc
cmp
xor
js
mov
cmp
xor
in
decb
cli
popf
jmp
outsl
sti
js
stos
xchg
aaa
mov
jno
and
or
jno
push
mov
mov
stc
cmp
xor
stc
cmp
push
xchg
stos
mov
in
mov
mov
mov
jo
mul
mov
aaa
mov
mov
out
mov
pop
sbb
cmp
dec
js
mov
js
je
mov
mov
cmpsb
out
outsl
stos
push
imull
pop
dec
aaa
int
xor
ja
cmp
mov
scas
out
cmp
cmp
cmpsb
xor
js
cmp
mov
stos
fcmovnbe
cmpsb
mov
std
mov
add
not
jo
divb
aaa
arpl
ja
cmp
xor
stc
cmp
push
mov
pop
js
js
mov
js
cmpsl
je
js
mov
not
je
negb
xchg
js
add
testb
xor
ja
mul
mov
dec
dec
test
mov
cmp
inc
push
xchg
stos
mov
in
mov
stos
scas
mov
mov
mov
out
cmp
mov
cmp
pop
mul
mov
cmp
js
movsb
xor
mov
stos
idivb
das
cltd
sub
mov
mov
out
mov
mov
out
cmp
mov
cmp
pop
neg
dec
and
or
jno
push
mov
stos
cmpsb
cmpsb
mov
xor
stos
mov
idivb
cwtl
cmp
ja
mov
testb
mull
jo
js
aaa
push
mov
stos
xor
mov
repz
inc
div
adc
xchg
stos
ret
xlat
jo
test
mov
pop
mov
and
xor
arpl
dec
cmp
and
xor
ja
mov
stos
int3
aaa
cmpsb
enter
aaa
cmp
iret
stos
aaa
xchg
jo
negb
aaa
jo
and
xor
cmp
mov
testb
cmp
pop
cmp
mov
js
mov
xor
stos
clc
je
fstpt
in
pop
ja
mov
ja
jo
divb
aaa
inc
push
mov
imulb
mov
pop
ja
cmp
xor
arpl
stos
outsl
mov
addr16
in
outsl
mov
outsl
cmpsl
jne
mull
jo
neg
cmp
aaa
arpl
dec
ja
cmp
pop
mov
ja
test
in
out
mov
cwtl
cmp
stos
push
out
dec
sbb
sbb
outsl
pop
stos
pop
cmp
cmpsb
xor
aaa
pop
cmp
ja
scas
out
cmp
test
pop
cmp
js
scas
out
cmp
cld
stos
xchg
push
in
aas
push
cld
outsl
enter
notb
aaa
test
jno
push
mov
mov
mov
testl
test
mov
stc
cmp
xor
xchg
xchg
push
shll
mov
pushl
jo
mulb
dec
aaa
int
mov
ja
testl
mul
mov
dec
js
mov
fdivrs
stos
loopne
icebp
cmpsb
paddsb
xchg
stos
cmp
mov
pop
mov
aaa
jno
push
mov
cmp
mov
popa
adc
add
xchg
js
push
dec
mov
stos
adc
aaa
xchg
ja
cmp
jo
mulb
dec
aaa
int
cmp
js
mov
mov
mulb
arpl
or
mov
stc
cmp
xor
in
mov
in
xchg
divb
fwait
div
inc
jo
int
cmp
js
ja
mov
aaa
and
or
jno
push
mov
add
ja
xchg
stos
insb
aaa
mov
pop
push
sub
aaa
imull
iret
stos
xor
test
stc
cmp
push
mov
test
pop
mov
mov
idivl
mov
out
cmp
mov
stos
shlb
cmpsb
mov
cli
ja
shrl
stos
int3
ja
jo
divb
mov
in
out
mov
mov
out
mov
pop
sbb
mov
stos
rcrl
and
decl
stos
fnsave
mov
cmp
inc
push
mov
imulb
mov
pop
ja
cmp
push
mov
add
cmp
xchg
stos
outsl
mull
idivl
outsl
pop
stos
pop
cmp
movsb
xor
aaa
mov
out
mov
mov
idivl
mov
out
cmp
mov
stos
adc
dec
pop
cwtl
push
sbb
outsl
pop
stos
pop
js
inc
jo
int
xor
aaa
pop
cmp
ja
scas
out
cmp
test
pop
cmp
js
scas
out
cmp
cld
stos
xchg
push
in
aas
push
cld
outsl
enter
notb
aaa
test
jno
push
mov
mov
mov
testl
test
jno
push
mov
adc
repz
pusha
push
jbe
mov
mov
icebp
shll
mov
xor
testb
xor
ja
mul
mov
cmp
xor
mov
cmp
ja
inc
jo
int
xor
stos
shll
inc
aaa
test
jo
mulb
dec
aaa
int
negl
cmp
int
js
mull
dec
cmp
testb
js
xor
or
dec
stos
sar
jle
lcall
outsl
xchg
stos
int3
divb
testl
test
jno
push
mov
jo
mov
cmp
js
testb
and
stos
int3
aaa
cmpsb
enter
aaa
mov
enter
aaa
divl
test
stc
cmp
xor
ja
mov
ja
pop
mul
mov
cmp
mov
out
cmp
cld
stos
je,pt
fwait
jge
in
xchg
ja
outsl
stos
fwait
ja
inc
jo
int
js
aaa
arpl
mov
mov
idiv
cmp
xor
arpl
ja
cmp
xchg
xchg
stos
mov
in
mov
stos
scas
mov
jo
idivb
jno
adc
or
jno
push
mov
pop
aaa
test
jno
push
mov
mov
mov
stos
xor
sti
repz
inc
idivl
outsl
xchg
stos
ret
xlat
jo
idivb
in
out
mov
mov
out
mov
mov
xor
mov
sarb
shll
mov
push
js
jo
testb
test
jno
push
mov
aaa
test
jno
push
mov
pop
mov
cmp
push
mov
cmp
xchg
stos
xor
sti
repz
in
cmpb
sarl
or
mov
stc
cmp
dec
push
mov
or
mov
stc
cmp
dec
push
mov
movsl
in
cmpsb
mov
mov
scas
pop
jo
idivb
mov
ja
mov
xor
mov
mov
js
mov
adc
stos
incb
jle
mov
cmc
mov
in
add
aaa
xlat
jo
divb
ja
aaa
mov
cmp
xor
arpl
divl
js
cmp
mov
divb
mov
stos
mov
cmpsb
movsb
outsl
in
mov
aaa
outsl
in
inc
divb
jo
negb
aaa
jno
push
mov
cmp
mov
pop
mov
cmp
pop
js
mov
mov
stos
or
imul
outsl
stos
fwait
aaa
mov
jo
int
negl
cmp
int
js
mov
mov
ja
arpl
or
jno
push
mov
stos
aas
ja
fidivs
aas
mov
pop
stos
xchg
ja
add
testb
xor
ja
mov
jbe
cmp
inc
push
mov
pop
imulb
mov
stos
and
xchg
pop
adc
xchg
jl
cmp
in
xchg
cli
xchg
popf
sbb
outsb
dec
xchg
push
int
pop
push
outsb
mulb
aam
jns
comiss
testb
outsl
sbb
repz
mov
das
lret
repz
shl
repz
cmp
lret
mov
xchg
ja
cmp
repz
dec
mov
movsl
repz
mov
lods
repz
xor
cwtl
adc
shlb
repz
das
inc
repz
push
jno
js
das
xchg
repz
mov
xorl
je
mulb
cmp
add
das
sub
aad
int
mov
and
xor
xchg
rclb
mov
mov
das
out
mov
mov
push
pop
mov
frstor
sbb
sbb
push
mov
sti
mov
vrcpps
mov
mov
fstpt
fdivs
sbb
cwtl
jno
test
mov
test
push
cli
das
divb
stc
divb
mov
jb
cltd
pop
pop
jb
adc
test
or
push
out
dec
call
outsl
ret
cmpsl
pop
movsl
xchg
arpl
xchg
inc
inc
push
insb
cld
in
sub
cmp
sub
dec
rcrl
outsl
out
sub
aam
lods
lahf
sub
ja
outsl
mov
dec
cmp
xchg
xor
lods
jo
test
mov
mov
out
dec
stos
lret
cmc
or
cmp
pop
clc
aaa
cmc
fildll
loopne
jo
fisttps
jo
hlt
dec
and
and
fwait
pushf
push
inc
jbe
movsb
outsl
arpl
movsb
aaa
testb
mov
movsb
or
mov
adc
jl
in
jecxz
mov
pop
mov
negb
je
aaa
xchg
rcl
xor
push
ljmp
shll
ds
mov
imul
mov
movsb
or
xor
xchg
outsb
adc
xor
mov
repnz
fiadds
outsl
adc
jge
jmp
dec
pop
adc
jmp
div
sahf
fmul
mov
aaa
rcll
jg
mov
jb
jno
testl
cmp
js
test
in
jg
adc
cli
in
xor
adc
jbe
jae
inc
testb
xorb
fsubr
sub
mov
cmp
cmp
js
in
je
mov
lret
out
aaa
mov
out
cmp
mov
push
mov
mov
int
inc
sahf
ljmp
fs
fwait
cmp
ret
sbb
arpl
mov
scas
jno
jbe
inc
push
imull
outsb
aaa
cmp
ja
cmpsb
sub
jmp
mov
cs
inc
int3
cmp
enter
ds
sti
dec
mov
out
fs
ret
shr
cmp
mov
or
dec
imul
sahf
dec
fwait
cmp
out
idivb
cwtl
cli
sahf
inc
int3
imul
mov
cld
sbb
ret
shr
outsl
inc
add
js
out
pop
aaa
in
ja
imulb
sbb
adc
mov
inc
pop
inc
js
inc
out
ret
fsubr
mov
cmp
sbb
arpl
mov
mov
jbe
inc
jns
add
xor
pop
cli
pop
aaa
outsb
ja
pop
mov
cmp
xchg
and
inc
int3
imul
shrb
cmp
sahf
inc
int3
js
enter
mov
xchg
out
mov
mov
mov
clc
aaa
dec
mov
aaa
inc
test
out
cmp
mov
inc
inc
fnstsw
cmp
aas
js
cli
inc
int3
mov
les
arpl
or
jno
mov
frstor
shr
cmp
fsubr
aaa
inc
popl
ret
fsubr
mov
js
out
mov
imul
sbb
inc
outsl
divb
sahf
inc
push
imulb
cli
pop
aaa
outsb
ja
pop
jne
int
xor
inc
hlt
out
shrb
cmp
and
mov
ret
shr
lret
dec
mov
jbe
arpl
aad
cwtl
in
xor
adc
aaa
add
ja
popa
mov
dec
inc
mov
cmp
mov
fs
mov
inc
ja
jbe
xor
fdivr
loope
dec
not
mov
mov
lods
inc
sub
ja
sub
out
mov
cmp
sub
mov
pop
cli
mov
shr
mov
out
divb
dec
mov
xchg
mov
std
mov
inc
mov
int3
cmp
enter
ds
sti
dec
mov
out
fs
out
mov
pop
push
outsl
daa
sbb
in
dec
mulb
hlt
aaa
out
arpl
ja
cmp
mov
inc
inc
fnstsw
inc
ljmp
in
js
in
inc
xor
int3
cmp
arpl
or
jno
mov
cmpsl
push
ja
int
xor
inc
mov
xchg
out
dec
inc
add
cli
inc
add
fsubl
xchg
sbb
and
je
call
je
rorl
dec
jbe
mov
sahf
lds
jae
mov
fdivrl
push
push
js
scas
pop
push
xchg
aad
lcall
bound
sbb
xchg
pop
ret
jae
sbb
dec
fcoml
out
out
pusha
frstor
sbb
xlat
fstpl
pop
out
jmp
cwtl
and
jae
xchg
and
fisubrl
pop
fistps
pop
fistpll
push
dec
jae
sbb
xchg
inc
inc
jae
test
scas
testb
ret
pop
outsl
and
pop
mov
rcrb
shlb
out
mov
rolb
jg
push
ret
iret
ror
out
push
iret
mov
adc
clc
rcrb
fidivrs
cltd
adc
rcrl
pop
pop
pushf
stos
inc
in
adc
mov
out
loop
xchg
jne
fcom
or
shrb
divb
push
fidivl
xchg
out
mov
push
jl
mov
hlt
xchg
outsl
xor
aad
cmp
cmpsl
xor
jle
outsl
mov
mov
popa
xchg
pop
sti
in
outsl
push
in
sahf
fcomps
pop
aam
inc
or
idiv
mov
cmpsb
ja
imul
ret
outsb
imull
or
js
shrl
movsb
xor
cs
mov
dec
js
jo
pop
mov
mov
aaa
shlb
scas
mov
xor
scas
pop
ficompl
outsl
xor
js
je
add
in
and
cwtl
or
ficoms
fcompl
mov
cmp
mov
pop
pop
out
das
ret
dec
xor
xchg
push
insl
arpl
das
negb
xor
cltd
push
out
arpl
das
ja
aad
mov
mov
mov
xchg
jno
lret
das
ds
mov
jno
lret
loope
lret
xchg
push
mov
cmp
sbb
insb
out
mov
fnsave
mov
test
inc
cmp
out
push
ja
xlat
jp
out
aaa
lret
pop
mov
mov
lock
test
outsl
adcb
into
shrb
mov
negb
std
push
fnsave
inc
xchg
mov
mov
inc
shll
sbb
add
je
push
out
outsb
ja
mov
push
into
aad
dec
cmp
or
cmpsb
xor
pop
cmp
outsb
out
cmp
test
pop
cmp
outsb
out
cmp
imul
push
es
shlb
cmp
ja
cmpsb
lock
sbb
lahf
jl
testl
js
dec
mov
outsb
lock
mov
push
jns
int
xor
pop
sbb
ja
mov
cli
shlb
xlat
pushf
int
sti
aaa
dec
cli
shlb
push
sbb
pop
dec
cli
adc
popf
fimuls
iret
loope
mov
pop
cli
sbb
clc
outsb
in
inc
ja
xchg
outsl
sbb
or
aaa
pop
mov
gs
div
dec
inc
cmp
mull
jns
int
mov
jbe
cmp
inc
or
cli
mov
fdivl
mov
sbb
pop
cld
cli
mov
cli
into
in
sbb
sbb
iret
cli
mov
mov
divl
aaa
int
xor
sbb
aaa
mov
xor
dec
mov
js
dec
jns
int
cmp
shl
xlat
pushf
int
sti
testl
xchg
cli
scas
cmp
je
cmp
loopne
out
jecxz
aam
pop
mov
xchg
cli
int3
cmp
div
dec
and
js
inc
inc
fwait
mov
mov
jbe
cmp
jl
or
mov
cli
mov
fdivrl
mov
mov
cli
xor
mov
cli
or
pop
and
or
jbe
cli
pop
mov
cmp
aaa
int
xor
cmp
outsb
out
cmp
cmp
cmpsb
xor
cmp
add
lahf
cli
popa
or
pushf
popa
test
pop
sti
dec
aaa
es
shlb
pop
inc
mov
dec
fstl
mov
outsb
imull
cmp
or
cmp
int3
mov
insb
sahf
outsl
xorb
pop
or
cmp
js
ja
mov
cli
cmpsb
add
cli
ds
sbb
push
pop
xchg
cli
mov
sar
cltd
addr16
arpl
xor
js
iret
cli
arpl
xchg
outsl
sbb
ja
aaa
mov
dec
xchg
imull
inc
int3
cmp
divl
or
cmp
js
aaa
cmp
mov
cli
aaa
xchg
pushf
adc
mov
xchg
je
aaa
xchg
sbb
pop
xchg
je
aaa
xchg
popf
mov
mov
mov
xchg
mov
sub
mov
ja
or
aaa
mov
mov
icebp
cmp
xchg
cmp
js
testl
dec
cli
pushl
sahf
fcompl
dec
cli
pushl
mov
pop
xchg
cli
scas
mov
xchg
mov
cmp
lret
mov
outsb
ja
jne
mov
cmp
negl
shlb
int
mov
jbe
cmp
pop
or
mov
cli
push
pushf
sahf
fcompl
dec
cli
push
sbb
push
pop
xchg
cli
scas
negl
pop
pop
cwtl
aaa
sub
pop
lea
cmp
cmp
outsl
and
pop
cmp
outsb
out
cmp
mov
cmpsb
cs
pop
cmp
add
pop
js
outsb
out
cmp
cld
cli
xor
arpl
cld
cli
xor
mov
cli
int3
js
fimuls
adc
jb
pop
ficompl
mov
test
outsb
notl
cmp
and
sahf
int3
mov
mov
mov
mov
testl
aaa
or
js
ja
gs
mov
xchg
cli
scas
mov
mov
mov
mov
int3
aaa
jbe
ficomps
cli
cld
hlt
popf
jns
push
add
std
jl
in
fsubp
int
jp
ja
xor
mov
in
jns
out
testl
jp
js
xor
mov
lds
jne
jl
xchg
jb
and
cmp
lret
adc
mov
test
xchg
insb
push
insb
jo
out
jbe
bound
scas
js
inc
jbe
arpl
pop
pop
adc
jne
fdivp
addl
sbb
jbe
xchg
xchg
and
mov
ja
cmp
shl
and
enter
test
out
cmp
cltd
fbld
ja
xchg
frstor
lock
cmp
and
dec
lock
lret
cltd
loope
fsubrp
jo
out
dec
outsl
lret
cltd
popa
ss
lock
sub
outsl
dec
jo
data16
imul
adc
lock
loopne
mov
movsb
or
iret
push
fisttpll
mov
jbe
mov
outsl
dec
pop
es
mov
or
pop
lock
adc
sub
jb
dec
data16
lret
mov
sbb
jo
in
mov
lret
data16
gs
jns
pop
mov
jbe
adc
outsl
inc
pop
add
xor
cmp
out
ja
int
and
insb
out
neg
mov
xchg
loope
insb
jo
out
jbe
lods
cmc
push
xchg
mov
divl
jne
idivl
sbb
jb
and
cmp
lret
adc
fisubrs
ja
mov
mov
cmc
xchg
fs
jno
add
fs
xchg
js
jbe
fs
and
cmp
dec
jbe
idiv
addl
sbb
jbe
xchg
xchg
and
mov
icebp
cmp
cmc
mov
loop
xchg
mov
fcoms
adc
out
xchg
sbb
out
lock
inc
cmp
mov
mov
js
lods
les
arpl
push
sbb
jo
ja
push
adc
pushf
cmpsb
adc
jne
rcrl
dec
jecxz
out
fisubrs
pushf
sbbl
stos
lret
int3
xor
ja
lret
jecxz
mov
cmp
es
mov
lock
sbb
fdiv
xor
shrb
popf
imul
sbb
mov
sbb
jb
sti
imull
mov
or
andl
decb
xchg
adc
sbb
jno
ja
adcb
movsb
lods
ss
push
add
xor
dec
loop
jmp
cmp
outsb
pop
into
sbb
int
outsb
not
jb
pop
push
xor
add
dec
pop
insb
outsb
ficompl
popf
jbe
cmc
adc
mov
lahf
pop
cwtl
or
push
ja
pop
mov
arpl
mov
bound
jecxz
test
mov
std
mov
pusha
sbb
lret
test
fcompl
fldenv
fildl
and
mov
sub
add
jl
mov
fdivr
jmp
push
pushf
add
pop
mov
push
gs
pop
xor
mov
lahf
inc
rorb
call
out
mov
adc
inc
imul
ja
xlat
push
xorl
pusha
push
out
movsb
lods
xor
pop
lret
out
pop
out
js
cmp
out
inc
ficompl
adc
out
notb
mov
xlat
mov
outsl
mov
mov
jb
je
test
xor
fucom
pop
jbe
test
jno
push
mov
dec
divl
ja
movsb
xor
mov
sbb
mull
dec
cmp
mov
mov
mov
and
mov
cmpsb
sahf
out
idivl
mov
mov
mov
mov
scas
scas
mov
pop
cmp
xchg
je
lea
mov
mov
pop
imull
cmp
xor
test
scas
js
out
cmp
mov
lret
cmpsb
dec
out
js
je
js
mov
dec
aaa
arpl
hlt
xor
cmp
and
sti
mov
jbe
jo
neg
cmp
aaa
in
out
mov
cwtl
cmp
mull
dec
cmp
cmp
pop
js
cmp
int
js
lret
cmpsb
adc
insb
mov
jg
lret
pushf
jns
cmp
pop
mov
aaa
scas
scas
mov
ja
in
push
lret
xchg
ficompl
outsl
xchg
lret
push
lea
negb
aaa
jno
push
mov
mov
jbe
jo
testl
arpl
aaa
stc
cmp
xor
lret
fsubrl
mov
jnp
js
scas
ja
mov
in
inc
lret
jecxz
movsb
xor
lret
fbstp
mulb
dec
aaa
int
ja
ja
mov
xor
testl
mov
jbe
xchg
lret
xor
aaa
decb
xchg
push
mov
aaa
pop
ja
cmp
mov
idiv
sbb
divb
xchg
lret
js
mov
adc
int3
ja
jo
ja
fdivrp
cmp
pop
push
mov
pop
aaa
test
mov
stc
cmp
push
mov
lret
cmpsb
push
out
scas
mov
cmp
cmp
hlt
dec
push
dec
and
xor
fiaddl
outsl
dec
loopne
divl
test
mov
pop
imull
mov
jno
push
mov
dec
divl
js
movsb
xor
mov
shl
cmpsb
adc
dec
notl
mov
aaa
in
push
ja
cli
cmp
mov
js
add
fwait
idivl
scas
cmp
idivb
push
dec
aaa
int
xor
ja
aaa
out
mov
cwtl
cmp
cmp
dec
js
and
xor
lret
cmpsb
inc
out
js
dec
push
js
mov
aaa
cmp
xor
aaa
push
mov
cmp
inc
lret
daa
js
mov
js
jo
idivb
pop
sbb
ja
mov
pushl
pop
mul
mov
cmp
push
dec
js
cmp
pop
mov
lret
cmpsb
sarb
xchg
mov
aaa
dec
js
ja
and
mov
or
pop
and
xchg
mov
clc
outsl
enter
loop
divl
divb
ja
aaa
mov
cmp
push
mov
jno
push
mov
pop
mov
jbe
xor
loopne
scas
cmpsb
adc
pop
cli
xchg
xchg
sbb
mov
in
push
mov
cmp
cmp
enter
lret
mov
xchg
jo
int
xor
ja
sbb
mov
aaa
dec
test
arpl
xor
mov
lret
cmpsb
adc
cwtl
cli
xchg
je
aaa
add
dec
aaa
es
ja
and
dec
mov
mov
mov
mov
aaa
mov
idivb
dec
dec
aaa
int
cmp
js
mov
cmp
pop
neg
ja
stc
cmp
inc
push
mov
and
aaa
stc
xchg
lret
cmpsb
xchg
jno
ja
cld
lret
fcompl
cmp
mov
mov
jnp
mov
lret
int3
mov
outsl
enter
mov
jo
mul
xor
or
mov
stc
cmp
dec
push
mov
loope
arpl
or
mov
stc
cmp
dec
push
xchg
lret
cmpsb
xchg
mov
fldt
xor
dec
jg
ja
mov
or
lret
pop
ljmp
add
testb
xor
mov
push
dec
test
mov
out
mov
mov
xchg
cmpsb
inc
out
cmp
dec
mov
js
mov
int
mov
scas
mov
cmp
push
and
adc
xchg
lret
aaa
xlat
jo
divb
ja
aaa
mov
cmp
push
mov
mov
stc
cmp
xor
jbe
xor
sarb
dec
mov
mov
mov
in
push
mov
jnp
popf
sub
outsl
dec
fnstsw
push
in
sub
aaa
int
xor
ja
sbb
mov
aaa
dec
test
arpl
negl
mov
mov
mov
in
pop
hlt
xor
fcmovbe
mov
aaa
mov
lret
nop
je
xor
lret
mov
xor
mov
out
cmp
ja
cmp
pop
mov
mov
jbe
mov
mov
js
mov
lret
cmpsb
xchg
mov
fsubrl
divl
scas
scas
ja
js
cmp
xor
fisubrl
outsl
xchg
lret
xor
dec
test
mov
stc
cmp
dec
push
mov
or
mov
stc
cmp
dec
push
mov
mov
out
ja
xchg
lret
xor
dec
jg
ja
mov
or
ficoml
je
notl
jo
test
stc
cmp
xor
jbe
jo
mov
push
mov
popa
and
aaa
stc
cmp
xor
mov
lret
cmpsb
push
out
scas
mov
cli
mov
pop
mov
aaa
mov
mov
lret
out
inc
add
mov
xchg
lret
aaa
xlat
jo
divb
ja
aaa
mov
cmp
xchg
mov
js
cmp
xor
jbe
mov
lret
cmpsb
sarb
dec
hlt
dec
push
mov
mov
arpl
hlt
xor
fstpt
outsl
dec
popa
mov
push
js
add
aaa
fdivrs
ja
xchg
mov
aaa
xor
testl
mov
out
cmp
cld
lret
cmpsb
sarb
xchg
mov
aaa
pop
fcmovbe
ja
push
hlt
xor
sbb
ja
pop
lret
mov
jo
testb
dec
ja
cmp
pop
mov
mov
divl
jbe
xor
cmp
cmp
js
xchg
mov
lret
cmpsb
jmp
jge
mov
jnp
imull
jg
ja
mov
inc
and
lret
shrl
outsl
pop
lret
cmpsb
xor
negb
pop
aaa
es
out
cmp
mov
cmpsb
xor
negl
pop
cmp
scas
out
cmp
mov
lret
cmpsb
sarb
dec
hlt
dec
xchg
imul
outsb
push
ja
cmpsb
in
dec
mov
outsb
filds
mov
pushf
cmp
jo
negb
mov
pushl
pop
mov
mov
idivl
push
dec
cmp
and
xor
ja
mov
lret
cmpsb
dec
out
aaa
xchg
je
aaa
mov
dec
mov
scas
mov
mov
movsl
lret
cmp
iret
lret
aaa
jo
testb
test
jno
push
mov
imull
mov
popa
adc
mov
mov
out
cmp
cld
lret
cmpsb
sarb
xchg
mov
shll
ja
imul
dec
mov
out
test
xchg
lret
mov
xor
aaa
or
mov
stc
cmp
xor
arpl
ja
cmp
xor
test
jno
push
xchg
lret
xor
idiv
dec
lret
jbe
pop
aaa
or
cmp
pop
mov
inc
and
lret
outsl
cmp
cmpsl
jne
cmp
mov
pop
mulb
dec
aaa
int
xor
ja
cmp
mov
mov
jbe
mov
mov
js
mov
lret
cmpsb
xchg
mov
fldt
divl
mov
or
mov
mov
loopne
movsl
mov
outsl
enter
mov
loope
arpl
or
mov
stc
cmp
dec
push
mov
loope
arpl
or
mov
stc
cmp
dec
push
adc
cmpsb
lds
loope
mov
scas
aaa
loope
mov
scas
mov
mov
cmpsl
xor
outsl
sti
negl
shll
cmp
js
aaa
int
xor
xor
in
out
mov
mov
mov
lret
cmpsb
sarb
pop
hlt
dec
shrl
cmp
cmp
mov
lret
inc
out
pop
jl
lret
inc
outsl
cmpsl
mov
pushf
aaa
add
testb
xor
ja
mul
mov
cmp
xor
mov
cmp
dec
dec
js
xor
jbe
mov
lret
cmpsb
push
out
scas
mov
cli
aaa
ja
mov
aaa
mov
mov
jnp
cmp
pop
jmp
js
xchg
lret
adc
ja
xlat
jo
aaa
inc
push
mov
and
aaa
stc
cmp
xchg
mov
pop
mov
js
testl
call
cmpsb
push
out
scas
mov
cli
mov
pop
mov
aaa
mov
jg
mov
out
lret
xchg
mov
outsl
dec
fnsave
mov
mov
out
mov
cwtl
cmp
neg
fs
cmp
pop
push
mov
lret
cmpsb
push
out
scas
mov
cmp
lock
aaa
jno
mov
js
scas
mov
xchg
push
lret
pusha
cmp
outsl
xchg
lret
int3
jo
divb
dec
push
mov
xor
or
mov
stc
cmp
dec
push
mov
xor
or
lret
cmpsb
push
out
scas
mov
cmp
int3
mov
aaa
mov
scas
scas
ja
mov
mov
loop
sbb
movsl
lret
int3
js
outsl
enter
js
jo
testb
test
mov
stc
int
loop
xchg
jo
mov
xor
or
cmp
push
mov
ja
mov
lret
cmpsb
xchg
mov
fldt
xor
jg
cmpsl
js
jbe
xchg
outsb
lret
adcb
xor
cmp
xor
aaa
mov
cmp
xor
arpl
divl
js
cmp
mov
mov
cmp
lock
cmpsb
adc
pop
cli
shlb
xor
xchg
mov
mov
mov
out
lret
or
mov
lret
mov
es
jo
aaa
inc
push
mov
add
or
divl
push
mov
pop
mov
js
testl
call
cmpsb
push
out
scas
mov
mov
aaa
pop
fcmovbe
ja
imul
dec
mov
leave
push
inc
fwait
aad
outsl
sti
ja
lret
mov
jo
int
negl
cmp
int
js
mov
mov
ja
mov
mov
idiv
cmp
pop
push
xchg
lret
xor
ja
dec
lret
divl
scas
scas
ja
js
cmp
add
push
dec
lret
mov
mov
jo
mulb
scas
out
cmp
ja
cmpsb
xor
mov
cmp
mull
scas
out
cmp
js
cmpsb
xor
mov
shl
cmpsb
adc
dec
notl
mov
aaa
outsb
push
ja
cmpsb
in
dec
mov
leave
push
dec
lret
adc
xchg
lret
cmp
jo
divb
js
aaa
mov
cmp
xor
idiv
cmp
pop
push
mov
ja
mov
lret
xor
cmp
dec
lret
js
pop
aaa
mov
js
cld
lret
mov
js
adc
xchg
lret
clc
jo
divb
push
mov
pop
mov
ja
testl
test
mov
stc
cmp
xor
dec
dec
mov
lret
cmpsb
dec
out
mov
add
dec
aaa
arpl
notl
sbb
mov
cli
mov
lret
add
std
jbe
jo
aaa
cmp
ja
cmp
pop
mov
xchg
idivl
mov
xor
mov
lret
cmpsb
lds
pop
mov
in
mov
mov
ja
idivb
mov
daa
push
ja
dec
nop
jbe
xor
testb
xor
ja
js
mov
mov
divb
cmp
xchg
mov
mov
out
idivb
lret
divl
scas
scas
ja
js
cmp
add
push
dec
lret
jbe
outsl
cmp
mov
cmp
dec
push
mov
xor
or
mov
stc
cmp
dec
push
mov
xor
or
lret
cmpsb
push
out
scas
mov
cmp
int3
mov
aaa
mov
scas
scas
ja
mov
mov
push
fstl
lret
idivl
ja
jo
idivb
mov
jbe
jo
mov
cmp
mull
dec
cmp
and
xor
ja
mov
lret
cmpsb
sarb
xchg
mov
shll
jno
testl
lret
idivb
neg
jo
mulb
dec
aaa
int
mov
ja
mov
mov
cmp
xor
mov
cmp
insb
cmp
mov
lret
cmpsb
xchg
jno
cmp
ja
mov
aaa
pop
mov
cmp
mov
mov
pop
dec
mov
js
outsl
cmp
jo
xchg
js
add
aaa
fdivrs
ja
testb
and
xor
mov
cmp
mov
out
mov
int3
js
dec
out
js
je
mov
aaa
es
ja
cli
not
mov
and
xchg
lret
ja
enter
mov
idiv
cmp
xor
arpl
js
cmp
xchg
dec
negl
jbe
test
mov
stc
cmp
push
mov
movsl
imul
cmpsb
popa
test
int
not
aaa
mov
arpl
xor
lret
dec
fisubrl
dec
lret
xor
or
mov
stc
cmp
dec
push
mov
or
mov
stc
cmp
dec
push
mov
aas
lea
mov
lret
ljmp
ja
cmpsb
in
dec
mov
leave
pop
dec
lret
adc
xchg
lret
cmp
divb
push
mov
pop
mov
jbe
jo
mov
push
mov
popa
adc
or
js
ja
mov
lret
cmpsb
sahf
out
xchg
decb
arpl
mov
aaa
pop
mov
in
dec
lret
cmpsl
jno
xchg
lret
xchg
outsl
in
xorb
jo
testb
test
jno
push
mov
jno
push
mov
pop
mov
cmp
pop
mov
lret
cmpsb
inc
out
mov
dec
mov
int
in
dec
ja
div
xor
lret
js
outsl
xchg
lret
mov
xor
aaa
or
mov
stc
cmp
pop
push
mov
pop
ja
cmp
push
mov
add
cmp
xchg
lret
cmpsb
xchg
jno
testl
aaa
loope
mov
scas
mov
imul
ja
pop
lret
mov
jo
testb
dec
ja
cmp
pop
mov
mov
js
arpl
or
mov
stc
cmp
pop
push
xchg
lret
xor
js
dec
lret
divl
scas
scas
ja
cmpb
dec
mov
lret
pushl
mulb
scas
out
cmp
ja
cmpsb
xor
mov
cmp
mull
scas
out
cmp
js
cmpsb
xor
mov
popa
or
cmpsb
sbb
mov
jbe
test
in
dec
aaa
outsb
push
ja
cmpsb
in
dec
mov
leave
pop
sbb
xor
lret
jbe
arpl
js
cmp
xor
xor
mov
jl
divl
push
mov
popa
and
ja
cmp
xor
xor
mov
lret
js
mov
aaa
mov
mov
lret
cmpsl
jno
xchg
lret
test
lret
fst
jo
divb
ja
aaa
mov
cmp
xor
arpl
divl
js
cmp
mov
cmp
pop
mov
lret
cmpsb
adc
cwtl
cli
xchg
mov
pushf
ja
mov
aaa
dec
mov
ja
cli
not
mov
and
xchg
lret
js
in
add
mov
xor
aaa
or
jno
push
mov
or
cmp
push
mov
imull
xchg
lret
xor
ja
dec
lret
jbe
pop
aaa
or
cmp
mov
mov
pop
dec
mov
lret
fbstp
mulb
dec
aaa
int
cmp
js
mov
cmp
pop
neg
fs
cmp
xor
arpl
lret
cmpsb
push
out
scas
mov
cmp
lock
aaa
jno
mov
js
scas
mov
imul
jbe
pop
lret
fwait
inc
jo
int
xor
aaa
pop
cmp
ja
scas
out
cmp
test
pop
cmp
js
scas
out
cmp
cld
lret
cmpsb
sarb
adc
dec
mov
int
in
dec
ja
outsb
push
mov
sbb
mov
cli
js
shrl
lret
cmp
divb
xor
jbe
jo
mov
push
mov
pop
imulb
cmp
xor
mov
lret
cmpsb
xchg
jno
mov
mov
aaa
popa
cmp
cmpsl
jbe
xor
mov
je
xchg
mov
cwtl
jbe
pop
mul
mov
xor
ja
mul
mov
cmp
xor
mov
cmp
mov
or
lret
cmpsb
push
or
dec
jg
lret
xchg
mov
jnp
imull
pop
mov
outsl
dec
mov
or
xchg
jo
int
xor
ja
sbb
mov
xchg
idivl
dec
dec
cmp
cmp
pop
js
testl
lret
cmpsb
adc
dec
notb
mov
aaa
es
ja
cli
not
mov
and
xchg
lret
mov
pushl
testl
ja
js
mov
cmp
pop
neg
je
test
mov
stc
cmp
xor
arpl
lret
cmpsb
sahf
out
cmp
lret
push
mov
aaa
pop
cmp
ja
js
mov
push
fstpl
lret
jbe
outsl
cmp
jo
mulb
scas
out
cmp
ja
cmpsb
xor
mov
cmp
mull
scas
out
cmp
js
cmpsb
xor
mov
shl
cmpsb
adc
dec
notl
mov
aaa
outsb
push
ja
cmpsb
in
dec
mov
leave
pop
dec
lret
adc
xchg
lret
cmp
jo
divb
js
aaa
mov
cmp
inc
mov
jl
divl
push
mov
popa
and
or
jno
push
xchg
lret
xor
cmp
dec
lret
js
pop
aaa
mov
js
cld
lret
mov
js
adc
xchg
lret
clc
jo
divb
xor
stc
cmp
xor
arpl
or
cmp
push
mov
mov
movsb
xor
lret
cmpsb
dec
out
mov
mov
dec
mov
ja
cli
not
mov
and
xchg
lret
js
enter
mov
mov
jae
jo
aaa
or
jno
push
mov
ja
cmp
push
mov
imull
adc
cmpsb
xchg
mov
mov
jg
lret
daa
shll
mov
sbb
xor
mov
in
mov
jo
int
negl
cmp
int
js
mov
mov
divb
cmp
jl
js
cmp
pop
push
xchg
lret
xor
idiv
dec
lret
push
mov
aaa
pop
cmp
ja
js
mov
push
fstpl
lret
jbe
cmpsl
mov
sbb
int
xor
aaa
pop
cmp
ja
scas
out
cmp
test
pop
cmp
js
scas
out
cmp
cld
lret
cmpsb
sarb
adc
dec
mov
int
in
dec
ja
outsb
push
mov
sbb
mov
cli
ja
shrl
lret
cmp
divb
push
mov
pop
mov
jbe
jo
mov
push
mov
pop
imulb
cmp
xor
mov
lret
cmpsb
sahf
out
cmp
lret
push
mov
aaa
pop
mov
notl
cmp
mov
cli
div
shrl
lret
and
ja
cmp
push
mov
add
cmp
cmp
xor
cmp
mov
cmp
mov
lret
cmpsb
sarb
xchg
cmp
mov
aaa
cwtl
cli
shlb
imul
dec
mov
leave
pop
dec
lret
js
in
inc
cmp
int3
js
jo
aaa
mov
stc
cmp
xor
arpl
jno
push
mov
popa
adc
idiv
cmp
xor
in
mov
out
js
xchg
lret
jbe
cmpsb
aaa
mov
scas
scas
ja
idivb
mov
daa
pop
dec
lret
ja
outsl
dec
fnstsw
mov
mov
out
mov
pop
sbb
test
cmp
push
dec
js
cmp
pop
mov
lret
cmpsb
lds
pop
mov
cmp
mov
cmp
jg
mov
mov
arpl
xchg
je
mull
loop
outsl
cmp
dec
or
sbb
or
ja
mov
mov
dec
or
dec
mov
mov
icebp
cmp
dec
or
mov
mov
fdivl
idiv
std
aas
cltd
test
pop
cld
sti
mov
cli
subps
jl
cli
pop
testb
cmp
add
sub
mov
jbe
outsl
xor
dec
mul
cmp
push
jns
int
ja
mov
cli
xchg
pushf
adc
cwtl
sti
dec
cli
adc
sbb
rcrb
xchg
and
xchg
sbb
out
cli
xor
cli
add
clc
outsl
xor
fcomi
sub
or
sbb
or
inc
outsl
cmp
arpl
cmp
cmp
jbe
cmp
inc
or
cli
mov
fdivl
mov
sbb
pop
cld
cli
mov
cli
cmovl
jl
cli
xchg
mov
subl
outsl
pop
or
jbe
sbb
dec
out
mov
cwtl
sbb
adc
out
mov
cwtl
cmp
cmp
pushf
adc
pop
fisttpl
sarb
push
sbb
pop
xchg
je
cmp
pop
inc
cld
fnsave
cmp
ja
cli
fwait
cmp
fmul
outsl
sub
js
sahf
inc
int3
mov
js
xor
fdivrs
and
dec
mul
mov
cli
xor
arpl
cld
cli
xor
mov
cli
int3
js
fimuls
sbb
sbb
cli
mov
negb
and
pop
cmp
outsb
out
cmp
call
int
xor
cmp
add
lahf
cli
fnstsw
cmpsl
pushf
sbb
scas
push
mov
idivb
pop
inc
aaa
int
lock
sti
dec
mov
outsb
mov
add
negl
push
sub
mov
jo
js
outsl
sbb
mov
mov
inc
mov
jl
divl
or
cmp
or
js
ja
mov
cli
ds
pushf
push
or
dec
fimuls
cmpsb
rcrb
cld
cli
mov
cli
mov
cli
push
testb
clc
outsl
add
ja
sub
or
xchg
outsl
push
add
hlt
outsl
xor
js
sbb
mov
jbe
mov
cli
push
adc
mov
push
sbb
pop
dec
cli
adc
popf
fimuls
mov
sbb
cli
pushf
mov
outsl
ja
outsl
sbb
dec
sub
idivb
int
cs
pop
sbb
adc
out
mov
cwtl
cmp
shlb
pushf
int
sti
ja
cli
shlb
scas
mov
xchg
je
mov
popf
mov
std
daa
lea
cli
scas
mov
outsb
pop
cli
pop
mov
mov
jo
notl
or
xchg
outsl
sbb
mov
jbe
sbb
or
js
testb
cli
scas
negl
xchg
cli
scas
negl
xchg
pop
mov
mov
cli
xor
lock
cli
loop
aad
xchg
cli
pop
push
loope
cmpsb
loope
arpl
dec
mov
testl
mov
mov
mov
cli
js
sahf
fcompl
dec
cli
js
dec
cli
sarb
pop
xchg
cli
scas
js
xchg
je
js
jo
cli
inc
js
aad
xchg
cli
push
js
outsl
inc
or
ja
sbb
mov
jbe
pop
mov
dec
out
mov
and
xor
ja
pusha
arpl
mov
mov
mov
mov
mov
cli
mov
or
jge
popa
inc
pop
out
outsb
neg
aad
cmpb
adc
outsb
ja
aad
add
fstl
pop
cmp
outsl
mov
xchg
sbbl
hlt
in
enter
xchg
sbbl
xchg
lds
mov
out
clc
cmp
and
notb
mov
mov
fdivl
xabort
negb
inc
jno
insb
jo
pushf
orl
inc
jb
mov
mov
jnp
out
jbe
jnp
out
movsb
lods
xor
jo
test
mov
push
jp
ja
jnp
inc
dec
mov
arpl
out
notl
int
dec
loop
mov
dec
ja
fs
arpl
adc
mov
jbe
cli
dec
inc
mov
out
aas
idiv
mov
popa
mov
jb
dec
loope
and
lret
popa
add
stos
out
idivl
adc
xor
cwtl
aas
cli
mov
sahf
popa
into
fsub
ret
ja
lret
and
or
push
ja
pop
shll
out
idivb
mov
ja
push
jnp
out
and
jnp
out
sti
cld
and
mov
xor
out
inc
loop
cltd
scas
push
jno
adc
mov
mov
jbe
mov
mov
or
jb
dec
jecxz
pop
mov
testb
dec
stos
out
ja
cli
mov
fistl
int
aas
idiv
mov
mov
push
dec
shll
imul
repnz
mov
pop
mov
xchg
and
jle
mov
insb
push
pop
xchg
push
pop
divb
lods
xchg
and
sbb
idivl
imul
es
outsb
jnp
ja
xchg
and
out
xchg
rorb
dec
aam
mov
jle
in
inc
dec
outsl
xor
cmpl
aad
fisubl
sbb
mov
pop
adc
xlat
jecxz
jb
in
les
adc
fcoms
cmp
sbb
or
nop
inc
mov
jb
daa
cld
shll
outsl
std
jbe
popf
pop
pop
loopne
dec
out
cmp
loope
xor
popa
into
stos
jmp
outsl
jbe
fsubrl
jmp
xchg
dec
sub
dec
pop
fcoms
rorb
sti
arpl
in
adc
pop
jmp
in
xchg
push
scas
out
popa
psubusb
aad
out
sti
loope
in
pop
mov
and
adc
test
daa
fs
xor
mov
cmp
sub
inc
mov
out
loopne
lock
or
fs
sub
ja
sbb
push
gs
pop
aam
pop
hlt
jbe
pop
adc
mov
adc
iret
inc
imul
mov
aam
std
jbe
pop
pop
imul
sbb
jo
dec
aas
call
loope
rcrl
out
cmp
ljmp
out
dec
loopne
orl
fwait
pop
addr16
mull
pop
sub
xchg
out
xor
xchg
jb
dec
loop
lahf
push
orl
dec
ja
push
shll
push
push
lret
js
lahf
roll
jo
bound
decl
push
adc
insb
cld
cmc
mul
add
fisubrs
pop
jmp
sub
lcall
loope
mov
sub
clc
out
addr16
pop
outsb
mov
jbe
sub
adc
mov
jne
scas
cwtl
sbb
pop
mov
ja
mov
je
clc
testl
pop
and
xchg
mov
pushf
jbe
jno
js
dec
pop
mov
mov
sbb
int
ja
idivb
add
cmpsb
cld
jno
cmp
outsb
pop
js
cmpsb
sub
cltd
in
sbb
ja
mov
jo
jbe
test
icebp
dec
int
inc
jno
cmp
and
xor
sbb
cmp
mov
mulb
movsb
mov
adc
jl
cmp
mov
mov
sbb
mov
adc
jnp
idivl
int
mov
jno
cmp
mov
mov
fdivl
adc
divl
decl
mov
dec
divb
xchg
lahf
mov
push
cmp
cli
mov
js
dec
xor
sbb
js
pop
dec
or
sbb
cmp
int
cmp
jno
cmp
cmp
pop
mov
ja
xchg
sbb
cmp
mov
sahf
divb
bswap
ret
jno
cmp
enter
jbe
jno
mov
sbb
js
mov
dec
or
cmp
xor
int
js
xchg
jno
cmp
divl
mov
cmp
cmp
xchg
cmc
mov
dec
loop
or
testb
enter
xchg
divb
cmp
pop
ja
cmp
mov
enter
notl
cmp
divb
js
int
cli
ljmp
lcall
xor
lret
mov
in
push
add
and
xchg
or
sahf
loope
mov
cmp
loope
mov
sbb
outsb
sub
sbb
idivb
pop
mov
int
mov
cwtl
js
mov
pop
mov
sbb
cmp
or
test
icebp
jae
xchg
int
neg
jno
cmp
mov
sbb
mulb
mov
negb
push
int
idivb
jno
cmp
mov
mov
aaa
xchg
jno
outsl
sbb
aaa
xchg
mov
mov
testb
mov
repz
aaa
inc
jno
cmp
cli
mov
js
imull
ss
sbb
js
inc
and
or
sbb
inc
adc
int
adc
jno
cmp
mov
mov
aaa
mov
or
mov
mov
mov
dec
divl
dec
fsubp
bswap
jno
cmp
mov
enter
fmull
mov
outsl
sbb
mov
mov
dec
aaa
mov
mulb
fmul
sahf
mov
jno
cmp
cmp
mov
mov
sbb
mov
jno
xchg
sahf
divb
mov
divb
cmp
in
pop
mov
je
mull
cmp
cmp
cmp
int
xchg
or
in
pop
mov
je
cmp
aaa
mov
jo
inc
fs
incl
adc
jns
jno
cmp
pop
xor
cli
out
cmp
cli
sbb
js
mov
fstpt
pop
clc
xor
pop
cmp
int
js
cld
jno
cmp
inc
pop
js
cli
mov
mov
sbb
cmp
mov
sbb
or
testb
ljmp
fstl
push
mov
in
jno
xchg
outsl
and
mov
divb
mov
aaa
sarl
mov
mov
mov
testl
fisubs
jb
mov
fisttpl
js
fidivs
js
push
xor
and
in
aaa
mov
fstpt
push
clc
xor
push
mov
fnstsw
mov
test
cmp
arpl
mov
clc
xor
ljmp
sahf
divb
push
xor
xor
jno
cmp
mov
mov
cmp
xor
mov
dec
mov
jbe
divb
xchg
popa
mov
mov
cs
jno
jns
mov
dec
sahf
xchg
daa
fwait
test
js
cmp
jno
mov
mov
outsl
aaa
jbe
cltd
mov
ficoms
push
adc
notb
jno
adc
int
inc
cltd
jo
mov
push
fs
divl
push
sti
jno
cmp
jno
ss
sti
jno
mov
pushf
jbe
sahf
jno
mov
enter
cmp
aaa
push
rorl
cmp
mov
rorl
ror
cmp
addr16
mov
adc
push
cltd
jo
mov
cmp
clc
std
jge
xchg
mov
std
aad
mov
clc
jle
mov
mov
push
inc
mov
aas
mov
mov
mov
std
aad
mov
clc
sti
mov
divl
movsb
mov
aaa
inc
push
inc
mov
orb
mov
jns
clc
std
in
jno
push
aam
push
arpl
mov
js
push
jns
mov
add
jbe
sti
jno
xchg
push
fs
divb
push
sti
jno
aaa
push
enter
ss
sti
jno
mov
mov
testl
loop
push
adc
mov
mov
jno
mov
mov
addr16
adc
mov
jno
adc
outsl
notl
jno
xchg
push
and
xchg
xchg
fs
mov
jns
adc
push
ror
notb
std
iret
je
mov
mov
clc
jle
mov
mov
push
inc
mov
aas
mov
mov
push
jbe
aad
divb
movsb
xchg
add
mov
inc
inc
int
nop
sbb
mov
into
or
mov
pop
jb
xchg
stc
dec
js
pop
cmp
cli
js
js
mov
inc
jbe
shrd
push
inc
and
pop
aaa
out
repnz
testb
in
and
mov
cmp
arpl
xor
and
mov
outsl
jbe
xor
push
cli
pop
pop
pop
mov
add
ljmp
cld
jno
cmp
inc
pop
js
cli
mov
mov
and
scas
cmp
mov
int
js
idivb
xchg
aaa
jbe
jb
and
aaa
xchg
xor
cli
out
cmp
xor
and
mov
and
arpl
clc
xor
push
mov
or
mov
mov
js
jbe
push
mov
inc
xor
mov
fwait
aaa
xor
xchg
inc
inc
jno
mov
inc
xor
negl
inc
inc
jno
outsl
inc
xchg
jo
mov
xorb
xchg
mov
shlb
xor
aaa
jg
mov
enter
xor
testl
ja
outsl
lds
mov
idivl
divl
inc
xor
fwait
cmp
int3
inc
inc
dec
mov
clc
fdivrp
mov
cmp
push
push
cltd
sub
sbb
jno
mov
gs
js
js
push
jns
mov
add
jbe
sti
jno
xchg
inc
inc
jno
jg
xchg
jo
aaa
xchg
inc
inc
js
js
dec
jno
mov
push
ret
popl
jno
fiadds
mov
jno
mov
shlb
jbe
inc
inc
jno
dec
inc
xchg
repnz
int
jg
xchg
jno
aaa
xchg
movb
pop
xchg
mov
xor
int3
fwait
outsl
js
inc
cwtl
mov
xor
push
inc
mov
cmp
jl
xchg
mov
mov
clc
clc
cmp
jl
movsb
mov
idiv
dec
fistpl
arpl
inc
arpl
cmp
shll
xor
jno
fidivrs
mov
sub
js
sbb
sar
xchg
lock
xor
aas
jno
movl
jae
in
pop
xor
sbb
inc
mov
fldl
dec
jno
cld
js
js
divb
sti
jno
xchg
js
mov
jno
mov
xchg
mov
mov
mov
lock
cld
xchg
js
arpl
xchg
insb
mov
push
aad
aam
fists
lret
sbb
divb
out
xchg
cltd
pop
outsl
fisubs
mov
lods
sbb
pop
test
cmpsl
lret
leave
out
insl
mov
gs
insl
add
push
mov
and
pushf
mov
or
sub
and
lret
leave
jmp
test
jl
mov
mov
cmpsl
outsl
stos
lret
pop
ljmp
jl
mov
mov
mov
pop
stc
addr16
insl
dec
mul
aaa
jno
mov
and
inc
pop
mov
mov
clc
jae
or
dec
fdivl
aas
mov
sbb
sahf
pop
jo
shr
mov
push
mov
out
aam
and
fistpl
push
sbb
daa
xchg
jl
pop
jo
inc
fwait
cli
aad
mov
push
xlat
mov
divl
dec
clc
notb
add
sahf
xor
mov
jle
lea
ja
in
mov
idivb
xchg
stc
inc
push
aas
adc
jns
int
xchg
jno
movb
int3
mov
lock
ja
or
dec
js
xchg
sub
shrb
mov
jns
mov
jbe
pop
aam
aad
jbe
test
fdivr
lock
js
mul
adc
pop
ficompl
rcrl
sub
pop
cwtl
sbb
sbb
outsl
jae
sbb
and
test
pop
jmp
in
push
arpl
lock
outsl
data16
xor
cmpl
ror
mov
scas
negb
xchg
sub
negl
xchg
push
jmp
adc
leave
sahf
cld
sbb
mov
add
or
out
loop
movsl
gs
mov
aaa
fstpl
popa
fildll
gs
sub
and
fdivl
mov
push
out
mov
mov
fucomi
mov
arpl
cmp
stos
push
rcrb
mov
movsb
pop
adc
scas
mov
lret
movsb
dec
cmpsb
cli
cmp
push
ret
inc
cmp
test
out
aaa
xchg
push
xor
cwtl
sbb
pop
pop
dec
mov
mov
sub
arpl
jne
push
push
lock
jecxz
pop
lcallw
jbe
xchg
sbb
xchg
jbe
pop
gs
sbb
xchg
pop
cltd
leave
push
jl
loop
jbe
sub
dec
fstpl
fsubs
ret
aaa
aas
div
insl
sti
lock
cmp
sbb
and
and
xchg
repnz
mov
lock
pop
mov
xchg
xchg
mov
pop
loop
cmp
sub
inc
fists
aaa
xchg
adc
ja
or
xchg
inc
stc
aad
ss
jecxz
push
pop
xchg
ljmp
sbb
sti
test
out
xabort
mul
mov
out
lock
cmp
lret
xchg
sub
mov
icebp
sti
jbe
mov
fcmovu
cwtl
pop
popf
jp
mov
inc
out
cmc
mul
or
and
lock
hlt
cmp
pop
lds
and
and
ja
inc
aaa
in
aaa
arpl
jg
ja
inc
cmp
jne
mov
shlb
fdivrs
add
sti
fisubrs
aaa
test
inc
jo
sbb
jne
andb
mov
bound
jne
add
fdiv
sub
mov
xchg
adc
sbb
xchg
inc
mov
cltd
in
ja
clc
mov
pop
add
ja
xchg
rolb
imul
iret
fwait
cmp
pop
out
add
js
call
fisttpll
aaa
aad
shlb
xchg
ja
xchg
and
ja
xchg
in
ds
ja
clc
xchg
pop
sub
out
and
xchg
xchg
pop
xor
mull
out
shl
xchg
add
pushf
mov
icebp
aas
dec
and
dec
lock
loop
jbe
outsb
outsl
jno
mov
notb
out
lock
aaa
mov
lock
push
jb
outsl
lock
mov
jae
jno
negl
je
lock
and
dec
lock
fwait
jbe
jno
dec
loop
push
xorl
and
mov
idivb
xchg
in
jno
aaa
xor
icebp
std
pop
int3
jl
jno
mov
jge
outsl
icebp
std
div
jle
icebp
mov
fwait
jg
icebp
mov
mov
faddl
movsb
jbe
inc
jl
aas
pop
loop
push
je
notb
out
lock
aaa
mov
lock
push
inc
jg
jno
mov
inc
dec
icebp
shl
xchg
outsl
jb
cmp
dec
cli
jb
js
dec
mov
std
aas
rorl
lock
divb
dec
dec
icebp
adc
fwait
dec
pop
icebp
aas
dec
loop
push
je
aaa
push
dec
jg
jno
fisttpll
mov
push
mov
jnp
loop
arpl
push
inc
inc
mov
scas
js
cltd
fdivrl
push
pop
icebp
aas
pop
loop
arpl
push
pop
inc
mov
js
cmc
pop
cli
icebp
push
and
pop
mov
das
mov
pop
cli
lock
fwait
pop
jl
mov
in
jno
js
pop
mov
mov
lock
jbe
pusha
arpl
lock
in
jno
aaa
jns
mov
mov
lock
scas
gs
jnp
loop
arpl
push
addr16
mov
js
push
sbb
jl
loop
jbe
push
outsl
jb
jns
xchg
in
mov
shrl
jb
aaa
fsubrl
mov
mov
aas
dec
daa
outsl
push
je
not
jo
outsl
lock
js
jb
lock
lock
jbe
je
div
fdivrs
clc
je
icebp
dec
shll
lock
hlt
je
lock
shll
jno
mov
je
lock
je
dec
lock
je
lock
je
lock
jno
cmp
je
lock
xor
je
lock
cmc
je
jno
aaa
adc
mov
icebp
xor
xchg
je
icebp
das
negl
add
je
icebp
das
js
je
jno
adc
je
icebp
mov
and
jl
fisttpll
fnsave
shll
je
out
ds
test
fisttpll
mov
je
jo
not
je
dec
lock
je
lock
je
dec
jno
jns
movsb
lods
icebp
fwait
jbe
je
mov
fimuls
pop
out
push
ret
mov
lock
daa
je
ret
mov
icebp
idivl
cwtl
jo
cmp
je
dec
jno
js
je
lock
shll
jno
sbb
and
add
mov
push
scas
jns
aaa
push
inc
ja
je
add
mov
pop
mull
je
ret
mov
icebp
js
je
jo
mov
lock
mov
jno
out
arpl
mov
aaa
out
push
ret
mov
lock
out
push
ret
mov
jno
jns
xchg
jo
js
je
dec
lock
or
icebp
fimuls
pop
daa
je
ret
mov
jb
jns
test
jb
mov
mov
jns
test
jb
shll
mov
js
je
jb
mov
push
aaa
adc
je
lock
ds
je
lock
shll
lock
xchg
jo
ja
je
aas
aaa
icebp
pop
shll
icebp
ds
je
lock
je
lock
js
je
jno
mov
add
mov
je
lock
fdivl
mov
mov
das
sbb
add
je
lock
lock
adc
das
cmp
js
je
icebp
pop
mov
icebp
imul
dec
jno
jns
movsb
jo
not
je
dec
jno
jns
movsb
jo
ja
je
dec
icebp
and
je
jo
not
je
mov
cmp
js
je
mov
mov
jno
mov
lock
idivb
cwtl
mov
loop
je
mov
ja
je
mov
fisttpll
dec
out
push
ret
mov
lock
je
jo
mov
icebp
cmp
je
dec
jno
jns
cwtl
jo
not
je
dec
lock
jns
cwtl
jo
ja
gs
dec
icebp
and
movsb
jo
notl
js
je
dec
icebp
ds
mov
sti
icebp
inc
shll
icebp
ds
je
lock
shll
lock
je
jno
shll
jno
div
je
lock
je
lock
hlt
je
lock
je
lock
mov
jno
ds
je
lock
je
lock
cmc
je
jno
ja
je
icebp
mov
jb
notl
je
jb
cmp
je
jb
js
je
jb
aaa
sbb
push
sti
jb
shll
mov
jns
test
jb
mov
jb
jns
xchg
mov
fisttpll
idivl
xchg
jo
cmp
je
dec
lock
je
ja
fnsave
loopne
xchg
lock
out
push
ret
mov
jno
jns
xchg
mov
loop
je
aaa
lock
out
push
ret
mov
lock
cwtl
jo
js
je
dec
lock
das
divb
je
jno
xor
je
jno
push
clc
je
icebp
xor
xchg
je
icebp
jns
cmc
je
jno
shll
icebp
ds
je
jno
cmp
js
je
icebp
mov
ret
or
fisttpll
loopne
sti
out
xor
adc
js
cmc
je
jno
shll
lock
je
jo
not
je
dec
jno
cmp
je
icebp
xor
adc
das
mov
mov
mov
xchg
xor
je
lock
neg
je
icebp
mov
and
jl
push
das
sbb
and
je
jno
neg
je
lock
mov
xchg
div
popa
jns
lret
icebp
arpl
jns
xorl
movsb
jo
aaa
shll
icebp
cmpsb
jns
movsb
mov
fisttpll
idivl
xchg
jo
cmp
je
dec
lock
je
jno
mov
mov
jbe
je
lock
fdivl
mov
mov
aaa
out
push
add
mov
pop
fdivl
push
add
je
lock
cmp
js
je
icebp
pop
mov
jb
jbe
je
mov
fimuls
idivb
test
jb
shll
mov
jns
test
jb
mov
mov
jns
test
jb
mov
jb
jns
xchg
jo
mov
lock
jbe
je
lock
ds
je
lock
xchg
je
mov
js
cmp
icebp
xor
je
lock
hlt
je
lock
adc
das
cmp
je
lock
add
je
lock
mov
pop
mov
add
mov
pop
mul
je
ret
mov
lock
je
mov
loop
je
mov
idivl
movsb
jo
cmp
je
dec
icebp
js,pt
je
jno
shll
icebp
sbb
outsb
xchg
jno
daa
je
add
mov
je
icebp
pop
aaa
daa
je
ret
or
push
das
loopne
sti
out
xor
adc
das
cmp
js
je
lock
mov
lock
out
arpl
mov
fnstsw
push
je
jb
aaa
and
pop
jb
ja
je
add
mov
mull
je
ret
mov
icebp
js
je
jo
mov
jno
jbe
je
dec
lock
jns
cwtl
mov
lds
jns
icebp
add
jns
icebp
int3
ja
loope
icebp
pushf
mull
jl
pop
cmp
je
ret
mov
icebp
mov
icebp
aaa
jbe,pt
je
lock
shll
lock
jno
mov
jno
jns
xchg
mov
loop
je
mov
idivl
xchg
jo
cmp
je
dec
lock
je
jno
mov
mov
mov
nopl
push
adc
je
icebp
das
aaa
push
je
jb
add
je
jb
ds
je
jb
notl
je
jb
cmp
js
je
jb
mov
mov
jbe
je
add
mov
fnstsw
fdivl
mov
mov
ja
je
add
mov
popa
pop
and
std
jecxz
sbb
fidivs
arpl
push
jne
notl
shlb
sbb
movsb
jns
push
mov
cmp
pop
push
jns
testl
pop
pop
aad
mov
fistl
int
dec
data16
xchg
cmpsl
push
push
push
push
shll
and
adc
push
push
mov
cmp
iret
cli
jo
pop
dec
addr16
sarl
xchg
movsl
int
dec
arpl
es
jecxz
pop
jo
in
leave
in
jo
jecxz
sahf
dec
push
in
fwait
and
std
and
lock
loope
repnz
js
xchg
pop
clc
and
mov
inc
js
mov
ds
js
out
arpl
in
shl
std
jecxz
sahf
xlat
js
fld
clc
outsl
cmp
cwtl
mov
cmp
mov
mov
jne
mov
pop
pop
stc
addr16
dec
mov
ja
pop
clc
push
mov
test
mov
cmp
pop
ja
js
xchg
aaa
jbe
xlat
jae
negb
jbe
icebp
addr16
cmp
out
cmp
gs
js
mov
lock
loop
sbb
inc
mull
dec
mov
pop
repnz
cmp
xor
outsb
js
dec
pop
repnz
mov
jecxz
or
ficompl
dec
cmpsb
and
mov
popa
fildll
pop
in
gs
fimull
mov
in
add
iret
and
pop
lock
pop
les
test
inc
in
jbe
push
ret
cli
out
iret
and
sahf
out
sbb
jo
popa
ror
out
sbb
decl
xchg
jo
ljmp
mov
add
add
dec
ja
adc
mov
push
gs
mov
aaa
mov
jno
pop
dec
xchg
in
jno
int3
dec
pop
jno
pop
cmc
addr16
mov
hlt
and
mov
pop
std
xchg
pop
repnz
lds
ficoms
inc
xchg
pop
dec
pushf
mov
icebp
loop
jbe
fstpl
pop
and
dec
lock
xchg
outsl
icebp
mov
icebp
xchg
out
lock
loop
je
notl
inc
mov
das
cmp
js
in
lock
or
jae
loop
arpl
lock
in
jno
shr
jg
jno
ja
jmp
icebp
adc
mov
idivl
cmp
out
jg
jno
js
out
dec
jno
mov
jb
jbe
icebp
outsl
out
cmpsb
jns
arpl
shl
out
lock
icebp
xor
pop
cmc
mov
mov
lock
testl
clc
dec
jb
js
stc
out
repnz
das
cmp
sti
cli
jo
xor
cld
mov
neg
std
dec
jno
mov
jl
mov
in
icebp
pop
rol
inc
mov
das
mul
sar
push
add
ret
mov
incb
js
xchg
jns
js
out
div
cli
jno
adc
enter
ja
leave
dec
jb
mov
mov
in
jno
cmp
mov
push
test
in
jo
mov
xor
jbe
iret
mov
ds
in
jo
notb
mov
ds
in
jo
ja
shll
aam
repnz
mov
outsl
icebp
ds
cli
icebp
mov
xlat
jl
aas
dec
out
push
xorl
icebp
and
dec
lock
fidivl
fistl
jno
rcr
out
lock
lock
ds
jb
cmp
js
loope
in
jb
mov
sbb
adc
mov
ds
fucom
dec
jb
testb
aaa
clc
out
jb
adc
out
jb
pop
fucomp
dec
jb
testl
cmp
push
jmp
outsl
lock
mov
lock
in
inc
aas
div
inc
push
in
inc
dec
icebp
cmpsb
inc
in
xchg
jo
aaa
push
in
jg
lock
icebp
fstpl
testl
in
jg
lock
sti
icebp
mov
mov
mov
or
jl
int3
in
mov
shll
js
hlt
in
sti
lock
push
in
inc
dec
jno
inc
in
cwtl
jo
notl
inc
dec
icebp
sarb
in
sti
icebp
mov
scas
in
xor
out
mov
popa
pushl
in
mov
mov
in
xor
rolb
fidivs
out
shr
push
add
cmp
shr
push
ret
sahf
in
mov
js
in
movsb
jo
mov
jb
jbe
in
pop
dec
repnz
test
xchg
mov
loop
in
pop
jo
aaa
adc
mov
xchg
xor
xor
loopne
in
sti
jno
divl
cmp
in
mov
or
lock
mov
icebp
testl
icebp
fwait
push
jns
aaa
and
jno
mov
testl
cmp
shr
arpl
jno
pop
in
pop
jo
cmp
in
pop
jo
iret
shr
sti
jo
push
in
out
jo
test
arpl
xor
mov
jo
push
in
pop
dec
repnz
push
in
inc
dec
icebp
sarb
js
or
mov
in
xor
shl
sti
lock
scas
in
xor
mov
jno
push
in
jg
lock
in
sti
lock
xor
xor
loopne
in
sti
jb
mov
or
pop
jb
iret
or
movsl
mov
xor
out
aaa
push
in
mov
xchg
xor
xor
loopne
in
sti
jb
divl
in
xor
cmp
in
mov
js
in
jl
int3
in
dec
lock
push
sti
lock
xchg
mov
loop
in
sahf
aaa
mov
fidivs
xchg
mov
fstpl
testl
in
inc
dec
icebp
sarb
sti
lock
scas
in
mov
cwtl
xchg
jbe
in
xor
clc
sar
sti
icebp
mov
scas
in
xor
jns
hlt
in
sti
lock
mov
xor
mov
lock
xor
xor
cmp
js
in
jl
fwait
mov
icebp
divb
in
xchg
mov
ficomps
shr
arpl
or
fwait
ja
in
mov
push
movsl
ja
dec
out
shl
in
sti
lock
mov
xor
out
js
in
mov
or
lock
icebp
push
in
mov
idivb
out
shr
mov
or
jo
loopne
in
jo
notl
inc
dec
jno
cmp
in
sti
jno
js
in
xor
out
mov
fwait
ja
shr
push
add
cmp
pushf
sbb
inc
icebp
pushf
sbb
inc
icebp
fnsave
iret
testl
lock
js
in
arpl
jb
sahf
in
out
jb
jbe
in
aaa
jno
adc
mov
idivb
in
xor
rorb
in
out
jo
adc
mov
idivl
in
xor
cmp
in
sti
jo
js
in
xor
out
mov
fwait
divl
in
push
add
cmp
fwait
not
in
arpl
or
fwait
ja
in
push
add
cmp
testl
lock
js
in
push
ret
sahf
in
jo
cmp
in
dec
dec
jb
inc
in
cltd
mov
in
in
out
jb
shr
addr16
sahf
in
fidivs
icebp
xchg
adc
arpl
jb
sahf
in
out
jb
adc
arpl
jb
sahf
in
out
jb
inc
in
test
jb
shlb
sti
lock
push
in
jg
lock
in
sti
lock
xchg
jno
ja
in
inc
sti
ja
js
push
ret
sahf
in
mov
cmp
mov
fistpl
mov
icebp
mov
sti
lock
push
in
jg
lock
in
sti
icebp
mov
mov
xor
jns
hlt
in
sti
lock
push
in
jg
lock
in
sti
icebp
mov
scas
in
xor
out
js
in
mov
test
in
mov
in
divl
int
mov
xchg
mov
in
xor
out
test
mov
or
jno
out
or
movsl
xor
xor
rolb
fidivs
xchg
jo
mov
icebp
jecxz
push
in
jg
lock
inc
in
xchg
jo
notb
inc
dec
icebp
shlb
in
sti
jb
push
in
pop
dec
repnz
in
xchg
mov
fcompl
in
pop
jo
cmp
mov
mov
jno
jbe
in
movsb
mov
ficomps
shr
push
ret
sahf
in
fdivp
icebp
xchg
loopne
icebp
xchg
loopne
icebp
popl
jns
cmp
jo
mov
lock
jbe
in
xor
sar
sti
jb
divb
in
xor
loopne
in
mov
loop
in
pop
jo
shr
sti
jo
push
in
out
jo
test
arpl
jo
pop
in
pop
jo
mov
mov
mov
xchg
mov
in
xor
out
test
mov
or
icebp
push
out
or
movsl
xor
xor
shl
sti
lock
scas
in
xor
out
js
in
mov
mov
lds
lock
or
idivb
shr
addr16
or
ffree
or
xchg
mov
xor
out
cmp
in
mov
js
in
pop
jb
mov
jb
jbe
in
arpl
cmp
fwait
not
in
push
ret
sahf
in
aaa
lock
shr
push
xor
sahf
lock
xchg
mov
outsl
mov
sbb
icebp
fwait
js
in
push
ret
sahf
in
jo
cmp
in
inc
dec
icebp
movsb
inc
in
movsb
jo
notb
jg
lock
in
sti
lock
mov
xor
jns
clc
in
sti
icebp
push
in
jg
lock
jo
js
in
inc
dec
icebp
sarb
js
or
mov
in
xor
test
mov
or
icebp
fwait
ja
in
push
add
or
or
cmp
shr
sti
out
mov
ja
lret
out
mov
jbe
in
xor
clc
sar
sti
icebp
mov
scas
in
xor
out
aaa
int3
in
mov
or
icebp
push
out
push
in
mov
xchg
mov
xor
out
cmp
in
mov
or
jo
loopne
in
insb
jo
xchg
in
inc
dec
jno
inc
in
cwtl
jo
notb
inc
dec
icebp
shlb
in
sti
icebp
mov
scas
in
xor
jns
clc
in
sti
icebp
std
cmp
sti
icebp
std
cmp
sti
icebp
xor
icebp
push
fbstp
in
mov
mov
in
xor
out
testb
mov
aaa
cmp
pop
jb
ja
in
arpl
or
out
not
in
sti
jo
push
in
out
jo
test
arpl
jo
pop
in
pop
jo
divb
in
pop
jo
iret
shr
sti
jo
push
in
pop
dec
repnz
in
sti
repnz
mov
xor
jns
clc
in
sti
icebp
mov
xor
xor
shl
sti
jno
js
in
xor
out
mov
fwait
aaa
jbe
in
arpl
cmp
fwait
not
in
push
add
xor
ja
in
arpl
or
fwait
notl
in
arpl
xor
fwait
js
in
push
ret
sahf
in
out
jb
jbe
in
dec
dec
jb
inc
in
test
jb
push
in
dec
dec
jb
aaa
stc
in
sti
jb
push
in
jg
lock
inc
in
xchg
jo
notl
jg
lock
mov
lock
pop
push
fcoms
xor
sti
cmp
dec
mul
dec
push
aaa
int
not
ja
aaa
in
pop
mov
ja
mov
icebp
or
outsl
imul
out
cmp
aaa
int
js
ja
mov
jno
int
inc
notl
div
shr
test
cmp
ja
sahf
popa
and
sahf
and
clc
pop
dec
adc
out
shlb
js
pop
mulb
test
out
xor
sti
pop
mov
mov
int3
aaa
xlat
out
mov
ja
arpl
or
cmp
mov
xorb
scas
mov
mov
std
movsb
pop
mov
call
jbe
arpl
or
aaa
mov
xorb
mov
ja
fdivl
out
loopne
push
add
lock
mul
jle
aaa
int
in
pop
ja
mov
mov
mov
push
int3
mov
divb
ja
arpl
js
cmp
mov
jno
lea
add
push
loop
jno
mulb
enter
cli
ss
jno
ja
mov
mov
add
nop
ja
sub
cmp
idivb
push
cmp
aaa
dec
mull
int
cmp
mov
dec
xchg
cli
push
inc
push
mov
add
jbe
icebp
mov
mov
testb
aaa
mov
mov
ja
pop
mov
and
lock
push
loop
adc
mov
pop
cmp
cmp
or
ja
mov
divb
jbe
push
mov
fimuls
div
icebp
sarl
aaa
mov
inc
ja
js
cmp
mov
test
mov
push
push
xchg
icebp
mov
jno
or
push
in
jbe
sarl
or
mov
pop
pop
push
popf
sbb
aaa
lea
aaa
ja
push
test
sub
xor
cmp
int
insl
fsubr
adc
dec
mov
mov
ret
f2xm1
cmp
inc
mov
imulb
cmp
xchg
in
sbb
jl
std
xchg
dec
notl
cmp
cmp
xor
jbe
pop
lods
xchg
loopne
icebp
repz
dec
cwtl
mov
jno
divb
mov
ja
mov
mov
lret
in
fcoml
pop
mov
fwait
cmp
push
lock
pop
mov
divl
arpl
jl
cmp
ljmp
je
idiv
aaa
out
pop
push
xchg
divl
lock
cwtl
fcmovbe
aaa
cmp
xor
cmp
int
xor
dec
rcl
mov
int3
cmp
cmp
inc
mov
divb
mov
aaa
sarl
out
fistps
sub
imul
mov
mov
idivl
lea
clc
dec
pop
dec
ljmp
das
out
push
mov
imul
and
mov
sbb
test
cmp
call
mov
repnz
cmp
or
mov
arpl
aas
jbe
pop
ja
mov
mov
xchg
xchg
stos
dec
pop
or
lock
sub
icebp
pop
test
in
pop
aaa
arpl
cmp
ja
cmp
int
cmp
push
pop
mov
push
mov
dec
mov
xor
fidivs
mov
pop
test
ja
aaa
mov
inc
cld
xchg
fstps
test
in
push
xor
cmp
cmp
mov
jge
in
ficompl
adc
out
loopne
push
in
push
lock
pop
aaa
cmp
mov
xorb
scas
mov
fcompp
pop
inc
test
in
push
xor
or
push
xor
ja
jl
cmp
ljmp
push
xchg
divb
add
cli
push
fwait
divb
lock
in
pop
aaa
arpl
xor
push
mov
sbb
xchg
fsubl
hlt
jo
out
push
mov
jbe
xor
fidivs
mov
pop
test
ja
mov
ja
rcr
sarl
aaa
xchg
lock
push
xchg
cmp
cmp
xor
dec
js
ja
mov
ja
jg
and
xchg
out
mov
loopne
pop
mov
div
test
jno
lea
or
cmp
pop
lea
divl
cmp
js
repnz
cwtl
sti
push
or
cmp
xor
sti
mov
and
push
mov
in
aaa
out
loopne
pop
arpl
lock
popa
mov
mov
cmp
fimuls
sahf
imul
jne
testl
in
push
aaa
int
not
ja
aaa
in
pop
mov
pop
push
enter
notl
jo
push
fnsave
push
test
cmp
aaa
mov
in
cltd
jno
cmp
dec
stc
adc
xchg
mov
push
outsl
cmp
jno
test
aaa
out
mov
in
pop
mov
cltd
add
xchg
jl
cmp
jo
jno
js
idivb
dec
ss
outsl
js
jno
ja
movsb
sub
mov
jl
js
jo
jne
js
ja
idivb
push
xor
dec
negl
int
cmp
mov
sub
pop
lods
sbb
fcompl
push
jo
push
jno
cmp
inc
mov
divb
mov
aaa
sarl
ja
jl
jl
jns
jo
push
xchg
cld
jno
mulb
xor
dec
js
ja
mov
testl
pop
inc
mov
fs
gs
aaa
mov
aaa
pop
ja
cmp
mov
mov
jb
lret
lock
cmp
push
js
icebp
arpl
mov
out
icebp
arpl
jl
cmp
jae
inc
pop
jecxz
push
std
fs
jecxz
push
std
dec
and
sarb
mov
sarb
pop
sbb
testb
divb
mov
xchg
fdivr
inc
mov
cmp
movsb
icebp
mov
jno
or
aaa
js
mov
mov
aaa
adc
jne
les
aaa
fimuls
aaa
notb
icebp
mov
popa
andb
ja
mov
mov
jns
aaa
cmp
push
js
js
icebp
arpl
mov
ja
icebp
mov
fidivs
jg
inc
in
ja
lock
icebp
mov
jno
or
aaa
or
cmp
mov
mov
popa
loopne
scas
outsl
mov
mov
jo
idivb
push
dec
aaa
int
negb
aaa
dec
mov
adc
adc
mov
outsl
fs
pop
xchg
inc
jo
int
cmp
js
ja
cmp
sahf
dec
fildll
xchg
hlt
imul
div
pop
test
aaa
aaa
mov
arpl
fistpl
cmp
cmp
decl
outsl
js
pop
test
mov
ss
xor
cmp
mov
cmpsl
icebp
dec
mov
cmp
out
loopne
push
xor
test
scas
mov
popa
mov
scas
mov
jno
mov
js
dec
lock
in
pop
aaa
arpl
xor
push
mov
cltd
add
xchg
je
out
jnp
mov
push
pop
push
lock
pop
cmp
cmp
xchg
scas
adc
mov
push
cmpb
int3
mov
jno
mov
ja
mov
mov
cmp
shl
pop
shl
cmp
jo
push
outsl
js
push
test
sub
jbe
jno
ja
fidivs
mov
outsl
rcrb
pop
in
out
xchg
push
cmp
test
jno
mov
or
cmp
mov
xorb
push
int3
mov
sahf
div
out
cmp
xor
dec
notb
int
aaa
mov
ja
shlb
in
jne
jo
mov
cmp
movsb
jno
divb
mov
js
mov
mov
dec
fcmovu
loopne
fisubrl
mov
push
jne
mulb
cmp
aaa
cmp
aaa
dec
ja
ja
cmp
jbe
daa
fdivrl
ds
jae
inc
test
in
push
mov
icebp
mov
jno
or
push
in
jbe
sarl
or
mov
idiv
jge
cmpl
out
inc
push
inc
aaa
ja
lock
pop
mov
cmp
pop
mov
cmp
inc
fsubrs
push
loop
xlat
out
mov
ja
lock
mov
scas
mov
pop
idiv
cmp
mov
xorb
arpl
mov
out
or
mov
arpl
xor
push
ja
cli
mov
jge
jg
push
daa
mov
test
sub
lock
mov
arpl
xor
fcmovbe
mov
push
jbe
call
sbb
sarb
fnstenv
push
outsl
js
push
test
mov
jbe
jno
ja
cli
out
clc
and
adc
push
popa
dec
ja
pop
test
mov
aaa
cmp
xor
cmp
int
js
inc
nop
ja
jl
mov
cmp
xor
xchg
in
scas
ja
aaa
inc
cmp
cmp
addr16
cmp
and
jb
cmp
xchg
aaa
js
mov
mov
js
mov
xchg
js
jno
out
pop
mov
divb
divb
or
aaa
ja
mov
mov
cmp
shll
xchg
js
cld
lock
pop
and
icebp
sarl
mov
jbe
icebp
arpl
jl
cmp
mov
xchg
dec
inc
mov
aaa
jno
out
push
mov
ja
mov
arpl
or
cmp
mov
test
mov
shl
fsubp
cli
popa
push
mov
and
pop
stc
lock
inc
mov
or
ja
aaa
xorb
and
test
in
push
pop
push
lock
pop
cmp
cmp
mov
xorb
mov
fnstcw
testb
sbb
lock
jno
mov
ja
mov
mov
cmp
pop
sbb
jae
and
push
imul
or
scas
js
out
mov
popa
mov
cmp
xor
push
out
loopne
push
loop
push
lock
pop
mov
cmp
pop
mov
cmp
mov
mov
aaa
jbe
lock
mov
fsubrl
xorb
xlat
call
iret
call
mov
mov
pop
cmp
cmp
mov
mov
mov
ja
sub
int3
jno
shll
push
xorb
jno
negb
cmp
xchg
xor
dec
sbb
push
push
lock
push
fwait
js
icebp
xor
dec
mov
jbe
out
cmp
xor
xlat
inc
mov
aaa
jno
out
push
mov
ja
mov
mov
popa
mov
or
mov
jmp
dec
jno
mov
mov
jb
divb
popa
xchg
test
jno
or
mov
ja
ja
mov
jl
mov
pop
xlat
pop
xchg
cmc
mov
int
cmp
aaa
mov
arpl
xchg
rcll
push
push
xchg
fucomi
lock
push
pop
cmp
dec
aaa
gs
int
ja
ja
mov
pop
mov
inc
xchg
repnz
int
ja
xchg
in
push
mov
icebp
mov
jno
or
push
loop
jbe
icebp
mov
mov
mov
xor
push
lds
jp
mov
xchg
js
ds
mulb
add
ja
cmp
pop
mov
jbe
lock
idivb
ret
adc
mov
mov
fdivl
fistpll
mov
dec
fsts
xor
lock
mov
in
pop
pop
xchg
icebp
arpl
cmp
cmp
xchg
push
sbb
jbe
inc
fwait
cli
aad
sub
lock
in
push
add
cli
icebp
out
cmp
xor
dec
ja
ja
cmp
sbb
xchg
push
fwait
cmp
js
arpl
mov
adc
or
mov
push
imul
out
pop
push
sbb
int
mov
aaa
cmp
xor
cmp
int
stc
rorl
mov
outsl
divb
pop
test
in
pop
aaa
in
gs
mov
jo
divb
mov
jno
and
xor
dec
cmp
int
js
ja
mov
adc
xchg
push
scas
jno
mulb
mov
jno
mov
mov
mov
js
cmp
js
jb
mulb
cmp
outsl
ja
jb
ja
movsb
cs
mov
mov
xchg
fwait
dec
adc
dec
sub
or
fnstcw
xchg
cmp
ja
cmp
int
sbb
xchg
inc
ret
xlat
out
xchg
jbe
test
mov
scas
mov
pop
idiv
cmp
mov
ja
cmp
xor
dec
sbb
mov
inc
push
pop
xchg
ss
xor
dec
cmp
int
js
ja
mov
into
jbe
mov
aaa
adc
lock
icebp
mov
mov
mov
aaa
pop
ja
cmp
mov
mov
inc
pop
call
jo
push
mov
jno
divb
mov
cmp
jno
ja
mov
mov
les
call
popl
cmp
out
mov
in
push
ja
and
pop
mov
mov
jecxz
lock
lock
icebp
sarl
or
aaa
divb
mov
pop
jl
js
test
in
push
pop
push
lock
pop
cmp
cmp
xchg
scas
adc
mov
lock
lock
inc
mov
testb
cmp
mov
mov
inc
mov
fadds
cmp
jno
aas
js
idivb
dec
cmp
pop
add
cmp
ja
push
cmp
mov
not
test
lock
add
cli
jno
mov
push
mov
mulb
cmp
aaa
cwtl
sbb
ja
cmp
pop
mov
dec
dec
enter
imul
icebp
arpl
or
aaa
mov
mov
inc
mov
sbb
sbb
cmp
cmp
movsb
repnz
jno
lea
js
mov
mov
divb
pop
cwtl
andb
insb
jl
mov
test
test
jno
lea
or
ja
mov
mov
leave
push
insl
decl
idivb
xor
js
sarl
mov
jbe
icebp
mov
mov
mov
test
popf
jmp
aas
dec
pop
xor
icebp
popa
sub
pop
aaa
adc
arpl
mov
mov
popa
and
inc
mov
aam
jl
dec
inc
es
lock
mov
fwait
jbe
icebp
pop
mul
dec
gs
int
not
ja
aaa
in
pop
mov
mov
icebp
popa
and
out
mov
jge
adc
push
fwait
mov
ss
xor
dec
aaa
gs
int
in
pop
ja
jbe
mov
and
push
pop
cmp
cmp
mov
pop
adc
les
jl
xlat
pop
jnp
out
cwtl
mov
jno
out
push
pop
imul
int
mov
aaa
cmp
xor
cmp
int
js
loopne
mov
cmp
jbe
idivb
push
cmp
aaa
dec
imulb
int
aaa
out
clc
sub
rorl
mov
lock
movsb
icebp
mov
mov
mov
aaa
pop
js
cmp
mov
loopne
push
js
xchg
xchg
mull
js
lock
push
inc
js
xchg
icebp
arpl
aaa
mov
aaa
popa
xchg
mov
inc
mov
mov
out
and
call
jno
mulb
ss
outsl
mov
int
sub
adc
aam
mov
push
add
hlt
repnz
cmp
xor
mov
ja
cmp
cmp
mov
rcl
xchg
and
out
repnz
mov
testb
mov
movsb
fildll
scas
jmp
push
mov
cmp
mov
xorb
js
inc
ja
mov
fsubl
cmc
pop
push
sbb
out
push
mov
mov
testb
aaa
int
ja
ja
dec
xor
aaa
es
adc
sbb
or
sbb
aad
stc
mov
fwait
aad
mov
decb
jae
cs
push
xchg
push
sbb
xlat
fcoms
aam
xchg
pop
pusha
fldt
movsl
jl
ja
aas
dec
hlt
push
mov
and
pop
sahf
sti
push
jo
fcoml
mov
arpl
std
mov
jmp
scas
aaa
push
ja
jnp
inc
push
stos
fwait
pop
pop
pushf
test
addr16
cmp
fs
push
clc
mov
int3
cmp
pop
movsb
xor
sti
aaa
ror
and
xchg
xor
test
xor
mov
ficompl
mov
loop
xor
jbe
mul
repz
fimull
push
stc
sti
in
sbb
pop
mov
call
cmp
push
adc
fsubp
xor
jbe
testb
pusha
pop
data16
fimull
mov
fldl
xor
out
sbb
xchg
daa
dec
clc
jno
jbe
daa
xchg
clc
push
outsb
mov
xlat
push
aam
add
fs
cmpsb
mov
sbbl
out
mov
arpl
xor
cli
mov
aaa
jbe
aam
fwait
aad
aaa
mov
out
mov
fnsave
mov
out
mov
arpl
fcmovbe
mov
cmp
jg
fcomps
pop
jo
dec
xor
jbe
jno
neg
cli
out
mov
arpl
xor
jne
ja
push
jo
push
xor
jno
cmp
mov
mov
mov
xor
pop
int3
mov
jno
cmp
inc
mov
fisttpll
je
arpl
mov
mov
xchg
jno
testb
sarl
mov
cmp
mov
or
xor
jl
decl
jno
testb
sarl
mov
or
mov
mov
je
in
and
cmp
pop
pop
loop
jno
mulb
enter
jbe
jno
ja
jl
cmp
jae
inc
shr
mov
jo
mov
cmp
or
cmp
xchg
xor
pop
xchg
jge
push
aam
cmpsb
xchg
pop
loope
aad
inc
js
out
fsubrs
sahf
pop
idivb
mov
xor
scas
fisttpl
push
loop
inc
cmp
xchg
mov
icebp
mov
imul
jo
or
pop
pop
push
fwait
loopne
dec
jns
outsl
call
xchg
mov
out
aad
je
dec
fcomps
push
movsb
cmp
sbb
xchg
fldcw
inc
push
jle
out
xor
xor
fistpl
push
jo
jecxz
sbb
pop
mov
pop
fcmovnbe
jne
pop
int3
cmp
in
pop
loop
sbb
mov
or
lock
shlb
pop
out
dec
mov
push
ljmp
or
insb
and
loop
loop
adc
out
sti
loop
mov
ja
popa
adc
xor
pop
and
jl
fsubrp
cmpsb
outsl
fsubr
push
mov
sbb
jbe
xchg
xlat
repz
mov
jne
cs
mov
idivb
aaa
test
lea
aas
mov
mov
out
pop
mov
enter
mov
movsb
out
sahf
mov
push
or
fdivrp
fnsave
jle
xchg
fdivs
mov
jl,pn
xlat
mov
jecxz
gs
lea
pop
dec
divb
mov
mov
mov
js
sarb
xchg
xor
pushl
loop
jne
aaa
xchg
loop
movl
lds
jo
mov
push
or
mov
lcall
push
aaa
movsb
out
test
mov
js
test
mov
mov
ja
out
push
movl
notb
mov
fidivl
iret
jo
and
lock
mov
out
sarb
ja
push
push
xor
pushl
into
jne
ja
arpl
xorb
mov
jecxz
mov
int
mov
aaa
movsb
stc
pushl
mov
fs
loop
idivl
shrb
fdivl
mov
push
or
mov
punpcklwd
idivl
mull
or
mov
loopne
push
sbb
rol
mov
mov
test
movl
iret
out
mov
ret
iret
out
mov
ret
push
out
mov
mov
and
dec
jo
push
mov
mov
pushf
aaa
cmp
hlt
loop
cmp
cwtl
jmp
mov
fcoml
mov
lds
xchg
arpl
or
fnstsw
out
addr16
pop
js
mov
fidivrs
push
push
insb
js
ja
loop
mov
shl
js
loop
movl
test
jl
mov
cmpl
push
pop
cltd
das
adc
xchg
jns
mov
jne
mov
jne
mov
jne
mov
jne
mov
xchg
mov
and
push
push
jbe
jo
outsl
arpl
cmp
jbe
loop
movl
mov
adc
mov
arpl
movl
jbe
jecxz
into
sbb
out
addr16
lock
push
int3
movl
popf
divb
int3
xchg
out
jl
fidivrs
loop
shlb
loop
std
inc
fdivp
test
vpsllw
bound
jne
bound
aas
dec
adc
jno
arpl
movsb
cmp
xor
lock
sarb
out
test
pusha
dec
mov
push
incb
ret
out
xchg
movl
arpl
and
jo
cmpsb
idivb
jo
xchg
idivb
out
push
loop
mov
fdivl
arpl
mov
push
or
mov
jecxz
jne
aaa
aas
imul
sahf
pop
fnsave
inc
addr16
xor
pushl
fs
xchg
xor
dec
xchg
xorl
repnz
fdivl
fidivrs
push
or
popa
push
inc
lds
fidivrs
push
or
pushf
cmpsb
sbb
ja
cmp
mov
cmp
mov
mov
repnz
fwait
mov
mov
repnz
fwait
mov
mov
mov
mov
mov
jo
push
outsl
mov
jo
or
out
fidivrs
mov
loop
mov
notl
mov
xor
arpl
fdiv
arpl
cmp
mul
push
or
out
xchg
mov
mov
fs
xor
fs
out
idivl
rclb
into
mov
fcoml
mov
lds
mov
lds
mov
bound
jl
push
jecxz
imul
push
pushf
push
mov
sbb
popa
dec
mov
outsl
js
out
push
or
out
into
je
js
imul
into
js
js
aaa
jo
jns
js
ja
fidivs
js
mov
fidivrs
js
loop
mov
arpl
js
arpl
arpl
fdivrl
mov
outsl
mov
pop
mov
out
push
fs
cmpl
mov
lret
mov
mov
cmpb
adc
insb
jbe
push
aas
sti
jne
into
mov
adc
mov
pop
lret
popf
cmpsl
add
mov
pop
mov
test
out
push
mov
mov
mov
sarb
out
pushf
clc
mov
mov
add
stc
dec
jo
int
mov
push
mov
mov
popf
jbe
loop
jecxz
lea
aas
sti
jne
into
mov
adc
mov
arpl
movl
rcl
out
fs
in
mov
jns
sahf
js
push
int3
movl
ja
rcrb
cmp
loop
mov
loop
shlb
loop
mov
dec
lds
aaa
shlb
aaa
push
bound
lods
rol
xchg
xchg
out
push
movl
movl
movl
movl
js
out
mov
fidivl
mov
loop
jbe
jo
movl
ja
push
push
xor
pushl
into
jne
ja
arpl
xorb
jl
out
push
jecxz
mov
mov
arpl
into
jne
mov
fs
and
mov
sarb
xchg
xor
pushl
mov
loop
movl
addr16
mov
into
mov
mov
and
idiv
out
fidivs
mull
xchg
divl
cmp
divl
out
jl
xchg
divl
adc
lea
testl
idivl
push
or
out
push
push
mov
or
popa
adc
mov
sbb
arpl
cmp
cwtl
jmp
into
mov
pushf
idivl
out
cmp
and
mov
fidivrs
into
xchg
xor
dec
xchg
cmpl
repnz
fdivrl
fidivrs
push
or
test
jl
js
bound
inc
push
adc
xchg
loop
mov
ret
iret
out
mov
add
cld
out
sarb
test
mov
aaa
out
pushf
outsl
mov
ja
pushf
jno
mov
mov
test
mov
divl
out
movl
mov
out
push
arpl
push
arpl
arpl
jne
arpl
pop
sti
jbe
into
mov
hlt
xchg
cs
jns
arpl
mov
adc
mov
fs
nop
insb
hlt
xchg
ret
rcl
xchg
out
xor
mov
xchg
loop
aas
sti
jne
into
mov
hlt
xchg
incl
popa
cmp
pop
mov
jne
bound
aas
sti
jne
into
mov
push
jne
mov
js
pushf
notb
cli
outsb
dec
pop
jl
dec
outsb
push
out
fdivl
inc
outsb
mov
jp
out
push
jae
mov
fldt
push
jge
mov
jb
mov
outsb
jl
jae
pop
out
lods
shl
jbe
out
lret
hlt
mov
push
into
jae
jnp
push
mov
xor
lods
divb
out
lret
out
mov
idivb
iret
mov
dec
out
push
cs
pushf
outsb
arpl
dec
cli
in
mov
scas
cmc
xchg
sub
dec
outsb
push
outsl
shll
dec
sar
loop
outsb
std
jns,pn
pop
jle
mov
outsb
mov
outsb
mov
rcrb
leave
mov
mov
push
and
sbb
mov
pop
int3
mov
int
ja
inc
jno
xchg
mov
xlat
dec
cmpl
inc
cmpl
push
lock
notl
lock
mov
xchg
pop
add
sbb
mov
es
jno
fsubrs
push
in
in
sbb
pushf
cltd
outsl
std
mov
ret
jo
cmp
pop
mulb
dec
aaa
int
ja
ja
mov
mov
divl
xor
mov
out
cmp
js
cmp
pop
mov
fiaddl
xchg
cli
not
idivb
arpl
xor
mov
mov
and
adc
outsl
cmp
xchg
lret
and
mov
cmp
xor
idiv
cmp
xor
arpl
ja
cmp
xor
stc
xchg
lret
cmpsb
xchg
jno
cmp
mov
cwtl
cli
xchg
mov
sbb
int
out
lcall
test
jo
mulb
dec
aaa
int
negl
cmp
int
xor
testl
js
push
mov
lret
cmpsb
push
out
scas
mov
cli
mov
aaa
mov
mov
jnp
inc
jo
icebp
and
lcall
out
xor
jo
dec
leave
cltd
insb
dec
out
mov
mov
idivl
dec
lea
mov
dec
mov
cmp
dec
lea
mov
inc
sbb
mov
mov
fadd
movsl
cmc
icebp
bound
inc
inc
cmc
mov
push
scas
lcall
idivl
pop
cmp
out
cmp
aaa
int
mov
jbe
out
mov
movsb
xor
negl
pop
cmp
inc
js
sti
ja
mov
ret
mov
mov
ret
and
cld
ret
mov
jecxz
gs
insb
enter
ret
adc
mov
pop
ja
imul
xor
inc
mov
cmp
cmp
pop
lea
js
ja
jbe
mov
ret
mov
mov
and
cld
ret
mov
stos
pop
xchg
pop
daa
adc
sahf
loope
out
mov
popa
ja
out
mov
arpl
xor
push
mov
and
aam
cli
aad
mov
jbe
xchg
aam
mov
mov
scas
mov
loope
xorb
scas
mov
and
push
je
out
jo
cmp
jno
and
jno
mul
jbe
mov
add
ja
movsb
sub
mov
in
push
les
outsl
jo
ja
mov
add
test
mul
aaa
mov
in
pop
mov
jl
inc
push
sub
imul
jl
mov
out
jno
test
xor
cmp
mov
mov
inc
push
pop
imul
mov
int3
mov
in
xchg
jno
aaa
or
ja
mov
aaa
mov
pop
adc
jo
mov
pop
pop
sbb
testb
aaa
int
sub
ss
out
aaa
jbe
inc
sub
out
jo
in
pop
pop
pop
aaa
lea
ja
aaa
int
mov
ja
imull
sub
and
sbb
pop
js
lock
ja
cmp
dec
gs
int
in
pop
ja
aaa
cmp
mov
fbstp
ja
mov
pop
jno
divl
cmp
adc
inc
test
xchg
jb
fs
mov
jb
cmp
inc
or
mov
hlt
push
loopne
dec
mov
repnz
jno
ja
mov
mov
jb
divb
or
aaa
cmp
mov
mov
mov
in
or
jnp
test
xor
jle
mov
mov
pop
pop
mov
push
aam
inc
cmp
cmp
outsl
js
xor
push
jno
js
aaa
jbe
push
outsb
loop
push
imul
in
inc
ljmp
insl
lret
shrb
jbe
xor
cmpsl
jbe
xchg
adc
stos
pop
push
fstps
jae
gs
imul
xor
push
sbb
sahf
and
push
mov
in
arpl
sbb
cwtl
mov
sti
dec
clc
mov
pop
jb
inc
lock
imul
mov
mov
mov
dec
out
std
xchg
ret
xor
adc
mov
mov
testb
aaa
mov
mov
adc
cmp
mull
fcomp
f2xm1
cmp
pop
mov
mov
xor
or
aam
sbb
into
not
jne
out
cmp
pop
aam
imul
mov
pop
mov
cmp
mov
xorb
mov
or
aam
subl
test
sub
xchg
sub
jno
idivb
pop
xor
pop
cli
out
cmp
xor
fwait
cli
pop
mov
mov
shlb
cld
jno
mul
jbe
mov
xor
pop
ja
dec
pop
mov
add
pop
das
pop
push
inc
aad
jbe
or
out
jnp
mov
cld
gs
cmp
pop
mulb
xor
push
ja
and
pop
mov
mov
cld
idivb
jne
out
xchg
xor
fdiv
f2xm1
cmp
mov
xorb
ja
inc
ja
je
int
pop
test
incl
jp
idivb
aaa
jbe
mov
aaa
mov
xor
loop
mov
loope
mov
loop
mov
std
loop
not
jbe
jo
cmp
pop
fisttpll
mov
ja
jno
ja
fidivs
mov
sbb
mov
mov
in
lock
fcoml
icebp
mov
pop
test
mov
push
push
in
xchg
lock
cli
addr16
fwait
idivb
aaa
cmp
aaa
dec
ja
ja
mov
testl
xchg
jne
outsl
lock
pop
fnclex
mov
int3
divl
sarl
or
ja
divb
icebp
dec
mov
div
jo
lock
xchg
enter
notl
cmp
mov
inc
fnclex
cmp
cwtl
aam
cmp
out
cli
jo
idiv
mov
cmp
jno
cmp
mov
divl
mov
mov
jbe
jo
mov
jbe
jno
mulb
outsb
pop
ja
cli
aaa
out
clc
sbb
pop
icebp
pop
out
sti
aaa
mov
xchg
mov
xlat
mov
adc
out
fs
jl
xchg
push
jbe
aaa
xor
mov
jo
mov
mov
push
idiv
sbb
int
push
push
int3
divb
fdiv
push
push
outsl
cmp
push
mov
iret
lock
cmp
movl
fistpl
mov
repnz
jae
jae
out
mov
push
into
sub
out
outsb
pop
push
adc
testl
push
aaa
movsb
outsl
movsb
outsl
lret
aaa
mov
ja
push
mov
mov
idiv
cmp
mov
adc
ja
out
loopne
dec
xor
test
scas
mov
popa
xchg
xorb
scas
mov
inc
mov
jbe
pop
push
pop
mov
dec
lock
in
pop
aaa
outsb
push
ja
cmpsb
in
pop
mov
push
jno
push
out
pop
push
and
lock
mov
scas
mov
pop
mov
divl
arpl
int
scas
stos
out
push
jne
testl
arpl
xor
dec
mov
ja
and
pop
mov
jle
sbb
out
pop
push
loop
f2xm1
int
loop
push
lock
mov
testb
cli
push
popa
mov
push
fwait
mov
lock
dec
notl
int
in
pop
ja
inc
xchg
mov
dec
pop
inc
aad
sbb
cld
fcomps
xlat
mov
cs
cwtl
pxor
push
inc
jbe
jo
aaa
dec
or
jo
notb
aaa
adc
adc
inc
clc
testl
aas
mov
ja
icebp
pop
mulb
cmp
aaa
dec
mull
int
cmp
mov
push
xor
aaa
mov
int3
ja
jb
cmp
inc
or
aaa
divb
mov
aaa
leave
cmp
xchg
mov
jno
pop
xchg
std
jb
mulb
cmp
aaa
cwtl
sbb
ja
mov
pop
jbe
bnd
mov
jno
sub
jb
test
aaa
out
mov
in
imul
cmp
push
mov
mov
pop
mov
divl
mov
fidivs
call
repnz
fbstp
mov
ja
mov
jno
or
aaa
or
cmp
mov
mov
push
jno
idivl
inc
cmp
jb
testb
leave
cmp
mov
test
jno
or
pop
pushf
or
and
fsubs
or
movsb
jg
ret
es
pushf
sbb
pop
sti
mov
das
xchg
dec
push
fcmovu
loope
adc
aam
out
push
mov
pop
inc
ja
xor
push
aaa
int
ja
ja
mov
pop
mov
divl
push
cmp
and
pop
js
jle
mov
ret
adc
pop
cmc
xchg
cli
mul
idivb
arpl
xor
mov
mov
push
in
pop
and
test
pop
ljmp
cmp
shlb
and
pop
mul
jle
lods
sar
imul
lock
mov
mov
testb
mov
pop
ja
cmp
mov
cmpb
mov
dec
cmp
dec
mul
inc
pop
aaa
dec
pop
xor
daa
sub
push
mov
jb
imul
shlb
mov
arpl
xor
push
mov
cli
js
idivl
push
xor
xchg
cmpb
scas
mov
sarb
cltd
inc
jmp
mov
sarb
fdivs
pop
testl
mov
ret
lock
outsl
sbb
push
and
rolb
cmp
inc
mov
imulb
xorb
mov
mov
pop
idiv
cmp
mov
cmpb
mov
jmp
xor
jg
aaa
mov
xchg
aaa
mov
or
fcoms
mov
xchg
out
scas
mov
jne
ja
div
pop
mulb
xor
push
ja
and
sahf
push
mov
mul
dec
push
cmp
cli
not
js
aaa
in
pop
mov
rorb
dec
mov
cld
shrb
cmp
push
aaa
int
js
ja
push
cmc
xor
dec
outsl
pop
cltd
test
rolb
notb
lock
pop
aaa
cmp
mov
xorb
mov
or
cmp
mov
cmpb
js
inc
js
js
sti
mov
je
cmp
cmp
aaa
cld
xor
ja
xor
mov
mov
cmp
sbb
fistpl
call
js
arpl
or
int
js
lock
mov
mov
testb
mov
pop
ja
cmp
mov
cmpb
mov
jmp
xor
jg
aaa
inc
imul
cmp
mov
hlt
push
inc
insl
repnz
aaa
stc
xchg
rcrb
test
scas
mov
pop
idiv
cmp
mov
xorb
or
cmp
movb
jl
cmp
mov
rcrb
in
stos
sub
xor
cmc
xor
dec
mov
aaa
int
mul
ja
cmp
jns
jns
pop
fsubrp
pop
push
xchg
sarb
arpl
or
aaa
mov
xorb
mov
ja
mov
pop
mov
cmp
mov
cmpb
mov
js
xchg
sarb
out
ss
add
mov
dec
shlb
jecxz
xor
ja
aaa
mov
sbbl
call
daa
pop
pop
repnz
mov
xchg
ror
cmp
jo
divb
xor
ja
js
js
js
xchg
jo
mull
idiv
cmp
xor
arpl
dec
outsl
js
xchg
jno
js
cld
dec
jle
cmp
mov
aaa
popa
cmpb
out
sti
mov
loopne
lret
xchg
jo
negb
aaa
jno
push
mov
mov
mov
testl
test
jno
push
mov
and
mov
jbe
stc
aad
pop
mulb
dec
hlt
xor
dec
aaa
push
aaa
int
ja
ja
mov
dec
mov
sahf
mov
aaa
sub
sbb
je
cmpsl
mov
dec
xchg
cld
mov
mulb
xor
pop
ja
mov
pop
mov
divl
fwait
cli
aad
cmp
outsl
jo
js
mov
adc
mov
jno
cmp
inc
mov
or
mov
aaa
inc
enter
mov
jmp
lock
rorl
sarl
cmp
inc
ja
js
int
jae
jbe
enter
imull
in
lock
mov
divl
xchg
icebp
arpl
ja
mov
pop
mov
cmp
xchg
mov
cmp
mov
xchg
in
lock
mov
cmp
icebp
arpl
or
aaa
or
ja
aaa
mov
mov
ja
dec
mov
cmp
jo
lock
test
icebp
out
mov
in
movsl
jno
js
jbe
out
cmp
dec
xchg
lock
xor
adc
mov
pop
mov
cmp
mov
mov
inc
mov
mov
dec
or
mov
cmp
into
jbe
xchg
fcmovnb
shll
mov
loope
mov
adc
mov
xor
push
adc
js
bnd
shl
mov
xor
aas
mov
mov
je
mov
das
incl
scas
fimuls
data16
push
mov
notb
jbe
aaa
int
in
dec
ja
div
xor
sbb
into
xchg
mov
dec
mulb
hlt
xor
dec
cmp
cli
js
mov
mul
xchg
inc
int3
ja
xor
out
iret
dec
ja
xor
or
aaa
dec
mov
or
mov
ljmp
or
outsl
cmp
push
test
js
aaa
cmp
cmp
outsl
mov
xor
xchg
in
push
xchg
inc
mov
push
xor
xor
divb
scas
ja
testl
iret
scas
xor
roll
xchg
hlt
xor
outsl
divl
push
aaa
int
sub
cmc
xor
shll
roll
mov
xor
or
cmp
mov
xchg
js
pop
rcrl
imul
lahf
stos
pop
popa
in
clc
mov
fsubrs
pusha
pop
pop
pop
inc
inc
mov
sbb
lods
lock
call
gs
inc
jbe
frstor
and
in
ja
fidivrs
jecxz
lcall
push
fcoml
popa
pop
aaa
jo
rcrb
xor
lock
rcl
not
jo
shrb
jno
rclb
rcl
and
jo
rol
mov
jbe
xchg
rolb
stc
rolb
shl
divb
shlb
rorb
ljmp
int3
divb
aas
divl
shl
cmp
lock
shrb
jo
shlb
jge
ljmp
aad
jl
jmp
outsb
jecxz
xchg
aaa
insb
jo
fsts
sbb
lcall
mov
pushf
cmpsb
in
fisttpll
dec
mov
pop
push
lret
and
imul
scas
dec
outsl
js
pop
dec
cwtl
fst
lock
dec
loop
shll
dec
lds
in
mov
icebp
dec
xchg
cmp
jo
dec
sbb
dec
mov
jo
dec
xchg
mov
push
mov
gs
fwait
mov
ja
xor
lock
fwait
mov
ja
xor
lock
dec
out
mov
mov
cmpsl
mov
int
adc
movsb
cmpsl
mov
int
adc
adc
test
ja
mov
test
testl
aaa
jl
into
cmpsb
test
mull
dec
in
into
cld
fs
scas
into
jne
scas
into
mov
or
into
adc
mov
in
into
sbb
xor
movsb
cmpsl
pop
lcall
sbb
xor
fwait
mov
clc
mov
and
negl
dec
lfs
dec
pushf
js
in
dec
into
js
xor
js
scas
dec
mov
orl
mov
dec
sbb
dec
fsubl
jns
xchg
in
dec
decb
mov
fadd
cmp
popa
push
stc
dec
mov
xchg
fcompl
pushl
pop
fs
jmp
iret
inc
scas
dec
scas
neg
mov
pushf
cmp
aad
loop,pt
pop
push
jl
loop
insb
pushf
addr16
loop,pt
jbe
repnz
mov
in
lock
insl
outsl
jbe
push
jle
jecxz
push
popf
pop
pop
loopne
insl
dec
jecxz
mov
loope
pop
loopne
sarl
fsubs
je
cmp
fdiv
xlat
jmp
dec
in
jno
loope
mov
push
push
test
andl
add
popa
cmp
pop
fcoml
dec
pop
cli
dec
sub
cwtl
sbb
jl
push
cmc
dec
jl
push
hlt
dec
jl
push
mov
pop
dec
dec
pop
testb
jne
push
inc
dec
notb
jge
pop
push
mov
dec
push
test
int
clc
dec
repz
sarb
divb
inc
shl
outsl
popf
cmpsl
jo
js
push
mov
cltd
pop
push
inc
pop
loope
out
sahf
pop
data16
mov
dec
jle
fwait
inc
pop
lock
sahf
dec
mov
pop
and
hlt
cs
jae
loop
stc
dec
cmp
dec
aaa
iret
push
fs
inc
rorl
dec
jg
cmp
hlt
shlb
loop
dec
arpl
sarb
pushf
ja
rorb
xor
mov
ja
iret
hlt
or
into
ja
loop
dec
iret
mov
in
dec
iret
mov
sub
in
dec
push
movsl
outsl
testb
sbb
jecxz
fldenv
pop
jno
jl
pushf
cmpsb
sahf
aam
fstl
test
xlat
cmp
mov
xchg
push
daa
jmp
js
pop
push
movsl
sbb
fldcw
ja
pop
cwtl
popw
cld
jno
testl
push
jns
addr16
mov
in
push
dec
push
fcoml
push
inc
pop
push
xor
sub
cli
push
out
subl
div
insl
dec
push
push
negl
inc
mull
cmc
push
inc
fs
clc
push
inc
in
clc
push
jl
push
clc
push
jl
push
xor
xor
cmp
dec
imul
out
or
pop
outsb
xchg
popf
out
push
je,pt
lcall
outsl
idivl
outsl
fisubl
mov
pop
aas
insb
push
pop
sbb
js
pop
fimuls
fstps
pop
adc
push
and
call
adc
test
enter
push
jg
pusha
scas
push
adc
pusha
push
push
into
js
icebp
cs
fnstsw
jb
push
cltd
bnd
push
movsb
jns
push
xor
push
cwtl
or
cmp
popa
xchg
clc
divb
push
cwtl
inc
push
jb
push
pushf
mov
mov
inc
push
jg
push
dec
push
sti
mov
scas
cmp
push
cltd
bnd
sbb
and
dec
js
jae
pop
or
clc
negb
divl
pusha
fwait
push
pop
pop
shlb
js
lcall
xor
lret
fcomps
popf
hlt
out
neg
insb
std
adc
ja
in
sahf
jmp
cmc
mov
loope
jg
je
ficomps
scas
cmp
and
sarb
int
fsubs
cmpsb
pop
and
and
outsb
pop
sbb
push
gs
push
es
sbb
mov
sbb
xchg
cmp
cmp
lock
ja
push
rcrl
fimuls
xchg
fnstsw
cmpsl
shr
int
pop
aam
mov
pop
cmp
js
ljmp
mov
rcll
aam
inc
divb
jns
pop
ss
rcr
pop
ja
push
lcall
sbb
lock
into
cmc
jp
js
push
ja
fdivrl
out
jp
neg
jb
jp
testb
jp
idiv
lock
test
mov
in
jp
aaa
in
test
push
adc
mov
repz
int3
push
jp
out
into
test
call
mov
bnd
gs
push
or
into
xor
mov
push
adc
ja
into
jae
sahf
ja
in
jp
ja
cmp
jp
ja
out
jp
leave
mov
mov
js
enter
ja
fcmovnu
inc
jp
dec
pop
movsb
scas
jp
mov
jge
jp
mov
fimuls
mov
movsb
idivl
mov
arpl
jp
mov
bound
push
adc
mov
mov
js
jae
sahf
mov
jecxz
jp
mov
aam
jp
lea
fmulp
ss
mov
bnd
out
into
test
pop
push
adc
mov
repz
jl
xchg
cmp
push
int3
jp
jl
cltd
jns
push
adc
cmp
rcr
mov
into
bnd
cmp
mov
fisttpll
jp
cmp
push
sarb
cmp
xlat
jp,pt
cmp
js
jp,pt
js
push
adc
js
inc
into
inc
jp
xchg
jecxz
jp
js
jecxz
jp
js
loop
jp
js
mov
js
into
xor
dec
mov
gs
test
xchg
dec
inc
mov
mov
scas
jp
dec
lds
jno
inc
push
decl
mov
cld
push
cmp
out
cmp
mov
int
jbe
push
ja
movsb
lock
mov
divb
cld
and
cld
push
aam
icebp
push
mov
add
pop
mulb
add
push
ja
sti
cmp
mov
adc
pop
stos
xchg
mov
pop
in
xchg
jae
testb
loope
aaa
xor
mov
aaa
lea
xchg
inc
cli
pop
popa
pop
mov
test
jae
divb
lea
or
ja
lea
testb
mov
fiaddl
pop
notb
mov
push
test
aaa
out
mov
arpl
inc
out
pop
aas
cmp
mov
mov
popa
and
cmp
jbe
jae
ja
xor
into
cltd
or
fsubrs
jb
sub
jae
test
mov
aaa
mov
arpl
push
xor
pop
and
jb
pop
xchg
ja
shlb
in
pop
aaa
int
mul
ja
aaa
xor
inc
ljmp
jl
push
out
xor
out
xor
pop
mov
push
cwtl
cmp
and
testl
aaa
mull
jne
out
push
pop
imul
sub
cmp
dec
ja
xchg
dec
ss
daa
mov
test
xor
cmp
mov
mov
xor
inc
jo
push
xor
divb
test
aaa
out
mov
arpl
idivl
jne
jmp
lock
ss
push
movsb
icebp
enter
jbe
icebp
mov
mov
icebp
leave
mov
div
outsl
cli
lock
mov
mov
int3
div
icebp
sarl
cmp
inc
ja
js
int
jae
jbe
enter
jne
push
je
testb
adc
mov
pop
ja
cmp
mov
mov
inc
mov
cmp
jg
lock
ja
jbe
out
cmp
xor
dec
mulb
int
aaa
mov
dec
push
dec
xchg
pop
lock
xor
icebp
xor
dec
js
aaa
int
in
sahf
fistpl
xor
jne
mov
jo
outsl
lock
aaa
addr16
mov
ja
out
cmp
xor
dec
mull
int
cmp
mov
lods
mov
push
dec
sarl
sbbl
push
mov
js
push
addr16
negb
pop
mov
and
mov
std
ja
pop
cltd
adc
jmp
aaa
incb
ja
inc
outsb
mov
imul
outsl
push
in
xlat
pop
lahf
pop
out
jl
outsl
out
mov
jl
cmp
xchg
mov
aad
outsb
dec
aad
inc
outsb
mov
mov
in
aad
outsb
cmp
mov
punpckldq
sbb
cli
jecxz
mov
mov
pop
jns
jo
js
jbe
push
push
out
aas
mov
cmpsb
fisubrs
mov
jne
pop
mov
cmp
push
jecxz
sahf
dec
scas
mov
je
aaa
subl
lret
fwait
and
add
sbbb
das
jne
js
push
cmp
mov
enter
das
popf
test
scas
ficoms
dec
das
pushl
push
mov
mov
mov
push
sti
scas
mov
les
mov
cmp
lock
pop
imul
hlt
dec
mov
js
mov
outsl
hlt
mov
scas
cmp
xchg
setb
xorl
scas
jmp
jo
or
jle
scas
mov
scas
aas
cld
mov
loope
cwtl
jl
pushf
imul
dec
scas
mov
fs
fwait
mov
pop
jo
testl
jno
int
js
mov
das
scas
push
lods
pop
in
cltd
sbb
scas
je
mov
pop
push
pop
mov
shr
cmp
mov
push
out
and
repz
aaa
das
adc
adc
ljmp
mov
das
or
mov
repz
jno
or
sbb
cwtl
outsl
mov
pop
aaa
cwtl
xchg
pop
stc
add
popf
mov
call
aam
jae
pop
scas
arpl
ja
sub
and
das
aas
imul
repz
das
adc
arpl
loope
xor
icebp
ja
das
ds
mov
or
fbld
pop
cwtl
mov
lret
adc
xchg
jb
xchg
jae
cmpsl
pop
movsb
dec
xchg
lock
loopne
cs
jne
stos
push
xchg
pop
pushf
cltd
jae
stos
rcrb
xchg
mov
fistpl
fisubrl
pop
stos
sbb
xlat
out
into
sbb
pop
addr16
pop
sbb
movsb
outsb
fisubs
push
push
out
movsb
das
pop
mov
fcoml
push
push
in
dec
push
cwtl
fimull
fisttpll
dec
in
dec
adc
and
jecxz
cld
mov
daa
cltd
pop
mov
and
cld
stos
pop
test
outsb
push
sbb
ds
dec
cltd
insl
shll
sbb
es
mov
lahf
lds
lret
push
sbb
pop
mov
lcall
pop
sbb
arpl
loopne
sbb
aas
cwtl
out
int3
ja
inc
pop
pop
int
lock
mov
inc
pop
out
mov
out
stos
pop
ficompl
pop
movsl
fwait
stos
mov
mov
sub
lcall
arpl
jle
push
inc
je
lret
or
fiaddl
push
mov
sbb
fisttpll
arpl
inc
jno
ja
inc
xor
cwtl
aas
inc
mov
pop
popa
jl
stos
popf
push
pop
out
sbb
mov
stos
popa
pop
push
xchg
push
jbe
in
arpl
popa
movsl
inc
pop
lahf
popf
aas
out
push
xchg
pop
adc
das
loope
fcomps
sbb
js
push
movsb
lds
ljmp
mov
out
ja
lds
out
dec
mov
arpl
das
popa
sub
sbb
mov
pop
push
xor
into
xchg
stos
das
sbb
outsl
lahf
jno
movsl
std
out
std
stos
ss
sbb
pop
inc
jno
sbb
and
fistpl
fcompl
mov
mov
xchg
mov
push
inc
int
aas
aaa
inc
mov
sahf
popa
jge
xchg
cwtl
push
sar
mov
lds
fcoml
fistps
jmp
pop
popa
ljmp
lcall
and
pop
inc
icebp
jl
xchg
inc
cmp
mov
inc
pop
out
ffree
jbe
cmp
xchg
mov
jnp
shl
inc
pop
jecxz
movsl
arpl
shlb
sti
icebp
lret
out
mov
sbb
pop
sarl
out
addb
out
or
adc
push
sub
lds
lds
mov
in
aaa
jbe
cmp
xchg
mov
push
fcompl
rcr
xor
pop
adc
xchg
test
sbb
adc
sbb
cmc
jl
fisubrs
pop
sbb
rclb
movsb
fcoml
sahf
mov
push
xchg
pop
sahf
js
lahf
mov
out
mov
and
jnp
jae
cs
pop
xchg
pushf
cmpsb
jae
xchg
lods
cmpsb
fdivrs
pop
lcall
arpl
xlat
in
in
test
jb
call
pop
jne
outsb
mov
aam
ficoms
repz
enter
jecxz
pop
cmpsb
lret
daa
push
out
dec
rcrb
pop
mov
mov
push
and
cli
ja
out
mov
jbe
fdiv
mov
int
movsb
std
inc
cmp
mov
inc
pop
out
movsb
mov
fwait
cmpsb
pop
inc
jmp
mov
sub
push
fistpll
cmp
dec
popa
inc
outsb
test
je
out
fstpt
mov
jl
xchg
inc
cmp
mov
inc
pop
out
jbe
cmp
xchg
mov
ljmp
jae
enter
pushf
xchg
ljmp
pop
and
out
popa
fldl
jmp
dec
mov
dec
push
pop
pop
pop
push
adc
outsl
cmp
arpl
js
lds
out
dec
mov
cmp
lds
pop
adc
xor
push
popa
dec
pop
lods
fsubs
jbe
call
mov
cmp
mov
fcomps
xchg
out
mov
inc
jne
inc
test
fcoml
int
and
inc
cmp
mov
inc
pop
out
mov
out
js
sub
pop
push
lahf
xchg
pop
adc
call
sbb
cltd
pop
retw
out
dec
popa
fs
lods
fisubs
aam
jns
jno
pop
push
in
stc
repnz
pop
aam
xchg
inc
cmp
mov
inc
pop
out
in
inc
arpl
out
cmp
int
and
bound
lcall
inc
jno
in
inc
sub
out
rolb
int
lcall
insl
test
fnstcw
maxps
push
dec
sbb
outsl
aaa
lds
dec
mov
out
fdivl
mov
adc
xor
push
popa
lods
fucom
pop
lahf
jge
push
outsl
lods
fwait
imul
fmul
xchg
mov
fistpll
cmc
cmp
out
push
in
movsb
je
mov
jae
inc
push
out
pop
out
je
out
ja
fsubrs
mov
mov
xchg
inc
out
jl
insl
daa
push
jae
jge
repnz
lock
xchg
jne
jnp
pop
pop
cmpsb
out
push
push
fcomps
ljmp
cs
push
insl
xchg
dec
fistps
and
out
sbb
cltd
lods
inc
pop
outsl
sti
fidivs
std
jmp
popf
xchg
out
sbb
mov
dec
lcall
out
outsl
ja
and
pop
mov
int
aas
testl
pop
out
mov
pop
xorl
lds
vpxor
aad
or
clc
aas
inc
mov
push
pop
aaa
inc
arpl
out
ja
inc
int
aas
mov
mov
pop
popa
mov
jge
mov
vmovd
out
js
inc
or
mov
pop
out
inc
aaa
jbe
lds
mov
adc
xchg
mov
push
vpxor
ja
mov
fdivl
loopne
and
movsl
inc
jg
jne
popa
sbb
dec
cmp
divps
push
movsb
sbb
out
dec
popa
jge
das
pop
lahf
outsb
arpl
cmpsb
ja
std
inc
sti
lds
out
mov
mov
out
fistpl
sbb
push
js
not
lds
mov
int3
js
mov
sti
out
outsl
mov
inc
arpl
out
clc
inc
xabort
push
sbb
pop
push
mov
cmpsb
mov
cltd
frstor
jbe
inc
inc
inc
jo
aad
lea
loop
jo
testl
cmpl
jno
mov
in
divl
fidivrs
jo
test
jo
data16
fwait
in
cld
int3
divl
out
mov
jp
xchg
pop
loop
mov
jo
jbe
insl
pop
out
xchg
sbb
jns
mull
mov
lret
in
mov
push
push
inc
push
daa
cwtl
push
aad
dec
mul
jbe
mov
push
mov
and
dec
pop
pop
movsl
scas
enter
test
jbe
in
stos
popf
mov
cmc
mov
out
xor
in
xlat
xchg
fcmovu
cwtl
loopne
pop
fstpt
out
cmp
sti
in
sub
fistpl
mov
js
mov
pop
pop
test
movsb
out
pop
jne
dec
pop
cmc
cmp
jne
aaa
out
mov
popa
iret
in
dec
pop
je
mov
out
xor
idiv
repnz
dec
stc
outsb
js
push
mov
cmp
leave
dec
lods
test
xor
xor
mov
imull
mov
clc
js
fisubl
int
jbe
pop
js
jbe
mov
fidivrl
ja
dec
js
mov
insb
js
test
pop
js
jbe
mov
fnstsw
jbe
js
sub
mov
fnstsw
ja
js
mov
js
divl
jbe
jb
js
or
js
mov
jbe
js
push
cmp
js
aaa
clc
pop
cmp
ja
clc
pop
cmp
adc
cmp
pop
mov
fs
cmp
aaa
push
clc
clc
aaa
cmp
aaa
dec
clc
std
push
fsubs
loop
jge
insl
add
flds
int
xchg
ficomps
mov
rcrl
pop
sahf
data16
lahf
pop
out
jp
sbb
imul
mov
adc
movsb
out
push
pop
mov
pop
push
mov
pop
ret
in
testb
xchg
push
shrb
iret
jae
out
stos
in
shll
sbb
cmp
or
rorl
cmp
mov
inc
push
ja
stos
push
cwtl
movsl
fldt
fdivrs
stc
fucomp
sahf
aam
sbb
aas
dec
mov
les
cmpsb
sbb
frstor
adc
adc
add
bound
out
insl
dec
shll
sbbl
sub
add
inc
insl
jl
sub
fistpl
arpl
pop
std
imul
jmp
pop
call
cmp
ficompl
dec
aaa
sahf
fldl
pop
cs
adc
lahf
cmpsb
adc
js
imul
jae
ficoml
xor
popf
fs
jb
pop
sbb
outsb
aaa
cmc
mov
fisubrs
jnp
inc
fisubl
push
outsl
sbb
test
dec
push
jo
pushf
push
pop
test
adc
xor
ficoml
iret
push
mov
fisubl
in
push
es
roll
data16
fisubrs
and
add
inc
xchg
roll
cmp
int3
divb
stc
cmp
xor
aaa
mov
cmp
xor
arpl
mov
stc
cmp
xor
jbe
mov
mov
mov
mov
dec
aaa
scas
scas
negb
cmp
mov
mov
jnp
cmp
mov
jl
arpl
sbb
shl
mov
xchg
mov
sub
test
mov
aaa
arpl
dec
ja
cmp
pop
mov
mov
dec
cmp
js
jbe
pop
js
xchg
mov
sub
divb
pop
mov
cmp
mov
mov
jnp
js
scas
mull
cmp
hlt
add
std
xchg
loop
mov
mov
jbe
aaa
clc
xchg
test
pop
mov
in
incb
divb
push
mov
pop
cmp
mov
add
jbe
cmp
and
xor
cmp
mov
sub
xchg
cmpsb
inc
out
inc
xchg
cld
sub
add
mov
aaa
arpl
hlt
xor
js
mov
mov
aaa
jg
sub
aaa
add
jl
cmp
xchg
dec
divb
call
ret
outsl
xchg
sub
aaa
divl
divb
push
mov
pop
js
ja
fdivr
sti
mov
ja
out
cmp
cmp
movsb
xor
js
aaa
out
cmp
cld
sub
ja
dec
sub
xor
dec
js
ja
mov
mov
mov
mov
cmp
aaa
mov
ja
xor
jbe
sbb
mov
clc
pop
idivb
mov
jo
idivb
cwtl
cmp
ja
divl
cmp
pop
push
mov
mov
aaa
stc
cmp
xor
mov
sub
cmpsb
xchg
jno
testl
aaa
popa
xchg
mov
sub
cmp
movsb
in
dec
cmp
hlt
xor
ja
mov
divb
mov
cmp
cmpsl
jne
cmp
js
pop
mul
mov
jbe
mov
and
or
jno
push
mov
pop
ja
js
mov
mov
sub
js
push
out
scas
mov
cmp
hlt
mov
cmp
hlt
sub
and
push
test
mov
arpl
mull
dec
fldcw
pop
call
les
add
ljmp
adc
aaa
mov
cmp
inc
push
mov
jno
push
mov
pop
mov
js
testl
call
cmpsb
jmp
jge
mov
outsb
push
mov
cmpsb
in
int3
mov
outsb
push
mov
out
in
int3
mov
outsb
push
mov
push
test
outsb
push
mov
call
arpl
outsl
mov
jbe
mov
xor
aaa
fdivrs
ja
aaa
dec
mov
cmp
pop
mull
dec
cmp
cmp
pop
js
cmp
int
js
sub
cmpsb
dec
out
aaa
xchg
je
aaa
daa
shll
ja
dec
hlt
xor
int
mov
cmp
arpl
hlt
xor
jbe
mov
mov
sub
ja
inc
jo
int
xor
aaa
pop
cmp
ja
scas
out
cmp
test
pop
cmp
js
scas
out
cmp
cld
sub
mov
dec
sub
mov
dec
mov
int
in
dec
ja
outsb
push
mov
cmpsb
in
dec
mull
outsb
push
cmp
cmpsb
in
dec
js
outsb
push
mov
sub
imul
enter
divl
inc
notl
aaa
test
jno
push
mov
mov
mov
cmp
xor
arpl
js
cmp
xor
dec
mov
sub
cmp
dec
sub
xor
dec
ja
ja
cli
mov
mov
imul
dec
mul
jbe
cmp
cli
js
js
mov
js
cmp
mov
cmp
jl
iret
sub
test
stc
cmp
xor
stc
cmp
xor
arpl
or
cmp
push
mov
mov
mov
sub
mov
cli
mov
add
dec
aaa
arpl
notl
cli
cmp
idivl
in
xchg
mov
mov
loopne
scas
call
addr16
xchg
aaa
outsl
sub
aam
jbe
idivb
mov
out
mov
mov
idivl
js
jbe
js
je
mov
sub
cmpsb
xchg
mov
loop
xor
mov
dec
aaa
arpl
hlt
xor
cmp
cli
js
idivl
popa
mov
imul
idivb
cmp
ss
ja
iret
sub
mov
jo
negb
aaa
jno
push
mov
js
mov
mov
aaa
jbe
cmp
mov
cmp
mov
sub
xchg
cmpsb
inc
out
aaa
hlt
sub
aaa
int
cmp
ja
js
dec
mov
mov
ja
dec
sub
js
mov
mov
divb
jbe
fsubr
outsl
ja
outsl
cmpsl
jne
ja
divl
mulb
dec
aaa
int
js
ja
mov
jbe
mov
popa
adc
or
jno
push
mov
sub
mov
push
out
scas
mov
cli
mov
pop
mov
aaa
mov
mov
jl
arpl
hlt
sub
cmp
dec
push
js
cli
aaa
sarb
divb
mov
sub
inc
push
or
xchg
sub
idivl
xlat
jo
divb
js
aaa
mov
cmp
mov
dec
dec
test
mov
out
mov
mov
xchg
cmpsb
inc
out
cmp
sub
aaa
int
mov
scas
mov
cmp
shlb
scas
scas
cmp
cmp
mov
mov
dec
divb
call
js
outsl
enter
js
jo
negb
aaa
jo
cmp
pop
ja
mov
dec
test
arpl
js
cmp
pop
mov
sub
mov
mov
addr16
jbe
std
icebp
mov
mov
cli
shl
mov
arpl
xor
mov
mov
divb
cmp
mov
lea
mov
dec
mov
dec
aaa
int
xor
ja
cmp
mov
aaa
dec
test
arpl
negl
cmp
cmpsb
sarb
pop
hlt
add
mov
aaa
pop
fcmovbe
ja
push
hlt
xor
int
ja
cmp
arpl
hlt
xor
jbe
cs
push
cmp
sub
xor
mov
dec
ja
and
xor
mov
mov
out
mov
mov
je
aaa
xchg
cmpsb
inc
out
ja
sub
ja
mov
aaa
cmp
xor
aaa
push
mov
and
dec
mull
hlt
xor
dec
notl
cli
cmp
mov
divb
call
pop
hlt
sbb
les
xorb
loop
cmp
dec
or
ja
mov
xchg
loope
arpl
or
mov
icebp
cmp
dec
or
mov
mov
fdivl
idiv
sbb
sbb
negl
dec
sbb
negl
push
fstl
dec
sbb
notl
xchg
pop
scas
negl
xchg
fidivrs
sbb
cmp
cwtl
call
outsb
outsb
mov
jne
cmp
aaa
and
dec
ja
pop
arpl
cs
int
cs
cmp
xor
sub
jbe
xchg
adc
fdivrl
xchg
adc
je
js
pop
mov
mov
adc
adc
adc
dec
adc
adc
cmpsb
pop
mov
xchg
outsb
movsb
sub
aaa
mov
jmp
aaa
dec
mov
ja
imull
xor
mov
pop
sbb
mov
push
test
and
xor
cmpsb
pop
mov
ja
testl
lea
cmp
mov
adc
bound
xchg
imul
mov
xor
mov
out
mov
mov
mov
mov
mov
jo
cmp
fdivrs
mov
and
arpl
mov
dec
mov
int
cmp
ja
js
dec
mov
mov
mov
daa
mov
cmp
inc
mov
or
jbe
or
adc
and
sub
cmp
xor
arpl
js
cmp
xor
jbe
xor
mov
dec
js
mov
ja
je
cmp
cmp
sub
cmp
js
dec
ja
mov
js
dec
sub
cmp
fsubrl
push
mov
or
test
jo
idivb
dec
dec
aaa
int
mov
jbe
cmp
xor
test
mov
stc
cmp
xor
mov
sub
cmpsb
xchg
jno
mov
mov
aaa
popa
cmp
cmpsl
jbe
xor
jg
testl
scas
scas
js
xchg
mov
dec
divb
call
je
loopne
sub
test
jno
push
mov
dec
mov
dec
ja
and
xor
arpl
dec
cmp
mov
mov
mov
sub
dec
out
in
mov
mov
jecxz
mov
mov
mov
aaa
scas
scas
cmp
mov
jnp
idiv
xor
jbe
cmp
gs
shll
mov
inc
jo
dec
xor
jbe
aaa
mov
cmp
inc
push
mov
or
jno
push
mov
imull
xchg
sub
out
aaa
decb
loop
push
mov
aaa
loope
mov
scas
mov
aaa
jg
test
mov
scas
js
idivl
mov
jbe
icebp
call
mov
xor
test
stc
cmp
inc
push
mov
aaa
test
mov
stc
cmp
xchg
mov
pop
imull
mov
sub
mov
push
out
scas
mov
cmp
shlb
scas
scas
ja
aaa
jg
mov
mov
mov
scas
cmp
mov
jnp
js
xor
jbe
mov
call
outsl
pop
sub
cmp
cmpsb
xor
aaa
pop
cmp
ja
scas
out
cmp
test
pop
cmp
js
scas
out
cmp
cld
sub
js
dec
sub
js
dec
mov
int
in
dec
ja
outsb
push
mov
cmpsb
in
dec
mull
outsb
push
cmp
cmpsb
in
dec
js
outsb
push
mov
sub
mov
in
mov
sub
xchg
jo
negb
aaa
mov
stc
cmp
xor
stc
cmp
xor
arpl
js
cmp
xchg
dec
mov
call
mov
mov
mov
divb
mov
ja
scas
ja
xchg
mov
jnp
cmp
jg
js
mov
hlt
xor
dec
mov
call
cld
sub
aaa
dec
test
ja
aaa
in
out
mov
mov
out
mov
mov
jbe
cmp
xor
xor
mov
sub
fdivs
mov
aaa
mov
imull
jg
divl
mov
aaa
hlt
sub
aaa
call
aaa
movsb
sbb
xchg
sub
aaa
ja
jo
test
mov
pop
imull
mov
jno
push
mov
dec
ja
dec
js
cmp
pop
mov
sub
cmpsb
inc
out
ja
sub
ja
mov
aaa
mov
arpl
hlt
xor
int
mov
jg
sub
push
mov
mov
jbe
aaa
mov
call
pop
sub
ljmp
test
jno
push
mov
js
mov
mov
sahf
jbe
cmp
fdivrs
mov
sub
imul
dec
sub
testl
mov
arpl
cmp
dec
sub
jecxz
mov
js
mov
aaa
stc
xor
jbe
call
cmp
xchg
sub
cmp
xlat
jo
testb
test
jno
push
mov
test
in
out
mov
mov
je
js
cmpsb
inc
out
js
sub
aaa
int
in
dec
ja
mov
mov
mov
mov
aaa
mov
ja
xor
jbe
jnp
rcll
call
jne
mov
mulb
dec
aaa
int
xor
mov
mov
mov
xor
fdivrs
cmp
dec
js
cmp
pop
mov
sub
arpl
hlt
xor
dec
js
aaa
int
mov
jg
sub
testb
scas
cmp
cmp
mov
mov
dec
divb
jle
mov
outsl
sub
and
idivb
mov
mov
cmp
inc
push
mov
pop
aaa
test
jno
push
mov
mov
mov
sub
out
jg
sub
adc
in
xchg
cld
sub
and
push
test
arpl
xor
mov
mov
divb
cmp
js
xchg
sub
aaa
mov
ja
jbe
aaa
arpl
xor
mov
aaa
out
cmp
cmp
cmp
pop
js
mov
xor
sub
ja
dec
out
ja
je
mov
jbe
dec
aaa
es
ja
movsb
in
dec
mov
aaa
hlt
xor
dec
ja
cmp
and
dec
js
jle
mov
divb
mov
mov
mov
pushl
pop
mulb
dec
aaa
int
xor
ja
aaa
out
mov
mov
dec
js
cmp
pop
mov
sub
arpl
hlt
sub
cmp
push
hlt
xor
aaa
push
mov
cli
ja
idivl
in
push
js
and
dec
mov
cmp
xor
inc
inc
or
xchg
sub
int3
jo
divb
dec
push
mov
xor
or
mov
stc
cmp
dec
push
mov
xor
or
sub
mov
mov
mov
mov
scas
scas
ja
mov
mov
loop
scas
mul
mov
cmp
loope
mov
aad
or
adc
shr
gs
lea
cmp
xor
arpl
ja
cmp
xor
stc
cmp
push
mov
pop
js
js
mov
mov
mov
adc
in
push
test
aaa
shlb
mov
arpl
notl
mov
js
xor
mov
scas
scas
mul
jb
lcall
xchg
xor
jl
iret
sub
aaa
xchg
outsl
sbb
ja
aaa
mov
cmp
mov
arpl
jno
or
cmp
mov
jbe
outsl
cmp
mov
in
mov
fdivl
aaa
cld
sbb
sbb
and
aaa
rcrb
fimuls
pushl
push
dec
sbb
aaa
push
pop
xchg
pop
scas
ja
xchg
je
ja
fidivrs
sbb
mov
pop
adc
rcll
cmp
outsl
and
dec
mov
aaa
mov
mov
js
idivl
mov
jbe
js
mov
cmp
inc
or
adc
jno
mov
mov
mov
adc
adc
adc
adc
adc
dec
adc
adc
sub
dec
push
mov
insb
or
jnp
mov
adc
sbb
jbe
aaa
cmp
ja
cmp
mov
mov
jbe
test
js
mov
mov
adc
fsubl
cld
adc
cld
adc
adc
mov
fistl
xchg
adc
je
js
pop
mov
std
cmpsl
sahf
xchg
je
js
fidivrs
sbb
jb
pop
imul
outsb
dec
test
xchg
outsl
sbb
or
aaa
pop
mov
jbe
outsl
mov
mov
icebp
test
js
ja
gs
mov
xchg
adc
fdivrl
mov
mov
push
dec
lea
push
sahf
divl
xor
cmpsb
pop
ja
mov
dec
pop
hlt
testl
adc
cmpsb
pop
mov
cmp
ja
jbe
mov
push
jns
int
aaa
pop
cmp
mov
xor
adc
fcompl
adc
cmp
pop
lea
mov
fstl
xchg
adc
adc
dec
adc
adc
cmpsb
loope
jno
arpl
adc
sbb
aaa
jbe
sub
or
ja
mov
mov
jo
divl
or
cmp
addr16
div
cmp
mov
in
mov
fdivl
aaa
cld
adc
adc
dec
adc
adc
dec
adc
adc
xchg
adc
je
ja
fidivrs
sbb
ja
out
adc
adc
outsl
jmp
aaa
fdivrs
pop
ja
aaa
mov
xor
pop
sbb
idivl
xor
shlb
sti
testl
xchg
adc
je
notl
testl
testl
test
imul
jne
cmp
jbe
adc
sbb
outsb
out
cmp
ja
cmpsb
xor
outsb
sub
outsb
sub
out
cmp
cld
adc
fcompl
dec
adc
dec
adc
adc
adc
cld
adc
adc
mov
loope
sahf
xchg
adc
and
dec
fs
or
outsb
pop
adc
outsl
jmp
int
ja
xor
sub
mov
dec
int
cs
int
cs
gs
add
movsl
cmp
aaa
ja
jno
stc
sbb
mov
xchg
pop
negl
gs
cmp
jno
stc
sbb
lea
fisttpl
jbe
jmp
fucomp
arpl
aad
test
cmp
mov
addr16
xlat
jo
mov
xor
ds
sbb
mov
divb
aaa
es
ja
movsb
in
dec
mov
aaa
hlt
xor
xchg
sub
push
mov
pop
imull
mov
cs
imul
scas
scas
mul
cmpb
ja
cmpb
test
icebp
push
aaa
scas
jo
cmp
pop
dec
js
cmpsb
xor
mov
adc
mov
xor
pop
cli
shlb
cmp
xor
cli
shlb
negl
into
inc
icebp
ja
cmp
cmp
dec
js
mov
mov
call
push
mov
sbb
mov
aaa
scas
scas
aaa
pop
ja
cmp
xchg
scas
scas
negl
sahf
xchg
test
int3
mov
jo
cmp
scas
divl
mov
cs
mov
jo
aaa
hlt
xor
dec
ja
aaa
int
mov
ja
dec
hlt
xor
int
sub
pop
sbb
jo
cmp
js
mov
mov
cs
cmp
mov
jo
ja
xor
dec
mov
aaa
int
not
ja
dec
hlt
xor
sub
jno
movsb
div
fwait
js
inc
jo
int
ja
js
mov
mov
cs
js
shll
mul
jle
aaa
dec
loop
mov
or
cmp
inc
mov
inc
mov
mov
mov
mov
out
mov
dec
loope
mov
add
aaa
jbe
fsubrl
mov
scas
mov
mov
int
ficompl
arpl
idiv
cmp
xor
arpl
cs
mov
mov
or
cmp
inc
mov
or
cmp
mov
mov
jl
jecxz
cmpsb
xor
cmp
pop
js
scas
out
cmp
cld
cs
cmpsb
shll
mulb
outsb
push
aaa
int
in
dec
ja
outsb
push
mov
cmpsb
in
dec
mull
scas
pop
fistpl
icebp
pop
cmp
cmp
dec
js
cmp
pop
mov
cs
adc
mov
dec
or
testb
jnp
ja
scas
ja
mov
cmp
mov
mov
mov
inc
jo
int
mov
je
mov
cs
cld
mov
dec
or
cmp
xchg
scas
scas
ja
idivl
mov
cmp
repz
pusha
ja
xchg
jo
cmp
mov
out
mov
fdivrs
adc
mov
in
push
aaa
int
not
ja
cmp
dec
mov
js
xor
xchg
sub
jo
cmp
mov
js
jl
mov
cs
divl
daa
dec
mov
scas
mulb
mov
jnp
js
scas
mov
mov
cmp
and
sarb
pop
mov
add
cmp
cmp
js
xchg
mov
mov
mov
mov
mov
in
push
aaa
int
js
ja
mov
js
jg
testl
cmp
pop
push
mov
ja
mov
cs
js
pop
mov
jno
mov
or
cmp
mov
mov
in
dec
mov
jbe
test
ficomps
arpl
js
cmp
pop
mov
cs
mov
arpl
xor
pop
fcmovbe
aaa
xor
ja
cmpb
mull
pushf
icebp
icebp
pop
jbe
test
jno
push
mov
imull
adc
pop
mov
jno
mov
ret
ja
mov
aaa
loope
mov
scas
mov
mov
int
ja
pop
mov
test
jno
push
mov
cmp
xchg
cs
mov
ja
hlt
xor
pop
fcmovbe
aaa
cmp
xor
fcmovbe
mov
ja
dec
mull
mov
jo
cmp
xor
or
mov
stc
xchg
cs
sbb
mov
or
aaa
dec
mov
or
mov
mov
or
sub
jo
cmp
js
cmp
xor
jbe
cs
ja
mov
jo
dec
push
test
in
dec
aaa
in
push
ja
cli
mov
mov
imul
dec
mull
mov
jo
cmp
push
mov
mov
dec
mov
cs
mov
jo
inc
push
test
ja
aaa
cmp
xor
notl
cli
cmp
idivl
in
xchg
mov
add
cmp
test
mov
stc
cmp
inc
push
xchg
cs
clc
mov
dec
ja
scas
negb
cmp
xchg
scas
scas
mov
js
cmp
cmp
fiadds
pushl
pop
cmp
mov
dec
mov
mov
ja
mov
mov
arpl
hlt
xor
pop
fcmovbe
ja
js
dec
mov
mov
js
mov
xlat
icebp
js
jo
cmp
js
mov
cs
js
pop
mov
jno
mov
cmp
mov
jnp
cmpb
jbe
shl
clc
mov
in
out
mov
mov
add
mov
add
push
test
js
aaa
cmp
mov
cwtl
js
fcmovbe
mov
pop
hlt
xor
fdivrs
pop
pop
test
cwtl
jbe
pop
cmp
dec
js
cmp
pop
mov
cs
idivb
xchg
fstpt
arpl
mov
mov
scas
mov
mov
divl
gs
push
mov
pop
mov
js
testl
call
push
mov
sbb
mov
jbe
dec
aaa
es
ja
movsb
in
dec
mov
inc
push
test
sub
nop
call
mov
pop
cmp
dec
js
cmp
pop
mov
cs
add
mov
mov
scas
aaa
mov
jg
idivl
sub
test
sbb
int
xor
js
cmp
mov
ja,pn
shll
mulb
outsb
push
aaa
int
in
dec
ja
outsb
push
mov
cmpsb
in
dec
mull
scas
pop
cltd
movsl
and
scas
ja
jo
cmp
mov
jbe
xchg
cs
shlb
jg
testb
jnp
ja
scas
ja
cmpb
testl
mov
inc
jo
int
mov
jbe
cmp
xor
ficomps
and
pop
ja
cmp
mov
mov
scas
mov
cmp
divl
js
pop
push
xlat
icebp
in
xchg
jo
cmp
mov
fdivrs
adc
xchg
mov
dec
mulb
hlt
xor
dec
notl
and
dec
mov
js
xor
xchg
sub
jo
cmp
mov
cmp
inc
push
mov
jle
ja
mov
sbb
mov
divb
mov
cmp
mov
jl
arpl
pusha
mov
cmp
js
mov
cs
mov
jno
mov
cmp
jg
ja
mov
mov
imul
mull
jbe
push
icebp
lds
out
cmp
js
cmp
pop
mov
cs
div
xchg
fstpt
arpl
xor
dec
mov
pusha
mov
mov
pop
hlt
xor
fdivrs
fwait
xchg
test
cwtl
jbe
pop
cmp
dec
js
cmp
pop
mov
cs
add
mov
add
push
test
mov
jbe
scas
ja
cmpb
mull
pushf
ja
jecxz
xchg
jo
cmp
js
testl
call
push
mov
sbb
mov
jbe
dec
aaa
es
ja
movsb
in
dec
mov
inc
push
test
mov
add
cmp
cmp
xor
cs
mov
mov
jbe
divb
mov
mov
mov
inc
jo
int
xor
js
cmp
mov
cs
shll
mulb
outsb
push
aaa
int
in
dec
ja
outsb
push
mov
cmpsb
in
dec
mull
scas
pop
and
and
scas
mov
jo
cmp
mov
jbe
xchg
cs
shlb
jg
testb
jnp
ja
scas
ja
mov
cmp
xchg
sub
icebp
xchg
lahf
js
cmp
insb
cmp
mov
cs
cld
mov
dec
or
cmp
mov
mov
jnp
imull
mov
fbld
jp
fwait
mov
mov
insb
js
test
jno
push
mov
mov
and
mov
mov
scas
aaa
pop
idivl
ja
cmp
scas
negl
addr16
scas
mov
mov
fdivrs
mov
cs
add
push
test
not
aaa
mov
arpl
xor
sub
in
cld
xchg
in
shll
in
out
cmp
mov
cs
divb
not
idivb
arpl
xor
mov
jbe
jnp
or
cmp
sbb
test
mov
stc
cmp
push
mov
cs
mov
jno
mov
js
scas
aaa
pop
mov
cli
jbe
mov
pop
hlt
xor
fdivrs
adc
lds
out
cmp
js
cmp
pop
mov
cs
add
mov
add
push
test
mov
jbe
scas
ja
cmpb
mull
pushf
ja
sahf
imul
mov
mov
out
mov
push
js
and
arpl
xchg
jbe
aaa
mov
scas
scas
ja
mov
mov
mov
pusha
xlat
icebp
loop
xchg
jo
cmp
js
cmp
mov
loop,pn
push
mov
fldt
jbe
test
in
dec
aaa
in
push
ja
and
dec
mov
jle
test
adc
int
xor
js
cmp
mov
mull
daa
in
dec
mulb
outsb
push
aaa
int
in
dec
ja
outsb
push
mov
cmpsb
in
dec
mull
scas
pop
fsubp
and
or
cmp
cmp
dec
js
cmp
pop
mov
xchg
cs
cmp
mov
divb
popa
xchg
mov
jnp
imull
pushf
ja
xor
cmp
mov
cmp
pop
mov
cs
js
mov
add
dec
hlt
xor
dec
mov
ja
cli
not
mov
cmp
dec
mul
mov
sbb
icebp
scas
js
jo
cmp
jbe
mov
mov
mov
jno,pn
and
xchg
mov
jnp
imull
jg
mov
js
divl
movsb
sub
mov
mov
xor
or
sbb
mov
ja
dec
or
divb
cmp
scas
scas
mov
mov
in
clc
lahf
popf
icebp
shll
xor
cmp
cmp
js
xchg
mov
sarl
dec
notl
cli
cmp
aaa
mov
arpl
xchg
jbe
divl
std
mov
js
js
ja
mov
aas
shl
pop
mov
jno
mov
js
scas
aaa
pop
mov
cli
jbe
mov
pop
hlt
xor
xchg
mov
adc
sub
jo
sbb
adc
ja
lahf
sub
pop
jno
cmp
sub
clc
mov
scas
cmp
push
fsubl
js
sbb
pusha
out
jno
xchg
out
push
mov
jbe
xchg
pop
icebp
out
jno
xchg
jecxz
dec
lock
mov
mov
push
xchg
sarb
out
xchg
sbb
out
jno
and
sarl
jno
int
pop
dec
fisubrs
cmp
jno
js
mov
mov
shll
pusha
and
faddp
hlt
mov
faddp
and
shlb
ficomps
shll
fisubs
jno
fiadds
cmp
lock
fisubs
imul
pop
ficomps
cld
fisubs
js
dec
ficomps
cld
ficomps
dec
fdivp
mov
mov
ficomps
mov
cld
faddp
jl
ljmp
idiv
fisubs
testl
testl
mov
cwtl
shl
mov
or
mov
mov
push
loop
mov
xor
lock
xchg
loop
dec
out
mov
cmp
lock
push
insb
lock
jo
mov
pop
out
arpl
and
jo
mov
dec
mov
jbe
xchg
mov
jo
push
into
arpl
push
into
or
xchg
sub
dec
jno
ja
mov
dec
xchg
out
dec
out
data16
js
data16
mov
out
js
out
fisubl
fsubl
fcmovbe
mov
add
cld
out
jg
mov
repz
jge
gs
dec
fidivrl
mov
fidivl
xchg
out
and
divb
clc
adc
cmp
in
daa
pop
jbe
xchg
fidivl
imul
or
testb
loopne
jp
cmp
sbb
loop
imul
call
jnp
xchg
in
mov
jbe
sbb
inc
out
jno
fildll
fucomp
mov
and
jl
mov
jmp
lock
cmpsl
mov
mov
mov
cmp
jo
cmp
aam
inc
ljmp
jl
scas
mov
lds
cmp
jb
cmp
shrb
rep
out
mov
add
mov
cld
push
and
ja
rcll
push
popa
jecxz
rclb
mul
push
sbb
in
mov
dec
fsubl
push
sbb
jg
xchg
mov
xchg
xchg
push
fmull
push
push
cwtl
out
push
xchg
fmull
xchg
push
lds
xchg
test
dec
push
addr16
push
push
out
adc
mov
js
pop
push
xchg
shll
mov
pop
cmp
mov
fxch
sub
pop
test
adc
xchg
pop
sbb
mov
adc
js
sbb
pop
ds
push
push
imul
push
subl
lds
push
mov
xor
lock
xchg
xor
lahf
push
inc
or
lea
mov
cmpsl
pop
pop
jl
scas
cmp
in
imul
push
call
call
sar
fsts
push
fsts
push
xlat
push
and
pop
push
push
out
push
addr16
dec
push
xchg
jns
xchg
mov
dec
addr16
push
pop
fisubs
push
cmp
xchg
push
ret
mov
cmp
data16
push
pop
cmp
fdivrl
out
push
dec
cmp
test
dec
sub
repz
repz
js
push
scas
repz
js
clc
cmpsb
repz
nop
lock
repz
int
repz
int
repz
and
stc
repz
ja
and
mov
pop
repz
ja
ss
pop
jbe
and
jo
fwait
repz
js
int
repz
xchg
ljmp
and
fdivrp
daa
repz
clc
cmpsb
rep
jne
push
pushf
cmpsb
jmp
mov
jo
mov
pop
mov
fisubs
cld
mov
push
sub
mov
cmc
fiadds
mov
hlt
faddp
ja
pop
ficomps
ja
ja
jbe
mov
ficoms
ficoms
js
xchg
fiadds
js
hlt
fiadds
mov
push
fisubs
jbe
xchg
daa
testl
ja
div
pop
jbe
and
idiv
daa
mull
mull
js
ss
pop
ja
and
jecxz
daa
testl
and
int
mull
pop
jbe
pop
testl
mov
jp
mov
pop
ja
and
je
fwait
testl
and
jbe
push
icebp
test
fisubrl
dec
int3
data16
fisubrl
mov
out
ficompl
fcmovu
andl
add
out
fisubl
imul
dec
ficoml
add
in
fisubl
gs
ja
ja
push
out
cmp
mov
dec
fidivl
imul
out
ja
push
fidivl
ja
data16
jnp
jbe
xchg
jnp
sub
mov
mov
js
mov
test
jbe
adc
jnp
jne
and
jnp
jne
xchg
jnp
js
mov
jnp
jbe
test
cmp
mov
ja
and
jnp
jbe
mov
pop
mov
out
popf
jnp
jbe
clc
daa
jnp
ja
clc
daa
jnp
ja
clc
cmpsb
jnp
jne
int
jnp
xor
push
icebp
jnp
jne
xchg
dec
push
testl
les
jge
bound
bound
loope
push
xchg
and
jl
push
and
pusha
dec
push
xchg
fildl
lea
jo
push
or
xchg
js
addr16
push
js
push
push
xchg
addr16
ss
jnp
cmp
sahf
fdivrs
int3
pop
roll
push
fsin
daa
jnp
cmp
fcoms
push
jnp
lods
aaa
pop
adc
jnp
cmp
pop
jnp
inc
jbe
pop
jnp
cmp
jecxz
mov
jnp
jne
mov
mov
and
jnp
ja
and
jnp
ja
xchg
and
sbb
mov
jnp
ja
xchg
jnp
js
push
mov
mov
dec
push
js
push
decb
roll
push
or
push
fwait
js
push
push
shll
pop
fcoml
js
dec
xchg
mov
cwtl
negb
out
sahf
into
cld
push
daa
inc
jbe
xchg
push
cmp
in
pop
xor
xchg
push
aas
xor
xchg
push
aas
xor
xchg
push
aas
cmc
ja
inc
rcl
mov
dec
push
push
mov
addr16
mov
sbb
js
and
fdivp
pop
idiv
popa
jp
and
ja
push
stc
clc
pop
jns
enter
ja
or
scas
cli
jp
icebp
pop
sti
sub
jns
push
scas
cld
jp
icebp
pop
std
call
icebp
pop
pop
mov
mov
sbb
sbb
enter
pop
jp
push
scas
rcl
ja
pop
ret
jns
and
testl
cmp
cmpsb
lds
mov
in
jl
xchg
pushf
mov
pop
ja
jbe
fidivs
lock
ja
jb
or
jb
int3
lock
icebp
push
adc
js
fdivp
fidivs
lock
ja
jb
int3
lock
ja
mov
ja
cmp
ja
std
icebp
mov
jbe
lock
ss
hlt
fidivrs
hlt
jl
push
mov
std
stc
jl
pop
mov
ja
into
dec
lock
jne
div
mov
fsubl
xor
cmpsl
jecxz
mov
inc
fistpll
testl
mov
sarl
shl
lds
cmpsl
and
mov
test
dec
js
cmpsl
jecxz
and
mov
cmp
and
out
ja
cmpsl
and
xlat
jl
mov
pop
js
shlb
test
dec
js
cmpsl
out
xlat
jp
add
and
in
test
jp
in
arpl
loopne
jl
pop
cmp
lds
push
adc
jne
inc
fidivrs
les
lock
adc
ja
mov
add
sub
ja
paddsb
testb
fidivrs
push
push
in
pop
movsb
adcb
in
xchg
jae
stc
in
loop
adc
jae
inc
mov
in
jae
repz
jp
inc
xlat
js
add
test
inc
out
cmp
js
test
jecxz
cmp
and
dec
lds
cmpsl
out
xlat
jp
add
roll
dec
dec
jns
cmpsl
sub
jns
mov
and
jl
jecxz
cmp
and
js
mov
cmp
and
push
inc
jns
mov
cmp
and
jle
daa
push
fsubrp
scas
test
shrl
jbe
test
ja
ficoml
inc
cmpsl
mov
js
xchg
mov
cmpsl
test
ja
cmpsl
cmc
imul
jne
jle
test
cld
imul
jecxz
adc
xchg
imul
imul
jmp
jno
imul
jb
imul
loopne
std
cmp
sarb
inc
imul
jge
xchg
imul
daa
std
mov
jecxz
into
adc
ja
inc
mov
outsb
adc
outsl
add
jns
sarl
dec
js
addr16
jb
ja
cs
push
jae
mov
mov
mov
je
adc
jns
addr16
jbe
jns
mov
xchg
jns
ja
rcrb
js
jns
mov
pop
jbe
cmc
push
imul
imul
imul
add
loopne
imul
xor
jo
imul
in
xor
jo
imul
movsb
rcrb
shl
mov
sub
pop
in
f2xm1
xchg
pop
dec
lret
jo
scas
out
xchg
inc
or
out
add
test
mov
jno
in
call
lock
enter
lock
jg
call
fldl2t
call
imull
shl
jno
out
subl
jbe
insb
dec
in
jne
ljmp
ljmp
cmp
je
mov
jbe
lds
mov
mov
push
jbe
push
mov
cmpb
jo
fmulp
js
jno
faddp
mov
mov
xchg
fimuls
not
jno
faddp
js
shl
xlat
fiadds
fisubs
hlt
jno
fdivrp
loop
push
notl
jno
fdivrp
and
lock
fisubs
repnz
ficomps
mov
ljmp
cmp
decb
divl
daa
cli
ljmp
or
cmp
add
iret
lds
inc
mov
xchg
int
mov
xchg
int3
nop
mov
mov
lret
jecxz
cli
notl
and
inc
mov
xchg
leave
nop
mov
mov
enter
mov
jbe
adc
push
popa
mov
push
push
lds
idivb
push
ret
popa
mov
push
push
ret
mov
mov
int
rcrb
mov
push
push
lcall
xchg
dec
fidivl
shll
fisubrl
mov
cwtl
pop
xchg
xor
cld
fisubl
sti
jmp
ficoml
dec
xchg
fcmovb
pop
mov
add
pop
nop
gs
fisubrl
xchg
mov
add
pop
xchg
push
mov
ficompl
add
fdivl
imul
push
xchg
ficompl
int3
push
fcmovu
aaa
jmp
aaa
xchg
out
nop
mov
mov
outsl
jecxz
jge
inc
xchg
sub
mov
shll
fsubrl
insb
mov
jnp
xchg
imul
push
xchg
push
mov
imul
and
addr16
mov
xchg
xchg
mov
sub
out
popf
divb
pop
ja
mov
mov
mov
mov
roll
pop
les
jl
loop
inc
push
mov
test
mov
fsts
mov
xchg
inc
push
mov
loope
push
mov
push
pop
idiv
mov
add
testl
fsub
push
testl
mov
in
mov
cld
out
push
fdiv
out
push
dec
mull
xor
cld
push
mov
push
fdivrl
addr16
xlat
push
rcr
daa
dec
popf
ja
pop
xchg
jecxz
shlb
fdivrs
out
adc
dec
test
fnstenv
ja
pop
jbe
fadd
mov
cmpsb
inc
popf
jbe
xchg
jecxz
shlb
aad
push
inc
ja
out
adc
inc
lds
inc
mov
xchg
inc
adc
nop
mov
mov
jg
mov
test
cmp
js
cmp
mov
jne
push
xchg
xor
add
mov
cld
push
pop
add
fcoml
push
pop
fcoml
push
sbb
push
adc
dec
push
push
adc
dec
xchg
push
test
mov
dec
addr16
push
cmp
in
pop
inc
jne
xchg
push
jge
aaa
int
push
mov
push
divb
mov
jne
int
push
jge
cmp
xchg
push
ja
out
out
fldt
pause
mov
mov
repz
push
js
mov
loop
sarl
xchg
fdivrs
mov
lds
nop
mov
jecxz
cmp
shl
inc
mov
nop
mov
in
sarl
int
lds
jbe
fwait
repz
repz
inc
mov
xor
cmp
divb
movsl
jne
push
movsl
orb
jo
ficomps
cmp
jno
ficomps
aas
jbe
ficoms
aaa
mov
inc
fidivs
movsb
mov
aaa
ja
pop
ficoms
and
idivl
mov
xor
lock
fsubp
aaa
mov
aaa
int3
ljmp
mov
or
ljmp
xchg
xorl
push
fisubs
testl
xlat
js
test
cmp
adc
inc
jbe
xchg
mov
mull
out
and
adc
xchg
and
xchg
mull
not
jbe
mov
not
jbe
mov
mul
jne
test
cmp
mov
and
testl
xchg
mov
xlat
jbe
mov
mul
jne
xor
test
testl
ficompl
inc
neg
out
ficompl
hlt
mull
fimull
cmp
gs
cmp
cmp
xchg
fimull
out
cmp
xor
mov
insb
add
mov
imul
adc
out
cmp
jmp
repnz
jnp
jbe
and
jnp
jne
mov
mov
js
aaa
roll
int
inc
jne
xchg
jnp
jne
mov
jnp
mov
and
jnp
jbe
and
jnp
ja
xchg
fwait
mov
mov
mov
jbe
sub
out
daa
jnp
jbe
int
jnp
pop
ja
pop
jnp
xor
push
icebp
jnp
jne
and
cmp
cmpsb
jnp
jne
loop
push
pushf
mov
mov
xchg
hlt
push
inc
js
xchg
dec
push
out
cmp
call
jne
xchg
push
inc
js
xchg
pop
push
xchg
mov
pop
push
xchg
mov
lahf
push
jecxz
cli
mov
mov
out
push
lds
pop
push
xchg
fdivs
push
shll
aaa
call
jne
xchg
lahf
push
adc
mov
mov
jnp
xchg
outsl
fcomps
sub
jnp
push
fsin
daa
jnp
dec
fadd
mov
cmpsb
jnp
dec
roll
mov
sahf
push
cmp
idiv
cmpsb
jnp
jne
int
jnp
xor
push
stc
jnp
ja
and
mov
stc
jnp
ja
iret
inc
adc
dec
aaa
out
and
and
xchg
jnp
xchg
outsl
push
xchg
push
test
mov
mov
cld
push
call
call
and
pop
fmull
push
pop
fmull
push
push
out
push
sub
addr16
xlat
push
mov
popa
xchg
in
push
jmp
xlat
sar
push
mov
sbb
push
fdivl
dec
mov
xchg
test
mov
call
pop
fildll
hlt
gs
or
scas
cmc
sbb
enter
xchg
push
scas
not
jp
icebp
pop
clc
sub
stc
ja
icebp
pop
cli
lcall
enter
orl
mov
mov
push
std
sbb
fisubs
jge
aaa
or
icebp
jmp
mov
jp
or
scas
rcrl
jo
daa
ret
cmp
scas
ret
jp
icebp
pop
les
mov
mov
rcll
mov
div
xchg
cmp
pop
cmp
cmp
aaa
jb
ss
xor
icebp
push
adc
outsl
cmp
lock
or
jb
int3
lock
cmp
stc
repnz
jl
push
js
jbe
into
dec
lock
jbe
div
mov
lock
js
hlt
mov
mov
hlt
into
xor
stc
arpl
mov
js
jne
lock
js
jle
test
dec
js
cmpsl
loop
sbb
test
dec
js
cmpsl
jecxz
and
mov
cmp
and
loope
ja
xchg
and
nop
jns
rorl
jecxz
mov
test
dec
js
cmpsl
jecxz
and
mov
jbe
lock
call
pop
and
jmp
out
and
mov
jp
and
in
inc
js
mov
mov
cmp
mov
or
in
daa
mov
mov
aaa
mov
fidivrs
icebp
paddsb
in
movsl
jns
icebp
mov
aas
pop
jns
push
in
daa
mov
mov
jns
pop
js
enter
js
icebp
paddsb
shl
jl
imul
jae
stc
in
jecxz
adc
jae
inc
and
je
mov
fnstsw
push
loopne
add
cmpsl
daa
inc
mov
and
inc
inc
jp
mov
sti
js
fisttpll
ja
mov
rolb
xor
mov
movsb
add
and
dec
clc
icebp
fisubrs
dec
inc
js
lea
or
icebp
add
cmpsl
sub
jns
add
cmpsl
daa
push
pop
adc
jb
and
mov
dec
push
out
psadbw
imul
imul
imul
sub
push
push
imul
jg
imul
imul
imul
imul
imul
xor
imul
imul
push
add
aaa
pop
cld
fidivrs
test
mov
xchg
imul
daa
std
mov
jecxz
into
adc
ja
inc
mov
outsb
adc
sar
cld
adc
js
inc
jns
shll
jp
test
adc
jno
push
jb
ja
mov
ja
ficoms
and
out
into
shll
jns
mov
jns
shlb
loope
cmp
test
mov
jns
ficoms
jns
aaa
popf
jbe
imul
call
call
cmc
fcompp
imul
xlat
jne
xlat
imul
mov
jb
xor
add
js
imul
imul
in
push
imul
imul
aas
imul
hlt
imul
xlat
jno
fwait
pop
cwtl
mov
mov
stc
cmp
xor
js
jo
mov
stc
mov
jbe
pop
ficoml
in
push
test
aaa
shlb
cmp
xor
mov
mov
cli
not
idiv
icebp
sub
sahf
lds
js
mov
pop
mov
cmp
pop
mov
and
aaa
in
dec
mul
inc
push
aaa
int
mov
ja
imul
dec
mov
cmp
xor
mov
sbb
icebp
pop
jbe
test
mov
jbe
xor
mov
mov
cs
add
mov
add
mov
dec
aaa
arpl
hlt
xor
cmp
cli
js
idiv
icebp
sub
icebp
cli
aaa
jbe
jo
cmp
mov
js
jl
mov
jno,pn
and
mov
cmp
mov
mov
jnp
js
scas
mov
mov
in
das
sahf
xchg
test
pushf
mov
jo
cmp
cmp
js
aaa
dec
mov
cs
mov
and
arpl
hlt
xor
dec
cmp
cli
js
ja
mov
fs
cmp
mov
icebp
sahf
mov
xlat
jo
cmp
aaa
arpl
js
mov
cs
mov
mov
dec
cmp
jg
aaa
mov
mov
jbe
mov
pop
hlt
xor
fdivrs
cltd
arpl
jo
cmp
mov
mov
cs
cmp
in
dec
mulb
hlt
xor
insb
cmp
cmp
mov
jg
idivl
sub
inc
icebp
cmp
jo
cmp
divl
xor
xchg
cmp
mov
int
mov
jbe
jnp
or
cmp
inc
mov
aaa
scas
scas
mull
mov
pushf
xlat
icebp
xor
cmp
idiv
cmp
xor
arpl
cs
mov
mov
pop
fcmovbe
aaa
cmp
xor
aaa
push
mov
and
dec
mull
mov
jo
cmp
dec
test
mov
stc
cmp
dec
push
adc
add
shl
cmp
xor
pop
cli
shlb
pop
hlt
xor
cmp
sbb
push
mov
cmp
mov
mov
call
pop
mov
mov
scas
scas
negb
cmp
pop
mov
or
mov
idivl
jl
out
cmp
pop
cmp
dec
js
jecxz
push
mov
cs
pop
mov
jno
mov
or
cmp
mov
imull
jg
divl
js
sbb
icebp
jecxz
xchg
jo
cmp
jbe
js
cmp
pop
mov
cs
and
mov
int
in
dec
mul
jle
aaa
int
not
ja
cmp
dec
mov
js
xor
xchg
sub
jo
cmp
js
fdivrp
cmp
xor
in
aas
adc
mov
dec
or
divb
cmp
scas
scas
mov
mov
push
xchg
fnstsw
mov
push
dec
js
cmp
pop
mov
cs
mov
mov
idivl
divb
js
jnp
mov
divl
xor
pop
sbb
test
and
cmp
pop
js
xchg
mov
js,pn
and
push
test
js
aaa
mov
fidivrl
jbe
scas
mov
cmpb
fisubs
xor
arpl
or
js
fdivr
cmp
xor
in
mov
and
mov
mov
js
hlt
xor
fcmovbe
mov
push
hlt
xor
xchg
sub
jo
cmp
arpl
idiv
cmp
xor
in
mov
and
mov
cmpb
jbe
ja
movsb
in
dec
mov
aaa
hlt
xor
cwtl
sbb
adc
lds
out
mov
mov
out
mov
int
mov
and
add
jbe
hlt
xor
pop
fcmovbe
aaa
cmp
xor
aaa
push
mov
and
dec
mull
cmp
sbb
test
mov
stc
cmp
dec
push
mov
and
push
scas
mov
jo
jbe
test
in
dec
aaa
outsb
push
ja
cmpsb
in
dec
mov
outsb
push
test
push
out
cmp
pop
cmp
dec
js
cmp
pop
mov
dec
cs
pop
mov
mov
scas
scas
negb
cmp
pop
mov
mov
scas
mov
xchg
mov
mov
inc
jo
int
mov
jbe
cmp
xor
ficomps
and
popa
mov
mov
or
mov
cmp
repz
jo
cmp
jbe
js
mov
xor
adc
aaa
mov
xor
dec
mov
aaa
int
in
dec
ja
cmp
xor
int
sub
pop
mov
xchg
jo
cmp
js
fdivrp
cmp
xor
in
mov
and
popa
xchg
mov
jnp
js
scas
mov
mov
in
das
sbb
test
mov
cmp
cmp
js
aaa
dec
mov
cs
mov
add
cmp
dec
aaa
arpl
xor
mov
cmp
divl
cmp
cld
jo
cmp
push
mov
and
mov
xchg
jno,pn
adc
cmpb
aaa
mov
js
hlt
xor
cmp
pop
pop
div
fwait
js
inc
jo
int
xor
js
mov
mov
cs
js
mov
jo
jbe
test
mov
jbe
jnp
or
cmp
inc
mov
inc
mov
mov
mov
cwtl
cmp
mov
cs
mov
in
push
test
cmp
shlb
cmp
xor
cli
shlb
mull
cltd
data16
andl
push
mov
pop
imull
cmp
xor
cs
cli
jns
cmp
mov
jg
ja
aaa
mov
scas
negl
addr16
icebp
push
jbe
out
cmp
js
cmpsb
xor
mov
adc
scas
mov
jo
jbe
test
in
dec
aaa
outsb
push
ja
cmpsb
in
dec
mov
outsb
push
test
div
popa
test
jo
cmp
dec
js
cmp
pop
mov
xchg
cs
aaa
add
mov
divb
popa
mov
mov
imull
pushf
ja
xor
cmp
mov
cmp
pop
mov
cs
movsb
shll
idivb
push
hlt
xor
dec
mov
ja
cli
not
mov
dec
hlt
xor
mov
pop
push
and
mov
mov
stc
cmp
xor
call
aaa
mov
mov
mov
scas
scas
aaa
pop
idivl
ja
mov
js
scas
negl
addr16
or
jbe
pop
cmp
dec
js
movsb
xor
mov
mull
mov
int
mov
idivb
dec
hlt
xor
cwtl
cli
shlb
js
dec
mov
mov
mov
mov
jo
cmp
aaa
stc
cmp
pop
push
xchg
cs
hlt
mov
daa
dec
imull
mov
jnp
mov
js
hlt
xor
pop
sbb
inc
icebp
js
add
cmp
push
dec
mov
cs
js
shll
mul
jbe
aaa
int
mov
jbe
jnp
or
cmp
inc
int
fwait
xchg
icebp
pusha
mov
cmp
arpl
mov
cmp
xor
in
mov
and
mov
or
cmp
jno
jbe
mov
scas
mov
mov
divl
out
and
xor
mov
xor
mov
mulb
mov
jbe
jnp
or
cmp
inc
mov
aaa
scas
scas
mull
xchg
mov
mov
cmp
push
mov
cmp
xchg
jns,pn
mov
pop
jbe
test
in
dec
aaa
in
push
ja
cli
aaa
shlb
notl
and
xlat
jo
cmp
mov
xor
or
cs
aaa
push
mov
sbb
mov
or
aaa
dec
mov
or
mov
mov
or
roll
jo
cmp
xor
jbe
cld
cs
daa
shll
mulb
hlt
xor
cwtl
fcmovbe
ja
mov
dec
mov
div
xor
xchg
sub
cmp
insb
mov
test
jno
push
xchg
cs
cld
mov
dec
aaa
scas
scas
mulb
mov
scas
ja
idivl
mov
cmp
out
fwait
cmp
mov
divl
mov
mov
mov
cs
divl
mov
dec
or
cmp
mov
mov
scas
ja
cmp
mov
mov
inc
mov
cmp
jo
int
mov
js
mov
mov
cs
xchg
hlt
xor
dec
notl
and
dec
ja
jle
mov
cli
mov
jle
loopne
icebp
jo
cmp
xor
arpl
loop,pn
push
mov
sbb
idivl
jnp
or
ja
mov
cli
jbe
idivl
pop
mov
jo
cmp
cwtl
sbb
mov
cs
mov
arpl
hlt
xor
cwtl
cli
shlb
cmp
mov
int
jbe
push
mov
daa
in
dec
mul
mov
rcr
mov
cmp
mov
mov
mov
add
push
test
in
dec
aaa
popf
shl
mov
ja
fcmovbe
mov
push
hlt
xor
xchg
sub
arpl
mov
cmp
xor
arpl
jns,pn
js
fnsave
mov
jbe
dec
aaa
es
ja
movsb
in
dec
mov
aaa
hlt
xor
cwtl
sbb
sbb
icebp
popf
mov
jo
cmp
cmp
xor
cs
jbe
jbe
jnp
or
cmp
inc
mov
or
cmp
pop
mov
inc
mov
aaa
scas
jo
cmp
pop
dec
js
cmpsb
xor
mov
adc
scas
mov
jo
jbe
test
in
dec
aaa
outsb
push
ja
cmpsb
in
dec
mov
outsb
push
test
loop
sbb
int
js
js
mov
jbe
xchg
cs
shlb
jg
divb
mov
jnp
inc
mov
mov
inc
jo
int
xor
js
divl
mov
cs
cld
mov
dec
aaa
scas
scas
mulb
mov
jnp
or
cmp
mov
mov
repz
and
hlt
jo
cmp
js
mov
mov
cs
cmp
mov
jo
inc
push
test
mov
aaa
mov
in
push
mov
cli
js
idivl
dec
mov
jbe
jo
int
mov
js
mov
mov
cs
xchg
hlt
xor
dec
notl
cli
cmp
ja
dec
hlt
xor
sub
lahf
pop
adc
jo
cmp
xor
arpl
loop,pn
push
mov
sbb
idivl
jnp
js
scas
ja
xchg
mov
xor
out
lods
mov
jno
icebp
popf
mov
stc
cmp
xor
arpl
ja
cmp
pop
push
push
cs
mov
notl
arpl
hlt
xor
dec
js
aaa
int
mov
je
cmp
mov
sub
test
loopne
push
push
cmpsl
lcall
xchg
push
pop
dec
out
mov
pop
imul
and
cli
pop
cmp
xor
jl
mov
out
sub
bound
pop
sbb
and
sbb
dec
jp
pop
popf
rorl
dec
insl
pop
lahf
ljmp
sub
inc
push
xchg
mov
adc
xor
xchg
loope
shl
pusha
jmp
push
sbb
pushf
test
popa
fabs
or
popf
push
cwtl
hlt
dec
sahf
cmp
cli
cmp
mov
cli
pop
out
mov
out
jns
stos
pop
push
cwtl
push
outsb
push
fdivrl
dec
pop
lcall
test
pop
fwait
inc
stos
cld
pop
fcompl
rep
fnsave
ja
arpl
inc
ja
cli
int
and
cli
cmp
mov
jg
jge
xchg
std
out
cmp
mov
bound
push
out
dec
jne
inc
jae
push
pop
sbb
sbb
cli
out
sahf
jne
popa
stos
pop
test
xchg
jne
loop
aaa
push
out
int
dec
popa
sbb
pop
pop
cld
inc
arpl
ja
push
out
int
mov
clc
push
scas
push
dec
sarb
push
out
int
lret
in
sub
cltd
pushf
rorb
std
out
sti
jne
imul
pop
push
fsubrl
pushf
movsl
inc
sbb
jne
popa
in
aaa
call
out
xabort
inc
fisubrs
pushf
push
pop
movsl
sbb
push
popa
popa
push
mov
adc
mul
mov
aas
cmp
mov
popa
dec
fcomps
pop
adc
jmp
int3
mov
idivl
pop
cwtl
data16
insb
sbb
jne
idivl
mov
mov
popa
jge
stos
sbb
push
sbb
ds
outsl
divl
out
arpl
ljmp
push
pop
aas
mov
pop
fstpl
jb
fstpt
sub
pushfw
adc
inc
mov
cli
pop
inc
mov
out
mov
xor
insb
xchg
pop
push
pop
mov
fmull
fiaddl
fsubs
sbb
out
dec
popa
das
in
imul
xlat
lcall
aaa
cli
pop
inc
mov
out
fstl
int
dec
popa
pop
shrl
in
test
in
jbe
pushf
pop
pop
gs
jl
push
loope
movsl
sbb
mov
mov
out
fdivl
mov
sbb
pop
jl
insb
bound
pop
jle
pusha
popf
mov
std
outsl
arpl
movsl
pop
cltd
cmpsl
xor
inc
cli
arpl
inc
notl
int
aas
cmp
mov
pop
popa
cmp
sbb
call
pop
jne
fcmovu
inc
cmc
cltd
jmpw
fs
int3
mov
jne
bound
push
and
jb,pn
mov
adc
ja
fstpl
mov
fists
adc
jecxz
insb
int3
mov
jne
popa
iret
cld
icebp
lods
push
fs
inc
xchg
xchg
rcrl
fdivs
mov
cwtl
jne
mov
popa
push
sbb
cmp
nop
jne
lock
jp
pop
imul
clc
out
xabort
in
popa
fdivrl
movsb
xor
jne
lock
jp
pushf
inc
ror
lods
sbb
jne
mov
test
mov
fstp
movsb
xchg
dec
dec
mov
mov
sbb
pop
jle
enter
jne
aaa
out
xabort
ljmp
es
std
dec
lds
push
inc
jne
popa
push
sbb
pop
fidivrs
adc
cmp
fisttpl
int3
js
out
jno
aas
mov
pop
jbe
arpl
out
hlt
cli
cmp
push
pop
fisubl
outsl
aam
loop
sub
dec
popf
ja
out
cs
inc
jmp
mov
cmp
mov
cli
pop
out
mov
dec
sahf
pop
pop
lcall
fs
dec
aaa
jbe
out
or
push
aaa
xchg
cli
pop
inc
sbb
cld
cli
cmp
lea
popa
test
adc
rclb
out
fs
sahf
testl
mov
out
mov
ss
dec
xor
lds
hlt
out
cmp
mov
dec
outsl
ja
out
arpl
jne
shl
mov
jne
fcomps
inc
sub
sti
dec
int3
cmp
mov
dec
int3
mov
into
jbe
or
push
imul
lods
out
fsubrl
pushf
aaa
std
out
cmp
mov
inc
inc
pop
xchg
mov
popa
imul
cmp
mov
out
mov
dec
push
push
mov
push
outsb
loope
daa
testl
int3
divl
out
xabort
push
pop
test
push
jbe
jne
pop
out
mov
addb
cmp
xor
push
ficompl
in
lahf
outsb
jge
fisubrs
fstps
mov
bound
in
pop
bound
push
loope
push
fcomps
in
sub
out
sbb
dec
pop
rcrl
mov
sbb
loop
fnop
jns
out
pop
outsl
sub
cmpsb
int
outsb
js
mov
dec
sbb
outsb
mov
ficompl
pop
dec
shll
mov
pusha
in
dec
sarl
xchg
cmc
cmp
mov
cli
in
mov
stos
insl
jb
in
mov
stos
pop
sbb
jae
stos
into
push
bound
push
leave
push
insl
iret
fcomi
jo
insl
jb
mov
es
xchg
cmpsl
mov
loopne
inc
push
push
fwait
push
pop
cwtl
push
sarl
shrb
movsb
les
fstsw
repz
insl
mov
sub
mov
aaa
js
fbld
mov
push
cmc
sbb
in
dec
data16
iret
adc
or
lcall
out
insb
into
fiaddl
push
jl
sti
out
cmp
popf
jo
ljmp
cs
cld
arpl
jo
dec
pop
fwait
sbb
insw
jnp
aad
inc
loopne
aam
fists
or
sbb
repz
jne
add
bound
lahf
cltd
or
cmp
xchg
adc
xor
negb
pop
aaa
in
out
mov
mov
idivl
push
dec
cmp
cmp
pop
js
cmp
int
js
sahf
cmp
out
jg
mov
or
js
add
mov
out
jg
mov
pop
mov
jg
mov
pop
mov
jg
testb
mov
mov
iret
sub
xchg
jo
mul
xor
or
mov
stc
cmp
dec
push
mov
loope
arpl
or
mov
stc
cmp
dec
push
xchg
sub
out
ja
dec
sub
push
mov
aaa
loope
mov
scas
mov
mov
divl
loope
mov
scas
mov
aas
popl
ret
xchg
dec
sarl
imul
jno
push
mov
pop
ja
ja
cmp
xor
arpl
cmp
cmp
xor
js
mov
divl
je
notl
div
sub
aaa
int
ja
ja
push
hlt
xor
mov
arpl
xor
mov
mov
cmp
nop
jmp
enter
cmp
jo
test
stc
cmp
pop
push
mov
imull
cmp
xor
cmp
mov
cmp
pop
mov
sub
js
dec
sub
xor
cwtl
fcmovbe
ja
imul
dec
mov
cmp
xor
pop
fcmovbe
cmp
pop
mov
fsubrp
shl
mov
inc
mov
jne
mov
mul
xchg
aaa
mov
mov
out
mov
pop
sbb
cmp
aaa
jbe
dec
js
cmp
pop
mov
sub
mov
ja
test
in
dec
aaa
arpl
hlt
xor
cmp
cli
js
idivl
loope
sbb
mov
mov
or
jbe
mov
je
xor
sub
jbe
dec
test
negl
cmp
int
js
mov
mov
jbe
mov
pop
mov
js
fdivrp
cmp
push
xchg
sub
inc
cmpsb
xchg
mov
divl
mov
js
scas
mov
mov
in
dec
sub
mov
loop
cmp
xor
jbe
ja
sahf
cmpsb
call
xchg
sub
divl
test
stc
cmp
xor
ja
mov
ja
out
mov
fdivrs
js
mov
mov
sub
ja
dec
sub
xor
dec
js
ja
cli
mov
jg
sub
cmp
fsubrl
push
in
jge
adc
idivl
cmp
mulb
dec
aaa
int
mov
jbe
cmp
xor
test
mov
stc
cmp
xor
mov
sub
mull
scas
mov
cli
idivl
mov
aaa
mov
mov
sub
cmp
movsb
in
dec
cmp
jle
js
cli
ja
mov
cmp
sti
call
mov
sub
test
mov
jbe
cmp
xor
test
mov
stc
cmp
xor
js
js
mov
sub
out
js
dec
sub
arpl
sub
mov
cmp
xor
cwtl
cli
sarb
mov
in
push
mov
divb
mov
mov
sub
fbstp
testb
jbe
dec
aaa
int
mov
ja
mov
mov
aaa
xor
negl
xchg
js
divl
xor
sub
mov
mov
in
icebp
add
jl
cmp
mov
mov
scas
cmp
mov
jnp
cmp
xor
jbe
call
data16
xchg
sub
divb
push
mov
mov
aaa
stc
cmp
push
mov
popa
and
idiv
cmp
xor
arpl
sub
out
scas
mov
cmp
shlb
scas
scas
ja
cmpb
mull
mov
jnp
cmp
push
call
insb
movq
iret
sub
loop
jo
testb
aaa
loope
arpl
dec
test
mov
stc
cmp
dec
push
mov
loope
arpl
dec
test
mov
stc
xchg
sub
out
jg
sub
aaa
loope
mov
scas
mov
mov
divl
loope
mov
scas
mov
decb
sbb
xchg
jmp
sub
cmp
xor
arpl
or
mov
stc
cmp
xchg
mov
pop
cmp
mov
mov
cmp
pop
sub
cmp
cmp
mov
aaa
cmp
xor
fcmovbe
mov
imul
dec
mul
jbe
cmp
cli
js
js
mov
js
cmp
mov
movsb
dec
jmp
xchg
sub
js
xlat
jo
test
mov
popa
and
idiv
cmp
xor
arpl
or
cmp
push
mov
mov
cmp
pop
sub
mov
dec
mov
mov
in
push
ja
cli
not
mov
cmp
dec
mull
hlt
xor
pop
ficoml
test
jbe
add
inc
imul
jg
testb
outsb
aaa
outsl
cmpsl
mov
cmp
inc
jo
int
xor
aaa
mov
out
mov
mov
idivl
insb
mov
test
mov
stc
cmp
inc
push
adc
cmpsb
cmp
dec
mov
sub
stc
mov
arpl
hlt
xor
cmp
cli
js
idivl
popa
mov
jecxz
mov
mov
jbe
call
insb
mov
enter
jmp
idivb
mov
out
mov
mov
jbe
mov
pop
mov
js
fdivrp
cmp
xchg
xchg
sub
out
aaa
decb
xor
aaa
cmp
jg
mov
mov
in
dec
sub
ja
dec
mov
int
in
dec
mov
cmp
xchg
xlat
call
outsl
xchg
sub
ja
xlat
jo
divb
cmp
js
cmp
xor
jbe
test
in
out
mov
mov
mov
fmull
cli
xchg
mov
pushf
cmp
mov
aaa
dec
js
ja
cli
mov
scas
mov
std
jmp
or
js
aaa
mov
dec
divb
inc
arpl
jmp
pop
sub
xor
mov
aaa
mov
insb
cmp
mov
mov
mov
mov
aaa
stc
cmp
xor
mov
sub
cmp
scas
mov
cli
cmp
mov
aaa
mov
mov
sub
js
dec
mov
int
in
dec
cmp
hlt
xor
ja
mov
divb
test
xchg
rclb
test
xchg
sub
lock
divb
push
mov
dec
mov
cmp
pop
mov
mov
idivl
mov
js
push
dec
mov
sub
mov
dec
mov
mov
dec
divl
add
ds
mov
dec
push
test
mov
in
push
mov
divb
call
mov
sub
jmp
divb
jbe
mov
popa
add
or
jno
push
mov
pop
ja
cmp
push
mov
sub
mulb
jg
sub
rorw
scas
aaa
loope
mov
scas
mov
aaa
jg
divl
mov
dec
divb
call
iret
jne
add
xchg
sub
aaa
jbe
jo
divb
mov
aaa
or
mov
stc
cmp
xor
testl
fdivr
cmp
xor
arpl
sub
cmpsb
xchg
jno
ja
cld
sub
cmp
inc
mov
aaa
scas
scas
mov
cmpb
cmp
mov
jnp
js
xor
jbe
call
jbe
outsl
xchg
sub
shll
test
mov
stc
cmp
dec
push
mov
or
mov
stc
cmp
dec
push
mov
aas
lea
mov
sub
push
int3
mov
aaa
mov
scas
scas
ja
mov
mov
loop
scas
mul
mov
cmp
loope
mov
xchg
sub
adc
cmp
sub
cmp
aaa
xor
aaa
mov
ja
push
dec
mov
mov
sbb
cmp
dec
js
cmp
pop
mov
xchg
sub
cmpsb
xchg
jno
js
cld
sub
aaa
push
mov
aaa
pop
ja
cmp
pop
mov
or
divl
fldt
jg
call
arpl
mov
sub
mulb
dec
aaa
int
xor
ja
cmp
mov
cmp
int
js
cmp
mov
js
cmp
xor
mov
sub
mov
aaa
jg
divb
jg
mov
mov
js
scas
cmp
int
cmpsb
in
scas
call
cli
sahf
popa
cmpsb
call
outsl
enter
data16
jo
mulb
arpl
idiv
cmp
push
mov
jno
push
mov
push
sahf
jbe
js
mov
xor
adc
cmpsb
dec
out
in
dec
sub
jmp
mov
aaa
pop
idivl
ja
mov
js
scas
negl
int
cli
aaa
xchg
je
aaa
daa
shll
divb
jo
vsubpd
iret
sub
aaa
xchg
jo
negb
aaa
mov
stc
cmp
xor
mov
mov
ja
out
mov
fdivrs
mov
sub
ja
dec
sub
xor
cwtl
cli
shlb
js
dec
mov
mov
mov
sub
adc
mov
js
fisubrs
push
call
sbb
sub
push
jo
mul
mov
xor
ja
mov
jbe
mov
pop
mov
cmp
xor
arpl
sub
cmpsb
xchg
jno
testl
aaa
mov
mov
jl
in
xchg
cld
sub
cmp
cli
sarb
aaa
in
dec
mov
cmp
pop
or
jmp
enter
ljmp
xor
mov
jbe
mov
mov
stc
cmp
xor
arpl
ja
cmp
pop
push
xchg
sub
out
js
dec
sub
aaa
pop
mov
mov
daa
shll
cmp
arpl
xor
jbe
sub
call
outsl
cmpsl
jne
mov
mul
mov
aaa
jo
jbe
xor
ja
mov
mov
push
dec
test
arpl
js
and
xor
sub
mov
xchg
mov
jl
outsb
xchg
inc
sub
jecxz
mov
mov
mov
aaa
scas
scas
cmp
cmp
pop
mov
idiv
xor
jbe
call
fidivl
icebp
outsl
xchg
sub
repnz
testb
dec
aaa
int
mov
ja
mov
mov
aaa
xor
testl
cmp
pop
mov
sub
xchg
cmpsb
inc
out
inc
xchg
cld
sub
aaa
cmp
xor
cli
shlb
testl
in
dec
js
div
xor
jbe
fdiv
pop
pop
cmpsb
call
outsl
enter
ja
jo
test
stc
cmp
inc
push
mov
aaa
test
mov
stc
cmp
pop
push
mov
pop
imull
mov
mov
out
xchg
decb
mov
aaa
inc
mov
aaa
scas
scas
mov
ja
cmp
pop
mov
imull
jg
mov
jbe
call
divl
enter
notl
xor
or
mov
stc
cmp
dec
push
mov
loope
arpl
or
mov
stc
cmp
dec
push
xchg
sub
out
cmp
dec
sub
push
mov
aaa
loope
mov
scas
mov
mov
divl
loope
mov
scas
mov
aas
lea
jmp
mov
sbb
inc
jo
int
aaa
pop
aaa
arpl
ja
and
xor
mov
cwtl
cmp
js
mov
jbe
xchg
sub
out
mov
mov
ja
scas
ja
mov
mov
cmp
mov
xor
cmp
mov
pop
jmp
mov
cmp
testb
dec
ja
cmp
pop
mov
cmp
int
js
cmp
mov
jbe
mov
movsl
neg
scas
js
mov
mov
jnp
or
cmp
mov
mov
jnp
js
scas
cmp
cmp
push
movsb
call
mulb
lea
mov
cmp
xor
arpl
cmp
cmp
xor
testl
aaa
cmp
pop
js
mov
mov
sub
aaa
cmpsb
dec
out
aaa
xchg
je
aaa
and
mov
aaa
dec
notl
cli
cmp
mov
js
dec
mul
jle
jno
ja
cld
sub
cmp
inc
push
dec
divb
call
ja
outsl
in
xorb
jo
divb
mull
cmp
cmp
xor
mov
je
divl
cmp
push
dec
mov
sub
cmpsb
dec
out
in
dec
sub
testl
shlb
js
dec
mov
jle
mov
loope
mov
cmp
shlb
scas
scas
mov
sub
dec
ljmp
imul
fwait
js
jne
test
xor
cwtl
cmp
outsl
sbb
mov
test
dec
aaa
out
mov
and
pop
push
add
mov
mov
fistl
xchg
sbb
fistps
sbb
gs
popf
dec
sbb
scas
mov
jnp
aaa
ja
js
ja
mov
lret
popa
xor
stos
xchg
pusha
repnz
cmp
aad
pop
mov
mov
jno
or
aaa
int
jle
ja
dec
jns
int
cs
cmp
pop
cmp
jns
int
mov
mov
mov
or
dec
pop
movsl
or
pop
js
dec
adc
adc
adc
cld
adc
adc
mov
fstl
sub
fcompl
and
xchg
mov
popf
mov
aaa
or
sbb
mov
ja
jl
mov
fcomi
sub
or
cmp
js
cmp
mov
in
mov
fdivl
aaa
cld
adc
adc
dec
adc
adc
dec
adc
adc
xchg
adc
je
ja
fisubrs
jp
sbb
outsb
mov
les
outsl
cmp
mov
arpl
or
jno
or
sbb
ja
cmpsb
popa
andb
js
js
cmp
mov
adc
fsubl
cld
adc
cld
adc
adc
mov
fcoml
xchg
adc
adc
dec
adc
adc
testb
push
out
daa
fstl
pop
outsb
cmp
int3
outsl
xor
loop
cmp
dec
or
ja
mov
mov
dec
or
dec
or
dec
mov
loop
cmp
dec
or
adc
jno
js
mov
mov
adc
adc
adc
dec
adc
adc
xchg
adc
adc
cmp
jb
push
movsl
pushf
call
push
outsb
cli
mov
adc
outsl
out
aaa
cs
int
ja
xor
sub
sub
cmp
dec
int
cs
js
jbe
lahf
adc
sub
jno
stc
sbb
ja
xchg
pop
mov
or
gs
cmp
jno
stc
sbb
mov
out
scas
mov
int
mov
mov
pop
outsb
clc
cli
pop
adc
pop
mulb
jns
int
mov
ja
inc
out
mov
cmp
cmp
mov
jne
mov
adc
fsub
xchg
sbb
pop
dec
adc
dec
adc
adc
adc
cld
adc
adc
xor
dec
aaa
dec
pop
imul
aaa
ja
outsl
test
mov
add
cmp
int
js
and
xchg
ja
cmp
cmp
dec
cmpsl
je
ja
pushf
adc
mov
je
ja
sbb
test
adc
adc
cld
adc
adc
adc
dec
adc
xor
dec
pop
out
adc
pop
adc
outsl
test
xor
dec
cmp
ja
js
mov
cmp
jbe
cmp
je
js
fdivp
cmp
mov
in
aas
popl
ja
adc
adc
dec
adc
adc
adc
adc
adc
adc
divb
dec
jae
xchg
adc
outsb
xchg
adc
inc
testb
mov
jno
or
ja
mov
jbe
outsl
sbb
or
cmp
aaa
mov
adc
jno
js
mov
mov
adc
adc
adc
dec
adc
adc
xchg
adc
mov
loope
fidivrs
mov
lods
and
aad
xchg
adc
xor
js
mov
popa
andb
fcmovne
outsl
cmp
mov
cmpsb
mov
aaa
icebp
cmp
mov
arpl
adc
mov
cmp
imul
xor
xchg
adc
adc
adcl
sahf
add
addr16
mov
pop
fnstsw
xor
adc
outsl
sbb
mov
outsl
inc
ja
mov
cmp
inc
or
sbb
aaa
arpl
ja
cmp
mov
arpl
adc
faddl
lea
mov
loope
pop
xchg
adc
je
aaa
xchg
fnsave
cld
adc
adc
adc
addr16
aaa
push
cmpsb
xchg
push
ja
cltd
insl
in
aam
mov
int3
mov
mov
jbe
cmpb
mov
js
mov
sahf
divb
pop
mov
cmp
pop
or
mov
cmp
out
xlat
add
jo
cli
jbe
js
mov
pop
mov
cmp
aaa
mov
fstpt
in
fs
int
in
dec
ja
cmp
xor
int
mov
in
xchg
jno
cmp
mov
mov
mov
mov
cmp
into
ja
mov
sbb
mov
divb
pop
cmp
ja
js
mov
mov
cmp
mov
cld
jno
cmp
dec
pop
js
cli
aaa
out
mov
xchg
cmp
cwtl
sbb
idivb
dec
clc
xor
dec
js
ja
cmp
jbe
jnp
or
sahf
xchg
adc
add
cld
jno
cmp
mov
mov
ja
arpl
cmp
clc
mov
and
or
testb
inc
cmp
mov
sahf
ja
mov
cmp
xor
fdivrs
inc
mov
cmp
arpl
fisubl
cmp
clc
xor
pop
sbb
aaa
xor
jbe
clc
xor
sbb
mov
push
clc
xor
cwtl
cmp
fcomps
inc
mov
dec
mov
js
and
pop
mov
cmp
js
xchg
cmp
dec
mov
aaa
cmp
xor
cmp
mov
dec
clc
xor
mov
push
movl
cwtl
js
cmp
ss
cmp
outsl
mov
shlb
scas
mul
sbbb
ja
xchg
sahf
mov
ja
jnp
mov
or
adc
test
in
jno
cmp
outsb
pop
js
cmpsb
sub
cltd
cld
cmp
add
shl
cmp
xor
pop
cmp
ja
pop
clc
xor
cmp
repz
push
jg
jno
cmp
cli
js
js
mov
ja
xor
inc
and
popa
xchg
sahf
aaa
mov
mov
ja
mov
cmp
pop
or
test
sbb
pusha
ja
xchg
jno
cmp
mov
mov
xor
cmp
mov
mov
jo
jle
test
ja
aaa
cmp
xor
sbb
mov
cmp
dec
mull
mov
mov
cmp
jno
mov
or
cmp
cmc
mov
int
ja
idivb
in
fs
cmp
shlb
mull
jns
mov
jbe
jno
cmp
xor
cli
out
cmp
cmp
xchg
cmp
clc
xor
pop
sbb
ja
js
dec
mov
mov
js
out
in
js
jno
cmp
inc
mov
or
mov
cmp
or
cmp
mov
sahf
aaa
mov
mov
ja
mov
mov
daa
insl
lcall
out
lds
mov
ja
xor
cmp
jo
cmp
xor
dec
js
aaa
int
in
dec
ja
fnsave
fs
daa
in
dec
mul
mov
movl
cwtl
cli
out
mov
in
cltd
cmpl
fstpt
arpl
mov
sahf
ja
jecxz
scas
mov
mov
divl
or
movsl
clc
sbb
sarl
mov
js
fnsave
mov
cmp
js
pop
dec
mov
pop
jbe
aaa
int
in
dec
ja
dec
fs
cmp
shl
cmp
repz
push
pop
mov
push
cmp
and
pop
js
cmp
xor
cmp
mov
aaa
jbe
scas
mul
sbbb
ja
sbbb
negl
sar
dec
js
arpl
or
js
mov
or
cmp
xchg
mov
mov
sbbb
aaa
loope
sahf
ja
loop
scas
mov
mov
divl
std
hlt
cmp
cmp
mov
mov
mov
mov
sub
popf
cmc
mov
int
in
dec
mulb
clc
xor
cwtl
cmp
ja
dec
clc
xor
mov
sub
mov
js
cmp
fnstsw
cmp
mov
enter
ficoms
mov
sbb
aaa
sahf
divb
pop
mov
cmp
pop
or
mov
cmp
out
cmp
mov
arpl
cli
cmpsl
je
cmp
aaa
mov
jo
jle
test
mov
aaa
cmp
xor
sbb
mov
js
dec
mull
mov
fwait
js
xor
mov
js
movsb
sub
ss
cmp
js
mov
fstpt
in
fs
int
cmp
ja
dec
clc
xor
dec
xor
mov
mov
cmpb
fidivs
mov
aaa
sarl
mov
cmp
mov
mov
mov
mov
or
aaa
js
scas
ja
sbbb
mov
mul
andb
sarl
aaa
mov
ja
arpl
cmp
mov
mov
negb
cmp
mov
sahf
ja
mov
es
test
out
cli
aaa
out
mov
in
pop
mov
cmp
cmp
mov
int
js
idivb
fldl
cmp
mov
mov
jl
cmp
mov
loop
pop
test
cwtl
xchg
ja
cmpb
fdivl
mov
mov
mov
cmp
sarb
mov
sbb
mov
cmp
aaa
cmp
xor
cmp
mov
dec
clc
xor
mov
rol
mov
cmp
push
xor
cmp
int
js
je
aaa
mov
ja
mov
mul
sbbb
ja
aaa
inc
cmp
xchg
testl
inc
or
enter
xor
js
loop
mov
cmp
loop
mov
sbb
or
testb
inc
cmp
dec
or
ja
dec
inc
cmp
dec
or
testl
js
cmp
cmp
mov
mov
dec
jbe
cld
cmp
daa
cmp
cmp
idivb
arpl
xor
cmp
mov
push
clc
xor
dec
cmp
mov
cmp
cli
mov
jbe
arpl
cmp
cld
mov
and
or
test
mov
aaa
popa
xchg
sahf
ja
fnsave
sahf
divl
push
jae
pop
cmp
cmpb
pop
js
mov
xor
cmp
aaa
mov
jo
ja
xor
cwtl
cmp
aaa
cmp
xor
cmp
and
dec
mull
jns
mov
jbe
jno
cmp
xor
cli
out
mov
xchg
mov
add
push
clc
xor
dec
cmp
cmp
mov
dec
clc
mov
sbb
sbb
mov
pop
cmp
movsb
sub
xor
cmp
mov
fstpt
push
clc
xor
dec
cmp
cmp
ja
mov
insb
jbe
cmp
mov
or
lret
mov
cmp
mov
ja
mov
cmp
xchg
mov
mov
cmp
divb
mov
ja
clc
xor
cmp
repz
push
pop
aaa
jno
cmp
cli
ja
js
mov
pop
mov
cmp
cmp
clc
xor
dec
mov
jbe
jnp
or
cmp
inc
or
testl
adc
ret
jno
cmp
cmp
pop
mov
cmp
xchg
cmp
aaa
js
mov
sbb
mov
cmp
aaa
cmp
xor
cmp
mov
aaa
in
dec
mul
mov
rol
outsl
ja
jno
cmp
and
pop
js
cmp
xor
cmp
mov
mov
or
testb
inc
cmp
inc
or
ja
aaa
mov
mov
ja
cmp
xchg
pop
mov
xchg
jno
cmp
dec
sarl
mov
or
cmp
mov
sbbb
aaa
loope
sahf
ja
loop
scas
mov
mov
divl
std
in
jno
cmp
mov
mov
mov
cmp
pop
cmp
cmp
movsb
in
dec
mulb
clc
xor
dec
ja
ja
cmp
clc
xor
pop
sbb
shll
outsl
cmp
push
cmp
cli
mov
jbe
mov
cmp
dec
aaa
mov
negb
cmp
mov
sahf
ja
fnsave
inc
cmp
xchg
jae
pop
js
xchg
jno
cmp
js
mov
xor
cmp
jo
ja
xor
dec
mov
aaa
int
in
dec
ja
cmp
xor
int
lods
mov
cmpsl
mov
fidivs
cmp
in
pop
mov
cmp
cmp
jo
mov
xor
cwtl
sbb
aaa
cmp
xor
js
mov
cmp
jbe
mov
movsl
js
xor
js
aaa
mov
ja
xchg
cmp
mov
dec
or
cmp
or
aaa
js
scas
ja
mov
cmp
idivl
pop
jns
and
jno
cmp
arpl
xor
cmp
inc
and
pop
js
cmp
mov
sahf
ja
aaa
cmp
mov
pop
clc
xor
fdivrs
inc
aaa
and
jno
cmp
xor
mov
mov
cmp
aaa
cmc
mov
int
js
idivb
fidivl
mov
ja
sbbb
negl
sar
xchg
arpl
mov
mov
mov
xor
mov
sbb
mov
cmp
aaa
cmp
xor
cmp
mov
aaa
in
dec
mull
mov
int
ja
push
cmp
and
pop
js
jle
mov
je
mov
mov
jl
inc
cmp
mov
aaa
or
ja
aaa
sahf
mov
ja
jnp
mov
repz
and
int3
jno
cmp
dec
mov
or
mov
aas
push
int3
mov
and
loope
sahf
aaa
mov
mov
ja
mov
mov
loop
scas
mul
xor
push
cmp
cli
js
js
mov
js
xor
inc
and
pop
aaa
inc
cmp
mov
sahf
ja
mov
jnp
or
cmp
or
fsubp
xlat
movl
mov
mov
dec
mov
cld
cmp
mov
arpl
clc
xor
dec
ja
aaa
int
mov
ja
push
clc
xor
mov
adc
cmp
js
jbe
js
cli
mov
mov
cmp
aaa
clc
xchg
cmp
idivb
in
fs
cmp
shlb
not
andl
push
cmp
and
pop
mov
mov
imul
mov
int
mov
idivb
push
clc
xor
dec
cmp
mov
mov
adc
icebp
pop
js
sarl
mov
aaa
xor
xchg
cmp
dec
or
cmp
mov
sahf
aaa
mov
mov
ja
mov
aaa
jbe
test
pop
inc
aaa
movsb
cld
jno
cmp
jbe
js
cli
ja
mov
cmp
aaa
xchg
cmc
mov
int
cmp
idivb
dec
clc
xor
dec
mov
jbe
jnp
or
cmp
inc
push
jae
pop
ja
xchg
jno
cmp
jo
cmp
mov
mov
cmp
ja
adc
jnp
mov
mov
clc
xor
sbb
mov
push
clc
mov
mov
pop
gs
push
lret
lcall
aaa
outsl
xor
push
cmp
hlt
jae
mov
out
mov
cmp
in
ficomps
out
xchg
scas
push
xchg
pop
inc
xor
repz
loopne
negb
xchg
fdivs
jne
out
clc
jae
push
inc
test
mov
cmp
cmp
jp
fnsave
loope
bound
aaa
insb
out
inc
jae
push
in
and
repnz
cwtl
loopne
mov
jae
push
mov
fwait
and
aaa
insb
out
inc
jae
jb
sbb
inc
push
fidivl
out
xor
push
ljmp
out
mov
jae
push
es
lret
fisubs
out
xor
push
ljmp
out
mov
jae
pop
sub
cwtl
loop
push
mov
mov
mov
jae
sbb
rcrb
inc
mov
mov
push
pop
sbb
jl
push
cmpsb
mov
sub
jae
push
xchg
fnsave
mov
out
cmp
jp
fwait
jl
idivb
push
fnsave
pop
push
push
xlat
jmp
push
insl
pop
jae
push
mov
lock
cltd
pop
fistpl
add
divl
out
idivb
push
sarb
mull
cltd
daa
addr16
sbb
mov
in
sbb
std
inc
xchg
int
dec
cltd
fcoml
movsb
dec
dec
out
pop
jae
push
ljmp
cwtl
xor
lods
cltd
lret
push
cmp
push
imul
jae
push
pop
push
pop
sbb
sbb
mov
mov
mov
push
out
cmp
jp
pop
jl
in
aas
sbb
mov
push
das
sbb
js
sub
jae
xchg
push
les
mov
out
mov
lcall
inc
out
inc
jae
mov
fisubrl
imul
xor
push
lods
xlat
sub
icebp
push
xchg
out
int
ret
pop
adc
jbe
xor
or
rcll
mov
dec
push
cwtl
and
aad
dec
mov
jae
mov
fsubs
adc
int3
dec
out
xchg
inc
dec
sbb
lea
sbb
aas
pop
outsl
push
popa
xchg
mov
outsl
pop
mov
push
or
cmp
rep
sbb
fsts
jle
sahf
stos
aam
sbb
pop
mov
pop
sbb
pusha
js
mov
xchg
mov
outsl
add
mov
outsl
cld
sub
xchg
sub
pop
shrl
pushf
call
lret
test
pop
push
ljmp
mov
outsl
xchg
and
push
push
js
out
aas
push
xchg
js
out
jae
js
out
aas
dec
or
fwait
cmpsb
mov
in
outsl
jae
js
outsl
outsl
movsb
bnd
outsl
shlb
mov
ja
js
outsl
mov
out
divl
mov
outsl
mov
outsl
sarb
mov
outsl
js
js
sbb
sbb
std
js
out
out
aaa
inc
js
out
ja
js
out
jnp
or
imul
js
outsl
mov
outsl
js
js
outsl
mov
outsl
popa
fidivs
js
outsl
jae
js
outsl
outsl
movsb
bnd
outsl
shlb
mov
ja
js
outsl
mov
out
divl
lcall
pop
cwtl
push
sbb
adc
pop
stos
in
arpl
pusha
push
jecxz
xchg
jg
movsb
jmp
xchg
push
outsb
lcall
xchg
pop
lods
outsb
or
popf
sbb
bound
outsb
ficoms
push
sub
popaw
fsubs
lahf
outsl
lret
cmp
ds
arpl
ret
inc
xorl
out
sarb
pop
sub
and
xchg
mov
cmc
ljmp
into
outsb
lahf
sti
lods
in
sbb
pop
xchg
outsb
cld
jno
fldt
pop
int3
pop
aam
outsb
je
lods
pop
mov
push
fst
out
jecxz
out
stc
pop
mov
sti
sbb
in
pop
js
js
xor
js
xor
js
js
mov
js
inc
js
xor
push
dec
mov
repz
sbb
sub
mov
icebp
cmp
pop
or
xchg
jbe
cwtl
sti
adc
mov
jbe
cmp
mov
jnp
aaa
ja
idivl
push
stos
pop
popf
cmpsl
lcall
mov
pop
mov
sbb
pop
dec
or
mov
jbe
scas
scas
ja
add
or
mov
jge
cld
sbb
aaa
ja
outsl
mov
sbb
xchg
and
xor
cwtl
sti
adc
mov
jbe
scas
mov
daa
lock
fdivrs
push
jne
ja
aaa
outsl
pop
mov
sbb
mov
push
add
push
inc
aaa
int
lock
int
mov
jbe
loop
clc
ljmp
sbb
cld
outsl
cmpb
cli
mov
push
scas
and
xor
jnp
or
ja
fdivl
jno
lea
sbb
mov
mov
xchg
sbb
divl
fdivp
mov
in
divl
scas
pop
dec
ja
cmp
xor
sahf
ja
fnsave
mov
lea
cmp
push
call
mov
popa
sbb
cld
jbe
cmpb
std
xorl
lea
ja
testl
pop
jno
mov
js
mov
xchg
jbe
sbb
ja
and
in
adc
arpl
test
mov
sti
mov
add
pop
ljmp
fcomp
iret
sbb
outsl
mov
sbb
aas
scas
push
add
sti
dec
aaa
es
shlb
pop
inc
mov
cmpsb
lock
push
sbb
cwtl
shll
cld
roll
sub
pop
pop
scas
push
or
jbe
shl
cmp
aaa
int
lock
aaa
shlb
notl
cli
popf
loop
aaa
push
fmull
cltd
inc
sub
or
sbb
inc
push
popa
adc
inc
in
scas
xor
pop
fisttpl
mov
mov
aaa
lock
push
pop
lods
sbb
sub
add
div
mov
jns
adc
cmp
js
testb
fidivrs
sbb
jbe
scas
cmp
mov
jnp
inc
stos
pop
sbb
fisttpl
aas
push
pop
ja
sbb
mov
imull
adc
mov
aaa
cmp
jno
aaa
aas
jbe
dec
mov
mov
idiv
ljmp
out
jecxz
sbb
cmp
ja
sbb
mov
scas
js
xor
jnp
or
addr16
js
cmp
lea
sbb
ja
scas
xchg
mov
inc
stos
sbb
cmp
outsl
and
dec
aaa
addr16
ja
std
scas
xchg
sti
mov
mulb
inc
aaa
int
lock
int
js
mov
mov
lods
pop
add
lock
sbb
outsl
test
sbb
mov
scas
pop
dec
ja
cmp
xchg
sahf
ja
fnsave
jno
lea
pop
push
pop
fs
xchg
sbb
loope
fwait
divl
outsl
call
sbb
testl
inc
test
ja
aaa
arpl
lock
push
pop
adc
pushf
repnz
es
sbb
arpl
xchg
sbb
roll
xchg
pop
aaa
pop
gs
ja
sub
stc
sbb
idivl
xchg
ficomps
mov
imul
pusha
push
jge
adc
jle
outsl
adc
insb
js
enter
js
scas
mov
movsb
lock
sti
aaa
adc
mov
pusha
arpl
lock
and
movsl
fcomi
cltd
xchg
cmc
out
sbb
loop
outsl
test
sbb
adc
js
mov
jnp
or
mov
ja
mov
lea
pop
xchg
pop
lahf
sbb
movsl
cmp
outsl
leave
int
js
sbb
hlt
scas
pop
dec
mov
shr
jno
cmp
mov
jnp
aaa
ja
mov
ja
testl
sahf
xchg
shl
nop
mov
xor
sbb
pop
mov
inc
scas
dec
aaa
es
ja
push
inc
mov
sti
aaa
dec
mull
push
and
sbb
cmpb
ds
cmp
sahf
divb
lea
sbb
ja
add
or
mov
adc
pop
frstor
mov
popf
ja
outsl
xor
sbb
int
cmp
adc
mov
mov
pop
fisttpl
jb
loop
pop
sbb
pop
fldenv
movsb
scas
mov
jecxz
sub
fwait
and
xchg
jae
stos
int
jecxz
push
cld
jo
mov
outsl
aaa
mov
ja
cld
jno
aaa
arpl
cli
out
mov
cmp
js
fistpl
shlb
ja
jno
negb
cmp
pop
mov
mov
out
inc
bound
xchg
jmp
lock
push
ss
fstps
xor
dec
ja
aaa
int
in
pop
ja
idivl
xor
in
push
outsl
push
je
mov
neg
adc
mov
pop
mov
cmp
inc
or
ja
aaa
mov
mov
ja
dec
cmp
and
call
pop
fnclex
cmp
icebp
mov
popa
mov
or
hlt
icebp
sarl
mov
enter
cmp
in
lock
enter
cmp
mov
jno
or
aaa
divl
mov
dec
pop
adc
cmp
je
mov
cwtl
dec
xchg
icebp
arpl
or
aaa
dec
or
ja
dec
cmp
dec
mov
push
jo
lock
ss
push
movsb
icebp
mov
jno
or
hlt
icebp
sarl
mov
mov
fmulp
fldt
sbb
pop
sbb
icebp
aaa
icebp
inc
enter
push
movsl
xchg
fisubs
insb
and
jnp
mov
or
mov
mov
je
divl
mov
push
sahf
dec
testl
std
inc
sub
mov
or
mov
dec
mov
mov
pushl
sbb
fdivl
and
ja
outsl
sbb
mov
fcmovnu
jbe
fsubrs
xchg
dec
js
dec
stos
fistl
jecxz
out
cmp
sbb
cwtl
outsl
push
mov
adc
cli
mov
xchg
push
push
jbe
jbe
in
lcall
mov
fcoml
mov
xchg
incl
dec
fsts
push
jo
popf
sbb
sub
mov
jne
xor
push
sar
mov
jns
add
xchg
cmc
icebp
cmp
xor
arpl
icebp
pop
jns
cmpsl
push
add
out
add
and
call
mov
mov
pop
idiv
cmp
mov
xorb
scas
mov
popa
pop
out
insb
fnsave
jbe
out
cmpsb
mov
cli
aam
call
arpl
xor
ja
mov
pop
mov
testl
jo
inc
xchg
in
push
mov
jno
js
aaa
jbe
jno
aaa
mov
mov
mov
mov
fstpt
aaa
shrl
jo
mov
mov
mov
jno
mov
or
cmp
mov
enter
jbe
inc
adc
out
add
jo
jl
mov
fdivl
cli
out
mov
arpl
xor
outsl
push
mov
testl
jbe
push
test
mov
aaa
cmp
xor
aaa
pop
mov
mov
mov
outsb
mov
jnp
xor
jno
cmp
pop
mov
mov
divl
dec
pop
inc
cmp
out
sahf
lcall
xchg
outsl
jbe
pop
ficompl
stos
lds
push
xchg
shl
shrd
push
mov
aaa
dec
test
lods
loop
mov
inc
aam
push
and
xchg
pop
popf
push
lcall
pop
movl
cmpsb
movd
data16
cli
adc
arpl
stos
pop
sbb
fistps
es
outsl
dec
arpl
aas
mov
xor
lret
sti
mov
push
sbb
sub
subl
movsl
gs
push
sahf
pop
aad
pop
into
in
pop
xchg
push
fsubrs
dec
not
aaa
cmp
ja
and
xor
aaa
into
jbe
test
mov
fstps
mov
insb
in
inc
xchg
enter
js
aad
mov
cwtl
cmp
mov
in
loop
sbb
dec
js
aad
cmp
mov
mov
sbb
adc
dec
mov
test
mov
mov
adc
inc
ja
dec
mov
sbb
scas
das
out
pop
mull
jne
int
sub
pop
mov
mov
das
pop
testl
cmp
pop
or
ja
mov
mov
sbb
mov
mov
sbb
adc
imul
pop
and
in
decb
out
fs
aaa
mov
inc
pop
out
arpl
testl
add
ja
cmp
mov
les
mov
fnsave
mov
pop
sbb
adc
pop
dec
mov
aaa
cwtl
dec
mov
aaa
push
fcoms
mov
pop
mov
mov
mov
mov
adc
sbb
ja
lock
and
adc
test
not
aaa
mov
in
push
mov
add
pop
mov
mov
fs
mov
f2xm1
cmp
mov
xorb
ja
inc
ja
jo
cmp
jae
jg
or
je
out
jo
mov
mov
fwait
divl
jno
aaa
dec
mov
ja
movsb
sub
or
idivl
mov
mov
sub
jno
idivb
in
pop
ja
cli
mov
jbe
inc
pop
mov
pop
jo
push
xor
aaa
xor
ja
aaa
int
mov
ja
imull
mov
in
push
add
jo
mov
cld
jbe
cmp
mov
mov
mov
xor
dec
pop
cltd
shlb
pop
adc
hlt
dec
push
fcmovu
loope
adc
ret
dec
mov
cltd
in
push
rcrl
icebp
xor
dec
cmp
int
in
pop
ja
jle
lods
push
cmc
sbb
hlt
icebp
sarl
mov
cmp
pop
aaa
cmp
mov
pusha
mov
shll
cmp
stc
xor
dec
cmp
int
js
ja
push
stc
xor
addr16
and
js
cmpsl
loop
movsb
in
pop
mulb
cmp
aaa
dec
ja
ja
cmp
in
pop
mull
cmp
cmp
gs
and
pop
mov
dec
loop
xor
dec
xchg
loop
xchg
aaa
xor
pop
ja
mov
scas
mov
imull
adc
cltd
cmp
icebp
out
cmp
cmp
or
arpl
cmp
idivl
dec
cmp
cmp
gs
cmp
in
pop
loop
aaa
cmp
in
arpl
stc
loop
aaa
inc
xor
ja
pop
ja
push
dec
cmp
inc
lret
in
pop
and
sbb
lcall
aaa
cmpsl
jne
ja
cmp
mov
xor
dec
mull
int
cmp
mov
js
pop
mul
inc
cmp
mov
inc
js
mov
mov
loop
mov
test
fsub
mov
scas
aaa
pop
testl
mov
js
pop
in
pop
cltd
test
cmp
icebp
out
mov
in
gs
cmp
mov
ja
pop
mull
cmp
cmp
js
cmp
pop
mov
loop
divl
mov
cmc
dec
cmp
pop
xor
aaa
cmp
xor
aaa
push
sbb
fistpl
xor
icebp
mov
popa
andb
ja
js
int
js
icebp
arpl
mov
mov
mov
aaa
or
mov
loop
js
mov
cmc
pop
js
xchg
loop
js
xor
aaa
xchg
ja
js
sti
mov
mov
pushf
push
sbb
fldcw
xchg
xchg
repnz
xchg
loop
xorl
ja
mov
mov
cmp
mov
mov
inc
cmp
js
mov
mov
xchg
ds
test
fdivrs
loop
mov
arpl
xor
mov
mov
cli
notl
insl
insb
lock
jbe
cmp
inc
movsl
mov
xchg
stc
icebp
mov
fdivl
mov
inc
cmp
ja
mov
mov
cmp
mov
loopne
loop
xor
dec
xchg
loop
pop
adc
jnp
add
jbe
xor
sbb
mov
push
mov
mov
mov
loop
shlb
icebp
mov
pop
mov
cmp
mov
mov
inc
mov
js
mov
popa
mov
cmp
js
dec
cmp
mov
loop
mov
cs
loop
aaa
mov
xor
idiv
xor
cmp
int
pop
and
es
insl
sbb
cmpsb
xor
js
iret
loopne
ja
lock
or
aaa
inc
mov
aaa
scas
mov
jno
mov
imull
cmp
mov
rorb
ja
cltd
inc
jmp
mov
aad
mov
xor
ja
aaa
mov
ja
in
pushf
xchg
sbb
std
mov
jne
mov
div
pop
mulb
xor
push
ja
and
sahf
push
fwait
divl
lock
in
push
js
cli
aaa
mov
rcl
idivl
div
rorb
xor
dec
js
ja
and
dec
mov
cmp
inc
fistps
out
push
adc
rolb
cmp
mov
xorb
ja
inc
ja
mov
mov
testl
popa
mov
cli
jbe
je
js
stos
enter
sub
aaa
cld
xor
ja
xor
mov
mov
cmp
xor
outsb
in
sbb
pushf
cltd
jo
cmp
ja
push
test
sub
jbe
push
ja
mov
dec
pop
test
mov
arpl
negl
mov
sbb
dec
clc
pop
push
cwtl
fidivs
jbe
clc
xor
sbb
mov
push
inc
sbb
fcoms
jo
aaa
call
xor
cmp
mov
mov
cmp
xor
cmp
cli
jbe
js
dec
xor
cmp
adc
arpl
xor
dec
mov
aaa
int
not
ja
cmp
dec
mov
js
lcall
and
shlb
jno
negb
cmp
inc
mov
aaa
xor
cmp
mov
mov
jno
mov
cmp
mov
fidivrl
lock
or
fidivrl
scas
aaa
mov
pop
push
and
in
lcall
pcmpgtb
cmp
leave
int
mov
xor
ja
dec
mov
inc
js
out
cmp
pop
mov
sbb
mov
out
push
mov
jg
repz
xlat
arpl
cmpl
movsl
repz
pop
add
repz
dec
repnz
js
int3
mov
arpl
mov
pop
mov
cwtl
cmp
adc
adc
cmp
out
mov
je
mov
repz
stos
aam
pop
fcoml
movsb
scas
mov
fdivl
xchg
and
testl
mov
pop
js
cmp
pop
or
mov
xchg
fistpl
xor
lock
mov
out
fnclex
aaa
xchg
icebp
arpl
ja
mov
popa
xchg
mov
inc
mov
cmp
sub
ficompl
out
push
lock
idiv
jbe
out
mov
in
gs
cmp
mov
ja
mov
xchg
fistpl
testb
aaa
int
in
sahf
fistpl
xor
xor
jge
xchg
in
jno
aaa
loopne
pop
push
cmpsl
or
inc
testb
leave
cmp
mov
test
mov
xor
repz
mov
jno
cmp
jne
js
std
jb
mulb
outsb
imul
ja
outsb
imul
adcl
mov
and
jb
cmp
pop
or
pop
in
jbe
cmp
mov
test
mov
popf
cli
xchg
pop
lds
jnp
cmp
pop
loopne
mov
mov
pop
test
test
jno
or
mov
cmp
jle
inc
pop
frstor
aaa
xor
mov
mov
jp
leave
cmp
mov
test
jno
or
ja
mov
mov
jno
jge
push
xchg
in
jno
js
jno
and
jb
pop
fwait
mov
cmp
aaa
pop
sbb
ja
push
cmp
mov
aaa
test
pop
das
mov
xor
mov
mov
out
jb
test
xor
cmp
pop
or
pop
in
jbe
jle
pop
cwtl
shll
clc
cmp
pop
popf
aaa
std
jb
mulb
cmp
aaa
dec
mov
ja
mov
addr16
ljmp
aaa
jbe
pop
push
xor
cmp
fs
icebp
fistl
or
xchg
pop
lds
loop
push
fsin
and
xor
mov
out
push
xlat
push
in
pop
xchg
fbld
xchg
js
sub
xor
fdivr
pop
ja
aaa
jne
int
ja
xor
cmp
dec
mov
mov
and
and
xchg
jbe
cmp
or
aaa
mov
aaa
jno
mov
ja
fcoms
repnz
cmp
out
leave
int
cmp
fs
xchg
pop
inc
pmulhuw
arpl
jne
int
aaa
and
dec
ja
repnz
pop
pop
das
mov
push
cmpsb
popa
xchg
pop
aaa
js
cmp
pop
or
fcomps
shll
and
and
and
adc
dec
sbb
mov
shll
sub
pop
aaa
in
push
pop
pop
int
cmp
mov
inc
testl
aaa
out
cmp
mov
push
xchg
pop
mov
dec
mov
xchg
cmp
pop
or
mov
sbb
fstl
xchg
mov
cwtl
mov
fdivs
cld
mov
aaa
std
cltd
decb
xchg
lret
add
pop
inc
xchg
loop
out
ret
pushf
out
mov
pushf
cmpsb
add
jb
insl
fsubs
adc
xchg
rcr
mov
mov
mov
fwait
sahf
xor
pop
sbb
int
arpl
xor
adc
data16
ja
outsb
mov
mov
outsb
mov
cmp
sahf
fwait
xchg
cld
jbe
cmp
jbe
aas
outsb
sti
jbe
dec
xchg
xchg
mov
jbe
xchg
mov
xchg
jbe
mov
in
jbe
aaa
outsb
sti
jbe
ja
adc
push
in
fwait
popf
fcoml
jbe
idivl
shrl
jbe
push
outsl
popa
and
jbe
clc
outsb
inc
jbe
insb
jae
inc
jbe
add
xor
jbe
aaa
aas
outsb
sti
jbe
shrl
jbe
fsubrp
xchg
xchg
jbe
mov
sahf
jbe
imull
jbe
loopne
leave
fistl
sti
jbe
shrl
jbe
icebp
push
fcmovbe
sbb
push
cltd
pop
fcmovnu
xchg
jl
push
fsubr
loop
sbb
jbe
outsl
pop
inc
popf
push
sbb
lds
xchg
out
pushf
fisttpl
lock
ret
jns
cmp
sbb
aaa
mov
in
gs
aas
aaa
fldt
adc
jne
ja
lock
xor
or
test
mov
aaa
pop
js
cmp
pop
or
pop
xchg
jne
jo
lock
mov
out
frstpm(287
aaa
xchg
icebp
arpl
ja
mov
pop
mov
cmp
mov
mov
dec
fs
jo
lock
inc
cltd
sub
icebp
out
mov
in
gs
cmp
mov
ja
dec
fbld
outsl
lock
mull
fstpt
xchg
icebp
arpl
js
mov
popa
mov
dec
xor
mov
mov
aaa
hlt
jo
lock
or
fistl
mov
arpl
mov
mov
pop
test
mov
and
data16
outsb
pop
mov
iret
outsl
cmp
mov
arpl
or
aaa
icebp
cmp
xchg
negl
cmp
or
js
cmp
imul
popf
hlt
fnsave
jo
sti
jbe
mulb
mov
aaa
cmp
ja
sti
aaa
adc
vmread
outsl
aam
imul
outsb
int3
divl
push
pop
int3
fistpl
outsl
aas
inc
jecxz
outsl
loopne
fldcw
daa
and
xchg
cmp
js
lods
in
jo
mov
xchg
aad
js
jno
divb
mov
ja
mov
mov
cmp
mov
pop
ret
outsl
sti
cmp
adc
decl
mov
pop
mov
xor
mov
ja
movsb
sub
push
inc
inc
notb
scas
jmp
lock
ss
fldenv
div
pop
test
cmp
aaa
mov
in
gs
sbb
push
dec
out
outsl
push
je
testb
icebp
out
mov
arpl
mull
int
cmp
aad
pushf
stos
out
hlt
jo
lock
mov
daa
xchg
icebp
arpl
or
cmp
mov
mov
mov
xor
fimull
call
addr16
cmp
js
mov
pop
mov
notb
mov
dec
pop
adc
testb
lock
push
ss
fistpl
xor
dec
mov
aaa
int
not
ja
cmp
pop
mov
js
dec
cmp
jo
mov
push
push
ss
icebp
out
cmp
xor
pop
cmp
ja
pop
cmp
cld
push
sbb
xchg
in
xor
push
ret
fsubr
mov
out
addr16
mov
cmp
mov
push
xchg
ja
cmp
xchg
cmpb
xchg
das
xchg
xchg
xlat
arpl
cmp
int3
mov
arpl
mov
in
xor
loop
sbb
pop
js
aad
cmp
int3
mov
arpl
js
aad
cmp
dec
mulb
in
lahf
mov
test
mov
cmp
mov
addr16
imul
cmp
inc
mov
divl
mov
js
jo
mov
mov
xlat
js
mov
mov
mov
js
cwtl
decb
dec
mov
js
dec
mov
js
pop
xchg
mov
pop
cltd
dec
mov
js
fsincos
idivb
mov
out
adc
mov
mov
out
and
pop
pop
fcompl
adc
mov
xchg
pop
push
mov
mov
in
pop
mov
rcll
fistpl
addr16
outsb
dec
int3
push
daa
in
pop
aad
pop
in
jge
and
push
push
pop
push
sbb
xchg
mov
aas
fidivl
fidivs
idivb
push
xor
dec
ja
ja
cli
mov
mov
push
fcoms
xchg
lcall
fcomi
scas
jo
js
in
pop
mov
jno
mov
jno
aaa
pop
mov
cmp
mov
or
je
imul
dec
mov
mov
add
cmp
sarl
mov
fnstsw
mov
push
xchg
shr
inc
mov
ja
mov
pop
mov
cmp
mov
mov
test
jmp
mov
fldt
push
jno
cmp
mov
mov
jno
mov
or
mov
ja
shrb
imul
jo
mov
cmp
jno
mulb
xor
dec
mov
and
jno
pop
sbb
pop
fildl
xchg
outsb
outsb
ja
jne
idiv
mov
and
dec
imull
arpl
jns
int
js
inc
int3
mov
xchg
jmp
inc
cmp
mov
cmp
mov
arpl
xorb
pushf
mov
fnsave
mov
pop
lea
mov
fidivrs
add
jg
mov
sub
dec
cmp
outsl
out
pop
stos
push
push
sahf
mov
push
fistpl
push
inc
cltd
adc
sahf
outsl
shl
rolb
out
mov
mov
inc
lret
pushf
cmpsb
jno
mov
inc
inc
sahf
out
shlb
aas
testb
repz
out
jl
ja
dec
outsl
ja
inc
out
jns
inc
sti
jo
testl
or
cmp
outsl
push
test
out
mov
jo
mov
push
sbb
sub
in
shl
adc
xchg
jo
pop
jle
cltd
mov
pushf
inc
mov
pop
sti
out
dec
pop
arpl
mov
out
xchg
js
pop
inc
push
js
mov
inc
fs
dec
pop
in
pop
adc
out
pop
ja
xchg
pop
xor
cld
pop
ja
xchg
pop
ljmp
push
pop
lea
pop
jl
ficoms
or
into
mov
pop
cwtl
aas
fucomi
pop
mov
mov
lock
aas
pop
mov
mov
mov
mov
pop
sti
outsl
dec
pop
push
test
std
pop
cmp
pop
push
loop
push
xchg
pop
sahf
and
sbb
inc
jno
dec
adc
pushf
and
lret
lcall
fs
fidivrs
lahf
jecxz
lock
jno
imul
sbb
mov
mov
cmp
fcoml
dec
inc
xlat
cmpsb
pop
aas
push
jo
adc
sbb
pop
and
sarb
out
pop
daa
int
fs
dec
jb
or
outsl
mov
xchg
sub
mov
fldt
fstl
pop
mov
push
scas
fistpl
scas
negl
and
xchg
dec
cmp
call
cmp
into
and
shl
in
fwait
and
mov
pop
aam
jecxz
lock
imul
pop
sbb
test
pop
push
sahf
xchg
pop
push
dec
jo
jno
scas
xchg
fsubs
adc
bound
scas
mov
mov
je
test
mov
pop
cmp
mov
and
pop
dec
inc
pop
jmp
mov
ss
in
fucom
lock
cmp
int
jl
and
pop
ficoml
movsb
repnz
push
mov
mov
movsl
pop
mov
and
pushf
pop
lock
push
xchg
pop
sbb
mov
pop
frstor
rcll
dec
cli
push
jno
aad
out
dec
jns
pop
sbb
out
pop
cmp
call
push
movsb
cwtl
sbb
xlat
inc
je
xor
sbb
dec
adc
rol
mov
pop
lahf
lcall
push
sahf
dec
out
dec
mov
lret
adc
cmp
xor
dec
in
stos
in
xchg
add
xor
lahf
mov
test
inc
and
mov
mov
scas
aaa
pop
testl
mov
js
scas
negl
fcom
cmp
push
js
cld
xor
pop
idivb
pop
cmc
xor
pop
cli
loop
cmp
xor
clc
xchg
scas
cltd
dec
cmp
xchg
fstpt
dec
cmc
xor
cwtl
cli
arpl
cltd
icebp
inc
xor
daa
sub
cmc
xor
xchg
sub
int3
ja
xor
mov
xchg
jno
mov
cmp
scas
ja
js
cmp
mov
push
xor
fstl
popf
cmp
xor
mov
xchg
mov
xor
cmp
mov
xchg
test
cltd
int3
js
jg
jno
mov
imul
dec
aaa
es
ja
cli
mul
mov
push
cmc
xor
mov
sahf
xchg
hlt
cltd
inc
dec
xor
jno
mov
cmp
scas
aaa
pop
js
cmp
mov
mov
xor
test
and
xor
fdivr
loop
mov
arpl
negl
int
cmp
idivl
mov
push
add
or
cmp
mov
xchg
fidivs
scas
mov
ja
cmp
xor
notl
cmp
divb
mov
imul
sbb
xchg
dec
cltd
push
ja
cld
xor
pop
idivb
arpl
cmc
xor
cmp
int
js
idivl
cld
cltd
push
mov
xor
negb
loop
cmp
xor
cli
loop
cmp
xor
pop
cmp
pop
push
cltd
push
cmp
js
cmp
mov
mov
xor
mov
testb
adcl
xor
mul
jbe
aaa
int
cmp
ja
js
dec
mov
mov
cmp
cwtl
loopne
cmp
cld
xor
dec
negb
int
sub
cmc
xor
mov
mov
cli
mul
idivl
dec
inc
or
hlt
xor
pop
cltd
js
hlt
xor
aaa
pop
ja
imulb
pop
test
sbb
outsb
js
fistpl
dec
js
fistpl
jnp
je
cli
sbb
js
mov
sbb
js
outsb
fistpl
mov
jg
mov
mov
cli
sbb
scas
outsb
mov
dec
mov
jnp
je
cli
in
mov
mov
in
mov
mov
xchg
xor
or
cmp
mov
xchg
fidivs
scas
mov
ja
cmp
std
adc
pop
jle
xor
mulb
cmc
xor
dec
mov
js
mov
scas
neg
push
dec
cltd
arpl
std
mov
ja
cmp
mov
xchg
jno
mov
cmp
scas
mov
js
cmp
xor
jg
notb
addb
aaa
loope
xchg
loop
scas
mov
mov
divl
in
cltd
fdivrl
xor
jno
mov
mov
xchg
jbe
mov
scas
mov
testb
inc
int
lcall
xor
mov
xchg
jno
mov
cmp
scas
ja
js
cmp
mov
mov
mov
in
cltd
push
ja
xor
mul
dec
pop
aaa
int
sub
cmc
xor
int
cmp
xchg
cltd
push
js
xor
mov
mov
mov
xor
scas
ja
testb
inc
mov
ja
mov
cltd
push
mov
cld
xor
dec
negl
int
cmp
aaa
mov
arpl
divl
push
test
loop
xchg
div
cld
xor
fdivr
loop
mov
arpl
mov
cmp
mov
cmc
mov
push
cltd
cmpb
cmp
cmp
mov
xor
mov
ja
pop
testl
push
inc
cmp
cmc
xchg
and
cmc
xor
dec
mov
jbe
shlb
notl
sbb
xor
mov
xor
mov
xchg
jno
mov
divl
scas
ja
cmp
mov
mov
xchg
pop
cmp
dec
inc
and
loope
xchg
mov
xor
mov
loop
scas
mul
repz
loop
push
xor
mul
jbe
mov
mov
ja
jbe
mov
mov
mov
rolb
and
arpl
negl
int
cmp
ja
js
dec
mov
mov
cmp
outsb
sahf
xchg
xchg
and
mov
dec
pop
aaa
int
ja
ja
mov
dec
mov
div
xor
push
js
pop
loopne
cltd
dec
js
xchg
fstpt
mov
aaa
int
sub
pop
mov
movsb
sub
inc
or
xor
mulb
cmc
xor
dec
js
ja
cli
mov
jbe
xor
negl
jl
cwtl
push
hlt
xor
mulb
cmc
xor
dec
mov
ja
cli
mul
mov
cmp
sti
xchg
cltd
cmpl
ja
xchg
mov
xor
ja
fidivs
scas
mov
addb
scas
push
div
divl
js
mov
xchg
jno
mov
mov
mov
xor
mov
mov
or
xchg
inc
testl
mov
divl
scas
ja
cmp
mov
js
divl
push
xchg
div
loop
xor
mov
inc
cmp
dec
mov
or
mov
mov
or
loopne
cltd
dec
cmp
xchg
fstpt
arpl
cmp
push
ja
daa
sub
pop
test
mov
push
add
pop
test
mul
aaa
cmp
xor
js
mov
cli
mov
pop
ret
mov
js
clc
cltd
cli
sarb
inc
cltd
mov
je
movsb
in
dec
js
cltd
fisubrs
push
hlt
mov
cmp
jl
js,pt
inc
ficompl
aas
dec
mov
mov
aaa
mov
inc
cmp
inc
mov
inc
adc
cmp
ds
xor
arpl
cmc
xor
dec
cmp
int
js
ja
dec
cmc
sti
cltd
cmpsb
in
xor
mov
out
push
sub
xor
testb
aaa
int
mov
ja
imull
cmc
xor
aad
movsl
in
in
cltd
fdivrl
xchg
sti
xor
scas
aaa
pop
testb
inc
mov
ja
scas
negl
mov
mov
divl
aas
dec
cmp
scas
negb
cmp
mov
js
divb
xor
or
cmp
cmp
aam
adc
xchg
fstpt
arpl
negl
int
cmp
mov
js
dec
mull
inc
pop
pop
xchg
sbb
and
loope
xchg
mov
xor
mov
loop
scas
mull
xchg
fistpl
cltd
fdivrl
xor
jno
mov
mov
ja
xor
ja
mov
divb
scas
neg
mov
enter
divl
fstpt
arpl
cmc
xor
dec
cmp
int
js
mov
mov
int3
dec
ror
adc
pop
cmc
xchg
cli
mul
idivb
push
cmc
xor
dec
ja
ja
and
cmc
xor
shl
subb
fdivrl
jg
jno
mov
divl
xor
ja
testb
cmp
add
test
lcall
int
cs
mulb
stc
xor
dec
js
ja
cmp
jbe
xor
add
cmp
adc
std
mov
mov
divb
or
aaa
mov
scas
ja
testl
testl
push
mov
dec
js
stc
xor
pop
sbb
aaa
mov
in
push
loop
clc
or
mov
js
xor
dec
cmp
scas
mulb
cmpsb
aaa
jno
or
mov
xor
divl
hlt
mov
adc
arpl
xor
dec
mov
aaa
int
mul
ja
cmp
dec
mov
js
xor
pop
sbb
stos
adc
int3
xor
mov
xor
aaa
mov
xor
mov
loop
scas
mul
mov
sahf
xchg
mov
fstpt
arpl
fdivl
inc
cmp
mov
mov
divb
scas
mull
adc
shrl
xor
mov
mov
cmp
mov
cmpsb
aaa
jno
or
ja
js
scas
mov
mov
inc
push
loopne
mov
pop
dec
or
cmp
inc
or
aaa
or
ja
mov
mov
testl
mov
xor
mov
mov
jbe
xor
or
cmp
mov
cmpsb
mov
fidivs
scas
neg
in
cli
cli
mov
xor
idivb
arpl
xor
mov
jbe
xor
jbe
imul
xor
mov
mov
divb
pop
mov
cmp
mov
cmpsb
mov
cmp
test
push
mov
push
add
dec
cmp
mov
aaa
divb
scas
ja
mov
mov
fdivl
scas
neg
aad
in
mov
xor
dec
cmp
int
js
aaa
mov
fwait
divl
xor
mov
sbb
idivl
js
ja
cld
xor
mov
xor
cmp
xchg
ja
cmp
scas
mov
js
cmp
mov
movsb
xor
pop
dec
or
cmp
dec
or
aaa
or
ja
or
mov
dec
dec
cmp
add
test
in
mov
dec
js
scas
negb
int
mov
jbe
sahf
ja
jecxz
scas
mov
testb
inc
or
mov
clc
xor
idivb
arpl
stc
xor
sbb
mov
mov
mov
mov
xor
mov
cmpsb
divb
popa
xchg
cmpsb
ja
mov
pop
mov
divl
scas
negl
in
mov
fstpt
dec
stc
sti
mov
xor
scas
ja
testb
inc
or
testl
hlt
xor
jno
or
test
xor
cmp
mov
out
mov
cmp
mov
mov
clc
xor
mulb
stc
xor
cwtl
cmp
ja
imull
dec
mov
cmp
xor
xchg
add
mov
xchg
divb
divb
popa
andb
mov
ja
cmp
or
xorl
div
std
xor
dec
cmp
int
js
aaa
mov
popa
pop
jbe
fs
daa
cs
mull
mov
inc
and
or
testb
dec
cmp
mov
cmpsb
ja
cmp
mov
js
scas
mull
push
shr
cli
mov
xor
mulb
outsb
push
dec
ja
outsb
push
dec
mull
mov
push
add
push
arpl
mov
xor
sbb
mov
imulb
dec
mull
push
outsb
push
xor
testb
aaa
int
cmp
ja
js
dec
mov
mov
xor
testb
subl
in
fsubrs
shr
push
pushf
sbb
js
add
pop
mov
or
jl
arpl
ja
test
mov
fnstcw
or
cmp
cmp
mov
arpl
mov
cmp
xchg
and
pop
test
mov
movsb
lock
sti
ja
add
divb
inc
lods
xlat
and
data16
sbb
bound
out
dec
ja
xchg
pop
mov
pop
xchg
dec
je
mov
decb
cwtl
fcmovu
fdivl
inc
outsl
je
mov
sahf
imul
and
mov
lds
out
adc
inc
shr
mov
outsl
ja
pop
jl
stos
pop
and
pop
sbb
jl
imul
xchg
jl
cmp
je
js
out
mov
cs
cwtl
loop
arpl
shll
jg
mov
jo
rclb
jo
inc
je
scas
lcall
jns
or
je
dec
fiadds
out
pop
pop
test
and
xchg
out
cli
jg
mov
ja
iret
out
int
pop
movsb
stos
sbb
pop
pop
std
inc
mov
inc
fnsave
out
push
mov
fcmovne
out
mov
mov
pop
fnstsw
not
out
mov
cmp
pop
jge
js
out
outsl
jl
pop
or
shll
jl
mov
out
inc
jl
mov
out
inc
jl
lret
arpl
sbb
in
pop
cmpsb
xchg
xlat
std
xchg
jo
jg
test
sarb
dec
pop
outsb
daa
push
stos
popf
pop
pop
fiaddl
adc
xchg
inc
mov
inc
mull
add
mov
add
clc
out
inc
jg
idiv
out
inc
std
mov
jl
pusha
sbb
cmpsb
pop
aas
jl
test
xchg
jl
cmp
je
js
out
mov
addr16
pop
mov
add
hlt
out
sarb
mov
out
adc
cmp
mov
xlat
pushf
sbb
idivl
ja
fs
mov
ror
jo
outsl
inc
lret
pop
pop
shrb
cmp
pop
jg
mov
js
shr
clc
jl
subl
sbb
push
pop
pop
std
cmpb
jo
jg
js
jo
sarb
jp
xchg
stos
pusha
pop
push
js
not
outsl
mov
cmp
jg
lock
fs
addl
jle
mov
jle
mov
outsl
jno
mov
jle
jo
inc
sahf
aam
lahf
inc
xchg
xchg
jg
ja
jo
inc
int3
mov
enter
divl
inc
push
stos
pusha
pop
sbb
adc
imul
inc
js
jo
inc
adc
cmp
pop
divb
arpl
out
cltd
cwtl
shll
pop
mov
fdivp
mov
ja
addr16
lods
data16
mov
sti
inc
int3
divl
outsl
inc
aas
cmp
inc
sarb
jo
inc
jb
ljmp
iret
inc
sahf
hlt
outsl
sahf
inc
loopne
clc
outsl
cmp
clc
outsl
fs
pop
jp
pop
in
sbb
subl
xchg
jle
testl
test
adc
icebp
ss
xlat
int
mov
mov
jbe
sahf
jle
imul
fnstsw
cmc
xchg
jle
fadds
outsl
cli
jle
ja
fs
dec
mov
cli
pop
in
rcll
aas
divl
inc
sarb
shll
inc
outsl
js
addr16
mov
out
data16
cwtl
xchg
jbe
fs
in
xchg
jo
inc
movsl
jmp
jo
inc
std
jmp
arpl
jbe
fsubs
sub
inc
scas
ja
addr16
mov
jno
inc
mov
inc
jle
pop
in
movsb
sbb
pop
rorl
pushf
cltd
fdivrs
mov
call
jno
inc
fwait
ja
mov
inc
js
enter
pop
ret
pop
ja
ja
pop
inc
ja
ja
mov
fcmovnbe
out
outsl
jl
data16
jl,pt
imul
xchg
jl
cmp
je
js
out
mov
jbe
sbb
lcall
mov
jo
jg
mov
mov
inc
pop
xchg
lods
in
es
cli
pop
fbld
pop
inc
adc
jo
outsl
inc
aas
divl
inc
push
out
arpl
dec
jecxz
adc
pop
loop
mov
iret
out
mov
mov
divl
out
cmp
std
push
xchg
pop
sub
mov
mov
inc
dec
out
push
je
ja
out
xchg
inc
jl
ljmp
and
cmp
xchg
jge
js
out
mov
jle
sbb
jl
cmp
inc
jl
cmp
out
inc
jl
cmp
out
inc
jl
pop
push
sbb
cmpsl
xchg
jecxz
and
lock
jae
fcoml
pop
dec
dec
lcall
js
out
outsl
jl
mov
js
out
sahf
jl
dec
dec
ficompl
in
lahf
jne
js
cmp
js
out
pop
jg
ja
out
mov
pop
push
dec
ljmp
push
inc
imul
pop
inc
sarb
iret
out
mov
fsubrp
pop
inc
xchg
pop
fs
sbb
int3
inc
mov
fnstsw
fnstsw
pop
mov
push
inc
icebp
cmpsl
call
jge
shlb
cld
shl
pop
mov
arpl
sbb
jl
movsb
stc
inc
jae
lods
pop
jae
mov
jae
icebp
jle
or
fisubs
jg
mov
test
out
fdivp
mov
ja
push
mov
enter
pop
pop
xchg
incl
jg
cmp
mov
jle
pop
xlat
pusha
xchg
pop
pushf
cltd
jle
mov
inc
outsl
pop
jle
lea
pop
jle
xchg
inc
outsl
inc
jle
js
jmp
xlat
xchg
sbb
jne
pop
adc
jo
inc
mov
jo
inc
mov
inc
into
push
push
sub
mov
pushf
jle
std
pushf
mov
iret
or
cmp
sub
push
call
add
movsl
pop
xor
pop
in
loop
lahf
jle
testl
mov
jle
push
lods
pop
addr16
lret
mov
bound
inc
add
jbe
jno
inc
jecxz
push
jno
inc
push
jmp
jno
inc
js
xor
pop
mov
sbb
push
cmpsl
es
bnd
je
mov
jno
inc
mov
inc
xorb
pop
ficompl
pushf
sbb
js
addr16
mov
int3
ja
jo
clc
inc
inc
jbe
xchg
test
sbb
inc
push
dec
out
or
adc
ja
jo
inc
aas
lea
addr16
out
rolb
outsl
xchg
inc
mov
jg
aad
mov
data16
fimuls
mov
jo,pt
inc
outsl
mov
jo
pop
inc
mov
mov
fsts
fldt
push
ja
pop
inc
adc
out
shrb
imul
pop
inc
sarb
les
arpl
jg
xchg
push
inc
js
pop
inc
sarb
mov
jbe
inc
inc
mov
loopne
jne
mull
movsb
mov
ja
xchg
jl
inc
pusha
fisubs
mov
mov
cmp
push
je
js
out
xchg
inc
jl
in
pop
arpl
inc
jl
jae
addr16
jae
movsb
sbb
jl
dec
jl
fwait
sbb
data16
ja
inc
jl
mov
out
in
jl
imul
xchg
jl
adc
jno
add
cli
jge
mov
js
fsubrs
jle
mov
test
push
inc
icebp
cmpsl
in
lock
sahf
jle
js
outsl
pop
jle
ja
outsl
outsl
jle
loope
outsl
gs
cmpsl
aad
stos
gs
adc
insl
jae
cld
ds
jae
jl
dec
adc
xchg
fnstsw
jbe
out
js
mov
jl
mov
push
jbe
sbb
or
aam
fists
aas
ja
pop
jg
mov
jo
shrb
addr16
sub
pushaw
ficoml
inc
sahf
js
jo
inc
push
test
inc
sbb
movsl
pop
mov
add
mov
addr16
jne
xchg
in
imul
sbb
ja
mov
sbb
and
jbe
xchg
jecxz
test
daa
loop
and
fbstp
xchg
sbb
inc
shlb
fucom
sbb
inc
fsubrp
jo
fbld
loopne
mov
sub
jo
cmp
sbb
sbb
inc
dec
jo
add
test
jo
sbb
inc
dec
jo
cmp
mov
jl
dec
addr16
mov
in
jbe
dec
mov
out
mov
dec
in
jo
cmovs
push
adc
jo
ja
dec
mov
mov
dec
in
jo
testl
dec
push
je
js
dec
inc
jo
mov
popa
fidivs
dec
in
jo
mov
loopne
jo
repz
pop
jo
mov
into
jl
out
ja
dec
in
out
jae
dec
enter
testl
dec
inc
jo
js
dec
pop
jo
mov
mov
testl
dec
in
jo
cmovs
push
adc
jo
inc
dec
loopne
jo
mov
push
je
testl
cmp
dec
pop
jo
js
dec
xchg
jo
mov
mov
jbe
leave
rol
outsb
mov
out
pop
outsb
pop
sbb
rol
lock
sbb
rcrb
ja
fld
or
lea
out
pop
outsb
mov
and
rorb
push
sub
rclb
pop
mov
out
stc
sti
not
divl
push
mov
sub
imul
pop
imull
arpl
add
in
pop
cmp
es
fucomi
inc
dec
fsubrs
in
pop
push
xchg
outsb
ja
out
popl
loope
mov
testb
or
dec
or
dec
mov
testl
arpl
dec
mov
mov
scas
dec
mov
js
mov
jnp
or
mov
ja
mov
frstor
fcompl
pop
xor
pop
and
insl
dec
out
cmp
pop
std
push
pop
outsb
dec
lock
js
aaa
mov
mov
mov
pop
mull
xor
js
ja
pop
mov
dec
mov
xor
cwtl
cld
dec
jge
cli
xor
aaa
mov
sbb
je
cmp
mov
scas
mulb
add
xor
dec
ja
aaa
int
mov
ja
imul
pop
mov
jbe
test
mov
cmpb
mov
jmp
xor
xor
cmp
cld
push
xchg
and
sbb
mov
ficomps
out
xchg
stos
fcompl
data16
stos
popf
jmp
sbb
std
fsubl
mov
cmp
lock
mulb
xor
push
ja
movsb
in
pop
mov
ja
xor
dec
mov
cmp
cli
not
js
cmp
pop
mov
pop
mov
cmp
jmp
aaa
jno
mov
or
mov
ja
sbb
out
jnp
mov
rolb
pop
cli
dec
lock
cmp
aaa
mov
arpl
div
test
mov
scas
mov
pop
idiv
cmp
inc
mov
ja
adc
stos
add
dec
mov
sarb
fidivrl
xor
cmp
mov
xchg
ficomps
xchg
xchg
sbb
adc
shlb
stc
xchg
rclb
add
jl
cmp
mov
xorb
mov
imull
cmp
mov
cmpb
mov
add
jbe
rclb
stos
rcl
and
dec
rcl
jmp
xor
ja
scas
ja
mov
cmp
mov
bound
out
cmp
pop
rcrb
mov
dec
lock
mov
jbe
lock
cli
mov
imul
pop
mul
dec
push
cmp
and
pop
js
mov
xor
shlb
stos
rcl
cli
ja
je
ja
mov
mov
mov
or
cmp
cmp
sbb
inc
push
xchg
rol
mov
f2xm1
cmp
xchg
scas
mov
cmp
cmp
mov
xor
mov
divl
pop
js
jle
mov
je
testl
xchg
divl
in
pop
ja
cli
cmp
mov
movsl
jno
mov
out
scas
mov
add
pop
mul
jle
aaa
int
not
ja
push
xor
push
test
mov
in
push
mov
je
cmp
js
dec
rclb
js
hlt
xor
aaa
dec
negb
int
sub
lock
and
out
scas
mov
jne
js
div
pop
mulb
xor
ja
mov
mov
int
in
pop
cmp
xor
mov
rcl
mov
arpl
mov
aaa
dec
js
ja
and
out
in
and
in
jnp
jbe
xchg
xchg
mov
sbb
add
xlat
popf
xchg
push
in
dec
rcll
bound
ror
fcoml
in
jb
in
xlat
push
cltd
in
pop
jmp
mov
adc
shll
je
mov
and
mov
xchg
mov
or
cld
sti
jp
pop
scas
adc
mov
xchg
sti
jl
ljmp
icebp
fcoml
jno
data16
mov
arpl
pop
fs
in
cld
xchg
cli
mov
push
jno
in
push
mov
dec
adc
in
dec
dec
mov
inc
out
jns
mov
cmp
imul
xchg
jnp
cmp
jl
stos
int
loop
pop
jg
in
shrb
in
pop
cwtl
jmp
pop
fisubl
pop
fsub
push
out
into
dec
sub
pop
pop
mov
jae
stos
into
frstor
cwtl
jb
sbb
sbb
pop
mov
out
divl
and
inc
jno
cwtl
jl
pop
sti
in
cmp
jge
in
fdivl
test
repz
push
dec
in
dec
dec
sbb
xor
dec
cltd
mov
sub
shrb
or
mov
in
pushf
or
push
jns
mov
in
or
fsts
insb
dec
int3
in
sahf
pop
in
lds
test
cli
dec
and
sbb
ds
aad
dec
int3
outsb
pop
int
fcmovu
mov
mov
loop
outsb
ss
mov
adcb
call
sti
jl
js
adc
mov
data16
mov
shlb
push
sbb
pop
xchg
in
pop
pop
sub
rclb
das
pop
sahf
sbb
call
insl
iret
mov
dec
cmc
out
mov
pop
and
mov
mov
and
js
in
pusha
mov
cmpsb
in
jge
sbb
fisubl
push
pop
pop
mov
negl
xor
push
cltd
cmpsl
fiadds
in
pushf
push
fistpl
stos
dec
sbb
cwtl
loop
jno
dec
inc
fimull
shlb
js
jle
call
ficoml
or
inc
pop
es
dec
jae
ja
fbstp
push
push
loopne
push
jno
fwait
test
push
mov
mov
dec
insl
mov
xchg
dec
cmp
ja
push
fstpl
outsw
push
cwtl
loopne
dec
int
sbb
aam
in
jp
pop
scas
xchg
fst
in
dec
int
popa
cltd
pop
pusha
inc
in
fdivrs
js
push
xor
jb
dec
je
push
call
and
enter
cltd
in
int3
js
push
loop
push
lock
mov
cwtl
sub
in
outsb
int
pop
mov
pop
and
int
fucom
pop
aad
pop
dec
lods
pop
movsl
insb
pop
in
pop
dec
ljmp
ljmp
inc
mov
leave
addr16
xor
imul
ret
leave
sti
inc
in
inc
imul
in
mov
ret
jl
pop
mov
outsl
out
sti
in
repz
push
dec
xor
repnz
scas
arpl
mov
clc
xchg
notl
int
ficoms
xchg
std
orb
stos
int
pop
jnp
sub
insl
fldt
sbb
scas
ficomps
enter
in
dec
int
mov
sbb
in
into
push
and
hlt
xorl
add
scas
data16
sbb
mov
push
ljmp
xchg
xor
adc
dec
dec
stos
xchg
push
pop
and
jno
shl
divb
repz
mov
mov
repnz
fstl
test
stos
sbb
push
out
jno
push
mov
mov
jo
fistpl
int3
addr16
pushf
xchg
fsubl
push
push
arpl
push
in
cmc
idivl
lcall
sbb
fiaddl
mov
sarl
in
inc
inc
stos
sub
push
and
in
mov
loopne
bound
pusha
inc
int3
out
push
arpl
dec
out
cmp
popa
popa
and
outsb
sar
sbb
jns
les
jl
out
pop
js
mov
pop
fwait
ja
inc
sarb
ja
mov
sti
out
sti
push
cmp
ja
xchg
xchg
insl
ja
jl
fistl
in
mov
loope
jp
fidivrl
sti
sti
in
jp
pop
scas
xlat
sbb
into
cwtl
inc
push
in
pushf
adc
sub
in
sbb
and
push
in
dec
iret
in
fdivrs
push
stos
cwtl
ficomps
in
in
cmp
pop
push
sbb
je
pop
into
cmpsl
in
sub
cli
ret
in
dec
ret
xor
cmp
in
push
fnclex
xor
dec
mov
in
mov
jbe
rorb
dec
cltd
adc
xor
ret
mov
xchg
in
idiv
jno
fbld
out
pop
and
fdivrs
ja
pop
cli
push
test
pop
stos
sbb
in
inc
jae
adc
aas
inc
push
push
push
in
mov
fnclex
dec
imul
pushf
loopne
cmpsl
push
insb
aad
xchg
lods
fcoml
pop
sti
les
shr
xchg
in
pop
loop
xor
or
fisubl
sahf
push
push
in
mov
bound
in
push
imul
mov
in
test
push
in
pop
scas
pop
popf
sub
mov
jnp
pop
xchg
sub
dec
xlat
pushf
push
mov
lds
mov
cmpsb
xor
call
in
lahf
hlt
divl
in
ss
jb
xlat
mov
sahf
out
enter
push
in
adc
pminub
mov
push
call
popa
add
pushl
xchg
insl
out
inc
adc
fst
sahf
jmp
add
dec
xor
test
test
jae
ja
inc
imul
mov
pop
jae
lret
mov
pop
jae
lret
mov
popf
jae
lock
iret
mov
jne
arpl
into
mov
arpl
jo
jae
lods
in
pop
inc
jae
ja
pop
fdivs
cmp
cmp
or
das
cmp
lea
lcallw
jbe
data16
pop
mov
in
jno
add
xor
dec
aaa
int
ja
ja
mov
mov
cmp
pop
mul
mov
xor
js
mov
jbe
rcrl
mov
ficoml
in
push
test
mov
jg
fs
divb
icebp
mov
lea
xor
testb
aaa
int
mov
jbe
scas
mov
andb
jae
cmpsl
scas
rcrl
ja
pop
lods
adc
mov
xor
idivb
dec
cmc
xor
dec
js
ja
cli
mov
jbe
xor
cmp
adc
adc
test
mov
scas
xchg
cmpsb
cmp
lock
jno
mov
divl
scas
aaa
popa
xchg
xchg
js
pop
mov
mov
adc
cltd
sahf
mov
xor
mov
xchg
mov
xor
cmp
xchg
xor
sbb
push
pop
cmp
dec
mov
divl
jg
aaa
mov
xor
divl
lahf
adc
cli
divl
xchg
inc
cmp
mov
xchg
mov
hlt
jbe
jg
testl
mov
jno
cs
out
in
push
sahf
bound
and
movsl
sbb
pop
shr
pushf
decb
pop
lods
sbb
push
pop
pushw
xchg
push
in
ret
pop
pusha
shr
jg
xor
pushf
lcall
notb
int
in
call
push
inc
xor
fcoml
pop
cmpsl
in
push
xor
dec
stos
fsubrl
cmpsl
in
sbb
in
sbb
in
into
dec
xlat
outsb
pop
ficompl
mov
push
adc
jns
pushl
cmp
scas
out
cmp
mov
aaa
fnstsw
xor
cmpb
lock
push
repz
in
push
mov
stos
rcrb
mov
movsl
pop
lcall
mov
mov
loop
insl
cmc
push
popf
outsl
sahf
jecxz
dec
xchg
enter
sbb
fiadds
stc
mov
sbb
negb
fidivrs
fs
into
insl
push
pop
push
pop
and
in
jae
stc
lcall
adc
jns
cmp
sub
push
stc
mov
jbe
out
mov
js
jbe
ja
mov
cmp
xor
arpl
or
jno
push
mov
mov
mov
mov
mov
fldt
push
out
test
mov
adc
mov
in
mov
mov
xor
cmp
mov
cmpsb
ja
testl
scas
negl
xchg
cmc
cmp
arpl
call
lods
loope
addb
divb
scas
mulb
ja
pop
ja
mov
scas
mov
testl
hlt
cmpsb
push
ja
push
mov
cmpsb
shrl
xor
mov
addb
aaa
loope
xchg
loop
scas
mov
mov
divl
pop
fldt
test
in
jl
sub
and
push
sbb
add
xchg
mov
jae
stos
pushf
pop
cmpsl
frstor
push
push
jne
jbe
jle
mov
test
pop
arpl
xchg
jl
ja
movsb
ljmp
stc
push
popfw
jo
dec
xchg
imul
in
test
jecxz
cmpsb
lahf
mov
pop
fwait
ds
mov
push
arpl
xchg
pop
fdivrs
adcl
mov
xchg
cli
pop
dec
testb
outsb
fsts
ja
out
jle
mov
cli
jle
imull
jle
cmp
js
fs
popl
xchg
jbe
outsl
jno
ja
mov
cmp
out
ja
mov
sub
out
pop
jg
lock
shrb
mov
pop
inc
shl
std
scas
cmp
jg
js
outsl
outsl
mov
mov
jbe
pop
jle
mov
subl
outsl
cmp
clc
mov
outsl
cli
jle
mov
in
jle
aad
mov
imull
jle
cmp
outsl
outsl
jle
js
pop
std
and
out
inc
jge
divl
out
js
divl
repz
mov
cmp
jg
mov
lret
int
inc
cmp
cmp
cmp
shr
mov
mov
out
js
mov
js
jo
xchg
idivb
jo
sar
aas
jo
inc
shlb
push
xchg
rcrl
mov
out
inc
sarb
mov
mov
mov
pop
jg
icebp
pop
mov
mov
xor
idivb
arpl
stc
xor
js
mov
mov
insl
xor
push
sbb
mov
mov
lods
xor
push
cmc
xchg
and
dec
mulb
cmc
xor
dec
negl
int
cmp
mov
js
dec
mul
outsb
in
loop
cld
xchg
cmpsb
ror
stc
lock
xchg
sbb
jg
mov
xor
scas
fwait
and
aaa
fdiv
idivl
jno
mov
js
xor
jg
shlb
fmull
divb
aaa
int
bound
shl
jl
mov
mulb
in
ror
dec
notb
divl
jg
divb
js
pop
aaa
mov
sbb
push
imul
in
ror
and
imull
divl
mov
testl
mov
testb
fs
inc
fildll
and
jl
jecxz
sbb
int
mulb
xor
idivl
testb
pop
xor
cmc
xor
dec
idivl
xchg
idivl
js
xor
outsl
mov
es
out
mov
sub
xor
testl
les
cmp
lock
jno
mov
cmp
scas
aaa
pop
js
cmp
cld
push
lahf
scas
cwtl
loopne
mov
pop
mov
adc
loop
xchg
divb
aaa
xor
and
jo
js
mov
mov
ss
idivl
mov
jo
js
xor
xchg
add
dec
cwtl
loopne
mov
mov
lea
push
add
cmp
idivb
push
stc
xor
dec
mov
ja
cmp
loop
cmp
xor
xchg
lds
xchg
scas
fwait
mov
js
les
js
xor
fwait
xor
mov
mov
xor
inc
xchg
pop
mov
pop
ja
cmp
jo
cmp
cli
jmp
mov
push
pushf
mov
inc
mov
mov
adc
push
mov
jle
mov
mov
data16
mov
jno
xchg
xor
js
scas
aaa
popa
addb
xor
divl
push
or
fimuls
mov
mov
scas
aaa
pop
testl
mov
js
pop
testl
aas
dec
or
mov
jge
mov
testb
loop
push
outsl
and
dec
aaa
mov
ja
negl
int
cmp
idiv
add
mov
insb
divb
cmp
mov
inc
cmp
inc
mov
or
pop
cmp
xor
and
jg
testl
cmp
idivb
pop
mov
shlb
mov
push
ja
or
mov
ja
or
loop
cmp
out
xchg
jl
mov
out
je
not
out
mov
and
dec
std
loop
shll
jg
mov
mov
mov
imul
rcrb
cwtl
inc
shr
mov
mov
montmul
cmpsb
add
fisttpl
or
jb
lret
jl
enter
mov
xchg
mov
subl
outsl
jno
mov
imulb
jle
mov
mov
std
pop
shr
mov
pop
out
cli
cld
int3
imul
inc
jl
inc
hlt
mov
int3
jno
lret
out
jl
mov
mov
jl
outsb
mov
testl
fwait
div
ja
pop
jl
xchg
ja
mov
fst
out
outsl
jl
shrl
scas
cmp
push
add
cmp
cmp
mov
xor
cmp
mov
mov
mov
divb
not
xor
icebp
mov
lea
xor
arpl
xor
dec
mov
js
cmpsb
ja
jecxz
scas
mov
testb
cmp
mov
mov
lods
mov
hlt
xor
idivb
dec
cmc
xor
dec
mov
jbe
shlb
notl
add
cld
lock
mov
scas
xchg
cmpsb
cli
mov
sbb
testl
xor
mulb
xor
lods
mov
js
mov
xchg
jno
mov
cmp
scas
ja
js
cmp
mov
cmp
pop
push
outsl
xchg
jbe
icebp
sub
aaa
pop
cmp
inc
cwtl
fstpt
divl
mov
dec
mulb
mov
mov
in
push
add
hlt
ja
ja
cli
shl
cmp
xor
inc
loope
inc
jns
cmp
mov
test
test
js
xor
dec
mov
shll
movsb
inc
and
xchg
clc
scas
aaa
popa
xchg
pop
dec
or
ja
mov
mov
scas
mov
divl
inc
cmp
mov
cmpb
xor
mov
or
dec
arpl
std
ss
sbb
movsb
cld
notl
cwtl
idivl
mov
aaa
dec
cmp
int
js
mov
mov
mov
cmp
lock
xor
mov
xor
mov
mov
xor
cmp
mov
xchg
testl
xor
pop
idivb
pop
cmc
xor
pop
cli
loop
clc
and
lret
jge
push
mov
shlb
xor
xchg
std
jp
popf
mov
int
mov
jbe
xor
jbe
ja
mov
dec
pop
test
and
call
fcompl
sahf
out
iret
adc
cli
mov
xor
idivb
fwait
js
hlt
xor
ja
mov
dec
cmc
xor
push
imul
loop
xchg
movsl
pushf
and
mov
ret
out
dec
and
push
and
mov
sbb
pop
aam
mov
xchg
push
popa
in
xchg
jae
lret
cmpb
jae
cmpsl
stos
pop
fsub
ja
fs
scas
movsl
pop
imul
pop
scas
pop
push
daa
pop
pop
pop
pop
lahf
sub
jae
push
pop
adc
test
mov
fidivl
sbb
and
adc
imull
sbb
testl
xchg
dec
push
push
out
sbb
push
cltd
aad
mov
xlat
cmpsb
push
in
out
ds
mov
jp
push
fldl
jb
dec
sbb
xchg
call
out
cld
jle
fs
sbb
pop
pop
inc
imulb
lock
jmp
jae
push
popf
stos
sahf
sbb
fcmovnu
scas
push
fcom
jae
inc
pop
mov
mov
push
pushf
jb
and
out
sub
stos
inc
fisubs
fldl
pop
push
pop
and
fsubp
jae
out
mov
pushf
xchg
cmp
mov
dec
pop
out
pop
push
ljmp
pop
mov
cmc
pop
test
fisttpll
ret
popf
jmp
movsb
pusha
cli
scas
test
push
outsl
fucom
jmp
in
dec
jae
shrb
pop
and
push
out
push
jae
push
sub
loopne
cld
shr
ljmp
inc
pop
sbb
pop
pop
out
fwait
xchg
mov
pop
dec
push
loopne
pop
cwtl
push
in
dec
rcrl
in
xor
in
mov
inc
in
shll
mov
stos
rcrl
pop
in
lret
out
sti
shlb
lahf
out
addr16
dec
shrl
inc
in
gs
rclb
dec
imul
adcl
xor
imul
and
pusha
popa
push
pusha
sub
mov
aad
pop
jmp
in
pop
pop
fsubr
sbb
sbb
add
cwtl
fwait
or
out
jbe
rcrb
cli
and
stos
fstpl
stos
iret
pop
mov
push
and
sbb
or
in
xchg
pop
int
mov
xchg
jne
push
repz
orl
loop
mov
adc
nop
fstpt
sbb
inc
arpl
in
cs
cltd
fwait
xlat
out
in
cli
je
pop
push
shr
and
sub
gs
shl
in
xor
xchg
lahf
movsl
add
cmp
in
sbb
fst
in
push
leave
mov
jp
sub
cmp
xchg
jne
mov
xor
dec
insb
xlat
movsb
lahf
jecxz
pop
jl
dec
jmp
mov
jne
push
mov
push
add
je
push
imul
sbb
lods
fcompl
and
xchg
movsb
jne
testl
je
ret
rcl
jno
jae
out
mov
fsub
lcall
pushf
call
js
cmp
push
test
sahf
jo
not
loopne
jno
fnstsw
xchg
mov
and
inc
jbe
jns
cmp
and
jo
adc
xorl
call
mov
js
mov
js
jl
pusha
js
shll
jl
aas
jo
jl
fsubrp
sbb
data16
js
jo
jl
idivl
cmp
jns
and
mov
dec
jmp
lds
mov
int3
mov
jg
mov
out
push
jo
jge
mov
inc
jl
dec
insb
popf
pop
push
daa
xchg
jl
cmp
dec
jl
adc
xlat
scas
popa
jbe
jbe
inc
mov
adc
jbe
adc
jge
test
dec
mov
adc
jo
inc
jb
xchg
mov
fidivrl
pushw
dec
outsl
divl
inc
loop
clc
jns
cmp
cmp
or
jbe
mov
jo
dec
and
lock
dec
pusha
mov
shll
inc
xchg
push
push
pop
pop
js
jl
shll
jl
mov
sahf
jl
neg
dec
pop
sarb
out
jnp
push
inc
sti
lock
loope
jns
idivb
mov
int3
ja
and
xchg
scas
mov
icebp
jo
adc
adc
mov
int
jo
popa
cmp
int3
cmp
fs
js
dec
cmp
iret
mov
add
lret
scas
jo
pop
fidivrs
add
push
cmp
xchg
xor
jns
inc
mov
mov
jns
sbb
push
and
push
xchg
adc
cmp
mov
cmp
pop
mov
test
mov
mov
mov
mov
divb
cmp
push
mov
dec
sbb
sbb
inc
sbb
popa
mov
dec
sbb
sbb
inc
sbb
popa
mov
dec
sbb
fwait
mov
scas
sbb
inc
mov
sbb
popa
or
dec
sbb
xchg
stc
lahf
sbb
clc
xor
cwtl
jne
fcmovnu
lock
mov
rorb
mov
xor
pop
aaa
mov
divl
jg
mov
mov
xchg
mull
ficoml
mov
adc
in
pop
test
cmp
aaa
mov
arpl
cmp
push
test
cmc
cltd
outsl
cmp
xor
negb
mov
dec
ja
in
fsts
ss
js
test
inc
je
xchg
ss
mov
mov
into
je
nop
add
xor
add
js
push
mov
js
ss
add
mov
les
cmp
cmp
push
addb
xchg
mov
aaa
sbb
nop
inc
xor
testb
mov
and
xlat
mov
mov
pop
test
push
cmp
cmp
sbb
cmp
xchg
jl
jbe
or
jl
jbe
or
jl
std
pop
or
mov
pop
jno
rcrl
jns
pop
push
xchg
jns
std
push
or
outsl
js
pop
jns
mov
test
inc
jns
mov
push
pop
jns
dec
insb
xlat
push
cmp
mov
mov
mull
mov
ss
dec
inc
xchg
inc
pop
loop
ss
neg
mov
outsb
divb
ja
push
adc
neg
xor
xor
and
cld
loope,pn
neg
icebp
sbb
pushf
in
or
xor
push
sbb
push
xchg
push
pop
and
jne
mov
and
add
cli
clc
cld
fcoml
cmp
iret
mov
icebp
cli
jg
and
aas
cmc
mov
sub
jg
cmp
mov
out
adc
mov
ds
sub
cltd
movsb
jl
fldl
mov
sbb
jg
dec
imul
sahf
jg
cmc
iret
mov
cs
xlat
sbb
loop
iret
lock
inc
out
cmp
js
cwtl
mov
fwait
mov
xchg
sbb
push
pop
push
mov
fwait
idivb
pop
mov
xchg
dec
cli
mov
or
cli
sbb
xchg
mov
orb
and
pop
jge
idivl
sti
rcrl
shll
pop
clc
push
push
or
shl
repnz
fcoml
mov
mov
mov
xlat
sbb
loop
adc
mov
inc
cmp
cmp
fs
inc
cmp
dec
xchg
mov
adc
cli
mov
aad
pop
sbb
sub
sbb
out
iret
mov
pop
je
cmp
repnz
lcall
and
xchg
push
pop
pop
adc
test
fistpl
mov
mov
hlt
ret
scas
push
push
shlb
push
in
fsub
sub
in
pop
push
xor
and
pushw
subl
fldenv
movsl
mov
xchg
outsl
scas
mov
mov
jbe
mov
mov
imulb
dec
mov
mov
or
idiv
adc
loopne
and
cmp
js
cli
lea
xor
dec
mov
jbe
xor
aaa
jno
or
ja
jl
cmp
pop
or
testl
lds
push
mov
lods
idiv
js
jo
mov
dec
hlt
xor
aaa
pop
ja
imulb
pop
test
cmpsb
inc
enter
movsl
frstor
and
dec
hlt
mov
pop
stos
adc
js
xor
divb
fdivs
or
scas
xchg
xchg
xor
or
mov
mov
mov
lock
fcmovnu
jbe
fstps
pop
idiv
cmp
adc
arpl
xor
dec
mov
pop
stos
fs
sub
mov
xor
cmp
xchg
mov
mov
test
sahf
aaa
loop
xor
pop
lods
cwtl
popf
cmp
xor
dec
js
test
add
into
jbe
aaa
scas
aaa
push
pop
fidivs
shlb
leave
mov
std
daa
push
cmc
xor
clc
lahf
clc
insb
xor
xchg
cli
cmp
idivb
and
loopne
fiaddl
shll
jno
mov
inc
adc
outsl
cmp
jl
mov
ja
addr16
push
jbe
out
cmp
js
cmpsb
xor
mov
dec
lds
dec
or
jecxz
mov
mov
stos
sahf
cld
and
jg
testb
fsubs
divl
ret
add
testl
js
cltd
sub
pop
dec
cmpb
cs
mulb
jbe
aaa
int
mul
ja
push
stc
xor
clc
add
cmp
scas
sub
out
outsl
xchg
lods
fidivrl
js
xor
mov
xchg
jo
cli
jbe
aaa
cmp
xor
negb
int
sub
cmp
lock
mov
scas
xchg
cmpsb
cli
js
xor
xchg
xor
cmpsb
int3
mov
ja
mov
divb
scas
neg
xchg
cli
sub
xor
mul
jle
aaa
int
cmp
ja
js
dec
mov
jbe
mov
mov
mov
pop
cltd
xchg
pop
neg
and
arpl
cmc
xor
fdivr
loop
cmp
xor
mov
mov
cli
mul
idiv
aas
cmp
cld
xor
dec
mov
dec
xor
scas
ja
testb
inc
mov
xchg
fwait
pop
push
repnz
mov
dec
mov
mov
push
std
pop
mov
pop
push
mov
pop
pop
push
mov
mov
jo
ss
and
and
out
fimull
xor
mov
lea
mov
adc
and
or
aaa
sahf
divb
adc
jnp
xchg
jbe
dec
dec
jo
mov
cmp
clc
xorl
cs
mov
lds
aaa
outsb
mov
test
aas
mov
lea
adc
lock
mov
scas
xchg
mov
shll
cmp
dec
mov
or
ja
xchg
test
xlat
jbe
mov
shlb
aaa
daa
dec
cmc
xor
xchg
clc
ss
mov
xor
ret
ror
testl
notb
sbb
cmp
push
mov
xor
jg
ja
mov
js
scas
negl
movsb
jmp
icebp
testl
jl
cmp
pop
mov
mov
xor
mov
faddl
jge
js
aaa
jnp
inc
sub
cmc
movsl
xchg
pop
idivb
pop
cmc
xor
xchg
mov
adc
push
clc
aaa
jg
ja
mov
mov
pop
testl
cmpsb
cltd
cmc
xchg
aam
aaa
outsb
js
cwtl
dec
aaa
testb
sahf
aaa
and
inc
cmp
mov
xor
pop
mov
je
cmp
std
sbb
inc
mov
outsl
rolb
mov
hlt
mov
mov
outsl
dec
popf
outsb
xlat
mov
sbb
push
fdivr
fildll
addr16
ret
fisubrs
jno
popf
lods
fwait
xchg
jge
jne
cld
cltd
dec
addr16
mov
pop
mov
sbb
mov
adc
std
imul
fnsave
aad
push
sbb
pop
adc
mov
mov
sbb
out
cmp
and
dec
xor
mov
jl
aam
clc
pop
sbb
call
pop
push
mov
out
out
fstpt
xchg
cmp
mov
mov
push
push
rolb
out
pop
mov
sbb
cmp
add
sbb
dec
in
dec
push
fucom
sahf
inc
in
popl
pop
pop
mov
in
dec
sahf
xchg
push
outsl
and
ds
cmp
cmp
dec
js
dec
pop
pop
and
jbe
popa
notl
int3
jo
mov
mul
jge
fstpt
fidivs
shl
cmp
fidivs
scas
aaa
popa
mov
cld
ja
ja
div
xor
mov
cmp
int
add
push
pop
xlat
rcrb
loop
jge
aas
stc
adc
outsl
mov
mov
icebp
fs
xchg
movsb
in
sahf
xor
clc
mov
pop
xor
aaa
dec
cmp
clc
scas
ja
mov
jbe
clc
jnp
add
jbe
mov
cmp
jle
mov
or
mov
push
std
cld
mov
jg
jno
mov
inc
sbb
int3
xor
imul
sti
mov
ja
mov
mov
xchg
xor
mov
mov
mov
scas
negb
pop
testl
aaa
xchg
insl
cli
cltd
popa
xchg
xchg
inc
test
pop
addr16
aad
scas
cmp
cmp
and
mov
or
aaa
std
adc
pushf
xchg
divl
in
xor
add
jle
mov
int
mov
xchg
loopne
repz
idivl
dec
divb
xor
clc
cli
loop
clc
adc
xor
notl
cli
mull
xor
idivl
ja
mov
mov
js
jbe
aaa
xor
dec
negb
movsb
out
ficomps
add
add
pop
test
cmp
aaa
cmp
xor
add
push
stos
inc
mov
daa
jns
fdivp
adc
arpl
cmc
xor
fdivr
loop
cmp
dec
mov
ja
cli
mul
mov
cmp
jl
daa
shll
xor
int
jbe
pop
test
pop
dec
aam
cmp
outsb
iret
test
outsl
sbb
xchg
mov
mov
pop
cld
gs
cmpsb
popf
and
mov
push
ja
dec
and
insl
outsl
cmp
mov
dec
popa
push
jmp
and
shrb
sar
dec
mov
in
sahf
fildll
pop
xchg
clc
dec
das
xchg
dec
div
mov
lds
mov
fstpt
push
jns
daa
in
mov
xchg
jno
or
xchg
mov
cmp
xor
dec
js
fsts
mov
xor
xor
mov
xor
xchg
pop
add
jl
sti
idivl
pop
fwait
divb
idivb
addr16
dec
cmp
xchg
push
mov
rol
jo
inc
cwtl
shll
inc
rolb
mov
out
cmp
not
out
cmp
adc
out
inc
jl
push
sbb
mov
shrb
imul
pop
jg
push
fs
pop
cmpsb
fisubl
in
js
jae
ret
std
aas
ja
mov
pushf
jbe
out
mov
jns
stos
arpl
pop
push
cmp
ja
or
out
sahf
lcall
pop
add
pop
pop
out
pop
addr16
or
fdivrs
lahf
and
sbb
aad
imul
out
ss
xchg
data16
movsl
sbbb
in
lods
fisubs
fs
and
mov
jb
pop
mov
sub
aas
jb
dec
push
cmpsl
sbb
push
insl
cltd
enter
and
and
cmp
xchg
mov
and
push
xchg
jb
stos
and
fs
cmp
sbb
in
sbb
jmp
ficoml
dec
idivl
jo
cli
imull
iret
clc
mov
divb
jp
inc
push
push
outsb
pop
fistl
rol
pop
testl
push
test
mov
mov
pop
fwait
pop
es
add
push
outsb
cmp
dec
fs
inc
cmp
adc
or
push
adc
and
ljmp
in
pop
adc
xchg
rol
cmp
adc
add
sti
in
dec
outsl
js
pop
lret
les
testb
sbb
sahf
dec
pop
dec
mov
and
int
dec
vmread
mov
addr16
js
jo,pt
inc
dec
fdivs
pop
mov
movsb
repz
dec
popf
lret
sub
out
cmp
xchg
mov
cmp
xchg
imul
cmp
std
jmp
mov
mov
mov
insl
stos
aam
aam
sbb
insl
mov
mov
insl
xchg
sub
call
or
popa
jg
pop
xchg
pop
je
int
xchg
mov
mov
scas
lahf
std
jl
ja
xchg
jl
inc
out
pop
jl
not
out
outsl
jl
cmp
jl
js
inc
jl
mov
mov
mov
and
mov
out
sahf
jl
mov
out
pop
jl
ja
out
outsl
jl
xor
jl
imul
inc
jl
cmp
js
xchg
jl
mov
mov
jl
divb
divb
sahf
jl
in
insl
pop
gs
out
jp
loope
jecxz
push
in
movlps
stos
sbb
aam
outsb
pop
mov
mov
push
ljmp
push
sbb
xchg
push
insl
mov
stc
jg
addr16
out
aad
imul
not
jno
add
cli
inc
push
and
testl
arpl
out
in
jg
mov
ja
out
sarb
mov
jne
jg
ja
shr
mov
out
outsl
jge
mov
mov
push
jge
mov
dec
jno
lods
cmp
push
inc
jl
cmp
cmp
aas
mov
cmp
movb
mov
int
outsl
inc
shl
int
adc
jg
enter
mull
sbb
outsl
push
dec
pop
outsl
arpl
inc
push
ret
insl
outsl
notl
outsl
and
dec
fs
xchg
sub
mov
jecxz
pop
mov
ja
pop
repnz
shlb
push
pop
test
jnp
sbb
data16
xlat
outsl
pushf
cltd
mov
pop
js
sbb
insl
add
jecxz
add
pop
sti
out
xchg
mov
ja
pop
adc
inc
cmpsl
jne
cmp
imul
pop
bound
cmp
js
xchg
jecxz
cmp
push
js
outsl
adc
iret
js
movsb
pop
jg
js
xor
lds
ja
dec
movsb
ret
inc
jno
push
lret
or
ss
arpl
insb
repz
popa
popf
repz
jno
lret
stc
dec
mov
repz
push
pushf
mov
repz
sub
push
xchg
repz
cmp
push
jne
mov
nop
inc
xchg
inc
mov
movsb
jno
popa
je
repz
bound
mov
fsubrl
and
xchg
hlt
fldl
push
mov
cmp
xchg
outsl
pop
js
push
call
jbe
push
add
ljmp
fiadds
out
xor
pop
xchg
ja
mov
fldt
je
pop
jl
sahf
js
pop
lock
add
cwtl
movsb
cmp
test
outsl
out
xchg
pop
insl
loope
sub
sti
out
adc
fwait
in
loop
movsb
lahf
ja
dec
pop
stos
sbb
rcr
sbb
mov
jbe
pop
call
push
int3
push
pop
fwait
outsb
std
inc
ret
jge
aas
divl
stc
xchg
idivb
jo,pt
jnp
idivb
jo
imul
push
push
mov
push
mov
mov
push
xchg
mov
mov
popf
ja
out
cmp
pop
cmp
inc
loop
iret
out
int
mov
jbe
inc
inc
and
hlt
out
sarb
inc
pop
ja
mov
in
inc
xchg
inc
out
push
je
testl
inc
int3
mov
into
jbe
out
int
fisubrs
std
aad
sbb
fmuls
pop
les
xor
adc
fabs
xchg
push
outsb
ja
sahf
enter
rcl
lret
mov
outsl
div
push
js
cmp
jb
aad
sub
notb
aam
out
dec
push
out
adc
stos
xlat
push
pop
outsb
pop
jle
mov
mov
adc
xchg
push
sbb
jg
cmp
inc
and
pop
ja
cmp
pop
mov
or
cmp
mov
xchg
jno
popa
jae
cltd
mov
add
inc
cmp
mov
xor
mov
ja
pop
testl
mov
in
cmp
xor
mov
xor
cmp
mov
js
js
xchg
xor
or
cmp
xchg
mov
jbe
movsb
out
push
mov
divb
out
fwait
mov
ja
movsb
out
sbb
mov
idivl
js
fs
pushf
cmpsl
dec
xor
jo
xchg
mov
mov
ja
inc
pop
mov
int3
cmp
sarb
xchg
inc
add
cld
out
sar
dec
lret
mov
out
mov
bound
out
push
mov
jle
sarb
out
jge
xchg
jb
sub
test
outsl
fs
js
outsl
mov
popf
jbe
outsl
mov
inc
mov
daa
stos
pop
lcall
out
push
inc
dec
pop
fstps
jmp
fsubrs
insl
stos
xor
lahf
test
inc
fisubs
faddl
int3
sahf
and
mov
pop
add
fwait
cmp
jl
out
pop
push
add
int3
pop
pop
jmp
cltd
mov
stos
pop
push
push
cwtl
loopne
in
inc
cmp
call
xchg
push
cltd
mov
repz
jbe
in
rorb
jmp
push
in
shl
or
xchg
cmc
mov
jb
clc
out
xlat
sbb
jb
testl
out
cli
dec
les
inc
fcmovne
out
dec
shll
cmp
jp
daa
out
pop
cwtl
push
ret
jno
divb
pop
push
xchg
mov
jne
pop
adc
xchg
cmp
iret
jae
inc
shll
add
js
js
out
xchg
inc
sti
mov
cwtd
movsl
aaa
mov
popf
cli
sub
push
and
ret
clc
clc
enter
out
arpl
cmp
cmp
mov
repz
pop
inc
xchg
outsb
fcmovbe
pop
sti
push
ds
scas
lret
xchg
in
mov
ja
xlat
outsl
pop
pop
push
jb
mov
ja
sahf
pop
out
mov
test
in
repnz
cmp
cmc
xchg
cli
js
idivb
frstor
cmp
cmp
sbb
stos
fnstsw
pop
adc
mov
mov
pop
sahf
sub
int3
arpl
mov
fisttpl
fdivl
popf
pop
gs
aaa
xor
sbb
fcompl
nop
jae
mov
popf
sbb
adc
xchg
sub
pop
jmp
xlat
sahf
pop
cmp
pop
push
xchg
in
scas
loope
outsl
ja
mov
jecxz
xor
aaa
mov
xor
cmp
mov
xchg
mov
pop
fadds
cmc
and
divb
adc
arpl
xor
dec
negl
int
cmp
ja
mov
not
ror
repnz
push
idiv
cmp
adc
arpl
cmp
xor
aaa
mov
in
pop
mov
and
dec
fs
inc
mov
xor
mov
mov
divb
mov
or
cmp
mov
xchg
testl
mov
xor
dec
cmpb
jbe
aaa
int
mul
ja
push
cmc
xor
int
push
in
pop
push
cltd
jg
mov
cmp
scas
negb
cmp
xchg
jbe
xor
daa
sub
mov
cltd
add
leave
dec
xor
negb
imull
cmc
xor
cltd
loop
stos
mov
pop
sbb
xor
jno
mov
or
aaa
iret
mov
jbe
aaa
scas
ja
mull
pop
mov
pop
mov
sti
js
xchg
jle
mov
divb
fldcw
jno
cmp
xchg
js
and
rcll
notb
mov
inc
adc
sbb
mov
fwait
idivl
cmp
inc
mov
inc
mov
jo
cmp
mov
jo
inc
jecxz
adc
adc
addr16
pop
jno
mov
push
movsb
out
inc
sarb
mov
fbld
xchg
std
test
bound
mov
dec
loop
or
int
hlt
mov
jg
testb
jnp
or
jge
out
pop
pop
ljmp
cli
and
negl
dec
and
jbe
adc
mov
arpl
pop
testb
inc
cmp
mov
divl
scas
mov
cmp
idiv
adc
cli
cltd
and
xor
in
dec
divl
xor
pop
aaa
mov
movsb
shll
mov
out
fmull
leavew
sbb
push
xchg
insl
stc
fidivs
idiv
imul
fcomps
jae
es
cwtl
loopne
and
idivl
mov
jbe
divb
pop
and
fwait
popf
and
cld
mov
cmp
jp
popf
jle
cmpsl
fadds
mov
xor
push
les
loop
movsl
push
in
sub
mov
mull
cmp
outsb
js
pop
test
sub
pop
ja
cmpsb
sub
cmc
xor
push
xor
aas
dec
or
test
pop
aaa
or
cmp
mov
xchg
testl
js
fidivs
adc
vpcmpeqd
test
sub
cmc
xor
cli
loop
cmp
xor
xchg
jl
lcall
inc
and
mov
dec
in
xor
div
xor
cli
loop
clc
xor
adc
cmc
cltd
dec
js
adc
arpl
daa
cld
xor
jbe
ja
cmpsb
sub
cmc
cmp
pop
pop
inc
sbb
clc
fistps
popa
sbb
out
add
pop
imul
add
icebp
cmp
cmp
in
xchg
hlt
jecxz
pop
mov
ja
push
nop
loopne
push
in
dec
addr16
fwait
mov
and
xor
ret
outsl
adc
in
pop
lcall
dec
ja
cmp
pushf
cmpsb
xchg
repz
xchg
lret
cmpsl
sbb
repz
bound
add
push
dec
outsl
mov
jle
sbb
mov
push
rcll
in
out
jns
sub
fsubp
cwtl
hlt
in
cmp
loop
in
ja
mov
ljmp
and
pop
cwtl
inc
imul
inc
push
ret
sar
out
push
jp
fldl
add
jb
cmp
cli
push
pushf
mul
jle
pop
add
repnz
aad
jle
ficomps
imull
and
ret
add
ss
adc
idiv
pop
fwait
idivl
out
in
push
jp
fsubrs
lcall
sub
mov
leave
outsl
cmp
out
sahf
rcr
fistps
in
call
mov
jae
inc
push
cmp
fisttpl
js
outsl
cli
ror
outsl
fs
mov
jle
push
xor
ljmp
fmul
add
xor
pop
mov
xor
insl
mov
fcompl
inc
in
stos
push
and
jecxz
in
lret
loope
pop
jmp
pop
pop
in
outsb
test
push
or
pop
and
in
push
pop
pop
fldt
jge
jmp
scas
pop
lahf
cmc
pop
cli
icebp
push
pushf
cltd
xchg
in
test
stos
jge
filds
xchg
sbb
cltd
adc
in
test
jp
lcall
out
dec
shrb
jae
sbb
pop
mov
fwait
jbe
pusha
jae
jmp
push
fnsave
sbb
fildll
daa
mov
push
call
lahf
lcall
es
fcoml
mov
fucomip
ret
jno
pop
cmp
mov
outsb
into
push
pop
sub
cwtl
mov
into
and
stos
dec
xlat
push
test
xchg
xchg
cmp
fs
outsl
loopne
pop
in
int3
ja
jg
mov
jno
lods
lahf
pop
sbb
ljmp
mov
fdivrp
imul
out
int3
cmp
jg
idivb
shlb
pop
test
jno
xchg
mov
aaa
sbb
rcrb
pop
shll
inc
push
fsts
sti
mov
mov
inc
pop
mov
cwtl
pop
imul
xor
sahf
je
pop
mov
sub
sbb
mov
jbe
xor
or
cmp
mov
xchg
fidivs
scas
mov
ja
cmp
jg
out
lcall
jg
jno
mov
js
scas
aaa
pop
mov
jbe
xor
or
xchg
dec
out
divb
inc
pop
push
fnstcw
and
into
out
lahf
sbb
xchg
out
mov
mov
mov
je
mov
mov
cwtl
xor
xchg
jnp
jne
cli
push
iret
hlt
mov
les
add
inc
shlb
jno
inc
mov
or
out
lret
jle
push
sub
jl
or
jbe
outsl
out
push
loop
aad
mov
adc
pop
addr16
mov
ja
mov
pop
movl
cmp
outsl
mov
outsl
js
pop
pop
sbb
repz
ret
and
mov
cmc
sbb
cmp
shll
rclb
dec
ret
shr
out
lret
sarl
lret
xchg
jae
dec
nop
mov
outsl
xchg
sarl
out
js
jbe
cmp
outsl
js
repz
aam
js
xorl
rcl
js
repnz
adc
hlt
out
loop
jecxz
lods
je
js
pop
mov
loopne
mov
ret
out
int
xor
jns
xchg
jl
pop
push
mov
ja
xchg
jns
outsl
fimuls
pop
jns
cmp
out
outsl
jns
insb
jl
fimuls
add
pusha
clc
out
aaa
jns
je
mov
push
sbb
pop
aam
or
int3
insl
cmp
shlb
pusha
scas
sbb
push
ficoms
mov
in
sbb
mov
test
scas
imul
lds
sbb
xor
sub
xor
sbb
jp
andb
cmc
dec
pop
xlat
xchg
subb
and
mov
in
and
outsb
ja
testb
sbbl
neg
mov
aaa
mov
out
js
xor
negb
xchg
divb
and
or
fcmovbe
divl
push
sub
ja
sti
mov
mulb
divl
sti
aaa
mov
xorb
sbb
cli
and
mov
adc
xor
cmp
xor
popa
lahf
ja
sub
add
adc
testl
js
xor
mov
test
dec
jbe
pop
frstor
dec
dec
cli
testb
ja
xor
mov
ja
pop
xchg
les
add
jbe
xorb
js
hlt
fnstenv
cmp
shl
xchg
int
mov
jo
fsts
idivb
movsb
add
cmp
ja
sahf
leave
popa
cwtl
and
inc
int3
idivl
pop
aas
cmp
repz
or
ret
outsl
mov
divl
jo
lds
mov
xchg
testb
cli
inc
outsl
pop
inc
shlb
outsl
outsl
jns
jge
pop
aam
pop
pmaxsw
mov
mov
fcomps
mov
mov
inc
cmc
mov
lret
loop
adc
xchg
ffreep
cmp
negb
sbb
dec
hlt
sahf
lret
ja
mov
push
popa
mov
push
ret
fdiv
out
push
sahf
ljmp
cmp
int3
mov
js
shl
int3
adc
cmc
jo
js
mov
clc
out
inc
clc
pop
or
xchg
jg
clc
movsb
lds
jbe
stc
lret
clc
ds
mov
std
lgs
clc
or
and
push
out
loopne
mov
adc
push
fsubrs
loop
aaa
repnz
xchg
das
js
je
in
pop
and
cltd
outsl
jl
lods
jecxz
jp
ja
mov
loopne
dec
movsl
stos
lcallw
dec
push
out
xchg
mov
lahf
out
xor
adc
int
inc
ja
sahf
push
jmp
rorl
cli
rorl
sbb
mov
sbb
jne
mov
jne
sti
and
lock
inc
js
add
or
jne
outsl
js
imul
cli
js
popa
push
jne
idivb
jbe
mov
js
mov
divb
scas
cmpsb
pop
push
aad
test
in
xor
mov
daa
jae
packuswb
int
dec
inc
jl
jnp
inc
pop
rcll
outsl
jne
xor
cmpsl
mov
jae
cmp
cmp
ficompl
rol
insb
dec
lret
xchg
sbb
loop
stos
movsl
pop
and
xor
clc
cld
pop
inc
shlb
nop
mov
mov
jl
sub
ret
ja
jl
out
clc
jl
data16
cwtl
movsb
pop
fdivl
mov
jp
mov
repnz
call
cmpsb
lcall
inc
mov
mov
add
les
mov
jl
dec
cltd
adc
mov
je
push
mov
sbb
jl
lods
inc
push
sbb
out
imul
lret
fnstcw
outsb
dec
pop
shlb
inc
cmc
sahf
push
in
pop
call
inc
add
cmpsl
jbe
aad
and
pusha
in
fimuls
pop
push
pop
jmp
mov
and
cld
stos
dec
sbb
jmp
cmpsb
aam
in
cmp
push
add
dec
cmc
xor
dec
cmp
int
sub
cmc
xor
das
cmp
jo
cltd
and
popf
hlt
xor
idivb
push
cmc
xor
dec
ja
ja
and
dec
mov
div
xor
adc
jo
cltd
in
xor
cltd
popa
jg
xor
daa
sub
cmc
xor
clc
mov
cltd
aas
push
clc
xor
jno
mov
cmp
scas
aaa
popa
xchg
xchg
mov
mov
neg
mov
sub
hlt
xor
mulb
cmc
xor
cwtl
ja
imull
cmc
xor
push
jno
xor
jo
mov
negb
loop
mov
in
pop
mov
cli
ja
idiv
mov
sub
cmp
scas
negb
cmp
mov
fs
xor
jbe
test
inc
pop
xor
mul
inc
pop
aaa
int
mul
ja
cmp
cmc
xor
push
jno
xor
aas
dec
or
cmp
dec
mov
or
ja
mov
or
idivl
inc
mov
pop
sbb
adc
std
inc
test
push
cltd
mov
out
popa
and
test
iret
fwait
fs
mov
call
fwait
outsb
fwait
xchg
jae
gs
push
test
inc
add
jo
gs
push
inc
jo
xlat
add
pop
stos
mov
add
or
je
mov
in
or
mov
sub
sarl
xchg
xchg
outsl
pushf
jmp
stc
popa
mull
xor
cmp
mov
xchg
fdivl
scas
mov
pop
jbe
test
cltd
je
fisubrl
jg
xchg
mov
aas
dec
ja
xor
aaa
mov
jno
add
cmp
scas
ja
mov
in
mov
mov
divl
xor
sub
lcall
jne
add
lods
pop
mull
std
rorb
cmp
xor
xchg
fadds
loop
cmp
cmp
outsl
cmp
push
test
fnstsw
jecxz
rcl
movd
fnstsw
ja
push
add
outsb
negl
int
cld
xor
js
xor
push
mov
mov
sti
mov
lods
push
mov
sub
xchg
jl
mov
js
cwtl
xchg
xchg
js
cld
mov
add
xor
sbb
aas
ja
mov
mulb
cmp
ja
divb
shlb
notl
pop
push
clc
xor
jno
mov
cmp
movsb
jno
lret
ss
aaa
popa
xchg
xor
lock
add
lock
push
mov
adc
dec
sbb
divb
jg
idiv
out
arpl
sub
add
cmp
cmc
xor
mov
hlt
xor
notl
ficoms
xor
mov
push
and
cmp
out
mov
mov
divb
xchg
xor
or
cmp
mov
xchg
push
arpl
test
call
setne
pop
daa
pop
notb
adc
in
outsl
out
sbb
lahf
xchg
out
mov
out
sbb
cmp
adcl
js
push
test
mov
adc
aaa
or
sub
mov
fsubrp
sti
addl
outsl
pop
or
jae
jle
loop
cmp
loope
jno
cli
js
jo
mov
xor
pop
sub
pop
aaa
dec
mov
testb
lcall
outsl
fisttpl
mov
mov
pop
cld
mov
outsl
repnz
pop
ja
pcmpgtb
xorb
mov
jno
cli
mul
idiv
pop
out
ss
ja
aaa
cmp
cwtl
mov
cmp
mov
in
xor
dec
negb
int
sub
cmc
xor
mov
cmp
aad
mov
cld
xor
cwtl
idivb
dec
cmc
xor
push
mov
cltd
stos
ficompl
push
mov
mov
fnstsw
xor
shr
ds
loop
mov
out
outsl
divb
mov
es
loopne
imul
sub
js
outsb
addr16
pop
sti
xor
pop
mov
cmp
mov
push
rorb
xchg
jl
popf
pop
push
in
mov
or
mov
dec
mulb
outsl
xor
dec
out
ficomps
fdivr
pusha
lcall
pop
ja
mov
mov
mov
aam
cltd
pushf
ficompl
in
cmp
stos
es
pusha
inc
mov
or
mov
sub
insb
xor
mov
sbb
divb
mov
or
xchg
xchg
jl
ja
xor
push
loop
aam
pop
fidivl
movsl
cltd
dec
in
int3
cmp
jg
ja
js
mov
pop
push
fstpt
cltd
incb
jg
testl
sahf
loop
and
into
imul
xor
push
popf
lods
cwtl
call
push
aam
out
std
inc
mov
test
cmp
shlb
mov
movsb
rol
in
jle
lret
xorb
js
jge
stos
pop
sbb
pop
pushf
cltd
xorb
bound
mov
dec
xor
ficoml
mov
and
adc
loop
mov
aaa
frstor
cmp
mov
out
popf
cmpsl
mov
frstor
xor
fidivrs
shlb
jmp
mov
xor
aad
in
inc
jecxz
xchg
xor
mov
js
cmp
mov
js
ja
xchg
xor
or
cmp
cmp
push
rclb
sub
ja
xchg
fstpt
mul
inc
pop
aaa
int
cmp
ja
js
dec
mov
mov
mov
jne
pusha
inc
mov
pop
testb
inc
mov
ja
scas
ja
addb
neg
es
jne
cltd
mov
xor
dec
mov
mov
xor
scas
ja
testb
inc
mov
inc
int3
jno
sbb
xor
pop
mov
cmp
scas
aaa
pop
js
cmp
mov
js
cmp
xor
inc
int3
jno
cltd
mov
push
add
cli
loop
mov
arpl
mov
dec
cmc
xor
push
jno
xor
inc
adc
jl
cltd
fiadds
inc
jl
cltd
mov
cltd
inc
roll
mov
cltd
inc
cmp
in
or
adc
inc
enter
inc
loopne
arpl
sbb
add
mov
sbb
push
adc
not
jnp
outsl
mov
jge
outsl
xor
bound
inc
sub
out
cmp
punpckhwd
push
test
sar
ja
cmp
into
loop
inc
mov
mov
push
je
mov
mov
xchg
sbb
out
cld
mov
aam
push
pop
test
fs
ficomps
fs
fiadds
push
push
fsubs
pop
pop
pop
xchg
jo
or
xchg
jns
adc
pop
jns
mov
cmp
push
jmp
xor
cmp
les
jecxz
jo
and
cmp
dec
popa
xchg
call
pop
push
push
mov
in
pop
cli
out
iret
loop
dec
movsl
sbb
fldcw
les
test
enter
out
mov
cli
out
call
outsl
push
and
cmp
mov
add
ss
and
inc
shll
dec
fucom
jno
out
ficomps
icebp
out
adc
in
inc
lcall
mov
xor
mulb
stc
xor
dec
js
ja
cmp
jbe
pop
testl
xor
negb
loop
mov
in
pop
mov
cli
cmp
idiv
mov
mov
dec
mov
jbe
divb
popa
xchg
xchg
fidivs
scas
mov
ja
cmp
add
mov
cld
xor
dec
cmp
int
js
aaa
mov
popa
dec
jbe
push
mov
daa
sub
inc
testb
aas
dec
ja
scas
negb
cmp
pop
mov
cmp
scas
mov
js
cmp
add
cmp
pop
idivb
pop
cmc
xor
pop
cli
loop
cmp
xor
clc
sbb
fwait
js
icebp
jo
cmp
jne
cmp
mov
js
cmc
mov
sbb
cwtl
mov
lret
arpl
js
icebp
addr16
mov
xchg
cli
js
xchg
xor
pop
or
test
xor
ja
mov
mov
and
push
mov
or
lods
in
mov
jno
mov
or
cmp
mov
xchg
js
pop
mov
jo
dec
cmpsb
arpl
clc
jl
jmp
testl
or
cmpsb
pop
divl
cmp
mov
xchg
mov
xor
cmp
mov
xchg
mov
ret
cli
cmpsb
jecxz
mov
std
mov
addb
aaa
loope
xchg
loop
scas
mov
mov
divl
out
xor
mov
xchg
jno
mov
divb
xor
mov
scas
mull
inc
ret
cmc
cltd
outsl
divb
xchg
fstpt
in
pop
aaa
int
cmp
ja
js
dec
mov
mov
adc
pop
jge
sub
jo
int
negb
shr
push
mov
sbb
ja
divb
or
lcall
jo
mov
fidivl
pop
mov
mov
scas
scas
negb
pop
cmp
dec
pop
mov
pop
fucomip
sti
mov
jbe
or
testb
loopne
push
lret
mov
enter
ss
cli
cltd
push
pop
aas
xor
es
test
cs
aaa
outsb
push
dec
mov
outsb
push
in
jmp
push
lock
lods
dec
mov
cmp
pop
testb
inc
cmp
mov
xchg
fidivs
scas
mov
ja
cmp
cld
inc
lock
cltd
mov
insl
fnstsw
mov
out
mov
mov
int3
js
xor
aaa
mov
xor
divl
pop
js
mov
adc
in
pop
test
cmp
aaa
cmp
xor
mov
jbe
shl
clc
aas
jo
cltd
inc
mov
mov
mov
divb
mov
mov
scas
ja
mov
mov
inc
adc
cli
cltd
sub
xor
insl
ja
jbe
pop
testb
inc
cmp
mov
xchg
fidivs
scas
mov
xchg
xchg
mov
push
xchg
idivl
mov
xchg
mov
xor
cmp
inc
mov
or
test
jecxz
mov
std
mov
cmp
divb
mov
divb
xor
divl
cltd
int
dec
xor
testb
aaa
int
sub
cmc
xor
int
jno
lcall
xor
mov
addb
aaa
loope
xchg
loop
scas
mov
mov
divl
pop
cmp
js
cmp
mov
cmp
scas
ja
addb
testl
ljmp
inc
cmp
pop
mov
cmp
scas
ja
js
cmp
mov
mov
out
arpl
cltd
push
mov
xor
mul
dec
pop
aaa
int
sub
pop
mov
and
dec
mull
mov
xor
dec
mov
jbe
xor
jbe
ja
cli
mul
mov
push
cmc
xor
push
std
out
cltd
mov
jg
mov
xor
cmp
mov
xchg
mov
cmp
xor
pushf
cltd
xchg
cmp
cld
xor
fdivr
loop
cmp
xor
dec
mov
ja
and
dec
mov
jbe
test
sar
xor
fidivrl
xor
aaa
jno
mov
or
mov
mov
inc
int3
jno
cltd
and
hlt
xor
idivb
dec
cmc
xor
dec
mov
jbe
shlb
notl
jle
sbb
cltd
cmp
cld
xor
mov
xor
cmp
pop
mov
cmp
scas
mov
js
cmp
jl
push
xor
xchg
xor
mov
addb
aaa
loope
xchg
loop
scas
mov
mov
divl
pop
cmp
js
cmp
mov
cmp
ja
pop
cmc
xor
cltd
fildl
call
xor
xchg
es
adc
es
adc
aas
jl
outsl
push
movsb
jne
outsl
cmp
mov
xor
dec
mov
jbe
pop
aaa
or
cmp
mov
xchg
neg
mov
in
cltd
loopne
scas
xor
pop
mov
cmp
scas
aaa
pop
js
cmp
mov
js
cmp
xor
xchg
cmp
cld
xor
fdivr
loop
mov
outsb
pop
test
in
pop
ja
in
sbb
movzwl
mov
pop
xchg
xchg
orb
sub
cmp
and
lods
xchg
mov
dec
incb
adc
hlt
xor
mulb
cmc
xor
pop
ja
mov
mov
fbld
mov
int
sub
cmc
xor
cwtl
cli
loop
cmp
xor
int
dec
fs
shll
xor
pop
pop
jbe
loop
cmp
xor
dec
negb
int
sub
cmc
xor
push
in
das
mulb
push
aam
popf
push
jo
sbb
push
out
adc
and
rcr
dec
shlb
stos
pop
pop
mov
mov
push
pop
imul
sub
fbld
sbb
or
xor
mov
pusha
push
in
shll
nop
inc
shll
imul
push
fwait
adc
sbb
out
pop
aam
fcoml
fistps
cmpsl
out
in
sub
pop
push
jno
sbb
es
adc
inc
repnz
js
mov
xlat
repnz
shrb
fcompl
pop
push
push
pop
sub
loopne
outsl
addl
out
push
push
pop
cwtl
fsubp
push
pop
sbb
in
jp
mov
lahf
lock
das
ljmp
push
xchg
stos
pop
push
sub
dec
push
sbb
xchg
in
jp
pop
stc
xchg
pop
fucomip
rcrb
lahf
jmp
sbb
sahf
xchg
in
mov
and
and
sub
int3
pop
push
fdivrp
movsl
in
jp
cltd
adc
ljmp
ljmp
dec
sahf
outsl
popf
jmp
push
inc
and
sbb
pushf
sub
repz
scas
ja
loope
push
in
push
mov
lea
cmp
mov
push
add
mov
ja
sbb
fsubrp
push
leave
lds
test
mov
fsubp
mov
and
mov
mov
push
je
xchg
je
sar
inc
mov
in
cltd
xchg
push
xor
push
out
inc
pop
test
jo
pop
dec
aad
jo
pop
push
push
xor
sbb
clc
jo
pop
mov
pop
dec
pop
lret
outsl
lea
outsl
sahf
pop
testb
loope
or
mov
adc
sarl
sub
mov
lahf
cmp
mov
adc
cmp
mov
adc
cmp
mov
xchg
out
movsl
mov
cmp
js
sub
jl
sub
jbe
jo
pop
or
cwtl
pop
pop
push
mov
mov
in
mov
fildl
fisttpl
push
int3
cmp
popa
and
adc
mov
jnp
dec
testb
scas
outsl
aaa
jo
mov
ja
testb
mov
loop
push
cmp
call
jo
dec
pop
xchg
jo
dec
mov
fbld
add
mov
lods
dec
lds
fsubrs
cmp
fbld
xchg
jo
stc
dec
dec
pushl
and
mov
sub
mov
mov
js
xchg
jo
aaa
pop
mov
ja
testb
mov
or
adc
mov
sub
mov
adc
cmp
popf
mov
sub
aam
xor
mov
mov
jno
push
mov
imulb
jb
mov
mov
dec
xor
fldl
hlt
jo
testb
sbb
fsub
dec
loope
mov
incb
cmp
mov
arpl
div
cmp
inc
or
mov
ja
imul
pop
or
cmp
cmp
or
push
ja
test
sbbl
sbbl
sbb
mov
in
add
clc
outsl
shlb
mov
outsl
mov
divb
outsl
or
cmp
sub
out
mov
int3
negb
cli
xchg
and
test
cli
int3
negb
jbe
sahf
pop
mov
cli
outsl
add
jl
gs
ja
test
mov
fnstcw
or
sbb
cmp
mov
es
pop
mov
jbe
cli
int3
ja
loopne
fdivl
cli
int3
ja
fimuls
pushl
dec
cli
adc
popf
fimuls
xorb
cltd
pop
lea
cmpsb
xchg
mov
cmp
outsl
sahf
or
mov
mov
xchg
outsl
mov
mov
gs
div
sub
mov
es
popa
andb
js
dec
cli
pushl
mov
dec
cli
pushl
hlt
pop
fimuls
mov
push
push
hlt
fdivr
add
cld
outsb
in
add
ja
outsl
cmp
mov
fs
fldl
push
ret
iret
outsl
dec
inc
mov
cmp
jbe
addr16
mov
cmp
mov
in
mov
fdivl
cmp
cli
mov
cli
int3
cmp
dec
cli
cmp
pop
hlt
xchg
cli
int3
cmp
int3
jbe
outsl
cmp
mov
arpl
div
cmp
inc
or
mov
ja
imul
pop
or
cmp
cmp
or
cli
and
pushf
cmp
xor
rcrb
fimuls
mov
mov
and
pop
outsb
jnp
mov
cli
mov
or
cmp
aaa
mov
mov
fcmovne
outsl
dec
inc
xchg
inc
jecxz
outsl
sbb
mov
cmp
div
cmp
inc
or
cmp
ja
cli
movsl
hlt
xor
xor
mov
shlb
mov
cwtl
sti
mov
loope
hlt
fdivr
aas
xchg
xchg
cli
jge
testb
inc
or
cmp
ja
mov
arpl
js
imul
js
fnstcw
or
sti
outsb
divb
je
notb
notb
sbb
pop
xchg
je
notb
notb
idivb
outsb
pop
cli
xchg
idivb
outsl
mov
mov
jbe
pop
ja
mov
mov
cmp
and
fdivrs
pop
cmp
jns
int
mov
adc
clc
pushf
loopne
fcoml
cld
cli
pop
xchg
sbb
test
cli
or
ret
inc
ret
pusha
pop
ja
jne
test
mov
push
movsb
outsl
push
xchg
pop
cmp
mov
js
outsl
or
mov
mov
mov
mov
sbb
mul
cli
mov
fdivl
mov
cli
mov
cli
int3
mov
fimuls
pushl
xchg
cmc
addr16
outsl
sbb
test
pop
dec
add
jbe
test
lock
mov
shlb
push
inc
mov
xchg
stos
mov
push
pop
leave
aas
mov
push
add
cmp
std
scas
sti
leave
adc
mov
xchg
or
and
hlt
and
cmp
div
mov
movsb
lock
sti
ja
add
dec
clc
sbb
xchg
sbb
jb
push
pop
inc
cmp
outsl
adc
mov
fwait
js
jne
ja
cmp
mov
cmp
cmp
add
sub
cmpsl
je
js
pushf
adc
mov
je
js
sbb
pop
xchg
mov
fistl
xchg
cli
js
xor
jl
iret
cli
loop
xchg
outsl
mov
pop
mov
aaa
xchg
mov
jo
cmp
js
sbb
jle
cmp
adc
js
mov
mov
jmp
fstpt
mov
lock
fisttpl
fstpl
in
pop
push
outsb
cli
mov
sbb
mov
icebp
cmp
mov
arpl
jl
mov
ja
mov
pop
mov
imul
pop
or
mov
cli
cmpsb
add
cli
aas
cltd
test
pop
cld
cli
mov
cli
into
pop
in
andb
mov
cli
fwait
div
mov
out
push
mov
outsl
adc
cmp
jg
idivl
cmp
pop
js
dec
out
mov
push
and
xchg
sbb
pop
dec
cli
adc
popf
fimuls
pushl
mov
sub
divb
mov
out
mov
dec
int
mull
xor
js
pop
arpl
fdiv
xchg
cli
scas
mov
push
fdivl
mov
xchg
je
mov
pop
mov
mov
cli
or
nop
fildl
clc
outsb
in
inc
mov
xchg
outsl
adc
outsl
mov
testl
arpl
mov
jmp
js
mov
mov
cli
xor
arpl
test
cli
xor
aas
popl
popf
mov
mov
push
out
cli
arpl
outsl
mov
pop
mov
mov
idivl
xchg
outsl
adc
js
idivl
js
fstps
mov
mov
cli
scas
js
push
fdivrl
xchg
cli
scas
js
xchg
je
js
pop
mov
mov
cli
xor
add
mov
mov
pop
mov
aaa
jno
or
ja
mov
mov
ja
cmp
mov
cmpsb
pop
testl
xchg
cli
mov
fsubl
push
hlt
mov
aaa
mov
fdivr
dec
mov
fstpl
rorb
je
enter
mov
jo
js
outsl
adc
testl
popa
xchg
cmpsb
pop
testb
mov
movsl
hlt
xor
cli
ds
sbb
push
pop
xchg
cli
jns
popf
dec
cli
xchg
divb
ss
push
mov
shlb
mov
enter
mov
shlb
mov
enter
mov
pop
out
shl
pop
and
adc
mov
mov
xchg
push
adc
dec
dec
popa
imul
scas
out
cmp
ja
cmpsb
xor
dec
rcr
test
jo
dec
mov
int3
js
loopne
dec
mov
xor
sub
adc
xor
pop
cmp
aaa
es
out
cmp
mov
cmc
aad
jo
outsb
testl
js
sti
dec
mov
outsl
push
xchg
dec
mov
mov
test
fdivrs
pop
js
ja
mov
rcl
mov
pushf
int
sti
mov
je
mov
sbb
rcrb
shl
push
popf
nop
sarb
xlat
adc
dec
leave
mov
imulb
jnp
ja
cmp
xor
scas
arpl
mov
pushf
mov
sbb
scas
jmp
leave
aas
jbe
dec
aaa
es
ja
div
xor
lods
lcall
ja
scas
or
sti
mov
leave
int3
imull
mov
adc
mov
xor
dec
dec
pushf
sbb
call
ja
jbe
xchg
test
mov
add
test
xor
mov
shr
js
lcall
or
pop
adc
insb
mov
push
sti
outsb
mov
inc
push
sahf
mov
pop
outsb
jnp
push
mov
mov
sub
mov
out
push
jne
mov
cmp
jge
cs
pop
inc
mov
pop
out
xchg
cs
fnsave
push
js
jo
aam
mov
jge
cmp
aad
pop
mov
mull
and
dec
mov
jo
dec
roll
mov
fs
rol
icebp
jo
dec
js
jo
dec
and
jo
jno
dec
data16
movsb
add
or
outsl
mov
pushf
jbe
jo
dec
popa
dec
mov
addr16
xchg
imul
add
cld
jo
out
dec
rorb
in
jecxz
in
jl
pop
out
xchg
cmp
cwtl
pop
jo
push
loop
shll
push
outsl
mov
js
jbe
pop
push
xchg
js
jo,pt
push
fdivrl
bound
out
aas
call
jo
jne
js
ja
pop
dec
xchg
js
jo,pt
dec
int3
divl
jno
and
jo
dec
push
orb
pop
and
mov
mov
dec
xchg
mov
dec
fnstsw
dec
mov
dec
pop
mov
push
je
mov
out
xchg
jnp
divl
adc
out
cs
outsl
js
push
mov
fcmovne
out
dec
cli
arpl
sub
dec
cli
adc
mov
adc
mov
ss
inc
cli
incb
cli
ja
pop
cli
shlb
out
imull
and
pop
cmc
adc
jo
outsl
jbe
bound
fcoml
and
shrl
mov
aam
inc
dec
xlat
jp
jo
adcb
jo
and
imul
mov
test
aam
test
or
jo
outsl
cmpb
jo
adcb
adcl
mov
out
cltd
adc
pop
inc
sbb
divb
jo
subb
jo
pop
xor
mov
out
divb
subb
addr16
mov
jo
cmpb
push
ss
fst
jo
jbe
mov
divb
mov
and
mov
enter
into
sbb
inc
and
sub
je
ja
jo
cmpb
xor
mov
std
inc
jo
mov
stos
out
push
in
push
and
jge
mov
enter
mov
jo
orb
jns
sti
ja
aam
xor
addb
mov
jo
xorb
jl
mov
pop
divl
imul
repnz
jo
divl
inc
mov
in
xor
mov
clc
aam
xor
xor
mov
in
xor
xor
mov
mov
jb
mov
and
divb
pop
xor
idivb
xor
push
pop
sbb
add
dec
cmp
je
dec
mov
mov
sarb
rol
out
out
adcb
std
fucom
mov
pop
mov
xlat
frstor
sub
outsl
std
mov
lock
dec
mov
mov
fisubl
outsl
push
xchg
xchg
xor
xchg
dec
ja
gs
notl
jbe
xor
mov
jbe
cs
jbe
shrl
ja
mov
mov
mov
jbe
sub
pop
roll
jecxz
je
pushf
inc
in
je
inc
cmc
iret
in
push
inc
mov
xchg
pop
pop
mov
test
jo
cmp
pop
aaa
arpl
dec
ja
cmpsb
xor
mov
cmp
mull
scas
out
aaa
fdivs
repnz
mov
inc
mov
lds
ret
dec
out
mov
out
lds
int
cld
xchg
ret
xor
xchg
inc
imul
cltd
sbb
push
pop
fcmove
cli
add
sbb
and
leave
sti
push
xchg
cli
subl
hlt
push
sbb
jbe
inc
cli
lds
or
cwtl
mov
shl
cli
fidivl
movsb
add
cli
mov
xchg
and
adc
lret
dec
aad
push
sahf
jne
int3
divl
aaa
cli
push
ja
test
mov
cli
jo
cli
lahf
in
cmp
and
mov
pop
aad
cli
mov
cli
cld
dec
rcr
xchg
lods
sbb
pop
add
mov
mov
add
xchg
jb
xchg
pop
daa
out
mov
fwait
xchg
push
cmc
push
in
js
mov
jb
fwait
sbb
out
mov
sbb
jmp
adc
jle
out
lahf
jbe
and
xchg
inc
lahf
fbstp
mov
lock
push
jmp
push
sbb
push
out
pop
loop
sbb
stos
je
aad
cmc
sbb
lock
stos
gs
lcall
stos
gs
pop
mov
in
out
mov
mov
xchg
sbb
sarl
inc
pop
pop
sbb
sbb
xlat
push
lock
push
xchg
and
or
jb
push
mov
aad
or
jbe
lock
pop
repz
push
shll
xchg
arpl
xlat
cltd
jae
pusha
pop
jmp
out
ja
push
pop
xchg
shlb
cmp
pop
aaa
mov
lds
mov
lret
fmulp
enter
dec
rcr
or
data16
jecxz
jne
xchg
push
stos
in
and
rol
out
dec
sbb
adc
push
out
jb
lods
pop
out
xchg
je
ret
stos
fsts
adc
pop
in
jnp
cmp
ffreep
sti
jo
ret
int
popf
cmpsl
jl
jg
or
push
pop
jb
fwait
and
ja
pusha
cld
dec
inc
test
mov
lret
push
sbb
divl
out
ja
adc
pop
lock
inc
testl
ja
pop
or
mov
push
in
pop
fldt
aad
cltd
mov
mov
mov
aad
mov
movsb
jno
cmp
dec
ja
mov
scas
mov
clc
add
gs
int
and
stos
xor
popa
mov
xchg
cmpsl
std
add
mov
dec
movsb
dec
popa
outsl
ret
js
sub
sahf
pop
mov
mov
xchg
mov
movsb
mov
or
mov
movsb
mov
test
mov
clc
add
gs
int
mov
notl
mov
movsb
mov
scas
sbb
mov
clc
add
movsl
je
jbe
ss
movsb
mov
mov
in
mov
lds
je
int
mov
ja
inc
add
gs
lret
adc
cmp
inc
mov
adc
cmp
xchg
lods
mov
mov
test
testl
cwtl
cmp
mov
shlb
rorb
dec
rcr
add
jl
sarb
sbb
cmp
jae
jns
add
mov
mov
adc
sbb
sub
test
in
pop
mov
movsb
or
stos
mov
clc
add
arpl
imul
out
pop
je
cwtl
mov
out
jo
cltd
adc
sti
testl
xor
cltd
cwtl
sbb
pop
je
mov
in
divl
jbe
divl
in
div
vorps
inc
neg
push
out
int
mov
mov
out
pop
inc
in
lcall
cmp
pop
inc
in
out
arpl
inc
mov
xor
jbe
pusha
imul
shlb
fidivrl
notb
dec
roll
jo
inc
cwtl
cmp
sbb
shlb
aas
imul
mov
popa
test
pop
inc
in
je
mov
mov
mov
aaa
jle
idivb
push
xor
inc
adc
xor
aas
out
mov
fdivl
divl
inc
cltd
dec
outsl
cwtl
push
jo
inc
and
jo
shll
mov
cld
pop
sub
repnz
mov
pop
push
fcmovbe
adc
testb
jne
int
push
and
in
dec
inc
sahf
aam
cmp
sbb
call
mov
mov
sbb
fnstsw
cltd
mov
and
mov
pop
and
aam
jno
jbe
adc
ret
jne
jne
lret
sahf
fimuls
cmp
stos
pop
and
pop
in
jne
arpl
push
out
ljmp
fstps
sahf
dec
cmc
push
adc
popf
pop
pop
and
cmp
stos
fsub
popf
cmpsl
js
cmp
insb
pop
cltd
pop
sbb
push
pushf
cltd
lahf
push
mov
pop
sbb
or
sub
mov
lret
and
clc
adc
dec
mov
bound
aam
aam
lock
mov
inc
xchg
xchg
jns
mov
mov
loope
test
stos
dec
pusha
fsub
cltd
xchg
pop
push
jmp
out
inc
dec
fsub
lahf
arpl
fbld
pop
xchg
jns
pushf
outsl
push
jo
ja
loopne
lock
ficoml
bound
pushf
mov
js
jb
jo
jmp
divb
rcrb
aaa
xchg
test
lock
dec
sti
cmp
cli
jbe
ret
mov
test
sahf
lock
jae
decl
jl
dec
xchg
mov
fmull
idiv
dec
lock
cmp
add
int3
push
decl
mov
ja
cld
push
sahf
lock
push
jmp
arpl
cwtl
movsl
or
push
mov
repz
out
test
xor
aaa
mov
sbb
cmp
int
xor
testl
js
mov
mov
add
xor
dec
mul
mov
icebp
xor
cmp
loop
stc
xlat
inc
movsb
hlt
outsl
fcompl
pop
and
push
icebp
sarl
call
ljmp
addr16
cmpsb
sbb
shlb
lock
out
push
mov
pop
mov
cmpsb
mov
cmp
jl
arpl
mov
daa
cmp
mov
mov
jp
sbb
xchg
mov
hlt
inc
outsl
pop
push
test
inc
nop
jbe
xor
testb
dec
ja
cmp
pop
mov
xchg
ret
lret
outsl
jecxz
lea
jo
testb
test
mov
stc
cmp
dec
push
mov
pop
push
lds
outsl
pop
cmp
jo
negb
clc
push
divl
ja
mov
push
pushf
dec
mov
les
fldenv
aad
xchg
outsl
jl
jl
jg
mov
xchg
in
jno
mulb
xor
pop
ja
push
xor
and
popf
loope
imul
jge
jo
test
jno
mul
inc
pop
aaa
int
mov
jbe
jno
mov
mov
inc
mov
loopne
jmp
lock
dec
cltd
sub
icebp
out
mov
arpl
cmp
ja
cmp
mov
push
push
leave
cmp
outsl
xchg
jno
ja
jbe
jne
ja
cmp
outsb
gs
int
in
pop
ja
outsb
gs
cmpsb
xor
xchg
leave
xchg
jne
outsl
lock
clc
icebp
sarl
mov
jbe
icebp
arpl
mov
mov
mov
mov
jo
lock
ja
mov
push
mov
icebp
mov
jno
or
aaa
or
ja
or
fcmovnu
idivl
jo
push
mov
stos
sbb
push
xchg
sarl
out
add
xor
xlat
jnp
mov
xchg
fdivl
int
cltd
mov
loope
ja
pushf
sbb
push
stc
test
in
dec
loopne
mov
adc
in
push
push
cmp
cltd
arpl
pop
mov
mov
jmp
xlat
sbb
pop
cmpsb
sti
in
push
xchg
mov
lods
sahf
xchg
jp
fildll
hlt
sbb
mov
out
xor
testb
cmp
mov
xorb
mov
test
outsl
out
mov
and
cld
jbe
test
jno
mov
imulb
imul
fcom
orl
xor
neg
lock
mov
xorb
fsubrl
shl
mov
pushf
adc
scas
ror
push
jl
mov
jo
cli
notb
push
hlt
dec
js
jno
testb
aaa
int
mov
ja
imull
repz
in
pop
xlat
push
cmpsb
js
in
jo
mov
jbe
jno
testb
sarl
testb
mov
push
stc
jae
inc
call
jo
notl
jno
divb
mov
or
int
mov
jbe
xorb
pushf
pop
fisubrs
pop
nop
call
xchg
ret
f2xm1
cmp
mov
xorb
testl
js
pop
iret
pop
popf
mov
movsl
jg
jo
xchg
jbe
out
push
and
jno
mul
mov
aaa
mov
xor
mov
loop
loope
push
fwait
mull
ret
dec
cmp
or
outsl
js
push
test
sub
jbe
jno
ja
mov
mov
inc
mulb
jne
ja
movl
mov
ja
jno
cmp
mov
mov
jno
mov
js
mov
out
shl
mov
inc
call
addr16
mov
div
out
cmp
xor
dec
ja
ja
and
pop
mov
notl
insb
dec
push
loop
es
jnp
ss
push
movsb
icebp
enter
jbe
icebp
arpl
mov
mov
test
mov
bound
mov
inc
divl
dec
fs
pop
testl
int
js
ja
push
cmp
out
cmp
jae
aam
cmp
dec
idiv
mov
cmp
mov
mov
mov
test
imulb
cmp
fs
push
xor
jbe
jno
testb
aaa
int
mul
ja
push
xor
push
jge
lock
mov
cmp
jno
mul
jbe
aaa
int
sub
jbe
push
mov
cmp
push
out
cld
test
out
fdivrp
mov
cwtl
xor
mov
mov
pop
idiv
cmp
mov
xorb
outsl
dec
dec
cli
loopne
out
or
and
out
sti
aam
lock
mov
loope
xorb
loop
mov
mov
mov
loop
lret
jl
aas
ja
out
pop
cmp
lock
mov
mov
lock
jo
cmp
mov
push
dec
int
cmp
jo
scas
xchg
push
jno
cmp
mov
mov
jno
mov
js
mov
xor
mulb
out
sti
jo
mov
out
pop
xchg
xchg
jno
test
xor
ja
mov
arpl
fdivr
inc
cmp
jo
mov
mov
fnsave
inc
jno
aaa
int
mov
ja
imulb
fdivr
cmp
mov
imull
out
cmp
pop
xchg
aaa
testl
cmp
int
js
ja
mov
jmp
jp
dec
in
adc
sti
out
xor
fs
shlb
f2xm1
cmp
inc
mov
mov
mov
idiv
cmp
mov
dec
testb
out
mov
mov
lock
mov
arpl
xor
xchg
jo
mov
xchg
cwtl
inc
das
popf
sbb
pop
pushf
mov
ja
jo
aaa
decl
mov
testb
sarl
testl
push
pop
sub
ficompl
sarb
mull
notl
dec
cmp
dec
or
ja
dec
cmp
dec
adc
dec
pop
pop
and
jo
outsl
lock
cmp
fstpt
icebp
arpl
mov
cmp
mov
mov
not
jnp
in
inc
out
jae
jg
lock
cli
addr16
cmp
mov
out
mov
in
gs
cmp
mov
mov
js
clc
pop
jno
dec
cmp
pop
fwait
js
cmp
testb
aaa
int
cs
ja
mov
xor
in
pop
jl
cwtl
in
jno
or
pop
xchg
fnstsw
int
cs
ja
idivb
xor
pop
jl
je
xor
mov
sub
jno
test
cmp
aaa
mov
in
cltd
mov
hlt
dec
fists
inc
sti
rolb
mov
dec
jns
gs
in
pop
aaa
arpl
mull
int
cmp
push
mov
bnd
ret
xor
icebp
mov
mov
mov
aaa
popa
xchg
mov
inc
pop
fstpl
loope
cmp
cwtl
in
inc
xchg
xchg
pop
mov
mov
pop
fsubr
cmp
neg
push
lock
aaa
arpl
jle
imull
cld
jno
outsl
js
loopne
stos
and
and
jl
cmp
loope
lret
cltd
and
outsb
or
pop
push
mov
icebp
out
inc
push
xchg
leave
ret
f2xm1
cmp
mov
xorb
fldt
cmp
mov
aam
outsl
ret
xchg
ficompl
cmc
mov
mov
sub
jno
idivb
in
pop
ja
cli
mov
mov
idivl
js
out
out
dec
mov
xor
and
clc
lock
jno
mov
or
mov
jmp
aas
imul
out
sbb
outsl
pop
fidivs
lods
bound
imul
call
mov
arpl
jo
aaa
push
sbb
inc
out
out
mov
mov
idivl
dec
inc
cmp
movsb
xor
js
mov
mov
add
xor
popa
test
mov
idivb
dec
push
cmp
mov
loop
ljmp
mov
pop
sbb
idiv
pop
adc
loope
dec
pop
fs
frstors
lcall
fwait
pop
scas
and
pusha
xor
pop
daa
pop
fxtract
push
shr
pop
shrb
pop
fisubrl
lods
outsl
fdivl
divb
idivl
sahf
dec
cmp
cmp
xor
scas
sarb
mov
lock
neg
xchg
xlat
cmp
pop
aas
aaa
outsl
dec
neg
mov
aaa
aaa
dec
test
lock
enter
pusha
int3
ficompl
jge
and
lahf
test
into
outsb
sub
xchg
outsl
pop
testl
cmp
pop
aaa
arpl
js
mov
sahf
xchg
in
sbb
movsb
int3
and
cmp
pop
rclb
js
dec
lock
in
pop
aaa
arpl
xor
push
mov
dec
out
push
lods
xlat
push
pushf
mov
inc
aam
out
mov
push
mov
cmp
xor
pop
cli
ja
pop
xor
dec
fstps
push
ffree
lret
inc
pop
out
mov
int3
js
test
mov
scas
adc
jno
cwtl
and
pop
ja
mov
xor
adc
inc
jae
push
je
out
xchg
xor
mov
mov
divb
pop
cmp
cmp
mov
xorb
iret
xorb
std
jbe
sub
jno
idivb
in
pop
ja
cli
mov
mov
dec
sbb
cmp
clc
mov
js
in
pop
mov
jno
cmp
clc
jno
cmp
mov
mov
mov
mov
div
jl
outsl
jo
mov
jne
mulb
arpl
xor
dec
js
ja
cli
mov
push
mov
fs
addr16
testl
jl
aaa
jno
push
mov
adc
cmp
js
clc
sti
out
xor
jmp
pop
mulb
xor
push
ja
cli
aaa
mov
push
sbb
mov
out
je
jno
add
lock
mulb
xor
xchg
jno
mov
add
xor
jno
mov
div
push
ret
stc
mov
xchg
mov
lock
or
cmp
mov
cmp
sbb
lahf
cltd
dec
xchg
outsb
jle
lods
push
sahf
daa
imul
mov
clc
sbb
icebp
mov
xchg
mov
testb
aaa
int
not
ja
aaa
in
pop
mov
imul
sbb
pop
sub
jno
cmp
out
mov
in
movsl
jo
cmp
mov
mov
dec
cli
inc
jno
lahf
jne
push
inc
lock
mov
inc
jns
inc
test
mov
aaa
pop
test
inc
mov
js
dec
push
push
xor
mov
xor
icebp
mov
mov
mov
aaa
loope
mov
mov
xchg
fsubs
loope
pop
sbb
push
and
and
rorl
js
pop
test
mov
xchg
ss
xor
mov
mov
and
loope
push
negb
push
ss
fistpl
xor
dec
mull
int
in
pop
ja
js
xor
sub
jg
lock
mov
sub
icebp
pop
test
in
pop
aaa
in
gs
cmp
add
pop
push
arpl
jge
lock
xchg
fistpl
fildl
sarl
mov
ja
testb
aaa
sbb
xchg
push
jge
lock
mov
mov
cwtl
xchg
div
mov
mov
mov
aaa
pop
js
cmp
mov
loopne
fistpl
cmp
loope
push
sbb
iret
mov
jge
lock
test
fcmovne
mov
icebp
sarl
or
aaa
or
cmp
mov
mov
addr16
je
mov
neg
adc
mov
pop
mov
cmp
mov
mov
inc
mov
pop
pop
pop
push
negl
dec
ss
push
xchg
icebp
mov
jno
or
aaa
mov
daa
xchg
icebp
arpl
push
sbb
scas
jge
lock
ss
icebp
out
mov
arpl
cmp
ja
cmp
mov
sbbb
movb
js
mov
sarl
icebp
mov
mov
mov
aaa
loope
mov
adc
dec
mov
call
frstor
pop
pop
rclb
pop
fucomi
adc
mov
addr16
mov
lret
dec
out
aas
idiv
sti
out
int3
aaa
cli
inc
out
pop
xchg
ja
outsb
shrb
mov
jp
outsl
aas
idiv
cli
outsl
sahf
pop
or
loope
js
lret
sahf
test
mov
jbe
push
pop
fcmovu
xor
sbb
xlat
jge
pop
cmp
aas
js
dec
push
cli
scas
mov
mov
out
add
pop
and
push
mov
cmc
and
outsl
sbb
in
iret
fstpl
dec
cmp
sbb
mov
mov
pop
mov
mov
sbb
idivb
int
aaa
pop
cmp
dec
out
mov
cmp
loopne
lock
negl
and
call
pop
or
ja
mov
stos
pop
aam
movsb
popf
sbb
int
stc
hlt
xchg
int
cmp
mov
inc
lds
arpl
mov
inc
js
out
cmp
mov
inc
cmp
repz
cmp
pop
mov
sbb
ljmp
je
ljmp
pop
fdivl
fwait
mov
adc
iret
cltd
rcrb
mov
divb
out
jmp
int
xor
ja
aaa
mov
push
inc
test
arpl
inc
js
sti
cmp
js
cld
std
xor
arpl
mov
pushl
aas
cltd
mov
shll
outsl
stos
and
stc
cmp
jmp
bound
push
mov
stos
pop
push
int
dec
rorl
icebp
ja
xor
in
decl
push
jbe
test
mov
cmp
test
lods
mov
es
cmp
fnstenv
mov
sub
xor
fdivr
sbb
or
pushf
inc
dec
bound
mov
jno
add
in
xor
mov
cmc
inc
inc
int3
pop
sti
lods
and
inc
leave
shll
mov
mov
and
movsl
xchg
mov
xchg
sbb
xlat
cmpl
adc
or
in
arpl
jecxz
adc
sub
ret
mov
mov
es
xor
mov
push
lea
sahf
lock
fstp
dec
insl
fistl
sbb
mov
lds
push
stos
bound
iret
mov
push
arpl
loop
add
hlt
pop
lods
xchg
dec
daa
aaa
inc
pusha
xchg
cmp
and
xor
clc
push
pusha
cmp
call
shl
shr
sub
and
pushf
sub
add
and
mov
and
cmc
and
mov
mov
jmp
lds
adc
in
repnz
cs
sbb
in
mov
pushf
mov
cmp
rol
cmpsl
div
leave
leave
iret
ret
mov
inc
inc
popf
outsl
cld
cld
or
inc
insl
xchg
xor
jmp
dec
xchg
je
fwait
jge
inc
xlat
sbb
pop
add
stos
popa
cwtl
sbb
frstor
addr16
in
mov
adc
cwtl
mov
mov
mov
cmpsl
les
inc
iret
or
enter
mov
in
sub
mov
addl
sbb
mov
mov
pushf
jmp
je
push
lods
push
movsb
jne
sahf
loop
jo
ret
jl
mov
add
jp
pop
js
sub
fs
je
jno
clc
add
cmp
bt
cmc
cmp
call
pushf
movl
call
jmp
neg
rcl
sub
shl
btc
sar
lea
pushf
movl
sub
clc
pushf
cmc
pushl
popl
pusha
test
pushf
test
cmp
jmp
adc
mov
orl
cmpsb
lcall
inc
adc
stos
mov
int
or
sbb
es
xor
xchg
sbb
or
cmp
ljmp
repz
xor
cwtl
ret
mov
lea
jmp
lea
jae
pusha
pusha
lea
jne
push
mov
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lret
mov
sbb
ja
or
mov
fwait
xor
dec
or
cli
loopne
mov
test
dec
scas
movsl
xor
dec
js
pop
and
mov
mov
pop
mov
mov
addl
or
fmuls
stos
shrb
cwtl
pop
mov
mov
invd
push
sub
inc
dec
ja
dec
test
sbb
cmp
sub
lea
sbb
mov
cmpsb
shll
les
add
jge
insl
adc
xchg
daa
xchg
es
push
xor
in
add
fdivr
xchg
mov
push
fcomps
mov
mov
adc
jmp
sub
adc
js
lds
gs
and
fiadds
jle
fisttps
mov
add
cmp
mov
fnstenv
dec
sub
mov
fisubrs
add
scas
outsl
out
repz
test
mov
sbb
je
orb
shll
mov
add
fdecstp
lds
neg
push
lea
call
cmp
cmc
test
cmp
cmp
pushf
call
fnsave
mov
out
enter
or
mov
mov
mov
jbe
dec
aad
cmp
xor
push
movsb
xchg
aaa
rorl
sti
fs
testb
leave
inc
pop
push
lods
xchg
mov
ss
aaa
mov
sbb
xchg
cmp
scas
inc
sub
push
loopne
outsl
add
sbbb
out
jmp
stc
iret
xchg
xor
xchg
jge
xor
xlat
call
das
inc
pushf
push
xchg
stos
lea
pop
enter
or
gs
mov
dec
mov
ss
push
insl
push
push
xchg
cli
push
xchg
imul
cmpsb
pop
pop
rcrl
adc
je
lds
pop
pop
mov
mov
andl
dec
sarl
cmp
inc
or
lock
in
jmp
dec
clc
decl
xchg
imull
mov
jo
rorb
cmpsb
or
mov
sbbb
cmp
sub
push
cmp
mov
pop
ss
cli
xchg
inc
mov
xchg
mov
stos
test
mov
push
pop
lret
cld
or
bnd
ljmp
andb
mov
aaa
jp
push
jno
mov
xchg
ljmp
stos
dec
fidivs
sti
pusha
or
push
xchg
jbe
jge
test
mov
bound
ss
xor
cmp
xchg
imul
lea
jb
clc
cmp
call
push
movzwl
add
bt
sub
btr
inc
mov
clc
jmp
pushl
call
rol
call
mov
mov
pop
fstl
repnz
push
sbb
or
xorl
ret
inc
cli
pop
adc
push
pushf
pop
mov
in
xchg
jns
lods
mov
or
shrb
enter
xor
jne
dec
not
mov
lret
fildll
xor
xchg
mov
dec
shrb
int3
inc
jne
cmpsl
pop
popf
js
mov
push
dec
stc
sub
push
ja
loop
mov
mov
cmc
decb
sarl
cmp
pop
sub
sbb
mov
xchg
push
sbb
and
mov
add
sub
pop
xor
loopne
sub
daa
xchg
stos
push
adc
inc
mov
cs
jmp
jbe
cs
lcall
rol
add
add
int
stos
jns
xor
adc
or
test
dec
or
pop
add
fildl
and
lods
fucomi
sbb
xchg
ret
xor
inc
inc
and
pop
cmp
push
clc
decl
test
add
call
leave
push
push
call
in
mov
push
mov
ds
aaa
sub
dec
jle
cmpsb
or
mov
lea
push
dec
dec
orl
lret
xchg
or
pop
psubd
jecxz
cwtl
ret
push
cmp
sbb
icebp
cli
out
mov
jnp
add
mov
mov
inc
or
lahf
rclb
mov
rorb
fldenv
jbe
mov
loopne
push
ret
mov
adc
jmp
dec
das
les
and
pop
pop
mov
fmuls
jp
cmp
mov
rolb
dec
notb
or
out
popf
sub
dec
mov
mov
or
adc
pop
pop
lea
rorl
das
push
dec
lock
insl
pop
cmc
sub
jp
xchg
or
in
push
loopne
push
int3
jae
cld
xor
insb
popa
adc
repz
out
int3
fbstp
into
mov
ficomps
test
jo
lods
sar
leave
cld
sahf
mov
movsbw
mov
xor
shr
setae
btc
shr
stc
cmc
shld
stc
mov
cmp
call
add
mov
sbb
cmp
mov
scas
and
das
push
dec
add
inc
int3
test
mov
dec
nop
es
inc
push
in
dec
jg
mov
inc
adc
fisttpl
cwtl
test
test
xchg
and
rcr
ret
mov
push
push
repz
dec
jecxz
ds
lea
jne
shrd
bsf
shrd
shl
mov
sbb
sub
shrd
mov
cmc
stc
sub
test
bt
jmp
add
mov
pushf
movw
pushf
mov
pushf
push
movw
lea
jmp
jmp
lea
jne
pusha
push
pusha
pushfw
popw
movb
pushl
sbb
xor
mov
bt
test
test
neg
jmp
stc
pushl
popl
test
cmp
cmp
pusha
mov
pusha
lea
ja
stc
sub
cmp
add
shl
mov
rol
push
mov
jmp
mov
inc
lods
push
mov
cmp
js
pop
push
fldt
mov
adc
pushl
mov
test
dec
cs
sar
xor
or
mov
cwtl
jp
mov
divb
cwtl
aad
je
dec
test
cli
mov
cmp
push
rorl
sbb
add
clc
add
push
call
rcll
adc
push
movsb
push
lret
dec
insl
and
int3
xchg
mov
inc
shr
cmp
mov
loop
xor
out
dec
aam
pushf
sbb
int3
mov
mov
lahf
outsb
mov
pushf
incl
sbb
and
pusha
pop
stos
gs
mov
cld
adc
enter
int
fs
jp
pop
jmp
add
dec
outsl
arpl
inc
jb
gs
or
stos
push
mov
mov
bound
pop
testl
cmp
outsb
and
out
mov
loopne
xor
xchg
push
cmp
mov
pop
je
std
out
or
pusha
fsubs
loope
dec
dec
push
sbb
mov
mov
jbe
cmp
dec
inc
push
pop
mov
ret
mov
jbe
rep
pushf
mov
mov
pushf
movb
lea
jmp
in
gs
push
mov
inc
mov
mov
int3
popf
rcrb
jg
test
mov
mov
pop
push
stos
dec
sub
jge
inc
les
jge
xchg
jl
mov
sahf
ja
aad
lahf
scas
and
adcb
jp
fadds
adc
or
sub
push
lds
mov
jbe
or
fmuls
inc
aas
hlt
add
test
pop
sbb
or
mov
lretw
dec
jne
and
call
or
arpl
push
shr
mov
out
and
jne
loopne
fstpl
cli
inc
fcoml
rcrl
pop
test
ret
jae
test
or
inc
adc
aaa
xchg
test
lods
ret
mov
pop
add
pushf
rcr
mov
movb
pushf
pushf
push
cmpb
mov
movb
pusha
jmp
scas
test
push
mov
xor
xchg
mov
jnp
push
aam
sub
mov
jbe
es
out
add
enter
or
dec
xor
fsubl
inc
inc
int3
xor
mov
jbe
jo
shlb
pushf
push
adc
lods
xchg
mov
cwtl
dec
mov
push
fisubrs
out
add
cmpsb
xorb
mov
push
fs
jae
mov
mov
clc
mov
sub
inc
clc
mov
cmc
push
cmp
bt
xor
movl
repnz
pushf
call
jmp
pusha
lea
je
bt
bt
cmc
cmp
sub
call
push
je
test
mov
movsl
lods
std
mov
and
lahf
jno
repz
adc
andl
push
sbb
cmp
and
repnz
push
int3
in
ja
scas
push
and
sarb
dec
dec
cmp
sbb
xor
and
daa
mov
das
js
out
ljmp
stos
movsb
sbb
and
mov
xchg
and
dec
pop
mov
or
mov
inc
jns,pn
or
push
insl
jo
mov
cmp
fwait
ret
push
pushf
mov
xor
fiadds
lcall
xchg
rorb
mov
fld
dec
popf
gs
pop
pushf
and
inc
lret
js
aam
jp
inc
xorb
mov
in
insb
jnp
cmpsl
push
mov
out
ret
push
ret
jnp
or
out
cmc
daa
shl
sahf
mov
jp
or
and
xchg
addr16
bound
mov
loope
je
out
in
call
push
inc
out
popa
out
jl
inc
mov
sub
shlb
pop
ret
cltd
dec
outsl
pop
add
addb
movsl
xchg
cmp
iret
inc
es
in
je
xorl
xchg
frstor
jle
adc
movb
jmp
call
add
ja
push
mov
sti
inc
pushf
stc
jnp
jge
icebp
pop
cmp
pop
push
mov
sub
movsl
fbld
sbb
push
lods
dec
ljmp
inc
nop
mov
out
pushf
fisubl
sbbb
mov
sub
insl
pop
neg
in
pop
repz
xor
cmpb
push
mov
push
das
mov
cmp
scas
shrb
insl
inc
das
je
shrb
jne
stc
scas
call
fs
shlb
jbe
arpl
out
jg
mov
mov
fsts
pop
lcall
into
lahf
jb
enter
out
sbb
mov
cltd
mov
push
mov
mov
pop
cmpsl
pop
lods
lcall
pop
and
xor
ret
mov
cmpsl
lods
cli
jl
adc
les
sbb
xchg
sub
loop
fadd
dec
cmp
test
rolb
out
sti
mov
push
sub
and
cli
cs
jo
adc
leave
std
adcl
andb
sbb
sarl
insb
ds
mov
roll
enter
push
jb
dec
xor
xchg
inc
sub
pusha
fmuls
or
add
push
push
push
clc
mov
outsl
aaa
add
jb
cmp
push
cld
inc
sti
mov
cwtl
mov
lcall
mov
cmpsl
mov
outsb
xchg
shl
push
push
leave
add
rorl
popf
xchg
ljmp
ss
xchg
mov
xchg
scas
and
fistpll
push
mov
fsubl
cmp
lock
xchg
out
lods
pusha
mov
push
into
sbb
mov
imul
and
rol
mov
adc
and
movsl
push
mov
ret
adc
lods
out
or
lock
pop
sbb
bnd
sub
inc
dec
stc
adc
mov
jno
mov
divl
int
adc
inc
xrelease
cwtl
adc
push
imul
outsl
stos
adc
or
mov
iret
push
xor
lret
push
sbb
sbb
add
xchg
cmp
mov
bound
jbe
shlb
xchg
add
sbb
xchg
jmp
adc
stc
dec
mov
je
xor
stc
lods
xchg
ret
stos
scas
ret
jno
jl
dec
xchg
inc
pusha
pop
mov
xor
mov
mov
lret
add
xlat
pusha
clc
repnz
call
or
scas
movsb
push
mov
jno
aad
inc
sbb
ret
dec
jecxz
xchg
sub
movsb
les
jne
or
mov
add
iret
dec
fs
pop
int3
out
mov
xchg
stos
and
xor
loop
bound
cmc
fsubrl
mov
testb
sub
addr16
dec
out
gs
push
or
xor
pop
enter
ret
cmpsb
arpl
add
repz
js
call
xor
cmp
addl
jne
call
aaa
and
std
jae
movsl
inc
push
lret
and
or
sub
jb
mov
mov
cmp
lcall
pop
xor
sbb
mov
sbb
jl
mov
jmp
inc
int3
cmc
jae
bound
mov
push
ret
xchg
leave
rcr
fidivrs
pop
xchg
test
add
add
lea
ja
call
call
clc
test
jmp
lea
je
call
lea
jb
pushf
cmp
clc
cmp
pushf
jmp
imul
gs
xor
cs
insb
add
mov
es
in
cmpsb
stos
incb
into
adc
xchg
mov
jmp
rol
jne
out
roll
fs
mov
inc
pop
rol
mov
repnz
outsb
gs
addr16
lahf
mov
ffreep
out
push
jo
pop
adc
or
lods
inc
sub
int
shll
dec
rclb
idiv
xor
into
and
stos
and
lahf
stos
pusha
mov
call
jg
fisubs
mov
jge
xchg
sbb
jge
inc
arpl
ja
adc
shl
sbb
das
inc
je
or
in
pushf
notl
mov
xchg
ja
mov
pop
xchg
dec
push
push
dec
cmp
scas
pop
mov
rorb
repz
jns
adc
cmp
xlat
push
sbb
and
fimuls
cmp
adc
aaa
or
xchg
call
mov
loop
lods
aas
stc
in
dec
out
add
popf
lcall
daa
sub
pop
pushf
inc
je
or
std
shlb
mov
dec
push
pop
out
or
dec
cld
push
ja
cwtl
cmp
lods
xchg
ljmp
iret
mov
and
test
cmpsl
pop
rorb
push
pop
push
xor
pushf
mov
outsb
aas
mov
xchg
cmp
fwait
push
clc
jg
xchg
lcall
push
mov
pop
xor
jmp
push
push
lcall
jl
mov
aas
sti
sbb
xor
jne
or
call
in
cmp
ss
mov
mov
xor
popa
ja
negb
mov
push
mov
scas
adc
insl
mov
imul
lds
inc
add
aad
loop
sbb
mov
dec
cmpsl
mov
lret
imul
dec
loopne
dec
push
push
outsl
mov
ja
outsl
dec
lods
push
std
ror
std
repz
in
or
push
lea
je
btr
shl
add
jmp
mov
lea
jne
not
add
aas
sub
rcr
mov
clc
sub
rol
shl
add
shr
adc
mov
push
test
call
bswap
not
bt
pushf
mov
cmp
cmpb
call
mov
dec
stc
cmc
mov
movb
rol
cmc
movb
call
lea
jne
jmp
jo
inc
mov
hlt
fistpl
out
push
sub
pop
imul
orl
mov
ds
hlt
stc
aam
in
sbb
test
pusha
mov
dec
push
sbb
insl
dec
xchg
aaa
data16
and
es
push
inc
and
sub
pop
les
enter
movsl
mov
out
mov
cmp
xchg
into
adcb
xchg
push
push
ja
shlb
movsb
addl
mov
xor
dec
movsl
lahf
push
mov
int3
andl
sub
je
mov
add
and
jg
or
mov
sub
cwtl
add
lds
push
mov
push
mov
jbe
in
push
mov
xchg
loope
sti
rcl
lods
and
push
fistpl
push
dec
push
push
movsb
push
mov
push
push
fisubrs
jo
fildll
xchg
scas
imul
movsl
lahf
push
mov
push
lea
jo
or
lea
inc
cmp
cld
push
imul
out
out
mov
add
mov
add
mov
std
jne
mov
and
into
mov
int3
add
push
insb
aam
jnp
mov
lret
inc
aaa
test
jl
mov
jecxz
stc
scas
fadd
in
and
or
or
xchg
xchg
inc
add
jl
xchg
dec
xchg
cmc
xor
push
fwait
sbb
in
pushl
jmp
jae
or
jmp
pop
fistpll
es
imul
jns
push
xchg
mov
jg
aaa
hlt
subl
fiaddl
or
adc
mov
outsl
push
out
std
jge
frstor
push
loop
dec
xorl
insl
ljmp
cmp
repz
icebp
cmpsl
push
jmp
scas
sahf
push
mov
inc
and
jge
pop
rclb
inc
xor
mov
icebp
pop
pop
push
lds
bnd
xor
pop
xor
mov
adc
insl
testl
mov
pop
scas
stos
or
cmp
adc
xchg
inc
pop
fcmovnb
xor
mov
mov
ret
mov
xor
push
mov
lock
pushf
xlat
movsl
iret
sbb
push
lea
shrb
push
gs
pop
test
or
xchg
adc
lock
in
rcl
push
mov
cli
and
scas
jle
inc
and
cmpsb
lods
jecxz
jge
xchg
pop
lahf
out
mov
lret
out
sub
push
inc
adc
aad
cmp
test
ja
cmpsl
jbe
into
ss
push
and
scas
or
enter
jg
pop
cwtl
mov
xorb
sub
iret
gs
xlat
popf
and
leave
rorb
xor
xchg
lods
add
xchg
mov
jg
fdiv
test
fmull
ss
adc
add
mov
jnp
mov
fdivrl
xchg
mov
push
fstpt
test
cmpb
mov
pushf
movb
lea
jne
neg
btc
movsbw
mov
push
bt
add
test
clc
pusha
movzwl
clc
movzbl
rcr
mov
jmp
movl
pushf
mov
call
lea
je
clc
push
pushf
cmp
jmp
movsl
xchg
pushf
push
mov
sahf
push
sti
dec
xchg
sarb
fwait
leave
sbb
daa
xorb
pop
pop
cli
mov
in
loopne
cltd
mov
call
stc
ficomps
mov
jecxz
mov
fldt
or
push
fs
pop
out
loop
sub
aaa
push
xlat
dec
outsb
leave
out
sbb
test
and
adc
and
lret
lret
dec
pop
dec
mov
xor
xchg
mov
sarb
inc
leave
adcl
loopne
loope
sub
push
mov
pop
pop
lret
push
xchg
scas
lea
aad
xchg
mov
rclb
sbb
int
loopne
leave
out
sbb
mov
pushf
push
mov
aad
and
mov
pop
xchg
mov
fsubl
fmull
pop
and
fbstp
mov
aam
rclb
fistl
jne
inc
xchg
push
sbb
lret
dec
mov
jae
push
fidivl
and
push
les
xor
call
mov
xor
cmp
xlat
cmpsl
andl
or
test
enter
add
mov
jb
mov
repz
pop
in
iret
xor
aas
lods
jno
test
xchg
int3
adc
clc
inc
mov
mov
pop
int
dec
jle
or
fwait
push
mov
mov
imul
out
into
lahf
dec
jle
jge
outsl
jge
push
outsl
dec
pop
jb
dec
xchg
jle
or
fcomps
mov
push
xorb
add
repz
dec
sub
lods
mov
xchg
adc
fisttps
std
scas
lods
xor
sbb
rcr
int
cmp
in
sbb
dec
ss
jbe
lods
sti
xchg
jne
xchg
inc
leave
xlat
mov
cltd
push
mov
or
push
pop
jnp
jb
lret
jno
repz
bnd
out
sbb
mov
mov
or
fcmovb
js,pt
xlat
or
subl
out
shrb
pop
jns
sub
jmp
and
push
cmp
xor
repnz
insb
shll
test
fs
sbb
cltd
std
call
adc
push
loope
xor
call
mov
stos
sub
and
jecxz
lret
popa
pop
push
std
icebp
jecxz
fsubrp
addr16
idivl
mov
dec
push
xor
adc
fistl
es
sbb
int3
push
into
lock
shl
das
adc
je
inc
mov
pop
nop
adc
shll
jge
mov
lcall
stc
jne
adc
xor
pop
je
stos
jno
mov
xor
jmp
cmp
inc
dec
cmpb
cltd
push
mov
cmp
loopne
cs
rorl
imul
pop
jns
shrl
and
pop
mov
pop
push
inc
loope
inc
push
and
jg
mov
dec
outsl
fnstenv
lcall
stos
mov
cwtl
es
orb
mov
ret
mov
icebp
adc
adc
in
sub
imul
test
push
popf
jns
mov
mov
sub
cmp
aas
sti
stc
dec
std
iret
test
stos
adc
jo
adcl
std
std
xchg
pusha
adc
dec
mov
iret
rorl
pusha
and
pop
jnp
xor
push
scas
cld
mov
rcrl
dec
inc
pop
and
aam
pop
movl
mov
jbe
fstpl
add
repnz
xchg
push
movsb
je
mov
into
sbb
xor
and
jmp
adc
inc
pusha
call
xchg
mov
dec
ret
jbe
js
xchg
mov
loop
cmc
mov
mov
push
rorb
cmpsl
testl
icebp
xor
jl
xchg
je
scas
sub
arpl
fstpt
imul
gs
xor
or
ficompl
add
dec
pop
xchg
mov
andb
aas
mov
pop
add
jl
cmp
mov
jge
push
inc
push
rcl
push
out
pop
add
dec
add
roll
test
int3
enter
andb
or
mov
pop
or
xor
nop
addr16
test
mov
int
cmp
xor
out
or
ret
push
cwtl
ljmp
push
ficoml
decl
andb
mov
xchg
push
mov
fldcw
xchg
sbb
popf
lret
bound
lret
loope
dec
into
in
test
mov
or
cmpsb
push
in
leave
pop
in
inc
cmp
push
jne
jmp
mov
bound
xor
inc
jecxz
sbb
xchg
cmpsl
xchg
lahf
ficomps
adc
movsl
xchg
test
cwtl
inc
das
sbb
mov
jl
fsubrl
aaa
out
mov
dec
fucom
fnstsw
rorb
and
push
fadds
pop
sbb
mov
les
scas
jg
cmp
mov
xlat
and
mov
in
xchg
push
int3
mov
cs
xor
std
bound
inc
nop
ljmp
add
or
shll
loope
xchg
in
xchg
push
adc
andb
xchg
jl
aas
testb
push
cmpsb
mov
mov
or
out
adc
imul
push
mov
scas
push
xor
subb
cwtl
cs
xor
mov
or
jae
leave
mov
inc
mov
inc
out
loop
fstpt
lock
push
push
fwait
push
lea
lahf
jns
sbb
inc
sbb
and
fsubrp
sbb
xchg
lods
arpl
sbb
xor
or
loopne
test
pop
mov
xchg
sub
ficoms
dec
popl
inc
in
shl
pop
shlb
mov
jp
and
out
jl
orb
int3
insb
cld
test
fisttpl
rclb
mov
mov
dec
cmp
lods
lds
sti
cmpsb
outsl
jns
xchg
and
repnz
sub
ljmp
loope
jbe
jo
xor
ss
inc
jbe
int3
lahf
sbb
mov
add
mov
jb
cld
ja
rcll
or
add
jbe
das
inc
imul
jge
hlt
test
ds
dec
cmp
in
mov
or
mov
cli
push
fstl
or
cmp
pop
xlat
fdivr
dec
imul
out
into
adc
xchg
hlt
into
movsl
dec
xchg
push
mov
test
mov
pop
mov
sarb
mov
mov
insb
daa
lahf
aad
mov
xor
mov
shrb
lock
xchg
xchg
or
ret
mov
sbb
mov
shl
aad
loopne
gs
push
test
xchg
gs
cltd
shll
lcall
mov
loope
aas
mov
and
push
call
mov
push
das
call
fcmovnb
pop
test
pop
jae
xchg
repz
fists
test
jl
sbb
incl
sub
and
int3
in
hlt
sti
cmp
add
add
or
or
mov
arpl
lea
jl
pop
and
mov
xchg
in
push
insl
fidivrl
cmpsl
aam
mov
shr
cmp
rcll
test
sub
inc
fldcw
and
mov
and
js
inc
stos
pop
cld
shll
dec
sbb
dec
dec
movsl
mov
insb
repnz
push
sub
or
test
insb
mov
mov
arpl
imul
das
add
mov
and
mov
or
mov
test
sub
dec
daa
push
xchg
jmp
dec
bound
xchg
jecxz
shll
add
xchg
mov
dec
jmp
fcom
mov
add
pop
xor
xchg
push
mov
jle
dec
sarb
adc
jl
pop
and
mov
movsb
insb
mov
and
xor
fwait
rol
or
insl
es
cmp
popf
push
clc
xor
call
je
call
into
adc
xchg
popf
xchg
mov
ss
dec
aaa
in
sbb
sbb
xchg
in
xchg
xchg
pushf
or
stos
jle
in
imul
pushf
clc
jmp
push
jmp
mov
sub
movw
pushl
pusha
mov
lea
jmp
pusha
not
mov
pop
call
mov
lea
call
pushf
lea
jb
pusha
pushl
ret
mov
mov
push
mov
adc
popf
xchg
aas
push
dec
sbb
mov
push
add
lea
inc
stos
jge
hlt
mov
inc
pop
mov
cli
sahf
std
cmpsb
das
int3
mov
pop
in
les
inc
jb
sbb
sbb
pop
in
sarl
xchg
or
sti
imul
out
cwtl
pop
xchg
push
mov
out
jbe
push
scas
dec
dec
jno
adc
mov
add
pop
mov
iret
and
icebp
jle
std
cmp
insl
mov
popf
loope
je
push
shld
push
or
or
inc
out
xchg
fmuls
icebp
push
lahf
mov
repz
push
mov
add
jne
jo
std
jae
mov
xchg
cwtl
repz
inc
test
in
cmpsl
pop
leave
mov
mov
jb
jbe
ds
xchg
jle
pop
rclb
data16
sub
lods
in
mov
adc
cld
xchg
add
mov
sbb
repnz
dec
stc
std
xor
jp
mov
scas
mov
fldt
cmp
sbb
jae
arpl
xchg
push
sarb
xchg
push
test
int3
insb
and
adc
addr16
push
mov
out
sbb
ret
mov
insl
add
cwtl
mov
cmpsb
dec
xchg
push
mov
out
and
jecxz
push
out
fimuls
and
fstpl
mov
out
push
aad
rol
cwtl
lods
filds
popf
dec
fwait
or
test
cmpl
mov
xor
fmull
or
push
dec
pop
xor
in
fldcw
pop
add
hlt
and
sub
or
rclb
and
jne
seto
bswap
call
addr16
xchg
push
mov
pusha
inc
mov
push
popa
mov
movsl
cmp
fildll
xchg
mov
aaa
xchg
dec
mov
cmpsb
xlat
xor
sbb
jb
mov
lock
cmp
inc
adc
les
int3
out
pusha
push
data16
sbb
xor
cmp
lea
mov
mov
push
jp
fsubrs
xchg
jbe
and
loope
cltd
xor
mov
adc
xchg
cwtl
and
and
popa
sahf
leave
fs
push
mov
arpl
pop
pop
and
jecxz
push
cmp
test
pushf
lea
je
push
add
push
push
cmc
cmp
push
lea
jmp
jmp
dec
pop
xor
and
pop
aas
icebp
or
inc
push
jo
adc
sbb
jnp
pop
xchg
out
popl
mov
ja
pop
xchg
lock
je
in
sub
mov
jle
shrb
push
testb
mov
movsl
or
outsl
add
pop
das
push
cmpsb
jae
or
inc
shrl
loope
stos
pop
mov
mov
repnz
fisttpl
into
shrl
push
adc
int
sub
int3
jle
inc
outsb
and
adc
inc
mov
std
dec
imul
ljmp
xlat
mov
xchg
add
daa
sub
rorl
repz
cmpsb
lcall
mov
dec
lock
out
push
dec
mov
xor
xor
sbb
fsubrs
lret
push
mov
and
aad
adc
lea
xor
out
xchg
mov
ret
adc
divb
xor
sub
int3
mov
mov
add
movb
and
insl
pushf
mov
in
lock
or
push
out
ror
nop
cli
lea
cmp
or
cld
push
mov
inc
jo
push
roll
in
pop
cmp
cld
cmpl
dec
dec
jp
mov
xchg
imul
inc
dec
fnsaves
sbb
fsubrl
roll
iret
dec
push
sbb
fimull
xchg
sbb
std
sub
pop
mov
add
testl
add
scas
iret
pushf
lea
je
pusha
mov
push
pusha
lea
jmp
pusha
lea
je
push
cmp
push
pushl
add
bt
pusha
cmp
cmp
call
dec
pop
sub
push
mov
and
sbb
pop
aaa
and
jns
imul
inc
pushf
in
add
ljmp
adc
int
mov
cmp
xor
xchg
adc
addl
sub
inc
pop
out
pusha
inc
push
cld
test
nop
xor
fistl
xor
cmp
jo
test
pop
xchg
cmc
scas
js
es
fs
ja
jp
pushf
mov
push
lea
jb
jmp
or
mov
mov
pop
jne
inc
push
xor
adc
fisttps
pop
js
push
sub
add
shrl
xor
rcr
pop
mov
mov
pop
and
cmp
adc
xchg
cmp
add
out
rorb
into
adc
pop
mov
cmp
lea
clc
ds
mov
sub
push
add
pop
sbb
aad
clc
out
lea
push
in
add
in
ljmp
ss
xchg
mov
mov
cwtl
stos
or
cmp
pop
lock
out
jg
mov
ret
jmp
and
pop
int
mov
int3
jb
in
loop
jnp
mov
je
xor
sbb
cmpsb
bound
sbb
xchg
and
sub
pushf
jl
push
push
pop
jo
adc
cltd
dec
jnp
ljmp
ss
mov
pop
scas
jns
arpl
add
imul
mov
stos
dec
repz
ds
repz
sub
add
dec
rol
lea
jg
lcall
out
sub
jp
outsb
mov
jmp
inc
iret
fnstsw
xor
cmp
fldl
ds
out
out
gs
ja
xchg
test
popa
mov
inc
in
jns
mov
xchg
push
fldt
and
clc
lock
bound
aas
jno
daa
mov
scas
or
sbb
into
jl
inc
and
pushl
mov
pushl
ret
jmp
jmp
loopne
out
push
mov
test
and
mov
mov
mov
mov
addb
pop
cmp
fmulp
enter
jmp
sbb
add
inc
pushf
inc
std
vpmaxub
jl
xor
dec
in
push
mov
dec
inc
xor
lods
in
pusha
xchg
aam
mov
rcrb
xchg
inc
dec
dec
iret
sub
insb
add
sarl
out
mov
inc
fisttpll
test
xor
xchg
push
das
inc
sbb
pop
push
cmp
cltd
imul
xchg
xchg
pop
cmp
test
andb
or
mov
mov
in
mov
inc
cmp
stos
out
sub
dec
push
xchg
or
imul
clc
popf
aam
dec
ficoms
xchg
shl
push
mov
fcmovne
adc
cld
sub
aaa
cmp
jle
mov
xchg
mov
and
pop
xor
or
add
jmp
pop
mov
pusha
pop
or
cmpsb
and
sbb
mov
sbb
or
mov
sbb
mov
ljmp
rolb
pusha
ret
mov
push
jbe
xchg
dec
inc
mov
mov
jecxz
sbb
push
mulb
test
sub
xchg
inc
ljmp
and
pmaxub
inc
jno
daa
arpl
inc
mov
cmp
adc
mov
cmpb
sahf
adc
into
fcompl
repz
imul
adc
gs
pop
ljmp
or
xchg
jb
sub
sbb
pop
jecxz
xor
addr16
fwait
test
lock
std
std
mov
xchg
fdivl
inc
sbb
daa
fs
pushf
mov
pop
cmp
xor
mov
jl
in
fmuls
cmp
push
pop
les
out
sub
inc
test
std
sahf
mov
pop
fldl
mov
mov
in
xchg
push
stos
fs
pop
sbb
repnz
dec
fs
xor
jecxz
xor
test
or
pop
mov
xchg
mov
dec
int
fnstsw
inc
push
xchg
rcll
jae
insb
in
ficompl
outsl
out
sbb
fwait
mov
dec
out
pop
rcr
push
mov
aam
inc
inc
and
fiaddl
repz
insb
mov
int3
ret
cmp
enter
dec
jo
mov
push
jae
outsb
sub
shl
lods
mov
lret
sbb
xchg
stos
das
cmpsl
dec
pop
aam
ret
sub
xchg
and
and
sbb
adc
jb
mov
imul
sub
sbb
push
xor
cs
xchg
jo
ss
cmp
int3
jns
ljmp
inc
sub
jbe
cmpsl
pop
hlt
insb
mov
and
cwtl
int3
lahf
and
lock
mov
mov
clc
inc
pop
inc
daa
cmc
jns
stos
add
pop
lret
jnp
push
mov
inc
pop
aas
sub
jnp
jge
in
fnstenv
or
stos
lods
ret
dec
jge
jnp
mov
sahf
cmp
sbb
sbb
rol
push
ds
pop
sub
sarb
test
xchg
mov
jg
jnp
jae
or
or
xor
lea
jbe
pop
push
pop
not
movzbl
pop
push
mov
call
rol
stc
add
cmc
pushf
ror
pusha
jmp
pushl
mov
push
lea
jnp
push
pusha
mov
push
mov
push
pushl
ret
mov
aas
xchg
imul
inc
cmp
mov
scas
mov
lcall
or
ja
jp
arpl
leave
imul
mov
add
jp
jg
sbb
hlt
shrb
xchg
add
cltd
aam
sub
movl
mov
add
push
inc
lds
aaa
push
xchg
cmp
pop
pusha
adc
dec
ror
inc
or
ja
sub
xchg
jne
stos
dec
test
sbb
mov
cmpsb
add
jnp
add
mov
xchg
scas
lahf
push
testl
adc
dec
outsb
pop
pshufw
push
popfw
jp
lock
movaps
stos
les
pop
sete
cmpsb
cmp
jp
jo
movlhps
push
xor
out
popf
jp
popa
cmovne
lods
jp
nop
pop
jbe
mov
pop
movhps
mov
iret
lods
in
stos
aas
faddl
jp
lock
push
add
jp
adc
push
inc
mov
cmpxchg
lahf
sbb
cmp
bound
mov
aaa
push
jl
popf
jp
jo
bswap
mov
xchg
or
popf
jp
lock
call
sbb
mov
paddd
lock
jp
out
insl
outsb
ret
cmp
dec
mov
sets
pop
movsb
cmp
jp
add
lret
pop
es
jp
iret
pop
vmwrite
or
imul
pop
push
popf
jp
xor
dec
mov
push
jb
jp
outsl
addr16
gs
or
jp
jo
bswap
sbb
jp
outsl
pop
psadbw
push
and
push
rdmsr
mov
int3
jle
mov
xadd
jmp
jp
lock
adc
inc
mov
psubsb
les
lea
fs
push
push
mov
push
pop
movd
mov
shufps
cmpsb
stc
popf
jp
iret
pop
imul
imul
js
jp
adc
lock
mov
ucomiss
imul
jp
lock
bswap
xchg
mov
or
xchg
pop
push
in
mov
cmpsl
mulb
fsubrl
mov
icebp
mov
lock
mov
mov
sbb
cld
sbb
inc
icebp
cmc
xchg
push
mov
pop
jl
dec
pop
fs
insb
dec
bound
in
ret
dec
and
cmp
jmp
mov
pushf
pusha
movzbl
mov
mov
push
pushl
ret
in
jae
push
mov
push
in
fwait
mov
mov
jbe
cwtl
mov
cmp
fxch
cs
clc
mov
jmp
cmpsl
sti
inc
pop
ficomps
addr16
movsb
xor
cmp
cwtl
mov
xchg
cmp
adc
mov
mov
sbb
fstl
test
and
jmp
adc
aas
divb
cwtl
mov
jae
lcall
inc
lods
into
push
cs
sarl
jnp
mov
sub
neg
in
sub
stc
push
jns
in
aaa
inc
rcrl
inc
pop
test
dec
xchg
push
scas
in
jl
mov
fsubp
scas
mov
cs
pop
hlt
lds
cmc
imul
das
int
dec
xlat
out
aaa
mov
sbb
pushf
mov
mov
lea
je
jne
pushf
cmp
call
clc
call
cmpb
call
rol
adcl
and
xor
enter
sbb
xor
orl
subb
pop
outsl
xlat
cmpsl
xchg
out
pop
fdivrp
pop
xlat
mov
cmp
mov
mov
es
out
jb
loop
jmp
cmpsb
ja
lahf
jno
mov
jmp
nop
mov
cmp
mov
sbb
incl
movsl
adc
in
sti
or
roll
or
repnz
icebp
xor
mov
lea
gs
xor
push
mov
cmc
sbb
or
pop
mov
stc
xchg
cmpsl
shrl
and
or
add
ret
lcall
mov
popf
cmp
cld
add
inc
add
xorl
mov
pop
xlat
adc
int
dec
inc
rsm
negl
pushf
inc
in
loopne
pop
orb
imul
push
push
xor
les
movsb
sti
enter
push
mov
les
cmp
dec
aas
in
movsl
inc
mov
cmp
push
sub
adc
imul
addr16
iret
popf
sub
fyl2x
stos
bound
and
add
cs
inc
int
test
inc
movsl
mov
jecxz
cmpsb
xor
xchg
jmp
mov
imulb
adc
pushf
jne
rcll
xchg
ljmp
mov
xchg
stos
subl
incl
bswap
cwtl
cwtl
pushf
mov
movsbw
movsbw
pop
bswap
lea
call
dec
jbe
adcl
pop
mov
lock
ss
stos
inc
repz
sahf
mov
or
jge
aam
in
out
add
cltd
shl
inc
insb
add
movsl
mov
xor
or
push
lret
cli
pop
out
xchg
xor
inc
push
out
testb
dec
mov
cmp
xor
inc
push
dec
hlt
jge
sbb
push
icebp
rcrb
mov
cmp
jp
push
shlb
adcl
mov
lds
call
sbb
add
psraw
aaa
xchg
xchg
or
and
push
mov
dec
gs
push
addr16
xor
dec
fmull
in
stc
jb
xchg
inc
jmp
fsubp
jp
adc
insb
lods
and
mov
cmp
pop
jle
movsb
cmp
mov
xor
inc
je
mov
xchg
mov
and
subl
push
out
test
nop
adcb
mov
shl
push
call
dec
sbb
cmp
and
aaa
movsb
test
mov
mov
jae
aas
loope
nop
or
inc
cmp
cmp
movl
lds
or
mull
je
mov
mov
negl
sbb
mov
aaa
call
inc
sbbl
ret
aaa
or
inc
ffree
mov
shlb
mov
lods
out
sbb
mov
adcb
enter
je
xchg
test
in
sarb
jecxz
pop
mov
push
xlat
or
jbe
push
mov
lret
xor
pop
cltd
adcb
pop
jnp
leave
movsb
inc
scas
pushf
insb
lock
xlat
in
xor
xor
xchg
jge
jnp
fwait
mov
pcmpgtd
dec
test
push
xchg
stc
pusha
sbb
pop
adc
dec
jo
sbb
fcomps
addl
lods
out
sbb
jge
jg
mov
popa
push
mov
int
xchg
pop
pop
and
sahf
sub
insb
fcomps
sub
and
das
jb
mov
jl
xor
je
ss
adcl
dec
mov
push
int
aad
stc
out
mov
rolb
sub
loope
mov
stos
enter
push
ja
out
ljmp
xchg
add
dec
inc
mov
imul
scas
jbe
iret
mov
je
mov
cmp
pop
je
loop
add
movsl
imul
xchg
jle
mov
mov
mov
xchg
push
mov
jmp
ljmp
lods
jno
outsb
subb
mov
push
gs
pop
enter
mov
mov
adc
aas
mov
jb
xchg
cmc
aad
roll
pop
jb
in
dec
fistl
jne
adc
idivl
mov
popa
out
out
cmp
or
add
xor
xchg
lea
and
adc
dec
mov
push
push
pop
xchg
icebp
jne
out
jbe
dec
cli
xor
or
fcomps
xor
mov
mov
pop
arpl
addr16
sbb
imul
sahf
xor
imul
rol
leave
dec
xor
dec
inc
test
out
lcall
mov
mov
and
jne
shr
neg
push
pushf
xor
ror
mov
movsbl
or
mov
dec
shl
add
xor
mov
movb
pusha
bt
movl
test
movb
mov
mov
jmp
sub
cmp
neg
test
pushf
pushw
popfw
movb
call
jmp
sub
bt
mov
cmc
ror
push
jmp
mov
mov
push
pushl
ret
jg
iret
jge
mov
jmp
and
mov
loope
mov
test
daa
mov
out
jmp
mov
and
int
ret
inc
rolb
sbb
shlb
mov
adc
push
mov
out
and
lea
mov
adc
arpl
mov
loop
lcall
ljmp
and
or
mov
mov
daa
out
in
mov
mov
and
adc
repnz
inc
inc
push
adcb
fucomip
dec
fnstcw
stos
xor
inc
pusha
sub
or
fsubr
mov
sub
lods
add
mov
outsb
pop
mov
movsl
sbb
mov
daa
ja
mov
pusha
cmp
adc
pop
jl
rcrb
xchg
popa
dec
add
lret
fsub
cld
jl
jmp
lahf
mov
add
jns
mov
pop
cmpsb
out
sbb
mov
xor
decb
adc
insl
pop
shlb
cmpsb
mov
scas
popa
hlt
push
sub
enter
dec
xor
test
popa
sti
orl
lret
idivb
jecxz
stos
push
lret
daa
cld
mov
out
pop
add
ffreep
pop
inc
or
or
jge
lock
inc
xchg
cmp
fmuls
jmp
inc
jnp
cli
pop
mov
jbe
das
gs
xor
ds
push
mov
movsl
pop
add
sub
loope
movsb
inc
lret
mov
sub
add
movsb
xor
out
fstpl
stos
add
jg
add
xor
jbe
mov
xorb
ret
je
mov
pop
test
sub
and
lahf
mov
pop
nop
push
mov
mov
sarb
ret
imull
push
adc
jae
push
inc
arpl
push
out
sbb
scas
jnp
mov
mov
mov
stos
pop
fdivrs
subb
or
jae
xchg
mov
lret
into
sbb
popa
orl
pop
subb
cmp
jae
repz
mov
outsb
cld
dec
fcomi
scas
fisubrs
pop
cmp
add
fsubrs
add
fs
mov
cmp
test
push
clc
test
movb
lea
je
cmp
test
cmp
add
cmc
cmp
pusha
mov
lea
jmp
cmpsl
jp
jp
mov
icebp
icebp
mov
sub
out
aad
lds
jnp
and
out
out
lcall
fisubrl
jmp
cmp
inc
sub
pop
sbb
stos
cmpl
xchg
lock
mov
inc
pusha
mulb
sbb
add
pop
dec
lea
sbb
xor
pop
cli
mov
imul
mov
inc
in
loopne
dec
add
pop
aaa
movl
movb
push
pushf
lea
jmp
pushf
mov
mov
shr
cmc
sbb
add
pushf
add
sbb
rol
pushf
mov
pusha
shr
pushl
cmp
call
call
je
push
jp
mov
pop
cmp
add
mov
adc
scas
loop
mov
sub
fwait
and
adc
jle
dec
xor
sub
inc
je
cmp
shr
iret
in
push
ret
pop
jg
movsl
cmp
push
mov
pop
xlat
shll
mov
cwtl
mov
or
jle
pop
loop
cmpsb
push
pusha
mov
adcb
lcall
sub
push
sarb
movb
lea
jb
call
btr
mov
das
adc
shrd
push
sbb
xor
mov
push
clc
test
movb
mov
lea
je
cmp
mov
clc
pushf
pusha
shr
add
mov
btr
ror
stc
mov
pusha
jmp
call
push
lea
jne
not
cwtl
jmp
adc
pusha
call
pop
inc
dec
jns
mov
dec
test
daa
cli
dec
out
inc
or
lret
movsb
aaa
or
out
add
mov
mov
xchg
mov
popf
push
imul
outsl
std
repnz
add
icebp
nop
out
sbb
test
cmpsl
popa
pop
mov
ljmp
dec
loop
cld
adc
addr16
or
lods
sbb
fs
addb
push
ficomps
clc
mov
daa
outsb
lahf
or
xor
sbb
stos
call
pushf
lea
je
push
lea
jmp
xor
daa
js
mov
xchg
cmp
adcb
xor
dec
adc
lea
mov
adc
xchg
inc
call
xchg
movsb
repz
hlt
inc
fmull
xchg
imul
push
adc
push
scas
loopne
push
insb
adc
fistl
stc
push
fdivp
wrmsr
and
lea
jno
push
cli
pop
lret
jo
push
sbb
lret
mov
add
dec
in
add
addb
decl
mov
cmp
jmp
stos
fs
ja
mov
adc
sbb
pop
inc
inc
bound
add
cli
or
mov
dec
stos
dec
gs
jg
or
xchg
mov
hlt
pop
scas
sbb
jl
insb
scas
cmp
das
jb
ret
cmp
sub
sbb
lods
fiaddl
pusha
lea
jae
test
shl
shrd
mov
pushf
rcr
mov
btc
btr
mov
pusha
pusha
sub
stc
test
call
mov
mov
sub
rcl
mov
and
andb
sub
adc
and
dec
jnp
adc
push
aas
jae
mov
cmp
cs
inc
lea
das
and
scas
fldcw
icebp
mov
push
push
pushf
movl
pusha
pushf
lea
jmp
orb
jb
add
adc
mov
sbb
or
movb
mov
sub
into
mov
pop
mov
jns
ljmp
mov
fidivrs
adcb
mov
and
cld
scas
jbe
mov
stos
loope
test
outsb
mov
pop
inc
movsb
cltd
lcall
or
sbb
xor
fldt
and
or
fcoml
pop
lods
jo
jl
xor
cmp
test
mov
arpl
imul
repnz
push
hlt
xor
adc
jmp
and
daa
into
hlt
adc
mov
or
add
inc
fsts
fidivs
cltd
sbb
pop
cmpsl
out
sub
aas
xchg
mov
out
movsb
cltd
inc
scas
lock
add
cmpsl
jge
push
or
pop
mov
pop
push
mov
sub
inc
dec
and
or
jmp
inc
std
dec
cmp
and
test
imul
cld
dec
adc
and
jo
dec
stos
mov
out
jne
mov
lret
xor
mov
mov
sbb
js
fidivrl
sub
xchg
lret
daa
jge
rcrl
push
add
push
hlt
and
xor
xchg
enter
sbb
mov
rolb
adc
or
add
xchg
out
dec
xor
out
aas
xchg
pusha
xor
xchg
imul
into
cli
mov
mov
insb
xorb
sbb
inc
add
push
push
xorb
mov
push
loopne
pop
push
inc
or
test
ret
cmc
sub
loopne
repz
ret
and
cmp
xlat
lods
daa
cmp
fidivl
xchg
add
cwtl
inc
mov
push
mov
imul
dec
mov
xlat
lds
scas
jno
push
fistps
fbstp
jae
cmpsb
mov
and
dec
mov
push
in
aaa
pusha
jb
push
inc
mov
xchg
lcall
mov
andb
and
call
call
mov
mov
inc
or
lahf
repz
lock
clc
dec
jnp
hlt
movsl
out
adc
out
lods
mov
insb
mov
ret
cmp
xchg
test
iret
in
mov
mov
nop
xor
sbb
daa
jecxz
dec
insb
stc
cs
lds
lahf
lcall
inc
stc
jno
in
js
fistl
call
cltd
push
pop
ret
adc
adc
fsubrs
xchg
mov
stc
js
sti
lea
jne
movzbl
movb
movsbl
mov
setp
lahf
push
lahf
lea
pusha
call
ss
jae
mov
pop
das
adc
mov
ret
iret
push
outsb
and
aas
sahf
movsl
out
enter
out
in
out
mov
dec
les
or
push
push
inc
in
imul
cmp
cld
xchg
xchg
ss
sub
fildl
shl
cld
lods
and
xchg
xchg
fdivl
xchg
mov
int3
and
mov
push
pop
dec
mov
dec
hlt
ljmp
jb
mov
stc
sbb
push
sbb
push
lret
js
ss
or
xor
and
icebp
inc
gs
cmpsb
popa
jo
ret
test
cmpsb
mov
stc
jae
add
mov
xor
mov
fcmovne
push
sub
je
imull
ljmp
inc
cmpsl
inc
add
pop
outsb
inc
clc
in
mov
xchg
or
jbe
scas
cmpsl
std
sbb
dec
mov
imulb
clc
addr16
pop
insb
mov
pusha
hlt
cmp
ljmp
cmp
xor
sbb
sbb
dec
gs
outsb
jl
jp
vpsrlq
idivb
mov
cmp
pop
call
mov
push
lret
push
adc
mov
fldt
cmp
and
std
jno
push
out
jecxz
ja
add
testb
pop
mov
in
cli
add
pop
sub
shl
fs
jg
adc
adc
jno
leave
pop
mov
mov
jmp
lea
jne
adc
rol
movsbw
movsbw
mov
bt
not
jmp
inc
mov
jno
mov
ds
mov
mov
addr16
dec
cld
add
inc
push
std
fstp
adcl
call
data16
movsb
ret
movsb
cmp
lods
inc
rcrb
lds
xchg
xor
scas
int
test
cmp
push
repz
loop
outsl
add
repnz
and
push
xor
push
jbe
add
lock
dec
stos
stos
mov
adc
in
mov
mov
std
pop
sub
mov
fsubl
js
fdivr
jbe
in
shll
lds
cwtl
pop
sbb
pop
pop
in
outsl
fldl
bound
pop
pusha
push
test
xor
or
sub
push
jmp
orb
adc
enter
xchg
inc
aas
xchg
jbe
xchg
mov
lahf
mov
jecxz
cmp
rcr
bound
sbb
fwait
push
sbb
add
or
add
enter
popf
xor
lds
lea
jnp
pusha
lea
ja
shl
sub
sub
add
adc
mov
not
mov
cmc
repnz
pusha
movb
lea
jne
pusha
cwtl
movb
lahf
pushf
mov
movzbw
lea
push
movsbw
lea
call
sbb
push
jo
mov
enter
div
dec
pusha
mov
push
or
sub
loopne
xchg
xor
mov
hlt
mov
sbbl
add
bound
outsb
popf
outsb
loope
cmpsb
aad
cmc
test
stos
out
mov
pop
inc
cmp
mov
insb
inc
hlt
into
mov
shlb
nopl
ret
jno
sbb
out
mov
int3
mov
test
mov
add
negl
movb
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
xchg
repz
jmp
jmp
popf
pop
subl
mov
lods
repz
xchg
adc
mov
pop
jno
in
or
ljmp
repz
stos
lahf
iret
in
mov
shll
js
adc
jno
jl
push
push
js
inc
or
mov
dec
std
jae
ljmp
fists
pop
sbb
adc
mov
icebp
push
and
push
or
test
jmp
xor
notl
shl
mov
pusha
sub
clc
call
pushf
push
push
mov
pushf
pushf
pushf
popl
pusha
pushl
popl
pushf
mov
pushf
movw
lea
jmp
mov
lea
jo
inc
pusha
movb
mov
push
lea
jmp
mov
pusha
lea
jp
pusha
pusha
mov
mov
mov
mov
push
lea
jmp
mov
test
shr
cmp
dec
mov
cmc
pusha
pusha
sub
pushf
bt
shr
jmp
das
cmc
aaa
mov
shl
mov
pushf
cmp
call
pusha
pusha
mov
jmp
shl
mov
aaa
shl
bsr
mov
test
mov
call
mov
jmp
add
neg
cmp
jmp
call
pushf
call
push
mov
push
jmp
mov
pusha
pushf
jmp
movb
cmp
xor
cmc
jmp
mov
mov
lea
jmp
clc
test
sub
pushf
call
mov
pushf
mov
jmp
sub
jmp
shl
mov
bt
and
add
mov
push
pushf
pushf
mov
pusha
mov
mov
jmp
jmp
mov
mov
jmp
inc
pushf
movb
add
pushf
push
lea
jo
mov
push
lea
jmp
call
mov
pushf
popl
call
mov
pushf
pushl
mov
mov
lea
jmp
jmp
mov
pushf
pushf
mov
pushl
ret
pushf
jmp
sbb
pushf
cmp
mov
bt
pushf
mov
pushf
sub
call
jmp
call
cwtl
clc
mov
test
and
stc
mov
stc
sub
cmc
clc
shl
push
call
call
movw
sub
test
sub
call
pushl
mov
movw
lea
jmp
jmp
pushf
shr
shld
mov
sets
mov
stc
mov
cmp
jmp
pusha
and
not
sub
setnp
bsf
mov
pushf
pusha
add
call
mov
pusha
lea
jmp
call
test
call
mov
pushf
mov
push
lea
jmp
dec
sar
xor
setg
add
pusha
movzbw
push
neg
sub
or
movzbw
xor
rcl
pusha
xor
shrd
mov
test
cmp
pushl
bt
add
call
pusha
mov
pushf
mov
pusha
pushl
lea
jmp
pusha
pushf
pusha
mov
call
add
mov
pushl
pushf
popl
call
sub
jne
pop
neg
sar
bt
pop
adc
pop
adc
pusha
pushf
push
mov
bswap
sar
shr
bt
mov
dec
shrd
xor
bsr
pushl
popf
not
mov
call
mov
pushf
bt
cmp
sub
call
pushf
mov
call
pushf
popl
pushf
mov
call
pushl
popl
pushf
pusha
pushf
pushf
lea
jmp
pusha
pusha
mov
call
pusha
shl
movb
movw
mov
mov
pusha
pushf
popl
mov
pushf
pushl
popl
movb
lea
jmp
setns
bswap
pusha
rdtsc
mov
cwtl
jmp
xchg
mov
pushf
popl
or
mov
ror
xchg
xchg
mov
lea
movzbl
push
or
push
btc
test
xchg
btc
neg
bsr
cmp
push
pushf
pusha
movsbw
or
pushl
popl
ror
pushf
movl
shrd
add
mov
xor
not
xor
setno
bt
jmp
pushf
popl
push
mov
pushf
call
shrd
sbb
mov
call
jmp
call
stc
push
neg
pushf
pusha
xor
pushf
jmp
pushl
popl
push
push
movb
lea
jmp
test
xchg
mov
mov
cmc
test
pusha
sub
push
pushl
jmp
xor
pushf
pushf
test
sub
call
lahf
jmp
pusha
pushf
jmp
pusha
shl
shrd
sub
mov
test
add
movw
pushf
popl
movb
push
pushl
pushl
popl
mov
pushf
mov
pushf
lea
jmp
xor
jmp
push
mov
pusha
mov
lea
jmp
lea
jmp
rcr
bsr
mov
adc
push
mov
add
jg
test
sub
clc
pushf
jmp
pushf
push
pushf
popl
movb
call
cwtl
not
mov
movb
pusha
pushl
divl
call
pushf
popl
pushf
pushl
popl
push
pushl
lea
jmp
pushf
stc
mul
pushf
pusha
movw
pushf
mov
mov
mov
mov
jmp
pushf
popl
mov
pusha
mov
mov
pushf
call
sub
pushl
shr
mov
jmp
ror
bt
movw
pusha
cmp
xor
clc
stc
cmp
bt
xor
stc
clc
stc
cwtl
stc
jmp
pusha
call
xchg
pushf
pushf
pusha
push
movl
push
call
call
jmp
add
jmp
push
mov
movb
mov
jmp
call
sub
pushl
mov
push
push
pusha
mov
lea
jmp
jmp
lea
jne
call
add
clc
bt
xor
movb
cmc
jmp
mov
lea
add
push
push
shrd
sub
lea
rol
mov
cmp
shl
pushf
shr
call
pusha
pushf
popl
pushf
push
push
pushl
popl
mov
push
pushf
lea
jmp
call
mov
mov
lea
jmp
push
jmp
mov
movb
push
lea
jmp
push
movb
pusha
mov
pushf
mov
pushl
movb
pushf
pushf
popl
pusha
push
call
pushf
popl
push
pushl
push
pushl
popl
mov
movw
movb
mov
lea
jmp
pushf
pusha
mov
push
mov
mov
mov
jmp
movb
pushf
popl
pushf
pushl
popl
mov
movw
pushf
mov
lea
jmp
push
pushf
call
cmc
shl
movzbl
stc
pusha
lea
jl
xor
clc
jg
stc
rol
call
add
test
pusha
pushl
popf
pusha
lea
jmp
bt
cwtl
jmp
jmp
pusha
movsbw
mov
inc
not
mov
dec
lea
rol
cmp
stc
lea
adc
and
bsf
shl
jmp
test
cmp
mov
jmp
cmc
sub
stc
clc
and
push
pusha
mov
push
mov
jmp
btc
bt
lea
pushf
push
clc
push
cmp
mov
movw
lea
ja
rcl
bswap
mov
sbb
pushf
lea
das
rcl
bt
sub
xchg
neg
ror
das
lea
lea
and
movzbw
sub
pusha
pushf
movsbw
mov
movsbw
movzbw
pushf
pusha
xchg
not
pop
movzbw
mov
push
pusha
cld
mov
lea
cld
movw
call
pushf
mov
call
jmp
call
call
mov
mov
mov
push
push
movl
pushl
ret
not
jmp
pushf
cmc
bt
lea
bt
cmc
stc
cmc
add
pushf
mov
push
pushl
ret
pushf
mov
push
pushf
popl
pushf
pushl
popl
movb
mov
movb
mov
lea
jmp
push
pusha
mov
movw
call
push
pushf
call
push
lea
jne
pushf
call
pusha
pushf
pushf
call
mov
mov
mov
jmp
neg
movw
pusha
movw
jmp
aaa
aad
cwtd
mov
bsr
test
dec
mov
call
pushf
mov
jmp
pusha
add
cmp
cmc
shrd
jmp
jmp
pushf
movb
call
mov
push
pushf
lea
jmp
pushf
pushl
mov
pushf
lea
jmp
mov
push
call
cmc
call
call
call
call
rcr
call
add
add
movb
mov
pushf
lea
jmp
push
xadd
shr
and
mov
shr
not
clc
mov
cmp
pushf
jmp
dec
mov
rcr
mov
shr
sar
xor
jmp
mov
mov
mov
mov
movb
lea
jmp
pushf
jmp
test
mov
pushf
cmp
pusha
push
sub
cmc
shl
lea
jnp
pushf
pusha
push
mov
call
pushl
mov
mov
mov
pushf
lea
jmp
inc
clc
stc
bt
add
pushl
call
pusha
pushl
mov
pushf
pushl
mov
lea
jmp
push
jmp
add
push
mov
mov
pushf
push
pusha
lea
jmp
pushf
jmp
mov
pusha
lea
js
push
push
pusha
pushf
mov
lea
jmp
pusha
jmp
add
mov
call
movw
sub
mov
push
pusha
mov
pushf
pushl
movb
pushf
lea
jmp
xor
mov
call
add
pushl
push
call
pushf
popl
pushf
jmp
mov
pushf
pushf
mov
movl
pushf
popl
call
xadd
sbb
aaa
mov
xor
and
inc
stc
mov
clc
add
jmp
dec
jmp
mov
pushf
mov
pushl
ret
pusha
sub
test
call
jae
pushf
pushl
pushf
mov
pusha
movb
jmp
mov
push
mov
mov
pushf
popl
push
pushl
popl
pushf
pushf
mov
lea
jmp
cbtw
call
mov
pushl
mov
push
pushf
popl
jmp
pushf
call
mov
call
push
mov
jmp
pushf
movb
mov
pusha
push
mov
pusha
movb
pushf
mov
jmp
bt
push
movl
jmp
pusha
mov
mov
push
mov
pushf
pushl
ret
push
push
call
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
mov
pusha
mov
pushf
lea
jmp
pushf
mov
pushf
mov
pusha
push
pushf
mov
mov
pushf
popl
movb
mov
pusha
pushf
pushf
mov
pushf
mov
mov
lea
jmp
push
mov
pushl
popl
pusha
push
pushl
lea
jmp
movb
stc
cwtl
clc
sub
movb
pushl
call
movl
call
shrd
bswap
cmc
mov
clc
pushf
add
push
pushf
pusha
push
lea
jmp
pushf
popl
push
mov
mov
movw
mov
mov
pushf
lea
jmp
xor
pushf
pushl
pusha
clc
ror
cmc
add
mov
sub
call
jmp
mov
pushf
lea
jmp
sub
pusha
cmc
xchg
pushl
push
test
mov
jmp
rdtsc
sar
pushf
xchg
mov
sub
mov
setp
add
neg
shl
mov
pusha
stc
jmp
xor
call
pushf
bsf
jmp
stc
or
pusha
test
clc
xor
jmp
jmp
pusha
mov
jmp
jmp
clc
pushf
cmp
xor
pushf
rol
bt
test
bt
stc
xor
call
pusha
decl
jmp
call
push
movw
rol
pusha
pushf
call
pop
setns
not
pushf
movzbw
dec
bt
rcl
movzbw
ror
test
sub
bt
neg
movzbl
dec
btr
sub
mov
pusha
clc
call
pushf
bswap
sar
mov
sub
cmc
mov
pusha
call
cmc
call
clc
bt
xor
stc
cmc
cmc
test
cbtw
call
pusha
pushf
mov
pushf
mov
pushl
call
cmc
pusha
add
movb
jmp
clc
test
cwtl
pop
not
sar
pop
shrd
xchg
ror
pop
bt
bsr
shld
std
pop
inc
pop
bt
rol
pushf
std
pushl
popf
lea
push
lea
mov
jmp
pushf
popl
pushf
call
movb
mov
movb
push
mov
lea
jmp
cwtl
pushf
sub
stc
sub
push
mov
pushl
push
pushl
pushf
lea
jmp
mov
pushf
mov
pushf
pushf
lea
jmp
mov
jmp
test
mov
test
cmc
stc
sub
bt
stc
test
mov
cmp
sub
movb
lea
jmp
pushf
movw
mov
pushf
mov
mov
movl
lea
jmp
xchg
mov
cmc
shrd
sub
call
call
pushf
mov
movb
pusha
push
pushl
lea
jmp
mov
rol
call
lea
jne
push
push
lea
jbe
mov
push
lea
jmp
mov
pushf
push
push
lea
jmp
call
inc
rcr
adc
bswap
mov
btc
shl
adc
add
jmp
cmc
xor
pushf
call
mov
push
pushl
jmp
pusha
pushf
push
mov
pusha
mov
jmp
pushf
jmp
or
mov
mov
call
shl
or
mov
or
bsf
jb
clc
mov
cmc
pushf
bt
add
call
setl
ror
movsbw
call
stc
stc
add
clc
jmp
mov
movw
pushl
pushf
popl
mov
pushl
popl
pushf
mov
movb
lea
jmp
mov
pushl
mov
movw
lea
jmp
jmp
sub
jmp
clc
clc
sub
pushf
pusha
push
jmp
pushf
popl
call
pusha
pushl
call
mov
pushf
pushl
movb
pushf
pushl
ret
pushf
mov
pushf
movb
mov
lea
jmp
mov
call
pushf
call
call
cmc
xor
clc
mov
test
push
neg
call
rol
das
mov
pushf
xor
cmc
stc
sub
bt
bt
jmp
jmp
jmp
mov
pushf
pushf
push
lea
jmp
call
xor
pushf
bt
clc
neg
push
bt
call
and
mov
pusha
pushf
pushf
popl
jmp
pushf
xor
movb
clc
xor
cmp
clc
pusha
clc
add
movw
cmp
sub
push
mov
pushf
mov
lea
jmp
pushf
mov
mov
mov
push
mov
lea
jmp
pushl
lea
jne
call
shrd
sub
shld
shl
mov
jmp
pushl
mov
mov
push
movw
pushl
lea
jmp
pushf
sub
call
pusha
mov
call
call
ror
xor
sub
lea
jbe
inc
mov
push
jmp
push
mov
push
lea
jmp
clc
mov
xor
adc
jmp
jmp
jmp
test
movl
add
pushf
movb
cmc
shld
push
pushl
call
btc
stc
cmc
mov
movzbl
movzbw
xor
neg
movzbw
sub
movsbw
rcr
add
pushf
shrd
xor
pusha
movsbw
add
jmp
jmp
ror
rcr
add
push
call
jmp
pushf
mov
pushl
pushf
mov
pusha
jmp
push
jmp
movb
push
mov
jmp
pushl
popf
pusha
pushf
lea
jmp
aas
movsbw
lahf
setbe
mov
cmc
push
xor
pushl
stc
test
sub
pushf
cmp
clc
add
push
jmp
mov
pusha
mov
movw
pushf
lea
jmp
mov
push
movb
pushf
popl
jmp
jmp
call
movb
jmp
call
cmc
clc
pushf
pushl
popl
cmp
jmp
jmp
pushf
pushl
mov
pushl
mov
mov
lea
jmp
pushf
push
inc
pushf
push
lea
jmp
pushf
pusha
mov
pushf
pushf
lea
jmp
xor
movb
push
sub
movb
mov
mov
jmp
push
lea
je
jmp
pusha
push
push
pushl
popl
pushf
mov
pushf
movb
lea
jmp
push
lea
jge
pusha
decl
pusha
jmp
jmp
call
push
mov
not
jmp
pusha
pushf
popl
pushf
pusha
pushl
popl
pushf
push
mov
lea
jmp
mov
jmp
clc
stc
mov
call
mov
clc
shl
mov
test
bt
pushf
stc
sub
call
or
lea
jno
pushf
mov
lea
je
test
test
sub
cmp
clc
call
mov
mov
call
xor
pusha
call
not
call
call
pushf
lea
pushf
pushl
mov
mov
movw
push
mov
lea
jmp
cwtl
mov
pusha
pusha
mov
jmp
not
pusha
mov
pusha
jmp
xchg
lea
movw
mov
std
cld
pushf
cld
mov
pushf
rep
pop
cld
mov
cld
sub
mov
clc
lea
jo
stc
test
popf
pushf
pushf
movb
pushl
lea
jmp
pushf
popl
push
lea
jge
pusha
pushl
popl
pushf
lea
jmp
mov
pushf
popl
lea
jno
pushf
mov
pushf
mov
push
push
pushf
lea
jmp
adc
movsbw
mov
clc
test
clc
clc
add
pushf
pushf
mov
pusha
lea
jmp
push
push
mov
movb
call
pushl
mov
mov
pushf
lea
jmp
mov
jmp
jmp
pushf
jmp
pusha
pusha
mov
push
call
bt
sub
clc
clc
cmp
stc
shr
pusha
pushf
lea
jnp
pusha
mov
lea
jne
push
movw
push
pushf
popl
call
movzbw
inc
cmc
bt
sbb
lea
xor
sub
bsr
movzbl
xchg
mov
jae
rcr
mov
cmc
add
btr
shr
mov
shl
sub
push
pop
not
setg
inc
dec
rcl
ror
shld
shl
sub
pushf
movzbl
lea
bsf
and
mov
jmp
shrd
dec
mov
test
adc
pushf
mov
movb
call
shr
push
mov
pushf
pusha
call
mov
movb
jmp
mov
clc
mov
pusha
stc
stc
xor
call
movb
pusha
mov
mov
pushf
lea
jmp
call
test
clc
call
pushf
pushl
popl
pushl
push
lea
jmp
cmc
movsbl
aam
mov
sub
not
pushf
mov
push
cmc
cmp
add
movw
call
push
inc
pushf
push
push
lea
jmp
push
div
push
call
movw
pushf
movb
pushf
popl
pushl
call
mov
mov
mov
movl
mov
lea
jmp
movsbw
mov
cmp
sub
pushf
push
add
pusha
pushf
pushf
popl
push
movb
push
movb
pushl
popl
pushl
lea
jmp
pushf
pushl
popl
push
mov
lea
jmp
mov
push
pushl
lea
jmp
mov
pushf
movb
push
lea
jmp
pushf
push
mov
mov
push
pusha
mov
pushl
mov
push
pushf
push
pushf
lea
jmp
jmp
pusha
mov
pusha
call
ror
lea
jno
clc
xor
push
xor
cmp
pushf
add
call
call
shrd
lea
mov
call
pushf
pushf
pushf
popl
lea
ja
push
pushf
mov
mov
push
push
pushl
mov
pusha
mov
pushf
pushf
lea
jmp
mov
pushf
mov
pushl
mov
jmp
mov
mov
jmp
rcl
mov
test
pushf
sub
clc
jmp
movsbw
push
movzbw
mov
not
inc
dec
movsbw
mov
pop
not
rol
shrd
rcr
jmp
neg
stc
pushf
test
xor
mov
clc
clc
call
pushl
pushf
popl
mov
movb
pushl
popl
pushf
pushf
pushl
mov
lea
jmp
movsbw
mov
bsr
bsr
cmc
bts
mov
push
not
pusha
pushl
bt
bt
not
clc
cmc
call
mov
call
lea
jns
mov
pusha
jmp
clc
cmp
sub
push
stc
test
pushf
mov
clc
bt
sub
cmc
bt
push
cmc
add
jmp
jmp
mov
jmp
mov
pushf
inc
call
not
pushf
movzbl
add
sbb
xor
pushl
push
lea
rol
ror
bts
add
btc
xor
movsbw
shl
pusha
neg
add
sar
xor
clc
xor
not
cmc
movzbl
jmp
pushf
jmp
call
pushl
popl
pushf
pushf
pushf
lea
jmp
lea
jne
bt
jmp
pusha
pushf
popl
pushf
pushf
pushl
pushl
popl
pushl
lea
jmp
sub
stc
clc
lea
clc
call
pusha
ror
btr
pop
mov
cmc
stc
pushf
add
movw
pushl
push
mov
jmp
add
bt
jmp
cltd
mov
dec
lea
pop
shl
xadd
clc
pop
call
setne
movsbw
push
cwtl
mov
push
lea
cpuid
stc
sub
cmc
cmp
clc
cmpl
jmp
xchg
mov
call
pushf
mov
mov
mov
lea
jmp
sub
call
mov
jmp
call
mov
pushf
mov
pusha
pushf
pushf
lea
jmp
mov
pushf
pushl
movb
push
lea
jmp
cbtw
pushf
call
pushf
pop
mov
call
mov
dec
sbb
dec
dec
sbb
dec
sbb
inc
dec
sbb
inc
dec
sbb
inc
dec
sbb
dec
dec
sbb
inc
dec
sbb
dec
sbb
cmp
addb
clc
pop
dec
sbb
dec
sbb
dec
sbb
dec
dec
sbb
sbb
inc
dec
sbb
inc
dec
sbb
dec
sbb
ss
sbb
dec
dec
sbb
push
dec
sbb
push
dec
sbb
inc
dec
sbb
dec
dec
sbb
dec
sbb
pop
dec
sbb
sbb
pop
dec
sbb
dec
sbb
dec
sbb
cmp
xlat
inc
dec
sbb
dec
sbb
inc
dec
sbb
sbb
dec
sbb
dec
sbb
dec
dec
sbb
dec
dec
sbb
push
dec
sbb
dec
dec
sbb
dec
sbb
dec
sbb
dec
dec
sbb
pop
dec
sbb
sbb
push
dec
sbb
ds
sbb
dec
sbb
pop
dec
sbb
inc
dec
sbb
push
dec
sbb
cmp
sti
cmp
arpl
sbb
dec
sbb
dec
sbb
dec
dec
sbb
ds
sbb
inc
dec
sbb
ss
sbb
ds
sbb
dec
dec
sbb
dec
sbb
dec
dec
sbb
dec
sbb
dec
sbb
inc
dec
sbb
cmp
and
sbb
cmp
out
cmp
cs
dec
sbb
dec
sbb
inc
dec
sbb
ds
sbb
push
dec
sbb
dec
sbb
dec
dec
sbb
dec
sbb
ds
sbb
push
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
ds
sbb
push
dec
sbb
dec
sbb
dec
dec
sbb
dec
sbb
dec
sbb
dec
sbb
ss
sbb
dec
sbb
dec
sbb
dec
sbb
ds
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
dec
sbb
inc
dec
sbb
inc
dec
sbb
ds
sbb
push
dec
sbb
pop
dec
sbb
inc
dec
sbb
dec
sbb
inc
dec
sbb
dec
sbb
ss
sbb
inc
dec
sbb
ss
sbb
push
dec
sbb
cmp
sti
cmp
rclb
sbb
pop
dec
sbb
inc
dec
sbb
sbb
dec
sbb
dec
dec
sbb
dec
dec
sbb
push
dec
sbb
sbb
inc
dec
sbb
dec
sbb
dec
sbb
dec
dec
sbb
ss
sbb
dec
sbb
dec
dec
sbb
pop
dec
sbb
push
dec
sbb
inc
dec
sbb
dec
sbb
push
dec
sbb
dec
sbb
push
dec
sbb
dec
sbb
dec
sbb
dec
sbb
pop
dec
sbb
dec
sbb
cmp
jmp
dec
sbb
dec
dec
sbb
dec
sbb
push
dec
sbb
inc
dec
sbb
dec
dec
sbb
push
dec
sbb
dec
dec
sbb
inc
dec
sbb
ss
sbb
pop
dec
sbb
dec
dec
sbb
dec
sbb
inc
dec
sbb
push
dec
sbb
push
dec
sbb
dec
sbb
inc
dec
sbb
dec
sbb
inc
dec
sbb
pop
dec
sbb
push
dec
sbb
inc
dec
sbb
ds
sbb
push
dec
sbb
push
dec
sbb
pop
dec
sbb
pop
dec
sbb
push
dec
sbb
dec
dec
sbb
inc
dec
sbb
dec
sbb
pop
dec
sbb
inc
dec
sbb
pop
dec
sbb
cmp
and
pop
dec
sbb
dec
dec
sbb
pop
dec
sbb
pop
dec
sbb
push
dec
sbb
dec
dec
sbb
dec
dec
sbb
inc
dec
sbb
push
dec
sbb
inc
dec
sbb
push
dec
sbb
inc
dec
sbb
mov
lea
jmp
cmc
xor
neg
mov
cmc
xor
bt
rol
ja
pushf
stc
bt
xor
clc
bt
jmp
stc
bt
xor
pushf
call
and
call
and
test
cmp
movb
lea
jne
rcr
or
bsf
xorb
bswap
jmp
mov
push
pusha
pushl
lea
jmp
mov
call
call
mov
pushf
call
mov
call
mov
mov
push
pushf
jmp
mov
call
mov
mov
push
mov
call
mov
call
rol
adc
das
mov
pushf
cmp
clc
add
bt
push
test
add
jmp
shr
mov
clc
pushf
pusha
cmp
add
pushf
call
pushf
call
movb
mov
pushf
jmp
jmp
movsbw
mov
setbe
adc
setp
bswap
mov
pushf
clc
add
mov
mov
push
pusha
pushf
mov
lea
jmp
bsr
dec
rdtsc
stc
cmc
sub
jmp
