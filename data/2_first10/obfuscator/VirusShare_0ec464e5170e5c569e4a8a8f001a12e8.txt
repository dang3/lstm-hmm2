add
add
pop
add
sbbb
add
add
add
push
add
xor
add
add
add
add
add
dec
add
add
add
sbb
add
add
add
add
inc
add
add
mov
sub
jg
stos
fcompl
dec
jae
and
mov
js
leave
push
addb
sub
fiadds
inc
int
cwtl
jl
loop
call
cmp
pop
push
mov
mov
stos
xor
inc
bound
or
push
or
or
dec
cmp
outsl
sarb
pop
xor
out
mov
inc
dec
adc
fs
mov
pop
adc
test
test
scas
jp
lods
sbbb
movsl
push
cvtps2pi
fcoms
nop
out
in
es
adc
pop
into
sahf
cmp
fstps
leave
loopne
in
pop
xor
push
xor
sub
jb
imul
and
in
push
xorb
jno
add
jl
test
mov
adc
pop
aam
ljmp
inc
sub
into
aad
pushf
pop
pop
cmp
or
pop
add
inc
dec
push
jge
ljmp
jle
shlb
mov
xchg
mov
loop
int
stc
push
lods
lods
mov
pop
push
add
in
xchg
es
xchg
rcr
stos
sub
stc
cwtl
int3
pop
mov
adc
cld
mov
repnz
jle
inc
add
addl
jmp
lcall
xor
sbb
sub
andl
dec
movsl
bound
xchg
addr16
std
adc
lcall
jle
mov
mov
data16
outsl
mov
xor
dec
cmp
cmpsb
push
fsubl
and
jp
out
iret
pushf
or
movsb
push
popf
cmpsl
inc
mov
scas
adc
jle
sti
sub
loop
lods
ds
dec
jge
push
xchg
adc
test
inc
xchg
stc
mov
push
fwait
inc
repz
xor
cltd
jmp
pusha
ja
pop
pop
xlat
pop
xchg
incl
cli
insb
lahf
jno
pop
inc
xor
pop
imull
cwtl
sub
decb
inc
mov
shrb
jb
xchg
cmp
hlt
sahf
pushf
out
shl
test
inc
cltd
cld
mov
imul
mov
in
or
fmulp
xchg
test
sbbw
sbbl
lahf
mov
dec
xchg
pop
xor
gs
mov
scas
pop
adc
dec
lret
scas
jl
nop
icebp
loope
xlat
jg
call
jne
into
aaa
pop
xor
sub
sub
or
popa
imul
in
xchg
aam
repz
repz
dec
jb
add
mov
fidivs
and
stc
mov
cs
xchg
loopne
sub
aaa
add
inc
pushf
xchg
call
pushf
mov
push
outsl
mov
stos
add
stc
xchg
push
adc
cmc
loopne
pop
mov
mov
adc
dec
repz
sub
dec
pop
fbstp
imul
lahf
bound
pop
out
or
pusha
sbb
pop
int3
add
xchg
jbe
dec
pop
xor
mov
cmp
pop
outsb
aam
sub
and
push
arpl
mov
in
xor
mov
std
fisubrs
fimuls
sbb
mov
pop
orl
pop
mov
outsb
mov
lcall
ja
jmp
test
or
dec
sbb
sub
add
push
adc
add
mov
xor
repz
jbe
js
push
sbb
adc
push
add
lock
out
jecxz
call
nop
push
mov
xor
rcrb
jmp
and
pop
mov
mov
mov
test
xor
mov
jb
test
xchg
cmc
pop
ds
jnp
es
lcall
or
repz
repz
hlt
pop
and
ret
and
addr16
jnp
int3
pop
aas
ljmp
xlat
fimull
sub
dec
lret
out
lahf
pop
dec
lret
xchg
xchg
in
fsubrp
aam
xchg
fwait
inc
xor
dec
testb
addr16
rcll
mov
loop
xor
mov
pop
subl
lock
out
jne
cmpsl
lock
mov
faddl
dec
jg
ficomps
stos
daa
imul
es
aaa
dec
sub
inc
jmp
push
aad
mov
mov
hlt
adc
jmp
cmp
add
leave
dec
inc
mov
loop
sub
push
ficompl
arpl
leave
aaa
add
call
push
lods
fsubrl
or
lcall
loope
xor
pop
sbb
cmc
jp
sarl
imul
xor
jmp
pop
pop
mov
adc
jmp
outsb
pop
push
test
sbb
daa
push
jmp
ja
or
pop
out
repnz
mov
mov
call
repnz
loope
add
rcrl
add
mov
cmp
pushf
xchg
fmull
xor
or
adc
in
cmp
and
lods
fwait
sbb
jge
idivl
mov
mov
mov
adc
fmull
andb
rol
out
sub
xor
push
mov
adc
dec
dec
add
mov
out
enter
xchg
or
clc
add
not
mov
in
mov
jecxz
stc
inc
xor
scas
cmp
dec
push
push
jg
nop
cmpsb
ljmp
xor
sti
in
dec
mov
mov
inc
mov
push
test
cmp
and
repnz
shlb
scas
adc
inc
fwait
and
aad
sbb
mov
push
loope
mov
rorb
push
call
mov
adc
repnz
loopne
dec
out
js
nop
out
lea
adc
xchg
jmp
push
pop
sbb
mov
pop
inc
add
adc
ds
pop
inc
push
push
fdivrs
hlt
push
cmp
sub
pusha
jg
test
dec
out
aas
xchg
mov
jnp
ret
mov
inc
adcl
mov
test
imul
push
xchg
popf
lods
std
ret
push
aas
mov
pop
dec
xchg
hlt
inc
cmove
add
push
pop
jno
push
mov
xchg
int
jb
shll
sarl
adc
mov
or
es
aam
jge
popa
out
rol
dec
lahf
repz
xor
or
jae
cmp
mov
cmp
pcmpeqd
lods
inc
add
dec
xlat
mov
cltd
dec
cmp
lret
push
mov
clc
dec
mov
movsl
cltd
sahf
add
xchg
scas
in
pushf
int3
mov
cmp
dec
js
addr16
mov
out
inc
mulb
mov
and
sahf
sub
pop
pop
cli
fimull
inc
dec
push
mov
in
xchg
xorl
add
mov
sarb
xchg
push
enter
inc
lea
in
cld
jnp
subl
or
aam
cmp
jbe
arpl
outsl
shl
fnstsw
out
push
movsb
rorb
ror
fildl
mov
mov
xchg
ds
jle
pop
cwtl
inc
cwtl
out
fwait
inc
aam
mov
ficompl
out
int
mov
sahf
xor
into
add
enter
out
cmpsb
lds
mov
sbb
sub
mov
push
sar
inc
lahf
outsl
pushf
je
jae
and
jmp
cltd
fs
insb
and
adc
subb
loope
pop
filds
sbbb
dec
das
mov
test
pop
mov
adc
add
pusha
cmp
das
jmp
repz
add
enter
mov
lock
push
sbb
mov
std
stos
pop
lret
scas
outsb
dec
pop
or
add
test
popa
in
push
dec
jg
call
push
pop
popf
jne
popf
es
out
sub
es
mov
test
inc
mov
mov
icebp
cmc
mov
jne
jle
fisttps
cmp
adc
in
and
sbb
and
es
xchg
cld
popf
mov
sub
rcrl
and
mov
adc
pop
ret
jae
fiadds
sbb
xor
movsl
sbb
pop
and
mov
call
add
rorl
jmp
xor
adc
cs
fbld
mov
pop
loop
pop
and
in
into
pop
in
shll
mov
ret
inc
jmp
push
int
pop
shl
xchg
repz
jmp
lahf
mov
imul
pusha
jl
lret
mov
mov
shlb
cmp
jl
jmp
arpl
and
dec
inc
push
pop
or
xchg
bound
aad
push
mov
fcomip
popa
in
rcrl
ds
pop
hlt
shll
cwtl
test
pop
int3
mov
cmove
inc
mov
pop
xchg
lcall
popf
hlt
lcall
je
xchg
xchg
jmp
push
sub
dec
fbstp
mov
xchg
lock
aad
sbb
testb
mov
pop
adc
scas
pop
hlt
aam
adc
pop
ss
sbb
lret
mov
add
and
ficoms
pushf
xchg
test
pop
fstpt
shll
lret
icebp
in
jp
jg
dec
fidivs
or
inc
sarl
mov
nop
out
fistpl
mov
sbb
sbb
pop
push
inc
mov
push
push
and
rep
pop
xor
dec
mov
inc
inc
ret
loope
imul
and
pop
aas
ffree
mov
add
aas
cmp
and
and
int3
push
mov
lock
push
pushf
lahf
bound
xchg
sbb
daa
sbb
fs
xor
push
scas
ret
cmp
movsl
pushf
push
das
popf
xchg
sahf
shll
push
not
sbb
add
rorl
adc
pop
fldt
pushf
jo
xlat
fldl
jmp
icebp
and
push
adc
xchg
pop
xor
ljmp
mov
xchg
push
push
mov
int
dec
push
stos
cs
cmp
pusha
and
out
add
mov
aaa
or
jge
cmp
nop
pop
loop
js
daa
sti
and
add
test
std
push
rclb
imulb
cltd
jae
mov
mov
loope
mov
repz
stc
xor
insb
pop
pushf
inc
sarl
cmc
jecxz
cmp
mov
insl
sbb
out
fptan
add
push
or
and
enter
in
not
sub
sbb
into
cmp
cmp
cs
aad
jne
mov
outsb
lea
mov
xor
outsl
repnz
mov
int
and
insl
data16
sti
repz
xchg
movb
test
cmp
jge
dec
xchg
imull
stos
icebp
cmp
insl
sub
fcomps
mov
jne
mov
aad
sub
test
js
push
loop
jle
mov
popa
or
in
mov
leave
adc
lcall
jb
fcmove
lret
ret
xchg
push
iret
add
mov
cmp
jl
fisttpl
test
pop
fimuls
sbb
int
fbstp
fisttpl
jmp
leave
add
cmp
imul
test
or
iret
ret
aam
lahf
jmp
insb
dec
lds
stos
xor
push
pop
xchg
xchg
cli
hlt
jb
bnd
bound
out
hlt
pop
dec
dec
mov
aad
dec
repz
sub
xchg
jo
cld
in
cmp
insb
les
pop
sbb
pop
pop
test
sbb
aaa
adc
mov
lea
jecxz
mov
push
mov
adc
jns
loop
push
cs
pop
mul
int3
mov
jle
pop
stos
popf
fcmovnbe
mov
enter
adc
sbb
and
mov
ror
insl
inc
shll
xchg
xchg
jmp
shlb
fcompl
loope
add
lcall
jae
and
stos
jb
sarb
fistl
jne
adc
pop
jbe
je
rclb
xor
andb
mov
push
cld
gs
lods
adcb
stc
pop
cld
xor
ret
stos
xor
cmp
mov
sbb
cmp
sarl
and
test
icebp
jmp
in
shll
xlat
or
orl
jnp
adc
lret
popa
ss
pop
insl
pushf
aaa
jle
lret
cmp
mov
pop
jmp
push
sub
add
dec
pop
in
mov
aad
inc
ret
inc
test
add
scas
test
jae
leave
test
cli
adcb
jecxz
int3
insb
sbb
mov
mov
pusha
adc
imul
mov
mov
mov
xchg
mov
gs
adc
xor
arpl
jo
cmp
push
xor
js
jo
loope
out
fnstenv
cmpsb
jbe
sti
hlt
int3
jle
test
sub
push
pop
sub
in
ljmp
cltd
pushf
sub
jbe
sbb
arpl
pop
sub
insb
test
lock
pop
ljmp
fnstsw
aad
bsr
outsb
xor
aaa
sub
jmp
shl
test
inc
lods
int
dec
cmc
stc
data16
mov
push
fldcw
fmuls
push
cmpl
adc
fwait
push
adc
add
xor
ds
xlat
and
scas
out
pop
xchg
test
pop
dec
push
dec
xor
cmp
addr16
pop
cld
sbbb
cmpsb
pop
je
ret
and
xchg
add
leave
or
mov
add
fs
jae
xchg
dec
or
loopne
jle
iret
jb
or
lret
shrl
out
pusha
mov
push
or
xor
xlat
test
stc
sub
or
imul
movsl
jbe
insl
ja
popa
loope
add
sbb
lods
addb
icebp
js
push
mov
call
es
pop
fs
stc
pop
popa
addr16
in
push
scas
ljmp
scas
sbb
data16
cwtl
cmpb
in
imul
mov
lret
mov
lods
pop
addl
ljmp
mov
repz
ds
sub
cmp
std
xchg
pop
pop
jns
imul
shlb
sub
andl
push
fildl
cmc
adc
pop
into
mov
test
subb
leave
dec
repz
mov
sbb
mov
add
popa
adc
cmc
xchg
or
clc
adc
push
setp
inc
jmp
pop
popf
int3
stos
xor
cmc
aas
or
aad
push
jl
cld
jmp
ja
daa
cmpsl
das
mov
and
and
call
fucomip
out
popf
xchg
push
mov
cmpsl
cmp
pushf
cwtl
nop
adc
xchg
xchg
jmp
mov
gs
insl
ss
lret
ret
add
and
js
add
into
loopne
ds
andl
ror
pop
movsl
fstp
fsubrp
inc
mov
adc
jmp
pop
xchg
sub
decb
inc
aas
xorl
cli
fldpi
cli
add
xlat
dec
sbb
scas
cmp
ds
scas
or
sahf
daa
push
into
push
mov
or
or
popl
out
mov
les
and
into
ljmp
loopne
mov
pop
pusha
push
in
mov
cmp
lea
pop
mov
cltd
mov
and
cmpsb
test
pop
pop
inc
cmp
pop
cli
jl
mov
xchg
ret
and
repz
or
out
aad
pop
mov
cmp
sahf
mov
push
mov
xchg
mov
cmpsb
int3
sub
mov
jle
test
sbb
adc
jns
push
dec
push
addr16
push
rcrb
stos
pusha
hlt
push
xchg
stc
and
lods
and
xor
mov
movups
ror
mulb
and
loop
push
rclb
jb
idivb
push
scas
out
push
push
push
adc
mov
or
sbb
mov
lock
int3
dec
arpl
pop
adc
call
and
jle
cmp
mov
stc
addr16
xchg
jbe
pusha
insl
mov
xchg
popf
mov
aaa
jns
mov
xchg
dec
xor
and
repnz
mov
mov
pop
and
insb
mov
mov
jp
inc
leave
pop
push
call
movsl
xchg
lcall
test
dec
out
je
push
jmp
int3
adc
in
jmp
cli
movl
sbb
jb
in
hlt
lea
mov
adc
pop
mov
xchg
mov
mov
sub
shlb
insb
jmp
iret
mov
mov
je
cmpsb
cmp
push
jl
pop
jp
out
loope
data16
fiadds
xorb
lods
jb
std
movsb
and
add
outsl
aad
ds
hlt
xlat
aad
scas
mov
jp
cmp
add
in
lret
or
test
js
orb
ret
aas
int3
cli
int
push
xor
xchg
adc
mov
ret
and
fwait
adc
mov
dec
imul
aad
pop
jae
xlat
sbb
xchg
daa
pop
xor
mov
xchg
stc
sbb
bound
sub
xchg
jnp
mov
jg
scas
sub
mov
sbb
lods
xchg
addl
iret
int
inc
sahf
dec
in
adc
pop
out
sub
int3
inc
stc
push
pop
lea
jp
mov
xchg
and
outsb
cld
sbbb
lods
lahf
pop
outsb
pop
xchg
mov
inc
js
pop
fnstcw
cmpsl
out
in
stos
xchg
repnz
stc
cltd
add
loopne
cmp
nop
popa
adc
outsl
xchg
int
inc
mov
jl
incl
lret
jbe
mov
add
dec
cmp
inc
pop
movsb
xchg
cmpsb
push
adc
jp
shlb
pop
cmp
scas
movsl
sub
ret
fstpt
xor
loop
lret
xor
jle
jp
or
xor
xchg
cwtl
sti
ret
mov
pop
pop
xlat
cmp
mov
daa
aam
test
shr
lock
xlat
fnstenv
inc
sub
int3
push
xchg
mov
inc
push
xchg
or
mov
leave
jge
pop
js
dec
fucom
setg
test
jbe
or
pushf
lret
push
in
sti
push
jg
push
aad
js
daa
in
out
aaa
adc
lods
add
mov
jb
mov
data16
out
andb
push
dec
arpl
xchg
pop
pop
mov
fsubrs
ret
int3
xor
out
sbb
cmp
xor
mov
bndstx
jae
adc
loope
or
adc
test
and
ds
or
sbb
test
cmpsb
push
gs
jae
into
ds
fsubs
push
add
inc
inc
adc
frstor
pop
leave
or
and
sbb
jns
jmp
cmp
cltd
mov
das
cltd
mov
cmpsb
ficoml
or
cmp
movsl
fcomps
sbb
test
xchg
movsw
mov
pop
cmp
adc
xlat
cmp
sub
push
xlat
outsb
stos
lcall
sbb
rcrb
aaa
leave
mov
pop
jno
or
iret
jae
aas
loope
stos
ljmp
or
nop
sub
xchg
addl
dec
and
lret
mov
xchg
imul
mov
out
lcall
test
cltd
mov
pusha
sub
movsb
mov
lds
pop
mov
mov
flds
push
popf
inc
addr16
mov
dec
pop
pop
xchg
xchg
rol
in
jle
cltd
sbb
or
mov
sub
mov
and
sub
sub
jo
cmp
adc
repnz
out
fnstenv
dec
les
in
addr16
enter
push
imul
iret
mov
pop
aam
js
fs
fst
jnp
adcl
push
arpl
sub
sarb
and
jp
dec
daa
push
int
xchg
or
repz
cwtl
jge
or
xor
test
lea
out
mov
xor
lret
adc
nop
imul
and
jp
loopne
hlt
adc
stos
cmc
dec
das
inc
inc
jl
aas
and
lock
cmp
pop
scas
lahf
not
int3
insl
xchg
push
sub
idivb
clc
pop
fs
xor
push
cmp
fistps
xchg
fmull
xchg
rcll
outsb
sub
pusha
lret
lock
cwtl
bound
enter
ds
adc
xor
mov
adc
adcb
movsl
inc
pop
lcall
sti
rorl
xor
filds
movl
lahf
pop
mov
sbb
pop
jae
jbe
loopne
jge,pt
xchg
xor
inc
pop
push
mov
xchg
int
das
mov
int3
clc
addr16
inc
push
cmp
clc
mov
mov
lock
in
pop
arpl
inc
cmp
xorl
and
push
or
fwait
pop
sbb
sti
add
aaa
xchg
cmp
pop
out
popf
outsb
inc
jnp
dec
lahf
cltd
fldt
imul
xchg
jp,pt
mov
popf
addb
mov
insb
pop
lods
adc
cmp
std
add
test
hlt
jnp
mov
dec
ficoml
inc
cltd
add
lds
mov
shl
movsl
cld
ljmp
jb
fwait
mov
mov
dec
mov
adc
inc
push
mov
cmp
lods
call
sbb
adc
stc
add
js
jg
sahf
clc
movsl
loope
fwait
pop
andb
pop
sub
ret
ja
dec
jmp
and
notb
pop
sub
adc
cwtl
or
scas
cmp
or
frstor
sbb
sar
fs
loopne
adc
jmp
xor
xchg
mov
mov
or
jmp
inc
stos
jmp
sahf
jo
popf
sbb
loopne
sub
cmpl
filds
or
call
mov
sub
or
mov
lds
loope
dec
dec
stos
out
pop
xchg
jno
lret
stc
mov
rcr
cmc
iret
inc
adc
cmp
mov
mov
iret
out
sub
jb
or
in
div
lds
pop
sarl
jo
pop
test
dec
enter
sub
rorl
call
daa
lret
xchg
aaa
fistps
je
cli
aad
mov
mov
sahf
xlat
sub
ss
mov
aam
jnp
cmpl
cwtl
loop
xor
pop
mov
mov
xor
ds
test
and
movsb
mov
push
mov
xchg
sarl
push
imul
ljmp
cmpsl
mov
adc
ffree
mov
dec
inc
in
ficompl
add
or
in
sbb
std
icebp
xchg
cmp
xor
add
pop
xor
pop
ret
push
xlat
and
fs
or
adc
jno
ret
mov
jbe
pop
mov
add
sbb
aaa
icebp
mov
cld
fidivrl
adc
ret
push
xchg
scas
insl
out
orb
xchg
in
sub
pop
or
andb
hlt
movb
lahf
out
sbb
jne
mov
add
jns
mov
repnz
aas
dec
pop
mov
cmpsb
xchg
sahf
and
sbb
hlt
fdivl
enter
mov
mov
adc
insb
adcb
out
sub
rclb
movsb
rclb
mov
fcoml
in
scas
rclb
das
pop
fwait
xchg
and
daa
adc
mov
push
adc
inc
push
sub
mov
or
jge
sbb
jns
fwait
mov
dec
call
push
shrl
pusha
xchg
inc
mov
xor
imul
pop
and
imul
or
aam
jo
push
sub
es
scas
or
mov
insl
popa
movd
pop
sti
imul
add
mov
sbb
or
fiaddl
mov
add
jnp
inc
gs
cs
enter
sub
loope
insl
xchg
pop
rep
lods
mov
cmp
std
cmp
out
xor
shll
stos
sbb
int
pop
out
add
mov
hlt
or
fsubrl
bound
push
cltd
and
rcl
popa
stos
popa
adc
cli
scas
lea
lods
cmp
cwtl
mov
pop
push
fistl
loop
dec
and
mov
pop
dec
sub
pushf
out
negb
mov
jb
aas
lcall
enter
outsb
daa
adc
xlat
xchg
out
xor
in
xchg
sar
mov
cmp
jno
movsb
push
mov
insl
mov
pusha
cli
cmp
sbb
jge
jmp
mov
cmp
daa
mov
andb
popf
push
out
mov
call
jge
addl
sbbl
imul
push
add
jg
xor
mov
nop
push
mov
mov
int3
outsl
insb
call
inc
and
lahf
mov
bound
dec
stc
mov
push
icebp
hlt
mov
insl
jl
fstpl
xchg
subl
pop
repz
mov
add
fistpll
popf
push
or
fs
inc
gs
rcrl
sbb
cltd
cmp
rorl
fsubl
pop
aam
pop
aaa
shlb
cmp
lock
jb
pop
lock
repnz
cltd
cmp
add
mov
sub
xor
fsubl
mov
ja
test
cmp
sahf
mov
mov
outsb
test
vmovaps
sbb
cmc
inc
das
pop
aaa
xor
das
std
adc
adc
gs
imul
pop
push
cwtl
mov
jge
in
inc
jno
xor
mov
mov
push
ret
xor
mov
scas
int
xchg
and
imul
mov
push
mov
adc
xchg
dec
sub
sarb
xchg
aad
cwtl
in
mov
inc
int
pop
inc
fiaddl
inc
mov
addr16
jno
dec
gs
gs
repz
and
adc
sbb
mov
montmul
cmpsb
inc
sbb
push
aam
cwtl
nop
or
aam
push
pop
imul
rcll
dec
insb
sub
xchg
enter
xor
cmp
data16
mov
pcmpeqb
sbb
shl
outsb
je
out
jge
mov
outsb
iret
js
or
cwtl
loop
mov
cmp
sub
mov
mulb
leave
lock
sbb
je
sbb
sbbl
repnz
daa
flds
push
dec
and
fnstsw
adc
ds
out
cwtl
push
gs
out
pop
jbe
andb
xlat
jle
aas
out
and
jge
xchg
in
stc
jge
pop
ja
ja
add
sub
xchg
out
sub
mov
push
mov
dec
add
cmpsb
xchg
ffree
inc
pop
xchg
adc
jp
faddl
lea
mov
xchg
cmp
aad
ret
mov
inc
popa
dec
mov
pop
sbb
mov
dec
lahf
xor
cmp
outsb
ss
cs
adc
xor
psubb
movsl
jge
sub
ja
sub
jp
push
dec
xchg
inc
mov
adc
lret
inc
fwait
jecxz
loope
enter
mov
mov
leave
sbb
jmp
iret
xor
sub
push
xor
mov
enter
pop
fisubl
or
jmp
jge
daa
cmp
push
dec
xchg
xor
daa
jle
lods
xchg
pusha
mov
lcall
inc
out
cmp
loopne
lods
inc
mov
jns
daa
jnp
aam
mov
pop
jae
rep
js
ret
dec
xor
lcall
mov
or
lahf
testl
add
jmp
js
fiaddl
movsb
arpl
cwtl
rclb
xor
inc
shl
jno
int3
rolb
pop
sbb
jb
xor
in
inc
cwtl
sti
and
dec
or
inc
les
xor
das
jne
es
mov
sbb
or
cmp
push
cmp
enter
fwait
lahf
push
inc
mov
fstpt
push
and
fsubl
je
pop
jl
data16
jp
jge
or
jle
call
dec
jmp
push
pop
cli
mov
mov
nop
clc
fcmovb
test
pop
mov
jb
clc
in
lds
insb
and
lods
mov
cmp
outsl
push
mov
mov
sbb
jb
pop
sahf
lahf
cmp
xchg
and
pop
ja
std
arpl
addb
rclb
dec
dec
add
std
and
lea
mov
fwait
adc
iret
sahf
pop
push
xor
in
dec
repz
orl
inc
adc
fsts
xchg
fimull
or
add
jbe
das
out
bound
add
lock
push
adc
push
fwait
pop
call
test
repnz
sbb
add
popa
sbb
mov
pop
fnstsw
in
push
dec
push
stos
imul
test
insb
in
or
pop
fcoms
sbb
add
aam
jbe
lock
add
dec
fnstsw
mov
incl
or
jmp
push
imul
not
iret
cwtl
or
sahf
rdpmc
rcl
xchg
jbe
mov
or
cmp
ror
iret
enter
mov
mov
ss
and
mov
xchg
scas
push
ja
sbb
xchg
add
aam
or
and
pop
dec
sarl
jbe
sub
test
movsl
add
sub
arpl
push
sbbl
outsb
cmpsl
fwait
lret
out
or
into
in
loopne
jne
adcl
and
xchg
and
push
push
int
andl
sti
gs
cmp
xor
mov
mov
stos
xchg
fistl
mov
push
notb
xchg
sub
pop
dec
jo
or
out
setg
push
mov
adc
sbb
ja
fs
mov
sub
xchg
js
lret
fs
subl
inc
push
and
mov
fistpll
mov
cs
push
dec
jmp
lds
cmp
bound
clc
imul
and
iret
insb
icebp
mov
clc
adc
sub
in
cmp
inc
jge
push
in
flds
cmp
fdivr
lret
push
adc
orb
xchg
loope
dec
xchg
add
jae
cmp
mov
push
decb
mov
cmp
push
int
cmp
mov
inc
lock
or
aas
mov
pushf
lods
adc
repnz
jns
ss
test
push
test
sbb
clc
in
push
inc
fcoms
jl
les
std
shlb
hlt
lods
or
xor
aaa
adc
push
arpl
cmp
xchg
stos
or
mov
mov
popf
ret
mov
mov
call
and
notl
sbb
mov
ror
inc
push
les
pop
sub
outsl
xchg
scas
test
push
mov
out
dec
shll
and
and
cmp
sub
int
and
rcrb
out
mov
mov
dec
cmp
push
in
aad
cmp
mov
push
inc
shlb
clc
enter
inc
test
and
aam
mov
in
js
in
enter
out
jae
pop
test
movsl
ja
and
sub
sbb
imul
mov
mov
das
outsb
hlt
dec
in
cmp
mov
pop
xor
xchg
aad
push
inc
mov
push
xorb
and
loopne
std
aad
jb
push
dec
mov
adc
fidivrs
sub
xchg
pop
movsb
mov
enter
jle
and
push
popf
fnstsw
das
lahf
xchg
test
aad
mov
stos
or
xchg
pop
jae
loopne
mov
mov
adc
mov
loope
stos
pop
xor
cmpsb
std
mov
mov
push
xor
mov
mov
aam
add
xor
jmp
jp
mov
xchg
pop
cld
jmp
pop
mov
es
or
xor
jg
dec
aas
pop
mov
sbb
mov
mov
or
xchg
shlb
jp
cmp
jp
add
loope
or
cmp
pushf
sbb
loopne
jnp
mov
inc
aam
sub
sub
stos
lods
adc
add
mov
or
mov
aaa
mov
add
outsb
xor
pop
lret
lods
sub
lret
clc
popa
sbb
icebp
stos
mov
jns
xlat
mov
lret
sub
adc
pop
adc
jbe
push
aad
loope
push
push
xlat
cltd
cmp
aam
inc
imul
movsb
out
ffreep
repnz
and
or
sahf
mov
or
xor
mov
add
int3
pop
push
nop
pop
jmp
jmp
xor
and
clc
orl
push
jne
inc
push
jp
or
or
or
ljmp
add
ss
out
es
ljmp
ret
mov
movsb
push
outsl
pop
pop
push
inc
jnp
pop
cmpb
rcrb
or
fs
xor
pop
cli
sbb
push
inc
add
mov
adc
in
push
push
and
sti
sub
xchg
and
cmp
cmpsb
movups
fadd
mov
lods
mov
pusha
dec
scas
mov
shrl
sbb
lret
mov
outsl
add
dec
mov
jno
loop
pop
xchg
in
mov
jnp
xchg
clc
mov
ficompl
mov
inc
into
sub
xor
cmp
xchg
or
adc
popa
inc
fcomp
mov
test
push
fsubl
lds
ja
cwtl
dec
stos
fs
ljmp
jne
ja
push
jb
cltd
add
jno
pop
mov
aas
cmpsb
ret
data16
ret
inc
cld
gs
ja
test
xor
test
mov
xchg
jle
sbb
adc
push
out
sub
cmc
jge
mov
adc
dec
lds
std
add
pop
out
aaa
mov
fsts
jecxz
xchg
pop
sbb
js
adc
cmp
lds
cli
cli
cmc
daa
xchg
shll
loope
pop
scas
xchg
push
mov
sbb
fdivl
iret
sub
das
xor
xchg
lds
or
dec
int
and
shr
sbb
add
sub
nop
std
enter
adc
test
push
mov
leave
mov
add
push
nop
mov
fisubrs
loope
mov
xor
icebp
mov
xchg
mov
rorb
ret
jnp
popa
cmpsb
mov
arpl
xorl
int3
pop
push
rcll
aad
cli
fildll
push
dec
mov
shll
std
clc
or
mov
imul
dec
loopne
or
push
roll
rol
pop
sahf
das
inc
jno
arpl
and
xor
stos
jg
or
push
pop
cmp
pop
lds
adc
arpl
xchg
das
jne
mov
ss
movsb
test
call
cli
fincstp
std
mov
push
ficompl
mov
aas
xor
nop
mov
out
outsl
xlat
fwait
mov
adc
sub
push
bound
mov
mov
scas
push
pop
cmp
mov
es
or
mov
out
xchg
adc
inc
xchg
hlt
jmp
mov
mov
jge
subb
cltd
int3
sbb
mov
and
leave
xchg
lds
in
in
inc
test
add
cld
jecxz
stc
jp
sbb
jnp
mov
out
sbb
push
pop
xor
lds
fcompl
push
and
int3
lods
and
repnz
call
pop
fadds
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
faddl
add
faddl
