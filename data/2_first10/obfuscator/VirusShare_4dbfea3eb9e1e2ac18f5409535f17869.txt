sti
jmp
jno
add
pop
aas
xor
ret
jmp
xchg
mov
and
inc
mov
mov
sti
jg
call
mov
addb
std
and
and
add
dec
or
neg
mov
adc
and
sbb
inc
add
adc
in
jne
into
dec
sbb
and
or
fidivrs
fldl
adc
or
adc
jge
imul
add
mov
inc
inc
sbbb
mov
inc
outsl
push
frstor
inc
orb
mov
push
pop
adc
or
jnp
mov
sub
dec
xchg
addb
fwait
mov
cltd
imul
add
sub
mov
in
insl
adc
inc
or
rolb
push
jae
data16
inc
add
shll
rolb
or
sbb
pusha
add
mov
or
add
pop
mov
insl
in
or
add
imul
pop
pop
add
jge
and
dec
dec
inc
addr16
je
mov
jmp
or
adc
pop
or
cmp
pop
mov
pop
pop
pop
ret
ror
or
notl
pop
pop
add
sbb
movd
fidivl
ret
inc
add
sti
mov
pop
pop
push
adc
ret
inc
xor
es
idivb
sub
pop
pop
ret
and
fstpt
or
in
pop
enter
sbb
add
mov
pop
orb
add
mov
add
adc
ret
fimull
das
fidivrl
mov
cmp
addb
adc
sarl
in
adc
xchg
cwtl
cmp
dec
sbb
out
mov
cmp
mov
sub
mov
and
adc
sbb
imul
push
enter
mov
daa
dec
enter
std
jbe
adc
add
mov
jge
mov
call
aam
lock
cmp
pop
and
outsb
fisttps
not
inc
mov
pushl
ljmp
xchg
cmpsl
and
fimull
dec
and
fiaddl
add
mov
adc
mov
or
add
or
sbb
clc
sub
xor
mov
idivb
adc
loopne
cmp
testb
stc
mov
lock
testb
pop
or
push
and
cmp
jmp
shlb
fwait
popf
std
incl
out
cmp
inc
neg
not
mov
sahf
jnp
sbb
cld
jge
pop
xor
mov
xlat
lock
inc
aam
jnp
fwait
add
or
addr16
jbe
js
outsl
fadds
and
mov
rorb
not
mov
das
lock
mov
adc
fwait
xor
cld
add
rcr
hlt
or
sbb
mov
mov
sbb
xor
cli
daa
or
sahf
dec
sub
inc
push
aaa
fiaddl
test
mov
xor
in
ficompl
fsubs
adc
lea
clc
push
push
call
fs
cmpsb
ljmp
jns
ja
xor
jae
ret
dec
insl
mov
jbe
outsl
mov
daa
jecxz
andb
jmp
cmc
sbb
in
jbe
inc
arpl
adc
push
cld
or
incl
je
shll
add
lret
sbb
pushf
add
push
mov
out
insb
push
add
out
or
fcomp
xlat
je
loope
inc
add
add
xor
je
pop
sbb
faddl
aam
fiadds
xchg
pop
and
fsubs
sub
sub
movsl
add
add
jns
dec
xor
xor
xchg
cs
fsubrl
add
add
das
jg
insl
sbb
and
jo
adc
pop
add
and
data16
add
sbb
adc
imul
data16
mov
push
xor
push
push
xchg
mov
mov
popf
add
add
mov
repz
incl
push
or
sbb
xchg
xchg
push
jbe
add
sub
dec
or
fildll
ja
push
add
add
sub
dec
test
insl
mov
in
add
add
mov
pusha
pop
sbb
add
or
mov
ljmp
pop
es
adc
add
lods
jne
add
insl
adc
add
cmp
mov
das
mov
mov
fdecstp
test
push
pop
out
add
pushl
movups
add
add
add
dec
pop
lds
xchg
incl
mov
cmp
xor
mov
jecxz
cs
shlb
mov
mov
xor
sahf
add
testb
js
lret
or
add
pop
lcall
pushf
mov
lahf
fisubrl
rolb
imul
std
gs
dec
push
aaa
cmp
adc
or
insb
lock
inc
and
stos
subb
xchg
mov
cmp
cs
dec
or
aaa
sub
and
incl
jmp
pop
inc
inc
xchg
test
xchg
pushl
ss
jno
loop
mov
faddl
test
into
xor
add
mov
dec
push
jge
adc
pop
fdivrp
sti
add
sub
adc
mov
pop
mov
jp
xchg
loop
push
fstp
aas
add
jl
cmp
pop
subb
pop
clc
jnp
jp
repnz
add
in
filds
xor
nop
lcall
mov
roll
fwait
test
sub
or
adc
pop
jle
in
mov
add
mov
mov
or
cld
inc
and
hlt
add
push
ficompl
test
or
or
std
add
aas
out
mov
scas
dec
sbb
push
iret
daa
inc
mov
sbb
jg
sub
repnz
mov
mov
lret
stos
cmc
cmc
cmp
sub
ljmp
jle
or
dec
or
jne
nop
jg
in
xchg
dec
pop
icebp
add
loopne
or
in
mov
insb
add
mov
sbb
aaa
xchg
pop
imul
pusha
roll
leave
aad
outsb
jg
bound
sbb
data16
push
repz
lcall
and
loope
dec
xchg
addl
inc
jo
scas
imul
std
in
fisttpl
jbe
js,pt
out
and
sub
les
jp
pop
js
push
daa
int
orl
loope
or
ficomps
lret
div
pusha
cwtl
xchg
lods
jl
inc
xor
mov
std
pushf
sub
lds
scas
cmpsl
lock
cli
daa
test
sub
mov
mov
clc
pop
push
mov
mov
outsl
ja
js
popf
int
pop
ss
stos
xchg
mov
and
fnsave
pushl
push
fimuls
mov
adc
nop
cmp
cmp
lea
cli
cmpsb
xorl
stos
dec
mov
js
fcomps
icebp
into
lahf
sbb
jbe
add
xchg
jbe
scas
repz
mov
test
mov
add
xchg
scas
jecxz
in
shrb
lret
jmp
sub
cmc
pusha
arpl
pop
int
ret
jecxz
mov
hlt
mov
adc
push
pop
or
push
sbb
pop
jle
push
pop
pop
mov
fldl
cwtl
jno
jbe
fnsave
ret
mov
shl
fstpt
mov
xor
inc
int
ja
es
int
mov
aaa
mov
or
out
add
xchg
in
adcb
ljmp
pop
imul
push
adc
add
cmp
mov
dec
mov
pop
sbbl
mov
movsb
cmp
xor
xlat
pop
ds
into
xor
pop
ret
mov
pop
shrl
jecxz
jne
pop
cmp
push
fs
pop
add
cld
push
mov
jmp
push
xor
outsl
out
sbb
push
bound
stc
leave
popf
sub
jmp
and
pop
leave
lds
sub
xchg
sbb
cltd
js
pop
add
fisubl
sar
fistpll
mov
jne
mov
lock
in
in
mov
gs
jns,pt
dec
sar
mov
js
pop
jle
cs
inc
sub
and
cli
fstps
jns
sbb
hlt
lock
or
and
xchg
jg
in
jns
adc
and
mov
fcmovnb
insl
loope
cmp
js
decb
idiv
clc
iret
adc
jnp
add
sub
fadds
repnz
mov
xchg
jbe
fnsave
fucomp
cmp
add
adc
incl
ds
or
xor
mov
inc
int3
dec
add
lret
aaa
mov
imul
shlb
ds
xor
and
inc
arpl
dec
mov
mov
enter
mov
mov
pop
jmp
adc
dec
dec
and
aaa
mov
or
fildll
loope
pop
out
aaa
in
mov
cld
dec
add
and
movsl
mov
push
jmp
sti
shl
pop
mov
pop
outsb
mov
sub
adc
clc
fsts
jno
adc
push
mov
outsb
test
mov
fldt
std
xchg
push
pop
pop
lcall
in
jbe
icebp
testb
fchs
and
and
lcall
pop
jg
lret
xchg
popa
sub
pop
fs
mov
mov
sub
inc
xchg
pop
xorb
js
rcrl
scas
xchg
jmp
push
cltd
in
cli
mov
cmp
xchg
jnp
dec
push
xchg
cmp
enter
xor
sbb
es
pushl
sbb
inc
adc
stc
dec
xor
push
insb
and
loopne
add
loop
aaa
lock
in
add
sti
jo
rclb
adc
sahf
mov
rolb
clc
mov
icebp
inc
jo
or
clc
adc
add
mov
negb
mov
pop
aas
cmpsb
stc
dec
mov
jp
repnz
testb
xor
mov
gs
adc
arpl
loopne
repz
jle
mov
inc
shrb
out
mov
clc
cltd
clc
mov
clc
fidivl
xchg
lcall
test
nop
clc
mov
pop
jl
mov
or
xchg
add
pop
sahf
imul
test
jnp
insb
les
or
scas
fsubrs
aaa
add
or
push
cs
and
cli
sti
sarl
jb
sub
rol
sbbl
cmp
clc
les
xchg
in
xchg
js
in
add
push
les
cmp
adc
xlat
retw
jns
cmp
cli
mov
ret
mov
aaa
ljmp
lds
mov
xlat
insb
ret
popa
mov
push
mov
loopne
sbb
imul
push
jbe
or
rcr
daa
out
inc
mov
ss
jb
and
pop
mov
xor
lods
int3
inc
xor
dec
leave
xchg
push
std
mov
xor
decb
mov
add
popf
cmp
test
add
jne
add
or
jg
mov
mov
adc
cmp
pop
test
dec
cwtl
mov
pop
popa
adc
pop
cmp
lea
sub
outsb
pop
js
mov
cmpsl
push
mov
jg
push
ret
shl
xchg
jmp
shrb
out
xor
test
sub
ljmp
cmc
xor
in
add
jge
insl
out
pop
fcoml
pop
js
outsl
mov
in
adc
cmpsb
push
mov
mov
outsb
jecxz
or
dec
stos
or
lret
push
mov
pop
dec
and
lret
sub
notb
imul
push
adc
call
cmp
or
out
jbe
and
mov
mov
push
push
mov
jbe
jmp
cld
movsl
outsb
cld
jmp
out
mov
add
sub
imul
ljmp
and
sbb
sub
roll
pop
ljmp
push
test
inc
testl
mov
in
sub
lds
xchg
and
repz
subl
add
lcall
mov
stos
cmp
fs
or
mov
mov
pop
mov
xor
loop
mov
sbb
pop
dec
push
call
sub
xchg
mov
ja
push
int3
mov
mov
pop
xchg
pop
lea
test
decl
fwait
and
outsl
data16
ret
hlt
dec
jbe
mov
or
xchg
lcall
idivl
push
jge
mov
stos
jo
leave
or
sbb
adc
or
clc
mov
fcompl
out
sbbl
or
movb
aas
add
fdiv
or
mov
sbb
and
cld
mov
das
dec
leave
cld
cmp
adc
jne
xchg
jp
jnp
arpl
loope
aaa
mov
cmp
pusha
imul
jge
fdivrp
jg
loope
dec
adc
and
dec
mull
nop
adc
pop
call
fisttps
add
ret
cwtl
out
pusha
jo
jg
jmp
ret
adc
or
mov
cmp
repnz
cltd
daa
and
dec
nop
rcl
sub
xchg
ds
leave
jnp
mov
cs
movsb
mov
mov
aas
cmp
divb
push
jmp
mov
mov
jg
sbb
xlat
sub
pop
or
addr16
push
mov
test
push
test
mov
fnclex
mov
push
insb
dec
jo
repnz
push
ds
loop
shr
fcmovbe
add
clc
and
bound
mov
fwait
popf
mov
es
dec
xor
inc
arpl
sub
mov
lock
rclb
fisttps
repnz
imul
loopne
icebp
xchg
int
stc
add
or
jne
jne
mov
mov
jnp
adc
push
sbb
jp
push
sahf
adc
fstl
mov
fbld
pusha
adc
out
mov
popf
icebp
orb
divl
in
xchg
mov
dec
rclb
pop
push
rolb
jo
fldl
aas
and
pop
sbb
sbb
out
or
jle
add
sub
xorb
scas
orb
adc
pop
add
clc
add
negb
icebp
sbb
adc
cmpsb
dec
mov
cmp
dec
mov
add
mov
or
data16
mov
and
mov
ret
add
adc
mov
data16
out
pop
clc
pushf
xchg
je
cmpsl
filds
incl
jmp
and
mov
outsb
sbb
and
inc
dec
fsubr
mov
dec
out
inc
sub
sti
and
mov
daa
sbb
adcb
rcl
ficompl
not
inc
add
mov
negb
fs
mov
xor
and
insb
fwait
sub
out
imul
int3
pop
sti
movsl
push
mov
jecxz
add
add
xlat
xchg
inc
xor
in
pop
clc
cmpb
cli
cmpsb
fdiv
in
fldenv
or
dec
hlt
pop
lcall
and
out
dec
les
push
orb
adc
jne
lods
fisubrs
fsubrs
add
lods
jne
mov
inc
or
sahf
rcrb
loope
mov
and
insl
sbb
mov
fstps
inc
inc
pusha
ret
imul
js
add
jnp
push
mov
or
addr16
adc
dec
nop
stos
js
xor
adc
adc
inc
dec
xor
dec
and
stc
notb
push
add
hlt
add
lock
or
fdiv
icebp
sbb
pop
ret
sbb
mov
xor
in
or
pop
push
mov
test
inc
mov
jne
adcb
fbstp
jo
mov
inc
ret
mov
push
or
or
test
cmp
sbb
shl
mov
js
dec
testb
sub
shrb
repz
insb
lea
mov
aaa
jae
test
xchg
push
push
sbb
push
push
out
frstor
add
mov
dec
sub
push
int3
es
push
js
ret
jle
mov
sbb
mov
xor
cld
int3
imull
sbb
leave
push
push
cmpb
lods
xor
and
inc
and
adc
clc
jmp
xor
dec
mov
leave
ret
cmp
enter
mov
add
cs
inc
or
jno
rclb
mov
in
imul
add
mov
add
iret
nop
std
sbb
stos
bound
incl
or
sbb
jg
sahf
pop
mov
cmp
mov
call
mov
push
push
pop
dec
dec
test
fimull
leave
mov
sahf
cwtl
cmp
ficoms
add
xchg
push
sbb
add
lock
aad
in
xchg
shrl
add
decb
lock
and
pop
pusha
imull
mov
and
adc
push
cli
adc
sub
mov
shr
mov
jne
mov
loope
out
insl
movsl
sub
jecxz
orb
inc
jnp
out
pop
push
sub
lret
std
ja
adc
add
jae
sarl
dec
sbb
pop
sub
fmull
mov
add
mov
push
adc
sbb
inc
sbb
addl
mov
add
ror
fdivrs
sahf
push
mov
sti
inc
mov
jmp
sbb
in
test
rcll
cmp
pop
mov
dec
cld
xor
xor
push
or
or
out
sbb
sub
bound
loopne
lods
sbb
or
cmp
push
inc
loope
mulb
and
push
test
adc
mov
addr16
ljmp
pusha
fmul
push
lods
sahf
cmp
fs
inc
or
idivb
add
pop
fistpll
add
mov
cmp
pop
dec
icebp
dec
mov
jb
dec
pusha
mull
pop
ss
lret
xor
mov
hlt
push
pop
dec
mov
adc
cmp
outsl
inc
repz
ret
add
inc
adc
pop
xchg
fsub
xchg
push
ss
mov
sbb
lea
mov
xor
cmp
fwait
push
divps
pop
aad
fst
jle
or
pop
pusha
in
fisubrl
jae
std
sbb
sbb
sbbb
fcomps
std
mov
fadds
loop
call
imul
scas
mov
jbe
movsb
dec
mov
mov
mov
out
repz
cmp
insl
inc
inc
lock
push
subl
std
jp
aam
inc
mov
shlb
cli
and
adc
lds
or
pop
mov
testb
les
xchg
xlat
and
push
pop
ljmp
std
js
nop
inc
and
bound
insb
pop
sbb
call
push
or
push
add
cli
lods
js
adc
dec
and
ljmp
inc
testb
lret
and
sbb
not
push
testl
rorl
imul
fbld
clc
sar
mov
inc
add
add
jbe
jl
mov
adc
xchg
and
and
loope
push
sar
push
or
xor
or
mov
xor
das
jne
jbe
call
jmp
and
outsl
icebp
in
nop
push
xchg
loopne
fnstcw
repz
insb
add
pop
fisubrl
mov
jp
and
add
movsl
push
inc
lods
scas
mov
imul
pop
js
movsl
sub
jle
movsl
outsl
jecxz
add
cmp
add
scas
fcoms
or
stos
mov
pop
or
call
or
add
mov
lret
mov
xchg
add
adc
pop
xchg
dec
cld
pop
pop
in
xchg
fbstp
adc
jno
fdivrl
data16
loop
gs
icebp
loope
fidivrs
mov
out
pop
stos
dec
jle
inc
sub
movsl
pop
cmp
shlb
ljmp
out
mov
jmp
mov
xchg
mov
or
ljmp
mov
sub
push
inc
jb
or
aad
adc
jo
xchg
adc
xchg
mov
imul
push
div
add
cmp
bound
or
stc
test
dec
scas
cs
sbb
scas
jecxz
xchg
mov
into
inc
jae
mov
iret
mov
mov
mov
push
movsl
jbe
pusha
test
in
cmpsl
inc
cmp
inc
add
mov
js
push
out
jecxz
hlt
pop
pop
jp
cli
cmpl
outsl
push
mov
pop
leave
pop
popa
rcl
mov
xchg
jge
sbb
in
orb
dec
push
inc
dec
and
cld
jns
cwtl
out
incb
stc
mov
fdivrp
int
gs
inc
sub
xor
leave
push
mov
add
fidivrl
lahf
pop
add
cmp
test
xchg
sub
es
bound
mov
jmp
push
inc
fsubl
test
loope
inc
mov
adcl
loop
xchg
push
sbb
stos
aad
std
xchg
xchg
nop
popf
add
fwait
popa
outsl
pop
pop
push
mov
mov
frstor
or
fwait
movsl
out
mov
mov
mov
mov
ret
xor
push
push
sbb
fs
mov
movsl
or
mov
pop
jns
cmp
rolb
fcmove
mov
xchg
sbb
sbb
orl
inc
js
jbe
out
popf
mov
call
out
jbe
mov
mov
addb
fwait
add
mov
push
aam
mov
mov
bnd
jno
outsl
or
push
or
addr16
test
mov
jl
add
ret
out
dec
pop
and
aaa
lock
dec
or
xchg
jb
mov
outsl
imulb
lcall
data16
jae
mov
and
inc
mov
iret
xor
add
sub
jne
int
aad
inc
out
ret
or
mov
xchg
repnz
ret
and
pop
jno
or
xchg
mov
mov
cmp
push
pusha
mov
out
nop
pop
or
icebp
mov
data16
out
arpl
sbb
das
mov
add
movsl
popa
scas
lss
fbld
mov
rcr
scas
fwait
mov
xchg
int3
andb
incl
hlt
push
mov
sbb
push
mov
aam
mov
cwtl
inc
inc
adc
out
sub
in
neg
xor
mov
ljmp
pop
cwtl
jge
cmp
aaa
mov
adc
sub
push
arpl
mov
shlb
pop
add
rorl
jmp
out
callw
xlat
lods
lea
dec
sbb
xor
or
into
mov
xor
jmp
jne
add
add
xchg
mov
or
ret
sahf
ret
mov
add
fwait
rol
je
hlt
sbb
repz
out
int3
mov
jmp
push
sbb
faddp
dec
xchg
hlt
xor
sbb
jecxz
add
inc
and
cld
decl
test
mov
pop
sbb
cmp
movsb
push
dec
fcmovnu
bound
push
fildll
pop
ljmp
cmc
adc
xchg
sbb
test
fldt
mov
push
popf
mov
cld
sti
push
scas
mov
jecxz
jno
out
or
popf
nop
popa
cmpsb
push
xor
dec
bound
xor
sbb
mov
push
xchg
pop
jg
lcall
xchg
pop
hlt
xor
push
mov
mov
pop
cmp
repnz
enter
push
push
mov
test
hlt
mov
ss
cld
mov
repnz
mulb
pushf
sbb
repz
enter
call
out
adc
push
inc
repz
inc
push
stc
xorl
pop
aad
add
fiadds
negl
addb
pop
cmp
lock
pop
or
and
pop
add
fcmovu
dec
push
mov
mov
adc
shrl
add
xlat
push
push
les
pop
cmc
data16
sub
movsb
xchg
fadds
mov
inc
sub
mov
faddl
mov
adc
sti
fisttps
pusha
sbb
imul
stos
int3
mov
insb
cmpsl
and
cs
pop
andb
jns
sbb
xchg
and
rcl
test
mov
gs
iret
aas
inc
les
mov
fisttps
dec
outsl
cmp
push
xchg
pop
mov
pop
cmp
push
mov
stos
movsl
jecxz
sbb
iret
mov
pop
pop
jmp
shll
loop
aaa
add
shlb
push
and
pop
jae
or
rorl
inc
mov
movsb
lea
aam
cmp
add
gs
outsl
ss
mov
jmp
or
shll
xchg
int3
mov
cmpsb
pop
mov
ds
xlat
js
mov
adc
add
xor
das
shrb
mov
xor
fidivrl
pop
add
jns
add
and
cmp
jo
mov
sbb
lahf
push
add
repnz
movsb
xor
add
lock
jge
imull
sti
fwait
cmc
or
aam
sbb
mov
jno
loopne
aas
repnz
or
inc
clc
and
jecxz
hlt
push
pop
sub
aam
cli
mov
xchg
cmpsb
or
push
push
shr
pop
inc
xor
imul
ficoml
add
out
adc
loopne
cmp
fildl
flds
push
mov
mov
faddl
bound
push
mov
xor
pop
clflush
inc
jae
loope
mov
subb
test
jb
in
pusha
fcmovnbe
sbb
dec
andl
rorl
jle
mov
mov
shll
das
cltd
mov
add
sub
outsl
inc
xor
ss
out
dec
loopne
outsb
cmpsl
in
mov
in
ret
in
lret
mov
out
mov
inc
xor
dec
push
adc
stc
xor
push
or
ret
xor
rol
out
jge
add
dec
and
and
inc
inc
jp
rcrl
outsb
sub
xor
inc
xor
sarb
ja
and
jle
aaa
sbb
or
inc
sahf
adc
mov
shrb
popf
outsb
dec
mov
js
push
arpl
add
std
stc
add
jmp
dec
sbb
sbb
jnp
mov
cmp
or
repz
add
dec
lock
sub
sbb
cmc
fdivrl
das
or
notl
pop
popa
out
mov
fstps
pop
or
sub
jp
add
mov
ficomps
jg
mov
and
xor
pop
cmp
mov
dec
jno
mov
lret
ds
mov
call
mov
xor
adc
or
addb
in
sub
cmpsb
repnz
xlat
add
daa
adc
test
adc
imul
iret
cmp
push
out
pop
aas
inc
aam
mov
cmp
mov
or
ret
popa
clc
mov
xor
dec
push
push
out
js
js
lahf
add
add
and
shrb
hlt
inc
cmpsl
and
ret
arpl
out
in
and
or
bound
imul
pop
mov
int3
push
insl
cmc
jg
imull
imul
inc
xchg
subb
gs
cltd
xor
mov
jl
pop
call
es
adc
gs
repnz
dec
clc
or
cmpsb
sbb
call
jg
sbb
cwtl
enter
js
call
push
mov
movsb
icebp
and
aam
shrb
inc
pushf
sub
dec
mov
fsubl
mov
ss
rcrb
lea
pop
push
sbb
push
xchg
jge
dec
xor
mov
shrl
pop
loopne
pusha
das
frstor
loope
cld
push
push
mov
lcall
or
inc
ret
movsl
incb
sub
add
cmpsb
lea
dec
mov
sbb
cmp
jbe
cmpsl
inc
hlt
push
pop
sub
or
pushf
and
sub
push
bnd
mov
in
pop
scas
or
add
test
mov
test
jo
icebp
xor
push
jge
fdiv
push
inc
enter
xor
outsl
mov
jbe
add
inc
cmp
cli
stc
ret
dec
mov
push
cli
cmp
jge
jbe
test
add
add
sbb
insb
test
inc
mov
cmp
dec
out
push
pop
mov
sub
or
pop
shll
imul
mov
clc
in
xchg
cli
int
sbb
xchg
out
dec
sbb
or
fucomp
push
out
dec
jecxz
insb
and
aas
push
cmp
outsb
pop
sub
arpl
ret
test
fnstenv
add
dec
js
stos
in
mov
xchg
sbb
cmpb
pushf
mov
mov
pop
mov
icebp
test
arpl
lock
popf
out
cmp
ljmp
mov
jg
sbb
or
adc
out
cs
or
adc
sbb
pop
and
sbb
rcll
ljmp
ret
lods
rcrl
mov
ja
pop
fstpt
inc
xchg
adc
cld
sub
push
js
jg
std
or
cmp
add
fstps
adc
mov
inc
dec
insb
inc
dec
in
aaa
les
cltd
dec
fdiv
mov
xchg
clc
icebp
fnsave
push
lods
mov
xor
pop
sbb
add
push
jecxz
mov
es
mov
fwait
imull
cmp
lds
adc
mov
dec
jecxz
pop
in
imul
add
sbb
adc
decl
movsb
xchg
jmp
dec
fs
test
jbe
call
mov
adc
ficoml
xor
mov
pop
cld
sub
push
pop
sub
mov
mov
in
movsl
pop
xor
fstpt
or
mov
pop
add
and
popf
mov
pop
push
imull
sub
pop
sub
pop
push
adc
call
call
out
mov
and
mov
add
push
xchg
pop
mov
mov
pop
cli
jle
sbb
push
je
daa
jmp
cld
add
xchg
push
jecxz
jb
mov
es
rclb
or
xor
rorb
aam
aaa
cmpb
aaa
jle
mov
imul
inc
jl
loop
pop
andb
rcr
ja
fistl
lret
or
mov
jb
decl
lcall
mov
sbb
mov
out
std
addr16
jle
testb
fdivl
jnp
xchg
push
jle
test
loope
dec
loopne
adc
or
sub
adc
shl
mov
rolb
sbb
cmp
mov
repz
mov
pop
mov
push
loopne
adc
repz
cmc
adc
cld
lcall
rcll
addl
add
xchg
mov
test
jge
test
fbstp
shrb
rol
aas
jno
add
sbb
push
std
outsb
mov
sub
es
lret
push
adc
inc
mov
lcall
pop
pop
or
stos
push
adc
loop
mov
das
sti
out
mov
jmp
scas
add
cs
jne
pusha
repnz
icebp
inc
push
mov
fbstp
jae
xor
push
mov
outsb
movsl
imul
jle
or
out
mov
xor
xchg
outsb
add
mov
xor
neg
stos
push
mov
xchg
int3
xor
sub
jp
pop
ja
outsl
repz
push
test
fwait
lods
pop
push
push
sub
mov
ja
or
mull
cld
pop
or
enter
xchg
push
pop
jg
les
nop
mov
aad
addr16
mov
jbe
or
xorl
mov
sti
ja
sbb
add
imul
ljmp
std
add
shr
aaa
mov
popa
push
sub
inc
hlt
xchg
pop
inc
sbb
adc
xchg
cwtl
popf
jbe
add
pop
add
inc
adc
clc
sarb
adc
cmp
cmpsl
cmp
lock
in
in
test
add
lahf
sti
int
sbb
mov
test
movsb
pop
adc
dec
rolb
push
sti
push
iret
data16
pop
mov
loop
cwtl
mov
stos
inc
inc
andl
pop
add
fs
and
inc
mov
ret
xlat
loopne
lods
jno
jae
and
or
push
ficompl
fmul
xor
mov
push
pop
mov
dec
outsl
cmpsl
aaa
cmp
jg
cmc
or
aas
adc
and
xchg
in
test
mov
or
sbb
mov
mov
out
and
nop
add
adc
inc
pop
ds
rcrb
or
and
mov
mov
pop
lock
mov
pop
inc
push
and
mov
js
gs
hlt
pop
push
adc
cmpl
ret
jae
ljmp
call
cld
pop
pushf
mov
fldenv
daa
cmp
idiv
sbb
push
call
jmp
xchg
inc
or
fsubs
or
stos
mov
pop
idiv
sub
das
pop
test
add
jne
adc
add
fucomp
rolb
inc
xlat
test
cld
aas
loop
sub
xchg
adc
loop
daa
cmp
mov
ficomps
hlt
xlat
push
and
pop
lahf
imul
je
or
jnp
mov
loopne
outsl
lock
mov
or
cmc
push
mov
jns
pop
je
adc
in
push
add
js
add
pop
inc
xchg
lock
daa
rcrl
jmp
loopne
and
mov
movsb
sti
fdivl
lods
dec
das
jge
mov
adc
adc
mov
cmp
sub
faddl
or
outsl
fisttps
jne
aad
push
mov
jne
sbbb
push
or
outsb
aaa
pop
mov
les
adcl
fidivrl
inc
mov
pusha
lods
int3
psllq
fstl
add
mov
fwait
clc
or
cmp
jae
stos
bound
into
in
repnz
roll
fwait
xor
mov
xlat
sbb
ljmp
inc
divb
mov
cld
add
addb
fsubrl
jg
loopne
cwtl
in
lock
mov
pop
mov
mov
pop
loop
mov
mov
scas
push
push
push
aaa
inc
inc
sub
mov
xchg
out
mov
loope
inc
jne
iret
out
add
jle
test
xor
add
sbb
les
lock
pop
jle
dec
cmpl
addb
push
xchg
mov
push
hlt
sbb
jge
fcomps
adc
cmp
mov
jbe
mov
test
sub
inc
rcr
sbb
fistps
cmp
pop
fisttpl
xchg
ss
cwtl
aam
scas
rcrl
adc
pop
sbb
push
adc
mov
ljmp
loopne
xor
sub
dec
ljmp
sbb
cwtl
test
push
cmp
pusha
jne
mov
in
leave
mov
xor
and
cmp
jmp
mov
or
fwait
ja
out
mov
in
cmp
icebp
mov
xor
jne
sbb
dec
and
ss
jmp
or
xchg
pop
in
ss
lahf
enter
adc
sbb
shll
push
or
and
orl
outsl
call
stos
repnz
push
jo
test
cmp
mov
cwtl
insl
or
scas
hlt
mov
sbb
ljmp
jle
xor
dec
jnp
or
xorb
pop
loope
pop
xchg
xchg
pop
outsl
jne
imul
xlat
sahf
loop
outsl
imul
notl
lods
subb
loop
shld
push
cmp
dec
and
pop
mov
mov
dec
push
add
push
in
mov
push
sbb
push
mov
pop
adc
lock
imul
xor
incb
xchg
loop
lret
ss
ljmp
test
mov
and
test
jle
jns
sbb
stos
into
movsb
shlb
mov
push
sub
repz
pop
insb
xor
ja
jp
jg
push
insl
mov
ret
inc
mov
cmp
mov
in
decb
push
xor
jg
imul
add
cmc
push
ret
push
mov
sub
jge
rorl
insb
jl
pop
pop
fisttps
mov
push
add
sbb
push
pop
daa
out
js
rolb
stos
xchg
xor
jne
addr16
jns
dec
mov
dec
jmp
mulb
out
jmp
or
pop
adc
xchg
incl
or
fmull
loop
jae
xchg
mov
jle
xchg
adc
sarl
addr16
outsb
das
addb
mov
cltd
fsubs
cmp
mov
xchg
jg
xor
lds
xor
add
fmuls
js
ret
or
add
and
inc
dec
sub
sub
adc
sarl
int
pusha
sbb
repnz
rolb
push
and
xor
mov
inc
incl
pop
in
add
mov
add
jl
lds
or
aaa
or
mov
roll
test
pop
cld
and
mov
imul
loopne
sub
add
ljmp
or
addr16
cmpl
sub
inc
inc
xor
push
loopne
inc
push
adc
inc
add
or
fists
xchg
not
cmpsb
lock
add
aas
lds
xchg
pop
movsl
fiaddl
mov
dec
hlt
push
mov
push
add
or
and
inc
fistps
sub
ja
add
in
push
je
cmp
jae
ret
mov
pop
pop
or
insb
inc
or
clc
repnz
xlat
sti
xchg
xchg
ljmp
fmuls
push
pop
inc
dec
aaa
mov
xor
shlb
aaa
push
lock
push
fsub
arpl
cli
in
add
inc
arpl
cmp
sub
xchg
mov
adc
inc
pusha
or
and
sahf
add
add
add
jge
in
and
popf
fdivs
adc
xchg
addr16
clc
and
mov
mov
popa
fcmovnb
sub
jmp
xchg
inc
pop
aaa
inc
xor
pop
jl
add
in
or
nop
jnp
and
cmp
xchg
shll
fcoms
adc
test
clc
jae
in
jae
xor
ja
xlat
push
and
push
mov
lds
and
push
vpshld
outsl
inc
xchg
jne
pusha
imul
xchg
jge
and
xor
mov
mov
mov
sbb
inc
out
dec
aas
incl
test
popf
sub
mov
lock
adc
sbb
fisttpl
sbbb
aaa
xchg
addr16
fucomp
loopne
mov
lds
sub
push
dec
pusha
or
fildl
pop
xor
jb
or
push
test
fldcw
hlt
cmp
mov
xchg
dec
das
test
fidivrl
xor
dec
xor
inc
xchg
cmp
sbb
jl
push
pop
cmp
popf
lods
in
inc
aaa
add
in
ret
adc
pop
cmp
jne
fidivl
js
mov
movsb
sti
icebp
movsb
pushl
aaa
cmc
mov
lea
dec
inc
mov
and
inc
adc
add
fstl
sub
ljmp
jne
adc
jg
daa
leave
sub
pop
addb
shlb
add
daa
inc
xor
in
jg
jg
mov
out
push
icebp
and
lea
lcall
std
into
movsl
dec
dec
jnp
pop
pop
mov
sbb
xchg
clc
iret
cmp
mov
mov
cld
test
push
sub
add
push
pop
das
jmp
daa
ret
aam
push
jle
addl
in
pop
mov
mov
lods
popa
or
or
js
pushl
jl
sbb
cmpsb
or
bnd
cmpsl
or
leave
popf
test
mov
mov
mov
jge
push
aas
cmp
sbb
mov
imulb
jle
dec
pop
fstl
xchg
xchg
lcall
pop
push
mov
int3
cmpsl
add
and
loope
sub
mov
or
fsubr
adc
mov
testl
fs
push
test
mov
pushf
xlat
mov
std
test
les
xchg
fidivrs
ret
dec
lahf
xor
in
lods
mov
jnp
mov
push
lock
sub
icebp
xchg
sbb
mov
mov
mov
pop
in
cmp
inc
lds
adc
out
idivb
bound
outsl
push
test
add
gs
sub
inc
cld
test
xor
mov
sarb
loop
data16
push
add
stos
sbb
int3
dec
fsub
adc
rorl
lret
xchg
pop
inc
jbe
cmpsl
lcall
add
pop
pop
clc
push
scas
inc
enter
ja
jno
lcall
in
gs
cmc
test
mov
stos
lds
push
adc
mov
dec
mov
or
mov
mov
mov
je
ljmp
jno
jmp
loop
xchg
fbstp
push
stc
out
push
mov
loop
movsl
pop
mov
loope
xor
cmc
mov
movsl
xchg
lahf
adc
mov
inc
dec
sbb
mov
xlat
cmp
pusha
movsl
push
or
decb
mov
pop
sub
rolb
mov
jno
pop
loop
es
test
or
and
movb
xor
ret
in
aaa
shl
xor
ja
outsb
in
inc
or
dec
lods
mov
fmuls
decb
ret
inc
pop
push
mov
aam
fdiv
test
ja
mov
dec
push
mov
mov
mov
add
pop
pop
ret
mov
dec
dec
xchg
sbb
mov
ficoml
cmp
sbbb
mov
shlb
in
enter
kmovb
adc
push
decl
cmp
push
popa
sub
ss
call
mov
scas
popa
pop
int3
mov
push
clc
mov
mov
fimull
repz
sub
aam
outsl
fs
dec
mov
ss
test
das
cmc
mov
push
inc
js
int3
pop
test
cmp
cmp
add
test
mov
xor
fidivl
mov
xchg
push
sub
mov
shrb
dec
xorb
cmp
loop
dec
jge
test
mov
movsb
adc
cld
mov
test
dec
sarl
fcompl
arpl
jno
inc
dec
aaa
sub
loopne
jp
mov
push
insb
test
jmp
cltd
cmp
mov
mov
clc
push
push
mov
lds
cmpsb
enter
cs
dec
mov
xchg
movsb
inc
in
adc
sub
add
rclb
or
xlat
jl
dec
test
hlt
dec
movsl
pop
push
pop
and
mov
sub
push
push
pop
mov
cmp
xchg
orb
cld
xchg
add
cld
aaa
repnz
iret
hlt
outsb
lahf
inc
lret
movsb
pusha
bound
push
aaa
rorb
sti
jne
and
fcompl
shl
xchg
rolb
out
sub
js
mov
or
call
incb
movsl
cmpsb
xchg
xor
aas
das
rcl
xor
or
icebp
cmpsb
das
cld
adc
mov
sub
inc
adc
sbb
das
mov
movsl
push
nop
stos
fwait
jg
jg
mov
xchg
mov
call
inc
daa
xchg
aam
push
adcl
stc
lock
fldenv
les
ficoml
fcmovnbe
mov
sti
xor
cld
mov
call
adc
or
mov
xor
add
sbb
adc
stos
or
loopne
and
mov
mov
jmp
xor
mov
inc
add
or
aaa
outsb
loop
sub
aaa
mov
cld
add
and
dec
pop
call
mov
jno
pop
and
push
cwtl
and
push
movl
xchg
add
sub
mov
scas
loopne
adc
aas
or
repnz
inc
or
jge
out
test
mov
adc
push
mov
and
std
push
lds
xchg
mov
mov
pop
roll
pop
je
mov
pop
es
nop
stos
add
add
xchg
imul
push
out
push
fisttpll
out
add
movsl
sub
fsubr
in
lcall
lret
sub
mov
popa
push
int3
push
outsb
iret
mov
mov
mov
sbb
mov
int3
popa
fs
adc
push
int
push
push
enter
andb
mov
or
and
sbb
pusha
push
aaa
xor
cmpsl
sbb
incl
repz
and
or
adc
sub
test
js
fidivrl
mov
inc
jmp
outsb
push
pop
ss
into
jae
fcomip
test
add
inc
cmpb
sbb
push
lds
mov
xor
push
fdivr
decl
in
es
push
mov
fdivl
mov
mov
mov
lea
pop
add
sahf
push
adc
add
repz
int3
icebp
xchg
ss
push
pop
pop
add
pop
mov
aam
dec
xchg
fldl
add
test
add
int3
jb
out
or
dec
daa
or
sbb
mov
xlat
enter
in
xchg
leave
push
inc
pop
int
ljmp
popf
push
shl
dec
mov
and
andb
cmpsl
pop
ret
add
add
outsl
lahf
stos
cmp
adc
repnz
mov
stos
xlat
shr
cli
arpl
cs
and
arpl
mov
dec
pop
sub
daa
pop
mov
add
pop
add
xor
je
test
cwtl
cmp
jae
push
fidivrs
cld
add
add
int3
loope
lret
int3
dec
push
and
add
xor
dec
add
or
cwtl
ret
arpl
mov
sahf
push
adc
or
adc
cltd
mov
fcoms
xchg
loopne
in
adcb
fadds
les
pop
jb
adc
clc
mov
pop
repnz
xchg
or
leave
cld
fwait
movsl
mov
inc
sub
mov
jne
int3
push
cmp
test
adc
sbb
xchg
sbb
add
incb
add
out
cs
or
adc
pop
or
in
cwtl
mov
push
push
loopne
movsb
mov
je
mov
idivb
aad
jno
or
jg
xchg
in
shlb
cmp
xor
mov
js
and
sbb
shll
mov
aaa
imul
xor
and
sub
lcall
cld
xchg
stos
outsl
imul
sbb
mov
mov
xlat
aaa
scas
cwtl
or
fnstcw
aam
add
pop
fadds
cmp
sbb
and
fsubr
push
and
add
iret
cmp
mov
and
jp
jecxz
aam
das
pop
adc
fs
fisubrs
and
lods
aam
or
testl
ljmp
repnz
and
stos
aam
daa
out
loop
insb
fildl
orb
hlt
cwtl
arpl
daa
sbb
loopne
sub
adc
inc
jl
mov
test
add
fs
fbstp
and
aam
daa
xchg
and
add
pop
hlt
popf
add
or
aaa
sbb
push
push
mov
xchg
ficoml
mov
shr
js
mov
lahf
aad
and
adc
lcall
lock
mov
or
jb
cs
jecxz
bound
scas
lcall
and
push
mov
fisttps
ret
jg
and
out
mov
or
rorl
or
mov
jmp
sbb
lahf
cmc
je
dec
adc
sbb
ret
loopne
mov
shrb
lock
push
jmp
dec
in
add
ret
or
add
sbb
popf
addl
aaa
xor
rolb
test
ss
in
les
or
orl
adc
cltd
fstpt
cwtl
stos
pop
sbb
xchg
pop
or
mov
or
cld
data16
jle
xchg
dec
fisttpl
jnp
jne
scas
jb
mov
aam
mov
mov
enter
xchg
shlb
loop
dec
add
adc
loopne
adc
pop
jl
int
add
gs
ss
xor
repnz
jnp
test
inc
testl
ficompl
jb
xchg
les
lret
insl
add
xchg
mov
cmp
inc
out
or
mov
and
mov
push
and
sbb
add
pusha
cmp
push
jb
fstpl
cmp
add
lea
push
push
lret
mov
xor
sub
imul
cwtl
push
fildll
pop
mov
roll
xlat
sub
jbe
decl
cld
fwait
and
out
fistl
test
rolb
cmpsl
sbb
dec
sbb
ljmp
test
data16
subl
jno
insb
jmp
sub
or
shrl
jmp
dec
cmp
popf
aam
cmp
mov
xchg
and
in
loopne
loopne
mov
adc
pop
or
movsb
clc
fsubrp
lahf
ds
mov
incl
sub
loop
and
pop
in
repnz
frstor
cs
jae
inc
and
leave
xor
cmc
sbb
shll
loop
in
in
icebp
or
adc
shl
sbb
aam
hlt
xchg
gs
pop
test
fidivl
es
pop
subl
adc
xlat
lods
mov
js
adc
das
dec
and
push
icebp
sbb
inc
or
cwtl
rcrl
dec
inc
xchg
mov
dec
jg
mov
xchg
stos
push
cmpb
pushl
movsb
push
fdivr
xchg
dec
jne
in
dec
pop
rcrl
mov
pand
das
sarb
jno
add
xchg
test
ja
xor
adc
jns
mov
push
add
data16
push
pop
mov
subb
ds
hlt
fbld
inc
jns
sbb
insl
sar
rcrb
enter
jbe
popa
loopne
in
inc
inc
hlt
call
js
in
aaa
add
inc
icebp
repz
jg
cmc
int3
add
cld
xor
cmp
push
sti
add
lods
jle
and
in
jecxz
cmc
lods
cmp
fistpll
int3
add
and
shrl
pop
ljmp
adc
mov
je
incb
scas
mov
or
add
popf
incl
add
cmpsl
push
fsubrs
ret
subl
dec
mov
std
inc
inc
mov
dec
and
or
pop
mov
das
adc
mov
add
lds
adc
cli
outsl
rorb
pop
add
mov
and
daa
push
mov
xchg
arpl
xor
cmp
and
imul
jg
push
xor
inc
jl
sti
adc
adc
imul
jg
iret
push
ja
cmp
das
dec
inc
push
lahf
push
add
sub
mov
xor
xchg
stos
and
in
ret
cmp
bound
add
mov
lds
aaa
rcr
sbb
fidivs
add
xchg
bound
std
fldt
adc
pop
xor
and
mov
out
dec
cmp
sbb
and
add
add
decb
add
sbb
adc
pop
sub
sahf
mov
push
dec
add
pop
aaa
inc
jg
cmpsl
xor
mov
ja
lea
add
out
cld
cmp
push
push
loop
adc
lock
std
mov
addl
mov
or
mov
lret
mov
fdivrp
mov
movsb
mov
or
enter
jns
xor
jo
pusha
lcall
fistps
jg
mov
stos
dec
cmpsl
int
push
arpl
fadds
jmp
mov
sub
test
mov
jp
pop
pushf
cli
inc
jl
pop
sub
mov
or
and
sub
aas
in
pusha
test
int
roll
lods
movsb
or
or
das
insb
inc
shll
add
decl
sahf
ficoml
orl
lock
ljmp
movsl
mov
dec
dec
jg
mov
inc
lcall
sahf
enter
xor
shrb
test
outsl
incl
add
stos
add
xchg
pop
stos
push
mov
gs
stc
cmc
daa
pop
push
clc
or
mov
mov
sub
pushf
std
push
lret
mov
imul
clc
fisttpll
sbb
pop
ds
rorl
adc
sub
add
xchg
in
shrb
pop
clc
out
push
inc
cmpl
and
lcall
cmp
dec
repnz
jne
inc
push
push
dec
icebp
mov
lock
icebp
or
push
outsl
cmpsb
cmp
cli
add
sti
add
dec
sub
and
mov
jns
xor
loope,pt
push
cmp
div
inc
and
mov
mov
mov
mov
xor
sub
mov
pop
mov
mov
pop
das
add
scas
pop
pop
fists
jae
sbb
and
push
mov
fldenv
and
push
mov
or
mov
loop
add
pop
fwait
mov
adc
jnp
stos
addr16
add
daa
leave
dec
add
lds
mov
insb
outsb
lcall
ljmp
jmp
stos
pop
lods
or
and
and
rcl
or
gs
jnp
adc
pop
std
push
add
outsb
lods
rorb
or
call
mov
adc
dec
stos
push
xor
dec
pop
sti
push
xor
pop
add
fsubl
push
sub
mov
dec
push
sbb
fs
mov
jl
aaa
test
mov
and
mov
cmp
test
rcrb
or
push
dec
sbb
mov
mov
mov
fwait
push
roll
neg
cmp
lock
and
inc
out
add
stos
mov
xchg
sub
sbb
push
shlb
mulb
aaa
test
mov
jge
rcl
adc
inc
xchg
pop
xchg
jg
mov
fsub
or
movsb
bound
push
and
xchg
cs
jb
push
stos
pusha
stos
stos
adc
clc
arpl
add
mov
adc
cmp
pop
push
scas
flds
enter
and
testl
and
dec
out
fwait
add
mov
test
pop
pushf
mov
aaa
adc
jns
ret
dec
mov
dec
sti
lret
or
or
mov
int3
lret
jbe
aam
inc
jp
lret
xor
hlt
dec
stos
pop
adc
adc
aad
test
movsb
jge
inc
jecxz
sahf
in
loop
sbb
test
jnp
adc
add
aad
out
push
mov
clc
in
add
fldcw
xchg
clc
in
sub
push
and
and
cmp
scas
stos
adc
repnz
scas
push
leave
push
push
sbb
loope
xchg
ja
sbb
or
imul
js
pop
push
mov
jecxz
imulb
mov
ja
cmpsl
test
add
ret
inc
xchg
xchg
xlat
and
fdivrs
mov
mov
loopne
jge
add
repz
les
mov
fisttpl
pop
lock
xor
cld
clc
fcompl
pop
cmp
mov
mov
inc
js
std
fisubs
bound
lods
mov
ret
dec
push
push
pop
mov
inc
inc
enter
ss
jle
dec
add
pop
jne
xchg
dec
in
fiadds
in
sub
sub
or
xchg
mov
adc
arpl
cld
add
dec
xor
fcmovnb
out
xor
adc
sbb
call
insb
push
inc
movsb
push
ret
and
cmp
push
sarl
imul
add
mov
fsubr
inc
mov
gs
xor
test
or
mov
out
pusha
sbb
mov
sbb
notl
outsb
xchg
and
adc
mov
inc
pop
vcvtdq2pd
mov
push
std
mov
jl
decl
push
xor
mov
pop
clc
push
aad
leave
or
ljmp
mov
and
add
ret
popa
scas
mov
push
mov
aas
adc
pop
mov
jne
addr16
neg
pop
mov
mov
and
stos
or
in
ds
or
cli
xchg
jae
inc
loope
and
fnsave
mov
repz
inc
out
sarb
movsl
mov
pop
shr
repz
xchg
cmp
fsubl
outsl
aas
adc
ss
sub
and
rorl
dec
push
and
stos
sti
xchg
clc
jg
xor
lock
cmp
addr16
cmp
scas
std
test
pushl
jg
stc
adc
xchg
inc
adc
aaa
xchg
cli
ljmp
pusha
aaa
divl
mov
push
js
mov
cmp
ret
push
push
sahf
js
push
outsl
icebp
mov
sti
cmp
stos
pop
pop
xchg
add
add
push
dec
inc
mov
mov
bound
pop
fdivr
jmp
lret
ljmp
sbb
or
dec
leave
lods
lds
orl
jmp
lea
add
jb
and
inc
add
add
push
jne
adc
bound
insb
pop
xor
inc
popf
push
cmc
insb
push
and
pop
sahf
or
pop
and
fsubrl
xlat
fists
cs
dec
bound
adc
xchg
test
dec
mov
sbb
cmp
sub
out
test
fiadds
add
shl
mov
divb
rcrl
sti
xor
mov
or
jg
and
pop
in
pop
fwait
mov
sub
add
mov
lret
outsl
lret
outsl
or
jo
xchg
sub
fwait
stc
pop
push
cmp
in
xchg
or
mov
cli
mov
arpl
outsb
lds
push
adc
cmp
sbb
test
int3
xor
dec
or
push
loope
dec
movsb
jo
insl
add
pop
mov
ret
pop
sbb
lret
mov
aam
mov
lret
cmp
push
fadds
push
cmc
fisubrl
pusha
add
mov
loope
mov
ret
sahf
xor
cmp
loop
push
push
es
cmp
ja
sbb
jbe
adc
aad
pop
cmc
es
jno
xor
cltd
lcall
pop
sahf
cwtl
fisttps
enter
add
mov
adc
xchg
push
sub
mov
sbb
sbb
call
out
mov
stos
je
push
jo
or
jne
sub
and
mov
test
jmp
sub
add
inc
shll
fisttpl
xchg
rcrl
lcall
repz
jl
mov
sub
add
xor
and
add
push
adc
jle
mov
je
cmpsb
ljmp
pop
lock
sub
mov
jne
push
cmc
insl
sbbl
adc
sub
sbb
sbb
sub
jecxz
jl
dec
adc
jno
mov
das
adc
addr16
shrl
fldt
ja
push
add
add
pop
xchg
aas
dec
mov
and
xlat
pop
orb
fdivp
fs
addr16
and
xchg
sub
pop
insb
dec
pop
sbb
or
jno
dec
jbe
add
jl
jb
in
pusha
loope
aaa
sti
and
push
aam
adc
in
mov
lods
mov
pop
cld
insl
jecxz
xor
ss
cmp
add
lcall
repnz
js
lock
xchg
nop
mov
pop
shlb
leave
dec
fadds
arpl
xor
je
pushl
movsb
rolb
loopne
sbb
je
nop
jp
mov
or
fstpl
xchg
inc
xchg
subl
add
pushf
lahf
popl
lds
inc
cmp
mov
cmp
mov
xchg
push
rorb
fisubrs
shll
and
inc
sbb
dec
neg
pop
or
inc
decl
push
xor
pop
xchg
das
xchg
aad
ljmp
xchg
jge
push
out
mov
pop
mov
outsb
clc
pop
test
push
sub
jno
mov
int3
or
ret
pop
add
pop
pop
mov
xor
gs
push
in
rorb
insl
cmp
xlat
xor
pop
fisubrl
into
push
mov
or
movsl
movsb
sbb
and
fcmovnb
incl
lret
std
sbb
and
mov
fbstp
cmp
aam
aam
aas
mov
add
cli
jno
ret
jl
pop
dec
mov
sbb
insb
inc
fwait
pusha
sub
cli
sbb
and
xor
nop
mov
cmp
inc
stos
dec
stc
and
repz
sti
nop
fsubl
imul
fistpll
jo
ja
mov
addr16
add
dec
orl
pushl
fstps
jp
mov
cmpsb
or
mov
and
out
arpl
ljmp
loop
bound
imul
and
push
outsb
bound
lock
mov
outsl
aas
imull
setle
dec
dec
xor
push
mov
add
lods
mov
cmpsb
cmp
mov
sbb
and
cwtl
xor
test
std
add
pop
out
arpl
add
cmc
test
sub
cmpsl
clc
test
ds
push
dec
ljmp
mov
add
pushf
mov
or
fidivs
pusha
iret
movsl
cmp
or
pop
inc
adc
sub
pushf
lret
lods
sbb
inc
fs
dec
les
clc
mov
dec
mov
pop
cmp
pop
lcall
notb
sub
inc
int
or
hlt
fs
push
adc
ljmp
jno
fdivrs
jge
and
roll
imull
pop
inc
js
mov
ja
dec
dec
inc
jg
and
outsl
cli
adc
cmp
test
push
inc
adc
and
rcl
lds
lahf
lock
aaa
dec
clc
pop
lods
outsb
mov
sbb
in
outsb
dec
mov
in
or
lods
mov
add
int3
or
sti
lahf
repnz
mov
adc
cmp
jmp
xor
clc
xorl
not
ret
iret
pop
add
pop
lea
sti
inc
and
test
and
xchg
cwtl
pop
fistpl
pusha
out
rcrb
or
mov
es
pushl
xchg
add
lods
enter
pop
mov
out
push
cmpsl
dec
es
xchg
and
dec
mov
out
daa
jp
add
mov
pop
mov
jnp
or
dec
jecxz
mov
daa
roll
xchg
mov
xor
mov
mov
insl
jl
insb
repz
mov
lret
add
adc
inc
mov
add
sbb
push
push
dec
cmc
icebp
lea
cmp
fcmovnu
mov
test
dec
sub
dec
in
dec
or
test
int
mov
shll
imul
lret
inc
jne
jle
xchg
mov
jnp
inc
insb
dec
ret
rcrl
cmp
xchg
scas
sarb
clc
iret
sbbl
and
dec
mov
and
xchg
pop
jle
out
into
sub
popl
dec
add
jns
push
cmpl
insl
pusha
out
ss
mov
fsubrs
repnz
jb
lret
add
mov
adc
das
jo
push
or
xchg
mov
mov
shll
rclb
sub
xchg
mov
push
decb
iret
or
leave
dec
and
inc
icebp
insl
cmp
rorl
jbe
and
pop
int3
mov
incb
pop
or
shrb
enter
mov
jae
and
dec
lock
push
mov
or
lock
shll
cs
mov
fbstp
stc
pop
icebp
sbb
fbld
fwait
pop
jo
popf
stos
xlat
aas
repz
mov
push
mov
scas
inc
and
or
mov
inc
sub
outsb
arpl
mull
insl
adcb
test
xchg
adc
sbb
sbb
fcmovnu
dec
int
es
add
mov
das
insl
mov
fs
cmp
out
cmp
loop
mov
push
cltd
dec
jno
jge
ficompl
mov
scas
and
mov
push
mov
movsl
pop
dec
ss
fstpl
sahf
addb
cmpsl
push
ljmp
ljmp
mov
fwait
movsb
adc
rorl
les
loopne,pt
inc
dec
xchg
add
push
sarb
ljmp
repnz
int
fstl
fwait
mov
clc
cmpsb
inc
lret
ds
cmp
cmc
mov
xor
push
xchg
aas
add
movl
inc
add
xor
rclb
shrb
daa
add
loopne
lock
icebp
xor
lock
sub
ljmp
and
loope
ss
mov
adc
pop
add
adc
or
sbb
pop
mov
in
sti
lret
rclb
xor
hlt
cmpsl
pop
mov
aad
pop
push
fldl
sub
sub
pop
or
sbb
add
add
test
sbbl
add
mov
rolb
add
inc
sub
add
or
adcl
xchg
jmp
hlt
outsl
lret
dec
test
xchg
jle
sub
lret
or
mov
xor
push
es
stos
inc
lret
iret
xor
je
andb
mov
aam
and
pop
fsub
cs
test
into
dec
inc
cld
mov
addb
fld
or
sbb
jge
push
dec
mov
cld
jno
inc
mov
inc
test
jge
pop
test
into
mov
aam
add
mov
mov
dec
mov
adc
and
sub
fsubp
dec
mov
and
sub
push
or
push
test
mov
mov
mov
not
int
aad
push
jbe
sahf
hlt
imull
or
cmp
shrl
icebp
insl
push
aam
adcb
scas
sbb
inc
sbb
push
mov
or
jo
je
push
mov
rolb
mov
pushl
test
jbe
mov
pop
cmp
xor
pop
out
loope
pop
loop
std
dec
add
fcompl
sub
dec
dec
stos
mov
stos
or
sbbb
lret
std
and
xchg
pop
lock
cs
int
je
jnp
or
pop
negl
add
dec
into
sub
pop
js
push
int
mov
aaa
orb
test
adc
das
xchg
test
adc
lock
pop
ret
test
inc
or
enter
loope
jae
adc
hlt
or
test
push
adc
sbb
jmp
adc
int3
pop
adc
sub
dec
mov
jae
push
mov
mov
and
dec
es
lcall
data16
out
or
dec
mov
or
sbb
mov
je
and
add
lea
shl
jnp
ja
cmc
add
call
stos
jg
xchg
add
inc
mov
or
push
scas
in
shll
add
cmp
fiadds
clc
outsl
jno
imul
in
push
in
fistps
add
mov
incb
loope
sbb
movsl
dec
sub
push
mov
data16
es
bound
xchg
fcom
shll
xor
fadd
in
inc
dec
testl
or
xchg
sbb
rolb
sub
xlat
push
fisttpll
pusha
push
fsubrs
pop
out
lcall
sbb
mov
adc
jns
xchg
fmull
icebp
movl
add
rorl
cld
test
mov
adc
frstor
or
mov
sbb
adc
andb
loop
pop
inc
subb
test
add
sub
loope
rcll
jle
fdivr
adc
fwait
mov
cmp
aam
sarb
add
movsb
pusha
vphaddubq
and
mov
cs
rcrb
sub
movsb
and
addb
repz
inc
add
xor
and
xchg
xchg
dec
dec
and
push
sub
je
ret
shlb
mov
cltd
mov
in
xlat
scas
js
push
sbb
addb
pop
sbb
iret
xchg
loopne
ss
push
add
sti
jg
loopne
add
fstp
sub
add
jne
mov
sub
ret
inc
insb
cmp
push
sbb
jo
mov
fsubs
icebp
mov
clc
or
fs
sub
adc
dec
sub
add
add
loope
pop
mul
push
and
or
mov
rolb
sub
fstpt
or
loop
es
sub
aas
loopne
lods
or
shlb
lcall
dec
loop
je
pop
imul
adc
cld
inc
shrb
jmp
and
cmp
or
adc
rorl
add
loop
xchg
rcll
stos
int3
add
jecxz
lods
fwait
loope
xor
sub
dec
insb
int3
out
leave
dec
and
inc
inc
cld
mov
ret
fisttps
ljmp
mov
sub
mov
data16
xchg
int3
mov
jmp
or
imul
pop
xor
sub
push
dec
add
and
pop
add
pop
add
rclb
roll
in
sbb
icebp
daa
insb
out
pusha
or
out
add
out
mov
testl
jmp
divl
scas
and
or
std
ret
sub
imul
xchg
pop
push
loope
pop
in
or
mov
xchg
push
xor
repnz
adc
popa
out
add
lock
push
fcmovu
imul
test
cmp
mov
mov
std
lea
hlt
fyl2xp1
out
xor
and
stc
push
int3
cmp
cmpsl
push
fstpt
adc
lods
mov
sar
cmc
xchg
add
mov
and
sub
push
xor
sbb
push
xor
cltd
adc
push
sahf
add
or
rorb
in
push
push
push
hlt
out
orl
rorl
outsl
jnp
in
testb
jo
xor
popa
dec
xchg
mov
shll
sar
ljmp
ret
adc
int3
and
cwtl
lock
int3
and
pop
or
pop
jo
ljmp
and
repz
jne
push
movsb
dec
mov
push
shlb
scas
mov
loopne
push
adc
sbb
cmpl
aas
inc
cli
fldl
stos
cs
cld
mov
or
dec
sbb
movsl
pop
xchg
or
pop
repnz
lock
adc
sti
sbb
inc
push
xchg
push
nop
jb
and
mov
push
inc
imul
pushw
fadd
pop
inc
mov
xchg
test
adc
loopne
out
fildl
jmp
lea
push
mov
ljmp
or
mov
addb
pop
arpl
xchg
aad
sub
xor
js
or
add
mov
lock
mov
ljmp
aaa
fwait
mov
jp
jg
adc
xor
add
push
fistpl
or
scas
pushf
jae
xor
sub
and
lods
fsubrs
push
mov
mov
cmp
adc
push
jno
sti
sbb
pop
fs
adc
inc
jmp
in
mov
push
loopne
or
mov
fwait
enter
cltd
insb
and
fiadds
loope
push
and
add
negl
push
or
sub
mov
mov
popf
jmp
cmp
jl
add
sub
fsubrl
xor
jne
cmp
roll
fcompl
xchg
lock
mov
into
out
cmc
push
sbb
out
imul
adc
bound
orb
pop
notl
test
pop
or
xchg
cmp
push
cld
adc
and
add
push
or
pop
iret
mov
loopne
sbb
lock
pop
mov
mov
sub
jne
repz
movsb
dec
nop
stos
mov
inc
sub
std
cli
mov
or
or
or
push
repnz
push
pop
clc
in
push
in
insl
and
sbb
xchg
and
mov
xchg
insl
fmul
and
mov
nop
insb
ficoml
push
inc
cmp
and
pop
sbb
pusha
mov
dec
fldl
fsubrl
xorl
mov
repnz
int3
js
movsb
lea
jnp
mov
sub
cli
mov
add
mov
cwtl
xor
rorl
aas
and
mov
or
mov
xor
lret
mov
push
ret
and
cld
xor
test
jg
push
mov
mov
xor
add
push
ljmp
cmp
dec
cwtl
ret
cmp
aaa
push
add
loopne
adc
push
in
mov
cmc
sarb
cli
cwtl
push
add
inc
insb
lds
fmuls
int3
imul
add
xchg
mov
aam
mov
fsubrl
xchg
add
pop
push
adc
aam
sarl
xchg
mov
orl
jl
push
or
shll
or
dec
add
dec
stc
pop
sbb
fcmovnu
push
push
mov
cmp
bound
mov
fdivs
and
fdivl
shrb
jne
or
outsl
std
adcl
xor
jg
cs
pushf
lea
add
subl
mov
inc
fldt
xchg
sbb
add
inc
outsl
rcrb
jb
mov
pop
and
rcl
insl
imul
sahf
gs
incb
insb
std
daa
add
mov
jecxz
flds
cmp
add
ds
and
add
int
loope
jge
lods
inc
add
ja
outsl
lds
jbe
add
je
add
xchg
dec
daa
adc
in
repnz
fcmovnb
out
add
loopne
clc
jnp
lcall
push
xchg
xchg
bound
mov
jg
mov
jg
andl
sarb
icebp
xor
xor
sbb
incl
push
ror
lret
enter
mov
push
sub
xchg
cmp
or
cwtl
pop
adc
mov
sti
inc
es
inc
jge
push
mov
dec
jns
test
sbb
filds
inc
xchg
pop
test
or
jb
pop
push
push
stos
push
xchg
adc
test
call
movsl
in
add
movsl
sub
out
aaa
jp
push
fildll
leave
pop
sti
mov
and
pop
dec
mov
jmp
cmpxchg
or
pushf
out
clc
mov
decl
aam
stos
ret
dec
fcoml
pop
scas
cmp
push
std
inc
mov
add
push
mov
test
jge
pop
cmc
add
add
lods
jl
pop
ljmp
mov
lret
mov
and
mov
scas
ds
push
add
jns
and
or
aaa
lock
jns
xchg
mov
insb
dec
push
repz
dec
mov
add
mov
xchg
rorb
mov
aaa
dec
and
insb
push
pop
stos
fldt
jl
add
mov
mov
xchg
jmp
imul
and
add
enter
sbb
add
lods
jae
push
xor
mov
jmp
pop
mov
adc
mov
pushf
in
rorl
pop
ds
jge
clc
mov
or
js
jbe
push
outsb
icebp
lds
std
lcall
xor
aad
and
int
stc
sbb
push
pop
out
jl
das
ljmp
mov
or
mov
cmp
sub
and
push
xchg
call
adc
mov
pop
les
shrb
test
inc
lahf
lea
mov
sbb
pusha
das
iret
dec
mulb
ret
pop
shll
pop
scas
mov
in
mov
and
jno
aam
push
adc
cld
dec
ss
in
notb
pop
add
mov
pop
fdivrp
in
daa
sub
std
xchg
dec
jno
arpl
push
dec
adc
xchg
test
xchg
add
and
aas
std
mov
rol
fcmovu
mov
xchg
dec
mov
and
or
cld
jno
add
inc
sbb
mov
js
addr16
in
outsl
cld
push
sub
jmp
lock
into
inc
sbb
jnp
cld
xor
clc
dec
xlat
jbe
jo
jmp
and
xor
or
sti
push
push
or
rcl
lock
fxch
and
insb
neg
stos
mov
pop
pop
mov
jnp
adc
dec
mov
mov
jns
fs
js
and
dec
mov
jmp
mov
aad
pop
mov
inc
dec
add
pop
lcall
test
jb
mov
out
das
out
clc
push
mov
inc
pusha
mov
sub
test
frstor
clc
iret
imul
clc
fistpl
cltd
add
clc
or
dec
adc
xchg
aaa
jecxz
insl
inc
fucomip
mov
in
mov
pop
cmp
xor
or
jecxz
outsl
pop
mov
jp
or
subl
cwtl
in
inc
std
aam
jbe
jnp
loopne
out
js
inc
rcr
lcall
iret
dec
int
sbb
imul
push
jmp
ret
bound
outsb
xchg
sbb
ljmp
cmpsb
xchg
xchg
jns
pop
inc
mov
loop
mov
fiaddl
aam
lock
push
loopne
sub
fcomps
and
mov
xchg
ds
adc
pop
decb
sub
mov
xor
xchg
cld
and
and
hlt
fiadds
push
xor
and
dec
pop
lock
mov
push
sbb
push
mov
fistpll
ficoml
dec
push
or
les
and
or
call
sub
popf
xchg
not
int3
ja
xor
jl
add
push
ret
jo
dec
arpl
inc
rorb
ret
loop
test
adcl
ret
js
sbb
pop
xor
popf
les
arpl
add
inc
jl
jmp
out
and
adc
sub
add
push
sub
dec
mov
mov
inc
dec
aas
int
xchg
cwtl
int
pop
mov
orb
adc
jg
dec
rcrb
add
mov
in
stos
fistpl
xchg
xor
movsl
adc
in
push
aad
or
mov
clc
pop
jge
pop
jp
xlat
jmp
dec
push
aam
sbbb
pop
and
xchg
iret
adc
and
xor
loop
add
popa
call
imulb
cmp
aad
call
fwait
mov
lods
loopne
and
mov
loop
call
jecxz
andb
shr
scas
outsb
gs
mov
jmp
adc
lods
sub
jb
jge
mov
test
mov
in
call
test
lahf
pop
icebp
fs
or
sbb
inc
fists
mov
in
ficomps
lods
sahf
push
in
add
and
test
call
push
stc
add
pop
add
flds
xor
pushf
mov
idivb
xor
enter
sti
inc
mov
xor
sti
xchg
or
pop
in
or
sahf
and
sti
lds
sub
xor
es
aam
cmp
fwait
sbb
xchg
in
pop
data16
ljmp
lret
mov
add
inc
sub
or
inc
mov
sub
cmp
femms
out
push
add
iret
lods
fcoms
inc
mov
out
cmp
push
dec
les
mov
ficomps
out
or
repnz
in
addb
dec
loopne
jb
pop
jg
cld
xor
or
inc
in
ror
outsl
lock
aas
dec
decb
push
cmp
das
aam
js
push
ret
add
fbld
hlt
push
adc
and
sbb
js
test
dec
jmp
mov
adc
fildl
out
dec
call
into
mov
cmp
inc
xor
outsl
out
mov
push
fucomip
mov
insl
add
pop
mov
fs
fisttpll
jle
jle
pop
sbb
mov
fs
pop
mov
jo
mov
jle
or
inc
push
inc
add
call
pop
je
pushf
jp
mov
orl
inc
xor
fsubp
mov
arpl
adc
jge
mov
inc
mov
sbb
and
hlt
fists
cmc
loopne
aam
dec
add
icebp
push
outsl
cmp
sub
xchg
inc
mov
sbb
push
and
sbb
loop
lock
xor
enter
loopne
aas
orb
cmc
adc
mov
in
dec
fnsave
mov
fwait
or
mov
mov
std
add
sub
nop
std
in
push
push
jecxz
cltd
add
push
mov
inc
xchg
mov
in
pop
cld
dec
cs
aam
int
stos
mov
xchg
cli
inc
adc
cmp
jns
cmp
jmp
xor
filds
adc
inc
inc
sarb
ret
sbbb
call
scas
cltd
xlat
dec
stos
movsb
out
hlt
or
inc
jbe,pn
shl
xchg
pop
push
pop
mov
dec
adc
ret
cld
inc
add
rcrl
out
push
push
add
cmp
adc
ror
imul
sub
stos
adc
test
cmp
repnz
mov
ljmp
fdivrl
inc
sub
leave
push
dec
add
daa
cmpsb
push
je
jb
jnp
sub
test
sarl
subl
jb
sub
stc
outsb
mov
cli
jg
jb
rcl
ljmp
mov
fcoml
mov
cwtl
jnp
pop
pop
xor
adc
mov
jnp
pop
aaa
imul
pop
xor
xchg
sbb
dec
insl
out
pop
adc
push
sub
inc
rcrb
jnp
sbb
add
xchg
add
arpl
cmp
jbe
adc
scas
mov
fidivl
shl
or
jecxz
add
ficoms
imul
sub
bound
xor
outsl
aaa
push
mov
dec
in
sbb
lods
addl
ficomps
pop
andb
inc
test
jnp
bound
testb
ret
xchg
ljmp
mov
adc
imul
sbb
push
das
loope
and
push
cmpsl
and
mov
lock
push
adc
jg
xchg
push
mov
mov
mov
cmpsl
add
bound
push
inc
aas
sub
lcall
adc
daa
inc
cmpsl
shll
mov
dec
jo
xor
push
mov
subb
out
mov
inc
jmp
push
scas
push
and
or
insl
stc
fisubs
mov
ljmp
mull
enter
pop
sub
xlat
arpl
mov
loop
and
xor
add
mov
dec
das
mov
sub
jg
adc
jl
or
sbb
out
test
lods
mov
inc
add
push
rcll
lahf
repnz
es
mov
stos
pop
xchg
mov
cmp
jecxz
fdivrp
jp
and
or
mov
mov
mov
dec
and
cs
and
add
and
and
dec
les
push
sbb
jl
test
sbb
cli
pop
sub
add
dec
push
mov
dec
mov
insb
sbb
inc
filds
sub
inc
mov
test
mov
xchg
or
push
lock
mov
pop
xor
push
pop
std
pushl
push
int3
es
stos
add
iret
sbb
mov
clc
sub
pusha
test
mov
scas
and
cwtl
dec
cmp
imul
and
int3
lahf
je
mov
test
mov
fildll
loop
jbe
scas
or
mov
jle
mov
fildll
shlb
pop
aam
mov
or
ds
jge
xchg
sub
cli
fcomi
fcoms
mov
dec
mov
pop
xor
pop
mov
add
in
aaa
int
mov
add
int3
lret
or
ffreep
decl
and
shl
cmpsb
add
and
emms
xchg
inc
fisttps
jns
mov
std
mov
int
mov
daa
inc
or
out
inc
imulb
je
xchg
or
xchg
rcrl
lret
js
test
add
mov
xchg
xlat
movsl
or
lea
jo
add
dec
xor
in
rolb
push
int
jnp
xor
ficomps
mov
mov
aad
scas
or
xor
xor
mov
lock
add
add
sbbl
and
mov
add
mov
inc
mov
or
stc
sbb
stos
pop
cmp
mull
in
incl
xchg
adc
add
aas
mov
outsb
add
xor
ficompl
das
sbb
int3
leave
push
hlt
pop
xchg
movsb
adc
pop
enter
mov
out
addb
lods
mov
ret
loopne
mov
cs
or
mov
pop
mov
xchg
jo
inc
fucomip
insl
addl
or
int
cmp
mov
hlt
test
inc
push
or
mov
xchg
sub
inc
mov
and
or
pushf
jnp
leave
stos
xchg
sbb
sbb
incb
xor
jno
dec
imul
sbb
cmp
loope
cmp
ds
outsl
mov
dec
int
sti
mov
lods
sub
lea
mov
xchg
pop
frstor
xchg
outsl
fisttpl
and
or
xchg
gs
loopne
pushf
fcompl
ss
jo
adc
jl
mov
mov
cmp
inc
push
les
addl
in
jg
add
inc
xor
add
adc
push
fisubs
push
loope
ret
mov
mov
jo
outsl
sbb
mov
lods
leave
fnop
daa
notb
lahf
cmp
fnstsw
das
scas
mov
xchg
or
orb
test
push
clc
mov
add
push
mov
adc
sbb
adc
mov
push
repz
xchg
jnp
lock
fsub
idivb
pop
pop
inc
adc
pop
in
mov
das
mov
fldt
je
sar
aaa
ficoml
mov
test
bound
dec
inc
cld
test
push
mov
pusha
sub
out
mov
sub
xchg
mov
xchg
and
mov
loopne
insl
std
fisubrl
aad
inc
out
or
add
fdivs
dec
push
loop
or
xor
pop
and
leave
jns
jg
out
sub
jmp
cmp
sbb
push
ljmp
movsb
mov
jne
dec
gs
insl
xchg
jle
pop
test
jbe
pop
pop
loopne
stos
push
and
dec
jne
cs
sbb
pop
inc
sub
push
xchg
int3
push
rcll
lahf
mov
and
mov
or
push
jb
shl
test
or
mov
int
push
icebp
dec
mov
sti
outsl
jge
pop
sti
test
jnp
jp
pop
fs
decl
popf
std
pop
inc
inc
outsl
femms
lods
add
shrl
jle
hlt
outsl
je
pop
out
mov
push
sbb
pop
fwait
arpl
jge
sub
dec
test
sbb
rcrl
lahf
jae
push
xchg
xor
and
pop
pop
loopne
test
inc
stos
and
dec
jle
adc
iret
sub
dec
sbb
stos
xchg
adc
das
sub
push
int3
push
repz
jle
sti
adc
and
mov
in
mov
in
push
xchg
add
dec
aam
aad
xchg
fbld
gs
repz
stos
xor
add
push
notb
pop
mov
xor
testl
cmp
cmp
das
out
clc
movsl
pop
push
cmp
fcoml
ret
dec
mov
or
loopne
jle
out
sub
arpl
aaa
sub
add
mov
sbb
pop
icebp
push
push
mov
cmc
jmp
cmp
push
enter
mov
inc
cltd
jmp
adc
jnp
aad
clc
sbb
pop
clc
leave
ret
jg
movsl
cmp
mov
push
sub
inc
sti
ja
inc
das
cmp
mov
mov
and
in
mov
mov
add
in
sbb
subb
cld
loop
cwtl
rcl
mov
pop
lock
stc
xchg
std
sar
in
dec
ret
sbb
enter
or
and
ret
data16
xchg
adc
inc
mov
xor
jne,pt
cwtl
aaa
lds
insb
jmp
loope
dec
jle
mov
mov
rclb
or
nop
mov
fistpll
stos
push
sarb
mov
lds
sbb
pop
loope
ljmp
fnsave
xor
jb
stos
inc
outsl
sub
xchg
call
cli
in
xchg
jle
outsb
and
andb
lock
pop
fsubrp
movsb
dec
adc
fwait
jb
enter
xor
imul
or
insl
aam
test
cwtl
inc
clc
lret
incl
fcoms
adc
leave
push
xchg
push
mov
add
out
aaa
sarb
fisubl
mov
js
xchg
mov
clc
lock
pop
addb
adc
in
push
xor
pop
push
aam
mov
imulb
nop
loope
pop
push
addr16
jl
xchg
mov
lret
lret
jle
inc
out
inc
nop
clc
or
dec
xchg
mov
sbb
inc
xor
lcall
jmp
xchg
xchg
cmp
rcr
add
push
jne
adc
add
sbb
stc
iret
scas
adc
lock
fwait
mov
in
psubusb
dec
dec
test
or
call
data16
out
loopne
dec
and
or
sbb
sub
mov
je
data16
loope
lea
fcomp
sbb
in
cmpl
sub
xor
jp
jg
mov
daa
das
inc
cld
jg
xlat
cwtl
push
sarl
xchg
cs
jg
sub
popf
bswap
nop
push
mov
cwtl
sub
ss
add
jbe
addl
hlt
pusha
or
shl
jl
inc
pop
mov
add
add
mov
sub
inc
sar
or
scas
rclb
add
ljmp
test
mov
dec
sbb
popa
push
dec
xor
clc
pop
push
cs
ret
daa
inc
mov
leave
push
in
sbb
shrl
out
cmp
inc
xchg
outsb
mov
or
mov
loop
add
or
in
and
adc
mov
imul
jp
cli
addr16
push
adc
push
add
adc
sbb
push
cmp
lcall
mov
xchg
push
pop
jnp
lds
push
inc
mov
or
jmp
jl
mov
mov
dec
js
fs
cwtl
push
test
cmp
push
idiv
filds
xchg
mov
mov
fwait
pop
pop
addl
xchg
push
mov
and
fwait
adc
call
cmc
mov
scas
lods
int3
xlat
cltd
in
jl
jb
cltd
cmc
mov
sub
xchg
enter
pop
mov
xchg
cwtl
sbb
and
mov
lock
scas
cwtl
addr16
cmc
imul
call
inc
stos
mov
adc
xor
lods
jnp
imul
in
xchg
inc
inc
loopne
test
sbb
add
dec
ret
cli
adc
push
popa
in
fucomip
or
mov
mov
jb
mov
adc
lcall
sbb
xor
cltd
daa
xchg
add
mov
mov
dec
cmp
pop
mov
std
cmpsb
out
inc
xor
movsl
add
test
ret
aad
dec
in
pop
cmp
mov
inc
xchg
aaa
fcompl
hlt
push
adc
pop
loop
and
sub
subb
cld
imul
inc
lds
inc
in
mov
fdivl
add
mov
add
or
dec
nop
and
and
push
add
outsb
clc
and
add
dec
jecxz
faddl
lods
adc
inc
xlat
clc
push
dec
test
das
sub
cmp
daa
adc
mov
into
xor
loopne
andl
fwait
sbb
sbb
mov
jle
sub
ret
in
out
push
daa
adc
or
add
and
lds
or
sti
roll
adc
insb
cmp
mov
sbb
movsb
sub
iret
mov
shll
push
mov
inc
or
adc
adc
pusha
sbbl
jmp
cwtl
add
faddl
jne
fdivrp
cld
adc
rclb
xor
inc
xor
rolb
xchg
inc
push
xor
sbbb
js
adcb
dec
faddl
loop
pop
and
pop
in
and
lock
add
or
scas
mov
lods
mov
stc
dec
cld
loope
and
xorl
cwtl
lods
sub
adc
scas
lahf
dec
rcrl
push
mov
jmp
in
add
lret
lods
bound
cmp
inc
cmp
push
cli
and
pushf
out
stos
lock
iret
mov
xor
pop
icebp
and
mov
out
aas
cmp
popa
sub
call
ss
and
test
push
in
insl
in
lock
out
das
xchg
cmp
cld
test
mov
adc
sub
sbb
or
ss
pop
ror
mov
pop
outsb
pop
or
adc
push
movsl
sbb
add
adc
add
pop
push
and
adc
xor
push
xor
fsubrl
sbb
and
and
sub
add
notl
mov
ljmp
pop
icebp
ficoms
iret
loope
mov
ret
hlt
inc
mov
lods
cmp
add
call
sub
jmp
lcall
xor
jmp
pop
xchg
mov
adc
decb
sub
sub
call
add
mov
add
cmc
das
xchg
in
lret
mov
adc
je
in
dec
sbb
mov
xchg
add
lahf
iret
push
outsl
stos
sbb
daa
jge
cmp
fstpl
or
movsb
xorb
add
and
xor
fs
cli
fldt
mov
into
movsb
push
gs
in
sti
jne
push
jmp
scas
xor
aam
mov
cmp
add
push
jl
inc
sub
inc
insb
xchg
fwait
sahf
fsubr
sar
mov
sub
fcoml
adc
mov
jle
dec
jmp
rcll
ret
push
clc
adc
push
adc
sbbl
cmp
inc
push
jno
and
jp
mov
xchg
or
or
subb
mov
repz
rorb
popf
popa
or
arpl
push
cvtps2pd
fildll
xor
aas
fidivs
push
xchg
into
pusha
mov
pop
push
inc
mov
push
mov
repnz
push
ja
sub
loop
mov
ret
adc
push
xor
stos
sub
inc
sti
sbb
lock
or
cmpsl
push
xorl
jle
and
or
das
xchg
cld
xor
pop
mov
scas
movl
xchg
out
inc
push
sub
mov
cmpb
or
add
stos
add
movsl
dec
jp
xlat
pop
add
adc
push
jo
ficompl
cltd
int
pop
jae
mov
sbb
lret
aam
push
faddl
lds
js
outsb
enter
movsl
lock
and
sub
in
fiaddl
jl
mov
test
les
aaa
call
jg
cmp
mov
mov
arpl
sarb
xchg
ljmp
cs
jle
test
mov
testb
xchg
xor
xchg
mov
dec
add
aas
je
jle
movsl
outsb
sub
test
out
mov
lea
clc
mov
movsl
and
outsb
clc
popa
cmpsl
xor
sbb
aaa
lcall
push
or
loopne
out
lods
add
cld
movsl
outsb
mov
or
bound
cld
filds
fsubs
push
jp
push
jbe
scas
dec
outsl
lock
xor
push
pop
js
fmul
mov
mov
xchg
jge
es
js
or
stos
stos
fnstsw
xchg
ja
pop
mov
lods
add
cs
cmp
popa
rcr
icebp
fisttps
cld
push
and
cwtl
aaa
loopne
jns
pushf
cltd
dec
mov
outsl
push
inc
fwait
loopne
jne
inc
sbb
adc
test
adc
shll
movsb
ljmp
fdivs
pusha
push
in
ret
test
ret
add
pop
mov
push
mov
fwait
popa
push
out
mov
add
mov
aad
and
sbb
xchg
faddp
mov
xchg
shrb
aaa
decb
incl
adc
js
test
outsb
xor
fbstp
jbe
xlat
test
inc
and
inc
je
xchg
aaa
repz
sbb
lcall
mov
das
mov
jl
push
push
mov
add
ja
ja
adc
mov
inc
fildll
rolb
into
in
mov
inc
push
xchg
lahf
icebp
jae
nop
jno
pop
adc
cld
pop
push
xchg
arpl
nopl
and
lock
ljmp
jge
movl
aaa
icebp
add
pop
add
fsts
xor
push
mov
pop
pop
pop
jmp
loope
mov
addb
std
mov
and
ss
pop
roll
mov
ss
push
or
icebp
inc
jne
ret
sbb
jmp
push
out
adc
lds
test
decb
pusha
pop
push
fwait
ja
lods
clc
xchg
fwait
xorl
mov
pop
adc
dec
test
and
and
je
sbb
cld
stos
dec
data16
test
das
mov
push
mov
add
scas
push
mov
sbb
movsl
fwait
aas
fs
sbb
pop
gs
push
cmovno
out
out
stos
adc
push
lret
and
jnp
lock
mov
cli
scas
pop
sub
mov
pushf
adc
add
add
sbb
mov
inc
aaa
and
scas
dec
jbe
sbb
or
ret
inc
or
xchg
mov
ja
dec
and
xchg
pushf
ljmp
outsb
mov
aaa
adc
fdiv
lods
and
rcrb
dec
das
and
cmp
daa
add
subb
fidivs
sub
sti
ja
and
or
add
pusha
mov
imul
or
int
jbe
jne
loopne
cwtl
mov
inc
pop
and
repz
dec
mov
ljmp
adc
mov
sbb
call
mov
inc
sbbb
mov
mov
push
or
insb
push
pushf
mov
mov
add
add
adc
mov
mov
jecxz
roll
clc
psrad
inc
icebp
insl
add
inc
dec
sub
bound
sub
pusha
add
lock
pop
add
stos
fimull
rcrb
daa
fcmovnu
pop
lds
xchg
dec
nop
stos
dec
jno
bound
cmp
mov
jo
fcomi
shl
and
xchg
push
ljmp
and
lods
pop
and
aam
xchg
pop
lret
into
fwait
adc
mov
cmp
lcall
sub
jge
mov
in
mov
les
mov
shll
mov
mov
mov
leave
push
jne
inc
sub
mov
loope
add
push
xor
pop
jo
mov
adc
jmp
push
clc
mov
loop
push
clc
int3
mov
mov
popf
fwait
cld
add
icebp
iret
out
xchg
repz
push
fwait
stos
xchg
cltd
mov
jg
fsts
dec
enter
xlat
and
mov
inc
cmp
inc
mov
sub
repnz
sub
mov
shlb
mov
aam
loop
sub
mov
mov
xorb
mov
mov
mov
dec
push
adc
rolb
or
adc
add
sub
sbb
clc
insb
shr
jae
adc
lcall
pop
add
push
and
out
pusha
push
lock
dec
add
sbbb
mov
xor
iret
jns
xor
xchg
adc
adc
outsl
sqrtps
dec
cmp
push
hlt
sbb
xor
sbb
push
fbstp
add
xchg
or
push
cmp
mov
inc
out
and
push
adc
cld
mov
mov
sbb
popf
mov
mov
add
adc
jmp
ds
pop
das
aaa
and
shrl
sbb
cmp
orb
lock
cld
inc
fcompl
dec
mov
call
inc
inc
imul
xchg
add
push
mov
jge
outsl
mov
mov
popf
xchg
xor
sarb
xchg
fs
mov
jnp
mov
jns
fisttpl
sub
or
add
mov
cmc
and
lods
scas
xchg
inc
lcall
sub
pushl
mov
idiv
lock
sub
cmp
or
sub
fbld
mov
jp
cmp
add
clc
push
sub
push
adc
push
jno
or
sahf
std
sbb
sub
mov
add
loope
rcrb
sbb
or
addb
leave
and
mov
dec
cmp
popf
shl
call
cwtl
push
jl
cmp
rorl
and
outsl
call
cmp
and
decl
sbb
loope
movsb
add
add
xor
movsl
mov
add
xchg
jns
stos
mov
and
xor
add
adc
cmpl
fdivrs
cmp
clc
das
rolb
xchg
mov
loopne
fpatan
mov
dec
mov
inc
add
repz
inc
rorb
loopne
and
mov
push
push
lret
in
idivb
addr16
ss
dec
jecxz
in
inc
mov
sbb
stos
push
inc
mov
in
and
test
andl
call
daa
adc
dec
out
add
xchg
popa
adc
clc
add
dec
jge
or
push
adc
orb
jmp
mov
ficoms
jno
lea
jmp
sbb
std
jb
cmp
inc
popf
stos
jo
adc
out
push
mov
jo
daa
jo
loopne
lods
ljmp
add
ds
out
mov
inc
outsl
dec
pusha
adc
call
ljmp
or
das
fsubl
loop
mov
mov
cli
fucomip
push
jbe
pop
inc
and
lock
mov
cmp
data16
out
or
xchg
sub
inc
rcll
pop
inc
aaa
stos
ss
test
shlb
movsb
jo
nop
inc
arpl
mov
and
stos
inc
cmp
fucomi
ret
or
dec
jecxz
mov
pop
jb
repnz
adc
aaa
jbe
jae
cmpsb
sbb
rcrb
push
or
mov
inc
cmp
fimuls
rolb
aas
lock
or
ss
outsb
sub
or
loope
std
xor
push
std
xchg
dec
push
dec
jecxz
sub
lods
push
incb
mov
je
ret
push
cmova
inc
stc
aam
stos
push
into
call
fistpll
cmpsl
insb
push
pop
les
orl
mov
outsb
dec
or
std
aaa
fidivrs
xor
or
pop
push
and
loope
jmp
push
call
out
sarl
in
sbb
dec
sbb
mov
mov
sbb
add
or
std
test
nop
clc
push
popf
sub
fidivl
add
jb
movsl
xchg
adc
sbb
nop
adc
mov
inc
mov
mov
scas
test
test
pop
pusha
mov
xchg
ds
popa
jecxz
sbb
dec
test
loopne
jg
mov
or
les
inc
adc
sahf
clc
pop
inc
pop
leave
pop
cwtl
bound
add
mov
in
sbbb
jb
inc
test
fcom
movsb
mov
mov
movhlps
jle
or
nop
pusha
das
cmp
xor
or
std
call
clc
call
addr16
int3
ret
lret
mov
mov
cli
adc
addr16
shll
test
or
addr16
in
lock
add
pop
add
mov
pop
lock
and
and
int
lcall
stos
fisubrl
addl
cmpsl
rolb
rcr
or
test
ljmp
or
mov
out
cwtl
aas
add
adc
test
adc
add
into
jbe
adc
and
jae
pop
loop
sti
in
jns
aad
sbb
add
sub
loop
pop
shl
add
loope
stos
fcomps
add
or
push
lret
cmpsb
hlt
push
aad
or
xor
sbb
andb
mov
cmp
or
lahf
inc
xchg
sub
add
and
jg
push
inc
add
mov
mov
mov
inc
pop
jno
add
inc
push
push
xor
int
and
add
jge
xor
xchg
jae
or
sub
dec
push
adc
sbb
out
es
push
inc
add
jnp
jge
icebp
loop
pusha
jb
add
add
lock
fmuls
ja
cmp
add
fimuls
lock
ret
xlat
les
add
jne
subl
call
dec
imul
push
inc
mov
lea
mov
jb
dec
push
xor
xor
dec
int3
and
sbb
sahf
or
sub
mov
mov
sahf
jbe
lods
nop
mov
cli
xchg
rorb
js
adc
outsb
xchg
test
pop
mov
ss
ljmp
dec
cli
or
or
or
and
mov
add
scas
jns
pusha
mov
inc
or
fs
out
xlat
mov
mov
mov
push
cmpsb
unpckhps
adc
push
pop
sbb
push
push
inc
adc
push
roll
sub
or
leave
fcomps
lds
or
jl
push
jmp
cmpsl
in
int
jecxz
inc
push
jno
push
pop
js
push
je
push
es
mov
mov
add
sti
arpl
add
cld
add
aaa
adcb
sbb
adc
push
psllq
push
jmp
push
and
xchg
mov
stos
adc
mov
push
mov
stos
out
divb
mov
pushf
insl
es
sarl
hlt
sub
test
cmp
xchg
idivb
jno
sub
mov
sbb
cmp
mov
sbb
les
outsl
adc
lret
jg
data16
adc
aaa
cld
les
add
sbb
insb
loop
mov
imull
jge
popa
imull
call
push
movsl
gs
pop
sub
popf
daa
push
ss
adcl
xorb
xorl
or
sahf
push
rcrb
iret
and
add
cmp
inc
push
and
popa
sti
add
push
lcall
mov
or
pop
ds
jge
jne
and
fldl
sub
mov
mov
imul
dec
pop
addr16
stos
pop
add
sbb
lods
scas
mov
sbb
xchg
fisttps
mov
scas
sub
push
dec
mov
adc
scas
push
out
mov
aad
sub
mov
or
ljmp
pop
int3
ss
cltd
nop
jge
jo
mov
dec
insb
in
popa
sbb
pop
add
push
out
fwait
call
mov
push
pop
add
test
sub
lds
mov
daa
xor
push
xor
inc
adc
cmp
rcrb
cmp
jg
xchg
or
pop
cmp
out
ds
inc
outsb
shrb
xor
cmp
outsb
inc
xor
sti
push
mov
dec
popf
jb
jae
pushf
or
sub
lods
push
adc
push
decl
sahf
outsl
sub
mov
xchg
outsl
mov
stos
popf
dec
xchg
insl
nop
xlat
jecxz
cmp
add
push
fcmovb
pop
add
and
and
add
push
xor
sub
mov
loop
aas
pusha
or
sub
mov
inc
daa
jl
jae
rorb
mov
cmc
add
xchg
push
loop
fildll
or
pop
push
adc
xchg
ljmp
inc
aaa
fimuls
rorb
mov
out
mov
cmpsl
shlb
idivl
out
in
adc
call
out
mov
mov
icebp
mov
adc
rcll
fstl
loop
lods
mov
add
aas
xor
mov
add
dec
mov
cmpsb
sbb
push
lahf
cmpsb
repz
xchg
mov
mov
cmp
repz
mov
fdivr
push
ficoms
cs
sub
mov
pop
fdivrp
mov
addr16
sub
pop
xchg
or
and
xor
and
adc
xchg
jnp
push
das
fsubrs
xor
and
adc
or
sbb
in
mov
mov
xor
pusha
mov
push
insb
mov
loope
or
test
pop
pushl
cltd
fwait
imul
mov
sbb
pop
sub
adc
inc
inc
xchg
je
sti
movsl
jbe
test
xor
push
jo
mov
inc
adc
pop
cmp
fbstp
mov
push
xchg
mov
xor
inc
imul
mov
sub
out
test
es
lods
out
ret
and
enter
adcb
mov
outsb
add
inc
mov
and
pop
dec
cli
push
xor
inc
or
pushf
xchg
jns
mov
sbb
dec
leave
sub
add
out
mov
in
jne
jnp
push
pop
sub
add
arpl
and
ss
or
xchg
sbb
pop
fcmovnbe
stos
in
je
xchg
mov
adc
xor
jnp
sti
and
mov
pop
adc
push
insb
jecxz
mov
pop
add
adc
jle
shr
test
push
jae
in
out
cld
call
jo
mov
and
adc
xor
mov
mov
arpl
sbb
push
test
mov
or
push
jne
pop
int
das
jno
add
add
push
push
mov
jbe
inc
push
sub
sub
js
pop
outsl
pop
xchg
loop
jle
int
pop
jp
clc
mov
pusha
xchg
push
mov
inc
jg
cmp
cmp
sub
add
pusha
adc
insl
dec
dec
add
adc
push
pop
imulb
mov
adc
add
and
pusha
popa
imul
mov
lock
insb
dec
jb
lods
fdivrp
jne
jl,pt
shll
lahf
or
sub
and
cmp
cmp
out
pushf
jp
sub
xchg
fs
or
or
iret
push
adc
jg
add
cmp
addb
cmp
mov
ja
das
cwtl
mov
sbb
sub
je
ljmp
pop
fildll
loopne
pop
js
int
push
xchg
shrb
out
xchg
cli
scas
cmp
dec
shlb
push
jecxz
enter
scas
mov
push
sbb
clc
outsl
pop
fs
decl
addb
and
aaa
xchg
loop
aam
fisubrs
jle
and
roll
xlat
inc
loope
andb
dec
sbb
mov
inc
orl
ljmp
push
mov
adcl
lods
lret
addr16
xchg
pop
mov
lods
test
lock
jle
adc
insl
cmp
das
repnz
rorb
mov
jecxz
sub
insb
stc
and
adc
sub
mov
sbb
mov
jle
pop
test
adc
or
mov
inc
fimull
cmp
lahf
lods
divl
push
push
imul
jg
cmc
or
dec
fsubrl
imul
adc
sub
or
push
push
das
sub
scas
mov
stos
cmp
mov
mov
loopne
and
mov
or
jne
mov
int
loope
fcoml
or
add
in
lds
sbb
stos
adc
pop
gs
sbb
fstpt
test
pop
xor
cmp
mov
jg
js
lea
das
mov
clc
pushf
iret
roll
inc
adc
add
jmp
jmp
add
fisttpl
subl
add
cmp
cltd
inc
enter
xchg
cmpl
mov
insb
sub
jae
and
sar
push
mov
jl
adcl
add
imul
std
ljmp
mov
jg
inc
test
test
out
cwtl
lods
mov
mov
outsl
mov
mov
cmp
xchg
mov
push
mov
scas
pop
jmp
mov
pop
jmp
push
or
inc
pop
xlat
aas
pop
setnp
jge
ja
mov
pop
or
mov
jbe
mov
lds
je
std
rolb
jne
ret
aam
pop
mov
xor
sbb
mov
adc
add
or
pop
cmp
rorb
jl
cli
sub
jmp
xchg
xchg
adc
dec
mov
mov
test
addr16
xchg
push
mov
jg
mov
mov
mov
cwtl
jl
xor
cmc
mov
cli
testb
sbb
jecxz
mov
mov
pop
fisubrs
adc
and
adc
movsl
pop
xchg
and
and
shrl
sub
mov
add
pop
scas
cmp
push
pushl
pop
or
daa
jae
sbb
out
push
push
pop
js
sti
inc
cs
mov
stc
xor
scas
fnstenv
inc
xchg
sub
test
rorb
or
mov
pop
and
xchg
or
mov
cmpsb
popa
loope
jae
mov
pop
dec
cwtl
insb
push
pop
xchg
lea
icebp
add
ljmp
jle
adc
pusha
inc
xor
dec
mov
push
jb
xorb
ret
xchg
add
lcall
fisubrl
or
inc
inc
mov
push
cmpsl
arpl
std
or
xchg
bound
jg
add
mov
fidivl
dec
pop
mov
xchg
mov
sbb
adc
add
xchg
and
sbb
lahf
xor
lahf
scas
out
push
dec
xor
and
mov
not
sub
pop
shl
jp
sbb
lods
call
aam
aas
pop
push
add
nop
lahf
jg
adc
js
jno
add
cmp
xor
test
daa
out
mov
lods
sub
out
sbbb
push
mov
popa
daa
inc
cld
jg
movsl
test
adc
inc
and
iret
inc
imul
mov
fildll
fcoms
sub
fdivs
mov
sub
adc
cmp
inc
imul
jmp
icebp
mov
cld
mov
pop
jno
test
cmc
xor
and
xchg
mov
xchg
shlb
push
popf
mov
fwait
mov
sub
imul
pop
cmpsl
push
push
pop
jle
sarb
or
sbb
xchg
mov
mov
xchg
push
outsl
jl
lcall
lret
inc
jecxz
test
loopne
mov
cmpsb
stc
inc
mov
fwait
push
add
testl
inc
pop
loop
lock
add
cld
or
jmp
or
inc
push
enter
push
xor
sbb
inc
xchg
call
mov
sub
int
jg
pusha
jmp
addr16
inc
mov
in
add
add
stc
lret
xchg
pop
cli
decb
or
fwait
dec
mov
ret
es
aas
lea
lds
jecxz
je
xchg
pop
enter
lds
shlb
add
pop
jo
and
jl
dec
cmc
aam
popa
dec
mov
das
sub
pop
call
data16
lods
xchg
push
faddl
mov
jne
scas
lock
leave
sub
and
sub
jne
or
mov
ss
mov
in
mov
mov
xor
xchg
insl
int3
les
mov
or
xor
sbb
xchg
jmp
push
shll
outsl
hlt
sbb
dec
adc
mov
js
add
sti
pop
add
sbb
repnz
jecxz
leave
cmp
adc
stos
sahf
xchg
testl
imul
push
in
dec
or
push
add
andb
test
and
into
add
addr16
adc
push
push
or
cmpsb
fstpl
mov
mov
mov
fdivrs
mov
and
inc
sti
icebp
fdivrs
cmp
mov
aas
stos
fcmovnb
pop
push
mov
fwait
out
popf
xchg
scas
fldl
mov
mov
push
insl
aaa
xchg
andb
in
and
ja
icebp
jmp
insl
cld
aaa
adc
rcr
push
fstl
mov
stos
mov
ss
psrlw
cmc
pushl
push
sub
fisttpl
jo
inc
mov
imul
loopne
push
popa
pop
mov
and
movl
je
push
enter
push
fisttps
outsb
jo
xlat
pop
jge
aam
call
jecxz
mov
std
inc
insb
and
mov
mov
xor
jne
or
mov
jno
repnz
push
testb
xchg
fistpll
adc
aad
iret
test
sbb
jns
clc
inc
jb
push
or
and
aad
mov
sbb
inc
fsubrl
cs
pusha
jnp
jne
or
rclb
xchg
fstpt
gs
gs
bound
pop
inc
rol
dec
in
lods
jo
ja
push
mov
cli
pop
or
clc
outsl
shlb
fimull
and
push
sbb
mov
cmp
adc
xor
xor
cltd
subb
js
stc
int3
cmp
fildll
lret
js
outsb
mov
push
jo
and
out
pop
outsl
cmp
xchg
pop
ret
iret
into
data16
adc
cmp
subb
mov
and
xchg
mov
dec
std
js
leave
shlb
sbb
sbb
push
push
test
cld
pop
clc
pop
adc
loope
add
fstl
roll
mov
cmp
movsl
add
ja
xchg
loopne
shlb
stos
rcl
jg
dec
repz
push
rclb
ljmp
das
js
jno
iret
pop
clc
mov
mov
pop
or
add
imul
push
pop
outsb
in
insb
lea
insl
push
xor
jge
mov
test
shl
pop
mov
fbld
xor
sbb
stos
pop
out
pop
xchg
sbb
dec
rolb
mov
dec
ljmp
jmp
imul
and
jbe
jp
pop
inc
sub
fistpll
push
outsb
mov
mov
mov
xor
and
and
outsl
push
cmp
xor
sarl
aaa
cli
mov
fsub
jl
or
test
jecxz
paddusb
arpl
mov
test
out
jae
pop
loope
inc
xchg
daa
or
rorl
inc
pop
lret
mov
mov
and
push
push
outsl
mov
xchg
pusha
bnd
mov
inc
inc
outsl
sbb
inc
rcr
test
aam
xor
das
shll
jne
je
stc
ljmp
fdivr
dec
fs
adc
stos
dec
and
hlt
call
cmp
call
mov
push
cmp
adc
mov
pushf
in
filds
mov
fsubl
push
inc
clc
and
mov
inc
inc
cmp
aaa
jg
push
sbb
test
out
fildl
cld
sti
sub
pop
push
daa
cmc
or
inc
xor
push
bound
xchg
adc
mov
add
icebp
int
data16
cld
cs
divb
push
mov
mov
sub
inc
cmpsl
jmp
push
shrb
das
jg
inc
mov
cmp
cmpsb
mov
subl
push
std
lea
imul
scas
jp
dec
xchg
fiadds
fdivr
push
pusha
sbb
cmp
addl
cli
or
dec
mov
push
into
xchg
or
xchg
add
dec
xchg
sub
hlt
repnz
lcall
subb
decb
xor
addl
push
sarb
dec
lods
loope
pop
pop
inc
mov
adc
xchg
sbb
cmp
stc
and
ds
mov
push
push
out
fiaddl
pushf
ss
jmp
xchg
mov
stos
ljmp
inc
adc
add
sub
or
mov
push
stos
test
std
add
mov
jg
mov
movsb
push
insb
mov
push
sbb
inc
rorl
dec
adc
sbb
xor
mov
push
or
adc
test
ds
mov
jle
loope
mov
in
faddl
ret
aad
std
mulb
in
movsl
mulb
or
xlat
lret
cmp
add
or
ret
loop
test
mov
pusha
jg
jg
aaa
lock
in
and
or
stos
popa
cmpsl
dec
cwtl
sub
outsl
insb
inc
mov
fists
mov
sub
mov
sub
jl
or
inc
int3
cli
stos
sbb
sbbb
jge
xchg
pop
or
add
cmp
ja
mov
fwait
nop
mov
pop
add
push
lcall
jo
in
outsb
and
jmp
adc
mov
and
scas
mov
daa
push
jmp
mov
outsl
stos
and
or
sub
add
mov
mov
push
push
xor
pop
pop
pop
mov
lcall
pop
ja
add
mov
std
xor
cmp
cmp
push
scas
mov
out
xchg
outsl
mov
clc
cmpsl
add
or
out
inc
xchg
jl
add
push
loopne
add
or
cmpl
inc
jbe
icebp
mov
mov
xchg
add
popf
clc
or
js
mov
lret
push
sub
mov
les
pop
cmp
sub
add
and
rcrb
pop
cli
das
subl
sub
in
pop
dec
cmp
fstpl
jns
arpl
xor
call
inc
outsl
mov
jbe
repz
xor
arpl
int3
lock
mov
repnz
cmp
in
mov
icebp
addr16
test
push
aaa
adc
or
cmp
add
or
jle
cwtl
pop
andl
sbb
pop
movsb
cltd
adc
cmp
fsubrl
mov
mov
jmp
test
ret
dec
mov
decl
pop
xchg
mov
mov
sbbl
jp
xchg
and
inc
movsb
inc
stos
cs
pusha
dec
or
xor
add
into
orl
jecxz
shl
icebp
sub
jb
jge,pn
mov
repz
cltd
inc
jbe
and
out
clc
movsb
shll
mov
mull
mov
push
mov
push
xchg
popf
and
dec
jbe
xchg
xchg
mov
pop
or
xchg
push
xor
rcl
fdivr
mov
ja
mov
aas
xchg
lods
fcom
push
stos
sahf
or
stc
add
repnz
ja
inc
jl
nop
aam
xor
mov
lahf
fcomi
dec
call
mov
lea
ja
decb
xchg
repz
mov
mov
push
bound
aas
into
inc
add
add
rorb
cs
inc
test
sbb
xchg
les
clc
push
icebp
int3
clc
mov
aad
mov
mov
insb
fnsave
xor
aas
pop
mov
es
addb
sbb
cmp
push
incb
mov
mov
adc
adc
daa
push
mov
adc
andb
repnz
in
sahf
icebp
loopne
mov
stos
adc
push
or
dec
mov
mov
fistpll
call
call
stc
jg
scas
lds
jge
push
xor
push
and
fdivrs
leave
adc
and
add
repz
pop
cs
mov
pop
incl
add
cltd
arpl
or
scas
add
push
xchg
in
fwait
loopne
sbb
or
pop
in
loope
push
pop
into
shl
mov
hlt
xor
enter
cmp
and
xorb
dec
jg
and
xor
out
fwait
cmp
add
gs
popa
or
lds
push
mov
jo
sbb
inc
stos
or
je
xor
shll
xchg
dec
mov
outsl
sbb
xlat
cmp
add
pop
roll
sahf
mov
das
cld
out
add
or
jecxz
push
sbb
lcall
fstl
test
roll
and
andl
add
in
fs
inc
push
sub
fcoms
xor
js
cld
ficomps
cmp
push
mov
insb
jo
inc
jns
es
cmp
mov
inc
std
mov
rorb
pop
cmpsb
adc
xacquire
mov
cmp
sub
mov
enter
mov
outsl
xor
cmp
lock
xor
mov
js
jg
dec
dec
sbb
and
outsl
ljmp
jne
sbbl
mov
out
dec
push
out
cs
mov
jo
into
xchg
jb
xorb
les
outsb
inc
cld
pop
pop
arpl
cmpsl
fiaddl
cltd
inc
iret
mov
scas
add
outsb
rcrl
inc
mov
mov
sub
mov
mov
das
mov
psubd
sbb
or
int
loop
je
mov
mov
push
push
or
pop
imul
xlat
mov
mov
sahf
stos
dec
push
loope
jp
aam
sarb
ljmp
loop
in
test
sti
push
scas
dec
xchg
inc
sbb
leave
xor
out
gs
inc
aas
inc
in
bound
adc
sarb
pop
adc
sbb
fwait
ds
xchg
inc
xor
push
cmp
xchg
push
mov
mov
push
call
ret
aam
dec
lret
xor
and
jbe
cmp
sub
es
and
clc
add
dec
clc
lea
mov
push
lcall
or
ds
add
adc
or
test
and
mov
stos
inc
stos
int
mov
pop
jp
pop
jl
mov
inc
fs
stos
jle
arpl
pusha
pop
sarl
add
push
lock
bound
icebp
cmp
xchg
jne
mov
adc
movsb
mov
xor
outsb
pop
mov
rolb
aam
mov
mov
and
lds
lret
xchg
xorb
push
push
ret
clc
mov
les
stc
mov
push
dec
mov
pop
dec
inc
fwait
loopne
adc
add
inc
xchg
and
sbb
mov
adcb
es
sbb
and
xor
xchg
mov
sbb
add
or
cmp
or
sub
test
xchg
mov
mov
dec
fwait
enter
add
jbe
or
iret
push
mov
andb
mov
xor
adc
sbb
and
das
lahf
or
push
mov
or
test
ljmp
push
lods
jp
loopne
loop
stos
loopne
mov
add
mov
inc
inc
mov
stos
int3
fcoml
pop
push
fistpl
fmull
push
xor
incl
pop
subb
xor
enter
ss
mov
leave
mov
xor
int3
and
sub
pop
hlt
clc
cwtl
add
cmp
or
mov
dec
mov
cmpl
add
jns
setns
test
sbb
inc
outsb
inc
icebp
out
mov
les
imul
mov
test
jle
sbb
clc
in
adc
cld
add
cmpsl
addb
sub
orb
push
pusha
mov
adc
cmp
adc
push
jnp
popf
and
neg
sbbl
sarb
imul
nop
cs
fwait
or
and
pushf
pop
sbb
add
add
jae
add
movsb
add
pop
mov
pusha
or
nop
cmp
push
or
mov
push
inc
adc
or
les
scas
adc
pop
mov
adc
or
aam
xor
xchg
repnz
mov
add
add
sub
adc
gs
and
sub
pop
push
jno
insb
sub
loop
add
xchg
les
call
add
adc
and
test
sbb
add
xor
pop
jo
sbb
jmp
push
loopne
aas
aam
ja
stc
stos
cltd
mov
mov
and
repz
push
sbb
push
filds
je
fldl
dec
outsb
test
mov
inc
sbb
scas
dec
mov
mov
gs
loop
push
outsl
mov
jp
dec
int
lret
or
mov
xor
mov
adc
testl
add
push
jo
mov
jg
popa
cwtl
add
cmp
xchg
adc
lea
add
pop
out
daa
mov
dec
inc
adc
xchg
mov
adc
or
jecxz
jnp
sbbb
ds
mov
std
adc
mov
ja
outsb
cmc
cld
sub
push
xor
scas
jge
decb
mov
ret
je
test
sti
in
fbstp
sahf
dec
jecxz
add
jl
xchg
cmp
sarb
mov
or
add
xchg
aad
or
sbb
lcall
jg
std
movsb
add
or
imul
push
dec
xchg
or
jne
out
push
mov
and
jae
call
mov
dec
orl
push
rclb
cwtl
cmp
test
mov
mov
jmp
push
mov
mull
mov
iret
rcrb
orl
xchg
scas
lret
shll
pop
pop
clc
incl
mov
sub
mov
dec
popf
and
adc
or
or
jae
std
cmp
stc
sbb
dec
pop
mov
inc
dec
inc
inc
insl
adcb
sub
int3
loopne
inc
dec
push
fs
movsb
cmp
frstor
test
mov
or
cwtl
ja
add
inc
aad
loope
jecxz
decb
addb
ljmp
mov
cmp
xchg
or
lock
imul
fcomip
add
or
mov
mov
clc
in
mov
repnz
repz
fisubrl
sub
aam
sub
aad
xchg
fistl
mov
mov
ljmp
icebp
shll
inc
adc
push
or
aam
mov
xorl
jno
pop
fistpll
and
dec
add
add
test
out
call
fdivr
lret
fiadds
les
adc
mov
mov
clc
fucomp
imul
jg
movsb
or
adc
orl
inc
mov
int3
push
lahf
arpl
push
stos
insl
cs
js
aas
mov
test
jp
sar
or
sub
loope
sbb
pop
mov
add
push
test
sbb
jg
icebp
adc
jg
mov
repnz
or
mov
cltd
test
aaa
and
xor
lret
div
adc
icebp
sub
xor
mov
ja
and
frstor
mov
pop
or
pop
jl
sahf
mov
xchg
mov
mov
push
adc
pusha
push
pop
ss
popa
subb
dec
cmp
jmp
inc
xchg
push
in
pushf
call
dec
dec
xor
mov
sub
mov
and
insb
mov
arpl
das
test
jge
sbb
shrd
sbb
cwtl
add
xchg
and
mov
incl
dec
lahf
pop
jmp
test
sbb
pop
clc
in
test
mov
pop
adc
nop
pop
pop
clc
mov
je
lock
ja
sahf
pop
add
in
mov
test
aad
mov
inc
popa
incb
jp
inc
incb
inc
adcl
pop
adc
inc
inc
sub
sbb
or
iret
jmp
adc
shlb
fidivrs
jl,pn
dec
cld
testl
dec
cld
mov
inc
les
andl
push
in
mov
int
xor
pop
jl
aad
dec
xchg
mov
sbb
ds
and
inc
xor
test
dec
or
mov
add
loopne
mov
or
mov
daa
stos
je
pop
add
ret
pop
push
dec
arpl
adc
inc
and
add
mov
pop
xchg
mov
repz
inc
insb
in
add
sahf
popa
jecxz
jbe
add
je
ror
ret
mov
push
and
cmp
jg
jp
stos
cltd
movsl
test
xor
pushw
loop
ret
add
jae
imul
imul
jle
pop
aad
adc
dec
movsb
sub
aam
arpl
jmp
sub
stc
lea
arpl
call
addl
add
shrl
dec
mov
mov
sbb
ds
inc
xor
outsl
testl
or
sub
xor
outsb
sbb
loopne
cmp
cltd
ficoml
cmp
js
in
mov
or
mov
subb
pop
les
adc
xor
mov
mov
sti
movsl
jmp
jne
add
outsb
xor
gs
adc
sar
jo
push
enter
jb
and
push
pop
mov
mov
mov
inc
jge
dec
das
ja
pop
jl
out
mov
pop
add
or
dec
sub
mov
sub
mov
cmp
cmp
and
xorl
mov
add
mov
xor
push
fistl
hlt
inc
out
add
dec
dec
dec
push
test
push
sub
pop
xchg
jmp
mov
test
mov
mov
inc
adc
out
jecxz
and
or
cltd
mov
pop
fldt
dec
mov
arpl
test
fiadds
push
dec
pop
fucomip
xchg
aaa
or
cmp
ljmp
sbb
mov
cmp
loopne
js
outsb
stos
mov
rcr
cmc
pop
lock
lods
stos
mov
sarb
je
push
cld
push
xchg
mov
pop
xor
inc
out
in
cmp
in
scas
out
pop
addps
add
stc
sub
fildl
and
aaa
pop
arpl
shrl
and
je
push
jecxz
xorb
pop
jo
sub
mov
add
test
mov
xor
rcrl
jl
fimull
jae
jecxz
fsts
cld
pop
lods
inc
push
mov
int3
out
movsb
adc
test
outsb
clc
daa
insl
dec
clts
mov
mov
mov
jp
aam
add
pusha
pop
sub
sub
add
shlb
daa
pop
jbe
mov
nop
push
pop
jp
jnp
fcmovu
jl
push
clc
pop
js
xor
push
fs
jle
pop
sbb
loope
sub
cwtl
mov
xchg
push
cltd
mov
sbb
xor
shr
out
out
into
adc
lock
std
rclb
fadds
jl
pop
mov
call
aad
in
outsl
adc
or
dec
jo
sbb
push
jl
add
daa
adc
sbb
outsl
incl
lcall
cmpsb
sub
push
je
jbe
mov
div
mov
aas
jo
fisttps
fcmovnb
adc
fldt
push
das
fbld
cmpsl
aad
loop
aas
fstpt
cmp
faddl
sub
or
xor
insb
jno
in
fimuls
mov
mov
pop
jl
aaa
pop
out
mov
mov
aaa
adc
jge
xor
xorb
add
std
inc
scas
rolb
and
xor
lods
shlb
pop
cmc
lods
outsl
jo
adc
mov
outsl
call
push
jg
pop
aam
jno
and
add
shl
inc
sub
sti
cmp
and
mov
and
adc
int
pushf
mov
stos
pushf
jno
sub
xchg
adc
inc
sbb
loop
shl
cwtl
and
xchg
fbstp
mov
dec
adc
pop
iret
or
and
adc
jb
lahf
mov
xorl
or
adc
sbb
pop
mov
test
test
stos
testb
mov
mov
or
and
adc
mov
popa
add
push
aad
loop
pop
push
or
popa
dec
sbb
shlb
aad
and
mov
xor
xchg
and
loopne
add
sbb
test
push
pop
cmc
test
jno
add
in
mov
xchg
cli
addl
adc
mov
cmp
adc
int3
push
add
jge
rclb
push
and
dec
xchg
test
fldt
lret
lock
fsts
loope
add
xor
out
out
add
out
pop
sub
inc
sbb
dec
add
inc
pushf
mov
ret
push
aaa
test
jmp
pop
add
mov
loope
push
cld
inc
pop
mov
mov
lods
xor
lret
data16
or
xorb
push
aaa
push
xor
sub
xor
sarl
mov
dec
xchg
cmp
push
adc
and
loopne
xchg
pop
js
sbb
pop
mov
or
xor
ljmp
xor
cmp
rcr
adc
cld
cmp
add
pop
xor
in
rcll
mull
das
push
jge
fstl
sbb
icebp
jg
loopne
dec
cld
cmp
cwtl
sub
movsl
clc
pop
dec
scas
sbbb
popa
push
cs
jmp
xorb
lds
mov
cmpl
push
or
lods
jno
clc
inc
sbb
xchg
inc
mov
mov
test
lock
mov
mov
out
push
or
jecxz
inc
xlat
mov
dec
push
and
outsl
jo
ja
das
or
in
xor
push
incl
out
xchg
divb
adc
scas
pop
mov
rorl
pop
loopne
ficoml
or
sub
add
aaa
js
xchg
aas
xor
data16
fcomps
mov
sbb
push
imul
xor
call
adc
clc
or
mov
adc
xor
loop
pop
pushfw
mov
mov
mov
cltd
bound
int
stos
adc
and
push
add
mov
jmp
cld
outsb
mov
add
xchg
add
ljmp
out
ljmp
fldl
xchg
push
in
jecxz
add
aas
in
ja
int
add
sub
nop
or
mov
jp
push
and
sarb
push
movl
inc
and
rclb
xor
dec
and
add
xchg
jecxz
dec
mov
inc
push
push
js
iret
pop
jmp
pop
clc
sti
loop
and
jge
movsb
mov
enter
mov
fisubrs
jmp
nop
hlt
jno
call
xchg
insl
jp
mov
adc
cmp
mov
adcb
hlt
dec
aam
in
sub
les
mov
sti
sbb
mov
sahf
inc
sub
push
inc
dec
inc
std
and
fisttpl
adc
mov
cltd
cmp
pop
data16
hlt
xor
cltd
sbb
or
jne
lock
cs
inc
add
dec
mov
je
call
std
dec
add
arpl
pop
cmp
stos
jp
ss
cmp
add
fwait
push
shlb
testl
daa
test
out
testb
xchg
dec
test
cmp
bound
sahf
es
mov
enter
rcrb
andb
or
inc
dec
leave
adc
call
pop
sub
enter
fmuls
rorb
cmpsl
sbb
jmp
lcall
jecxz
daa
adc
push
into
mov
push
ljmp
call
mov
mov
sbb
pop
sbb
dec
dec
loopne
inc
cmp
orb
sbb
mov
repz
sbb
mov
inc
mov
adc
jmp
push
je
mov
andl
lods
les
es
in
rcll
or
loope
mov
rolb
or
jne
push
js
sub
inc
sbb
and
into
out
sub
dec
das
add
int
dec
sbb
or
jge
ret
or
int
bound
push
lock
push
sub
scas
arpl
xor
push
jae
loope
ljmp
adc
push
mov
es
sbb
add
xchg
xor
lock
or
pop
out
into
ret
add
subl
add
inc
test
sub
pop
push
xor
and
out
dec
pop
adc
adc
inc
pop
sbb
shll
cmc
rorb
popf
sbb
rcll
xor
lret
pop
cmp
ret
js
cmp
mov
loop
jns
push
and
add
outsb
mov
aaa
push
mov
and
xor
and
push
loop
shll
mov
mov
call
xor
imul
popa
sub
cli
cmp
dec
adc
outsl
or
bound
mov
or
adc
addb
pop
movsl
sub
test
mov
insb
sbb
and
xchg
inc
das
jmp
push
mov
inc
mov
js
mov
pop
arpl
mov
faddl
pop
aas
and
sbb
sub
enter
shrl
jg
pop
and
dec
pop
xor
test
and
mov
jae,pt
in
jo
sub
mov
adc
shll
and
mov
lahf
icebp
sbb
lahf
push
add
push
pop
mov
lock
nop
fidivl
add
pop
push
movsl
lock
inc
jge
or
and
fbstp
add
xchg
push
inc
mov
sub
sbb
inc
stos
pop
lock
jno
mov
mov
lcall
mulb
cmc
push
and
push
add
mov
ljmp
js
sbbb
jmp
inc
loop
lock
arpl
test
shlb
outsb
adc
aaa
mov
push
or
or
and
jne
jno
cmpsb
or
push
dec
or
test
in
dec
clc
enter
mov
inc
shrl
sub
pop
popf
or
test
jecxz
and
fildl
icebp
int
dec
sub
orb
add
or
jg
iret
push
fmull
mov
and
mov
sub
inc
int
xchg
sbb
or
push
pusha
pop
loop
cmc
aaa
add
jl
fcoms
out
push
addr16
and
dec
adc
repnz
jns
rclb
cmp
push
cli
lcall
add
lcall
mov
out
mov
sbb
mov
xor
mov
pusha
xchg
lea
hlt
mov
outsl
adc
popf
pop
xchg
mov
cmp
aas
filds
adc
std
sbb
imul
daa
inc
repnz
fidivs
pop
mov
xchg
in
out
nop
in
sbb
dec
in
adc
data16
sub
or
pop
jbe
movsb
int3
push
xchg
sub
jnp
push
in
xchg
jle
stos
pop
push
cmp
repnz
jle
jbe
incb
pop
and
ss
dec
mov
das
lds
dec
lea
sub
cwtl
lods
pop
sub
test
jg
push
call
sbb
sub
jo
xorb
addb
jno
jne
ljmp
add
cli
xor
xor
cld
pcmpeqd
jl
loop
mov
pop
mov
mov
into
sub
lret
divb
in
mov
aam
in
fidivrs
imul
jmp
and
sbb
bound
jno
ret
fildl
pusha
pushf
jns
add
push
mov
cmp
inc
push
adc
mov
outsl
pop
ja
roll
adc
jo
xor
das
incl
outsl
mov
fdivrp
adc
aad
cltd
insb
inc
inc
dec
xor
fcomi
mov
loopne
shlb
push
fisubs
push
adc
adc
jnp
cmc
dec
js
dec
js
int3
insl
insb
or
aaa
mov
cmc
mov
mov
and
mov
fsts
je
hlt
mov
push
mov
pop
xchg
cmp
lods
data16
test
xchg
mov
je
das
sub
and
nop
fucomip
jb
mov
ret
or
mov
das
cmc
ret
das
fidivrs
daa
or
imulb
or
add
sub
fwait
push
adc
or
in
test
aad
mov
ficoml
and
addl
pop
imul
jno
call
mov
idivb
and
cs
or
mov
call
adc
sub
and
pop
push
daa
push
xor
dec
shlb
push
push
nop
aaa
cltd
mov
arpl
fimull
in
adc
adc
and
loopne
aaa
sbb
mov
xor
stos
inc
imul
icebp
pop
jb
pop
add
dec
clc
and
call
pop
fadds
adc
jl
xchg
aas
mov
mov
insl
out
push
push
scas
cmpsl
or
xchg
or
call
in
call
cmc
or
dec
xor
xchg
clc
enter
mov
mov
add
sahf
inc
dec
icebp
sti
cli
push
fst
add
xor
lds
xchg
test
or
xchg
decl
addr16
lcall
out
pop
outsl
rcrb
or
or
add
arpl
or
imul
pusha
sti
popl
loope
mov
or
push
lock
scas
add
jmp
lcall
out
inc
dec
idiv
cld
cli
and
outsb
mov
ljmp
sbb
jmp
push
xchg
jg
mov
jle
stos
fists
inc
clc
mov
addr16
jmp
fiadds
jbe
push
xchg
cld
xchg
pop
fidivs
add
adcb
jmp
aam
lds
xchg
lret
les
or
mov
loope
jl
pop
bound
call
adc
das
test
sbb
pushf
add
lret
mov
loopne
mov
aaa
or
ret
sub
xchg
aaa
inc
sub
jbe
or
sub
lods
in
xor
ficompl
dec
jl
mov
mov
sub
paddusw
cwtl
push
mov
add
xor
pop
sahf
inc
push
dec
out
mov
fdivr
inc
jge
xor
xchg
xchg
cs
mov
and
mov
sbb
repnz
ret
pushf
sbb
mov
push
xor
mov
xor
add
out
xor
out
lock
cli
cmp
xor
jecxz
outsl
pop
incb
enter
dec
jge
sub
or
das
rorb
and
cmp
movsl
jmp
into
leave
mov
jno
fdivrl
jo
mov
imul
addl
jg
movsb
xor
mov
mov
dec
mov
rcrl
or
call
pop
mov
xchg
lock
ret
sub
sub
jo
aaa
fdivrp
loopne
cli
push
pusha
push
nop
jge
outsl
pop
adc
pop
cmp
cmpsb
daa
insb
out
decl
orb
jne
inc
pop
or
add
rcrb
aaa
cld
mov
outsl
fnsave
and
sbb
stc
or
test
nop
xor
scas
push
pop
aas
es
out
loope
mov
lods
in
jbe
pop
push
pusha
push
pop
cmpsb
scas
in
notl
ret
outsb
jbe
std
xor
pop
cld
out
inc
and
jne
lret
shrb
xlat
cli
jae
cmp
or
int
push
add
sbb
rol
adc
stc
xchg
je
push
jo
aaa
adc
sbb
fistpl
cmpl
je
decb
stos
xor
cmpsl
or
push
stos
pop
adc
cmc
push
adc
mov
fcompl
adc
sbb
gs
adc
fistpl
outsl
mov
push
int3
shrl
xor
loopne
xor
jl
dec
out
jl
sarb
adc
cwtl
imul
cmp
add
mov
mov
sbb
pusha
cmp
idivb
test
push
push
cmpsl
or
mov
sbb
sar
andnps
mov
dec
adc
outsb
push
out
jne,pt
mov
push
lock
dec
sbb
cld
lret
loop
das
mov
mov
rolb
in
mov
cmp
gs
movsl
jmp
or
outsl
push
push
outsl
jo
popl
mov
add
mov
andb
addb
aaa
addr16
jb
cmp
push
aad
ffreep
jnp
xchg
ret
inc
ret
aaa
jo
ret
or
xchg
lods
repz
or
nop
movb
or
mov
dec
jmp
xor
test
xor
das
xchg
xchg
aas
cmp
lock
add
mov
pop
push
and
mov
push
loopne
aad
adc
push
cmpsb
fbstp
adcb
pop
mov
dec
inc
or
jp
jne
mov
pop
sub
lock
aad
xchg
add
out
icebp
and
aam
rcrl
subb
xorb
popf
mov
cli
jmp
xor
data16
ljmp
adc
push
mov
loopne
pushf
mov
sbb
jne
mov
lret
xchg
rcll
test
jmp
lea
sub
jo
scas
or
push
test
cmp
push
cmp
movl
adc
inc
sbb
jl
mov
ja
pusha
xchg
mov
repnz
add
nop
jl
mov
mov
ljmp
les
imul
and
ret
out
mov
mov
jo
or
mov
adc
xchg
dec
pop
jp
or
rcl
xchg
pop
leave
mov
lds
adcb
cmpsb
out
scas
pop
xchg
shrb
mov
push
and
push
insb
jmp
pop
outsl
mov
or
lock
icebp
je
fimuls
shl
adc
insb
cltd
inc
ja
cmpsb
mov
sti
sub
or
es
sub
pop
inc
xor
int
movsb
xchg
dec
inc
cmc
mov
decl
shll
dec
in
dec
mov
sub
xor
out
mov
xchg
pop
notl
ret
inc
adc
inc
outsb
push
adcl
mov
or
inc
icebp
sbb
add
add
rorl
and
sbb
add
cwtl
mov
lahf
cmp
pop
push
mov
lahf
idivb
rorl
dec
out
stos
add
sub
cld
dec
pusha
add
jge
scas
stos
sub
cld
sub
jne
sub
sbb
inc
lock
std
adc
and
mov
xor
push
push
mov
orb
mov
push
sub
ja
repnz
push
fildll
or
add
pop
dec
sbb
cmpb
rorl
xchg
les
add
call
adcb
and
xor
mov
subb
shrl
xchg
mov
mov
or
aad
call
fidivs
sub
xor
adc
mov
ja
imul
out
and
std
inc
add
and
or
sbb
jbe
adcb
sbb
fiadds
lods
test
stos
pop
repnz
adc
addr16
sbb
addl
iret
loop
dec
adc
fcoml
stos
call
rcr
sbbb
adc
sub
inc
or
push
push
shl
inc
cmp
mov
push
cs
inc
lods
popf
das
ss
sbb
loopne
dec
xor
lret
push
or
jecxz
sbb
adcb
mov
mov
push
jg
int
jl,pn
loopne
jge
and
cld
add
pusha
clc
push
aas
imul
test
or
xchg
fisubrl
push
sbb
xchg
in
or
jp
dec
fsubrs
jl
or
out
pop
lea
push
jae
lea
push
dec
adc
adc
lret
pop
adc
inc
xor
jg
mov
fiadds
and
inc
add
subb
dec
lods
sub
fstps
and
lea
sbb
add
lret
andb
hlt
fwait
int
sub
sbb
sbb
std
ret
addl
cmpsl
loopne
cmp
in
inc
add
rorl
or
push
push
loopne
jae
or
and
xor
cmpsb
call
xchg
and
inc
lahf
jno
ja
xchg
ss
cltd
push
inc
and
or
pop
mov
fisttpll
rorb
data16
inc
inc
mov
dec
inc
mov
and
mov
jg
insb
dec
lret
sub
or
andb
inc
iret
nop
sub
pop
outsl
xchg
push
rcrb
dec
sub
or
pop
inc
movsb
mov
es
aaa
sti
or
push
cwtl
cltd
das
stos
cs
sbb
imul
in
inc
adc
sbb
jecxz
adc
rorb
and
push
jbe
addr16
movsb
adc
adc
push
push
push
push
dec
loope
inc
out
or
pop
xchg
clc
aaa
mov
pop
mov
in
loopne
mov
arpl
add
icebp
mov
daa
xor
adc
sub
std
ja
pushf
enter
cmp
xchg
data16
icebp
cmp
stc
dec
mov
adc
les
pop
enter
adc
push
lcall
inc
or
xchg
in
adc
xchg
inc
call
xchg
xor
fsubs
jge
je
pop
test
push
leave
jno
xchg
rclb
je
sub
mov
leave
loop
dec
or
movsl
pop
icebp
ficomps
testl
sbb
dec
test
data16
fdivr
xchg
fsubrs
push
outsl
or
icebp
lcall
jge
pop
jbe
testb
mov
sti
lea
lea
xchg
lcall
lcall
in
sub
and
push
sub
rolb
cmpsl
movsl
jmp
dec
fdivr
and
mov
inc
iret
jne
jae
stos
in
outsl
pop
push
or
xor
arpl
pop
dec
mov
popf
mov
std
dec
mov
jbe
loope
xchg
cmpsl
jmp
sub
and
cld
sub
pop
stos
not
pop
test
or
insl
sub
inc
cltd
les
xchg
loopne
jnp
icebp
pop
nop
cmp
or
out
out
pushf
jp
mov
and
outsb
or
jp
popf
shr
movsb
mov
pop
fs
mov
cmp
inc
adc
xchg
xchg
mov
xchg
orb
mov
mov
iret
test
repz
or
dec
adc
outsl
mov
ljmp
jb
jo
rcrb
cli
out
mov
cmpsl
movsl
mov
jo
mov
aad
sbb
mov
sub
add
add
shrl
rolb
rolb
mov
in
ljmp
incb
les
dec
mov
pop
lret
js
call
or
add
jle
repnz
lcall
xor
das
iret
in
and
jl
pop
push
jns
fcmovb
cwtl
and
daa
mov
or
ds
aaa
cs
mov
rcr
push
mov
mov
pushl
push
push
divb
pop
mov
movsb
outsb
xchg
loope
ljmp
inc
ds
jg
fucomip
aad
dec
inc
cmp
cs
xor
in
cltd
js
add
push
lret
call
shrl
or
pushf
aad
dec
aas
push
inc
mov
cmp
mov
popa
aaa
sub
jecxz
addr16
arpl
dec
fmul
das
cmc
mov
add
dec
mov
cmp
dec
inc
hlt
cmp
push
and
and
xchg
imul
and
xor
xchg
std
add
mov
iret
jne
ds
lock
test
xchg
ss
pop
jge
xchg
xchg
mov
adc
in
xor
popl
sub
clc
cmp
in
decl
sbb
test
xchg
jecxz
fcmovnu
dec
dec
mov
cmp
std
sbb
ds
cmpsl
pop
testl
inc
ss
iret
imul
fbld
jp
and
out
add
data16
inc
imul
mov
sbb
sbb
dec
addr16
xor
loop
jecxz
jmp
jg
hlt
and
cmp
leave
mov
es
jne
popf
sbb
mov
fisttpll
inc
outsl
add
jecxz
mov
filds
js
jnp
cmp
sub
test
stc
sbb
add
pop
jge
push
mov
fwait
jne
movsl
push
sahf
sub
das
push
movsl
adc
push
jl
sbb
push
shlb
push
cli
push
sub
jno
dec
and
mov
pop
or
call
inc
cmp
cwtl
inc
adc
jge
adc
and
shlb
shrl
and
test
inc
xor
or
sub
outsb
leave
roll
mov
sub
cmpsl
or
out
xor
pop
xchg
mov
sbb
sub
and
xchg
ficomps
and
dec
or
pop
sub
push
arpl
inc
les
js
dec
push
xor
inc
lcall
out
fisubrs
jae
inc
aas
sub
cs
mov
xchg
adc
mov
clc
repnz
rolb
lds
push
add
mov
lods
inc
lahf
inc
ss
les
je
clc
test
in
cmpsb
outsb
rcll
mov
adc
jmp
enter
out
inc
xchg
pop
jb
dec
add
icebp
inc
ds
sub
loope
and
and
push
lock
sbb
cwtl
pop
js
xchg
adc
out
push
ss
push
dec
mov
pop
ficoms
movsb
stos
incb
inc
in
push
cmpsb
cmp
adc
mov
in
adc
xor
pop
jnp
cmp
fidivs
fxch
mov
and
inc
or
test
loop
mov
or
dec
push
cmp
jb
xchg
push
mov
inc
mov
enter
lods
mov
test
sbb
adc
shrl
movups
ljmp
adc
lock
xchg
push
aam
out
leave
mov
popa
aam
pushf
xchg
inc
mov
pop
lods
jb,pt
loopne
fcomps
and
ret
gs
les
push
xor
daa
dec
mov
in
pop
mov
dec
lea
jl
push
xor
das
xchg
mov
es
fisubrs
add
sahf
mov
jl
sub
fwait
adc
xchg
mov
inc
out
xor
ficoms
or
enter
jo
fdivrp
adc
adc
ficoml
fimuls
fcomi
and
sub
cltd
add
xor
xor
xor
dec
call
xchg
cmp
and
and
lds
inc
sub
inc
in
or
fdivs
push
shlb
nop
insl
inc
inc
fidivrl
and
lea
test
iret
jg
inc
add
inc
mov
lods
ficoml
imul
sbb
or
mov
in
daa
jo
push
icebp
adc
fldt
sti
adc
aaa
cmc
pop
mov
pop
push
and
lods
aaa
mov
mov
dec
fidivs
mov
xchg
cmp
push
daa
jne
push
push
fimuls
xor
push
imul
xor
mov
cmp
mov
rcl
add
sub
das
addr16
or
jg
fldt
or
mov
cmp
adc
rol
xchg
popa
ds
ja
and
mov
aam
pop
lods
and
mov
mov
mov
push
sbbb
sbb
mov
popa
lea
and
or
pop
cmp
push
xor
adc
das
les
xor
test
das
hlt
jb
fsubp
aad
shlb
or
ljmp
sbb
dec
ror
jne
jae
xchg
leave
sub
jmp
sbb
adc
fildll
adc
imul
mov
pop
jg
mov
adc
arpl
add
mov
mulb
or
sub
jns
push
mov
mov
mov
cmpb
test
rorl
cld
cmp
sbb
dec
scas
insb
add
fstpt
or
cmp
add
mov
inc
call
inc
rclb
cmp
fmuls
sub
push
sbb
mov
xor
les
push
adcl
in
ljmp
jns
inc
add
arpl
and
mov
push
add
fnstsw
filds
push
repz
pop
adc
mov
dec
add
dec
jecxz
lock
add
or
jge
jno
xchg
pop
and
jge
inc
outsl
test
sub
pop
jmp
pop
clc
incl
jle
jp
adc
cmpsb
lret
jl
sbb
es
mov
xor
add
jle
nop
add
cmc
ljmp
push
sbb
lahf
popf
inc
bound
aas
addr16
mov
cld
aaa
jb
xor
xlat
add
add
sub
mov
iret
repz
ret
sub
cld
mov
sbb
orb
sub
and
xor
ljmp
mov
stc
and
mov
push
sub
mov
jmp
add
jp
sub
mov
dec
push
repz
cmp
sbb
mov
fwait
push
or
jae
adc
aam
lea
ds
mov
out
test
mov
popa
mov
mov
lock
and
add
inc
sbb
mov
aad
mov
adc
sbb
add
mov
mov
aam
adcl
jecxz
jne
shrl
test
clc
fbld
push
cmp
aas
popa
xchg
inc
gs
inc
in
pop
rcl
push
xchg
and
sbb
pop
std
xor
push
stc
daa
mov
pushf
jno
mov
aam
jne
shlb
cmp
or
or
outsb
mov
fcomps
add
in
arpl
cmc
mov
fcompl
push
jl
adc
xor
adc
push
or
and
jp
lret
push
das
in
add
mov
jne
loop
add
adc
fs
inc
pop
pushl
add
inc
std
shlb
hlt
xor
mov
or
push
add
jg
mov
aam
pop
lea
rorb
adc
pushl
insb
repz
or
cmp
push
mov
stos
cs
inc
push
and
fcomp
out
subl
mov
xor
or
inc
aam
jbe
in
add
jg
mov
xor
and
add
pop
xchg
pop
sbb
and
mov
add
and
xlat
sbb
sub
push
pop
jbe
add
mov
fldt
or
notl
pop
aas
adc
je
loop
sub
fs
and
push
pop
add
adc
push
cmp
out
aas
push
ficoms
push
popf
jecxz
inc
mov
es
icebp
dec
mov
jl
xchg
aas
and
xchg
xchg
pop
or
push
call
xor
mov
cmp
loope
scas
inc
fcomps
push
stos
mov
and
fnstcw
sub
push
sarb
aam
push
add
push
or
in
push
push
jg
or
xlat
ljmp
nop
leave
sti
cmpsb
sbb
je
scas
jno
pop
jmp
outsb
sbbl
mov
fldz
aaa
stc
pop
lcall
mov
jo
insl
dec
aaa
inc
cmp
mov
jl
insl
in
jge
test
or
mov
mov
mov
bound
inc
not
enter
mov
dec
jl
cmp
int3
repz
ficomps
ret
shlb
pop
cmp
sti
mov
cmpsb
fdivrs
cmpsb
ss
mov
mov
roll
sbb
adc
dec
dec
mov
or
push
adc
in
pop
scas
pop
add
out
jle
pusha
and
and
jecxz
rol
aam
sti
pusha
ljmp
ret
loopne
push
test
or
loope
xor
mov
sbb
lods
test
mov
push
push
jmp
dec
xchg
idivl
outsb
shll
and
push
icebp
cs
xchg
fwait
jo
in
or
stos
test
xchg
test
jno
mov
add
sbb
mov
or
roll
and
sub
mov
push
mov
sub
fcmovu
and
pushf
push
xor
adc
aad
mov
mov
fcmovnbe
cmp
xchg
lcall
mov
push
out
scas
rcll
add
or
or
sti
mov
push
inc
dec
cmc
and
orb
mov
jg
pop
out
ss
push
adc
mov
aaa
or
inc
es
nop
popf
pop
fmuls
add
jb
das
shrl
fisttpl
adcl
pusha
into
sub
xor
pop
mov
loop
sub
mov
call
stos
sub
xchg
outsb
sbbl
repz
adc
xchg
add
int3
cmpl
out
mov
sbb
outsl
je
stos
push
rolb
pusha
shlb
xor
jmp
cs
bound
out
inc
xchg
in
or
cmp
dec
aas
add
add
clc
xchg
out
ss
xchg
push
mov
lock
cmp
inc
jmp
mov
mov
test
mov
enter
add
out
xchg
aad
lock
push
call
ficomps
adc
adcb
mulb
jo
mov
push
push
inc
and
dec
icebp
mov
or
stos
icebp
sbb
xor
add
jae
popf
push
fistl
popa
pop
cmpsl
addb
repnz
mov
cmpsl
sahf
jbe
leave
daa
repnz
mov
inc
fistpll
push
ret
mov
sarb
test
mov
or
dec
mov
shrb
xlat
fldt
pusha
dec
add
adc
aaa
ret
sbb
mov
stos
dec
pop
mov
lcall
ficompl
in
or
add
ja
mov
or
push
sbb
sti
push
mov
xor
ljmp
adc
fildll
add
jmp
jl
xor
mov
icebp
je
sbbl
fadds
push
inc
mov
mov
xchg
and
mov
lea
push
push
pop
hlt
movsl
lahf
call
mov
outsl
pop
aad
adc
rclb
jnp
shrl
adc
fdivrs
or
pushl
mov
cmc
xchg
push
or
shlb
pop
inc
int
cld
cwtl
and
push
and
lret
push
stc
out
sub
push
push
test
mov
pushf
mov
out
add
xchg
cmc
cmp
xchg
adc
jl
outsl
pop
push
mov
sbb
xchg
sbb
jl
or
outsl
inc
pcmpeqw
jae
das
movl
mov
jnp
mov
or
or
mov
outsl
hlt
inc
cmp
pop
cld
inc
push
stos
in
addl
xchg
call
xchg
xchg
ret
mov
pop
je
push
scas
pop
adc
mov
jmp
pushf
test
je
add
and
movsb
mov
loopne
int3
push
dec
sbb
push
dec
mov
cmc
push
mov
or
decl
mov
aas
dec
jbe
in
cmpl
xor
add
and
dec
das
cltd
jns
popa
loopne
test
ljmp
std
mov
shll
add
jp
mulb
addb
sti
pushl
inc
lock
test
pop
sbb
sub
jo
std
jb
inc
mov
mov
push
sub
jmp
daa
xor
mov
mov
insb
mov
fisttps
sub
inc
cmp
mov
lcall
fistpll
mov
xor
mov
jl
jo
pop
in
jmp
mov
movsb
jg
arpl
ficoml
cld
fwait
adc
sbb
cmp
adcl
fcmovb
adc
cld
push
lock
call
sbb
adc
sbbb
les
aas
push
sbb
pop
call
enter
sbb
xor
xchg
repnz
fwait
clc
sub
mov
push
cmp
movb
loope
inc
jl
fwait
ret
scas
out
mov
sub
and
add
sbb
mov
push
mov
mov
arpl
dec
decl
sub
data16
sbb
jmp
pop
fnsave
stos
sbbb
pushf
pop
jmp
add
adc
pop
xchg
rcrb
shll
pop
mov
jle
cmp
jl
movsl
inc
or
pop
imul
test
sbb
sbb
mov
aaa
lock
and
and
out
cmpsb
xlat
xchg
movsl
lods
aaa
in
pop
push
daa
pusha
xchg
xlat
push
mov
mull
dec
dec
push
pop
out
cmpsb
loope
loope
rcr
push
xchg
ss
add
cld
mov
xor
pusha
cwtl
mov
fadds
cmp
and
aaa
jle
mov
int
ja
sbb
std
lods
jg
push
mov
fcmovnbe
and
push
sti
js
fcompl
shrl
inc
xorl
pop
nop
sbb
pop
outsl
pop
mov
add
int3
jg
hlt
filds
in
push
pop
aam
popa
inc
push
cmp
add
les
aam
xchg
out
fnstsw
movsb
add
js
pop
and
lock
imul
mov
loop
daa
aaa
sub
add
shl
mov
pop
dec
nop
xlat
adc
stc
pop
cli
incl
pop
inc
dec
mov
sub
in
enter
add
aaa
add
adc
cld
cmpsl
pop
lds
fidivrs
sbb
icebp
xor
push
les
cmp
cmpsl
add
push
jae
fadds
xchg
stos
adc
cli
mov
pop
push
repnz
add
inc
into
add
jg
ja
aas
adc
mov
arpl
loopne
lahf
jns
push
clc
lea
in
inc
mov
stos
rcrb
and
mov
je
and
adcb
cli
mov
and
mov
add
dec
adc
mov
add
push
xchg
sbb
fmuls
xlat
sbb
aad
sti
test
stos
aam
and
mov
lds
lock
fimull
xchg
hlt
pop
pop
dec
mov
xchg
in
mov
adc
inc
repz
xor
cmpsl
mov
sbb
dec
or
xor
ss
jecxz
or
gs
mov
in
lret
repnz
hlt
ss
jecxz
aam
jle
mov
ds
movsl
call
mov
js
pop
add
or
mov
ss
out
and
mov
mov
pop
pop
js
xor
cmpsb
cmp
mov
add
mov
jbe
popa
push
in
mov
dec
cmp
loope
add
out
fnsave
add
rcr
je
mov
jg
cmpsl
cwtl
lcall
fnstsw
mov
ja
cmp
fs
leave
das
jle
xor
sbb
adc
add
outsb
xchg
fadd
or
lcall
lea
xlat
es
sub
dec
jb
leave
cmp
jp
stos
push
icebp
test
into
outsb
xchg
push
xchg
lcall
iret
push
xchg
xchg
adc
movsb
mov
push
sub
mov
rcrb
lcall
or
in
adc
cli
stos
enter
add
inc
mov
iret
sub
inc
or
mov
add
pop
mov
xor
dec
inc
adc
and
insl
les
or
and
dec
xor
xor
mov
and
xchg
push
les
push
test
or
jae
ja
into
adc
int
xor
inc
xor
aam
sub
out
xchg
push
cmpsb
stos
loop
nop
bound
mov
jle
fsub
arpl
mov
jo
push
inc
es
inc
mul
pop
mov
and
push
add
das
dec
xor
add
mov
mov
bound
sar
jl
push
dec
adc
adc
xchg
mov
lea
sub
lret
js
sbbb
dec
lret
mov
xor
mov
popw
in
fldcw
fsubl
mov
icebp
sub
sbb
adc
shrl
dec
fisttps
jnp
xor
out
push
jle
int3
out
or
pop
int3
adc
push
adc
adcb
in
push
sarl
push
gs
scas
add
push
or
mov
cwtl
add
popl
inc
lss
repnz
je
dec
push
and
add
movsb
add
bound
test
xchg
lods
mov
mov
sub
aas
clc
int3
push
push
dec
push
dec
shrl
xchg
shrb
push
clc
stos
adc
fdivr
inc
xchg
out
push
cmp
add
cmpsl
mov
add
pop
mov
out
test
jae
pop
xor
cli
add
inc
dec
les
lock
add
test
and
mov
inc
sbb
daa
add
sbb
pop
in
add
and
mov
add
les
test
rol
add
jae
es
int
jnp
fbstp
iret
and
test
jmp
lods
mov
shrl
notb
pop
mov
ja
xchg
xor
std
sub
mul
add
and
fsubl
xor
mov
call
cmp
push
jg
movl
pop
mov
js
inc
cmc
aaa
shlb
xchg
and
leave
jg
lods
inc
std
clc
dec
int3
pop
inc
pop
inc
ljmp
das
aas
orl
jmp
pop
adc
js
and
out
bound
mov
andb
cmpsl
push
or
sbbb
sbb
stc
sub
aad
inc
add
add
or
mov
mov
je
daa
inc
test
fistl
stos
cmp
movsb
das
mov
pushf
mov
ljmp
sub
gs
dec
je
push
imul
and
int3
xor
or
sub
sbb
push
adc
mov
sub
xchg
push
fsubrs
aad
lods
xchg
repz
lods
sbb
add
mov
mov
dec
or
sbb
mov
shr
adc
pusha
sbb
decb
or
cmp
jb
movsb
ret
aad
mov
int3
and
cld
jno
add
add
cmp
shll
stos
cmc
cmp
push
xchg
inc
imul
add
push
in
add
int3
and
movsb
test
int3
das
sub
scas
mov
or
shrl
mov
mov
in
shrl
pop
addr16
bound
inc
xor
in
adc
or
dec
jb
inc
jo
inc
adc
mov
mov
in
sub
pop
xchg
xor
xchg
imul
dec
mov
mov
push
movl
fists
fistpl
in
xor
sti
cld
add
inc
cmp
mov
adc
add
push
shlb
mov
lret
ja
mov
jbe
iret
les
arpl
sub
adc
and
adc
mov
shr
xor
cmp
fwait
arpl
rorl
cmp
orb
jne
mov
popf
mov
fldcw
jmp
jl
or
sbb
inc
fbld
movb
dec
and
xor
sbb
mov
fcoml
sbb
fdivrs
xchg
push
data16
xor
jp
je
nop
mov
and
or
fsubl
fdiv
lea
jmp
out
popa
cwtl
ret
jp
pop
sbbb
mov
call
popl
es
frstors
mov
push
hlt
mov
xlat
sub
out
inc
lcall
sbb
clc
mov
sbb
xor
test
mov
pop
mov
fnsave
ret
jg
push
pop
jb
mov
out
dec
add
cli
arpl
pop
xchg
shlb
push
les
popa
mov
mov
mov
mov
mov
or
pop
jnp
pop
or
aad
xchg
push
xor
mov
and
dec
lcall
add
fildll
ret
icebp
mov
push
fucomi
add
push
pop
push
xchg
popa
mov
filds
popa
inc
xchg
aas
stos
add
jb
adc
pop
sub
push
sub
pop
pusha
and
add
xor
sti
jmp
jno
add
pop
aas
xor
ret
jmp
xchg
mov
and
inc
mov
mov
sti
jg
call
mov
addb
std
and
and
add
dec
or
neg
mov
adc
and
sbb
inc
add
adc
in
jne
into
dec
sbb
and
or
fidivrs
fldl
adc
or
adc
jge
imul
add
mov
inc
inc
sbbb
mov
inc
outsl
push
frstor
inc
orb
mov
push
pop
adc
or
jnp
mov
sub
dec
xchg
addb
fwait
mov
cltd
imul
add
sub
mov
in
insl
adc
inc
or
rolb
push
jae
data16
inc
add
shll
rolb
or
sbb
pusha
add
mov
or
add
pop
mov
insl
in
or
add
imul
pop
pop
add
jge
and
dec
dec
inc
addr16
je
mov
jmp
or
adc
pop
or
cmp
pop
mov
pop
pop
pop
ret
ror
or
notl
pop
pop
add
sbb
movd
fidivl
ret
inc
add
sti
mov
pop
pop
push
adc
ret
inc
xor
es
idivb
sub
pop
pop
ret
and
fstpt
or
in
pop
enter
sbb
add
mov
pop
orb
add
mov
add
adc
ret
fimull
das
fidivrl
mov
cmp
addb
adc
sarl
in
adc
xchg
cwtl
cmp
dec
sbb
out
mov
cmp
mov
sub
mov
and
adc
sbb
imul
push
enter
mov
daa
dec
enter
std
jbe
adc
add
mov
jge
mov
call
aam
lock
cmp
pop
and
outsb
fisttps
not
inc
mov
pushl
ljmp
xchg
cmpsl
and
fimull
dec
and
fiaddl
add
mov
adc
mov
or
add
or
sbb
clc
sub
xor
mov
idivb
adc
loopne
cmp
testb
stc
mov
lock
testb
pop
or
push
and
cmp
jmp
shlb
fwait
popf
std
incl
out
cmp
inc
neg
not
mov
sahf
jnp
sbb
cld
jge
pop
xor
mov
xlat
lock
inc
aam
jnp
fwait
add
or
addr16
jbe
js
outsl
fadds
and
mov
rorb
not
mov
das
lock
mov
adc
fwait
xor
cld
add
rcr
hlt
or
sbb
mov
mov
sbb
xor
cli
daa
or
sahf
dec
sub
inc
push
aaa
fiaddl
test
mov
xor
in
ficompl
fsubs
adc
lea
clc
push
push
call
fs
cmpsb
ljmp
jns
ja
xor
jae
ret
dec
insl
mov
jbe
outsl
mov
daa
jecxz
andb
jmp
cmc
sbb
in
jbe
inc
arpl
adc
push
cld
or
incl
je
shll
add
lret
sbb
pushf
add
push
mov
out
insb
push
add
out
or
fcomp
xlat
je
loope
inc
add
add
xor
je
pop
sbb
faddl
aam
fiadds
xchg
pop
and
fsubs
sub
sub
movsl
add
add
jns
dec
xor
xor
xchg
cs
fsubrl
add
add
das
jg
insl
sbb
and
jo
adc
pop
add
and
data16
add
sbb
adc
imul
data16
mov
push
xor
push
push
xchg
mov
mov
popf
add
add
mov
repz
incl
push
or
sbb
xchg
xchg
push
jbe
add
sub
dec
or
fildll
ja
push
add
add
sub
dec
test
insl
mov
in
add
add
mov
pusha
pop
sbb
add
or
mov
ljmp
pop
es
adc
add
lods
jne
add
insl
adc
add
cmp
mov
das
mov
mov
fdecstp
test
push
pop
out
add
pushl
movups
add
add
add
dec
pop
lds
xchg
incl
mov
cmp
xor
mov
jecxz
cs
shlb
mov
mov
xor
sahf
add
testb
js
lret
or
add
pop
lcall
pushf
mov
lahf
fisubrl
rolb
imul
std
gs
dec
push
aaa
cmp
adc
or
insb
lock
inc
and
stos
subb
xchg
mov
cmp
cs
dec
or
aaa
sub
and
incl
jmp
pop
inc
inc
xchg
test
xchg
pushl
ss
jno
loop
mov
faddl
test
into
xor
add
mov
dec
push
jge
adc
pop
fdivrp
sti
add
sub
adc
mov
pop
mov
jp
xchg
loop
push
fstp
aas
add
jl
cmp
pop
subb
pop
clc
jnp
jp
repnz
add
in
filds
xor
nop
lcall
mov
roll
fwait
test
sub
or
adc
pop
jle
in
mov
add
mov
mov
or
cld
inc
and
hlt
add
push
ficompl
test
or
or
std
add
aas
out
mov
scas
dec
sbb
push
iret
daa
inc
mov
sbb
jg
sub
repnz
mov
mov
lret
stos
cmc
cmc
cmp
sub
ljmp
jle
or
dec
or
jne
nop
jg
in
xchg
dec
pop
icebp
add
loopne
or
in
mov
insb
add
mov
sbb
aaa
xchg
pop
imul
pusha
roll
leave
aad
outsb
jg
bound
sbb
data16
push
repz
lcall
and
loope
dec
xchg
addl
inc
jo
scas
imul
std
in
fisttpl
jbe
js,pt
out
and
sub
les
jp
pop
js
push
daa
int
orl
loope
or
ficomps
lret
div
pusha
cwtl
xchg
lods
jl
inc
xor
mov
std
pushf
sub
lds
scas
cmpsl
lock
cli
daa
test
sub
mov
mov
clc
pop
push
mov
mov
outsl
ja
js
popf
int
pop
ss
stos
xchg
mov
and
fnsave
pushl
push
fimuls
mov
adc
nop
cmp
cmp
lea
cli
cmpsb
xorl
stos
dec
mov
js
fcomps
icebp
into
lahf
sbb
jbe
add
xchg
jbe
scas
repz
mov
test
mov
add
xchg
scas
jecxz
in
shrb
lret
jmp
sub
cmc
pusha
arpl
pop
int
ret
jecxz
mov
hlt
mov
adc
push
pop
or
push
sbb
pop
jle
push
pop
pop
mov
fldl
cwtl
jno
jbe
fnsave
ret
mov
shl
fstpt
mov
xor
inc
int
ja
es
int
mov
aaa
mov
or
out
add
xchg
in
adcb
ljmp
pop
imul
push
adc
add
cmp
mov
dec
mov
pop
sbbl
mov
movsb
cmp
xor
xlat
pop
ds
into
xor
pop
ret
mov
pop
shrl
jecxz
jne
pop
cmp
push
fs
pop
add
cld
push
mov
jmp
push
xor
outsl
out
sbb
push
bound
stc
leave
popf
sub
jmp
and
pop
leave
lds
sub
xchg
sbb
cltd
js
pop
add
fisubl
sar
fistpll
mov
jne
mov
lock
in
in
mov
gs
jns,pt
dec
sar
mov
js
pop
jle
cs
inc
sub
and
cli
fstps
jns
sbb
hlt
lock
or
and
xchg
jg
in
jns
adc
and
mov
fcmovnb
insl
loope
cmp
js
decb
idiv
clc
iret
adc
jnp
add
sub
fadds
repnz
mov
xchg
jbe
fnsave
fucomp
cmp
add
adc
incl
ds
or
xor
mov
inc
int3
dec
add
lret
aaa
mov
imul
shlb
ds
xor
and
inc
arpl
dec
mov
mov
enter
mov
mov
pop
jmp
adc
dec
dec
and
aaa
mov
or
fildll
loope
pop
out
aaa
in
mov
cld
dec
add
and
movsl
mov
push
jmp
sti
shl
pop
mov
pop
outsb
mov
sub
adc
clc
fsts
jno
adc
push
mov
outsb
test
mov
fldt
std
xchg
push
pop
pop
lcall
in
jbe
icebp
testb
fchs
and
and
lcall
pop
jg
lret
xchg
popa
sub
pop
fs
mov
mov
sub
inc
xchg
pop
xorb
js
rcrl
scas
xchg
jmp
push
cltd
in
cli
mov
cmp
xchg
jnp
dec
push
xchg
cmp
enter
xor
sbb
es
pushl
sbb
inc
adc
stc
dec
xor
push
insb
and
loopne
add
loop
aaa
lock
in
add
sti
jo
rclb
adc
sahf
mov
rolb
clc
mov
icebp
inc
jo
or
clc
adc
add
mov
negb
mov
pop
aas
cmpsb
stc
dec
mov
jp
repnz
testb
xor
mov
gs
adc
arpl
loopne
repz
jle
mov
inc
shrb
out
mov
clc
cltd
clc
mov
clc
fidivl
xchg
lcall
test
nop
clc
mov
pop
jl
mov
or
xchg
add
pop
sahf
imul
test
jnp
insb
les
or
scas
fsubrs
aaa
add
or
push
cs
and
cli
sti
sarl
jb
sub
rol
sbbl
cmp
clc
les
xchg
in
xchg
js
in
add
push
les
cmp
adc
xlat
retw
jns
cmp
cli
mov
ret
mov
aaa
ljmp
lds
mov
xlat
insb
ret
popa
mov
push
mov
loopne
sbb
imul
push
jbe
or
rcr
daa
out
inc
mov
ss
jb
and
pop
mov
xor
lods
int3
inc
xor
dec
leave
xchg
push
std
mov
xor
decb
mov
add
popf
cmp
test
add
jne
add
or
jg
mov
mov
adc
cmp
pop
test
dec
cwtl
mov
pop
popa
adc
pop
cmp
lea
sub
outsb
pop
js
mov
cmpsl
push
mov
jg
push
ret
shl
xchg
jmp
shrb
out
xor
test
sub
ljmp
cmc
xor
in
add
jge
insl
out
pop
fcoml
pop
js
outsl
mov
in
adc
cmpsb
push
mov
mov
outsb
jecxz
or
dec
stos
or
lret
push
mov
pop
dec
and
lret
sub
notb
imul
push
adc
call
cmp
or
out
jbe
and
mov
mov
push
push
mov
jbe
jmp
cld
movsl
outsb
cld
jmp
out
mov
add
sub
imul
ljmp
and
sbb
sub
roll
pop
ljmp
push
test
inc
testl
mov
in
sub
lds
xchg
and
repz
subl
add
lcall
mov
stos
cmp
fs
or
mov
mov
pop
mov
xor
loop
mov
sbb
pop
dec
push
call
sub
xchg
mov
ja
push
int3
mov
mov
pop
xchg
pop
lea
test
decl
fwait
and
outsl
data16
ret
hlt
dec
jbe
mov
or
xchg
lcall
idivl
push
jge
mov
stos
jo
leave
or
sbb
adc
or
clc
mov
fcompl
out
sbbl
or
movb
aas
add
fdiv
or
mov
sbb
and
cld
mov
das
dec
leave
cld
cmp
adc
jne
xchg
jp
jnp
arpl
loope
aaa
mov
cmp
pusha
imul
jge
fdivrp
jg
loope
dec
adc
and
dec
mull
nop
adc
pop
call
fisttps
add
ret
cwtl
out
pusha
jo
jg
jmp
ret
adc
or
mov
cmp
repnz
cltd
daa
and
dec
nop
rcl
sub
xchg
ds
leave
jnp
mov
cs
movsb
mov
mov
aas
cmp
divb
push
jmp
mov
mov
jg
sbb
xlat
sub
pop
or
addr16
push
mov
test
push
test
mov
fnclex
mov
push
insb
dec
jo
repnz
push
ds
loop
shr
fcmovbe
add
clc
and
bound
mov
fwait
popf
mov
es
dec
xor
inc
arpl
sub
mov
lock
rclb
fisttps
repnz
imul
loopne
icebp
xchg
int
stc
add
or
jne
jne
mov
mov
jnp
adc
push
sbb
jp
push
sahf
adc
fstl
mov
fbld
pusha
adc
out
mov
popf
icebp
orb
divl
in
xchg
mov
dec
rclb
pop
push
rolb
jo
fldl
aas
and
pop
sbb
sbb
out
or
jle
add
sub
xorb
scas
orb
adc
pop
add
clc
add
negb
icebp
sbb
adc
cmpsb
dec
mov
cmp
dec
mov
add
mov
or
data16
mov
and
mov
ret
add
adc
mov
data16
out
pop
clc
pushf
xchg
je
cmpsl
filds
incl
jmp
and
mov
outsb
sbb
and
inc
dec
fsubr
mov
dec
out
inc
sub
sti
and
mov
daa
sbb
adcb
rcl
ficompl
not
inc
add
mov
negb
fs
mov
xor
and
insb
fwait
sub
out
imul
int3
pop
sti
movsl
push
mov
jecxz
add
add
xlat
xchg
inc
xor
in
pop
clc
cmpb
cli
cmpsb
fdiv
in
fldenv
or
dec
hlt
pop
lcall
and
out
dec
les
push
orb
adc
jne
lods
fisubrs
fsubrs
add
lods
jne
mov
inc
or
sahf
rcrb
loope
mov
and
insl
sbb
mov
fstps
inc
inc
pusha
ret
imul
js
add
jnp
push
mov
or
addr16
adc
dec
nop
stos
js
xor
adc
adc
inc
dec
xor
dec
and
stc
notb
push
add
hlt
add
lock
or
fdiv
icebp
sbb
pop
ret
sbb
mov
xor
in
or
pop
push
mov
test
inc
mov
jne
adcb
fbstp
jo
mov
inc
ret
mov
push
or
or
test
cmp
sbb
shl
mov
js
dec
testb
sub
shrb
repz
insb
lea
mov
aaa
jae
test
xchg
push
push
sbb
push
push
out
frstor
add
mov
dec
sub
push
int3
es
push
js
ret
jle
mov
sbb
mov
xor
cld
int3
imull
sbb
leave
push
push
cmpb
lods
xor
and
inc
and
adc
clc
jmp
xor
dec
mov
leave
ret
cmp
enter
mov
add
cs
inc
or
jno
rclb
mov
in
imul
add
mov
add
iret
nop
std
sbb
stos
bound
incl
or
sbb
jg
sahf
pop
mov
cmp
mov
call
mov
push
push
pop
dec
dec
test
fimull
leave
mov
sahf
cwtl
cmp
ficoms
add
xchg
push
sbb
add
lock
aad
in
xchg
shrl
add
decb
lock
and
pop
pusha
imull
mov
and
adc
push
cli
adc
sub
mov
shr
mov
jne
mov
loope
out
insl
movsl
sub
jecxz
orb
inc
jnp
out
pop
push
sub
lret
std
ja
adc
add
jae
sarl
dec
sbb
pop
sub
fmull
mov
add
mov
push
adc
sbb
inc
sbb
addl
mov
add
ror
fdivrs
sahf
push
mov
sti
inc
mov
jmp
sbb
in
test
rcll
cmp
pop
mov
dec
cld
xor
xor
push
or
or
out
sbb
sub
bound
loopne
lods
sbb
or
cmp
push
inc
loope
mulb
and
push
test
adc
mov
addr16
ljmp
pusha
fmul
push
lods
sahf
cmp
fs
inc
or
idivb
add
pop
fistpll
add
mov
cmp
pop
dec
icebp
dec
mov
jb
dec
pusha
mull
pop
ss
lret
xor
mov
hlt
push
pop
dec
mov
adc
cmp
outsl
inc
repz
ret
add
inc
adc
pop
xchg
fsub
xchg
push
ss
mov
sbb
lea
mov
xor
cmp
fwait
push
divps
pop
aad
fst
jle
or
pop
pusha
in
fisubrl
jae
std
sbb
sbb
sbbb
fcomps
std
mov
fadds
loop
call
imul
scas
mov
jbe
movsb
dec
mov
mov
mov
out
repz
cmp
insl
inc
inc
lock
push
subl
std
jp
aam
inc
mov
shlb
cli
and
adc
lds
or
pop
mov
testb
les
xchg
xlat
and
push
pop
ljmp
std
js
nop
inc
and
bound
insb
pop
sbb
call
push
or
push
add
cli
lods
js
adc
dec
and
ljmp
inc
testb
lret
and
sbb
not
push
testl
rorl
imul
fbld
clc
sar
mov
inc
add
add
jbe
jl
mov
adc
xchg
and
and
loope
push
sar
push
or
xor
or
mov
xor
das
jne
jbe
call
jmp
and
outsl
icebp
in
nop
push
xchg
loopne
fnstcw
repz
insb
add
pop
fisubrl
mov
jp
and
add
movsl
push
inc
lods
scas
mov
imul
pop
js
movsl
sub
jle
movsl
outsl
jecxz
add
cmp
add
scas
fcoms
or
stos
mov
pop
or
call
or
add
mov
lret
mov
xchg
add
adc
pop
xchg
dec
cld
pop
pop
in
xchg
fbstp
adc
jno
fdivrl
data16
loop
gs
icebp
loope
fidivrs
mov
out
pop
stos
dec
jle
inc
sub
movsl
pop
cmp
shlb
ljmp
out
mov
jmp
mov
xchg
mov
or
ljmp
mov
sub
push
inc
jb
or
aad
adc
jo
xchg
adc
xchg
mov
imul
push
div
add
cmp
bound
or
stc
test
dec
scas
cs
sbb
scas
jecxz
xchg
mov
into
inc
jae
mov
iret
mov
mov
mov
push
movsl
jbe
pusha
test
in
cmpsl
inc
cmp
inc
add
mov
js
push
out
jecxz
hlt
pop
pop
jp
cli
cmpl
outsl
push
mov
pop
leave
pop
popa
rcl
mov
xchg
jge
sbb
in
orb
dec
push
inc
dec
and
cld
jns
cwtl
out
incb
stc
mov
fdivrp
int
gs
inc
sub
xor
leave
push
mov
add
fidivrl
lahf
pop
add
cmp
test
xchg
sub
es
bound
mov
jmp
push
inc
fsubl
test
loope
inc
mov
adcl
loop
xchg
push
sbb
stos
aad
std
xchg
xchg
nop
popf
add
fwait
popa
outsl
pop
pop
push
mov
mov
frstor
or
fwait
movsl
out
mov
mov
mov
mov
ret
xor
push
push
sbb
fs
mov
movsl
or
mov
pop
jns
cmp
rolb
fcmove
mov
xchg
sbb
sbb
orl
inc
js
jbe
out
popf
mov
call
out
jbe
mov
mov
addb
fwait
add
mov
push
aam
mov
mov
bnd
jno
outsl
or
push
or
addr16
test
mov
jl
add
ret
out
dec
pop
and
aaa
lock
dec
or
xchg
jb
mov
outsl
imulb
lcall
data16
jae
mov
and
inc
mov
iret
xor
add
sub
jne
int
aad
inc
out
ret
or
mov
xchg
repnz
ret
and
pop
jno
or
xchg
mov
mov
cmp
push
pusha
mov
out
nop
pop
or
icebp
mov
data16
out
arpl
sbb
das
mov
add
movsl
popa
scas
lss
fbld
mov
rcr
scas
fwait
mov
xchg
int3
andb
incl
hlt
push
mov
sbb
push
mov
aam
mov
cwtl
inc
inc
adc
out
sub
in
neg
xor
mov
ljmp
pop
cwtl
jge
cmp
aaa
mov
adc
sub
push
arpl
mov
shlb
pop
add
rorl
jmp
out
callw
xlat
lods
lea
dec
sbb
xor
or
into
mov
xor
jmp
jne
add
add
xchg
mov
or
ret
sahf
ret
mov
add
fwait
rol
je
hlt
sbb
repz
out
int3
mov
jmp
push
sbb
faddp
dec
xchg
hlt
xor
sbb
jecxz
add
inc
and
cld
decl
test
mov
pop
sbb
cmp
movsb
push
dec
fcmovnu
bound
push
fildll
pop
ljmp
cmc
adc
xchg
sbb
test
fldt
mov
push
popf
mov
cld
sti
push
scas
mov
jecxz
jno
out
or
popf
nop
popa
cmpsb
push
xor
dec
bound
xor
sbb
mov
push
xchg
pop
jg
lcall
xchg
pop
hlt
xor
push
mov
mov
pop
cmp
repnz
enter
push
push
mov
test
hlt
mov
ss
cld
mov
repnz
mulb
pushf
sbb
repz
enter
call
out
adc
push
inc
repz
inc
push
stc
xorl
pop
aad
add
fiadds
negl
addb
pop
cmp
lock
pop
or
and
pop
add
fcmovu
dec
push
mov
mov
adc
shrl
add
xlat
push
push
les
pop
cmc
data16
sub
movsb
xchg
fadds
mov
inc
sub
mov
faddl
mov
adc
sti
fisttps
pusha
sbb
imul
stos
int3
mov
insb
cmpsl
and
cs
pop
andb
jns
sbb
xchg
and
rcl
test
mov
gs
iret
aas
inc
les
mov
fisttps
dec
outsl
cmp
push
xchg
pop
mov
pop
cmp
push
mov
stos
movsl
jecxz
sbb
iret
mov
pop
pop
jmp
shll
loop
aaa
add
shlb
push
and
pop
jae
or
rorl
inc
mov
movsb
lea
aam
cmp
add
gs
outsl
ss
mov
jmp
or
shll
xchg
int3
mov
cmpsb
pop
mov
ds
xlat
js
mov
adc
add
xor
das
shrb
mov
xor
fidivrl
pop
add
jns
add
and
cmp
jo
mov
sbb
lahf
push
add
repnz
movsb
xor
add
lock
jge
imull
sti
fwait
cmc
or
aam
sbb
mov
jno
loopne
aas
repnz
or
inc
clc
and
jecxz
hlt
push
pop
sub
aam
cli
mov
xchg
cmpsb
or
push
push
shr
pop
inc
xor
imul
ficoml
add
out
adc
loopne
cmp
fildl
flds
push
mov
mov
faddl
bound
push
mov
xor
pop
clflush
inc
jae
loope
mov
subb
test
jb
in
pusha
fcmovnbe
sbb
dec
andl
rorl
jle
mov
mov
shll
das
cltd
mov
add
sub
outsl
inc
xor
ss
out
dec
loopne
outsb
cmpsl
in
mov
in
ret
in
lret
mov
out
mov
inc
xor
dec
push
adc
stc
xor
push
or
ret
xor
rol
out
jge
add
dec
and
and
inc
inc
jp
rcrl
outsb
sub
xor
inc
xor
sarb
ja
and
jle
aaa
sbb
or
inc
sahf
adc
mov
shrb
popf
outsb
dec
mov
js
push
arpl
add
std
stc
add
jmp
dec
sbb
sbb
jnp
mov
cmp
or
repz
add
dec
lock
sub
sbb
cmc
fdivrl
das
or
notl
pop
popa
out
mov
fstps
pop
or
sub
jp
add
mov
ficomps
jg
mov
and
xor
pop
cmp
mov
dec
jno
mov
lret
ds
mov
call
mov
xor
adc
or
addb
in
sub
cmpsb
repnz
xlat
add
daa
adc
test
adc
imul
iret
cmp
push
out
pop
aas
inc
aam
mov
cmp
mov
or
ret
popa
clc
mov
xor
dec
push
push
out
js
js
lahf
add
add
and
shrb
hlt
inc
cmpsl
and
ret
arpl
out
in
and
or
bound
imul
pop
mov
int3
push
insl
cmc
jg
imull
imul
inc
xchg
subb
gs
cltd
xor
mov
jl
pop
call
es
adc
gs
repnz
dec
clc
or
cmpsb
sbb
call
jg
sbb
cwtl
enter
js
call
push
mov
movsb
icebp
and
aam
shrb
inc
pushf
sub
dec
mov
fsubl
mov
ss
rcrb
lea
pop
push
sbb
push
xchg
jge
dec
xor
mov
shrl
pop
loopne
pusha
das
frstor
loope
cld
push
push
mov
lcall
or
inc
ret
movsl
incb
sub
add
cmpsb
lea
dec
mov
sbb
cmp
jbe
cmpsl
inc
hlt
push
pop
sub
or
pushf
and
sub
push
bnd
mov
in
pop
scas
or
add
test
mov
test
jo
icebp
xor
push
jge
fdiv
push
inc
enter
xor
outsl
mov
jbe
add
inc
cmp
cli
stc
ret
dec
mov
push
cli
cmp
jge
jbe
test
add
add
sbb
insb
test
inc
mov
cmp
dec
out
push
pop
mov
sub
or
pop
shll
imul
mov
clc
in
xchg
cli
int
sbb
xchg
out
dec
sbb
or
fucomp
push
out
dec
jecxz
insb
and
aas
push
cmp
outsb
pop
sub
arpl
ret
test
fnstenv
add
dec
js
stos
in
mov
xchg
sbb
cmpb
pushf
mov
mov
pop
mov
icebp
test
arpl
lock
popf
out
cmp
ljmp
mov
jg
sbb
or
adc
out
cs
or
adc
sbb
pop
and
sbb
rcll
ljmp
ret
lods
rcrl
mov
ja
pop
fstpt
inc
xchg
adc
cld
sub
push
js
jg
std
or
cmp
add
fstps
adc
mov
inc
dec
insb
inc
dec
in
aaa
les
cltd
dec
fdiv
mov
xchg
clc
icebp
fnsave
push
lods
mov
xor
pop
sbb
add
push
jecxz
mov
es
mov
fwait
imull
cmp
lds
adc
mov
dec
jecxz
pop
in
imul
add
sbb
adc
decl
movsb
xchg
jmp
dec
fs
test
jbe
call
mov
adc
ficoml
xor
mov
pop
cld
sub
push
pop
sub
mov
mov
in
movsl
pop
xor
fstpt
or
mov
pop
add
and
popf
mov
pop
push
imull
sub
pop
sub
pop
push
adc
call
call
out
mov
and
mov
add
push
xchg
pop
mov
mov
pop
cli
jle
sbb
push
je
daa
jmp
cld
add
xchg
push
jecxz
jb
mov
es
rclb
or
xor
rorb
aam
aaa
cmpb
aaa
jle
mov
imul
inc
jl
loop
pop
andb
rcr
ja
fistl
lret
or
mov
jb
decl
lcall
mov
sbb
mov
out
std
addr16
jle
testb
fdivl
jnp
xchg
push
jle
test
loope
dec
loopne
adc
or
sub
adc
shl
mov
rolb
sbb
cmp
mov
repz
mov
pop
mov
push
loopne
adc
repz
cmc
adc
cld
lcall
rcll
addl
add
xchg
mov
test
jge
test
fbstp
shrb
rol
aas
jno
add
sbb
push
std
outsb
mov
sub
es
lret
push
adc
inc
mov
lcall
pop
pop
or
stos
push
adc
loop
mov
das
sti
out
mov
jmp
scas
add
cs
jne
pusha
repnz
icebp
inc
push
mov
fbstp
jae
xor
push
mov
outsb
movsl
imul
jle
or
out
mov
xor
xchg
outsb
add
mov
xor
neg
stos
push
mov
xchg
int3
xor
sub
jp
pop
ja
outsl
repz
push
test
fwait
lods
pop
push
push
sub
mov
ja
or
mull
cld
pop
or
enter
xchg
push
pop
jg
les
nop
mov
aad
addr16
mov
jbe
or
xorl
mov
sti
ja
sbb
add
imul
ljmp
std
add
shr
aaa
mov
popa
push
sub
inc
hlt
xchg
pop
inc
sbb
adc
xchg
cwtl
popf
jbe
add
pop
add
inc
adc
clc
sarb
adc
cmp
cmpsl
cmp
lock
in
in
test
add
lahf
sti
int
sbb
mov
test
movsb
pop
adc
dec
rolb
push
sti
push
iret
data16
pop
mov
loop
cwtl
mov
stos
inc
inc
andl
pop
add
fs
and
inc
mov
ret
xlat
loopne
lods
jno
jae
and
or
push
ficompl
fmul
xor
mov
push
pop
mov
dec
outsl
cmpsl
aaa
cmp
jg
cmc
or
aas
adc
and
xchg
in
test
mov
or
sbb
mov
mov
out
and
nop
add
adc
inc
pop
ds
rcrb
or
and
mov
mov
pop
lock
mov
pop
inc
push
and
mov
js
gs
hlt
pop
push
adc
cmpl
ret
jae
ljmp
call
cld
pop
pushf
mov
fldenv
daa
cmp
idiv
sbb
push
call
jmp
xchg
inc
or
fsubs
or
stos
mov
pop
idiv
sub
das
pop
test
add
jne
adc
add
fucomp
rolb
inc
xlat
test
cld
aas
loop
sub
xchg
adc
loop
daa
cmp
mov
ficomps
hlt
xlat
push
and
pop
lahf
imul
je
or
jnp
mov
loopne
outsl
lock
mov
or
cmc
push
mov
jns
pop
je
adc
in
push
add
js
add
pop
inc
xchg
lock
daa
rcrl
jmp
loopne
and
mov
movsb
sti
fdivl
lods
dec
das
jge
mov
adc
adc
mov
cmp
sub
faddl
or
outsl
fisttps
jne
aad
push
mov
jne
sbbb
push
or
outsb
aaa
pop
mov
les
adcl
fidivrl
inc
mov
pusha
lods
int3
psllq
fstl
add
mov
fwait
clc
or
cmp
jae
stos
bound
into
in
repnz
roll
fwait
xor
mov
xlat
sbb
ljmp
inc
divb
mov
cld
add
addb
fsubrl
jg
loopne
cwtl
in
lock
mov
pop
mov
mov
pop
loop
mov
mov
scas
push
push
push
aaa
inc
inc
sub
mov
xchg
out
mov
loope
inc
jne
iret
out
add
jle
test
xor
add
sbb
les
lock
pop
jle
dec
cmpl
addb
push
xchg
mov
push
hlt
sbb
jge
fcomps
adc
cmp
mov
jbe
mov
test
sub
inc
rcr
sbb
fistps
cmp
pop
fisttpl
xchg
ss
cwtl
aam
scas
rcrl
adc
pop
sbb
push
adc
mov
ljmp
loopne
xor
sub
dec
ljmp
sbb
cwtl
test
push
cmp
pusha
jne
mov
in
leave
mov
xor
and
cmp
jmp
mov
or
fwait
ja
out
mov
in
cmp
icebp
mov
xor
jne
sbb
dec
and
ss
jmp
or
xchg
pop
in
ss
lahf
enter
adc
sbb
shll
push
or
and
orl
outsl
call
stos
repnz
push
jo
test
cmp
mov
cwtl
insl
or
scas
hlt
mov
sbb
ljmp
jle
xor
dec
jnp
or
xorb
pop
loope
pop
xchg
xchg
pop
outsl
jne
imul
xlat
sahf
loop
outsl
imul
notl
lods
subb
loop
shld
push
cmp
dec
and
pop
mov
mov
dec
push
add
push
in
mov
push
sbb
push
mov
pop
adc
lock
imul
xor
incb
xchg
loop
lret
ss
ljmp
test
mov
and
test
jle
jns
sbb
stos
into
movsb
shlb
mov
push
sub
repz
pop
insb
xor
ja
jp
jg
push
insl
mov
ret
inc
mov
cmp
mov
in
decb
push
xor
jg
imul
add
cmc
push
ret
push
mov
sub
jge
rorl
insb
jl
pop
pop
fisttps
mov
push
add
sbb
push
pop
daa
out
js
rolb
stos
xchg
xor
jne
addr16
jns
dec
mov
dec
jmp
mulb
out
jmp
or
pop
adc
xchg
incl
or
fmull
loop
jae
xchg
mov
jle
xchg
adc
sarl
addr16
outsb
das
addb
mov
cltd
fsubs
cmp
mov
xchg
jg
xor
lds
xor
add
fmuls
js
ret
or
add
and
inc
dec
sub
sub
adc
sarl
int
pusha
sbb
repnz
rolb
push
and
xor
mov
inc
incl
pop
in
add
mov
add
jl
lds
or
aaa
or
mov
roll
test
pop
cld
and
mov
imul
loopne
sub
add
ljmp
or
addr16
cmpl
sub
inc
inc
xor
push
loopne
inc
push
adc
inc
add
or
fists
xchg
not
cmpsb
lock
add
aas
lds
xchg
pop
movsl
fiaddl
mov
dec
hlt
push
mov
push
add
or
and
inc
fistps
sub
ja
add
in
push
je
cmp
jae
ret
mov
pop
pop
or
insb
inc
or
clc
repnz
xlat
sti
xchg
xchg
ljmp
fmuls
push
pop
inc
dec
aaa
mov
xor
shlb
aaa
push
lock
push
fsub
arpl
cli
in
add
inc
arpl
cmp
sub
xchg
mov
adc
inc
pusha
or
and
sahf
add
add
add
jge
in
and
popf
fdivs
adc
xchg
addr16
clc
and
mov
mov
popa
fcmovnb
sub
jmp
xchg
inc
pop
aaa
inc
xor
pop
jl
add
in
or
nop
jnp
and
cmp
xchg
shll
fcoms
adc
test
clc
jae
in
jae
xor
ja
xlat
push
and
push
mov
lds
and
push
vpshld
outsl
inc
xchg
jne
pusha
imul
xchg
jge
and
xor
mov
mov
mov
sbb
inc
out
dec
aas
incl
test
popf
sub
mov
lock
adc
sbb
fisttpl
sbbb
aaa
xchg
addr16
fucomp
loopne
mov
lds
sub
push
dec
pusha
or
fildl
pop
xor
jb
or
push
test
fldcw
hlt
cmp
mov
xchg
dec
das
test
fidivrl
xor
dec
xor
inc
xchg
cmp
sbb
jl
push
pop
cmp
popf
lods
in
inc
aaa
add
in
ret
adc
pop
cmp
jne
fidivl
js
mov
movsb
sti
icebp
movsb
pushl
aaa
cmc
mov
lea
dec
inc
mov
and
inc
adc
add
fstl
sub
ljmp
jne
adc
jg
daa
leave
sub
pop
addb
shlb
add
daa
inc
xor
in
jg
jg
mov
out
push
icebp
and
lea
lcall
std
into
movsl
dec
dec
jnp
pop
pop
mov
sbb
xchg
clc
iret
cmp
mov
mov
cld
test
push
sub
add
push
pop
das
jmp
daa
ret
aam
push
jle
addl
in
pop
mov
mov
lods
popa
or
or
js
pushl
jl
sbb
cmpsb
or
bnd
cmpsl
or
leave
popf
test
mov
mov
mov
jge
push
aas
cmp
sbb
mov
imulb
jle
dec
pop
fstl
xchg
xchg
lcall
pop
push
mov
int3
cmpsl
add
and
loope
sub
mov
or
fsubr
adc
mov
testl
fs
push
test
mov
pushf
xlat
mov
std
test
les
xchg
fidivrs
ret
dec
lahf
xor
in
lods
mov
jnp
mov
push
lock
sub
icebp
xchg
sbb
mov
mov
mov
pop
in
cmp
inc
lds
adc
out
idivb
bound
outsl
push
test
add
gs
sub
inc
cld
test
xor
mov
sarb
loop
data16
push
add
stos
sbb
int3
dec
fsub
adc
rorl
lret
xchg
pop
inc
jbe
cmpsl
lcall
add
pop
pop
clc
push
scas
inc
enter
ja
jno
lcall
in
gs
cmc
test
mov
stos
lds
push
adc
mov
dec
mov
or
mov
mov
mov
je
ljmp
jno
jmp
loop
xchg
fbstp
push
stc
out
push
mov
loop
movsl
pop
mov
loope
xor
cmc
mov
movsl
xchg
lahf
adc
mov
inc
dec
sbb
mov
xlat
cmp
pusha
movsl
push
or
decb
mov
pop
sub
rolb
mov
jno
pop
loop
es
test
or
and
movb
xor
ret
in
aaa
shl
xor
ja
outsb
in
inc
or
dec
lods
mov
fmuls
decb
ret
inc
pop
push
mov
aam
fdiv
test
ja
mov
dec
push
mov
mov
mov
add
pop
pop
ret
mov
dec
dec
xchg
sbb
mov
ficoml
cmp
sbbb
mov
shlb
in
enter
kmovb
adc
push
decl
cmp
push
popa
sub
ss
call
mov
scas
popa
pop
int3
mov
push
clc
mov
mov
fimull
repz
sub
aam
outsl
fs
dec
mov
ss
test
das
cmc
mov
push
inc
js
int3
pop
test
cmp
cmp
add
test
mov
xor
fidivl
mov
xchg
push
sub
mov
shrb
dec
xorb
cmp
loop
dec
jge
test
mov
movsb
adc
cld
mov
test
dec
sarl
fcompl
arpl
jno
inc
dec
aaa
sub
loopne
jp
mov
push
insb
test
jmp
cltd
cmp
mov
mov
clc
push
push
mov
lds
cmpsb
enter
cs
dec
mov
xchg
movsb
inc
in
adc
sub
add
rclb
or
xlat
jl
dec
test
hlt
dec
movsl
pop
push
pop
and
mov
sub
push
push
pop
mov
cmp
xchg
orb
cld
xchg
add
cld
aaa
repnz
iret
hlt
outsb
lahf
inc
lret
movsb
pusha
bound
push
aaa
rorb
sti
jne
and
fcompl
shl
xchg
rolb
out
sub
js
mov
or
call
incb
movsl
cmpsb
xchg
xor
aas
das
rcl
xor
or
icebp
cmpsb
das
cld
adc
mov
sub
inc
adc
sbb
das
mov
movsl
push
nop
stos
fwait
jg
jg
mov
xchg
mov
call
inc
daa
xchg
aam
push
adcl
stc
lock
fldenv
les
ficoml
fcmovnbe
mov
sti
xor
cld
mov
call
adc
or
mov
xor
add
sbb
adc
stos
or
loopne
and
mov
mov
jmp
xor
mov
inc
add
or
aaa
outsb
loop
sub
aaa
mov
cld
add
and
dec
pop
call
mov
jno
pop
and
push
cwtl
and
push
movl
xchg
add
sub
mov
scas
loopne
adc
aas
or
repnz
inc
or
jge
out
test
mov
adc
push
mov
and
std
push
lds
xchg
mov
mov
pop
roll
pop
je
mov
pop
es
nop
stos
add
add
xchg
imul
push
out
push
fisttpll
out
add
movsl
sub
fsubr
in
lcall
lret
sub
mov
popa
push
int3
push
outsb
iret
mov
mov
mov
sbb
mov
int3
popa
fs
adc
push
int
push
push
enter
andb
mov
or
and
sbb
pusha
push
aaa
xor
cmpsl
sbb
incl
repz
and
or
adc
sub
test
js
fidivrl
mov
inc
jmp
outsb
push
pop
ss
into
jae
fcomip
test
add
inc
cmpb
sbb
push
lds
mov
xor
push
fdivr
decl
in
es
push
mov
fdivl
mov
mov
mov
lea
pop
add
sahf
push
adc
add
repz
int3
icebp
xchg
ss
push
pop
pop
add
pop
mov
aam
dec
xchg
fldl
add
test
add
int3
jb
out
or
dec
daa
or
sbb
mov
xlat
enter
in
xchg
leave
push
inc
pop
int
ljmp
popf
push
shl
dec
mov
and
andb
cmpsl
pop
ret
add
add
outsl
lahf
stos
cmp
adc
repnz
mov
stos
xlat
shr
cli
arpl
cs
and
arpl
mov
dec
pop
sub
daa
pop
mov
add
pop
add
xor
je
test
cwtl
cmp
jae
push
fidivrs
cld
add
add
int3
loope
lret
int3
dec
push
and
add
xor
dec
add
or
cwtl
ret
arpl
mov
sahf
push
adc
or
adc
cltd
mov
fcoms
xchg
loopne
in
adcb
fadds
les
pop
jb
adc
clc
mov
pop
repnz
xchg
or
leave
cld
fwait
movsl
mov
inc
sub
mov
jne
int3
push
cmp
test
adc
sbb
xchg
sbb
add
incb
add
out
cs
or
adc
pop
or
in
cwtl
mov
push
push
loopne
movsb
mov
je
mov
idivb
aad
jno
or
jg
xchg
in
shlb
cmp
xor
mov
js
and
sbb
shll
mov
aaa
imul
xor
and
sub
lcall
cld
xchg
stos
outsl
imul
sbb
mov
mov
xlat
aaa
scas
cwtl
or
fnstcw
aam
add
pop
fadds
cmp
sbb
and
fsubr
push
and
add
iret
cmp
mov
and
jp
jecxz
aam
das
pop
adc
fs
fisubrs
and
lods
aam
or
testl
ljmp
repnz
and
stos
aam
daa
out
loop
insb
fildl
orb
hlt
cwtl
arpl
daa
sbb
loopne
sub
adc
inc
jl
mov
test
add
fs
fbstp
and
aam
daa
xchg
and
add
pop
hlt
popf
add
or
aaa
sbb
push
push
mov
xchg
ficoml
mov
shr
js
mov
lahf
aad
and
adc
lcall
lock
mov
or
jb
cs
jecxz
bound
scas
lcall
and
push
mov
fisttps
ret
jg
and
out
mov
or
rorl
or
mov
jmp
sbb
lahf
cmc
je
dec
adc
sbb
ret
loopne
mov
shrb
lock
push
jmp
dec
in
add
ret
or
add
sbb
popf
addl
aaa
xor
rolb
test
ss
in
les
or
orl
adc
cltd
fstpt
cwtl
stos
pop
sbb
xchg
pop
or
mov
or
cld
data16
jle
xchg
dec
fisttpl
jnp
jne
scas
jb
mov
aam
mov
mov
enter
xchg
shlb
loop
dec
add
adc
loopne
adc
pop
jl
int
add
gs
ss
xor
repnz
jnp
test
inc
testl
ficompl
jb
xchg
les
lret
insl
add
xchg
mov
cmp
inc
out
or
mov
and
mov
push
and
sbb
add
pusha
cmp
push
jb
fstpl
cmp
add
lea
push
push
lret
mov
xor
sub
imul
cwtl
push
fildll
pop
mov
roll
xlat
sub
jbe
decl
cld
fwait
and
out
fistl
test
rolb
cmpsl
sbb
dec
sbb
ljmp
test
data16
subl
jno
insb
jmp
sub
or
shrl
jmp
dec
cmp
popf
aam
cmp
mov
xchg
and
in
loopne
loopne
mov
adc
pop
or
movsb
clc
fsubrp
lahf
ds
mov
incl
sub
loop
and
pop
in
repnz
frstor
cs
jae
inc
and
leave
xor
cmc
sbb
shll
loop
in
in
icebp
or
adc
shl
sbb
aam
hlt
xchg
gs
pop
test
fidivl
es
pop
subl
adc
xlat
lods
mov
js
adc
das
dec
and
push
icebp
sbb
inc
or
cwtl
rcrl
dec
inc
xchg
mov
dec
jg
mov
xchg
stos
push
cmpb
pushl
movsb
push
fdivr
xchg
dec
jne
in
dec
pop
rcrl
mov
pand
das
sarb
jno
add
xchg
test
ja
xor
adc
jns
mov
push
add
data16
push
pop
mov
subb
ds
hlt
fbld
inc
jns
sbb
insl
sar
rcrb
enter
jbe
popa
loopne
in
inc
inc
hlt
call
js
in
aaa
add
inc
icebp
repz
jg
cmc
int3
add
cld
xor
cmp
push
sti
add
lods
jle
and
in
jecxz
cmc
lods
cmp
fistpll
int3
add
and
shrl
pop
ljmp
adc
mov
je
incb
scas
mov
or
add
popf
incl
add
cmpsl
push
fsubrs
ret
subl
dec
mov
std
inc
inc
mov
dec
and
or
pop
mov
das
adc
mov
add
lds
adc
cli
outsl
rorb
pop
add
mov
and
daa
push
mov
xchg
arpl
xor
cmp
and
imul
jg
push
xor
inc
jl
sti
adc
adc
imul
jg
iret
push
ja
cmp
das
dec
inc
push
lahf
push
add
sub
mov
xor
xchg
stos
and
in
ret
cmp
bound
add
mov
lds
aaa
rcr
sbb
fidivs
add
xchg
bound
std
fldt
adc
pop
xor
and
mov
out
dec
cmp
sbb
and
add
add
decb
add
sbb
adc
pop
sub
sahf
mov
push
dec
add
pop
aaa
inc
jg
cmpsl
xor
mov
ja
lea
add
out
cld
cmp
push
push
loop
adc
lock
std
mov
addl
mov
or
mov
lret
mov
fdivrp
mov
movsb
mov
or
enter
jns
xor
jo
pusha
lcall
fistps
jg
mov
stos
dec
cmpsl
int
push
arpl
fadds
jmp
mov
sub
test
mov
jp
pop
pushf
cli
inc
jl
pop
sub
mov
or
and
sub
aas
in
pusha
test
int
roll
lods
movsb
or
or
das
insb
inc
shll
add
decl
sahf
ficoml
orl
lock
ljmp
movsl
mov
dec
dec
jg
mov
inc
lcall
sahf
enter
xor
shrb
test
outsl
incl
add
stos
add
xchg
pop
stos
push
mov
gs
stc
cmc
daa
pop
push
clc
or
mov
mov
sub
pushf
std
push
lret
mov
imul
clc
fisttpll
sbb
pop
ds
rorl
adc
sub
add
xchg
in
shrb
pop
clc
out
push
inc
cmpl
and
lcall
cmp
dec
repnz
jne
inc
push
push
dec
icebp
mov
lock
icebp
or
push
outsl
cmpsb
cmp
cli
add
sti
add
dec
sub
and
mov
jns
xor
loope,pt
push
cmp
div
inc
and
mov
mov
mov
mov
xor
sub
mov
pop
mov
mov
pop
das
add
scas
pop
pop
fists
jae
sbb
and
push
mov
fldenv
and
push
mov
or
mov
loop
add
pop
fwait
mov
adc
jnp
stos
addr16
add
daa
leave
dec
add
lds
mov
insb
outsb
lcall
ljmp
jmp
stos
pop
lods
or
and
and
rcl
or
gs
jnp
adc
pop
std
push
add
outsb
lods
rorb
or
call
mov
adc
dec
stos
push
xor
dec
pop
sti
push
xor
pop
add
fsubl
push
sub
mov
dec
push
sbb
fs
mov
jl
aaa
test
mov
and
mov
cmp
test
rcrb
or
push
dec
sbb
mov
mov
mov
fwait
push
roll
neg
cmp
lock
and
inc
out
add
stos
mov
xchg
sub
sbb
push
shlb
mulb
aaa
test
mov
jge
rcl
adc
inc
xchg
pop
xchg
jg
mov
fsub
or
movsb
bound
push
and
xchg
cs
jb
push
stos
pusha
stos
stos
adc
clc
arpl
add
mov
adc
cmp
pop
push
scas
flds
enter
and
testl
and
dec
out
fwait
add
mov
test
pop
pushf
mov
aaa
adc
jns
ret
dec
mov
dec
sti
lret
or
or
mov
int3
lret
jbe
aam
inc
jp
lret
xor
hlt
dec
stos
pop
adc
adc
aad
test
movsb
jge
inc
jecxz
sahf
in
loop
sbb
test
jnp
adc
add
aad
out
push
mov
clc
in
add
fldcw
xchg
clc
in
sub
push
and
and
cmp
scas
stos
adc
repnz
scas
push
leave
push
push
sbb
loope
xchg
ja
sbb
or
imul
js
pop
push
mov
jecxz
imulb
mov
ja
cmpsl
test
add
ret
inc
xchg
xchg
xlat
and
fdivrs
mov
mov
loopne
jge
add
repz
les
mov
fisttpl
pop
lock
xor
cld
clc
fcompl
pop
cmp
mov
mov
inc
js
std
fisubs
bound
lods
mov
ret
dec
push
push
pop
mov
inc
inc
enter
ss
jle
dec
add
pop
jne
xchg
dec
in
fiadds
in
sub
sub
or
xchg
mov
adc
arpl
cld
add
dec
xor
fcmovnb
out
xor
adc
sbb
call
insb
push
inc
movsb
push
ret
and
cmp
push
sarl
imul
add
mov
fsubr
inc
mov
gs
xor
test
or
mov
out
pusha
sbb
mov
sbb
notl
outsb
xchg
and
adc
mov
inc
pop
vcvtdq2pd
mov
push
std
mov
jl
decl
push
xor
mov
pop
clc
push
aad
leave
or
ljmp
mov
and
add
ret
popa
scas
mov
push
mov
aas
adc
pop
mov
jne
addr16
neg
pop
mov
mov
and
stos
or
in
ds
or
cli
xchg
jae
inc
loope
and
fnsave
mov
repz
inc
out
sarb
movsl
mov
pop
shr
repz
xchg
cmp
fsubl
outsl
aas
adc
ss
sub
and
rorl
dec
push
and
stos
sti
xchg
clc
jg
xor
lock
cmp
addr16
cmp
scas
std
test
pushl
jg
stc
adc
xchg
inc
adc
aaa
xchg
cli
ljmp
pusha
aaa
divl
mov
push
js
mov
cmp
ret
push
push
sahf
js
push
outsl
icebp
mov
sti
cmp
stos
pop
pop
xchg
add
add
push
dec
inc
mov
mov
bound
pop
fdivr
jmp
lret
ljmp
sbb
or
dec
leave
lods
lds
orl
jmp
lea
add
jb
and
inc
add
add
push
jne
adc
bound
insb
pop
xor
inc
popf
push
cmc
insb
push
and
pop
sahf
or
pop
and
fsubrl
xlat
fists
cs
dec
bound
adc
xchg
test
dec
mov
sbb
cmp
sub
out
test
fiadds
add
shl
mov
divb
rcrl
sti
xor
mov
or
jg
and
pop
in
pop
fwait
mov
sub
add
mov
lret
outsl
lret
outsl
or
jo
xchg
sub
fwait
stc
pop
push
cmp
in
xchg
or
mov
cli
mov
arpl
outsb
lds
push
adc
cmp
sbb
test
int3
xor
dec
or
push
loope
dec
movsb
jo
insl
add
pop
mov
ret
pop
sbb
lret
mov
aam
mov
lret
cmp
push
fadds
push
cmc
fisubrl
pusha
add
mov
loope
mov
ret
sahf
xor
cmp
loop
push
push
es
cmp
ja
sbb
jbe
adc
aad
pop
cmc
es
jno
xor
cltd
lcall
pop
sahf
cwtl
fisttps
enter
add
mov
adc
xchg
push
sub
mov
sbb
sbb
call
out
mov
stos
je
push
jo
or
jne
sub
and
mov
test
jmp
sub
add
inc
shll
fisttpl
xchg
rcrl
lcall
repz
jl
mov
sub
add
xor
and
add
push
adc
jle
mov
je
cmpsb
ljmp
pop
lock
sub
mov
jne
push
cmc
insl
sbbl
adc
sub
sbb
sbb
sub
jecxz
jl
dec
adc
jno
mov
das
adc
addr16
shrl
fldt
ja
push
add
add
pop
xchg
aas
dec
mov
and
xlat
pop
orb
fdivp
fs
addr16
and
xchg
sub
pop
insb
dec
pop
sbb
or
jno
dec
jbe
add
jl
jb
in
pusha
loope
aaa
sti
and
push
aam
adc
in
mov
lods
mov
pop
cld
insl
jecxz
xor
ss
cmp
add
lcall
repnz
js
lock
xchg
nop
mov
pop
shlb
leave
dec
fadds
arpl
xor
je
pushl
movsb
rolb
loopne
sbb
je
nop
jp
mov
or
fstpl
xchg
inc
xchg
subl
add
pushf
lahf
popl
lds
inc
cmp
mov
cmp
mov
xchg
push
rorb
fisubrs
shll
and
inc
sbb
dec
neg
pop
or
inc
decl
push
xor
pop
xchg
das
xchg
aad
ljmp
xchg
jge
push
out
mov
pop
mov
outsb
clc
pop
test
push
sub
jno
mov
int3
or
ret
pop
add
pop
pop
mov
xor
gs
push
in
rorb
insl
cmp
xlat
xor
pop
fisubrl
into
push
mov
or
movsl
movsb
sbb
and
fcmovnb
incl
lret
std
sbb
and
mov
fbstp
cmp
aam
aam
aas
mov
add
cli
jno
ret
jl
pop
dec
mov
sbb
insb
inc
fwait
pusha
sub
cli
sbb
and
xor
nop
mov
cmp
inc
stos
dec
stc
and
repz
sti
nop
fsubl
imul
fistpll
jo
ja
mov
addr16
add
dec
orl
pushl
fstps
jp
mov
cmpsb
or
mov
and
out
arpl
ljmp
loop
bound
imul
and
push
outsb
bound
lock
mov
outsl
aas
imull
setle
dec
dec
xor
push
mov
add
lods
mov
cmpsb
cmp
mov
sbb
and
cwtl
xor
test
std
add
pop
out
arpl
add
cmc
test
sub
cmpsl
clc
test
ds
push
dec
ljmp
mov
add
pushf
mov
or
fidivs
pusha
iret
movsl
cmp
or
pop
inc
adc
sub
pushf
lret
lods
sbb
inc
fs
dec
les
clc
mov
dec
mov
pop
cmp
pop
lcall
notb
sub
inc
int
or
hlt
fs
push
adc
ljmp
jno
fdivrs
jge
and
roll
imull
pop
inc
js
mov
ja
dec
dec
inc
jg
and
outsl
cli
adc
cmp
test
push
inc
adc
and
rcl
lds
lahf
lock
aaa
dec
clc
pop
lods
outsb
mov
sbb
in
outsb
dec
mov
in
or
lods
mov
add
int3
or
sti
lahf
repnz
mov
adc
cmp
jmp
xor
clc
xorl
not
ret
iret
pop
add
pop
lea
sti
inc
and
test
and
xchg
cwtl
pop
fistpl
pusha
out
rcrb
or
mov
es
pushl
xchg
add
lods
enter
pop
mov
out
push
cmpsl
dec
es
xchg
and
dec
mov
out
daa
jp
add
mov
pop
mov
jnp
or
dec
jecxz
mov
daa
roll
xchg
mov
xor
mov
mov
insl
jl
insb
repz
mov
lret
add
adc
inc
mov
add
sbb
push
push
dec
cmc
icebp
lea
cmp
fcmovnu
mov
test
dec
sub
dec
in
dec
or
test
int
mov
shll
imul
lret
inc
jne
jle
xchg
mov
jnp
inc
insb
dec
ret
rcrl
cmp
xchg
scas
sarb
clc
iret
sbbl
and
dec
mov
and
xchg
pop
jle
out
into
sub
popl
dec
add
jns
push
cmpl
insl
pusha
out
ss
mov
fsubrs
repnz
jb
lret
add
mov
adc
das
jo
push
or
xchg
mov
mov
shll
rclb
sub
xchg
mov
push
decb
iret
or
leave
dec
and
inc
icebp
insl
cmp
rorl
jbe
and
pop
int3
mov
incb
pop
or
shrb
enter
mov
jae
and
dec
lock
push
mov
or
lock
shll
cs
mov
fbstp
stc
pop
icebp
sbb
fbld
fwait
pop
jo
popf
stos
xlat
aas
repz
mov
push
mov
scas
inc
and
or
mov
inc
sub
outsb
arpl
mull
insl
adcb
test
xchg
adc
sbb
sbb
fcmovnu
dec
int
es
add
mov
das
insl
mov
fs
cmp
out
cmp
loop
mov
push
cltd
dec
jno
jge
ficompl
mov
scas
and
mov
push
mov
movsl
pop
dec
ss
fstpl
sahf
addb
cmpsl
push
ljmp
ljmp
mov
fwait
movsb
adc
rorl
les
loopne,pt
inc
dec
xchg
add
push
sarb
ljmp
repnz
int
fstl
fwait
mov
clc
cmpsb
inc
lret
ds
cmp
cmc
mov
xor
push
xchg
aas
add
movl
inc
add
xor
rclb
shrb
daa
add
loopne
lock
icebp
xor
lock
sub
ljmp
and
loope
ss
mov
adc
pop
add
adc
or
sbb
pop
mov
in
sti
lret
rclb
xor
hlt
cmpsl
pop
mov
aad
pop
push
fldl
sub
sub
pop
or
sbb
add
add
test
sbbl
add
mov
rolb
add
inc
sub
add
or
adcl
xchg
jmp
hlt
outsl
lret
dec
test
xchg
jle
sub
lret
or
mov
xor
push
es
stos
inc
lret
iret
xor
je
andb
mov
aam
and
pop
fsub
cs
test
into
dec
inc
cld
mov
addb
fld
or
sbb
jge
push
dec
mov
cld
jno
inc
mov
inc
test
jge
pop
test
into
mov
aam
add
mov
mov
dec
mov
adc
and
sub
fsubp
dec
mov
and
sub
push
or
push
test
mov
mov
mov
not
int
aad
push
jbe
sahf
hlt
imull
or
cmp
shrl
icebp
insl
push
aam
adcb
scas
sbb
inc
sbb
push
mov
or
jo
je
push
mov
rolb
mov
pushl
test
jbe
mov
pop
cmp
xor
pop
out
loope
pop
loop
std
dec
add
fcompl
sub
dec
dec
stos
mov
stos
or
sbbb
lret
std
and
xchg
pop
lock
cs
int
je
jnp
or
pop
negl
add
dec
into
sub
pop
js
push
int
mov
aaa
orb
test
adc
das
xchg
test
adc
lock
pop
ret
test
inc
or
enter
loope
jae
adc
hlt
or
test
push
adc
sbb
jmp
adc
int3
pop
adc
sub
dec
mov
jae
push
mov
mov
and
dec
es
lcall
data16
out
or
dec
mov
or
sbb
mov
je
and
add
lea
shl
jnp
ja
cmc
add
call
stos
jg
xchg
add
inc
mov
or
push
scas
in
shll
add
cmp
fiadds
clc
outsl
jno
imul
in
push
in
fistps
add
mov
incb
loope
sbb
movsl
dec
sub
push
mov
data16
es
bound
xchg
fcom
shll
xor
fadd
in
inc
dec
testl
or
xchg
sbb
rolb
sub
xlat
push
fisttpll
pusha
push
fsubrs
pop
out
lcall
sbb
mov
adc
jns
xchg
fmull
icebp
movl
add
rorl
cld
test
mov
adc
frstor
or
mov
sbb
adc
andb
loop
pop
inc
subb
test
add
sub
loope
rcll
jle
fdivr
adc
fwait
mov
cmp
aam
sarb
add
movsb
pusha
vphaddubq
and
mov
cs
rcrb
sub
movsb
and
addb
repz
inc
add
xor
and
xchg
xchg
dec
dec
and
push
sub
je
ret
shlb
mov
cltd
mov
in
xlat
scas
js
push
sbb
addb
pop
sbb
iret
xchg
loopne
ss
push
add
sti
jg
loopne
add
fstp
sub
add
jne
mov
sub
ret
inc
insb
cmp
push
sbb
jo
mov
fsubs
icebp
mov
clc
or
fs
sub
adc
dec
sub
add
add
loope
pop
mul
push
and
or
mov
rolb
sub
fstpt
or
loop
es
sub
aas
loopne
lods
or
shlb
lcall
dec
loop
je
pop
imul
adc
cld
inc
shrb
jmp
and
cmp
or
adc
rorl
add
loop
xchg
rcll
stos
int3
add
jecxz
lods
fwait
loope
xor
sub
dec
insb
int3
out
leave
dec
and
inc
inc
cld
mov
ret
fisttps
ljmp
mov
sub
mov
data16
xchg
int3
mov
jmp
or
imul
pop
xor
sub
push
dec
add
and
pop
add
pop
add
rclb
roll
in
sbb
icebp
daa
insb
out
pusha
or
out
add
out
mov
testl
jmp
divl
scas
and
or
std
ret
sub
imul
xchg
pop
push
loope
pop
in
or
mov
xchg
push
xor
repnz
adc
popa
out
add
lock
push
fcmovu
imul
test
cmp
mov
mov
std
lea
hlt
fyl2xp1
out
xor
and
stc
push
int3
cmp
cmpsl
push
fstpt
adc
lods
mov
sar
cmc
xchg
add
mov
and
sub
push
xor
sbb
push
xor
cltd
adc
push
sahf
add
or
rorb
in
push
push
push
hlt
out
orl
rorl
outsl
jnp
in
testb
jo
xor
popa
dec
xchg
mov
shll
sar
ljmp
ret
adc
int3
and
cwtl
lock
int3
and
pop
or
pop
jo
ljmp
and
repz
jne
push
movsb
dec
mov
push
shlb
scas
mov
loopne
push
adc
sbb
cmpl
aas
inc
cli
fldl
stos
cs
cld
mov
or
dec
sbb
movsl
pop
xchg
or
pop
repnz
lock
adc
sti
sbb
inc
push
xchg
push
nop
jb
and
mov
push
inc
imul
pushw
fadd
pop
inc
mov
xchg
test
adc
loopne
out
fildl
jmp
lea
push
mov
ljmp
or
mov
addb
pop
arpl
xchg
aad
sub
xor
js
or
add
mov
lock
mov
ljmp
aaa
fwait
mov
jp
jg
adc
xor
add
push
fistpl
or
scas
pushf
jae
xor
sub
and
lods
fsubrs
push
mov
mov
cmp
adc
push
jno
sti
sbb
pop
fs
adc
inc
jmp
in
mov
push
loopne
or
mov
fwait
enter
cltd
insb
and
fiadds
loope
push
and
add
negl
push
or
sub
mov
mov
popf
jmp
cmp
jl
add
sub
fsubrl
xor
jne
cmp
roll
fcompl
xchg
lock
mov
into
out
cmc
push
sbb
out
imul
adc
bound
orb
pop
notl
test
pop
or
xchg
cmp
push
cld
adc
and
add
push
or
pop
iret
mov
loopne
sbb
lock
pop
mov
mov
sub
jne
repz
movsb
dec
nop
stos
mov
inc
sub
std
cli
mov
or
or
or
push
repnz
push
pop
clc
in
push
in
insl
and
sbb
xchg
and
mov
xchg
insl
fmul
and
mov
nop
insb
ficoml
push
inc
cmp
and
pop
sbb
pusha
mov
dec
fldl
fsubrl
xorl
mov
repnz
int3
js
movsb
lea
jnp
mov
sub
cli
mov
add
mov
cwtl
xor
rorl
aas
and
mov
or
mov
xor
lret
mov
push
ret
and
cld
xor
test
jg
push
mov
mov
xor
add
push
ljmp
cmp
dec
cwtl
ret
cmp
aaa
push
add
loopne
adc
push
in
mov
cmc
sarb
cli
cwtl
push
add
inc
insb
lds
fmuls
int3
imul
add
xchg
mov
aam
mov
fsubrl
xchg
add
pop
push
adc
aam
sarl
xchg
mov
orl
jl
push
or
shll
or
dec
add
dec
stc
pop
sbb
fcmovnu
push
push
mov
cmp
bound
mov
fdivs
and
fdivl
shrb
jne
or
outsl
std
adcl
xor
jg
cs
pushf
lea
add
subl
mov
inc
fldt
xchg
sbb
add
inc
outsl
rcrb
jb
mov
pop
and
rcl
insl
imul
sahf
gs
incb
insb
std
daa
add
mov
jecxz
flds
cmp
add
ds
and
add
int
loope
jge
lods
inc
add
ja
outsl
lds
jbe
add
je
add
xchg
dec
daa
adc
in
repnz
fcmovnb
out
add
loopne
clc
jnp
lcall
push
xchg
xchg
bound
mov
jg
mov
jg
andl
sarb
icebp
xor
xor
sbb
incl
push
ror
lret
enter
mov
push
sub
xchg
cmp
or
cwtl
pop
adc
mov
sti
inc
es
inc
jge
push
mov
dec
jns
test
sbb
filds
inc
xchg
pop
test
or
jb
pop
push
push
stos
push
xchg
adc
test
call
movsl
in
add
movsl
sub
out
aaa
jp
push
fildll
leave
pop
sti
mov
and
pop
dec
mov
jmp
cmpxchg
or
pushf
out
clc
mov
decl
aam
stos
ret
dec
fcoml
pop
scas
cmp
push
std
inc
mov
add
push
mov
test
jge
pop
cmc
add
add
lods
jl
pop
ljmp
mov
lret
mov
and
mov
scas
ds
push
add
jns
and
or
aaa
lock
jns
xchg
mov
insb
dec
push
repz
dec
mov
add
mov
xchg
rorb
mov
aaa
dec
and
insb
push
pop
stos
fldt
jl
add
mov
mov
xchg
jmp
imul
and
add
enter
sbb
add
lods
jae
push
xor
mov
jmp
pop
mov
adc
mov
pushf
in
rorl
pop
ds
jge
clc
mov
or
js
jbe
push
outsb
icebp
lds
std
lcall
xor
aad
and
int
stc
sbb
push
pop
out
jl
das
ljmp
mov
or
mov
cmp
sub
and
push
xchg
call
adc
mov
pop
les
shrb
test
inc
lahf
lea
mov
sbb
pusha
das
iret
dec
mulb
ret
pop
shll
pop
scas
mov
in
mov
and
jno
aam
push
adc
cld
dec
ss
in
notb
pop
add
mov
pop
fdivrp
in
daa
sub
std
xchg
dec
jno
arpl
push
dec
adc
xchg
test
xchg
add
and
aas
std
mov
rol
fcmovu
mov
xchg
dec
mov
and
or
cld
jno
add
inc
sbb
mov
js
addr16
in
outsl
cld
push
sub
jmp
lock
into
inc
sbb
jnp
cld
xor
clc
dec
xlat
jbe
jo
jmp
and
xor
or
sti
push
push
or
rcl
lock
fxch
and
insb
neg
stos
mov
pop
pop
mov
jnp
adc
dec
mov
mov
jns
fs
js
and
dec
mov
jmp
mov
aad
pop
mov
inc
dec
add
pop
lcall
test
jb
mov
out
das
out
clc
push
mov
inc
pusha
mov
sub
test
frstor
clc
iret
imul
clc
fistpl
cltd
add
clc
or
dec
adc
xchg
aaa
jecxz
insl
inc
fucomip
mov
in
mov
pop
cmp
xor
or
jecxz
outsl
pop
mov
jp
or
subl
cwtl
in
inc
std
aam
jbe
jnp
loopne
out
js
inc
rcr
lcall
iret
dec
int
sbb
imul
push
jmp
ret
bound
outsb
xchg
sbb
ljmp
cmpsb
xchg
xchg
jns
pop
inc
mov
loop
mov
fiaddl
aam
lock
push
loopne
sub
fcomps
and
mov
xchg
ds
adc
pop
decb
sub
mov
xor
xchg
cld
and
and
hlt
fiadds
push
xor
and
dec
pop
lock
mov
push
sbb
push
mov
fistpll
ficoml
dec
push
or
les
and
or
call
sub
popf
xchg
not
int3
ja
xor
jl
add
push
ret
jo
dec
arpl
inc
rorb
ret
loop
test
adcl
ret
js
sbb
pop
xor
popf
les
arpl
add
inc
jl
jmp
out
and
adc
sub
add
push
sub
dec
mov
mov
inc
dec
aas
int
xchg
cwtl
int
pop
mov
orb
adc
jg
dec
rcrb
add
mov
in
stos
fistpl
xchg
xor
movsl
adc
in
push
aad
or
mov
clc
pop
jge
pop
jp
xlat
jmp
dec
push
aam
sbbb
pop
and
xchg
iret
adc
and
xor
loop
add
popa
call
imulb
cmp
aad
call
fwait
mov
lods
loopne
and
mov
loop
call
jecxz
andb
shr
scas
outsb
gs
mov
jmp
adc
lods
sub
jb
jge
mov
test
mov
in
call
test
lahf
pop
icebp
fs
or
sbb
inc
fists
mov
in
ficomps
lods
sahf
push
in
add
and
test
call
push
stc
add
pop
add
flds
xor
pushf
mov
idivb
xor
enter
sti
inc
mov
xor
sti
xchg
or
pop
in
or
sahf
and
sti
lds
sub
xor
es
aam
cmp
fwait
sbb
xchg
in
pop
data16
ljmp
lret
mov
add
inc
sub
or
inc
mov
sub
cmp
femms
out
push
add
iret
lods
fcoms
inc
mov
out
cmp
push
dec
les
mov
ficomps
out
or
repnz
in
addb
dec
loopne
jb
pop
jg
cld
xor
or
inc
in
ror
outsl
lock
aas
dec
decb
push
cmp
das
aam
js
push
ret
add
fbld
hlt
push
adc
and
sbb
js
test
dec
jmp
mov
adc
fildl
out
dec
call
into
mov
cmp
inc
xor
outsl
out
mov
push
fucomip
mov
insl
add
pop
mov
fs
fisttpll
jle
jle
pop
sbb
mov
fs
pop
mov
jo
mov
jle
or
inc
push
inc
add
call
pop
je
pushf
jp
mov
orl
inc
xor
fsubp
mov
arpl
adc
jge
mov
inc
mov
sbb
and
hlt
fists
cmc
loopne
aam
dec
add
icebp
push
outsl
cmp
sub
xchg
inc
mov
sbb
push
and
sbb
loop
lock
xor
enter
loopne
aas
orb
cmc
adc
mov
in
dec
fnsave
mov
fwait
or
mov
mov
std
add
sub
nop
std
in
push
push
jecxz
cltd
add
push
mov
inc
xchg
mov
in
pop
cld
dec
cs
aam
int
stos
mov
xchg
cli
inc
adc
cmp
jns
cmp
jmp
xor
filds
adc
inc
inc
sarb
ret
sbbb
call
scas
cltd
xlat
dec
stos
movsb
out
hlt
or
inc
jbe,pn
shl
xchg
pop
push
pop
mov
dec
adc
ret
cld
inc
add
rcrl
out
push
push
add
cmp
adc
ror
imul
sub
stos
adc
test
cmp
repnz
mov
ljmp
fdivrl
inc
sub
leave
push
dec
add
daa
cmpsb
push
je
jb
jnp
sub
test
sarl
subl
jb
sub
stc
outsb
mov
cli
jg
jb
rcl
ljmp
mov
fcoml
mov
cwtl
jnp
pop
pop
xor
adc
mov
jnp
pop
aaa
imul
pop
xor
xchg
sbb
dec
insl
out
pop
adc
push
sub
inc
rcrb
jnp
sbb
add
xchg
add
arpl
cmp
jbe
adc
scas
mov
fidivl
shl
or
jecxz
add
ficoms
imul
sub
bound
xor
outsl
aaa
push
mov
dec
in
sbb
lods
addl
ficomps
pop
andb
inc
test
jnp
bound
testb
ret
xchg
ljmp
mov
adc
imul
sbb
push
das
loope
and
push
cmpsl
and
mov
lock
push
adc
jg
xchg
push
mov
mov
mov
cmpsl
add
bound
push
inc
aas
sub
lcall
adc
daa
inc
cmpsl
shll
mov
dec
jo
xor
push
mov
subb
out
mov
inc
jmp
push
scas
push
and
or
insl
stc
fisubs
mov
ljmp
mull
enter
pop
sub
xlat
arpl
mov
loop
and
xor
add
mov
dec
das
mov
sub
jg
adc
jl
or
sbb
out
test
lods
mov
inc
add
push
rcll
lahf
repnz
es
mov
stos
pop
xchg
mov
cmp
jecxz
fdivrp
jp
and
or
mov
mov
mov
dec
and
cs
and
add
and
and
dec
les
push
sbb
jl
test
sbb
cli
pop
sub
add
dec
push
mov
dec
mov
insb
sbb
inc
filds
sub
inc
mov
test
mov
xchg
or
push
lock
mov
pop
xor
push
pop
std
pushl
push
int3
es
stos
add
iret
sbb
mov
clc
sub
pusha
test
mov
scas
and
cwtl
dec
cmp
imul
and
int3
lahf
je
mov
test
mov
fildll
loop
jbe
scas
or
mov
jle
mov
fildll
shlb
pop
aam
mov
or
ds
jge
xchg
sub
cli
fcomi
fcoms
mov
dec
mov
pop
xor
pop
mov
add
in
aaa
int
mov
add
int3
lret
or
ffreep
decl
and
shl
cmpsb
add
and
emms
xchg
inc
fisttps
jns
mov
std
mov
int
mov
daa
inc
or
out
inc
imulb
je
xchg
or
xchg
rcrl
lret
js
test
add
mov
xchg
xlat
movsl
or
lea
jo
add
dec
xor
in
rolb
push
int
jnp
xor
ficomps
mov
mov
aad
scas
or
xor
xor
mov
lock
add
add
sbbl
and
mov
add
mov
inc
mov
or
stc
sbb
stos
pop
cmp
mull
in
incl
xchg
adc
add
aas
mov
outsb
add
xor
ficompl
das
sbb
int3
leave
push
hlt
pop
xchg
movsb
adc
pop
enter
mov
out
addb
lods
mov
ret
loopne
mov
cs
or
mov
pop
mov
xchg
jo
inc
fucomip
insl
addl
or
int
cmp
mov
hlt
test
inc
push
or
mov
xchg
sub
inc
mov
and
or
pushf
jnp
leave
stos
xchg
sbb
sbb
incb
xor
jno
dec
imul
sbb
cmp
loope
cmp
ds
outsl
mov
dec
int
sti
mov
lods
sub
lea
mov
xchg
pop
frstor
xchg
outsl
fisttpl
and
or
xchg
gs
loopne
pushf
fcompl
ss
jo
adc
jl
mov
mov
cmp
inc
push
les
addl
in
jg
add
inc
xor
add
adc
push
fisubs
push
loope
ret
mov
mov
jo
outsl
sbb
mov
lods
leave
fnop
daa
notb
lahf
cmp
fnstsw
das
scas
mov
xchg
or
orb
test
push
clc
mov
add
push
mov
adc
sbb
adc
mov
push
repz
xchg
jnp
lock
fsub
idivb
pop
pop
inc
adc
pop
in
mov
das
mov
fldt
je
sar
aaa
ficoml
mov
test
bound
dec
inc
cld
test
push
mov
pusha
sub
out
mov
sub
xchg
mov
xchg
and
mov
loopne
insl
std
fisubrl
aad
inc
out
or
add
fdivs
dec
push
loop
or
xor
pop
and
leave
jns
jg
out
sub
jmp
cmp
sbb
push
ljmp
movsb
mov
jne
dec
gs
insl
xchg
jle
pop
test
jbe
pop
pop
loopne
stos
push
and
dec
jne
cs
sbb
pop
inc
sub
push
xchg
int3
push
rcll
lahf
mov
and
mov
or
push
jb
shl
test
or
mov
int
push
icebp
dec
mov
sti
outsl
jge
pop
sti
test
jnp
jp
pop
fs
decl
popf
std
pop
inc
inc
outsl
femms
lods
add
shrl
jle
hlt
outsl
je
pop
out
mov
push
sbb
pop
fwait
arpl
jge
sub
dec
test
sbb
rcrl
lahf
jae
push
xchg
xor
and
pop
pop
loopne
test
inc
stos
and
dec
jle
adc
iret
sub
dec
sbb
stos
xchg
adc
das
sub
push
int3
push
repz
jle
sti
adc
and
mov
in
mov
in
push
xchg
add
dec
aam
aad
xchg
fbld
gs
repz
stos
xor
add
push
notb
pop
mov
xor
testl
cmp
cmp
das
out
clc
movsl
pop
push
cmp
fcoml
ret
dec
mov
or
loopne
jle
out
sub
arpl
aaa
sub
add
mov
sbb
pop
icebp
push
push
mov
cmc
jmp
cmp
push
enter
mov
inc
cltd
jmp
adc
jnp
aad
clc
sbb
pop
clc
leave
ret
jg
movsl
cmp
mov
push
sub
inc
sti
ja
inc
das
cmp
mov
mov
and
in
mov
mov
add
in
sbb
subb
cld
loop
cwtl
rcl
mov
pop
lock
stc
xchg
std
sar
in
dec
ret
sbb
enter
or
and
ret
data16
xchg
adc
inc
mov
xor
jne,pt
cwtl
aaa
lds
insb
jmp
loope
dec
jle
mov
mov
rclb
or
nop
mov
fistpll
stos
push
sarb
mov
lds
sbb
pop
loope
ljmp
fnsave
xor
jb
stos
inc
outsl
sub
xchg
call
cli
in
xchg
jle
outsb
and
andb
lock
pop
fsubrp
movsb
dec
adc
fwait
jb
enter
xor
imul
or
insl
aam
test
cwtl
inc
clc
lret
incl
fcoms
adc
leave
push
xchg
push
mov
add
out
aaa
sarb
fisubl
mov
js
xchg
mov
clc
lock
pop
addb
adc
in
push
xor
pop
push
aam
mov
imulb
nop
loope
pop
push
addr16
jl
xchg
mov
lret
lret
jle
inc
out
inc
nop
clc
or
dec
xchg
mov
sbb
inc
xor
lcall
jmp
xchg
xchg
cmp
rcr
add
push
jne
adc
add
sbb
stc
iret
scas
adc
lock
fwait
mov
in
psubusb
dec
dec
test
or
call
data16
out
loopne
dec
and
or
sbb
sub
mov
je
data16
loope
lea
fcomp
sbb
in
cmpl
sub
xor
jp
jg
mov
daa
das
inc
cld
jg
xlat
cwtl
push
sarl
xchg
cs
jg
sub
popf
bswap
nop
push
mov
cwtl
sub
ss
add
jbe
addl
hlt
pusha
or
shl
jl
inc
pop
mov
add
add
mov
sub
inc
sar
or
scas
rclb
add
ljmp
test
mov
dec
sbb
popa
push
dec
xor
clc
pop
push
cs
ret
daa
inc
mov
leave
push
in
sbb
shrl
out
cmp
inc
xchg
outsb
mov
or
mov
loop
add
or
in
and
adc
mov
imul
jp
cli
addr16
push
adc
push
add
adc
sbb
push
cmp
lcall
mov
xchg
push
pop
jnp
lds
push
inc
mov
or
jmp
jl
mov
mov
dec
js
fs
cwtl
push
test
cmp
push
idiv
filds
xchg
mov
mov
fwait
pop
pop
addl
xchg
push
mov
and
fwait
adc
call
cmc
mov
scas
lods
int3
xlat
cltd
in
jl
jb
cltd
cmc
mov
sub
xchg
enter
pop
mov
xchg
cwtl
sbb
and
mov
lock
scas
cwtl
addr16
cmc
imul
call
inc
stos
mov
adc
xor
lods
jnp
imul
in
xchg
inc
inc
loopne
test
sbb
add
dec
ret
cli
adc
push
popa
in
fucomip
or
mov
mov
jb
mov
adc
lcall
sbb
xor
cltd
daa
xchg
add
mov
mov
dec
cmp
pop
mov
std
cmpsb
out
inc
xor
movsl
add
test
ret
aad
dec
in
pop
cmp
mov
inc
xchg
aaa
fcompl
hlt
push
adc
pop
loop
and
sub
subb
cld
imul
inc
lds
inc
in
mov
fdivl
add
mov
add
or
dec
nop
and
and
push
add
outsb
clc
and
add
dec
jecxz
faddl
lods
adc
inc
xlat
clc
push
dec
test
das
sub
cmp
daa
adc
mov
into
xor
loopne
andl
fwait
sbb
sbb
mov
jle
sub
ret
in
out
push
daa
adc
or
add
and
lds
or
sti
roll
adc
insb
cmp
mov
sbb
movsb
sub
iret
mov
shll
push
mov
inc
or
adc
adc
pusha
sbbl
jmp
cwtl
add
faddl
jne
fdivrp
cld
adc
rclb
xor
inc
xor
rolb
xchg
inc
push
xor
sbbb
js
adcb
dec
faddl
loop
pop
and
pop
in
and
lock
add
or
scas
mov
lods
mov
stc
dec
cld
loope
and
xorl
cwtl
lods
sub
adc
scas
lahf
dec
rcrl
push
mov
jmp
in
add
lret
lods
bound
cmp
inc
cmp
push
cli
and
pushf
out
stos
lock
iret
mov
xor
pop
icebp
and
mov
out
aas
cmp
popa
sub
call
ss
and
test
push
in
insl
in
lock
out
das
xchg
cmp
cld
test
mov
adc
sub
sbb
or
ss
pop
ror
mov
pop
outsb
pop
or
adc
push
movsl
sbb
add
adc
add
pop
push
and
adc
xor
push
xor
fsubrl
sbb
and
and
sub
add
notl
mov
ljmp
pop
icebp
ficoms
iret
loope
mov
ret
hlt
inc
mov
lods
cmp
add
call
sub
jmp
lcall
xor
jmp
pop
xchg
mov
adc
decb
sub
sub
call
add
mov
add
cmc
das
xchg
in
lret
mov
adc
je
in
dec
sbb
mov
xchg
add
lahf
iret
push
outsl
stos
sbb
daa
jge
cmp
fstpl
or
movsb
xorb
add
and
xor
fs
cli
fldt
mov
into
movsb
push
gs
in
sti
jne
push
jmp
scas
xor
aam
mov
cmp
add
push
jl
inc
sub
inc
insb
xchg
fwait
sahf
fsubr
sar
mov
sub
fcoml
adc
mov
jle
dec
jmp
rcll
ret
push
clc
adc
push
adc
sbbl
cmp
inc
push
jno
and
jp
mov
xchg
or
or
subb
mov
repz
rorb
popf
popa
or
arpl
push
cvtps2pd
fildll
xor
aas
fidivs
push
xchg
into
pusha
mov
pop
push
inc
mov
push
mov
repnz
push
ja
sub
loop
mov
ret
adc
push
xor
stos
sub
inc
sti
sbb
lock
or
cmpsl
push
xorl
jle
and
or
das
xchg
cld
xor
pop
mov
scas
movl
xchg
out
inc
push
sub
mov
cmpb
or
add
stos
add
movsl
dec
jp
xlat
pop
add
adc
push
jo
ficompl
cltd
int
pop
jae
mov
sbb
lret
aam
push
faddl
lds
js
outsb
enter
movsl
lock
and
sub
in
fiaddl
jl
mov
test
les
aaa
call
jg
cmp
mov
mov
arpl
sarb
xchg
ljmp
cs
jle
test
mov
testb
xchg
xor
xchg
mov
dec
add
aas
je
jle
movsl
outsb
sub
test
out
mov
lea
clc
mov
movsl
and
outsb
clc
popa
cmpsl
xor
sbb
aaa
lcall
push
or
loopne
out
lods
add
cld
movsl
outsb
mov
or
bound
cld
filds
fsubs
push
jp
push
jbe
scas
dec
outsl
lock
xor
push
pop
js
fmul
mov
mov
xchg
jge
es
js
or
stos
stos
fnstsw
xchg
ja
pop
mov
lods
add
cs
cmp
popa
rcr
icebp
fisttps
cld
push
and
cwtl
aaa
loopne
jns
pushf
cltd
dec
mov
outsl
push
inc
fwait
loopne
jne
inc
sbb
adc
test
adc
shll
movsb
ljmp
fdivs
pusha
push
in
ret
test
ret
add
pop
mov
push
mov
fwait
popa
push
out
mov
add
mov
aad
and
sbb
xchg
faddp
mov
xchg
shrb
aaa
decb
incl
adc
js
test
outsb
xor
fbstp
jbe
xlat
test
inc
and
inc
je
xchg
aaa
repz
sbb
lcall
mov
das
mov
jl
push
push
mov
add
ja
ja
adc
mov
inc
fildll
rolb
into
in
mov
inc
push
xchg
lahf
icebp
jae
nop
jno
pop
adc
cld
pop
push
xchg
arpl
nopl
and
lock
ljmp
jge
movl
aaa
icebp
add
pop
add
fsts
xor
push
mov
pop
pop
pop
jmp
loope
mov
addb
std
mov
and
ss
pop
roll
mov
ss
push
or
icebp
inc
jne
ret
sbb
jmp
push
out
adc
lds
test
decb
pusha
pop
push
fwait
ja
lods
clc
xchg
fwait
xorl
mov
pop
adc
dec
test
and
and
je
sbb
cld
stos
dec
data16
test
das
mov
push
mov
add
scas
push
mov
sbb
movsl
fwait
aas
fs
sbb
pop
gs
push
cmovno
out
out
stos
adc
push
lret
and
jnp
lock
mov
cli
scas
pop
sub
mov
pushf
adc
add
add
sbb
mov
inc
aaa
and
scas
dec
jbe
sbb
or
ret
inc
or
xchg
mov
ja
dec
and
xchg
pushf
ljmp
outsb
mov
aaa
adc
fdiv
lods
and
rcrb
dec
das
and
cmp
daa
add
subb
fidivs
sub
sti
ja
and
or
add
pusha
mov
imul
or
int
jbe
jne
loopne
cwtl
mov
inc
pop
and
repz
dec
mov
ljmp
adc
mov
sbb
call
mov
inc
sbbb
mov
mov
push
or
insb
push
pushf
mov
mov
add
add
adc
mov
mov
jecxz
roll
clc
psrad
inc
icebp
insl
add
inc
dec
sub
bound
sub
pusha
add
lock
pop
add
stos
fimull
rcrb
daa
fcmovnu
pop
lds
xchg
dec
nop
stos
dec
jno
bound
cmp
mov
jo
fcomi
shl
and
xchg
push
ljmp
and
lods
pop
and
aam
xchg
pop
lret
into
fwait
adc
mov
cmp
lcall
sub
jge
mov
in
mov
les
mov
shll
mov
mov
mov
leave
push
jne
inc
sub
mov
loope
add
push
xor
pop
jo
mov
adc
jmp
push
clc
mov
loop
push
clc
int3
mov
mov
popf
fwait
cld
add
icebp
iret
out
xchg
repz
push
fwait
stos
xchg
cltd
mov
jg
fsts
dec
enter
xlat
and
mov
inc
cmp
inc
mov
sub
repnz
sub
mov
shlb
mov
aam
loop
sub
mov
mov
xorb
mov
mov
mov
dec
push
adc
rolb
or
adc
add
sub
sbb
clc
insb
shr
jae
adc
lcall
pop
add
push
and
out
pusha
push
lock
dec
add
sbbb
mov
xor
iret
jns
xor
xchg
adc
adc
outsl
sqrtps
dec
cmp
push
hlt
sbb
xor
sbb
push
fbstp
add
xchg
or
push
cmp
mov
inc
out
and
push
adc
cld
mov
mov
sbb
popf
mov
mov
add
adc
jmp
ds
pop
das
aaa
and
shrl
sbb
cmp
orb
lock
cld
inc
fcompl
dec
mov
call
inc
inc
imul
xchg
add
push
mov
jge
outsl
mov
mov
popf
xchg
xor
sarb
xchg
fs
mov
jnp
mov
jns
fisttpl
sub
or
add
mov
cmc
and
lods
scas
xchg
inc
lcall
sub
pushl
mov
idiv
lock
sub
cmp
or
sub
fbld
mov
jp
cmp
add
clc
push
sub
push
adc
push
jno
or
sahf
std
sbb
sub
mov
add
loope
rcrb
sbb
or
addb
leave
and
mov
dec
cmp
popf
shl
call
cwtl
push
jl
cmp
rorl
and
outsl
call
cmp
and
decl
sbb
loope
movsb
add
add
xor
movsl
mov
add
xchg
jns
stos
mov
and
xor
add
adc
cmpl
fdivrs
cmp
clc
das
rolb
xchg
mov
loopne
fpatan
mov
dec
mov
inc
add
repz
inc
rorb
loopne
and
mov
push
push
lret
in
idivb
addr16
ss
dec
jecxz
in
inc
mov
sbb
stos
push
inc
mov
in
and
test
andl
call
daa
adc
dec
out
add
xchg
popa
adc
clc
add
dec
jge
or
push
adc
orb
jmp
mov
ficoms
jno
lea
jmp
sbb
std
jb
cmp
inc
popf
stos
jo
adc
out
push
mov
jo
daa
jo
loopne
lods
ljmp
add
ds
out
mov
inc
outsl
dec
pusha
adc
call
ljmp
or
das
fsubl
loop
mov
mov
cli
fucomip
push
jbe
pop
inc
and
lock
mov
cmp
data16
out
or
xchg
sub
inc
rcll
pop
inc
aaa
stos
ss
test
shlb
movsb
jo
nop
inc
arpl
mov
and
stos
inc
cmp
fucomi
ret
or
dec
jecxz
mov
pop
jb
repnz
adc
aaa
jbe
jae
cmpsb
sbb
rcrb
push
or
mov
inc
cmp
fimuls
rolb
aas
lock
or
ss
outsb
sub
or
loope
std
xor
push
std
xchg
dec
push
dec
jecxz
sub
lods
push
incb
mov
je
ret
push
cmova
inc
stc
aam
stos
push
into
call
fistpll
cmpsl
insb
push
pop
les
orl
mov
outsb
dec
or
std
aaa
fidivrs
xor
or
pop
push
and
loope
jmp
push
call
out
sarl
in
sbb
dec
sbb
mov
mov
sbb
add
or
std
test
nop
clc
push
popf
sub
fidivl
add
jb
movsl
xchg
adc
sbb
nop
adc
mov
inc
mov
mov
scas
test
test
pop
pusha
mov
xchg
ds
popa
jecxz
sbb
dec
test
loopne
jg
mov
or
les
inc
adc
sahf
clc
pop
inc
pop
leave
pop
cwtl
bound
add
mov
in
sbbb
jb
inc
test
fcom
movsb
mov
mov
movhlps
jle
or
nop
pusha
das
cmp
xor
or
std
call
clc
call
addr16
int3
ret
lret
mov
mov
cli
adc
addr16
shll
test
or
addr16
in
lock
add
pop
add
mov
pop
lock
and
and
int
lcall
stos
fisubrl
addl
cmpsl
rolb
rcr
or
test
ljmp
or
mov
out
cwtl
aas
add
adc
test
adc
add
into
jbe
adc
and
jae
pop
loop
sti
in
jns
aad
sbb
add
sub
loop
pop
shl
add
loope
stos
fcomps
add
or
push
lret
cmpsb
hlt
push
aad
or
xor
sbb
andb
mov
cmp
or
lahf
inc
xchg
sub
add
and
jg
push
inc
add
mov
mov
mov
inc
pop
jno
add
inc
push
push
xor
int
and
add
jge
xor
xchg
jae
or
sub
dec
push
adc
sbb
out
es
push
inc
add
jnp
jge
icebp
loop
pusha
jb
add
add
lock
fmuls
ja
cmp
add
fimuls
lock
ret
xlat
les
add
jne
subl
call
dec
imul
push
inc
mov
lea
mov
jb
dec
push
xor
xor
dec
int3
and
sbb
sahf
or
sub
mov
mov
sahf
jbe
lods
nop
mov
cli
xchg
rorb
js
adc
outsb
xchg
test
pop
mov
ss
ljmp
dec
cli
or
or
or
and
mov
add
scas
jns
pusha
mov
inc
or
fs
out
xlat
mov
mov
mov
push
cmpsb
unpckhps
adc
push
pop
sbb
push
push
inc
adc
push
roll
sub
or
leave
fcomps
lds
or
jl
push
jmp
cmpsl
in
int
jecxz
inc
push
jno
push
pop
js
push
je
push
es
mov
mov
add
sti
arpl
add
cld
add
aaa
adcb
sbb
adc
push
psllq
push
jmp
push
and
xchg
mov
stos
adc
mov
push
mov
stos
out
divb
mov
pushf
insl
es
sarl
hlt
sub
test
cmp
xchg
idivb
jno
sub
mov
sbb
cmp
mov
sbb
les
outsl
adc
lret
jg
data16
adc
aaa
cld
les
add
sbb
insb
loop
mov
imull
jge
popa
imull
call
push
movsl
gs
pop
sub
popf
daa
push
ss
adcl
xorb
xorl
or
sahf
push
rcrb
iret
and
add
cmp
inc
push
and
popa
sti
add
push
lcall
mov
or
pop
ds
jge
jne
and
fldl
sub
mov
mov
imul
dec
pop
addr16
stos
pop
add
sbb
lods
scas
mov
sbb
xchg
fisttps
mov
scas
sub
push
dec
mov
adc
scas
push
out
mov
aad
sub
mov
or
ljmp
pop
int3
ss
cltd
nop
jge
jo
mov
dec
insb
in
popa
sbb
pop
add
push
out
fwait
call
mov
push
pop
add
test
sub
lds
mov
daa
xor
push
xor
inc
adc
cmp
rcrb
cmp
jg
xchg
or
pop
cmp
out
ds
inc
outsb
shrb
xor
cmp
outsb
inc
xor
sti
push
mov
dec
popf
jb
jae
pushf
or
sub
lods
push
adc
push
decl
sahf
outsl
sub
mov
xchg
outsl
mov
stos
popf
dec
xchg
insl
nop
xlat
jecxz
cmp
add
push
fcmovb
pop
add
and
and
add
push
xor
sub
mov
loop
aas
pusha
or
sub
mov
inc
daa
jl
jae
rorb
mov
cmc
add
xchg
push
loop
fildll
or
pop
push
adc
xchg
ljmp
inc
aaa
fimuls
rorb
mov
out
mov
cmpsl
shlb
idivl
out
in
adc
call
out
mov
mov
icebp
mov
adc
rcll
fstl
loop
lods
mov
add
aas
xor
mov
add
dec
mov
cmpsb
sbb
push
lahf
cmpsb
repz
xchg
mov
mov
cmp
repz
mov
fdivr
push
ficoms
cs
sub
mov
pop
fdivrp
mov
addr16
sub
pop
xchg
or
and
xor
and
adc
xchg
jnp
push
das
fsubrs
xor
and
adc
or
sbb
in
mov
mov
xor
pusha
mov
push
insb
mov
loope
or
test
pop
pushl
cltd
fwait
imul
mov
sbb
pop
sub
adc
inc
inc
xchg
je
sti
movsl
jbe
test
xor
push
jo
mov
inc
adc
pop
cmp
fbstp
mov
push
xchg
mov
xor
inc
imul
mov
sub
out
test
es
lods
out
ret
and
enter
adcb
mov
outsb
add
inc
mov
and
pop
dec
cli
push
xor
inc
or
pushf
xchg
jns
mov
sbb
dec
leave
sub
add
out
mov
in
jne
jnp
push
pop
sub
add
arpl
and
ss
or
xchg
sbb
pop
fcmovnbe
stos
in
je
xchg
mov
adc
xor
jnp
sti
and
mov
pop
adc
push
insb
jecxz
mov
pop
add
adc
jle
shr
test
push
jae
in
out
cld
call
jo
mov
and
adc
xor
mov
mov
arpl
sbb
push
test
mov
or
push
jne
pop
int
das
jno
add
add
push
push
mov
jbe
inc
push
sub
sub
js
pop
outsl
pop
xchg
loop
jle
int
pop
jp
clc
mov
pusha
xchg
push
mov
inc
jg
cmp
cmp
sub
add
pusha
adc
insl
dec
dec
add
adc
push
pop
imulb
mov
adc
add
and
pusha
popa
imul
mov
lock
insb
dec
jb
lods
fdivrp
jne
jl,pt
shll
lahf
or
sub
and
cmp
cmp
out
pushf
jp
sub
xchg
fs
or
or
iret
push
adc
jg
add
cmp
addb
cmp
mov
ja
das
cwtl
mov
sbb
sub
je
ljmp
pop
fildll
loopne
pop
js
int
push
xchg
shrb
out
xchg
cli
scas
cmp
dec
shlb
push
jecxz
enter
scas
mov
push
sbb
clc
outsl
pop
fs
decl
addb
and
aaa
xchg
loop
aam
fisubrs
jle
and
roll
xlat
inc
loope
andb
dec
sbb
mov
inc
orl
ljmp
push
mov
adcl
lods
lret
addr16
xchg
pop
mov
lods
test
lock
jle
adc
insl
cmp
das
repnz
rorb
mov
jecxz
sub
insb
stc
and
adc
sub
mov
sbb
mov
jle
pop
test
adc
or
mov
inc
fimull
cmp
lahf
lods
divl
push
push
imul
jg
cmc
or
dec
fsubrl
imul
adc
sub
or
push
push
das
sub
scas
mov
stos
cmp
mov
mov
loopne
and
mov
or
jne
mov
int
loope
fcoml
or
add
in
lds
sbb
stos
adc
pop
gs
sbb
fstpt
test
pop
xor
cmp
mov
jg
js
lea
das
mov
clc
pushf
iret
roll
inc
adc
add
jmp
jmp
add
fisttpl
subl
add
cmp
cltd
inc
enter
xchg
cmpl
mov
insb
sub
jae
and
sar
push
mov
jl
adcl
add
imul
std
ljmp
mov
jg
inc
test
test
out
cwtl
lods
mov
mov
outsl
mov
mov
cmp
xchg
mov
push
mov
scas
pop
jmp
mov
pop
jmp
push
or
inc
pop
xlat
aas
pop
setnp
jge
ja
mov
pop
or
mov
jbe
mov
lds
je
std
rolb
jne
ret
aam
pop
mov
xor
sbb
mov
adc
add
or
pop
cmp
rorb
jl
cli
sub
jmp
xchg
xchg
adc
dec
mov
mov
test
addr16
xchg
push
mov
jg
mov
mov
mov
cwtl
jl
xor
cmc
mov
cli
testb
sbb
jecxz
mov
mov
pop
fisubrs
adc
and
adc
movsl
pop
xchg
and
and
shrl
sub
mov
add
pop
scas
cmp
push
pushl
pop
or
daa
jae
sbb
out
push
push
pop
js
sti
inc
cs
mov
stc
xor
scas
fnstenv
inc
xchg
sub
test
rorb
or
mov
pop
and
xchg
or
mov
cmpsb
popa
loope
jae
mov
pop
dec
cwtl
insb
push
pop
xchg
lea
icebp
add
ljmp
jle
adc
pusha
inc
xor
dec
mov
push
jb
xorb
ret
xchg
add
lcall
fisubrl
or
inc
inc
mov
push
cmpsl
arpl
std
or
xchg
bound
jg
add
mov
fidivl
dec
pop
mov
xchg
mov
sbb
adc
add
xchg
and
sbb
lahf
xor
lahf
scas
out
push
dec
xor
and
mov
not
sub
pop
shl
jp
sbb
lods
call
aam
aas
pop
push
add
nop
lahf
jg
adc
js
jno
add
cmp
xor
test
daa
out
mov
lods
sub
out
sbbb
push
mov
popa
daa
inc
cld
jg
movsl
test
adc
inc
and
iret
inc
imul
mov
fildll
fcoms
sub
fdivs
mov
sub
adc
cmp
inc
imul
jmp
icebp
mov
cld
mov
pop
jno
test
cmc
xor
and
xchg
mov
xchg
shlb
push
popf
mov
fwait
mov
sub
imul
pop
cmpsl
push
push
pop
jle
sarb
or
sbb
xchg
mov
mov
xchg
push
outsl
jl
lcall
lret
inc
jecxz
test
loopne
mov
cmpsb
stc
inc
mov
fwait
push
add
testl
inc
pop
loop
lock
add
cld
or
jmp
or
inc
push
enter
push
xor
sbb
inc
xchg
call
mov
sub
int
jg
pusha
jmp
addr16
inc
mov
in
add
add
stc
lret
xchg
pop
cli
decb
or
fwait
dec
mov
ret
es
aas
lea
lds
jecxz
je
xchg
pop
enter
lds
shlb
add
pop
jo
and
jl
dec
cmc
aam
popa
dec
mov
das
sub
pop
call
data16
lods
xchg
push
faddl
mov
jne
scas
lock
leave
sub
and
sub
jne
or
mov
ss
mov
in
mov
mov
xor
xchg
insl
int3
les
mov
or
xor
sbb
xchg
jmp
push
shll
outsl
hlt
sbb
dec
adc
mov
js
add
sti
pop
add
sbb
repnz
jecxz
leave
cmp
adc
stos
sahf
xchg
testl
imul
push
in
dec
or
push
add
andb
test
and
into
add
addr16
adc
push
push
or
cmpsb
fstpl
mov
mov
mov
fdivrs
mov
and
inc
sti
icebp
fdivrs
cmp
mov
aas
stos
fcmovnb
pop
push
mov
fwait
out
popf
xchg
scas
fldl
mov
mov
push
insl
aaa
xchg
andb
in
and
ja
icebp
jmp
insl
cld
aaa
adc
rcr
push
fstl
mov
stos
mov
ss
psrlw
cmc
pushl
push
sub
fisttpl
jo
inc
mov
imul
loopne
push
popa
pop
mov
and
movl
je
push
enter
push
fisttps
outsb
jo
xlat
pop
jge
aam
call
jecxz
mov
std
inc
insb
and
mov
mov
xor
jne
or
mov
jno
repnz
push
testb
xchg
fistpll
adc
aad
iret
test
sbb
jns
clc
inc
jb
push
or
and
aad
mov
sbb
inc
fsubrl
cs
pusha
jnp
jne
or
rclb
xchg
fstpt
gs
gs
bound
pop
inc
rol
dec
in
lods
jo
ja
push
mov
cli
pop
or
clc
outsl
shlb
fimull
and
push
sbb
mov
cmp
adc
xor
xor
cltd
subb
js
stc
int3
cmp
fildll
lret
js
outsb
mov
push
jo
and
out
pop
outsl
cmp
xchg
pop
ret
iret
into
data16
adc
cmp
subb
mov
and
xchg
mov
dec
std
js
leave
shlb
sbb
sbb
push
push
test
cld
pop
clc
pop
adc
loope
add
fstl
roll
mov
cmp
movsl
add
ja
xchg
loopne
shlb
stos
rcl
jg
dec
repz
push
rclb
ljmp
das
js
jno
iret
pop
clc
mov
mov
pop
or
add
imul
push
pop
outsb
in
insb
lea
insl
push
xor
jge
mov
test
shl
pop
mov
fbld
xor
sbb
stos
pop
out
pop
xchg
sbb
dec
rolb
mov
dec
ljmp
jmp
imul
and
jbe
jp
pop
inc
sub
fistpll
push
outsb
mov
mov
mov
xor
and
and
outsl
push
cmp
xor
sarl
aaa
cli
mov
fsub
jl
or
test
jecxz
paddusb
arpl
mov
test
out
jae
pop
loope
inc
xchg
daa
or
rorl
inc
pop
lret
mov
mov
and
push
push
outsl
mov
xchg
pusha
bnd
mov
inc
inc
outsl
sbb
inc
rcr
test
aam
xor
das
shll
jne
je
stc
ljmp
fdivr
dec
fs
adc
stos
dec
and
hlt
call
cmp
call
mov
push
cmp
adc
mov
pushf
in
filds
mov
fsubl
push
inc
clc
and
mov
inc
inc
cmp
aaa
jg
push
sbb
test
out
fildl
cld
sti
sub
pop
push
daa
cmc
or
inc
xor
push
bound
xchg
adc
mov
add
icebp
int
data16
cld
cs
divb
push
mov
mov
sub
inc
cmpsl
jmp
push
shrb
das
jg
inc
mov
cmp
cmpsb
mov
subl
push
std
lea
imul
scas
jp
dec
xchg
fiadds
fdivr
push
pusha
sbb
cmp
addl
cli
or
dec
mov
push
into
xchg
or
xchg
add
dec
xchg
sub
hlt
repnz
lcall
subb
decb
xor
addl
push
sarb
dec
lods
loope
pop
pop
inc
mov
adc
xchg
sbb
cmp
stc
and
ds
mov
push
push
out
fiaddl
pushf
ss
jmp
xchg
mov
stos
ljmp
inc
adc
add
sub
or
mov
push
stos
test
std
add
mov
jg
mov
movsb
push
insb
mov
push
sbb
inc
rorl
dec
adc
sbb
xor
mov
push
or
adc
test
ds
mov
jle
loope
mov
in
faddl
ret
aad
std
mulb
in
movsl
mulb
or
xlat
lret
cmp
add
or
ret
loop
test
mov
pusha
jg
jg
aaa
lock
in
and
or
stos
popa
cmpsl
dec
cwtl
sub
outsl
insb
inc
mov
fists
mov
sub
mov
sub
jl
or
inc
int3
cli
stos
sbb
sbbb
jge
xchg
pop
or
add
cmp
ja
mov
fwait
nop
mov
pop
add
push
lcall
jo
in
outsb
and
jmp
adc
mov
and
scas
mov
daa
push
jmp
mov
outsl
stos
and
or
sub
add
mov
mov
push
push
xor
pop
pop
pop
mov
lcall
pop
ja
add
mov
std
xor
cmp
cmp
push
scas
mov
out
xchg
outsl
mov
clc
cmpsl
add
or
out
inc
xchg
jl
add
push
loopne
add
or
cmpl
inc
jbe
icebp
mov
mov
xchg
add
popf
clc
or
js
mov
lret
push
sub
mov
les
pop
cmp
sub
add
and
rcrb
pop
cli
das
subl
sub
in
pop
dec
cmp
fstpl
jns
arpl
xor
call
inc
outsl
mov
jbe
repz
xor
arpl
int3
lock
mov
repnz
cmp
in
mov
icebp
addr16
test
push
aaa
adc
or
cmp
add
or
jle
cwtl
pop
andl
sbb
pop
movsb
cltd
adc
cmp
fsubrl
mov
mov
jmp
test
ret
dec
mov
decl
pop
xchg
mov
mov
sbbl
jp
xchg
and
inc
movsb
inc
stos
cs
pusha
dec
or
xor
add
into
orl
jecxz
shl
icebp
sub
jb
jge,pn
mov
repz
cltd
inc
jbe
and
out
clc
movsb
shll
mov
mull
mov
push
mov
push
xchg
popf
and
dec
jbe
xchg
xchg
mov
pop
or
xchg
push
xor
rcl
fdivr
mov
ja
mov
aas
xchg
lods
fcom
push
stos
sahf
or
stc
add
repnz
ja
inc
jl
nop
aam
xor
mov
lahf
fcomi
dec
call
mov
lea
ja
decb
xchg
repz
mov
mov
push
bound
aas
into
inc
add
add
rorb
cs
inc
test
sbb
xchg
les
clc
push
icebp
int3
clc
mov
aad
mov
mov
insb
fnsave
xor
aas
pop
mov
es
addb
sbb
cmp
push
incb
mov
mov
adc
adc
daa
push
mov
adc
andb
repnz
in
sahf
icebp
loopne
mov
stos
adc
push
or
dec
mov
mov
fistpll
call
call
stc
jg
scas
lds
jge
push
xor
push
and
fdivrs
leave
adc
and
add
repz
pop
cs
mov
pop
incl
add
cltd
arpl
or
scas
add
push
xchg
in
fwait
loopne
sbb
or
pop
in
loope
push
pop
into
shl
mov
hlt
xor
enter
cmp
and
xorb
dec
jg
and
xor
out
fwait
cmp
add
gs
popa
or
lds
push
mov
jo
sbb
inc
stos
or
je
xor
shll
xchg
dec
mov
outsl
sbb
xlat
cmp
add
pop
roll
sahf
mov
das
cld
out
add
or
jecxz
push
sbb
lcall
fstl
test
roll
and
andl
add
in
fs
inc
push
sub
fcoms
xor
js
cld
ficomps
cmp
push
mov
insb
jo
inc
jns
es
cmp
mov
inc
std
mov
rorb
pop
cmpsb
adc
xacquire
mov
cmp
sub
mov
enter
mov
outsl
xor
cmp
lock
xor
mov
js
jg
dec
dec
sbb
and
outsl
ljmp
jne
sbbl
mov
out
dec
push
out
cs
mov
jo
into
xchg
jb
xorb
les
outsb
inc
cld
pop
pop
arpl
cmpsl
fiaddl
cltd
inc
iret
mov
scas
add
outsb
rcrl
inc
mov
mov
sub
mov
mov
das
mov
psubd
sbb
or
int
loop
je
mov
mov
push
push
or
pop
imul
xlat
mov
mov
sahf
stos
dec
push
loope
jp
aam
sarb
ljmp
loop
in
test
sti
push
scas
dec
xchg
inc
sbb
leave
xor
out
gs
inc
aas
inc
in
bound
adc
sarb
pop
adc
sbb
fwait
ds
xchg
inc
xor
push
cmp
xchg
push
mov
mov
push
call
ret
aam
dec
lret
xor
and
jbe
cmp
sub
es
and
clc
add
dec
clc
lea
mov
push
lcall
or
ds
add
adc
or
test
and
mov
stos
inc
stos
int
mov
pop
jp
pop
jl
mov
inc
fs
stos
jle
arpl
pusha
pop
sarl
add
push
lock
bound
icebp
cmp
xchg
jne
mov
adc
movsb
mov
xor
outsb
pop
mov
rolb
aam
mov
mov
and
lds
lret
xchg
xorb
push
push
ret
clc
mov
les
stc
mov
push
dec
mov
pop
dec
inc
fwait
loopne
adc
add
inc
xchg
and
sbb
mov
adcb
es
sbb
and
xor
xchg
mov
sbb
add
or
cmp
or
sub
test
xchg
mov
mov
dec
fwait
enter
add
jbe
or
iret
push
mov
andb
mov
xor
adc
sbb
and
das
lahf
or
push
mov
or
test
ljmp
push
lods
jp
loopne
loop
stos
loopne
mov
add
mov
inc
inc
mov
stos
int3
fcoml
pop
push
fistpl
fmull
push
xor
incl
pop
subb
xor
enter
ss
mov
leave
mov
xor
int3
and
sub
pop
hlt
clc
cwtl
add
cmp
or
mov
dec
mov
cmpl
add
jns
setns
test
sbb
inc
outsb
inc
icebp
out
mov
les
imul
mov
test
jle
sbb
clc
in
adc
cld
add
cmpsl
addb
sub
orb
push
pusha
mov
adc
cmp
adc
push
jnp
popf
and
neg
sbbl
sarb
imul
nop
cs
fwait
or
and
pushf
pop
sbb
add
add
jae
add
movsb
add
pop
mov
pusha
or
nop
cmp
push
or
mov
push
inc
adc
or
les
scas
adc
pop
mov
adc
or
aam
xor
xchg
repnz
mov
add
add
sub
adc
gs
and
sub
pop
push
jno
insb
sub
loop
add
xchg
les
call
add
adc
and
test
sbb
add
xor
pop
jo
sbb
jmp
push
loopne
aas
aam
ja
stc
stos
cltd
mov
mov
and
repz
push
sbb
push
filds
je
fldl
dec
outsb
test
mov
inc
sbb
scas
dec
mov
mov
gs
loop
push
outsl
mov
jp
dec
int
lret
or
mov
xor
mov
adc
testl
add
push
jo
mov
jg
popa
cwtl
add
cmp
xchg
adc
lea
add
pop
out
daa
mov
dec
inc
adc
xchg
mov
adc
or
jecxz
jnp
sbbb
ds
mov
std
adc
mov
ja
outsb
cmc
cld
sub
push
xor
scas
jge
decb
mov
ret
je
test
sti
in
fbstp
sahf
dec
jecxz
add
jl
xchg
cmp
sarb
mov
or
add
xchg
aad
or
sbb
lcall
jg
std
movsb
add
or
imul
push
dec
xchg
or
jne
out
push
mov
and
jae
call
mov
dec
orl
push
rclb
cwtl
cmp
test
mov
mov
jmp
push
mov
mull
mov
iret
rcrb
orl
xchg
scas
lret
shll
pop
pop
clc
incl
mov
sub
mov
dec
popf
and
adc
or
or
jae
std
cmp
stc
sbb
dec
pop
mov
inc
dec
inc
inc
insl
adcb
sub
int3
loopne
inc
dec
push
fs
movsb
cmp
frstor
test
mov
or
cwtl
ja
add
inc
aad
loope
jecxz
decb
addb
ljmp
mov
cmp
xchg
or
lock
imul
fcomip
add
or
mov
mov
clc
in
mov
repnz
repz
fisubrl
sub
aam
sub
aad
xchg
fistl
mov
mov
ljmp
icebp
shll
inc
adc
push
or
aam
mov
xorl
jno
pop
fistpll
and
dec
add
add
test
out
call
fdivr
lret
fiadds
les
adc
mov
mov
clc
fucomp
imul
jg
movsb
or
adc
orl
inc
mov
int3
push
lahf
arpl
push
stos
insl
cs
js
aas
mov
test
jp
sar
or
sub
loope
sbb
pop
mov
add
push
test
sbb
jg
icebp
adc
jg
mov
repnz
or
mov
cltd
test
aaa
and
xor
lret
div
adc
icebp
sub
xor
mov
ja
and
frstor
mov
pop
or
pop
jl
sahf
mov
xchg
mov
mov
push
adc
pusha
push
pop
ss
popa
subb
dec
cmp
jmp
inc
xchg
push
in
pushf
call
dec
dec
xor
mov
sub
mov
and
insb
mov
arpl
das
test
jge
sbb
shrd
sbb
cwtl
add
xchg
and
mov
incl
dec
lahf
pop
jmp
test
sbb
pop
clc
in
test
mov
pop
adc
nop
pop
pop
clc
mov
je
lock
ja
sahf
pop
add
in
mov
test
aad
mov
inc
popa
incb
jp
inc
incb
inc
adcl
pop
adc
inc
inc
sub
sbb
or
iret
jmp
adc
shlb
fidivrs
jl,pn
dec
cld
testl
dec
cld
mov
inc
les
andl
push
in
mov
int
xor
pop
jl
aad
dec
xchg
mov
sbb
ds
and
inc
xor
test
dec
or
mov
add
loopne
mov
or
mov
daa
stos
je
pop
add
ret
pop
push
dec
arpl
adc
inc
and
add
mov
pop
xchg
mov
repz
inc
insb
in
add
sahf
popa
jecxz
jbe
add
je
ror
ret
mov
push
and
cmp
jg
jp
stos
cltd
movsl
test
xor
pushw
loop
ret
add
jae
imul
imul
jle
pop
aad
adc
dec
movsb
sub
aam
arpl
jmp
sub
stc
lea
arpl
call
addl
add
shrl
dec
mov
mov
sbb
ds
inc
xor
outsl
testl
or
sub
xor
outsb
sbb
loopne
cmp
cltd
ficoml
cmp
js
in
mov
or
mov
subb
pop
les
adc
xor
mov
mov
sti
movsl
jmp
jne
add
outsb
xor
gs
adc
sar
jo
push
enter
jb
and
push
pop
mov
mov
mov
inc
jge
dec
das
ja
pop
jl
out
mov
pop
add
or
dec
sub
mov
sub
mov
cmp
cmp
and
xorl
mov
add
mov
xor
push
fistl
hlt
inc
out
add
dec
dec
dec
push
test
push
sub
pop
xchg
jmp
mov
test
mov
mov
inc
adc
out
jecxz
and
or
cltd
mov
pop
fldt
dec
mov
arpl
test
fiadds
push
dec
pop
fucomip
xchg
aaa
or
cmp
ljmp
sbb
mov
cmp
loopne
js
outsb
stos
mov
rcr
cmc
pop
lock
lods
stos
mov
sarb
je
push
cld
push
xchg
mov
pop
xor
inc
out
in
cmp
in
scas
out
pop
addps
add
stc
sub
fildl
and
aaa
pop
arpl
shrl
and
je
push
jecxz
xorb
pop
jo
sub
mov
add
test
mov
xor
rcrl
jl
fimull
jae
jecxz
fsts
cld
pop
lods
inc
push
mov
int3
out
movsb
adc
test
outsb
clc
daa
insl
dec
clts
mov
mov
mov
jp
aam
add
pusha
pop
sub
sub
add
shlb
daa
pop
jbe
mov
nop
push
pop
jp
jnp
fcmovu
jl
push
clc
pop
js
xor
push
fs
jle
pop
sbb
loope
sub
cwtl
mov
xchg
push
cltd
mov
sbb
xor
shr
out
out
into
adc
lock
std
rclb
fadds
jl
pop
mov
call
aad
in
outsl
adc
or
dec
jo
sbb
push
jl
add
daa
adc
sbb
outsl
incl
lcall
cmpsb
sub
push
je
jbe
mov
div
mov
aas
jo
fisttps
fcmovnb
adc
fldt
push
das
fbld
cmpsl
aad
loop
aas
fstpt
cmp
faddl
sub
or
xor
insb
jno
in
fimuls
mov
mov
pop
jl
aaa
pop
out
mov
mov
aaa
adc
jge
xor
xorb
add
std
inc
scas
rolb
and
xor
lods
shlb
pop
cmc
lods
outsl
jo
adc
mov
outsl
call
push
jg
pop
aam
jno
and
add
shl
inc
sub
sti
cmp
and
mov
and
adc
int
pushf
mov
stos
pushf
jno
sub
xchg
adc
inc
sbb
loop
shl
cwtl
and
xchg
fbstp
mov
dec
adc
pop
iret
or
and
adc
jb
lahf
mov
xorl
or
adc
sbb
pop
mov
test
test
stos
testb
mov
mov
or
and
adc
mov
popa
add
push
aad
loop
pop
push
or
popa
dec
sbb
shlb
aad
and
mov
xor
xchg
and
loopne
add
sbb
test
push
pop
cmc
test
jno
add
in
mov
xchg
cli
addl
adc
mov
cmp
adc
int3
push
add
jge
rclb
push
and
dec
xchg
test
fldt
lret
lock
fsts
loope
add
xor
out
out
add
out
pop
sub
inc
sbb
dec
add
inc
pushf
mov
ret
push
aaa
test
jmp
pop
add
mov
loope
push
cld
inc
pop
mov
mov
lods
xor
lret
data16
or
xorb
push
aaa
push
xor
sub
xor
sarl
mov
dec
xchg
cmp
push
adc
and
loopne
xchg
pop
js
sbb
pop
mov
or
xor
ljmp
xor
cmp
rcr
adc
cld
cmp
add
pop
xor
in
rcll
mull
das
push
jge
fstl
sbb
icebp
jg
loopne
dec
cld
cmp
cwtl
sub
movsl
clc
pop
dec
scas
sbbb
popa
push
cs
jmp
xorb
lds
mov
cmpl
push
or
lods
jno
clc
inc
sbb
xchg
inc
mov
mov
test
lock
mov
mov
out
push
or
jecxz
inc
xlat
mov
dec
push
and
outsl
jo
ja
das
or
in
xor
push
incl
out
xchg
divb
adc
scas
pop
mov
rorl
pop
loopne
ficoml
or
sub
add
aaa
js
xchg
aas
xor
data16
fcomps
mov
sbb
push
imul
xor
call
adc
clc
or
mov
adc
xor
loop
pop
pushfw
mov
mov
mov
cltd
bound
int
stos
adc
and
push
add
mov
jmp
cld
outsb
mov
add
xchg
add
ljmp
out
ljmp
fldl
xchg
push
in
jecxz
add
aas
in
ja
int
add
sub
nop
or
mov
jp
push
and
sarb
push
movl
inc
and
rclb
xor
dec
and
add
xchg
jecxz
dec
mov
inc
push
push
js
iret
pop
jmp
pop
clc
sti
loop
and
jge
movsb
mov
enter
mov
fisubrs
jmp
nop
hlt
jno
call
xchg
insl
jp
mov
adc
cmp
mov
adcb
hlt
dec
aam
in
sub
les
mov
sti
sbb
mov
sahf
inc
sub
push
inc
dec
inc
std
and
fisttpl
adc
mov
cltd
cmp
pop
data16
hlt
xor
cltd
sbb
or
jne
lock
cs
inc
add
dec
mov
je
call
std
dec
add
arpl
pop
cmp
stos
jp
ss
cmp
add
fwait
push
shlb
testl
daa
test
out
testb
xchg
dec
test
cmp
bound
sahf
es
mov
enter
rcrb
andb
or
inc
dec
leave
adc
call
pop
sub
enter
fmuls
rorb
cmpsl
sbb
jmp
lcall
jecxz
daa
adc
push
into
mov
push
ljmp
call
mov
mov
sbb
pop
sbb
dec
dec
loopne
inc
cmp
orb
sbb
mov
repz
sbb
mov
inc
mov
adc
jmp
push
je
mov
andl
lods
les
es
in
rcll
or
loope
mov
rolb
or
jne
push
js
sub
inc
sbb
and
into
out
sub
dec
das
add
int
dec
sbb
or
jge
ret
or
int
bound
push
lock
push
sub
scas
arpl
xor
push
jae
loope
ljmp
adc
push
mov
es
sbb
add
xchg
xor
lock
or
pop
out
into
ret
add
subl
add
inc
test
sub
pop
push
xor
and
out
dec
pop
adc
adc
inc
pop
sbb
shll
cmc
rorb
popf
sbb
rcll
xor
lret
pop
cmp
ret
js
cmp
mov
loop
jns
push
and
add
outsb
mov
aaa
push
mov
and
xor
and
push
loop
shll
mov
mov
call
xor
imul
popa
sub
cli
cmp
dec
adc
outsl
or
bound
mov
or
adc
addb
pop
movsl
sub
test
mov
insb
sbb
and
xchg
inc
das
jmp
push
mov
inc
mov
js
mov
pop
arpl
mov
faddl
pop
aas
and
sbb
sub
enter
shrl
jg
pop
and
dec
pop
xor
test
and
mov
jae,pt
in
jo
sub
mov
adc
shll
and
mov
lahf
icebp
sbb
lahf
push
add
push
pop
mov
lock
nop
fidivl
add
pop
push
movsl
lock
inc
jge
or
and
fbstp
add
xchg
push
inc
mov
sub
sbb
inc
stos
pop
lock
jno
mov
mov
lcall
mulb
cmc
push
and
push
add
mov
ljmp
js
sbbb
jmp
inc
loop
lock
arpl
test
shlb
outsb
adc
aaa
mov
push
or
or
and
jne
jno
cmpsb
or
push
dec
or
test
in
dec
clc
enter
mov
inc
shrl
sub
pop
popf
or
test
jecxz
and
fildl
icebp
int
dec
sub
orb
add
or
jg
iret
push
fmull
mov
and
mov
sub
inc
int
xchg
sbb
or
push
pusha
pop
loop
cmc
aaa
add
jl
fcoms
out
push
addr16
and
dec
adc
repnz
jns
rclb
cmp
push
cli
lcall
add
lcall
mov
out
mov
sbb
mov
xor
mov
pusha
xchg
lea
hlt
mov
outsl
adc
popf
pop
xchg
mov
cmp
aas
filds
adc
std
sbb
imul
daa
inc
repnz
fidivs
pop
mov
xchg
in
out
nop
in
sbb
dec
in
adc
data16
sub
or
pop
jbe
movsb
int3
push
xchg
sub
jnp
push
in
xchg
jle
stos
pop
push
cmp
repnz
jle
jbe
incb
pop
and
ss
dec
mov
das
lds
dec
lea
sub
cwtl
lods
pop
sub
test
jg
push
call
sbb
sub
jo
xorb
addb
jno
jne
ljmp
add
cli
xor
xor
cld
pcmpeqd
jl
loop
mov
pop
mov
mov
into
sub
lret
divb
in
mov
aam
in
fidivrs
imul
jmp
and
sbb
bound
jno
ret
fildl
pusha
pushf
jns
add
push
mov
cmp
inc
push
adc
mov
outsl
pop
ja
roll
adc
jo
xor
das
incl
outsl
mov
fdivrp
adc
aad
cltd
insb
inc
inc
dec
xor
fcomi
mov
loopne
shlb
push
fisubs
push
adc
adc
jnp
cmc
dec
js
dec
js
int3
insl
insb
or
aaa
mov
cmc
mov
mov
and
mov
fsts
je
hlt
mov
push
mov
pop
xchg
cmp
lods
data16
test
xchg
mov
je
das
sub
and
nop
fucomip
jb
mov
ret
or
mov
das
cmc
ret
das
fidivrs
daa
or
imulb
or
add
sub
fwait
push
adc
or
in
test
aad
mov
ficoml
and
addl
pop
imul
jno
call
mov
idivb
and
cs
or
mov
call
adc
sub
and
pop
push
daa
push
xor
dec
shlb
push
push
nop
aaa
cltd
mov
arpl
fimull
in
adc
adc
and
loopne
aaa
sbb
mov
xor
stos
inc
imul
icebp
pop
jb
pop
add
dec
clc
and
call
pop
fadds
adc
jl
xchg
aas
mov
mov
insl
out
push
push
scas
cmpsl
or
xchg
or
call
in
call
cmc
or
dec
xor
xchg
clc
enter
mov
mov
add
sahf
inc
dec
icebp
sti
cli
push
fst
add
xor
lds
xchg
test
or
xchg
decl
addr16
lcall
out
pop
outsl
rcrb
or
or
add
arpl
or
imul
pusha
sti
popl
loope
mov
or
push
lock
scas
add
jmp
lcall
out
inc
dec
idiv
cld
cli
and
outsb
mov
ljmp
sbb
jmp
push
xchg
jg
mov
jle
stos
fists
inc
clc
mov
addr16
jmp
fiadds
jbe
push
xchg
cld
xchg
pop
fidivs
add
adcb
jmp
aam
lds
xchg
lret
les
or
mov
loope
jl
pop
bound
call
adc
das
test
sbb
pushf
add
lret
mov
loopne
mov
aaa
or
ret
sub
xchg
aaa
inc
sub
jbe
or
sub
lods
in
xor
ficompl
dec
jl
mov
mov
sub
paddusw
cwtl
push
mov
add
xor
pop
sahf
inc
push
dec
out
mov
fdivr
inc
jge
xor
xchg
xchg
cs
mov
and
mov
sbb
repnz
ret
pushf
sbb
mov
push
xor
mov
xor
add
out
xor
out
lock
cli
cmp
xor
jecxz
outsl
pop
incb
enter
dec
jge
sub
or
das
rorb
and
cmp
movsl
jmp
into
leave
mov
jno
fdivrl
jo
mov
imul
addl
jg
movsb
xor
mov
mov
dec
mov
rcrl
or
call
pop
mov
xchg
lock
ret
sub
sub
jo
aaa
fdivrp
loopne
cli
push
pusha
push
nop
jge
outsl
pop
adc
pop
cmp
cmpsb
daa
insb
out
decl
orb
jne
inc
pop
or
add
rcrb
aaa
cld
mov
outsl
fnsave
and
sbb
stc
or
test
nop
xor
scas
push
pop
aas
es
out
loope
mov
lods
in
jbe
pop
push
pusha
push
pop
cmpsb
scas
in
notl
ret
outsb
jbe
std
xor
pop
cld
out
inc
and
jne
lret
shrb
xlat
cli
jae
cmp
or
int
push
add
sbb
rol
adc
stc
xchg
je
push
jo
aaa
adc
sbb
fistpl
cmpl
je
decb
stos
xor
cmpsl
or
push
stos
pop
adc
cmc
push
adc
mov
fcompl
adc
sbb
gs
adc
fistpl
outsl
mov
push
int3
shrl
xor
loopne
xor
jl
dec
out
jl
sarb
adc
cwtl
imul
cmp
add
mov
mov
sbb
pusha
cmp
idivb
test
push
push
cmpsl
or
mov
sbb
sar
andnps
mov
dec
adc
outsb
push
out
jne,pt
mov
push
lock
dec
sbb
cld
lret
loop
das
mov
mov
rolb
in
mov
cmp
gs
movsl
jmp
or
outsl
push
push
outsl
jo
popl
mov
add
mov
andb
addb
aaa
addr16
jb
cmp
push
aad
ffreep
jnp
xchg
ret
inc
ret
aaa
jo
ret
or
xchg
lods
repz
or
nop
movb
or
mov
dec
jmp
xor
test
xor
das
xchg
xchg
aas
cmp
lock
add
mov
pop
push
and
mov
push
loopne
aad
adc
push
cmpsb
fbstp
adcb
pop
mov
dec
inc
or
jp
jne
mov
pop
sub
lock
aad
xchg
add
out
icebp
and
aam
rcrl
subb
xorb
popf
mov
cli
jmp
xor
data16
ljmp
adc
push
mov
loopne
pushf
mov
sbb
jne
mov
lret
xchg
rcll
test
jmp
lea
sub
jo
scas
or
push
test
cmp
push
cmp
movl
adc
inc
sbb
jl
mov
ja
pusha
xchg
mov
repnz
add
nop
jl
mov
mov
ljmp
les
imul
and
ret
out
mov
mov
jo
or
mov
adc
xchg
dec
pop
jp
or
rcl
xchg
pop
leave
mov
lds
adcb
cmpsb
out
scas
pop
xchg
shrb
mov
push
and
push
insb
jmp
pop
outsl
mov
or
lock
icebp
je
fimuls
shl
adc
insb
cltd
inc
ja
cmpsb
mov
sti
sub
or
es
sub
pop
inc
xor
int
movsb
xchg
dec
inc
cmc
mov
decl
shll
dec
in
dec
mov
sub
xor
out
mov
xchg
pop
notl
ret
inc
adc
inc
outsb
push
adcl
mov
or
inc
icebp
sbb
add
add
rorl
and
sbb
add
cwtl
mov
lahf
cmp
pop
push
mov
lahf
idivb
rorl
dec
out
stos
add
sub
cld
dec
pusha
add
jge
scas
stos
sub
cld
sub
jne
sub
sbb
inc
lock
std
adc
and
mov
xor
push
push
mov
orb
mov
push
sub
ja
repnz
push
fildll
or
add
pop
dec
sbb
cmpb
rorl
xchg
les
add
call
adcb
and
xor
mov
subb
shrl
xchg
mov
mov
or
aad
call
fidivs
sub
xor
adc
mov
ja
imul
out
and
std
inc
add
and
or
sbb
jbe
adcb
sbb
fiadds
lods
test
stos
pop
repnz
adc
addr16
sbb
addl
iret
loop
dec
adc
fcoml
stos
call
rcr
sbbb
adc
sub
inc
or
push
push
shl
inc
cmp
mov
push
cs
inc
lods
popf
das
ss
sbb
loopne
dec
xor
lret
push
or
jecxz
sbb
adcb
mov
mov
push
jg
int
jl,pn
loopne
jge
and
cld
add
pusha
clc
push
aas
imul
test
or
xchg
fisubrl
push
sbb
xchg
in
or
jp
dec
fsubrs
jl
or
out
pop
lea
push
jae
lea
push
dec
adc
adc
lret
pop
adc
inc
xor
jg
mov
fiadds
and
inc
add
subb
dec
lods
sub
fstps
and
lea
sbb
add
lret
andb
hlt
fwait
int
sub
sbb
sbb
std
ret
addl
cmpsl
loopne
cmp
in
inc
add
rorl
or
push
push
loopne
jae
or
and
xor
cmpsb
call
xchg
and
inc
lahf
jno
ja
xchg
ss
cltd
push
inc
and
or
pop
mov
fisttpll
rorb
data16
inc
inc
mov
dec
inc
mov
and
mov
jg
insb
dec
lret
sub
or
andb
inc
iret
nop
sub
pop
outsl
xchg
push
rcrb
dec
sub
or
pop
inc
movsb
mov
es
aaa
sti
or
push
cwtl
cltd
das
stos
cs
sbb
imul
in
inc
adc
sbb
jecxz
adc
rorb
and
push
jbe
addr16
movsb
adc
adc
push
push
push
push
dec
loope
inc
out
or
pop
xchg
clc
aaa
mov
pop
mov
in
loopne
mov
arpl
add
icebp
mov
daa
xor
adc
sub
std
ja
pushf
enter
cmp
xchg
data16
icebp
cmp
stc
dec
mov
adc
les
pop
enter
adc
push
lcall
inc
or
xchg
in
adc
xchg
inc
call
xchg
xor
fsubs
jge
je
pop
test
push
leave
jno
xchg
rclb
je
sub
mov
leave
loop
dec
or
movsl
pop
icebp
ficomps
testl
sbb
dec
test
data16
fdivr
xchg
fsubrs
push
outsl
or
icebp
lcall
jge
pop
jbe
testb
mov
sti
lea
lea
xchg
lcall
lcall
in
sub
and
push
sub
rolb
cmpsl
movsl
jmp
dec
fdivr
and
mov
inc
iret
jne
jae
stos
in
outsl
pop
push
or
xor
arpl
pop
dec
mov
popf
mov
std
dec
mov
jbe
loope
xchg
cmpsl
jmp
sub
and
cld
sub
pop
stos
not
pop
test
or
insl
sub
inc
cltd
les
xchg
loopne
jnp
icebp
pop
nop
cmp
or
out
out
pushf
jp
mov
and
outsb
or
jp
popf
shr
movsb
mov
pop
fs
mov
cmp
inc
adc
xchg
xchg
mov
xchg
orb
mov
mov
iret
test
repz
or
dec
adc
outsl
mov
ljmp
jb
jo
rcrb
cli
out
mov
cmpsl
movsl
mov
jo
mov
aad
sbb
mov
sub
add
add
shrl
rolb
rolb
mov
in
ljmp
incb
les
dec
mov
pop
lret
js
call
or
add
jle
repnz
lcall
xor
das
iret
in
and
jl
pop
push
jns
fcmovb
cwtl
and
daa
mov
or
ds
aaa
cs
mov
rcr
push
mov
mov
pushl
push
push
divb
pop
mov
movsb
outsb
xchg
loope
ljmp
inc
ds
jg
fucomip
aad
dec
inc
cmp
cs
xor
in
cltd
js
add
push
lret
call
shrl
or
pushf
aad
dec
aas
push
inc
mov
cmp
mov
popa
aaa
sub
jecxz
addr16
arpl
dec
fmul
das
cmc
mov
add
dec
mov
cmp
dec
inc
hlt
cmp
push
and
and
xchg
imul
and
xor
xchg
std
add
mov
iret
jne
ds
lock
test
xchg
ss
pop
jge
xchg
xchg
mov
adc
in
xor
popl
sub
clc
cmp
in
decl
sbb
test
xchg
jecxz
fcmovnu
dec
dec
mov
cmp
std
sbb
ds
cmpsl
pop
testl
inc
ss
iret
imul
fbld
jp
and
out
add
data16
inc
imul
mov
sbb
sbb
dec
addr16
xor
loop
jecxz
jmp
jg
hlt
and
cmp
leave
mov
es
jne
popf
sbb
mov
fisttpll
inc
outsl
add
jecxz
mov
filds
js
jnp
cmp
sub
test
stc
sbb
add
pop
jge
push
mov
fwait
jne
movsl
push
sahf
sub
das
push
movsl
adc
push
jl
sbb
push
shlb
push
cli
push
sub
jno
dec
and
mov
pop
or
call
inc
cmp
cwtl
inc
adc
jge
adc
and
shlb
shrl
and
test
inc
xor
or
sub
outsb
leave
roll
mov
sub
cmpsl
or
out
xor
pop
xchg
mov
sbb
sub
and
xchg
ficomps
and
dec
or
pop
sub
push
arpl
inc
les
js
dec
push
xor
inc
lcall
out
fisubrs
jae
inc
aas
sub
cs
mov
xchg
adc
mov
clc
repnz
rolb
lds
push
add
mov
lods
inc
lahf
inc
ss
les
je
clc
test
in
cmpsb
outsb
rcll
mov
adc
jmp
enter
out
inc
xchg
pop
jb
dec
add
icebp
inc
ds
sub
loope
and
and
push
lock
sbb
cwtl
pop
js
xchg
adc
out
push
ss
push
dec
mov
pop
ficoms
movsb
stos
incb
inc
in
push
cmpsb
cmp
adc
mov
in
adc
xor
pop
jnp
cmp
fidivs
fxch
mov
and
inc
or
test
loop
mov
or
dec
push
cmp
jb
xchg
push
mov
inc
mov
enter
lods
mov
test
sbb
adc
shrl
movups
ljmp
adc
lock
xchg
push
aam
out
leave
mov
popa
aam
pushf
xchg
inc
mov
pop
lods
jb,pt
loopne
fcomps
and
ret
gs
les
push
xor
daa
dec
mov
in
pop
mov
dec
lea
jl
push
xor
das
xchg
mov
es
fisubrs
add
sahf
mov
jl
sub
fwait
adc
xchg
mov
inc
out
xor
ficoms
or
enter
jo
fdivrp
adc
adc
ficoml
fimuls
fcomi
and
sub
cltd
add
xor
xor
xor
dec
call
xchg
cmp
and
and
lds
inc
sub
inc
in
or
fdivs
push
shlb
nop
insl
inc
inc
fidivrl
and
lea
test
iret
jg
inc
add
inc
mov
lods
ficoml
imul
sbb
or
mov
in
daa
jo
push
icebp
adc
fldt
sti
adc
aaa
cmc
pop
mov
pop
push
and
lods
aaa
mov
mov
dec
fidivs
mov
xchg
cmp
push
daa
jne
push
push
fimuls
xor
push
imul
xor
mov
cmp
mov
rcl
add
sub
das
addr16
or
jg
fldt
or
mov
cmp
adc
rol
xchg
popa
ds
ja
and
mov
aam
pop
lods
and
mov
mov
mov
push
sbbb
sbb
mov
popa
lea
and
or
pop
cmp
push
xor
adc
das
les
xor
test
das
hlt
jb
fsubp
aad
shlb
or
ljmp
sbb
dec
ror
jne
jae
xchg
leave
sub
jmp
sbb
adc
fildll
adc
imul
mov
pop
jg
mov
adc
arpl
add
mov
mulb
or
sub
jns
push
mov
mov
mov
cmpb
test
rorl
cld
cmp
sbb
dec
scas
insb
add
fstpt
or
cmp
add
mov
inc
call
inc
rclb
cmp
fmuls
sub
push
sbb
mov
xor
les
push
adcl
in
ljmp
jns
inc
add
arpl
and
mov
push
add
fnstsw
filds
push
repz
pop
adc
mov
dec
add
dec
jecxz
lock
add
or
jge
jno
xchg
pop
and
jge
inc
outsl
test
sub
pop
jmp
pop
clc
incl
jle
jp
adc
cmpsb
lret
jl
sbb
es
mov
xor
add
jle
nop
add
cmc
ljmp
push
sbb
lahf
popf
inc
bound
aas
addr16
mov
cld
aaa
jb
xor
xlat
add
add
sub
mov
iret
repz
ret
sub
cld
mov
sbb
orb
sub
and
xor
ljmp
mov
stc
and
mov
push
sub
mov
jmp
add
jp
sub
mov
dec
push
repz
cmp
sbb
mov
fwait
push
or
jae
adc
aam
lea
ds
mov
out
test
mov
popa
mov
mov
lock
and
add
inc
sbb
mov
aad
mov
adc
sbb
add
mov
mov
aam
adcl
jecxz
jne
shrl
test
clc
fbld
push
cmp
aas
popa
xchg
inc
gs
inc
in
pop
rcl
push
xchg
and
sbb
pop
std
xor
push
stc
daa
mov
pushf
jno
mov
aam
jne
shlb
cmp
or
or
outsb
mov
fcomps
add
in
arpl
cmc
mov
fcompl
push
jl
adc
xor
adc
push
or
and
jp
lret
push
das
in
add
mov
jne
loop
add
adc
fs
inc
pop
pushl
add
inc
std
shlb
hlt
xor
mov
or
push
add
jg
mov
aam
pop
lea
rorb
adc
pushl
insb
repz
or
cmp
push
mov
stos
cs
inc
push
and
fcomp
out
subl
mov
xor
or
inc
aam
jbe
in
add
jg
mov
xor
and
add
pop
xchg
pop
sbb
and
mov
add
and
xlat
sbb
sub
push
pop
jbe
add
mov
fldt
or
notl
pop
aas
adc
je
loop
sub
fs
and
push
pop
add
adc
push
cmp
out
aas
push
ficoms
push
popf
jecxz
inc
mov
es
icebp
dec
mov
jl
xchg
aas
and
xchg
xchg
pop
or
push
call
xor
mov
cmp
loope
scas
inc
fcomps
push
stos
mov
and
fnstcw
sub
push
sarb
aam
push
add
push
or
in
push
push
jg
or
xlat
ljmp
nop
leave
sti
cmpsb
sbb
je
scas
jno
pop
jmp
outsb
sbbl
mov
fldz
aaa
stc
pop
lcall
mov
jo
insl
dec
aaa
inc
cmp
mov
jl
insl
in
jge
test
or
mov
mov
mov
bound
inc
not
enter
mov
dec
jl
cmp
int3
repz
ficomps
ret
shlb
pop
cmp
sti
mov
cmpsb
fdivrs
cmpsb
ss
mov
mov
roll
sbb
adc
dec
dec
mov
or
push
adc
in
pop
scas
pop
add
out
jle
pusha
and
and
jecxz
rol
aam
sti
pusha
ljmp
ret
loopne
push
test
or
loope
xor
mov
sbb
lods
test
mov
push
push
jmp
dec
xchg
idivl
outsb
shll
and
push
icebp
cs
xchg
fwait
jo
in
or
stos
test
xchg
test
jno
mov
add
sbb
mov
or
roll
and
sub
mov
push
mov
sub
fcmovu
and
pushf
push
xor
adc
aad
mov
mov
fcmovnbe
cmp
xchg
lcall
mov
push
out
scas
rcll
add
or
or
sti
mov
push
inc
dec
cmc
and
orb
mov
jg
pop
out
ss
push
adc
mov
aaa
or
inc
es
nop
popf
pop
fmuls
add
jb
das
shrl
fisttpl
adcl
pusha
into
sub
xor
pop
mov
loop
sub
mov
call
stos
sub
xchg
outsb
sbbl
repz
adc
xchg
add
int3
cmpl
out
mov
sbb
outsl
je
stos
push
rolb
pusha
shlb
xor
jmp
cs
bound
out
inc
xchg
in
or
cmp
dec
aas
add
add
clc
xchg
out
ss
xchg
push
mov
lock
cmp
inc
jmp
mov
mov
test
mov
enter
add
out
xchg
aad
lock
push
call
ficomps
adc
adcb
mulb
jo
mov
push
push
inc
and
dec
icebp
mov
or
stos
icebp
sbb
xor
add
jae
popf
push
fistl
popa
pop
cmpsl
addb
repnz
mov
cmpsl
sahf
jbe
leave
daa
repnz
mov
inc
fistpll
push
ret
mov
sarb
test
mov
or
dec
mov
shrb
xlat
fldt
pusha
dec
add
adc
aaa
ret
sbb
mov
stos
dec
pop
mov
lcall
ficompl
in
or
add
ja
mov
or
push
sbb
sti
push
mov
xor
ljmp
adc
fildll
add
jmp
jl
xor
mov
icebp
je
sbbl
fadds
push
inc
mov
mov
xchg
and
mov
lea
push
push
pop
hlt
movsl
lahf
call
mov
outsl
pop
aad
adc
rclb
jnp
shrl
adc
fdivrs
or
pushl
mov
cmc
xchg
push
or
shlb
pop
inc
int
cld
cwtl
and
push
and
lret
push
stc
out
sub
push
push
test
mov
pushf
mov
out
add
xchg
cmc
cmp
xchg
adc
jl
outsl
pop
push
mov
sbb
xchg
sbb
jl
or
outsl
inc
pcmpeqw
jae
das
movl
mov
jnp
mov
or
or
mov
outsl
hlt
inc
cmp
pop
cld
inc
push
stos
in
addl
xchg
call
xchg
xchg
ret
mov
pop
je
push
scas
pop
adc
mov
jmp
pushf
test
je
add
and
movsb
mov
loopne
int3
push
dec
sbb
push
dec
mov
cmc
push
mov
or
decl
mov
aas
dec
jbe
in
cmpl
xor
add
and
dec
das
cltd
jns
popa
loopne
test
ljmp
std
mov
shll
add
jp
mulb
addb
sti
pushl
inc
lock
test
pop
sbb
sub
jo
std
jb
inc
mov
mov
push
sub
jmp
daa
xor
mov
mov
insb
mov
fisttps
sub
inc
cmp
mov
lcall
fistpll
mov
xor
mov
jl
jo
pop
in
jmp
mov
movsb
jg
arpl
ficoml
cld
fwait
adc
sbb
cmp
adcl
fcmovb
adc
cld
push
lock
call
sbb
adc
sbbb
les
aas
push
sbb
pop
call
enter
sbb
xor
xchg
repnz
fwait
clc
sub
mov
push
cmp
movb
loope
inc
jl
fwait
ret
scas
out
mov
sub
and
add
sbb
mov
push
mov
mov
arpl
dec
decl
sub
data16
sbb
jmp
pop
fnsave
stos
sbbb
pushf
pop
jmp
add
adc
pop
xchg
rcrb
shll
pop
mov
jle
cmp
jl
movsl
inc
or
pop
imul
test
sbb
sbb
mov
aaa
lock
and
and
out
cmpsb
xlat
xchg
movsl
lods
aaa
in
pop
push
daa
pusha
xchg
xlat
push
mov
mull
dec
dec
push
pop
out
cmpsb
loope
loope
rcr
push
xchg
ss
add
cld
mov
xor
pusha
cwtl
mov
fadds
cmp
and
aaa
jle
mov
int
ja
sbb
std
lods
jg
push
mov
fcmovnbe
and
push
sti
js
fcompl
shrl
inc
xorl
pop
nop
sbb
pop
outsl
pop
mov
add
int3
jg
hlt
filds
in
push
pop
aam
popa
inc
push
cmp
add
les
aam
xchg
out
fnstsw
movsb
add
js
pop
and
lock
imul
mov
loop
daa
aaa
sub
add
shl
mov
pop
dec
nop
xlat
adc
stc
pop
cli
incl
pop
inc
dec
mov
sub
in
enter
add
aaa
add
adc
cld
cmpsl
pop
lds
fidivrs
sbb
icebp
xor
push
les
cmp
cmpsl
add
push
jae
fadds
xchg
stos
adc
cli
mov
pop
push
repnz
add
inc
into
add
jg
ja
aas
adc
mov
arpl
loopne
lahf
jns
push
clc
lea
in
inc
mov
stos
rcrb
and
mov
je
and
adcb
cli
mov
and
mov
add
dec
adc
mov
add
push
xchg
sbb
fmuls
xlat
sbb
aad
sti
test
stos
aam
and
mov
lds
lock
fimull
xchg
hlt
pop
pop
dec
mov
xchg
in
mov
adc
inc
repz
xor
cmpsl
mov
sbb
dec
or
xor
ss
jecxz
or
gs
mov
in
lret
repnz
hlt
ss
jecxz
aam
jle
mov
ds
movsl
call
mov
js
pop
add
or
mov
ss
out
and
mov
mov
pop
pop
js
xor
cmpsb
cmp
mov
add
mov
jbe
popa
push
in
mov
dec
cmp
loope
add
out
fnsave
add
rcr
je
mov
jg
cmpsl
cwtl
lcall
fnstsw
mov
ja
cmp
fs
leave
das
jle
xor
sbb
adc
add
outsb
xchg
fadd
or
lcall
lea
xlat
es
sub
dec
jb
leave
cmp
jp
stos
push
icebp
test
into
outsb
xchg
push
xchg
lcall
iret
push
xchg
xchg
adc
movsb
mov
push
sub
mov
rcrb
lcall
or
in
adc
cli
stos
enter
add
inc
mov
iret
sub
inc
or
mov
add
pop
mov
xor
dec
inc
adc
and
insl
les
or
and
dec
xor
xor
mov
and
xchg
push
les
push
test
or
jae
ja
into
adc
int
xor
inc
xor
aam
sub
out
xchg
push
cmpsb
stos
loop
nop
bound
mov
jle
fsub
arpl
mov
jo
push
inc
es
inc
mul
pop
mov
and
push
add
das
dec
xor
add
mov
mov
bound
sar
jl
push
dec
adc
adc
xchg
mov
lea
sub
lret
js
sbbb
dec
lret
mov
xor
mov
popw
in
fldcw
fsubl
mov
icebp
sub
sbb
adc
shrl
dec
fisttps
jnp
xor
out
push
jle
int3
out
or
pop
int3
adc
push
adc
adcb
in
push
sarl
push
gs
scas
add
push
or
mov
cwtl
add
popl
inc
lss
repnz
je
dec
push
and
add
movsb
add
bound
test
xchg
lods
mov
mov
sub
aas
clc
int3
push
push
dec
push
dec
shrl
xchg
shrb
push
clc
stos
adc
fdivr
inc
xchg
out
push
cmp
add
cmpsl
mov
add
pop
mov
out
test
jae
pop
xor
cli
add
inc
dec
les
lock
add
test
and
mov
inc
sbb
daa
add
sbb
pop
in
add
and
mov
add
les
test
rol
add
jae
es
int
jnp
fbstp
iret
and
test
jmp
lods
mov
shrl
notb
pop
mov
ja
xchg
xor
std
sub
mul
add
and
fsubl
xor
mov
call
cmp
push
jg
movl
pop
mov
js
inc
cmc
aaa
shlb
xchg
and
leave
jg
lods
inc
std
clc
dec
int3
pop
inc
pop
inc
ljmp
das
aas
orl
jmp
pop
adc
js
and
out
bound
mov
andb
cmpsl
push
or
sbbb
sbb
stc
sub
aad
inc
add
add
or
mov
mov
je
daa
inc
test
fistl
stos
cmp
movsb
das
mov
pushf
mov
ljmp
sub
gs
dec
je
push
imul
and
int3
xor
or
sub
sbb
push
adc
mov
sub
xchg
push
fsubrs
aad
lods
xchg
repz
lods
sbb
add
mov
mov
dec
or
sbb
mov
shr
adc
pusha
sbb
decb
or
cmp
jb
movsb
ret
aad
mov
int3
and
cld
jno
add
add
cmp
shll
stos
cmc
cmp
push
xchg
inc
imul
add
push
in
add
int3
and
movsb
test
int3
das
sub
scas
mov
or
shrl
mov
mov
in
shrl
pop
addr16
bound
inc
xor
in
adc
or
dec
jb
inc
jo
inc
adc
mov
mov
in
sub
pop
xchg
xor
xchg
imul
dec
mov
mov
push
movl
fists
fistpl
in
xor
sti
cld
add
inc
cmp
mov
adc
add
push
shlb
mov
lret
ja
mov
jbe
iret
les
arpl
sub
adc
and
adc
mov
shr
xor
cmp
fwait
arpl
rorl
cmp
orb
jne
mov
popf
mov
fldcw
jmp
jl
or
sbb
inc
fbld
movb
dec
and
xor
sbb
mov
fcoml
sbb
fdivrs
xchg
push
data16
xor
jp
je
nop
mov
and
or
fsubl
fdiv
lea
jmp
out
popa
cwtl
ret
jp
pop
sbbb
mov
call
popl
es
frstors
mov
push
hlt
mov
xlat
sub
out
inc
lcall
sbb
clc
mov
sbb
xor
test
mov
pop
mov
fnsave
ret
jg
push
pop
jb
mov
out
dec
add
cli
arpl
pop
xchg
shlb
push
les
popa
mov
mov
mov
mov
mov
or
pop
jnp
pop
or
aad
xchg
push
xor
mov
and
dec
lcall
add
fildll
ret
icebp
mov
push
fucomi
add
push
pop
push
xchg
popa
mov
filds
popa
inc
xchg
aas
stos
add
jb
adc
pop
sub
push
sub
pop
pusha
and
add
xor
pop
xlat
test
lds
nop
cli
jle
ljmp
add
dec
adc
inc
ja
pop
dec
aad
add
fcoms
sbb
fldl
aas
adc
dec
cld
push
and
mov
faddl
or
outsl
shrb
push
jle
cwtl
jecxz
sub
std
insl
sti
fwait
cpuid
ret
xchg
repz
dec
aas
push
pusha
adcb
pop
test
je
mov
mov
jnp
xchg
sbb
push
fisubrl
leave
push
sbb
icebp
aas
inc
pop
lret
mov
push
std
aam
jmp
icebp
or
and
xor
dec
daa
or
pop
movsb
jo
loop
push
rcll
sub
mov
and
in
ja
je
shr
push
shlb
jmp
push
js
int3
gs
stos
push
add
fldt
mov
inc
incl
jo
push
sbb
lea
leave
mov
inc
ljmp
and
out
loopne
ffreep
lds
adc
js
out
lds
ja
or
je
ljmp
adc
es
ret
pop
pop
sub
sbb
push
or
dec
and
aaa
in
test
bnd
ret
sbb
cld
cmpsb
loopne
dec
mov
inc
xor
cmpb
inc
rolb
dec
movsl
adc
jg
push
call
cld
dec
lret
test
fdivrs
jg
mov
loopne
js
ljmp
icebp
add
and
xchg
adc
xor
sbb
pop
push
movsb
pop
sub
or
clc
lds
lcall
mov
mov
add
aaa
test
popa
cld
jne
out
aaa
jle
cmp
mov
adc
cltd
cli
sub
mov
xchg
mov
sbbb
outsl
dec
in
imul
push
xchg
repnz
lock
icebp
dec
subl
stc
add
and
pop
cmp
mov
xchg
push
bound
pop
lods
out
xor
and
jo
mov
xchg
add
data16
xchg
mov
test
sbbb
and
add
jbe
loope
incl
call
test
hlt
pop
xchg
mov
notb
xchg
inc
and
arpl
and
lcall
fldl
in
shl
aas
adc
das
xor
adc
pop
sti
adc
add
lret
adc
outsl
insb
mov
gs
inc
loopne
out
jae
outsl
pop
mov
fwait
ror
push
xchg
add
cmc
outsl
add
sbb
rclb
pop
scas
mov
jg
incb
insb
mov
push
cmp
push
add
mov
pushl
cmpb
dec
scas
bound
idivb
dec
or
jle
push
stos
dec
ffree
mov
ret
push
rorb
mov
and
test
std
out
inc
and
xor
sbb
pop
or
adc
cmp
jno
mov
sub
cld
jb
rorb
in
cmpsl
aam
xor
cmp
jecxz
mov
outsl
fistl
mov
sbb
cmp
sbb
enter
test
jecxz
popl
sbb
and
test
dec
mov
jg
jg
mov
gs
xchg
out
in
rcll
jmp
ja
in
jae
lock
inc
adc
jg
fdivrs
lcall
push
je
insl
das
xor
inc
sbb
inc
mov
testl
sahf
dec
fstps
in
das
shll
dec
jne
xchg
test
inc
mov
ljmp
add
imul
ljmp
test
jmp
mov
adcb
ficomps
out
fiaddl
inc
dec
arpl
mov
test
shl
pusha
ljmp
cmpl
test
std
sbb
jp
inc
mov
pop
les
lods
cmpsb
or
or
mov
xor
inc
and
movsb
sti
ret
push
je
adc
xor
sub
mov
adc
pop
xchg
xlat
mov
outsl
ja
or
fwait
daa
addb
test
arpl
cmp
mov
push
jbe
shlb
sub
into
pop
sahf
jmp
mov
scas
imul
push
lock
pop
adc
pop
and
orb
cld
outsl
das
push
inc
es
push
sbb
xor
shr
das
shll
and
xchg
lahf
and
xchg
sub
cs
mov
decl
fisubl
int3
sbb
rolb
aaa
ss
or
pushf
mov
outsl
sub
xchg
cmc
cmp
les
ret
pop
add
outsl
test
nop
jl
jns
add
bnd
idivb
inc
call
jo
push
hlt
add
pop
les
outsl
clc
lea
xchg
pop
int
fists
xchg
dec
mov
out
jmp
xor
shrb
mov
mov
mov
loop
xchg
in
push
jp
inc
xchg
cmc
mov
add
popf
sub
jne
or
mov
sub
sub
xchg
dec
loop
imul
ret
call
mov
test
pop
outsb
push
mov
inc
ret
aaa
and
test
mov
insl
mov
mov
sub
fistpll
ficoml
cmp
test
sub
dec
test
int
or
or
xor
in
shll
lret
pop
xor
repnz
pop
adc
push
insl
pop
cs
add
cmp
jp
std
mov
dec
inc
ljmp
lds
ja
add
repz
cli
pop
ljmp
or
inc
cltd
and
inc
jp
mov
cwtl
mov
jne
in
sub
filds
lret
lcall
fdivr
fwait
xor
inc
or
adc
enter
fwait
xchg
inc
cmp
xlat
dec
sbb
and
les
cltd
cmp
mov
stos
addr16
cs
loopne
mov
mov
push
jno
std
mov
cmp
out
mov
lcall
lods
hlt
bound
push
mov
data16
xchg
pusha
scas
sarl
cmp
test
cmp
lods
adc
call
cmp
push
gs
cmp
sub
push
cmp
jp
aas
dec
aaa
xchg
and
mov
xchg
cmp
cld
imul
adc
arpl
hlt
inc
xlat
cld
cltd
scas
addr16
leave
xchg
dec
cmc
pop
mov
push
mov
daa
sub
movups
lock
push
iret
pushf
addl
sbb
in
add
pop
or
sar
xchg
loope
test
in
shl
sbb
pop
inc
cmp
gs
mov
mov
adc
addl
inc
dec
movsl
call
pop
push
decl
cmp
int
xor
test
inc
push
test
popf
pop
and
fadds
ficoml
in
call
dec
pop
mov
pop
ss
imul
cmp
rclb
jge
xor
jmp
fwait
cwtl
in
or
loopew
adc
inc
jmp
orl
cli
lock
fbld
loopne
jbe
ljmp
call
test
pop
pop
sub
movswl
cwtl
outsb
xchg
fwait
subl
enter
cli
jg
xchg
jnp
sahf
nop
je
sti
lcall
inc
ja
scas
fidivl
sub
mov
js
push
cmp
jmp
idiv
cli
std
cld
or
pop
pand
cmp
add
or
popf
sti
adc
or
sub
xlat
and
xchg
sub
imul
and
je
mov
cs
inc
jo
and
outsb
mov
icebp
sbb
adc
imul
sub
iret
lahf
push
lods
mov
clc
mov
jg
jo
clc
push
dec
xchg
inc
cltd
call
xchg
or
sbb
test
repz
paddsb
jge
mov
and
lock
mov
mov
add
xor
rolb
lock
clc
mov
xor
stos
mov
sbb
imul
mov
push
cmp
and
mov
mov
fwait
lods
pop
adc
mov
sbb
mov
push
fcoml
jb
or
les
cmpsl
in
lldt
test
movsl
mov
and
pop
cmc
or
mov
adc
xlat
rolb
mov
jb
in
aas
adc
push
int
cmp
nop
add
pusha
cmp
xorb
xor
ljmp
fs
sbb
or
scas
lahf
dec
cld
int3
loop
sbb
cmp
insl
push
mov
aas
js
mov
push
cs
fwait
cwtl
outsb
stos
in
jno
inc
mov
das
mov
movsl
mov
and
cld
inc
mov
push
and
repnz
xchg
jp
mov
pushf
pop
mov
xor
shrb
mov
insl
outsl
xor
adc
push
mov
std
pop
add
cli
xor
mov
or
jp
mov
add
out
call
or
cmp
daa
clc
mov
cmp
popf
bound
mov
push
push
inc
xchg
inc
and
gs
rcl
inc
mov
xchg
mov
add
sub
faddp
insl
sbb
sub
dec
pop
test
sub
pop
sarl
movsl
add
ljmp
push
in
stos
inc
je
addl
push
sbb
add
mov
fisubrs
jbe
xor
loop
int3
adc
rclb
mov
push
sbb
cmc
xor
imul
in
stc
cmp
pop
or
lods
mov
push
addl
inc
in
fildll
dec
out
xchg
sub
push
aad
jg
fnstenv
or
rcrb
outsl
pop
push
into
and
lcall
rcll
cld
pop
sub
cltd
xchg
mov
loopne
sub
xor
push
loope
push
andb
mov
push
xor
lods
in
mov
clc
jg
push
cld
adc
loop
inc
sbb
push
stos
outsb
fidivrl
jle
and
xor
adc
subl
imul
into
icebp
das
std
outsl
addl
dec
cmpsl
movsl
dec
fcmovbe
pop
mov
mov
add
mov
movsl
or
mov
fcomi
divb
mov
mov
iret
and
inc
ficompl
mov
iret
or
and
scas
push
std
jb
jnp
pop
xor
mov
jl
imul
inc
jg
adc
inc
mov
ret
mov
outsl
pop
pop
ret
and
outsl
aas
aaa
cmc
pop
mov
mov
es
imul
fistpl
xchg
xor
loopne
lock
cmp
and
mov
dec
push
push
loopne
pop
mov
inc
inc
and
popf
popf
cwtl
push
fistpll
in
andb
xor
iret
dec
fdivl
lods
mov
cmp
jnp
out
adcl
jecxz
lret
lods
scas
or
dec
in
mov
mov
lret
push
mov
test
or
mov
icebp
ljmp
sbb
push
xor
mov
out
pop
ja
mov
xor
push
test
dec
xchg
mov
incl
mov
and
jns
insb
dec
ja
or
xchg
outsb
pop
cld
sub
xor
or
loopne
mov
cwtl
mov
push
or
in
ja
hlt
xchg
ljmp
loope
mov
adc
inc
mov
pop
mov
dec
mov
adc
flds
push
notl
push
stc
std
mov
popa
and
push
scas
jo
cmc
fcmovbe
adc
and
xor
cmp
add
roll
fldt
xor
adc
or
push
pop
cmpsl
insl
stos
lcall
int3
push
sbb
pop
aad
jl
or
push
rorl
pusha
push
or
idivl
sub
cmp
cmp
add
ljmp
or
std
mov
pop
out
dec
cmp
lods
loopne
lcall
inc
gs
push
add
imul
inc
mov
ret
jne
outsb
lret
pop
jnp
push
lds
sbb
loope
xchg
fistpl
mov
cld
mov
sbb
out
ja
mov
adc
cmpsb
jae
xchg
push
sub
outsb
or
pop
incl
pop
mov
repnz
ss
sub
loop
es
fcoml
xchg
push
hlt
cld
lahf
test
inc
xchg
adc
das
sub
inc
dec
push
js
inc
push
ret
jle
rcrb
sbb
inc
jb
jbe
cld
fimull
jmp
sti
mov
inc
cli
outsb
add
inc
leave
dec
outsl
loopne
mov
or
cli
ret
jecxz
push
lods
or
std
or
pusha
test
movsl
pop
out
mov
mov
in
in
outsl
or
adc
jae
loop
out
mov
cltd
scas
cmpsb
sub
jecxz
mov
sti
gs
sbb
pop
int
popf
test
fimuls
les
dec
dec
cmpsb
sub
push
pop
xor
js
je
lret
in
das
cld
mov
jmp
fcoml
pop
pop
jae
fadd
inc
xor
jnp
xchg
mov
aaa
incb
cmp
mov
and
cmc
mov
icebp
iret
sbb
test
testb
fucom
inc
xchg
xchg
hlt
repnz
aad
loope
sbb
push
test
enter
xchg
sub
push
popf
aaa
clc
repz
xchg
enter
xchg
dec
scas
je,pn
add
sar
ret
je
scas
dec
es
xlat
cmpsl
cmp
xchg
mov
sbb
lahf
jae
popf
dec
jb
outsl
cld
shll
dec
enter
mov
adc
cld
push
inc
pop
loope
mov
inc
sub
fnstsw
loop
leave
insl
rcr
clc
jg
sub
in
lods
cmc
add
aam
ja
js
aad
or
mov
mov
insb
in
add
pop
jnp
dec
xor
das
lock
sahf
enter
push
and
fsub
lea
fistpll
fisubl
sbb
mov
xchg
jecxz
repz
push
in
push
push
int
xchg
pop
mov
mov
mov
mov
jns
scas
xor
cs
aaa
push
fwait
xchg
push
aad
xor
inc
hlt
ficoml
mov
pusha
fadds
aas
dec
dec
inc
in
add
or
mov
dec
jle
xor
inc
popa
pop
mov
in
sarb
outsl
or
or
add
mov
fistps
adc
pop
mov
xchg
inc
push
das
fnstcw
out
pop
dec
stos
dec
mov
decl
jbe
cmp
test
inc
pop
jnp
ret
push
xor
push
mov
xor
add
xor
pusha
inc
std
push
ds
and
jb
inc
push
fnsave
or
or
test
test
push
pop
push
mov
cmp
dec
movsb
and
mov
aam
dec
adc
aas
push
insl
sarl
or
add
xchg
ljmp
add
add
lahf
mov
pop
cltd
dec
inc
je
stos
test
sti
add
push
push
inc
dec
adc
sub
aas
push
ret
pop
stos
neg
ljmp
push
push
xor
icebp
das
repz
or
mov
xchg
inc
dec
xor
idivl
pop
add
dec
xchg
pop
icebp
or
mov
lods
inc
mov
cmp
sub
negb
or
sub
bound
dec
inc
adc
mov
cs
cmpsl
inc
mov
xchg
or
dec
sub
sub
sbb
lods
mov
jp
pop
pop
jnp
push
iret
mov
scas
pop
push
mov
out
mov
mov
test
out
out
lcall
sbb
xor
mov
movsl
sbb
push
je
into
int3
cmp
mov
mov
sbb
lods
jne
mov
popl
mov
cmp
ret
inc
add
test
outsb
inc
in
enter
push
ja
mov
outsb
mov
add
pop
shl
mov
loop
inc
pop
nop
xchg
dec
rcrb
adc
add
test
pop
clc
shr
sbbl
inc
aaa
sbbb
hlt
xchg
data16
inc
add
fmull
mov
ficomps
dec
les
xchg
sub
dec
dec
cmp
dec
and
push
mov
insb
in
adc
and
push
mov
aaa
cmp
icebp
mov
sti
adc
in
mov
lcall
das
dec
adc
sbb
and
mov
and
or
cmp
das
xchg
jo
leave
mov
shr
jecxz
cld
pop
mov
push
stos
arpl
loop
sub
add
dec
call
push
mov
xchg
xor
call
inc
jle
sub
mov
fsts
cvtdq2ps
adc
mov
incb
imul
and
jecxz
adc
cmp
push
loopne
mov
sbb
jae
xor
pusha
jle
enter
ljmp
test
pop
lock
sub
repnz
xchg
or
mov
push
jg
pop
js
xchg
in
push
les
xchg
ss
mov
lods
cmp
out
xchg
in
pop
dec
cld
das
insb
jp
cmp
in
pop
mov
pop
add
xchg
mov
xor
or
iret
test
aam
negb
sbb
cmp
sahf
ret
cli
rol
aaa
add
int3
mov
mov
push
gs
hlt
cmp
dec
mov
inc
mov
cmpsb
jo
mov
mov
nop
jecxz
xchg
or
mov
xchg
mov
dec
mov
lahf
cwtl
or
pop
lret
and
aam
aaa
outsb
insb
inc
daa
shll
push
cmp
fcom
and
push
mov
outsl
mov
xchg
shll
pushf
sub
mov
jecxz
add
stos
inc
divb
sbb
lock
adc
pop
sahf
mov
xchg
push
xchg
mov
fistps
inc
cltd
jg
push
rcrb
pop
pop
cmp
test
adc
outsb
test
sbb
jg
adc
pop
pop
and
push
out
sbb
jo
popa
or
adc
pop
sahf
jmp
pop
dec
loopne
scas
xlat
iret
insb
mov
push
xchg
and
je
mov
sbb
in
addl
mov
sbb
xchg
call
sub
jno
fcomps
xor
or
repnz
push
inc
insb
cld
lods
xor
nop
lret
incl
or
jmp
ljmp
ljmp
or
mov
push
inc
mov
xorb
ljmp
lods
ret
jg
and
cmc
xor
pop
idivl
sbb
aad
mov
fcmovu
insl
popf
pop
imul
xor
pop
push
mov
je
pop
test
movsb
mov
faddl
mov
lret
dec
xchg
loop
into
push
in
mov
pop
dec
insb
push
xor
dec
inc
mov
cbtw
sub
ljmp
pop
cli
push
fxch
loopne
std
xchg
mov
add
mov
mov
aaa
mov
cmp
ljmp
lock
jecxz
loope
jg
aad
adc
ss
xchg
pop
push
out
pop
mov
int3
pop
js
movsl
rcrw
outsb
mov
adcl
clc
xchg
popa
or
aaa
cmc
cmp
xchg
scas
cmpsb
add
roll
mov
mov
nop
pop
inc
in
or
sbb
es
adc
outsl
test
rclb
repz
push
fistpl
push
sub
iret
and
repz
jae
push
add
and
or
in
daa
insl
push
xchg
or
outsl
lahf
mov
shlb
adc
pusha
pop
mov
das
jl
fwait
jno
fists
cli
mov
push
clc
mov
cmp
jp
jmp
xor
push
lock
popf
mov
inc
sbbb
pop
push
sub
cwtl
adc
pop
and
stc
in
cmp
add
push
pop
add
mov
lcall
mov
push
sbb
scas
cli
shrb
int
adc
int3
outsb
pop
mov
or
fcmovnu
xlat
push
sahf
and
pusha
push
pop
xchg
inc
add
dec
add
notl
movl
add
mov
stos
xchg
lea
call
fwait
stos
inc
mov
push
jge
mov
test
lret
addb
mov
mov
jno
mov
test
jge
add
rcrb
inc
add
rorl
and
add
jb
push
mov
adc
rorl
inc
lahf
dec
push
stc
aas
fs
repnz
loop
sub
mov
cmpsl
addr16
mov
hlt
pop
sahf
sar
or
subb
xchg
dec
enter
dec
sbb
aad
lcall
cmc
test
imul
push
sahf
scas
mov
mov
jne
push
andb
cwtl
in
fcmovnb
imul
adc
dec
xor
test
sbb
add
xor
push
jecxz
leave
mov
clc
jl
jb
mov
jo
stos
movsl
and
xchg
test
jo
aaa
jo
int3
adc
jne
gs
and
outsl
mov
pop
gs
ljmp
test
mov
sbb
sub
fldenv
adc
jbe
cs
lret
or
jg
inc
sub
loope
add
inc
repnz
jle
push
test
or
insb
and
dec
add
sbbl
loopne
les
sub
aad
pop
xchg
lods
inc
and
outsl
cmp
xlat
push
fldenv
in
push
push
mov
xor
lea
fisttpl
lcall
aaa
leave
leave
sbb
fldlg2
inc
or
repz
xor
in
test
mov
and
divb
cltd
lock
outsl
pop
xchg
pop
fldcw
fcomip
stos
xchg
pop
clc
sub
inc
jl
xor
in
in
or
test
dec
hlt
xchg
leave
xor
cmc
adc
dec
cld
and
out
push
rolb
fimull
mov
add
inc
xchg
stos
mov
sbb
cwtl
cltd
inc
and
enter
mov
jge
add
add
or
mov
paddusw
and
enter
neg
inc
cmc
xor
pop
jo
decl
add
fldenv
and
adc
es
stc
inc
add
inc
dec
into
sbb
js
cmp
cltd
mov
ljmp
dec
sbb
imul
out
and
test
cmp
jle
outsl
pop
cmpsl
in
testb
add
and
add
fistpl
and
xor
sbb
pushf
test
idivl
adc
shlb
and
add
out
jno
or
cli
mov
jmp
ljmp
and
loop
pop
push
ret
sahf
ret
lock
adc
loopne
add
sbbl
add
add
and
addr16
aam
fistpll
ret
xor
ljmp
mov
mov
add
sbb
out
int3
addr16
popa
add
sbb
stos
add
xor
idivl
cmp
int3
xchg
hlt
loope
push
imul
inc
int3
adc
xchg
dec
idivl
mov
cmp
sbb
popl
jnp
in
push
add
cltd
out
out
xlat
das
pop
pop
cmp
lods
jo
add
scas
sub
inc
cmp
or
or
rcr
mov
mov
cmpsl
xchg
sbbb
mov
mov
leave
test
sbb
shlb
xor
add
adcb
pop
sarb
sbb
addr16
dec
rcll
rcl
pop
push
into
hlt
inc
inc
dec
xor
push
testb
jne
imul
test
push
mov
cwtl
test
push
lods
clc
aam
fs
and
inc
loopne
jne
leave
jge
mov
jne
mov
add
add
std
mov
cmpsl
dec
paddq
or
inc
aaa
stc
push
xor
mov
sbb
and
xorb
cmp
test
xor
jmp
push
clc
pop
adc
inc
dec
stos
pop
adc
mov
pop
mov
out
aam
inc
sub
dec
das
leave
sub
lcall
fmuls
data16
push
push
jl
imul
pop
mov
add
xor
lock
mov
sbb
jno
push
pushf
adcb
fwait
adc
pop
mov
adc
adc
cld
adc
stc
loope
lcall
push
sub
call
dec
bound
adc
dec
xchg
adc
ret
and
inc
mov
adc
sti
pop
push
xchg
and
and
push
jno
rorb
push
jg
fucomp
cmpl
dec
lcall
dec
mov
xchg
in
adcb
mov
sub
dec
aad
xor
or
aaa
dec
test
xor
and
in
push
sbb
jle
xchg
nop
ret
push
cld
pop
rorl
add
gs
and
or
sbb
add
lret
adc
std
jns
mov
cmp
mov
clc
loope
and
xor
mov
les
mov
dec
xorl
inc
rcll
shll
dec
int
mov
or
dec
and
loopne
xlat
loopw
mov
cmp
xor
leave
icebp
hlt
inc
xor
xor
pop
shrl
or
shll
jge
push
inc
pop
loope
inc
dec
sub
or
push
or
clc
add
mov
addr16
in
fiadds
in
call
in
outsl
jno
jp
loope
aam
sti
daa
ljmp
testb
scas
xchg
ret
dec
dec
cmp
mov
pop
out
fsub
scas
or
inc
sub
push
ficomps
pop
movsl
mov
ss
lods
inc
or
mov
ss
fdivrs
inc
mov
int
adc
icebp
add
sbb
inc
adc
cmp
in
je
dec
add
and
sub
fwait
and
fcomp
push
shrl
dec
sahf
fdivrs
push
out
and
xchg
inc
insb
xor
loopne
jns
mov
clc
sbb
scas
jg
es
dec
fisttpl
pop
call
adc
pop
fiadds
xchg
mov
sub
cmpsb
dec
sti
adc
jnp
mov
sbb
sar
decl
cmp
daa
cwtl
jnp
xor
cs
sbb
lods
mov
and
cld
imul
stos
push
inc
aaa
or
popf
mov
aaa
push
loopne
rorb
or
sub
outsb
into
push
das
je
add
popf
cltd
sbb
mov
cmp
sbb
mov
movsl
add
cmp
pop
dec
shrb
fldenv
lods
mov
cmc
push
cld
rcll
fbld
testl
xor
jb
nop
pop
dec
mov
stos
mov
movsl
xchg
sub
xchg
ja
int3
dec
sbb
je
add
pop
or
cmp
out
lahf
and
out
jle
jnp
stos
mov
ljmp
jo
out
in
or
sahf
xor
cli
lea
lret
jle
mov
jg
push
in
into
sbb
inc
fptan
adc
ja
fbld
aam
push
cmp
or
cli
fdivrl
mov
scas
pop
inc
int3
inc
mov
push
jno
fmul
dec
and
inc
mov
ljmp
xor
mov
fistpll
imul
cltd
repz
mov
test
lods
lret
faddl
sbb
hlt
mov
mov
mov
sarb
leave
js
loopne
sbb
cmc
xlat
mov
or
dec
scas
mov
sbb
push
ret
outsl
mov
js
lea
aas
cs
sbb
iret
aas
fs
inc
popa
xor
incl
adc
sbb
das
test
test
pop
jl
inc
arpl
popf
dec
out
cmp
fsubrp
mov
cmp
pop
jle
jmp
and
fdivl
cltd
out
pop
lcall
push
sub
mov
dec
or
mov
aad
fwait
dec
or
add
test
adc
push
jge
jae
dec
jp
in
push
and
in
lcall
dec
inc
and
mov
sbb
push
sub
mov
pop
pop
jns
bound
sub
out
jmp
add
jmp
or
pop
rcll
outsb
push
nop
decl
jmp
arpl
std
add
popa
sub
mov
push
jl
mov
data16
lock
ret
mov
adc
adc
xor
push
cld
hlt
negb
test
and
cmc
xchg
cmp
das
in
mov
sub
xor
rorb
push
movsb
orl
sub
decl
cmp
lock
mov
outsl
and
pop
stos
pusha
jp
pushf
js
popa
add
int3
test
cmpsb
addl
fistpll
ds
ljmp
sti
mov
in
add
aas
or
jns
jecxz
pop
add
outsl
jne
leave
cltd
dec
sar
shrb
cltd
test
jp
ret
mov
add
and
adc
scas
loop
jns
push
jecxz
out
in
xor
mov
or
inc
shrl
lret
inc
and
aas
pop
bt
rcl
adc
ss
jg
test
cs
ds
add
addr16
adc
xor
outsl
pop
mov
sub
cwtl
sbb
inc
les
adc
cmp
pop
test
jnp
push
repz
mov
cmp
xlat
dec
and
cld
mov
inc
add
cs
sbb
mov
jo
push
test
mov
mov
movsb
and
mov
les
pop
jne
pop
sub
pop
cltd
incb
jno
das
pop
lahf
cmp
cmp
xchg
push
hlt
popa
lock
std
das
add
ljmp
xchg
mov
adc
add
sti
cmp
call
sub
test
fiaddl
or
cmc
into
pop
imul
cltd
in
dec
pop
and
orb
xchg
clc
or
inc
iret
dec
sub
cs
sar
in
or
bt
mov
mov
sub
pop
or
data16
ret
push
cmp
xor
lcall
ljmp
repz
add
ss
movsl
inc
pop
jp
daa
mov
fimuls
imull
mov
mov
fisubs
or
or
aam
adc
bswap
sub
pop
movsb
bound
pusha
mov
xchg
nop
push
push
jp
lret
and
outsl
pop
push
imul
mov
scas
pop
fcoms
fistl
test
jl
filds
jle
sbbb
adc
and
ss
andb
add
xlat
das
les
testb
repz
out
outsb
push
repz
scas
inc
mov
adc
jl
and
cli
call
adc
and
pop
mov
cmpsl
mov
int3
cld
lods
fistpll
dec
xchg
je
out
movsl
lds
ljmp
add
pop
jg
fimull
xor
lret
bnd
dec
pop
mov
sub
sahf
mov
xchg
push
xor
xor
pop
ljmp
les
sbb
xchg
dec
cld
and
dec
insb
mov
mov
das
cld
divb
xchg
mov
push
add
mov
jecxz
cmp
push
cmc
ret
or
dec
aaa
rclb
call
mov
shll
mov
test
cli
sub
ret
pop
mov
jg
addr16
cld
sub
test
push
icebp
and
jge
adc
jno
addb
dec
mov
cli
cli
cmpsl
daa
adc
std
and
cld
push
iret
leave
cmp
loop
subb
xchg
jp
test
std
push
dec
scas
insl
inc
aaa
jl,pt
or
push
imul
cltd
call
icebp
jmp
mov
cld
xchg
gs
push
mov
call
fildll
push
rcrl
dec
push
push
and
or
pusha
fdivrp
push
mov
sti
enter
sub
icebp
push
mov
mov
adc
ds
popa
adc
fwait
adc
fildll
sarl
dec
enter
dec
sbb
loope
lds
add
sbb
dec
enter
jb
in
pop
sub
in
pop
adc
imul
movsb
bound
ja
mov
push
cwtl
mov
ja
xorl
pop
test
aas
dec
punpckhwd
int
dec
cmp
negb
aad
pop
mov
inc
aaa
adc
loop
mov
mov
fstpl
or
mov
jle
sbb
leave
rcrb
stc
popl
loop
lea
lock
sbb
data16
ficompl
fcmovnu
fidivs
mov
testb
jmp
add
cmp
mov
inc
out
inc
pop
and
mov
push
add
or
jb
cs
loope
mov
sbb
or
roll
mov
or
jne
dec
inc
arpl
inc
dec
std
sub
repz
cmpl
and
dec
add
fiadds
les
mov
ss
add
or
add
or
jb
cmpsb
lcall
pop
adc
adcb
adc
cmp
or
mov
push
adc
xchg
xchg
call
mov
xchg
in
push
aam
addb
cmp
xor
sub
xor
sbb
stos
rorl
mov
pop
add
mov
xchg
mov
fs
push
mov
mov
arpl
in
dec
ret
lock
xor
outsl
in
test
testb
add
xlat
add
movsb
cltd
test
inc
mov
paddd
sbb
and
add
mov
fdivrl
testb
add
sarl
pop
add
push
add
mov
push
mov
dec
lock
inc
inc
insl
inc
fdivrl
inc
xor
mov
pushf
mov
xchg
inc
jae
mov
mov
test
jecxz
jbe
addb
dec
lock
pop
sbb
dec
and
adcb
sub
test
enter
mov
pusha
or
mov
dec
test
push
insb
inc
xorl
rcrl
leave
xchg
mov
cmc
or
mov
pop
or
or
js
aaa
out
cmp
in
jl
rclb
int3
mov
sub
cmp
sarb
sub
mov
push
push
das
icebp
bound
inc
or
out
mov
add
daa
sbb
pop
in
int
add
imul
lea
cmp
add
fidivs
xchg
in
lods
xchg
push
mov
dec
inc
sarb
inc
aaa
fsubl
bound
out
inc
leave
sbb
push
lds
add
mov
aaa
cmp
add
in
push
popa
add
in
fildll
jp
inc
cmp
adc
add
mov
arpl
popf
mov
mov
imul
fwait
pop
sub
shl
pusha
sbb
or
xor
cmp
xor
pop
cs
jecxz
adcb
int
cmp
out
cli
mov
sbb
aad
mov
insb
ret
or
mov
int3
sub
sbb
es
clc
adc
mov
stc
adc
imul
mov
in
and
lcall
mov
int
jo
pusha
xor
mov
add
sbb
jecxz
pop
fimuls
push
fsts
push
adc
sbb
repz
jge
out
shlb
xor
xor
mov
sbb
sub
mov
inc
inc
dec
icebp
data16
ljmp
pop
add
push
loopne
and
xchg
adc
jb
popa
loop
and
adc
loope
and
sub
rorb
popa
data16
mov
std
fadds
adc
js
into
mov
mov
push
mov
movsl
cwtl
xor
or
inc
add
mov
pop
jp
je
mov
adc
sub
adc
and
cmp
inc
jne
ror
ret
and
idiv
scas
cmp
pusha
jbe
xor
jae
adc
or
inc
xchg
icebp
fnstenv
shlb
and
cmp
movb
outsb
int3
dec
ret
lcall
mov
pop
lock
test
xchg
cmp
fsubrs
jo
or
cmp
clc
shll
stos
rcrb
xchg
jl
or
inc
icebp
scas
mov
test
cli
pop
inc
out
outsb
or
xor
cmp
dec
or
jg
out
dec
arpl
addr16
sub
fsubrl
ss
mov
sub
dec
gs
or
mov
push
mov
js
push
xchg
add
pop
mov
pop
shr
inc
dec
std
xchg
jecxz
jns
xchg
cmp
sbb
mov
push
cmpsl
pushf
add
xor
push
call
xchg
xchg
xchg
fistpll
xchg
js
orl
push
push
mov
inc
mov
xor
mov
inc
ret
out
fwait
jbe
fs
stos
or
cmp
mov
pop
arpl
test
subb
mov
fists
cmp
les
lea
subb
dec
mov
pop
xchg
sbb
add
mov
pusha
dec
sub
mov
or
out
dec
in
xchg
cli
lcall
adc
add
mov
out
add
ljmp
hlt
xchg
lcall
js
mov
std
sbb
cmp
insl
and
mov
lock
and
fiadds
shrl
frstor
out
mov
cmc
pop
mov
cmp
mov
cmp
pop
fcoms
sub
pushf
shrb
sbb
lahf
xchg
sub
dec
dec
adc
rcl
loope
inc
popf
xchg
jae
inc
pop
push
adc
movsb
pcmpeqw
cs
dec
fnstenv
and
add
mov
mov
inc
aas
mov
add
push
pop
push
push
inc
repnz
or
popl
cmp
mov
and
lret
incl
inc
mov
loopne
rorb
ret
xlat
addr16
add
cmp
jb
sub
add
cmpsl
lock
sub
or
jge
outsl
cmp
stos
dec
test
mov
scas
add
fwait
push
test
xor
test
rcrl
sbb
lcall
add
cltd
cs
js
push
mov
and
add
push
mov
inc
fucom
loopne
outsl
jbe
xor
and
int3
shll
sahf
xchg
sbb
and
sbb
mov
in
sbb
xchg
or
sub
or
mov
daa
add
mov
popa
faddl
mov
or
sbb
mov
test
std
pusha
adc
push
and
jl
int
test
mov
icebp
repnz
add
test
pop
adc
fiadds
rcrl
mov
pushf
mov
push
push
cmp
inc
xlat
dec
pushf
pop
pop
insb
nop
lock
stos
jns
ret
cs
jge
mov
ret
adc
mov
and
mov
xchg
jle
test
add
out
push
mov
and
call
and
add
rorl
jecxz
es
call
mov
lahf
fsub
outsb
add
add
push
cs
jbe
movsl
sarl
or
bound
or
cmc
pusha
sbb
jmp
or
test
add
mov
mov
bound
xor
iret
les
nop
fbld
lret
xor
popf
pop
push
xchg
mov
add
lcall
lret
add
dec
mov
imul
adc
sbb
jno
push
fmul
adc
fldl
push
outsl
xor
ljmp
aad
xor
out
jl
fdivrl
pop
mov
mov
repz
movsl
cmc
xlat
js
cwtl
sbb
fildl
jg
cmp
jne
xor
sbb
inc
sub
ds
daa
jmp
add
sbb
hlt
addb
xchg
popa
jb
mov
or
push
sbb
xchg
push
int
sarb
insl
add
negb
ljmp
ret
jp
mov
mov
mov
ret
jmp
out
cmc
add
mov
rolb
jp
jmp
cmpsl
jae
add
dec
sti
aas
adc
dec
ja
adc
outsl
pushf
or
add
or
ret
inc
scas
addr16
cld
aaa
mov
add
xchg
mov
cwtl
rol
dec
fcompl
or
pop
insb
jb
int
cmp
sbb
loope
xchg
loopne
or
testl
pop
imul
mov
pop
sbb
nop
adc
test
outsl
lock
add
cli
enter
lock
in
es
sub
inc
ljmp
push
sbb
lods
pop
in
jge
and
lcall
cld
sub
adc
inc
adc
shl
xchg
lea
mov
or
sbb
es
xchg
cwtl
pop
stc
imul
outsb
and
call
not
cmp
or
loope
cli
inc
scas
lcall
inc
rol
mov
jae
repz
push
sti
dec
sbb
out
cwtl
test
mov
inc
in
push
or
lock
icebp
xor
dec
int3
push
fwait
push
ss
pusha
and
mov
adc
xchg
pop
adc
jo
mov
fisttps
decb
xor
dec
adc
ja
add
js
mov
jmp
addr16
inc
mov
cmp
push
sub
and
pushf
ja
mov
mov
es
sahf
mov
das
sub
jg
pop
insb
fiadds
fwait
and
add
ljmp
xchg
std
dec
dec
mov
das
popa
loop
mov
dec
lods
fdivr
aam
xchg
jecxz
in
ret
mov
jl
gs
out
inc
decl
movsb
ja
cmp
mov
pop
movsb
adc
sub
fs
push
add
negb
arpl
clc
xor
clc
ja
dec
iret
jae
addr16
or
outsl
sub
and
and
into
daa
incl
incb
sarl
pop
dec
mov
and
fisttpll
fistl
std
das
aam
lods
ja
imul
rorl
xchg
lret
mov
test
cmp
cmpsl
add
add
pop
pop
shll
jno,pn
sahf
rclb
add
jg
jg
xor
and
dec
xor
es
filds
and
add
dec
or
or
ret
adc
mov
lods
pusha
push
sbb
cmp
dec
rorb
insb
add
aam
xor
cld
mov
mov
jb
cwtl
enter
sbb
cltd
sbb
adc
mov
sbb
and
jmp
or
mov
outsb
repnz
xor
lcall
mov
int3
int3
add
mov
enter
push
adc
mov
jo
call
mov
fstl
push
xchg
inc
push
ljmp
mov
clc
aaa
xor
addl
cs
pop
sub
sbb
cs
mov
mov
mov
popf
xchg
imul
sub
jecxz
or
mov
mov
fildll
std
repnz
mov
insl
insb
inc
jl
mov
inc
xor
mov
fisubrl
push
repnz
pmaddwd
ja
push
push
sub
test
add
mov
in
pop
fisubs
imul
sub
cli
test
jae
out
fldt
pop
or
adc
and
pop
lock
mov
lods
leave
lock
mov
lcall
aam
xor
clc
decl
mov
sub
add
rolb
nop
ss
or
adc
imul
arpl
dec
cmpb
pushf
mov
scas
fdivs
mov
pop
ss
mov
rcr
sbb
xor
cwtl
xchg
and
adc
inc
inc
mov
push
pop
cmp
popl
jo
jno
sahf
xor
enter
sub
dec
ret
inc
ljmp
push
sub
mov
or
and
inc
sahf
jle
cmc
decl
push
ja
add
sbb
lret
cld
inc
test
test
rcr
push
lds
ds
adc
insb
pop
and
stos
mov
fstpt
xor
movsb
push
dec
fidivs
mov
xchg
enter
insb
rorl
cmp
cmc
add
adc
lea
push
leave
mov
xor
insb
mov
jge
cmp
xor
shlb
test
pop
mov
les
pop
push
mov
andb
add
mov
dec
and
and
add
xor
inc
pop
mov
adc
jnp
in
loope
aaa
sbb
je
shll
pop
daa
mov
neg
bound
leave
inc
push
lcall
sbb
push
jno
das
jne
les
fidivrl
pop
mov
fidivs
cmp
loope
mov
pop
xchg
push
dec
in
repnz
dec
stos
fxch
decb
push
jnp
mov
popa
outsb
arpl
decl
das
ss
sbb
rorl
subl
leave
sets
pop
loopne
xchg
lcall
std
add
ds
ja
and
ret
inc
mov
in
jecxz
push
mov
add
push
pop
fcomps
add
mov
clc
rcl
mov
lock
sti
cmc
adc
add
ss
lret
dec
mov
fwait
add
pop
fbstp
sub
enter
add
aas
movsl
sbb
jl
fiaddl
mov
dec
pop
loopne
inc
xchg
pop
mov
xchg
imul
pop
daa
xchg
or
mov
cmpsl
push
loope
mov
or
cwtl
addb
icebp
divl
fdivp
push
add
mov
dec
mov
mov
mov
jg
ss
sbb
sarb
loopne
or
xlat
pop
xor
test
mov
jae
inc
dec
xchg
js
stos
lods
into
cli
icebp
scas
add
jge
dec
std
push
jle
jg
inc
addr16
mov
dec
mov
inc
pusha
dec
or
push
js
call
xor
mov
pop
push
fs
imul
inc
cmpsl
sub
adc
mov
inc
or
and
sub
jmp
arpl
inc
add
cmc
cmp
test
fmull
filds
adc
sahf
mov
fldcw
popa
lods
out
mov
add
faddp
fwait
cwtl
and
mov
or
mov
mov
jns
sub
mov
mov
test
test
outsb
popa
dec
cmp
addb
or
test
push
call
adc
fs
xor
pop
mov
sub
ret
lods
je
rorb
and
mov
dec
sbb
out
daa
sub
push
pop
jge
pushf
lret
push
loope
adc
sarl
enter
adc
mov
push
mov
adc
fwait
clc
fs
mov
inc
call
jmp
out
and
dec
and
xchg
stc
jb
add
xchg
aam
push
loopne
adc
das
lcall
dec
add
fstpl
mov
arpl
jmp
pop
lods
mov
fsubrl
cwtl
mov
xor
jg
jp
add
inc
inc
inc
fsubs
ds
mov
je
das
jo
jo
push
or
loopne
xchg
dec
dec
fldcw
lock
inc
out
add
adc
loope
stos
pop
xchg
pushf
mov
jne
out
mov
rcll
daa
inc
test
shrb
insl
pushf
sub
mov
and
mov
in
lcall
xor
mov
fldl
xor
add
shlb
ret
xchg
xchg
cs
cs
sub
mov
cmp
test
mov
adc
sbb
pop
xor
pop
jne,pn
aaa
pop
mov
mov
mov
mov
and
stos
xchg
bound
outsb
loop
scas
out
push
mov
aaa
inc
jg
imulb
xchg
stos
pop
faddl
scas
pop
and
sub
in
gs
pop
or
pop
and
pop
mov
adc
pop
fbld
push
adc
jle
adcb
mov
aam
jae
sbb
pop
xchg
out
fcomps
mov
xor
arpl
outsl
sbb
sbb
das
jle
inc
gs
les
iret
daa
and
fistps
mul
ja
scas
sbb
push
lds
inc
sbb
mov
les
test
call
popa
push
sub
sub
repz
add
gs
fsts
xchg
mov
inc
jmp
shll
inc
sub
jo
and
les
and
movsl
or
mov
test
jbe
xor
pop
xchg
cmp
cmp
loop
push
push
or
cmp
pop
pushf
arpl
call
push
mov
cli
insl
cmpsl
sbbb
decb
dec
push
dec
fistps
cltd
xor
adc
xor
imul
icebp
add
sbb
std
mov
pop
loope
pop
dec
add
or
or
les
lahf
adc
mov
jmp
mov
adc
jne
dec
fistpl
lret
mov
mov
mov
push
pop
scas
cmc
insb
roll
sti
pop
mov
aaa
jg
adc
jae
push
mov
add
addb
ret
push
pusha
cmp
push
push
fcmovnb
lret
hlt
inc
jnp
mulb
pusha
add
mov
fs
leave
and
cs
cmpsb
add
mov
xchg
sbb
push
shrb
mov
ds
add
mov
mov
cs
mov
dec
sub
repz
in
lds
inc
out
cltd
insl
inc
inc
sub
out
mov
xorl
add
nop
and
add
jbe
je
call
adc
fwait
jne
and
cmp
xor
lock
insl
cmc
pop
loope
pop
adc
lds
ljmp
jne
jg
ljmp
xchg
pop
dec
push
mov
inc
notl
jecxz
dec
int
push
sbb
adc
inc
lock
jmp
xchg
fcomp
jle
sbb
sbb
dec
push
jae
or
stc
sbb
jp
sub
xor
fs
jne
scas
es
push
fildll
or
push
loop
inc
mov
inc
sbb
pop
inc
push
and
pop
cltd
stos
aaa
xchg
xchg
mov
lret
rolb
sub
xchg
jl
pop
push
inc
cmp
or
or
add
dec
pop
sbb
mov
test
fidivrs
and
loope
xor
push
fcom
inc
xchg
inc
iret
andps
cmp
push
jmp
mov
lret
nop
jp
mov
mov
xor
pusha
cmpsb
outsb
dec
std
imul
rorl
stos
add
xchg
js
movsb
mov
aad
test
sub
fs
into
lds
orb
cs
cli
insl
or
loope
aas
pop
mov
cltd
mov
js
sbb
sub
stc
mov
xor
and
jge
sti
xor
cltd
add
fisubs
sub
jae
out
pop
cmp
dec
xchg
cmp
sub
test
cli
jne
std
scas
ss
mov
pop
cs
shl
xchg
mov
mov
stos
add
jp
es
int
push
sub
insb
adc
sahf
pop
test
lock
dec
mov
sbb
fistpl
dec
and
xlat
cmp
fdiv
cmp
mov
aam
inc
mov
or
subb
mov
mov
cld
push
adc
notl
fbld
adc
dec
adc
js
addr16
sarb
dec
push
sbb
and
into
ret
je
mov
fsub
or
mov
inc
inc
rorb
ja
loop
gs
mov
les
mov
ds
popa
cli
sub
add
outsl
pop
in
add
outsl
outsl
fdivr
mov
stos
es
rolb
out
scas
mov
ds
xchg
xor
loop
subl
cmp
roll
jl
mov
das
pop
pop
dec
movsb
sbb
push
or
push
lret
test
mov
add
leave
icebp
mov
add
or
insb
or
or
jns
jae
cli
fwait
lcall
aad
pushw
out
push
js
ffree
and
push
orl
sbb
adc
pop
mov
push
bound
xor
push
push
fsub
add
xlat
jg
test
mov
cltd
adc
ds
jo
jne
outsl
adc
repz
sub
jb
int
jbe
ret
mov
in
cmp
or
icebp
test
mov
mov
scas
pop
push
cmp
lock
aam
cmc
fnsetpm(287
push
ljmp
clc
in
outsl
mov
in
gs
jp
movsb
xor
sbb
test
jg
xchg
flds
ds
pop
icebp
stos
xchg
outsb
int3
xchg
add
cmpsb
sub
lahf
pushf
fcomps
adc
xchg
dec
adc
dec
imul
push
sub
ret
sbb
pop
add
inc
out
movsb
and
pop
and
and
clc
mov
testb
push
rolb
icebp
pcmpeqb
push
test
sahf
sbb
pop
mov
xchg
push
mov
cmp
test
std
aaa
push
lds
pusha
mov
stos
dec
jle
aas
outsb
push
arpl
nop
sbb
mov
or
repz
jnp
cs
mov
push
fdivl
jns
and
sbb
fucomip
and
mov
jmp
sbbb
jo
test
scas
mov
fisubrs
push
addl
in
add
in
lock
ret
push
sub
cmp
xchg
scas
pop
pop
ror
mov
adc
push
adc
lahf
test
shlb
and
xor
cmp
inc
ds
mov
hlt
loop
add
sub
rcrb
addl
mov
mov
lret
int
xor
fildl
subl
and
je
and
add
sbb
es
leave
outsb
fistpll
popf
mov
in
or
mov
inc
ds
stc
sub
dec
add
imul
out
sahf
mov
add
stos
adcb
test
out
call
mov
adc
push
call
or
das
in
imul
add
outsb
mov
ss
mov
and
sub
ljmp
rcrl
int3
sub
xor
jp
std
lret
push
icebp
inc
sbb
mov
mov
add
sub
cs
push
scas
roll
out
sbb
and
add
push
orb
ret
adc
jne
faddl
pop
stc
xchg
imulb
mov
sub
push
inc
mov
orb
mov
dec
js
lret
insl
sahf
subl
sbb
outsl
jmp
adcb
int3
data16
xor
movsb
test
sub
or
add
loope
push
adc
cmp
add
outsb
adc
push
cmp
and
sub
mov
sbb
mov
loopne
and
imul
or
push
xchg
addl
jge
pop
and
sub
cld
xchg
loope
dec
popa
push
jmp
sbb
and
fiadds
pop
shlb
aam
addr16
mov
inc
test
push
je
add
notl
test
jl
in
cltd
adc
or
mov
inc
push
pop
add
es
cmp
rol
push
jbe
dec
in
insb
adc
sahf
loopne
cmpsl
pusha
inc
adc
inc
push
inc
cmp
lahf
sbb
mov
push
sarb
lret
adc
cltd
jecxz
or
in
jbe
inc
loopne
inc
dec
dec
es
adc
adc
aaa
jmp
fisubs
nop
or
xor
pop
push
inc
sub
imul
mov
fidivrs
out
pop
jge
inc
enter
enter
testb
test
xor
and
mov
ljmp
or
and
fs
push
pop
outsl
sahf
xchg
mov
int
jne
add
sub
ret
mov
icebp
inc
mov
in
mov
movsb
push
xor
sbb
add
or
sub
add
push
ret
rorb
mov
cwtl
add
inc
push
cmp
mov
mov
xor
push
adc
push
xchg
int3
lods
xchg
loope
add
sub
enter
or
add
fnstenv
push
xor
push
les
cmp
sbb
xchg
cltd
and
pop
roll
add
cmp
mov
test
and
mov
dec
cli
scas
cmp
lea
sbb
or
mov
in
add
gs
jp
mul
inc
cmp
or
cmp
in
pop
clc
loope
inc
cmp
mov
mov
sarb
xor
xchg
cs
adc
out
cmp
sub
sbb
rolb
test
push
jge
and
cmc
shl
mov
push
jl
data16
push
scas
out
or
data16
pop
aam
cmpsb
cmpsl
cld
jl
test
es
sbb
add
insb
xchg
es
rorb
add
xchg
mov
fildll
sbbb
hlt
push
pop
lock
add
adc
ret
sub
xor
mov
mov
mov
push
nop
sub
push
xor
subl
loope
or
dec
stos
dec
movsb
adcb
adc
dec
push
mov
xchg
push
mov
test
add
arpl
inc
cmpb
mov
ja
adc
aaa
sbb
sahf
lds
and
push
mov
fiaddl
pop
and
dec
bound
std
mov
push
stc
pop
rorb
or
pop
stos
out
inc
adc
les
cmp
jp
jno
leave
and
aad
inc
fs
lea
ret
sbb
mov
outsl
shlb
xor
out
or
cld
in
cmpsb
and
and
jp
and
sbb
adc
and
or
shrl
xchg
imul
xchg
sti
aaa
add
bound
or
cltd
in
inc
das
aaa
cli
insl
enter
scas
push
sbb
insl
and
addb
xor
add
mov
or
mov
fistps
add
jg
add
mov
add
aaa
ret
ljmp
adc
jne
jns
or
repnz
scas
fbld
orb
cmp
pop
ljmp
stos
mov
xor
dec
aam
cmp
and
jg
inc
pushf
inc
fsts
jg
jns
inc
js
das
out
stos
cpuid
cld
mov
inc
mov
lock
mov
sub
and
fistps
or
xlat
adc
jb
pop
or
jbe
leave
fwait
pop
icebp
mov
das
pop
lret
js
js
and
inc
inc
cmp
jl
pop
andb
push
hlt
test
incl
mov
pop
insb
ret
push
out
call
xchg
mov
push
inc
jns
outsl
hlt
aaa
sbb
rorl
inc
fsubrs
pop
clc
pop
aaa
pop
clc
mov
and
dec
mov
aam
cltd
jbe
sbbb
jmp
push
and
mov
adcl
ja
cmpsl
or
pusha
and
icebp
xchg
ss
add
sti
pushl
dec
pop
push
mov
mov
enter
clc
sub
add
subb
adc
gs
mov
mov
lea
sbb
mov
test
add
pop
mov
push
sub
lods
push
aad
mov
sub
or
mov
and
xchg
push
add
out
mov
sbb
xor
mov
clc
cmp
adcl
sbb
imul
shrl
inc
mov
mov
mov
mov
or
add
stos
xchg
add
test
or
dec
shrl
xor
shll
sbb
sub
inc
mov
add
aad
enter
and
ret
fs
rorb
push
arpl
cmp
clc
push
rorb
inc
jg
xor
mov
call
in
add
icebp
bnd
push
pop
shlb
or
sti
in
ja
mov
fwait
jl
xor
mov
mov
cmp
adc
mov
mov
or
test
ds
call
dec
sarl
dec
add
cld
test
sbb
out
test
lds
dec
sar
mov
pop
push
scas
aad
and
mov
loopne
stc
nop
lcall
sbb
adc
in
lret
adc
in
pop
testl
and
inc
icebp
jg
clc
and
cmpsl
clc
sbbl
lret
insb
popa
cli
ret
sahf
lret
das
bound
xchg
ljmp
add
xchg
dec
roll
cli
into
sar
pop
add
paddd
push
lods
pop
dec
mov
outsl
sbb
cmp
dec
test
sti
cmpb
fistps
sub
xor
sti
stos
jp
in
add
or
add
adc
ret
rol
mov
ss
iret
or
inc
add
ss
dec
adc
dec
icebp
xchg
fcmovb
test
leave
push
pop
jbe
ficomps
mov
lcall
mov
test
iret
and
adc
js
scas
xor
fstpt
xor
or
add
mov
mov
icebp
pop
mov
adc
pop
and
mov
pop
and
push
mov
mov
inc
sub
adc
sbb
mov
xor
loop
mov
adc
out
clc
dec
inc
jno
xchg
movb
cmp
dec
fisubs
fdivr
jnp
adc
cmp
or
lock
loop
mov
aaa
std
test
mov
push
jmp
ficoml
xorb
and
xchg
std
dec
xchg
neg
loope
pop
or
mov
sbb
adc
leave
cs
fcomps
ret
dec
cwtl
cmp
sti
inc
xor
push
mov
or
add
mov
dec
scas
cmp
es
lock
cltd
pop
inc
xor
inc
cwtl
jl
ficoms
out
xor
push
push
punpcklwd
add
and
insb
out
inc
js
std
mov
mov
ret
call
dec
cwtl
int
pop
mov
adc
xor
addl
sub
fsubr
call
and
sbb
dec
nop
inc
addb
mov
xchg
mov
pop
call
shlb
xor
lock
ds
das
aaa
xor
mov
lcall
mov
sarl
loopne
sub
inc
xchg
pop
lock
dec
push
add
inc
xlat
in
rsqrtps
adc
pusha
pop
xchg
add
dec
sbb
xchg
or
inc
push
jle
mov
jb
ficoms
sub
and
in
imul
scas
stos
dec
addb
stos
xor
push
mov
push
xchg
sub
add
mov
inc
adc
jbe
adc
dec
mov
or
lock
addl
jg
add
sti
pop
pop
loope,pt
test
int3
jg
cmc
dec
push
mov
cltd
or
pop
in
sbb
cwtl
adc
sbb
xor
int
push
test
sub
adc
int3
lds
int3
inc
jae
push
pop
add
pusha
push
jge
adc
mov
int3
rol
cwtl
xor
mov
mov
icebp
daa
cmpsb
sub
push
test
mov
mov
xor
sar
lahf
stos
mov
and
adc
pop
cmp
inc
ja
add
lods
jl
jno
xchg
mov
fadds
out
push
in
inc
sbb
inc
test
sub
fisttps
inc
in
dec
ret
inc
cwtl
fmul
cmp
syscall
les
push
decl
pop
xchg
jnp
push
xor
jae
add
dec
and
inc
imul
imul
pushf
xchg
xchg
movsl
ret
dec
neg
inc
push
inc
cmp
pop
loop
rolb
mov
add
sarb
outsb
xor
or
jb
xor
mov
push
xlat
lods
lret
xor
sub
add
mov
adc
or
movsb
sbb
or
push
add
les
lods
fcoml
popfw
xchg
xlat
or
cmpsb
stos
inc
mov
out
shlb
add
fmuls
add
or
mov
loopne
cltd
pop
xorb
lods
or
xchg
or
fiadds
pop
adc
push
loopnew
add
push
out
add
movsb
in
xor
pop
call
adc
repnz
mov
add
loope
icebp
sbbb
dec
jmp
les
dec
roll
sbb
cwtl
jno
les
ret
push
add
adc
inc
mov
rcrl
addr16
add
push
call
adc
sbb
lock
mull
jecxz
insb
xor
jl
addr16
xor
push
add
data16
pop
sub
rorl
les
xchg
mov
clc
ljmp
movl
hlt
mov
add
ljmpw
adc
and
and
xchg
mov
inc
outsl
pop
nop
ret
sbb
pop
push
cmp
data16
sahf
out
cltd
jae
pop
mov
hlt
and
or
popf
inc
and
push
aam
or
add
fwait
xchg
loope
ss
inc
loopne
dec
shll
pop
mov
cld
ret
and
sbb
subb
inc
cmp
insb
int3
push
xor
sbb
loopne
ret
sbb
add
enter
push
mov
dec
loopne
insb
inc
rcll
mov
push
clc
roll
xor
lock
or
dec
mov
fwait
int3
and
mov
and
cmp
fcom
dec
jo
sbb
pop
repz
sub
adc
adc
push
rolb
lock
push
inc
loop
xor
fdivrl
js
adc
cmpsl
adc
clc
xlat
inc
mov
lock
es
xor
inc
sbb
push
btr
jecxz
shlb
iret
das
add
insl
or
in
pop
dec
adc
in
scas
mov
lahf
add
outsl
jge
mov
jne
loopne
or
add
jne
adc
and
ret
and
div
ficoml
xchg
cmp
in
outsl
insb
lock
add
add
xor
rcll
dec
xchg
cmp
aas
mov
mov
loop
inc
fabs
pop
es
lods
jbe
fs
xchg
outsb
cld
cmc
add
inc
pop
jge
xchg
push
aad
dec
lds
xchg
jmp
int
add
aad
sub
push
sbb
andl
add
outsl
shrb
mov
dec
add
push
roll
adc
xchg
push
or
lcall
shl
add
sbb
ljmp
and
mov
pop
call
xchg
jmp
or
stos
fnstcw
add
mov
stos
mov
pop
rcl
inc
jle
or
add
cltd
roll
mov
sahf
add
jno
clc
sbb
push
das
add
popf
push
pop
dec
xchg
stc
push
jnp
insb
sub
jae
iret
sbbb
cmp
xlat
andb
mov
mov
fwait
mov
sub
incl
outsb
cmp
lahf
daa
std
dec
sbb
xorb
jae
stc
dec
sub
pop
std
outsb
ret
hlt
aad
add
shlb
loopne
mov
cwtl
test
insb
pop
add
out
pop
sub
sbb
hlt
xchg
dec
mov
icebp
repnz
mov
incl
adc
add
stos
stos
or
pop
mov
ficomps
xchg
dec
mov
pusha
push
mov
or
fists
aam
and
xor
dec
add
mov
clc
jbe
xor
add
popa
sbb
push
repz
ljmp
movb
dec
filds
movsl
add
mov
and
outsl
mov
push
pop
push
inc
sbb
into
mov
stos
pop
or
iret
add
inc
or
aas
inc
fs
testl
mov
sub
inc
push
push
cmp
cmp
ljmp
lds
lock
pop
push
pop
add
xchg
mov
ss
mov
and
mov
lahf
mov
jle
or
inc
inc
roll
cmp
sub
push
lahf
mov
ljmp
lds
pop
rclb
pop
sub
push
lea
out
outsl
jno
push
fwait
and
xchg
js
mov
decl
sbb
pop
push
mov
in
mov
cmp
pop
std
adc
aaa
cld
push
or
adc
ret
sbb
and
jge
push
cs
jmp
cmp
add
aaa
adc
fldl
rorl
cmp
scas
clc
cmp
fildll
std
sub
push
data16
xor
add
icebp
pop
daa
pop
sbb
add
mov
adc
inc
inc
je
mov
pusha
mov
mov
sti
les
pop
xor
loop
adc
jecxz
sar
sbb
mov
pop
orl
push
lahf
mov
and
adc
decl
loopne
jne
imul
sbb
sbb
adc
mov
mov
divb
inc
addb
clc
inc
cmp
test
jbe
pushf
and
dec
imul
push
in
jns
loope
jnp
rorb
cmp
test
cmp
xchg
stos
xor
popa
sbb
add
les
je
push
xor
iret
xchg
pop
mov
inc
push
mov
flds
filds
outsb
mov
stc
jnp
clc
xchg
jmp
sub
subb
adc
xchg
cmpsl
pop
cld
out
js
arpl
dec
out
into
xchg
xchg
lcall
add
loop
int3
addr16
xor
sub
nop
in
frstpm(287
test
scas
or
inc
push
jl
pop
inc
mov
sub
bound
push
fisubrs
decl
ss
mov
outsl
iret
xor
jmp
mov
sbb
cwtl
incl
xchg
testb
dec
adc
inc
sbb
sub
and
sub
mov
loopne
cmc
mov
mov
pop
imul
je
jmp
pusha
test
leave
mov
and
cmpsb
push
mov
icebp
fneni(8087
pop
mov
je
rorl
inc
mov
outsl
mov
mov
fmuls
dec
or
lods
and
jno
sub
out
movsb
mov
lods
insl
xor
stos
leave
gs
and
icebp
imul
icebp
and
cs
inc
adc
popa
mov
or
push
fisubs
cld
adc
inc
inc
rclb
movsb
jl
sti
or
pushl
pop
ror
pop
push
movsb
out
dec
xchg
mov
in
add
and
mov
xchg
cld
xlat
push
jle
lcall
jl
sti
mov
push
add
es
pop
cmpsb
inc
outsb
pop
or
mov
adc
fiaddl
jno
cltd
pop
or
adc
pop
push
adc
push
imul
push
roll
add
stos
cmp
mov
out
popf
test
aad
pop
test
inc
dec
loopne
in
fwait
outsb
stos
pop
sarl
cs
popl
fbstp
jo
jmp
sbb
das
cli
fisttpl
js
add
clc
sbb
add
popa
imul
push
clc
push
push
outsl
cli
sbb
push
adc
and
fstps
or
sub
fldt
xor
ret
xor
pop
or
roll
xor
int
sbb
push
mov
sbb
orb
lret
push
roll
add
fld
mov
data16
cmc
repnz
clts
push
gs
mov
repnz
adc
inc
adc
cltd
push
rclb
push
mov
hlt
std
ret
int3
and
pusha
adc
gs
mov
xor
adc
dec
jmp
fwait
int3
and
adc
or
and
cmpsb
lret
fcom
pop
icebp
mov
add
pop
or
or
sbb
inc
int
jae
push
jge
inc
repnz
add
loop
orb
shll
pop
aad
lret
clc
fidivrl
test
sti
jmp
fstpt
cltd
nop
sbb
addb
clc
insb
daa
aam
sub
mov
clc
int3
cli
addr16
sub
dec
enter
or
iret
insl
inc
jl
add
faddp
cmp
mov
adc
add
pop
pop
sbb
fnstcw
fs
fadds
pop
or
sbb
rclb
mov
hlt
or
xchg
or
adc
and
dec
lods
aam
xor
pop
test
xchg
js
push
out
pop
push
jecxz
or
add
inc
loopne
pop
xchg
jl
sbb
imul
jo
setns
mov
hlt
or
adc
jl
loopne
hlt
test
repnz
dec
inc
or
dec
mov
pusha
adc
jnp
push
jae
cmpsb
lret
sub
dec
cmp
add
add
outsb
iret
xchg
loopne
es
mov
dec
test
dec
jge
roll
popa
jb
addl
pushf
add
movsl
test
or
pusha
popf
dec
and
stos
lock
out
fnstenv
lods
out
dec
cwtl
add
jo
test
addr16
scas
add
dec
sub
pop
adcl
adc
sbb
or
and
or
ja
fstl
jne
jbe
ret
or
adc
xor
cli
jmp
add
add
lods
cmp
ja
inc
bound
outsb
pushf
and
add
ret
and
inc
sbb
loope
loopne
jne
inc
and
enter
xor
add
mov
adc
andb
out
fwait
adc
adc
pop
xchg
lcall
addr16
call
stos
sbb
call
cmpsl
jecxz
stos
lcall
and
mov
test
pushf
mov
or
cmp
cmpl
mov
fdivrp
sbb
jecxz
jb
les
es
adc
rcrb
lds
icebp
aas
mov
mov
adc
nop
mov
sbb
dec
pop
cs
xchg
inc
rcr
mov
jmp
add
lock
mov
xor
pop
mov
or
xorb
gs
xor
and
or
notb
mov
or
jp
mov
add
scas
sub
jp
cltd
push
inc
cltd
je
decl
or
lcall
sarb
push
or
and
imul
ret
cli
pop
test
ljmp
in
mov
int3
dec
scas
scas
mov
mov
pop
fwait
mov
push
movsb
imul
jo
ficoms
pop
jge
mov
negb
pop
and
and
push
aad
loopne
dec
inc
adc
inc
pop
dec
push
movsl
loop
cltd
test
add
push
dec
jbe
aas
repz
inc
or
aam
fdivs
les
sub
decl
inc
push
stc
inc
sub
popa
aam
aaa
hlt
call
or
add
add
rorl
pop
or
sub
lcall
fisubs
cmp
sbb
in
das
filds
adc
push
and
aas
loop
loop
sub
pop
loop
or
cwtl
sub
dec
ss
aam
push
and
fwait
les
mov
insb
test
lcall
cld
scas
adc
xchg
cmpsb
sub
jecxz
mov
dec
pusha
imul
in
inc
inc
push
rcrb
outsb
je
push
rsm
inc
mov
add
sar
clc
data16
xor
cltd
mov
daa
loope
jecxz
mov
fisttps
js
inc
fsubl
inc
adc
je
incl
lahf
pop
push
adc
sub
addr16
cwtl
jle
cmpsb
rolb
sub
aam
ror
lock
aam
ljmp
push
push
add
sub
test
add
sbb
cld
lret
and
loopne
adc
adc
mov
sub
xchg
sahf
mov
push
sbb
xorb
in
sbb
jmp
xor
or
adc
les
dec
cld
pop
stos
adc
ret
sbbb
mov
sub
xor
cmp
mov
sahf
or
adc
mov
add
or
aaa
pop
cmc
or
dec
or
fiadds
add
and
xor
add
mov
adc
je
dec
jge
mov
jl
add
repz
test
lods
adc
int3
fsubl
push
jg
pop
adc
sub
fistl
mov
adc
cmpsb
add
xlat
push
mov
push
out
add
mov
cmpsb
icebp
and
arpl
pop
and
jl
stos
data16
lds
adc
mov
fldpi
into
and
push
jne
xorb
mov
ljmp
inc
mov
lds
inc
push
cmp
leave
cltd
pop
les
mov
mov
push
pop
fdivl
bound
adc
cmp
inc
rcr
jmp
aad
stos
out
mov
mov
cmp
insb
sbb
mov
fbld
fsubrs
xchg
lock
pop
imull
lret
and
mov
mov
jl
mov
pop
je
dec
aaa
stos
cmp
call
cmp
cmp
jne
bound
subb
or
cmp
xor
or
stc
bound
cmc
lret
roll
pop
mov
mov
rol
negl
and
xchg
test
mov
dec
lahf
mov
je
les
popa
mov
idivl
je
das
sbb
mov
mov
scas
lcall
shrb
add
imull
test
test
jb
and
mov
and
add
insb
inc
divb
sub
mov
mov
xchg
xchg
pop
sbb
popa
push
xchg
pop
sbb
dec
lods
push
ret
jae
test
insb
je
mov
sbb
pop
inc
xchg
mov
push
and
add
ljmp
dec
sub
adc
pop
mov
test
ja
jl
jne
loop
mov
mov
cmp
add
mov
into
mov
pop
cmp
add
mov
inc
sahf
rorl
addb
rolb
mov
and
push
shlb
xor
or
in
dec
xor
or
and
popa
push
mov
or
daa
adc
out
add
adc
addr16
add
fistpl
inc
add
pslld
idivl
push
insl
fwait
icebp
add
int3
dec
and
or
ret
pop
add
es
push
leave
jnp
jne
push
rol
dec
fldl
xchg
jbe
jno
clc
jns
xchg
cmp
fcoml
adc
xchg
cli
mov
mov
cmp
int3
lock
add
les
inc
push
clc
lahf
arpl
sbb
cmp
je
adc
lret
adc
fiadds
push
sub
sarl
add
xchg
orl
scas
andl
pop
shr
xor
sub
test
aam
hlt
add
or
insl
rcr
test
out
jge
mov
sub
sbb
pushf
add
adc
in
and
adc
pop
add
loope
xor
mov
add
inc
mov
push
loope
sbb
lret
shlb
int3
push
cwtl
adc
push
call
repnz
roll
cmp
push
dec
out
inc
sub
lahf
scas
in
xor
insl
icebp
mov
add
or
popw
jg
inc
xlat
insb
fistl
repnz
pushf
add
inc
sti
inc
jno
add
inc
push
test
scas
jae
inc
push
insb
jl
rcll
lret
loopne
pop
mov
repz
ljmp
aaa
inc
add
jb
jp
pusha
jmp
addb
xchg
or
fcompl
xor
dec
dec
sub
test
mov
cmpb
dec
loopne
mov
and
add
jmp
xor
mov
xor
pop
cmpsl
jae
adc
pop
mov
push
loop
jnp
jp
cmp
or
aad
idivl
cmp
sub
rorb
flds
push
std
insb
shrb
xchg
test
jne
dec
sbb
xor
test
jo
insl
sbb
movb
fnstcw
xlat
cmp
sbb
inc
pushfw
push
fisttpl
jl
dec
and
inc
adc
mov
addb
mov
or
popa
loopne
sbb
xchg
push
inc
add
js
push
sbb
or
leave
jp
add
xor
int
sar
ret
sti
jo
xchg
outsl
mov
dec
in
push
test
cwtl
jns
push
add
mov
sbb
inc
je
and
and
faddl
shll
xchg
or
mov
std
sbb
adc
sbb
and
mov
loop
in
fwait
adc
jle
add
or
ror
pop
mov
sub
sbb
sbb
jg
or
out
pop
cmp
daa
sbb
add
fsubs
push
cmp
loopne
leave
mov
std
or
mov
cmp
add
inc
mov
sub
and
jne
fistpll
fcomps
out
adc
adc
sub
pop
fstp
dec
fisubrl
iret
jae
mov
jecxz
ret
jnp,pn
inc
and
jmp
sbb
repz
and
je
insl
mov
adc
ret
dec
inc
cwtl
rorl
popa
push
mov
push
add
int3
ret
push
xor
lahf
or
rep
or
add
adc
iret
in
pop
cmc
and
ret
mov
stos
push
adc
push
pop
and
pop
jo
inc
sbbl
nop
pop
inc
outsl
or
xchg
arpl
push
aas
lret
rcll
mov
pop
lods
add
sbb
jmp
adc
push
std
les
loope
sbb
test
add
add
loop
sbb
dec
loope
lds
call
in
mov
loopne
push
dec
xor
add
roll
shr
push
outsl
adc
adc
adc
dec
shrb
add
dec
or
int3
jmp
js
and
mov
sbb
add
and
adc
cmp
or
iret
data16
mov
and
sub
dec
aaa
data16
dec
cmpsb
and
nop
add
and
mov
nop
push
imul
cmp
mov
or
mov
sub
add
roll
jae
aam
add
mov
pop
pop
jne
jae
daa
adc
je
or
mov
js
psubusw
cmpsb
add
insb
das
or
dec
add
or
mov
inc
adc
xchg
xor
xlat
loope
dec
adc
dec
out
call
es
jb,pt
sub
ret
cmpl
mov
lea
push
push
push
cmpb
add
xor
mov
cmp
push
dec
sbb
in
ljmp
cltd
add
ret
leave
pusha
xor
mov
pop
out
shlb
test
insb
lcall
andl
pop
loopne
into
jae
movsb
push
sub
out
dec
xchg
jp
sub
add
mov
xor
xchg
xorl
jg
inc
sbb
jb
imul
jbe
addr16
jge
sbb
insl
xor
roll
mov
fsubr
push
stc
pop
mov
mov
je
rolb
inc
aad
push
add
call
lahf
aad
stos
jg
mov
xchg
pop
sub
cmp
pop
loope
lods
imulb
or
mov
xor
cmp
add
add
and
dec
cmpsb
jns
xchg
out
and
mov
aas
loope
adc
adc
add
pop
addl
incb
jbe
aaa
mov
mov
outsb
dec
push
aas
sub
push
out
xor
and
dec
pop
pop
pop
jle
pop
adc
sub
mov
out
aad
push
movsb
sbb
xlat
pushf
fsts
adcl
push
and
pop
popf
int3
mov
or
loopne
jl
insl
add
shrb
int3
inc
cmp
dec
add
sarb
inc
and
sarb
dec
push
adc
and
js
and
hlt
lret
add
and
ljmp
xor
cmp
in
fstps
add
cmp
add
and
dec
test
jl
iret
add
jbe
dec
cmpsb
dec
xchg
fdiv
gs
dec
push
sub
jp
stos
mov
aas
sbb
lea
jnp
cmpsb
pop
add
data16
and
cmp
sbb
lahf
adc
mov
jno
inc
ficoml
lcall
mov
int
push
mov
outsb
or
in
pushf
cwtl
bound
imul
inc
or
push
pushf
jnp
mov
je
cmp
rorl
mov
shll
dec
popa
mov
mov
add
xor
inc
pop
cld
shll
cmc
or
jns
cmp
inc
pop
push
add
inc
xchg
sbb
cmpl
cmp
outsb
ret
or
stc
insl
push
sbb
lock
push
xor
mov
adc
rolb
rcr
fdivrs
dec
aaa
sbb
jl
iret
jne
and
and
sahf
sub
inc
enter
push
loop
jno
es
insb
shlb
xchg
icebp
adc
dec
mov
jbe
out
add
adc
je
je
add
leave
add
adcb
or
es
pusha
hlt
sbb
lds
push
mov
mov
mov
daa
arpl
aas
push
not
mov
sbb
clc
add
jb
out
je
movsb
mov
hlt
mov
cmp
adcl
add
adc
pop
in
jno
cmpsl
icebp
fsubrp
bound
lcall
and
adc
push
add
test
xchg
int
inc
pop
adc
test
int3
cmp
std
adc
or
iret
pop
ret
das
aam
faddl
mov
rclb
loope
loop
les
and
mov
xor
out
dec
mov
fiaddl
lock
pop
ja
sub
stc
insl
into
inc
out
pop
int3
mov
icebp
add
mov
xlat
xchg
mov
push
mov
lods
sbb
lret
add
lret
daa
or
sarl
pop
push
movsb
rcrb
xor
cmp
jge
addb
xor
mov
push
mov
into
ret
or
lds
sub
jo
outsl
cmp
xchg
das
icebp
sub
push
mov
mov
outsl
xor
or
mov
outsb
and
in
fyl2x
rorb
adc
cld
jmp
je
mov
cmp
ja
inc
mov
jmp
jmp
or
sub
fisubrs
xchg
bound
ret
movsb
dec
sbb
loopne
push
and
xchg
mov
xchg
sbb
push
mov
int3
xchg
popa
xchg
cmp
inc
mov
es
push
rorl
adc
adc
add
push
dec
orb
lret
dec
cwtl
or
push
mov
jecxz
add
or
and
into
push
imul
test
add
movb
and
inc
inc
xchg
add
xchg
scas
pop
xchg
mov
or
mov
pushf
cmp
divb
cmc
movsb
sbb
mov
ret
adc
pop
sbb
leave
xchg
inc
adc
and
push
cmp
cld
xlat
test
rcrb
dec
push
add
add
shl
cltd
sbb
inc
mov
scas
dec
inc
int3
pop
in
cwtl
std
jb
cs
test
or
mov
mov
sbb
sbb
cmp
add
xchg
mov
stos
jne
push
push
jge
aam
xchg
add
adcl
testb
cmp
adc
dec
sub
mov
or
dec
fnsave
adc
mov
push
mov
sub
popa
mov
adc
sbb
rorl
inc
dec
rorb
jl
rorl
call
adc
aaa
inc
mov
shlb
test
adc
hlt
add
jl
addb
inc
mov
hlt
repnz
int3
add
sbb
imul
mov
test
test
imulb
shll
mov
dec
data16
xor
fbld
mov
xor
mov
mov
jg
icebp
cmp
jbe
cwtl
pushf
inc
enter
bound
shlb
icebp
lods
adc
rclb
jp
test
pop
mov
pop
fsubr
and
loop,pt
sbb
mov
stos
dec
cmp
ret
xlat
push
or
sbb
mov
push
jmp
or
into
dec
xchg
cmp
lock
nop
sub
clc
mov
sub
or
cmp
mov
test
std
shl
or
xchg
les
ret
sbb
push
in
pop
jl
fdivrs
xchg
pusha
andb
dec
in
xchg
add
cmpb
pop
and
jne
mov
adcb
dec
dec
test
xchg
jae
fs
adc
inc
pusha
into
or
int3
jle
push
fadds
in
dec
test
call
aas
rorb
and
stos
dec
pop
cwtl
imul
push
clc
push
xor
pop
pop
push
rcrl
adc
rclb
mov
icebp
sub
mov
inc
dec
negb
rorb
jae
ds
xchg
jb
fst
dec
xchg
int3
lcall
jbe
jp
out
pop
pop
or
lds
fwait
jne
nop
xor
jg
test
ja
adc
inc
cltd
das
test
out
adc
push
sbb
or
or
js
inc
stc
cmp
adc
add
in
inc
out
mov
push
pop
fidivs
loopne
jmp
and
imul
dec
adc
lods
rclb
stos
es
mov
int
inc
int3
out
inc
stos
add
aad
cltd
or
fnsave
dec
xor
push
call
and
les
in
cmc
pusha
push
add
popf
mov
add
pop
jmp
aaa
out
add
int
rorl
or
or
jne
into
mov
bound
roll
dec
sub
mov
pop
cmp
pusha
loope
pop
pop
mov
mov
ret
dec
lea
or
shl
cmp
push
xchg
adc
leave
mov
xor
js
lret
data16
cmp
mov
pop
sub
bound
hlt
rol
stc
sti
sbb
mov
sub
inc
xor
mov
rcl
adc
xchg
add
adc
adc
adc
dec
adc
add
ljmp
cltd
push
addb
cltd
pop
scas
add
cmp
adc
xchg
rcl
fimull
sbb
sbb
out
inc
aad
pop
xor
push
popa
roll
adc
add
cltd
rolb
scas
adc
fistpl
cli
pop
inc
inc
and
dec
aad
loopne
push
mov
and
add
andl
or
popf
adc
mov
push
out
push
inc
call
jae
cmp
lahf
pop
pop
notb
shr
pop
jmp
nop
lret
icebp
mov
mov
or
fsubrs
add
jb
jns
and
cs
jae
push
push
sub
adc
push
out
mov
ret
xorl
loopne
fisubrl
pop
fdivl
inc
fidivs
push
sbb
jp
adc
sub
lds
cmpl
or
dec
sbbl
aam
cmp
mov
sub
das
imul
fnstenv
or
cli
mov
adcl
or
xor
js
adc
inc
push
mov
xor
mov
in
jg
xchg
dec
shlb
divb
call
push
inc
pusha
xor
xchg
pusha
push
stos
outsl
jecxz
cwtl
push
inc
dec
adc
hlt
push
xchg
cli
testb
mov
sbb
cwtl
test
cmp
sub
mov
or
mov
fisttps
mov
es
call
ret
inc
jnp
cld
call
or
cmp
cmp
dec
mov
xchg
jecxz
loope
jecxz
lea
xor
fisttps
js
in
andl
push
shrb
pop
ret
lock
pop
icebp
outsl
pusha
cld
push
hlt
aaa
adc
jne
dec
pop
push
mov
in
inc
add
mov
adc
add
sbb
push
movsb
pop
ds
sub
aaa
mov
add
xor
fdiv
dec
ds
add
subb
jecxz
pop
adc
pop
xor
sbb
push
jg
stos
jne
add
add
or
pop
addb
insl
or
icebp
sbb
addr16
bound
push
xor
add
dec
jl
jae
add
lahf
cmp
add
stos
xlat
add
xchg
leave
das
add
dec
mov
loop
loop
mov
sbb
cmp
dec
clc
or
pop
stos
fucomp
leave
jns
mov
add
cmp
or
mov
jg
add
in
pop
adc
jb
idivl
add
jmp
aam
push
xlat
inc
int3
lret
adc
std
or
dec
pop
cmp
arpl
xchg
fcompl
and
testl
jg
ljmp
and
jno
es
xchg
stos
add
or
add
cmpsb
test
adc
sti
call
pop
inc
mov
ret
inc
push
rorl
jbe
outsb
or
or
xchg
fs
pushw
add
mov
xor
add
or
adc
cmp
fisttpl
add
sbb
in
xor
add
sbb
adc
cmp
add
mov
mov
and
cld
cmpsb
add
xchg
icebp
adc
push
pop
inc
test
fidivrl
inc
add
enter
pushl
cmp
xchg
cltd
or
fs
adc
int3
adc
out
adc
push
mov
aam
enter
ret
mov
in
jb
sbb
jbe
jo
ror
mov
aad
mov
pop
add
stos
orb
sub
pop
lret
in
out
pop
adc
and
xor
out
cmp
adc
mov
mov
sbb
sub
sub
add
das
insl
push
cli
ss
filds
inc
adc
push
rorl
data16
adc
add
addr16
movsl
js
push
aad
inc
out
jg
fiadds
pop
sti
outsb
repnz
add
xor
mov
jns
jbe
pop
mov
push
xchg
outsl
cmp
pop
mov
in
cld
lahf
loope
adc
or
loope
adc
push
mov
dec
jnp
cmp
bound
add
xlat
add
jnp
push
cmpsb
fdivs
inc
xchg
cmp
add
xor
js
add
pop
cmpl
popa
stc
mov
mov
xchg
hlt
mov
add
aaa
dec
push
push
fstpt
add
push
push
push
fdivr
sbb
and
xchg
and
sbb
push
lret
mov
jne
ja
std
cmp
jne
cmp
lret
jo
jp
mov
lds
mov
bound
mov
lcall
xchg
fstpl
jg
and
pop
cmp
pop
ret
lahf
pop
add
dec
xor
sti
cld
mov
mov
fs
jno
adc
jge
push
cs
orb
call
jne
stc
jecxz
iret
adc
out
inc
xchg
sbb
push
aad
nop
xchg
push
inc
subl
mov
mov
out
xor
fildl
jb
lahf
lods
insl
mov
push
rorb
jg
out
loope
mov
ja
and
sar
andb
inc
addb
pop
and
push
addr16
js
cli
jecxz
setno
cmc
push
sbb
scas
jo
sti
and
mov
xor
or
mov
dec
test
out
and
cmc
lea
into
icebp
insb
pop
call
loop
lret
imul
jmp
push
fnstsw
out
or
movsl
mov
mov
pop
or
cmp
or
popf
hlt
sbb
add
out
jg
cwtl
popa
adc
push
or
outsb
cs
ss
mov
ret
push
popf
iret
inc
xchg
loop
cltd
fdivrp
pop
add
test
bound
adc
mov
and
sbb
mov
ret
addr16
inc
popf
mov
mov
stos
jb
mov
adc
cmp
testb
inc
daa
jp
add
scas
add
add
lods
jl
xchg
adc
adc
xchg
xor
inc
mov
cmp
mov
pop
push
arpl
shrb
jns
inc
cmp
lods
icebp
cwtl
add
inc
xchg
out
aam
gs
mov
notb
pop
iret
ja
mov
cmpsb
pop
xchg
test
or
icebp
jg
or
arpl
in
int3
nopl
fdivrl
stos
add
incl
inc
adc
movsl
aaa
dec
movb
iret
sbb
ret
insl
mov
or
push
pop
mov
into
sbb
movsb
or
or
jb
sub
addr16
dec
bnd
pop
jle
idivl
xor
push
popf
or
ficomps
dec
adc
outsl
xchg
adc
je
movsb
pushf
dec
pop
push
push
mov
add
inc
pop
or
cmpsl
mov
test
mov
jo
sbbb
jl
fsubrl
pop
enter
arpl
xchg
imul
jno
cs
push
dec
dec
jecxz
mov
add
fdivrl
mov
sub
add
mov
push
push
mov
std
push
je
jb
cmp
ffree
adcb
insb
int3
jno
jne
dec
jb
push
ret
lods
jecxz
push
fadds
popf
out
ss
inc
mov
adc
lods
popl
clc
mov
insb
adc
loop
pop
mov
lods
cmpsl
maskmovq
negl
js
cmp
shlb
adc
dec
and
and
inc
sbb
sbb
ficomps
in
es
stos
popa
movsb
or
out
bound
insl
rorb
and
add
or
hlt
push
add
or
push
icebp
outsl
push
sbb
sub
sub
cs
push
xor
xor
fcmovnbe
mov
and
dec
sub
mov
dec
out
in
mov
and
mov
fwait
lods
lods
pop
dec
lods
andl
sbb
lock
lahf
stc
aad
cmpsb
in
test
loop
mov
int
rol
test
xor
insl
inc
pop
fidivl
les
loopne
ja
fistpll
adc
pop
jg
jbe
jae
aam
mov
and
jecxz
pusha
movsl
sbb
test
pop
mov
and
xchg
jle
inc
jmp
sti
stc
jle
xchg
clc
lods
adc
xor
push
add
repnz
hlt
sahf
xor
inc
jns
dec
add
adc
lret
in
inc
and
pop
or
clc
mov
pop
lret
jo
jl
or
add
data16
xor
loopne
js
cli
loop
in
ficompl
aam
insl
mov
mov
out
adc
push
jne
xor
inc
jmp
add
mov
les
sbb
jb
or
sub
ret
enter
xchg
jp
mov
ljmp
lret
pop
pusha
jmp
addl
inc
aam
cmpsb
aaa
int3
cmpsl
out
xchg
in
jp
pop
jge
mov
scas
leave
and
daa
addr16
inc
fldt
pop
xchg
jb
adc
cmp
dec
sbb
cltd
es
push
push
dec
out
enter
mov
pop
std
push
add
push
and
or
cmp
inc
stos
int
or
in
jae
aad
mov
sbb
aaa
arpl
inc
and
adc
ljmp
pmaxub
sub
fcomp
mov
push
leave
xorl
mov
shlb
or
sbb
dec
int3
cmp
fcomp
je
jbe
test
or
insl
sub
ret
ds
repz
jp
mov
mov
sbb
sub
jle
js
bound
shl
int
or
lcall
pop
cmp
fldt
push
push
gs
out
fistps
into
sbbl
fnstcw
mov
cmp
cltd
data16
sbb
in
inc
jmp
xor
je
mov
pop
in
mov
and
jl
jo
xchg
lods
adc
or
lods
and
push
aaa
dec
mov
sahf
xchg
pop
push
xchg
fnsave
stc
leave
jb
test
xchg
jmp
fisubrl
sub
sbb
outsl
pop
adc
cmpsb
int3
xor
cli
pop
dec
imul
pop
jne
push
pop
adc
cmp
push
adc
push
jno
adc
ja
mov
sub
jge
xlat
ret
shl
in
jmp
fisubrl
cld
lock
sbb
inc
test
push
jle
imul
cltd
mov
push
xchg
adc
inc
mov
imul
add
xchg
int3
insb
ficoms
adcl
dec
pushl
addr16
mov
or
push
das
mov
sarl
popf
testl
gs
and
movl
push
adc
mov
pop
jae
mov
or
movsb
loopne
mov
mov
dec
int3
scas
je
mov
arpl
or
in
sar
sbbb
insl
add
std
xchg
pop
jns
test
mov
lods
pop
mov
jge
jbe
mov
lret
das
push
or
call
bound
and
int3
cmp
jnp
pop
sub
icebp
adc
jmp
xor
add
mov
xchg
sub
mov
inc
sqrtps
cli
fistl
loopne
and
ja
enter
inc
filds
cld
fildll
and
inc
insb
mov
mov
mov
sbb
aaa
push
dec
mov
cmp
mov
orb
ja
add
test
xor
loopne
loop
lea
inc
mov
inc
adc
xchg
jne
jge
add
arpl
jb
jnp
ret
adc
sbb
sbb
inc
popf
test
cmpsb
cmp
mov
cmpb
pop
cmp
mov
cld
pusha
push
inc
stc
adcl
imul
add
imul
pop
mov
add
push
add
movb
out
ds
pop
push
jl
add
push
outsl
mov
call
repnz
aad
jmp
insl
dec
add
insl
cmpsb
test
div
add
call
push
mov
mov
mov
in
pop
inc
push
call
aam
dec
pusha
push
push
shll
out
inc
lahf
jbe
repnz
xor
pop
in
sahf
jbe
mov
scas
mov
and
dec
repnz
test
enter
mov
out
or
cli
inc
push
mov
mov
ljmp
mov
mov
xor
sub
mov
cmpb
add
andl
jmp
jmp
lds
addr16
scas
sar
cmc
lods
push
push
in
in
mov
rcrl
arpl
push
or
outsl
add
aad
mov
mov
in
or
call
nop
popa
mov
jno
jp
mov
insl
ja
out
divl
or
inc
mov
cmpsl
iret
outsl
sbb
mov
inc
shrb
adc
hlt
sub
adc
fstpt
cwtl
and
lcall
mov
push
or
sub
and
mov
push
pop
inc
or
jmp
xor
inc
cs
xchg
add
or
inc
stos
ss
cmp
decb
in
sbb
imul
push
inc
sbb
sub
sbb
fmulp
push
xor
cltd
sti
mov
cwtl
mov
in
pop
mov
jecxz
movsb
bound
shll
loopne,pn
sti
sub
call
sub
xchg
inc
inc
cmp
into
pusha
sub
mov
pop
fmuls
adc
adc
adc
lahf
incl
outsb
and
adc
or
mov
test
mov
pop
dec
xor
adc
lahf
inc
jnp
xchg
test
push
icebp
inc
or
inc
jl
fsubrs
or
or
sbbb
cmp
out
mov
ja
cmp
inc
mov
inc
outsl
push
in
pop
pop
push
cmc
and
mov
outsb
arpl
jl
add
mov
or
inc
xor
stos
cmpsb
add
push
aam
aaa
shr
mov
jo
jmp
orb
push
and
decb
xor
pop
add
or
cmc
add
lret
xchg
shufps
and
push
stos
fbstp
aad
jp
mov
out
adc
adc
out
sbb
pop
cmpsl
ficoml
sub
inc
jnp
movsb
push
add
lock
or
daa
inc
pop
mov
fucom
mov
add
xor
mov
inc
aas
push
and
sbb
mov
push
rcll
cmpsl
cmpb
fsubrs
test
sub
push
cmp
fldenv
jne
push
int3
gs
adc
or
inc
jae
mov
mov
push
adc
popa
push
int
xchg
aam
jl
js
mov
shrl
dec
dec
cmpsl
add
mov
and
jmp
inc
shll
ret
idivb
ja
mov
aad
inc
or
xchg
xor
sarb
aam
loopne
push
jp
sub
inc
jne
fcom
testb
sub
pop
mov
lods
jp
and
adc
inc
or
inc
push
loopne
faddl
fcoms
je
push
sbb
push
fiaddl
dec
loopne
mov
loope
shrb
xchg
xchg
rcl
sbb
sub
std
sbb
jl
cmpsl
roll
inc
shrb
push
pop
or
shll
xor
jmp
jns
lret
push
xchg
out
fcoml
jne
call
dec
repz
pop
push
push
jbe
dec
jmp
ret
loope
add
pushf
or
sbb
jbe
outsb
std
and
out
sbb
aaa
and
inc
subl
ficompl
pop
loope
dec
add
out
cltd
fnstenv
js
stos
outsl
subl
aaa
ljmp
gs
out
push
jmp
in
mov
jnp
cmp
push
or
cmpsb
inc
ja
push
sbbb
out
mov
mov
sub
or
adc
add
rcll
pop
shlb
xor
mov
mov
dec
loope
outsb
cmp
xor
aam
sub
stos
inc
add
add
cmpsl
jg
js
mov
pushf
xchg
lock
fldenv
daa
sbb
mov
add
mov
jae
addl
push
push
lret
fucomip
push
pop
xchg
lods
jecxz
xchg
mov
ret
test
fisttpl
sub
cltd
bts
stos
mov
sbb
inc
shl
fistpll
ds
jne
fnsave
jbe
aad
xor
loop
gs
mov
pop
jg
mov
cmp
insl
dec
add
gs
cmp
pop
add
sub
add
xchg
gs
jecxz
push
fistl
inc
icebp
push
icebp
pop
test
cwtl
mov
sahf
push
ret
and
and
stos
or
dec
fimull
adc
inc
in
sub
add
jnp
jnp
jne
mov
cmp
aad
xor
mov
xchg
in
sbb
and
outsb
push
mov
and
dec
into
sub
xor
sub
shrl
loopne
pop
inc
add
add
or
or
nop
je
pop
push
addr16
sbb
lret
add
xchg
xchg
or
cmp
or
adc
repz
jmp
je
popa
jo
rcl
loopne
jg
pusha
cmp
sub
in
orl
ja
adc
sbb
sub
outsl
ret
sbbb
and
dec
adc
test
mov
jge
sbb
lods
lret
xchg
pop
cmpb
and
out
loope
arpl
jnp
sti
repz
rolb
sbb
sbb
or
cwtl
pop
leave
test
inc
fbstp
rcrl
test
loopne
lods
mov
pop
cmp
je
in
in
daa
adc
jnp
mov
mov
loopne
sub
sbb
loopne
sub
leave
movsb
andl
js
xlat
mov
enter
addl
pop
sbbb
and
inc
adc
push
inc
xchg
ret
sub
mov
adc
pop
dec
cmc
imul
ljmp
ret
sub
je
dec
fdiv
mov
enter
jbe
aaa
fcompl
xchg
or
push
rorl
mov
fidivs
adc
mov
push
ja
pop
loopne
inc
cmp
dec
push
or
test
or
push
sbb
add
jbe
ljmp
icebp
xor
arpl
call
adc
pop
nop
dec
add
inc
rcll
loopne
rolw
adc
adcb
cli
es
data16
scas
dec
sub
xchg
je
mull
sbb
sub
aaa
adc
fsubs
hlt
fsub
aaa
or
mov
sub
xchg
mov
int3
popa
cmp
adc
xchg
popf
inc
popl
or
push
dec
cwtl
cwtl
xor
mov
jg
cli
rcr
jnp
pop
push
and
add
sub
sub
cmp
fdivrl
or
mov
clc
adc
or
fs
lcall
jle
inc
das
popa
ret
pop
push
cmp
add
xchg
jge
fimull
push
mov
mov
pop
sub
jg
push
cmp
scas
fisttpll
test
out
jecxz
int
cmp
iret
dec
push
movsb
lods
ljmp
push
imul
fadds
nop
cltd
inc
aam
fisubs
lods
ljmp
mov
movsl
adc
jecxz
sbb
pop
jle
lds
data16
in
pop
aaa
mov
clc
mov
int3
addr16
rolb
cmp
test
or
das
cmpsb
test
jge
fistpll
sub
fmuls
and
push
mov
sub
ljmp
mov
push
les
clc
outsl
cmp
xlat
mov
test
jp
push
aaa
mov
xor
mov
sbb
add
pushf
outsl
lock
cmp
jne
negb
fidivrs
and
xor
mov
push
add
rol
mov
in
dec
mov
mov
add
push
pop
mov
and
pusha
ret
xlat
call
fsts
pop
fs
stc
and
push
jae
pop
ret
rorb
lock
mov
sarb
cld
push
push
out
out
cmp
jbe
jne
mov
xor
or
push
repnz
cli
xchg
mov
dec
je
xchg
jne
jo
nop
mov
inc
ja
ljmp
pop
jp
fdivs
stc
dec
sbb
mov
mov
push
dec
xchg
pop
sub
jno
clc
decl
mov
xchg
adc
popa
xchg
stos
mov
jle
popa
rcrl
enter
movsl
lret
adc
pop
call
int
lcall
ficoml
or
jo
mov
adc
pop
push
xor
call
dec
cmpb
gs
pop
lock
mov
outsb
aaa
or
andb
sbb
fst
inc
popa
push
std
outsb
fcoml
xchg
fs
cmpsb
inc
pop
push
incb
mov
mov
test
int
mov
or
aaa
and
mov
mov
adc
repz
imul
lods
and
test
xchg
dec
sbb
mov
orb
js
fisttpl
push
jp
sbb
mov
xchg
xchg
add
inc
push
mov
xor
shr
js
sahf
jp
pop
ss
sti
mov
pop
dec
insb
adc
pop
repz
cmp
jo
popf
lgdtl
push
lea
insb
cld
or
adcb
fiadds
xor
mov
imulb
pop
lret
or
mov
lahf
jb
cmp
iret
jecxz
mov
inc
and
mov
adc
scas
jne
push
sarl
daa
cwtl
xor
cmp
xorb
or
adc
push
int
call
sbb
mov
mov
xor
mov
xchg
pushf
adcb
faddp
sbb
ja
andb
bound
mov
jo
push
std
push
jno
clc
push
inc
mov
push
lock
mov
dec
movsl
movsl
movsb
dec
mov
cmp
add
fucomp
adc
xchg
cmp
push
xor
mov
ljmp
dec
sbb
add
dec
in
mov
jbe
push
incb
leave
andb
inc
in
loope
aaa
popf
scas
loope
nop
ret
rol
addb
mov
push
add
and
add
dec
inc
outsl
xchg
testl
push
add
pusha
add
inc
and
or
or
mov
jnp
and
je
cmpsl
subb
int
add
mov
int3
jmp
mov
in
lds
movb
mov
add
dec
xchg
icebp
jg
les
je
pusha
inc
andb
push
add
push
js
inc
mov
mov
add
mov
xor
mov
add
mov
jae
add
test
pop
sub
adc
add
data16
sbb
inc
testb
pop
ret
xchg
pusha
or
lock
and
sbb
cmp
sbbb
pop
mov
fisubl
sarb
dec
add
sti
pusha
and
xor
in
mov
mov
xchg
pop
sbb
mull
cld
lock
frstor
data16
aaa
adc
add
test
lret
hlt
mov
hlt
adc
dec
sbb
push
sub
xor
dec
pop
xchg
xor
adc
and
adc
rorb
rolb
adc
push
mov
fcoms
mov
push
mov
mov
push
mov
mov
loope
subl
adc
add
mov
lds
jge
cs
clc
cmp
jb
mov
aaa
xchg
push
call
adc
mov
dec
jg
mov
testl
sti
or
nop
jl
dec
imul
incl
push
sub
jb
test
push
enter
push
jp
rcrb
mov
inc
outsb
test
pusha
imul
popa
lods
xchg
fidivrs
mov
shlb
and
mov
mov
mov
and
xor
add
jo
inc
cmpl
lret
adc
out
or
mov
pop
clc
mov
or
jl
xor
enter
filds
fadds
icebp
and
std
jecxz
icebp
movsl
fidivrs
xor
pushfw
mov
das
jl
mov
inc
pop
sbb
divl
fwait
xor
adc
testl
jp
mov
mov
sbb
add
mov
test
std
ffreep
mov
int3
nop
pushf
jl
ficompl
loopne
add
outsl
adc
sbb
xchg
mov
add
jo
stos
insb
xor
fwait
dec
sbbl
cs
in
sar
inc
popa
sub
mov
jg
add
mov
inc
sbb
sbb
fs
jl
mov
cld
divb
mov
jecxz
mov
mov
lret
sbb
and
dec
lds
ficoms
add
pop
and
and
mov
rcr
mov
dec
fldl
sbb
filds
sbb
xchg
outsb
addb
std
das
inc
mov
divl
insb
aad
inc
sub
sub
fwait
outsl
xchg
jmp
push
fs
das
rcl
or
subps
push
fistl
and
popf
std
adc
repz
addl
lea
cli
mov
loop
pusha
ljmp
ljmp
push
push
shr
pop
jg
mov
inc
dec
outsb
mov
fs
mov
jb
adc
popf
add
inc
xchg
aam
negb
lds
inc
mov
aas
and
and
subb
pop
xor
or
scas
in
lods
push
std
pop
push
add
je
rclb
fisttpl
icebp
loope
mov
loop
and
testb
xor
mov
dec
add
lret
hlt
pshufw
mov
repnz
push
dec
adc
jns
pop
inc
insb
das
inc
subb
mov
fsubs
cld
pop
test
dec
call
mov
loop
mov
stos
add
pop
js
inc
push
mov
sti
clc
test
fwait
cmc
test
mov
jg
lcall
arpl
mov
adc
jo
fdivrl
lods
popf
cli
orb
mov
mov
cmp
fldl
rep
push
mov
test
inc
js
cmp
sub
add
pop
inc
mov
xlat
bound
dec
aaa
cmovne
test
hlt
cs
icebp
xchg
fldcw
shll
cmp
popf
sub
daa
movsb
adc
ret
inc
sbb
add
sbb
jl
loopne
adc
insl
add
mov
pop
scas
int
sti
andb
push
out
daa
rolb
lret
aam
rolb
mov
sbb
dec
add
int3
push
xor
mov
adc
push
int3
pop
test
mov
pop
aam
lds
andl
js
inc
sub
add
adc
mov
mov
mov
pushl
mov
jg
and
lods
cwtl
add
or
pushf
int
shll
inc
sbb
int3
lods
mov
adc
or
lds
xor
and
sub
jp
cmc
push
out
add
and
clc
mov
adc
mov
push
cmp
xchg
add
ja
mov
lret
aam
aam
testl
xor
xor
pusha
in
inc
jnp
and
ss
cmp
push
inc
sbb
push
xchg
stos
sbb
push
xor
xorb
mov
decb
out
fstpl
add
jp
mov
jge
aam
into
mov
ljmp
xchg
cmp
in
inc
imul
or
daa
es
cld
jno
xor
rcr
adc
inc
and
mov
in
stos
mov
cmc
ljmp
sbb
clc
pop
out
movsb
mov
das
add
mov
dec
and
mov
push
sbb
inc
mov
pushl
stos
test
mov
mov
add
jge
out
sub
jne
mov
dec
dec
mov
std
pop
push
cli
test
push
filds
push
mov
pusha
and
sbb
push
outsl
lds
ss
in
adc
jae
call
ret
and
add
or
sub
mov
lock
outsb
cmc
push
push
add
mov
pop
nop
call
pop
decl
iret
add
xor
jp
subb
arpl
and
lret
fsts
sub
jo
stc
pushl
out
je
icebp
popl
std
cmc
add
fldcw
xchg
jnp
pop
pop
pop
ljmp
push
jle
mov
sub
adcb
mov
adcb
int3
push
stc
add
adc
incl
out
les
insl
aas
shll
lahf
sub
inc
xor
xor
sbb
xchg
dec
mov
das
inc
sub
sub
es
push
jo
pop
mov
stc
movsl
mov
xlat
mov
das
mov
mov
or
and
adc
jnp
cmp
pop
jmp
mov
pusha
ss
cmc
mov
xchg
push
cmp
loope
adc
movsl
push
push
fs
in
dec
out
lret
xchg
clc
jbe
outsl
sti
fcoms
outsl
jle
fistpl
and
dec
outsb
cmp
test
pushf
mov
or
add
push
shll
test
and
xchg
gs
jl
in
jb
or
js
mov
adcb
or
mov
adc
cli
mov
outsl
inc
shrl
push
test
push
pop
cmp
xchg
add
lret
inc
mov
jb
fwait
insl
cmc
pop
push
lock
mov
inc
inc
outsl
pop
mov
in
sarb
mov
popa
repnz
xchg
aas
cmp
push
mov
lret
pop
adc
push
imul
je
leave
gs
mov
sub
or
fisttps
pop
inc
lods
jbe
push
mov
mov
push
xchg
call
cmp
jp
mov
cmpsb
xor
add
arpl
sarl
jb
lret
mov
pop
lret
ds
adc
pop
mov
push
cld
das
rorb
cmc
mov
roll
out
jl
stos
pop
out
inc
repz
incl
xor
imul
mov
fcoms
xor
xlat
fwait
into
std
shll
add
mov
push
sarl
lret
add
std
adc
cs
incl
into
mov
testl
orl
gs
lods
dec
outsl
inc
push
out
xor
in
je
or
sarb
jnp
pop
sbb
pop
fmul
pushf
cmp
mov
sbb
in
repz
out
lret
cmc
testb
sbb
push
cmp
jmp
decl
jle
js
nop
xorb
add
cmp
iret
andb
ja
sub
xchg
ret
push
push
jnp
sbb
out
sbb
hlt
insl
scas
cmc
adc
out
mov
mov
mov
sbb
or
sub
pusha
pusha
dec
add
jp
out
mov
sbbb
pop
ret
outsl
dec
mov
dec
fisttpl
call
hlt
cmp
mov
mov
pop
clc
popa
test
dec
fistl
mov
xlat
sbb
test
jno
leave
push
inc
mov
dec
or
adc
cmpsl
js
and
lea
add
lea
in
jno
xchg
fcompl
shll
pop
inc
add
pop
fmul
xor
neg
sub
jb
push
mov
xor
pop
or
or
mov
add
sbbb
push
cmp
sub
and
rorl
test
es
enter
pop
int
cs
mov
xchg
pop
pop
push
sbb
lcall
insl
enter
fadds
inc
popf
add
les
sub
sbb
adc
outsb
cmp
and
int
loop
xchg
imul
nop
or
inc
test
pop
and
mov
adc
cmp
data16
add
sbbl
iret
enter
mov
adc
cwtl
fs
jp
push
inc
push
adc
xchg
sbb
nop
test
jle
fsubrl
sar
ret
and
sub
js
mov
jmp
and
inc
pusha
lcall
mov
pop
test
jl
and
sbb
fwait
cmp
add
mov
xchg
data16
and
xor
and
gs
fisubl
or
and
loopne
jecxz
inc
add
out
or
out
xchg
dec
adc
inc
and
fisttpll
adc
outsb
fadds
fidivrl
mov
add
mov
push
js
lds
cmp
xchg
loopne
push
jmp
sbb
ret
dec
aam
sub
inc
imul
pop
xor
or
test
test
popf
push
outsl
mov
mov
rorl
pop
je
cmp
je
mov
gs
stos
sub
iret
push
or
jb
jecxz
pusha
mov
add
push
cmp
mov
ljmp
xchg
add
addb
loop
or
fiaddl
sbb
in
fs
insb
xchg
ficomps
sbb
imul
xor
adc
mov
xchg
lret
adc
sbbb
bound
pop
mov
fisttpll
and
xor
mov
and
push
xor
xor
ss
and
sub
dec
pushf
jle
adc
sbb
test
pop
xor
mov
mov
adc
xchg
dec
adc
push
inc
and
adc
jnp
dec
or
adc
jae
jo
cmp
xor
and
ja
adc
pop
pop
mov
mov
and
mov
fisubl
pop
dec
adc
and
push
add
push
outsb
lds
pop
jge
bound
popf
inc
adc
test
aam
out
and
stos
xor
in
aam
popf
adc
hlt
lea
dec
cmpsb
pop
aas
enter
and
sbb
std
orl
shr
mov
add
lret
mov
aaa
out
xor
or
neg
or
push
mov
cmpl
lods
out
lock
pushf
mov
lcall
outsb
scas
jge
call
rol
call
sbb
jno
pop
cmc
cmp
popf
lock
popf
or
pop
repnz
sbbb
notl
hlt
in
adc
push
xor
push
das
sub
pop
aaa
and
jecxz
jg
in
mov
fsubl
and
dec
mov
ja
repz
movsl
xchg
hlt
mov
jnp
sbb
pusha
xor
cmpsl
fiadds
adc
fidivrs
jp
shl
aam
sub
dec
mov
inc
call
mov
test
fmuls
cs
and
test
inc
adc
loop
adc
sbb
sbb
addl
adc
movhps
mov
xorl
adc
jbe
mov
fisubl
push
shrb
jecxz
pusha
mov
sar
andl
add
or
and
xlat
adc
nop
or
sub
add
inc
fcmovnbe
mov
xor
bound
sub
je
cmp
mov
xchg
mov
lret
adc
rolb
into
jmp
adc
call
shlb
mov
sub
mov
jge
cmp
lock
lock
stos
in
int3
mov
loop
call
and
pop
adc
je
cmp
sbb
test
popf
and
fistpl
push
ror
inc
cmp
aas
roll
adc
aas
lcall
call
in
jno
add
imul
mov
inc
subb
repz
dec
mov
lcall
mov
mov
rcrb
push
adc
shlb
cmp
clc
mov
and
inc
add
imul
push
scas
lret
icebp
inc
push
call
mov
push
inc
int3
xchg
or
cmpsb
mov
icebp
popa
add
and
fcoml
leave
add
or
and
repnz
rcr
or
sub
jp
or
ficoms
inc
add
dec
or
loope
dec
icebp
lods
or
int3
add
inc
and
push
xchg
int3
adc
dec
cmp
mov
rclb
adc
xor
dec
aas
cli
or
jle
adc
test
inc
add
fcompp
jne
add
push
pushf
fidivrs
int3
cmp
xor
push
shlb
int3
jmp
shl
jle
das
and
ds
lret
rorb
add
sub
iret
pop
inc
add
mov
rorl
push
and
rcrl
fsubrl
adcb
les
in
mov
ja
inc
xchg
xchg
insb
add
inc
mov
mov
push
push
mov
pop
lock
pop
pop
push
add
add
outsb
adc
icebp
cmc
mov
mov
and
adc
xor
inc
out
jge
sbb
orb
inc
push
repz
ret
int3
jns
mov
add
add
mov
xchg
mov
add
pop
push
cs
mov
xor
or
daa
jb
push
mov
aad
cli
add
xchg
mov
mov
xchg
leave
arpl
icebp
orb
sub
push
adc
dec
cwtl
adc
cmpsl
imul
shrl
test
sub
xchg
push
fdiv
push
push
mov
je
xor
push
filds
hlt
inc
lock
jmp
cmpsl
add
shll
stos
clc
or
idivl
scas
fiadds
or
adc
and
lock
add
adc
jge
and
insl
in
xor
jo
inc
add
jnp
add
push
imul
adc
hlt
add
in
push
pop
mov
int
and
xor
mov
inc
mov
add
mov
adc
aad
fcompl
add
sahf
xor
cmpsb
lahf
sti
add
lock
push
enter
lods
out
dec
les
xbegin
push
and
lods
push
xor
or
add
loopne
loope
iret
leave
jecxz
aas
inc
mov
cld
jl
out
and
call
je
xor
xchg
xor
pop
jge
sub
adc
cmp
aad
cmp
out
inc
in
mov
inc
jge
call
jo
adc
cmpsb
sarb
fmuls
es
jle
scas
iret
push
jp
das
lahf
push
in
das
lock
sub
pop
adc
imulb
sbb
push
push
dec
push
jb
hlt
adc
scas
jmp
mov
jp
and
outsb
sub
pop
mov
test
out
pop
xchg
pop
mov
ss
or
sbb
inc
mov
jnp
mov
xor
fidivrs
sbb
xor
mov
add
pop
inc
andb
add
lahf
fildl
gs
aad
frstor
je
sti
loope
call
xor
jmp
loopne
and
addl
push
fidivl
decl
mov
mov
in
and
and
insl
mov
add
pop
adc
mov
insb
into
ret
mov
mov
divb
xchg
cld
mov
das
sbb
mull
dec
insl
inc
add
dec
nop
dec
xchg
ja
mov
sbb
jb
shll
sub
addb
pushf
fistps
xchg
int3
cmpsl
aas
add
pop
leave
pop
aas
push
and
int3
add
int3
push
dec
sbb
adcb
cwtl
inc
movsl
jbe
xor
xchg
es
inc
leave
mov
arpl
in
or
idivl
lds
loopne
jecxz
xchg
dec
out
or
xlat
add
push
std
dec
and
pop
mov
loope
push
mov
out
cmp
push
shll
sub
nop
cmp
mov
movsl
loopne
loopne
xlat
cs
inc
aad
fimull
mov
je
mov
dec
and
xor
pop
mov
xchg
subps
in
push
inc
sub
adc
inc
movsb
test
xor
sub
movsb
adc
or
inc
pop
inc
push
push
icebp
lret
xchg
mov
and
and
push
xchg
pop
add
pop
icebp
or
xlat
push
sarl
inc
inc
push
jg
je
pop
ficoml
jmp
imul
in
pop
xor
adc
inc
cli
cmp
in
ret
push
bswap
loopne
mov
pop
lods
add
mulb
sbb
cmp
jge
in
ficompl
orb
xchg
les
enter
aam
rorl
xlat
or
int3
or
int3
pop
sub
sub
pop
repnz
int
mov
xor
test
jle
push
adc
xchg
testb
mov
add
inc
or
adc
ss
jbe
mov
xor
cli
push
into
add
out
mov
popf
lcall
xchg
mov
inc
or
bound
or
test
push
fs
inc
mov
or
pop
sub
or
nop
into
xor
pop
xor
jmp
mov
xor
dec
pop
andl
inc
and
dec
and
push
xor
cmpsl
push
stos
and
stos
lcall
aaa
sbb
and
jnp
scas
pushf
outsl
mov
addb
xchg
sub
cwtl
sbb
add
lods
dec
jecxz
push
inc
ds
aaa
call
cmp
int
add
jecxz
push
push
ja
cld
cltd
mov
lock
jg
ja
mov
inc
mov
xor
sbb
mov
push
shr
sub
cmp
les
clc
sar
ljmp
pop
add
pop
fisubrl
inc
mov
outsl
push
leave
jo
push
lods
cli
ljmp
hlt
filds
decb
sub
mov
lcall
add
xchg
xor
jb
mov
inc
loop
and
or
push
bound
out
cmp
ja
call
dec
call
xchg
xchg
out
sub
stos
push
sbb
push
mov
ljmp
add
ljmp
cmc
ljmp
ja
jg
imul
cmp
sub
mov
test
dec
outsl
sub
test
outsl
shlb
call
cmp
and
lea
cmp
xchg
and
fistpl
aaa
test
sub
pop
into
push
sarl
js
mov
jb
inc
sbb
nop
cmc
pushl
cld
loop
xchg
push
loope
mov
sarl
pop
in
pop
scas
push
std
dec
adc
lahf
sbb
addl
mov
dec
ret
pop
cltd
popf
aaa
inc
and
icebp
pop
pop
add
push
outsl
roll
dec
aam
xchg
les
adc
out
subb
jmp
test
and
push
cmp
pop
es
in
xchg
daa
lcall
add
lods
call
mov
pop
inc
ljmp
dec
dec
mov
in
idivb
stos
sub
cli
pop
or
out
es
pop
call
push
cs
inc
cli
or
in
fdivrp
pop
aad
add
or
pop
ljmp
add
and
hlt
adc
xor
lcall
incl
scas
or
and
test
je
das
mov
insb
push
pop
fisttpll
cli
std
ret
pop
loop
gs
testb
fcmove
inc
adc
mov
mov
inc
add
test
out
sub
in
js
mov
or
loope
inc
inc
adc
adc
outsb
add
cmc
imull
add
lock
das
call
add
arpl
repnz
mov
pop
inc
movsb
ljmp
hlt
stc
out
or
cli
shr
dec
fisttpll
out
sub
mov
pop
sar
mov
or
or
shlb
mov
or
pop
aam
xor
pushf
je
dec
cmp
shlb
ret
pop
movsb
dec
inc
cmp
xchg
arpl
xchg
mov
aad
fidivrs
out
xor
xchg
sbb
and
pop
xchg
inc
je
add
sbb
outsl
cld
push
fldl
sub
icebp
sarb
mov
js
insl
add
mov
xor
adc
jmp
adc
inc
dec
bound
fsubl
jl
fistl
inc
jae
lcall
mov
cs
fistps
cmp
je
test
cmp
mov
lods
fidivrs
cmp
aaa
fdiv
cld
or
dec
cmp
adc
in
mov
jmp
sub
lock
inc
lock
and
xchg
jmp
decl
xor
adc
mov
mov
jmp
lods
cld
pop
cmp
lret
int
cmp
add
aam
mov
push
inc
xor
loop
stos
or
outsl
incb
cmp
inc
add
lahf
jbe
pop
call
arpl
pop
std
adc
fisttpll
fs
mov
cmp
pop
fisubl
jo
stos
push
jnp
pop
adc
pop
test
and
cmp
dec
and
add
mov
inc
push
int
push
sub
and
pop
push
xchg
push
add
xor
inc
lret
lret
das
cld
add
icebp
jo
cltd
icebp
hlt
xchg
add
dec
or
in
jae
incl
loop
jne
or
inc
cmp
repnz
cli
jns
ret
ret
add
push
cli
out
sbb
or
clc
icebp
pushf
jl
xor
xchg
mov
mov
insl
xor
and
daa
jl
jo
add
shrl
lea
cmp
mov
mov
fmuls
mov
pushf
movsl
std
mov
mov
mov
adc
inc
movsb
push
fisttpll
and
mov
jmp
es
adc
loop
mov
adc
inc
or
add
sub
mov
push
cmpl
sub
push
fidivrs
fildll
mov
pop
mov
jl
cli
test
fstl
xorb
lock
mov
pop
mov
adc
cmc
add
dec
fnsave
fdivrs
aad
mov
push
push
das
lock
int3
nop
daa
cmpsl
insl
roll
aam
jns
jae
pop
add
ja
adc
add
sub
pop
in
inc
sbb
fistpll
cmpsb
jl,pn
nop
pop
and
fdivrl
cwtl
clc
jge
sub
xchg
jae
inc
sbb
adc
jl
ljmp
mov
scas
pop
popf
lods
jns
xor
xor
jle
cmc
out
push
dec
ljmp
sub
mov
cmp
cli
fildll
pushf
icebp
cltd
jge
sbb
movsl
sbb
lods
lods
mov
incb
repz
jl
and
cmpsl
aad
cmp
in
adc
lahf
mov
in
fildl
xchg
out
jmp
sub
in
icebp
insb
dec
mov
xchg
mov
push
fldcw
pop
sub
adc
add
mov
rcll
jle
jg
push
or
bound
mov
add
scas
add
lds
sbb
jbe
cmp
and
popa
inc
pop
sbb
addb
sbb
or
sbb
sbb
add
mov
xchg
mov
add
lock
insb
jne
push
push
js
aaa
mov
ss
arpl
ret
mov
pop
jecxz
jge
mov
stos
scas
lcall
or
sbb
mov
dec
cwtl
or
xchg
decl
cltd
push
mov
loope
clc
rep
call
lret
mov
xor
mov
and
mov
push
insb
mov
push
sbb
sbb
imul
and
jl
add
movsb
cmp
mov
js
idiv
lods
or
fs
clc
sbb
mov
sahf
cli
daa
cmp
mov
incl
test
adc
hlt
orb
cs
xchg
call
mov
outsl
xchg
mov
std
mov
or
cwtl
adc
call
popa
jmp
test
aaa
add
add
xor
xor
jb
pop
das
cmc
jg
pop
sub
pushf
ljmp
cmp
pop
clc
inc
hlt
cmpsb
cmp
cld
das
es
push
clc
or
inc
out
and
test
cld
and
subb
popf
adc
sbb
mov
mov
mov
jmp
sub
test
outsl
push
mov
push
fistl
ret
adc
and
lock
fmuls
in
imull
je
cmp
imul
fistpll
inc
jnp
jae
mov
mov
cmp
dec
scas
fsubrs
jmp
lods
ds
jbe
mov
std
inc
add
notb
jecxz
cmp
lock
ret
data16
das
inc
addr16
stos
movsb
stc
add
rcrl
cmp
xchg
or
icebp
cmp
or
insl
rorl
movsb
test
jp
mov
jge
movsl
pop
shl
lods
dec
pop
sbb
cltd
sbb
hlt
outsl
pushl
push
out
sbb
popa
sarl
imul
fimull
mov
pop
xchg
out
arpl
cs
scas
mov
mov
add
and
or
imul
adc
ficoms
ret
daa
inc
lahf
and
jbe
rolb
dec
pushf
xchg
mov
loopne
dec
outsb
sbb
pop
lock
xchg
xchg
jle
cmpsl
inc
or
ret
push
daa
rsqrtps
add
mov
call
push
add
sarl
test
xlat
xchg
or
add
test
or
lret
sub
fistpll
or
js
push
aam
lahf
int
push
and
mov
ret
jbe
leave
les
out
addl
jge
test
inc
or
xchg
inc
or
jp
cld
cmpsl
and
std
dec
add
fs
inc
aaa
ja,pn
and
data16
xchg
xor
jae
jmp
pop
subb
push
sbb
js
mov
dec
adc
lds
adc
xor
call
mov
mov
push
mov
mov
aam
out
push
push
mov
shlb
insb
int3
repnz
call
jne
sub
outsb
xor
leave
pop
loope
cmpsl
mov
adc
sbb
lock
pop
push
cli
xchg
insb
mov
imul
inc
in
fnstcw
call
sub
int3
xlat
loopne
fadd
mov
insl
fwait
add
imul
adc
add
mov
mov
cs
or
jg
jp
ret
mov
cli
cld
stc
arpl
cwtl
jno
shll
sub
rcll
sbb
mov
ss
outsl
fwait
clc
mov
int3
dec
push
jmp
inc
cmp
xor
nop
in
jae
inc
sbb
rclb
push
mov
xchg
sbb
pop
jmp
and
rorb
outsl
sbb
test
jbe
jecxz
and
sub
or
mov
adc
mov
clc
cltd
nop
sbb
push
int
sub
mov
daa
test
push
add
and
fistpll
lds
pusha
push
fldenv
mov
mov
or
pop
and
xchg
push
mov
icebp
add
lods
loope
jp
scas
and
aaa
jg
mov
loop
adc
pop
in
data16
lds
push
sub
icebp
add
ljmp
repnz
mov
and
pop
or
lods
pop
aam
mov
rcl
mov
popf
stos
xchg
dec
hlt
pusha
mov
inc
hlt
leave
mov
inc
add
or
push
add
int3
test
leave
jnp
dec
pusha
push
inc
test
iret
leave
or
add
mov
add
sbb
sbb
add
inc
les
dec
inc
push
mov
nop
adc
lahf
push
add
sub
es
mov
inc
fwait
data16
stos
and
jle
popf
cmp
jne
inc
mov
cwtl
cmp
stc
xchg
xchg
and
fstps
jo
hlt
xor
in
push
mov
shrb
mov
incb
outsb
jl
jo
dec
fiaddl
repnz
cmp
xor
adc
dec
std
outsl
jne
arpl
std
dec
insb
or
sbb
mov
test
mov
scas
lds
jmp
loopne
and
decl
cmp
jae
daa
pop
xor
pop
mov
decl
xchg
ret
loopne
roll
xchg
mov
cmpsl
sbb
inc
lock
mov
ss
nop
or
mov
and
popf
add
leave
xorl
jmp
dec
leave
and
aaa
outsb
adc
push
push
xchg
mov
fldcw
cmp
clc
fldl
lahf
adc
inc
xchg
jo
imul
cmpsb
jbe
sub
sub
push
andb
sar
movsl
outsb
int
sub
xchg
mov
adc
test
cltd
xor
fs
imul
loopne
in
xchg
andb
jno
sti
xor
sub
repnz
decb
sub
jl
dec
ds
or
lods
jmp
mov
cmpsl
sbb
adc
mov
scas
in
popa
push
ss
dec
cld
outsl
or
addr16
pusha
es
pop
mov
incl
lret
test
inc
add
or
pop
add
hlt
or
pop
push
push
mov
pop
xchg
leave
sbb
cmc
icebp
jp
in
lds
ljmp
mov
jns
popa
sbb
and
idivl
shl
adc
test
pop
adc
int
adc
pop
popf
arpl
in
xor
lock
mov
mov
outsl
cmp
mov
push
sub
dec
mov
xchg
imul
test
call
incl
lahf
push
sub
mov
lods
movl
cld
mov
add
clc
dec
mov
xor
outsl
mov
imul
mov
push
loope
incl
mov
dec
push
lods
mov
sti
or
gs
or
bound
fwait
jno
mov
stos
enter
inc
ds
orb
xor
enter
adcb
call
and
rol
add
out
outsb
jecxz
sbb
icebp
inc
enter
lds
cmovbe
shlb
adc
adc
adc
cli
test
adc
mov
push
fcomps
decb
lret
mov
test
testw
lcall
insb
xchg
lret
dec
cmp
dec
sarb
aaa
ss
cld
inc
adc
xchg
mov
sti
ret
and
mul
lret
sbb
pop
test
add
inc
push
jno
cs
outsb
icebp
sbb
or
push
mov
mov
std
cmc
lods
inc
ret
mov
rclb
or
mov
rorl
in
push
arpl
iret
das
mov
mov
les
pop
jb
and
movb
in
xchg
cwtl
adc
and
clc
es
ja
sbb
call
mov
cmp
inc
sub
fcomip
negb
jbe
sbb
arpl
cmp
and
test
cmp
lcall
mov
mov
jge
dec
jle
dec
inc
cvtps2pi
xorb
xor
adc
and
int
push
popa
loop
inc
sub
cmpsb
fcompl
push
push
and
pusha
repnz
stos
outsl
shrb
cmp
adc
cld
push
adc
adc
sub
aam
movsb
pop
inc
jmp
lea
sub
adc
inc
out
jb
sbb
xor
int3
xchg
daa
rcr
mov
and
sbb
call
out
ds
mov
sbb
outsl
push
int3
inc
cmp
adc
push
jmp
jbe
fs
cli
shrb
mov
sti
call
dec
cwtl
push
mov
in
or
loop
repz
sbb
das
xchg
fwait
lods
add
dec
outsl
mov
in
daa
pop
cmp
pop
sar
sar
sbb
mov
push
or
testb
adc
add
fsubl
das
adc
mov
fmuls
push
or
pop
pop
fistpl
inc
lret
pop
mov
xchg
js
mov
add
out
ljmp
pop
ja
imul
inc
xchg
or
clc
xchg
int3
jb
in
outsl
aas
push
cmp
inc
addb
mov
push
or
push
xor
xor
pop
icebp
ss
jno
adc
dec
pop
jg
jbe
aad
fsubrp
cmp
cwtl
mov
loope
std
sbb
sbb
test
dec
inc
or
lret
lds
cli
div
out
xor
fmuls
push
daa
sbb
xchg
aaa
cmc
and
test
mov
pop
and
sbb
adc
das
mov
mov
pop
xor
sarl
fstpl
setbe
divb
adc
dec
xchg
in
mov
test
xchg
push
inc
inc
jno
out
push
mov
xchg
hlt
xor
ds
inc
incl
pop
leave
or
dec
rolb
add
lock
xchg
mov
pop
call
and
and
rcr
aaa
clc
fistps
ds
sub
adc
and
cmp
mov
mov
fisubl
fiadds
sub
shrb
mov
inc
or
xchg
adc
dec
push
lods
dec
xorl
stos
shlb
add
and
aas
repnz
dec
out
push
fbld
push
add
xchg
loop,pt
adc
inc
inc
and
xor
shlb
add
int
adc
sbb
stos
es
fldt
add
hlt
testl
cmp
add
add
sahf
dec
mov
je
dec
aad
push
dec
enter
jns
adcl
aam
adc
loope
and
or
or
adc
push
sbb
aam
test
sahf
add
rolb
sbb
cmp
sbb
icebp
sbb
mov
mov
mov
sub
data16
add
fcoml
lds
arpl
daa
lret
add
sub
pop
mov
xchg
add
outsl
enter
add
popf
push
ds
dec
pop
cld
addr16
mov
mov
loope
add
add
popa
sbb
add
sbb
rcr
and
add
lock
cmp
pop
aam
xchg
inc
adc
std
push
jne
pop
and
mov
les
pushl
adc
mov
scas
test
loope
xor
lea
stos
pop
nop
xchg
sbb
cmp
inc
dec
push
inc
mov
add
jb
xorb
pop
mov
arpl
pop
cmc
sti
lock
mov
jl
rorl
push
push
pop
dec
test
ljmp
xor
inc
dec
stos
fdivr
cmp
jbe
push
mov
push
loopne
outsb
xor
xor
dec
shl
push
lock
inc
adcl
outsb
das
jmp
testl
xchg
outsl
push
dec
rolb
mov
push
dec
mov
ds
popa
add
and
sbb
int
test
aam
mov
mov
xchg
mov
mov
jne
adc
mov
cltd
add
sbb
xchg
call
jmp
cmp
ja
stos
sbbb
and
dec
daa
dec
xor
aas
insb
pop
xchg
iret
push
inc
add
add
movntq
xchg
fidivs
mov
pop
xchg
shl
or
shlb
pop
das
dec
push
mov
push
ret
pop
popa
mov
loope
neg
inc
mov
push
inc
bnd
push
push
mov
push
ret
fisubl
fcoml
mov
dec
adc
xchg
mov
mov
push
mov
xchg
lahf
ret
nop
and
dec
mov
xchg
out
daa
add
xchg
fisttps
cmp
inc
imul
adc
cwtl
rorl
push
cmp
fwait
mov
imul
les
or
stos
rcl
sbbb
outsl
mov
mov
jno
repnz
jle
loopne
loope
push
adc
mov
imulb
decb
sbb
movb
sbb
out
and
mov
fdivrl
adc
mov
orb
sub
dec
mov
addl
leave
or
or
xchg
or
or
and
sbb
jp
mov
inc
or
into
jo
movsb
lcall
scas
add
add
mov
in
int
mov
mov
sbb
push
and
sbb
xchg
cli
inc
aad
mov
into
or
mov
and
call
xchg
mov
rorb
out
pop
mov
les
mov
out
add
inc
add
sub
mov
sbb
cwtl
daa
cli
orl
sbb
iret
adc
pop
loopne
mov
jp
movsl
addl
scas
into
movsl
jb
add
add
add
test
mov
adcb
rol
xor
sahf
and
dec
xchg
sbb
push
fcoml
xorb
push
push
popf
rcr
std
mov
cmp
dec
push
scas
add
jb
or
clc
jbe
inc
lds
addb
or
lock
cmpsl
js
or
notb
xor
pop
repz
jecxz
lcall
pop
add
aaa
ds
mov
cmp
push
andl
add
jns
out
insb
jp
push
cmp
dec
add
scas
mov
sub
cmp
sbb
stos
cmp
aas
cmp
fists
mov
or
pop
ss
mov
xor
sbb
xchg
mov
or
loop
inc
pop
sarb
rcrb
fs
lock
sbb
sub
clc
ljmp
idivb
and
and
mov
shlb
lcall
push
mov
test
aam
push
and
push
sub
jecxz
fimull
inc
cli
mov
mov
sub
dec
daa
shlb
push
pop
cmpsl
lahf
ja
add
and
fimuls
cmp
inc
aam
push
into
add
push
out
inc
add
jmp
pop
add
call
clc
scas
inc
dec
add
inc
xchg
adc
cmp
out
xchg
mov
data16
ljmp
ja
sar
push
jb
xchg
and
push
jnp
sbb
inc
and
negl
adc
push
mov
js
loop
loopne
test
inc
fadds
inc
lea
mov
adc
mov
jne
or
sbb
cmpsl
fstl
das
and
je
popf
shlb
push
mov
enter
jo
adcb
enter
cmp
ss
enter
andb
ja
or
xor
mov
add
add
iret
mov
js
inc
fsts
in
mov
jg
pop
mov
addr16
jg
mov
mov
add
lret
fisttpl
mov
loop
shl
sti
pusha
push
pop
push
pop
fldt
and
lods
jno
and
mov
in
pop
push
xchg
mov
loope
inc
push
lea
pop
or
mov
ljmp
sub
push
sbb
sbb
movsl
call
xchg
in
ss
outsl
or
fisttps
addr16
pop
mov
inc
lahf
mov
and
dec
orb
and
enter
jno
mov
mov
and
pop
sbb
jmp
dec
mov
movb
mov
enter
cmp
inc
fs
adc
lcall
mov
mov
sub
or
mov
or
movsb
sub
xor
push
or
ljmp
sub
mov
jbe
adc
ret
jo
aam
lds
stos
add
fsubrl
pusha
push
pushf
cld
or
es
ret
iret
add
xchg
adc
shrl
pop
add
sub
jmp
cld
nop
out
dec
rorb
sbb
push
jecxz
add
inc
mov
xchg
and
lret
adc
mov
cmpsb
sub
cmc
xor
clc
inc
dec
adc
fld
stos
cltd
add
and
sub
je
fcmovbe
cltd
cmp
scas
pop
dec
push
cltd
add
divl
sbbl
dec
mov
dec
lods
inc
jnp
cwtl
xlat
inc
mov
int3
lods
mov
jge
or
sbb
mov
adc
xchg
mov
mov
fwait
and
add
push
add
lcall
pushf
andb
mov
cmp
mov
or
add
loopne
push
push
sub
clc
sub
iret
push
data16
test
push
xchg
adc
mov
mov
adc
inc
adc
and
out
int3
stos
stos
xor
cmp
cld
ret
adcl
mov
adc
xor
in
pop
cmp
or
test
ja
fucomip
xor
xchg
add
push
adc
or
sbb
jl
and
ret
stos
mov
js
in
add
cli
andl
mov
cmpl
ljmp
mov
push
jb
inc
pop
std
mov
stos
inc
imul
jno
pop
arpl
push
and
and
hlt
xor
repnz
loopne
ljmp
out
cmp
stc
fcomp
push
xlat
jae
xor
and
sbb
mov
and
xor
jno
aas
push
mov
mov
pusha
or
lret
adc
pop
xor
adc
jecxz
mov
loopne
ret
subl
mov
xor
clc
call
push
xchg
pop
vsubsd
mov
fstps
adc
add
or
outsb
mov
icebp
add
test
mov
das
xchg
pop
mov
icebp
insb
in
sbb
fbld
pop
add
pop
mov
std
jg
mov
leave
ret
dec
and
int3
inc
cltd
mov
ss
out
ss
inc
jb
call
dec
in
inc
call
shlb
pop
add
call
jl
addl
movl
ret
dec
fisubl
add
xor
lahf
addr16
xor
mov
in
iret
push
and
call
dec
clc
inc
and
aam
or
pop
imul
and
fnstenv
mov
outsb
clc
dec
mov
lea
jo
add
das
int3
enter
popa
and
addb
push
movsb
loop
lock
adc
inc
sbb
pop
push
clc
inc
pop
push
xor
pop
push
sarb
pusha
sahf
push
push
les
mov
icebp
mov
mov
or
adc
pop
cmpsb
mov
xchg
stos
cli
out
adc
sbb
sub
insb
hlt
pusha
pop
aam
xor
mov
add
mov
shrb
or
dec
fcompl
mov
rorb
lret
outsl
or
ss
dec
push
shlb
test
sub
dec
fcoms
mov
lcall
add
push
xchg
mov
cmpsl
fsubs
xor
push
rcr
xchg
jnp
mov
cmp
lahf
and
insl
pop
and
pop
hlt
cmp
and
pop
jg
sub
xchg
or
mov
xchg
pop
mov
add
xchg
fidivrl
pop
enter
lods
clc
mov
add
cwtl
iret
adc
clc
loope
popf
inc
jl
lock
dec
sub
adc
add
mov
inc
adc
inc
in
pop
adc
sbb
push
test
pop
outsl
cmpsl
repz
ret
adc
push
dec
and
outsl
push
insl
push
stos
mov
and
mov
es
sti
or
xor
lock
pop
push
scas
push
xor
and
mov
rcll
and
rorb
xchg
adc
dec
imul
push
shrl
and
add
insb
or
adc
jae
rcrl
sbb
test
frstor
aas
mov
or
push
ljmp
push
rcll
dec
dec
lock
cs
fildl
mov
push
pop
adc
dec
inc
in
sbb
adcb
test
mov
fmuls
popf
mov
mov
sbb
mov
or
cli
sbb
stos
cld
stos
ret
lcall
orb
sub
rorb
adcl
xor
shlb
push
mov
sbb
nop
mov
les
add
add
inc
xlat
lock
xor
push
int3
inc
and
outsl
fwait
insb
mov
sub
xchg
jl
insb
or
mov
xor
xlat
or
divl
add
add
xor
hlt
movsl
mov
dec
ror
out
inc
inc
pop
or
pop
imul
push
push
js
sarl
data16
pop
cmp
pop
negb
adc
add
dec
shrl
or
xchg
and
loope
sbb
pusha
add
push
fcmovu
mov
fistpll
cs
or
negl
and
xor
aas
xchg
out
inc
dec
andb
jle
mov
cmp
inc
pop
out
std
rcrl
jg
jge
sar
pop
mov
and
fidivl
lods
push
mov
mov
add
push
mov
and
mov
loope
mov
jecxz
aas
pop
pusha
decl
call
aaa
cld
add
or
addr16
adc
push
int3
sbb
jae
dec
hlt
sarl
loopne
mov
in
mov
push
xlat
insb
inc
outsl
sbbb
mov
lret
sub
cli
dec
sbb
jne
std
add
push
movsb
rcrl
dec
dec
test
data16
das
adc
std
add
outsb
add
add
loop
sbb
negb
ljmp
loop
inc
sub
ret
sbb
lods
mov
cltd
mov
mov
stos
sbb
dec
faddl
push
shr
in
stc
and
std
test
outsl
add
arpl
sbbb
inc
add
or
mov
es
and
ljmp
icebp
les
leave
fcomip
js
jnp
xor
or
or
les
inc
scas
mov
ds
call
int
sbb
xor
push
pop
loope
hlt
and
in
mov
mov
and
test
or
add
or
popf
clc
std
aas
fiaddl
insl
xor
aad
loopne
sbb
xchg
jnp
lcall
das
pop
cmp
imul
stos
out
lods
fiaddl
xchg
clc
or
add
adc
daa
add
lcall
adc
js
iret
je
and
add
mov
push
push
xchg
add
cmc
cmp
xchg
into
sbb
adc
add
mov
das
loop
sub
loopne
jge
and
sar
out
negl
cmp
xlat
setge
pop
in
xor
lock
adc
fs
repz
nop
jb
cli
pop
loopne
mov
loopne
push
add
jmp
std
ljmp
cmp
data16
dec
or
mov
aad
add
or
outsl
push
aam
xchg
insl
mov
xor
test
in
mov
pop
and
jle
mov
add
lea
sar
dec
aad
repnz
sahf
xor
push
lcall
cmc
add
add
cmp
into
push
loope
sarb
mov
sub
jb
test
mov
mov
in
filds
adc
cmc
es
or
mov
das
xor
adc
mov
pop
pop
clc
push
loopne
sbb
or
lods
cltd
adc
cld
jne
adc
mov
rcll
cmp
inc
inc
outsl
jle
inc
push
adc
sahf
mov
clc
mov
cmp
lret
dec
call
cmc
mov
mov
mov
sub
push
xchg
out
mov
inc
lock
mov
inc
std
dec
cmp
sub
xchg
jg
xor
jmp
cmpsl
jnp
cmp
mov
dec
push
lock
out
pop
adcb
fdivs
std
add
xchg
arpl
sbb
jno
push
adc
ljmp
mov
imul
push
xchg
mov
sbb
ja
aad
mov
decl
mov
js
test
inc
cmp
mov
incl
mov
fistl
mov
cmpsb
xor
rcr
pop
pop
inc
dec
xor
add
pop
stos
push
mov
xchg
fdivrs
fadds
les
push
inc
pop
jo
out
mov
cmpsl
add
mov
dec
repnz
lahf
cwtl
mov
or
pop
cmp
push
inc
mov
xchg
adc
xor
scas
sbbl
and
add
loop
mov
cmp
add
dec
or
test
and
clc
ss
js
mov
inc
roll
dec
int3
xchg
cmovne
jg
dec
stos
cmc
and
test
mov
pop
mov
mov
ja
outsl
inc
and
or
lock
add
jge
arpl
jb
sarb
or
add
cli
xchg
inc
mov
in
xchg
test
jge
jo
pop
adc
sar
or
shll
das
stc
and
cmp
cmp
xchg
ja
inc
xor
jge
incb
jbe
adc
mov
sbb
test
test
pusha
sbb
lock
out
pop
mov
dec
jae
stos
clc
mov
adc
mov
icebp
call
out
inc
sbb
lret
mov
out
xor
cmp
mov
push
aam
add
or
fcmove
jne
add
and
mov
cmp
lods
hlt
rclb
idivb
xor
and
inc
repz
pop
aam
mov
jg
ret
xor
out
mov
xlat
cmp
rclb
dec
rolb
adc
pop
push
mov
out
push
rolb
sub
aad
and
arpl
jne
ret
cmp
rcll
repz
das
cmpsl
lods
add
pop
clc
add
xor
mulb
xchg
mov
jae
pop
lock
sub
leave
das
or
aaa
pop
loopne
or
xor
in
jl
sbb
cmpb
pushl
pmaxub
add
fmull
add
int3
cmpsl
push
sub
mov
jb
push
lods
pop
outsl
adc
test
dec
mov
dec
clts
push
mov
call
sbb
sbb
in
or
push
roll
test
int
popa
repz
ljmp
stos
xor
mov
out
and
and
and
dec
decl
adc
and
repz
fdivs
mov
rorb
mov
addl
and
add
xor
in
xor
xor
mov
test
xchg
ds
mov
cwtl
hlt
pop
xor
repz
jmp
mov
push
sbb
xor
jbe
jns
sub
shrl
jnp
mov
mov
addl
sub
dec
adc
shll
jg
add
dec
shrl
and
or
inc
pusha
shrl
cs
xchg
push
and
or
ljmp
sbb
cltd
andb
sub
fnstsw
mov
xchg
inc
dec
pop
pop
xchg
xchg
imul
or
pop
shlb
sti
fsubs
test
xchg
pop
pushl
cmp
call
inc
sbbb
push
or
sub
sbb
sbbb
push
and
cmpsb
inc
cmpb
push
adc
jl
insl
in
push
pop
stos
and
out
adc
fmull
scas
mov
jne
mov
inc
push
push
dec
push
test
mov
je
mov
dec
add
cli
outsb
mov
push
jo
stos
adc
inc
xchg
adc
sub
repz
icebp
in
scas
data16
xchg
lahf
or
lahf
push
mov
fldcw
and
bound
or
sbb
loop
push
dec
push
jl
inc
mov
pusha
xor
push
mov
mov
mov
xchg
rclb
lods
bound
inc
jbe
negb
ljmp
mov
mov
aam
leave
data16
pop
fsubrl
sbb
pop
mov
inc
popf
mov
pop
push
sub
mov
push
out
mov
outsb
dec
xchg
clc
cmc
jnp
dec
popf
xchg
jl
clc
cmpb
push
sub
add
dec
push
daa
js
inc
adc
test
jg
and
je
cmpsb
jno
mov
xchg
cmpsb
jnp
cmc
push
int
pop
add
pop
sub
stos
push
loop
in
pushf
outsb
jno
clc
fcmovnb
add
and
loopne
insl
cli
movsl
add
add
popa
xchg
push
aam
das
mov
sbb
push
or
cmp
push
add
jnp
pop
cmp
test
xchg
pop
mov
mov
adc
pop
dec
dec
out
jno
fildl
hlt
inc
xor
jmp
mov
popf
adc
lock
jecxz
sar
pop
adc
push
push
jmp
or
mov
push
xlat
inc
pop
mov
in
enter
repz
lds
aaa
js,pt
sub
adc
cmp
xor
or
dec
imul
and
je
das
orl
pop
test
push
int3
lret
cmc
aad
adc
fnstsw
sub
out
mov
or
sar
icebp
pop
sub
test
mov
mov
mov
emms
pop
movsl
ret
pop
rcrl
sti
test
rcll
push
sub
test
jmp
test
out
mov
dec
adc
mov
repnz
or
jnp
jle
xor
mov
fbstp
xchg
xchg
rcrb
andb
and
int
jge
aas
adc
cmpsl
adc
jno
icebp
js
add
mov
dec
push
jecxz
inc
daa
mov
popf
push
nop
loop
outsl
xchg
les
jo
jo
mov
imul
test
add
ss
pop
jmp
pop
mov
popf
and
or
in
jmp
inc
and
cmp
cmpsb
cwtl
mov
mov
inc
lea
inc
sarl
sbb
jecxz
mov
and
nop
mov
mov
mov
sbb
inc
inc
jg
gs
fcmovbe
mov
int3
aam
mov
push
icebp
lods
mov
jo
pop
flds
mov
inc
or
pop
aas
mov
jle
mov
adc
sbb
out
xchg
int
mov
dec
mov
xor
push
aam
dec
lahf
fistpl
fisubrs
add
jnp
push
xor
dec
sbb
jge
xor
inc
add
dec
clc
sti
lret
mov
push
int
cli
fbld
dec
jbe
ffreep
or
add
sbb
fadd
sbb
cli
adc
push
or
out
mov
std
les
xorl
push
nop
mov
xchg
xchg
sbb
lcall
lods
lds
mov
and
in
mov
cwtl
mov
hlt
cmp
push
dec
pusha
inc
sbb
add
dec
dec
mov
das
in
xchg
push
test
jmp
cs
and
jne
fcoms
cwtl
mov
mov
imul
push
addr16
test
mov
push
jle
ret
xor
ja
pop
adc
pop
adcl
or
icebp
xor
outsl
inc
out
jg
jo
lret
and
stos
scas
sbb
stos
divb
sub
xchg
lods
add
inc
inc
mov
jmp
aam
inc
add
jmp
cmpsl
fldt
xor
ret
test
cmc
mov
xor
hlt
push
addr16
fcos
push
stos
outsb
jae
or
divb
xchg
std
neg
fidivrl
lds
outsl
mov
add
pop
adc
ret
xchg
popf
mov
sbb
fcomip
pop
or
and
sbb
jle
outsl
cmp
pop
or
adc
std
outsl
or
push
ds
icebp
outsl
push
cmpsl
pusha
inc
or
push
nop
shll
das
mov
aam
shrl
sti
xor
or
fistpll
inc
push
hlt
lahf
stos
dec
nop
call
pop
and
shrb
xor
sbb
outsl
cld
xchg
leave
out
movsb
mov
pop
insl
lock
push
adc
call
int3
adc
pop
clc
shrb
xor
inc
and
out
xor
aam
push
push
pop
and
mov
add
inc
inc
outsl
pop
sahf
push
xor
push
je
xchg
cmp
pop
daa
movsl
lcall
xchg
mov
sbb
and
add
test
push
int
jb
sahf
jmp
mov
xor
add
cmp
movsb
pop
add
or
loopne
xchg
dec
rclb
lcall
dec
xlat
cwtl
leave
inc
inc
xorb
xor
or
mov
push
mov
dec
lcall
lret
add
push
les
and
or
enter
mov
sub
mov
fdivr
and
pop
add
jne
add
jmp
ret
sub
jno
es
lea
mov
data16
sub
lea
aad
call
inc
or
ljmp
daa
faddl
jo
or
pop
xchg
jne
dec
push
add
mov
dec
decl
lret
repz
add
inc
xchg
dec
mov
xlat
out
cmp
xchg
rcrb
test
testb
aaa
cmpsl
xor
jmp
test
js
das
clc
sti
mov
jge
pop
pop
push
dec
fcom
jo
orb
pop
cs
jl
sub
fistl
pushl
mov
ljmp
mov
dec
and
fiadds
dec
mov
mov
mov
ror
mov
jo
adc
std
test
loope
aad
aad
ss
pop
and
dec
faddp
inc
mov
mov
inc
pop
jne
mov
fs
add
leave
gs
pop
or
test
shrl
mov
test
cmp
mov
mov
call
sub
and
mov
mov
push
cwtl
mov
jecxz
jbe
jns
cmp
xorb
xchg
mov
les
mov
sub
mov
xchg
jle
jl
push
jle
or
mov
mov
lret
in
mov
iret
xchg
add
call
lea
fiaddl
mov
addr16
push
mov
adc
cli
leave
out
adc
lret
inc
add
test
out
add
repz
or
push
push
bound
inc
fadd
dec
cmc
adc
add
call
fisubs
add
sbb
iret
int
lret
fadds
in
push
cmp
dec
xor
xchg
mov
xor
addb
movb
sub
push
in
insl
rcrb
inc
stc
jp
outsb
ljmp
cmp
sbb
outsl
ds
sub
je
lods
add
push
add
pushl
cltd
sbb
mov
pusha
jmp
lods
out
mov
push
aam
loop
push
jmp
jne
add
in
lcall
mov
addl
icebp
mov
shrb
and
test
fdivrs
loop
sahf
dec
or
ret
outsl
out
mov
testb
mov
push
xlat
gs
insl
sub
dec
add
daa
inc
stos
pop
inc
and
dec
sub
sbb
adc
rcl
roll
bnd
inc
push
pushf
add
add
leave
sub
addr16
lds
sub
ret
add
sub
mov
cmp
mov
nop
push
es
mov
arpl
sub
sbb
dec
cmc
push
lock
pop
add
add
jnp
jb
pop
aaa
test
jle
jge
and
add
out
sub
cmp
out
mov
mov
icebp
test
enter
and
out
cld
sub
mov
and
and
inc
and
push
inc
sbb
adc
rorb
cli
fists
and
loop
jne
lods
mov
hlt
fadds
inc
mov
rorb
sbb
repnz
aam
mov
popa
push
mov
orb
aam
orb
mov
mov
cmp
wbinvd
mov
les
fs
sbb
or
mov
jno
js
dec
adc
sbb
stos
and
inc
mov
adc
mov
aas
sub
shlb
adc
out
adcl
scas
sub
add
mov
add
add
popa
pushf
push
jno
dec
sbb
or
inc
dec
push
enter
es
rorl
sub
inc
lock
adc
sub
rclb
jecxz
stos
push
lods
test
sbb
sub
icebp
js
xor
pop
bound
sarl
pusha
jno
add
or
or
cmp
pop
enter
pop
push
roll
adc
pop
mov
add
lcall
jo
xchg
adc
fimuls
add
sbb
sarl
cmp
add
jmp
adc
jb
push
or
push
xchg
inc
and
push
shrl
sbb
aaa
inc
mov
daa
leave
mov
decb
cmp
jmp
xor
mov
call
loopne
lahf
and
cld
adc
imul
and
lods
outsl
outsl
push
mov
test
pop
mov
dec
js
mov
incb
jne
add
cmp
jmp
push
sbb
mov
xor
cmp
adc
inc
mov
xchg
ljmp
sbb
das
rclb
mov
orb
stc
mov
inc
mov
jno
xchg
mov
pop
dec
fwait
neg
adc
call
test
fwait
int
scas
dec
add
push
add
mov
add
stc
xchg
sbb
xchg
dec
cmp
cmpsb
inc
cwtl
mov
inc
lods
adc
shrb
int3
sub
adc
push
popf
or
int3
test
or
pusha
jmp
outsl
hlt
sbb
dec
push
ja
mov
adc
pop
subb
jl
test
shrb
scas
pusha
mov
pop
lds
xchg
mov
jg
dec
adc
mov
add
sar
pop
cld
imul
adc
and
pop
icebp
decl
ljmp
cmp
jmp
sbb
das
jp
inc
or
dec
adc
add
jno
scas
test
push
mov
add
scas
fildl
or
ljmp
rcl
mov
push
call
jne
movsl
pop
mov
jb
sbb
test
push
test
daa
pushf
sbb
mov
xchg
mov
loope
ss
push
or
cmp
das
aad
fldenv
and
inc
inc
xchg
mul
jge
call
or
adc
mov
add
js
outsl
or
dec
pusha
ficomps
out
les
jge
ret
push
insl
mov
xor
in
or
call
in
nop
mov
add
pop
clc
pop
mov
mov
dec
popf
in
or
arpl
stos
cli
push
push
adc
or
loop
pusha
push
scas
imul
cmpb
or
push
rorb
mov
les
add
decb
inc
ret
outsl
test
add
xor
jg
loopne
xor
stos
out
lahf
pop
sbb
scas
mov
jno
outsl
mov
mov
sbb
fildl
inc
pop
fiaddl
popa
rcrb
mov
mov
sbb
pop
push
sti
lds
mov
cmp
sub
mov
pop
sub
mov
mov
movsl
jmp
mov
xchg
lea
cmpsl
andb
mov
mov
adc
push
adc
ss
aas
dec
imul
mov
insb
popa
ret
repnz
push
sub
xchg
fcomp
cs
xchg
mov
dec
pop
fadd
out
pop
or
mov
mov
inc
mov
arpl
sub
or
jle
sbb
or
sbb
fcomi
in
cli
fimull
mov
icebp
inc
stos
jle
addr16
popf
pop
add
rcll
clc
aaa
jmp
mov
out
sub
add
lea
dec
fdivs
repnz
pop
pusha
dec
jno
push
cli
in
ret
stos
add
lock
jns
pop
iret
sbb
out
mov
xchg
jge
outsl
fidivs
aaa
sub
pop
cmp
sbb
cs
nop
or
xor
mov
jg
adc
pop
mov
xchg
lret
xor
lret
or
movsl
stos
sbb
push
jns
adc
incl
mov
add
pusha
loop
mov
lret
aaa
std
and
call
insl
mov
jo
imul
loopne
ret
or
inc
out
aaa
mov
insb
sbbl
xchg
loop
std
mov
test
data16
push
xor
bound
and
rcll
je
dec
js
and
mov
clc
pop
dec
insb
jbe
add
jne
dec
hlt
stos
or
scas
adc
test
das
cmpb
pop
adc
jg
lock
mov
fiadds
jmp
test
or
mov
and
mov
jg
inc
lock
dec
xchg
add
sub
cmp
test
and
mov
rolb
push
lcall
pop
ss
ss
sub
mov
mov
lds
rcrb
insl
jl
lret
ljmp
mov
fcomps
fcoms
cld
scas
jg
adc
xor
test
inc
mov
xor
ds
dec
pusha
ljmp
push
push
imul
jne
in
inc
lea
call
das
mov
xorb
and
ja
adc
int
mov
ljmp
int3
add
or
push
cwtl
jg
jne
xlat
or
adc
stc
cmp
cmp
fnstsw
or
fisttpl
lcall
adc
in
adc
cmp
add
sub
xchg
mov
dec
jb
xor
popf
add
cmc
jbe
test
fisubrl
pop
dec
add
pop
mov
rcll
xorl
or
lcall
sbb
sbb
cmp
pop
data16
ljmp
orl
push
std
cmpsb
movsl
lcall
leave
mov
in
pop
int
jbe
push
inc
mov
pop
inc
jg
cmp
clc
dec
loop
push
jge
fs
inc
cmpsb
insb
xchg
push
dec
adc
aad
popf
mov
and
mov
iret
sub
and
cmpsb
movb
mov
xchg
fs
add
jne
lods
sub
out
pop
mov
pop
fs
sub
inc
mov
test
or
mov
mov
add
dec
ret
and
add
mov
pop
jne
fwait
gs
ljmp
xchg
mov
or
cmpsb
cs
pop
inc
jne
mov
fldt
loopne
dec
sub
outsl
mov
sub
sbb
adc
mov
cmp
leave
pop
sbb
mov
rcll
sbb
movb
scas
mov
mov
arpl
fadds
test
xor
or
cmpsb
push
mov
idivb
sahf
outsl
insb
mov
jb
ja
inc
sub
xchg
icebp
testb
movsl
xchg
cmc
adc
lcall
push
ds
add
fimuls
sub
fists
or
aaa
mov
adc
pop
jmp
jns
adc
xor
mov
add
cmc
outsl
loopne
jge
xchg
out
loopne
sub
push
xor
inc
jo
sub
sar
jmp
add
adc
fstpl
lock
dec
push
jmp
mov
scas
sbb
popf
jne
rcrl
add
cmp
mov
outsl
jae
stos
dec
and
stos
push
and
out
fcmovb
add
out
nop
loope
and
dec
out
nop
jl
push
sbbl
push
push
dec
xchg
jge
lret
test
pop
mov
mov
outsb
mov
jae
addb
pusha
sub
sub
xadd
pop
xchg
mov
adc
xchg
ljmp
and
sar
mov
or
xchg
sbb
mov
dec
sbb
negb
cmpb
pop
ja
mov
leave
cmp
xchg
or
sub
mov
sbb
out
int3
push
mov
inc
inc
push
insl
jns
das
inc
mov
jo
mul
jno
mov
adc
and
adc
mov
lds
lock
pop
push
insb
inc
inc
xor
mov
add
mov
hlt
or
mov
and
dec
pop
or
xchg
pop
cltd
or
adc
in
movl
sbb
jo
add
mov
or
mov
lea
mov
int3
or
mov
inc
mov
sbb
inc
loop
xchg
insl
xor
mov
pop
sbbb
lods
jmp
clc
pop
sbb
push
adc
mov
dec
pushf
lahf
xchg
js
pop
mov
aam
sbb
cmp
pop
mov
add
adc
nop
out
fisttps
aaa
add
repnz
aaa
mov
fucomi
mov
lods
sbb
mov
and
test
xchg
pusha
repnz
jge
adc
or
loop
inc
and
sbb
inc
out
mov
test
mov
mov
xor
push
call
rclb
in
and
or
add
out
gs
mov
jl
cmp
pop
sub
sbb
sti
sbb
out
and
fs
lods
cmpsb
sub
push
mov
pop
in
rcrl
outsl
pop
call
adc
stc
xchg
test
ss
xchg
or
sbb
or
cld
push
imul
loopne
repz
cmpsl
or
in
outsl
jge
jecxz
jmp
push
ja
out
xchg
jecxz
mov
inc
repz
or
gs
add
push
arpl
and
mov
pop
fsubrs
adc
mov
pop
lods
xor
fistpll
xchg
xchg
mov
xchg
jne
mov
cmpsb
bound
cmp
dec
hlt
jbe
add
sub
ljmp
cmp
add
mov
add
out
cmp
mov
inc
stos
nop
aas
stc
push
cmpsb
add
or
shl
clc
mov
mov
bound
mov
xchg
int3
in
push
out
mov
xlat
shll
cmp
or
scas
mov
ss
xchg
fstps
mov
pushl
pop
or
ds
outsl
fs
ret
mov
and
imul
sti
mov
or
or
mov
add
mov
inc
add
jo
andb
push
lret
mov
lret
add
aad
or
in
mov
dec
andb
inc
iret
xor
adc
and
shlb
outsb
or
mov
adcl
pop
loop
in
add
cltd
insl
daa
ja
or
ss
pop
cli
out
ljmp
fisubrl
push
pop
and
orl
jmp
and
xchg
in
fnstenv
lahf
xchg
pop
sbb
add
add
fcomps
ljmp
mulb
and
clc
movsl
pop
cmp
ret
mov
pop
or
xchg
subl
jae
mov
pop
inc
ljmp
push
add
mov
mov
loope
xorl
fildll
js
imul
dec
int
cmc
add
inc
xor
pop
ja
negb
das
adc
imull
push
sbb
subl
rcll
stc
mov
stc
or
push
outsb
push
and
cmpsl
repnz
push
movsb
jno
push
xchg
mov
push
jmp
mov
movsl
or
xor
inc
inc
push
outsl
into
movsb
shrb
mov
mov
aaa
xchg
xlat
mov
in
lods
and
sub
jge
push
mov
jns
adc
test
add
js
mov
les
inc
scas
or
mov
mov
push
add
stos
loopne
dec
loope
lock
rorl
lea
and
lea
jne
cmp
or
imul
cmpsl
lds
cwtl
popa
stos
jle
xchg
mov
add
int3
jbe
std
push
xchg
add
jge
mov
sbb
nop
in
or
arpl
stos
outsl
aam
or
mov
out
dec
adc
call
in
push
shlb
pop
jg
mov
xor
in
in
cmp
test
dec
lea
adc
popa
popa
fnstcw
fbstp
sbb
vmwrite
jle
shlb
push
or
cmp
test
dec
cmc
jo
sub
int3
jle
call
orb
adc
fdivrs
cmpsl
imul
aaa
jl
mov
mov
jno
aad
jmp
sub
sbb
testl
fstl
mov
cmp
sti
test
mov
repnz
sbb
sub
and
cmp
in
shrb
jmp
rcll
xchg
mov
mov
test
nop
enter
inc
push
inc
xchg
mov
leave
mov
dec
cmp
xor
adc
push
cmp
cmpsb
lret
jl
inc
dec
addl
xchg
jbe
cmp
popf
test
imul
cmpsb
lret
and
push
out
add
mov
sub
mov
add
data16
mov
stos
aaa
pop
loop
inc
and
dec
addb
fbstp
pushl
add
sti
ja
dec
inc
push
jae
rolb
mov
movsb
iret
les
mov
jp
hlt
shll
cmp
addb
add
loop
cmpsb
je
inc
jmp
or
or
pop
mov
add
in
rolb
sbb
xchg
pop
ljmp
jg
xor
cs
sub
ljmp
cld
push
adc
ljmp
pop
es
push
jb
in
sub
pop
add
mov
lock
inc
into
dec
sub
test
and
sbb
push
das
mov
xor
popa
mov
popa
je
add
aas
inc
ret
push
xor
cld
jp
pop
mov
out
hlt
sub
dec
push
insb
cmc
adc
loope
lret
inc
and
mov
push
jp
daa
ss
cli
sub
mov
xchg
push
fisubrl
jge
aam
inc
addr16
jne
test
mov
add
out
ret
xchg
test
aaa
push
icebp
lea
ds
out
jae
inc
fstpt
jno
mov
push
rorb
mov
in
or
scas
xorl
cmc
or
ss
and
roll
xor
jnp
incl
lds
lods
mov
inc
dec
inc
mov
loopne
jl
jae
xchg
into
sub
test
sbb
add
lods
loopne
or
adc
pop
and
aas
movsl
inc
xor
es
movsl
loop
in
pusha
ret
mov
lods
adc
stos
xchg
push
clc
mov
jns
mov
jle
jge
and
cwtl
in
ja,pt
dec
jo
das
push
cmp
mov
mov
fistpll
ficoml
arpl
mov
xchg
jg
scas
xor
mov
inc
enter
je
add
movsb
mov
push
pop
or
scas
or
sbb
mov
cltd
sub
and
pop
jle
pop
jbe
jge
xlat
dec
mov
pop
int3
xchg
cltd
mov
mov
sarb
inc
ror
lock
ljmpw
pop
mov
call
lds
inc
cwtl
and
fs
push
cmp
or
mov
cld
pop
test
or
loop
outsb
fistl
outsl
adc
int3
mov
stos
orl
push
sbb
shrb
pop
mov
jmp
xor
loope
add
mov
ja
jp
ljmp
cmp
xchg
jge
xor
inc
sub
pop
jmp
or
jg
sbb
mov
dec
mov
test
pop
push
jmp
je
dec
mov
popf
add
vandps
fsubrl
rcr
mov
cli
jmp
mov
dec
or
loopne
andb
aad
aam
ret
cli
ret
hlt
mov
and
cld
movsl
out
in
aaa
dec
add
mov
or
sub
in
jo
pop
fbld
adc
xor
sub
outsl
scas
mov
sbb
push
lods
mov
push
ss
loopne
clc
dec
sbb
cmp
mov
je
stos
fld
inc
jne
negb
repz
mov
xchg
add
iret
inc
inc
mov
adc
imul
xor
in
sub
je
mov
lahf
cwtl
loop
mov
adc
lret
xchg
and
mov
mov
xchg
inc
ficompl
add
ret
jge
xlat
mov
pop
cwtl
es
ja
inc
jecxz
cwtl
cmp
xchg
mov
stos
push
fadd
sbb
test
dec
mov
and
inc
push
call
mov
cld
add
and
add
lret
stos
addr16
pop
mov
stc
in
or
xlat
insl
mov
es
push
push
repz
xor
dec
xchg
mov
and
cmp
lahf
inc
add
std
xchg
les
shll
adc
adc
dec
adc
push
push
jge
dec
dec
sub
jecxz
mov
sbb
daa
loopne
lods
inc
mov
inc
rcr
xchg
or
sbb
imul
icebp
inc
xor
jns
or
jae
cmp
and
enter
jne
push
cld
push
rorb
fs
xor
mov
or
loopne
mov
add
pop
fadds
test
std
mov
out
cmc
out
cmp
mov
stos
adc
es
add
add
sub
sub
lcall
lcall
inc
add
add
fiaddl
jl,pt
out
inc
jge
insw
arpl
or
call
iret
adc
adc
xlat
mov
ret
sbb
out
das
mov
cmp
sbb
imul
shlb
leave
and
pop
aaa
or
dec
mov
clc
icebp
push
push
inc
outsl
add
les
imul
jb
andl
xchg
jb
bound
or
out
push
adc
pop
lret
xchg
and
push
aad
shl
in
jecxz
and
inc
aam
outsl
push
xchg
xchg
test
ja
incl
or
cmp
push
test
ja
mov
loop
cmpsb
jne
mov
pop
adc
cmp
push
pusha
js
in
inc
ss
sbb
inc
sbb
mov
sbb
fildll
adc
push
clc
push
mov
ret
push
add
xor
dec
popf
into
xchg
dec
test
out
jno
roll
jl
jbe
or
and
adc
into
bswap
fadds
addb
add
out
orl
into
xchg
cld
and
out
mov
fisubs
ja
fsubl
rol
add
push
pop
in
add
jp
pop
test
adc
push
sti
cmpsl
ret
adc
dec
sbb
sub
mov
loop
add
dec
push
sbb
push
xchg
andl
or
xchg
lret
out
add
push
jbe
mov
movsl
psllw
add
add
jge
sbbl
and
cld
in
adc
and
mov
hlt
pop
inc
inc
inc
dec
jp
mov
shlb
inc
push
insl
mov
or
dec
sub
mov
add
aaa
mov
jl
mov
into
adc
int3
ret
clc
fwait
outsl
cmpsl
or
mov
loopne
cmp
or
add
frstor
cmp
popa
push
add
pusha
dec
shll
push
inc
inc
xor
lret
inc
and
dec
inc
faddl
add
push
addl
shr
add
xchg
stos
push
sbb
jp
or
sbb
stos
pop
pop
push
add
rol
xchg
push
out
push
shrb
push
push
ja
add
repnz
sbb
push
jne
inc
bnd
push
pop
add
dec
stos
mov
xor
pushw
dec
dec
dec
enter
sar
or
jbe
push
test
inc
inc
and
xchg
hlt
sub
ret
xchg
adc
aad
push
nop
cmp
sbb
xchg
add
jo
cmp
push
jne
dec
popa
addr16
hlt
xor
mov
jge
mov
sbb
rcrl
nop
daa
cmp
add
xor
mov
push
push
sub
iret
add
add
stos
outsl
mov
es
mov
mov
daa
imul
mov
gs
xchg
mov
and
sub
test
inc
add
mov
add
sbbb
lock
mov
add
fwait
pushl
ret
cmp
cltd
xor
sbb
and
push
add
jbe
mov
dec
pop
and
ficomps
incb
je
xor
incl
adc
cmp
shlb
adc
xor
or
call
push
mov
push
in
mov
test
cmp
and
out
mov
adc
notb
out
test
aam
imul
pop
push
dec
daa
adc
fsubrl
sub
test
es
adc
mov
out
inc
push
xor
push
or
mov
popa
popf
aad
filds
and
aas
add
lods
jne
jle
fdivrs
cwtl
mov
js
cmpb
sub
inc
mov
mov
cmp
lds
pop
fdivrl
xor
mov
incb
add
sti
or
mov
ret
push
fdivl
ret
xchg
fmuls
cmp
xor
shrl
and
add
mov
pop
adc
sbb
or
je
adc
lcall
sbb
int
fists
xlat
ja
jp
adc
push
ljmp
rcrl
inc
mov
in
outsl
jne
test
fdivp
out
les
adc
cli
or
lea
mov
in
mov
fwait
mov
les
inc
js
sub
push
rorb
inc
loop
movsl
xlat
jmp
dec
leave
inc
adc
test
rcrl
call
and
js
add
xchg
fildll
mov
add
pusha
mov
mov
pop
push
lock
add
jmp
adc
mov
jno
adc
adcl
adc
cmp
orb
rcrb
dec
scas
push
jecxz
in
adc
jbe
daa
or
lods
pop
pop
mov
dec
clc
or
sbb
sbb
pusha
cltd
stos
pop
ljmp
call
mov
mov
rcl
jnp
popa
mov
fildl
call
movsl
or
jo
vcvttps2dq
cmp
or
adc
or
push
cs
sub
rcr
add
fisubs
rep
fsub
sbb
mov
jne
pop
clc
jl
add
adc
jnp
mov
cmp
loopne
fidivrl
lods
xorl
in
mov
pop
or
xor
lcall
out
call
push
mov
mov
lods
sbb
push
fcmovu
push
cli
adc
outsb
jns
aas
test
add
lea
mov
cmpsl
popa
xchg
jo
cmp
pop
sub
fcomps
mov
cmp
jl
outsl
inc
mov
xor
insl
sahf
jl
pop
cmpsl
mov
adc
cmp
mov
inc
and
lods
test
dec
aam
std
popf
fidivl
add
xor
ds
sub
mov
pusha
jl
adc
test
mov
jmp
lock
inc
and
mov
das
loope
testb
lods
mov
test
cli
mov
fildll
sub
shrw
pop
pop
sub
fistps
cmp
in
xlat
outsl
dec
call
ret
rcrl
orb
fisttps
or
inc
shrb
in
jle
daa
movsl
mov
inc
mov
add
insb
sbb
out
lea
add
dec
mov
xor
fisubrl
shr
add
mov
and
mov
pop
adc
fwait
cmpsl
push
in
cs
lahf
cld
lcall
mov
jmp
inc
clc
mov
jae
shrb
jbe
mov
lods
movsl
je
pop
mov
aaa
xor
or
ljmp
clc
shll
stos
adc
mov
adc
mov
lret
adc
aam
outsl
sbb
add
dec
insl
mov
mov
push
mov
jbe
js
loop
pop
add
pop
jno
pop
mov
add
adc
shlb
es
dec
adc
or
iret
into
jne
imul
test
mov
add
notl
addr16
sbbb
mov
inc
add
clc
mov
mov
jo
push
push
add
jnp
icebp
call
pop
iret
std
cmp
ja
lds
cmp
sub
pop
cltd
aam
and
dec
or
xor
imul
xchg
pushf
fcoms
pop
out
decb
mov
add
xor
or
nop
cmc
jo
stc
pop
mov
push
stos
jmp
pop
aam
dec
dec
sbb
int3
sbb
mov
popa
je
mov
ret
insl
cmpsb
iret
loopne
add
jmp
outsl
jg
xchg
adc
ljmp
fcoml
pop
add
popf
push
lret
out
add
cmp
cli
movsl
loop
lods
rcr
dec
dec
adc
loop
push
int
lcall
push
and
fcoms
mov
xchg
outsl
int3
dec
jb
push
and
jno
pushl
mov
scas
cli
pushl
push
jb
add
shlb
inc
repnz
and
add
push
push
mov
mov
or
inc
inc
cmp
subl
xor
pop
aam
mov
mov
imulb
cmc
jmp
or
movsl
xor
xchg
pop
jecxz
xor
adc
pop
mov
inc
push
iret
push
dec
xchg
test
in
sbb
ja
xor
jp
push
lock
fbstp
mov
or
ficompl
shl
pop
and
inc
stc
pop
scas
das
rcrl
test
fs
and
fwait
sbb
jle
icebp
adc
adc
cmp
hlt
imul
jecxz
scas
lahf
xchg
mov
mov
cs
pop
testl
cmp
cld
lock
jb
mov
lret
mov
scas
push
add
inc
test
and
jb
rorb
fwait
leave
dec
int
pop
pop
add
clc
cltd
in
mov
aam
shr
jmp
aam
fildll
fimull
imul
mov
push
pop
sub
shrl
cmp
jg
sbb
in
test
push
xchg
std
pop
pop
push
dec
jns
mov
dec
movsl
test
push
push
jge
fistps
and
inc
inc
or
adc
mov
jne
btc
fsubrs
loopne
loop
mov
sbb
fistps
jecxz
pop
sarl
iret
dec
pop
inc
push
ret
fwait
add
rolb
push
jbe
out
orb
shr
mov
sbb
adc
shrb
outsl
mov
pusha
inc
fnsave
test
sub
or
fistps
xor
mov
test
scas
das
lock
jbe
xor
inc
xchg
std
or
or
push
test
pop
fidivl
jns
xchg
aaa
fsubs
stos
jne
dec
rcr
je
mov
in
idivl
lods
xlat
xchg
xor
sbbl
and
jg
ja
pushf
mov
enter
xchg
les
loopne
sahf
mov
mov
ret
lds
cmc
loope
lret
lahf
jbe
xorb
mov
cwtl
js
mov
call
xchg
cmp
mov
push
lods
sbb
xor
and
mov
shl
xor
aam
push
call
mov
ret
dec
dec
pop
gs
dec
pop
or
aas
test
pop
push
jmp
pop
add
pop
mov
lds
mov
fistl
push
or
sub
or
aaa
iret
inc
mov
rolb
leave
repnz
pop
sub
shr
pop
mov
jle
xlat
cmp
icebp
fldt
std
xchg
cli
dec
shr
mov
adc
adc
jne
sub
fs
sbb
lds
lds
jecxz
inc
sub
inc
aad
adc
mov
pop
jbe
jae
inc
xchg
vcmpsd
xorb
xchg
mov
xchg
mov
lock
jecxz
in
loop
das
mov
jle
mov
stos
cli
mov
mov
cli
push
inc
jb
notl
xchg
sub
mov
fildll
insb
pop
inc
insl
mov
fldt
icebp
mov
xchg
mov
adc
inc
pop
mov
cmc
pusha
xor
add
pop
pop
mov
pop
cli
or
fwait
negl
loope
icebp
sbb
cmp
ljmp
mov
ret
push
sti
stc
mov
pop
pop
sbb
icebp
push
enter
inc
mov
out
jo
inc
inc
test
dec
or
out
into
xchg
pop
clc
test
mov
les
push
dec
adc
or
ljmp
fidivrs
cmp
orb
sbb
std
mov
xcrypt-cbc
cmpsl
push
xor
scas
leave
dec
push
add
mov
and
jbe
push
or
xor
arpl
clc
test
add
and
mov
das
mov
xor
add
or
out
add
repnz
adc
mov
pop
test
mov
daa
push
hlt
sbb
sub
add
inc
out
dec
sbb
fcompp
add
add
pop
pop
pop
pop
aaa
mov
imul
stos
fcomps
xor
push
test
adc
cmp
adc
push
jmp
xchg
out
adcb
out
dec
push
scas
and
popf
call
dec
dec
sbb
jns
cmc
dec
hlt
lea
pop
std
gs
rolb
or
adc
mov
jmp
test
inc
pop
sub
sbb
mov
pop
mov
add
in
out
cli
adc
stos
xchg
stos
inc
sarl
adc
sbb
sbbb
out
loop
and
adc
add
mov
jge
jg
xchg
push
lcall
pop
adc
test
inc
and
adc
mov
dec
or
test
inc
pop
insb
pop
jl
loopne
clc
call
pop
xchg
pushf
cs
jp
in
push
xchg
xlat
mov
push
fnsave
xchg
push
into
cmp
cli
pushl
or
inc
cmp
inc
cmpsl
shrb
add
insl
fldl
pop
mov
add
xchg
out
clc
dec
movb
mov
daa
xor
inc
cmc
aad
pop
adc
arpl
mov
pop
loop
push
cs
sbb
cmp
shrb
pop
xchg
popf
orl
cltd
sti
mov
jno
mov
or
adc
fstpt
call
jle
push
incb
imul
mov
in
pop
mov
push
jb
decl
cmp
leave
mov
xchg
pop
pop
mov
and
mov
in
mov
int3
sbb
fnsave
cltd
mov
add
dec
test
icebp
and
xor
sti
mov
je
out
jbe
imulb
push
inc
add
jg
cmp
dec
pop
clc
lahf
or
icebp
mov
das
in
aam
je
mov
push
mov
cmc
inc
js
hlt
idiv
mov
push
cmp
sbb
dec
fisttps
adc
adc
cltd
out
fmuls
int3
adc
jecxz
pop
lcall
jg
pushf
mov
sbb
xchg
sbb
sbb
call
jae
and
xchg
daa
addl
lcall
imul
mov
test
lock
push
loopne
cli
inc
or
xchg
leave
popa
cltd
inc
add
fistpll
iret
xchg
popf
jl
ja
jbe
test
mov
or
cmc
in
mov
jge
mov
hlt
and
outsl
or
sub
pop
mov
add
sti
or
jns
adc
outsb
test
push
or
pop
pop
pop
push
jg
mov
mov
aas
cmp
inc
inc
icebp
inc
jmp
andb
je
mov
js
loopne
mov
and
cmp
pop
jae
scas
cwtl
inc
aad
icebp
sub
out
pop
jg
push
cmp
mov
jmp
insb
negl
jo,pn
arpl
out
cld
or
mov
out
lss
mov
adc
push
mov
or
mov
jmp
roll
pushl
jno
shll
inc
into
je
jmp
add
icebp
cs
shrb
fstpl
inc
lgs
mov
lret
pusha
ja
or
ja
je
mov
add
in
imul
sbb
inc
dec
jno
xchg
pop
cmp
mov
mov
lret
rclb
enter
mov
loope
xor
jle
pop
sub
pop
sub
lea
pop
je
fdivrl
mov
xor
add
movsl
sahf
popa
outsb
subl
adc
xchg
out
orl
pushl
add
cmpsb
loop
out
jb
jne
and
lcall
jl
inc
adc
pop
ds
jo
out
and
rcrb
or
je
and
addb
outsl
aaa
fadd
and
or
adc
mov
adc
mov
adc
insl
mov
add
adc
push
imul
or
orb
adc
add
mov
fsubrs
add
add
pop
inc
inc
mov
nop
mov
orb
and
fimuls
inc
inc
add
or
push
mov
and
or
adc
add
fcmovnu
aaa
mov
and
mov
and
pop
add
fldt
or
and
adc
and
fwait
ja
into
xor
adc
nop
mov
adcb
and
pop
mov
push
push
inc
inc
or
fidivrs
adc
inc
adc
addb
mov
out
inc
add
imul
push
scas
mov
pop
xor
adc
or
sbb
lods
fstpl
jns
insl
enter
jnp
insl
imul
fisttpl
ficoml
adc
cmp
jb
and
or
sahf
or
subl
or
fimuls
out
scas
mov
imul
es
or
mov
adc
mov
or
mov
jae
xchg
and
aaa
and
andb
or
adc
sbb
xchg
pop
jg
pop
imul
push
insl
test
or
aaa
add
cmp
popa
imul
test
mov
imul
iret
movsb
mov
inc
lods
insl
insl
xor
add
mov
lock
sbb
or
mov
vfnmadd213ss
ret
lods
popf
rcl
insb
shll
lahf
add
stos
cmp
or
xor
xlat
ss
insl
rcll
or
mov
jge
inc
std
pop
add
inc
add
pop
xorb
and
inc
leave
lods
sbb
sub
sub
push
or
imul
or
lds
test
or
inc
lods
mov
mov
adc
lods
sub
stos
test
mov
addr16
jnp
mov
sbb
or
mov
add
stos
lods
push
fisubrs
mov
pop
xchg
nop
adc
pop
push
lahf
or
push
mov
or
dec
fdiv
add
add
mov
or
dec
ds
sbb
inc
sbb
aaa
les
fs
or
lods
inc
das
ss
and
mov
jle
aas
add
sub
mov
repnz
adc
addl
push
pop
iret
out
or
out
cmp
mov
pop
imul
andb
push
and
pop
or
adc
imul
sahf
pop
imul
lods
xor
and
flds
rorb
add
jl
icebp
test
and
dec
lods
cltd
lcall
imul
das
sbb
push
or
xchg
sub
ss
rcrb
or
dec
mov
xor
arpl
or
push
and
sbb
adc
test
mov
js
push
xor
insl
push
inc
shll
adc
mov
jae
adc
mov
inc
adc
jle
inc
add
les
sbb
push
mov
adc
add
fwait
leave
push
xor
test
rorb
inc
in
out
push
xor
or
imul
add
pop
xlat
pushf
jg
sub
inc
rcl
adc
test
sub
inc
cmp
or
or
add
pop
mov
fmuls
or
mov
pop
sub
push
jp
shlb
inc
sbb
sbb
ja
sbb
jo
or
jb
and
pop
sbb
nop
and
pop
xchg
ret
aad
xchg
add
push
add
cmpsl
arpl
push
sub
pop
push
add
xchg
vxorps
insl
mov
fadd
cmp
push
pop
or
adcb
and
insl
lcall
adc
mov
sub
mov
mov
mov
pop
push
or
sti
pop
jns
int
pop
xor
aad
mov
jns
xchg
and
mov
add
subl
imul
dec
or
pusha
mov
add
lods
loopne
mov
add
sub
pop
jae
icebp
in
and
bound
push
sbb
test
pop
xor
mov
mov
mov
notb
add
or
push
enter
lcall
xor
call
insb
scas
test
lret
add
or
stos
sbb
pop
js
jl
dec
test
or
rorb
inc
mov
mov
ss
push
daa
nop
sbb
ret
out
add
push
add
push
jae
xchg
or
pop
scas
nop
add
inc
and
or
sbbb
xor
xor
imul
int
sbb
jno
add
shlb
gs
or
into
cmpsl
mov
inc
and
inc
jo
cltd
xor
xchg
sbb
xor
test
push
xchg
ret
mov
fldenv
add
jo
xchg
dec
push
rorl
nop
cmp
push
inc
int
andl
mov
mov
mov
pop
or
mov
xlat
pop
cmp
mov
subl
mov
cltd
xor
cmp
mov
jle
lods
xor
xchg
pop
clc
mov
inc
add
int
ret
fucom
adc
shl
sbb
imul
and
sub
dec
push
inc
jae
divb
push
xchg
mov
add
andb
sbb
lcall
fs
scas
in
adc
xor
add
fisubl
push
push
imul
or
jo
dec
push
lods
xlat
cld
jmp
xchg
and
pusha
mov
xor
push
xor
test
mov
int
pop
jo
mov
dec
sub
push
inc
inc
xchg
push
adcb
add
add
sbb
xor
inc
cli
inc
std
ljmp
lds
das
jno
adc
popf
rol
push
bound
jmp
out
add
outsb
mov
inc
adc
mov
push
lcall
xchg
inc
movsl
and
fadds
mov
adc
cmp
clc
leave
fwait
ret
push
or
add
add
decl
jp
and
push
jmp
fmuls
jne
enter
call
lods
xchg
pop
mov
mov
mov
xor
lock
loop
hlt
pop
nop
or
cmp
scas
mov
pop
add
push
cmp
add
rolb
xor
decl
sbb
add
es
imul
repz
push
ret
mull
rorl
decb
mov
roll
jmp
jl
add
data16
push
add
dec
das
mov
pushf
and
dec
test
inc
add
xorl
aas
adc
mov
inc
xlat
rep
cmp
push
xlat
push
ds
add
loopne
mov
outsl
sub
jne
push
and
cmp
xchg
mov
mov
stos
jle
dec
cmp
movsb
sbb
push
push
jb
pop
rol
stc
and
or
andl
out
add
xchg
insl
insb
pop
jae
ss
or
outsb
js
sub
add
mov
decl
sbb
push
mov
sbb
aam
dec
int3
ret
xchg
ret
sub
pop
pop
add
pushf
cli
dec
int
xchg
and
lcall
jg
pop
test
push
mov
lahf
add
lahf
mov
xchg
loope
add
jg
and
mov
xchg
cmp
dec
xchg
mov
jbe
mov
aas
sub
jne
sub
in
aaa
push
sbb
and
loope
and
pop
mov
lret
xchg
xchg
adc
mov
fistpl
add
lret
adc
adc
outsl
aad
or
add
icebp
push
call
cmp
xor
mov
ds
inc
xchg
add
call
sub
cltd
push
cmpsb
xchg
lahf
pop
outsl
add
fidivrs
movsb
and
das
loope
fdivr
repz
xor
mov
push
test
mov
daa
int3
rorb
adc
fs
inc
mov
inc
inc
out
add
das
jle
adc
inc
std
adc
pusha
inc
scas
ret
mov
dec
dec
inc
cmpl
in
lods
pop
add
insl
add
fsubr
or
push
or
mov
loop
pop
sbb
push
mov
mov
adcb
mov
jp
mov
daa
inc
gs
aad
and
pop
test
xor
cmp
decl
shll
insb
mov
or
or
push
cmp
lcall
push
push
je
adc
mov
jg
adc
inc
jl
test
add
add
push
mov
pop
test
ret
inc
outsb
xor
sub
adc
pop
lock
lock
pop
ror
push
enter
mov
jge
lahf
jg
cmp
fmul
nop
repz
loope
subb
or
mov
mov
push
push
pop
push
popa
sti
nop
call
neg
jg
outsb
adc
cmc
rcrl
and
sub
and
xor
mov
in
sbb
ja
fnsave
in
mov
add
inc
mov
outsl
fnstenv
jns
mov
iret
adc
in
inc
mov
and
adc
ljmp
pop
xchg
push
sbbl
sbb
jg
pop
adc
cmp
and
adc
test
call
pop
dec
jl
test
pusha
and
xor
pushl
and
bound
in
fs
out
add
lcall
popa
mov
call
call
sbb
in
xchg
mov
push
add
jge
das
fcoml
gs
popa
add
movsl
lret
or
mov
inc
js
arpl
inc
mov
sbb
and
jno
mov
ss
sbb
out
iret
mov
xchg
aam
jbe
xor
icebp
dec
pop
xchg
fidivl
inc
and
jae
pop
push
mov
or
push
repnz
fcmove
and
or
std
dec
sar
js
dec
enter
inc
cmc
pop
inc
push
xchg
fadd
xor
push
lea
add
cmovae
int
or
mov
pushl
dec
pop
mov
or
or
in
add
adcb
push
mov
add
mov
test
mov
xchg
stos
push
mov
leave
loopne
in
xor
arpl
inc
dec
popa
cli
movsb
in
jp
andl
call
pop
push
lret
scas
xchg
sub
lea
bnd
imul
xor
xchg
call
imulb
inc
bound
std
xchg
add
adc
andps
pop
mov
push
or
loope
xor
mov
fildl
ljmp
sub
lock
cmpb
ljmp
pop
and
outsb
sub
jp
mov
sbb
cmpsl
push
pop
aam
mov
nop
cld
sbb
mov
mov
ljmp
push
xchg
xorl
push
fwait
xchg
fistpll
inc
pushf
sbb
inc
or
jl
stos
and
rcrb
lret
stos
jg
aam
jno
lock
inc
sbb
rolb
rcrb
cmp
push
xchg
dec
push
jle
add
jmp
or
sub
test
in
pop
sahf
test
adc
and
dec
and
or
sub
in
sar
dec
mov
sbb
mov
cmp
out
dec
dec
sbb
test
pusha
out
addr16
xchg
stos
cld
mov
scas
push
push
mov
testl
pop
fs
adc
enter
fstpt
je
loopne
in
rcl
fdivs
jl,pn
rclb
movsb
jo
and
push
fucom
ret
aam
pop
pop
xor
pushf
jmp
popf
dec
shlb
stos
xor
ss
out
mov
sbb
das
pop
mov
shr
sbb
addb
cmp
push
lcall
adc
pop
cmp
mov
fildl
inc
negl
adc
daa
sbb
sti
pushl
mov
les
andb
and
aad
mov
mov
ds
or
lock
mov
stos
pusha
dec
xor
xor
mov
inc
xor
fistpll
or
aam
push
into
add
lods
sbb
push
cmp
push
sbb
cmp
movsb
add
jns
sbb
pop
or
das
sub
pop
loop
pop
add
sub
aad
add
daa
sub
je
add
xlat
adc
data16
add
mov
pushf
rolb
lcall
ljmp
mov
sub
mov
xor
shrl
pusha
xchg
shrb
sahf
mov
add
push
ds
jo
cltd
stos
mov
inc
fidivs
test
int3
daa
std
cltd
mov
repnz
mov
xor
clc
in
pushl
sbb
enter
std
adc
or
ja
push
mov
pop
push
inc
inc
push
gs
lcall
xlat
and
and
lods
std
rcrb
add
cmp
inc
bound
pop
jns
jo
push
xor
pop
filds
jo
sub
sub
xchg
sahf
xor
divb
div
test
mov
dec
adc
sbb
lret
lock
imul
jp
inc
fildll
mov
mov
arpl
fwait
jae
adc
lock
aaa
mov
jbe
into
and
cs
popl
mov
call
xlat
inc
rorb
adc
inc
mov
lock
ja
mov
jae
dec
fistps
xchg
sub
aaa
xchg
jmp
and
inc
nop
mov
cmp
or
ljmp
ss
arpl
push
add
aaa
inc
loope
jg
sub
mov
dec
cli
mov
mov
inc
and
rorb
dec
stos
cmp
push
or
cli
fildll
idivl
test
aam
or
loopne
cmpsb
pop
jl
out
popa
push
inc
and
pop
dec
xchg
xchg
xor
mov
fistpll
mov
pop
movsb
in
push
pop
push
outsl
lods
cmc
inc
lahf
dec
push
mov
jg
and
loop
pop
push
sbb
insl
sti
inc
or
xor
mov
mov
fisubl
xchg
cmp
in
fimuls
mov
std
rolb
lods
call
leave
xor
adc
fwait
adc
inc
xor
mov
mov
adc
daa
cmpl
or
jecxz
and
jb
add
adc
adc
jo
iret
cmpsl
fnop
inc
xlat
popa
mov
sbb
mov
movsb
in
adc
scas
jne
or
outsl
cld
ret
arpl
sub
cltd
sub
lock
cwtl
mov
sub
and
pop
push
adc
push
adc
push
mov
jecxz
into
mov
pop
iret
js
fcmovu
push
pop
add
mov
dec
and
decb
cmp
jmp
sbbl
xchg
stc
mov
call
mov
enter
cmp
sub
fdivr
pop
ficomps
pop
xor
nop
sbb
lret
push
add
lcall
xor
sbb
out
andl
jmp
pop
mov
pop
add
pop
mov
jmp
xchg
int
push
fwait
push
add
inc
lock
mov
in
fs
movsl
dec
mov
cmp
inc
ficoms
pop
mov
xlat
and
mov
lds
adc
pop
pop
jmp
add
pop
inc
loop
sub
cmpsb
ret
outsb
xchg
ljmp
imul
test
jno
loopne
loope
cmp
sub
je
dec
pusha
mov
pop
test
pop
mov
sub
mov
mov
incb
push
jle
stos
dec
push
sub
or
lea
push
scas
cltd
sbbb
inc
dec
sbb
mov
cmpsb
or
out
sub
xor
push
lret
idiv
divps
push
push
sub
cmp
data16
sbb
pop
fmuls
andb
leave
xorl
aaa
shll
in
das
std
rcl
sub
and
add
push
xchg
cmpsb
shl
pushl
pop
jns
adc
push
push
xor
xor
loope
dec
jge
sbb
adc
mov
call
xchg
repz
sahf
adcl
test
mov
in
call
or
and
cmp
add
or
jns
mov
lahf
and
lods
mov
xchg
xchg
lcall
pop
mov
notl
rorl
subl
or
inc
pop
dec
dec
jo
push
push
cmp
hlt
and
dec
cmp
and
loope
mov
xchg
ds
test
adc
jg
popf
lahf
stc
fstpt
lds
ret
outsl
mov
push
cmp
sbb
aaa
mov
add
push
inc
mov
sbb
cld
push
ljmp
sub
aad
dec
movsb
push
pop
xor
lock
adc
xchg
lea
mov
or
les
shll
out
mov
push
cmp
inc
mov
scas
aas
and
jle
or
outsb
fsubrs
mov
adc
sbb
cmp
xor
pop
mov
not
sub
loopne
cwtl
cmc
mov
mov
popa
es
lret
sbb
in
adc
call
insb
cmp
movsb
ljmp
outsb
outsl
test
sbb
push
jbe
add
xor
cltd
push
fldt
es
je
insl
mov
dec
inc
jp
imul
stos
je
xchg
fimuls
mov
loopne
ss
mov
adc
cmc
or
push
jbe
ret
dec
sub
pushl
inc
lcall
test
insb
inc
pop
mov
dec
add
mov
and
xchg
cmpsb
mov
jnp
add
lock
or
jl
pop
daa
nop
test
mov
jbe
sbb
rorb
or
pop
pop
cwtl
push
mov
or
jb
jmp
dec
xchg
std
clc
outsl
int3
emms
and
jl
mov
insb
fwait
mov
in
push
lods
or
pusha
loope
jo
and
les
insl
loope
mov
pop
mov
ficomps
push
testb
mov
and
jb
and
inc
sbb
sti
fbstp
cmp
rorl
mov
jne
arpl
mov
jp
fiadds
cs
lret
test
fucomip
mov
outsl
clc
sub
test
enter
lods
jo
add
xchg
inc
mov
iret
shll
push
add
jg
mov
push
adc
lds
iret
and
insb
mov
jge
xor
mov
es
das
jb
jo
adc
jmp
shrb
cld
sub
hlt
in
or
stos
cmp
pop
dec
mov
fstpt
mov
shr
inc
xchg
les
cmp
sbb
repnz
dec
mov
pop
and
or
jg
call
lock
add
add
fisubrs
dec
mov
lods
scas
sbb
mov
cmp
repz
clc
mov
mov
sahf
cmp
stc
and
adc
sbb
ret
clc
add
jp
sbb
pop
xchg
outsb
sbb
lods
push
lds
mov
out
andl
mov
mov
sub
cmp
mov
mov
cld
movsl
insb
test
stos
aam
push
lahf
mov
jecxz
outsl
icebp
lret
sbb
xor
inc
or
dec
inc
js
hlt
decl
cld
dec
push
mov
bound
mov
incl
mov
cmpsl
jne
inc
pop
mov
and
es
paddq
popf
dec
jo
lods
dec
iret
ficoms
cmp
add
mov
fucom
movsl
mov
and
add
mov
sbb
cs
pop
mov
push
mov
jle
nop
fcompl
lea
sub
sbb
movsl
mov
add
fs
or
sbb
sbb
sbb
dec
sub
push
push
std
pop
fistpl
das
mov
fstpl
dec
lahf
sbb
or
add
or
fnsave
adc
movsb
lcall
sbb
repnz
mov
xor
jae
pop
adc
mov
cs
jmp
aas
mov
cli
loopne
call
outsl
iret
repnz
mov
loop
dec
mov
aaa
cs
mov
xor
fcomip
js
dec
lcall
sarb
cmp
cmp
shrb
pushl
jle
daa
addr16
cmp
or
cmc
mov
fsts
cmc
pop
xor
icebp
mov
xchg
shl
lds
xchg
insl
mov
mov
test
mov
pusha
cld
push
into
xlat
xlat
jmp
mov
call
dec
into
cmp
or
sub
sub
cmp
and
in
pop
pop
std
das
je
mov
fcomi
cmc
cmp
and
mov
enter
pop
or
xchg
icebp
ret
sbb
xlat
xchg
subl
xor
ror
mov
inc
pushl
inc
push
in
inc
sbb
push
loope
mov
xchg
add
mov
int3
fst
scas
add
lods
sbb
rep
in
loope
popa
jae
and
jg
xchg
adc
in
mov
std
rol
pop
push
mov
push
sbb
mov
sub
or
inc
inc
dec
pop
pop
inc
add
xor
xor
xchg
pop
cld
xor
jo
gs
das
pusha
shll
sbbl
push
test
or
xchg
ljmp
arpl
add
std
clc
jge
pop
cmp
es
inc
sbb
jmp
insl
ret
lods
outsb
mov
subb
fnstcw
sub
orb
hlt
std
sbb
push
inc
mov
lods
pminsw
insb
mov
bound
jo
sub
cs
lret
xchg
add
shrl
shll
je
out
sub
rorl
jp
add
push
es
ljmp
int
pop
imul
add
std
add
movsl
repz
pushl
pop
rolb
or
outsb
test
aam
addr16
addb
cmovno
push
add
mov
call
add
sub
insl
aas
push
dec
inc
jge
lods
enter
outsb
or
call
inc
xlat
sbb
les
std
mov
cwtl
rclb
sub
mov
xor
out
les
ret
cmp
jecxz
cmp
aam
lea
ficoms
in
icebp
mov
sub
adc
icebp
ljmp
jl
cmpsl
mov
push
xchg
jae
mov
adc
aas
cld
decl
pusha
cld
pushf
pop
stc
movsb
je
aaa
cmp
dec
sbb
push
fildl
push
push
cmp
pop
mov
or
sbb
adc
rolb
mov
dec
in
pop
aas
shrb
mov
and
and
andl
icebp
nop
add
sbb
movsl
lahf
out
shr
clc
inc
and
cmpsb
dec
aas
xchg
cmp
mov
or
imul
jo
and
mov
shll
xor
imul
inc
in
stos
pusha
movsb
fucom
or
jns
loop
leave
sbb
jbe
insl
dec
cmp
xchg
repnz
outsb
clc
ret
insl
mov
fsubs
ret
inc
je
sbb
test
icebp
add
lret
dec
les
add
jle
mov
fistpll
adc
inc
adcb
outsl
mov
nop
fwait
lods
jg
out
mov
sbb
or
lods
aaa
mov
icebp
in
mov
aad
or
sub
push
jae
inc
loop
sbb
ficompl
jmp
int3
push
pusha
cltd
jne
and
sbb
iret
xor
lods
jne
js
pop
pushf
cmp
mov
fisttps
sbb
ret
call
stos
xor
lret
cmpb
pop
pop
clc
or
pop
ret
and
mov
stc
ljmp
jl
ss
pop
scas
jge
xor
dec
and
add
add
add
je
and
pop
mov
inc
or
pop
mov
xlat
sbb
adc
push
or
jno
scas
add
jle
mov
icebp
test
sub
adc
fnsave
std
jg
loope
insb
sbb
enter
subb
outsl
mov
pop
not
je
insb
cmp
aam
sbb
dec
outsl
or
in
add
xor
mov
mov
les
jmp
imul
hlt
fmull
rol
loope
inc
add
mov
aam
xchg
ret
ss
add
cmp
mov
mov
stos
lea
in
test
roll
cmp
enter
mov
test
add
aaa
xor
adc
out
xchg
ret
adc
outsb
fs
inc
mov
push
mov
aam
pop
enter
orl
pop
std
adc
ds
or
adc
in
inc
test
adc
or
push
call
fnstsw
clc
xor
dec
and
jge
mov
pop
sbb
mulb
xor
insl
std
pop
test
inc
sbb
sbb
inc
fcmovbe
push
lahf
loopne
outsb
cli
cmp
in
or
mov
roll
pop
mov
outsl
aas
mov
lahf
inc
mov
popa
nop
fisubl
mov
hlt
das
mov
dec
or
inc
nop
sbb
data16
insl
pusha
lods
lret
and
dec
pop
and
inc
std
iret
mov
leave
adc
pop
sbb
decl
adc
or
outsl
out
jle
jg
in
dec
mov
icebp
out
mov
adc
adc
std
push
push
pop
mov
lock
adcl
imul
push
add
xchg
movsl
out
or
and
inc
shlb
std
je
shrl
fmull
mov
ljmp
dec
mov
clc
ljmp
mov
dec
sub
test
nop
mov
mov
sub
rolb
inc
push
cmp
mov
ljmp
clc
ds
push
mov
fdivrp
mov
mov
jle
cmp
js
aaa
sub
iret
cwtl
jno
mov
or
nop
sub
cmpsb
dec
or
and
icebp
cmpsb
insl
cmpsb
mov
xor
add
in
pop
dec
fidivrl
fucomi
sub
push
mov
xor
adc
mov
cmp
negb
shl
int
or
jne
pop
xor
sar
mov
bound
fwait
jle
movsl
fsubrp
jp
fistps
mov
fdivs
xchg
add
xor
sbb
lock
pop
push
or
outsb
cmp
out
jg
out
adc
ds
les
adc
sub
cltd
imul
pop
scas
into
dec
aad
call
pushf
mov
cmpsl
lods
shll
sub
test
js
adc
inc
sub
jae
inc
call
push
sahf
xor
test
inc
ror
clc
jns
out
mov
dec
jo
filds
popf
push
adc
cmp
pop
mov
xor
adc
add
dec
jge
xor
sbb
arpl
je
outsb
mov
outsl
clc
pusha
dec
repz
notl
lcall
jge
pop
fiadds
pop
pushf
data16
jmp
cmc
pop
mov
mov
dec
aaa
inc
adc
lea
gs
sub
sbb
mov
add
das
xor
mov
adc
pop
test
or
inc
ss
lea
push
rorb
xor
xor
xchg
mov
or
out
mov
les
int3
sbb
dec
add
fsubs
jbe
push
jge
push
mov
out
inc
sub
pop
out
jbe
cvtpi2ps
jb
adc
cmp
aaa
inc
ljmp
shll
call
addl
and
push
lcallw
imul
or
dec
xchg
and
push
call
xor
outsl
dec
pusha
fdivr
les
inc
mov
lds
jmp
mov
dec
insl
sub
lea
jl
mov
lds
mov
push
mov
in
fsubs
jno
int
and
mov
mov
mov
mov
and
lds
iret
mov
sbb
xor
popa
sti
loop
ljmp
jno
ss
mov
mov
movsl
push
push
add
icebp
jle
mov
in
mov
ss
fdivrp
in
shr
fadd
cmp
dec
pop
movl
jnp
pop
mov
dec
call
jnp
cmp
mov
xchg
mov
mov
sbb
mov
rcrb
lret
js
mov
imull
inc
jecxz
and
icebp
mov
ret
scas
cli
dec
lock
pop
push
enter
add
inc
jmp
jp
push
mov
sub
jno
mov
sbb
cmp
push
icebp
cs
mov
js
adc
in
fldl
imull
sbbb
jp
or
cmc
push
sahf
mov
inc
sub
xchg
sbb
jo
push
insl
push
pop
xchg
int3
testl
xchg
cs
sub
fwait
clc
lcall
dec
das
mov
pop
pusha
and
sbb
testl
aaa
mov
push
cli
inc
xor
inc
adc
pop
dec
push
sbb
mov
adc
or
ljmp
and
mov
or
dec
je
ss
sbb
in
mov
cld
mov
test
mov
pop
cmpb
pop
jp
fists
mov
scas
mov
cmpsb
out
add
mov
mov
inc
xlat
divb
cmp
mov
outsl
aaa
mov
in
inc
stc
mov
xchg
dec
mov
pop
or
loope
out
mov
aam
mov
mov
sarl
mov
das
add
push
leave
adc
lock
repnz
or
aaa
mov
and
push
int
xchg
stos
mov
sub
outsl
popa
add
cmp
cld
jge
filds
dec
inc
sbb
adc
daa
fistpl
mov
pop
pop
repnz
cmp
push
jbe
int
sub
mov
add
sub
mov
stc
fs
int
fdivrp
add
addr16
ror
movsl
dec
dec
dec
pop
icebp
mov
mov
mov
cwtl
adc
sub
add
dec
cmc
jp
dec
or
lods
in
incl
mov
and
adc
inc
adcl
sbb
dec
pop
mov
pop
pop
fcomp
ficoml
xchg
sbb
gs
shr
jb
and
add
adc
mov
cli
and
cmp
clc
or
pop
filds
iret
bound
inc
clc
mov
dec
movsl
cmp
push
mov
aam
loope
adc
movsl
call
dec
popl
adc
adc
aaa
fmuls
enter
jp
ljmp
and
pop
adc
out
aaa
inc
pop
push
ja
add
sbb
mov
adc
add
clc
pop
inc
daa
xchg
inc
outsb
cmp
adc
movsb
nop
xchg
popl
mov
incl
dec
jg
je
push
pop
cmp
pop
mov
hlt
stos
lahf
cmp
rcrb
pop
push
test
aas
sub
cs
mov
or
adc
inc
cmp
pop
xor
mov
mov
sbb
orb
push
insb
sbb
popf
or
or
or
jno
std
testb
mov
jo
sti
and
xchg
mov
jns
or
sbb
mov
dec
adc
gs
inc
or
jp
testb
das
or
dec
js
loope
mov
lea
xchg
jmp
cmpb
mov
pusha
xor
xchg
xor
fidivrl
push
pop
mov
xor
test
mov
rcl
adc
jne
push
jg
mov
sahf
or
pop
xchg
or
test
or
sarl
sbb
inc
mov
xchg
sub
aaa
xchg
xchg
inc
mov
or
cmp
add
xor
jge
fadds
or
xchg
mov
add
sub
cmp
adc
push
pop
fists
loopne
je
inc
int3
cmpsl
xlat
mov
pop
pusha
and
mov
push
mov
jnp
jecxz
mov
xchg
ss
inc
lods
push
xchg
mov
cmp
test
xor
pushf
and
and
mov
das
jae
ljmp
sbb
gs
lods
ja
lods
scas
xlat
cs
sub
add
mov
js
mov
mov
mov
cmp
xchg
and
push
xor
fists
gs
push
shrb
out
add
das
pop
and
jae
fstpt
push
je
inc
xor
iret
pop
mov
mov
xor
inc
test
pop
psubsw
cmp
mov
xchg
das
adc
ds
fists
fbld
jnp
rolb
push
pop
adc
inc
pop
jge
sbb
fadd
xchg
ret
pop
sbb
in
js
aad
mov
sarl
jmp
lds
cmpsl
daa
xor
decl
imul
mov
inc
mov
out
jne
adc
out
divl
sbb
or
cmpsb
pop
adc
add
in
clc
int
push
pop
sub
mov
fs
xchg
and
pop
add
jle
lcall
push
and
and
xchg
cmp
add
mov
jno
or
adc
cmpsl
aad
test
mov
ret
sbb
mov
inc
sbb
fstps
mov
inc
mov
aam
decl
std
mov
dec
add
fistpll
call
push
jle
pop
mov
out
mov
fildl
and
xor
add
inc
lds
sti
mov
sarb
or
xor
and
mov
arpl
adc
and
dec
imulb
cld
iret
add
push
lahf
ret
out
mov
clc
xchg
push
mov
mov
ljmp
xor
icebp
in
call
loope
clc
add
xor
ror
out
pop
mov
mov
sti
pop
sarb
ficompl
lods
mov
xor
cld
movsl
dec
lret
test
ret
mov
es
pop
and
out
movsl
mov
lods
add
pop
fcom
cmp
push
add
adc
lods
push
inc
adc
shll
das
lock
sbb
push
lock
or
stc
dec
subl
mov
inc
push
mov
push
sbb
shrl
fnsave
dec
pop
mov
push
nop
jl
sub
mov
loopne
dec
gs
mov
lcall
test
mov
add
xor
xor
push
adc
dec
xor
shll
mul
repz
pop
insl
ret
lea
jne
and
push
bound
jb
push
and
insl
inc
int
mov
cs
mov
jno
out
push
pop
shlb
insb
mov
mov
inc
adc
xchg
aas
out
mov
sbb
sti
ret
jmp
pop
mov
sbb
mov
xchg
fs
data16
inc
aas
hlt
movsb
add
sub
xor
or
test
int3
aas
icebp
push
jl
ret
inc
pop
mov
and
lds
shlb
das
pop
adcl
push
shrl
mov
mov
lret
ret
out
es
mov
xor
sub
es
push
ljmp
lods
xchg
mov
push
movsl
sbb
out
and
push
jle
data16
jmp
sti
jae
rcll
aas
lahf
data16
cmc
adc
push
cli
mov
mov
mov
out
fcmovnu
inc
movsl
call
adc
lds
ds
mov
stc
out
xor
or
clc
xchg
add
andl
mov
adc
leave
jbe
lods
or
insb
pusha
jb
lret
mov
movsl
adc
push
push
or
push
outsb
mov
ljmp
mov
mov
or
push
mov
dec
push
xchg
movsb
push
sti
jge
fists
ror
cs
xor
mov
add
pop
jo
adc
pop
adc
movsl
jecxz
fistpl
cld
cmp
inc
fwait
jbe
subl
jbe
jmp
jae
xchg
dec
or
add
cmpsb
push
xchg
push
pop
js
sub
mov
mov
movsl
aaa
or
sbb
cmp
daa
xlat
mov
push
test
jno
call
dec
xchg
insb
pusha
insb
test
shlb
fbstp
adc
sub
mov
clc
lods
and
outsl
fdivl
mov
push
inc
dec
jecxz
insb
ds
add
pop
sub
xchg
lods
inc
scas
mov
int
int3
cmp
add
out
mov
add
cltd
dec
rcrl
cmp
cwtl
orb
arpl
std
add
sbb
loope
ret
fldenvs
xchg
dec
pop
fcompl
and
pop
inc
add
and
orb
mov
sar
adc
ljmp
testl
push
xorl
fisubrs
inc
fldl
lret
sub
and
lret
shl
sbb
xorb
mov
aad
push
test
lret
inc
das
or
shll
scas
mov
pop
push
push
add
pop
in
lock
ficoml
repnz
aad
pushf
pop
aaa
aaa
pushf
add
cmp
hlt
stos
dec
jno
adc
aas
dec
cmp
movsb
add
inc
and
adc
mov
xor
mov
faddl
cli
out
or
stos
mov
mov
push
and
xchg
mov
jmp
jno
in
out
inc
mull
dec
sbb
repnz
fs
cs
popa
add
arpl
push
dec
das
jnp
insl
ja
fldl
push
inc
test
dec
jnp
xlat
jl
outsb
adc
mov
loop
xlat
jo
ja
add
sbb
pop
inc
das
scas
pusha
in
or
in
lods
pop
scas
push
popa
nop
loopne
push
div
mov
loope
sti
in
cmc
shl
xchg
test
call
jle
jb
int
and
jg
xlat
jmp
lcall
add
js
inc
adc
filds
push
or
push
push
or
sub
and
push
lock
inc
mov
jnp
lea
test
sub
mov
iret
mov
pop
cld
outsl
xor
and
add
xchg
sahf
xchg
sub
xor
shlb
pop
call
das
or
cmp
sarb
test
ret
shrl
add
mov
mov
xor
shll
xchg
clc
rol
xor
cmp
incl
shlb
imul
rolb
leave
cmp
xchg
inc
add
movsl
push
in
or
stos
lock
push
imulb
rcrb
pop
jge
mov
pushl
mov
pop
jo
sbb
mov
loope
cmpb
jo
loop
fmull
inc
sub
decl
sbb
jnp
cmc
or
pop
loop
pop
mov
inc
ds
sub
and
cltd
xor
pop
inc
mov
or
outsl
mov
je
stos
pop
sbb
ja
in
inc
push
aaa
das
or
icebp
sti
ss
shll
aas
jecxz
xorb
add
push
adc
push
sbb
cmp
rcrb
out
jmp
arpl
cwtl
ss
out
or
aaa
push
popa
sbb
mov
sub
movsb
mov
aam
and
cmc
pop
rol
aam
push
pop
lock
test
fists
adc
cld
sub
sbb
add
scas
mov
push
pop
fnstsw
hlt
shlb
push
arpl
jo
jge
or
fdivrl
filds
xor
lds
mov
or
negb
xor
insb
loope
std
idiv
outsl
mov
bnd
xchg
push
in
call
cmp
mov
icebp
pop
jne
mov
les
je
lock
inc
adc
mov
rol
test
jae
popf
mov
xchg
popa
loopne
xchg
out
fbld
rorb
add
pop
push
inc
pusha
fistpl
xor
pop
xchg
mov
adc
icebp
inc
pop
movsb
sub
sbb
stos
pop
mov
sti
je
lock
mov
adc
add
neg
mov
and
mov
cwtl
je
inc
xchg
aam
mov
adc
ret
cltd
stos
sub
fwait
pusha
push
push
out
test
sub
push
pop
shlb
imul
sbb
add
push
incl
xor
fcoml
mov
test
inc
sbb
xor
push
add
pop
aas
and
mov
fs
xor
movl
xchg
loope
fildll
mov
sub
out
pop
pop
ret
or
push
nop
mov
sbb
fwait
jbe
les
mov
mov
insb
fwait
ja
jb
or
sahf
aam
mov
stc
sub
and
adc
sbb
movsl
aas
mov
or
imul
jo
inc
mov
lcall
jns
mov
dec
test
sub
inc
ljmp
out
pop
mov
adc
pusha
shlb
into
outsb
xor
cmp
xor
in
mov
out
ficomps
cltd
sub
sbb
pop
pushf
add
cmp
outsb
in
inc
insb
jo
frstor
addb
adc
cs
sti
inc
xchg
jl
sti
ret
pop
rorb
mov
shlb
adc
sbb
gs
xchg
dec
orl
push
rclb
push
mov
and
xchg
in
fstl
inc
xchg
mov
out
add
inc
jg
fwait
pop
loopne
aaa
add
jmp
sbb
or
cmp
push
dec
das
notb
test
insl
lods
mov
push
dec
mov
mov
lahf
cli
cmp
mov
cmc
cwtl
push
cmp
in
cmp
pop
aad
mov
sub
dec
or
outsl
inc
jge
in
mov
add
loop
addr16
rcll
xor
div
jbe
inc
icebp
sub
lock
adc
outsl
popf
rcl
xor
add
xchg
cmp
jg
jg
mov
std
adc
sub
and
arpl
pusha
out
jle
in
nop
mov
sub
out
fcomip
sub
hlt
mov
mov
cmp
xlat
sbb
mov
inc
xor
xor
ja
test
jle
inc
mov
sbb
mov
std
ret
dec
dec
push
pop
js
add
mul
in
ds
mov
adc
test
xchg
scas
mov
sbb
dec
mov
cli
jne
lods
stos
mov
dec
mov
push
mov
stos
cld
jmp
dec
push
push
orl
push
decl
aaa
jge
lcall
imul
cmp
adc
adc
orb
in
call
outsb
cmp
push
shrb
push
dec
mov
add
sbb
ja
fistps
stos
push
mov
push
stc
leave
orb
mov
add
sub
ja
xor
aam
outsl
test
imul
jp
outsl
push
out
and
aas
and
imul
add
mov
pop
mov
jl
inc
loop
pop
pop
mov
stos
pop
pop
push
push
add
adc
sbb
push
pop
pop
test
mov
mov
adc
mov
add
mov
jb
inc
aad
sti
add
jb
cmpsl
arpl
jg
sub
jmp
or
out
add
inc
lret
cmp
jns
jmp
fsts
cmpsl
imulb
das
cld
mov
mov
or
gs
jge
inc
insl
push
pop
push
jg
inc
arpl
jge
int
and
pushf
lcall
jmp
jns
fstpt
sbb
xor
push
dec
xor
sbb
mov
test
lahf
xchg
stc
or
adc
imul
add
shll
icebp
or
jl
mov
mov
js
lds
rol
dec
inc
push
leave
in
fistpll
out
daa
mov
mov
push
push
test
adc
sbb
movsb
and
mov
inc
das
insl
sub
adc
mov
and
je
mov
ds
fdivl
roll
stc
aam
sbb
aam
mov
mov
adc
jl
dec
cmp
lret
jbe
lds
adc
outsb
popf
inc
jbe
je
xchg
ss
mov
pop
std
xor
cld
rcll
pop
dec
call
out
sbb
pop
outsb
cld
xchg
test
rcrl
lds
icebp
mov
inc
dec
sbb
sub
nop
mov
sbb
cmpb
ss
outsb
push
inc
imul
daa
mov
lock
mov
aad
scas
sub
cmp
shlb
inc
test
push
mov
inc
sbb
lds
jg
xor
push
test
mov
mov
sbb
xchg
sahf
dec
insl
jg
inc
inc
sbb
in
andb
outsb
push
std
lods
shll
jmp
jge
aaa
in
pop
mov
fisubs
or
pop
mov
pop
add
mov
out
scas
dec
lret
cmpsb
insb
aam
mov
cmc
pop
jne
nop
lods
adc
jne
mov
lahf
jmp
cmpsb
pop
sbb
inc
rol
pop
mov
mov
mov
pop
jle
sbb
add
aad
movsb
cltd
nop
and
fisttps
xor
cmc
nop
dec
mov
sub
cmp
cli
je
xor
pop
cld
mov
sub
inc
push
add
mov
cmp
push
jns
mov
mov
mov
mov
insl
xchg
sub
cld
les
and
mov
mov
xchg
xor
dec
fistps
fistl
test
sbb
xchg
test
inc
in
aad
fisubrl
movsl
cmp
testl
aam
xchg
mov
xchg
out
shlb
push
jle
mov
push
jo
insl
fistl
ja
push
bound
sti
addr16
push
pop
jns
aam
shll
int3
jmp
lahf
sbb
stos
popa
loopne
jecxz
and
xchg
mov
lret
push
fisubl
inc
loopne
ljmp
cmp
int
pop
add
mov
cld
xor
in
and
adc
pop
mov
push
sub
aad
mov
clc
std
aaa
fdivl
mov
inc
lret
int
pusha
mov
push
fisubl
dec
pop
dec
mov
data16
sub
test
mov
or
add
xchg
and
mov
rorb
jp
subl
cmpb
xor
mov
and
rorl
mov
pop
cmp
dec
mov
pop
sub
jg
push
jmp
adc
fs
call
ficoml
sub
repz
ds
bound
aas
push
ljmp
test
fnsave
pop
inc
sbb
jg
jmp
repz
mov
pop
mov
cmp
aaa
mov
repz
and
cld
jmp
mov
loop
push
cwtl
stos
aad
sub
jg
lods
mov
or
test
inc
mov
xchg
add
jnp
lahf
cmpsb
pop
xor
sbb
cmp
mov
dec
xlat
incb
dec
pop
inc
pop
dec
repz
jle
hlt
xchg
js
ret
jl
push
push
shlb
pop
xor
je
test
push
rolb
dec
dec
faddp
mov
loope
incl
pop
in
jecxz
mov
enter
add
fstps
mov
daa
ret
aam
fldl
stc
adc
adc
movsl
clc
nop
push
fsub
sahf
decb
jmp
adc
lcall
inc
inc
push
fists
jp
pop
push
hlt
push
idivl
push
inc
mov
loop
push
stos
cmc
orb
int
iret
test
xchg
pop
iret
inc
sub
xchg
aaa
or
stc
push
pop
clc
jae
mov
add
sbb
insb
mov
movsb
xchg
push
int3
clc
xor
outsb
je
and
je
inc
or
loopne
into
mov
pop
cmp
xchg
fdivrp
push
or
imul
xor
adc
cli
jl
pusha
call
or
mov
xor
icebp
push
stos
add
inc
fwait
das
hlt
dec
lds
inc
push
rcll
andl
cmc
mov
mov
push
scas
dec
lcall
cmp
fcmovne
mov
ljmp
lds
jmp
add
and
outsb
cmp
add
inc
and
movsl
mov
lods
loopne
aaa
add
pop
stos
inc
pop
popf
aad
incl
jo
lret
and
jp
popf
xor
fucomip
sbb
subb
scas
add
add
mov
fbstp
mov
cmp
or
pop
mov
pextrw
and
adc
test
push
xchg
mov
mov
mov
cmp
ret
sub
mov
push
inc
cmp
dec
stos
push
int
mov
pop
add
mov
pop
dec
mov
daa
mov
mov
jb
dec
or
mov
aaa
test
adc
jns
aas
std
icebp
dec
fst
lods
cld
mov
cmpl
and
adc
mov
inc
pop
sbb
add
pusha
adc
jmp
lock
in
lods
out
inc
xchg
adcb
das
fmull
dec
frstor
insb
xchg
add
std
cmpsb
ficoms
jo
or
cmp
push
sub
and
push
cmpb
mov
mov
sar
repz
js
incb
and
pushf
sbb
clc
pusha
sub
xor
mov
test
std
or
movsl
mov
stos
rclb
es
outsl
inc
cwtl
sti
clc
mov
inc
dec
popa
pop
mov
in
in
adc
test
xchg
sub
push
jl
sti
jg
and
xorb
in
in
std
das
cmpsl
fcmovu
add
lods
sbb
adc
hlt
jmp
aas
fcoml
or
out
mov
cmpl
ljmp
xor
movsl
fwait
jl
inc
popf
aad
in
mov
fiaddl
jbe
push
ficoml
fwait
lods
add
jb
jno
aam
fsubr
repz
call
adc
lcall
sub
call
cmp
stos
fstpl
outsb
out
es
pop
push
push
pop
clc
sub
pop
jmp
fs
inc
push
repz
adc
jae
sbb
mov
test
cltd
push
iret
gs
cld
and
sub
rclb
jg
fidivrl
jne
test
cwtl
nop
iret
jg
mov
gs
mov
leave
pop
push
and
xchg
xchg
insb
icebp
test
mov
push
in
cld
lcall
out
rcll
push
push
dec
dec
jle
adc
mov
lock
cmpsb
dec
test
inc
lods
in
mov
lock
fcomip
dec
jg
dec
mov
mov
push
andl
pop
xor
adc
clc
dec
repnz
repnz
fcomip
add
andb
pushf
xlat
dec
adc
mov
add
jecxz
psraw
clc
in
inc
inc
push
xor
sbb
sub
adc
sub
lcall
decl
dec
jae
rclb
idiv
or
bound
pop
xchg
and
add
mov
push
aaa
les
push
insl
leave
jecxz
clc
mov
pop
add
inc
lret
push
or
sub
je
dec
add
add
sub
sub
insl
test
jbe
mov
lahf
push
xor
or
sarb
jg
decl
jle
push
clc
sarl
xchg
push
rclb
pusha
push
mov
and
rolb
or
and
push
jge
and
je
pop
sub
test
movsb
js
out
push
clc
notb
xchg
adc
cmp
fisubrs
xor
inc
out
call
jo
or
inc
jne
insl
jno
sbb
loop
inc
adc
enter
mov
adc
fstps
pop
xor
test
pop
into
mov
clc
inc
mov
clc
xor
and
xor
orl
lods
call
add
fadds
mov
cmp
or
data16
jle
push
or
les
or
lods
std
mov
dec
arpl
mov
cmc
outsl
jae
or
lea
lcall
pop
mov
mov
sbb
imulb
ss
or
dec
mull
sahf
sub
inc
daa
roll
add
sbb
sub
sbb
and
out
mov
jbe
xlat
lock
inc
and
cwtl
addr16
pop
scas
outsl
cli
inc
mov
in
dec
icebp
fwait
sti
movsl
push
loopne
fistpll
add
mov
enter
adc
adc
sbb
stos
fwait
outsb
jl
jge
ret
stos
cltd
adc
xchg
push
pop
adc
out
inc
add
xchg
mov
push
lock
mov
mov
mov
lods
jle
bound
cs
xor
cmp
imul
sbb
lock
sub
and
shrl
sub
mov
jnp
jp
fwait
ljmp
and
dec
or
fdivr
inc
mov
ss
push
adcl
and
rclb
inc
fsts
incb
ficoms
sub
sub
xor
je
pop
add
into
sub
hlt
sbb
rclb
andb
hlt
sti
lods
out
jae
or
rorb
pop
mov
popa
adc
ja
loop
fdivs
int
push
test
sub
adc
stc
mov
ret
push
mov
xchg
js
or
sbb
jg
ljmp
ss
and
xchg
mov
js
xor
das
jmp
mov
push
inc
daa
imul
jno
daa
mul
xor
in
or
pop
sbb
mov
dec
popf
xchg
sbb
sub
aam
inc
mov
mov
pushf
pop
mov
push
mov
cmp
aad
les
pop
icebp
xor
js
add
inc
lea
mov
fdivs
mov
or
std
aad
test
and
xacquire
cmp
mov
int
fcomp
rcr
shll
dec
jecxz
leave
mov
inc
sbb
sti
push
add
imul
cli
bound
outsl
mov
push
subb
lods
test
mulb
jg
push
cmp
out
pushf
iret
jmp
nop
cmp
jmp
popa
repz
fdivs
mov
cmp
imul
xor
pop
push
or
xchg
arpl
inc
pop
leave
mov
add
filds
mov
rol
testb
jnp
jmp
mov
push
sbbl
push
fscale
movsb
adc
mov
mov
inc
jl
mov
sbb
jge
pop
xchg
mov
inc
lock
cmc
push
fstpt
sarl
insl
iret
dec
faddl
dec
and
fwait
jo
sbbl
outsb
or
je
mov
jo
enter
negb
in
stos
pop
inc
movsl
push
xchg
pop
mov
test
loopne
mov
push
cmp
movsb
push
inc
out
mov
popf
jbe
pop
dec
imul
push
push
xor
imul
jns
nop
cmp
push
cld
pop
sub
jo
lret
or
mov
cmc
fwait
xor
cmc
mov
xlat
mov
xor
enter
mov
stos
imul
fwait
mov
gs
das
jb
or
xor
push
cmpsb
outsb
mov
jmp
or
inc
inc
test
adc
arpl
jle
xchg
mov
mov
test
mov
sub
shll
scas
test
lahf
jg
dec
xchg
xchg
shlb
adc
jbe
and
adc
lods
popf
sbb
adc
addb
pop
or
pop
push
jg
and
mov
clc
pop
pushf
xchg
enter
mov
imul
mov
jle
hlt
sbb
add
add
arpl
adc
mov
aaa
push
dec
mov
sti
movsb
mov
fnsave
out
adc
push
inc
adc
fstps
aaa
outsb
lods
aaa
lahf
sahf
lods
rcrb
push
jl
sbb
sbb
ljmp
outsl
das
cld
aaa
and
mov
adc
mov
stc
rcl
inc
ds
mov
cwtl
and
ficoms
repnz
mov
pop
rorl
jl
in
stos
jmp
cmc
xchg
inc
mov
jb
into
nop
sbb
shll
or
fistpll
repz
in
sub
inc
rcr
sub
mov
movsb
insl
jmp
push
and
adc
into
inc
clc
or
mov
popl
mov
insl
call
xor
add
rclb
jmp
push
loopne
dec
mov
loope
pop
sbb
stc
and
ret
icebp
call
mov
xchg
movsb
xor
mov
push
jge
fstpt
mov
cmpsl
out
cmovo
or
add
push
mov
clc
icebp
leave
mov
adc
outsl
jno
or
xor
bound
xor
mov
adc
sbb
cld
push
or
push
mov
rcrb
lds
pusha
xchg
and
jg
dec
iret
mov
xor
inc
sbb
lret
lret
lahf
push
movsb
xor
pop
outsb
in
rcr
and
adc
incl
xchg
jmp
fcomps
push
adc
cld
inc
aaa
cli
fwait
sub
divb
shl
push
cmp
xchg
mov
jb
aam
dec
pop
sbb
pop
xchg
addr16
pop
pop
stc
mov
pop
imul
jmp
clc
movsl
lods
jp
shlb
cli
push
imul
cltd
adc
mov
jecxz
cltd
add
pop
jg
shrb
call
int3
mov
movsl
ja
repz
mov
bound
iret
daa
fdivr
push
mov
mov
push
decl
test
lahf
xor
mov
jl
shll
dec
lock
xchg
pop
outsl
cli
push
out
sub
or
jg
outsl
push
in
test
cmc
xchg
adc
cmp
addb
cs
adc
mov
mov
leave
sahf
rorb
push
test
repnz
mov
cwtl
shlb
jno
loope
xorl
in
das
jecxz
lea
mov
repnz
js
lcall
rcr
into
loope
lods
sub
orl
xor
or
das
jne
pop
ja
inc
cwtl
or
cld
mov
cwtl
leave
nop
movsb
xchg
hlt
and
or
lds
pushl
insl
sahf
xorl
push
icebp
aam
jo
pushf
mov
ljmp
push
mov
fbstp
pop
sbb
add
ret
aaa
lock
lods
mov
and
add
clc
mov
inc
pop
loop
pop
call
int
jo
orl
test
cmp
or
insb
dec
jno
mov
ret
fstpt
add
pusha
push
movl
in
das
pop
pop
mov
mov
push
mov
movsb
cmp
adc
ss
mul
inc
jmp
and
in
mov
jnp
flds
dec
aaa
jl
and
sbb
pushl
test
into
or
adc
xchg
sbb
pop
loopne
jle
in
cs
dec
les
call
mov
and
adc
js
daa
test
ja
ret
ljmp
pushf
loope
add
mov
mov
loopne
repnz
fcmovnu
lock
and
jmp
pop
lods
shrb
jnp
inc
adcl
outsl
cld
jg
push
scas
jle
inc
mov
push
movsb
ret
jne
lock
push
popa
orb
sbb
pop
and
jae
sahf
cmp
mov
imul
jecxz
and
inc
mov
jecxz
cmc
in
outsl
insb
cli
icebp
pop
mov
inc
rorl
pop
lods
xchg
cmpsb
adc
xchg
rorl
mov
insb
pop
and
mov
jbe
out
jne
popf
pop
stc
add
loope
sub
repz
jbe
rolb
pop
stos
fdivrp
jb
push
shrb
sti
inc
aam
aaa
cwtl
cltd
stos
in
mov
sbb
dec
sbb
push
adc
shrl
rclb
hlt
scas
inc
je
mov
push
inc
pop
and
cmp
and
pop
lcall
rcrb
mov
dec
xor
cmp
sar
decl
and
outsl
push
add
mov
int3
ds
call
outsb
js
mov
popa
pop
xor
cvttps2pi
movb
xchg
test
std
gs
xor
rcr
shl
sbb
cmp
cld
mov
lock
jg
dec
pop
popf
mov
nop
push
jo
in
sbb
mov
test
mov
cs
xlat
adc
xchg
lock
or
outsb
pushf
jno
test
loop
pop
repz
es
pop
jo
or
loopne
push
test
push
push
mov
jmp
mov
out
mov
jno
and
cmpsl
and
lea
push
mov
jb
adc
in
inc
pop
push
popa
sbb
push
pop
push
sti
jmp
arpl
subb
sti
sub
push
cld
test
pop
push
pop
ret
ja
mov
cld
push
xchg
pop
jecxz
das
cmp
rorb
mov
sbb
inc
loope
jl
fs
mov
fidivrl
in
and
std
mov
mov
shrl
or
in
push
sahf
lret
cmpsb
sbb
xchg
adc
js
sar
fistl
iret
jbe
gs
lahf
ds
adc
jecxz
inc
out
xchg
push
aaa
or
in
push
pop
pop
fmull
sbb
ljmp
cmp
or
decl
cld
fidivs
push
lret
pop
add
leave
adc
insb
sbb
push
push
imul
stos
stos
sbb
sbb
dec
divl
mov
outsl
pusha
mov
push
add
adc
movsb
push
add
test
dec
adc
push
cmp
popf
adc
mov
mov
and
mov
adc
loope
push
out
decl
push
pop
inc
call
iret
roll
mov
addb
sub
lret
cmc
enter
popa
push
or
xchg
xchg
sbb
fdiv
jl
jns
xchg
in
call
xchg
test
sbb
add
outsl
sar
mov
insb
movsl
cmc
mov
loope
aas
jae
push
outsl
lock
xchg
inc
pop
jae
add
push
inc
mov
dec
nop
test
shrb
js
call
push
mov
ret
das
shl
push
sub
add
test
sub
addr16
mov
inc
sbb
or
adc
jmp
andps
add
or
shlb
inc
fcomip
lea
iret
jb
add
loope
xor
aaa
mov
aaa
cli
sbb
push
xor
xchg
xchg
leave
gs
lods
cmc
add
cmp
xor
mov
out
or
sub
or
enter
push
sti
add
xchg
jmp
pop
icebp
je
std
mov
mov
adc
clc
dec
adc
mov
mov
dec
xlat
xchg
mov
into
fistpll
sahf
lcall
pop
adc
mov
out
cmp
sub
mov
xchg
pop
xchg
rorl
inc
in
jg
cmp
mov
imul
addb
int
fs
iret
scas
inc
inc
fistl
jg
cs
sub
inc
mov
div
inc
std
mov
jae
lret
add
out
xchg
add
cmc
outsl
push
sub
jns
and
pop
cld
jg
insb
dec
mov
jae
subb
mov
cwtl
jno
testb
arpl
lea
sbb
test
mov
jae
pop
shlb
fsubl
cmp
shrd
addr16
fistpl
adc
mov
mov
into
push
mov
or
mov
call
mov
js
pusha
in
jnp
lods
xchg
incl
insb
add
push
push
mov
jmp
lea
cmp
mov
daa
loope
je
sub
sub
cmp
sub
enter
lea
popl
pop
mov
mov
and
aaa
orb
movsl
jl
fidivrs
mov
pop
jbe
or
scas
cmp
sbb
jbe
testb
mov
adc
lods
or
lods
push
jne
cmpsl
mov
jge
pusha
insl
inc
std
jae
cltd
aaa
sub
jg
add
xchg
subb
loope
dec
or
jp
sarb
pop
dec
inc
push
out
inc
icebp
loope
cmp
mov
add
jmp
mov
stc
stc
mov
decb
ljmp
pop
arpl
stos
in
fisubrs
sbb
mov
movsb
inc
add
sub
fwait
jg
mov
frstor
nop
adcl
fisttpl
sub
fildl
push
pop
pop
mov
or
mov
mov
cld
sbb
mov
rorl
jg
mov
jge
sbb
test
xchg
pop
add
sar
aas
aas
sub
insl
hlt
mov
mov
inc
jl
jae
shrl
add
jp
pop
in
mov
jecxz
jo
jbe
das
jle,pn
sub
add
add
ss
je
mov
cmp
dec
js
lahf
mov
shrl
cmpl
jl
call
pop
fucom
cmp
jecxz
mov
adc
sbb
imul
js
mov
ds
inc
xchg
and
pushf
mov
loopne
xchg
xor
sbb
add
sub
test
mov
adc
fdivr
sub
repz
xchg
rcl
enter
fiaddl
cld
aaa
test
mov
jg
jle
pop
mov
push
xchg
daa
or
insb
mov
xchg
scas
test
inc
and
pop
clc
add
jne
xor
and
jo
xlat
cmp
dec
pop
ja
jnp
mov
pusha
rcl
mov
or
mov
dec
jge
icebp
mov
cltd
inc
insl
adc
testb
fsubl
push
xor
imul
mov
push
dec
inc
xchg
idivb
or
jo
xor
xchg
add
cmpsl
flds
pop
sub
cmp
lret
pop
jmp
sbb
jl
mov
xchg
in
dec
cmpsb
mov
push
cmpsl
and
nop
add
adc
inc
aad
repz
lret
mov
inc
xor
xor
jl
nop
stc
aaa
xor
and
mov
jne
fisubrs
enter
inc
shrl
cmp
pop
or
xor
in
gs
fstp
repnz
jnp
and
out
movl
pop
and
push
xchg
xlat
mov
push
mov
ret
fists
jns
mov
pop
cld
icebp
dec
je
jae
aad
mov
add
fstpt
or
dec
cmp
pop
icebp
pop
inc
lret
add
lret
adc
repz
cmp
div
dec
xchg
xchg
mov
test
sbbl
lock
push
lods
push
into
dec
clc
cmp
sub
fidivs
aaa
push
mov
mov
gs
lds
mov
aas
inc
pop
mov
lret
or
xor
mov
xchg
outsb
adc
aas
imull
push
idivb
add
insb
push
mov
insb
pop
sub
mov
dec
jmp
inc
jg
adc
xchg
xor
push
add
xchg
insl
int
xor
aas
testb
lret
mul
xchg
cmp
jle
movsl
icebp
fcoml
fisubs
out
cltd
adc
ja
jnp
mov
or
sub
inc
jae
testb
lret
test
push
in
or
jb
pop
xchg
std
adc
scas
iret
xor
push
jne
stos
inc
into
stc
stos
scas
inc
fstpt
xchg
std
cmpsb
sub
out
es
insl
push
mov
shrb
adc
pop
sbbb
cmc
sbb
xor
outsl
or
sbb
mov
jo
nop
sub
rcl
shl
pop
inc
into
add
int
jmp
scas
ret
sub
mov
shll
push
add
adcb
sub
mov
shll
jb
rclb
push
shrb
es
faddl
pop
sub
cmpb
xor
mov
lret
data16
pop
sahf
or
adc
xor
cld
add
cltd
enter
jge
mov
into
inc
jo
mov
dec
outsl
mov
mov
cld
pop
fadds
or
sbb
push
inc
icebp
dec
iret
add
imul
outsb
cmp
push
imul
jno
push
fldt
push
into
xchg
and
ljmp
mov
sub
push
lea
and
repz
pusha
inc
scas
push
loope
adc
xchg
bound
sub
add
loope
dec
add
movsb
nop
shlb
pop
jmp
ljmp
loope
adc
mov
sbb
test
mov
movsl
rcl
sbb
xor
add
addr16
cmp
insb
mov
cmpsl
pushf
aaa
call
int
pop
repnz
mov
push
rcrl
rcl
push
and
lcall
mov
stc
cmp
fbstp
shl
enter
add
mov
les
adc
pop
call
jp
push
aad
mov
push
testb
xor
inc
loopne
test
adc
gs
jge
mov
clc
in
cld
sbb
mov
jmp
push
push
jnp
push
js
inc
std
mov
inc
rolb
call
shlb
dec
sbb
loop
mov
sbb
sub
dec
cld
sub
add
ja
clc
xlat
rolb
or
call
cmp
scas
clc
decl
or
adc
fildll
jle
add
shll
inc
outsl
aaa
dec
pop
cmp
cli
andb
dec
xor
rorl
into
or
aaa
out
out
mov
and
inc
das
lds
xor
cli
mov
fcoml
std
ljmp
add
lahf
dec
and
pop
js
sahf
xor
aaa
xor
push
gs
sub
add
mov
call
test
and
lret
mov
sub
dec
incl
sbbl
adc
out
pop
jne
pop
jns
push
in
icebp
jmp
dec
rdmsr
push
mov
bound
fisttps
push
ret
movsl
loop
test
ja
inc
pop
addb
cld
hlt
add
adc
dec
scas
in
inc
xor
sbb
jl
sbb
mov
and
add
cmpsb
mov
nop
and
or
adc
pop
push
dec
hlt
mov
or
lds
pop
cs
inc
push
cs
loop
sbb
cmp
leave
adc
mov
sub
addl
hlt
lock
loope
xchg
sbb
push
pop
aaa
jne
and
xchg
jo
icebp
inc
inc
push
mov
subb
push
push
je
sbb
add
mov
aad
cwtl
adc
mov
fisubs
sbb
sarl
xchg
mov
push
push
adc
mov
mov
push
clc
fs
mov
sbb
mov
fidivrl
and
insl
mov
sti
push
inc
ss
pop
adc
mov
mov
nop
fistps
mov
aas
outsl
leave
mov
and
test
leave
jbe
sbb
fdivrp
dec
jnp,pt
or
jg
ljmp
mov
mov
inc
iret
mov
fmull
mov
stos
mulb
enter
push
jmp
xchg
add
imul
outsl
push
inc
call
or
mov
sub
jg
xchg
test
xchg
and
pop
mov
sbb
lds
insb
nop
call
jecxz
jae
push
push
pop
add
je
inc
push
pusha
jb
cmp
lea
notl
or
cld
fistpl
or
cmp
inc
ret
adc
mov
outsl
or
inc
mov
adc
pop
lcall
aas
or
aaa
push
or
mov
lock
or
sarl
fnstenv
and
aam
push
mov
inc
sub
sbb
jle
and
cmpsb
daa
lock
ret
xor
cmp
rorb
orl
push
shl
and
mov
push
and
subb
insl
add
divl
lock
sbb
push
mov
roll
in
pop
mov
sti
test
adc
sar
jp
pop
mov
push
fcoml
add
and
mov
jg
ficompl
cld
fldl
inc
jecxz
xorb
adc
mov
in
add
loop
jecxz
pop
sbb
sbb
mov
test
jae
cli
xor
cmp
jle
xor
mov
outsb
xchg
ds
add
and
icebp
lahf
sahf
push
sbb
xchg
outsl
cmp
adc
fisubl
decl
push
add
sub
lahf
mov
imul
enter
mov
aaa
addb
cmp
popa
mov
fiadds
dec
jne
push
sbb
mov
movsl
adc
or
incl
out
in
push
or
cli
mov
adc
outsb
pop
jp
loop
das
mov
push
loopne
mov
pop
pop
shll
pop
push
push
inc
in
fsubs
push
sub
movsl
jne
mov
scas
aaa
mov
jne
lds
sub
mov
cmp
adc
cs
repz
lea
mov
loop
pop
and
scas
int3
test
test
test
inc
jns
push
sub
lds
clc
add
sbb
cs
jl
fbld
jns
lds
mov
sbbb
cmp
in
shll
dec
pop
or
add
and
xchg
jo
inc
or
sahf
cmp
pop
inc
push
jne
clc
out
jbe
mov
add
adc
inc
rcrb
std
outsb
jp
cmc
call
aaa
pop
stos
out
mov
adc
aas
or
jge
fimuls
add
xchg
fimull
aaa
icebp
mov
jb
add
push
repz
pop
push
leave
lock
mov
mov
mov
cli
lea
cmpsb
sbb
imull
pop
mov
cmp
mov
dec
out
jne
mov
adc
mov
push
mov
testl
rclb
or
and
inc
nop
inc
fldl
xor
jg
cmp
sbb
fcomi
xchg
enter
pop
cmp
cltd
mov
lock
sbb
out
xchg
inc
mov
imul
mov
mov
shlb
mov
push
ljmp
iret
enter
mov
das
mov
dec
shlb
sub
pop
popa
and
jbe
insb
ja
inc
in
test
adc
arpl
mov
or
mov
data16
test
inc
shlb
filds
mov
xchg
arpl
lds
cmp
pushl
pop
adc
data16
mov
es
adc
jle
pop
mov
ret
inc
or
adc
jg
loope
mov
outsl
or
std
mov
adc
cld
mov
lea
sbb
sbb
iret
fldt
cmp
sarl
jmp
mov
andl
or
mov
inc
xchg
in
ret
cmp
and
les
pop
sarb
repz
push
xchg
push
js
das
sbb
inc
ja
jns
fcomp
scas
xchg
push
sbb
adc
pop
pushf
cmpsb
mov
aas
mov
add
das
cmc
push
sbb
mov
rol
scas
nop
dec
jne
outsb
and
pop
loopne
dec
jg
cmc
addr16
mov
jns
and
cwtl
cmp
push
jg
ret
add
jecxz
jl
mov
pop
idiv
testb
pushf
xchg
into
push
adc
shll
icebp
push
jns
inc
push
pop
insl
sub
inc
pop
xchg
mov
mov
or
neg
cmc
pop
adc
adc
sahf
inc
aam
shlb
imul
adc
inc
in
fists
dec
inc
movsl
idivl
ret
and
inc
add
add
jo
clc
jp
pusha
add
mov
xorl
stos
pop
leave
out
push
inc
sub
js
dec
out
call
pop
mov
js,pn
mov
or
adc
jle
add
in
jg
cmpb
cmp
mov
sar
out
fsubrs
scas
and
xor
cld
sbb
pop
ficoms
inc
pop
mov
sbb
adc
jns
pop
sub
lds
aam
jb
adc
push
add
jg
sub
and
in
pop
push
arpl
mov
dec
adcl
xchg
mov
adc
cmp
ja
xor
xchg
cmp
xor
inc
sbb
daa
dec
xchg
lods
xchg
sub
xor
cltd
fstpt
jo
pop
sub
leave
jbe
adc
mov
jno
push
push
cmc
mov
call
inc
js
adc
and
cmp
imul
add
pusha
sub
sub
lahf
jg
inc
and
sbb
cmp
add
loopne
icebp
jecxz
mov
decb
mov
pop
lret
xchg
and
jl
test
jp
push
in
mov
popf
ds
xlat
movsl
pop
add
xor
ljmp
lahf
inc
push
xchg
stos
lcall
das
aad
les
pop
enter
pop
add
aad
dec
and
clc
in
lods
pop
test
or
cmp
jbe
iret
fbstp
scas
mov
bound
add
aad
jb
pop
sbb
lock
xchg
test
mov
stc
adc
sub
inc
in
ljmp
sub
in
aaa
les
pop
sbb
sbb
xor
sbb
jge
outsl
adc
inc
push
cmpsl
or
sbb
decl
cld
dec
call
pusha
movsl
push
mov
addr16
cs
lcall
lods
xchg
idivl
loop
push
test
in
cmp
and
push
add
lcall
xor
add
mov
dec
leave
cltd
lods
dec
mov
jne
jne
hlt
cmp
sbb
ljmp
xchg
scas
inc
add
clc
insb
sbbb
xchg
push
insb
fdivrl
xchg
push
sbb
xor
sbb
scas
das
xor
mov
ret
inc
lea
lds
or
fwait
sbb
clc
ja
pop
mov
and
mov
xchg
hlt
cmpsl
test
and
inc
test
add
sub
cmp
mov
add
loop
xor
inc
lods
push
test
pop
mov
aas
jg
shll
insb
or
mov
mov
sbb
clc
push
xchg
and
movsl
sbb
loop
test
push
xor
addr16
mov
cli
cs
test
stos
jae
fnsave
fisubrs
std
mov
mov
in
or
mov
sbb
push
mov
push
loop
cmc
loop
cmp
mov
sbbl
jge
lret
inc
cltd
sub
into
lcall
cltd
loopne
dec
add
scas
cld
lret
or
fdivrp
lcall
in
fs
int
fwait
xchg
xchg
enter
sbb
jecxz
inc
aaa
sub
hlt
sub
mov
inc
push
cmp
push
imul
adc
lcall
pop
mov
mov
das
push
xchg
loop
add
push
icebp
lea
jo
hlt
icebp
es
adc
mov
jp
sbb
cmp
and
xor
jb
ret
andb
mov
inc
mov
rcrl
adc
jg,pt
sbb
xor
sbb
in
into
xlat
xchg
js
or
imull
insl
xor
push
scas
out
ret
jl
pop
pop
adc
jg
lret
pop
loop
in
movsb
sub
cmp
and
jmp
loopne
jle
shll
mov
push
cmp
imull
loopne
and
adc
cli
mov
cmpsb
shl
cld
sub
sub
xchg
jns
stos
mov
out
das
insl
js
mov
aad
out
es
test
stos
lds
aas
stos
shrl
add
mov
mov
mov
inc
mov
sbb
or
clc
rol
repnz
cltd
mov
pop
dec
mov
xchg
inc
pop
ficoms
and
adc
mov
mov
pop
lods
aam
mov
pop
push
pop
pusha
mov
insl
xchg
jne
movsl
or
dec
mov
push
jg,pn
or
out
cmp
js
inc
lahf
out
or
xor
inc
xor
cmp
ss
dec
xchg
pop
mov
decb
sbb
cwtl
icebp
dec
test
xor
es
adc
mov
pop
fisttps
jge
enter
mov
es
and
and
pop
clc
xchg
cmovb
sub
dec
xchg
in
mov
mov
lock
cmp
dec
mov
shr
sbb
leave
repnz
js
xor
mov
jle
cmp
mov
xchg
and
xor
mov
js
es
mov
test
pop
inc
fsub
sbb
pusha
jne
cmpsl
cs
add
orb
mov
es
adc
jl
dec
cld
in
repz
mov
test
mov
insl
ljmp
jne
jbe,pt
or
sub
out
and
lods
lea
mov
mov
or
jb
inc
movsl
in
push
insl
aam
int
rorl
aaa
hlt
lret
push
ret
hlt
mov
sahf
mov
sub
ds
pop
mov
stc
mov
std
sbb
aad
push
pop
pop
movsb
cmp
js
hlt
js
xor
sub
cmpsb
clc
stc
cmpsl
push
pop
fwait
addb
pusha
jle
sbb
popf
sbb
xchg
lahf
sbb
aaa
pushf
pop
mov
mov
mov
scas
ret
stc
sbb
push
xchg
xor
jecxz
aam
scas
sub
decb
arpl
adc
mov
inc
xor
cmp
lcall
or
adc
jg
xchg
and
add
ja
jge
pop
sbb
jne
hlt
dec
and
leave
leave
jo
mov
xchg
pop
repz
jnp
xchg
testl
int3
jae
inc
scas
mov
jmp
push
and
cwtl
test
sub
add
sahf
in
mov
adc
sbb
lock
or
inc
push
adcb
push
rorl
add
test
mov
jmp
clc
repnz
lock
xor
cmc
fwait
cltd
subl
ret
add
test
ret
push
sbb
scas
fcomip
andb
mov
scas
adc
and
adc
out
mov
add
scas
mov
je
adcl
mov
loop
or
repz
sub
jnp
dec
insl
push
leave
pusha
and
lcall
push
outsl
cli
negb
rcr
pushf
jo
lds
cmpsl
xchg
xchg
aad
mov
fwait
rcll
andl
pushf
mov
fidivs
bound
sbb
enter
sub
popf
adc
clc
xchg
mov
aam
pop
cs
lods
xor
xorl
dec
sar
repz
push
sbb
push
mov
pop
pop
fs
jg
push
push
push
inc
sub
cli
mov
push
std
mov
js
push
xor
lea
pop
sbb
push
add
push
out
xchg
add
fistps
jp
mov
xchg
incl
addb
into
filds
add
mov
or
dec
popa
subl
fldcw
scas
sbb
popa
inc
lods
data16
jne
rcrb
cmc
jns
inc
into
xor
xchg
lcall
xor
and
jmp
test
and
cli
rcll
cwtl
push
imulb
push
call
mov
lea
dec
dec
and
sarl
push
mov
mov
adc
pushl
adc
cwtl
dec
mov
and
inc
lret
mov
add
add
xchg
dec
xchg
sbb
aaa
mov
lods
dec
lds
inc
jbe
fldcw
decb
ljmp
adc
mov
mov
test
push
popa
insl
push
stos
push
inc
or
xchg
jo
in
mov
lea
xchg
scas
and
or
push
mov
mov
imul
mov
xor
outsl
fwait
or
push
xchg
cmp
add
fistpl
scas
sbb
pop
sbb
sti
pop
push
std
pop
jo
es
inc
daa
sub
cmpsb
stos
out
scas
xchg
or
subl
aad
lock
icebp
pop
icebp
jl
cmp
test
mov
adc
inc
push
xchg
push
les
cs
dec
pop
cwtl
loop
xor
outsl
clc
scas
loope
or
pop
movsb
mov
adc
xchg
sbb
icebp
cwtl
cld
mov
imul
leave
movb
ret
call
sub
hlt
mov
mov
sbb
adc
cmc
ds
in
pusha
mov
shlb
xor
in
mov
add
fisttpl
push
mov
or
int
push
cli
adc
adcb
loopne
pop
mov
jae
mov
mov
xchg
je
lea
adc
pop
ja
in
xchg
cmpsl
xchg
push
mov
add
imul
fdivs
add
aam
mov
fsubr
pop
ss
fdivrl
cmc
inc
xchg
and
xor
jl
repz
mov
in
pop
outsb
shrb
inc
popa
insb
mov
push
in
repz
xor
scas
pop
jp
outsl
jl
rorb
cltd
cmpb
andl
fisubs
jmp
cli
or
loop
xlat
add
mov
jbe
pop
jp
movsl
fldenv
and
decl
das
scas
adc
mov
into
xchg
sub
xchg
clc
cmpsb
incl
enter
jbe
mov
iret
das
inc
pop
fsubs
testl
mov
cli
inc
pop
cltd
mov
int3
clc
adcl
fs
test
jge
cmc
jge
rcrl
xor
mov
add
mov
shll
cli
inc
fwait
sbb
outsl
stc
mov
or
push
sbb
bound
sbb
data16
test
loop
rorl
insl
fsubrs
mov
jmp
shll
insl
dec
adc
roll
sub
xchg
pop
fdivl
loop
sub
jnp
inc
addl
subps
push
fs
divl
aaa
sbb
inc
mov
xchg
push
cmp
sub
push
jg
cli
inc
test
test
sub
aas
inc
add
or
in
or
cmp
out
mov
repz
hlt
das
mov
mov
adc
adc
sbb
mov
pop
dec
xor
push
ss
add
fwait
sub
jg
add
jo
insl
orl
jne
mov
outsb
dec
and
sub
aas
cmc
sub
push
cmp
mov
add
js
scas
and
ret
mov
test
pop
push
or
jmp
ror
adc
in
test
dec
lods
sti
mov
push
dec
insl
cmp
pop
lret
data16
iret
cltd
pop
mov
pusha
mov
sti
or
es
mov
xor
push
xchg
setge
fsubs
adc
xor
pop
adc
insb
mov
pusha
inc
ljmp
or
jo
out
mov
sbb
pop
fidivs
adc
add
test
jmp
clc
mov
mov
sub
hlt
stos
mov
loop
add
fldl
dec
inc
rcrb
push
mov
clc
stos
arpl
sub
rolb
jbe
inc
push
imul
mov
adc
aam
sbb
mov
movsl
jg
and
xor
mov
shl
jno
in
imul
pop
cld
andb
iret
adc
push
cwtl
push
aaa
push
push
aas
or
sbb
subb
lods
repnz
and
or
or
ret
push
dec
push
push
ds
inc
or
jle
push
lret
sub
and
loope
jbe
mov
mov
and
movups
or
lret
push
push
adc
rol
adc
add
aaa
inc
adc
aam
pop
or
loopne
repz
loop
jecxz
or
mov
xorl
mov
adc
out
aam
cmp
add
mov
fisttpl
jl
xor
jge
inc
lret
adc
xor
pop
pop
dec
jae
out
pop
ljmp
je
mov
pop
mov
lods
arpl
or
dec
icebp
ss
outsb
jg
jecxz
or
fwait
dec
stc
out
cmp
ljmp
add
gs
mov
push
movb
popa
sbb
push
std
xchg
cmpsb
xchg
sbb
mov
test
jge
sbb
mov
mov
or
jmp
xchg
sub
mov
push
inc
fdivr
in
add
cmp
andb
cmc
lds
jbe
iret
leave
adc
push
sbb
and
insb
mov
xchg
push
mov
movsl
xchg
sarl
pop
jo
lea
jo
fmul
aam
out
jo
pop
push
fs
sarb
movsl
cs
adc
xchg
adc
iret
je
pushl
dec
jmp
mov
push
pushf
out
inc
inc
sbb
inc
imul
and
data16
insl
cwtl
stos
test
ret
mov
dec
adc
or
dec
int
fmuls
jbe
mov
push
jmp
fadds
jg
sbb
pop
and
mov
inc
in
add
pusha
xchg
or
cmp
shl
std
in
adc
repz
add
shl
mov
xor
mov
stos
jg
push
jl
loope
repz
mov
inc
lea
and
cmp
jo
mov
push
rcr
test
icebp
and
popf
stos
stos
jecxz
adc
ret
or
sub
js
push
gs
pop
push
cwtl
in
add
sbb
or
mov
or
sbb
push
outsl
out
pop
in
adc
cld
cs
inc
in
dec
cmp
inc
out
mov
dec
pusha
mov
cltd
lods
mov
aaa
je
inc
jne
mov
fiaddl
lahf
mov
pop
movsl
add
call
in
ljmp
mov
xor
int
lahf
sub
dec
in
mov
pop
jecxz
sbb
xchg
add
sti
push
sarl
add
mov
mov
jle
xchg
out
call
or
mov
jmp
sub
pushl
mov
imul
int3
aad
adc
inc
es
rclb
dec
aas
pop
xor
jle
mov
arpl
push
imul
ja
fistl
pop
mov
cwtl
sbb
dec
cld
mov
mov
pop
call
adc
lret
sbb
repz
mov
jecxz
sbb
incl
add
xchg
sbb
mov
ret
aaa
cmc
fcomps
mov
lock
ss
dec
push
pop
je
xchg
or
scas
pop
cmc
xchg
or
test
lock
nop
mov
test
movsb
jo
xchg
orl
pop
outsl
sbb
nop
test
icebp
sbb
jns
sbb
and
scas
cmp
shl
mov
rorb
push
mull
in
or
adc
dec
jg
scas
xor
psubq
stc
mov
mov
inc
je
inc
mov
fisubrs
stos
mov
or
or
dec
insl
rclb
rorl
je
adc
dec
pop
mov
jl
jo
lods
dec
es
jne
rcll
or
pushl
cmpsl
iret
pushf
inc
sub
jecxz
movsl
mov
fdivr
fcmovnb
mov
and
pop
mov
sub
mov
std
jecxz
pusha
aam
xchg
mov
test
adc
push
cmpsb
mov
scas
jp
pop
in
inc
xor
testl
imul
lea
mov
inc
in
inc
fucomi
insl
stc
sub
pop
nop
sbb
xor
pop
xor
mov
push
mov
call
movsl
pop
lock
stos
push
inc
sbb
call
add
mov
dec
aaa
xor
xchg
nop
in
es
sti
pusha
outsb
in
push
mov
pop
adc
inc
faddl
cmp
mov
icebp
pushf
or
int
push
adc
outsb
dec
add
dec
inc
loop
ret
popf
jo
mov
das
sbbb
dec
sbb
adc
pop
dec
pushl
or
mov
adc
fiaddl
xor
xor
inc
sub
mov
lcall
jmp
add
outsb
imul
repnz
sub
pop
ja
mov
mov
dec
add
ljmp
addl
or
push
aam
aad
fidivs
dec
xorb
xchg
pop
aas
inc
sti
cmpsl
hlt
mov
pop
lods
push
add
rcrl
mov
or
mov
popf
push
clc
je
fiaddl
push
mov
mov
xlat
outsl
fdivr
xlat
ds
stc
sbb
adc
add
push
popa
push
mov
fildll
adc
cmp
mov
addb
or
inc
das
xor
jg
outsl
xor
icebp
xchg
adc
inc
inc
add
mov
push
sbb
and
ret
rolb
aaa
movsl
mov
andb
cli
stos
sbb
inc
into
mov
add
mov
push
sub
gs
dec
push
int3
jmp
add
pop
xor
ja
cmp
mov
mov
push
push
adc
stc
inc
mov
lret
xor
mov
fs
xor
push
pop
xchg
sti
loopne
incl
dec
jnp
jp
cmp
in
scas
pop
fstps
popa
dec
and
aaa
mov
xchg
xor
mov
mov
jg
je
sti
sub
dec
cmp
loope
sti
lds
push
out
sub
repz
add
push
pop
mov
outsb
cltd
clc
incl
or
mov
sbb
shrl
push
jnp
icebp
lds
pusha
inc
dec
imulb
push
adc
sbb
xor
cmp
jb
pop
or
push
pop
aam
shrb
push
add
stc
inc
test
jns
mov
lret
test
jbe
jle
imul
dec
jbe
xor
push
adc
scas
movsb
jb
jmp
ss
mov
or
pop
jnp
ljmp
push
sub
test
stos
addr16
inc
mov
gs
adc
push
jp
lds
push
ror
or
jp
cmpsb
sub
push
test
loop
jbe
inc
dec
das
cld
mov
inc
mov
pop
andl
or
dec
push
subl
aad
mov
ds
insl
fistl
add
shl
mov
mov
addr16
mov
cmp
cmp
jbe
decl
adc
out
lahf
pop
jnp
adc
mov
iret
add
or
dec
pop
add
or
std
mov
xor
adc
jb
test
std
scas
push
inc
rorb
or
ficoms
jb
sbb
push
mov
mov
movsb
jmp
cmp
call
jl
and
loope
dec
shrb
in
mov
mov
daa
and
out
psadbw
loopne
mov
daa
add
ja
ret
filds
jp
gs
dec
leave
sar
clc
pop
push
push
lret
mov
dec
insl
sbbl
cli
cmovne
sub
pushl
cmpsl
sbb
sbb
repz
shl
loopne
lcall
or
sarb
fistps
and
mov
sbb
ret
mov
sahf
pop
add
or
adc
ret
aaa
mov
sub
popf
aam
gs
cmp
rclb
loopne
sbb
insl
mov
pop
fisubl
out
ja
mov
das
out
mov
iret
lds
loop
icebp
outsb
or
or
jnp
loopne
clc
outsl
rcr
shrl
push
add
std
loop
outsb
fbstp
hlt
dec
xor
mulps
adc
pop
push
and
pop
outsb
fidivrs
mov
jo
push
push
fs
sarl
jno
mov
scas
and
mov
mov
add
sti
xchg
pusha
movsl
iret
push
jae
call
dec
xchg
lea
cmpsb
shll
pop
dec
out
outsl
cmc
and
loop
popa
sub
loope
fwait
mov
clc
ret
or
mov
jo
lods
dec
add
lods
repnz
jg
loope
cltd
inc
or
add
push
call
lea
add
pop
cli
in
sbb
pop
push
xor
int3
in
arpl
hlt
gs
jbe
mov
pop
adc
stc
lods
aam
adc
or
clc
lcall
ret
push
dec
movl
jl
in
insl
jecxz
add
test
enter
sub
cmp
jo
into
lahf
aas
scas
inc
mov
add
shll
orb
addb
and
cld
lea
std
rclb
cltd
pop
push
mov
sar
or
or
xchg
shlb
popa
shrl
dec
in
push
dec
push
cmp
sub
pusha
fcmovnb
out
clc
sbb
ret
pop
adc
jl
adc
les
pop
jmp
ret
movsb
imul
int
rcrb
mov
stos
dec
les
insb
sbb
das
fdivrs
shr
add
lret
mov
xor
hlt
int
sbb
jae
ja
pop
fists
test
inc
sbb
sub
adc
scas
jmp
push
push
push
sbb
adc
xchg
add
loope
andb
addb
sbbb
sub
fwait
lods
inc
sbb
insb
lahf
rorb
mov
push
dec
jnp
fldt
repz
and
or
push
hlt
or
bound
ja
sub
cmp
aas
icebp
and
mov
mov
mov
mov
jnp
icebp
and
lret
xor
sub
pop
xchg
mov
add
xchg
repz
sub
inc
jne
pop
imul
pop
jb
pop
mov
dec
inc
ss
adc
sub
test
out
mov
test
dec
sbb
push
jno
test
jae
mov
jle
inc
call
mov
rcl
cmc
sahf
cmc
mov
mov
out
pop
test
call
xor
mov
dec
xchg
xchg
add
cmp
add
cld
push
cld
mov
adc
xchg
jle
dec
dec
orl
dec
sub
andb
mov
jo
outsl
adc
rep
cwtl
aaa
js
xchg
mov
mov
pop
sbb
nop
adc
cli
dec
push
add
or
scas
adc
mov
stc
mov
push
cmp
cmp
mov
shrb
xchg
and
orb
test
push
dec
xchg
les
cwtl
fidivrs
shll
or
xor
cmp
add
insb
jmp
or
push
jbe
call
nop
sub
dec
ja
pop
or
add
or
push
jno
je
mov
dec
adc
mov
mov
and
mov
rorb
sarl
iret
xlat
pop
loop
sub
lret
test
mov
inc
xor
fcoms
aas
clc
push
mov
jae
ja
and
inc
sub
sbb
xchg
xchg
lahf
mov
mov
jecxz
in
scas
adc
cmp
lahf
jp
pop
fmuls
sub
pop
cs
jecxz
mov
inc
vpsrlw
adc
fildl
std
mov
xchg
aaa
push
jp
sub
ljmp
js
push
jb
ljmp
jle
push
and
aam
mov
dec
movsb
mov
movsl
fldcw
rclb
insl
sub
inc
out
jno
int
inc
leave
enter
mov
aaa
mov
jle
daa
jb
rol
outsl
ret
movb
adc
pop
cmpsb
jg
jecxz
js
or
cmp
push
loopne
or
popa
pop
lahf
add
dec
xchg
sbbl
in
bound
mov
lea
cmp
mov
lahf
gs
js
lock
dec
cmpsb
mov
shlb
xor
cmp
push
cmpsl
xlat
fiaddl
mov
push
and
cwtl
cmp
in
jbe
mov
sahf
sarl
lret
inc
or
in
and
out
and
and
and
xchg
fsubs
xchg
xchg
movsb
jle
xor
mov
inc
jb
xor
mov
fisubl
jge
or
sbb
test
mov
mov
mov
push
mov
inc
dec
arpl
mov
fs
pop
jp
cld
rorb
test
pop
mov
je
mov
and
in
pop
std
add
lea
dec
xor
mov
adc
mov
pop
or
repnz
pop
icebp
mov
loopw
in
or
mov
mov
lock
fisttpll
xchg
inc
mov
lock
das
shrb
cmp
xchg
mov
sar
mov
sub
rcll
xchg
dec
and
lods
mov
cli
adc
pop
pop
add
leave
imull
cs
pop
sub
ret
sub
shl
jo,pt
adc
outsl
pop
js
pop
adc
das
stos
mov
dec
ret
sbb
loope
mov
mov
enter
cwtl
enter
fnstsw
test
jl
xor
movsb
xor
negl
clc
push
insb
dec
mov
sbb
cs
fisttpl
cli
xchg
xchg
scas
sti
cmp
jg
add
cs
jp
clc
mov
mov
mov
adcl
add
fsubr
movsl
ffreep
lcall
pop
cmp
js
and
push
jge
or
mov
push
and
xor
std
lea
add
movsb
and
in
cmp
jmp
and
sbb
cmp
mov
incl
mov
cmp
xchg
ss
cld
jo
aaa
mov
sbb
ljmp
or
aaa
cld
jp
int
je
cmpb
and
and
and
rcl
mov
pusha
adc
jmp
lods
lods
jecxz
dec
xchg
stos
xchg
jecxz
cmp
jg
js
test
push
sbb
pop
out
pop
sbb
aaa
mov
pop
push
jnp
icebp
add
rorl
adcl
mov
inc
dec
dec
jae
or
cmpl
loope
lock
sub
stos
mov
cld
jecxz
and
std
test
fwait
inc
jnp
loop
hlt
cwtl
popa
mov
push
cmp
pop
hlt
jecxz
add
cmp
aaa
outsb
fldl
mov
mov
loope
shrl
cmpsl
loop
fstpt
mov
bound
mov
xor
sahf
push
xchg
and
test
or
jo
adc
pop
xchg
mov
movsl
ljmp
sbb
ds
or
jne
xchg
imul
and
and
and
cmpsb
push
cmp
sbb
fs
test
mov
inc
ret
sub
sub
in
xor
mov
mov
xchg
mov
ret
ficoms
push
stos
bound
bound
mov
adc
mov
ja
outsl
jo
jge
jg
adc
sbb
sub
xchg
sbb
orb
orb
sti
cs
mov
subl
out
cld
adc
jl
out
mov
sti
cmp
out
and
pushf
jecxz
and
das
ror
stos
fbld
stos
lock
daa
fsts
lds
mov
pop
mov
fdivr
ja
jl
or
sbbb
xor
lds
adc
stos
ds
sbb
clc
xchg
cmp
aad
xor
add
scas
adc
sub
cmp
fbstp
scas
cli
or
add
loope
add
loope
jmp
or
lock
sarl
push
rolb
fiadds
test
jmp
push
mov
sarb
push
rcrl
movb
and
imul
inc
jbe
dec
xchg
das
jae
push
shlb
sub
inc
push
cmp
pop
inc
pusha
mov
test
int
adc
imul
mov
rcl
or
fcmovnbe
mov
in
cwtl
push
jg
outsl
in
xchg
loop
ja
es
sub
jmp
rcr
push
fidivrs
dec
push
cld
imul
out
loope
or
inc
test
decl
lods
pusha
test
stos
adc
stos
mov
jae
in
xorl
xchg
cmp
les
cmp
out
sbb
pop
fidivl
clc
xchg
fisubrl
mov
clc
xor
dec
mov
fidivrl
or
dec
andb
inc
sarb
jnp
insl
je
in
in
push
fists
xor
aaa
fidivrs
mov
insl
sbb
pop
xchg
sub
lock
das
sub
std
cmp
mov
or
minps
pop
cmp
scas
scas
push
outsb
adc
push
xchg
daa
push
movb
das
outsb
nop
jb
rclb
stos
shl
mov
sahf
pop
test
stos
cs
xchg
out
push
jge
or
fsubl
fs
inc
sbb
dec
lret
pushl
clc
cmp
mov
and
adc
cwtl
and
addr16
negb
xchg
shl
mov
mov
dec
inc
inc
aam
sub
icebp
outsb
cld
je
sbb
jl
dec
mov
aas
xor
xor
inc
int
out
push
insl
in
mov
xor
ljmp
jmp
jl
adc
push
neg
add
cmp
xchg
mov
or
mov
adc
das
mov
repz
or
adc
fsubrs
push
mov
mov
add
arpl
movsl
mov
les
outsl
lea
mov
xor
adc
jmp
cltd
xlat
ja
push
pop
mov
mov
fsubr
cli
lea
xlat
xor
inc
stos
pop
lcall
inc
sub
imul
fsts
push
inc
cmp
mov
lods
sbb
js
mov
or
mov
outsl
mov
out
mov
push
in
mov
push
adc
sti
movsl
ret
out
ss
dec
sarb
mov
add
xor
aas
mov
nop
mov
lea
js
or
or
xchg
mov
push
aaa
jl
loope
clc
insl
sbbl
je
fs
push
test
xor
lea
dec
dec
jecxz
mov
mov
adc
out
mov
jne
sub
jns
enter
mov
push
rcl
push
dec
jne
pop
sbb
mov
and
out
xorb
add
sbb
sub
lcall
rcll
xchg
lock
xchg
ret
aas
test
sbb
sbb
pop
add
arpl
jp
imul
inc
xchg
mov
hlt
lods
push
add
faddl
addr16
outsl
sbb
jne
mov
add
loope
mov
stos
adc
mov
inc
outsb
addr16
aad
cmp
into
ds
push
sub
xor
mull
cli
cmpb
jb
rclb
ds
adc
insl
and
lds
push
aad
push
jae
fcomi
call
add
jecxz
and
cmp
ljmp
out
lods
jb
rcl
pop
sbb
scas
dec
fiaddl
out
das
fnstenv
add
sub
rorl
adc
xchg
call
decl
mov
in
push
inc
xlat
cmp
jnp
push
sbb
add
mov
daa
loop
sub
add
gs
iret
add
lahf
inc
and
cmp
inc
mov
in
mov
push
lcall
icebp
call
adc
mov
jno
pop
dec
hlt
mov
mov
cmp
push
das
add
push
mov
ficoms
and
cmpsb
xor
in
sbb
sub
lcall
mov
add
call
shl
mov
mov
test
lods
add
ljmp
mov
push
push
add
adc
add
jb
and
loop
adc
in
inc
adc
adc
or
fcmovnbe
pop
mov
and
sub
xchg
fildll
dec
add
loop
push
jp
aas
mov
fsubl
bound
add
stos
jmp
pop
and
loopne
jmp
mov
adc
xchg
pop
pop
jmp
stos
pop
inc
jno
push
mov
mov
movl
mov
std
test
mov
rcl
unpckhps
or
outsl
cmc
inc
jns
loopne
pop
push
rcll
sub
outsb
adc
ja
cmpsb
movl
dec
xor
pop
insb
mov
cmp
pusha
test
mov
push
xor
ficompl
or
insl
jecxz
fstpt
xor
push
cwtl
les
add
invd
inc
pop
or
fwait
inc
fists
or
lods
mov
in
pushl
popl
xlat
icebp
jnp
fisubrl
cltd
xchg
test
jp
mov
cld
test
xchg
stos
in
or
fwait
mov
out
mov
push
adc
test
decl
scas
mov
push
loop
mov
sub
sub
xchg
jno
bound
or
int
popa
and
jns
repnz
stos
xchg
or
repnz
ljmp
cs
jmp
cs
das
popa
mov
push
int3
popa
and
shrb
nop
jns
mov
das
idivb
fists
pop
mov
test
add
xchg
pop
pop
cmp
std
nop
xor
aam
add
mov
jg
fwait
es
and
jge
inc
lds
call
idivb
in
adc
idivb
jge
test
cmp
dec
aas
arpl
enter
fcomip
bnd
popa
test
clc
pop
jne
cwtl
adc
test
clc
mov
xchg
pop
push
cmp
sub
mov
rorb
outsl
jmp
hlt
pop
push
movsl
pop
pmullw
cmp
mov
mov
icebp
push
mov
decl
jg
in
mov
jmp
and
loop
mov
lret
pop
xor
in
lret
cmp
and
cmpsb
psraw
push
test
xchg
jnp
or
subb
xchg
jno
xchg
sub
or
roll
lret
mov
pushf
mov
add
and
mov
inc
mov
inc
inc
orl
inc
jmp
add
cmp
add
and
call
mov
dec
mov
aaa
mov
sub
in
push
sub
popf
pop
insb
daa
xchg
pop
pop
clc
mov
inc
test
jb
add
sbb
push
cmp
and
out
mov
daa
fdivr
mov
imul
mov
jl
cmp
and
fldl
fisttpl
adc
data16
scas
inc
mov
push
adc
lcall
jmp
shll
fcompl
cld
incb
inc
dec
in
or
jno
mov
mov
test
pop
ljmp
addb
adc
mov
bound
and
dec
cs
push
cmp
xlat
add
loopne
pop
add
jno
add
jns
mov
dec
cmc
xor
push
mov
mov
cltd
push
sub
fidivrs
lahf
push
cwtl
js
push
aaa
push
inc
inc
fdivr
out
lahf
mov
fstp
mov
and
nop
and
repnz
inc
pop
and
or
mov
ja
aad
pop
stos
jecxz
imul
aad
and
js
pop
outsb
mov
les
out
push
mov
xchg
cli
lcall
jno
dec
adc
nop
inc
push
xor
lcall
std
and
and
popa
jns
xor
jbe
jecxz
cmpsb
cmc
cmp
and
mov
mov
or
mov
pop
stc
dec
ficoms
ret
mov
cmp
jns
fists
rorb
leave
and
and
stc
shlb
pop
call
pop
repnz
adc
jle
cmp
jl
ret
mov
push
dec
sti
mov
adc
or
inc
xchg
lods
stos
aaa
fiaddl
adc
faddp
push
jge
and
mov
and
hlt
insl
in
jg
sbb
loopne
in
outsb
orl
inc
push
sub
pop
leave
xorb
mov
lock
clc
mov
enter
mov
push
xchg
ret
testb
xor
adc
push
inc
loop
repnz
out
or
fcomi
xor
mov
pop
xor
rolb
ljmp
sbb
inc
lcall
mov
cmpsl
xor
cmp
mov
xchg
xor
outsl
call
push
xchg
rcrl
ljmp
add
in
pop
icebp
lea
or
lcall
sbb
lcall
shll
push
insb
mov
lea
addb
imul
xor
add
mov
ret
mov
add
dec
scas
fdivrs
aaa
mov
out
in
mov
adc
mov
sbb
jmp
mov
stc
jns
jmp
stos
cmp
cmp
jl
loop
mov
pushw
int3
push
in
mov
loope
int
out
fdivs
dec
cld
push
mov
add
nop
sahf
out
dec
popa
decl
xor
sahf
jb
lods
inc
sub
sbb
pop
mov
jbe
mov
aaa
xchg
rcrb
jg
sbb
xchg
jo
adc
pop
int3
and
rcrb
or
jns
ljmp
sbb
adc
mov
sub
cmpsl
dec
subl
push
fstl
movsl
inc
sub
cmp
ljmp
cltd
or
jecxz
dec
in
inc
fwait
lret
shlb
rclb
test
das
insl
call
icebp
cmp
mov
aad
shll
cwtl
xor
icebp
ja
jbe
jge
outsl
pop
stos
or
jnp
stc
loope
mov
xchg
mov
push
xor
sub
mov
mov
pop
push
subl
test
mov
insb
jnp
push
xchg
add
adc
cmpsb
push
jno
loopne
je
or
add
xchg
jmp
fstpl
add
out
idiv
cmp
adc
or
adcl
dec
pop
aaa
repnz
jge
push
les
mov
inc
pop
fnstcw
test
test
orb
loope
and
cmp
mov
in
icebp
mov
mov
cli
imul
xor
in
push
add
pop
jne
es
inc
cs
mov
push
lcall
stc
lock
int
repz
mov
loopne
test
jge
or
stos
jne
mov
outsb
test
lret
test
mov
fdivrs
std
jmp
sbb
pop
inc
call
mov
mov
adc
mov
into
pop
inc
aam
int3
dec
lock
inc
jg
sti
mov
cmpsl
cmp
fucomi
and
push
arpl
rcrb
dec
lret
roll
push
cmp
or
ret
xor
scas
pop
cwtl
test
pop
lahf
and
cmpsb
jle
mov
mov
test
jo
jbe
addr16
test
cltd
adc
xchg
lret
mov
fldt
outsl
ja
xor
pop
xor
sti
mov
and
jb
cli
mov
dec
sbb
jae
cmp
pop
lock
in
cwtl
add
inc
lds
mov
sub
pop
popa
outsl
ffreep
in
inc
or
nop
rolb
inc
into
inc
jbe
repnz
add
rorb
vpmulhuw
mov
pop
mov
xchg
push
dec
adc
add
or
add
adc
jno
cmp
push
pop
rorl
test
dec
addr16
push
lahf
ljmp
iret
pop
shlb
shlb
jecxz
push
mov
or
stos
shlb
ja
sti
outsb
ljmp
push
arpl
mov
lret
ds
sti
adc
pop
add
lock
jl
mulps
cvtps2pd
das
and
or
rolb
dec
test
mov
pop
sub
add
add
push
mov
xor
adc
jbe
push
sbb
ss
rorb
ja
sbb
push
cmpsb
mov
mov
inc
inc
push
mov
mov
jae
sub
ret
cmpsb
es
incl
cmc
fdivl
cltd
mov
lock
xchg
mov
xchg
mov
pop
mov
inc
push
cwtl
in
mov
cld
incl
inc
sub
jbe
sahf
or
mov
icebp
add
mov
cli
aas
push
dec
xor
ljmp
js
push
lods
scas
pushf
fidivl
mov
pop
sbb
arpl
xor
inc
xchg
push
aaa
mov
data16
not
loope
sbb
inc
insl
pop
dec
int3
jp
inc
push
test
pop
loop
fcomps
jmp
fstpl
or
test
ja
loop
push
xlat
inc
push
or
bnd
mov
ret
jo
pop
mov
add
sbb
les
mov
test
testl
in
add
inc
dec
lds
loope
mov
xchg
mov
aam
xlat
mulb
sbb
in
adc
cmpsl
mov
aaa
xchg
cmpb
push
outsl
je
pop
sti
xchg
cmp
inc
iret
pop
jge
or
xchg
lea
jg
imul
cmp
dec
dec
aad
add
inc
dec
xchg
pop
add
push
dec
sbb
scas
fistpl
enter
and
insl
rorb
jae
addr16
push
sarb
pop
icebp
sub
inc
inc
jns
jno
cs
lods
ljmp
dec
lods
mov
jmp
push
test
in
cmp
cmp
subb
sbb
fidivs
adc
and
push
jecxz
cmp
and
push
or
pop
add
ret
mov
cmp
loopne
sub
out
stc
rcrb
lods
add
scas
aad
subb
cmpsb
push
xchg
insl
mov
push
cltd
gs
adc
inc
push
xor
or
cli
clc
sbb
pop
and
inc
sbb
mull
mov
adc
mov
in
pop
xchg
xchg
jle
jbe
call
sbb
mov
pop
adc
push
ficoms
add
inc
lea
inc
and
loopne
mov
pop
dec
jl
ret
aad
ret
inc
xchg
in
mov
cld
rolb
inc
loope
push
mov
fcom
insb
or
xor
fiadds
mov
inc
push
and
jecxz
inc
ret
insb
add
int
inc
sbb
ret
test
js
ljmp
lret
into
pusha
xor
in
or
lret
das
push
adc
fcmovnb
adc
sub
xor
insb
cli
lea
out
mov
pop
mov
jl
mov
pop
pop
adc
pushl
and
push
xchg
test
inc
cmpsl
cmp
cs
and
les
roll
rolb
outsb
xor
jbe
inc
fdivl
arpl
or
sbb
ja,pt
sbb
push
dec
mov
jecxz
xchg
push
mov
dec
pop
mov
push
cmp
loopne
cmp
and
push
ljmp
and
push
sub
mov
sbb
loop
shrb
push
xor
mov
mov
jle
lcall
lods
sbb
insb
xor
push
xchg
leave
std
call
add
sbb
mov
stos
and
or
mov
jb
jmp
push
test
jo
push
mov
push
lcall
xchg
lods
sti
push
jge
push
add
pop
jl
icebp
cmpsb
cs
imul
mov
ret
xor
xor
nop
es
jo
arpl
push
pop
outsl
xor
pop
out
test
fsub
stos
ja
ja
out
or
sub
fbstp
loopne
pop
inc
sti
and
je
loop
and
mov
jo
clc
lock
pop
test
scas
pop
inc
inc
fimuls
nop
jnp
outsl
in
sbb
mov
or
imul
pop
or
sbb
shlb
jnp
outsb
insb
movsl
add
call
inc
inc
outsl
mov
push
push
shlb
pushf
adc
jb
xor
shrb
xorb
nop
inc
adc
aad
dec
sbb
insl
not
and
roll
cmp
sar
adc
adc
daa
and
outsl
fdivrl
mov
scas
mov
fchs
mov
arpl
or
rolb
mov
push
and
sub
ffree
mov
sbb
stc
and
mov
inc
add
jb
movsl
pop
sbb
pop
cmp
cld
testb
xchg
stos
and
notl
rcr
xor
loop
ret
int3
xor
jno
jo
xor
lea
xchg
jle
jl
in
or
cmpsl
dec
inc
jmp
sub
test
aam
cmp
adc
jmp
and
out
mov
out
pusha
movlps
pop
cmp
bound
mov
sbb
mov
fists
xchg
adc
adc
sbb
mov
mov
lea
push
or
aaa
fstpt
sub
imul
inc
add
and
sub
jg
fbstp
add
mov
sbb
cmp
sbb
mov
push
cwtl
pop
jl
push
rolb
loopne
fistps
pop
stc
mov
mov
jne
or
out
fisubl
ja
adc
push
jg
xchg
and
fists
cmp
cmp
sub
jl
push
stc
popf
fwait
cwtl
inc
mov
je
push
mov
adc
clc
loope
or
in
pop
push
inc
neg
xchg
inc
cld
in
pusha
test
mov
das
mov
leave
sbb
cmpsb
aas
dec
mov
fstpt
sub
xor
and
dec
inc
insb
insl
pop
or
push
jle
loop
jcxz
inc
cmpsl
cmp
cmc
lods
lea
and
sub
in
and
inc
adc
adc
xor
add
and
jg
ljmp
cmp
addr16
loop
insl
in
adc
jnp
xchg
xchg
add
jnp
adc
cmp
dec
lret
orl
or
jle
fsub
inc
or
xorb
jge
in
ss
adc
xchg
xchg
mov
jecxz
adc
ss
or
clc
mov
jle
sbb
and
or
xor
shrl
pop
xchg
sbb
or
mov
fistps
stc
add
test
fwait
into
cmp
jb
daa
dec
add
jmp
out
fwait
xor
sub
cli
stos
xchg
insb
mov
and
pop
xor
iret
sbb
cmpsl
and
add
jge
mov
clc
jg
xchg
inc
jns
ljmp
cld
sub
mov
cmc
sbb
cld
or
mov
insl
cwtl
das
ljmp
cld
and
insl
push
out
pop
pusha
data16
add
scas
notb
inc
or
cli
mov
xor
inc
aam
test
jecxz
mov
loope
cmp
adcl
mov
adc
pmaxsw
pusha
push
xchg
mov
push
out
sbb
andb
adc
testb
dec
and
outsl
jecxz
dec
add
add
mov
movsl
test
cmp
roll
add
push
je
jo
movsb
movsb
ja
jbe
jb
adc
mov
lea
push
jo
xor
es
and
adc
push
hlt
cs
movsl
cmp
aad
mov
and
les
jae
sbb
jns
jg
scas
pop
mov
dec
out
xchg
test
call
test
mov
mov
rorl
push
or
testl
or
add
leave
mov
dec
xor
ror
sbb
sarb
xor
or
adc
inc
push
fists
sub
and
mov
dec
sbb
mov
xor
jae
testl
icebp
std
int
jns
jle
mov
or
movsl
pop
mov
mov
daa
shrb
mov
fistpll
call
das
loope
mov
push
mov
adc
negb
push
xor
enter
dec
es
int
dec
cld
or
ljmp
mov
mov
fstps
cli
negb
sub
aad
call
pop
jbe
pushf
cwtl
adc
adc
xchg
xor
call
sbb
sub
dec
add
imul
dec
fcoms
lock
xor
pop
inc
shrb
or
insb
adc
daa
mov
sbb
in
loopne
lcall
dec
lcall
pop
add
loopne
testb
iret
lock
ret
outsl
mov
frstor
inc
mov
sbb
add
mull
imul
add
pop
dec
sti
das
test
shlb
imul
mov
cld
adc
mov
inc
push
loopne
fisttpll
cltd
mov
adc
ss
jge
xchg
mov
mov
dec
jne
dec
testb
cmp
in
orb
lahf
test
cli
adcl
pop
inc
nop
out
push
and
aaa
jl
xor
inc
mov
out
sbb
lret
inc
push
sub
dec
mov
inc
sbb
inc
add
xor
mov
add
and
mov
jb
out
mov
fxch
dec
cli
inc
or
dec
push
in
cmp
aaa
outsb
int
mov
mov
rol
fistps
in
mov
movsb
fiadds
cltd
mov
jge
inc
mov
leave
mov
pop
xchg
push
add
cmp
cld
add
test
loopne
inc
orl
add
dec
and
sbb
outsb
pop
add
fisubs
mov
sarb
add
sub
inc
jo
rorb
xchg
fildll
push
xor
lods
insl
hlt
repnz
insb
xlat
inc
xchg
subl
or
or
shlb
xor
testb
inc
pop
repz
pop
sub
mov
adc
dec
jbe
in
inc
push
or
in
negl
andb
pop
adc
filds
mov
sbb
cwtl
mov
pop
cwtl
shr
and
mov
push
fimuls
pop
fisubrl
lea
call
inc
adc
push
inc
fcoml
sahf
or
xchg
push
jle
aam
ja
inc
sbb
sbb
sti
aaa
adc
fisubl
xchg
lock
clc
cmp
xchg
movsl
call
mov
and
pusha
mov
cmc
lods
addr16
inc
pop
clc
repnz
dec
dec
pop
xor
pop
pop
jge
and
pop
mov
push
loope
js
and
lcall
ffree
mov
fistps
adc
insb
loop
mov
cmp
mov
and
mov
andb
mov
inc
jo
fmulp
rclb
test
sbbl
push
jne,pn
cmp
sbb
or
mov
mov
dec
pop
rol
aaa
inc
cmpl
dec
std
mov
mull
or
sbb
inc
enter
xchg
push
rcrl
movsl
pop
push
movsl
daa
xchg
es
imul
not
pop
add
cmp
das
mov
adc
ljmp
fidivl
iret
shrl
in
fisttpl
mov
jl
call
inc
xor
scas
and
inc
data16
test
filds
cwtl
push
fsubs
jle
fdivr
mov
lret
pop
mov
push
stos
mov
test
fisttpll
inc
shl
jnp
inc
jno
push
mov
call
jg
les
sbb
out
mov
xlat
data16
xor
cmc
and
cmp
jns
cmp
adc
int
dec
loope
inc
lea
mov
jmp
aaa
or
call
lock
clc
lods
pop
add
loopne
loope
push
and
aam
fdivp
push
in
mov
jmp
decl
mov
aad
outsb
ljmp
push
mov
js
in
ret
scas
int3
or
jle
add
rcll
in
jl
mov
clc
sarl
out
into
aaa
sbb
xchg
push
mov
cmp
inc
xchg
clc
shlb
fstpt
dec
inc
mov
mov
outsl
in
jge
mov
ja
sbbl
jecxz
out
dec
cmp
sub
fwait
sbb
test
leave
test
sahf
cmp
cld
cld
call
jp
mov
adc
push
mov
inc
movsb
and
ljmp
scas
mov
or
ja
imul
add
pushl
pushl
outsb
or
push
aad
pop
xor
lret
mov
and
test
pshufw
jno
xor
mov
test
xchg
ss
das
mov
loopne
in
pop
clc
rsm
or
loopne
imul
sub
jecxz
setle
jmp
clc
lcall
xor
jb
rorb
ror
rclb
es
icebp
sub
jmp
cmp
add
cld
lods
jg
mov
and
add
pop
andl
pop
or
cmp
mov
xor
jne
cmp
inc
mov
popa
ret
jne
jmp
xchg
or
jno
insl
shll
lcall
je
mov
lahf
dec
and
clc
push
mov
leave
hlt
or
jg
les
cltd
jge
cwtl
mov
mov
imul
loop
ss
icebp
cmp
sub
jns
loope
ss
daa
inc
sub
sbb
pop
mov
int
xor
inc
and
dec
dec
pop
push
inc
sahf
mov
sub
cmc
scas
push
cwtl
test
mov
pusha
ds
bound
or
jg
inc
addr16
jmpw
in
stos
test
cmpsl
pop
sbb
xchg
fadd
aad
inc
scas
mov
jecxz
xor
aas
sbbb
mov
pop
mov
sub
mov
xchg
das
pop
outsl
ljmp
dec
adc
pop
mov
mov
cmc
call
mov
insl
enter
xor
mov
js
sub
lret
adc
gs
xchg
vmovhpd
pop
adc
das
scas
js
add
push
les
cli
scas
push
jmp
and
jmp
loopne
mov
jne
pop
or
lods
cmp
inc
xor
stos
adc
push
dec
ret
pop
loope
bound
xchg
and
or
lcall
std
mov
xor
add
das
jo
fcmovnbe
mov
addb
adc
pop
xchg
iret
dec
jo
push
and
jae
add
jl
fistps
test
nop
mov
xchg
add
decb
mov
addr16
test
pop
stos
cmc
push
shr
repz
rorl
push
xor
call
lds
mov
and
add
scas
stc
pop
mov
lods
sub
jae
pop
pop
mov
outsb
das
mov
shrl
push
jg
mov
arpl
and
cld
jg
es
jge
xchg
xchg
test
jmp
nop
mov
in
mov
ret
fs
jp
cs
sub
call
push
xchg
xchg
outsl
push
push
in
push
mov
mov
xchg
out
loopne
inc
pop
pop
dec
pop
and
fdivr
incl
mov
jge
push
jnp
xchg
outsl
and
jl
xchg
mov
mov
sub
inc
fiaddl
shlb
mov
aas
jbe
jg
pop
dec
lods
lds
bound
lcall
fistps
scas
insl
sahf
xchg
sahf
lcall
in
call
cltd
adc
enter
xchg
lods
inc
bound
sti
push
xchg
std
cmp
lcall
test
loopne
push
jge
cmp
sbb
sbbl
sub
jbe
sarb
rcl
mov
loop
inc
lods
daa
cld
inc
out
lods
leave
sub
jno
push
adc
mov
call
jns
xchg
mov
cli
lcall
call
test
pop
jbe
or
mov
mov
cmp
fistps
icebp
sub
gs
or
lret
push
mov
push
jl
popa
test
in
xor
sub
xor
das
rcll
mov
dec
inc
pop
adc
fisubrs
dec
sub
cmc
jg
push
cwtl
roll
data16
pop
jo
lahf
and
and
mov
stc
dec
mov
gs
cltd
add
enter
or
daa
call
decb
inc
call
insl
push
push
les
cs
or
mov
mov
jb
add
ret
inc
and
mov
popf
or
jno
jg
call
movsl
mov
mov
pop
negl
add
jmp
lret
in
outsl
hlt
jg
jecxz
xchg
loope,pn
fdivl
scas
imul
movsl
mov
je
subl
lcall
incl
bnd
and
hlt
push
mov
sub
push
lock
mov
sbb
push
icebp
call
sub
jg
imul
sub
xchg
pop
and
cmpl
xchg
pop
ja
inc
incl
mov
xor
mov
pop
out
test
xchg
xlat
xor
dec
hlt
dec
sbb
js
mov
es
mov
test
stc
adc
testb
jg
call
pop
notb
xchg
icebp
mov
fxch
xchg
daa
shlb
jnp
aaa
incl
les
xchg
ljmp
sub
pop
fsub
xchg
push
jnp
outsb
jg
mov
push
test
arpl
sub
and
stos
stos
in
push
mov
pushl
mov
mov
jno
lcall
sbb
mov
out
push
pop
cmp
lock
aas
ret
jl
cmc
mov
fdivrp
call
std
xchg
jge
inc
outsl
sub
popf
ret
jns
pop
fwait
inc
call
incl
sub
sbb
das
cli
aam
xchg
cmp
sbb
call
push
rcll
mov
add
repz
push
push
lods
mov
out
mov
push
adc
sbb
or
je
cmp
insl
ljmp
jae
in
testb
popa
mov
fistl
xchg
mov
jge
xchg
cmp
jle
enter
push
rorb
addr16
repz
xor
pop
call
cmp
shrb
jecxz
pop
sub
test
pushl
sub
ret
shrb
fwait
out
movsl
jnp
add
decl
cltd
aaa
pusha
add
jmp
test
int
mov
inc
mov
lock
add
aaa
jmp
inc
aam
jo
cmc
and
loope
cmp
imul
push
jg
jb
sti
outsb
loop
mov
dec
les
jp
mov
ljmp
test
push
ret
test
js
ljmp
mov
cmpsb
pop
nop
test
dec
cld
ljmp
sub
jle
enter
test
adc
nop
ret
clc
pushl
lds
scas
sbb
jecxz
lcall
sbb
jbe
rolb
pop
mov
jecxz
hlt
and
clc
or
js
adc
mov
push
push
subl
pop
gs
jbe
add
xchg
cli
sub
cmpsb
into
xor
sbb
mov
xor
addr16
imul
scas
cmp
aam
mov
gs
xlat
cltd
sti
fists
push
aaa
push
in
ret
in
fcompl
jae
aam
and
mov
incl
push
lods
decl
jmp
lret
stc
jl
push
xor
mov
cmp
dec
or
jno
jmp
in
inc
mov
jb
jle
dec
sbb
xor
out
dec
mov
stos
cmp
ljmp
mov
inc
stc
or
pop
shll
icebp
test
insl
jns
and
cld
loop
pop
mov
pop
pop
add
pop
imul
rolb
call
std
mov
les
adc
jne
and
push
pop
and
and
jg
lea
and
shrl
sbb
test
pop
mov
fnsave
mov
fcompl
push
xor
mov
ret
in
xor
xchg
cwtl
stc
push
push
dec
outsl
int
insl
js
rcrb
test
aam
sbb
sbb
dec
xor
jl
add
ljmp
fists
xchg
cmp
cmpsb
aad
je
mov
sbb
and
lcall
test
lods
pop
sbb
inc
jge
fiaddl
enter
push
aam
fwait
dec
add
lods
push
lret
decl
pusha
inc
cmp
movb
mov
inc
mov
dec
xchg
jbe
fwait
enter
aaa
movsl
decl
pop
clc
cmp
fdivl
dec
cmp
daa
push
mov
jae
rolb
fxch
aad
push
aaa
cli
lods
xor
notb
add
mov
dec
jcxz
push
add
outsb
das
sbb
aad
adc
decl
cmp
inc
add
xchg
mov
into
fisttps
jo
outsb
jne
mov
sahf
stc
mov
ja
cmpsb
sbb
ffree
ljmp
adcl
lock
add
jmp
jo
cmp
mov
push
cltd
pop
movsl
loopne
mov
mov
sub
lea
xchg
aad
dec
mov
or
mov
and
sub
mov
push
incl
ljmp
fisubs
mov
std
jmp
fucomp
jg
mov
push
cmp
movsl
jmp
test
call
test
iret
mov
out
cmc
mov
pushf
fidivrl
mov
decl
dec
fwait
jno
push
cmp
or
sarl
cmp
out
adc
inc
stos
push
sbb
cltd
clc
sub
fsubs
outsl
lds
loopne
pop
loopne
pop
jns
cmp
or
bnd
lahf
xchg
xor
jp
lcall
mov
mov
cmp
cmpsb
out
pop
sbbl
lods
notb
std
js
dec
push
ljmp
cmp
sub
push
push
mov
xchg
push
pop
or
daa
pop
add
mov
pop
out
push
pop
mov
pop
imul
jge
jmp
ljmp
xlat
inc
pop
sub
js
jg
fisttps
sub
test
push
aas
test
xchg
adc
add
aas
push
mov
mov
sahf
mov
mov
inc
mov
aam
xlat
mov
repz
call
call
popa
xlat
xor
outsl
pop
jle
aas
push
stos
rclb
pop
std
lcall
cmc
dec
sbb
icebp
ss
frstor
je
test
call
mov
adc
push
sub
pop
imul
dec
inc
push
movsl
sahf
pop
mov
je
mov
mov
loope
push
js
mov
sahf
in
test
mov
aam
xor
pop
aas
les
repnz
in
movsl
adc
lcall
js
insl
push
test
and
fstpl
sbb
testl
std
idiv
decl
sti
adcb
cwtl
test
out
sbb
lret
sbb
sub
pop
mov
lcall
dec
sbb
stos
mov
xor
mov
repz
in
mov
fwait
xor
mov
jg
test
stos
in
inc
jecxz
mov
fists
add
xchg
push
push
std
incl
inc
or
out
daa
push
cld
ret
jnp
pop
dec
jl
push
imul
scas
mov
imull
pop
test
mov
fdivrl
popf
aaa
out
sbb
pop
das
repz
pop
add
mov
xlat
mov
pop
stos
jle
jle
jmp
ret
pusha
pop
lea
test
aaa
mov
mov
inc
arpl
xchg
xor
jmp
outsb
dec
jnp
push
int3
rclb
ss
scas
scas
lods
push
sbb
fdivrs
jmp
or
pop
loop
push
pop
ret
dec
adc
loope
cmp
divb
push
jmp
mov
jo
jbe
fstpt
mov
xlat
jge
jg
jns
adc
adc
cmc
sub
or
add
xchg
jae
pop
xchg
sbb
decl
iret
mov
dec
stc
jno
jae
jg
fwait
lods
mov
lock
loop
mov
adc
out
jb
notl
mov
push
mov
pop
aaa
sub
push
in
rcrl
aaa
lret
jbe
ja
sub
scas
push
adc
sbb
jg
sbb
inc
das
xor
pusha
out
pop
fnsave
jmp
jmp
and
les
push
sbb
mov
adc
fsts
aam
sbb
adc
mov
push
loopne
cmp
mov
dec
push
jl
insb
stos
call
jno
mov
xor
sub
pop
cli
gs
xchg
pusha
or
jno
xchg
cmc
jle
cmpsl
xchg
push
test
xchg
ret
dec
lcall
popf
xor
popf
pushf
pop
xor
inc
pop
mov
ja
leave
lods
cmp
and
incl
pop
insb
mov
or
addr16
popa
nop
sarl
fmuls
stc
pop
pop
mov
cwtl
xchg
inc
cmpsb
ret
pop
fs
lahf
add
push
rorl
stc
shlb
xor
xchg
jns
push
xchg
push
add
and
and
mov
lods
iret
aad
pop
or
call
call
pop
sub
add
stos
outsl
ret
stos
push
imul
incl
scas
shrb
adc
les
lahf
in
mov
decl
in
bound
aaa
dec
inc
adc
xchg
lea
cmpxchg
dec
call
jge
sar
adc
mov
and
pop
mov
or
call
xor
fistpl
sbb
mov
call
loope
stos
test
arpl
push
mov
int
pop
out
iret
jge
mov
int3
jge
cld
mov
pop
into
xor
dec
in
push
add
ds
in
or
jmp
inc
fisttpl
mov
add
stos
cmp
mov
inc
mov
leave
mov
into
leave
mov
mov
cmc
popf
andb
mov
jmp
jne
repnz
sbb
push
or
es
cmp
std
inc
addr16
or
mov
loope
cmpl
test
sbb
daa
push
xlat
cmp
xchg
mov
out
xchg
aas
std
dec
cld
dec
adc
adc
enter
pop
mov
pop
cmpsb
mov
push
mov
ljmp
inc
aaa
jl
dec
pop
mov
test
cmp
cmp
add
call
in
test
xchg
popf
pusha
lea
arpl
cmp
mov
xchg
pusha
int
cmp
mov
test
flds
mov
sbb
jg
pop
cmp
xchg
xor
pop
jl
cmc
orl
test
popa
je
and
fcoms
jg
inc
in
cld
popa
mov
mov
cmp
addr16
push
jge
and
mov
loope
cwtl
mulb
cltd
fidivrs
addl
lock
pop
push
clc
decl
repnz
fistps
dec
dec
mov
jne
aad
ljmp
orb
cltd
jns
andl
inc
lds
or
mov
cmpsb
arpl
xchg
clc
sti
scas
push
adc
add
adc
fdivr
je
xchg
aad
lcall
mov
fwait
inc
mov
scas
mov
into
in
das
pop
jecxz
push
scas
outsb
aam
sbb
push
cmc
sub
mov
stc
jmp
dec
std
sbb
and
mov
addr16
std
int
cmp
outsl
ja
mov
inc
pop
loopne
in
fs
les
or
jne
icebp
push
std
dec
pop
popf
lods
cmc
mov
xchg
xor
add
aad
ljmp
loope
pop
push
loope
sti
aam
out
mov
movsb
dec
adc
xor
inc
add
cmp
rol
and
jg
jmp
add
dec
xchg
fdivs
mov
push
aad
lods
ljmp
jo
and
scas
lds
inc
and
jmp
clc
xor
decb
test
pop
sbb
sbb
pop
mov
sbb
pop
outsl
outsb
int3
in
inc
xchg
test
or
in
dec
jmp
clc
ds
pushl
xor
in
dec
test
mov
hlt
dec
sub
sbb
dec
lods
sub
cmc
insb
add
mov
push
loopne
enter
rorb
lret
movsb
mov
jb
mov
cli
mov
xlat
mov
stos
push
xchg
into
aas
push
in
mov
mov
in
test
stos
shrb
das
pop
push
dec
cmp
je
pusha
pop
push
cmp
pushl
mov
xchg
sub
inc
fldenv
xor
pop
mov
jmp
dec
push
push
lock
pop
mov
or
and
sbb
jg
push
arpl
lcall
fsub
push
mov
addr16
addr16
insb
inc
leave
xchg
lds
ljmp
rclb
fbstp
inc
jo
stos
in
repnz
jg
je
sbb
fwait
inc
cmp
sbb
in
dec
cmpsl
fisttpl
out
xor
nop
push
sub
mov
es
lods
into
lahf
xchg
mov
inc
sbb
sub
out
pop
loopne
inc
insl
test
sub
sub
in
push
pop
ror
jge
xorb
lcall
add
mov
loope
or
fisubrs
mov
jg
test
hlt
test
popa
fmull
fisubs
aad
adc
sbb
pop
loop
pop
xorl
xchg
sub
cwtl
xor
pop
pop
aam
mov
imul
xchg
add
push
jb
mov
jbe
gs
jmp
dec
loopne
lcall
jb
pop
sbb
or
sbb
dec
jb
mov
icebp
push
outsb
mov
jp
add
push
cmpsb
orb
push
adc
adc
movsl
sub
shrl
cmpsl
mov
cld
ss
decl
mov
push
and
jno
call
push
fdiv
sbb
loopne
xchg
cmp
les
test
fldl
xor
push
mov
call
sub
stos
sub
jne
push
push
lcall
mov
lret
sub
mov
leave
add
outsb
or
fwait
push
jp
and
sbb
dec
cli
dec
stc
in
pop
xlat
inc
dec
mov
xor
mov
dec
xchg
pusha
lods
mov
inc
gs
out
cmp
and
push
cld
inc
out
dec
dec
std
clc
bound
xor
dec
and
fdivr
jg
adc
iret
pmaddwd
shl
jle
iret
aaa
in
sbb
shlb
call
add
je
imul
test
ja
stos
sbb
lods
cmp
scas
icebp
ss
push
add
and
pushl
or
lret
and
jecxz
fisubrl
sbb
push
push
and
ret
cmp
jne
jns
mov
inc
loope
mov
and
sub
xor
push
jo
mov
fcompl
push
mul
mov
orl
pop
jmp
out
adc
cmp
push
pop
pop
das
pop
lahf
clc
xchg
push
sub
push
jbe
hlt
imul
dec
or
mov
mov
mov
cwtl
in
jae
loopnew
cltd
pop
jmp
out
mov
ret
xor
lcall
xchg
stc
xchg
call
call
es
inc
ljmp
dec
clc
aaa
jg
std
xor
mov
lock
fbstp
mov
iret
pop
pop
inc
jmp
mov
jg
pusha
pop
popf
sbb
es
mov
test
fiaddl
and
pop
pop
ja
cmp
addps
in
pop
sbb
incl
decb
movsb
dec
shrb
cmp
pop
add
js
mov
ljmp
jo
sbb
std
jg
jmp
loop
push
mov
inc
shlb
cmp
sub
mov
and
mov
push
xchg
push
mov
cltd
sub
rcl
or
mov
aaa
test
cld
out
cld
xchg
sarb
call
pushf
mov
mov
outsb
adc
xor
das
icebp
lcall
testl
lcall
inc
lods
push
inc
pop
sbb
outsb
adc
movsl
jle
cmp
mov
mov
decl
out
mov
sub
mov
pop
pop
pop
cltd
jno
inc
hlt
ljmp
les
mov
xchg
push
or
pop
cmp
cmpsb
dec
push
xor
mov
jbe
mov
loop
sub
xor
xchg
adc
and
aaa
js
pop
loope
call
call
dec
push
push
incl
push
test
mov
mov
push
cmp
je
ret
or
lock
push
mov
add
xchg
push
call
sub
fdiv
inc
lcall
scas
mov
xchg
gs
mov
mov
imul
mov
leave
cmpsl
add
out
sbbl
call
push
inc
sub
shlb
xor
xchg
cmc
enter
fsubrl
clc
cwtl
aas
inc
pop
stc
aam
decl
add
inc
aas
inc
push
out
lea
mov
call
mov
mov
xor
out
and
mov
add
fbstp
pushf
aad
or
imul
sbb
and
xchg
loop
nop
or
lahf
daa
fsubl
insl
mov
scas
cmc
mov
test
sub
xchg
sub
pop
jge
pop
sbb
movsl
lea
decl
pop
add
adc
mov
fsts
or
mulb
call
iret
jp
aam
sub
in
outsb
shrl
mov
sub
movsl
call
mov
insb
adc
mov
movsl
cld
mov
bound
js
leave
pop
push
lock
mov
and
lcall
add
roll
fldenv
dec
call
mov
push
fdivrl
xchg
cmp
fcom
or
jl
daa
dec
mov
cmp
jg
push
out
jge
leave
sbb
sub
pop
inc
adc
jg
imul
or
js
ret
inc
pusha
rorb
dec
xchg
pop
clc
sbb
inc
dec
xchg
mov
aam
push
xchg
mov
lret
fbld
pop
jae
jne
popa
call
mov
cld
les
mov
lcall
sar
and
sub
leave
imul
icebp
outsl
lahf
or
dec
stc
test
sub
imul
hlt
push
fstpt
xor
jno
fs
xlat
cwtl
sbb
fmulp
fcmovnu
out
in
xchg
adc
pop
rcrb
psubusb
cmp
inc
repz
mov
mov
sub
jmp
sbb
xor
shlb
or
out
add
pushf
or
ljmp
jno
ds
mov
leave
adc
jns
jns
leave
ljmp
scas
dec
and
js
mov
inc
mov
subl
xchg
mov
mov
ljmp
push
fistpll
ja
adcl
cli
rcl
cltd
pop
popf
int
xchg
jecxz
insl
std
mov
sarl
xor
pop
push
loope
rcr
and
jae
xchg
jmp
jae
movsl
movsl
add
jb
lods
mov
test
sbb
incl
leave
lahf
jg
imul
jge
cli
pop
repz
lea
mov
loop
and
xor
dec
int
mov
dec
fs
incl
ljmp
sahf
mov
mov
pcmpeqw
mov
enter
push
jbe
push
outsl
push
fdivp
addr16
aas
and
mov
or
lcall
cmc
mov
mov
jnp
or
ja
cmp
jmp
sbb
movl
or
lahf
fstpl
daa
xchg
out
test
je
in
adc
icebp
xchg
clc
lcall
mov
pop
jp,pt
ja
jo
stos
cmp
cmp
mov
mov
or
dec
cmp
das
dec
scas
ret
add
arpl
outsb
or
popa
mov
pop
push
jb
lock
mov
or
outsl
mov
pop
clc
cmp
fucomip
mov
and
shrb
jecxz
push
ljmp
out
out
decl
lret
push
inc
and
xor
imull
movsl
sbb
lcall
incb
dec
shrb
add
cmp
in
in
add
lea
incl
cmp
scas
stc
and
mov
jmp
jns
xchg
insl
jmp
cmp
xchg
dec
sub
inc
jg
cmp
mov
in
test
inc
sbb
out
popf
dec
dec
test
into
lret
sub
fiaddl
mov
sahf
pop
sub
pop
xor
cmp
std
lcall
dec
or
and
push
sbb
cmpsl
cli
push
lahf
in
aad
test
xchg
mov
mov
jnp
dec
xchg
and
jns
fisubrl
push
xchg
negl
pop
dec
jbe
ja
sbb
das
pop
outsl
js
int3
int3
mull
jg
jmp
xchg
insl
jmp
xchg
and
xor
cs
movsb
hlt
out
fidivs
dec
jge
dec
test
test
mov
sbb
mov
or
aaa
and
jg
cmp
push
out
repnz
sub
or
movsb
jg
test
jae
fnsave
std
popa
mov
jae
fxch
sub
clc
sarb
inc
xchg
xor
out
mov
xchg
push
sbb
xchg
push
cmpsb
cld
pushl
and
add
pop
rclb
sahf
lcall
hlt
jmp
xorl
inc
sub
lods
pop
out
sarl
or
push
cli
or
fmul
shrb
mov
jnp
inc
lahf
or
scas
lods
sbb
stc
inc
add
jmp
decl
mov
pushf
push
xchg
sub
mov
mov
mov
aad
xlat
cmp
xor
pushf
xor
cmp
mov
jo
pop
push
push
imul
adc
inc
mov
pushl
pop
or
paddsb
mov
or
mov
dec
ret
push
push
fwait
pop
dec
mov
push
ficompl
enter
outsl
add
dec
lret
mov
ficompl
inc
pop
inc
test
add
fndisi(8087
mull
cmc
incl
fwait
xchg
pop
sbb
jle
outsb
lods
add
push
lcall
mov
loope
outsl
cmp
mov
cmp
cli
es
testl
and
inc
inc
pop
into
shlb
mov
loopne
push
stos
mov
push
call
cli
mov
mov
arpl
mov
cld
cmp
outsl
inc
add
call
dec
sbb
enter
popa
mov
xchg
mov
xlat
dec
cld
outsl
cmc
xchg
ja
jnp
and
sti
sbb
std
push
mov
pushl
pop
fwait
mov
or
xor
pop
test
push
jg
mov
jl
inc
in
stos
cltd
xchg
aad
pop
xor
jg
mov
stc
daa
call
shrb
jl
pop
loop
cmc
pop
add
clc
jns
dec
fwait
and
aas
cs
vmaxsd
das
or
push
xor
push
imul
imul
add
push
mov
sti
aaa
pop
push
int3
mov
loope
inc
repz
daa
fstl
outsb
mov
pop
mov
cmc
mov
push
mov
in
sub
dec
xor
mov
aam
incl
shlb
xchg
gs
fistl
sub
adc
lcall
adc
or
lods
sbb
xchg
sti
into
inc
and
mov
insl
cmp
xor
jle
clc
xor
lret
iret
sbb
scas
mov
mov
pop
cmpsl
imul
lods
outsb
stos
das
xchg
test
clc
mov
ljmp
xor
ds
std
mov
or
xchg
xchg
cwtl
pusha
adc
shll
iret
cmp
test
outsl
lock
fists
lcall
insb
int3
xor
mov
lock
stos
sbb
pop
rclb
inc
sbbb
jbe
decl
push
incb
cmc
adc
andl
popf
push
pusha
sbb
jmp
mov
jbe
test
lcallw
cmp
inc
aad
movsl
imulb
mov
push
and
sar
mov
jae
xor
dec
loope
das
jmp
add
imull
cld
lret
push
lcall
lods
push
es
sbb
mov
jmp
dec
push
jg,pt
mov
lret
movsb
pop
jns
mov
ljmp
incl
jb,pn
add
jmp
xchg
fmull
cmc
xchg
rcl
sbb
fadd
cmpsb
daa
and
dec
xchg
lock
and
decl
sbb
out
roll
jnp
testl
pop
out
xchg
dec
mov
cmp
pushl
sub
mov
cmp
cmp
data16
stc
or
fstps
cmpsl
cmp
outsl
sub
jge
mov
xchg
sub
enter
sub
shr
sub
jg
push
data16
push
fwait
shl
outsl
sbb
pusha
ret
rorl
insl
add
mov
jg
rorl
dec
pop
add
sbb
add
jnp
xor
mov
or
xchg
sarl
or
cltd
mov
push
mov
add
mov
mov
mov
pushf
dec
popa
incb
call
push
in
jecxz
sbb
fisubs
sarb
lds
push
cltd
add
jle
or
cs
jmp
lret
dec
adc
leave
or
pop
test
loope
xchg
or
popf
clc
call
mov
and
push
mov
dec
xor
lea
inc
call
jmp
or
call
jae
xor
call
pushf
orb
xchg
add
fadds
jg
cmp
mov
sub
xor
int
cli
jge
mov
push
jmp
ret
psubd
mov
sbb
jnp
mov
data16
pop
clc
pushl
push
jo
insb
jmp
cmpl
aaa
sub
lcall
mov
and
notl
cltd
in
std
fs
call
add
cmp
jmp
or
shrb
jmp
repz
call
rcr
xchg
push
adc
aas
cmp
sbb
decl
decl
arpl
int3
dec
pop
repnz
lret
aaa
dec
mov
jmp
pop
mov
xchg
xor
or
add
mov
cli
mov
push
mov
cmpsw
cmp
sbb
pop
cmp
push
mov
push
out
ret
adc
incl
lods
notl
rol
addr16
movsb
js
mov
xlat
or
jg
mov
sbb
scas
neg
add
pop
xor
sarb
jns
lcall
pop
inc
jb
xlat
fwait
sbb
imul
jne
in
pop
int
mov
test
decb
lret
sub
mov
in
es
xor
jnp
out
sar
fbld
mov
push
rcrb
pop
jp
and
scas
jmp
jns
into
imul
lods
jl
and
dec
mov
inc
popa
jg
mov
and
xor
add
push
mov
push
hlt
nop
sub
sub
mov
cld
xchg
cmp
pop
call
negl
fimuls
aad
enter
sub
shll
or
jg
out
ljmp
mov
and
aas
jl
jns
das
xor
mov
mov
sbb
push
gs
test
jl
mov
in
jno
pop
sub
push
cmpsl
and
push
call
jo
inc
aam
test
jmp
push
jb
iret
imul
mov
cwtl
inc
xor
mov
int
add
clc
call
stos
and
hlt
mov
sti
les
ret
pop
out
mov
jle
test
jns
mov
jmp
adc
or
je
jae
mov
imul
lock
jecxz
icebp
lcall
int3
or
pop
mov
loope
inc
pop
mov
cmc
cmp
pop
push
outsl
adc
cld
sti
add
dec
mov
adc
push
dec
outsb
lcall
decl
out
outsl
xor
mov
push
popa
xor
or
call
mov
frstor
dec
push
xchg
jg
popa
push
mov
adc
dec
outsb
icebp
mov
hlt
fisubs
dec
jmp
xchg
into
or
stos
jae
popa
or
mov
jmp
cli
push
jg
stc
push
frstor
inc
mov
aaa
incl
scas
aas
xor
mov
jns,pn
js
pushl
shlb
push
inc
std
push
jo
pop
cmpsb
adc
pushw
daa
jns
pop
jno
jg
leave
jb
divb
sub
pusha
pop
cmc
fwait
jecxz
mov
fisubrs
incl
cltd
je
movsl
stc
mov
pop
sbb
cmpsl
mov
push
sti
ja
cmc
xchg
add
adc
mov
jb
mov
sbb
jbe
faddp
in
das
lock
pop
push
xchg
clc
leave
icebp
out
and
mov
lock
sub
fdivs
and
repnz
and
inc
call
push
sbb
adc
aad
or
cmp
mov
sbb
or
loopne
aam
or
clc
mov
aam
lock
mov
aam
pop
fisttpll
ret
xor
pusha
mov
mov
ljmp
mov
fs
in
mov
aad
cmpsl
andl
push
or
cld
jmp
hlt
hlt
jle
cltd
jecxz
pop
in
dec
pusha
fcoms
mov
jge
aam
je
fucomip
incl
xor
mov
add
add
shll
pop
jmp
js
mov
push
fildl
stc
mov
xchg
rolb
pop
jg
jg
push
jge
and
or
mov
cmp
mov
jne
jne
rclb
cmp
movsl
mov
cmc
sub
jle
stos
std
mov
mov
call
cmc
lret
fistps
mov
test
nop
mov
movsl
repnz
repz
incl
jns
mov
dec
stos
xchg
pop
call
pusha
xorb
outsl
inc
roll
lea
jmp
push
jne
jg
popf
outsl
popf
mov
fildl
insl
xor
in
push
add
into
into
add
mov
cltd
xchg
test
ljmp
and
sub
in
shlb
repnz
stos
and
incl
cs
xchg
xchg
loop
mov
pop
pop
div
fimuls
xchg
jg
lea
shlb
xchg
jp
faddl
jb
xchg
mov
jecxz
jne
sbb
xor
adc
push
lock
mov
cmp
jecxz
mov
push
call
push
mov
xchg
icebp
xchg
push
hlt
mov
mov
aaa
inc
pop
xchg
ja
or
push
mov
pop
add
cmc
call
mov
aas
sub
fs
out
mov
pusha
mov
pop
iret
pop
push
jmp
out
test
iret
mov
out
fbstp
pushf
aaa
push
lret
xchg
mov
push
mov
jl
call
lods
mov
imul
int3
lcall
pop
out
scas
xchg
pop
jg
mov
mov
sti
and
cmp
cwtl
xchg
jmp
decl
gs
enter
mov
bound
inc
mov
adc
sub
sbb
sbb
jne
mov
xor
mov
and
icebp
add
arpl
lods
fucomip
incl
cmpsl
int
ljmp
mov
das
hlt
inc
sti
outsb
mov
insl
rcr
xor
or
add
pop
adc
xor
add
arpl
push
jmp
mov
std
xor
fldl
add
jmp
test
dec
testb
fcoml
cs
cwtl
mov
add
lock
decl
mov
aas
popf
inc
mov
jns
fwait
int3
aaa
push
lcall
push
mov
insl
jb
ja
cmpsb
fstpt
mov
repnz
pushl
ss
sbb
jge
popa
push
or
pop
pop
mov
fucomip
sub
test
cmpsl
repnz
xor
mov
xchg
ljmp
stc
lret
pop
cli
test
mov
mov
mov
mov
jmp
push
xchg
fcoms
loop
rorl
add
addl
ljmp
inc
push
mov
sub
push
scas
mov
push
jae
movsl
popf
mov
test
movsl
inc
add
lcall
ljmp
hlt
ljmp
sub
jg
loope
cmpsb
movb
inc
fldt
sar
incl
jbe
adc
mov
leave
insl
loop
push
cld
push
mov
sar
loop
movsb
into
dec
ja
and
addr16
movsl
pop
aad
mov
decl
sub
out
cmp
mul
sub
scas
bound
filds
and
cmp
cmpsl
cltd
fwait
movsl
loope
decl
jns
push
repz
inc
xchg
sbb
jle
enter
adc
insb
cmp
mov
jg
shlb
inc
cmp
mov
pop
or
enter
ljmp
adc
decl
addr16
mov
scas
inc
mov
add
sahf
sub
fcomps
mov
stos
xor
cmc
js
outsb
sahf
ds
jmp
movntq
out
decl
int3
or
jg
jne
push
push
dec
flds
popf
cmp
jecxz
clc
lcall
js
adc
test
push
loopne
mov
icebp
adcl
pop
aas
and
cmp
call
rep
call
xor
ret
fisttpll
ljmp
mov
jne
daa
jge
cmp
lock
push
jg
xlat
imul
cwtl
cmp
sub
adc
lcall
cld
push
fiaddl
or
cli
das
std
decl
fiaddl
lret
dec
stc
aas
add
js
and
add
sbbl
fucomip
lods
out
mov
mov
push
rolb
and
fnstsw
test
jge
inc
mov
xchg
pop
loop
rcr
pop
pop
ljmp
push
shlb
sahf
das
jge
loopne
mov
push
aas
sub
call
bound
mov
mov
xchg
ret
push
sub
adc
jbe
fstp
inc
cs
cmc
por
lcall
cmp
scas
ret
and
stos
aaa
pop
fwait
mov
or
inc
lret
ds
lea
fisttpll
movsb
inc
xorl
cmp
pushl
std
jo
sub
push
mov
in
inc
cmp
addr16
outsl
mov
incl
xchg
jg
mov
mov
mov
insb
inc
sub
clc
dec
adc
xchg
loope
outsb
in
mov
inc
cmp
fidivrs
shlb
dec
sub
sbb
jle
ss
jle
push
out
add
cmc
mov
inc
js
adc
pushf
jp
dec
cmp
lret
scas
test
hlt
mov
ds
mov
incl
xlat
aad
jne
cli
jg
shlb
ja
cld
cmp
inc
outsb
cmp
jmp
cmp
fbstp
cltd
mov
loop
fwait
pop
das
mov
xchg
and
incl
incb
mov
jo
and
std
cmpsl
dec
pop
cmp
stc
mov
loop
cmp
mov
and
jae
lcall
pop
jbe
fiaddl
in
ret
pop
orl
inc
in
mov
ljmp
fwait
ret
fdivrl
lcall
lds
cmp
shrl
inc
or
or
mov
mov
out
add
bound
mov
data16
lock
dec
loope
incl
aad
mov
mov
dec
add
push
adc
decl
jae
mov
cltd
lock
mov
lock
adc
sub
pop
loopne
enter
into
bound
sub
cs
mov
cmp
sarl
sub
push
xchg
jmp
xlat
cwtl
mov
mov
decl
and
push
pop
mov
decl
jecxz
or
sub
mov
sbb
inc
adc
call
jae
or
inc
push
mov
mov
in
jne
cmpsl
dec
xchg
jbe
add
and
pushl
fistpl
out
bound
ds
stos
and
popf
mov
adc
add
pop
shr
fiadds
xchg
add
inc
insl
loopne
pusha
cld
les
sub
jl
orb
in
cltd
pushf
push
repnz
pop
lock
mov
push
and
nop
xchg
pop
xchg
sub
ljmp
and
xor
mov
jb
outsl
xchg
xor
push
lahf
add
add
adc
push
add
fdivrl
out
das
push
xor
out
shll
test
push
adc
pusha
push
xchg
sahf
push
jl
cvtdq2ps
addl
pushl
sub
xor
inc
outsl
clc
cli
mov
stc
cmp
test
mov
lea
decl
inc
out
push
addr16
test
in
inc
xor
sub
sub
jns
sahf
push
xchg
jg
call
add
ja
mov
movsb
or
dec
out
scas
in
cmpsl
inc
mov
enter
aad
imul
lcall
rorb
test
xchg
jge
cmpsb
cmp
pushf
call
push
or
lcall
repz
cmpsb
addr16
dec
jg
sbb
pop
mov
daa
je
inc
jecxz
repnz
sbb
xchg
pop
js
push
xor
rol
das
decl
xor
pop
gs
and
inc
jae
cmpsl
mov
mov
cmp
mov
pop
dec
outsb
jmp
or
in
sbb
std
dec
jnp
cltd
pop
jecxz
fsubrs
mov
mov
insb
jne
loopne
lahf
aam
lcall
xor
or
and
repz
inc
sub
pop
in
repnz
pop
mov
mov
cmc
aaa
cli
jmp
leave
outsb
pop
idivb
push
pop
cmp
int
lcall
out
aam
gs
test
mov
adcb
dec
loope
test
or
call
jne
lret
in
sarb
pop
push
add
in
negl
fmull
lcall
sbbl
xor
repz
and
inc
mov
push
popa
pop
or
in
in
sbb
jg
xor
lock
fidivl
in
js
fsubrl
call
dec
gs
test
sub
xor
add
xor
int
jmp
xor
pop
rorb
sbb
jl
cs
aas
sbb
les
fldcw
clc
decl
flds
nop
roll
or
jecxz
in
inc
lcall
cld
shrb
test
clc
push
push
jecxz
rolb
dec
sbb
inc
xor
in
fwait
or
xchg
addl
aad
pusha
mov
mov
lret
adc
clc
outsb
sub
subb
jns
push
arpl
das
sar
add
sbb
xchg
mov
or
mov
decl
shlb
sub
dec
inc
dec
pop
js
rorl
jmp
fnstsw
cmpsl
ficoml
mov
cmc
cmp
sarb
xchg
test
add
add
pop
cli
inc
mov
dec
mov
or
jge
pop
mov
fiaddl
xor
inc
imul
lret
xchg
clc
call
push
leave
sub
sbb
mov
cmp
fisttps
dec
sub
inc
xchg
pop
sti
push
or
enter
dec
pop
push
lods
xchg
jno
popf
decl
incl
lods
fucomp
lcall
xor
iret
cmp
call
adc
mov
in
mov
jne
or
inc
call
incl
jecxz
xorl
inc
test
and
scas
push
movl
decl
push
aas
daa
push
or
cmp
sbb
pushl
inc
ss
in
mov
xchg
clc
test
pop
les
jmp
xor
cs
loope
and
sub
insl
mov
cwtl
in
dec
std
cmc
mov
xchg
es
pop
insb
sub
pop
imul
or
pop
xor
inc
aam
test
call
mov
jle
jnp
inc
lods
call
mov
adc
call
js
in
pushl
scas
dec
imul
cltd
jp
adc
mov
ret
test
sub
decl
and
push
jmp
fdivrl
in
fbstp
testb
fisubl
pop
add
fistps
xor
dec
lcall
dec
je
or
mov
mov
push
pop
dec
test
jl
lret
test
ljmp
jle
cmp
daa
outsb
pusha
cs
jg
sub
jae
in
cmpsb
push
pop
inc
mov
pop
ror
mov
xchg
and
ficomps
pushl
daa
mov
jns
lcall
mov
lods
mov
in
call
dec
pushf
jo
into
scas
ds
adc
fsubrl
sbb
rclb
repz
jecxz
pop
mov
pusha
add
aas
push
sub
sbb
pop
std
in
leave
mov
mov
jmp
pop
scas
test
and
jle
loop
mov
lock
mov
ja
lahf
or
testl
lods
dec
xlat
jmp
jne
lods
in
call
cld
or
test
sub
mov
loop
jp
inc
lcall
xor
and
push
loop
mov
dec
test
rcl
push
test
pop
or
test
div
mov
in
dec
jg
outsl
fsubrs
sub
test
test
test
or
outsl
mov
jecxz
mov
lcall
cld
push
adc
dec
or
cmp
dec
fsubrs
xchg
push
and
or
dec
push
push
xor
mov
sarb
pushl
test
add
test
inc
adc
ljmp
sahf
rclb
bound
dec
jp
pop
pop
adc
lahf
test
mov
outsl
lock
mov
mov
test
out
inc
or
pop
jmp
sub
clc
leave
xor
imulb
jecxz
mov
and
inc
pop
pop
push
sub
lcall
pushl
mov
xchg
adc
mov
cmp
jno
les
jle
pop
xor
enter
shll
push
mov
lret
push
je
test
add
repz
mov
sub
mov
aaa
inc
add
mov
cmp
xchg
aam
jne
ja
cmc
loopne
pop
xchg
dec
stc
or
dec
push
adc
jp
shlb
leave
pop
cmp
insb
pushl
lahf
orb
mov
push
pop
mov
lds
jg
outsl
icebp
ss
into
xchg
les
shrl
imul
cld
decl
mov
imul
add
call
mov
lds
pop
incl
sub
jo
jb
mov
adc
pcmpeqd
mov
and
xchg
stos
mov
or
dec
cmp
xor
popf
xor
push
mov
xchg
sbb
in
scas
mov
add
add
pop
cli
push
hlt
add
adc
outsb
lahf
add
lret
popf
mov
movsl
cmpsl
iret
decl
inc
or
loope
pusha
pop
adc
mov
lods
outsb
cmpl
out
sbb
gs
pop
add
ljmp
mov
mov
jo
adc
jmp
lret
or
add
mov
jno
push
jecxz
insl
sar
jmp
bound
lods
sti
inc
cmpb
iret
xchg
cltd
xchg
into
iret
push
mov
bound
mov
adc
cld
aas
mov
mov
sbb
mov
xchg
inc
mov
and
in
mov
adcl
sbb
sub
fcmovnb
dec
test
ret
cmpsb
dec
or
mov
aaa
jae
sub
popf
push
jl
dec
fistpll
sahf
out
sbb
add
loopne
lret
out
or
inc
xchg
orb
aam
mov
lcall
cld
cmp
js
dec
jmp
lock
sub
arpl
lcall
in
xchg
les
aam
push
dec
nop
jl
mov
add
sbb
fdivl
xchg
clc
dec
fstpt
and
push
pop
shrb
lea
mov
sbb
repnz
dec
mov
adc
inc
scas
xchg
xor
dec
pop
mov
lahf
stos
js
test
and
shlb
push
and
call
pusha
mov
and
sahf
adc
push
add
adc
decb
xchg
ds
sbb
incl
fdiv
mov
cwtl
jno
popa
stos
int3
jg
roll
inc
addb
xchg
jl
aas
mov
mov
call
icebp
dec
stos
cmp
mov
imul
inc
inc
int3
hlt
out
je
push
or
jg
sub
jae
xchg
shrb
fisubrl
cmpb
hlt
addr16
int
rclb
jle
sti
ret
mov
sbb
testl
jge
add
mov
adc
push
clc
ja
inc
xor
jg
in
sub
fmuls
lcall
cmpsb
call
scas
push
mov
sahf
mov
mov
nop
or
popa
repnz
mov
les
xor
aaa
sbb
dec
pop
jbe
mov
call
sbb
xchg
mov
adc
mov
inc
add
cs
call
dec
into
pop
mov
call
iret
aad
fbstp
pusha
cmpsl
sbb
and
mov
into
loope
rcrl
es
iret
ss
cmpsb
aad
cld
pop
pop
jmp
xchg
or
rol
and
jmp
std
aaa
cmpsb
xchg
adc
push
je
dec
jl
shll
call
dec
cmp
mov
xchg
fbld
pop
ja
fs
sub
ljmp
call
jg
jmp
aad
adc
addr16
pusha
inc
int3
insl
sbb
in
lds
out
cltd
scas
jne
iret
xchg
xor
negb
outsl
hlt
dec
sub
cmp
aad
ret
mov
or
incl
lcall
pushl
push
in
adc
test
inc
stos
pop
xor
push
call
in
mov
sub
in
fidivs
nop
scas
incl
push
xor
xor
daa
addr16
pop
mov
lcall
or
cmp
popa
icebp
pop
insl
push
cmp
cs
ljmp
add
insb
mov
add
fmul
mov
or
mov
push
adc
mov
xchg
incl
mov
cmpsl
or
xor
jb
inc
repnz
mov
imul
push
mov
jl
in
sub
addr16
cmp
mov
push
mov
mov
mov
jnp
push
push
xor
incl
lea
cmp
aam
test
mov
jb
shll
adc
call
xor
and
cmp
adc
lcall
mov
jge
call
cmp
jp
jle
jg
mov
lret
mov
pop
pop
pop
jecxz
push
jg
incl
iret
sub
dec
insb
mov
cld
xor
fnstsw
jae
data16
in
icebp
mov
jmp
xlat
mov
out
adcl
jo
pop
add
xchg
jmp
add
xchg
jmp
or
jp
adc
xchg
dec
iret
testb
decl
fwait
sbb
inc
inc
leavew
cli
mov
repnz
cmp
sub
pop
sub
sarb
mov
loope
aaa
inc
xor
lods
flds
mov
adc
stos
adc
mov
mov
or
push
cmp
inc
mov
mov
roll
call
xchg
sbbb
dec
add
rorb
popf
pop
iret
push
add
add
pop
loope
add
adc
inc
dec
imul
push
push
lret
call
add
sub
loopne
daa
fisubrs
lock
repz
cmp
mov
addb
aaa
addl
cmp
inc
fcompl
and
cmp
pop
inc
ja
lds
jne
rorb
les
or
mov
pop
stc
inc
mov
test
pop
push
call
mov
sbb
mov
loop
add
push
add
cmc
add
lret
faddp
pop
lcall
inc
and
adc
sub
les
push
jnp
push
mov
outsb
imul
imul
fdivr
stc
push
andb
mov
add
shrl
mov
adc
lock
mov
je
fldcw
xor
dec
call
add
jmp
test
mov
ja
or
and
push
xor
aaa
mov
scas
mov
push
pop
aam
jno
sub
test
add
hlt
add
iret
inc
shlb
sbb
lret
inc
seta
int3
jmp
enter
push
fiadds
dec
dec
mov
andb
out
adc
mov
call
fcomps
int3
shlb
inc
dec
aam
push
outsl
inc
mov
repnz
fstpt
pop
loopne
adc
test
and
mov
lcall
push
fidivrs
inc
mov
pushf
out
cmc
xor
adc
jb
repz
int
in
icebp
push
insl
adc
mov
xchg
add
cld
addb
xchg
fimuls
adc
push
add
mov
dec
faddl
adc
inc
xlat
pushf
add
stc
inc
xchg
cs
incl
adc
add
or
jp
add
int
push
mov
mov
sub
mov
gs
cmp
outsb
mov
mov
stos
sbb
rcrb
ljmp
sbb
rcll
aaa
add
mov
xchg
push
adc
push
mov
in
mov
jae
inc
xor
mov
pop
pop
ficompl
fldt
jne
lea
aaa
pop
mov
mov
sub
das
adc
cs
fcomip
popf
out
mov
pushf
sbb
jge
inc
sub
je
pop
inc
dec
push
in
clc
dec
popf
loopne
andl
call
xor
adc
cmpb
jnp
jge
aam
push
daa
xchg
xchg
cmp
or
ss
aas
or
pop
jg
xchg
mov
or
pop
and
sahf
mov
lods
icebp
pushl
or
fistpl
add
adc
clc
nop
movsb
mov
jno
outsb
xchg
xor
mov
adc
cmc
outsl
mov
mov
outsb
dec
into
dec
mov
add
cld
jnp
mov
jo
xchg
mov
push
das
mov
fisubs
push
hlt
mov
daa
nop
repnz
push
rcrl
pop
cli
enter
negl
push
ds
mov
push
aam
cmp
inc
mov
mov
pop
xlat
push
push
in
pop
fisubrl
mov
das
dec
fldl
sub
mov
jle
cld
pop
test
das
andl
ljmp
jo
gs
roll
adc
xchg
mov
or
stos
mov
mov
cs
insl
mov
rep
test
fs
mov
ret
loope
in
cmp
mov
add
sub
or
mov
mov
xor
mov
leave
jnp
xchg
adc
sbb
dec
nop
xlat
cmpsl
in
dec
dec
mov
mov
lret
mov
jl
and
fcoms
sub
mov
push
out
push
inc
inc
push
adc
pop
cmp
or
lcall
pop
repnz
or
mov
adc
loope
into
clc
ret
dec
imul
aaa
mov
cld
rorl
jge
jg
jo
and
mov
adc
or
xor
out
or
sbb
aas
xlat
aad
adc
jo
fistpl
adc
fwait
js
push
dec
addr16
shrl
dec
cmp
xchg
mov
enter
lock
mov
pop
in
les
xchg
repnz
xchg
sahf
mov
aad
sbb
and
and
rclb
jmp
pop
sub
push
xor
xchg
xorl
sbb
jne
mov
addb
int3
push
xor
inc
pop
ret
cli
iret
mov
aas
dec
mov
cs
add
cmp
and
jp
aaa
jbe
je
inc
out
cmp
mov
lcall
lods
ljmp
lock
fwait
pop
xor
outsl
or
adc
adc
fdivs
xchg
gs
push
lret
push
stos
xchg
xor
add
xchg
sub
mov
push
scas
xchg
jl
cmp
aam
movsl
jmp
inc
pop
pop
rol
add
insl
pusha
mov
loopne
out
fdiv
jbe
and
jecxz
fs
cli
push
and
popa
ja
cmp
push
xchg
clc
aas
in
xchg
sarb
stos
push
aaa
jp
add
mov
shrb
data16
sbb
adc
xchg
jl
lods
pop
stos
inc
stos
clc
mov
aaa
adc
cmp
sbb
stos
dec
aam
mov
or
stc
lahf
clc
inc
mov
test
subb
or
mov
xorl
and
push
rcr
insl
ljmp
fbstp
add
xor
maxps
lds
repz
jnp
xor
lock
add
push
mov
icebp
imul
cmc
pushf
inc
sub
ds
ret
fstl
nop
subl
mov
mov
rcrl
push
xor
sbb
call
xchg
pop
imul
xlat
push
insb
mov
adc
ja
lea
mov
sbb
jg
call
pushf
inc
ret
std
xchg
clc
inc
jle
mov
push
jp
cmpsl
mov
mov
rolb
lods
mov
sbb
clc
adc
xchg
mov
loope
xorl
test
sub
xchg
shll
les
jg
aaa
push
scas
idivl
and
in
jo
push
mov
test
outsl
push
cwtl
pop
lock
mov
adc
adc
xchg
cmpsb
push
mov
push
push
clc
out
test
enter
pop
std
mov
xchg
lret
sbb
dec
inc
icebp
test
cld
mov
mov
lds
mov
fprem
or
pop
clc
das
mov
pop
mov
es
ret
mov
push
repz
mov
dec
xor
mov
sbb
mov
ret
test
rcll
push
cs
mov
inc
push
cmpsl
and
les
shll
and
xchg
sub
fcomp
mov
jmp
xor
test
dec
int
lock
or
es
sbb
sub
sbb
push
mov
mov
or
jno
int
mov
scas
push
bswap
aad
cmpsb
mov
les
mov
and
mov
push
mov
sti
clc
mov
std
outsl
icebp
inc
ret
add
insb
mov
mov
cld
fisubs
js
and
iret
xor
adc
fcmovu
shlb
cmovs
cltd
pushl
hlt
mov
ja
shll
or
sti
push
mov
cld
mov
mov
dec
push
sub
in
sub
popa
dec
jae,pn
sub
outsl
lods
icebp
mov
rcll
push
sub
test
pusha
xchg
add
jecxz
dec
cltd
scas
jne
mov
mov
and
pop
pop
mov
adc
shr
decb
sbb
dec
icebp
mov
add
stos
ficomps
push
addr16
mov
inc
insl
inc
xor
fistpll
nop
add
lea
ror
stc
insb
jle
push
push
les
cs
out
sub
arpl
mov
call
xor
std
mov
repz
pop
lahf
rcrb
int
decb
inc
pop
mov
imulb
lds
cmpsb
int3
and
outsl
aaa
faddp
xor
cmp
dec
test
add
jmp
inc
dec
jecxz
and
dec
jno
jno
adc
out
repz
push
add
pop
iret
dec
bound
dec
sub
pusha
lods
mov
cmpsb
xchg
pop
fidivrl
inc
ficoml
stos
ficomps
test
test
adc
fildll
es
pop
sarb
cli
js
or
jl
cltd
pop
fcomps
dec
jl
push
fsubs
adc
test
or
lods
add
repz
sahf
sahf
sahf
lcall
push
push
or
fs
xorb
lods
stc
les
out
xor
pop
xor
inc
int3
dec
inc
push
mov
adc
outsl
mov
test
inc
dec
aam
cmc
rclb
mov
mov
inc
fbld
arpl
jl
lcall
push
cmp
loop
mov
sbb
pop
aaa
insb
hlt
jmp
ja
dec
js
sbb
inc
cld
mov
cmp
or
in
in
add
ret
push
mul
cmc
cmp
xchg
fdivrp
jg
sbbl
cmp
mov
push
xor
pop
xor
or
and
cmp
xorl
xchg
jmp
mov
sbb
xor
sub
and
adc
in
fwait
jbe
sbbl
sub
sbb
sbb
out
mov
cmc
cld
mov
cmp
mov
mov
push
daa
jnp
mov
outsl
mov
or
fbstp
jmp
add
mov
jbe
add
push
loope
push
sbb
or
subl
jle
mov
xor
stos
lds
sub
je
inc
inc
clc
js
clc
out
mov
mov
aaa
pop
adc
cmp
pop
loopne
dec
xor
loop
lds
mov
fs
cmp
stc
icebp
hlt
add
mov
movsb
or
outsb
mov
ret
xorl
pop
adc
mov
pop
mov
adc
adc
adc
cmc
test
fdivl
dec
stos
and
xchg
fucomi
and
lods
sahf
add
mov
lret
and
add
inc
ja
jecxz
loop
lods
arpl
xor
xor
mov
jl
push
inc
push
aaa
stc
pop
mov
jns
dec
xlat
cli
call
jb
insb
enter
xchg
xor
and
jmp
jg
xor
ret
out
ss
adc
stos
pop
adc
ds
arpl
clc
mov
lret
adc
out
jno
cmp
jae
pop
mov
ljmp
pusha
xor
or
or
sahf
and
movsb
cli
std
or
repnz
ss
adc
lea
jbe
pusha
jle
les
pop
cmp
decl
push
daa
out
or
sbb
movsl
fsubrs
mov
jmp
inc
cmc
push
pop
inc
mov
or
lea
xor
cld
das
xchg
lods
add
outsl
hlt
lahf
shll
dec
xchg
sti
nop
in
lret
inc
mov
hlt
sbb
sbb
mov
popa
scas
fsubr
jg
mov
adc
clc
jae
jbe
pop
pop
mov
pop
gs
adc
and
fldl
add
mov
test
adc
cmp
fcomi
outsl
jmp
popf
jo
or
rcl
mov
test
int3
shl
imul
mov
in
sbb
adc
mov
loopne
stos
in
mov
loopne
lret
cs
add
roll
and
mov
xchg
movsb
add
mov
sub
decl
pusha
or
imul
pop
push
xor
inc
mov
jbe
cltd
push
call
fxch
cmp
cli
xchg
sub
jg
push
jge
push
cli
imul
loop
shll
pop
imul
insb
in
test
dec
xchg
sbb
daa
jno
inc
inc
pop
jl
out
sbb
loopne
xchg
mov
stos
pop
into
test
sbb
ss
push
xchg
jle
pop
inc
adc
or
push
mov
imul
sahf
xchg
movl
or
push
orb
add
out
xor
push
mov
in
cmpsl
sub
push
sub
jno
jge
shll
xor
or
aaa
insb
xor
test
jp
pop
sub
lret
je
add
movsl
add
pop
xchg
pop
adc
fcomip
and
jne
je
mov
jae
jne
mov
out
sub
loope
sub
cmp
dec
ja
data16
call
and
pop
addb
lds
and
sar
pop
mov
icebp
mov
and
jle
andb
pop
inc
bound
das
adc
or
sti
fs
or
test
leave
jns
clc
sub
mov
pusha
ljmp
repz
pop
mov
gs
js
pushl
and
aad
xchg
cltd
sbb
dec
push
stos
andb
sub
je
sbb
adc
ret
pop
imul
xor
pop
push
adc
loope
arpl
or
mov
lcall
into
arpl
or
test
popf
scas
dec
or
push
xor
sbb
lret
scas
cmp
sub
jmp
das
sub
mov
int
or
push
xor
wbinvd
out
enter
lea
pushw
push
movsl
notl
cs
subl
shl
add
pop
adc
mov
sub
push
push
push
push
mov
push
int3
or
loope
in
cmpl
sub
nop
mov
xor
push
lods
outsl
jmp
scas
lret
mov
outsl
dec
aaa
add
iret
jb
out
adc
rcr
sarb
cmp
dec
dec
mov
dec
lcall
cmp
popa
cmc
sub
insb
mov
pop
dec
icebp
inc
cmp
sar
mov
in
mov
stos
adc
adc
sbb
orl
mov
dec
xor
fnstsw
jne
scas
mov
cmc
fcomps
add
mov
insl
popf
and
or
std
data16
jne
les
in
xchg
pushl
or
sbb
jle
lock
popl
out
mov
mov
lea
rcrb
loopne
loopne
in
lods
pop
lods
or
push
dec
out
add
sbb
xor
lret
mov
adc
add
inc
shrl
lds
push
movsl
fstl
and
sbb
sbb
fistpl
std
scas
inc
pop
sbb
push
testb
std
fiaddl
mov
subl
hlt
cmpl
and
scas
jl
cli
and
fisubrs
xor
adc
movsb
cmpsb
sub
and
aad
fs
adc
fwait
mov
cmp
sbb
xchg
or
std
es
imul
xchg
call
push
sub
mov
jno
push
mov
bound
pop
jge
sub
aas
inc
xor
filds
xchg
in
sbb
add
dec
mov
imul
les
push
pop
movsl
inc
lahf
add
pop
imul
xchg
jo
cmp
jp
push
lods
xchg
mov
push
jp
xchg
push
leave
add
push
fidivs
pop
sbbb
cmp
pushl
int
ret
addr16
mov
test
lea
ja
dec
mov
mov
cmpsb
mov
xor
repz
sbb
push
in
xchg
stc
jecxz
pop
inc
adc
jmp
inc
sbb
pop
mov
inc
mov
mov
mov
es
ss
push
mov
push
cli
xor
movsl
sbb
adc
xor
addr16
and
mov
xor
adc
cmpsb
js
xchg
adc
xor
sarl
push
sub
and
sbb
sub
mov
sub
jl
cmp
adcl
mulb
out
mov
xchg
sbb
jno
xchg
fwait
jl
push
sbbb
es
std
aam
roll
test
mov
adc
mov
outsl
out
ret
lods
or
mov
cmc
jmp
ss
std
jle
jb
mov
aad
cmp
jle
or
outsl
inc
mov
push
mov
sub
pop
insb
js
push
xchg
mov
mov
jl
insb
pop
and
scas
mov
cli
cli
xor
lret
push
or
sahf
enter
loopne
testb
mov
jp
and
mov
aas
sarl
mov
imul
sub
cmp
jle
adc
movsb
fdivrl
js
cmp
mov
mov
arpl
pop
mov
adc
nop
fsubp
mov
or
nop
daa
jp
addr16
loope
cmp
andb
mov
lret
shrb
fsubrs
push
xchg
testb
imul
scas
fisttpll
dec
nop
or
xor
lods
or
movsl
add
daa
or
pop
xor
xor
iret
je
jnp
push
ret
fstpl
cmpsl
sub
mov
jp
ficoml
test
jl
call
lea
inc
ja
fidivrs
mov
bound
lods
sub
sub
cmpl
scas
fldenv
cld
and
mov
movsl
stos
xor
and
or
test
add
stc
push
or
les
mov
jns
mov
test
and
sti
pop
idivb
cmc
mov
sub
outsl
dec
fldl
out
scas
pop
sub
xor
jmp
dec
xchg
fbld
movsb
and
scas
inc
push
addl
mov
add
cmpb
add
addr16
xchg
sahf
enter
fninit
push
mov
add
sbb
push
icebp
push
das
out
aad
xlat
pop
ljmp
ljmp
lods
sarb
jp
std
in
icebp
jl
movsb
pop
fwait
add
jp
jmp
mov
sbbl
sbb
mov
cmc
loop
push
hlt
jg
mov
mov
sti
or
mov
mov
sub
inc
out
xor
push
adc
jbe
lods
pop
repz
fwait
cltd
mov
sahf
and
push
aas
push
ret
inc
xor
addl
out
cs
or
inc
and
xor
xor
mov
mov
aad
mov
jns
xchg
lahf
push
pop
mov
mov
std
gs
fsubrl
inc
sbb
pop
dec
or
push
mov
out
mov
jle
test
sbb
lods
pop
mov
aas
js
cmp
loope
gs
fdivs
xor
push
into
xor
test
sti
adc
pop
psubusb
je
add
push
ja
mov
sbb
inc
push
xchg
movsb
pop
push
cmp
mov
sarl
adc
lret
je
inc
push
rcrl
icebp
rorb
xchg
movsl
addl
dec
aas
fwait
add
stc
imul
inc
and
push
pcmpeqd
xchg
insb
mov
divb
inc
and
inc
pop
int
loope
sti
jmp
jns
adcl
pop
test
push
or
fists
and
xchg
in
mov
mov
push
push
inc
add
in
add
mov
adc
pop
data16
xchg
mov
imul
xchg
loop
dec
sbb
mov
mov
pop
dec
sbb
les
hlt
or
cmpb
mov
jnp
fwait
adc
icebp
fstl
jns
fsubrs
loopne
dec
mov
cmpsl
aaa
loop
and
adc
sti
mov
or
push
aam
and
clc
outsl
lea
xor
or
add
sbb
jmp
mov
out
stos
arpl
sbb
outsb
popf
stos
push
dec
jle
dec
cmp
rcrb
mov
loopne
icebp
int
rolb
add
and
lods
adc
ja
dec
cltd
xor
and
adc
xor
push
mov
xchg
mov
and
xor
hlt
sbb
pop
add
cmp
pop
push
lock
test
in
call
lea
repz
cmp
sub
aam
repnz
cmc
push
dec
mov
add
xchg
adc
pop
add
xor
xchg
dec
or
jmp
das
pop
dec
sub
adc
and
dec
inc
movsl
sub
jb
sub
dec
sarb
jecxz
xor
push
cld
icebp
fdivrs
mov
aas
lds
movsb
mov
test
add
aad
ret
mov
and
jecxz
into
pop
pop
sahf
xchg
ret
sbb
rolb
dec
mov
push
lret
and
lock
jb
dec
push
or
inc
repz
call
mov
fisttpll
cmp
mov
xchg
stos
movsl
cmpsl
dec
mov
sbb
ret
movsb
sbb
xor
push
test
and
popf
pusha
inc
mov
add
das
fcomip
and
dec
shrl
jecxz
sbb
bound
fcmovu
out
adc
je
add
cli
es
push
movsb
add
pop
push
in
or
pop
jmp
sub
repz
mov
jne
cmpsb
inc
imul
pop
jnp
lods
lcall
das
cmp
xor
test
loop
xchg
dec
jae
jecxz
int
pcmpgtw
test
push
sahf
test
jl
cs
jp
dec
sbb
mov
std
das
cld
fidivrl
fistps
data16
movsl
out
xchg
add
out
adc
dec
lods
pushl
mov
mov
jae
push
shrb
movl
repnz
je
inc
push
cld
in
int
test
push
pop
push
fcmovbe
cmp
adc
outsl
fdivr
fisubrl
ret
xlat
cmp
lcall
jb
dec
adc
xchg
lods
and
popl
fdivr
outsl
mov
push
mov
imul
sbb
mov
fs
call
ljmp
sub
lods
pop
pop
les
arpl
or
ljmp
cmc
mov
ja
sub
and
sub
jno
or
pusha
mov
das
cmpsl
cltd
aad
sub
mov
test
subl
cli
or
shrb
ds
mov
pop
push
push
or
or
xchg
fsubr
adc
sbb
outsb
ret
and
ljmp
or
dec
loop
movsb
movsl
add
jg
jo
pop
cmp
sbbl
insb
rcrb
inc
sub
shll
push
cltd
loope
mov
pusha
jl
aad
sbb
std
ja
jmp
inc
adc
push
pushf
cmp
mov
jg
pop
popa
sub
inc
and
sbb
test
std
in
adc
jg
test
jo
out
les
pop
addl
cmp
or
loope
pusha
insb
cli
movsl
pushl
add
push
gs
imul
mov
push
lds
fninit
or
mov
or
psubsw
lret
outsl
or
mov
ja
fistl
add
xchg
push
or
jl
inc
sbb
mov
pop
jmp
jbe
cmp
outsb
mulb
lods
dec
fs
jns
add
clc
jg
mov
or
hlt
stos
pop
sbb
fbld
push
fsts
jb
and
lods
int
das
imull
stos
jmp
xor
push
aam
xor
and
jge
xchg
jecxz
mov
lret
mov
mov
dec
sub
sub
push
cwtl
inc
xchg
mov
dec
cld
ja
xchg
test
and
popaw
dec
or
clc
sarb
insb
orb
xchg
ja
inc
aam
adc
cmp
xlat
jne
push
fstp
mov
cmp
push
stos
mov
sbb
mov
xchg
push
hlt
orb
in
scas
or
xchg
and
mov
and
mov
stos
cmpsl
out
cmp
insb
aam
sarb
imul
or
inc
stos
roll
les
ret
adc
fidivrs
test
out
mov
aas
pop
sbb
mov
pop
xchg
mov
xorb
push
mov
loop
cwtl
fwait
pop
scas
mov
push
lock
jg
and
adc
add
inc
daa
gs
sub
mov
ret
push
clc
out
loop
and
mov
jecxz,pn
mov
test
cmp
pushf
inc
add
std
or
xchg
add
sarl
mov
outsl
insb
imul
ret
xor
mov
fxch
outsl
adc
mov
daa
enter
adc
sub
or
das
xor
add
add
jmp
pop
xorl
scas
pop
sbb
pop
ljmp
filds
sub
sub
jno
jle
scas
int3
jno
jo
clc
ds
pop
push
xchg
xchg
pop
cmpsl
js
sbb
push
adc
test
inc
andb
xlat
arpl
bound
mov
adc
clc
mov
out
enter
sarb
loopne
lea
ljmp
ret
data16
push
cs
mov
pop
pusha
repnz
or
or
push
adc
mov
jmp
test
inc
lods
jbe
loop
adc
mov
mull
jb
sub
xchg
xorl
div
lods
mov
push
cmp
shll
fistpl
dec
iret
xor
and
mov
idivl
jb
mov
jbe
jns
test
outsb
inc
repnz
js
in
sar
scas
ja
hlt
ja
or
clc
lcall
int3
dec
sub
mov
movsb
pusha
jecxz
out
jbe
sbb
adc
jge
lret
loop
push
js
cmpb
inc
cs
add
nop
mov
jae
add
fsubl
mov
jg
mov
rcrl
mov
cmp
adc
mov
test
int
icebp
sbb
xor
adc
inc
and
and
jns
shlb
fisubl
mov
sbb
lret
push
hlt
dec
xchg
inc
inc
ds
jp
cmp
in
and
jmp
std
decb
mov
fstpt
cmp
push
inc
nop
jg
cmp
shll
adc
pop
xor
arpl
mov
sbbl
incl
pop
pop
mov
aaa
mov
aad
fcmovnbe
mov
mov
aas
mov
xor
stc
aaa
stc
shl
sub
lea
or
cli
das
jge
call
ret
adc
pop
jg
pop
sbb
sub
mov
xlat
inc
xorl
and
lret
fwait
sti
faddl
sbb
fidivrs
cmp
pop
xlat
dec
mov
lock
cmp
inc
sbb
jle
add
outsl
iret
bswap
xor
pop
cmc
xchg
push
mov
sbb
jl
push
dec
push
fisttps
sti
fs
mov
lcall
sahf
lahf
mov
add
in
icebp
mov
push
aam
out
jg
mov
sbbl
and
and
aaa
jle
and
jnp
push
js
dec
jmp
test
fs
ss
xlat
aas
and
add
mov
hlt
pop
loope
fadd
add
sbb
inc
sarb
jb
and
push
and
dec
sbb
inc
mov
bound
dec
xchg
sar
lea
xor
push
xor
scas
push
jecxz
daa
add
and
testb
jbe
int3
jnp
mov
add
jbe
and
or
push
jmp
loop
lahf
xchg
roll
jno
mov
jl
dec
imul
fisubrl
test
and
jne
mov
inc
ss
mov
add
jle
push
add
mov
mov
mov
sbbl
xlat
outsb
xor
fwait
xchg
movsb
sbb
addr16
js
dec
jp
inc
dec
sbb
out
clc
mov
aaa
adc
add
loopne
mov
cld
call
cmpsl
inc
stos
push
loope
or
and
cmc
pop
xchg
sbb
shrb
outsb
push
mov
mov
sbb
push
jae
cmp
mov
and
lret
ret
pop
mov
mov
adc
sub
gs
inc
xchg
xchg
addl
ljmp
and
mov
adc
shll
push
dec
xlat
push
sti
adc
clc
ret
and
dec
mov
xchg
cmpl
mov
lret
mov
negl
jns
jge
fidivs
and
and
call
pop
pop
jl
outsb
mov
and
arpl
push
and
insb
jmp
stos
or
mov
push
data16
cltd
mov
sbb
jo
sub
dec
imul
adc
ljmp
pop
sub
mov
cwtl
aaa
and
gs
or
mov
cmpsb
xor
test
jg
pop
test
ss
das
fisubrl
mov
mov
neg
xchg
das
mov
out
cli
mov
icebp
cmpb
scas
xor
cmpsl
cmpsb
les
das
rcr
push
jge
add
je
sbb
sub
popa
fnstcw
adc
gs
inc
pop
lods
and
andl
fiadds
add
or
outsl
or
mov
xchg
cmpsb
jne
push
outsl
sarb
mov
jne
push
mov
inc
in
sub
mov
mov
push
mov
cwtl
fnstsw
mov
sbb
gs
jno
mov
push
pop
test
mov
fbstp
push
pop
lock
mov
xchg
idivb
jo
adc
ret
adc
loopne
lods
ljmp
mov
testl
lock
jno
pusha
cmp
and
sbb
mov
mov
mov
dec
test
push
cld
jg
mov
push
es
stos
or
cmp
mov
loope
dec
jl
mov
cwtl
aad
xchg
insb
xor
cld
dec
push
lret
clc
or
pop
push
jbe
dec
call
subb
dec
std
sarl
loope
jmp
test
cmpsb
insl
dec
pushl
movsb
test
jg
mov
arpl
dec
mov
loope
div
in
push
out
inc
cmp
mov
and
ds
movsb
adc
xchg
sbb
popa
sub
popf
sub
cld
lods
mov
cld
sub
rolb
stc
xchg
inc
imulb
mov
push
ljmp
fadds
jl
mov
push
icebp
outsl
inc
jne
mov
add
cld
icebp
pop
lret
cmp
pop
in
and
mov
jp
sbb
ljmp
add
test
jl
ljmp
mov
divl
pop
mov
sbb
orb
shll
add
jns
lods
addr16
dec
or
pop
out
pop
fcmovu
shrb
lahf
shrb
cs
out
or
push
ret
push
fmull
ljmp
inc
or
mov
lods
mov
hlt
shlb
lahf
adc
subl
dec
jp
dec
cmpxchg
sbb
xor
call
aam
sbb
rorl
adc
inc
arpl
xor
sbb
jo
fcoms
jne
mov
xchg
cwtl
cmp
xchg
sub
test
or
pop
fiadds
faddl
test
test
dec
dec
bound
in
lods
mov
sub
stc
repz
jg
sbb
push
incl
dec
xchg
fnsave
fiaddl
ja
orl
mov
push
or
fucomip
mov
out
fistps
mov
fsubrs
fsubrl
add
js
jge
pop
mov
pop
aam
and
cmpsb
inc
scas
cli
pusha
lahf
push
push
cmp
insl
test
push
leave
cmp
pop
add
cld
outsb
mov
pop
sbb
jmp
mov
mov
pop
mov
pop
jg
push
das
lahf
adc
enter
jo
pop
subb
lock
dec
xor
int3
gs
xor
icebp
mov
mov
xorl
sbb
or
or
jg
jne
sahf
jne
adc
pop
xor
fst
ja
jmp
ret
divl
fildll
inc
lret
leave
insl
fsubrs
mov
in
popf
xor
xchg
or
push
add
push
add
pusha
stos
jmp
cltd
adc
fs
inc
cli
inc
ffreep
cmpsb
xor
jmp
les
lret
add
or
lds
dec
sbb
sub
and
push
and
cmpb
dec
inc
push
shl
inc
daa
scas
popf
pop
jae
jecxz
loope
sbbl
jne
int3
add
in
pop
and
int3
mov
jo
jp
jbe
pushf
ds
xor
push
jae
xor
rcrb
jecxz
ficomps
ss
add
and
movsl
ja
xchg
and
cmp
lahf
mov
adc
sbb
sbb
inc
mov
call
jle
jno
ja
mov
mov
imul
dec
psrld
mov
lahf
mov
fs
xchg
std
in
fidivrs
push
clc
mov
sub
movsb
bound
mov
pop
cwtl
lock
arpl
imul
mov
sub
pusha
repz
std
shlb
cltd
inc
inc
out
cli
lret
shrb
out
shr
mov
mov
cs
call
insb
sub
jg
push
push
fs
shlb
faddl
mov
ret
push
cmp
pop
add
inc
jb
rcl
icebp
mov
push
add
test
push
clc
incl
mov
nopl
adc
pop
or
push
fistpll
movsb
das
inc
push
gs
loope
lods
mov
stos
xchg
mov
or
jle
outsb
and
incl
outsb
inc
cmc
and
jbe
les
call
lods
andb
addl
or
cmp
xchg
jae
sbb
roll
cmpsb
mov
mov
mov
dec
sbb
rcrb
pop
pop
cltd
fcoms
or
push
jo
mov
pop
fstl
and
mov
and
pop
or
bound
addr16
or
sub
js
dec
leave
pop
rcl
dec
mov
test
fs
arpl
xchg
lock
fxch
lock
dec
jecxz
xor
mov
loop
test
pop
jp
dec
and
pop
adc
das
inc
push
clc
nop
stos
lods
movsl
push
lock
in
fsubrs
pop
pop
sbb
clc
ret
pop
test
dec
js
sbb
cmp
iret
push
push
xor
bound
sbb
lea
aaa
mov
mov
bound
jbe
mov
out
lcall
clc
ret
fadds
mov
add
sarl
imul
mov
jp
jns
dec
rorl
and
jl
and
test
mov
imul
jns
mov
adc
jne
outsb
mov
pop
adc
mov
mull
inc
lods
xor
clc
popa
sarl
pop
test
or
cmp
insb
xchg
cwtl
inc
sub
xchg
mov
test
and
push
mov
int3
lock
ret
in
adc
push
or
mov
fnsave
mov
shrl
stc
mov
pushl
lea
mov
mov
orb
hlt
jg
stc
lds
popf
inc
xchg
scas
mov
adc
push
in
xor
pop
dec
dec
push
adc
lcall
cmc
jg
testb
out
stos
lods
adc
test
movsb
jl
adc
insl
ljmp
dec
push
pushf
adc
insb
jne
ffreep
es
xchg
dec
mov
sub
movsb
es
jge
in
sbb
mov
dec
mov
addr16
add
testl
addr16
out
inc
mov
scas
and
das
bound
add
mov
ljmp
push
ss
std
lcall
pusha
mov
mov
jnp
push
or
push
sbb
test
fistpll
mov
testb
add
movl
sub
cmp
inc
roll
insl
je
mov
lock
lds
cmp
mov
mov
push
lea
sub
xchg
add
mov
mov
out
fbld
outsb
adc
xorb
adc
rep
ja
sub
and
outsb
or
cmp
scas
push
js
push
addr16
add
inc
adc
stos
loopne
mov
inc
xor
sub
cmpsb
std
lods
inc
adc
sub
and
std
pop
aad
inc
dec
subb
pop
cmp
inc
aaa
jecxz
or
ret
testl
sar
loopne
int3
setns
xor
decl
imul
jae
mov
out
lcall
or
mov
xchg
xchg
repz
pusha
repnz
bound
inc
sbb
pusha
out
inc
lock
loop
or
sbb
inc
cmp
sbb
xchg
test
push
ljmp
data16
inc
add
shrb
outsb
inc
aam
cmc
out
push
jg
xor
lahf
jo
lds
mov
ret
xor
sub
filds
cs
loop
mov
dec
xchg
shr
inc
sub
add
lods
lds
mov
inc
inc
lock
mov
test
adc
pop
ret
out
cld
jg
out
pop
inc
adc
imul
inc
shrb
cs
in
or
insb
test
and
lods
xor
mov
mov
dec
pop
ja
movsb
pop
mov
push
xor
mov
cli
addb
pop
jg
adc
lret
fidivrs
or
int3
aaa
and
inc
outsb
cmp
adc
push
xchg
pusha
adc
cli
movsl
push
push
jecxz
or
add
std
or
adc
cli
iret
ret
mov
xchg
fsubrs
pop
add
fnstsw
pop
jnp
cmc
lahf
xchg
imul
or
das
xchg
cmp
xchg
outsl
xchg
icebp
inc
fidivrl
adc
jg
push
out
andb
mov
pop
rcll
addr16
mov
pop
push
sub
ljmp
loope
cli
sub
fcmovu
add
mov
cmp
incl
dec
fisttps
inc
or
add
sub
inc
dec
inc
mov
cs
int
pop
ljmp
and
or
insb
pop
rolb
mov
xchg
imul
fistl
shlb
sbb
imul
insb
add
and
popa
sub
sbb
aaa
jle
and
mov
dec
icebp
push
jbe
sub
sub
or
mov
aad
fistps
jno
scas
push
test
mov
icebp
dec
fisubl
sbb
mov
aam
fidivs
pop
sbb
mov
ja
ret
or
shr
repz
inc
scas
cwtl
clc
outsl
cltd
andb
fistpl
mov
loop
outsl
lret
cltd
mov
xchg
out
jnp
andl
mov
mov
xchg
call
adc
pop
and
cmp
stc
sub
pop
pop
dec
jmp
rorb
pop
pop
xchg
xchg
or
pop
fdiv
mov
cltd
pop
mov
and
das
inc
std
loopne
push
cwtl
repz
jecxz
jecxz
lods
mov
fwait
outsb
cld
push
dec
sub
add
inc
pop
xchg
pop
fwait
insl
mov
lret
les
stc
add
pop
pushf
sbb
cmc
mov
decl
xchg
add
mov
dec
adc
mov
mov
pop
std
mov
pop
jp
int
lahf
mov
jnp
pop
std
add
sub
addr16
inc
inc
sbb
cmp
mov
divl
jp
push
adc
outsl
lods
inc
pop
sbb
fs
cld
jmp
fs
fcoms
fistpl
inc
sahf
mov
sub
filds
scas
xchg
cs
fdivl
lods
in
aad
xor
loop
add
ljmp
rcll
in
jne
or
jne
adc
orb
jno
sti
or
cli
push
data16
les
in
pop
lea
ret
insl
rsqrtps
jbe
xchg
jbe
rorb
xor
xchg
lods
pushl
pop
test
gs
dec
pop
adc
iret
fdivl
loopne
adc
push
xor
cltd
loope
icebp
lea
inc
mov
push
lcall
mov
lods
shlb
inc
adcl
push
and
aas
adcb
or
jl
inc
sbb
add
in
and
aaa
dec
test
or
dec
pop
jle
and
add
cmp
movsl
lods
call
pop
xor
and
ljmp
lret
add
xchg
push
fidivl
jno
or
test
pop
adc
xchg
add
in
dec
xchg
dec
ret
push
push
or
inc
lcall
adc
add
jecxz
inc
xlat
push
inc
add
dec
mov
push
lock
popf
jmp
andb
push
inc
nop
gs
movsb
cmp
cld
stos
outsl
incb
call
gs
test
sub
pop
call
mov
scas
adc
xor
push
outsl
cmp
lea
test
mov
dec
mov
xchg
sbb
sbb
or
dec
outsl
or
es
call
mov
sbb
cmp
or
xor
movsl
jns
popf
test
dec
xchg
cmc
xchg
aas
xchg
xchg
push
sub
adc
and
cld
pop
or
xchg
mov
dec
lea
loopne
and
pop
pop
or
xchg
pop
loope
cwtl
pusha
mov
shlb
pop
push
lods
pop
ficoms
cmpb
loop
xorb
or
jno
daa
fwait
add
or
stos
push
repnz
mov
je
add
mov
pop
sub
inc
pop
imul
nop
ret
jo
nop
scas
decl
mov
ja
rorb
mov
lahf
aaa
jo
or
mov
daa
jno
lret
testb
inc
xchg
xchg
add
dec
xchg
xchg
es
inc
sahf
pusha
outsb
push
out
sub
xchg
xchg
hlt
inc
add
jb
xchg
add
ja
inc
lea
or
jg
pop
test
sbb
loopne
fsubrl
cld
sti
mov
jnp
mov
mov
sub
xchg
mov
sbb
out
ret
dec
leave
add
xor
cmp
or
xlat
loope
pop
mov
inc
lods
repnz
pusha
xor
popf
mov
mov
mov
clc
cmp
jp
mov
push
loope
vrsqrtps
mov
cmp
dec
int
and
aam
dec
sbb
sbb
pop
rcrl
in
pop
mov
push
push
lret
mov
add
inc
inc
add
imul
push
fimull
inc
pop
pop
xor
pop
int3
xlat
rorl
xchg
pusha
sub
lret
dec
jb
add
pushf
mov
push
incb
loope
movsl
or
jp
cmp
cmpsb
add
cmpb
xor
negl
dec
insl
lds
push
adc
dec
es
dec
fstpt
jle
pop
sbb
mov
xlat
pop
out
sub
mov
push
xor
clc
negb
mov
sbb
pop
lret
fadds
sbb
mov
ud2
pop
mov
sbb
std
dec
add
out
mov
into
push
jo
loopne
xor
mov
lods
filds
xchg
mov
cmp
cmp
pop
add
icebp
scas
loopne
mov
clc
addr16
das
std
fbstp
push
sub
lret
data16
push
lret
jno
cmp
mov
push
jb
fs
outsl
jg
repnz
mov
push
pushf
addb
sti
jg
popa
popf
das
and
enter
dec
mov
pop
test
mov
xchg
push
adc
mov
pop
and
fisubl
and
mov
mov
adc
popf
adc
sbb
dec
jmp
out
mov
or
push
sahf
and
loope
clc
ljmp
inc
mov
mov
and
xchg
mov
jmp
lods
popa
push
cmc
leave
out
clc
test
sub
cmpsb
adc
mov
sbb
shlb
fisttps
jmp
rcrl
adc
mov
xorl
or
push
inc
xor
jmp
adc
pop
pop
push
pop
clc
sbb
sub
mov
jg
int
fnstcw
mov
cmpsb
jl
push
clc
outsl
sbb
add
pop
or
xchg
or
add
xchg
sarl
adc
lock
add
mov
adc
aas
and
jg
nop
push
addl
insl
fisubrl
inc
xchg
test
jbe
jge
push
or
mov
jle
mov
mov
fcomps
leave
icebp
dec
bound
iret
sbb
jb
cmc
or
lods
test
jecxz
xor
ss
xor
jle
jae
stc
mov
jb
dec
mov
dec
shl
sbb
test
inc
xchg
pushl
daa
pushf
sub
mov
and
lock
push
fs
test
xchg
add
xchg
push
aaa
sarl
sub
cmc
mov
add
les
pop
sbb
dec
test
push
movsl
jl
clc
mov
ss
loope
xchg
lret
out
pop
sbbb
popa
mov
lock
aam
rcr
xchg
out
movsb
pushl
xor
push
shrb
and
or
stos
aad
jmp
pop
cli
jmp
push
inc
add
pop
popf
imulb
cmp
adc
sbb
lret
inc
sti
xor
rcrl
je
out
inc
lods
xchg
in
enter
sbb
decl
loop
jb
or
les
jne
fs
mov
clc
loopne
add
adc
in
mov
dec
fists
cmpl
pop
movsb
cmpsl
pop
decl
adc
fstpl
cwtl
push
pop
mov
xor
and
leave
mov
jle
ss
sub
jmp
mov
dec
jb
fucomi
idivl
mov
jle
mov
mov
jg
flds
sbb
or
inc
int
inc
xor
or
nop
pop
and
jg
jecxz
fs
and
stc
popf
jl
in
loop
mov
xchg
cld
inc
cmpsl
inc
outsl
sti
and
cmp
pop
incb
sub
in
jg
push
or
insl
cmp
outsl
push
jne
dec
das
or
popa
mov
loop
jmp
mov
mov
or
add
xlat
jo
or
add
lock
adc
fcomps
sbb
push
in
loopne
mov
sub
inc
test
cmp
outsb
out
push
or
sub
fdivrl
outsb
mov
lcall
fnstsw
faddp
aad
jbe
inc
jns
sub
xchg
bound
fiadds
fisubs
add
in
mov
popl
push
or
je
mov
roll
int
in
int
and
mov
lods
sbb
add
or
lahf
mov
stc
inc
cmpsb
lea
jmp
pushf
aas
adc
inc
xchg
sbb
dec
les
fucomi
aam
lahf
mov
cli
sbb
scas
mov
mov
xchg
mov
adc
lahf
dec
mov
icebp
push
sub
or
pop
cmp
pop
ja
enter
stc
pop
mov
mov
in
sub
and
mov
jle
sbb
test
mov
loop
sbb
int
popa
std
pushl
and
xchg
mov
loop
insb
sub
fsubrs
enter
mov
mov
clflush
push
mov
jmp
pusha
push
add
enter
movsl
test
lock
mov
aad
jmp
mov
call
ficoml
ret
fstl
mov
cmc
mov
lods
lods
pop
cmp
arpl
xor
call
inc
lds
mov
lret
sbb
inc
add
mov
out
add
or
xor
pop
ret
pop
and
xchg
dec
rcrb
adc
add
inc
push
aaa
fwait
pushf
lahf
push
push
add
or
adc
stc
ss
sub
pop
sub
xchg
cmp
icebp
inc
add
xchg
mov
cmpsb
and
outsb
jmp
enter
icebp
jo
out
adc
rorl
or
popf
fildll
push
sub
pop
js
jp
pop
and
aam
and
adc
sbb
mov
adc
pop
subb
arpl
sbb
jmp
sti
repnz
ljmp
add
cld
add
nop
fimuls
inc
dec
xor
icebp
sbb
lea
int
xchg
mov
icebp
insl
stos
mov
inc
out
ret
js
das
or
jg
mov
or
ficoml
dec
cmp
push
and
xchg
pop
xchg
ds
add
mov
push
push
push
in
shll
sbb
jmp
sub
loop
insl
movsb
xchg
xchg
nop
adc
push
sbb
pushf
pop
ret
cmpsb
or
cmp
push
fsubrs
jmp
sbb
mov
adc
adc
push
aaa
mov
leave
cmc
fldt
dec
pushf
jecxz
test
mov
jg
xor
and
rorb
add
sarl
iret
lock
mov
push
sbb
rcrl
addr16
cmp
push
std
sbb
mov
mov
mov
aad
sbbb
mov
add
pop
outsl
inc
shr
xchg
add
push
mov
mov
and
std
not
jge
insb
bound
pop
and
mov
nop
shl
inc
sbb
push
pop
dec
sarb
push
jmp
xchg
and
adc
jp
ja
jg
dec
fwait
stos
and
add
fcmovne
adc
adc
push
movb
pushf
xchg
leave
les
movsb
in
sbb
aaa
lcall
pop
dec
mov
mov
mov
mov
add
fisttpll
mov
pop
mov
fucomi
pop
mov
test
mov
lods
clc
adc
lock
mov
dec
xchg
jecxz
and
mov
rclb
jl
mov
pop
sub
pop
dec
push
insl
ret
sbb
inc
popa
lock
pop
ljmp
or
cld
sbb
ret
inc
mov
lret
xor
sar
jmp
lock
pop
push
repz
dec
pop
pop
lcall
push
lret
add
jmp
sbb
mov
xor
inc
pop
pop
push
adc
adc
jnp
adc
call
jbe
mov
fidivrs
repnz
mov
xor
fadds
in
mov
jl
loop
xchg
faddl
pop
scas
out
fistps
sbb
mov
mov
lcall
pop
pushf
jg
scas
scas
outsb
add
hlt
or
outsl
mov
jecxz
fsubrs
dec
hlt
loope
outsl
nop
daa
pop
inc
std
incl
call
jae
dec
fstl
cmp
clc
incl
sbb
repnz
movsb
and
cmp
add
sti
lock
andb
and
addr16
js
sub
aas
jmp
pop
adc
das
cmc
aaa
jg
fcoml
out
aaa
and
xchg
mov
aas
das
imull
pop
ljmp
add
popa
jo
inc
xor
mov
test
adc
jmp
mov
xor
lret
jmp
test
add
inc
push
das
push
adc
arpl
sub
and
inc
dec
inc
cli
ljmp
inc
pop
mov
jae
push
fistpll
or
mov
push
mov
fists
clc
ljmp
cmc
xor
loop
inc
scas
loope
incl
fstl
repz
xchg
xchg
push
add
fbstp
sub
mov
cs
fsubrl
sub
outsb
pushw
lea
jmp
scas
jg
jbe
adc
sti
and
dec
int3
pop
rcrl
dec
cmc
in
scas
incb
or
lcall
aas
adc
mov
xor
pop
mov
xchg
jg
std
aas
roll
movsl
imul
loopne
popf
insb
pop
pusha
repz
jp
mov
push
add
es
sub
jle
pushl
mov
adc
pop
sub
pop
lcall
mov
or
in
push
std
push
mov
or
adc
data16
enter
sbb
push
das
pop
rorl
ret
adc
sub
xchg
test
xor
push
mov
jmp
mov
lock
pop
mov
mov
in
out
or
aaa
int3
scas
pop
call
lahf
fxch
mov
xor
notl
adc
push
test
sbb
outsl
jbe
into
cmp
aas
in
insb
or
push
out
pop
js
adc
pop
and
jno
add
push
cmpsl
or
or
pop
loopne
cmp
xchg
mov
enter
mov
xchg
xor
sub
xchg
pop
add
mov
push
sti
adc
add
icebp
fst
mov
dec
add
add
or
mov
stos
jecxz
add
xor
push
xor
testb
cli
mov
push
cld
mov
cmpsb
mov
push
imul
test
mov
pop
addr16
faddl
push
push
sbb
add
lds
mov
daa
or
flds
outsl
mov
push
dec
pusha
lea
fistps
mov
dec
es
insl
shll
inc
inc
cmp
push
fisttpll
and
push
adc
add
mov
dec
loop
push
aam
xchg
test
inc
fiadds
jne
lds
lods
clc
repz
andl
mov
mov
mov
outsl
data16
xchg
das
push
inc
inc
stos
add
in
jg
sbb
add
insb
mov
push
fiaddl
inc
inc
sub
fbld
jnp
mov
dec
inc
cmp
xor
filds
arpl
xchg
out
insl
pop
cmpl
orb
cltd
in
test
rcll
mov
insl
daa
push
pop
stos
jno
je
loopne
push
cmp
adc
ret
sbb
mov
mov
push
insb
dec
out
jl
int
lock
adcl
stos
arpl
rol
mov
mov
dec
or
and
aas
and
in
mov
jecxz
stc
add
pop
jmp
loopne
mov
cmp
mov
cmp
das
into
test
out
subb
jmp
enter
pop
fs
xor
inc
cltd
add
mov
lods
cmp
adc
mov
dec
stos
loopne
lods
adc
jns
ret
or
pop
ffreep
lock
inc
mov
push
mov
jg
mov
inc
pusha
dec
fucom
sbb
add
and
or
inc
jp
fcmovbe
arpl
xchg
add
negb
outsl
hlt
sbbb
int
push
mov
fwait
push
pop
fadds
mov
repz
lea
add
divb
mov
std
mov
addb
mov
test
decb
movsb
mov
loope
xchg
mov
mov
cvtdq2ps
out
iret
and
std
or
xlat
pop
pop
push
mov
xchg
push
dec
and
or
pop
push
and
or
add
add
or
cmp
lock
push
jg
push
cld
sbb
dec
or
decb
sahf
mov
popf
das
cmp
ljmp
cmp
loop
pop
int
outsb
cld
outsl
pop
xchg
je
pop
xchg
sub
push
cwtl
std
mov
lea
lahf
scas
xchg
movsl
aam
adcl
adc
xor
xchg
or
fstps
dec
sbb
cmp
mov
in
cmp
ja
test
ds
test
pusha
lods
pop
sar
adc
popl
mov
movsl
and
pushf
lret
aas
jbe
inc
add
call
and
cld
sbb
mov
lock
repnz
sbb
mov
mov
and
push
and
push
sbb
jg
add
adc
cld
pop
add
pop
jae
mov
inc
push
jge
push
repnz
mov
ds
sub
addl
mov
pop
push
xchg
loopne
clc
push
call
inc
push
mov
jmp
dec
leave
jae
push
nop
mov
stos
das
lahf
hlt
fmull
pop
fadd
add
scas
push
out
pop
mov
or
cmp
mov
xchg
or
mov
fldcw
test
negb
xchg
orl
jbe
sub
or
int
add
mov
jg
mov
and
and
test
pushf
fwait
lds
or
push
in
cmp
es
aad
jg
xchg
je
test
es
aam
mov
adc
adc
add
lea
lret
mov
decb
out
and
xor
or
in
pop
add
cltd
jecxz
pusha
mov
add
addr16
std
fwait
call
popa
pop
rorl
test
rcrb
int
sub
xor
push
cwtl
outsb
mov
adc
filds
fbstp
pop
inc
orl
xchg
mov
jg
mov
pop
sub
cwtl
repnz
out
jbe
pushf
add
movsl
sbb
ret
mov
fwait
call
movsl
imul
fildl
mov
jl
or
das
call
push
out
aas
inc
mov
je
jp
adc
jp
mov
lea
fisubl
cld
mov
cmc
popf
rclb
ret
mov
lods
or
loop
movsl
in
jno
jbe
outsb
pop
xchg
pop
sub
insb
jge
fisttpll
rolb
pop
leave
jle
cld
bound
push
sub
scas
js
cmpb
ror
mov
lcall
mov
adcl
push
sbb
dec
jl
lret
outsl
or
in
jnp
cmpsb
lea
cmp
jl
mov
loop
inc
notb
jbe
stos
stos
mov
movsb
inc
add
addr16
cmp
sbb
mov
jecxz
cmp
enter
fbld
movl
popa
mov
mov
std
aad
nop
std
ret
sahf
inc
clc
insb
repz
sub
or
test
sbb
jl
xor
loopne
divl
jl
ja
shlb
fstpt
adc
adc
daa
fisubl
or
arpl
rcll
ja
addb
jo
je
and
mov
rcrb
andl
fwait
mov
or
cmc
and
lcall
sub
insl
jo
hlt
mov
sub
je
adc
rcrb
cltd
lods
mov
xorl
mov
stos
inc
jno
inc
fsubp
mov
rorb
push
pusha
inc
lret
rcr
push
xchg
or
jmp
rolb
add
jmp
adc
decb
lds
mov
dec
pop
jae
inc
into
mov
out
int
mov
add
jbe
incl
xor
rol
enter
jno
nop
and
jno
jle
mov
mov
test
push
sub
inc
mov
jae
sub
or
es
xchg
pop
dec
or
popa
mov
loop
pop
or
push
push
movsl
inc
mov
sub
lret
aaa
movsb
add
adc
mov
sbb
ja
or
xchg
jg
lcall
stc
lods
push
push
push
roll
cld
insl
icebp
lods
adc
cmp
das
fadd
imul
adc
mov
stos
fdivr
mov
and
fmuls
adc
mov
scas
xchg
and
mov
cmp
sub
and
mov
mov
sub
cld
cmc
repnz
mov
lcall
lea
ljmp
sti
nop
sbb
jb
stc
xor
adc
push
and
mov
cmpb
lahf
and
jl
sbb
aaa
mov
add
mov
push
and
xchg
hlt
fadds
xchg
fidivs
xchg
les
cmp
movsl
and
push
cmc
stos
mov
sub
lock
in
or
je
and
pop
les
xchg
scas
xchg
test
lea
add
cmc
clc
and
mov
dec
jo
and
stos
shll
mov
push
inc
out
mov
shll
ret
sbb
pop
inc
out
lret
cmp
push
shrb
andb
cmp
icebp
pop
and
adc
fxch
jnp
lahf
ficoms
filds
and
icebp
mov
jnp
lods
sub
cmp
insb
test
push
outsl
push
fdivrp
das
mov
pop
lds
xor
add
std
sbb
inc
imul
or
out
xor
ret
aad
add
mov
jg
ds
je
adcb
js
dec
lcall
push
adc
adc
iret
fcoml
inc
mov
adc
imul
nop
push
aam
mov
jb
mov
ret
imul
add
pop
xor
push
leave
sahf
rorb
jne
mov
pop
mov
call
rcll
mov
fwait
aam
push
and
adc
rcrb
out
sub
movsb
sbb
mov
cmp
push
inc
sbb
push
rolb
add
xchg
mov
add
push
popf
cmp
clc
shlb
add
insl
adc
sbb
jl
mov
adc
jo
notl
test
fistpl
sub
and
push
je
xchg
cmp
cld
or
movsl
dec
push
mov
ljmp
and
dec
aaa
mov
lock
xor
andl
or
cmpb
loope
stos
jbe
imul
rol
lea
scas
inc
fistl
jmp
mov
stos
cmpsb
mov
push
or
inc
outsl
cmp
sbb
dec
insl
pop
push
xchg
fcmovne
iret
loope
in
dec
mov
mov
lds
xor
nop
mov
or
inc
test
or
hlt
jg
push
call
roll
mov
mov
sysexit
dec
je
test
inc
pushf
push
mov
inc
mov
add
inc
cmp
dec
push
pop
push
sub
gs
mov
add
mov
fistpll
cli
jmp
js
leave
jne
dec
fdivs
int3
mov
cld
dec
test
cs
mov
dec
cld
pop
lock
out
mov
add
stos
xchg
and
adc
loope
fcmovnu
dec
mov
fisubrs
mov
xor
add
test
push
push
and
lcall
pop
and
pusha
push
arpl
clc
fwait
push
insb
cmpsb
add
adc
mov
mov
or
mov
mov
vfmaddsubps
or
shl
ds
and
pop
xchg
sti
sub
shlb
fstl
outsb
ret
adc
cmpsb
adc
push
push
push
call
not
idivb
push
push
mov
loope
pop
sub
lock
xchg
ja
pop
clc
xchg
jnp
pusha
clc
cmc
mov
xchg
int
test
pop
mov
jle
mov
clc
or
movsl
in
push
inc
scas
sub
clc
test
rcr
jl
andb
inc
and
outsl
jg
ret
pop
mov
add
pop
mov
sbb
jecxz
es
inc
sbb
scas
ds
lahf
in
push
cmc
scas
ret
mov
mov
jo
lods
movsl
jp
xor
sub
clc
pop
jle
pop
mov
jecxz
cltd
pop
mov
pop
cli
pushl
loopne
negl
imul
pop
add
psubb
push
cli
jg
ds
outsl
test
jecxz
cmp
or
neg
mov
movsb
add
inc
sbb
push
mov
mov
mov
outsl
gs
addr16
push
cmc
jo
jp
pop
pop
loopne
pop
loop
jo
test
stos
xchg
inc
dec
pop
aam
repnz
test
jecxz
sti
pop
incl
dec
les
pop
xor
je
loopne
fisubrs
hlt
jg
js
aas
and
je
or
inc
xchg
jl
pop
jl
mov
push
mov
bound
mov
cmp
add
sub
clc
clc
add
into
xchg
clc
ljmp
ja
xor
xor
inc
cmp
in
das
fdivrs
mov
stos
add
iret
jno
mov
pop
jbe
mov
test
add
add
cltd
xor
add
add
adc
jne
mov
sbb
incl
cmp
mov
jl
add
cmp
or
sub
jne
fs
sbb
mov
sbb
or
cmp
call
jnp
mov
push
hlt
push
lret
xchg
in
scas
push
outsl
rcl
inc
pop
adc
jae
rcrl
je
add
adc
push
js
das
jl
xor
adcb
sbb
pop
bound
or
dec
cmp
add
sub
ja
mov
clc
or
cmp
outsl
cld
cmp
fwait
sbb
sub
dec
xchg
fs
clc
fistpl
mov
cmp
scas
add
dec
ljmp
loop
inc
mov
scas
das
inc
scas
or
loopne
cltd
dec
imul
xorb
mov
out
lcall
das
in
sbb
test
pop
dec
adc
notl
jg
call
pop
fwait
stos
fdivrl
push
pop
sub
call
adc
rcll
adc
mov
fbstp
test
add
fcoms
xor
movsl
add
outsl
fcmovnbe
frstor
dec
or
mov
inc
movsl
aam
inc
decl
sti
hlt
mov
out
mov
test
daa
ljmp
out
int
cmpsl
cli
or
stos
inc
push
mov
movsb
push
outsl
insb
fnstcw
cmc
jae
outsb
sbb
mov
ja
mov
pop
cmpsl
addr16
pop
out
mov
aaa
cs
fnstenv
rorb
loopne
inc
pop
aas
movsl
add
stos
icebp
mov
ret
mov
xchg
ror
hlt
test
mov
sub
push
test
bound
and
ret
jl
dec
fdivs
inc
inc
jl
dec
movsb
mov
filds
arpl
jb
cld
lret
psubusb
push
push
lret
adc
pusha
imul
cltd
inc
iret
in
cs
mov
cmpsb
out
mov
hlt
mov
icebp
leave
aas
shrl
nop
and
lret
xor
jg
add
rcl
mov
in
push
sti
fstpt
mov
xchg
out
subl
mov
mov
xchg
loope
sbb
test
pushf
fstpl
stos
push
push
leave
dec
dec
lock
adcb
or
loop
xchg
lock
pop
pop
pop
sub
dec
out
or
xor
add
or
in
outsl
jns
out
cmp
push
ret
test
mov
mov
push
inc
sub
outsl
filds
adc
xor
mov
inc
repz
sbb
push
lret
out
das
mov
xor
mov
lds
ret
dec
cmp
xorb
mov
jno
fstl
sbb
add
or
push
loope
xor
adc
push
adc
fistpl
lahf
incl
repz
movsl
pop
push
roll
mov
xchg
inc
add
inc
sbb
cwtl
movsb
sbb
pop
push
fcomp
movsb
stos
cmp
mov
call
pusha
mov
sbbl
xor
subl
movsbl
mov
jmp
jge
pop
sbb
mov
pop
call
pusha
mov
shl
pop
add
xor
icebp
call
adc
ja
in
ja
inc
in
stos
add
mov
mov
jg
inc
mov
test
aam
jecxz
mov
popf
and
rolb
mov
xor
decl
stos
sub
shrl
or
gs
xor
xor
lock
push
in
repz
mov
inc
pop
call
mov
mov
aaa
pop
pop
lock
negl
mov
adc
call
insl
and
fwait
test
addr16
sbb
icebp
shll
or
adc
mov
jnp
or
jbe
popa
jge
loop
mov
sub
cmpsb
xor
jns
pushf
push
adc
inc
test
and
sub
sbb
loopne
xor
sub
mov
dec
or
push
inc
out
fimull
stos
mov
jo
push
test
outsb
ret
icebp
in
nop
adc
and
xchg
pop
les
lea
pop
cmp
ret
loop
loope
frstor
jnp
jmp
inc
inc
int
out
mov
lahf
vpaddw
add
or
fisubrs
movsl
add
push
add
jne
sarb
mov
rorb
xchg
sar
push
jae
outsw
gs
add
add
push
mov
cwtl
dec
negb
sbb
iret
fwait
mov
mov
cmpsb
inc
insb
test
xchg
cltd
adc
int3
inc
leavew
add
and
jb
adc
push
pop
incl
jl
inc
sub
jecxz
mov
jmp
iret
mov
jne
mov
or
mov
cld
movsl
pusha
cwtl
daa
cltd
sti
xchg
or
sub
rcll
ja
pop
dec
rorl
test
loopne
sbb
in
rol
sub
and
mulb
mov
dec
aas
sub
pop
jle
or
inc
cmp
xor
rcll
xchg
pop
clc
pop
add
jno
pusha
shrb
movl
loopne
jbe
movsb
inc
mov
jge
push
mov
addl
je
sbb
out
push
enter
outsl
mov
cmp
adc
pop
lahf
xchg
je
js
lcall
lcall
jg
mov
lea
mov
push
movsl
or
inc
not
mov
mov
outsb
or
cmp
pop
add
cmpsl
push
xchg
nop
jg
ljmp
icebp
mov
dec
adc
in
sbb
jmp
cli
or
inc
adc
xchg
jmp
mov
push
hlt
pop
mov
imul
movsb
sbb
and
jbe
ja
in
ret
dec
ret
rcl
xor
loop
movsl
adc
cmp
inc
stc
push
fidivl
xor
rcrl
cmp
pop
aad
pusha
jg
lods
pop
lods
mov
pop
hlt
or
pushf
insl
and
aad
and
insb
push
pop
ret
cld
ret
jno
je
daa
aas
jnp
in
xchg
xor
incl
mov
pop
loop
inc
clc
icebp
mov
xor
test
rcl
sub
shll
lcall
jns
rcrb
movl
pop
push
orl
inc
clc
es
jmp
xor
xorl
sar
fstl
sar
je
sahf
rolb
inc
stos
clc
sbb
sbb
loop
pop
pusha
shl
aas
mov
dec
sub
sub
or
das
mov
icebp
repnz
jle
jmp
jecxz
cmp
cld
push
fdivp
lods
cmp
hlt
shr
jbe
imul
fldt
fwait
pop
cmpb
adc
scas
inc
lret
xchg
adc
add
cmp
lock
clc
ds
fucomp
aam
sbb
rorb
pusha
stos
mov
jecxz
push
push
mov
scas
pop
pop
xchg
mov
inc
inc
movsl
stos
arpl
lea
pop
adc
and
mov
xor
in
push
jmp
jmp
add
adc
cltd
push
xor
movsl
nop
inc
and
dec
jo
ret
sarb
paddsw
pop
insb
mov
cmp
movsb
mov
push
andb
push
add
mov
mov
xchg
inc
jbe
sar
lods
lcall
out
scas
jo
dec
shr
les
push
adc
sbb
loopne
inc
xchg
icebp
mov
dec
outsl
mov
jno
lcall
xor
add
insb
mov
adc
jg
aam
mov
sbb
call
xor
dec
mov
aaa
stc
inc
jns
outsl
xchg
sub
mov
and
clc
fistpll
iret
leave
clc
imulb
bound
int3
mov
js
loopne
push
xchg
xchg
xchg
dec
das
mov
dec
movsb
sub
xor
inc
add
mov
rorl
pop
cmp
xor
pop
outsb
aaa
pop
mov
mov
iret
pop
ss
fcomi
mov
lea
out
add
jp
test
xchg
fmull
nop
sbb
enter
pop
push
sar
push
cmp
add
ljmp
insl
lea
iret
inc
pop
hlt
sahf
aaa
jge
call
hlt
mov
jne
pop
adc
mov
lods
jb
add
ss
push
sbb
pop
mov
stos
popf
add
cmpl
push
scas
lea
pop
lret
daa
dec
cmp
push
loope
ja
xor
pushf
add
cmp
or
cs
hlt
inc
mov
xor
or
push
mov
mov
in
jp
fidivrs
loopne
mov
cmp
popf
sub
test
std
imul
dec
data16
pop
mov
xchg
pop
and
push
cli
in
mov
jmp
inc
lahf
or
adc
inc
jl
loope
cmpb
pusha
outsl
loop
cs
xchg
popa
push
outsb
xchg
pop
adc
in
jle
pop
xchg
inc
pop
or
mov
mov
add
mov
packsswb
mov
adc
addl
fbstp
loopne
out
cmp
pop
sub
sub
sub
sbbl
jne
push
aas
ret
mov
and
fbstp
dec
push
adc
pop
cmp
pop
jecxz
rcrb
jl
fnclex
add
in
repnz
test
ss
pusha
mov
or
fldl
sbb
dec
pop
mul
mov
ret
jl
or
ret
xor
repnz
dec
out
vpunpckhbw
test
sbb
jo
js
cmc
dec
mov
and
icebp
imul
vdivps
ret
rcr
or
imul
mov
dec
push
test
movsl
pop
xor
mov
sub
cwtl
iret
push
mov
out
jo
mov
sub
mov
fwait
in
sbb
idivl
pop
popa
call
sbb
in
in
sti
ret
mov
xchg
in
rol
rolb
xlat
pop
sub
test
in
clc
dec
icebp
or
int
or
add
jg
mov
les
or
stc
lds
mov
add
pop
push
aas
push
or
dec
cmp
adc
nop
sub
sti
sbb
sbb
sbb
rcrl
sbb
imul
xchg
je
xorl
xor
and
jnp
dec
mov
push
cmp
mov
cmpsl
fs
bnd
xor
mov
iret
push
xor
mov
and
xor
jg
lcall
mov
mov
ret
leave
push
xor
icebp
dec
insl
mov
cld
inc
add
mov
out
lock
dec
cld
push
fdivrl
movaps
sbb
jle
push
stos
inc
cld
cmc
test
sbb
ficoml
loopne
nop
bound
mov
lods
adc
xchg
adc
jecxz
into
clc
fwait
cmp
cmpb
and
pop
clc
and
loopne
pop
sbb
push
lock
pop
adc
mov
cmp
add
jno
mov
cmpsl
pop
popa
dec
push
dec
add
inc
or
mov
push
cmp
sbb
lret
cmp
xor
pop
loope
stos
addr16
or
inc
inc
lods
nop
dec
jne
mov
and
push
fists
jecxz
cltd
scas
jmp
xchg
jle
call
mov
cld
lret
insl
or
jg
fnsave
push
sbb
add
mov
in
lock
push
pop
int
incl
mov
cmp
call
jmp
pusha
jl
clc
incl
lds
js
enter
out
ss
mov
fnsave
jp
xchg
fsubr
pop
jecxz,pt
movd
mov
mov
lea
clc
and
or
fldl
clc
jmp
nop
cmp
mov
ss
or
testb
mov
or
mov
xor
repz
cmp
sub
and
add
mov
mov
adc
jecxz
shlb
sub
jle
jno
andl
cmpsl
ss
scas
call
sub
push
scas
loope
mov
push
lock
xorl
call
icebp
scas
lret
and
jecxz
iret
or
pushl
mov
sahf
in
icebp
xor
ret
in
pusha
push
jle
mov
mov
sub
ss
insb
fwait
dec
cmp
outsl
aas
add
pop
fistpl
outsb
xchg
push
out
inc
mov
ret
sbb
adc
fcmovnbe
sbb
scas
sub
repz
lock
and
enter
or
mov
pop
xor
cmp
fwait
pushf
negl
lock
fs
orl
cmpsb
hlt
aam
xchg
cwtl
inc
test
jge
aaa
sub
sbb
aas
out
gs
cld
adc
es
mov
xorl
outsb
jb
mov
mov
outsl
inc
cmp
jnp
cmp
add
test
icebp
in
fstpt
xchg
das
int
adc
cmpsl
arpl
leave
mov
mov
mov
rcll
mov
rorb
lods
pop
rcl
fisttpl
mov
lcall
lds
xor
cwtl
in
pop
push
ret
sbb
inc
sbb
cli
lods
mov
mov
pop
adc
les
dec
shrl
test
or
loop
or
or
ret
sub
inc
bound
leave
rolb
or
aaa
xchg
les
dec
int
pushl
lret
jne
imul
and
adc
sub
out
movsl
stc
mov
push
lret
sbb
adc
rcll
push
jecxz
lods
jmp
outsl
xchg
cli
or
push
mov
int3
push
stos
and
orb
incl
or
or
stos
mov
sbb
rcll
arpl
mov
fistl
pop
mov
jg
xor
mov
mov
loope
inc
and
stos
push
push
rorb
lds
icebp
pminsw
bound
or
cmp
fucomip
out
inc
and
movsb
mov
into
inc
sbb
popf
out
or
pop
decl
xchg
mov
cmpl
in
or
cmp
mov
push
das
arpl
in
push
dec
push
sub
mov
adc
nop
and
frstor
xor
sbb
imulb
and
ficomps
aas
imul
push
lds
jecxz
cmp
aaa
sbb
call
inc
add
inc
stos
push
push
xchg
pop
mov
inc
cmp
sti
xor
cld
test
lret
and
cmp
shlb
les
out
and
aam
cmp
cwtl
add
adc
xchg
fs
insb
push
jnp
loope
mov
lock
sbb
inc
pop
cli
lods
mov
fcoml
out
push
movsb
jne
xchg
lea
incl
mov
in
call
push
mov
movsl
outsl
shrl
and
rcl
das
push
insb
pop
push
or
sub
xchg
aaa
clc
jg
xlat
adc
jg
loopne
aam
shr
sbb
stos
or
test
mov
std
push
inc
out
sub
cwtl
or
clc
and
push
cli
mov
pop
xchg
add
mov
mov
jecxz
pop
inc
sbb
adc
ss
dec
jbe
aad
test
sti
cld
lock
pop
pop
unpcklps
arpl
pop
ret
ljmp
mov
imul
retw
jl
into
jbe
jne
adcl
push
ljmp
pop
pushf
leave
dec
mov
cmpsb
dec
add
mov
and
inc
and
movsl
jp
cmpl
iret
lods
stos
ljmp
jmp
idivb
lcall
mov
adc
jno
movsl
mov
roll
adc
mov
cmc
bound
rclb
mov
hlt
mov
ret
jge
sbb
std
cmpsb
jg
add
jp
mov
out
jmp
js
and
mov
add
xchg
lahf
mov
enter
iret
fildl
mov
sub
movsl
stos
mov
dec
inc
jo
push
test
fbstp
mov
stos
cmp
pop
mov
ret
aad
mov
inc
add
icebp
or
fildll
dec
mov
xchg
test
xchg
daa
add
scas
repnz
and
xchg
fucomip
into
inc
sbb
mov
andb
or
insb
ds
jno
mov
sbb
add
dec
hlt
ja
inc
sbb
jg
pop
add
mov
ljmp
out
sub
add
sbb
sbb
mov
ss
decl
add
cmp
sbb
jmp
icebp
lds
adc
and
and
fdivp
sub
jno
mov
xchg
pop
fxch
fucomp
pop
xorb
sub
stos
pop
outsl
mov
ja
hlt
lock
scas
dec
adc
clc
data16
stos
pop
es
int
ret
sbb
cltd
mov
and
jne
sarb
outsl
mov
pop
dec
fstl
inc
sub
imul
mov
mov
aaa
add
cmpsb
sub
rcll
jno
pop
mov
mov
mov
rorb
in
push
and
sbb
sub
insb
clc
sbb
push
imul
das
xchg
or
jge
add
inc
outsl
xor
aad
outsl
loop
repnz
lret
mov
xchg
jl
xchg
dec
ficompl
and
nop
jnp
push
gs
je
cld
das
aad
icebp
dec
and
jne
sti
sub
dec
mov
shrb
lret
ds
xchg
xchg
leave
or
bound
adc
cmc
sahf
loope
adc
xchg
mov
or
sub
dec
cmpsl
sti
imul
mov
mov
sbb
sub
sub
push
add
and
and
sti
xor
pop
xor
out
sbb
mov
clc
sub
daa
jb
stos
inc
lock
adc
and
jp
cmp
loope
orl
stc
pop
pop
int
repz
mov
pusha
mov
adc
mov
pop
lea
mov
clc
out
and
inc
imul
lcall
sbb
out
test
jbe
ss
push
push
mov
ret
hlt
aaa
jg
pushf
xchg
lea
pop
daa
stos
das
icebp
push
cmc
or
jecxz
xor
jmp
leave
push
sbb
adc
in
xchg
jne
mov
push
test
and
inc
das
mov
mov
dec
int
sub
cld
dec
mov
pop
aaa
or
mov
xor
xor
fcom
push
xlat
inc
arpl
hlt
bound
or
pusha
or
pop
inc
jmp
inc
cmp
mov
lock
sbb
outsl
xlat
outsl
push
jp
sub
in
jns
or
adc
pop
mov
ret
bound
add
movsb
dec
lcall
loope
mov
pop
cmp
mov
inc
mov
sub
xchg
loopne
andb
or
cmp
inc
loope
sub
add
outsl
push
mov
jg
or
cli
xlat
stos
jecxz
push
jg
into
lds
sbb
imul
jecxz
ja
mulb
inc
inc
cmp
pop
inc
adc
pusha
pusha
push
lret
daa
sub
sub
shrb
sbb
nop
inc
repz
dec
mov
fsts
xchg
mov
enter
das
push
jbe
add
ss
out
and
rorl
pushf
push
jmp
mov
les
fcmovu
jb
movsl
and
inc
jae
sub
loope
and
jp
insb
imul
push
inc
and
dec
xor
inc
call
jne
insl
clc
out
clc
popf
lcall
mov
sub
jl
mov
cmc
mov
daa
test
insl
imul
sub
rorb
clc
push
ljmp
mov
pop
xchg
movsb
hlt
in
inc
cli
lods
scas
lods
aad
xchg
dec
dec
and
shrl
add
pusha
cmp
clc
sbb
xlat
icebp
in
or
cmp
jne
out
test
pop
addb
mov
hlt
sub
dec
jl
inc
mov
pop
add
cld
lods
stc
mov
and
iret
mov
es
or
cmpsl
aad
xchg
dec
lock
ret
fisttpl
fdivrs
jle
push
sbbl
push
xchg
test
call
repnz
fadds
in
popa
repnz
sarl
out
or
dec
xor
adcl
imul
addl
iret
mov
push
call
dec
incl
lcall
scas
movsl
or
xchg
or
xor
push
sbb
xor
incl
jl
cmp
mov
popf
and
adc
push
cmp
dec
add
leave
les
lahf
jo
fmull
pop
jb
hlt
dec
repnz
mov
aad
mov
in
ficomps
push
jg
cmp
test
mov
push
mov
xchg
scas
jge
add
cmpsl
dec
outsb
das
fisttpl
mov
sub
rcll
ds
or
test
loop
and
add
mov
jg
mov
fstps
push
in
cltd
or
subb
stos
push
cmp
adc
fldt
aam
xrelease
add
xchg
cwtl
dec
push
in
mov
mov
test
fnstsw
out
push
orb
dec
mov
dec
pmulhw
hlt
inc
mov
fbld
fs
cmp
adc
mov
or
insb
sbb
mov
mov
add
inc
mov
inc
stos
fildll
push
pop
xor
dec
push
int3
or
xchg
mov
jp
out
roll
cmpsb
and
enter
into
mov
xchg
adc
repz
adc
push
test
or
inc
pop
sti
jp
pop
fiaddl
sbb
arpl
lock
cs
psubw
pop
xchg
fcompl
xchg
fdivr
or
adc
mov
fdivrl
push
insb
mov
movsb
aad
or
pop
fcmovu
or
rcrb
add
push
jl
out
push
roll
xchg
inc
add
mov
cmp
jg
pop
out
inc
and
loope
mov
or
xor
and
inc
xchg
and
inc
icebp
shll
xor
scas
mov
adc
mov
add
loope
out
pop
adc
push
into
sti
scas
add
cmpsl
mov
shll
jge
out
andb
inc
add
call
rcl
mov
fsubs
mov
jae
cmpsl
fisubrs
cmpsl
or
mov
outsb
cld
jg
cmp
js
jbe
testl
mull
mov
je
nop
test
and
add
arpl
pop
push
ja
jecxz
mul
mov
add
cltd
ffreep
xchg
imulb
loopne
lcall
pop
lahf
in
lock
rorb
adc
ja
add
and
lods
loope,pn
xchg
xchg
fcomp
add
lods
mov
add
add
stos
push
les
ficoms
addb
add
andb
push
pop
add
or
add
mov
les
or
in
out
push
mov
add
loop
or
adc
add
inc
insb
in
mov
nop
ss
or
das
and
or
inc
push
mov
cmp
mov
mov
or
inc
or
inc
inc
inc
pop
inc
inc
add
inc
mov
and
mov
mov
push
adc
and
adc
fstp
dec
inc
nop
nop
adc
jp
inc
movsl
arpl
dec
adc
xor
push
stos
mov
and
mov
add
or
mov
mov
add
inc
sahf
pop
inc
add
fcmovbe
je
jle
and
add
les
mov
or
add
in
pop
imul
pop
adc
xor
or
add
inc
fcmovnbe
mov
insb
into
incb
jl
mov
imul
push
pop
es
insl
imul
adc
push
and
pop
mov
cmp
adc
pop
outsb
fildl
add
and
mov
mov
js
mov
adc
loopne
adc
xor
repnz
mov
mov
cmpb
inc
and
imul
fwait
sub
jo
and
jnp
vcvtpd2psx
adc
nop
mov
loopne
mov
push
dec
shrb
mov
adc
int
scas
insl
pop
ror
cmpsl
mov
out
mov
cwtl
adc
icebp
and
xor
inc
jge
adc
mov
mov
and
inc
jae
mov
inc
out
mov
mov
mov
add
adc
rclb
mov
and
aad
adc
or
rorl
lcall
xor
pop
imul
adc
or
add
pop
imul
or
and
lods
push
pop
jge
jns
jbe
lcall
cmp
pop
mov
jg
mov
enter
pop
sbb
mov
inc
add
lcall
cmp
rorb
mov
add
arpl
xor
dec
push
mov
inc
jae
arpl
decl
outsl
pop
inc
imul
add
xchg
mov
sbb
mov
jo
lret
xchg
aam
lcall
shlb
imul
add
adc
add
mov
test
cmp
int
shrb
push
add
addr16
jae
subb
mov
jg
mov
push
iret
adc
out
add
inc
scas
push
push
add
add
call
test
or
inc
push
mov
bound
mov
sub
sub
cmp
rclb
lcall
test
pusha
icebp
imul
incl
lods
xor
adc
cmpsb
int
pop
out
mov
loopne
aaa
sub
aas
fiaddl
dec
test
pop
adc
sarl
popa
xor
or
scas
insl
imul
xchg
inc
jnp
pop
les
xlat
ljmp
xor
test
sbb
cmpsl
cmpb
ret
mov
fiadds
sbb
mov
mov
data16
cmp
fidivs
inc
clc
nop
sbb
or
jae
test
xchg
add
or
je
dec
aaa
and
lahf
or
insb
or
rcrl
lea
aaa
sub
or
sub
xchg
pop
mov
sub
sbb
mov
inc
xor
lcall
pop
shlb
ror
inc
inc
test
pop
jnp
inc
pop
aaa
lret
fsubr
xchg
adc
movsb
push
aam
lods
jne
movl
xor
and
xchg
or
subb
outsb
sbbb
int
mov
mov
icebp
js
and
xchg
mov
add
lea
andl
lcall
sbb
imul
add
mov
ja
test
xor
inc
mov
shl
dec
ss
lcall
sbb
lcall
inc
pop
imul
mov
xchg
add
jnp,pt
push
or
pop
pop
sbb
pop
or
lcall
insl
mov
fldt
inc
or
or
lods
clc
fwait
dec
add
test
subb
mov
int
or
addr16
sbb
out
scas
sub
subb
push
mov
in
inc
xchg
add
xchg
rcl
imul
dec
and
push
subl
mov
aas
mov
int
fsub
addr16
pop
sub
push
fisubl
mov
add
mov
mov
cwtl
inc
pop
das
xchg
pop
jae
xor
dec
int
sub
xor
sbb
pop
lods
cltd
hlt
push
adc
and
rcrb
mov
arpl
scas
cmp
push
ret
push
sub
imul
jb
rol
mov
push
stos
cmp
call
subb
scas
into
aam
mov
xchg
loope
cmpsl
sbb
out
shll
cld
leave
adc
cmp
lods
sbb
and
movl
inc
popf
add
mov
xchg
fldenv
and
out
or
out
cmpsb
sub
xorb
or
adc
scas
sbb
mov
dec
int
mov
lods
xor
clc
sub
mov
add
mov
in
aas
cmpsl
test
pop
imul
push
ds
je
ljmp
mov
jae
pusha
xor
in
cs
push
xor
xchg
daa
inc
and
dec
add
or
popf
ds
xchg
pop
mov
sbb
push
in
push
push
mov
jle
aad
ret
dec
inc
sub
or
movsl
mov
xor
js
ror
add
lods
ja
ficompl
add
andl
fcomps
cmpsl
adc
sbb
adc
inc
scas
outsb
rcr
add
adc
or
in
mov
addr16
imul
jns
scas
pop
test
popa
push
sbb
mov
inc
mov
cs
push
sbb
mov
out
repnz
add
fsubl
leave
lcall
add
adcl
dec
imul
cmp
lea
rcrb
xchg
shll
out
pop
scas
push
adc
pushf
adc
inc
push
jo
in
cmp
mov
add
inc
cld
pushw
add
incb
fldt
sub
rcrb
cwtl
rcr
fiadds
outsb
add
aaa
adc
mov
xchg
ret
loopne
imul
dec
and
pop
dec
xchg
inc
sbb
nop
mov
cmp
jae
xor
flds
rorl
sbb
notb
pop
adc
incl
addb
or
shlb
aas
dec
jb
inc
pop
mov
pop
lea
cli
adc
fcomps
clc
ljmp
sub
xor
jo
jo
movb
nop
dec
push
fcom
fs
in
mov
inc
inc
xor
andl
mov
test
mov
lods
mov
xor
fcomps
fwait
or
xor
cmp
pop
and
pop
adc
sub
add
sbb
or
xchg
call
cltd
mov
scas
sbb
repz
xor
fistpl
mov
push
cs
dec
fst
popa
ret
fdivrs
cmp
rcrl
testl
addb
lcall
jbe
jb
xor
arpl
pop
ret
xor
and
xchg
sbb
adc
sub
add
inc
sbb
mov
mov
dec
pop
jae
cmpsl
mov
add
inc
ret
call
jb
or
rorb
add
clc
dec
sub
testl
or
loop
jo
aam
xor
xchg
lahf
dec
sbb
push
sub
or
add
mov
and
xor
xor
mov
sbb
sbb
sbb
repnz
mov
add
push
shrl
ss
mov
cmp
addr16
and
dec
xor
mov
stos
loop
jo
jo
rclb
imul
addr16
pusha
mov
push
cmp
je
push
jnp
pop
mov
adc
push
xor
xor
adc
addr16
add
or
std
push
push
push
push
push
push
cmp
lret
test
adc
sbb
addr16
mov
push
push
dec
mov
testb
add
xorl
jno
mov
xor
jge
out
in
sbb
mov
stos
ret
add
in
cmp
xor
outsb
add
incl
nop
sub
lcall
insl
mov
push
pop
and
pop
xor
jp,pt
mov
xchg
mov
mov
sbb
adc
cmp
inc
jne
and
or
mov
loopne
call
and
pushl
andb
push
sub
or
and
and
sbb
dec
les
loopne
dec
jno
adc
out
lcall
and
adc
and
dec
fnsave
mov
inc
adc
sbb
and
jp
nop
mov
inc
adc
insl
sarl
loopne
pop
inc
inc
mov
lcall
or
push
push
add
add
push
mov
test
test
and
pop
test
add
mov
addl
sub
xchg
mov
mov
dec
mov
dec
add
or
fldt
dec
outsl
sbb
cmp
or
push
mov
dec
mov
icebp
jg
lcall
test
nop
pop
add
inc
icebp
dec
into
loopne
sbb
and
fdivl
sub
ret
adc
pusha
scas
push
jnp
adc
imul
loopne
sbb
sub
and
inc
xor
mov
adc
lods
xchg
jmp
mov
repnz
inc
jae
xorb
inc
add
push
dec
pop
cmpsb
ret
jp
mov
push
std
adc
dec
and
inc
insl
in
push
incb
inc
addl
jle
pop
push
notb
and
mov
movl
or
das
jge
add
mov
and
xorl
or
cmp
out
pop
adcl
aam
push
or
test
xchg
loopne
andl
jle
sbb
jle
mov
dec
push
sbb
push
dec
inc
inc
and
inc
push
dec
and
push
add
insb
loopne
aad
mov
or
pop
mov
cmc
dec
xor
and
and
xchg
xorl
push
and
adc
lea
outsl
add
sbb
xorl
adc
sbb
push
xor
adc
jp
push
xrstors
loopne
mov
pop
inc
inc
add
cmpb
xor
int
adc
adc
adc
or
xlat
mov
sahf
push
mov
addl
mov
imul
xchg
in
inc
xor
push
inc
add
or
stc
and
sub
push
outsb
push
addb
outsb
fisttps
or
adc
and
dec
rcrb
xchg
jno
mov
fstpt
and
mov
mov
inc
sub
lret
pushaw
popa
mov
add
add
repnz
mov
adc
mov
mov
dec
clc
cltd
imul
pop
loope
test
sbb
cs
mov
scas
or
sbb
adc
and
or
sbb
sbb
mov
fcoml
and
push
mov
mov
fistpl
push
xlat
and
sbb
in
adc
popa
mov
jmp
movsl
jp
shrb
test
int
and
sbb
add
or
inc
add
and
adc
insl
orl
mov
add
push
sbb
add
or
lds
inc
sub
sbb
add
mov
faddl
inc
xor
sub
or
mov
movl
imul
addb
pop
mov
inc
pushf
dec
and
inc
mov
adc
push
pop
dec
adc
or
pop
or
xor
imul
sub
push
and
add
rcrl
rcr
mov
push
addl
and
and
push
push
lods
shrl
sub
clc
es
sbb
mov
lcall
or
stos
testl
jecxz
mov
mov
mov
pop
sbb
mov
adc
inc
push
invd
add
out
mov
push
iret
sti
sub
inc
mov
adc
and
or
pop
pop
out
fiaddl
mov
inc
bound
int
out
adc
mov
into
mov
inc
dec
sub
sbb
push
daa
aas
adc
or
mov
jmp
int
movsl
ret
mov
popf
or
dec
test
insb
mov
pop
mov
test
loopne
cltd
test
fcomp
lods
jne
or
notb
sbb
pop
inc
imul
inc
fistps
mov
inc
and
adc
test
push
or
fisubrl
adcl
loopne
and
test
and
inc
pop
addb
and
stc
mov
add
gs
push
outsw
jb
popa
outsb
arpl
outsl
jne
je
push
sbb
popa
insb
inc
jb
or
je
outsl
fs
gs
push
inc
adc
jb
sub
mov
in
push
jb
gs
adc
popa
cmp
jle
mov
jns
and
insl
jo
dec
dec
popa
insl
gs
divb
inc
inc
jno
lahf
std
fcmovnu
cmp
addr16
popa
fs
imul
bound
fldt
inc
insb
push
arpl
jne
bound
cld
jbe
cmp
dec
fs
jae
jb
imul
imul
xorl
push
jns
lea
imul
mov
je
jo
outsb
pop
push
pop
in
xor
sbb
inc
out
jle
imul
imul
imul
jbe
outsb
xchg
imul
psubusw
jle
addr16
sbb
jo
dec
gs
js
pusha
fcoms
mov
arpl
jo
insl
lods
pusha
and
mov
mov
test
pop
adc
ss
xchg
jae
pop
or
inc
jnp
mov
cs
imul
or
mov
push
inc
test
and
dec
add
add
repz
loopne
fldt
inc
add
scas
cmp
add
cmp
adc
sbb
or
add
add
neg
fs
or
popl
sub
arpl
xchg
dec
pop
push
das
jo
stc
xchg
mov
add
add
je
js
pop
rcrb
ds
add
pusha
jmp
or
sti
pop
jnp,pn
in
inc
flds
inc
inc
cs
ss
popa
xor
iret
outsb
and
dec
daa
in
jb
cmp
jb
mov
inc
shll
bound
adc
mov
cmpl
jb
cmp
jae
inc
xor
add
push
sub
fstl
sbb
pop
leave
add
add
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
