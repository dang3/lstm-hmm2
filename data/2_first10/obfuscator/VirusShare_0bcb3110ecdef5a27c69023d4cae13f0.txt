add
push
adc
pop
pusha
or
add
test
adcb
fcoms
mov
or
add
cmpsb
and
push
inc
push
add
inc
jb
adc
add
add
inc
add
stos
dec
add
add
gs
inc
inc
add
lods
or
mov
shrb
movsb
add
xorl
sub
addb
push
add
and
add
or
add
adc
dec
add
push
add
dec
mov
add
sbb
dec
sbb
and
mov
and
adc
xor
push
test
pusha
sbb
add
in
rolb
dec
push
or
adc
push
inc
inc
pop
and
pop
mov
dec
inc
dec
cmpsb
enter
or
inc
push
mov
adc
inc
add
lods
add
xchg
and
mov
add
mov
adc
adc
and
add
nop
leave
jno
sbb
cmp
dec
and
add
add
or
dec
inc
add
or
inc
and
ret
add
mov
add
inc
rolb
dec
push
mov
pusha
xor
or
les
mov
xor
or
dec
add
adc
popa
inc
adc
sbb
add
xor
add
addl
and
pusha
and
adc
adc
or
and
dec
and
rorb
sbb
add
and
sub
sub
add
inc
add
add
int3
add
push
add
inc
push
add
add
add
and
and
adc
inc
pop
and
punpckhdq
or
add
add
addb
add
jb
add
test
addb
test
mov
inc
add
add
or
adc
dec
adc
sbb
pop
addl
add
lret
pop
or
add
nop
add
test
push
andb
push
push
sbb
jne
lea
sbb
inc
adc
xor
and
rolb
add
adc
dec
or
and
add
addb
add
and
add
add
or
add
add
add
mov
dec
adc
add
add
pusha
test
add
inc
and
cmp
sbb
add
sbb
inc
xchg
dec
push
and
xor
mov
add
dec
add
sbb
adc
pusha
adc
push
or
inc
xor
add
add
mov
push
push
inc
or
inc
ds
and
mov
inc
ret
add
add
adc
pop
xorb
add
push
cmpsb
arpl
sbb
add
add
or
and
add
dec
mov
mov
or
add
or
inc
add
add
jno
sub
add
xor
add
les
sbb
sub
sub
add
add
adc
andb
add
add
and
add
mov
sub
sub
fs
sbb
or
add
or
nop
jno
add
add
inc
test
add
dec
mov
and
mov
test
adcb
nop
nop
inc
add
add
inc
sub
dec
push
add
cmp
mov
add
inc
inc
or
or
and
mov
mov
lcall
add
data16
pop
adc
or
jbe
orb
sub
and
mov
and
ret
subb
and
test
add
and
dec
add
cwtl
add
sbb
add
or
aam
roll
push
andb
sbb
add
inc
push
stos
push
push
adcb
push
adc
pop
sub
andb
add
and
orl
xchg
mov
adc
add
and
sbb
or
stos
inc
add
add
add
addb
add
add
loopne
add
js
jo
add
enter
movsb
add
and
cwtl
test
add
adc
add
add
add
add
add
rclb
test
or
jo
add
add
add
add
add
xor
inc
xor
mov
sbb
adc
or
xchg
inc
inc
test
mov
adc
rolb
mov
sub
andb
addb
mov
push
pop
and
inc
mov
and
rol
add
add
add
sbb
pusha
add
push
addb
orb
adc
and
push
add
sbb
mov
inc
adcb
test
mov
mov
add
loopne
inc
movsl
and
cmp
or
add
andb
add
add
and
rol
cltd
cmp
sbb
or
adc
pusha
add
mov
add
add
and
test
or
adc
add
adcl
and
add
adc
pop
andb
adc
and
and
inc
inc
mov
jno
or
add
sub
addl
pusha
add
add
push
or
inc
pop
cmp
inc
add
and
or
or
and
and
and
and
push
inc
or
add
push
add
add
mov
push
or
sbbb
push
push
or
test
add
add
inc
push
add
xchg
and
push
jb
add
loope
orb
add
inc
add
sbb
and
add
inc
add
add
andb
loope
loop
sub
xor
add
addb
or
pop
add
add
add
add
inc
jl
pusha
daa
sub
dec
xchg
push
inc
mov
and
rcll
add
adc
addb
or
inc
push
orb
inc
cmpsb
pop
add
xorb
subl
dec
add
pop
sub
add
add
add
add
add
inc
nop
or
or
xor
inc
sub
add
inc
mov
dec
add
inc
adc
adc
add
inc
add
rolb
adc
inc
add
add
dec
or
addb
leave
or
or
sub
jo
push
xor
push
adc
add
movb
add
inc
orl
arpl
add
add
adc
add
add
and
sub
dec
dec
rorl
or
rolb
add
adc
add
and
or
sbb
andb
sbbb
inc
pop
enter
addl
pusha
xchg
add
add
adc
pop
add
mov
mov
add
inc
inc
mov
scas
adcl
mov
or
call
orb
dec
sub
mov
adc
adc
mov
add
rcrb
adc
addb
adc
push
or
add
add
adc
adc
add
pop
add
bound
xchg
adc
add
int
mov
add
inc
add
push
mov
ret
add
add
sub
add
xor
and
adc
shlb
add
xorl
add
add
addl
add
add
sbb
dec
or
subb
and
adc
add
and
dec
add
or
ret
mov
pusha
dec
xor
dec
nop
xchg
inc
adcb
pusha
test
add
nop
dec
add
dec
mov
inc
xchg
push
sub
rolb
addb
addb
or
mov
adc
xchg
or
add
sub
or
adc
adc
inc
add
dec
addl
add
inc
inc
inc
jecxz
add
add
or
add
sbb
inc
lcall
adc
and
addb
xor
les
dec
mov
mov
xor
add
or
add
in
and
add
add
add
adc
rolb
lock
hlt
jo
addl
or
push
mov
add
adc
inc
nop
dec
and
test
mov
inc
xchg
add
popa
add
dec
add
add
mov
cmp
add
add
adc
inc
insb
add
and
or
add
push
add
repnz
inc
les
or
sbbb
or
cmp
add
adc
shlb
push
add
adc
dec
adcl
cmp
adc
cmp
dec
inc
scas
subb
add
dec
inc
or
adc
add
adc
inc
add
or
or
adcl
adc
ret
or
add
sbb
les
adc
mov
and
add
inc
inc
or
add
dec
add
push
sub
push
mov
and
sub
sub
mov
add
loope
js
and
adc
and
les
add
mov
adc
adc
jo
push
adc
or
or
and
test
add
add
sub
xor
shlb
and
xor
sub
inc
push
unpcklps
and
xchg
add
nop
ret
add
adc
addb
inc
adc
and
lock
addl
adcb
xor
add
inc
add
sub
or
add
xor
jno
cmc
add
sbb
mov
pusha
cmpsl
and
inc
add
or
xor
inc
add
mov
add
adc
or
into
xor
andb
in
test
pop
add
mov
and
sub
add
and
xor
inc
das
add
or
add
add
mov
push
inc
jne
inc
pusha
nop
add
or
add
test
loopne
cmp
nop
add
dec
rclb
adc
adc
andl
inc
or
add
lods
add
add
or
adc
addb
jo
dec
sbb
add
add
adc
or
add
add
and
mov
inc
inc
inc
rclb
add
add
add
add
and
and
adc
cmp
lds
add
add
addl
or
addb
sbb
add
add
test
test
and
jb
push
sub
or
add
add
add
addl
dec
bound
mov
adc
push
or
test
addb
mov
sub
or
and
xchg
subl
adc
add
add
add
add
and
sub
mov
add
test
sub
add
inc
dec
test
or
add
push
test
pop
sbb
add
or
add
or
add
adc
push
and
inc
push
adc
addb
or
or
adc
nop
xchg
or
xor
lcall
and
and
adc
and
arpl
je
add
adc
add
ret
adc
add
addb
addb
push
add
or
sub
push
add
and
add
add
mov
addb
inc
and
add
andb
and
add
inc
and
add
addb
sbb
jo
jo
add
inc
or
inc
add
sub
lcall
mov
and
enter
and
adc
add
and
or
test
dec
add
add
or
andb
add
inc
add
sbb
add
or
xchg
or
adc
mov
add
adc
add
push
adc
sbb
push
adc
insb
add
verr
adc
test
adc
jo
dec
adcb
in
dec
add
add
or
and
add
or
dec
inc
cmpsb
add
add
and
add
mov
add
or
add
test
mov
or
add
addl
adc
add
and
and
mov
add
push
addb
and
xor
add
and
xor
or
inc
add
add
in
rolb
adc
jb
inc
mov
add
and
add
xchg
inc
xchg
or
dec
xchg
add
pusha
pop
jb
or
inc
mov
test
inc
movsl
ret
sbb
inc
and
adc
inc
xor
rorl
push
adc
orb
add
add
ret
orl
rorb
xor
inc
adcb
inc
mov
add
add
inc
or
and
and
mov
push
add
inc
inc
insb
and
or
add
and
add
xchg
add
subb
imul
sub
test
lods
add
adc
test
adc
adc
add
add
test
push
xchg
adc
add
mov
and
or
xor
inc
andb
push
add
shll
add
add
add
rolb
adc
add
and
pusha
sub
or
or
or
xor
add
add
adc
rclb
add
add
add
pusha
addb
inc
sbb
push
sub
rolb
add
pusha
mov
add
add
add
adc
xor
sbbb
mov
push
add
mov
push
xchg
xchg
adc
inc
add
ret
mov
addl
inc
subb
cmp
shlb
or
or
add
mov
add
nop
and
add
les
dec
add
add
add
test
add
xor
or
and
or
xor
mov
mov
add
adc
adc
push
sub
nop
push
or
dec
add
aam
and
addl
popf
or
add
adc
test
sub
add
ret
add
shrb
adc
and
sub
inc
add
pop
inc
add
fwait
push
add
push
dec
inc
inc
add
mov
sub
orl
push
orb
add
push
test
adc
and
add
sub
cmp
or
and
jo
leave
rcrb
orb
out
adc
dec
cmp
and
push
gs
inc
or
adc
sbb
dec
or
add
andl
add
add
add
inc
adc
add
add
roll
add
and
les
add
sub
push
movb
or
inc
add
add
addl
add
add
test
inc
add
addb
add
addb
or
pusha
and
cwtl
adcb
push
mov
add
inc
add
push
or
push
leave
add
popa
xor
add
push
movsb
xchg
push
add
or
adc
add
or
les
rcl
lret
pop
inc
sub
push
dec
add
add
dec
pusha
mov
dec
or
add
movl
inc
mov
add
mov
test
or
add
add
adc
and
mov
add
or
mov
enter
inc
sub
adc
adc
add
add
add
and
add
addb
xchg
inc
adc
inc
fs
shll
add
add
test
orl
adc
inc
sbb
mov
mov
or
addb
add
or
and
mov
adc
mov
rolb
enter
add
add
jo
adc
add
mov
ror
les
add
add
inc
popl
add
xor
adc
nop
test
add
mov
add
inc
inc
xor
and
add
inc
sbb
xorb
mov
add
lds
push
sub
or
addb
push
add
sub
or
loop
sub
mov
mov
add
inc
mov
adc
adc
xor
add
add
orb
inc
and
fisttps
inc
and
sub
push
and
sub
and
add
add
sub
add
adc
movsb
movb
add
and
push
push
sbb
bound
inc
xor
or
add
xchg
test
add
sbb
add
and
shrb
add
inc
adc
sub
and
inc
cwtl
and
adc
mov
add
ret
and
or
add
xchg
inc
add
add
add
add
push
adc
add
inc
add
mov
add
pop
adc
addb
or
add
adc
sbb
lcall
or
inc
add
addb
add
inc
mov
add
sub
and
and
and
mov
sub
adcl
mov
andb
add
add
add
push
xor
adc
push
adc
add
and
add
add
inc
inc
and
adc
inc
add
adc
xchg
adc
xchg
adcl
mov
test
inc
add
rcrb
add
sbbl
ret
dec
mov
test
rolb
popf
add
dec
adc
test
mov
lock
imul
add
orl
or
sbb
xchg
loop
add
add
in
pop
add
sub
push
or
add
adc
test
inc
pusha
add
rolb
cmpb
or
addb
add
pusha
sub
push
adcl
inc
cmp
add
cmp
add
add
sub
ss
or
add
addl
adc
add
inc
xchg
push
xchg
inc
and
or
and
add
push
adc
add
sub
add
repnz
and
or
add
add
dec
or
pop
or
add
sarl
add
add
xchg
or
add
add
add
push
add
add
sbb
bound
add
adc
xor
popa
inc
arpl
andl
push
add
add
mov
mov
push
mov
add
add
arpl
mov
or
add
mov
push
pusha
add
rolb
inc
push
or
add
inc
out
mov
les
rolb
adc
sub
test
and
add
addl
mov
in
add
and
add
add
inc
push
or
sbb
popa
or
roll
and
adc
dec
inc
add
or
add
lock
and
sbb
or
mov
or
hlt
inc
rorl
xor
add
dec
pop
or
add
adc
inc
add
and
sub
add
add
mov
or
mov
andl
mov
add
xchg
inc
adc
addb
xchg
add
leave
adc
test
sub
jo
add
mov
sbb
add
or
add
and
add
or
add
dec
mov
dec
mov
nop
adc
fiaddl
add
sbb
inc
add
add
jmp
xorl
add
addb
and
or
adc
add
add
and
add
inc
add
push
cmp
or
xor
mov
inc
sub
push
or
mov
or
push
sub
addb
adc
rolb
xor
add
add
adc
rorb
arpl
shlb
pusha
inc
inc
sub
pop
inc
add
xchg
add
or
sub
lods
dec
mov
or
add
inc
mov
and
mov
and
add
adc
dec
add
and
test
or
or
and
add
inc
andb
and
sbb
inc
inc
push
pop
add
xor
addb
inc
or
lds
or
gs
and
and
cmp
call
add
add
or
or
xchg
mov
add
and
addb
jo
xorb
cwtl
add
mov
dec
sbb
xor
and
add
add
push
xor
inc
pusha
xor
mov
dec
add
and
add
dec
mov
adc
mov
and
sub
add
inc
jno
or
xchg
xor
adc
add
pop
daa
and
xor
sbb
jno
add
mov
and
stos
inc
pop
and
add
adc
inc
add
add
sub
inc
pusha
or
or
adc
dec
xchg
xchg
movsb
add
loope
inc
push
push
rclb
add
adc
dec
push
push
add
jo
dec
ret
add
les
xorl
adc
add
add
movsb
or
daa
add
or
push
sbb
add
or
add
bound
mov
and
cwtl
add
sub
add
or
and
mov
sbb
xchg
xor
and
shlb
add
adc
sub
jo
dec
add
jo
add
mov
movsb
add
add
push
mov
push
add
inc
or
lret
push
adc
test
add
loop
or
adc
sub
adcb
add
push
add
adc
mov
adc
mov
mov
inc
addb
loop
add
inc
or
add
push
adc
rorb
jecxz
add
add
add
or
add
xor
adc
add
inc
adc
mov
add
test
push
add
or
mov
add
adc
add
adc
pusha
inc
or
and
add
add
sbb
sbb
add
and
dec
adc
test
inc
add
push
add
or
inc
adc
in
or
xor
sbb
add
push
xor
loop
add
adc
and
push
add
inc
add
inc
or
add
inc
or
add
adc
inc
or
adc
add
adcb
dec
add
test
add
inc
add
inc
cltd
sbb
or
or
inc
add
scas
inc
or
push
sub
add
or
push
mov
or
add
push
add
ret
inc
sub
push
addb
or
adcb
add
add
or
inc
xchg
and
pusha
pusha
adc
add
wrmsr
add
add
and
inc
or
test
add
inc
and
pusha
add
add
inc
or
add
inc
addb
add
add
imul
mov
addb
dec
add
add
add
int3
or
or
inc
xchg
adc
xchg
add
adc
and
loopne
clc
dec
inc
adc
xor
cmp
and
icebp
cltd
inc
add
push
add
and
inc
add
or
adcb
add
orb
ret
ljmp
push
addl
inc
mov
lcall
add
inc
add
mov
adc
or
nop
push
add
or
adc
addl
adcb
adc
add
inc
inc
add
rolb
or
xchg
cwtl
add
add
dec
mov
loopne
or
xchg
add
add
add
and
sbb
addl
add
bound
addl
add
adc
nop
or
adc
inc
add
adc
adc
addb
add
inc
mov
or
inc
add
test
add
and
add
push
inc
and
and
inc
adc
add
mov
inc
xchg
adc
adc
in
add
and
adc
cmp
add
or
or
inc
push
mov
xchg
inc
add
popa
add
cmp
add
or
add
mov
rorb
test
add
add
or
add
adc
and
test
xchg
cmpsb
bound
add
or
or
movsb
and
add
or
adc
pusha
mov
and
inc
add
xor
and
mov
sbb
xor
add
adc
add
pusha
and
cmp
sbb
dec
or
or
inc
pop
add
or
adc
add
mov
add
inc
adc
add
or
and
and
mov
or
insb
add
add
inc
and
add
sbb
pusha
mov
addb
or
adc
andb
aam
test
pusha
inc
and
and
or
add
mov
add
pop
cmp
sub
and
xor
push
ror
verr
jmp
inc
subl
andl
addb
add
adc
inc
add
addb
add
add
dec
mov
inc
add
add
movsb
inc
test
add
addl
inc
add
or
inc
inc
add
push
add
or
add
add
mov
or
sub
push
add
inc
add
sahf
sbb
push
dec
mov
add
and
mov
xor
push
adc
push
addb
add
add
adc
xorb
dec
add
inc
mov
dec
add
scas
add
inc
add
and
or
add
addb
add
fs
rolb
sbb
orl
push
push
add
xor
adcb
adc
adc
and
adc
xor
add
inc
inc
adc
push
fs
add
and
add
sub
movb
mov
mov
inc
inc
add
inc
add
add
addb
xchg
inc
ret
or
or
sbb
push
or
adc
add
adc
add
dec
adc
and
addb
cwtl
cmp
add
inc
pusha
dec
add
add
dec
push
or
xor
add
add
push
cmp
andb
or
xor
mov
add
add
add
add
and
add
adc
addb
dec
add
add
rorb
adc
adc
add
add
mov
mov
add
sub
xchg
add
test
xor
and
xor
inc
sbb
and
rol
or
adc
add
xchg
adcb
push
mov
orb
and
ret
rclb
add
add
push
test
add
or
mov
adc
adc
aad
pop
movsb
and
sub
sub
add
add
xor
addb
add
ret
inc
ret
add
add
or
inc
fwait
add
sub
add
call
inc
mov
add
lcall
xchg
push
inc
dec
loopne
add
adc
push
roll
inc
punpckhwd
push
add
cwtl
adc
les
or
add
adcl
data16
push
adc
sub
sub
cltd
add
add
nop
addb
and
nop
and
loope
pop
dec
adc
sbb
push
add
adcb
add
add
add
ret
add
adc
dec
add
or
adcl
and
orb
add
addb
or
dec
xor
push
fdivl
or
adc
mov
sub
adc
or
clts
addb
mov
mov
sub
add
inc
cmp
adc
add
inc
rolb
add
inc
inc
adc
inc
or
add
xchg
add
push
test
subb
andb
xor
pop
add
add
add
add
add
push
sbb
or
adc
and
inc
add
shlb
imul
add
inc
sbb
adc
and
mov
arpl
addb
inc
addl
mov
mov
mov
or
cwtl
jp
sub
pop
test
add
add
and
add
add
xchg
push
sub
cmp
or
xchg
daa
and
inc
or
add
test
adc
mov
inc
mov
add
xor
nop
inc
add
add
sbbl
test
mov
adc
enter
lds
andb
and
pusha
inc
and
add
add
test
pusha
xor
js
adc
je
add
xor
xchg
popa
or
and
cmp
jno
pusha
adc
mov
inc
inc
or
adc
add
enter
xor
and
add
inc
and
pop
addb
andl
inc
addb
adc
mov
adc
or
add
mov
pusha
add
add
adc
inc
adc
add
add
add
and
add
or
add
and
adc
rcll
inc
bound
and
xor
and
add
xor
or
mov
add
add
inc
orb
add
add
or
dec
mov
adc
movnti
inc
add
add
add
and
add
addl
pusha
add
and
and
addb
add
adc
inc
subb
addl
mov
and
push
add
rolb
pusha
mov
sbb
mov
sbb
or
add
inc
add
les
inc
sbb
adc
add
rolb
and
inc
and
adc
add
dec
cmpsb
and
add
rolb
enter
xor
inc
add
rclb
sbbb
sbb
add
push
adc
mov
add
mov
dec
and
or
pop
or
fwait
add
add
add
dec
addb
add
inc
xorb
add
adcb
and
add
add
adcb
inc
addb
insl
adc
sub
movsl
data16
jl
mov
and
add
jbe
xor
mov
adc
inc
or
push
inc
add
push
add
dec
add
adc
adcb
add
shrb
add
addl
push
add
add
addb
add
push
xor
cmp
xor
push
or
add
and
jns
in
and
add
add
and
in
inc
adc
xchg
push
pusha
xor
mov
inc
add
push
test
xchg
or
sub
or
mov
push
mov
add
addb
sbb
add
loopne
adc
xor
add
add
push
push
add
add
sub
andb
add
or
add
or
les
lret
inc
xchg
and
add
adc
mov
mov
add
add
and
xchg
and
and
rorb
outsb
inc
or
les
data16
addl
addb
adc
leave
inc
adcl
or
adc
nop
add
add
roll
inc
mov
add
add
movsb
sub
push
push
mov
xor
and
adc
xor
add
pusha
add
and
add
push
mov
add
cmp
sbb
push
or
add
inc
or
add
adcb
ss
dec
add
add
add
dec
and
dec
andl
leave
mov
adc
sub
test
add
pop
mov
and
loopne
and
inc
push
add
orl
inc
or
loopne
add
movsb
push
jne
or
or
subb
mov
inc
inc
and
ret
adc
add
add
or
add
push
or
adc
enter
adc
add
mov
adc
inc
or
pop
push
or
add
adc
xchg
subl
add
fistpl
add
inc
and
inc
add
jo
andb
addl
push
inc
mov
sub
add
add
mov
push
add
mov
add
pop
fiadds
add
mov
xchg
add
add
pop
loopne
rolb
mov
inc
mov
inc
insl
addl
add
adc
add
add
enter
mov
inc
test
add
fs
add
inc
andb
adc
mov
add
inc
inc
add
lea
subb
addl
or
daa
inc
add
add
and
mov
adc
or
add
xchg
and
inc
mov
add
inc
je
adc
cwtl
inc
or
test
add
xorb
add
sahf
add
movsb
lret
sbb
adc
xchg
test
adc
or
cmp
pop
push
sub
dec
push
sub
addb
add
ret
inc
dec
or
sbb
lock
aam
add
add
add
inc
mov
and
addl
and
add
inc
and
jo
add
push
add
pop
dec
rolb
add
and
or
pusha
add
push
adcb
push
dec
roll
add
sub
call
mov
movsb
add
lods
adc
mov
sbb
call
add
sbb
rolb
jno
adc
or
mov
and
add
and
push
sbb
pusha
xchg
iret
or
add
add
subl
and
sub
mov
addb
push
mov
or
add
and
add
nop
or
or
add
inc
add
mov
sub
inc
and
or
inc
xchg
adc
add
lea
addb
roll
mov
add
stos
add
movsb
mov
sbbb
dec
and
push
or
addl
xor
inc
add
sub
pusha
orb
rolb
xchg
adc
add
dec
inc
mov
add
add
or
fcoms
or
sub
shlb
add
adc
pusha
add
sbb
adc
and
fs
dec
add
and
inc
bound
push
add
addb
inc
add
mov
add
rol
inc
je
push
push
add
and
movsb
adc
add
xor
and
and
add
cmp
add
and
pop
fwait
add
lods
pusha
xchg
inc
in
addl
add
nop
orb
addl
test
sub
inc
addb
cltd
ret
inc
add
adc
add
inc
orb
add
inc
add
lret
and
inc
cmpsb
and
shrl
mov
jl
ret
add
add
inc
add
clts
and
or
adc
dec
add
roll
add
add
lds
add
or
add
or
add
add
inc
mov
inc
or
pop
inc
sbb
adc
xorb
and
add
or
add
push
adc
add
adcb
test
add
addb
in
adc
adc
loop
mov
pusha
out
or
stos
add
add
nop
mov
add
or
push
orb
and
add
mov
add
or
daa
inc
push
add
repnz
add
mov
shlb
or
add
cmp
add
add
add
push
insb
sbb
adc
or
push
and
and
add
and
rorb
sub
into
and
inc
add
sub
add
add
dec
ret
add
adc
or
push
inc
add
mov
cmp
add
and
add
or
mov
or
inc
add
inc
and
or
cmp
add
rcrl
mov
adc
dec
mov
test
add
cmpsb
add
add
inc
add
add
addb
adc
push
adc
cmp
lods
xor
add
mov
and
add
sbb
or
cli
add
add
add
adc
adc
push
adc
inc
adc
adc
mov
and
popf
push
add
push
shlb
xor
addb
test
bound
enter
add
sub
or
in
sub
and
adc
add
push
rclb
xor
adc
add
nop
inc
add
add
push
inc
add
and
adc
xchg
adc
andb
insb
pop
push
add
add
adc
sub
and
add
sbb
mov
add
stos
dec
sub
or
add
sub
and
add
test
adc
ret
sbb
xor
sbb
rcll
inc
mov
add
js
and
sbb
add
sub
jmp
andb
add
addb
push
inc
add
addl
push
and
jno
sub
and
addb
or
test
adc
xchg
add
or
adc
cmp
pop
nop
add
addb
addb
test
inc
mov
and
adc
es
add
pop
sub
add
or
and
and
xor
jno
jl
add
push
or
push
add
or
add
test
arpl
dec
push
add
orl
xchg
adc
cs
addb
or
add
add
enter
or
push
add
and
pop
addb
or
or
addb
or
inc
inc
xor
adc
or
nop
add
arpl
mov
or
lcall
push
and
add
addl
add
lcall
or
add
inc
or
mov
popa
add
sub
push
mov
add
or
and
add
andb
add
add
test
xor
add
or
addl
addb
addb
push
adc
inc
mov
add
inc
add
or
nop
dec
inc
test
sub
and
inc
test
add
add
add
and
adc
daa
adcl
add
xor
lcall
add
and
adc
adc
mov
loopne
inc
add
add
add
lods
and
test
or
mov
pop
mov
fs
sub
mov
mov
adc
push
mov
cmp
test
add
inc
and
or
add
push
add
or
or
or
adc
inc
add
inc
adc
and
inc
mov
sbb
and
and
add
add
roll
push
add
adc
add
add
adc
subb
add
sbbl
inc
and
sub
add
les
js
sbb
inc
mov
or
adc
add
inc
adc
or
or
inc
mov
push
inc
sub
mov
push
add
adc
add
shll
and
adc
cmp
xor
add
inc
inc
and
add
jns
lcall
push
add
and
inc
add
add
adc
or
inc
add
cmp
or
adc
or
lcall
add
inc
sbb
sbb
add
xor
or
sbb
imul
add
or
push
les
or
add
and
pop
dec
inc
dec
add
adc
or
mov
add
inc
gs
cmp
stos
inc
xor
or
add
inc
les
shlb
mov
stos
mov
add
inc
adc
inc
add
adc
addb
nop
fs
cmp
shlb
test
call
dec
add
pop
jo
inc
or
or
add
sub
and
and
add
adc
pusha
mov
xor
les
dec
or
add
adc
cmpsb
daa
add
sub
xor
mov
add
and
or
sub
pusha
add
sbb
or
adc
inc
inc
and
or
mov
mov
orl
cmp
inc
or
push
push
mov
add
es
xchg
mov
or
pusha
subl
bound
and
add
add
enter
addb
add
xor
mov
inc
add
xchg
add
add
or
push
adc
adc
inc
push
rolb
dec
or
test
ret
dec
orl
add
or
add
orb
or
add
add
inc
pop
stos
add
add
test
and
test
add
sbb
es
dec
add
es
add
outsb
clc
xchg
and
mov
adc
or
addb
and
add
or
or
inc
or
mov
push
or
xor
fs
sbb
inc
xor
sub
insb
mov
test
lods
fwait
and
adcb
rolb
add
hlt
inc
push
add
sub
add
or
and
or
adc
push
add
add
adc
add
add
dec
sub
and
sbb
add
adc
outsl
adcb
add
pop
inc
add
add
je
add
or
add
dec
mov
add
adc
rclb
sbb
add
dec
movb
add
or
mov
add
mov
xor
adc
add
es
cwtl
and
ds
or
add
add
add
orb
sub
add
and
add
adc
mov
add
orb
adc
push
addb
add
push
inc
or
inc
add
nop
add
sbb
add
push
add
or
or
xor
adc
inc
out
add
adc
inc
push
xor
add
add
and
push
xor
test
bound
adcl
sub
lods
orl
add
inc
inc
adc
pop
adc
add
xchg
push
add
inc
add
pusha
adc
adc
push
push
lods
add
or
inc
inc
adc
or
add
or
inc
pusha
add
push
sub
xor
add
mov
inc
add
add
sub
pusha
inc
andb
subl
shlb
bound
inc
inc
inc
xor
addl
add
fs
js
pusha
and
add
adc
or
lock
inc
jb
in
pop
and
add
add
mov
inc
mov
adc
add
cwtl
inc
adc
andb
add
cmp
add
or
mov
xor
addl
add
add
add
mov
add
sbb
orb
add
cmpb
add
push
add
or
push
mov
add
add
orl
or
orb
andb
inc
add
adc
test
and
mov
pusha
add
add
add
inc
mov
add
add
pop
adc
or
addb
add
loopne
cmp
jae
push
inc
addb
addl
push
adc
and
adcb
or
pusha
inc
push
adc
adc
addb
adc
push
inc
or
add
cmpsb
rolb
inc
add
dec
sub
add
nop
and
and
add
mov
or
add
sub
or
test
or
add
push
adc
inc
nop
push
xor
xor
test
stos
and
adc
inc
pusha
xor
pusha
or
dec
push
add
add
push
adc
add
in
adc
ret
add
xor
or
mov
push
dec
and
mov
inc
add
add
and
ja
inc
mov
add
or
dec
inc
add
or
pusha
addb
or
jo
sub
add
adc
add
nop
and
and
pusha
lret
pop
and
dec
movsb
adc
and
xor
inc
test
fiaddl
test
push
insb
mov
or
and
test
test
adc
and
pop
push
mov
jno
inc
pop
add
add
mov
and
sbb
rolb
data16
or
inc
movsb
pop
and
add
xor
add
cmp
pop
pop
xor
or
push
add
and
lock
add
add
mov
add
adc
inc
rcll
dec
adc
inc
sub
add
and
dec
mov
adc
add
adc
pusha
dec
loopne
fs
inc
add
sub
int3
add
xchg
add
mov
or
fwait
add
xchg
nop
add
add
add
sbb
pop
xor
add
sub
add
and
add
addl
or
add
and
inc
add
mov
add
mov
rorb
lret
xchg
add
and
add
or
dec
add
xor
add
and
aaa
pusha
or
and
inc
mov
push
inc
sub
add
inc
add
orb
push
add
add
cmp
push
push
cwtl
pusha
subb
adc
adc
mov
add
and
test
inc
orb
or
inc
inc
xor
add
add
push
mov
jns
and
inc
adc
sbb
clc
inc
add
push
addb
dec
add
inc
orb
and
sub
data16
addb
add
loop
inc
int3
push
and
add
mov
sub
adc
dec
test
sbb
movsb
add
mov
movsl
add
inc
push
sub
rolb
xchg
addb
and
inc
sbb
rolb
inc
inc
mov
adc
ret
add
add
add
and
iret
rorb
or
add
add
lea
cld
and
ret
or
nop
adc
push
or
inc
adcl
add
dec
inc
adc
nop
inc
shrb
and
sbb
inc
bound
add
lcall
cmp
inc
leave
or
inc
mov
sbb
adc
add
movsb
add
adc
mov
jge
test
mov
les
adc
addb
push
inc
orb
adc
xorb
add
add
mov
add
sub
adc
mov
or
and
js
add
loope
add
subb
orb
adc
adc
add
add
or
sub
xchg
and
and
add
or
adc
add
add
inc
add
adcb
push
add
add
inc
xor
mov
add
addb
add
or
sub
adc
sub
and
inc
sub
and
add
enter
and
xchg
jo
inc
andb
sbb
addb
adc
sbb
adc
movsb
add
insb
pusha
inc
mov
adc
and
or
add
or
cltd
adc
push
add
or
pop
add
or
adc
or
addl
and
inc
push
addl
dec
push
sbb
adcb
and
add
ret
adc
orb
add
or
inc
sub
addb
add
xor
and
addb
add
add
add
add
pop
add
inc
add
and
and
or
cltd
add
push
push
inc
push
add
add
inc
mov
mov
xor
add
inc
dec
sub
mov
or
add
cmp
sub
mov
xor
andb
push
add
dec
adcb
add
or
push
inc
cmp
add
add
andb
push
push
inc
and
inc
mov
inc
add
adc
add
add
pop
push
sbb
and
xor
mov
add
shlb
add
sbb
lods
inc
les
add
add
jg
sub
dec
sub
sbbb
add
push
subl
nop
xchg
adc
add
adc
mov
add
or
adc
pop
push
popa
or
mov
add
and
inc
inc
dec
inc
xor
cmp
add
test
jb
sbb
dec
adc
cwtl
inc
add
pop
clc
and
sub
movsl
add
and
cwtl
mov
inc
adc
test
inc
nop
xchg
pop
and
inc
subb
add
popf
adc
pop
inc
xor
adc
mov
mov
sbb
mov
or
inc
mov
nop
add
add
sub
adc
mov
mov
add
push
pusha
imul
pop
or
push
add
inc
mov
mov
adc
mov
add
push
andb
pop
sub
inc
adc
add
xorb
mov
daa
push
and
add
movsl
or
xchg
add
inc
adc
movsb
adc
add
roll
push
add
lock
and
inc
pusha
add
adc
adc
or
xor
push
inc
or
add
addb
and
adc
rolb
and
insb
subb
mov
mov
and
out
or
sbb
adcl
and
test
and
add
add
or
rolb
es
sbb
push
add
or
ret
or
sub
and
adc
add
adc
adc
and
or
jo
lret
mov
sbb
or
nop
adc
push
or
inc
sub
mov
rolb
shlb
and
test
in
or
addb
pop
add
and
rcrb
adc
sbb
and
pop
dec
adc
addb
jae
adc
sbb
cmpb
push
nop
jns
mov
push
and
cmpsb
insb
and
add
add
add
add
dec
pop
pusha
sub
xchg
and
xor
and
add
push
mov
enter
xchg
add
fs
pop
push
pop
add
pop
and
add
adc
orb
adc
push
ret
and
ljmp
nop
add
add
adc
dec
add
and
push
sub
add
add
xor
add
or
mov
test
inc
add
mov
add
add
and
adc
sub
push
and
adc
inc
dec
add
xor
or
add
ss
add
cltd
inc
push
adc
add
adc
addb
adc
add
add
cmpsb
adc
add
sub
stos
jb
dec
pusha
add
add
sbb
push
dec
and
adc
addb
dec
add
subl
mov
add
dec
add
pop
sbb
add
inc
or
xor
add
pop
jo
cmpsb
pop
dec
add
add
add
addl
orb
xchg
add
add
add
push
dec
and
shlb
or
or
adc
or
cwtl
nop
add
inc
jo
insb
adc
nop
xor
or
push
in
push
add
test
xor
inc
xor
dec
push
and
and
add
or
add
subb
xor
push
mov
add
dec
nop
int3
mov
sbb
test
pop
mov
push
add
adc
inc
add
inc
add
mov
addl
add
add
aam
adc
adc
les
adc
add
and
push
push
add
add
arpl
andb
add
nop
and
add
cmpb
add
orl
adc
or
inc
add
add
push
and
or
add
add
add
add
adc
sub
add
subb
xchg
add
and
xchg
rolb
inc
sbb
xchg
rorb
inc
lar
push
inc
enter
adc
mov
or
add
push
andl
or
or
inc
andb
adc
push
roll
or
in
sbb
xor
and
bound
adc
addb
and
adc
outsl
ret
inc
andb
fsubs
xor
inc
lret
push
inc
add
dec
adcb
bound
add
push
or
and
and
and
ljmp
add
adc
mov
add
jns
inc
or
sbb
add
ret
inc
inc
adc
test
imul
and
add
inc
fmuls
inc
add
adc
pop
add
adc
push
or
nop
sub
inc
aam
add
addb
or
or
sub
push
sbb
inc
and
add
xchg
js
test
add
add
les
adc
add
ret
inc
sub
add
add
adc
ret
push
test
adc
push
add
or
xchg
adc
add
add
jb
shl
inc
add
and
xor
or
orb
add
push
cmpsb
or
and
sub
add
adc
xchg
sub
inc
or
and
inc
add
movsb
add
add
aad
and
push
xor
addb
push
and
inc
sbb
sub
mov
and
ret
add
lods
test
or
movsb
inc
add
add
pusha
sub
mov
lods
mov
add
adcb
mov
adcb
nop
adc
mov
adc
add
and
mov
sub
adc
addl
add
in
test
dec
movsl
inc
inc
xchg
adc
add
or
rclb
rclb
test
rolb
or
pusha
sub
ret
ret
and
add
pusha
or
or
sbb
or
push
int3
push
xor
inc
dec
inc
inc
test
sbb
or
loopne
sbb
sbb
out
add
sldt
add
jo
inc
inc
add
sbb
and
adc
add
rolb
test
mov
rolb
sbb
sub
pusha
push
or
adc
mov
or
addb
les
add
popa
andb
add
jb
xor
test
or
mov
xor
inc
ds
inc
and
add
adc
adc
outsb
add
and
and
inc
add
mov
add
inc
or
sbb
rolb
add
sbbb
mov
or
test
and
add
or
inc
and
and
add
inc
inc
add
push
adc
pusha
adc
and
aaa
add
adc
inc
addb
push
add
roll
add
adc
and
xchg
add
add
add
and
test
bound
add
inc
inc
nop
test
orb
mov
inc
push
adcl
dec
cs
and
and
addb
test
orb
adc
addb
or
sbb
or
inc
mov
sbb
add
sbb
aam
add
enter
mov
sub
push
add
and
xor
or
mov
add
loopne
sbb
inc
adc
push
inc
or
adc
add
nop
add
push
add
movsb
das
and
adcb
dec
add
add
or
inc
sub
test
or
add
add
push
add
addb
mov
add
add
and
mov
push
inc
jo
dec
add
add
add
add
ret
and
data16
rolb
dec
push
dec
inc
sbb
sub
mov
rcll
adcb
push
and
add
and
add
mov
inc
inc
xchg
inc
add
and
xor
mov
or
insb
push
sbb
adc
add
xchg
adc
or
loope
pop
test
or
or
pop
push
add
add
inc
add
or
push
add
data16
inc
arpl
and
nop
inc
subb
mov
add
or
add
inc
mov
sbb
add
nop
inc
or
mov
test
add
and
push
inc
pop
rorb
push
inc
mov
pop
push
add
inc
add
add
add
and
or
add
jb
add
addl
inc
add
rcll
adc
jns
adcl
or
or
pusha
shrb
and
add
and
adc
adc
add
add
pusha
or
and
sbb
and
adc
addb
and
addl
ret
or
add
movsb
cmp
add
mov
and
pop
add
xorb
add
or
add
test
or
add
or
loopne
push
add
xchg
popa
test
adcb
lcall
add
sub
or
shlb
adc
pop
and
adc
add
add
inc
test
pusha
cmc
addb
push
inc
in
inc
push
movb
or
add
and
dec
sub
add
adc
mov
add
or
and
sbb
andl
add
fs
adc
add
or
and
inc
sbb
adc
inc
push
mov
adc
add
adc
or
add
aaa
add
nop
or
test
pop
add
adc
rolb
rolb
add
add
fwait
cmpsb
mov
add
scas
and
push
push
add
adc
int3
sub
xchg
mov
or
pusha
add
es
add
cwtl
arpl
xchg
xor
sub
or
nop
es
call
add
add
and
and
jmp
inc
or
ret
adc
rclb
xchg
or
xchg
xor
adc
in
add
mov
add
adc
bound
daa
adc
cwtl
dec
inc
nop
movsb
add
inc
add
dec
mov
push
pop
add
push
adc
addl
or
or
bound
xchg
sbb
inc
dec
inc
and
adc
add
pusha
daa
mov
lret
adc
and
inc
add
shll
push
add
mov
xor
adc
add
andl
lret
or
addl
mov
dec
and
xchg
addl
add
movsb
adc
add
inc
or
out
mov
and
push
rolb
adc
and
pusha
sub
or
adc
and
add
inc
add
or
add
jp
pusha
push
add
or
add
andb
sbb
add
add
sbb
add
sbb
push
nop
add
and
push
inc
add
add
cltd
add
and
inc
movsb
mov
movsb
add
orb
dec
push
jo
andb
add
enter
inc
and
inc
inc
inc
add
add
test
push
pop
inc
sub
add
nop
test
and
rolb
nop
push
mov
adc
addb
andb
add
adc
and
xchg
rolb
test
mov
pop
and
add
or
addl
sbb
sbb
inc
add
mov
cmpsl
and
push
add
add
add
add
push
add
addb
and
add
fadds
adc
shlb
and
add
dec
pop
inc
add
add
and
add
add
jl
dec
push
adc
add
add
sbb
cmp
inc
mov
xor
imul
adc
xchg
push
pusha
pop
push
inc
dec
and
xor
add
add
dec
push
xchg
inc
addb
inc
add
loope
push
mov
inc
addb
mov
add
add
andb
push
add
add
add
inc
add
adc
jo
addb
sub
xchg
add
adcl
xchg
add
roll
adcb
adc
add
adc
addl
add
add
add
and
and
add
mov
add
add
add
add
add
or
rolb
add
add
add
inc
push
add
add
inc
lods
add
add
addb
sbb
icebp
and
rolb
dec
add
add
add
inc
add
addl
add
inc
mov
mov
addb
sub
add
add
add
addb
out
inc
add
xchg
popf
add
pusha
inc
add
add
add
test
adc
and
fs
add
adc
add
and
inc
add
xor
inc
enter
add
adc
push
and
insb
rclb
inc
inc
add
scas
xor
add
or
add
adc
insb
cmp
add
add
adc
dec
add
add
mov
and
push
add
add
and
add
push
pop
add
pusha
addb
mov
mov
dec
push
inc
add
add
sbb
or
add
dec
adc
adc
add
mov
add
inc
or
and
add
xchg
add
test
mov
or
rolb
push
or
and
add
add
and
add
add
add
xorl
inc
add
addb
test
addl
addb
inc
andl
inc
data16
or
add
and
inc
dec
xor
insb
xchg
inc
adc
xchg
and
nop
adc
add
add
add
add
adc
and
adc
add
inc
fstps
adc
add
or
bound
add
add
or
addb
add
add
adc
add
add
add
mov
add
add
addb
sbb
and
inc
add
and
inc
or
adcb
addb
test
add
add
mov
addb
or
mov
inc
add
inc
or
add
dec
and
adcb
enter
dec
inc
add
and
inc
push
sub
loopne
add
push
or
sub
and
inc
addb
or
add
or
rol
push
ret
add
cltd
adc
add
pop
inc
xchg
add
rolb
add
and
addb
inc
and
add
add
movsb
mov
xor
add
and
addb
or
add
inc
jo
and
add
sbb
rclb
add
or
add
loopne
add
add
inc
addb
add
xchg
adc
inc
test
add
adc
add
add
or
add
mov
mov
pusha
inc
and
xchg
movsb
add
add
and
dec
add
inc
addb
nop
add
push
andb
add
rolb
mov
push
sub
or
add
les
add
dec
add
rcrb
add
or
ret
inc
add
test
or
adc
add
nop
add
add
adc
add
xchg
adc
xchg
jo
add
adc
adc
add
es
adc
add
add
or
add
sbb
rolb
and
inc
add
add
add
add
addl
add
loopne
bound
adc
and
sbb
inc
xchg
xchg
add
shrb
popa
pusha
add
mov
add
addb
adc
add
cwtl
add
add
sbb
sbb
rolb
add
add
inc
add
data16
addb
or
add
nop
nop
orb
add
add
add
adcb
adc
inc
adc
push
or
add
or
add
or
inc
add
add
and
dec
inc
and
or
add
pusha
adc
push
inc
and
adc
add
or
popa
pop
inc
add
add
addb
inc
and
add
add
add
and
xor
dec
inc
or
addb
xchg
les
adc
add
lret
addb
inc
add
or
add
or
or
sbb
xchg
inc
test
add
cmp
add
add
insb
and
fistl
shll
inc
rolb
add
xchg
and
inc
or
add
and
addl
add
inc
test
or
and
xor
add
inc
inc
fisubl
add
adc
addl
xor
add
add
add
adc
or
add
or
and
add
inc
addb
rorb
add
mov
sub
inc
and
pusha
add
add
sub
add
add
rcll
add
adc
rolb
add
add
add
or
roll
nop
add
inc
add
adc
add
push
and
add
sbb
ds
andb
bound
or
popa
test
add
pusha
add
xor
add
pusha
adc
or
scas
add
inc
adc
sbb
inc
add
pusha
sub
and
add
add
adcb
add
dec
addl
add
adc
add
inc
addb
inc
adc
fs
dec
inc
addb
add
and
test
push
add
add
pusha
dec
add
inc
xor
add
push
add
gs
add
sbb
pusha
add
add
and
adc
adc
push
push
add
and
push
fcoms
add
add
and
add
add
adc
add
addb
rolb
inc
xor
add
inc
or
rolb
add
cwtl
add
xor
lds
mov
inc
andb
add
inc
addb
add
add
mov
add
add
add
mov
add
addb
xchg
xorb
add
inc
inc
xor
and
rorb
or
add
test
sbb
sub
andb
inc
mov
inc
add
add
inc
pop
add
in
add
and
add
add
dec
or
adc
add
add
push
and
loopne
rclb
les
add
adc
inc
orb
lret
add
add
test
add
insl
nop
pusha
addb
add
add
and
adc
add
or
inc
rorb
popa
add
add
or
or
add
inc
add
test
or
and
inc
add
add
add
bound
inc
add
mov
and
rolb
push
sub
adc
adc
add
orb
inc
push
add
push
xchg
inc
inc
or
inc
pusha
add
inc
add
push
adc
add
add
or
inc
inc
test
add
mov
and
push
and
dec
adc
and
or
adc
inc
sub
adc
test
bound
inc
mov
add
inc
adc
add
add
inc
push
inc
mov
inc
test
or
add
add
add
inc
inc
or
push
cs
add
add
inc
add
pusha
inc
or
add
jo
add
mov
mov
add
adcb
mov
add
add
add
add
adc
and
add
add
jl
inc
inc
add
and
add
test
inc
xorb
xchg
add
inc
adc
jle
or
jo
roll
or
or
inc
nop
inc
add
or
lock
add
add
add
xchg
bound
dec
add
or
add
add
and
inc
loopne
add
arpl
and
or
add
add
add
or
test
or
push
or
loopne
add
add
sbb
add
add
and
xchg
add
sbb
addb
add
add
add
in
inc
add
adc
add
or
popa
mov
and
add
add
or
mov
add
add
and
and
add
or
add
adc
andb
lds
add
add
adc
xchg
ret
or
inc
add
or
cwtl
add
add
adc
andb
add
add
bound
or
pusha
inc
addl
mov
movsb
add
add
push
inc
xchg
add
lcall
sbb
add
or
addb
nop
add
dec
add
icebp
add
jb
adcb
adc
adc
add
or
rolb
add
adc
and
add
mov
test
adc
pop
add
add
add
add
or
mov
inc
mov
and
jmp
inc
dec
and
orb
add
inc
jmp
add
or
sbb
add
add
or
or
loope
add
add
adc
add
inc
add
add
add
mov
add
add
add
add
xchg
add
and
push
mov
add
rclb
cwtl
inc
add
add
add
add
or
add
adc
add
mov
inc
push
add
add
add
add
add
add
add
add
dec
add
add
adc
inc
and
add
inc
add
andb
add
adc
add
add
dec
rolb
add
test
add
add
add
add
inc
add
add
or
jo
add
adc
add
add
and
add
or
addb
add
add
push
add
inc
add
addb
inc
add
add
add
adc
add
mov
or
add
jo
or
or
push
add
add
adc
add
or
jne
add
adc
add
add
and
add
adc
inc
push
enter
dec
adc
add
add
add
nop
pusha
and
add
mov
add
and
add
and
sub
inc
add
sbbb
add
sbb
add
add
add
adc
add
sub
add
adc
add
add
and
adc
mov
shll
adc
add
xchg
add
inc
enter
adcb
addb
add
inc
mov
xor
addb
adc
add
xchg
or
adc
add
lcall
mov
dec
add
rolb
addl
inc
mov
and
add
add
daa
inc
add
pusha
or
pop
add
add
add
add
mov
add
roll
pop
or
inc
and
add
jle
add
add
inc
sbb
andb
add
inc
or
push
mov
add
aam
add
addb
and
add
mov
add
add
shrb
and
or
push
add
ret
push
inc
push
adc
push
sbb
inc
popa
add
add
dec
mov
add
mov
adc
inc
mov
add
addb
adc
add
add
add
adc
mov
add
add
mov
inc
dec
inc
add
add
add
mov
and
ret
add
add
and
add
add
adc
push
add
inc
mov
inc
add
add
adc
rolb
xor
inc
adc
addl
add
add
add
add
addl
or
orb
add
add
add
inc
sub
inc
and
add
inc
push
or
add
addb
inc
inc
add
movl
add
adc
add
call
addb
add
add
push
add
add
add
add
xchg
push
movsb
or
sbb
add
adc
add
push
or
inc
pusha
stos
add
pusha
inc
mov
or
inc
and
movl
pusha
add
add
addl
addb
add
add
push
add
add
add
or
sub
or
orb
add
adcl
sbb
add
adc
or
push
add
call
add
dec
add
add
adc
and
addb
push
or
test
push
sub
add
adc
pop
add
add
adc
add
or
or
add
add
leave
loopne
adc
test
add
adc
pop
insb
add
push
adc
loopne
add
xchg
add
adc
and
add
subb
add
and
inc
add
addb
or
and
or
add
adc
inc
and
adc
nop
add
add
xor
add
add
rolb
add
dec
addb
add
add
add
dec
inc
adc
inc
mov
addb
adc
add
and
add
rolb
or
and
and
movsb
or
or
adc
lea
inc
add
adcb
add
add
add
add
test
xchg
pushf
add
and
push
adc
and
sub
add
nop
movsl
add
add
mov
and
test
es
add
add
add
add
or
adc
and
add
inc
or
test
inc
aaa
or
rclb
and
or
inc
adc
add
add
add
ret
add
add
mov
xorb
dec
or
or
add
or
addb
inc
and
add
inc
and
mov
enter
add
add
add
inc
xchg
adc
push
or
add
add
inc
inc
inc
add
cmpb
imul
addb
sub
push
inc
mov
or
add
add
cmpb
push
add
or
sub
rorl
inc
mov
pop
add
test
and
dec
or
dec
test
addb
add
or
enter
add
add
add
xor
add
inc
xchg
add
or
inc
add
cmp
add
add
add
xchg
add
inc
daa
xor
add
add
add
sub
xor
enter
loop
clc
inc
cmp
loopne
cld
mov
int
fsubrl
repnz
sti
jmp
cmp
daa
stc
jmp
cwtl
mov
popf
test
fs
mov
stos
arpl
stc
inc
lret
std
jle
out
aas
lods
sub
inc
shll
inc
shll
push
and
jmp
insb
inc
jecxz
add
xchg
fs
push
dec
add
scas
pop
std
stos
cld
aaa
jecxz
mov
pop
jae
mov
outsl
mov
mov
push
lods
movsb
mov
inc
mov
mov
dec
push
mov
jmp
mov
mov
mov
xchg
pop
adc
mov
lods
mov
test
repnz
mov
dec
fs
stos
fadd
shl
sub
jmp
mov
jnp
dec
jecxz
insb
dec
mov
aam
ret
mov
mov
cmp
out
mov
inc
and
fs
test
push
aaa
filds
sti
and
mov
mov
jmp
mov
jae
add
leave
cmp
stos
out
test
cs
les
ss
mov
add
cmp
jge
jmp
mov
shlb
jl
fldcw
sub
dec
mov
dec
and
xorl
mov
dec
dec
xchg
std
xchg
aaa
jecxz
fsubp
stos
adc
push
movsl
inc
clc
or
xlat
rcr
jmp
lock
mov
ret
mov
stos
or
js
jns
in
stos
sti
sahf
in
jmp
std
xchg
call
jl
jmp
inc
outsl
mov
jnp
movsl
mov
push
push
mov
dec
out
or
outsl
dec
inc
mov
scas
pop
fcmovnbe
lret
inc
or
inc
push
jge
dec
inc
scas
les
imulb
dec
inc
mov
add
pop
push
mov
scas
inc
add
mov
std
jle
in
testb
stos
rorb
sbb
or
adc
inc
inc
mov
push
cs
nop
mov
or
es
sub
mov
and
jle
cmp
inc
cmpsb
cs
push
mov
jb
mov
shr
and
lcall
repz
fstpt
mov
adc
rcrl
sbb
mov
mov
pop
stos
jnp
xchg
or
sbb
sub
jo
stos
mov
jnp
int
dec
out
or
neg
and
mov
ret
sarl
mov
lods
sub
jmp
mov
leave
jnp
mov
cwtl
stos
fldt
push
ret
loope
mov
addl
jmp
mov
negl
mov
add
movsb
data16
lods
mov
mov
fcmovnb
or
push
aaa
hlt
in
in
stc
adc
sbb
mov
pop
pop
ffree
push
mov
xchg
sub
stc
jb
dec
mov
fsubl
fs
mov
mov
test
pop
mov
push
lods
movsb
mov
inc
mov
mov
or
loope
neg
and
mov
jmp
sub
sbb
cs
lods
lret
inc
xchg
adc
movsl
mov
or
mov
lahf
sub
iret
lret
mov
adc
pop
jno
jmp
adc
lret
add
mov
lods
mov
rcr
pop
sarl
mov
adc
push
inc
cmp
shll
pop
add
stos
daa
pop
sub
mov
pop
sbb
cmp
cli
mov
inc
sbb
dec
repz
stos
mov
mov
sub
mov
lods
mov
cmpsb
mov
mov
and
ss
mov
adc
pop
ret
dec
loopne
mov
sbbl
mov
shrb
jmp
cmp
ficompl
inc
sarb
dec
repz
mov
sub
mul
and
mov
xchg
mov
stos
stos
daa
fs
ucomiss
sti
out
stos
xor
dec
call
xchg
and
pop
ret
cli
jnp
std
mov
jecxz
out
jmp
inc
jecxz
mov
adc
movsl
inc
divb
xchg
inc
rclb
pop
pop
adc
movsl
mov
shr
lahf
outsl
clc
xlat
and
popf
shl
or
movsl
mov
xchg
fs
shr
fs
pop
or
jns
in
fwait
jp
test
or
cmp
xor
push
inc
xor
out
dec
push
sub
jl
and
jmp
mov
or
lods
mov
clc
fbld
sub
xorb
adc
pop
adc
mov
stos
jae
push
mov
in
cs
jl
add
and
mov
stos
sub
sub
loopne
stos
pushf
cmp
in
cli
fcomps
sti
and
cmpl
mov
test
or
ret
movsl
mov
mov
std
and
in
inc
xchg
movsl
mov
mov
std
jecxz
or
ret
sub
subb
jmp
mov
adc
movsl
mov
mov
sub
jmp
repz
arpl
cmpsl
lods
mov
mul
inc
mov
mov
push
sub
lods
mov
movntps
or
mul
and
ja
jg
rolb
lods
add
adc
test
mov
enter
cmc
call
lods
mov
sahf
jmp
mov
xchg
ret
lahf
aaa
lret
fldcw
jl
xchg
adc
rep
and
push
jl
ljmp
sahf
loope
je
jmp
rorl
mov
repz
mov
in
into
and
pushf
and
lahf
jmp
adc
cmp
in
shll
inc
jg
adc
mov
pop
lods
rol
stc
js
aam
cmc
mov
mov
mov
leave
pop
loopne
jle
cld
pushfw
push
or
and
inc
or
mov
movsb
or
in
mov
lods
and
into
push
stos
mov
cwtl
and
outsb
mov
cmp
lcall
test
mov
cli
add
jecxz
mov
mov
push
fwait
cmp
lahf
xor
ret
cltd
lcall
cmpsb
xchg
shrb
cmp
mov
sbb
loopne
mov
addl
fists
sbb
dec
int
rorb
leave
es
inc
int3
jecxz
iret
jo
test
aam
sub
mov
scas
ljmp
fiaddl
cmp
mov
movsb
repz
iret
fdivrl
scas
and
loope
adc
sbb
test
push
sahf
test
rcr
loopne
into
fldlg2
stc
lret
mov
jecxz
cli
push
sbb
clc
imul
out
addl
push
mov
sub
mov
daa
cld
int3
ret
sub
mov
sub
shll
xor
mov
jp
out
jmp
les
ja
inc
repnz
leave
enter
pop
icebp
jp
fld
cmpsb
out
sub
lods
dec
adc
dec
jge
jl
xchg
fcmovb
lcall
xchg
ret
cltd
stc
lret
xchg
or
in
mov
ljmp
mov
out
or
ljmp
push
jp
mov
push
add
enter
jns
mov
outsb
add
jbe
push
mov
sub
ja
mov
aad
cli
and
mov
inc
jmp
adc
jbe
adcl
jp
sti
rcll
sbb
mov
add
mov
sub
lods
imul
movsb
dec
xchg
push
mov
fldenv
push
enter
push
stos
sub
xchg
mov
mov
jmp
addl
ja
inc
jmp
inc
adc
cmp
and
pop
rcr
cmpsl
gs
fsubs
les
xchg
or
cli
scas
mov
sbb
call
lahf
test
insl
lahf
pop
fsubrl
out
cmpsb
lahf
lret
hlt
repnz
ss
outsb
dec
cmpb
and
push
test
jl
xchg
lcall
inc
icebp
jmp
inc
sub
fisubl
sahf
mov
bound
jo
lods
bound
out
fmulp
faddp
cmp
dec
mov
insb
idivl
mov
mov
in
cwtl
push
pop
cld
iret
stos
dec
ret
pop
mov
in
pop
jns
cmp
mov
pop
sbb
negl
cmp
jmp
xor
rol
push
cld
inc
test
andl
pop
mov
les
mov
mov
daa
cmpsl
sub
popf
mov
xor
and
loope
mov
rcrb
repnz
cmp
or
mov
rcll
stos
subb
lea
aad
mov
and
test
cli
mov
cld
dec
in
mov
inc
ss
add
sub
mov
sub
mov
mov
pop
orl
jo
or
sti
lret
fidivrs
jmp
shll
pop
into
jge
out
out
repnz
sti
adc
dec
inc
sub
xor
cmp
stc
into
adc
addr16
daa
bound
mov
add
fwait
or
cmp
mov
push
jmp
inc
adc
jecxz
cwtl
test
stos
xchg
sub
test
jbe
lahf
ds
add
push
sarl
or
xlat
pop
xor
xchg
adc
mov
pop
mov
adc
sub
lock
mov
mov
clc
inc
or
iret
sar
add
cli
test
xchg
aaa
nop
dec
mov
mov
or
inc
stc
sub
xchg
fistps
clc
jo
add
int
std
adc
mov
vpsrlw
sub
sub
mov
inc
jl
icebp
mov
mov
stos
and
pushf
cltd
mov
pushf
cmpsl
jmp
xor
mov
daa
inc
in
outsb
rcrb
imul
pushf
or
pusha
or
push
rcll
mov
mov
in
pop
push
shll
mov
test
mov
cmc
dec
test
push
push
loop
loope
fnstenv
dec
mov
jne
adc
add
sarb
mov
push
lret
mov
sbb
int
movsb
pop
mov
movsl
adc
out
shll
adc
ficoml
daa
mov
jp
jbe
movl
stos
lret
cwtl
inc
dec
sarb
mov
arpl
leave
mov
mov
xchg
ret
daa
mov
adc
xor
cmp
xchg
push
xchg
cmc
fstpl
pop
cwtl
lcall
cmp
fistpl
xchg
popf
mov
mov
fcomp
fidivrl
mov
dec
fisubl
mov
cli
out
cli
push
imul
andb
lods
lret
test
jmp
popf
and
jnp
cmc
mov
sub
cmp
cmc
jg
jp
add
or
add
les
pop
gs
jmp
xlat
cwtl
inc
out
sbb
mov
push
xchg
int3
jns
pop
jmp
add
fcompl
idivb
lret
xor
bound
sti
fildl
push
iret
push
clc
inc
xchg
inc
and
push
test
insb
inc
add
inc
dec
iret
lret
jl
mov
sbb
fstpl
mov
pop
fincstp
icebp
mov
pop
mov
fisttpll
call
push
scas
add
cmp
mov
lret
fisttpl
fwait
push
push
pop
call
rclb
lds
nop
mov
insb
push
sbb
fcomps
and
mov
mov
mov
add
push
cli
sub
std
sbb
jne
adc
cs
xchg
in
or
or
es
rcrb
enter
xchg
and
mov
ds
movsb
dec
adc
push
dec
lret
es
cli
notl
cli
or
insl
cmp
and
insl
pop
mov
mov
mul
fstpt
dec
int
scas
sub
test
das
cmpsl
cmp
xor
dec
push
cmp
push
in
sub
in
pusha
sbb
lcall
mov
push
int
xor
pop
or
jecxz
jecxz
push
inc
repz
xorb
cli
aad
mov
not
and
arpl
xor
jnp
sbb
and
lds
outsl
cmpsl
sbb
mov
inc
add
jne
leave
imul
insl
mov
sub
sbb
pop
dec
mov
jg
testl
test
loop
pop
mov
lret
mov
and
cmp
sbb
and
jge
mov
roll
test
mov
push
les
loop
mov
pop
fisubrs
into
xchg
gs
xchg
pop
repz
xchg
ja
xlat
into
or
xchg
cmp
lret
adc
add
fs
mov
mov
lcall
or
mov
sub
rcr
jmp
mov
sbb
inc
xchg
dec
lea
std
mov
mov
es
and
outsl
lds
int3
test
pop
fnstenv
mov
out
cs
dec
or
jmp
xor
mov
cld
into
lea
stc
pushf
loope
pop
leave
mov
jl
icebp
or
sub
rol
add
dec
mov
les
cwtl
test
in
or
cmp
loop
filds
fmuls
jmp
or
or
bound
stos
pop
mov
fsubp
jne
neg
or
or
and
xor
add
loopne
mov
and
out
pop
mov
sub
adc
xchg
pop
outsl
xor
aam
adc
fistps
mov
pop
ret
fcompl
mov
mov
lret
dec
roll
in
rcr
cli
jecxz
jle
and
into
cld
call
sub
mov
mov
dec
repnz
sub
fs
cmp
fsubrs
stos
into
xchg
ret
ret
pop
dec
mov
fsts
pop
jb
sbb
in
mov
mov
or
fst
ret
push
dec
sub
in
cmpsb
repz
adc
pop
mov
in
test
jmp
jo
pop
shrl
test
push
scas
fstl
pop
fsubr
inc
jecxz
mov
cmp
jmp
stos
dec
ljmp
fcmovne
ret
std
jl
outsb
shll
pop
loop
cmpsb
pop
rolb
pop
fwait
xchg
and
and
gs
inc
mov
hlt
lcall
mov
xchg
cmpsb
push
std
fisubrl
int3
sbb
jl
jmp
sub
sbb
add
mov
inc
or
ljmp
push
idiv
and
negb
add
xor
clc
cmpsb
aam
clc
sbb
add
add
mov
imul
sub
lret
add
lahf
sub
jmp
cltd
ret
pop
add
fisttpll
stc
sbb
out
and
jl
fdivr
cmp
repnz
sbb
fsubrs
xorl
cld
cs
cli
mov
cli
test
cmp
aam
ret
sub
push
xorl
enter
lahf
cli
test
cmp
mov
jne
negb
jge
mov
sti
adc
jnp
andb
das
mov
fistpl
jg
mov
ret
jmp
or
xchg
sbb
pop
repz
mov
pop
xlat
pop
rcrb
stc
loop
loope
sbb
ret
push
pop
divl
es
jge
sub
cmp
icebp
pushf
mov
cmc
dec
mov
jecxz
sub
xchg
insl
cmpb
or
sub
dec
repnz
dec
imul
jp
sub
sti
nop
bsf
roll
in
out
jmp
mov
jns
xchg
movsl
push
xor
mov
loope
ljmp
and
lods
or
jnp
fwait
push
fidivrs
xchg
and
jmp
jmp
pop
cmp
xchg
es
mov
and
das
mov
mov
ljmp
or
mov
arpl
cwtl
add
rcrl
mov
sub
std
fwait
xchg
inc
pop
xlat
outsl
xchg
into
sbb
dec
es
push
and
fwait
mov
cs
fwait
ljmp
inc
mov
cmp
in
cmpsl
adc
pop
sub
mov
pop
sbb
inc
and
inc
loop
add
add
loopne
mov
fs
das
fsts
mov
push
sub
ficompl
sbb
mov
loope
bound
fstps
jbe
inc
lods
or
push
xor
cmc
jle
mov
adcb
adc
cwtl
jg
xchg
hlt
mov
test
rorl
push
pop
iret
jne
mov
in
dec
cmpsl
jecxz
or
inc
mov
cld
repnz
ss
cmp
push
sbb
jo
ret
faddl
insl
jmp
inc
push
loopne
mov
out
stos
or
rdmsr
loopne
adc
mov
jg
aam
add
dec
inc
pop
movsb
mov
imul
cmp
sub
cld
add
or
xor
jmp
pop
push
sub
jp
sbb
adc
lret
rolb
lret
cmp
out
jp
xor
outsb
cmp
push
cmpsb
sbb
shlb
fildl
pusha
xchg
inc
rcr
pushl
pop
mov
dec
cs
mov
icebp
es
imul
mov
xchg
or
inc
mov
jo
sub
dec
mov
adc
enter
fmuls
in
ljmp
outsl
call
inc
mov
or
mov
lods
pushf
inc
xor
push
shll
leave
xchg
decb
inc
xor
les
jns
mov
repnz
test
lds
out
jb
aam
pop
sbb
inc
xchg
arpl
lret
gs
and
out
cmpsb
outsb
dec
sub
jo
fs
jb
fidivrs
pop
adc
mov
inc
inc
fcoml
movsl
test
or
adc
loop
xchg
movsb
mov
cltd
int
jae
loope
xchg
cli
fadd
jg
stos
push
or
test
cmovae
cwtl
mov
faddl
pop
std
dec
jno
mov
or
push
arpl
and
fsubrs
pop
out
xor
stos
fsts
jecxz
aad
fs
jmp
movsl
mov
mov
sub
flds
fwait
bound
push
jbe
inc
test
dec
jmp
or
addr16
cs
sarl
and
nop
loopne
mov
stos
jge
into
fiaddl
jmp
pop
mov
rcrl
mov
in
sbb
ret
ss
mov
mov
jg
cmc
aaa
scas
xchg
cmpsl
push
cmpsb
push
dec
popa
cmc
movsb
loope
loope
push
mov
jp
inc
jo
pop
repnz
aam
repz
xchg
ret
push
pushf
push
inc
dec
movsb
outsb
push
jns
mov
fldcw
je
repnz
stos
cmp
jg
adc
push
jg
adc
out
aam
into
add
sarl
test
cmpsb
adc
pop
ds
jle
push
cltd
ljmp
loope
dec
lods
jg
jno
cmp
pop
adc
and
repnz
decb
inc
test
flds
addb
add
inc
imul
push
dec
pop
inc
rorl
loop
mov
mov
inc
in
mov
add
out
shlb
in
das
mov
insb
arpl
iret
ret
scas
mov
loop
rolb
sub
ljmp
cwtl
xor
ljmp
mov
xchg
pop
insb
dec
imul
lahf
fcompl
sbb
jo
mov
mov
fcmovbe
iret
cmp
sub
leave
fadds
dec
pusha
fwait
lret
inc
jb
sub
out
in
dec
jmp
cli
sbb
icebp
aaa
sbb
js
stc
rorl
dec
stos
or
and
test
mov
bound
xchg
jnp
jl
loop
pop
mov
mov
and
fdivl
xlat
aam
sbb
mov
sub
fnstcw
lcall
pop
daa
sti
out
test
dec
in
adc
test
int
xchg
cld
lahf
sub
mov
leave
xor
js
xchg
and
pop
cli
outsb
mov
sti
dec
mov
rolb
in
lret
inc
mov
pop
mov
push
stc
fdivl
mov
aaa
sbb
stos
out
push
pusha
xor
jbe
jle
je
in
xor
icebp
mov
jbe
pop
jl
jmp
push
add
and
ret
jb
loop
adc
jg
push
cmc
dec
jg
sbb
inc
fs
in
in
push
ret
call
call
in
sbb
stos
test
dec
inc
testl
inc
mov
xchg
mov
mov
and
shlb
cmc
aad
in
mov
ljmp
lcall
sbb
in
sub
push
lcall
dec
repnz
and
mov
pushf
mov
mov
xchg
dec
sbb
add
in
test
pop
in
sub
incl
das
mov
out
add
mov
push
mov
loope
mov
mov
cmp
or
mov
mov
daa
scas
xchg
test
xchg
mov
fs
mov
imul
sbb
sbb
or
add
fildll
jo,pt
cmp
or
mov
cmpsb
icebp
xchg
mov
std
into
hlt
out
and
or
les
push
mov
ja
dec
push
inc
cltd
sub
stc
xchg
cmpsb
call
sbb
dec
aas
or
sahf
cli
hlt
loope
nop
push
mov
loop
in
sub
iret
sbb
leave
outsl
call
xchg
mov
pop
sti
loop
repz
cmp
ret
enter
ret
lret
hlt
mov
mov
push
popf
iret
cli
ljmp
jns
dec
mov
lret
stos
outsb
sub
pop
mov
mov
fisubrl
fwait
in
lea
mov
fwait
movsb
fwait
out
push
add
push
mov
sub
scas
xchg
mov
sub
add
fisubrl
xor
dec
out
ljmp
jo
mov
rcl
sbb
in
xor
dec
or
stc
out
inc
adc
push
mov
sti
pop
in
ss
sbb
and
shrb
stos
lret
test
bound
dec
aam
push
cmp
and
inc
rorb
pop
mov
int
or
cld
shlb
xor
mov
sbb
push
rorl
and
imul
movsb
arpl
jo
insb
and
add
mov
cmp
and
sbb
insb
add
lret
jns
push
mov
ss
fs
and
cmp
out
and
mov
scas
and
into
cltd
pop
mov
add
lea
inc
lods
arpl
and
jbe
cli
fwait
mov
add
push
pop
rcrb
cltd
js
pop
cs
lret
jmp
test
ss
mov
test
add
push
test
lcall
andl
outsb
xor
adc
xchg
lret
test
in
ret
fwait
inc
mov
mov
stc
dec
lods
mov
ljmp
mov
loope
mov
mov
mov
test
out
std
xbegin
call
dec
adc
xchg
pop
mov
ljmp
inc
xlat
push
mov
dec
push
outsl
imul
jle
hlt
repz
cmp
dec
cltd
inc
mov
test
sti
mov
leave
mov
cld
xchg
dec
inc
mov
mov
push
jmp
int3
xchg
into
cld
rclb
fcoms
inc
fldt
or
test
shlb
sub
add
mov
jb
daa
movsl
xchg
sahf
pop
mov
aam
xchg
lods
loope
call
into
insl
pop
sti
jl
adc
in
push
es
lcall
push
je
fsubs
sub
popa
cli
fsubr
sub
dec
test
pop
mov
xor
and
js
ss
fisttps
adc
sbb
dec
jge
ds
xor
addb
jl
sbb
lcall
or
mov
lret
push
std
lret
push
pop
and
jo
push
add
and
arpl
shlb
inc
mov
cmc
pusha
imul
sub
leave
not
loop
mov
mov
sbbb
repz
lock
stos
dec
mov
movsb
xchg
mov
mov
test
ficoml
adc
inc
popf
mov
movsl
fcmovnbe
sbb
lcall
icebp
int3
and
ja
popa
add
and
out
dec
sub
mov
xchg
mov
sbb
cmp
mov
loope
mov
mov
mov
in
fiaddl
pop
mov
repnz
cli
or
addb
aaa
test
cs
mov
aam
sub
pop
cwtl
cmp
xor
pop
push
movsl
lahf
sbb
jmp
and
jo
in
pop
sub
inc
push
jne
mov
push
in
mov
scas
mov
in
add
mov
aas
mov
repz
lahf
pop
cs
sbb
sub
xchg
add
lret
sub
bound
xchg
xchg
sbb
jge
std
cwtl
sahf
aad
loop
div
mov
mov
sub
cwtl
mov
out
daa
into
push
popf
aam
stos
and
and
mov
cld
xchg
cmp
jle
lods
enter
push
rolb
or
icebp
push
lods
dec
out
fildl
push
xor
adc
mov
jg
sbb
iret
push
fcom
and
mov
xor
and
jne
jo
jmp
mov
dec
fnstenv
daa
mov
jecxz
xchg
adcl
pop
test
xchg
xchg
leave
or
push
mov
cmp
sbb
loopne
or
negb
xor
push
cmpsb
sub
push
aaa
mov
pushf
pop
push
lods
add
cmp
or
mov
cld
xorl
inc
mov
lods
mov
shlb
and
test
incb
fnstenv
and
mov
jne
shll
in
das
or
test
jb
out
pop
lret
enter
iret
jmp
mov
aad
outsl
test
jno
lret
ret
jae
aas
cmp
cmp
shrl
cmpsb
mov
ret
loopne
dec
imul
pop
or
lods
sub
fnsave
out
push
pop
decl
movsb
ret
scas
insl
mov
fiaddl
mov
push
mov
and
cs
pop
jl
fsts
movsl
cmp
mov
inc
mov
fstps
stos
pop
int3
adc
shrb
ret
jb
add
icebp
jle
inc
loope
arpl
dec
push
cmp
mov
imulb
cmpsb
rorl
inc
lret
adcl
mov
inc
imul
out
mov
inc
into
shll
stc
inc
adcb
sarl
cltd
or
addr16
dec
out
ljmp
and
xchg
add
or
cmp
repz
js
mov
icebp
outsl
and
dec
sub
push
xchg
pop
mov
add
aad
cmpsl
pop
or
xor
add
lcall
lods
mov
pushfw
ficoml
cmp
repz
add
bnd
ret
xchg
scas
add
pop
stos
cmp
cmp
mov
pop
rorl
hlt
imul
lods
jle
mov
mov
or
pop
cmp
sub
lret
bnd
pop
je
mov
movb
shlb
clc
jp
lods
shl
mov
shll
add
pusha
dec
and
outsb
inc
or
rcrl
mov
jge
xchg
and
pop
cmp
dec
mov
xchg
mov
fimuls
adc
sub
jl
repz
jbe
outsl
xchg
aaa
int3
xchg
rcrb
outsb
das
xor
mov
xchg
hlt
xchg
mov
stc
inc
mov
xor
ss
icebp
or
mov
sbb
jne
sbb
idiv
push
pop
out
push
sub
in
or
cld
fwait
cmpsl
pop
and
lods
iret
cmp
scas
iret
in
or
dec
out
popf
xchg
xlat
test
adc
push
dec
and
sbb
dec
and
mov
ljmp
xor
aaa
mov
xchg
filds
pop
in
aas
sbb
fstl
andb
xchg
arpl
mov
sbb
dec
jb
mov
inc
inc
ficoml
insb
and
push
lahf
dec
pusha
and
test
cmp
adcb
sbb
inc
mov
icebp
scas
xor
xchg
fs
gs
pop
xor
iret
mov
loope
push
sub
daa
sub
add
lahf
sarb
stc
ret
leave
shl
das
lcall
in
fildl
mull
call
popa
or
push
arpl
arpl
mov
shl
mov
sub
cmc
dec
or
fidivrl
or
mov
sbb
add
ljmp
and
pop
lea
fcmovnb
notl
fcomip
jg
or
fdivl
lcall
lret
std
sub
stos
add
lahf
mov
push
ljmp
mov
mov
out
push
adc
or
insb
pop
pop
shrb
call
and
xlat
test
mov
cli
lahf
xorl
loopne
lods
push
inc
jecxz
inc
sbb
xchg
scas
loopne
rol
pop
mov
xor
call
dec
fsubs
test
mov
and
xor
mov
xor
jb
pushf
xchg
int3
or
pop
push
idivb
ljmp
push
shrl
data16
xchg
ljmp
adc
inc
mov
test
pop
or
cmpsb
push
popf
in
jnp
push
ljmp
bound
mov
cmpsb
movsl
sbbl
out
inc
cltd
mov
xlat
repz
pop
fldenv
aas
mov
orb
mov
into
pop
mov
gs
dec
in
rorb
xchg
xor
pushf
insb
push
fidivl
ljmp
je
les
in
xchg
xchg
jge
inc
mov
inc
fists
ret
cmpsl
mov
inc
and
sbb
ret
mov
pop
inc
out
in
jb
dec
dec
mov
fadds
inc
ljmp
inc
repz
sub
jo
stc
daa
mov
mov
and
lods
bound
xchg
mov
push
int
inc
fcomp
fld
movsl
bound
negb
decb
stc
call
lcall
sti
and
add
mull
cmc
fisubs
loopne
clc
call
xchg
test
inc
pop
pop
sahf
nop
pop
in
xor
nop
jp
in
dec
jmp
inc
xchg
in
cmp
ljmp
xlat
movsl
ret
shll
cwtl
add
push
out
mov
and
push
arpl
jb
adc
repz
cwtl
sbb
ljmp
jp
sbb
in
push
subl
pop
add
ja
outsl
fisttpll
out
fdivrl
scas
push
adc
jp
inc
outsb
lock
lcall
sahf
add
mov
and
cwtl
sbb
pushf
vmread
das
rcr
sub
cltd
jbe
stos
add
movl
stos
icebp
jb
loopne
fmull
call
test
insl
xlat
in
mov
stc
adc
test
xchg
adc
daa
test
jecxz
nop
dec
sbb
rolb
mov
lods
js
jmp
jno
sub
aas
push
out
insb
dec
xor
dec
xchg
adc
ljmp
imul
adc
pop
mov
adc
fistps
loope
and
inc
push
inc
mov
sahf
mov
xchg
jecxz
loope
sbb
jp
mov
or
lret
sub
es
push
aas
sbb
adc
loope
mov
mov
mov
mov
in
idivl
pop
mov
inc
hlt
mov
xchg
in
cmp
loopne
ja
aaa
fs
mov
loopne
mov
push
pop
aad
pusha
scas
cmp
dec
dec
dec
and
add
out
and
and
nop
in
sub
cs
cltd
arpl
mov
push
outsl
lcall
xlat
inc
xor
pop
mov
xchg
xor
push
jl
fcmovnu
cli
push
fcoml
daa
mov
jo
les
sub
addl
inc
add
mov
cmp
lods
ret
xor
mov
ret
push
lcall
dec
leave
cmp
xchg
dec
popf
push
cmpsl
or
cmp
out
cwtl
in
outsb
jg
les
fbstp
inc
aaa
cmc
jb
scas
in
fistpll
rcrl
pop
int
adc
leave
call
jg
mov
insl
ret
lods
stos
inc
aas
in
in
jae
add
pushf
mov
imul
lahf
jo
loopne
test
ss
gs
out
lock
adc
ss
cs
test
mov
imull
adc
jnp
sub
or
test
sbb
add
jb
xor
cli
push
mov
mov
out
jmp
jle
push
addr16
int
or
shrl
push
sbb
lret
cmpsl
push
rcll
mov
test
mov
vmovlpd
imul
xlat
jg
sub
push
sbb
xchg
das
mov
out
out
sahf
test
xchg
dec
lods
and
sub
mov
fcompl
sahf
mov
pushf
mov
push
pop
xchg
dec
add
push
mov
aam
mov
rcrl
cmp
shlb
xchg
cltd
arpl
cwtl
shll
lret
cwtl
outsl
int3
rcll
cwtl
nop
enter
pop
lock
cli
in
cwtl
negb
mov
push
and
jle
add
jmp
lcall
jg
test
call
mov
jp
xor
cmp
stos
xchg
lods
hlt
mov
and
leave
mov
jmp
push
in
imul
mov
repz
stos
ficompl
sub
icebp
push
in
movsl
sub
ss
icebp
out
iret
and
inc
cmp
cmp
std
lea
mov
xchg
in
lcall
pop
or
iret
xor
jo
sub
inc
push
loop
sub
repnz
stos
pop
or
jl
in
jae
or
pusha
push
add
aam
shr
jo
inc
fmuls
fcmovb
cltd
jle
icebp
cld
data16
dec
add
cli
and
dec
rol
adc
mov
inc
or
push
jbe
in
insl
inc
sub
mov
mov
pusha
mov
loopne
pop
sbb
push
or
es
cmpsb
sub
andl
mov
xchg
std
jo
scas
jge
mov
dec
addb
jns
cltd
and
xor
popf
mov
add
mov
addr16
test
into
dec
xchg
adc
imul
iret
lods
mov
inc
add
push
pop
rorb
rolb
inc
add
inc
js
adc
test
sbb
int
inc
jb
sub
push
fistpll
mov
test
jg
jp
ljmp
pushf
movsb
fistps
pop
mov
mov
mov
pop
mov
dec
jae
pop
je
cs
roll
repz
ds
and
shll
into
cmpsl
in
rcrb
cwtl
sub
test
enter
sbb
into
mov
mov
icebp
loop
push
into
inc
imul
push
in
sub
into
imulb
sahf
fists
lret
adc
negl
pop
push
inc
mov
inc
add
rcrb
dec
xchg
pop
aas
aam
bound
out
jle
dec
fnstenv
movsb
pop
mov
mov
adc
inc
jno
gs
fsub
hlt
in
stc
sbb
mov
and
dec
clc
fsubrl
mov
orb
mov
loope
rcll
arpl
arpl
fwait
push
push
pushw
lods
dec
mov
repz
mov
jp
push
lret
mov
cmc
repnz
adcl
popf
in
mov
rorb
lret
js,pn
sbb
ret
into
inc
and
and
ret
aas
dec
movsb
notl
orb
pop
arpl
movl
sbb
arpl
cmp
shll
call
xchg
jne
pop
stos
pop
pop
push
arpl
mov
fdivl
sar
repnz
pop
mov
aaa
mov
jge
adc
push
add
ret
fs
stos
cmp
faddp
lea
icebp
push
cmp
add
orb
xchg
mov
lea
shlb
sbb
out
mov
leave
int
std
sarb
sbb
mov
jle
sbb
arpl
xor
dec
lcall
pop
or
add
fsubrl
rclb
mov
fwait
mov
jo
inc
push
push
xchg
sub
iret
js
lret
jbe
movsl
dec
into
mov
push
inc
dec
in
addr16
sbb
pop
mov
test
adc
clc
shrl
adc
and
pop
inc
jmp
adc
rol
mov
add
loopne
and
lea
arpl
int3
mov
xchg
sti
mov
adc
js
push
mov
cmpsb
dec
mov
push
ljmp
lcall
jmp
sti
lods
lcall
test
mov
mov
pushf
push
sbb
cmpsl
repnz
imul
lahf
lahf
test
inc
xlat
xchg
loop
mov
adc
outsl
sub
fcoms
cmpsb
cwtl
inc
mov
adc
or
ss
inc
mov
jbe
xchg
and
push
sbb
add
fbstp
inc
icebp
dec
enter
movsb
xlat
stos
cmp
shll
add
leave
xchg
out
sub
mov
fcmovb
std
mov
je
stos
cmp
dec
in
or
jecxz
ss
inc
pusha
mov
mov
repz
add
mov
out
lahf
fistps
mov
mov
jg
pop
jp
es
sbb
sbb
mov
fisubs
mov
in
sbb
pop
stos
xchg
aaa
ret
fucomip
pop
shl
mov
mov
jmp
ljmp
or
inc
insb
ljmp
mov
mov
adc
shr
pop
and
push
les
sub
not
out
push
sub
and
cltd
jle
fidivrs
cs
sbb
or
dec
mov
mov
mov
cli
mov
adc
push
mov
inc
in
xchg
fistps
sbb
stos
mov
jp
jb
push
fs
mov
fidivl
inc
or
jns
or
data16
mov
cs
pop
pop
incl
sbb
mov
dec
jb
xchg
sbb
xchg
or
push
fwait
and
xor
ret
or
dec
imul
shrb
sub
pop
out
cmpsl
dec
add
or
jecxz
jbe
cltd
sub
adc
or
mov
cmpsl
sub
cmp
pop
or
sti
cli
cmp
xlat
frstor
sub
sbb
mov
aam
pushf
pop
mov
inc
scas
lret
pop
gs
sbb
pop
jb
sahf
cs
adc
gs
into
cmp
mov
push
lret
or
repz
inc
les
fcmovbe
stos
shrb
divl
inc
adc
add
dec
aaa
cmpsb
and
sbb
xchg
insl
sbb
mov
repz
scas
incl
movsb
sbb
out
cmc
sbb
jbe
adc
sbb
pop
out
cmpsl
inc
mov
pop
in
fdivl
adc
insb
mov
leave
mov
sbb
and
cwtl
inc
jge
mov
lods
cmpsb
jle
add
dec
jmp
std
mov
out
adc
bound
push
lods
lret
push
xchg
adc
data16
lret
rorl
sub
rcrb
ja
iret
mov
cmc
xor
inc
jge
mov
fld
movsb
movsb
dec
inc
sbb
in
cld
jecxz
data16
divb
icebp
dec
lahf
jg
xchg
daa
jecxz
dec
test
add
les
pop
repz
cmp
fadd
sbb
and
mov
xor
icebp
rcrb
sarb
mov
das
dec
fcoms
mov
mov
xlat
stc
movsb
mov
dec
nop
jp
adc
jmp
out
aad
push
mov
arpl
inc
std
or
adc
cmpsb
mov
sbb
jp
pop
sub
ds
sub
shlb
mov
push
push
push
push
pop
pop
xchg
xchg
xchg
pop
pushf
imul
and
cli
movsb
scas
in
sbbl
or
mov
adc
dec
sbb
cmpb
clc
and
mov
scas
repz
lret
pushf
dec
lcall
mov
test
push
sbb
dec
icebp
rcrb
lock
in
fldcw
jl
rcl
sub
outsb
dec
test
and
imul
cmp
call
adc
imul
push
sbb
arpl
daa
xchg
lret
popf
or
mov
lahf
cli
mov
fwait
and
fdivr
into
movsb
outsl
mov
or
into
and
add
xchg
mov
sbb
mov
xchg
xchg
dec
shl
cmpsl
imul
incb
jmp
jns
and
push
xchg
jae
mov
lods
jge
addb
and
or
cwtl
aas
out
loope
call
mov
in
popf
sub
sbb
into
ljmp
jae
mov
outsb
mov
mov
adc
leave
stos
jns
movsl
daa
dec
mov
sbb
adc
inc
out
lret
adc
mov
push
jp
out
pop
ljmp
int
es
xor
sub
xchg
outsb
cmp
cwtl
rcr
sub
push
or
and
insl
les
inc
cmp
add
jmp
xchg
xor
mov
mov
ljmp
shll
adcl
enter
stos
test
stos
inc
adc
mov
push
cmp
in
andl
ds
inc
add
sub
dec
hlt
fucomi
mov
mov
popf
in
ljmp
fwait
les
cld
inc
lret
rcrb
mov
mov
out
mov
and
sbb
adc
push
call
jbe
bound
cmp
test
sbb
and
ret
cmpsl
stc
outsl
loop
ror
sti
xchg
in
xor
xor
pop
jecxz
movsl
dec
jecxz
xchg
loopne
out
and
xchg
lods
icebp
sbb
loopne
or
cmpsb
sahf
push
neg
mov
sub
dec
or
push
push
fistpl
or
fistps
add
in
pop
pop
stos
imul
push
cmpsb
xchg
push
shlb
lock
sbb
pop
pop
jge
add
neg
aaa
rcrl
mov
shll
cmpsb
cmp
mov
add
fists
or
inc
jnp
or
movsl
xorb
dec
cmp
push
andl
ret
push
adc
jbe
push
gs
fidivrs
daa
or
inc
pop
rol
cld
xor
mov
or
mov
dec
and
sbb
scas
mov
push
add
and
lahf
data16
jno
lret
enter
ljmp
mov
rol
xlat
cli
push
pusha
mov
les
mul
shll
inc
or
xor
shlb
pop
or
sub
and
mov
cmpsb
jae
or
imul
aam
ljmp
pop
das
in
aas
imulb
movsl
ljmp
es
add
cli
popf
push
out
fcmovu
lea
andb
xchg
fwait
pop
call
dec
movsb
in
or
mov
int3
sbb
pop
out
nop
clc
or
and
call
adc
out
sbb
sbb
sbb
test
stc
dec
ret
pop
gs
call
pop
addb
mov
add
xor
lcall
pop
pop
jp
and
xchg
cltd
mov
test
ljmp
mov
bound
cmp
lea
mov
inc
iret
ljmp
inc
jle
jge
inc
ljmp
hlt
inc
sbb
ja
mov
or
sub
push
inc
fcoml
dec
fists
cmp
xchg
gs
sbb
ficompl
cmpsb
cmp
leave
movsb
push
fs
leave
and
pop
xchg
fildl
ljmp
xchg
daa
leave
jo
cmpsb
fwait
pusha
sti
mov
out
mov
cmpsl
mov
mov
cli
mov
pop
cmc
mov
outsb
push
xchg
pop
cwtl
sbb
fidivrs
cli
jne
xchg
jns
imul
sbb
mov
inc
out
cmpsl
negl
js
sbb
in
add
xor
or
inc
js
jge
popf
mov
cmp
arpl
mov
sar
and
or
data16
ljmp
mov
jecxz
jecxz
inc
or
mov
imul
or
addl
out
stos
aas
lods
mov
push
mov
iret
pop
ret
push
dec
aaa
or
bound
daa
mov
sbb
pop
jb
mov
mov
dec
dec
subl
ljmp
xchg
mov
fmull
and
scas
jns
in
add
push
or
out
or
xchg
mov
cli
xchg
nop
bound
jmp
mov
jae
or
mov
rcr
jb
and
adc
pop
lods
jb
or
cli
repz
xchg
lcall
subl
out
push
mov
popf
dec
inc
inc
test
rol
stos
push
cmp
cmp
fldt
movsl
or
and
int3
iret
iret
inc
iret
div
and
jmp
pop
aam
ret
das
sub
xchg
ret
sub
sub
cmpsl
fld
cmp
ja
int3
inc
or
cwtl
loopne
mov
cmc
fxch
inc
sbb
sahf
cmp
dec
fs
push
fwait
pop
adc
sub
jl
test
xchg
jg
hlt
xor
mov
repz
mov
mov
mov
adc
mov
add
mov
movl
xacquire
xchg
xor
notl
fsubrl
or
ljmp
inc
mov
mov
movsl
jp,pt
mov
loop
in
push
sub
and
adc
mov
ja
xor
fidivrl
sub
mov
cmp
movsb
push
mov
ljmp
push
sub
addl
aam
iret
xor
loopne
sbbb
fisubl
mov
jecxz
or
fcmovb
sbb
jecxz
and
dec
sub
daa
sti
add
cmpsb
pop
int
cmp
add
push
aam
arpl
fisubl
icebp
negl
add
dec
ret
inc
xchg
jl
ljmp
fmulp
scas
les
cltd
pushf
lods
adc
lret
lahf
fldcw
dec
outsb
aam
ret
pop
inc
addr16
lret
jb
jbe
jmp
mov
inc
dec
mov
scas
jb
mov
call
sbb
test
sbb
mov
pop
ja
mov
mov
sbb
push
icebp
mov
test
insb
std
roll
pop
es
sub
addb
out
sti
hlt
mov
or
add
stc
push
push
push
xchg
movsb
andb
les
scas
addr16
dec
sbb
insb
xchg
in
push
mov
xchg
ret
clts
xor
dec
sbb
and
sbb
xlat
inc
aaa
dec
rorb
outsb
ficoms
mov
les
ffreep
and
pop
dec
push
sub
add
push
mov
sbb
rcrl
cli
pop
jns
mov
repz
jge
sub
mov
sti
mul
add
fildl
test
sahf
push
movl
loop
add
inc
addl
es
add
mov
pop
or
movsl
dec
jle
imul
dec
hlt
and
jge
hlt
cs
mov
jmp
xchg
jl
fimuls
sub
movsl
mov
jp
cmp
inc
fsubl
stos
mov
jo
cwtl
in
gs
fwait
jge
adc
daa
fst
je
lods
iret
add
jg
mov
ljmp
fwait
or
mov
mov
push
dec
aad
fsubrl
fwait
repz
daa
mov
mov
lods
test
addl
pusha
mulb
sbb
and
repz
xor
cwtl
js
adc
jmp
in
ljmp
ficompl
jl
enter
jecxz
iret
adc
das
movsb
stc
add
mov
nop
sti
shl
test
jl
aad
ret
and
dec
dec
outsb
inc
and
mov
mov
frstor
insl
in
xchg
dec
push
mov
mov
ss
repz
addr16
mov
shll
ljmp
iret
mov
or
popa
stos
jge
adc
incl
mov
ds
cltd
fimuls
test
arpl
cmpsb
sub
les
loope
outsl
fcmovb
xchg
lock
jb
into
ret
int
iret
in
pop
cs
je
xor
andb
icebp
and
ret
adc
push
imul
mov
push
push
push
pop
mov
push
pop
cmp
popf
xchg
jge
and
dec
cmpb
jg
mov
iret
lock
dec
xchg
lods
psubw
iret
mov
xor
mov
out
cmc
movsb
sahf
jecxz
jmp
jecxz
stos
fwait
jb
and
mov
and
pop
mov
out
std
or
lret
mov
outsb
jns
gs
jmp
inc
jge
dec
lods
xor
dec
lret
jo
jl
mov
dec
jl
test
ficomps
in
sahf
mov
and
notb
xchg
dec
sti
stc
mov
hlt
shll
dec
mov
or
cltd
es
imul
sub
mov
inc
jbe
das
sbb
and
xor
adc
pop
xchg
push
push
mov
out
loope
out
mov
pop
xor
add
and
mov
lahf
mov
addl
xchg
fstpt
jmp
lcall
inc
pop
pop
or
mov
std
jmp
daa
cli
js
jbe
jle
jns
push
pop
adc
mov
fsts
or
push
cld
insl
stc
sub
xchg
lret
pusha
rcll
jb
filds
aad
rcrl
pop
stos
or
mov
pop
sbb
cs
jmp
cmpl
push
movl
xchg
divb
lcall
pop
mov
jbe
aad
jns
lods
sub
push
mov
rcl
mov
adc
inc
or
imul
sbb
movsl
cli
jg
sbb
and
fld
sbb
scas
lea
dec
ja
js
movsl
dec
ficompl
fisttpll
popf
push
or
inc
std
stos
ss
sbb
jl
inc
ljmp
je
mov
sarl
in
cmp
jnp
cmp
in
rol
mov
mov
mov
and
add
mov
les
insl
out
xchg
sbb
shll
jnp
mov
dec
adc
pusha
xchg
cmp
push
movsb
inc
and
cs
mov
cmp
das
or
pop
mov
xchg
movsb
into
push
rcl
inc
mov
testb
mov
lds
cltd
cs
ret
lods
nop
pop
push
pop
clc
jbe
ret
sub
cmp
mov
dec
fldcw
out
rolb
div
jo
cmpsb
fadd
push
rcrb
inc
and
in
or
xchg
andb
fsubr
test
jo
xlat
pop
mov
mov
push
data16
icebp
pop
mov
push
loope
adc
enterw
pop
add
xor
pop
cmp
mov
jecxz
sub
popf
inc
out
cli
or
cmp
daa
add
inc
and
adc
sbb
push
pop
lock
xchg
lds
inc
dec
fwait
pop
notb
cmpsl
clc
pop
es
lods
testb
ret
sub
cmovne
adc
cs
or
xchg
daa
icebp
add
push
aam
push
cmp
ret
addb
fidivs
mov
push
push
mov
iret
sub
and
call
xor
and
cmp
test
es
cmp
sub
mov
fimuls
clc
pop
loop
jmp
out
out
jbe
mov
aam
ret
jg
in
scas
mov
in
es
fnstsw
push
movsl
adc
jge
subl
jecxz
mov
fildll
xor
sti
loope
scas
xchg
xor
mov
notl
xchg
ljmp
jge
and
and
mov
pop
mov
mov
cwtl
pop
les
adc
pop
push
cmpsl
out
hlt
and
fsubrl
and
out
cmp
pop
cld
jg
jbe
add
aad
jno
push
ret
adc
fstps
in
out
pop
xchg
shll
or
jo
xchg
mov
int
dec
cmpsl
das
cmpsl
jl
stos
pop
roll
call
stos
lods
stos
mov
out
subl
filds
lds
sub
test
sbb
out
mov
int3
sbb
aaa
sub
mov
jbe
sahf
xchg
je
sub
jg
mov
adc
xchg
sbb
test
std
mov
cld
mov
or
and
mov
adc
ret
cld
andb
sbb
lahf
mov
movsl
movb
fmul
inc
roll
aad
jbe
adcl
sti
jl
fisttpl
rorl
addr16
xchg
cmpsb
push
adc
fcoml
test
push
xchg
inc
xchg
pop
xor
pop
add
out
aad
dec
cltd
sbb
iret
sub
rorb
pop
scas
and
jmp
les
jbe
fstpt
or
xchg
outsb
hlt
jle
and
inc
pop
xor
ja
xor
cmc
pop
sbb
push
or
stos
aas
cld
dec
scas
movl
outsl
xchg
shll
add
adc
lds
push
nop
pop
aaa
aaa
call
mov
sbb
mov
pop
adc
data16
icebp
add
adc
scas
or
movlps
outsl
fstpt
mov
out
bound
lds
dec
sar
inc
loopne
add
sub
lcall
inc
xchg
shll
cld
pusha
scas
outsb
xchg
fsts
dec
and
and
add
push
xlat
shl
mov
nopl
fdivrs
mov
stos
push
jge
les
pop
in
sub
in
jmp
orl
popa
fucom
xchg
mov
ret
fldl
fwait
call
gs
jle
mov
movsl
imul
out
int
and
stos
lcall
jnp
fldenv
lret
push
sub
mov
aas
or
mov
pop
pop
pop
add
adc
leave
pusha
mov
test
push
sti
mov
xchg
pop
dec
jae
fmulp
push
jnp
jb
cmpsb
jecxz
and
repz
xchg
xor
cmp
lods
clc
and
rorb
push
cmp
dec
out
pop
dec
inc
in
scas
xor
shr
pop
test
orl
sbb
cmp
js
lret
lods
movsb
inc
and
xor
add
sbb
jecxz
cmp
mov
sub
ljmp
out
cmp
xor
adc
mov
or
into
sti
jo
movsb
and
out
pop
shrb
adc
jecxz
pop
sbb
shlb
es
add
ror
int
dec
icebp
mov
dec
in
aas
jmp
in
jmp
inc
jg
ret
pusha
fcompl
add
dec
mov
outsl
and
outsb
imul
jle
shlb
xor
mov
cmp
pop
add
dec
aam
and
sar
jle
lea
sbb
insl
cmp
clc
sbb
scas
adc
fcmovu
adc
fs
es
add
push
adc
jle
mov
orl
div
insl
imul
and
iret
inc
in
pop
mov
xchg
push
sbb
icebp
out
mov
push
adc
sbb
lret
jae
xchg
mov
repnz
loop
std
fiadds
jl
sarb
movsb
js
mov
fdivrl
arpl
mov
add
movsl
mov
mov
mov
inc
popa
and
ds
ljmp
ljmp
cmp
sub
and
cltd
push
std
scas
shll
adcl
mov
mov
repz
or
loop
and
shlb
mov
mulb
pusha
outsl
cmp
add
or
cmp
inc
stos
scas
testb
fs
mov
stc
aad
inc
xchg
out
jno
popa
in
adc
in
sub
sub
mov
xchg
loopne
dec
xchg
jbe
insl
mov
xchg
int3
scas
sub
xchg
mov
jp
sbb
cltd
fildl
cmp
jne
sub
aam
sub
inc
or
pop
xchg
mov
arpl
aaa
adc
dec
test
ja
ret
sbb
out
dec
jecxz
mov
dec
lcall
cmp
push
test
jmp
pop
scas
jnp
push
cmp
or
jle
xor
add
inc
mov
and
outsl
and
mov
mov
std
xchg
scas
add
aam
mov
out
scas
and
xchg
sub
xor
jp
lea
xlat
scas
punpcklbw
pop
fnop
xchg
into
addr16
mov
pop
pop
fstpl
out
pop
clc
cwtl
push
loop
enter
pop
in
rcrl
sbb
xor
ja
mov
test
faddl
out
pop
or
sbb
xchg
or
cmpsl
jbe
lds
push
enter
xchg
outsl
pop
xchg
test
or
cmp
iret
das
push
cmp
mov
hlt
test
mov
push
push
mov
loop,pn
xchg
inc
aaa
rorl
aam
jno
xchg
lock
cmp
pop
lret
cmpsl
mov
mov
xlat
dec
jge
push
loopne
lret
iret
inc
mov
or
cmp
cmp
push
repnz
imul
push
mov
ss
fwait
lret
in
ljmp
cmpb
xchg
or
mov
fs
int3
stos
pop
in
mov
add
fldenv
adc
dec
fbld
mov
mov
bound
aam
ss
test
mov
pop
call
cmp
ss
std
push
bound
jbe
out
or
jl
ds
jmp
imul
mov
lods
xor
inc
in
pop
cmc
std
dec
xor
in
ss
out
and
shl
pop
adc
aam
pop
aaa
and
ljmp
ror
push
sti
sub
and
stos
mov
add
push
mov
sti
daa
fwait
pop
inc
xor
mov
mov
push
and
fwait
inc
pop
lahf
lret
jb
push
inc
mov
mov
rclb
test
add
inc
sub
div
xchg
or
push
xor
and
jecxz
inc
cli
pop
dec
push
mov
addl
loope
emms
fiaddl
cmp
jo
jl
sbb
cmc
push
xchg
xchg
hlt
stc
lcall
pop
sub
lock
add
dec
or
imul
imul
pop
sub
rsm
sub
push
mov
sub
push
adc
adc
frndint
movsl
push
xchg
push
enter
xchg
mov
push
jmp
lock
ficompl
rcr
mov
scas
mov
shll
std
imul
push
cli
pop
es
mov
ja
push
jge
mov
jbe
xchg
bound
addr16
pop
repz
cmp
push
fs
mov
dec
jne
ret
iret
nop
notl
aaa
inc
pop
rorl
xlat
add
push
scas
in
ds
sti
mov
inc
cltd
adc
repz
fnsave
dec
dec
imul
js
mov
lret
fbstp
pop
or
ss
adc
out
mov
or
lock
cmp
shrl
pop
mov
mov
jecxz
jle
inc
push
bound
stos
sub
scas
sti
sub
mov
aam
jnp
add
mov
das
ja
inc
aaa
push
stos
imul
xor
jle
push
movb
cmp
inc
push
scas
cmpsb
inc
cmpsl
stos
mov
scas
pop
xchg
jp
loopne
inc
push
dec
iret
mov
and
sub
bnd
and
cmp
pop
mov
pusha
inc
push
arpl
rolb
mov
shr
mov
outsl
or
pop
ficompl
roll
or
push
imul
jp
leave
push
inc
cltd
sbb
fmulp
loop
lret
and
test
sbb
imul
cmpsl
adc
push
cld
cld
sti
out
dec
cwtl
cmp
movsb
lods
jge
fadds
call
mov
pop
out
cmpsb
insb
shrb
faddl
test
cmpsl
jnp
inc
cltd
repz
into
inc
sbb
pop
bound
in
pminsw
daa
lds
int3
in
xchg
scas
clc
inc
fdiv
xchg
dec
xchg
daa
cmp
shll
arpl
pop
insl
out
or
sbb
push
pushf
add
push
push
push
cmp
xor
dec
mov
jmp
xchg
xchg
les
popa
dec
mov
mov
adc
mov
cld
popa
bound
popf
outsb
jbe
aam
rcrl
out
sarl
sub
push
cmp
pop
xchg
push
repnz
out
jmp
lret
push
int3
lea
mov
les
push
pop
mov
mov
xor
call
rcr
test
and
fcomps
lret
mov
mov
scas
dec
fstp
lods
sub
lret
cmc
push
adc
dec
fistpl
enter
inc
mov
xorl
push
adc
mov
and
and
lahf
lods
jbe
imul
int3
lds
adc
jns
in
push
jmp
sbb
mov
push
and
sbb
cmpsb
xor
xchg
rclb
mov
sbb
ljmp
or
in
in
jecxz
out
repnz
or
shlb
jecxz
mov
mov
fcompl
lock
aam
sbb
xchg
sbb
pusha
jg
inc
push
imulb
cld
push
ljmp
inc
rorb
mov
xchg
das
aam
mov
cmp
lret
adcl
pop
pop
push
inc
std
dec
mov
dec
mov
add
test
pop
adcb
jl
push
jns
cs
mov
aas
arpl
or
cmc
stc
cmp
lahf
insl
aaa
add
stos
jle
test
push
and
in
ret
mov
jb
add
fs
xchg
or
cmp
fcmovb
push
xor
stos
in
test
sub
sbb
cmp
test
mov
outsb
xor
inc
ljmp
mov
stos
mov
or
mov
mov
dec
ja
xchg
xorb
push
outsl
in
test
inc
ltr
xorl
movsb
add
fwait
adc
cltd
testl
shll
xor
xchg
out
popf
cwtl
andl
lds
sbb
bswap
fnsave
adcl
fbstp
sarb
iret
adc
mov
push
jae
cmp
push
xchg
fnsave
cmp
adc
in
jle
push
inc
inc
int
adc
in
xchg
xchg
sbb
data16
jp
imul
cmpsb
out
insl
inc
lea
testb
jg
movsb
sub
int3
xchg
in
inc
sub
add
cmp
inc
cli
test
and
fbstp
imul
shrl
ja
pop
add
imul
popa
out
mov
enter
outsl
dec
mov
xor
jmp
mov
and
sti
lea
push
negl
into
mov
sbb
mov
aas
add
int3
dec
push
inc
sub
lods
call
scas
ret
xchg
inc
xor
jecxz
imul
fwait
mov
jg
and
push
add
and
repz
popf
push
ds
inc
lea
cmp
cmpsb
mov
mov
lret
jl
add
dec
adc
andl
daa
loopne
cmp
dec
mov
adc
outsb
sbb
sub
es
shll
gs
cmp
rorb
jle
lods
mov
pop
jp
and
fucomp
pushf
mov
movsb
adcb
cmp
addr16
negl
or
and
sub
gs
shlb
sbb
xchg
push
fwait
mov
and
outsb
xor
int3
movsb
dec
out
xchg
arpl
xchg
cli
mov
pop
loopne
popf
and
xchg
cltd
push
shlb
lds
sub
mov
add
outsb
cld
pop
sub
pop
into
inc
cwtl
sub
cmpsb
dec
rorl
pop
dec
movsl
imul
divb
inc
in
loopne
ret
or
jne
mov
sbb
mov
out
movsl
arpl
cmp
mov
arpl
jl
mov
push
xor
outsb
movb
call
test
fldenv
andb
dec
ljmp
xor
mov
mov
add
and
das
cli
mov
out
xchg
mov
dec
xchg
filds
xlat
mov
dec
add
jmp
repnz
out
sub
cli
mov
sbb
ss
mov
insl
imul
cmpsb
pop
mov
pop
xor
lcall
mov
pop
fisubrl
scas
xchg
test
aam
pop
push
lods
ds
sahf
gs
mov
xchg
subb
push
rcrl
adcb
and
dec
int
je
ffreep
je
xchg
imul
mov
mov
cltd
mov
xchg
cwtl
fidivs
repz
scas
inc
fildl
sub
adc
in
dec
pop
sbb
inc
pop
fmull
push
xor
loope
ljmp
ret
xor
xchg
into
call
imul
sub
imul
pop
and
jb
lret
test
cmpb
addr16
mov
and
and
fnstcw
adc
add
popf
cli
sbb
out
in
push
xchg
fldlg2
bound
and
fstpt
loopne
fcompl
orl
or
lea
lea
xchg
xchg
or
cmp
dec
mov
jmp
inc
ret
ds
push
cld
test
ja
mov
stc
adc
aas
out
cmp
and
enter
or
xlat
mov
enter
lea
fidivrl
add
fisubrs
in
mov
lcall
insl
mov
mov
into
or
js
cmpsb
sbb
xchg
std
fst
in
xor
mov
dec
arpl
and
fldcw
push
or
ret
mov
xchg
sub
pop
push
mov
push
cmp
cli
or
imul
mov
repnz
lods
ja
fistl
ljmp
out
sub
xchg
filds
xchg
fisubs
dec
inc
imul
aaa
fisubrl
out
mov
or
cs
or
adc
jl
xor
jmp
push
pop
out
ljmp
jg
fwait
data16
dec
mov
cli
push
clc
jecxz
lods
cmp
mov
fcmovb
pop
adc
movsl
dec
xor
mov
sbb
inc
sbb
push
idivl
loop
rorb
stc
fnstenv
dec
mov
outsl
call
dec
fs
mov
push
mov
mov
mov
cmp
jl
push
jg
in
fisubs
in
and
dec
ja
xlat
dec
pusha
mov
jg
in
inc
divb
leave
and
mov
repz
aas
int
dec
rolb
sub
test
ds
push
push
test
lahf
lods
inc
iret
fwait
jecxz
imul
push
sbb
imul
add
push
ret
insw
lods
cli
in
adcb
cli
push
popf
jle
lret
sub
into
xor
adc
sbb
call
call
push
mov
xlat
fwait
dec
int
popf
jle
push
xchg
xchg
sbb
mov
fstl
int3
mov
rcrl
mov
cld
inc
inc
dec
mov
cmp
and
sti
and
daa
mov
adc
cli
sbb
jp
ljmp
cltd
dec
ret
mov
cmc
cmpl
push
js
push
jmp
dec
lea
inc
cltd
jo
fs
loopne
or
cmp
je
cmp
and
inc
lret
cmpsb
cmp
lcall
push
mov
pop
push
ss
and
add
sbb
or
push
mov
pop
lea
cmp
imul
and
bound
or
movsl
mov
loopne
dec
out
mov
in
mov
cli
sarb
inc
int
stc
and
mov
stos
pop
jl
cli
test
arpl
fildl
mov
push
push
jle
pusha
cld
dec
cmpl
mov
scas
repz
in
lods
mov
xor
inc
dec
fwait
sbb
pop
out
sub
cs
ret
es
movsb
arpl
mov
cmp
or
mov
pop
popf
sbb
pop
lock
sbb
int3
test
adc
cltd
or
test
push
loopne
sbb
mov
fwait
inc
mov
setle
sahf
pop
add
cli
mov
cmpb
orl
outsb
outsl
sbbl
fpatan
loopne
mov
cwtl
mov
fiadds
jo
sahf
jle
repnz
jo
lahf
enter
cmpsl
or
daa
imul
fldcw
xchg
loope
out
repnz
sub
in
jnp
cmp
xchg
nopl
pop
ret
ja
mov
cmpsl
aad
fbstp
add
stos
add
rep
fdivs
out
cmp
test
jg
mov
or
cld
sbb
test
or
std
clc
fwait
addb
push
andl
mov
mov
ljmp
or
xor
repnz
lds
fisttpl
mov
mov
inc
out
or
inc
sub
cmp
test
addb
fidivl
pop
pop
inc
gs
push
jbe
xchg
push
lret
pop
pop
fnstenv
or
jbe
inc
inc
mov
jle
push
lds
popf
pop
ficoml
popf
sbb
lods
pop
leave
jp
mov
fdiv
jnp
push
aad
stc
mov
sahf
lcall
add
xor
fisttpl
fcomi
sbb
je
push
mov
sub
popf
ja
pop
jg
sub
dec
jl
int3
ret
mov
xor
loope
cmpsl
adc
jmp
fwait
scas
push
mov
inc
sbb
hlt
or
lods
iret
hlt
int3
pop
pushf
test
int
repnz
mov
pop
cli
loope
push
mov
std
ljmp
push
sti
xor
jmp
cmp
cmp
push
mov
or
in
cmpsb
sub
inc
leave
rcll
lds
filds
fsubr
dec
stos
ljmp
ds
lea
jg
xchg
inc
stc
out
movsl
cwtl
jae
mulb
inc
pop
inc
cmp
mov
jno
fs
and
pop
push
outsb
adc
int
or
mov
cmp
aaa
mov
js
xchg
mov
dec
ret
xor
push
push
mov
mov
sub
or
mov
dec
adc
sub
in
sub
andl
aad
and
dec
add
loopne
sbb
cmp
jb
cmp
repz
adc
add
int
and
and
aam
mov
int
rclb
loope
std
ljmp
pop
out
pop
shrb
lret
dec
cmpsl
icebp
sbb
add
pushf
dec
test
test
nop
cltd
sub
clc
pop
jmp
aad
mulb
fcoml
sub
sbb
or
mov
mov
push
dec
push
ljmp
adc
dec
daa
inc
nop
dec
and
fs
sub
ret
dec
ss
mov
ret
out
in
sbb
idiv
xor
enter
pop
sub
sbb
dec
add
dec
mov
stos
insb
mov
jmp
push
mov
int
loop
stos
ljmp
pop
mov
scas
mov
test
stc
fbld
shl
lret
stos
out
mov
cmpsl
cmc
push
hlt
sub
mov
out
jle
and
imulb
or
pop
inc
cmp
adc
mov
scas
adc
int
fsubs
inc
inc
mov
jo
mov
stos
or
out
sbb
test
jp
pop
add
fisubrl
das
call
dec
sub
iret
push
ja
jge
cltd
cwtl
pop
fs
xor
clc
cwtl
ss
popa
ljmpw
or
mov
mov
inc
dec
incl
movsb
cmp
loopne,pn
sbb
push
mov
mov
scas
xor
lds
aaa
dec
lea
push
pop
int3
jg
pop
add
xchg
lods
fwait
jbe
cmpsb
mov
push
sbb
sbb
lcall
dec
mov
lret
int
adc
std
ljmp
je
pop
or
dec
pushf
jg
fdivs
sub
out
jp
lcall
adc
push
std
lods
iret
mov
dec
dec
and
push
ds
mov
sbb
sbb
push
inc
int3
inc
lahf
and
stc
mov
iret
xchg
andl
xchg
and
xor
mov
es
fs
lcall
dec
leave
lods
mov
mov
mov
sub
mov
cmpsb
cmpsl
adc
mov
scas
jecxz
adc
mov
sub
in
or
test
ss
stos
jo
in
pop
fimull
dec
stos
je
in
adc
test
fidivrl
or
sub
stos
jle
dec
inc
jl
lods
lea
inc
bound
lcall
dec
cmpsl
movsl
test
fistps
dec
mov
fcmovnbe
pop
loop
push
pop
xchg
lea
push
pop
sub
in
and
pop
fdivl
cmp
mov
fiaddl
lret
mov
rcr
inc
pop
lret
das
scas
mov
xor
aad
out
aad
inc
sub
scas
dec
gs
pop
mov
fs
jbe
fadds
loope
xchg
ret
out
xchg
arpl
dec
fnclex
lea
mov
pop
ss
sarb
or
rcrb
mov
cli
mov
es
aaa
pop
and
xchg
fcoms
in
mov
dec
aas
leave
or
mov
add
xor
sub
repnz
dec
fs
xchg
test
into
push
sbb
mov
add
or
lahf
cmc
ss
cli
mov
lret
inc
xchg
lret
mov
jle
dec
cli
pop
lcall
dec
pop
rorb
xor
xor
loop
data16
sbb
in
jnp
or
jnp
stc
lret
idivb
xchg
js
jecxz
mov
aaa
push
ds
negl
mov
out
dec
leave
lret
inc
mov
shll
dec
sbb
sub
xchg
cmpsl
push
add
inc
jno
adc
or
dec
addr16
cmp
negb
add
lahf
inc
push
sub
mov
mov
xor
pushf
loope
inc
mov
mov
sarl
into
or
adc
or
loope
xor
mov
pop
gs
movb
cmpsl
or
xchg
out
addr16
in
ja
pop
pop
mov
sub
loop
scas
das
aad
les
jmp
mov
ret
rdmsr
xchg
loop
sub
mov
or
fptan
or
aad
test
add
ret
subl
sarb
and
or
inc
dec
adc
adc
pushf
jb
mov
sub
leave
add
fucomp
popa
or
cmp
js
cli
sub
sarl
loopne
push
cmp
mov
jl
sub
inc
daa
inc
mov
ror
mov
andl
jbe
push
rorl
or
leave
andl
pushf
dec
mov
les
mov
cltd
fbld
inc
pop
test
fiaddl
mov
pop
out
cli
repz
jb
pop
mov
cmp
in
lea
leave
inc
lcall
movsl
pop
out
cld
pop
push
les
repz
in
repnz
mov
in
mov
mov
or
call
jns
shrb
cli
mov
pop
rclb
cli
jmp
xor
jbe
xor
mov
jbe
in
sub
inc
shr
lret
fs
mov
xchg
dec
es
in
jmp
fidivrl
xchg
test
scas
stos
sarl
repnz
stos
mov
jne
mov
sub
adc
loopne
adc
cmp
or
xor
and
in
lock
js
or
ret
jno
xchg
jmp
cmp
shll
jl
leave
ljmp
ds
sti
mov
int3
repnz
push
or
test
imul
repnz
jnp
fstl
ds
adc
xchg
arpl
jo
pop
test
jecxz
mov
pop
out
push
mov
js
dec
pop
bound
inc
inc
mov
sbb
and
dec
ss
outsb
or
mov
int
mov
or
jle
dec
mov
push
shrl
mov
jl
and
mov
ror
notl
mov
mov
pop
adc
xchg
bound
inc
ss
inc
push
in
mov
pop
push
sub
fisubl
pop
or
mov
inc
cli
cmpsb
jge
rolb
lret
out
jg
xlat
adc
inc
cs
add
test
sub
dec
inc
or
lret
int3
adc
push
test
shrl
aam
cmp
and
testl
les
and
dec
dec
sahf
jns
outsl
pop
sbb
fisttpll
test
adc
mov
pushf
fwait
lcall
fwait
sub
dec
add
mov
pop
inc
loop
jb
shl
jo
fistpl
inc
mov
lcall
mov
insb
test
dec
dec
mov
jge
sub
cwtl
sar
cmpl
lods
out
stc
mov
andl
pop
sub
hlt
jp
orb
sarl
aas
mov
test
xor
in
pop
popf
and
int
popf
imul
cli
cmp
xchg
les
shll
xchg
mov
xor
adc
push
xorl
jle
sub
std
aaa
repnz
outsb
jae
lahf
cmp
mov
and
and
imul
push
dec
loope
fs
jo
inc
push
mov
gs
fstp
adcl
cld
or
xor
push
ss
loop
inc
lcall
test
out
push
shr
dec
push
jo
mov
push
inc
pop
mov
out
subl
mov
and
push
mov
dec
out
popw
and
lret
pop
fstl
mov
movsb
adc
jecxz
pop
cli
cmp
inc
xchg
push
daa
cmp
test
popa
sub
jecxz
pop
or
scas
ret
jo
and
imul
sbb
lds
ficoml
jmp
shl
ret
mov
rcrb
int
mov
xchg
rol
adc
sub
jns
mov
adc
push
adc
jno
es
lock
and
sbb
pop
idivb
xchg
sub
jne
push
inc
pop
in
add
fbld
lcall
adc
push
in
sbbl
dec
inc
gs
repz
or
orl
rol
cmc
scas
dec
mov
ljmp
inc
ficompl
shr
add
hlt
loop
scas
and
movsl
imul
dec
inc
fwait
push
dec
es
test
dec
in
mov
mov
cli
xor
repz
fnstcw
dec
lcall
mov
shlb
sarl
mov
and
jecxz
mov
pop
roll
jae
dec
addr16
lret
inc
cmc
dec
out
pop
and
sbb
mov
popf
xchg
push
icebp
aas
push
add
lea
int
es
mov
inc
xor
sbb
dec
lea
xor
adc
cli
inc
xchg
mov
lods
sbb
fwait
or
fucom
leave
in
lret
cmc
mov
fwait
push
mov
in
mov
mov
stc
imul
mov
mov
sbb
lods
lret
mov
repnz
repnz
and
or
sub
nop
inc
adc
int
bound
mov
insl
popf
mov
and
sub
sub
pop
mov
insb
sub
shl
insl
add
dec
aam
les
jmp
mov
add
cmp
fs
pop
movsl
inc
xor
sub
sub
xchg
lret
addb
iret
lret
ljmp
shll
imul
mov
xchg
in
cs
aas
in
jnp
sbb
push
andl
ret
pop
mov
sbb
cltd
push
roll
pop
std
jecxz
test
dec
icebp
sbb
das
fwait
mov
pop
cwtl
xlat
out
lahf
enter
sub
or
sbb
cli
add
enter
test
add
mov
sbb
pop
jne
in
jle
mov
aad
or
fadd
fwait
in
ret
dec
lds
icebp
loope
push
cmpsb
adc
aaa
stc
xchg
adc
out
daa
scas
and
or
sarl
add
xchg
cmpsb
dec
test
ret
xchg
fstpt
iret
shr
jo
mov
aad
aad
loop
out
lahf
push
jl
fcoms
mov
leave
ret
cld
xchg
outsb
mov
jmp
jbe
nop
mov
and
sub
cld
inc
or
mov
mov
mov
sbb
out
movsl
pop
push
icebp
sbb
jl
jg
add
inc
inc
xchg
lret
iret
dec
outsl
bound
repnz
and
jnp
push
sbb
pop
mov
xor
sbb
lods
pushl
mov
dec
test
or
jle
std
int
mov
mov
dec
fnstcw
int3
cwtl
inc
jmp
fnstsw
std
cwtl
outsl
or
mov
out
and
pushf
fdivrl
mov
lahf
shrl
fs
lcall
cmp
jecxz
cmp
inc
mov
ljmp
sbb
sub
orl
mov
and
fnstcw
lret
cmp
pop
mov
pop
xor
push
mov
movsl
call
mov
lahf
aam
flds
lret
and
ds
imull
sub
into
push
nop
adc
adc
and
cmp
xchg
sbb
mov
jb
sbb
xchg
sbbw
add
lock
clc
out
cs
mov
loopne
test
bnd
fs
jae
push
in
fucomi
sub
xlat
mov
pslld
lds
andl
xchg
mov
pop
lahf
test
push
dec
loop
mov
loopne
sbb
ja
outsb
mov
imul
cmp
enter
xlat
pop
cmp
shlb
daa
add
ljmp
sub
lock
test
jp
add
rorb
ljmp
adc
mov
stos
cmpsb
push
int
gs
lcall
enter
push
insb
daa
test
jne
scas
pop
xorl
pop
outsb
cltd
divl
mov
adc
add
jnp
sbb
push
leave
fs
int3
cli
gs
xlat
lods
mov
dec
shl
mov
and
dec
xor
push
jge
mov
sub
mov
mov
in
ss
dec
push
mov
cmp
and
out
jno
scas
stos
xor
stos
xor
xorb
adc
out
mov
ss
and
hlt
mov
test
les
mov
adc
xchg
dec
and
add
ret
xor
sbb
xchg
fucomp
pop
mov
xor
adc
pop
subb
lret
dec
xchg
roll
shlb
add
insb
lods
aam
adc
iret
popf
es
iret
scas
fsubs
in
inc
lods
mov
js
adc
test
out
stos
test
jge
mov
jmp
mov
ret
testl
cltd
and
fnsave
hlt
dec
and
and
xchg
dec
adc
ljmp
push
mov
push
mov
fbstp
jns
loope
lcall
fcmovb
imul
fbld
xor
enter
mov
addr16
out
pusha
xor
cmc
cmp
cmc
push
xor
rcrl
addb
push
inc
sbb
ja
adc
lahf
jb
out
xchg
sahf
bnd
cmp
sub
into
push
in
dec
cmpsb
cltd
jae
adc
sub
pop
adc
jb
cmp
mov
leave
test
pop
inc
insb
loope
push
cmp
shlb
jg
and
mov
dec
add
pop
ficompl
add
outsl
fdivrl
jp
mov
divb
outsl
jg
sbb
out
ja
out
mov
fsts
adc
jbe
and
push
dec
ss
mov
std
jecxz
add
leave
pop
cmpsb
inc
psrad
lcall
or
popf
adc
push
and
or
inc
sbb
nop
mov
scas
shlb
xchg
add
iret
mov
inc
movsb
icebp
js
out
fistps
or
pop
in
push
fildl
cmp
sub
adc
lea
out
divl
cmp
imulb
imul
push
lcall
fstpl
fadds
mov
fwait
cs
pop
mov
sbb
or
inc
push
xchg
xor
dec
pop
inc
movsb
adc
dec
cs
mov
push
dec
jns
push
fbld
add
int
inc
cltd
lods
cmp
dec
lcall
test
loop
mov
inc
xor
xor
mov
jmp
jnp
xchg
jmp
fidivs
push
mov
ss
push
dec
inc
pop
cld
jl
dec
sub
bound
mov
scas
fucomp
push
mov
jne
jecxz
mov
sbb
mov
fidivrs
sbb
pop
sbb
cltd
inc
jbe
mov
jo
rcll
test
inc
popf
cltd
insb
arpl
leave
xor
pop
add
stos
mov
jmp
scas
xor
fwait
xor
mov
aam
sbb
mov
imul
adc
and
inc
aaa
jmp
fcmovnb
das
or
lods
addb
ja
mov
push
cld
rcrb
cmp
pop
pop
inc
fnsave
pop
xchg
loopne
cmpsl
test
rcrb
icebp
push
jge
mov
adc
add
lcall
mov
fcmovnu
sbb
js
icebp
push
pop
lret
pop
cmc
scas
and
call
xor
mov
adc
ret
mov
xchg
adc
pop
out
aas
test
and
push
stos
dec
test
sahf
enter
jne
xorb
xor
lock
jne
jecxz
aas
jbe
cmpb
ficoml
fistpl
add
pusha
xchg
xor
daa
push
mov
cmp
pop
ss
inc
xor
sub
sbb
movsb
mov
dec
notl
inc
arpl
fstps
pop
enter
movlps
and
test
lcall
jno
rcrl
out
sbb
xchg
bound
xor
mov
add
jbe
cli
das
cmp
pop
push
mov
in
imul
pop
gs
mov
xchg
test
iret
mov
mov
gs
or
dec
repz
jmp
dec
pop
notl
lret
ljmp
dec
faddl
ret
fwait
pusha
mov
ljmp
xchg
push
or
in
cmp
popa
ja
shl
pushf
fsubr
sbb
ret
dec
into
sub
push
pop
inc
inc
popa
movsl
ljmp
inc
adc
xor
push
in
lcall
das
iret
scas
jecxz
dec
inc
cmpsb
mov
lahf
enter
cli
push
jnp
add
xchg
out
cmp
imul
je
push
hlt
or
add
dec
or
pop
stc
xlat
ret
ficompl
stc
mov
popf
push
fildl
mov
out
cltd
repnz
movsb
neg
sbb
adc
jne
mov
mov
cli
cmp
or
adc
xlat
cmpsl
jae
jecxz
or
pop
inc
pop
daa
cli
xor
mov
cmp
mov
aas
jle
mov
dec
fcoml
ret
fbstp
add
cmp
inc
ds
lret
mov
push
or
push
dec
push
lock
mov
sub
gs
mov
dec
lcall
mov
pop
dec
xchg
add
out
sub
mov
sahf
inc
cmp
stc
dec
or
rclb
push
sahf
cmp
shll
scas
adc
cmp
fnstsw
jbe
ja,pn
push
int3
mov
and
push
in
inc
pop
addr16
add
rolb
mov
mov
pavgb
mov
int3
mov
mov
push
or
decb
or
incl
ret
fnsave
dec
mov
inc
std
xor
inc
mov
outsl
add
mov
mov
mov
icebp
repnz
jbe
pop
in
xchg
lcall
or
and
test
jb
outsb
popa
dec
fwait
inc
jle
and
ret
enter
outsb
push
aam
cli
or
aas
pop
in
inc
xor
aad
add
and
mov
jmp
pop
leave
es
mov
inc
add
int3
push
adc
outsl
mull
and
cmc
jecxz
mov
cwtl
stos
subl
test
cmp
inc
stos
inc
sub
fwait
ljmp
inc
jl
mov
pop
fucomi
mov
dec
mov
xor
sbb
adc
es
scas
lods
xchg
mov
and
xchg
dec
mov
testl
mov
mov
add
icebp
in
and
les
shr
or
rorb
fstpt
js
jne
mov
dec
jmp
ljmp
out
cld
fisttpll
loop
fstl
sbb
push
lahf
cmc
and
in
sti
xor
cmpsl
xorl
adc
or
ja
pop
push
fsubp
pop
mov
int
int3
lret
in
outsl
sarb
andl
push
scas
test
adc
jmp
add
or
dec
arpl
inc
outsl
add
cwtl
in
sub
je
mov
sbb
mov
jmp
rcrb
sbb
ss
cmc
jl
aaa
les
push
cmp
movsb
adc
dec
test
and
popl
stos
adc
scas
dec
xor
xor
ret
and
bound
and
push
ja
ficoms
push
adc
or
xchg
inc
xchg
das
xchg
cmpsl
sbb
cmp
lods
je
sti
cmp
mov
cmpsl
jecxz
pop
fwait
add
xchg
aas
cmpsl
jle
fwait
and
setne
out
xchg
jae
repz
repnz
mov
subb
jge
lods
insl
scas
in
push
cmpsl
icebp
mov
xor
xchg
add
in
jb,pt
jmp
popa
sbb
ret
aad
jno
mov
push
pop
jmp
mov
sub
scas
pushf
stos
sub
cltd
test
inc
imul
and
mov
push
xorb
outsb
pop
mov
in
inc
cld
lods
les
mov
les
push
fildll
fs
pop
sbb
push
jmp
pop
xchg
jge
dec
and
pop
leave
push
xchg
rcr
xor
jno
pop
lret
adc
test
mov
pop
mov
test
cmpsb
dec
ja
lea
xchg
pop
push
cld
pop
fisubrl
repnz
xchg
sub
lret
or
xchg
ret
add
sub
fldl
jae
out
iret
aaa
repnz
dec
les
mov
sbb
lea
mov
sti
dec
test
imul
xchg
push
or
mov
mov
stc
iret
mov
and
mov
in
lret
mov
sbb
in
mov
lret
addl
bound
fcomip
fcmovnu
mov
xor
cmp
and
cli
imul
test
jl
ror
cmp
push
cmc
xor
jno
lahf
inc
idiv
inc
movsl
or
or
ss
dec
add
movsl
mov
ror
adc
dec
aad
das
addb
rcrl
lds
add
in
ret
jno
mov
push
cmp
xchg
push
dec
out
jg
add
xor
call
xchg
mov
jle
pop
cmp
sub
imul
sarl
cmp
arpl
or
popf
dec
shll
dec
stos
adc
in
sbb
xor
add
pop
and
mov
mov
rorl
sbb
rcrl
testb
push
movsb
push
inc
test
scas
rorb
pusha
xor
and
popf
mov
fwait
in
push
sub
jns
cmp
inc
daa
cmp
xorb
in
add
mov
cmc
xchg
push
jge
subb
lods
cmp
mov
bound
shll
xlat
repnz
in
in
inc
push
jle
fisubl
cld
shlb
rorb
scas
sbb
nop
sti
aad
pop
jecxz
pop
mov
dec
mov
cmp
and
int
fadds
stos
lds
ffreep
out
ret
push
loop
or
inc
scas
fdivrl
in
sub
sti
xor
jo
cld
mov
int3
lcall
push
mov
mov
inc
xlat
push
movsl
ror
mov
into
imul
lret
add
nop
sbb
rol
movsl
xor
add
xor
sahf
loope
or
cld
xor
mov
pop
lds
imul
lock
js
repz
xchg
add
rorb
and
out
xor
fisttpl
dec
cld
mov
lds
push
cmp
add
inc
push
inc
insl
dec
mov
fists
jecxz
test
add
jl
insl
push
ficompl
mov
mov
popa
stos
cmpsb
dec
int
mov
add
sub
ljmp
addr16
mov
adc
int3
push
mov
popf
or
ficoms
cmp
imul
mov
rcrl
cmp
mov
or
mov
rsqrtps
add
lret
cmpsb
test
mov
dec
add
adc
out
cmp
push
mov
xor
adc
lods
stos
mov
or
jg
add
js
shlb
dec
xor
fistps
stos
imul
push
jle
lds
cld
mov
daa
mov
cwtl
mov
rorl
or
add
bound
ficoms
in
xchg
sbb
push
jo
or
lods
xchg
xchg
cmp
lods
sbb
fs
inc
imul
cmp
mov
faddp
pop
ds
bnd
xchg
inc
add
mov
mov
push
cltd
in
add
inc
jg
mov
jmp
pop
fimull
and
fbld
jge
hlt
xlat
insl
mov
pop
and
mov
clc
insl
dec
sub
scas
jle
cwtl
xor
ljmp
fsts
stc
mov
std
cltd
mov
xor
fs
fisubrl
roll
shl
ljmp
cmovs
les
and
add
adc
testb
dec
stc
mov
ret
in
sub
enter
jbe
mov
lret
imul
xchg
out
pop
pop
bound
dec
mov
stos
insl
push
daa
arpl
int3
dec
jno
cmpsl
repnz
scas
adc
cmp
push
sub
xor
cmc
push
dec
andl
jmp
rol
jae
imul
adc
jns
adc
cld
loope
mov
cmp
cmc
add
cwtl
pop
cli
and
mov
testb
fmul
sub
pop
flds
imul
lea
aad
fwait
nop
pop
ja
dec
sub
xchg
inc
sub
add
ret
adc
lret
popf
pop
mov
stos
cli
or
lock
enter
adc
daa
sahf
call
daa
sti
nop
mov
stos
sub
fsub
arpl
mov
arpl
in
sbb
scas
mov
inc
mov
mov
adc
mov
test
inc
imul
mov
pop
cli
push
int3
xor
in
mov
jmp
push
add
test
mov
in
mov
stos
add
sbb
sub
loopne
das
sbb
enter
mov
dec
scas
cmp
mov
adc
jg
pop
fmul
aas
stc
push
push
data16
push
and
repz
pop
push
mov
push
sahf
inc
xlat
push
sti
sbb
jns
xchg
adc
add
mov
leave
xor
mov
data16
mov
xchg
pop
mov
int3
mov
or
insl
push
xor
imul
xor
aaa
loop
xor
cli
dec
sti
xor
int3
std
add
ret
faddp
mov
rolb
sbb
pop
ljmp
adc
jae
loopne
aam
stos
mov
pop
inc
push
or
mov
movsl
add
jmp
mov
ret
fldcw
cmp
cmp
aaa
mov
and
cmp
cmp
xchg
std
scas
roll
jns
dec
sbb
insl
lds
jmp
jmp
xchg
adc
add
fldt
cli
notb
xor
xor
xor
inc
mov
mov
enter
sti
push
cmc
stos
scas
mov
out
dec
mov
jo
negb
cwtl
inc
jbe
adc
lock
and
jp
lods
sub
popl
jmp
dec
lahf
mov
insl
incb
cmpsb
dec
jo
iret
sbb
je
mov
and
inc
pusha
inc
repnz
test
loop
test
mov
jge
jle
scas
mov
stos
loope
xchg
jl
aaa
pop
jb
js
cwtl
fldenv
jecxz
ret
mov
push
xor
push
movl
fsubrp
and
jge
popf
cld
je
xchg
jp
jl
mov
xchg
cmp
aam
cmp
sbb
or
lea
xor
xor
mov
arpl
mov
push
movl
testb
repz
push
inc
mov
push
stos
jnp
and
add
jo,pt
cmp
and
pop
fldlg2
push
dec
mov
cmp
test
jl
sub
jecxz
loop
push
addr16
xor
loope
in
and
pop
pushl
mov
jae
fists
ss
cmpb
aam
arpl
adc
inc
mov
adc
pop
or
mov
cmp
xor
repz
ror
jnp
dec
or
loop
jg
mov
inc
inc
daa
or
ss
mov
xlat
hlt
xor
cld
pop
rcll
xor
inc
mov
xchg
fistps
loop
mov
inc
ds
xor
push
stc
loop
xlat
loopne
iret
negl
dec
sarl
scas
pop
mov
icebp
cld
aam
jecxz
sub
pop
incb
lahf
cs
pop
cmp
les
scas
test
ret
push
aam
scas
sub
std
lock
addr16
jp
arpl
xchg
or
sbb
jae
xchg
orl
vsubss
mov
fdivl
mov
mov
xchg
test
push
mov
fbld
sub
adc
mov
inc
sub
and
lock
fildll
movlps
mov
inc
pop
sub
mov
pop
xchg
mov
mov
sub
push
aam
xor
ss
xchg
into
or
into
mov
jg
push
adc
rcr
sbb
ja
pop
test
stos
mov
loop
ds
inc
loope
dec
xchg
xor
sbb
sbb
in
xor
inc
or
in
cmc
cld
cmpsb
loop
sub
adc
cmp
test
sbb
mov
add
shl
adc
lret
jno
aaa
dec
pop
push
push
je
gs
adc
mov
pop
int
jns
das
lea
cmp
or
mov
ss
push
in
cld
mov
adc
std
push
push
xchg
push
addb
lret
arpl
xor
loope
mov
cld
mov
cld
nop
iret
mov
jns
nop
fstl
pop
pop
push
xchg
push
jmp
mov
push
fbstp
ficompl
mov
outsl
addl
xlat
xchg
inc
les
xchg
pusha
ret
addr16
shlb
hlt
mov
xor
sub
jns
aas
ret
test
jle
fimuls
stos
xor
or
into
aas
les
sti
cmp
mov
and
mov
nop
dec
movsl
orb
pop
and
fwait
cmp
sub
push
ret
or
addr16
testl
push
push
mov
sub
adc
loope
jo
repnz
xchg
lret
outsb
jae
pop
dec
dec
fbld
das
mov
js
nop
jmp
push
test
or
push
in
sub
cmp
inc
mov
sub
mov
dec
cmp
sub
or
inc
push
mov
xchg
mov
inc
or
sbb
mov
pop
cmp
adcl
mov
push
out
or
cs
and
mov
imul
pop
pop
mov
add
add
outsb
push
mov
in
sub
inc
add
jne
outsb
adc
xchg
test
icebp
pop
and
stos
push
xor
mov
and
push
dec
adc
insl
bound
xchg
add
cld
clc
add
mov
dec
cmp
loop
int3
cmp
jmp
mov
rol
mov
xor
out
les
daa
mov
dec
fwait
mov
jle
stos
incb
mov
xchg
push
daa
xchg
inc
popl
sub
std
imul
fucom
aam
into
push
aaa
mov
mov
movlps
cmc
inc
loopne
jne
cmp
stos
int3
xor
inc
int
ja
imul
ss
mov
sub
and
xchg
jp
out
sbb
inc
xchg
sbb
fmul
jnp
jecxz
mov
shl
cmovne
outsl
ds
adc
inc
lds
mov
orb
int3
shlb
push
loopne
dec
push
stos
lea
xor
sub
mov
inc
out
xor
scas
push
and
cwtl
add
or
dec
mov
aad
rcrl
mov
sbb
daa
dec
dec
jecxz
push
push
pop
adc
push
ret
lods
outsl
push
andl
ret
loope
inc
or
or
and
fdivr
push
xchg
mov
in
lods
cs
inc
jmp
mov
jae
sbb
cmp
sti
push
cmp
lock
fbld
repnz
mov
jae
test
lods
stc
cli
mov
pop
mov
das
cmp
ret
or
adc
mov
mov
in
scas
and
mov
lea
movsl
mulb
mov
out
repz
xchg
aad
enter
imul
push
pop
jle
into
inc
testb
sub
outsb
jge
mov
aad
dec
popf
add
repz
stos
outsl
movsl
jns
sahf
bound
test
ds
imul
or
test
push
lock
mov
push
inc
cmp
adc
out
loop
int
adc
mov
movsb
movsb
xor
sbb
push
aad
fistps
push
dec
cmp
in
repz
rcrl
movb
shll
push
rol
mov
insl
negl
mov
loop
insl
cmp
sbb
aaa
cmpsb
xchg
sub
frstor
push
int
xor
stos
popa
out
repnz
sub
std
sti
popa
in
xchg
mov
add
or
aad
adc
loop
sub
cmpsb
and
sbb
or
mov
divl
push
outsb
fdiv
pop
out
imul
lea
stos
stc
xchg
and
pop
push
mov
push
mov
sub
add
add
notb
dec
orb
aam
sar
and
xchg
imul
sarl
in
sti
sbbb
mov
hlt
and
mov
and
out
cmp
xor
xchg
clc
imul
mov
sahf
xchg
mov
inc
xchg
stc
inc
adc
mov
sub
aam
sahf
nop
test
xor
mov
adcl
xchg
push
inc
mov
pushw
mov
repz
int
lret
dec
add
and
adc
mov
repnz
cmp
call
xchg
int
and
mov
clc
adc
pop
ss
push
cltd
fimuls
xchg
sub
mov
ret
sbb
xor
insb
jecxz
mov
pop
call
jno
in
xchg
loope
add
jle
jl
enter
sbb
mov
fistl
fldl
push
sbb
sub
dec
data16
inc
xchg
or
aas
lret
adc
cwtl
cmp
dec
ret
push
in
ret
mov
xchg
orl
adc
pushf
enter
js
sub
jne
xor
or
pop
jo
push
and
ja
cltd
jecxz
mov
adc
aaa
ja
cmp
jle
and
dec
nop
out
out
out
not
cmc
pop
mov
xor
sbbb
popf
out
jb
jbe
xchg
lret
out
inc
ljmp
fcompl
movsl
mov
and
loop
mov
movsb
push
movsl
dec
std
and
fs
mov
lcall
xorl
adc
or
adc
mov
mov
imul
lods
mov
out
inc
jecxz
insl
add
or
clc
inc
xlat
test
and
mov
inc
in
pop
lret
mov
cmp
out
jle
arpl
stos
sbb
jbe
or
mov
ret
mov
jecxz
adc
push
subl
in
and
and
lods
push
sbb
out
insl
js
push
es
mov
sbb
fildl
jb
ja
xor
pop
inc
pushf
mov
jle
test
cmpsl
lds
cmp
mov
mov
adc
nop
pusha
bound
mov
test
mov
fcomp
jo
mov
mov
loopne
or
sbb
mov
jbe
int
sbb
std
push
hlt
lret
addl
fmull
jne
hlt
repnz
loop
inc
mov
arpl
add
inc
js
fnsave
pop
movsl
in
inc
mov
clts
movsl
outsl
push
dec
in
xchg
jb
scas
and
scas
jbe
fwait
add
ja
sbb
insl
inc
xor
xlat
xchg
pop
loop
fstpl
xchg
pop
lret
jle
gs
sahf
in
int
and
and
stos
xor
mov
and
lahf
lods
add
pop
add
mov
jne
pop
push
shll
filds
cs
repnz
mov
cmpsb
pop
call
and
xor
add
mov
and
lahf
push
push
int3
dec
or
not
mov
or
sbb
cmc
mov
add
adc
push
fbld
inc
scas
inc
xor
jno
jg
jb
pop
nopl
push
jns
mov
inc
nop
jb
pusha
call
vmovaps
dec
cld
jb
and
ffreep
add
pop
movb
sbb
or
xchg
cmc
dec
xchg
mov
mov
pop
adc
mov
or
cltd
sbb
enter
inc
push
aaa
xor
or
mov
push
lods
dec
repz
mov
jae
fdivr
or
jg
pop
fwait
lcall
mov
call
or
adc
mov
std
sub
aaa
and
add
adc
lcall
das
dec
sub
sub
outsl
lcall
adc
cld
out
mov
repz
or
fwait
shlb
inc
and
mov
dec
inc
daa
mov
or
cmc
stos
cmpsb
fiaddl
je
and
dec
fucomp
inc
scas
pop
stos
adc
add
xor
shr
push
jne
enter
rcrb
repnz
std
add
sti
cmp
icebp
cmp
out
pop
insl
clc
sub
cld
ja
sub
mov
jge
push
test
mov
ret
cs
lcall
mov
xchg
pop
pop
addr16
es
ficomps
sbb
xchg
int
jo
sub
ror
push
sbb
jnp
add
xor
lret
mov
scas
fbld
ds
hlt
dec
fwait
loopne
stos
out
fwait
mov
das
xchg
dec
and
sub
jecxz
mov
inc
lods
ret
mov
jl
lcall
xor
jg
fistps
std
fnstcw
cli
sahf
jae
frstor
mov
fmul
inc
mov
pop
xchg
adc
pop
dec
loope
jle
pop
push
mov
out
and
jle
xchg
outsl
push
xor
rolb
cmc
sti
pop
test
xor
adc
sbb
sub
pop
lret
xlat
mov
pop
mov
cmpsb
int3
jl
sti
cmpsb
push
pop
xor
lea
stos
ds
fdivp
ret
push
push
hlt
or
inc
pop
test
imulb
push
add
jno
xchg
addr16
subb
lock
jno
std
mov
inc
jmp
imul
sbb
arpl
aaa
inc
push
movsb
iret
sbb
add
add
test
and
sub
call
mov
fcmove
dec
pop
cmp
in
xor
jnp
ss
imul
lcall
mov
sub
dec
or
mov
cmc
or
xor
sub
mov
stos
ds
cmp
dec
arpl
in
xor
cli
loop
in
movsl
jecxz
dec
mov
inc
dec
dec
jne
repnz
dec
fwait
std
subb
inc
push
icebp
nop
cmp
gs
mov
rorl
add
sahf
inc
aas
and
fs
fnsave
push
std
jo
fbld
inc
sub
ret
fwait
jle
add
fwait
mov
push
int3
jle
jp
jmp
sbbl
or
scas
pusha
sti
pop
sbb
insl
push
rorl
insl
clc
mov
addr16
push
ret
aam
mov
jg
lahf
mov
sub
xchg
mov
in
lods
mov
lret
push
push
lret
and
insl
int3
mov
dec
and
leave
inc
push
xchg
sarl
in
cmp
lahf
repz
pop
iret
test
mov
pop
fs
sub
fmull
fnstcw
sub
test
cltd
inc
sbb
std
into
loopne
xchg
cmc
xor
fstpl
subl
rorl
cltd
mov
out
out
mov
icebp
add
in
scas
mov
iret
out
jg
lret
stc
jmp
ror
lahf
dec
aad
push
push
dec
jmp
cmpsl
pop
or
push
mov
pop
insl
jns
lret
in
fistl
subl
adc
lcall
mov
xchg
rorb
loope
mov
insl
inc
fimull
jne
or
xchg
inc
add
and
enter
loop,pt
nop
nop
mov
inc
loope
or
jg
rorl
out
mov
int3
popf
fidivl
sub
repz
lds
scas
xor
cs
outsb
movsl
mov
jnp
xchg
mov
jno
out
lcall
popf
dec
testl
test
mov
subb
sti
add
or
shr
mov
inc
rcr
out
pop
adc
adc
movsl
fs
or
outsl
dec
fistpl
jecxz
or
mov
lea
add
into
push
sar
jne
pop
mov
inc
stc
ja
mov
repnz
lret
test
push
mov
addr16
sbb
add
sub
xor
addl
mov
adc
cmp
xor
test
push
notb
xor
lret
nop
jnp
test
push
inc
mov
mov
add
mov
leave
jns
pop
loop
add
popf
or
loope
mov
sbb
fwait
dec
enter
je,pt
and
scas
mov
loopne
test
mov
loope
and
daa
mov
mov
pop
push
lahf
push
std
mov
cld
mov
fcmovu
sub
mov
fs
adc
adc
push
mov
adc
clc
imul
sti
repnz
sub
or
pop
out
js
push
xor
std
xlat
rcll
cmp
sahf
xchg
cmp
les
and
mov
into
ret
mov
push
in
fldcw
jns
test
sti
stos
rclb
lds
xchg
in
repz
or
mov
push
sub
mov
pop
mov
ja
aas
std
fbld
sub
lahf
ret
ret
jmp
scas
or
pop
dec
bound
stos
mov
pusha
jg
int
mov
out
or
jecxz
out
gs
imul
cmpsb
movsl
ds
imul
mov
and
jns
or
das
inc
and
fiadds
adc
sbb
scas
aaa
out
or
xchg
dec
pop
push
add
test
mov
mov
movsb
in
arpl
sbb
pop
lret
xchg
pop
stc
mov
or
xchg
mov
stos
cmp
cmp
mov
mov
movsb
mov
dec
pop
lods
xor
sub
fxch
or
shlb
js
xchg
pop
cmpl
mov
movsl
pop
push
insb
out
sub
test
mov
je
stc
lcall
in
mov
mov
repnz
pushf
adc
add
mov
leave
fwait
movb
dec
sbb
repnz
mov
xchg
mov
mov
rcl
adc
sub
cld
mov
jge
loop
scas
xor
icebp
mov
mov
xor
cmpsl
int
sahf
jno
ss
inc
test
add
std
inc
es
idivb
repnz
orb
jle
mov
lds
test
add
lcall
lock
sbbb
cmp
int3
push
add
jno
jne
shl
sti
push
or
and
je
mov
adc
ss
mov
in
xchg
cmp
in
aam
jp
sbb
lea
lcall
pop
ror
inc
push
in
es
mov
and
fisttpl
leave
jp
movsl
scas
je
cmc
lret
xchg
jle
jecxz
jmp
out
into
push
pop
mov
xchg
subl
shlb
pop
movsl
fcmovne
cmp
cmpsl
les
mov
stos
mov
and
pop
inc
sub
xchg
imul
xchg
jl
jnp
and
jmp
lea
addr16
mov
mov
inc
push
push
mov
add
ret
sbb
ss
push
or
js
pop
outsb
fcomps
sbb
int3
mov
push
lods
shlb
int3
fidivs
out
loopne
test
mov
imul
andl
das
lea
hlt
mov
xchg
mov
cmp
rcrl
mov
idivb
xchg
xchg
and
rcrl
sub
adc
sti
pop
stos
xchg
inc
in
jb
sbb
cmp
int3
data16
mov
jno
or
inc
pop
mov
pop
or
int3
nop
lods
mov
lds
jecxz
call
cs
movsb
sahf
addl
iret
xor
testl
bound
mov
cli
xchg
test
jo
sbb
out
ljmp
jns
pop
cltd
arpl
mov
cmpsb
cmc
adcl
add
lods
jne
xchg
iret
cmp
mov
jnp
jbe
cltd
xchg
loopne
insl
jl
outsl
iret
mov
dec
in
cmpsl
pop
push
inc
xor
js
popf
and
push
aaa
mov
adc
mov
inc
and
xor
dec
jno
jp
insb
add
jge
enter
mov
movntps
lret
dec
es
cmp
push
xor
test
repz
iret
neg
das
shll
push
adc
pop
inc
fcmovbe
mov
aam
ret
movsl
jle
fs
daa
mov
sub
xchg
mov
jmp
push
ljmp
lds
fdivs
pusha
test
xchg
sub
cmpsb
mov
jp
sub
xor
xlat
sahf
out
nop
dec
jge
jecxz
nop
aaa
in
mov
inc
push
push
mov
xchg
xor
xchg
stos
adc
iret
inc
pop
jecxz
fisttpl
and
popf
inc
rolb
rcl
iret
popf
inc
push
cmpsb
mov
jl
insl
push
xor
lods
jbe
stc
push
fucomp
mov
jb
adc
test
test
fisubrs
add
stc
popl
sbb
cmp
jge
fdivs
inc
dec
into
jecxz
shrb
aad
addr16
xchg
ljmp
push
jmp
sarb
and
mov
push
out
repnz
jl
ds
call
rolb
fildll
dec
jmp
push
das
xchg
out
mov
stos
stc
dec
lds
dec
inc
mov
push
addr16
jecxz
sbb
mov
sub
aas
mov
int
mov
outsl
imul
rorl
rcll
ret
aas
outsl
xchg
ret
orl
dec
out
insb
insl
push
dec
sub
cmp
jge
in
call
and
movsb
addl
fdivs
sbb
data16
in
inc
hlt
arpl
ss
sbb
out
jg
xchg
push
pop
popa
fdivrp
jle
inc
loop
lret
cltd
cmp
sbb
or
movsb
pushf
out
dec
es
xor
jb
cmpsl
movsb
stos
or
mov
cmp
test
sar
jo
fldt
xchg
pop
shl
in
jp
lahf
fldl
mov
cmp
lods
push
test
ret
add
adc
dec
mov
mov
fbld
adc
stos
pop
sub
inc
arpl
xor
rorb
out
test
faddl
in
or
leave
in
cmp
leave
xlat
or
leave
rorb
ror
or
rol
fmuls
cmp
fs
mov
fwait
or
sarb
cld
mov
sbb
sub
pop
sub
jo
frstor
lods
stc
lahf
popa
gs
mov
dec
cltd
xchg
out
jle
jecxz
notb
les
jne
push
ret
js
cli
or
mov
int3
mov
popf
bound
fmul
daa
negb
cmpsl
imul
sbb
push
movl
pusha
dec
arpl
mov
jle
dec
les
inc
sub
sarb
pop
ss
pop
and
mov
push
cmp
fisubrl
and
cmpsl
push
fldcw
mov
push
mov
push
fsubl
ficoms
dec
int3
ret
stos
scas
in
in
push
jmp
jb
lea
stos
les
movsl
lods
or
push
mov
pop
push
xchg
sbb
dec
scas
jno
pop
inc
pusha
lea
add
xchg
fistpl
sbb
jl
xchg
andb
out
cmpsb
addr16
fcoms
adc
or
mov
mov
iret
clc
fs
mov
movsl
mov
xchg
mov
fld
cwtl
inc
int
jbe
xchg
jl
insb
fdiv
and
ljmp
dec
inc
cmpb
mov
adc
sbb
mov
ljmp
dec
sbb
xchg
adc
mov
imul
shll
xor
and
aad
sbb
push
lods
adc
add
jb
sub
dec
out
jle
jge
int3
outsl
xor
sub
inc
sbb
and
cs
shrb
psubsb
loope
roll
pop
into
addr16
jmp
jns
leave
xchg
xchg
pop
mov
filds
mov
das
fisttpl
js
xor
push
loope
cmp
pop
sarl
idivl
push
inc
pop
dec
lea
push
jns
pop
fwait
sbb
or
hlt
sbb
adc
xor
imul
cli
mov
or
jnp
imul
ror
es
ret
fidivrs
cmpsl
jl
rcrb
or
aad
outsl
loopne
pop
lea
cltd
mov
xlat
insb
lea
aaa
ret
mov
mov
aad
movsb
push
loop
xor
jmp
in
cmp
push
jle
std
jmp
insl
stc
daa
mov
cli
in
inc
lret
mov
jbe
cmp
and
aam
sbb
mov
push
dec
or
mov
neg
cwtl
ret
jb
or
iret
sub
out
jp
sbbl
arpl
add
inc
repz
add
adc
es
jmp
into
sbb
xchg
inc
inc
movsl
mov
pop
and
xor
scas
aas
jno
aas
xchg
insb
inc
push
aad
leave
push
fdiv
aas
jmp
dec
pop
xchg
cld
xorl
vmaxpd
cmpsb
fstps
cld
pusha
xchg
fbstp
fdivrl
pop
or
stc
test
test
stos
pushf
aam
bound
test
repz
daa
cmp
or
xchg
mov
and
popa
sti
jecxz
pop
jno
mov
ss
loope
mov
testb
sbb
sub
gs
movsl
adc
inc
in
fsubl
pop
adc
mov
arpl
and
bound
pop
aas
mov
out
dec
lret
subb
ud0
or
aas
sbb
les
cmp
aas
push
dec
dec
notl
and
add
mov
test
pushf
add
inc
add
mov
jno
repnz
jo
stos
out
mov
sub
jmp
and
aam
shlb
in
mov
and
std
sub
sub
test
inc
xor
leave
sbb
loop
leave
lret
dec
mov
dec
push
shll
pop
sbb
mov
loope
inc
sbb
xchg
push
mov
mov
cmp
aaa
dec
pop
mov
int3
mov
insb
mov
jg
dec
mov
stc
popf
out
test
jb
cmp
addr16
dec
jne
fnstcw
hlt
addr16
inc
mov
or
test
xchg
jmp
cmp
cld
out
xchg
xchg
add
jbe
add
andb
es
inc
and
cmp
pop
mov
push
mov
orb
dec
xchg
pop
fisubrs
dec
xchg
adc
adc
lret
or
or
inc
adc
or
inc
insl
mov
mov
addb
idiv
push
jge
mov
pop
and
inc
xor
jecxz
push
pop
sbb
mov
add
shlb
ret
cltd
push
cmp
cs
and
stc
mov
cs
mov
sbb
shl
pop
ss
push
sub
and
fs
pop
jne
pop
or
ss
or
shlb
lret
call
adc
mov
call
arpl
mov
out
xlat
test
push
push
mov
push
in
jmp
inc
bndstx
addr16
ja
pushf
loop
shlb
mov
fistpl
add
ljmp
mov
sti
ds
insb
dec
fsts
jno
mov
push
pop
clc
addl
icebp
insb
inc
jmp
popa
popa
movsb
and
push
dec
sbb
mov
push
mov
test
sbbb
pop
shr
cmp
cmp
adc
pop
movsb
cmpsb
mov
adc
and
add
or
incb
aam
xchg
aas
dec
sub
cs
mov
loop
and
aad
vpsubusw
cli
pop
xchg
loopne
imull
imul
leave
inc
stc
dec
mov
sbb
mov
cmpsl
push
mov
mov
aaa
fisubl
mov
jnp
push
and
push
dec
fld
loop
sti
cwtl
jns
sbbb
fmul
repz
mov
dec
sub
mov
rcl
in
mov
in
sbb
dec
ljmp
sub
out
mov
in
dec
xor
sbb
sbb
loop
mov
xor
sbb
xchg
ljmp
dec
test
cmp
insb
pop
cld
xor
and
sub
pop
xor
dec
cmp
or
mov
shr
fs
pop
in
data16
push
mov
insl
xchg
negl
xchg
cmp
into
sub
sbb
loopne
mov
and
dec
cld
imul
scas
inc
mov
popa
inc
and
fisttpll
or
iret
cld
lds
jne
inc
xchg
dec
in
fimull
data16
jb
jae
pop
jno
movsb
mov
mov
mov
cmc
mov
pop
sarl
and
lcall
push
or
ljmp
jbe
cmp
stos
sahf
inc
std
mov
daa
inc
jl
std
lret
mov
negl
pushf
jns
ret
xlat
aaa
ret
imul
fldcw
iret
in
or
push
ljmp
mov
and
mov
cmp
addl
cmp
movsb
andl
in
cld
cmp
notb
adc
lcall
cmp
fmull
sarl
fnstsw
add
or
lret
test
mov
adc
imul
movsl
ljmp
scas
mov
orb
and
pop
mov
inc
in
mov
push
fldt
and
movsb
mov
push
jns
add
hlt
push
insb
fs
or
stos
inc
in
scas
and
jb
rorl
xlat
xchg
rclb
test
out
cmp
xor
sub
adc
daa
mov
pushf
xchg
dec
shll
mov
pushf
push
cmpsl
bound
les
or
rcrb
popa
out
les
mov
rorl
addr16
scas
jae
jb
sbb
movsl
mov
mov
rcrl
insl
xlat
les
xor
fnsave
mov
mov
push
jecxz
ds
push
shll
pop
ss
fdivl
pusha
pop
rolb
and
arpl
out
ss
jne
and
pop
enter
movsl
sti
pop
das
cs
gs
mov
cwtl
xor
inc
out
inc
pop
xchg
test
ffree
fucomip
lea
stos
xor
push
lret
loop
sub
popf
jle
push
mov
out
add
push
xor
mov
pop
mov
ror
sahf
or
dec
push
out
icebp
insb
cli
mov
lock
dec
or
sbbl
lds
inc
add
insb
cs
mov
bnd
popa
mov
inc
add
lahf
dec
mov
sahf
adc
loop
sbb
xlat
test
test
adc
dec
loope
sbb
or
mov
out
int
sbb
mov
lds
push
sbb
sbb
loop
mov
and
repz
movl
mov
nop
or
lret
dec
lret
pop
ljmp
test
outsl
pop
in
jp
mov
add
out
sub
jb
and
bnd
sub
xchg
cld
je
lret
sbb
sbb
fmull
std
dec
out
out
dec
jmp
adc
fbstp
nop
loope
aaa
push
ret
bound
aas
dec
ficomps
es
sub
roll
or
xor
or
mov
add
dec
xchg
les
insb
push
das
cmp
mov
call
fnstcw
fistps
test
jl
nop
cmp
mov
jns
add
pop
pop
push
pop
push
fdivrl
ret
je
ljmp
dec
xor
cmp
push
es
pop
mov
rcrb
movsl
cmp
out
pop
bound
inc
sub
dec
sbb
stc
in
in
mov
mov
mov
in
fidivl
lea
dec
pop
popf
jns
lods
call
invd
mov
xchg
xchg
neg
jb
mov
ljmp
pop
cmp
dec
and
addr16
mov
icebp
push
jp
sub
lret
rcll
scas
pusha
loope
repnz
inc
jb
inc
loopne
ror
cmpsb
ret
test
mov
bound
jnp
popa
jmp
mov
jl
fwait
lcall
stos
xchg
dec
mov
fistps
addr16
outsl
inc
sub
cs
mov
or
sub
push
dec
inc
mov
jecxz
pushf
pop
ljmp
pop
test
enter
enter
mov
fbld
sbb
sahf
pop
inc
mov
mov
sbb
test
mov
xchg
lahf
mov
adc
xchg
std
sbb
stos
dec
mov
sub
shr
or
stc
xchg
cs
inc
xor
pop
push
xchg
pop
push
in
push
sbb
mov
cmc
mov
adc
in
leave
scas
fucomi
lret
nop
aaa
and
push
xchg
xchg
aaa
mov
pop
xchg
call
shll
lods
cmp
inc
jge
jo
pop
pop
sbb
pop
push
adc
sub
test
and
aam
insl
add
push
mov
adc
rol
ljmp
sar
pop
inc
jae
jle
aam
and
sub
inc
mov
repnz
movsbl
mov
jne
xor
hlt
mov
push
inc
movl
mov
ss
call
jbe
int
into
xchg
clc
sarb
push
enter
leave
sub
add
dec
in
mov
push
test
push
sub
mov
es
not
push
int3
or
ficoml
fcomps
push
cmp
push
sbb
or
sbb
pop
xlat
inc
andl
pusha
gs
pop
or
rolb
jge
aam
mov
andl
xchg
sub
xchg
and
dec
push
je
xor
and
cmp
push
and
cmp
scas
lea
daa
dec
loop
lret
and
repnz
loopne
add
xor
sahf
ljmp
test
outsl
pop
sub
mov
aaa
adc
or
mov
stos
movsb
inc
aaa
add
out
inc
mov
in
int
repnz
fs
adc
sbb
mov
mov
lock
adc
xor
mov
and
dec
add
ds
xor
outsb
fstps
ficoms
jecxz
mov
frstor
loopne
add
pop
xchg
push
or
daa
gs
and
xor
pop
xchg
outsl
out
xchg
test
out
mov
xor
jae
outsb
cmpsb
and
roll
cmpsb
inc
adc
jo
icebp
dec
cmp
push
xchg
sub
mov
aaa
clc
or
and
in
scas
and
xchg
mov
push
add
lret
ss
ret
adc
ljmp
dec
fcmovu
imull
dec
mov
call
adc
shlb
cmc
imul
bnd
fidivl
pop
scas
in
leave
cmp
xchg
lret
jmp
int3
mov
xchg
lods
xor
sub
out
imul
xchg
bound
xchg
mov
loop
repnz
cmp
mov
xor
rcl
push
in
nop
or
cmp
sbb
push
mov
adcl
stos
xchg
sub
mov
ss
jno
das
push
outsl
out
mov
in
cmp
xchg
aas
cmc
mov
movsl
xchg
sbb
rcrl
sub
or
ffreep
pop
loope
testl
sarl
aad
pop
pop
aaa
stos
lret
xchg
push
pop
sbbb
push
mov
push
and
insb
push
pop
mov
arpl
movsl
insl
rolb
jo
cltd
paddusw
ror
jb
jge
cmc
fildl
xchg
jb
mov
in
outsl
dec
add
mov
xchg
outsl
call
ret
add
lock
mov
dec
sar
jmp
and
adc
pop
push
cmp
pop
das
xor
jno
mov
push
add
insl
xchg
lret
xchg
fstl
jmp
aam
cs
cmc
sub
ja
sbb
cmp
dec
repz
adc
dec
scas
loopne
pop
xchg
inc
mov
dec
dec
jb
imul
xor
in
adc
inc
out
sbb
mov
adc
and
lret
aas
out
push
stos
arpl
cwtl
daa
xor
sub
and
inc
scas
out
in
pushf
jb
mov
fcoml
ret
cli
fs
cmp
jno
mov
sbb
or
lcall
sub
imul
daa
addb
mov
loopne
mov
jnp
cld
ret
pavgb
add
and
push
leave
mov
mov
dec
test
pop
ljmp
inc
sbb
push
jae
lcall
lahf
in
pop
repz
mov
sub
out
icebp
jmp
inc
out
lock
jmp
insl
jno
add
aam
imul
ja
lret
in
inc
jg
mov
adc
les
add
cltd
jecxz
enter
jge
xchg
mov
sarb
dec
out
inc
mov
aaa
sahf
mov
mov
outsl
or
push
jecxz
fmull
shl
lds
mov
adc
shlb
inc
push
loopne
out
mov
mov
arpl
aas
insb
dec
pushf
ds
mov
cmp
lods
movsb
push
ja
or
repz
lahf
popa
test
in
hlt
js
cmp
xchg
mov
cwtl
shlb
or
xlat
or
dec
jecxz
mov
add
or
leave
mull
testb
lods
ror
ds
or
cld
xchg
sub
fucom
ds
sbb
add
sbb
mov
and
insl
cld
hlt
cmc
enter
jns
jp
sbb
add
insb
dec
mov
mov
mov
xchg
adc
mov
stos
fwait
in
or
lcall
jp
loop
jecxz
ljmp
or
pop
shlb
test
je
push
ret
loopne
jg
xchg
add
adc
add
cmc
sbb
jp
and
jmp
leave
add
or
daa
insb
lock
cwtl
add
inc
ljmp
shll
sub
adc
add
add
lock
push
icebp
jge
hlt
sarl
std
add
or
int
xchg
call
dec
adc
clc
negb
xchg
outsb
fsubl
ret
and
lods
cmpsl
lock
rol
add
jo
adc
cmp
lds
ja
adc
imul
or
stos
fstpt
adc
inc
xor
pop
xor
or
inc
fildl
test
movsb
inc
inc
and
outsb
jne
cmp
jae
ljmp
adc
dec
mov
and
mov
add
and
sahf
inc
pop
imul
jae
jp
pop
adc
sub
push
in
add
ret
out
mov
add
xchg
sub
pop
movsl
sti
sbb
and
pop
adc
popa
pop
jns
shll
jmp
dec
loop
and
ret
aas
dec
sbb
pop
cmpsl
ret
jne
push
rorl
mov
ds
pop
pusha
stos
push
xor
xor
pop
sbb
repnz
pop
popf
and
mov
aad
inc
push
sub
push
adc
sub
ret
sub
jl
push
sub
adc
and
lock
fstpt
arpl
adc
cmpsl
xchg
dec
jbe
test
mov
pop
dec
mov
inc
out
mov
mov
inc
lock
mov
lahf
xchg
hlt
push
push
xlat
sub
or
xor
sti
xor
fcompl
sub
pop
fcmovnb
out
and
jo
mov
pop
mov
mov
inc
sbb
rclb
cwtl
imul
cmovns
push
jo
shlb
iret
scas
inc
sbbl
push
xchg
icebp
cmpsb
lret
outsb
movsb
outsb
lret
jne
pop
hlt
sahf
pop
xchg
orl
cs
mov
scas
repz
in
je
jmp
in
stc
lods
icebp
mov
std
ljmp
ljmp
push
xor
dec
movsb
sti
push
xchg
push
leave
xchg
lds
je
pusha
mov
pushf
jg
cld
jb
cld
int
mov
in
mov
adcl
sarb
or
sbb
mov
mov
mov
cli
lcall
fcomps
ja
sti
stos
mov
roll
lcall
mov
xchg
cli
les
outsl
xchg
push
mov
mov
stos
push
and
fistpll
sbb
sub
dec
rcll
imul
lretw
pop
push
scas
xor
pop
cltd
push
popa
das
jmp
sbb
in
cmp
hlt
pop
imul
enter
dec
je
lret
aam
cmp
jne
jp
repz
mov
outsl
mov
cmc
cmp
xchg
insl
inc
push
cmp
stos
xchg
rcrl
lret
inc
mov
mov
les
imul
mov
push
or
and
adc
cltd
adc
dec
xlat
arpl
lret
addr16
insl
inc
call
int3
aas
jns
pop
fwait
sub
enter
mov
or
cwtl
push
int3
je
or
popl
jmp
stos
mov
mov
lods
or
jg
pop
cwtl
sbb
jmp
les
xchg
xor
jnp
adc
fwait
inc
fsubs
jbe
xchg
mov
aad
scas
ss
loopne
xor
jns
push
push
repnz
negl
mov
bound
mov
nop
outsl
addb
icebp
add
xor
mov
sti
rcr
push
mov
mov
sub
mov
ds
mov
push
out
imul
mov
xchg
imul
jno
mov
mov
pop
sarb
xorl
jle
std
or
mov
adc
sbb
and
stos
or
dec
movsl
xor
dec
pop
jno
movsl
xchg
outsl
ds
fwait
sbb
cmc
hlt
or
js
push
cmc
xchg
sahf
outsb
jo
fiaddl
xchg
jl
mov
pop
sub
popf
mov
adc
jp
into
iret
mov
outsb
and
cmp
fyl2x
cli
push
mov
xchg
fmuls
mov
aam
hlt
and
dec
cmp
push
and
jle
mov
aam
push
rcrl
dec
xor
loop
icebp
dec
rorb
sub
mov
xchg
push
cwtd
sub
pop
xchg
sbb
dec
xor
push
push
out
lea
jecxz
or
mov
and
add
pusha
mov
fsubl
fisubrl
mov
sbb
lock
rcll
xlat
or
jne
cmp
shlb
mov
cmp
pushf
negl
je
out
push
pop
pop
fucomp
mov
mov
mov
mov
pop
scas
fdivr
push
dec
cld
xor
jb
andl
pminsw
lds
sub
test
addr16
pop
out
sub
pop
cld
aad
inc
mov
push
adc
cmp
jg
adc
mov
data16
mov
push
popf
ja
cs
or
test
sarl
cltd
and
sbbb
xchg
xchg
jb
jge
cmp
dec
fistpll
lret
sahf
outsl
cltd
inc
cmp
aaa
fimull
movsb
mov
mov
adc
mov
jae
push
pop
in
test
fildll
and
lods
inc
iret
jns
cmp
hlt
and
inc
mov
sti
and
out
fbstp
push
es
test
add
clc
pop
add
jbe
cmp
icebp
not
ljmp
inc
fistps
mov
or
aam
or
rolb
aam
fs
into
cmpb
push
test
cmc
mov
xchg
fldenv
repnz
shl
movsb
mov
dec
jbe
xor
movsl
dec
in
push
das
mov
adc
lds
into
jb
out
test
mov
enter
or
or
sbb
repz
dec
inc
fwait
adc
fdivrs
and
mov
hlt
and
xor
mov
repnz
sti
mov
ss
imul
les
pop
scas
xchg
lcall
mov
mov
xchg
repz
jl
jg
adc
add
jb
add
adc
outsl
andb
mov
imul
jno,pn
adc
movsb
lods
mov
inc
mov
xor
loop
adc
ret
or
xchg
popa
sarl
pop
std
int3
push
pop
out
mov
int
fwait
inc
xchg
lods
or
mov
leave
mov
call
xchg
xchg
sbb
mov
xchg
pop
xlat
mov
aas
fcmovnu
sbb
add
adc
dec
inc
or
fstl
rcrl
insb
inc
push
rorl
pop
jge
imul
in
cwtl
sub
int3
in
sub
cld
dec
push
pop
sahf
jge
stc
lds
sbb
es
insb
sbb
mov
std
arpl
imul
cwtl
fildl
loope
fwait
stos
mov
dec
aaa
lahf
pop
or
xchg
cltd
repz
mov
jno
jmp
out
ss
sbb
sbb
stos
repnz
adc
dec
arpl
dec
xchg
xchg
pop
and
cmpsl
mov
lret
push
xchg
popa
mov
and
cwtl
sub
inc
mov
lea
add
xchg
mov
jge
frstor
mov
dec
push
in
adc
mov
push
pop
ja
insb
neg
dec
incl
pop
sbb
movsl
hlt
repnz
fstl
sbb
jp
out
pop
fcompl
and
sub
cmp
inc
iret
or
dec
mov
xchg
lods
dec
add
outsl
jecxz
test
xchg
sub
out
push
fwait
mov
add
sub
adc
fdivl
sbb
std
xor
ds
dec
movsl
sbb
mov
inc
jno
call
rol
sub
inc
nop
pop
mov
imul
rcrb
push
cmp
in
ret
lret
xor
dec
mov
mov
pop
cmp
scas
test
add
mov
lcall
jae
scas
jmp
and
mov
xor
aad
stos
movaps
jmp
xchg
in
bound
jle
loop
lods
mov
mov
sub
inc
ljmp
dec
or
repnz
or
hlt
std
ljmp
out
pop
jl
mov
mov
add
int
std
lock
addr16
mov
jl
add
test
lret
fnstenv
push
fwait
cmp
push
xchg
in
adc
pop
ret
push
scas
pop
xor
scas
xor
inc
movsl
mov
ret
xchg
clc
and
sub
or
mov
movsl
bound
inc
out
adc
mov
jl
repz
loopne
das
loopne
sub
xor
mov
fs
dec
add
jp
out
pop
or
paddsb
leave
sbb
bnd
in
push
lods
les
inc
adc
inc
and
stos
jge
and
je
pusha
mov
scas
inc
into
in
mov
fisubrs
add
and
dec
orb
push
push
in
in
xorl
mov
push
xchg
test
stos
mov
jmp
fldz
push
loopne
adc
push
pop
inc
or
enter
sahf
fnstsw
cmp
add
pop
mov
je
ss
stos
mov
stos
xor
ds
push
clc
stc
dec
inc
and
add
mov
push
pop
mov
jle
sub
adc
ljmp
out
dec
mov
pop
and
mov
stos
stos
test
inc
pop
movsb
andl
out
xor
cmp
jmp
inc
inc
xchg
ret
xor
and
test
iret
xchg
sub
les
aad
sar
pushl
test
call
aad
add
fnsave
fwait
xor
fcoml
shrb
mov
in
adc
add
aas
cmp
pop
aas
subb
lret
pop
dec
imul
jne
xchg
sbb
jl
mov
popf
cwtl
fucomi
insb
mov
sti
ret
das
inc
mov
insb
ljmp
xchg
add
loopne
mov
shl
mov
push
xchg
pop
push
mov
sub
lcall
inc
mov
repnz
js
in
insb
xchg
lods
lods
inc
aas
add
fimuls
sete
and
ss
andl
xchg
sub
mov
mov
mov
push
jmp
xlat
mov
std
push
mov
cmpsb
jo
or
jg
inc
mov
or
out
fwait
inc
loop
arpl
xor
add
aam
dec
shrl
clc
add
mov
sbb
xchg
arpl
cli
cwtl
inc
pusha
inc
push
dec
sahf
jno
outsb
bound
mov
sub
xor
dec
sub
inc
jo
imul
test
and
andb
sbb
sbb
cmpb
sarl
dec
fldt
pop
mov
stc
in
ds
addr16
stos
mov
and
outsb
and
aad
rclb
mov
nop
pop
ljmp
out
mov
push
es
mov
scas
mov
mov
add
sbb
fsubrs
add
decl
jl
movsl
add
sub
push
rcll
pop
sbb
jmp
push
push
mov
and
and
xchg
loop
into
fldcw
ret
fldl
into
fists
dec
or
jge
ret
and
cld
and
outsl
mov
cs
mov
fbstp
push
scas
inc
jns
adc
sbb
das
fcomip
mov
mov
push
fwait
ret
into
push
cmpsb
mov
jg
ja
popa
mov
test
fimuls
imul
dec
enter
fisubl
sbb
lret
and
jbe
sub
rorl
cmp
pop
mov
xchg
stos
mov
xor
sbb
lds
jno
and
into
xorb
idivl
arpl
test
mov
ljmp
mov
ret
ret
mov
into
fnstenv
imul
out
sub
mov
loop
movsl
jecxz
adc
repz
out
dec
repnz
loope
sti
ficompl
rolb
push
shrb
ja
pop
sarl
xchg
daa
insl
pop
lods
push
mov
xor
arpl
jns
sbb
dec
sbb
fimull
sbbb
pop
sbb
out
cmp
ss
ret
das
inc
xchg
fs
pushf
pop
and
xchg
cld
adc
and
pop
stos
inc
lea
sub
or
adcl
cs
inc
repnz
jae
jmp
pop
add
xchg
inc
lds
inc
imul
sahf
push
das
fimuls
xchg
add
fnsave
push
outsl
cld
les
dec
or
push
xor
int3
ret
inc
sar
enter
aam
or
mov
fcmovne
out
xlat
insl
mov
sub
arpl
or
ret
cmp
xlat
das
test
adcl
or
lret
aad
scas
out
mov
or
or
sub
xor
into
div
push
out
fstpt
mov
adc
decl
dec
pushf
clc
or
movsl
movsl
xchg
and
fwait
adc
mov
inc
imul
rorl
in
lock
push
xor
in
int
xchg
sti
inc
mov
cmp
lods
xchg
mov
sub
sub
push
lcall
pop
inc
sti
sub
outsb
push
pusha
ret
iret
push
cltd
adc
dec
ret
mov
leave
add
test
dec
dec
subl
pop
popf
sbb
bound
xlat
and
cmp
push
fildll
orb
pop
mov
cmpsl
cli
mov
int3
fcmovu
ret
adc
sti
mov
push
mov
stos
dec
push
sahf
sti
test
test
fs
mov
movsb
aaa
jecxz
mov
adc
ljmp
mov
cmp
ljmp
addb
push
mov
push
mov
dec
cmp
inc
inc
rcr
lahf
fdivrs
js
mov
sub
outsb
imul
ja
lock
mov
adc
cs
xchg
jge
shrb
cmp
mov
sar
mov
pop
in
push
lcall
sbb
xchg
mov
dec
pop
push
pop
sub
push
sbb
inc
add
push
pop
ret
dec
dec
mov
pop
xlat
sub
fnsave
icebp
mov
lret
shl
rolb
lret
and
mov
mov
fdivrl
cmpb
clc
repz
fstps
pop
xlat
pushf
xchg
and
dec
inc
mov
mov
jmp
mov
add
ljmp
jl
mov
jmp
je
fists
add
subb
fnsetpm(287
adc
cmp
sahf
jmp
sbbb
int
xor
jg
out
push
cmp
js
mov
pshufw
add
stos
stos
mov
pop
shlb
les
outsb
vmovntps
or
xchg
add
mov
push
pop
popf
dec
iret
movsl
add
addl
pop
outsb
pop
cmp
movsb
sub
mov
add
fildll
fimull
test
jl
jns
jp
pop
sub
dec
mov
cmp
mov
xlat
int
cmp
pop
pop
pop
lods
sub
sub
pop
ja
test
sub
jl
nop
pop
mov
out
jge
add
sub
sbb
cmp
ljmp
pop
aam
lret
add
cmp
push
clc
cltd
jb
add
jle
jle
adc
mov
cmp
inc
pop
or
icebp
jne
xorb
and
jae
dec
ja
add
dec
and
fs
inc
leave
cmp
sub
mov
cltd
jecxz
xor
xchg
fdivr
push
cltd
push
adc
fisttpl
or
cmpsb
ss
repnz
sti
xchg
mov
rclb
xchg
pop
gs
jae
cmp
insl
pop
dec
sti
pushf
xchg
adc
mov
xchg
mov
or
shrb
jnp
ss
in
shrb
xor
stc
cmp
lds
sbb
fs
push
inc
jb
shll
stc
or
in
ss
adc
pop
jecxz
push
rcr
rcr
push
xchg
mov
jle
add
cmpsb
sub
sarl
stos
in
fdivl
and
sub
jp
ret
cmp
inc
imul
rclb
jg
pusha
mov
fistpll
lds
mov
fcomps
ret
xor
inc
sub
rcrl
and
mov
mov
rorb
test
mov
dec
fisubs
inc
ret
pop
jns
inc
stos
stos
enter
mov
dec
mov
insb
in
inc
test
xor
mov
imul
and
js
mov
ljmp
push
lret
mov
mov
jnp
mov
jmp
cltd
sub
jmp
outsb
cli
jae
pop
mov
xchg
jbe
outsb
faddl
jae
jno
bound
int3
ds
adc
cmp
or
cltd
lods
push
jmp
mov
push
xorl
and
inc
push
mov
popl
in
popw
imul
outsb
js
jg
adc
add
and
cmp
movsb
mov
out
xchg
xchg
push
stos
pushf
sub
dec
cli
fcomps
push
or
mov
and
fcoml
add
xor
push
pop
cltd
adc
fwait
push
cmp
in
inc
pop
mov
lret
sbb
mov
mov
mov
adc
fsub
jg
ret
in
or
mov
mov
lcall
sbb
in
es
loope
lock
pop
lock
jb
pop
mov
jb
or
mov
mov
or
rorb
or
out
fwait
in
cmp
sbb
mov
lret
enter
and
imul
adc
jno
push
xchg
aad
aas
jns
repnz
aas
or
pusha
in
adc
inc
lcall
xchg
sbb
cmp
push
jl
pop
inc
lods
fwait
outsl
and
push
mov
mov
jne
loop
mov
or
hlt
pop
fistl
ret
cmp
icebp
pop
addr16
sub
cmp
add
fstl
add
fisttpl
cmp
mov
jle
sub
mov
add
inc
fiaddl
lcall
and
mov
flds
imul
mov
icebp
jle
pushf
inc
ja
aaa
cmp
shll
cmp
sub
fsave
mov
pop
add
lret
and
arpl
xchg
lds
call
mov
inc
fstpl
xchg
repnz
cmp
sbb
push
pushf
test
es
jb
lcall
shll
xchg
mov
mov
test
les
sahf
jp
mov
roll
push
sbb
mov
out
inc
lret
leave
fisubs
decl
push
push
xchg
or
jl
ret
call
push
mov
lcall
sbb
and
xchg
mov
rorb
lock
sub
mov
pop
xor
mov
dec
lds
sbb
inc
sbbl
mov
and
in
push
cmp
cld
mov
mov
lahf
or
push
adc
sbb
xlat
sti
daa
inc
sub
scas
push
cmpsb
int3
sbb
lock
jns
xchg
inc
or
cmc
jl
ljmp
add
xlat
out
mov
sbbl
mov
jnp
inc
jmp
aam
es
neg
mov
mov
push
popa
imul
and
ret
fldcw
sbb
pusha
aaa
jl
inc
pushf
insb
je
jnp
pop
add
stos
rolb
icebp
and
shl
popf
dec
addr16
stos
add
jl
fcomps
xchg
fisubrs
mulb
cmp
and
cmp
jo
cmp
fwait
jg
popa
and
push
xchg
mov
sub
les
sbb
xchg
jb
shr
outsl
mov
or
and
mov
shl
shrb
sahf
outsb
jns
outsl
insb
lds
gs
adc
movsl
mov
mov
push
mov
add
mov
rcr
imul
mov
mov
dec
ss
xchg
ffree
xchg
fildll
sub
pop
fcmovnbe
ds
loop
dec
dec
cmp
lcall
lds
mov
movsl
mov
ret
lahf
cs
int3
cli
sbb
cmp
adc
es
aad
fbld
cmp
push
rcll
addr16
push
or
std
push
int3
inc
mov
mov
push
or
fstpt
xor
mov
inc
lcall
dec
test
int3
int3
fisubl
inc
inc
stos
leave
inc
push
icebp
daa
lea
sbb
aad
jl
mov
mov
inc
dec
jo
dec
jae
es
sbb
stc
xchg
mov
inc
insl
ds
into
ret
jae
mov
adc
inc
shlb
outsl
pop
mov
sub
cli
test
fsubl
pop
test
xchg
push
adc
ljmp
in
and
xor
add
sub
xor
rcrl
xlat
lea
cltd
or
adc
pushf
test
orl
out
mov
flds
pop
lods
push
mov
data16
mov
mov
stc
xchg
or
test
loop
int
cmp
inc
aas
add
sub
jo
jne
inc
mov
es
jbe
scas
or
and
lock
sub
xor
and
fs
add
jecxz
and
mov
cwtl
jnp
adc
repz
je
int3
mov
xor
jns
pop
ds
fcmovnb
xchg
fisubrl
mov
test
clc
push
adc
adc
je
divl
fbstp
cmpsl
repnz
sub
movsl
inc
pop
dec
xlat
push
mov
dec
jmp
xor
xchg
adc
stc
ret
inc
pushf
jle
mov
xchg
loopne
add
sbb
lea
mov
pop
gs
jnp
scas
stos
push
pop
mov
xchg
aaa
xorb
cmpsb
js
pop
jl
repz
stos
addl
cmc
cmp
int3
jb
jg
adc
aam
cli
lret
pop
andb
lea
fsubl
gs
out
and
sbbl
dec
insl
fildll
in
movsl
mov
ss
int3
imul
cmp
add
in
sub
mov
mov
mov
add
and
add
add
sub
or
push
sub
push
mov
add
push
mov
and
mov
add
add
add
sub
and
cmp
jne
add
sub
sub
xor
mov
sub
sub
cmp
jne
mov
cmp
je
add
or
mov
test
je
cmp
jne
or
mov
mov
cmp
jne
mov
test
je
mov
add
cmp
je
sub
sub
sub
test
jne
add
mov
add
add
sub
or
mov
mov
or
sub
add
add
or
or
mov
add
mov
cmp
jne
mov
mov
sub
add
and
or
cmp
jne
add
xor
sub
test
je
mov
test
jne
and
add
test
je
cmp
jne
sub
mov
add
xor
or
test
jne
mov
mov
cmp
jne
mov
add
test
jne
and
cmp
jne
mov
add
add
mov
cmp
jne
mov
mov
or
sub
add
cmp
jne
sub
mov
cmp
je
sub
or
cmp
je
sub
and
cmp
je
and
mov
or
mov
add
add
sub
sub
add
and
cmp
je
mov
add
test
jne
mov
mov
cmp
jne
cmp
je
cmp
jne
cmp
je
and
mov
or
xor
mov
and
sub
sub
add
cmp
jne
mov
and
sub
mov
sub
sub
cmp
je
mov
xor
sub
sub
or
add
sub
or
and
sub
add
mov
sub
mov
and
sub
add
mov
mov
and
or
or
or
add
add
cmp
je
mov
xor
cmp
je
cmp
je
add
or
cmp
jne
mov
mov
add
cmp
je
add
mov
and
add
add
add
mov
cmp
jne
cmp
je
mov
mov
cmp
je
add
or
add
sub
test
jne
add
cmp
jne
and
add
or
add
and
or
test
je
mov
and
mov
and
sub
cmp
jne
and
cmp
je
mov
mov
sub
xor
add
add
mov
sub
xor
test
jne
add
mov
add
mov
and
cmp
je
mov
and
and
test
je
mov
test
je
mov
cmp
jne
xor
mov
sub
xor
cmp
je
xor
sub
add
sub
mov
xor
xor
mov
mov
or
mov
sub
add
xor
sub
sub
add
lea
push
call
sub
mov
mov
cmp
je
add
mov
cmp
je
mov
sub
test
je
sub
sub
cmp
jne
cmp
jne
add
add
add
cmp
jne
sub
sub
sub
add
or
call
mov
sub
mov
sub
sub
cmp
jne
sub
add
xor
mov
sub
sub
add
cmp
je
sub
cmp
je
add
mov
test
jne
add
cmp
jne
cmp
je
cmp
jne
mov
mov
sub
add
add
xor
cmp
je
add
mov
mov
xor
test
je
mov
add
add
mov
and
sub
add
mov
or
cmp
je
mov
sub
mov
xor
cmp
je
mov
add
or
mov
cmp
jne
add
mov
mov
and
and
cmp
je
or
cmp
je
mov
sub
xor
sub
cmp
jne
cmp
je
mov
add
mov
or
test
je
sub
mov
cmp
jne
mov
xor
sub
sub
sub
cmp
jne
cmp
je
and
mov
or
sub
sub
sub
add
add
mov
add
test
jne
mov
add
mov
mov
mov
cmp
jne
and
mov
mov
sub
add
and
add
mov
sub
sub
sub
add
add
add
cmp
jne
mov
mov
sub
sub
sub
add
add
sub
sub
mov
cmp
je
mov
add
sub
add
sub
mov
sub
add
mov
or
mov
and
mov
sub
add
or
or
mov
mov
sub
test
je
add
add
mov
mov
and
add
sub
sub
cmp
jne
sub
add
mov
add
and
mov
cmp
jne
cmp
je
mov
sub
mov
sub
or
cmp
jne
sub
or
mov
mov
mov
and
sub
cmp
jne
mov
mov
sub
sub
call
test
je
or
and
mov
mov
cmp
je
mov
sub
cmp
jne
mov
mov
sub
and
cmp
je
add
add
cmp
je
cmp
jne
add
mov
cmp
jne
mov
sub
or
sub
cmp
jne
mov
xor
cmp
je
add
mov
sub
add
sub
and
sub
sub
sub
mov
test
jne
add
cmp
je
mov
add
add
xor
mov
sub
xor
cmp
je
or
mov
add
and
cmp
jne
mov
mov
add
cmp
je
mov
mov
add
sub
or
sub
sub
cmp
je
mov
cmp
jne
mov
or
add
cmp
jne
mov
add
add
cmp
je
test
je
xor
add
sub
mov
cmp
jne
and
cmp
je
and
mov
cmp
jne
sub
add
cmp
jne
cmp
je
and
sub
mov
mov
sub
cmp
je
add
cmp
jne
cmp
jne
mov
cmp
jne
add
mov
test
jne
cmp
jne
sub
xor
sub
xor
xor
sub
and
add
test
je
and
or
add
mov
cmp
je
sub
mov
mov
sub
add
add
or
cmp
jne
mov
add
mov
cmp
jne
cmp
jne
mov
mov
mov
add
or
sub
sub
mov
or
mov
cmp
je
mov
mov
or
cmp
je
and
xor
sub
mov
add
sub
sub
xor
mov
mov
mov
add
add
sub
add
mov
mov
cmp
je
and
mov
cmp
jne
xor
cmp
je
add
add
mov
cmp
je
xor
sub
mov
cmp
jne
cmp
je
test
je
sub
sub
add
cmp
je
mov
add
mov
cmp
je
cmp
jne
xor
cmp
jne
mov
mov
add
or
add
cmp
je
and
mov
xor
xor
add
add
sub
mov
mov
mov
or
or
test
je
sub
add
sub
sub
sub
add
mov
cmp
jne
mov
add
sub
add
mov
sub
cmp
jne
mov
sub
add
mov
cmp
jne
mov
sub
cmp
je
cmp
je
xor
cmp
jne
cmp
jne
add
mov
mov
add
add
add
and
cmp
jne
mov
mov
sub
cmp
je
cmp
jne
sub
mov
cmp
je
mov
sub
sub
cmp
je
sub
cmp
je
test
je
mov
add
mov
mov
cmp
jne
or
cmp
jne
sub
xor
add
sub
mov
cmp
je
sub
cmp
je
sub
mov
sub
mov
mov
add
sub
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
cmp
je
xor
test
je
and
mov
cmp
jne
add
sub
mov
sub
add
cmp
je
add
add
mov
add
mov
add
add
cmp
je
mov
mov
add
xor
mov
cmp
je
test
jne
mov
or
or
mov
cmp
jne
cmp
je
mov
mov
sub
cmp
je
add
mov
mov
cmp
jne
cmp
jne
and
mov
sub
sub
sub
mov
add
sub
call
cmp
je
add
mov
mov
mov
xor
add
sub
lea
push
call
and
mov
add
mov
add
xor
and
cmp
jne
mov
mov
sub
and
sub
xor
mov
mov
sub
add
cmp
jne
sub
mov
add
cmp
jne
mov
sub
mov
cmp
je
and
mov
add
add
add
mov
cmp
jne
mov
and
or
mov
sub
add
cmp
je
mov
mov
and
cmp
jne
and
cmp
jne
sub
xor
mov
sub
sub
cmp
jne
mov
sub
mov
add
or
mov
xor
add
mov
mov
test
je
or
mov
mov
add
add
add
and
cmp
je
xor
mov
cmp
je
sub
mov
mov
xor
sub
and
add
and
and
and
xor
sub
mov
sub
add
xor
xor
sub
or
mov
cmp
jne
and
mov
mov
sub
add
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
add
sub
xor
add
mov
or
mov
add
add
sub
cmp
jne
xor
or
cmp
jne
mov
and
sub
mov
and
and
mov
and
add
add
test
je
cmp
jne
mov
mov
or
test
jne
mov
cmp
jne
sub
mov
cmp
je
cmp
je
xor
mov
add
sub
and
sub
add
sub
xor
mov
add
sub
add
mov
mov
test
jne
mov
sub
sub
add
cmp
je
mov
sub
sub
cmp
jne
or
mov
mov
test
je
mov
mov
sub
cmp
jne
mov
cmp
jne
mov
add
cmp
jne
sub
sub
mov
add
add
mov
test
je
sub
sub
add
or
cmp
jne
cmp
jne
add
and
or
cmp
je
cmp
je
mov
xor
cmp
jne
sub
sub
mov
cmp
jne
add
cmp
jne
mov
mov
add
sub
cmp
jne
cmp
je
sub
and
mov
mov
or
test
jne
mov
sub
sub
add
mov
or
sub
add
sub
add
cmp
jne
mov
xor
sub
add
mov
sub
and
sub
sub
add
sub
mov
mov
and
cmp
jne
sub
test
je
sub
mov
add
add
mov
lea
sub
mov
mov
add
add
and
cmp
je
add
mov
add
add
cmp
je
mov
mov
add
mov
and
and
add
test
je
add
cmp
jne
mov
cmp
jne
mov
mov
add
add
cmp
jne
mov
mov
cmp
je
add
mov
add
add
and
or
add
xor
cmp
jne
mov
mov
sub
sub
cmp
jne
or
mov
or
sub
xor
add
mov
cmp
je
mov
mov
sub
sub
add
add
add
push
sub
cmp
jne
sub
mov
mov
xor
and
cmp
je
cmp
je
mov
mov
and
or
add
xor
mov
add
mov
add
cmp
jne
xor
mov
cmp
jne
mov
cmp
je
mov
test
je
add
cmp
je
xor
sub
add
mov
add
add
mov
call
mov
add
mov
add
sub
mov
mov
mov
cmp
jne
cmp
jne
and
cmp
jne
mov
mov
sub
sub
add
sub
add
cmp
jne
cmp
je
add
test
je
add
shr
add
or
cmp
jne
xor
mov
add
sub
mov
add
mov
add
add
xor
sub
mov
cmp
jne
mov
and
mov
cmp
jne
add
sub
add
call
mov
and
cmp
jne
mov
add
add
mov
mov
sub
mov
mov
add
add
mov
and
sub
sub
sub
test
je
mov
add
mov
pushl
push
pushl
call
mov
sub
cmp
jne
cmp
je
mov
cmp
jne
cmp
jne
and
mov
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
and
cmp
je
sub
test
je
sub
mov
or
mov
mov
and
cmp
jne
xor
xor
add
cmp
je
mov
mov
cmp
je
cmp
je
add
mov
add
mov
sub
cmp
jne
and
mov
mov
sub
sub
sub
and
sub
add
add
addl
mov
add
add
sub
mov
mov
mov
or
add
cmp
jne
and
sub
add
sub
xor
mov
and
or
cmp
je
mov
call
mov
mov
mov
and
add
add
mov
mov
mov
mov
add
mov
sub
sub
cmp
je
add
call
xor
cmp
je
mov
mov
xor
and
pop
xor
sub
pop
sub
pop
sub
sub
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
mov
mov
and
sub
add
add
push
mov
mov
sub
or
and
cmp
je
mov
mov
add
add
sub
add
and
and
sub
add
test
je
mov
and
add
mov
add
and
sub
add
sub
add
push
mov
mov
add
add
add
cmp
jne
mov
mov
test
jne
add
mov
cmp
jne
mov
sub
cmp
je
add
mov
mov
or
add
sub
sub
sub
sub
add
or
mov
cmp
jne
mov
mov
cmp
jne
xor
add
mov
sub
sub
add
add
cmp
jne
cmp
je
sub
add
mov
or
and
sub
sub
movl
mov
cmp
jne
mov
mov
cmp
jne
sub
add
xor
cmp
jne
mov
mov
cmp
jne
add
sub
mov
sub
cmp
jne
sub
sub
cmp
jne
xor
add
cmp
je
mov
sub
cmp
jne
add
mov
sub
or
mov
cmp
jne
and
and
and
sub
mov
mov
add
add
and
cmp
je
cmp
je
xor
mov
and
add
mov
cmp
jne
test
je
add
mov
mov
mov
add
cmp
jne
mov
mov
or
add
or
add
add
and
or
add
cmp
je
sub
rdtsc
sub
mov
xor
or
test
je
mov
mov
mov
cmp
jne
add
test
jne
test
je
sub
cmp
jne
cmp
je
sub
and
and
add
cmp
jne
mov
cmp
jne
mov
mov
mov
add
sub
sub
add
sub
sub
add
and
mov
sub
mov
add
cmp
jne
sub
mov
mov
add
cmp
je
sub
cmp
je
mov
mov
sub
add
cmp
je
mov
mov
add
test
jne
mov
or
add
mov
and
mov
sub
sub
cmp
je
mov
xor
cmp
jne
sub
mov
mov
sub
and
sub
cmp
je
cmp
jne
mov
mov
sub
sub
cmp
jne
cmp
je
and
sub
mov
or
and
addl
mov
add
cmp
jne
mov
add
add
mov
cmp
jne
and
sub
mov
cmp
je
mov
and
xor
xor
sub
sub
cmp
jne
sub
mov
cmp
je
add
test
je
cmp
je
mov
cmp
je
test
jne
mov
mov
add
sub
sub
and
cmp
je
add
sub
test
jne
test
je
sub
mov
mov
test
je
mov
sub
mov
test
jne
mov
cmp
je
cmp
jne
cmp
jne
cmp
jne
cmp
jne
add
mov
sub
sub
add
sub
add
sub
xor
push
call
sub
or
je
xor
cmp
jne
add
mov
test
jne
cmp
jne
mov
cmp
jne
cmp
je
cmp
je
mov
sub
sub
and
add
addl
mov
mov
cmp
je
or
sub
mov
add
mov
and
or
lea
mov
sub
or
mov
add
sub
cmp
jne
sub
add
mov
mov
cmp
je
add
mov
cmp
je
add
mov
mov
sub
cmp
jne
add
mov
or
xor
and
add
add
cmp
je
mov
mov
sub
sub
sub
inc
add
mov
and
xor
sub
xor
or
sub
sub
mov
sub
cmp
jne
xor
add
mov
add
mov
mov
mov
sub
cmp
jne
mov
sub
cmp
jne
mov
cmp
jne
mov
sub
and
add
and
cmp
jne
add
add
add
mov
mov
add
mov
add
or
sub
and
sub
add
mov
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
xor
or
cmp
jne
xor
mov
mov
add
sub
and
cmp
jne
mov
mov
mov
add
or
add
test
je
mov
xor
add
sub
add
mov
mov
mov
add
mov
or
cmp
je
cmp
je
cmp
jne
mov
add
xor
add
and
xor
sub
test
je
mov
mov
sub
cmp
je
add
mov
mov
sub
sub
xor
cmp
jne
mov
mov
cmp
jne
xor
cmp
jne
cmp
jne
mov
mov
cmp
je
sub
add
test
je
or
sub
xor
add
mov
mov
cmp
je
cmp
je
add
mov
mov
add
xor
add
sub
test
je
sub
sub
test
jne
add
mov
sub
sub
mov
sub
sub
mov
mov
sub
add
mov
mov
and
sub
sub
cmp
jne
mov
mov
add
sub
cmp
jne
sub
cmp
je
mov
or
cmp
je
add
mov
sub
mov
add
cmp
je
mov
sub
mov
cmp
je
add
mov
mov
cmp
jne
mov
sub
cmp
je
mov
test
jne
sub
mov
sub
add
mov
xor
mov
test
jne
sub
mov
mov
test
je
mov
add
xor
mov
add
sub
and
test
jne
add
pop
mov
mov
add
add
sub
or
mov
add
cmp
jne
mov
sub
add
and
sub
pop
mov
xor
cmp
jne
or
add
mov
or
sub
mov
cmp
je
mov
sub
sub
or
cmp
jne
xor
mov
sub
xor
sub
add
and
cmp
je
mov
mov
sub
cmp
je
xor
sub
cmp
je
or
mov
cmp
jne
mov
sub
cmp
jne
add
or
cmp
je
and
pop
add
sub
or
mov
mov
add
or
and
and
sub
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
xor
add
push
mov
sub
mov
mov
add
cmp
je
or
push
mov
sub
sub
mov
sub
mov
cmp
je
cmp
je
mov
mov
or
test
jne
sub
mov
xor
sub
mov
add
add
add
add
add
add
mov
add
cmpl
je
mov
cmp
jne
mov
test
jne
mov
sub
test
jne
test
je
test
je
add
sub
cmp
jne
add
cmp
je
sub
sub
sub
decl
and
mov
sub
sub
sub
add
or
mov
cmp
jne
and
sub
cmp
je
test
jne
sub
cmp
je
mov
add
cmp
jne
sub
sub
mov
add
mov
cmp
jne
sub
and
cmp
jne
and
mov
and
test
jne
mov
add
mov
and
sub
sub
add
addl
cmp
je
mov
addl
add
sub
add
mov
cmp
jne
add
mov
xor
sub
add
cmp
jne
mov
mov
cmp
je
sub
cmp
jne
sub
cmp
jne
sub
mov
test
je
cmp
je
add
mov
cmp
jne
test
je
add
and
or
add
mov
sub
add
add
add
add
xorl
sub
add
cmp
jne
mov
sub
add
add
cmp
jne
mov
test
jne
or
and
sub
cmp
jne
cmp
jne
xor
add
add
jmp
mov
mov
and
add
mov
cmp
je
cmp
je
mov
mov
add
and
add
sub
cmp
je
add
mov
cmp
jne
sub
sub
add
mov
add
mov
sub
test
je
add
mov
sub
mov
sub
or
cmp
jne
sub
mov
xor
add
pop
add
pop
sub
pop
test
je
add
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
xor
mov
mov
and
sub
add
add
and
sub
sub
push
mov
sub
push
add
test
jne
mov
mov
add
add
add
add
add
cmp
jne
mov
and
mov
add
sub
xor
push
or
mov
add
mov
add
sub
xor
sub
sub
sub
mov
sub
xor
sub
and
add
cmp
jne
mov
and
mov
cmp
je
cmp
je
mov
add
cmp
je
add
add
mov
add
xor
add
xor
sub
sub
add
push
mov
add
sub
mov
or
mov
add
xor
add
sub
sub
or
add
sub
add
add
cmp
je
add
sub
or
cmp
je
and
push
test
jne
mov
mov
sub
add
add
test
je
mov
mov
cmp
je
mov
sub
mov
sub
sub
and
sub
or
sub
cmp
jne
mov
add
cmp
je
add
add
mov
sub
add
add
or
push
mov
mov
cmp
jne
sub
xor
mov
test
je
sub
and
add
push
mov
and
cmp
je
or
mov
mov
add
mov
mov
add
and
cmp
jne
cmp
je
add
cmp
jne
mov
sub
add
mov
add
and
sub
add
xor
add
sub
xor
and
xor
call
mov
mov
add
add
add
and
add
mov
or
movl
mov
or
sub
mov
sub
mov
mov
add
test
jne
mov
or
cmp
jne
cmp
je
mov
mov
add
sub
or
sub
cmp
jne
or
mov
mov
cmp
je
add
mov
and
sub
sub
cmp
je
mov
sub
mov
add
sub
add
sub
xor
mov
and
mov
sub
sub
mov
and
add
sub
cmp
jne
cmp
jne
add
cmp
je
mov
mov
and
and
sub
and
cmp
je
mov
cmp
jne
and
cmp
je
cmp
jne
xor
add
cmp
jne
sub
mov
cmp
je
mov
cmp
je
sub
and
add
mov
add
cmp
jne
mov
mov
test
jne
mov
mov
cmp
je
sub
add
add
mov
or
or
and
add
or
je
add
repnz
add
sub
mov
sub
add
cmp
je
mov
test
jne
add
cmp
jne
cmp
je
or
add
addl
cmp
je
sub
sub
cmp
je
test
je
xor
sub
cmp
je
cmp
jne
mov
cmp
jne
add
test
jne
cmp
je
cmp
jne
cmp
je
xor
cmp
jne
sub
cmp
je
sub
cmp
je
mov
and
or
test
jne
and
mov
add
test
jne
and
add
mov
cmp
je
sub
add
and
jmp
add
mov
cmp
jne
mov
sub
mov
add
sub
mov
cmp
je
cmp
jne
mov
add
mov
sub
cmp
jne
cmp
jne
add
add
cmp
je
mov
mov
mov
sub
test
je
sub
and
mov
test
je
mov
and
cmp
je
mov
test
jne
mov
mov
add
cmp
je
mov
test
jne
add
mov
cmp
je
add
mov
add
cmp
jne
and
cmp
jne
mov
mov
add
cmp
jne
and
cmp
jne
sub
add
add
mov
mov
cmp
jne
add
mov
mov
add
sub
add
add
xor
sub
pop
mov
or
cmp
jne
cmp
jne
xor
sub
and
mov
sub
sub
add
test
je
mov
xor
mov
cmp
jne
mov
sub
cmp
je
xor
sub
sub
sub
sub
add
cmp
jne
xor
pop
test
jne
test
jne
mov
mov
sub
add
test
je
or
cmp
je
mov
cmp
jne
mov
or
add
add
pop
add
leave
ret
